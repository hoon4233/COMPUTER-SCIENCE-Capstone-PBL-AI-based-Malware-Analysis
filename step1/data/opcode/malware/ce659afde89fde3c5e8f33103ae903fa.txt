mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
jg
jmp
or
outs
jb
dec
outs
je
sub
jg
test
ins
(bad)
ins
ss
stos
jl
cmp
mov
gs
xor
fisub
cmp
das
add
jns
ffreep
fidiv
shr
push
int3
fs
call
jl
out
push
outs
imul
ins
aas
retf
call
sbb
adc
out
ss
add
(bad)
stc
add
aas
out
fwait
or
push
push
inc
add
lods
loopne
or
je
jbe
dec
jae
je
js
jae
or
xlat
inc
push
pusha
(bad)
and
inc
mov
jo
inc
js
outs
fs
mov
inc
outs
jne
fistp
fsubr
and
pop
out
ins
jo
aas
aam
add
jg
inc
jne
jb
arpl
jmp
add
pop
call
jb
fdivr
es
push
xchg
neg
pop
or
lods
push
adc
das
push
imul
das
dec
sub
or
loopne
sbb
daa
jg
adc
popf
lds
add
inc
enter
outs
cmp
inc
push
jmp
xor
pop
ja
adc
jae
mov
ins
xor
loopne
or
daa
push
or
icebp
hlt
es
push
mov
popa
fisttp
jl
push
adc
or
and
(bad)
adc
push
inc
ins
popa
jae
nop
sbb
push
cld
inc
push
dec
push
inc
push
push
dec
push
mov
rol
xchg
inc
adc
cmp
out
jo
push
xor
sbb
popa
fs
xor
xor
xor
jbe
fdiv
loop
clc
jo
inc
jno
imul
jns
adc
mov
add
gs
pop
add
sbb
cmp
push
addr16
imul
retf
add
std
clc
shl
push
icebp
jb
idiv
lock
gs
adc
xor
xor
push
andps
adc
es
lea
add
(bad)
in
xor
push
in
(bad)
push
push
popa
push
cmp
push
pop
mov
data16
jo
sbb
or
ins
inc
and
add
movs
enter
xchg
pop
aaa
les
pop
jnp
adc
pop
inc
or
dec
dec
jne
mov
inc
adc
imul
or
pop
push
dec
cld
push
fs
adc
test
fs
stos
cli
and
xchg
popa
jge
fadd
mov
add
inc
add
dec
push
push
push
push
mov
jns
aam
(bad)
sub
mov
in
cmp
add
add
loopne
dec
repz
inc
add
inc
inc
pop
xchg
mov
lods
jno
call
xchg
xchg
xchg
xor
ret
into
leave
enter
sbb
fstp
jns
scas
test
sbb
mov
and
pmulhw
sbb
cmc
jle
repnz
idiv
stos
idiv
(bad)
(bad)
cmp
or
push
stc
jmp
outs
psubq
rcl
into
aaa
mov
dec
add
(bad)
cmp
adc
movs
inc
dec
bound
arpl
pusha
mov
push
inc
rol
loope
add
nop
jmp
push
int3
jl
das
and
nop
dec
add
inc
ds
icebp
sbb
inc
or
imul
movs
or
inc
or
push
icebp
add
dec
jnp
or
cmovae
ror
xchg
fldcw
add
or
stc
std
mov
adc
inc
xor
mov
pop
add
ins
mov
jae
shr
add
cmp
mov
jge
jae
pop
imul
inc
fidivr
add
push
popa
shl
jbe
das
jno
movhps
outs
add
xor
push
sub
pop
lods
and
daa
fadd
imul
cwde
pop
adc
jae
outs
ins
jae
ins
pop
or
js
(bad)
aam
cmp
and
ins
inc
fs
sub
es
sub
in
add
in
je
pop
repnz
ret
arpl
je
sub
and
push
ins
jae
pop
mov
mov
push
pusha
data16
inc
adc
cmp
js
or
outs
nop
cmp
ins
jns
pop
xor
ja
in
pop
push
jb
cs
in
push
add
inc
shl
cs
or
xchg
into
mov
mov
jecxz
pop
cmp
mov
call
pusha
add
add
jp
mov
cmp
or
out
push
or
gs
arpl
mov
xor
pop
imul
lock
adc
or
xor
lock
xchg
push
outs
dec
ins
add
cdq
and
jnp
and
pop
mov
push
popa
gs
(bad)
fwait
rol
jo
imul
add
dec
retf
js
ins
rol
adc
push
pop
aam
inc
data16
retf
mov
mov
jge
in
jo
or
fadd
cmp
popa
cmp
or
jo
je
push
dec
add
cmp
shl
inc
aas
or
(bad)
xor
scas
outs
fs
jge
popf
xor
gs
adc
inc
xchg
lock
adc
jns
or
lds
icebp
adc
mov
dec
add
in
ror
in
fs
jbe
or
jne
push
in
or
add
pop
mov
and
or
arpl
call
add
int3
add
jmp
jge
mov
adc
push
imul
lahf
je
push
lock
dec
loope
push
sbb
fdivr
les
pop
aaa
pop
lds
mov
pop
scas
ins
lods
push
js
dec
fimul
ret
js
pushf
popf
or
push
dec
ins
dec
pop
dec
jp
daa
fisub
pop
stos
pop
sub
adc
push
push
xor
and
add
call
sub
int3
xor
(bad)
xchg
ret
and
mov
js
mov
popa
add
loope
cmp
mov
adc
ret
and
mov
ins
pop
das
xchg
and
frstor
adc
add
outs
ins
inc
je
bound
adc
sub
mov
adc
push
loope
mov
lock
or
adc
cdq
sbb
and
push
out
enter
arpl
mov
jmp
push
push
inc
cmp
jmp
or
cmps
dec
cmp
push
fdiv
ret
push
inc
jp
inc
jb
jns
aad
push
or
aad
xor
adc
pop
cwde
out
or
jle
stos
aam
call
mov
das
mov
add
push
add
push
imul
mov
call
xchg
and
or
ins
in
fisttp
pop
xchg
xchg
add
ja
add
mov
mov
adc
jo
dec
shl
xchg
pusha
push
push
cs
movs
jle
push
adc
adc
or
inc
lock
int3
and
lock
jo
leave
add
jae
or
in
mov
hlt
or
or
arpl
bound
pop
mov
sub
movs
sbb
inc
fild
and
or
test
mov
jb
pop
push
sbb
adc
and
sub
or
lea
shl
mov
push
push
aad
pusha
fsubr
jbe
mov
dec
xor
(bad)
dec
sub
ffree
xor
push
addr16
or
fs
lods
push
pop
mov
pop
push
lahf
dec
sar
mov
xchg
add
gs
xchg
sub
adc
push
mov
pop
mov
add
int
inc
cwde
outs
dec
pop
jae
imul
mov
out
mov
outs
fsub
lods
adc
mov
mov
and
push
and
adc
adc
or
popa
lods
inc
xchg
icebp
aam
add
push
and
(bad)
in
and
push
and
add
arpl
sbb
fwait
xchg
cld
and
jne
add
sbb
push
jae
add
ins
push
mov
fbld
sub
shr
jno
test
mov
push
pop
out
cld
adc
sti
inc
mov
pop
ror
cmp
adc
push
mov
out
hlt
das
adc
lea
cmp
std
mov
push
adc
ja
sub
fsub
mov
aam
xor
add
pop
pop
mov
pop
mov
push
dec
outs
fs
mov
or
(bad)
das
aad
mov
mov
sbb
gs
dec
or
adc
arpl
stc
or
das
or
mov
sub
das
adc
dec
lods
ror
sub
jmp
sbb
jecxz
adc
or
clc
xchg
and
jo
pcmpeqb
push
or
push
aaa
in
pop
or
add
test
mov
xor
jae
sbb
xchg
lods
(bad)
mov
fmul
xchg
aaa
push
mov
out
or
xor
outs
cmp
daa
cdq
packsswb
add
out
xor
in
cmps
adc
ins
bound
xchg
add
ret
xchg
adc
mov
jb
adc
pop
or
sub
in
push
pop
lahf
nop
mov
mov
lock
add
ret
nop
xchg
adc
adc
mov
repnz
push
mov
(bad)
sbb
dec
mov
cmp
dec
mov
jae
das
jmp
push
push
mov
pushf
cwde
xchg
nop
leave
leave
leave
leave
mov
leave
leave
jl
je
leave
leave
leave
leave
ins
push
leave
leave
pop
pop
push
push
in
leave
leave
dec
dec
inc
rcr
xchg
fld
pop
cmp
cmp
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
xchg
fcmovne
int3
pop
add
enter
daa
daa
daa
daa
mov
daa
daa
daa
lock
mov
cs
daa
daa
test
in
aad
mov
mov
in
pop
xchg
ret
xor
mov
push
push
sbb
lea
call
nop
nop
push
add
mov
inc
or
imul
inc
and
add
mov
and
mov
inc
mov
addr16
fucomi
loopne
fmul
fsubr
in
mov
push
inc
popa
jp
dec
and
cmps
inc
mov
popa
mov
outs
push
fs
and
arpl
and
xor
xor
sub
push
push
call
and
imul
or
jo
lods
and
and
popa
imul
stos
and
arpl
fs
push
pusha
pop
les
jae
and
push
arpl
(bad)
mov
mov
jae
mov
popaw
dec
leave
(bad)
outs
and
gs
inc
mov
jnp
and
arpl
mov
push
inc
in
int
loope
fld
dec
ficom
cmpxchg
pop
sti
neg
(bad)
mov
mov
mov
mov
dec
add
inc
or
and
or
or
adc
or
adc
outs
cmp
adc
sar
adc
sbb
sub
push
rcr
pop
sbb
cs
jp
add
sub
(bad)
dec
imul
and
cmps
mov
push
nop
inc
add
dec
xor
cmp
push
add
xor
cmp
inc
arpl
pop
add
fs
inc
inc
imul
jmp
retf
jns
fistp
div
cs
push
cmp
add
js
and
xchg
cdq
fldcw
mov
xor
dec
or
mov
add
nop
call
cmp
mov
fild
push
sub
retf
add
mov
jge
call
rol
and
pop
mov
and
je
cmps
sub
jmp
inc
sbb
and
add
xchg
mov
dec
mov
mov
add
std
adc
cli
shl
or
sbb
push
ret
cmp
fist
mov
cld
add
or
adc
dec
add
fsub
mov
sbb
push
add
cmp
dec
pop
out
aad
out
mov
cld
sub
add
xor
mov
xlat
in
or
inc
mov
push
jns
inc
push
mov
call
pop
popf
loopne
out
push
mov
mov
loop
mov
ins
mov
adc
mov
sub
mov
mov
rol
pop
jl
ja
shl
cmp
cmp
mov
adc
stc
frstor
out
inc
mov
pop
cld
ins
mov
dec
sbb
test
sbb
xor
lds
push
push
mov
adc
arpl
clc
add
and
mov
mov
outs
or
into
adc
or
pop
test
cld
test
mov
pop
mov
sbb
add
mov
pop
pop
pop
pop
faddp
add
mov
sub
fist
out
clc
jae
(bad)
jle
adc
mov
push
and
or
imul
call
in
loop
in
(bad)
in
jg
add
(bad)
jmp
or
cmp
in
push
push
lea
jnp
dec
push
shl
mov
push
mov
cmp
jbe
sub
add
jmp
test
jne
cmp
push
mov
add
fimul
or
scas
dec
mov
sub
dec
bound
push
(bad)
loopne
repnz
sub
pusha
add
(bad)
sub
fidivr
inc
mov
mov
mov
data16
sar
(bad)
jbe
jmp
in
ds
adc
call
dec
or
cmp
and
div
(bad)
scas
adc
shl
mov
push
push
aas
dec
and
jae
fdiv
or
push
or
xchg
sbb
sub
dec
mov
xor
add
push
fs
das
mov
jmp
mov
inc
and
or
jbe
add
(bad)
inc
ret
push
addr16
mov
iret
xchg
dec
sbb
test
shr
cmp
jb
dec
push
mov
push
ja
jmp
dec
(bad)
and
es
(bad)
mov
and
fisub
out
push
add
inc
(bad)
add
push
ja
cmc
int3
test
jl
adc
sbb
xor
or
in
push
mov
inc
adc
fidivr
fisub
inc
adc
and
(bad)
(bad)
je
(bad)
sti
jg
test
add
movzx
add
cmp
ja
dec
pop
xor
cmp
dec
clc
pop
or
ja
mov
mov
and
nop
imul
fsub
mov
retf
aas
cmp
xor
je
lods
inc
jnp
fdiv
jmp
inc
and
xchg
test
or
(bad)
movsx
xor
mov
lock
add
cmp
leave
lea
lea
or
push
pop
push
add
cmp
jne
xchg
ja
pop
mov
test
btr
push
cmp
pop
jmp
add
outs
mov
jnp
sub
lea
mov
movs
add
div
cmp
jb
mov
lea
xlat
enter
iret
sub
sub
cmp
and
inc
lock
mov
adc
mov
fs
cld
test
mov
dec
mov
inc
and
loop
mov
add
sub
mov
addr16
test
bound
inc
dec
mov
arpl
fs
mov
lds
fucomip
movs
or
fadd
pop
jle
xor
jne
lea
hlt
add
cld
or
push
and
or
loopne
ror
jmp
dec
fistp
xchg
cmp
popf
(bad)
xor
mov
loopne
sub
shl
push
xor
add
sbb
fdivr
cmp
inc
mov
jmp
mov
dec
ret
jo
pop
or
clc
add
cmp
(bad)
xchg
add
cwde
inc
xchg
adc
test
push
pop
xor
ret
pusha
mov
jb
xchg
or
test
test
pop
inc
jns
or
push
add
sub
add
clc
lahf
add
mov
jne
sub
je
pop
pop
push
lds
ror
pop
inc
js
push
mov
mov
push
retf
leave
pushf
fimul
xor
loop
push
or
rcl
sub
and
and
iret
dec
es
bound
pop
pop
jne
push
xlat
leave
outs
out
xor
jmp
mov
sub
enter
(bad)
out
mov
clc
and
fmul
scas
test
sub
xor
test
jne
cmp
mov
mov
add
push
ss
mov
xlat
mov
lds
mov
je
add
cmp
out
ret
mov
into
sub
mov
xor
sub
ret
hlt
mov
lahf
test
idiv
adc
cmp
sbb
add
or
fmul
mov
js
js
mov
loop
ins
sub
add
xor
out
push
in
or
xlat
pop
mov
in
or
cmp
jb
xor
mov
retf
jb
jns
clc
das
sub
jb
mov
ret
call
std
ds
in
and
dec
or
push
mov
sti
mov
loop
rol
add
hlt
div
js
iret
mov
jl
jo
in
call
xchg
fild
dec
xchg
les
ror
mov
cmp
jecxz
cmp
xor
setae
cmp
dec
pop
loope
jb
and
cli
sub
loopne
jle
jae
push
int3
push
mov
pop
mov
lea
add
sub
sbb
inc
cmp
jnp
mov
jno
jge
inc
or
add
mov
cld
or
mov
fcomp
mov
mov
add
or
adc
pop
lds
push
rol
xlat
sub
idiv
mov
add
inc
loop
pop
lea
mov
lds
loope
call
mov
fdiv
mov
xchg
loopne
cmp
cmp
adc
xor
pop
mov
iret
ror
push
sar
sti
xlat
je
iret
ja
cmp
push
pop
mov
call
jmp
rol
loopne
fiadd
xor
cld
int
push
ret
and
push
add
push
jle
ret
push
add
lea
jl
lock
mov
pop
add
inc
or
mov
push
or
ror
pop
ds
dec
iret
push
gs
rol
ret
xchg
adc
mov
sbb
and
idiv
inc
sbb
push
lea
jecxz
(bad)
call
ja
leave
lea
or
jae
neg
fldz
fst
rol
or
or
rcr
mov
sbb
adc
add
mov
sbb
dec
jne
xor
push
fbstp
adc
cmp
shl
dec
mov
jne
jae
rcl
sbb
push
mov
jg
mov
sub
mov
in
fistp
cmp
jne
mov
pop
adc
sbb
jmp
sbb
neg
mov
add
fmul
jnp
icebp
adc
add
xor
mov
mov
sbb
ret
xor
div
mov
ret
add
push
sub
idiv
mov
inc
mov
add
mov
adc
test
jne
mov
xor
sbb
add
cmp
sub
rcl
mov
mov
test
shl
rcr
sti
in
sub
mov
inc
inc
ds
xor
pop
div
cdq
xor
addr16
push
rcr
xor
push
mov
ins
adc
out
jbe
fist
cld
add
pusha
mov
push
in
cmp
ja
mov
fbstp
push
lock
jae
xor
leave
mov
push
adc
fcmovne
clc
add
push
xchg
add
push
adc
js
add
adc
test
je
adc
xor
aaa
adc
add
jmp
mov
pop
pop
inc
or
sbb
mov
and
sub
lods
jge
push
push
cmp
test
popa
or
pop
es
and
out
aas
sbb
push
daa
test
daa
jmp
mov
lea
mov
and
out
jne
push
cdq
cmp
shl
push
(bad)
pushf
in
sbb
(bad)
(bad)
dec
icebp
mov
push
sbb
repnz
pop
mov
dec
xchg
sbb
js
add
jne
cli
or
hlt
(bad)
and
cmp
mov
pop
ret
mov
dec
movs
sub
aas
inc
mov
sbb
add
mov
out
add
mov
mov
hlt
xor
mov
jl
popa
mov
inc
pop
mov
cmp
jne
add
jnp
and
or
jge
inc
dec
jne
mov
loope
fdivr
add
mov
cmp
add
cmp
mov
add
dec
inc
(bad)
push
push
mov
sti
sbb
pop
div
or
test
mov
outs
add
dec
inc
or
cmp
je
aaa
and
clc
test
cmp
add
add
cmps
sti
test
jnp
inc
hlt
adc
mov
icebp
lds
jle
jge
ret
add
fist
adc
jecxz
dec
dec
dec
mov
cmp
add
cdq
test
mov
shr
out
jae
dec
aas
ror
adc
adc
fidiv
test
adc
cmp
stos
and
xor
and
add
mov
and
mov
fdiv
cmp
fadd
mov
mov
call
and
call
enter
and
cdq
fild
xchg
das
mov
sub
mov
je
or
jnp
cld
add
xchg
movq
test
(bad)
inc
fiadd
das
mov
(bad)
fmul
xchg
inc
mov
daa
sbb
add
fstp
jne
data16
test
test
mov
paddd
and
pop
adc
inc
jno
and
dec
mov
mov
out
sbb
pop
add
cmps
in
lock
xor
test
add
or
jmp
cs
pop
jmp
mov
out
(bad)
aaa
and
add
mov
and
nop
cdq
cmp
(bad)
(bad)
mov
jbe
sbb
xchg
cmp
push
sub
lds
out
jecxz
mov
clc
xlat
xchg
inc
jb
mov
jmp
inc
enter
adc
mov
std
xchg
fcom
xchg
sti
mov
je
dec
jl
cmp
mov
push
sbb
arpl
clc
adc
fadd
ja
sub
mov
in
fadd
out
in
loope
jge
xchg
in
not
imul
mov
(bad)
retf
pandn
sub
cmp
xchg
adc
aas
adc
jne
mov
inc
fisub
pop
add
push
jae
loopne
mov
inc
push
or
ja
mov
out
jge
add
cs
pop
jnp
adc
xchg
jne
xor
jmp
sub
add
mov
je
dec
je
jmp
in
das
cmp
(bad)
inc
mov
mov
je
or
inc
cld
and
hlt
js
push
xchg
mov
lds
sahf
pop
(bad)
stos
mov
push
cmp
fist
pcmpeqw
xchg
sbb
sub
icebp
xor
add
or
sbb
sbb
out
adc
push
mov
mov
shl
je
dec
pop
jb
inc
xor
mov
rcl
sti
es
xlat
out
inc
xor
or
aaa
jne
cmp
dec
jne
mov
adc
mov
or
test
jo
les
idiv
std
adc
movs
jle
ja
cmp
out
add
cmp
jbe
mov
fild
ja
call
aaa
jne
mov
mov
cmp
push
lahf
mov
mov
in
inc
lock
sub
adc
retf
inc
hlt
stc
cs
rcr
(bad)
inc
add
add
mov
shr
cmp
jbe
(bad)
or
add
mov
shl
add
call
sbb
mov
(bad)
xor
loope
lea
add
popf
and
jae
mov
or
mov
sti
adc
dec
push
mov
imul
mov
jb
push
data16
jmp
shl
pop
xor
mov
mov
outs
mov
mov
ret
cmp
stos
adc
inc
dec
pop
adc
out
mov
pushf
adc
push
mov
jne
sub
mov
xchg
push
call
mov
cmp
jne
mov
jle
mov
or
inc
(bad)
or
leave
push
adc
and
stos
ss
imul
or
jmp
inc
nop
adc
add
popf
add
(bad)
jle
jo
enter
xrelease
mov
mov
cmp
(bad)
ret
fisttp
sbb
sbb
or
mov
adc
sub
adc
sbb
std
push
test
jl
test
adc
repz
mov
or
push
push
cmp
ret
push
dec
aam
cmp
cmp
pop
cmp
jnp
lods
or
pusha
addr16
repz
aas
stos
jl
lahf
fs
jne
lahf
mov
test
je
icebp
imul
sbb
enter
or
add
adc
jae
jmp
dec
xchg
xor
frstor
mov
and
je
sbb
stos
xchg
inc
or
aas
(bad)
sub
push
and
push
pusha
(bad)
pop
or
mov
cmp
fld
out
cmps
cli
ins
gs
mov
div
loope
repnz
and
out
jns
mov
jge
test
cmp
test
jne
outs
cwde
mov
sbb
or
mov
add
js
adc
aaa
mov
daa
(bad)
push
mov
push
add
das
in
int3
xor
les
or
xor
add
pop
pop
pop
jne
xor
pop
clc
ss
call
enter
rcr
push
add
fcom
je
cmp
ja
sub
jg
jmp
loopne
cwde
push
sub
or
dec
push
adc
sbb
or
push
or
loop
nop
mov
mov
jns
out
push
dec
pop
pop
push
out
push
mov
dec
or
adc
fld
fcom
or
jl
pushf
sbb
fistp
cmp
jle
or
shr
retf
adc
jbe
adc
cmp
add
and
sub
pop
inc
cmc
pop
jae
sbb
mov
ds
jecxz
inc
mov
add
mov
(bad)
and
pushf
pop
xlat
and
add
cmp
cmp
push
add
add
(bad)
cmp
cli
jo
mov
jmp
mov
pushf
adc
add
out
cli
and
cmp
jne
or
add
enter
mov
imul
and
pop
jmp
inc
imul
ss
cmp
pop
mov
retf
fmul
bound
xlat
fisubr
sub
pop
es
test
dec
adc
jmp
daa
cmp
dec
inc
loopne
ja
(bad)
hlt
std
in
aam
test
in
(bad)
clc
test
jne
push
add
or
add
mov
jmp
and
cmp
mov
ja
and
test
fadd
dec
jmp
sbb
jmp
add
adc
and
mov
arpl
xchg
sbb
or
fld
sbb
inc
mov
(bad)
sub
fnclex
fldcw
xor
push
out
pop
adc
or
ficom
scas
sbb
(bad)
(bad)
sti
mov
out
in
add
fnstcw
fwait
or
lock
ins
or
cld
fldcw
es
lock
call
fmulp
data16
jmp
call
and
fstp
or
in
cs
fwait
and
js
lock
in
pop
and
pop
pop
mov
fcmovbe
iret
fistp
add
pop
inc
retf
jge
cmp
adc
hlt
cmp
rcr
or
or
lea
push
mov
push
mov
repz
adc
push
cmp
jae
cld
stos
push
sub
push
call
sbb
push
adc
mov
add
jbe
es
xchg
push
pop
mov
push
or
lahf
fcom
adc
das
js
adc
rol
mov
js
enter
cmp
test
xor
xor
jbe
rol
adc
test
cmp
sub
dec
je
or
in
ds
call
clc
sbb
out
out
fucomp
and
inc
mov
rol
popa
dec
and
jnp
push
lea
movs
xor
adc
adc
sbb
pushf
fiadd
sbb
js
jg
cmp
sti
sbb
test
inc
loopne
mov
mov
in
jg
sbb
mov
jmp
push
adc
mov
cwde
popa
movs
data16
xor
add
loopne
sbb
xchg
adc
mov
movs
imul
cld
clc
loop
add
fsub
retf
mov
push
lods
loope
sub
dec
mov
pop
aaa
js
adc
in
xlat
push
xor
int
ret
cld
push
sub
adc
out
and
cmp
not
mov
test
jge
inc
add
sbb
jbe
dec
inc
je
and
sbb
add
mov
jbe
pusha
clc
aas
xor
cwde
jb
inc
test
cmp
jne
push
cmp
and
(bad)
sub
leave
or
hlt
mov
jo
cmp
jmp
inc
xor
mov
inc
mov
ret
and
ds
(bad)
mov
dec
je
jmp
cmp
mov
repnz
pop
cmp
xchg
mov
cmp
test
call
div
xchg
movzx
sub
das
push
xchg
jg
push
add
sahf
jmp
adc
ds
(bad)
jge
lea
dec
test
or
push
add
pushf
sub
lahf
dec
mov
(bad)
shl
add
add
jmp
cmp
cmp
xlat
add
add
es
test
cdq
pusha
les
push
sbb
aas
jo
push
xor
addr16
icebp
fwait
inc
bound
lds
cmp
jne
fs
cld
adc
out
push
xchg
adc
push
or
adc
cmp
cmp
inc
dec
retf
retf
fs
lods
outs
fdiv
int3
cld
mov
je
movs
pusha
ins
push
add
rcl
push
xchg
push
jne
mov
jo
pop
test
gs
les
cmp
cmps
ds
ret
ins
js
cmp
inc
ja
and
pusha
jo
adc
fcom
add
adc
and
stos
jle
inc
(bad)
fucomp
adc
fs
or
lds
aas
pop
pop
dec
add
call
iret
add
lods
fld
fst
fst
mov
std
push
push
loope
loope
mov
add
neg
loopne
sub
sub
dec
outs
inc
push
push
jle
mov
and
inc
lea
mov
loop
xchg
sbb
sbb
jns
out
push
adc
adc
fnstsw
push
or
inc
rol
push
or
scas
and
mov
inc
aam
fdivr
mov
add
cs
(bad)
mov
xor
mov
pusha
mov
mov
add
xchg
ss
jb
jae
and
inc
add
dec
shl
pusha
icebp
mov
cmp
inc
fimul
add
add
ins
inc
je
imul
je
stos
sbb
rcl
in
fxch
push
xlat
push
push
sbb
je
in
aas
mov
add
jmp
cmc
aas
sbb
ror
jmp
or
pop
or
out
push
inc
nop
xlat
fdivr
pusha
mov
stos
je
xor
mov
xchg
mov
cmp
je
mov
sti
sub
mov
jb
je
js
outs
pop
je
jp
arpl
xor
arpl
push
push
adc
jp
daa
js
xor
aaa
add
or
cmp
ja
mov
rol
gs
jo
sub
dec
jmp
dec
fs
push
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
fimul
addr16
sahf
popa
jb
mov
push
jl
popa
mov
add
or
pushaw
jg
mov
retf
mov
add
mov
pop
add
out
inc
cld
or
mov
mov
jl
sub
inc
mov
rol
xor
jae
or
pop
daa
inc
jecxz
popa
sbb
cs
push
shl
fidiv
mov
(bad)
cmp
ja
dec
mov
xor
test
dec
mov
push
test
jmp
loopne
pop
jmp
stos
dec
mov
je
daa
idiv
mov
push
stos
(bad)
aam
loope
dec
je
and
sub
mov
push
cmp
jne
cwde
mov
mov
cmp
jg
fstp
repz
sbb
mov
inc
or
inc
dec
jne
push
sti
cmp
leave
fcom
scas
icebp
sub
pusha
pop
sahf
jge
mov
sub
push
pop
nop
adc
bound
jl
int3
call
mov
ret
aaa
adc
fld
enter
inc
je
sub
je
das
out
cmp
retf
add
popa
jo
inc
xchg
jmp
mov
push
mov
xor
das
test
jmp
fstp
fld
and
add
fldz
and
add
adc
cmp
ret
push
pushf
pop
pop
xor
add
xor
je
xor
mov
std
or
mov
inc
add
inc
sbb
jg
cmp
and
in
mov
mov
std
push
mov
ins
fadd
hlt
mov
xlat
jg
(bad)
push
test
jmp
push
add
in
iret
cmp
rcl
push
and
push
mov
lea
xchg
push
fcomp
inc
test
lock
out
mov
push
fwait
and
and
adc
add
ja
adc
push
sete
pop
pop
pop
mov
push
cmp
push
pop
adc
xchg
dec
or
mov
sar
ret
fld
ss
pop
and
pop
aaa
stc
rcl
dec
dec
ror
test
cmps
(bad)
aam
jnp
mov
movups
(bad)
fnsave
or
dec
mov
pusha
inc
loopne
dec
ja
mov
mov
call
ss
ret
pop
or
stos
mov
loop
and
dec
rep
pop
and
mov
ror
push
or
add
pop
dec
sbb
pop
aad
stos
jmp
cmp
je
pop
mov
adc
jnp
mov
push
sbb
cmp
pusha
add
(bad)
mov
mov
jbe
rol
jns
mov
fucompp
ror
movs
jmp
rol
jge
jae
paddd
movsx
and
and
loope
mov
pusha
or
ror
inc
test
push
cmp
mov
pop
mov
outs
ins
pop
pop
cld
jb
clc
mov
mov
repz
mov
add
cli
daa
fmul
shl
inc
out
adc
clc
mov
pop
sub
push
adc
add
jmp
jmp
in
sub
dec
mov
out
inc
or
clc
clc
xchg
mov
adc
test
xor
leave
cli
push
clc
inc
pushf
call
test
nop
pop
mov
mov
nop
loope
sub
les
(bad)
mov
cmp
add
push
or
jb
push
or
inc
call
lds
inc
dec
je
add
jg
(bad)
jecxz
pop
inc
retf
add
add
enter
adc
push
call
(bad)
jae
jmp
push
icebp
add
adc
mov
add
test
push
sbb
jg
push
les
popf
call
pop
loopne
jnp
cmc
inc
(bad)
repnz
or
or
add
jmp
cld
push
pop
mov
or
out
rol
jecxz
fs
push
aaa
enter
cmp
xor
mov
ror
pop
pop
jo
in
push
xchg
std
pop
add
and
movzx
push
add
repnz
shl
jo
in
pushf
int3
mov
push
mov
add
sub
push
xchg
test
pop
rol
jmp
pop
sahf
xchg
enter
movs
es
sub
scas
push
jne
daa
ret
pop
jne
movs
rcr
cmps
mov
xlat
rol
cwde
rcl
and
das
pop
dec
or
shl
or
add
pop
mov
push
jp
shl
xchg
mov
stos
lea
inc
pop
pop
movs
inc
jbe
jmp
dec
and
int3
cmp
dec
in
lea
inc
fcom
push
mov
jne
mov
jae
cmp
leave
xor
mov
loope
jo
es
loope
xchg
ds
bound
cld
es
mov
cmp
sub
push
add
dec
jne
sbb
fmul
loope
jmp
pop
jmp
push
lea
dec
add
mov
pop
pop
je
jmp
mov
mov
test
jne
xor
psubusw
jecxz
jne
pusha
out
add
inc
mov
inc
or
ja
inc
std
icebp
xor
mov
jl
inc
adc
int
push
sub
fdiv
xor
xchg
adc
cmp
je
rol
(bad)
repz
adc
pop
jle
lea
ds
inc
mov
pop
add
dec
in
out
or
xchg
mov
and
in
xor
jmp
fcomp
cmp
jmp
repz
inc
lock
sbb
jecxz
iret
in
rcl
add
pop
iret
dec
je
pop
outs
call
in
hlt
xor
lea
mov
loopne
sbb
mov
mov
dec
pop
xchg
push
pop
(bad)
outs
or
je
call
push
jb
mov
pusha
and
sbb
call
xchg
xor
jmp
xor
push
push
xor
pusha
cmp
and
xor
ins
add
sahf
movs
mov
sbb
or
rcr
dec
sub
ja
or
out
xor
jg
cmp
add
jg
sbb
or
jmp
mov
inc
retf
(bad)
inc
pushf
xor
enter
add
stc
add
adc
or
jecxz
adc
js
les
add
or
pop
xor
push
outs
lock
les
(bad)
mov
test
(bad)
mov
cmp
sahf
les
enter
pop
cli
xor
mov
std
add
add
pause
dec
push
jg
add
pop
cmp
dec
pop
mov
or
lock
clc
and
sar
inc
pop
sub
ret
mov
inc
fidiv
lds
pop
ins
fistp
arpl
jge
jbe
add
push
outs
stos
push
jne
cmp
jne
nop
neg
inc
pop
add
in
das
rcr
sub
dec
push
fdiv
ja
mov
call
ror
pop
adc
add
push
inc
jmp
popa
ins
push
jb
arpl
outs
jb
push
ins
test
and
add
ins
push
daa
mov
cmp
test
test
cwde
cmp
loopne
mov
sbb
lahf
pop
or
test
sbb
push
xchg
ins
hlt
push
add
adc
sbb
movs
xor
or
mov
push
adc
push
xor
movs
or
ret
add
xlat
sbb
bnd
inc
fdiv
xor
mov
cmps
add
dec
test
outs
paddb
push
inc
xchg
dec
int3
cmp
lods
shl
sbb
sub
adc
pop
xor
dec
push
mov
mov
movs
lods
add
or
sti
mov
or
std
or
adc
add
mov
or
leave
pop
mov
xchg
jle
push
or
or
mov
adc
push
adc
xor
sub
push
(bad)
lock
push
outs
or
aas
sbb
cdq
clc
and
es
and
arpl
push
mov
cmp
rcl
mov
stos
cmp
sub
fs
push
sbb
mov
inc
dec
inc
add
push
mov
mov
cmps
and
loopne
push
sub
mov
(bad)
inc
inc
push
lea
xchg
shr
or
jne
dec
scas
push
adc
mov
pushf
ror
cmp
push
test
xchg
into
call
or
add
js
and
jg
push
fdiv
ret
clc
xor
add
add
inc
add
inc
cmp
lock
cmp
cmps
push
cwd
sidtd
mov
pop
inc
cmp
les
lock
pop
in
cli
dec
cmp
xor
push
mov
shl
je
leave
pusha
loopne
sbb
(bad)
ss
call
stc
dec
fs
mov
push
nop
and
xor
inc
dec
ja
adc
or
sbb
adc
shr
fimul
mov
add
sbb
mov
cmp
rcr
sub
jmp
mov
cmp
mov
int3
mov
add
push
xor
call
stos
sbb
jecxz
pusha
xor
pop
adc
js
sbb
aam
repnz
jo
iret
push
jl
mov
adc
mov
lods
ins
push
adc
jmp
and
popa
test
bound
pusha
adc
ror
mov
sbb
in
stos
sub
add
popa
cmp
fs
cmp
loope
adc
test
xlat
push
xchg
test
ss
cmp
fiadd
jmp
cmp
jne
aaa
adc
dec
mov
cld
cmp
ss
test
jmp
push
or
push
fldcw
inc
enter
or
push
fs
in
xchg
jne
jmp
loopne
and
dec
in
mov
jecxz
mov
call
fidiv
sub
sbb
rol
call
adc
push
xor
push
sbb
adc
cli
sub
inc
pop
lea
xchg
mov
pop
cdq
call
mov
pop
sub
inc
sti
jl
jmp
mov
mov
int3
jno
ins
mov
into
and
add
in
and
or
in
(bad)
sti
and
mov
ret
into
xchg
adc
out
stc
inc
hlt
push
mov
iret
pop
push
ja
bound
repz
cmp
adc
int
add
push
call
and
aaa
ds
push
push
adc
adc
cmp
imul
add
xchg
ds
mov
push
sbb
xlat
pop
push
push
and
add
inc
dec
cmp
je
or
push
out
push
(bad)
jne
movsx
inc
inc
mov
add
inc
mov
or
addr16
jecxz
fcom
xchg
je
dec
mov
fs
push
aas
loop
cld
pop
fiadd
cmp
(bad)
jecxz
je
mov
test
test
cmp
inc
mov
adc
add
ret
call
sar
les
ror
out
fisttp
retf
cmp
je
mov
je
xor
sub
inc
ins
lock
push
sbb
xchg
pop
jbe
(bad)
fiadd
cli
mov
dec
dec
or
xor
jne
push
jne
push
jg
push
mov
cli
push
jns
je
or
xor
add
ficomp
push
inc
das
cmp
cmp
sub
iret
inc
sub
scas
sti
movs
inc
push
mov
mov
mov
imul
jno
add
sar
loopne
out
not
mov
inc
mov
push
outs
je
dec
jb
enter
add
mov
cmp
sbb
cwde
push
or
pop
dec
nop
sub
lea
mov
mov
ins
inc
or
sub
mov
repnz
call
push
int3
cmp
inc
enter
fucomi
dec
xor
mov
cmp
jne
inc
inc
mov
jg
push
sub
push
clc
(bad)
or
rcr
xor
ja
mov
out
daa
nop
mov
mov
adc
push
push
cmp
lds
add
das
push
xadd
pop
and
dec
inc
lds
lods
out
mov
arpl
sub
mov
test
imul
pushf
and
adc
aaa
add
dec
add
fimul
or
call
std
sub
test
inc
add
jecxz
and
ror
add
test
in
cs
pop
inc
imul
outs
or
fcom
ss
and
push
push
push
inc
push
aad
push
mov
push
mov
cmp
jo
add
xor
or
xor
pusha
xor
sar
jp
lods
mov
pop
cdq
mov
adc
in
nop
cmps
xor
or
lea
xor
add
test
fwait
jbe
lahf
loopne
mov
add
xlat
or
push
pop
enter
cmps
loopne
sbb
(bad)
adc
adc
cld
ins
rcl
sub
pop
(bad)
sti
sahf
or
and
jmp
ret
xor
nop
xchg
add
rcl
xor
and
loopne
jecxz
dec
xchg
cmp
inc
push
jg
je
cmp
push
sub
aam
sub
dec
jmp
add
sub
jb
imul
std
je
jmp
cmp
sub
adc
call
jge
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
(bad)
(bad)
sti
and
sbb
into
jmp
mov
jmp
mov
jmp
mov
(bad)
xchg
retf
movzx
push
or
mov
je
mov
pop
minps
xor
pop
je
push
dec
sub
dec
(bad)
and
out
pop
ins
jp
sbb
push
inc
daa
xchg
inc
(bad)
in
(bad)
in
ds
mov
jmp
push
cmp
or
or
push
or
push
(bad)
push
adc
or
push
dec
jne
xor
push
inc
inc
lock
cmp
cmps
fmulp
mov
hlt
mov
pop
shl
and
xchg
(bad)
div
mov
push
out
sbb
inc
loop
cmp
cmp
jne
xchg
add
mov
pcmpgtd
fs
pop
push
mov
mov
pop
ss
(bad)
ins
cmp
mov
je
cwde
push
pop
rol
or
(bad)
xor
xlat
jmp
jne
jne
add
pop
add
mov
xchg
push
mov
mov
inc
test
xor
inc
ins
gs
loop
cmp
jle
hlt
xor
inc
fist
mov
jg
xlat
call
add
out
jns
mov
lods
xor
bound
mov
pop
cmp
add
mov
add
in
dec
cmc
xchg
add
(bad)
mov
dec
cmps
ins
cmp
ins
mov
aaa
cmps
cmp
(bad)
jge
adc
popf
inc
outs
or
ror
or
xor
push
sub
sbb
add
mov
outs
sti
adc
dec
or
dec
je
add
int3
pop
pop
(bad)
jmp
out
mov
jmp
pop
inc
add
dec
jne
pop
pop
fistp
sti
aas
xchg
mov
inc
or
scas
add
sub
adc
mov
inc
(bad)
ins
adc
xchg
call
mov
pop
and
(bad)
dec
sbb
push
int3
fdiv
mov
pop
(bad)
dec
or
adc
mov
mov
js
adc
add
mov
outs
adc
ja
add
mov
mov
fwait
in
rep
cmp
add
inc
leave
(bad)
inc
aad
mov
push
dec
pop
pop
inc
or
cmp
loope
cmp
mov
cmp
jo
mov
in
pop
enter
xor
add
call
adc
ret
retf
jne
repnz
popf
jo
add
loop
mov
mov
lock
fsubr
jmp
ror
push
ss
push
sar
nop
cmp
btc
dec
inc
pop
adc
cmp
out
add
imul
mov
call
sete
jge
jne
xor
jne
es
add
fdiv
lahf
inc
adc
and
test
xor
mov
imul
inc
pop
mov
pushf
dec
inc
(bad)
push
movs
pop
outs
js
or
xor
or
loopne
mov
rcl
ja
loopne
push
and
je
ss
xchg
inc
ins
jne
mov
sub
mov
push
sar
lock
pop
add
fwait
inc
pusha
pop
aad
jb
scas
mov
iret
dec
cmp
es
add
xor
pop
push
fld
dec
add
cmp
repnz
adc
or
int3
xchg
pop
sub
sub
lock
push
(bad)
adc
inc
push
sub
mov
push
dec
or
mov
rcr
call
xor
add
or
mov
mov
jmp
jge
cmp
pop
and
push
mov
repnz
adc
fdivr
or
push
mov
mov
push
jmp
(bad)
pop
adc
jno
mov
mov
jb
or
or
jae
jmp
adc
mov
cmp
or
adc
call
cmp
shl
out
outs
xchg
jo
jmp
pop
mov
jb
data16
sub
inc
invd
adc
and
adc
pop
xor
hlt
cdq
inc
jl
jns
out
ds
push
ja
and
imul
clc
jl
(bad)
xchg
pop
fistp
mov
int3
mov
mov
xchg
(bad)
xchg
(bad)
(bad)
cwde
enter
lds
retf
(bad)
mov
sbb
push
dec
clc
dec
jl
lock
loopne
dec
hlt
out
inc
cmp
jb
push
sub
lock
pop
dec
into
(bad)
mov
cmp
in
jb
sbb
add
inc
scas
add
ret
mov
mov
mov
mov
inc
call
inc
in
shl
jle
mov
jecxz
cmp
ja
sar
shr
mov
inc
pop
inc
shr
push
mov
cmp
sbb
pushf
push
sbb
xor
pusha
and
inc
bound
xor
ret
out
sbb
dec
and
aaa
jnp
pop
imul
stos
push
aas
add
dec
mov
mov
fmul
push
ret
adc
loope
cmp
arpl
cmp
lock
popa
pop
pop
and
push
xor
lods
call
or
inc
xor
jmp
and
cld
jb
jg
clc
outs
lods
or
clc
jmp
lea
cmp
mov
jge
cld
out
ins
outs
add
dec
cld
mov
jle
lea
xor
mov
lea
call
sbb
jb
jne
ins
popa
int3
fimul
and
rol
sbb
sub
mov
gs
inc
arpl
and
push
or
inc
inc
mov
js
inc
aas
mov
cmp
adc
xor
inc
sbb
push
scas
cmps
js
sbb
xor
mov
push
aam
sbb
push
mov
je
mov
jle
dec
sub
dec
pop
push
cli
pop
add
lods
sbb
mov
inc
mov
add
jmp
mov
pop
push
dec
cld
lods
pop
pop
jmp
push
cmps
pop
mov
xchg
adc
stos
(bad)
mov
xchg
or
lahf
icebp
cmp
je
stos
call
(bad)
rcl
adc
push
inc
mov
jo
pop
gs
dec
addr16
ret
inc
sub
push
xchg
push
and
adc
nop
inc
mov
cld
jg
jae
(bad)
ficomp
or
add
cmp
add
in
iret
dec
add
push
sub
dec
cmp
ret
pop
popf
xchg
int3
in
sbb
inc
ret
or
mov
cmp
mov
fisttp
mov
mov
pop
push
adc
(bad)
cmp
mov
inc
inc
sub
ja
add
push
or
movups
or
mov
cmp
jne
dec
pop
test
mov
add
aaa
mov
cs
push
dec
adc
pop
imul
add
push
cmp
jne
push
adc
add
adc
push
jne
add
jmp
pop
cmp
cmp
jne
shr
shr
std
or
mov
out
push
call
mov
dec
pop
cmp
lea
sbb
add
and
jns
stos
loopne
pop
xor
dec
dec
inc
sar
dec
sbb
or
dec
mov
or
arpl
sbb
cmp
jbe
push
enter
mov
inc
inc
sbb
xor
dec
outs
sysenter
(bad)
xchg
mov
mov
cmp
inc
add
jb
cmp
ja
mov
dec
mov
inc
add
rep
push
mov
mov
pcmpeqd
mov
jmp
ss
mov
push
mov
je
sbb
cmp
jg
movs
inc
test
shl
leave
jl
cmp
jg
add
mov
inc
outs
jmp
sbb
jmp
es
mov
call
jle
stc
nop
push
mov
push
mov
popa
push
std
pop
ret
push
mov
pusha
nop
je
(bad)
je
retf
or
in
ror
sub
shr
iret
fimul
out
addr16
and
pusha
pop
pop
mov
je
push
outs
or
in
add
jnp
jle
push
mov
inc
mov
outs
push
push
push
push
repnz
fadd
sti
stos
adc
pop
add
pop
pop
pop
cmp
pushf
xor
push
dec
lods
loop
push
nop
je
cwde
jl
fnstenv
inc
mov
stos
xchg
data16
es
sar
push
std
cmp
mov
inc
fld
pop
push
cld
add
jo
push
je
call
add
dec
xor
lea
ror
mov
lods
loopne
mov
or
xor
adc
or
mov
xor
mov
inc
cld
dec
jmp
test
push
add
jo
jge
cmp
pop
iret
call
xchg
xlat
je
mov
or
in
jl
dec
test
and
aaa
dec
in
push
pusha
cmp
or
popa
and
pushf
sbb
bnd
icebp
das
test
jne
mov
sub
push
inc
fadd
inc
add
xor
xchg
adc
or
pop
pop
lea
jmp
xchg
sahf
jmp
sub
je
jne
push
lea
lea
pop
push
push
shl
fidivr
fmul
loope
mov
adc
dec
sub
shl
cmp
ret
cmp
cmps
ins
fstp
push
or
add
aaa
hlt
out
or
and
xor
push
cdq
pushf
ret
mov
ret
daa
xchg
add
add
shr
pop
dec
cmp
jge
xor
stos
sbb
jle
sub
cmp
cmp
(bad)
icebp
mov
add
daa
rcl
mov
sahf
sbb
mov
sub
es
pop
jecxz
sub
sub
nop
xor
adc
dec
jg
cmp
sub
mov
in
call
fadd
icebp
rcl
dec
push
shr
xchg
lock
inc
adc
jmp
push
inc
cmp
test
icebp
cs
call
movs
cmps
jg
add
pop
mov
xchg
retf
imul
sbb
nop
popa
inc
xor
in
pop
aam
dec
mov
ret
adc
hlt
pop
dec
gs
sub
inc
push
jg
mov
test
clc
pop
js
xchg
ret
lds
mov
and
push
ret
ror
sbb
retf
add
sub
dec
dec
mov
sti
fcomp
mov
or
fmul
test
jmp
push
test
mov
out
jb
push
jne
aaa
hlt
movs
push
in
cld
test
outs
mov
pop
add
inc
and
sbb
fucomp
push
cmps
or
pop
das
or
adc
(bad)
or
mov
pop
jge
jmp
mov
stos
or
loope
mov
inc
cmps
xchg
lock
add
add
in
ret
xchg
idiv
sbb
jg
fs
jl
mov
(bad)
sub
sub
jno
fcomp
into
or
loop
jmp
(bad)
pop
fiadd
adc
aad
(bad)
neg
push
lds
pop
sub
pop
push
jo
sbb
bound
mov
xchg
push
test
fld
xor
pop
rol
pusha
lock
lock
cmp
sbb
out
stos
jns
sbb
cs
je
cmp
mov
daa
mov
mov
push
mov
adc
mov
fistp
push
dec
cmp
mov
or
push
push
add
pop
sbb
into
imul
mov
or
inc
adc
xor
das
test
ror
scas
xor
or
jne
and
stc
loop
ret
bound
pop
out
out
jp
inc
or
les
mov
lock
xor
mov
shl
jl
jbe
aaa
xor
mov
jg
std
aaa
push
loopne
outs
add
jo
inc
push
jo
push
add
or
or
cmp
aam
leave
adc
adc
dec
pop
adc
adc
mov
inc
pop
pop
repz
test
push
push
out
jb
dec
shl
ss
mov
dec
dec
outs
or
add
adc
or
ins
fdivr
pop
data16
dec
jae
xlat
ror
ficomp
cld
add
jnp
mov
ins
dec
mov
jmp
add
or
inc
pop
inc
cli
cmp
dec
movs
or
mov
cmp
or
adc
xor
dec
adc
iret
sub
shl
xor
arpl
adc
inc
add
sub
out
sub
nop
xor
and
dec
add
and
leave
push
push
mov
cmp
jne
adc
pop
sahf
rol
sbb
(bad)
cmp
das
out
adc
inc
push
push
rol
into
jns
push
ror
xchg
or
ss
loopne
ins
sar
dec
cmps
sub
sub
mov
ja
cmp
shr
in
push
lea
jo
mov
pop
add
pop
ja
xor
cmps
shl
sub
dec
sbb
aam
xchg
in
mov
jo
cmp
xchg
jg
pop
dec
cmp
mov
cmp
or
push
sbb
adc
jbe
imul
lock
jle
inc
xor
sbb
pop
mov
fidiv
aas
and
test
jo
int
jmp
pop
or
add
adc
mov
add
outs
lea
sbb
adc
icebp
dec
(bad)
adc
cmps
pop
mov
mov
jmp
pop
mov
sub
out
inc
ret
jbe
in
adc
(bad)
mov
push
fadd
loopne
or
push
iret
adc
cmps
nop
or
or
aam
pushf
xchg
shr
call
ss
xchg
enter
lahf
mov
inc
scas
std
jo
dec
sub
xor
lock
pusha
adc
dec
mov
mov
jne
inc
test
dec
loopne
cmps
cld
mov
jnp
nop
jp
add
vcmpeq_osps
shr
sbb
add
or
lock
inc
loope
pop
test
inc
aas
iret
jecxz
jp
nop
ror
int
dec
clc
adc
daa
mov
or
adc
add
or
add
xor
pop
adc
mov
stos
cld
nop
mov
aas
push
(bad)
(bad)
loope
jne
sbb
hlt
adc
shr
and
dec
sub
jb
and
push
adc
push
push
push
fwait
hlt
push
cmps
jge
daa
arpl
ins
call
xor
cld
or
push
rcl
jle
and
les
lods
sbb
mov
loopne
mov
inc
or
pop
cmc
lea
jl
push
sbb
sub
(bad)
fmul
pop
pop
mov
dec
jg
dec
push
mov
aaa
add
push
mov
add
cmp
sar
je
cmp
je
cmp
je
neg
(bad)
push
cmp
je
cmp
mov
mov
add
mov
xchg
adc
ror
adc
or
std
cmps
add
and
jmp
push
mov
int3
or
fadd
pop
and
adc
cmp
mov
call
xor
out
and
and
and
push
scas
jp
mov
iret
mov
push
cmp
js
mov
adc
ret
cmp
add
rcl
sub
jns
out
inc
jb
pop
push
test
adc
cmp
xchg
add
jg
arpl
fcmovbe
frstor
dec
mov
pop
mov
inc
mov
cs
ja
pop
pop
xor
fsubr
outs
es
sub
repz
or
or
sar
add
inc
hlt
jmp
test
int3
lods
fld
sbb
and
loopne
jmp
cmps
xchg
xlat
lods
xlat
rol
jnp
xchg
pop
xchg
adc
mov
mov
retf
mov
iret
(bad)
repz
retf
mov
je
jp
inc
sbb
push
pop
jae
in
xchg
outs
mov
cld
xchg
xor
push
jnp
sbb
add
push
push
xor
sbb
sbb
popf
pop
test
sbb
lock
test
ror
adc
add
push
outs
adc
jl
popa
test
ds
add
sar
out
fidiv
add
add
imul
mov
stc
add
or
or
mov
imul
or
push
pop
call
adc
ret
xchg
popf
sub
sub
int3
sbb
pop
stc
es
data16
jge
mov
and
jo
adc
movs
mov
add
inc
xchg
pop
dec
fmul
inc
jge
push
cmp
add
sar
xor
mov
mov
and
mov
ds
adc
push
and
push
or
push
jb
pop
(bad)
jg
test
and
mov
and
enter
jl
stos
daa
(bad)
mov
mov
sbb
movs
lds
and
dec
jne
jns
or
sub
aad
data16
cmovle
jmp
dec
cmp
adc
dec
mov
loope
or
add
add
add
(bad)
or
xor
in
sbb
inc
add
cmp
add
int
fnstsw
in
sub
dec
iret
adc
sbb
cmp
push
sub
lea
into
push
inc
mov
cmp
mov
or
mov
js
adc
pop
call
fwait
mov
jne
(bad)
popf
(bad)
dec
jne
dec
jg
sysenter
stos
add
in
les
enter
adc
xor
and
ins
or
stos
dec
mov
or
shr
inc
sahf
mov
fiadd
inc
push
push
sub
pand
mov
mov
test
inc
lock
and
rol
and
rol
pop
pop
test
pop
dec
(bad)
jnp
or
pop
xor
xor
sub
sbb
sar
in
repnz
(bad)
xor
xor
sub
sbb
jne
mov
fistp
add
div
xchg
add
retf
add
jmp
cs
mov
or
shr
rcr
ror
fisttp
mov
rcl
add
sub
add
scas
clc
in
sahf
sti
pop
mov
enter
sbb
cwde
pop
test
mov
push
sub
sbb
leave
icebp
das
or
das
or
je
mov
mov
pushf
xor
cmp
rcl
rcl
rcl
cmp
mov
cmp
fidiv
sub
sbb
inc
loop
arpl
in
or
repz
mov
fwait
pop
pop
push
jns
neg
idiv
outs
sub
add
jns
neg
neg
sbb
int
inc
xor
pop
test
xor
pop
(bad)
not
cs
in
addr16
push
xor
(bad)
adc
push
or
inc
sbb
bound
mov
cmp
je
(bad)
outs
dec
ror
sub
inc
sbb
fcomi
add
pop
sbb
jne
mov
aaa
and
add
add
sbb
das
xor
enter
push
sbb
rcl
pop
outs
sbb
loop
sub
pop
sete
ffree
jmp
test
inc
pop
xor
(bad)
push
sbb
mov
aad
lahf
ret
jae
mov
inc
and
outs
mov
and
push
push
mov
mov
or
dec
or
ins
and
jmp
adc
adc
imul
out
xor
push
getsec
jmp
sbb
cld
ja
or
inc
mov
inc
and
jle
push
jmp
jg
mov
cdq
xchg
dec
aas
and
movs
out
sub
pop
add
xchg
cld
arpl
lock
xor
jp
sbb
mov
pushw
sub
xor
rcr
ficom
cmp
or
xor
pop
and
inc
and
xchg
movs
cmp
aam
or
or
pop
cmp
sub
jg
mov
add
daa
jmp
inc
dec
mov
jmp
daa
xor
cmp
jmp
je
sbb
setb
jmp
setl
cmp
je
sub
or
xchg
sti
and
pop
jmp
push
adc
mov
cld
add
mov
out
add
pop
in
add
and
mov
sbb
dec
inc
jle
test
jg
pop
pop
mov
inc
xor
lods
test
jg
add
or
test
add
inc
and
cmp
jp
je
dec
inc
add
(bad)
(bad)
dec
(bad)
int
push
add
outs
clc
jo
cs
neg
imul
mov
call
inc
in
in
idiv
cmp
je
and
xor
inc
(bad)
in
int
cmp
cli
aaa
sbb
lock
int
into
(bad)
mov
scas
add
sbb
ret
lock
adc
mov
in
loopne
jmp
dec
les
mov
xlat
sahf
mov
mov
mov
push
in
test
xchg
int3
mov
mov
aaa
jmp
adc
into
stos
movs
push
(bad)
push
xchg
sbb
bound
add
mov
(bad)
pop
mov
pop
jo
test
or
jle
xlat
sub
test
test
loop
ret
mov
outs
push
cs
dec
mov
(bad)
fxch
adc
hlt
mov
pop
mov
movs
enter
jne
jb
pushf
hlt
fwait
test
nop
push
add
rol
retf
cmp
adc
mov
std
(bad)
fcomp
push
push
leave
test
or
xor
adc
xor
mov
pusha
fisttp
call
push
add
mov
fidivr
call
pop
sahf
sbb
fimul
and
add
loope
pop
mov
jmp
pop
cmp
and
hlt
xchg
sub
xchg
fcom
mov
add
rol
mov
pop
mov
mov
fisubr
(bad)
pop
push
test
add
ja
loopne
ret
test
cld
cmp
pop
repnz
ds
sti
adc
xor
ror
xor
aas
xor
push
dec
jne
dec
popa
scas
xchg
adc
adc
mov
lock
inc
pop
call
sbb
inc
rcr
(bad)
dec
clc
jmp
push
ja
test
inc
stos
pop
pop
xchg
mov
mov
or
jge
sub
leave
jb
pop
js
(bad)
and
mov
sahf
mul
jg
loope
rcr
add
inc
cmp
jle
pop
or
push
rsm
dec
add
cmp
adc
adc
inc
adc
aam
aam
cmp
cmp
je
retf
push
and
add
mov
retf
push
int3
call
fs
je
fistp
call
test
fcmovnu
sub
daa
cmp
push
pusha
mov
daa
sub
inc
dec
push
sbb
add
ror
push
jne
cld
mov
push
push
mov
push
fdivr
into
cmps
dec
lds
jle
arpl
ret
test
jl
inc
mov
je
std
dec
bound
test
mov
call
cwde
sub
js
loopne
mov
xlat
add
rcr
adc
ja
cmp
mov
cmp
sub
and
lods
add
call
out
repnz
mov
xchg
push
inc
or
aam
gs
pop
loop
aaa
ds
inc
jbe
and
jae
pushw
or
mov
fcmovb
fsub
push
stos
mov
fst
out
cmp
sub
es
(bad)
out
jno
iret
gs
inc
push
pop
je
popa
outs
ins
pop
outs
bound
dec
dec
sub
add
mov
sub
push
mov
dec
popa
je
sub
push
ins
ins
ja
outs
or
dec
sub
push
push
xchg
sbb
or
inc
hlt
popa
push
dec
inc
mov
jno
es
sub
outs
pop
or
mov
popa
sub
aaa
ins
in
xchg
jae
outs
pop
outs
jae
(bad)
fsub
loopne
inc
push
pop
das
pop
fs
add
cs
inc
inc
sub
sub
push
aaa
aaa
cmp
mov
sti
and
daa
jg
je
ins
sbb
js
and
ins
sub
jb
dec
inc
adc
mul
dec
into
ficomp
jl
ins
push
or
xchg
jb
test
in
inc
pop
push
inc
int
and
aaa
popa
xchg
popa
ins
das
in
lea
div
outs
aaa
adc
fisub
ss
push
mov
aaa
outs
outs
cmps
aaa
cwde
fsub
das
pop
push
(bad)
mov
add
nop
and
ds
setae
into
out
mov
inc
push
push
adc
mov
xor
retf
sub
push
cld
mov
push
dec
push
nop
push
inc
test
jne
jae
mov
cmp
push
ja
dec
cwde
xor
xchg
pop
inc
and
mov
or
les
sub
mov
add
jle
(bad)
sub
sub
jne
xor
pushf
ret
and
pop
xor
push
add
sbb
push
popf
mov
cli
pop
inc
jno
cs
mov
mov
inc
sar
push
(bad)
sub
fs
dec
jne
int3
std
gs
ja
fucomip
inc
dec
in
mov
movhps
xor
mov
scas
dec
push
mov
int3
xlat
add
sbb
adc
dec
jbe
mov
pop
mov
lock
pop
shl
xlat
sbb
pop
lods
sub
pop
add
ja
(bad)
in
not
mov
lock
cwde
jo
aad
mov
iret
cmp
adc
dec
mov
ins
inc
fild
pop
clc
shr
cmp
fst
add
ret
pop
sbb
dec
jmp
sbb
cmp
add
addr16
(bad)
mov
jbe
mov
aam
out
ror
test
mov
pop
test
and
and
mov
pop
ss
sub
daa
movs
(bad)
pop
and
or
dec
mov
push
and
push
mov
lock
inc
pushf
imul
lods
or
add
push
mov
adc
sub
push
fcomp
adc
push
call
add
sub
inc
mov
ss
es
sahf
sbb
pusha
adc
add
dec
push
adc
fwait
push
jg
sar
push
inc
outs
sub
push
add
cmp
adc
movs
sahf
inc
add
pop
and
cmp
fcomp
dec
add
xlat
mov
lea
jmp
fdiv
mov
cdq
inc
(bad)
and
rol
test
jmp
cs
inc
mov
add
sbb
shr
inc
pop
mov
adc
jge
mov
pushaw
in
int
mov
imul
adc
leave
or
adc
inc
stos
mov
int3
push
mov
cmp
push
and
xor
push
jno
into
or
popa
add
mov
push
mov
movs
mov
or
push
mov
cmp
hlt
push
xchg
gs
inc
lea
cmp
mov
mov
xor
jo
sbb
pop
cmp
(bad)
mov
js
pop
xchg
div
xchg
jno
push
push
push
shl
sar
push
ins
dec
dec
mov
ins
lods
data16
mov
movs
mov
sub
sub
mov
push
pop
push
push
pushf
cmp
shr
sub
ins
lahf
inc
push
jge
fsubr
or
pusha
adc
arpl
ret
pop
pop
ret
addr16
sti
movs
jo
loopne
imul
push
cmp
leave
inc
push
add
int
inc
ret
sub
push
sbb
xchg
je
call
dec
rcr
xchg
rol
sbb
xlat
cmc
xlat
lock
js
pop
ins
cmp
mov
cs
mov
lock
inc
add
adc
push
mov
mov
sub
sar
jns
adc
fdiv
in
fs
sub
sar
pop
rol
add
inc
cmp
imul
rcr
inc
inc
adc
imul
xor
cmps
mov
jmp
adc
ins
lahf
pusha
add
mov
lea
jle
jg
xor
mov
sub
dec
push
push
fistp
loope
inc
add
imul
ror
test
dec
push
sbb
loope
mov
push
popa
je
fstp
add
inc
sub
scas
clc
mov
adc
add
and
sbb
push
mov
add
loope
bound
retf
cmp
push
mov
push
dec
call
add
ins
mov
cmp
cmps
jg
pop
cmp
mov
or
and
pop
ret
cwde
movs
xor
nop
push
and
sar
stc
mov
lods
push
popf
add
inc
gs
js
lods
mov
xor
add
pop
pop
push
push
pop
adc
dec
scas
jno
jmp
mov
or
das
push
sbb
pop
cdq
pop
iret
jl
adc
iret
rcr
(bad)
out
sbb
loope
in
ja
inc
call
outs
add
mov
ja
popa
(bad)
shl
out
mov
dec
sbb
fs
outs
cs
test
and
ja
out
mov
push
daa
imul
mov
jb
push
outs
jbe
clc
xor
add
inc
inc
jo
xor
sar
adc
scas
xor
push
cmp
dec
cmps
inc
lea
cmp
dec
or
in
adc
mov
fwait
and
lock
je
mov
add
pop
lods
or
inc
js
mov
dec
push
xlat
test
iret
sahf
lods
xor
jnp
mov
shr
lods
imul
ret
test
push
jb
popf
mov
pop
jne
mov
or
shr
mov
arpl
stc
mov
sbb
inc
add
xchg
or
lea
lock
or
pop
pusha
cmc
pop
push
pop
(bad)
sub
call
sub
sub
xchg
clc
movs
adc
mov
jae
cmc
xchg
mov
neg
add
jle
leave
xchg
test
ret
jmp
aaa
and
imul
in
add
sbb
inc
sub
push
sbb
mov
mov
cmps
rol
add
shl
add
mov
clc
int
inc
add
lds
pop
sbb
(bad)
jno
mov
jecxz
adc
fs
cmp
nop
push
mov
retf
jae
dec
inc
mov
push
mov
ucomiss
test
cmc
jmp
dec
(bad)
(bad)
add
dec
jmp
nop
and
ins
xchg
clc
jmp
jne
in
push
nop
test
cmp
aam
pop
and
sbb
call
nop
call
loop
or
shr
push
xor
adc
xchg
jbe
stos
push
jl
adc
call
inc
jno
stos
rcr
and
sbb
test
xchg
sub
lea
sub
lahf
lock
pop
sbb
nop
mov
mov
sbb
adc
ror
jno
xchg
ret
jmp
mov
loopne
addr16
mov
and
aas
aas
fwait
test
push
or
mov
inc
mov
aad
mov
mov
add
and
cmp
or
pop
ror
and
(bad)
lods
fistp
rol
mov
shr
jne
pop
adc
push
mov
dec
jecxz
jbe
push
dec
fstp
(bad)
adc
outs
outs
mov
mov
add
lods
fstp
mov
shr
or
pop
mov
jmp
pusha
cmps
jno
test
adc
sub
mov
push
or
jno
rcl
or
out
rol
adc
mov
pop
mov
pusha
out
(bad)
inc
(bad)
sbb
xor
jmp
call
add
mov
js
iret
sub
enter
inc
outs
add
pop
mov
(bad)
mov
xor
add
imul
mov
jbe
or
mov
out
xchg
lock
pop
mov
sbb
mov
or
addr16
pop
pop
ret
sbb
add
scas
sbb
xlat
fs
cmps
repnz
(bad)
mov
mov
pop
inc
and
add
mov
out
sbb
lea
sbb
inc
push
pushf
fadd
rol
or
mov
mov
add
mov
js
inc
fistp
lods
(bad)
push
cdq
or
cwde
cmp
add
cmps
inc
push
ins
in
mov
and
add
data16
push
mov
shl
pop
add
mov
cli
sub
xchg
dec
and
jmp
outs
call
xchg
xchg
cmps
es
pop
test
adc
jno
(bad)
push
push
loop
cmp
fild
sub
inc
add
sbb
vorps
sbb
shrd
pop
hlt
pusha
rcl
push
inc
push
pop
paddd
cwde
jae
ss
cmp
jb
xor
add
inc
(bad)
movs
mov
sbb
push
and
or
(bad)
(bad)
fbstp
dec
push
mov
pusha
jmp
and
cmp
hlt
ret
xor
push
push
test
sbb
cli
sub
adc
aad
arpl
sbb
mov
jne
xor
pop
fdiv
fild
push
push
add
popf
clc
xor
dec
jns
pushf
in
jmp
mov
in
test
jl
pusha
cdq
call
xor
pusha
mov
(bad)
dec
pop
mov
push
lea
es
fimul
inc
enter
jo
add
neg
in
sub
pop
pusha
sbb
daa
clc
pop
fnsave
and
mov
xchg
inc
and
fnstcw
stc
outs
test
stc
sahf
cwde
xlat
adc
int
inc
xor
sbb
dec
enter
mov
adc
pop
enter
inc
pop
or
push
push
push
cmps
dec
cmp
adc
fcom
inc
lods
pop
sub
mov
sbb
mov
dec
add
dec
std
cld
and
xor
or
add
sub
jno
das
mov
sub
sbb
sub
sbb
and
sub
dec
cmp
xlat
push
mov
lds
and
and
add
add
push
cmp
or
(bad)
rol
mov
add
in
cmp
enter
cdq
dec
jp
and
mov
movs
adc
or
mov
push
adc
push
adc
sub
lahf
inc
loopne
ins
dec
aas
sub
gs
pop
(bad)
fcom
inc
into
add
sbb
repz
push
or
test
cli
add
sub
jbe
mov
or
mov
inc
xchg
or
xchg
pop
xor
dec
sbb
shl
add
or
ror
inc
fisub
test
push
aas
add
jne
mov
aaa
and
adc
push
cmp
xor
sar
nop
and
and
adc
jno
jg
ret
xchg
adc
xchg
push
mov
ja
(bad)
jb
xor
(bad)
sar
mov
pop
push
add
out
push
adc
out
outs
sub
and
je
add
iret
dec
dec
inc
jecxz
cs
jno
and
movs
in
pushf
or
mov
or
mov
ret
mov
or
into
and
adc
push
add
jns
add
cmps
add
mov
pop
ret
and
ret
push
push
(bad)
(bad)
sbb
aaa
xchg
arpl
pushf
mov
mov
sub
dec
or
mov
iret
jns
test
jge
(bad)
mov
int3
add
pop
sub
aam
mov
and
push
pop
stos
mov
rcl
popf
scas
mov
push
sbb
mov
sbb
dec
adc
ror
loopne
sbb
imul
enter
and
lock
mov
adc
mov
in
fimul
call
or
das
stos
in
push
mov
out
aam
fdivrp
adc
inc
test
aam
sub
add
ss
mov
enter
clc
enter
sub
add
jge
test
jge
inc
mov
cs
pop
int3
pop
xchg
sub
and
jmp
mov
or
mov
cwde
sbb
jo
in
adc
or
pusha
test
xchg
popa
cmp
xor
push
shl
jge
dec
adc
pop
add
rcpps
arpl
mov
sbb
or
push
loopne
or
fstp
(bad)
fst
adc
test
xor
push
pop
mov
push
outs
call
inc
and
push
lock
fidiv
and
lods
add
adc
popf
cmp
xchg
mov
jge
test
add
adc
cmp
and
add
lock
ret
cmp
dec
in
jb
push
push
jp
push
xor
xor
retf
movs
pop
add
add
fcomip
push
fcomp
cmp
adc
push
sbb
push
int
fwait
dec
adc
std
add
shl
std
in
or
std
adc
push
xor
les
aaa
fadd
add
push
enter
loope
dec
push
jg
(bad)
popa
sbb
fidivr
xor
inc
mov
or
fcomp
cmc
add
sub
push
push
jbe
fs
add
ss
test
xchg
mov
hlt
add
popf
lock
test
fist
(bad)
jl
dec
add
jns
jae
jnp
inc
or
jmp
push
or
call
test
mov
inc
xchg
in
and
loopne
mov
pop
in
sbb
sub
jb
mov
rcr
retf
stos
pusha
push
(bad)
mov
add
stos
pop
clc
dec
sub
mov
xchg
addr16
sbb
add
les
add
or
or
nop
loopne
mov
stos
test
pop
lock
xchg
mov
cmps
push
shl
cmc
cmp
jne
push
push
or
jne
push
or
cmp
cwde
je
jo
push
shl
xchg
(bad)
(bad)
pop
cmp
push
sub
fsubr
xor
or
repnz
sbb
add
es
in
cmp
adc
ret
inc
cs
sbb
and
sub
dec
lahf
mov
adc
fs
(bad)
or
pop
sti
call
je
mov
cmp
je
movzx
add
pop
add
and
mov
push
dec
push
inc
mov
push
in
mul
xor
inc
js
mov
mov
fld
dec
inc
scas
sub
loopne
inc
adc
or
jne
cmp
push
nop
fisttp
sub
mov
inc
pop
sub
pusha
div
add
test
mov
ret
lea
push
or
arpl
les
add
or
cmp
out
jnp
sub
add
ja
dec
in
mov
inc
cmp
add
adc
xchg
jo
pop
dec
or
or
adc
push
cmp
add
sti
adc
imul
jne
mov
stos
or
ror
xor
loop
mov
adc
or
adc
push
xor
dec
sub
rol
jae
mov
imul
pusha
or
rol
sub
or
add
add
(bad)
jmp
sub
repnz
cmp
inc
int3
dec
cmp
add
xchg
stos
enter
aad
call
push
sub
sub
ret
sub
push
cmp
push
mov
sub
je
add
retf
cmc
and
pop
push
xor
pop
push
cmp
(bad)
push
lods
mov
xchg
xchg
sub
adc
sub
jg
popa
movs
pop
stos
dec
jg
xor
dec
loop
inc
imul
mov
add
popa
mov
mov
dec
adc
add
js
push
out
or
bound
retf
push
adc
push
fs
pop
jg
cmp
inc
xchg
adc
and
push
sub
pop
mov
ror
adc
inc
add
je
push
push
or
adc
add
or
push
jae
push
es
ret
mov
or
mov
push
into
or
inc
outs
je
cmovne
mov
ins
jbe
pop
xor
jo
inc
mov
outs
shl
push
loope
mov
add
push
sbb
frstor
out
add
fwait
pop
movs
pop
fs
or
stc
mov
int
pop
bound
imul
dec
ja
sbb
adc
jb
dec
add
add
add
cmp
or
push
dec
mov
or
aas
add
jl
fiadd
add
aaa
lea
sub
inc
pop
loop
loopne
test
dec
(bad)
sub
jp
jae
or
mov
pop
cmps
push
xlat
pop
in
and
mov
push
xor
cmps
fisub
xchg
imul
popa
pusha
mov
xor
or
fprem1
add
aaa
pop
sbb
mov
push
arpl
and
sub
adc
inc
mov
aas
push
stc
jae
gs
(bad)
jae
inc
dec
or
and
xor
adc
push
dec
adc
add
dec
or
xchg
dec
or
pop
mov
jmp
stos
sbb
add
cmp
add
inc
nop
cmp
sbb
push
adc
cmp
cmc
stc
ret
cmp
daa
pop
mov
add
in
push
sub
xchg
push
iret
(bad)
test
push
pop
push
in
rcr
add
cmps
mov
inc
add
inc
dec
add
inc
out
inc
inc
adc
dec
and
or
inc
rcr
fadd
sbb
push
add
lea
cmp
loope
mov
sti
(bad)
mov
movs
add
je
dec
je
push
and
sub
idiv
mov
push
std
(bad)
add
adc
sub
or
sub
pop
aas
add
and
jnp
rep
pop
scas
cmps
inc
push
pop
jmp
ja
push
arpl
mov
dec
or
pusha
dec
imul
rcr
adc
add
mov
sbb
mov
rol
push
sbb
daa
and
push
inc
sbb
adc
pop
jns
fist
jmp
call
das
jne
sub
std
(bad)
aad
mov
bound
nop
sub
adc
cmc
data16
sar
sbb
xchg
add
push
push
(bad)
pop
add
ins
aaa
xor
pop
sub
rcl
stc
push
nop
shr
fcmovbe
push
int
mov
or
add
sub
cmp
add
stos
and
sbb
hlt
pop
ja
inc
add
push
sbb
pop
push
jo
call
cdq
mov
daa
(bad)
mov
cmp
jl
cmp
jge
retf
mov
push
add
push
push
jb
sar
sub
or
or
push
repnz
mov
push
pop
inc
out
jle
retf
test
jne
mov
or
mov
sbb
repz
add
sahf
sub
dec
inc
add
pop
sub
add
sub
add
data16
jle
bound
jle
cwde
ins
loopne
fisttp
add
sub
rol
arpl
jg
add
push
add
call
mov
scas
jb
or
es
arpl
pop
mov
cmp
dec
xor
dec
int
mov
je
ins
or
and
or
gs
jo
jno
dec
jne
scas
push
loope
sbb
or
mov
add
out
add
outs
ja
je
add
xor
or
mov
or
jmp
fist
cmps
or
and
mov
test
inc
ja
dec
lock
dec
add
test
test
cmps
or
lahf
cmp
(bad)
mov
out
aas
push
in
arpl
cld
jo
data16
fmul
or
outs
adc
pop
adc
imul
dec
xchg
xlat
push
ficomp
jge
fwait
mov
xor
jno
sar
pop
adc
cmovo
fisttp
data16
mov
inc
mov
push
fs
out
add
pop
cmp
pop
ret
dec
jmp
mov
ins
jg
div
data16
ins
or
je
arpl
jae
outs
mov
jnp
xchg
jo
gs
jne
xchg
sub
jl
scas
and
mov
ds
inc
push
and
out
add
add
scas
jmp
jl
jo
cmovb
(bad)
mov
jg
outs
and
jmp
rol
mov
mov
stc
xor
imul
or
arpl
mov
lahf
dec
outs
jne
mov
in
sbb
xchg
or
jbe
sahf
out
or
xchg
fs
(bad)
and
mov
(bad)
das
jbe
inc
hlt
scas
adc
and
or
and
test
inc
adc
xchg
fs
or
and
adc
js
retf
add
out
pushf
mov
mov
and
cwde
dec
add
jmp
es
aaa
mov
enter
mov
hlt
sbb
push
xor
shl
sbb
inc
pop
or
cdq
scas
scas
aam
or
mov
loop
inc
inc
inc
outs
arpl
sbb
pop
fwait
sbb
jbe
xor
cmps
sub
mov
stos
jbe
pop
push
add
pop
call
cmp
jbe
ins
cs
and
call
jnp
ja
pop
xlat
arpl
movs
dec
or
cmp
(bad)
bound
popf
add
or
(bad)
pop
pushf
push
or
cli
std
das
adc
iret
push
arpl
ins
ins
inc
jnp
jmp
push
mov
xor
jae
push
outs
inc
push
add
adc
outs
es
out
jae
and
daa
adc
nop
ret
pop
adc
dec
lock
push
pop
arpl
or
add
adc
fs
pushf
adc
pop
out
fst
xchg
nop
cmp
das
push
outs
mov
jmp
das
sbb
(bad)
ins
jo
cmp
call
adc
push
push
dec
dec
dec
inc
clc
adc
cld
es
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
and
xchg
lods
cmp
push
or
les
push
adc
mov
daa
fimul
cwde
les
cmp
fs
mov
inc
nop
lahf
mov
jo
aam
in
fwait
out
je
push
or
dec
push
push
pop
inc
in
push
pop
and
and
inc
pop
xchg
retf
mov
jmp
mov
mov
outs
dec
inc
xlat
add
gs
(bad)
fcom
leave
fdivr
sbb
bound
clc
adc
bndstx
pop
inc
push
aaa
cwde
fisttp
adc
inc
inc
pop
inc
inc
xchg
mov
inc
push
inc
and
pop
add
pop
inc
pop
xor
xchg
mov
cmovge
sbb
cmp
mov
push
push
jne
or
adc
mov
daa
or
cs
enter
cdq
mov
or
jp
or
mov
pop
fwait
sbb
inc
in
inc
push
jo
jb
(bad)
xor
and
adc
adc
loopne
aam
or
bound
and
ror
(bad)
gs
inc
push
sub
dec
mov
es
add
hlt
mov
xchg
or
fwait
test
jnp
xor
pop
jge
jno
xchg
ror
inc
add
lods
das
add
dec
xor
out
fiadd
inc
les
push
xor
das
mov
push
push
push
dec
popa
hlt
das
add
inc
xor
mov
xor
mov
cwde
sbb
das
cmp
pop
sub
dec
jle
das
push
adc
aam
push
mov
aaa
ins
aaa
add
xchg
add
or
pushf
dec
push
inc
ja
dec
dec
sub
std
xchg
test
rcl
int3
pop
sub
ror
adc
push
in
pop
and
rcr
push
xchg
adc
or
stos
jecxz
mov
mov
dec
xchg
addr16
push
pop
js
loope
jle
mov
fiadd
push
jo
mov
div
adc
sbb
ins
loop
pop
lods
ins
dec
aad
xor
mov
inc
dec
out
dec
sub
clc
(bad)
or
xor
sar
xchg
fucomi
dec
push
pop
inc
dec
stos
pop
retf
jne
int3
stos
add
mov
dec
inc
push
dec
or
jns
push
gs
sub
or
in
inc
adc
jne
or
ja
imul
stos
dec
jnp
push
sub
jae
pop
(bad)
cmp
fsub
push
pop
imul
mov
mov
ds
lods
lea
inc
sub
cdq
lock
out
jl
sbb
adc
push
fidiv
enter
mov
push
(bad)
cwde
das
(bad)
scas
retf
test
(bad)
daa
sub
jno
push
mov
jne
jb
jae
mov
and
jne
mov
jbe
and
and
loopne
add
push
push
ins
stos
daa
lea
dec
adc
xor
mov
xor
ins
xor
pusha
or
pop
or
inc
push
push
inc
inc
mov
mov
daa
loopne
sti
jb
bound
and
mul
and
mov
daa
mov
es
inc
and
or
add
adc
jecxz
inc
hlt
inc
push
sub
sbb
lods
jmp
xchg
fdiv
or
imul
pop
sub
add
mov
rol
jg
sub
xchg
ss
jo
jmp
test
test
loope
jge
sub
or
push
lods
mov
int3
xchg
xor
jmp
cdq
and
push
jae
sub
add
and
dec
fmul
adc
xchg
popa
or
das
sbb
ds
add
rol
pusha
clc
or
or
bound
jle
fadd
and
add
sub
shr
popa
jecxz
lahf
wbinvd
push
das
movs
adc
or
arpl
add
and
and
add
retf
imul
fwait
or
inc
dec
inc
(bad)
push
fcmovnbe
adc
xlat
int
inc
fld
add
stos
lahf
in
pop
imul
imul
cmp
push
mov
les
push
sub
dec
xlat
and
push
sub
out
cmps
jb
(bad)
push
dec
push
inc
mov
ret
fist
inc
add
outs
test
and
dec
push
cmp
dec
push
stos
or
in
push
ins
and
clc
jecxz
or
add
jmp
lock
push
fild
cmp
ins
jge
and
and
or
push
mov
adc
adc
xlat
mov
jb
test
or
push
enter
outs
arpl
adc
adc
je
unpcklps
cdq
into
pop
xacquire
ret
mov
imul
add
(bad)
or
movs
outs
sbb
inc
outs
js
push
js
ret
mov
xchg
or
or
aaa
sbb
xchg
inc
lods
add
in
pushf
scas
ss
dec
inc
pop
inc
sub
loop
out
inc
inc
push
push
push
push
in
call
rol
or
adc
push
popa
pop
or
or
dec
adc
fisub
leave
leave
in
and
sbb
adc
leave
leave
leave
adc
add
fs
add
popa
clc
hlt
in
in
lock
call
in
(bad)
sar
pop
in
int3
pop
enter
pusha
inc
bound
imul
pushf
fsubr
mov
pushf
pushf
pushf
pushf
lods
test
mov
pushf
cwde
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
ins
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
leave
leave
leave
test
and
adc
retf
and
sbb
cld
push
fistp
xor
and
arpl
cmc
pusha
cmp
into
xchg
and
add
daa
dec
push
ror
leave
rcl
ret
mov
fist
psrad
dec
mov
sahf
mov
jmp
pop
int
ja
nop
dec
adc
xchg
xchg
fist
(bad)
or
sbb
mov
(bad)
mov
das
fwait
mov
mov
(bad)
daa
daa
pop
hlt
lock
call
in
(bad)
daa
daa
daa
daa
aam
int3
enter
daa
(bad)
sar
mov
test
daa
daa
daa
movs
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
ins
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
xchg
daa
daa
daa
xor
pop
dec
dec
outs
mov
pop
and
sbb
adc
dec
dec
dec
adc
add
and
add
pop
clc
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sar
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmp
daa
daa
daa
jo
push
daa
pusha
pop
lahf
in
jbe
aas
pop
pop
push
(bad)
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
pop
jb
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
lock
jb
mov
push
mov
lods
aas
test
movs
dec
cs
mov
dec
dec
dec
nop
mov
dec
cmp
dec
dec
dec
jo
push
dec
pusha
pop
pop
push
xchg
fcmovnb
dec
push
pop
dec
cmovs
inc
cmp
cmp
mov
sub
cmp
cmp
sbb
cmp
cmp
adc
or
mov
cmp
cld
pop
clc
pushf
pushf
pushf
pushf
hlt
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
(bad)
sar
mov
test
pushf
pushf
pushf
movs
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
ins
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
ins
mov
inc
(bad)
mov
pusha
push
cmp
cmp
xor
daa
pop
jb
sub
and
daa
daa
daa
and
jb
jb
adc
or
jns
jb
add
pop
clc
cmp
cmp
hlt
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
sar
mov
lods
push
dec
dec
dec
dec
movs
mov
dec
dec
xchg
nop
mov
test
sub
aam
movs
jl
js
jbe
mov
je
jo
ins
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
xchg
xchg
or
add
leave
leave
leave
enter
hlt
lock
push
jb
xchg
(bad)
push
xchg
scas
sti
imul
jg
loopne
and
or
pop
add
sbb
iret
add
pop
call
fistp
sub
cmp
and
int3
and
mov
repz
sbb
and
adc
dec
(bad)
mov
jo
jno
in
pop
ret
adc
inc
jmp
fbstp
mov
push
push
or
enter
ins
ret
pop
fadd
inc
add
xor
fisttp
sbb
pop
or
sbb
pop
fcomp
call
sbb
add
or
sub
jp
out
imul
mov
movs
(bad)
lahf
arpl
push
add
dec
(bad)
addr16
ds
push
add
and
push
add
jmp
inc
add
sbb
jle
fwait
adc
inc
pop
add
dec
push
dec
das
push
dec
mov
cs
push
push
pop
fdiv
push
push
xor
idiv
pop
or
pop
push
dec
add
push
push
fsubr
js
mov
loopne
fsub
push
pop
enter
mov
lods
das
pop
jb
cwde
add
cmp
(bad)
loop
push
add
add
dec
in
sbb
or
dec
cwde
mov
sahf
mov
or
jge
dec
pop
cmp
mov
das
mov
test
sbb
add
add
mov
mov
sbb
ror
xchg
xchg
xchg
xchg
icebp
repnz
xchg
xchg
xchg
xchg
cmc
div
clc
xchg
xchg
xchg
xchg
stc
cli
sti
cld
xchg
xchg
xchg
xchg
std
(bad)
jmp
xchg
xchg
xchg
xchg
loope
jecxz
xchg
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
jmp
xchg
xchg
xchg
in
out
out
rcl
rcl
aam
xchg
xchg
xchg
aad
xlat
fcom
fcmovu
fcom
(bad)
rcl
ret
les
mov
xchg
xchg
xchg
xchg
leave
retf
xchg
xchg
xchg
xchg
int
iret
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
cmps
cmps
test
xchg
xchg
xchg
test
xchg
xchg
xchg
lods
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
xchg
xchg
xchg
xchg
cdq
call
popf
sahf
lahf
adc
add
xchg
mov
xchg
xchg
lea
xchg
xchg
jno
jae
xchg
xchg
xchg
xchg
jne
ja
xchg
xchg
xchg
xchg
jns
jnp
xchg
xchg
xchg
xchg
jge
jg
xchg
xchg
xchg
xchg
popa
bound
xchg
xchg
xchg
xchg
gs
xchg
xchg
imul
xchg
ins
outs
outs
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
push
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
xor
xor
xor
xchg
xchg
xchg
xor
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
cmp
sti
neg
and
sub
jae
lods
pop
jb
sub
jne
cdq
test
aaa
adc
or
fisttp
ret
lahf
in
mov
dec
cmp
dec
(bad)
jne
nop
mov
shr
mov
shr
mov
mov
lods
xchg
loope
fmul
outs
daa
and
shl
push
or
xchg
jecxz
cmps
in
mov
cmp
jmp
or
lahf
push
adc
pusha
jl
jp
out
mov
je
add
cmp
cmp
sti
dec
repnz
out
fst
or
pop
or
inc
(bad)
call
std
pop
or
fnstcw
(bad)
jge
push
imul
or
setl
ss
sbb
sub
fisttp
xchg
and
adc
fcomp
cmp
sub
jg
ret
ja
add
add
pushf
push
lock
push
xchg
mov
pop
inc
jl
add
bnd
outs
and
cmps
and
daa
and
adc
add
mov
dec
stos
test
cld
xchg
push
mov
add
cmp
fisub
cdq
clc
add
sub
pop
cmp
push
jne
rcl
loop
add
inc
add
in
mov
nop
inc
out
jbe
and
cwde
adc
sahf
cs
adc
push
ss
adc
xor
cmp
add
jecxz
and
add
add
jmp
aas
jle
and
xor
inc
loopne
pusha
add
add
popf
add
jecxz
mov
rol
loopne
add
adc
and
xor
inc
add
pusha
add
sbb
add
lds
loopne
lock
add
adc
add
clc
test
test
add
add
loopne
cld
cs
inc
push
push
add
add
(bad)
es
fdiv
ror
dec
jo
int3
adc
add
add
add
add
add
add
add
call
add
add
push
loopne
lock
add
add
ins
ror
aas
add
or
inc
add
jo
add
mov
mov
shr
or
jmp
loopne
inc
lock
push
mov
push
dec
test
inc
push
xchg
push
loopne
test
push
and
je
sub
inc
and
inc
add
add
sub
or
push
push
cmp
rol
(bad)
jbe
mov
mov
inc
ss
add
int
pusha
adc
or
imul
jnp
jle
xor
xor
add
push
lsl
jo
stos
and
add
fist
xor
inc
add
ds
loopne
add
pop
bound
loope
outs
adc
or
add
comiss
inc
add
(bad)
sub
cmp
not
or
jmp
add
retf
outs
fld
rcr
mov
rol
or
add
fsubrp
inc
push
push
push
pusha
push
push
out
fistp
push
add
push
mov
repz
(bad)
pop
loopne
lock
mov
xor
inc
pop
lock
push
pop
pusha
pop
jo
push
add
pop
mov
fild
int3
push
mov
add
dec
or
or
loope
mov
inc
or
push
or
jo
or
mov
out
ficomp
mov
mov
jle
ror
loopne
jnp
or
or
ins
icebp
call
or
or
or
push
or
and
xor
imul
nop
or
call
pop
xor
adc
push
dec
sti
mov
cmps
add
adc
sbb
push
cld
mov
and
or
push
or
mov
neg
add
push
mov
or
push
or
or
or
daa
adc
or
add
lock
or
jo
in
push
sub
sahf
or
add
ror
fucomip
push
cmps
or
adc
or
cmp
add
or
mov
xlat
jp
cmp
or
jecxz
jae
ja
(bad)
fimul
es
loopne
pop
add
or
call
pop
pop
adc
pop
jbe
add
or
or
not
or
or
nop
or
or
sti
(bad)
dec
adc
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
lock
(bad)
dec
ror
loopne
lock
add
fld
lar
wrmsr
cmovo
ja
(bad)
pop
out
push
punpcklbw
jo
or
add
mov
imul
ror
cmp
push
lock
ret
int3
push
push
hlt
pop
adc
sbb
fcmovb
jle
inc
cmovge
sbb
out
out
and
pusha
adc
adc
pusha
push
jo
mov
adc
rol
mov
add
adc
adc
adc
dec
and
outs
(bad)
sub
aas
push
repz
scas
adc
aaa
push
adc
xor
adc
adc
add
cmp
bound
rcl
sub
dec
dec
adc
add
adc
shl
call
adc
and
xor
fisttp
adc
push
adc
or
out
cmp
btc
pop
adc
jecxz
cs
jo
or
aaa
push
inc
or
fsub
jb
xchg
adc
out
jbe
test
out
add
jle
pop
nop
jp
adc
movhlps
cs
cli
aas
ins
add
lahf
adc
adc
adc
loop
xor
cmp
adc
cmp
(bad)
sahf
arpl
adc
adc
add
shl
add
or
fucomip
aas
push
jmp
adc
adc
adc
adc
adc
adc
adc
adc
shl
(bad)
pusha
adc
add
pop
add
adc
nop
dec
mov
out
mov
add
ret
xchg
mov
scas
paddsb
into
add
or
rol
lock
adc
mov
xor
pop
cmp
out
jmp
fimul
and
adc
push
sti
ja
adc
jo
or
fld
adc
sbb
sti
mov
ss
adc
mov
add
imul
daa
jmp
not
push
inc
push
lock
in
ins
push
mov
scas
out
ja
add
mov
jmp
push
mov
retf
push
setnp
or
sbb
pop
(bad)
or
lock
pop
jp
fild
aas
adc
pop
es
xor
jg
inc
pop
ins
or
push
mov
pusha
aas
add
or
pop
mov
add
and
inc
and
push
test
pop
jecxz
in
add
sub
add
sub
xchg
ret
inc
ins
outs
add
push
loopne
js
xor
mov
mov
rcl
ror
mov
lds
pop
test
adc
and
xor
push
mov
sbb
push
sbb
push
sbb
sbb
pusha
sbb
dec
jnp
mov
sbb
push
addr16
ffreep
xor
rcr
sbb
sbb
sbb
inc
fild
in
add
sbb
sbb
sbb
pop
adc
cld
ss
add
add
lock
jg
rcl
aas
inc
inc
pop
adc
pusha
sbb
sbb
sbb
mov
sub
sub
lahf
add
and
add
loopne
outs
mov
loopne
add
and
or
jnp
sbb
fidivr
mov
sbb
adc
or
add
sbb
or
add
and
push
adc
push
sbb
sbb
pop
add
sbb
sbb
sbb
pcmpgtd
adc
ins
fdiv
lods
adc
mov
adc
add
or
aaa
cdq
add
sbb
pop
fiadd
adc
jmp
pop
add
or
xchg
and
aaa
sbb
sbb
pop
or
add
add
in
pop
add
mov
cmp
or
mov
push
add
push
ficom
jbe
add
scas
add
cmp
add
rcr
cmp
lahf
scas
pop
rol
or
xlat
aaa
sbb
sub
or
xchg
std
or
rol
dec
pop
test
add
or
add
or
add
movs
fdiv
add
ja
xchg
adc
or
or
sbb
or
add
pop
in
sub
dec
icebp
adc
cmp
push
shl
jg
or
pop
push
cld
pop
adc
xchg
or
add
pop
bound
sbb
push
aas
sub
sbb
add
fisubr
dec
or
add
pop
or
push
jo
xor
pop
jne
pop
xlat
or
sbb
sub
popa
pop
jns
shl
adc
push
pop
or
or
imul
mov
cld
add
pop
sar
jnp
pop
fild
adc
mov
pop
mov
mov
sbb
inc
lahf
add
jg
push
(bad)
push
add
fld
pop
sbb
jg
inc
adc
call
mov
add
inc
sbb
adc
and
xor
mov
or
or
pop
or
jle
popa
mov
xor
pop
pop
mov
cwde
and
ret
mov
inc
or
sub
imul
lahf
pop
lahf
aas
test
dec
sbb
scas
ret
push
pop
add
lahf
inc
pop
pop
or
add
imul
sub
dec
adc
(bad)
jne
sub
adc
shl
mov
sbb
mov
push
jg
int
xchg
in
jge
rcr
add
add
mov
bound
ffree
add
ins
ins
ficomp
add
add
adc
xchg
ret
std
adc
mov
ud2
outs
fild
add
add
add
push
ins
sub
xlat
add
inc
or
(bad)
out
and
or
fs
sub
(bad)
dec
mov
pop
lahf
pop
adc
fld
pop
lea
and
out
mov
ret
pop
das
add
mov
and
lods
lea
sbb
add
mov
sbb
cmp
mov
lahf
add
and
dec
push
add
pop
and
mov
pop
add
add
sub
popf
mov
ds
xchg
push
pop
pop
aas
add
push
push
sbb
mov
sar
xchg
add
mov
add
and
or
pop
(bad)
mov
or
sbb
sub
mov
push
add
or
jae
add
mov
or
inc
xchg
in
in
aaa
adc
add
sti
add
dec
pop
add
ror
adc
lods
lds
or
or
inc
sbb
pop
movaps
sbb
sbb
aaa
push
ret
dec
adc
mov
add
mov
mov
add
mov
xor
adc
xchg
ins
add
lods
(bad)
pusha
fstp
fadd
add
mov
or
sub
in
mov
sbb
pop
popf
imul
mov
pop
add
add
adc
adc
adc
mov
sbb
fsubrp
inc
or
adc
sbb
add
inc
xchg
neg
adc
adc
aam
or
clts
cmps
data16
push
stos
js
sar
and
pop
add
mov
sbb
daa
add
adc
lsl
mov
inc
or
add
bound
pop
out
sbb
add
sbb
sbb
add
or
stos
push
mov
fwait
or
add
pop
mov
inc
mov
pop
push
add
sbb
adc
mov
sbb
sbb
rol
sbb
or
cmp
outs
and
pop
pop
or
or
daa
sub
cli
test
imul
ret
lods
movs
imul
xchg
sbb
mov
out
and
test
mov
dec
mov
jno
push
pop
push
mov
adc
mov
add
add
and
xor
cmp
add
add
dec
retf
lock
push
test
imul
mov
pop
adc
and
dec
std
adc
push
loope
adc
ja
pop
pop
add
dec
js
lds
cmp
add
pop
or
inc
mov
daa
sbb
mov
test
aas
int
push
mov
iret
movs
movs
or
das
push
mov
or
pop
pop
add
mov
xor
dec
jnp
pusha
jno
and
loop
adc
xlat
test
cmp
or
adc
pop
and
cdq
adc
add
fistp
ins
pop
jg
xchg
and
movs
enter
movs
jg
xor
cli
adc
pop
loop
xchg
pop
ins
cmc
push
fistp
sbb
das
inc
mov
and
call
pop
jb
add
dec
in
push
sbb
arpl
fcmovnb
add
or
pop
sub
jno
xlat
push
(bad)
mov
mov
out
idiv
add
popf
adc
cmps
mov
mov
ss
add
shr
ret
ja
sub
jg
(bad)
lods
push
jbe
xchg
paddd
pop
sbb
sbb
add
cli
xchg
imul
pushf
or
push
cmp
inc
jbe
mov
ins
and
push
inc
pop
jmp
in
rcr
add
das
adc
loope
jnp
or
std
mov
addr16
pop
pop
add
add
sar
or
(bad)
iret
or
add
pop
or
xor
jmp
push
lea
sbb
lahf
leave
dec
neg
sgdtd
or
sbb
mov
daa
movs
popf
sub
xchg
std
and
cmp
nop
mov
add
or
imul
fcomp
inc
aas
push
js
push
and
addr16
add
or
pop
add
addr16
shl
add
cmp
sbb
lar
push
sbb
sub
xor
sbb
jnp
add
mov
sub
sbb
cmc
add
sbb
inc
fadd
cs
pop
xchg
adc
xor
or
ins
pop
mul
(bad)
or
ror
adc
(bad)
test
ror
lea
daa
pop
add
or
jbe
fnstcw
mov
sbb
and
ret
push
add
mov
(bad)
add
stos
stos
stos
sub
push
push
push
test
adc
and
mov
or
mov
or
pop
test
inc
push
sub
xor
add
pop
stos
or
adc
(bad)
into
inc
push
ficom
sub
push
mov
inc
push
or
mov
xor
or
pavgb
faddp
mov
and
test
xor
sub
sub
pop
push
adc
sbb
xchg
xchg
bound
xor
add
xchg
push
cmp
mov
add
push
jp
or
fwait
mul
add
lock
out
mov
add
add
inc
adc
imul
pop
push
mov
sub
xchg
add
sbb
mov
adc
mov
das
rcl
or
inc
adc
pop
loopne
lds
sbb
lock
add
push
sub
adc
pop
add
sar
scas
pop
pop
sbb
retf
xor
inc
add
bound
mov
push
mov
mov
add
mov
sub
aas
adc
cmp
cmp
sbb
push
cmp
fisttp
pop
test
push
call
ins
daa
adc
aas
das
shl
movhps
or
cmovle
or
rol
repnz
xor
jbe
mov
cmovo
fimul
add
sbb
lock
mov
pop
pop
add
mov
add
outs
inc
adc
pop
clc
(bad)
cmp
mov
adc
sbb
or
cmp
and
sub
arpl
pop
xor
mov
adc
pushf
fcomp
push
push
lahf
mov
inc
sbb
or
pop
xor
xor
add
mov
adc
ud0
lds
ins
aas
(bad)
out
(bad)
jmp
push
sbb
ret
sar
aas
lds
aas
call
mov
out
push
push
aad
pop
push
dec
or
in
leave
(bad)
jg
mov
add
pop
jmp
and
lds
mov
cmp
imul
pmulhuw
aas
pxor
movaps
mov
xor
and
es
push
clc
dec
xor
out
paddsw
rsm
leave
leave
leave
sub
xor
mov
pop
and
aas
push
inc
test
aas
jg
pop
test
dec
sbb
pusha
popa
mov
mov
and
movups
ss
dec
(bad)
or
test
and
pusha
les
fmul
pop
adc
jbe
sbb
leave
leave
leave
in
ss
cmp
ror
leave
cmp
cmp
dec
outs
pop
aas
cmovo
or
inc
lahf
inc
das
inc
in
in
inc
pop
inc
inc
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
dec
dec
or
inc
adc
push
add
iret
addr16
push
xor
out
aas
movlps
inc
fild
inc
fs
imul
pxor
in
jbe
rol
mov
dec
mov
lahf
pshufw
aaa
and
mov
pop
mov
outs
addr16
dec
ret
psrlq
pop
xchg
fstp
jecxz
jle
sub
in
pop
pop
jo
cmp
icebp
aas
repz
cmc
aas
inc
test
push
ud0
cmp
(bad)
and
jg
jg
loopne
(bad)
xlat
dec
and
fucomip
sub
mov
outs
ret
out
data16
cmp
arpl
fistp
ud0
ds
lea
sbb
pop
dec
(bad)
scas
mov
sbb
loopne
das
pop
push
imul
movhps
and
dec
jne
pop
push
add
test
jg
pop
rdtsc
test
(bad)
dec
paddusw
pop
adc
push
mov
and
pop
jg
movs
pop
test
mov
ret
aas
jg
mov
add
inc
mov
inc
aas
scas
push
popa
push
ret
jg
push
ret
add
mov
mov
inc
pop
aam
outs
pop
pusha
mov
sub
mov
test
mov
jg
pcmpgtb
and
and
mov
and
fisttp
outs
mov
iret
and
push
add
call
add
push
sar
or
push
iret
cmpxchg
push
call
push
or
mov
(bad)
lahf
lahf
rol
add
xchg
pop
pop
fcomp
out
je
mov
fild
mov
mov
adc
sbb
add
xor
int
jl
or
(bad)
rcr
mov
inc
bound
pop
clc
clc
jmp
dec
or
(bad)
pusha
cmp
cmp
xchg
inc
js
loopne
jecxz
gs
xor
push
int3
xor
gs
imul
outs
or
push
popa
outs
div
ins
repz
jb
or
dec
jbe
data16
outs
ja
ja
ret
jbe
fs
jo
pop
shl
cmp
gs
arpl
or
sbb
je
sbb
cwde
clc
scas
sub
push
imul
xor
out
push
jb
ins
test
mov
test
inc
unpcklps
arpl
cwde
xor
push
push
leave
cmp
into
int3
sbb
add
adc
mov
and
sar
mul
xor
jae
icebp
imul
gs
mov
lods
push
ins
inc
push
es
or
cmp
ins
add
sub
cmp
xor
push
jne
push
aaa
adc
pusha
mov
mov
jo
ins
aam
dec
add
fadd
in
es
cs
push
push
ins
outs
inc
mov
adc
ss
or
add
(bad)
mov
clc
xlat
add
std
pop
push
inc
inc
sub
mov
ins
cmp
inc
cmp
cld
push
add
push
sar
gs
enter
stc
push
xor
ror
int3
in
push
loop
aam
and
out
movs
out
mov
dec
fisttp
in
sbb
cmp
jo
out
ds
push
push
pop
cwde
jmp
push
fmul
ja
push
pop
das
dec
push
or
inc
(bad)
fstp
push
mov
xor
inc
inc
fisttp
mov
and
sbb
inc
iret
pop
mov
fcomp
jl
jl
cmp
or
or
scas
in
sbb
scas
cld
cmp
lahf
xchg
iret
clc
shr
jl
ds
stos
in
mov
call
das
test
in
das
loopne
mov
mov
or
ja
pop
fwait
jne
lahf
aam
movs
rcr
pop
int3
(bad)
and
mov
mov
jo
mov
adc
cs
inc
mov
inc
mov
jno
mov
xor
inc
adc
aam
test
jo
cdq
clc
pop
push
dec
and
sbb
cmps
mov
cmp
xor
ficomp
mov
inc
(bad)
cmps
in
aaa
std
or
adc
push
inc
int3
popa
jns
les
ds
neg
sbb
jl
cmp
cli
mov
push
or
in
shl
cmp
and
add
add
or
mov
cmp
sub
outs
and
xchg
mov
ins
add
inc
xchg
cmp
add
inc
enter
jbe
or
mov
pop
pusha
pop
mov
push
dec
push
addr16
lds
jne
pusha
repz
push
push
pushf
push
mov
dec
mov
fcomp
shr
fld
scas
or
in
inc
imul
repnz
ret
and
inc
adc
iret
sbb
jae
or
and
test
dec
sbb
imul
push
push
jnp
mov
mov
ror
sbb
loopne
lods
xor
mov
or
sbb
cmp
push
daa
gs
pop
push
add
pop
push
mov
or
daa
xchg
inc
ret
adc
dec
xor
rol
in
mov
ins
add
xor
dec
stos
call
add
push
inc
inc
mov
push
add
or
add
inc
fild
and
(bad)
in
push
retf
add
pushf
add
leave
inc
dec
or
xchg
out
cmp
mov
mov
mov
shl
jne
cs
pop
xchg
inc
punpckhdq
inc
ins
inc
mov
gs
add
adc
mov
cmp
adc
or
pop
clc
xchg
mov
loopne
mov
push
jb
adc
xlat
pop
aaa
fcmovnbe
push
call
or
in
test
cmp
data16
add
mov
cmp
das
add
das
push
mov
cs
or
cmp
push
cmp
or
fiadd
or
or
jne
cli
jp
add
inc
pusha
xor
inc
mov
add
test
push
rcl
push
sbb
sbb
pop
cmp
inc
jl
in
in
ret
rcl
add
push
adc
or
dec
add
add
nop
mov
xchg
cmovbe
test
in
xor
add
or
aas
rcr
retf
lds
inc
inc
adc
jno
imul
adc
xchg
pushf
pushf
pushf
mov
xchg
loop
inc
sahf
pushf
test
mov
iret
sbb
push
dec
ins
out
mov
maskmovq
pop
inc
mov
pop
adc
sbb
xor
test
in
sbb
pop
test
dec
jae
hlt
xchg
push
loopne
cli
in
or
je
sub
loope
mov
push
mov
stos
push
mov
dec
cmps
jo
push
in
fs
inc
outs
push
daa
or
div
fsub
jb
stc
jge
in
or
or
ins
xor
and
mov
xor
xor
or
inc
inc
mov
mov
icebp
or
sub
adc
pop
pusha
fisttp
repz
push
ret
mov
add
add
or
pop
mov
mov
pop
adc
inc
sub
xor
cmp
push
out
adc
jne
cmps
jecxz
add
or
or
pop
add
rol
adc
call
popa
imul
loopne
inc
shr
inc
pop
push
push
outs
ja
add
add
cmps
pop
sub
(bad)
add
add
mov
fs
imul
out
dec
add
ret
shl
xor
pop
dec
or
xor
fwait
push
in
fimul
nop
(bad)
add
pop
stos
add
dec
push
push
mov
push
jb
fnstsw
aad
or
push
push
xchg
mov
aaa
or
punpckldq
and
scas
inc
mov
adc
jb
jne
jbe
rcl
sub
daa
int
ins
and
mov
outs
cmp
adc
bndldx
xchg
outs
hlt
push
sbb
pushw
mov
inc
or
ins
xor
xchg
xchg
aam
in
jbe
(bad)
cld
pop
fmul
loop
stos
scas
pop
cmp
inc
push
inc
push
shr
addr16
pop
xor
aam
mov
inc
rcl
cwde
ja
pop
cwde
setle
sub
ja
inc
or
xchg
adc
or
lods
pop
cmp
add
push
cdq
jg
pop
pop
vmread
sbb
loop
push
pop
lods
arpl
jns
inc
push
mov
pop
inc
js
pusha
adc
sbb
pop
(bad)
daa
sbb
(bad)
rcr
or
movs
add
inc
adc
inc
adc
and
xchg
gs
popa
xor
scas
adc
data16
or
pop
clc
das
(bad)
scas
mov
aad
push
and
pop
add
or
lock
nop
fwait
aas
js
xlat
dec
add
push
cwde
es
ret
push
and
loopne
and
movs
ss
mov
push
or
or
jb
jmp
inc
ins
dec
inc
push
pop
fwait
ret
xor
ror
push
inc
fdivr
lock
gs
jo
sub
or
dec
outs
dec
xchg
or
jp
arpl
add
scas
outs
pop
or
pushf
sahf
fld
mov
cwde
setle
and
jl
fwait
inc
adc
mov
add
(bad)
sub
fadd
and
aaa
adc
popf
dec
je
inc
push
pop
cmp
push
mov
(bad)
add
add
outs
fs
adc
data16
inc
and
mov
cld
lods
push
lods
mov
daa
repnz
dec
outs
sub
add
(bad)
xor
adc
adc
push
xor
rol
pop
cld
mov
adc
sahf
(bad)
in
pop
and
in
int3
psrld
mov
shr
pop
xor
and
push
jno
lahf
outs
cwde
pop
push
adc
mov
movs
add
cwde
dec
stc
mov
add
pushf
fld
inc
inc
pop
sub
rol
or
fisubr
and
mov
lahf
push
enter
cmp
shr
(bad)
or
or
loopne
mov
fwait
or
push
jo
dec
nop
pop
push
add
jle
fcom
xrelease
xor
push
sbb
dec
cmp
and
es
sub
aaa
enter
imul
popf
mov
inc
inc
inc
ror
pop
jo
pop
enter
shl
mov
and
push
mov
jbe
mov
inc
pusha
mov
scas
mov
inc
adc
outs
mov
pop
sbb
push
dec
pop
mov
or
mov
imul
aam
mov
push
inc
inc
ror
fld
mov
dec
add
pop
movs
dec
sbb
nop
jae
xchg
btr
outs
imul
movs
mov
rcl
adc
call
das
inc
ret
scas
mov
pusha
or
mov
in
jbe
dec
aam
mov
mov
retf
mov
or
pop
and
push
push
add
push
test
mov
outs
(bad)
das
jno
(bad)
adc
iret
xor
pusha
mov
sub
or
adc
xsha256
cmps
push
add
imul
and
pop
out
mov
dec
fcomp
ror
dec
add
cdq
stos
or
pop
mov
test
jbe
cmp
pop
or
pop
pop
mov
mov
jb
push
test
stos
jmp
stos
stos
scas
mov
push
and
pop
and
or
mov
jbe
pop
ror
push
push
mov
sbb
sti
iret
pop
sub
frstor
sub
jbe
sub
pop
xor
fisttp
je
iret
push
pop
lods
pop
sub
adc
lods
pop
cmp
and
inc
add
into
es
sub
or
iret
iret
pop
sub
pop
pop
enter
in
add
das
rep
xchg
xchg
or
arpl
ror
test
enter
shl
mov
xchg
xlat
adc
xchg
or
mov
out
dec
add
cmp
outs
pop
pop
inc
cmovae
nop
lea
or
pusha
mov
aas
in
mov
add
pop
in
jmp
mov
add
pop
xor
or
mov
pop
push
add
cmps
ja
and
loop
inc
pop
out
test
pusha
lds
xchg
mov
inc
jo
mov
test
push
jmp
ins
jo
iret
pop
sub
sbb
inc
or
adc
dec
cs
adc
clts
xchg
retf
push
adc
adc
push
inc
pop
add
loop
popa
je
js
ja
fdivr
cmp
xor
or
lahf
in
dec
fsubr
xor
pop
xchg
xor
scas
in
xor
push
pavgb
mov
or
movs
cmp
unpcklps
out
loope
cmp
cld
nop
and
sub
cmp
jnp
push
push
push
test
xor
pop
push
inc
jne
and
xchg
add
xor
pop
add
cmp
sbb
popa
ja
ds
push
aaa
or
and
popa
mov
xor
int3
xor
push
push
xor
arpl
xchg
cld
dec
imul
fsubr
add
ss
xor
int
dec
fwait
in
inc
popaw
dec
das
push
sbb
ins
ins
pusha
cmp
ins
popa
or
test
push
push
(bad)
fld
xor
into
and
add
xlat
and
xor
das
xor
adc
jae
imul
div
int3
shl
ja
addr16
gs
adc
jns
in
outs
ja
push
aas
cwde
mov
sbb
mov
jmp
or
div
mov
cmp
add
sub
jae
pop
aas
inc
adc
test
adc
mov
add
ss
sub
sub
neg
ret
and
push
fdiv
push
adc
jo
fs
out
(bad)
aas
sub
mov
adc
sbb
push
mov
inc
sti
loopne
sbb
test
or
push
test
(bad)
and
push
das
adc
or
mov
add
xchg
or
and
fisub
add
add
inc
arpl
bound
dec
in
push
into
rol
int3
push
add
enter
mov
mov
daa
dec
and
mov
add
adc
sub
add
les
inc
popa
jae
push
popa
bound
sub
mov
jecxz
sbb
and
(bad)
jb
mov
jno
push
xor
ret
(bad)
sbb
add
jo
outs
inc
add
test
xor
lahf
sub
rcr
pop
sub
mov
ins
or
xor
jns
ins
outs
jae
xchg
ror
sar
sub
add
in
jg
add
jmp
paddusb
pop
inc
push
stc
std
sbb
inc
and
adc
popf
xchg
mov
ror
lods
div
popf
inc
xchg
lds
arpl
js
sub
xchg
xchg
fs
fs
enter
es
addr16
push
xor
push
addr16
pushf
jbe
lods
push
js
mov
fsub
lds
popa
imul
push
sbb
or
add
call
sub
inc
or
pop
das
cmp
outs
xor
jns
dec
(bad)
jge
das
sbb
pop
sub
or
add
add
shl
pop
and
pop
jb
lods
jnp
jl
sub
adc
imul
push
dec
pop
cmp
into
mov
mov
dec
cmps
push
dec
jne
int3
xor
add
cwde
push
adc
mov
outs
imul
call
mov
pop
daa
xchg
cmp
pop
sub
inc
gs
sub
or
in
lahf
loopne
inc
and
push
fisubr
dec
sub
addr16
ret
adc
pop
ret
push
ins
and
or
mov
mov
add
fcomp
pop
lds
loop
ret
mov
add
or
ds
mov
push
repnz
sbb
cmp
jbe
sbb
mov
cmp
sbb
push
inc
js
outs
fs
ins
xchg
or
(bad)
iret
pop
sub
pop
fbstp
and
sub
daa
rcr
push
loopne
fisttp
jecxz
loopne
jl
add
dec
inc
jp
int3
jl
mov
outs
das
add
xor
add
push
(bad)
push
or
mov
inc
dec
test
js
push
sbb
loop
mov
dec
in
hlt
sahf
fsub
movsx
and
mov
repnz
gs
cmp
sbb
mov
cmp
cmp
push
fnstsw
cmp
mov
xor
enter
(bad)
sub
or
rcr
lock
and
ds
outs
(bad)
les
encls
jno
arpl
inc
dec
pop
mov
push
dec
sbb
jbe
ss
xor
adc
lods
jmp
adc
or
sub
gs
cmc
or
ins
sbb
inc
jo
es
and
jne
pop
aaa
call
mov
sub
push
(bad)
das
fdivr
fadd
sbb
mov
add
push
sbb
xor
cwde
dec
ins
or
ins
push
push
adc
test
rol
fist
dec
aad
or
(bad)
xchg
scas
cmp
aad
mov
in
and
sbb
or
sbb
and
jbe
jnp
mov
push
clc
sbb
js
add
push
jbe
loop
outs
gs
pushf
mov
out
push
dec
ret
sub
mov
inc
push
lods
inc
imul
ror
icebp
adc
ins
mov
xor
rol
add
shl
ins
stos
push
mov
mov
loopne
imul
std
rcl
or
ror
pop
jno
or
dec
cld
lea
in
pop
push
lea
add
in
and
mov
dec
or
dec
shl
les
push
pop
sbb
pop
jbe
cdq
ret
mov
dec
jo
mov
lods
stc
cmp
repz
dec
and
repz
cmps
sub
xor
js
mov
lea
or
ins
xor
nop
aaa
mov
inc
cmp
je
push
mov
ins
xor
adc
popa
outs
sub
push
jmp
dec
jo
ud2
mov
ret
movsx
retf
xchg
shr
js
cmovle
cmove
les
or
xchg
nop
inc
push
lods
add
lea
pop
dec
sub
push
xor
pop
add
popf
das
xor
sbb
sbb
or
jo
add
jo
test
out
push
and
fisttp
pop
add
add
sub
inc
or
dec
fwait
stos
push
or
push
or
or
retf
or
push
sbb
mov
inc
(bad)
pushf
call
pop
in
das
adc
(bad)
jl
repz
or
push
fsub
push
sub
sub
inc
dec
je
lds
inc
lds
imul
lds
push
push
inc
aaa
sbb
lds
shl
out
mov
xor
pop
mov
mov
pop
and
mov
jg
lock
push
or
inc
inc
push
mov
and
adc
pop
mov
enter
loop
(bad)
pusha
(bad)
iret
repz
sub
in
xchg
pop
adc
add
(bad)
jmp
(bad)
jge
mov
adc
in
ret
aam
call
dec
inc
lahf
jns
xor
lahf
inc
adc
and
popa
cmp
cmp
rol
jge
popf
nop
push
adc
fs
fistp
pop
nop
das
mov
mov
inc
outs
push
sub
neg
clc
and
adc
mov
enter
mov
sbb
pop
leave
sahf
leave
or
mov
stos
enter
gs
mov
mov
dec
dec
aaa
push
or
mov
push
dec
pop
test
and
mov
daa
pop
in
jae
cmc
mov
jg
jns
mov
ins
jb
inc
dec
inc
mov
cmp
nop
inc
jno
sar
sbb
loop
add
ror
jo
xchg
outs
test
pop
sub
retf
mov
pusha
mov
lods
adc
cmc
pop
sbb
in
mov
push
add
rcl
add
(bad)
call
add
clc
sbb
mov
mov
lock
add
push
das
mov
mov
ret
ss
push
mov
jne
push
dec
mov
cmp
jl
imul
jmp
mov
shr
div
mov
mov
add
pop
pop
ret
jmp
retf
mov
mov
cmp
in
inc
pop
lock
ret
push
push
push
mov
mov
cmp
aas
(bad)
out
mov
pop
(bad)
scas
add
mov
mov
loop
clc
dec
cld
adc
call
test
mov
pop
pop
dec
mov
add
sub
jb
adc
push
out
in
das
int
adc
sub
dec
sub
add
or
imul
sub
xor
sbb
(bad)
std
push
dec
movzx
sub
sbb
shl
push
and
xchg
fidiv
add
pop
daa
pop
jmp
fisubr
cld
dec
cld
test
je
sub
mov
(bad)
add
mov
jmp
sub
cmp
xchg
rol
popf
ror
pop
(bad)
add
xor
push
mov
stc
sub
cs
retf
ins
jnp
mov
aaa
inc
cmp
jne
inc
adc
sub
outs
push
inc
add
pop
inc
cmp
ret
pop
inc
or
jne
sbb
mov
inc
add
ret
push
loopne
and
and
adc
or
or
mov
cmp
adc
or
loopne
lds
jne
or
inc
or
call
mov
dec
aas
inc
mov
mov
pop
jecxz
jbe
bound
outs
popa
push
push
jg
ss
shr
mov
fbstp
adc
sub
aaa
call
hlt
paddw
sub
cmp
cmp
bt
setb
lahf
cli
test
mov
scas
outs
mov
jb
test
jle
mov
sbb
(bad)
xor
(bad)
lahf
lock
jae
lock
add
sbb
clc
dec
test
jne
neg
and
cmp
je
test
sub
push
pop
or
or
push
add
enter
cli
(bad)
call
xor
sub
push
adc
and
sub
shl
cs
mov
xor
jg
imul
mov
repz
or
fcmovnb
jmp
add
add
jns
je
mov
adc
rcr
jmp
xor
(bad)
in
cmps
xlat
inc
or
movs
dec
ret
sub
add
add
xor
add
mov
add
or
inc
sahf
cmp
push
push
cld
idiv
movs
and
sub
jg
sub
pop
add
sub
pop
sub
iret
cmp
rol
aaa
sub
inc
pop
adc
and
sbb
stc
pop
jg
movzx
and
js
cmp
jne
mov
sbb
inc
jne
xchg
mov
cwde
mov
ret
pop
add
push
push
mov
es
fstp
leave
and
mov
add
std
out
neg
je
mov
fimul
fdiv
or
and
sbb
and
xor
scas
js
jp
add
and
and
fdiv
cmp
mov
outs
and
mov
shr
jle
jno
jge
push
inc
pop
pop
pop
cmp
jne
or
inc
jl
push
cmp
push
fnstenv
(bad)
daa
fcomp
movs
rcr
jg
cmp
adc
add
sub
jl
aam
add
fwait
addr16
xor
mov
ds
sbb
cmc
push
adc
ss
dec
sbb
adc
add
inc
push
push
add
add
push
push
add
(bad)
cmp
or
fxch
push
push
adc
jbe
rcr
pop
push
rcl
push
xchg
unpckhps
add
call
js
or
sbb
and
outs
in
adc
mov
lahf
cmp
xor
push
dec
or
test
dec
iret
add
pop
mov
dec
mov
cmc
inc
sbb
jl
(bad)
and
push
ja
into
mov
(bad)
fisttp
jmp
inc
cmp
jl
aas
repz
jge
shr
pop
(bad)
clc
jmp
dec
pop
div
mov
sub
xchg
loopne
jne
pop
xchg
jmp
sahf
ret
push
and
cs
movs
jb
pop
adc
xorps
sbb
pop
ja
fcomp
mov
sbb
cs
pop
cmc
fwait
aaa
sti
not
mov
hlt
add
stc
mov
and
push
cli
cmp
aad
pop
fwait
lock
add
xor
cmp
je
push
inc
and
in
sub
xchg
lea
push
rcl
jne
add
and
push
loop
lods
and
add
push
sbb
out
xchg
pop
lea
jg
lock
or
push
js
cli
cmp
(bad)
addr16
test
sbb
add
(bad)
sar
jns
rcl
ds
pop
int3
enter
fnstcw
test
or
xor
pusha
paddusb
fidiv
cdq
push
jns
sub
sar
sub
ret
cdq
js
sbb
or
(bad)
push
daa
mov
loop
adc
shl
pop
xchg
cmp
(bad)
add
add
pop
cld
std
cmp
jne
add
(bad)
rol
mov
jmp
sub
jne
adc
jle
lods
xor
xchg
rol
inc
cmps
je
or
jg
mov
cmp
jle
push
hlt
adc
or
push
or
dec
and
or
inc
(bad)
dec
(bad)
imul
push
ds
sbb
nop
or
cmp
aaa
and
xchg
aad
add
popa
inc
add
inc
xor
lock
add
popf
pop
pop
pop
stos
ja
inc
mov
ret
push
imul
dec
cmp
jbe
pop
std
ja
mov
data16
je
or
je
jmp
sbb
(bad)
cmp
lods
sti
cmp
and
or
data16
mov
pushf
jge
or
add
inc
sub
fisttp
cmp
or
aad
lock
or
push
xor
xchg
repz
imul
pop
pop
mov
nop
jmp
xor
fistp
(bad)
mov
rol
or
(bad)
sub
sub
jb
sub
adc
daa
sbb
rol
(bad)
adc
push
(bad)
iret
push
jo
in
sbb
adc
mov
push
jge
fnstenv
and
sub
lods
ja
ds
inc
mov
jns
fadd
in
adc
jg
cmp
sahf
inc
inc
dec
jne
jmp
xchg
add
push
sbb
fdivr
inc
or
and
nop
vpshaq
mov
clc
cmp
dec
push
inc
inc
ucomiss
loope
and
jb
retf
setae
shl
jg
(bad)
or
dec
jb
and
and
xchg
cwde
add
jmp
mov
imul
and
fs
dec
das
inc
pop
sub
or
or
data16
call
(bad)
enter
inc
out
mov
sub
lds
or
test
fs
add
and
shr
fs
clc
std
iret
mov
add
push
rcl
add
add
mov
sbb
push
neg
ror
mov
mov
jbe
add
dec
ds
xor
sub
mov
inc
movs
jge
je
cmp
pop
cmp
jo
adc
jne
add
daa
adc
ja
mov
cs
(bad)
mov
enter
pop
sbb
hlt
jg
xor
test
add
adc
repnz
jle
xacquire
add
outs
jb
mov
loopne
sti
daa
jg
cmps
jb
add
(bad)
mov
mov
mov
mov
leave
(bad)
retf
adc
add
jg
ret
add
jmp
cs
add
por
mul
aas
call
aam
sbb
sbb
mov
jmp
es
add
cmp
or
pop
call
(bad)
inc
or
or
adc
xor
jg
adc
and
push
push
lock
fwait
mov
xor
xchg
fucomip
mul
sbb
popa
or
jne
inc
xor
sbb
aas
hlt
ds
ret
inc
sub
mov
cdq
ret
or
pop
or
sbb
icebp
sbb
adc
mov
push
pop
sbb
inc
and
push
mov
in
and
aas
call
xchg
sub
sbb
pop
push
loopne
mov
fucomi
clc
dec
loopne
sar
add
jg
in
mov
es
rcr
dec
xor
bound
or
fcmovnb
cmps
fsubr
ror
pushw
or
adc
jmp
xor
jp
jbe
xchg
mov
(bad)
in
dec
fadd
jae
pusha
ja
or
dec
fidiv
xor
(bad)
lahf
lock
leave
push
cmps
ret
jle
(bad)
xor
adc
mov
neg
mov
daa
fnstenv
mov
mov
cmps
das
cmp
add
not
jae
clc
jge
push
push
or
adc
neg
shr
out
outs
(bad)
mov
mov
leave
pop
jmp
push
add
rol
xor
or
and
xlat
scas
xor
call
jae
mul
fcom
shrd
rcr
mov
adc
push
mov
test
mov
sbb
pop
cld
jge
jbe
cld
pop
fimul
repz
mov
sbb
hlt
inc
push
(bad)
clc
jmp
dec
jne
out
mov
jmp
or
jmp
adc
push
scas
cmp
icebp
add
and
(bad)
cmp
shr
jo
add
loopne
pop
ror
sti
mov
aaa
xchg
or
lea
push
cwde
fs
jg
test
jb
movs
loopne
xchg
int
pop
mov
mov
(bad)
in
ss
pop
ja
sub
lahf
jle
pop
cmp
and
je
mov
inc
and
adc
int
test
or
neg
ins
imul
daa
push
sbb
jmp
std
mov
or
cmp
data16
jl
cmc
or
or
cmp
adc
inc
jno
pop
jo
fld
mov
or
clc
xor
push
adc
dec
das
jmp
cld
add
add
mov
jae
xor
add
out
aas
cmp
xor
dec
mov
(bad)
jmp
data16
mov
loopne
mov
mov
add
push
cmps
push
add
sbb
das
add
add
loopne
shl
out
add
(bad)
dec
mov
and
inc
neg
ret
shl
repnz
jl
inc
mov
push
mov
or
and
add
adc
xchg
lods
xor
pop
pop
push
in
push
jo
push
iret
mov
setne
clc
push
imul
pop
or
push
call
or
(bad)
mov
xor
rol
lock
sbb
fnstsw
sahf
setne
jmp
jmp
ret
cmp
pop
imul
movs
sbb
add
or
push
retf
dec
aad
push
sbb
mov
clc
icebp
and
sub
popf
inc
push
mov
adc
xchg
out
mov
por
and
out
(bad)
mov
inc
add
rcr
icebp
xor
pusha
or
mov
add
repz
ds
cli
inc
ja
icebp
imul
sbb
add
mov
in
push
sub
hlt
mov
mov
pop
movs
das
xchg
fisttp
int
(bad)
scas
mov
ins
jb
xchg
cmp
mov
jle
shr
mov
sbb
in
xor
shl
aaa
mov
push
push
push
cmp
nop
inc
pop
(bad)
fistp
sahf
pop
call
lods
in
rol
dec
sub
mov
push
jne
push
loopne
jp
push
retf
enter
ficom
clc
loopne
call
add
and
sub
xor
lea
adc
fwait
les
lahf
sahf
adc
jb
add
push
ds
sub
in
mov
dec
mul
je
loopne
popf
jno
dec
imul
cmp
jp
jge
rcr
or
sub
cmp
addr16
and
cs
daa
sub
in
push
cmp
js
add
jnp
or
or
jbe
shl
jmp
mov
clc
xor
cmp
mov
push
cmp
(bad)
dec
test
jmp
mov
psubb
rol
aam
sbb
push
cmp
jmp
adc
(bad)
mov
dec
jae
in
loopne
add
in
push
pop
test
or
movs
add
or
pop
mov
in
add
jmp
jnp
push
popa
xchg
in
in
cwde
and
int3
add
loopne
pushf
scas
dec
or
jp
inc
sbb
add
pop
lock
add
add
lea
shr
mov
pop
and
out
or
hlt
mov
add
push
sub
cs
(bad)
mov
daa
ficom
loopne
push
add
and
add
xchg
adc
test
mov
out
mov
mov
add
fstp
repz
not
push
sbb
adc
jnp
rcr
sbb
movs
push
dec
rol
jne
jmp
ror
push
dec
and
cmp
jle
test
(bad)
fbstp
js
add
jb
ud0
ja
lods
stos
add
add
push
clc
shr
lock
adc
pop
(bad)
test
or
fadd
mov
jg
mov
retf
clc
icebp
(bad)
fsub
push
imul
xchg
les
inc
xlat
add
and
add
add
cmp
dec
imul
jge
mov
pop
(bad)
pop
out
lods
dec
clc
mov
add
mov
mov
mov
sub
sub
aaa
icebp
cs
mov
sbb
and
dec
add
fiadd
xchg
mov
sbb
mov
push
push
inc
out
(bad)
clc
mov
pushf
xor
add
or
add
jbe
or
cwde
push
and
sbb
into
aad
lea
jae
lock
sbb
add
xchg
or
adc
xor
xorps
dec
xchg
add
mov
xchg
inc
in
jl
jnp
inc
push
cwde
movs
or
adc
mov
add
js
or
pop
test
inc
xor
sbb
test
mov
add
std
add
movs
lahf
addr16
jge
and
xchg
jmp
fucomi
xchg
aaa
test
scas
hlt
call
lea
sub
mul
jne
popa
mov
jmp
adc
std
shr
lds
lock
inc
call
int3
or
add
fild
je
cmp
mov
(bad)
xor
jnp
dec
jmp
inc
sti
push
loopne
in
dec
(bad)
push
imul
test
arpl
xchg
mov
jle
outs
loope
je
add
ss
call
xor
sti
jns
mov
push
mov
sbb
lea
into
cld
imul
xchg
hlt
pusha
call
leave
retf
cdq
mov
mov
mov
add
adc
and
xchg
ret
enter
adc
push
sub
or
(bad)
jle
je
inc
mov
lods
push
pop
out
or
ret
push
push
lds
push
dec
push
clc
(bad)
pop
(bad)
push
mov
test
mov
mov
mov
sbb
sbb
mov
mov
add
stc
jp
call
std
mov
mov
mov
mov
xor
dec
add
cmc
out
call
(bad)
mov
fld
jmp
and
cmp
movs
stos
mov
pop
pop
pop
pop
jmp
in
xor
push
mov
jmp
add
add
sub
mov
add
out
adc
xor
add
add
imul
or
in
push
mov
xchg
mov
cmps
aas
jge
or
cmp
xor
jmp
add
jne
jae
sbb
add
sub
int3
mov
add
jmp
fcom
inc
clc
aas
add
xor
cmp
jae
div
xor
div
mov
ds
sub
cld
jmp
jns
push
jb
sbb
rcl
call
nop
fdecstp
(bad)
jmp
xor
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
or
sbb
sub
sub
je
mov
add
fdivrp
jp
sub
cmp
pop
push
jmp
sbb
push
pop
jmp
scas
pop
fsubrp
adc
add
jmp
mov
cmp
jne
rol
(bad)
sahf
inc
cmps
jb
pop
ret
jmp
rcr
pushf
mov
xchg
lock
je
adc
jne
jno
shl
jnp
sbb
neg
pop
outs
ror
icebp
adc
jmp
or
mov
(bad)
sar
mov
repnz
not
dec
je
mov
mov
and
lock
(bad)
in
icebp
jbe
push
lea
loop
lods
and
mov
push
push
or
fild
cmps
pop
mov
jne
lea
jmp
jle
sub
nop
ja
test
xor
test
cmp
hlt
je
sbb
push
test
jl
inc
xor
adc
or
dec
or
sbb
and
sub
les
je
inc
dec
jne
(bad)
daa
xlat
xor
ins
pop
jg
mov
xlat
sub
fucomi
hlt
push
or
dec
ss
sbb
aas
cmps
(bad)
push
scas
or
call
das
add
lea
sub
pop
pop
ror
pusha
xchg
or
lods
ror
mov
jl
add
jbe
mov
pop
jp
mov
inc
pop
cmp
fs
dec
(bad)
mov
les
dec
ja
push
inc
hlt
mov
mov
pop
xchg
push
enter
loopne
out
xor
rol
mov
mov
popa
or
test
into
push
out
aas
popf
hlt
iret
cmp
or
push
push
test
dec
out
aam
or
nop
aas
fbld
jb
pop
adc
cmp
fdiv
mov
cmp
adc
popf
mov
outs
push
sbb
pop
mov
sbb
inc
cs
push
clc
push
call
mov
mov
or
pop
loopne
div
dec
dec
add
inc
sahf
into
jecxz
icebp
not
xor
jb
fs
sar
into
adc
mov
fdivp
imul
mov
xchg
push
or
pop
lock
or
push
mov
jo
les
jo
jne
sbb
jae
mov
jp
and
mov
and
mov
lea
add
ins
mov
adc
or
adc
dec
cmp
ret
jg
jmp
add
(bad)
cmp
push
and
mov
ins
test
mov
jge
sub
jle
cmp
jg
lea
cmp
xchg
add
fst
or
add
cmp
push
jle
jnp
push
je
ins
push
sbb
push
(bad)
mov
hlt
lea
cmp
jle
push
add
aas
hlt
sub
aam
sub
sub
lock
add
sbb
sbb
je
and
in
add
push
add
jno
cmp
(bad)
pop
mov
inc
sub
loop
sbb
jo
das
jo
hlt
test
scas
mov
jle
out
jge
mov
add
and
adc
push
enter
data16
xchg
lock
sub
dec
mov
or
js
sbb
jmp
loope
pop
mov
jne
out
cmps
ss
add
mov
sbb
xchg
add
ja
sub
js
je
adc
jo
or
add
add
or
sar
xchg
idiv
nop
xchg
inc
call
ja
inc
fcomip
jl
setb
mov
jo
es
mov
adc
loope
push
outs
xor
das
enter
or
push
push
(bad)
adc
mov
xor
dec
add
xchg
xor
jnp
(bad)
(bad)
clc
movs
add
mov
jmp
fcomp
stos
add
(bad)
xor
icebp
xchg
sbb
call
es
cmp
(bad)
xor
cdq
xchg
bound
imul
or
mov
adc
in
pop
or
pop
xchg
sbb
popa
shr
inc
mov
adc
fsub
jge
push
add
add
fs
and
pop
push
adc
fcomp
jae
fdiv
repnz
adc
jne
mov
and
xchg
iret
mov
hlt
push
and
add
add
call
or
shl
adc
fiadd
xor
nop
adc
mov
cli
ss
loop
sbb
mov
push
loope
mov
xor
mov
jbe
aaa
jne
adc
fucomi
cmp
je
mov
sub
sar
dec
shl
dec
ins
int3
test
pop
push
rol
sbb
leave
test
jmp
dec
mov
push
pop
into
rol
mov
add
adc
push
mov
shl
test
hlt
imul
out
jg
push
into
jmp
push
jne
mov
sbb
add
xor
sub
(bad)
mov
imul
adc
hlt
adc
lds
adc
or
or
aaa
cld
push
in
sbb
sbb
lods
test
popa
jmp
inc
ret
mov
daa
test
call
cmp
adc
adc
inc
jne
cmp
jl
mov
ja
adc
jae
cmp
loopne
(bad)
mov
clc
movs
push
adc
add
xor
mov
and
outs
or
pop
hlt
inc
jmp
add
and
dec
and
inc
sub
cld
movs
pop
adc
jbe
mov
movs
or
pop
retf
add
mov
clc
clc
adc
xchg
jmp
or
sar
jb
nop
out
cmp
test
add
xor
imul
das
add
or
test
psrld
jg
in
cld
jle
cmp
add
adc
mov
adc
sbb
or
pop
add
pop
mov
aam
sbb
dec
in
inc
lock
sbb
cs
(bad)
mov
jmp
loop
pop
sar
out
test
cmp
xchg
pusha
lds
lea
mov
jmp
sbb
and
sub
mov
std
dec
sub
aad
movs
or
inc
neg
adc
push
psubusb
sbb
jne
xchg
inc
add
dec
inc
mov
dec
stc
and
push
mov
fnsave
add
xor
mov
push
adc
aas
sbb
ja
stc
mov
jmp
push
add
sbb
adc
adc
inc
sub
push
rol
mov
mov
pop
mov
loopne
in
jg
push
jno
and
or
xchg
scas
mov
ins
rcl
pause
add
xchg
add
and
push
pop
pop
popa
popa
jo
call
outs
les
sub
add
push
ror
lahf
and
xchg
add
jecxz
sahf
add
push
or
jle
mov
adc
outs
and
call
rol
and
or
jmp
xchg
push
xor
fdivr
and
fld
jmp
aas
call
mov
arpl
jecxz
inc
scas
in
xor
or
inc
mov
nop
adc
pushf
test
mov
jl
fs
loopne
sub
sar
fcmovbe
pop
inc
adc
jb
into
dec
push
adc
dec
pop
test
mov
lds
not
sbb
loope
jae
std
jg
push
arpl
lea
pop
cmp
aam
les
femms
cmp
les
add
and
inc
xor
sbb
jecxz
sbb
mov
adc
jp
dec
mov
dec
lock
jne
cmp
into
or
inc
test
shr
jbe
fisub
je
add
cmp
sbb
sbb
add
cld
es
outs
sbb
hlt
hlt
xchg
mov
mov
(bad)
pop
jne
sbb
test
inc
fnstenv
or
call
fmul
fstp
or
cmovne
arpl
enter
add
cld
cld
clc
loope
or
leave
add
pop
pop
arpl
mov
stc
add
movs
adc
xor
and
stc
push
xchg
xchg
cmps
sbb
stos
mov
pop
and
clc
scas
or
mov
add
mov
push
xor
cmp
and
stos
mov
inc
mov
mov
inc
xchg
and
jecxz
data16
adc
cmp
repnz
icebp
mov
adc
stc
pop
addr16
fcmovbe
sbb
addr16
xchg
icebp
or
inc
cmp
inc
jl
push
fs
inc
or
push
ins
pop
inc
or
and
inc
pop
inc
dec
or
pusha
jb
pop
adc
pop
sbb
add
cld
lock
js
in
push
xchg
pusha
sbb
cld
addr16
cmc
pop
push
nop
add
cld
push
arpl
adc
out
mov
enter
add
sub
jae
adc
icebp
into
icebp
and
push
inc
sub
mov
cmp
mov
or
sub
stos
imul
pusha
add
push
push
jmp
inc
pop
das
pop
outs
pop
inc
cmps
push
or
fwait
pop
push
and
inc
xor
cld
sti
sub
je
pop
sub
sub
je
sub
retf
cmps
push
ltr
bswap
push
(bad)
test
push
push
inc
aam
fmul
lea
les
xchg
ss
dec
arpl
adc
test
ins
call
clc
add
jge
push
jne
xchg
bound
std
push
popa
and
out
sbb
or
scas
inc
je
or
cmp
pop
jne
popa
push
jecxz
jae
sahf
xlat
jo
jae
add
das
jno
sub
mov
test
(bad)
pop
cld
lods
mov
repnz
push
dec
push
and
arpl
add
sbb
inc
jecxz
sbb
pop
(bad)
mov
ret
xor
dec
ins
inc
icebp
sub
jno
and
dec
pop
xchg
out
inc
dec
test
inc
mov
push
adc
jno
test
inc
popf
xor
adc
sbb
dec
xchg
fisttp
xor
inc
sub
mov
out
int3
xor
pusha
(bad)
ins
mov
scas
(bad)
mov
and
out
mov
pop
arpl
cmp
das
mul
pop
cs
xor
cmp
jno
fs
xchg
xor
sbb
pusha
pusha
push
pop
stos
(bad)
rcr
jge
jno
mov
dec
xor
xchg
push
(bad)
pop
push
xor
stos
or
shr
retf
jmp
or
jge
mov
neg
jmp
or
je
mov
inc
sbb
push
mov
sub
push
dec
div
mov
mov
inc
dec
or
or
jg
inc
dec
lahf
icebp
inc
fimul
shl
pop
pop
jg
bnd
stc
mov
dec
cmp
loop
sbb
test
mov
enter
sbb
sbb
pop
out
adc
sub
out
mov
lock
ret
call
mov
adc
ror
jbe
adc
(bad)
dec
adc
jb
push
or
pop
or
push
add
xor
pop
and
test
(bad)
sub
jae
mov
xchg
add
cli
test
dec
xchg
or
add
mov
retf
rep
jmp
lea
test
ins
je
or
or
mov
add
out
fstp
mov
or
ror
call
hlt
cmp
mov
addr16
fisttp
dec
and
adc
or
mov
xor
ret
dec
fcomp
rol
sub
into
dec
(bad)
mov
call
jg
cmp
jl
repnz
xor
inc
sti
cmp
dec
inc
push
adc
(bad)
cdq
mov
jmp
pop
inc
movs
fisttp
fnstenv
and
cmc
adc
push
stos
or
jne
or
fisubr
fisttp
sahf
sub
clc
lods
int
mov
dec
and
div
movs
mov
xor
mov
mov
mov
cmp
and
push
(bad)
dec
mov
jns
cmp
in
shl
add
or
call
jmp
xor
or
enter
div
mov
inc
mov
inc
ret
je
dec
jne
loop
cmp
mov
cmp
in
and
and
dec
push
xor
jecxz
lea
inc
cs
mov
sti
dec
jne
ret
stos
adc
dec
ja
shl
addps
retf
dec
mov
mov
pushf
fwait
inc
or
mov
inc
je
pop
outs
pop
lock
push
cmp
adc
adc
xor
push
xor
add
pop
inc
loop
ret
push
mov
lock
mov
push
mov
(bad)
scas
and
inc
add
and
mov
cmp
sub
sub
sub
xor
outs
sub
sbb
and
out
mov
sub
or
fbstp
sub
xor
fbld
inc
call
dec
adc
push
mov
push
add
les
lds
push
popf
xchg
sub
adc
mov
inc
mov
xchg
in
in
aam
pop
push
mov
push
shl
addr16
dec
mov
arpl
mov
loope
cmp
dec
dec
inc
dec
inc
dec
adc
cwde
push
push
(bad)
lock
(bad)
pop
jo
ret
std
fcom
dec
sbb
sbb
sbb
cmp
push
stos
inc
sbb
stos
jmp
cmp
scas
jge
ja
adc
pop
inc
clc
dec
cmps
ja
dec
and
mov
pop
repz
jbe
xlat
xor
sbb
sbb
cmp
add
or
pmuludq
out
(bad)
in
jg
and
ds
add
shl
or
pop
add
nop
pop
dec
cs
(bad)
in
cli
pop
cs
nop
or
sti
push
(bad)
ja
lock
sti
movs
stc
adc
daa
push
push
scas
dec
ja
dec
mov
mov
adc
dec
pop
adc
xor
clc
cmp
or
je
mov
shr
jmp
add
mov
or
loopne
aam
sets
cmps
je
or
push
or
in
mov
cmp
mov
jmp
sbb
cmp
fucomi
mov
adc
jne
adc
jle
jno
adc
jmp
fimul
ins
jmp
xchg
fld
cmp
shl
cli
or
leave
dec
jmp
sub
je
or
sub
add
adc
jp
loop
add
pop
push
inc
sub
add
(bad)
mov
sub
jbe
lods
mov
xor
mov
fiadd
mov
mov
push
iret
add
(bad)
and
or
xor
(bad)
imul
cmp
inc
(bad)
imul
pop
mov
adc
(bad)
(bad)
jmp
inc
jmp
cmp
jge
mov
inc
mov
jmp
cmp
lods
stos
adc
aaa
sahf
jmp
mov
jmp
push
adc
fsub
je
scas
push
pop
je
addr16
pop
jmp
out
mov
cmp
repz
(bad)
clc
test
jecxz
adc
nop
add
in
sub
dec
add
mov
jge
pop
ret
ror
es
popf
in
jg
xor
je
in
cmc
sub
dec
push
mov
xor
dec
lea
or
or
cmps
icebp
cmp
retf
in
loopne
icebp
in
out
cmp
and
xor
and
inc
pop
push
mov
mov
in
add
jmp
push
test
xor
jmp
push
arpl
fild
cmp
bound
mov
call
movsx
adc
or
hlt
mov
repnz
(bad)
dec
jne
jmp
inc
in
or
ret
les
jmp
mov
inc
or
dec
daa
bound
shr
fiadd
ror
in
inc
and
jge
nop
sbb
dec
sub
repnz
ds
mov
push
sub
imul
out
jge
inc
push
ret
mov
into
add
push
cmp
pop
push
add
dec
add
mov
inc
or
and
scas
mov
or
push
push
adc
or
fstp
add
lahf
add
push
inc
push
push
pusha
fld
sub
mov
imul
cmps
xchg
rol
jl
clc
inc
loope
pop
inc
pop
pop
frndint
fcmovnu
mov
xchg
fld
fstsw
fwait
mov
div
add
add
or
mov
cmp
jne
mov
(bad)
sti
lea
mov
inc
sub
mov
shr
and
add
push
adc
ret
mov
jns
mov
mov
jge
mov
or
cmp
jb
mov
js
(bad)
scas
loopne
out
push
and
(bad)
pusha
xor
sub
int
jmp
mov
call
push
or
lods
push
add
add
push
xor
or
aad
fwait
jmp
mov
or
je
lock
ror
neg
into
ficomp
je
xor
or
(bad)
mov
pop
mov
push
inc
sub
mov
dec
add
mov
ins
or
mov
sar
or
mov
outs
adc
prefetchw
add
adc
sbb
sub
stos
jmp
jne
mov
and
jne
dec
jne
cmp
inc
cmp
aas
and
inc
jmp
dec
adc
inc
pop
into
cmp
sub
sub
jbe
pop
jmp
mov
add
pop
pusha
sbb
pop
sbb
pop
xchg
sbb
or
hlt
(bad)
fldcw
js
cs
dec
in
push
fs
jle
(bad)
sub
xor
int3
or
cmp
sub
jmp
fild
cmp
jnp
out
aaa
bound
ret
ss
(bad)
paddb
add
popf
mov
sbb
ret
add
loopne
add
aas
jmp
fstp
xchg
mov
mov
inc
add
lea
fstp
mov
jge
push
jo
retf
and
sar
add
ret
repz
and
mov
pminub
inc
jmp
popf
shl
mov
stc
popa
imul
imul
jl
add
jecxz
add
mov
add
cmp
enter
push
lea
lea
inc
mov
and
stc
mov
in
or
and
cs
xchg
adc
xchg
adc
push
adc
push
push
push
scas
mov
(bad)
cld
lea
loop
push
jg
das
mov
loopne
or
mov
mov
ins
push
or
cld
mov
jno
inc
push
in
fadd
fsubr
movs
add
jp
mov
adc
arpl
sub
or
in
sar
mov
adc
and
call
icebp
sub
into
mov
add
push
cdq
mov
xchg
pop
push
(bad)
and
pop
mov
out
inc
add
fld
mov
psubw
ja
and
jae
xor
dec
push
mov
fstp
fwait
mov
cmp
or
repnz
and
inc
inc
pop
shr
push
repnz
sbb
shr
data16
leave
out
cwde
add
inc
out
adc
push
lods
aaa
iret
add
or
xchg
xchg
fist
not
sbb
icebp
ucomiss
push
push
xor
mov
xchg
ins
stos
jmp
shr
sub
ja
mov
pop
lock
sbb
dec
icebp
adc
xlat
xor
mov
(bad)
push
loopne
stos
bound
in
or
cmp
fwait
pop
pop
push
adc
fnstenv
div
push
adc
jge
je
adc
or
push
or
push
cmp
or
adc
mov
int3
jmp
enter
enter
xor
push
and
and
xchg
jo
push
nop
dec
fild
push
fsubr
jne
add
pop
xor
sub
scas
dec
xor
mov
inc
test
js
sar
push
pop
mov
ins
mov
and
sub
icebp
test
into
sub
stos
jmp
add
add
js
ds
fdiv
daa
sbb
mov
cwde
mov
push
out
fld
xor
hlt
bound
inc
call
clc
sbb
or
cmp
push
ror
cmp
std
and
add
mov
add
shr
cmp
shl
ret
or
pop
(bad)
or
xchg
fstp
sbb
sbb
pop
call
and
imul
test
add
xor
shl
nop
popa
jmp
popa
test
out
xor
icebp
or
lea
mov
jge
repnz
inc
pushf
ret
push
cmp
and
out
iret
and
and
(bad)
enter
loopne
xchg
or
jo
adc
and
jmp
(bad)
adc
mov
(bad)
mov
xor
mov
iret
outs
rol
sbb
hlt
std
add
cld
fwait
test
sub
test
add
lea
dec
adc
mov
adc
daa
ja
pusha
add
jg
and
or
jb
push
ins
je
cmp
ja
aas
push
mov
jle
lea
pop
dec
inc
jne
icebp
pop
pop
pusha
sub
dec
mov
aas
cdq
idiv
imul
mov
shr
jb
add
cli
add
repnz
ds
ds
add
jg
or
ret
or
(bad)
push
pop
sbb
inc
std
std
(bad)
mov
push
and
rcl
mov
out
and
shl
xchg
call
push
mov
sub
dec
call
jg
inc
(bad)
mov
clc
pmuludq
add
push
ret
push
out
pop
inc
pop
sub
mov
dec
data16
stc
mov
add
sbb
inc
add
sub
loop
and
jge
shl
lock
lods
mov
test
loop
sbb
mov
dec
add
sub
imul
cs
xor
and
pop
mov
pop
xchg
adc
push
pusha
xchg
sub
mov
xlat
pop
pop
jo
push
cmps
sub
in
mov
jbe
dec
cmp
mov
adc
cmp
jb
adc
xor
sbb
clc
lock
mov
dec
inc
mov
arpl
mov
(bad)
push
sbb
test
addr16
sbb
cld
mov
mov
pop
push
and
or
test
adc
push
fsubr
sbb
push
adc
adc
aam
mov
fwait
nop
pop
sbb
(bad)
loopne
pop
push
or
fwait
(bad)
in
push
or
pop
sbb
loop
sbb
xchg
or
dec
add
xor
xor
lahf
add
sbb
add
leave
mov
cmp
test
add
jle
cmp
mov
(bad)
ds
cmp
jge
sbb
cmp
daa
hlt
fisub
xor
(bad)
adc
stc
push
and
pop
pop
cmp
mov
les
movs
jne
les
arpl
xor
push
xor
xchg
mov
nop
call
mov
lock
inc
mov
lea
inc
out
jb
pop
call
xchg
mov
repnz
pop
add
inc
push
pushf
adc
shr
sbb
rcr
push
push
cmp
push
or
aam
fmul
adc
fs
dec
scas
callw
adc
mov
and
data16
jg
int3
inc
fisttp
push
pop
sbb
dec
jmp
in
sub
dec
inc
inc
inc
in
mov
cmp
xor
mov
inc
mov
or
or
lea
or
mov
ror
hlt
stc
inc
jecxz
outs
fist
ror
push
repnz
jge
(bad)
fsubp
hlt
mul
loop
jecxz
jno
in
xor
sbb
adc
test
jns
and
dec
add
inc
hlt
inc
in
adc
cmp
sbb
daa
add
and
and
test
test
fild
mov
mov
inc
imul
xlat
jbe
push
jmp
or
jne
mov
sbb
xor
and
test
loope
lods
mov
mov
jle
test
cmp
dec
jno
cmp
std
pusha
add
sub
test
aas
mov
add
fstp
bswap
inc
mov
clc
in
inc
jbe
xchg
and
popf
loopne
clc
pop
add
outs
mov
pop
mov
les
rcr
ret
sbb
xor
mov
xor
and
in
sbb
add
push
adc
test
call
mov
inc
mov
and
or
adc
xchg
mov
jne
cmp
jne
push
push
sub
mov
add
push
inc
sub
or
pop
jns
sub
jns
rcr
sbb
jo
outs
mov
fmul
sub
sub
add
dec
xor
add
cmp
ss
std
pop
pop
inc
add
stos
lods
jecxz
loop
call
pop
ss
jmp
dec
jb
adc
pop
lods
and
mov
shr
in
enter
pop
mov
(bad)
sub
pop
jmp
add
jmp
sbb
pusha
mov
or
mov
dec
jne
mov
mov
mov
cmp
xchg
push
out
scas
and
fbstp
or
pop
or
or
(bad)
or
les
pop
or
mov
pop
or
or
or
xor
movs
rol
cmp
push
sub
sub
sbb
or
sub
pop
out
cmp
push
push
mov
test
xchg
enter
cmp
hlt
dec
ret
mov
xchg
ss
movs
inc
das
popf
dec
push
lea
and
enter
fadd
call
(bad)
fst
and
pop
in
mov
jb
sbb
sbb
sub
push
inc
cld
mov
inc
and
aas
push
ss
popa
test
sub
je
dec
dec
lods
loopne
or
push
xor
sbb
das
imul
adc
aad
add
adc
pop
pushf
add
push
and
xchg
add
pop
adc
xor
cmps
add
in
xor
ret
jmp
adc
push
adc
add
shl
jle
xchg
cwde
clc
dec
jg
je
or
je
or
je
enter
pusha
or
je
or
sub
push
cmp
stos
mov
xchg
jne
mov
jg
dec
add
fisubr
mov
movs
repnz
push
bound
jmp
pushf
(bad)
lds
sub
xchg
mov
push
mov
xchg
out
inc
(bad)
stos
je
xchg
(bad)
cmps
sbb
or
jmp
ins
and
out
sbb
ins
xchg
xor
adc
or
pop
bound
inc
xchg
push
add
nop
sub
and
lea
add
lods
out
loopne
push
and
adc
dec
clc
mov
scas
push
and
loop
or
push
lds
xchg
arpl
xchg
fs
add
sbb
mov
jns
sbb
adc
lds
mov
and
xor
jae
cwde
push
add
mov
xor
lahf
add
xor
add
lea
inc
xchg
cmp
jnp
adc
in
and
cwde
adc
inc
js
test
ror
iret
mov
jo
dec
dec
stos
arpl
fsubr
add
add
rol
addr16
xchg
cmp
or
imul
adc
xor
sub
cmp
add
shl
xor
inc
daa
add
dec
test
loopne
in
lods
cwde
sub
or
jae
mov
cmp
lods
mov
jbe
sub
in
mov
add
sbb
ud2
sub
mov
add
gs
pushf
adc
and
add
and
xchg
(bad)
jo
fistp
inc
pushf
adc
or
sbb
hlt
cmp
lock
jp
mov
or
das
add
sbb
pop
add
sbb
sbb
jb
inc
lea
mov
mov
sub
add
xor
mov
adc
jp
test
push
lock
and
inc
dec
jne
sbb
outs
cs
nop
outs
js
popa
push
xchg
xchg
mov
loopne
ror
inc
xchg
jp
dec
jmp
loopne
das
ret
mov
retf
call
xor
xchg
pop
add
data16
test
fdivr
dec
xlat
inc
jge
in
mov
pop
hlt
or
loopne
add
mov
mov
mov
dec
mov
(bad)
pop
(bad)
fsubrp
repz
jnp
add
mov
adc
sub
hlt
shl
hlt
or
jae
cdq
jb
inc
cld
cmp
jle
sub
xchg
pop
mov
sub
mov
shl
mov
jne
sbb
retf
pop
dec
int3
fbstp
mov
mov
lds
ins
sti
add
inc
cs
cmp
cmps
test
fs
sub
retf
cmp
shr
jmp
jne
pop
out
mov
sub
xchg
sbb
xchg
lock
pop
jg
fist
in
in
out
(bad)
popf
cmp
jl
test
cmp
rol
pop
sbb
xchg
lahf
fs
ret
xor
ins
cld
(bad)
cmp
dec
jne
clc
out
pop
or
or
mov
cwde
sbb
adc
push
add
mov
clc
jle
aaa
rol
fdiv
xor
movs
add
lock
(bad)
mov
or
jecxz
psubd
fwait
loope
popa
dec
xor
add
adc
inc
outs
mov
aaa
cmp
les
mov
jp
jl
mov
ret
sub
mov
cvtps2pd
dec
sub
push
outs
xchg
inc
clc
(bad)
jmp
in
dec
jne
xor
mov
lock
rol
cmp
push
cld
pop
push
inc
jle
jbe
cld
cdq
xor
sub
add
mov
add
mov
add
lea
jecxz
sub
adc
pop
cld
jmp
dec
gs
mov
aam
aam
enter
add
stc
hlt
adc
fcom
or
xor
std
jle
or
push
inc
call
les
popa
repz
and
repnz
push
enter
push
rcl
push
cmc
xor
cs
cmp
fnstsw
xchg
add
and
je
add
jo
or
add
in
add
retf
js
jmp
in
cmps
push
in
or
mov
sbb
jns
aam
and
out
jns
pop
nop
or
jecxz
add
push
nop
repnz
jb
inc
fdiv
inc
jmp
push
in
or
jmp
push
out
sbb
push
out
out
inc
inc
out
test
lock
adc
js
pop
retf
jle
push
sbb
inc
icebp
out
jbe
pop
pop
push
jmp
cmp
ja
in
add
rol
out
jnp
mov
push
jmp
push
out
mov
jmp
or
jmp
jnp
cwde
repnz
add
and
adc
fwait
push
popa
icebp
popa
sbb
sbb
test
push
adc
push
popa
ja
in
xchg
sub
or
cmp
add
add
add
push
and
ret
jl
cmp
mov
fcom
adc
mov
add
jo
retf
repnz
clc
xor
dec
sbb
inc
rol
jge
jle
loope
xor
mov
lods
sub
xor
repz
xor
sub
sub
cwde
jecxz
repz
mov
pop
add
push
rol
sub
ins
mov
pop
test
jge
adc
mov
and
(bad)
jmp
push
sbb
aaa
mov
jmp
or
sbb
icebp
xchg
clc
pop
pop
mov
add
or
repnz
fild
pop
dec
rcl
push
pop
cmp
idiv
add
push
fs
hlt
iret
and
xlat
fmul
repnz
jl
mov
xchg
fimul
add
std
and
aaa
or
cmp
jp
mov
test
or
pop
pop
and
pusha
sub
lahf
daa
push
xor
movs
aam
mov
push
xchg
sbb
iret
sub
jmp
test
push
mov
fwait
sub
lea
mov
inc
and
pushf
inc
pop
inc
test
fbld
adc
dec
aam
add
inc
fmul
test
add
jb
mov
lock
(bad)
imul
mov
inc
(bad)
and
popf
push
lea
pop
sbb
aaa
(bad)
sub
fcomp
mov
or
fnsave
jle
or
push
add
fild
jnp
out
out
in
jo
jb
or
jge
call
sbb
mov
dec
adc
lahf
out
ds
fidiv
inc
add
sub
add
enter
dec
out
push
arpl
jmp
or
add
fild
add
jge
mov
test
je
sub
lock
and
sub
push
inc
sub
inc
gs
sub
push
or
mov
push
inc
mov
or
dec
xor
je
push
(bad)
xchg
lock
pop
fcomp
adc
add
inc
fcomp
dec
sar
pop
fs
out
push
or
mov
bound
inc
iret
mov
bound
(bad)
sub
xchg
add
imul
adc
out
pop
xor
imul
int
jne
cmp
jmp
xor
pushf
inc
pop
(bad)
mov
(bad)
mov
mov
add
add
cmc
or
or
shl
out
(bad)
xlat
pop
nop
pusha
cmp
push
pop
test
dec
(bad)
outs
push
test
mov
mov
mov
enter
mov
jmp
add
mov
xchg
push
inc
pop
add
push
ds
add
add
cmp
(bad)
xlat
aam
aaa
jo
lahf
inc
mov
push
movs
test
mov
add
cmp
(bad)
out
inc
adc
push
adc
xor
mov
add
aad
xchg
lock
xor
sti
pop
add
sbb
push
mov
inc
push
in
js
sbb
test
cmovl
cmp
push
je
or
jp
sbb
jmp
add
jno
pop
movs
sub
add
je
aaa
jo
push
pusha
xor
loopne
inc
or
frstor
xor
push
sbb
dec
xor
fcom
mov
xor
mov
inc
push
sub
sbb
mov
mov
adc
inc
sub
aam
int3
sub
ss
push
or
ret
and
rcr
ds
ss
sbb
movs
dec
xor
int3
aas
inc
enter
repnz
mov
push
pop
clc
test
loopne
jp
push
xlat
push
test
sbb
and
and
int
cmps
xbegin
mov
dec
sub
call
test
jne
test
dec
loopne
xlat
or
add
jo
and
or
enter
mov
inc
daa
jo
pop
lods
pop
imul
push
and
and
das
sub
das
sub
sbb
inc
cmp
daa
daa
add
mov
jae
add
nop
lods
test
or
cmp
push
add
rol
iret
das
cld
sahf
add
push
sbb
and
add
mov
aaa
clc
jmp
jne
call
sbb
adc
loop
mov
js
stc
aas
nop
call
add
scas
daa
push
or
push
xchg
mov
adc
pop
xchg
sub
add
adc
pop
pop
ret
aaa
push
and
push
push
lock
idiv
mov
ret
test
adc
inc
loope
inc
add
inc
jge
ins
mov
gs
dec
lea
lahf
outs
movhlps
xor
inc
lock
dec
inc
sub
xchg
inc
inc
retf
fadd
(bad)
inc
add
push
mov
inc
sub
out
jmp
mov
imul
push
pop
cmp
or
push
inc
dec
inc
rol
push
cmp
dec
inc
outs
inc
hlt
cmp
dec
or
dec
sub
dec
call
add
xor
js
xor
cmp
add
shr
movs
mov
and
xor
lds
add
int
cmp
je
fs
mov
das
add
imul
add
cmps
mov
jne
imul
aas
mov
test
sbb
sbb
push
mov
add
mov
push
and
mov
stos
or
repz
dec
rcr
xchg
cmp
sub
jl
dec
mul
push
rol
retf
push
call
cli
jae
inc
ins
push
jle
xor
mov
repnz
mov
ror
int3
xor
dec
pop
stc
test
test
sub
and
push
inc
jo
js
dec
adc
(bad)
xchg
in
cs
push
icebp
and
xor
(bad)
ss
or
or
ja
adc
idiv
sub
xchg
add
xchg
sbb
add
push
mov
ror
mov
mov
pop
dec
dec
pop
imul
inc
enter
pop
jmp
scas
sub
leave
or
jge
jle
adc
mov
leave
inc
add
(bad)
jecxz
or
add
jg
sub
(bad)
add
add
add
daa
sbb
sbb
xor
jo
call
push
cmp
je
inc
cmp
daa
and
test
(bad)
and
(bad)
fld
pop
in
xchg
inc
xchg
sub
cmp
cmp
loope
sbb
out
push
and
test
test
je
jmp
cmp
(bad)
iret
out
in
pop
inc
lea
cld
(bad)
sbb
es
jmp
mov
jae
push
push
pop
push
push
mov
jmp
mov
leave
popa
pop
loopne
jne
push
push
or
adc
inc
aas
push
sub
xchg
cmps
cmps
add
add
and
pop
add
xchg
cmps
pop
jge
inc
xchg
sbb
lock
add
jno
sbb
mov
bound
fiadd
test
and
movs
out
push
in
shl
aaa
mov
add
int
mov
popf
loope
add
lock
mov
sbb
xor
add
out
cld
ret
dec
inc
je
ins
fisttp
mov
rcl
add
bound
push
and
(bad)
stc
adc
or
(bad)
sti
inc
mov
inc
pop
or
in
cld
inc
add
pop
mov
xor
dec
sub
test
imul
or
test
dec
test
or
mov
fst
lock
cmp
pusha
mov
sub
dec
add
or
in
adc
pop
adc
cmova
test
in
aad
mov
cs
or
pop
xor
mov
sub
xor
lods
or
xor
js
enter
pop
dec
pop
dec
inc
cmp
aas
and
add
inc
lock
(bad)
cmp
(bad)
mov
sbb
mov
push
pop
mov
xor
dec
cmp
add
inc
clc
and
or
test
dec
fadd
ja
mov
aaa
push
addr16
mov
rol
push
push
je
xor
jle
mov
sbb
adc
xchg
(bad)
test
imul
dec
jecxz
push
fisttp
adc
dec
je
xchg
jmp
loopne
pusha
or
push
add
add
or
call
mov
push
push
or
loop
out
and
(bad)
sbb
push
loop
inc
add
(bad)
in
xor
push
pop
sidtd
inc
push
sub
lods
and
mov
add
dec
fs
cmp
sbb
sti
adc
adc
ja
xchg
pop
adc
shl
pop
test
(bad)
xchg
xchg
and
jecxz
dec
xor
pop
dec
sbb
jle
or
push
aaa
mov
das
add
movs
lock
cmps
fadd
pop
dec
adc
cld
and
inc
jl
jle
adc
jp
es
ret
or
cmp
push
pushf
test
inc
mov
xchg
popa
and
adc
movs
jge
xor
test
pop
pushf
adc
dec
mov
push
adc
inc
xor
cmp
add
and
aaa
cmp
mov
mov
inc
or
mov
call
call
sub
ss
pop
je
jae
mov
push
push
and
and
sub
jne
fmulp
or
jecxz
js
bound
sti
inc
xlat
adc
js
cmp
fld
cmp
push
jecxz
inc
call
or
xor
in
and
icebp
mov
adc
inc
imul
jmp
mov
mov
push
or
aas
jo
pushf
mov
pop
pop
out
sub
dec
je
push
adc
jmp
mov
(bad)
comiss
mov
mov
aaa
mov
ins
jmp
sbb
mov
add
mov
xchg
mov
cmp
out
stos
xor
scas
ret
push
sbb
pop
add
(bad)
loopne
in
jp
add
aaa
xchg
xor
cmp
mov
mov
ins
mov
or
jge
(bad)
dec
sub
fsubr
fild
xchg
cmc
loopne
jmp
in
(bad)
mov
push
loopne
call
leave
sbb
(bad)
or
dec
(bad)
and
sub
push
jle
inc
test
stos
add
lods
pop
popa
adc
cmp
outs
mov
cmp
push
sub
sbb
pushf
je
dec
mov
aas
in
call
push
xor
inc
cmp
xor
rcr
inc
adc
es
cmp
je
jmp
mov
dec
add
push
shl
or
add
push
movhps
mov
adc
adc
add
inc
add
push
xor
add
fs
retf
xchg
or
jecxz
scas
or
sub
movs
dec
sbb
jmp
dec
test
add
sub
mul
inc
push
mov
jno
or
or
mov
shl
cmp
sahf
inc
mov
fs
mov
out
movsx
lea
sbb
out
sub
mov
mov
ror
dec
imul
cld
push
(bad)
enter
fbstp
(bad)
test
or
xchg
mov
pop
sub
mov
stos
or
lahf
repnz
mov
pop
pushf
call
movs
mov
add
out
pop
pop
(bad)
jecxz
int3
lea
loope
mov
add
dec
aad
push
jl
mov
xor
les
arpl
cmp
test
rol
or
jae
fld
cmp
and
push
mov
mov
push
in
(bad)
mov
xor
ins
sahf
push
adc
mov
push
pusha
push
sbb
xor
push
mov
pop
rol
test
add
lock
mov
fwait
add
xchg
jae
sar
or
mov
loopne
jnp
jmp
xor
add
push
hlt
ror
mov
xlat
sub
in
movs
or
js
lock
sbb
mov
icebp
in
adc
out
mov
push
adc
std
imul
aam
mov
mov
dec
in
dec
fstp
(bad)
fisttp
cmp
push
hlt
sbb
mov
adc
movs
sbb
or
add
add
adc
inc
dec
push
out
loopne
into
adc
inc
or
xchg
push
aam
and
adc
sub
loope
push
inc
xchg
cmps
pshufw
shl
ret
xor
dec
push
(bad)
jb
pop
adc
inc
in
jno
ret
jge
bound
loop
mov
in
cmp
add
and
inc
lea
mov
cld
xor
adc
fdiv
test
pop
sub
cmp
psubusw
cmp
jmp
fbstp
(bad)
mov
cmp
call
leave
dec
mov
xor
adc
mov
ins
movs
add
sub
and
push
inc
adc
push
test
dec
cmp
cmp
jmp
jg
lds
or
adc
cmp
dec
sbb
sbb
pop
mov
imul
inc
cwde
je
push
(bad)
mov
sub
adc
pop
mov
push
xor
or
out
xlat
inc
ss
mov
jecxz
add
shr
mov
adc
and
dec
and
fdiv
mov
jo
fcomp
stc
and
or
adc
mov
pop
and
push
call
and
jne
pop
rcl
push
mul
sub
add
test
sbb
sbb
hlt
mov
and
inc
push
jmp
(bad)
in
push
cmp
js
jbe
mov
push
add
or
cdq
into
mov
in
mov
call
aad
add
dec
(bad)
shr
mov
or
mov
mov
xor
test
add
jne
and
mov
xchg
sbb
push
cld
pop
inc
and
push
adc
add
pop
push
call
and
and
and
ret
pop
mov
cmps
cwde
inc
and
(bad)
jp
fst
sub
and
jg
or
push
xor
xor
pop
mov
mov
push
(bad)
ss
inc
outs
sub
std
add
add
jbe
or
push
fcomp
adc
xchg
lock
dec
test
or
retf
rol
add
leave
test
or
pop
rol
pop
mov
jp
out
and
and
out
(bad)
add
xor
add
adc
push
jbe
(bad)
and
iret
push
dec
ficomp
mov
data16
jnp
push
mov
retf
sti
and
or
pop
dec
dec
sbb
push
inc
mov
dec
add
jmp
test
jg
adc
aas
xor
xor
cmp
pop
loopne
sar
sar
mov
pop
inc
inc
ins
test
call
es
call
pop
test
adc
retf
jecxz
and
cmp
dec
cli
mov
ret
jge
dec
dec
fwait
jle
cmp
jl
push
add
sbb
test
je
inc
xor
dec
adc
sub
mov
sbb
iret
push
push
and
outs
fisub
push
xor
fcmovnb
cmp
push
and
mov
dec
jge
(bad)
ror
add
pop
adc
test
or
lahf
mov
jmp
dec
add
mov
call
jns
out
add
adc
push
dec
mov
cmps
(bad)
enter
or
pop
sar
ret
repz
shl
popa
cmp
jge
and
mov
push
sahf
dec
xchg
sbb
dec
push
push
add
sub
push
or
lods
push
retf
ret
cmp
daa
and
pop
sbb
add
pusha
mov
and
sub
lahf
xchg
pop
inc
cs
add
jae
pop
or
cli
add
cwde
shl
call
enter
lea
pop
inc
ficom
push
es
sub
and
sar
rol
inc
push
mov
sbb
mov
mov
dec
inc
or
(bad)
rcr
outs
add
push
push
call
das
push
or
cmp
and
(bad)
call
inc
retf
push
push
dec
xor
pop
je
cs
dec
jo
ins
ret
mov
data16
pop
xchg
add
lahf
je
cmp
mov
xor
pop
and
rcl
mov
ror
(bad)
add
fdivrp
retf
pop
rcr
and
sub
pop
inc
popa
xchg
inc
movs
xor
dec
sbb
rol
aaa
and
leave
fldcw
paddusb
fdivr
mov
out
dec
(bad)
jge
add
push
mov
push
test
xchg
aaa
push
or
xchg
pop
ret
dec
sbb
dec
js
xchg
bts
jne
(bad)
sbb
retf
jne
xchg
or
or
jge
pop
or
pop
jne
pop
das
add
aam
mul
mov
jp
add
in
mov
dec
mov
xchg
push
(bad)
shl
call
and
cwde
mov
in
xchg
(bad)
push
add
shr
mov
sbb
push
call
ret
mov
lock
inc
or
ins
dec
inc
pop
mov
add
add
pop
pusha
sub
test
xor
adc
sbb
je
inc
mov
loopne
ror
test
arpl
or
pop
add
push
in
ror
ss
mov
or
adc
mov
cmps
push
inc
lods
mov
inc
push
xor
and
mov
mov
pop
sbb
or
sti
in
mov
dec
mov
sbb
push
rcl
xchg
pop
enter
ret
xchg
int3
call
(bad)
sub
dec
(bad)
lock
cmp
sub
out
cmp
aas
sbb
fldcw
lea
add
loop
mov
sbb
jnp
sbb
jo
sub
lock
test
dec
inc
hlt
test
out
cmp
or
in
inc
mov
or
mov
test
je
jno
test
jp
iret
lock
pop
add
sub
outs
and
rol
andps
xlat
adc
hlt
or
ret
sub
ss
fiadd
xor
add
or
mov
jmp
loopne
aas
test
or
pop
add
mov
test
cmp
pop
xor
adc
add
adc
adc
xchg
jle
jne
push
inc
ret
sub
movs
jmp
inc
add
pop
adc
push
or
pop
add
xchg
push
inc
aam
and
in
test
adc
fidiv
leave
push
push
fs
add
frstor
pop
add
xchg
fsubr
fidiv
mov
xor
dec
dec
outs
fs
clc
adc
or
les
adc
or
jae
ins
dec
les
and
add
lods
test
inc
je
pop
adc
sub
add
popa
or
mov
je
inc
les
(bad)
xchg
add
push
xor
xchg
add
and
mov
cmp
xchg
adc
ds
mov
nop
and
addr16
pop
jge
sbb
stos
add
clc
repnz
call
lds
xor
mov
or
jbe
loopne
jo
cwde
and
xor
hlt
push
push
xor
(bad)
aam
sahf
ja
mov
inc
adc
shl
call
sbb
retf
mov
or
xor
inc
dec
jne
mov
cmp
je
shl
or
add
jb
jmp
mov
xor
rol
mov
test
jne
push
mov
out
adc
inc
jl
pop
jg
or
xor
inc
jmp
sbb
and
pop
pop
pop
ret
pop
push
fcom
bound
adc
lahf
push
das
adc
dec
add
enter
repz
adc
adc
sub
test
rcr
fmul
or
or
or
add
jle
aam
fild
in
jl
test
xchg
add
xor
and
adc
mov
jmp
cmp
cs
inc
pop
test
ret
pop
ret
push
mov
xchg
mov
pushf
adc
jo
movs
sbb
cmp
ret
sub
cmp
mov
mov
cmp
xchg
adc
inc
clc
add
adc
mov
xor
inc
rol
mov
rcl
hlt
sahf
jl
(bad)
lock
jmp
add
jnp
jl
push
mov
dec
or
in
dec
fs
and
mov
aaa
bound
mov
lea
scas
sub
fistp
push
or
aaa
mov
bound
or
out
sub
pop
sbb
push
push
push
or
jb
sbb
pop
pop
dec
mov
or
movs
lods
scas
mov
xor
call
test
or
cmp
imul
mov
lods
dec
test
push
add
jo
pop
push
pop
aaa
add
add
push
pop
outs
adc
dec
lods
cmp
mov
daa
icebp
outs
das
push
imul
jb
outs
or
jp
inc
xor
adc
add
je
imul
inc
add
popa
loop
cmp
pop
add
jl
lock
ror
call
push
push
pop
mov
push
inc
push
xchg
mov
inc
cmp
jne
movzx
cld
add
fidiv
and
sbb
lods
into
(bad)
sub
cmp
cli
xor
and
pop
pop
ret
and
ret
push
jl
lock
call
dec
in
and
ins
add
mov
aaa
push
push
and
jne
mov
mov
inc
mov
mov
inc
clc
adc
jle
and
sub
lock
jmp
add
dec
and
mov
adc
loopne
sub
daa
lea
daa
xchg
loopne
icebp
mov
cmp
ror
adc
push
pop
or
inc
pop
jbe
xor
pop
add
push
adc
push
inc
inc
inc
mov
inc
adc
sbb
es
xor
jb
pushf
shr
push
mov
(bad)
int
icebp
push
fs
ror
or
xor
pop
inc
push
shl
in
rcl
aaa
or
out
dec
pop
adc
pop
sbb
scas
fdivr
pusha
ror
jnp
test
cmp
and
sub
xlat
cwde
aam
cli
cpuid
and
addr16
pmaxub
lea
test
int
and
(bad)
push
push
fs
push
jne
(bad)
(bad)
test
jge
add
sub
gs
add
sub
sub
or
and
jnp
outs
adc
mov
shr
cmp
jns
inc
push
aas
clc
sub
pusha
imul
pop
add
ret
pop
xor
inc
and
inc
xor
popf
push
inc
and
mov
fadd
iret
xchg
(bad)
in
popa
into
xor
xor
test
dec
jo
int
mov
cdq
addr16
dec
xor
fwait
xchg
in
inc
pop
adc
inc
xor
mov
movs
jmp
sbb
test
dec
sub
or
sbb
cmp
adc
aas
inc
imul
dec
aaa
test
add
pop
cld
test
nop
or
add
jns
lock
rol
call
outs
stos
inc
out
inc
push
push
adc
or
mov
mov
jne
ins
mov
and
imul
add
add
and
cmp
or
and
pop
push
and
cli
leave
pop
push
(bad)
loopne
(bad)
xlat
cmps
lods
dec
cs
cmp
mov
movs
inc
mov
mov
inc
mov
cld
fst
add
inc
adc
xor
mov
daa
push
inc
inc
adc
loop
daa
mov
ret
xchg
pop
ins
cwde
sub
cmp
adc
(bad)
lock
mov
hlt
jecxz
jle
scas
jl
sbb
jecxz
adc
lds
push
fmul
pop
cmp
pop
aam
test
cmc
xor
jo
fnstsw
pop
outs
aas
mov
lea
in
push
adc
das
xchg
in
or
data16
add
mov
pop
jge
aam
sbb
fidivr
xor
mov
cmps
adc
sar
out
xor
in
mov
or
cmp
mov
inc
rcr
mov
mov
outs
ins
aaa
loop
arpl
sbb
call
pop
xor
and
mov
aad
repnz
out
mov
mov
push
movs
adc
or
ror
rol
or
mov
mov
outs
push
cmp
sbb
inc
and
(bad)
sbb
inc
daa
js
(bad)
mov
push
adc
out
into
(bad)
cmp
daa
push
mov
mov
mov
mov
test
dec
cmp
cmp
add
push
or
(bad)
pop
xchg
mov
shr
push
pusha
sar
hlt
adc
outs
fnstcw
and
ins
inc
and
inc
jo
add
or
(bad)
scas
mov
repz
call
ins
das
mov
xchg
repz
bound
inc
cmps
clc
fwait
mov
stos
push
aaa
loope
sub
aam
sbb
lds
aad
push
test
mov
push
mov
mov
out
outs
je
cmp
and
jle
sbb
pusha
cmc
test
or
jae
pop
cmp
dec
dec
pop
push
fmul
add
dec
cld
fwait
pushf
mov
or
or
psubsw
xchg
sbb
xor
adc
and
pop
adc
mov
adc
mov
mov
pop
mov
shl
jb
leave
and
int3
rol
enter
xchg
daa
les
les
pop
into
xor
cmps
bswap
rol
leave
jo
dec
or
push
in
add
mov
xor
(bad)
in
stc
cs
jo
leave
jo
(bad)
fild
pop
push
mov
xchg
and
push
add
and
ds
aam
adc
sub
loope
and
(bad)
cmp
sbb
push
xor
push
dec
lods
add
jo
lahf
pop
adc
and
clc
sub
jno
xor
mov
xor
imul
icebp
call
pushf
or
and
dec
neg
mov
and
sahf
inc
in
mov
inc
pop
mov
rcr
or
sahf
mov
sub
jnp
fld
(bad)
pusha
push
int
out
out
mov
add
daa
les
add
mov
mov
call
sub
inc
or
jne
shl
out
and
sbb
adc
add
loop
(bad)
adc
or
sub
pushf
mov
adc
xchg
and
dec
aas
mov
shl
fst
push
mov
or
test
cld
add
jo
cmps
and
lods
test
daa
sub
inc
cmp
jle
or
xor
dec
mov
dec
(bad)
and
rcl
inc
fdiv
sahf
call
and
icebp
mov
jno
mov
enter
adc
cmp
sbb
pop
add
push
cs
adc
pop
mov
xchg
sub
fbld
ficomp
xor
adc
test
jge
lock
shl
cmps
and
mov
and
bound
add
inc
xchg
dec
ret
mov
cmp
outs
sbb
push
adc
fidivr
mov
ret
retf
sub
int3
and
dec
or
js
lods
cmp
mov
add
or
push
jl
fistp
cwde
and
pop
xchg
addr16
ins
gs
pop
js
or
outs
or
add
mov
pop
mov
(bad)
rol
lds
js
cmp
gs
(bad)
js
or
jecxz
rol
(bad)
fcmovnb
adc
aaa
xchg
or
pop
pop
mov
ja
adc
jecxz
add
addr16
test
repz
xchg
or
sbb
sbb
or
mov
fwait
jb
sbb
outs
dec
outs
imul
inc
cld
loope
jnp
mov
adc
or
iret
sub
sbb
(bad)
or
add
shr
mov
or
or
sub
or
arpl
xchg
ds
mov
pop
inc
sbb
push
push
adc
dec
sub
cmpxchg
lea
or
fwait
inc
mov
sbb
rol
sbb
push
stc
pop
es
out
sub
xor
mov
push
jo
ret
mov
sbb
sub
fld
test
(bad)
loopne
mov
lea
push
ss
sbb
pop
cmp
push
in
imul
add
xor
jno
push
sub
cwde
daa
addr16
pop
jp
dec
xchg
cmp
inc
jnp
adc
push
sbb
or
(bad)
(bad)
xchg
or
or
sbb
outs
int3
xor
fs
shl
xor
xor
call
sub
shl
enter
push
sbb
adc
or
mov
ret
movs
inc
push
movs
je
dec
mov
call
movs
and
and
push
out
(bad)
loopne
(bad)
mov
mov
xchg
mov
sub
push
xor
push
xchg
dec
sbb
mov
mov
pop
or
hlt
aas
cmp
and
mov
dec
mov
inc
adc
pop
add
mov
into
in
shl
cmp
out
pop
or
loop
popf
loop
inc
add
pop
mov
inc
sub
push
aaa
pop
inc
adc
jl
adc
xor
push
arpl
sti
add
mov
inc
adc
xchg
mov
pusha
and
push
ficom
xor
sbb
adc
lock
ror
xchg
(bad)
loopne
xchg
xor
into
add
push
adc
adc
add
aas
stos
cdq
push
aad
jmp
mov
mov
imul
ret
pusha
xor
adc
jo
inc
or
jg
gs
cmp
test
pop
sub
xchg
dec
popa
or
lods
mov
adc
dec
aam
jg
jecxz
push
sub
add
or
(bad)
in
push
jmp
call
(bad)
xlat
sub
out
mov
popa
(bad)
jmp
scas
lods
test
mov
push
mov
xor
mov
add
xchg
inc
xchg
pop
mov
push
imul
xchg
cmp
test
cmp
sbb
or
or
xlat
adc
add
add
(bad)
test
addr16
or
pop
sub
jmp
mov
ror
add
adc
std
rol
(bad)
loope
xor
push
push
cmp
xchg
mov
nop
retf
mov
sahf
mov
pop
sub
jge
mov
rcr
push
rol
jbe
xor
xor
mov
adc
cwde
jg
inc
fadd
jo
cmp
adc
rol
pop
mov
or
movhps
rcr
and
cli
adc
out
outs
test
or
inc
push
sub
inc
mov
jbe
test
add
pop
and
or
sub
add
inc
aaa
sbb
shr
mov
inc
ja
sbb
dec
jne
shr
test
inc
pop
div
test
mov
push
leave
jl
inc
pop
add
(bad)
mov
add
shl
or
mov
push
xor
add
ficomp
add
and
mov
add
fs
and
push
inc
and
inc
ss
popa
push
mov
xchg
xchg
add
inc
and
adc
inc
adc
jno
push
test
pusha
ja
enter
mov
add
sub
mov
push
(bad)
mov
xchg
and
or
xchg
iret
enter
push
test
adc
lahf
or
out
inc
(bad)
inc
shl
push
scas
push
lock
cli
fsubrp
test
das
sub
push
dec
(bad)
in
iret
enter
push
clc
fmul
das
inc
push
xor
inc
shl
pop
xchg
outs
in
lock
loopne
mov
pop
(bad)
in
sbb
pop
das
fdivr
ficom
aam
shr
inc
mov
pop
enter
in
and
les
xor
shl
leave
xor
mov
fs
outs
iret
mov
ja
cmps
lods
push
sahf
xchg
iret
enter
pop
(bad)
ja
push
shl
pushf
aam
pop
sub
xchg
pop
nop
jnp
ja
push
je
mov
pushf
mov
pop
sahf
pop
ja
out
loop
and
jbe
popf
push
scas
imul
(bad)
js
mov
jnp
push
out
jo
int3
in
outs
(bad)
ins
fistp
push
loope
aaa
sti
push
test
das
fs
xchg
popf
ret
int
pop
pop
call
lahf
push
pop
ror
jae
mov
sub
popf
mov
cmp
push
sub
cmps
js
and
popf
add
jne
push
fwait
test
(bad)
repz
push
test
mov
(bad)
clc
mov
adc
mov
mov
cmp
adc
mov
cmp
enter
ins
je
or
adc
in
mov
int3
mov
add
jl
mov
inc
inc
ret
push
inc
aas
nop
or
and
int3
pop
jp
sbb
jmp
aas
fwait
mov
in
ds
cmp
dec
jg
ja
or
clc
ficom
sbb
or
inc
mov
outs
jb
inc
imul
xor
or
push
dec
gs
popa
adc
or
std
adc
dec
jae
pop
jo
jmp
jns
aas
push
push
push
popa
jb
ins
and
(bad)
pop
or
mov
int3
adc
xchg
fst
push
dec
imul
pop
(bad)
push
jbe
push
or
daa
out
dec
cs
jg
dec
or
fcomp
mov
and
daa
jg
ret
adc
jg
pop
in
inc
push
dec
dec
gs
or
shl
add
add
xor
add
push
outs
jne
xchg
test
dec
xor
pushf
or
je
push
test
jecxz
and
inc
and
mov
fidivr
(bad)
add
jae
scas
loopne
xor
movs
inc
ins
popa
addr16
adc
sbb
out
das
xor
add
adc
jo
pop
pop
pop
sbb
xchg
sbb
dec
ins
adc
pop
sub
imul
push
sbb
aas
or
sbb
adc
dec
test
jge
jo
pop
pop
in
movs
test
or
push
or
addr16
push
inc
push
push
inc
dec
ins
or
(bad)
fcomip
push
adc
ins
or
arpl
cwde
ficomp
xchg
jns
and
arpl
imul
ins
je
xchg
dec
cs
and
arpl
popa
ds
and
addr16
dec
xchg
(bad)
mov
adc
jne
jo
ins
dec
test
imul
enter
jae
fs
pop
enter
cwde
mov
imul
add
loope
data16
addr16
mov
adc
gs
aam
popa
ins
ins
mov
enter
xor
jae
sbb
cld
(bad)
sub
adc
ja
push
push
imul
add
push
jae
ret
push
sbb
or
inc
push
jb
jae
rcl
push
inc
js
gs
es
adc
(bad)
call
cs
inc
gs
jb
inc
add
inc
pop
addr16
xor
push
je
mov
cmp
or
inc
pop
inc
inc
push
or
xor
mov
je
mov
push
xchg
cmp
sub
dec
cs
sub
push
push
test
or
enter
jb
add
das
jo
push
jae
jb
jo
outs
outs
add
(bad)
bound
xor
test
sub
inc
pop
ret
out
in
push
cwde
test
jbe
in
adc
outs
inc
pop
dec
or
cmp
sbb
lock
and
or
inc
lds
dec
ins
push
inc
push
dec
inc
dec
push
xchg
add
add
arpl
retf
inc
add
and
pushf
xor
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
outs
pusha
mov
add
push
dec
push
ja
push
jnp
dec
push
jns
sti
or
push
dec
dec
es
push
aam
fdiv
inc
lahf
out
shr
push
mov
jl
jbe
mov
hlt
push
rol
in
loopne
ds
jg
inc
pusha
scas
dec
popa
inc
xor
inc
pop
addr16
sbb
cmovne
scas
mov
sub
xlat
push
sbb
xor
mov
add
lahf
sahf
add
mov
xchg
(bad)
inc
add
ins
data16
in
or
mov
or
inc
inc
imul
and
inc
fstp
xchg
pop
push
popa
jb
sbb
popf
cmp
out
cmp
call
inc
add
loope
pop
or
inc
nop
lahf
xchg
pop
je
jp
or
mov
sbb
fs
add
push
add
pop
xor
sbb
add
outs
mov
loopne
xchg
ja
pop
xor
add
inc
jo
mov
rcl
xlat
xchg
ja
sub
xlat
xor
call
scas
mov
jb
cwde
xchg
out
(bad)
stos
push
inc
adc
jbe
jmp
push
or
ss
adc
add
mov
cmp
adc
jecxz
pusha
push
imul
cmps
and
sahf
adc
shl
or
mov
daa
fs
xchg
jp
lock
pushf
mov
mov
ja
jb
mov
clc
adc
test
xor
(bad)
pop
adc
inc
xlat
es
xor
fcom
or
adc
pause
fist
adc
arpl
int3
dec
sbb
sar
jns
cmps
inc
or
and
test
jmp
sub
xor
lea
rcr
dec
cmc
sbb
and
mov
stc
sar
imul
scas
lods
xor
fst
outs
pop
fs
or
sub
add
test
sbb
cmp
push
push
fmul
clc
jb
xor
adc
or
adc
seto
and
retf
push
nop
adc
lds
xchg
sub
or
loop
loope
lea
inc
cmp
lods
adc
jmp
add
inc
nop
push
mov
cmp
mov
jl
cmp
cmp
jo
xor
and
pop
xchg
push
xchg
or
or
sub
loope
mov
dec
imul
mov
xchg
xchg
in
sub
inc
jmp
clc
cmp
xor
adc
in
adc
jo
jg
popa
jl
mov
sahf
or
jge
aad
push
cld
xchg
adc
pop
(bad)
(bad)
es
adc
dec
mov
lea
arpl
cmp
add
push
add
sub
mov
pop
sbb
cwde
fisttp
add
pusha
rol
adc
je
push
or
mov
add
xor
push
push
dec
call
mov
and
mov
es
cld
js
repnz
or
dec
adc
xor
xor
sbb
and
and
sub
leave
and
shr
push
mov
xor
dec
push
mov
jmp
cmp
sub
xchg
inc
ins
xchg
or
fcomp
dec
dec
xchg
push
cs
cmp
dec
int3
cmp
push
xchg
dec
push
call
sub
sbb
call
popa
adc
mov
xchg
out
ror
aam
popa
outs
je
outs
addr16
inc
js
dec
gs
dec
outs
je
inc
fs
jne
dec
jne
inc
imul
fst
das
outs
dec
inc
outs
cmovg
pop
outs
cmp
mov
jb
inc
ins
jo
xor
jb
ins
mov
push
pop
cmp
mov
and
add
inc
outs
outs
ins
inc
adc
add
add
(bad)
pop
dec
xchg
ret
outs
push
pop
push
ds
(bad)
fmul
jb
adc
jo
gs
fistp
jo
or
dec
sar
test
push
pop
pop
adc
jno
popa
ins
or
jo
test
xchg
adc
jo
sbb
push
scas
jge
mov
and
mov
aam
out
std
push
int3
int3
leave
mov
push
loopne
cs
or
adc
das
in
retf
push
clc
fwait
lahf
mov
les
cmp
pop
dec
adc
sub
outs
xchg
push
jmp
cmp
xchg
push
enter
push
nop
sti
mov
ss
js
aaa
cs
inc
pop
xor
pop
addr16
fdiv
int3
push
rol
add
shl
or
jnp
pop
or
popf
adc
mov
loopne
ror
fimul
dec
add
pop
out
clts
add
add
jmp
lahf
(bad)
add
clc
call
or
push
mov
adc
push
inc
push
adc
or
or
mov
retf
mov
or
mov
retf
int3
add
add
push
mov
pop
sbb
(bad)
fs
add
and
jno
mov
inc
cs
std
xchg
cmps
pop
dec
jae
ins
shl
and
iret
adc
add
les
add
popa
jae
stos
add
fcmovnu
enter
jns
push
imul
push
jg
adc
bound
int
xchg
(bad)
adc
loope
and
stos
test
lock
ins
cmp
add
cmp
adc
add
in
cmps
faddp
xor
sbb
adc
xchg
xchg
add
mov
(bad)
arpl
sbb
push
push
mov
jns
jo
out
cmps
jne
or
add
mov
retf
mov
lods
jp
sub
cmps
push
out
inc
pop
push
stos
inc
push
push
bound
pop
js
lock
rcl
pop
add
mov
call
add
ins
inc
jmp
add
fiadd
xor
jae
aad
out
push
pop
adc
ja
xchg
jbe
add
pop
and
ja
(bad)
jmp
and
adc
inc
popa
mov
cmp
dec
adc
push
clc
mov
add
push
dec
xchg
mov
jbe
imul
cld
inc
sti
push
push
pop
mov
retf
mov
jg
push
mov
test
mov
scas
rcr
lds
add
ret
sbb
nop
add
push
mov
pop
hlt
hlt
iret
repz
inc
aad
loop
in
mov
cmp
enter
jge
xchg
mov
pop
or
mov
out
fisub
loopne
push
mov
inc
cmps
inc
push
jmp
sti
push
add
push
adc
ds
jge
cmp
mov
push
or
lahf
test
add
movs
adc
push
cld
fbstp
cmp
outs
inc
jne
arpl
pop
xchg
add
inc
imul
adc
sbb
and
xchg
js
shl
jne
outs
and
aam
sbb
(bad)
push
jb
arpl
jne
pop
add
push
lods
jmp
push
add
inc
pusha
rcr
scas
adc
imul
mov
push
lahf
or
push
push
mov
call
pop
std
stos
retf
mov
loope
jle
adc
cwde
inc
test
adc
dec
add
pop
mov
lea
push
lahf
push
cmc
or
xchg
xchg
mov
jmp
out
cmp
mov
fild
add
lods
(bad)
pusha
ficomp
jo
push
in
out
fild
cmp
sub
mov
loopne
cmps
jg
pop
sub
sub
jo
adc
mov
push
aas
xlat
pop
xor
and
jo
mov
pop
in
jmp
jbe
or
sbb
pop
xor
fdiv
cmps
les
mov
aad
cwde
pop
xor
jno
adc
fild
cmp
push
sbb
test
adc
pcmpgtd
or
jecxz
popa
xchg
jg
pop
inc
add
frstor
in
test
es
xor
jg
inc
mov
pusha
and
xlat
pop
xor
sbb
add
(bad)
fsubr
loop
add
jo
sbb
(bad)
fbld
daa
fild
cmp
sub
pop
sub
into
in
pushf
cpuid
jg
es
imul
add
mov
stos
jl
pop
punpckldq
push
sar
(bad)
and
ins
jo
ja
pop
xor
sub
out
fwait
nop
lods
cmp
adc
sbb
mov
jne
mov
dec
push
xor
ja
adc
mov
cmp
test
pop
aam
fimul
test
mov
je
fistp
adc
int3
jge
mov
jg
pop
xchg
setp
push
stos
cmp
imul
test
push
loopne
xlat
cdq
mov
dec
scas
jns
mov
ja
pop
push
orps
inc
xor
movs
aas
sbb
mov
mov
xlat
out
inc
inc
dec
adc
mov
movs
(bad)
aad
inc
push
or
outs
addr16
test
or
popa
mov
add
shr
adc
loop
and
push
sbb
pop
sbb
fwait
mov
jmp
or
push
dec
add
add
or
jbe
inc
lahf
add
test
scas
add
in
enter
pop
retf
test
add
cmps
dec
sti
inc
loopne
loope
add
in
mov
inc
test
add
aam
rol
adc
shr
rol
lea
adc
test
call
clc
pusha
cmp
in
fld
push
sub
mov
out
xchg
mov
jb
cmp
jns
mov
cmps
out
in
pop
enter
in
xchg
sbb
sbb
inc
dec
aam
test
xchg
and
in
loope
stos
fnsave
fld
dec
mov
lahf
aad
mov
test
jg
je
loopne
popa
jg
je
sub
repnz
sub
add
dec
je
dec
je
sbb
dec
fld
adc
gs
fs
dec
adc
sbb
pop
jo
push
adc
mov
jmp
add
stc
in
mov
inc
(bad)
retf
push
xchg
rcr
pop
mov
std
dec
hlt
dec
shr
std
in
fist
jl
dec
in
mov
repnz
cld
stos
call
lahf
arpl
mov
cmp
fild
dec
jmp
fist
adc
inc
shl
je
cmp
and
enter
in
cli
int3
adc
sub
test
inc
outs
les
lods
mov
ret
or
jbe
shl
or
jns
xor
cmp
ror
mov
mov
mov
out
push
sbb
jmp
or
mov
or
je
outs
adc
push
add
in
cdq
sbb
scas
not
or
inc
retf
mov
adc
int
mov
mov
cld
push
movs
cmp
adc
mov
es
xor
cmps
or
inc
add
xor
out
ja
or
cdq
xlat
inc
mov
pop
popf
loopne
xor
xor
dec
mov
adc
xor
(bad)
cmps
adc
adc
sbb
pop
jecxz
loopne
bound
sub
xor
pop
pop
mov
gs
inc
push
inc
jmp
dec
and
or
fwait
xor
mov
xchg
and
cmp
fcomp
or
fs
je
fsubr
cmp
in
mov
outs
or
inc
mov
adc
test
pop
sub
loop
or
push
jmp
jl
inc
mov
(bad)
jmp
add
sub
inc
add
xchg
clc
rol
add
mov
push
push
adc
sahf
xor
(bad)
adc
or
cmps
cmp
jne
mov
dec
xchg
pop
sub
jbe
imul
mov
adc
test
ret
and
cwde
add
cmp
sbb
xor
jb
add
or
mov
pop
mov
xor
mov
es
and
in
cld
cmp
jne
mov
and
or
in
mov
cmps
fist
ins
sub
(bad)
xchg
jmp
cmp
adc
push
loope
push
add
cmp
add
lds
call
xchg
jg
push
jmp
sub
mov
clc
jne
cmp
ds
pop
or
jae
lock
push
push
movs
or
retf
xlat
loop
xor
mov
or
je
inc
adc
aaa
xor
add
mov
push
ffree
or
(bad)
mov
mov
call
and
or
cmps
mov
nop
dec
retf
popa
aaa
jb
inc
jo
push
or
test
sub
ins
mov
daa
pop
xchg
das
pop
add
call
sbb
dec
call
cmp
xlat
push
ds
mov
inc
mov
or
test
pop
cmp
xor
mov
or
in
imul
jmp
arpl
sub
mov
pop
icebp
sti
(bad)
and
cmp
jne
push
dec
jne
clc
push
or
or
es
add
ret
cmp
cmps
je
jb
mov
cmp
dec
test
dec
mov
jo
fisub
mov
stos
mov
xchg
push
out
mov
daa
in
inc
cmp
mov
and
fdivr
ins
mov
or
aaa
cwde
or
jae
sub
lods
arpl
dec
aad
xchg
(bad)
ja
fbstp
mov
add
or
or
fcomp
push
adc
adc
add
adc
adc
adc
push
xor
cmp
dec
pop
outs
adc
scas
mov
sahf
out
cld
or
sbb
sbb
cmp
sbb
iret
sbb
mov
rol
test
or
movs
ret
adc
adc
push
add
xor
cmp
rcr
adc
out
mov
cmp
inc
adc
or
inc
in
adc
jne
adc
xchg
push
sbb
xchg
add
xlat
retf
loop
test
cmp
add
mov
sti
ss
xchg
not
or
bts
push
std
movs
hlt
add
cmp
or
je
adc
xlat
mov
pop
clc
push
jb
jmp
call
and
push
add
inc
dec
push
sbb
dec
cmp
(bad)
pop
popa
clc
inc
ror
dec
or
rol
sar
leave
nop
xchg
sub
jo
adc
inc
(bad)
fdiv
add
inc
(bad)
aad
fld
jne
pushf
xchg
aas
pop
ja
jg
test
shr
pop
ds
addr16
mov
jle
test
leave
sbb
add
es
ss
(bad)
clc
adc
loope
mov
mov
cmc
add
and
jl
jo
sbb
cld
or
data16
data16
sbb
xlat
in
pop
clc
out
mov
iret
imul
or
loopne
add
lea
jno
out
je
push
push
test
and
mov
adc
pop
mov
inc
add
dec
jne
je
ins
lock
je
push
jno
pop
ret
add
mov
and
adc
mov
add
cmp
xlat
adc
pop
mov
add
sub
lods
ins
lods
js
test
gs
or
out
test
test
imul
(bad)
cdq
mov
inc
call
jne
jmp
push
rcl
or
sub
mov
mov
add
and
iret
mov
mov
xor
jno
add
jae
in
ja
ret
loopne
mov
add
pop
je
lea
jle
dec
jae
pop
add
jmp
add
or
inc
into
mov
ret
inc
mov
inc
fdiv
pop
and
shl
adc
aam
inc
xor
cmc
cmps
push
shl
push
inc
mov
sub
loop
addps
(bad)
fcom
push
xchg
xchg
or
add
mov
scas
movs
push
push
cmps
cmp
retf
xor
je
(bad)
or
jmp
je
mov
ret
mov
scas
aam
pop
cmp
inc
jl
cdq
or
xchg
adc
pusha
add
jmp
dec
push
sub
scas
cld
pop
adc
cmps
fild
call
inc
ret
rcr
hlt
cli
adc
jmp
ret
cmp
ins
jl
add
cmp
outs
iret
repz
pop
or
push
cli
pop
iret
repz
mov
mov
mov
jmp
cmp
in
or
mov
popa
cmp
sub
and
xchg
test
xchg
loopne
and
fild
xchg
nop
pusha
das
add
inc
ror
scas
mov
sbb
mov
mov
or
adc
sbb
push
arpl
xor
inc
push
jo
adc
cmp
mov
add
jle
mov
and
add
pop
sbb
inc
sti
mov
push
push
jmp
and
dec
add
ror
jmp
xor
loopne
arpl
push
mov
push
mov
push
daa
sti
dec
ret
inc
stos
mov
test
jne
adc
pusha
outs
push
cmp
jmp
jg
push
or
mov
sbb
ins
mov
jae
add
je
sbb
std
fs
lock
inc
mov
add
xchg
(bad)
xor
xchg
push
dec
iret
lea
mov
jno
adc
jno
cmp
xor
dec
dec
sub
iret
push
sub
lods
movs
(bad)
fwait
push
and
xor
or
call
sbb
sbb
cmp
clc
xor
and
push
xor
jle
xchg
inc
nop
xchg
adc
les
xchg
jle
in
or
call
lods
adc
xor
adc
add
int3
jo
and
push
push
jmp
push
and
fsub
mov
gs
xor
mov
cmps
imul
jae
pop
push
push
pusha
inc
add
pop
fstp
xor
loopne
stos
inc
std
jo
neg
mov
add
jmp
push
xchg
push
add
jmp
not
jmp
xor
jmp
mov
sbb
cmp
mov
sbb
cmp
sub
movs
stos
dec
ffreep
cmp
adc
rol
jg
in
mov
mov
inc
(bad)
push
inc
and
mov
repz
repz
dec
popa
jbe
stos
fldenv
daa
mov
sahf
out
mov
pop
pop
add
sub
or
jbe
repnz
pop
call
shl
rcl
push
adc
loopne
jb
pop
movs
dec
ret
mov
xchg
imul
sub
dec
aad
stos
cld
fldcw
sub
shl
fnsavew
dec
(bad)
dec
xor
cwde
xor
(bad)
in
or
shl
stos
mov
dec
aaa
pop
sub
int3
xor
pop
sbb
mov
and
pop
push
shl
mul
jo
jbe
les
fs
or
push
das
lods
sub
adc
sub
mov
je
dec
mov
dec
and
ret
push
pop
jmp
adc
xor
xchg
pop
sbb
push
enter
ret
aaa
rol
or
cmp
lods
dec
sub
pushf
popa
cld
pop
or
sti
(bad)
std
jg
sub
xor
xor
dec
hlt
xchg
add
into
mov
mov
or
test
test
data16
shl
adc
jbe
pop
jb
cmp
inc
call
add
or
inc
pop
push
test
add
xor
xor
jl
and
inc
lock
in
adc
jmp
call
and
and
mov
pop
leave
das
or
add
sub
or
test
or
add
pop
scas
and
stos
mov
or
or
jmp
push
pusha
xor
les
mov
add
shr
int
xor
inc
mov
jo
shl
out
push
out
push
stc
sbb
cmps
repz
repz
ss
js
ror
out
retf
test
push
popa
retf
pop
pop
jns
jns
fbld
out
push
std
or
and
inc
push
cmp
mov
push
(bad)
or
jae
shl
xor
cwde
or
je
mov
and
sar
cmp
pop
aas
inc
je
dec
std
inc
leave
fstp
push
into
sub
add
ins
adc
mov
movsx
syscall
mov
xor
cmp
sub
xchg
or
mov
cmp
je
je
dec
je
or
jne
scas
push
or
js
movs
or
test
or
addr16
and
inc
loopne
lds
pop
inc
int3
iret
repz
pushw
arpl
test
int
pop
iret
repz
push
daa
cmp
jge
xor
cmp
call
cs
fxch
add
test
sub
sbb
xchg
xchg
sbb
and
mov
jge
cmp
jmp
sub
adc
jmp
cmp
jae
jno
dec
enter
sub
sbb
add
stos
and
aaa
scas
jmp
adc
pop
xchg
push
pop
mov
jp
jo
(bad)
pop
mov
loopne
shr
out
and
fist
inc
popa
sub
jb
ret
in
add
je
or
mov
idiv
adc
rcl
test
fiadd
or
pop
adc
xchg
into
add
pusha
lock
cmp
cmp
jb
dec
in
ret
xor
add
ins
or
and
mov
cmps
push
jbe
push
ret
push
xor
dec
addr16
and
inc
iret
pop
push
or
enter
add
aam
sub
popf
or
out
fstp
test
add
push
sar
repz
jecxz
cmc
jb
sbb
add
sahf
push
pop
jp
mov
adc
and
mov
cmp
add
ror
mov
add
das
movsx
ja
out
rcl
add
stc
add
jecxz
stos
jno
out
push
scas
enter
dec
leave
vmovddup
and
xchg
and
sbb
repz
in
rol
shr
pop
xchg
mov
cmp
mov
ret
loopne
scas
loopne
adc
or
shr
dec
xor
arpl
push
inc
(bad)
loopne
loope
les
shr
xlat
inc
and
call
enter
add
or
cdq
xchg
and
push
push
imul
jecxz
inc
pop
adc
adc
sbb
adc
adc
push
adc
add
fwait
js
add
ret
xor
xchg
mov
inc
mov
mov
sub
iret
les
push
add
dec
mov
inc
jo
lods
and
lock
add
or
mov
push
xor
and
inc
test
or
mov
lds
add
lock
mov
xchg
push
or
jns
call
call
dec
daa
(bad)
push
and
inc
out
xchg
(bad)
loope
aam
sub
shr
sbb
xchg
dec
sub
push
cmp
movs
int
addr16
aad
jecxz
jns
cmps
cmp
es
bound
sahf
out
mov
xlat
movs
jge
xchg
in
outs
(bad)
pop
pop
clc
es
out
or
pop
push
xor
jb
stos
inc
add
enter
or
dec
push
pop
cld
sbb
push
aas
and
mov
jnp
fstp
in
mov
fldl2t
arpl
mov
add
ret
sbb
sbb
xchg
sbb
xchg
sub
mov
and
pop
push
or
or
push
movs
push
mov
cmps
add
and
and
cmp
and
movs
rcr
jns
mul
pop
push
jae
xchg
out
in
inc
add
mov
pop
cmp
repz
adc
test
fdiv
and
inc
jno
mov
fld
cmp
adc
mov
xor
mov
and
cld
lods
push
(bad)
stos
sub
and
add
fisttp
add
push
mov
shl
inc
cmp
sub
shr
call
cmp
and
gs
adc
inc
js
add
lock
(bad)
(bad)
mov
fld
fwait
adc
je
mov
loope
jbe
retf
adc
add
mov
pop
out
pop
aas
inc
push
retf
mov
adc
mov
push
stos
dec
leave
mov
and
js
jb
pop
pusha
dec
ficomp
pop
jg
xor
add
jbe
add
mov
adc
addr16
and
in
jecxz
cmp
xor
adc
movs
lock
jge
jbe
xchg
leave
outs
pop
fisttp
add
jmp
call
test
(bad)
push
mov
mov
or
popa
dec
mov
xchg
add
xchg
loope
sub
dec
test
and
xchg
mov
xor
cs
popa
test
dec
xor
or
(bad)
inc
adc
cdq
test
les
out
cmc
add
mov
fdivr
cmps
push
scas
into
add
iret
repz
call
out
push
inc
iret
ficom
jns
mov
pop
pop
pusha
ins
jp
ret
mov
xchg
push
or
pusha
jnp
icebp
pop
in
pop
xchg
sbb
sbb
inc
or
sbb
jnp
or
fstp
add
popf
retf
push
or
mov
and
sub
pop
sbb
add
rol
dec
je
retf
sti
add
or
test
add
rcl
retf
cmp
inc
fmulp
jnp
es
fild
cdq
push
test
idiv
cmp
adc
cs
inc
daa
push
repz
ficom
push
(bad)
loopne
iret
pop
push
mov
dec
ret
rcl
iret
push
sbb
fld
sbb
mov
pop
pop
vpunpckldq
sbb
and
jno
sub
outs
repnz
test
and
jmp
daa
xor
sub
lahf
xchg
sbb
scas
and
pop
pop
clc
fisttp
or
shl
les
ja
jbe
inc
pushf
rcl
lock
imul
sub
jmp
jne
ret
fwait
retf
outs
daa
add
inc
push
inc
repnz
fld
fstp
fwait
jmp
add
and
das
push
leave
fld
mov
push
jns
mov
leave
cmp
adc
sbb
sbb
inc
push
jl
sbb
loope
adc
mov
fwait
cmp
hlt
or
loope
fld
sbb
add
shl
mov
or
sahf
out
sahf
dec
push
bound
xchg
cmp
data16
push
mov
pop
xchg
not
push
jecxz
pop
leave
fiadd
repz
push
and
mov
fcom
jl
add
pop
inc
fild
stc
int3
rcl
cmp
dec
xor
inc
or
in
push
movs
imul
mov
loopne
jecxz
sti
push
movsx
shr
adc
push
sub
xor
sub
ins
adc
inc
add
inc
dec
mov
or
sub
pop
mov
mov
fadd
mov
add
pop
add
int
and
xor
jb
fadd
in
repz
jmp
aaa
in
cmp
inc
stos
push
dec
mov
shl
push
out
add
sbb
rol
push
daa
xchg
(bad)
dec
or
pusha
sbb
mov
adc
or
or
add
lods
adc
jno
nop
or
mov
movs
mov
stc
sar
jnp
adc
adc
xor
cmps
inc
fs
jmp
pushf
add
push
pop
xor
pop
pop
xchg
jno
add
hlt
xchg
adc
or
sub
sub
push
push
out
and
cmp
sub
loop
push
arpl
out
stos
dec
and
sbb
sahf
out
ret
es
out
jo
(bad)
jne
pop
sbb
ds
push
sbb
outs
xor
sbb
(bad)
add
add
ins
sub
cmp
mov
mov
in
sbb
ins
in
xor
lods
add
inc
test
ins
int3
inc
dec
std
rol
jge
pop
jmp
xor
push
push
or
pop
(bad)
add
and
add
mov
fst
bound
push
xor
mov
sbb
call
call
ja
and
mov
hlt
pusha
addr16
or
shl
test
xor
jbe
inc
and
and
test
out
lds
cmc
das
sub
fcomi
call
mov
ret
xor
hlt
or
cmp
fs
inc
or
add
mov
add
inc
leave
je
pop
cmp
mov
cmp
ds
outs
fnsave
repz
xchg
test
jmp
imul
jne
pop
pop
int
out
cmp
test
jmp
push
(bad)
fstp
ins
rol
push
imul
fmul
pop
and
or
inc
xlat
jo
mov
pop
mov
pop
sub
sbb
jmp
pusha
mov
pusha
outs
imul
or
add
push
push
aam
movs
in
cmp
(bad)
(bad)
aas
in
pop
inc
add
and
mov
jle
in
pop
push
in
cmp
and
adc
push
imul
outs
daa
jne
movs
pop
xor
sbb
xor
aas
(bad)
add
adc
repz
lods
sub
stos
repz
pop
sub
xchg
jmp
or
pop
dec
mov
aaa
out
enter
or
ret
xor
outs
and
lahf
pop
out
jl
inc
sbb
leave
xor
cmps
push
imul
mov
or
or
je
out
(bad)
fild
call
push
or
or
loop
push
push
xchg
add
add
sub
out
xchg
pushf
in
push
cmp
fistp
out
push
loopne
and
neg
dec
repz
out
jns
dec
jb
xchg
cmps
iret
fs
mov
push
fdivr
mov
pop
pop
repz
push
sub
jo
out
inc
fs
add
in
pop
push
inc
les
pusha
inc
push
fmul
dec
and
iret
and
or
inc
fcmovu
int3
pop
pop
inc
cmp
fs
(bad)
fdivr
or
mov
shl
outs
aas
push
add
loop
fisubr
les
xlat
or
hlt
lea
movs
sbb
jnp
ins
or
test
rcl
(bad)
retf
mov
pop
xchg
push
(bad)
pushf
mov
fsubrp
inc
cmp
es
(bad)
push
loope
sbb
loopne
iret
repz
jb
lods
mov
xor
daa
and
jne
xchg
(bad)
inc
stos
dec
mov
mov
cmp
mov
inc
push
jecxz
out
sbb
stc
out
sbb
nop
loopne
out
pop
push
fs
out
push
enter
jl
add
push
scas
mov
scas
mov
rcr
cmps
data16
dec
gs
icebp
test
add
loopne
jno
leave
add
leave
push
add
add
mov
push
cmc
icebp
popf
mov
adc
shl
xchg
or
inc
lods
ds
jb
je
dec
je
jmp
adc
add
cmp
or
mov
inc
add
inc
add
pop
xchg
add
inc
and
inc
add
inc
jmp
add
or
in
lea
mov
xor
(bad)
sbb
in
adc
adc
imul
mov
and
push
mov
rcr
adc
in
sbb
inc
hlt
xor
adc
repz
das
retw
inc
sbb
loope
lods
or
test
and
ret
dec
dec
push
call
mov
mov
or
add
xchg
mov
sub
pop
int3
mov
rcl
add
cs
popa
mov
pop
add
or
in
(bad)
shr
mov
mov
iret
out
push
clc
mov
lock
je
mov
mov
push
leave
stc
pop
pop
add
ret
jns
out
bound
fadd
adc
neg
cmps
dec
icebp
pop
nop
mov
in
in
(bad)
shl
pop
adc
push
int
push
lods
dec
aas
test
cmp
and
fstp
fwait
mov
call
mov
add
jmp
sub
fst
fcom
add
sub
ficom
mov
or
movs
inc
in
movs
push
push
jbe
packssdw
mov
shl
imul
push
pushf
dec
pop
addr16
xchg
xchg
ds
sbb
loope
and
xchg
gs
fcomp
nop
sub
nop
adc
mov
scas
sbb
push
mov
or
inc
test
in
sub
int
cmp
das
xchg
jl
lock
mov
push
add
test
shl
imul
aas
inc
popf
xor
out
js
pop
rcl
gs
push
pop
mov
add
inc
call
or
pushf
cmp
nop
std
pop
add
mov
cmp
test
and
mov
rcl
jl
sub
in
mov
or
leave
jmp
inc
adc
jmp
imul
add
pop
inc
test
or
xchg
je
adc
and
xchg
jo
mov
push
or
dec
jo
mov
shl
and
enter
mov
imul
sahf
retf
mov
mov
mov
jb
and
lock
or
cmp
xchg
rcl
or
push
push
pop
push
xchg
sub
cmc
fs
lea
xchg
xchg
cmp
inc
pusha
xchg
enter
pop
dec
mov
xor
pop
out
dec
pop
out
rcr
fcmovb
test
fucomi
ror
inc
xor
push
push
push
dec
dec
in
dec
(bad)
call
clc
bound
jmp
(bad)
jmp
sub
pop
push
bound
jge
dec
adc
out
pop
ret
movs
push
int
fist
test
xchg
add
sub
aas
js
out
and
inc
mov
cwde
shl
add
test
cmc
test
pop
inc
xchg
(bad)
cmc
stos
in
repnz
push
(bad)
pop
pop
adc
or
cmp
sti
sub
jg
int
push
sti
sbb
push
and
fcomp
sub
mov
and
xchg
mov
iret
and
adc
inc
outs
pop
loopne
fsub
xor
or
fist
inc
jne
or
add
xor
xor
add
cmp
xor
xchg
mov
ja
lds
cmp
or
inc
or
ret
nop
mov
mov
sahf
cmps
stc
ficomp
add
inc
pop
jl
out
mov
or
iret
sar
or
pop
pop
out
sahf
cmps
daa
inc
pop
js
mov
popf
mov
inc
jp
popa
not
xchg
sar
and
xor
xor
pop
xchg
stc
push
and
pop
mov
addr16
cmps
movs
adc
cmp
and
pushf
jno
pusha
rcl
mov
cwde
sti
xchg
xor
(bad)
nop
xor
nop
xor
pusha
adc
mov
jge
dec
sub
pop
cmps
or
ins
test
rol
imul
pusha
retf
pop
mov
sbb
lahf
movs
out
and
in
loop
movs
int
mov
add
push
pop
clc
out
sahf
(bad)
pop
add
cmp
les
in
test
pop
sar
xchg
and
pop
bound
add
popa
retf
leave
pop
or
adc
lods
adc
mov
and
inc
(bad)
jecxz
or
xchg
sub
pusha
pop
iret
pop
xor
or
pop
inc
sub
or
jo
movntps
js
and
sub
test
popa
or
popf
fs
ins
or
inc
xchg
inc
lods
sbb
dec
mov
pop
jmp
mov
iret
pushf
or
push
leave
dec
push
call
mov
sbb
pop
add
das
je
(bad)
jmp
(bad)
fucom
xchg
mov
cmp
dec
mov
jo
xor
test
pop
test
sar
ret
push
je
imul
jns
sub
fiadd
jae
ret
jmp
(bad)
or
xbegin
adc
sub
push
test
and
and
or
enter
shr
pop
cmps
jle
sub
loopne
xor
xor
push
mov
cs
adc
mov
sar
cli
adc
sahf
out
cmp
lds
cmps
dec
sti
push
scas
or
pop
add
out
push
je
iret
push
test
mov
data16
xor
mov
and
and
(bad)
cmp
pop
mov
dec
sbb
add
adc
mov
icebp
xor
mov
shr
cmp
rcl
inc
imul
pop
and
adc
and
(bad)
jb
inc
sbb
or
inc
test
inc
imul
pop
fcom
push
and
cmp
out
cmps
retf
inc
or
in
push
(bad)
std
sti
adc
pusha
sbb
sub
ret
push
fiadd
sub
pop
mov
pop
dec
xchg
jno
and
add
outs
xchg
inc
pusha
or
pop
inc
inc
xchg
and
and
inc
sbb
dec
push
loope
inc
xor
push
shl
mov
(bad)
addr16
push
shl
(bad)
(bad)
clc
dec
xor
pop
inc
ret
sbb
loopne
inc
sti
lods
or
test
mov
inc
sbb
aas
jl
push
loope
ret
mov
adc
push
dec
scas
mov
push
jno
sahf
lock
ror
ret
imul
pop
movntq
out
push
es
sbb
or
cld
rol
push
push
or
je
jmp
sub
outs
je
sub
adc
loope
outs
ss
mov
xchg
add
xchg
dec
or
adc
adc
addr16
sbb
sub
jae
sub
push
jbe
fadd
sbb
sbb
push
and
adc
sbb
pop
xor
ret
jge
outs
add
aas
xchg
sbb
mov
push
inc
shl
data16
xor
pusha
ins
outs
or
add
mov
or
mov
xchg
fnstcw
pop
jg
repnz
call
xor
call
sbb
mov
jmp
mov
add
pop
movs
enter
add
leave
push
test
mov
add
fdivr
aas
adc
adc
mov
pop
cmp
dec
jl
and
dec
pop
pop
nop
mov
adc
xlat
add
inc
cs
adc
clc
sub
inc
xchg
push
add
lahf
push
push
mov
daa
or
cmp
ret
pop
js
sbb
sub
push
outs
pop
add
adc
in
xor
leave
add
jp
pop
or
inc
fimul
pop
aas
pop
or
fwait
add
fistp
neg
repnz
jns
sbb
int
push
out
adc
addr16
push
or
sbb
outs
les
outs
add
data16
cmps
or
push
push
push
and
push
mov
inc
mov
add
add
imul
rol
test
adc
adc
mov
and
icebp
das
mov
lar
add
das
or
ss
(bad)
jmp
inc
fdivr
mov
sub
push
or
lahf
mov
xchg
cmp
cmp
jg
sbb
test
dec
add
sub
jb
je
dec
je
gs
push
loop
or
cmp
mov
or
push
mov
retf
test
lods
ss
dec
div
add
add
mov
mov
jmp
jg
and
push
xor
jl
sub
adc
cmp
sub
aaa
adc
cmc
unpcklps
sbb
inc
and
xchg
adc
add
mul
inc
nop
jmp
mov
jmp
fstp
cld
test
mov
and
cli
dec
xor
lmsw
fucomp
and
outs
push
movs
xchg
jo
xchg
mov
sub
mov
arpl
pop
mov
inc
loope
bound
(bad)
add
mov
push
ins
and
jae
(bad)
es
adc
lahf
xor
jmp
inc
and
and
push
mov
add
stc
xchg
dec
imul
push
push
fild
sar
je
xor
iret
mov
adc
mov
sub
rcl
push
inc
retf
mov
or
xlat
cmp
cmp
cmp
dec
mov
add
cli
fwait
dec
mov
rol
dec
add
js
adc
adc
adc
ins
adc
or
mov
mov
sbb
inc
sbb
ja
cmp
cwde
sbb
mov
(bad)
out
inc
call
or
adc
ins
xchg
jmp
mov
inc
fidiv
nop
jne
inc
jle
pop
ja
stc
adc
sub
xor
dec
xchg
dec
sbb
inc
stos
jmp
and
mov
bound
sub
mov
or
adc
leave
adc
mov
frstor
pop
cmp
jae
xor
sbb
jbe
outs
jne
fidivr
outs
push
call
jbe
fnstsw
fcomp
test
jge
stos
pop
adc
push
mov
fstp
or
fnstcw
pop
adc
stos
inc
mov
jae
pop
mov
sbb
shl
ret
add
cmps
adc
ret
sahf
fwait
cmps
add
ror
imul
ret
pop
mov
xchg
pusha
jno
rol
les
jg
nop
xor
push
xor
add
add
mov
xor
add
iret
repz
fucomip
add
push
pushf
out
sahf
out
retf
aaa
cmp
jl
out
add
imul
sub
add
pop
enter
movs
jnp
int
fdiv
mov
fiadd
pop
push
pop
out
xor
jmp
(bad)
adc
in
imul
(bad)
adc
or
test
add
rcr
push
jmp
dec
add
call
jbe
sbb
fs
mov
or
jmp
aas
and
dec
loopne
xchg
adc
sub
dec
jmp
lock
push
pop
stos
fsubr
cmp
jle
sub
sub
add
aam
add
adc
fadd
jae
jo
mov
adc
mov
mov
loope
add
jo
cld
and
sub
fwait
aaa
popa
xchg
ds
mov
mov
inc
dec
test
mov
fadd
test
je
mov
fdivr
jmp
hlt
dec
hlt
fdiv
mov
clc
cmp
gs
jo
dec
cwde
mov
lock
fdiv
nop
xor
sbb
jecxz
(bad)
adc
mov
inc
add
inc
inc
or
fmul
or
mov
dec
test
adc
or
adc
dec
adc
ret
ins
cmp
dec
sbb
mov
adc
enter
add
mov
xor
or
jo
mov
xchg
retf
scas
pop
rcr
bnd
mov
push
add
sahf
push
pop
or
fdiv
in
stc
test
mov
ss
push
loope
jo
imul
sbb
cmp
dec
push
or
fmul
mov
inc
mov
inc
sbb
test
sub
scas
cmps
mov
mov
ja
sbb
out
mov
sbb
sti
xchg
push
rcl
push
sbb
dec
mov
pop
aas
xor
pop
sub
and
addr16
dec
push
xchg
das
pop
add
mov
imul
stos
mov
rcr
or
push
add
jmp
push
adc
sahf
push
mov
xchg
je
jns
inc
adc
mov
dec
push
mov
sbb
push
pop
popa
xor
je
js
pusha
aas
pop
push
dec
sub
cmps
jns
cmps
aaa
push
ja
and
in
xor
inc
xlat
(bad)
(bad)
sbb
loop
aaa
out
xor
sbb
imul
push
jge
jnp
jbe
out
dec
fwait
push
push
enter
jb
mov
div
push
or
mov
scas
mov
es
fmul
je
push
es
sbb
jbe
outs
inc
call
mov
push
and
inc
push
sub
pop
mov
je
pop
scas
or
das
push
imul
mov
das
aas
imul
add
retf
add
sbb
mov
push
cmps
xor
xchg
dec
movs
das
adc
add
sti
inc
add
ja
cmp
mov
hlt
jo
add
cli
sub
ins
(bad)
mov
jl
sub
movs
js
add
push
lahf
push
(bad)
add
and
mov
inc
test
and
aas
jne
mov
jb
shl
add
rcl
adc
and
pop
movs
xor
int
and
scas
and
inc
sbb
xor
pop
je
not
ret
shl
mov
sbb
lods
adc
inc
neg
pop
in
es
inc
ja
and
aaa
aaa
push
mov
dec
push
and
or
pop
add
and
or
(bad)
neg
cmp
ret
fsubr
and
movs
add
inc
test
add
sbb
jg
xchg
push
xor
cmp
je
cmp
or
adc
shr
and
sbb
adc
and
jmp
iret
or
ja
dec
dec
pop
scas
mov
or
xor
sbb
cmp
ret
push
and
xchg
xchg
rcr
adc
cmp
inc
mov
adc
outs
mov
xchg
(bad)
adc
lock
scas
and
adc
mov
aaa
ja
es
arpl
xchg
add
jle
popf
push
pop
push
es
sub
inc
adc
mov
inc
add
cs
mov
push
xchg
lds
pop
add
adc
push
(bad)
push
or
adc
cdq
cmp
sub
and
sbb
test
push
mov
push
inc
(bad)
nop
xor
cmp
and
push
push
mov
test
jmp
add
xor
jmp
jge
movs
and
adc
movs
loopne
jo
mov
aas
aaa
add
test
mov
inc
mov
inc
sub
push
mov
stos
sub
sub
setne
xchg
push
add
push
push
cwde
xor
mov
or
pop
ins
mov
(bad)
clc
std
push
(bad)
cld
(bad)
lods
or
sti
test
adc
jg
sbb
mov
dec
pusha
mov
sar
je
push
jge
clc
das
fdivr
or
and
xchg
mov
mov
add
sub
inc
mov
mov
add
out
test
loope
dec
xor
or
movs
inc
add
sbb
fdivr
mov
pusha
xchg
fptan
jbe
add
adc
mov
lock
int3
retf
ret
out
test
sub
dec
hlt
inc
inc
out
pop
adc
lods
push
outs
aad
cmp
nop
adc
dec
imul
dec
push
cld
ds
rcl
sbb
mov
xchg
pop
pop
inc
pop
(bad)
nop
sbb
sub
fwait
sbb
sbb
mov
pop
rol
loopne
popa
pop
ds
cmp
jp
cmp
and
ret
out
xchg
jmp
(bad)
cli
inc
adc
or
push
repz
ds
push
adc
bound
jne
sub
int3
popf
push
mov
jbe
push
(bad)
and
sbb
sbb
inc
adc
sub
and
sbb
shl
mov
and
or
or
clc
and
adc
call
out
shr
and
rcl
sub
dec
je
pop
in
mov
call
push
inc
mov
dec
push
mov
loopne
retf
inc
jle
push
dec
jns
push
int
sbb
mov
pushf
or
lods
inc
add
pop
out
out
mov
sub
ss
push
xor
rcl
rol
jge
mov
and
ror
add
pop
and
test
sub
lds
ss
jg
jne
mov
mov
call
loopne
jns
pusha
add
retf
dec
dec
dec
sub
or
ret
adc
cwde
loope
add
push
mov
and
add
mov
jb
or
jne
loopne
push
lea
xchg
mov
mov
jl
mov
mov
inc
data16
cli
and
jle
cdq
dec
sbb
push
std
cld
or
mov
dec
sbb
xchg
js
fist
add
add
jno
js
mov
popa
jns
cli
sbb
mov
sbb
sub
cmp
(bad)
sbb
lock
cmp
pusha
mov
cmp
jl
mov
ds
sti
out
push
pop
dec
jmp
mov
bound
out
push
mov
cmp
dec
fidiv
pop
xor
sbb
lock
das
or
lds
rcl
xchg
and
adc
fcmovne
pop
pop
and
test
mov
gs
fiadd
mov
add
mov
fadd
adc
pop
call
cdq
sub
cmp
jne
movzx
push
push
cld
add
ror
push
mov
rcl
add
jle
or
je
or
fmul
je
adc
adc
cmp
test
test
pop
inc
js
or
cld
push
pop
jno
dec
cld
jmp
add
jmp
or
sbb
mov
pusha
pop
jmp
dec
sbb
ja
adc
adc
jne
mov
clc
std
pop
jl
aam
push
dec
jle
daa
sahf
aam
push
sbb
xchg
imul
or
push
aam
xchg
sub
sub
sub
lock
fdiv
gs
or
int
inc
imul
and
inc
mov
sub
jo
push
add
out
enter
sub
add
inc
shr
lss
jo
daa
jmp
adc
xchg
inc
sbb
jl
sti
cmp
rol
pusha
in
sbb
add
lea
das
mov
xor
repz
add
out
sahf
and
jo
inc
sar
jg
xchg
test
sbb
clc
jbe
cmps
cld
add
or
lods
fstp
add
and
adc
sbb
and
sub
enter
scas
movsx
sub
sub
adc
loop
xchg
sti
and
add
inc
sahf
xchg
add
and
sub
cmp
pusha
fisttp
cmp
sbb
or
mov
sub
rol
out
imul
test
mov
leave
inc
jmp
sbb
add
pop
lahf
aaa
push
fistp
mov
add
inc
out
push
add
push
les
or
xor
and
fisttp
nop
xchg
rcr
adc
call
inc
in
push
cmc
sbb
xchg
ja
movs
inc
sbb
mov
clc
adc
std
arpl
sbb
mov
push
je
aaa
es
(bad)
push
mov
bound
cmc
test
data16
ja
jmp
xchg
add
xor
pushf
dec
lods
add
sub
sub
retf
sbb
push
mov
sbb
jne
adc
das
sbb
aam
jge
add
dec
outs
jo
xor
in
mov
xor
cmp
xor
mov
sub
fisttp
push
xchg
or
cmps
pop
add
rol
popa
dec
fadd
push
jne
xchg
add
jmp
sbb
sbb
cld
mov
inc
ret
cmc
ret
out
jmp
inc
add
inc
push
hlt
cmp
xor
adc
add
pop
lock
hlt
loopne
retf
add
loop
fdivr
sbb
push
sub
or
or
and
mov
push
or
sbb
cmp
repz
pop
push
mov
jge
mov
in
repnz
nop
dec
inc
jle
add
push
div
adc
mov
pop
pop
sti
or
fwait
pop
fnsave
cmp
xor
movs
dec
inc
inc
and
xor
pop
pop
cmps
push
mov
fxch
int3
(bad)
out
push
push
fdiv
or
adc
call
inc
mov
scas
loopne
pop
pop
dec
xchg
jmp
mov
mov
(bad)
xor
mov
jmp
sbb
adc
push
mov
or
enter
clc
xor
push
hlt
xchg
std
push
sub
push
xchg
inc
xchg
sar
xor
and
bound
cld
xor
out
mov
ret
dec
push
mov
daa
lahf
adc
stos
jl
js
mov
pop
pushf
retf
dec
xor
call
dec
cmp
jl
sbb
add
jge
cmp
movs
sub
dec
das
or
clc
fidiv
cmp
inc
out
pop
pop
loop
dec
clts
sub
outs
push
sar
pop
and
push
mov
add
sbb
push
popa
inc
pop
add
add
daa
jmp
push
fs
cld
jp
or
jnp
je
sub
adc
into
mov
clc
xchg
add
cmp
retf
outs
or
push
dec
add
push
sbb
retf
mov
adc
add
aad
mov
(bad)
outs
mov
cmp
call
cli
adc
mov
xchg
mov
daa
sbb
mov
daa
cmp
popa
lds
sbb
clc
pop
mov
mov
fsub
fdiv
xor
mov
jae
jno
mov
xlat
cmp
lahf
inc
out
mov
dec
test
dec
dec
fmul
jmp
inc
fdiv
xchg
enter
push
xor
popa
sub
psubsb
mov
jg
or
aas
lods
mov
jg
into
(bad)
add
push
mov
shl
sub
add
arpl
and
xchg
loopne
add
in
push
mov
xlat
(bad)
mov
(bad)
push
int
pop
sub
jl
mov
fidivr
test
icebp
aas
pushf
test
cmps
sub
inc
lock
mov
imul
les
int3
adc
add
das
or
jo
add
push
push
fcom
mov
cmp
mov
mov
push
mov
sbb
adc
ins
sbb
xor
faddp
xor
add
sar
mov
push
ret
jns
cs
je
call
mov
push
js
cmp
lods
add
je
idiv
add
or
loopne
cld
push
ins
cmp
inc
aaa
push
lock
xor
jle
sbb
push
mov
mov
push
xor
dec
mov
xor
lahf
iret
sub
inc
shld
addr16
sti
or
ss
dec
or
mov
and
lahf
outs
sbb
pop
xor
clc
stos
mov
jno
push
addr16
sbb
mov
cmp
loop
stos
addr16
xchg
fist
pop
pop
test
int
(bad)
pop
push
or
sub
or
cmp
add
xor
push
or
xchg
inc
or
movs
mov
movs
cmps
adc
dec
aam
sub
mov
mov
(bad)
aam
adc
ja
popf
fsubr
mov
jo
out
shr
repnz
in
pop
xchg
lock
mov
and
cmp
sbb
mov
jns
lods
fstp
inc
xchg
hlt
into
push
push
jae
inc
xchg
lea
mov
mov
jb
fcom
mov
hlt
cmp
add
adc
inc
cmp
inc
int3
fdiv
(bad)
out
push
push
adc
xor
xor
xchg
inc
pop
hlt
sub
jns
aas
cmp
xor
xor
sti
pop
mov
bound
shl
sub
cmp
les
xor
mov
call
mov
and
adc
xor
jg
adc
imul
scas
cmps
and
or
int3
stos
fadd
push
push
dec
dec
loopne
stc
push
pop
ss
inc
icebp
inc
mov
dec
or
daa
in
ins
xchg
jns
sub
in
je
xor
jns
leave
rcr
jne
jno
push
jns
or
dec
push
or
mov
dec
aaa
jmp
add
inc
(bad)
mov
inc
jns
jno
jmp
jnp
sub
sub
rcr
test
or
into
xlat
loop
inc
add
sbb
rcl
xchg
mov
jge
pop
test
cmp
mov
ins
outs
sbb
xor
mov
ja
cmps
push
scas
or
push
aad
cmp
xlat
sub
imul
jbe
mov
mov
add
add
cmps
inc
test
mov
std
adc
mov
fnstcw
ret
aas
loopne
pushf
jg
es
push
adc
mov
fwait
xlat
rol
leave
xchg
add
mov
xor
mov
mov
hlt
in
fld
(bad)
in
lock
mov
pop
gs
mov
icebp
jg
mov
test
je
cmp
daa
sbb
add
sub
push
test
sub
inc
mov
lahf
adc
push
pop
jecxz
sar
dec
jmp
je
mov
xchg
push
(bad)
fsubr
xchg
ffreep
inc
and
inc
adc
add
or
repz
ss
in
movs
dec
outs
mov
pusha
mov
jno
and
pusha
pop
adc
rol
sub
inc
jno
add
sub
ds
and
mov
gs
sub
jp
mov
sub
pop
adc
mov
pop
clc
push
or
inc
fcomp
call
imul
cwde
or
outs
imul
imul
ja
adc
addr16
adc
adc
inc
sbb
lods
push
repnz
lods
fisttp
ins
outs
adc
push
cmp
add
inc
ins
popa
jae
dec
pop
neg
mov
and
pushf
dec
push
adc
xchg
sbb
dec
jne
clc
pop
xor
inc
or
popaw
arpl
pop
ss
push
inc
jns
dec
ins
popa
fwait
sbb
or
and
fmul
sub
imul
in
mov
adc
dec
add
out
lock
or
dec
dec
sub
xchg
mov
xchg
(bad)
adc
inc
mov
mov
jo
test
cs
mov
mov
outs
push
inc
push
fadd
and
int3
into
sbb
pop
test
movsx
pop
push
sub
cmp
mov
push
ds
push
out
(bad)
retf
push
push
outs
sub
adc
sbb
jne
ins
imul
es
ja
push
mov
cmp
push
and
adc
xchg
mov
push
mov
add
and
fadd
ret
lds
add
xchg
out
pusha
ficom
xor
push
mul
pop
xlat
xor
das
or
fmul
das
add
out
cmp
jo
pushf
scas
pop
add
bound
ss
adc
add
xchg
ins
xchg
add
inc
ret
outs
scas
dec
inc
das
sbb
add
test
mov
cs
inc
arpl
push
gs
mov
dec
les
enter
xor
int3
sbb
and
pop
prefetcht1
popa
outs
and
mov
push
or
mov
or
pop
inc
inc
jl
out
fstp
pusha
pcmpgtd
fisttp
inc
imul
sub
pop
lea
push
inc
pop
adc
pop
adc
push
pop
or
push
adc
xlat
mov
pop
xor
or
sbb
(bad)
or
sbb
inc
adc
jne
xchg
add
pop
cs
xchg
mov
mov
push
push
sub
push
add
stos
cmp
pop
lock
sub
test
jecxz
xlat
inc
dec
cmp
cmp
add
pop
or
adc
adc
add
movs
push
dec
dec
adc
or
cld
mov
pop
pop
pop
cmp
pop
mov
arpl
sub
movs
(bad)
(bad)
fwait
adc
inc
add
or
(bad)
sbb
sub
jns
cmp
pop
dec
pop
adc
lock
mov
ret
dec
jmp
sub
dec
mov
in
add
or
sub
int3
ja
xor
dec
push
gs
jle
in
neg
and
push
push
in
aaa
aas
daa
ins
iret
jae
repz
mov
ret
cmp
(bad)
inc
cmp
rcl
cmp
into
inc
inc
dec
in
sbb
mov
inc
cmp
inc
dec
mov
adc
add
shr
and
addr16
int
in
xchg
jo
hlt
xor
dec
dec
cmp
sar
rcr
aad
sub
shr
lock
test
in
gs
rcl
int3
xchg
imul
dec
xor
int
mov
imul
std
nop
ret
sub
adc
lahf
lods
mov
pusha
jo
adc
sbb
(bad)
jmp
push
inc
inc
cmps
xchg
lock
lods
mov
xchg
jne
shl
mov
aas
mov
sbb
enter
dec
jns
sbb
sbb
or
aad
in
in
adc
test
xor
xchg
push
iret
adc
cmp
sbb
ss
cmp
std
ret
cmp
stos
cmp
sbb
jb
js
daa
scas
cdq
fmul
inc
or
mov
xor
cmp
jl
hlt
cld
sqrtps
push
xor
dec
lea
pop
and
fisttp
shr
dec
dec
sub
adc
loop
sub
dec
push
cmp
sub
xor
push
dec
push
das
shl
add
jp
dec
mov
or
or
mov
sbb
sub
inc
adc
outs
lea
pop
xor
or
sub
xchg
(bad)
das
sbb
daa
(bad)
cwde
(bad)
(bad)
xor
inc
dec
add
shl
sub
or
push
(bad)
(bad)
in
test
icebp
push
push
daa
mov
adc
pop
add
or
push
push
push
pop
push
xor
dec
push
jge
jae
hlt
dec
aaa
pop
aaa
daa
push
mov
movs
das
pop
mov
xchg
ja
xor
cdq
jo
add
pop
mul
dec
bound
xor
inc
and
sbb
shl
push
jo
pusha
out
xchg
and
fdiv
mov
fsubr
pop
loopne
xchg
ret
pop
pop
stos
sbb
into
sbb
adc
mov
call
sub
inc
cmp
pop
neg
adc
neg
xor
add
xchg
test
push
and
popa
xor
cmp
aaa
dec
mov
sbb
inc
leave
in
push
sub
cmp
jno
xchg
(bad)
and
push
add
(bad)
adc
in
test
outs
adc
loope
ja
push
and
je
push
push
or
or
mov
add
mov
adc
jmp
out
cwde
or
xchg
pusha
push
aam
ret
add
xor
pop
push
inc
mov
pop
and
sbb
ja
stc
or
add
ret
push
test
push
mov
mov
add
pushf
lds
ret
adc
cmc
or
or
call
push
pop
xlat
imul
add
jb
pop
inc
push
adc
and
add
shr
mov
inc
adc
aaa
out
pushf
sbb
outs
push
out
push
or
cmp
call
imul
dec
mov
lods
lock
fist
cmp
mov
jge
mov
xchg
ret
jg
pusha
shl
les
mov
push
push
jmp
inc
in
inc
ror
pop
call
test
jg
jmp
add
ror
stos
test
inc
ret
repz
and
lock
mov
or
cmp
cmp
mov
add
mov
pusha
out
push
add
rcl
(bad)
cmp
xchg
and
mov
push
lea
scas
retf
sub
not
into
and
cmp
push
push
push
or
add
mov
mov
clc
or
outs
push
xor
mov
int3
adc
add
pop
xor
in
push
cmp
jne
test
adc
test
jne
xor
movups
fbstp
dec
jne
jmp
mov
and
es
pop
pop
pop
jne
and
add
clc
jle
push
pop
pop
test
lahf
pop
jno
pop
xchg
sub
mov
pusha
por
inc
sub
lea
adc
sbb
idiv
xor
cmps
xchg
movs
cdq
movs
sbb
enter
sbb
hlt
lock
or
pusha
xchg
add
enter
outs
jmp
jno
cli
adc
xchg
repz
in
ds
cmps
xchg
mov
shl
icebp
mov
dec
rcl
xchg
fmul
pop
lock
fisttp
mov
movzx
nop
clc
xchg
xor
or
pop
sbb
(bad)
mov
push
test
dec
and
fistp
retf
je
or
dec
push
sbb
sahf
inc
add
in
mov
call
in
cmps
sbb
loop
mov
neg
adc
imul
ins
sbb
adc
(bad)
je
ins
bnd
jmp
dec
fidivr
fstp
or
mov
or
mov
push
push
mov
sub
sbb
dec
lea
mov
push
inc
push
clc
push
and
or
cld
je
mov
test
mov
mov
dec
rcr
push
mov
add
xchg
sbb
add
xor
fwait
push
sbb
xchg
mov
test
xlat
js
dec
push
or
stos
mov
push
dec
mov
push
aam
lea
sbb
mov
cmp
add
mov
bndstx
jmp
inc
and
dec
add
lds
cmc
setae
test
out
lods
jp
dec
ja
movsx
add
call
ret
call
ret
test
rcl
dec
mov
mov
pop
push
mov
mov
mov
stos
pop
std
add
aas
pop
je
scas
dec
add
add
fistp
jnp
ja
jmp
jl
sbb
xor
std
ror
bound
add
or
jae
es
or
inc
es
add
jle
mov
rcl
(bad)
out
loopne
aaa
in
adc
ds
in
push
mov
(bad)
cmp
adc
mov
mov
cmp
ja
jb
xor
cmp
test
call
add
out
mov
inc
mov
or
sbb
pop
sub
bound
push
adc
or
jmp
js
movs
ss
icebp
(bad)
push
(bad)
mov
or
iret
pop
inc
pop
jmp
inc
adc
addps
jno
and
add
daa
addr16
es
and
lock
shl
adc
mov
(bad)
xor
fsubrp
push
fbld
mov
sbb
push
jo
mov
in
add
add
dec
push
jo
jg
or
mov
pop
dec
mov
xor
out
jo
jecxz
xor
(bad)
iret
ret
pop
pop
pop
cmp
clc
rol
(bad)
adc
mov
int3
fist
test
fistp
cli
in
xlat
xchg
in
movs
cmc
aaa
dec
fs
sar
pop
dec
add
cmps
loopne
or
stos
syscall
add
ds
mov
or
pop
xchg
jl
outs
cmp
push
mov
sub
gs
add
cld
pushf
mov
loopne
sub
add
(bad)
jae
jl
sbb
or
mov
lea
addr16
sti
sub
cmp
ja
loope
jne
dec
sbb
pop
push
push
sub
lahf
je
or
xchg
jo
and
shl
in
addr16
shl
bound
pop
pop
pop
cmc
add
and
cmp
mov
xor
mov
mov
call
scas
sub
ret
or
call
je
pop
add
push
dec
repz
outs
pop
mov
add
add
adc
cmps
xlat
lock
jnp
pop
data16
pop
jnp
test
je
push
push
jno
mov
fs
mov
jmp
cmp
aam
test
test
mov
pop
enter
rcl
(bad)
daa
mov
ret
xchg
push
stos
ficom
xor
mov
out
inc
mov
pop
push
popf
pop
dec
js
(bad)
xlat
add
push
sub
sahf
add
adc
sbb
mov
in
mov
add
jle
jle
jge
loopne
adc
add
call
push
ret
call
or
and
loopne
out
(bad)
mov
mov
(bad)
mov
lods
cmp
mov
les
test
mov
and
in
mov
fcom
xlat
mov
(bad)
sbb
inc
push
fbld
push
mov
mov
stos
in
mov
and
add
rcl
mov
repz
addr16
jg
clc
add
jge
(bad)
mov
add
(bad)
mov
addr16
add
mov
aas
sti
mov
aam
adc
fbstp
add
push
test
lods
invd
inc
enter
pop
pop
sub
and
cs
fs
test
addr16
arpl
sahf
retf
push
push
in
xlat
out
cmp
iret
aas
add
mov
or
jmp
add
leave
je
adc
je
mov
and
jb
bound
fdiv
into
xchg
daa
dec
pop
dec
or
jae
ja
arpl
mov
mov
xchg
sbb
xchg
xlat
fucomp
lahf
or
dec
je
adc
movs
out
mov
retf
in
dec
sbb
mov
fisub
and
add
pusha
scas
push
bound
push
push
jo
int
mov
sbb
inc
lea
sbb
add
daa
sub
add
or
(bad)
and
sbb
mov
js
aad
gs
pop
xor
cdq
or
pusha
xchg
mov
out
movs
dec
inc
sbb
push
outs
xchg
lock
(bad)
(bad)
jmp
adc
xchg
clc
btc
mov
lods
cmp
nop
(bad)
push
popa
aas
sbb
or
push
xor
add
dec
push
push
aam
aas
in
pop
mov
(bad)
clc
push
pop
popa
ins
inc
mov
mov
jg
push
inc
push
and
and
fdivp
cmp
pop
(bad)
hlt
sbb
xchg
mov
rcr
and
(bad)
mov
mov
push
sbb
jno
mov
add
mov
cmp
add
enter
or
ins
xor
add
add
jns
sub
ja
jnp
xchg
mov
and
call
or
aad
cmp
sbb
mov
pop
les
xlat
add
test
arpl
sbb
ret
push
jmp
jle
clc
push
pop
repz
lea
and
add
push
pop
scas
loop
fldpi
sub
lea
mov
push
adc
mov
rcl
sub
jae
inc
xor
in
xchg
jl
adc
inc
fimul
inc
fs
ja
popf
out
fisubr
adc
push
in
sbb
daa
mov
jb
jns
imul
xchg
ins
std
in
repnz
ins
ins
push
fdiv
ffreep
xor
in
cmp
sbb
or
cwde
inc
add
add
sbb
jg
sbb
cmp
mov
xchg
fist
inc
les
gs
push
jl
ins
xor
hlt
imul
mov
jmp
imul
xor
or
test
xchg
fcomp
adc
and
xchg
inc
xchg
add
add
mov
leave
push
mov
popa
fld
pop
das
shr
mov
adc
adc
adc
jbe
push
xor
(bad)
sbb
test
shl
cmp
aas
or
sbb
out
ds
jae
and
add
jne
int
arpl
sbb
or
lods
mov
or
lock
outs
jl
outs
arpl
sub
pop
sub
jae
or
inc
cs
mov
jbe
push
add
add
push
pop
movs
mov
dec
sub
push
pusha
add
mov
dec
sar
pop
addr16
mov
push
ret
push
shl
pop
pop
jae
lock
mov
mov
js
mov
dec
pop
popf
sub
push
xchg
imul
cmp
sub
push
and
ins
gs
add
ja
mov
test
mov
iret
mov
jl
les
cmp
or
or
xchg
test
enter
adc
or
xor
es
push
xor
push
inc
outs
add
mov
or
adc
mov
push
xchg
pusha
dec
enter
pop
ins
inc
das
sbb
lock
imul
imul
push
shl
push
inc
js
cmp
ficom
jp
in
leave
pushf
movs
jp
inc
dec
push
dec
pushf
aas
shl
xor
lea
(bad)
lock
les
pushf
mov
ins
fistp
ins
ror
arpl
stos
add
lock
jo
inc
jnp
rol
mov
and
pop
mov
pop
iret
adc
icebp
push
outs
xchg
outs
pop
loope
or
iret
test
pop
adc
inc
jne
jb
dec
push
in
arpl
push
jl
leave
add
pop
loopne
rol
jb
aas
scas
lea
jo
ins
(bad)
les
mov
cmp
sub
sbb
adc
ror
lock
fdivr
scas
fmul
mov
mov
and
or
pop
jmp
test
jno
push
sub
mov
xlat
imul
pop
adc
cmp
or
or
cmp
add
test
push
mov
ret
call
pop
adc
lods
ss
xchg
(bad)
dec
add
mov
or
pop
pusha
shl
xor
retf
ret
push
mov
stc
adc
cmovo
test
adc
inc
and
pushf
and
ror
je
add
int3
arpl
push
jmp
inc
cmp
push
add
add
adc
(bad)
cld
or
sbb
xor
mov
jge
sbb
jg
jmp
dec
(bad)
cld
call
dec
add
mov
jmp
mov
aas
js
inc
adc
and
iret
jbe
jmp
sbb
xchg
lock
ja
(bad)
ror
push
mov
push
lea
inc
jl
jnp
mov
add
xor
xchg
cmp
adc
(bad)
pop
lods
mov
cmp
je
xor
ret
push
push
mov
xchg
(bad)
mov
inc
inc
shr
je
mov
test
(bad)
(bad)
sti
inc
mov
test
and
add
mov
dec
aam
and
je
mov
fcmovnu
push
test
sbb
jne
xor
and
sbb
call
mov
out
sub
adc
push
test
and
aaa
mov
pop
mov
dec
pop
add
int3
fist
xchg
jb
add
jb
cmps
ror
jae
cmp
das
push
jae
push
jae
dec
push
fs
jge
test
es
dec
jae
ins
add
icebp
lock
or
dec
push
loope
adc
movs
mov
sbb
adc
sub
xchg
mov
adc
mov
inc
ja
push
jecxz
mov
movs
je
cwde
jne
je
adc
and
je
rcl
aaa
jne
es
pop
or
or
cs
je
inc
adc
fld
or
jae
cmp
add
sbb
jo
or
fild
adc
test
mov
div
push
jo
(bad)
and
mov
adc
inc
pop
test
jne
fcmove
adc
imul
mov
and
cld
add
mov
icebp
scas
mov
jae
cmp
and
jg
inc
cld
call
add
sub
(bad)
sbb
xor
mov
mov
pop
mov
dec
movs
adc
lock
add
and
adc
jl
mov
in
jmp
rcl
pop
adc
and
push
add
pop
add
mov
jno
adc
ret
mov
loopne
or
mov
std
jecxz
repz
ret
mov
(bad)
es
xor
pusha
aaa
es
pop
fld
adc
pop
inc
dec
pop
or
jmp
imul
adc
shr
ror
imul
pop
icebp
rcl
and
or
or
outs
or
or
loope
or
mov
mov
jb
push
jmp
sbb
or
xchg
or
jb
pop
in
and
mov
repz
inc
xor
add
adc
add
xor
cmp
xor
addr16
push
aaa
sbb
xor
ret
test
jmp
sub
pop
xchg
push
push
and
jb
cmp
push
adc
xchg
or
daa
pusha
pusha
adc
jo
and
or
out
pop
adc
mov
ret
les
inc
or
test
(bad)
fbstp
push
push
gs
imul
js
xor
jae
inc
sub
adc
je
adc
fs
mov
xchg
or
jbe
inc
ins
mov
dec
xchg
push
xor
data16
(bad)
fcmovu
dec
jne
imul
push
mov
inc
pusha
gs
test
jne
or
popa
cmps
add
(bad)
ja
or
inc
imul
aam
jnp
or
push
outs
xchg
sbb
jnp
pusha
popf
sbb
adc
dec
outs
mov
sub
gs
fs
dec
outs
ins
jns
inc
dec
ins
fst
out
xchg
sub
(bad)
lock
or
cwde
std
mov
xor
outs
je
outs
ins
adc
jae
fld
add
xor
jnp
lods
and
ss
push
cmp
je
or
jb
or
ss
or
dec
imul
jnp
fdiv
add
push
push
mov
popa
mov
xor
add
lds
ss
cs
pushf
sar
add
dec
gs
jo
sub
je
jecxz
rcr
sub
pop
add
aas
call
sbb
dec
gs
imul
jnp
add
pop
or
push
dec
jne
retf
jne
mov
jne
sbb
inc
jbe
push
or
push
ret
xor
xor
or
and
fucomi
mov
je
pop
nop
or
bound
mov
pause
shl
pop
and
int3
jne
jge
fsub
cmp
js
pop
add
adc
cld
aam
int
push
xchg
xor
xchg
adc
sub
inc
inc
imul
push
sub
or
pop
sti
fs
rcl
out
inc
xlat
mov
adc
and
mov
jmp
pop
int
jb
loope
jo
(bad)
test
fsubr
and
or
adc
pop
mov
ror
add
sub
pop
and
add
push
mov
dec
int3
pop
mov
mov
dec
or
dec
mov
jne
movs
outs
mov
pop
mov
test
jne
pushf
pop
test
or
shl
or
and
pusha
mov
dec
sbb
xchg
pop
out
dec
or
xchg
mov
or
xor
jo
adc
mov
les
adc
outs
pop
lods
lss
inc
cmps
xchg
rcl
pusha
and
mov
dec
xchg
pop
push
cvtps2pd
dec
push
jo
push
inc
icebp
ffree
add
inc
inc
stos
iret
pop
inc
or
scas
cld
xchg
sub
pop
sbb
dec
mov
xor
sbb
and
or
mov
and
dec
test
inc
add
dec
imul
(bad)
mov
mov
and
mov
pop
push
add
outs
cvtps2pd
mov
add
es
mov
add
hlt
and
mov
das
add
add
inc
arpl
iret
pop
sub
adc
movs
mov
pop
lods
lss
loope
adc
inc
mov
outs
outs
in
iret
pop
sub
sbb
push
mov
es
mov
or
push
popa
jb
add
sbb
or
dec
outs
jb
and
pushf
ss
ss
mov
push
stos
lahf
sbb
data16
jb
test
mov
sub
add
scas
lods
mov
push
ret
mov
mov
aas
adc
outs
jbe
ins
imul
iret
pop
sub
call
inc
jne
ins
arpl
inc
mov
xor
fs
outs
add
inc
arpl
jo
push
fdiv
jns
push
jo
dec
std
bound
or
(bad)
jns
rcl
in
fucomp
mov
mov
adc
sbb
rcr
fcom
mov
mov
push
add
sbb
mov
ret
xor
int3
push
unpcklps
jne
arpl
std
add
inc
add
or
sbb
adc
push
test
inc
sub
test
mov
push
or
push
pop
scas
jo
add
add
mov
jb
pop
fimul
or
push
outs
imul
mov
push
xchg
sbb
adc
test
lods
pop
repz
clc
outs
das
adc
adc
inc
fisub
inc
mov
add
push
inc
inc
nop
icebp
add
in
add
or
or
add
(bad)
fst
test
repz
inc
cmp
fsub
dec
sbb
sti
cwde
add
test
pop
mov
push
rol
or
inc
rol
cmp
or
pop
dec
ins
dec
push
ret
add
cmps
sbb
pop
sub
gs
or
sbb
dec
pop
aaa
adc
or
sbb
add
sbb
out
jecxz
and
or
pop
cmp
and
mov
jmp
cmp
arpl
xor
or
add
fadd
sbb
mov
cmp
push
push
xchg
and
push
adc
jge
mul
jl
addr16
enter
xor
lea
push
cli
iret
inc
adc
xlat
and
pushf
adc
xor
sub
cmps
out
data16
or
popa
push
lahf
push
outs
lock
jns
sbb
loop
dec
push
or
and
pop
pop
xchg
mov
test
push
dec
(bad)
aam
adc
das
pop
and
outs
jb
daa
daa
daa
daa
push
mov
sbb
cmp
outs
fild
(bad)
minps
jns
pop
xchg
cld
add
popf
daa
ja
sub
mov
add
xor
outs
clc
addr16
add
inc
sar
(bad)
mov
sbb
popa
and
syscall
out
xor
pusha
xor
jp
dec
push
clc
dec
jnp
imul
das
or
sar
int3
shl
mov
add
or
pop
scas
add
es
jg
xor
lods
adc
jg
inc
and
iret
cli
jle
inc
js
push
jb
sbb
push
xor
add
je
xor
push
mov
add
inc
push
es
cmp
arpl
mov
dec
imul
sub
stos
jbe
pop
jno
or
shl
xor
fild
add
sub
xlat
add
inc
pusha
dec
movs
movs
lock
or
jo
adc
lahf
movs
enter
repnz
add
mov
cld
repz
adc
ins
aas
add
and
je
inc
sbb
popa
sub
xor
push
cwde
inc
int3
or
iret
aad
std
xor
xor
and
inc
imul
or
add
data16
push
nop
test
aam
xchg
add
xchg
pop
out
adc
ins
inc
mov
and
lea
push
xchg
or
imul
ror
jno
enter
and
int3
push
or
adc
mov
and
bound
add
and
mov
inc
or
cli
jo
lods
xor
sub
mov
adc
lock
je
ret
jne
test
adc
or
pop
mov
ror
icebp
mov
xchg
mov
popa
dec
shl
addr16
in
pop
pop
test
adc
sub
add
xor
xor
add
inc
mov
je
or
add
es
fdivr
mov
jo
fwait
add
or
test
dec
cmp
pop
popa
aam
xor
inc
and
clc
or
sti
cwde
imul
inc
dec
cdq
daa
daa
mov
cmc
jns
sahf
(bad)
cli
mov
daa
inc
call
add
xchg
mul
jp
cmp
jo
daa
pop
sbb
jge
dec
xor
jno
inc
add
hlt
jno
loope
mov
xor
bound
nop
add
add
pop
pop
in
dec
cwde
jb
outs
add
sub
and
xchg
push
outs
ins
push
mov
lahf
pop
or
xchg
mov
or
jl
and
pusha
femms
call
in
ffreep
add
mov
pop
sub
rcl
stos
sub
std
cmps
add
dec
mov
jae
add
jns
xchg
fwait
jle
inc
(bad)
(bad)
out
inc
js
stos
add
mov
mov
ss
test
je
xchg
inc
daa
mov
das
cli
fwait
mov
pop
mov
fwait
jmp
pushf
gs
pushf
add
je
call
lods
ds
jb
shr
stc
jmp
mov
add
cmp
xor
pop
pop
dec
sub
or
jo
adc
lahf
pop
jne
loopne
pushf
loop
neg
dec
add
daa
dec
(bad)
jmp
pcmpgtb
das
push
packuswb
lods
outs
addr16
arpl
add
jo
pushf
pushf
fnstsw
pcmpgtd
clc
or
in
mov
jmp
imul
popf
xchg
adc
out
add
push
mov
out
xor
inc
dec
push
out
sahf
out
popa
imul
or
push
jmp
(bad)
or
movs
aaa
push
cmp
mov
test
mov
test
movs
push
pop
xchg
ret
je
ins
lods
push
js
mov
pusha
jae
rcl
test
pop
mov
jmp
sbb
daa
daa
daa
and
ret
clc
xchg
xchg
xchg
daa
inc
mov
enter
mov
iret
leave
mov
and
mov
sub
es
shr
add
shl
add
pop
and
jne
mov
je
mov
or
push
mov
xor
ins
and
adc
dec
add
and
xlat
add
pop
jns
mov
pop
pop
fstp
mov
inc
dec
aaa
and
shl
sub
es
add
jbe
stc
dec
add
cmp
or
mov
cld
jbe
inc
inc
jmp
dec
adc
clc
inc
dec
add
ja
or
jns
pop
adc
inc
outs
ret
in
adc
ret
push
shl
stc
sub
xor
pop
cmp
rcl
mov
adc
cmc
adc
adc
inc
xlat
pop
ret
push
jecxz
fcomp
in
test
and
lods
stos
add
xchg
xchg
or
mov
js
xlat
sbb
sbb
sti
out
adc
les
sbb
mov
das
cwde
movs
aas
in
sub
mov
push
imul
les
clc
xchg
add
clc
xor
movs
push
in
push
xor
push
pop
push
mov
cvtps2pd
dec
or
adc
cwde
jp
je
loope
imul
push
sub
add
or
test
imul
inc
jnp
imul
mov
iret
pop
(bad)
test
enter
test
xchg
jns
add
fisubr
fcom
and
push
dec
mov
(bad)
repz
pop
mul
out
imul
jl
adc
push
sahf
fild
jae
scas
dec
ror
add
jnp
out
(bad)
inc
push
sub
mov
sbb
or
xor
loopne
daa
xchg
jp
lds
ss
push
mov
push
jmp
cmp
sbb
push
sbb
push
push
das
(bad)
dec
jmp
inc
stos
outs
gs
push
or
push
scas
xor
add
ds
push
clc
pop
mov
inc
pusha
or
outs
ins
add
ss
jnp
and
dec
jle
push
popa
movs
js
ins
mov
ins
cmps
inc
in
in
retf
add
inc
add
push
in
jbe
jns
push
cmp
dec
test
adc
mov
cmps
mov
cmps
mov
loopne
inc
jge
aas
in
or
inc
dec
ja
jae
add
xchg
and
add
mov
psubw
add
(bad)
(bad)
mov
dec
int
jne
jns
add
sub
sub
pop
je
loopne
or
fidivr
dec
inc
add
les
sahf
adc
js
lods
adc
test
loope
setl
movs
call
pop
addr16
enter
sub
mov
pushf
stos
jns
push
adc
out
and
jge
adc
test
call
dec
push
or
mov
les
push
or
ins
popf
cmp
mov
and
pop
sub
adc
popf
dec
jne
stos
cmp
sub
aam
xor
fild
cwde
stos
in
or
movs
sub
mov
cmp
cmp
push
or
inc
sub
arpl
ins
jmp
loop
inc
inc
dec
add
jmp
sbb
out
jnp
dec
add
or
adc
repz
(bad)
scas
movs
ret
sbb
or
add
jns
pusha
adc
(bad)
adc
cmp
cwde
test
stos
out
in
inc
push
push
cmp
daa
sbb
inc
ret
and
movs
xchg
mov
shl
cld
xchg
mov
dec
cmp
sbb
test
loopne
movs
pop
push
(bad)
or
sub
add
jge
mov
xchg
pop
dec
loopne
and
and
test
and
rol
add
mov
addr16
lock
enter
dec
scas
push
push
loop
cmp
xlat
sbb
push
nop
cmp
repz
push
push
push
pop
push
or
and
fs
add
add
out
jbe
stos
mov
inc
iret
add
sbb
jae
or
or
push
jo
js
sti
jb
arpl
pop
inc
xlat
in
xor
test
or
mov
cmp
ror
scas
pop
daa
scas
pushf
fistp
cmovle
in
lods
mov
cld
imul
sbb
(bad)
mov
or
jp
mov
frstor
popf
ins
sbb
mov
jle
or
std
(bad)
cld
(bad)
sti
(bad)
sub
out
bndldx
push
inc
or
shr
inc
mov
sbb
cdq
pop
push
push
pop
add
test
dec
mov
add
scas
jbe
dec
and
sbb
test
inc
fbld
ror
jno
adc
inc
nop
ret
push
mov
pop
push
dec
pop
mov
sub
in
mov
sbb
hlt
or
push
pop
sbb
aad
sbb
inc
jo
and
imul
or
lds
push
jl
sti
push
imul
add
push
cmp
in
mul
push
imul
push
rol
adc
dec
aaa
ds
mov
and
int
dec
cmpxchg
or
mov
cmp
pop
or
xlat
cmp
test
sub
or
and
dec
mov
mov
jns
ja
nop
mov
push
sbb
xor
push
cld
les
dec
lods
outs
add
and
add
sbb
sbb
push
rol
sub
je
ror
push
ins
fsubr
push
cmp
sub
xchg
test
cmp
lods
adc
xor
ins
xor
rol
add
pop
xor
outs
(bad)
cmovns
pop
adc
scas
ds
xor
pushf
jae
push
rcl
sahf
cmps
inc
test
pop
fsubr
loop
ret
or
rcl
dec
add
and
jae
repnz
push
push
push
jne
and
dec
(bad)
imul
movs
adc
bound
mov
clc
gs
or
push
adc
js
inc
jl
push
push
cld
ret
push
addr16
sub
(bad)
mov
jno
cdq
mov
sbb
sbb
or
shr
(bad)
stc
dec
mov
xor
(bad)
inc
dec
add
or
mov
mov
ror
mov
pop
arpl
(bad)
test
mov
pop
dec
ja
xor
dec
add
or
add
pop
shl
cmp
or
mov
cmp
or
pushf
mov
sub
cmp
push
or
mov
mov
inc
test
xchg
lock
lods
xchg
xor
punpcklbw
cmc
push
int3
xchg
mov
cdq
es
lahf
pop
jbe
push
hlt
in
jmp
outs
iret
mov
xchg
cs
push
call
das
sbb
push
dec
push
mov
out
or
shl
xor
inc
sbb
loop
cwde
(bad)
sub
(bad)
repnz
or
rol
xchg
mov
inc
aam
outs
push
fld
clc
pop
js
mov
add
adc
adc
ins
cwde
into
mov
dec
loope
inc
add
imul
(bad)
jmp
sbb
inc
push
jg
sbb
dec
mov
stc
push
aaa
test
loop
or
cmp
(bad)
rcr
sar
inc
dec
dec
sub
push
mov
ins
fidivr
int
lock
and
lods
loopne
aam
pop
pop
mov
(bad)
dec
mov
out
sti
xlat
div
movlps
es
sub
pop
or
into
pop
sti
repnz
ss
and
push
add
pop
add
mov
pop
sbb
bound
xlat
lock
cs
out
ss
cs
push
add
pop
repnz
loopne
xor
cmovp
and
mov
jo
and
fisub
ret
inc
and
out
movq
shr
mov
sbb
add
das
or
add
dec
adc
popa
stos
or
aad
mov
dec
xchg
es
aad
cmp
xchg
sti
daa
(bad)
ins
and
or
xlat
jmp
pop
(bad)
mov
ss
sub
or
inc
popa
mov
aas
mov
pushw
movs
push
gs
pop
mov
neg
sbb
fadd
call
jne
ds
jne
or
pop
dec
fld
cmp
clc
and
jecxz
mov
xchg
ss
test
jnp
mov
sub
mov
xchg
test
mov
dec
push
enter
dec
mov
cmc
test
push
push
inc
jno
out
sbb
dec
and
push
aas
rcl
sub
cmp
sbb
fs
add
pop
jbe
adc
dec
xor
lea
addr16
dec
cmp
mov
and
add
imul
popa
test
ds
inc
bound
cli
mov
inc
outs
sbb
popa
test
inc
ins
push
and
sbb
stc
add
rol
hlt
mov
push
ds
mov
fild
xor
imul
fistp
test
loope
enter
fcom
lahf
xchg
inc
push
iret
call
add
pusha
das
and
dec
sbb
jnp
inc
and
lock
sub
add
mov
stos
sbb
and
ja
les
or
inc
pop
les
scas
bound
xor
xor
addr16
outs
jne
and
jmp
xlat
jo
xchg
pop
into
xbegin
shl
in
and
outs
clc
or
sbb
inc
sub
push
jne
pop
dec
icebp
imul
or
mov
dec
jae
and
add
mov
push
xchg
cmp
retf
lock
int
lds
or
add
sbb
outs
or
sti
inc
sbb
push
add
dec
in
lock
adc
mov
dec
xchg
adc
inc
lock
sbb
cmp
mov
push
lahf
sysret
dec
sub
sub
mov
enter
add
and
in
enter
loopne
(bad)
enter
xor
mov
adc
and
test
bound
cmp
add
add
ins
xchg
sub
push
add
sub
or
sub
or
and
inc
pop
sub
lock
lea
jecxz
add
xchg
out
lea
(bad)
push
push
sahf
sub
push
mov
ds
movs
popf
dec
js
or
pop
xor
and
xchg
sbb
and
push
repnz
inc
inc
repnz
or
push
inc
push
ds
pop
bound
jge
sbb
sbb
setns
sub
sbb
mov
mov
into
mov
retf
jmp
jbe
test
repz
sub
enter
(bad)
ror
loopne
dec
test
sbb
pop
iret
add
add
test
mov
setg
jmp
ret
enter
cmps
jae
leave
setno
mov
jbe
add
xchg
inc
jmp
and
inc
inc
mov
mov
enter
in
jnp
test
dec
jb
push
or
repnz
inc
mov
sub
repz
push
xchg
mov
push
mov
loopne
into
mov
sub
jge
push
cmps
(bad)
mov
cmp
mov
push
push
fbld
aas
jmp
push
pop
movs
fidivr
adc
cmps
in
push
lods
(bad)
loopne
mul
sahf
lock
mov
sbb
cmp
fisubr
xor
xchg
pop
cmp
sub
or
ds
xor
enter
mov
cmp
jl
movs
arpl
jl
sub
mov
xor
mov
outs
inc
ja
jmp
mov
dec
mov
lods
mov
and
ss
fldcw
jge
or
pop
xor
ins
inc
mov
retf
push
retf
das
repnz
fistp
adc
popa
adc
xchg
adc
fdivrp
push
stos
call
dec
prefetchnta
mov
ss
mov
int
test
or
enter
sub
inc
sbb
mov
adc
or
sub
test
mov
sbb
mov
les
mov
adc
sub
xor
and
mov
fbld
cmp
pop
ins
rcl
add
xchg
(bad)
sbb
lds
add
xor
and
repz
add
fld
push
add
pop
add
inc
add
scas
adc
pop
jnp
or
mov
pop
and
je
inc
add
push
pop
pop
bound
jnp
xchg
push
pop
mov
sbb
into
inc
xor
js
sbb
and
cmp
call
lds
or
dec
add
aad
adc
mov
or
xlat
push
dec
daa
aam
in
inc
test
cmps
add
pop
lock
xor
addr16
shl
out
les
stos
push
cwde
push
scas
add
pushf
jle
retf
pxor
xor
dec
rcr
das
adc
mov
daa
daa
daa
and
call
xchg
sar
rcl
leave
leave
(bad)
rol
pop
push
mov
jae
cdq
add
ret
cmp
outs
add
fnstsw
or
aad
inc
jne
data16
lea
ds
or
adc
add
sbb
pop
or
dec
sbb
adc
aad
pop
jecxz
mov
cwde
adc
xor
pop
sub
mov
cmp
cmp
rcl
push
test
mov
sub
adc
cmp
dec
jne
xchg
xchg
or
inc
sub
pop
scas
jge
adc
dec
or
mov
mov
in
dec
pop
mov
mov
sbb
cmp
jge
jb
push
and
lods
loopne
add
jg
les
add
scas
sub
dec
imul
add
mov
sub
inc
add
mov
sbb
mov
movs
adc
push
sbb
dec
mov
mov
and
int
adc
inc
sub
xchg
rcr
adc
clc
or
js
jnp
lods
dec
enter
lods
add
add
adc
in
cmp
mov
std
adc
cmp
out
sbb
and
push
cmp
mov
pop
add
mov
xchg
xor
aam
or
fs
pushf
jecxz
dec
inc
add
cmp
outs
test
push
aaa
jne
sub
jmp
es
call
clc
adc
sbb
xchg
or
push
mov
mov
cmp
jne
or
into
das
iret
mov
lods
push
push
pop
adc
loopne
push
jg
jecxz
add
ja
inc
dec
imul
or
adc
mov
pusha
fdivr
cs
(bad)
and
pop
mov
adc
add
xor
aad
ror
sbb
add
jno
inc
lods
ja
sbb
sbb
inc
bound
pop
adc
push
sbb
and
adc
(bad)
or
aam
push
popf
cmp
inc
pop
mov
movs
lock
jl
pop
push
xchg
movs
dec
shl
push
adc
aam
pushf
scas
inc
adc
push
sbb
sub
hlt
ss
dec
fdiv
dec
fdiv
cmp
or
push
push
mov
add
pop
fidivr
ficom
pop
fist
ror
aam
jnp
pop
pop
add
nop
add
clc
test
push
leave
(bad)
test
lds
adc
pop
scas
cmp
ret
dec
ins
(bad)
pop
and
sbb
fldenv
jge
mov
int3
fisubr
push
adc
jl
adc
fsubr
adc
ds
mov
cs
mov
cmp
push
adc
pushf
cs
sub
ror
icebp
out
xlat
(bad)
fldcw
ficomp
lsl
fadd
mov
jns
adc
pusha
daa
mov
xchg
and
enter
sub
add
push
cmp
sti
test
push
dec
xchg
sti
mov
xchg
test
xchg
mov
mov
xor
mov
fld
nop
add
outs
dec
and
lds
sti
sahf
and
push
sbb
fsubr
in
pop
fs
mov
nop
mov
adc
jmp
xchg
push
push
fcomp
iret
leave
ins
mov
dec
push
setae
dec
adc
loope
push
fstp
or
stos
push
push
push
dec
daa
adc
pushf
push
frstor
adc
pop
sbb
add
leave
pop
adc
test
and
mov
pop
sbb
cmp
imul
push
outs
pop
xchg
push
sub
cmps
mov
add
add
pop
mov
daa
sub
fucom
test
scas
push
adc
xlat
popf
sub
cmp
sbb
fld
les
ja
shl
add
and
jns
sub
cmp
or
mov
sub
mov
lods
inc
cmp
push
gs
xchg
or
inc
pop
or
fwait
xchg
fild
mov
fimul
bound
mov
and
fst
add
add
stos
sub
jns
jo
adc
adc
mov
imul
sbb
push
mov
push
dec
dec
std
or
cdq
xor
jl
push
jns
punpckhwd
push
add
scas
sbb
inc
mov
mov
imul
jl
les
dec
xlat
pop
inc
jns
fisttp
das
ins
dec
and
sub
pusha
mov
xor
or
loopne
inc
popf
les
pop
sub
jbe
shl
pop
adc
or
push
daa
smsw
fild
push
or
xlat
add
cmp
cmp
xor
cmp
mov
add
add
pop
adc
push
faddp
push
loop
loop
loop
adc
stos
push
jbe
scas
or
mov
inc
sub
popa
add
loop
inc
in
mov
add
das
or
push
inc
xlat
sub
inc
lahf
jo
sub
sti
push
or
jnp
dec
fadd
adc
pop
dec
inc
ins
outs
bound
mov
jecxz
ja
fsubr
fmul
aad
cld
jecxz
data16
stos
pop
push
mov
xchg
inc
in
mov
pop
sub
mov
and
mov
pop
and
add
xchg
nop
std
mov
ret
inc
mov
mov
fild
cmp
daa
test
mov
stos
daa
cs
in
add
xor
inc
pop
pop
outs
int3
or
sub
imul
outs
jmp
ficomp
xchg
sbb
sub
dec
fs
pusha
xor
inc
ret
push
jmp
ror
out
in
or
in
sbb
in
push
in
sbb
in
push
and
aam
pop
inc
push
add
lods
or
push
popa
in
in
pop
in
out
add
push
outs
aas
dec
cmp
cmp
call
stc
loope
out
cmp
xor
push
sub
cmp
add
in
inc
push
cmp
jae
mov
out
jo
stos
repnz
mov
cmps
xor
cmp
es
mul
dec
fs
inc
neg
add
ins
lock
cmp
iret
repz
je
mov
cmp
stos
inc
add
aam
cs
and
ret
mov
or
push
or
push
out
out
jbe
sub
outs
add
pmuludq
pop
sar
push
scas
paddd
stos
jb
jmp
add
push
sub
test
jmp
gs
or
repz
cwde
dec
lds
mov
sbb
push
loopne
rcl
and
xchg
and
popf
and
pop
or
mov
std
lock
fdiv
add
jmp
push
xchg
je
push
cwde
loopne
pop
jo
jnp
push
sbb
push
pop
sub
dec
out
jge
mov
call
xchg
mov
adc
bound
ja
(bad)
and
leave
mov
adc
inc
int3
leave
push
pushf
adc
xchg
adc
add
icebp
jno
mov
jge
(bad)
jmp
push
sbb
outs
jae
hlt
(bad)
bound
pop
jl
loope
add
and
and
or
dec
sub
mov
mov
std
add
add
addr16
cmp
inc
sbb
es
push
mov
cmc
imul
mov
sbb
pop
add
ret
add
call
adc
xor
sbb
cmp
pop
(bad)
pop
scas
cmps
cmp
leave
dec
push
sub
push
mov
pop
jae
push
rcr
pop
ins
shl
push
xchg
adc
or
xchg
shr
xchg
mov
xchg
pop
jnp
mov
rcr
add
adc
stc
and
pop
and
lods
sbb
test
aas
call
jnp
std
test
pop
fisubr
push
mov
adc
sub
ins
outs
jbe
push
jne
add
and
pop
mov
sub
jmp
cmp
inc
daa
adc
(bad)
and
out
add
ins
movs
adc
pop
inc
inc
push
imul
pop
pusha
sbb
or
cwde
in
fdiv
sbb
mov
dec
js
cmp
retf
add
add
push
and
je
(bad)
rol
fcmovnu
out
mov
fst
arpl
inc
arpl
or
inc
(bad)
sub
or
xchg
test
xchg
sub
or
add
mov
cs
add
or
lea
push
xchg
ja
jbe
adc
jnp
inc
adc
add
(bad)
shl
sub
add
pop
add
fwait
outs
in
aad
and
jge
or
add
fsubrp
jns
sti
fistp
adc
jbe
dec
jne
ins
or
add
mov
pop
or
cwde
addr16
xor
frstor
movs
(bad)
or
aaa
sbb
inc
cmp
push
jb
fnstenv
popa
jb
add
pop
sbb
fs
dec
imul
pushf
popf
xor
mov
js
inc
in
outs
push
iret
loopne
mov
push
inc
cmp
jb
daa
hlt
pusha
icebp
adc
ror
out
sar
xor
or
push
inc
push
inc
fs
or
imul
or
push
mov
xor
or
cs
xor
fucomi
ret
fwait
sahf
push
sbb
sub
mov
js
pushf
sbb
dec
or
dec
xor
mov
xchg
xchg
pop
sub
adc
xchg
outs
jae
dec
sub
xchg
mov
enter
adc
fsub
dec
mov
add
sbb
dec
enter
daa
gs
fistp
mov
mov
xchg
pop
inc
(bad)
int
dec
add
loop
inc
add
lock
out
mov
ins
es
das
pop
push
sub
mov
mov
(bad)
sub
xchg
add
jbe
or
mov
lea
mov
aad
or
imul
add
enter
adc
xchg
push
or
cmp
add
inc
push
outs
outs
je
sbb
dec
and
mov
and
push
or
add
jne
or
jmp
ja
(bad)
jecxz
xor
out
aad
cld
xor
retf
repnz
loopne
inc
mov
add
push
xchg
and
in
ror
cmp
sbb
sbb
mov
inc
pop
jb
shl
je
iret
add
mov
jae
pop
sub
in
out
mov
dec
add
push
dec
inc
mul
cmp
push
mov
dec
jp
pop
scas
enter
adc
out
or
je
je
pop
mov
sub
lea
mov
inc
add
cdq
mov
ss
sub
jno
jecxz
sbb
(bad)
jl
mov
retf
mov
js
out
and
mov
add
and
jmp
les
adc
std
fwait
xor
loopne
or
out
sub
or
add
fldenv
cmp
test
fld
pop
mov
ret
xchg
add
adc
mov
inc
adc
dec
add
mov
pop
dec
hlt
push
add
pop
or
addr16
sbb
jae
or
mov
xchg
fnsave
mov
mov
sub
dec
rcl
or
out
std
add
ret
ror
dec
pop
add
scas
mov
inc
inc
in
imul
cmc
push
adc
and
adc
add
or
cmc
test
aad
iret
push
push
or
icebp
imul
out
adc
or
sbb
push
inc
sbb
mov
lahf
stc
add
mov
inc
push
push
or
jae
xor
adc
sbb
pop
add
je
enter
push
pop
sbb
pop
dec
(bad)
adc
add
shr
adc
aaa
mov
inc
neg
cdq
cli
pop
fsub
jb
sbb
sbb
add
daa
xor
test
mov
rcl
mov
test
adc
or
xor
pop
adc
aas
sub
ins
inc
popa
cmp
push
clc
push
add
add
add
xchg
iret
or
mov
xchg
nop
dec
std
push
cmpxchg8b
sub
stc
(bad)
adc
or
ret
(bad)
jl
add
xchg
or
dec
test
mov
or
add
sbb
add
xlat
add
mov
mov
xor
cmps
push
inc
cld
das
outs
push
add
lock
cmps
std
mov
rcl
rol
push
add
hlt
lds
jl
ins
out
loopne
add
mov
push
adc
add
and
adc
sub
xor
jmp
pop
inc
js
retf
cmp
xor
das
jae
xor
ds
cmp
cmp
xchg
mov
outs
lea
mov
xchg
cmps
adc
adc
pop
sbb
or
lock
push
dec
sub
cmp
jo
mov
imul
xor
push
mov
cmp
stos
push
or
dec
jo
xchg
test
(bad)
adc
jne
add
add
sbb
inc
popa
test
mov
test
shl
or
in
sbb
sbb
aad
std
mov
xor
pop
popf
std
add
sub
xor
jnp
ins
ja
out
(bad)
das
sbb
cmovne
xor
lahf
pop
enter
mov
xor
cmp
cmp
sahf
pushf
pushf
pushf
(bad)
mov
dec
dec
inc
aaa
imul
in
pop
add
leave
ins
neg
pop
mov
in
in
outs
cwde
into
cmps
mov
or
xchg
daa
daa
or
push
lea
push
jno
inc
cmp
popa
mul
mov
or
arpl
test
adc
add
add
mov
xor
inc
int
inc
aaa
mov
fisttp
mov
imul
push
ret
sub
sbb
adc
sbb
xor
mov
movs
es
lods
dec
outs
add
loopne
pop
sub
jne
shl
pop
add
pop
lods
pop
push
les
stos
push
(bad)
mov
cdq
add
aad
fwait
mov
loop
(bad)
nop
or
sub
lods
(bad)
jg
rol
jge
xor
cmc
ret
add
sahf
jp
dec
sub
and
and
inc
and
scas
imul
cwde
push
push
mov
adc
fs
pusha
adc
inc
int
mov
mov
jl
mov
movs
jae
lods
add
test
and
imul
adc
fs
mov
and
sub
icebp
lods
mov
pusha
rol
rcl
push
sbb
cmp
mov
imul
leave
hlt
shr
pop
add
loopne
mov
test
mov
les
(bad)
fs
addr16
pushf
test
jo
pop
sub
mov
xchg
and
add
push
jo
jmp
lock
add
js
les
pop
add
push
sub
or
dec
adc
add
test
adc
add
retf
adc
xchg
aas
add
pop
inc
hlt
add
add
(bad)
(bad)
fs
loope
outs
ret
adc
sub
add
cmp
pop
je
sub
aam
inc
lahf
imul
pop
and
and
mov
push
lahf
ss
mov
call
lock
inc
jo
mov
mov
ret
jo
add
or
mov
nop
in
imul
icebp
xor
movs
sbb
lea
cmp
test
pop
sbb
push
ror
in
push
cmp
enter
mov
or
xor
add
sbb
cdq
and
sub
push
cmp
inc
call
bound
xchg
and
mov
inc
jnp
(bad)
call
(bad)
aam
gs
mov
push
mov
popa
(bad)
aam
or
sbb
xchg
iret
mov
mov
jmp
pop
push
into
mov
adc
push
mov
aaa
jmp
pop
inc
cmp
pop
pop
mov
sub
jp
or
aas
push
aam
add
add
pusha
ins
pop
or
jp
fdiv
xor
xor
jg
jl
fidivr
movs
add
lahf
pop
nop
xchg
(bad)
mov
das
or
mov
push
cli
mov
adc
in
push
movs
mov
fist
imul
cld
movntq
stos
xchg
test
adc
out
or
or
push
push
int3
jo
(bad)
das
bound
inc
out
dec
scas
pusha
xchg
pop
shr
ds
sbb
out
out
xor
add
mul
rcl
dec
iret
or
test
adc
or
xor
adc
int3
add
inc
sub
(bad)
sahf
xchg
adc
xor
cmp
inc
dec
sbb
jge
mov
dec
daa
pop
sbb
jno
sbb
fisub
adc
jae
push
sbb
imul
addr16
xchg
push
repz
stc
inc
inc
add
jnp
add
cmps
xor
mul
or
jb
fst
cmp
sahf
fcom
cmovle
mov
dec
dec
inc
arpl
daa
daa
and
jne
jmp
fadd
cs
out
out
dec
pop
mov
bound
or
pop
inc
inc
or
pop
mov
call
or
sub
out
xor
mov
push
dec
add
push
mov
add
or
nop
outs
add
pop
test
call
inc
mov
and
jnp
bound
out
jns
scas
add
and
sbb
cs
cmp
outs
or
std
ja
and
or
and
inc
iret
mov
pop
cmp
and
(bad)
lahf
inc
inc
xchg
inc
inc
adc
je
popf
and
add
push
pop
add
inc
bound
ffreep
cmp
retf
aas
add
jae
mov
jno
jo
mul
adc
ja
lods
pop
pop
dec
pop
nop
test
xchg
cmp
dec
fimul
mov
add
mov
nop
or
or
enter
bnd
xchg
fwait
jne
add
shr
das
sub
add
sub
out
xor
stos
shl
cli
fnop
xor
pop
or
pop
sub
pusha
mov
adc
sbb
movs
dec
fstp
xchg
jg
add
adc
or
cmc
ret
in
fcom
hlt
adc
inc
mov
sbb
ja
je
jae
pop
add
inc
mov
add
imul
or
and
adc
addr16
or
bound
or
imul
pop
mov
data16
sbb
adc
xchg
pop
or
push
add
inc
or
stc
xor
push
inc
or
or
fisttp
adc
inc
dec
add
sbb
(bad)
mov
add
pop
es
jbe
(bad)
push
jnp
lock
inc
loope
and
stc
inc
mov
lock
and
inc
push
pop
ins
(bad)
jns
(bad)
sub
xor
movups
mov
push
fisttp
push
jns
clc
mov
test
push
je
in
(bad)
push
jl
dec
outs
ja
pop
jmp
jb
dec
pop
ins
mov
imul
and
adc
adc
fcmovnb
xor
mov
pop
sbb
out
cs
sbb
mov
inc
(bad)
adc
mov
mov
loop
ffree
imul
adc
push
(bad)
cmps
jo
jns
pop
jmp
xchg
add
inc
and
(bad)
cmp
ja
sub
add
adc
daa
clc
pop
sbb
mov
mov
das
sbb
add
lea
sub
je
inc
out
pop
xor
push
sbb
inc
pop
(bad)
lea
and
movs
arpl
or
lea
imul
out
sub
xchg
add
add
cwde
mov
aaa
or
ins
cmps
je
data16
sub
fistp
gs
gs
cmp
adc
enter
popa
pop
adc
inc
push
outs
aad
jnp
lods
icebp
sbb
mov
or
add
in
mov
sti
push
adc
cmp
nop
add
les
fcmovnbe
mov
add
jmp
(bad)
fs
cmp
iret
push
leave
in
aaa
in
and
cmovnp
into
leave
leave
jb
ret
(bad)
cmp
jns
sbb
rcr
push
xchg
aam
dec
inc
sahf
or
mov
add
scas
test
pop
push
xchg
cld
sbb
ins
xlat
inc
fistp
out
inc
dec
add
test
movaps
and
or
add
mov
push
jns
outs
mov
add
addr16
retf
jno
sbb
shr
jne
add
push
pop
jno
xlat
out
add
sub
jne
out
inc
inc
push
add
cmps
or
mov
jecxz
push
sbb
loop
aas
(bad)
out
sbb
test
mov
or
and
add
fs
add
add
add
(bad)
push
icebp
imul
jnp
mov
xlat
push
sbb
cwde
push
lds
lds
inc
or
xor
jnp
sti
xor
jge
pop
mov
jne
mov
adc
push
imul
jge
jge
pop
jbe
inc
adc
mov
aad
xchg
inc
or
mov
add
mov
sub
sub
pop
inc
adc
xchg
das
jnp
push
rcl
and
push
stos
inc
fst
xchg
xchg
push
mov
jmp
addr16
inc
leave
sub
fwait
xor
adc
inc
mov
in
or
jl
dec
or
sbb
mov
xchg
stos
rol
mov
sub
jo
pop
rcr
scas
adc
test
dec
pop
pop
imul
aad
das
add
xor
pop
imul
in
push
mov
xchg
adc
js
and
push
ret
mov
pusha
mov
push
dec
dec
rcr
dec
dec
dec
sbb
test
stos
dec
test
pop
ret
js
fdiv
dec
gs
in
cmp
or
adc
pushf
mov
sbb
push
movs
sub
ja
and
jl
daa
inc
das
bound
inc
pop
dec
je
or
sbb
sbb
dec
jo
sbb
mov
pusha
jnp
pop
mov
sub
dec
mov
cmp
xchg
add
bound
mov
cmp
scas
push
pop
sub
and
pop
sub
jnp
pushf
add
inc
add
xchg
dec
outs
pop
dec
vpmacssdql
adc
out
add
pop
dec
ins
push
mov
sub
and
mov
push
push
add
idiv
jg
cmp
adc
mov
jae
pcmpgtw
les
(bad)
adc
in
cmp
aad
or
xor
mov
add
popa
arpl
pop
adc
mov
inc
pushf
xor
repnz
mov
(bad)
jmp
scas
pop
and
pop
jle
dec
outs
test
je
mov
and
ss
or
mov
neg
test
imul
and
push
mov
push
lods
or
jns
add
loopne
sar
mov
repz
dec
jmp
and
scas
retf
sahf
mov
dec
daa
cmp
adc
popa
out
push
adc
push
inc
mov
aas
adc
(bad)
cmps
pop
ret
pop
mov
mov
mov
mov
add
inc
lahf
aaa
aad
cmps
push
and
and
aam
push
cmps
add
cmps
xor
je
xchg
jmp
sbb
loopne
and
inc
mov
je
bound
cmp
test
dec
cmps
add
and
rol
cwde
or
(bad)
and
mov
xchg
add
mov
test
sbb
wbinvd
dec
dec
bound
(bad)
call
mov
ja
dec
mov
jecxz
fwait
xchg
in
rcl
add
lods
add
jbe
dec
jmp
inc
je
fsubr
(bad)
call
shr
movs
pop
sub
add
add
adc
sub
(bad)
(bad)
cmp
sbb
add
jl
dec
fwait
add
enter
shld
push
ja
cs
sbb
int
lock
adc
adc
popf
imul
loopne
xchg
and
sub
ror
cmp
in
cmp
das
xchg
push
sbb
enter
fmul
fs
jl
into
dec
push
and
xchg
push
in
inc
dec
(bad)
push
fisub
dec
inc
outs
icebp
jp
adc
(bad)
xchg
push
addr16
and
add
cmp
add
or
outs
pushf
pop
sub
sbb
dec
add
je
aaa
sti
or
mov
sti
out
in
loopne
push
dec
xor
cmps
push
icebp
or
in
daa
lds
and
(bad)
ret
aam
sub
push
add
cmps
psrlq
sub
gs
push
loope
hlt
sub
xor
mov
ds
ins
dec
ss
lds
add
sbb
sahf
pop
out
sbb
or
rcr
or
cmp
adc
or
mov
mov
adc
or
and
(bad)
sbb
dec
int
jb
nop
call
in
inc
dec
add
dec
nop
adc
adc
sbb
inc
pop
dec
add
adc
dec
fsubr
mov
mov
pop
pop
cwde
xchg
add
lds
in
cwde
sbb
sub
pop
or
enter
dec
jmp
or
dec
inc
fsubr
mov
sbb
add
pop
in
jmp
adc
aad
jecxz
adc
xor
daa
aas
mov
shr
das
add
cmp
shl
xor
das
mov
pusha
xchg
arpl
aam
inc
int3
mov
int3
add
push
push
pop
loop
iret
repz
inc
or
scas
cdq
mov
xor
fimul
pushf
ss
inc
and
daa
mov
mov
sbb
mov
push
shl
push
mov
push
push
sub
popa
lods
out
out
dec
(bad)
lock
xor
pop
and
es
mov
add
call
adc
push
cwde
xor
lahf
and
jo
add
neg
adc
or
js
shl
xor
jge
push
pop
cmp
mov
inc
iret
mov
fistp
jno
inc
add
shl
add
push
scas
fist
enter
jnp
jae
adc
sbb
gs
mov
scas
out
sbb
adc
sbb
xchg
cmovbe
xor
bound
xchg
push
inc
dec
cmp
mov
mov
add
jecxz
nop
mov
sub
aam
pop
add
sub
adc
arpl
clc
add
and
sub
jle
pop
(bad)
cli
inc
push
jbe
mov
push
add
(bad)
fstp
sbb
minps
aam
xor
push
paddd
imul
call
xor
mov
pop
out
clc
(bad)
mov
das
xor
loope
test
adc
pand
dec
and
add
jmp
call
int3
add
idiv
cmc
push
ss
ret
jns
idiv
lods
push
mov
cld
int3
dec
repz
aam
in
sub
dec
xor
rcr
mov
mov
dec
ss
pusha
sub
jns
jg
mov
pop
pop
pusha
mov
dec
ins
mov
jne
inc
rcl
inc
gs
gs
into
mov
mov
scas
jge
sbb
pusha
or
push
adc
ret
adc
or
cmpps
and
fistp
adc
cwde
mov
cwde
mov
jmp
adc
sbb
loope
cmp
cmp
sub
adc
add
inc
sub
test
loope
push
das
xchg
sbb
sbb
xchg
jle
fimul
or
pop
pushf
popa
cld
mov
mov
loopne
cmp
pusha
xchg
jo
and
push
gs
shr
test
dec
jbe
ss
sbb
adc
lods
push
inc
stos
jge
adc
out
test
stos
inc
or
xchg
repz
push
dec
dec
lea
inc
mov
popa
data16
ins
adc
retf
nop
(bad)
push
adc
push
stos
or
mov
dec
scas
rol
jle
or
ins
mov
jbe
and
scas
mov
or
add
(bad)
jae
push
xchg
ins
pop
add
jo
ret
cmp
jae
add
xor
add
dec
popf
inc
jns
fs
dec
adc
mov
push
inc
inc
inc
inc
nop
or
je
dec
ret
mov
xchg
xor
imul
add
xchg
enter
add
pop
bound
or
or
mov
sub
jbe
mov
add
xor
inc
sub
xchg
popa
lods
add
call
dec
mov
in
adc
lds
pop
sub
push
gs
lock
push
push
rcl
push
(bad)
retf
sub
pop
sub
push
add
popf
jnp
mov
push
or
inc
iret
push
jb
pop
ret
dec
lock
or
fisub
test
mov
loop
mov
push
cmp
mov
jnp
data16
mov
aad
mov
xor
push
cmp
test
mov
add
and
idiv
or
and
mov
pop
inc
jmp
sbb
ret
push
dec
lahf
hlt
and
ss
xor
pop
xchg
and
jge
pop
mov
push
inc
test
imul
aaa
jmp
pop
test
mov
add
imul
movs
inc
add
and
pushf
adc
or
or
gs
push
and
rcr
push
mov
cs
mov
leave
data16
dec
push
dec
push
sbb
push
and
or
or
mov
push
aaa
push
sub
loopne
out
jns
fs
sub
jns
xchg
xor
sbb
les
mov
jnp
hlt
push
enter
add
push
cmp
popf
adc
mov
outs
sub
mov
xlat
sbb
sub
inc
mov
cmp
add
xor
push
clc
push
sbb
cmp
js
fmul
adc
jno
add
cmp
div
pop
adc
rcpps
(bad)
and
cmp
dec
mov
ss
scas
inc
mov
fisttp
ins
cld
xor
loope
xchg
or
jb
mov
xor
push
inc
enter
dec
imul
pop
sbb
ja
jne
sub
clc
and
pop
dec
or
addr16
adc
retf
pop
mov
pop
adc
adc
jg
push
inc
pop
es
mov
add
test
sti
mov
mov
sub
pop
je
or
or
sti
(bad)
in
fistp
pop
dec
pop
movhps
sbb
dec
or
dec
push
les
mov
nop
cmp
cmp
push
fsub
pop
cmp
push
xchg
xlat
jbe
jmp
int3
cmp
loopne
xchg
push
pusha
ds
xchg
enter
inc
dec
cwde
cmp
stos
inc
(bad)
xchg
cmp
push
xchg
inc
lds
sub
jo
or
lods
sub
pop
mov
repz
push
mov
jb
repnz
jbe
fmul
xor
cmp
scas
out
cmp
mov
adc
enter
or
or
sbb
je
push
jne
jne
ss
mul
and
cmp
cdq
retf
xor
or
add
xchg
jmp
sub
mov
test
out
popa
mov
popa
inc
and
or
xchg
add
jno
inc
push
div
push
lahf
and
stc
and
dec
add
push
jno
and
bound
fld
sbb
add
adc
cmps
data16
or
mov
mov
adc
push
ds
fisttp
clts
cmp
add
cld
outs
push
jo
xchg
inc
ins
jno
(bad)
clc
push
mov
add
test
cmp
xchg
test
in
push
or
jo
or
fnstsw
push
fcomp
push
adc
cmp
add
add
outs
mov
jbe
mov
out
jmp
xor
jecxz
movs
add
fstp
aas
shr
add
ins
add
test
inc
or
or
and
das
movs
fidivr
adc
xor
xlat
pusha
sti
mov
and
mov
fimul
icebp
add
mov
dec
outs
inc
inc
not
push
mov
adc
pop
arpl
das
add
int3
shl
cmps
or
and
inc
and
es
nop
pop
xor
and
mov
test
into
and
inc
outs
ins
popa
adc
or
lds
arpl
jbe
xchg
sub
add
xor
out
inc
mov
or
xlat
das
and
leave
or
or
aam
mov
push
pop
add
shl
test
jae
nop
call
mov
inc
aad
inc
mov
cdq
cdq
cmp
inc
ret
mov
adc
inc
inc
pop
das
fiadd
ins
(bad)
adc
sub
pop
add
jbe
pushf
int3
push
pop
inc
inc
setb
das
inc
mov
shl
data16
and
mov
add
jns
pushf
sub
cmp
add
lahf
test
pusha
push
stos
cmps
inc
retf
jb
push
mov
and
fwait
pop
add
sub
outs
xchg
fistp
adc
mov
sbb
dec
mov
mov
in
lods
scas
mov
or
add
inc
leave
test
or
mov
fbld
sub
sub
jecxz
push
aaa
mov
and
dec
aad
fwait
add
pop
lds
mov
jge
idiv
cmp
mov
ret
push
push
mov
push
mov
mov
fcos
inc
mov
mov
mov
mov
pop
pop
ret
aaa
push
push
mov
mov
mov
in
dec
xor
or
mov
mov
call
pop
pop
dec
data16
inc
cmp
inc
xor
ret
mov
ret
(bad)
hlt
test
sar
(bad)
fadd
cmp
je
add
movzx
cmp
ficom
(bad)
fisttp
or
jmp
xor
aad
in
or
icebp
mov
ret
cmp
lahf
sub
or
dec
inc
daa
shr
ss
mov
test
cmp
xor
inc
popa
xchg
sub
mov
sbb
mov
adc
mov
sub
call
inc
fistp
inc
dec
dec
data16
cs
punpckhdq
dec
push
dec
addr16
push
xor
xor
cmp
clc
add
push
jns
dec
mov
lods
add
or
push
adc
aad
ins
add
lock
xor
dec
fldcw
arpl
ds
or
inc
mov
mov
in
jo
xor
add
sahf
bound
dec
cmp
or
and
mov
outs
cmp
enter
shr
popf
fmul
data16
jmp
bound
nop
fnsave
fisub
mov
inc
mov
aam
and
or
sar
sbb
and
jbe
add
push
aam
aaa
add
mov
or
mov
mov
mov
inc
add
sub
enter
sbb
xlat
inc
in
jecxz
daa
loope
xor
xor
inc
or
fmul
clc
dec
jno
test
dec
das
mov
jnp
xor
add
or
jmp
test
out
mov
mov
inc
setns
and
pushf
pushf
mov
aam
dec
dec
dec
dec
inc
dec
outs
lods
inc
test
nop
mov
push
dec
pop
in
push
adc
dec
add
loopne
cmp
iret
in
dec
mov
aad
inc
add
rol
arpl
test
lds
push
sub
int
pop
dec
add
xor
loope
xor
pop
or
mov
mov
and
retf
arpl
sbb
mov
or
jno
jno
push
mov
leave
fwait
mov
ja
push
pop
or
dec
push
mov
dec
jno
pop
mov
sbb
pusha
sbb
xchg
or
rol
iret
fisttp
jg
pop
or
jnp
cdq
push
pusha
rol
cwde
js
add
cmps
pop
mov
and
sub
scas
adc
cmp
or
or
push
ins
(bad)
in
(bad)
fild
push
push
push
add
mov
mov
xor
mov
cmp
jo
dec
test
std
idiv
xor
and
bound
(bad)
sar
push
loop
dec
sbb
test
je
test
je
mov
jmp
aad
and
mov
inc
dec
jne
mov
pop
pop
pop
clc
xlat
mov
push
(bad)
mov
mov
call
popf
xchg
call
xor
cmp
fincstp
cld
add
inc
cld
sub
(bad)
jne
test
jne
ins
out
sti
add
shr
xor
sbb
outs
jmp
push
(bad)
fistp
cld
mov
rcr
ret
sahf
fild
shl
lock
dec
adc
cmp
jmp
fdiv
ror
pop
mov
mov
sbb
or
add
jae
(bad)
mov
mov
cmp
(bad)
push
mov
sti
call
xor
cld
and
jbe
add
inc
jl
inc
sbb
jno
std
jb
test
jle
inc
dec
pusha
adc
cli
jl
add
outs
sbb
mov
(bad)
fstp
fcom
mov
mov
jmp
sbb
pop
lods
adc
aas
or
shr
sbb
iret
push
test
loope
jg
cwde
push
mov
mov
div
push
cld
dec
fwait
neg
int
inc
test
fistp
clc
mov
into
inc
or
mov
push
add
ret
jmp
lock
add
push
mov
mov
(bad)
pop
jno
sbb
cmp
dec
xor
push
inc
loope
mov
dec
rol
ret
call
dec
jne
pop
stos
mov
(bad)
scas
popa
nop
sub
hlt
xchg
xor
das
sbb
inc
repnz
(bad)
cld
ret
pop
inc
push
sub
lock
outs
pop
lock
fimul
clc
adc
push
add
or
das
push
bound
jo
lock
jne
sub
mov
btr
dec
into
mov
push
rcr
sbb
push
cmp
adc
mov
test
nop
setge
mov
popa
loopne
ror
test
jmp
call
add
push
lea
push
push
push
sub
push
(bad)
shl
cmp
jne
cmp
jecxz
pop
shl
add
jne
ds
jg
aad
add
xlat
push
cld
add
push
xchg
push
aas
pop
in
mul
jne
xor
xchg
je
pop
fucomp
pop
pop
hlt
(bad)
mov
call
dec
(bad)
stos
xor
ret
scas
or
dec
sbb
xchg
pop
push
mov
or
and
rcr
jle
fild
xor
pop
and
add
mov
clc
jl
cmp
scas
xor
mov
add
and
sbb
add
inc
xlat
mov
adc
jecxz
sub
test
xchg
out
fisubr
xchg
(bad)
mov
cmp
sub
push
shr
cmp
shufps
sbb
adc
aad
adc
xor
and
push
pop
push
pop
sbb
bound
pop
psubw
scas
add
in
and
ins
lds
repnz
popw
call
and
js
jno
aam
sbb
mov
jp
mov
mov
cmp
push
lods
push
inc
xchg
aas
lock
popf
popf
adc
rol
ss
les
xchg
leave
in
adc
sbb
aad
push
fistp
lock
mov
retf
dec
cmp
aad
push
je
aaa
ret
outs
xor
fucomip
add
push
call
jae
push
retf
popa
or
clc
mov
lock
add
jo
mov
mov
sub
sbb
cmp
fisubr
dec
inc
mov
mov
cmp
in
xchg
cmp
sub
inc
pop
pop
test
loope
fidiv
loopne
mov
dec
mov
hlt
mov
push
mov
or
(bad)
jne
push
dec
xor
inc
ror
(bad)
pusha
xlat
mov
movs
mov
call
(bad)
sti
xor
shl
pop
adc
push
pop
cmps
push
sbb
add
enter
inc
test
pop
das
test
fcomip
dec
test
sbb
in
jmp
push
stc
pop
add
pop
shr
lock
dec
test
rol
sbb
lock
les
retf
aas
out
adc
hlt
mov
push
jo
stos
ds
dec
in
cmp
mov
mov
retf
je
push
(bad)
push
sbb
pop
xor
jne
hlt
lock
pop
(bad)
push
ret
mov
jne
sbb
sbb
call
rol
jge
je
xchg
sub
sbb
mov
inc
hlt
pusha
push
or
fisub
or
cs
push
mov
out
dec
(bad)
sti
(bad)
fistp
and
inc
mov
jmp
push
clc
adc
rcl
jg
jns
pop
mov
sub
jg
xchg
loope
mov
in
and
jns
pop
data16
js
clc
dec
push
nop
es
or
mov
xlat
ins
adc
mov
sbb
cmp
hlt
xchg
adc
hlt
call
js
dec
out
je
cmp
jns
shl
sub
adc
jns
movs
sbb
clc
test
push
lahf
(bad)
lock
sub
cld
loope
push
in
add
rcl
adc
add
inc
enter
fcomp
lea
cmp
(bad)
loopne
loopne
shr
add
pop
pop
das
out
jbe
nop
popa
test
and
ins
or
xchg
mov
ins
movs
push
pop
into
add
fcom
hlt
test
jbe
pop
pop
aaa
(bad)
cmp
(bad)
stos
and
pop
xor
ins
xlat
add
pop
(bad)
adc
pop
inc
daa
pop
pop
das
push
push
jmp
or
inc
or
je
add
aas
jns
aaa
push
and
sub
(bad)
daa
hlt
add
das
pop
and
(bad)
or
lods
test
inc
cmps
dec
and
mov
std
or
inc
sti
add
or
pop
gs
stc
add
sub
add
nop
ss
pop
out
cmp
fwait
imul
repz
fmul
or
or
push
add
add
icebp
ins
daa
mov
xlat
retf
push
je
xchg
dec
les
or
inc
movs
scas
popa
push
push
jnp
cmc
cld
cmp
jo
jnp
xchg
pop
out
mov
inc
xchg
out
js
jne
inc
cwde
add
ins
(bad)
mov
popa
popf
pop
mov
popa
das
neg
and
adc
sbb
rcl
or
pop
cld
mov
lock
imul
jge
jl
inc
add
add
mov
add
into
mov
loopne
and
mov
div
adc
mov
jmp
push
jp
xchg
sub
les
clc
inc
add
mov
clc
add
mov
add
push
call
and
test
dec
jne
add
pusha
(bad)
mov
dec
and
retf
outs
pop
pusha
pop
ror
dec
idiv
sbb
jne
jnp
push
mov
mul
retf
fld
fdivrp
dec
jne
sub
xchg
fld
rcr
cmp
mov
mov
ret
test
cmps
jne
add
push
ins
mov
je
rcr
clc
push
out
scas
(bad)
cmp
pop
and
mov
loop
jbe
call
mov
pop
call
sub
ret
call
lock
push
jl
pop
ret
ja
cmp
shl
bound
sbb
push
xchg
mov
jmp
pop
push
je
int3
pop
xchg
dec
cmp
push
in
dec
push
xor
inc
loop
adc
xchg
(bad)
aam
popa
sbb
fwait
pushf
mov
bound
les
aaa
xchg
mov
cwde
scas
mov
sbb
fdivr
mov
nop
out
or
pusha
xchg
jp
xor
arpl
push
push
jp
adc
call
out
pop
cmp
loope
jo
cmp
movs
push
or
les
lds
adc
(bad)
nop
arpl
adc
jne
addr16
enter
push
sbb
cmp
shl
cmp
add
sbb
cmp
movs
push
daa
test
mov
mov
xor
dec
cld
pop
movs
loopne
fmul
jp
(bad)
bound
push
addr16
dec
clc
pop
mov
cli
push
test
out
mov
xor
mov
adc
add
cwde
or
add
shr
test
push
fs
dec
shr
push
adc
and
push
mov
pushf
arpl
dec
in
cmp
aas
mov
xlat
adc
sbb
loopne
dec
je
pop
add
xchg
outs
mov
mov
push
and
aas
cmc
xor
or
adc
push
das
push
arpl
test
lods
jmp
inc
sbb
inc
minps
hlt
sbb
add
push
adc
mov
mov
mov
test
cmp
cmp
pop
and
adc
shr
xor
test
or
sbb
dec
sahf
push
cwde
push
push
mulps
or
or
nop
xor
push
push
test
shl
adc
jl
add
fcomp
pop
pop
jne
cmp
push
add
mov
sub
cmp
xor
loope
in
cmp
clc
push
(bad)
jns
(bad)
jmp
ss
mov
mov
sub
sub
jbe
mov
dec
mov
std
repnz
cld
sbb
pusha
and
or
movs
adc
jmp
or
cld
femms
mov
jae
adc
xchg
inc
add
cmp
inc
in
jo
jl
in
cmp
mov
pop
sub
inc
mov
add
lock
(bad)
add
pusha
icebp
mov
call
fild
mov
mov
jl
mov
into
mov
inc
mov
fs
mov
enter
sbb
ss
lea
or
jle
inc
mov
cmp
mov
scas
cs
je
cld
(bad)
dec
sbb
dec
cld
mov
dec
mov
fs
nop
xchg
mov
xchg
jbe
inc
pop
and
pop
push
in
lods
ins
aaa
mov
mov
call
push
fwait
sub
or
pop
cs
pusha
mov
sub
adc
mov
cmps
jle
ss
push
mov
(bad)
xor
mov
ret
add
jae
mov
(bad)
out
mov
mov
cli
inc
jle
mov
test
jns
psubsb
add
sar
jmp
and
dec
mov
aas
mov
shl
addr16
dec
jecxz
push
inc
xor
cmp
je
jo
inc
dec
jne
cld
jmp
add
leave
jne
jne
push
in
test
sbb
ja
cld
push
dec
cdq
cld
xchg
jns
add
lock
or
pop
aas
xor
push
sar
adc
(bad)
aam
push
push
and
jne
pop
das
jnp
pop
push
inc
sar
stos
inc
xchg
cld
ret
jmp
pop
js
jl
mov
dec
sub
cmp
je
lods
and
and
lods
leave
call
(bad)
adc
and
cmp
xor
and
mov
jg
mov
jb
out
mov
or
aam
push
add
push
aas
call
call
int3
mov
inc
or
nop
push
ins
push
sahf
fcom
hlt
add
les
or
loope
pop
or
pusha
push
sbb
cmps
fwait
or
add
pop
or
inc
add
cmp
(bad)
mov
ds
cs
cmp
add
jle
std
icebp
dec
cmp
jge
sbb
(bad)
sub
inc
sbb
push
jl
add
or
xchg
lea
inc
and
inc
(bad)
aas
cmpxchg
sar
in
je
fadd
inc
rcl
mov
pusha
push
aad
dec
test
ss
pushf
enter
jge
loop
sar
or
jle
pop
call
pop
jle
xchg
push
sub
mov
scas
ror
scas
inc
int3
jmp
xor
sub
sub
jg
dec
dec
push
cmp
and
and
nop
data16
in
call
dec
ror
shl
or
das
sub
jecxz
daa
lock
push
xor
xlat
cmps
imul
nop
jne
xchg
imul
clc
add
retf
icebp
jp
add
repnz
adc
mov
push
fimul
enter
jmp
mov
mov
push
je
cmp
lea
mul
or
add
inc
dec
cmp
and
jge
cmp
jle
loope
lds
lock
(bad)
pop
ror
jno
call
lock
loopne
inc
ins
std
xchg
jg
call
mov
push
(bad)
xchg
(bad)
daa
jmp
xor
aaa
and
and
add
inc
adc
dec
xchg
mov
or
test
pop
lock
out
sub
or
push
sbb
rol
add
ins
add
xchg
mov
push
cmp
ins
or
popf
int3
daa
iret
aad
sbb
lea
push
mov
sub
sbb
add
push
sti
push
mov
movs
add
add
test
ret
int3
or
arpl
loopne
aaa
aad
ins
(bad)
adc
pop
xchg
js
pop
movs
push
xchg
rcl
je
sub
and
add
clc
add
adc
sub
lock
enter
(bad)
jecxz
repnz
stos
ins
xchg
mov
mov
lock
ss
jle
or
dec
call
hlt
ins
pop
xchg
clc
xchg
rol
inc
pop
jl
mov
push
lds
push
mov
pop
lock
mov
push
add
jmp
out
in
test
outs
loopne
push
arpl
inc
adc
lock
add
hlt
(bad)
mov
xor
hlt
jp
sbb
cmp
xor
ins
inc
jmp
jne
push
mov
and
push
cmp
jne
push
dec
add
sub
(bad)
test
jne
repz
or
or
xchg
jecxz
jge
xor
outs
or
push
in
adc
mov
fstp
sub
shl
pop
xchg
stos
loopne
mov
pop
sbb
lock
in
pop
or
pop
pop
shl
test
loopne
lods
out
jo
or
sbb
xchg
add
sbb
test
rol
and
cs
push
inc
shl
jg
mov
mov
mov
(bad)
aad
gs
xor
shl
xor
daa
lods
outs
pusha
bound
sub
inc
mov
pop
js
and
out
push
jno
ror
jmp
adc
loop
inc
jl
cmps
xor
pop
jno
push
sbb
cdq
in
jle
imul
adc
scas
clc
add
fucompp
call
je
(bad)
cmp
(bad)
sbb
dec
add
mov
cmp
and
call
or
mov
wbinvd
pop
and
repz
and
pop
mov
ror
push
inc
push
adc
jle
mov
xchg
test
adc
es
out
pop
push
jmp
add
cmp
loopne
scas
daa
out
add
inc
add
add
ja
fst
test
test
adc
push
out
adc
cmp
call
jo
pop
pop
arpl
push
je
and
call
fnsave
jno
xor
cwde
pop
jg
dec
add
adc
in
adc
inc
adc
pushf
call
or
xchg
or
adc
xor
mov
sub
jmp
cmp
inc
pop
xor
ins
pop
cmps
leave
outs
movs
xchg
push
js
jg
xlat
ss
cmp
repnz
add
mov
push
in
add
call
inc
stc
(bad)
dec
or
inc
jne
mov
and
dec
jne
jmp
pop
jb
cmps
cwde
or
stc
push
fwait
xor
iret
gs
or
jecxz
jbe
sti
or
out
pop
test
cld
or
xor
mov
xchg
cmp
pop
lea
or
shr
(bad)
sub
psraw
popa
adc
xchg
mov
movd
hlt
adc
cmps
ror
cmp
push
hlt
cwde
call
ja
push
repnz
fcom
mov
test
push
lea
push
(bad)
mov
jnp
add
dec
js
push
mov
sbb
jl
test
push
adc
push
js
pop
xchg
enter
jmp
sbb
test
test
dec
and
and
add
std
push
je
nop
fbld
cmps
dec
jns
mov
fadd
jns
(bad)
and
daa
les
les
ja
gs
or
mov
inc
xor
or
sar
mov
mov
and
je
test
imul
fadd
pop
sar
inc
inc
mov
sbb
call
out
je
or
and
push
inc
cmp
sbb
mov
jl
inc
int3
es
xlat
ret
enter
dec
pop
jbe
aad
mul
into
adc
rcl
adc
and
loope
or
(bad)
or
je
xor
ret
btr
cmp
sbb
imul
push
push
inc
adc
pop
jmp
ficom
adc
popf
dec
xchg
js
ds
dec
inc
xchg
neg
jge
hlt
push
adc
je
sbb
mov
mov
cmp
ja
and
bt
jb
mov
loop
and
fistp
add
ret
ret
adc
push
inc
cmp
jp
jbe
jne
inc
cwde
jne
les
xchg
pop
scas
in
pop
mov
push
xchg
add
or
ret
adc
and
or
call
sti
call
or
or
fiadd
call
add
pop
in
js
inc
push
in
mov
je
mov
call
jecxz
dec
and
sbb
loop
les
pop
cmps
inc
pushf
out
bound
jbe
push
call
loopne
pop
(bad)
call
add
sti
and
fild
ins
push
xchg
mov
call
and
xlat
das
ret
mov
dec
pusha
rol
imul
(bad)
clc
jle
and
push
push
push
js
lahf
jmp
mov
gs
mov
jmp
adc
cs
cmp
mov
pop
mov
sbb
ficom
jns
mov
inc
push
rcl
pusha
cmps
mov
push
(bad)
or
adc
push
adc
inc
push
fdiv
inc
push
push
inc
push
or
ret
push
sub
push
pop
add
jp
add
and
push
jnp
sub
rol
shl
xchg
sbb
inc
addr16
aas
adc
js
dec
cmp
sbb
je
addr16
push
pop
and
sub
inc
cs
push
adc
cwde
loope
mov
ins
push
bound
out
mov
clc
add
jle
lea
(bad)
scas
or
inc
push
add
add
adc
test
jnp
cwde
icebp
sar
sar
mov
imul
jp
xor
jg
sbb
in
pop
cmp
mov
out
jmp
dec
ror
jne
outs
pop
fsubr
push
test
mov
repz
mov
mov
dec
mov
pop
jns
popa
and
pop
mov
sub
cld
pusha
and
data16
xchg
out
stc
xor
jno
cld
lock
adc
outs
clc
fwait
mov
sar
mov
jmp
scas
(bad)
aad
or
jg
pop
and
imul
jae
and
int
or
xchg
xor
push
loope
adc
in
add
shl
or
or
aam
dec
enter
push
jp
pop
and
into
cmp
pop
xchg
mov
sbb
(bad)
out
push
xchg
sahf
mov
sub
into
pop
jmp
or
mov
inc
inc
pop
ja
mov
add
enter
pop
or
jl
xor
add
sbb
aam
push
ins
loope
cld
ficom
out
cs
fs
jne
stos
je
xor
int
sub
pop
popa
inc
mov
jnp
popa
sub
loopne
out
loop
les
fbld
mov
inc
xchg
push
jne
fcomp
or
jecxz
pushf
adc
shl
adc
imul
inc
xor
les
sbb
ja
add
and
dec
mov
dec
addr16
mov
cmp
popf
lock
or
sbb
or
push
mov
icebp
movs
aaa
idiv
ret
(bad)
ror
and
out
mov
sub
psllw
and
or
cmp
push
test
inc
dec
or
(bad)
pop
mov
xor
out
xchg
add
rcl
add
inc
daa
and
or
ins
jle
and
jne
int3
ret
cmc
sbb
adc
test
pop
adc
push
pop
jecxz
ja
inc
mov
adc
bound
cmp
stos
clc
cmp
mov
adc
mov
add
mov
mov
and
jne
ror
sbb
inc
dec
or
test
sub
adc
movsx
movs
cmp
movs
jge
xchg
dec
sti
jge
sar
xor
inc
cmp
jae
fsub
mov
inc
mov
add
sar
pop
mov
add
sub
(bad)
pop
sar
jne
dec
inc
adc
sbb
or
adc
mov
loope
mov
rol
stc
push
jle
adc
aad
sar
(bad)
adc
mov
adc
jne
mov
mov
dec
pop
adc
jl
ret
xchg
sub
hlt
jno
adc
outs
dec
scas
xchg
push
scas
pusha
xlat
iret
pop
add
mov
mov
push
xor
mov
dec
rol
or
fisttp
imul
cmps
cmp
inc
rcl
(bad)
fcom
pop
push
jmp
daa
xor
call
sub
jb
dec
je
jmp
and
cwde
and
dec
pop
adc
cmps
test
out
movs
jo
sbb
inc
retf
sbb
push
les
scas
cmp
ror
shr
pop
div
test
pop
loop
fcomp
lea
imul
retf
mov
test
inc
scas
or
add
test
sbb
jg
jcxz
ja
mov
iret
mov
test
inc
stc
neg
lock
iret
ficomp
mov
enter
hlt
fwait
xchg
jmp
sub
repz
add
je
sub
mul
or
hlt
aam
xchg
cmp
(bad)
ror
add
test
push
jecxz
or
mov
sub
mov
push
xlat
sub
jnp
stos
add
lea
inc
inc
mov
mov
jg
add
dec
mov
add
xchg
movzx
repnz
adc
sbb
pop
sub
xor
xchg
mov
pop
sbb
sub
xlat
fisttp
(bad)
loopne
inc
cmps
or
mov
mov
add
retf
inc
and
(bad)
sbb
pop
ror
daa
mov
stc
je
popf
fnstcw
(bad)
pop
jo
add
adc
and
pop
pop
mov
cmc
xor
push
push
add
xor
push
sub
xchg
arpl
jo
push
sbb
mov
ja
pop
adc
pop
(bad)
push
ss
ret
push
imul
push
dec
dec
cmp
sbb
cmp
push
dec
js
push
icebp
mov
(bad)
pop
mov
fdiv
mov
int
pop
les
pop
jp
in
lock
and
out
push
in
mov
push
mov
daa
popa
ror
inc
pop
cwde
popa
(bad)
div
rcl
call
add
clc
repnz
and
dec
mov
call
xchg
push
call
repnz
mov
mov
mov
js
ja
xchg
fisub
push
pop
cld
sbb
or
add
sub
cld
add
or
jno
xor
and
out
rcl
pushf
sbb
and
sbb
xchg
sbb
push
inc
mov
hlt
lea
call
fsub
loopne
sub
ret
retf
push
into
(bad)
mov
inc
dec
mov
sbb
sub
lock
cmp
jmp
pop
neg
inc
or
cmps
jnp
mov
adc
adc
sub
js
pop
or
jae
mov
jl
or
mov
(bad)
mov
jno
jg
neg
in
sti
mov
cmp
ror
add
jl
cmps
mov
add
(bad)
int3
mov
xor
pop
clc
imul
rol
jg
sti
add
jmp
jmp
aaa
cdq
(bad)
clc
xchg
imul
enter
lahf
or
cmp
push
jae
or
jle
test
(bad)
fistp
movs
mov
jne
lock
sti
test
and
(bad)
mov
lods
fsubr
movs
cmp
lea
xlat
test
sar
adc
sub
mov
mov
mov
cmps
ja
mov
inc
inc
mov
stc
push
mov
ret
add
or
fcom
fsubr
inc
ja
adc
mov
pop
aam
in
pop
mov
add
pushf
xchg
sub
ret
jo
clc
mov
mov
sti
shl
test
push
push
cmp
call
ror
ins
xchg
iret
xor
mov
xchg
bound
cmp
sub
jbe
inc
add
xchg
popa
adc
adc
cmp
and
mov
and
ss
xor
mov
ins
add
clc
pop
js
mov
clc
int
cdq
add
test
push
inc
mov
js
mov
jo
pop
push
lea
sub
push
jns
cmps
in
stos
fbld
push
cld
das
inc
icebp
or
sbb
add
and
mov
mov
outs
dec
xor
sub
pushf
adc
xor
les
inc
in
call
into
(bad)
lea
inc
rcr
add
shl
mov
stos
inc
sbb
jne
fwait
push
pop
push
jmp
jmp
add
nop
dec
call
jb
fisubr
cld
(bad)
push
fiadd
inc
xchg
mov
test
adc
ret
add
add
add
clc
adc
cli
ins
fmul
sbb
jecxz
out
and
idiv
icebp
dec
mov
jg
dec
or
cs
rol
enter
es
cld
adc
sbb
lea
mov
call
jmp
xor
push
lds
adc
sbb
cld
adc
daa
rol
xor
sub
adc
adc
cmp
xor
or
call
xchg
mov
imul
xchg
and
add
and
inc
sub
add
addr16
mov
ret
mov
sbb
in
out
in
push
pop
adc
adc
mov
dec
mov
add
clc
test
mov
xchg
ficom
pop
pop
ffreep
test
jecxz
jo
xor
(bad)
push
ffreep
inc
jecxz
cmp
adc
es
push
pop
call
nop
pushf
mov
cmps
dec
ret
sub
dec
lea
pop
add
rcl
scas
outs
js
jbe
outs
push
retf
(bad)
inc
cmp
dec
cld
xor
fcomp
xchg
xchg
test
sub
fwait
xchg
inc
std
sbb
pop
icebp
lods
in
adc
fs
into
mov
stos
mov
mov
hlt
mov
ror
pop
pop
push
(bad)
push
dec
mov
xchg
shr
add
dec
cli
adc
sub
jb
or
xchg
or
call
push
test
push
adc
or
xchg
xor
sbb
xchg
arpl
sbb
cmp
push
push
pusha
dec
sbb
lock
retf
ficom
add
or
xchg
adc
(bad)
hlt
pop
cld
add
add
je
or
popf
cmp
mov
pushf
mov
leave
(bad)
idiv
ins
xor
data16
xor
outs
cmps
xchg
cdq
sub
les
(bad)
jmp
fstp
int
rcr
call
movs
xchg
loope
ins
call
fidiv
jg
mov
push
lea
mov
sub
inc
mov
fiadd
test
jecxz
adc
(bad)
cmp
add
lock
mov
ds
xor
xchg
pusha
cmp
xchg
mov
and
mov
mov
add
pop
jg
fisttp
mov
add
sub
mov
push
jmp
cmp
je
or
and
add
adc
pop
adc
or
fstp
dec
(bad)
cld
imul
inc
mov
fstp
frstor
test
add
inc
push
out
jp
mov
cwde
out
fadd
jnp
inc
and
dec
loope
lods
adc
or
and
and
and
retf
jno
(bad)
aad
or
push
cmp
cdq
pop
xlat
xchg
cmps
adc
mov
js
call
mov
hlt
or
push
sub
xchg
mov
add
push
mov
and
jne
jmp
mov
cli
inc
sub
je
or
jne
mov
sar
(bad)
rol
test
pop
xor
cmps
das
nop
out
jecxz
outs
or
pushf
lea
pop
mov
stos
in
ret
and
mov
or
jge
jmp
repnz
sbb
xor
in
pop
lock
sub
dec
sub
jmp
je
cmp
jne
rol
push
sbb
mov
pop
inc
push
fmul
call
fwait
cmp
shr
loope
fcmovnu
inc
test
(bad)
out
push
or
test
pop
addr16
outs
mov
adc
nop
cmp
(bad)
pop
mov
push
(bad)
jge
push
enter
cmp
leave
add
lock
and
leave
bound
push
xlat
jge
jmp
jbe
jmp
push
push
in
pop
(bad)
mov
rol
movs
jo
jmp
js
lea
cld
fst
xor
add
test
mov
push
cld
retf
lea
xchg
adc
shl
cmps
ret
xchg
(bad)
ja
add
xchg
jb
loop
pop
sub
xor
les
dec
mov
jb
jnp
mov
lea
and
clc
jne
sbb
mov
adc
add
mov
and
and
and
in
mov
jne
or
or
popf
fcmovu
xchg
sbb
dec
fnstenv
or
pop
add
mov
pop
push
cmp
adc
push
jge
daa
add
push
loope
popf
stos
push
push
inc
or
jne
and
pop
ror
outs
mov
outs
cmp
or
or
hlt
(bad)
aas
fcom
dec
in
ja
cdq
add
(bad)
and
xchg
sbb
adc
mov
sub
mov
sbb
scas
ror
inc
xchg
or
mov
cmc
call
xor
mov
push
add
pop
test
les
mov
dec
pop
add
(bad)
xchg
sub
add
dec
push
sbb
jbe
sbb
push
push
pusha
in
popa
sti
fimul
lea
inc
out
iret
sub
sbb
daa
add
aas
test
sbb
cmp
cmp
ss
or
aam
mov
sbb
ret
push
(bad)
lock
inc
ja
scas
cmp
ins
sbb
sbb
add
adc
iret
add
aaa
clc
pop
movs
xor
cmps
clc
xchg
or
mov
into
jl
mov
leave
jnp
ss
push
push
out
cli
ror
in
or
ss
adc
and
mov
aaa
outs
call
xchg
mov
or
inc
inc
add
cmovs
sbb
dec
cmp
mov
push
sub
adc
xor
cmp
mov
mov
push
bound
bnd
mov
xor
or
push
ss
ret
or
cmp
sar
popa
nop
icebp
ret
or
mov
xor
cs
jg
cld
leave
push
push
or
cmp
inc
jnp
sub
xor
mov
das
mov
mov
(bad)
(bad)
dec
inc
cmp
jb
dec
je
jmp
loop
fist
jp
inc
retf
pop
jp
inc
add
fs
mov
pop
cwde
sbb
movs
sbb
xlat
mov
shl
outs
not
js
fst
and
sub
mov
mov
mov
ja
push
data16
bound
push
push
ror
inc
aaa
dec
or
call
and
fnstcw
or
test
out
inc
fiadd
or
xchg
xchg
adc
mov
ss
cmp
inc
or
enter
lock
dec
xchg
dec
and
adc
mov
je
add
outs
fsub
push
fild
nop
and
pop
cmps
rol
pop
jl
popa
sti
jne
call
(bad)
cmc
jnp
dec
xor
xchg
out
sub
into
mov
or
or
adc
dec
dec
sti
adc
shl
xchg
adc
and
ins
jnp
shld
xor
xor
and
dec
in
cmp
(bad)
pop
scas
js
xor
enter
mov
imul
sub
mov
dec
add
test
inc
scas
in
mov
mov
xchg
cmp
xchg
lods
dec
data16
cmp
dec
mov
add
push
das
adc
or
mov
push
xor
adc
add
sbb
imul
jne
xchg
add
cmp
push
add
adc
mov
mov
test
xor
adc
lea
jb
leave
add
es
das
mov
pop
fisubr
mov
lock
shl
ret
add
sub
mov
test
(bad)
adc
xor
mov
test
push
mov
scas
adc
adc
clc
aam
push
fs
lds
push
dec
loop
out
xchg
adc
test
cdq
test
or
pop
mov
add
or
es
xor
pop
jg
aam
and
xor
repnz
mov
xor
rol
pop
dec
mov
or
in
jbe
jo
dec
repz
mov
push
fimul
inc
xlat
scas
aad
pop
xor
test
mov
jmp
push
inc
mov
inc
push
ja
dec
in
inc
sbb
(bad)
mov
mov
pop
cmps
and
fdiv
mov
or
or
mov
xchg
mov
cdq
mov
mov
jl
jge
shl
movs
inc
iret
dec
xor
iret
or
sub
sbb
inc
inc
mov
fiadd
scas
xchg
mov
ret
shl
js
retf
dec
je
das
xchg
outs
pop
nop
fwait
jbe
setg
enter
jbe
adc
sub
mov
mov
xlat
or
sub
add
jmp
xor
dec
jmp
push
imul
js
adc
xchg
jmp
cld
ret
inc
add
das
sbb
adc
push
cmp
inc
test
mov
adc
xchg
mov
icebp
sub
cmc
adc
xor
dec
inc
pushf
loopne
xchg
mov
out
mov
or
or
add
push
sbb
inc
xor
jb
inc
mov
jmp
and
mov
pop
(bad)
dec
mov
push
int3
xor
add
jge
xor
add
mov
cmp
and
pop
mov
xor
inc
loope
movs
push
and
cmps
shl
stos
jge
pop
push
not
adc
sub
jmp
jne
stos
ret
imul
push
data16
out
pop
cli
xchg
mov
lea
movs
rcr
in
push
pminub
add
mov
or
cmp
mov
sub
call
pop
cmp
cdq
dec
cmp
jae
cs
fcomp
lods
xor
push
push
sbb
inc
and
inc
cmps
stos
add
clc
sbb
shr
cdq
cmps
in
inc
pop
jp
and
cmp
test
stc
add
add
jle
push
sbb
retf
retf
das
add
mov
test
lock
movs
test
mov
pop
es
ins
jg
dec
mov
adc
add
enter
sti
mov
lods
addr16
dec
cmp
sub
pop
pop
mov
mov
sar
outs
push
dec
or
lock
add
ret
call
sbb
push
dec
in
pop
lock
fdivr
call
jge
test
or
cmp
or
jge
mov
(bad)
or
or
retf
sbb
push
add
adc
add
sbb
mov
push
mov
mov
pop
call
xchg
call
xchg
cmp
aaa
inc
inc
push
in
inc
adc
push
mov
mov
dec
pop
add
int
mov
lods
sub
cli
mov
cmp
mov
xchg
test
aam
cmp
stos
push
and
pop
push
bound
pop
cmp
push
adc
out
enter
scas
inc
sbb
fstp
jl
inc
or
inc
add
inc
mul
sbb
data16
jge
and
pop
pop
xchg
movzx
sub
or
loopne
loope
rol
dec
pop
in
pop
inc
sgdtd
mov
jo
mov
and
cmp
imul
push
mov
add
push
mov
nop
push
add
fistp
cdq
xchg
jp
or
mov
jnp
cmp
add
fmulp
jl
cwde
lea
loopne
sub
aaa
add
push
lods
sub
or
fsubr
arpl
rcl
sbb
leave
loopne
nop
xchg
pop
jb
cmp
push
test
xchg
sbb
and
push
ja
adc
or
es
xor
adc
xor
cld
add
push
cmp
push
mov
popf
add
cmps
push
aaa
push
jl
ror
sbb
or
pop
pop
or
test
jl
or
neg
call
icebp
push
add
les
mov
add
dec
loop
inc
pop
add
push
dec
je
cli
push
fidivr
repnz
or
lea
ficom
or
gs
ret
or
dec
pop
add
fcmovbe
loop
push
jo
scas
lahf
icebp
mov
xchg
mov
ret
dec
inc
iret
mov
inc
add
jg
test
fcom
sbb
and
hlt
push
icebp
mov
push
aaa
mov
add
mov
adc
arpl
mov
push
pop
inc
outs
add
fsubr
jbe
dec
or
int3
jno
add
cmc
adc
repnz
mov
jl
idiv
and
pop
jnp
xor
lock
push
cmp
(bad)
pop
lds
adc
push
add
or
ret
cmp
cmp
adc
daa
push
ins
push
adc
ss
retf
lods
mov
outs
jmp
test
sub
add
and
pop
adc
sbb
push
loopne
sub
dec
(bad)
aaa
loopne
and
mov
jmp
test
xor
(bad)
nop
jle
xor
int
jle
or
jle
retf
or
test
rol
mov
mov
pop
add
lds
xor
pop
and
les
js
cmp
jge
inc
rol
js
push
and
pop
js
adc
add
imul
not
je
cs
lea
xor
sub
inc
mov
adc
jo
push
or
add
jl
adc
(bad)
out
jno
ffreep
mov
sbb
inc
sbb
mov
out
pop
inc
or
nop
mov
push
lds
pop
xchg
mov
push
xchg
cmp
cmps
shr
aad
sbb
pop
push
es
inc
out
mov
push
and
jno
inc
lds
mov
cmp
push
jno
pop
and
mov
xor
jle
jno
or
mov
xchg
adc
loopne
push
in
mov
movs
cmp
(bad)
lock
add
lahf
or
int3
push
inc
imul
push
mov
add
jno
pop
sub
jecxz
xchg
dec
sbb
xor
out
mov
or
cmp
loop
out
add
cld
push
mov
adc
sbb
les
retf
(bad)
xor
push
adc
pop
fadd
call
pusha
xor
aaa
movs
fistp
mov
mov
dec
(bad)
jl
das
arpl
and
lds
adc
push
loopne
inc
(bad)
pop
pusha
shl
movs
je
push
mov
mov
mov
cmp
ret
adc
mov
inc
push
lahf
das
mov
dec
cmps
add
mov
pop
push
mov
mov
mov
unpcklps
add
dec
int3
test
inc
sbb
dec
pop
stc
ins
dec
test
(bad)
aam
stos
sub
dec
in
xor
mov
inc
call
add
ds
mov
pushf
enter
mov
push
jnp
dec
xor
adc
imul
bound
mov
sbb
sar
push
cmp
or
pop
add
push
sbb
push
or
(bad)
adc
jg
xor
inc
jb
dec
popa
imul
outs
bound
fmul
sbb
stc
add
and
sbb
outs
adc
fst
hlt
outs
ins
jbe
pop
sub
fild
or
mov
(bad)
out
add
pop
inc
pop
comiss
add
mov
sar
pop
push
divps
pop
jno
mov
mov
push
inc
ins
mov
mov
inc
inc
jecxz
adc
mov
push
pop
lods
add
or
lahf
push
out
inc
mov
add
or
and
add
cmp
sbb
test
dec
loop
shr
loop
adc
pop
clc
mov
adc
je
retf
cs
mov
xchg
xchg
push
add
xchg
inc
sub
sti
push
rol
lea
retf
inc
adc
push
push
mov
jne
mov
shl
xchg
mov
(bad)
lds
xor
in
leave
ret
mul
mov
jno
mov
je
je
jp
push
add
xchg
mov
arpl
pop
js
sub
aaa
and
pusha
imul
xor
ret
or
call
xor
dec
push
mov
cmovne
and
stos
sub
addr16
jne
xlat
xor
rcr
and
lods
es
push
xor
dec
add
inc
dec
xchg
jo
sub
xchg
call
add
push
inc
pusha
lock
mov
fild
hlt
jne
mov
mov
and
push
xchg
mov
add
and
cmp
or
cmps
push
sub
xchg
ret
ds
prefetcht0
mov
mov
push
test
add
inc
pop
(bad)
cmp
dec
add
xor
jle
das
dec
pop
sbb
into
rcr
push
jo
jl
in
scas
sbb
or
pop
ret
outs
test
dec
xchg
dec
and
mov
clc
pushf
add
sub
push
mov
cmp
clc
xor
pop
or
inc
push
push
stos
jle
vmread
mov
and
add
sbb
sub
xor
jl
jb
imul
mov
inc
data16
sub
pop
loop
(bad)
inc
sbb
jne
ss
xchg
fisub
add
fimul
push
adc
or
shl
in
inc
jmp
sbb
cmp
inc
mov
or
ja
jl
mov
movs
sahf
mov
shr
jg
cs
inc
cmp
pop
mov
das
and
fldenv
test
or
ret
(bad)
cmc
cmp
mov
jmp
mov
xor
pop
ja
(bad)
xor
push
aaa
in
loope
inc
test
jo
cmp
dec
lds
mov
add
scas
lock
test
jl
jl
lock
pop
sub
je
add
push
dec
pop
inc
mov
hlt
and
mov
call
push
adc
dec
or
pop
cmovno
test
mov
mov
and
outs
cmps
or
cmps
mov
jo
rol
sub
push
mov
adc
adc
add
rcl
pop
dec
sbb
les
ret
mov
mov
inc
loopne
loopne
adc
mov
mov
or
and
push
movs
(bad)
icebp
pop
jo
inc
dec
and
test
or
mov
inc
lock
push
adc
and
test
lds
inc
getsec
aam
cmp
xchg
hlt
std
push
push
dec
adc
aad
mov
inc
pop
sbb
rol
es
sbb
call
dec
adc
sti
cmp
adc
pop
push
pushf
fcmovnb
in
sbb
xchg
or
inc
bound
idiv
or
jnp
cdq
sub
pop
ror
or
pushf
jbe
dec
cmps
mov
idiv
add
test
je
push
dec
and
ds
mov
mov
js
cmp
adc
cmp
pavgb
sbb
in
xor
dec
in
loopne
mov
push
(bad)
loopne
push
add
lds
hlt
add
(bad)
pop
and
pop
pop
ret
mov
repnz
ror
dec
cs
push
bound
(bad)
ret
bound
loopne
mov
adc
sbb
es
not
adc
push
pop
or
push
push
lods
aaa
pop
ret
fimul
sub
cmp
rcr
or
adc
push
dec
call
fwait
jmp
retf
gs
cmp
adc
pop
jo
pusha
jp
nop
out
out
push
pop
daa
mov
sbb
mov
cli
sbb
lods
push
xchg
adc
fnsave
pop
inc
cmp
cmp
jmp
jmp
(bad)
sbb
pushf
clc
imul
les
mov
adc
cmp
pop
movzx
push
or
or
push
std
and
jno
inc
movs
mov
div
mov
mov
mov
inc
xor
sbb
sbb
(bad)
aaa
xchg
sub
push
pop
neg
daa
daa
ret
imul
lods
scas
loopne
inc
xlat
ret
daa
sbb
ss
jp
add
jge
jge
sub
inc
jl
js
icebp
jge
stos
or
cmp
xchg
rcr
xchg
xchg
xor
pop
in
js
sar
or
adc
loope
push
test
rol
inc
add
adc
mov
xor
in
lds
ja
in
inc
neg
sti
cwde
js
adc
adc
adc
add
push
xchg
imul
push
cs
imul
and
add
cmps
push
clc
out
push
mov
call
jp
push
dec
xor
clts
xor
out
into
rcr
mov
push
xchg
mov
xor
mov
cmp
loopne
mov
push
stos
sbb
adc
add
addr16
or
sbb
and
pop
pop
lock
daa
fcom
mov
sub
push
test
sub
xchg
(bad)
and
fidivr
or
mov
sub
push
clc
div
retf
mov
jmp
mov
dec
adc
mov
inc
std
mov
jb
mov
push
sub
fs
jg
mov
cmp
retf
add
rep
mov
and
rep
mov
or
jne
pop
pop
dec
push
loopne
aaa
pusha
inc
adc
jo
aad
mov
test
pop
mov
cmp
clc
sub
jae
cmp
(bad)
arpl
rol
and
sub
add
(bad)
mov
(bad)
repnz
iret
mov
sbb
sub
cmp
shr
ret
mov
mov
inc
stos
cmps
loope
cmc
cmp
ror
mov
rcr
jecxz
dec
add
jmp
lods
cld
add
sub
clc
imul
mov
and
ins
jmp
mov
or
test
je
cmp
shl
mov
aas
leave
lock
pusha
mov
or
aaa
push
call
cmp
sbb
ret
and
sub
add
rcl
or
push
fcom
loopne
add
scas
in
lods
and
jo
xor
push
ins
aam
shr
inc
(bad)
push
adc
add
shl
sub
inc
sub
inc
mov
clc
js
shl
push
or
imul
stos
pop
mov
jecxz
test
jle
push
std
inc
icebp
repz
cmp
je
test
cmp
jle
mov
jbe
or
push
jmp
and
dec
(bad)
out
out
shl
cmp
ror
pop
mov
xchg
sbb
cmp
xor
popf
or
call
push
rcr
add
in
fcomi
aaa
sbb
cs
in
cs
mov
add
inc
mov
xchg
xchg
(bad)
test
rol
js
into
adc
jecxz
jbe
pop
pop
neg
and
aaa
pop
in
or
cli
sbb
stc
or
sub
jb
lds
sti
loope
lea
imul
sbb
shl
je
es
popa
xor
hlt
mov
add
mov
dec
sbb
adc
pusha
add
or
pop
dec
sub
sbb
fs
fcomp
lock
inc
mov
jne
inc
das
(bad)
pop
pusha
or
push
and
xchg
mov
jp
pop
jnp
sbb
pop
pushf
int3
adc
mov
jp
clc
jecxz
ins
cmp
xchg
xchg
dec
fs
int3
ret
dec
cmp
push
push
jl
cmp
in
sub
sub
cmp
pop
mov
clc
cmps
enter
adc
sahf
lea
repnz
fadd
pop
sub
jp
mov
adc
sbb
sub
sub
push
push
in
add
mov
call
mov
arpl
lea
mov
pusha
ins
push
ja
cwde
lea
adc
inc
sub
fcom
sbb
dec
cmps
nop
inc
xchg
lea
push
idiv
pop
mov
jl
or
rcr
fstp
or
mov
test
jae
pop
cmp
pop
mov
push
push
mov
dec
add
loopne
mov
pop
lahf
lds
xchg
ftst
pop
pop
jno
xchg
mov
add
outs
inc
test
push
sbb
add
xchg
adc
pusha
push
std
push
jo
loop
adc
out
cmp
fadd
inc
xor
add
in
fnstenv
lahf
js
add
scas
retf
push
test
mov
out
pusha
cmp
pop
pop
aad
int
rol
push
fsub
aas
out
add
xchg
jmp
data16
paddb
sbb
add
movs
xor
dec
test
mov
mov
adc
or
mov
call
sar
add
les
xchg
push
inc
inc
ja
out
xor
ins
jmp
cmp
sbb
pop
bound
cdq
icebp
xor
inc
lods
xor
je
sti
fwait
aaa
sub
rcr
lods
sub
cld
sbb
adc
sub
sbb
pusha
fld
out
sar
aas
and
fst
sub
hlt
pusha
xor
shr
sti
fild
aam
les
aam
or
dec
jl
add
hlt
adc
jg
rcr
cmp
fld
push
popa
pop
les
outs
adc
and
iret
mov
xchg
fild
sbb
fld
jae
jl
test
cmp
into
or
fld
adc
push
push
sbb
fmul
mov
push
add
inc
lahf
and
adc
adc
push
shl
sti
dec
add
out
cmp
ja
add
movzx
test
aas
add
data16
jo
add
jnp
sub
push
add
push
push
sbb
cli
cmp
das
push
dec
repz
cmps
je
(bad)
jae
mov
ss
adc
arpl
les
add
mov
enter
sar
das
mov
jae
jae
mov
sbb
sub
inc
stc
push
arpl
and
add
mov
jae
hlt
dec
adc
das
pop
push
add
sub
pop
mov
push
ins
sub
add
mov
add
and
or
std
push
ss
lea
jg
mov
rcl
stos
xor
mov
adc
cmp
pop
adc
int3
pop
pop
(bad)
cmp
(bad)
in
int3
mov
cdq
popa
mov
mov
mov
out
push
push
and
add
outs
lea
mov
jne
ret
and
cs
shl
test
mov
cmps
add
sbb
adc
or
test
cld
xor
adc
ret
jne
popa
es
cmc
lods
mov
fadd
inc
loopne
mov
fcomp
adc
fiadd
pop
mov
and
push
push
mov
call
mov
xor
out
aas
data16
and
lods
daa
jp
daa
adc
jl
cs
(bad)
cmc
xlat
popf
mov
cmps
xlat
fxch
shl
fst
cwde
xor
xor
mov
mov
test
and
jl
aaa
jl
(bad)
cs
scas
xchg
ret
sub
jg
fsubrp
ror
mov
rol
jge
in
stos
mov
pop
add
jge
fcmovnu
cmp
fild
test
pop
lea
in
lahf
jge
shr
mov
imul
or
inc
in
inc
pop
psadbw
fld
mov
retf
and
loopne
mov
outs
add
movs
pop
icebp
inc
test
mov
add
inc
adc
leave
movs
jmp
lds
sbb
jle
cmp
add
mov
pop
leave
jmp
dec
mov
fs
cmp
xor
repz
jmp
cld
xlat
mov
inc
and
xor
test
push
adc
je
jmp
shr
xchg
and
pop
jae
mov
pop
aas
lock
sbb
popf
mov
push
push
push
fisttp
test
dec
cmp
xchg
hlt
adc
cmps
cmps
das
cmp
ins
test
pop
pop
fist
ret
lea
xchg
ret
push
mov
push
or
int3
rol
fdiv
or
call
cld
popf
or
ins
sbb
aam
aad
retf
inc
push
mov
test
push
or
add
xor
xor
sub
mov
test
repz
sbb
mov
mov
fmul
xchg
push
ret
cmp
add
rcl
inc
daa
cmp
cmc
sbb
pop
dec
or
xor
clc
aas
fcomi
or
sbb
mov
cmp
ja
adc
fidivr
fadd
test
enter
jns
(bad)
cmp
les
fucomip
jnp
(bad)
loopne
ds
daa
jge
stos
fadd
fcmovnbe
gs
retf
(bad)
push
dec
push
jo
outs
lock
mov
and
enter
int
cmps
enter
and
xor
sbb
xchg
pop
mov
(bad)
fist
xor
mov
scas
lea
ret
lds
test
mov
dec
cmp
inc
aam
stc
push
push
fcom
fwait
adc
fadd
push
adc
rcl
aam
sbb
pop
bound
push
aam
or
sar
add
je
sub
outs
lds
call
sub
and
push
lock
push
es
cmp
in
dec
pop
fistp
dec
in
pusha
cld
fsub
movs
pop
test
pop
mov
and
mov
ins
adc
cmp
aaa
es
ins
(bad)
imul
iret
mov
push
lock
adc
sub
pusha
or
enter
sbb
enter
dec
mov
inc
mov
pop
loopne
(bad)
das
and
stc
push
mov
jge
add
mov
jne
not
dec
push
mov
fmul
inc
mov
dec
fwait
or
(bad)
shl
stos
xchg
pop
pop
mov
fs
lea
or
je
sub
xor
sbb
or
and
xor
dec
test
push
xchg
mov
push
mov
mov
and
pop
mov
mov
call
mov
adc
mov
mov
mov
lar
push
push
sbb
aam
sbb
out
mov
push
jno
jmp
pop
push
sub
cmp
in
fist
xor
or
adc
outs
or
call
jmp
(bad)
add
movs
dec
pop
lods
adc
push
ins
mov
or
adc
pop
inc
mov
mov
mov
das
xchg
test
inc
xbegin
xor
xchg
dec
leave
xchg
or
xor
or
push
or
pop
add
popf
out
sbb
call
pop
repz
sub
cmp
inc
call
sub
sbb
fsubr
jmp
lahf
pop
xchg
push
mov
fidiv
daa
pop
and
jecxz
inc
sahf
scas
int3
mov
sub
push
imul
lea
xchg
ret
sub
test
pop
mov
inc
pop
data16
cmp
add
or
faddp
inc
sbb
add
and
enter
adc
push
mov
pop
ja
bts
jmp
scas
sub
aad
test
ins
loope
bound
inc
ret
rcl
fs
fadd
xlat
and
and
sub
test
xchg
test
lea
loop
dec
or
sti
mov
pop
and
ds
mov
jmp
icebp
or
or
mov
adc
add
test
into
adc
add
adc
jb
lock
addr16
test
adc
dec
push
xchg
fiadd
jmp
clc
or
test
mov
dec
dec
ror
pop
ror
(bad)
add
xchg
daa
inc
push
bswap
nop
pushf
adc
in
push
add
enter
ror
fwait
je
sub
cmp
or
scas
dec
cs
daa
adc
mov
sbb
(bad)
imul
clc
fldpi
push
stos
sbb
sbb
or
fs
adc
mov
or
dec
not
pop
add
sbb
add
jecxz
xor
and
loope
xor
cmps
xlat
les
dec
mov
lahf
and
xchg
cmp
in
add
cld
mov
(bad)
xchg
or
pop
out
adc
scas
push
adc
in
mov
scas
shl
push
outs
loopne
mov
enter
mov
cmp
enter
in
sub
and
stos
xor
clc
pushf
in
out
sti
int3
sbb
fsub
pop
pop
sbb
in
pop
dec
and
sbb
sahf
out
push
inc
push
data16
in
mov
push
cdq
push
mov
idiv
repz
leave
fsub
cmc
add
jmp
ds
sbb
int3
pop
pop
leave
ins
xor
(bad)
and
or
or
jge
(bad)
mov
jae
clc
rcr
test
jl
pop
lods
ins
jo
outs
sbb
sub
gs
jmp
mov
or
jnp
les
sub
imul
or
push
loope
out
adc
shl
movs
in
out
aad
test
jno
inc
into
out
push
hlt
mov
push
sbb
mov
test
sub
push
aam
or
lock
out
mov
mov
test
in
inc
sub
xor
add
pop
daa
dec
adc
dec
pop
fld
and
xchg
xor
sbb
or
xor
dec
mov
pop
test
inc
pop
call
cmp
lds
or
and
fwait
sub
adc
push
lods
add
add
adc
enter
inc
mov
sti
mov
or
pop
inc
dec
jmp
pop
push
daa
sahf
add
sbb
loop
or
jmp
inc
sbb
inc
sbb
and
xor
sbb
jp
in
add
or
scas
push
jg
adc
call
cdq
cmps
lock
and
push
mov
les
test
add
les
pop
pop
sub
jbe
retf
and
(bad)
fstp
js
lock
in
pusha
aam
add
js
icebp
mov
adc
jbe
pop
ins
pop
pop
bound
cld
pop
push
push
mov
cdq
xor
fist
sub
dec
call
ret
dec
test
in
test
mov
enter
add
ret
lock
pop
xor
rcl
mov
das
fmul
sbb
mov
mov
xchg
pxor
jmp
adc
pop
add
add
ja
fisttp
in
call
add
shl
movs
ss
inc
adc
das
outs
call
pop
add
mov
sub
aas
sbb
xor
adc
in
cmp
cmps
mov
cld
mov
jb
push
call
(bad)
jns
pop
pushw
add
das
aaa
int3
ins
mov
pop
pop
pop
das
addr16
out
mov
das
push
jb
fsubr
pop
loop
mov
mov
add
add
push
sub
in
cwde
fstp
mov
loopne
push
aam
inc
repnz
cs
rcr
loopne
add
daa
rcr
retf
xchg
mov
mov
add
scas
clc
xor
xchg
sbb
not
ds
and
ret
jmp
push
fcos
aam
loope
ftst
pop
lea
sub
loop
push
jge
add
jmp
push
loope
and
in
jns
xor
lods
test
add
sbb
(bad)
xor
je
das
(bad)
fnstsw
xor
sub
test
push
leave
je
js
movs
test
sbb
cmp
push
ins
cwde
push
fisttp
int
dec
inc
adc
ret
and
pop
pop
xor
mov
out
pop
pop
aaa
add
xor
mov
push
add
mov
lock
(bad)
lock
inc
sbb
jl
add
adc
dec
sub
inc
pop
jbe
scas
lods
dec
cmp
jg
push
add
cmp
jle
adc
dec
daa
ins
loopne
loope
sub
popf
sbb
ror
xlat
(bad)
(bad)
mov
sub
xchg
sbb
pop
and
xlat
sub
push
add
add
dec
xchg
mov
sbb
jg
pop
add
jl
shr
vmulpd
clc
mov
or
push
fisttp
ins
or
pop
inc
sub
inc
xor
and
jg
adc
inc
push
pop
add
jle
mov
in
mov
andnps
loope
mov
int3
ins
in
adc
inc
sbb
pop
lock
nop
add
and
push
cli
stc
and
or
aas
icebp
sbb
adc
sub
jle
push
push
jmp
data16
add
arpl
xor
mov
and
out
jecxz
adc
pop
aas
or
or
mov
adc
js
(bad)
inc
or
add
xor
mov
sbb
sub
jg
or
dec
jne
xor
jns
repnz
push
adc
or
adc
xchg
(bad)
mov
shr
movs
loop
nop
jo
add
or
pop
daa
(bad)
nop
(bad)
cmps
imul
adc
xchg
xor
adc
pop
dec
adc
add
ret
jno
xor
xor
in
jg
scas
enter
test
cld
and
repz
popa
in
mov
xor
xor
sbb
push
add
pusha
ja
pop
repz
mov
adc
add
imul
mov
(bad)
xchg
inc
leave
(bad)
mul
aam
adc
inc
retf
cli
inc
lds
test
int3
xor
loopne
or
sar
fisubr
mov
cmp
jge
gs
add
pop
jl
push
push
cli
inc
fisttp
popa
daa
sti
and
sbb
sbb
clc
adc
add
fucomi
out
jmp
adc
add
dec
add
sti
pop
sahf
pop
pop
xor
cmc
xor
inc
or
inc
inc
fild
or
cmp
xor
fdivr
xchg
jne
test
cmp
(bad)
xor
js
outs
inc
fisttp
or
enter
and
add
les
dec
sbb
jae
push
sbb
imul
sub
sbb
lock
adc
and
push
cmc
std
push
imul
jmp
jns
and
jl
or
add
adc
inc
pop
fdiv
fdivr
or
or
test
add
add
add
pop
ss
xor
rcl
in
imul
push
ins
push
xchg
les
add
jg
inc
test
jge
sbb
repz
cld
pop
adc
pop
pop
or
fldenv
pop
idiv
mov
xor
adc
stc
jmp
xlat
pop
ret
xor
xchg
or
hlt
add
je
xchg
and
cmp
push
mov
clc
add
cmp
xor
ficom
sbb
repz
cmp
jecxz
push
scas
add
add
adc
out
add
and
or
or
outs
sub
cmovnp
cmp
push
cmp
push
push
mov
push
stc
mov
inc
js
popf
mov
dec
rol
int
pop
aaa
or
jmp
int3
lock
cmp
jb
mov
es
push
stc
test
in
call
pop
sbb
in
call
imul
call
mov
and
jnp
add
pop
mov
pop
adc
gs
mov
cmp
loopne
call
push
add
push
bound
iret
daa
pop
retf
call
fistp
jg
sbb
xor
movs
outs
clc
mov
xor
jle
and
(bad)
jg
imul
push
add
mov
xor
pop
xchg
xor
and
and
and
push
add
(bad)
ja
sar
mov
cmps
add
inc
cs
loopne
fcom
(bad)
icebp
mov
(bad)
cli
jbe
add
les
or
mov
test
ret
mov
xor
fstp
mov
mov
mov
dec
movsx
xor
lods
outs
jle
sbb
lahf
scas
ins
sub
dec
lods
(bad)
sti
fstp
and
mov
and
push
pusha
rol
dec
pop
je
pop
cs
cmp
nop
mov
enter
cmp
pop
jnp
cmp
xchg
mov
add
add
cmc
and
xchg
cmp
add
loopne
xor
adc
mov
xchg
sbb
mov
cld
xchg
ret
(bad)
or
test
(bad)
imul
xchg
imul
adc
xchg
cmp
sbb
cmps
inc
adc
xchg
test
sub
aaa
dec
mov
mov
daa
push
xor
mov
mov
addr16
lock
fstsw
sahf
les
fcomp
(bad)
cmc
(bad)
xlat
or
enter
mov
inc
pop
cmp
push
dec
mov
add
add
sbb
(bad)
not
dec
std
fmul
aad
push
push
dec
cmp
outs
mov
mov
jnp
std
and
in
xchg
mov
and
sti
clc
sub
pop
xor
pop
in
inc
add
push
push
mov
sbb
stc
test
push
or
rcr
sbb
out
adc
inc
mov
and
xor
jno
xor
sbb
jmp
dec
(bad)
in
pop
dec
push
and
cmp
and
mov
mov
syscall
inc
jecxz
stos
out
add
nop
fild
cmp
mov
dec
adc
jne
and
sbb
loopne
push
jns
mov
nop
inc
out
or
mov
sub
movs
adc
sahf
jecxz
inc
ror
jno
inc
bound
cmp
dec
pushf
push
add
cmp
cmp
inc
xchg
pop
clc
inc
and
mov
jecxz
dec
sbb
inc
(bad)
int
dec
add
xor
test
out
fwait
imul
cmc
inc
nop
inc
sbb
push
jo
push
js
push
fiadd
mov
mov
lock
aad
hlt
xchg
cmp
fmul
jge
adc
fild
mov
jo
mov
add
loopne
inc
cmps
shr
mov
lock
cmp
inc
cmps
sbb
jns
rcl
iret
lea
push
in
push
js
dec
(bad)
call
add
mov
xchg
jb
jg
adc
movs
adc
outs
add
jp
inc
cmc
add
xchg
jl
pop
cmp
push
aam
mov
pop
clc
je
mov
xor
(bad)
mov
add
test
fcom
add
or
or
push
lods
nop
out
pop
add
or
sub
pop
aas
rcr
cmp
inc
push
sub
pop
adc
sbb
add
or
inc
push
or
and
in
cmp
ffree
push
stc
sbb
(bad)
mov
movs
cmp
cmc
xchg
ss
or
call
sub
push
dec
cmp
movs
clc
lock
jle
mov
jge
out
xchg
test
inc
jne
mov
xchg
dec
lods
jns
(bad)
ins
ret
cmp
sub
mov
dec
fwait
and
add
in
loop
cs
and
or
shl
add
add
add
jno
sub
out
sahf
out
xor
push
pop
ins
je
pop
push
jmp
test
in
adc
enter
dec
neg
fcomp
icebp
mov
jge
jl
push
jo
or
test
push
inc
xchg
aas
push
add
loop
out
add
lea
call
test
mov
inc
dec
ror
into
add
scas
dec
cmps
ret
call
in
(bad)
shl
or
cmp
mov
jecxz
sti
or
pop
into
add
mov
(bad)
push
aas
sub
aas
add
lock
adc
sti
cmp
jne
and
imul
mov
popa
add
pop
and
jno
adc
and
adc
dec
sub
add
and
std
adc
jecxz
out
jmp
xchg
arpl
fcmovne
cmp
daa
push
push
sbb
repz
cmc
movs
jae
mov
dec
loope
or
lea
jbe
addr16
jg
arpl
push
pop
dec
loope
fcom
fadd
inc
jbe
nop
add
bound
adc
inc
push
cld
lahf
xlat
cmp
mov
imul
rcl
jle
push
add
retf
ds
pop
pop
and
adc
loopne
sbb
pop
mov
jg
hlt
fs
jmp
mov
mov
push
js
add
pop
jmp
imul
shl
sbb
jmp
lock
repnz
imul
scas
shr
xlat
ss
push
push
push
mov
and
es
adc
sbb
xchg
mov
sub
xor
push
pop
push
pop
adc
fwait
enter
cmp
lods
cdq
lock
lahf
push
xor
mov
ret
xchg
ja
add
cmp
ds
stos
cdq
pop
ins
cwde
jne
hlt
rcl
adc
add
mov
imul
gs
fisub
push
push
sti
push
mov
pop
ret
and
je
add
pop
cmp
cmp
(bad)
mul
sub
add
pushf
nop
push
mov
popa
(bad)
movs
mov
add
ins
jo
aaa
push
mov
add
loopne
cmp
jmp
inc
pop
cmps
or
push
cs
repnz
call
je
mov
mov
lds
cmp
cmc
je
inc
mov
std
inc
or
hlt
les
std
aaa
xchg
clc
mov
xchg
mov
imul
ret
inc
iret
adc
bound
inc
adc
or
hlt
xor
sbb
or
inc
dec
out
add
adc
js
fsub
test
rol
jnp
fsub
dec
rcr
cmps
movs
lock
int
xor
mov
addr16
out
xor
lock
add
pop
dec
sbb
push
and
sub
and
lea
pop
mov
or
movs
test
enter
or
icebp
and
inc
jne
and
jecxz
leave
or
inc
push
cld
mov
pop
adc
call
xchg
or
outs
inc
jo
sbb
ja
hlt
push
and
loope
sbb
or
lods
add
and
cmovge
mov
das
cwde
and
sbb
in
or
xchg
xor
mov
xchg
xor
add
add
std
xchg
sbb
(bad)
cmp
xlat
jg
lock
xor
cld
(bad)
inc
out
mov
sbb
adc
retf
lock
cmp
repnz
adc
push
dec
mov
dec
jg
pushf
push
mov
movs
(bad)
clc
adc
movs
ret
out
or
sbb
sub
mov
cmp
repz
fscale
daa
into
out
cmc
je
jmp
adc
ins
xor
int
xor
sub
mov
lods
sti
test
cld
cmp
inc
lods
sbb
push
dec
idiv
int3
pop
outs
sbb
outs
les
mov
jecxz
lea
add
sbb
lock
hlt
jecxz
(bad)
push
sub
mov
or
movs
sbb
or
add
imul
xchg
iret
imul
and
and
fstp
push
adc
sub
je
ins
shl
push
call
mov
mov
and
add
ja
or
sub
cmp
add
add
pushf
xor
das
jecxz
test
dec
add
xor
cmp
jbe
ins
xor
rcl
outs
mov
add
add
test
ins
sub
nop
data16
out
xchg
int3
mov
fist
fwait
push
mov
pop
fbstp
je
mov
mov
fdivr
adc
or
push
add
mov
fcom
and
out
lds
inc
mov
sbb
sub
adc
mov
hlt
pop
pop
aas
sbb
or
dec
sti
sbb
fistp
mov
adc
xlat
lock
jbe
add
jmp
mov
mov
call
mov
sbb
popf
cmp
xchg
inc
loope
daa
call
add
popa
and
lods
outs
cdq
jmp
mov
in
scas
mov
daa
lock
push
adc
mov
in
int
mov
jmp
and
xchg
inc
arpl
pop
rcr
or
cmp
add
or
push
adc
into
test
inc
popa
sbb
pop
jmp
adc
loope
test
mov
hlt
sub
dec
lea
and
loope
and
mov
imul
push
pop
add
dec
inc
push
mov
and
jo
add
jo
cmp
sub
and
xor
mov
add
pop
stos
shr
xchg
and
call
mov
mov
push
jmp
dec
jne
pop
mov
pushf
and
mov
push
jne
mov
int3
dec
add
inc
pop
nop
fs
and
push
pop
add
pop
and
or
test
popa
cmp
xchg
dec
out
in
and
ins
inc
adc
xor
xchg
inc
(bad)
aas
adc
int3
cmps
sar
ret
sub
js
xor
adc
mov
pop
xchg
sub
sub
daa
inc
sub
and
popf
adc
scas
adc
das
jp
gs
arpl
sbb
mov
inc
adc
movs
xchg
pop
cld
jecxz
or
pushf
or
adc
jcxz
add
mov
add
jge
dec
ror
out
and
es
pop
in
sbb
and
ret
push
idiv
inc
add
je
sub
shl
(bad)
xchg
adc
cmps
je
inc
rcr
xor
adc
in
sub
(bad)
hlt
or
jg
push
andps
je
jb
popa
ins
push
push
jmp
xor
call
or
mov
rol
cld
sbb
icebp
stos
rol
inc
cmp
and
inc
xor
shl
xchg
and
push
mov
add
or
push
mov
push
int
mov
or
or
mov
push
rcr
mov
mov
mov
push
mov
jg
xor
push
push
das
in
mov
push
ja
cmp
out
test
xor
push
int
mov
push
pop
push
ret
pop
jmp
or
xor
or
dec
push
and
mov
(bad)
push
pop
sar
pop
rol
loope
mov
or
mov
pop
add
or
bound
hlt
adc
pop
xchg
cmp
in
or
xchg
adc
pushf
inc
or
push
imul
mov
test
sahf
jl
sbb
push
sbb
xchg
hlt
xchg
popf
test
ins
iret
out
sbb
or
push
dec
mov
push
xor
je
pop
xchg
rol
and
push
les
pushf
stos
xchg
sbb
jg
and
or
or
push
or
adc
sbb
add
rol
cmc
or
sbb
int
add
adc
add
js
adc
mov
jmp
cdq
aam
sub
and
fisub
jmp
push
cwde
jmp
add
sub
jle
mov
ds
inc
fsubr
jg
mov
add
jecxz
hlt
sub
cmp
inc
pop
pop
(bad)
mov
mov
test
cwde
mov
pushf
or
add
sbb
or
ret
xor
sbb
push
fmul
or
adc
or
in
inc
push
in
add
or
xor
ret
xchg
rol
xchg
loopne
mov
xchg
outs
cwde
push
loopne
inc
and
ret
mov
mov
mov
pushf
inc
push
mov
jg
jmp
or
jne
push
push
lea
mov
fchs
push
mov
ins
popa
mov
xor
popf
or
push
add
dec
jnp
fwait
add
jmp
mov
inc
add
cmp
inc
or
dec
popf
jno
pop
cmp
and
mov
jnp
sub
or
adc
sbb
iret
or
push
scas
add
sar
sti
or
or
js
mov
sti
jg
xor
aas
inc
mov
mov
(bad)
and
js
or
loope
pop
out
or
daa
(bad)
aaa
mov
xchg
rol
cmp
mov
ret
mov
js
dec
add
ins
cmp
je
push
push
ret
push
fwait
std
sbb
adc
add
mov
adc
test
sbb
int
sbb
or
and
add
sub
mov
out
inc
cmp
sbb
adc
add
imul
mov
sub
call
fucom
arpl
fsubr
fucomp
mov
ss
add
rcl
xlat
repz
jge
push
or
inc
cmp
or
mov
inc
cwde
hlt
push
and
xchg
mov
inc
inc
inc
loopne
sub
and
cmp
and
add
xor
loopne
jo
cmc
cli
jg
loope
xor
xchg
test
jg
xchg
ret
sub
xor
add
(bad)
jl
xor
mov
inc
fiadd
scas
or
xor
mov
inc
popf
enter
push
pop
(bad)
loopne
popa
inc
aas
sbb
inc
mov
in
call
mov
mov
dec
jl
push
fs
inc
or
add
in
cmp
push
mov
les
jmp
lea
adc
mov
pop
sti
dec
pop
adc
inc
or
sbb
ins
jno
or
pop
dec
xor
sbb
cmp
dec
cmp
jp
call
jnp
and
mov
loop
repnz
ins
jae
cmp
push
xchg
inc
pushf
lods
inc
add
sti
push
call
lds
or
xchg
leave
(bad)
cmp
push
sub
aas
pop
push
cmp
cmp
clc
cmps
add
out
adc
adc
ds
sub
mov
mov
inc
(bad)
sub
xor
or
or
je
adc
sub
mov
push
dec
out
xchg
or
jno
pop
cwde
cld
xor
mov
dec
add
outs
imul
clc
cmp
jl
push
push
push
leave
das
frstor
or
and
cmp
add
push
sbb
fbstp
rcl
and
and
loop
inc
clc
cmp
je
and
in
mov
pop
inc
adc
dec
jg
or
test
push
dec
sbb
ror
movs
push
jecxz
ret
pop
xchg
setge
sub
popa
fstp
xor
out
das
add
(bad)
pop
dec
in
pop
dec
jne
push
(bad)
pop
loopne
mov
cld
call
(bad)
cdq
js
daa
push
sbb
sub
cmp
(bad)
pop
fsub
push
mov
push
pop
(bad)
sbb
mov
pop
xor
dec
call
and
iret
(bad)
fbld
js
inc
push
push
inc
not
push
push
sub
js
xchg
retf
push
pop
cli
bound
jne
jmp
push
mov
and
push
adc
into
pop
pop
clc
push
pop
rcl
sub
jmp
loope
fldenv
movs
and
cmp
cwde
out
jmp
push
adc
rol
pop
pop
rcr
inc
mov
add
push
je
jo
mov
ins
inc
jnp
dec
or
popf
inc
ins
sub
les
mov
xchg
add
outs
mov
and
inc
sub
add
fst
lds
imul
gs
std
sahf
sbb
ja
adc
daa
add
sbb
aad
sbb
leave
push
xchg
xor
jmp
add
sub
push
and
in
sahf
arpl
add
aad
test
jg
sbb
xor
pop
out
jecxz
mov
ss
jne
sbb
dec
cmp
cmp
adc
clc
or
test
rcl
sbb
outs
daa
and
mov
adc
data16
iret
daa
sbb
clc
mov
jmp
test
sbb
mov
pop
mov
adc
add
clc
dec
xor
daa
add
mov
hlt
mov
jne
ss
adc
push
(bad)
dec
pop
adc
push
dec
xor
and
sbb
xchg
mov
sbb
dec
rcr
adc
push
scas
pop
adc
xor
cwde
and
sbb
mov
add
xchg
jle
inc
and
mov
stos
ret
add
push
sub
psrld
add
call
and
int3
pop
and
push
shr
clc
mov
and
pop
je
aam
rcl
and
sub
aaa
je
sbb
inc
test
or
inc
sbb
add
and
pop
fiadd
adc
cmp
in
ret
add
inc
inc
jle
fldcw
jnp
inc
addr16
outs
mov
adc
xlat
push
mul
jnp
test
push
dec
push
add
push
push
aad
xchg
adc
adc
pop
or
pop
outs
xchg
fadd
cmp
stos
adc
inc
mov
daa
pop
or
jne
adc
retf
push
adc
aad
adc
xor
pop
push
fcomi
push
daa
add
cmps
mov
int
push
push
mov
cli
mov
push
xlat
push
or
xor
aam
xor
mov
cmp
dec
push
fldcw
adc
cmp
pop
push
push
jge
pop
test
sbb
push
ss
and
ins
scas
mov
cld
push
push
and
and
inc
loopne
xchg
sar
daa
pop
cmps
add
adc
xor
cmp
mov
sbb
pop
pop
sub
daa
mov
push
and
xchg
add
cmp
lahf
pop
js
add
jo
xchg
mov
adc
fist
outs
or
adc
sub
int3
jge
add
aaa
inc
retf
and
inc
outs
push
sub
mov
pop
push
ins
mov
xchg
add
mov
mov
lock
push
inc
ins
imul
es
xor
(bad)
cs
shl
add
icebp
retf
cmp
in
jo
or
and
jns
mov
sbb
mov
call
sbb
dec
mov
inc
loopne
rol
adc
dec
push
jb
xchg
pop
jo
sbb
add
clc
es
test
or
xor
xor
addr16
fcmovb
iret
loope
dec
or
hlt
call
pop
xor
fbstp
jle
mov
fsubr
outs
je
inc
imul
sbb
cmp
add
hlt
jmp
mov
stc
xor
adc
mov
popf
add
mov
in
cs
sub
sub
mov
arpl
sub
xor
cmp
shl
jecxz
gs
xchg
push
add
out
push
sub
lock
test
pop
push
or
add
push
inc
icebp
or
sbb
sub
fdiv
rcr
inc
and
mov
xlat
xchg
les
mov
jp
jne
jne
add
adc
push
push
test
sbb
sbb
std
add
es
outs
cmp
sbb
mov
add
cli
ins
(bad)
cmp
jne
dec
adc
loope
pop
lods
pop
shr
cmps
sbb
pop
mov
xlat
rol
mov
xor
adc
test
mov
or
dec
pop
es
inc
loope
nop
cmp
jl
lea
dec
and
nop
ret
adc
mov
aaa
mov
test
and
pop
push
popa
jnp
ins
stos
push
pop
inc
mov
mov
mov
div
mov
shr
das
out
int3
xchg
xchg
jnp
loope
mov
push
scas
push
clc
adc
or
mov
or
jne
jno
das
or
or
test
push
jne
cdq
pop
jecxz
pop
stc
test
mov
push
ja
jmp
sbb
push
sbb
jg
aam
invd
and
or
and
sub
cmp
dec
rcr
inc
or
loop
adc
aas
dec
pop
pop
daa
adc
xchg
ret
adc
(bad)
and
pop
pop
push
adc
adc
dec
je
aas
call
push
dec
fisub
dec
sbb
ror
(bad)
jg
push
dec
cmp
adc
or
xchg
push
push
cwde
or
fs
(bad)
std
xor
push
and
bound
jb
add
and
xor
sbb
push
cmps
xor
out
mov
push
cmp
xor
lock
lock
mov
pop
cld
and
dec
in
add
ror
add
inc
ja
sahf
out
push
and
and
add
add
and
mov
js
mov
jo
push
aam
aaa
jb
sbb
das
daa
mov
mov
rol
lock
js
and
add
mov
sbb
movs
pop
pop
push
add
lea
je
mov
scas
iret
ja
test
add
or
lahf
call
ret
sbb
aad
ror
rol
jmp
mov
cmp
cmp
add
add
mov
mov
(bad)
(bad)
pop
in
inc
pop
xor
sub
enter
pop
test
cmp
mov
pop
or
add
loop
sbb
outs
inc
icebp
push
dec
pop
cmps
fsubr
dec
test
jl
inc
xor
and
test
inc
dec
jne
xor
repz
dec
call
cmp
mov
cmp
cmp
fwait
dec
adc
sahf
nop
inc
or
mov
dec
dec
add
and
rcr
xor
arpl
xchg
inc
dec
cmp
add
call
jbe
sbb
test
pop
pop
cmp
test
stos
push
push
js
add
sar
mov
push
data16
ror
add
xor
xchg
mov
pop
pop
adc
lock
sub
cmp
push
sbb
jmp
push
push
xor
push
or
int3
cmp
mov
add
push
add
ins
push
shl
jl
and
inc
and
mov
sub
ins
xor
stc
or
or
fadd
mov
push
(bad)
xor
(bad)
out
add
add
js
rcl
adc
ret
cmc
xor
sbb
add
lds
xor
adc
jmp
and
mov
xor
add
dec
(bad)
sbb
adc
es
mov
inc
imul
mov
pop
xchg
es
or
or
sbb
mov
mov
lea
push
mov
pop
dec
xchg
or
sub
sub
int3
test
fimul
std
push
pushf
push
jle
mov
mov
xchg
jo
aad
pop
icebp
dec
movs
leave
les
pop
stos
adc
mov
dec
inc
cmp
inc
mov
cmp
jmp
push
jmp
dec
mov
mov
sbb
lea
and
push
sub
jecxz
jne
(bad)
mov
mov
or
ja
cmp
mov
cmps
push
fcmovnb
pop
(bad)
fisttp
mov
inc
or
lods
mov
out
aaa
dec
ds
movs
aaa
outs
out
cmp
shr
add
or
dec
je
dec
pop
cs
cmp
sbb
and
outs
xlat
sub
popf
adc
add
and
dec
and
stos
sbb
sub
push
add
pop
jmp
in
int3
xlat
frstor
shr
adc
movs
mov
js
and
outs
shr
mov
das
js
sub
cmp
ins
inc
push
sub
sub
add
inc
pushf
dec
or
xor
xchg
pop
adc
cs
mov
ret
mov
popa
dec
push
add
jmp
pop
inc
mov
les
mov
popa
sbb
dec
adc
ss
cmp
outs
adc
add
adc
cmp
mov
jl
ret
inc
adc
iret
push
cmp
inc
jb
adc
add
test
pop
adc
xchg
or
cmp
inc
pop
adc
jle
add
sbb
retf
aaa
jnp
movs
mov
or
adc
adc
add
lock
movs
shl
adc
cld
cs
pop
sti
cmp
mov
mov
xchg
and
lock
out
loop
fucomp
cmp
loopne
or
mov
add
and
ja
je
addr16
inc
iret
popf
pop
xlat
inc
cmp
mov
es
jnp
shl
xchg
aas
or
in
xchg
popf
pop
and
test
adc
jno
ror
imul
fucomip
or
out
jne
sub
xor
jbe
jle
mov
sub
call
fimul
hlt
jle
xchg
ret
add
adc
pusha
loopne
add
rcl
in
mov
or
add
ins
fld
push
push
cwde
pusha
inc
loope
sub
adc
fmul
push
xchg
pusha
pop
in
push
lods
or
sbb
pop
push
int
push
(bad)
sub
rol
push
pop
adc
rcr
push
jp
or
xchg
push
or
adc
jmp
cmp
sbb
(bad)
pop
call
cmps
sbb
xchg
sub
or
mov
adc
pop
iret
mov
rol
dec
(bad)
shl
movs
or
rol
and
push
jmp
and
and
pop
mov
jae
leave
dec
pop
aaa
lods
test
fcom
div
push
out
ret
adc
mov
adc
mov
mov
fild
xchg
dec
sbb
and
sub
add
add
xchg
pop
inc
imul
aaa
push
test
and
mov
movs
inc
js
add
mov
ret
pop
xchg
mov
push
adc
adc
bound
xor
pop
call
movs
outs
mov
inc
and
xchg
aaa
and
adc
and
xlat
icebp
add
push
outs
inc
mov
and
push
aam
ds
sub
add
out
es
inc
inc
push
in
push
adc
in
dec
push
rcr
or
or
(bad)
popa
inc
adc
sbb
lea
xor
jo
add
shr
loopne
jb
pop
dec
jecxz
add
push
shl
shl
daa
loope
inc
hlt
jl
je
aam
sub
pusha
pop
ror
mov
movs
rol
fneni(8087
jae
clc
jmp
(bad)
scas
int3
cmp
pop
loope
pop
mov
lahf
dec
popa
test
imul
test
fadd
retf
pusha
and
jecxz
xchg
jne
mov
fimul
jnp
fsubr
adc
dec
fmul
cmp
adc
ds
and
or
mov
jne
pusha
pop
js
push
adc
lea
inc
pop
xor
mov
inc
inc
es
les
loope
mov
stos
test
loope
out
rol
mov
dec
sub
cmp
jmp
loopne
mov
iret
cmp
(bad)
arpl
mov
inc
cmp
xchg
rol
sub
fisubr
add
dec
inc
add
sub
addr16
xchg
sbb
and
or
or
cmp
cmp
imul
mov
pop
rcl
retf
lea
dec
sbb
ret
jb
call
pop
mov
inc
push
xor
test
jl
les
in
aaa
ins
nop
or
popa
sbb
mov
mov
sub
dec
add
sub
(bad)
aaa
push
(bad)
adc
outs
loopne
mov
outs
add
mov
dec
loop
jae
pop
push
push
inc
jnp
mov
arpl
cld
pop
stos
sub
push
cdq
loope
retf
std
gs
aas
cmp
mov
adc
jo
pop
ss
in
popf
hlt
xor
fstp
sbb
icebp
jp
icebp
and
jne
test
xchg
add
xor
push
das
mov
dec
sbb
xor
mov
add
test
cld
daa
scas
ret
push
and
fmul
inc
add
and
adc
fistp
or
cs
pop
inc
cmp
aaa
hlt
popa
ds
cmps
adc
push
lock
inc
add
adc
mov
ret
icebp
pop
outs
push
mov
xchg
push
sub
ret
mov
xor
mov
xchg
dec
push
lea
sub
loope
outs
xchg
(bad)
cmp
xchg
imul
out
add
inc
inc
pop
or
add
dec
leave
outs
mov
ss
or
or
cld
or
mov
je
fisttp
mov
push
push
push
mov
inc
rol
dec
push
or
inc
adc
mov
fcom
push
push
jmp
xor
mov
jmp
cmp
jb
into
lods
adc
cmp
add
and
or
mov
out
inc
imul
lea
cmp
jne
inc
jmp
dec
cmp
js
rcr
add
or
inc
out
dec
in
push
adc
push
dec
mov
cs
mov
std
cmp
ret
cmp
jecxz
jo
push
jae
mov
jg
sbb
mov
repz
and
adc
push
add
push
cmp
outs
mov
int3
cmp
cmps
mov
aaa
and
call
daa
movs
push
or
push
rcl
mov
mov
fsub
push
pop
sbb
inc
pop
rcl
xor
xor
fsub
adc
push
push
pushf
bound
mov
addr16
fs
and
fisub
or
cld
mov
popf
push
mov
add
sar
mov
push
pusha
jo
aad
cmp
mov
pop
cmp
mov
push
dec
movs
lds
mov
clc
cwde
or
cmp
inc
outs
jno
pop
sub
sub
ror
xchg
push
push
out
xor
pop
dec
sbb
mov
stos
lea
(bad)
popa
sbb
jb
mov
xor
ins
call
pop
dec
ret
or
test
or
outs
push
sub
(bad)
iret
aas
mov
icebp
xchg
jbe
push
inc
add
mov
(bad)
and
dec
mov
adc
mov
or
mov
loop
mov
mov
sbb
dec
or
jecxz
in
push
test
(bad)
mov
sbb
pop
inc
test
xor
adc
pop
inc
popf
sbb
push
dec
lods
and
pop
dec
ja
bound
test
push
sbb
xor
inc
popa
call
adc
in
mov
loope
mov
and
mov
je
scas
sub
or
jne
shl
dec
pop
adc
(bad)
push
lea
mov
or
clc
add
push
cmps
mov
mov
sahf
sub
shl
cs
inc
push
bound
imul
mov
mov
or
xor
adc
add
or
mov
push
dec
dec
dec
add
and
int3
stc
pop
inc
push
(bad)
ror
xlat
or
sbb
sub
push
push
in
mov
inc
js
sub
sbb
add
in
push
xchg
and
add
fs
ds
call
sub
les
jne
inc
add
int3
push
enter
leave
fdiv
aam
js
aam
je
mov
adc
test
jbe
mov
xor
in
cli
test
push
push
in
je
repz
mov
sub
and
jmp
and
fsubr
mov
adc
add
lods
out
test
sbb
dec
mov
enter
out
inc
add
pop
addr16
add
test
xchg
(bad)
ficom
add
ret
test
imul
pop
dec
popa
rcr
mov
ja
dec
mov
jecxz
(bad)
(bad)
jmp
fwait
xchg
in
rcl
pop
cmp
stos
push
adc
sub
add
sub
rcl
stos
cmps
add
dec
mov
jb
lock
aam
adc
mov
pusha
sbb
or
sbb
add
add
lock
data16
xchg
mov
scas
aam
lahf
test
lock
jae
xor
lds
jae
cwde
je
jmp
(bad)
sub
clc
enter
pop
inc
mov
xor
pop
pop
push
dec
retf
jmp
(bad)
sub
dec
xor
fdiv
xchg
inc
push
es
pop
push
imul
imul
lods
add
sbb
test
dec
mov
mov
mov
xchg
add
xchg
inc
fcom
or
jo
pusha
retf
cmp
sbb
mov
push
add
mov
dec
adc
xor
xor
dec
add
push
mov
shl
add
xchg
sub
nop
addr16
pop
test
push
dec
(bad)
cmp
loop
adc
and
inc
loop
inc
ror
jge
jb
mov
cmp
cmp
cmp
jmp
call
pusha
fdivr
lock
inc
or
and
dec
add
das
iret
jp
cdq
push
sbb
call
dec
mov
or
jg
mov
les
jo
dec
mov
xor
and
js
ret
(bad)
loopne
fwait
cmp
fstp
push
iret
inc
shl
dec
rcl
adc
in
rol
jmp
cmp
mov
xor
xchg
jbe
xor
sbb
add
adc
test
xchg
inc
xchg
dec
jbe
lods
rcl
push
cs
inc
sahf
repz
in
sub
je
neg
fs
adc
call
test
adc
sbb
or
push
enter
outs
repz
cmp
or
inc
or
loop
cmps
mov
xchg
jns
movs
popf
add
adc
pop
add
pop
or
shl
jo
(bad)
mov
push
adc
clc
dec
xor
sbb
dec
or
test
and
cmps
pop
clc
sbb
and
(bad)
dec
jne
cmp
in
movs
xchg
sbb
cdq
ja
jb
cmp
lods
add
nop
push
int
pop
int3
sub
mov
in
(bad)
mov
inc
sub
in
cmc
sub
push
push
out
and
(bad)
dec
add
jl
dec
fwait
add
sub
lock
jnp
add
sbb
lods
daa
cmp
add
sub
icebp
pushf
aas
rcl
jns
or
sub
push
ror
or
mov
out
(bad)
jg
aaa
or
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
test
inc
ret
call
gs
push
loopne
jp
sub
cmp
and
or
sub
sbb
add
adc
adc
inc
pop
lock
popa
mov
mov
nop
cmp
imul
lods
add
or
and
in
jo
clc
pop
sub
add
jp
jbe
mov
(bad)
mov
push
dec
outs
je
data16
arpl
inc
popa
je
push
adc
jg
call
jp
or
adc
dec
push
dec
add
dec
dec
inc
inc
push
sti
pop
mov
inc
push
mov
adc
pop
imul
bound
jp
push
add
fs
(bad)
cld
jge
or
pop
jne
ins
popa
addr16
sub
jne
popa
ins
ins
bound
imul
jae
rcr
jl
sbb
or
add
mov
and
push
imul
dec
gs
fs
jo
gs
aaa
sti
dec
popa
jae
jne
sub
call
cwde
add
jne
ins
outs
jne
mov
loop
daa
push
mov
repnz
frstor
or
je
iret
movs
add
add
adc
and
mov
dec
fimul
test
outs
stos
popf
add
xchg
mov
lods
fcom
ja
jo
push
dec
call
jmp
lods
add
leave
or
adc
push
mov
les
mov
or
inc
adc
shl
pop
adc
mov
or
cmp
push
jl
mov
das
clc
ret
or
(bad)
movsd
mov
movs
ins
popa
jo
add
sbb
gs
add
test
dec
mov
icebp
sbb
inc
sti
xchg
xorps
inc
imul
arpl
movs
add
xchg
hlt
cmps
shr
pop
in
add
jnp
nop
push
sti
or
movs
in
pop
xchg
push
or
stos
fadd
neg
nop
(bad)
cmc
push
gs
adc
add
rol
mov
or
sbb
add
rcr
setg
inc
jp
add
push
aaa
mov
scas
(bad)
jne
ja
fadd
pop
jle
sub
xchg
adc
aam
daa
fisttp
(bad)
xchg
mov
jb
icebp
clc
lds
mov
movzx
add
pop
movs
sbb
jne
das
mov
add
icebp
xor
jge
outs
les
stos
pop
ins
fdivp
or
lock
xchg
(bad)
fcom
push
add
xlat
cmp
push
rcr
xchg
popf
jg
or
popf
inc
shl
inc
mov
test
add
clc
dec
or
push
jecxz
into
aaa
pop
loope
pop
test
adc
ret
xor
mov
mov
sub
loopne
ffreep
neg
sub
mov
mov
std
pop
sub
cld
sub
shl
add
cmp
jl
jg
adc
or
ins
sbb
out
(bad)
shl
add
cmp
fsubr
shl
fistp
or
push
or
or
dec
mov
sbb
or
push
inc
jb
adc
jecxz
lea
xchg
loopne
cli
je
mov
xor
xor
ret
outs
cld
adc
(bad)
jne
scas
push
fsubrp
xchg
outs
add
mov
ret
sbb
ja
mov
cmp
jne
cmp
push
pop
xor
pop
jae
pop
repnz
push
add
ja
cld
xor
call
lock
sub
ror
ror
jecxz
test
ins
pushf
mov
pop
or
hlt
fxch
fistp
fld1
fchs
push
(bad)
cld
mov
pop
fstp
fwait
inc
adc
or
in
pop
add
not
add
jg
cli
or
push
sub
xor
fstp
jne
sbb
adc
scas
ja
add
ins
ins
aaa
cpuid
loop
ret
in
mov
add
test
cmp
movs
rcr
jo
adc
xchg
retf
inc
cdq
adc
inc
inc
push
lahf
inc
or
test
mov
jbe
mov
dec
pushf
mov
push
push
push
int3
xchg
pop
in
rol
or
jo
outs
addr16
or
out
and
inc
sbb
inc
test
push
ins
arpl
add
add
inc
pusha
mov
pop
sbb
push
push
inc
dec
fadd
adc
or
cmp
inc
add
add
push
dec
inc
sbb
dec
mov
add
fs
push
mov
jg
add
popa
jns
xchg
add
sbb
imul
or
inc
fs
xchg
xor
out
add
or
push
push
aaa
or
or
inc
sbb
push
dec
gs
sub
push
jne
je
arpl
fwait
sar
ins
jae
add
inc
gs
or
dec
or
dec
mov
sub
add
adc
fadd
cmp
jle
movs
adc
add
imul
push
add
aaa
or
pop
movs
outs
pop
inc
add
jb
aas
add
fisttp
(bad)
aas
xor
or
outs
jo
jg
adc
add
add
gs
lahf
or
pop
add
je
push
mov
cmp
addr16
in
jbe
lods
addr16
rsqrtps
test
sub
clts
mov
ins
fild
fiadd
cmp
jns
aad
(bad)
out
xchg
addr16
outs
imul
fdivr
push
push
sbb
jb
jnp
mov
mov
jecxz
mov
fst
jne
outs
jp
push
inc
or
out
add
mov
in
sub
or
push
or
aas
pop
mov
jo
arpl
pushf
bound
js
and
mov
xchg
sar
sbb
cs
push
push
mov
loop
test
jg
or
addr16
cmp
add
and
inc
test
dec
cmps
or
popa
adc
ror
pop
icebp
mov
mov
cld
xchg
inc
(bad)
fild
fild
fmul
fstp
fld
mov
add
fcomp
nop
fadd
shl
jmp
sbb
cwde
movs
mov
sbb
jbe
add
or
je
mov
in
jl
js
ret
cmp
mov
leave
xchg
inc
pop
push
push
(bad)
pop
imul
jnp
cwde
test
pop
call
mov
sbb
pop
pop
mov
xor
push
sbb
xor
mov
or
ret
sub
add
pop
jnp
add
xor
ja
push
hlt
fisttp
or
gs
or
inc
(bad)
fbstp
inc
data16
fs
push
inc
jb
outs
jb
div
push
push
dec
dec
clc
push
pop
test
lea
mov
outs
arpl
push
add
mov
bound
mov
pop
call
push
or
mov
push
push
je
out
xor
dec
adc
push
mov
jnp
cwde
cmp
(bad)
jae
inc
push
add
mov
push
push
sub
xor
aad
add
arpl
imul
lods
arpl
retf
pop
cwde
bound
or
shl
cmp
sbb
cmp
pop
popf
inc
sub
mov
dec
pop
cmp
xor
shr
jo
pushf
mov
adc
outs
pop
movs
adc
fisttp
mov
mov
outs
adc
push
push
int3
add
dec
mov
jns
outs
mov
adc
inc
and
fwait
sub
jl
lahf
cmp
mov
rcl
out
das
test
push
push
lahf
sbb
lahf
in
(bad)
ror
jo
pop
inc
jae
dec
or
pushf
xchg
or
lds
push
je
xor
mov
dec
inc
dec
dec
lahf
fisubr
imul
js
gs
ds
dec
aas
ficomp
mov
push
inc
das
or
sbb
add
jae
enter
std
aas
add
sub
pop
add
and
inc
call
jns
jne
in
sbb
ret
push
je
mov
dec
bound
ss
call
int
in
or
int3
add
jae
mov
lea
inc
inc
ins
ins
inc
gs
adc
in
push
add
add
pop
pop
lea
xchg
push
fwait
add
and
inc
ds
popf
xor
ret
or
sbb
rcr
aad
push
cmc
sbb
jo
inc
outs
mov
pop
and
dec
addr16
and
fwait
arpl
add
cmps
fisttp
scas
fsub
jp
push
push
push
inc
jbe
adc
inc
sbb
bound
ins
push
jno
aam
punpcklwd
jbe
bound
mov
imul
adc
cmps
test
test
call
pop
frstor
es
cdq
cmp
mov
pop
pop
inc
mov
in
pop
mov
mov
outs
inc
inc
je
mov
mov
sub
xor
or
push
and
push
aaa
pop
dec
and
mov
outs
sar
push
pushf
hlt
push
imul
and
cmp
pop
mov
mov
jno
add
fcom
out
or
push
outs
adc
imul
jae
fist
out
imul
rcpps
sbb
push
adc
arpl
jo
mov
add
inc
js
aam
nop
cmp
inc
movs
sub
xchg
adc
cmp
mov
sub
sub
loope
pop
sub
xor
jb
gs
or
jbe
and
adc
outs
dec
dec
loop
xchg
mov
inc
jecxz
mov
jae
sub
jne
cmp
dec
movsx
outs
outs
mov
aam
or
daa
enter
das
jge
fucomip
pop
sbb
adc
push
xlat
loopne
cmp
push
jno
js
add
mov
and
clc
fidivr
xor
jbe
imul
(bad)
fidivr
xchg
pop
pop
adc
shl
mov
mov
into
cmp
scas
aaa
dec
les
bound
dec
push
inc
daa
mov
pop
push
xlat
inc
mov
sbb
push
sbb
or
sbb
add
or
hlt
movs
add
mov
test
xchg
arpl
push
push
in
add
add
cmp
jne
push
out
add
xchg
loopne
xchg
xor
sub
fisub
adc
or
mov
ret
neg
sbb
push
popf
and
(bad)
int
inc
mov
add
(bad)
pop
sub
mov
jmp
sbb
add
sub
sti
call
pop
and
fidiv
sub
jmp
sub
cwde
sbb
adc
adc
push
cmp
pop
into
lods
ins
fnstsw
push
and
bound
cmp
clc
shl
adc
ds
outs
xor
xor
fs
aam
ds
je
cmp
mov
je
clc
fdivp
and
dec
cmp
gs
add
aad
cmp
das
fcomp
sbb
push
dec
movs
and
call
sub
mov
add
sbb
xor
mov
aaa
xchg
fld
movs
inc
ror
pop
(bad)
fcmovnb
xchg
inc
inc
aas
test
adc
aas
div
je
lea
xor
add
xchg
sub
sbb
sub
lds
mov
(bad)
jg
fucomi
push
mov
jmp
mov
jbe
call
add
jl
jmp
mov
push
push
mov
data16
push
jg
je
dec
je
sub
or
jmp
call
adc
add
mov
pop
add
sub
iret
xor
sahf
mov
in
jno
xchg
retf
push
sbb
add
(bad)
push
adc
push
or
or
mov
pop
adc
dec
mov
lea
in
or
sub
fist
bound
and
rcl
ret
das
ins
imul
push
or
dec
xchg
add
xchg
jbe
and
inc
push
jp
add
mov
sbb
inc
fistp
arpl
cwde
sub
pop
push
add
ja
hlt
loopne
ret
add
jo
je
inc
std
hlt
aaa
push
xchg
dec
fs
mov
lock
in
push
test
(bad)
sub
jmp
push
push
mov
add
lea
and
(bad)
inc
mov
setg
mov
pop
mov
sbb
into
cmp
and
mov
popf
inc
sub
push
enter
cmp
and
push
or
in
pop
jmp
mov
(bad)
sub
imul
pause
dec
and
mov
cmp
xchg
jne
aaa
clc
push
ror
scas
cmp
clc
pop
jno
pop
jmp
rcr
movs
loopne
add
pop
add
sbb
and
(bad)
stc
popa
jno
and
(bad)
ret
dec
rcl
loopne
sbb
jmp
imul
mov
clc
bound
loop
dec
xor
sub
push
push
dec
scas
mov
outs
(bad)
in
or
cs
cmp
fidivr
and
js
or
add
test
and
cmc
out
add
iret
in
ret
add
inc
or
test
sub
push
inc
lock
dec
mov
xor
jae
data16
sub
or
dec
neg
mov
cwde
test
inc
pop
hlt
ds
mov
or
mov
inc
ja
add
sub
inc
sti
jne
test
fs
adc
in
test
xlat
pop
or
out
push
in
push
mov
popa
fs
inc
shl
call
aaa
add
test
loop
push
loopne
adc
pusha
or
xor
dec
shr
stc
clc
pop
iret
and
jnp
jge
jne
das
lock
jecxz
jae
nop
mov
xchg
lock
add
cld
call
mov
xor
adc
jne
lock
or
push
inc
je
aas
gs
call
sub
add
mov
fcom
lock
call
adc
clc
xor
mov
push
test
hlt
icebp
add
movs
fsubr
imul
or
inc
jo
jbe
loope
mov
(bad)
xlat
gs
cmp
cmp
mov
bound
in
pop
les
jmp
push
sub
lea
add
add
clc
mov
shl
push
dec
outs
or
or
or
sahf
sub
cld
xor
dec
loop
jmp
pop
cld
push
adc
and
sub
sub
retf
add
stos
sbb
or
repz
js
outs
mov
mov
fnstcw
sar
adc
sub
pop
sub
adc
add
je
push
jp
sub
nop
(bad)
xchg
xchg
push
loopne
pusha
sbb
mov
or
enter
into
push
pusha
pop
xor
pop
rol
arpl
(bad)
sar
str
mov
cs
sbb
cmp
(bad)
and
movsx
add
sub
fistp
retf
mov
les
leave
daa
lods
loopne
movs
jnp
pop
mov
dec
mov
mov
mov
ds
xor
cmp
call
adc
pop
test
xlat
xchg
ins
add
mov
rcr
push
mov
jbe
les
xchg
jae
mov
nop
pop
mov
add
jbe
sahf
out
mov
add
adc
(bad)
jle
push
dec
shr
sub
pop
or
mov
pusha
pop
mov
or
fidivr
adc
iret
and
mov
or
or
sahf
mov
jmp
xor
push
or
cmp
sets
and
cmp
adc
dec
ds
add
pop
pop
jae
mov
test
dec
xchg
pop
jge
sbb
sbb
outs
(bad)
or
test
dec
push
and
pop
bound
sbb
xchg
pop
add
or
sub
or
jmp
or
fmul
iret
fld
fcomp
in
xor
dec
fwait
out
and
pop
movs
in
dec
cmp
mov
sub
popf
test
mov
sub
adc
js
adc
sahf
push
ds
loope
ds
aas
adc
xchg
inc
enter
retf
popa
mov
mov
and
xor
fdivr
and
pusha
test
repnz
fld
or
mov
xor
and
jae
sbb
sar
dec
sbb
loopne
pop
ins
or
push
or
add
mov
pusha
or
add
fild
fbld
jae
inc
push
bound
fsub
lds
ds
loope
jnp
sub
xor
ds
mov
dec
imul
lods
jb
out
mov
dec
cmp
sbb
test
mov
call
and
push
movs
mov
mov
jle
sub
xor
inc
sub
nop
stos
(bad)
mov
push
and
in
ds
jl
xchg
clc
fadd
pop
add
pushf
mov
dec
je
add
rol
outs
xor
and
sbb
shr
push
retf
neg
aas
lods
or
loopne
mov
movs
pop
mov
daa
mov
fdiv
daa
inc
fadd
pop
adc
pop
sub
pop
mov
int3
test
pop
mov
and
(bad)
pop
(bad)
imul
repz
(bad)
ins
imul
loopne
(bad)
xchg
xchg
movs
fiadd
outs
jmp
sti
cmp
cmp
pop
dec
dec
or
stc
jge
idiv
push
retf
or
sbb
inc
aas
popa
mov
mov
mov
das
adc
or
sbb
mov
jl
add
push
cmp
jb
mov
mov
inc
inc
rep
jo
and
in
les
push
add
push
and
ret
lods
mov
push
lea
mov
sub
cmp
mov
jnp
add
lea
data16
ret
xor
push
or
add
cmp
sub
inc
cwde
imul
sub
mov
xchg
adc
pop
or
aaa
iret
fild
jl
ror
push
push
add
mov
push
jg
mov
ins
add
scas
cli
rcl
adc
mov
je
mov
jmp
rcl
cmp
push
or
xlat
jbe
mov
lods
les
mov
xchg
push
adc
pop
mov
push
out
mov
mov
mov
mov
xlat
push
aaa
mov
pop
cmp
push
inc
xchg
add
mov
sub
fimul
and
add
xchg
jo
enter
cmp
movs
jbe
pop
push
cmp
out
cmp
inc
sub
inc
adc
mov
push
test
pop
gs
cmp
add
xor
bound
and
pop
dec
and
jmp
push
mov
(bad)
outs
ror
xchg
pop
pop
add
mov
push
inc
ja
adc
rcl
dec
mov
push
clc
sub
in
xor
push
ret
xor
gs
pop
jae
fucomi
cli
jae
dec
pop
mov
in
and
mov
or
movs
mov
push
in
or
jp
jmp
adc
push
(bad)
shl
cmp
add
clc
xor
loope
inc
rcl
add
jo
aas
fcmovnb
popf
sbb
mov
pop
into
sub
movs
pop
jo
fcmovb
mov
jecxz
inc
bound
pop
fnstsw
pushf
rol
movs
inc
imul
cmp
jmp
test
sbb
adc
movs
sub
in
push
not
aaa
mov
arpl
adc
lea
add
or
ss
les
lahf
dec
call
push
xchg
test
lahf
pusha
lds
and
jmp
jg
or
add
call
enter
add
cmp
fs
sbb
sub
call
sbb
je
sub
inc
out
mov
xor
or
cmps
adc
imul
adc
inc
sbb
pop
rcl
or
push
add
js
(bad)
in
cmps
pop
sbb
add
add
fiadd
jne
xor
pop
cld
jbe
aam
clc
mov
neg
add
test
sar
jle
add
or
loop
xor
or
pop
xor
xor
fisubr
bound
out
sbb
mul
fadd
sar
xor
inc
xor
mov
dec
ror
inc
push
fcomp
aam
imul
aam
xor
stos
xor
dec
xor
rcl
ins
xchg
cmps
imul
xor
int3
mov
and
inc
add
adc
(bad)
sub
adc
and
rol
push
imul
and
xor
mov
pop
mov
mov
mov
sub
push
cld
or
or
pop
cmp
xchg
jmp
movs
mov
jl
out
(bad)
add
iret
xor
push
scas
pop
add
pusha
xor
cmp
sub
in
mov
pop
(bad)
(bad)
or
nop
add
xor
(bad)
jge
ss
daa
invd
push
leave
inc
mov
(bad)
stc
arpl
and
jmp
add
lahf
mov
or
shl
add
pop
dec
xor
add
add
mov
sbb
sub
inc
cs
xor
sub
inc
xchg
dec
scas
pop
or
leave
fcmove
(bad)
jbe
push
imul
fwait
cmp
test
test
test
dec
sbb
movs
and
mov
pushf
and
aam
cwde
leave
cwde
xchg
and
nop
and
mov
mov
mov
jp
adc
leave
cwde
(bad)
ja
pop
repz
add
add
cmp
repz
(bad)
retf
mov
popf
xchg
test
cmps
fdiv
jb
loop
xchg
pop
nop
xchg
data16
or
jae
out
pop
adc
pop
adc
push
pop
pop
mov
pop
pop
add
add
enter
pop
add
add
clc
add
xor
shr
or
(bad)
add
test
ss
ja
adc
or
mov
out
adc
add
or
push
adc
xchg
pop
call
sbb
mov
stos
jo
or
adc
es
stos
pop
call
push
fmul
adc
pop
add
scas
jb
fs
xor
loopne
sti
push
pop
daa
pop
pop
push
mov
lods
mov
adc
pop
call
push
xor
ins
xchg
loopne
adc
inc
jnp
add
and
push
sub
or
pop
ss
ins
adc
mov
or
daa
les
or
mov
push
dec
pop
arpl
and
push
gs
outs
jbe
or
in
pusha
cmp
ficom
sbb
not
outs
inc
outs
gs
jae
mov
fidivr
cmp
cmps
or
dec
ja
es
inc
dec
gs
adc
jo
fwait
or
and
call
or
imul
mov
jbe
test
movs
pop
mov
mov
ds
push
and
pop
dec
dec
inc
jl
loope
pushf
addr16
push
shl
inc
dec
outs
sbb
adc
pop
dec
outs
jbe
cmps
(bad)
jne
fs
pop
sub
mov
adc
push
dec
ret
mov
push
(bad)
lock
jns
gs
add
fdivr
or
or
outs
fs
pop
imul
push
push
shl
bound
sbb
xlat
bound
mov
(bad)
ins
xchg
pop
movs
das
cli
(bad)
xlat
inc
and
add
fld
add
scas
gs
leave
enter
pop
push
nop
ret
in
fs
sahf
loopne
push
adc
popa
jo
push
or
data16
cmp
adc
push
sub
xchg
outs
xor
neg
xor
(bad)
xchg
ins
or
inc
arpl
sub
dec
sub
(bad)
pop
xor
lock
imul
(bad)
fwait
mov
sub
mov
mov
sbb
les
out
hlt
jae
ins
scas
dec
test
adc
jg
inc
(bad)
fs
pusha
les
bound
popa
and
xlat
jbe
(bad)
inc
sbb
inc
idiv
lds
xor
pop
test
dec
jae
lds
xchg
and
ja
inc
scas
or
pusha
lods
das
inc
sub
sub
jno
sbb
mov
mov
aam
add
pop
test
or
pop
add
xchg
or
fs
inc
dec
js
int
dec
inc
cmp
les
sbb
fisttp
or
aad
fld
sub
stc
push
push
or
out
or
dec
xchg
nop
add
rcr
mov
add
mov
sbb
add
rol
push
(bad)
pop
pusha
cs
daa
clc
in
adc
sbb
repnz
cld
sub
jl
hlt
sbb
inc
inc
(bad)
ror
cmovg
cmp
icebp
add
add
mov
loop
idiv
mov
inc
fist
add
sbb
hlt
push
push
push
pop
es
mov
mov
cdq
add
adc
dec
dec
inc
mov
push
add
pop
or
ss
(bad)
ret
mov
mov
sub
out
call
sar
neg
adc
neg
mov
xor
test
add
test
int
xchg
inc
adc
xchg
sub
push
mov
popf
cwde
adc
ins
neg
gs
pop
nop
pop
test
imul
xor
ret
out
movaps
jge
fwait
sub
push
add
add
faddp
pop
mov
lods
mov
sbb
mov
jmp
jne
inc
test
cld
adc
dec
add
test
and
sub
sti
sub
test
inc
push
clc
lods
push
sub
hlt
or
add
clc
cmp
adc
mov
cmp
cld
adc
sub
dec
hlt
rcr
arpl
push
mov
out
hlt
fwait
add
ins
hlt
xchg
and
mov
add
xlat
push
xchg
mov
xchg
fs
adc
pop
lock
imul
mov
cli
xchg
aas
pop
cld
push
mov
outs
iret
push
aam
fimul
xor
loopne
inc
aas
push
jnp
ins
shl
push
fwait
mov
stos
jb
mov
push
neg
jo
inc
inc
outs
sub
sbb
add
out
dec
jae
and
imul
fist
add
mov
inc
inc
sbb
sbb
icebp
inc
cs
pop
gs
or
add
gs
pop
mov
addr16
cmps
adc
inc
(bad)
cwde
xchg
(bad)
jnp
daa
aam
cwde
shl
out
das
add
or
jecxz
lea
mov
out
push
mov
add
lea
inc
inc
inc
in
mov
adc
ror
push
cwde
jbe
add
arpl
push
(bad)
xor
clc
xlat
mov
push
pop
add
cwde
ret
add
movs
cmp
jecxz
add
push
fs
ret
and
mov
or
dec
daa
sahf
loopne
fadd
(bad)
outs
stc
in
jmp
push
inc
push
push
popa
imul
std
push
outs
jb
sub
cs
fstp
mov
adc
pop
push
mov
add
mov
jb
mov
stos
in
add
outs
add
or
inc
lds
call
cdq
mov
add
jg
ret
cmp
es
sbb
rcr
inc
out
and
xor
in
sbb
outs
loopne
push
dec
sub
outs
jb
push
or
mov
aaa
jmp
gs
pop
inc
add
mov
sbb
mov
mov
push
fwait
sub
adc
mov
lahf
pop
ins
cmp
(bad)
rcr
addr16
pop
fsubr
out
fwait
mov
popf
mov
push
dec
pushf
cmps
ret
addr16
dec
inc
ja
test
sub
movs
inc
mov
cmp
mov
xor
push
outs
jno
inc
cdq
add
push
imul
dec
inc
sub
rol
lea
add
cmp
dec
mov
jmp
xor
xlat
add
dec
pop
xlat
jle
lock
jae
rol
or
fs
pop
add
or
(bad)
bound
enter
push
pop
add
(bad)
mov
or
aas
pop
ins
sahf
xchg
fwait
or
dec
das
ins
or
idiv
dec
cli
ror
mov
mov
adc
dec
xchg
mov
scas
or
fistp
mov
fadd
push
sub
inc
mov
jbe
loop
add
or
pushf
jns
ds
aam
sbb
(bad)
gs
jo
lahf
lds
xor
out
xchg
stc
push
scas
sbb
adc
add
or
cmps
adc
adc
(bad)
or
test
add
(bad)
push
push
xchg
maskmovq
not
and
adc
data16
pop
cmp
mov
pop
jg
adc
xchg
mov
add
fisubr
test
icebp
xor
pusha
les
or
pop
lea
adc
xchg
popa
sub
popa
add
mov
pop
or
and
lock
push
or
cmp
mov
addr16
ret
test
jnp
sub
xchg
sub
fld
rcl
dec
xor
sub
mov
mov
sbb
dec
or
and
mov
mov
push
loop
jns
(bad)
push
adc
and
ja
jl
fisttp
push
shl
add
xor
or
add
lea
mov
adc
and
mov
mov
pop
rcl
dec
movs
aad
shl
hlt
adc
add
xor
shl
sbb
shr
add
pop
cmp
xor
movs
js
mov
cmp
stos
pop
movs
mov
xchg
cmps
push
pusha
es
popf
push
push
lods
mov
mov
fisub
das
add
stos
shl
or
cmps
pop
cmps
ret
and
ret
dec
in
in
dec
sbb
rcl
test
or
and
sub
cmp
out
add
ret
mov
push
sub
xlat
fild
and
js
rol
sub
mov
dec
pop
adc
jmp
pop
std
in
imul
cmps
clc
cmps
into
ins
cmp
aas
js
pop
femms
aaa
popa
inc
add
or
cmp
xchg
push
and
pop
add
aad
add
sub
lds
daa
xchg
dec
lds
and
sub
fisub
ins
das
sub
ins
sar
test
or
and
rol
mov
and
imul
inc
sub
pop
test
add
test
add
(bad)
loopne
pop
clc
stos
jl
push
and
pop
aaa
stos
dec
mov
inc
pop
mov
mov
cmp
stos
inc
retf
stos
push
xor
add
inc
add
push
rcl
aad
xchg
push
hlt
stos
sub
aam
sbb
inc
add
cmps
pop
push
inc
add
call
xchg
in
xchg
rcl
lods
fist
inc
aas
inc
scas
ss
mov
mov
or
aaa
push
test
xor
test
push
out
cmp
lods
or
sub
and
sbb
mov
cmp
push
mov
xchg
cmp
shr
sub
cs
pop
cmp
pop
cmp
add
(bad)
cmp
xor
or
scas
pop
sub
jno
scas
xchg
loopne
loop
xlat
fild
les
es
ret
jo
jecxz
scas
stos
sub
into
sbb
sbb
test
cdq
push
mov
adc
mov
jo
add
add
adc
out
pop
cmp
mov
pusha
mov
jo
test
mov
dec
mov
jmp
dec
js
jbe
mov
ins
int3
add
or
es
and
mov
sub
inc
push
test
sbb
inc
push
or
imul
xchg
dec
loope
mov
ja
inc
inc
jb
ja
jae
clc
xor
and
xor
pop
mov
push
frstor
lahf
arpl
jmp
std
xor
xor
pop
inc
sub
test
push
jge
mov
popa
mov
fisub
adc
xor
pushf
xchg
daa
daa
icebp
sub
cli
lahf
mov
fimul
adc
push
jns
jmp
imul
fstp
push
mov
push
ret
es
inc
and
add
cmp
aas
xchg
sub
pop
pop
mov
add
xor
jnp
jbe
jno
cmc
mov
jno
add
int3
sbb
add
xchg
lods
or
in
cmp
or
add
mov
nop
pop
dec
jae
jae
cmp
or
mov
aas
add
add
add
add
add
add
xor
dec
and
mov
ins
sbb
adc
add
or
rol
push
pop
cld
das
and
inc
ins
ins
mov
add
mov
iret
or
(bad)
arpl
mov
add
push
inc
add
into
mov
push
add
and
jo
or
pop
dec
pop
push
xor
xchg
test
or
call
fstp
mov
sub
inc
cmp
outs
movs
or
xchg
or
add
mov
adc
ins
imul
mov
imul
sbb
xor
xor
(bad)
pop
in
popf
inc
fadd
cmp
push
addr16
rol
adc
or
and
mov
mov
add
jmp
mov
mov
add
inc
imul
mov
and
add
jecxz
leave
add
sbb
pop
in
outs
inc
cmp
outs
and
pop
iret
dec
test
imul
pop
and
ror
xchg
xor
mov
sar
test
mov
or
push
add
dec
aad
xor
fistp
adc
inc
sub
cld
lea
mov
and
add
jmp
pusha
aad
xor
pop
jb
mov
mov
mov
shl
sub
add
pusha
add
add
jae
and
or
mov
xchg
retf
jnp
sub
dec
iret
pop
mov
nop
sbb
or
mov
push
mov
xchg
out
fist
push
inc
int3
lea
les
push
iret
cmp
xor
inc
dec
add
jmp
lea
fyl2xp1
mov
mov
lea
jne
rep
push
mov
add
test
pop
dec
sub
dec
jecxz
int3
push
cmp
mov
sbb
or
aas
ret
inc
ret
mov
(bad)
lea
enter
add
jg
jo
jp
stc
adc
fiadd
push
dec
add
lods
dec
cld
mov
mov
cmp
je
cmp
sub
pop
inc
fisub
inc
push
(bad)
xor
cmp
cmp
sub
test
fisttp
in
mov
mov
add
sub
ficomp
add
add
mov
and
test
add
in
mov
mov
add
and
pop
xor
cwde
rcr
inc
call
mov
loope
aam
jb
or
or
movzx
jge
mov
dec
cmp
dec
pushf
imul
push
jbe
push
out
enter
aaa
(bad)
in
call
imul
lods
jo
jae
inc
test
or
les
dec
ins
daa
mov
and
mov
push
pop
inc
jns
mov
data16
and
data16
sbb
leave
push
sub
repnz
sub
dec
mov
scas
inc
jmp
add
test
or
dec
mov
mov
push
xor
js
pop
lock
mov
cld
nop
cmp
jae
xor
in
push
push
mov
rcr
enter
enter
xchg
or
inc
cdq
out
mov
ss
stc
push
or
jbe
fcomp
or
xchg
mov
sub
jns
rcl
aam
push
cmp
or
int3
lods
mov
mov
out
mov
add
rcr
xchg
rol
cmp
test
stc
mov
ret
ja
mov
mov
xchg
adc
ins
cwde
lock
(bad)
iret
(bad)
sbb
adc
or
push
(bad)
out
pushf
inc
gs
push
loopne
adc
jp
repnz
sti
xchg
iret
mov
inc
push
jbe
js
xchg
ret
adc
retf
xor
popf
lods
xchg
adc
jl
repz
aas
enter
and
out
jl
push
xchg
iret
cwde
xchg
js
jns
loopne
cmps
xchg
push
push
or
or
test
mov
push
ffreep
fstp
cli
mov
push
push
push
dec
sbb
adc
jp
inc
adc
cs
inc
out
ja
jg
scas
sub
pop
adc
sahf
js
(bad)
movs
adc
cmp
or
mov
(bad)
outs
cmp
pushf
inc
call
add
mov
mov
imul
cdq
mov
test
and
and
inc
sub
xchg
pushw
repnz
pop
push
cmps
movs
mov
(bad)
push
mov
or
sbb
mov
cmps
setge
mov
les
or
xor
push
popa
xor
inc
mov
add
mov
fnstcw
fdivr
pushf
adc
inc
xchg
pushf
mov
xor
pop
int
inc
movs
push
and
inc
sbb
push
sbb
pop
push
cmp
add
add
pop
or
in
(bad)
shl
pop
imul
mov
gs
sub
mov
pop
pop
push
and
sub
sub
mov
jo
movs
cmp
adc
mov
dec
movs
cmps
mov
pop
xor
inc
enter
ja
mov
aad
cmp
xor
loopne
mov
inc
add
inc
fcom
je
jae
jge
cld
push
rcl
mov
cmp
in
jle
jne
sbb
add
add
nop
lock
adc
pop
sbb
and
cmp
fsub
add
add
or
cmp
xchg
jecxz
enter
arpl
retf
mov
pop
ins
and
cwde
sub
jne
fmul
add
jmp
sub
in
ins
les
and
mov
sar
pop
jecxz
cld
fnstsw
stc
mov
mov
sbb
mov
pop
sub
call
sbb
into
pop
pusha
or
mov
pop
addr16
xor
cs
adc
mov
dec
clc
jne
shr
inc
test
lahf
mul
lea
add
jmp
add
popf
test
or
push
nop
pop
add
(bad)
mov
inc
shl
inc
test
ins
rol
enter
call
dec
in
cwde
lds
adc
or
jmp
mov
add
(bad)
loop
xor
xchg
jno
sub
sub
loop
nop
daa
add
inc
aad
jmp
add
mov
call
add
dec
clc
(bad)
aam
aaa
jnp
mov
jae
xor
mov
jmp
or
add
mov
cld
push
mov
xchg
outs
or
adc
and
mov
mov
and
sub
or
push
pop
arpl
mov
mov
sbb
test
push
jnp
imul
mov
mov
mov
or
aaa
xchg
pop
les
mov
dec
les
das
add
mov
push
daa
or
cdq
adc
and
mov
adc
adc
fadd
out
inc
popa
lock
loope
cmps
fiadd
js
cmc
dec
cmps
stos
fist
jmp
push
fisttp
icebp
dec
retf
rcr
add
push
dec
jno
xchg
or
(bad)
jno
addr16
cld
push
inc
adc
xchg
add
adc
mov
cmps
push
xchg
or
lock
cdq
mov
sub
in
cmc
lahf
jl
xor
jb
sub
test
push
imul
xchg
pop
add
fild
jnp
js
lea
push
xchg
adc
les
inc
cwde
add
cmp
(bad)
rcl
adc
ds
mov
mov
sub
aad
or
sbb
scas
push
call
adc
adc
movs
mov
push
fadd
xor
adc
add
fstp
jp
adc
push
or
jne
cld
xor
pop
pop
add
pop
call
push
mov
fmul
add
adc
ret
xchg
leave
and
add
in
das
outs
xor
jecxz
adc
mov
enter
repnz
or
fbstp
in
mov
mov
scas
or
inc
adc
outs
mov
push
or
adc
cmps
fs
and
or
in
aaa
nop
jo
call
jle
add
or
loopne
test
sbb
fcomp
inc
ds
retf
out
push
push
test
xchg
ret
cmp
sub
or
add
mov
sub
mov
lea
xchg
shr
add
loope
out
lea
add
pusha
push
fwait
sar
sbb
shl
shr
add
mov
int
sbb
pop
xchg
clc
push
jp
and
or
jo
inc
sub
adc
xchg
cmp
add
int3
enter
retf
dec
push
add
dec
dec
les
mov
iret
inc
aas
icebp
add
or
jne
add
mov
and
dec
add
loopne
xchg
popa
pop
pop
inc
cmp
arpl
sub
and
sbb
fdivr
push
push
jb
fldcw
ja
add
shr
xor
nop
jne
das
sub
push
or
sub
mov
mov
mov
test
fdivr
mov
add
test
inc
dec
aad
mov
and
pop
dec
inc
or
pop
loopne
fwait
mov
neg
adc
mov
sbb
adc
adc
jne
or
inc
ficom
xchg
enter
test
iret
add
and
outs
lea
add
loopne
pusha
inc
push
jge
xchg
adc
inc
loope
jb
imul
adc
push
les
push
sub
cmps
arpl
jg
xor
mov
push
fnsave
js
retf
das
and
and
outs
adc
adc
xor
inc
push
sub
aaa
and
dec
inc
ret
sbb
mov
ror
push
add
loop
or
popf
add
cmp
jns
test
cmp
mov
push
in
push
add
out
movs
pop
push
jl
mov
push
sub
adc
mov
sub
pop
cld
push
sub
clc
adc
sub
mov
imul
aam
in
fsubr
mov
bound
and
xchg
push
pop
enter
pop
out
push
call
das
shl
mov
sub
sbb
push
pop
push
in
stos
(bad)
jp
or
jmp
cmp
mov
addr16
jg
add
sbb
sub
inc
mov
push
daa
pop
cmc
mov
mov
stos
dec
or
icebp
dec
loope
inc
out
(bad)
or
pop
test
xchg
into
out
xchg
xchg
mov
es
jo
inc
enter
ds
or
push
push
sub
add
pop
jmp
push
sbb
inc
xchg
sar
or
dec
mov
call
mov
ds
rol
pop
mov
add
and
into
mov
ret
xor
add
xor
or
dec
mov
inc
bound
dec
xchg
daa
ret
cmp
or
scas
scas
(bad)
jo
dec
adc
inc
sbb
mov
xchg
gs
iretw
and
xor
or
cmp
add
aaa
hlt
loope
add
stc
mov
dec
xlat
and
aaa
sub
das
mov
shl
hlt
fadd
int
xor
es
push
push
(bad)
shl
hlt
xor
push
enter
das
ret
clc
and
(bad)
inc
or
pop
jnp
ror
add
jl
mov
jp
add
call
into
rol
sub
out
out
sbb
inc
nop
mov
arpl
pushf
sete
cmp
mov
ret
lock
jmp
jae
out
add
ds
adc
fstsw
inc
jg
push
mov
mov
ret
mov
adc
adc
mov
cwde
ret
sbb
loop
push
(bad)
mov
nop
(bad)
mov
add
leave
rcl
sar
ret
pusha
jo
sub
in
shl
and
or
nop
sub
dec
shl
inc
adc
mov
xlat
add
(bad)
nop
stos
dec
mov
mov
mov
cwde
mov
add
(bad)
aam
cmp
test
pop
or
mov
pop
pop
ins
pop
clc
or
or
imul
outs
mov
cmp
fist
les
fcompp
xchg
and
pop
push
push
and
outs
psadbw
add
les
adc
pop
and
pop
mov
and
and
inc
mov
mov
and
jnp
and
jne
test
sbb
dec
mov
out
mov
xchg
mov
loopne
inc
jmp
mov
xchg
cmp
push
or
cmp
inc
pop
movs
push
add
dec
xor
and
pop
sub
rcl
retf
loopne
dec
mov
jae
jge
icebp
(bad)
mov
pop
inc
sub
mov
imul
pop
xchg
jle
pop
cmp
inc
out
std
jge
mov
sub
daa
leave
out
aas
sbb
sar
jl
adc
(bad)
aas
dec
or
mov
mov
mov
(bad)
mov
push
arpl
pop
and
jmp
add
dec
retf
jb
call
cmp
jg
add
dec
outs
mov
push
inc
or
(bad)
or
cmps
jne
je
sub
retf
and
shl
adc
cmps
retf
adc
pop
adc
xchg
inc
or
push
call
sbb
aam
enter
mov
xlat
and
inc
repnz
shl
xor
daa
and
xor
mov
mov
mov
ret
in
mov
es
adc
inc
outs
sbb
mov
adc
mov
mov
dec
call
dec
sub
adc
inc
cmp
cli
xchg
ds
cmps
aaa
(bad)
test
jl
and
mov
cmp
inc
push
xor
daa
test
mov
jp
lock
push
(bad)
stc
and
inc
push
sbb
lock
push
fs
sub
mov
jle
mov
cmp
lea
push
push
ds
bound
ret
push
sub
add
jbe
add
sahf
add
add
mov
pop
fsubrp
jmp
mov
sahf
sub
cmp
mul
lea
mov
inc
int3
js
iret
lock
ds
push
push
dec
and
xchg
push
add
mov
dec
xchg
sahf
jmp
mov
pop
inc
push
sbb
push
int3
(bad)
cmps
(bad)
xchg
fimul
fist
mov
xchg
gs
ret
daa
push
jmp
mov
retf
test
xchg
retf
sub
mov
cmp
rcl
clc
cmc
adc
sbb
movs
jg
or
add
inc
or
loopne
jae
faddp
clc
lds
ds
out
cli
mov
div
add
dec
adc
aas
nop
pushf
in
retf
test
cmc
push
leave
dec
push
retf
ins
retf
js
adc
test
mov
push
sbb
sbb
out
pop
jp
das
int3
and
mov
xor
pop
adc
xchg
sbb
inc
pop
daa
cld
fmul
push
daa
int
adc
inc
xchg
add
daa
push
adc
cmp
push
add
xchg
and
daa
in
and
push
sub
je
jae
sbb
sbb
in
adc
push
push
xor
push
add
sbb
pop
inc
fst
add
call
cmps
(bad)
test
out
jo
or
sub
jmp
add
and
push
repz
ret
je
shl
dec
clc
push
mov
adc
add
aam
das
pop
and
iret
mov
fisttp
gs
jne
pushf
push
push
sbb
inc
add
pop
test
pop
inc
adc
sbb
dec
leave
dec
shr
rol
sahf
popa
adc
jp
inc
ins
add
leave
add
push
rcl
aam
pop
pop
in
lods
loope
push
aaa
push
(bad)
sub
aad
pop
ror
sti
mov
inc
push
add
pop
aas
loop
adc
pop
add
in
loop
add
inc
pop
ror
inc
add
pop
adc
jmp
scas
or
sub
mov
inc
arpl
mov
xchg
jae
add
or
imul
(bad)
sub
mov
xor
add
repnz
imul
adc
test
test
dec
shr
shl
fild
add
jo
pop
push
sbb
mov
gs
pop
push
cmps
mov
or
xor
(bad)
xchg
or
dec
dec
aas
add
xor
xchg
xor
cmp
adc
push
pushf
les
jnp
jge
dec
imul
aas
mov
test
daa
out
inc
or
cmovle
pop
dec
fbld
ins
les
out
xor
test
xor
mov
xchg
adc
xchg
scas
xchg
ds
push
sbb
out
push
scas
adc
or
push
push
mov
scas
enter
test
fdiv
inc
shr
xchg
jmp
imul
mov
int
adc
cmp
mov
jne
or
shr
repz
aaa
ror
xor
cwde
outs
test
xchg
imul
test
pop
xor
fidivr
fadd
ins
loopne
xchg
jne
aam
cmp
fld
add
pop
(bad)
sbb
adc
test
xchg
xor
mov
lea
xor
test
jmp
push
lock
ror
sub
das
(bad)
mov
xchg
push
xchg
(bad)
adc
dec
mov
or
jl
(bad)
mov
loopne
pop
fmul
xchg
mov
js
fisubr
dec
sub
in
mov
mov
leave
ins
mov
adc
in
aad
out
push
addr16
repnz
add
cmp
jns
jb
stc
inc
lock
or
pushf
pushf
jp
(bad)
dec
dec
inc
sahf
ss
add
inc
movs
aaa
repz
cmps
push
shl
pop
push
add
add
lods
outs
ins
push
push
dec
cmp
adc
sbb
(bad)
mov
or
sbb
adc
jno
xor
test
adc
mov
and
push
xchg
adc
pop
cmp
mov
pop
add
or
cmp
ja
xor
mov
aad
repnz
je
add
xor
dec
mov
xchg
pop
xchg
add
inc
fsubr
mov
add
adc
fwait
call
xor
dec
pop
pusha
mov
fsubr
or
sub
sar
dec
pop
sub
xchg
push
fst
and
push
pusha
push
outs
add
push
(bad)
call
push
mov
test
dec
inc
imul
js
sub
rdtsc
adc
cmps
jge
xor
push
dec
mov
or
popf
cmc
cmp
ja
xor
inc
shr
popf
lahf
dec
and
jns
add
out
inc
fld
in
push
pop
and
push
daa
imul
push
inc
cmp
lds
ss
add
add
xor
inc
pusha
xchg
cmp
inc
push
outs
pop
inc
std
dec
enter
dec
ins
or
imul
mov
mov
mov
icebp
and
cwde
cwde
inc
mov
imul
add
push
ret
pop
sbb
ror
lods
mov
push
mov
and
xchg
mov
push
(bad)
inc
mov
add
add
outs
call
sbb
mov
in
adc
lods
mov
hlt
mov
mov
add
mov
push
jo
push
fimul
sbb
nop
inc
mov
outs
call
call
pop
shl
or
push
fcom
xor
dec
xchg
push
movs
xchg
out
adc
mov
movs
out
add
push
adc
out
jmp
pop
ds
ror
xchg
dec
test
mov
fstp
push
es
jo
mov
xchg
not
lods
loope
ins
adc
mov
mov
push
enter
mov
xchg
hlt
xor
fist
pop
or
sub
test
not
inc
push
adc
add
ins
mov
pop
pop
pop
add
xchg
ret
xchg
or
idiv
mov
mov
sub
pmaxub
jo
mov
clc
xchg
mov
stc
ja
push
cmp
fmul
outs
pusha
or
ja
pop
(bad)
rcl
inc
fs
ja
adc
bound
imul
aad
(bad)
stc
leave
mov
in
and
cli
ja
cli
pop
mov
mov
sti
dec
sahf
pushf
pushf
pushf
pop
stos
clc
sub
inc
bound
daa
daa
and
mov
daa
sbb
dec
mov
enter
ror
call
or
scas
fnstenv
jle
ror
push
outs
or
test
add
fs
xchg
inc
cmp
and
enter
std
dec
or
add
adc
jno
sub
pop
shr
jmp
adc
add
fucomp
inc
int3
or
and
add
mov
push
xor
pop
jae
sub
jmp
mov
jmp
fwait
mov
jmp
push
jmp
push
mov
jmp
es
imul
pop
mov
sti
rol
add
dec
adc
adc
mov
pop
cmps
dec
mov
imul
inc
cmps
jae
or
add
and
inc
and
cmps
jns
or
cmps
xchg
push
adc
and
adc
rol
dec
adc
add
stc
sub
cmp
bound
push
lods
inc
cmps
adc
pop
xchg
rcl
sbb
add
scas
mov
add
sbb
or
aas
scas
add
or
test
bswap
jl
add
add
add
pop
inc
mov
fs
adc
push
inc
aaa
mov
cwde
ror
(bad)
dec
add
mov
ror
or
cmp
jmp
cmp
add
and
add
inc
imul
push
jmp
push
in
sub
add
fsubr
jge
xor
clc
add
adc
jne
je
pop
and
cmp
cmp
ins
add
add
adc
add
sub
add
pop
in
rcr
and
or
push
xor
fidivr
push
xchg
das
stos
cld
pop
lock
add
fs
fld
dec
lock
jecxz
inc
loope
or
xor
add
pop
xor
sub
imul
pop
jae
cmp
loopne
push
push
pop
(bad)
jns
out
mov
ror
loope
dec
inc
sahf
sbb
daa
and
std
dec
or
es
cmp
cmp
jmp
or
mov
sahf
add
pop
cmps
(bad)
dec
add
test
mov
aam
inc
push
xor
push
in
sbb
enter
dec
add
pop
add
pop
jg
jno
jb
xor
movs
sbb
xor
xchg
loop
xor
pusha
sub
push
mov
sub
movs
pop
mov
jae
push
xor
aas
movs
sbb
mov
jns
inc
xor
fwait
mov
movs
pop
mov
sti
ins
cmp
add
inc
shl
add
les
sub
xchg
xchg
movs
inc
mov
dec
push
mov
inc
mov
and
movs
adc
or
push
jecxz
push
lea
and
movs
mov
and
add
movs
pop
xchg
adc
and
add
dec
inc
mov
ret
fdiv
lods
loopne
rcl
or
xor
movs
shl
je
inc
add
lds
mov
add
mov
push
in
xchg
retf
scas
push
inc
or
and
inc
pop
adc
in
pop
inc
nop
adc
sbb
stos
inc
rol
add
and
pop
push
sbb
and
xor
inc
inc
sub
add
shl
call
and
lea
xchg
adc
int3
movs
mov
mov
pop
push
arpl
push
adc
aam
add
pop
push
adc
jb
movs
push
pushf
imul
and
ins
lods
push
js
and
outs
mov
vaddsubpd
mov
jo
dec
retf
pop
push
and
mov
inc
fsub
lods
ja
loopne
lahf
add
or
add
dec
cmps
xchg
push
loopne
adc
call
arpl
or
push
cwde
fadd
xchg
inc
pop
pop
lods
rol
adc
dec
enter
sub
mov
and
mov
sysret
inc
cmc
adc
(bad)
dec
or
push
addr16
add
xor
stos
jmp
push
sub
jns
cmp
sub
(bad)
xor
cmp
aad
dec
adc
test
push
pop
adc
rcl
je
stos
mov
daa
not
pop
or
int
aas
ja
xchg
ror
inc
rol
xor
jns
bound
jns
addr16
xchg
inc
push
jns
adc
inc
shl
inc
jns
adc
sbb
push
imul
inc
push
or
inc
xchg
lock
adc
ret
xor
push
adc
pop
push
sbb
(bad)
out
sub
jnp
adc
stc
inc
add
push
leave
or
lahf
sbb
push
hlt
cmp
sub
lahf
les
mov
pop
test
(bad)
push
lahf
mov
pop
(bad)
xor
jp
push
popa
xchg
adc
pop
xor
sbb
call
in
push
inc
pop
mov
addr16
adc
test
adc
popf
in
je
and
and
pop
std
and
push
sub
or
(bad)
inc
sub
add
add
xchg
cmps
pop
add
xchg
sbb
push
imul
jne
inc
aas
inc
add
sbb
sbb
arpl
push
or
add
adc
sub
pop
xor
mov
xchg
xchg
jmp
push
pop
aaa
jge
das
pop
push
inc
rol
dec
pop
or
out
add
sti
mov
les
popf
popf
fldenv
adc
and
or
vmfunc
mov
pop
mov
lock
mov
in
sar
or
int3
sbb
adc
ret
fnstcw
adc
sbb
lahf
ret
pop
dec
add
xchg
in
sbb
lahf
dec
je
mov
adc
xchg
inc
inc
adc
and
add
ror
leave
rcr
jmp
lods
(bad)
dec
cmc
adc
or
scas
mov
inc
pop
loopne
cmps
pop
fdivr
pop
sahf
push
mov
test
je
in
mov
and
xor
jb
push
out
and
mov
lahf
adc
mov
ret
pop
mov
sub
outs
das
and
cmp
addr16
mov
mov
or
cmp
aaa
xor
dec
inc
test
pop
sbb
call
or
adc
mov
jl
loop
fs
and
mov
or
(bad)
sbb
add
pop
repnz
add
add
pop
outs
add
sahf
push
cmp
(bad)
inc
mov
popf
fsub
mov
jmp
xchg
push
mov
movs
cmp
push
icebp
mov
add
or
ficomp
add
inc
ja
fs
xchg
dec
sbb
xor
or
sub
jo
clc
cmp
(bad)
mov
pop
fist
movs
call
add
fist
mov
shl
push
or
dec
add
xchg
hlt
jnp
xlat
push
push
fs
xor
(bad)
xor
in
sbb
dec
adc
and
cmps
in
push
pusha
inc
xor
adc
mov
fiadd
js
add
sub
sbb
mov
scas
test
mov
js
sbb
fldenv
ror
cmp
clc
(bad)
rol
push
ret
arpl
fsubr
outs
push
xor
stc
test
ret
pop
push
or
sbb
sub
mov
aam
mov
jmp
and
shl
enter
sbb
add
xlat
out
add
inc
call
adc
xchg
sbb
ins
dec
pop
dec
xor
add
and
mov
nop
xor
cmps
popa
and
add
cmp
sbb
in
jo
hlt
pop
adc
adc
inc
imul
push
sbb
pusha
add
rcr
in
fimul
mov
sub
xchg
sbb
push
mov
and
adc
fisttp
dec
cld
dec
sub
push
je
mov
cli
sub
mov
jg
cmp
and
pop
fdivr
add
dec
cmp
adc
xor
mov
icebp
sub
shr
push
sbb
ins
movs
xchg
fwait
dec
ror
sbb
(bad)
push
adc
rcr
inc
ret
inc
sbb
(bad)
loopne
xchg
je
pop
jmp
int3
mov
jbe
(bad)
data16
jmp
cld
ins
jl
or
mov
jmp
mov
test
dec
mov
retf
xor
sahf
push
inc
jmp
lea
push
pop
pop
mov
std
and
mov
in
push
sub
and
mov
call
push
and
lods
sbb
in
sub
add
adc
loopne
xchg
loopne
pop
inc
icebp
add
sub
xor
stos
mov
sti
adc
dec
setg
and
pusha
cmc
fwait
xor
fild
push
push
cmp
sub
repz
add
test
dec
add
adc
mov
fstp
js
fldlg2
dec
adc
push
cld
pop
add
inc
push
cld
cmp
ja
imul
push
imul
cmp
mov
adc
outs
adc
imul
jne
jge
pusha
sbb
pop
jne
ss
mov
pop
addr16
inc
cmp
mov
push
xor
xor
and
fcom
dec
dec
ret
push
jns
xchg
test
out
fidiv
cmp
jne
fcomp
push
sub
ret
add
push
push
inc
inc
cmp
rcr
daa
push
test
sbb
jmp
retf
rol
cmp
sbb
(bad)
xor
sbb
jl
and
je
add
das
sub
psubusb
inc
adc
out
sbb
add
(bad)
pop
dec
es
les
xor
aaa
and
lock
in
mov
lock
imul
jns
call
add
cmp
jle
sub
sti
test
mov
push
in
mov
mul
push
je
mov
or
retf
sbb
es
jo
sbb
sub
int3
xor
je
and
out
and
jae
mov
add
mov
ret
mov
adc
sbb
lahf
xor
xor
rcr
out
idiv
mov
pusha
or
jecxz
in
loop
(bad)
push
xchg
push
xor
mov
sub
movs
and
ja
or
dec
xlat
jnp
clc
lock
(bad)
(bad)
mov
push
or
add
and
movs
je
and
int3
(bad)
fsub
mov
dec
jl
inc
inc
or
mov
push
rcr
pop
sbb
sub
xchg
inc
push
sbb
add
inc
pop
pop
and
div
add
and
add
push
pusha
mov
or
rol
aas
cmp
mov
ret
push
pushf
xor
adc
fdivrp
pop
add
add
sub
jae
sbb
(bad)
cmp
data16
xor
jne
icebp
jge
inc
mov
fs
movs
jge
dec
mov
sub
mov
push
mov
enter
out
cmp
sete
mov
cmp
pop
jae
dec
ins
mov
push
push
ror
sbb
mov
scas
and
push
and
xor
popa
xor
or
mov
sbb
jo
mov
pop
(bad)
aam
ret
rcr
push
sbb
xchg
rcl
fadd
clc
dec
add
sub
cwde
inc
sub
lock
rcr
adc
push
adc
rep
or
or
cmp
ins
cmp
xor
jl
cmps
sbb
out
sub
lea
clc
test
xchg
das
je
mov
cmp
(bad)
pop
add
and
clc
mov
fmul
rcl
shl
adc
push
or
cs
jo
cli
cmp
addr16
fcmovnu
push
xor
jb
or
xor
cli
jns
rol
add
cld
sub
mov
out
jbe
shr
push
adc
lea
cmp
add
adc
ret
jge
inc
add
shl
push
adc
mov
imul
aam
jmp
sbb
loop
pop
test
or
inc
ja
cmp
nop
or
jae
push
inc
add
lock
mov
pop
dec
ret
jecxz
ds
jne
xchg
call
ret
mov
jmp
out
aas
test
mov
adc
not
adc
daa
cmp
inc
shl
pop
out
sub
or
jecxz
dec
xchg
rcr
add
add
sbb
sub
jne
or
and
push
inc
retf
sub
aas
mov
add
cmp
fwait
jmp
daa
xchg
adc
fistp
sub
push
xor
add
and
pop
ret
fsub
adc
retf
add
xor
inc
jo
xchg
clc
or
ret
sub
inc
fs
push
and
mov
add
pusha
enter
in
mov
jbe
adc
adc
xchg
xor
imul
clc
pop
ret
pop
sbb
je
add
xor
loopne
and
pop
mov
mov
adc
nop
arpl
add
mov
nop
jl
pop
add
out
inc
pop
and
sub
mov
push
gs
adc
add
mov
int3
xor
adc
daa
inc
adc
gs
fisttp
outs
cs
mov
add
push
xor
dec
outs
outs
sbb
scas
test
push
add
or
ins
daa
loope
loope
jne
mov
js
fld
or
popa
js
outs
add
mov
inc
or
mov
or
pop
sub
add
adc
inc
or
inc
imul
sub
push
or
and
in
call
or
fs
outs
imul
outs
or
push
ret
pusha
or
addr16
adc
jo
adc
sbb
gs
xchg
inc
xchg
xor
popa
in
jne
cwde
mov
fadd
outs
or
fist
pop
inc
or
scas
popa
and
pop
push
imul
cmp
aaa
pop
and
into
push
in
das
arpl
push
and
mov
aas
inc
scas
inc
cmp
daa
pop
xchg
loop
pop
ret
add
int3
fcomp
or
or
dec
stc
sub
or
cmp
inc
dec
popa
jp
push
dec
je
mov
ret
adc
mov
ins
outs
jae
(bad)
clc
xor
stc
inc
inc
arpl
jecxz
add
sbb
mov
mov
inc
ins
xor
jno
aas
xchg
xchg
bswap
mov
icebp
push
inc
push
sbb
cmovg
mov
dec
dec
cmp
call
jns
jb
fwait
(bad)
xor
call
pushf
pushf
mov
and
pop
and
dec
xchg
retf
inc
xchg
daa
daa
daa
adc
cmp
xchg
xchg
xchg
jp
imul
cmp
leave
jns
sbb
in
lods
hlt
cmp
bound
mov
mov
add
sbb
es
loop
cmp
mov
or
inc
ret
test
fsubr
mov
lea
mov
loope
or
or
ss
push
pop
or
data16
push
pop
sub
les
imul
fs
and
xor
imul
mov
cmp
popa
jno
mov
pop
mov
in
inc
cmp
mov
or
or
clc
and
push
lea
push
retf
js
and
sbb
ss
add
mov
or
lea
inc
or
test
adc
retf
ds
cdq
dec
pop
test
mov
fcomp
dec
jnp
ss
pop
adc
les
xlat
inc
or
ret
jmp
inc
js
and
sbb
scas
cmp
inc
imul
call
jb
dec
cwde
sub
jae
or
ins
jnp
and
xchg
xor
repz
mov
add
push
and
retf
pusha
js
jae
mov
inc
cwde
inc
add
fs
and
add
scas
addr16
or
in
cmp
enter
and
pop
loop
pop
dec
ins
fs
inc
bound
jle
adc
outs
aaa
jno
adc
adc
fs
outs
cmp
fwait
popaw
outs
ins
jg
fwait
dec
cmp
inc
fmul
outs
lahf
les
stos
ins
das
not
and
jo
adc
scas
mov
push
xlat
inc
or
mov
cmp
pop
fdiv
dec
inc
jne
pop
or
test
fiadd
push
cmc
aaa
lds
scas
fisttp
mov
pop
pop
rcl
mov
fisub
inc
mov
jae
ja
cs
sub
ins
outs
jbe
gs
add
mov
dec
shr
inc
ret
and
(bad)
adc
sub
mov
or
arpl
sbb
mov
push
dec
inc
jg
jecxz
scas
adc
inc
jae
push
dec
or
popa
or
arpl
adc
jmp
inc
jne
inc
mov
jo
stos
or
push
dec
rcl
jb
xor
std
pop
and
push
popa
jbe
cmc
push
rol
add
adc
test
test
gs
cmp
shl
add
cmp
scas
add
imul
add
or
inc
mov
inc
jg
mov
sbb
xor
sbb
inc
add
cmps
lea
adc
(bad)
(bad)
aas
pushf
jp
jbe
dec
(bad)
in
xchg
pop
mov
loope
(bad)
(bad)
(bad)
mov
adc
addr16
imul
push
ret
mov
jl
push
jmp
cdq
mov
js
or
mov
mov
sbb
add
jecxz
aam
or
mov
dec
or
inc
(bad)
cmp
push
adc
int
xchg
fidivr
fnsetpm(287
inc
inc
add
movs
setns
xor
mov
dec
pop
inc
xchg
push
inc
leave
bound
inc
or
dec
adc
push
clc
dec
mov
push
or
mov
je
(bad)
loopne
or
and
clc
dec
pusha
or
or
cmp
fisttp
xchg
mov
addr16
push
add
push
push
adc
adc
sbb
ret
mov
sub
dec
jne
fimul
pop
or
mov
mov
add
or
add
or
ja
out
lods
add
cmp
sub
inc
sub
aas
xor
inc
or
bound
jo
lahf
nop
das
mov
rcr
sbb
push
pop
cld
(bad)
pop
jno
mov
push
sbb
rcr
loope
aam
out
or
jnp
push
mov
imul
and
int3
pop
lods
mov
inc
mov
inc
adc
and
cdq
rol
je
fs
push
add
push
dec
xchg
push
mov
aad
pop
push
pop
addr16
mov
cmp
hlt
aaa
sub
outs
rol
dec
clc
leave
je
out
jne
mov
fdivr
mov
mov
or
mov
cld
add
inc
sbb
sub
adc
mov
add
sub
clc
hlt
cmp
push
cmp
shl
lods
sbb
add
vcvtsd2ss
dec
jl
pop
lock
lock
jmp
mov
and
pop
imul
sbb
xchg
adc
xor
sbb
ror
sahf
push
add
adc
test
loopne
add
lods
inc
jns
ror
add
or
mov
xchg
leave
shl
or
arpl
popa
dec
cld
add
out
add
add
pop
(bad)
or
lods
sti
ret
sti
fnstcw
or
es
xchg
mov
mov
or
or
ins
in
enter
push
in
add
or
fcmovne
mov
inc
sti
pop
int
pop
sbb
pop
and
es
pop
hlt
push
(bad)
push
or
sbb
loopne
inc
cdq
int
jge
adc
sbb
cmp
adc
lock
cmp
mov
add
dec
push
or
or
dec
js
xor
cmps
aam
xchg
ret
jl
aam
dec
sub
imul
pusha
add
fimul
lods
lods
lods
mov
and
inc
scas
or
lock
fmul
fstp
push
es
xor
(bad)
fwait
stos
and
test
mov
adc
push
xor
xchg
push
cmp
jne
sbb
xchg
call
mov
or
int3
inc
add
dec
cmp
cmps
jmp
xchg
and
adc
dec
rol
jbe
shr
dec
jp
add
push
ins
sbb
dec
add
pop
mov
inc
push
sbb
pop
sbb
mov
adc
ret
movs
jnp
push
dec
push
inc
ss
jbe
ss
and
or
mov
push
inc
inc
mov
imul
inc
push
push
push
outs
adc
inc
or
in
sbb
or
aaa
cmp
sbb
fidiv
xor
push
push
ja
push
les
fst
pop
add
or
les
jae
(bad)
rcl
push
stos
push
push
or
aaa
(bad)
xor
inc
int
sub
add
mov
sbb
push
inc
and
pop
pop
pushf
sub
sti
int3
jmp
loopne
mov
cs
pop
pop
push
push
pop
fwait
out
ret
mov
jo
sub
sbb
push
add
test
aad
aaa
mov
loope
pop
or
imul
mov
retf
sar
mov
rcr
push
xchg
inc
cmp
mov
popf
sbb
(bad)
push
cmp
push
dec
xchg
push
jb
jmp
lds
lock
cwde
inc
fsubr
dec
leave
jmp
or
test
push
sbb
fwait
shl
hlt
(bad)
test
mov
les
in
pop
add
stos
test
rcl
push
xor
aaa
mov
(bad)
dec
push
enter
push
cmps
mov
test
pop
std
mov
add
inc
int3
jnp
das
pushf
loop
adc
sub
cmp
xchg
sub
sahf
mov
leave
sub
xor
adc
cwde
push
xlat
or
inc
repnz
mov
shl
add
in
jbe
sub
pop
aas
inc
push
add
ja
push
push
pop
inc
xor
aaa
jmp
scas
ins
pop
aaa
jp
daa
test
imul
in
loopne
or
inc
sti
call
xor
or
js
jbe
mov
jne
inc
mov
and
popa
iret
push
jg
idiv
dec
inc
mov
imul
push
xor
nop
test
push
mov
sub
or
push
mov
inc
push
cmp
xchg
push
jo
inc
mov
sub
ficomp
inc
bnd
je
jb
push
rol
test
pop
sbb
outs
adc
add
div
pop
mov
fwait
aas
inc
mov
add
loopne
js
adc
dec
loopne
pop
xchg
and
pop
and
mov
inc
adc
cs
ins
adc
ja
mov
add
dec
pop
xlat
adc
shl
cs
scas
pop
ret
push
imul
cmps
out
xchg
test
gs
sub
add
pop
ins
aaa
inc
mov
dec
inc
ins
pop
jb
outs
push
leave
add
cmps
dec
outs
ins
pop
or
add
cmps
pop
scas
ins
lods
inc
push
sub
jne
cmp
inc
xor
push
mov
popa
ja
jno
popa
ja
call
outs
dec
push
or
dec
pop
xor
cwde
fisub
jns
outs
push
jnp
xchg
push
(bad)
push
ja
(bad)
ret
fs
cmp
inc
sahf
jo
outs
cmps
jmp
mov
call
sahf
push
pop
xor
stos
xor
loopne
sbb
inc
fidiv
or
aas
dec
loopne
inc
ins
es
push
fcomp
push
push
push
ds
ficom
inc
mov
add
sbb
or
mov
dec
(bad)
pop
pop
outs
pusha
jp
add
mov
fadd
or
sbb
cmp
jg
jns
dec
or
and
sub
mov
pop
or
cs
aas
push
sub
push
adc
aaa
adc
adc
pop
out
push
xor
rol
fimul
outs
inc
inc
or
or
test
mul
pop
dec
push
jne
or
lahf
iret
ins
mov
or
sbb
pop
pop
dec
pop
push
ja
mov
or
and
inc
pop
ja
jmp
inc
ret
xchg
stos
mov
dec
push
jbe
aaa
or
push
outs
jg
aas
aad
(bad)
scas
inc
ins
add
dec
out
push
mov
ins
dec
xlat
pop
and
ja
fcomp
dec
sub
mov
push
or
dec
cld
ret
xlat
popa
inc
pop
mov
retf
imul
lsl
(bad)
imul
jno
ja
xor
push
imul
xchg
dec
jp
sbb
shl
popa
(bad)
outs
inc
add
pop
fistp
inc
sub
or
pop
aas
outs
test
and
rcr
pop
pop
xlat
or
inc
jbe
(bad)
jg
arpl
ret
fcmovb
xchg
and
jns
cmp
inc
imul
out
(bad)
retf
cmps
or
mov
je
dec
jae
adc
fwait
or
sbb
loop
inc
inc
ret
pop
inc
js
jbe
aas
mov
adc
ja
sbb
sub
jno
(bad)
push
or
ins
inc
jbe
sub
xchg
mov
imul
cmp
mov
arpl
mov
cmovnp
outs
fwait
inc
push
mov
lea
fmul
mov
mov
gs
mov
mov
imul
out
push
adc
adc
inc
push
fistp
rcl
pop
(bad)
addr16
dec
push
shl
or
xchg
sbb
out
xchg
jae
push
xor
gs
dec
add
or
lea
pop
iret
pop
or
sub
inc
push
pop
push
mov
ret
scas
add
add
or
push
push
inc
jae
or
pop
ret
maxps
test
jg
push
pop
popf
scas
addr16
pusha
test
outs
inc
xchg
(bad)
bound
mov
push
xlat
push
dec
ins
jae
mov
popa
mov
outs
imul
mul
push
add
inc
jmp
inc
sub
inc
bound
push
or
scas
and
inc
call
pusha
add
ins
sub
or
xchg
pop
ins
sub
push
aas
jns
pop
add
fadd
pop
push
iret
or
call
mov
mov
or
cmp
arpl
outs
dec
or
movs
or
inc
sbb
aas
fistp
dec
js
adc
lahf
dec
push
jbe
stos
fnstsw
add
inc
mov
mov
push
cmp
daa
pusha
add
repz
lods
xor
outs
cmps
sbb
ret
ja
adc
or
pop
adc
push
sub
(bad)
mov
mov
add
add
mov
mov
and
pop
push
add
and
mov
inc
xor
adc
gs
sub
das
pop
test
dec
push
mov
(bad)
add
sbb
pusha
pop
or
aas
or
mov
inc
ret
inc
add
aas
adc
loop
and
sbb
and
pop
cmovg
add
add
add
dec
adc
sub
adc
call
pop
mov
scas
jo
pop
adc
push
adc
pop
jo
addr16
and
xlat
mov
add
(bad)
jmp
fisttp
push
outs
ss
add
mov
pop
mov
mov
arpl
jae
push
test
inc
mov
push
inc
or
pop
push
inc
loopne
add
(bad)
push
adc
or
add
fwait
scas
aas
fs
jb
pop
jnp
dec
or
sbb
or
xor
mov
sub
addr16
push
ret
test
pop
not
out
pop
or
out
pop
sub
add
or
push
ret
pop
dec
mov
inc
aaa
xchg
js
fdiv
ins
push
inc
lds
loope
fistp
xchg
add
or
push
(bad)
mov
or
push
test
pushf
cmp
add
(bad)
xlat
fsub
push
fs
cmps
shl
das
adc
fmul
shr
or
mov
sahf
dec
inc
and
pop
jno
aas
inc
push
aad
mov
push
add
mov
or
or
fadd
inc
mov
jno
pop
dec
outs
xchg
inc
addr16
fnstsw
sbb
mov
sbb
add
pop
aaa
xor
xchg
sub
pop
jb
aaa
pop
loope
or
scas
je
add
add
addr16
lods
ror
mov
and
pop
popa
add
aas
mov
or
push
cmp
dec
adc
mov
push
or
inc
jmp
or
call
jnp
jne
jge
and
rcr
inc
movzx
cmp
je
or
or
xor
fdiv
loope
add
mov
dec
test
and
outs
enter
mov
sub
into
fdiv
aam
and
add
push
adc
dec
test
mov
xlat
cmp
and
cdq
neg
arpl
add
pop
xor
dec
cli
mov
cld
push
ret
jge
punpckhbw
call
xor
cmp
adc
sub
(bad)
mov
inc
ret
mov
ins
test
mov
sub
push
js
xchg
outs
pop
ins
sbb
imul
jo
jmp
mov
push
xchg
pop
scas
mov
push
adc
xor
cmp
mov
sub
or
pop
je
fucom
jns
cmp
add
pop
ins
sbb
cmp
add
(bad)
mov
mov
dec
mov
imul
xchg
jl
cmp
ins
xor
mov
ins
mov
aas
inc
xchg
mov
and
mov
ins
xchg
ror
pop
lahf
push
sbb
and
dec
dec
dec
cmp
and
and
dec
dec
dec
dec
es
sub
dec
dec
dec
dec
sub
sub
dec
dec
dec
dec
cs
adc
dec
dec
dec
dec
adc
adc
dec
dec
dec
dec
push
pop
sbb
dec
dec
dec
dec
sbb
sbb
dec
dec
dec
dec
push
pop
add
dec
dec
dec
dec
add
add
dec
dec
dec
dec
push
pop
or
dec
dec
dec
dec
or
or
and
dec
push
(bad)
(bad)
icebp
daa
daa
daa
daa
repnz
cmc
daa
daa
daa
daa
div
clc
stc
daa
daa
daa
daa
cli
sti
cld
std
daa
daa
daa
daa
(bad)
jmp
loope
daa
daa
daa
loop
in
daa
daa
daa
daa
out
call
daa
jmp
daa
out
out
rcl
daa
daa
daa
daa
rcl
aam
daa
daa
daa
daa
(bad)
xlat
fcomp
daa
daa
daa
daa
fcmovu
(bad)
daa
daa
daa
daa
(bad)
rol
daa
daa
daa
ret
test
into
in
ss
add
dec
inc
dec
outs
jbe
ins
imul
popa
jo
imul
fstp
ror
ins
sub
adc
pop
xor
pop
pop
test
(bad)
push
ror
jb
lods
mov
cmp
cmp
pushf
inc
push
jo
mov
sub
ins
ins
add
jnp
adc
push
into
std
push
dec
push
ins
cmp
or
or
adc
imul
addr16
cli
add
and
push
fadd
xchg
dec
jb
xchg
push
fistp
retf
add
and
jmp
xor
push
je
xchg
fadd
and
push
add
mov
jnp
push
inc
(bad)
mov
lock
inc
push
jne
or
shl
rol
jb
push
cld
sbb
pop
sub
jo
push
outs
in
ja
cmp
jae
add
sbb
xchg
adc
pushf
sub
mov
gs
jb
or
push
mov
pusha
fucomi
mov
inc
ins
je
outs
popa
or
rcl
or
fs
jge
sub
ins
inc
test
push
push
pop
js
ins
dec
outs
jo
dec
div
push
jns
sbb
or
ins
(bad)
addr16
and
inc
imul
mov
mov
adc
xor
fistp
push
aas
mov
pop
sar
or
adc
(bad)
jae
xchg
cmc
adc
adc
test
cmc
pop
ins
fs
outs
xor
add
xchg
ret
lahf
cmps
je
or
jne
sub
sub
pop
bound
pop
jnp
push
adc
dec
mov
jp
add
inc
dec
ins
or
push
(bad)
div
or
inc
imul
imul
enter
outs
jae
es
lds
ror
or
test
cmp
rol
mov
mov
ins
mov
cmp
loopne
aad
test
jae
push
xor
xor
xchg
push
cmp
ja
outs
jne
arpl
sbb
dec
adc
das
stos
ret
adc
sub
push
aam
xor
sub
js
sbb
dec
fs
adc
inc
and
adc
ins
pop
arpl
or
enter
jo
js
sbb
sbb
add
pop
jbe
or
loopne
cdq
(bad)
es
ret
enter
cwde
test
inc
adc
adc
cmp
adc
push
cmp
(bad)
mov
mov
fwait
loope
add
dec
adc
and
or
mov
mov
in
and
loopne
inc
loope
imul
fisub
lock
mov
mov
push
inc
sbb
mov
nop
scas
sub
arpl
fs
popf
shr
mov
or
rol
clc
cmps
inc
add
fisttp
adc
or
adc
(bad)
pusha
add
adc
js
je
adc
cwde
imul
or
dec
mov
and
mov
mov
(bad)
jg
out
add
and
adc
cmp
add
xor
mov
sub
push
push
push
cdq
das
push
or
fidiv
cmps
aam
enter
inc
push
push
cmp
xor
lea
cwde
bound
out
add
jmp
add
adc
imul
push
inc
push
imul
jae
test
add
inc
or
test
test
loop
jo
inc
or
sbb
pushf
(bad)
rol
lahf
inc
jns
daa
jno
sbb
xor
sbb
pop
cmps
push
inc
jmp
add
and
jo
push
aas
add
jp
in
or
int3
rol
dec
cmp
inc
or
pop
push
inc
inc
and
inc
adc
fndisi(8087
ja
sub
ss
aas
es
inc
fmul
movs
mov
add
jg
cli
ins
add
aad
pushf
fadd
fsubr
add
xor
leave
push
cmp
test
out
sub
push
xor
jge
pop
out
or
xor
pop
push
shl
jb
fisttp
and
add
jp
or
and
xchg
and
or
sub
hlt
cmp
imul
mov
shl
or
fs
or
(bad)
jo
dec
int3
add
mov
les
popf
sub
aaa
imul
inc
clc
jnp
test
bound
out
mul
fldcw
test
and
add
xor
mov
add
add
dec
push
push
jg
jnp
jl
das
or
dec
jl
push
es
jb
jns
jge
jl
cmp
ss
jge
jge
ret
rol
(bad)
mov
(bad)
push
loopne
add
outs
add
repz
jmp
aas
add
add
rol
mov
js
jge
sub
cmps
test
mov
(bad)
mov
adc
jge
mov
jl
ret
loop
jge
cmp
cmp
into
mov
loope
int
sbb
les
cmp
and
jge
daa
add
loop
loop
stc
push
cmp
jge
pop
jle
jle
scas
lds
jns
ins
loop
jle
adc
dec
fsubr
stc
dec
inc
adc
pop
sbb
aaa
sti
add
sub
call
push
je
add
jl
in
mov
add
jb
jnp
add
jg
and
add
test
outs
and
jecxz
in
loop
mov
jle
inc
icebp
cmp
add
push
outs
int3
test
xor
xor
mov
test
inc
daa
adc
gs
(bad)
mov
push
inc
sahf
jbe
push
inc
dec
ficomp
loop
ror
pop
xchg
xlat
push
int3
addr16
sahf
or
ins
pop
or
adc
jge
xor
mov
or
fcomp
add
(bad)
adc
loopne
and
adc
mov
outs
pop
jnp
sbb
sbb
push
sub
pop
push
and
lahf
(bad)
push
loopne
jb
out
dec
ror
pop
xor
je
push
iret
mov
ins
or
out
arpl
es
add
(bad)
jo
ss
adc
mov
mov
inc
mov
cmp
scas
imul
out
sub
cmp
popa
bound
inc
or
and
outs
or
push
and
push
xchg
lods
lods
ror
inc
cmp
fmul
retf
adc
pop
adc
imul
ins
push
jge
push
or
dec
or
or
sbb
jo
or
pop
or
cld
xor
imul
mov
jbe
inc
jne
mov
ja
gs
inc
aas
or
cmps
sub
lea
movs
outs
adc
lds
or
xchg
cmp
mov
xor
das
pop
test
add
push
pop
or
rol
pop
mov
add
and
daa
and
call
xor
ins
popa
lods
fcom
cmp
int
xor
sub
and
inc
ins
nop
retf
movaps
jne
push
add
lldt
jo
repnz
lock
movups
and
fld
mov
sub
adc
mov
stc
mov
movhps
fist
bound
push
push
dec
mov
pop
sbb
scas
bndldx
jb
mov
bndstx
aas
jbe
nop
pop
(bad)
adc
nop
jb
add
jg
repz
add
mov
call
pop
and
xor
scas
pop
popf
mov
stc
pmaxsw
(bad)
add
aas
loop
or
adc
bndldx
ss
push
int3
scas
loopne
outs
mov
jb
inc
adc
mov
or
dec
add
add
inc
icebp
xchg
sbb
xor
pop
sbb
aaa
adc
xor
adc
pop
or
push
mov
(bad)
or
push
add
inc
jne
or
js
mov
inc
mov
or
adc
or
add
pop
push
push
inc
jne
inc
xlat
add
retf
or
sub
daa
or
gs
js
fiadd
data16
inc
fmul
add
sahf
adc
das
out
jmp
ret
or
test
pop
rcl
sub
rol
pop
inc
dec
or
or
or
mov
pop
lds
dec
popa
xchg
mov
pop
jb
add
mov
mov
inc
ret
sbb
dec
or
clc
mov
aaa
inc
jne
jnp
mov
rol
sub
xchg
sbb
xchg
xor
scas
and
loopne
mov
jne
scas
and
or
std
shl
scas
and
das
cmp
push
push
push
mov
push
and
or
xchg
xor
icebp
inc
adc
add
push
mov
fdiv
pusha
cmp
adc
xor
cs
add
pmaddwd
out
mov
sbb
pop
push
mov
adc
and
pop
sub
push
and
mov
popa
push
xor
inc
push
add
data16
push
jbe
mov
adc
ins
adc
and
or
sub
xor
ret
adc
popf
in
pop
popf
aad
dec
in
pop
dec
or
rcl
test
lea
and
mov
inc
leave
je
push
cmp
outs
xor
dec
mov
inc
mov
cmp
pop
dec
test
add
fcomp
adc
jne
rcl
jns
shl
jae
sbb
adc
add
cli
mul
xchg
mov
jmp
push
scas
pop
adc
imul
and
or
jl
lock
or
into
cs
dec
ins
data16
mov
imul
xor
ins
jns
mov
mov
add
std
jge
jnp
add
inc
test
cmp
loop
pop
ret
add
ins
or
pop
bound
imul
or
mov
nop
inc
mov
dec
loopne
adc
xchg
inc
aaa
push
push
js
loopne
or
popa
xor
push
fcom
lea
mov
fs
pop
mov
push
stos
sar
imul
inc
mov
or
xchg
push
arpl
sbb
mov
inc
cmp
xchg
pop
iret
mov
lods
xchg
inc
cmp
pop
sbb
add
repnz
mov
push
shl
mov
push
clc
inc
imul
cwde
stos
aam
lock
sub
fsubr
repz
ror
push
mov
hlt
inc
out
cmp
cmp
sbb
mov
sub
sahf
out
sub
push
jl
sbb
fidivr
fidiv
xor
push
repz
add
cmp
inc
push
add
jg
add
cmps
and
and
push
inc
inc
or
jl
sub
or
xlat
clc
dec
push
push
inc
str
out
mov
lods
not
sbb
pop
jo
stos
pushf
xchg
scas
cmc
pop
add
add
mov
xchg
femms
call
(bad)
verr
mov
xchg
retf
pop
imul
ror
adc
movlps
push
adc
mov
hlt
xchg
scas
cmp
movhps
xchg
pop
add
jg
pop
retf
xchg
mov
nop
outs
sbb
repnz
mov
nop
nop
sahf
jge
push
pop
movd
fdiv
mov
outs
sbb
paddsb
(bad)
push
fwait
cmps
add
loopne
sub
pop
push
and
ja
fwait
add
push
daa
mov
jno
push
ja
adc
inc
cmps
inc
cmp
sub
sub
jbe
add
pop
lods
or
xchg
push
pop
inc
sub
sub
leave
sub
mov
mov
rol
jecxz
jo
adc
rcr
dec
out
cmp
mov
inc
movs
add
aad
inc
or
or
xchg
sub
sub
or
and
add
cwde
aad
sub
inc
jge
jns
sbb
imul
adc
sbb
stos
xchg
imul
or
sbb
and
and
mov
and
loope
and
and
pop
adc
pop
mov
xor
add
xchg
or
leave
inc
adc
sub
inc
or
adc
adc
or
ja
mov
push
adc
push
and
adc
loopne
and
jne
jo
inc
sub
add
mov
push
and
cmp
std
xchg
or
rcl
xchg
xchg
add
scas
add
fild
setp
dec
loope
adc
pop
ja
sub
ret
push
ds
les
int3
push
or
(bad)
in
xlat
xchg
test
cmp
(bad)
sbb
test
(bad)
mov
push
fcom
fisttp
ret
jg
int
fwait
or
and
sub
pushf
mul
lods
(bad)
xor
pushf
(bad)
aaa
shl
push
jb
addr16
xor
addr16
mov
cmp
jo
and
push
push
outs
imul
fadd
adc
mov
xor
or
or
ffreep
mov
loop
aaa
xchg
sar
imul
arpl
jmp
jns
(bad)
add
dec
outs
ja
int3
gs
add
clc
adc
push
add
push
jae
add
add
outs
bound
and
inc
fadd
div
lock
pop
mov
pop
pop
cs
dec
lar
xchg
jbe
(bad)
sti
push
imul
out
ret
ret
jmp
mov
and
std
ja
pusha
or
jmp
adc
int3
add
sub
sahf
push
adc
push
out
popf
push
pop
mov
int
jp
aam
sbb
ror
frstor
ds
sbb
mov
xor
push
push
push
and
sub
jo
imul
pushf
cmps
push
cld
push
inc
dec
mov
inc
and
push
pop
push
or
cmovg
or
(bad)
mov
movhps
outs
neg
popw
mov
adc
fs
xor
fistp
mov
cmp
enter
sbb
xor
xchg
iret
ret
mov
loope
add
adc
and
imul
and
inc
push
bound
out
fidiv
mov
lahf
and
cmp
add
xchg
cmp
pop
and
or
call
adc
iret
stc
mov
mov
mov
js
jbe
adc
call
int3
or
es
add
fnsave
aas
push
inc
jno
or
dec
cmp
or
mov
lock
inc
test
adc
ins
pop
lea
ror
inc
outs
loopne
sbb
(bad)
cmp
or
sti
inc
xor
in
adc
push
aas
push
repz
ins
jg
mov
push
and
and
int3
or
repz
repz
ret
imul
add
bound
jb
sub
mov
leave
dec
in
inc
and
adc
cmovle
repnz
or
rol
shl
test
add
add
scas
sbb
or
or
daa
sub
push
inc
ins
pop
xchg
jecxz
jne
mov
pop
jmp
stos
(bad)
pop
xor
test
or
jb
fisttp
arpl
test
xchg
xor
adc
jl
(bad)
lds
int
mov
lods
int3
cmp
or
push
mov
jle
jp
xchg
jmp
outs
push
or
push
mov
mov
xchg
or
xor
imul
inc
dec
push
test
mov
outs
sub
xor
add
or
pop
sbb
jo
or
adc
cmp
jns
push
cld
adc
lahf
mov
xchg
add
mov
cmove
jo
retf
fcomp
out
fidivr
xchg
imul
pushf
sub
dec
pop
cmp
sbb
test
dec
push
test
pop
movs
ds
xor
not
sbb
add
test
jo
call
add
div
sbb
add
xchg
pop
inc
clc
and
add
inc
sub
jae
pop
sbb
rol
sahf
pop
das
pop
imul
repz
cmps
jae
xor
in
and
mov
inc
add
pop
scas
jg
and
or
std
(bad)
cld
inc
imul
sahf
cmp
mov
je
add
cmps
sbb
ret
sbb
fsubr
dec
inc
and
rcl
jo
sti
add
ja
adc
ins
add
inc
int
or
rol
sbb
daa
ror
ficom
adc
movs
adc
adc
add
mov
loope
add
rol
push
jp
(bad)
and
inc
cmc
(bad)
adc
imul
enter
imul
or
add
or
mov
in
inc
test
xor
add
add
ins
sti
jae
mov
rol
bound
mov
lds
cdq
mov
loope
gs
xchg
(bad)
xchg
xor
pusha
push
pshufw
pop
outs
ins
add
xlat
or
stos
and
mov
lods
or
xchg
and
call
(bad)
or
and
pop
dec
push
ficomp
nop
xor
jmp
mov
mov
gs
push
test
arpl
pop
popa
rcr
add
pop
xlat
neg
lock
arpl
mov
xor
cmp
or
popa
imul
sbb
or
mov
mov
int3
stos
das
add
pop
js
(bad)
(bad)
es
das
sti
stos
jns
or
or
loopne
inc
push
cmp
retf
mov
cmp
leave
xor
mov
ja
or
push
push
lds
jb
xor
and
jae
or
or
sub
xchg
mov
cwde
cmp
das
pusha
lods
sbb
or
stos
addr16
push
test
push
adc
das
jno
push
xchg
(bad)
in
mov
inc
adc
adc
inc
mov
cmp
jg
fisttp
stc
popa
ins
jo
mov
sub
enter
push
mov
int
int
push
sti
nop
nop
lods
inc
pop
jns
or
sbb
pop
shl
mov
xchg
es
das
xchg
sbb
icebp
sub
or
pop
out
jmp
inc
mov
out
sti
movs
repz
push
inc
in
jo
push
shl
push
mov
data16
sub
shl
push
or
sub
aam
fmul
pusha
das
jle
sbb
cmps
xor
cmp
push
inc
(bad)
jp
or
leave
dec
stos
inc
outs
movs
adc
dec
enter
mov
cld
dec
pop
scas
icebp
sub
test
xchg
mov
mov
shufps
call
push
nop
mov
mov
sbb
dec
jnp
pop
or
dec
hlt
ror
adc
and
dec
mov
sub
movs
xchg
stos
or
pop
dec
sbb
das
mov
add
inc
cmp
dec
out
imul
cmp
adc
sub
mov
cmp
xor
jmp
mov
sub
icebp
or
gs
mov
ror
sub
inc
movs
test
add
(bad)
call
sbb
push
or
sbb
cmc
pop
mov
mov
push
push
push
inc
and
ret
fs
jns
test
scas
xor
or
adc
or
pop
xor
clc
sub
test
push
das
(bad)
int3
inc
jo
loope
mov
das
dec
dec
dec
inc
pusha
mov
mov
inc
or
and
loope
call
test
es
or
sub
push
js
and
sub
fimul
sub
rcl
and
xor
xchg
outs
sub
leave
or
fsub
cmp
inc
dec
inc
push
inc
(bad)
add
dec
out
std
push
push
fld
mov
push
gs
or
ja
inc
(bad)
hlt
shl
mov
dec
push
xor
inc
xor
or
mov
sbb
jmp
ja
jno
add
adc
dec
add
mov
jno
fdivr
add
lds
pop
and
xchg
xchg
lods
loopne
xchg
jmp
jo
push
push
and
scas
xchg
push
xor
or
cmp
enter
sub
call
xor
(bad)
into
mov
dec
cwde
out
inc
ins
and
out
mov
xchg
xor
inc
dec
mov
clc
fs
fiadd
inc
dec
ins
movlps
ins
adc
movs
adc
mov
gs
cmps
adc
xchg
rcr
push
mov
cmp
dec
inc
jne
pop
or
loop
cmp
jg
mov
(bad)
out
mov
test
push
mov
enter
mov
mov
xchg
xchg
inc
push
in
push
cwde
inc
inc
aaa
cmp
call
dec
push
pushf
push
les
not
sbb
push
sub
dec
cmp
inc
cmps
js
jnp
test
cmps
popa
push
hlt
push
movs
push
in
push
sbb
shl
jl
mov
fisttp
imul
pop
inc
sbb
mov
xor
inc
add
xchg
xor
in
test
xor
xor
add
push
adc
adc
sbb
sbb
fwait
jecxz
call
add
ss
lods
jecxz
inc
aas
int
scas
mov
or
jmp
mov
push
clc
ror
pop
add
mov
pop
jno
dec
stos
(bad)
mov
jns
bndstx
ret
mov
(bad)
cmp
dec
stc
es
loop
ror
and
sbb
dec
ss
mov
dec
sbb
mov
inc
ins
pop
gs
pop
outs
je
sub
sub
call
sahf
out
daa
adc
pop
pop
imul
mov
mov
mov
or
data16
jp
dec
add
addr16
sub
jae
adc
or
js
mov
mov
xor
mov
push
popa
cs
popa
in
mov
fst
retf
push
bound
(bad)
or
sbb
add
or
mov
jns
mov
(bad)
test
adc
dec
imul
popa
adc
scas
jb
push
ror
je
add
pop
js
push
lods
xor
inc
test
push
add
mov
arpl
cmp
fcom
ret
jmp
push
lods
add
ret
iret
pop
xchg
or
inc
mov
jl
cdq
cmc
les
mov
lea
sbb
mov
jmp
mov
adc
imul
adc
adc
loopne
lea
gs
les
inc
pop
mov
js
inc
or
jne
xor
popf
sar
mov
scas
or
(bad)
pop
fcmovnu
jmp
xor
(bad)
cdq
nop
loop
dec
sbb
cwde
arpl
gs
movs
adc
dec
cmp
ss
adc
test
mov
mov
mov
inc
js
in
push
pop
mov
test
sub
ucomiss
test
mov
inc
mov
push
pop
ror
hlt
push
fidiv
push
sar
inc
dec
js
jns
lock
arpl
nop
add
xchg
scas
rcr
icebp
and
fnstenv
mov
(bad)
or
int
sub
rcr
pop
ins
fbstp
xor
je
ficomp
in
js
lods
das
sbb
in
adc
in
dec
rcl
and
data16
sub
cmp
ins
data16
fadd
not
fild
push
pop
push
dec
mov
scas
nop
gs
out
scas
cmp
ss
push
mov
mov
add
sbb
out
push
mov
jne
gs
addr16
adc
inc
shl
shl
not
(bad)
mov
pop
mov
psllw
ret
ret
das
fdivr
sbb
inc
ret
xchg
(bad)
pop
mov
aas
sbb
pinsrw
sub
inc
es
jae
add
push
fidiv
push
cs
sub
dec
ss
jae
mov
lds
cmp
imul
sbb
outs
or
enter
inc
test
sbb
shr
inc
test
sbb
call
nop
cmps
(bad)
fsub
inc
stos
mov
inc
add
call
dec
add
add
pop
add
test
add
xchg
pop
in
aam
add
les
enter
lahf
push
imul
ror
test
fistp
les
push
ja
inc
ins
jo
cmp
(bad)
mov
dec
jo
addr16
xor
push
push
dec
push
push
adc
fdiv
loopne
or
(bad)
adc
loopne
add
push
mov
shl
add
push
push
(bad)
jle
add
ins
out
inc
push
dec
rol
(bad)
outs
cs
xchg
mov
loopne
push
adc
(bad)
jl
imul
and
jb
adc
shl
ja
int3
cmp
cmp
fld
or
cs
and
clc
and
aam
jecxz
pop
xor
repnz
movs
add
push
arpl
nop
arpl
pop
sti
push
icebp
inc
or
pop
cs
adc
cmp
mov
or
data16
xchg
(bad)
push
dec
or
inc
and
jmp
ja
stc
add
xor
pop
(bad)
xchg
pandn
cld
repnz
add
sbb
or
xor
ret
jo
add
jb
rcr
enter
sub
fisttp
test
lds
cdq
fisttp
cmp
xor
ds
add
or
jnp
pusha
xchg
stos
jns
sbb
jecxz
sub
push
sbb
lea
or
push
add
adc
mov
jne
add
leave
fbld
xchg
fld
data16
cmc
push
lods
je
fwait
dec
pop
mov
mov
call
sub
push
fst
push
push
cmp
xchg
adc
ror
ret
push
retf
js
test
das
xchg
retf
test
adc
scas
push
clc
xor
adc
jne
add
mov
push
fadd
xor
add
and
icebp
adc
dec
and
cmp
loop
pop
inc
fmulp
or
sahf
pushf
fmul
sbb
add
dec
mov
dec
sbb
pusha
rol
sub
xor
pusha
xor
push
rcl
mov
pop
cmps
out
dec
or
cmp
adc
mov
icebp
ror
add
repz
into
and
sub
adc
movs
inc
lods
push
sbb
shl
sbb
cwde
mov
add
ja
mov
cmp
nop
or
add
dec
stos
push
sbb
push
sbb
cmp
inc
pop
and
adc
sub
shl
mov
xchg
sub
test
inc
xchg
pusha
xor
lahf
outs
mov
jmp
pop
adc
push
and
hlt
jns
lods
leave
daa
push
ret
cmps
push
dec
fmul
adc
lods
pop
add
sub
iret
pop
xor
or
imul
mov
mov
xor
rol
xor
inc
dec
jne
das
push
or
mov
push
mov
dec
and
xor
pop
test
int
pop
sbb
int
dec
fdiv
(bad)
push
dec
leave
xchg
les
jb
dec
loope
ret
dec
cld
or
mov
rol
sar
sti
(bad)
into
fld
or
loop
add
jmp
clc
mov
adc
mov
sub
cmp
jne
push
cmp
or
loope
dec
shl
test
push
sub
mov
mov
sti
xor
inc
and
add
mov
pop
inc
rcr
xchg
add
mov
pop
test
add
xchg
xchg
mov
adc
xor
sbb
mov
ds
push
inc
ret
or
dec
jns
into
pushf
mov
push
rcl
stos
out
pusha
jl
and
pop
call
retf
daa
je
jns
cmps
mov
in
sbb
xchg
xor
xor
and
js
sbb
in
inc
test
mov
test
cmp
add
jl
lock
jnp
mov
cmp
jne
mov
mov
pop
mov
call
mov
fild
pop
or
add
xchg
or
adc
rcl
mov
popa
mov
push
movs
jle
sar
jae
xchg
add
or
xchg
test
or
add
call
mov
aad
mov
xor
shl
adc
ins
pop
hlt
repz
mov
inc
xchg
inc
rcl
xor
dec
add
sbb
adc
das
or
xchg
adc
jno
add
xor
(bad)
nop
ja
ret
and
inc
inc
pop
add
mov
mov
push
jle
test
xor
pop
inc
mov
mov
sub
shl
adc
xchg
ror
xchg
pop
pop
fldcw
add
cmp
or
shr
push
sub
push
dec
or
loopne
xchg
(bad)
xor
sub
out
mov
pop
sub
push
jg
mov
adc
adc
out
ret
rcr
push
push
or
cmps
lahf
hlt
cmps
in
cmp
pop
or
add
push
fwait
pop
sbb
cli
push
pop
add
add
data16
pop
push
add
or
push
or
pop
test
push
push
lea
pop
(bad)
push
push
and
pop
es
dec
sbb
dec
sbb
pop
jae
movhps
or
pop
push
pop
fimul
mul
pop
call
dec
jb
scas
or
pop
cmps
fadd
sub
sbb
dec
push
push
push
adc
ss
add
mov
lock
inc
inc
xor
in
stos
push
xor
call
push
pop
jae
mov
aas
outs
dec
jp
(bad)
scas
sub
sub
dec
dec
ret
imul
mov
push
xor
je
mov
sti
scas
push
pop
popf
sbb
push
xor
fadd
add
push
inc
ss
cs
mov
ret
ret
daa
pop
adc
pusha
or
aaa
pop
adc
push
fidivr
inc
ss
cs
pop
jle
push
test
adc
dec
sub
ins
popf
adc
push
mov
or
sbb
and
mov
push
fadd
lea
loopne
(bad)
cmp
sti
mov
jg
ret
rep
pop
test
je
movs
push
push
mov
les
inc
shr
les
inc
cwde
mov
movs
jmp
add
dec
or
add
add
add
or
mov
lea
mov
sti
add
mov
mov
cmovge
jle
mov
push
imul
mov
outs
push
jne
(bad)
ds
or
add
or
mov
push
mov
add
mov
cwde
dec
jns
(bad)
aad
mov
dec
out
xor
jbe
pop
pop
test
mov
push
adc
mov
loop
adc
push
fisub
xchg
adc
adc
or
jl
imul
add
xor
jnp
add
inc
and
sub
popf
clc
mov
cmp
test
ins
rcr
sbb
psubusb
xchg
sbb
test
or
rol
jle
and
or
inc
sbb
adc
adc
mov
xor
ss
stc
xchg
fbstp
pop
test
and
sbb
popa
dec
repnz
pop
test
inc
adc
xlat
ret
push
adc
jo
inc
adc
test
retf
jae
out
push
or
cwde
ds
cmp
mov
cdq
out
out
pop
pop
cmp
ret
mov
les
fist
or
dec
je
or
test
stos
dec
sub
(bad)
adc
sbb
adc
sub
cmp
test
sbb
pop
lods
loope
mov
push
sbb
sbb
scas
mov
or
sbb
cwde
add
push
test
dec
inc
add
inc
mov
nop
xor
inc
mov
sbb
and
push
inc
and
adc
or
fwait
jae
and
cmp
pop
push
mov
ret
in
sahf
xor
dec
rol
mov
and
jno
add
pop
fst
add
mov
movs
xchg
cmp
sbb
add
pop
cmp
sbb
inc
sbb
cmp
loop
adc
push
mov
jle
or
int3
shl
pushf
ds
call
add
test
push
push
shl
or
stos
add
or
dec
stos
xlat
sbb
enter
or
sbb
sbb
xchg
xchg
jae
(bad)
jl
into
mov
pop
fistp
arpl
mov
or
mov
aaa
mov
add
or
lds
les
push
cli
arpl
add
xchg
push
pop
and
je
add
lahf
xchg
adc
and
add
or
pusha
cmp
(bad)
mov
mov
and
and
(bad)
ins
popa
add
into
inc
pop
sahf
ins
add
into
vmread
xchg
and
add
push
sbb
sub
dec
push
pop
add
mov
push
push
shr
xor
pop
or
fcom
xor
inc
push
xor
neg
test
sub
pop
and
jmp
ss
push
cmps
cmps
ins
push
sar
hlt
sub
sbb
dec
sbb
push
scas
push
dec
(bad)
pop
psrld
mov
adc
xchg
inc
and
and
mov
sar
fmul
lahf
mov
sbb
pop
outs
mov
xchg
pushf
and
dec
jne
jge
adc
and
xchg
sbb
int
test
in
arpl
pusha
xchg
sbb
push
mov
or
sub
or
push
movs
add
js
add
in
sub
push
pop
push
test
call
jne
test
and
add
out
mov
add
or
jb
fild
mov
repnz
jmp
sbb
mov
xor
sbb
fs
mov
xchg
dec
cld
imul
jo
or
mov
aas
adc
sub
xchg
mov
push
mov
xchg
add
mov
adc
sbb
add
(bad)
cdq
push
rol
movs
adc
mov
xchg
cs
mov
fcom
adc
inc
sbb
test
push
test
sub
test
fbld
dec
enter
add
rcr
fisttp
out
nop
and
add
inc
push
leave
mov
aam
lds
push
inc
push
imul
push
adc
in
adc
sub
sub
mov
daa
pminsw
in
icebp
mov
inc
not
in
test
loopne
loope
sbb
fcom
fs
loopne
ja
mov
lods
xor
sub
or
or
cmp
and
leave
loope
inc
cmps
ja
shr
and
xchg
jl
sub
idiv
sbb
push
rol
inc
fcompp
pop
or
cmp
(bad)
pop
div
push
dec
je
xor
popa
jb
add
je
lods
icebp
sbb
push
push
jmp
pop
jmp
jge
mov
(bad)
mov
fld
ins
xlat
pop
xor
or
push
in
mov
cld
jmp
mov
mov
outs
sub
mov
mov
(bad)
mov
mov
outs
pop
sub
outs
adc
push
addr16
ins
jmp
icebp
js
and
jb
pop
pop
jecxz
pop
push
cmp
inc
mov
sub
or
enter
cmovg
jecxz
ficom
std
mov
inc
dec
sbb
es
mov
ins
or
pushf
mov
test
push
in
xchg
add
push
mov
cmp
sbb
aad
jb
adc
jae
and
ror
pop
or
add
jb
adc
test
call
movs
nop
xor
pop
dec
cmc
sub
jl
mov
mov
push
js
jp
retf
jo
mov
hlt
mov
mov
sub
add
or
adc
int3
jle
sub
aad
push
adc
mov
sub
(bad)
mov
lea
(bad)
mov
inc
repnz
and
push
or
cmp
add
or
js
inc
sbb
xor
and
repnz
mov
test
(bad)
cs
xor
(bad)
cmps
daa
adc
rcr
adc
das
ds
push
inc
sbb
lea
sub
imul
and
loopne
xchg
mov
jmp
or
nop
aaa
mov
add
test
frstor
xor
add
jge
mov
xor
(bad)
xor
out
dec
xor
jmp
pop
sub
add
inc
bound
push
mov
xor
cmps
(bad)
(bad)
cmp
mov
mov
mov
sti
pop
scas
add
into
mov
add
movs
inc
cld
pop
(bad)
movs
jnp
shr
dec
sbb
mov
inc
push
loopne
add
add
xlat
imul
movs
mov
inc
shl
mov
(bad)
fild
pop
xor
out
cwde
inc
mov
mov
inc
dec
lea
bound
(bad)
rol
int
sub
and
mov
xchg
call
into
iret
jnp
inc
lock
push
adc
imul
push
pushf
cmp
outs
xor
ret
or
or
jmp
and
or
adc
add
(bad)
fmul
ins
sbb
repnz
pop
or
ror
cmps
xchg
add
sbb
mov
pusha
jecxz
xchg
loope
sub
sbb
pusha
pop
cmp
arpl
ficom
push
in
or
push
imul
cmp
rol
hlt
jae
cmp
jne
push
fdiv
push
push
pop
fisttp
sub
xor
xchg
shl
add
dec
lea
or
sbb
fcomp
(bad)
pop
sub
fidiv
ds
ucomiss
enter
daa
sbb
sub
sub
in
pushf
mov
imul
cmp
add
clc
and
push
cmps
mov
pop
call
test
jl
mov
mov
cmp
bound
je
pop
push
add
mov
inc
xor
push
ja
add
not
adc
sbb
retf
push
call
loop
sub
in
lods
add
push
add
sbb
and
shl
sbb
fmul
inc
adc
loope
cmp
inc
or
and
jmp
dec
xchg
adc
or
add
add
(bad)
mov
xor
in
cdq
aam
fmul
adc
push
push
mov
push
add
enter
ret
adc
cmp
xor
out
push
pop
push
and
push
push
add
mov
or
pop
or
add
inc
test
add
call
aas
(bad)
arpl
sub
add
test
repz
push
cmp
inc
dec
jecxz
ror
mov
adc
adc
lock
and
cld
in
and
xor
sbb
iret
push
cmc
nop/reserved
mov
shl
adc
push
lock
push
adc
and
and
mov
dec
jb
cmp
mov
ds
dec
push
popa
es
nop
sbb
add
cmp
jno
in
jo
aad
ja
or
jns
out
out
(bad)
stos
int
jno
mov
dec
or
lock
jmp
sbb
pop
inc
out
clc
nop
pusha
inc
xor
mov
sub
or
jl
fsubr
xchg
arpl
rcl
ret
or
repnz
loopne
and
iret
cmp
scas
push
inc
dec
shl
test
dec
inc
jnp
jns
and
enter
sbb
in
inc
sub
inc
push
sub
dec
ss
adc
jo
mov
or
inc
aas
and
aam
lahf
enter
xchg
das
scas
mov
mov
add
mov
imul
add
jecxz
or
iret
or
emms
mov
(bad)
pop
push
lock
test
je
push
xor
mov
or
cmp
je
mov
xor
fdiv
cmp
add
ror
repnz
into
adc
repz
das
leave
and
sub
sub
sbb
adc
add
cld
add
push
mov
(bad)
retf
push
retf
clc
(bad)
mov
inc
loopne
(bad)
inc
pushf
inc
adc
xlat
call
imul
push
js
push
sbb
clc
pop
adc
xor
mov
add
ret
inc
xor
or
fs
fcomip
inc
sub
dec
scas
push
test
dec
daa
div
or
aam
dec
add
(bad)
nop
push
hlt
inc
cwde
or
pop
and
inc
daa
je
sub
mov
mov
xor
sbb
pop
ret
xor
push
or
sbb
inc
das
inc
xchg
dec
cmp
call
add
mov
or
pusha
mov
mov
push
(bad)
push
adc
call
add
outs
inc
xchg
pop
mov
adc
mov
xchg
loop
iret
pop
call
cmp
push
or
and
and
add
push
push
push
rcl
cmc
in
rol
and
and
into
clc
stc
xchg
iret
cmp
pop
lods
movs
cmc
(bad)
sbb
push
mov
pop
clc
inc
mov
and
mov
(bad)
adc
jmp
cmps
push
or
and
call
cwde
or
fwait
push
(bad)
inc
pop
inc
sbb
fistp
ret
pop
ret
shl
push
jne
sub
stc
lea
mov
pop
cmp
fs
jno
mov
inc
mul
sar
xor
and
movs
or
adc
pusha
adc
add
jge
mov
sub
int
or
lahf
push
inc
seta
cmp
ins
xchg
sahf
bound
xor
dec
not
and
dec
pop
je
mov
cmp
cmp
out
das
or
cwde
mov
push
or
mov
pop
dec
aam
dec
nop
aas
loop
pop
aam
inc
push
dec
and
add
mov
inc
add
push
call
inc
aad
sub
or
inc
lea
push
cmp
xor
daa
push
pop
loopne
mov
not
and
dec
clc
cmp
je
test
std
adc
add
jle
add
mov
inc
mov
loope
push
inc
fisubr
call
fiadd
xor
fs
mov
sub
mov
xor
enter
cmp
div
mov
retf
je
je
xor
jge
loope
scas
popa
sbb
aam
rcl
lea
jge
jo
cmp
jnp
inc
and
popf
push
adc
mov
aas
cs
xor
mov
push
adc
std
lods
jb
cmps
sub
sub
or
dec
pop
ret
dec
mov
jo
repz
shl
das
sub
fs
enter
clc
jmp
pop
(bad)
out
das
punpcklwd
(bad)
ss
adc
pop
(bad)
sbb
jbe
mov
mov
(bad)
mov
cmp
loope
test
jae
add
pop
push
jmp
jecxz
jl
push
imul
lods
lods
inc
mov
push
push
xor
xchg
daa
adc
lea
lea
es
adc
lea
aaa
jmp
mov
inc
nop
fst
inc
xchg
or
mov
pop
jne
loopne
or
or
sub
fld
mov
xchg
into
lods
call
loopne
mov
sti
pop
inc
int3
push
push
adc
pop
outs
test
sbb
mov
add
rcr
add
(bad)
sub
adc
movs
fcomi
fwait
pop
imul
or
bound
fadd
or
push
je
sbb
push
int3
fdivr
in
adc
test
popf
inc
mov
inc
push
out
cmp
aam
movs
push
xchg
adc
(bad)
adc
push
add
icebp
sub
cmp
fwait
out
scas
mov
rol
call
dec
je
sub
push
jmp
xchg
cmp
lock
push
dec
sbb
shl
fnstcw
push
pop
sub
cmp
add
or
pop
push
fdiv
(bad)
adc
pop
sbb
inc
test
cmps
ins
cmp
shr
sub
and
nop
jmp
aad
push
adc
lss
int3
and
out
push
sbb
and
sub
dec
and
imul
and
mov
mov
int3
(bad)
mov
fild
sub
loope
test
bound
jge
or
cmp
sbb
jecxz
push
shl
fsubr
sahf
pop
adc
jmp
lock
jmp
pop
ret
rol
jns
pop
pusha
dec
xchg
sbb
shl
ds
push
das
pop
into
mov
(bad)
test
sbb
mov
movs
(bad)
jl
and
pop
add
lods
xchg
shl
leave
jmp
call
popa
push
dec
cmp
ins
sbb
adc
test
neg
dec
imul
fcomp
(bad)
mov
lea
add
dec
call
mov
or
add
mov
mov
dec
test
push
sbb
adc
sbb
add
xor
aas
dec
push
jo
icebp
test
jle
xor
mov
fisub
add
test
repz
pop
push
inc
dec
jne
fstp
cmp
mov
push
fmul
pop
push
sbb
xor
jle
int3
sub
or
and
mov
inc
cli
xor
shr
dec
daa
dec
mov
test
in
fbstp
js
sbb
add
add
bswap
shr
mov
dec
out
(bad)
(bad)
jns
jmp
push
xor
and
(bad)
mov
sub
shl
mov
mov
jmp
scas
(bad)
sti
mov
add
cli
adc
xchg
cld
push
mov
xchg
or
sbb
fbstp
dec
aad
push
sti
adc
mov
pop
xchg
or
fidivr
xchg
cmp
cld
rol
jne
test
ret
sub
push
inc
mov
(bad)
cmp
test
jmp
push
cmp
xor
daa
jmp
addr16
pop
ss
data16
add
fsub
xchg
(bad)
pop
inc
retf
mov
aad
ja
in
out
fs
inc
popf
and
inc
cmp
clc
cmp
jl
inc
xchg
retf
icebp
inc
das
mov
loopne
jmp
inc
and
or
pop
add
and
aas
inc
daa
xor
pop
mov
push
call
pop
into
cmp
or
adc
clc
xchg
not
sbb
mov
aas
ins
call
dec
mov
test
inc
mov
cmp
jl
fsubr
movups
xchg
pop
jo
mov
add
fsub
mov
out
jl
adc
xor
add
pop
adc
cmps
ja
push
in
test
pop
inc
inc
adc
push
push
jne
in
jnp
sub
mov
inc
cmp
jge
inc
push
sbb
dec
mov
push
and
shl
xlat
xchg
cmp
out
shr
sub
xchg
fbstp
jmp
imul
mov
test
jno
xchg
push
cs
bound
mov
add
fstp
scas
add
or
add
jb
sub
mov
shr
push
inc
and
jle
test
mov
cmp
add
add
or
(bad)
out
jno
add
push
mov
mov
ror
test
push
lahf
jb
push
cwde
sbb
and
jle
adc
pop
cld
push
leave
add
add
add
push
repnz
outs
add
add
mov
(bad)
cmp
lock
mov
mov
les
add
or
dec
or
xor
pop
sub
jmp
xor
sub
sub
rol
adc
or
sub
inc
ja
shl
nop
adc
test
cld
dec
shl
adc
dec
push
mov
loope
dec
mov
dec
jo
jg
imul
mov
cdq
xor
sub
clc
jmp
push
je
cmp
jg
test
jle
cmp
jg
mov
enter
jg
js
mov
push
or
repz
test
nop
push
jg
movs
rcl
das
xor
pop
loope
xor
shl
jecxz
xor
cmp
cmp
push
mov
shl
jmp
pop
xor
fisub
sbb
pop
xlat
xor
mov
outs
adc
shl
mov
stos
xchg
xchg
add
and
and
xchg
sbb
scas
push
mov
(bad)
outs
loop
or
in
jg
or
adc
movs
repnz
fcom
lock
add
cld
push
outs
jge
or
mov
adc
inc
inc
ret
mov
dec
idiv
jne
jg
or
jl
push
inc
lea
fwait
xchg
(bad)
pushf
adc
add
mov
scas
clc
dec
(bad)
sub
loop
pop
fsubr
pusha
mov
mov
cmp
or
or
mov
inc
sti
aaa
jmp
and
cmp
cwde
jl
aaa
adc
inc
add
or
inc
mov
aam
ficom
ss
ins
in
add
sub
mov
aaa
(bad)
adc
adc
call
aam
rcr
pop
jmp
enter
xor
mov
fistp
dec
mov
leave
test
test
xchg
mov
pop
cwde
sbb
fisub
mov
ins
sbb
imul
pop
inc
jbe
or
adc
ret
call
shl
pop
jge
push
sahf
mov
and
ins
fadd
push
mov
or
inc
mov
loopne
or
adc
mov
mov
cmp
adc
idiv
shl
mov
and
loop
push
in
add
fdiv
(bad)
pop
mov
xchg
rcr
or
jmp
cmp
repz
test
push
or
or
mov
outs
xor
jmp
fcmovu
push
and
push
push
retf
pop
fucom
and
pop
(bad)
mov
inc
mov
jb
mov
adc
call
xor
ret
loop
add
add
jno
and
mov
ret
(bad)
movs
cmovs
(bad)
outs
imul
jle
lock
jmp
mov
and
mov
mov
jmp
adc
adc
jbe
imul
or
sbb
dec
cmp
jae
and
jnp
int3
and
sub
dec
push
sub
lods
mov
fadd
xor
mov
mov
jo
fwait
sbb
clc
or
xor
enter
clc
sbb
jae
imul
add
sub
call
xor
add
mov
jmp
add
(bad)
push
ret
push
xchg
(bad)
add
fild
mov
test
push
(bad)
out
clc
adc
xor
xor
lock
inc
inc
or
nop
add
pop
pusha
mov
cmp
jno
xchg
xchg
inc
jmp
jl
inc
cmpxchg
or
xchg
cmc
adc
loopne
xchg
mov
pop
rcr
xchg
loopne
das
enter
cli
pushf
sbb
pop
push
aaa
lods
scas
mov
sbb
stos
cs
test
xor
adc
mov
mov
sbb
add
addr16
mov
push
hlt
clc
pop
mov
or
shl
popf
add
jns
test
stos
xlat
sbb
in
jecxz
out
adc
in
mov
shl
aam
in
rol
or
loopne
int3
cmp
push
pop
push
or
add
push
shl
sar
add
push
sbb
inc
jb
int
fsubr
mov
dec
stos
in
push
add
push
lods
add
lods
out
mov
not
scas
mov
mov
mov
xor
cmp
push
or
cli
xor
push
add
ret
fdiv
adc
outs
sbb
scas
sub
ja
imul
stos
loopne
push
fcom
xor
adc
or
mov
and
loop
adc
and
pop
jl
and
(bad)
mov
and
mov
jae
push
aam
mov
inc
adc
push
ss
push
fucomi
ret
push
xor
xor
xor
iret
add
leave
and
in
push
adc
pop
cmovs
(bad)
cld
cld
pop
mov
pushf
or
inc
sub
sbb
fcomip
loope
sub
mov
sahf
add
lods
sub
test
sbb
pop
call
jl
dec
push
dec
adc
mov
lods
and
or
popa
ja
int
push
je
pop
add
jno
xlat
dec
pusha
jmp
xor
hlt
int3
adc
adc
jmp
adc
dec
jne
fcomp
lea
ins
pop
pop
jne
cmp
cmp
shl
pop
inc
cs
inc
imul
mov
add
cs
cmp
sub
sbb
jo
adc
ror
jge
rcl
inc
dec
and
pop
and
outs
es
imul
in
inc
dec
inc
popf
fcom
cdq
xor
test
idiv
or
push
xchg
cdq
mov
out
xor
pop
pop
ja
sbb
(bad)
lock
pop
adc
or
sub
sahf
add
xor
mov
out
pop
ret
fsubr
add
dec
repnz
inc
mov
adc
leave
leave
rol
jecxz
bound
ret
and
dec
mov
xchg
cdq
xchg
fcom
arpl
xlat
ins
outs
mov
enter
jle
int
dec
pusha
je
or
dec
add
test
adc
cmp
sbb
ret
push
adc
or
adc
sub
add
pop
into
ret
sub
mov
ja
popf
add
fs
mov
loopne
dec
push
pop
js
pop
aad
lods
addr16
ins
push
mov
test
pop
add
mov
ds
xor
adc
mov
setb
or
sub
add
pusha
sub
dec
js
nop
(bad)
jmp
adc
dec
pop
add
ins
add
sti
add
fs
dec
inc
sbb
add
or
xchg
add
add
rol
sub
adc
sbb
mov
call
add
add
pop
push
mov
in
enter
jae
pop
or
or
xchg
adc
jle
shr
sbb
fs
pop
inc
xor
jne
scas
jl
jo
loop
or
sub
arpl
add
cmp
push
hlt
js
cmpxchg
xlat
pop
mov
adc
push
js
xchg
sub
xor
push
add
into
xlat
adc
lds
adc
data16
and
add
jecxz
leave
fucom
mov
add
(bad)
pmulhuw
mov
mov
jl
mov
and
repnz
inc
in
es
repnz
pop
movs
cmp
call
mov
cmp
jge
out
or
in
or
inc
and
and
and
ja
data16
ret
pop
leave
shl
pop
add
je
sbb
das
daa
add
adc
(bad)
popf
call
sub
mov
dec
test
jl
movs
(bad)
rcr
inc
xor
xlat
adc
jo
inc
jle
inc
dec
jne
sahf
sub
dec
add
call
add
push
add
sbb
loopne
clc
inc
jmp
loopne
and
and
xlat
xor
hlt
add
xchg
call
mov
cwde
or
pop
jns
das
js
mov
das
push
ins
jmp
dec
inc
add
xor
inc
nop
jg
and
std
and
ret
dec
cmp
sub
add
xor
inc
test
jne
xor
iret
mov
push
ss
leave
xor
ss
clc
jo
mov
xor
push
cld
jmp
and
aad
push
outs
dec
xchg
sar
sub
retf
les
int3
mov
pop
mov
call
das
(bad)
push
scas
pusha
mov
adc
movs
sbb
and
(bad)
fnsave
jge
mov
inc
test
or
stc
add
mov
xor
lods
add
mov
sbb
and
cmps
push
imul
shl
dec
outs
push
cmp
(bad)
pusha
inc
sub
inc
ins
cmps
add
fstp
aaa
sub
sbb
les
mov
dec
mov
sbb
test
and
addr16
fwait
mov
or
inc
mov
xlat
bound
(bad)
mov
add
add
push
je
xchg
mov
add
and
mov
and
jns
or
xchg
xchg
cvtpi2ps
jl
mov
enter
popf
sbb
mov
sbb
cmp
sar
push
pop
jne
outs
push
neg
or
cmp
call
mov
rcl
ret
out
mov
jmp
ffree
mov
mov
mov
popa
scas
mov
or
cld
mov
rcl
in
jle
cmp
out
sbb
pop
add
mov
aas
and
or
mov
sub
push
adc
inc
fisttp
ror
pop
inc
shr
or
pop
fstp
push
mov
mov
mov
or
sbb
iret
icebp
or
loope
jno
dec
or
or
add
or
xchg
add
jae
outs
popa
add
jne
dec
mov
or
(bad)
call
mov
xchg
fmul
pop
sar
mov
shr
inc
pusha
fcomp
mov
das
test
push
nop
or
adc
repnz
mov
adc
pop
sbb
sahf
(bad)
jb
mov
ret
pop
fdivp
je
(bad)
(bad)
out
ror
fld
jge
add
mov
lea
mov
sbb
sbb
or
jbe
mov
pop
push
mov
aaa
lds
or
cmp
rol
or
nop
or
xlat
sti
inc
nop
add
jbe
pop
das
(bad)
fist
cmp
pop
das
sub
or
in
enter
mov
scas
inc
out
or
jmp
mov
sbb
aaa
or
pop
out
ror
cmp
mov
pop
cli
loopne
into
arpl
cmp
or
cli
sahf
fisub
ins
clc
ror
push
rcl
repnz
push
sub
js
add
cmp
add
sbb
ja
sbb
sbb
mov
and
test
and
inc
pop
pop
fs
cld
push
cld
dec
cmp
sbb
xchg
lock
add
xor
push
mov
push
jmp
ins
xchg
test
xor
repz
fsubr
mov
and
push
test
xchg
mov
add
int3
inc
in
mov
or
hlt
and
hlt
add
push
hlt
or
pop
jae
pusha
lock
mov
rcr
xchg
jne
pop
scas
fs
cwde
push
outs
mov
sub
fimul
pop
or
jmp
xchg
push
aad
add
rol
gs
mov
daa
push
sub
stc
inc
adc
sbb
(bad)
pusha
mov
dec
gs
and
push
and
ret
clc
cli
shl
or
(bad)
sahf
pop
pop
mov
xor
lods
inc
or
inc
(bad)
jnp
fidiv
jo
pop
sbb
or
push
stos
(bad)
push
adc
mov
dec
or
dec
gs
push
ds
pop
daa
push
sbb
das
push
adc
inc
inc
pop
and
and
pop
stos
stos
(bad)
daa
push
movs
pop
adc
fwait
lea
and
das
and
aad
imul
mov
fmul
pop
or
pop
loopne
inc
mov
push
and
and
pop
push
jg
sub
mov
add
mov
adc
inc
imul
ins
or
js
mov
mov
mov
inc
sub
inc
sub
lods
sbb
jle
lods
imul
(bad)
es
aam
ja
pop
add
xor
retf
inc
and
adc
xor
add
outs
push
jo
je
jo
or
and
sub
je
jle
mov
and
or
push
push
call
call
sbb
xchg
hlt
pop
lea
adc
rcl
adc
cmp
jns
imul
arpl
test
push
and
pop
pop
inc
xchg
xor
call
adc
cmp
loop
inc
dec
xchg
iret
mov
inc
jo
call
mov
fist
xchg
gs
sub
push
mov
pop
ret
mov
pusha
dec
sbb
and
or
add
sar
test
sbb
xor
std
nop
aam
sub
mov
cmp
les
inc
xchg
or
jne
sti
push
sub
data16
pop
cmp
push
cld
mov
jmp
push
push
sti
nop
imul
sbb
les
or
adc
or
add
shl
adc
in
sbb
sbb
ins
imul
cmps
jmp
push
loope
xchg
in
jg
das
call
fmul
imul
push
xchg
cwde
pop
add
and
cmp
out
pop
or
cmp
and
push
push
jns
sub
ret
cld
sub
in
xchg
test
mov
(bad)
lea
nop
sbb
dec
xor
adc
pop
or
addr16
shl
mov
mov
jmp
daa
adc
cwde
mov
sub
aaa
xor
inc
cmc
pop
mov
push
pop
xor
fsubr
add
mov
mov
dec
dec
sti
aam
mov
inc
lock
cmp
or
cmp
cmps
sub
and
rol
push
and
cwde
lea
mov
in
cld
inc
fdivr
je
or
pop
mov
mov
dec
and
daa
inc
push
cld
in
adc
fimul
adc
popa
sti
sub
sar
loopne
loopne
jp
sbb
mov
sbb
mov
mov
inc
test
inc
mov
lods
adc
inc
sbb
push
mov
add
push
pusha
cmps
pusha
int3
test
movs
lods
fdivp
or
xor
xor
inc
rcr
xlat
int
call
or
repnz
sub
xor
and
sub
out
xor
adc
in
mov
push
bound
push
mov
fadd
in
pusha
fdiv
nop
jecxz
mov
in
ret
cmp
out
jl
and
sbb
ror
aam
mov
add
lods
aam
test
push
cmc
inc
fiadd
nop
pop
pop
mov
xchg
or
ins
add
test
add
clc
cmp
or
lock
and
cmp
jne
sub
ficom
inc
pop
sub
inc
sti
add
cwde
mov
das
ficomp
add
mov
mov
loopne
sbb
mov
jbe
test
pop
(bad)
je
mov
push
mov
call
das
xchg
gs
mov
cmp
inc
sbb
inc
jmp
aas
or
add
cs
xchg
push
je
cmp
repnz
vxorps
sbb
adc
push
mov
adc
push
jecxz
cmp
rcl
add
inc
add
lea
adc
adc
jo
mov
sbb
xchg
hlt
push
and
sub
jns
sub
sbb
mov
sbb
xchg
push
pusha
inc
inc
daa
pop
or
adc
xor
shr
fisub
jmp
pop
rol
push
sub
pop
add
mov
jno
xor
sub
inc
aaa
xor
dec
loope
dec
ret
adc
push
outs
outs
lea
adc
ja
mov
sbb
or
sbb
outs
dec
and
or
sbb
push
ja
adc
jmp
fiadd
add
(bad)
ins
jle
shl
ret
xchg
cmc
cmp
enter
test
inc
enter
jne
adc
clc
or
ret
mov
mov
or
or
jo
loopne
jle
aad
jge
pop
add
or
or
sti
bound
adc
or
retf
or
add
adc
and
mov
mov
pop
outs
dec
cmp
inc
rol
mov
test
dec
cmps
out
or
sub
xor
jle
or
div
call
push
rcr
sub
lahf
mov
sti
test
mov
dec
lahf
inc
inc
movs
ret
dec
jo
xchg
sub
xor
dec
shr
aas
or
cmp
or
sub
xchg
fstp
or
ucomiss
pop
cmp
pop
fsub
mov
adc
je
pop
mov
mov
jb
inc
popa
xor
inc
adc
fisub
aas
jo
or
add
push
inc
mov
ds
push
inc
cmp
sub
adc
fld
sub
daa
test
leave
cmp
int
sub
lock
sbb
pop
xor
in
lock
or
sahf
mov
lods
inc
inc
daa
cmp
cld
push
cmp
add
shr
(bad)
cmps
inc
iret
xchg
ret
push
test
adc
mov
mov
test
test
sbb
(bad)
push
and
and
cdq
inc
dec
and
mov
jo
shl
es
fisubr
inc
sbb
push
cmps
mov
retf
out
pop
pop
imul
out
aad
push
pop
dec
jae
rol
mov
and
xor
sub
inc
mov
outs
neg
xor
sbb
ins
adc
add
xor
icebp
and
inc
daa
add
ss
xor
sbb
enter
add
pop
and
ins
fs
jnp
xor
sub
rcl
xor
pop
xor
or
pop
adc
aaa
pop
xor
pop
cmp
or
test
rol
addr16
xchg
mov
outs
add
in
and
lock
ret
aas
out
push
xor
adc
add
dec
cmp
pop
dec
dec
pop
(bad)
sbb
in
push
mov
xor
or
push
ret
cmp
scas
imul
jmp
sbb
mov
mov
icebp
cld
adc
imul
mov
fcmovnbe
pop
adc
sub
pop
in
or
adc
or
xchg
sbb
or
(bad)
loop
fiadd
lods
or
mov
xchg
dec
mov
pop
je
mov
addr16
cmp
nop
in
call
inc
daa
mov
retf
mov
cwde
pop
pusha
sub
push
xor
pop
pop
cmp
out
add
and
mov
mov
in
in
xor
out
addr16
mov
push
movs
or
dec
pop
shl
xor
adc
pop
call
sub
inc
ins
sbb
pop
and
push
ss
mov
dec
jo
es
and
movs
ja
pop
sahf
imul
dec
adc
neg
mov
push
mov
sub
xchg
cmp
adc
popa
push
adc
adc
push
pushf
dec
cmps
push
div
dec
add
jnp
push
mov
ret
pop
mov
adc
adc
or
adc
(bad)
mov
fs
sub
inc
ins
add
sbb
sti
(bad)
imul
outs
push
cmp
or
fdiv
psubsw
or
hlt
cmp
ins
fadd
and
and
jmp
adc
dec
cmp
cmp
js
mov
adc
xchg
aas
mov
cmp
jl
jp
lods
pop
pusha
cmp
dec
loope
into
ret
rol
mov
push
push
inc
cmp
mov
pop
or
mov
mov
add
das
test
and
jl
data16
adc
sub
push
nop
add
loopne
dec
sub
sbb
and
mul
dec
inc
hlt
cmp
cmp
xlat
push
push
arpl
ret
je
adc
and
jae
sbb
sbb
inc
add
add
sbb
add
jae
movs
nop
mov
movs
xchg
js
popa
ins
call
cmp
jge
push
rcl
push
retf
mov
adc
out
jmp
jae
adc
or
or
data16
add
cmps
or
scas
mov
push
or
dec
ins
shl
sub
aas
fild
inc
mov
fdiv
xor
lock
sti
inc
div
add
mov
sub
push
lahf
ficomp
imul
sbb
rcr
iret
and
pop
es
push
fmul
nop
rcr
sbb
mov
sahf
mov
push
and
lods
ds
jbe
(bad)
fistp
int3
sub
(bad)
or
push
add
sbb
add
push
scas
daa
lock
mov
xchg
stc
sbb
(bad)
fdiv
hlt
cmp
pusha
cmps
add
gs
add
mov
imul
ret
dec
and
test
push
inc
cmp
and
mov
mov
movs
jo
mov
movs
inc
cmp
ret
daa
sbb
call
jb
nop
fst
inc
mov
ins
or
add
or
ds
mov
loope
test
dec
inc
cmp
jne
scas
sub
xchg
aam
and
xor
cmp
jl
jge
or
inc
rol
and
cmp
das
mov
sbb
push
mov
jg
pop
pusha
mov
lods
pop
jmp
loopne
sar
dec
mov
call
dec
add
ret
dec
jb
mov
dec
into
pusha
mov
mov
lahf
shl
mov
mov
adc
js
adc
pop
mov
imul
xor
mov
shr
push
movs
inc
and
loopne
shl
call
sub
push
test
pop
add
xlat
xor
fwait
clc
aaa
mov
in
xor
je
add
pushf
movs
enter
loopne
ror
loopne
jnp
or
inc
or
call
push
inc
push
pop
retf
mov
jbe
cmp
(bad)
cs
xor
sub
loope
test
sbb
cs
dec
retf
xor
adc
add
mov
iret
xchg
shl
sbb
test
jle
jnp
adc
hlt
and
test
cmp
and
push
adc
adc
dec
add
add
rcl
test
pushf
ret
out
pusha
rcl
nop
dec
adc
inc
(bad)
es
sub
jecxz
mov
loope
paddusb
mov
cmp
ja
ds
xor
addr16
adc
jne
push
addr16
xchg
sub
pop
leave
add
mov
hlt
mov
pop
test
xor
in
test
sub
sub
pop
add
inc
popf
sbb
call
mov
xor
push
push
jns
push
add
movs
popa
cmp
lea
scas
sti
imul
jge
movs
xchg
jge
and
loopne
cwde
mov
sub
popa
sub
or
arpl
push
lea
aaa
pusha
mov
mov
loopne
jecxz
stc
mov
rcl
or
xchg
sbb
inc
or
mov
or
ss
mov
ds
pop
mov
cmp
add
in
mov
sub
push
add
mov
js
pop
ds
jne
mov
adc
scas
sbb
loope
adc
clc
inc
je
ret
iret
call
fadd
scas
push
sbb
adc
inc
ficomp
pop
mov
cmp
lea
sub
in
mov
inc
and
mov
inc
xor
xor
out
lock
cmp
mov
jmp
mov
xor
stos
push
add
adc
push
fldenv
xlat
pop
inc
arpl
inc
or
push
inc
pop
bound
mov
and
cld
jge
push
or
add
outs
call
movs
lahf
jne
lea
lods
mov
cmp
push
pop
sbb
shl
add
inc
push
cmp
(bad)
retf
mov
loope
add
mov
out
je
xor
clc
pop
push
shr
enter
mov
ffree
lods
jmp
jp
sbb
push
clc
xchg
movs
or
sub
add
cmp
pusha
adc
outs
push
or
fisttp
js
pop
ja
inc
xor
cld
in
mov
fcomp
cdq
(bad)
(bad)
movs
and
push
cmp
inc
mov
inc
pop
rol
sbb
and
inc
(bad)
fcmovu
adc
push
iret
push
jns
add
and
add
loopne
sub
sbb
ret
xchg
inc
loope
sub
sub
cmp
mov
xchg
sub
xor
jl
adc
jmp
(bad)
jo
sbb
sar
push
sbb
into
imul
add
imul
push
sub
dec
in
scas
sar
ret
mov
mov
gs
or
call
add
das
mov
call
adc
push
mov
jnp
sub
call
jmp
test
sub
or
adc
rol
inc
pop
mov
std
dec
and
hlt
and
xchg
mov
sar
out
add
mov
sub
sub
pop
and
sub
push
retf
gs
mov
dec
push
lock
dec
rcl
movs
pushf
in
cmp
pop
es
rol
adc
cmp
(bad)
(bad)
jno
mov
jl
loopne
push
loope
jmp
add
nop
xor
loope
loope
or
pop
adc
shl
ds
and
add
xor
cmps
add
or
clc
fwait
xchg
sub
call
inc
jb
dec
aas
dec
inc
inc
sgdtd
push
imul
and
or
aas
cmp
jne
dec
mov
adc
dec
test
aam
add
dec
ja
int3
imul
nop
add
pop
push
cmp
call
repnz
adc
sbb
cmp
je
and
and
lock
adc
mov
pop
and
test
pusha
int3
nop
cld
mov
test
and
mov
cs
inc
imul
clc
sub
xor
mov
les
jmp
repnz
pop
push
mov
or
xlat
test
mov
lea
fadd
(bad)
(bad)
mov
adc
xor
cmp
sub
je
rcr
cld
add
pop
sbb
or
cs
sub
loopne
sub
in
sub
fild
add
lahf
test
(bad)
rcl
adc
jne
pop
addr16
or
add
loope
ret
lock
cmp
aaa
cwde
add
jmp
das
sub
sbb
stc
adc
mov
daa
dec
push
add
add
push
jmp
inc
je
or
je
jmp
mov
xor
add
xor
adc
stos
pushf
cmc
call
sbb
cmp
fiadd
in
jmp
mov
or
sbb
mov
push
inc
or
aas
push
imul
mov
je
(bad)
jl
cld
pop
add
or
fsub
loope
dec
cmp
pop
mov
sub
dec
mov
xchg
(bad)
fstp
imul
add
push
mov
xchg
in
jp
clc
push
js
or
jb
scas
mov
xchg
js
xchg
pop
inc
jne
push
jno
sub
inc
jecxz
adc
push
aaa
ds
pop
sub
pop
scas
or
add
push
retf
mov
mov
daa
push
ds
pop
gs
daa
js
mov
sub
add
add
mov
push
sub
inc
inc
cmp
push
mov
ret
ja
jg
movs
inc
cmp
xor
divps
sbb
add
add
dec
or
sub
jns
(bad)
push
cmp
jg
or
mov
sub
jg
and
jg
idiv
pop
cmp
nop
or
cs
inc
scas
loopne
call
or
(bad)
sbb
or
sbb
mov
push
ret
mov
xchg
out
xor
data16
adc
cmp
pop
les
pop
shl
jg
rcr
sbb
and
out
mov
and
outs
add
aam
fadd
mov
not
sub
gs
pop
addr16
dec
push
push
sub
mov
adc
push
mov
(bad)
dec
add
enter
cld
test
or
adc
pop
add
ja
pushf
(bad)
in
mov
test
sub
push
cmp
dec
out
inc
sub
cmp
cmp
scas
jne
outs
push
imul
push
jne
push
inc
or
push
das
fisttp
mov
cmp
adc
dec
ins
pop
jge
push
add
loop
xor
push
fiadd
add
jmp
sbb
popa
push
or
movs
outs
push
mov
mov
add
fild
mov
inc
add
push
jge
movs
ret
and
mov
inc
(bad)
nop
call
xor
xlat
fadd
add
dec
outs
inc
mov
xchg
xor
xlat
sbb
and
pusha
ins
outs
sub
dec
mov
push
xor
jecxz
enter
js
cmp
dec
xchg
mov
mov
add
lods
(bad)
je
adc
inc
add
js
adc
mov
push
sub
sbb
push
dec
adc
cmp
and
add
add
dec
leave
adc
cmp
cmp
jl
pop
and
jmp
popa
push
mov
inc
rcl
mov
stos
scas
inc
pusha
add
inc
xor
fwait
idiv
cmp
loop
cli
add
sub
pop
aam
rcl
lods
retf
mov
in
arpl
sub
mov
imul
xchg
inc
sub
in
ffreep
cs
das
dec
dec
pop
cmp
pusha
fld
jp
and
test
imul
sbb
or
out
(bad)
in
pop
popa
lock
ins
cs
jno
push
sub
xchg
xchg
mov
cmp
movs
div
dec
in
sbb
pop
add
adc
test
and
push
scas
adc
dec
dec
cmp
cmp
push
dec
arpl
push
mov
movs
add
pushf
scas
fadd
xchg
inc
or
and
jo
cmp
les
xchg
daa
xor
sti
mov
scas
loopne
call
jle
loopne
jo
rcl
jbe
rcr
mov
(bad)
ror
add
xchg
mov
or
inc
(bad)
xor
mov
das
sbb
js
jmp
mov
jg
xor
or
in
or
ret
out
or
pop
mov
dec
inc
pop
and
jbe
push
push
call
add
outs
or
xchg
test
out
enter
ja
add
push
and
push
in
jmp
mov
shl
sbb
pusha
inc
pop
ja
mov
pop
and
rcr
daa
daa
mov
cmp
fisub
add
push
fucom
sbb
add
mov
fmul
push
push
push
sub
jp
add
sbb
push
mov
pop
addr16
add
jge
jo
je
inc
fidiv
or
sub
lock
fcom
add
or
xchg
int3
xchg
dec
xor
jo
div
inc
imul
nop
pusha
sbb
shr
pop
sbb
inc
int3
cmp
jbe
or
push
push
loopne
mov
dec
out
les
adc
lock
pop
sbb
jp
add
dec
jne
rcr
mov
add
test
in
jno
push
or
or
pusha
into
imul
add
test
aam
int3
and
jmp
jbe
xchg
add
add
lock
rcr
push
pop
pop
fst
call
cmp
push
push
pop
rol
sbb
jmp
jl
jbe
push
mov
mov
mov
arpl
(bad)
pop
(bad)
scas
cli
rcl
sar
xor
imul
and
loope
push
fdiv
(bad)
cmp
in
inc
and
add
push
inc
xor
or
mov
movs
stc
push
adc
shl
sbb
call
shl
jbe
adc
add
push
dec
and
sar
inc
stos
fs
lahf
and
lea
inc
mov
or
inc
mov
and
sub
inc
xchg
imul
call
mov
rol
enter
daa
inc
es
mov
inc
jne
sbb
retf
or
cmp
(bad)
and
ja
add
loopne
xchg
mov
sbb
and
jl
jno
shr
jmp
inc
jecxz
or
adc
or
cmp
inc
add
push
daa
pop
inc
ror
rol
fs
test
add
jle
loop
add
nop
mov
sbb
push
jl
lock
cmp
inc
adc
mov
ins
push
jmp
sbb
adc
xor
push
or
in
pop
test
xlat
ja
ror
adc
inc
call
lock
mov
clc
daa
mov
sub
adc
sbb
sbb
dec
inc
xor
mov
push
ret
xadd
retf
inc
jo
ret
xlat
cmp
cmp
fisubr
pop
jbe
lods
or
xchg
sub
sub
into
outs
adc
rcr
sbb
push
jno
cwde
int
dec
loopne
push
push
xchg
mov
inc
popf
adc
adc
jmp
je
fmul
add
rcl
or
lea
or
pop
and
sbb
sete
inc
jg
add
inc
adc
neg
cwde
and
fadd
ret
lock
adc
inc
sub
lods
aaa
mov
shl
dec
sbb
retf
and
push
or
inc
pop
in
je
mov
movs
add
add
push
cdq
add
fdiv
lea
(bad)
rcl
inc
xor
or
push
add
sub
sub
push
dec
and
imul
push
pop
mov
ret
je
es
push
push
jmp
dec
js
adc
xor
add
sub
outs
or
mov
inc
cmp
cmc
(bad)
(bad)
outs
(bad)
lock
dec
in
arpl
sbb
sbb
mov
mov
imul
cld
pop
int3
add
out
pop
xor
dec
sbb
das
dec
imul
mov
sub
mov
mov
(bad)
mov
push
(bad)
ja
sub
jb
sub
je
jmp
(bad)
mov
jg
inc
js
dec
xchg
mov
add
aaa
pop
jno
mov
mov
mov
xchg
pop
mov
mov
push
movs
sbb
les
mov
cld
dec
mov
adc
es
ja
and
dec
int3
adc
jmp
fdivr
stos
dec
(bad)
clc
jmp
ret
fdivr
add
inc
mov
test
push
pushf
mov
sbb
enter
mov
and
inc
in
xchg
in
lock
retf
test
push
enter
xor
or
sbb
lods
inc
sub
xor
sbb
adc
fwait
xchg
cmp
je
cmp
push
and
mov
or
mov
or
adc
repz
cmp
fisttp
loopne
je
xchg
push
mov
or
dec
pushf
jmp
(bad)
and
cmp
shl
call
(bad)
aam
adc
loopne
mov
movs
shl
into
jl
ins
dec
sbb
in
(bad)
lods
(bad)
xchg
sub
mov
pop
ins
fstp
sahf
cmp
cmp
adc
mov
pop
imul
and
dec
rol
adc
out
push
push
push
(bad)
lock
or
stc
fs
jno
fcomp
or
data16
push
add
add
jmp
cmp
call
outs
pop
cmc
xor
(bad)
adc
and
inc
sub
and
fcom
popa
xchg
inc
shr
add
or
mov
push
shl
mov
sti
push
mov
cmp
add
xor
push
sub
repnz
aaa
nop
and
cmp
sub
(bad)
sub
jo
movs
shl
and
dec
jbe
pop
xor
inc
sahf
js
mov
adc
adc
sbb
mov
adc
sbb
add
loopne
je
pop
in
add
mov
jge
vmlaunch
leave
cli
out
add
xchg
and
and
scas
or
adc
lock
sbb
cmps
inc
push
outs
stos
lock
push
jle
fldenv
pop
in
in
sbb
pop
jmp
inc
push
xor
sub
inc
add
pop
lea
jno
mov
jo
loope
and
dec
inc
ror
test
lock
and
shr
retf
rcl
ror
or
lods
cmps
sub
cs
das
scas
or
fdivr
inc
ins
xor
add
popf
push
mov
pushf
inc
ror
add
stos
add
scas
(bad)
in
jne
add
(bad)
popa
jge
adc
rcr
xchg
sbb
add
pusha
lods
dec
xor
jmp
sbb
jne
cmp
je
jo
jnp
xor
pushf
ret
idiv
adc
jns
inc
add
or
cmp
rol
inc
mov
sar
aam
xchg
xchg
(bad)
mov
es
imul
jb
adc
and
je
sbb
or
add
dec
jne
push
outs
test
xchg
adc
mov
retf
sbb
iret
lea
jne
dec
sub
ins
sub
or
inc
hlt
pop
sub
stc
inc
mov
loope
xor
adc
adc
outs
dec
out
aam
jg
(bad)
int
test
pop
aas
push
push
add
enter
popf
push
(bad)
jmp
sbb
aad
mov
fcom
les
mov
mul
mov
add
ins
mov
xchg
shr
nop
gs
pop
cmp
mov
adc
jmp
mov
aaa
mov
cmp
jne
mov
(bad)
pop
push
xchg
mov
pop
daa
and
mov
or
ror
lock
add
cmp
shl
fist
hlt
mov
cmp
mov
xor
jl
inc
fcomp
xlat
mov
pop
sbb
cmp
retf
jg
sbb
pusha
inc
data16
rol
call
mov
outs
ficom
dec
xor
rcl
enter
inc
add
xchg
mov
out
and
sbb
dec
inc
jb
mov
out
mov
or
inc
movs
xchg
jecxz
push
push
dec
mov
add
mov
mov
mov
fbld
fdivr
mov
sub
mov
mov
jecxz
lods
sub
adc
or
rcr
pop
push
dec
and
pop
cmps
rol
dec
lods
inc
jae
loope
or
inc
cmp
cmp
or
inc
cmp
adc
not
jecxz
test
push
xor
test
inc
push
jne
cmp
mov
ds
jmp
out
or
or
and
adc
xchg
sbb
daa
inc
loopne
add
test
(bad)
outs
stos
add
or
adc
or
and
lea
mov
inc
clc
push
mov
add
sbb
je
sbb
(bad)
sub
mov
cmps
not
pusha
icebp
xor
xlat
or
test
pop
and
push
or
mov
and
rol
imul
add
and
adc
add
aad
not
cli
lods
mov
cmp
and
or
adc
addr16
cmp
mov
xor
sub
pop
sub
sbb
jmp
cld
inc
les
sbb
sbb
push
jno
jge
xor
imul
pop
jmp
outs
pop
imul
fnsave
or
shl
jns
jo
dec
inc
pop
sub
ja
jo
loope
ret
in
dec
and
jle
push
int3
push
imul
into
adc
scas
js
push
aas
call
test
adc
scas
movs
aam
push
fsubr
test
push
add
clc
or
cmp
sub
dec
sar
add
adc
fild
xchg
sbb
push
pop
sti
or
dec
sub
dec
add
cmp
ja
pusha
or
lods
sbb
add
pop
or
xor
pop
mov
sbb
sub
push
add
and
shl
sub
in
inc
repz
jl
push
je
mov
sar
pushf
call
fdivr
jae
in
call
inc
xor
inc
mov
or
sub
push
imul
ret
push
nop
dec
push
xor
xor
cmps
ret
and
xor
sbb
mov
popf
sbb
dec
mov
dec
cmp
ret
xlat
mov
ret
xor
dec
dec
cmp
mov
test
mov
jnp
pop
pop
fisub
push
xlat
dec
fwait
les
adc
retf
je
std
rol
scas
mov
pop
lods
adc
mov
cdq
jae
inc
bound
test
push
lds
movs
xor
pop
push
mov
mov
push
mov
or
dec
mov
add
push
xor
in
imul
jle
jmp
test
add
add
jle
nop
mov
mov
fwait
popa
xor
jp
dec
add
retf
add
std
dec
adc
inc
ja
adc
scas
and
test
adc
pop
pop
adc
and
and
icebp
sar
cmp
addr16
imul
cmp
add
adc
mov
xchg
add
push
outs
sub
outs
pushf
adc
out
outs
inc
push
mov
push
xor
stos
sub
in
in
imul
push
sub
adc
mov
(bad)
mov
loope
(bad)
jmp
jae
lods
bound
cld
cdq
lods
sbb
addr16
sbb
sub
sbb
pop
aas
adc
push
inc
sub
clc
inc
ss
push
mov
dec
int3
gs
and
shr
mov
jmp
shr
xor
fwait
and
xchg
data16
dec
ret
cmp
test
add
cmc
sub
add
pop
xchg
inc
or
jg
push
loop
mov
jae
lock
stos
lods
push
push
into
or
arpl
jo
or
popf
aaa
mov
ficomp
or
test
add
jb
or
adc
test
popa
pop
out
bound
jo
(bad)
(bad)
and
inc
xor
stos
hlt
pop
outs
movs
cwde
mov
add
sbb
pop
(bad)
xchg
sub
(bad)
inc
ins
mov
mov
dec
xor
aam
inc
add
push
mov
and
mov
dec
add
lds
(bad)
sub
dec
dec
push
and
mov
arpl
or
repz
adc
inc
in
leave
push
sbb
fcom
and
cmp
or
sub
push
adc
jo
and
jns
cmp
scas
jle
or
jne
push
repz
mov
ins
test
je
ret
xchg
jns
mov
xlat
add
sar
clc
out
push
xor
cmp
dec
and
xchg
cmp
shl
and
lock
lea
sub
hlt
pop
sub
cmp
inc
fcomp
adc
out
movs
(bad)
sbb
or
cmp
aas
and
ins
cmp
int3
cwde
fsub
pop
and
cmp
xor
push
xchg
pop
fs
aaa
xor
fwait
adc
inc
mov
mov
jo
add
dec
gs
sar
call
add
dec
scas
push
adc
retf
push
aas
(bad)
jb
add
inc
xchg
xor
xor
pop
les
add
(bad)
cs
loope
pop
ret
mov
test
push
push
push
dec
inc
push
dec
pop
adc
xchg
clc
sub
lea
sbb
ret
stc
inc
sti
aaa
mov
add
jb
adc
sub
jmp
mov
cld
and
jmp
mov
xor
push
add
pusha
push
or
push
sbb
push
cmp
xchg
dec
inc
(bad)
fistp
mov
and
cmp
ja
xchg
sub
rol
addr16
sbb
ret
pusha
pop
ret
jmp
and
cdq
inc
and
sbb
and
fwait
add
imul
sbb
fisttp
add
mov
xchg
popf
test
dec
dec
mov
xor
mov
popa
sub
scas
push
ja
pop
loop
outs
hlt
add
pop
(bad)
pop
dec
sbb
cmps
or
in
popf
add
cmp
(bad)
sub
jmp
and
mov
push
sub
jnp
rcl
js
cmps
add
xchg
xchg
add
gs
inc
test
sbb
enter
ins
push
jo
xchg
int3
jecxz
les
aam
(bad)
and
in
outs
loopne
fmul
pop
adc
jbe
mov
or
lock
jp
mov
jno
xor
adc
movs
nop
hlt
sbb
add
push
dec
mov
aas
mul
sub
or
pop
imul
clc
push
mov
mov
cs
and
push
(bad)
push
add
or
push
out
shl
ins
push
dec
les
push
and
cmovb
(bad)
adc
call
pusha
sti
mov
and
push
mov
les
or
(bad)
shl
(bad)
pushf
mov
in
dec
mov
add
ins
push
jp
loop
loop
mov
pop
mov
mov
ss
loop
and
das
inc
cmp
movs
add
jae
xor
lock
push
xor
mov
sbb
cli
jns
aaa
or
xchg
inc
jle
or
fwait
and
xchg
mov
xchg
sbb
loop
dec
and
shl
inc
adc
ds
dec
ins
dec
aaa
push
sub
push
and
es
mov
push
sbb
jno
mov
dec
cmps
jb
jae
or
push
outs
in
pop
in
mov
push
ja
enter
inc
mov
jb
gs
push
push
jb
imul
outs
cmp
je
dec
bound
je
adc
out
imul
mov
dec
dec
and
push
std
ret
neg
or
xor
xchg
adc
push
push
popa
std
in
pop
inc
inc
jb
lods
sbb
jle
push
or
mov
daa
adc
add
and
add
mov
es
push
fld
push
pop
imul
xlat
xchg
and
inc
imul
gs
sub
add
xchg
cmp
clc
jnp
daa
pop
sar
das
ror
and
xchg
mov
imul
adc
les
pop
and
aam
iret
retf
push
clc
inc
push
push
dec
outs
mov
inc
jle
das
stos
bswap
dec
test
or
inc
cdq
js
sub
js
call
pop
mov
jmp
lock
hlt
jnp
sbb
mov
and
pop
mov
jl
xor
push
or
nop
out
dec
sub
retf
les
xor
and
push
ror
icebp
inc
mov
test
cwde
icebp
mov
pop
dec
sub
push
mov
dec
mov
neg
pop
mov
pusha
mov
cdq
pop
push
pop
or
adc
xor
cdq
or
(bad)
movs
pop
sbb
ins
mov
pop
mov
mov
dec
sbb
push
dec
loop
add
pusha
sti
enter
jge
into
jle
test
icebp
ins
push
call
add
xor
cmp
adc
dec
jge
push
xchg
inc
add
cmps
pop
clc
pop
pop
ret
and
fiadd
scas
inc
jle
(bad)
in
and
xchg
inc
sbb
cmp
fimul
sbb
call
lods
sbb
sbb
call
sbb
push
sbb
adc
sbb
add
mov
pop
cmp
or
inc
xchg
loop
dec
or
inc
pop
adc
pop
pop
or
inc
sti
(bad)
and
sti
or
inc
cmp
shl
leave
les
aaa
mov
sbb
jecxz
pusha
mov
cmp
xor
sbb
fs
jmp
xlat
add
in
jle
jo
add
js
test
mov
add
jmp
cwde
sahf
adc
scas
sti
mov
mov
mov
ret
inc
(bad)
mov
push
std
and
adc
(bad)
dec
cmp
ja
and
bt
jae
or
inc
js
mov
jne
mov
xchg
lock
scas
add
fld
jecxz
and
pop
ret
mov
inc
lahf
fmul
jbe
mov
aad
ret
push
jne
or
mov
adc
cmp
enter
aas
add
imul
adc
(bad)
fstp
sbb
mov
inc
ds
fcomp
or
repz
cmps
and
sbb
or
daa
add
imul
or
mov
add
add
adc
inc
add
mov
outs
movzx
inc
sti
sbb
je
mul
loopne
and
add
and
shl
or
and
retf
(bad)
pushf
adc
ss
fsubr
jecxz
cmp
mov
pop
jbe
mov
cmp
test
clc
jno
shl
mov
(bad)
movs
pop
xor
test
xchg
or
ret
test
test
mov
pusha
mov
aas
inc
sub
inc
and
jp
in
push
fmul
inc
adc
xchg
push
es
out
push
sbb
push
gs
sbb
inc
add
clc
push
es
or
dec
ja
or
pop
cli
out
jge
adc
leave
enter
lds
test
in
leave
xchg
iret
pop
test
repz
(bad)
xchg
inc
add
and
xor
lock
xchg
or
es
mov
nop
nop
test
inc
lock
clc
dec
pusha
mov
loope
mov
jno
loopne
rcr
stos
xchg
push
arpl
mov
fist
jb
and
and
loopne
dec
and
imul
jno
sbb
loopne
loopne
jp
inc
imul
es
or
adc
outs
enter
dec
ins
or
jne
nop
xchg
and
jne
or
cmp
or
or
js
data16
sbb
outs
or
push
adc
and
or
outs
arpl
dec
sbb
add
mov
add
sub
or
popa
ret
adc
inc
push
mov
and
pop
inc
(bad)
add
out
scas
add
or
add
dec
sbb
or
in
popa
inc
ss
inc
and
inc
or
pop
add
push
mov
add
daa
pop
inc
jg
pusha
sub
push
jns
push
fs
outs
retf
ja
ret
add
pop
outs
test
int
loopne
es
adc
push
and
push
mov
pop
mov
popw
pusha
das
mov
pop
xor
xchg
(bad)
test
or
add
fcomp
sbb
or
xor
pushf
mov
bound
jne
inc
ins
add
ins
shl
jno
nop
inc
push
mov
jne
ins
dec
in
mov
aaa
jecxz
pop
adc
or
push
lods
and
xchg
test
fwait
and
scas
or
mov
xchg
stos
dec
xchg
push
dec
mov
rcl
pop
push
mov
or
daa
jo
lods
call
and
jae
add
or
push
jge
(bad)
xor
(bad)
int3
mov
push
out
pop
inc
es
das
xchg
push
or
test
test
push
loopne
or
mov
and
jge
xchg
call
mov
cdq
popf
jmp
dec
sbb
xor
mov
jb
cmps
in
je
fs
pop
mov
mov
sbb
aaa
in
sbb
jb
sub
push
dec
mov
(bad)
outs
sbb
dec
gs
add
dec
into
sub
xchg
ins
xchg
mov
pop
test
ds
jno
xor
in
jmp
jo
and
outs
jo
in
pop
lea
imul
das
inc
mov
imul
xchg
mov
jmp
je
popa
ds
in
pusha
pcmpgtd
mov
pinsrw
pop
outs
stos
mov
push
push
out
imul
sbb
or
mov
sbb
mov
not
xor
mov
push
test
pop
test
push
inc
cmp
outs
leave
jo
daa
jecxz
sti
add
inc
loop
(bad)
and
hlt
test
les
ins
adc
sbb
in
jg
adc
(bad)
test
xor
clc
cmp
or
ins
xchg
push
inc
rcl
pop
jnp
js
mov
outs
add
or
xchg
adc
pop
popf
add
push
adc
adc
dec
inc
dec
inc
and
dec
pop
inc
push
push
mov
cld
iret
enter
or
jne
je
mov
dec
lock
or
push
or
std
dec
jg
adc
push
push
xchg
imul
outs
addr16
or
out
add
lds
(bad)
jmp
cmp
out
push
lods
mov
and
je
push
scas
xor
adc
and
je
test
add
add
cmps
add
cmp
inc
es
inc
inc
ins
add
inc
push
loopne
mov
push
js
xchg
mov
dec
jle
pop
or
jg
jg
sbb
adc
sub
neg
sbb
(bad)
jbe
xchg
xchg
xchg
mov
and
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
(bad)
leave
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
sbb
mov
mov
shl
xor
inc
mov
and
push
inc
jne
add
xor
push
jno
push
or
push
xor
out
xchg
inc
imul
cmp
cmps
fs
xlat
pop
or
adc
add
ror
sar
or
inc
push
inc
dec
dec
push
aaa
in
jmp
or
dec
gs
imul
or
imul
push
outs
jo
lea
fmul
aaa
lea
sub
push
fcom
inc
outs
jle
xor
nop
idiv
sbb
in
pop
xchg
ret
push
push
push
push
ds
sbb
nop
nop
enter
das
int3
int3
enter
sbb
(bad)
les
sbb
sub
mov
sub
mov
sahf
xchg
or
inc
jle
dec
imul
aaa
inc
cmp
mov
sub
test
lods
and
and
mov
mov
and
(bad)
enter
and
rcl
fcomp
and
and
loopne
call
and
hlt
clc
cld
and
xchg
and
inc
add
or
and
and
adc
sbb
and
and
and
sub
and
and
xor
cmp
and
and
dec
dec
and
and
push
push
pop
pop
bound
and
movs
in
xchg
push
lds
push
add
mov
(bad)
mov
push
dec
xchg
mov
das
int3
mov
ins
cwde
push
loop
(bad)
lahf
cmp
push
loop
jp
dec
mov
sub
mov
mov
sub
xor
xchg
lods
shl
push
mov
cdq
mov
and
push
test
xlat
and
retf
enter
sub
push
push
movs
jb
pop
aam
sbb
fsub
loopne
fwait
push
sbb
inc
gs
sub
in
lock
cwde
and
and
loopne
add
sub
cld
and
pushf
sbb
or
sub
push
pop
adc
adc
sbb
xor
xchg
add
and
test
and
movs
xor
xchg
sub
retf
push
xor
nop
sar
cmp
gs
sub
inc
adc
sub
push
mov
or
gs
dec
lods
push
xchg
xchg
add
test
shl
pop
jo
loope
add
xchg
adc
stos
push
cmp
fwait
or
dec
pop
ss
jno
cmp
push
imul
sub
dec
inc
(bad)
sbb
test
outs
sbb
jae
cmp
push
jb
loope
jnp
ja
inc
push
arpl
inc
fbstp
dec
push
push
pop
add
je
adc
or
mov
add
ja
iret
jae
xchg
pusha
out
addr16
pop
xchg
inc
adc
imul
mov
sub
xchg
dec
dec
das
stos
mov
loopne
(bad)
jae
inc
xchg
push
push
dec
sub
repz
mov
jbe
es
xor
aaa
dec
aam
popf
xor
ins
out
xchg
mov
inc
gs
dec
or
out
fisub
ja
jns
out
outs
jb
and
loope
jae
xor
aaa
xchg
mov
and
push
cmp
cmp
scas
outs
aas
aaa
imul
or
jne
push
mov
xchg
adc
popf
xor
addr16
add
inc
and
mov
pop
inc
and
stos
jg
mov
xor
ds
push
sub
pop
push
dec
inc
int
jmp
lahf
add
out
pop
and
ja
push
ins
lds
(bad)
in
push
pop
popa
inc
push
into
jae
mov
inc
push
jne
push
push
jnp
adc
aas
add
cmp
jg
inc
les
or
pop
xor
jg
jbe
aaa
and
popa
ins
fiadd
inc
cmps
xlat
xchg
div
popa
inc
stos
bound
or
stos
jne
rcl
xorps
pop
sbb
es
pop
imul
dec
rcl
fidivr
cmps
or
rcr
rcr
inc
xchg
arpl
addr16
add
add
cmps
sub
mov
ret
mov
ret
mov
je
call
lock
adc
or
mov
nop
add
repnz
fisttp
and
and
jg
sub
cmp
mov
add
push
xlat
push
dec
dec
dec
dec
push
dec
push
aad
add
inc
idiv
cmp
push
mov
(bad)
in
ss
jle
nop
sub
pop
call
push
call
inc
push
loopne
fmul
in
add
fcomp
jp
nop
inc
aam
cmp
neg
ja
iret
xchg
push
push
mov
push
pop
mov
int
mov
inc
inc
jb
or
and
push
stc
xchg
xor
sti
fcmove
xor
xor
pushf
push
and
dec
sub
cmp
adc
push
or
sbb
out
cmps
jge
mov
push
xor
push
hlt
push
enter
shr
mov
push
jbe
rol
fistp
and
outs
jb
sub
pop
lock
or
xchg
test
add
mov
retf
fild
pslld
mov
xchg
mov
mov
push
and
faddp
inc
xor
es
adc
mov
push
push
adc
imul
rol
cmp
loope
mov
das
xchg
mov
arpl
cmp
fst
(bad)
push
popa
in
mov
jb
rcr
ins
jo
adc
xor
add
xor
arpl
inc
jg
push
mov
mov
arpl
loope
das
mov
xor
push
jo
popa
or
add
sbb
jl
test
mov
sub
lahf
call
push
push
ret
mov
pop
or
data16
add
imul
sbb
icebp
inc
movs
shl
aad
adc
ins
dec
fistp
mov
dec
or
push
cmc
adc
movs
jno
movs
inc
daa
lea
stos
movs
(bad)
pop
mov
adc
push
inc
fwait
push
lods
add
sub
push
inc
(bad)
inc
dec
sbb
gs
or
shl
cld
pop
movs
scas
adc
shl
outs
jne
gs
ds
sub
ret
movs
mov
fisttp
inc
fld
sub
sub
jb
or
inc
jne
enter
and
sbb
mov
test
mov
cmp
pop
push
cmp
dec
cmp
inc
inc
xchg
xchg
movs
cmps
adc
add
add
or
inc
jbe
mov
shl
push
imul
add
cmp
ins
or
inc
outs
pop
and
outs
or
or
fbstp
mov
sub
sub
test
or
cmps
inc
xor
push
jp
add
add
dec
mov
ins
or
push
jne
jo
into
adc
or
bound
je
fadd
pop
push
and
inc
pushf
out
push
fld
test
shl
mov
mov
push
rol
aaa
xlat
push
lock
dec
jbe
mov
data16
or
les
adc
imul
sub
add
cwde
popa
dec
jecxz
inc
aas
inc
push
pusha
adc
outs
jl
aas
ss
pop
in
scas
in
and
add
pop
mov
sub
popa
scas
in
xchg
dec
sub
icebp
add
add
arpl
dec
daa
lods
add
test
cmp
dec
xchg
jg
mov
test
add
(bad)
jmp
jmp
pop
sets
in
jnp
inc
aam
add
or
movlps
fdiv
shr
stc
jmp
push
sub
sub
mov
adc
sbb
(bad)
mov
rcr
add
xchg
ins
sbb
or
inc
and
(bad)
movs
ror
add
shr
and
sub
iret
mov
jne
ror
pop
and
add
adc
xlat
das
shl
pop
add
and
enter
or
pop
sub
popa
ss
adc
or
push
xchg
ins
pop
mov
lea
test
jae
jne
or
and
xor
inc
jno
adc
dec
lods
jno
sbb
popf
or
adc
adc
jecxz
inc
aad
push
clc
jne
xchg
adc
aaa
aad
mov
fiadd
add
mov
add
or
and
rol
sbb
cwde
mov
inc
or
call
dec
sub
dec
sub
add
add
rcl
iret
in
in
inc
xchg
lods
pop
inc
lods
punpckldq
push
ds
xchg
sub
data16
add
push
xchg
mov
jns
lods
mov
mov
mov
cmps
push
cdq
ss
cmp
shr
pop
xor
xchg
adc
data16
cmps
xchg
stc
fidiv
pop
push
dec
push
pop
push
dec
xchg
fnstsw
cmps
mov
xchg
xchg
xchg
mov
imul
push
and
cwde
shl
loope
mul
sahf
lock
ins
jo
mov
rcr
jno
in
xor
mov
adc
pop
sub
adc
sbb
imul
mov
cmps
add
inc
ficomp
dec
mov
gs
xor
pop
jb
dec
arpl
fisttp
inc
jns
jp
cmps
sbb
jnp
pop
inc
ins
xchg
or
inc
int
dec
push
sub
ficomp
jecxz
ror
mov
inc
inc
imul
push
sub
mov
xor
ret
push
js
fsub
aaa
push
fmul
add
mov
outs
pop
test
jne
jae
and
call
test
pop
mov
push
loope
cmp
push
mov
jp
lods
ss
inc
hlt
add
(bad)
mov
test
inc
pop
sub
frstor
(bad)
jl
js
shl
cmps
push
mov
(bad)
adc
add
add
in
dec
sti
adc
mov
push
jb
jg
(bad)
add
jo
gs
fldln2
lock
fs
sub
bound
jo
shl
jb
push
cmp
pop
sub
mov
jo
pop
cmp
iret
jnp
cmp
push
jns
fdivr
sub
or
add
mov
mov
cdq
das
dec
gs
cmp
add
mov
add
or
shr
mov
aas
fst
test
xor
pop
mov
or
imul
out
pop
nop
es
adc
xchg
fs
jb
(bad)
idiv
or
cmp
jbe
mov
mov
or
inc
(bad)
js
mov
pop
outs
push
lock
sub
dec
and
sub
jno
add
mov
push
push
add
push
mov
out
mov
sbb
test
rol
or
pop
ss
pop
leave
ror
add
ins
mov
jo
inc
outs
inc
test
adc
add
mov
dec
(bad)
mov
add
pop
mov
add
add
fs
inc
inc
mov
mov
xor
inc
inc
cmps
retf
icebp
pop
mov
inc
inc
cmp
mov
into
lock
call
arpl
mov
(bad)
jl
ficom
(bad)
fdiv
pop
popf
dec
test
add
jno
cdq
test
in
popf
add
or
or
(bad)
call
test
push
and
call
aad
sub
cmp
test
push
call
inc
ret
aam
dec
add
cdq
movs
jmp
inc
or
mov
cwde
ret
cmp
dec
pop
push
nop
int
sub
adc
out
fidiv
call
cmps
push
imul
adc
cld
pop
in
jmp
xor
lahf
sbb
xor
and
mov
mov
and
push
or
push
cmp
push
nop
movs
mov
out
hlt
or
sahf
out
cmp
inc
dec
out
sahf
out
push
push
pop
pop
pop
inc
imul
or
cmps
pop
and
push
mov
popa
mov
xchg
test
xchg
cld
fsubr
adc
and
push
ror
push
cmp
add
loopne
enter
sti
test
data16
add
and
sbb
sbb
js
mov
cld
mov
lock
jp
adc
or
test
cmp
(bad)
push
movs
dec
jl
mov
jp
jg
cmp
add
idiv
(bad)
jg
repnz
ret
ret
mov
mov
or
inc
inc
retf
fwait
and
xchg
push
inc
clc
dec
(bad)
jo
nop
out
pusha
(bad)
adc
inc
pusha
inc
adc
jl
sbb
add
mov
add
sar
aaa
adc
shl
loope
dec
test
call
(bad)
(bad)
movs
pop
push
push
or
in
mov
push
sahf
inc
cmp
ja
shl
adc
and
mov
and
xor
mov
or
js
popa
xor
dec
cmp
inc
and
push
movs
mov
stc
fsubrp
and
movs
adc
movs
aas
add
cmp
or
jl
daa
add
test
sbb
sub
cmp
call
inc
or
test
or
and
add
ds
mov
(bad)
or
jo
mov
or
add
lea
std
(bad)
nop
dec
adc
and
or
aas
iret
and
or
out
jp
or
and
mov
mov
and
nop
dec
sbb
add
(bad)
fimul
push
or
jne
jae
push
(bad)
or
iret
or
sbb
cld
in
in
movs
enter
cmp
pop
dec
in
xor
mov
fbld
or
fmul
(bad)
(bad)
mov
adc
rcl
fs
and
and
cmp
jne
jg
sub
pop
add
adc
dec
or
jmp
and
popa
inc
sbb
inc
shl
sub
dec
xchg
cwde
pop
stc
push
adc
jp
fimul
inc
sub
pop
push
hlt
push
inc
push
mov
gs
add
inc
xor
adc
inc
pop
je
dec
call
imul
ds
inc
hlt
pop
xor
xlat
mov
out
cmp
std
jp
je
add
push
push
dec
or
add
adc
mov
cmp
outs
xchg
arpl
dec
xor
ret
sbb
and
cld
pop
leave
js
imul
jle
adc
jg
test
cmps
cs
xor
mov
sbb
and
and
loopne
inc
sbb
jl
loopne
sbb
adc
dec
fdivr
xor
stos
mov
sbb
push
and
aad
call
call
add
add
adc
addr16
jg
pusha
add
push
(bad)
test
pop
cwde
test
push
cmp
jge
pop
enterw
inc
outs
xchg
pop
pop
pop
push
or
mov
out
or
sub
test
sub
cmp
je
mov
or
mov
dec
je
sub
jmp
jmp
in
jl
add
rcr
data16
xor
cmp
jnp
fist
jmp
inc
sbb
mov
jb
inc
das
dec
inc
cs
ins
sub
mov
sub
add
pop
pop
xor
inc
jb
mov
pushf
test
jg
mov
inc
out
movs
adc
sbb
adc
and
movs
and
pop
push
cmp
imul
out
aam
popf
xchg
(bad)
fld
repnz
adc
push
jno
arpl
adc
je
std
cmps
and
pop
jl
pop
mov
iret
test
pop
push
js
mov
test
mov
mov
mov
in
xchg
mov
xchg
out
add
jbe
mov
out
or
inc
or
hlt
inc
in
push
add
pop
inc
mov
xchg
dec
jae
push
xchg
xchg
inc
push
push
push
call
jo
inc
inc
stos
je
push
aaa
pushf
lods
ds
cmc
mov
js
sbb
xor
inc
outs
mov
push
pop
pop
adc
inc
sahf
push
call
loopne
dec
inc
dec
jne
mov
or
into
loopne
ins
mov
jo
add
pop
dec
daa
or
add
and
in
outs
xchg
cmc
mov
xchg
fmul
lock
mov
or
pushf
jo
out
dec
loop
add
jo
pop
gs
sub
pop
jno
test
sub
loopne
cmp
adc
leave
push
std
aaa
gs
fimul
test
pop
ret
loopne
sub
fs
push
jmp
clc
movs
inc
mov
add
pop
cld
je
mov
sbb
push
cld
cmp
jne
neg
add
pusha
cwde
or
rcl
fneni(8087
or
ror
ret
iret
cmp
sar
inc
cmp
sbb
cmp
cmps
xchg
add
add
dec
sbb
and
add
add
sub
or
inc
adc
add
push
inc
imul
xchg
sbb
push
aaa
pop
aam
xor
inc
mov
sub
dec
xchg
jmp
push
test
inc
mov
aad
pusha
lea
sub
inc
xlat
aaa
jl
or
jo
pop
dec
push
push
fwait
jl
scas
sbb
mov
push
mov
xor
(bad)
sub
lds
test
ficom
pop
aaa
mov
mov
imul
jo
fnstsw
dec
stos
loopne
jg
or
inc
mov
adc
test
mov
int3
pop
ss
adc
sbb
mov
out
pop
pop
popa
les
popa
pop
cmc
scas
js
xor
and
cmp
add
movs
call
adc
data16
fcmovb
cmp
pusha
lods
sbb
shr
add
sub
mov
cmp
or
adc
jnp
and
push
mov
shl
nop
mov
rcr
xchg
add
sar
stos
js
xor
xor
push
enter
mov
or
or
add
xchg
mov
dec
or
cmp
in
adc
inc
aas
nop
push
mov
pop
inc
clc
or
outs
xchg
sbb
movs
mov
pcmpeqw
or
and
cmps
pusha
clc
xor
push
test
daa
mov
push
push
fistp
fcmovnu
pop
sbb
or
sbb
and
add
xchg
les
les
mov
mov
sub
div
test
daa
lock
clc
test
retf
lock
mov
jl
push
pop
adc
(bad)
mov
test
push
and
je
pop
rol
nop
push
dec
ins
mov
dec
sahf
outs
fwait
test
push
call
rcr
cmp
fstcw
fwait
pushw
or
ss
fldcw
fistp
pushw
fclex
movs
adc
add
loope
in
xor
xor
xor
add
or
pcmpgtd
push
movs
icebp
jae
cmps
mov
add
add
lahf
inc
sbb
push
push
or
movs
add
and
cmp
jge
cmp
mov
pop
aaa
pop
inc
call
add
movs
cmp
cmp
sbb
dec
ret
pop
and
inc
fdivr
mov
or
sbb
push
mov
mov
jbe
cmp
jle
jmp
out
adc
add
or
ja
daa
jbe
or
inc
or
jg
mov
jl
rcr
or
or
sbb
xor
jle
pop
jno
adc
xchg
push
add
push
call
xor
and
fsub
mov
test
mov
sbb
clc
or
dec
enter
mov
(bad)
sti
mov
shl
es
push
xor
inc
repnz
fwait
or
push
dec
push
jo
mov
push
rol
div
ss
in
pop
dec
mov
loope
and
push
mov
mov
mov
push
and
sbb
push
and
inc
cld
or
push
dec
(bad)
adc
mov
shl
cwde
pushf
sbb
push
jnp
xchg
sub
loop
inc
xor
adc
mov
sbb
push
inc
aas
cld
xchg
mov
les
cwde
mov
and
pop
push
fadd
imul
xor
icebp
jmp
adc
ret
push
(bad)
adc
and
or
and
(bad)
or
or
cmp
loop
mov
jo
ret
outs
jge
xor
lds
and
jg
je
dec
sub
rcl
adc
dec
mul
je
mov
inc
or
loopne
push
jmp
dec
xor
push
push
rcr
cmp
jae
mov
xor
push
sub
add
dec
out
nop
push
popa
dec
cmp
cwde
mov
add
add
jbe
pop
jbe
add
mov
pop
xchg
movzx
xor
and
es
sub
sbb
popf
xchg
pop
xor
add
xor
and
in
pop
inc
and
enter
stos
or
push
and
mov
dec
shl
in
ds
mov
inc
sbb
sub
cmp
jbe
into
add
dec
and
xchg
jle
pop
cmp
and
mov
ds
out
jg
aam
mov
push
adc
or
adc
sub
imul
jmp
adc
push
sub
push
add
inc
loopne
add
and
aaa
pop
mov
mov
mov
add
add
sbb
loope
push
and
ret
daa
add
inc
xor
sub
pop
sbb
idiv
pop
pop
or
outs
pop
pop
adc
ss
pusha
sub
push
xlat
out
dec
pop
pop
push
test
inc
jge
cmp
fisubr
dec
pop
jmp
pop
jb
xchg
mov
mov
add
and
aam
ss
xchg
mov
sbb
(bad)
arpl
dec
xchg
and
std
imul
add
push
cmp
pusha
dec
jg
fisub
movs
mov
push
mov
mov
jle
mov
mov
mov
movaps
je
or
or
cmps
(bad)
icebp
ja
pop
mov
mov
lea
shr
test
mov
in
mov
test
mov
ja
jl
fisttp
jle
sbb
mov
ins
push
adc
nop
or
dec
jl
xchg
add
enter
or
(bad)
mov
jle
shr
shr
add
add
add
(bad)
jo
(bad)
icebp
lea
add
xchg
shl
jmp
scas
je
dec
je
jmp
xchg
jmp
inc
ins
xchg
add
pop
call
xchg
jmp
popf
jb
std
pop
stos
call
mov
add
add
mov
fidiv
inc
cmp
clc
inc
and
cmp
fsub
or
inc
push
aaa
ret
mov
xchg
and
pcmpeqb
std
cmp
fadd
jmp
call
add
sbb
je
mov
pop
out
pop
adc
clc
mov
inc
mov
push
(bad)
fisttp
sbb
mov
sub
and
mov
xor
ret
and
sahf
pop
or
adc
cmp
cmp
jge
sub
repnz
sub
pop
push
mov
push
cli
repz
dec
ret
bound
add
add
sub
inc
loopne
xchg
dec
sbb
jno
je
pop
mov
xchg
pop
pop
mov
inc
mov
pop
arpl
mov
wbinvd
rol
mov
(bad)
xor
je
cmp
jo
cmc
or
push
cmp
sub
shl
add
addr16
test
jle
adc
sub
xor
sbb
or
jnp
sub
repnz
jne
aad
fwait
adc
stos
add
push
idiv
in
add
pop
je
dec
adc
mov
mov
push
sub
nop
and
rol
jne
mov
sbb
mov
jle
jge
xor
sub
sar
cdq
pop
push
data16
or
add
rcr
fsincos
sbb
pop
add
sub
mov
mov
lock
es
and
leave
mov
data16
sbb
or
lahf
xor
and
aad
or
mul
aaa
mov
sub
and
das
adc
inc
sbb
dec
sub
ins
xchg
xchg
sbb
inc
lock
or
shr
mov
or
mov
and
add
mov
push
push
pop
push
mov
ret
xor
adc
jns
rcl
into
inc
xor
add
and
fstp
clc
push
jge
mov
(bad)
adc
hlt
cmps
mov
or
stos
aas
sub
xchg
fadd
out
fsubrp
push
mov
icebp
pop
mov
enter
cld
rcl
mov
in
popa
push
xor
xor
(bad)
les
pop
sub
inc
xlat
iret
gs
and
test
sbb
outs
aad
mov
arpl
cmp
imul
sbb
push
lock
sub
call
cmp
mov
push
ffree
pop
mov
push
mov
mov
scas
(bad)
ret
adc
xor
les
dec
and
xlat
jge
jne
shl
test
pop
adc
stos
out
ror
sbb
jo
mov
rol
ss
or
push
jns
mov
in
jo
adc
push
in
hlt
push
js
inc
lock
push
mov
inc
lock
movs
push
dec
sbb
pop
inc
xchg
xchg
out
xor
push
loop
xchg
xchg
mov
jne
(bad)
hlt
hlt
or
pop
xchg
hlt
addr16
enter
pop
sar
icebp
imul
cmp
fucomi
in
sub
jnp
mov
and
leave
mov
push
jb
movs
call
daa
sbb
sbb
mov
pusha
test
addr16
divps
add
cmp
jbe
inc
mov
rcr
stos
sub
or
dec
mov
ret
xchg
mov
and
mov
outs
push
test
mov
out
inc
adc
(bad)
dec
in
(bad)
pop
jne
xor
xchg
jp
test
cmc
(bad)
sub
aad
pop
or
in
mov
das
sbb
scas
loop
cli
mov
das
adc
idiv
sbb
adc
or
sahf
int3
ds
jne
movs
jmp
sub
aad
sbb
xchg
push
pop
push
add
xchg
cs
adc
call
xor
test
dec
and
adc
xor
mov
mov
xor
jne
scas
or
lock
les
adc
inc
jae
xor
mov
adc
cmps
xor
fbld
dec
jl
dec
add
pop
ror
jo
mov
sbb
ret
fadd
lock
mov
repz
div
jg
pop
test
xor
es
mov
mov
popa
sub
and
sub
push
jb
sbb
jno
cdq
or
pusha
nop
or
sti
mov
mov
nop
add
inc
push
popf
out
aam
mov
xabort
fdivr
push
in
add
(bad)
sub
inc
je
dec
cmp
pop
cmp
addr16
jno
mov
cmp
gs
sub
jmp
and
rcr
pop
dec
dec
leave
add
xor
sbb
sbb
adc
std
in
(bad)
dec
nop
and
test
and
mov
mov
cmp
xchg
jp
pop
pop
pop
inc
pcmpgtw
stos
hlt
mov
mov
rcr
push
leave
dec
cs
test
cli
or
push
push
shr
xchg
xor
shl
jae
xor
inc
cmp
sub
out
leave
inc
dec
inc
inc
test
jnp
out
or
test
sub
add
lea
mov
shr
aam
(bad)
movs
add
mov
mov
out
movs
jne
inc
add
push
xlat
into
idiv
mov
jl
push
mov
xor
mov
inc
adc
rcl
add
movs
adc
sub
sub
adc
inc
xor
shr
xor
adc
adc
data16
jl
loope
sub
add
(bad)
cli
xor
jo
mov
xchg
or
mov
clc
mov
inc
hlt
sbb
nop
push
inc
jae
js
inc
mov
cmp
or
mov
fmul
ins
es
mov
je
les
rcl
fiadd
add
and
cs
dec
inc
sbb
inc
xchg
ror
push
(bad)
js
add
add
test
jge
popf
pop
js
sub
ins
call
dec
sbb
retf
xchg
sub
push
(bad)
inc
adc
mov
sub
js
mov
push
fcomip
jbe
cmp
dec
ins
add
mov
dec
out
or
pop
gs
or
inc
js
mov
cld
sub
cmp
jbe
sub
jo
dec
or
jg
dec
out
test
mov
sbb
js
mov
sbb
xchg
pop
(bad)
push
cmp
jne
setae
and
xchg
adc
call
sub
scas
outs
lods
rcl
pop
adc
cmp
pusha
shr
jge
mov
cmp
push
shl
xchg
jge
and
in
in
push
and
sar
or
jge
jbe
mov
inc
or
inc
push
je
into
cmp
into
add
inc
jae
shr
stc
xor
and
xor
(bad)
push
inc
je
ins
and
(bad)
inc
btc
loopne
or
dec
or
jne
mov
push
or
adc
(bad)
cmp
ja
push
(bad)
jmp
mov
add
push
xlat
gs
adc
sub
(bad)
ss
add
sub
inc
or
mov
cld
ja
data16
sub
inc
mov
dec
jne
repnz
and
dec
inc
dec
or
adc
test
mov
sbb
call
je
push
dec
bound
test
pushf
je
jb
out
jne
inc
or
dec
data16
popf
inc
push
ins
movzx
test
cmp
lahf
stos
nop
adc
mov
jmp
cmps
dec
jp
pop
cmp
jbe
dec
icebp
or
sub
stc
sub
cmp
dec
jbe
mov
(bad)
out
fld
mov
xchg
inc
push
mov
jbe
cwde
push
es
je
aam
sub
cli
dec
cs
arpl
dec
or
inc
jns
fist
adc
adc
dec
sub
mov
enter
dec
retf
xor
stos
and
je
or
and
into
dec
shl
(bad)
scas
sbb
add
inc
and
sbb
ret
fiadd
push
push
mov
push
push
add
pop
push
test
add
les
xor
icebp
mov
ret
sub
int
mov
xlat
mov
jmp
sbb
(bad)
int
lods
push
sub
sub
push
pop
jns
imul
add
add
xchg
ret
add
jb
lahf
ror
push
push
push
or
fadd
mov
dec
adc
ja
mov
and
cmp
pop
cmp
lock
sbb
xor
xor
jmp
add
test
add
push
add
push
and
sbb
pop
pop
rcl
loop
xor
or
push
ja
ds
adc
cdq
inc
add
fwait
add
enter
mov
std
clc
inc
pusha
aam
add
daa
cmp
push
fcmovnbe
fs
push
inc
dec
mov
adc
div
mov
scas
jno
jmp
or
xor
mov
and
(bad)
fbld
loope
xor
mov
inc
pusha
xchg
dec
movs
jge
sti
mov
popf
cli
mov
or
rol
pop
mov
daa
mov
and
dec
fidivr
mov
loopne
mov
sub
dec
pusha
cmp
mov
and
inc
pop
and
imul
push
dec
sub
pop
sbb
mov
mov
rcr
sbb
mov
dec
rol
mov
enter
ret
pop
loope
add
jmp
pop
lock
xchg
adc
ins
sbb
xchg
shl
or
and
rcl
xlat
mov
sbb
aad
int
jns
adc
leave
mov
push
aad
rcr
leave
rcl
sub
dec
jl
es
fs
mov
arpl
push
inc
js
and
call
hlt
adc
add
or
or
adc
js
add
push
jmp
push
call
dec
xchg
xor
adc
mov
ins
dec
aad
or
mov
mov
push
ret
jns
adc
add
jns
rol
mov
mov
xor
inc
mov
fbstp
xor
retf
xchg
pop
adc
enter
add
adc
bound
dec
jns
lahf
jmp
add
leave
push
inc
and
(bad)
rcl
push
test
mov
mov
leave
loopne
sbb
lahf
adc
daa
out
jmp
cwde
or
xchg
ins
add
add
mov
inc
in
inc
xchg
or
shl
adc
and
pop
int
in
inc
dec
xor
(bad)
jne
setae
and
imul
add
mov
ror
sub
add
shl
call
and
pop
imul
push
mov
add
clc
sub
stc
fisttp
sbb
(bad)
(bad)
in
ror
xchg
sbb
inc
mov
out
lods
dec
pusha
xchg
test
and
pop
jne
push
ss
add
xor
shl
sbb
cmp
push
xor
add
adc
ficom
and
scas
pop
xor
out
sbb
fcmovnbe
mov
dec
adc
or
sbb
mov
popa
cmp
add
aam
ret
adc
add
ins
movs
sbb
sub
sbb
cmp
adc
push
dec
push
push
add
mov
les
mov
inc
jge
and
pushf
mov
jmp
mov
test
jmp
ins
add
cli
add
cmp
into
jge
xchg
pusha
call
sbb
mov
test
into
sti
movd
test
pop
mov
cmp
je
push
cmps
or
dec
adc
fld
test
push
lds
fsub
mov
shr
das
imul
mov
adc
(bad)
dec
lods
scas
ss
mov
mov
outs
scas
sub
add
inc
imul
jge
dec
jge
lods
ror
int3
(bad)
cmp
addr16
cmp
mov
clc
cmps
test
push
ss
add
rol
mov
clc
or
out
loop
retf
adc
sbb
mov
jmp
pmuludq
sbb
push
outs
clc
and
adc
ret
adc
or
cmps
out
(bad)
(bad)
lds
inc
cmp
fistp
fstp
retf
and
sbb
mov
and
cmp
jecxz
pop
cmp
push
cmp
cmp
clc
dec
pop
or
lock
fisub
inc
or
or
sbb
sub
movs
loope
sahf
pop
lock
push
push
pop
xor
xor
or
or
jle
dec
sub
pop
mov
sbb
inc
sbb
inc
ror
mov
mov
int
mov
sub
out
sub
in
inc
xor
cmp
jb
mov
jo
or
sub
xchg
push
xor
sub
call
xor
div
addr16
jp
pop
(bad)
push
pop
add
arpl
imul
mov
dec
cmp
sbb
adc
pop
pop
and
es
xchg
add
sbb
nop
mov
bound
repnz
xor
retf
pop
ins
jae
cs
pop
scas
xchg
mov
ror
and
dec
pusha
ss
mov
or
adc
retf
or
ss
or
icebp
sahf
lahf
pop
jb
or
mov
or
sbb
dec
adc
aaa
(bad)
cmp
and
shl
pop
mov
mov
jge
inc
hlt
daa
sti
push
push
bound
aam
stc
pop
ja
add
in
inc
stos
in
push
out
cmp
(bad)
adc
push
pop
lock
pop
icebp
or
shl
mov
repz
sar
push
or
bound
int
cdq
movs
cmc
add
pop
div
xor
idiv
jp
pop
cli
push
outs
cmp
or
cmps
std
ret
shl
xchg
adc
fdivr
xor
inc
pop
add
jns
dec
push
sub
pop
adc
test
jae
pop
xor
or
jp
dec
mov
icebp
mov
loop
push
lock
jle
or
shr
(bad)
fdivp
inc
or
je
cmp
inc
cld
dec
pushf
aas
inc
sbb
ror
mov
mov
push
adc
imul
sbb
ss
and
mov
cmp
add
int3
xchg
mov
(bad)
fidiv
aam
and
mov
inc
mov
cmp
scas
sbb
loopne
add
mov
scas
lahf
pop
sbb
sbb
jl
loope
out
aas
add
lock
out
add
and
ret
std
pop
push
push
fsub
jo
mov
aaa
ins
(bad)
dec
sub
fsubr
sbb
mov
xchg
cmp
add
add
jp
pushf
xor
icebp
push
sub
mov
mov
or
or
inc
and
xor
jo
cli
sub
pop
xchg
sti
sub
and
xor
adc
pop
adc
xor
inc
sbb
cmps
push
xor
nop
test
sbb
mov
pop
xor
push
sub
sbb
into
rol
xor
into
sbb
leave
pusha
cmp
add
out
cmp
(bad)
and
adc
mov
div
inc
add
mov
loope
nop
ror
out
mov
cmp
fwait
jno
push
mov
push
std
rol
add
aas
add
jo
adc
fcmovu
xchg
in
loopne
out
dec
or
push
add
add
add
std
add
or
mov
or
loop
imul
adc
adc
cmps
pusha
(bad)
aas
jmp
or
loopne
loop
adc
inc
cmp
ror
in
jge
loopne
or
and
pop
jp
dec
cli
mov
popa
fwait
lods
jl
repnz
dec
jg
cmps
push
add
sbb
int3
adc
sub
cld
xor
cld
push
and
and
add
test
dec
sub
or
cmp
add
in
push
fiadd
fmul
add
inc
pop
pop
xchg
popa
mov
push
adc
and
popf
add
push
test
call
es
inc
adc
daa
aam
and
xchg
adc
or
inc
push
push
fadd
cmp
shl
and
jo
sbb
xor
mov
inc
(bad)
adc
or
sar
adc
push
imul
fstp
pop
inc
inc
sub
pop
xor
shl
cmp
(bad)
leave
xchg
dec
ja
lds
mov
sub
or
pushf
and
adc
(bad)
or
call
sbb
pusha
(bad)
adc
jle
test
mov
cs
mov
or
dec
fidiv
or
or
adc
shr
and
sbb
int3
dec
out
loopne
sbb
das
xchg
sub
loop
add
add
fs
pusha
rcr
jne
xor
or
or
adc
jnp
xor
ss
and
or
movs
inc
adc
stos
adc
add
pop
dec
cmp
adc
xor
mov
add
inc
adc
jnp
sbb
loope
shr
(bad)
icebp
pop
sbb
inc
cmps
test
mov
mov
dec
add
mov
in
aas
pop
push
je
dec
je
add
inc
pop
(bad)
inc
cmps
or
and
mov
adc
push
jne
sub
sub
js
scas
std
fdivp
pop
jmp
xor
push
adc
cli
lods
or
movs
dec
adc
shl
sub
cmp
sub
xor
out
and
ret
mov
jae
xchg
or
pop
push
dec
xor
syscall
or
push
adc
adc
lock
cmp
hlt
cli
dec
push
xor
bound
add
rcr
das
mov
or
push
mov
(bad)
stc
push
jno
xor
jo
mov
rol
xchg
pop
lock
adc
push
inc
and
add
mov
pusha
push
push
inc
and
xchg
sub
cmp
push
and
ret
sti
push
lds
ror
inc
xchg
mov
jbe
stos
out
add
push
push
scas
jmp
dec
inc
call
inc
xor
lea
call
dec
push
jnp
fdiv
cdq
dec
lea
mov
lea
xor
je
adc
pop
cli
(bad)
les
adc
stos
jb
add
add
inc
fwait
adc
jmp
cld
aad
scas
dec
and
dec
mov
test
and
cld
inc
push
inc
loope
lock
xlat
ror
dec
and
jmp
nop
loop
push
rol
mov
dec
and
xchg
out
(bad)
adc
dec
sahf
icebp
jb
lods
mov
inc
mov
and
stc
data16
fwait
add
nop
and
and
leave
enter
stos
sti
popf
ss
xlat
inc
enter
repnz
pop
pop
(bad)
jne
addr16
jbe
mov
ins
mov
lods
push
rol
shr
sti
add
adc
inc
pop
add
and
lods
xchg
into
adc
mov
sub
outs
pop
xor
jbe
jg
or
lds
mov
add
retf
sub
push
mov
adc
or
inc
leave
cmp
fcomp
test
push
je
test
xchg
test
cmp
cmp
sbb
mov
out
jne
fwait
lea
xor
or
xor
push
aaa
addr16
push
mov
push
nop
mov
pop
sahf
ret
ins
xchg
lock
push
rol
add
rsqrtps
fsub
aad
cli
bound
mov
call
adc
jge
loopne
pop
push
xor
retf
clc
mov
sub
je
inc
mov
push
stc
idiv
push
cmp
mov
(bad)
hlt
xor
mov
sub
test
icebp
mov
or
and
(bad)
(bad)
cmp
je
adc
lods
loopne
nop
push
ins
jno
cmp
inc
inc
loopne
jne
dec
mov
fmul
add
mov
(bad)
mov
jmp
sub
ror
push
jmp
into
popa
xlat
int3
add
rcl
sbb
inc
xlat
cmps
dec
add
add
inc
mov
(bad)
inc
fld
mov
ins
pusha
test
das
xchg
pop
cmp
in
cmp
add
mov
sbb
sbb
or
pop
repz
mov
and
rcr
nop
dec
add
fwait
jnp
hlt
dec
mov
clc
and
add
cmp
outs
dec
xor
sahf
and
sbb
adc
arpl
sbb
enter
sbb
lock
dec
pop
dec
push
mov
lds
pushf
add
sub
sub
ss
mov
add
pop
push
add
pusha
xor
add
add
rcl
pop
lods
add
sbb
inc
mov
dec
scas
or
movs
mov
ret
pusha
inc
cmp
ror
fisubr
push
add
outs
mov
sbb
or
mov
push
and
push
jae
sub
mov
pop
mov
jb
xor
push
rsm
cmp
mov
fimul
test
call
mov
sbb
hlt
add
mov
mov
inc
mov
mov
sub
lock
in
fisttp
daa
or
mov
cmp
jecxz
jmp
push
adc
hlt
or
adc
add
jo
dec
push
add
cmp
sbb
aas
jbe
sbb
adc
sub
dec
jmp
xor
int
and
je
xor
jno
in
pop
jecxz
inc
sbb
sbb
add
cmp
test
pop
jl
and
pushf
inc
inc
fs
adc
sbb
imul
add
jb
sub
add
mov
push
imul
movs
add
and
cmc
mov
icebp
sahf
pop
and
test
xor
add
pop
ror
jp
jg
jno
fild
sti
adc
cmps
rcr
out
fisttp
jbe
and
push
clc
jecxz
mov
data16
sub
sub
xlat
in
add
or
xchg
bound
mov
xchg
inc
xor
push
cmp
cmc
jns
sub
xor
aaa
imul
pop
mov
pusha
add
mov
mov
clc
adc
lock
sub
mov
scas
and
sbb
pop
or
ror
xchg
hlt
or
into
and
xor
in
dec
loop
es
fcom
call
cwde
pop
lods
xor
or
push
adc
dec
or
clc
pop
push
jne
call
pop
repnz
fisttp
call
das
sbb
sub
mov
cmp
push
sbb
loope
lds
xchg
or
pop
test
lea
jbe
jl
(bad)
sub
mov
sub
or
mov
movs
(bad)
sub
pop
add
dec
rcl
repz
movs
lods
test
pop
mov
into
xor
fwait
add
scas
dec
mov
or
mov
sub
mov
dec
or
xor
mov
(bad)
cmp
jne
inc
jmp
cmp
or
dec
xchg
inc
inc
cmp
jbe
add
retf
dec
add
mov
rol
jno
cmp
cmps
loope
hlt
and
add
jnp
or
sti
(bad)
shl
dec
pop
stc
cmp
data16
inc
arpl
mov
fldcw
sbb
sub
test
add
int3
cmp
or
imul
imul
lahf
jl
jmp
xchg
sbb
push
xchg
test
dec
rol
nop
push
jl
sub
add
add
push
jle
sbb
push
sbb
loope
inc
mov
fimul
xchg
cmp
or
shl
ins
and
pop
push
sub
xor
inc
or
aaa
cmc
lods
pusha
in
add
mov
inc
lds
lods
xor
(bad)
dec
sar
pop
in
jne
push
cmp
int
popf
(bad)
jg
cmp
ret
jle
mov
lea
enter
lea
(bad)
cmp
shl
sub
mov
sar
fcomp
js
mov
xlat
add
popa
les
call
sar
call
add
sbb
cli
jb
jl
cmps
adc
sub
popa
test
and
neg
mov
add
pop
or
ja
pop
mov
xor
cmp
dec
jl
xor
sbb
mov
mov
add
mov
inc
or
add
add
cld
add
cwde
inc
or
mov
retf
pop
fsubr
fld
mov
jbe
lahf
or
jl
dec
sub
adc
lahf
adc
adc
fcom
xor
lahf
pop
lahf
xchg
cmp
cmp
sub
movs
mov
loop
push
push
mov
aaa
loopne
popa
cmp
pop
and
ret
sub
jo
dec
xor
add
daa
adc
add
sub
ins
mov
xchg
and
sub
or
rol
fisttp
sar
push
mov
pop
aam
rol
mov
mov
loope
dec
ins
cli
and
ret
adc
inc
jmp
add
ret
addr16
pusha
(bad)
cmp
adc
xor
push
cmovb
xor
add
sub
das
xchg
add
mov
pushf
mov
repnz
jae
out
fcmovnbe
sub
mov
xchg
jbe
lock
sbb
lods
sub
add
into
test
mov
xor
fmul
inc
mov
mov
shl
jb
jno
(bad)
jg
inc
inc
mov
mov
dec
jne
mov
sub
jmp
sub
jbe
inc
push
shl
in
push
dec
inc
mov
repz
mov
jge
xor
pop
adc
cmp
mov
xchg
or
or
mov
mov
add
ja
or
xchg
mov
jbe
xor
fcom
mov
jne
xor
mov
ret
xor
lahf
shl
neg
jmp
cmps
mov
in
add
(bad)
jmp
jge
fldcw
daa
dec
and
push
jb
or
(bad)
pop
sub
mov
push
clc
dec
jae
mov
loopne
cmp
cmp
shl
xor
outs
mov
fldcw
mov
push
(bad)
jmp
jno
dec
add
push
xchg
out
and
ret
or
push
cmp
add
jae
in
sub
add
and
adc
lahf
pop
fmul
cmp
cmp
fild
call
aas
data16
fadd
add
pcmpeqd
or
add
nop
sbb
push
mov
xchg
inc
inc
push
ja
pop
xchg
add
or
lock
out
sub
sbb
lea
js
fadd
jae
pop
ret
fs
aam
inc
jne
mov
push
fld
pushw
mov
adc
or
xor
add
or
pusha
sbb
clc
sbb
mov
loop
xchg
cmps
jae
adc
stos
dec
xor
dec
(bad)
call
les
das
jb
icebp
clc
jae
clc
test
leave
js
sub
jge
enter
dec
mov
jecxz
cs
xor
je
pusha
inc
pop
jo
xchg
adc
mov
or
push
out
sub
add
jecxz
rol
jns
jle
push
mov
mov
outs
ins
je
cld
leave
adc
dec
test
add
rol
push
ret
mov
out
and
or
pusha
int3
add
xchg
add
push
jmp
out
push
push
sub
cs
jmp
xchg
int3
enter
ins
sub
xor
cmp
daa
or
sbb
or
push
cmp
ss
inc
in
mov
shl
mov
push
push
jl
call
mul
mov
jae
sbb
popa
xor
and
jb
or
sbb
add
mov
mov
fldz
pusha
jno
cmp
jge
out
not
test
and
mov
dec
xor
mov
outs
rol
dec
fs
mov
pusha
xor
sbb
dec
push
repnz
jp
xchg
mov
shr
add
cdq
cli
fistp
cld
dec
jno
add
call
jecxz
(bad)
cwde
push
movs
and
add
mov
out
cli
push
cld
dec
xlat
jecxz
in
rcr
js
shl
les
jp
jge
add
cmps
fstp
pop
cli
pop
(bad)
and
push
loopne
inc
pop
mov
pusha
inc
sar
shl
add
jne
jne
adc
jmp
mov
into
mov
or
inc
call
ins
inc
inc
pop
inc
call
or
push
inc
into
xlat
sub
retf
adc
pusha
push
push
fimul
lock
aas
sub
mov
daa
push
mov
dec
std
mov
add
adc
mov
ror
sbb
in
test
push
mov
jo
jmp
shr
in
sbb
mov
ds
fxch
dec
and
mov
pop
cmp
and
sbb
mov
lea
mov
mov
add
jle
and
sbb
dec
and
jne
mov
xor
mov
leave
add
scas
and
push
inc
and
in
fiadd
xor
push
sbb
fst
rcr
enter
mov
loope
and
adc
cli
cmp
loop
lock
add
imul
push
jl
sub
sub
fld
xchg
add
xor
jb
lods
fcomp
into
movs
or
iret
and
adc
pop
or
cld
and
ror
sub
aam
lea
jg
push
cmp
and
cmp
mov
pusha
call
cmp
cmp
jb
das
jne
mov
cmp
cmp
jne
push
pop
fcomp
push
fsub
pop
int3
sbb
sbb
adc
and
xor
mov
jge
inc
mov
mov
mov
or
aam
pop
loope
xchg
adc
pusha
dec
lods
or
and
mov
push
or
lock
add
cld
add
or
sar
sub
mov
add
jle
or
sbb
xchg
test
sti
mov
test
cmp
call
dec
loop
xchg
leave
nop
push
hlt
in
outs
aas
inc
mov
or
sar
mov
push
add
es
jg
jb
test
aam
inc
scas
xchg
stos
jne
or
add
jge
xor
and
cmp
pusha
jne
push
out
into
cmpps
mov
es
jmp
ins
das
outs
mov
add
mov
dec
add
mov
sbb
adc
mov
loopne
sub
test
sbb
js
out
adc
out
std
jmp
dec
idiv
fidiv
out
jns
or
sub
add
push
sub
xchg
jg
mov
mov
mov
es
add
call
pop
dec
lea
dec
aam
lods
clc
or
adc
xor
dec
je
adc
(bad)
fst
lock
adc
xchg
test
mov
add
add
adc
ret
ds
pop
jo
mov
ds
and
push
loop
mov
add
add
pop
dec
pushf
and
cmps
mov
jge
jg
retf
pop
movs
xor
sbb
inc
jne
dec
xchg
ds
std
jbe
jb
inc
ret
add
jle
xlat
lods
xor
pop
adc
loop
mov
jb
pop
adc
clc
movs
jnp
dec
mov
pop
xor
cs
add
inc
arpl
add
push
or
jne
inc
cmps
adc
and
hlt
mov
loop
pop
(bad)
push
mov
push
in
fs
inc
rcr
movs
aas
outs
jl
jmp
mov
fwait
add
sub
sti
jae
shl
cli
test
mov
mov
aaa
mov
mov
sub
loopne
mov
(bad)
jns
test
outs
mov
(bad)
call
add
push
push
dec
sbb
les
es
cmp
daa
mov
pop
in
cmc
or
add
jb
and
fsub
jae
push
sub
or
xchg
imul
mov
in
or
or
mov
xlat
cmp
mov
mov
xor
mov
mov
fmul
or
inc
div
inc
and
loop
adc
es
dec
mov
inc
pop
daa
jp
sbb
leave
fadd
cmp
cs
sti
sub
xor
dec
clc
and
mov
out
mov
mov
adc
sbb
dec
jne
mov
push
dec
je
adc
not
push
sbb
cmp
jns
adc
(bad)
lods
inc
jbe
fs
clc
inc
and
mov
mov
push
mov
dec
idiv
push
ss
or
add
cmp
push
dec
retf
loopne
xor
adc
cmp
jg
and
push
jmp
sub
pop
les
jo
sbb
jmp
fsub
jecxz
inc
in
or
mov
sbb
add
xor
cmp
inc
popa
fisttp
mov
xor
test
in
pop
idiv
xchg
popf
je
push
fld
ret
push
or
loope
(bad)
jne
inc
je
cmp
jle
cmp
jne
mov
js
or
pop
hlt
mov
jp
mov
or
lock
mov
out
adc
jl
mov
test
lea
shl
or
bound
pop
mov
xchg
sbb
xor
xor
stc
or
ret
(bad)
mov
enter
inc
jmp
neg
out
mov
jmp
in
sti
in
or
cmc
scas
push
add
daa
pushf
adc
or
test
push
push
test
or
sbb
lods
call
in
in
mov
pop
pop
icebp
mov
and
jae
add
mov
and
sbb
loopne
in
enter
mov
leave
add
fadd
fdiv
ret
std
fld
and
mov
push
fcmovnbe
cwde
mov
std
fcom
cmp
mov
jmp
fcom
pop
cmp
dec
addr16
ja
pop
jl
aam
aam
shl
adc
ret
rcr
rcl
add
sbb
es
aam
add
xchg
sub
add
cdq
enter
add
xor
int3
les
xchg
sbb
enter
jb
enter
movs
loope
shl
cmc
in
sub
cmc
shr
sbb
sbb
and
mov
mov
stc
(bad)
jmp
adc
sbb
sbb
inc
push
dec
add
div
sub
inc
push
sub
lea
repz
ins
adc
addr16
sub
cmp
mov
jb
call
cs
lea
adc
xchg
sub
cmps
in
mov
add
xchg
jmp
and
jmp
(bad)
stc
mov
addr16
jnp
mov
sbb
sbb
enter
or
sar
xchg
sub
xor
ds
out
mov
cli
or
inc
add
add
dec
dec
es
mov
inc
xchg
mov
add
add
push
cdq
mov
loopne
cld
dec
xor
mov
adc
lea
gs
retf
jge
mov
mov
(bad)
mov
mov
adc
and
mov
fisttp
mov
pop
in
add
inc
jge
inc
pushf
imul
test
cwde
scas
dec
adc
sub
adc
ja
pop
xchg
and
mov
push
sub
pop
repz
xchg
push
inc
fst
sbb
jp
pusha
push
out
sbb
or
test
jecxz
mov
xchg
sbb
adc
cmp
inc
inc
mov
ja
cmp
adc
fwait
dec
inc
push
fnstsw
inc
inc
adc
sbb
pop
mov
add
mov
ret
or
add
jl
push
cwde
push
enter
aad
mov
push
(bad)
dec
mov
pop
or
ret
add
jl
add
mov
sub
ja
cmp
stos
mov
ret
add
push
sbb
cmp
out
adc
add
ret
or
call
or
cmp
jb
mov
jmp
lea
lea
mov
cmp
jb
out
adc
gs
inc
or
ins
mov
dec
sbb
push
lods
and
or
ret
scas
stos
mov
add
push
add
and
jo
aad
or
(bad)
data16
rol
mov
xchg
adc
mov
pop
or
dec
add
icebp
and
js
push
add
add
pop
inc
inc
lods
or
adc
dec
push
cli
in
push
mov
xchg
or
int
add
lock
sbb
rol
jbe
adc
dec
mov
dec
jecxz
adc
push
add
cmps
rcr
xor
push
fsubr
or
leave
jmp
inc
aaa
xchg
jle
test
movzx
or
jmp
or
out
inc
stos
ror
nop
pushf
and
jne
nop
pop
pop
data16
in
xor
sar
push
ret
mov
fsubrp
add
push
ss
adc
test
xor
mov
add
je
cld
jl
add
ja
xor
popf
cs
inc
cdq
not
cwde
mov
adc
jne
xor
push
mov
out
add
push
and
add
loope
xchg
push
mov
add
ja
xor
mov
adc
jmp
cs
hlt
mov
add
jb
ins
hlt
inc
lds
pusha
in
retf
push
stos
add
adc
xor
sub
or
jbe
rcl
pop
inc
stos
sbb
fild
mov
or
xchg
sub
sbb
push
mov
mov
out
sbb
jge
pop
movs
dec
ins
idiv
mov
pusha
push
sub
inc
fwait
stos
xor
movs
and
and
or
add
adc
adc
inc
mov
je
mov
add
add
pusha
or
push
ins
pop
or
and
jg
and
mov
test
je
sub
add
inc
shr
cmp
not
(bad)
(bad)
jle
mov
adc
and
je
xor
pusha
sbb
ficomp
(bad)
mov
push
add
add
shr
or
add
sbb
adc
shr
sub
xchg
push
pop
and
jne
stos
push
dec
or
fsub
inc
cwde
jnp
sbb
sub
add
sti
or
sbb
addr16
or
and
push
(bad)
pop
xchg
shr
aam
inc
outs
test
jle
cmp
add
xor
xchg
sbb
jle
or
add
movs
jp
imul
lea
push
scas
enter
aas
jp
mov
mov
sti
cmp
sar
pop
mov
pop
not
pop
and
push
es
inc
add
not
mov
cmp
mov
dec
outs
out
ins
add
inc
mov
(bad)
dec
xchg
push
std
inc
inc
cmp
shr
and
sti
jecxz
mov
mov
pop
cmp
sub
fsubr
sti
cmp
shl
or
mov
and
jae
punpcklbw
push
add
inc
jo
add
push
mov
mov
dec
jl
xlat
mov
fscale
mov
sub
mov
fwait
movs
cmp
add
adc
push
add
nop
inc
push
sbb
add
inc
push
sbb
or
sbb
or
or
fs
inc
or
rcr
(bad)
adc
test
xchg
ret
push
shl
shr
or
retf
inc
fisub
dec
mov
inc
ret
jnp
push
(bad)
scas
fadd
add
push
mov
enter
nop
inc
push
jns
or
or
push
adc
aas
inc
mov
and
pop
xchg
push
add
movs
push
shl
dec
or
push
and
adc
adc
sysexit
je
mov
imul
mov
cmp
mov
mov
push
and
out
inc
fist
loop
rcr
dec
add
clc
fldcw
mov
ins
pop
aaa
jae
add
out
bndldx
out
arpl
push
(bad)
push
test
xchg
sahf
xor
dec
loope
pop
lock
loopne
lods
mov
mov
jmp
pop
or
in
jnp
aaa
xor
and
inc
into
in
sbb
cmp
and
test
les
fisttp
pop
sbb
sbb
mov
cmp
out
push
ret
xchg
jecxz
and
dec
dec
inc
adc
xor
out
das
push
(bad)
lods
icebp
jne
adc
shl
pop
mov
aaa
xor
inc
and
dec
jp
cld
push
adc
test
jne
cmp
pop
add
push
add
pop
add
and
inc
xchg
lock
or
adc
sbb
xor
push
inc
in
fwait
sbb
(bad)
jmp
add
xor
adc
inc
xor
add
xor
push
sti
xor
dec
mov
mov
sbb
or
or
dec
jne
dec
scas
add
adc
jg
into
scas
jge
mov
mov
out
sbb
add
add
push
push
(bad)
xor
and
lods
ins
sub
mov
cmp
shr
xor
dec
pop
adc
sub
add
sub
add
adc
aaa
sub
sti
xchg
mov
(bad)
leave
aam
popa
test
xor
gs
imul
push
cs
add
mov
adc
shr
xchg
pop
retfw
loope
enter
popf
lahf
mov
leave
xchg
test
cmps
out
inc
je
xor
shr
jecxz
jne
mov
out
retf
add
push
fdivr
sub
adc
add
ret
add
nop
push
jnp
and
add
adc
idiv
xor
and
cmp
mov
inc
xchg
sub
jl
mov
xchg
dec
push
lea
sbb
and
mov
test
sub
xor
add
and
push
lea
scas
or
inc
inc
rcl
dec
popf
xor
mov
lea
pop
adc
gs
xor
bound
inc
test
adc
push
xchg
xchg
xchg
aaa
xchg
nop
adc
int3
cwde
test
sbb
or
add
jmp
jmp
inc
jmp
(bad)
jmp
xlat
mov
inc
jmp
add
je
aaa
jmp
jmp
xor
or
test
dec
adc
mov
cmp
xchg
pop
push
ja
push
or
inc
add
lea
into
and
sub
pop
pusha
aas
loopne
cmp
enter
shr
test
out
or
ud2
popf
jmp
mov
sub
add
mov
pushf
push
add
int3
sbb
fild
aas
adc
adc
inc
or
inc
test
pop
xor
mov
icebp
push
mov
(bad)
mov
mov
adc
inc
aaa
and
mov
or
lds
jae
mov
dec
cmp
cmp
pop
jns
or
inc
inc
cli
mov
(bad)
imul
sub
inc
inc
xor
adc
jno
push
or
sti
cmps
xchg
dec
inc
jae
push
popa
cmova
push
sbb
cmps
adc
out
pusha
adc
xor
xorps
xor
and
test
lock
push
inc
jae
jge
mov
cmp
inc
mov
out
push
dec
push
ins
xor
push
stos
jo
jns
jo
mov
inc
dec
push
push
push
cmps
inc
dec
add
addr16
dec
adc
popf
add
cmp
or
jne
ins
or
or
push
push
outs
add
mov
jp
aaa
rcl
lahf
dec
(bad)
pusha
and
xchg
bound
gs
mov
out
dec
cmps
js
sbb
add
ss
das
cmp
outs
scas
sub
adc
arpl
(bad)
pop
stos
fs
jg
addr16
mov
jno
xlat
sbb
jmp
push
dec
or
push
dec
sub
adc
mov
loop
xchg
shr
adc
add
fwait
addr16
fist
ins
pusha
pop
rcr
or
mov
or
es
bound
inc
mov
mov
pop
push
ins
lahf
pop
inc
pusha
popa
rol
popa
sub
mov
jg
ds
xlat
outs
pop
inc
sbb
jae
pop
sbb
pusha
pop
jb
jo
mov
inc
push
xchg
push
push
popa
pop
(bad)
push
xlat
pusha
add
mov
mov
sbb
inc
pop
pop
mov
dec
jo
(bad)
push
inc
faddp
push
lds
cmp
adc
imul
xor
push
outs
call
imul
inc
outs
outs
daa
pop
test
pusha
and
pop
xchg
push
lds
or
jns
adc
mov
gs
dec
jb
inc
xor
sbb
inc
xchg
loopne
pop
daa
fadd
test
imul
add
inc
adc
and
test
out
outs
or
adc
rcl
push
inc
(bad)
pop
sbb
sahf
mov
mov
pop
cmps
add
or
mov
imul
imul
xor
test
pop
data16
(bad)
call
push
add
push
mov
dec
or
jno
movlps
cwde
push
adc
outs
shl
inc
pop
aaa
push
addr16
ins
and
push
mov
inc
sub
lock
scas
dec
jnp
add
bound
jo
pop
jo
addr16
xchg
mov
push
fbstp
adc
rol
rcl
add
arpl
rol
ret
(bad)
outs
mov
pop
ja
add
lea
pop
push
dec
cwde
add
pop
jg
adc
push
cmps
arpl
pop
jne
inc
inc
pop
dec
popa
dec
adc
cmps
inc
or
push
or
xor
loop
das
adc
mov
mov
push
add
ret
pop
sub
rol
repz
sbb
adc
stos
aas
mov
push
test
jmp
mov
jae
test
imul
out
rcl
add
mov
pop
gs
and
pop
(bad)
mov
or
mov
inc
aas
adc
les
xor
pusha
jbe
neg
adc
pop
jns
cwde
pusha
(bad)
push
jb
test
sub
xor
xor
imul
fiadd
xchg
xlat
sub
mov
aaa
cmps
pop
xor
inc
mov
add
adc
movzx
ja
cmps
pop
and
pop
push
push
loop
(bad)
jg
ret
fild
or
pop
iret
push
add
xchg
pop
xchg
test
and
out
sbb
dec
adc
jmp
mov
ins
sbb
jecxz
pop
push
jg
inc
sub
ret
inc
or
push
pop
inc
aaa
xchg
mov
ds
je
ins
xchg
stos
sbb
add
lahf
adc
call
mov
outs
sbb
mov
xchg
dec
mov
inc
or
and
sub
push
add
mov
(bad)
push
inc
mov
stos
imul
jmp
adc
out
push
pop
fcom
mov
push
out
jp
bound
mov
xchg
mov
ret
and
addr16
sbb
inc
ds
or
mov
aam
and
dec
cmps
shr
cmp
imul
outs
and
jo
mov
and
push
ret
sbb
adc
add
(bad)
movzx
shl
movs
pusha
fwait
dec
push
fcom
push
outs
jmp
fiadd
mov
cmp
xor
ins
movs
push
call
and
jae
jb
in
cs
mov
push
out
outs
repnz
sbb
sub
pop
jo
mov
dec
xchg
mov
mov
xchg
call
push
adc
xor
push
out
cli
ror
neg
jp
push
push
mov
add
dec
adc
bswap
sahf
lahf
mov
outs
jp
sub
xchg
pop
jg
sub
dec
dec
les
data16
lock
mov
lods
jne
gs
ins
popa
push
adc
sub
inc
gs
fcmovne
in
imul
popa
add
adc
pusha
aad
jb
ins
jae
add
lock
push
sbb
stos
cmp
adc
fdivrp
out
adc
addr16
outs
outs
ins
add
or
outs
ins
push
adc
inc
fstp
push
popa
jo
cmp
jae
inc
jo
inc
push
sbb
cmp
push
push
rcl
mov
stos
push
sbb
adc
in
sbb
sbb
outs
push
push
xor
adc
gs
jp
xchg
cmp
arpl
jnp
sbb
je
adc
in
fs
jmp
dec
adc
addr16
add
mov
jo
adc
push
push
clc
jns
ins
test
inc
fnsave
add
cmps
repnz
ds
ja
clc
fldcw
ins
ins
(bad)
outs
aam
or
cmp
daa
movs
shl
not
scas
dec
lahf
add
dec
mov
ins
xchg
fs
pop
pop
add
xor
ror
scas
adc
pusha
fs
push
imul
or
fwait
stos
sub
sbb
inc
aam
retf
fimul
push
gs
stos
sub
scas
js
(bad)
sbb
jae
add
gs
pop
xor
je
xor
fs
mov
jmp
inc
inc
movs
jnp
cmp
or
adc
clc
and
inc
ins
push
mov
mov
shr
scas
dec
outs
adc
or
outs
jo
or
mov
jg
sbb
dec
gs
or
pusha
push
push
or
push
inc
test
pop
mov
scas
int
jbe
add
push
pushf
es
out
inc
aaa
or
mov
add
or
or
test
cmp
out
push
push
push
enter
push
pushf
push
mov
add
add
mov
mov
ja
jns
ja
cs
es
stos
inc
loop
dec
mov
outs
arpl
ins
into
push
jl
retf
nop
rol
sub
mov
pop
adc
sub
jge
js
inc
or
lods
push
lea
jb
je
leave
mov
fstp
sub
sub
rol
jo
mov
stc
push
and
mov
inc
adc
mov
cs
pop
xchg
adc
add
sbb
imul
or
mov
imul
pinsrw
mov
push
mov
lock
pop
clc
psubd
or
bound
adc
jo
ss
adc
xchg
or
cs
sbb
dec
push
inc
jb
jl
ret
(bad)
mov
pop
pop
inc
loopne
popa
(bad)
ror
ins
inc
hlt
mov
arpl
inc
popa
xchg
cmp
mov
sbb
outs
add
ret
sub
je
xor
push
dec
dec
sub
mov
in
xor
adc
les
data16
push
jne
popa
inc
fisubr
adc
push
sbb
movs
fisubr
popa
inc
mov
inc
stos
mov
outs
add
mov
pop
pop
inc
sbb
sbb
mov
xor
add
add
push
imul
push
call
aas
cmp
push
jnp
or
push
cmps
dec
inc
jnp
or
pop
ja
cmps
dec
or
call
mov
call
dec
or
(bad)
mov
stos
ins
lds
out
rol
dec
pop
std
(bad)
cmp
mov
pop
sbb
pusha
punpckhbw
lods
es
or
pushf
iret
dec
and
cmp
push
or
loopne
or
add
push
inc
popa
ret
shr
shl
cmc
pop
out
sub
sahf
imul
push
sbb
es
ficom
cmp
mov
pop
pop
ins
in
or
lds
ss
sbb
in
and
push
pop
adc
retf
add
xchg
mov
loope
inc
or
icebp
and
aam
dec
punpckldq
sub
and
mov
push
cld
aas
or
sub
pop
adc
inc
sbb
invd
push
adc
add
loopne
push
rcr
sub
add
pop
mov
pop
in
lds
jbe
sbb
xchg
add
jg
pop
mov
adc
out
dec
enter
popa
inc
add
cmp
outs
adc
inc
js
sbb
loopne
pop
loopne
and
pop
xchg
jecxz
add
push
jnp
scas
popf
sbb
and
or
push
mov
cmp
fwait
mov
cmps
aad
add
out
ja
dec
call
cs
push
enter
adc
push
dec
inc
add
fsub
xchg
sar
add
jae
fiadd
xor
sub
inc
inc
outs
cmp
and
xchg
or
add
pusha
add
stos
fild
xor
addr16
ret
and
inc
ins
outs
jbe
push
enter
popa
repz
dec
fsubr
mov
adc
test
stos
cmc
or
cmp
and
jae
or
or
add
cdq
inc
mov
inc
mov
add
imul
mov
mov
push
js
loop
mov
ins
dec
mov
add
inc
sub
movs
inc
xor
and
sub
inc
or
adc
lods
inc
push
cmp
add
lahf
mov
dec
dec
push
push
jbe
dec
sbb
sub
neg
jmp
pop
clc
cmp
fst
inc
jl
pusha
inc
push
pop
add
or
and
fs
retf
pop
pop
sbb
push
or
mov
dec
in
fiadd
xchg
add
add
sbb
inc
mov
imul
or
sub
ins
xor
es
pushf
pop
xor
adc
scas
fnstenv
jbe
test
cmc
sbb
clc
fwait
dec
sti
cmp
or
push
and
out
xor
lock
cld
jmp
out
ss
in
mov
cmp
jo
iret
repz
hlt
inc
out
cmp
call
je
fdivp
cmp
int3
sbb
xor
xor
sbb
jns
repz
sbb
and
pop
add
lock
pop
xor
es
mov
into
pop
hlt
movs
or
inc
pop
fwait
add
das
xchg
cmp
pop
push
mov
and
sub
inc
imul
push
add
mov
fldenv
ror
gs
or
(bad)
loopne
push
sub
push
inc
mov
pop
daa
cmpxchg
aam
xchg
data16
pop
call
and
ja
mov
xchg
ins
addr16
cmp
push
sub
push
adc
sub
(bad)
cmp
dec
cwde
and
push
and
push
push
and
push
mov
mov
pop
(bad)
jns
out
jo
xor
sar
inc
dec
fdivr
lock
rol
adc
pop
push
js
mov
mov
push
push
mov
fistp
push
loopne
or
xor
cmps
add
rol
inc
and
adc
mov
jl
push
(bad)
ins
push
pop
pop
das
in
mov
jp
aaa
inc
push
jo
add
cmp
xor
int3
lods
jg
shr
arpl
inc
fcomp
fidiv
or
in
gs
rcr
pusha
or
adc
popa
xor
sbb
int
mov
ins
dec
dec
gs
add
and
daa
fsubr
pusha
jne
inc
adc
adc
cs
retf
sbb
frstor
sti
and
sbb
das
lods
jnp
jmp
out
push
cmp
jp
or
xor
arpl
cmp
out
popf
movs
mov
push
jb
mov
mov
add
jbe
or
ja
add
repnz
nop
imul
and
popa
push
xor
je
xchg
inc
and
adc
and
adc
in
or
out
or
pop
cmp
test
push
push
mov
mov
dec
jo
jno
mov
div
or
dec
inc
imul
add
and
sbb
adc
outs
fstp
aaa
jo
and
int3
and
mov
stos
fs
iret
dec
pop
aaa
aam
cmp
jae
pop
push
dec
and
jb
pop
push
arpl
or
jne
or
sbb
adc
popf
test
adc
cmp
adc
adc
push
loopne
sahf
pusha
jae
mov
mov
jmp
outs
imul
bound
or
jb
aam
jns
dec
enter
outs
sub
push
ret
jl
lds
adc
and
fimul
xor
lods
fnsave
data16
add
add
pop
or
jnp
mov
inc
mov
or
push
pusha
and
mov
push
mov
in
imul
(bad)
scas
dec
shl
add
ins
cmps
ins
rcr
dec
xor
fld
jmp
daa
cmps
enter
jecxz
fsubr
push
and
and
push
and
scas
push
aas
cmps
outs
add
mov
es
push
loopne
inc
mov
pop
mov
xchg
or
adc
push
adc
add
data16
add
dec
lods
push
popa
jo
(bad)
cli
lods
dec
push
adc
push
lea
jae
push
or
ins
pop
jge
rol
lahf
ret
and
inc
sti
add
or
jo
call
add
inc
push
sbb
adc
add
ret
popf
add
mov
add
adc
sbb
add
or
pop
inc
into
mov
test
(bad)
sbb
xchg
in
xchg
jmp
out
outs
addr16
inc
daa
in
jo
es
outs
das
ins
outs
push
repnz
out
sub
in
pop
fist
movs
das
push
inc
push
mov
jmp
adc
loopne
stos
iret
or
inc
es
adc
lahf
fist
and
adc
inc
inc
sbb
adc
sti
adc
dec
hlt
lods
outs
addr16
(bad)
or
not
add
sbb
loopne
popa
(bad)
mov
xor
sub
dec
inc
nop
pop
inc
dec
push
sub
inc
fstp
or
inc
aad
push
inc
cwde
ss
pop
inc
iret
mov
dec
(bad)
mov
push
jne
push
hlt
cmp
call
fadd
jl
mov
mov
jns
mov
add
xchg
sub
xchg
test
adc
sbb
xchg
popa
add
push
inc
arpl
pop
push
push
stos
ret
cmp
inc
jmp
pop
mov
dec
adc
add
pop
cmp
add
add
jnp
mov
mov
add
add
jbe
aas
add
push
push
xchg
out
cmps
ins
or
adc
or
xchg
pusha
mov
xchg
std
es
(bad)
add
or
dec
ins
cmps
add
js
cs
add
nop
mov
dec
add
mov
in
fmul
inc
sti
cwde
sbb
mov
add
leave
and
dec
sbb
je
jb
xor
in
sub
push
jmp
cmp
dec
push
lock
and
pop
movs
jae
jbe
or
aam
ror
add
outs
push
mov
xor
mov
rcr
(bad)
popa
fs
out
sbb
mov
add
jns
iret
add
add
shl
inc
neg
gs
push
je
xor
popf
pushf
add
cld
adc
or
inc
sub
mov
mov
sahf
add
pop
and
lea
test
sbb
dec
outs
aas
mov
les
in
push
add
mov
and
pop
ret
and
(bad)
cwde
dec
cwde
ror
icebp
push
or
popf
retf
or
daa
or
ds
adc
retf
cmps
jo
call
or
push
push
push
and
push
mov
pop
push
fist
or
lds
pop
sub
sbb
(bad)
loop
xor
out
fcomp
mov
test
fwait
push
mov
mov
outs
and
loope
xchg
sub
add
sub
test
je
sub
ficom
pushf
sub
push
and
in
push
pop
ror
adc
add
in
imul
(bad)
out
and
clc
sbb
daa
dec
call
pop
lods
leave
pusha
pushf
js
adc
data16
push
outs
and
adc
or
inc
xchg
pop
ret
addr16
push
push
ins
add
pop
mov
adc
dec
gs
add
cs
(bad)
push
xchg
or
jns
ja
or
sub
or
push
jns
fabs
ret
jne
xor
addr16
adc
mov
fs
addr16
adc
sbb
loopne
xor
scas
push
jno
mov
mov
outs
push
outs
imul
mov
gs
push
lods
adc
outs
inc
fidiv
mov
adc
jge
jnp
mov
jl
movzx
mov
fdiv
test
xlat
inc
push
inc
push
ins
in
popa
jns
and
and
dec
and
xchg
iret
or
std
jns
pop
pusha
push
ret
and
dec
add
js
js
sub
cmovno
sbb
(bad)
sbb
adc
push
fdivr
xor
inc
inc
jo
test
inc
pop
movs
sub
pop
and
pop
lock
inc
cmps
sbb
sbb
ins
pop
inc
jo
add
cwde
stos
inc
add
mov
add
or
sbb
sbb
push
jb
add
mov
(bad)
aam
imul
or
mov
sub
dec
inc
or
cmp
jecxz
sub
jo
in
inc
dec
dec
pop
xchg
aas
add
mov
imul
cmps
or
xchg
push
or
add
ret
mov
add
adc
rcr
push
fst
cmp
and
inc
inc
data16
mov
mov
(bad)
fisubr
push
jl
add
sub
xor
cmp
or
iret
lods
shr
jb
daa
inc
lock
test
inc
mov
lahf
push
pop
xor
pushf
and
dec
sub
mov
(bad)
ficom
or
js
shl
xlat
mov
(bad)
push
cmp
pop
outs
retf
ds
cld
unpckhps
loope
add
jge
jle
ret
mov
mov
aas
shl
add
add
add
jg
ds
stos
add
jns
add
adc
pop
(bad)
mov
pushw
ds
aad
mov
adc
fs
enter
add
lock
xchg
pop
mov
adc
xor
jg
fadd
ss
fs
test
or
scas
test
and
inc
aad
or
cvtps2pd
add
add
xor
nop
mov
add
xchg
jns
xchg
lahf
test
sar
outs
jbe
dec
dec
xor
(bad)
int
test
mov
add
ror
jge
aam
mov
ins
sbb
movs
jecxz
loope
mov
push
outs
jb
mov
test
inc
xor
js
and
aaa
dec
test
cmp
fdiv
inc
dec
pushf
outs
and
adc
or
lahf
mov
pop
push
dec
lahf
pusha
push
mov
adc
adc
iret
add
pop
add
idiv
sbb
jbe
or
cmp
sbb
ret
or
dec
cmp
fcomip
into
add
inc
outs
cmp
xor
cs
sbb
shr
aad
xor
sbb
lods
adc
cs
in
jl
add
in
arpl
pop
cld
das
sbb
mov
jg
pusha
sub
push
fcomip
sub
jp
inc
jbe
das
cmps
int3
push
adc
retf
push
push
add
fs
cmp
and
cmp
xor
outs
pop
in
inc
dec
outs
je
imul
jnp
icebp
loope
mov
pop
dec
cwde
add
add
mov
jne
jo
je
push
sub
add
pop
jne
adc
push
mov
cmp
pop
and
or
or
add
or
lock
pop
or
loop
add
(bad)
jge
adc
mov
xchg
push
xchg
inc
add
xor
xchg
or
pop
add
js
add
xlat
rcr
inc
or
frstor
xor
add
xor
xor
push
inc
jecxz
sub
adc
sub
inc
mov
sbb
aaa
icebp
dec
sti
dec
pusha
xchg
inc
xchg
loopne
dec
cmc
fistp
cmps
sbb
lea
ficom
cmc
inc
sbb
adc
in
cmp
xchg
add
cwde
loopne
loope
sbb
call
jnp
test
enter
(bad)
syscall
xchg
inc
in
leave
mov
push
xchg
adc
das
shr
pop
dec
xchg
aad
sub
gs
mov
jno
aam
fiadd
inc
retf
mov
xchg
pusha
inc
aad
push
or
bound
daa
jns
fadd
adc
mov
jae
ins
test
push
rol
movs
mov
stos
jo
movs
lea
cmps
cmp
pop
add
cmp
call
jle
or
or
xor
add
inc
adc
xor
pop
or
test
js
push
jnp
aad
mov
sub
dec
pop
inc
push
dec
dec
call
sub
push
adc
sar
pop
sbb
push
(bad)
call
jmp
mov
mov
or
or
mov
inc
push
sbb
or
sbb
jg
jns
mov
pop
jl
and
push
pusha
add
xchg
jg
popa
xchg
arpl
test
xor
adc
iret
pop
and
mov
add
adc
dec
arpl
ret
arpl
arpl
sbb
jb
or
mov
clc
xor
or
xor
jne
add
push
adc
test
push
dec
nop
sbb
daa
xchg
cli
int
dec
cmp
rcl
je
or
pop
xchg
pop
pop
sar
ret
jo
pop
jbe
int
cs
gs
add
inc
mov
add
out
jnp
jecxz
jecxz
imul
ins
bound
popf
pop
adc
pusha
rol
xchg
or
xor
and
pop
enter
push
out
add
mov
mov
adc
mov
jmp
(bad)
fiadd
mov
add
or
and
mov
into
fisttp
jo
adc
loope
or
lea
or
or
jge
add
ss
scas
sbb
aas
int3
adc
and
add
inc
xchg
inc
jmp
dec
or
or
xchg
dec
aas
dec
mov
fstp
leave
test
sub
mov
out
jbe
mov
inc
or
(bad)
jmp
and
add
(bad)
jo
lods
pop
mov
in
pop
xchg
mov
push
stos
and
pop
inc
and
repz
jmp
lahf
or
mov
cwde
std
mov
jnp
(bad)
test
movs
das
bsr
je
mov
or
cmp
pop
sbb
or
loopne
out
or
jg
sbb
movs
or
arpl
jmp
add
sbb
repnz
mov
mov
dec
lods
sub
dec
sub
enter
ret
xchg
js
loope
dec
pop
push
xchg
or
and
dec
aas
add
pop
sub
xor
call
mov
loopne
into
or
push
outs
jns
fwait
mov
sar
clc
or
dec
gs
or
add
ja
inc
movs
sub
mov
stos
xchg
sbb
dec
int
(bad)
pop
rcl
lock
xchg
sub
dec
and
inc
sub
xchg
lahf
or
jb
lahf
ins
pop
or
mov
xor
push
dec
or
fisttp
adc
(bad)
push
inc
inc
fdivr
add
or
ins
pusha
jae
pop
arpl
or
xchg
push
xor
lds
aam
pop
or
push
out
stc
call
xchg
test
xchg
iret
and
cmp
fsub
adc
push
paddusw
jecxz
and
add
push
xchg
jbe
(bad)
xchg
cmp
inc
leave
or
ss
lds
das
xchg
xchg
outs
pop
xchg
fs
add
add
adc
and
or
fisttp
xor
add
and
and
or
mov
sub
xchg
inc
shl
mov
cld
xlat
adc
ss
lahf
jo
ins
imul
loopne
xchg
mov
push
mov
xchg
test
les
test
lahf
fdiv
adc
push
jo
sub
inc
xor
add
push
xchg
lds
into
mov
mov
inc
jo
jo
and
test
inc
inc
repz
add
sub
sub
jbe
or
aaa
popa
xchg
fs
pop
mov
outs
dec
outs
cmp
fwait
movs
sbb
jp
add
cwde
iret
jecxz
inc
jnp
cdq
push
test
sahf
push
in
mov
mov
push
call
(bad)
(bad)
popa
push
dec
iret
mov
xchg
sbb
dec
iret
cwde
push
xor
sbb
xchg
mov
nop
cmp
aaa
dec
push
es
call
ins
mov
mov
inc
push
mov
push
xor
fdivr
dec
sub
push
sar
mov
cmp
push
cmp
in
cmps
xor
cmp
dec
not
addr16
(bad)
aas
fistp
push
sub
mov
mov
ins
shl
das
nop
pop
push
loopne
mov
adc
ja
hlt
(bad)
adc
mov
push
ret
aam
push
cmps
arpl
pop
vpmovsxbd
aaa
inc
mov
scas
xchg
adc
cmc
push
mov
cmp
call
jecxz
jo
retf
mov
add
fisub
or
jae
je
inc
ds
retf
clc
outs
das
popa
or
inc
arpl
mov
(bad)
in
inc
ja
daa
arpl
mov
pop
popf
ret
jge
lods
and
stc
cmps
fisttp
mov
add
jnp
or
jne
movs
pop
loope
call
push
sar
or
push
or
mov
push
jg
imul
sbb
push
paddw
clc
cmp
mov
arpl
sbb
(bad)
inc
lahf
inc
jns
stc
jno
ret
xor
clc
stos
push
test
mov
sub
je
inc
or
jnp
in
js
xchg
pop
iret
std
je
and
jl
jne
jmp
(bad)
int3
sbb
and
clc
cmp
cmp
ror
mov
imul
mov
retf
mov
nop
xlat
dec
getsec
lods
in
xchg
push
mov
outs
pop
sub
inc
inc
sar
pop
add
fstp
ins
inc
test
adc
cwde
repz
shl
push
pushf
xor
inc
inc
rol
test
sub
jge
ret
push
and
test
mov
cs
sbb
test
dec
push
inc
lods
call
ins
xor
and
xor
aaa
bound
xor
pop
push
out
mov
mov
test
push
xchg
ss
mov
xchg
cmps
stc
cs
rcl
mov
push
ds
aam
loope
ja
mov
shr
push
fadd
outs
pop
in
push
jmp
mov
mov
pushf
call
or
inc
pop
lock
dec
mov
jp
loope
sub
ret
sbb
cld
and
push
jb
pop
sub
mov
pop
mov
cdq
enter
or
xor
mov
and
push
test
dec
sub
jp
inc
xchg
pop
inc
xor
push
and
in
xor
cmc
jge
xlat
movs
inc
fwait
cmp
or
inc
inc
inc
xchg
inc
sub
or
loop
xor
jecxz
lds
out
xchg
push
adc
cmp
stc
push
push
adc
jns
pusha
cmc
jo
add
pop
(bad)
push
(bad)
(bad)
dec
dec
jo
add
dec
push
jmp
outs
rcr
cmp
das
std
cs
cld
je
add
push
cmc
stc
and
push
xchg
jns
adc
jl
or
push
js
jecxz
mov
mov
sub
push
fisub
das
mov
shr
aas
das
cmp
mov
adc
je
mov
sbb
(bad)
adc
fld
mov
mov
push
xchg
das
movs
push
test
jo
stos
test
pop
hlt
pusha
cmc
push
xor
test
sbb
jg
fwait
rcr
push
xchg
movs
inc
ficomp
cmc
loope
or
jg
scas
push
add
push
pop
push
cmps
retf
out
leave
ins
in
ins
cmps
mov
lock
in
retf
pslld
mov
push
dec
dec
add
add
test
pop
push
ds
fs
in
jb
lahf
invd
test
in
shr
pop
xor
imul
mov
stos
aaa
sub
mov
sub
sahf
push
mov
clc
jle
sbb
mov
aas
inc
lods
sub
push
cs
imul
in
data16
das
aam
or
lods
pop
fs
ins
xchg
movsx
scas
addr16
jg
ret
mov
call
add
add
add
add
pop
clc
fwait
or
add
add
(bad)
(bad)
(bad)
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sbb
out
(bad)
out
(bad)
in
(bad)
in
(bad)
jmp
jmp
(bad)
call
jmp
jmp
jmp
jmp
dec
jmp
(bad)
(bad)
fimul
jle
mov
(bad)
(bad)
fldenv
call
jb
rol
clc
(bad)
call
call
call
dec
dec
dec
jmp
or
test
add
mov
adc
mov
bound
mov
xor
push
test
int3
push
and
rep
xrelease
push
mov
pop
push
push
inc
out
ds
pushf
fmul
mov
imul
ins
push
jae
stos
les
cld
push
add
push
push
jnp
jnp
int3
push
push
dec
aas
push
fcomp
int
(bad)
cs
bound
pushf
data16
shl
call
push
push
inc
mov
fnstsw
inc
ss
idiv
push
push
ss
push
sbb
fidivr
aam
adc
pushw
shl
push
push
xor
mov
push
xor
mov
sub
(bad)
scas
push
mov
or
cmps
call
cmp
push
adc
xor
inc
repz
mov
clc
jbe
dec
mov
addr16
test
ss
ret
call
(bad)
ins
push
inc
dec
ja
pop
jecxz
sbb
push
xor
pusha
mov
dec
add
or
xchg
or
test
push
pop
or
ud1
dec
dec
ins
scas
imul
(bad)
push
push
add
ins
fs
sub
cmp
cs
pop
sahf
inc
repnz
cmc
fs
popa
xchg
stc
pop
mov
adc
push
(bad)
cmp
and
mov
ret
inc
bound
add
pop
arpl
push
xchg
std
(bad)
or
(bad)
lods
(bad)
cdq
test
inc
iret
dec
js
repnz
dec
dec
add
push
in
sub
or
test
ins
adc
add
loope
loope
or
(bad)
rcl
and
or
sub
jbe
out
push
movs
pop
repnz
mov
mov
mov
rcr
bsf
ja
mov
mov
js
sub
add
xchg
inc
mov
add
mov
xchg
dec
outs
ins
jns
mov
mov
mov
mov
pusha
cmp
and
or
sub
mov
push
outs
shl
add
cmps
xor
jo
cmp
xchg
cmp
xor
loope
cmps
sub
or
jae
sub
sbb
and
push
xchg
sar
dec
outs
add
sti
push
sub
or
sbb
fs
and
adc
xchg
adc
sub
jae
pop
shl
cmp
aad
xor
cmp
dec
xor
xor
adc
in
sub
(bad)
shr
fs
iret
jb
add
xchg
jecxz
(bad)
push
sub
sub
stos
fimul
sar
ja
xchg
out
adc
push
jmp
dec
mov
push
sbb
push
fsubr
push
adc
add
jg
add
in
inc
ins
jae
mov
ins
push
fadd
dec
pop
xchg
je
sbb
pop
je
popa
add
hlt
mov
dec
jmp
push
popa
arpl
popa
and
push
adc
adc
movs
add
adc
push
ret
(bad)
or
xor
jae
add
mov
add
and
push
push
pusha
(bad)
mov
cli
mov
lods
retf
inc
or
addr16
add
adc
jno
or
or
scas
(bad)
adc
jmp
ins
add
ins
test
loope
jne
push
pop
mov
sub
mov
stos
mov
sbb
sbb
or
aaa
or
push
mov
sti
sub
xor
sbb
(bad)
hlt
add
outs
sbb
aas
mov
shl
jne
je
cmp
scas
dec
add
or
xor
mov
mov
pop
jno
jle
sbb
pop
inc
data16
lods
rol
(bad)
xchg
or
mov
adc
jmp
jnp
shl
inc
cmps
jae
dec
pusha
imul
mov
fadd
nop
cmp
dec
mov
clc
es
stc
bound
sbb
or
lods
xor
in
mov
xor
jmp
das
pop
add
sbb
mov
xor
add
cmp
jo
push
ds
dec
and
jg
mov
cmp
pop
movs
inc
aaa
mov
jae
inc
sbb
or
inc
js
or
fsubr
int3
int
inc
jg
mov
sahf
xchg
call
cmp
into
movs
je
popf
(bad)
cmp
dec
xchg
sub
xor
or
retf
popf
cld
pusha
push
mov
cmp
jne
dec
test
(bad)
fdivr
dec
femms
mov
and
mov
in
add
mov
enter
push
ja
ret
enter
jmp
enter
sar
enter
and
enter
adc
enter
enter
enter
xor
retf
scas
enter
not
enter
xchg
mov
retf
enter
and
push
dec
push
enter
push
clc
arpl
cmp
xor
aad
pop
cmp
std
mov
push
xchg
xchg
mov
mov
ror
sub
add
add
adc
clc
into
xchg
dec
scas
aad
pop
pop
inc
pushf
jmp
or
mov
push
xchg
cmp
push
xor
dec
or
popf
add
jecxz
sbb
arpl
or
ss
jecxz
in
jo
sbb
or
xor
adc
jnp
fwait
adc
jnp
inc
imul
mov
add
call
in
dec
adc
pop
call
movq
ror
shr
add
xor
mov
xor
jbe
xchg
test
inc
shr
xor
adc
aaa
retf
or
jo
mov
adc
in
pop
and
add
jge
lods
or
lods
or
mov
and
adc
push
jns
js
test
cs
pop
inc
pop
adc
jmp
push
add
cmp
adc
ins
int
stos
out
int3
int
sub
pop
fs
sbb
dec
imul
or
iret
inc
dec
mov
xchg
sbb
pusha
add
cmp
push
fmul
add
repnz
pop
add
ds
popa
push
sub
addr16
stc
lea
imul
lods
cmp
jg
xchg
imul
sub
mov
jg
rcr
xchg
pop
daa
pop
aaa
jmp
cmp
(bad)
fistp
dec
ins
gs
mov
push
mov
or
adc
add
adc
js
mov
cli
gs
push
dec
jo
or
nop
inc
je
jle
mov
adc
inc
ins
jo
popa
inc
cmove
imul
sbb
or
xchg
inc
push
dec
fsubr
int
addr16
ins
sub
push
push
(bad)
mov
adc
jge
cmps
pop
push
push
or
ficom
sbb
pop
outs
jecxz
inc
popf
or
inc
addr16
ins
aas
iret
cmp
sbb
pusha
and
ins
mov
adc
js
ins
and
cmps
push
jp
inc
xor
les
jl
cwde
mov
add
adc
fsub
jl
jne
jno
aam
movs
fucomip
cs
bound
or
or
or
push
popa
xor
movs
int
xchg
adc
popw
jns
inc
ja
mov
addr16
retf
cmp
fnsave
or
or
bound
test
add
and
imul
mov
(bad)
mov
imul
imul
xchg
pop
sbb
in
pop
add
adc
push
mov
jae
mov
mov
add
push
dec
mov
fadd
mov
jbe
adc
add
popa
add
push
adc
or
inc
xor
movs
lea
mov
mov
ret
pop
test
jmp
lock
push
fsubr
adc
pushf
sub
sbb
daa
pop
adc
push
dec
add
into
pop
adc
ret
mov
push
adc
cmps
mov
ret
imul
push
imul
popa
add
ja
outs
ret
mov
lods
mov
xchg
pop
or
add
ja
jae
test
push
movs
shl
sti
mov
pop
mov
test
cli
sar
js
xor
ss
pusha
push
sbb
addr16
and
je
or
aam
mov
sub
shr
mov
imul
cmp
test
xchg
addr16
dec
or
push
cld
les
in
cmp
stos
mov
fs
ror
mov
(bad)
xchg
shl
cwde
cs
jp
mov
xchg
test
xor
neg
lock
(bad)
add
dec
(bad)
(bad)
ret
call
(bad)
cld
(bad)
inc
lock
push
xor
fadd
(bad)
das
mov
and
fnsave
xor
(bad)
sub
mov
shl
scas
in
sub
dec
(bad)
repnz
sub
int
adc
scas
mov
mov
mov
shl
lock
inc
pop
shl
add
das
lods
inc
shr
add
xor
sbb
int3
jnp
sub
popa
sub
adc
adc
mov
mov
shl
add
adc
xchg
(bad)
es
or
loope
pop
cmp
push
mov
xchg
daa
in
cmp
sub
add
jne
jmp
pop
or
add
add
stos
push
je
or
shl
icebp
fld
ins
xor
les
or
repz
jmp
lock
xor
cs
sub
add
add
cs
mov
out
test
add
or
rcr
clc
(bad)
dec
outs
jmp
fcom
xchg
dec
push
sub
aaa
or
cmp
pop
mov
daa
adc
pop
daa
js
mov
es
sbb
push
pop
or
jae
push
test
fimul
push
mov
xor
sub
pop
mov
mov
or
push
mov
inc
jbe
push
adc
neg
or
fdivr
dec
push
adc
ror
push
mov
dec
outs
mov
fs
add
push
push
or
add
mov
cmp
inc
sti
xor
xchg
pop
(bad)
movs
and
add
lods
add
aam
push
std
inc
rcl
push
fadd
push
stc
inc
xor
add
and
call
and
dec
neg
inc
push
add
pushf
sar
clc
(bad)
sub
dec
clc
mov
call
sti
dec
js
sbb
pop
enter
pop
mov
push
dec
mov
rcr
sti
cmovo
pop
mov
(bad)
jg
mov
cmps
std
(bad)
in
mov
sub
jmp
xchg
retf
imul
push
js
retf
pop
sub
mov
outs
scas
inc
int3
iret
packuswb
outs
pop
dec
mov
retf
(bad)
int
pop
jle
sub
mov
das
pusha
push
icebp
cvtpi2ps
into
dec
cmp
xor
cmp
(bad)
sahf
push
add
lock
aam
xadd
dec
and
adc
push
xor
and
mov
(bad)
mov
adc
add
add
imul
push
pop
inc
cld
jp
add
outs
add
add
push
push
(bad)
inc
push
add
add
js
aaa
mov
mov
mov
mov
sub
dec
or
sub
push
push
mov
mov
mov
mov
dec
and
(bad)
jg
outs
and
mov
mov
mov
add
push
mov
(bad)
fild
jle
mov
mov
add
pop
mov
mov
mov
mov
sbb
mov
inc
mov
ret
lock
inc
inc
(bad)
mov
(bad)
mov
adc
adc
cli
(bad)
mov
(bad)
stc
or
outs
inc
ss
push
sub
push
adc
cmp
stos
dec
cmp
and
clc
cmp
push
shl
cmps
out
sahf
push
ds
mov
and
ds
mov
int3
les
push
mov
mov
or
outs
mov
push
xor
mov
push
and
xchg
mov
neg
jnp
mov
out
add
adc
test
out
mov
fild
(bad)
loope
out
fisubr
ins
mov
lods
jl
out
add
(bad)
push
je
mov
mov
ds
mov
inc
add
neg
inc
push
dec
push
fsubr
mov
mov
adc
sbb
push
mov
out
into
push
fdivr
es
xor
pop
ficom
jle
push
cld
push
out
mov
out
outs
movs
xchg
js
mov
cmp
out
mov
inc
push
pusha
aam
leave
cmps
ret
or
xchg
scas
ss
dec
lods
(bad)
scas
pop
lahf
test
jl
jge
jle
neg
mov
out
loope
sbb
sub
out
dec
sar
into
out
les
out
ja
jbe
mov
or
loopne
push
jbe
loop
rcl
or
xchg
lods
daa
pusha
ins
test
add
push
ins
fsubr
int3
pop
cli
loope
jnp
adc
add
xchg
adc
mov
xor
jecxz
sub
cmp
std
xor
daa
shr
cmp
retf
setge
add
and
loopne
inc
inc
popa
arpl
je
xchg
sub
or
add
dec
mov
inc
shr
and
in
stos
lods
fst
stos
mov
xchg
push
shl
pop
cmp
sbb
ror
mov
add
jb
add
or
jo
out
adc
sbb
push
aas
cmp
xor
pop
inc
ret
sbb
data16
cmp
mov
inc
or
fldcw
lds
adc
push
bound
and
jmp
sub
mov
icebp
cmp
adc
dec
imul
movs
inc
inc
cmps
jae
jp
cmps
aas
mov
mov
xchg
and
iret
push
pop
scas
es
xor
xchg
scas
xchg
ja
dec
pop
sbb
add
adc
leave
lock
mov
lahf
add
push
lock
pop
and
and
xlat
test
fcomp
out
jl
(bad)
enter
jae
jge
cmp
scas
pusha
jns
add
xchg
(bad)
mov
inc
or
je
or
inc
pop
xor
mov
es
cmp
mov
mov
imul
inc
add
mov
add
pushf
mov
fidivr
add
repz
inc
xor
push
inc
dec
dec
lds
ins
rcl
or
sub
ss
xlat
stos
xchg
or
aad
sbb
jae
mov
mov
add
loope
xor
nop
fdivrp
loopne
and
lds
dec
dec
cmp
and
gs
jns
xor
inc
(bad)
stc
xor
cmps
mov
jns
sub
or
jnp
add
pop
push
cmp
pop
lahf
addr16
and
push
movs
mov
jo
mov
inc
scas
adc
mov
cmc
rcl
xor
xor
jl
movs
es
sub
enter
xor
push
popa
or
mov
mov
and
adc
dec
add
mov
shr
cmp
pop
add
arpl
cmp
fcmovnb
pop
adc
das
movs
pop
mov
sar
mov
fimul
rcl
mov
adc
cmc
or
arpl
cmp
and
out
mov
push
pop
shl
adc
sub
pop
jne
js
ds
out
mov
movs
mov
or
inc
xchg
xchg
call
sub
sbb
cmp
shl
or
add
push
int3
ins
aaa
or
cmps
scas
inc
add
lods
outs
cmp
sbb
xlat
sub
push
in
mov
fld
and
inc
add
lea
add
in
add
push
mov
xchg
rcl
push
add
add
out
push
hlt
mov
adc
test
movs
aam
shr
fisubr
mov
cwde
into
inc
les
retf
mov
or
aam
shl
(bad)
retf
push
dec
in
mov
cmps
xchg
lds
pusha
ror
add
adc
mov
inc
adc
loop
leave
stos
test
pcmpgtb
cmp
pop
or
push
cmp
push
sti
rcr
cmp
daa
clc
loop
pop
ins
sbb
add
cmc
(bad)
rol
push
psubb
std
push
push
jb
jo
imul
test
mov
mov
sbb
lods
ins
adc
adc
out
add
pusha
mov
int3
cmp
mov
aad
lock
jno
test
mov
outs
pushf
hlt
in
test
hlt
in
hlt
arpl
add
adc
pop
inc
pop
mov
lods
ja
cmp
push
shl
dec
pop
sbb
icebp
aam
and
push
jne
je
ret
and
pop
ins
lods
sub
and
xlat
pop
out
sbb
js
fcomp
shl
pop
cld
fstp
mov
push
mov
cld
push
fmul
push
leave
or
jmp
mov
fdivp
push
in
jecxz
je
ds
(bad)
icebp
push
push
sub
aaa
je
test
repnz
xor
clc
sub
sbb
pop
pop
adc
add
fadd
pop
push
sbb
push
add
inc
add
sub
mov
repnz
sbb
pop
add
dec
js
fisub
lock
inc
rol
adc
ss
xor
call
or
aad
adc
dec
jmp
ja
int3
fs
add
push
add
popa
ja
inc
cmp
push
or
sbb
stos
mov
adc
loopne
fadd
push
(bad)
pusha
cmp
je
and
mov
sub
sar
jae
pop
and
mov
mov
push
push
mov
or
pop
pop
dec
lahf
addr16
or
ret
inc
call
imul
jnp
scas
xor
mov
mov
pop
add
int
call
pop
sbb
outs
inc
inc
inc
or
rol
push
adc
sub
inc
xchg
ins
dec
push
push
test
arpl
jnp
fistp
cmp
inc
dec
dec
lods
and
lock
push
cmp
jno
and
push
inc
rol
add
mov
(bad)
iret
fwait
jge
sub
das
jns
xchg
mov
dec
mov
or
inc
push
mov
jo
or
push
ja
sbb
scas
js
cmps
dec
mov
in
push
mov
and
inc
repnz
dec
ret
daa
push
mov
fisubr
fwait
jp
lods
test
push
add
sbb
or
outs
fiadd
and
outs
imul
pop
iret
loope
sub
push
int3
fisttp
push
fcomp
fimul
sub
imul
pop
sbb
jno
adc
xchg
cmps
daa
inc
or
or
jmp
or
adc
test
in
jmp
sub
push
xchg
dec
add
dec
push
or
jno
add
add
into
push
sbb
add
inc
fisubr
cmps
leave
ds
repz
push
mov
cmps
xor
mov
sub
jp
push
outs
ins
outs
mov
push
sbb
in
rep
add
inc
imul
inc
xchg
cmp
sub
inc
fmul
repz
or
retf
inc
push
sbb
lods
push
xchg
dec
adc
or
cmp
call
adc
mov
mov
pop
sub
add
in
jb
gs
jge
and
lock
outs
adc
or
(bad)
(bad)
xchg
jmp
repnz
inc
loop
imul
jnp
and
daa
scas
es
(bad)
and
pop
or
loop
fmul
adc
call
lods
pop
xor
and
lahf
xor
inc
ret
and
sub
inc
sahf
add
jnp
enter
(bad)
repnz
dec
dec
add
cld
imul
dec
jg
mov
add
sbb
mov
add
jo
and
xchg
xchg
cmc
sbb
inc
fimul
jbe
jo
cmp
call
inc
mov
pusha
js
xchg
test
imul
dec
sbb
pop
push
enter
dec
adc
sar
inc
or
in
cmp
inc
wbinvd
mov
jae
push
xor
push
push
pop
sbb
or
jnp
pusha
jg
xchg
cld
inc
dec
add
or
and
cs
outs
scas
mov
cmp
or
fcmovb
xchg
shl
pop
add
add
inc
inc
inc
inc
nop
mov
inc
cs
pop
loope
xchg
popa
js
jg
fwait
std
sahf
sbb
dec
daa
dec
jecxz
nop
push
sub
inc
test
daa
add
sub
ja
ret
add
hlt
sbb
or
pop
shl
sbb
fsubr
ss
daa
jecxz
dec
jbe
ds
cmp
pop
aaa
aaa
cs
add
lods
or
outs
jbe
cmp
dec
fs
sub
jg
neg
and
and
or
lock
ret
ins
imul
sub
loope
cld
sub
in
xchg
pop
inc
das
packssdw
ret
repnz
aad
outs
cmc
out
xor
and
pop
adc
push
loopne
leave
adc
lods
sti
adc
(bad)
pop
jns
lock
push
lods
out
add
push
jo
xchg
inc
imul
xor
add
adc
dec
pusha
sub
add
pop
adc
fist
push
and
ret
jecxz
in
or
out
pop
xor
into
stc
and
sub
iret
pop
sbb
and
in
cmp
ficom
or
push
cld
or
fild
out
inc
xor
xor
push
dec
xor
hlt
add
jmp
mov
xchg
(bad)
es
leave
inc
xchg
pop
pusha
(bad)
xchg
pushf
imul
mov
mov
sbb
adc
pop
int
imul
or
or
aas
iret
adc
int3
add
movs
pop
jnp
sub
adc
add
adc
jmp
cmps
inc
jo
lds
pop
or
mov
ror
movmskps
cmp
or
call
add
and
sbb
enter
dec
and
mov
or
les
or
inc
and
adc
popf
xchg
mov
data16
xchg
out
push
test
sahf
out
sahf
and
xor
dec
pop
jo
out
gs
mov
test
test
in
dec
fs
shr
out
jmp
shl
out
inc
shl
jmp
mov
lods
mov
fisttp
lods
in
xchg
(bad)
jle
cmp
test
loopne
push
and
shl
push
pushf
or
dec
clc
outs
and
push
inc
xor
adc
push
js
clc
aad
out
adc
pop
push
clc
add
or
(bad)
adc
pop
shr
fistp
cmp
clc
xchg
int3
imul
daa
jge
paddusb
fsub
jle
cs
shl
jae
outs
stos
adc
mov
mov
in
sahf
lea
push
test
or
lahf
cmp
outs
add
stc
les
xchg
sar
mov
mov
mov
xor
jbe
out
popa
dec
push
daa
ins
rol
int
loope
frstor
dec
push
shl
test
test
loopne
aas
pusha
ins
sub
ss
das
fs
loop
sti
push
push
es
pop
pop
ins
jge
rcr
ins
jne
jo
inc
loop
test
xchg
je
adc
xor
sqrtps
shr
mov
mov
pop
cwde
or
cmp
retf
jo
test
add
adc
adc
lds
sti
inc
call
cwde
mov
mov
into
dec
and
or
pop
xchg
mov
aaa
pop
inc
nop
cmp
inc
push
ret
add
adc
push
shr
out
outs
mul
adc
rcl
inc
in
aas
sub
or
lods
sub
ss
cmp
or
dec
jae
dec
imul
xor
cmp
and
adc
push
imul
data16
dec
adc
(bad)
cmovno
fldcw
sub
xchg
add
dec
add
push
iret
xchg
push
das
mov
dec
and
ret
and
inc
dec
mov
jnp
repz
add
sbb
push
sbb
lea
sbb
movs
sysenter
lods
out
fwait
std
sahf
mov
clc
out
das
push
push
add
sub
jle
pop
pop
out
loopne
push
push
dec
pushf
aam
imul
lea
adc
sbb
and
xor
loopne
dec
dec
or
xor
es
inc
stos
xlat
(bad)
adc
mov
scas
mov
imul
adc
das
pop
test
mov
add
sub
clc
mov
sub
ins
mov
cmp
add
xabort
adc
das
jno
cmp
scas
sub
jns
test
ins
jmp
adc
add
ins
push
and
loopne
lock
jb
or
ret
es
dec
mov
push
pop
sbb
in
daa
dec
aad
dec
mov
dec
push
sar
shl
fistp
pop
les
xor
popf
push
mov
sbb
mov
pop
xchg
shufps
or
icebp
sbb
cdq
mov
test
sbb
imul
lahf
and
mov
sub
inc
inc
shl
jmp
pusha
xchg
pusha
inc
push
pop
xor
adc
add
dec
sbb
aad
dec
arpl
add
daa
bound
jo
ja
mov
add
nop
pop
dec
cwde
or
sbb
das
sbb
pusha
(bad)
or
mov
sub
fcom
rol
ret
cmps
mov
fst
adc
adc
xlat
ss
and
add
scas
xor
push
inc
clc
sbb
test
jns
or
jae
push
pop
call
pop
xchg
repz
mov
add
xchg
neg
popf
sub
test
mov
or
lock
mul
jo
sahf
outs
pop
push
mov
xchg
ins
add
mov
xlat
add
jns
(bad)
int
pushf
adc
or
or
(bad)
std
ret
sahf
add
imul
popf
out
cmp
sub
jbe
jnp
nop
stos
mov
mov
ja
loopne
rcl
leave
cmc
popa
push
int
div
pusha
cwde
fcomip
adc
xor
xor
nop
push
adc
sbb
sub
inc
test
popa
leave
enter
or
push
and
push
arpl
outs
aaa
inc
into
aam
xor
inc
ror
ret
adc
stos
mov
mov
cmp
or
cmp
int
cmp
xor
pop
pop
sub
add
sub
shl
inc
inc
or
sbb
scas
add
inc
mov
add
loope
pop
rcl
jae
stos
pop
(bad)
xchg
(bad)
sbb
mov
dec
or
sub
(bad)
mov
adc
leave
das
test
cld
xchg
adc
inc
jl
dec
pop
add
cs
inc
push
aam
add
sbb
iret
jo
cmps
dec
ret
addr16
adc
push
jne
jne
or
mov
and
sbb
adc
inc
pop
push
and
inc
dec
movs
and
clc
jmp
clc
mov
mov
popa
movs
xchg
mov
inc
repz
sbb
repnz
mov
stc
mov
mov
loop
xchg
stos
push
dec
call
mov
push
lods
pop
ins
adc
popa
fidivr
dec
stos
jno
(bad)
or
cld
stc
(bad)
je
cmc
or
add
and
test
adc
gs
aaa
xor
xchg
sub
inc
or
add
call
shr
out
pop
inc
js
ins
xchg
push
sub
adc
jno
out
sub
pop
adc
xchg
lds
(bad)
cld
sbb
lahf
xchg
addr16
ror
dec
iret
mov
das
push
cld
dec
outs
and
push
and
(bad)
es
js
or
sbb
mov
mov
(bad)
cmp
add
jo
outs
or
pop
adc
and
les
and
pop
inc
or
(bad)
repz
int
mov
cmps
add
jno
cdq
push
inc
sbb
pop
imul
mov
mov
push
or
sub
movs
or
inc
lds
inc
mov
mov
rcr
and
imul
mov
dec
call
mov
sbb
ins
out
pusha
cld
int
cmps
(bad)
or
cld
cmp
pushf
pushf
mov
mov
push
jmp
repnz
pcmpeqw
adc
jp
or
sub
sub
push
ins
xlat
loop
lods
mov
jb
xchg
inc
cmps
dec
add
inc
adc
lods
cmp
cwde
mov
imul
stos
push
call
adc
ds
shl
dec
aam
int
(bad)
jp
cmp
add
push
mov
dec
inc
jge
pop
test
mov
aas
or
sti
adc
and
ret
and
jl
jno
add
jp
xchg
pop
dec
stos
add
and
add
hlt
adc
push
push
stos
scas
popa
cmp
push
add
sub
test
adc
or
std
jbe
out
(bad)
sbb
pop
sub
daa
or
pop
cs
pop
aas
add
cmp
mov
movs
mov
cmp
mov
inc
inc
dec
add
cmps
or
mov
test
clc
out
clc
(bad)
enter
mov
or
mov
ins
xchg
ret
cmp
jmp
pop
adc
pusha
and
sbb
jb
xor
add
push
inc
(bad)
xor
push
inc
cli
push
adc
jbe
mov
or
dec
mov
push
retf
test
je
sbb
cmps
mov
push
aas
fsubr
out
in
je
lock
je
jmp
ins
and
inc
mov
jg
pop
mov
orps
adc
or
or
mov
or
adc
adc
mov
inc
mov
and
add
pop
ret
nop
push
push
mov
push
push
aas
fild
adc
sub
add
or
add
mov
jae
cmp
sbb
ret
shl
push
push
push
je
jne
fistp
ds
cwde
ins
sbb
pop
and
lock
adc
sub
or
int3
cmp
sub
pop
pop
mov
(bad)
jge
fucomi
cmps
setne
test
sbb
cmp
push
mov
mov
das
mov
call
sbb
aas
push
lock
je
ins
push
dec
mov
pop
pop
dec
out
pop
ja
sar
call
push
push
mov
in
(bad)
jnp
shl
clc
add
add
fsub
es
mov
js
fsubr
adc
dec
mov
(bad)
std
and
pop
xchg
pop
sub
jl
pop
lea
(bad)
mov
pop
imul
rcl
inc
and
add
push
prefetch
popa
dec
imul
adc
inc
in
sub
dec
inc
fcmove
test
pop
xchg
xchg
rcr
fst
(bad)
sub
clc
xor
push
push
dec
push
mov
cld
int3
sub
inc
pop
sub
push
mov
sbb
data16
(bad)
scas
adc
push
scas
push
fadd
and
dec
jl
push
(bad)
cmp
les
mul
into
mov
aas
inc
rcl
pusha
push
and
call
div
push
inc
idiv
cmp
mov
enter
xlat
scas
mov
(bad)
jae
inc
and
cs
imul
cmp
push
mov
cmps
or
pop
jge
cmp
add
aaa
add
pop
sbb
inc
pusha
xchg
lock
adc
nop
mov
outs
or
push
enter
stos
push
call
in
stos
add
xchg
fiadd
(bad)
cmp
movs
inc
or
and
sbb
sbb
pop
pop
(bad)
rol
das
push
xor
or
xor
test
gs
mov
xor
adc
pop
or
jo
sbb
xchg
and
ds
inc
(bad)
clc
mov
call
push
sub
add
daa
ins
stc
jg
or
mov
or
xor
jmp
mov
jg
dec
add
dec
cmp
sete
test
pop
cmp
dec
mov
or
pop
pop
mov
mov
les
retf
aad
sti
clc
test
sub
or
loopne
cmp
pop
pop
rcl
push
cld
into
mov
mov
sub
jl
mov
jnp
lea
xlat
jmp
inc
movs
sbb
sub
mov
sbb
inc
(bad)
jecxz
add
inc
retf
shr
(bad)
push
clc
ret
push
ins
pop
clc
dec
and
pop
or
adc
inc
xor
push
adc
sti
and
mov
jne
sub
pop
ss
call
sbb
jne
dec
test
loopne
cmp
es
scas
mov
js
ret
jae
push
add
rcl
push
or
push
pop
fdivp
test
jne
test
jne
(bad)
pop
leave
cmp
mov
or
call
adc
sbb
cmps
imul
cmps
imul
scas
xor
lods
or
add
invd
push
ins
lock
out
test
or
dec
repnz
aad
mov
inc
test
ficom
pop
add
call
and
dec
aas
inc
(bad)
test
mov
cmp
mov
bound
call
add
pop
push
sub
pop
add
out
dec
je
and
movsx
inc
inc
repz
call
add
call
add
push
mov
sbb
(bad)
mov
movs
add
hlt
adc
enter
add
pop
aas
inc
cmp
xor
jg
cmp
jne
mov
or
inc
imul
add
loopne
adc
or
sbb
daa
push
mov
add
jmp
es
pop
cli
mov
out
cmp
pop
push
pop
mov
cwde
loop
arpl
fbstp
mov
push
mov
add
repz
add
fucom
or
lahf
mov
dec
cmps
loope
mov
mov
retf
adc
or
sbb
dec
mov
in
(bad)
sbb
xchg
or
push
or
push
pop
rol
adc
loopne
or
xor
mov
inc
icebp
mov
test
pop
mov
adc
fs
(bad)
sbb
(bad)
iret
push
or
sbb
sbb
mov
les
cmp
inc
mov
jle
inc
inc
mov
call
mov
stc
lock
stos
je
push
mov
shl
(bad)
sub
push
rcl
leave
dec
std
stc
mov
jge
jne
fiadd
loope
inc
or
iret
pusha
xor
pop
cwde
sbb
push
and
ins
add
shr
inc
inc
movzx
inc
ret
nop
sub
sub
pushf
sbb
das
(bad)
sbb
inc
mov
dec
jge
push
inc
(bad)
mov
cli
adc
inc
cmp
mov
mov
mov
push
mov
lahf
pop
outs
call
push
or
jle
shr
int
lock
addr16
(bad)
(bad)
das
mov
shl
and
jl
pop
mov
adc
sub
and
jge
outs
inc
sub
and
mov
pop
mov
push
pusha
mov
out
jmp
sbb
lea
lea
movs
add
xchg
je
add
dec
inc
and
or
in
sbb
mov
pop
add
enter
ss
in
(bad)
pop
(bad)
cdq
xor
sub
dec
ret
adc
lock
es
xchg
ret
push
jo
lea
les
loopne
jmp
adc
cmp
jl
cmp
jle
sub
dec
push
sub
sar
ins
add
push
push
das
leave
in
and
dec
or
adc
shl
mov
enter
neg
(bad)
rol
in
rol
mov
push
int3
pusha
jb
test
lahf
daa
pop
ret
fmul
and
outs
mov
push
dec
jle
jne
rcr
jae
in
jmp
cmp
(bad)
sub
sbb
lock
xlat
pusha
lea
sbb
cmp
mov
add
or
jo
fbld
ds
jmp
cmp
jne
or
push
or
scas
sbb
jmp
adc
add
mov
add
jecxz
xor
add
push
mov
push
mov
pop
mov
adc
and
fs
test
loope
movs
je
cmp
inc
adc
test
inc
push
add
fiadd
sub
outs
mov
inc
add
cwde
jge
push
inc
inc
je
push
lahf
in
mov
and
add
loopne
(bad)
mov
add
(bad)
scas
pushf
clc
cmps
push
hlt
xor
clc
sbb
in
push
into
cmp
inc
data16
aad
sub
inc
pusha
or
hlt
inc
adc
les
cmp
xchg
dec
inc
in
sub
mov
retf
mov
cmp
(bad)
cmp
je
mov
popa
clc
je
add
xor
idiv
push
inc
lock
xchg
xlat
aad
sub
jmp
push
cmp
sbb
inc
jl
ja
inc
hlt
mov
mov
jge
clc
push
xor
add
cmp
in
push
xor
mov
test
into
iret
clc
fcmovbe
shl
mov
or
xor
outs
mov
adc
mov
sub
daa
sbb
mov
cmp
push
cmp
pop
pop
fst
test
jo
imul
sbb
dec
dec
sub
ds
mov
pop
inc
xor
push
inc
mov
push
fadd
stos
ss
sub
add
sub
hlt
test
dec
jne
iret
and
cmp
or
xchg
jb
or
add
jae
and
xlat
lock
dec
jnp
vmread
adc
sub
and
xchg
mov
adc
pop
and
jmp
les
jl
and
hlt
mov
jo
leave
sbb
mov
mov
fimul
pop
add
sbb
hlt
loope
outs
and
shl
ror
mov
loop
cmps
xchg
imul
mov
cvtpi2ps
loop
push
jl
dec
ds
call
mov
iret
nop
adc
into
clc
dec
add
jmp
add
mov
test
jo
push
inc
fimul
maxps
pcmpeqb
push
add
cmps
jecxz
not
dec
sub
mov
push
mov
mov
dec
mov
daa
xor
sbb
push
or
lods
or
push
ret
fs
sub
add
or
clc
imul
scas
pop
jbe
shl
shl
or
cdq
cmp
test
push
jo
jg
mov
jo
out
cmp
sahf
loopne
bound
dec
jne
test
pop
add
inc
inc
dec
std
xor
cmp
mov
mov
fadd
hlt
in
pop
and
jmp
les
repz
ror
test
fadd
scas
dec
fistp
sub
add
add
mov
sub
xlat
mov
mov
or
mov
sub
test
mov
test
je
xchg
into
push
loopne
xor
pusha
xlat
cmp
cmp
mov
(bad)
fcmovnu
inc
dec
mov
add
adc
push
sbb
add
cmp
dec
and
push
or
xor
xor
adc
mov
adc
adc
mov
int
mov
imul
inc
shr
push
pop
jo
adc
lea
xlat
or
cmp
in
push
sbb
ja
call
mov
jno
loop
or
call
and
jne
xor
pop
and
cmp
inc
inc
jnp
xor
jp
cmps
popa
sbb
pop
or
xor
ret
fimul
jecxz
jmp
pop
int
arpl
xchg
and
mov
stos
dec
pop
dec
sub
add
jg
test
xor
jne
jmp
push
inc
xchg
bnd
cmp
js
nop
and
jbe
jle
lea
adc
ficom
mov
sub
mov
cmp
dec
mov
and
push
fs
jmp
add
jl
add
cmp
(bad)
mov
adc
sub
sub
mov
js
inc
push
test
sub
clc
push
mov
or
fmul
push
adc
mov
ret
gs
ret
(bad)
and
pop
sub
out
fild
adc
sbb
(bad)
pop
clc
add
lods
aaa
cmp
aas
inc
(bad)
nop
mov
(bad)
lea
mov
imul
jo
sub
push
jle
mov
adc
and
dec
inc
sbb
cs
cwde
fdivrp
fstp
fwait
jmp
xor
fwait
sub
dec
sub
out
push
add
retf
jle
mov
mov
pusha
sti
mov
sub
imul
xor
cs
xor
push
mov
pusha
push
adc
sbb
jmp
pop
add
cmp
popf
push
(bad)
and
push
popa
or
push
inc
or
add
adc
sub
mov
mov
push
or
pop
inc
add
and
enter
psubb
and
clc
sbb
and
test
in
dec
lea
inc
fisub
and
or
js
mov
iret
and
pop
jne
add
test
ja
mov
lea
in
push
jo
jo
mov
xor
sub
shl
mov
fwait
adc
sbb
cmps
sub
mov
ffree
or
push
or
or
pop
cmp
fcom
add
in
in
push
mov
mov
pop
fnstsw
sub
dec
cmps
xor
loopne
push
adc
loopne
inc
xlat
mov
or
pop
inc
cmc
xchg
sbb
push
sub
push
hlt
inc
dec
push
mov
add
inc
stos
mov
jmp
cld
inc
or
xchg
push
jne
dec
jae
sbb
mov
or
mov
(bad)
enter
aas
or
cwde
sbb
adc
xor
stc
fadd
cmp
in
mov
xor
mov
push
mov
inc
and
pop
add
loopne
sbb
loope
adc
pop
jmp
(bad)
pop
xor
add
movzx
mov
adc
push
cmp
and
clc
retf
pusha
test
in
test
cmp
je
sub
pop
xchg
test
pusha
cmps
daa
sbb
xor
sbb
pop
iret
in
cld
jmp
and
or
pop
jle
push
cmp
adc
mov
dec
(bad)
adc
(bad)
add
sub
push
sbb
mul
cs
je
outs
je
repz
movs
pop
nop
mov
adc
test
mov
jg
cmp
jne
xor
les
fwait
in
mov
ds
and
mov
pop
pop
mov
add
aas
or
cmp
and
mov
sbb
add
jne
mov
adc
adc
gs
rol
or
sub
inc
mov
adc
inc
inc
mov
add
ror
stos
aaa
push
inc
rol
sbb
dec
movs
add
test
sti
scas
out
jbe
cs
test
out
and
es
or
push
jecxz
mov
enter
in
adc
mov
ins
fadd
inc
imul
sub
imul
and
loopne
xchg
fnstsw
daa
dec
bound
cmp
ins
stos
mov
inc
aaa
stc
or
sbb
scas
xor
cdq
test
add
cmp
sbb
dec
loopne
scas
push
repz
scas
push
jbe
test
mov
sbb
xor
add
xlat
mov
or
xor
add
sar
cmp
mov
mov
ret
add
adc
push
cli
mov
jo
cs
out
dec
js
push
ror
(bad)
cdq
sbb
push
les
ja
jge
xlat
je
pop
push
adc
cmp
mov
inc
outs
pusha
repnz
jge
(bad)
shl
(bad)
push
or
pop
push
xor
mov
cmp
mov
les
adc
dec
ret
inc
dec
mov
inc
push
jb
loope
cmp
outs
add
(bad)
cwde
bound
xchg
mov
xchg
adc
jecxz
or
inc
pop
ror
arpl
pop
scas
lock
mov
lahf
dec
jmp
adc
and
mov
sbb
or
pop
cmp
jl
call
jno
hlt
gs
xchg
and
popw
hlt
or
xor
pop
cmp
push
jl
cld
cmp
stos
dec
cwde
out
stos
xor
mov
mov
loop
js
pop
rcr
jnp
push
cmp
dec
out
jmp
or
add
pop
or
or
push
pop
push
push
inc
jo
jns
pop
push
add
lock
sub
stos
mov
pop
lea
cmps
cli
fs
mov
rcl
addr16
addr16
and
rcl
js
pop
pop
cmp
psraw
lahf
test
je
jae
fld
(bad)
mov
jo
push
pop
push
pusha
mov
sbb
jge
idiv
jae
push
jge
adc
mov
daa
ror
xor
bound
xchg
xor
repnz
aam
adc
mov
pop
and
in
(bad)
test
add
and
push
adc
les
or
ret
pop
or
inc
or
clc
adc
popf
xlat
ins
or
jp
rol
add
mov
jmp
add
jmp
cmp
je
mov
test
jbe
push
adc
mov
inc
jl
and
push
sti
xchg
retf
cmp
adc
dec
test
cmp
cmp
jge
je
pop
inc
or
or
push
cmp
push
data16
mov
rcr
sbb
push
sbb
(bad)
xor
loope
jnp
(bad)
sbb
rcl
shl
pop
leave
mov
mov
sub
pusha
pop
and
xor
enter
jo
data16
mov
dec
loope
shl
mov
outs
je
aas
cmp
or
fdiv
and
movs
in
adc
outs
dec
add
jae
mov
cs
in
adc
add
fsub
sbb
dec
jne
mov
aam
data16
ss
mov
mov
push
call
xlat
pop
push
adc
out
pop
shl
jl
pop
inc
or
dec
in
mov
pop
stos
fs
sbb
add
sub
rcr
call
push
ins
aam
pushf
or
dec
dec
mov
mov
adc
je
add
inc
nop
pop
ss
push
daa
ror
retf
adc
add
mov
mov
push
push
js
jbe
and
inc
cdq
or
nop
cmps
or
je
jae
cmp
mov
add
sbb
lods
sbb
stos
inc
popa
cmp
sbb
mov
adc
or
loopne
add
cmp
xchg
adc
js
pop
cmovno
mov
ret
push
cwde
mov
inc
mov
fsubrp
sbb
inc
sub
(bad)
inc
mov
pusha
mov
ficomp
cmp
xchg
add
add
pop
xchg
iret
mov
xchg
fisubr
sub
mov
out
xchg
ds
and
outs
sbb
test
(bad)
push
cmp
push
jl
and
dec
inc
movs
ins
add
into
imul
shl
xor
and
sbb
mov
mov
mov
xlat
dec
add
jbe
jg
test
in
mov
adc
mov
xor
call
push
mov
lahf
popf
add
shr
pop
or
(bad)
in
push
fiadd
imul
adc
loope
jmp
fmul
cmp
cmp
sbb
fwait
and
push
inc
push
fwait
out
outs
mov
inc
popa
add
bound
adc
adc
push
push
sub
jmp
xor
sbb
add
cmp
fsub
fisubr
xchg
dec
mov
push
push
push
adc
adc
inc
hlt
sbb
pop
add
adc
push
push
mov
push
and
adc
push
sub
cmps
aaa
xchg
test
mov
adc
jnp
push
mov
dec
cmp
ror
push
inc
outs
aad
movs
clc
lea
cwde
mov
or
adc
cmps
int3
jnp
jno
add
jmp
pop
lea
mov
imul
repnz
js
push
ss
ins
clc
aas
pop
aaa
nop
mov
ficom
jl
imul
mov
add
pop
daa
popa
xor
dec
push
push
scas
pop
call
dec
rcl
xlat
cmp
lds
xor
dec
mov
aaa
adc
xor
add
pop
mov
and
xchg
or
push
mov
jmp
xchg
clc
fucomip
add
xor
neg
sbb
push
push
adc
sahf
out
loope
sbb
pusha
loopne
dec
add
push
cmp
rcl
(bad)
sbb
push
jo
sbb
cmps
add
mov
adc
push
psubsw
clc
lahf
ret
cmp
je
and
test
jo
adc
mov
aaa
mov
adc
xchg
cmp
jne
adc
dec
jne
movs
adc
pop
lea
xchg
sbb
in
push
and
pop
mov
mov
sbb
xchg
movs
in
or
pop
mov
add
cmp
das
fdiv
scas
inc
jo
inc
mov
arpl
dec
jmp
or
nop
cmp
rcr
push
xchg
push
mov
add
push
adc
mov
or
push
mov
stos
lods
stos
nop
inc
or
es
sub
cmp
sti
add
in
movs
pop
aas
fiadd
mov
pusha
cli
cmp
fsub
and
pop
shl
jle
or
pop
dec
je
push
cmp
inc
jmp
sub
(bad)
fsubrp
cmp
pop
sub
dec
mov
add
xlat
fdiv
jg
test
je
or
bound
cmp
shl
aam
add
sub
cld
mov
push
cld
je
push
xor
das
add
shl
sub
push
cmp
rcl
shr
push
repnz
adc
push
jmp
iret
jmp
ficom
jle
out
test
sub
sub
outs
add
mul
mov
mov
jo
int
or
loop
call
and
mov
cmp
mov
imul
je
and
jmp
mov
dec
cld
add
outs
and
shr
mov
sub
adc
push
(bad)
cmp
or
int3
retf
and
bound
or
js
mov
push
mov
mov
mov
push
test
dec
mov
mov
fs
add
imul
pop
pop
leave
sbb
test
cmp
or
push
pusha
push
adc
cmp
adc
dec
sub
setb
fdivr
mov
adc
cmp
jne
xor
aad
sbb
sub
je
ret
adc
sbb
fdiv
mov
(bad)
fwait
cmp
(bad)
xchg
retf
xchg
pop
or
or
loope
loope
pop
je
mov
sbb
or
std
test
or
adc
adc
or
add
or
pop
fs
push
rep
adc
mov
inc
mov
mov
cmp
mov
or
adc
aas
xchg
inc
iret
sbb
outs
je
ds
adc
fst
(bad)
sar
lods
aaa
pop
xchg
push
ja
push
data16
test
pop
mov
retf
aas
lock
sbb
test
pop
mov
xor
push
mov
clc
mov
jns
in
call
mov
mov
dec
call
sub
mov
cmp
(bad)
sbb
nop
int
fsubr
test
xchg
nop
retw
xchg
jge
into
jno
test
pop
shl
ret
add
or
add
inc
test
cmp
sub
in
out
mov
das
or
mov
or
mov
ins
mov
loopne
fcmovnu
jno
or
sahf
pop
data16
sbb
push
sbb
mov
repnz
pop
dec
xchg
cmp
inc
cmp
ins
push
dec
dec
out
or
add
ds
ret
pop
addr16
mov
push
dec
imul
mov
addr16
leave
arpl
mov
nop
add
movs
iret
push
addr16
xchg
or
push
test
cmps
inc
inc
(bad)
xor
lea
jmp
xchg
fwait
xor
inc
sbb
(bad)
loope
cmp
mov
adc
and
sub
loopne
cmp
xchg
addr16
sahf
pop
cmp
adc
or
jne
xor
pop
push
inc
in
inc
cld
push
out
rcl
fdiv
dec
xor
mov
aam
arpl
pop
dec
cmp
and
movs
or
repnz
sar
(bad)
mov
gs
fcom
pusha
pop
dec
inc
pusha
pop
jmp
pop
push
mov
retf
or
push
mov
mov
xlat
jne
sbb
repnz
cmp
or
and
sbb
xlat
or
(bad)
adc
nop
adc
or
daa
push
xchg
rcr
and
or
mov
add
sbb
or
scas
std
scas
push
mov
adc
dec
push
adc
sbb
adc
mov
dec
or
and
sub
push
jbe
ficom
in
jp
sub
adc
adc
dec
ror
jl
mov
out
cmp
inc
pop
or
add
add
pop
cld
out
shl
xor
xor
aam
sub
(bad)
jg
call
add
push
gs
ror
inc
hlt
adc
pop
stc
xor
adc
bound
xchg
push
retf
hlt
mov
fcomp
outs
push
mov
mov
loopne
pop
lock
and
(bad)
fcmovne
ss
add
or
add
add
mov
xchg
xchg
hlt
call
pusha
bts
mov
add
xchg
call
or
push
or
idiv
pop
js
imul
push
stos
shl
enter
fiadd
xlat
adc
inc
push
adc
or
ja
fcom
mov
pop
pop
jl
js
sub
push
pop
add
and
scas
push
sbb
cmp
sub
dec
sub
and
adc
push
iret
or
not
mov
leave
les
dec
and
inc
mov
or
push
loop
xor
sbb
ss
shl
mov
add
adc
rcr
push
fsubr
pop
out
inc
mov
ins
mov
sub
pusha
xchg
cld
push
pop
inc
scas
lock
dec
cmp
je
sub
push
push
int3
enter
or
jmp
inc
push
pop
call
dec
repnz
out
mov
jmp
dec
adc
loope
out
cmp
lahf
add
and
sub
(bad)
outs
mov
sbb
push
xchg
push
sar
sahf
loopne
les
xchg
jne
fstp
sub
or
pop
in
arpl
mov
mov
and
pop
mov
imul
adc
dec
dec
aad
loopne
das
dec
sub
xchg
movs
adc
add
(bad)
jmp
aam
push
pop
mov
mov
test
pop
jb
pop
cmp
and
cmp
je
inc
pop
ins
xor
int3
adc
rcr
xchg
jmp
sti
fist
cmp
je
mov
inc
arpl
push
adc
retf
pop
(bad)
xor
lods
clc
addr16
inc
idiv
mov
test
je
jle
add
jne
lea
sbb
push
inc
sub
jge
out
cli
cmp
dec
in
jmp
push
add
popa
add
xchg
sbb
add
imul
sbb
and
push
inc
jns
cmp
lock
es
rcr
in
cld
jnp
or
adc
icebp
das
mov
sbb
dec
dec
dec
mov
push
mov
test
stc
jp
out
mov
inc
dec
mov
hlt
or
sbb
cmp
inc
(bad)
xor
sbb
ds
std
cmc
sub
mov
sbb
push
pop
xchg
inc
xchg
cmp
mov
int
add
push
push
push
dec
sar
and
bound
dec
popf
shl
or
nop
pop
fnstsw
push
mov
xor
mov
fcom
(bad)
nop
mov
pop
xchg
lods
je
xchg
outs
nop
test
xlat
push
sbb
test
jg
mov
mov
fs
xor
mov
ficom
push
xor
mov
xchg
retf
fnstcw
inc
(bad)
or
jp
mov
pop
les
push
lea
inc
mov
lods
jle
push
(bad)
std
ror
add
add
and
mov
shr
mov
jb
pop
pop
cmps
inc
test
push
ffreep
cmp
or
add
aad
call
and
scas
(bad)
imul
mov
cmp
or
add
in
add
pusha
cmp
add
call
adc
mov
mov
cdq
adc
mov
xor
cmps
gs
in
push
fs
fild
in
xchg
fisub
fnstenv
xor
adc
nop
arpl
jle
adc
sub
arpl
cmp
shufps
and
xchg
(bad)
mov
dec
and
fwait
and
pop
sbb
mov
sub
in
aas
(bad)
cmp
je
mov
hlt
add
inc
mov
js
cmp
push
bound
add
xor
scas
fs
adc
scas
push
push
and
rol
cmp
and
aaa
mov
mov
aas
emms
lods
adc
hlt
inc
cmp
stc
popa
jg
add
cmp
movs
cmp
lods
ret
add
jmp
cmc
jno
mov
clc
mov
mov
repnz
daa
nop
enter
in
and
(bad)
scas
leave
or
daa
out
xor
stos
cmp
jg
test
cmp
je
mov
xchg
mov
sub
(bad)
jno
aaa
push
clc
mov
cmps
sbb
int
stc
push
dec
(bad)
(bad)
icebp
adc
lock
je
and
xor
movs
rcl
push
loopne
je
cmp
mov
mov
in
adc
push
mov
sub
mov
lds
push
cmp
adc
cmp
add
loope
daa
add
bound
outs
ds
jle
inc
cmp
test
aaa
fadd
bound
mov
clc
icebp
test
daa
adc
pop
adc
cmp
jne
jmp
test
dec
fsubr
loopne
adc
xchg
push
sub
popa
add
or
ret
adc
jle
dec
fistp
add
inc
pop
inc
je
std
(bad)
sbb
lea
outs
lea
mov
fsub
sbb
and
jecxz
jne
jg
jns
cmp
xor
push
mov
lahf
jle
imul
jb
mov
cli
repnz
or
pop
add
pop
cdq
sahf
add
cmp
or
test
cmp
add
sbb
pop
aas
push
or
jl
dec
retf
(bad)
in
rol
xor
add
daa
ins
lock
ins
sbb
popa
mov
ins
or
mov
dec
inc
inc
mov
xor
daa
movzx
push
stos
xor
or
push
or
push
retf
cmp
xor
loop
and
ins
push
ret
dec
ror
xchg
mov
call
ret
jne
sbb
sar
jne
pop
enter
adc
fidiv
popa
leave
sub
add
lods
shl
dec
add
inc
dec
mov
mov
stos
ds
sub
push
push
enter
or
cmp
adc
fs
dec
xchg
mov
pop
jmp
cmp
scas
add
dec
xchg
fisttp
movs
xchg
adc
sub
jmp
js
loop
ret
addr16
mov
enter
sub
sbb
test
pmaxub
les
sbb
pop
cld
xchg
mov
push
push
popa
es
rol
xchg
(bad)
hlt
std
and
xor
inc
mov
xor
jo
adc
inc
cmp
test
sub
cmp
cld
imul
pop
lea
xor
mov
adc
pop
fstp
add
xor
push
sbb
or
xchg
or
in
add
sbb
sub
scas
fbld
inc
les
ret
loopne
out
fimul
jne
test
add
clc
or
pop
test
xor
xor
inc
mov
and
mov
jmp
pop
cli
pop
xchg
adc
ret
inc
add
stos
or
mov
mov
dec
loopne
inc
into
mov
gs
inc
(bad)
cmp
xchg
shl
dec
and
or
repz
xchg
loope
xor
and
loopne
mov
repnz
mov
push
jmp
push
pop
enter
mov
mov
or
shl
test
mov
add
out
cwde
fisttp
cld
and
push
dec
pop
cs
adc
push
ficom
xlat
push
dec
mov
cs
push
fwait
and
repz
inc
inc
adc
test
adc
adc
(bad)
inc
ins
adc
dec
sub
inc
or
loope
sbb
fwait
mov
lds
xor
pop
add
lea
fld
ds
pop
cld
cmp
(bad)
adc
sbb
outs
add
outs
or
push
dec
cmps
sub
inc
and
dec
push
clc
pop
pusha
adc
je
cwde
rcl
sbb
pop
push
and
push
mov
push
inc
jecxz
sbb
cmps
mov
(bad)
cmp
cmc
scas
in
inc
jg
add
add
mov
sbb
jge
add
jle
xchg
add
pop
sub
pop
push
je
mov
push
pop
xor
outs
and
add
or
push
or
mov
or
rcl
mov
jg
jb
adc
sbb
sbb
(bad)
(bad)
faddp
inc
repz
hlt
sar
repz
mov
push
sub
in
xchg
dec
cmps
cmp
ds
jne
add
imul
mov
test
adc
mov
sahf
int
call
cs
imul
out
xchg
and
dec
hlt
mov
inc
or
jecxz
jmp
sub
loop
clc
js
mov
mov
scas
es
int3
mov
cmp
or
push
adc
pop
(bad)
push
or
test
loope
pusha
gs
retf
test
iret
xchg
cs
enter
pop
(bad)
out
ret
inc
xlat
loopne
mov
ss
or
dec
push
add
add
mov
and
ror
inc
add
stos
(bad)
xor
or
or
mov
call
cwde
in
push
xor
push
sub
sub
sub
mov
jge
fadd
add
dec
sub
mov
add
sub
cmp
(bad)
aaa
call
in
inc
mov
inc
das
in
or
imul
adc
add
pop
and
jmp
mov
ror
adc
pop
daa
push
loop
addr16
mov
pop
ret
test
test
outs
call
cld
jae
push
js
or
mov
jne
aaa
enter
stos
pop
loopne
add
jb
xchg
rcr
add
add
je
push
cmp
mov
mov
and
xchg
jnp
push
cmp
adc
pop
sub
test
inc
or
ret
in
fisub
inc
loopne
out
push
add
jmp
movs
sbb
dec
outs
xchg
mov
xor
cmps
sub
or
sbb
sbb
jne
(bad)
and
cmp
dec
xor
dec
ror
push
mov
mov
cdq
sbb
jecxz
fwait
xchg
call
pop
inc
dec
sbb
mov
retf
aam
fld
aas
inc
fadd
in
xlat
xchg
shl
les
test
std
xor
repnz
cs
call
fadd
fwait
mov
sti
ror
aaa
test
sub
add
cwde
cwde
or
ret
pop
js
mov
add
sub
mov
xor
push
and
bndldx
rol
or
mov
out
jecxz
ror
mov
jl
push
hlt
les
jl
mov
push
lea
jne
pop
jecxz
arpl
inc
loopne
push
std
sbb
pop
(bad)
jne
xchg
in
cmp
fisubr
mov
cmp
call
pusha
fistp
lock
sar
ficom
add
(bad)
adc
movs
es
sub
add
push
dec
repnz
sti
iret
and
or
repnz
rcl
push
je
mov
sub
jo
lahf
call
cmp
hlt
lds
fs
xor
and
lock
sbb
and
adc
dec
and
lea
popa
jmp
and
adc
inc
ret
and
mov
fisttp
das
sbb
cmp
je
out
sbb
ret
outs
inc
call
test
pop
lahf
add
inc
mov
jle
add
add
out
add
dec
adc
or
fild
inc
add
fistp
clc
cmps
test
je
add
sub
jae
sbb
mov
sbb
mov
xchg
lock
mov
sbb
inc
push
pusha
fsincos
add
mov
or
and
aaa
adc
and
in
adc
inc
cdq
(bad)
rol
sub
and
daa
scas
movs
inc
and
add
call
add
mov
mov
add
repnz
add
movs
add
mov
mov
(bad)
js
test
jbe
ins
jmp
aas
mov
adc
out
push
leave
dec
out
sub
sub
setae
ror
loope
int
jo
mov
jl
add
mov
sub
int3
add
adc
cmp
mov
push
or
fsub
push
jmp
clc
sar
jge
or
inc
out
aaa
shl
push
mov
scas
sbb
ficom
stos
fwait
mov
or
inc
inc
inc
inc
cld
and
out
mov
retf
push
jmp
mov
ret
xor
in
dec
pop
retf
jne
ror
xchg
enter
ret
sbb
or
ficom
iret
inc
push
adc
mov
mov
or
and
jae
lods
fld
loopne
sbb
and
sub
inc
add
inc
or
cwde
out
repnz
aam
dec
je
jmp
(bad)
sub
push
push
or
and
dec
add
or
sub
mov
(bad)
call
pop
push
mov
mov
rol
add
mov
push
sbb
je
adc
jb
add
or
ror
std
(bad)
je
mov
jb
and
jns
sub
jle
add
push
jb
adc
xchg
dec
cs
xor
sub
mov
fadd
bound
pop
push
jl
clc
or
jmp
push
inc
push
mov
push
punpckhdq
ds
jae
and
not
cmp
add
pop
or
inc
in
mov
adc
rol
jecxz
cmp
mov
and
inc
adc
mov
mov
push
test
inc
xchg
xchg
ss
push
sub
push
push
jle
inc
cmp
xor
pop
div
inc
or
out
sub
cmc
dec
or
inc
stos
fcomip
pusha
adc
adc
mov
mov
aas
cmp
shl
out
out
(bad)
fstp
sub
dec
pop
add
jmp
cmp
mov
lahf
sbb
adc
xchg
mov
inc
sbb
pop
lea
add
ret
mov
dec
and
jb
data16
mov
push
or
pushf
mov
push
push
mov
and
push
bound
jo
rcl
xchg
jecxz
and
ffree
mov
lea
call
or
dec
dec
dec
add
jmp
mov
stos
(bad)
fimul
mov
call
inc
mov
mov
inc
push
and
push
shl
xor
call
xor
mov
aas
outs
bound
add
scas
or
fild
add
test
inc
push
add
(bad)
das
add
fisttp
push
aaa
dec
push
adc
cmp
push
clc
cmp
outs
lahf
fidiv
xchg
cmp
sub
jb
mov
mov
push
sti
add
mov
test
pop
fcomi
sbb
addr16
inc
mov
push
inc
imul
ds
ror
(bad)
rcr
and
push
pop
push
mov
cdq
inc
dec
add
xlat
push
dec
sbb
xor
test
movs
dec
or
sbb
in
in
rcr
xchg
movs
push
jmp
pop
xor
test
mov
pop
and
add
ss
and
inc
popf
inc
pushf
sbb
push
push
sar
push
inc
lods
pop
xor
and
jp
mov
and
dec
mov
add
xchg
inc
fcomp
sbb
mov
add
pushf
mov
inc
add
add
mov
enter
add
enter
jecxz
ror
and
cmp
or
cmp
pop
xor
add
jb
ins
pusha
push
jo
aas
or
repnz
sub
imul
pop
imul
in
pop
leave
xor
or
inc
fidivr
jb
push
or
dec
jbe
scas
in
dec
out
addr16
out
ror
scas
inc
scas
cmp
pop
mov
adc
push
cmp
add
jcxz
push
shl
sbb
add
jmp
sbb
push
ror
jmp
mov
arpl
sub
aaa
fbld
push
shl
and
retf
add
or
ins
enter
outs
loope
or
cli
test
sub
pop
xor
push
push
push
add
in
jg
adc
jle
lods
ror
fwait
cmp
mov
ret
or
jno
or
rcr
or
cmp
div
push
push
dec
mov
arpl
out
mov
adc
dec
and
fs
push
dec
inc
pop
add
das
sub
sbb
je
rol
sbb
inc
add
ss
adc
inc
mov
not
idiv
cmp
ror
xchg
xchg
inc
psubd
sub
test
dec
aaa
lock
mov
xor
xchg
inc
mov
sbb
dec
gs
sub
cmp
or
mov
push
adc
pusha
or
sar
sub
loope
jne
int3
or
jnp
xor
imul
dec
fistp
add
lea
push
hlt
repnz
inc
and
scas
xchg
sbb
(bad)
push
loopne
jb
rcr
push
cmp
push
ins
add
mov
adc
sar
lea
or
xlat
dec
lds
or
xchg
xor
mov
mov
add
aam
daa
stos
mov
movs
and
push
and
aad
dec
ret
aas
fcmovbe
test
pop
fadd
pusha
sub
sub
cmps
xchg
add
xchg
in
inc
mov
pop
push
gs
sbb
(bad)
std
mov
jnp
and
adc
retf
sbb
mov
inc
int3
aam
into
and
call
cmps
and
loope
dec
inc
loop
(bad)
int3
inc
sbb
mov
pop
dec
inc
daa
aas
cmp
add
shl
mov
imul
and
cwde
xchg
mov
loopne
jae
jnp
or
(bad)
not
(bad)
in
cmp
jo
lock
xchg
push
inc
add
push
xchg
bound
mov
cmps
data16
cwde
mov
test
mov
lds
leave
sub
push
jge
cmp
mov
or
or
mov
stc
jle
adc
or
push
mov
addr16
adc
mov
xor
je
push
pop
lock
jne
test
adc
and
add
ret
pop
inc
add
or
shl
adc
mov
push
test
add
cwde
mov
pop
inc
dec
gs
adc
cld
cmp
in
adc
mov
sub
loopne
xchg
pop
lods
or
pop
push
cdq
pusha
add
test
sub
and
mov
clc
sub
inc
dec
rcr
adc
mov
je
sbb
add
sub
push
scas
ins
sub
push
test
cmp
push
sub
rcl
lahf
hlt
cdq
mov
les
push
mov
add
push
push
add
or
sbb
icebp
add
mov
push
(bad)
call
add
pushf
ja
pop
sbb
repnz
test
adc
dec
mov
js
cmp
mov
sub
(bad)
stos
shr
push
loop
mov
xor
and
test
adc
adc
cmp
retf
or
xchg
jns
jg
aas
jbe
or
nop
inc
mov
push
(bad)
or
adc
(bad)
jge
(bad)
sbb
cdq
test
test
mov
cs
rcr
ja
arpl
mov
sub
or
test
(bad)
aam
push
pusha
rcl
jo
in
mov
cmps
lock
cwde
adc
cmp
sub
sbb
push
jbe
in
imul
mov
xchg
iret
push
sbb
xchg
pop
pop
sti
adc
pop
or
dec
pop
pop
cmp
icebp
push
push
and
ror
test
sbb
mov
jnp
push
pusha
xor
aam
adc
inc
cmp
out
(bad)
fucomi
or
(bad)
push
adc
cmp
je
mov
or
in
ret
out
and
in
rcr
in
adc
fsubr
add
and
dec
and
add
mov
pop
cmp
mov
push
jne
mov
repz
in
push
dec
cmps
add
repz
aam
das
rcr
aas
inc
xchg
sahf
pop
into
xor
mov
movs
dec
xor
dec
cmp
push
push
sub
push
lea
push
aas
pusha
mov
xor
sub
mov
adc
dec
add
push
and
mov
push
xor
sub
add
fimul
pop
pop
or
movs
fist
push
clc
sub
lods
pop
adc
push
or
sub
test
push
or
loopne
add
sbb
mov
cmp
push
push
and
xor
sub
ja
aad
dec
cmp
arpl
and
cmp
je
pop
inc
daa
mov
sub
jge
add
test
call
jns
rcl
push
fwait
xor
fwait
jge
mov
sub
push
or
push
jb
mov
mov
inc
jp
adc
clc
sti
adc
pop
push
cmp
xchg
mov
mov
loop
and
sub
data16
ins
push
dec
fisubr
inc
cmp
leave
aam
inc
dec
adc
or
or
movs
sahf
push
and
cpuid
arpl
cmp
adc
stos
lock
nop
shr
lea
xchg
pop
mov
test
sbb
jo
popf
xchg
sub
and
adc
and
cs
mov
xor
hlt
(bad)
dec
adc
sbb
in
rol
dec
js
and
dec
or
(bad)
push
leave
ins
gs
dec
jmp
push
dec
loopne
retf
(bad)
push
mov
inc
rol
scas
movs
xchg
movs
sbb
mov
jae
scas
js
sar
sub
adc
div
xchg
mov
mov
mov
mov
aaa
pop
add
dec
dec
pushf
aaa
not
mov
ret
mov
rcr
add
fcomp
fstsw
sahf
jae
fiadd
dec
loopne
mov
sub
addr16
push
popa
xor
push
mov
jg
mov
ficom
inc
jg
mov
jmp
(bad)
std
fild
xor
ins
cmp
push
add
gs
out
adc
lock
push
ins
lods
adc
or
dec
sub
iret
mov
test
sbb
sbb
clc
cmp
jl
xor
and
mov
jg
xor
ss
js
call
dec
or
je
add
jmp
bnd
in
aam
xchg
inc
or
(bad)
xor
or
into
sub
xor
sahf
(bad)
or
mov
lock
pop
shr
mov
pop
inc
push
push
push
push
inc
daa
je
cs
inc
(bad)
push
mov
jge
repnz
add
and
jmp
mov
mov
retf
add
push
cld
or
das
retf
pop
pop
mov
push
mov
or
push
outs
pop
call
sbb
jnp
(bad)
jmp
and
adc
push
cmp
in
je
mov
push
mov
cli
or
mov
pop
push
ror
pop
mov
push
jno
push
push
adc
adc
jno
frstor
sbb
sbb
inc
mov
mov
add
loop
por
or
aaa
mov
imul
rcl
mov
icebp
jmp
es
add
movs
call
jne
xor
pusha
push
mov
pop
ds
xor
fist
test
pop
pop
dec
cmp
push
loope
cmps
pusha
rcl
jnp
cmp
adc
loope
jp
or
and
test
shl
aaa
sbb
sbb
loopne
pop
aaa
inc
loope
xor
mov
sub
adc
jno
mov
sub
sub
retf
or
inc
ror
cmp
add
imul
pop
mov
fsubr
push
push
(bad)
icebp
push
data16
adc
or
loope
jbe
push
xor
inc
jb
in
in
call
loop
ret
mov
cmovl
inc
and
fstp
adc
mov
push
xor
rcr
rcl
xchg
in
or
xor
mov
xchg
sbb
shl
imul
pop
mov
mov
dec
xor
ret
cmp
push
mov
je
test
jl
es
stos
addr16
sub
jbe
push
lds
stos
sbb
dec
jg
enter
je
nop
mov
(bad)
(bad)
xchg
add
jne
loopne
jl
adc
mov
int
adc
or
test
aaa
bnd
mov
hlt
jmp
mov
or
dec
mov
das
test
addr16
enter
xor
sbb
imul
lock
in
out
xor
clc
sub
mov
ins
pop
or
push
cmc
push
push
push
push
or
lock
cld
or
in
jo
jnp
enter
inc
push
aam
pop
sbb
imul
dec
push
fiadd
or
mov
aam
add
mul
or
inc
jmp
js
add
mov
xchg
or
data16
int
enter
ins
xor
pop
mov
add
iret
mov
inc
sbb
dec
jae
inc
frstor
xor
test
sbb
scas
jnp
addr16
inc
mov
push
inc
pop
jmp
(bad)
test
inc
xor
xchg
mov
arpl
add
ja
add
hlt
iret
push
sbb
mov
fmul
in
fstp
cs
add
mov
xor
inc
ret
inc
popf
cmc
outs
fadd
cmc
adc
aas
jg
lock
push
xor
sub
mov
pop
push
mov
or
add
jge
push
jne
or
imul
and
mov
lahf
movs
inc
les
idiv
mov
adc
pop
and
pushf
xor
push
es
(bad)
dec
sbb
and
pop
pushf
cmp
sub
hlt
loope
sbb
pop
pop
je
cwde
cmps
or
adc
shl
hlt
call
lahf
test
loop
sahf
or
outs
hlt
retf
call
invd
pushf
xor
push
enter
scas
or
call
pop
inc
div
(bad)
js
mov
mov
sub
fsubr
or
inc
pusha
outs
cmp
pushf
stos
shr
sbb
addr16
ins
sbb
sbb
sbb
mov
add
fs
(bad)
loop
(bad)
mov
or
movs
add
mov
push
and
jmp
mov
stc
dec
mov
arpl
or
jmp
scas
sti
jmp
mov
sbb
je
cwde
lods
add
call
je
sbb
lock
out
neg
pop
in
idiv
mov
pop
ja
sub
ss
iret
sub
mov
das
(bad)
cs
cmp
imul
adc
adc
or
sar
cmp
pop
pop
or
or
cmp
sahf
pusha
lahf
jl
mov
jmp
xor
jmp
addr16
(bad)
in
outs
jne
or
dec
fcom
in
mov
out
jge
adc
clc
mov
les
xchg
adc
mov
and
test
dec
test
sub
push
push
sub
or
mov
ins
lds
(bad)
xlat
sbb
mov
jl
in
ret
lock
sub
jo
adc
inc
add
scas
cmp
dec
push
add
ja
mov
pusha
cmps
lock
dec
cmp
ja
jb
jb
repz
xor
daa
outs
cmp
push
(bad)
push
or
inc
mov
push
jmp
or
or
loop
or
pop
inc
hlt
jecxz
cmp
adc
push
add
(bad)
enter
push
or
ret
cmp
mov
pusha
jne
(bad)
cmp
js
push
inc
jg
add
mov
cmp
cmp
mov
cmp
jge
clc
test
shr
push
mov
or
push
adc
push
loopne
fadd
jmp
sub
or
adc
icebp
rol
cmp
(bad)
fdiv
imul
inc
mov
pop
movs
int
xor
sbb
jns
call
adc
xchg
test
je
mov
das
push
pop
clc
xor
sub
jg
mov
push
sbb
sbb
ror
adc
daa
or
xchg
push
mov
enter
fimul
push
out
or
xchg
cmp
xchg
sahf
push
mov
or
jae
out
pop
or
sub
add
mov
adc
sbb
outs
xchg
add
add
or
(bad)
cmp
setge
jmp
in
dec
and
in
mov
jmp
aas
lock
(bad)
mov
retf
pop
lds
outs
add
pop
lods
push
and
les
(bad)
jb
cmp
pop
inc
test
push
clc
(bad)
call
pop
sub
xchg
test
les
mov
adc
(bad)
fadd
nop
mov
cmp
pop
pop
call
lock
add
add
sub
retf
sub
sbb
cmp
jne
adc
add
rol
pop
mov
inc
dec
mov
shr
das
push
inc
in
outs
and
test
add
inc
cld
jmp
mov
jp
push
adc
shl
gs
fistp
(bad)
pop
imul
std
add
sar
je
xor
jmp
inc
sbb
and
push
aad
shr
setns
fs
pop
jl
cmp
mov
imul
or
add
or
smsw
mov
mov
cld
add
iret
sbb
ror
and
scas
mov
sub
pop
cmps
jne
or
popa
ret
sbb
pop
cmp
adc
(bad)
cld
mov
dec
xor
pop
cmp
dec
cmp
jl
mov
shl
fistp
shl
cmp
jne
push
push
inc
ss
push
rcr
jo
jo
mov
xchg
xchg
jp
mov
pop
inc
mov
ss
mov
test
(bad)
sti
jns
pop
into
or
xor
dec
mov
ret
sbb
dec
or
sbb
adc
faddp
add
cmp
adc
sbb
hlt
jge
(bad)
and
repnz
dec
(bad)
outs
push
cmp
or
lea
sub
lods
sar
les
mov
outs
cmp
xor
popf
test
push
jno
loop
or
(bad)
jp
lods
test
adc
add
add
or
ret
repnz
dec
mov
adc
pushf
mov
add
into
and
shr
jns
in
lods
jnp
aas
add
js
ror
(bad)
in
sub
leave
ins
clc
cmps
lods
jecxz
in
(bad)
stos
cld
add
push
sbb
or
das
aad
pop
lods
sbb
pop
or
fmul
inc
dec
pop
jg
aam
dec
xor
jecxz
push
imul
push
ret
loope
and
mov
jmp
add
push
call
aaa
pushf
je
loopne
sub
stc
test
inc
test
or
push
fcomp
loopne
aaa
enter
push
push
cmp
into
push
mov
push
enter
cmp
jne
(bad)
jp
fwait
dec
pop
outs
cmp
push
pop
push
imul
push
fnstcw
mov
test
arpl
aaa
xchg
xor
rcr
lock
das
stos
sub
repz
das
loopne
mov
pop
(bad)
sub
mov
pop
mov
inc
shl
stc
push
lods
jl
mov
push
push
pop
jne
daa
in
and
je
push
jnp
jmp
and
in
mov
cmp
(bad)
xchg
lods
add
push
jl
and
pop
icebp
rcr
adc
cwde
or
enter
mov
adc
data16
mov
inc
jl
ret
outs
add
pop
addr16
daa
rol
cdq
mov
pusha
fnstcw
sub
pop
mov
inc
sbb
test
jbe
pop
mov
(bad)
iret
(bad)
mov
adc
sub
push
out
cwde
inc
sub
imul
je
sbb
and
imul
dec
pop
mov
mov
shr
out
call
sbb
xchg
or
popa
sbb
lea
out
mov
jmp
ja
inc
sti
add
and
je
retf
inc
pop
dec
mov
dec
dec
mov
fcmove
pop
jle
pop
adc
fisttp
adc
idiv
inc
(bad)
adc
pop
es
add
shl
daa
mov
or
scas
sub
add
ins
pusha
ins
xor
pop
fadd
movs
shr
popa
jae
pop
cwde
mov
inc
xchg
ret
sub
aas
pop
push
push
add
rcl
test
push
and
adc
xlat
mov
arpl
adc
mov
and
ja
cld
adc
iret
je
sti
clc
dec
test
jl
inc
xchg
adc
add
adc
or
dec
jne
add
mov
jmp
test
add
std
pop
inc
mov
sbb
jmp
mov
adc
pop
push
or
sbb
sbb
inc
jg
sbb
pop
fidiv
add
xchg
jbe
xor
loope
js
shr
add
push
aam
jo
push
and
movs
add
cmp
lds
cmp
add
ror
mov
sbb
jmp
sbb
or
(bad)
ins
pusha
rcl
lods
test
sub
xchg
pop
and
push
sahf
mov
and
add
push
add
idiv
cwde
fnstcw
sub
test
pushf
fist
push
repz
mov
outs
xchg
mov
test
push
or
jno
and
fadd
sbb
inc
and
pavgb
adc
or
cmp
daa
aad
pusha
loopne
arpl
cwde
xchg
ss
and
cmp
pop
jbe
es
dec
lock
fwait
pop
add
mov
outs
fdiv
(bad)
lods
mov
or
ja
jo
mov
test
ret
iret
mov
add
xor
add
inc
xchg
stos
mov
test
jle
lods
jge
and
xchg
jmp
adc
retf
fidivr
pop
and
mov
je
add
mov
ficom
sbb
ret
push
sbb
xlat
call
arpl
lods
daa
jo
inc
pusha
xchg
add
push
inc
leave
adc
adc
add
inc
loop
mov
jb
(bad)
add
cmp
loopne
or
mov
fcom
jp
mov
mov
dec
dec
mov
aam
lods
test
xor
add
ret
sahf
pop
mov
lea
push
push
mov
push
ret
aad
mov
jo
loopne
sub
sti
repnz
pop
push
mov
inc
jge
outs
mov
inc
js
adc
mov
push
or
add
inc
mov
push
inc
xor
sbb
sahf
pusha
rol
add
sub
in
or
lock
fbld
test
and
mov
clc
push
int3
mov
clc
add
xor
inc
lea
jae
or
or
ds
das
cs
jne
clc
in
and
cmp
add
jnp
xchg
pop
adc
shl
inc
push
(bad)
or
dec
fadd
xchg
dec
add
pop
and
test
add
jae
jmp
or
or
jg
xor
sub
inc
sbb
xor
fsub
inc
sub
enter
push
loopne
adc
add
inc
icebp
ud2
sub
sub
cmp
les
ret
jge
xchg
repnz
xchg
xor
xor
pop
inc
clc
cmps
cmp
test
adc
add
inc
pop
add
es
xchg
pop
bsf
add
jmp
fadd
or
or
adc
ficom
sti
xor
and
test
pop
imul
jbe
or
adc
adc
iret
iret
out
mov
mov
cmp
and
out
iret
ins
dec
arpl
(bad)
fwait
dec
and
mov
add
pop
xchg
fdiv
ret
not
mov
sub
mov
add
mov
xor
pop
(bad)
sub
das
(bad)
and
adc
jmp
lock
ja
scas
outs
push
rol
push
enter
lods
xor
xor
xchg
cmp
pusha
sub
and
sub
or
test
or
sbb
(bad)
and
mov
loope
sub
out
xor
or
enter
xchg
adc
push
sbb
movs
push
add
dec
dec
and
jmp
or
xchg
dec
add
adc
cwde
sbb
ins
mov
or
into
jo
and
loop
mul
push
cmps
jne
add
mov
popa
mov
mov
dec
jnp
mov
sub
sahf
sbb
or
or
add
jbe
dec
push
jp
pop
lea
test
jge
adc
mov
das
loop
cdq
or
movs
pop
add
cs
xor
jns
inc
push
or
sub
inc
imul
ins
pop
daa
enter
mov
and
repz
jbe
add
scas
test
jmp
push
cld
sbb
xor
bound
(bad)
ins
jno
ins
mov
shl
add
jae
jb
outs
sub
push
push
jp
add
(bad)
push
adc
inc
rol
stos
dec
retf
add
mov
add
and
push
mov
mov
jne
or
add
add
jb
xchg
jnp
inc
test
or
aam
sbb
and
cdq
pop
daa
sub
add
xor
or
fdivr
popa
mov
sub
pop
pop
dec
imul
stos
aad
test
pop
push
ficomp
sbb
inc
in
xchg
rcr
push
popa
mov
or
and
inc
or
dec
loope
adc
jmp
adc
fcom
rcr
(bad)
jp
dec
mov
mov
inc
lahf
lock
loop
and
jne
sbb
das
jp
sub
add
or
movs
mov
mov
lock
daa
shl
test
push
adc
es
xchg
adc
call
or
cmp
js
push
je
xor
cli
xor
or
cmp
jne
and
inc
adc
inc
inc
ret
add
dec
sub
push
xchg
cmp
xchg
mov
nop
jo
repz
sbb
jbe
pop
add
pop
sbb
adc
mov
mov
adc
mov
mov
pop
sub
aam
and
xchg
xor
je
out
mov
call
push
rcl
mov
enter
inc
jle
push
fisttp
outs
sub
pop
test
(bad)
xchg
ret
adc
pextrw
pop
jne
nop
sub
aaa
fwait
ja
sbb
sub
sbb
int
inc
fs
pop
pop
pcmpgtd
lods
and
inc
or
dec
inc
cmp
mov
cmp
add
pop
test
jo
adc
sahf
sub
push
sti
mov
add
sub
das
dec
js
movs
xor
sbb
mov
inc
imul
in
dec
or
cmp
pop
out
add
loop
and
pop
add
xchg
mov
inc
jmp
jmp
mov
mov
xchg
xor
test
pop
in
(bad)
outs
add
adc
jae
pop
xchg
sbb
scas
sbb
sub
cmps
dec
test
repnz
cmp
(bad)
dec
mov
push
mov
lods
stc
adc
cwde
inc
cdq
dec
jo
jmp
pop
pop
icebp
dec
retf
dec
inc
fisttp
mov
mov
jl
mov
adc
add
mov
nop
adc
(bad)
push
cmps
xor
and
nop
push
sbb
add
movs
jne
pop
daa
cwde
lods
sbb
push
call
and
and
mov
and
add
xchg
dec
or
sbb
aad
and
mov
push
adc
sbb
loopne
movs
mov
pop
add
push
pop
add
lods
mov
push
push
mov
xchg
fwait
call
sbb
test
ss
inc
sub
daa
dec
mov
and
icebp
inc
hlt
shl
or
push
sbb
and
and
mov
inc
or
test
test
push
mov
mov
dec
div
fsub
cmp
sub
mov
js
dec
adc
dec
sahf
jb
inc
push
mov
rcl
xor
dec
call
arpl
jne
push
inc
xor
mov
jne
mov
and
mov
rcr
in
push
inc
add
adc
loope
daa
in
add
lock
pop
and
loope
or
pop
daa
out
popa
or
sbb
sbb
xchg
outs
dec
mov
adc
rcr
push
and
js
add
or
rcr
outs
ret
and
adc
add
ins
(bad)
sbb
sub
sub
adc
dec
dec
push
daa
mov
loopne
aam
or
add
dec
lds
shl
adc
pop
adc
mov
and
jo
push
or
or
cmp
add
xor
popa
test
jne
rol
sbb
sbb
adc
xor
jl
adc
sub
and
add
cmc
or
add
ja
mov
dec
or
jmp
add
cmp
push
and
or
push
mov
mov
jmp
aam
shl
cmp
sub
adc
stos
mov
sbb
in
aaa
mov
ror
dec
movs
(bad)
jg
pop
xor
fistp
xor
sub
pop
add
and
mov
stos
cmp
jbe
iret
sub
inc
add
stc
jge
cmp
jg
adc
pop
or
clc
dec
or
test
dec
add
pop
adc
dec
mov
sub
or
push
mov
and
cmp
mov
test
cmp
ds
fstp
mov
mov
jo
arpl
ins
add
ret
xor
add
mov
movs
push
test
add
and
movaps
adc
or
push
dec
push
or
les
push
push
and
mov
pop
add
ins
ret
dec
add
add
aas
dec
movs
loop
dec
mov
inc
cmp
add
xor
repz
mov
std
add
loopne
shl
pusha
icebp
pop
or
pop
and
sbb
sub
cmp
fiadd
ret
add
cli
or
in
out
cmp
inc
xchg
in
imul
(bad)
mov
fcomp
popf
xchg
leave
xchg
sbb
lods
lea
push
adc
dec
daa
jecxz
jmp
pop
add
mov
jge
hlt
sub
jae
jge
cmp
xchg
or
dec
aam
sub
mov
jne
cmp
test
js
and
add
lock
or
sbb
jb
push
rcr
retf
mov
lock
adc
inc
add
mov
adc
and
out
adc
cmp
jge
xor
mov
and
sbb
jno
push
or
and
pop
mov
mov
movs
or
adc
sbb
dec
xchg
push
mov
inc
icebp
jne
imul
in
movs
(bad)
jo
test
and
push
or
cmp
xor
pop
sub
js
call
jno
test
and
mov
add
or
mov
mov
lds
pop
enter
fcomi
test
inc
stos
add
xor
test
cld
add
pushf
jbe
ss
push
outs
cmp
pop
pop
xor
push
loop
and
adc
adc
jns
cdq
mov
inc
and
inc
in
pop
js
(bad)
jb
mov
or
add
pop
jnp
and
arpl
adc
lods
or
jecxz
add
mov
jne
les
add
add
xlat
mov
es
ret
mov
or
pop
inc
adc
pop
pop
aaa
retf
adc
mov
add
cwde
push
mov
daa
add
inc
fsubr
sub
ret
retf
shl
mov
cmp
int
pop
pop
xchg
mov
inc
fdivr
cmp
jae
pop
into
xor
push
cmp
loopne
push
pop
clc
les
hlt
add
or
das
or
lock
inc
fisttp
ret
xor
sbb
and
ret
sar
fdiv
enter
push
mov
sub
outs
jne
and
xchg
push
lock
push
jecxz
sbb
pushf
imul
loop
mov
mov
xchg
add
ss
cmp
loope
sbb
or
sbb
scas
xchg
sti
adc
aaa
out
xor
movs
inc
jmp
or
shr
clc
sub
pop
cmp
dec
push
push
push
push
sbb
mov
add
jo
shl
add
mov
rcr
aam
mov
stos
(bad)
jnp
arpl
aad
cwde
add
pop
sbb
pop
aad
ror
mov
sbb
ss
inc
pop
pop
aad
add
push
mov
ror
push
push
or
lods
push
cmp
mov
loop
dec
enter
mov
or
(bad)
xchg
and
shl
hlt
sub
stos
sbb
or
hlt
add
hlt
adc
rcr
sbb
popa
mov
add
aam
test
and
cs
call
daa
and
pop
ins
call
out
pushf
cmp
sbb
or
rol
inc
push
pop
pop
inc
mov
fcom
pop
sahf
retf
push
movs
js
jmp
sbb
push
or
ror
sub
and
scas
and
and
(bad)
into
sahf
mov
add
xchg
or
cld
sbb
or
fdivr
adc
clc
mov
les
or
addr16
jo
push
les
(bad)
test
mov
xor
inc
dec
dec
into
pusha
cmp
xor
push
add
call
pop
ins
icebp
mov
mov
and
adc
daa
push
gs
jne
pop
dec
mov
xchg
dec
sbb
loope
fisttp
mov
adc
xor
or
(bad)
xchg
dec
dec
prefetchw
fcom
mov
mov
inc
mov
xchg
dec
and
nop
cmps
call
and
outs
imul
dec
ds
mov
(bad)
jge
or
add
rol
dec
sbb
and
fdiv
add
or
sub
pop
or
or
mov
cld
xchg
clc
mov
ins
(bad)
mov
lahf
stos
sbb
push
outs
(bad)
sub
repz
sbb
xor
in
inc
xor
cld
cld
xor
sbb
mov
add
test
je
mov
xor
mov
xor
add
jecxz
lods
je
sti
or
std
fwait
pop
cmps
ror
sbb
push
hlt
lods
sti
or
push
or
or
and
mov
pop
and
fwait
stos
(bad)
cld
jmp
dec
or
add
ja
pop
pop
cmp
shl
pop
cwde
push
inc
enter
in
adc
sub
adc
push
xchg
shr
and
adc
or
adc
jmp
xchg
dec
xor
sbb
sbb
sbb
cld
sub
mov
mov
(bad)
mov
cmp
arpl
pop
add
sbb
ret
mov
push
cmp
mov
xor
pop
add
call
push
push
rol
sbb
xchg
mov
mov
lds
sub
ror
add
mov
xlat
dec
movs
jno
inc
add
aas
jl
xchg
xchg
mov
mov
sub
xchg
add
add
popa
enter
inc
mov
sbb
mov
jns
and
clc
add
push
mov
popa
ret
movs
nop
loopne
push
sub
sub
test
sub
mov
inc
cwde
popf
(bad)
fadd
mov
add
popa
inc
aam
cmc
es
and
inc
loopne
and
adc
fwait
jmp
daa
push
mov
xor
push
dec
push
idiv
bound
push
pusha
retf
mov
sbb
rol
call
or
and
inc
pop
inc
pop
loopne
xchg
pop
rol
and
jno
pop
(bad)
shr
js
inc
pop
inc
in
in
test
pop
aas
mov
ficom
inc
inc
xchg
push
outs
in
or
and
sbb
add
dec
mov
add
mov
mov
and
ja
and
mov
daa
aas
jb
stos
sbb
inc
nop
inc
or
inc
leave
push
adc
pop
cmp
retf
sub
or
into
dec
adc
movs
xor
adc
adc
mov
dec
popa
cmps
std
adc
test
sbb
or
cmp
mov
cwde
push
fistp
repz
jmp
test
or
dec
add
and
fisubr
mov
jne
mov
jg
daa
fcom
inc
add
jle
ror
inc
call
pop
hlt
or
pop
adc
adc
push
outs
xchg
or
add
xchg
mov
xchg
cmp
or
or
data16
sub
jns
mov
(bad)
jge
jmp
cmp
adc
xor
jne
shl
inc
inc
aaa
cli
xchg
mov
fsubr
jg
xchg
sbb
sbb
ret
push
adc
mov
or
fadd
cmp
or
add
les
fsub
or
cmp
int3
inc
mov
(bad)
sbb
ret
jne
sahf
stos
bound
sbb
dec
sub
scas
xchg
data16
sbb
jg
pop
loop
pop
sub
ret
jne
cmp
shr
dec
test
mov
adc
cs
sub
dec
data16
fwait
ret
int
xchg
ret
movs
jnp
not
inc
cwde
adc
adc
and
fbstp
push
pop
stos
jae
xchg
adc
add
dec
mov
mov
aaa
push
add
dec
cmp
cwde
adc
jae
add
sub
pop
addr16
adc
(bad)
push
cmp
je
add
popa
or
(bad)
mov
or
stos
(bad)
(bad)
mov
ror
aaa
(bad)
test
imul
and
cmp
inc
add
dec
test
inc
push
push
mov
cmp
mov
ret
mov
or
mov
fadd
(bad)
repz
test
xlat
add
clc
mov
mov
fcom
dec
cmp
call
sbb
mov
out
cwde
add
adc
fnstsw
inc
and
dec
adc
ja
fnstcw
movs
lods
push
dec
pusha
and
mov
cmp
call
adc
mov
retf
add
inc
jb
cmp
xor
in
sub
or
outs
cdq
jo
push
aam
xor
xchg
test
sti
push
jl
cmp
xor
mov
mov
aam
pop
and
aam
js
jg
or
mov
stos
lods
daa
sbb
add
fstp
lods
add
push
shl
js
add
adc
movs
inc
inc
push
add
push
cmp
mov
mov
inc
lods
jae
das
dec
das
xchg
mov
ret
xchg
inc
cs
jae
mov
mov
and
sbb
push
dec
sbb
nop
retf
adc
ja
xchg
pop
test
mov
jp
inc
aaa
cmp
mov
adc
mov
and
aam
pop
cmps
mov
jl
push
in
and
adc
ja
test
sub
adc
mov
inc
and
xchg
pop
push
imul
inc
xlat
push
mov
sti
pop
inc
pop
mov
jmp
push
(bad)
mov
push
cmp
cmp
push
in
daa
out
adc
cmp
sbb
daa
inc
xchg
adc
add
or
sbb
pop
arpl
pop
push
add
iret
adc
ret
(bad)
das
add
stos
test
push
mov
jge
test
addr16
jns
loopne
xor
(bad)
mov
or
and
pusha
pusha
loope
push
aaa
xor
sbb
add
and
loopne
or
in
sbb
dec
lods
jne
dec
xor
jne
inc
dec
loope
shl
clc
in
jne
jp
pop
fisub
daa
adc
push
pop
vpminsw
pop
aam
push
inc
mov
hlt
add
add
mov
add
and
pop
stc
jne
cmp
shl
dec
add
lods
mov
jbe
addr16
outs
and
jge
es
pop
iret
xchg
test
dec
or
je
mov
mov
mul
xchg
loopne
(bad)
mov
lea
mov
int3
jmp
cmps
inc
dec
push
adc
ret
cmp
cmpxchg
call
mov
push
shufps
call
sbb
mov
cmp
pop
mov
pop
lds
or
sub
or
sub
cmp
or
cmp
jno
mov
sub
xor
push
pusha
push
ss
sub
shl
mov
push
shl
dec
test
clc
or
mov
popa
inc
and
sbb
enter
pop
icebp
push
push
iret
push
push
addr16
(bad)
xlat
xor
sub
fmul
and
inc
fadd
inc
sbb
add
inc
or
js
mov
imul
or
sbb
pop
add
add
sub
xor
mov
jecxz
sbb
jno
add
or
pop
add
dec
repz
push
and
sub
jle
jl
push
cmp
je
cmp
mov
daa
(bad)
je
jge
xor
rcl
ret
aaa
sub
pop
cmp
pushf
push
mov
loope
sbb
jb
add
add
icebp
add
js
push
(bad)
int3
aam
scas
stos
int
mov
shl
adc
je
fld
push
loope
xchg
pop
jo
or
sbb
mov
adc
sbb
xor
or
xor
sbb
mov
mov
rol
dec
(bad)
aas
lods
pop
xchg
daa
sub
sub
push
sub
mov
push
push
and
xchg
stc
adc
sbb
movs
inc
fmul
mov
mov
and
jg
inc
dec
and
rcr
adc
mov
add
retf
or
daa
push
sbb
pop
(bad)
test
dec
jo
push
vandnpd
and
adc
cmp
mov
jecxz
jp
out
dec
int3
add
adc
and
fsubr
add
(bad)
movs
xor
pop
mov
cmp
mov
icebp
mov
sbb
and
sub
push
arpl
fdiv
cmp
aad
xor
clc
test
je
lods
loopne
or
shr
jb
sahf
(bad)
sub
shl
or
fcom
outs
or
adc
int
jae
jno
pop
outs
(bad)
outs
push
or
inc
or
xor
lds
loope
outs
cmps
pop
sbb
add
das
nop
mov
aad
test
mov
rol
mov
pop
xor
(bad)
or
xchg
sbb
nop
dec
mov
dec
add
dec
pop
cld
hlt
movs
sbb
call
call
fdiv
sbb
std
fisub
test
xchg
adc
sub
cmps
push
les
or
jmp
add
xor
stos
add
push
mov
js
inc
pop
or
lods
pop
sti
sar
mov
inc
sub
out
sbb
xor
pop
pop
pop
dec
dec
mov
push
test
pop
das
xchg
adc
push
push
xor
push
mov
and
inc
popa
jns
adc
xor
retf
mov
mov
pop
inc
ins
cmp
push
cmp
and
mov
sub
in
sub
xor
inc
sbb
sub
nop
imul
cmp
stc
cmp
sub
mov
xchg
call
cs
sbb
pop
lahf
inc
xlat
xchg
rol
in
adc
dec
sub
add
xor
and
or
xchg
in
add
jno
xchg
sbb
je
imul
mov
(bad)
xor
push
sub
fcmovnbe
add
sbb
push
add
sbb
cmp
hlt
(bad)
push
dec
gs
jno
adc
or
dec
addr16
sbb
mov
mov
shl
mov
(bad)
and
jnp
icebp
cmps
xchg
sub
mov
xlat
push
or
jg
fdiv
adc
adc
cs
mov
aas
daa
pop
icebp
sbb
imul
push
xor
adc
sbb
jge
pop
adc
and
xor
jle
xor
adc
hlt
jns
xchg
adc
or
test
mov
pop
mov
sbb
add
(bad)
adc
cmc
mov
push
aad
push
mov
mov
add
xlat
sbb
bound
inc
mov
push
dec
je
jmp
loopne
loopne
adc
ror
and
xor
sub
test
ret
jmp
xchg
les
pop
fild
paddq
lock
add
inc
and
mov
or
fdiv
sbb
or
push
outs
enter
add
ret
jb
push
mov
in
sti
mov
inc
icebp
shl
pop
aaa
dec
and
cs
or
push
add
or
js
(bad)
repnz
das
push
sar
test
les
or
push
dec
dec
add
cs
add
dec
or
or
sbb
jle
adc
push
je
ficomp
jmp
add
adc
add
adc
add
out
mov
jmp
mov
add
in
dec
push
mov
add
mov
xchg
mov
xor
daa
dec
jo
cli
ret
imul
or
inc
test
push
jle
inc
jb
push
cdq
dec
push
sbb
jmp
mov
dec
push
iret
pop
sub
adc
mov
inc
test
push
arpl
push
push
fstp
mov
idiv
(bad)
aad
pushf
add
das
les
(bad)
and
push
and
das
push
push
xchg
packsswb
mov
add
jae
jne
cmp
bnd
sub
or
push
je
inc
loope
sub
adc
push
adc
xor
adc
xchg
jmp
ins
rcr
mov
jg
or
cmp
inc
sar
imul
in
cmp
inc
dec
add
jo
test
mov
imul
pusha
adc
and
lods
cmp
retf
adc
imul
scas
add
mov
inc
daa
and
or
xor
inc
push
rol
into
jno
(bad)
sbb
inc
mov
out
mov
je
adc
and
push
outs
ins
lea
mov
sbb
xor
dec
push
xor
dec
mov
mov
stos
pop
push
hlt
add
mov
jae
add
pop
and
out
(bad)
add
xchg
or
push
ins
inc
xor
and
inc
mov
es
mov
add
adc
std
jle
inc
dec
jmp
retf
jne
fs
ret
or
xchg
dec
add
(bad)
fild
push
dec
nop
push
pop
cld
inc
dec
jne
retf
or
add
pop
push
adc
cwde
and
adc
and
jp
popf
nop
(bad)
sub
inc
fstp
sub
xor
push
inc
pusha
mov
(bad)
imul
pop
inc
popa
retf
jo
mov
shr
pop
pop
ins
push
push
pop
mov
add
pusha
sub
dec
fistp
mov
lea
dec
fisttp
push
xlat
cwde
mov
jmp
sub
mov
cmps
jne
(bad)
daa
push
out
push
xchg
add
mov
sub
or
inc
jle
push
or
(bad)
test
mov
push
mov
adc
mov
in
mov
push
ret
out
ret
jnp
push
sub
inc
and
bound
(bad)
imul
enter
movs
mov
daa
push
dec
popa
xor
inc
rcr
cmp
add
fisttp
and
jmp
jo
add
and
xor
dec
cmp
mov
xor
retf
add
mov
sbb
add
arpl
inc
and
xlat
test
xor
mov
popf
ret
and
outs
inc
cwde
and
fdiv
adc
ret
fidivr
mov
mov
mov
(bad)
clc
jae
mov
mov
or
mov
shr
dec
adc
add
into
push
aad
push
rol
mov
xchg
sbb
xchg
push
mov
pusha
call
add
das
jle
mov
adc
fdivr
pop
ret
push
adc
pop
jmp
pop
jp
shl
dec
push
mov
xor
xlat
xor
mov
add
repnz
mov
sub
mov
mov
(bad)
dec
ret
and
mov
repz
mov
push
dec
jl
or
or
pop
adc
pop
adc
enter
pop
adc
push
jge
shr
push
xchg
cmp
inc
add
adc
inc
add
cli
shr
mov
pop
call
push
aas
mov
int3
mov
mov
pusha
or
xchg
lock
fimul
ret
das
dec
mov
pushf
add
aam
pop
and
(bad)
or
inc
pop
test
jg
jne
sbb
out
lahf
ret
and
bound
aad
loopne
nop
rcl
mov
repz
push
mov
ss
mov
xor
adc
cmp
jns
cmp
pop
jbe
cmp
sub
bswap
movs
xchg
add
adc
nop
ret
mov
pop
xlat
pop
dec
add
ret
adc
aam
sar
ror
arpl
outs
pop
clc
push
or
xor
cmp
loopne
outs
push
in
(bad)
cmp
and
xchg
push
clc
scas
jle
xlat
or
sbb
xor
adc
in
cmp
in
sbb
push
(bad)
lock
push
mov
int
mov
arpl
jmp
in
and
add
jp
xchg
aas
mov
mov
lea
mov
retf
mov
xchg
repz
das
mov
mov
test
and
daa
repnz
xchg
inc
xor
ins
nop
mov
movs
lock
mov
jmp
sbb
lods
and
xlat
mov
pop
mov
or
mov
cmp
jae
or
cmp
inc
add
dec
loope
adc
adc
js
mov
lods
and
pop
les
jno
dec
fwait
and
test
push
adc
adc
loop
adc
int
or
sub
push
ins
sub
sub
push
jg
inc
mov
loope
mov
mov
and
xchg
sbb
ret
shl
ins
cmp
sub
out
mov
mov
jg
jge
cmp
or
or
jae
sbb
out
out
test
jne
mov
sti
or
cmp
inc
imul
mov
mov
(bad)
mov
ret
sbb
loope
sbb
scas
sub
pop
add
les
xchg
add
(bad)
xor
xchg
or
stos
mov
jmp
push
push
ds
xchg
dec
mov
mov
outs
push
or
and
cmp
mov
fdivr
push
add
stos
add
sbb
and
lahf
push
sub
add
and
adc
inc
jb
in
mov
lock
hlt
loop
sbb
mov
lahf
aam
stos
lods
clc
jge
sar
add
dec
jne
mov
or
out
pop
xchg
push
xor
pop
mov
sub
icebp
adc
out
(bad)
loopne
shr
push
loopne
and
cmp
xchg
lods
inc
js
pop
lock
js
pop
call
out
adc
mov
sbb
mov
jo
or
pop
cmp
inc
mov
mov
cmps
xor
test
enter
cmp
lock
inc
or
div
jmp
jl
inc
adc
add
mov
idiv
jb
add
or
add
jmp
test
loope
xchg
mov
in
pop
mov
shl
pop
pop
adc
add
add
inc
sub
sbb
fisttp
jnp
mov
inc
adc
cmp
movs
sbb
fisub
imul
and
push
jle
sub
inc
shl
movs
enter
dec
pop
in
push
mov
push
push
je
or
hlt
sub
mov
xchg
pop
push
dec
ja
jmp
pop
or
leave
or
or
dec
movs
shl
aas
loopne
rcr
push
sub
aam
arpl
and
pop
sbb
scas
dec
xchg
in
inc
mov
das
add
ins
dec
mov
mov
adc
mov
or
push
and
push
dec
inc
inc
xor
jmp
or
out
or
jmp
cmp
aam
and
sub
mov
sbb
es
outs
ror
pop
add
mov
daa
add
inc
inc
mov
and
add
add
add
in
ror
mov
jns
sbb
and
mov
mov
push
xor
mov
mov
inc
mov
inc
or
mov
adc
mov
jg
pop
jmp
mov
loop
jo
sar
scas
adc
loopne
js
cwde
test
fistp
cmp
mov
sub
mov
and
dec
push
cs
add
mov
je
mov
and
push
pop
mov
fnsave
js
dec
cs
int3
mov
cmp
adc
ss
enter
mov
loop
mov
loopne
xchg
sbb
loopne
push
jbe
shr
mov
cmp
mov
xor
int3
out
dec
fild
xchg
add
push
clc
cmp
mov
cmp
xchg
aam
adc
sub
dec
sbb
xor
add
adc
sti
repz
add
add
int3
add
adc
dec
sbb
pop
add
push
imul
repz
pop
push
sbb
mov
pop
scas
mov
jo
out
push
jl
and
or
mov
in
xor
andps
test
dec
ins
dec
xchg
jo
pop
pop
sbb
add
xlat
int3
jg
das
enter
test
js
mov
shl
push
jae
add
and
iret
pop
nop
mov
lods
add
cmps
add
xor
add
(bad)
adc
or
sub
jecxz
call
in
sub
sub
or
dec
scas
test
xchg
push
or
aam
mov
jge
cld
retf
pop
inc
cwde
outs
loopne
rcr
mov
adc
or
push
out
sub
in
add
lods
sub
dec
call
dec
test
push
(bad)
jne
push
or
dec
dec
add
loop
cmp
pop
or
ret
ins
mov
sub
jg
and
dec
cld
add
or
sub
sub
mov
add
xor
sbb
jge
adc
lods
sbb
or
jle
hlt
or
test
add
cs
out
loopne
loopne
retf
mov
call
mov
sar
popa
mov
mov
je
mov
cmp
lock
push
cmp
arpl
cmp
inc
add
cmp
inc
das
(bad)
cmp
test
aaa
in
add
or
inc
imul
enter
sub
aad
pop
pop
call
stos
add
test
mul
je
add
adc
pop
ror
call
pop
xchg
bound
fbstp
sbb
lds
cmp
lea
mov
cmps
dec
jnp
shr
in
inc
rcr
and
inc
les
daa
mov
sub
out
(bad)
push
aam
fisubr
jl
jmp
cmp
scas
adc
lea
cmp
pop
jmp
jge
push
xor
mov
outs
pop
cmp
aam
xor
call
mov
and
out
add
cmp
xor
or
add
adc
and
shl
add
mov
movaps
and
sub
or
sbb
add
sbb
mov
dec
cld
sbb
cmps
or
sti
xchg
mov
or
out
cmp
lods
or
pop
or
fcom
mov
test
inc
ja
imul
push
add
sub
mov
fst
adc
adc
sbb
inc
loopne
repz
fdiv
ror
ffree
sahf
ror
movs
xchg
clc
add
in
pushf
sbb
jmp
xchg
(bad)
pop
inc
test
rol
retf
pop
sub
retf
lea
cmps
pop
mov
xchg
dec
enter
test
cmp
adc
call
xor
push
inc
lods
cmp
adc
push
lock
jbe
pop
pop
outs
lods
std
inc
xchg
add
adc
add
add
ja
xchg
push
sub
push
jnp
pop
jmp
test
cmp
test
mov
popa
sbb
cwde
xchg
mov
dec
mov
adc
sub
push
das
adc
sbb
ins
push
and
iret
sbb
push
fs
shl
mov
(bad)
lds
sub
pop
and
(bad)
mov
cmp
jmp
je
or
ret
in
adc
push
dec
sub
push
jns
jmp
add
inc
sub
xor
jmp
sahf
adc
xlat
clc
aaa
fucom
add
xlat
movs
sub
add
test
das
nop
test
fsubr
dec
sub
sub
je
and
fisttp
jmp
mov
jno
scas
jmp
sbb
dec
and
ds
or
bound
adc
les
add
or
sbb
sub
fidivr
and
int3
xor
cmp
int3
(bad)
sbb
sub
aaa
icebp
inc
or
add
add
leave
loopne
push
jl
xchg
enter
inc
nop
add
mov
sbb
cmp
test
add
cmp
jmp
adc
enter
xchg
mov
test
je
mov
scas
push
enter
mov
cli
pop
ja
mov
dec
(bad)
mov
dec
dec
inc
les
or
sbb
add
(bad)
add
add
in
mov
inc
and
hlt
pop
pop
add
push
ins
sub
sti
pop
jo
add
je
jne
je
mov
add
or
mov
and
and
out
loope
push
fdivr
add
mov
add
fs
xchg
xor
fisubr
mov
pop
inc
push
dec
sub
pop
xor
test
lods
mov
aam
adc
mov
adc
rcl
pop
adc
or
fadd
loopne
inc
cmp
cli
or
addr16
add
adc
je
add
inc
or
pop
rol
rcl
dec
in
dec
or
cmp
pop
imul
(bad)
rol
sub
push
into
int3
int3
xchg
push
sub
or
xor
iret
out
fmul
in
leave
push
lock
sbb
push
cmp
mov
add
inc
or
push
mov
mov
rcl
mov
xchg
leave
jmp
push
sub
cmc
cwde
call
loopne
add
lahf
sti
test
cmp
jno
(bad)
inc
ja
and
add
jg
dec
inc
xchg
cmps
inc
sahf
fimul
leave
sub
pop
add
xor
js
loope
xor
les
or
cmp
jg
into
and
pop
add
cmp
std
in
aas
out
imul
cmps
pop
sbb
sub
ret
fwait
pop
fisubr
aad
imul
mov
or
xchg
adc
rcr
loopne
je
sbb
adc
or
jge
push
push
push
pop
or
cmps
fsubr
or
fld
int3
mov
jo
call
test
mov
pusha
in
fsubr
aam
out
mov
ds
ror
and
clc
imul
add
add
pop
and
shl
adc
inc
in
mov
or
xor
push
retf
out
out
out
jge
mov
test
cli
jbe
jne
jb
in
ss
mov
mov
rcl
or
dec
pop
xor
add
bound
mov
sbb
sub
retf
and
in
and
xchg
jp
cld
cmp
rol
inc
mov
daa
lds
retf
lock
mov
daa
ror
add
xchg
les
sub
adc
adc
sbb
add
inc
sbb
jae
in
sub
and
push
or
mov
cmp
inc
sub
repnz
xor
adc
sbb
xor
jae
cmp
xchg
push
xlat
mov
add
ror
mov
imul
push
push
mov
jo
aam
fst
mov
jns
and
lods
mov
mov
adc
pop
or
add
ds
inc
or
sbb
mov
(bad)
(bad)
push
emms
or
mov
mov
not
and
inc
add
or
xor
cmp
jne
stos
mov
retf
push
inc
pop
push
pop
add
sbb
sub
mov
pop
mov
icebp
call
shr
scas
mov
add
add
out
sub
push
test
jne
inc
pop
outs
adc
push
cmp
inc
mov
out
and
fimul
adc
add
ror
dec
adc
idiv
sahf
cwde
xlat
popf
adc
dec
out
lahf
jl
jg
ret
enter
sbb
inc
cmp
icebp
jo
gs
fs
out
and
aas
test
int3
sub
(bad)
fbld
popa
and
lea
test
push
add
jmp
loope
push
push
test
xchg
sub
sub
and
xchg
or
repnz
add
mov
sbb
sti
cmp
or
ins
loopne
jo
outs
sub
shr
or
sbb
movs
fistp
(bad)
loop
rol
and
push
cld
out
rol
pop
call
call
call
aas
and
push
dec
sbb
adc
fs
push
xlat
sbb
push
(bad)
jg
int3
adc
int
mov
push
addr16
xor
lods
es
inc
lds
cli
test
cld
and
pop
pushf
xchg
sbb
daa
add
inc
gs
aaa
pop
mov
loopne
test
js
mov
sbb
cmp
xor
dec
jmp
fdivr
push
scas
lea
xchg
lods
push
xor
addr16
sbb
arpl
push
dec
ret
in
out
hlt
popf
or
push
out
lahf
sub
cmp
ret
mov
std
outs
dec
test
xchg
lahf
in
das
in
nop
adc
ret
mov
pop
enter
cmp
hlt
inc
sbb
or
cs
mov
sub
jno
in
inc
retf
cmp
push
pop
pusha
or
push
sbb
or
cwde
adc
sub
dec
mov
mov
nop
les
sbb
xor
cmp
imul
xchg
js
xchg
jno
mov
push
xchg
les
addr16
bound
sbb
and
adc
movs
movs
push
lea
lea
mov
adc
mov
add
cli
mov
push
jl
push
or
mov
adc
scas
add
dec
mov
jb
adc
in
inc
xchg
add
and
mov
pop
xchg
xchg
fisubr
test
fcmovu
mul
push
inc
nop
push
fild
or
ret
fsubr
scas
test
pop
and
mov
ret
adc
sbb
dec
add
adc
pusha
js
cmp
lods
hlt
push
add
jmp
adc
dec
ret
inc
lock
xlat
mov
enter
(bad)
sub
add
xchg
jo
add
mov
or
clc
out
popa
and
cld
or
cmp
sbb
(bad)
push
add
enter
cdq
daa
lods
jl
mov
inc
add
pop
jbe
fimul
fsubr
repnz
push
add
cmp
sub
add
adc
jb
scas
shl
push
push
or
dec
les
add
test
ins
push
outs
xor
ja
aad
cmp
ins
dec
sti
lock
xchg
(bad)
js
rol
inc
es
movs
cwde
inc
clc
pop
jno
mov
adc
data16
in
(bad)
xor
lahf
push
iret
repnz
in
neg
movs
push
aas
jecxz
and
push
mov
push
cld
push
add
inc
cwde
push
push
dec
mov
adc
mov
adc
scas
fs
(bad)
xor
push
jge
sbb
aaa
adc
pop
fstp
mov
xor
jecxz
push
in
pop
mov
add
cmp
jge
cmp
jge
and
mov
loopne
xor
push
loopne
push
adc
aaa
mov
test
sub
and
and
pop
push
dec
push
jecxz
mov
and
and
fnstcw
sub
and
mov
test
and
and
jns
cmp
pop
adc
push
sbb
stos
sub
clc
cs
sbb
and
popa
adc
mov
mov
retf
jle
movzx
test
xchg
fimul
mov
dec
call
xor
test
sti
out
(bad)
popf
mov
mov
loopne
mov
aas
aaa
test
mov
pop
out
hlt
xor
test
dec
adc
inc
addr16
dec
je
rol
lock
mov
or
cmp
push
(bad)
sbb
and
(bad)
loopne
mov
retf
(bad)
xchg
pop
sbb
jmp
or
inc
or
push
or
(bad)
lock
in
mov
xchg
add
jne
push
sbb
xchg
(bad)
push
lods
lods
cmps
add
pop
push
xor
or
add
or
push
pop
outs
add
add
mov
hlt
dec
rol
jl
jge
add
push
add
dec
jmp
adc
fsubr
adc
push
cld
and
push
aam
movs
inc
and
push
gs
test
add
out
in
daa
adc
daa
xchg
sbb
cld
add
rdpmc
sub
retf
sbb
aam
adc
stc
xlat
inc
call
pop
das
mov
inc
mov
dec
test
xor
xchg
pop
adc
mov
cmp
cmp
inc
ror
mov
cmp
mov
cmps
adc
cmp
(bad)
mov
push
cmp
fs
or
jno
pop
aas
xchg
xchg
mov
jle
adc
xor
movs
cmp
dec
loope
lds
adc
pop
loop
loop
mov
inc
dec
inc
xchg
push
push
js
sbb
or
jecxz
hlt
in
and
add
(bad)
or
pop
cmp
ja
mov
cs
fimul
dec
or
cmp
je
sub
popa
movs
push
mov
inc
lds
lea
xchg
mov
test
mov
inc
popa
leave
jl
sub
(bad)
dec
and
aaa
xchg
loopne
mov
and
jae
adc
nop
pop
daa
rol
pop
call
cdq
add
xor
adc
in
(bad)
mov
je
pushf
cdq
mov
(bad)
femms
(bad)
mov
xchg
mov
fs
add
mov
pop
enter
pop
ins
xor
outs
inc
pop
aaa
ret
pop
sbb
add
movhps
aam
ret
xchg
and
and
lea
mov
cmc
and
movs
ss
or
pop
cmp
add
and
sbb
aaa
xor
or
or
xchg
dec
jnp
and
je
dec
clc
mov
or
or
cwde
mov
mov
sbb
jp
sbb
cmp
sbb
inc
fs
or
and
call
cmps
popa
push
mov
ja
stos
sbb
fwait
sar
arpl
inc
clc
push
ret
nop
test
ins
cmp
inc
in
inc
sbb
repnz
add
cmp
mov
movzx
jmp
mov
popa
dec
adc
xchg
jbe
add
jne
pop
(bad)
in
jp
adc
add
adc
push
aas
(bad)
xor
add
jg
jmp
xor
mov
js
inc
stos
cmp
dec
and
jb
cwde
add
ret
fimul
(bad)
ins
cmp
fild
and
inc
sbb
ins
test
jmp
mov
mov
pop
fld
push
cmp
sbb
mov
mul
aam
adc
and
sbb
fwait
xchg
mov
movs
dec
inc
rcr
mov
outs
push
mov
cmp
jne
stc
inc
ins
lods
push
lahf
cmps
sub
ss
repz
sub
mov
sbb
push
add
push
adc
sub
dec
mov
mov
mov
add
sbb
call
push
fcomp
push
ins
jbe
sti
jmp
cld
stos
push
cmp
push
adc
popa
lds
or
cmps
xor
cmp
sbb
xor
jbe
add
mov
adc
push
push
adc
and
or
call
adc
pop
test
adc
mov
retf
stc
inc
add
or
pushf
ret
xchg
pushf
hlt
(bad)
jne
add
daa
or
mov
pop
leave
(bad)
adc
pop
and
mov
sub
cmp
aad
push
gs
sub
rol
pushf
push
or
data16
sbb
sub
cmps
in
inc
sbb
mov
mov
shr
dec
in
setne
inc
cld
cmc
cmp
js
mov
ins
inc
add
aaa
bound
xlat
and
push
and
sbb
push
xchg
lock
sbb
mov
dec
jo
dec
sbb
dec
mov
outs
push
mov
jmp
push
popa
shl
or
inc
add
pop
add
cmp
pop
mov
dec
clc
push
sbb
jp
pop
ds
xor
(bad)
pushf
push
adc
(bad)
lds
lock
shl
loope
out
and
adc
(bad)
sbb
pop
or
mov
mov
adc
jne
push
popf
and
and
adc
add
dec
adc
out
push
push
push
cmp
in
fs
xchg
add
aaa
call
sub
sub
mov
adc
push
adc
out
push
retf
pop
shr
mov
xchg
call
imul
mov
mov
or
clc
xchg
enter
jle
and
adc
icebp
scas
aam
ret
add
mov
imul
push
mov
pop
or
and
xchg
jmp
hlt
and
pushf
adc
and
ss
ins
ins
enter
push
and
adc
adc
fist
(bad)
int3
jle
adc
dec
jle
push
push
sub
out
mov
add
punpckhwd
cwde
(bad)
pop
add
test
jo
adc
pop
add
adc
dec
pop
adc
add
or
push
movs
add
sbb
fist
inc
push
push
clc
jle
dec
jle
add
sbb
hlt
mov
dec
into
shl
cmp
adc
sbb
les
or
inc
or
mov
add
push
fmul
shld
loopne
push
cs
cmc
mov
fucomp
dec
popa
mov
adc
inc
fs
call
dec
inc
mov
add
pop
adc
push
jle
inc
sbb
push
gs
nop
std
dec
mov
adc
test
aad
mov
cwde
call
inc
xor
add
shl
jmp
pop
add
fsubr
(bad)
(bad)
ins
sub
mov
push
xor
inc
mov
xchg
test
inc
xor
add
or
repnz
adc
rcr
jl
mov
icebp
add
add
sbb
(bad)
inc
add
cmps
inc
ret
dec
cmp
or
ins
sahf
or
mov
inc
add
and
sbb
fdivrp
cmp
add
(bad)
add
cdq
out
fs
aaa
sbb
cmp
or
pop
jp
lods
push
outs
outs
add
inc
fs
gs
push
fisttp
int
loope
lea
sub
cmp
add
push
aam
fsub
xor
fisttp
push
pop
call
push
cmp
or
push
out
or
and
call
mov
cmc
sub
xchg
or
ds
mov
cs
and
retf
xor
ret
push
adc
hlt
push
pop
sar
lock
movs
mov
ret
movs
(bad)
jg
rcr
add
xchg
hlt
or
mov
fdivr
mov
icebp
shl
test
loop
inc
popa
adc
cli
jge
sub
arpl
push
js
sbb
add
js
js
dec
pop
ss
or
les
add
pop
clc
loopne
sbb
add
sbb
lea
shl
lods
or
dec
pop
sbb
inc
push
ss
aas
push
loope
mov
xchg
int3
push
sbb
add
scas
(bad)
adc
xchg
nop
and
iret
loop
popa
jmp
mov
or
ror
xor
shl
mov
adc
jne
cmp
mov
adc
retf
call
ds
lods
sub
and
stos
adc
nop
add
out
daa
and
pop
xchg
sbb
repz
cmp
dec
mov
push
adc
xor
loop
cmp
or
inc
jne
push
enter
or
push
or
loopne
in
jl
sbb
in
vpsubusb
sysenter
xchg
mov
inc
(bad)
clc
test
add
mov
pop
sbb
jecxz
push
out
push
mov
fsubrp
daa
mov
dec
xchg
inc
inc
inc
loopne
xor
xor
or
pusha
add
pop
sbb
ins
test
mov
xchg
lock
jge
pusha
cmp
xor
sbb
or
add
add
test
dec
inc
mov
adc
push
dec
and
shl
ja
dec
clc
adc
pop
clc
ret
cld
nop
lock
inc
adc
inc
sbb
or
jle
cli
push
inc
pusha
or
imul
or
cmp
push
aas
js
or
pop
adc
push
mov
mov
rol
sbb
dec
pusha
inc
mov
sbb
test
sub
add
pop
jmp
fld
add
(bad)
jae
pop
inc
test
dec
sbb
sbb
loopne
mov
mov
or
push
inc
mov
push
mov
sub
add
call
(bad)
ficom
push
punpcklwd
movs
add
scas
not
push
test
cmp
add
adc
or
das
jbe
cmp
jg
add
sbb
(bad)
and
add
add
xchg
cmp
jnp
add
rol
retf
or
repnz
push
sub
cmp
jge
in
fdivp
or
add
jmp
adc
std
add
mov
or
add
jne
mov
idiv
push
add
and
ficomp
inc
rcl
add
ret
fs
or
fs
mov
loopne
mov
push
pop
mov
pop
test
data16
push
jecxz
xchg
or
ret
add
push
hlt
push
jmp
push
ret
lods
and
push
push
or
call
pop
mov
xor
ret
dec
inc
xor
inc
aaa
cmps
jbe
mov
fisubr
and
sub
sbb
adc
hlt
fcom
in
dec
jo
(bad)
lock
xchg
add
sbb
add
add
sub
and
push
or
(bad)
fcmovb
ss
dec
sbb
cmp
xor
ins
xchg
in
lods
and
nop
mov
or
nop
pop
dec
ins
ins
or
push
sbb
mov
call
xor
push
sbb
adc
gs
clc
xor
cmp
xchg
mov
add
sub
add
and
mov
aad
test
xchg
push
call
or
xchg
adc
push
lock
push
sub
mov
pop
dec
mov
rcl
dec
sub
mov
lock
stc
jle
je
(bad)
add
ror
push
(bad)
cld
cmps
popa
pop
push
fisub
dec
retf
les
loope
push
js
data16
(bad)
cmp
les
adc
mov
xor
imul
dec
jl
adc
cdq
clc
ror
into
addr16
or
fs
adc
jne
(bad)
je
inc
mov
jno
fistp
and
lea
gs
dec
rol
or
popf
aam
enter
add
call
jne
hlt
lea
mov
or
xchg
pop
jp
inc
pop
jae
cld
jl
sub
test
rol
les
pop
add
or
pop
mov
fistp
les
or
pop
clc
out
lea
movs
adc
aaa
xchg
cmp
dec
sub
mov
hlt
lock
sub
lock
outs
push
sub
cmp
call
mov
dec
pop
jnp
push
je
sub
or
outs
loopne
enter
clc
sub
xor
push
sahf
fs
jge
cmp
push
mov
test
pop
pop
lea
xchg
and
push
and
pop
xor
push
and
and
mov
add
jmp
ret
jmp
rcl
pop
pop
fs
cmp
jne
xor
dec
lods
jle
test
mov
and
(bad)
or
mov
dec
pop
jge
and
sub
sbb
jle
pop
loopne
push
adc
mov
cli
js
test
cmp
xchg
movs
out
sti
push
sbb
jbe
or
cmp
pusha
push
popa
dec
ins
mov
and
lock
push
fisttp
jno
loopne
popa
adc
pop
shl
aam
cmp
mov
jo
fadd
aam
adc
in
cwde
rol
add
add
xchg
cld
bswap
add
sub
add
daa
lock
mov
jb
sub
sbb
rol
movs
not
adc
daa
push
inc
add
sbb
cmps
loopne
aad
daa
push
and
xor
mov
rcr
shl
fs
xor
and
fld
test
inc
xchg
add
mov
and
xor
inc
mov
push
sub
or
shl
add
add
adc
add
sbb
push
sti
in
jae
lds
push
add
mov
inc
(bad)
sti
sbb
dec
mov
add
or
movs
or
cs
dec
sbb
inc
adc
cmp
inc
fcomp
mov
loop
inc
ja
je
cmp
sbb
ror
pop
pop
movs
sbb
or
xchg
sub
js
inc
mov
inc
sbb
sub
sahf
jns
sub
push
inc
enter
add
add
mov
add
jo
jo
and
add
xor
xchg
and
(bad)
fdiv
fldenv
sbb
loopne
sub
dec
cmp
jnp
sbb
cmps
dec
sqrtps
push
inc
imul
inc
fisubr
push
lock
add
xor
and
xor
xor
xor
push
sbb
cwde
cli
js
sbb
adc
ror
push
adc
push
push
ja
hlt
jne
mov
add
imul
or
(bad)
xchg
f2xm1
mov
sbb
ins
movs
jnp
add
sbb
xor
rcl
cmp
test
jmp
lea
dec
inc
rcl
enter
cdq
imul
mov
sbb
cli
mov
cmp
or
or
inc
push
push
or
jecxz
lock
adc
add
mov
mov
pop
mov
dec
and
xchg
pop
int3
sbb
pop
or
and
or
add
jle
push
sbb
xchg
cld
add
lds
sahf
dec
xchg
push
clc
outs
mov
mov
add
add
sar
jns
adc
jmp
sub
xor
(bad)
push
test
and
ret
inc
or
jne
add
pusha
and
call
pop
ins
sbb
daa
nop
call
sti
pop
push
imul
xor
retf
adc
sub
cmp
jae
push
ins
and
(bad)
cmc
mov
or
ror
outs
ror
leave
sbb
mov
pop
adc
mov
mov
xor
jmp
jl
aam
and
cld
jmp
test
and
mov
cwde
outs
(bad)
xor
push
add
push
pop
ja
adc
pop
nop
call
loope
loop
das
and
lea
mov
xlat
push
sti
sbb
(bad)
dec
clc
mov
sub
ins
inc
add
in
mov
fs
in
lock
shl
mov
lea
fild
add
test
popa
mov
lea
add
clc
inc
movs
fwait
hlt
push
pop
js
shl
test
js
pop
mov
movs
push
dec
out
in
enter
jmp
dec
je
mov
mov
mov
mov
jp
test
adc
or
loop
clc
xor
test
test
je
mov
push
iret
cli
or
jnp
and
or
cmp
inc
or
movs
adc
test
and
jns
pop
jne
sbb
lods
xchg
jp
inc
sbb
xchg
or
imul
inc
sub
je
inc
pop
xchg
push
popa
or
test
shl
adc
sbb
sbb
and
aam
adc
cs
push
xor
call
jl
adc
loopne
icebp
jge
call
adc
outs
mov
ret
lahf
jl
pusha
sar
test
mov
jo
inc
mov
push
lea
sti
mov
je
je
add
(bad)
and
in
add
push
or
adc
dec
or
sbb
xor
lods
addr16
push
jp
xor
and
push
fwait
jae
inc
add
nop
push
into
sub
add
les
popa
adc
dec
scas
or
ins
inc
ins
sbb
sbb
adc
mov
cwde
dec
iret
mov
xor
push
xor
dec
loopne
data16
hlt
jo
rol
add
dec
inc
outs
ja
jp
cmp
jns
xor
push
sbb
inc
imul
fidiv
mov
push
add
push
mov
adc
test
(bad)
adc
loopne
loope
ds
popa
cld
fadd
and
push
xchg
cmc
rcl
in
xchg
adc
cmp
mov
mov
cwde
cmp
jmp
adc
pop
cmp
push
cmp
ins
add
and
rcr
jne
cmp
(bad)
out
sub
cmc
and
jp
adc
hlt
xor
sub
pop
and
(bad)
das
inc
sbb
push
leave
pop
mov
repnz
pusha
repnz
inc
and
xchg
push
cmps
shl
xlat
call
pusha
stc
push
je
fidiv
lods
cs
sub
inc
mov
loopne
or
push
push
cli
push
lock
lock
aam
daa
in
push
and
nop
cs
cmp
pop
jecxz
adc
dec
hlt
outs
jecxz
sub
outs
add
dec
mov
or
dec
outs
test
stos
push
pusha
mov
inc
cmp
inc
cld
movs
(bad)
add
cmp
push
dec
daa
loopne
jo
dec
fbld
fsubr
mov
add
xor
cmp
fs
and
push
callw
inc
dec
ret
sbb
mov
in
mov
mov
scas
es
fs
or
div
call
sub
in
xchg
loop
xchg
and
xor
cmps
or
xchg
pusha
push
idiv
clc
sbb
(bad)
mov
cmp
push
dec
fisub
aam
sub
adc
sbb
test
sub
jne
sbb
jne
mov
jo
mov
inc
cs
ret
inc
repnz
pop
mov
cmp
fild
jne
adc
add
jno
sbb
frstor
or
shl
cmp
pusha
or
mov
popa
inc
add
cmp
lea
push
inc
add
nop
and
adc
jp
xchg
enter
fdivp
xchg
or
pusha
aad
sub
sar
and
sar
mov
push
rol
pop
sub
mov
or
or
add
mov
xchg
cmp
adc
out
mov
fsub
push
adc
add
enter
push
or
add
add
jb
adc
push
fcom
(bad)
fmulp
pop
(bad)
stos
and
mov
adc
jne
and
pop
add
add
movs
push
dec
xor
adc
lahf
cli
pop
das
cmp
add
fmul
jae
ds
jge
add
add
(bad)
popa
add
(bad)
jl
mov
pusha
xor
dec
and
cwde
add
loop
add
call
jae
adc
fild
pop
dec
rcr
imul
cdq
xor
ret
mov
lock
fisubr
add
cli
ror
adc
test
push
arpl
mov
arpl
test
in
cld
je
jg
jbe
mov
sbb
das
add
push
pop
in
paddb
mov
and
sbb
clc
popa
clc
(bad)
sar
cmp
jle
(bad)
clc
pop
inc
push
aam
or
and
and
lods
sub
sbb
fwait
xchg
pop
pop
and
mov
sub
adc
int3
add
push
push
leave
push
pop
sub
inc
out
xchg
mov
mov
mov
inc
or
xchg
push
xor
ds
in
test
loopne
mov
je
xchg
add
jae
cmp
daa
aaa
inc
ss
es
or
jg
xchg
xor
pop
sub
and
pop
mov
imul
jae
lock
test
repz
sub
pop
pop
mov
push
mov
les
jp
sub
cmp
dec
or
or
les
iret
jo
pop
fcmovne
gs
jo
inc
fmul
cs
sbb
add
loop
out
fdivr
inc
or
ror
ins
or
jbe
cmp
adc
leave
test
push
adc
cmp
scas
sub
in
inc
in
pop
and
or
and
data16
sbb
xor
sub
lods
add
xor
test
dec
in
pushf
mov
call
xor
pop
inc
mov
xor
push
mov
jmp
push
inc
outs
test
mov
aas
inc
cmp
cld
and
les
mov
add
cld
inc
iret
mov
or
xor
sub
or
add
shr
jae
inc
imul
jo
mov
jge
xlat
sbb
call
mov
sub
icebp
sub
jle
adc
jns
gs
sahf
jno
add
fimul
sub
jne
mul
cmp
sbb
dec
mov
movups
out
push
or
cli
cmp
dec
mov
sub
ret
add
dec
clc
xchg
or
or
adc
or
je
cmp
sbb
xchg
lahf
sbb
and
hlt
xchg
sbb
div
sbb
rcl
jl
call
pop
mov
jo
add
jno
mov
loopne
jne
gs
inc
dec
and
xor
(bad)
mov
mov
xor
aam
fldcw
cmp
adc
mov
xor
ins
xor
adc
into
jg
std
and
fdivr
imul
or
mov
push
mov
xor
(bad)
fmul
jp
fmulp
imul
inc
sub
loopne
pop
cwde
js
inc
push
cwde
ror
mov
sbb
rol
inc
sar
ret
and
add
inc
int
pop
icebp
dec
add
sub
inc
add
dec
push
adc
ss
add
sub
and
or
mul
lock
mov
and
add
shl
push
mov
mov
sub
or
test
pop
inc
adc
test
ret
sbb
jge
fdivrp
jle
lods
pop
inc
test
inc
add
mov
inc
or
push
pop
inc
in
loope
js
adc
popf
call
in
call
xchg
scas
rcr
loopne
push
outs
arpl
inc
sbb
jmp
leave
jne
mov
xchg
js
add
and
and
dec
ret
imul
outs
or
jge
pop
add
mov
jo
retf
push
cmp
or
sbb
jmp
cmp
ds
ret
or
outs
outs
or
sbb
jo
and
mov
ss
aam
xor
lods
pop
mov
int
ins
jl
or
dec
push
pop
not
and
fld
xor
sub
cdq
nop
add
inc
sub
pop
das
inc
call
inc
add
shl
out
test
mov
jnp
loopne
mov
outs
push
ficom
fdivr
add
fild
mov
jbe
jne
pop
add
and
inc
push
hlt
push
pop
xor
xor
adc
adc
(bad)
pop
xor
or
test
cmc
inc
push
(bad)
sub
jmp
or
add
sbb
add
xchg
fdiv
and
pop
push
(bad)
and
add
sub
(bad)
clc
popa
mov
cmp
jl
lock
lsl
rcr
and
jge
add
xor
cwde
sbb
loop
aad
into
nop
shl
and
dec
or
mov
adc
leave
sbb
pop
and
xchg
arpl
and
cmp
repz
inc
ret
sbb
xchg
pusha
es
movs
shr
dec
and
pop
(bad)
(bad)
xor
rcr
add
adc
leave
sbb
jge
daa
rcr
jg
es
out
or
mov
test
or
test
int
rcl
cmp
push
dec
das
jecxz
mov
sub
enter
push
cmp
adc
adc
or
cmp
aad
mov
push
pop
jecxz
mov
lock
pop
fisttp
pop
dec
mov
rcr
inc
adc
sub
inc
inc
test
push
mov
mov
xor
fdiv
pop
lock
xor
inc
mov
add
test
and
frstor
mov
pop
push
mov
push
les
sub
dec
adc
push
and
sbb
(bad)
fmul
xor
jle
xor
cmp
je
test
iret
enter
fld
loopne
add
push
scas
xchg
sub
loop
pop
repnz
sub
add
inc
mov
mov
xchg
fadd
or
and
push
sar
mov
cld
loopne
fsub
pusha
adc
pop
pop
sub
inc
pusha
xor
call
test
je
nop
stc
sets
push
in
jno
or
push
add
sar
es
jmp
cmp
jbe
or
push
es
dec
mov
push
push
js
mov
sti
dec
les
add
add
mov
xor
xor
cs
add
in
mov
movs
in
xchg
ret
push
push
idiv
out
cdq
js
and
sbb
and
test
jo
push
scas
lea
xor
or
add
or
(bad)
push
push
sub
sahf
dec
int
jg
adc
mov
cmps
in
jl
mov
out
xor
hlt
push
sbb
dec
rol
es
js
xchg
je
mov
xor
fstp
push
xchg
or
daa
fsubr
aaa
push
adc
outs
loopne
adc
mov
and
ret
inc
and
sti
dec
rcl
out
inc
cli
cwde
call
dec
cld
nop
mov
jo
ret
mov
sub
adc
pop
into
test
outs
push
ja
pop
fsubr
addr16
mov
cmp
inc
div
mov
enter
sub
xchg
mov
pop
xor
sub
rcr
fnsetpm(287
add
dec
mov
mov
jle
imul
fsub
jg
iret
fsub
pop
shl
inc
loopne
in
into
cmp
imul
mov
mov
mov
nop
xlat
sub
push
push
add
ss
push
dec
adc
adc
or
or
call
add
pop
push
push
ret
lahf
ror
adc
mov
push
scas
cld
push
and
adc
enter
(bad)
cmp
addr16
inc
fneni(8087
pusha
mov
add
add
jo
mov
mov
into
add
jmp
icebp
sub
adc
movs
add
or
dec
cld
xor
test
sbb
mov
xor
loopne
sub
push
adc
pop
stos
push
mov
lahf
xchg
jo
fdiv
imul
pop
add
inc
adc
mov
outs
fidiv
push
push
xor
add
push
xor
add
scas
jmp
dec
add
outs
popa
jbe
mov
push
push
xchg
mov
loop
xchg
xlat
jmp
sub
adc
adc
and
or
mov
mov
adc
mov
arpl
js
mov
cmps
sub
push
call
sbb
sbb
pop
inc
or
fmul
or
add
adc
push
cli
outs
mov
sbb
daa
add
jmp
cmp
je
mov
fsub
push
(bad)
int
and
sub
xchg
xor
adc
adc
and
aaa
cmp
fs
xchg
pop
add
pop
sbb
movs
ret
mov
mov
ss
jg
pop
xchg
das
dec
adc
or
pop
jo
xchg
je
adc
jbe
aas
adc
add
mov
or
mov
add
cmp
and
and
fmul
mov
sub
and
ret
mov
loopne
loopne
icebp
cdq
push
aas
adc
or
nop
addr16
add
mov
fiadd
test
adc
push
jno
movs
outs
ss
cli
pop
ja
imul
or
xor
cmp
repz
mov
add
add
cld
pop
sahf
or
or
and
adc
xor
in
cmovg
lods
fnstenv
push
cmp
sahf
add
push
(bad)
leave
push
push
dec
outs
dec
adc
shl
jb
mov
sbb
jmp
push
mov
sti
or
pop
adc
cmp
dec
push
adc
sbb
sub
and
push
test
jno
std
mov
mov
pop
mov
add
cmp
mov
das
mov
adc
sub
jns
inc
adc
fist
xor
push
push
mov
fdivr
popf
add
and
or
das
dec
sub
or
adc
mov
mov
push
push
nop
mov
sbb
push
add
mov
dec
inc
fld
call
pop
iret
xchg
retf
shl
adc
das
outs
add
lock
das
pushf
dec
or
dec
out
add
add
xor
jmp
mov
dec
sub
aas
into
add
cmp
sub
add
(bad)
cmp
adc
add
dec
movs
xor
cld
mov
dec
setl
test
sub
mov
pop
enter
movs
out
pusha
movs
ret
pop
push
add
xor
inc
jmp
pop
jne
mov
enter
or
sbb
mov
aam
mov
movs
add
push
movs
push
mov
and
in
call
add
adc
out
int3
pop
mov
sub
or
cmp
xchg
not
and
pushf
xchg
xchg
rcr
ror
jmp
cmp
adc
clc
add
adc
inc
fnstcw
out
dec
jns
jge
and
lea
test
xor
out
add
mov
push
adc
jns
adc
dec
push
add
or
push
inc
or
push
mov
push
pop
adc
jl
sbb
(bad)
adc
pop
sbb
mov
or
push
push
hlt
xchg
push
push
add
xchg
test
push
pop
pusha
push
dec
loope
div
dec
push
mov
inc
jbe
out
lds
cmp
lds
jne
mov
push
mov
addr16
inc
inc
dec
mov
(bad)
es
or
add
aam
cmp
jne
leave
and
ja
add
cmp
and
push
movs
outs
fnsave
jl
movs
mov
mov
das
add
mov
and
pop
xchg
add
adc
pop
adc
int
shr
inc
sub
pop
pop
cmp
mov
enter
in
out
movs
in
ficomp
sub
pusha
mov
mov
inc
add
mov
push
push
je
fild
shl
jmp
or
inc
movs
push
mov
and
jo
mov
cmp
sbb
lea
jo
push
sbb
call
mov
fimul
mov
les
cmc
mov
and
cmp
inc
lds
(bad)
cmp
call
pop
xlat
inc
mov
xchg
push
stos
add
(bad)
push
sbb
fist
push
push
in
mov
in
cmp
push
and
stos
sub
inc
sub
in
pop
mov
dec
int
ins
idiv
je
mov
xchg
add
cmp
and
adc
jl
mov
jo
mov
retf
add
call
adc
add
cmp
push
lock
pop
std
in
push
add
jne
mov
add
rol
test
aaa
add
push
adc
inc
loopne
pop
int3
jae
lea
(bad)
and
and
push
or
rcr
fs
inc
fstp
adc
(bad)
call
adc
mov
add
rcl
aaa
and
rol
sub
in
dec
mov
mul
dec
jo
jge
test
lea
xchg
dec
retf
dec
sbb
(bad)
mov
and
add
and
push
push
aam
lods
sub
dec
pop
add
(bad)
dec
cmp
in
test
pop
cmp
or
mov
inc
daa
or
or
fwait
je
test
test
into
sbb
loopne
dec
or
test
push
push
and
lahf
fyl2xp1
lock
test
sbb
sbb
inc
sbb
or
push
or
mov
dec
aam
inc
mov
mov
inc
xor
aam
leave
rcr
sub
addr16
mov
or
fcom
clc
or
call
loope
pop
jmp
add
cmp
cmp
jl
mov
ins
pop
test
push
sbb
push
and
aad
fs
xchg
sbb
outs
and
add
push
outs
sbb
mov
lock
lods
jb
(bad)
add
add
adc
dec
xlat
inc
mov
loopne
sbb
and
ja
push
sub
in
pop
clc
mov
je
mov
push
in
push
and
jmp
sbb
(bad)
and
and
(bad)
ror
jle
xor
add
mov
xor
sbb
and
dec
sbb
jmp
inc
ins
loopne
cmp
inc
rol
and
mov
mov
jb
aaa
out
add
push
jmp
out
add
sub
pop
inc
sbb
add
pop
popf
jecxz
(bad)
in
add
jmp
repz
inc
mov
add
sbb
(bad)
fmul
xchg
js
mov
test
cmp
and
mov
xchg
inc
or
jb
out
add
or
mov
lahf
sbb
stos
ret
scas
retf
rol
fldcw
out
xchg
inc
jp
test
(bad)
ds
mov
xor
sub
xor
loopne
ins
fmul
push
adc
mov
and
gs
xor
test
jle
xchg
cld
mov
nop
scas
add
xor
mov
clts
js
mov
test
repnz
adc
mov
adc
popf
adc
pop
inc
dec
pop
xor
and
dec
sti
mov
ja
das
inc
mov
xchg
fdiv
inc
adc
and
test
cmp
je
jno
and
xchg
xor
inc
pop
jbe
dec
adc
adc
std
test
push
sbb
jb
je
or
aas
loope
and
jmp
aas
jbe
retf
dec
push
std
call
pop
push
pusha
sub
in
add
xchg
inc
nop
pop
shl
cld
or
gs
fs
stc
and
loopne
(bad)
mov
in
jmp
sahf
dec
cmp
stos
add
test
outs
ror
jne
mov
or
adc
mov
sti
outs
sbb
cli
inc
int
xor
push
push
or
rcl
mov
inc
sbb
ror
or
push
stos
or
loop
test
and
dec
push
jbe
add
lea
and
je
xor
movs
adc
sbb
mov
add
or
jno
xor
mov
sbb
or
cmp
(bad)
xor
inc
adc
push
fstp
xor
enter
cmps
inc
sbb
mov
xor
movzx
data16
jmp
outs
movs
ss
call
not
fdiv
mov
and
pushf
mov
cmp
and
cdq
pop
or
ins
add
jne
fmul
inc
scas
call
(bad)
add
out
mov
out
add
push
and
add
mov
add
ss
xor
add
add
inc
dec
jae
cwde
cwde
test
push
inc
mov
test
or
rcl
push
and
push
dec
and
xchg
mov
mov
lods
ja
or
pop
xchg
sbb
pushf
cmp
clc
call
push
je
fcom
inc
jmp
fimul
ret
stos
pop
add
add
js
push
adc
pop
pusha
and
cmp
cmp
mov
push
add
jp
and
arpl
or
mov
pop
dec
(bad)
lea
mov
mov
cld
je
adc
ret
inc
rcr
lea
sbb
push
mov
push
ror
or
pop
aad
(bad)
call
jl
mov
fiadd
ds
push
outs
xor
retf
pop
and
fs
xchg
retf
add
xchg
xor
mov
shl
mov
xor
sar
mov
add
push
sbb
js
dec
popa
jns
jne
add
int
scas
aam
add
jb
inc
outs
je
jb
cli
mov
inc
je
outs
ins
jne
je
inc
je
ins
jae
(bad)
fild
lods
and
adc
ins
imul
or
fbstp
ins
sbb
push
gs
and
push
popa
mov
outs
or
popa
je
push
or
sbb
rol
jle
push
outs
jb
ror
lock
dec
inc
jb
ja
call
inc
add
add
push
jae
imul
fsubrp
jle
arpl
or
or
inc
ins
popa
addr16
inc
popa
mov
cli
data16
lock
adc
jo
fidivr
mov
mov
out
jae
mov
or
push
adc
std
dec
jae
pop
outs
mov
add
fisubr
add
inc
push
sub
ss
pop
ss
jo
or
push
dec
push
ds
int
jl
push
mov
jmp
imul
mov
ins
(bad)
shl
push
cmp
inc
add
fstp
push
jl
push
cwde
xor
push
and
hlt
aaa
push
mov
imul
or
dec
ret
dec
jo
add
idiv
call
mov
dec
popa
ss
dec
jnp
inc
push
mov
loopne
dec
ins
inc
add
cmp
(bad)
sbb
pushw
xchg
inc
mov
push
cmp
cmp
push
cmp
cmp
xor
mov
mov
push
pushf
aas
mov
loope
sub
enter
hlt
add
or
push
pushf
mov
fsubr
or
clc
inc
outs
arpl
out
pop
push
jg
ret
jecxz
lahf
jb
or
out
outs
ins
ror
lods
mov
push
imul
sub
dec
jle
scas
xchg
pushf
pop
enter
ja
and
sub
inc
mov
int
jg
lods
(bad)
leave
push
mov
into
push
inc
push
push
js
arpl
fsubr
xor
fadd
mov
push
outs
jae
sub
push
gs
cs
lea
in
fwait
push
(bad)
dec
movs
add
jns
(bad)
adc
(bad)
data16
push
cmp
leave
lock
lds
das
pop
shl
push
inc
fdiv
ins
dec
add
cmps
jle
mov
xor
ins
enterw
inc
pop
push
inc
dec
ja
jae
cwde
movs
pop
add
pop
xchg
pusha
fidiv
lock
and
or
sub
pop
mov
mov
mov
and
inc
jo
ret
push
scas
inc
jno
fwait
inc
pushf
(bad)
push
arpl
outs
jbe
jae
call
mov
add
aas
movs
dec
mov
ins
dec
pop
pop
divps
mov
inc
pop
pop
adc
sbb
dec
push
gs
push
fisttp
out
sub
sub
push
dec
gs
or
pop
movs
mov
dec
(bad)
aam
adc
aaa
cmp
retf
xlat
lock
inc
clc
iret
clc
iret
push
mov
je
nop
sub
fst
cld
inc
lods
mov
sbb
or
mov
push
sub
adc
das
aam
outs
shl
mov
pusha
cmp
inc
inc
imul
outs
fs
adc
sar
mov
cmp
inc
adc
call
cmc
and
adc
or
or
xchg
in
imul
dec
xor
sahf
je
mov
mov
call
pop
call
nop
lods
loopne
jno
aam
loopne
jl
js
inc
(bad)
or
inc
movs
(bad)
(bad)
call
mov
shl
push
sti
sbb
sbb
inc
outs
(bad)
ins
gs
add
pop
sbb
aas
dec
scas
pop
inc
jns
push
dec
inc
cwde
scas
imul
jmp
and
push
add
add
push
push
loope
test
mov
cmp
int3
shl
push
sub
test
arpl
and
xor
or
dec
sub
loop
popa
pop
and
jmp
fdivr
test
sub
xchg
jo
jo
push
jne
pop
and
test
adc
dec
xchg
sub
push
cmp
jo
push
and
ja
in
imul
inc
sub
es
outs
jne
fsubrp
inc
cli
test
int3
add
(bad)
add
aad
jo
leave
dec
jmp
test
sub
pop
mov
push
inc
imul
sub
loopne
sub
xor
add
fidiv
and
dec
outs
inc
fsub
xchg
xchg
jne
cmp
add
xlat
push
push
inc
or
mov
sub
cmp
add
adc
or
dec
in
loopne
dec
cs
lds
fcom
dec
push
cwde
aas
enter
gs
nop
stos
inc
xchg
xor
(bad)
test
out
lds
test
inc
adc
adc
mov
enter
jne
pusha
ds
inc
scas
jb
pop
xor
add
jl
xlat
inc
xor
xor
add
test
inc
xchg
stos
mov
and
rol
enter
ins
enter
das
fcom
push
cs
mov
pop
repz
addr16
not
xor
loopne
ret
push
jmp
int3
adc
rol
ud1
jmp
cmp
cmp
fsubr
popa
loop
xchg
clc
(bad)
jecxz
pop
sbb
je
je
mov
pop
jnp
or
jnp
cmp
add
or
xor
push
dec
cmp
xor
xor
(bad)
jmp
or
aaa
pop
cmp
xor
lahf
ret
dec
xor
xor
pop
sub
out
adc
xor
push
jp
lds
lahf
and
jmp
and
jl
retf
and
popa
mov
inc
sub
scas
dec
mov
inc
or
loopne
call
in
lock
clc
push
and
push
pop
int3
push
repz
fimul
mov
call
mov
daa
pop
lods
in
pop
mov
pop
stc
adc
dec
and
test
push
add
(bad)
imul
and
cwde
push
add
outs
xchg
jno
pop
xlat
dec
lock
nop
int
lahf
or
int3
into
pop
xchg
lahf
pop
shl
cld
les
fild
push
in
into
cmp
mov
fs
push
lds
scas
jne
push
(bad)
and
push
dec
push
cwde
cs
test
mov
sbb
outs
fstp
add
push
lock
xchg
fsub
dec
out
(bad)
(bad)
pushf
push
rcr
popa
data16
(bad)
cld
hlt
imul
adc
cmp
adc
ins
push
fadd
push
call
das
mov
push
jmp
jb
adc
movs
and
(bad)
cmp
popa
js
es
(bad)
sub
push
or
inc
push
cmp
ins
test
or
sbb
popa
jae
ja
movs
test
or
mov
push
push
xchg
adc
test
jnp
or
sub
ins
cdq
std
jne
fild
dec
imul
sbb
xor
mov
cli
popa
mov
sub
mov
add
sub
xchg
fmulp
pusha
sub
add
imul
shl
outs
inc
jne
data16
push
ret
add
cmp
imul
rol
xchg
gs
cwde
fstp
push
jg
dec
ins
fs
arpl
pushf
mov
packsswb
adc
mov
das
dec
jne
(bad)
retf
cmp
mov
test
xchg
push
add
(bad)
inc
pushf
(bad)
jmp
into
inc
add
inc
(bad)
mov
mov
fwait
sar
add
pop
inc
(bad)
adc
icebp
adc
adc
add
out
(bad)
dec
hlt
push
xor
pusha
push
mov
call
push
ror
cld
fisubr
loope
push
lock
and
loopne
loop
test
loop
ss
out
pop
xchg
inc
sub
test
adc
push
imul
add
pop
mov
cmp
das
rdpmc
jmp
outs
shl
outs
mov
mov
sbb
push
inc
gs
jne
mov
add
sbb
(bad)
(bad)
cmps
fwait
or
dec
mov
add
popf
sar
ins
adc
gs
dec
pop
push
mov
xor
push
scas
inc
fs
dec
and
fwait
and
add
cmp
cmp
xchg
sub
cmps
push
cmp
add
aam
shr
(bad)
fisttp
fiadd
gs
shl
int3
ins
ret
dec
je
test
or
dec
xchg
nop
not
pop
add
stos
push
cdq
and
push
and
inc
retf
repz
lods
inc
sbb
gs
cmp
add
adc
scas
sar
je
(bad)
adc
mov
retf
jne
in
movd
dec
dec
mov
jb
mov
or
gs
mov
jmp
add
xor
sub
pop
popa
js
pop
imul
retf
inc
int3
iret
and
push
pop
ins
ror
or
add
test
cmp
sar
jmp
mov
dec
lds
push
mov
add
adc
rcl
or
or
mov
(bad)
movs
test
mov
movs
sbb
pusha
fild
push
jno
mov
jl
pop
ins
(bad)
les
push
push
push
mov
and
add
jmp
and
jge
pop
adc
adc
adc
not
sbb
sbb
or
inc
or
mov
mov
pop
mov
(bad)
pop
invd
adc
mov
jbe
aam
gs
mov
sub
pushf
lea
dec
dec
outs
or
hlt
call
out
outs
test
dec
pushf
xchg
shr
mov
sub
ds
nop
call
pop
stos
outs
adc
dec
push
imul
sbb
popf
mov
mov
inc
and
push
and
jmp
hlt
nop
dec
and
add
jge
mov
dec
mov
cmps
mov
mov
inc
cmp
fucompp
adc
and
mov
cmp
pop
and
and
sbb
and
lods
and
and
adc
jb
inc
nop
push
int3
clc
mov
imul
inc
mov
daa
ror
adc
out
je
cmp
mov
inc
dec
popa
pop
lds
mov
inc
add
push
push
loopne
in
ret
test
(bad)
mov
mov
and
or
push
stos
sub
leave
xchg
and
cs
dec
not
call
scas
outs
mov
xor
mov
es
xchg
push
xor
or
add
xor
push
dec
das
xor
xchg
inc
jno
cwde
cmps
adc
inc
add
inc
imul
add
cmp
push
popa
push
or
pop
aaa
add
add
cmp
scas
outs
icebp
cmp
fwait
mov
mov
fcomp
icebp
cmp
pop
or
aas
inc
inc
or
ins
or
pop
or
inc
or
add
cmp
inc
or
loopne
ins
push
inc
js
je
mov
lea
and
test
dec
gs
enter
mov
jo
sub
out
inc
push
mov
lds
push
xchg
xor
dec
dec
pop
pop
xor
lahf
dec
push
jo
dec
add
or
rol
and
dec
push
inc
sbb
push
mov
add
inc
or
pop
daa
dec
inc
inc
inc
inc
outs
xchg
mov
inc
add
dec
outs
inc
inc
inc
inc
mov
inc
and
push
inc
test
inc
inc
inc
cmp
lods
cs
inc
inc
sar
sub
inc
inc
inc
inc
jbe
shl
inc
cs
pop
bound
dec
imul
inc
mov
cs
adc
inc
inc
inc
inc
lods
shl
pop
fs
inc
inc
cmp
gs
inc
inc
(bad)
icebp
pop
gs
sbb
sbb
aad
sub
jno
iret
aam
data16
push
arpl
mov
xchg
mov
mov
jp
add
xor
cwde
pop
fiadd
clc
ror
outs
jb
jp
popa
ins
or
push
loope
add
popf
mov
jl
push
or
push
push
mov
jle
xor
jns
push
adc
sub
inc
mov
and
enter
dec
mov
dec
nop
(bad)
nop
inc
inc
out
out
lds
pushf
out
dec
sub
fmul
jo
lock
call
inc
sub
lds
dec
imul
or
inc
scas
jae
jmp
scas
sub
popa
out
gs
push
loope
ret
pop
scas
mov
loopne
add
push
dec
push
test
stos
sbb
push
dec
(bad)
call
xchg
popf
addr16
je
in
sbb
dec
and
and
dec
gs
outs
ss
aas
push
xchg
inc
lods
push
sbb
add
jno
ins
add
pop
fild
mov
jb
popa
cli
outs
add
imul
mov
repz
sbb
aaa
mov
pop
popa
inc
(bad)
hlt
cmp
mov
cmp
pop
lods
lss
and
inc
dec
add
mov
lock
adc
and
push
dec
inc
xchg
jg
xchg
pop
and
leave
push
jb
push
jb
pop
push
movs
pop
sbb
push
xor
sbb
and
and
sbb
push
inc
leave
push
jb
and
jb
or
and
enter
and
dec
cmp
and
cmp
push
sub
pop
daa
cdq
add
sub
enter
sub
inc
enter
dec
pop
push
or
das
test
xor
(bad)
mov
xor
add
xchg
push
and
xor
adc
add
je
jo
add
pop
sub
ss
push
call
scas
mov
test
add
dec
and
fild
lahf
or
(bad)
not
cmp
scas
cmp
stos
in
cmp
dec
scas
xchg
cmp
sub
sub
scas
xchg
test
sbb
sbb
dec
cmp
sbb
dec
dec
sbb
cmp
dec
dec
add
dec
(bad)
inc
ja
and
fsubr
or
and
mov
fs
clc
push
outs
fs
popa
xchg
shl
sbb
fs
jl
(bad)
fs
fs
fs
(bad)
cmc
fs
sbb
mov
fs
shl
pop
jb
fs
pop
jg
in
fs
jae
fs
jge
(bad)
fs
fs
fs
mov
jbe
jne
or
xchg
xchg
movs
retf
adc
jnp
and
fcomp
movs
push
mov
popf
inc
pushf
xor
psllq
mov
(bad)
in
pop
mov
sbb
push
cwde
and
dec
push
push
and
cmps
push
mov
and
les
movs
mov
inc
out
idiv
or
shl
out
mov
inc
push
push
pop
mov
push
es
push
xor
mov
out
cmp
and
push
or
xor
sbb
jnp
adc
inc
aaa
cld
or
adc
je
outs
pop
or
fisttp
sahf
imul
xor
ins
js
add
sbb
push
arpl
scas
push
dec
adc
push
enter
clc
test
outs
cmp
dec
xchg
adc
push
loope
cld
jmp
cmps
mov
push
call
xchg
test
je
test
popa
clc
cs
das
add
jecxz
push
ja
jae
aam
sbb
jns
inc
sbb
inc
out
xlat
jp
test
cmp
call
rol
mov
xor
aad
ss
or
jno
sub
cdq
(bad)
push
lock
daa
aam
out
or
add
push
dec
ins
and
or
pop
add
push
imul
or
cmp
sbb
push
or
pop
aam
call
pop
sar
addr16
push
and
movs
add
or
mov
jge
or
push
adc
in
(bad)
in
mov
imul
dec
adc
or
push
mov
or
inc
xchg
adc
and
mov
add
pop
and
ja
sbb
push
add
jb
es
loop
jae
adc
jae
(bad)
cmp
jl
cmps
inc
test
push
outs
jne
arpl
ret
mov
pop
pop
xchg
or
push
add
jo
xor
add
add
sbb
ins
test
fadd
cmp
arpl
push
fimul
add
fs
ins
mov
(bad)
jge
fincstp
add
and
shr
and
and
jno
je
das
pop
mov
sahf
cmps
xor
ja
das
pusha
jo
add
jo
push
div
pop
test
jne
push
push
out
pop
xor
add
inc
add
mov
xchg
pop
xchg
jnp
jmp
scas
sbb
imul
or
jae
lahf
(bad)
or
outs
rcr
push
jo
or
out
aaa
xchg
cmps
loop
jg
les
push
(bad)
sahf
push
dec
jl
fild
aam
push
(bad)
push
adc
lahf
ja
and
clc
dec
sub
xchg
push
push
repnz
add
pop
push
cld
not
pop
lahf
je
pop
out
inc
pusha
xor
ss
pop
inc
or
test
stc
mov
and
adc
dec
and
adc
sbb
xor
dec
dec
xor
inc
mov
mov
jnp
imul
adc
hlt
outs
das
mov
push
adc
push
and
gs
push
gs
imul
std
stos
cwde
push
jge
xor
pushf
fidiv
cmp
push
cmovbe
and
sub
mov
jne
inc
jge
push
xor
ja
push
or
mov
lock
add
cmp
dec
loopne
lods
pop
mov
loopne
add
arpl
rol
jne
xor
aam
in
pusha
sbb
or
xor
jae
inc
outs
sbb
mov
je
cmp
(bad)
xlat
imul
mov
push
adc
adc
invd
or
jns
ret
dec
push
mov
ja
add
jge
adc
push
push
jo
(bad)
(bad)
(bad)
js
sbb
adc
push
cli
xor
int
test
mov
xor
jl
sti
mov
cmp
push
or
cmp
and
cmp
ror
lock
sbb
shl
test
sbb
ins
inc
ja
push
cmp
add
fmul
sub
push
cli
es
fmul
inc
push
outs
int3
mov
jmp
add
inc
add
pop
xchg
test
or
jo
adc
in
pop
rcr
or
enter
aad
enter
pop
xchg
enter
mov
aad
enter
fwait
inc
sub
mov
add
sbb
add
fnstcw
inc
push
xchg
pop
cmc
out
test
jl
inc
adc
jo
in
pop
or
lods
icebp
or
scas
mov
enter
sbb
ja
inc
inc
dec
daa
xchg
(bad)
mov
push
stos
push
mov
push
jmp
push
ret
test
push
or
dec
jecxz
frstor
mov
fisttp
pop
pop
xlat
push
icebp
push
mov
(bad)
adc
xchg
(bad)
cmp
adc
clc
scas
aam
scas
jmp
sar
retf
dec
neg
adc
test
loopne
pop
test
inc
mov
sub
enter
cmp
fadd
outs
adc
mov
cmp
xchg
cmp
and
add
dec
add
daa
add
cmp
jl
jb
adc
data16
adc
or
add
inc
inc
shl
mov
leave
and
(bad)
adc
or
mov
pop
enter
and
sbb
push
pop
add
inc
dec
pop
sbb
mov
sbb
sbb
pop
sbb
nop
pop
adc
sbb
leave
push
add
arpl
and
add
rol
add
ds
and
and
add
jb
test
add
push
push
in
add
adc
push
jb
jb
sub
add
inc
dec
adc
or
and
nop
fld
add
sub
xor
jb
pop
jo
xor
in
sbb
xor
clts
jns
adc
imul
enter
stos
in
inc
aaa
cmp
cmp
dec
cs
cdq
cmp
cmp
push
add
push
xor
and
inc
and
and
inc
inc
and
inc
or
inc
dec
int3
jp
mov
add
mov
aas
or
mov
mov
mov
pop
xchg
aam
sbb
inc
ins
(bad)
scas
cmps
mov
enter
dec
ins
xchg
mov
jmp
enter
fdivr
enter
mov
(bad)
in
enter
sti
and
inc
outs
xchg
mov
in
enter
nop
inc
enter
gs
mov
retf
enter
xchg
sub
loop
jne
add
xchg
jle
push
inc
push
mov
ins
je
cmp
cmp
arpl
ret
or
push
fdiv
inc
mov
pop
aaa
pop
loopne
pop
hlt
xchg
mov
xchg
outs
push
inc
push
je
fdivr
in
outs
scas
cmp
les
dec
test
adc
pop
sbb
loop
push
ds
dec
je
pop
fs
scas
nop
add
push
enter
retf
mov
movs
(bad)
sbb
pop
mov
sub
loope
cmps
aas
add
pop
adc
loopne
fisttp
mov
or
or
jge
mov
mov
es
data16
mov
or
pop
add
mov
mov
ss
push
popf
jp
pop
lock
adc
addr16
jo
rol
imul
cmps
lea
inc
push
xchg
das
les
test
aaa
xchg
cmp
enter
xchg
(bad)
inc
add
and
pop
sbb
cmc
fild
xor
and
and
push
or
adc
leave
movs
xor
lods
(bad)
push
jb
pop
adc
test
or
test
sbb
clc
cmp
mov
nop
inc
adc
sbb
add
xchg
pop
inc
movs
sbb
jb
push
ins
push
push
dec
dec
push
inc
and
add
mov
and
inc
mov
fld
jb
sbb
test
and
into
and
(bad)
rol
lea
sub
dec
sbb
sub
movntps
dec
mov
sub
mov
ja
leave
push
xor
xor
xchg
pop
and
and
push
aaa
cmp
add
inc
cmp
and
and
cmp
dec
and
mov
in
mov
or
mov
mov
pop
xchg
iret
repnz
mov
test
mov
and
or
inc
cs
inc
repz
pushf
cmp
inc
inc
inc
xchg
cs
adc
inc
inc
inc
inc
mov
inc
inc
inc
cs
mov
leave
mov
icebp
ins
mov
aam
pusha
add
mov
in
adc
or
hlt
loopne
jl
jl
dec
xchg
adc
xchg
add
inc
xchg
xchg
xchg
mov
mov
push
xor
pop
push
mov
xchg
push
and
jg
sbb
test
or
push
popa
imul
jno
push
inc
xchg
in
rol
pop
std
mov
or
pop
xor
add
enter
push
loopne
xor
sbb
adc
add
xchg
add
aam
rcl
inc
leave
add
add
repz
push
xor
and
pop
and
xor
call
daa
rcr
jmp
or
sub
mov
xor
xor
mov
add
aaa
cmp
in
cmp
test
cmp
nop
add
inc
fsub
add
aam
xchg
retf
xchg
clc
sbb
xchg
xchg
and
xor
xchg
xchg
popf
mov
xchg
xchg
xchg
xor
scas
xchg
retf
xchg
xchg
shl
sbb
xchg
pop
jg
retf
retf
xchg
out
adc
cmp
xchg
xchg
xchg
and
das
pop
jg
xchg
xchg
xchg
cmps
int
pop
test
cmp
add
add
stos
and
dec
js
inc
rol
pusha
outs
mov
push
mov
mov
jmp
bound
or
mov
or
or
inc
mov
hlt
nop
sbb
push
push
lods
fcomp
fld
test
mov
imul
mov
mov
jae
mov
int
gs
scas
xchg
lods
push
sub
mov
arpl
push
dec
xor
mov
or
repnz
push
mov
dec
jecxz
ins
add
mov
dec
(bad)
popa
add
jo
and
or
sub
xor
iret
xchg
add
dec
imul
and
cmp
pop
inc
dec
sub
inc
push
push
dec
inc
popa
inc
inc
add
mov
or
push
ins
popa
loop
sbb
dec
push
mov
addr16
add
les
dec
add
repnz
scas
(bad)
add
adc
adc
repz
jmp
adc
shr
jp
push
ins
or
sbb
jno
popf
pop
scas
push
pop
push
xor
or
je
fldlg2
shl
jae
or
jno
mov
(bad)
les
inc
mov
outs
sbb
add
mov
sbb
add
pop
cmp
jo
jecxz
xchg
fld
test
stos
push
out
or
dec
adc
add
cs
es
adc
push
pop
jge
nop
mov
or
sub
outs
jmp
pop
mov
xchg
out
sbb
fbstp
push
mov
hlt
dec
mov
js
call
push
mov
sbb
(bad)
(bad)
(bad)
js
cwde
sbb
jmp
xchg
push
add
scas
data16
dec
cs
and
dec
add
xchg
fld
add
pop
inc
scas
and
cs
pop
mov
add
test
(bad)
es
aad
jmp
lea
add
push
cmp
jg
inc
and
and
sub
xor
and
leave
das
xor
enter
xor
sbb
xor
test
mov
loope
aas
push
inc
cs
adc
cmp
jno
inc
push
add
mov
or
sub
mov
mov
loop
mov
inc
mov
aad
mov
mov
push
je
mov
mov
mov
retf
mov
popa
or
inc
imul
mov
adc
(bad)
ja
push
adc
mov
push
in
mov
push
inc
push
movs
adc
push
mov
js
add
xor
ja
cmp
dec
jl
mov
inc
pop
pop
add
inc
repnz
jns
or
adc
push
test
dec
fcom
dec
outs
outs
(bad)
cmp
ins
jge
or
push
mov
ja
pop
adc
out
ds
test
fmul
mov
pop
fmul
out
ss
mov
mov
dec
mov
add
pop
mov
jne
xor
mov
dec
or
sub
(bad)
xor
sub
js
sbb
sbb
out
dec
inc
or
jl
or
arpl
xor
test
mov
scas
lods
lods
add
neg
mov
mul
aam
sbb
push
test
dec
pop
sti
cmp
xchg
push
push
and
dec
adc
xor
push
loopne
fild
lock
dec
jle
in
sub
test
test
mov
test
icebp
sub
sub
or
cmp
mov
sub
sar
push
jo
or
das
mov
cdq
nop
retf
xor
dec
mov
inc
cs
add
js
mov
aam
sub
dec
int3
test
add
add
add
add
fiadd
xor
adc
sahf
cwde
les
pop
and
fisubr
pop
or
push
push
ror
cmp
int3
stos
jecxz
out
adc
jbe
stc
jns
mov
pop
add
pop
or
add
hlt
enter
outs
ret
jno
push
loope
add
inc
out
adc
cdq
and
dec
add
cmp
idiv
jbe
push
js
xlat
sbb
cmp
push
push
xlat
jno
or
cmp
outs
sub
lock
fsubr
pop
test
pusha
and
or
shl
(bad)
jge
jge
mov
lahf
pop
popf
mov
and
xchg
mov
sahf
push
cmps
jo
ret
out
push
push
jo
push
daa
sub
imul
push
mov
sub
inc
mov
inc
call
push
xlat
ins
mov
push
push
push
pop
pop
retf
mov
adc
mov
pop
rcr
push
test
pop
xlat
xor
popa
mov
popf
pop
pusha
ins
push
pop
sbb
push
jl
mov
out
test
lea
push
inc
pop
pop
pop
xchg
sbb
push
cwde
lock
xor
les
or
(bad)
cmp
adc
into
and
pop
or
pop
add
add
mov
or
sbb
xchg
int
xor
in
mov
mov
jo
jl
fild
push
fcomp
fimul
sub
dec
dec
aam
adc
and
call
mov
pop
adc
repz
add
mov
push
ins
inc
adc
aaa
jo
push
loope
cmp
scas
popf
sub
cmp
aaa
cmp
es
push
adc
aas
add
cs
add
push
push
arpl
repz
loope
icebp
movs
mov
push
sbb
mov
call
sbb
leave
or
in
mov
aaa
pop
mov
xchg
jl
(bad)
addr16
popf
adc
pop
mov
ret
sar
(bad)
push
or
xchg
mov
aas
(bad)
lods
ret
xchg
aas
mov
rcl
dec
mov
mov
add
dec
shl
sbb
js
xchg
leave
sbb
popa
sbb
xor
dec
ret
push
lahf
aaa
push
xor
mov
push
xchg
mov
lods
xchg
lock
ins
repz
pusha
(bad)
dec
in
pushw
cld
xchg
in
xchg
push
pusha
fidivr
in
lahf
pop
jbe
push
hlt
out
imul
lock
mov
xchg
xchg
push
call
xchg
xchg
push
mov
cld
or
shl
shr
fbstp
push
mov
shl
jmp
jo
shl
dec
jb
inc
adc
jg
adc
rcr
(bad)
or
(bad)
fs
or
push
mov
add
gs
xchg
add
or
add
pop
add
push
push
adc
mov
in
je
add
jo
test
push
push
inc
pop
or
push
outs
pop
pop
mov
and
xor
jg
inc
mov
fadd
inc
pop
or
enter
mov
adc
aaa
test
xor
or
push
rcl
pusha
sti
in
not
jbe
shl
jp
jmp
popf
fcom
in
lds
pop
in
stc
and
cmp
movzx
or
dec
aaa
or
mov
out
or
mov
mov
xor
pop
xor
or
mov
xchg
les
dec
xor
fstp
mov
sbb
sti
or
es
or
push
lea
add
and
jo
lock
add
push
fist
loopne
inc
int3
sub
hlt
pop
adc
push
data16
mov
inc
or
into
push
icebp
ret
sub
(bad)
xlat
ficomp
aam
sub
sbb
sbb
(bad)
in
addr16
or
push
sub
dec
das
bound
jno
and
cld
or
add
lock
clc
add
addr16
cld
add
call
jmp
inc
jo
push
test
pop
push
inc
push
add
data16
xchg
jmp
cmp
add
cmp
jne
adc
sub
rol
push
(bad)
xchg
jnp
pmaxsw
lods
push
jae
add
test
mov
js
or
mov
outs
or
jmp
dec
shl
retf
sub
mov
xor
and
sbb
and
repnz
test
sbb
(bad)
push
int
in
xor
mov
jle
into
lea
fsub
sbb
mov
lock
(bad)
js
les
push
(bad)
push
xor
mov
xor
or
js
stos
adc
jl
shr
lock
jae
xor
mov
pop
adc
js
setg
pop
mov
ficomp
(bad)
sub
jne
les
pop
pusha
arpl
dec
movs
mov
les
add
dec
jl
inc
mov
xor
xchg
jne
loop
pop
in
popf
add
loope
enter
mov
xor
add
adc
inc
push
push
cmps
push
mov
sbb
sahf
mov
shl
not
fsubr
mov
ret
sbb
enter
pop
int
push
add
sbb
popa
and
xchg
cmp
add
jl
shl
inc
or
call
cmp
mov
push
pop
vpunpckhdq
push
call
sub
and
sub
mov
mov
pop
push
or
shr
add
jno
push
aaa
or
je
or
les
push
scas
loopne
mov
aam
push
adc
std
push
jo
mov
sub
xor
je
add
frstor
aad
outs
es
test
aam
push
sub
push
dec
aam
or
sub
dec
or
movzx
dec
inc
push
or
hlt
dec
inc
js
mov
outs
int3
jecxz
pusha
in
lea
lea
sub
push
ins
mov
or
mov
jecxz
pop
add
cmp
loope
add
sbb
adc
in
sub
retf
and
add
(bad)
push
inc
iret
xchg
dec
add
adc
dec
pop
push
xchg
aas
(bad)
adc
lahf
outs
push
adc
mov
test
sbb
cmp
addr16
ja
jle
dec
add
fsub
retf
or
fxch
pop
inc
xor
nop
mov
sahf
aas
or
add
fwait
(bad)
push
mov
inc
fcom
jno
inc
add
pop
mov
ja
jbe
pop
dec
mov
popf
(bad)
sub
mov
xor
ret
pop
mov
je
jge
add
pop
sub
add
mov
test
scas
and
dec
data16
xor
mov
idiv
nop
test
pop
dec
loop
and
(bad)
nop
shr
adc
add
mov
mov
sub
shufps
cmp
xchg
shl
jno
add
nop
mov
idiv
ds
imul
mov
sbb
dec
das
into
das
mov
or
aaa
mov
cmp
je
xchg
mov
inc
mov
sbb
popa
test
jne
iret
nop
add
bswap
dec
pop
mov
cmp
(bad)
je
mov
lea
mov
and
inc
das
(bad)
(bad)
add
jne
sbb
inc
cmp
jbe
cmp
out
cwde
dec
xchg
aaa
test
pusha
and
cmp
or
in
cdq
mov
add
sbb
icebp
or
ret
add
jo
mov
sbb
ret
dec
int
sub
xor
popa
test
inc
xchg
mov
pop
sbb
ins
mov
xor
fwait
mov
shl
(bad)
mov
or
ret
push
int
or
dec
and
icebp
mov
add
xchg
mov
cwde
les
scas
cmp
loop
outs
mov
jbe
mov
or
adc
scas
sbb
jl
mov
js
or
(bad)
sub
pushf
inc
push
ror
ins
(bad)
lods
adc
or
pop
adc
or
xchg
mov
mov
mov
dec
cmp
and
test
or
or
ret
mov
push
and
or
mov
hlt
mov
adc
cdq
ret
push
mov
fisttp
add
in
imul
push
mov
dec
jl
ret
test
or
int3
ret
dec
cmp
shr
cwde
mov
mov
cmp
outs
mov
outs
psubusb
cmps
ins
cmps
cmp
lea
mov
jne
xchg
and
aad
push
xchg
arpl
cmp
xor
loop
arpl
or
xor
xchg
clc
test
test
dec
mov
sahf
mov
dec
and
sbb
mov
adc
push
dec
cmps
(bad)
ret
jle
loopne
shl
mov
imul
outs
and
mov
rcr
ss
cli
fwait
test
sar
ftst
inc
pushf
call
cmp
push
cmps
dec
inc
scas
adc
(bad)
fbld
addr16
push
push
js
pop
mov
xchg
enter
mov
test
and
jb
mov
mov
mov
ins
mov
push
daa
push
fst
(bad)
fisttp
arpl
outs
lock
cmp
mov
adc
push
sbb
jmp
das
mov
or
adc
dec
leave
and
sub
push
js
dec
clc
jp
clc
icebp
mov
sub
js
mov
and
mov
push
push
mov
xchg
fs
iret
jmp
cmp
mov
sbb
inc
jns
sbb
pop
ss
and
add
das
in
mov
dec
fwait
push
xlat
pop
inc
push
and
cmp
pop
push
xchg
mov
pop
jo
xchg
mov
xchg
fst
(bad)
cwde
pop
pop
inc
popa
xacquire
sahf
push
int3
dec
ins
test
sti
inc
adc
stos
xchg
iret
dec
add
push
shl
in
rcr
lea
(bad)
mov
ja
shr
dec
mov
bound
jmp
adc
lock
mov
lock
(bad)
clc
pop
add
sub
sub
neg
call
aam
or
xor
xchg
sbb
add
clc
pop
clc
jl
lock
xlat
add
add
dec
hlt
fsubr
or
add
or
mov
inc
pop
hlt
fcmovb
adc
mov
sbb
sahf
mov
retf
mov
inc
xchg
cld
arpl
adc
enter
xchg
pop
cld
fistp
push
add
mov
xchg
cmp
sbb
(bad)
pop
scas
nop
rol
dec
rol
(bad)
movzx
cmc
mov
aad
dec
cmp
je
or
rcr
push
sbb
lods
mov
hlt
hlt
daa
sub
shl
or
aad
js
sub
push
add
jge
xlat
fcom
inc
jne
and
test
sbb
add
jo
jb
daa
clc
fiadd
fild
xchg
rcl
(bad)
es
(bad)
addr16
imul
or
dec
mov
(bad)
fbstp
cmp
jg
je
sub
je
or
dec
mov
(bad)
movlps
je
add
sub
mov
jge
imul
popa
sub
lahf
jmp
aaa
jb
in
lock
test
sbb
daa
inc
test
adc
call
test
mov
call
add
dec
add
pop
str
test
es
mov
inc
fs
xor
cmp
and
ret
dec
in
int3
mov
add
xchg
push
stc
pop
aas
xor
cmp
dec
lock
enter
mul
xchg
adc
popf
xchg
mov
pop
(bad)
mov
add
mov
dec
push
addr16
fcom
addr16
fsub
ins
fmul
clc
jns
jb
sbb
mov
lods
test
in
pop
mov
pop
sbb
add
ret
retf
add
in
add
mov
rcr
or
pop
push
add
sar
lds
adc
inc
or
leave
ins
adc
xlat
popa
cli
or
mov
xchg
adc
sub
call
xor
push
mov
jmp
inc
ss
fdiv
daa
xchg
test
sbb
test
imul
mov
jmp
jmp
or
test
je
ins
jb
call
xor
sbb
fadd
pop
or
jmp
mov
arpl
cld
call
or
or
jl
dec
fwait
add
arpl
jg
ret
mov
lods
cmps
ss
add
and
inc
sub
popa
icebp
push
fist
add
mov
xchg
out
sti
not
add
retf
or
sub
or
sub
rol
outs
mov
ss
sbb
fs
mov
les
mov
xchg
cmp
push
les
loope
push
and
or
dec
js
or
enter
xchg
clc
loopne
out
les
xor
adc
das
sbb
cmp
aaa
scas
mov
outs
cld
mov
or
mov
comiss
pusha
mov
sbb
mov
push
pop
outs
pop
inc
cmp
ins
ror
stc
imul
popa
lock
jns
or
dec
add
xchg
push
bound
pop
pop
add
outs
hlt
mov
pop
mov
mov
nop
mov
pop
ds
mov
shl
test
(bad)
sbb
call
sbb
clc
push
xchg
mov
cli
jmp
xor
outs
xchg
mov
dec
inc
loopne
xchg
pop
(bad)
dec
or
sbb
dec
shl
aas
pop
lahf
fcmovnb
sar
retf
mov
mov
push
sbb
xchg
pushf
ds
outs
jbe
push
cmp
loopne
retf
sbb
fnstsw
inc
pop
mov
int
push
daa
add
js
adc
adc
push
int3
pop
pushf
inc
fld
loope
pop
inc
mov
fst
enter
popa
sub
and
mov
inc
push
xor
(bad)
jae
cmp
cmp
jmp
mov
sti
push
pusha
xlat
xor
scas
fsubr
and
cmp
jle
jecxz
mov
(bad)
das
add
jg
mov
ret
add
sti
add
ret
mov
add
fisub
jecxz
jnp
js
cmc
mov
adc
push
fwait
nop
adc
inc
lods
ss
push
sub
je
jecxz
not
sub
sub
jmp
push
dec
sbb
imul
loopne
pop
fs
jmp
ins
dec
imul
mov
mov
adc
das
dec
mov
fild
bound
nop
jmp
dec
je
jbe
ss
push
inc
pop
push
pause
inc
mov
mov
xor
mov
xchg
sbb
jno
in
or
test
jne
hlt
add
hlt
jae
loopne
ja
stos
dec
sar
sub
aam
mov
test
shl
test
addr16
lods
sub
stos
popa
xchg
ffreep
jo
pop
xchg
or
and
adc
pop
pop
outs
pop
cmp
sub
cli
xor
cmc
or
jmp
cmp
aam
mov
ins
and
cmp
pop
jmp
mov
scas
xchg
mov
mov
out
pop
mov
push
ret
add
jns
ret
rol
cmps
test
lea
je
leave
xor
loope
and
push
and
sbb
ja
push
imul
int
(bad)
imul
movs
mov
jae
out
mov
pop
pusha
or
call
jmp
aad
jne
sbb
cmp
add
push
cmp
sar
aaa
cwde
test
and
mov
mov
mov
mov
les
push
leave
cmp
int3
sub
and
sub
and
inc
or
call
mov
inc
loopne
or
jne
mov
cmp
inc
pop
fld
and
daa
inc
mov
je
pop
test
pop
shr
push
fwait
retf
fidiv
sub
and
inc
loop
fcomp
inc
sub
add
cmp
xor
mov
add
lock
sbb
shl
call
push
mov
add
ins
aas
cld
push
dec
jne
test
xor
add
inc
stc
adc
data16
jnp
ficomp
push
(bad)
adc
or
in
add
pusha
mov
sub
jl
aaa
cmp
(bad)
push
test
push
sbb
popa
pop
daa
jmp
inc
in
test
jl
xor
sbb
inc
mov
adc
xor
imul
inc
lods
pop
dec
pop
ins
xchg
jns
pop
sbb
(bad)
push
add
push
pusha
jno
mov
jo
mov
les
cmp
push
push
(bad)
mov
xchg
or
int3
inc
int
inc
dec
or
and
shr
call
dec
bound
jno
xchg
out
ret
test
cmp
mov
ss
push
inc
adc
sub
add
ins
cmc
add
mov
gs
iret
add
inc
iret
je
jmp
movs
push
push
sub
adc
rcr
sbb
addr16
xor
or
leave
mov
lea
out
add
cld
inc
lea
cld
or
(bad)
jo
push
sbb
sub
fdiv
inc
pushf
push
inc
loopne
fs
jne
or
or
sbb
xchg
mov
cmp
pushf
hlt
stos
div
sub
movs
es
bound
adc
pop
cs
ror
or
add
shl
add
add
sub
leave
js
add
inc
xlat
cmp
or
pop
pop
js
push
fimul
call
js
sub
sbb
add
cmp
mov
adc
fistp
pop
xchg
in
dec
retf
sti
mov
mov
adc
mov
push
xor
call
push
daa
call
pop
xchg
call
jl
pop
sbb
loop
test
mov
push
add
lods
jb
test
or
or
daa
dec
inc
and
mov
pop
movs
add
cmp
add
(bad)
adc
in
not
and
or
lods
mov
aam
pop
loope
adc
call
mov
pop
test
sub
cld
js
jno
or
adc
(bad)
out
jle
fiadd
and
movs
pushf
lea
push
adc
add
retf
loop
add
mov
in
sub
jnp
call
xlat
add
mov
jno
push
daa
scas
ja
inc
mov
pop
xor
fwait
add
imul
mov
dec
push
pushf
push
push
push
out
adc
cmps
lock
icebp
adc
push
mov
repz
jmp
jb
je
sub
dec
sbb
retf
inc
in
in
scas
sub
xor
dec
jg
inc
cmp
sbb
push
into
addr16
mov
call
xlat
add
dec
and
(bad)
out
or
pop
addr16
mov
mov
lods
les
cmp
icebp
push
or
fadd
repz
or
xchg
sbb
ja
or
daa
jg
fsub
mov
push
pop
add
add
pop
cmp
xchg
pop
xchg
scas
cld
mov
dec
pusha
sub
push
stos
js
cmp
cwde
mov
push
adc
inc
jno
inc
inc
add
dec
fidiv
cmps
sub
jbe
or
xor
sub
ret
and
nop
out
jmp
test
cmc
cmp
jmp
and
dec
and
adc
(bad)
mov
mov
fs
outs
xchg
mov
loope
pop
sbb
lods
inc
fs
add
lock
movs
sti
push
ss
lahf
inc
mov
sbb
ds
mov
jg
test
pop
mov
mov
jae
dec
(bad)
and
xor
into
jo
mov
pop
sub
push
das
push
sub
or
jmp
xchg
rcl
sbb
mov
sbb
mov
(bad)
(bad)
add
adc
or
js
sbb
pop
pslld
(bad)
es
mov
scas
or
in
cmp
adc
or
cmp
or
aam
imul
add
aad
sbb
push
out
enter
lock
das
dec
js
aam
or
inc
adc
out
xchg
and
inc
sub
pop
or
push
sbb
pushf
jnp
and
xor
xlat
and
mov
or
add
mov
or
hlt
add
jno
adc
add
cmp
dec
inc
push
cmp
dec
je
lods
jge
fild
jmp
cmp
je
mov
jg
sbb
inc
call
sbb
cmps
xchg
out
je
or
jne
xor
mov
loopne
or
ret
or
sub
in
das
lahf
xchg
add
sbb
xchg
adc
sub
mov
inc
pop
popa
scas
cmps
push
loopne
mov
dec
xchg
pop
push
test
or
cmp
cmp
mov
rcr
mov
adc
(bad)
pop
test
mov
adc
mov
push
push
cwde
call
div
and
or
dec
sbb
cmp
cli
xchg
fist
sbb
sbb
sbb
mov
nop
jle
pop
or
push
inc
shl
rol
cmc
je
dec
push
cmp
mov
mov
js
lock
or
je
ret
ds
sbb
cmps
call
(bad)
call
pusha
fisttp
rdmsr
je
xchg
and
sbb
jo
(bad)
and
inc
jb
cmp
dec
mov
sbb
push
dec
push
jns
idiv
cwde
and
clc
mov
cli
cli
int
and
popf
or
mov
cmps
mov
inc
cmp
push
aaa
xor
mov
ja
ins
mov
mov
pop
dec
cmp
mov
push
adc
sbb
dec
(bad)
xchg
or
cmc
je
add
push
push
jnp
in
fbld
push
test
imul
test
cmp
xchg
xchg
repz
cmp
cmp
push
xchg
enter
ins
mov
mov
aaa
lods
sbb
ret
outs
inc
shl
out
aam
adc
push
jl
mov
push
sbb
adc
push
jmp
test
xor
hlt
retf
mov
jmp
pop
cld
push
in
pop
movs
pop
xchg
or
leave
(bad)
loopne
int3
adc
hlt
xor
pop
das
stos
push
jbe
stos
xchg
aad
sub
in
popa
in
mov
aad
clc
je
cmp
int
cwde
cmps
mov
dec
and
call
mov
cmp
mov
iret
xchg
xchg
add
je
mov
cmp
push
(bad)
mov
cmp
nop
pop
adc
sbb
jg
cmp
mov
adc
mov
mov
or
pop
ja
jo
ss
push
sbb
pop
mov
out
cmc
sbb
push
(bad)
test
data16
stos
pop
sub
sub
xchg
pusha
push
push
pushf
popa
sub
push
test
(bad)
mov
outs
jmp
push
les
jecxz
shl
ds
xchg
sbb
inc
or
inc
jne
pop
and
jno
stos
jmp
ret
push
and
mov
dec
inc
adc
mov
xor
jmp
cli
cmp
push
push
mov
inc
mov
test
popa
test
loop
mov
push
es
aad
mov
or
adc
add
jmp
jns
push
loopne
aam
push
outs
in
add
adc
pop
int
jo
push
xchg
mov
in
inc
and
cmp
mov
inc
cmp
movs
adc
adc
pop
test
xchg
pop
stos
mov
lods
ficom
cmp
je
sub
xchg
loopne
xor
mov
inc
jl
mov
dec
dec
jne
or
(bad)
sub
movs
sbb
test
mov
adc
daa
or
call
inc
test
jl
stos
pusha
pop
sbb
xchg
mov
movs
retf
clc
pop
sbb
inc
pop
or
daa
frstor
mov
inc
cmp
jo
cwde
inc
mov
adc
pop
cmp
xchg
dec
cmp
mov
add
ret
in
hlt
xor
in
or
pop
push
or
cdq
xor
xchg
dec
dec
sub
(bad)
les
fsubr
mov
or
dec
pushf
and
adc
(bad)
sub
or
cmp
cmp
or
push
add
ret
movs
pop
imul
or
mov
pop
mov
call
add
arpl
dec
jge
call
add
or
sub
lea
aaa
(bad)
ret
push
stos
or
pop
or
cli
mov
mov
pop
movs
mov
push
cmps
mov
stos
popa
or
rol
leave
addr16
aad
mov
push
xor
push
sub
scas
stc
and
sbb
xchg
add
sbb
sbb
xor
nop
mov
movs
push
lds
paddb
mov
jb
sbb
cld
popa
xchg
sub
mov
jp
xchg
push
lods
adc
popf
add
and
push
mov
idiv
jmp
jne
cmp
rcr
pop
sbb
sub
fsub
adc
push
popa
cld
cmp
jne
mov
mov
inc
push
jp
inc
jno
aad
inc
(bad)
jnp
stos
nop
pop
pop
or
adc
jae
clc
in
mov
jo
xor
xchg
lahf
inc
pop
dec
xchg
loopne
scas
jecxz
cmps
enter
mov
inc
js
push
mov
mov
mov
xchg
daa
fistp
rol
sbb
cmp
sub
add
gs
cmp
or
(bad)
es
retf
fld
push
add
pop
movs
cmp
lock
(bad)
adc
inc
mov
leave
adc
outs
arpl
pop
aad
aad
jle
or
jne
mov
lock
mov
sti
ss
mov
lea
adc
adc
adc
push
sbb
int3
jo
aad
inc
or
or
xchg
test
jo
data16
push
sti
nop
aas
dec
call
popa
add
pop
ret
lods
fbld
sbb
fisttp
mov
cmp
xor
or
lods
ror
(bad)
jl
add
xchg
movs
fidiv
addr16
(bad)
(bad)
loope
inc
test
push
shr
add
push
inc
sbb
cmp
lods
and
repnz
and
lock
mov
movs
and
xor
and
push
push
and
pop
cmp
and
loope
sbb
rol
add
adc
pop
dec
mov
inc
and
cmp
xchg
lock
test
cmp
(bad)
jg
mov
mov
add
mov
call
out
push
daa
cmp
add
push
mov
mov
xchg
xchg
dec
mov
push
inc
dec
pop
pop
pop
stos
mov
push
and
icebp
inc
ret
xor
dec
enter
inc
and
nop
cmps
adc
jmp
adc
dec
sub
xor
clc
mov
sbb
sbb
add
pop
(bad)
jno
inc
pusha
and
iret
and
ins
add
pusha
loopne
mov
mov
pop
jnp
inc
sbb
test
pop
icebp
test
mov
sub
add
jl
mov
mov
cwde
fs
mov
adc
das
mov
(bad)
je
inc
loopne
sbb
pop
(bad)
fwait
inc
jno
sbb
xchg
call
es
push
jae
outs
(bad)
sbb
push
or
add
or
aaa
ret
dec
lods
pop
ret
and
sbb
xor
sbb
cmps
movs
sbb
and
jle
cdq
icebp
add
std
icebp
rcl
or
dec
pop
or
mov
and
xor
mul
pop
clc
adc
cmp
jl
icebp
or
or
sbb
inc
lea
nop
mov
cmp
cwde
fcomp
adc
dec
inc
push
push
mov
lds
mov
push
inc
mov
adc
mov
test
out
loope
inc
cwde
pop
cmp
adc
add
push
adc
inc
aas
inc
or
pop
push
dec
aaa
inc
or
ror
icebp
ret
(bad)
mov
add
push
test
out
pop
inc
mov
ret
neg
adc
xchg
sbb
adc
sub
loopne
pop
xchg
ret
or
push
xchg
pop
js
test
jl
sub
outs
sbb
loopne
push
add
pop
cld
je
xor
mov
adc
mov
fmul
pop
lods
xor
stos
mov
or
push
sub
lods
sub
loopne
mov
aas
pop
inc
or
xchg
(bad)
cmp
dec
jne
loope
in
lock
sbb
cwde
sbb
mov
mov
push
outs
and
xor
test
adc
daa
push
dec
test
xor
stos
outs
stos
(bad)
fisttp
(bad)
stos
or
or
xchg
or
dec
add
and
fild
scas
or
and
push
inc
adc
imul
out
mov
or
sbb
add
cmp
mov
push
adc
jmp
or
push
(bad)
xchg
mov
pop
pop
dec
mov
jno
sbb
ds
jo
xor
or
dec
ins
add
xchg
push
cld
push
adc
adc
add
out
pop
lds
and
js
out
sub
xchg
mov
lahf
test
push
push
pop
xor
arpl
pop
rcr
push
or
xchg
or
pop
add
jg
mov
and
fadd
test
push
inc
dec
add
adc
jne
inc
push
es
xor
(bad)
out
push
and
std
and
imul
mov
pop
mov
xchg
data16
inc
out
(bad)
stos
les
push
lahf
popf
pop
pop
sub
rcl
mov
cwde
jmp
xor
sub
sbb
sub
xor
add
jmp
(bad)
sub
setge
es
add
dec
mov
ins
(bad)
or
imul
sub
shl
mov
ds
ss
or
cmp
repz
pop
mov
mov
icebp
clc
cmp
mov
add
mov
sub
imul
cmp
mov
mov
mov
cmc
inc
cmp
inc
neg
sbb
fs
or
mov
add
jge
fsub
enter
push
dec
pop
adc
and
inc
add
xchg
arpl
jno
inc
leave
pop
sub
sbb
xor
xchg
or
dec
(bad)
adc
mov
movs
inc
rcr
push
jb
loopne
push
mov
ins
mov
cmp
jg
mov
xchg
popa
sub
mov
push
or
mov
and
push
ficomp
jno
mov
retf
loopne
rcr
jnp
loope
or
nop
inc
aam
xchg
scas
call
imul
mov
push
ret
pop
push
out
(bad)
lock
clc
sar
clc
pop
ja
lahf
jb
test
iret
dec
repz
push
movhps
jmp
imul
mov
fdivr
pusha
daa
add
jmp
and
mov
dec
out
or
or
pop
(bad)
clc
mov
dec
je
mov
addr16
repnz
push
mov
mov
push
call
int3
mov
lods
call
cmps
std
hlt
or
mov
mov
js
dec
add
dec
or
nop
mov
fs
and
rcl
cmp
add
xor
int
push
pop
xchg
inc
inc
mov
sub
xlat
push
sub
mov
js
dec
mul
jge
sub
xlat
inc
js
mov
add
push
ficom
mov
or
aas
jno
mov
inc
or
daa
adc
adc
icebp
mov
movs
cmp
jmp
or
cmp
adc
test
cmps
ss
in
jbe
xlat
dec
retf
adc
push
push
in
push
fdivr
test
add
adc
sbb
jl
dec
ficom
imul
push
mov
ror
push
jmp
nop
inc
cwde
push
xlat
sbb
lods
pusha
leave
push
pop
inc
adc
adc
add
hlt
mov
cmp
hlt
mov
push
sbb
lods
xor
mov
sub
ds
add
push
cmp
push
push
call
sub
push
xchg
dec
add
retf
popf
adc
push
xor
paddusb
iret
add
arpl
push
pop
aad
psubb
test
push
dec
or
fsin
fistp
sbb
sub
mov
data16
push
xor
xor
mov
cmps
call
push
jno
sbb
pop
adc
ficom
pusha
test
push
(bad)
fisttp
lods
push
fisub
and
cmp
add
jl
push
outs
popa
aam
cs
stc
jne
adc
sub
mov
or
hlt
and
ror
ins
add
out
sub
ja
inc
outs
sub
adc
add
xchg
shl
push
add
in
xchg
int3
jle
push
inc
mov
add
xchg
push
clc
add
inc
adc
aaa
js
or
clc
test
xchg
fcomi
repnz
mov
and
addr16
nop
das
pop
(bad)
add
(bad)
rcl
ret
push
pop
les
or
mov
cwde
mov
add
push
mov
cmp
inc
push
pop
mov
in
repz
sbb
or
inc
nop
or
mov
sub
fstp
xchg
pusha
push
cmp
sub
cmp
or
and
xchg
sub
jle
call
adc
fcom
lds
xlat
mov
or
inc
pusha
inc
dec
aam
(bad)
mov
mov
and
jbe
dec
add
cmp
bnd
ficom
es
loope
jmp
fmul
stos
or
loop
popa
add
pop
pop
push
dec
test
adc
push
out
adc
mov
jne
lea
fs
mov
lock
lock
and
adc
or
xor
jo
sbb
cmp
push
mov
pop
sub
in
add
push
in
jl
cs
mov
cmp
push
icebp
(bad)
mov
daa
std
out
pop
movs
test
jle
je
call
loopne
mov
push
sub
sub
mov
dec
sub
fsubr
jno
add
dec
shl
in
or
lds
mov
lds
lds
pop
and
adc
(bad)
fcomi
or
or
jp
cmp
jge
daa
jmp
xchg
and
add
outs
ja
stos
or
mov
cmp
jge
sub
cmp
clc
lds
push
inc
scas
pushf
cwde
cmp
mov
or
bound
cld
cmp
xchg
inc
dec
pop
sbb
or
or
and
and
or
jnp
(bad)
scas
mov
push
xchg
ror
sbb
repz
inc
loopne
pop
inc
push
mov
pop
xor
push
mov
push
mov
jle
cmp
les
jmp
pop
js
mov
mov
and
xor
xchg
xor
leave
mov
and
adc
jp
in
push
inc
fwait
xor
out
mov
sub
lahf
out
add
call
in
xchg
fbld
add
push
out
cmp
stos
or
and
mov
add
sbb
fcom
sbb
sbb
dec
outs
push
cs
add
enter
dec
xor
xor
(bad)
cmp
adc
pop
dec
or
jg
inc
ret
and
dec
dec
mov
dec
adc
xlat
mov
std
push
mov
rol
dec
jmp
or
push
add
iret
imul
or
adc
mov
aaa
sub
xor
xor
popa
xchg
add
mov
mov
or
dec
add
inc
std
int
bound
add
adc
xlat
dec
in
xor
or
pop
pop
dec
jb
aad
adc
sub
xchg
fiadd
xchg
xor
add
(bad)
sub
add
jmp
add
add
call
ret
int3
lea
inc
movs
in
xor
mov
xor
mov
add
lock
lods
xchg
push
loope
xchg
ins
mov
adc
pop
pop
sbb
sub
cmp
rcr
jno
adc
int
push
and
add
xchg
loope
mov
clc
pop
add
push
mov
sub
cmp
pop
inc
fdivr
mov
add
outs
ins
inc
stos
jo
push
xor
test
pop
addr16
inc
retf
add
xchg
dec
mov
and
les
into
xor
jle
push
and
sub
mov
out
mov
data16
add
sbb
lods
pusha
nop
dec
dec
jb
(bad)
dec
cmp
or
test
push
sub
mov
call
out
popa
mov
imul
sub
xchg
shl
or
mov
xor
jmp
enter
add
test
sub
push
xlat
mov
rol
js
and
push
lock
inc
mov
or
(bad)
push
cdq
mov
mov
mov
enter
mov
inc
out
test
adc
jno
test
test
push
out
dec
mov
and
dec
and
mov
mov
cwde
and
inc
out
mov
xchg
mov
mov
hlt
loope
jo
test
loope
fwait
xchg
(bad)
push
sbb
hlt
mov
cmp
xor
call
fdiv
mov
in
hlt
xchg
rol
in
fadd
add
inc
mov
adc
mov
mov
stos
and
xlat
and
pop
xor
(bad)
sbb
cvtps2pi
fist
or
sbb
jno
adc
mov
push
jp
retf
push
mov
test
sbb
add
ret
test
add
push
push
pop
xchg
adc
or
(bad)
jge
fiadd
ins
add
pushf
jmp
pop
or
call
bound
pop
pop
sbb
sub
pop
sub
xor
aam
loop
mov
addr16
push
iret
popa
cmp
leave
fsubr
or
pop
ss
xor
retf
or
pusha
xor
pop
pop
sub
enter
adc
fwait
or
xor
popa
add
scas
push
cld
add
les
fiadd
das
or
je
out
sbb
add
sbb
or
or
sbb
out
mov
mov
add
sbb
inc
jecxz
and
pop
sub
and
jne
dec
push
or
xchg
pop
jns
push
mov
jb
cmp
ja
or
push
fnstenv
or
inc
jne
(bad)
stos
pop
(bad)
xor
aas
mov
sub
cmps
in
push
dec
push
push
and
fisttp
fcomp
add
lods
clc
or
cmp
or
mov
jmp
pop
jne
icebp
ins
add
sbb
add
xchg
add
jmp
addr16
lods
aas
out
out
ss
push
lock
adc
out
out
out
out
xor
leave
adc
xor
or
pusha
push
out
out
out
stc
int3
fldcw
iret
push
out
out
and
adc
movs
out
out
jl
sub
push
out
out
(bad)
adc
xor
push
mov
cmp
shl
fadd
out
dec
repnz
push
sbb
sub
out
out
ss
es
pop
and
int3
out
out
pop
bound
ss
pop
mov
and
add
add
push
aad
enter
fsubr
add
fadd
sbb
jo
adc
add
jb
add
and
pop
adc
aad
cmp
fmul
jne
add
add
pop
pop
pop
inc
cs
cwde
add
or
and
or
push
call
sbb
mov
std
push
fld
inc
or
sbb
jno
loopne
sahf
pop
addr16
int3
cmp
add
push
add
in
and
mov
pop
push
pop
cmp
scas
mov
add
push
jecxz
imul
bound
mov
fdivr
les
jnp
inc
push
xor
pop
shl
in
daa
loopne
in
push
add
adc
outs
or
add
(bad)
(bad)
mov
shl
lea
and
push
pop
dec
and
or
ret
cmp
xor
inc
pop
outs
inc
rcl
inc
mov
and
(bad)
sub
inc
push
jbe
inc
(bad)
cld
mov
pop
mov
push
sub
jle
xchg
cmc
(bad)
(bad)
call
dec
mov
ret
inc
jmp
fisubr
ss
dec
inc
sbb
test
mov
scas
dec
ret
imul
push
mov
mov
push
push
xchg
pop
dec
xchg
sahf
jbe
ficom
out
or
test
sbb
ins
je
mov
out
in
add
aam
ficomp
and
inc
cmp
jo
mov
les
pushf
xlat
pushf
out
outs
inc
ds
lock
es
xor
jb
icebp
out
mov
ja
inc
mov
sbb
fdiv
pushf
inc
(bad)
mov
nop
dec
or
and
jb
sbb
dec
push
push
pop
or
das
icebp
cmp
aas
add
and
and
jp
mov
inc
sbb
mov
sahf
or
mov
test
inc
cmp
cmp
and
ja
push
add
out
imul
inc
or
bound
loopne
cmp
mov
ret
por
sbb
ins
test
sar
call
mov
outs
xor
push
mov
je
shl
inc
mov
mov
fcom
pop
lock
push
mov
push
ins
scas
in
mov
inc
test
adc
pop
sbb
sub
je
rdmsr
pop
call
add
adc
lods
repnz
mov
dec
loopne
loopne
mov
cmp
cmp
rcl
sbb
add
or
loopne
cmp
push
inc
jmp
jmp
push
add
and
dec
imul
ret
popa
es
inc
popa
mov
movs
jb
fild
add
inc
icebp
fcom
or
sub
and
mov
push
and
cmps
mov
in
adc
mov
test
add
inc
adc
mov
movs
(bad)
movs
sub
(bad)
and
inc
shl
or
add
jbe
scas
mov
and
(bad)
arpl
lea
imul
pop
push
mov
push
jle
dec
das
inc
mov
and
int
mov
test
imul
rcl
pushf
ret
add
jbe
popa
dec
adc
pop
movs
sbb
push
or
mov
std
push
sub
dec
push
arpl
not
loopne
fs
adc
and
retf
xor
push
or
daa
jns
fisub
rcr
test
xchg
in
ud1
fld
sub
add
xor
push
mov
add
adc
push
sbb
pop
xchg
mov
lea
dec
out
xchg
lea
cmp
mov
stc
push
add
gs
xor
dec
push
cmp
jne
jmp
xchg
xor
mov
cmp
jo
push
imul
xor
push
and
add
mov
or
or
add
add
daa
push
(bad)
popf
clc
adc
daa
aaa
and
sbb
dec
inc
imul
enter
fld
mov
leave
or
inc
sub
fwait
adc
nop
inc
popa
push
xchg
mov
dec
or
add
mov
imul
and
mov
outs
dec
loopne
inc
popa
loopne
jp
mov
and
inc
test
sti
push
mov
xor
test
push
sbb
nop
adc
(bad)
cs
push
out
jp
and
mov
and
add
add
cmp
out
loope
fidivr
aas
aaa
(bad)
xchg
xor
mov
pop
(bad)
fadd
dec
test
adc
pop
or
and
xor
sub
mov
add
ret
jbe
in
out
sbb
or
mov
adc
push
movsx
scas
lods
adc
ret
rcr
scas
loope
ret
or
push
mov
or
fiadd
push
adc
loopne
add
(bad)
popa
sub
sbb
or
or
pop
shl
cmps
(bad)
test
mov
outs
je
sbb
cmp
mov
pusha
xor
imul
vmovdqu
out
mov
outs
call
icebp
pop
add
sbb
loope
add
mov
mov
push
mov
adc
clc
rol
fld
adc
inc
sbb
push
push
fwait
pop
dec
movs
push
dec
or
adc
out
adc
jp
in
add
lods
and
add
les
lods
xor
xchg
ss
ja
pop
inc
mov
add
test
or
jo
dec
mov
ins
mov
jmp
mov
jmp
cmp
or
std
call
dec
dec
mov
jmp
mov
jmp
mov
jmp
inc
loopne
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
aaa
or
mov
mov
mov
xchg
test
iret
cld
add
adc
test
inc
or
add
fstp
loop
lock
sub
sti
int
call
pop
sub
lea
cmp
ret
xor
add
mov
in
mov
sbb
mov
cmp
(bad)
les
in
xor
dec
in
push
movs
fidiv
jns
jmp
cmps
push
jnp
pop
add
adc
enter
(bad)
dec
dec
and
push
pop
aas
movs
lahf
mov
in
lea
mov
arpl
aaa
sub
xchg
cmp
sub
or
sub
inc
cld
gs
sub
test
inc
test
add
mov
push
push
sbb
push
mov
cmp
loopne
aad
cmp
sub
adc
cmp
imul
cmps
adc
push
pushf
popa
sbb
cmp
xchg
imul
les
es
dec
jnp
ins
add
int3
fld
jbe
inc
add
pop
ins
mov
sub
add
mov
aas
test
xor
psrlw
enter
sar
sbb
imul
xor
xchg
push
dec
jg
sbb
mov
pushf
das
inc
add
and
cmp
in
nop
pop
(bad)
adc
jb
add
pop
adc
cmp
test
and
adc
lods
push
xor
inc
sub
or
xor
imul
jmp
mov
jmp
int3
add
dec
daa
sbb
aas
jmp
or
xor
sbb
or
mov
daa
push
mov
test
lods
pop
adc
pop
and
div
jo
and
bound
add
rol
outs
mov
out
pop
inc
lea
and
ret
xor
xchg
mov
jb
pop
mov
jbe
inc
xchg
and
ins
arpl
push
push
cmp
pop
push
pop
cli
or
(bad)
loope
jb
push
mov
cmp
ss
sub
add
pshufw
inc
sbb
nop
inc
das
sbb
xchg
lock
dec
inc
daa
jl
ja
or
push
rol
add
out
sar
gs
jb
outs
jb
pop
sbb
push
dec
loope
dec
adc
jae
gs
cs
add
and
jne
mov
inc
add
mov
(bad)
add
adc
and
inc
cwde
inc
mov
inc
and
mov
sbb
inc
cmp
jne
imul
push
jne
inc
xor
clc
pop
add
push
ret
push
dec
jns
dec
sbb
popa
addr16
retf
or
mov
inc
lods
lds
or
jo
mov
iretw
pop
xchg
push
sbb
mov
mov
ss
xchg
inc
add
ret
aaa
cmps
cmps
push
repz
cmp
mov
sub
push
pop
push
mov
cwde
push
outs
add
push
mov
push
push
and
sbb
and
inc
(bad)
mov
xor
inc
push
outs
jne
arpl
inc
pop
icebp
sbb
montmul
cmps
inc
inc
fmul
pop
add
add
push
inc
adc
adc
adc
inc
in
add
pop
push
or
loopne
and
pop
mov
mov
mov
pop
adc
jl
push
inc
pop
nop
inc
addr16
push
mov
addr16
mov
mov
pop
call
imul
jo
mov
jp
test
adc
add
outs
xchg
aas
add
fidivr
cs
das
out
sbb
push
push
push
jne
fnstsw
jb
ins
push
mov
adc
aad
(bad)
pop
scas
or
and
sar
add
and
lock
adc
jl
sbb
mov
and
jmp
add
test
fucomip
out
hlt
mov
mov
inc
xor
inc
sub
xlat
out
or
aaa
xor
pusha
xchg
fidivr
pop
add
fs
jle
or
adc
xchg
fnsave
sbb
jne
mov
in
and
rol
add
pop
adc
sub
cmp
mov
bound
stc
add
push
sub
sti
sub
adc
mov
inc
and
xor
add
icebp
sbb
loop
add
xchg
outs
sub
or
or
sbb
(bad)
pop
shl
sbb
adc
adc
or
mov
rol
movs
stos
or
jb
(bad)
daa
jno
(bad)
ffreep
adc
sbb
pop
cld
movs
push
test
fisubr
cmp
jl
inc
pavgb
jle
jp
and
and
pop
les
adc
cwde
pop
adc
ins
aaa
aaa
lods
dec
rcl
mov
push
or
inc
lock
outs
sbb
nop
dec
arpl
ins
xchg
scas
mov
sbb
pop
pushf
dec
sti
inc
arpl
int
sbb
call
inc
fisubr
push
lahf
jmp
rcl
call
sub
cmp
in
cmp
sbb
inc
call
mov
xor
scas
jmp
cmp
fcmove
outs
xor
lahf
dec
add
call
pop
rol
jo
xchg
add
or
inc
outs
nop/reserved
mov
push
push
add
in
add
fadd
jns
aaa
push
call
pushf
test
dec
sbb
pop
and
int3
dec
sahf
repnz
scas
xchg
pop
dec
inc
or
cmp
icebp
rcr
jl
adc
push
fcom
mov
push
pop
adc
push
xor
push
test
add
add
push
mov
addr16
fbstp
cmp
xor
popa
push
push
inc
into
lods
mov
push
push
and
mov
pop
ins
fdiv
retf
or
push
cdq
movs
cmp
jl
pop
xor
push
outs
pop
adc
or
dec
cs
jmp
inc
sub
popa
adc
push
pusha
or
inc
je
push
arpl
je
inc
les
dec
aaa
imul
pop
or
inc
scas
push
jp
stos
add
data16
stos
jbe
shl
or
fwait
jae
push
or
jae
pop
pop
jmp
jne
out
imul
gs
je
mov
sbb
fs
xchg
sub
ror
scas
xchg
mov
stc
push
push
outs
cmps
dec
dec
xor
sub
cdq
sbb
inc
ins
ror
mov
push
adc
rcr
and
sbb
sbb
cmp
xchg
cmp
push
stos
out
mov
jb
sub
shl
pusha
cmc
fsubr
aas
push
pop
inc
cmp
sbb
adc
add
sbb
fsub
inc
lods
aaa
ins
mov
enter
scas
push
mov
dec
fstp
inc
mov
push
jmp
outs
cmp
mov
lock
add
(bad)
cld
(bad)
or
repnz
lahf
jo
rcl
adc
sbb
loopne
test
popa
fs
scas
push
(bad)
lahf
dec
mov
js
sti
cmp
inc
pop
jge
inc
int3
mov
ins
push
or
add
or
test
inc
add
ror
shl
test
jmp
ficomp
mov
lea
fnsave
xor
shl
imul
and
cmp
jne
mov
mov
and
and
clc
or
clc
or
sbb
pop
std
movs
mov
fcomip
in
jmp
add
cmp
or
cmp
sub
and
clc
loopne
xchg
fsub
or
adc
xchg
add
sahf
test
pop
mov
inc
hlt
mov
popa
popf
repz
mov
add
adc
mov
mov
imul
jnp
sub
out
push
into
mov
jne
shl
sbb
add
jp
cmp
hlt
sub
mov
(bad)
(bad)
jg
or
mov
adc
cmp
xor
and
arpl
adc
pop
cmp
outs
sub
add
xor
mov
push
test
mov
pop
mov
ret
outs
call
add
sbb
loopne
cld
cmp
cs
mov
sbb
inc
dec
sar
xor
test
jne
mov
ret
daa
call
cli
pop
jp
or
mov
fcomp
ret
addr16
jmp
pop
push
movs
iret
sbb
in
lods
push
loopne
mov
pop
or
pop
jmp
lahf
lds
cld
inc
add
inc
dec
jne
ins
push
iret
push
or
jne
ror
ins
mov
push
aam
jne
or
or
jl
push
or
and
test
fwait
into
bound
leave
popa
push
pop
cmp
adc
lock
sbb
sbb
and
fnstsw
pusha
daa
fwait
cmp
cld
(bad)
outs
inc
inc
ins
jne
push
inc
jbe
bound
loope
mov
sub
cli
or
sub
jmp
mov
jmp
inc
inc
mov
outs
pop
dec
add
lea
pop
aas
loopne
adc
enter
dec
test
push
xor
sahf
xchg
or
mov
and
dec
js
push
dec
add
inc
mov
repz
add
jnp
mov
push
aam
or
or
and
ror
dec
sub
adc
stos
xchg
xchg
out
fisttp
xor
pop
dec
sub
into
(bad)
cmps
sbb
(bad)
push
and
sbb
gs
xor
pop
call
pusha
jle
inc
or
adc
and
jp
jbe
movlps
test
push
mov
adc
push
push
sahf
mul
and
pop
outs
push
jp
test
sahf
scas
push
push
das
inc
idiv
dec
pop
retf
push
sub
jns
loopne
test
rol
mov
jmp
adc
cmp
inc
add
lahf
xchg
pop
adc
push
mov
sub
(bad)
pop
xlat
adc
cmp
jmp
in
or
out
mov
adc
sar
sbb
xor
add
iret
push
(bad)
cmp
repz
out
icebp
test
test
push
inc
sti
pop
pop
pop
push
iret
repz
adc
xor
paddd
scas
mov
lods
sbb
jbe
mov
stc
fst
jmp
fisttp
ins
fild
adc
cwde
cmp
jmp
movsx
addr16
ss
adc
jne
add
mov
add
movs
jmp
adc
jmp
adc
mov
fcom
add
cmp
adc
call
imul
adc
pushf
popf
pushf
fisub
jb
and
or
cdq
sbb
jnp
cmc
jne
test
adc
pop
icebp
dec
push
inc
mov
jmp
xor
or
mov
jnp
leave
outs
push
inc
inc
or
or
lds
or
xchg
mov
jnp
adc
out
fstp
push
mov
stc
add
sbb
push
mov
mov
retf
jne
mov
clc
(bad)
(bad)
jnp
jl
push
adc
dec
dec
inc
dec
inc
pop
inc
dec
dec
push
inc
push
push
push
inc
inc
mov
lock
pushf
add
adc
inc
pop
pop
xor
jae
dec
popa
ins
ds
ins
loope
arpl
sahf
(bad)
dec
push
push
loope
ins
dec
push
sub
push
ins
jnp
(bad)
inc
inc
mov
ret
jnp
or
cs
pop
add
ins
ds
sub
inc
jb
inc
sub
outs
inc
mov
daa
adc
sahf
cli
test
dec
adc
ds
std
inc
(bad)
call
push
push
(bad)
outs
retf
pop
pop
sbb
mov
test
dec
hlt
inc
imul
outs
addr16
sbb
js
in
(bad)
jge
inc
mov
test
sub
push
sti
les
adc
add
loop
ins
mov
pop
push
push
sub
sub
js
jg
leave
imul
add
mov
add
push
clc
inc
jle
pushf
inc
test
in
pop
adc
jae
repz
(bad)
jg
mov
push
in
pop
xchg
ret
push
push
push
push
add
sbb
jmp
xchg
cmps
push
pop
cmp
stos
add
dec
loopne
loope
inc
push
aad
dec
pop
inc
mov
shl
pop
cmc
cmp
adc
push
dec
shr
cmp
fcmovu
out
xchg
mov
sbb
mov
dec
xlat
sar
or
cmp
dec
je
cs
cmp
inc
xchg
sbb
aas
fcmovnb
add
xchg
pushf
pop
(bad)
pop
pop
sahf
(bad)
jns
femms
lods
data16
and
ins
fld
mov
push
or
push
or
adc
push
int3
xor
sbb
pop
push
pop
ret
inc
test
out
cmps
mov
les
push
enter
fucomi
mov
jl
inc
push
mov
jle
loop
jmp
push
dec
xor
clc
retf
sbb
inc
mov
pop
lds
rol
out
push
xor
ficom
add
outs
inc
adc
shl
cwde
mov
add
add
or
add
jno
icebp
(bad)
cmp
pop
lods
pop
mov
xchg
mov
or
sahf
add
push
push
jb
cmp
and
jb
fisub
xlat
sbb
in
dec
or
bound
ss
mov
ins
or
jae
add
cmp
std
out
cwde
daa
pop
fwait
inc
xor
mov
ins
or
dec
dec
jno
gs
jmp
xchg
not
int
or
bound
popa
fisub
loopne
hlt
xor
das
sub
(bad)
out
mov
push
pusha
pop
jle
lods
add
(bad)
mov
add
jg
js
imul
pop
mov
dec
jg
inc
and
loop
adc
push
jg
inc
xor
inc
imul
test
push
enter
add
xchg
clc
dec
mov
push
inc
push
push
mov
mov
mov
add
rol
xor
adc
sbb
mov
je
and
gs
shl
enter
push
adc
(bad)
es
or
jb
adc
cwde
push
push
sbb
mov
pushf
cmp
sbb
inc
fstp
arpl
outs
jne
fs
add
sub
test
out
xchg
outs
sahf
xchg
pop
mov
jbe
mov
adc
loopne
(bad)
adc
ss
push
xchg
inc
xlat
icebp
and
es
add
xor
mov
inc
xchg
dec
je
add
neg
sbb
in
outs
adc
inc
sbb
imul
xchg
js
add
cmp
mov
fwait
int3
mov
inc
sar
leave
adc
or
es
cwde
mov
pop
and
test
pop
and
enter
mov
cwde
sbb
pop
sbb
in
add
sbb
cmp
ins
dec
fisubr
inc
sbb
push
cmp
or
push
test
and
mov
cmps
mov
sbb
sbb
mov
mov
es
cmp
mov
(bad)
mov
pusha
inc
and
mov
mov
sub
or
and
aad
sub
dec
xchg
imul
and
mov
mov
and
shr
dec
sub
add
stos
mov
dec
cmp
xchg
fdivr
add
out
daa
xchg
sbb
enter
popa
xor
sub
mov
dec
adc
mov
sub
sub
push
pop
mov
push
out
push
or
and
and
das
push
xor
jnp
leave
xor
pusha
les
xor
pushf
and
inc
and
sbb
fnsave
add
ss
sbb
push
add
cmps
xchg
cmp
leave
lods
or
add
fiadd
dec
mov
outs
xchg
mov
pop
mov
mov
ror
popa
inc
ins
mov
hlt
mov
imul
shl
sbb
mov
pop
mov
aaa
mov
enter
mov
adc
mov
add
pop
xor
push
rol
push
or
lock
test
push
call
jb
jb
push
inc
loopne
stc
ds
add
xchg
inc
xor
prefetcht2
or
push
loopne
sub
outs
add
xor
rcr
and
xchg
popa
(bad)
ins
sbb
adc
shr
in
push
jb
xchg
scas
pop
aad
or
sbb
xor
pop
adc
and
jae
adc
shl
adc
inc
pop
je
dec
xor
jge
xor
pop
in
or
add
or
or
outs
xor
or
ja
sub
mov
push
dec
pop
push
popa
loop
mov
rcr
adc
je
scas
jae
out
and
mov
and
push
or
and
call
adc
ja
pop
mov
pushf
imul
mov
movs
or
lds
or
adc
outs
mov
daa
and
mov
or
pop
aas
and
or
clc
add
fild
test
jp
jg
mov
or
cmp
jo
jo
outs
mov
push
xor
inc
inc
add
(bad)
push
ret
pop
ss
xor
das
xchg
aad
and
or
adc
sbb
or
mov
inc
add
ret
mov
mov
adc
cmp
pop
ss
pop
js
ds
xchg
adc
int
icebp
and
out
mov
xchg
dec
xchg
add
xchg
cwde
cmp
adc
daa
mov
sbb
cwde
or
nop
imul
jo
or
sbb
scas
je
add
test
imul
or
or
test
and
inc
adc
test
loope
push
adc
jne
stos
push
jae
ins
push
pop
adc
or
(bad)
shl
lock
sbb
jl
(bad)
push
jne
cmp
lods
adc
push
lock
add
jmp
movzx
or
xor
shl
or
hlt
add
outs
xor
loop
mov
cmp
xchg
pop
or
mov
ja
repz
and
inc
jbe
sbb
popa
sbb
mov
sub
fisubr
adc
int
xchg
ret
adc
or
adc
adc
add
mov
sbb
or
imul
aaa
adc
jne
cwde
fisubr
or
outs
jmp
add
test
add
and
inc
movs
and
and
ja
adc
jo
int3
sub
mov
cmp
xor
add
sbb
daa
bound
dec
lock
loope
xchg
loopne
adc
jmp
adc
xchg
jg
xor
cmp
inc
jle
pop
sub
inc
shr
xchg
mov
enter
je
int
push
jecxz
test
mov
leave
and
dec
sbb
fadd
add
fild
lahf
adc
mov
adc
add
mov
or
test
or
fcomi
sbb
ret
shr
sbb
mov
xchg
ret
les
retf
xchg
or
sbb
add
dec
(bad)
out
rcr
ficom
xlat
sub
vmwrite
arpl
add
mov
cmp
and
(bad)
or
daa
xchg
xchg
adc
or
xchg
cmp
fidiv
aaa
mov
or
push
leave
clc
xchg
inc
test
outs
inc
sbb
add
and
add
and
inc
mov
mov
js
ret
xor
aad
adc
mov
out
mov
add
scas
mov
xchg
adc
add
adc
adc
addr16
inc
pusha
lds
dec
mov
fimul
ret
or
sbb
es
loopne
add
jb
adc
sbb
jno
inc
pusha
sub
jno
inc
cwde
mov
dec
cmp
into
pop
cmp
sub
aas
and
or
popf
sar
ds
add
push
sbb
pop
mov
inc
out
sbb
ja
imul
push
dec
mov
dec
mov
hlt
inc
dec
jne
sub
jne
adc
pop
pop
mov
push
pop
mov
scas
stos
xchg
push
enter
lods
pop
or
or
clc
cld
call
int3
and
cmp
jg
cmp
jg
mov
sub
je
sub
and
mov
sub
mov
adc
fdivrp
fstp
fwait
jmp
das
fld
into
inc
mov
cmp
push
(bad)
ins
cdq
or
scas
stc
ret
lock
or
lds
adc
in
pop
add
cmp
or
ds
mov
pop
dec
mov
dec
es
in
aam
pushf
int
arpl
fcomp
pop
out
dec
and
jecxz
mov
inc
cmps
cmp
add
cmp
jmp
in
mov
jmp
retf
pmaddwd
or
or
xchg
or
inc
fsub
mov
jo
or
inc
movs
sahf
sub
sub
inc
mov
shl
rcr
cwde
pop
or
pop
xchg
sbb
ror
or
add
xchg
mov
sub
test
inc
cmp
inc
push
(bad)
sub
inc
and
(bad)
out
or
popa
push
push
sub
sub
push
sub
movups
add
xor
adc
test
sbb
sub
add
daa
pop
lahf
dec
or
lahf
xchg
jbe
sbb
dec
cmp
fstp
fsub
xor
mov
(bad)
aam
lods
push
loope
and
test
gs
das
mov
sti
mov
mov
jg
add
sbb
pusha
cmc
cmp
cmp
outs
adc
adc
inc
inc
stos
mul
inc
inc
dec
pusha
into
mov
inc
test
shr
clc
or
add
cmp
mov
ret
sar
fnstsw
or
xor
dec
movzx
add
test
ja
int3
add
(bad)
pop
pop
pop
xchg
adc
jo
push
outs
jb
enter
add
xchg
add
shl
movs
and
mov
les
mov
(bad)
ficom
out
jns
xchg
xor
xchg
div
push
inc
push
sub
icebp
retf
fadd
and
jg
inc
adc
add
push
inc
adc
cmps
cmc
pop
stos
es
jb
sbb
call
push
inc
lods
push
push
sbb
push
outs
add
adc
fstp
inc
rcl
push
add
jo
mov
movzx
push
(bad)
and
cld
or
pusha
adc
sub
enter
add
enter
rcl
sysexit
push
das
pusha
mov
int
clc
xchg
test
jbe
in
mov
pop
mov
aam
fsubp
inc
cdq
push
xchg
adc
jle
add
pushf
fadd
cmps
repnz
dec
add
or
inc
ins
push
mov
cmp
test
adc
add
pop
arpl
push
or
mov
std
out
add
sbb
jne
adc
xchg
or
and
test
push
imul
sub
(bad)
test
fdivrp
add
mov
jg
mov
push
inc
xor
cmp
fidiv
mov
enter
cmp
or
dec
aad
add
xor
push
add
jbe
xchg
pop
iret
inc
push
push
clc
cmp
ja
ror
pushf
xchg
test
or
cmp
ds
(bad)
mov
outs
jb
pop
xchg
cld
mov
pop
rcl
mov
jns
pop
vpsrlvw
push
je
test
sub
mov
and
push
push
mov
fisubr
jg
(bad)
dec
loopne
add
lds
jno
inc
mov
movs
leave
aam
repz
add
and
std
mov
pop
call
xlat
popf
rol
jg
test
dec
outs
adc
push
imul
call
mov
pop
dec
popa
outs
cld
jmp
ss
fisttp
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
jp
xchg
add
jl
out
jae
sbb
mov
mov
dec
add
test
(bad)
xlat
pop
xor
sub
ins
mov
adc
call
push
pusha
mov
jmp
and
pop
and
xchg
(bad)
mov
or
push
xchg
adc
in
test
xchg
mov
in
ins
test
dec
movd
add
inc
shl
enter
fcomp
aam
in
arpl
jns
and
dec
aam
repz
icebp
int3
inc
jge
push
push
sub
repz
xor
mov
iret
repz
lahf
cmps
scas
mov
cmp
xrelease
outs
ja
repz
jg
out
stc
fld
xchg
jle
mov
and
sub
aaa
mov
aaa
mov
pop
ss
es
push
and
(bad)
push
mov
popaw
xchg
test
jle
pop
nop
test
into
fwait
jge
adc
xor
adc
dec
inc
pop
xor
dec
mov
push
pop
and
imul
pusha
xchg
dec
mov
test
or
dec
imul
sub
xor
cmp
sahf
xchg
inc
cmp
adc
xor
cmp
jo
adc
push
jnp
popa
fs
adc
or
sbb
dec
add
sbb
sub
inc
jg
sub
daa
shl
test
icebp
sbb
or
ja
add
push
in
or
mov
pop
sti
pop
inc
xchg
jb
jns
push
pop
xor
dec
push
mov
gs
clc
cwde
shl
pop
jnp
pop
or
lods
pop
outs
inc
dec
and
push
add
add
push
mov
ins
sbb
push
pop
jmp
dec
leave
dec
gs
xchg
or
inc
sub
fild
pop
add
xchg
mov
dec
sbb
mov
scas
xor
xchg
mov
ret
and
mov
mov
push
push
mov
and
outs
jo
arpl
mov
fwait
add
ret
xor
cmp
and
mov
dec
dec
push
in
(bad)
jp
inc
add
loopne
mov
push
bound
adc
imul
push
or
mov
sbb
sbb
add
nop
ins
outs
popa
jnp
dec
and
add
jle
lock
add
push
push
aam
jae
inc
jae
test
pop
jno
lds
js
push
inc
xchg
mov
dec
sar
es
dec
mov
call
arpl
inc
and
pop
push
mov
pop
add
push
mov
lock
xor
aam
cld
inc
gs
xchg
jge
add
clc
dec
fld
sar
add
loopne
pop
and
cwde
and
dec
jno
add
sahf
jmp
cli
cmp
ss
or
adc
pop
das
mov
push
push
ds
jae
sub
push
scas
test
dec
ret
pop
fiadd
iret
test
xor
or
dec
push
bound
add
jge
stos
push
dec
fld
ret
fist
or
jns
scas
das
mov
test
mov
xor
imul
ror
int3
xchg
mov
xor
iret
add
mov
es
mov
pop
cdq
icebp
dec
xor
pop
cmc
dec
xchg
pop
out
xchg
test
and
adc
add
stos
xchg
xor
cmc
ret
mov
push
cmp
fimul
sbb
fadd
xor
mov
or
pop
adc
mov
push
ja
xchg
inc
mov
lock
pop
cmp
or
or
pop
mov
add
popf
mov
mov
pop
nop
push
mov
adc
jge
sbb
adc
loope
xchg
test
mov
lahf
push
push
xor
int3
jmp
mov
push
cmp
data16
adc
cmp
inc
or
dec
jne
cmp
jnp
jne
or
pushf
jbe
xor
add
lds
pop
std
adc
sub
out
adc
cmp
jnp
mov
iret
movs
adc
inc
ja
popa
mov
or
jg
movs
adc
push
ins
mov
icebp
jo
inc
popa
push
and
enter
mov
pop
adc
xor
loope
mov
sub
out
inc
mov
xor
test
mov
xlat
shl
icebp
lea
dec
jne
xor
cld
push
add
loopne
push
dec
fucomi
cmp
or
add
or
mov
adc
push
sbb
xchg
inc
adc
cmp
add
mov
dec
sub
neg
addr16
push
clc
daa
call
xlat
pop
jb
jb
push
jmp
adc
(bad)
dec
xchg
pop
ret
push
out
inc
mov
sbb
imul
or
retf
hlt
fld
loopne
pop
mov
jmp
sub
pop
sub
or
and
paddd
and
scas
push
adc
(bad)
cmp
clc
div
(bad)
rcl
or
dec
push
fst
cdq
jg
lea
add
fcomp
fistp
pop
test
mov
pushf
mov
inc
loopne
ret
lea
sub
cmp
cmp
mov
mov
in
push
push
lea
lock
xchg
retf
ror
cmp
or
fistp
ins
fdivr
dec
fdiv
push
mov
xor
jno
aam
fmul
call
aam
mov
mov
jge
push
jl
call
mov
shl
cmp
inc
add
push
enter
mov
adc
jbe
mov
sub
jns
movs
imul
and
in
xchg
or
cmp
sub
lods
mov
mov
lea
in
cmp
int
sub
retf
adc
js
mov
cmp
in
dec
jne
mov
adc
jns
jne
mov
inc
lahf
adc
inc
inc
or
cmp
call
iret
shl
pop
pushf
addr16
or
mov
(bad)
fstp
dec
sbb
shl
xor
push
cmp
loopne
push
cdq
out
jl
call
scas
pop
call
js
xor
mov
xchg
adc
or
xchg
rol
mov
cmp
add
nop
cmp
jae
pop
sar
lea
test
gs
ror
ja
les
int3
fmul
sbb
je
mov
xchg
sbb
ss
dec
ret
call
or
mov
push
mov
sbb
neg
jae
add
(bad)
(bad)
mov
jl
fmul
mov
mov
mov
ja
adc
in
jne
ins
mov
imul
mov
mov
or
add
pop
cmp
pusha
jl
add
mov
je
ror
push
jle
(bad)
out
test
add
popa
add
xor
mov
jo
outs
lock
inc
mov
lahf
push
sub
xor
das
movs
je
fdiv
in
int3
sbb
push
pop
shr
sbb
lods
sbb
and
lods
add
into
add
popf
or
aaa
xchg
xor
dec
dec
cs
iret
(bad)
(bad)
jnp
jmp
pop
popf
mov
push
rcl
nop
fist
inc
(bad)
(bad)
or
xchg
fucomi
cmps
enter
fmul
lock
push
mov
cli
dec
inc
dec
hlt
push
sub
stos
sar
ret
sbb
cwde
dec
inc
inc
cli
add
jb
inc
xchg
aam
adc
dec
push
hlt
cmp
push
cmp
or
inc
xchg
(bad)
rcl
dec
fdiv
ret
add
or
mov
mov
and
ins
add
or
std
xchg
dec
dec
inc
mov
and
dec
push
mov
retf
sbb
or
sbb
pop
xchg
(bad)
(bad)
or
stos
jno
stos
test
stos
lahf
jmp
or
hlt
mov
xchg
repz
dec
test
out
outs
and
fistp
test
mov
inc
pop
and
sub
cmp
sbb
push
mov
fwait
pop
xchg
inc
add
sub
popa
aas
inc
or
(bad)
repnz
pop
pop
inc
rol
(bad)
fdiv
sbb
or
(bad)
je
push
imul
(bad)
dec
je
or
shl
sub
clts
sbb
jle
jmp
sbb
das
dec
and
jp
jmp
add
in
sbb
cld
aaa
test
push
or
loopne
pop
adc
ret
cmc
add
pop
mov
mov
add
cmp
mov
jl
sub
loopne
test
cmp
cmp
repz
and
outs
loopne
mov
adc
add
mov
ret
inc
xlat
cld
aaa
mov
out
loopne
add
in
xor
add
loop
ins
je
or
jno
arpl
cld
inc
fsubr
dec
jne
or
in
test
aaa
push
xchg
or
cdq
dec
sahf
adc
sar
in
cmps
xchg
and
pushf
sub
xchg
push
or
test
loop
mov
sub
fs
dec
pop
shr
jne
call
call
shl
lock
xchg
jns
sbb
dec
pop
retf
std
in
and
int
inc
std
mov
push
xchg
mov
mov
or
loopne
jns
inc
fstp
in
lods
cmps
fs
inc
ret
xor
test
jb
xchg
mov
mov
add
mov
xchg
rcl
lock
jbe
or
jbe
mov
inc
xchg
ds
ins
inc
in
adc
jmp
cwde
mov
sub
adc
add
and
jmp
js
mov
jne
daa
mov
pushf
xchg
add
ret
pop
pop
dec
sub
gs
nop
mov
pop
dec
push
in
lods
cdq
or
dec
rol
shr
movs
cdq
call
ret
(bad)
aas
cs
dec
xchg
test
xchg
xchg
sbb
popa
sar
rol
adc
dec
pop
mov
cmp
push
jmp
cmps
rol
inc
stos
or
(bad)
jp
sub
call
adc
push
jg
icebp
add
cmp
jl
bound
aas
shl
pop
cmp
int3
rol
(bad)
jmp
sub
and
pop
sub
adc
adc
sahf
(bad)
cmp
adc
cmps
outs
popf
movs
pop
add
fsub
pop
fwait
dec
inc
jns
and
sub
mov
mov
es
sahf
push
adc
hlt
jnp
iret
ss
daa
popf
inc
je
in
sub
inc
xchg
cmpxchg
dec
lahf
sub
push
push
clc
aam
jl
xchg
aam
sar
es
inc
inc
divps
leave
add
inc
mov
xor
out
mov
mov
test
dec
push
mov
and
push
add
scas
add
or
inc
inc
je
xor
cmp
cmp
or
popa
add
pop
inc
add
and
mov
cld
out
fsub
push
gs
inc
dec
sub
inc
push
gs
jo
test
add
jne
shl
push
sbb
cld
ins
adc
fsubr
daa
pop
mov
dec
sahf
adc
in
pusha
mov
gs
mov
arpl
dec
inc
inc
fimul
dec
arpl
fiadd
in
push
pop
dec
mov
push
popf
xor
or
mov
dec
scas
(bad)
retf
sahf
pop
cld
call
lock
or
out
inc
push
xchg
push
pop
push
jo
xlat
aam
ret
add
ins
sbb
add
pop
xchg
lds
and
fidivr
push
sahf
loope
ret
and
pop
outs
loope
sbb
dec
pop
inc
js
cmp
(bad)
jne
adc
cmp
xor
ror
and
dec
(bad)
mov
ror
mov
adc
dec
jb
add
sub
add
xchg
mov
pop
and
push
push
jno
sbb
add
call
pop
call
pusha
add
icebp
in
(bad)
cmp
(bad)
mov
xor
jno
mov
js
push
mov
pop
bound
call
or
mov
xor
add
or
and
cmp
mov
xchg
ret
push
lods
mov
(bad)
pop
mov
mov
pop
sbb
dec
push
adc
mov
xor
xor
pop
cmp
lods
jno
or
pop
push
test
or
jecxz
daa
dec
jo
mov
pop
adc
outs
mov
xchg
add
and
cmps
imul
es
and
(bad)
dec
outs
inc
push
sbb
outs
ins
pop
nop
cmp
mov
fild
or
leave
adc
cwde
sbb
mov
imul
jae
lea
imul
mov
cmp
adc
fst
push
push
out
jnp
lods
and
and
sbb
and
in
cmp
or
ret
pop
sbb
jns
data16
push
sbb
or
dec
or
loopne
jb
adc
lods
outs
mov
pop
fs
adc
push
mov
mov
add
cmp
inc
pop
xchg
or
push
shr
outs
je
mov
mov
dec
push
movs
(bad)
xor
test
imul
jbe
adc
add
rcl
dec
jnp
push
jl
jae
mov
add
popa
inc
lock
fld
in
ja
jae
push
pop
lock
aad
push
or
or
ss
adc
arpl
pop
data16
std
jge
repnz
dec
mov
repnz
push
ror
push
cdq
movs
jae
jae
(bad)
mov
or
jo
popa
cs
adc
or
add
inc
popa
add
inc
outs
or
cs
jg
popf
loopne
mov
xor
out
ja
dec
push
dec
and
out
and
xchg
ja
cmp
leave
mov
in
sti
js
mov
dec
movs
call
xchg
inc
and
loop
push
adc
sbb
retf
pop
movs
sbb
sbb
(bad)
push
sbb
push
add
push
sub
push
loopne
sub
movs
add
ja
fistp
dec
cmps
ret
sahf
push
push
shr
push
and
inc
ds
inc
pop
and
mov
loop
mov
fiadd
clc
push
in
dec
neg
adc
es
adc
add
inc
add
fdivr
rcl
out
test
sbb
mov
das
push
jp
mov
in
jle
inc
and
or
pop
(bad)
in
nop
add
add
lea
sbb
inc
sbb
pusha
jle
pop
sbb
dec
cmps
les
dec
pop
test
sahf
fbld
pusha
mov
jne
lods
ret
lds
pop
in
xchg
sub
daa
mov
pop
push
sub
xchg
dec
ss
sub
add
jle
lock
add
cmps
dec
jae
add
sub
imul
mov
mov
mov
shl
loope
fucomi
inc
test
mov
sub
mov
dec
lods
xlat
fidiv
sbb
nop
sahf
xlat
cld
push
push
lahf
out
jo
pop
movs
and
xor
sahf
imul
or
or
adc
pop
test
test
cmp
test
aam
cmovbe
sbb
cs
fadd
sub
call
aam
popa
shl
call
inc
cmp
push
imul
imul
jo
or
in
jne
inc
fisttp
popa
fs
popf
shr
dec
mov
mov
push
sbb
fwait
mov
push
mov
ja
push
adc
test
inc
push
enter
fnstenv
ss
arpl
pop
inc
add
dec
pop
adc
outs
arpl
sbb
leave
cmp
pop
push
das
sub
mov
and
add
adc
test
push
lock
test
je
stos
fistp
dec
daa
test
ret
pop
add
mov
push
inc
retf
pusha
lods
add
inc
sbb
in
hlt
pop
stos
push
dec
(bad)
add
and
jae
outs
jne
xchg
rcl
je
pop
add
loopne
push
inc
add
enter
add
gs
inc
and
jbe
dec
add
sub
dec
and
dec
sbb
mov
pop
arpl
stc
add
mov
add
gs
pop
fwait
popf
sub
push
cmp
js
lods
pop
cdq
lods
sbb
fsub
dec
pop
lods
nop
sbb
xchg
adc
addr16
lods
xchg
pop
sbb
push
sub
scas
out
imul
ins
adc
ror
add
and
nop
dec
imul
sbb
mov
out
push
stos
mov
push
sbb
dec
add
mov
popa
loop
push
stos
push
repnz
mov
lds
add
add
xchg
pop
nop
jmp
loope
ins
inc
xor
scas
es
aad
(bad)
out
pop
aad
inc
push
mov
fsubr
push
pcmpgtb
push
ds
mov
push
ret
neg
mov
pop
(bad)
push
ds
inc
jne
fs
sbb
inc
cmps
jae
adc
stc
push
cmp
add
add
pop
or
adc
addr16
or
bound
xor
sub
mov
clc
add
arpl
lea
sbb
lock
jne
test
jle
pop
fisub
gs
cli
outs
test
inc
jne
out
(bad)
fs
pop
push
int3
jle
sub
das
icebp
add
test
call
pop
push
xor
std
js
push
xchg
sub
dec
add
arpl
inc
retf
mov
rcpps
cs
imul
repz
mov
or
fld
push
lahf
mov
or
xor
jne
test
mov
out
mov
or
push
pusha
and
mov
js
arpl
push
dec
in
push
mov
call
stos
inc
adc
adc
out
(bad)
in
(bad)
in
(bad)
jmp
(bad)
call
jmp
out
in
in
jecxz
loop
loope
loopne
mov
repz
jle
push
enter
xor
fsubp
jns
push
je
jmp
out
ja
cmps
lock
out
push
push
fsubr
or
xchg
(bad)
out
dec
movs
mov
dec
(bad)
mov
adc
aad
dec
fnstsw
push
gs
sbb
push
scas
cs
lods
rol
dec
or
and
jns
pop
test
jge
lods
adc
sub
enter
jge
(bad)
out
enter
adc
enter
out
adc
xor
jns
enter
(bad)
mov
pop
xlat
enter
add
inc
sub
les
add
pop
or
dec
adc
push
fsubr
sbb
fidiv
dec
mov
mov
add
enter
sbb
add
mov
rol
sbb
adc
jo
stos
sti
add
cmp
push
add
sbb
rdmsr
and
xlat
cmp
or
stos
fs
inc
sub
imul
jmp
pop
pop
sub
aad
push
adc
push
jnp
into
xor
or
jo
rcl
add
sbb
(bad)
js
or
add
sbb
inc
or
jmp
mov
je
or
or
inc
adc
and
cwde
push
or
mov
mov
adc
push
pusha
push
and
(bad)
fisubr
jo
mov
or
and
test
add
push
push
ds
add
imul
cmp
je
ins
popf
mov
jb
or
nop
(bad)
sbb
ror
and
sbb
push
outs
(bad)
sbb
shl
enter
ins
cmps
fadd
fwait
xor
push
dec
movs
fucomp
ficom
and
dec
xchg
in
js
es
popa
adc
adc
mov
aam
imul
stc
jnp
inc
adc
sub
xchg
add
sbb
inc
xor
add
bound
add
jo
adc
push
sub
in
pop
adc
fiadd
xor
xor
cli
pop
sar
sbb
mov
jo
xchg
jge
popa
fs
push
adc
inc
lock
cli
ins
imul
das
cmp
test
fnstcw
call
pop
fs
dec
add
jo
push
xchg
or
sbb
or
lods
add
jecxz
adc
jb
add
rcl
adc
sar
jae
rcr
neg
call
add
dec
fstp
lahf
(bad)
jg
pop
mov
scas
mov
stc
mov
ror
movs
inc
adc
fsub
pop
add
add
int
daa
ds
sub
add
or
cmp
add
scas
sbb
lods
jo
push
shl
jmp
adc
jbe
add
call
add
inc
test
xchg
aaa
pop
scas
es
sti
xor
xor
rol
stc
movs
adc
outs
sub
jp
mov
cmp
add
mov
pop
clc
cmps
into
add
add
xor
xor
shl
sti
push
in
std
add
enter
dec
add
add
pusha
bound
add
mov
hlt
inc
add
or
test
neg
mov
xchg
sar
fnstenv
inc
mov
das
test
and
push
jo
out
dec
repnz
dec
cmp
out
call
jbe
es
push
mov
call
push
popa
jo
mov
mov
add
retf
add
add
mov
pop
or
jl
add
sub
add
fcmovu
mov
js
js
cmp
rcl
clc
or
mov
aaa
dec
push
dec
adc
pop
inc
sub
push
inc
push
inc
mov
adc
mov
arpl
jae
das
mov
and
jp
ret
adc
fwait
movmskps
mov
pop
pop
pop
fist
test
mov
jg
bound
loop
rep
and
jbe
bound
fisubr
push
loopne
pop
aad
inc
inc
adc
add
lar
imul
sbb
mov
scas
mov
shl
jae
mov
icebp
scas
dec
ins
mov
cld
repnz
or
imul
pop
adc
(bad)
push
and
fs
js
dec
popf
in
xor
fdiv
lods
hlt
or
xor
mov
pop
movs
or
inc
fld
or
and
sbb
jbe
or
add
in
fs
adc
retf
adc
add
xchg
inc
cld
mov
movs
mov
test
sub
mov
sbb
gs
(bad)
jge
mov
and
sbb
inc
cmc
push
adc
adc
cmp
add
rol
or
pusha
xchg
and
xchg
pop
push
divps
pushf
ja
adc
fadd
hlt
dec
mov
push
lahf
ja
rcl
adc
(bad)
sbb
push
sar
mov
pop
mov
mov
outs
mov
pop
jns
scas
sub
ds
fcom
dec
loopne
gs
inc
or
mov
xlat
mov
dec
rol
fcmovnb
daa
adc
nop
inc
(bad)
xabort
add
ret
gs
(bad)
adc
ret
daa
add
sbb
idiv
mov
nop
push
pop
jo
daa
pop
test
nop
fcmovnb
jge
add
add
sbb
mov
pop
arpl
jo
daa
iret
ret
loopne
or
adc
cmp
dec
pop
xor
aad
dec
les
outs
sub
push
enter
fld
cld
add
lds
(bad)
mov
clc
or
test
hlt
ror
add
into
shl
inc
daa
scas
fs
add
pop
jnp
push
sub
xchg
or
add
popa
adc
lds
fdiv
bts
sbb
mov
add
inc
push
jge
or
ss
sub
div
(bad)
call
jnp
adc
in
dec
mov
cmp
(bad)
dec
inc
xchg
stos
sbb
add
dec
push
call
or
push
sub
sub
add
inc
pusha
les
jo
inc
mul
xchg
(bad)
pop
xchg
not
scas
das
add
fwait
inc
add
inc
and
xor
imul
or
jg
or
inc
iret
mov
mov
push
cmp
add
push
int
and
jmp
mov
js
dec
into
or
ins
addr16
ret
or
add
mov
and
inc
das
mov
cwde
test
add
pop
inc
movs
add
mov
jae
adc
sub
or
jl
add
jne
test
inc
mov
add
shr
iret
cmp
xor
inc
popf
xor
jmp
enter
(bad)
lock
push
fwait
int3
push
shl
in
add
jns
xor
mov
stc
cmp
jmp
pop
push
mov
and
xor
cmp
pop
inc
daa
mov
iret
mov
jmp
loopne
int
mov
shr
movs
xor
inc
aaa
in
dec
rcl
lds
mov
jo
ss
shl
iret
adc
xor
pop
add
xor
aas
fld
or
xor
out
xor
pusha
in
cmp
sub
and
or
popf
sub
jg
ins
add
pop
push
mov
je
cmp
add
mov
jl
fld
xchg
cs
adc
shr
mov
lds
add
and
imul
inc
push
push
dec
add
data16
ins
aad
jge
(bad)
repz
sbb
rcl
cmc
cdq
mov
sti
adc
aad
add
inc
ins
(bad)
aas
test
aas
lahf
test
iret
xor
mov
add
dec
push
cmp
loop
lods
sub
adc
pop
enter
jnp
cmp
popa
jbe
xlat
shr
adc
pop
jno
enter
add
(bad)
jl
imul
mov
xor
clc
fsubrp
adc
loop
mov
push
dec
mov
push
xor
aad
add
xor
inc
call
push
sub
lock
jnp
ret
je
and
push
sbb
test
adc
dec
clc
cmp
test
ss
push
mov
popf
jns
pop
or
test
push
popa
sar
or
aaa
or
stos
add
inc
out
or
xor
or
push
inc
and
pop
iret
pop
cmp
pop
jl
iret
fs
fs
and
dec
jno
fs
mov
fs
dec
ins
xchg
in
fs
fs
bound
fs
sar
pusha
jb
fs
lea
add
adc
add
pop
loop
push
dec
and
fdiv
adc
xlat
dec
retf
inc
or
inc
or
in
out
sbb
or
push
push
push
inc
push
or
and
aam
add
rcl
cmp
push
mov
or
inc
jmp
xor
retf
jae
and
cmp
(bad)
jmp
out
pop
mov
(bad)
clc
(bad)
out
sbb
or
(bad)
jmp
sar
mov
xlat
or
pusha
les
mov
push
pop
cmp
push
pop
sbb
pop
xlat
add
adc
lock
or
aaa
mov
movs
push
xchg
mov
jl
jne
adc
or
mov
test
mov
cmps
inc
jo
(bad)
pushf
dec
add
ret
nop
inc
sbb
(bad)
fdivr
mov
pop
add
loope
cmp
sti
call
xor
jmp
outs
out
adc
sbb
test
mov
jno
adc
mov
lea
(bad)
mov
mov
mov
lds
inc
mov
mov
loope
or
inc
dec
adc
test
add
popa
and
sbb
push
inc
adc
xor
push
dec
mov
into
fist
dec
jns
jne
arpl
mov
add
pop
dec
daa
pushf
pop
mov
out
pop
js
mov
pop
cmp
or
loopne
mov
sbb
cmp
push
(bad)
std
jg
adc
push
add
cmps
pushf
sbb
sub
mov
imul
inc
or
ds
mov
adc
or
(bad)
popa
fist
or
call
lahf
push
mov
loop
mov
int3
pop
ret
les
hlt
add
cmp
push
or
add
or
xor
mov
cmp
cmp
mov
mov
xchg
xchg
lock
mov
ret
mov
adc
movs
dec
push
and
inc
or
push
sub
pusha
xor
pop
outs
add
adc
add
add
mov
inc
jg
xor
jmp
popa
sti
bound
jmp
das
add
jmp
xchg
pop
mov
xchg
rol
out
jg
or
imul
pop
or
mov
add
out
outs
ficomp
out
xchg
pusha
adc
maxps
push
xchg
sub
pop
imul
bound
mov
push
outs
sub
or
enter
xchg
hlt
adc
mov
adc
xchg
add
xlat
xor
pop
shl
fnstcw
cmps
cmc
clc
mov
adc
(bad)
add
sub
fldcw
aaa
cmp
cmc
fdiv
xor
and
fnstenv
sbb
push
repz
fdivrp
sbb
and
pushw
add
test
cwde
xor
bound
push
and
jns
fisub
pop
pop
xor
mov
jmp
addr16
fsub
adc
addr16
add
cmp
or
xchg
jge
adc
call
sbb
mov
xlat
retf
ret
dec
cmp
xchg
ret
addr16
ins
test
pop
or
or
push
or
ds
push
push
xor
push
or
push
xor
lahf
and
test
jno
sbb
ins
mov
jae
(bad)
lods
cmp
leave
test
mov
xlat
xchg
sbb
nop
add
mov
xor
adc
inc
lds
outs
call
push
xchg
xchg
xor
inc
or
pusha
jg
pusha
outs
into
add
inc
fiadd
dec
jne
jo
or
pop
pop
scas
xlat
pop
or
aas
add
cmps
mov
leave
pop
xor
inc
sar
cwde
push
lock
enter
cmp
setg
mov
ret
xor
enter
lods
xor
stos
push
leave
dec
or
cwde
aas
outs
(bad)
sbb
into
inc
adc
and
add
(bad)
push
cmp
dec
mov
enter
in
in
out
add
or
push
arpl
sahf
out
sahf
adc
and
das
outs
sub
cs
in
jno
or
aam
daa
rol
in
fist
sbb
xchg
xor
fadd
mov
inc
xchg
cmp
push
dec
sub
sub
ds
add
(bad)
loope
pushf
pushf
int3
(bad)
mov
mov
sahf
cmp
jne
in
mov
mov
fstp
leave
test
or
rcr
push
loop
dec
loop
je
pop
jb
add
add
sub
jns
mov
(bad)
aam
jo
call
push
add
adc
jns
or
mov
(bad)
mov
mov
data16
dec
inc
nop
mov
adc
test
sbb
or
fist
mov
inc
or
add
loopne
push
stos
ja
pusha
pop
out
(bad)
js
and
adc
sub
loop
cwde
pop
in
(bad)
fwait
adc
and
add
movs
mov
sub
add
pop
outs
popa
inc
sub
or
inc
adc
imul
cmp
add
mov
jmp
mov
loop
pop
pop
push
mov
xchg
xor
in
mov
pop
call
dec
outs
gs
ja
ret
jo
dec
fwait
ss
or
fcmovnbe
mov
jae
rol
mov
pop
inc
sub
stos
out
icebp
xor
xchg
rol
movs
mov
cmp
and
inc
push
mov
push
push
cmps
dec
jo
pop
retf
rcr
mov
mov
test
lea
ret
mov
cmp
(bad)
(bad)
rol
push
push
pop
dec
movs
push
adc
adc
jl
push
js
push
cld
sub
pop
add
mov
cmp
call
loope
pop
das
dec
mov
retf
mov
xchg
mov
xchg
dec
nop
xchg
sti
and
cwde
fwait
nop
aas
aaa
test
mov
aaa
mov
jg
inc
test
mov
or
push
mov
mov
cmp
sub
adc
fcom
inc
test
ds
sbb
mov
dec
adc
jl
(bad)
(bad)
mov
push
cmps
pop
mov
(bad)
cmp
inc
out
mov
cmp
xchg
or
mov
mov
adc
das
cmp
shl
adc
jecxz
ins
ins
inc
xlat
push
lahf
popf
aaa
xchg
div
in
ds
mov
adc
dec
ins
ins
and
push
(bad)
push
pop
jnp
stos
adc
push
cmp
sbb
out
test
mov
cmc
mov
add
stc
cmp
inc
cmp
mov
adc
mov
retf
gs
dec
mov
mov
in
and
mov
cdq
nop
xchg
push
mov
fs
enter
lods
dec
in
jb
je
je
and
pop
es
inc
push
and
push
repnz
jl
and
mov
sub
mov
ror
fbld
jbe
mov
jge
pop
push
pop
mov
test
sub
inc
jl
mov
push
push
mov
sbb
adc
and
rol
push
enter
ja
aaa
in
(bad)
inc
retf
or
inc
add
cmp
jne
push
arpl
add
stos
in
leave
loopne
cmova
mov
scas
jmp
mov
nop
mov
retf
pushf
mov
lds
fdivp
(bad)
retf
ret
mov
adc
and
ror
fist
jne
icebp
cli
(bad)
ret
cmp
and
mov
pusha
daa
jne
cld
fst
pop
pop
and
mov
in
int3
in
fcomp
inc
stos
mov
arpl
into
add
loopne
test
call
movs
cmp
sahf
cmp
cmp
lods
or
push
cs
mov
xor
add
sbb
mov
rcl
ret
dec
sbb
pop
fisttp
pop
sbb
aad
fldln2
aas
in
pop
es
dec
out
arpl
mov
cmp
add
outs
jecxz
in
add
xor
mov
xchg
mov
mov
xor
es
xor
idiv
aaa
adc
xor
jbe
and
xor
xlat
mov
xor
inc
and
push
jp
jo
mov
lea
jne
retf
nop
fcomp
push
mov
jmp
push
(bad)
pop
das
loop
aad
js
dec
xchg
inc
ins
outs
fwait
dec
add
(bad)
xchg
mov
mov
rcl
mov
mov
pop
movs
sbb
sub
js
ins
sbb
inc
jmp
add
movs
test
fisubr
out
out
mov
or
mov
mov
mov
shl
lods
xor
add
ds
xor
in
imul
xchg
push
jmp
sbb
xor
shl
call
cmps
ret
cmp
or
pop
dec
xor
mov
pop
push
test
sbb
adc
or
jbe
test
pop
and
arpl
test
mov
rcl
dec
mov
fdiv
mov
mov
sub
aad
adc
in
or
mov
adc
dec
dec
imul
call
das
inc
xor
pop
sbb
call
add
pop
cmp
inc
daa
data16
mov
cmp
cmp
cmp
jno
call
pop
add
xchg
or
aas
sbb
loopne
hlt
pop
movs
call
adc
jno
and
psrlw
call
mov
dec
pop
push
cmp
sub
(bad)
loop
rol
iret
pop
or
or
jnp
xchg
jmp
mov
cmp
stos
clc
in
sbb
mov
jbe
mov
sub
mov
sar
pop
dec
jne
jns
mov
add
imul
enter
jmp
hlt
ins
sbb
pop
pop
(bad)
icebp
add
fdivr
inc
push
pop
lock
and
inc
(bad)
stc
cld
scas
push
nop
mov
sub
or
mov
imul
div
hlt
test
je
xor
addr16
sbb
pop
clc
adc
rol
add
mov
das
loop
pop
(bad)
out
cmp
mov
push
ret
gs
mov
pop
or
test
das
dec
into
push
ins
rol
xor
jle
(bad)
mov
daa
mov
icebp
mov
mov
in
xchg
inc
or
cmp
sub
cmp
pop
(bad)
loopne
xchg
or
xor
ret
out
test
adc
ror
hlt
mov
das
mov
in
rol
mov
adc
fld
push
imul
in
push
ins
xor
(bad)
sbb
mov
pop
shl
inc
ror
mov
out
cmp
outs
lock
ja
aad
xor
lea
sub
dec
sub
jb
clc
adc
mov
adc
outs
inc
inc
push
pop
fcomi
das
pusha
or
arpl
mov
fld
dec
xchg
sub
mov
(bad)
loope
pop
scas
daa
repnz
push
in
jb
jmp
pop
pop
sbb
cmp
adc
jmp
and
pop
add
inc
or
js
inc
adc
adc
mov
sub
mov
add
add
js
leave
cmp
pop
xchg
cmp
je
or
jge
adc
mov
adc
jo
and
and
inc
popa
add
sbb
mov
adc
cs
jb
or
imul
out
jae
sbb
out
ja
gs
push
jbe
adc
adc
push
and
inc
jge
test
and
adc
popa
add
mov
rcr
loopne
mov
xor
pop
test
sub
adc
inc
mov
add
cmp
sbb
retf
sbb
cwde
sbb
or
mov
push
bound
cmp
je
mov
or
push
push
push
popa
mov
out
jo
cmp
xchg
ret
sbb
add
mov
popa
ins
out
inc
ins
push
inc
cmp
push
ja
jmp
cwde
mov
xor
rcl
sbb
adc
mov
mov
enter
cwde
add
jge
cmp
test
pop
add
adc
jne
rcr
call
(bad)
ror
push
test
or
add
test
rcl
dec
jne
cs
popa
icebp
loopne
sti
push
sbb
cmp
adc
dec
adc
nop
push
and
cmp
or
jmp
cmp
sub
sbb
mov
aas
adc
inc
js
adc
pop
push
daa
add
dec
repz
ret
loop
mov
push
add
nop
dec
rcl
rcl
mov
mov
leave
fld
adc
(bad)
or
mov
movs
sub
xchg
sub
test
das
sbb
fild
add
adc
out
out
ret
mov
mov
mov
mov
cmp
mov
or
or
cld
data16
sbb
(bad)
loop
daa
mov
gs
jp
push
daa
pop
loope
cwde
cmp
mov
adc
adc
data16
xchg
and
je
mov
les
jecxz
and
sub
movs
daa
lock
jmp
or
loopne
out
jae
add
mov
sbb
pusha
adc
adc
je
push
or
out
or
cld
hlt
push
and
xor
sbb
adc
jle
jmp
ds
daa
dec
rcr
int3
cmp
pop
sbb
enter
inc
lahf
mov
or
nop
inc
clc
fist
mov
xor
iret
xchg
pushf
add
xchg
mov
outs
push
jo
rcl
push
aaa
daa
fsub
mov
push
ficom
rep
xor
test
mov
sbb
cmp
inc
clc
jo
mov
cs
sbb
lods
and
in
push
or
or
add
and
and
sub
daa
inc
repnz
aad
das
push
mov
jg
clc
jecxz
mov
pop
nop
rcl
test
div
dec
xor
sbb
add
(bad)
xchg
push
inc
mov
xor
fistp
les
lahf
sub
ret
or
xor
adc
sub
inc
xchg
inc
sub
and
mov
mov
pop
or
inc
mov
push
or
ins
inc
enter
cmps
sub
xor
xor
jb
cmp
clc
cld
cld
mov
add
iret
mov
mov
or
xor
ret
jle
push
hlt
fwait
jne
inc
cmp
add
inc
int3
add
mov
int3
sbb
dec
jbe
mov
in
xchg
inc
dec
fs
dec
adc
ins
mov
fcmovu
nop
mov
jl
enter
test
mov
add
sbb
add
inc
and
jo
imul
jl
aad
pop
cmps
call
xor
jmp
inc
(bad)
shl
or
xchg
icebp
mov
lea
retf
mov
lahf
push
inc
jns
ficom
imul
repz
xor
and
dec
bound
cmp
pop
frstor
cwde
icebp
cmp
mov
std
hlt
jmp
arpl
in
mov
dec
xor
es
dec
xchg
je
sbb
pop
dec
imul
inc
out
cmp
adc
sbb
inc
sub
mov
rcr
jmp
xor
and
or
inc
pop
jmp
sbb
inc
test
call
test
sub
adc
jmp
stc
(bad)
mov
fst
cli
sub
xchg
call
jo
add
adc
stos
dec
out
push
sbb
inc
mov
cmp
les
fmul
push
ins
jo
js
pusha
mov
stos
lea
jmp
(bad)
xchg
out
mov
lea
adc
fadd
adc
mov
pop
mov
mov
jb
inc
cmp
mov
cmp
ja
loop
bt
jae
mov
or
test
adc
mov
mov
or
jg
mov
pop
rcl
push
jne
cmp
(bad)
pop
xor
mov
neg
xor
dec
mov
adc
dec
jo
cmp
sub
push
inc
inc
ins
(bad)
nop
adc
adc
inc
pusha
add
pop
push
les
and
or
mov
sub
jae
add
sub
mov
call
adc
push
pop
cs
repnz
sub
push
xchg
pushf
push
inc
push
cmp
fs
movs
loopne
mov
fs
in
cmps
dec
fs
cmp
pop
pusha
xchg
xchg
fistp
inc
push
pop
icebp
dec
dec
cs
pop
dec
mov
lock
dec
cwde
mov
shl
adc
sbb
xor
cmove
es
(bad)
into
mov
mov
xor
popa
inc
jne
mov
test
daa
cmp
pop
or
cmp
pop
sbb
push
jo
repz
and
inc
std
mov
mov
add
push
or
add
cmp
mov
cmps
cld
inc
sti
mov
js
add
add
(bad)
adc
scas
aad
add
cli
and
pop
std
dec
or
dec
pop
add
push
push
arpl
nop
rol
imul
and
call
ret
pop
test
cmp
fisttp
add
stc
loopne
loopne
pop
nop
xchg
xor
and
push
inc
dec
test
adc
arpl
ret
addr16
aas
adc
xor
mov
aas
dec
jo
cld
add
cld
dec
scas
ret
mov
jno
pop
arpl
mov
in
adc
lock
rcr
loop
shr
mov
call
ins
das
cmp
sbb
lea
rol
lods
jne
lods
push
outs
and
push
or
int3
aas
enter
mov
and
sub
fnstsw
and
cmps
sti
mov
push
test
lods
fadd
lods
mov
mov
inc
and
fwait
test
xlat
and
nop
xchg
jmp
inc
ins
jb
adc
mov
sub
imul
add
fwait
daa
popf
add
fisubr
jle
cmp
and
or
out
jo
cmp
out
mov
lods
pop
jo
daa
fisub
scas
jno
pop
push
and
inc
pop
mov
pusha
sbb
inc
imul
push
fwait
mov
les
in
dec
aaa
push
push
mov
dec
pusha
cmp
je
fcomp
aas
test
mov
inc
std
(bad)
xchg
push
cmp
add
leave
jmp
mov
cmp
je
mov
loopne
push
push
or
pop
and
push
fs
aad
and
adc
sub
je
add
dec
iret
push
xor
push
enter
add
js
mov
imul
adc
daa
pusha
mov
inc
push
pop
and
mov
imul
inc
rol
mov
push
dec
fiadd
std
mov
add
inc
arpl
adc
sbb
iret
inc
mov
xchg
jmp
push
jl
add
cmp
or
cmp
jmp
loopne
xlat
aas
jmp
test
cmp
enter
jbe
push
mov
jae
push
mov
loope
ins
fwait
jno
push
sub
pop
add
mov
xchg
add
mov
pop
adc
cmp
out
call
in
clc
inc
mov
aam
dec
inc
je
inc
call
jne
and
xor
mov
shr
popa
push
push
pop
push
dec
ret
fld
shl
mov
push
fild
cdq
idiv
es
in
rol
jp
push
add
push
hlt
cli
loop
mov
push
clts
das
sbb
push
push
imul
sbb
or
fcomp
ret
hlt
push
aam
pop
jo
push
mov
shl
and
mov
push
add
push
inc
mov
push
or
cs
mov
push
cmp
loop
cdq
push
das
xor
pop
movs
push
das
inc
cmps
push
cmp
push
push
push
test
inc
sti
push
push
stos
push
jno
and
or
push
cs
(bad)
mov
and
cmp
rol
adc
fmul
push
rcl
inc
dec
loop
push
das
(bad)
rcl
clc
rcr
inc
adc
mov
test
push
js
ja
call
js
in
int
cmp
mov
sahf
push
and
push
out
jge
int3
hlt
mov
ds
jg
add
push
rol
mov
sub
and
xchg
fs
xor
jl
mov
or
dec
gs
je
nop
js
cmp
je
xchg
test
out
(bad)
sub
inc
jne
ins
jns
fild
push
mov
pusha
mov
pushf
and
outs
pushf
mov
and
xchg
sbb
adc
mov
hlt
and
xor
sub
push
outs
mov
stos
mov
sub
shr
mov
jl
cmp
jne
ror
jne
inc
fmul
cwde
ficomp
mov
idiv
and
nop
loopne
fisubr
add
xchg
nop
iret
gs
cs
jbe
mov
ficom
out
je
cmp
sbb
jb
jne
add
jg
push
loopne
cmps
add
xor
xchg
mov
xor
cmp
lea
add
xchg
lea
in
mov
test
aad
jge
or
push
rcl
sti
pop
add
sbb
jmp
and
aas
cmp
xor
sub
aam
sub
push
add
mov
(bad)
cmp
push
data16
push
jg
mov
nop
dec
or
add
in
jp
rol
dec
cld
adc
hlt
mov
ss
aas
mov
ja
(bad)
mov
mov
lods
add
sbb
push
and
nop
test
or
xchg
dec
or
test
lea
or
or
in
mov
xor
sub
and
and
rcl
inc
aas
clc
dec
scas
push
popf
sbb
lods
bound
sbb
les
mov
mov
cmp
bound
inc
hlt
(bad)
dec
cmp
mov
cwde
adc
nop
fcmovne
es
pushf
mov
adc
test
push
lods
xchg
jmp
sbb
xor
imul
inc
mov
mov
pop
les
mov
lock
sar
push
pop
fwait
mov
loopne
xchg
mov
cmps
mov
mov
test
xchg
or
sahf
sbb
adc
fcomi
btc
mov
jecxz
pop
daa
inc
jl
push
inc
or
mov
in
add
aas
fmul
dec
adc
ret
mov
pop
mov
dec
inc
mov
daa
dec
add
sub
out
push
push
inc
pop
ins
aaa
pop
xchg
add
shrd
jnp
xor
cs
mov
mov
ficom
arpl
inc
mov
dec
mov
mov
dec
or
sbb
pop
dec
arpl
mov
sub
add
(bad)
xor
adc
xor
mov
enterw
dec
add
mov
pop
cli
adc
mov
or
fsub
jnp
mov
lds
pop
dec
ins
and
cmp
xchg
aaa
shl
std
pop
outs
cmp
test
push
mov
push
in
cdq
add
dec
add
mov
sub
jle
adc
xchg
or
adc
sbb
outs
xor
hlt
sbb
cwde
dec
or
or
sbb
imul
js
in
cmp
sbb
cmp
fdivr
xor
push
inc
dec
mov
dec
jp
iret
movs
ds
fcom
ret
cmp
loopne
ror
adc
cmc
jae
mov
neg
xor
or
xchg
mov
pop
sub
xor
or
push
sub
inc
mov
pop
loopne
push
mov
push
jle
and
jne
aad
xchg
sub
add
push
movs
mov
ret
adc
outs
in
sar
inc
add
sti
or
test
cs
popa
aam
fs
inc
xchg
or
rcr
push
cwde
sbb
retf
add
push
dec
push
lock
and
clc
cmp
add
sbb
add
mov
les
mov
sbb
dec
push
test
jo
mov
test
imul
and
or
push
data16
lods
or
and
jge
and
mov
or
add
jo
jmp
push
mov
jne
mov
int3
xchg
inc
fmul
scas
ror
push
add
es
enter
add
push
jmp
mov
call
rcr
movs
cdq
xor
les
push
aam
loope
add
in
sub
and
in
mov
cmp
dec
lock
mov
or
push
aam
add
cld
pusha
cmps
mov
test
add
mov
test
leave
and
sub
sbb
test
xor
pop
in
xor
push
xor
fdivr
add
pop
and
loope
popf
jp
xchg
mov
and
inc
add
or
push
and
mov
add
or
stos
dec
dec
mov
shl
mov
mov
mov
out
sub
ret
pop
mov
or
std
push
pop
mov
mov
lahf
loopne
imul
shl
outs
sbb
mov
hlt
cmp
sub
dec
repnz
dec
inc
cwde
push
aas
mov
xor
add
adc
add
sbb
mov
hlt
or
xchg
fist
or
cdq
xchg
andnps
stos
sbb
cmp
test
add
or
ret
leave
and
push
mov
sbb
adc
out
xchg
iret
sbb
push
cmp
imul
dec
pusha
bound
mov
adc
cmp
jne
xchg
cmp
jecxz
mov
les
add
or
cwde
loop
add
fadd
fld
xor
xchg
xor
adc
xor
mov
mov
mov
sbb
clc
gs
cdq
mov
pushf
fbld
and
xlat
pop
call
add
adc
sar
les
or
pop
and
dec
pop
add
(bad)
inc
pop
out
gs
test
retf
inc
fwait
aaa
xor
inc
jge
hlt
and
add
mov
mov
jmp
adc
je
adc
adc
add
and
cld
xor
sub
mov
xor
lock
mov
push
add
sbb
sbb
data16
or
imul
lods
or
ds
mov
add
mov
jb
cmp
test
and
test
test
ret
int3
mov
fild
push
mov
js
jnp
test
mov
push
loope
lea
je
mov
and
mov
ret
add
cwde
mov
retf
push
or
loop
jbe
int3
jmp
sub
push
loopne
sub
cmp
mov
adc
cmp
add
cld
and
cdq
or
mov
rol
add
mov
mov
sbb
inc
shr
movs
sbb
push
jo
jecxz
or
cld
xchg
xchg
popf
dec
unpcklps
(bad)
icebp
pop
xlat
mov
dec
mov
mov
fcomip
sahf
push
sbb
ss
ss
dec
mov
sub
and
add
add
add
lahf
inc
call
inc
nop
add
xor
dec
stos
mov
pop
push
ret
push
out
lods
jmp
scas
es
enter
fisub
and
xor
test
push
pop
scas
pop
sbb
ja
xor
aad
push
xor
movs
retf
sti
scas
test
mov
loope
lock
add
push
push
add
inc
ss
cmp
mov
andnps
sbb
xchg
mov
mov
mov
add
sub
call
dec
push
push
lea
push
push
sub
pop
push
les
inc
mov
pop
sbb
popf
fiadd
and
dec
sub
sar
inc
stos
clc
push
push
jge
mov
push
sub
ret
enter
xchg
sahf
loop
xlat
lods
pusha
add
push
sbb
jne
fwait
or
cmp
cmp
adc
dec
mov
pop
ins
xor
jmp
(bad)
addr16
mov
push
clc
jne
icebp
sar
push
jge
adc
sahf
(bad)
or
(bad)
and
add
outs
mov
shl
mov
or
push
pusha
jo
mov
jne
xor
pop
adc
jg
in
jo
push
hlt
or
sti
aas
js
(bad)
imul
leave
pop
dec
fcomp
add
mov
push
or
mov
popa
fwait
loopne
pop
mov
sbb
ficom
sbb
call
test
inc
xchg
mov
cmp
lds
jae
adc
arpl
adc
and
jp
fsub
mov
or
xor
xor
adc
loop
(bad)
pusha
jne
das
inc
cld
cmp
sbb
jmp
icebp
sbb
sbb
push
add
mov
mov
enter
inc
std
fld
push
cmp
adc
ret
icebp
mov
cmp
sub
push
jo
add
aas
cmp
adc
push
outs
sub
adc
loopne
lock
hlt
clc
lock
adc
jp
test
cs
loope
sbb
push
js
jo
mov
mov
sub
and
nop
ret
in
mov
push
add
xor
ret
add
aaa
faddp
stos
mov
lock
mov
retf
xchg
(bad)
mov
or
cli
jbe
jmp
mov
push
cmp
cmp
iret
jae
push
or
push
push
(bad)
fs
and
test
pop
enter
sti
sub
outs
je
call
scas
mov
cmp
push
rcr
das
fistp
dec
shl
or
popa
adc
inc
push
fsubr
add
inc
mov
int
pop
cmp
out
xor
push
lsl
shl
imul
faddp
adc
sbb
push
add
(bad)
rol
dec
mov
cmp
sub
ds
push
loope
je
jmp
add
mov
push
and
retf
pusha
jbe
mov
push
add
les
mov
pop
mov
cs
pusha
dec
iret
xor
mov
sbb
dec
xchg
pusha
mov
push
and
inc
sbb
aas
js
xor
pop
cld
add
xchg
adc
cmp
mov
popa
mov
pop
dec
(bad)
push
mov
sbb
push
adc
xor
or
test
or
adc
imul
pop
call
and
adc
push
jne
pop
(bad)
pop
add
fidivr
or
push
nop
sbb
xlat
pop
mov
push
add
and
mov
out
mov
dec
cmps
fbstp
sar
and
loope
cmp
ret
clc
add
adc
dec
add
inc
cdq
aad
or
sub
cmps
dec
push
ret
inc
cmp
mov
outs
cld
inc
add
mov
cmp
jp
mov
push
mov
jbe
jg
cdq
sub
cmp
add
mov
jp
mov
pusha
rcl
jp
aas
push
mov
in
push
jo
push
cmp
pop
clc
test
push
mov
push
add
or
scas
jge
lahf
cld
mov
dec
jne
loope
test
cmps
pop
out
mov
les
pop
sub
xchg
dec
ret
or
adc
adc
shl
mov
push
ins
lods
pop
shr
lock
pop
fsub
sbb
mov
cmp
test
dec
rcl
sbb
call
add
aad
pop
xchg
aas
mov
lods
movs
lock
pop
sar
push
stc
adc
or
push
dec
and
lock
mov
adc
lea
and
mov
pop
test
mov
enter
sar
leave
fild
(bad)
cld
xor
and
adc
sbb
sbb
pop
cwde
aaa
sar
pop
clc
lahf
call
aaa
cld
and
cmps
nop
les
dec
add
mov
rcl
xor
cmp
cmp
jle
jno
lods
(bad)
int3
(bad)
ret
out
adc
cld
dec
mov
mov
(bad)
shl
push
sbb
add
ror
sbb
xchg
add
lea
adc
es
cmp
jg
call
inc
imul
jo
in
daa
mov
mov
sbb
test
pop
jb
loopne
cmp
pushf
add
jo
xchg
jne
adc
sbb
or
or
cmp
adc
imul
clc
out
dec
or
adc
adc
sub
int
mov
push
out
pusha
shr
pop
mov
adc
les
and
mov
mov
mov
adc
mov
loope
or
mov
bswap
lods
add
add
mov
add
xchg
pop
fsubr
test
inc
or
push
sub
pop
sub
push
jb
loopne
cli
dec
add
sub
pop
sub
push
jbe
jl
mov
pop
dec
push
jp
push
inc
mov
std
scas
and
and
jo
imul
add
cmp
fisttp
jne
sbb
and
setno
xor
loope
mov
dec
push
fsubr
test
adc
sub
arpl
push
enter
pop
and
sbb
and
(bad)
jae
jecxz
push
in
inc
pusha
dec
add
add
lea
xor
rcl
cmp
and
cmp
mov
lods
pop
sbb
mov
mov
not
add
dec
push
ret
fs
jle
ins
sbb
dec
jne
xor
mov
mov
pusha
inc
cmps
or
imul
adc
or
sub
fdivr
lock
test
sbb
adc
mov
jne
and
push
mov
and
leave
and
add
cmp
aas
add
sub
fwait
sbb
dec
adc
call
mov
hlt
jmp
push
movs
aaa
pop
daa
pop
das
jle
and
pop
loopne
or
push
(bad)
add
(bad)
pop
adc
scas
sub
pop
add
sbb
stc
add
fisttp
or
add
nop
inc
inc
shl
pop
or
std
mov
jne
fs
adc
ret
or
push
jae
ja
jo
adc
outs
pop
mov
or
and
ucomiss
outs
and
xor
arpl
(bad)
and
xor
in
rol
jnp
stc
push
add
push
or
icebp
daa
das
sbb
cmp
movs
push
sub
jg
sub
bound
and
or
sbb
and
push
add
mov
sbb
adc
push
pop
imul
cmp
pop
xchg
pop
outs
out
dec
add
push
or
ror
push
inc
or
add
adc
mov
jg
cwde
clc
sub
in
inc
xchg
cmps
adc
sub
dec
sub
icebp
mov
sub
ror
jecxz
jmp
shr
mov
or
adc
add
stc
sub
ds
js
push
sahf
sbb
cmp
ins
loope
call
fidiv
mov
or
xchg
jp
mov
sbb
mov
cmp
push
call
mov
imul
mov
pushf
sbb
fild
mov
fdivr
cmp
or
in
(bad)
and
mov
les
inc
aad
ret
dec
xchg
aad
or
pop
push
enter
ja
pop
push
stos
iret
xor
xchg
jmp
sub
aaa
push
inc
and
addr16
sub
outs
fsub
pop
sub
sub
push
sub
adc
dec
mov
and
pop
pop
pop
jno
xchg
inc
or
xchg
dec
dec
rcl
sub
dec
pop
push
jne
sub
enter
adc
in
cmps
arpl
jbe
mov
dec
cmps
aaa
and
lock
jecxz
stos
push
sub
lock
cs
add
fadd
mov
ret
iret
dec
push
push
sbb
cmp
xlat
push
mov
dec
xor
cmp
dec
push
xor
inc
mov
or
add
test
sub
dec
mov
cmp
fs
add
cmp
out
xor
imul
or
push
sub
jb
push
xor
fisub
je
and
ret
sidtd
add
jmp
mov
cld
cwde
es
clc
push
push
imul
pop
repnz
inc
in
push
fsub
adc
xor
jo
in
lea
mov
loopne
retf
push
cs
mov
das
inc
loopne
mov
mov
(bad)
mov
pop
mov
out
shr
push
hlt
mov
(bad)
loop
push
scas
wrmsr
clc
adc
inc
push
inc
adc
mov
push
push
pop
mov
jecxz
aaa
pusha
sub
mov
push
fcom
and
cmp
and
xchg
lock
mov
cmp
ins
jae
jp
adc
out
cmp
push
sahf
xchg
ja
inc
sub
adc
jne
push
push
xchg
sub
dec
push
adc
push
les
fisubr
xor
push
xor
dec
push
push
call
pop
or
dec
lahf
jbe
rcl
pusha
dec
mov
arpl
cmp
push
hlt
push
dec
lahf
cwde
push
xor
pop
jo
push
jl
and
add
jbe
add
neg
imul
dec
lahf
mov
mov
shr
sahf
js
push
loopne
lock
push
xchg
sahf
inc
mov
lahf
loopne
push
cmp
lahf
fld
xor
pushf
aas
push
mov
scas
ret
push
inc
pop
inc
shr
inc
shl
inc
sub
mov
pushf
add
add
shl
loop
push
fbld
(bad)
enter
loopne
pop
gs
push
add
sbb
and
retf
clc
pop
xchg
jb
dec
ins
cs
ins
mov
fcom
aad
retf
or
push
jb
outs
sub
int
or
cs
rcr
and
sbb
mov
outs
jb
xchg
rol
shl
push
pop
add
sub
sub
and
xchg
fcos
(bad)
inc
loop
addr16
inc
adc
fadd
mov
pop
sub
add
add
dec
ins
add
push
fistp
mov
add
mov
arpl
jp
jae
dec
push
dec
test
add
mov
inc
ins
call
cs
jl
je
nop
sub
mov
pop
outs
jae
inc
xor
adc
inc
or
inc
jne
outs
push
ficom
xor
fsub
adc
push
add
xor
inc
lock
shr
adc
fisubr
loopne
dec
inc
je
cwde
shr
test
mov
push
sbb
or
xor
sbb
push
ins
pusha
xchg
cli
mov
or
sbb
dec
dec
cmp
into
js
jbe
sbb
jl
push
inc
cld
scas
rcl
arpl
cs
clc
arpl
call
or
out
mov
je
push
xchg
cmp
mov
dec
and
mov
xlat
ret
push
in
in
(bad)
lock
sbb
pop
xor
fdivr
call
xchg
xor
ins
push
jne
dec
call
jmp
cli
pop
scas
or
xchg
xchg
mov
push
dec
ins
loop
cmp
sbb
inc
dec
enter
pushf
dec
mov
mov
les
sub
pop
mov
jne
cmps
dec
shr
movs
mov
dec
popa
mov
rcl
cmps
loope
fbld
into
push
test
ja
loopne
or
mov
js
jo
bound
pop
and
repnz
xchg
adc
cmp
rcl
mov
and
pop
not
and
bound
cmps
lds
xor
(bad)
fwait
or
push
and
sub
adc
pop
add
inc
fstp
dec
push
sub
popf
sub
inc
adc
adc
mov
mov
inc
pusha
ds
inc
in
(bad)
stos
jb
inc
sbb
and
inc
xor
push
pop
jnp
xor
mov
xor
add
enter
push
mov
push
cs
add
jnp
push
inc
xchg
inc
lahf
mov
or
inc
jg
cmp
inc
add
dec
(bad)
or
mov
mov
xor
mov
iret
dec
mov
jo
inc
loope
jnp
sbb
xchg
nop
clc
mov
xchg
push
sbb
xor
pusha
fdivr
mov
xchg
pop
jno
mov
add
cmp
std
sub
add
and
xor
xor
lea
aad
sbb
xor
xor
jo
mov
xor
jb
add
xor
xor
xor
pop
ss
push
xor
xor
xor
dec
je
mov
jecxz
mov
repnz
xor
ret
adc
xor
push
mov
cmp
mov
(bad)
xor
jns
sub
inc
push
dec
push
add
mov
and
xor
les
hlt
imul
xor
cmp
or
push
cmp
ins
hlt
cmp
clc
xchg
lock
cmps
jno
add
cmp
dec
daa
sub
test
inc
rol
in
cmp
inc
lock
ins
test
shl
add
cmp
sti
jo
push
jecxz
add
pop
rol
into
bound
pop
rol
dec
and
btc
ret
(bad)
cwde
inc
call
js
loope
and
add
lds
adc
ror
(bad)
(bad)
push
cmp
fimul
aas
cwde
ds
test
fdivr
push
out
sbb
pushf
push
in
ror
sub
cmp
pushf
hlt
dec
bound
in
outs
add
iret
lock
add
stc
push
mov
ins
outs
adc
dec
mov
outs
vmovaps
call
and
in
stos
mov
fs
mov
mov
into
clc
jp
sbb
or
outs
es
or
dec
outs
lock
fdiv
(bad)
ret
in
mov
inc
popa
outs
cld
xchg
shl
add
xor
js
xor
or
ins
add
adc
jo
pop
ret
repz
in
mov
adc
and
movs
(bad)
das
sub
repnz
jne
call
sahf
mov
fs
int3
pop
mov
or
adc
das
rcl
je
ret
push
je
loopne
loopne
adc
lea
inc
jne
jno
pop
dec
mov
popa
push
push
(bad)
push
fimul
loop
test
and
push
adc
push
xor
addr16
jne
push
gs
js
gs
xchg
pop
xlat
jo
or
xchg
push
adc
arpl
shl
lods
ds
pop
push
std
pop
inc
clc
push
add
(bad)
aas
sar
mov
mov
mov
mov
out
lock
or
and
pop
and
js
clc
or
ins
ss
repnz
mov
or
xor
adc
jno
sub
add
leave
xchg
pop
sub
ins
pop
std
mov
mov
nop
test
adc
push
(bad)
icebp
push
mov
xchg
(bad)
mov
sub
mov
inc
pop
dec
rsqrtps
repnz
jo
rol
gs
pop
sbb
push
push
lahf
inc
sub
sub
or
sbb
mov
mov
cmps
pusha
and
adc
or
icebp
pop
dec
aam
inc
fs
call
jae
imul
fst
mov
jo
mov
fs
or
lock
mov
inc
test
pop
dec
xchg
pop
dec
or
lock
aam
imul
mov
leave
sbb
pop
and
jmp
je
add
or
retf
in
add
dec
sbb
inc
imul
ins
push
fsub
sbb
loope
add
jecxz
cmp
nop
dec
push
push
es
and
inc
sbb
cmp
mov
leave
iret
push
sbb
je
xor
repz
retf
rol
pop
loopne
jae
fucomip
xor
xchg
stos
mov
es
adc
and
dec
dec
setle
sbb
sbb
xlat
xlat
and
pop
mov
inc
jne
xchg
fs
and
and
push
jb
and
pusha
jo
or
inc
add
popa
es
inc
jns
sbb
xor
inc
cmp
daa
xchg
das
mov
mov
pop
sub
inc
shl
les
pop
into
test
fs
push
cdq
cvtpi2ps
inc
stos
test
cmps
inc
cmp
push
bound
(bad)
icebp
mov
ss
leave
pop
loopne
(bad)
fsubr
call
aas
cs
(bad)
es
mov
push
nop
sub
pop
ins
fist
push
push
xor
xor
call
mov
jecxz
mov
cwde
rcr
inc
daa
mov
push
push
fs
xchg
lock
retf
pushf
inc
xor
jo
sahf
or
jl
sub
adc
jae
add
sysret
mov
inc
mov
fiadd
inc
inc
sahf
ficom
adc
lods
fisub
fcomp
push
shrd
cmp
pop
ins
loopne
lea
lea
cmp
call
add
pop
mov
xchg
dec
add
mov
cmp
and
lahf
inc
sbb
pop
ds
clc
xchg
mov
push
aas
scas
lock
clc
push
xchg
dec
mov
add
aam
popa
pop
inc
dec
clc
in
mov
dec
scas
xchg
stos
inc
inc
push
sbb
inc
ins
or
or
jno
aaa
adc
adc
pushf
stos
and
add
and
dec
push
push
mov
mov
aam
inc
je
xchg
ret
mov
shl
dec
add
add
dec
dec
and
dec
push
scas
outs
ret
loope
push
adc
inc
xchg
push
push
cmp
(bad)
xchg
cmp
cmp
push
fst
rcl
jno
add
or
inc
sbb
sbb
mov
in
inc
xor
sbb
sbb
cdq
mov
loop
inc
cs
sbb
sbb
jbe
mov
sbb
inc
and
sbb
sbb
xchg
mov
sbb
mov
mov
lock
sbb
sbb
pop
sub
(bad)
and
ja
sbb
sbb
sbb
mov
mov
fild
dec
xor
sbb
sbb
movs
retf
sbb
dec
cmp
or
add
shr
and
shl
or
mov
add
inc
adc
outs
sub
jl
lods
cwde
ss
bound
gs
inc
imul
or
in
outs
adc
sub
pop
adc
cwde
jb
out
sub
add
xchg
push
test
outs
div
xchg
mov
lods
(bad)
in
aam
dec
js
jg
rol
nop
dec
xchg
jbe
mov
pop
aaa
lock
jle
jp
push
sbb
shr
(bad)
and
dec
ja
pusha
icebp
aam
and
inc
inc
mov
(bad)
sbb
pop
and
or
sub
lahf
inc
xor
mov
clc
or
jae
pushf
adc
add
mov
cmc
clc
push
push
cdq
outs
out
push
jo
inc
inc
adc
push
and
aas
push
js
or
and
fisub
push
mov
pop
leave
and
ja
or
hlt
pop
sub
or
pop
div
mov
ins
call
cmp
pop
cmp
ret
jne
mov
sub
mov
popa
js
sub
jae
dec
daa
add
fsub
sub
out
pop
loopne
adc
fild
sub
mov
ret
mov
add
mov
dec
pop
adc
mov
inc
dec
pushf
(bad)
sub
pcmpeqw
cmc
xor
test
add
add
jge
sbb
imul
sbb
dec
and
mov
loopne
dec
add
jno
fadd
xor
sbb
(bad)
push
and
adc
add
mov
cmps
and
fstp
mov
adc
pop
ds
in
mov
enter
aaa
pop
jle
xchg
enter
add
cmp
sbb
pop
mov
cmc
adc
or
adc
add
xchg
test
inc
xchg
lock
and
jge
inc
test
jns
(bad)
fdivr
mov
mov
or
daa
int3
jg
mov
sub
mov
inc
pop
dec
inc
xor
sub
dec
sub
jae
xor
or
lds
scas
adc
mov
sub
sub
cmp
jae
retf
dec
push
mov
outs
pusha
rol
inc
popa
adc
jno
push
sub
mov
jae
xchg
mov
ins
xchg
and
inc
jno
sub
dec
adc
adc
ret
sub
mov
and
adc
ret
add
shr
add
or
ret
nop
push
test
sub
push
mov
mov
mov
or
push
jae
stos
xchg
mov
dec
inc
inc
fdiv
out
fs
or
fwait
std
add
mov
xor
pushf
or
inc
xchg
pusha
in
jg
nop
loopne
in
push
add
jl
loop
add
add
popf
popa
hlt
xchg
pop
xchg
in
adc
xor
cs
adc
ins
mov
or
add
fs
push
push
jo
push
add
or
pop
es
mov
and
adc
das
mov
mov
dec
xchg
ja
sbb
int
add
test
dec
das
ret
lock
jbe
mov
mov
jo
mov
jns
or
sub
cmovbe
xor
xchg
dec
std
pusha
adc
es
adc
int
gs
daa
push
iret
shl
out
aas
fimul
sbb
cmp
js
sub
dec
sbb
popa
ss
lds
jbe
mov
popf
pushf
popa
js
cmp
ficom
lahf
add
mov
js
mov
inc
or
pop
cmps
test
add
aas
dec
xchg
in
pop
fist
or
dec
or
sti
jbe
int3
lea
cdq
xor
add
mov
daa
mov
pop
pushf
and
jmp
push
lahf
add
jecxz
push
and
mov
and
and
cmova
sbb
xchg
inc
(bad)
rol
outs
adc
ja
mov
pushf
fwait
nop
stos
inc
loopne
outs
adc
or
fwait
mov
and
outs
inc
push
adc
pop
and
pop
inc
or
inc
dec
sbb
push
jb
add
inc
leave
sbb
inc
cs
sbb
mov
push
adc
stc
pop
test
and
sub
xchg
and
lea
or
enter
xchg
mov
sub
cs
xchg
sub
sub
and
pusha
sub
add
in
add
add
nop
fs
xor
add
add
push
or
aaa
sbb
popf
jne
xchg
add
add
pop
in
std
inc
inc
cs
mov
inc
inc
mov
not
pop
inc
inc
inc
cs
inc
inc
inc
retf
pop
xor
inc
inc
inc
pop
and
push
inc
inc
inc
inc
jbe
(bad)
jmp
push
pop
popa
or
sbb
movs
retf
pop
sbb
sbb
pop
and
popa
add
outs
loopne
repz
or
and
push
dec
bound
xor
pusha
push
dec
add
repz
pop
xchg
mov
inc
push
je
push
lock
les
mov
push
sub
outs
outs
imul
push
popf
js
cmc
fsub
push
ficom
cwde
or
iret
adc
adc
jno
outs
jmp
std
lock
ret
pop
pop
dec
cmp
pop
cld
dec
jb
adc
pushf
push
loope
jo
and
int3
push
or
add
test
push
rol
pop
xchg
(bad)
lock
add
lods
fcom
imul
mov
ror
fwait
cmc
test
stc
sahf
nop
out
sbb
or
dec
lock
out
jnp
fadd
loopne
in
call
fwait
cmp
cmp
js
pop
hlt
push
retf
sub
sbb
mov
jnp
shr
inc
pop
test
or
adc
cli
jne
aaa
sti
add
inc
inc
push
inc
or
xchg
xchg
add
inc
sub
sub
pop
or
mov
aam
int
sbb
loope
mov
lea
mov
and
dec
push
cs
fs
mov
adc
jbe
js
inc
or
jge
add
retf
shr
xlat
imul
lock
or
imul
pusha
adc
xor
push
loope
bound
ins
mov
push
ret
mov
dec
jne
mov
ret
pop
fist
or
imul
push
mov
ss
mov
and
add
adc
xor
sbb
cmp
int
(bad)
scas
je
and
or
jl
jle
xor
je
push
jle
test
jle
mov
fild
(bad)
push
adc
stc
fstp
fwait
cmp
jge
mov
ja
dec
mov
inc
mov
sub
jle
mov
push
add
dec
xor
jmp
sub
push
dec
jno
(bad)
xchg
pop
and
mov
add
jb
mov
push
mov
jge
xor
and
jp
iret
sar
rcr
and
(bad)
inc
(bad)
sub
rol
push
jl
leave
imul
test
lods
call
adc
das
add
add
push
lods
and
retf
pop
adc
sbb
sub
adc
adc
loop
sbb
add
mov
inc
add
push
out
lods
fdiv
jl
push
or
les
push
arpl
call
or
test
je
mov
cwde
mov
add
imul
cmp
test
aad
rcl
push
test
push
xchg
mov
sti
sti
add
mov
int3
ins
mov
or
call
cmc
inc
fs
mov
(bad)
pop
add
js
daa
sbb
mov
dec
dec
adc
and
add
pop
jmp
xor
daa
call
shl
cld
cld
cmp
sti
mov
popa
adc
call
sbb
popa
sub
dec
jg
test
jne
sub
jle
push
imul
xor
mov
pop
test
mov
jae
clc
add
cmp
scas
xchg
ss
mov
mov
mov
mov
mov
push
push
push
and
add
rol
jmp
cli
ficomp
test
loopne
scas
xchg
test
or
xchg
test
or
pushf
fldpi
or
lods
push
ret
dec
mov
adc
cmc
ins
lods
loopne
shl
cmp
cmp
xchg
ror
mov
out
or
imul
adc
cmps
sub
xor
rcr
rol
clc
mov
cmp
pop
or
sbb
push
pop
dec
pop
mov
out
add
hlt
mov
inc
pop
cmp
jmp
or
pop
or
pop
dec
addr16
or
imul
adc
loopne
out
je
mov
mov
rcr
add
lock
xchg
popf
mov
pushf
mov
enter
enter
retf
int
das
and
loopne
loopne
add
dec
dec
arpl
add
mov
imul
and
mov
xor
adc
cmp
jmp
add
push
pusha
xor
jns
or
(bad)
in
cmp
xor
inc
cs
mov
adc
xchg
aaa
mov
fcomp
mov
cmp
push
jp
mov
aaa
mov
dec
je
int3
lods
xchg
push
fsub
fld
cmp
push
cli
xchg
cmp
test
mov
sub
sub
and
hlt
sbb
push
cmp
jl
push
push
push
jl
mov
clc
or
stos
jmp
not
and
(bad)
pop
and
sub
adc
and
int
sbb
inc
in
adc
add
xchg
loop
ror
cmp
jmp
lea
adc
retf
cmp
and
cmc
in
or
fbstp
adc
jmp
adc
cmps
dec
mov
test
sbb
js
xchg
inc
fiadd
sub
jae
push
mov
xor
arpl
les
adc
xchg
mov
ins
and
jnp
ret
xor
in
and
mov
fiadd
jle
clc
add
clc
shl
cmp
add
adc
(bad)
pop
(bad)
cmp
pop
ins
jne
shr
inc
dec
pusha
sub
cmp
pop
xchg
pop
jmp
ins
mov
add
pop
cmp
aam
jle
and
adc
nop
push
add
adc
jnp
mov
inc
push
fmul
mov
div
mov
push
cmp
xor
enter
fldcw
and
rol
jae
movs
mov
sbb
jo
loope
dec
push
dec
imul
cmp
mov
pop
add
dec
or
ret
xchg
or
inc
sub
aaa
outs
inc
inc
call
clc
sub
cmp
test
sbb
into
adc
aad
sbb
push
and
add
pop
std
mov
ror
mov
out
pop
js
xchg
movs
or
mov
shl
jae
das
add
pop
or
(bad)
add
in
imul
and
add
xchg
jb
(bad)
mov
dec
mov
adc
nop
fild
sar
jmp
sub
add
pop
cmps
add
sbb
dec
sbb
or
stos
push
in
mov
je
into
icebp
adc
not
pop
adc
inc
test
inc
data16
pop
dec
clc
inc
or
pushf
stos
in
sbb
pop
and
pop
or
xchg
test
jl
fwait
ret
out
add
cmp
pusha
cwde
sub
or
out
in
cmp
inc
aas
(bad)
cli
stc
jo
jo
scas
add
adc
movs
adc
sbb
ret
add
aaa
cmp
jbe
and
dec
mov
jge
xchg
and
adc
lock
mov
inc
push
jle
jo
xchg
push
leave
sahf
adc
shr
retf
je
mov
sub
dec
test
mov
ret
sub
mov
adc
push
and
push
hlt
push
jns
mov
jmp
xchg
push
push
pop
mov
mov
mov
pop
in
xchg
or
hlt
pop
lock
and
jmp
lock
lods
mov
add
cwde
lods
xor
sub
push
xor
sbb
sbb
(bad)
dec
adc
loope
sub
test
jo
dec
shl
sbb
push
add
fsubr
add
pop
dec
pop
rcr
mov
inc
repnz
and
(bad)
xor
cmp
jl
cmps
push
scas
dec
inc
cmp
or
aam
clc
ins
add
jl
inc
pop
add
push
pop
mov
sbb
pop
mov
jmp
xor
xlat
adc
dec
xchg
enter
lods
inc
fidivr
or
pop
inc
repz
aad
adc
xor
mov
add
sub
mov
cmp
andps
push
dec
cs
fnstsw
outs
mov
out
add
push
sbb
xchg
xlat
shl
or
or
sahf
sbb
add
cmps
mov
mov
push
mov
sbb
push
xchg
test
loope
inc
jle
jl
jne
mov
dec
shr
shl
mov
or
movs
mov
cmp
out
sbb
ror
mov
sub
add
std
stos
test
dec
push
cmps
xor
mov
adc
mov
jecxz
add
cld
push
mov
pop
add
mov
aaa
or
sub
pop
lds
repnz
or
ja
xchg
leave
je
mov
inc
inc
add
xchg
enter
pop
xchg
and
and
xchg
xchg
ret
dec
add
and
fiadd
loopne
mov
fimul
pop
cmps
call
jle
mov
or
dec
cdq
(bad)
in
cli
jne
inc
or
fmul
pop
lea
movs
add
gs
je
shl
pusha
push
jne
and
gs
jg
cmp
mov
adc
jmp
push
(bad)
cmps
xor
inc
cmp
jbe
aas
std
jbe
sub
dec
dec
sbb
cmp
jmp
arpl
lods
or
push
mov
pop
imul
xor
inc
hlt
xchg
in
jns
imul
sub
mov
xchg
adc
add
daa
jns
cmp
jno
clc
or
jmp
sbb
arpl
movs
cmc
or
popa
inc
cwde
and
lds
push
jne
mov
inc
(bad)
aam
mov
add
test
out
mov
pop
ss
rol
jmp
sbb
or
mov
adc
mov
adc
pop
xchg
aaa
aaa
xchg
jo
pusha
push
hlt
adc
push
(bad)
iret
retf
mov
cmp
rol
jo
js
mov
mov
(bad)
xor
sbb
inc
cmp
push
inc
sbb
xchg
inc
mov
xor
xor
inc
fmul
mov
mov
bound
xchg
jbe
shr
jbe
jge
pop
test
dec
dec
push
and
movs
push
mov
test
lods
pop
test
mov
add
and
add
push
dec
mov
jge
push
mov
jae
inc
dec
clc
cmc
mov
leave
clc
lea
mov
jle
add
mov
inc
cld
mov
jg
(bad)
add
nop
or
sahf
add
outs
add
pushf
aas
test
inc
sub
inc
jecxz
mov
or
das
ins
in
add
sbb
cmp
outs
movs
push
xlat
mul
mov
pop
js
lock
je
pop
fild
outs
sbb
mov
or
arpl
push
call
xchg
ror
sub
sbb
push
cmp
cmp
mov
fisttp
adc
adc
mov
xchg
add
inc
(bad)
or
inc
pop
cmp
clc
cmp
inc
jmp
sub
jne
nop
push
arpl
outs
test
loopne
int
xor
cmp
outs
jns
sub
lea
cmp
outs
cwde
(bad)
or
gs
int3
call
dec
push
push
test
add
lods
cwde
imul
into
push
inc
pusha
xor
push
mov
shr
cmp
pusha
jae
jmp
(bad)
fisubr
dec
jmp
pusha
or
mov
inc
iret
add
ds
fmul
xchg
fsub
nop
pop
das
iret
mov
je
sub
aas
xor
cmp
mov
fcomp
sbb
faddp
push
adc
ret
and
out
test
sbb
adc
mov
mov
ds
dec
loopne
adc
push
or
and
in
add
pop
add
adc
adc
sub
cmp
add
mov
or
jp
sar
mov
inc
fist
fld
mov
in
repnz
add
call
mov
mov
cdq
cmp
inc
add
std
add
add
repz
sbb
and
and
ja
mov
pmaxsw
adc
dec
jl
(bad)
cmp
dec
cdq
sbb
adc
mov
or
add
add
add
cmp
inc
push
lds
ret
xchg
xchg
or
dec
push
push
sbb
mov
mov
push
adc
adc
bound
mov
rcl
in
ja
dec
add
jnp
xor
push
xor
or
test
or
mov
sar
dec
xor
add
mov
mov
lea
lock
mov
pop
add
shr
add
cmp
mov
cmp
dec
pop
addr16
push
nop
ficomp
jnp
je
in
adc
dec
pushf
or
mov
lods
dec
pusha
pop
sub
sub
inc
imul
cmps
xchg
(bad)
xchg
and
adc
rcr
sbb
lds
nop
add
add
add
jo
jmp
xchg
fs
jmp
out
jmp
sbb
cs
jb
and
popa
mov
add
add
icebp
push
and
xchg
push
retf
ja
jle
push
and
mov
and
and
or
xor
out
xor
inc
add
rol
add
pop
jbe
fs
movs
add
loopne
fcom
(bad)
(bad)
xchg
sbb
push
xchg
add
push
mov
mov
add
outs
cld
sbb
movs
jl
push
cld
dec
cmp
jle
adc
inc
jmp
lock
xchg
pop
pop
movs
retf
xchg
scas
adc
add
or
lea
pop
add
add
mov
fisttp
mov
push
xchg
adc
push
iret
jmp
fistp
or
std
ja
pop
popa
pop
dec
mov
add
xor
xchg
push
movs
cmp
jne
or
lock
add
aam
sbb
(bad)
daa
jo
scas
mov
dec
or
lods
mov
dec
mov
movs
pushf
inc
popa
nop
inc
popf
pop
das
mov
inc
fild
add
add
sbb
mov
or
add
sbb
(bad)
test
push
mov
outs
shr
(bad)
cmc
lods
sbb
ja
ins
jae
mov
(bad)
mov
dec
dec
add
ret
add
adc
dec
add
lock
lahf
add
push
ret
add
nop
shl
mov
in
out
jne
outs
sub
mov
loop
jl
push
mov
jbe
out
jle
rcl
xor
pop
mov
add
add
inc
fdivr
push
sbb
add
add
jg
cmp
int3
imul
dec
push
sbb
cmp
jo
xchg
in
loopne
stc
sub
(bad)
sub
inc
push
push
shr
add
mov
inc
je
pop
pop
cwde
jge
loopne
mov
dec
mov
daa
and
inc
cmp
mov
pop
cld
test
aas
add
push
aaa
pop
rol
pop
sub
fsubr
dec
jp
sub
add
adc
add
pop
aam
hlt
add
test
adc
jb
arpl
inc
js
rcl
shl
adc
js
das
and
or
or
xor
mov
int
pop
addr16
mov
sbb
mov
push
iret
cmp
loopne
(bad)
pop
jae
adc
jmp
int3
jp
ficomp
add
adc
sar
or
mov
add
add
addr16
pop
not
add
add
shl
pop
push
repnz
dec
pusha
shr
add
mov
pop
iret
mov
jne
or
push
daa
mov
jo
aad
pop
adc
addr16
test
sahf
or
(bad)
cmp
cmp
push
inc
push
jge
repz
test
jmp
loop
or
fsubr
cld
push
jmp
jo
cmp
rep
lea
mov
xor
jb
cmp
sub
mov
or
mov
xor
and
dec
cmp
dec
sub
inc
cmp
cmp
sub
test
xchg
xchg
pop
xchg
push
call
pop
mov
adc
sbb
cmp
cdq
inc
cmp
test
pop
push
(bad)
int3
pop
ficom
clc
retf
js
enter
mov
dec
xchg
cmps
xor
mov
mov
adc
lods
pop
cmp
les
pop
clc
jg
ror
dec
call
(bad)
std
push
lock
test
sub
dec
jne
call
cmps
cmp
mov
mov
sbb
outs
mov
cld
jbe
add
js
shl
in
out
ins
add
loop
(bad)
push
out
loop
ja
mov
or
pop
mov
sbb
imul
mov
pop
ror
adc
test
jge
jle
add
jo
enter
add
call
out
adc
fcmovnu
mov
adc
add
clc
cmp
ror
adc
sbb
lock
dec
call
add
or
push
test
pop
and
lods
fwait
lods
neg
inc
rcl
inc
push
dec
inc
clc
loopne
test
push
das
jne
mov
sub
jns
fsub
fdiv
xlat
or
fmul
and
(bad)
add
je
mov
push
mov
mov
cmps
stos
movs
cmp
inc
aad
je
pop
pop
mov
dec
imul
shl
es
push
or
nop
cwde
cwde
dec
adc
loope
fdivr
fdivr
pop
inc
or
aad
movs
bound
jb
or
add
add
add
pop
mov
cmp
popa
add
mov
cdq
ret
ret
je
daa
add
dec
(bad)
mov
add
pushf
jl
jp
cmp
pusha
jl
push
cmps
cvttps2pi
fcmove
cmp
add
inc
add
adc
xor
inc
sbb
lods
out
jne
test
nop
jmp
(bad)
jmp
ret
push
add
sbb
adc
dec
inc
add
cmp
fbstp
mov
pop
inc
mov
test
add
push
push
push
out
inc
ins
gs
add
out
sbb
movs
cmp
je
out
data16
in
adc
arpl
push
outs
shr
(bad)
ins
bound
outs
js
adc
gs
sbb
mov
jp
push
adc
imul
or
fsub
xchg
jp
ins
jns
(bad)
sti
mov
adc
gs
fs
push
mov
imul
pop
pop
or
mov
call
inc
jp
adc
imul
ins
popf
cmp
push
bound
(bad)
(bad)
into
or
push
arpl
ins
out
push
mov
push
jo
jb
test
jp
or
je
jae
adc
cmp
and
or
jb
adc
sbb
das
sbb
test
fild
outs
mov
push
imul
cmp
outs
lock
data16
gs
out
js
jl
adc
addr16
imul
cmp
inc
xor
sub
xor
sbb
mov
lock
adc
popa
adc
enter
mov
imul
or
and
je
sub
xchg
les
add
les
das
mov
inc
neg
xchg
fnsave
sbb
shl
inc
test
popa
add
outs
rcl
push
xor
push
push
jnp
dec
inc
adc
push
inc
sub
xor
cmps
adc
scas
mov
push
or
cmp
imul
adc
pusha
ds
or
sbb
cmp
adc
sbb
pusha
add
xor
add
fistp
xlat
mov
push
test
(bad)
mov
push
xor
sbb
mov
xor
aaa
fiadd
adc
(bad)
sbb
push
xor
ins
ret
sbb
mov
xor
js
adc
mov
in
mov
push
and
xlat
sub
adc
jnp
int
loopne
adc
push
fst
sbb
(bad)
and
and
xchg
je
fs
dec
sub
adc
popf
ret
xor
int3
or
ret
pop
out
xor
jno
repnz
add
sbb
adc
shl
adc
mov
push
cmp
and
adc
ins
mov
xor
sbb
sub
xchg
inc
ins
jns
push
lds
aaa
sub
xor
sbb
adc
and
dec
ret
test
or
pusha
dec
fsub
aas
or
push
xor
aaa
jne
arpl
dec
outs
adc
fst
and
push
mov
xor
or
jnp
adc
sbb
pop
in
lar
dec
jo
outs
sub
(bad)
sub
test
outs
pop
xor
loope
and
nop
xchg
push
sbb
xor
sub
pop
adc
xor
movs
jo
arpl
aaa
or
sbb
imul
xor
mov
cmc
inc
jo
pop
push
xchg
xchg
xchg
mov
sbb
pop
daa
lea
pop
xor
push
xchg
pop
test
adc
mov
sbb
mov
lods
mov
push
mov
and
sbb
inc
xor
fstp
ins
add
test
(bad)
and
inc
mov
test
inc
nop
adc
maskmovq
test
or
adc
ret
push
sbb
ins
sbb
push
lea
fsub
jb
dec
adc
adc
pusha
xchg
pop
adc
pop
popa
inc
dec
pop
inc
nop
imul
(bad)
pop
mov
push
adc
push
adc
push
ja
pop
jecxz
push
test
add
fucomip
cmp
dec
or
aad
push
int3
mov
outs
je
mov
leave
or
add
jmp
mov
mov
dec
pop
adc
arpl
or
inc
xchg
fimul
mov
(bad)
push
push
cmp
adc
das
cmp
and
ror
cmp
add
sub
cs
sub
push
inc
cmp
into
fwait
movs
movs
push
sbb
fadd
xor
ins
push
aas
inc
mov
cmp
or
sbb
mov
pop
push
adc
cmp
push
(bad)
dec
outs
ins
mov
movs
dec
movs
or
and
xchg
xlat
das
xchg
push
imul
mov
xor
add
mov
add
push
xor
push
das
stos
aas
test
inc
jne
(bad)
xchg
push
and
mov
mov
sbb
stos
jp
ins
add
cwde
outs
push
neg
lea
or
adc
outs
movs
popf
stos
mov
xor
mov
retf
and
mov
dec
push
pop
and
daa
push
mov
adc
mov
daa
fwait
and
pusha
ja
adc
(bad)
and
popf
sbb
popa
jb
mov
bound
inc
shl
cmp
lds
mov
inc
adc
jo
rol
movs
idiv
lods
cs
and
jl
push
cmp
push
mov
sbb
imul
jmp
sbb
shl
ins
dec
inc
jo
dec
mov
inc
les
addr16
jne
or
and
(bad)
xlat
mov
xchg
and
pop
pusha
push
adc
not
ss
fdivr
sar
fadd
lods
popa
adc
sbb
push
adc
es
and
push
and
xor
sbb
cmp
stos
inc
test
popf
mov
lods
mov
jno
shl
cmp
aad
xor
pop
in
xchg
call
inc
enter
adc
test
ror
or
mov
and
aad
aaa
sahf
adc
call
pop
inc
icebp
(bad)
mul
in
fsub
cmp
sub
cmp
(bad)
cmc
std
push
xor
popa
sub
jmp
in
lea
and
adc
inc
fld
push
imul
and
pop
imul
inc
mov
test
das
mov
scas
and
dec
inc
xor
xchg
or
or
retf
sbb
pop
es
dec
cmps
xor
inc
or
or
lods
popa
jo
sbb
or
int3
sbb
(bad)
mov
mov
mov
cmp
push
jo
sbb
mov
dec
add
sbb
loope
and
inc
bound
ror
xor
and
movs
add
jno
xor
aaa
(bad)
hlt
add
clts
xor
adc
add
mov
ret
push
sbb
shr
and
ror
push
push
ss
pop
push
adc
push
ss
mov
sub
sub
jo
dec
add
in
sub
and
or
movs
imul
inc
mov
popa
add
movs
inc
dec
sbb
mov
xor
and
jno
cwde
mov
jb
xor
addr16
sbb
clc
addr16
cmps
push
sbb
ret
adc
nop
cmp
sub
mov
adc
inc
or
lods
ror
and
adc
int
sbb
cmps
lods
outs
ins
push
sub
fadd
fcomp
xor
mov
aas
in
and
jns
cmp
push
pop
ins
sub
sbb
adc
arpl
mov
cmps
mov
test
inc
xor
bound
mov
cmp
and
popf
adc
cmp
shl
and
xor
and
push
test
shr
push
xor
push
mov
mov
daa
mov
cs
lods
and
jge
ins
xor
adc
add
pop
pop
adc
fmul
or
test
add
cmps
mov
cmc
adc
mov
repz
nop
adc
push
add
out
push
pop
(bad)
nop
arpl
daa
mov
ror
daa
mov
sub
das
ficomp
ins
or
sub
in
mov
xor
aaa
mul
cmp
cs
jo
xor
inc
pusha
mov
jge
fsub
inc
aad
bound
rcr
test
das
and
sub
je
shr
sbb
pop
and
xor
lods
data16
mov
lods
sub
loopne
adc
div
ds
ins
add
xor
rcr
jl
neg
not
jb
fsub
je
mov
or
xor
sbb
mov
or
mov
fiadd
and
sbb
sbb
test
sbb
fnstenv
popf
cmp
sub
jl
or
or
inc
gs
loopne
xchg
jns
sbb
or
mov
je
ins
adc
lods
add
jmp
mov
ror
xchg
in
lods
pop
or
es
xchg
pop
dec
test
sbb
test
mov
inc
push
mov
adc
repz
add
adc
cmp
daa
dec
cwde
and
mov
and
pusha
push
xor
gs
xor
sub
inc
sbb
dec
shl
sub
test
aad
or
inc
cmp
out
sbb
add
inc
shl
mov
cmp
or
sub
xor
and
adc
fidiv
test
(bad)
vmovapd
addr16
push
push
call
ins
jmp
jg
sub
fild
sub
movs
add
data16
imul
add
and
fistp
fild
add
fs
cld
mov
ins
daa
lock
and
sub
adc
imul
jbe
shl
lahf
cmp
sbb
pusha
ret
(bad)
sbb
or
jmp
or
cmp
dec
sti
mov
stos
mov
dec
outs
popa
aaa
adc
adc
adc
std
or
and
adc
or
sub
xor
inc
imul
and
add
sahf
dec
jae
sbb
inc
dec
and
ins
ins
mov
or
jnp
push
add
xchg
and
cmp
imul
cmps
and
mov
and
sbb
test
loope
sub
xor
push
sub
imul
sbb
mov
xchg
dec
aas
pop
sub
js
ins
push
push
push
sub
sub
sbb
pop
sub
inc
pusha
ins
mov
inc
pusha
mov
sub
mov
mov
cmps
fadd
mov
clc
cmp
bound
pop
lods
or
dec
sbb
inc
jo
cmp
fadd
adc
xor
and
mov
pop
das
inc
mov
fnsave
pop
fisttp
push
sub
daa
(bad)
push
mov
sub
test
stos
push
mov
mov
or
cmp
push
add
dec
mov
arpl
inc
popa
ins
or
aaa
add
sbb
mov
outs
adc
cmp
xor
cwde
rcpps
sbb
ins
ret
sbb
and
sbb
sbb
inc
mov
(bad)
in
pop
mov
dec
push
outs
fs
jns
xor
and
push
daa
jnp
test
ja
sbb
daa
inc
and
sbb
test
js
addr16
lds
jbe
sub
test
mov
and
ins
or
dec
dec
xor
dec
cld
dec
xor
adc
ficomp
cmp
sbb
and
xchg
imul
sbb
and
push
inc
lahf
push
fidivr
ds
outs
xor
imul
jle
outs
test
(bad)
add
rcr
sub
ja
ss
ret
adc
lea
mov
and
mov
and
inc
and
sub
ret
or
outs
mov
xchg
adc
aaa
fst
dec
or
outs
bound
pusha
sub
fcomp
inc
imul
sbb
adc
xor
xor
test
jg
jg
pusha
fmul
and
and
or
pop
or
popa
jae
pop
cwde
or
mov
and
push
mov
push
pop
jnp
inc
out
je
xchg
xchg
xchg
xchg
imul
cs
pop
xchg
or
dec
adc
out
push
into
ja
ja
sbb
xor
ja
add
mov
and
ja
pop
pop
push
and
mov
pop
and
adc
push
and
es
ins
or
cmp
xor
ficomp
sub
push
or
out
das
mov
mov
mov
int
popa
sub
xor
xchg
add
clc
adc
loope
adc
inc
xor
jo
ror
(bad)
(bad)
sbb
fadd
adc
psubq
loope
mov
xchg
sbb
adc
sbb
test
ins
jecxz
ds
pop
push
pop
imul
jnp
and
pop
push
sbb
and
adc
jo
ds
adc
aas
sub
push
test
aas
mov
and
pop
lea
add
or
sub
push
jmp
push
bound
popa
mov
sub
cmp
sub
dec
popf
cwde
mov
fadd
pop
pop
cmp
and
ret
and
icebp
add
sbb
sub
push
int3
adc
jne
push
push
out
clc
or
and
add
and
outs
or
adc
pop
adc
popa
mov
stos
dec
ins
or
jb
sub
loopne
sbb
ss
xor
ins
(bad)
mov
pop
gs
mov
jb
aas
pop
ret
xchg
jb
inc
xor
jb
inc
sub
push
je
pop
xor
test
pop
sbb
inc
pop
and
fcomp
push
and
lea
xor
dec
arpl
and
imul
daa
xchg
pop
out
and
fistp
adc
ds
xchg
inc
push
aam
aam
xor
ins
add
adc
add
add
aad
fld
outs
data16
xchg
and
or
add
adc
jbe
in
and
push
sub
stos
and
xchg
fcom
sub
addr16
sub
sub
les
and
ret
lods
loope
sbb
jne
add
stc
daa
jns
enter
imul
mov
fcom
sub
adc
pop
or
dec
cmc
and
sub
ret
popf
sub
ins
adc
cmps
add
dec
in
push
sub
jae
adc
inc
es
or
ficom
sub
inc
test
das
push
jmp
xchg
pop
push
sub
sub
pop
daa
jecxz
adc
mov
(bad)
inc
fwait
xchg
sub
adc
das
(bad)
push
or
or
jecxz
add
das
(bad)
or
mov
movs
mov
or
adc
xor
sbb
sub
add
fdiv
stc
shl
daa
lds
adc
xchg
add
pusha
cmc
and
hlt
repnz
or
lea
jecxz
push
push
outs
jo
sub
imul
push
and
cmp
data16
ins
addr16
(bad)
push
fwait
sbb
jne
cmp
inc
cmp
xlat
sbb
and
cwde
lock
lea
ja
neg
div
jae
cs
nop
add
nop
jae
jae
inc
cmp
jae
fadd
jae
sub
sbb
sbb
and
in
lds
mov
dec
out
es
imul
ret
pop
push
or
inc
jmp
je
fldenv
jae
pop
aad
ret
ja
sub
sbb
mov
jge
into
aad
rcl
jne
add
or
mov
sbb
xchg
(bad)
ficomp
jo
data16
adc
mov
adc
mov
or
sbb
mov
cs
int3
mov
jnp
aaa
adc
out
dec
ins
sub
sbb
icebp
adc
inc
mov
mov
mov
jle
mov
mov
xor
adc
pop
sub
add
sbb
aaa
pop
rol
xor
push
fidiv
inc
jge
and
sbb
sbb
and
outs
and
dec
fwait
pusha
fsub
cs
ja
xor
or
cmp
add
aaa
inc
jae
lods
cmc
repnz
adc
pop
nop
pop
(bad)
sbb
ret
xor
and
fld
or
push
sub
(bad)
imul
push
sbb
inc
or
dec
ja
or
shr
jge
push
shr
mov
pop
out
out
retf
or
repz
fdiv
(bad)
or
mov
fadd
sbb
and
and
sbb
in
pop
and
lea
pop
fdiv
sub
push
or
shl
jecxz
add
push
movs
ss
cmc
adc
dec
mov
shr
xor
adc
test
popa
test
xor
mov
sbb
clc
mov
(bad)
push
pop
sbb
retf
adc
or
lods
pop
xor
loopne
das
icebp
cmp
ss
add
cmp
aaa
retf
in
pusha
shr
aaa
adc
xor
or
pop
cmp
or
adc
sbb
sub
jmp
adc
sub
pusha
sbb
loope
je
or
push
sar
push
imul
and
int
add
movs
pop
sahf
mul
or
cmp
shl
sub
or
enter
fldenv
push
sbb
jne
and
mov
sub
jecxz
fsub
cmc
xchg
mov
daa
sti
aad
aaa
add
jmp
cmp
add
adc
dec
sbb
push
jb
loope
fcomp
fdivr
adc
add
xor
inc
stos
sub
daa
in
bound
bound
and
xchg
sbb
add
adc
(bad)
mov
adc
mov
or
pop
arpl
mov
sar
xor
lahf
sub
cmp
stos
add
out
push
push
dec
popa
lock
je
or
xchg
das
or
sbb
mov
cmp
dec
outs
fsubr
gs
mov
mov
mov
fs
lea
pop
shl
push
add
js
and
popa
and
rcl
sar
sbb
pop
sub
inc
push
inc
ins
push
adc
adc
test
xor
ds
imul
pop
add
inc
or
outs
das
and
or
mov
pop
movs
cmps
rol
cmp
sbb
(bad)
push
adc
or
jecxz
dec
add
mov
jg
shr
xor
and
sbb
push
ins
xor
cmp
push
or
lods
test
(bad)
mov
mov
fst
sub
inc
mov
jae
cmp
dec
cmp
pop
or
inc
out
ret
or
xchg
arpl
jne
lds
xchg
sub
imul
das
push
mov
xchg
ss
cmp
or
cmp
in
sbb
sub
rol
pop
fcom
imul
shl
cmp
aam
imul
ins
pusha
xchg
jecxz
and
and
rcr
sbb
pop
cmp
push
adc
cmp
and
cwde
mov
and
dec
jb
xor
pop
cli
fs
bound
ficomp
in
adc
pop
sbb
movs
adc
retf
test
add
xor
sbb
adc
ins
adc
outs
lods
and
sub
or
bound
inc
sbb
movs
ss
sub
inc
bound
addr16
or
or
ins
inc
adc
retf
pop
or
ins
cmp
sub
and
mul
add
inc
pop
and
out
clc
ret
lahf
and
mov
aam
movs
mov
or
add
mov
mov
or
xchg
add
das
mov
popa
inc
sbb
or
xor
pop
push
xchg
inc
sub
dec
dec
or
scas
nop
outs
push
cmp
push
mov
mov
jmp
mov
div
cmp
pop
lods
inc
add
pop
or
cmp
push
sub
and
aaa
add
fs
and
mov
fild
sub
add
pop
adc
sbb
sbb
dec
adc
ret
pusha
sub
sub
ret
cmps
inc
cmp
adc
sbb
in
es
sub
jmp
sbb
sbb
ret
push
jb
sbb
sbb
bound
dec
pop
and
ret
int
pop
inc
lds
add
std
dec
push
and
ins
sbb
push
test
xor
jmp
add
or
sub
test
fldcw
xor
push
fs
sub
imul
imul
add
dec
mov
push
or
(bad)
push
sub
mov
pop
in
sub
push
jmp
add
sbb
lods
fnstsw
jbe
fsub
arpl
and
or
jno
adc
daa
imul
mov
test
add
pop
daa
mov
inc
push
aas
shl
mov
daa
int
jbe
dec
adc
sub
adc
or
jno
push
cmp
aad
fstp
push
dec
ficom
mov
imul
movs
xor
movs
test
inc
mov
imul
xchg
(bad)
fidiv
idiv
push
sar
movs
add
push
das
and
or
nop
sbb
call
push
je
pop
dec
rol
adc
dec
xchg
loope
fwait
jne
inc
ss
ficomp
dec
push
and
in
mov
dec
dec
or
imul
mov
cwde
ja
(bad)
adc
xor
in
movs
mov
test
fimul
and
ja
xchg
fadd
push
ss
jno
sub
xor
push
sub
rcl
and
push
sub
pop
sbb
lea
adc
adc
arpl
sub
sbb
xchg
inc
rcl
int3
popa
and
pop
mov
xchg
jg
daa
sub
xor
jmp
push
or
jnp
push
adc
pop
sub
sbb
mov
xor
mov
arpl
mov
xor
rcr
xor
and
fisubr
mov
fst
and
bound
push
dec
inc
dec
xchg
adc
shl
dec
inc
and
dec
rcr
js
xor
xor
and
xchg
adc
mov
add
lahf
push
sub
or
lods
xor
xor
sbb
dec
and
imul
xchg
adc
pop
add
daa
in
sbb
sub
mov
sub
sbb
stc
pop
rcl
mov
sbb
dec
daa
mov
push
ins
pusha
mov
mov
bound
sub
fidiv
sbb
sub
pop
add
xor
add
mov
mov
pusha
mov
pop
mov
ss
retf
sub
xchg
xor
and
adc
push
adc
push
push
cmc
(bad)
arpl
sbb
pop
inc
and
cmc
sub
(bad)
and
sbb
ins
and
mov
and
movs
pop
and
mov
and
fmul
(bad)
adc
sbb
ins
fmul
lock
adc
or
push
gs
test
push
push
sbb
cwde
fsub
cmp
sub
mov
cmp
pop
test
pop
iret
aas
sbb
adc
sbb
aaa
and
inc
pop
jns
and
inc
scas
pushf
call
adc
push
jo
jno
and
inc
add
out
rol
add
push
and
jmp
add
sbb
mov
jb
jne
or
outs
add
addr16
adc
ror
enter
adc
enter
popa
mov
adc
mov
jb
iret
adc
test
fisttp
xor
xor
xor
adc
pop
adc
jb
pop
inc
mov
adc
loopne
shl
pop
add
jne
rcl
and
arpl
lods
mov
pop
adc
add
das
adc
xor
xor
outs
pop
inc
mov
jo
imul
cmc
pop
cdq
mov
push
mov
mov
pushf
mov
push
inc
push
pushw
push
push
sbb
cwde
outs
int3
retf
push
aaa
sbb
push
push
or
in
sbb
dec
cmovno
ss
add
add
pusha
and
sbb
fiadd
jne
sahf
lods
dec
(bad)
pop
add
mov
(bad)
push
or
mul
or
mov
or
xor
outs
out
test
and
adc
inc
cmp
mov
jns
sub
fidiv
out
sub
fs
sbb
push
ror
dec
push
popa
je
call
sbb
jae
sbb
ds
aas
dec
imul
je
mov
cmp
mov
jecxz
push
loopne
sbb
loopne
sbb
mov
xchg
xor
jae
fisub
jae
jne
adc
nop
or
pop
sub
mov
or
mov
test
or
data16
ja
pop
push
sbb
or
xor
cmp
ret
sub
je
push
outs
and
jge
or
and
sysret
(bad)
cmp
mov
dec
sti
or
adc
dec
pop
jae
add
mov
jo
xor
push
push
ror
and
or
mov
jae
or
sub
inc
fsubr
or
or
pop
sub
mov
add
mov
mov
sbb
or
push
sahf
or
mov
ror
push
cmps
arpl
not
dec
dec
mov
push
or
les
inc
or
fild
iret
pop
dec
jbe
push
fs
rol
pop
add
inc
leave
add
lock
ror
rcr
cmp
add
jl
das
pop
jge
push
out
sti
icebp
jo
pop
pop
adc
push
mov
or
adc
cmps
push
fadd
sub
mov
pop
mov
or
sbb
add
sbb
adc
push
add
mov
cmp
mov
cmp
jae
adc
jne
and
mov
or
test
adc
adc
cmp
das
mov
and
or
es
adc
or
mov
movs
(bad)
jae
or
mov
xor
add
sub
(bad)
mov
mov
pop
icebp
add
popa
inc
aaa
pop
test
sti
jno
adc
test
cmp
mov
out
or
(bad)
mov
or
out
push
fadd
and
and
or
dec
mov
daa
in
push
in
cmp
jge
dec
add
clc
inc
addr16
add
and
and
in
lea
inc
out
pop
sub
sbb
lea
xor
sub
movs
les
stos
adc
mov
dec
in
call
fisttp
and
sub
imul
rcl
shl
shl
dec
sub
inc
jo
lds
adc
add
pop
and
mov
sub
add
adc
sub
sub
push
fisub
jge
dec
or
xchg
leave
and
inc
dec
mov
pop
ins
push
aaa
pop
sbb
cdq
sbb
xchg
rcl
add
gs
xchg
sub
and
pusha
stos
test
std
push
aad
sub
ins
adc
ret
sub
pop
sub
or
inc
mov
push
aaa
fwait
sub
cdq
mov
ss
or
pop
or
test
push
sub
pusha
push
ins
fnsave
(bad)
mov
adc
push
xor
add
cs
inc
pop
xchg
das
outs
add
fsub
in
xor
push
add
shr
mov
mov
jg
imul
(bad)
sub
popa
sbb
mov
fsubr
push
call
fcmovu
push
pop
sub
and
or
rcr
or
cvtpi2ps
in
clc
jbe
mov
cmp
pop
les
je
add
in
leave
leave
leave
add
or
add
lods
push
pop
add
add
push
popa
arpl
sbb
jge
mov
inc
add
add
add
sub
sbb
add
or
pop
test
add
dec
or
cld
cli
das
jb
dec
leave
dec
adc
and
add
dec
loope
inc
and
stc
xlat
or
xchg
retf
movhps
and
push
pop
mov
sbb
mov
pop
mov
push
sbb
popf
sbb
out
repnz
xor
and
int
or
ret
js
and
mov
mov
sub
and
add
retf
add
sub
sub
in
clc
cvtpi2ps
lds
add
add
pop
cld
sub
sub
comiss
inc
add
cs
scas
xor
lea
add
xor
add
jb
add
add
dec
push
(bad)
add
add
retf
pop
mov
cmp
test
add
in
pop
sar
(bad)
add
add
aas
add
or
add
add
cmovb
into
inc
pop
push
push
dec
loop
les
and
or
stos
lods
jb
imul
cli
adc
mov
inc
push
cmp
adc
add
cld
test
inc
mov
std
mov
add
dec
push
push
dec
add
adc
adc
idiv
xchg
and
add
add
add
xchg
and
add
mov
pop
das
add
sub
xchg
add
adc
enter
adc
pushf
xchg
add
or
push
xchg
add
or
add
or
xor
add
add
fcom
ins
xchg
or
fisttp
and
inc
scas
and
pusha
add
pop
sub
xchg
or
retf
xchg
inc
ror
dec
xchg
adc
xchg
test
mov
jb
inc
test
sub
bound
pusha
xchg
sub
fmul
add
rcl
or
xchg
mov
add
sub
in
cld
xchg
fmul
fmul
pop
pop
xchg
inc
rol
inc
xchg
nop
popf
lea
test
outs
and
xchg
add
and
xchg
and
or
xchg
and
xchg
ds
dec
outs
popa
fs
jb
push
sub
cld
popa
ins
nop
fcomp
mov
sub
aam
dec
sub
out
dec
jnp
or
lods
and
inc
pop
mov
bound
pop
sbb
mov
inc
jb
dec
push
cs
loop
cmps
imul
outs
sbb
inc
rcr
jne
imul
ja
scas
pop
xor
sbb
sub
shl
jbe
adc
pop
or
jmp
inc
add
pop
pop
int
je
dec
(bad)
xor
push
test
cmp
and
fimul
dec
add
fcomp
or
push
mov
mov
dec
fadd
mov
out
dec
pop
lock
icebp
cmp
jb
fsubr
push
cmp
dec
lock
mov
arpl
push
retf
or
mov
add
add
inc
add
push
jle
leave
enter
inc
push
mov
xor
fs
psubd
les
ret
push
adc
and
sahf
pop
adc
push
adc
enter
xor
in
leave
mov
gs
loope
jb
repnz
sbb
jmp
daa
sbb
dec
mov
ss
sar
sbb
inc
fs
iret
popf
stos
push
dec
push
std
mov
cmc
std
push
add
aas
cdq
xor
push
adc
pop
pop
xor
pop
or
retf
inc
push
clc
xchg
nop
pop
daa
and
retf
ins
mov
pop
pop
push
je
pop
fist
bound
movs
adc
xchg
test
nop
xchg
jo
inc
add
in
rol
inc
inc
(bad)
adc
add
adc
inc
inc
fimul
or
xor
ja
mov
adc
xor
dec
fld
cwde
fwait
mov
sbb
into
lds
pop
icebp
stos
add
dec
inc
sub
add
and
add
cmp
sahf
rol
dec
sub
jo
or
sub
xchg
xchg
mov
cli
ret
mov
adc
fimul
nop
icebp
push
jo
push
add
int
nop
adc
popa
sbb
sbb
cmc
nop
jbe
and
inc
adc
or
lock
lock
adc
inc
jl
or
or
retf
push
mov
and
lods
pop
ror
xchg
aas
and
cmp
cmp
jne
xchg
xchg
outs
add
aad
push
sbb
xor
jns
in
repz
inc
mov
inc
div
add
ins
in
icebp
inc
cmp
adc
in
dec
pop
push
jecxz
retf
fcomi
jge
fcom
sbb
cmps
sbb
clc
mov
das
mov
in
xchg
inc
and
mov
ja
xchg
jbe
in
dec
rol
sti
dec
jae
add
inc
movs
xor
pusha
mov
xchg
mov
mov
inc
mov
jmp
pop
adc
fild
pop
pop
add
adc
xor
nop
das
aad
in
add
adc
stos
cs
xchg
dec
les
jmp
aad
movs
aam
and
adc
sar
lods
xor
lea
les
sar
add
test
jno
and
adc
sub
or
das
add
cmc
aam
call
aas
and
mov
(bad)
jg
xlat
inc
les
cmp
inc
out
in
cmp
ja
add
sbb
test
outs
add
cs
inc
add
gs
pop
dec
(bad)
mov
lea
mov
mov
pusha
add
adc
or
and
or
adc
aad
stos
xor
xor
inc
mov
cmc
xchg
inc
sub
retf
sub
ins
js
inc
cmc
rcl
iret
into
sub
or
ds
iret
xchg
or
dec
enter
mov
and
sbb
(bad)
or
xchg
bound
push
fld
dec
inc
pop
pop
loope
lahf
push
dec
push
popa
ins
imul
push
jmp
xchg
sub
ja
adc
les
clc
jns
inc
popf
push
jae
jne
sbb
push
sub
sbb
dec
dec
or
push
push
pop
mov
jb
mov
inc
popw
mov
inc
sbb
add
mov
repz
and
out
(bad)
inc
or
rcl
movs
jmp
cmp
dec
pop
and
movs
mov
shl
pop
jo
mov
aas
mov
shl
push
push
lods
dec
shr
and
test
or
dec
je
and
add
xchg
add
pushf
dec
add
dec
cmp
mov
push
rcr
cmp
push
in
mov
or
in
jge
mov
call
push
or
dec
mov
call
fs
dec
mov
clc
cs
outs
add
lods
push
fnsave
ds
add
clc
and
and
xchg
sbb
push
les
scas
jge
imul
sub
push
mov
adc
mov
push
movs
pshufw
adc
inc
in
ins
fistp
push
or
push
sbb
push
or
push
outs
xchg
or
sar
fcom
js
mov
mov
pushf
sbb
sbb
fs
inc
and
out
jnp
mov
sahf
pusha
push
push
cs
push
adc
xor
js
adc
inc
ss
fist
add
push
pop
repnz
(bad)
push
pop
movs
lock
or
pop
sbb
shl
pop
cmp
inc
sbb
lods
rol
cmp
inc
movs
inc
pusha
lock
push
xor
pop
mov
mov
sub
push
adc
and
out
sti
push
cmp
push
add
add
pop
mov
scas
sbb
cli
sbb
bndldx
retf
add
add
and
pop
mov
add
and
add
cld
repnz
add
add
and
in
stos
pop
sub
(bad)
and
(bad)
add
push
xchg
das
sub
mov
sub
push
repnz
xchg
das
sub
sahf
sub
jmp
pusha
mov
into
wrmsr
bound
rdtsc
add
add
scas
jge
xor
sub
xor
loop
imul
xchg
sub
cld
jp
loopne
ja
pop
(bad)
xadd
sub
cmp
pop
sub
(bad)
add
add
aas
add
adc
and
pop
inc
jb
cs
mov
sahf
push
js
mov
es
shl
daa
mov
mov
xor
in
jns
lods
mov
ror
and
and
and
mov
lock
or
sub
not
sbb
or
xor
pop
xchg
or
cmp
sbb
inc
sbb
xchg
add
add
mov
xchg
sbb
xchg
ins
add
mov
adc
or
mov
rcr
(bad)
xchg
mov
mov
rol
xor
bound
dec
add
(bad)
sbb
adc
xor
and
(bad)
inc
add
adc
test
sbb
push
or
push
sbb
xchg
push
add
push
mov
push
xchg
or
cmp
sbb
push
inc
jo
inc
sbb
mov
add
xchg
sbb
daa
push
push
xchg
cmp
out
add
adc
mov
pusha
addr16
sbb
xchg
arpl
movs
sbb
and
les
mov
push
add
sub
push
sbb
or
adc
push
push
sbb
sbb
xor
and
test
adc
xchg
sbb
xchg
push
add
add
les
mov
pop
add
imul
add
add
dec
out
sbb
cmp
jae
push
push
inc
or
jo
out
hlt
ja
ja
aam
pop
add
sbb
rcr
adc
retf
dec
outs
outs
imul
test
add
out
add
mov
or
mov
sbb
arpl
xor
outs
adc
shl
mov
push
outs
mov
and
jae
push
das
dec
add
ins
jbe
add
xor
pusha
das
xchg
pop
pop
rol
(bad)
je
call
ins
add
pcmpeqd
push
xor
dec
xor
adc
add
pop
or
gs
add
inc
sub
imul
inc
mov
aas
inc
push
stos
inc
sbb
or
pop
inc
mov
outs
arpl
or
stos
xor
mov
fld
add
push
daa
lock
scas
add
ss
mov
and
push
loope
pop
lock
mov
addr16
mov
and
push
dec
icebp
mov
adc
inc
add
pop
adc
push
pop
ja
dec
mov
mov
cmp
mov
and
or
arpl
dec
dec
test
adc
xchg
xor
and
loopne
add
push
mov
test
jmp
push
outs
jne
arpl
push
cs
sbb
sub
add
rcr
push
and
adc
adc
outs
dec
pop
push
sbb
ja
sbb
adc
add
pusha
dec
push
inc
push
dec
das
adc
xor
add
mov
xor
cmp
jnp
or
jb
sbb
pushf
mov
aaa
xchg
into
push
cmp
dec
dec
inc
xchg
add
cmp
cwde
add
pop
add
inc
mov
xor
cmp
sub
xchg
les
add
mov
cdq
dec
ins
xchg
add
mov
ja
adc
sub
movs
push
jnp
push
xor
add
cmp
sbb
sub
inc
pop
add
fistp
ret
inc
cmps
and
(bad)
fs
scas
outs
adc
or
imul
or
cmps
and
dec
cmp
xor
or
in
and
add
jo
jle
ja
adc
cwde
pop
or
add
and
xor
sub
(bad)
xchg
adc
add
pop
or
pop
rcl
jge
or
imul
xor
cmp
xchg
adc
repz
mov
test
push
jb
dec
and
dec
or
add
mov
fdiv
cmp
cwde
inc
mov
mov
or
jb
mov
sub
rcl
outs
(bad)
les
mov
push
test
sub
sbb
push
push
mov
sbb
or
sub
sbb
adc
pop
add
ret
mov
fistp
pop
(bad)
bound
fisub
out
in
add
push
push
loope
scas
pop
int
inc
mov
(bad)
in
sbb
hlt
jmp
or
aam
stc
xor
test
inc
pop
fsubr
cmp
out
push
push
ja
cmp
sahf
out
sahf
fs
xchg
lods
mov
(bad)
rcr
push
mov
into
dec
adc
(bad)
outs
cmp
div
xor
idiv
and
dec
retf
push
fidivr
sysret
add
stos
mov
inc
wbinvd
add
add
loopne
push
shl
sahf
inc
mov
push
fiadd
mov
aaa
xchg
shl
dec
retf
es
sbb
es
cs
jmp
jmp
pop
sbb
inc
push
in
adc
pop
inc
aam
push
mov
cmp
add
stc
xchg
nop
add
add
ins
ins
add
mov
inc
and
inc
xchg
dec
and
cs
inc
mov
ja
sahf
push
pusha
and
add
cmp
lods
adc
or
add
pop
and
adc
sbb
int
and
not
or
add
dec
pop
mov
sub
les
push
add
adc
outs
adc
mov
mov
or
test
inc
test
sbb
cdq
fnstsw
sbb
adc
gs
cwde
or
xor
iret
pop
rcr
rol
ins
push
pop
cmp
pop
mov
inc
lahf
push
loopne
jle
inc
inc
lahf
pop
cmp
pop
jb
movs
lahf
enter
dec
sub
outs
xor
syscall
push
push
adc
sbb
jo
sbb
jb
or
ja
mov
pop
dec
add
mov
mov
pushf
sub
inc
das
and
(bad)
fadd
add
leave
xchg
inc
sub
ror
mov
jne
push
jl
mov
inc
dec
push
and
dec
sub
jne
aam
shl
in
xchg
mov
sbb
mov
xor
jo
xchg
xchg
fld
xlat
pop
lods
sbb
jb
inc
xchg
fucomi
test
dec
pop
jo
jle
xchg
sub
js
add
push
or
push
inc
push
and
(bad)
dec
mov
test
pop
xor
or
inc
mov
dec
mov
fist
enter
out
dec
fcomip
dec
mov
push
or
cdq
mov
lods
inc
(bad)
loopne
fild
mov
pop
mov
lahf
mov
jbe
dec
pop
push
das
outs
dec
mov
mov
mov
pop
fcom
inc
or
or
retf
add
dec
call
xchg
xchg
add
or
aam
sbb
sbb
push
jb
mov
cmp
pop
inc
(bad)
jg
rcl
shr
and
lods
dec
jo
dec
pop
fsubr
out
cmovle
xchg
dec
icebp
push
xor
out
jp
(bad)
loopne
out
jns
cmp
mov
xor
or
mov
in
inc
dec
pop
cmp
dec
dec
mov
hlt
dec
inc
dec
pop
popa
cmp
and
cli
dec
iret
or
fwait
dec
add
ror
mov
mov
outs
pop
gs
cmp
lds
cmovbe
and
dec
test
dec
pop
push
out
push
mov
and
jb
sbb
inc
add
aaa
pop
cmp
add
je
iret
stos
loope
jbe
push
pop
mov
mov
push
popf
mov
inc
jmp
dec
inc
out
push
xor
iret
jbe
push
push
push
out
mov
or
sbb
leave
movs
imul
cwde
out
mov
or
jbe
inc
mov
push
adc
sub
jge
cmps
inc
dec
mov
push
imul
push
popf
inc
pushf
shl
and
aas
sar
pusha
push
dec
push
push
test
push
and
popa
or
mov
aam
out
mov
enter
lea
sbb
xor
(bad)
cli
cs
inc
iret
push
inc
inc
jb
inc
popa
mov
int3
sbb
lods
or
outs
adc
push
mov
je
idiv
or
inc
inc
and
sbb
jne
pushw
gs
outs
xor
adc
mov
daa
pop
nop
into
inc
shr
or
lock
popa
repz
adc
jge
inc
outs
fadd
and
sbb
inc
jae
pop
cmp
or
inc
ror
inc
imul
pop
pop
add
xor
cmp
out
mul
dec
inc
aaa
sbb
daa
dec
outs
ret
adc
shl
mov
js
movs
dec
push
sbb
xchg
mov
and
push
fdiv
bswap
sbb
pxor
push
or
adc
xor
sub
inc
push
pop
push
mov
adc
push
retf
daa
push
je
sbb
icebp
or
cmp
dec
test
dec
(bad)
xchg
push
or
mov
push
fwait
push
cmp
sbb
jne
dec
minps
ins
pop
mov
pop
ins
and
iret
fwait
inc
in
xchg
scas
adc
outs
jbe
jae
outs
imul
sbb
mov
add
pop
mov
rcr
in
aam
rcr
pop
mov
push
in
sub
je
mov
xchg
cmps
lock
jg
out
push
adc
mov
or
test
jb
and
neg
sub
sub
iret
repz
push
sbb
shl
sub
pop
pop
dec
mov
mov
aas
fs
sub
fadd
loopne
add
xor
xchg
add
arpl
aad
imul
dec
pop
fwait
sbb
outs
popa
and
or
cmp
sti
pop
or
fdivrp
fiadd
ins
in
mov
xlat
movs
push
inc
push
sub
imul
xor
lds
jo
jno
out
add
mov
dec
pop
xchg
inc
or
and
aaa
xor
popa
jns
inc
and
and
inc
dec
pop
adc
rol
cmps
gs
cmp
and
or
push
jno
out
cmps
add
lods
or
and
cmp
inc
outs
jne
mov
imul
pop
inc
jl
xor
jle
ret
add
pop
dec
push
and
lods
fld
sbb
loope
push
adc
test
into
pop
push
add
inc
jne
fld
pop
sub
xchg
pop
push
pop
inc
xor
xchg
pop
xor
cld
das
mov
push
dec
inc
inc
or
and
in
pop
dec
mov
mov
lock
xor
push
push
outs
mov
fs
mov
push
data16
dec
inc
sub
inc
adc
fild
sbb
pop
pop
shl
adc
into
inc
cmp
jge
call
cmp
pxor
mov
inc
shl
jbe
rcl
fnstsw
jae
in
or
clc
lock
cwde
xor
(bad)
sub
jbe
fld
call
test
mov
bound
add
shl
mov
or
out
fist
fldcw
stos
pop
jmp
mov
jae
test
ret
inc
push
scas
adc
mov
daa
dec
xlat
in
sbb
add
push
daa
in
mov
rol
mov
mov
or
jl
int
adc
shl
arpl
icebp
rcr
push
add
ret
test
push
inc
add
mov
int3
xor
scas
sub
xor
pop
jb
shr
outs
pop
pusha
adc
add
sbb
loopne
fld
inc
and
mov
jcxz
add
pusha
int3
ja
push
je
or
outs
div
push
fimul
sbb
bound
mov
and
push
jl
lock
outs
icebp
sbb
pushf
lock
pusha
dec
not
aaa
lds
mov
jns
push
xor
bound
sub
pop
mov
rcr
pop
iret
add
inc
mov
in
adc
cmp
mov
iret
and
add
arpl
clc
test
dec
mov
fsub
xor
psllw
dec
dec
lods
mov
daa
daa
daa
nop
lds
xchg
xchg
xchg
xchg
inc
mov
sti
leave
leave
leave
enter
jnp
in
in
jmp
push
repnz
adc
call
fwait
push
add
inc
aas
jmp
push
sbb
cmp
push
adc
xor
mov
adc
add
push
add
or
mov
jle
sbb
sbb
lds
sti
xor
movs
dec
add
add
fs
jge
lods
shr
and
stos
cmp
sub
fcomp
inc
mov
xor
inc
mov
adc
xor
enter
dec
rcl
dec
fist
dec
dec
xchg
add
mov
push
mov
pop
fwait
mov
xor
inc
popa
inc
ins
pop
pop
push
clc
pop
rcr
js
loopne
bound
push
mov
push
aam
(bad)
call
push
clc
push
mov
mov
push
add
arpl
mov
aad
stc
xor
pop
xor
xchg
pop
dec
add
mov
mov
and
adc
xchg
enter
sub
mov
jbe
xchg
retf
daa
pop
or
popa
sub
pop
sbb
xor
pop
imul
inc
ret
or
les
jae
mov
or
xchg
jae
mov
mov
sub
push
jecxz
cmp
dec
ins
or
dec
lods
inc
lods
mov
mov
add
mov
mov
vsubpd
or
dec
or
mov
push
gs
inc
and
mov
mov
adc
sub
mov
mov
je
ds
mov
pop
jns
and
pop
inc
retf
push
imul
add
inc
dec
call
or
icebp
mov
out
push
push
add
ror
mov
push
sub
pushf
mov
inc
popf
mov
cld
add
in
inc
add
les
adc
or
cld
dec
push
push
cmp
pusha
add
cmp
push
movs
sub
xor
pop
ds
in
inc
or
adc
add
shl
pop
sub
add
rcr
rol
add
fsubr
fld
inc
or
inc
popa
mov
or
cmp
gs
xchg
inc
sbb
sub
inc
test
in
shr
inc
ins
pop
cwde
das
dec
(bad)
call
pop
shr
push
shl
add
sar
out
xor
push
sbb
dec
mov
pop
add
add
out
fs
dec
popf
mov
in
fs
mov
outs
xchg
outs
daa
push
sbb
xchg
or
mov
jl
add
fs
mov
mov
outs
stos
addr16
add
in
dec
sbb
sub
add
add
or
call
ds
pop
push
inc
imul
fsub
and
or
add
pusha
adc
xchg
push
add
push
cmps
add
or
adc
pop
add
or
push
or
loopne
cmc
sar
xor
and
jno
inc
cwde
gs
push
mov
inc
xor
add
mov
mov
and
mov
lds
push
retf
bound
mov
mov
mov
pop
add
(bad)
lods
mov
push
or
adc
mov
add
add
jmp
in
adc
cld
in
loope
inc
(bad)
mov
sub
gs
ret
outs
push
adc
push
jae
sbb
adc
das
shl
adc
test
jae
and
jl
pop
dec
sub
adc
xor
je
pop
and
pop
sub
or
ins
je
mov
inc
inc
pop
pop
mov
stos
add
outs
cwde
popa
test
lock
jne
or
loope
pop
ins
pop
and
lods
add
loope
jne
sbb
xor
ins
ja
pusha
pop
xchg
xor
pop
cs
ja
jae
push
mov
ja
add
call
scas
inc
xlat
sub
jg
in
mov
push
xor
popa
das
ja
xchg
fs
inc
adc
xlat
jg
jno
sbb
test
inc
adc
add
(bad)
cdq
or
add
add
push
fbstp
sbb
push
pusha
mov
ret
(bad)
cmps
ret
push
cmp
mov
push
push
jno
xchg
inc
ja
or
les
pusha
or
jns
sub
mov
rcr
add
enter
ins
dec
add
jno
pusha
js
lods
jns
rcr
cmps
xchg
movs
js
mov
adc
nop
je
and
je
in
ret
add
jns
aad
jae
dec
jns
jns
sbb
gs
sub
jns
push
sub
dec
fs
push
gs
adc
or
or
rcl
mov
jno
pop
(bad)
gs
lock
adc
inc
sub
daa
(bad)
push
adc
aas
dec
xlat
test
sbb
push
mov
ja
rol
rdmsr
addr16
dec
pop
mov
mov
sar
loope
push
jo
imul
imul
cmp
jne
and
mov
dec
ins
jbe
clc
add
mov
sub
shr
push
popf
loope
jl
or
cmp
mov
mov
xchg
sbb
mov
mov
push
mov
in
push
cmp
inc
sub
pop
cmp
popf
dec
jo
cmp
add
jmp
pop
loope
sub
es
les
mov
inc
add
dec
mov
ror
mov
jle
clc
jle
adc
inc
imul
mov
pushf
sub
jg
mov
mov
pop
jo
add
sub
clc
mov
stos
pop
sbb
jg
push
pop
inc
sbb
and
das
test
add
fsubr
push
sbb
push
sub
adc
xchg
icebp
mov
mov
call
out
sbb
fwait
dec
fwait
lea
inc
add
imul
retf
jl
jno
test
retf
test
iret
fist
adc
enter
loope
inc
sbb
shl
inc
cmp
sub
aad
pop
int3
inc
pusha
add
loopne
repz
add
add
dec
adc
inc
cmp
and
aam
and
enter
sbb
xor
sar
pop
mov
ret
pop
push
add
jmp
cmp
xor
in
ja
imul
sub
test
rol
outs
inc
add
outs
ja
adc
add
ds
dec
fisubr
push
les
add
push
push
and
nop
jbe
ret
push
or
test
les
push
xor
cmps
jb
fisubr
movs
push
pop
sbb
or
ror
lds
xor
and
inc
(bad)
test
inc
cmp
lea
adc
inc
add
adc
xchg
jb
xor
add
data16
pop
js
mov
mov
jae
sahf
pushf
fmul
cmps
jmp
dec
dec
dec
jg
add
inc
mov
xchg
iret
mov
stos
sbb
repnz
add
jmp
push
outs
shl
cmp
pusha
add
jno
inc
sub
rcl
mov
lds
mov
sbb
jecxz
sbb
sbb
pop
ins
xchg
or
leave
dec
add
add
mov
pop
or
or
fwait
int3
push
adc
inc
add
adc
xchg
add
push
adc
fldenv
add
push
(bad)
add
push
clc
inc
sub
mov
xchg
inc
and
mov
pop
sub
inc
and
sbb
and
mov
cmps
or
and
pop
dec
sti
loope
dec
lea
xchg
jo
cmps
bound
or
push
outs
mov
dec
or
mov
add
xor
adc
xchg
add
stos
pushaw
mov
push
imul
or
stos
popa
test
mov
mov
push
sti
sub
popa
inc
add
out
pop
push
xor
sbb
retf
ins
das
adc
add
lock
jl
adc
inc
adc
adc
cmps
js
adc
mov
cmp
jae
cwde
cmp
ds
jae
call
adc
mov
popa
xor
(bad)
movs
adc
cmps
mov
cmp
clc
daa
adc
hlt
sub
mov
rol
push
jo
and
add
adc
inc
xor
(bad)
sbb
inc
adc
jmp
adc
add
shr
out
jae
xor
cli
cmps
popf
out
retf
xcrypt-cbc
cmps
adc
fld
clc
das
push
mov
lds
rcl
cmps
pop
mov
or
sbb
push
and
push
sub
or
mov
std
jge
push
arpl
mov
or
loop
mov
cmc
add
mov
das
pop
nop
pop
nop
das
cmps
(bad)
das
mov
pop
clc
(bad)
das
shr
push
leave
pushf
cmp
xor
add
push
mov
nop
dec
xor
shr
lea
dec
je
xchg
fadd
fwait
das
pop
or
scas
and
addr16
sbb
in
pop
imul
xlat
or
push
test
sub
call
mov
xchg
sahf
mov
das
sub
mov
fwait
(bad)
test
pop
pop
aas
cmp
or
adc
pop
xchg
rcl
adc
add
mov
inc
mov
pop
aad
mov
stos
dec
mov
push
mov
adc
dec
add
and
sub
jae
xchg
add
ret
push
fwait
or
push
push
xchg
pop
mov
cmovp
ret
xchg
out
cmp
sub
sub
int3
jns
sub
pop
pop
nop
xchg
iret
inc
sub
ins
inc
add
add
xchg
or
ret
and
pusha
xchg
push
cld
pop
push
movd
js
pushf
loope
scas
cdq
xchg
push
(bad)
xchg
inc
mov
sub
repnz
nop
xchg
clc
xchg
dec
stc
sub
mov
push
rcr
push
loopne
out
std
pop
aaa
and
or
mov
xchg
jg
xchg
dec
push
fldcw
add
mov
fcom
popa
jg
jp
jl
out
mov
stos
ds
iret
stos
add
jns
dec
dec
jecxz
adc
or
loope
jmp
xchg
in
or
cmps
push
mov
enter
xchg
pusha
jns
xchg
pop
jae
xchg
lds
pop
sti
lods
add
test
sub
loop
push
mov
addr16
iret
das
in
cwde
imul
xchg
paddusb
jecxz
add
xor
jmp
cdq
movs
cdq
fst
xor
xchg
pop
in
sti
fcomp
mov
stos
sar
movs
sub
fs
addr16
fbstp
jmp
scas
mov
mov
sub
pusha
shl
inc
xor
adc
adc
out
fwait
mov
xlat
mov
fwait
movs
and
or
inc
cmp
cmc
sbb
pop
pushf
fwait
out
outs
pop
adc
std
jne
mov
dec
cs
test
jne
call
cmp
pushf
clc
or
inc
aam
mov
add
sbb
sub
mov
in
pushf
fwait
xor
pusha
retf
shl
cmc
mov
shl
out
inc
sub
dec
inc
sub
add
ret
daa
sahf
dec
push
es
jno
add
aam
xchg
lock
dec
clc
cli
add
cmps
xchg
sahf
aad
dec
aas
mov
retf
shl
cmps
push
jb
scas
clc
sahf
mov
rol
push
jge
add
pop
jae
nop
inc
dec
test
sub
or
aam
aaa
jnp
adc
dec
es
das
loop
dec
js
mov
dec
clc
es
test
pushf
loop
mov
mov
inc
(bad)
mov
repnz
mov
leave
stos
clc
lods
jl
or
push
repz
or
stc
test
inc
mov
mov
loope
mov
cmp
test
mov
mov
pushf
cmp
jb
ins
das
and
cwde
lea
sbb
call
shl
jmp
mov
jne
or
fdivr
xchg
jmp
jle
cmp
add
xchg
pop
add
jae
add
aas
or
cmc
or
jge
cmp
neg
push
pusha
mul
sub
jo
movs
scas
xor
dec
mov
pop
test
mov
jne
(bad)
imul
js
and
xchg
or
dec
scas
xor
pop
xor
sub
jo
add
cwde
add
add
scas
xchg
fild
cmps
ja
vmwrite
xchg
xchg
(bad)
cmps
scas
repnz
shl
(bad)
mov
in
test
jb
xor
mov
cmp
aas
jnp
lods
pop
and
dec
js
test
stos
mov
adc
nop
jne
xchg
shr
dec
in
push
mov
dec
jge
or
push
call
or
pop
add
loope
jge
dec
adc
pop
jge
sbb
dec
js
daa
sub
dec
ret
jl
add
xor
xchg
mov
xchg
jge
call
dec
cmp
es
adc
jge
jbe
pop
sub
and
push
adc
mov
and
inc
ret
xor
jge
pop
shl
cmp
rcl
pusha
adc
pusha
and
jge
shl
out
rol
js
imul
mov
aam
ss
pusha
dec
ret
mov
or
pusha
adc
pop
into
pop
xor
or
push
xchg
pop
call
mov
add
dec
les
cwde
test
pop
test
push
inc
(bad)
jmp
or
dec
test
jp
stos
pop
add
xchg
loopne
sbb
adc
jle
out
test
repnz
dec
in
and
lods
pop
sar
ins
(bad)
icebp
inc
sub
lods
dec
inc
test
in
cmp
xchg
cmp
and
add
lods
xchg
push
jb
aam
sub
fs
movs
sbb
xor
add
js
popf
nop
scas
pop
fsubr
out
lods
xlat
addr16
push
cmps
pusha
jle
sub
test
xchg
pop
add
mov
jmp
icebp
xor
xor
stos
mov
inc
sub
sub
jmp
adc
push
jp
push
add
scas
xchg
push
push
adc
dec
dec
sub
xor
(bad)
test
xchg
jl
sub
add
out
inc
and
inc
and
add
test
int
sbb
push
add
mov
or
cmc
sub
(bad)
mov
test
jne
daa
cwde
mov
dec
outs
scas
popf
test
das
loope
stos
adc
(bad)
or
mov
lods
shl
test
xchg
mov
daa
and
inc
ror
sbb
dec
dec
pop
test
pop
push
imul
mov
cmp
dec
mov
sbb
ins
add
inc
rol
xchg
sbb
dec
cld
mov
test
mov
test
cwde
dec
jmp
sbb
das
or
loop
lods
mov
adc
data16
push
mov
leave
jl
cwde
adc
cmp
outs
pop
test
cmp
jo
ja
mov
push
cmp
mov
setg
imul
mov
inc
jge
repnz
mov
sbb
jb
loopne
mov
cmp
sahf
pushf
pushf
pushf
nop
mov
and
pop
and
daa
mov
je
jnp
fistp
or
add
push
push
mov
inc
xor
imul
dec
mov
sub
test
pop
push
pop
or
in
rcl
test
lahf
int
jmp
add
inc
mov
shl
lahf
or
inc
mov
mov
sar
jae
mov
and
fidiv
les
movs
add
pop
add
inc
adc
ins
sti
pop
lahf
jae
push
pushf
push
lahf
inc
xchg
adc
lea
sub
imul
jb
movs
mov
call
mov
mov
mov
inc
cmps
mov
(bad)
bound
xchg
mov
dec
inc
mov
sti
mov
pop
imul
loope
adc
shr
mov
ins
mov
dec
mov
loope
imul
loope
xor
mov
add
jge
adc
loope
or
mov
pushf
(bad)
inc
dec
loope
test
pop
fs
ins
xor
dec
stos
popf
stos
mov
sub
mov
inc
arpl
mov
mov
mov
pop
adc
push
push
mul
push
mov
and
sbb
mov
jp
pop
mov
add
ret
push
ins
pop
pusha
sub
mov
bound
pushf
inc
lds
jl
add
movs
dec
jge
mov
adc
scas
sub
mov
aam
and
in
ss
mov
mov
pop
cmp
push
xchg
into
inc
mov
xchg
jbe
leave
das
rol
or
nop
test
sbb
mov
ins
sub
stc
jbe
aad
bndldx
mov
inc
test
(bad)
mov
mov
jne
enter
mov
jne
mov
aad
pusha
stc
in
push
sub
pop
mov
je
lds
dec
test
inc
sub
sub
jns
sub
test
aaa
pushf
fsub
dec
jge
adc
neg
inc
shl
xchg
pop
addr16
rol
jmp
push
push
js
or
mov
test
test
shr
inc
mov
ret
mov
aam
dec
ins
comiss
dec
xor
clc
ret
popf
cwde
out
ret
push
push
sub
das
inc
ret
adc
mov
test
cmps
out
mov
mov
xchg
int
ret
dec
lods
ret
sub
je
push
mov
cmps
fmul
and
ret
in
or
cmps
sbb
imul
push
stos
adc
das
fisttp
xor
inc
les
aam
mov
sti
push
ficom
push
test
out
cmp
das
add
(bad)
(bad)
sub
(bad)
push
dec
lea
enter
mov
popf
loop
jmp
or
inc
test
adc
mov
enter
(bad)
and
leave
fist
push
xchg
xchg
xchg
fld
jge
cmc
leave
leave
leave
enter
cdq
out
in
in
leave
push
pushf
shl
xor
sbb
bound
jb
pop
retf
cmp
cmp
in
or
mov
bswap
cs
pop
shl
out
movaps
add
sub
es
fs
sbb
fwait
cmp
xor
(bad)
dec
dec
shr
or
jno
xchg
adc
shl
push
xor
stos
add
xor
xchg
inc
dec
ins
inc
inc
ja
test
inc
mov
push
sub
ja
dec
sub
test
ja
or
test
mov
mov
test
inc
xor
mov
add
jbe
mov
adc
add
inc
mov
in
imul
rol
sub
xor
or
xchg
mov
sub
push
mov
dec
mov
imul
push
xor
inc
xor
mov
and
xor
inc
xor
test
xchg
push
xor
and
mov
or
push
xchg
shl
dec
in
pop
in
mov
inc
mov
xor
mov
push
(bad)
add
mov
aam
xchg
jne
pop
and
push
fs
xchg
popw
push
mov
nop
test
and
xor
jnp
dec
xor
pop
nop
(bad)
adc
sbb
sbb
pop
or
adc
pop
xchg
sbb
addr16
dec
add
jmp
pop
cmp
inc
js
push
push
push
push
nop
sub
fisttp
sub
cmp
mov
add
lea
out
pop
mov
push
shr
sbb
shl
adc
push
cmc
sbb
lahf
xor
mov
sahf
rcr
inc
mov
retf
rcr
dec
pop
imul
stc
push
ins
lods
sbb
xlat
xchg
pop
pop
stos
shl
jmp
mov
mov
cmp
icebp
out
ret
and
cli
push
sub
imul
adc
out
push
sub
mov
add
data16
inc
test
push
stos
fld
(bad)
or
xlat
add
add
mov
sbb
retf
cmc
aaa
inc
test
jb
ror
or
cmp
retf
xor
pop
sub
or
mov
mov
push
nop
es
das
and
fst
dec
call
push
test
sbb
(bad)
mov
xchg
ficom
add
adc
mov
jecxz
cmp
push
nop
(bad)
arpl
loopne
dec
mov
mov
pop
add
adc
or
shr
pop
das
rol
push
xlat
(bad)
test
sbb
cmp
aad
(bad)
mov
pushf
aad
test
or
neg
(bad)
das
xlat
mov
pop
jnp
mov
xchg
jle
push
mov
and
xchg
or
aam
mov
jecxz
jb
rcl
sbb
js
jae
mov
mov
fcomp
orps
sahf
adc
and
shl
dec
dec
cmc
sub
jne
xchg
xchg
daa
daa
repz
pusha
enter
test
leave
leave
leave
push
ja
rcr
cmp
pop
out
rol
mov
add
daa
loopne
fimul
es
sub
cmp
rcr
dec
add
mov
or
xchg
adc
dec
jno
sub
inc
add
shl
lea
mov
sub
stc
mov
mov
shl
mov
mov
pop
pop
push
test
sbb
inc
mov
or
push
mov
add
pusha
or
mov
push
sub
adc
push
add
sbb
or
push
add
add
adc
or
push
mov
imul
push
and
sub
mov
test
add
and
inc
mov
movs
pusha
add
mov
inc
or
dec
mov
hlt
inc
test
add
add
or
or
adc
push
jbe
and
or
mov
bound
shl
inc
inc
dec
pop
movs
adc
aaa
test
clc
lods
mov
mov
add
or
test
cmp
test
ins
test
fdivr
add
pop
ror
leave
ret
mov
aaa
dec
dec
inc
cmp
add
push
rol
je
sbb
jo
xlat
pop
xor
cld
mov
ins
loopne
mov
pop
je
jp
adc
adc
xor
cmp
loope
cmp
fisttp
ucomiss
loopne
pop
cli
push
adc
sbb
jne
ins
mov
add
fild
cmp
cmp
movs
scas
mov
add
push
push
add
out
mov
push
and
popa
add
sbb
test
push
push
add
enter
outs
aaa
ss
imul
scas
arpl
pop
add
je
mov
xchg
add
ins
push
arpl
pop
outs
fdivrp
mov
pop
js
fidiv
fnstcw
not
xor
scas
mov
(bad)
jb
bound
data16
xlat
pusha
jnp
jne
xchg
popa
outs
xchg
fsubrp
mov
pop
jae
jbe
ds
fdiv
jp
mov
imul
je
arpl
ins
loopne
out
daa
aas
xchg
imul
jo
pop
jb
addr16
cmp
out
pop
outs
sub
arpl
add
jo
mov
jge
add
je
je
outs
jb
das
push
jne
sbb
and
sbb
and
jb
jne
ds
popa
xchg
addr16
mov
div
outs
cmp
div
pop
jb
arpl
daa
jns
outs
dec
pushw
das
jnp
xor
gs
ja
fs
jecxz
sbb
addr16
jns
popa
mov
xchg
sub
jo
pop
(bad)
jne
dec
add
sbb
iret
arpl
jb
jmp
outs
push
ret
imul
popa
enter
jae
aaa
cmps
(bad)
call
push
mov
xor
test
je
test
je
cmp
sbb
push
outs
ja
push
shl
mov
or
rcl
mov
fs
pop
ret
inc
inc
mov
push
daa
and
es
and
ins
push
outs
repz
and
ret
mov
push
mov
out
je
idiv
idiv
inc
jne
sub
dec
jmp
cs
je
mov
jmp
(bad)
rcr
ja
je
cmp
push
inc
cmp
inc
cmp
out
test
aam
xor
push
pop
addr16
ret
nop
fild
clc
call
in
add
push
push
mov
mov
cmps
mov
mov
push
xlat
neg
neg
inc
clc
inc
push
push
push
mov
mov
mov
ja
jge
out
push
or
(bad)
movzx
or
imul
inc
adc
pop
xor
push
push
add
ret
(bad)
in
in
mov
or
jmp
pop
pop
dec
pop
ret
out
aam
xor
mov
mov
outs
add
mov
push
mov
mov
movs
stc
dec
mov
mov
adc
clc
lock
cmp
cld
lock
adc
outs
jmp
inc
xor
call
sub
lods
mov
inc
or
je
adc
mov
or
not
out
xor
push
(bad)
call
cmps
int3
into
lock
add
xor
adc
jb
inc
les
cld
inc
pop
sub
mov
call
mov
mov
add
pop
mov
call
inc
add
gs
bound
add
dec
aaa
add
movs
clc
sbb
cmp
or
in
cmp
cld
in
lock
jb
inc
aam
mov
mov
sahf
scas
lea
adc
mov
mov
in
mov
pop
mov
mov
pop
mov
or
or
lea
pushf
fsubr
lea
out
pushf
mov
mov
dec
imul
inc
mov
add
or
or
fmul
es
or
inc
and
or
jns
and
enter
xchg
addr16
adc
test
in
jbe
loop
mov
int3
xchg
retf
leave
in
aam
fcom
bound
dec
add
sbb
xchg
inc
popf
mov
loop
shr
movs
and
dec
sub
or
push
sbb
call
aas
adc
popa
mov
es
adc
inc
push
or
or
push
ret
ds
xor
mov
in
or
inc
enter
add
push
jns
int3
or
into
lock
add
ret
retf
mov
inc
jae
repz
add
(bad)
add
ss
ret
sbb
movs
lea
jl
mov
(bad)
(bad)
bound
adc
int3
add
adc
sub
add
cs
pop
pop
in
sti
xchg
mov
push
push
das
lock
or
or
scas
call
lock
cld
ja
pop
add
test
je
das
push
invd
fisttp
lods
ret
lea
add
call
aaa
inc
adc
nop
push
cmp
or
inc
or
or
out
sub
hlt
mov
cmps
hlt
movs
(bad)
mov
clc
mov
push
enter
or
or
dec
hlt
rol
(bad)
hlt
in
mov
or
add
mov
pop
adc
pop
or
or
push
adc
cmp
aaa
pop
fld
aaa
(bad)
shl
cli
adc
jno
ds
cmp
dec
cld
push
mov
stos
rcr
fsubr
xchg
dec
adc
in
and
jbe
les
push
sbb
adc
or
xchg
push
mov
xlat
xchg
adc
add
and
add
cmp
jne
adc
push
mov
shl
or
pop
mov
aam
sbb
ret
(bad)
pop
sbb
loopne
repnz
sub
pop
scas
sbb
nop
pop
inc
push
inc
and
pop
push
and
add
push
xor
fsub
push
or
push
mov
pop
sub
jnp
xchg
mov
push
arpl
add
push
cmps
mov
loopne
or
data16
out
xor
sbb
ret
jne
into
sub
mov
mov
aam
cmp
test
clc
stos
pop
outs
inc
in
inc
add
fsubr
jecxz
add
xchg
hlt
ret
call
or
cld
(bad)
out
clc
adc
push
cld
mov
sti
retf
mov
mov
in
pop
cmp
fsub
les
test
xchg
mov
fcom
xor
jp
in
fdiv
fptan
fdiv
fidiv
std
jl
or
ror
cmp
rcl
and
fcom
mov
jmp
test
cmp
mov
xchg
push
stos
xor
add
pop
mov
inc
test
mov
jmp
add
das
js
mov
iret
dec
hlt
sub
enter
call
mov
lods
cmp
(bad)
(bad)
lock
push
mov
and
or
push
aad
jns
mov
call
fadd
(bad)
das
dec
shl
dec
int3
mov
arpl
push
cmp
xor
(bad)
fstp
lock
inc
mov
retf
gs
jp
pop
push
and
cld
clc
push
xchg
fs
lock
shl
jbe
sahf
cld
and
pop
scas
push
xchg
imul
or
inc
je
retf
mov
push
inc
adc
in
inc
sbb
scas
mov
and
push
dec
sub
push
call
xor
pop
test
mov
cmp
mov
inc
fiadd
jle
mov
inc
cmp
pop
loop
das
(bad)
loope
and
push
sbb
iret
arpl
xor
sbb
cs
ins
xchg
(bad)
ror
scas
cmp
add
cmp
jne
push
and
jle
mov
dec
pusha
pop
out
and
pop
idiv
je
test
jne
call
mov
mov
push
push
push
mov
add
aaa
lock
pop
sahf
rol
stos
pop
in
ret
add
ror
sub
jae
xlat
(bad)
adc
lods
mov
push
lods
push
sbb
inc
xchg
pusha
(bad)
jmp
dec
jns
pop
test
or
pop
adc
or
gs
cmp
xchg
mov
in
and
or
adc
or
or
sub
ins
dec
push
mov
push
jecxz
out
or
in
fwait
not
jmp
not
(bad)
js
jecxz
push
cmps
or
clc
mov
add
or
not
mov
pusha
pop
mov
in
or
loopne
pop
mov
xchg
add
mov
call
fild
rol
mov
push
in
push
push
lock
ret
adc
or
enter
das
scas
mov
adc
in
fild
inc
add
sbb
fisttp
mov
push
jl
xor
mov
pushf
mov
sbb
mov
movs
call
cmp
ja
and
stos
enter
jae
mov
or
inc
add
cmp
int
rol
jne
int3
jbe
and
in
ins
int
inc
rcl
mov
push
or
pushf
push
mov
mov
mov
pop
sub
or
sbb
push
mov
adc
rcl
out
rcl
shl
add
push
neg
mov
jno
sbb
push
cmovge
call
outs
pop
icebp
scas
enter
inc
inc
fld
or
hlt
test
lods
or
and
das
outs
aad
fst
mov
mov
jbe
or
push
jge
add
ret
nop
iret
and
adc
fwait
dec
push
call
jb
sbb
push
popf
xor
jmp
hlt
adc
sub
add
sub
in
loopne
push
push
add
scas
in
or
jmp
popa
hlt
pop
inc
mov
jb
pusha
loopne
or
push
xor
loop
sbb
add
pop
adc
enter
add
leave
pop
shl
loope
jle
cmp
ja
test
cli
test
push
stc
inc
sahf
out
adc
sbb
jns
das
xor
jns
out
pop
push
pop
gs
sahf
out
ja
or
xchg
fwait
mov
mov
test
ud2
rol
or
add
mov
cld
or
or
mov
sbb
mov
or
add
(bad)
pop
ret
xchg
cmps
mov
lea
pop
add
mov
sub
cld
cmp
fwait
pop
dec
ins
outs
push
adc
out
comiss
jp
dec
repz
mov
inc
push
cmp
repz
outs
js
stc
cmp
repz
in
jns
cmps
xor
xchg
mov
sahf
out
pop
(bad)
push
loopne
hlt
(bad)
cmp
pop
jl
(bad)
loop
dec
outs
xchg
or
(bad)
and
push
out
sahf
out
push
mov
cli
iret
repz
xor
call
add
and
inc
mov
bound
add
das
push
cmp
dec
push
jnp
dec
adc
ror
add
dec
jp
out
push
dec
outs
(bad)
xchg
push
jmp
add
ss
adc
pop
lods
pop
fs
mov
inc
add
xchg
mov
xor
xchg
cld
xchg
inc
adc
in
mov
inc
or
dec
adc
adc
or
pop
or
in
adc
xchg
dec
xchg
or
add
nop
mov
sbb
jecxz
and
out
and
add
mov
xchg
mov
inc
stos
or
inc
adc
cwde
pop
push
addr16
stos
in
sbb
add
sub
or
ins
(bad)
or
push
rcl
and
inc
aad
ficom
call
add
add
xor
or
mov
or
mov
push
or
adc
add
push
inc
ret
push
outs
int3
mov
inc
xor
inc
add
sub
call
mov
dec
scas
xchg
add
clc
pop
loopne
lds
jbe
loopne
and
pop
cmovae
push
xor
adc
jmp
xchg
jmp
jmp
leave
inc
add
mov
ret
cmps
xchg
sub
clc
xor
add
cmp
sub
rcl
dec
xchg
loope
(bad)
shl
jne
mov
jno
sbb
push
inc
sbb
jecxz
push
jbe
sub
and
dec
push
sbb
jmp
sub
add
rcr
rol
push
sbb
push
add
mov
cld
add
add
lea
push
(bad)
clc
or
adc
test
pop
clc
push
ja
outs
or
jae
mov
cmp
ja
std
push
sub
mov
test
or
add
add
mov
pop
push
repz
cdq
push
cmps
mov
repz
ret
rcr
in
sti
or
add
dec
mov
out
shl
add
or
ja
test
or
or
or
xchg
retf
or
pop
sbb
retf
cmp
sub
or
cmp
das
adc
ror
or
inc
mov
ret
ss
ret
adc
add
sub
jae
push
push
mov
jb
stc
rcl
(bad)
adc
jno
pop
cwde
jbe
xchg
add
add
neg
(bad)
or
xor
shr
out
fsubrp
cli
cmp
ds
xor
pusha
sbb
loope
inc
or
xor
and
ds
xor
sub
mov
sub
dec
into
push
cmp
xor
or
fiadd
iret
fisttp
out
cmp
adc
and
jae
pushf
cmp
push
pop
jb
iret
ja
cdq
cmps
pushf
cmp
repnz
rcr
inc
sahf
pushf
pushf
in
sti
or
scas
sbb
add
xchg
push
push
add
push
sbb
xchg
push
cs
or
dec
sub
pop
push
sbb
and
adc
shr
inc
mov
add
dec
movs
repnz
dec
adc
aas
adc
xor
and
and
daa
adc
movs
sub
or
push
cpuid
fbstp
push
adc
sbb
adc
pusha
or
or
and
inc
test
cmps
or
in
lods
add
in
repz
jbe
dec
(bad)
push
out
clc
push
repz
jnp
adc
and
ds
lock
out
cli
jns
xchg
imul
and
add
das
ret
jmp
mov
and
sbb
bsr
adc
pop
test
sbb
loope
inc
mov
sbb
nop
ds
push
adc
cmp
jle
jmp
(bad)
and
push
mov
add
mov
into
sahf
addr16
shr
fisttp
pop
cs
push
jns
out
popa
outs
jge
cdq
dec
dec
sahf
out
mov
sar
jns
scas
sti
loop
xor
mov
or
and
imul
jl
or
mov
ror
adc
(bad)
mov
or
xchg
das
mov
das
aaa
or
jl
push
das
push
iret
push
and
jns
sbb
sub
cmp
add
nop
xor
adc
push
ret
xlat
add
add
add
push
xor
xor
inc
or
or
fst
or
xor
jl
cmp
aaa
dec
jo
mov
or
lods
pop
popa
js
xchg
adc
adc
std
es
pop
mov
std
add
inc
lock
sub
jne
xorps
cmps
ror
or
push
push
inc
adc
mov
mov
call
cmp
loopne
stos
xchg
mov
stos
pop
and
or
retf
aas
stos
add
sbb
(bad)
stos
adc
pop
and
stos
pop
(bad)
test
sbb
and
ror
stos
sub
sub
add
ins
add
fiadd
add
xchg
push
scas
push
aaa
(bad)
std
add
pusha
add
xchg
vmwrite
jnp
dec
loop
repz
add
adc
jns
out
dec
pop
imul
(bad)
call
ret
and
fwait
and
push
mov
adc
jl
lds
adc
sub
stos
push
mov
sbb
push
or
xchg
addr16
data16
xchg
xchg
add
(bad)
comiss
mov
repz
mov
jns
out
add
sub
out
sahf
out
push
bound
mov
sbb
mov
push
xchg
ret
pop
inc
adc
inc
aas
adc
icebp
pop
or
mov
icebp
inc
and
jns
push
and
add
aaa
jnp
mov
adc
not
add
pop
out
mov
cmp
xor
dec
pop
rol
ret
mov
add
mov
pop
sar
aad
or
mov
dec
dec
repz
scas
adc
in
ror
push
in
bnd
cdq
in
adc
sbb
add
cmp
add
or
sbb
int
fist
nop
loop
shl
adc
adc
push
out
push
jns
or
(bad)
repz
adc
outs
es
push
sbb
into
repz
cmp
jb
pop
adc
jecxz
or
and
imul
mov
sbb
sbb
jae
xchg
jns
sbb
pusha
js
and
(bad)
sbb
sar
int3
test
popf
adc
add
lods
ret
inc
adc
rol
mov
out
std
or
sbb
daa
add
repz
push
test
shr
and
add
inc
adc
mov
mov
aaa
paddusw
ret
add
xlat
sbb
mov
and
jnp
out
sub
xchg
scas
cmp
inc
dec
stos
js
and
push
lea
push
add
push
lea
push
and
or
mov
inc
or
push
imul
jg
sbb
adc
and
xor
out
sahf
test
adc
sahf
out
sahf
adc
adc
push
pop
jns
out
sbb
sbb
sbb
and
call
and
and
mov
nop
push
push
xor
cmp
repz
push
addr16
iret
repz
call
cmp
add
call
repz
inc
push
data16
cdq
cmp
repz
mov
repz
call
out
push
push
sub
dec
cmp
repz
fs
or
mov
and
and
cwde
ret
and
and
pop
adc
pop
push
mov
sbb
es
and
cs
push
or
and
and
retf
movaps
sub
jb
in
xor
xor
pop
push
mov
sub
push
inc
retf
dec
pop
dec
sbb
in
dec
sbb
pop
push
mov
sbb
push
cs
sub
pop
sub
xchg
pop
sbb
xchg
cmps
push
jns
arpl
cmps
push
jns
dec
and
push
jns
xchg
and
and
jns
xchg
cmps
and
add
test
pop
and
sub
test
and
sbb
test
push
sub
mov
mov
add
push
les
sub
jb
je
dec
or
push
add
or
mov
or
xchg
sbb
fild
adc
jge
(bad)
adc
fisttp
dec
js
jae
inc
rol
sbb
jns
fwait
push
pop
cs
pop
pusha
out
sahf
data16
nop
aad
movs
loop
scas
mov
ret
in
scas
(bad)
mov
or
pop
retf
out
add
jg
retf
add
mov
bound
jae
iret
repz
xchg
cmps
mov
fldln2
cmp
or
sbb
and
ss
iret
jae
jae
pusha
outs
jl
add
add
or
ins
sub
ret
and
mov
pop
and
and
and
mov
or
or
test
ud2
add
push
cmps
mul
adc
ja
jno
add
mov
imul
lock
xlat
mov
ret
add
push
test
add
leave
add
mov
sbb
adc
call
jge
jl
jbe
pusha
adc
push
or
arpl
or
inc
pop
sbb
or
scas
jmp
sub
and
jnp
into
dec
mov
jne
jl
jb
xchg
loop
or
cmp
push
add
and
jns
out
sbb
or
ret
push
out
aas
ret
and
add
out
mov
sub
xor
lock
out
aaa
and
or
jmp
or
adc
fild
or
mov
sbb
pop
jbe
clc
fisubr
push
test
repz
pop
repnz
rep
jg
mov
add
sbb
jnp
clc
push
mov
stos
xchg
test
adc
mov
loopne
and
add
sbb
xchg
and
and
mov
inc
lea
xchg
and
sub
or
mov
jno
jecxz
adc
arpl
ds
cmp
xor
mov
scas
scas
cmp
adc
mov
mov
sbb
and
or
sub
lds
pop
stos
jns
adc
popa
inc
test
sbb
add
pop
test
jns
neg
pop
and
push
cld
sahf
out
out
or
sbb
es
push
sbb
inc
jno
adc
and
lahf
iret
xor
aas
mov
or
iret
sbb
xor
and
mov
add
mov
pop
jg
pop
clc
(bad)
xchg
xchg
in
rcr
mov
pop
ret
inc
ds
repz
fsubrp
cli
or
xor
push
and
pop
or
push
sub
add
inc
test
cmp
test
daa
stc
test
adc
push
sub
add
or
sub
adc
inc
and
pop
ret
sub
jae
cmp
loopne
loope
je
mov
jne
mov
and
mov
push
pop
ret
mov
outs
mov
test
adc
cmp
js
fcomp
(bad)
jl
or
add
ret
mov
pop
sbb
dec
pop
js
les
dec
fmul
sti
and
call
xchg
pushf
nop
dec
xchg
xor
outs
cmps
icebp
pushf
inc
cmp
outs
sub
(bad)
clc
sahf
(bad)
adc
ret
xor
push
dec
imul
cmp
xor
repz
adc
inc
int3
test
je
push
mov
call
sti
sub
repz
popa
inc
call
loopne
mov
push
rcr
sti
sub
(bad)
cmp
xchg
push
cmp
sbb
adc
lahf
movs
in
and
mov
sti
xor
push
push
push
and
(bad)
(bad)
(bad)
in
test
mov
sbb
xchg
adc
aas
or
popf
jns
movs
push
outs
imul
ins
fs
pop
adc
add
dec
pop
out
outs
mov
pop
in
das
cli
push
test
addr16
js
fstp
cmps
mov
mov
and
pop
sub
dec
add
push
ret
dec
pop
popf
push
mov
xor
fiadd
movs
lahf
mov
(bad)
lock
outs
push
pop
and
cmp
or
xchg
(bad)
aaa
pop
rol
aaa
loope
adc
movs
inc
retf
pop
emms
and
cmp
mov
loop
test
dec
mov
sub
push
mov
or
or
add
push
add
sub
add
out
mov
add
(bad)
nop
xchg
push
xor
or
shl
or
xchg
add
add
sbb
ja
add
add
add
mov
add
ins
push
xor
(bad)
ficomp
pop
hlt
push
sub
push
dec
(bad)
out
das
imul
push
dec
loopne
pop
xchg
clc
xchg
test
int3
xor
jp
mov
fld
ror
(bad)
xor
add
loopne
or
loopne
ja
xchg
push
ins
inc
xor
add
pop
pop
add
cmps
xlat
xchg
jns
arpl
inc
popa
push
mov
sub
sti
push
(bad)
push
rcr
pop
sub
push
push
ins
dec
push
les
xlat
mov
push
xchg
aaa
lds
pop
adc
popa
je
test
test
inc
push
sbb
pop
int3
daa
dec
dec
outs
push
sbb
sub
lahf
psubusb
sub
dec
pop
cmp
cmp
ss
pushf
pushf
mov
in
das
dec
dec
dec
inc
dec
cdq
fisub
xor
daa
daa
and
leave
out
xchg
xchg
xchg
daa
and
enter
loopne
xor
pop
into
leave
mov
pop
fwait
add
inc
sub
sbb
push
sbb
call
xchg
inc
mov
test
add
add
add
loopne
rcl
mov
inc
xchg
pop
add
add
sbb
xor
es
inc
add
mov
jmp
jo
add
(bad)
inc
mov
add
in
pusha
add
pop
sub
and
ror
mov
sbb
add
mov
push
xchg
pop
add
sub
sub
xchg
jae
or
jno
adc
dec
xor
dec
dec
jno
add
and
pop
or
and
mov
lahf
or
sar
ret
pop
and
pop
push
mov
or
mov
mov
push
jae
pusha
add
inc
fwait
mov
add
and
add
sbb
or
add
push
dec
mov
sbb
cs
fdivr
aad
inc
mov
add
xchg
mov
push
or
push
add
sub
mov
out
lahf
mov
add
xor
pop
or
imul
shr
xchg
inc
add
loop
xchg
xchg
add
dec
mov
xor
push
adc
mov
jne
ss
popa
outs
ja
sbb
mov
or
retf
xor
cwde
lods
ins
xlat
sbb
fstp
sub
sbb
sub
imul
inc
add
cld
cmp
je
inc
and
mov
push
add
mov
pop
mov
in
int
add
fsubr
adc
retf
xor
sbb
mov
(bad)
push
jl
scas
or
ret
shr
mov
mov
lods
mov
xor
jns
in
mov
mov
mov
inc
aad
xchg
xor
mov
js
adc
mov
add
sub
pop
ror
cmp
push
(bad)
div
mov
cwde
mov
cmps
std
jae
mov
mov
inc
jne
sbb
xchg
aam
xor
push
dec
popf
(bad)
outs
fs
mov
lea
ins
mov
pusha
dec
or
and
add
repz
add
scas
and
lock
ficomp
jns
es
sub
pushf
dec
cmp
out
ret
or
lods
aaa
nop
in
add
push
aaa
xchg
jo
sbb
cmp
cmp
dec
or
sub
mov
fild
jb
lock
xor
rcl
leave
cld
push
call
int
ror
mov
mov
pop
outs
sbb
pusha
ins
sub
mov
shl
add
in
enter
in
mov
loope
and
mov
lock
cmp
(bad)
jmp
push
bound
sbb
pop
adc
inc
in
add
dec
jnp
sub
loopne
imul
push
outs
push
pusha
pop
not
pushf
in
cmc
idiv
mov
add
sub
jb
or
jb
adc
(bad)
push
inc
add
add
cwde
std
mov
or
dec
je
push
aaa
push
jmp
fild
leave
add
movs
add
addr16
out
jne
inc
ja
jno
mov
jl
or
add
mov
lea
mov
inc
inc
and
and
xor
xor
xchg
das
sbb
or
fstp
pop
dec
scas
rol
pop
push
and
dec
out
xrelease
jmp
and
dec
in
add
add
push
push
cmp
in
pop
rcr
add
jle
jo
and
sub
or
ins
jmp
add
mov
in
or
vorps
push
ret
mov
sub
pop
mov
sub
cmps
rcr
je
xor
(bad)
pop
pop
sbb
jmp
jb
add
sub
jb
or
add
sbb
das
loopne
xor
(bad)
mov
mov
jecxz
push
ret
mov
add
cmp
ja
lods
cmp
lds
fldcw
mov
inc
sahf
xchg
iret
mov
repz
out
cmp
cmp
out
jns
in
aas
push
xchg
adc
clc
xchg
add
je
mov
jmp
adc
add
push
xchg
mov
cmp
das
lods
sbb
jmp
xchg
or
(bad)
push
hlt
mov
xlat
lods
arpl
sbb
or
mov
mov
pop
inc
pop
add
inc
add
cld
or
arpl
outs
and
clc
sub
bswap
(bad)
mov
jae
or
and
pop
bound
out
sbb
xlat
add
mov
mov
jle
xchg
cmp
dec
sub
or
jne
xor
adc
cwde
add
cwde
adc
mov
in
inc
adc
mov
adc
aam
add
nop
and
ins
ja
std
xor
mov
xor
jge
add
mov
pusha
dec
daa
and
(bad)
lea
dec
cmps
je
(bad)
pop
or
push
push
lock
push
out
(bad)
leave
push
fmul
and
mov
fstp
or
add
or
mov
pushf
sbb
push
lea
sbb
dec
jmp
sbb
stos
test
jge
aaa
xchg
sub
call
dec
xlat
sub
adc
pop
shl
and
mov
mov
mov
mov
inc
mov
add
or
sbb
or
add
xor
and
add
inc
nop
pop
and
mov
inc
cmc
ret
nop
lods
lods
imul
jge
test
jo
clc
push
call
fucom
jmp
mov
add
sbb
sub
jl
or
dec
lock
xor
mov
sbb
adc
clc
mov
test
sub
jl
add
inc
scas
call
fstp
and
or
mov
sar
addr16
cwde
inc
popa
mov
xor
sbb
fucomi
xor
test
je
jmp
sub
push
lock
enter
pop
dec
and
xor
data16
outs
pop
add
mov
xor
retf
pop
adc
xor
icebp
rcr
fimul
popf
or
push
sti
mov
mov
ret
les
in
cmp
xchg
fs
mov
push
xchg
sbb
cmp
js
xchg
loopne
push
(bad)
loopne
and
fild
retf
movs
and
out
ja
cmp
or
or
daa
jmp
aad
retf
xlat
adc
add
daa
dec
or
loop
mov
fimul
pop
and
push
inc
dec
inc
pop
idiv
sahf
push
jecxz
push
push
push
jl
aas
and
into
fwait
mov
push
js
xchg
icebp
sbb
les
mov
adc
pop
jmp
ss
fwait
adc
enter
push
aas
adc
xor
xor
sub
ins
sub
out
cmp
push
stc
sub
adc
and
icebp
xchg
out
sbb
inc
retf
push
test
repz
shl
sbb
pop
enter
sbb
adc
ds
adc
nop
or
nop
or
adc
sbb
daa
pop
xchg
mov
and
addr16
ret
leave
sub
(bad)
sbb
ret
inc
sbb
push
inc
jmp
pop
push
loope
mov
add
mov
lea
push
mov
cli
sub
addr16
adc
add
pop
(bad)
push
js
pop
push
push
jmp
xlat
loop
loopne
aam
enter
add
sar
fsubr
xor
mov
dec
imul
pop
out
adc
ins
rcr
(bad)
xor
or
push
shl
adc
or
dec
cmp
mov
sub
mov
jnp
sub
xchg
in
xor
mov
test
inc
fadd
add
(bad)
cdq
add
sahf
stos
cmp
pop
pop
fs
pushf
out
push
jbe
and
les
clc
fs
mov
push
lock
js
add
mov
dec
cmp
mov
adc
jmp
or
jmp
or
adc
add
iret
iret
jmp
push
jmp
pop
div
mov
cmp
das
inc
push
jno
andnps
pop
in
pusha
pop
out
shl
fnsave
sub
test
dec
adc
scas
dec
(bad)
push
jl
and
lods
jno
das
out
ja
movs
fiadd
adc
jno
jb
sbb
and
ins
(bad)
dec
in
xor
outs
sbb
or
add
pop
in
stos
xor
sbb
and
jmp
add
jl
jno
aaa
cmp
ja
fistp
and
push
bound
pop
fidivr
cmps
dec
inc
push
ss
dec
xor
adc
inc
xor
outs
movs
addr16
and
mov
adc
outs
fdivr
idiv
das
push
push
sub
mov
mov
push
jbe
xchg
mov
or
push
add
push
sub
neg
aam
clc
cmp
sbb
add
xor
or
sbb
call
lods
add
or
test
ret
je
les
or
add
pop
add
nop
loop
cmp
mov
pop
cmp
pop
add
out
pop
or
jmp
jecxz
sub
adc
pop
add
pop
jg
mov
mov
in
pop
pusha
aad
(bad)
clc
sbb
outs
add
push
pop
sub
inc
aad
jl
push
stc
pop
ja
mov
out
shl
dec
ror
loopne
push
add
or
loopne
loopne
int
add
sbb
cmp
lods
leave
sbb
xor
push
adc
dec
out
sbb
or
jne
or
inc
jmp
sbb
add
retf
leave
jae
and
add
adc
aas
and
adc
into
in
sbb
and
movs
repnz
adc
or
in
and
sub
or
mov
xor
fistp
sti
or
mov
push
xchg
addr16
jae
push
je
mov
aas
out
or
push
repz
or
or
sub
pop
(bad)
into
repz
dec
push
cmp
sbb
mov
jnp
jnp
in
imul
sahf
ja
push
mov
sub
sub
sbb
and
fbstp
jecxz
cmp
ins
les
(bad)
and
scas
push
daa
or
dec
xor
and
mov
pop
je
add
pop
in
ins
sub
adc
or
jg
sahf
scas
dec
mov
mov
pop
push
jns
out
sbb
ror
clc
ins
jge
faddp
fbstp
push
add
mov
jp
sar
pop
xor
sub
imul
ret
inc
les
mov
mov
inc
inc
mov
push
or
jl
or
or
xor
mov
pop
or
inc
sub
inc
or
mov
inc
push
sbb
ss
inc
sbb
xchg
pop
xchg
dec
mov
inc
and
add
or
add
lock
push
add
das
dec
inc
leave
cmp
pop
enter
daa
adc
cli
in
mov
hlt
sub
jne
dec
in
pop
jmp
rcr
jmp
daa
pusha
inc
dec
int3
mov
outs
imul
into
repnz
pop
add
xlat
xor
push
jne
mov
cmp
je
sub
je
or
push
xor
sbb
jb
inc
push
inc
jae
or
push
xchg
mov
(bad)
xor
adc
fild
add
cli
xlat
push
push
sbb
clc
cmp
dec
mov
mov
add
daa
or
aas
jbe
sub
mov
jmp
add
cmps
sbb
loop
popf
xor
mov
(bad)
addr16
xchg
and
ds
pop
xor
jg
adc
pop
es
jae
fistp
add
inc
mov
and
mov
loope
push
adc
xor
lea
mov
fwait
fs
into
mov
sar
inc
pop
push
daa
mov
mov
out
(bad)
push
mov
cmp
and
inc
add
inc
adc
push
push
mov
inc
je
add
pop
idiv
or
inc
sbb
add
xor
and
hlt
cmp
adc
push
adc
popa
aas
push
and
(bad)
loopne
add
pop
pop
mov
ror
clc
sbb
jmp
test
fs
loop
xchg
clc
stos
fcmove
push
sbb
dec
sbb
mov
loop
inc
in
pusha
movups
pop
popf
add
js
xlat
or
cld
je
inc
mov
adc
fwait
shl
cmps
push
dec
add
mov
jmp
pop
cwde
mov
pushf
mov
xchg
inc
or
cmp
ret
or
fnstsw
test
pop
xor
fs
mov
jmp
loopne
mov
mov
cmp
mov
mov
jmp
or
mov
pop
mov
into
inc
jmp
push
inc
cmps
push
lock
sub
jne
xchg
aad
test
mov
lock
out
mov
push
ret
jmp
ret
mov
test
mov
add
sbb
clc
xlat
inc
rol
or
push
adc
push
(bad)
jecxz
jbe
aas
out
aaa
fcom
and
add
dec
add
inc
lock
pop
inc
hlt
push
push
dec
ds
jae
lea
arpl
mov
gs
lock
add
hlt
out
test
lods
dec
hlt
xor
dec
jmp
sbb
or
or
lds
imul
loopne
sbb
(bad)
jo
add
syscall
test
shl
and
add
inc
mov
or
cmps
fadd
add
das
idiv
adc
mov
add
or
sub
ds
adc
jo
or
fisubr
mov
adc
sub
or
lods
inc
cmp
rcr
pop
xchg
adc
das
test
jbe
mov
pop
mov
push
fucomip
cmp
add
das
push
inc
int3
pop
and
push
and
inc
test
and
push
out
sbb
xlat
jle
(bad)
mov
stc
in
sbb
pop
stc
iret
call
fcom
and
je
add
sbb
jg
pop
mov
lock
ret
or
jnp
ret
clc
mul
fisubr
xor
dec
mov
lock
mov
jge
or
xchg
jl
dec
mov
adc
sbb
loopne
adc
lahf
mov
lea
ss
push
pop
push
in
jne
mov
je
sbb
rcl
and
mov
rol
xlat
lock
sbb
ror
dec
and
dec
mov
add
ret
xor
pushf
(bad)
cmps
jbe
inc
inc
(bad)
pop
xchg
adc
ret
mov
jne
mov
inc
or
pop
mov
jp
data16
pop
jecxz
lea
hlt
sbb
mov
inc
mov
popa
add
or
or
mov
dec
xchg
addr16
nop
leave
mov
pop
iret
add
test
pop
fsub
mov
(bad)
cmp
ret
(bad)
pusha
inc
push
fs
xlat
(bad)
push
mov
fisub
aaa
sbb
dec
push
xor
in
xor
adc
test
pop
inc
mov
jg
add
icebp
mov
dec
pop
xor
push
inc
inc
(bad)
ficom
jmp
jmp
mov
je
add
std
mov
jo
or
cmp
inc
mov
sub
sbb
dec
lea
sbb
lods
dec
dec
call
xor
pop
fadd
cmp
test
dec
inc
das
popf
loopne
in
xor
sar
es
lods
rcr
loopne
sub
add
rcl
mov
pushw
add
inc
mov
or
or
pop
inc
fistp
bound
inc
or
pop
or
inc
fmul
push
pop
inc
sbb
dec
retf
imul
mov
push
cmps
and
shr
inc
inc
pushf
ror
clc
cdq
sbb
(bad)
(bad)
lea
dec
and
xor
iret
es
pushf
or
lock
mov
pushf
pop
aaa
in
adc
in
cmp
js
push
xchg
pop
xlat
call
pop
aas
dec
movs
inc
or
jnp
jo
jne
cli
jbe
add
mov
lahf
lock
xchg
xor
jle
jae
jge
das
cli
call
adc
add
sub
mov
push
pop
push
test
sub
mov
jge
mov
call
mov
inc
pusha
xchg
jle
call
pop
mov
in
enter
or
(bad)
(bad)
sar
push
or
mov
pusha
test
addr16
push
add
xor
jmp
add
adc
sti
sar
jg
mov
out
sbb
add
jmp
ins
sub
dec
pusha
adc
or
add
cs
push
inc
lea
nop
or
sti
fld
je
sub
ret
add
lea
out
push
pop
outs
or
xchg
jge
mov
lea
xchg
xor
jmp
jno
mov
push
retf
loope
xor
inc
push
inc
push
pop
xor
scas
mov
ret
adc
xchg
sbb
cmc
push
fdivr
ret
pusha
lods
sub
loopne
fmul
pop
pop
out
sub
aad
popa
cmc
popa
xor
lea
pop
aad
retf
mov
jne
daa
repnz
pop
sbb
cmp
xchg
push
daa
daa
adc
rol
lods
adc
push
std
cwde
sub
add
xor
call
xor
add
std
sbb
cmp
push
(bad)
retf
inc
sbb
jl
push
hlt
inc
nop
mov
xchg
mov
clc
addr16
push
pop
and
cli
mov
out
(bad)
jl
or
ds
jg
push
test
js
bound
xor
psubb
push
pusha
jle
into
aad
fwait
call
push
mov
cmp
lea
push
push
mov
xchg
sub
ret
dec
sub
inc
add
mov
mov
add
sbb
xchg
mov
sub
push
mov
jl
inc
rol
clc
mov
push
adc
mov
add
jne
loop
sub
fwait
sub
xchg
sar
jg
clc
jo
loope
mov
into
jle
dec
and
call
adc
or
add
sub
push
cli
ja
mov
dec
jne
or
pop
mov
outs
jne
loope
mov
xchg
pop
stos
sbb
or
and
out
call
aas
xor
pop
or
jnp
in
pop
ja
adc
pop
repz
mov
stos
enter
sub
das
adc
jmp
inc
jo
push
fwait
mov
sub
mov
jg
mov
sahf
push
call
and
lahf
sar
outs
mov
mov
movs
loopne
add
add
movs
push
loopne
aad
sbb
xor
sahf
adc
xor
mov
out
icebp
sub
lock
mov
fs
adc
cdq
mov
in
sar
ret
out
xchg
gs
cmp
inc
xlat
outs
das
jmp
js
mov
dec
mov
adc
mov
mov
fbld
or
and
sbb
enter
popf
ror
out
add
(bad)
js
jne
jb
or
dec
cmp
jle
outs
or
test
cmp
inc
adc
add
in
or
and
sub
or
les
mov
sub
sub
ins
adc
fdivp
push
pop
push
cs
xchg
rol
sbb
rcr
sub
shr
add
cmps
gs
fs
xchg
cmp
aas
mov
jl
or
cmove
pop
mov
pop
aam
or
iret
dec
shr
xor
dec
push
bound
ja
push
add
or
add
je
add
das
dec
xorps
dec
push
mov
pop
pop
mov
and
lock
xor
push
sub
not
jmp
cmp
sbb
push
rol
loope
jle
adc
cmp
jl
cld
rol
mov
cld
pop
pop
outs
add
xor
dec
adc
movs
xchg
add
mov
adc
clc
mov
imul
add
mov
push
sbb
ror
imul
xchg
adc
xchg
fsub
test
or
(bad)
jne
aaa
push
lds
mov
retf
outs
adc
loopne
je
push
imul
arpl
adc
and
loope
pop
aaa
jo
pop
clc
(bad)
pop
mov
sbb
nop
mov
xchg
sbb
shr
pusha
inc
es
xchg
push
loope
je
inc
and
dec
dec
mov
mov
lahf
je
pop
sbb
push
push
mov
xchg
lock
jg
test
stos
imul
(bad)
pop
mov
push
push
sub
rcl
inc
das
sbb
xor
out
loope
cmp
jl
icebp
add
cld
les
cmp
stos
les
fcom
adc
and
cmp
rol
pop
push
xchg
mov
jno
shl
sub
les
test
(bad)
or
xchg
retf
(bad)
addr16
add
fidiv
inc
sbb
stos
jo
in
(bad)
and
or
enter
and
test
and
and
inc
mov
dec
push
call
jnp
repnz
loope
mov
or
mov
mov
sbb
cmp
ds
jg
inc
sar
inc
sbb
not
sub
inc
repnz
push
and
dec
in
ins
mov
and
pop
add
inc
add
cwde
inc
mov
or
sbb
nop
cwde
shr
or
cmp
sub
fisttp
dec
js
ins
fild
cmp
iret
push
jns
cmp
mov
loope
in
sbb
iret
or
jo
mov
mov
inc
pusha
jg
sub
cmps
mov
shl
sbb
sbb
lods
ret
daa
je
sub
pop
les
lea
bound
nop
add
pop
xchg
sbb
mov
inc
mov
sbb
pushf
push
adc
mov
movq
out
add
add
inc
add
pop
fcomp
retf
dec
cmp
(bad)
ja
inc
jb
(bad)
ins
jp
mov
add
aad
stos
outs
(bad)
pop
jo
in
leave
mov
push
fst
and
outs
(bad)
pop
mov
outs
enter
xchg
inc
sub
and
loop
inc
outs
(bad)
outs
outs
sbb
mov
les
add
leave
xchg
sbb
sub
pop
in
mov
jo
push
xsaves
dec
pop
or
mov
pop
add
dec
mov
mov
or
out
add
mul
xlat
adc
adc
out
mov
sub
adc
push
lock
push
or
daa
jb
xchg
or
(bad)
(bad)
dec
mov
add
jmp
and
inc
dec
or
push
adc
sub
add
jne
fmul
sub
push
inc
out
fistp
cdq
cmps
adc
call
pushf
or
and
scas
mov
fcomp
add
(bad)
cs
or
dec
adc
add
and
fwait
add
loope
stos
xchg
pop
stos
call
aaa
push
or
xor
cli
mov
xor
sub
cmp
inc
xlat
out
pop
je
in
arpl
or
movaps
lea
add
js
sub
pop
adc
shl
sub
xor
inc
mov
(bad)
mov
ror
rcr
push
cwde
and
dec
cmp
lock
int
xchg
je
mov
and
or
in
inc
loopne
xor
xor
and
jecxz
lea
mov
push
cmps
push
and
add
rcr
add
ret
sti
sbb
retf
add
mov
pop
inc
xlat
jl
jle
or
or
pop
cmp
push
scas
adc
xor
or
jle
push
rol
call
pop
cmps
push
jb
in
in
jbe
lds
cmp
jle
shl
and
ja
mov
out
mov
xor
mov
jecxz
mov
fidiv
pushf
mov
jecxz
dec
in
js
pop
lds
ja
mov
adc
cmp
lahf
popa
push
push
cwde
ja
sbb
imul
lock
jecxz
ins
lahf
fsub
push
sbb
hlt
fisubr
jbe
iret
js
and
ret
xchg
ffree
ds
ins
icebp
mov
icebp
push
jmp
(bad)
aad
mov
dec
hlt
mov
or
inc
jecxz
enter
scas
fstp
mov
mov
push
adc
dec
lock
push
sbb
adc
adc
sar
pop
inc
and
or
jns
cdq
loopne
lock
add
rol
lods
dec
popf
xchg
cmp
sbb
inc
lea
inc
add
mov
and
cmp
cmp
inc
cmp
fucomp
inc
loop
dec
scas
cmp
push
push
pop
scas
jmp
push
scas
sub
xchg
clc
push
fadd
mov
dec
fcmovbe
add
or
mov
inc
bound
pop
push
or
push
pop
sbb
enter
pop
ret
scas
mov
js
mov
mov
sbb
ins
push
nop
jnp
mov
mov
mov
dec
jl
inc
adc
mov
and
jns
mov
mov
adc
movaps
loop
test
cmp
shr
in
rol
or
push
sbb
or
jg
popa
pop
enter
or
pop
add
ins
shl
dec
aaa
(bad)
rcl
push
and
dec
or
or
pop
(bad)
test
outs
out
lahf
icebp
sbb
mov
in
cmps
sbb
inc
cld
adc
jg
dec
movs
add
imul
es
outs
push
mov
add
(bad)
jle
out
push
fst
add
pop
outs
pushf
push
dec
inc
mov
jg
in
in
test
ins
mov
mov
call
outs
lods
loopne
inc
dec
push
adc
pop
outs
cwde
or
dec
xlat
cld
scas
loope
leave
dec
pop
adc
outs
pop
outs
push
jb
out
movs
dec
and
dec
jae
pop
pop
loope
mov
rol
(bad)
pop
(bad)
jl
pop
fist
push
xchg
dec
outs
and
sub
sub
jl
mov
adc
push
adc
loop
xchg
xchg
or
test
or
adc
dec
xchg
jno
mov
add
fwait
cmc
push
adc
adc
adc
pop
inc
xchg
in
sbb
or
rcr
cmp
mov
clc
lea
shl
dec
push
add
sbb
mov
ret
test
jo
xor
dec
xchg
outs
pushf
cmovg
cmp
shl
jne
or
jp
mov
imul
popa
jg
dec
js
rol
loop
adc
add
xchg
test
adc
icebp
sub
cs
out
jb
mov
mov
xchg
leave
push
add
(bad)
xor
pop
test
sbb
xchg
cmps
inc
sub
ret
loope
push
in
retf
xchg
or
sub
mov
lea
push
jns
aaa
push
test
jnp
or
adc
ins
xor
out
mov
outs
add
stos
xchg
je
jg
add
jmp
pop
or
pusha
sysret
into
mov
cdq
dec
jo
xchg
mov
add
dec
das
pop
jecxz
add
ja
lods
jne
or
jo
cmovg
ja
call
(bad)
jne
cwde
shl
dec
jb
xor
sub
sbb
cmps
out
sub
pcmpeqd
test
cmp
push
cmps
adc
lock
ja
adc
adc
pop
xchg
push
adc
cmp
push
pop
rsm
and
pcmpeqw
in
inc
mov
add
push
bound
adc
inc
movs
add
push
or
inc
push
mov
imul
inc
inc
sbb
call
fbstp
les
cmp
cmps
sub
test
addr16
mov
not
imul
mov
les
cmp
push
repnz
sub
sbb
mov
jb
cld
jnp
jge
rol
sbb
test
mov
pusha
pusha
add
iret
js
(bad)
loop
idiv
xchg
mov
and
xor
lea
inc
or
mul
lea
popa
push
in
nop
inc
and
jnp
retf
mov
jb
lods
adc
xchg
mov
rcl
add
cmp
adc
test
mov
mov
jg
(bad)
outs
and
inc
scas
in
int
or
xchg
cdq
cmps
nop
outs
jg
(bad)
out
mov
jle
mov
jmp
jmp
inc
fdivr
test
mov
stos
ja
hlt
adc
adc
ja
pushf
in
cmp
jmp
xor
jg
ror
into
dec
add
pop
push
rol
cmp
sub
jl
stos
rcl
push
addr16
loopne
cmp
pop
add
inc
push
(bad)
out
dec
adc
out
inc
adc
adc
xchg
pop
or
dec
jmp
test
pusha
cmps
xchg
dec
mov
imul
psubsb
pop
or
ror
push
sbb
call
inc
or
add
inc
leave
cmp
je
int3
jp
cmp
adc
sub
add
xchg
push
pop
test
dec
add
push
jg
shl
inc
mov
push
cs
dec
in
or
mov
cmp
mov
js
jl
add
add
dec
hlt
jne
add
inc
push
add
cmp
jl
jnp
mov
ret
push
in
ret
sub
add
cmps
pop
jb
jb
xchg
mov
adc
nop
sbb
stos
pop
push
test
jnp
pop
inc
scas
ret
adc
ins
sub
sar
inc
or
jnp
push
adc
adc
outs
adc
xchg
and
mov
call
xor
pop
rol
push
adc
or
dec
jne
test
enter
in
test
xchg
adc
sbb
or
in
retf
ss
dec
sub
add
ja
and
cmp
xchg
inc
jb
hlt
xchg
mov
(bad)
ja
add
xchg
pop
nop
cwde
dec
call
mov
pop
ja
mov
xchg
cwde
add
cmp
cdq
cmps
push
movs
and
ja
cdq
push
sbb
in
pusha
add
or
xor
call
out
add
jnp
mov
sub
aas
inc
adc
nop/reserved
xchg
xchg
mov
sbb
mov
aam
push
sbb
sbb
adc
add
jns
add
mov
leave
jb
add
adc
and
lds
dec
pop
xor
out
mov
rol
cmc
nop
cmp
movs
popf
sbb
xlat
imul
sbb
add
les
add
sub
xor
push
xor
xor
daa
lea
push
shr
pop
cmp
push
das
sub
outs
shr
jmp
add
nop
inc
mov
mov
mov
fist
sub
dec
lods
push
add
das
cmp
nop
push
repnz
int3
nop
fcom
mov
add
xchg
adc
mov
cmp
adc
xchg
push
arpl
outs
out
mov
daa
outs
mov
add
adc
mov
outs
xchg
add
sub
sub
jns
and
sub
add
add
outs
xchg
and
je
xchg
and
cdq
mov
pop
test
pop
repnz
outs
xchg
rol
test
cmps
cwde
pop
dec
jno
cmp
push
jbe
rep
and
pop
xchg
push
cmps
xchg
push
cmp
dec
pop
call
pop
add
sbb
mov
sub
inc
push
add
cmps
ret
cmps
push
adc
cmps
inc
add
retf
adc
popa
pop
in
test
fdivr
or
dec
sub
sub
mov
inc
cmps
int
and
cmp
outs
test
add
inc
bound
test
outs
loope
add
fmul
out
in
outs
add
xchg
dec
repz
mov
or
stc
sbb
xor
add
push
hlt
and
or
add
test
or
out
push
bound
addr16
cmp
popf
dec
cmp
gs
js
dec
loopne
adc
pop
hlt
and
dec
mov
stos
fisttp
and
daa
lahf
jbe
cmp
call
aam
rol
(bad)
int3
iret
inc
push
xchg
adc
mov
(bad)
fwait
dec
paddq
inc
jb
add
not
nop
shr
sbb
lock
cmp
sub
or
nop
cmps
mov
mov
mov
bound
dec
pushf
addr16
sbb
inc
test
inc
xchg
dec
lods
in
dec
sbb
call
mov
xlat
mov
rol
(bad)
out
scas
pushf
cmp
and
adc
(bad)
scas
stos
dec
push
adc
imul
movs
test
leave
fisttp
push
or
out
mov
cdq
add
jecxz
and
push
cs
mov
cs
retf
loopne
ror
mov
sbb
or
repz
lahf
aam
cmp
fwait
cwde
pop
lahf
mov
mov
push
call
mov
cmp
inc
mov
rol
mov
dec
movs
inc
add
mov
pop
jecxz
lds
hlt
lahf
enter
(bad)
nop
add
inc
sbb
(bad)
shr
out
mov
loopne
and
xchg
sub
adc
push
jnp
sbb
or
xchg
jle
add
add
mov
mov
movs
test
and
movs
jo
push
ds
adc
nop
and
inc
xchg
pop
sbb
mov
aas
fcomp
or
ins
sub
aas
clc
ficom
dec
mov
mov
les
sbb
aas
xor
ins
in
jg
aas
add
fadd
mov
pop
ret
daa
push
movs
imul
or
push
je
ins
gs
outs
outs
push
pushf
sub
imul
jae
and
or
lock
add
add
add
mov
push
adc
clc
xchg
adc
sbb
int3
in
push
test
add
loope
dec
das
jecxz
jo
add
mov
pop
pop
cmp
add
cmp
push
adc
push
cmps
cmp
lods
push
js
lock
xchg
mov
not
loopne
inc
cmp
mov
popa
inc
shl
and
rol
loopne
pop
mov
add
call
mov
sub
mov
or
add
add
inc
or
jnp
sub
add
pop
jg
test
mov
test
add
push
fmul
sub
dec
ds
or
pop
movs
push
imul
loope
inc
add
shl
jg
cld
scas
ins
push
imul
loopne
loope
cmp
add
xchg
pop
stos
mov
jnp
cdq
js
in
add
(bad)
test
imul
fild
mov
push
jo
pop
ds
adc
sbb
pop
adc
es
and
dec
stos
mov
out
inc
or
or
iret
popa
shr
mov
or
xlat
add
pusha
sti
imul
int
sti
inc
mov
or
mov
test
jns
push
mov
jmp
pop
cmp
add
dec
sbb
fidiv
push
adc
ins
dec
aaa
cdq
clc
adc
js
or
or
fwait
dec
shl
mov
(bad)
aad
pop
test
mov
pop
sbb
cmp
add
xor
add
loopne
fcomp
jo
mov
loop
call
ins
xor
aam
stos
mov
adc
and
test
push
xor
js
js
wrmsr
dec
push
movs
das
mov
jg
add
jg
cdq
cbw
sub
mov
les
ret
test
fcom
mov
inc
push
fcom
mov
mov
pop
rcl
movd
mov
rol
daa
daa
mov
mov
cwde
fcom
cmp
mov
enter
hlt
aas
les
enter
outs
xor
in
xchg
retf
add
cmp
jb
bound
outs
pop
iret
ins
jl
jmp
loope
repz
add
dec
add
imul
cwde
xlat
in
or
mov
dec
enter
dec
add
or
inc
pop
fisttp
push
clc
pusha
jno
inc
outs
xor
sub
xor
add
push
add
add
cmp
ret
add
outs
sar
add
dec
mov
dec
mov
ret
and
loop
or
fcom
mov
mov
sub
fwait
inc
or
push
mov
dec
pop
inc
dec
adc
add
add
pusha
jae
add
sbb
push
pop
push
dec
dec
inc
or
adc
adc
or
adc
add
add
sbb
and
and
and
inc
mov
les
add
adc
add
inc
sub
add
or
xor
adc
add
sub
adc
jns
jno
add
add
add
das
test
dec
mov
inc
leave
and
loope
dec
push
fwait
stos
aad
sbb
mov
les
sbb
or
adc
mov
sub
mov
push
loope
pop
jge
popf
cmp
sbb
iret
add
jmp
add
push
or
xor
jecxz
inc
add
xchg
jecxz
loop
les
jecxz
add
push
shl
or
cs
adc
push
sbb
(bad)
call
les
mov
sbb
dec
mov
movs
mov
pop
dec
retf
xchg
retf
out
loopne
add
jbe
add
jecxz
adc
das
sub
das
fs
das
xor
outs
out
pop
mov
sahf
mov
iret
js
out
dec
retf
mov
sbb
les
or
sub
sti
dec
mov
sbb
push
inc
ins
add
ror
mov
sbb
fldenv
and
ins
call
out
loopne
lds
push
nop
cmps
push
cld
mov
adc
scas
nop
je
mov
mov
sbb
add
popf
scas
adc
lock
scas
mov
add
scas
imul
mov
jae
fwait
loop
into
ror
xchg
out
mov
sbb
movaps
dec
dec
mov
and
rcl
xchg
daa
inc
sar
leave
leave
leave
enter
push
jnp
in
leave
mov
and
dec
ss
in
ins
movs
in
aas
aam
call
scas
movs
pop
rcl
loopne
inc
aas
lahf
or
scas
adc
dec
or
popf
cmovl
sub
popf
dec
cmp
enter
nop
lds
and
sbb
xor
push
dec
ins
inc
or
inc
daa
adc
retf
mov
movsx
jae
push
(bad)
inc
mov
mov
mov
seto
mov
push
sahf
mov
mov
unpckhps
and
ss
imul
add
stc
sti
rcl
push
adc
stc
and
xchg
lods
jecxz
int
add
adc
add
mov
int
adc
shl
xor
xchg
pusha
sub
inc
jecxz
add
push
add
pop
sub
dec
adc
nop
or
mov
add
in
xchg
inc
sub
mov
inc
repnz
mov
mov
movs
pushf
int
add
pop
mov
or
add
xor
adc
pop
test
loope
out
or
or
inc
pop
sbb
and
sbb
inc
pop
push
inc
or
push
(bad)
push
sub
adc
push
xor
add
mul
sbb
aaa
pop
adc
aam
ret
xchg
xor
cmp
pop
xlat
out
daa
add
aad
add
add
pop
call
adc
sbb
xor
xchg
(bad)
adc
push
mov
mov
xchg
loop
cs
js
fsub
mov
xlat
aas
add
jno
les
repnz
nop
sar
push
add
pop
pop
stos
sub
xchg
jnp
push
fld
or
shl
or
push
test
rcr
cwde
retf
and
mov
cmp
dec
sub
mov
mov
push
mov
push
inc
lock
inc
test
pushf
(bad)
dec
adc
dec
in
mov
jb
mov
bswap
ins
mov
hlt
pop
fmul
fdivr
pmulhuw
leave
leave
outs
stos
out
(bad)
in
fs
jns
jb
inc
mov
or
cmp
cmp
push
jns
ret
cmp
stc
das
loopne
nop
fistp
xor
aas
psubsb
mov
pop
sbb
push
dec
cmp
add
mov
mov
cmps
adc
enter
add
jnp
rcl
lea
cmp
push
jns
sbb
adc
inc
mov
lea
popf
popf
mov
xlat
movs
adc
add
lea
adc
inc
push
adc
mov
lea
push
lea
add
sti
push
enter
js
push
xor
shl
and
imul
push
(bad)
sti
adc
mov
lea
lea
lea
ror
push
lea
mov
or
lea
pusha
pop
xor
sbb
xor
xor
push
lea
dec
lea
mov
lea
adc
repnz
sub
mov
mov
mov
adc
(bad)
shr
pop
mov
clc
sbb
les
sbb
or
aam
sbb
or
push
les
lahf
lds
mov
adc
pop
xor
or
aaa
dec
popa
inc
addr16
into
cwde
sbb
dec
gs
outs
sub
or
mov
dec
sbb
dec
xor
sbb
push
dec
(bad)
mov
mov
push
or
push
adc
bound
lods
cmp
jnp
lea
mov
aaa
shl
inc
ja
ins
or
les
push
jg
or
nop
out
fist
call
(bad)
es
das
add
ds
out
cwde
(bad)
iret
fisttp
rol
or
int3
icebp
xchg
out
mov
sbb
or
cmps
push
nop
out
and
and
imul
pop
ja
mov
adc
mov
sbb
out
call
and
imul
data16
push
sbb
fcom
adc
sar
ret
jmp
lods
es
dec
push
call
mov
adc
cmps
out
dec
jnp
cld
and
in
fmul
imul
movs
in
jb
jecxz
jp
test
mov
jmp
ins
pslld
in
jnp
repz
in
jns
jb
dec
xchg
in
in
cmp
cmp
dec
call
mov
retf
dec
inc
sahf
es
pop
xchg
mov
loope
lock
mov
out
sbb
pop
inc
push
xor
inc
mov
xchg
adc
out
cmp
and
ins
jne
call
add
pop
or
stos
pop
add
pop
nop
pop
push
xchg
stc
add
call
cwde
test
or
add
inc
mov
dec
pop
mov
mov
or
inc
mov
mov
mov
pop
fwait
xchg
or
push
add
and
sbb
adc
les
mov
pusha
xor
aas
lea
inc
inc
mov
add
movs
add
adc
xchg
popf
lahf
sub
mov
stos
add
cmp
jno
sbb
xchg
sbb
jno
fwait
add
add
add
xchg
inc
pop
add
pop
cwde
je
adc
sub
push
arpl
nop
pop
xor
inc
sub
stos
push
pop
bound
mov
push
adc
pop
push
push
aad
sbb
add
sub
cmp
add
xchg
mov
ss
repnz
enter
nop
or
aad
mov
daa
lea
aam
les
add
mov
fmul
sbb
dec
or
call
repz
sbb
repz
sub
mov
cmp
push
das
imul
(bad)
fcom
test
mov
jecxz
test
mov
pusha
mov
hlt
pop
and
dec
sbb
xor
fsubr
cmps
call
mov
push
mov
mov
or
movs
stos
int
pop
pop
pop
push
inc
cmp
outs
pusha
add
sub
adc
mov
movs
inc
jg
lock
loop
cmc
aas
int3
push
rcl
fnstcw
das
push
test
fisubr
push
clc
inc
lods
sub
xor
xor
inc
xor
sub
imul
xchg
das
test
lea
mov
inc
jb
fwait
jecxz
clc
add
push
jb
and
test
cli
cmp
dec
inc
sahf
pushf
enter
mov
dec
dec
dec
mov
adc
dec
daa
daa
daa
daa
sub
xchg
std
dec
stos
aam
mov
(bad)
pop
xor
push
je
mov
dec
add
lods
fstp
lea
ds
add
nop
lds
and
sbb
sub
xor
cwde
lods
(bad)
or
or
fld
pusha
add
push
mov
fnstenv
push
mov
mov
mov
fstp
add
pop
and
inc
fld
fcom
lods
add
fldenv
sbb
and
lea
or
add
adc
fld
or
inc
sbb
sbb
add
imul
sub
push
add
imul
inc
mov
fstp
(bad)
mov
jge
and
inc
fnstcw
pusha
add
fst
dec
(bad)
hlt
inc
test
and
xchg
cmp
pop
popf
sub
inc
and
xchg
scas
call
mov
push
pushf
stos
fld
xor
or
or
pop
mov
sub
mov
xor
xchg
fstp
push
(bad)
push
jo
dec
rcl
adc
sbb
inc
mov
inc
adc
xor
clc
adc
inc
add
add
add
int3
comiss
mov
xchg
sbb
(bad)
les
(bad)
shl
fld
adc
dec
out
neg
cmp
add
sub
push
das
imul
ds
mov
push
dec
sahf
jno
add
(bad)
sub
aaa
jae
movs
add
std
adc
mov
cmc
sub
rol
and
rol
add
call
fwait
int
mov
into
jecxz
or
shl
movs
mov
fwait
mov
xchg
clc
pop
or
adc
push
add
dec
xchg
mov
pop
cmp
mov
mov
dec
push
xor
ins
lds
cmp
push
add
stos
add
mov
add
ds
push
pop
pushf
bts
xchg
xchg
xchg
daa
and
addr16
leave
enter
pop
dec
jg
fs
retf
push
fwait
xor
in
retf
cli
pop
or
jb
jb
(bad)
in
adc
cmp
cmp
dec
xchg
in
pop
or
dec
or
jbe
jo
ins
or
cvttps2pi
icebp
test
inc
mov
int
inc
inc
cmc
mov
lds
and
popf
or
mov
sbb
xor
cmp
adc
adc
sub
test
cmp
movs
test
push
add
xor
rol
inc
mov
mov
and
test
adc
clc
mov
xor
adc
test
lea
mov
push
dec
push
adc
rcl
test
test
pop
jg
sbb
sub
pop
test
(bad)
shl
sub
pop
test
lds
add
add
push
sub
add
jge
adc
push
cmp
je
adc
sub
add
push
test
adc
test
dec
aad
mov
add
aad
mov
push
enter
push
sub
adc
xor
sub
pop
add
xor
push
sub
mov
stos
inc
xchg
fldenv
push
xchg
dec
mov
js
les
aaa
ror
pop
call
inc
mov
lods
or
pop
jo
sbb
push
mov
cmp
sub
or
pop
les
add
mov
js
scas
out
adc
push
cwde
add
cmp
push
(bad)
add
je
jo
pop
xor
mov
inc
add
cmp
add
push
mov
push
pushf
or
pop
(bad)
mov
mov
mov
pop
loop
cdq
lea
or
or
pop
sub
out
retf
pop
xlat
mov
pop
xor
cmps
inc
add
and
das
sbb
push
sub
cmp
pop
std
outs
or
add
(bad)
adc
dec
aam
push
pop
or
add
outs
ds
jb
sbb
rcl
adc
shl
les
jne
xor
loop
imul
mov
push
test
cmp
adc
dec
fild
push
les
push
push
adc
mov
adc
bound
mov
inc
ret
adc
xchg
sub
and
pop
ja
bound
aas
sub
addr16
xchg
inc
push
aas
sbb
push
sub
mov
jne
jmp
sbb
inc
and
xor
daa
mov
dec
add
sub
bound
inc
xchg
sbb
adc
sub
jb
sbb
iret
cmp
mov
cdq
mov
sbb
cmp
mov
fild
push
enter
pop
inc
dec
addr16
adc
popw
popa
jp
call
ud2
adc
mov
and
sbb
add
retf
sub
addr16
jb
add
push
ror
rcr
ror
add
add
pop
(bad)
and
adc
fmul
icebp
ror
sbb
cmps
faddp
mov
push
jns
scas
outs
xchg
cmp
test
pop
sbb
cmp
cdq
jns
movs
push
fisttp
or
push
mov
int3
into
cmps
adc
sbb
xor
rsqrtps
sbb
pop
(bad)
mov
por
push
stc
and
xchg
pushf
jb
enter
sub
shr
test
mov
xor
add
add
mov
pop
lds
inc
in
cmps
test
cmp
push
add
mov
push
sub
sub
jns
mov
punpckhdq
sbb
add
add
and
(bad)
sbb
sbb
adc
inc
sbb
sbb
nop
sbb
sbb
sbb
pop
retf
sbb
push
or
(bad)
cmovne
pop
push
add
ficomp
dec
push
shl
mov
je
or
mov
mov
adc
sbb
shl
retf
mov
and
pop
test
inc
rcr
dec
add
add
(bad)
sbb
mov
jecxz
sbb
fmul
mov
lock
bndldx
in
inc
push
and
xor
push
out
push
dec
sub
push
jge
push
xchg
sbb
sbb
aas
loopne
pop
in
add
aas
fsub
das
dec
setne
adc
cdq
movs
push
rol
push
push
push
addr16
cli
mov
jb
sbb
mov
popf
push
movs
adc
xor
shl
xor
or
inc
mov
les
add
push
add
daa
mov
(bad)
aas
daa
adc
ds
mov
add
stc
pop
movs
and
mov
cli
mov
lahf
int3
and
je
mov
and
mov
test
sbb
sub
cld
cmp
mov
cmp
pop
adc
push
sub
dec
pop
aaa
dec
enter
push
xchg
sbb
or
inc
pop
adc
xor
dec
pop
sbb
push
mov
mov
sqrtps
retf
jg
stos
and
and
cwde
into
cmp
and
mov
and
cmps
mov
and
pop
hlt
daa
adc
sar
outs
xchg
paddusb
mov
xor
mov
scas
sbb
add
cmps
sub
je
scas
scas
dec
sub
stos
les
sub
jmp
je
push
cmps
scas
out
pop
mov
and
repz
or
cmp
dec
mov
pusha
mov
bound
iret
jnp
lahf
push
test
dec
add
lahf
call
(bad)
es
inc
sub
daa
daa
lahf
adc
sar
(bad)
lods
pmaddwd
ret
cmp
dec
xor
xor
xor
mov
xor
mov
xor
les
jno
sub
mov
sbb
popa
inc
mov
les
or
xor
and
xor
inc
or
test
add
jns
addr16
jno
(bad)
(bad)
dec
sbb
jl
dec
movs
sub
int3
into
dec
ror
or
cvtpi2ps
sbb
sub
push
dec
je
paddq
or
jge
test
xchg
mov
mov
mov
addr16
inc
mov
mov
dec
dec
sbb
aaa
mov
and
mov
xlat
xchg
mov
sub
add
xlat
pop
lock
daa
je
mov
ja
adc
das
or
stos
in
push
mov
jge
or
add
push
inc
test
lds
mov
jns
push
ret
or
or
inc
mov
daa
mov
loopne
sub
add
add
cmps
dec
dec
push
inc
outs
dec
inc
pusha
cmovbe
pop
mov
xchg
fiadd
or
ins
addr16
out
or
sub
and
dec
shl
std
inc
popf
sbb
or
ja
sar
jo
pop
sti
arpl
fs
outs
arpl
or
outs
adc
or
push
imul
jb
popa
ins
or
and
adc
shr
jle
or
loopne
push
xor
test
scas
enter
xor
push
js
imul
push
adc
jbe
push
push
retf
mul
jb
inc
push
sub
adc
mov
xchg
cmp
dec
(bad)
ja
add
xchg
pop
push
or
dec
outs
popa
fs
imul
mov
jb
cli
ret
xchg
ficomp
push
imul
ins
inc
imul
xor
inc
dec
jae
sbb
adc
ja
sub
push
mul
inc
cmp
mov
push
icebp
or
push
ds
outs
or
ret
dec
add
(bad)
jg
rol
frstor
jo
push
out
push
push
sbb
or
dec
adc
or
or
fstp
shl
xor
or
pop
xor
pop
loope
cmp
xor
xor
in
aas
call
cmps
xor
xor
jl
in
sub
leave
xchg
addps
inc
pop
and
inc
lahf
enter
mov
push
lock
dec
mov
ins
inc
test
push
inc
push
cwde
xor
xor
jo
adc
or
js
sbb
ds
dec
push
xor
push
and
mov
dec
pop
jne
test
(bad)
cmp
dec
cmp
jns
push
inc
push
add
aaa
ret
imul
sub
mov
adc
jmp
fs
gs
inc
sar
cmp
jg
adc
loop
(bad)
fwait
call
xor
lock
jmp
mov
movs
jns
pop
pop
add
lahf
daa
push
or
add
xor
sub
imul
sub
jnp
jle
or
jnp
fs
icebp
or
fs
push
jo
mov
jns
push
bound
mov
scas
out
and
cmps
cs
sub
xchg
jle
xlat
stos
inc
push
ins
(bad)
xor
mov
adc
push
inc
cs
cmp
cmp
sub
mov
cmp
jns
ss
ss
call
adc
imul
adc
out
cmp
pushf
retf
repnz
jbe
push
cmp
(bad)
sbb
mov
add
daa
mov
dec
pop
outs
psubb
adc
lock
cli
enter
adc
push
shl
mov
ss
clc
jo
xor
jg
push
inc
dec
ja
lods
dec
push
int3
or
imul
test
aam
pusha
jae
mov
ins
sub
nop
popa
loope
jp
or
add
jae
jo
dec
clc
cmps
inc
rol
sti
ret
imul
xchg
mov
inc
dec
add
mov
mov
and
fwait
sbb
xor
sar
jle
aaa
push
nop
adc
xchg
add
pushf
jnp
sbb
dec
(bad)
imul
sbb
les
add
mov
lea
pop
mov
outs
jae
jb
sub
aaa
add
inc
mov
add
pop
cmp
gs
adc
pushf
adc
icebp
add
dec
dec
mov
mov
push
dec
popa
scas
ret
dec
sbb
add
mov
gs
jns
fcom
xchg
mov
mov
jo
mov
add
adc
popf
xor
or
fcomp
dec
push
pop
inc
outs
cs
fld
add
adc
push
pop
and
or
mov
sub
or
sub
mov
pop
xor
pop
aaa
mov
sbb
std
and
sbb
adc
mov
cmp
dec
xor
sbb
push
push
enter
mov
js
and
sbb
loopne
mov
fisub
push
sbb
and
scas
pop
addr16
ds
aas
add
popa
ins
jg
adc
test
push
mov
shl
lahf
xor
dec
mov
je
jo
loope
inc
pop
adc
adc
sbb
add
arpl
loope
data16
repz
rep
bound
and
inc
mov
mov
cs
push
fild
mov
rol
mov
jo
sub
lds
mov
sbb
mov
pop
test
ja
or
push
jae
test
arpl
fnstenv
pusha
xchg
mov
jl
and
add
xchg
dec
add
inc
frstor
xor
mov
das
add
loopne
into
js
rdpmc
addr16
stos
sbb
inc
add
push
loope
xor
sbb
sub
dec
and
out
pop
(bad)
or
xor
inc
aas
dec
or
sbb
mov
lods
or
or
or
add
add
xor
sub
jb
addr16
sub
xlat
scas
pop
xchg
loope
xor
pop
dec
add
inc
sub
outs
movs
lea
dec
adc
fstp
and
push
lods
fs
add
in
sub
dec
and
popa
pop
xchg
xor
aaa
(bad)
fidiv
jmp
inc
add
and
pop
sub
and
adc
outs
mov
dec
mov
or
stc
add
in
or
jmp
and
and
or
and
fsincos
and
and
xchg
inc
inc
imul
inc
add
jge
adc
std
mov
inc
lods
inc
add
test
test
push
sub
jmp
inc
lock
add
movs
jge
(bad)
and
adc
dec
iret
dec
test
call
dec
pop
adc
ror
clc
scas
loopne
pop
cmp
inc
popa
adc
mov
jno
dec
jnp
ret
inc
or
cmovp
add
mov
(bad)
cld
inc
sub
nop
inc
dec
pop
cmp
adc
xchg
pop
dec
pop
adc
daa
xor
push
fwait
clc
cmp
ret
rol
dec
je
jmp
div
lea
xor
jae
jbe
je
inc
add
mov
mov
popa
aas
in
(bad)
inc
in
adc
adc
fadd
cdq
mov
jno
jmp
push
fcom
mov
jo
loope
(bad)
adc
mov
cmp
out
inc
pop
das
in
ja
clc
mov
ss
sbb
xor
or
mov
adc
pop
test
mov
das
or
das
in
add
bound
dec
(bad)
lahf
push
sub
cwde
stc
push
loope
xchg
add
shl
jg
jg
mov
call
or
cmp
jge
mul
fbld
mov
outs
dec
cld
mov
cmp
mov
add
jle
(bad)
cwde
sbb
dec
jne
jle
ror
and
je
mov
pop
xor
fcomp
xor
xchg
or
jge
xor
rol
fimul
xchg
ror
(bad)
or
mov
pop
psubsb
pop
push
(bad)
sub
push
stc
mov
pop
and
repz
dec
cmp
cmp
push
pop
shr
fwait
pop
dec
ror
adc
loop
ss
mov
outs
jbe
rcr
xor
xchg
std
or
out
(bad)
or
out
push
add
rol
fcom
jg
icebp
inc
inc
fsubr
mov
or
cmp
int3
shr
mov
sub
or
rol
ret
sub
mov
or
push
pop
pop
fsub
push
ins
add
pop
scas
cmp
je
mov
mov
inc
inc
ror
mov
push
push
push
xchg
pmaxub
test
or
mov
pusha
inc
fidiv
cmp
test
dec
push
js
push
ja
enter
sub
mov
xor
jae
adc
or
movs
push
(bad)
push
xor
adc
inc
aas
jl
mov
dec
ja
pop
icebp
inc
and
mov
cmp
cmps
fsub
jne
add
dec
sub
sahf
inc
and
or
scas
ins
pop
inc
jo
nop
pop
loope
dec
xor
btr
leave
xor
add
mov
les
pop
xchg
sbb
fadd
cmps
cmp
adc
dec
xor
popa
adc
inc
xchg
jle
addr16
mov
inc
shl
push
push
sbb
test
adc
mov
jle
dec
or
cmp
and
fst
clc
mov
test
jne
cmp
mov
pusha
pop
fs
cmp
jp
adc
inc
dec
add
lods
dec
sbb
pop
lock
adc
nop
xor
inc
in
stos
sti
cmp
stos
test
ret
gs
add
sbb
add
sbb
rol
pop
inc
sbb
ja
mov
inc
enter
pop
cmp
hlt
loop
xchg
nop
ror
aaa
push
nop
pop
dec
or
mov
sbb
fidiv
hlt
mov
jl
sub
xor
cs
jns
inc
inc
or
inc
push
or
lsl
mov
pop
mov
mov
or
das
jge
dec
inc
mov
push
xlat
leave
(bad)
(bad)
enter
dec
sbb
lock
mov
das
mov
xor
mov
mov
mov
dec
mov
mov
ficomp
pmuludq
xchg
xor
lods
jmp
jmp
out
dec
mov
ds
or
push
push
or
sbb
dec
loopne
js
aad
rcr
mov
mov
jo
and
push
jno
mov
jmp
sub
add
add
test
or
inc
mov
adc
ins
mov
push
fadd
out
into
loope
mov
jo
cld
add
sub
je
mov
or
mov
sbb
nop
adc
push
test
in
add
jl
(bad)
stos
mov
push
(bad)
cs
push
pop
or
popa
loop
dec
jbe
inc
fiadd
inc
adc
loopne
cmp
mov
jge
fcom
jl
mov
imul
dec
inc
aaa
dec
fild
cmp
movs
in
hlt
adc
test
add
scas
outs
xchg
and
adc
and
adc
iret
jle
cmp
push
test
inc
pop
loop
push
int3
loope
add
inc
dec
or
rol
inc
imul
cdq
fcmovnb
cwde
mov
ja
nop
jg
pop
adc
or
or
or
cmp
xor
mov
(bad)
int
jle
fs
stos
in
sub
int3
adc
ja
pop
sub
fcom
(bad)
mov
hlt
jmp
jmp
hlt
mov
icebp
cs
enter
adc
push
sbb
push
dec
xor
dec
inc
inc
mov
fs
jae
add
sti
(bad)
scas
les
fsubr
cmp
push
cmp
pop
ins
lea
mov
out
outs
sbb
leave
loopne
fistp
sbb
test
cmp
sar
fstp
add
cmp
pop
hlt
jne
stc
adc
fdivr
push
sbb
(bad)
sbb
xor
adc
cmp
aas
ret
push
lock
aaa
adc
dec
jne
sub
test
(bad)
mov
pusha
jmp
pop
mov
addr16
in
ins
jmp
(bad)
je
fnstcw
dec
sub
xor
cs
iret
jmp
mov
inc
aaa
outs
push
in
adc
jmp
and
mov
mov
rol
dec
rol
les
sbb
dec
jb
fsub
and
push
mov
shr
ret
dec
test
sub
in
dec
xchg
add
cmp
fs
push
inc
add
pushf
nop
add
push
dec
and
mov
or
packsswb
xchg
cdq
lods
cli
aas
and
pop
jl
pop
xor
ror
(bad)
cmp
cmp
add
mov
(bad)
(bad)
ins
test
stos
add
or
and
inc
add
pop
mov
fs
inc
pusha
add
ret
or
mov
sbb
in
aas
rcr
fmul
dec
lods
inc
jne
data16
test
pop
shl
inc
ins
fcomp
mov
inc
jae
(bad)
cs
cmp
jne
push
inc
add
push
(bad)
jmp
inc
cmps
fnsave
test
leave
je
mov
cmp
nop
(bad)
imul
push
push
jns
cmp
loop
push
nop
jne
cmp
jne
outs
pop
adc
push
sub
adc
addr16
jne
into
movs
mov
pop
cmps
test
sub
hlt
lds
dec
inc
scas
mov
inc
inc
fist
ins
mov
inc
lahf
cmp
push
loop
mov
push
push
mov
xchg
push
es
jg
sbb
xchg
and
dec
adc
cmovo
ret
icebp
sub
xchg
cmp
clc
sub
push
sbb
scas
out
inc
cmp
js
push
cld
cmp
xor
mov
jnp
pusha
cmp
adc
fiadd
enter
pop
mov
std
xchg
loop
and
(bad)
push
adc
dec
or
adc
mov
pushf
inc
dec
push
je
out
popa
adc
je
lods
pop
cs
adc
jns
or
jnp
add
lods
add
imul
mov
mov
pop
lea
ja
inc
add
add
in
sub
fmul
push
mov
mov
pop
fcomp
push
das
cld
add
cdq
mov
mov
mov
loope
jge
lock
cmp
loop
repnz
loop
fstp
test
mov
call
dec
cmp
mov
inc
and
out
inc
dec
inc
cmp
lahf
dec
test
mov
cmps
push
movs
jnp
leave
add
scas
xlat
xor
add
cmp
aad
pushf
inc
clc
ret
sbb
pop
dec
shr
cmp
and
sti
clc
lahf
dec
inc
dec
jne
loopne
push
nop
cmps
(bad)
je
mov
or
je
or
fimul
push
adc
cmps
aam
lahf
es
lds
sbb
scas
push
dec
clc
shr
pop
cmc
repz
inc
add
push
inc
push
push
add
jp
test
jl
addr16
mov
add
sti
test
loop
cwde
fidivr
cmp
xchg
push
lds
clc
and
scas
add
lods
sub
pop
sub
(bad)
call
mov
call
dec
jne
dec
repnz
out
add
dec
cmp
stos
adc
xlat
daa
xchg
out
or
xchg
mov
dec
sete
aam
or
jns
sbb
lds
add
cmp
ret
mov
movs
test
in
mov
popa
mov
pop
xchg
test
(bad)
aas
rol
fnstsw
or
aam
(bad)
mov
add
mov
movzx
shr
mov
jns
cmps
pusha
mov
jge
jg
call
cmp
jne
cmp
xor
imul
or
jmp
adc
pop
sub
dec
cmp
sbb
dec
fs
sbb
sbb
dec
adc
add
data16
cmp
inc
sbb
and
mov
fdiv
push
jnp
hlt
into
lods
mov
pusha
push
mov
mov
outs
pop
sbb
inc
enter
sbb
dec
push
aas
call
loope
dec
into
jo
dec
xchg
or
mov
aam
sub
lods
js
imul
push
(bad)
loopne
or
dec
mov
ins
ds
cs
ins
add
aaa
dec
jmp
rcr
add
dec
fidiv
int3
add
ret
pop
ss
and
or
ret
push
add
jmp
xchg
push
cmp
and
or
neg
fiadd
jo
and
fidivr
adc
pop
out
or
inc
fcomp
lea
xor
or
lods
fsubr
xor
add
pop
mov
mov
sbb
nop
inc
(bad)
dec
dec
inc
and
xor
iret
jl
dec
rcr
sbb
dec
outs
jne
jb
outs
jb
pop
and
ja
xchg
inc
xor
mov
push
idiv
ss
xor
daa
inc
imul
hlt
fbld
or
gs
or
or
popa
jb
loope
jnp
xchg
push
cmp
pusha
xor
mov
sbb
mov
add
cmp
push
out
cmp
push
and
imul
scas
and
add
push
or
pop
xchg
scas
add
or
loope
or
pop
or
(bad)
pop
adc
fcom
js
jmp
add
inc
sbb
inc
jae
movups
inc
push
cs
sub
cmp
mov
inc
jmp
int3
mov
mov
mov
jg
fadd
nop
or
push
inc
stos
mov
(bad)
fs
or
add
addps
rcr
add
xchg
pop
or
cdq
pop
push
xor
mov
push
push
pusha
and
add
inc
push
ret
add
mov
pop
lods
pop
arpl
pop
fistp
pop
shl
mov
jl
mov
adc
inc
jne
fist
sub
in
or
(bad)
mov
je
arpl
dec
lods
jne
ins
adc
xor
retf
add
xor
scas
pop
xchg
add
rcr
pop
aas
scas
cmp
add
and
mov
mov
sbb
ins
xor
cmps
xor
outs
mov
popa
jl
ds
mov
xor
(bad)
les
in
mov
push
int3
mov
adc
xchg
push
mov
fidivr
jle
push
js
inc
mov
mov
push
aam
clc
push
sbb
xchg
mov
adc
adc
mov
gs
pop
add
inc
ret
fmul
aaa
popf
fsubrp
adc
add
clc
lock
add
pop
fsubrp
test
daa
sub
dec
push
adc
mov
outs
adc
mov
mov
nop
push
dec
or
mov
mov
push
xor
add
xchg
jno
leave
repz
inc
shl
scas
imul
lods
(bad)
cmp
movs
sahf
aam
add
aad
mov
add
rcl
mov
or
mov
and
jb
add
adc
xor
sub
pop
add
and
add
addr16
and
xchg
pop
dec
fadd
xchg
add
and
add
push
xor
pusha
mov
outs
sub
push
adc
adc
fisub
sbb
mov
mov
enter
xor
mov
push
add
push
push
push
nop
mov
xchg
jle
push
ins
ret
out
rol
test
dec
push
subps
stos
mov
fld
mov
les
inc
adc
xchg
das
daa
ds
add
mov
or
pop
pop
sahf
(bad)
js
jns
das
inc
adc
gs
xchg
jecxz
or
pop
mov
push
popa
fs
sub
push
imul
call
inc
inc
jb
jne
test
sbb
das
gs
jae
pop
xlat
sub
pop
cwde
sub
add
lods
pusha
adc
and
(bad)
or
test
mov
ins
and
jecxz
xor
btc
jo
scas
ss
add
add
lea
fwait
out
add
push
push
mov
in
cmc
push
ins
dec
jb
push
or
and
jbe
lea
push
jmp
lahf
pop
js
les
add
jae
sub
xor
adc
mov
jecxz
ss
ja
dec
pop
push
outs
jne
jns
cmp
movs
mov
loopne
add
jnp
adc
nop
xor
ins
imul
enter
es
sub
or
pop
fild
cmp
cmp
pop
nop
rcl
jns
or
add
pusha
ss
add
add
fs
std
xor
gs
push
dec
push
mov
jns
ins
mov
fidivr
add
popw
jno
cmps
fsub
cmp
push
add
call
addr16
inc
(bad)
leave
xchg
fucomi
repnz
hlt
leave
leave
leave
in
push
push
in
in
dec
imul
(bad)
fmul
and
lock
inc
into
test
(bad)
stc
call
jmp
test
retf
shr
jnp
add
lock
pop
(bad)
div
das
and
and
pop
sbb
mov
ins
push
sub
xchg
test
rol
mov
lods
pop
push
sub
push
or
stos
dec
cld
shl
repz
add
gs
push
dec
xor
adc
or
pop
cmp
ror
dec
mov
add
imul
add
xchg
sub
sbb
rol
cmp
mov
pop
jae
mov
and
stos
daa
mov
mov
cmp
xor
lock
sub
adc
add
pushf
arpl
mov
jo
fcom
outs
je
xchg
sbb
out
inc
dec
jl
add
dec
les
imul
xor
adc
pop
shl
or
add
or
pop
mov
je
loope
(bad)
jae
xchg
inc
ror
and
pushf
push
xor
inc
adc
and
inc
adc
fs
inc
outs
jb
retf
add
push
int
adc
data16
hlt
and
sub
ret
inc
mov
jecxz
xor
inc
je
sub
or
movs
add
data16
pop
mov
in
sub
pop
add
inc
jno
adc
adc
xor
add
mov
add
aas
push
add
mov
lods
mov
adc
je
push
add
mov
xor
add
adc
jno
inc
push
or
or
push
pop
and
dec
test
ror
ror
pop
int3
inc
jo
push
or
movs
sub
and
push
mov
cmp
pushf
fcmovnu
dec
loop
jecxz
add
loopne
dec
and
add
mov
inc
adc
lods
js
jl
inc
and
in
loopne
inc
and
ror
inc
inc
inc
rcl
popf
adc
gs
dec
push
sbb
in
xor
or
arpl
mov
inc
or
je
xor
dec
fcom
push
aam
sar
pop
push
dec
and
adc
(bad)
clc
add
jnp
xchg
cmp
xor
inc
mov
adc
test
js
xlat
call
nop
mov
adc
xor
xor
mov
call
rcl
adc
pop
inc
aaa
and
inc
hlt
pop
mov
add
or
(bad)
adc
dec
or
sub
rcl
popa
mov
test
pop
fiadd
ins
sbb
inc
sbb
xchg
pop
inc
or
xchg
xchg
xchg
retf
xor
xchg
retf
xchg
xchg
int3
in
or
xchg
xchg
push
jns
mov
loop
ins
daa
dec
xchg
xchg
xchg
xchg
jo
mov
clc
mov
ins
fistp
sbb
(bad)
fwait
adc
xlat
arpl
pusha
jmp
stc
fadd
dec
pop
stc
hlt
je
or
dec
test
or
mov
adc
inc
add
outs
push
rol
sbb
mov
xor
jns
push
fadd
or
or
movs
ret
xor
js
add
outs
pop
add
dec
out
push
mov
push
cmp
or
add
xchg
mov
inc
lahf
movs
fild
ja
add
mov
mov
xchg
jnp
rol
add
sbb
inc
enter
ja
push
or
repz
shr
jmp
push
xchg
mov
sbb
ja
adc
mov
cmp
inc
xchg
sub
cvtps2pd
(bad)
mov
dec
ror
lea
or
jb
jnp
add
or
jmp
jnp
jno
gs
push
lock
jno
jle
add
(bad)
jb
push
je
jle
lds
adc
int3
cmovb
out
(bad)
jge
mov
stc
call
stc
(bad)
mov
jecxz
push
enter
ins
fistp
ror
adc
and
not
push
outs
or
jnp
push
loope
mov
fwait
and
push
add
je
adc
ret
mov
daa
sub
push
adc
mov
rcl
(bad)
mov
aas
push
outs
jo
jo
mov
cs
mov
dec
cld
or
fwait
add
cli
ss
xchg
ret
jmp
xor
arpl
bound
rcl
and
sbb
inc
jns
pop
cmc
xchg
sbb
sub
dec
jae
inc
mov
mov
outs
inc
push
xchg
std
mov
or
sub
push
mov
and
xchg
adc
inc
adc
cdq
outs
lea
mov
data16
movs
pop
sub
sar
ss
and
lods
loope
pusha
loopne
jl
and
jb
adc
ja
xor
das
pop
sbb
lea
rcl
loope
add
pop
fwait
mov
or
or
or
pop
jns
fxch
enter
pop
popa
add
inc
jnp
fisttp
mov
pop
cmp
call
inc
jnp
pushf
dec
shl
add
or
and
sbb
adc
cmp
fs
cwde
adc
ret
and
and
mov
add
push
sub
adc
and
jbe
in
sub
mov
sub
jmp
jbe
sbb
mov
aas
loopne
pop
mov
inc
stos
push
js
xchg
repnz
and
jbe
test
jle
js
in
adc
mov
mov
add
add
shl
sbb
std
or
xlat
sub
fs
push
outs
ins
imul
not
(bad)
ins
add
push
popf
push
sub
stos
jbe
inc
arpl
fist
dec
pop
mov
pop
cmps
rol
or
pop
fild
mov
dec
add
adc
mov
adc
lock
fist
cmp
mov
add
pop
add
xchg
dec
cli
mov
pop
xchg
adc
and
inc
add
pop
or
in
pushf
mov
push
pusha
add
push
jnp
mov
jns
fisttp
add
je
add
push
arpl
in
fld
jp
add
sbb
push
jo
fiadd
or
mov
push
inc
inc
xchg
xor
(bad)
or
add
scas
shl
inc
mov
int
iret
sbb
or
movs
add
or
imul
repnz
add
cmp
test
sbb
sbb
add
sbb
and
push
sbb
add
mov
adc
add
dec
jp
dec
mov
(bad)
jnp
and
jl
jnp
or
test
aaa
int
inc
jb
in
mov
out
inc
lock
dec
push
mov
or
cwde
mov
xchg
push
addr16
retf
ja
add
test
popa
sub
sub
xlat
add
mov
xchg
sar
xchg
rcl
ret
rcr
das
ret
rcl
clc
test
jne
jl
fwait
jl
dec
cli
add
xor
adc
loopne
retf
cmc
retf
jecxz
and
fdivr
add
ins
adc
ins
add
(bad)
dec
or
mov
pop
in
lahf
push
cmp
add
das
dec
add
popf
add
js
mov
mov
jno
add
adc
xchg
dec
in
add
sub
dec
or
pop
jnp
imul
or
sbb
cmp
add
mov
neg
mov
test
or
sbb
sub
pop
or
or
mul
jmp
and
shl
bound
sbb
(bad)
js
jo
js
unpcklps
cs
jg
add
add
jl
jge
inc
inc
inc
inc
je
mov
inc
add
dec
ja
pop
inc
inc
popf
shl
mov
push
cdq
jmp
mov
jno
sahf
scas
test
clc
jg
cmp
pop
mov
sahf
push
daa
add
sbb
scas
cmp
loopne
test
push
gs
jo
push
adc
jge
enter
xor
in
in
jb
jge
pushf
pushf
adc
sub
scas
mov
xor
xor
jmp
mov
pop
adc
popf
push
ins
jmp
imul
out
aas
push
test
inc
mov
push
sub
fwait
jne
xor
les
push
ds
in
push
mov
mov
push
loopne
int3
push
nop
loope
pop
hlt
test
or
sbb
loopne
sar
popa
js
es
sbb
add
fadd
popf
lahf
jo
out
inc
(bad)
rcr
pop
pop
add
xor
xor
movs
push
or
in
jbe
mov
inc
lods
mov
push
and
ror
dec
sub
mov
dec
add
push
adc
mov
push
into
pop
add
es
xchg
pusha
add
shl
je
or
fnstsw
je
test
xor
dec
dec
or
add
adc
xlat
pop
push
aas
mov
sbb
pop
dec
sub
call
cmp
push
mov
xor
movzx
shr
mov
and
add
add
inc
loopne
aas
repnz
push
add
fild
sar
push
adc
cmp
loopne
inc
sub
ja
in
push
add
push
xor
pusha
aaa
loope
xchg
lock
mov
cmp
and
jmp
jge
adc
mov
popa
pop
cmp
or
cmp
jge
add
sub
jb
les
or
je
pushf
mov
push
or
or
dec
mov
sub
push
sub
jnp
cdq
aas
sar
call
sbb
aas
inc
mov
mov
push
bound
sub
and
and
ret
add
adc
jmp
sbb
sub
aad
jmp
ret
jno
jmp
inc
inc
ret
(bad)
or
sub
arpl
int3
push
jl
mov
enter
call
xchg
jb
cmp
je
cmc
loopne
pop
icebp
test
or
rcr
inc
aam
cmp
and
fcomp
test
outs
or
pusha
jl
or
clc
mov
dec
add
dec
inc
jmp
pop
xchg
fcomp
sub
add
ficomp
cmp
mov
and
add
test
adc
jae
mov
jg
in
sbb
or
adc
imul
cld
adc
shl
fld
inc
lea
enter
push
or
jp
outs
and
or
mov
fcomp
push
sbb
outs
pcmpeqw
call
into
sahf
jmp
out
imul
stc
mov
das
inc
jmp
popa
and
push
xchg
aam
mov
inc
sbb
jmp
pop
sub
mov
mov
jae
jne
jo
push
es
idiv
or
jmp
(bad)
loop
or
sti
push
add
pop
call
or
and
neg
pop
xlat
mov
push
inc
push
mov
shl
bound
push
mov
std
stos
test
mov
daa
xchg
popa
sub
fsubr
inc
inc
dec
or
inc
cld
jg
and
xor
xor
ins
adc
add
inc
cmp
cmp
cmps
loopne
pushf
cmp
jg
(bad)
test
daa
mov
inc
jo
pop
sbb
sub
out
or
retf
hlt
cmp
mul
push
add
jmp
ss
sahf
push
jmp
cmp
jle
std
add
xor
jle
push
adc
lods
sub
ja
ss
jmp
std
ds
push
jb
mov
pop
ins
in
mov
cmp
push
hlt
aaa
pop
inc
cmp
add
pop
rcr
xchg
jle
call
in
fist
in
lds
jbe
pop
dec
adc
test
fucomip
(bad)
mov
or
mov
pop
out
ds
aas
mov
cmp
lods
inc
inc
xor
or
inc
rol
cmp
inc
rcl
dec
xlat
pop
stos
fs
pop
add
mov
jp
ins
pop
or
loopne
call
add
sahf
div
bts
cmp
push
adc
inc
jno
dec
cmovg
cdq
mov
iret
mov
jmp
dec
dec
jl
aas
xchg
out
inc
fcom
pop
mov
inc
(bad)
jne
push
mov
clc
cmp
add
je
fbstp
mov
xchg
pop
lock
jbe
or
sub
mov
fs
cmp
cmps
lods
sbb
inc
inc
test
mov
add
add
dec
dec
div
ss
xchg
fsubrp
sub
in
fiadd
mov
xchg
shl
(bad)
arpl
out
loop
jbe
inc
pop
jg
xchg
out
mov
aas
je
out
pop
nop
add
mov
iret
sar
mov
aaa
cmp
das
sub
data16
cmp
sbb
xchg
je
mov
in
sbb
das
push
jg
test
aas
jmp
adc
jp
or
xor
aaa
inc
hlt
mov
out
shr
adc
push
imul
add
mov
inc
inc
lea
inc
sbb
push
pop
lock
lock
mov
mov
ret
aam
dec
lods
call
lea
aam
mov
fnsave
add
ins
das
mov
aam
jmp
sub
imul
fwait
sar
dec
jg
cmp
jg
test
inc
pusha
xor
in
(bad)
leave
mov
mov
jno
dec
jl
jnp
or
cli
movups
sub
dec
popf
or
inc
push
outs
adc
enter
std
or
mov
add
mov
dec
clc
adc
push
and
hlt
cmp
jl
pop
or
push
cmp
mov
jle
stos
add
jg
xor
aam
dec
cmp
jbe
leave
sub
jnp
cmp
mov
lock
jne
dec
pop
lock
push
push
mov
ret
pop
dec
push
dec
je
cld
dec
cmp
push
jge
not
cmp
jne
mov
jle
mov
sbb
out
sub
les
xchg
mov
or
jl
mov
jge
mov
or
retf
cmp
mov
pop
push
cmp
or
add
jo
cli
pusha
lds
mov
inc
je
mov
xor
test
iret
lods
shl
imul
or
or
lods
movs
pop
xor
mov
sete
and
pop
daa
ds
sub
push
inc
xchg
stc
dec
or
div
rcl
cmp
enter
jnp
outs
in
or
xor
or
loope
movs
push
or
out
or
adc
or
fimul
in
loope
push
mov
inc
or
jg
jae
test
fwait
out
adc
dec
adc
adc
fwait
sub
push
rcr
adc
fadd
std
add
jno
int
push
or
push
xor
nop
jmp
and
push
cmp
xor
and
lds
bound
or
pop
lock
sub
sti
or
jle
call
mov
(bad)
loopne
(bad)
sbb
mov
pusha
sbb
push
shl
mov
mov
fwait
mov
scas
mov
mov
(bad)
push
cmp
cmp
mov
xor
mov
ja
xchg
ret
xchg
xchg
mov
movs
xor
ret
jne
cmp
scas
shl
inc
inc
mov
int
push
test
jne
jl
shl
pop
mov
jo
mov
sbb
mov
pop
push
rol
mov
cmp
fld
mov
mov
push
push
cmps
mov
adc
cmp
mov
js
pop
jnp
hlt
push
mov
ss
test
pop
rcl
ss
das
(bad)
in
mov
lds
cwde
(bad)
outs
callw
and
or
push
test
dec
push
inc
mov
xor
push
sub
and
ins
mov
int3
je
daa
iret
add
int3
sbb
pushf
test
into
mov
and
xchg
lds
lods
lds
movs
sbb
cmps
push
mov
lock
pop
out
sar
cmp
jge
aad
cmp
jbe
cld
inc
jae
mov
js
xor
mov
fwait
arpl
mov
jne
pop
mov
and
cmp
imul
sbb
inc
mov
or
js
pop
or
jp
mov
(bad)
xchg
add
push
cmp
or
loopne
push
scas
call
cmp
outs
data16
popa
pop
mov
add
lock
(bad)
ja
add
inc
fwait
sbb
hlt
mov
mov
pop
pusha
test
inc
xchg
das
es
jmp
repz
mov
and
or
jmp
mov
shl
inc
add
es
add
jle
movs
mov
push
in
test
mov
cmps
adc
cmp
std
rcl
into
adc
jne
jl
xchg
push
fbld
addr16
mov
xor
aam
call
outs
test
lea
movs
add
add
jo
jmp
cmp
out
fnsave
test
add
aad
mov
imul
and
fistp
popf
dec
and
adc
jmp
jecxz
adc
add
xchg
ins
test
fmul
aam
mov
jl
inc
(bad)
enter
xor
cmp
mov
mov
rcl
in
dec
push
loope
pop
dec
fstp
xor
push
dec
daa
or
mov
ja
test
or
cs
mov
push
repz
pop
mov
push
or
sub
xchg
hlt
sub
adc
or
xchg
das
add
mov
push
lock
jo
ret
out
jmp
sbb
dec
or
retf
jle
adc
cwde
or
add
xchg
mov
in
adc
jmp
sub
xchg
test
sub
jbe
ins
ja
mov
shl
or
pop
dec
(bad)
sbb
adc
adc
not
enter
and
dec
and
hlt
movs
leave
mov
ret
add
xchg
pop
pop
fwait
pop
inc
dec
ret
sbb
js
test
mov
repz
repz
pop
aaa
mov
mov
cmps
push
mov
pop
jp
cmp
rol
xchg
pop
mov
int3
das
shr
scas
push
cmp
or
fstp
cli
xchg
test
inc
gs
pop
xchg
sub
adc
add
jne
aad
outs
or
test
xor
scas
adc
push
add
fisub
adc
inc
sub
mov
out
add
cmps
fcom
sub
(bad)
loopne
call
add
pop
xor
sub
ins
jmp
shl
push
xchg
(bad)
jmp
dec
push
sbb
xchg
ret
jg
adc
push
shr
les
adc
scas
inc
xor
in
pop
pop
(bad)
shl
push
jmp
ror
push
add
lea
sbb
ins
xor
cmp
push
in
mov
mov
pop
sbb
or
jno
nop
add
adc
mov
rcr
push
lahf
or
mov
test
enter
push
push
xor
adc
cmp
add
xchg
gs
add
popf
test
dec
call
hlt
cmp
mov
xor
jle
daa
push
sub
mov
sub
sub
sub
js
lea
fistp
inc
test
inc
js
je
pop
aam
or
cmp
jle
sub
in
add
das
cmp
pop
lock
sbb
sbb
leave
je
inc
call
sahf
push
sub
imul
sub
sar
jns
adc
or
movs
rol
sub
sar
push
rcl
xor
fstp
jo
mov
shl
retf
loopne
shl
sbb
lock
or
adc
ss
leave
ins
(bad)
mov
and
sub
adc
sub
outs
jne
xchg
mov
lods
aaa
xor
dec
rcl
inc
iret
add
rol
adc
les
pop
pushw
inc
iret
mov
pop
retf
into
jle
fld
fwait
mov
pop
mov
ins
pop
mov
scas
mov
mul
or
xor
retf
clc
jl
fsubr
sbb
pop
outs
push
push
push
mov
push
or
fiadd
int
and
fild
movs
popa
jne
out
push
ss
add
pop
movzx
sub
retf
add
pop
jge
mov
cmp
inc
dec
sub
jae
sub
cmc
inc
fisttp
jg
sub
xor
retf
movs
push
test
adc
jnp
sbb
enter
cmp
cmp
out
and
cmp
or
in
xchg
and
imul
add
xor
ds
push
jne
sbb
(bad)
loopne
xor
push
pop
cmp
sub
jno
ror
ja
xor
mov
push
sub
mov
push
fld
in
add
aas
add
mov
daa
and
in
and
pop
bound
mov
daa
dec
hlt
int
and
add
dec
aaa
sub
xor
fld
cmp
adc
push
rcr
jp
mov
adc
imul
sbb
adc
or
shl
jl
lock
adc
pop
push
lds
dec
pop
cld
push
push
test
(bad)
inc
call
movs
sub
push
jo
pop
jnp
xor
sub
push
push
push
outs
in
push
add
add
sbb
jl
push
or
push
lea
xor
adc
iret
jbe
pop
dec
call
xor
xchg
rcr
out
call
add
rol
leave
add
bts
test
cmp
mov
mov
mov
nop
test
je
pop
push
sbb
scas
out
jmp
clc
lock
popa
shr
into
push
mov
iret
mov
call
mov
outs
sbb
stos
jl
test
stos
sub
and
aaa
hlt
test
mov
mov
push
out
icebp
or
jo
data16
lds
sbb
mov
idiv
inc
lock
sbb
xor
sub
sub
call
inc
mov
sti
sbb
jp
(bad)
js
add
adc
imul
or
out
out
ror
add
mov
dec
push
and
jae
mov
pop
in
push
mov
(bad)
xor
mov
inc
addr16
pushf
add
and
push
(bad)
(bad)
int
jae
int
mov
inc
adc
ret
lods
stos
add
jns
pop
into
mov
dec
aas
sahf
adc
ret
adc
adc
sbb
sub
push
call
xlat
je
inc
das
sub
push
adc
pop
or
xor
adc
ss
fnstenv
lock
loopne
and
aad
hlt
in
fwait
mov
or
outs
loopne
mov
inc
ds
popf
mov
popw
jle
jmp
inc
mov
inc
cdq
pop
inc
cmp
(bad)
or
inc
fdivr
xchg
sbb
add
hlt
jo
fmul
imul
js
add
xor
pop
je
call
pop
out
cmp
ret
push
loope
mov
sub
in
jmp
ror
dec
sbb
in
gs
fs
or
add
push
sbb
add
sbb
mov
inc
cmp
mov
clc
sysret
outs
pop
ror
mov
(bad)
in
and
add
comiss
in
push
fist
inc
mov
dec
pushf
push
or
push
leave
adc
dec
jge
sbb
adc
cmc
mov
repz
lock
fdivr
add
pusha
(bad)
mov
mov
xor
add
loope
push
mov
fcom
test
outs
or
outs
pop
and
sbb
cs
adc
(bad)
in
stos
jno
sub
arpl
xchg
imul
dec
xor
pop
loopne
xor
leave
sub
rol
pop
add
pusha
clc
ret
fwait
inc
jecxz
or
and
cmps
dec
add
xor
xchg
in
and
ret
adc
push
out
lea
vmovntps
cmp
jge
cmp
mov
and
mov
pop
or
jne
mov
lea
xchg
in
and
sbb
in
adc
in
cmp
cmp
(bad)
mov
sbb
pop
stc
mov
sub
dec
dec
or
pop
mov
lea
sbb
add
cmp
leave
jle
or
xor
in
add
mov
or
cs
ds
adc
pop
mov
adc
dec
mov
add
inc
xchg
xor
aad
inc
xchg
inc
call
ja
scas
rol
cmp
shr
or
dec
test
in
test
jbe
loope
mov
adc
mov
adc
mov
and
add
fstp
xchg
jne
inc
adc
test
ret
xlat
xor
lock
lock
lock
call
repz
inc
pop
ret
push
or
push
(bad)
(bad)
mov
and
pop
es
jmp
(bad)
or
cmp
nop
aaa
add
inc
pop
add
xor
or
mov
sbb
push
sub
(bad)
cs
sti
jge
popa
leave
push
xor
xor
and
jnp
adc
jne
adc
and
adc
mov
hlt
les
lock
jae
add
stc
ja
stos
cmp
test
and
repz
push
rol
pop
sbb
bound
dec
in
adc
xor
or
dec
push
pushf
add
mov
add
pop
hlt
call
and
mov
jo
sbb
call
nop
add
loope
fadd
dec
rol
loope
dec
adc
pop
mov
mov
and
mov
jbe
repnz
cmp
lods
adc
sub
ret
dec
cmp
sub
test
inc
sub
pusha
arpl
push
pop
sbb
(bad)
bound
push
inc
les
lea
adc
ret
iret
ins
or
pop
and
int3
test
inc
sbb
jge
adc
(bad)
jne
xor
loop
in
pop
xchg
push
add
xchg
lock
or
mov
push
inc
mov
mov
add
jl
pop
xchg
das
mov
mov
and
sbb
jno
loope
jmp
into
pop
or
addr16
adc
push
bound
add
scas
cmps
and
add
xchg
scas
fnstcw
outs
sub
and
ror
mov
add
mov
add
jle
and
rol
jmp
(bad)
or
inc
ins
inc
rcr
cmp
dec
sbb
sbb
pop
or
rcr
sbb
jo
inc
bound
loopne
add
dec
pop
push
add
push
pushf
sbb
inc
pop
mov
call
mov
push
lods
stos
ucomiss
int3
xor
or
sahf
pop
das
or
xor
out
fnstsw
and
xchg
jmp
aas
out
(bad)
xchg
adc
xor
adc
cmps
adc
mov
scas
and
stos
xor
push
push
push
xor
sbb
call
jo
js
pop
dec
fimul
les
(bad)
jmp
or
add
adc
aas
or
rol
fprem
iret
sar
xchg
in
mov
sbb
in
cmp
and
pushf
push
pop
sub
(bad)
(bad)
call
sub
movs
and
test
fdivr
mov
dec
pop
add
js
je
mov
inc
adc
push
ror
adc
aam
push
pop
adc
fcmovbe
push
push
cwde
xor
dec
(bad)
in
(bad)
mov
in
cmp
jle
sbb
xor
sub
lock
push
jecxz
adc
and
setl
adc
inc
add
imul
aam
or
retf
cmp
push
sub
xor
inc
call
push
xchg
or
or
dec
cmp
pop
sbb
ror
mov
es
push
mov
outs
sbb
or
and
leave
add
ss
mov
ins
mov
dec
sbb
push
sub
ins
loopne
lock
inc
les
ret
xor
mov
lock
fsubr
fcmovnu
fsub
pop
adc
pop
(bad)
dec
js
je
lea
mov
mov
aam
mov
call
pop
aas
cld
ret
pop
push
mov
pushf
ror
add
pop
cmp
adc
int
jl
lds
inc
pushf
mov
sbb
mov
jbe
loope
int
aam
push
rol
adc
add
clc
mov
lock
test
lds
pop
test
inc
inc
int3
mov
add
mov
and
cdq
into
mov
inc
dec
test
mov
cld
or
inc
cmps
in
pop
add
add
add
push
or
sbb
int
dec
adc
or
or
or
cmps
cmp
lods
adc
jno
ret
in
mov
xor
add
sbb
add
(bad)
js
cli
pop
test
jge
adc
pop
inc
mov
retf
out
and
int
mov
push
(bad)
cmp
fsub
pop
dec
dec
aad
sbb
jge
mov
fstp
popa
mov
or
push
sub
enter
add
das
jo
cmp
cmp
push
and
push
ja
mov
ret
mov
imul
sbb
sbb
out
int3
pop
or
(bad)
leave
lock
jmp
adc
out
(bad)
fistp
jb
enter
rcl
adc
rcl
out
pop
push
mov
xchg
inc
add
rol
mov
call
push
cdq
xor
lods
scas
shr
or
shr
push
jns
mov
xor
cmp
inc
xor
(bad)
out
dec
je
mov
pop
dec
inc
and
fidivr
je
lea
data16
dec
fs
cli
das
nop
push
in
mov
inc
shr
lock
xor
sbb
daa
lods
ret
xor
push
ret
lea
(bad)
sub
inc
jne
fmul
dec
jne
cmps
fbstp
pop
cmp
inc
mov
mov
push
inc
cmp
fndisi(8087
sbb
jne
in
test
movs
and
pusha
nop
sub
loope
cwde
or
es
fiadd
out
push
movs
or
or
push
cmp
test
or
rcl
xor
and
jg
mov
(bad)
jmp
lea
enter
aad
jbe
loopne
movs
outs
mov
dec
pusha
int3
ds
je
(bad)
adc
popa
push
xor
mov
cwde
retf
ja
and
xor
jo
push
ja
or
je
mov
ins
and
sub
mov
outs
sti
mov
cs
daa
inc
or
push
jecxz
cmp
in
loope
sub
add
ins
ror
cmp
mov
push
pop
sub
outs
out
inc
and
dec
inc
or
or
add
je
push
mov
shl
bound
test
push
mov
icebp
add
idiv
idiv
(bad)
jg
ret
xchg
inc
enter
adc
shr
inc
call
add
and
scas
dec
xchg
sbb
out
cli
test
daa
lods
push
or
dec
inc
dec
jne
test
pop
rcl
mov
pusha
add
add
push
aaa
ds
dec
xor
pusha
jbe
pushf
and
fnstenv
push
and
imul
test
mov
dec
daa
push
ret
nop
sbb
fbld
loope
arpl
jmp
loopne
lock
ud2
pusha
mov
dec
test
sbb
cld
lds
cmp
jge
out
aaa
mov
inc
inc
jbe
and
push
dec
xor
mov
mov
mov
scas
inc
imul
mov
cdq
or
xor
sbb
lods
jmp
xchg
ret
aaa
or
jl
pop
cmp
inc
sub
lock
loope
gs
pop
push
les
push
mov
xor
ret
fadd
xor
call
pusha
mov
test
cmp
test
rcl
mov
xor
aad
cmp
repnz
das
aas
cmp
sub
cmp
nop
cmp
adc
jmp
test
jne
jmp
sbb
sbb
push
arpl
cmp
jo
lea
sbb
pusha
cmps
cld
rcr
loope
jp
dec
into
adc
imul
jmp
mov
call
pop
test
and
push
push
adc
cmp
xor
xchg
call
sbb
or
fsubr
test
sub
shr
pop
or
xor
lods
jmp
mov
(bad)
ins
lock
or
add
mov
test
call
inc
ret
push
out
call
ror
cmps
mov
sub
fisttp
mov
sbb
sbb
int
js
push
adc
(bad)
dec
adc
dec
mov
mov
sbb
or
jp
loope
mov
xor
movs
ja
mov
inc
sub
cmp
inc
jmp
adc
jns
scas
xchg
pop
aad
(bad)
shl
cld
xor
xlat
push
int3
out
iret
push
add
je
out
in
pop
dec
enter
cmp
mov
push
cmp
cmp
and
std
mov
adc
dec
hlt
mov
xlat
jne
push
xchg
push
inc
je
mov
inc
or
out
enter
repz
fstp
(bad)
mov
adc
stos
into
jge
movs
pop
xchg
xor
mov
cmp
push
ins
in
mov
jne
mov
pop
mov
sub
jb
mov
(bad)
cwde
jnp
mov
pop
pop
inc
jmp
mov
and
test
je
push
mov
popf
gs
or
dec
mov
fs
movzx
out
in
fcom
inc
add
mov
mov
or
outs
shl
mov
nop
cmp
adc
adc
outs
leave
icebp
test
clc
pusha
cld
xlat
xlat
sub
jnp
pop
cmc
xchg
loopne
xor
add
and
jb
pop
and
xor
leave
inc
cmp
inc
jb
pop
inc
or
adc
fucomip
or
cmp
scas
loopne
push
pop
sar
adc
pop
adc
rcl
inc
out
mov
lock
mov
inc
mov
clc
push
and
or
lea
sbb
xchg
iret
retf
je
inc
add
sti
sbb
(bad)
(bad)
push
movs
or
cmp
int3
and
cmp
jne
xor
pop
fistp
retf
or
jl
ror
sbb
adc
mul
daa
dec
mov
das
(bad)
cmp
mov
pop
aam
leave
addr16
pop
das
les
sbb
mov
jbe
xchg
cdq
cmp
outs
mov
cld
dec
or
dec
add
add
add
test
call
push
inc
xor
sbb
lock
pop
mov
add
pusha
lock
lock
add
pop
jbe
push
ins
push
ja
mov
rol
push
(bad)
lds
dec
inc
cmp
adc
jp
out
mov
dec
not
inc
pop
pop
add
jbe
pop
xchg
push
shr
fcmovnbe
adc
add
jg
push
push
rcl
sbb
out
cdq
lock
iret
add
adc
xchg
dec
adc
in
and
int
mov
out
dec
xor
pop
stos
nop
mov
cli
push
cmp
sar
adc
cmp
outs
or
jno
psubsb
and
call
sub
inc
sbb
lock
add
jle
mov
lock
mov
je
cmp
jne
mov
mov
loope
je
cmps
or
fild
imul
push
call
in
sub
int3
mov
ja
pop
add
jmp
sub
call
or
clc
push
enter
dec
je
movs
dec
dec
jo
cld
rcl
push
rol
fsub
cmp
mov
outs
(bad)
cmc
and
or
in
arpl
mov
add
enter
pop
es
scas
rol
push
push
mov
jne
clc
add
add
mov
popa
push
rcl
jmp
fcmovb
fstp
push
addr16
and
ror
adc
adc
test
mov
xor
fcmovnbe
scas
pop
xor
mov
sbb
xor
push
pusha
sbb
in
aam
or
stos
outs
ficomp
mov
int3
pop
ret
repz
cmp
or
je
and
les
cmp
mov
(bad)
int3
adc
fist
lods
mov
jne
dec
jmp
pop
dec
cmp
aam
movs
xor
aas
fs
sbb
jb
mov
test
pop
fcom
stos
push
repz
out
adc
test
ficomp
push
xlat
xchg
push
icebp
mov
and
ds
dec
dec
test
es
lods
mov
pushf
xor
aam
out
jb
pop
xor
cmp
mov
lds
pop
push
push
adc
mov
mov
mov
jl
dec
fdiv
pop
or
jmp
add
js
or
fld
shl
in
jnp
hlt
and
mov
push
push
xor
mov
jp
btc
sbb
mov
sub
pop
bswap
mov
fadd
loopne
bound
cmp
dec
jmp
inc
push
push
(bad)
lahf
(bad)
cmp
jle
mov
sbb
inc
repz
or
pop
add
push
or
hlt
dec
icebp
sub
xor
ret
rcl
or
into
sti
pop
das
call
xchg
imul
ror
lahf
jle
and
test
clc
pop
test
shr
jnp
pop
mov
xor
mov
nop
sub
mov
outs
mov
xchg
call
leave
lods
sub
or
retf
xchg
ret
nop
mov
jns
sbb
mov
scas
pop
dec
es
adc
(bad)
sub
adc
dec
fsubr
loopne
cmp
mov
and
nop
dec
sbb
(bad)
xor
add
aad
ret
seta
push
pop
cmp
ds
daa
hlt
push
ins
lods
and
pop
or
push
movs
fisttp
sub
inc
mov
cs
push
mov
inc
add
jo
cmp
inc
lods
sbb
push
dec
clc
pop
cli
pop
and
adc
sbb
jl
inc
push
inc
(bad)
mov
or
xchg
mov
arpl
mov
add
push
mov
inc
dec
jne
mov
jle
pop
test
je
cmp
mov
mov
jmp
ret
and
sbb
add
loope
movs
aad
fmul
push
les
aaa
dec
jnp
sti
mov
add
inc
jne
movs
loope
push
pop
daa
inc
pusha
popa
dec
inc
adc
cmp
jne
shl
adc
pop
or
sahf
(bad)
out
xchg
cmp
adc
add
push
call
aad
mov
mov
jnp
jbe
xchg
sub
xchg
in
mov
aam
neg
sub
mov
ror
ret
fsub
mov
iret
gs
ret
or
adc
aas
sub
fiadd
in
adc
or
daa
add
xchg
aaa
cmp
push
push
call
pushf
pop
bound
data16
mov
adc
ja
enter
mov
inc
stc
push
pop
sbb
mov
pop
adc
jle
retf
dec
outs
jle
pop
(bad)
stos
inc
xchg
cmp
je
sub
add
cmp
ds
xchg
jo
enter
hlt
jno
add
add
and
stos
or
push
xlat
push
or
lods
fmul
add
(bad)
jo
push
cmp
hlt
push
mov
sar
inc
pop
hlt
mov
add
movs
out
xchg
dec
ja
dec
popa
mov
xor
or
mov
aam
add
push
xor
fisub
cli
nop
inc
push
or
xchg
loope
pusha
mov
sbb
and
aad
lds
xchg
adc
outs
inc
inc
stos
push
mov
jmp
add
mov
mov
shl
push
out
pop
scas
mov
xchg
arpl
cdq
jb
jmp
pop
outs
mov
aam
icebp
inc
ins
push
mov
mov
(bad)
xor
cmps
sbb
cmp
in
pusha
push
aaa
push
jmp
cmp
cmps
mov
or
(bad)
imul
cmp
inc
push
jge
add
daa
loopne
xlat
or
add
push
sbb
or
and
xor
or
ror
repnz
add
int3
idiv
adc
out
cld
push
xlat
jge
sahf
aam
into
lods
mov
mov
call
fnsave
aam
loope
fimul
push
mov
ja
xor
movs
push
add
jb
arpl
jae
pop
mov
push
outs
or
xor
into
or
dec
scas
fsubr
add
daa
sti
add
mov
into
loopne
and
(bad)
cmc
fsubp
cs
push
das
inc
fdiv
push
fdiv
pusha
pop
in
lea
push
xor
inc
push
or
jb
push
add
cmp
ret
mov
mov
dec
clc
mov
dec
cld
mov
loopne
stc
push
aaa
cmp
daa
in
pop
sbb
cmp
jnp
xlat
pop
out
push
add
mov
xchg
shl
fadd
in
(bad)
adc
sub
loopne
sbb
inc
sub
pop
add
xchg
mov
outs
fadd
int
and
cmp
mov
or
mov
shl
cmp
test
dec
and
adc
xor
or
push
sbb
mov
add
je
outs
(bad)
scas
sub
gs
pop
sub
dec
cs
test
addr16
cmps
and
popa
and
jne
jae
fmul
push
cmp
fidivr
jl
mov
dec
xchg
adc
push
inc
ja
sub
fdivr
add
push
add
(bad)
push
pop
jo
jmp
lock
sbb
(bad)
(bad)
dec
mov
sub
retf
sbb
scas
inc
out
lea
cmp
add
add
outs
cs
popf
mov
dec
and
and
jmp
inc
and
and
and
dec
daa
out
jo
xchg
clc
dec
test
jle
adc
das
pop
or
test
pop
or
push
push
je
divps
inc
retf
(bad)
fild
or
sub
push
inc
sub
dec
add
out
ret
test
je
cld
pop
cld
or
(bad)
dec
push
or
inc
cli
xchg
sub
push
ficomp
push
cli
cmps
mov
div
imul
push
retf
pop
jge
retf
adc
hlt
mov
cmp
pushf
xor
add
adc
test
dec
inc
push
add
cmp
fdivrp
(bad)
hlt
add
shl
cmps
add
loopne
dec
sbb
loopne
arpl
and
sbb
sub
push
hlt
jecxz
adc
mov
pop
mov
jmp
aas
pop
xlat
mov
repnz
(bad)
leave
sub
rol
push
mov
push
in
leave
mov
xor
hlt
xor
push
iret
fs
shr
sti
pop
jle
aas
mov
sub
repz
push
cli
sbb
cmps
rol
cmps
inc
push
div
imul
adc
jmp
add
out
test
rcr
je
push
ffreep
add
inc
push
or
sbb
add
or
inc
xor
test
aaa
or
out
pop
hlt
jnp
adc
add
aad
mul
aam
push
or
add
leave
add
(bad)
aam
sub
ffree
dec
and
lods
hlt
add
loop
inc
test
mov
fsubr
mov
popa
cdq
shl
fadd
add
cmp
sbb
inc
cmp
push
std
dec
ins
mov
in
push
inc
pop
shl
lea
or
cli
push
call
inc
clc
jae
scas
fnstenv
mov
imul
add
clc
outs
dec
cmp
and
add
cwde
add
loope
xchg
outs
add
call
(bad)
mov
ret
sar
je
(bad)
aaa
aad
push
dec
loopne
cld
sti
push
scas
or
psrlq
add
jo
add
mov
mov
mov
ret
add
add
rcr
es
inc
add
or
sbb
sub
or
pop
int3
and
xchg
inc
scas
scas
pop
push
mov
or
dec
cs
hlt
and
mov
pusha
int
pop
cmp
cmp
(bad)
movs
inc
inc
jno
lea
pusha
jbe
js
sbb
mov
and
ret
pop
cmp
mov
push
mov
xchg
lock
popa
aaa
ror
addr16
adc
xor
adc
mov
dec
js
dec
fistp
push
sub
jmp
mov
push
pop
aad
mov
jmp
(bad)
sti
xor
mov
inc
int
iret
or
sub
cwde
sbb
push
cmp
gs
jecxz
adc
icebp
inc
loope
sahf
push
push
add
lock
out
push
stos
push
adc
mov
adc
ret
jge
fild
add
fisttp
xor
and
adc
hlt
cmp
sub
mov
leave
inc
add
push
dec
(bad)
ror
pusha
pop
in
rol
cmp
jbe
es
and
xor
or
and
or
mov
pop
jecxz
cmp
push
sub
or
sar
nop
popf
push
add
push
adc
and
push
mov
das
jp
(bad)
ret
sbb
loopne
mov
mov
xchg
ret
idiv
sbb
(bad)
test
clc
push
jb
xchg
cmp
jge
push
cmp
adc
jmp
pop
fistp
aas
inc
mov
xchg
mov
in
mov
push
inc
(bad)
out
push
fsubr
sub
and
je
(bad)
es
or
add
inc
sub
or
imul
and
pop
push
jb
aaa
sub
ss
retfw
fsqrt
sbb
mov
adc
inc
aaa
and
outs
sub
retf
pop
or
add
xor
ret
or
rcl
lock
retf
or
clc
ss
mov
aam
scas
ins
xlat
div
jb
bound
adc
inc
add
and
mov
test
jge
jmp
mov
jmp
sbb
lock
cmp
add
adc
pop
sbb
cwde
adc
jl
add
xchg
push
in
sbb
jne
add
dec
call
out
shl
mov
jb
fisttp
fdivr
or
sub
adc
or
add
add
or
loop
outs
push
add
mov
push
js
lock
jl
aaa
in
pop
cmps
ret
push
xor
xor
pop
mov
jbe
dec
retf
push
les
call
clc
shl
sub
rol
and
adc
inc
pop
(bad)
cmp
fcomp
mov
mov
add
or
dec
mov
add
or
adc
mov
test
or
mov
(bad)
call
inc
mov
addr16
movd
xchg
fadd
inc
sbb
rcr
and
add
mov
adc
pop
sub
div
shr
aas
add
rcr
mov
xor
ret
daa
add
inc
inc
push
fs
ror
sbb
mov
lea
test
sbb
icebp
add
push
clc
cmp
pop
push
imul
cmp
adc
inc
out
cdq
adc
dec
js
jno
dec
pop
scas
ret
sub
cld
imul
ja
loopne
push
lock
mov
add
mov
fst
dec
ins
cmp
pop
iret
ret
or
sbb
ja
pusha
add
xchg
movs
adc
setg
sub
ret
ret
lahf
ror
pop
mov
push
adc
sbb
pop
fsub
sub
pusha
and
jno
cmps
enter
arpl
or
xor
push
cmp
ss
fisubr
jmp
and
out
push
xlat
adc
cmp
jmp
sub
je
add
inc
jno
das
sub
or
loop
bnd
mov
push
dec
mov
add
call
in
cmp
jne
imul
repnz
loop
xor
inc
push
adc
add
jl
jl
add
jo
out
popa
inc
or
adc
push
mov
out
adc
ret
add
lahf
cmp
cmps
inc
mov
repz
jmp
popa
add
add
dec
lods
and
clc
cmp
rcr
push
push
cmp
inc
adc
sbb
sub
ss
stos
cld
inc
dec
pop
sbb
aaa
xlat
push
fdivr
inc
or
sub
clc
hlt
call
mov
bound
jmp
inc
or
mov
xor
stos
push
cmc
out
js
and
mov
push
ins
or
out
mov
sub
xor
lds
movs
test
or
cmp
pop
pop
loope
cli
adc
js
xor
adc
lock
movs
nop
mov
popf
add
adc
sbb
fwait
ret
les
push
cmp
sbb
dec
jmp
xchg
or
xchg
rcl
aaa
sub
push
sbb
push
out
mov
inc
mov
ja
in
inc
xchg
or
lea
leave
dec
fdiv
fucomp
xor
mov
je
es
pop
sbb
or
xchg
xchg
sbb
xchg
add
xor
shr
add
pop
adc
ins
xor
fld
aad
test
ret
imul
xor
inc
adc
fild
out
mov
rol
pop
fadd
frstor
push
xchg
stos
pop
mov
push
pop
add
mul
mov
adc
add
jmp
ja
push
mov
cmp
inc
mov
push
pop
cs
push
psubsb
mov
aad
dec
in
cmps
ret
bound
add
loope
pop
add
push
sub
jnp
and
(bad)
retf
cs
pop
mov
jbe
dec
aam
rcr
cld
jecxz
fmul
dec
jmp
cmp
stos
mov
rol
push
ror
xor
mov
sub
(bad)
mov
loopne
fild
pop
or
add
pop
(bad)
pop
push
gs
cld
movnti
pusha
add
ret
bound
push
scas
rcl
adc
or
mov
(bad)
mov
mov
pusha
pop
mov
inc
add
sub
sbb
inc
jp
pop
jl
sbb
inc
pop
push
movs
out
(bad)
push
push
push
ret
je
dec
in
test
aas
xor
add
adc
add
mov
sahf
out
loope
or
cdq
jns
movs
cwde
sub
and
add
mov
shr
outs
mov
sbb
retf
pop
add
ret
pop
push
jo
cmp
xor
mov
fild
jp
aam
fst
js
jmp
inc
fxch
inc
rol
inc
mov
adc
into
shl
(bad)
sub
xchg
adc
push
mov
or
sbb
shl
or
sub
ret
inc
push
and
push
push
movs
mov
adc
(bad)
or
mov
jp
mov
push
or
inc
mov
pop
ins
inc
pop
pop
out
cmp
mov
inc
test
pop
and
sbb
or
sub
add
sbb
mov
nop
push
push
arpl
cli
test
jge
clc
and
shl
jg
(bad)
dec
cdq
lods
test
je
cmp
or
jge
xor
jo
sbb
xchg
rcr
push
imul
(bad)
inc
jl
xor
push
je
add
push
fs
adc
aaa
mov
leave
pop
in
stos
add
sti
inc
call
mov
and
mov
cwde
dec
call
push
push
xor
adc
push
repnz
or
fbstp
out
nop
pop
retf
push
inc
dec
fiadd
dec
es
aas
inc
cmps
jnp
std
add
cmp
mov
(bad)
loopne
xchg
cdq
lods
dec
push
inc
adc
sub
add
mov
aaa
je
or
or
cld
sub
sub
xor
movs
repnz
or
scas
or
jb
or
dec
and
cmp
aad
mov
add
jmp
xlat
dec
mov
pop
inc
pop
call
push
pop
mov
jle
and
push
cmp
lock
mov
outs
(bad)
ja
cmp
jl
inc
cmp
retf
leave
pop
or
and
sub
jne
mov
sub
dec
jl
inc
pop
cli
jbe
pop
mov
pusha
push
adc
jno
inc
jle
rcr
add
push
or
and
repz
adc
mov
jns
mov
retf
lock
ror
loopne
pop
adc
bnd
cwde
dec
mov
push
dec
aam
cmp
enter
rcr
add
loope
les
and
in
push
mov
rcl
loop
cwde
loopne
mov
sbb
mov
frstor
jae
mov
cmps
mov
mov
ins
mov
addr16
inc
mov
push
leave
mov
cwde
push
or
xchg
push
cld
cmp
jnp
repnz
jle
jne
out
xor
add
scas
and
fwait
int3
mov
inc
or
jle
sub
adc
mov
add
mov
test
outs
(bad)
icebp
mov
dec
push
mov
mov
adc
in
xchg
dec
add
hlt
or
and
inc
jbe
loopne
mov
fidivr
sbb
push
jb
je
in
jmp
push
mov
jb
xchg
call
and
push
jns
clc
lock
add
sbb
cmc
inc
hlt
sbb
in
pushf
jmp
shr
xchg
sbb
cmp
movs
sbb
mov
outs
inc
mov
popa
and
jp
idiv
xchg
inc
adc
push
add
push
push
push
xchg
push
pop
pop
dec
or
xchg
mov
ins
nop
stos
dec
and
jo
push
sbb
sub
sbb
or
int3
pop
arpl
mov
sbb
add
push
shr
or
cmp
cmp
out
push
xchg
data16
add
push
scas
push
push
jae
mov
test
pop
push
cmps
dec
fisub
add
pop
ret
nop
push
adc
loope
add
push
mov
push
push
push
arpl
ins
inc
push
mov
or
bound
jb
mov
or
or
push
pop
adc
adc
inc
imul
add
dec
fs
dec
dec
outs
arpl
test
jg
and
int3
or
jle
add
and
jae
inc
adc
lods
jb
xor
push
je
jae
add
fnstcw
sbb
(bad)
mul
stc
fsubrp
push
dec
fisub
cdq
clc
das
mov
dec
and
xchg
xor
cmps
mov
adc
cwde
test
push
mov
add
adc
clc
ret
mov
stos
and
jb
sub
or
adc
cwde
xchg
xor
push
out
movs
or
or
jae
adc
sbb
sub
push
mov
outs
and
inc
mov
push
cmp
fild
loop
add
scas
add
sbb
mov
daa
sbb
test
sub
ja
xchg
sbb
lds
and
shl
and
es
and
(bad)
adc
or
cmp
stos
sub
xchg
adc
pop
(bad)
or
das
imul
jne
xor
xor
pop
and
cld
push
push
jbe
inc
push
(bad)
mov
inc
imul
inc
push
daa
and
pop
adc
or
and
add
leave
and
or
jge
dec
jo
stc
mov
adc
and
mov
inc
clc
test
fs
sub
or
dec
pop
adc
ja
and
and
push
ret
adc
cmp
add
push
cmp
repz
scas
or
inc
adc
iret
pop
arpl
shr
and
pop
mov
push
int
test
jg
sbb
call
dec
adc
loop
jmp
nop
sub
icebp
add
mov
loope
sbb
test
and
lods
inc
and
inc
inc
push
add
pop
outs
or
in
fwait
ret
dec
pusha
lea
pusha
xchg
jno
dec
out
mov
or
call
adc
push
ret
lds
mov
inc
(bad)
or
test
and
or
cmc
adc
ss
call
lock
jmp
sbb
clc
stos
push
or
pop
adc
popa
or
scas
daa
test
aam
sti
in
fisttp
add
enter
sbb
inc
fs
enter
(bad)
in
cmps
or
pop
mov
ret
add
and
push
mov
in
mov
and
sub
inc
add
daa
ins
sahf
std
mov
ins
pop
std
push
(bad)
sub
dec
ds
pushf
pop
sbb
dec
out
call
cmp
call
mov
mov
mov
push
lock
outs
in
xchg
pusha
out
aaa
dec
out
mov
xchg
fadd
in
imul
push
sub
enter
lahf
data16
cld
les
stos
mov
cmps
inc
sub
cmp
mov
push
sar
push
xchg
push
mov
push
lds
(bad)
push
mov
fld
ins
ror
cwde
scas
fsub
mov
jl
out
(bad)
push
dec
xchg
xor
pop
push
fdivrp
push
sahf
lock
(bad)
(bad)
(bad)
pushf
mov
shl
pop
test
adc
cld
jo
mov
xchg
clc
outs
js
push
cld
xchg
pop
push
movs
test
paddsw
enter
icebp
lds
std
jl
or
jl
test
jp
adc
pop
aaa
xor
mov
mov
adc
out
mov
xchg
(bad)
nop
or
dec
ins
ret
lock
cli
movaps
jmp
and
add
adc
int
shl
(bad)
mov
(bad)
lock
adc
mov
xchg
sbb
add
inc
cs
push
cmc
shr
loope
ss
test
sub
and
mov
add
lds
add
retf
adc
adc
das
cmps
fidiv
add
add
outs
loop
ja
or
and
fisttp
pop
sub
into
bound
or
push
xchg
jns
fadd
loop
les
dec
(bad)
add
fcomp
push
dec
pop
arpl
pop
pop
jecxz
add
pop
adc
or
shl
dec
adc
loopne
xchg
cwde
inc
inc
comisd
or
pop
adc
push
add
push
and
push
fs
or
push
bound
push
pop
cmp
adc
adc
xor
outs
addr16
gs
and
push
outs
jmp
mov
iret
fcomp
or
xlat
fild
add
and
or
dec
mov
imul
xor
(bad)
fist
sbb
out
mov
das
mov
imul
inc
(bad)
outs
or
mov
aas
pop
call
loope
int
push
rcl
sahf
cmps
in
jnp
shr
gs
test
jle
push
or
xchg
rcl
add
addr16
sub
add
pop
add
push
sbb
ja
add
or
fwait
or
inc
mov
inc
jb
popa
jns
mov
ins
add
sbb
push
and
push
or
and
jl
rcr
jns
xor
data16
ret
inc
adc
dec
and
or
or
shl
cmp
ficom
lods
movs
pop
push
cmp
into
ss
or
lahf
xchg
adc
fwait
adc
data16
ins
jns
and
cmps
mov
xchg
and
scas
gs
not
jge
xor
add
in
jmp
and
or
retf
dec
dec
jle
pusha
add
fdivr
or
(bad)
fcmovnb
adc
imul
pop
xchg
ins
or
sahf
jbe
ret
out
jae
mov
add
push
data16
rcr
pop
and
xor
add
popf
mov
mov
inc
or
pop
xchg
inc
imul
lahf
adc
call
sub
fimul
pushf
shr
push
push
adc
dec
xchg
fdiv
adc
inc
test
loopne
inc
push
mov
and
jmp
je
inc
jo
and
test
or
fwait
loopne
push
pop
or
mov
mov
add
sub
pop
cmp
ins
add
jns
mov
adc
inc
lods
inc
jns
or
and
js
aas
mov
mov
jae
loopne
or
pop
add
cmp
or
inc
cmp
clc
and
mov
rol
test
cmp
inc
adc
xchg
xchg
les
sub
(bad)
dec
push
daa
mov
add
sbb
cmp
clc
dec
jl
popf
push
jle
or
push
fisttp
or
call
add
addr16
push
push
dec
dec
gs
pop
xchg
js
sbb
rol
xchg
mov
ins
int3
pop
test
mul
clc
pop
adc
mov
scas
add
push
cmp
xchg
inc
inc
and
dec
loopne
dec
outs
mov
arpl
ins
ins
pop
in
sub
int3
or
cmp
popa
out
push
add
mov
dec
mov
div
je
add
test
das
sub
sub
ins
or
or
movs
add
inc
js
call
pop
mov
ror
push
sbb
call
das
in
xor
or
pop
push
add
adc
push
sbb
mov
test
pop
add
ds
adc
jl
adc
and
cmp
mov
mov
and
movs
and
rol
mov
jo
push
inc
ins
popa
jae
xor
icebp
fcomp
daa
or
pop
sub
divps
dec
cld
pop
inc
jb
and
and
sbb
add
loope
dec
fild
sub
imul
jnp
or
and
jns
add
dec
mov
mov
cmc
popa
fild
icebp
adc
pop
leave
clts
push
and
push
and
pop
push
movs
adc
xchg
push
mul
add
clc
mov
push
mov
lahf
cmp
or
into
leave
cmp
push
pop
adc
mov
es
aas
add
add
aam
sub
or
pop
mov
or
mov
data16
or
push
jb
popa
mov
xchg
adc
and
xchg
shl
shl
ins
or
(bad)
int
jge
mov
lea
xor
mov
inc
(bad)
ins
cld
pmulhuw
hlt
or
push
aam
mov
(bad)
jo
daa
shl
xchg
mul
or
stos
ror
stos
push
mov
push
cdq
daa
sub
repnz
push
push
test
inc
sti
shl
sbb
push
push
stos
imul
cmc
daa
dec
(bad)
daa
loopne
push
sbb
push
rcl
daa
add
mov
push
daa
test
and
leave
fist
cmc
push
js
ins
ss
repz
sahf
push
and
jno
(bad)
int3
hlt
mov
dec
ds
sub
sbb
and
and
aam
icebp
adc
mov
add
xor
inc
popa
shr
mov
cmovbe
adc
fs
push
dec
or
jecxz
inc
push
dec
arpl
aad
sti
mov
dec
mov
icebp
fidiv
mov
mov
mov
pop
adc
movs
sub
call
fbld
lock
pop
push
add
cmps
push
or
sbb
dec
or
cmps
add
push
je
adc
popf
lods
xor
xlat
test
mov
xchg
js
inc
adc
je
mov
stos
sub
pop
es
sbb
aaa
lahf
test
add
aaa
xchg
jo
inc
jb
add
add
add
sbb
pop
mov
cmps
cwde
les
rol
nop
test
fwait
push
fucomip
pop
xlat
shr
addr16
mov
std
xchg
pusha
adc
inc
jae
nop
outs
arpl
(bad)
js
popa
rcl
inc
cmps
jecxz
dec
add
loopne
adc
sbb
das
fmul
or
mov
mov
and
in
(bad)
loopne
and
fisub
push
adc
jle
push
je
sbb
in
cmp
imul
imul
js
and
sahf
rcr
inc
mov
mov
ret
es
daa
popf
ror
mov
xchg
xor
popa
mov
test
scas
adc
xor
dec
into
leave
ret
mov
fs
test
push
mov
out
js
sub
xchg
loopne
add
jne
xor
and
or
sbb
loopne
and
or
jbe
add
mov
dec
sbb
mov
out
add
cmp
push
lds
mov
adc
inc
imul
(bad)
pop
cs
test
inc
in
xchg
jmp
xchg
cli
jae
pusha
sub
sub
sub
pop
aas
push
outs
or
loope
mov
dec
pop
ins
sub
rol
shl
jo
test
adc
pop
jo
and
or
xor
js
and
js
test
aad
fstp
ffree
test
ret
mov
jae
in
loope
adc
push
push
or
int3
push
mov
ja
(bad)
hlt
add
test
jne
pop
cmps
lea
sbb
xchg
cwde
je
(bad)
sbb
mov
add
push
retf
test
and
aas
in
pop
jmp
pop
push
jne
inc
add
sub
and
xor
paddb
jb
ret
push
push
mov
jb
in
dec
push
pop
dec
push
std
dec
imul
fild
mov
pop
pop
leave
call
ret
wbinvd
sbb
outs
mov
cmp
xchg
cld
pop
jne
outs
aad
and
jno
scas
sub
pop
stc
jmp
psubd
adc
and
ja
push
sbb
add
pop
mov
adc
mov
add
ins
sub
icebp
add
add
in
add
sbb
sub
pop
and
sbb
or
(bad)
call
pop
in
pop
mov
cmp
add
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
test
jmp
jmp
call
jmp
out
into
call
push
sbb
or
dec
fisub
iret
imul
dec
fucomip
push
jl
loopne
push
sahf
push
mov
in
loope
jecxz
cmp
dec
repz
xor
mov
sub
ds
ds
push
push
in
out
adc
es
push
mov
and
in
pushfw
mov
hlt
imul
(bad)
iret
pop
jge
out
push
les
xor
jo
pop
lods
cs
ds
mov
rcr
sub
lock
cmp
push
std
int3
fstp
cmp
movs
push
nop
cmp
loopne
sub
push
mov
mov
inc
mov
ins
inc
movs
fst
mov
icebp
fisubr
adc
push
inc
mov
add
cmp
mov
fwait
sub
bound
or
fadd
int3
imul
fsub
dec
les
sahf
clc
add
add
jns
lods
xor
call
js
xor
adc
inc
(bad)
arpl
push
push
stos
pop
push
jmp
jb
out
std
sbb
push
add
sub
lods
inc
daa
test
rol
sbb
or
sysexit
fwait
inc
add
outs
cwde
pusha
mov
or
imul
push
imul
bound
xor
sub
mov
sbb
inc
xchg
aad
push
sbb
mov
mov
mov
paddd
cmc
and
stos
add
cmp
mov
cmp
jg
pop
adc
imul
ins
jns
shl
int
hlt
ss
mov
or
inc
pop
add
and
push
jb
lock
inc
ins
push
adc
mov
sbb
movs
mov
(bad)
adc
cmp
cwde
inc
mov
arpl
and
leave
and
sbb
xchg
movs
not
fimul
lods
push
sar
fnstcw
inc
and
mov
dec
inc
or
jecxz
and
mov
je
retf
inc
and
jmp
adc
xor
cmp
je
mov
cmp
retf
sub
into
jo
jecxz
inc
std
test
ss
mov
dec
sub
or
loopne
sahf
adc
add
dec
movs
add
inc
xor
inc
add
pop
adc
sbb
rcl
xor
adc
(bad)
jne
or
mov
jne
add
adc
cmp
call
cld
push
jo
cdq
pushf
and
(bad)
popa
jne
popa
add
dec
pop
pop
mov
cmp
js
pop
nop
xor
aam
je
out
sub
pushf
add
gs
and
and
cmp
add
sbb
jg
xchg
mov
retf
xchg
jmp
xchg
xchg
xchg
xchg
jge
shl
xchg
xchg
retf
add
sub
xchg
xchg
xchg
xchg
xchg
mov
cld
xchg
xchg
xchg
retf
and
dec
ins
xchg
pop
xchg
retf
xchg
mov
adc
xor
pop
or
ins
sbb
sbb
mov
mov
jmp
or
imul
sub
dec
idiv
js
push
shl
sbb
xor
test
std
movs
shl
inc
imul
xor
ins
push
jne
lea
xor
pusha
aam
cmp
push
inc
cld
dec
mov
mov
fwait
xor
or
dec
pop
mov
mov
or
adc
inc
xor
inc
cmp
inc
in
adc
adc
idiv
push
inc
or
mov
push
movs
or
inc
arpl
ret
sbb
mov
dec
popa
xor
dec
dec
dec
xchg
pop
mov
mov
imul
int
lea
mov
mov
movs
inc
inc
or
aam
mov
sub
xor
iret
xchg
mov
jg
inc
loope
ds
adc
cwde
inc
or
mov
lds
push
(bad)
stc
xchg
dec
jns
sti
in
mov
or
inc
movs
add
jbe
pop
add
setbe
add
xchg
adc
pop
pop
add
das
hlt
(bad)
pushf
and
enter
and
cmp
and
pop
adc
daa
pushf
add
cmp
and
daa
push
mov
loop
mov
arpl
dec
dec
cmp
jno
addr16
jmp
or
outs
jne
xchg
fcom
addr16
popa
mov
push
mov
xchg
popa
add
push
pop
xchg
mov
imul
push
dec
les
dec
or
add
jnp
into
inc
lods
daa
add
add
sbb
and
xor
cmps
pop
dec
clc
iret
push
imul
add
test
add
loopne
ret
pop
lahf
push
mov
cld
and
cmps
or
loopne
dec
lea
add
sbb
dec
push
push
and
mov
sbb
xor
adc
cmp
push
mov
pop
or
or
sbb
xchg
int3
mov
cmp
sbb
mov
(bad)
push
dec
cmps
(bad)
in
adc
pop
add
mov
cmp
add
and
pop
dec
clc
add
inc
call
or
adc
sub
sub
xor
inc
js
adc
cmp
lods
adc
js
sbb
inc
and
sar
icebp
push
mov
leave
inc
pop
es
je
xchg
sbb
fnsave
inc
aas
repz
retf
fcom
jae
mov
ret
jb
jmp
push
scas
sub
xor
lahf
mov
lahf
adc
leave
sub
mov
xor
leave
imul
mov
jne
pop
gs
xchg
(bad)
xchg
jae
mov
addr16
and
push
test
sub
jg
inc
dec
ret
clc
arpl
sub
jmp
arpl
push
test
loop
fst
das
add
call
mov
repz
pop
test
shl
add
scas
inc
repz
into
jl
mov
xor
adc
dec
sub
mov
jno
inc
jo
xor
arpl
mov
pushf
mov
shl
mov
xor
mov
fs
out
push
add
ss
inc
jne
sbb
pop
cmp
xor
dec
and
push
je
js
mov
(bad)
test
mov
push
xor
hlt
fs
cmp
sbb
add
fcom
daa
scas
aas
cmp
cmp
repnz
dec
lock
cmp
xchg
pop
mov
mov
add
xchg
ret
mov
ds
jmp
xor
xor
or
not
js
(bad)
cmp
aad
inc
add
xchg
into
out
ret
mov
lods
ja
loop
cmp
stc
or
inc
add
je
nop
mov
mov
push
push
and
push
add
xchg
xor
sub
and
sub
mov
mov
or
xchg
shr
ret
mov
or
mov
fild
jecxz
add
dec
or
cmps
xor
lock
adc
jno
arpl
fwait
loope
push
in
add
into
pop
stc
fimul
add
or
popa
outs
pushf
add
fs
lods
ds
dec
dec
loopne
inc
sub
add
push
xor
xor
dec
add
test
or
or
inc
loope
rol
ror
or
sub
xor
pop
sub
pop
pop
dec
js
pusha
loop
outs
lds
mov
cmp
dec
faddp
xchg
adc
js
and
inc
loopne
mov
es
daa
inc
push
and
push
or
dec
add
dec
xchg
dec
inc
push
rol
sub
mov
nop
jbe
(bad)
clc
ja
inc
js
push
(bad)
inc
mov
mov
push
xchg
dec
inc
inc
xchg
xchg
dec
jbe
or
xor
mov
mov
int3
retf
movs
frstor
sub
call
sbb
aam
and
mov
add
push
mov
dec
(bad)
pusha
cmp
loope
jb
inc
add
pushf
push
pusha
test
cmp
pop
sub
adc
mov
xchg
call
test
mov
mov
loopne
ret
adc
pop
inc
push
dec
(bad)
shl
retf
xor
ret
mov
enter
sub
cdq
mov
sub
call
inc
xor
or
test
jo
mov
add
cmp
lea
mov
pop
ret
inc
enter
pusha
stos
loope
xor
sub
(bad)
mov
pop
cmp
dec
(bad)
fimul
(bad)
and
mov
mov
cwde
out
or
(bad)
out
inc
jbe
fadd
dec
fs
add
clc
add
fmul
popf
and
gs
fcom
in
mov
dec
push
inc
push
dec
pushaw
dec
fsubr
or
rcl
dec
pop
push
adc
mov
jo
pop
sbb
mov
and
push
pop
sbb
add
add
jmp
addr16
jbe
push
fst
shl
out
push
shr
or
push
sub
xchg
cmp
adc
adc
mov
mov
mov
sbb
dec
cmp
jne
push
sub
inc
push
add
mov
sbb
cs
add
es
inc
inc
inc
dec
jne
mov
fild
and
dec
inc
inc
inc
inc
je
mov
inc
add
pop
test
inc
inc
movs
int
sbb
inc
mov
iret
out
adc
aaa
inc
inc
inc
inc
pop
jnp
ret
inc
inc
out
daa
xchg
and
retf
out
and
xchg
and
sub
pop
and
(bad)
jmp
das
push
jns
and
and
xchg
xchg
xchg
pop
or
retf
xchg
xchg
retf
repnz
dec
xchg
xchg
xchg
xchg
ins
xchg
mov
xchg
xchg
xchg
retf
add
dec
jo
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
and
lea
fld
sub
jne
(bad)
xchg
xchg
retf
xchg
lock
xor
xchg
jnp
dec
add
jp
test
pop
mov
dec
aam
push
xchg
pop
push
add
test
xchg
inc
pop
movs
xor
scas
scas
rcl
pop
out
pop
in
adc
lahf
inc
in
jmp
inc
pop
inc
popa
fisttp
repz
sub
adc
js
pop
adc
xor
test
xor
inc
inc
add
mov
add
daa
hlt
pop
pop
xor
xor
(bad)
aas
add
mov
mov
mov
(bad)
mov
jge
loope
jp
push
int3
push
mov
push
je
in
pop
xor
pop
mov
clc
add
mov
ud1
std
(bad)
mov
je
inc
mov
nop
inc
push
inc
adc
aad
repnz
add
div
xor
pop
adc
mov
out
cmp
xor
lahf
sub
cwde
in
mov
mul
fiadd
jno
pop
add
mov
fisubr
push
daa
loop
call
xor
ds
das
rol
lahf
inc
ret
inc
pop
or
test
inc
jp
dec
jne
add
mov
stos
adc
pop
pop
or
mov
sub
ret
(bad)
inc
icebp
jbe
pop
aaa
ja
enter
or
enter
cmp
inc
ins
stos
sbb
rol
mov
imul
test
or
mov
adc
pop
cmp
push
dec
js
sbb
cmp
dec
lods
aas
jnp
(bad)
or
fs
dec
cmp
shr
lea
popa
dec
pop
add
dec
mov
stc
out
ins
xor
js
ss
jo
test
addr16
xchg
push
push
or
fsub
or
add
nop
cmp
add
mov
push
add
sbb
xor
cmp
fwait
ss
and
(bad)
xor
push
inc
and
aas
stos
sbb
scas
cld
lods
or
cmps
jle
push
adc
cmp
inc
pop
bound
mov
mov
inc
push
repnz
mov
es
in
sub
and
ja
or
sbb
es
ja
das
jo
mov
inc
cwde
(bad)
xor
rol
fadd
lds
xchg
fcomp
xor
and
xor
lods
ins
fld
mov
fld
aas
in
movs
hlt
sub
aam
adc
jns
jecxz
les
sub
sbb
cwde
js
xor
mov
sbb
and
sub
push
mov
mov
ins
push
mov
mov
loopne
or
xor
pop
sub
add
sbb
mov
push
xor
pop
hlt
or
fwait
jo
fiadd
xor
adc
pop
mov
pop
pop
inc
stos
inc
js
or
das
jae
arpl
sbb
mov
outs
or
ss
cmp
shl
jmp
pop
jae
add
mov
nop
loope
bound
das
nop
mov
jmp
scas
xchg
add
movs
adc
movs
ficomp
inc
mov
imul
mov
fdiv
popa
test
xor
dec
pop
in
inc
add
xor
xchg
mov
push
in
jge
mov
mov
test
stos
jp
mov
mov
clc
sahf
pushf
mov
movs
std
and
in
jns
dec
add
repnz
loope
add
push
add
fld
cmp
inc
daa
or
and
cmp
and
pop
lods
ins
call
and
lds
xchg
push
or
inc
push
adc
push
adc
sar
pop
pop
sbb
das
ins
lods
pop
adc
js
jmp
xor
sahf
movs
outs
xor
push
test
lods
out
stos
and
add
and
pop
in
add
lods
add
adc
mov
push
adc
push
push
sub
xor
dec
or
gs
lods
sbb
sub
add
aad
sub
mov
inc
add
dec
adc
jns
popa
test
loope
outs
jno
shl
pop
sti
aas
or
aas
add
cwde
xchg
add
div
ins
or
pop
add
adc
inc
or
or
or
xchg
cmp
dec
mov
pop
in
mov
ror
mov
clc
mov
test
das
inc
fs
adc
shl
neg
inc
inc
push
xchg
mov
inc
ds
cs
inc
inc
leave
lock
inc
ds
inc
inc
inc
popa
test
inc
repz
push
inc
inc
inc
inc
jnp
(bad)
out
adc
gs
pop
inc
popa
or
pop
pop
add
jb
in
sub
pop
dec
rol
inc
jne
or
outs
imul
add
adc
mov
dec
mov
adc
aad
sub
setae
scas
push
test
cmps
or
pop
fs
add
popf
push
dec
xor
pop
addr16
jp
mov
add
mov
dec
push
mov
repz
add
mov
or
sub
pusha
pop
lock
jbe
push
dec
or
sbb
cdq
mov
sbb
add
and
fwait
aad
mov
or
mov
xor
sbb
inc
enter
fwait
inc
dec
push
and
cmps
and
sbb
add
pusha
pop
xchg
sbb
pop
jmp
adc
or
push
inc
push
bound
and
inc
jns
movs
adc
call
or
(bad)
jmp
mov
inc
scas
xchg
retf
jecxz
pop
xor
out
shr
pop
or
xchg
mov
outs
fmul
push
xchg
sbb
cmps
fmul
mov
sub
lds
push
and
sub
and
fwait
test
outs
mov
push
popf
sbb
jmp
add
cmc
out
jmp
mov
adc
add
push
fild
jno
xor
je
xchg
mov
js
jp
xchg
push
jp
sar
mov
mov
stos
add
push
imul
add
lahf
dec
jae
add
adc
push
popa
jae
clc
push
js
mov
sub
cvtpi2ps
mov
inc
int3
inc
jmp
rep
pusha
or
test
inc
sti
push
jp
(bad)
mov
and
sub
inc
das
jo
add
(bad)
ss
js
shl
add
inc
data16
fnstsw
pop
mov
arpl
aas
push
dec
inc
icebp
lea
add
dec
push
dec
inc
or
sbb
and
stos
jo
mov
jge
sbb
adc
push
inc
stos
cmps
inc
mov
mov
int3
dec
lahf
push
xor
fld
add
mov
push
push
enter
sub
push
loop
inc
cmp
xor
adc
lods
adc
push
or
into
shl
jne
push
cmps
es
std
pushf
xor
sbb
fcomp
push
or
shr
mov
adc
loope
lds
mov
pop
cwde
jecxz
adc
int3
rcr
or
and
cmps
adc
push
je
popa
or
mov
in
push
in
popa
pop
fadd
es
adc
push
dec
aas
loope
loopne
adc
mov
repz
ds
sbb
sar
daa
mov
xor
outs
jnp
mov
adc
push
inc
jo
(bad)
or
mov
xor
push
dec
jbe
xchg
es
outs
lock
dec
inc
pop
push
jp
cmps
push
loop
add
das
add
xchg
add
cmp
int3
pop
iret
lods
adc
inc
loopne
lods
mov
jp
xchg
pop
push
addps
js
iret
nop
and
ror
pusha
mov
(bad)
lds
mov
add
jg
xchg
push
dec
es
add
loop
and
cmp
or
fwait
test
in
add
or
pusha
test
pop
push
xor
adc
sbb
xor
cmp
inc
dec
and
outs
call
add
adc
mov
dec
ret
imul
or
cmp
test
fild
mov
xchg
dec
rcl
add
pop
jns
lock
pop
or
xchg
sbb
test
in
jae
pop
dec
xor
add
arpl
pop
mov
xchg
dec
or
cmp
cmovge
mov
sbb
comiss
fidiv
push
xor
out
popa
xor
jl
or
mov
add
aaa
sbb
test
xor
xor
aas
adc
loope
popa
xchg
mov
ret
(bad)
in
inc
jmp
push
mov
push
idiv
push
cs
push
fcomp
xor
jo
mov
pusha
test
je
adc
and
sbb
jno
or
aaa
test
and
dec
popa
jo
mov
sub
pop
mov
lsl
pop
ja
jae
or
mov
pop
bound
sbb
mov
xlat
enter
and
mov
push
jne
outs
add
mov
xchg
mov
cmp
or
xlat
(bad)
loope
cmc
popf
mov
or
pop
rep
mov
pop
les
adc
and
sbb
hlt
sbb
out
or
enter
ds
sub
sbb
loope
scas
xchg
cmp
mov
push
jp
nop
test
arpl
lods
cmp
add
cmp
or
bound
xor
adc
jecxz
add
pop
xlat
(bad)
jnp
fnstcw
imul
lock
inc
or
ret
pushf
stos
out
mov
dec
cwde
loopne
mov
popa
pop
daa
mov
les
jae
movs
inc
jbe
(bad)
call
jne
lock
aaa
mov
rol
dec
outs
mov
jne
(bad)
(bad)
or
push
adc
cmp
sub
mov
pop
mov
or
mov
std
dec
add
rcr
inc
gs
dec
inc
sbb
mov
sub
iret
adc
inc
mov
shr
xor
aad
loopne
loope
push
cmp
add
push
test
aaa
xor
adc
push
jmp
rcr
sub
pusha
add
scas
mov
enter
fbstp
loop
add
inc
sbb
or
aam
mov
fidiv
dec
mov
adc
outs
mov
test
pushf
add
inc
add
add
push
jo
xchg
das
pop
add
mov
push
iret
inc
push
outs
push
cwde
fcomp
add
paddsw
in
sbb
xor
in
add
xor
jb
fisubr
pop
mov
cmp
pushf
pushf
pushf
mov
cli
and
dec
dec
dec
inc
push
jns
sar
mov
lahf
pcmpgtd
sar
and
pushf
pushf
fmul
add
xor
dec
dec
dec
inc
imul
adc
cmp
sbb
add
cdq
xor
cmp
xchg
mov
cdq
ins
je
pusha
or
scas
lock
mov
sbb
adc
in
jge
and
inc
mov
inc
jecxz
jne
push
jg
js
jle
and
fcomp
dec
push
pop
pop
sar
push
inc
mov
push
sub
add
mov
pusha
mov
jge
add
test
sub
and
sar
in
push
in
test
adc
rcr
repz
enter
movs
add
in
add
push
gs
and
(bad)
push
mov
push
cmp
or
inc
daa
sub
rol
jg
(bad)
mov
pop
enter
mov
xchg
sbb
xchg
dec
shr
test
add
idiv
push
loopne
or
adc
and
dec
imul
mov
mov
(bad)
rcr
add
arpl
add
loope
add
sbb
cmp
dec
jne
jo
pop
ror
out
stos
adc
mov
add
dec
ja
out
or
pop
push
xchg
push
pop
add
lahf
and
sub
(bad)
popa
sub
cld
dec
in
cmp
mov
add
adc
test
adc
cmp
inc
inc
jmp
or
mov
sbb
add
movs
mov
or
ja
hlt
pop
ja
xor
adc
sbb
ins
jecxz
les
jb
je
sbb
dec
xchg
push
push
int
sub
cmps
in
jae
jo
mov
add
adc
or
into
aam
pop
fldenv
pop
mov
lods
jbe
mov
mov
push
sbb
js
adc
add
ss
addr16
jns
add
adc
push
dec
loope
mov
xor
add
imul
mov
ja
ja
xor
ds
add
xor
push
add
mov
dec
sbb
or
pop
add
inc
jp
inc
clc
pop
mov
clc
sub
retf
imul
nop
shr
rol
ds
xchg
adc
push
sub
push
not
jnp
test
push
or
nop
test
mov
iret
xchg
and
call
cwde
scas
movs
dec
(bad)
xor
push
and
bound
enter
imul
push
sub
int
pop
cs
cmc
or
mov
dec
or
or
add
and
add
sub
xchg
add
(bad)
aam
sysret
xor
pusha
popa
push
stc
or
add
pop
pslld
cs
call
punpcklwd
inc
inc
inc
inc
ins
(bad)
mov
inc
cs
inc
cmc
sbb
inc
inc
inc
xchg
mov
std
inc
inc
cs
sub
ja
cs
inc
inc
shr
fs
pop
jp
fadd
cs
add
push
ja
inc
inc
inc
popf
int
sbb
inc
inc
inc
cs
inc
inc
inc
into
repz
addr16
inc
inc
inc
popa
mov
scas
mov
dec
inc
add
adc
stos
adc
inc
push
or
lds
adc
fwait
mov
sti
add
mov
adc
lods
push
das
add
or
mov
sub
loopne
inc
cmp
gs
lock
sbb
or
mov
call
fld
mov
sbb
pop
mov
and
aaa
mov
xchg
dec
adc
mov
mov
inc
add
icebp
test
jnp
in
inc
cmp
inc
push
gs
leave
ret
(bad)
jl
aam
mov
or
fisttp
mov
in
inc
in
aam
inc
or
hlt
aaa
mov
mov
stos
sub
or
push
iret
sbb
dec
rcr
pop
aad
mov
or
or
sbb
aam
push
pop
and
or
call
(bad)
(bad)
cmp
mov
mov
cmp
inc
in
mov
add
add
or
popf
call
sbb
test
inc
add
inc
fnsave
jo
push
loope
add
add
lods
es
xlat
adc
or
mov
pop
pop
push
pop
pop
xor
mov
sub
sub
mov
mov
inc
push
dec
cmc
imul
xor
adc
add
xchg
pop
test
repnz
pop
retf
in
aam
aad
test
movs
push
adc
in
sbb
push
push
in
push
or
(bad)
mov
jnp
add
arpl
dec
xchg
push
inc
sahf
jo
push
inc
or
jne
aaa
mov
shrd
pop
lods
adc
mov
sub
sub
sbb
pop
mov
mov
adc
dec
icebp
jge
pop
inc
cmp
jo
setg
popf
pop
cdq
(bad)
in
popa
sub
push
push
mov
les
cmp
add
fsubr
push
xchg
sar
imul
scas
and
add
push
and
add
jnp
fbstp
add
push
fbstp
in
rcl
cs
jp
repnz
(bad)
scas
xor
inc
add
ins
push
sbb
or
loopne
mov
or
inc
pusha
test
inc
xchg
sub
imul
ds
faddp
adc
push
ins
pushf
add
cdq
cs
add
ret
jno
xor
push
sbb
imul
sbb
pop
mov
dec
cmps
(bad)
adc
jns
sub
dec
or
add
(bad)
js
imul
mov
or
mov
das
lods
or
push
out
into
fild
add
jmp
mov
loopne
das
sub
pusha
repz
mov
cwde
jle
push
lods
arpl
jg
aam
push
cs
jnp
out
ss
fcomp
jno
push
imul
jo
test
mov
jo
sti
lods
ret
dec
loopne
dec
icebp
sub
jmp
mov
xchg
pop
xor
cmp
enter
add
dec
xchg
imul
or
jo
not
dec
test
out
rol
mov
sar
adc
and
inc
and
push
push
aam
sbb
stc
stos
popf
test
push
scas
pop
sbb
sub
inc
pop
sti
adc
or
lea
or
xor
lea
dec
add
aaa
lea
adc
adc
test
push
add
ins
mov
jp
jne
and
mov
shl
inc
add
mov
inc
mov
adc
add
add
add
int
pop
pop
test
push
pushf
imul
pop
jne
test
push
out
imul
test
push
cmp
call
mov
sbb
push
mov
xchg
mov
cmp
lahf
daa
jmp
fbstp
mov
cmps
add
and
dec
add
outs
add
test
xor
adc
or
push
adc
and
icebp
imul
add
adc
pusha
lods
dec
xor
jne
inc
mov
or
adc
push
or
cs
daa
pop
cmp
xor
add
test
sub
sub
xor
dec
xlat
into
lods
inc
sbb
or
mov
out
shl
aas
jb
pop
rol
push
(bad)
ficom
out
call
mov
and
sub
cmps
mov
add
inc
dec
dec
push
mov
popf
jg
jl
jns
push
push
sbb
adc
push
and
sti
pusha
adc
jnp
and
and
sub
cmp
xor
lea
sub
cmp
lods
sub
sbb
xor
add
jge
or
xchg
pop
and
and
test
inc
or
mov
inc
or
fwait
xchg
test
inc
adc
repnz
push
jne
push
adc
xor
mov
out
xchg
or
call
adc
dec
mov
scas
inc
fisub
add
dec
pop
push
lahf
ret
in
sub
lock
jae
das
icebp
cmp
jmp
movs
test
sti
scas
inc
imul
push
xchg
or
sbb
jg
sub
pushf
jb
inc
clc
add
ret
jb
add
jb
inc
ins
test
jns
je
cdq
fcom
jne
sbb
mov
add
int3
or
pushf
xchg
pushf
inc
jne
or
push
pop
movs
xchg
enter
pusha
mov
adc
pop
push
imul
lods
inc
fadd
mov
pop
push
xor
push
push
adc
neg
xchg
out
inc
mov
jg
add
cmp
sbb
inc
mov
mov
rcl
add
test
(bad)
lahf
add
or
mov
adc
add
cmp
aas
add
test
addr16
pop
jge
test
dec
jge
test
inc
sub
mov
jg
jo
pop
ret
xor
mov
std
call
addps
lock
test
inc
sbb
stos
xchg
es
data16
push
adc
aaa
ret
les
xor
lea
outs
pop
adc
push
imul
out
or
xchg
xchg
xchg
fs
and
test
cwde
cmps
adc
adc
inc
cmps
inc
xchg
into
sub
jbe
mov
or
add
or
cmp
xchg
adc
dec
popf
add
dec
call
adc
push
pop
inc
cmps
cmp
add
push
xor
adc
out
add
add
movs
shl
imul
push
dec
loopne
add
and
and
push
sbb
push
mov
push
lods
scas
sbb
scas
push
jl
push
nop
push
or
xor
ins
push
and
push
rcr
fadd
pop
pop
add
add
aam
adc
sub
jle
pop
sbb
mov
sbb
test
mov
mov
cs
xchg
inc
jmp
xchg
mov
pop
and
or
cmps
pop
and
pop
jmp
adc
mov
les
les
fnsave
repnz
add
les
cmp
scas
jnp
fldcw
add
adc
adc
adc
and
in
in
or
enter
daa
xchg
jne
popa
sbb
in
pop
bound
call
pop
mov
and
fld
cwde
test
adc
pop
cmp
mov
adc
cmc
mov
dec
ret
xchg
rol
ds
cmp
loop
push
mov
mov
arpl
pop
inc
rcl
or
jl
or
inc
xor
xchg
mov
cmp
add
sub
fcom
fdivr
sub
sub
loope
mov
addr16
pop
and
fiadd
popf
daa
jl
dec
push
dec
clc
ja
push
clc
push
add
sub
xchg
test
mov
(bad)
mov
inc
xchg
mov
mov
sub
aam
pusha
out
repz
inc
(bad)
adc
mov
scas
ficomp
push
hlt
aad
push
fs
pusha
fcomp
cmp
fldenv
mov
idiv
push
fld
mov
push
js
lock
data16
mov
push
pop
push
sub
cmp
add
fisttp
sub
adc
inc
push
pop
pop
rol
or
pop
cmp
movs
add
jle
or
pop
scas
jl
add
add
add
add
dec
adc
mov
js
jne
ret
mov
sbb
ret
js
rcr
cdq
fdiv
pop
sub
mov
jg
movs
mov
push
jno
(bad)
mov
pusha
fucomip
out
mov
or
les
jne
or
je
cmps
add
fcomp
(bad)
fstp
dec
push
push
push
push
push
mov
leave
test
fnstcw
out
push
mov
mov
scas
(bad)
mov
es
jmp
je
hlt
test
mov
or
mov
and
test
add
clc
popa
test
or
cwde
out
mul
adc
lock
fnstcw
in
or
push
jmp
add
jmp
das
ret
bound
and
mov
sbb
test
ins
jmp
add
shl
xchg
inc
xor
pop
popf
mov
ret
call
mov
adc
rol
dec
test
ss
mov
out
adc
and
push
and
sbb
mov
jbe
or
mov
mov
mov
aad
or
xchg
xchg
(bad)
call
mov
adc
fdivrp
pusha
test
out
mov
mov
mov
sar
test
(bad)
pusha
jp
jg
add
add
mov
movs
xor
into
cmp
fldcw
and
loope
sub
rol
pop
pusha
or
in
xchg
mov
stc
inc
sbb
inc
test
jb
mov
adc
and
inc
loop
fimul
jo
test
call
sub
sub
sbb
call
sbb
cmp
pop
and
in
xor
or
aaa
clc
jne
cmp
sbb
mov
xor
jae
adc
inc
sbb
xchg
lods
or
sar
pop
mov
loop
mov
neg
in
add
add
ficomp
cmp
mov
adc
pop
lock
or
retf
mov
cmp
scas
mov
mov
add
cmps
es
pop
ss
push
jmp
jb
jo
push
jne
add
cmp
inc
inc
mov
outs
push
mov
aaa
push
push
inc
test
je
push
mov
push
push
add
xor
data16
xchg
cli
lea
out
mov
pop
pop
push
mov
mov
aas
mov
cld
cld
cmp
mov
sub
retf
sbb
or
pop
jb
shl
and
inc
adc
inc
jae
iret
shr
sub
fsub
loopne
test
xchg
ret
pop
jmp
xchg
push
xor
adc
imul
pop
ret
mov
xor
fidivr
add
or
adc
add
mov
xchg
out
add
adc
jbe
pop
(bad)
adc
arpl
add
retf
push
add
push
cmps
xchg
adc
ins
ror
mov
retf
add
pop
add
(bad)
cs
mov
pop
and
mov
inc
adc
add
ror
add
ror
add
and
scas
and
push
call
fs
and
out
loop
lock
jo
daa
js
add
xor
add
xor
adc
sbb
mov
jne
bound
xlat
loop
sbb
les
cli
and
mov
jae
add
sub
lock
dec
jo
mov
mov
clc
(bad)
pushf
adc
in
or
out
mov
out
iret
mov
loopne
fnsave
push
mov
add
loopne
pop
lock
bound
cmp
inc
inc
(bad)
dec
cmp
dec
adc
xlat
and
outs
jmp
mov
mov
mov
mov
add
adc
div
mov
inc
or
mov
inc
and
or
add
or
sbb
sbb
sub
push
inc
xor
push
adc
je
enter
js
fs
dec
shl
jecxz
xchg
sub
data16
adc
jge
mov
adc
jl
or
inc
or
sub
mov
cmp
mov
sbb
dec
jbe
xchg
and
push
adc
mov
stos
out
rol
or
jmp
sbb
outs
add
sub
push
pop
pop
mov
fwait
mov
jmp
push
dec
je
jmp
cs
mov
je
imul
mov
rol
cmp
jno
pop
cmps
mov
js
lock
or
push
dec
add
cmp
jl
mov
mov
test
pop
push
add
in
retf
push
add
rol
hlt
stos
mov
in
dec
add
rol
arpl
xchg
push
out
mov
jo
int
adc
mov
mov
xchg
cmp
data16
outs
mov
mov
adc
sbb
je
inc
jno
mov
xchg
jge
into
cmp
cmp
push
cmp
dec
inc
xchg
adc
pop
jmp
call
mov
leave
adc
push
mov
push
mov
xor
add
sbb
daa
adc
pop
inc
out
stos
jno
sub
mov
add
mov
sbb
adc
pop
jle
mov
ret
setne
mov
clc
jne
adc
adc
sbb
dec
aaa
idiv
sub
cmp
pop
adc
push
and
push
jl
div
mov
outs
inc
loop
test
bound
pop
hlt
neg
inc
and
int3
je
jne
inc
adc
cld
cmps
mov
movq
mov
push
or
dec
aas
dec
test
and
dec
out
test
cld
sub
push
mov
mov
ja
pop
mov
and
fadd
jmp
inc
jns
push
adc
add
inc
and
adc
rcl
inc
push
mov
ret
ja
and
mov
inc
adc
pushf
add
adc
scas
push
in
mov
push
or
js
in
mov
push
and
inc
bound
cld
in
push
mul
pop
xor
fidiv
inc
and
loope
pop
mov
mov
jp
rol
pop
sub
jmp
and
or
and
sub
fild
adc
cdq
idiv
push
es
mov
in
aam
inc
inc
or
cmp
cmps
xor
dec
cmp
adc
sti
jmp
inc
or
not
shl
out
movq
mov
repz
cmp
paddd
jo
jae
popf
and
(bad)
cmps
add
fist
pushw
je
jmp
ja
fs
push
shr
pop
xor
and
xchg
test
loopne
mov
les
(bad)
pop
push
adc
ret
stos
aas
scas
sub
mov
fild
jl
xchg
lock
sub
rol
add
loopne
mov
jmp
jmp
pop
add
stos
(bad)
out
fisub
adc
cmp
jno
mov
adc
cdq
cmp
rcl
and
ins
aaa
add
movs
es
in
or
rcr
inc
xor
ds
cmp
xchg
xor
gs
pop
mov
cmp
sahf
push
push
and
sub
mov
jno
sbb
seta
adc
and
inc
and
(bad)
cmp
je
mov
aam
or
mov
fisub
test
mov
adc
adc
inc
and
push
sub
or
inc
and
in
inc
sub
push
dec
inc
stos
pusha
add
mov
fimul
mov
xor
jnp
(bad)
sahf
xchg
nop
adc
call
fstp
adc
sar
shr
push
test
jge
adc
out
add
add
imul
mov
mov
cmp
dec
pop
das
adc
dec
adc
lods
fst
test
sub
sbb
push
es
popa
call
loopne
push
loop
or
cs
push
mov
mov
jbe
mov
or
bound
pusha
xor
pop
daa
pop
xor
and
sbb
or
xor
sysenter
push
mov
std
xchg
pusha
mov
das
mov
mov
test
jge
dec
sub
xchg
(bad)
xor
mov
and
sub
ret
cmp
test
xchg
sahf
sub
imul
popa
jg
test
aaa
jmp
dec
sbb
inc
sub
add
hlt
or
cmps
sbb
lea
and
fstp
adc
cmp
sub
xor
and
pusha
popa
sar
sbb
in
aam
add
inc
push
xor
add
and
sub
and
dec
fcomp
pop
xchg
mov
sbb
je
inc
push
mov
sub
popf
push
loopne
push
cmp
lods
dec
push
xchg
push
cli
adc
adc
icebp
push
mov
clc
or
pop
movs
sbb
test
jge
ja
inc
fadd
xabort
loopne
push
and
add
and
mov
add
aam
pop
adc
inc
or
adc
dec
mov
inc
je
inc
mov
mov
dec
ret
xchg
add
fs
sub
stos
test
addr16
rcl
cmp
mov
mov
loope
popa
(bad)
retf
or
aaa
mov
push
push
and
adc
pop
ins
xchg
pop
or
or
mov
loopne
shl
fisub
and
addr16
add
nop
loope
jecxz
mov
call
and
adc
adc
fdiv
xor
xchg
jb
or
ja
xchg
sti
mov
ret
and
mov
dec
nop
stos
or
pop
sbb
pop
sbb
mov
xor
add
je
and
pop
aad
sub
ret
xchg
jne
mov
dec
xor
(bad)
dec
repnz
xchg
dec
sbb
pop
call
mov
daa
adc
iret
sbb
(bad)
push
pop
data16
or
(bad)
mov
repz
dec
sbb
ja
repz
adc
or
adc
xchg
aas
enter
jp
mov
cwde
(bad)
push
fiadd
scas
mov
shl
mov
mov
sbb
(bad)
jmp
inc
mov
mov
xchg
shl
retf
push
adc
pop
mov
mov
scas
sub
add
inc
or
fcom
jno
and
jecxz
pop
pop
sub
js
js
dec
mov
ds
in
sbb
or
sbb
push
arpl
or
and
aaa
scas
jmp
ds
popa
mov
test
je
xchg
shl
add
or
add
ja
dec
add
mov
sub
fst
mov
or
sbb
mov
icebp
jae
xor
nop
aam
not
clc
loope
hlt
and
mov
sub
jle
mov
test
adc
jne
idiv
(bad)
cmp
sets
pop
push
outs
shl
dec
ja
dec
sbb
xchg
push
pop
ret
bound
stc
pop
nop
jg
popa
mov
test
sbb
push
popa
ins
xchg
mov
sar
xchg
mov
jbe
loope
nop
es
in
test
mov
jg
add
clc
jns
and
pop
movs
outs
in
inc
mov
nop
and
cmp
dec
inc
jb
icebp
sbb
pusha
push
ror
inc
cmp
mov
pop
enter
add
xchg
adc
dec
ss
(bad)
call
test
pop
test
adc
(bad)
rcr
or
sub
cld
and
test
ret
fistp
movs
cmp
pop
add
dec
push
sbb
sub
imul
test
sbb
cmp
mov
jb
adc
scas
movlps
loopne
cld
xor
xchg
or
jno
scas
dec
pusha
ret
clc
sub
test
add
(bad)
sbb
lea
push
pop
cmp
or
and
scas
dec
inc
loop
and
or
adc
push
lea
push
mov
shr
aaa
or
cmp
(bad)
sti
mov
inc
pop
mov
jge
sbb
out
sbb
pop
mov
pop
pop
push
jle
aam
outs
inc
data16
add
nop
inc
pop
outs
fcomip
fisub
xor
or
sbb
popa
sbb
xchg
mov
mov
popa
dec
or
and
fild
push
rcr
cmp
je
div
inc
or
std
fs
adc
rol
mov
add
push
push
cmp
push
shl
(bad)
popa
mov
push
loopne
add
sub
xchg
pop
mov
jb
sbb
clc
cli
prefetcht2
pop
inc
inc
in
xchg
push
std
cwde
fadd
mov
scas
mov
sbb
dec
dec
je
(bad)
test
pop
dec
shr
mov
mov
out
rcl
cmps
xchg
mov
xchg
ins
xchg
loope
dec
in
and
cmp
ins
add
push
xchg
ret
pop
and
nop
mov
pop
xor
enter
(bad)
es
out
jmp
inc
test
popa
jns
or
fcomp
xchg
and
inc
nop
and
inc
mov
inc
sbb
xchg
gs
inc
xor
cmp
jge
repnz
mov
nop
xor
adc
lea
push
pop
xor
jmp
adc
into
(bad)
mov
and
lea
sub
out
mov
cdq
pop
xchg
jmp
push
inc
mov
cmc
sbb
pushf
mov
inc
ret
push
(bad)
sub
or
mov
and
or
add
dec
push
ror
pop
push
popa
or
cwde
call
ins
loop
inc
call
or
aad
call
retf
or
and
movs
call
aad
cld
mov
outs
adc
(bad)
das
daa
mov
push
push
and
adc
dec
ret
add
stos
cmp
call
or
inc
jo
sbb
cmp
and
aam
lea
(bad)
or
pusha
mov
and
call
add
movs
xchg
inc
inc
idiv
je
lods
and
mov
and
push
pushf
out
retf
imul
jae
mov
out
add
stos
aam
inc
pop
gs
loopne
loopne
sahf
lea
jno
inc
pop
sub
sbb
pusha
mov
mov
data16
retf
fst
fbstp
fsub
adc
lock
adc
mov
inc
mov
lock
js
mov
inc
push
pop
push
hlt
ret
ret
mov
std
or
xor
xor
cmp
adc
xor
scas
and
add
shl
popf
lods
pop
jge
int3
psubb
mov
cmp
mov
push
arpl
xor
adc
or
int3
jg
mov
test
mov
lock
jl
mov
mov
pop
xor
out
sbb
mov
adc
outs
mov
aaa
fsub
dec
cs
je
adc
or
adc
fs
into
mov
pop
sub
fwait
add
ins
add
mov
jno
scas
sahf
sub
adc
call
and
data16
add
stc
pop
xchg
es
popa
pop
or
mov
add
int3
cmp
push
outs
xchg
pop
cmp
or
sub
xor
or
pop
add
or
mov
nop
sbb
stos
sub
pop
or
sub
push
scas
cmps
mov
aam
jns
lods
add
push
lahf
retf
ja
mov
mov
cs
dec
cmp
mov
push
jb
dec
add
test
loop
push
cmp
cmp
sahf
lds
jle
movs
adc
shl
mul
inc
shr
inc
pop
cmp
dec
xchg
ret
and
xchg
sahf
pop
xchg
inc
ret
inc
cmp
xchg
cmp
lahf
jmp
enter
popa
push
movs
das
inc
test
pop
les
outs
frstor
or
sbb
and
mov
inc
popa
lahf
inc
inc
dec
inc
fs
pop
leave
sbb
push
ret
xor
daa
adc
cwde
mov
push
lea
mov
jne
mov
or
out
movzx
add
mov
jnp
sbb
jmp
sbb
xor
dec
push
or
xchg
sti
sub
cli
dec
clc
ins
sub
and
xchg
and
pop
or
inc
sub
dec
add
push
idiv
jle
loopne
mov
or
jle
adc
mov
(bad)
pop
jbe
aas
ja
enter
scas
rol
or
nop
stos
dec
sub
enter
push
movs
rol
shl
mov
sbb
and
lods
mov
imul
sub
pop
add
xchg
dec
mov
push
pop
int3
pusha
and
xchg
push
call
mov
imul
dec
push
and
into
adc
xor
jmp
pop
mov
nop
fdiv
fsub
mov
sub
sub
lods
pop
dec
sbb
xor
in
(bad)
or
mov
(bad)
push
or
or
sub
nop
sbb
je
mov
pop
mov
sbb
je
daa
cmp
push
and
jo
inc
sbb
rcr
ret
push
retf
sub
fiadd
lahf
cmp
xchg
icebp
cmp
adc
into
pop
push
lock
pop
enter
or
jne
and
mov
pop
add
cs
adc
dec
xchg
fcomp
fsub
jns
fsub
je
push
push
cdq
nop
ins
ins
inc
jo
adc
adc
mov
lea
or
adc
push
ss
call
mov
push
pop
fwait
aas
mov
gs
and
adc
pop
pop
mov
dec
lods
sub
test
push
sub
cmp
nop
xchg
inc
aaa
fucomip
loop
test
sar
push
push
std
ja
mov
push
inc
movs
and
push
add
nop
popa
cmps
pop
fcomp
or
cmp
sbb
das
xlat
add
add
mov
out
cdq
jo
mov
fdivr
add
adc
arpl
pop
and
mov
dec
je
fsubrp
cmp
scas
fst
cs
xchg
outs
push
je
mov
sbb
sbb
aad
cmp
pop
sub
add
das
aas
(bad)
add
ret
mov
sar
sub
addr16
pusha
and
xor
jbe
dec
and
scas
shr
movsx
les
call
add
add
in
cmp
lods
push
mov
sub
mov
adc
xor
mov
out
push
movs
jno
inc
and
outs
shl
mov
inc
jne
ja
xor
sbb
fs
imul
lahf
jb
int3
xchg
sbb
lds
pushf
movs
sbb
adc
push
loopne
loop
mov
rcl
add
jo
inc
int
mov
add
and
call
and
inc
ins
int3
or
pushf
add
pop
xchg
add
jle
mov
sbb
adc
loopne
xchg
mov
mov
add
outs
lods
adc
pusha
xchg
sbb
add
add
js
xlat
sbb
jno
jo
data16
mov
(bad)
call
or
sbb
sub
xchg
mov
cmp
sbb
pop
inc
cs
xor
adc
ror
fild
and
sbb
cmp
dec
pop
xchg
mov
sub
cmp
mov
(bad)
scas
call
aam
inc
push
sub
add
inc
push
adc
add
push
mov
es
iret
or
test
xor
mov
inc
and
test
add
ss
aaa
test
popf
jl
sbb
test
sub
(bad)
icebp
dec
mov
mov
push
or
mov
loop
mov
jne
jb
or
shl
dec
pop
cld
outs
push
xlat
inc
ret
push
sbb
xchg
lods
jne
xchg
push
adc
retf
shl
sbb
xchg
stos
and
test
call
jl
adc
fdiv
sti
push
pusha
lock
pop
adc
sub
nop
loope
(bad)
js
(bad)
sub
cdq
or
jge
and
pop
mov
cmp
test
jmp
cld
add
pmulhuw
push
push
push
push
pusha
rcr
sub
or
adc
rsm
lock
inc
pop
or
xchg
adc
ja
add
ret
inc
add
outs
add
mov
fcomp
loopne
dec
or
add
je
mov
xchg
or
and
sbb
cmp
je
pop
mov
mov
icebp
sub
aas
cdq
or
and
stos
fsub
jne
cmp
dec
aaa
adc
addr16
pop
mov
and
call
cmps
inc
nop
lea
scas
xor
xchg
dec
clc
nop
out
push
adc
je
popf
call
clc
xchg
call
hlt
es
icebp
or
mov
jo
jmp
jne
jb
mov
pushf
adc
inc
xlat
mov
mov
push
gs
jno
mov
pop
pop
jmp
push
sti
adc
add
popf
cmp
or
das
adc
cmp
fwait
pop
push
sti
add
dec
push
dec
jge
cmp
jg
cli
fcomp
call
add
sub
jb
sub
mov
imul
sbb
sub
jecxz
dec
sub
fild
xor
call
xor
cli
lods
push
loope
xchg
inc
mov
dec
adc
mov
inc
ret
lock
and
xor
pushf
dec
cmp
popa
outs
xchg
pop
jl
sbb
mov
sub
lods
mov
pop
cmc
push
sbb
and
out
and
scas
loope
pusha
out
pop
icebp
add
adc
or
and
pop
cmp
fmul
cmp
int3
mov
jge
ja
sbb
adc
fsub
mov
js
or
pusha
push
pop
mov
and
fwait
imul
std
jne
xchg
pop
pop
repz
pop
or
xchg
pop
call
rol
fdiv
or
mov
test
fs
ret
dec
mov
mov
mov
js
inc
adc
or
cmp
xor
jl
pop
pop
push
clc
ss
inc
loopne
fs
pop
loope
dec
jno
sbb
mov
add
xchg
fwait
mov
mov
scas
inc
or
test
sbb
and
loopne
adc
ins
or
in
test
inc
or
push
pop
or
lock
fs
adc
lock
mov
or
js
mov
inc
inc
add
rol
iret
jns
mov
and
dec
sbb
idiv
or
call
cmp
popf
test
pop
cmp
or
sub
sub
mov
in
ds
add
in
xchg
inc
scas
call
loope
nop
jo
and
push
sbb
arpl
pop
imul
cld
inc
call
stos
paddusw
add
sub
(bad)
add
push
loope
dec
fiadd
pop
scas
pop
inc
and
out
dec
movs
or
rol
out
rol
sub
and
adc
dec
shl
or
inc
fisubr
xchg
and
loope
inc
lea
lea
adc
lock
xchg
xor
ret
lock
mov
xor
inc
je
(bad)
in
inc
mov
pop
icebp
and
hlt
xor
jae
mov
jle
xor
dec
and
mov
lock
mov
lods
lea
lods
xlat
mov
cmp
jns
leave
nop
jl
and
or
cmp
push
cmc
call
add
loopne
test
int
nop
adc
adc
push
pop
adc
jmp
pop
retf
mov
pop
mov
es
call
clc
jmp
mov
data16
loop
inc
or
stos
xor
sub
pop
je
add
sbb
test
push
cmp
pop
loop
les
sbb
mov
shr
jno
nop
aam
ficom
and
shl
pop
call
pop
aad
sbb
icebp
add
lock
dec
movs
push
test
cmp
sbb
or
or
loopne
mov
test
inc
mov
or
add
add
cmp
sbb
mov
fldl2t
sub
js
add
int
rcl
pop
inc
adc
popa
dec
mov
aaa
sub
pop
pop
inc
inc
hlt
inc
sbb
mov
neg
xchg
movs
mov
mov
inc
or
mov
retf
or
nop
mov
add
mov
cmp
mov
mov
and
push
or
mov
iret
push
push
mov
sub
push
push
push
push
adc
sub
mov
push
popa
or
jae
mov
mov
xlat
test
push
rol
pop
xor
add
fistp
xchg
loopne
inc
sbb
xchg
mov
push
aas
cmp
idiv
imul
dec
lock
mov
mov
mov
lahf
test
adc
pusha
inc
cmps
and
scas
push
push
sbb
popf
in
mov
pop
inc
jae
movs
fst
(bad)
out
push
or
mov
aam
aam
jae
pop
mov
and
xor
push
in
adc
adc
sub
jecxz
mov
jecxz
das
push
aam
jne
pusha
xchg
ret
(bad)
sbb
jl
mov
out
mov
cmp
cmp
add
mov
inc
cmp
dec
fidiv
cmp
xchg
mov
(bad)
jecxz
inc
sub
mov
lock
or
jmp
(bad)
adc
pusha
lahf
jl
add
test
pop
lea
sbb
cld
test
sbb
sbb
cs
lea
lea
or
add
out
ret
push
jl
test
push
inc
adc
popf
inc
aas
in
mov
sbb
mov
iret
push
push
popf
jle
add
fadd
popf
pop
or
(bad)
leave
mov
lea
push
aaa
push
mov
mov
pushf
call
hlt
pop
pop
dec
push
fsubr
or
daa
push
hlt
inc
add
pop
sbb
xchg
mov
shl
pusha
ins
sub
mov
add
(bad)
adc
push
sahf
cs
or
or
(bad)
(bad)
adc
sbb
and
push
jmp
fmul
inc
(bad)
jle
ja
jmp
sbb
add
add
sub
and
or
nop
outs
adc
repnz
or
dec
mov
shl
push
pop
jns
add
(bad)
dec
inc
xchg
add
mov
xor
xchg
in
mov
out
loopne
inc
dec
mov
out
adc
push
mov
jnp
test
adc
sub
adc
xor
mov
adc
outs
sub
sbb
push
cmp
sar
cmps
shl
cs
lds
or
inc
(bad)
aad
scas
dec
jmp
sbb
lds
sub
cmp
ret
outs
jle
nop
inc
or
xor
leave
je
sub
int
sub
stc
add
pop
lds
mov
mov
fabs
pop
push
jne
fcom
fsub
jne
or
push
outs
mov
pinsrw
mov
into
fnsave
aaa
into
or
(bad)
out
outs
push
mov
mov
or
sbb
out
imul
dec
outs
ret
lock
les
adc
aam
retf
and
dec
fmul
add
loopne
movhps
inc
push
test
add
div
pushf
int3
mov
cmp
pop
jmp
(bad)
hlt
cmp
inc
in
pushf
push
bound
inc
inc
push
mov
hlt
mov
adc
daa
add
and
add
out
push
movs
cmp
cmps
xor
pop
and
aam
jg
sub
cdq
fistp
sbb
push
sub
or
(bad)
and
js
je
(bad)
lock
xchg
push
movs
arpl
push
loop
push
sbb
push
sbb
ret
or
add
sub
inc
nop
je
mov
sbb
lea
pop
aam
and
mov
cdq
int3
mov
and
cmp
jne
cmp
je
add
sbb
sbb
or
ins
ror
jno
daa
adc
sub
fadd
xor
lahf
jmp
adc
mov
sub
jo
jne
cmp
shl
loop
inc
and
sub
imul
mov
shl
adc
(bad)
aad
inc
dec
dec
movs
mov
sbb
adc
jle
dec
inc
out
pop
cli
nop
or
and
or
enter
push
lahf
out
pop
adc
mov
or
or
dec
mov
jmp
loop
out
test
pop
(bad)
stos
adc
pop
add
push
mov
adc
pop
nop
dec
clc
xlat
rcl
vpshaw
sub
cdq
clc
mov
mov
jmp
(bad)
imul
prefetchnta
imul
xchg
inc
xchg
push
xor
pop
inc
shl
push
js
sub
adc
and
imul
test
outs
into
push
aaa
test
popf
mov
dec
adc
in
add
and
mov
push
(bad)
ins
dec
test
adc
lahf
jo
or
mov
mov
popf
jnp
(bad)
cbw
inc
sub
xchg
lock
gs
push
lods
add
xchg
rcl
lds
mov
push
(bad)
inc
xor
jmp
mov
fcomip
add
(bad)
fmul
sub
xchg
loope
dec
xor
inc
pop
cmp
mov
ficomp
mov
jmp
pop
jno
adc
and
push
inc
adc
lds
cwde
stos
shr
xchg
ret
push
push
push
stos
add
push
aad
mov
rcr
sahf
test
adc
add
scas
enter
ins
inc
mov
scas
adc
add
enter
and
pop
lods
scas
or
mov
shr
jo
and
pop
inc
adc
cld
pop
sub
inc
popf
cmp
jg
cmp
mov
add
mov
syscall
shl
add
jne
clc
fwait
or
iret
push
adc
or
inc
rcr
or
mov
lods
rcl
cmps
mov
repz
cmp
ret
mov
fs
bound
and
je
xor
xchg
push
jno
sbb
rcr
clc
je
adc
and
mov
dec
fdecstp
loopne
fsub
fbstp
loop
hlt
je
sub
sub
push
jl
sub
addr16
nop
bound
retf
inc
sbb
push
js
aas
or
and
ins
inc
(bad)
nop
clc
or
mov
arpl
shr
jmp
clc
or
push
adc
js
ret
adc
xor
pop
pop
pop
adc
pop
scas
js
pop
ins
xor
add
adc
data16
int3
in
push
add
and
imul
cmp
or
cmc
add
add
xchg
push
mov
push
lods
loop
cli
not
mov
add
adc
xchg
int
pcmpgtb
out
mov
push
inc
add
push
cmp
je
fistp
add
xor
outs
adc
mov
add
stos
sbb
(bad)
in
shr
scas
sbb
cmp
inc
push
adc
lea
stos
in
push
das
test
je
xor
loop
sub
cmp
or
pop
mov
xchg
add
dec
lods
sub
xchg
sbb
ja
cmc
js
je
daa
xchg
inc
sub
mov
dec
sub
inc
aaa
xor
sbb
int3
ins
hlt
push
mov
xchg
cmp
(bad)
div
sahf
mov
retf
sub
and
sub
xchg
je
mov
mov
push
push
lods
or
fnstcw
pop
pushf
test
cmp
sub
push
mov
jmp
add
jmp
jns
out
sub
pusha
aaa
mov
repnz
cmp
sbb
cmp
inc
mov
jno
mov
mov
out
fld
mov
adc
mov
cmp
test
and
and
or
sub
ins
test
fs
in
sub
js
inc
(bad)
sbb
push
and
cmp
test
inc
mov
add
shr
cmps
std
push
test
clc
aam
dec
push
push
push
push
dec
and
mov
dec
jo
in
sub
sub
sar
jns
adc
add
and
repz
sub
sub
sar
sub
enter
xchg
movs
lock
cmp
jne
clc
mov
pusha
push
adc
push
(bad)
mov
(bad)
jle
pop
sub
sar
nop
rol
pop
xchg
push
cmp
das
cmps
adc
and
rol
in
add
aad
pop
sti
or
and
das
cmp
mov
cmp
mov
or
xor
sar
inc
xor
mov
mov
inc
sbb
push
jo
adc
shr
and
dec
inc
or
push
sub
push
pop
push
mov
test
mov
push
aad
in
dec
inc
ret
pop
jmp
or
xchg
cmp
shl
mov
mov
inc
cmp
xchg
iret
inc
jmp
into
sbb
and
daa
ins
adc
mov
fimul
push
adc
cli
ret
data16
push
and
fcomp
sub
sbb
inc
movs
call
jmp
cmp
fiadd
out
movs
and
or
cmc
push
(bad)
bound
cli
push
cmp
in
inc
dec
add
xor
jge
jmp
loopne
(bad)
add
add
sub
mov
je
int3
loope
popf
add
adc
pusha
add
loop
sub
ins
xlat
pop
cld
test
xchg
or
push
push
lods
sbb
mov
push
dec
sbb
mov
mov
stos
or
pushf
mov
neg
adc
inc
sbb
mov
rcl
cs
je
ja
arpl
jo
adc
pop
test
sub
aas
adc
or
cmp
dec
pushf
push
ins
ja
inc
add
sub
and
not
mov
push
push
xor
mov
idiv
or
sbb
sub
jle
ja
sbb
ja
sbb
jp
sbb
xor
out
and
and
fmul
and
mov
push
loopne
mov
add
clc
mov
cmp
sbb
pop
jo
push
push
add
scas
and
cmp
je
dec
adc
add
push
cwde
jae
push
sbb
adc
ret
mov
adc
(bad)
nop
retf
and
inc
or
pop
jmp
mov
mov
pop
into
(bad)
pop
push
or
leave
xor
or
adc
fwait
and
sti
fisubr
sbb
sbb
mov
jp
sbb
movs
mov
mov
mov
sbb
push
and
xor
(bad)
jmp
mov
gs
or
lock
jle
and
inc
jnp
mov
xchg
or
xchg
outs
scas
scas
dec
retf
mov
ins
adc
push
ins
or
push
imul
mov
dec
or
add
xor
pop
nop
inc
xor
push
scas
jge
rcr
sbb
(bad)
pop
mov
xchg
shr
lods
cmp
jo
es
ret
sbb
or
mov
sub
cs
mov
jle
sub
add
sbb
mov
adc
sub
ret
pusha
add
push
and
pop
cld
adc
and
jmp
mov
sub
adc
test
das
mov
pop
xor
cwde
(bad)
jmp
dec
pop
pusha
add
or
xor
in
add
fwait
sub
mov
push
xor
inc
bound
sub
imul
fisub
push
sub
aam
push
push
iret
sub
test
sub
and
adc
and
sbb
xor
add
add
ret
lds
mov
push
sub
push
das
adc
sbb
js
xor
inc
shr
jnp
loop
in
test
mov
xchg
sub
xor
xor
daa
adc
addr16
xchg
mov
jl
loope
push
mov
mov
ror
ror
and
push
test
adc
sub
mov
cld
inc
ret
mov
or
das
and
and
and
jmp
push
xchg
shr
dec
shr
js
xchg
fidiv
sub
jne
jle
jmp
or
push
add
fist
inc
loope
push
add
push
dec
daa
lods
or
mov
pop
adc
inc
jmpw
rol
sbb
ror
pop
aad
loopne
and
or
dec
or
or
add
or
lea
bnd
push
jne
stos
adc
add
mov
xchg
jne
lea
(bad)
fld
rol
jge
fmul
dec
scas
test
les
adc
test
adc
mov
mov
adc
or
mov
pop
inc
cmp
pop
sti
test
mov
adc
sub
mov
lea
xor
movs
and
inc
fwait
or
ret
movs
pop
ds
push
out
or
ja
xchg
or
rol
adc
and
(bad)
stos
cmp
je
jge
shr
mov
mov
adc
loope
mov
sub
xor
and
xor
add
add
add
push
pop
dec
ins
test
ret
popf
inc
or
mov
jo
inc
add
imul
sbb
clc
and
and
rcr
pop
stos
shl
jne
xlat
dec
mov
add
mov
inc
mov
fild
pushf
test
jnp
jno
and
(bad)
dec
jp
ret
cmc
push
(bad)
and
add
mov
pop
adc
dec
movs
xchg
ds
in
(bad)
mov
jo
push
add
mov
add
xor
push
mov
sbb
outs
push
es
push
push
xchg
nop
in
adc
scas
cmps
sti
jns
xor
sub
pop
add
inc
cmp
je
add
inc
xchg
xlat
mov
or
cmp
sbb
add
or
or
push
add
adc
dec
jno
cmp
je
xchg
add
jne
jne
xchg
inc
jle
add
cmp
mov
fistp
test
adc
adc
call
inc
mov
push
xor
inc
pop
in
mov
call
cmps
dec
seto
xchg
push
ror
ret
mov
pop
retf
push
push
sbb
cmp
outs
enter
xchg
adc
daa
xchg
cwde
xor
mov
sbb
mov
pop
call
xor
das
cmp
push
add
sbb
mov
scas
sbb
or
cmp
arpl
push
pop
jg
mov
adc
pop
inc
sti
add
add
addr16
sbb
jge
(bad)
out
jne
jmp
adc
jmp
fs
jmp
add
iret
nop
or
leave
sbb
es
call
push
fiadd
jbe
jne
jmp
and
inc
ins
addr16
test
out
mov
or
mov
ret
fcom
js
sbb
stc
add
cld
mov
js
mov
stos
lock
push
enter
ret
add
add
popa
push
pushf
push
mov
mov
xchg
jge
mov
test
sub
xor
or
sbb
lods
movs
sbb
mov
cmp
push
mov
ss
sub
fs
repz
cmp
inc
jne
mov
js
add
jne
pop
jo
imul
enter
(bad)
cwde
test
add
ja
mov
cld
mov
jbe
fcmovu
bound
popa
test
fiadd
cmp
les
mov
pop
mov
aam
dec
sub
arpl
popf
retf
adc
inc
not
and
fwait
or
in
std
and
test
push
ret
add
ins
lods
dec
mov
dec
shr
cwde
xlat
or
popf
sub
aad
and
sbb
push
jecxz
inc
add
push
jo
pop
popa
mov
pop
sbb
(bad)
or
mov
sub
cmp
sahf
(bad)
jo
push
or
retf
mov
sub
cmp
cmp
rol
adc
or
or
(bad)
xchg
add
xlat
fist
retf
clc
(bad)
out
inc
inc
add
out
adc
adc
shl
fsub
imul
arpl
(bad)
jmp
push
adc
ds
imul
or
xchg
add
inc
sub
stos
lahf
jge
fadd
cmp
inc
dec
je
add
test
mov
inc
std
push
cmp
adc
cdq
mov
test
mov
mov
and
fstp
sbb
ror
out
enter
inc
pop
movsx
push
add
call
mov
and
or
out
mov
cmp
sub
push
fild
mov
mov
ret
inc
ret
xchg
mov
inc
sar
hlt
adc
xchg
lock
jb
maxps
or
aaa
fadd
retf
or
xlat
and
pop
mov
cmp
(bad)
out
adc
test
or
and
push
inc
cwde
sub
jl
pop
leave
xchg
xor
push
push
and
xchg
fst
or
es
clc
jmp
hlt
xor
sbb
and
cwde
sub
cmp
(bad)
not
sbb
stos
js
lock
cmp
inc
pop
adc
lea
popa
mov
dec
push
pop
sub
sub
loop
sub
inc
in
or
in
pop
inc
cli
inc
adc
or
cmc
shl
jnp
ret
jp
ret
js
mov
add
enter
or
mov
shr
mov
xor
int3
sti
sub
fwait
lock
xchg
shr
jge
mov
test
dec
sbb
scas
push
mov
pusha
out
jmp
jle
mov
jb
arpl
aaa
jno
sub
mov
js
or
sbb
and
jbe
dec
fwait
add
(bad)
popf
hlt
inc
jmp
and
push
push
mov
jle
fld
pop
adc
or
xchg
pop
push
dec
mov
mov
sar
ret
xor
add
jl
inc
xchg
test
adc
or
outs
inc
lods
xor
clc
cmp
mov
xchg
fdivr
dec
jne
gs
or
sub
mov
rol
and
mov
ror
pop
mov
loopne
adc
daa
not
and
jmp
push
fstp
inc
dec
cli
mov
mov
leave
aad
inc
aad
rol
or
in
pop
pop
loopne
loope
fdivr
xchg
or
movs
ss
cmp
daa
cs
lods
test
ins
inc
adc
xchg
outs
and
xchg
xchg
out
and
xor
mov
mov
mov
inc
mov
push
ret
or
adc
add
xchg
out
imul
mov
retf
and
and
push
call
xlat
sub
fwait
add
ds
pusha
jns
push
mov
dec
lock
cmp
fadd
cmp
cmp
or
sbb
aad
aaa
add
pop
popa
add
iret
mov
inc
seto
add
mov
pop
push
sbb
mov
and
pop
dec
call
wbinvd
ja
lea
jp
add
mov
mov
jmp
lds
push
push
test
pusha
fld
mov
mov
out
jle
stos
xchg
stos
add
add
cli
and
xor
adc
pushf
or
mov
mov
mov
jg
add
push
scas
mov
sub
cmp
ins
imul
cmp
shl
lea
std
in
inc
jle
jne
mov
jmp
clc
or
dec
cmps
pop
stos
or
xlat
mov
aas
add
das
loop
jge
call
lock
sbb
sbb
push
pop
rol
add
push
scas
(bad)
adc
movs
add
adc
mov
lock
je
cmp
loopne
jno
test
sahf
nop
cmps
cmp
ret
inc
sbb
sar
and
mov
sub
or
sbb
loop
mov
and
in
dec
rol
xchg
sbb
les
or
stc
pop
(bad)
(bad)
xchg
adc
lahf
(bad)
mov
in
mov
xor
data16
das
cli
cmp
cmp
sub
rol
inc
add
inc
push
clc
or
add
aas
xlat
jle
into
add
jno
test
mov
repnz
push
inc
loopne
pop
cmp
jge
jmp
sub
jne
sbb
iret
daa
jbe
scas
aad
dec
inc
cmp
shr
punpcklbw
mov
add
faddp
ror
(bad)
add
fadd
or
push
mov
pusha
mov
movs
call
adc
lock
adc
and
push
inc
dec
cmps
cmps
or
push
add
and
sbb
xor
(bad)
cld
pop
push
pop
adc
lock
lods
cmp
xchg
leave
les
call
das
test
push
js
mov
pop
pop
out
xchg
or
lock
or
push
xchg
sbb
popa
dec
adc
add
rcr
add
xchg
sbb
inc
jne
jmp
jecxz
adc
sub
or
mov
cmp
je
xor
dec
sub
retf
mov
inc
and
add
add
adc
dec
adc
adc
ss
imul
mov
outs
add
mov
mov
mov
pop
popa
mov
cmp
jae
inc
or
xor
icebp
sub
cmp
cmps
stos
shr
adc
dec
pop
inc
sbb
add
mov
jl
cmp
pop
clc
inc
mov
ret
fprem
mov
fimul
cmp
sbb
nop
stos
adc
adc
add
inc
add
or
loopne
cs
jmp
add
or
pop
push
fisubr
pop
leave
xor
pop
add
addr16
lods
pop
or
jo
and
add
pop
sub
dec
adc
sub
stos
(bad)
mov
(bad)
mov
jne
outs
adc
inc
subps
(bad)
xchg
imul
dec
clc
jo
add
jmp
test
sub
pop
popa
mov
add
jb
or
sub
lock
fsubr
cmp
or
lods
add
adc
cmp
out
sbb
test
ss
cmc
mov
sahf
lea
dec
repz
or
cs
pop
dec
jae
sub
loopne
and
jmp
mov
ror
shr
pop
arpl
fmul
sub
(bad)
jnp
or
test
out
test
or
jge
shl
mov
or
scas
das
shr
and
shl
or
or
test
jae
add
mov
jmp
lea
xchg
sub
loopne
ss
hlt
xchg
das
or
push
add
fidivr
mov
mov
sub
cs
cmps
clc
fdivr
push
sbb
jbe
adc
jbe
mov
sub
add
sub
inc
and
xor
dec
jo
xor
sub
add
shr
cdq
xor
sub
pop
pop
jg
mov
cmp
icebp
mov
ret
sub
mov
inc
pop
mov
leave
xor
or
mov
call
dec
mov
call
jbe
test
jnp
push
int
push
rcl
pop
adc
vpcmpeqw
mov
int3
push
clc
aam
lea
jns
and
sbb
js
sbb
rol
pop
fsubr
dec
push
inc
push
push
push
push
xchg
jbe
and
jecxz
push
movs
xchg
(bad)
sbb
cmp
in
mov
dec
or
jl
cmp
sub
out
mov
mov
and
jp
push
adc
push
outs
fiadd
fsub
sbb
int
sub
adc
inc
adc
cmp
pop
hlt
sub
out
cld
cmp
jg
loopne
mov
ins
jle
loopne
ret
js
mov
clc
mov
adc
pop
jle
add
pop
mov
inc
push
pop
xchg
or
in
sbb
jle
cmp
aam
(bad)
retf
inc
sub
cmp
in
dec
and
add
jbe
add
adc
sbb
loope
adc
sub
stos
pushf
cmp
cmp
rcl
pop
pop
inc
cmp
scas
in
xor
es
pop
clc
fisub
mov
(bad)
cwde
ror
adc
test
xlat
ret
and
jecxz
(bad)
call
pop
ret
retf
fistp
pushf
add
mov
mov
loopne
dec
add
in
add
sub
addr16
jmp
adc
setge
popa
ret
push
mov
lods
jge
mov
push
loopne
jecxz
movs
cli
daa
je
or
push
leave
jmp
cmp
push
adc
xchg
imul
popa
(bad)
out
xor
aam
lods
call
loopne
(bad)
inc
repz
add
mov
xlat
mov
add
ins
sbb
add
dec
adc
cmps
xor
cli
mov
jno
das
add
cli
pop
add
jl
add
stos
test
xchg
ins
pop
je
pop
push
int3
hlt
add
(bad)
aaa
mov
pop
jne
mov
xor
fdiv
pop
push
mov
sti
pop
rol
aaa
pushf
(bad)
out
sub
lock
jo
sar
jns
adc
jmp
push
ins
ror
add
push
jo
pop
inc
pop
in
jnp
rcr
jne
add
in
xchg
jge
sbb
ficomp
and
pushf
cmp
xor
ficomp
ins
add
xchg
movs
scas
rol
add
mov
sbb
mov
movs
or
mov
cli
loope
or
or
mov
mov
and
sub
push
push
dec
imul
inc
add
push
cli
sub
push
pop
cmc
fdiv
pop
adc
xor
fcmovnb
sbb
xchg
mov
xor
in
add
jne
popa
pop
and
push
or
mov
leave
movs
add
inc
or
lods
nop
repz
pushf
add
pop
add
sub
cmp
sbb
push
adc
pop
fwait
and
arpl
cmp
jmp
mov
or
test
in
(bad)
xor
push
sbb
rcl
or
add
and
(bad)
jmp
fimul
in
or
icebp
stos
pop
add
add
mov
adc
and
add
mov
inc
and
xchg
pop
ret
mov
call
inc
fld
xor
sub
loopne
jne
and
sbb
mov
and
and
mov
xor
inc
das
add
mov
inc
mov
sub
and
sub
sbb
sbb
push
pop
add
adc
loope
adc
aaa
sti
jo
ins
nop
mov
add
rcr
jno
leave
mov
pushw
xchg
popa
xchg
and
aad
pop
jno
mov
cmp
push
fadd
sbb
xor
inc
mov
push
sbb
cld
or
jno
or
cmp
xor
stos
xchg
cmps
sbb
jl
inc
and
xor
sbb
jo
mov
add
arpl
mov
add
aas
in
lock
movs
ror
movs
mov
push
dec
add
inc
adc
mov
or
adc
and
or
sbb
pop
xor
jo
push
mov
ss
mov
(bad)
jmp
or
jle
add
imul
adc
mov
ja
pop
stc
fild
mov
dec
add
sbb
adc
pushf
out
and
sbb
xor
aas
int3
mov
add
add
add
jmp
jo
mov
int
cmc
or
jno
adc
inc
pop
jo
lea
cmp
les
sub
psrlw
fucomp
adc
loopne
add
test
pop
add
inc
retf
jo
out
mov
inc
sbb
sbb
in
stc
in
pusha
add
(bad)
push
mul
in
pusha
add
dec
loope
mov
xor
(bad)
ret
or
clc
push
jmp
and
mov
pop
imul
xchg
mov
push
xor
aam
fisub
xor
cmp
and
js
out
loopne
cli
loopne
pop
adc
stc
mov
jp
xchg
fwait
and
mov
retf
mov
xchg
add
loopne
sub
dec
push
sbb
loopne
test
adc
sbb
push
and
cmp
es
push
stc
jl
xchg
or
imul
sub
aam
int
shl
push
outs
pop
jo
shr
jge
ret
mov
fcomp
call
mov
mov
mov
nop
and
sub
pop
enter
stos
xchg
fnstsw
gs
movs
lods
mov
add
mov
sbb
stos
xor
int3
inc
mov
clc
and
inc
in
sbb
pop
sbb
sbb
or
or
mov
mov
push
fdiv
pop
add
daa
ins
fld
shl
loopne
fcomp
je
add
and
xchg
repz
xchg
xchg
pop
jle
mov
int3
adc
std
cmp
inc
sbb
mov
push
out
xor
and
arpl
popf
int
xor
fcmovb
sbb
and
dec
mov
add
(bad)
fnstsw
sbb
in
and
js
or
xor
and
mov
rol
jge
call
or
mov
add
loopne
ret
push
scas
push
das
jmp
cmp
dec
shl
sbb
dec
cmps
cmc
pop
inc
inc
xor
sub
adc
sub
inc
in
xor
icebp
pop
pop
nop
iret
(bad)
xchg
dec
cmp
or
push
lock
clc
pop
jmp
mov
add
mov
test
inc
repnz
dec
sbb
(bad)
cwde
or
xor
ins
add
loope
loope
or
aam
sub
cmp
cli
les
(bad)
jmp
mov
add
add
add
in
pop
pop
jmp
adc
mov
repnz
sub
scas
cmp
add
aam
mov
fwait
cmp
pop
sbb
jle
das
jne
test
pop
sub
cld
xchg
adc
mov
push
add
add
jmp
cmpps
inc
gs
iret
daa
push
mov
cwde
add
lods
fisub
lds
pop
adc
cmp
inc
push
inc
jb
push
cmp
pop
nop
pop
sub
ins
cmps
jo
push
ror
sbb
dec
jns
jnp
push
stos
or
xchg
jl
jbe
cmps
push
adc
and
popa
clc
add
ret
outs
nop
add
add
add
in
mov
mov
jg
pop
mov
fldenv
rcl
sbb
mov
iret
push
test
inc
sub
pusha
sbb
je
fadd
sub
test
movs
xchg
mov
xchg
pop
inc
movs
cmp
xor
ror
sub
lea
aad
sbb
ja
xor
mov
add
inc
stos
sbb
inc
mov
mov
adc
mov
add
nop
inc
or
out
pop
jge
retf
add
adc
mov
je
sbb
push
and
and
and
ins
jne
mov
or
fiadd
jo
pushf
or
inc
js
jecxz
iret
(bad)
bound
adc
das
hlt
(bad)
shl
(bad)
push
(bad)
lods
lods
sahf
mov
test
leave
cmp
mov
mov
dec
ds
dec
es
or
mov
add
dec
clc
popa
arpl
xchg
loope
lods
loopne
pop
or
inc
pusha
shr
sub
popf
shl
dec
jae
add
xor
mov
pop
idiv
sahf
inc
(bad)
call
push
das
pop
call
out
jl
ret
push
fucomi
inc
xchg
fsubr
xchg
test
ret
xor
or
es
mov
stc
nop
dec
cmp
js
jo
dec
das
mov
movs
sahf
mov
fstp
jae
sub
cld
aam
or
into
(bad)
dec
inc
div
and
test
add
lahf
or
dec
or
xchg
test
xlat
stos
movs
(bad)
jo
or
sbb
adc
(bad)
sbb
sbb
icebp
add
shl
jb
push
scas
ja
sub
sbb
loop
jge
fs
or
add
xor
mov
stc
mov
or
push
or
adc
sbb
std
adc
call
pop
pop
or
pop
out
leave
ins
imul
pop
adc
or
sub
xchg
nop
clc
call
int3
ret
mov
or
adc
call
pop
pop
daa
xor
imul
jb
leave
aaa
fsub
jg
or
pop
sbb
and
fwait
mov
jl
add
pop
pop
rol
sub
sub
loopne
inc
loopne
aas
dec
cld
call
bound
loopne
in
sbb
mov
push
sub
adc
sbb
sbb
jl
mov
push
pusha
xor
jg
or
jl
icebp
(bad)
lods
test
jne
mov
mov
add
and
mov
pop
push
push
imul
mov
and
dec
or
mov
push
les
jg
jae
add
popf
cwde
push
adc
out
aas
jl
fist
inc
test
icebp
movs
xchg
sbb
xchg
retf
mov
mov
adc
clc
jge
pop
mov
and
inc
or
dec
ret
pop
cld
jmp
popf
icebp
add
sub
cmp
loopne
mov
jecxz
or
js
enter
or
pop
les
pop
add
ds
sbb
or
add
or
pop
jo
cmp
shr
mov
add
or
cmps
mov
pop
dec
or
xchg
push
ja
mov
bt
setb
dec
fadd
jb
mov
xchg
shl
lods
sub
fld
cmp
sbb
lods
xchg
add
cmp
pop
inc
sbb
adc
fisub
xchg
xor
dec
sbb
cmp
xchg
in
(bad)
dec
cmc
pop
(bad)
imul
in
mov
aad
dec
loope
dec
clc
rcr
mov
jne
(bad)
(bad)
jl
popa
ret
out
and
xchg
mov
jecxz
inc
sbb
int3
sete
pop
test
ror
cmp
add
dec
inc
test
outs
pop
sbb
mov
je
pop
ins
daa
mov
cmps
(bad)
call
push
sbb
jo
or
sahf
hlt
push
push
inc
adc
add
adc
lods
pop
jo
test
mov
cmp
cmp
lahf
or
aam
or
ss
dec
inc
pushw
xchg
shr
js
and
push
fidiv
mov
pop
mov
push
mov
adc
adc
or
sub
add
inc
clc
xchg
mov
push
push
popa
icebp
dec
or
in
shl
mov
mov
out
or
mov
shl
lea
aaa
pop
sub
fistp
push
cs
push
into
mov
nop
inc
and
xchg
ret
pop
pop
mov
xchg
(bad)
loopne
or
mov
dec
fisubr
dec
jecxz
stos
test
or
adc
fstp
ins
cmp
pusha
ret
test
push
popa
leave
sub
pop
xor
ret
dec
sub
ret
data16
inc
pop
in
es
mov
sahf
in
aaa
das
or
call
fidivr
adc
or
mov
sbb
sbb
add
sub
push
adc
adc
ficom
not
add
das
adc
inc
jle
mov
test
sub
add
mov
mov
hlt
inc
mov
inc
adc
xor
dec
clc
jnp
mov
push
data16
arpl
clc
rol
push
lds
and
or
adc
adc
imul
add
fistp
mov
and
pop
loopne
sbb
push
push
xor
push
push
inc
inc
inc
xor
push
sbb
and
pusha
jl
sub
push
push
adc
js
dec
push
sub
dec
pusha
push
rol
mov
hlt
leave
rcl
and
ja
push
(bad)
mov
and
or
adc
ins
mov
hlt
or
inc
or
adc
movs
pop
add
inc
mov
mov
daa
jl
loopne
xor
lea
add
test
test
xor
mov
inc
pop
pop
pop
push
and
jb
cmp
inc
add
mov
dec
push
popa
pop
adc
das
push
adc
daa
inc
dec
inc
push
in
lea
lods
(bad)
push
pop
lds
xchg
push
repnz
adc
ret
or
adc
(bad)
xlat
xor
jb
sar
cmovge
xor
jb
(bad)
std
or
daa
xchg
test
jne
push
sub
and
stos
dec
ficom
inc
out
inc
scas
mov
(bad)
aaa
pop
mov
and
xor
ss
push
dec
xor
push
stos
jecxz
pop
cld
pop
shr
fs
jo
xor
push
jo
movs
mov
push
push
inc
jo
xchg
adc
ret
push
pop
test
add
ret
pop
pop
inc
cld
or
xor
sar
push
movups
xchg
push
jp
loopne
inc
pop
shr
push
xchg
pop
jnp
aad
jo
add
inc
push
mov
push
call
cmp
cmp
jl
movs
aaa
push
mov
hlt
jg
cmp
inc
adc
push
push
push
pop
mov
rol
add
dec
push
mov
scas
mov
add
(bad)
nop
add
or
jle
jmp
not
test
imul
cmp
mov
mov
cmp
je
inc
int
mov
cmp
je
push
pop
xchg
or
ds
sub
mov
inc
cmp
cmp
daa
push
test
dec
dec
loope
inc
clc
mov
clc
jge
push
mov
jg
mov
adc
sbb
aaa
and
mov
fistp
xor
mov
mov
test
les
cwde
movs
pusha
pop
jl
adc
ror
and
mov
cmp
pop
add
loope
shr
sbb
out
mov
cmp
clc
ss
add
out
push
push
(bad)
js
pop
add
xor
sbb
imul
jo
push
xchg
push
shr
loope
xlat
out
or
push
push
loope
pusha
mov
adc
fistp
hlt
adc
into
int
pushf
mov
mov
adc
sub
icebp
and
cmps
imul
add
push
jnp
arpl
sbb
dec
cmp
xchg
inc
mov
test
adc
in
adc
cmp
jmp
std
out
jno
(bad)
push
adc
adc
int3
in
dec
or
into
jae
add
idiv
sti
jo
cmp
cmp
mov
cmp
jecxz
xor
xchg
ins
dec
add
push
jae
adc
sbb
ins
and
jne
jb
outs
out
dec
pusha
loopne
inc
outs
jb
ins
push
gs
jnp
pop
sub
dec
xchg
idiv
add
sahf
popa
and
lods
add
mov
add
adc
add
sar
out
sub
fwait
mov
cwde
push
jmp
pop
adc
or
jmp
cmp
ja
cmp
dec
cmp
stos
mov
in
xor
add
cmps
dec
pop
dec
push
outs
retf
cmp
push
mov
mov
or
test
jne
adc
mov
add
dec
adc
setns
jae
inc
test
dec
pop
mov
data16
lods
enter
mov
xchg
fcomp
cmp
sbb
popa
je
scas
test
cmp
cmp
add
icebp
cmp
jne
fmul
pop
or
loope
sar
sbb
cmp
sbb
mov
or
fld
mov
movsx
adc
dec
test
inc
daa
bound
repnz
iret
add
test
in
cs
mov
out
std
dec
popa
sub
mov
or
shl
or
jmp
sub
mov
push
cmps
mov
push
or
pop
sbb
jg
mov
push
retf
inc
das
and
adc
or
sub
or
mov
test
pop
mov
data16
mov
ret
xor
inc
dec
adc
and
adc
pop
je
pop
fwait
xchg
pop
cmp
enter
pop
pop
mov
pop
ret
jo
stos
jmp
(bad)
push
nop
xchg
or
fisttp
and
dec
inc
xchg
mov
push
mov
or
push
adc
mov
pop
ret
int3
sub
ds
mov
and
inc
cld
cmp
dec
jmp
jmp
ins
pop
adc
mov
neg
add
inc
add
cmp
mov
sub
fistp
addr16
inc
push
cmp
push
push
aas
popa
ret
adc
jo
jbe
add
xor
sub
inc
push
push
jae
outs
jmp
xor
mov
jl
dec
dec
dec
push
test
jno
adc
add
sar
add
aad
fsubp
adc
cmp
inc
xor
out
mov
add
cmps
push
sahf
out
xor
push
sbb
xor
in
call
pushf
inc
push
lock
jmp
sbb
push
or
iret
mov
pop
sbb
xor
adc
outs
fdiv
inc
or
push
pop
or
mov
or
jne
hlt
sub
sbb
shl
lock
push
fdivr
or
mov
je
fxsave
xchg
xor
jns
out
inc
lahf
push
dec
pop
ins
js
sbb
test
push
dec
scas
sbb
add
adc
xor
lock
jmp
sbb
mov
aaa
xor
mov
adc
or
rol
js
push
daa
hlt
(bad)
pop
xor
sbb
int
pop
inc
(bad)
ret
das
pop
adc
mov
adc
mov
xor
inc
sahf
sbb
loope
push
jno
or
out
(bad)
std
sbb
xchg
cdq
aaa
hlt
push
fnstsw
mov
fmul
arpl
jp
sbb
lds
ins
je
dec
fistp
cmp
je
jle
inc
rol
in
push
mov
inc
jne
(bad)
fstp
dec
(bad)
cmp
push
add
jne
sub
sub
push
xor
into
and
jnp
xchg
in
pop
outs
fimul
jo
xlat
sbb
mov
(bad)
lock
cmp
xor
loope
xchg
xchg
adc
mov
or
dec
data16
cmp
lock
lock
push
test
or
not
sbb
xor
and
pop
movs
pop
adc
add
add
or
pop
sar
dec
rcl
in
add
pop
cld
and
jl
mov
pop
add
pop
dec
sbb
lock
xor
or
or
push
sbb
mov
test
pushf
jecxz
add
add
cmp
mov
stc
ret
mov
sbb
and
pushf
cmp
inc
int3
mov
add
pop
sbb
and
pushf
leave
sbb
lea
inc
dec
mov
ret
call
pop
in
pop
mov
icebp
scas
sub
push
inc
shl
mov
add
add
inc
or
push
jb
add
int3
(bad)
jne
ror
mov
ret
jns
and
mov
test
adc
add
sbb
mov
js
mov
and
xor
xor
xchg
loope
sbb
mov
mov
(bad)
enter
xor
jmp
cmp
and
add
ins
adc
sbb
xchg
inc
rcr
add
mov
std
inc
pop
aas
ins
push
mov
cmp
add
ret
and
jbe
push
das
mov
or
loop
mov
mov
jle
jl
lock
mov
sar
xchg
push
sub
ret
les
mov
arpl
jne
and
pop
push
cbw
xchg
out
lock
add
enter
cmp
pop
(bad)
push
add
int
mov
fstp
xchg
jne
call
mov
cmp
je
arpl
icebp
fisubr
retf
dec
test
in
in
sbb
mov
add
cmp
shl
add
inc
pushf
ins
sub
(bad)
inc
bndstx
fcomp
fisttp
nop
sbb
sub
les
pusha
jb
clc
mov
xor
outs
clc
push
add
push
call
and
and
and
add
cmp
mov
mov
jbe
ins
dec
push
jne
loope
retf
cli
js
test
inc
test
in
loope
mov
mov
pop
pop
test
pop
(bad)
daa
mov
adc
mov
setl
js
xchg
pop
pop
inc
add
add
(bad)
pop
push
pop
sbb
mov
add
sub
pop
dec
add
mov
lds
movs
add
call
(bad)
sub
mov
pop
or
bound
(bad)
mov
in
jno
and
loopne
dec
sub
add
outs
and
pop
xlat
cs
add
and
aad
push
push
and
and
(bad)
jo
int3
or
push
add
add
daa
sbb
imul
fadd
add
add
jl
inc
loopne
cmp
jle
add
in
or
ins
sbb
jecxz
or
fadd
jo
into
pop
arpl
jle
out
pop
xor
or
cmp
loopne
fisttp
sahf
jae
mov
mov
sti
rol
xor
outs
loop
mov
fs
loop
cmp
pop
mov
test
and
fwait
add
iret
fwait
sar
les
sub
or
add
jl
lds
mov
sahf
adc
jbe
loopne
mov
inc
xor
pop
mov
fwait
int3
dec
push
push
cli
dec
outs
pushf
jns
lea
mov
xchg
movs
daa
data16
mov
push
fmul
lea
sub
ficomp
fcomp
mov
jle
sbb
or
jno
inc
sub
push
push
loop
inc
ret
jp
or
cmp
push
clc
pop
cld
inc
pop
push
pop
or
cwde
loope
stos
sbb
aaa
loopne
mov
inc
nop
out
sbb
xlat
push
jge
adc
jge
inc
sub
dec
xchg
mov
dec
push
add
arpl
ins
xchg
dec
mov
arpl
push
add
and
xchg
add
stos
pop
inc
lods
sbb
cwde
ja
or
(bad)
inc
sbb
sbb
xchg
mov
push
fadd
xchg
add
jmp
inc
in
jb
movs
xchg
push
pop
add
jge
popf
std
rcl
mov
push
pop
sub
cmp
(bad)
je
mov
lock
fisub
js
sbb
jnp
les
add
enter
jl
adc
jl
xchg
inc
outs
stos
arpl
push
push
add
fiadd
or
adc
pop
(bad)
lea
pushf
call
push
push
jo
sbb
mov
xchg
movs
test
retf
add
ja
xchg
mov
test
xor
popf
cmp
pop
aam
loope
mov
out
in
cmc
xchg
cmp
mov
xchg
inc
cmps
jge
sbb
aaa
xor
test
mov
lods
cmp
inc
fsubr
int3
repnz
loopne
xchg
mov
push
mov
jmp
data16
sar
aam
movs
mov
fdivr
sub
and
icebp
and
inc
jno
enter
and
shl
mov
(bad)
out
adc
dec
cmp
das
int3
jne
popa
cmp
test
mov
or
lock
dec
pop
xor
mov
cdq
lods
pop
sub
push
push
jo
pop
fdivr
dec
jbe
push
or
add
arpl
cmp
ror
lds
shr
mov
pop
dec
lds
dec
jl
cmp
mov
mov
adc
and
dec
cld
push
fs
or
sbb
jne
iret
jb
push
inc
js
or
add
add
add
add
ins
mov
pushf
dec
adc
lock
push
outs
jmp
push
je
lock
pop
inc
and
enter
popf
cwde
es
js
test
add
mov
mov
out
fsub
rcr
add
pop
lock
test
mov
(bad)
ret
sbb
test
mov
and
mov
sub
test
and
cmovae
xor
pop
es
mov
or
adc
and
jo
pop
sub
pop
loopne
xor
mov
pop
(bad)
adc
addr16
sub
(bad)
inc
push
cli
popa
mov
mov
loopne
inc
or
xchg
jo
std
mov
les
xchg
lock
dec
fisttp
add
arpl
xchg
jl
sbb
cmps
movzx
xor
rcr
adc
jl
inc
mov
sub
sub
dec
mov
clc
cvtpi2ps
pop
in
(bad)
jmp
inc
dec
jne
or
mov
(bad)
and
sbb
add
jle
sub
cwde
dec
inc
cwde
in
dec
bound
pop
sub
inc
push
pop
bound
fsubr
xor
and
or
mov
inc
cmp
or
iret
js
jecxz
mov
(bad)
aad
imul
jg
or
cmp
cmps
js
pop
fdivr
fisubr
jne
cmp
je
push
ret
mov
sti
xchg
dec
jge
mov
add
add
dec
pop
fisttp
inc
stc
xchg
and
je
cld
adc
nop
sbb
push
xor
adc
iret
sahf
dec
or
jbe
xchg
imul
cmps
daa
mov
les
xchg
test
inc
or
out
inc
adc
call
pop
dec
push
mov
stc
lock
sub
jmp
mov
and
push
loope
aad
mov
outs
loopne
loopne
xchg
movs
loopne
add
or
mov
push
arpl
add
ins
rol
xchg
sub
(bad)
and
or
sub
cmp
das
add
popa
and
clc
fcom
jg
jo
jle
sbb
cmp
jl
xchg
inc
xor
xchg
popa
xor
dec
xor
pop
lock
outs
inc
popa
shl
daa
bound
into
lock
mov
mov
(bad)
ins
pop
mov
dec
cmc
or
aam
ja
pop
stos
and
inc
ja
mov
mov
xor
sbb
push
or
les
dec
fcomp
rol
scas
je
jo
js
inc
jmpw
adc
jmp
dec
dec
mov
imul
aam
or
mov
push
mov
cwde
or
sbb
jae
cmp
nop
mov
sahf
mov
pop
inc
in
cmps
xor
jmp
movs
xor
clc
aam
mov
ret
std
stos
xor
and
in
daa
xchg
sbb
pop
jp
xchg
sbb
mov
mov
adc
test
pop
adc
push
cmp
stos
xor
jl
dec
or
adc
adc
and
ja
and
mov
xchg
pop
sub
bts
dec
ins
aaa
pop
pop
xor
ds
push
imul
push
scas
sbb
add
push
adc
add
mov
or
aaa
or
jne
mov
sbb
add
mov
in
jg
and
cmp
or
into
scas
pop
pop
jge
jl
sub
popa
es
imul
outs
xor
bound
mov
cdq
cmp
div
dec
pop
add
outs
fwait
out
fld
dec
fld
lahf
add
ret
mov
sub
(bad)
sub
sbb
sbb
sub
xor
mov
jmp
fadd
arpl
fmul
cmps
in
das
cmp
push
fwait
int
or
sar
push
mov
add
sub
mov
arpl
jae
adc
and
mov
sbb
mov
(bad)
lea
int
fdivr
cmps
sbb
inc
pop
test
sbb
fs
stos
add
push
add
mov
cmp
adc
or
int3
les
adc
mov
and
xchg
mov
outs
and
(bad)
jle
pop
mov
cmp
xor
aaa
sbb
xchg
outs
mov
cmps
add
pop
(bad)
sbb
int
jbe
mov
ret
rcr
xor
push
add
(bad)
lds
fisubr
mov
sti
push
or
test
dec
add
mov
and
add
dec
inc
or
xor
pop
in
mov
inc
sbb
jge
mov
int3
cmp
out
xor
hlt
les
mov
fwait
jg
xchg
cmp
jp
push
mov
call
sub
mov
mov
(bad)
dec
arpl
mov
cmp
jae
dec
movs
add
xchg
aaa
pop
call
rol
sub
sbb
ins
ss
mov
aaa
cmp
adc
or
sub
(bad)
nop
sbb
lock
jp
mov
xchg
add
ret
stos
push
mov
add
add
or
test
push
jne
push
fist
mov
sub
add
xor
mov
sbb
push
mov
xor
je
das
aam
js
loopne
jne
aas
mov
and
aad
test
arpl
cmp
pop
jmp
sbb
adc
mov
adc
cmp
mov
aam
sbb
or
inc
or
and
push
lea
loop
int3
call
cmps
gs
mov
sbb
sbb
jmp
test
add
mov
or
cmps
mov
and
cmp
inc
jp
lahf
in
add
or
mov
jecxz
aaa
and
repz
inc
and
inc
inc
adc
push
xor
mov
(bad)
mov
push
or
cmp
push
movs
cpuid
jmp
pop
adc
push
xchg
lea
cmp
dec
sub
and
int
loopne
sbb
(bad)
cmp
jmp
mov
cmps
dec
cmp
or
mov
lods
push
or
mov
ja
test
push
rol
jae
imul
and
shr
push
sub
inc
mov
fdivr
sub
add
sbb
xchg
ss
sub
call
xor
or
mov
adc
sub
es
in
mov
mov
mov
test
push
sbb
jo
fs
xor
pop
pop
pop
add
or
imul
shl
js
or
jmp
sbb
push
fistp
lock
ret
mov
push
sub
dec
cmp
mov
mov
and
je
cmovge
jne
mov
xchg
or
xchg
hlt
push
xchg
xchg
sub
add
push
dec
jne
ficom
lea
xchg
or
mov
mov
push
test
cmp
je
mov
movs
and
aad
cld
test
out
add
je
mov
sbb
iret
sbb
cmp
rcl
jne
stc
loope
sbb
cmp
xlat
shl
dec
dec
call
addr16
(bad)
mov
dec
int
lea
add
or
sar
sub
jmp
pop
arpl
in
mov
imul
adc
in
jae
mov
push
adc
ret
push
sub
rcr
cdq
mov
mov
inc
loopne
jge
or
mov
xor
cmp
adc
das
ficomp
cdq
sbb
(bad)
out
pop
neg
jecxz
pop
cmp
repnz
cwde
arpl
test
jne
jbe
cli
jg
mov
sbb
test
jne
fld
push
sbb
dec
lds
or
pusha
jmp
test
inc
push
fld
icebp
fist
and
mov
in
xor
pop
cmp
and
push
xchg
js
sbb
sbb
xchg
sbb
add
adc
pop
test
into
js
add
call
mov
pop
mov
pop
loopne
leave
outs
and
push
mov
or
pop
movs
push
dec
adc
out
aad
jo
(bad)
pop
pusha
or
jne
xchg
inc
ror
call
mov
adc
lea
test
scas
and
inc
sub
add
xchg
inc
cmp
dec
cs
lea
loop
jno
test
pop
pusha
pop
adc
add
xchg
jnp
inc
add
mov
sbb
cmp
imul
sbb
xor
(bad)
sub
pop
sbb
shl
mov
out
jmp
cmps
xor
push
mov
xchg
add
popa
ins
fcmovnu
js
call
cmps
das
push
sbb
mov
pop
and
jbe
ins
and
mov
sub
in
movs
mov
movs
xchg
add
mov
adc
xchg
adc
xlat
icebp
mov
push
pop
sbb
rcl
js
or
lock
or
xor
and
ja
ins
or
and
sbb
sbb
(bad)
psllw
xchg
dec
dec
lods
outs
in
mov
repz
add
fcmovnb
das
or
cmp
inc
lea
pop
sbb
mov
push
xchg
push
xchg
adc
push
xor
push
or
je
adc
push
jnp
rol
ins
pop
in
cdq
cmp
pop
add
jg
test
jmp
pusha
cmp
aaa
dec
test
cmp
mov
push
add
mov
outs
mov
inc
mov
mov
call
pop
hlt
outs
mov
fidiv
nop
add
dec
test
xchg
movs
jmp
or
adc
xor
rol
movs
ss
pop
call
in
fiadd
repz
push
inc
sbb
retf
push
ret
mov
jle
cdq
sbb
fbld
test
adc
jl
enter
das
push
xor
in
mov
fdivr
test
imul
fld
push
or
cmps
es
fstp
jns
les
inc
fs
ins
cmp
pop
ins
out
dec
sbb
sbb
and
push
add
arpl
sub
shl
push
sbb
mov
je
leave
arpl
jle
add
cmp
in
adc
push
inc
inc
je
or
dec
imul
jmp
pop
mov
jmp
xchg
xor
inc
cmp
jo
cli
cmp
shr
jno
lods
mov
movs
pusha
or
jecxz
sub
loop
or
mov
jae
dec
mov
in
inc
test
pinsrw
xchg
dec
cwde
xchg
sbb
outs
(bad)
push
pop
hlt
push
imul
add
and
add
xor
inc
and
pop
aaa
out
and
mov
sbb
push
add
mov
ror
mov
inc
mov
ja
mov
sbb
lds
mov
fisubr
and
xor
and
cwde
call
xor
jmp
push
cld
add
or
cmp
outs
push
pop
adc
mov
push
lahf
fdivr
test
loopne
push
mov
ds
test
mov
jno
repz
pop
inc
cmp
fld
push
push
add
jb
sbb
cld
inc
sbb
outs
push
add
ins
cmp
or
inc
mov
or
sbb
test
arpl
push
jl
and
shr
or
push
sbb
mov
aam
pop
push
push
(bad)
xchg
and
inc
ins
xchg
loope
lahf
test
sbb
addr16
push
test
inc
mov
es
push
sub
push
pop
jo
xor
inc
jno
inc
rol
and
push
movs
xchg
test
loopne
retf
scas
lock
push
pop
jecxz
cmp
add
movups
dec
and
or
add
push
mov
jb
fidiv
fiadd
jmp
jge
xor
inc
idiv
mov
cs
(bad)
cs
push
mov
inc
jg
jae
push
add
xchg
lahf
fwait
(bad)
fldcw
pop
xor
xchg
bound
dec
inc
xchg
mov
or
or
or
jmp
mov
sub
clc
inc
(bad)
cmp
cmp
js
loopne
js
arpl
xlat
add
stos
inc
(bad)
mov
mov
sub
test
mov
(bad)
push
test
or
dec
scas
icebp
aam
jbe
dec
add
mov
xor
xchg
cmp
mov
and
push
sbb
or
fsubr
adc
shl
xchg
jne
fwait
and
lea
push
xchg
icebp
sbb
cmp
mov
push
push
sbb
cmp
mov
mov
ss
xor
mov
mov
hlt
and
mov
xor
add
inc
sub
sbb
adc
je
loop
or
dec
iret
lods
ret
sbb
add
jns
and
sub
sbb
jbe
fwait
pop
nop
pop
sub
add
and
add
stos
dec
aas
adc
cmp
shl
inc
scas
call
(bad)
rcl
push
and
and
xor
and
sub
jl
sbb
adc
pushf
xlat
ret
mov
test
inc
adc
aad
and
cmp
and
push
pushf
add
adc
out
or
inc
nop
js
and
push
fbld
idiv
xchg
mov
dec
aam
sti
dec
mov
mov
cmp
xor
dec
cmp
call
ret
or
adc
ins
and
xor
call
cli
push
nop
ficomp
or
rcl
push
push
or
ret
pop
stc
sub
pushf
cmp
push
(bad)
mov
push
loopne
leave
sub
jne
sub
and
sbb
xchg
fs
test
mov
test
mov
pop
or
je
arpl
mov
ficom
mov
(bad)
pop
jmp
mov
inc
sub
test
sbb
ret
aaa
add
sub
pop
dec
lock
sub
sbb
add
mov
ds
popa
adc
add
inc
aam
push
aas
ins
outs
adc
inc
int
mov
out
hlt
movs
pop
push
xchg
cmp
mov
lea
mov
adc
retf
cmp
aas
movs
cmp
shr
or
or
fimul
pop
sbb
inc
jne
adc
push
sub
mov
(bad)
outs
test
fldcw
push
jae
cdq
fist
sbb
mov
cmp
clc
jg
outs
jmp
or
adc
and
lea
pop
aad
arpl
cli
push
cmp
int3
in
mov
(bad)
ficom
mov
ret
add
xchg
aaa
dec
add
adc
cmp
adc
test
sbb
and
dec
xchg
mov
adc
dec
shl
push
and
data16
call
jp
xchg
or
loop
inc
pop
dec
fmul
dec
movs
fiadd
fs
aas
dec
pop
mov
cmp
dec
mov
add
imul
mov
cmps
adc
rcr
push
les
pop
je
jge
mov
push
test
add
sub
inc
dec
(bad)
mov
push
cs
add
shl
and
pop
add
pop
fnstcw
add
add
cmp
add
push
cli
stos
aaa
cmp
and
and
xchg
daa
fsubr
mov
(bad)
(bad)
cmp
pop
jmp
adc
xchg
daa
sbb
mov
jnp
or
test
call
movs
ja
cmp
imul
push
scas
mov
sub
mov
sbb
pushf
jb
pop
cmp
mov
mov
xor
adc
sbb
data16
sub
mov
rcr
ret
lock
neg
adc
sbb
neg
movsx
push
adc
sub
rol
and
xor
add
lods
and
fs
mov
sub
cmp
or
fs
aaa
mov
sbb
lock
sbb
sbb
push
outs
mov
in
pop
pop
test
or
xchg
push
dec
fadd
inc
jl
les
pop
pop
adc
inc
sbb
dec
and
mov
lea
popa
xor
dec
(bad)
retf
adc
xor
pop
inc
and
push
nop
inc
out
ins
push
xor
cmp
lods
inc
test
add
mov
in
adc
lock
or
daa
ds
jmp
rol
js
outs
std
iret
mov
es
ins
push
jg
xchg
adc
inc
sub
sbb
bound
push
loopne
jo
mov
pop
adc
js
js
xor
push
mov
(bad)
nop
jmp
int
test
or
dec
mov
push
or
or
mov
mov
mov
pop
sub
repz
mov
mov
aas
fmul
xchg
inc
xor
fsubr
or
shl
dec
xchg
sbb
aaa
pop
adc
push
aad
push
stc
int3
int3
add
add
sbb
mov
mov
jnp
test
into
cmp
cli
mov
mov
jns
dec
add
data16
lock
dec
imul
add
and
test
add
pop
sar
mov
ins
imul
clc
cs
mov
sub
mov
call
push
add
call
add
cmp
jl
sub
scas
xlat
inc
mov
jmp
add
idiv
adc
sub
loopne
add
enter
xor
add
inc
ss
inc
test
pop
shr
fsubr
inc
or
add
push
sbb
lods
dec
dec
test
mov
ja
(bad)
cmp
add
and
sbb
cmp
(bad)
(bad)
adc
mov
fistp
test
loope
lea
push
retf
or
mov
jno
imul
mov
mov
adc
and
add
sub
rol
in
jecxz
add
gs
lods
push
(bad)
test
or
jge
fmul
pop
or
or
adc
clc
xchg
mov
adc
daa
jne
push
xor
add
fbstp
rcr
mov
and
jge
dec
cmp
push
popa
jns
lea
and
mov
mov
and
lods
mov
add
jl
popf
pop
mov
pop
pop
(bad)
xor
pop
call
fldcw
jmp
or
adc
inc
fs
mov
cwde
rol
loopne
and
push
data16
imul
mov
add
inc
xlat
xchg
xchg
xchg
sub
push
pusha
jle
xchg
cwde
push
pop
or
mov
add
sahf
aam
sub
mov
shl
pop
ins
movs
or
das
or
or
xchg
aad
ffreep
aas
jmp
cs
gs
adc
sbb
adc
adc
adc
fcom
aam
lods
jge
jo
sub
mov
ret
mov
lea
test
sbb
jb
and
out
test
lea
xor
in
test
sub
clc
sub
iret
cmps
adc
push
js
xor
aaa
ins
(bad)
rol
push
push
or
add
mov
jp
jae
pop
add
mov
xor
push
call
mov
add
mov
mov
js
pushf
and
dec
adc
adc
div
inc
xor
repz
add
add
mov
mov
push
ja
push
dec
xor
xor
push
not
dec
les
mov
xchg
aaa
test
pop
add
sub
enter
cwde
cmps
aam
test
adc
jl
inc
push
nop
popa
dec
fdiv
xor
adc
pop
jle
loopne
daa
sbb
test
rol
push
out
or
outs
cmp
cmp
sbb
push
sbb
cwde
jno
je
test
push
rcl
lea
add
rcr
out
or
or
dec
sbb
ins
mov
ret
add
push
sbb
les
and
dec
cmp
fisubr
mov
fdivr
int3
push
call
cmp
(bad)
sub
addr16
jl
push
and
iret
(bad)
(bad)
loopne
add
or
mov
pop
mov
or
ror
dec
mov
push
jbe
mov
jne
xor
out
imul
sbb
push
pop
addr16
mov
xchg
jo
icebp
and
ret
push
adc
dec
dec
mov
je
pop
xchg
sub
mov
sbb
lock
mov
xor
popa
in
jp
retf
test
js
add
cmp
xor
xchg
or
in
or
adc
ins
shl
or
sbb
cwde
pop
(bad)
pushf
adc
push
icebp
add
test
cmp
je
sbb
lds
mov
mov
cmps
jne
clc
cmp
cmp
enter
cmp
push
fwait
sbb
or
mov
stos
scas
ss
scas
loopne
jp
mov
push
cmp
mov
scas
es
push
lods
call
cwde
inc
mov
repnz
add
sbb
pop
jg
call
hlt
push
push
and
loope
pusha
mov
adc
inc
jne
push
add
lock
xor
and
jmp
and
mov
mov
outs
add
scas
mov
and
in
adc
mov
test
not
sub
inc
add
add
add
mov
add
ins
call
adc
or
cmp
xchg
aad
mov
sbb
ins
(bad)
cmp
or
push
pcmpgtd
inc
or
pop
adc
and
xchg
test
ins
lods
cmp
jb
popf
inc
fistp
mov
sahf
add
or
add
jne
or
xchg
pop
(bad)
daa
scas
xor
cld
jb
in
cmp
mov
xchg
test
mov
mov
sbb
xor
mov
imul
or
sbb
mov
daa
rol
mov
inc
pop
sahf
ror
out
dec
popa
lods
les
dec
das
clc
lods
push
cmp
add
xchg
movs
or
mov
lahf
push
push
stc
pusha
or
sub
es
mov
add
out
test
int3
dec
jae
daa
(bad)
shr
push
call
ret
outs
push
popf
add
and
int3
(bad)
sbb
xchg
mov
les
xor
jge
ja
dec
not
jo
or
adc
xor
inc
sub
popf
adc
bound
ret
and
and
or
add
int
in
sbb
push
loopne
push
xor
or
xchg
push
enter
inc
sub
int
imul
push
loopne
or
arpl
push
ret
and
fadd
shl
or
mov
pop
and
sub
fiadd
ret
rcl
xor
imul
sub
jb
pop
sub
push
adc
in
and
in
fucom
sbb
lahf
or
push
jne
sbb
and
adc
push
sbb
add
add
pop
imul
adc
clc
push
int3
lahf
push
sub
pushf
or
ret
lock
cmps
sub
jb
je
dec
push
fild
xor
or
cmp
aaa
mov
jmp
dec
adc
adc
and
mov
and
nop/reserved
cmp
mov
sub
xor
adc
mov
dec
shl
adc
push
sbb
and
and
push
or
rol
fistp
pop
or
add
mov
mov
adc
xchg
dec
add
add
inc
out
pop
mov
and
adc
mov
add
sbb
push
nop
out
xor
dec
fadd
arpl
inc
push
add
mov
cmps
cwde
mov
xor
(bad)
adc
aam
lds
das
ja
jae
mov
cmp
int3
xor
jmp
mov
pop
jo
cld
test
test
pop
xchg
clc
mov
mov
cmp
es
mov
movs
cmp
jmp
push
or
pushf
cwde
sbb
(bad)
movs
pop
sub
dec
pop
inc
sub
ret
dec
int3
icebp
mov
out
sub
pusha
adc
add
pop
inc
mov
push
dec
or
sbb
pop
push
mov
sbb
callw
mov
rcl
push
loopne
adc
sbb
lahf
lea
ins
jo
add
enter
push
or
mov
aaa
pop
push
inc
cmp
or
rol
out
inc
mov
sbb
rcr
and
dec
mov
push
fmul
mov
enter
xchg
xchg
or
or
xchg
jnp
xchg
push
or
das
add
adc
mov
dec
popa
mov
inc
inc
mov
retf
adc
and
bound
mov
cmp
pop
in
inc
jmp
pop
add
loope
push
inc
or
inc
xchg
inc
adc
sub
mov
fimul
inc
dec
mov
retf
pop
inc
cmps
call
sub
push
shl
dec
adc
sub
lea
xor
hlt
ror
adc
fs
addr16
shr
push
addr16
repz
cmp
arpl
adc
mov
mov
or
sub
inc
and
aas
sub
clc
or
add
jno
jbe
(bad)
dec
sbb
sub
adc
adc
pop
xor
dec
add
lods
ins
push
dec
add
inc
push
xor
cmp
pop
xor
test
sub
xchg
lahf
mov
cmp
das
mov
push
outs
inc
push
out
cmp
pop
xchg
mov
push
clc
xor
neg
mov
mov
push
jmp
push
stos
aaa
lds
repnz
arpl
sbb
aam
mov
mov
rcl
jmp
aas
aad
je
mov
push
or
xchg
push
mov
cmp
push
jmp
ins
out
adc
das
xchg
(bad)
jge
jnp
and
sbb
in
jbe
cmp
lsl
hlt
arpl
xchg
xchg
dec
jecxz
dec
or
sub
pop
leave
add
mov
sub
pop
pop
dec
push
iret
pop
pusha
shr
repnz
xor
push
jecxz
sbb
shl
inc
shr
inc
mov
dec
sub
das
dec
cmp
pop
imul
push
shr
xchg
ss
xor
cmp
in
imul
test
fcom
push
shl
push
test
daa
test
js
sbb
sub
lds
ret
sub
inc
and
shl
jecxz
add
pop
and
push
jmp
ret
or
cmp
call
imul
(bad)
pop
sar
pop
mov
mov
xchg
inc
inc
fmul
xchg
ss
xchg
call
sbb
in
mov
nop
je
mov
and
ja
cs
xchg
fisttp
fild
add
lods
or
and
add
add
jmp
and
fwait
popa
pop
push
xlat
inc
and
xor
jp
cmc
push
sub
and
imul
daa
xchg
xchg
bound
jns
ins
ins
xchg
sub
pop
aaa
xchg
in
shl
mov
fidiv
loopne
jo
pusha
jecxz
mov
jle
nop
add
add
pusha
xor
pop
outs
rol
mov
xchg
nop
push
xor
or
dec
push
mov
mov
or
mov
add
add
or
cmp
movs
ins
push
push
jae
aad
mov
ret
leave
jle
sbb
or
push
or
push
inc
add
push
cli
test
xlat
xchg
shl
xchg
mov
lahf
clc
cmp
pop
sti
pusha
fistp
stos
pop
movs
lock
sub
dec
sahf
add
xor
loope
mov
leave
xor
adc
or
hlt
cmps
adc
mov
push
mov
or
or
or
push
adc
js
adc
and
or
nop
inc
cmps
sar
sahf
test
jne
test
mov
adc
fisttp
popa
and
ret
(bad)
not
and
pop
call
add
and
rol
jns
xor
add
ja
ret
fdiv
inc
xor
push
test
push
add
cli
out
adc
mov
pusha
sub
mov
pop
push
pop
cmps
push
adc
out
adc
pop
and
inc
xchg
jne
mov
adc
ins
daa
iret
call
addr16
jno
ins
scas
out
add
adc
or
jno
loopne
ja
jne
mov
xor
fdivr
ret
or
je
or
(bad)
nop
or
or
(bad)
stos
arpl
lods
(bad)
cmp
mov
sahf
repnz
and
xor
pop
cvtpi2ps
jae
push
inc
mov
pop
das
inc
cli
iret
ror
add
or
cmp
jns
retf
xor
sub
out
adc
icebp
shl
push
pop
arpl
les
push
push
or
jle
arpl
jecxz
sbb
bound
mov
sbb
or
or
dec
adc
push
mov
ins
and
jmp
mov
adc
out
push
jae
inc
xor
hlt
sbb
push
push
adc
int
dec
mov
clc
(bad)
pop
xor
(bad)
fwait
mov
(bad)
loope
pop
inc
sub
inc
cmp
add
add
fldcw
ror
fs
in
push
popa
call
nop
sub
cs
and
adc
sbb
cmps
loope
add
sbb
sub
sub
sbb
mov
and
cmp
les
imul
out
cmp
add
adc
pusha
loopne
xor
pop
pop
mul
mov
(bad)
dec
bound
cmps
nop
(bad)
push
mov
or
fs
ret
ret
push
mov
sbb
pop
shl
jno
leavew
adc
test
mov
cmp
push
(bad)
repnz
stc
adc
and
jo
cmps
loopne
inc
jo
push
fiadd
jmp
adc
push
lea
ja
pushf
fadd
dec
ja
add
inc
xor
inc
jbe
push
xchg
mov
ja
push
sub
sub
xchg
inc
inc
ja
pop
movs
fs
gs
test
retf
sub
pop
push
adc
daa
ror
pusha
test
pusha
pop
jno
add
push
push
pop
scas
in
push
add
inc
lds
mov
xchg
test
sbb
mov
dec
dec
in
pop
cmp
jle
jne
and
mov
xor
or
pop
(bad)
repz
sbb
mov
mov
mov
fs
in
das
retf
movs
retf
xor
add
or
lahf
popf
push
retf
xor
xor
test
fadd
push
jae
retf
lock
dec
iret
dec
add
retf
adc
fs
inc
inc
cmp
sub
inc
retf
push
shr
adc
jbe
pop
retf
push
jecxz
mov
(bad)
retf
and
or
retf
dec
fldcw
add
mov
pusha
pusha
loope
cmp
test
aam
in
retf
add
(bad)
add
into
adc
pop
dec
inc
dec
sub
add
jo
hlt
jne
shl
data16
repz
sub
nop
mov
sub
push
or
das
enter
shr
adc
scas
lea
jae
push
or
xor
add
lea
or
or
cmp
add
outs
lock
add
jne
cld
repnz
push
clc
add
leave
clc
fld
cmp
and
lods
fidiv
dec
cdq
dec
add
push
ja
call
je
inc
inc
pop
dec
dec
sub
mov
scas
int
fcomi
push
inc
and
movs
(bad)
into
cmp
pop
push
ins
inc
(bad)
mov
xchg
or
pusha
pusha
fmulp
fsubr
(bad)
mov
cld
mov
fnstsw
sahf
jbe
push
and
or
or
adc
push
shr
xchg
aaa
gs
or
jmp
or
iret
adc
and
lds
test
and
in
fst
dec
add
loop
and
dec
mov
fs
push
mov
or
xor
and
dec
dec
pop
aas
jo
pop
sbb
xor
xchg
or
adc
dec
push
sbb
leave
add
pop
push
ror
or
mov
sbb
pop
pop
sub
stc
(bad)
icebp
sub
cmp
sbb
sub
cmp
or
add
sub
movntq
push
jecxz
sub
cmp
add
inc
or
pop
xchg
inc
je
inc
sub
and
push
jl
pop
cmps
pusha
cmp
ret
ret
out
adc
and
dec
xchg
or
repnz
dec
adc
sub
adc
mov
sub
sbb
ror
dec
mov
push
call
test
cs
nop
loope
(bad)
adc
xor
shl
or
lock
fst
sbb
cwde
inc
cmp
lock
xchg
pusha
int
mov
stos
xor
add
add
test
je
xchg
outs
and
or
das
jae
imul
out
cmp
movs
add
dec
mov
add
adc
xor
push
pop
sub
or
adc
jmp
fist
pusha
adc
or
mov
sbb
mov
(bad)
adc
push
or
call
bound
mov
test
(bad)
imul
lea
lea
inc
loope
jo
add
or
ret
xchg
mov
push
adc
sbb
adc
(bad)
int3
sub
and
xor
cmp
inc
cld
or
arpl
jo
ds
int
iret
sub
xchg
cmps
mov
sbb
cmp
dec
(bad)
or
add
mov
mov
jg
dec
and
adc
and
mov
push
or
sbb
and
cmp
ret
jb
sbb
pop
dec
adc
push
mov
add
icebp
sub
adc
sbb
scas
inc
jge
sub
mov
sbb
cwde
push
pop
jg
lea
add
mov
and
push
push
or
sub
add
lods
mov
inc
int3
push
pop
cs
(bad)
push
popa
aad
ss
add
pop
and
cwde
add
sbb
jne
les
add
mov
test
popf
inc
inc
push
xchg
xor
xchg
inc
div
jne
push
sbb
adc
or
inc
or
nop
mov
int3
pop
sbb
and
inc
add
sbb
mov
jmp
sbb
fild
shl
and
daa
and
add
mov
nop
xchg
mov
xor
(bad)
pop
call
aas
mov
sub
inc
lahf
add
mov
push
jo
inc
add
sar
out
sub
test
jl
inc
mov
fiadd
fild
sub
mov
pop
popf
or
pop
push
(bad)
rol
dec
jne
add
mov
data16
inc
fadd
xor
add
(bad)
(bad)
call
add
dec
rol
adc
mov
cmp
sbb
ss
lods
cmps
xchg
leave
adc
stos
jne
inc
data16
sub
fmul
dec
gs
sbb
or
sbb
cmp
add
lock
pop
sbb
rol
pop
add
mov
or
xchg
popa
jmp
call
add
leave
sub
lahf
cs
mov
jbe
jns
dec
(bad)
(bad)
outs
cmp
jne
mov
inc
add
or
rol
dec
push
test
addr16
arpl
in
add
out
pop
inc
sbb
sub
inc
je
ja
push
stos
or
push
xor
lea
or
inc
sbb
pushf
je
sbb
adc
mov
add
cmp
adc
fsubr
add
xchg
push
push
mul
icebp
xchg
dec
in
adc
inc
sbb
jmp
js
in
outs
cmp
pop
jg
sub
add
add
or
pop
xchg
sahf
mov
push
icebp
sub
in
mov
push
dec
adc
jg
dec
cmp
add
mov
aaa
cmp
je
sub
cmp
(bad)
std
dec
adc
mov
inc
sub
pop
shl
je
out
add
sub
adc
es
cwde
and
sub
hlt
cwde
inc
(bad)
push
jl
jno
xchg
xchg
(bad)
popf
cdq
sub
add
pushf
je
jle
inc
icebp
add
cdq
push
fcom
je
cdq
out
pop
push
xchg
and
movs
add
push
mov
xchg
inc
mov
sbb
pop
stos
jbe
sti
push
clc
and
or
xor
jbe
jnp
adc
pop
dec
je
gs
push
pop
addr16
inc
sbb
div
(bad)
fwait
push
lahf
jnp
xor
jp
dec
add
cmp
dec
add
cmps
shl
(bad)
aaa
cmps
adc
mov
jg
push
addr16
pop
jb
ss
mov
pop
je
push
ret
mov
dec
popf
adc
test
rcl
or
push
adc
or
or
dec
je
push
ror
push
jno
lods
cli
bound
push
ss
add
add
sbb
mov
scas
jg
sbb
add
jmp
push
dec
add
inc
pop
gs
int
lds
jmp
dec
cmp
jl
add
add
into
fisub
retf
ret
mov
push
or
jle
mov
inc
sub
and
fbld
mov
dec
loope
mov
ret
jne
fmul
adc
push
clc
dec
inc
and
mov
cwde
pop
mov
loopne
cli
inc
mov
jnp
jne
out
in
mov
pop
daa
and
push
mov
cmp
add
outs
sbb
jp
dec
sub
inc
jbe
addr16
popa
icebp
(bad)
mov
inc
jp
sbb
lock
xor
loope
mov
inc
retf
retf
add
jle
dec
jne
in
sbb
mov
std
test
xchg
cmp
clc
scas
jnp
ret
lds
dec
dec
clc
cmp
jne
mov
dec
lods
and
clc
push
pop
mov
mov
call
cmp
cli
mov
cmp
sub
sub
xchg
ins
outs
add
cmp
sub
inc
add
add
popf
push
xor
and
mul
inc
pop
rol
or
fdiv
aaa
call
(bad)
or
cs
xchg
sbb
adc
add
sbb
dec
mov
cmp
xor
in
add
iret
mov
sbb
push
std
jmp
outs
xlat
push
dec
push
das
xor
add
cs
or
xchg
cmova
pop
sbb
mov
dec
lahf
xchg
xor
jne
lods
inc
mov
jne
shl
or
ds
or
ret
in
adc
sbb
nop
pop
pop
jl
jae
cmp
pop
jge
pop
loopne
push
pop
sub
fcom
cmp
add
mov
jge
clc
bound
mov
sbb
mov
pop
loop
bound
sbb
push
mov
pop
ret
test
and
sbb
daa
xchg
add
inc
out
inc
xor
in
xor
xchg
add
push
and
add
pushf
adc
cmps
adc
imul
test
mov
mov
xor
push
aam
sub
jmp
xor
push
nop
xchg
fsubr
sub
cmp
inc
sbb
clc
dec
mov
cmp
xor
jle
inc
ja
xor
int
mov
data16
jmp
call
push
mov
cmps
fxch
dec
das
int3
cmp
sbb
push
push
xchg
xchg
and
retf
add
stos
mov
and
nop
retf
sub
dec
push
jmp
sbb
cmp
mov
mov
sbb
add
and
cwde
adc
sbb
ja
xor
lock
in
mov
mov
scas
ins
pop
push
xchg
es
call
pop
inc
push
sub
sub
mov
inc
adc
loopne
sti
add
call
nop
cmps
in
mov
jle
pop
push
inc
scas
jmp
push
popa
sub
ret
cs
out
inc
lods
sub
or
add
aaa
or
add
xor
inc
jbe
mov
inc
jbe
xor
pop
mov
aas
test
aam
cmps
inc
xchg
adc
mov
dec
cmp
and
push
jns
dec
dec
add
push
mov
lea
sub
jg
dec
mov
add
mov
jbe
cld
xor
je
in
pop
inc
cmp
dec
inc
push
scas
or
inc
and
and
push
out
or
mov
retf
shl
das
pop
adc
or
inc
cmp
push
xchg
push
push
and
jne
(bad)
and
and
or
dec
sbb
sbb
test
sub
inc
int
push
inc
iret
mov
fld
sbb
ficom
push
icebp
inc
jne
shr
stos
dec
and
dec
sub
mov
xor
jmp
cmps
jl
jae
adc
mov
sub
inc
lock
mov
inc
inc
push
hlt
jg
dec
cmp
nop
fldenv
xlat
ror
cmp
dec
ret
push
push
hlt
lds
pop
stos
adc
sbb
(bad)
pop
xor
push
mov
sti
adc
push
jmp
push
add
das
stos
mov
adc
pop
add
dec
dec
push
call
add
ja
and
pop
jmp
js
pop
hlt
lea
lahf
add
in
call
je
mov
pop
xlat
pop
cmp
or
fisttp
(bad)
cmp
cmps
push
xchg
adc
sub
and
cmp
pop
mov
jo
adc
mov
mov
sub
or
xchg
push
jecxz
or
mov
xchg
loopne
dec
and
or
push
cmp
mov
daa
ror
or
in
add
ret
fcomi
xchg
dec
mov
dec
pop
(bad)
ins
ins
clc
cmp
movs
test
push
in
cmp
jle
ins
test
into
inc
cmp
ja
cmpxchg
test
clc
xchg
push
ret
stc
and
or
call
mov
jle
sub
xor
inc
lock
ror
enter
inc
and
test
test
test
inc
loop
dec
pop
lock
rcr
cmps
push
loopne
and
push
push
lods
cmp
add
add
out
push
dec
ins
sub
inc
fdivr
nop
icebp
bnd
inc
add
xor
push
cmp
inc
inc
jle
icebp
add
xchg
jo
ins
push
loop
add
mov
mov
jae
and
repnz
mov
outs
sar
or
sbb
cmp
bound
loopne
push
out
stc
pop
loope
leave
adc
test
add
pop
out
or
dec
xchg
pop
xor
jmp
push
sbb
and
ror
jb
and
js
les
das
imul
pop
fcomp
dec
mov
or
xchg
pop
pop
or
xchg
scas
out
mov
mov
add
inc
push
add
sub
ins
mov
into
and
sbb
test
sbb
rol
sbb
add
or
in
pop
popf
mov
push
sbb
push
in
push
adc
sub
pop
mov
add
aas
inc
cmp
jl
dec
pop
push
push
push
jno
dec
ins
mov
jmp
test
pop
add
adc
cmp
into
push
add
adc
push
cld
push
or
push
mov
jecxz
mov
sub
pop
(bad)
add
popa
xchg
lock
jbe
data16
xchg
dec
pop
js
loopne
int3
adc
sti
lock
aas
pop
cmp
and
rcr
and
lods
push
mov
sub
call
and
in
pop
mov
stos
sub
inc
push
mov
mov
ret
retf
add
jp
pop
and
pushf
addr16
iret
adc
jmp
push
jmp
and
cmp
or
sub
add
add
push
jb
dec
pop
dec
inc
daa
popa
xor
add
pop
push
xor
jae
das
hlt
std
mov
fist
xor
jmp
ins
mov
or
ret
pop
stc
xor
cmp
in
loope
hlt
push
cmp
push
sbb
enter
add
shl
les
arpl
popf
fcom
mov
xor
mov
dec
or
aad
xlat
fucomi
add
(bad)
lods
ret
das
push
dec
aas
add
and
add
inc
lods
les
push
in
popf
mov
push
sub
or
(bad)
fstp
jge
jge
cmp
int3
add
test
jmp
add
and
add
add
loopne
rcr
sub
add
fcmovnu
std
push
rcl
add
add
sti
cmp
push
jbe
add
and
adc
pop
pusha
les
push
pop
mov
dec
mov
fild
and
je
xchg
jecxz
iret
dec
std
inc
or
sbb
mov
adc
inc
cmp
jl
daa
call
adc
in
loopne
addr16
in
adc
adc
js
movhps
cmp
cmp
clc
add
xor
mov
push
or
adc
scas
fwait
inc
call
adc
inc
sub
or
mov
or
add
sub
jp
add
jge
adc
adc
and
xchg
clc
inc
dec
ret
fs
inc
xor
xor
movs
add
push
push
inc
ret
call
pop
pop
ret
call
push
dec
and
mov
xchg
push
(bad)
xor
clts
sub
ficomp
mov
inc
ret
dec
cmp
daa
sbb
fidiv
cmp
mov
xlat
out
imul
int
pusha
(bad)
dec
sbb
imul
sub
add
loopne
(bad)
xor
xor
push
pusha
dec
hlt
or
push
add
ret
cmp
jo
data16
xchg
mov
lea
inc
sub
or
push
dec
iret
dec
not
sti
or
cmp
inc
mov
mov
push
sub
(bad)
ror
cld
jge
cmp
cmp
adc
or
or
push
xor
xor
inc
adc
test
cmp
(bad)
sbb
add
cmp
sub
sub
adc
test
retf
(bad)
add
shl
push
inc
add
cmp
das
adc
sbb
pop
in
icebp
fisubr
bound
or
push
adc
jne
add
call
cmp
pusha
shr
xor
ret
xor
imul
push
mov
or
dec
into
and
push
or
dec
inc
pop
xor
pop
pop
in
dec
add
cdq
xor
sub
jnp
add
test
mov
aad
adc
sub
add
and
and
add
jp
ins
pusha
ret
mov
or
test
or
ins
sar
daa
int3
sbb
dec
mov
loopne
rol
call
inc
inc
mov
mov
mov
xlat
adc
xchg
jmp
and
and
ror
(bad)
lock
xor
sbb
lods
cmp
jne
or
les
adc
daa
dec
sub
jo
push
cmp
adc
mov
pop
cld
jo
pop
jbe
imul
sub
adc
add
sub
jmp
(bad)
clc
fild
rol
add
jle
jge
scas
popa
jnp
dec
xor
retf
push
mov
sahf
jp
(bad)
sub
ret
push
loope
inc
inc
loopne
fwait
push
sbb
out
cmp
xor
ror
adc
call
and
xchg
nop
leave
push
pushf
sbb
out
leave
das
push
mov
fld
test
lock
and
loope
test
loop
adc
and
neg
cmp
add
jne
adc
test
(bad)
(bad)
jmp
ins
add
mov
fimul
push
data16
js
adc
pop
scas
inc
jne
lock
(bad)
add
adc
stos
and
inc
daa
lock
xor
inc
movs
pop
push
lea
pusha
ss
lods
jle
jo
movs
xchg
adc
or
in
pop
jg
mov
scas
xor
dec
cmp
cmovb
icebp
jg
int
xor
fadd
cmp
pop
je
dec
je
push
in
adc
and
adc
dec
inc
pop
ret
mov
add
adc
jle
lds
ss
jmp
dec
jle
inc
sbb
out
mov
test
add
inc
cwde
sub
test
ret
pop
pop
movs
sbb
in
out
add
mul
mov
push
rol
sbb
adc
sbb
xchg
test
aam
rcr
and
call
mov
jno
iret
or
cmp
repnz
mov
jp
test
jge
and
push
mov
add
inc
sbb
cwde
mov
ficomp
mov
cmp
or
mov
lahf
sub
inc
and
das
pushf
je
xor
or
xor
test
mov
cmp
jge
movs
inc
test
push
cmp
add
pop
les
mov
pop
inc
pop
imul
push
into
sub
into
test
mov
add
bound
in
add
test
push
push
pop
fwait
imul
je
loopne
or
or
int3
sbb
pop
das
call
mov
stos
les
cwde
clc
out
adc
adc
adc
clc
xchg
sub
sub
sub
adc
call
inc
or
jle
nop
mov
or
push
inc
dec
pushf
push
in
adc
or
retf
inc
ret
jo
rol
or
cmp
fld
dec
mov
ret
mov
mov
sbb
pop
lea
or
lock
xor
sbb
push
sbb
adc
sub
add
je
outs
and
sbb
mov
(bad)
xchg
or
and
push
fldenv
xor
pusha
cdq
mov
in
adc
adc
and
sbb
int3
jns
inc
dec
mov
and
push
outs
test
push
or
inc
xchg
xlat
xor
js
jmp
jge
adc
sbb
sbb
mov
inc
mov
cmp
lods
add
adc
mov
push
ja
js
or
add
fcom
repz
test
and
lds
call
jns
clc
mov
test
push
push
(bad)
sbb
je
cmp
jmp
xchg
mov
inc
cmp
xchg
add
mov
sbb
cdq
sbb
jnp
inc
and
inc
les
xor
mov
dec
dec
push
mov
fcomp
xor
push
loopne
je
inc
adc
mov
lods
(bad)
scas
stos
push
xchg
ror
iret
xor
test
adc
sub
sub
inc
dec
and
sti
lods
popa
or
inc
sbb
inc
xchg
push
jge
cwde
xchg
repz
dec
jno
sub
enter
je
test
dec
add
nop
sub
movs
ss
pushf
xchg
shl
lea
ja
call
enter
or
stos
js
or
add
add
push
dec
xlat
sub
pop
lods
xor
dec
retf
sub
sbb
or
cwde
add
icebp
jg
and
push
and
call
mov
mov
mov
pop
and
inc
aam
inc
or
das
mov
dec
jl
(bad)
cwde
dec
jne
cmp
push
and
push
loope
push
ret
mov
sti
mov
inc
mov
mov
cdq
fsub
mov
mov
sbb
mov
adc
adc
imul
or
lods
lea
jl
mov
rol
cmp
pop
adc
add
add
xor
retf
mov
mov
xor
xor
mov
jp
push
sub
and
test
add
stos
les
jg
syscall
out
and
aam
cmp
int
mov
jo
push
stc
add
dec
popa
inc
cld
es
mov
sbb
lea
iret
add
pop
inc
add
add
inc
cmp
aaa
push
ror
and
mul
int3
or
and
pop
or
xchg
cmp
sbb
ret
mov
inc
inc
pop
xchg
ret
adc
mov
iret
push
add
cmp
nop
sbb
cmp
or
adc
jnp
in
adc
sti
jl
inc
and
and
push
push
inc
pop
or
jl
xor
scas
in
adc
ds
mov
aas
sbb
adc
fwait
push
add
inc
push
mov
dec
and
and
lods
pop
(bad)
dec
pusha
push
pop
jne
ret
mov
xchg
sub
dec
sbb
jnp
cmp
sysenter
push
cdq
mov
imul
sub
xor
dec
imul
pop
loopne
pusha
adc
xor
inc
xor
or
and
outs
push
push
repnz
push
pop
xor
ja
jmp
pop
pop
push
cmp
jle
sbb
xor
xor
or
mov
ds
test
(bad)
pop
add
fwait
jle
adc
sbb
sbb
xor
add
push
and
push
push
ror
je
adc
mov
dec
ss
add
xor
mov
lds
mov
mov
inc
or
pushf
or
pop
pop
jecxz
pop
in
inc
adc
mov
pop
(bad)
xor
push
adc
push
push
lds
in
mov
pop
sbb
xchg
retf
or
xchg
scas
pusha
xchg
ja
test
rcr
xchg
push
imul
sbb
add
pop
xchg
and
mov
cmp
inc
push
xchg
and
es
test
or
in
ss
pop
cli
and
ins
test
pusha
stos
dec
vmread
jo
cmp
or
scas
mov
rol
push
mov
mov
push
scas
jle
adc
adc
test
inc
mov
jo
dec
jmp
pop
mov
jmp
push
add
leave
lds
leave
add
mov
add
push
mov
sub
pop
inc
add
aam
jmp
and
push
hlt
or
xchg
cmp
add
sbb
lahf
(bad)
ror
mov
cmps
in
sbb
pop
inc
lds
xchg
inc
cmp
test
xchg
cmp
sub
push
mov
ins
ror
sbb
cmp
jnp
adc
fs
inc
adc
add
mov
sub
adc
outs
cmp
(bad)
push
mov
jmp
jg
mov
test
and
sbb
hlt
and
dec
adc
ret
mov
aaa
xchg
js
push
pop
inc
and
sbb
and
and
mov
dec
xor
sub
mov
mov
repz
into
shl
adc
arpl
adc
inc
push
sub
push
sbb
outs
je
stos
adc
les
pusha
jns
or
push
mov
sbb
sahf
xor
adc
fist
jl
inc
add
clc
bound
or
ret
push
push
adc
sbb
adc
mov
mov
movhps
mov
jae
push
xor
push
add
hlt
dec
sub
movs
(bad)
sub
xchg
sbb
and
lock
push
mov
shl
lahf
in
add
xor
shr
inc
xor
pop
dec
jmp
lods
or
shl
hlt
push
pusha
xor
jo
pop
out
sbb
add
mov
add
cmps
and
pop
add
aaa
jne
cs
addr16
or
xor
sub
rcl
not
inc
add
adc
aam
adc
enter
inc
or
sbb
xor
stc
js
push
adc
dec
jp
mov
enter
mov
cmp
clc
sahf
lahf
sub
push
es
add
ins
cli
adc
sbb
hlt
mov
neg
(bad)
mov
cwde
fwait
and
pop
dec
(bad)
mov
and
pop
sbb
jp
mov
in
adc
inc
adc
xor
call
jnp
cmp
les
sub
mov
and
jmp
int3
push
sbb
sub
sub
push
jb
(bad)
push
add
xor
xor
xor
xor
test
xor
out
les
les
mov
fdivr
dec
clc
int
cmc
pop
pop
push
je
sub
pusha
loope
or
push
lock
test
shl
call
adc
sub
adc
xor
dec
pushf
les
fiadd
or
push
add
or
outs
test
inc
das
xchg
dec
push
fs
or
xor
fwait
ss
das
adc
xor
xor
dec
pop
fcom
sar
add
mov
or
ss
gs
and
adc
je
add
adc
or
adc
int3
and
lods
ror
and
pop
nop
sub
cmp
adc
xchg
mov
and
inc
sti
push
sbb
ins
inc
int
out
jl
je
sub
mov
retf
add
pop
dec
ins
xchg
add
or
add
ds
push
sbb
sbb
or
leave
xor
or
push
mov
push
mov
mov
push
mov
cdq
mov
jl
ja
cdq
iret
syscall
jbe
inc
cmp
jnp
sahf
aam
adc
jnp
mov
dec
cmp
cwde
xchg
add
nop
add
mov
imul
outs
sub
pop
leave
movs
xor
push
icebp
test
or
mov
shl
unpcklps
sub
fs
(bad)
lods
call
jae
add
adc
cwde
sub
cld
mov
or
inc
stc
jp
xchg
or
test
mov
adc
cmp
aad
jb
(bad)
pop
and
push
imul
outs
jne
cwde
lock
bound
(bad)
test
add
jge
iret
push
outs
xchg
inc
push
adc
sub
(bad)
es
add
cdq
inc
daa
mov
ret
add
inc
add
pop
js
mov
push
sbb
xchg
sub
inc
mov
sbb
jae
jmp
lods
sbb
push
pop
adc
cmps
sbb
xor
sbb
rcr
stos
sub
test
jne
jne
sbb
jp
sbb
lods
xchg
pop
(bad)
push
aas
aas
out
mov
or
pusha
inc
mov
mov
pusha
push
or
jno
mov
sub
popa
and
sub
fcom
and
mov
movs
jnp
dec
pop
aam
xchg
inc
out
pop
adc
fwait
cwde
cmp
inc
repz
(bad)
jecxz
fldcw
push
or
mov
mov
mov
aaa
mov
and
or
adc
je
das
xor
pop
push
pushf
jmp
mov
add
push
mov
in
(bad)
je
rcr
jnp
sbb
int
or
adc
jl
adc
xor
xchg
aaa
xchg
fdiv
ins
sbb
jp
aaa
packssdw
add
aaa
not
jo
inc
mov
loopne
pop
(bad)
lods
jl
inc
mov
cld
xor
sub
push
je
and
rcr
(bad)
(bad)
adc
sbb
pop
jb
(bad)
or
pop
dec
je
xchg
xchg
pop
or
ret
adc
add
add
add
sub
xor
sub
or
pop
repnz
jo
add
test
fsubr
sbb
sub
jge
pop
push
fnstsw
add
cdq
test
je
je
ins
add
mov
mov
push
call
pop
mov
or
pusha
xor
jns
cmps
push
scas
dec
and
clc
and
xchg
std
sar
loop
pop
cmps
rcr
popf
or
clc
daa
mov
jecxz
test
stos
xchg
add
lea
xlat
inc
xor
inc
js
xor
dec
xchg
sbb
sub
inc
repz
jecxz
lahf
test
xchg
dec
and
sbb
or
lea
pop
mov
or
jmp
and
fdiv
push
inc
cwde
dec
dec
sbb
and
(bad)
xor
ins
in
inc
mov
call
mov
pop
test
out
inc
loop
pop
call
aas
icebp
mov
inc
call
ins
and
inc
cmp
xchg
mov
mov
xor
pop
bound
inc
or
add
ss
push
push
shl
add
mov
sar
adc
nop
icebp
jg
push
mov
mov
lea
add
sub
mov
xor
mov
in
or
mov
sub
inc
or
add
ss
lods
nop
xor
shr
ret
sub
mov
and
xor
mov
cmp
jecxz
mov
dec
pop
xor
xor
cmp
or
jmp
gs
sbb
cmp
jb
jno
cmp
cmp
test
and
call
sbb
call
add
mov
sbb
sbb
test
xor
nop
pusha
or
inc
mov
test
sbb
ja
adc
stc
inc
xlat
xor
pop
inc
ja
inc
in
popa
pusha
inc
xor
sub
xor
push
or
mov
and
js
(bad)
cs
cmp
(bad)
ud0
pop
pop
sub
and
in
sub
xchg
sbb
pop
popa
loope
repnz
and
mul
adc
dec
mov
xchg
add
mov
pop
cs
xor
leave
in
popw
dec
xor
aaa
sbb
push
jns
cmp
into
mov
xor
rol
iret
add
sahf
inc
das
jl
cld
pop
fadd
or
rcr
adc
pop
push
fsub
lods
sbb
(bad)
ss
or
inc
fisttp
cs
retf
mov
inc
add
push
es
push
add
push
jne
je
adc
push
inc
xor
jns
lock
sub
pop
sbb
inc
pop
push
dec
cs
adc
push
pop
imul
sub
and
movs
aaa
dec
inc
enter
push
loopne
cmp
sbb
dec
xchg
dec
push
pop
inc
lock
pop
(bad)
and
aad
lea
call
inc
adc
es
leave
(bad)
xor
pop
ret
ror
xor
iret
inc
pop
cmp
add
cmps
add
push
adc
and
jl
je
add
adc
mov
cmp
sub
adc
push
ror
test
pop
mov
push
cmps
adc
push
or
push
inc
mov
int3
icebp
or
cdq
inc
loop
shl
jns
icebp
adc
and
shl
or
adc
aam
in
or
shl
push
inc
or
lds
push
dec
push
cmp
loop
or
movs
add
pop
aaa
xchg
or
push
loope
mov
call
jb
call
push
hlt
lahf
pop
or
or
add
sub
pop
popa
xor
add
dec
push
inc
pop
push
(bad)
rol
rcl
jp
sbb
push
mov
jns
inc
mov
out
das
test
in
iret
sub
dec
jp
aaa
fstp
sub
(bad)
jle
jne
cmp
fadd
mov
(bad)
adc
xor
test
addr16
sub
arpl
pop
and
sbb
or
inc
rol
sbb
xor
add
in
mov
je
mov
and
inc
mov
adc
push
pop
popa
add
inc
add
(bad)
das
mov
pop
sub
sahf
fs
or
jbe
sbb
js
cmp
push
adc
inc
mov
cld
mov
mov
je
js
cmp
sub
cmp
pop
sbb
popf
lock
je
add
test
pop
call
jge
les
add
cmc
loopne
ins
inc
adc
dec
into
and
xchg
popaw
push
inc
dec
pop
mov
add
push
sub
bound
aas
(bad)
stc
test
inc
inc
(bad)
lock
pushf
push
or
hlt
push
or
push
rol
xor
mov
pop
jle
inc
mov
sub
stos
sub
lea
adc
jmp
inc
push
dec
cmp
mov
je
or
scas
clc
or
(bad)
dec
enter
cmp
je
inc
pop
add
mov
out
sub
pop
inc
inc
add
xor
shl
xor
lock
stos
jle
adc
push
nop
add
js
mov
das
dec
mov
cmp
js
dec
and
call
leave
bound
nop
or
inc
sahf
fwait
mov
xchg
lods
cmc
xor
push
sbb
mov
inc
cmp
adc
rol
cmp
adc
sbb
jmp
and
push
in
outs
int
inc
sti
movzx
push
dec
or
add
shl
and
jecxz
rcl
dec
loop
adc
jno
retf
adc
or
cmps
stc
das
rcl
jns
jle
jnp
ret
push
xchg
movs
jmp
inc
fistp
clc
movups
add
mov
adc
in
imul
ror
retf
dec
jae
rcl
add
out
js
je
cmp
pop
mov
sub
mov
xchg
sahf
add
sbb
imul
nop
or
sahf
nop
imul
add
add
inc
push
add
sbb
adc
mov
xor
add
xchg
pop
jno
dec
jno
lock
je
inc
je
cmp
ret
pop
rol
sub
and
sbb
sbb
or
scas
sub
jl
xor
push
dec
div
(bad)
mov
inc
pop
push
cwde
and
cmp
shl
(bad)
sbb
xchg
pop
data16
or
dec
lods
sub
and
and
or
aam
fstp
and
jno
jno
push
or
test
mov
or
(bad)
xor
add
in
(bad)
push
add
inc
xchg
and
or
imul
les
or
lahf
enter
fld
cmp
js
repnz
push
mov
sub
adc
sbb
push
iret
add
rcl
pusha
push
adc
mov
push
inc
and
mov
xchg
adc
sub
and
cmps
test
jp
pop
jge
movs
push
and
std
add
cwde
and
gs
or
je
jp
add
push
rol
(bad)
jne
mov
jmp
loopne
adc
cwde
xor
loopne
daa
in
push
jl
add
add
push
sbb
arpl
or
bound
fsubp
sbb
dec
xor
inc
sar
fadd
and
cmp
jl
test
sub
and
ret
add
call
mov
ficom
adc
imul
addr16
push
jo
gs
sbb
(bad)
and
mov
mov
ficom
push
arpl
imul
jae
ins
cs
lods
jge
in
movlps
loopne
daa
mov
das
fmul
adc
dec
push
push
push
out
sahf
out
pop
mov
fcomp
mov
xor
shr
push
inc
add
ficomp
rcr
dec
outs
clc
js
dec
in
movs
imul
adc
mov
add
jmp
add
pop
sbb
ss
push
outs
inc
outs
jne
retf
or
jb
add
cmp
push
inc
jb
sbb
(bad)
fiadd
test
push
gs
data16
fnstcw
inc
aad
xor
or
cmps
in
in
and
js
je
enter
cld
scas
pop
loope
pop
add
imul
jbe
dec
dec
dec
in
mov
add
cmp
ds
popa
scas
nop
jge
test
aam
int3
jbe
pop
fnstsw
add
dec
add
add
pop
push
push
icebp
nop
loope
fcom
dec
(bad)
test
jbe
in
mov
push
and
idiv
repz
cmc
push
int3
icebp
test
fwait
mov
dec
out
test
push
mov
shr
xor
push
push
add
and
pop
fcomi
call
adc
fdivp
or
push
outs
mov
push
std
scas
sbb
int
xor
fs
mov
push
pushf
sti
sahf
idiv
push
mov
mov
sbb
pop
add
push
mov
loopne
in
add
jmp
js
inc
js
out
clc
shr
gs
dec
in
jmp
or
imul
sub
sub
sub
(bad)
not
outs
push
inc
push
adc
popa
push
pop
push
mov
jne
gs
mov
jnp
adc
sub
ss
push
jo
popa
mov
(bad)
inc
or
addr16
daa
fidivr
sub
sub
mul
clc
(bad)
(bad)
in
rcr
fcomp
in
adc
inc
jbe
in
test
lods
jge
(bad)
retf
movlps
out
pop
sbb
jb
fist
movhps
xor
pop
add
mov
push
mov
add
pop
sbb
ds
bndstx
jl
cmp
sbb
pop
jmp
pop
add
mov
jmp
mov
setle
and
jmp
push
sub
push
sub
stc
mov
add
in
jle
daa
and
stos
pusha
or
or
and
lds
jae
outs
jns
inc
push
cmc
xor
pop
cwde
aad
mov
add
std
inc
jnp
pop
xchg
std
push
pop
inc
mov
pop
or
cmps
clc
dec
bound
int3
addr16
mov
jmp
mov
or
add
inc
jo
jl
popa
jo
cmps
pop
jmp
xchg
or
loopne
add
fadd
inc
pop
lods
fcmovbe
adc
pop
pop
dec
int3
sbb
icebp
dec
jae
imul
jecxz
push
movs
jb
adc
fstp
in
inc
or
addr16
rcr
mov
cmc
and
out
dec
sbb
pop
sahf
gs
sub
xchg
add
sub
add
inc
push
add
add
push
inc
jno
mov
lods
cdq
xor
out
or
arpl
and
add
push
xor
add
add
cmp
(bad)
sub
lock
loopne
shl
pop
pop
push
repz
jmp
mov
leave
or
hlt
dec
test
adc
add
arpl
mov
test
bound
mov
and
jp
lock
mov
pop
cs
jno
jg
int3
mov
jp
and
sub
mov
popa
fs
jo
inc
imul
or
push
sub
mov
js
std
pop
jnp
(bad)
rol
outs
arpl
adc
dec
lock
cld
push
lahf
xchg
inc
push
jbe
gs
sbb
aam
jbe
js
sbb
add
dec
push
xor
add
popa
ror
xor
cmp
jmp
loope
or
ja
cmp
or
mov
mov
mov
dec
pop
xor
out
ja
cmp
inc
(bad)
or
ror
sub
xchg
pop
push
mov
or
jns
jne
add
inc
xchg
inc
shl
push
ins
mov
rol
lahf
cmp
or
pop
xor
dec
repz
dec
or
inc
or
dec
or
cmps
dec
pop
or
test
arpl
in
and
and
sbb
add
arpl
in
sub
xchg
add
dec
leave
push
inc
add
ja
xor
pop
mov
push
cmp
outs
cmp
adc
inc
pop
cmps
shl
jae
push
out
enter
jae
or
enter
repnz
out
or
enter
shl
add
ss
pushf
pop
ja
inc
not
mov
call
(bad)
call
and
or
jne
dec
(bad)
sub
jg
push
sbb
imul
push
sar
cs
aam
fimul
inc
lods
ins
popa
cmc
mov
(bad)
cmp
mov
pop
lods
push
jle
pop
xchg
in
ret
cmp
les
or
xlat
dec
enter
cs
imul
inc
jl
inc
mov
sbb
adc
adc
push
pushf
pop
jbe
cmp
dec
mov
call
sbb
mov
mov
push
popa
sub
(bad)
or
aas
inc
or
icebp
popa
loopne
movs
int3
inc
add
or
sbb
pop
push
dec
fst
adc
and
sbb
out
popa
popa
hlt
addr16
test
or
fisub
and
adc
adc
mov
add
out
in
sub
lock
stc
sbb
xor
dec
cmp
shl
and
lods
cmove
push
lock
sbb
pop
inc
mov
out
retf
jae
inc
cmp
mov
cmp
or
(bad)
ret
(bad)
clc
pusha
mov
lods
arpl
call
pusha
hlt
xchg
xchg
mov
sahf
icebp
sub
xchg
jnp
jb
jo
push
jnp
sub
pop
shr
lock
test
outs
lods
ficom
les
pop
imul
loop
xor
je
mov
clc
ficomp
mov
movzx
mov
inc
add
mov
push
adc
inc
push
adc
or
xor
push
push
mov
jge
push
shl
adc
(bad)
(bad)
pusha
dec
rcr
aaa
dec
add
inc
push
dec
pop
enter
scas
pop
lock
lock
push
das
sbb
xchg
pop
xor
xchg
shl
mov
jecxz
test
mov
dec
shl
push
out
dec
dec
pop
aad
cdq
inc
sub
movs
add
sub
add
adc
dec
mov
xor
xor
jb
mov
inc
aaa
loop
sar
jne
jns
test
adc
lods
test
fiadd
pop
idiv
dec
loop
enter
je
pusha
call
scas
popa
mov
hlt
cmp
sub
ret
les
in
repnz
push
jns
call
test
aam
add
push
in
inc
dec
outs
js
ins
test
iret
add
inc
jae
xlat
ret
ins
or
mov
inc
ror
outs
lods
xchg
lock
hlt
(bad)
fadd
pop
jo
xor
push
push
pop
adc
jb
adc
mov
jg
cmps
jo
mov
or
pop
stos
pop
pushf
inc
mov
mov
jno
mov
adc
std
fimul
xlat
enter
outs
iret
or
inc
xchg
push
or
lods
push
ror
mov
mov
add
add
xchg
or
call
and
repz
jo
pop
pop
mov
jnp
in
pushf
add
dec
dec
mul
cdq
test
call
fdivr
stos
cmp
xor
cld
inc
lock
and
rcr
outs
mov
sbb
push
test
mov
scas
add
or
add
pop
dec
pop
mov
or
into
icebp
xor
div
retf
push
sub
xchg
adc
jae
push
dec
add
rol
fcomp
mov
xchg
fwait
nop/reserved
sbb
neg
leave
cld
imul
mov
es
das
hlt
push
mov
add
sti
adc
adc
or
mov
imul
and
xor
sbb
fidivr
shr
(bad)
sbb
and
cmp
push
adc
sti
mov
mov
adc
push
mov
or
popf
or
(bad)
mov
jbe
sub
mov
sub
pop
test
inc
add
adc
mov
jle
dec
push
dec
jne
dec
pop
mov
out
(bad)
out
stc
dec
test
add
mov
aad
add
fcomp
mov
mov
xor
adc
shr
push
fld
and
icebp
rol
cmp
lahf
pop
sbb
and
and
shl
js
xchg
out
cmps
mov
shr
fsubr
or
rcl
push
xlat
adc
call
push
jmp
sbb
loopne
or
in
adc
dec
sbb
je
push
in
mov
mov
fcomp
(bad)
cmp
test
aam
add
push
fcom
lock
lock
push
call
push
mov
push
ror
xchg
push
jo
in
cs
in
mov
in
sbb
mov
loopne
and
add
in
in
sub
gs
mov
push
pop
mov
out
push
xchg
bound
and
mov
inc
ins
(bad)
adc
cwde
inc
das
fmul
fadd
mov
push
lock
jno
jae
sti
cmp
or
shl
loope
or
add
cwde
loop
add
sub
or
hlt
mov
cld
add
js
clc
dec
adc
jmp
adc
(bad)
in
sbb
mov
pop
cmp
push
in
mov
add
mov
adc
cld
mov
push
int3
lock
sbb
add
push
movs
in
add
lar
lds
sbb
jge
sti
fdivr
bound
inc
add
mov
test
out
or
inc
push
mov
push
sub
sbb
sbb
mov
sbb
fsubr
les
dec
jge
pop
cld
mov
and
call
test
xor
adc
or
test
add
test
push
mov
push
mov
xor
and
add
dec
and
push
ins
jne
(bad)
jmp
clc
test
mov
les
jl
out
xchg
stos
push
jecxz
test
xor
push
push
clc
cmp
pop
or
push
push
adc
and
(bad)
(bad)
add
jmp
(bad)
dec
push
sbb
sbb
pop
dec
popa
fs
cmp
pop
mov
sbb
adc
pop
arpl
repnz
in
std
mov
icebp
cmp
add
push
inc
and
(bad)
cmp
add
mov
cmp
mov
std
(bad)
cmp
sbb
repz
sub
ret
inc
ret
pop
iret
(bad)
stc
call
or
cmp
je
push
nop
xor
mov
sbb
mov
adc
xchg
(bad)
cwde
mov
dec
pop
mov
jmp
hlt
mov
adc
je
dec
xchg
push
ror
(bad)
rcl
adc
adc
icebp
lock
ss
mov
movs
sbb
cmp
rcl
loopne
cmp
xchg
ss
call
ror
inc
sar
lahf
dec
nop
js
das
dec
xchg
out
shl
mov
nop
add
arpl
aas
push
stos
sub
ds
sbb
cld
push
xchg
mov
cs
mov
sbb
out
dec
cmp
int3
add
popa
outs
test
push
add
inc
xchg
mov
pusha
pop
in
xor
pop
clc
inc
fdiv
(bad)
fld
mov
ret
inc
and
xor
mov
xor
aam
xchg
loopne
add
pop
daa
cld
mov
cli
pop
cmps
shr
dec
adc
mov
jno
std
aad
dec
and
mov
test
pop
(bad)
mov
rcr
push
(bad)
nop
dec
fs
mov
nop
adc
inc
sbb
pop
adc
popf
add
or
and
lock
mov
pop
(bad)
out
sub
push
pop
sub
dec
xor
adc
daa
fild
push
xchg
(bad)
add
or
mov
loop
aas
daa
clc
stos
out
and
loope
repz
arpl
push
mov
nop
clc
bound
rol
mov
repz
popa
rol
mov
rol
mov
push
in
dec
add
and
daa
sbb
mov
pop
shl
cmp
call
push
dec
in
imul
mov
lock
loop
je
cmp
push
mov
pop
inc
pop
dec
ret
or
test
adc
sbb
loopne
jmp
xchg
sahf
jno
inc
and
adc
xchg
cmp
dec
je
inc
int
inc
or
add
mov
or
lds
mov
xchg
sub
cld
lahf
mov
imul
mov
and
icebp
inc
cld
mov
pop
fnstcw
jecxz
add
lea
pop
jecxz
jp
or
ja
dec
xor
ret
jne
push
loopne
and
js
mov
mov
adc
add
jne
mov
div
add
add
es
sbb
ror
jns
imul
cmp
push
sbb
add
sar
and
and
and
and
mov
mov
mov
or
and
pop
pop
jbe
pusha
bound
out
or
jnp
and
outs
push
ficomp
xchg
test
(bad)
mul
push
and
scas
add
sub
add
rol
mov
test
push
pop
pop
add
idiv
xor
aas
dec
scas
push
and
xchg
not
out
push
cdq
lahf
add
pop
js
or
mov
jb
adc
inc
or
adc
jl
push
jne
sbb
or
mov
push
movs
jo
inc
push
adc
mov
fadd
test
sub
push
xchg
or
mov
sti
dec
add
test
cmp
cmp
push
pop
or
sbb
inc
xor
push
inc
mov
ret
add
cmp
fmul
das
(bad)
push
add
mov
pop
xchg
lea
sbb
cmp
mov
push
js
inc
dec
jno
ja
mov
nop
xchg
inc
jne
icebp
imul
lahf
or
ins
sub
cld
add
sub
push
in
rcl
scas
jno
ret
retf
popa
or
clc
rcl
dec
add
add
cmp
cmp
push
rcl
and
push
pusha
add
nop
aas
nop
dec
pop
xor
sbb
cmp
shr
xchg
sbb
add
out
movs
xor
fimul
push
or
push
imul
(bad)
(bad)
push
cwde
ja
int3
adc
add
gs
pop
adc
add
push
and
inc
popa
jns
push
pop
dec
std
xchg
cdq
and
dec
imul
jge
and
push
arpl
repz
in
scas
or
popa
arpl
or
cld
pop
jb
jo
adc
data16
je
xor
adc
sub
sbb
es
das
adc
mov
cmp
push
add
adc
pop
xchg
clc
mov
lock
es
sbb
inc
mov
add
push
cmp
xchg
push
shl
(bad)
idiv
rcr
push
call
imul
xchg
(bad)
aaa
ss
test
daa
push
fdiv
ds
jnp
int3
ss
cmp
lods
push
add
push
adc
pop
pxor
add
add
push
dec
fld
(bad)
outs
rdmsr
ret
ucomiss
jo
push
pop
ud2
add
and
sbb
sub
mov
clc
mov
push
jns
xor
es
sub
call
inc
and
pop
push
ins
fadd
daa
pop
inc
outs
jo
call
sbb
add
sbb
loope
call
mov
and
jb
inc
and
popa
jae
cmps
add
popf
push
adc
ret
enter
ss
outs
mov
cmp
pop
es
jo
xchg
jl
scas
dec
gs
addr16
mov
lods
add
lock
inc
jb
cmp
gs
adc
xor
fwait
inc
jmp
push
mov
pop
aad
mov
inc
inc
(bad)
or
push
jno
dec
dec
popf
cwde
into
in
adc
push
fwait
pop
clc
das
cs
bswap
push
ret
push
lfs
inc
sbb
jge
dec
(bad)
push
push
mov
test
pmulhuw
or
push
jle
psrlw
adc
imul
rcl
jns
or
rcr
or
sbb
adc
adc
mov
pop
sbb
bound
sub
xchg
rcl
sbb
stos
leave
xor
pop
rcr
sbb
shl
stos
sbb
sub
in
popf
cwde
push
xor
mov
inc
cmps
mov
push
les
xor
daa
sbb
adc
cmp
call
add
dec
mov
push
xor
inc
push
inc
cwde
mov
imul
outs
adc
or
or
jb
and
(bad)
rcr
dec
dec
inc
fimul
or
aas
je
repnz
dec
(bad)
xor
mov
adc
js
pop
loopne
jl
jo
mov
cmp
inc
sbb
ret
imul
push
adc
pop
jae
mov
cmps
push
call
dec
cmp
inc
adc
out
pop
lods
and
add
lods
mov
mov
mov
jmp
loopne
mov
add
xor
xchg
fdivr
add
sbb
inc
push
and
xor
xor
lahf
dec
adc
add
lds
jg
lods
ins
nop
ret
shl
or
jne
je
sub
pop
pop
jns
pop
scas
or
or
push
(bad)
cmp
and
out
jae
repnz
test
add
jae
in
arpl
adc
call
pop
in
push
adc
movs
cmp
inc
jmp
test
shl
mov
pop
xchg
sbb
add
mov
inc
rcl
mov
add
sub
stos
jecxz
enter
mov
adc
in
pop
ja
outs
fs
test
inc
pop
popa
dec
pop
xlat
out
pop
neg
add
mov
push
adc
xor
push
or
sbb
cmp
ins
or
add
pop
daa
and
fwait
iret
syscall
sbb
jo
daa
daa
daa
mov
sbb
int3
cmp
jmp
mov
imul
imul
les
aam
imul
push
imul
ss
mov
imul
call
inc
test
cmp
jge
or
inc
mov
jge
test
sbb
cmp
dec
ins
outs
jge
adc
cwde
fild
pop
cmp
jb
or
cmp
fdivr
mov
cmps
fisttp
mov
pop
cmp
adc
mov
dec
xchg
add
sub
push
stos
jne
js
jns
dec
push
stos
or
push
push
inc
popf
je
xsaves
cdq
pop
inc
sbb
jecxz
cmps
sbb
inc
push
jl
jne
lods
jb
int
push
pop
shr
fistp
or
jne
or
jne
or
mov
adc
xor
or
jmp
mov
and
and
xor
and
add
and
mov
pop
pop
or
mov
call
scas
cmc
cmp
dec
add
push
(bad)
aam
and
sbb
sbb
pop
xchg
mov
popa
pusha
arpl
push
fldcw
mov
retf
xor
pop
sub
aam
xchg
mov
jnp
mov
sbb
es
retf
pop
sti
inc
or
popa
inc
fdiv
dec
push
adc
cmp
push
add
push
mov
cmps
test
rol
pop
call
mov
mov
mov
call
push
xor
add
sbb
fdivr
inc
shl
call
mov
nop
inc
push
dec
ret
test
pop
mov
adc
(bad)
adc
cs
loop
or
sbb
test
call
push
dec
cmp
test
and
(bad)
add
add
cmp
adc
or
iret
mov
mov
xchg
inc
call
test
and
sbb
shr
sbb
jg
add
imul
fwait
push
or
inc
or
movs
mov
inc
ficomp
je
inc
fdivr
sub
sbb
scas
or
add
rcl
xor
push
data16
int3
or
push
dec
add
sub
jmp
or
sub
pop
ins
nop
aas
xor
sbb
xchg
mov
inc
cli
adc
adc
rcl
sbb
push
sbb
add
ror
inc
rcr
pop
lock
mov
ret
push
jmp
mov
and
push
or
cld
popf
xor
pop
add
pop
or
push
push
dec
adc
xchg
stc
add
or
rol
mov
push
xor
and
aam
movzx
pop
add
inc
push
and
fwait
push
xchg
push
ja
sub
add
ja
outs
aam
pop
fcmovnb
popa
push
outs
or
lds
lock
adc
xchg
inc
gs
es
and
add
mov
add
adc
or
adc
mov
jle
mov
pop
ja
mov
mov
aas
enter
(bad)
(bad)
or
and
xor
cmp
push
cdq
jne
and
push
test
ret
push
pop
add
lea
arpl
stos
push
pop
ja
cmp
xor
aaa
pusha
jno
jp
push
push
cmc
inc
mov
adc
sar
(bad)
mov
xor
repz
or
or
push
mov
push
adc
push
adc
add
push
pusha
cmp
clc
adc
sar
mov
enter
ret
fidivr
cdq
ja
or
mov
push
add
jbe
dec
push
mov
adc
adc
mov
out
enter
sub
fadd
test
cmp
cs
out
or
or
jns
jns
push
push
push
mov
sub
push
push
fimul
adc
push
jle
push
(bad)
push
add
dec
jecxz
cmc
into
lea
jo
pop
out
or
fst
pop
mov
(bad)
pop
pop
iret
mov
pandn
addr16
sbb
mov
lea
movs
movs
lea
outs
xchg
dec
push
add
jno
call
or
push
pop
or
add
sub
mov
test
mov
inc
pop
pop
icebp
iret
mov
mov
dec
fwait
jnp
(bad)
or
sbb
(bad)
mov
and
(bad)
mov
mov
dec
shl
mov
and
cmp
mov
inc
stc
lea
adc
xchg
add
adc
int
push
pop
ror
das
or
sub
or
mov
add
jmp
pop
and
nop
and
cs
adc
or
inc
leave
mov
adc
mov
and
and
inc
leave
or
je
in
jb
adc
push
cmp
dec
addr16
sbb
ret
addr16
xchg
adc
inc
es
adc
test
test
dec
adc
fadd
xchg
(bad)
sahf
push
sub
in
sub
mov
cmps
or
iret
xchg
(bad)
rcl
push
mov
jmp
jb
ret
mov
push
sbb
mov
adc
jmp
data16
sbb
dec
push
test
adc
popa
fs
mov
pop
mov
xchg
dec
mov
add
push
jo
les
xor
daa
(bad)
nop
das
sub
fwait
adc
pop
test
and
or
or
iret
(bad)
add
adc
loop
mov
mov
add
or
and
push
pop
xchg
inc
cmps
loop
out
(bad)
sub
pop
ja
or
cmp
or
jbe
add
mov
and
mov
mov
mov
dec
add
icebp
pop
add
dec
pop
inc
inc
add
sub
mul
loop
adc
ds
add
je
bound
push
or
add
rcr
sbb
nop
xor
ds
xor
enter
cmp
add
push
inc
test
or
mov
or
or
ror
int3
cmp
pusha
or
sbb
sub
xor
cmps
fadd
adc
and
(bad)
xchg
jo
adc
add
mov
or
cs
xchg
adc
or
or
leave
in
outs
mov
adc
loopne
cld
sbb
pusha
mov
xchg
in
stc
mov
xchg
sbb
lea
cmc
mov
in
popf
mov
lods
cmc
push
lods
pop
mov
sbb
add
fisttp
jae
imul
ret
inc
stos
scas
movs
call
add
pushf
xchg
fs
xor
mov
dec
loopne
xor
adc
cli
and
jne
mov
sti
in
sbb
sub
rcr
mov
addr16
jg
mov
pop
push
add
les
pop
cmps
and
into
movs
les
cwde
sbb
mov
shr
xor
addr16
dec
pop
xchg
add
push
mov
xchg
daa
xor
add
add
dec
les
and
sub
icebp
cmc
jp
jmp
stos
and
inc
stos
sub
cmp
hlt
add
jae
sub
dec
jle
loope
inc
xor
adc
sub
sbb
loopne
xchg
or
nop
pop
call
fdivr
push
mov
rcr
add
and
xlat
neg
push
cmp
xor
mov
das
ss
mov
mov
add
neg
sbb
cmp
mov
ftst
inc
mov
shr
push
push
outs
dec
mov
push
add
hlt
cmovo
sub
push
push
xchg
mov
push
nop
or
nop
scas
ret
inc
add
push
xchg
add
jmp
xor
sbb
mov
push
fcomp
jmp
js
jb
mov
rcr
lds
aam
dec
push
jmp
mov
mov
cmp
xor
or
(bad)
cld
lock
and
(bad)
fcomip
jo
pop
loopne
xor
mov
sbb
int
add
push
mov
ins
mov
xchg
add
or
push
push
rcr
sub
call
gs
idiv
jg
xor
fwait
mov
adc
enter
call
mov
inc
mov
rcl
and
mov
call
into
movs
cmp
mov
(bad)
jne
mov
lock
add
inc
sbb
(bad)
(bad)
loopne
sahf
cmps
push
push
clc
or
or
popa
pop
sahf
mov
adc
jnp
sbb
test
inc
push
sub
pop
call
dec
jmp
lea
fidiv
pop
fcomp
and
pop
call
pop
cs
fcom
fsub
pop
scas
out
ret
out
rcr
scas
das
ror
add
inc
dec
js
je
into
and
pop
mov
mov
mov
in
mov
jnp
jmp
mov
add
push
push
jnp
mov
enter
cs
mov
mov
hlt
xor
jmp
xchg
add
push
or
adc
inc
sbb
xchg
mov
push
add
sub
sbb
mov
dec
(bad)
push
cs
cmp
sub
or
push
jg
jae
aas
push
hlt
jl
adc
jg
sub
sbb
inc
sbb
lods
mov
les
int3
enter
mov
dec
sub
(bad)
mov
xlat
sbb
ret
(bad)
pop
xlat
call
cdq
dec
test
add
into
mov
add
js
sub
lea
mov
(bad)
aas
push
(bad)
div
dec
cmp
push
sub
rcr
add
adc
adc
in
lods
stc
sub
sbb
mov
lea
lea
jmp
sub
ins
mov
push
mov
cmp
adc
fcom
and
mov
popa
ret
mov
add
lea
(bad)
and
and
inc
sub
je
in
cwde
and
xor
addr16
or
lock
jge
push
add
or
or
(bad)
xor
jle
test
jbe
and
test
sar
pop
or
sbb
pop
push
in
ins
adc
loopne
jae
xor
out
mov
xlat
std
aam
inc
retf
push
jecxz
ss
xchg
jns
clc
clc
or
mov
jmp
ret
mov
iret
pop
mov
mov
or
retf
cmp
retf
jae
(bad)
or
ret
xchg
bswap
or
push
adc
mov
cmp
or
mov
and
jle
pop
mov
inc
jae
xchg
adc
pushf
inc
sbb
xlat
in
jne
xor
or
mov
aam
add
fiadd
pop
push
dec
loop
repnz
fnstsw
sbb
or
leave
sbb
dec
adc
cs
in
out
mov
scas
mov
in
movs
(bad)
sbb
cmps
cmp
lea
push
mov
push
mov
and
push
scas
in
loope
mov
xchg
out
out
and
adc
movs
inc
pop
test
inc
push
add
rol
add
out
pushf
sub
leave
push
inc
or
repz
or
or
add
bound
out
mov
je
push
mov
push
pop
add
mov
xchg
adc
sub
lods
ret
and
adc
jmp
pop
dec
pusha
mov
cmp
xchg
mov
pop
or
mov
shl
cdq
or
or
add
fwait
mov
or
sub
jmp
cmp
pop
jl
sbb
test
sbb
movs
and
sbb
ja
and
xchg
cmp
sub
test
mov
cmp
cdq
idiv
popa
sbb
mov
loopne
sub
lock
adc
or
in
(bad)
arpl
(bad)
movs
push
push
das
and
pop
add
mov
ror
dec
or
ret
into
loope
add
je
adc
and
adc
lea
in
lock
jbe
push
jo
les
and
nop
dec
xchg
jo
outs
add
pop
push
daa
mov
ror
xor
cmps
sbb
enter
and
pusha
jne
cdq
movs
push
enter
add
test
push
movs
xor
or
or
fdiv
sbb
add
or
push
adc
shl
add
add
and
retf
adc
jp
(bad)
jmp
add
or
ja
sbb
je
push
add
inc
arpl
add
mov
jmp
sub
nop
imul
ror
adc
push
jo
je
pusha
std
popa
ins
push
ins
popa
arpl
fadd
mov
jno
lods
inc
cs
jo
dec
ins
jo
imul
and
cmp
or
dec
mov
call
mov
sbb
jbe
outs
fild
inc
iret
add
push
add
not
adc
into
xchg
dec
mov
and
xor
aaa
xor
inc
and
xchg
xchg
jge
inc
cmps
pop
(bad)
cmovno
dec
jne
clc
add
push
or
pop
inc
imul
pop
adc
dec
shr
pop
add
add
or
push
add
and
std
outs
gs
sub
jb
test
xor
dec
das
ss
pushf
jae
push
mov
push
mov
(bad)
mov
in
cmp
cmp
das
cli
push
sbb
nop
and
mov
dec
dec
inc
pushf
jmp
inc
jle
shl
sub
add
sub
pop
fimul
and
pop
or
not
mov
jns
xchg
mov
dec
mov
sub
scas
ror
dec
adc
jbe
data16
outs
ja
shl
mov
or
outs
into
xor
xor
adc
fmul
arpl
inc
sbb
(bad)
nop
adc
loopne
enter
xchg
movzx
test
sbb
shr
xchg
adc
push
add
scas
add
hlt
xor
test
je
push
rol
jmp
ret
inc
push
fadd
ret
push
cmp
push
mov
xchg
adc
push
or
and
or
mov
mov
or
mov
sub
mov
or
shr
add
daa
inc
(bad)
retf
(bad)
mov
add
or
add
jne
dec
jmp
xor
mov
in
dec
push
es
dec
jne
cmp
jle
cdq
cld
out
sbb
jb
aaa
mov
test
jne
fdivr
dec
fld
add
jmp
pop
inc
sti
mov
cmovp
or
into
dec
das
adc
and
push
push
enter
dec
lods
mov
shr
cmp
clc
mov
add
(bad)
mov
sub
push
daa
mov
sar
scas
rcl
js
push
push
add
add
in
fnstsw
sbb
cmp
cmp
jl
or
push
ret
clc
push
dec
cmp
jge
imul
daa
and
add
sti
sbb
enter
retf
mov
or
mov
jp
and
mov
adc
mov
add
push
cli
push
mov
adc
xchg
aam
shl
cmp
lahf
or
push
mov
xor
scas
(bad)
call
lock
dec
or
and
add
cld
int3
xchg
cmc
sub
mov
cmp
jne
and
mov
or
push
inc
cmp
inc
xchg
cmp
xor
add
sbb
inc
lock
push
jmp
inc
test
adc
ror
mov
sti
xchg
in
xor
xor
mov
js
pop
xlat
jle
mov
mov
movs
ja
call
or
(bad)
pop
je
inc
inc
add
mov
rcr
cmp
and
add
add
sbb
ror
sti
sub
not
and
jp
jmp
sub
jb
stos
add
adc
inc
sbb
(bad)
jo
in
in
push
inc
out
adc
aaa
inc
pop
mov
test
cld
lods
pop
cli
fidiv
pop
jno
jge
test
sbb
hlt
inc
sar
inc
jb
das
retf
push
pop
(bad)
ror
adc
in
xchg
jp
jmp
mov
xor
mov
adc
push
add
ret
clc
mov
imul
pop
add
adc
fadd
loop
sbb
and
clc
clc
or
mov
add
adc
dec
clc
dec
jl
pop
add
and
mov
dec
xlat
mov
sub
mov
or
inc
ss
add
and
fidivr
adc
push
add
clc
loope
push
add
(bad)
out
rcr
pop
movs
fld
js
ja
push
mov
jne
add
popa
cmp
jne
jmp
loopne
div
aas
jbe
cmp
loope
push
and
dec
fld
cmp
jp
dec
or
mov
inc
push
jo
loope
cmp
cmc
mov
xor
ja
push
das
sbb
xor
dec
add
fadd
cs
sbb
push
jnp
fwait
popa
outs
ret
add
dec
jg
push
addr16
test
jl
inc
(bad)
jmp
mov
sub
ror
lods
ret
jb
or
cmp
mov
cmc
retf
mov
sub
mov
push
jl
inc
mov
pop
in
pop
push
jmp
add
cmp
fist
shl
sbb
mov
icebp
mov
xor
inc
(bad)
(bad)
pop
mov
jne
dec
and
jns
xor
mov
sbb
cmc
cmp
and
add
aas
push
rol
add
adc
je
adc
(bad)
fbld
xchg
xor
jmp
retf
adc
fcom
lea
jmp
adc
add
jae
xchg
fld
sub
je
xor
stos
push
loopne
lea
in
jo
mov
add
or
mov
adc
repz
pop
scas
add
add
pop
xchg
cmp
push
sbb
add
and
jg
xor
mov
lods
xlat
add
(bad)
sbb
adc
inc
pop
aad
mov
sar
push
add
aad
inc
mov
das
mov
mov
pop
jnp
jge
jge
sbb
mov
xor
and
ds
add
mov
cli
jl
sub
lods
lods
or
(bad)
cwde
loope
adc
jmp
mul
and
jbe
xchg
mov
call
aad
sub
(bad)
xor
lea
ja
inc
loopne
sahf
sub
xor
add
bnd
xor
sbb
xor
adc
sub
mov
or
xor
test
rcr
jge
mov
dec
add
shr
sub
cmp
jge
sub
mov
neg
push
sub
or
retf
push
dec
test
dec
mov
xchg
jecxz
aas
mov
fdiv
rol
dec
stos
or
mov
lock
inc
push
aam
jno
dec
repz
jmp
dec
scas
cmp
and
js
fadd
lods
js
add
int3
pop
int3
adc
jo
lea
sbb
mov
cmovs
lock
out
xchg
clc
lea
cli
stc
es
mov
dec
pop
in
inc
aas
test
jle
idiv
mov
loopne
shl
mov
mov
push
add
nop
or
adc
inc
sar
cli
nop
je
sti
fbstp
or
jge
cmp
jae
and
dec
pop
lds
add
pop
jmp
cmp
fs
add
mov
mov
add
add
stos
inc
in
popf
fisttp
cmp
pop
adc
aas
push
jle
cmp
jle
cmp
inc
jl
cmp
pop
clc
aaa
cmp
out
jne
mov
add
and
add
or
mov
or
inc
in
sbb
jno
push
and
ror
jne
inc
lods
psadbw
por
and
jmp
push
pop
jmp
inc
dec
jne
movs
mov
jbe
cmp
push
jb
xor
cdq
(bad)
lea
jle
test
enter
rol
call
test
jge
and
outs
popf
dec
shr
outs
inc
daa
push
push
loopne
rcl
jmp
xlat
js
cmp
dec
cmp
loope
mov
retf
jle
add
adc
(bad)
inc
xlat
mov
push
or
loop
jo
rol
cmp
mov
in
ds
mov
add
std
adc
sbb
mov
or
ret
sar
pop
xor
sbb
lea
pop
mov
xlat
out
dec
add
or
cwde
div
aas
pop
fs
push
or
and
(bad)
pop
sub
xor
(bad)
adc
xor
mov
or
(bad)
adc
call
add
sub
push
pop
cmps
fmul
xor
inc
jl
mov
mov
ror
jne
mov
in
enter
lods
fmul
add
add
aas
add
test
pop
inc
aas
ins
adc
jbe
cmp
push
mov
inc
movs
pop
mov
lea
ins
mov
push
fcom
nop
dec
dec
add
test
pop
fisttp
repnz
out
ds
mov
inc
ja
mov
xchg
add
xor
std
call
outs
sbb
test
retf
xor
clc
mov
xchg
stos
add
sub
and
test
cmps
jge
or
fnsave
add
call
fsubr
sbb
idiv
jge
xchg
xor
jmp
dec
fistp
or
dec
inc
dec
jne
adc
mov
jmp
pop
dec
xor
(bad)
jle
mov
cmp
je
pop
xor
cli
jne
xor
or
cwde
or
and
test
xchg
in
hlt
sbb
push
mov
fwait
pop
lgs
mov
aad
(bad)
ins
loopne
movs
lods
mov
cld
sub
mov
jno
inc
neg
cmp
or
and
popa
fdivr
jno
pushf
fsubr
out
jge
cdq
adc
adc
ret
cld
in
(bad)
cwde
jo
xchg
add
popf
xchg
mov
scas
sbb
adc
mov
xchg
(bad)
xchg
cmp
stos
xchg
push
dec
sub
adc
cwde
pusha
sbb
sar
add
adc
ds
sete
clc
sub
or
test
not
test
inc
dec
inc
push
mov
cmp
das
je
mov
pop
mov
inc
sahf
mov
sbb
mov
or
(bad)
pop
add
cmp
inc
ror
mov
mov
sti
xor
xchg
int3
ins
and
pop
adc
aam
xor
or
xchg
cmp
in
add
pop
cmp
in
gs
adc
dec
in
outs
fcomp
(bad)
mov
loope
push
sub
shl
mov
sub
sub
xor
push
sub
add
sbb
ret
(bad)
jp
shr
mov
mov
inc
jno
pop
mov
mov
push
push
pop
loopne
lock
enter
cwde
xchg
mov
pop
sbb
ja
sub
inc
mov
and
add
shl
shl
pop
sbb
mov
fdivr
aaa
jle
or
ffreep
out
fstp
sub
or
popf
push
xchg
inc
or
mov
adc
sub
mov
dec
fcmovnb
sbb
in
adc
lea
or
iret
imul
std
cwd
add
sbb
jge
pop
shl
jmp
pusha
je
adc
icebp
inc
(bad)
stos
mov
adc
je
mov
jbe
push
jmp
sbb
mov
cmp
inc
sub
int3
stos
fs
push
and
fcom
dec
dec
fs
cdq
(bad)
pop
push
ss
xor
enter
and
jno
inc
mov
pushf
fs
nop
fdiv
push
add
sahf
or
and
add
xchg
inc
scas
int3
mov
or
or
jge
cmp
inc
mov
or
xchg
and
push
test
int3
add
(bad)
jg
aas
and
ret
js
push
stc
neg
pop
jg
add
loopne
loopne
imul
lea
sbb
call
imul
push
movs
adc
lock
fsubr
cmp
pop
in
fld
loop
sub
or
dec
cmp
shl
cmps
fdiv
and
seta
test
and
mov
test
mov
mov
fidiv
jo
xchg
pop
adc
sub
(bad)
sbb
fadd
popa
and
lock
cmps
(bad)
push
push
arpl
or
enter
xchg
fdiv
dec
pushf
mov
push
xchg
data16
or
and
aad
xchg
pop
in
fnsave
ret
sbb
sahf
push
pushf
inc
add
test
pop
popf
cmc
jnp
popf
dec
retf
pop
pop
add
cmc
ss
das
mov
test
add
aam
mov
pop
mov
pop
out
adc
(bad)
bound
push
add
mov
push
and
pop
ret
pop
mov
push
inc
dec
pop
loopne
push
cs
cmc
xchg
loop
lahf
ins
pop
dec
push
mov
sub
push
lahf
pop
and
loop
lahf
push
sub
push
xchg
sub
or
xchg
add
lahf
sbb
lahf
scas
inc
pop
movs
loopne
mov
push
rcr
push
and
or
push
inc
mov
mov
rcl
pop
out
pop
pop
test
pop
das
add
mov
mov
aad
push
adc
es
(bad)
(bad)
cmp
into
enter
cdq
or
or
push
pop
test
jo
cmp
cmps
arpl
cmp
add
sbb
jo
pusha
addr16
sbb
inc
or
pop
xchg
nop
retf
inc
jno
leave
sahf
nop
out
push
arpl
xchg
rcl
xchg
fwait
mov
push
dec
sbb
sbb
ror
jp
nop
xchg
xchg
sbb
popa
sbb
push
std
scas
or
mov
out
pop
popa
shl
lds
dec
fcmovnb
icebp
lds
pop
loop
adc
mov
aaa
add
aas
cmp
or
add
sub
sbb
les
add
mov
jmp
push
lods
inc
call
add
push
pop
addr16
fadd
inc
xlat
ficom
mov
xchg
mov
adc
jl
push
add
cdq
pop
mov
dec
sbb
pop
cdq
nop
push
jb
pop
jmp
pop
jmp
or
dec
sbb
mov
test
rcr
sub
and
pop
add
jno
enter
lods
dec
dec
adc
add
dec
je
add
jmp
movzx
ret
rol
mov
test
shr
jg
xor
shr
cmp
jmp
xchg
pop
pop
sar
sbb
push
in
adc
pop
jb
add
dec
jle
fistp
aad
push
ss
call
or
out
push
mov
and
test
sub
in
mov
sahf
pusha
pushf
(bad)
loopne
mov
aaa
push
xchg
pop
lar
ficomp
(bad)
push
sti
call
test
inc
ja
das
add
push
fidiv
pushf
pushf
fld
inc
cld
mov
out
enter
or
movs
call
fs
cmps
cdq
inc
sub
test
mov
(bad)
es
add
adc
ss
push
xchg
cwde
loope
xor
push
cmps
in
les
inc
mov
sbb
cmp
shr
add
add
nop
lea
cmp
inc
mov
inc
scas
xchg
mov
loop
jno
and
add
inc
inc
push
push
mov
(bad)
sti
(bad)
push
and
or
jb
push
inc
inc
inc
inc
or
aas
sti
cmp
inc
dec
dec
push
dec
dec
push
or
inc
inc
dec
pop
sub
sti
jle
outs
es
push
push
push
push
pop
inc
push
add
or
inc
mov
inc
dec
inc
push
push
dec
push
push
pop
and
push
jne
inc
push
push
pop
adc
fmul
cdq
inc
inc
test
add
adc
scas
sar
imul
push
push
pushf
mov
aaa
push
add
sbb
or
popa
out
repnz
ins
add
je
sub
xchg
jbe
gs
xchg
and
jnp
push
addr16
outs
mov
add
pop
pop
inc
outs
test
ficom
shr
add
add
push
pop
inc
(bad)
gs
das
push
mov
mov
pop
aas
mov
(bad)
jns
jae
push
pusha
and
in
jb
fild
add
fidiv
outs
push
arpl
inc
fnstsw
or
fbld
dec
xchg
ins
xor
inc
mov
fidiv
imul
inc
bound
js
loopne
or
push
inc
push
xor
adc
push
inc
xor
jnp
jae
aas
or
push
ret
xchg
mov
adc
xchg
dec
jae
jg
fnstsw
idiv
jle
out
sbb
inc
push
ds
inc
pop
dec
outs
fucomi
mov
inc
mov
loopne
jb
jb
push
jae
mov
outs
stos
gs
in
or
pop
push
push
xor
sbb
xchg
or
inc
jg
inc
pusha
dec
jae
mov
imul
inc
das
cmps
ds
ins
cdq
or
or
adc
(bad)
or
cmp
ja
adc
(bad)
imul
fld
push
mov
mov
push
or
mov
neg
lds
ins
fwait
inc
or
xchg
imul
cmp
lahf
outs
iret
push
push
jl
add
(bad)
test
imul
fsubr
push
cmp
outs
sti
scas
fdivr
jmp
inc
out
outs
arpl
sbb
ret
fs
ins
cmps
mov
or
cmp
lds
xor
iret
dec
sahf
push
sbb
shl
je
ss
retf
sub
pop
cld
out
shl
push
inc
inc
push
arpl
outs
mov
outs
jb
inc
adc
jmp
test
or
popa
(bad)
(bad)
adc
cld
inc
out
fwait
sub
ins
popa
jae
das
sbb
popa
imul
clc
je
gs
jnp
loopne
wbinvd
dec
scas
call
or
or
mov
inc
mov
std
add
mov
pop
xchg
pop
xchg
sbb
out
push
loop
jg
push
push
xor
mov
dec
xchg
push
sub
fild
add
sub
pop
cmp
push
pop
sbb
add
pusha
jle
dec
call
add
and
in
jb
mov
call
sahf
out
pop
imul
dec
push
pop
jns
out
(bad)
cdq
mov
add
cmp
ins
adc
pop
enter
outs
mov
fdivr
push
mov
imul
repz
mov
mov
daa
in
and
xlat
ins
lods
push
js
dec
loope
test
leave
xor
loope
dec
cmp
leave
inc
xchg
dec
jno
inc
push
ror
sti
movs
imul
packsswb
lds
push
jns
loope
stos
or
or
add
test
mov
cld
imul
and
mov
pop
push
push
xchg
sbb
push
jge
or
and
ja
xor
inc
jo
add
push
add
outs
dec
adc
push
xchg
pop
fcom
push
jb
(bad)
mov
dec
push
popa
addr16
xor
aaa
add
xor
movs
dec
fld
ret
movs
push
mov
inc
pop
cmps
rcl
fild
nop
and
dec
inc
or
or
dec
ret
data16
inc
loopne
iret
mov
push
lea
test
sbb
aaa
pop
aas
icebp
leave
imul
ins
inc
xor
scas
test
adc
mov
pop
adc
mov
add
push
jg
int
in
mov
into
bswap
mov
in
in
mov
mov
in
in
mov
mov
mov
in
in
mov
in
mov
in
in
cmps
cmps
test
in
in
stos
stos
lods
in
in
lods
scas
scas
nop
in
in
xchg
xchg
xchg
xchg
in
in
xchg
xchg
xchg
cwde
in
in
cdq
call
popf
sahf
lahf
and
in
add
adc
je
outs
fs
outs
outs
dec
gs
jle
add
fs
outs
xchg
xchg
push
adc
rcl
push
daa
out
mov
mov
jnp
dec
xchg
fadd
sub
cld
adc
js
mov
push
adc
inc
xchg
jbe
jg
adc
adc
outs
movs
jo
fincstp
inc
mov
fiadd
add
sbb
es
mov
or
imul
pop
pop
jmp
push
pop
mov
mov
xchg
bound
cmp
mov
pop
loope
sub
cmp
mov
sbb
add
pop
(bad)
sub
and
(bad)
jg
jg
neg
xor
jbe
pop
imul
mov
push
movs
and
loope
inc
adc
(bad)
sub
jb
jmp
or
mov
imul
or
retf
mov
and
and
adc
inc
cs
push
jne
or
dec
ret
cmp
jbe
adc
and
adc
or
add
push
xchg
inc
std
jg
int3
cli
mov
mov
test
je
mov
lea
add
xlat
les
mov
loop
or
sahf
adc
mov
inc
jp
push
pop
(bad)
mov
scas
fcom
das
jns
das
test
cdq
jno
pop
clc
xor
pop
jb
jb
neg
comiss
es
push
sub
pop
add
sti
mov
ss
(bad)
cmp
loop
sbb
sub
adc
push
jne
dec
or
bound
das
call
sub
pop
and
loop
add
cmp
jns
adc
adc
mov
inc
add
pop
ja
sub
jno
xor
jecxz
test
sub
push
dec
mov
daa
add
adc
adc
iret
or
lea
add
add
rol
test
popf
pusha
push
lods
mov
inc
or
mov
pop
cmps
repz
test
mov
jmp
jl
adc
adc
adc
add
jno
inc
cmp
push
les
add
push
cli
add
inc
and
je
fstp
fwait
ret
fld
fstp
add
mov
fist
das
sub
xor
outs
and
jmp
arpl
pushf
sti
mov
lea
popa
sar
add
dec
xor
in
(bad)
ror
dec
xchg
(bad)
jmp
adc
mov
sbb
push
(bad)
push
mov
xor
jae
adc
lea
clc
shr
in
push
sbb
jecxz
pop
pop
mov
ss
nop
add
add
xchg
jecxz
xor
add
imul
push
pop
mov
push
mov
(bad)
sti
xor
test
push
mov
mov
adc
xor
inc
pavgw
ficom
hlt
repz
rcl
mov
shl
or
sbb
and
pop
jo
fmul
xchg
pusha
or
imul
into
shl
mov
test
mov
sti
adc
test
or
adc
sbb
jo
mov
adc
in
mov
adc
jnp
mov
inc
mov
push
adc
loop
rcl
pushf
test
mov
ror
imul
jne
pop
cmps
inc
cmp
jl
inc
clc
sti
cld
sti
lea
adc
sbb
and
sti
push
test
repnz
loopne
aaa
add
js
jl
or
lock
int3
mov
sub
mov
xor
enter
adc
jg
sub
mov
dec
test
fimul
jne
mov
add
cmp
adc
add
and
fwait
in
lock
sub
cmp
mov
mov
inc
mov
add
lods
pop
or
push
mov
mov
and
mov
shl
jmp
inc
cmp
dec
dec
jmp
adc
or
inc
push
mov
shl
pop
fisub
outs
mov
into
ss
and
cmp
jl
rcr
imul
or
je
mov
add
enter
ja
(bad)
loopne
ds
cmp
jns
adc
and
das
clc
fwait
das
xchg
and
scas
ror
ja
dec
and
mov
inc
add
add
popa
xlat
mov
xchg
adc
adc
mov
retf
and
loopne
jmp
push
pop
push
jmp
clc
ret
or
jno
cwde
fdivr
adc
int3
and
ror
pusha
por
adc
mov
mov
xor
lea
sbb
aas
test
sbb
(bad)
lods
pop
in
pusha
pop
call
sbb
(bad)
(bad)
jmp
cmp
jl
mov
xchg
loopne
mov
(bad)
cmp
pop
adc
xor
test
mov
jg
loopne
mov
sub
mov
adc
xlat
jmp
test
add
fst
mov
pop
shr
ror
fwait
mov
test
inc
call
movs
mov
sub
jle
scas
rol
adc
lea
mov
imul
push
push
and
cmps
enter
xchg
nop
and
jmp
mov
adc
(bad)
rol
les
pusha
pushf
aad
fld
adc
sbb
mov
adc
adc
fdivr
and
add
mov
jns
dec
outs
push
ror
and
add
pop
in
mov
push
gs
pop
popf
and
dec
sbb
jmp
mov
jmp
xor
call
sahf
shl
mov
pop
push
adc
lock
add
jmp
daa
and
dec
iret
xchg
mov
loope
cmp
add
inc
sbb
mov
hlt
call
(bad)
cmp
sub
lock
cmp
jne
add
into
add
pop
cwde
test
sbb
jne
mov
mov
addr16
xchg
cmps
mov
out
arpl
adc
lods
and
inc
push
adc
jo
(bad)
sub
fsub
push
inc
cmp
sbb
adc
push
or
mov
push
push
adc
adc
push
mov
cmp
test
jne
int
adc
je
adc
ss
adc
lock
addr16
and
(bad)
ins
fcom
jae
mov
sub
fadd
add
inc
dec
inc
(bad)
das
xor
push
jnp
sti
jge
test
jl
xor
adc
xor
push
cmps
add
lahf
mov
fsub
push
scas
mov
pop
mov
pop
dec
mov
je
xor
dec
cmps
dec
retf
les
xchg
mov
ss
imul
and
fidiv
and
pop
pop
dec
adc
cmp
push
loope
jno
ja
ror
je
xchg
xchg
push
jge
pop
mov
xor
xchg
das
jmp
jl
mov
test
(bad)
push
bound
mov
imul
data16
inc
jno
in
add
sbb
cli
jge
and
jmp
int3
cvtdq2ps
mov
mov
ror
das
push
outs
pop
sbb
mov
add
test
nop
or
cmp
sbb
adc
dec
add
or
ins
push
add
push
imul
test
test
imul
inc
mov
out
and
sbb
ins
popa
pusha
imul
mov
mov
popa
js
aas
or
clc
jbe
cmps
mov
int
outs
ins
outs
and
cmp
or
sub
test
mov
addr16
push
outs
or
xor
inc
or
jae
add
dec
fs
pop
ins
pop
fs
mov
je
jns
outs
stos
ins
or
inc
je
dec
adc
add
je
jb
fs
jg
iret
in
mov
imul
inc
out
lods
or
add
sub
adc
add
dec
adc
aaa
push
test
push
mov
jnp
aaa
mov
repnz
inc
pop
add
out
xrelease
adc
sar
daa
daa
and
das
and
xchg
and
push
push
mov
jge
jb
popa
jns
sbb
test
cmp
nop
and
jae
and
sbb
(bad)
xor
xchg
xor
fwait
inc
add
ins
arpl
xlat
add
cmp
or
add
je
inc
pop
push
push
push
mov
aaa
inc
imul
add
add
es
dec
rol
fild
push
and
ins
ins
inc
mov
pop
pop
add
mov
adc
add
push
pop
aad
sbb
pop
cmp
movs
test
add
mov
inc
mov
push
mov
jl
test
push
les
lahf
inc
popa
add
das
lods
or
mov
je
cmp
inc
add
sub
inc
jnp
sbb
jb
ds
or
mov
cmp
push
movs
jo
imul
sbb
add
sar
dec
aas
cmp
add
std
mov
or
test
cmp
jge
add
jmp
lea
sub
in
mov
shl
sub
mov
std
call
sbb
dec
jne
mov
inc
dec
jne
aam
shr
inc
cmps
adc
add
xlat
pop
mov
call
add
out
xchg
(bad)
and
and
adc
lahf
lea
adc
mov
adc
jle
test
and
pop
adc
rol
pop
inc
cmp
cs
pop
mov
movs
(bad)
sub
sub
add
push
inc
mov
push
mov
push
ins
div
mov
test
jbe
dec
mov
je
mov
push
cmp
and
shr
shr
push
sub
fisubr
adc
adc
push
sub
pop
fsub
lods
adc
test
mov
jg
out
call
cmp
pop
sub
stos
xor
xor
enter
cmc
lds
fisttp
ins
loop
jmp
movzx
shl
inc
sbb
push
sub
je
fdiv
mov
outs
int3
or
and
add
mov
les
pop
adc
arpl
or
xor
pop
add
pop
add
arpl
sbb
aaa
aam
or
test
sub
stc
xchg
cs
dec
and
fmul
lea
es
mov
je
ja
(bad)
xlat
mov
sahf
fld
jbe
lahf
or
clc
jg
mov
dec
clc
jnp
dec
adc
inc
jl
imul
lock
jns
test
fisub
push
add
imul
test
in
or
aad
dec
add
aaa
jnp
pop
mov
enter
add
fs
fsubrp
inc
fstp
mov
add
sub
mov
fistp
popf
push
adc
xor
mov
add
pushf
jge
cld
mov
lock
mov
xor
ja
test
sub
cmp
ins
mov
push
mov
pushf
add
push
outs
xor
or
cmp
and
imul
inc
repnz
rsqrtps
or
(bad)
lsl
or
inc
popa
ins
ins
bound
or
xor
inc
js
jne
lods
sbb
loope
xchg
push
(bad)
mov
sub
jb
repz
mov
dec
inc
mov
ret
push
mov
movs
push
pusha
jecxz
inc
pop
pop
adc
les
jmp
inc
bnd
dec
fild
out
sbb
and
adc
push
dec
dec
and
mov
or
push
cmp
scas
xchg
xor
jo
mov
outs
xor
dec
popa
outs
sub
adc
push
cmp
stos
inc
jae
jb
add
push
add
sbb
sbb
push
loope
outs
in
mov
popf
cmp
mov
das
loop
shl
push
sbb
mov
mov
sbb
cmp
iret
inc
mov
fdiv
cmp
push
sub
inc
rol
jns
stos
or
cmp
add
shl
dec
cmp
dec
adc
fs
inc
unpckhps
cmp
test
push
punpcklwd
(bad)
leave
mul
ror
lea
iret
mov
dec
mov
or
mov
dec
mov
pop
push
bound
and
pop
pop
mov
enter
and
and
xchg
jbe
mov
ror
jle
mov
bound
into
out
cmp
or
int3
push
mov
loope
shr
dec
ja
sub
fwait
xlat
sbb
mov
xlat
sub
call
out
dec
imul
test
jl
dec
pop
ja
jo
xchg
or
arpl
pushf
cmp
ins
movs
(bad)
scas
jno
push
xchg
xor
xchg
push
sbb
lahf
and
out
adc
imul
fs
jns
mov
mov
push
cmps
push
outs
push
jae
out
push
test
outs
outs
fs
gs
call
sbb
dec
aas
dec
add
dec
pop
jmp
and
in
or
nop
inc
sub
test
lods
add
call
jne
cdq
add
add
nop
repz
sti
push
push
xchg
push
stos
push
ds
das
je
and
jbe
mov
mov
mov
enter
out
in
addr16
fsubr
xor
jo
pop
shr
sub
cmc
add
or
mov
push
call
outs
mov
push
push
inc
cmp
xchg
mov
outs
fidiv
push
je
cmp
sub
outs
sbb
fadd
mov
cmp
xchg
xchg
setle
xor
icebp
orps
xchg
sub
shl
add
or
(bad)
ds
push
pop
sbb
popf
sub
pushf
cwde
inc
add
jae
arpl
mov
dec
xchg
cdq
aas
sbb
out
xchg
or
imul
add
icebp
ins
jo
jns
dec
xor
inc
dec
popa
jae
outs
or
pop
lahf
xor
dec
pop
add
sub
mov
das
pop
mov
xchg
push
jl
xchg
push
push
mov
inc
pushf
cmp
ss
adc
add
add
in
or
push
daa
push
sub
sbb
mov
loope
add
sbb
pop
jnp
inc
jb
lds
ins
dec
arpl
push
pop
movs
ret
add
sbb
pop
add
fisttp
popf
push
add
xchg
push
inc
add
lahf
adc
lea
or
ins
mov
or
jnp
or
in
push
int3
sub
add
pop
ja
shl
sub
rol
or
loope
(bad)
les
or
xchg
mov
jns
syscall
xchg
inc
cmp
sub
loope
loope
cld
sbb
maskmovq
and
or
push
push
popa
imul
mov
jo
movs
daa
add
or
or
ret
cld
or
imul
mov
bound
sbb
push
imul
popa
(bad)
mov
push
aad
xor
xchg
cmp
push
adc
lds
retf
aas
pop
jae
inc
xor
mov
enter
test
add
mov
fdivr
xor
nop
jecxz
imul
adc
sub
mov
dec
jg
test
and
or
sbb
or
pop
or
imul
and
stos
push
out
ja
cwde
fchs
fsub
add
sub
xchg
sbb
pop
and
out
xor
push
je
xchg
push
std
in
mov
cwde
sub
in
jae
cmps
cwde
push
jb
xor
pop
int3
cwde
and
imul
imul
pop
sub
outs
pop
retf
ret
push
sub
pop
pop
dec
popf
pop
xchg
frstor
xchg
pushf
xor
js
xchg
das
in
cdq
jmp
xchg
add
fisttp
dec
mov
rol
add
pop
ret
fbld
in
or
rcr
int3
mov
loope
mov
mov
adc
sub
in
add
loopne
inc
jo
call
into
ja
sahf
push
dec
je
setno
or
scas
mov
lsl
bswap
lock
mov
test
daa
popf
add
mov
inc
push
shr
loopne
les
ss
cld
dec
add
aam
int
push
xchg
xor
daa
mov
mov
cmp
inc
add
cmovno
cmp
(bad)
push
dec
cmp
sub
mov
cmp
loope
mov
cmps
fcomp
sub
sub
pop
popa
scas
mov
mov
xor
pushf
push
jb
adc
mov
repz
js
xchg
jb
push
cmp
psubw
popf
arpl
popf
inc
mov
mov
sahf
sub
jl
jne
bound
les
dec
xor
repnz
jg
push
mov
aam
call
test
and
cmp
adc
sub
xor
inc
lahf
push
(bad)
xor
sub
and
mov
and
pop
add
cmps
pop
cmp
jmp
lods
fisttp
or
pop
push
bswap
(bad)
sub
inc
push
sbb
bound
sbb
sub
cmp
or
shl
bound
js
xor
lahf
pop
sub
loope
arpl
sbb
ror
imul
loopne
ficom
or
(bad)
mov
xchg
lahf
or
in
xchg
cld
cmovbe
cmp
popa
scas
and
sub
or
mov
(bad)
fst
xor
sbb
or
sub
pop
dec
or
cmp
mov
or
sti
and
sub
test
mov
add
mov
mov
pop
mov
and
clc
inc
daa
or
retf
retf
jge
clc
push
mov
pop
int3
mul
cli
push
or
aaa
jnp
inc
dec
gs
xor
mov
or
mov
loop
pushf
pushf
mov
jecxz
iret
repz
or
popa
(bad)
push
cmp
daa
mov
dec
outs
mov
pop
dec
jle
(bad)
dec
sahf
jge
mov
jbe
js
test
nop
add
lock
fisttp
mov
pop
sub
adc
in
mov
or
ins
sub
push
bound
jo
(bad)
adc
push
inc
add
gs
rol
sub
cs
add
adc
jnp
push
(bad)
sub
mov
and
enter
sbb
mov
push
or
pop
cmp
leave
mov
cmps
leave
nop
test
dec
add
xchg
add
or
ss
sbb
data16
scas
or
adc
inc
sub
test
inc
lahf
pop
int
inc
leave
pop
mov
add
nop
sbb
icebp
je
fs
fbld
sub
repz
dec
shl
sbb
jns
cmp
xor
ret
pop
pop
enter
bound
push
lods
dec
xchg
es
add
aam
add
test
xor
pop
mov
sub
pusha
enter
mov
xchg
leave
sbb
add
push
sub
pusha
inc
or
or
retf
bound
rcl
or
add
mov
pop
jae
inc
cs
push
arpl
xchg
ret
or
add
xchg
add
aas
shl
lods
cmps
pop
loopne
push
cmps
fiadd
enter
fsubr
jo
ja
repz
sar
pop
jle
and
cmps
dec
ror
xor
xor
dec
mov
inc
or
pusha
xchg
imul
push
sbb
in
retf
xchg
pop
pop
pop
dec
popf
bound
push
and
xor
jbe
test
test
ffreep
add
and
in
in
push
dec
fptan
sbb
sub
repz
enter
inc
in
xor
loope
test
add
imul
push
loope
shl
shl
retf
pop
pop
pop
sbb
dec
lahf
loope
test
fisttp
jmp
pop
mov
clc
adc
jmp
fbstp
loopne
add
rol
cmp
jne
stos
pop
rol
mov
pop
int
movs
adc
clc
mov
mov
dec
pop
pop
cmp
xor
inc
mov
popf
call
jmp
inc
stos
inc
pop
scas
fs
sub
fadd
das
dec
xor
mov
pushf
cmp
push
push
dec
frstor
ins
fcmovb
adc
mov
or
daa
mov
fmulp
adc
pusha
setns
push
cld
mov
xor
jle
dec
dec
outs
cmpxchg
and
daa
mov
xchg
scas
pop
push
mov
ret
enter
ror
pusha
add
js
stos
in
sub
lock
lea
fldcw
stos
mov
ror
movs
ret
imul
xor
cmps
add
jno
or
inc
and
adc
cdq
xor
loop
cdq
daa
jmp
pusha
repz
ficom
mov
cmp
mov
sub
icebp
mov
xchg
cwde
fidiv
xor
imul
sub
jbe
adc
inc
rol
fwait
xor
fimul
inc
inc
scas
loope
mov
out
fsub
addr16
or
add
adc
jbe
or
scas
cld
lahf
or
(bad)
out
and
pop
adc
imul
lods
dec
mov
and
leave
or
aaa
dec
jge
es
push
icebp
and
push
adc
les
cwde
and
push
pop
pusha
inc
xor
mov
pop
neg
push
mov
jg
mov
cs
nop
sub
dec
pop
sahf
jg
cmp
adc
dec
xlat
or
outs
mov
or
adc
push
add
dec
ret
ins
dec
call
push
adc
aaa
add
adc
movs
adc
jnp
push
push
push
push
hlt
data16
fld
rcl
sub
je
xchg
add
pop
shr
sbb
adc
and
mov
pop
mov
rsqrtps
cmp
das
adc
xchg
(bad)
clc
and
adc
or
iret
add
mov
mov
add
dec
or
push
push
(bad)
call
enter
mov
or
jge
mov
cmp
xor
ss
cmp
jge
out
mov
mov
adc
jne
push
cmp
jne
xor
adc
or
pushf
add
mov
sahf
sbb
jge
sbb
(bad)
ror
push
dec
rcr
jp
leave
nop
fadd
js
pop
mov
push
add
sbb
mov
ret
mov
test
mov
and
jmp
cmp
aam
int3
add
ret
icebp
cmp
test
je
aaa
adc
add
adc
loopne
cli
lea
adc
mov
lea
fcomip
mov
les
push
(bad)
in
mov
push
mov
shl
mov
mov
add
dec
out
in
inc
xor
xchg
stos
cld
cmp
shl
stc
mov
add
xor
mov
cwde
mov
mov
jg
xor
out
shl
(bad)
and
pop
in
sbb
lea
pop
test
cmp
sub
(bad)
dec
xchg
add
scas
and
loope
inc
add
sbb
jo
xor
shr
cmp
jae
and
add
lock
retf
adc
adc
or
pop
add
comiss
xor
add
mov
push
or
arpl
repz
add
int3
dec
push
in
enter
add
fs
scas
rol
inc
loope
(bad)
push
sahf
in
add
icebp
mov
mov
adc
ds
sbb
cmove
add
cmp
add
fwait
out
xchg
clc
lock
cmp
sub
mov
add
mov
mov
and
test
push
mov
call
in
adc
add
mov
xor
adc
inc
enter
mov
and
pushf
mov
xor
pop
jp
inc
test
dec
inc
or
mov
push
push
mov
shld
shl
xchg
sar
push
or
or
or
cmp
cmp
add
mov
pop
sbb
daa
mov
lsl
imul
(bad)
or
add
xor
int
mov
leave
or
add
lock
(bad)
mov
dec
pop
push
or
sub
or
mov
(bad)
daa
mov
xor
push
mov
mov
(bad)
or
or
or
jmp
xchg
shl
nop
mov
test
dec
xchg
adc
sbb
adc
js
jmp
out
or
xchg
nop
mov
sbb
(bad)
and
add
or
sbb
test
(bad)
clc
jl
cmps
xor
in
fldcw
sub
cld
retf
or
and
inc
push
loop
test
or
pop
pop
xchg
daa
pop
mov
js
sahf
add
scas
movs
les
ja
les
or
sbb
mov
iret
ins
jo
add
xor
and
mov
ins
mov
ins
mov
or
mov
ja
js
cmp
lea
sub
cmp
or
sbb
rol
push
(bad)
call
mov
add
or
or
push
ror
pop
xor
cmp
xor
test
adc
cwde
not
pop
mov
jae
(bad)
push
sub
xor
add
inc
js
loop
add
add
cmp
mov
or
cmps
cmp
aas
cdq
or
fbld
pop
cmp
or
add
cmp
or
push
loope
aam
and
sbb
mov
dec
int3
mov
jns
les
sbb
outs
cmp
push
fiadd
or
call
enter
das
xchg
ret
test
jecxz
sbb
add
and
jb
call
mov
xchg
aam
scas
add
add
stc
push
fcomip
mov
scas
xchg
inc
inc
mov
dec
push
or
xor
add
repnz
dec
mov
adc
inc
add
pop
cmp
jl
inc
xor
or
push
pop
and
push
daa
bound
inc
mov
pop
leave
mov
cld
(bad)
and
add
xchg
or
iret
mov
mov
(bad)
xor
clc
pop
push
add
sbb
pop
push
scas
mov
push
push
xchg
sti
repz
push
lds
add
jne
and
and
or
es
mov
inc
shl
or
test
ins
pop
and
aas
push
jne
(bad)
inc
outs
mov
test
fild
shr
or
stos
pop
dec
or
add
mov
mov
fucomi
add
mov
cmp
jae
sbb
or
daa
jo
movaps
into
pusha
fs
pop
and
cmp
sub
test
icebp
sub
retf
and
and
imul
sub
int3
cmps
int
sub
and
push
xor
xor
and
(bad)
fisub
cmp
(bad)
call
inc
push
mov
iret
ins
inc
and
dec
sub
imul
cmp
(bad)
and
or
xchg
xor
jno
and
adc
das
xor
jno
out
xor
and
inc
add
adc
xchg
cmp
or
bound
cmp
jnp
inc
cmp
or
cmp
inc
in
ja
add
mov
dec
push
adc
test
sub
ins
movq
jge
daa
mov
cmp
and
inc
ret
addr16
dec
pop
pop
add
pushf
add
sbb
xchg
ret
rol
lahf
and
mov
and
pop
jmp
jbe
cmp
adc
cmp
nop
adc
fs
adc
rol
adc
mov
jno
dec
mov
dec
jae
dec
mov
or
inc
les
add
outs
pop
inc
or
mov
popa
and
inc
or
ficom
jo
movs
mov
cmp
sbb
cmps
imul
rcr
cmp
ja
lock
dec
call
and
xor
inc
loope
pop
sbb
push
mov
xchg
add
ins
jl
fadd
pop
or
aam
loopne
pusha
pop
lods
or
(bad)
sbb
lods
fadd
enter
adc
add
pop
(bad)
jecxz
(bad)
in
sar
js
or
pushf
mov
and
pushf
adc
js
mov
mov
push
push
cmp
add
imul
lods
sub
iret
pushf
push
test
mov
lods
lock
repnz
iret
bound
sbb
loope
or
add
push
sbb
cmps
icebp
addr16
jg
cmp
gs
enter
mov
and
lods
lods
hlt
scas
hlt
mov
(bad)
pmaxub
ret
hlt
sbb
repnz
fwait
stos
sbb
hlt
fstp
inc
or
in
gs
cld
adc
js
jnp
(bad)
dec
jb
and
addr16
mov
stos
fmul
push
nop
push
or
or
pop
cmps
pop
test
sub
jbe
or
and
inc
mov
popa
add
ret
adc
xor
xchg
jo
push
clc
push
xchg
jbe
xchg
mov
mov
cmp
add
pop
mov
pusha
pmaddwd
sub
stos
pop
pop
adc
leave
pop
mov
not
or
in
iret
cmp
mov
shl
push
ss
enter
lock
and
nop
adc
mov
icebp
nop
mov
jne
adc
repnz
mov
mov
adc
mov
push
adc
pop
test
out
bound
lea
and
and
add
push
xor
hlt
in
cld
pop
and
adc
xchg
mov
jmp
jmp
jne
sbb
jno
fistp
scas
push
add
jbe
sub
and
push
sbb
scas
or
cmps
jge
push
lea
in
push
nop
out
add
and
dec
ficom
retf
xor
xor
push
icebp
xchg
push
lods
inc
inc
xlat
or
add
ror
mov
inc
pop
shl
rcl
imul
pop
pop
call
rol
mov
rol
inc
or
inc
fwait
neg
jg
cmp
xor
pmullw
(bad)
adc
mov
adc
xor
dec
jne
lea
xchg
loop
fs
fadd
pop
sbb
xchg
xor
pushf
loope
das
fcmovnb
pop
pop
stc
lea
mov
sub
sbb
cmp
inc
cmc
mov
jne
aaa
pop
lods
or
and
cmps
cmp
dec
aaa
xlat
mov
xor
xor
adc
loope
fld
cmp
movs
xor
inc
mov
sub
ret
or
xchg
cmp
xchg
cmp
add
sub
cld
test
add
jnp
sbb
sbb
mov
ror
ins
or
or
fisttp
mov
pop
inc
mov
in
jge
call
aam
adc
fdivr
stos
xlat
xchg
call
mov
outs
or
int3
jl
xchg
fdivp
push
inc
xor
fnstsw
dec
aam
lds
jbe
dec
and
dec
cli
icebp
repnz
adc
sbb
lock
cmp
xor
mov
outs
mov
pop
jnp
adc
pop
push
adc
jne
push
scas
mov
out
ror
test
jmp
psadbw
and
sub
sub
mov
adc
mul
jge
jnp
cmp
pop
mov
test
push
rol
inc
pop
rdpmc
lock
lock
imul
mov
je
adc
mov
push
sub
push
dec
xchg
test
sbb
mov
xor
xor
xlat
arpl
inc
ret
(bad)
mov
out
inc
or
and
add
xor
adc
int
mov
scas
lahf
push
add
ret
cmp
mov
cdq
mov
mov
cli
jbe
or
in
mov
xor
enter
cli
sbb
xor
inc
inc
(bad)
jb
add
fdiv
or
mov
rcl
lods
data16
in
dec
cli
jg
je
das
or
je
add
push
mov
out
jbe
jb
or
je
popa
into
adc
aas
add
mov
push
je
or
je
das
aad
inc
push
enter
fdivr
jb
test
mov
pop
or
adc
add
fs
jb
scas
sub
gs
jmp
or
or
jno
jmp
and
fadd
jne
sbb
and
jmp
in
xor
ins
jmp
std
mov
xor
je
and
aaa
test
cmps
add
fisttp
xchg
dec
clc
and
jne
mov
xor
fwait
and
in
and
int
lds
pop
xor
push
addr16
and
jb
add
shr
jae
daa
pop
push
pop
lods
cmp
pusha
inc
xor
icebp
sar
push
lods
sbb
(bad)
xor
or
shl
sar
or
inc
shl
jne
and
out
sub
jl
sub
ret
push
inc
mov
adc
xchg
add
jns
or
pusha
cmp
cmp
adc
addr16
das
adc
fld
cmp
arpl
cmp
jmp
and
mov
or
pusha
inc
mov
xchg
dec
fs
xchg
add
sub
shr
jmp
std
ret
cmp
or
mov
mov
sub
add
pop
cmp
mov
and
push
add
(bad)
adc
adc
adc
leave
scas
js
xchg
push
sbb
mov
in
ins
mov
rol
push
sahf
sub
cmp
jb
mov
ret
add
je
mov
std
or
dec
je
sub
xor
and
pop
das
or
and
or
rol
cmp
in
dec
clc
mov
shl
out
or
test
sbb
or
std
movzx
jmp
scas
jmp
pop
lock
or
lds
xchg
xchg
sub
push
mov
cmp
inc
and
outs
lock
inc
sbb
cmps
mov
fdiv
je
and
popf
cdq
sti
call
dec
mov
jle
ja
enter
dec
cmovp
jbe
in
inc
dec
inc
xor
dec
outs
inc
test
lods
dec
ja
lock
in
data16
inc
out
mov
jo
sbb
sub
add
and
sub
loopne
test
cmp
lds
sub
jge
jg
or
jle
inc
push
cmp
outs
adc
add
popf
shl
jmp
add
call
not
outs
out
scas
mov
mov
mov
inc
mov
inc
ins
dec
dec
jae
pop
pop
add
pusha
iret
(bad)
mov
pusha
or
mov
bnd
adc
xor
push
stc
sbb
adc
or
push
add
xchg
mov
inc
xchg
xchg
pop
retf
test
(bad)
repnz
adc
sar
mov
cwde
cmp
data16
in
adc
mov
adc
sub
add
xchg
xchg
adc
arpl
addr16
add
bound
jg
cdq
and
sahf
add
or
jmp
scas
sbb
and
adc
int3
jmp
movs
imul
inc
pop
add
push
pop
and
or
inc
repnz
pop
out
and
xchg
sbb
cmp
or
out
fcom
fnstsw
inc
jb
pop
push
jb
mov
adc
pop
sbb
pop
pushf
adc
xor
mov
cmp
jl
mov
or
and
push
or
push
ins
mov
push
cmp
or
(bad)
jbe
pause
jo
test
push
add
jae
add
adc
scas
pop
test
outs
push
pop
test
xchg
jae
xor
push
les
push
dec
adc
pusha
int
aas
mov
ins
iret
pop
cmp
or
or
bndldx
inc
add
shl
data16
or
dec
or
pusha
push
adc
and
cmp
sbb
xor
add
retf
mov
popaw
dec
dec
pop
ins
mov
aas
dec
(bad)
push
retf
jne
mov
js
arpl
popa
fmul
push
inc
push
push
cmp
jmp
lds
(bad)
cmps
xlat
fcomip
xchg
pusha
inc
or
(bad)
or
fisttp
and
inc
clc
sbb
adc
das
xchg
arpl
inc
imul
adc
and
add
sub
or
bound
adc
inc
ins
popa
addr16
jbe
inc
sub
cmp
push
cld
(bad)
mov
push
je
push
sti
push
add
dec
push
or
add
jmp
out
cmp
divps
add
adc
xchg
jne
sbb
jb
jb
or
iret
pop
outs
adc
sub
dec
mov
mov
jecxz
jo
popa
adc
pop
movlhps
lods
and
aaa
shl
inc
pusha
mov
jp
push
mov
loope
fwait
mov
or
adc
lods
out
jle
fs
add
mov
ss
and
and
shl
xor
test
xor
push
or
dec
add
dec
in
xchg
data16
cmps
adc
inc
inc
shr
xchg
ret
add
pop
xor
sbb
and
cld
test
mov
cmp
cmp
mov
or
gs
clc
sub
test
mov
movs
add
in
out
or
sbb
in
ror
bt
enter
mov
cmp
js
clc
cs
mov
arpl
mov
ins
mov
dec
enter
mov
into
sbb
pop
and
jmp
in
mov
fld
add
dec
lock
ret
fsub
mov
mov
jecxz
mov
retf
dec
xchg
add
dec
jne
mov
add
adc
cmp
dec
fsub
loope
(bad)
add
mov
mov
add
add
add
mov
mov
jbe
(bad)
mov
ins
xchg
jbe
or
sti
lds
xor
jb
mov
mov
shl
xor
cs
in
and
sbb
in
inc
pop
push
inc
dec
xchg
mov
loopne
mov
out
fwait
retf
adc
call
adc
or
sbb
inc
rol
das
pop
xor
adc
clc
or
cmp
call
pop
add
add
add
cld
adc
(bad)
int3
cmp
jle
pop
outs
daa
add
int3
dec
cmp
cmp
cmp
call
in
in
push
cmps
or
push
dec
xchg
cwde
call
pop
pop
pop
jl
jne
cmp
dec
mov
push
cmp
and
repz
in
or
xchg
push
mov
adc
or
bswap
and
mov
mov
inc
out
mov
fsub
in
add
add
mov
xchg
clc
(bad)
jmp
add
xchg
adc
xchg
jge
loope
xchg
and
jne
or
xor
jge
pop
pop
add
jmp
dec
pop
fdivrp
and
fstp
add
jne
loopne
dec
stc
jnp
or
push
push
mov
pop
aam
inc
ret
jae
or
adc
sub
cwde
add
or
sahf
test
inc
movs
sub
xor
mov
sub
ret
push
lock
or
jo
test
jmp
sub
add
inc
clc
daa
sbb
dec
add
test
pop
cli
sub
ror
bound
into
sub
test
retf
xor
xor
enter
mov
push
lods
mov
loopne
test
or
pusha
ins
popa
mov
in
cbw
mov
sbb
scas
mov
cmp
dec
dec
inc
int
(bad)
jmp
int3
jo
fdivr
lods
push
aad
fldcw
jmp
inc
xor
cmps
jo
push
mov
arpl
adc
mov
js
ret
jp
pop
push
push
ret
hlt
or
and
lea
pop
outs
add
push
fadd
adc
movs
add
mov
xchg
xchg
lods
popa
mov
(bad)
loopne
mov
int3
sub
or
fs
shl
aad
rcl
mov
jne
hlt
sub
adc
lods
mov
(bad)
call
and
and
dec
jne
and
xor
and
sbb
sahf
adc
or
loopne
(bad)
xchg
in
in
sbb
cld
pop
add
in
sub
inc
imul
mov
in
fsubrp
adc
sar
push
arpl
sbb
cmps
jmp
push
or
rcl
jo
sub
add
pop
pop
push
adc
ins
loopne
pop
add
inc
ret
loopne
xor
adc
js
add
push
clc
add
or
and
push
sbb
or
mov
dec
sbb
aam
sub
push
je
jmp
in
shr
add
or
fiadd
inc
add
add
xchg
inc
xchg
in
jle
xor
sbb
or
add
shl
shr
sbb
fcomi
mov
mov
inc
xor
inc
jb
dec
push
in
or
sbb
test
mov
or
fstp
push
mov
cli
scas
push
cmp
outs
test
mov
out
fs
and
(bad)
test
je
add
mov
adc
stos
pop
(bad)
hlt
in
add
add
add
out
mov
push
sub
push
cmp
shl
loopne
clc
sub
cmps
xchg
pusha
sub
or
add
lods
fiadd
in
pop
push
add
hlt
sbb
pop
cmp
add
je
lea
pop
lock
sub
pusha
call
and
push
xor
and
push
push
test
cdq
adc
add
add
push
fld
test
sbb
mov
cmp
sbb
lea
sbb
cmp
out
rcl
les
fcomp
push
add
inc
cld
mov
push
mov
adc
mov
sahf
dec
pop
nop
mov
cmp
mov
sbb
add
pop
sub
inc
cdq
mov
dec
pusha
dec
cmp
cwde
mov
push
dec
mov
sbb
add
cs
dec
pop
std
cld
mov
jl
lock
add
out
and
rol
test
je
sbb
cwde
mov
addr16
and
and
pop
add
or
shl
aaa
ins
add
add
add
or
sub
mov
xor
ins
fsubr
je
jle
xor
fcmovb
dec
sbb
sub
adc
outs
loopne
add
ret
or
dec
push
push
repnz
cmp
pop
rcl
xor
push
xor
jge
cmp
ss
aas
sbb
xlat
daa
das
inc
call
push
movs
loope
adc
adc
adc
push
xor
inc
ret
or
or
or
(bad)
jmp
cmp
(bad)
mov
add
sbb
imul
xchg
mov
pop
jp
call
ja
cmp
jnp
or
add
in
xor
clc
repnz
stos
push
fwait
cmp
iret
and
or
jge
add
sub
sti
pop
or
inc
pushf
xlat
test
daa
and
sub
into
pop
xchg
xchg
loopne
mov
(bad)
fcmovbe
scas
rol
repz
xchg
gs
add
jg
sub
push
sar
pop
enter
adc
push
push
imul
fild
adc
push
sbb
xchg
mov
xchg
pop
mov
scas
or
mov
add
ret
add
or
cmps
call
dec
push
and
test
das
and
mov
push
xor
imul
push
and
jbe
inc
pop
xchg
sbb
jmp
inc
dec
imul
test
add
dec
or
add
pop
xchg
pop
outs
pop
hlt
lahf
loopne
inc
cmc
iret
rol
or
push
xor
frstor
mov
push
out
push
stos
add
xor
arpl
leave
add
add
or
or
ins
arpl
dec
push
jb
cs
add
rol
adc
adc
inc
mov
xor
or
or
pop
icebp
xor
scas
xchg
add
or
add
xor
adc
adc
xor
mov
jo
rcl
xchg
pop
push
je
push
inc
jbe
lock
jmp
push
adc
push
fcmovu
ret
push
cmp
mov
ret
js
cmp
or
add
pop
lods
fwait
pop
pop
std
(bad)
adc
(bad)
sbb
arpl
out
jp
add
sub
sbb
cmp
add
outs
cmp
dec
gs
fadd
adc
movs
pcmpeqd
or
addr16
jns
push
sbb
adc
(bad)
outs
(bad)
adc
or
adc
dec
add
repz
pop
sub
pop
jbe
imul
and
in
jne
jne
push
or
dec
ret
aaa
add
sub
inc
add
inc
not
inc
stc
push
daa
out
adc
mov
add
push
fwait
mov
xor
sbb
pop
inc
psllq
add
clc
idiv
push
call
repnz
push
adc
dec
pusha
(bad)
jae
ins
ins
sub
jne
cmps
outs
mov
push
add
cmp
push
pop
add
pop
ins
xor
dec
test
or
xor
pop
or
push
or
or
inc
and
popa
mov
cmp
push
jecxz
leave
mov
add
and
adc
sar
sbb
pop
push
aad
pusha
xchg
xchg
icebp
ja
push
ins
inc
add
stc
imul
adc
dec
push
inc
cmp
inc
test
dec
dec
cli
cmp
pushf
cmp
call
inc
xchg
test
es
push
dec
sti
push
sti
inc
mov
sbb
push
xlat
in
mov
xchg
push
inc
push
push
mov
push
(bad)
rol
cmps
loopne
mov
mov
ret
inc
adc
mov
mov
test
sub
cmp
shl
mov
lods
mov
cmc
rol
sub
xchg
or
and
cmp
ins
jno
sbb
add
call
push
call
mov
xor
jns
out
(bad)
(bad)
mov
std
push
cs
cmp
imul
hlt
in
mov
pop
lock
int
push
clts
data16
shl
xor
xchg
add
inc
xchg
call
cmp
cmp
add
adc
sbb
mov
call
outs
lds
popf
in
ret
adc
outs
adc
pop
mov
push
jb
outs
dec
push
and
sub
loopne
push
cmp
jnp
fcom
add
daa
mov
jne
in
push
mov
xchg
cmp
pop
mov
mov
fist
(bad)
(bad)
mov
dec
mov
adc
push
cmp
or
mov
ss
dec
in
push
cmc
dec
sbb
or
inc
adc
imul
bound
addr16
add
sbb
adc
adc
(bad)
clc
mov
xchg
and
xor
jae
outs
popf
lods
icebp
add
ins
mov
add
popa
int3
adc
xor
inc
sar
or
jno
inc
and
pop
pusha
(bad)
in
rol
sti
sbb
out
and
push
or
xor
movs
dec
sbb
fisttp
add
test
cmovns
sbb
or
sbb
test
dec
or
xchg
jmp
xchg
inc
divps
mov
orps
lods
ret
neg
out
gs
les
movs
ss
aaa
add
add
pop
or
and
ret
add
sbb
ds
xchg
scas
inc
xchg
mov
lods
or
or
inc
add
add
push
add
sbb
sbb
push
cdq
add
iret
push
sub
adc
push
sar
mov
push
or
mov
push
push
loopne
test
mov
outs
or
xor
inc
sbb
cmps
sub
arpl
adc
adc
pusha
cld
push
cmp
clc
test
mov
add
or
mov
inc
inc
es
adc
jp
mov
cmp
inc
add
hlt
add
dec
outs
cmp
das
xor
add
daa
frstor
call
loopne
dec
in
add
dec
or
in
wbinvd
add
retf
retf
xchg
inc
or
push
cmp
es
repz
(bad)
icebp
jmp
aaa
or
sti
es
inc
push
push
inc
or
jne
lahf
jns
fstp
mov
push
xchg
adc
shl
jbe
dec
jecxz
or
inc
daa
and
cmp
push
mov
bound
xchg
cmp
shl
pop
pop
ret
mov
pop
mov
les
cdq
add
fisttp
jnp
cmps
add
aad
dec
xchg
movs
or
sbb
pop
out
mov
lahf
sub
test
push
add
outs
lods
push
lock
mov
push
mov
mov
push
xor
shr
push
adc
neg
jb
neg
inc
je
xchg
push
fs
mov
repz
sub
inc
push
dec
pushf
push
xor
in
push
imul
xchg
inc
outs
push
ds
xor
jo
mov
mov
push
xlat
mov
ss
pop
dec
sbb
pop
jne
adc
daa
or
cmp
lds
dec
and
les
test
das
mov
jae
cmp
xor
neg
sub
mov
retf
jne
in
mov
stos
ins
push
cmc
sbb
daa
repnz
shl
inc
pusha
test
jl
xor
out
pop
dec
jae
popf
imul
loope
push
mov
test
ror
mov
pop
mov
ins
pushf
push
mov
add
jae
dec
jge
sbb
sbb
psubb
ror
sbb
(bad)
mov
pop
add
or
fcomp
jns
mov
jl
loope
cwde
sahf
push
sub
and
push
aad
adc
daa
movs
xchg
in
xbegin
and
jae
jg
mov
dec
inc
adc
mov
rol
add
daa
add
xor
(bad)
popf
test
jecxz
mov
je
in
cmp
dec
push
je
test
inc
inc
pop
dec
imul
or
in
mov
mov
xor
fsub
fsub
call
sub
shl
or
sub
adc
jns
data16
icebp
push
sbb
inc
pop
loope
and
mov
jns
imul
sbb
dec
mov
(bad)
pop
ror
adc
adc
fwait
dec
es
cmp
adc
outs
xor
(bad)
cmps
mov
dec
das
adc
das
fwait
fwait
cvttps2pi
pop
test
or
cmp
xor
test
or
xor
jb
arpl
and
or
sbb
xor
sbb
adc
push
pop
sub
or
sub
push
stos
inc
xor
rol
and
and
sbb
or
sbb
or
dec
or
sbb
loope
pop
add
jo
add
nop
fidiv
add
xor
fiadd
inc
pusha
movs
or
dec
add
cmps
inc
mov
pop
ret
cmp
mul
xor
outs
fnsave
pop
add
push
daa
jg
lea
test
push
adc
and
adc
mov
mov
sahf
cmc
add
sbb
fsub
loope
lea
or
mov
pop
daa
fisttp
sbb
or
add
mov
pusha
and
gs
mov
or
jmp
push
pop
sub
add
(bad)
rcl
add
ja
sbb
sbb
jne
cwde
(bad)
ins
inc
push
inc
add
shl
adc
or
inc
push
jne
jo
jae
fsubrp
sbb
inc
or
inc
pop
int3
push
cld
mov
aaa
or
and
inc
dec
popa
js
dec
add
ds
outs
ja
adc
or
addr16
mov
loopne
cmp
js
leave
das
jbe
push
loope
data16
popf
sub
fdiv
push
fimul
clc
imul
push
push
and
xchg
and
or
push
push
ds
outs
test
sbb
inc
mov
or
retf
call
daa
cmp
pushf
call
or
dec
and
xor
inc
jne
cmp
lahf
or
bts
cmp
add
pop
aaa
and
mov
dec
adc
neg
ins
or
fs
and
push
ja
fs
fs
adc
fs
add
pop
xor
push
jg
aaa
inc
sub
pop
push
inc
add
outs
sub
mov
sbb
mov
lods
cmps
push
push
and
push
adc
mov
movs
in
xor
mov
dec
add
dec
sbb
pusha
or
push
pop
adc
ins
movlps
push
ins
pop
xchg
test
ins
sbb
lea
cmps
sbb
icebp
mov
push
je
mov
mov
pushf
aaa
dec
xor
lahf
dec
call
jne
add
jbe
push
mov
in
mov
js
inc
pop
push
add
mov
mov
push
int3
push
dec
jns
mov
shl
scas
les
add
enter
mov
jl
sub
pop
push
mov
add
mov
or
or
sbb
sub
add
adc
call
push
cs
sbb
mov
mov
gs
movs
shl
mov
cmp
rcr
fstp
lea
pop
mov
popf
push
aam
pop
movs
and
inc
dec
sbb
iret
enter
fdiv
push
repz
ret
popa
push
xchg
sbb
mov
adc
push
jae
repnz
xor
dec
add
add
add
pop
mov
sbb
adc
rol
inc
xchg
pop
sbb
pop
sbb
daa
(bad)
das
cmps
or
neg
cmp
or
jge
pop
test
xor
retf
jmp
and
adc
cld
cmp
pop
dec
sub
or
xor
add
jb
aad
push
ins
aas
scas
sub
fs
mov
or
adc
add
stos
pop
mov
das
pop
setne
icebp
pop
ins
jmp
daa
pop
jmp
and
pop
sbb
stc
mov
daa
dec
jb
sbb
sbb
ret
and
pop
push
loopne
fwait
push
or
jae
xchg
add
imul
inc
into
cmp
ret
or
dec
adc
call
add
add
and
mov
(bad)
pop
xor
mov
imul
xor
lds
jmp
test
icebp
movd
sbb
dec
jnp
sbb
bound
mov
add
pushf
adc
adc
shl
xchg
jle
aam
iret
inc
jge
sar
nop
ds
out
add
mov
jo
xor
inc
jo
out
push
or
sub
lods
jnp
push
push
pop
cld
inc
inc
data16
add
add
pop
jne
loopne
inc
jg
or
adc
iret
cmp
sub
fstp
push
add
add
add
sbb
in
add
in
push
je
inc
inc
adc
nop
jo
imul
add
jp
dec
or
sbb
and
test
mov
fcomi
jmp
or
pop
popf
jmp
and
or
xor
daa
repz
lds
mov
push
sub
or
add
shr
lahf
pop
icebp
out
test
adc
mov
int3
push
pusha
push
push
clc
add
mov
das
js
pop
loope
adc
jbe
out
cmp
not
ins
or
xor
dec
or
ds
nop
into
xchg
fwait
pop
add
add
dec
pop
inc
sti
ret
ret
push
or
xchg
pop
es
pop
(bad)
pop
pop
and
adc
jb
ins
and
xchg
lock
out
jno
sbb
out
sbb
or
icebp
lods
dec
loopne
clc
cmp
js
mov
pop
push
movs
mov
sub
cmp
jge
xchg
add
fadd
mov
or
mov
xor
jnp
add
adc
mov
(bad)
jb
es
loopne
xor
jno
push
mov
cmp
sbb
or
xor
add
push
dec
adc
add
fmul
ins
outs
(bad)
lea
pop
pop
xlat
pushf
jge
pop
lods
push
es
and
inc
and
loopne
cmp
xlat
sbb
inc
add
jmp
cwde
es
fsub
and
dec
mov
xor
mov
sbb
push
mov
fistp
sti
push
sub
xor
xchg
inc
bound
or
push
jbe
or
fwait
push
data16
mov
(bad)
movq
adc
xor
sub
shr
push
daa
mov
sbb
test
mov
jo
and
add
xor
loopne
xchg
adc
ins
jae
dec
dec
push
jns
inc
sbb
push
xchg
mov
rol
add
bound
push
aaa
sub
mov
adc
sbb
push
jno
or
jge
rcr
out
out
pop
shr
jp
or
pop
sbb
pop
jg
(bad)
pop
test
add
push
sbb
adc
mov
dec
in
mov
sbb
add
xor
call
int
int
xor
and
adc
push
pop
je
push
dec
in
mov
fbld
enter
popa
mov
mov
pushw
fmul
mov
hlt
push
push
jl
push
int3
push
lods
cli
push
fistp
sbb
call
push
mov
out
sahf
mov
push
push
mov
hlt
sahf
out
sahf
mov
jo
dec
out
clc
mov
push
xor
mov
mov
and
push
adc
add
adc
or
mov
ss
sub
pop
sahf
cs
and
or
arpl
(bad)
mov
imul
sub
adc
scas
sar
ins
fs
outs
push
pop
xor
sahf
das
mov
mov
inc
imul
or
in
cmps
cmp
adc
lods
dec
outs
aam
fs
(bad)
pushf
imul
addr16
ins
add
loopne
dec
adc
push
add
sub
cmp
pop
pop
dec
push
popa
test
add
pop
adc
lods
push
mov
outs
imul
dec
fisttp
or
dec
mov
inc
addr16
cmp
loope
push
enter
sbb
daa
or
pop
dec
and
dec
add
data16
and
jbe
sub
mov
mov
cmp
js
inc
js
xchg
add
pop
outs
pop
out
es
adc
mov
fsub
daa
arpl
and
and
and
xchg
sub
pop
jle
xchg
and
and
jmp
and
and
add
push
sub
lahf
int
xchg
sub
or
jae
test
push
push
(bad)
pop
push
rcl
inc
dec
sti
scas
fild
cmp
cmps
push
or
jg
jmp
(bad)
pop
shr
or
mov
push
pop
(bad)
or
es
mov
pop
sub
add
pusha
mov
inc
inc
retf
popa
out
inc
mov
dec
outs
ins
jns
test
jb
pusha
ret
jbe
arpl
or
or
adc
in
pop
add
ins
add
dec
or
add
push
sub
shl
jmp
push
cmp
cmp
outs
push
je
cmp
dec
imul
popa
es
seto
xchg
push
fistp
(bad)
mov
sub
test
jecxz
movs
and
sbb
sbb
sar
push
mov
hlt
mov
and
xor
sub
enter
popa
add
adc
cmp
xor
add
sti
push
ins
lfs
sub
mov
dec
sub
add
adc
push
pop
sahf
rcr
push
loop
dec
bnd
or
test
jae
and
and
outs
fbld
pop
or
inc
inc
cdq
inc
dec
sbb
scas
add
push
pop
and
cmc
push
inc
jae
outs
std
sbb
sbb
mov
ficom
sbb
fucomip
fst
mov
pusha
cmp
stc
or
jl
inc
adc
xlat
arpl
out
cmp
push
jno
mov
test
dec
call
sub
jo
jle
xor
das
mov
inc
cmp
rol
cs
pushw
or
out
push
mov
sub
pusha
push
xor
test
mov
test
jp
adc
jae
cmp
dec
in
pop
add
mov
sbb
add
add
and
push
dec
ins
mov
ds
frstor
out
xor
pop
add
das
jg
add
or
push
xor
mov
push
sub
push
add
inc
adc
xchg
dec
cmp
add
push
je
dec
or
(bad)
jo
xchg
sbb
retf
out
cmp
out
loope
push
jne
pop
or
or
pusha
pop
das
jne
outs
in
cmps
pop
or
push
iret
fcom
mov
or
jge
rep
cmp
or
outs
loope
cs
cmovns
mov
movs
pop
or
inc
add
fcomp
movs
inc
or
xchg
xor
dec
dec
jecxz
add
stc
setge
lds
pop
in
shl
dec
adc
pop
push
pusha
(bad)
sar
cmps
ins
push
scas
sub
pop
mov
jns
repz
mov
imul
adc
mov
or
and
push
pop
jp
sub
in
xor
fld
add
int
jl
push
or
mov
mov
xor
or
imul
das
add
ss
sbb
je
fimul
int
(bad)
sbb
lock
repz
cld
clc
rol
int3
push
push
push
mov
or
adc
test
jo
and
in
rcl
sti
lods
(bad)
out
ss
sub
mov
push
iret
jnp
mov
xchg
pop
fadd
clc
js
neg
jnp
cwde
push
lock
inc
inc
ins
push
test
jl
icebp
cmp
inc
pushf
inc
inc
cwde
cs
cmp
lock
sub
rcr
xlat
repz
neg
push
push
je
cwde
adc
into
shl
add
and
push
add
push
jo
inc
nop
lds
mov
stc
mov
mov
daa
jge
pop
sub
jae
lahf
call
add
sysenter
retf
ss
loop
adc
xchg
jo
seta
in
add
sbb
aaa
jno
retf
xchg
mov
outs
sbb
paddb
icebp
and
xlat
inc
cmp
mov
xchg
and
mov
cmps
cmp
es
daa
add
cmp
add
loop
pop
sub
sbb
stc
xor
or
cvttps2pi
pop
dec
jo
push
punpckhdq
(bad)
jl
in
sbb
cmp
xor
rdmsr
sbb
inc
xlat
jo
xor
mov
ret
xor
aas
(bad)
add
(bad)
mov
cmp
cmp
repnz
les
cmp
repnz
hlt
loop
push
daa
sub
adc
push
les
inc
or
xlat
ror
dec
imul
cmp
and
mov
add
push
fisub
xor
push
shl
push
pusha
jecxz
stos
in
sbb
jo
dec
pop
sub
jne
les
test
or
sbb
fbld
inc
outs
jae
jne
dec
call
inc
daa
jnp
ins
mov
or
or
or
lea
mov
dec
push
daa
fldenv
(bad)
leave
loopne
and
xor
sar
and
xor
or
addr16
nop
test
ds
push
cmp
mov
dec
and
add
sub
fild
jne
popf
xor
push
int3
jmp
mov
sub
daa
cmp
or
dec
clc
ss
add
pop
sub
inc
inc
ins
or
loopne
ins
add
push
(bad)
repz
aaa
inc
or
fsubr
adc
or
push
sbb
aaa
push
(bad)
sub
cmp
cmps
adc
rcr
sub
xor
popf
sbb
cmp
add
rol
pop
sub
jae
adc
ror
bound
pop
ins
ins
xchg
ins
push
inc
and
and
mov
loop
jns
or
or
inc
xor
push
mov
add
push
sbb
push
and
and
sub
aam
cmp
adc
aad
pop
mov
mov
add
pusha
rcr
cmp
das
adc
adc
or
pop
out
xchg
daa
mov
mov
mov
pop
inc
fistp
inc
adc
dec
pop
ins
or
inc
mov
enter
or
popaw
jne
fist
inc
xrelease
add
xchg
sub
imul
sbb
jnp
cmp
fild
and
nop
fs
push
and
pop
sub
add
mov
xchg
nop
mov
pushf
mov
pop
adc
fiadd
inc
dec
jnp
and
icebp
sahf
and
inc
jno
cmp
sbb
adc
sub
je
ja
pop
inc
jo
test
sbb
adc
sbb
outs
pop
sbb
mov
ja
adc
pop
push
dec
and
and
push
scas
shl
xchg
and
repnz
aaa
pop
and
and
jp
mov
and
inc
sub
push
popa
test
inc
daa
and
adc
loopne
push
pop
int3
add
mov
inc
or
sbb
gs
daa
jae
sub
xchg
or
sahf
int3
sbb
mov
push
lods
pop
xchg
or
inc
pushf
and
pop
pop
and
adc
loopne
dec
fimul
fcom
lods
loopne
sub
xor
test
test
or
mov
outs
test
cmp
pop
in
or
push
cmp
or
mov
and
and
mov
iret
push
add
mov
or
or
push
and
sbb
test
int3
inc
add
ins
xor
sbb
nop
inc
push
scas
add
inc
addr16
xor
int3
daa
out
loopne
cwde
mov
and
ror
jns
repz
lods
cmp
pushf
add
jae
jns
and
dec
in
inc
inc
dec
push
out
mov
mov
mov
mov
fidivr
fcom
mov
in
(bad)
push
lock
out
or
push
push
aam
cs
jns
jnp
xor
push
sbb
dec
pusha
push
js
out
jns
or
push
sub
adc
dec
push
shl
jns
mov
enter
mov
ja
xchg
adc
sub
movs
daa
call
rol
(bad)
inc
mov
inc
(bad)
push
add
xchg
das
pop
dec
push
add
add
lahf
mov
pop
cmp
pop
adc
add
or
shl
scas
jmp
addr16
sbb
adc
aad
pop
cld
xor
add
jp
data16
addr16
push
adc
stos
push
packssdw
mov
dec
push
stc
ins
add
outs
or
outs
add
xor
ja
mov
shl
movs
shl
retf
cmps
stos
cdq
test
jo
out
pop
sbb
or
pop
es
and
mov
push
ins
fistp
adc
(bad)
jno
add
adc
or
(bad)
inc
loop
out
out
push
lea
lea
imul
push
test
ja
test
ja
ror
and
jno
jno
cwde
or
cmp
and
imul
and
inc
imul
mov
rol
int
ja
shr
cmp
outs
pop
rcl
aaa
retf
push
or
ins
mov
mov
arpl
cmp
or
std
and
ins
or
inc
xchg
pusha
sahf
ins
arpl
xchg
pushf
js
data16
sub
cmp
add
(bad)
movs
iret
add
mov
ja
xchg
outs
in
fist
xor
add
add
push
jecxz
pop
or
push
arpl
push
and
cdq
jns
add
sub
or
mov
adc
jno
sbb
add
stos
inc
arpl
xor
fcmovu
fstp
enter
test
push
sbb
jge
push
popa
mov
add
or
push
repz
dec
push
and
sub
push
add
shl
inc
test
cdq
and
loopne
pop
sub
int
push
sub
mov
bound
fld
pop
mov
je
mov
aad
jl
sbb
mov
ds
sbb
sbb
sbb
mov
mov
fild
dec
and
push
sbb
inc
add
int3
or
cmps
mov
pop
cmps
or
mov
inc
cmps
or
add
inc
cmps
add
cmps
adc
ror
retf
cmps
mov
ss
cmps
and
adc
inc
cmps
sub
cmps
sub
ror
add
ret
inc
mov
pusha
push
mov
sbb
or
inc
mov
ror
dec
dec
inc
mov
hlt
mov
arpl
dec
jle
push
popf
or
ins
rcl
push
add
and
dec
addr16
and
add
pop
mov
mov
sbb
inc
test
push
inc
push
add
push
mov
xlat
push
inc
jno
sub
arpl
mov
add
push
sub
(bad)
es
dec
sub
lds
jge
inc
cmp
cmp
pop
inc
addr16
or
push
xchg
push
das
lods
push
enter
pop
push
push
push
cwde
mov
mov
lock
es
add
je
fistp
out
pushw
pushf
mov
outs
add
les
pop
mov
xchg
adc
or
xchg
mov
mov
scas
mov
daa
and
(bad)
mov
push
dec
scas
inc
push
fidivr
xchg
mov
push
les
in
and
mov
or
mov
loop
mov
cmp
movs
sbb
and
inc
or
add
and
fstp
or
push
inc
dec
push
dec
and
rcl
push
push
add
mov
cvtps2pd
or
out
ficom
bswap
in
add
push
syscall
add
sahf
loope
pop
push
xor
pop
inc
pminub
clc
call
or
push
adc
or
ss
xchg
pop
mov
mov
add
pop
inc
jno
repnz
cmovae
mov
xchg
aas
inc
push
sub
cmovbe
inc
add
retf
add
add
pop
dec
add
in
sub
mov
dec
add
pop
stos
scas
iret
sub
(bad)
adc
dec
dec
mov
jne
inc
dec
pop
and
xchg
and
inc
rcl
ret
cli
sbb
movs
les
dec
aad
test
aad
aad
lahf
or
jae
es
sub
mov
sub
or
test
stos
sub
les
xchg
add
or
mov
jnp
mov
sub
movs
add
pop
xchg
(bad)
ja
cmps
xchg
push
push
and
inc
cwde
xchg
arpl
mov
xor
push
cmp
fs
mov
mov
and
or
out
or
mov
dec
mov
add
pop
sub
xchg
lds
mov
and
mov
cmp
push
push
and
add
fadd
push
xchg
cmp
test
push
push
sti
xchg
cmp
push
jmp
or
movs
or
jno
subps
bound
daa
outs
jns
(bad)
jp
cmp
loope
pop
mov
cmp
push
(bad)
add
or
jno
test
jno
fcomp
xor
mov
jno
mov
loope
mov
adc
lea
test
or
cmp
lds
popf
jo
icebp
or
xchg
pusha
inc
(bad)
sbb
adc
fmul
fnsave
cmp
mov
sub
lods
les
cmp
daa
push
outs
arpl
and
pop
arpl
mov
aaa
cdq
outs
ins
adc
push
outs
or
jl
xor
mov
pop
sbb
and
mov
add
popa
xchg
ins
push
fcomp
cmc
add
adc
xchg
adc
lahf
or
sbb
in
fadd
and
loopne
icebp
inc
retf
mov
fadd
pop
cmp
mov
in
rcl
xchg
shr
sbb
lahf
mov
add
pusha
rcl
xlat
icebp
jno
(bad)
movs
mov
(bad)
add
repnz
pop
push
xor
nop
daa
pop
add
iret
jno
or
xchg
push
js
dec
cmc
stc
jnp
jg
dec
add
pusha
jnp
cmovg
movs
les
fstp
(bad)
pop
mov
sub
push
stos
movs
mov
xchg
or
or
pop
mov
xlat
jno
mov
jecxz
daa
or
lds
or
adc
test
lods
dec
test
sub
mov
pop
sahf
push
sub
or
cmp
add
test
inc
pop
add
mov
mov
adc
cmp
sub
jns
xchg
sub
sbb
sbb
lea
pop
movs
mov
sub
jo
and
xchg
imul
add
sub
mov
mov
lods
arpl
fs
scas
mov
mov
scas
add
add
and
clc
jno
jo
cld
jae
jb
es
add
arpl
cmp
jmp
lahf
pop
jne
mov
inc
pop
aas
cmp
cmp
cmp
push
cld
gs
data16
into
data16
push
adc
adc
ret
push
(bad)
(bad)
repz
repz
pop
test
sub
in
mov
push
xor
and
mov
daa
jp
add
das
ins
ret
mov
(bad)
push
pop
mov
add
jns
das
(bad)
test
and
or
out
dec
mov
ja
fbld
add
das
push
cmps
(bad)
add
fs
add
add
out
sub
jl
pop
test
pushf
(bad)
mov
stc
or
(bad)
dec
clc
cmovb
addr16
or
cmp
cmove
addr16
repnz
add
inc
add
push
(bad)
cmovne
xchg
jo
(bad)
shr
jo
or
adc
cmp
cmp
mov
pop
mov
sub
aas
ret
add
sbb
push
loopne
rol
adc
jae
(bad)
leave
push
adc
mov
push
test
mov
jne
retf
push
sub
sti
dec
xchg
sbb
retf
push
push
sub
inc
sub
movs
add
push
cmp
adc
pop
push
cmp
or
mov
and
cmp
mov
jno
fsubr
xchg
xlat
pop
mov
xchg
mov
dec
ins
jae
sbb
sbb
push
sbb
mov
adc
push
jo
mov
mov
push
ins
fld
inc
pop
push
xor
jae
mov
mov
pop
dec
dec
mov
fucom
inc
adc
imul
jnp
pop
enter
ins
push
movs
add
and
push
jmp
sub
pop
in
adc
sub
pop
test
(bad)
dec
jl
mov
jo
cmp
push
movs
mov
dec
mov
add
add
pop
movs
sub
mov
add
and
movs
add
pop
and
retf
fild
sbb
sbb
outs
pop
jo
retf
(bad)
add
sldt
outs
into
cmp
cmp
jg
adc
imul
(bad)
adc
mov
pop
jo
dec
nop
pshufw
or
push
pop
pop
icebp
sbb
loopne
add
push
push
xor
fsubr
dec
ss
bound
loope
mov
adc
shr
scas
(bad)
inc
pop
cmp
lea
cwde
xor
pop
lea
arpl
(bad)
cmp
xchg
pop
mov
inc
and
mov
adc
push
pop
sar
xor
in
sub
pusha
and
pop
jns
sub
pop
call
dec
sub
shl
add
imul
shr
sub
int3
adc
scas
ins
pop
unpcklps
push
jnp
es
pop
mov
das
jne
xchg
cmc
mov
or
xchg
shr
sub
push
shl
(bad)
out
sbb
inc
rcl
push
cld
inc
jl
ss
pop
add
sbb
es
das
fmul
sub
inc
mov
pmuludq
loopne
adc
ss
mov
xchg
mov
push
retf
inc
leave
idiv
jl
jns
call
aam
cs
inc
or
fisttp
or
ds
das
test
enter
mov
pop
xchg
mov
inc
in
xchg
pop
push
(bad)
je
add
jnp
(bad)
subps
jne
inc
clts
jmp
xchg
das
jg
add
out
pop
out
jbe
(bad)
adc
xchg
and
or
xchg
das
pop
or
ret
cmc
mov
ja
ja
add
inc
ja
cmovns
mov
inc
dec
cmovae
cs
add
pop
aad
retf
add
mov
stc
imul
dec
add
dec
add
retf
pop
pop
mov
cs
data16
add
(bad)
adc
cvtpi2ps
inc
xchg
lock
arpl
jge
dec
ret
cmp
adc
pop
sub
fadd
mov
das
shl
push
imul
adc
dec
xor
mov
push
mov
mov
push
or
mov
mov
and
push
enter
push
dec
push
lahf
sbb
sbb
push
jecxz
push
test
add
pop
loopne
mov
rcl
dec
add
nop
test
fmul
mov
loopne
stos
or
cs
jno
adc
adc
sbb
and
test
inc
xor
inc
movs
add
inc
dec
sub
jae
push
xchg
push
sahf
jae
jmp
push
xchg
adc
adc
jae
movs
pop
inc
jb
push
inc
dec
sub
jae
leave
and
adc
(bad)
movs
loop
adc
nop
xchg
and
or
mov
pop
adc
adc
push
pop
jae
jo
test
adc
test
push
ins
pop
push
or
and
adc
dec
popf
outs
mov
call
adc
popa
je
sub
ins
and
and
and
dec
pop
sbb
mov
adc
adc
mov
adc
fmul
mov
in
dec
fisttp
sbb
jge
mov
clc
mov
das
pusha
adc
out
mov
mov
adc
js
in
push
cld
fdivr
jnp
or
pop
push
cmp
push
cwde
push
adc
add
xor
test
mov
xchg
push
pop
pop
and
push
sub
repnz
push
inc
adc
mov
mov
sbb
push
dec
adc
push
or
dec
(bad)
fadd
pop
movs
fchs
adc
add
xchg
push
or
clc
test
cdq
xor
in
repnz
add
popa
loopne
mov
mov
jg
jg
(bad)
jg
retf
wbinvd
add
or
ud2
add
mov
prefetch
fld
jg
add
or
pop
stc
daa
clc
cmovb
dec
add
or
add
movs
cmovnp
fisttp
mov
dec
sub
cmp
xor
push
popf
test
or
je
mov
ss
std
inc
test
inc
dec
imul
(bad)
shr
push
sbb
popf
sbb
rol
adc
jmp
rol
mov
push
cld
bound
or
push
mov
mov
and
sbb
addr16
test
das
push
dec
jl
int3
pop
sub
fild
adc
adc
push
xor
fild
(bad)
cmp
push
add
mov
rol
cmp
sub
push
fadd
jno
push
pop
xor
or
mov
add
inc
push
cmp
sbb
inc
mov
jecxz
and
or
add
or
mov
and
leave
push
jae
pusha
xor
aas
xor
pop
adc
sbb
mov
push
ins
aas
stos
and
aaa
out
std
nop
mov
push
inc
cmp
std
imul
jno
pop
or
and
sti
sbb
mov
test
mov
aam
push
out
pop
xchg
retf
retf
and
sbb
jns
addr16
push
adc
xor
inc
pop
clc
sahf
pusha
lock
rcl
lock
push
xchg
sbb
test
dec
pop
add
sahf
adc
(bad)
sbb
dec
push
int3
mov
call
push
fs
xor
sbb
pop
pop
sbb
je
adc
pop
lock
inc
push
popa
retf
xchg
mov
movshdup
xchg
pusha
shl
retf
xchg
aas
syscall
add
add
das
fmul
ret
mov
in
in
test
or
in
mov
mov
in
in
mov
lahf
mov
mov
in
in
mov
or
mov
pop
push
mov
xor
gs
push
dec
pop
pop
aaa
adc
sub
inc
sub
addr16
sub
cmp
sub
addr16
push
scas
cs
sub
add
add
xor
pop
pop
pop
addr16
ss
xor
or
push
popa
sbb
loope
or
mov
loop
pusha
test
jmp
xor
or
or
mov
mov
call
xor
mov
adc
inc
test
mov
jno
enter
mov
les
fs
inc
bound
jae
or
add
jae
xor
ret
ins
sub
pushf
mov
push
dec
pop
sbb
test
inc
pop
imul
test
fiadd
add
int
push
pop
push
xchg
pushf
adc
test
mov
outs
and
push
aam
push
cmp
xor
mov
and
cmp
ins
in
inc
mov
(bad)
loopne
pop
pop
jo
out
js
or
dec
(bad)
(bad)
push
pop
ficom
mov
data16
jns
idiv
or
xor
mov
mov
jo
pop
pop
pop
adc
out
movs
fldcw
mov
cmp
pop
sbb
or
outs
daa
jne
mov
adc
push
add
jb
mov
add
add
test
inc
nop
jg
nop
push
mov
nop
rcl
loope
mov
inc
sbb
inc
stc
or
add
cmovne
sub
jns
jns
xchg
xlat
xchg
adc
jns
test
sub
xchg
or
add
(bad)
jo
add
xchg
icebp
fs
mov
cmp
dec
aaa
sbb
pop
dec
mov
sub
pop
shr
jecxz
push
pop
pop
push
sub
mov
push
sub
rol
pop
jecxz
and
pop
or
push
sub
or
jl
jecxz
mov
add
xor
push
add
mov
ss
mov
jecxz
imul
mov
mov
mov
xor
xchg
dec
jecxz
push
mov
mov
adc
and
inc
sbb
push
sub
inc
bound
jae
add
add
mov
push
and
push
adc
mov
inc
mul
xor
ins
test
push
jno
push
sbb
and
or
jae
mov
push
and
jae
cmp
or
push
test
push
pop
sub
add
push
ins
mov
add
push
jl
xor
mov
push
shl
sbb
sar
mov
xchg
push
nop
es
out
not
push
fsub
push
push
int3
sub
out
sahf
cmp
add
es
loopne
mov
mov
call
pop
inc
dec
cmp
sahf
xlat
mov
push
sub
and
add
cmc
cmp
in
cwde
mov
ins
sub
les
or
push
dec
xchg
push
adc
out
test
call
mov
xchg
mov
mov
cwde
punpckldq
cs
mov
add
pop
ins
xchg
cmpxchg
push
sbb
xchg
xchg
xchg
xchg
cdq
cmps
cdq
rcr
xchg
xchg
xchg
call
adc
dec
fwait
xchg
xchg
xchg
xchg
fwait
xor
outs
pushf
movs
pushf
fsubr
lea
sub
add
popf
lahf
adc
test
cwde
fsubr
dec
cmp
inc
bound
loop
loop
sub
or
sub
loop
bound
push
pop
sbb
pop
push
sub
pop
adc
push
cmp
push
sub
aaa
pop
stos
push
mov
rcl
lds
stos
and
push
pop
push
daa
inc
imul
inc
push
xchg
or
xor
inc
or
popa
inc
bound
inc
pop
mov
pop
sub
adc
cwde
sub
mov
cmp
adc
lahf
pop
jno
cmp
sub
jno
and
jno
mov
xor
pop
sub
mov
rol
mov
mov
adc
adc
jmp
inc
and
test
inc
pop
jae
push
and
sbb
shr
lods
outs
push
or
add
add
(bad)
rcl
into
pop
iret
daa
or
les
popa
movs
popf
imul
cmps
push
push
push
mov
add
pop
or
push
jns
or
adc
jle
mov
out
sahf
out
pop
fs
lahf
and
loopne
mov
dec
push
bound
clc
loope
aam
add
cs
loopne
mov
out
cs
push
jl
fdivp
sahf
xchg
mov
add
cmp
adc
(bad)
aam
fidiv
pop
xchg
fistp
mov
jo
cmp
ja
stc
jnp
mov
add
fs
ret
not
mov
sbb
sti
sbb
aas
syscall
add
adc
jge
wbinvd
add
add
mov
prefetch
jecxz
add
and
xchg
inc
add
ja
adc
inc
loop
jge
movs
jne
sub
(bad)
dec
add
bound
pop
pop
movs
nop
(bad)
add
clc
and
mov
and
mov
mov
loop
test
and
test
je
pop
arpl
push
adc
jo
sub
das
xor
jmp
push
pop
or
mov
sub
in
and
xor
sti
dec
jb
les
scas
sbb
aad
ror
push
cwde
loope
fiadd
mov
xchg
or
xor
inc
or
cmp
and
sub
data16
push
pop
add
xor
push
push
xor
xchg
pop
jno
les
or
push
outs
sbb
ror
adc
push
jae
ror
lea
jno
mov
movs
mov
add
gs
mov
add
inc
and
pusha
(bad)
jae
adc
mov
addr16
cmps
nop
fdiv
fidiv
pop
adc
inc
sub
or
addr16
imul
push
xor
fdiv
mov
mov
data16
add
mov
aaa
nop
cmps
add
inc
xlat
mov
add
out
mov
push
outs
add
xchg
pop
mov
mov
out
in
out
fdivp
fdivp
push
ins
fcomp
in
push
cld
push
push
sub
inc
test
cmp
mov
out
movs
inc
inc
xlat
ss
in
loop
pop
xlat
lock
loop
push
out
fsubp
pop
jecxz
push
adc
inc
adc
jnp
shl
cmp
xlat
adc
inc
pusha
pop
in
fst
xchg
cmp
in
pop
dec
gs
retf
test
xlat
or
jp
ds
sti
(bad)
xor
stos
pop
pop
pop
pop
xchg
stos
shr
pop
pop
pop
ds
imul
add
lods
pop
pop
pop
pop
out
and
pop
pop
pop
pop
int3
lods
push
scas
cmp
or
and
rol
jb
test
(bad)
lods
scas
lea
cmp
int
rcl
dec
aaa
or
push
retf
dec
adc
jmp
(bad)
loop
push
sbb
and
adc
in
xor
adc
jmp
push
pop
sub
bound
ffree
and
add
add
and
and
push
cld
sbb
mov
sub
pop
shr
(bad)
push
lds
test
push
(bad)
push
dec
test
shl
(bad)
dec
mov
sub
mov
and
mov
(bad)
aad
push
ret
adc
loop
(bad)
jno
add
(bad)
lods
mov
fsubr
(bad)
outs
iret
and
or
(bad)
xor
xchg
fdiv
bound
inc
sbb
(bad)
jno
repnz
jecxz
adc
mov
mov
cmp
push
test
adc
sbb
(bad)
jae
push
mov
inc
mov
and
push
dec
test
(bad)
ins
mov
push
movs
das
loop
push
push
push
imul
push
jl
mov
repnz
cmp
jbe
mov
mov
sbb
stc
mov
jns
and
in
enter
or
lock
mov
iret
add
jl
call
inc
movs
out
push
pusha
out
and
push
das
sbb
push
inc
pop
push
adc
in
adc
mov
jmp
cs
out
push
call
push
add
sbb
je
shl
nop
jmp
sbb
push
adc
and
dec
push
or
ja
adc
mov
(bad)
xchg
mov
or
packuswb
inc
rcl
(bad)
adc
pop
inc
mov
pop
pop
pop
jo
call
pop
pop
pop
sbb
mov
pop
pop
pop
in
mov
mov
mov
mov
pop
pop
pop
shl
jl
dec
pop
pop
pop
mov
in
mov
mov
push
push
dec
(bad)
pop
cmp
and
pop
pop
mov
mov
push
test
xchg
cs
cmp
add
pop
xchg
dec
push
adc
pop
pop
xchg
or
fdiv
adc
loope
pop
xor
jno
sub
adc
fwait
pop
inc
pop
pop
ins
push
sub
pop
test
push
mov
and
adc
push
sub
inc
add
push
inc
pop
adc
fs
pop
push
and
les
xor
pop
dec
pop
mov
mov
pop
fst
xor
dec
pop
push
and
ss
in
pop
outs
adc
mov
sbb
xchg
fadd
inc
sbb
mov
sub
pop
mov
jno
enter
sbb
in
mov
jno
pop
in
sub
jae
or
pop
or
dec
je
aaa
xchg
adc
ins
pop
dec
test
in
ins
adc
push
pop
jmp
push
jl
adc
mov
popa
sub
jno
mov
adc
add
push
retf
add
je
xor
pop
cmp
out
dec
jmp
jmp
repz
fcomp
dec
pop
adc
pop
shr
(bad)
mov
mov
out
push
stc
adc
jmp
fidivr
or
push
enter
push
add
sbb
push
inc
mov
out
push
push
pop
adc
mov
cdq
inc
cmp
jmp
mov
repnz
jmp
paddb
mov
pcmpgtd
(bad)
push
mov
mov
add
xchg
cmc
push
lods
mov
jns
jns
mov
hlt
mov
daa
mov
aad
jns
jns
or
mov
jns
repnz
popf
mov
aam
aad
test
dec
pop
in
pop
or
adc
adc
pop
popf
cdq
push
cmp
mov
mov
pop
test
ins
inc
pop
jae
adc
mov
dec
pop
popa
xor
scas
cs
pop
push
sub
xor
jmp
pop
push
mov
fimul
adc
pushf
adc
adc
pop
push
rcl
test
jmp
(bad)
enter
push
mov
pop
xor
mov
pop
adc
adc
xor
and
sub
add
and
dec
pop
sbb
bound
outs
add
enter
and
test
mov
or
push
mov
out
sub
pop
add
adc
mov
jno
inc
aad
jns
call
sar
pop
adc
sub
loop
pop
ins
push
inc
dec
test
jmp
and
pusha
mov
clc
inc
sub
pop
iret
inc
and
adc
in
rol
out
jno
out
mov
push
js
push
ret
push
inc
ret
or
cli
mov
repz
lea
std
jle
and
xor
push
jo
les
sti
and
and
sti
and
rcl
std
pop
inc
pop
push
add
cli
fdivr
repz
(bad)
stc
out
push
push
aam
out
jns
test
push
pop
push
nop
inc
adc
and
pop
and
pop
jo
mov
push
mov
pop
mov
pop
ds
jmp
arpl
mov
sub
mov
add
jl
push
les
movs
(bad)
iret
les
and
dec
lds
mov
(bad)
adc
dec
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
enter
mov
or
inc
or
jo
test
enter
clc
sbb
xchg
inc
or
sbb
and
pop
ja
popa
icebp
je
or
or
dec
mov
pop
adc
inc
(bad)
mov
sub
pop
push
sub
xor
sti
mov
pop
push
fimul
adc
adc
cmp
push
test
push
(bad)
cld
pop
adc
rcl
pop
mov
pop
ins
push
xor
pop
aaa
cmp
dec
ins
inc
mov
test
sbb
mov
adc
and
and
dec
pop
cmps
bound
mov
in
and
fadd
jns
pop
aam
jae
xor
xchg
pop
xchg
inc
pop
jno
add
sub
stc
jno
jns
and
stc
cmp
xchg
pop
jno
mov
test
xor
sub
adc
mov
pop
call
pop
mov
aaa
jecxz
inc
sub
pusha
ins
pop
or
or
call
stos
add
into
pop
mov
add
aad
jp
js
pop
dec
leave
push
or
fisubr
push
bswap
das
out
inc
shr
jno
test
or
hlt
test
adc
jbe
push
in
lock
add
les
rcl
push
inc
pusha
dec
les
add
add
adc
inc
push
adc
sub
sbb
push
add
add
inc
out
ja
stos
test
or
dec
pop
addr16
mov
sub
inc
popa
fdiv
stc
and
icebp
cwde
or
cmps
xor
into
and
js
mov
sbb
retf
mov
repnz
inc
(bad)
add
add
sahf
or
push
adc
inc
jb
sbb
sub
push
daa
ins
push
or
fild
push
mov
mov
pop
clc
cwde
bswap
ret
add
shr
pop
jne
xor
sub
inc
sub
call
inc
int
mov
add
pop
push
das
jbe
bound
out
or
fild
test
adc
add
xchg
retf
setle
push
adc
lsl
add
add
xor
dec
loope
xor
popa
add
xchg
lock
and
fld
into
addr16
(bad)
enter
scas
inc
adc
and
push
lds
pop
pop
jo
add
dec
push
mov
mov
rcr
mov
pop
push
adc
adc
call
add
jns
fiadd
push
and
add
add
mov
(bad)
cmp
cmp
mov
or
inc
dec
popa
xor
imul
push
cmp
mov
xor
jno
sti
dec
loope
cli
shl
push
mov
mov
dec
xor
movzx
ror
ss
add
rcr
jae
enter
test
pusha
mov
dec
pop
lds
dec
popa
mov
inc
gs
cmp
rol
mov
leave
leave
leave
std
mov
cs
leave
inc
push
cmp
cs
adc
das
xor
ss
add
jb
xchg
add
or
jp
lahf
pop
test
push
test
std
into
in
jp
rol
sub
push
adc
mov
add
rcr
loopne
add
mov
sbb
add
pusha
daa
xchg
outs
push
push
xchg
call
mov
add
add
add
and
sti
mov
dec
mov
iret
and
and
add
adc
pop
adc
xor
mov
pop
fs
jb
enter
shl
mov
or
cld
mov
daa
cwde
call
jecxz
mov
jo
(bad)
pop
and
mov
icebp
pop
icebp
inc
and
cdq
icebp
dec
jecxz
inc
rol
das
inc
cmp
shl
fcomp
aad
fcmovnb
(bad)
and
add
(bad)
xlat
lock
cmp
add
add
mov
cmp
push
adc
inc
nop
outs
les
cld
push
mov
push
in
push
xchg
dec
dec
and
and
add
jno
dec
mov
xor
les
loopne
bound
and
adc
dec
adc
clc
adc
jo
add
push
test
(bad)
jmp
imul
or
inc
js
outs
sub
cmps
push
test
clc
ss
xor
xchg
push
add
add
inc
inc
jle
fiadd
push
dec
xor
(bad)
scas
mov
test
add
std
jmp
or
pop
sub
cs
repnz
mov
pop
add
add
les
xor
es
jb
nop
add
push
cmc
push
clc
cwde
nop
pop
mov
sub
pop
xor
int
mov
data16
mov
mov
push
bound
or
and
dec
adc
mov
shr
adc
mov
push
push
mov
jecxz
pop
popa
mov
test
jo
aaa
and
es
test
popf
icebp
and
or
mov
mov
imul
add
fld
push
xchg
fiadd
mov
test
lock
call
adc
clc
fild
pop
push
inc
cmc
fdiv
fbstp
loopne
in
(bad)
jl
adc
cmp
mov
xor
add
mul
mov
cmp
add
fcmovnb
push
repnz
lock
xorps
ret
xor
stc
femms
add
fcomp
repnz
lock
movups
mov
add
mov
and
cmovle
pop
dec
add
daa
or
mov
mov
or
(bad)
arpl
es
add
push
xchg
aaa
std
and
push
outs
add
cmp
rcl
and
cmp
leave
push
sbb
cmps
jae
dec
or
cmp
adc
mov
sub
add
test
pop
imul
ror
cmp
fcom
cmp
jmp
outs
jmp
(bad)
outs
jmp
adc
or
or
jmp
test
pop
jo
icebp
or
leave
push
add
or
sub
punpcklbw
sub
pusha
xor
test
pop
xchg
das
fcomp
aas
pop
xchg
mov
pusha
loop
pushf
loopne
loopne
push
jno
mov
mov
ja
mov
iret
rol
dec
mov
(bad)
out
mov
out
add
pop
aas
aaa
add
mov
aas
je
adc
pop
sub
rcr
aas
or
xchg
aam
adc
add
adc
lock
add
loope
xor
icebp
retf
xchg
das
pop
add
add
loop
or
pop
xchg
xor
push
sub
ror
cmp
jo
pop
cmp
xchg
adc
and
inc
ja
add
mov
imul
xor
push
or
cmp
add
jecxz
int
vmovdqa
sbb
daa
add
lods
inc
or
xchg
pop
aad
dec
pop
daa
mov
sub
mov
ins
fistp
(bad)
in
cmp
das
jg
aaa
stos
jmp
popf
rcl
pop
xchg
adc
pop
das
mov
aaa
jnp
and
ja
sahf
cmp
sbb
aaa
adc
add
pop
mov
aaa
push
inc
movs
add
pop
add
pusha
mov
nop
popf
neg
sbb
push
ss
push
pop
add
or
inc
in
xor
or
push
xor
iret
pushf
and
inc
xor
outs
push
and
leave
pop
dec
loopne
adc
dec
popa
js
adc
jle
es
in
mov
add
in
aaa
fmul
sub
out
sub
push
lahf
jae
leave
jo
out
movs
xchg
orps
mov
daa
sub
add
xchg
add
mov
(bad)
mov
cwde
fadd
add
xchg
fist
lds
xchg
xor
xor
inc
ins
xchg
xchg
ins
sub
cwde
fdiv
div
ds
sub
mov
jmp
mov
clc
xchg
pop
mov
add
inc
inc
test
sub
or
les
enter
in
stc
(bad)
out
xchg
add
add
call
gs
adc
cmc
push
jmp
push
cld
pop
das
outs
lea
and
dec
fbld
pop
xlat
dec
pop
or
or
add
adc
lds
and
pop
dec
aam
sbb
mov
xchg
mov
lds
sub
das
jmp
push
test
ins
add
sti
mov
jge
inc
dec
pop
push
pop
icebp
cld
jmp
dec
mov
(bad)
lds
lea
pop
aas
in
and
dec
adc
test
test
ins
inc
jmp
or
or
sbb
jno
jmp
repz
out
push
daa
pusha
in
das
mov
xor
sub
test
mov
not
ficom
adc
in
outs
inc
jb
or
adc
popa
arpl
neg
and
and
popa
addr16
sbb
cmc
sbb
sub
repz
inc
rol
jne
adc
xor
add
inc
loop
div
and
paddb
pop
jge
enter
inc
pusha
outs
repnz
cmp
xchg
inc
or
in
call
leave
leave
in
add
mov
repnz
in
out
sub
in
and
xchg
call
mov
inc
lds
mov
xchg
dec
inc
cdq
push
mov
xchg
inc
outs
iret
cmps
xor
or
lods
adc
shr
or
imul
inc
jns
inc
movs
addr16
mov
ficom
dec
out
scas
or
daa
fsubr
push
sti
test
xchg
or
and
inc
sti
sub
fisttp
daa
add
fs
or
lds
sub
push
inc
jne
xor
inc
sub
add
sub
sbb
mov
inc
aaa
pusha
sub
sub
and
push
sub
or
loopne
xchg
inc
sbb
add
inc
js
pop
and
jo
cmps
pop
dec
shr
aad
sub
push
pop
clc
pop
ins
sbb
or
mov
mov
push
inc
cld
jno
jmp
push
add
stos
(bad)
fcos
dec
inc
xor
mov
ins
inc
add
adc
je
call
or
push
push
adc
cmp
or
and
add
mov
daa
loope
xchg
das
sub
pop
pop
inc
aas
fisttp
pop
mov
scas
add
jnp
or
mov
sub
cmp
lea
imul
repnz
or
cmp
adc
retf
lahf
pop
pop
in
or
fisubr
repnz
add
or
dec
pop
repz
in
repnz
add
scas
movups
repz
adc
cmc
pusha
bound
adc
inc
or
outs
daa
lock
inc
pop
(bad)
or
push
sbb
mov
pop
cmp
ss
jnp
cmps
xchg
sbb
jns
in
cdq
dec
xor
arpl
or
sti
arpl
xor
movs
and
and
and
xor
adc
(bad)
adc
or
xchg
or
fs
popa
in
lock
jo
add
sub
mov
sub
push
pop
mov
movs
ret
add
pop
or
sub
adc
xchg
pop
adc
fbld
aas
adc
adc
xchg
dec
imul
sub
add
aaa
dec
pop
or
hlt
cmps
mov
cmp
neg
ins
cmc
push
sahf
push
fldcw
out
push
adc
inc
xchg
xchg
xchg
clc
sbb
in
repz
adc
pop
aaa
add
cmovbe
adc
and
push
or
shl
add
loope
push
sbb
inc
pop
push
mov
xor
pop
nop
inc
push
xchg
sbb
test
mov
sub
and
pop
sti
mov
mov
movs
ins
js
clc
movs
ja
push
addr16
out
adc
pushf
push
and
dec
test
mov
xchg
pusha
sub
pop
aaa
ss
lds
test
or
push
dec
outs
in
popa
dec
sub
aaa
xor
test
stos
jp
mov
call
mov
sbb
adc
lea
cmp
or
lock
push
fild
or
retf
out
add
sub
out
in
clc
push
daa
inc
hlt
mov
test
cld
inc
int
mov
xor
jmp
inc
ins
push
jae
mov
lea
sub
movs
(bad)
popf
jno
fnstenv
inc
xchg
cli
sbb
pop
mov
push
repz
test
jne
jle
push
push
add
add
add
pop
int
aas
xchg
jb
add
adc
enter
frstor
jl
cmp
xchg
adc
xor
pop
aaa
pop
dec
mov
loop
popf
or
cmp
push
outs
jb
add
daa
adc
push
pop
add
jecxz
xor
daa
lahf
sysret
rol
(bad)
aad
aaa
outs
test
stc
cmps
dec
sti
data16
test
cli
das
fdivr
out
sahf
dec
in
dec
out
call
push
push
adc
pop
add
push
movs
retf
or
in
neg
repz
push
lock
cld
sbb
push
cwde
push
neg
push
loopne
push
mov
jns
out
sub
sbb
inc
dec
push
pusha
out
or
push
mov
(bad)
rcr
lods
push
adc
movs
out
jns
lods
je
add
or
xor
push
enter
jns
fmul
push
adc
neg
out
push
add
sbb
xor
repz
mov
cwde
movs
mov
ds
repz
repz
jo
inc
sub
cwde
mov
jo
adc
(bad)
std
iret
or
add
add
mov
fsubr
push
in
hlt
or
mov
sti
dec
inc
lock
outs
ja
mov
inc
(bad)
jecxz
fwait
jl
push
add
mov
push
mov
or
fbstp
bound
adc
ja
retf
pop
call
pop
fstp
cmp
int3
sti
lahf
fs
pop
shr
pusha
inc
xchg
icebp
fdivrp
pop
xchg
jmp
pop
sbb
sti
jno
inc
std
inc
sbb
retf
arpl
pop
mov
cmp
xor
inc
pop
ins
add
pusha
cld
mov
loop
sbb
add
jne
test
clc
cwde
sti
fistp
fmul
jnp
dec
mov
test
icebp
mov
or
pop
out
hlt
cld
dec
jo
mov
hlt
add
sbb
das
jb
sub
dec
ror
ss
std
xchg
int
sbb
repnz
(bad)
pop
inc
loopne
repnz
call
xchg
adc
mov
mov
inc
dec
dec
sub
test
push
lds
add
lock
inc
sub
loope
and
push
sub
mov
mov
rcr
jae
push
xchg
ret
add
pop
pusha
and
inc
adc
test
inc
push
and
adc
pusha
lea
inc
mov
inc
ret
add
adc
jae
push
(bad)
push
or
mov
pop
popa
lods
sub
lea
xlat
add
arpl
pop
xor
and
jnp
imul
mov
add
ins
lds
jmp
imul
sbb
add
dec
fst
xor
or
xchg
call
jnp
fld
outs
push
xchg
outs
inc
nop
inc
sub
push
mov
add
xchg
add
int
cmp
pop
jl
das
add
add
xor
xor
inc
add
jle
pop
add
aaa
pop
mov
mov
add
xor
loopne
push
addr16
and
enter
xor
addr16
(bad)
shl
nop
(bad)
out
adc
repnz
mov
add
or
xchg
shr
add
js
bsf
stos
sbb
clc
add
xchg
add
push
leave
movlps
pop
or
add
popf
pop
adc
mov
popf
gs
bound
and
enter
adc
adc
jecxz
add
cmp
cmp
cmp
pusha
xor
shr
push
push
xchg
std
aad
scas
add
or
lds
addr16
dec
pop
jp
push
fcom
aaa
aad
mov
(bad)
sub
inc
pop
(bad)
jg
(bad)
pop
and
sub
dec
je
pop
and
(bad)
xchg
and
sbb
les
add
or
pop
pusha
and
int
retf
arpl
push
enter
or
mov
dec
cmp
push
pop
xor
pop
repz
test
cmp
pop
outs
aad
or
adc
inc
inc
ss
pop
shl
jecxz
rcl
pop
pop
adc
xor
pop
xchg
push
push
xchg
std
aad
sbb
in
xchg
or
sahf
sbb
or
and
or
push
pushf
scas
mov
inc
xchg
mov
scas
ltr
push
xchg
dec
cwde
sbb
mov
pop
and
inc
les
or
pop
xor
out
pusha
(bad)
pusha
mov
cmp
push
push
push
or
iret
dec
jae
add
pop
aad
push
pop
ds
inc
mov
add
or
mov
jmp
scas
nop
push
pop
aas
add
xlat
push
(bad)
add
jae
or
out
comiss
bound
add
add
rdpmc
add
push
das
push
syscall
js
stc
ins
add
xor
arpl
cmove
push
or
pop
cmp
fld
or
xadd
stos
frstor
mov
push
daa
push
jae
add
xchg
push
push
stc
xchg
mov
test
push
xor
adc
imul
inc
(bad)
das
cs
inc
popa
push
and
push
pop
xchg
sbb
or
mov
test
cdq
xchg
sub
mov
mov
push
inc
pop
push
add
inc
inc
mov
fwait
push
mov
dec
bound
mov
fiadd
jecxz
jmp
pop
inc
mov
out
das
xor
add
mov
push
pop
cmp
test
dec
push
pop
loope
or
mov
jo
mov
push
mov
dec
int
aaa
and
cmp
pop
popf
or
add
add
pop
loopne
sub
add
lock
adc
adc
adc
jo
cs
adc
pop
xor
pop
fist
sbb
fadd
stos
cmp
mov
pop
mov
mov
add
cld
jecxz
cmp
jbe
push
fs
cmp
loopne
pushf
inc
das
clc
mov
sbb
bound
imul
(bad)
adc
adc
das
ret
jp
rdtsc
add
push
sub
(bad)
add
sub
jo
jb
test
inc
leave
pop
aam
sbb
sub
pop
jae
test
(bad)
mov
pop
dec
ror
cmp
test
push
pop
addr16
xor
xor
mov
push
fnstsw
mov
or
rcl
cmp
sbb
adc
xor
add
adc
mov
add
sub
sub
mov
and
fs
sub
loopne
popa
retf
outs
aad
or
mov
sub
inc
and
add
enter
ja
(bad)
push
rol
add
loope
mov
adc
loope
xor
std
pop
dec
loopne
adc
push
pop
jbe
and
jbe
outs
je
test
adc
jp
mov
sub
cmp
push
rol
out
out
or
adc
sbb
adc
adc
mov
and
jl
add
je
dec
scas
push
adc
adc
inc
inc
dec
inc
add
shl
sbb
loopne
pop
push
cs
ja
dec
push
add
mov
mov
aam
fisttp
iret
xchg
sbb
das
sub
adc
shl
je
inc
mov
sbb
xor
inc
fsub
not
gs
sbb
ins
popa
jo
lock
dec
add
inc
popa
imul
pop
adc
lea
jl
lahf
pop
fs
sbb
test
jecxz
or
add
pop
out
pop
mov
pop
cld
sbb
jo
js
movs
and
lahf
enter
in
cmp
push
pop
sbb
idiv
and
cld
or
dec
lock
jae
ret
or
mov
jecxz
push
jns
shl
std
sar
lock
xor
sbb
or
pop
prefetcht0
je
xchg
add
xor
aaa
loope
sbb
daa
mov
jno
rcr
dec
push
repz
and
clc
inc
fs
dec
sub
in
shl
add
int3
or
mov
xor
arpl
push
pop
cmp
sbb
wbinvd
add
ins
cmps
(bad)
cmps
adc
xlat
sbb
push
adc
icebp
shr
mov
add
pop
xor
std
cld
pushw
xor
jb
or
cmp
sub
adc
xor
not
xor
test
add
mov
push
div
leave
and
mov
aaa
jae
add
add
cmp
in
imul
adc
adc
pop
adc
cmp
sbb
ins
clc
loop
cmps
iret
fld
clts
jns
(bad)
pop
sbb
mov
fs
push
rcr
add
outs
jne
test
cld
mov
push
jo
ror
sub
or
inc
dec
call
dec
cmps
pop
cmc
popa
fwait
ret
and
sbb
popa
jnp
pop
imul
test
adc
sbb
dec
push
jo
in
dec
xor
ret
adc
(bad)
sbb
adc
sbb
sbb
adc
sub
adc
push
sbb
inc
das
push
xor
sub
cs
in
inc
jl
cmp
xchg
push
sbb
xchg
sub
mov
dec
cwde
sbb
inc
rol
pop
mov
lahf
pop
(bad)
push
cmp
out
imul
or
mov
lahf
jns
lods
test
iret
jnp
mov
mov
inc
xor
sub
xchg
cmp
adc
push
cmp
pop
nop
dec
pop
fs
xor
in
dec
outs
or
lds
sbb
loope
movs
add
xchg
add
xor
add
or
test
lods
pop
lds
popa
pop
or
(bad)
jae
push
mov
fistp
push
inc
retf
sub
adc
ret
sar
inc
push
scas
pop
fs
mov
and
es
das
mov
jp
ror
adc
xchg
dec
out
clc
xor
xor
mov
adc
mov
jg
rcl
pop
pop
js
pop
jno
mov
xor
cmc
sbb
je
cmp
adc
jnp
and
shl
inc
dec
add
xor
pop
sub
add
pop
arpl
nop
xchg
dec
add
add
inc
call
loope
fdiv
stc
cmp
pusha
loope
and
mov
(bad)
fstp
das
mov
(bad)
jge
out
ins
in
shr
out
loopne
sub
call
push
and
ja
xchg
push
mov
fidiv
and
test
cmps
sub
aad
xor
aam
or
jecxz
sar
sar
add
fisttp
iret
xchg
es
inc
add
loopne
fs
add
popa
push
sub
adc
add
add
or
jp
dec
pusha
mov
and
int
sbb
xor
pop
shr
fisub
les
and
push
sub
add
in
xor
push
and
and
push
adc
frstor
sbb
and
daa
sbb
es
inc
xor
fistp
ucomiss
mov
es
loop
sub
icebp
loope
call
xchg
pop
dec
or
imul
add
adc
sub
es
cmp
push
and
mov
daa
mov
jo
es
daa
mov
or
jo
mov
test
(bad)
or
dec
inc
sub
and
or
shr
mov
push
jb
sub
xor
rol
add
inc
arpl
sbb
inc
dec
mov
sub
push
sbb
sahf
or
push
neg
inc
icebp
adc
das
mov
pop
mov
sbb
cld
enter
test
rcr
cli
sub
sub
inc
or
add
test
add
xchg
dec
push
movs
xchg
sub
test
in
xor
mov
push
fisttp
xchg
adc
es
enter
sub
loop
test
mov
sub
es
das
fild
jo
mov
add
inc
push
ss
push
xchg
outs
ss
daa
sub
xor
bound
inc
mov
push
sbb
ss
sub
pop
mov
loope
add
jns
push
and
mov
cmp
push
push
jo
in
push
sub
cmp
cmp
ficom
push
movs
out
push
jne
das
push
ins
sub
xchg
sbb
add
test
xor
lods
pushf
xor
push
aam
dec
pop
iret
mov
daa
int3
push
add
xchg
dec
jmp
cmp
add
xor
jae
or
imul
lock
lea
push
inc
inc
jb
ja
jae
outs
loopne
shl
xchg
dec
mov
dec
outs
lods
xchg
dec
pop
fcom
std
adc
push
cs
(bad)
scas
sub
or
xor
and
mov
dec
das
push
test
mov
or
(bad)
seto
xor
xchg
xchg
xchg
xor
into
leave
leave
enter
cmp
icebp
pop
push
imul
cwde
mov
mov
cmp
sub
push
xor
inc
inc
popa
pop
shl
inc
cmp
(bad)
jno
xchg
jno
fcomp
sub
xor
test
fadd
jecxz
or
push
sar
and
dec
test
push
mov
or
sahf
push
or
fsubr
cmps
add
adc
add
add
ins
lea
add
les
jbe
sub
mov
push
xlat
add
sbb
pop
pop
or
push
rcl
(bad)
lock
add
btr
iret
mov
imul
cmp
and
sbb
int
or
and
pop
loope
pop
xor
and
or
loope
cmp
xchg
add
fnsave
cmp
outs
xchg
ficom
xor
or
imul
push
jae
add
dec
push
fwait
push
int
sub
add
mov
xlat
inc
jge
test
mov
or
pop
xchg
sar
xor
xor
jmp
pop
or
dec
jmp
add
fstp
imul
xor
pop
cmp
loopne
add
jae
xor
xchg
xor
cmp
adc
call
ja
jo
movs
or
xor
test
ret
push
adc
lock
xor
popa
inc
fwait
ds
stc
push
fwait
mov
xor
push
adc
adc
lea
mov
pop
movs
sub
inc
cmps
in
xor
pusha
(bad)
sub
adc
push
daa
mov
stos
es
lea
(bad)
aad
popf
add
or
jae
dec
or
les
adc
pcmpeqw
out
popa
movs
sbb
xlat
mov
jmp
vmovupd
cmp
movs
fs
ss
shl
jo
and
pop
popf
rcr
inc
sub
adc
inc
cmp
lahf
dec
sub
rcr
xor
xchg
jnp
mov
(bad)
sar
mov
shl
push
pop
adc
and
dec
cmp
inc
ins
pop
gs
mov
push
fs
test
bound
rol
jns
cmp
inc
mov
mov
jo
(bad)
sbb
sti
loopne
loopne
inc
mov
and
or
jl
inc
sti
or
scas
cmp
and
or
in
mov
loop
jne
pop
cmp
cmp
jnp
(bad)
imul
or
pusha
rol
cmps
xor
add
addr16
ror
adc
outs
mov
ret
cmp
add
mov
jae
(bad)
dec
xor
cmp
stos
jge
cmp
inc
push
loopne
adc
inc
fdivr
ror
ins
add
inc
pop
shl
fistp
mov
js
fwait
mov
int
movs
cmp
mov
adc
rcr
das
ss
adc
(bad)
mov
mov
fild
clc
push
cmp
xor
sub
cmp
mov
push
das
mov
push
fiadd
das
imul
cmp
sbb
inc
fisubr
dec
outs
rol
add
push
rcl
add
xor
mov
sbb
xchg
xchg
daa
sub
mov
leave
enter
inc
inc
mov
fs
ror
push
jbe
in
in
mov
jb
xor
mov
adc
ins
jnp
inc
aas
movzx
call
popa
push
dec
les
sub
inc
xor
add
sub
adc
test
add
dec
add
jge
shl
sbb
jno
call
daa
retf
out
inc
pop
shl
ror
jl
mov
loope
popf
invd
adc
ret
mov
gs
mov
or
mov
loope
pop
or
xor
call
or
add
enter
mov
sub
mov
adc
pop
fwait
mov
xor
pop
add
mov
xor
cmp
fsubp
push
or
adc
rcr
rcr
pop
ret
add
cwde
sub
imul
pop
mov
push
push
xor
mov
pop
xor
or
or
xchg
push
and
adc
jae
jbe
mov
xchg
and
fadd
add
and
pop
dec
aaa
sti
ret
mov
imul
imul
inc
ret
or
xchg
pop
les
fistp
inc
mov
imul
add
mov
jecxz
add
inc
cmp
xchg
dec
enter
inc
imul
dec
or
mov
sar
inc
ins
mov
loope
xchg
inc
or
push
xchg
dec
and
mov
adc
nop
pop
and
lea
push
dec
xor
hlt
adc
push
dec
stos
sbb
push
xor
adc
pop
inc
fnsave
rol
add
adc
lds
icebp
mov
(bad)
adc
or
add
inc
mov
or
popa
xor
jmp
push
dec
mov
fs
mov
or
or
inc
push
test
call
aas
cmp
outs
les
retf
fdivr
add
inc
fwait
jge
enter
sub
jns
das
out
or
test
push
jae
out
sub
(bad)
cs
outs
ins
ds
cmc
push
mov
push
dec
or
mov
les
icebp
push
ins
or
xchg
out
add
bswap
mov
mov
inc
add
ss
aas
mov
sub
fcom
fdiv
adc
sub
(bad)
mov
add
and
neg
jae
test
js
jl
adc
sub
pcmpgtd
add
comiss
push
push
daa
dec
syscall
add
add
jl
retf
sub
and
(bad)
or
icebp
es
push
xchg
and
dec
pop
sub
movs
int
add
xchg
clc
jg
sub
rol
adc
add
push
mov
pop
mov
dec
mov
jae
cmp
dec
pop
or
and
in
xor
cdq
retf
xor
xchg
dec
add
cmova
stc
stos
cdq
cmovo
inc
pextrw
dec
sbb
mov
punpckldq
pushw
mov
sysexit
push
push
sub
int3
push
and
jnp
call
pop
adc
xlat
stos
btc
xor
pusha
cmps
fcom
pcmpgtd
adc
sub
add
pop
sub
dec
mov
sbb
sub
xor
pop
add
popf
(bad)
test
jb
cwde
dec
adc
inc
daa
xor
pop
add
daa
jmp
dec
mov
es
mov
sahf
mov
add
je
lock
mov
mov
hlt
cmp
es
mov
add
adc
js
jo
xor
in
aam
dec
ret
aaa
mov
scas
mov
mov
sti
sahf
(bad)
push
dec
scas
mov
push
xchg
mov
jmp
les
in
push
mov
dec
hlt
stos
jo
mov
pop
mov
or
or
sbb
pop
inc
mov
mov
jae
push
nop
ds
imul
add
sbb
pop
lea
xor
mov
jge
pop
pop
pop
add
push
je
outs
es
pop
sub
inc
jnp
cmp
jge
inc
pop
push
mov
pop
xor
leave
mov
pop
pop
xchg
mov
mov
mov
test
adc
adc
add
jbe
pop
xchg
push
push
cli
add
push
pop
jb
adc
clc
jo
fst
dec
cli
clc
cmp
iret
mov
push
rcr
not
popf
outs
(bad)
fiadd
sbb
inc
rcl
dec
fistp
jl
ss
pop
es
mov
fcomp
push
push
(bad)
pop
adc
cmp
cs
add
push
retf
inc
leave
loope
iret
cmp
push
call
aam
add
dec
dec
push
or
ds
pop
push
das
sub
xlat
pop
and
cmp
enter
adc
aad
movs
inc
test
cmp
enter
push
mov
sbb
aad
mov
jnp
aam
shl
add
push
aad
maskmovq
neg
adc
pop
gs
cmp
push
pop
jo
fistp
inc
and
push
les
add
push
addr16
shl
jnp
lea
push
or
pop
adc
clc
xor
mov
sbb
mov
sti
out
adc
mov
mov
sbb
cwde
push
mov
xor
or
js
aaa
test
adc
js
mov
mov
mov
dec
je
mov
dec
lock
adc
jp
(bad)
mov
fisub
fstp
pop
ret
(bad)
pusha
retf
rol
fdiv
(bad)
rcl
xor
in
inc
inc
inc
jo
rcr
inc
(bad)
push
fadd
shl
call
mov
scas
mov
jne
inc
add
(bad)
mov
call
dec
ss
push
test
jl
push
(bad)
xor
mov
mov
mov
call
daa
mov
mov
sub
in
lea
adc
leave
mov
ret
inc
ins
outs
inc
pusha
pop
add
mov
pusha
pop
std
fcomip
sbb
nop
push
cmp
or
inc
sbb
push
sbb
jle
mov
shr
mov
mov
cmp
mov
mov
or
cmp
addr16
adc
cmp
jle
sar
clc
dec
movs
ret
push
mov
gs
lea
push
enter
mov
mov
rcr
adc
push
ret
jmp
inc
pop
adc
clc
popa
pop
outs
mov
pminub
sbb
cmp
fisttp
clc
mov
fld
jbe
js
push
lea
inc
inc
or
add
adc
xchg
test
jge
outs
outs
sbb
adc
add
jmp
mov
daa
sbb
fcomp
in
mov
sub
clc
test
jne
imul
bound
test
xlat
jg
lock
(bad)
clc
mov
pop
ret
das
int3
add
add
fchs
push
mov
mov
mov
pop
adc
cld
xor
add
je
cmp
push
lock
cmp
jne
jle
imul
je
loopne
bound
sub
xlat
ror
pop
mov
shl
jle
idiv
ins
sti
pop
int3
ret
jo
dec
cmp
or
push
les
cmp
mov
dec
push
mov
add
or
cmp
mov
xor
sub
dec
inc
dec
jne
sub
stc
adc
add
and
nop
or
mov
and
xor
jl
jb
mov
lock
xor
sub
cmp
jle
pop
sti
mov
mov
ret
cmps
mov
lods
push
add
data16
pop
or
outs
mov
sbb
outs
cmp
xchg
dec
cs
mov
mov
lods
test
sub
ins
mov
add
or
inc
imul
push
dec
push
push
ds
je
jnp
sbb
inc
or
push
fnstsw
jne
arpl
push
push
fisubr
stos
sub
dec
push
bound
add
out
or
daa
ss
push
jns
dec
mov
bound
pop
neg
jne
dec
jae
ins
push
bound
or
xor
push
imul
cmps
adc
fisubr
dec
push
adc
adc
mov
popa
movq
pop
leave
push
xchg
jmp
das
ss
lock
pop
xlat
dec
ja
xor
and
dec
sar
add
jnp
xor
add
push
mov
call
cmp
out
lea
xor
or
retf
cmp
push
psubsb
clc
add
call
aam
jmp
and
fstp
cmp
mov
push
mov
push
pop
mov
adc
ds
lock
popf
(bad)
imul
mov
mov
shl
mov
dec
push
clc
jg
pop
add
or
mov
pop
mov
or
aad
into
jmp
scas
pop
cmps
iret
out
loopne
pushf
mov
mov
push
add
add
cmp
arpl
ror
sbb
xor
add
test
or
pop
mov
ja
retf
sub
(bad)
(bad)
(bad)
fild
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
jle
lock
and
add
repz
pop
pop
and
dec
pop
iret
repz
ins
jle
mov
repz
in
push
pop
pop
jns
out
sub
dec
pop
ins
out
sahf
out
mov
jns
shl
hlt
add
out
sahf
out
dec
push
gs
(bad)
jns
or
sbb
and
cmp
test
inc
jns
inc
sbb
enter
enter
inc
pcmpgtb
cmp
fisub
add
pop
repnz
in
adc
ins
push
xor
add
and
loope
das
in
and
or
out
pmulhuw
pusha
push
mov
push
enter
clc
sbb
rol
ret
in
and
in
sub
enter
push
nop
fld
in
enter
out
xchg
or
jmp
js
scas
jmp
push
pop
adc
push
test
scas
enter
clc
add
mov
(bad)
retf
lock
jbe
adc
mov
cmp
fcomip
mov
js
add
rol
lock
jne
dec
mov
mov
pop
pop
push
and
cmps
jg
ja
es
test
je
mov
inc
mov
mov
mov
xchg
mov
mov
xor
and
daa
inc
lock
pop
add
mov
mov
push
mov
sbb
lea
cld
jecxz
mov
or
adc
pop
jbe
cld
mov
cdq
movs
lods
sbb
cmp
pusha
xchg
inc
cmp
inc
jg
jg
adc
loope
mov
push
xor
jmp
push
fs
setne
neg
mov
adc
mov
add
pop
daa
or
es
into
les
sti
push
and
mov
mov
or
pop
push
jb
jge
inc
sub
sbb
sub
xor
push
jnp
mov
add
add
push
jb
and
xchg
int3
test
or
inc
outs
call
dec
dec
sar
sub
pop
mov
mov
ds
adc
cmp
jbe
mov
sbb
mov
dec
xor
(bad)
or
ficom
(bad)
pop
repnz
bound
jno
retf
sub
sbb
xor
je
xchg
adc
push
sbb
push
or
add
inc
or
scas
mov
mov
pop
pop
ret
fstp
adc
or
fdivr
sbb
cld
and
mov
rcl
push
sub
push
stos
pop
pop
push
dec
jmp
ja
or
adc
add
xchg
dec
fadd
or
add
adc
out
lock
cs
add
mul
sbb
imul
cdq
push
adc
arpl
fild
out
ds
in
std
push
fs
push
sahf
out
sahf
arpl
out
out
(bad)
aad
xchg
bswap
repz
or
push
bound
sbb
push
xor
stos
mov
mov
movs
cmp
xchg
ins
test
int3
jb
xchg
adc
inc
xor
xor
inc
xor
nop
xor
xor
nop
inc
or
xchg
and
xchg
cmp
ins
ja
and
nop
movs
jmp
sbb
nop
out
mov
enter
imul
adc
xor
push
loope
pop
push
push
nop
cmp
add
or
gs
bound
xor
sub
ret
shr
push
es
push
dec
call
dec
add
push
add
cld
fdivp
and
xor
inc
sbb
inc
mov
outs
push
mov
das
dec
add
out
pusha
das
add
mov
lds
pop
das
xor
xchg
ret
das
xor
fidiv
cwde
das
push
push
push
jnp
shr
inc
and
(bad)
jbe
aaa
add
pop
sub
es
out
imul
adc
(bad)
dec
xchg
add
aas
push
test
mov
scas
push
push
sbb
faddp
ja
jp
cs
or
push
dec
dec
inc
dec
fidiv
pop
(bad)
enter
inc
xlat
pusha
pop
xacquire
xchg
push
pop
or
push
test
mul
inc
call
jnp
mov
pop
inc
adc
cmp
or
ds
outs
es
or
jne
jb
arpl
lahf
push
or
imul
add
loopne
dec
inc
push
inc
not
ds
fisttp
dec
(bad)
faddp
cmps
xchg
sub
add
sub
repnz
retf
cmp
mov
push
mov
xor
mov
xchg
dec
loopne
shl
in
test
jo
les
dec
dec
call
jae
daa
jle
inc
in
mov
in
daa
jle
push
jb
hlt
es
xchg
in
push
loopne
dec
xchg
or
xchg
xchg
loopne
jno
add
das
xchg
mov
xlat
sub
add
adc
mov
add
push
xor
test
jecxz
add
and
div
cmp
or
cwde
inc
inc
inc
repz
xchg
adc
pop
add
in
add
pop
hlt
lea
or
inc
adc
std
nop
xchg
xchg
sub
aaa
(bad)
pop
clc
mov
mov
cmc
sub
add
int3
rcl
stos
ins
inc
shr
sub
dec
js
push
inc
mov
push
mov
fdivr
push
sbb
push
cmp
push
hlt
fistp
jne
mov
jmp
cmp
push
or
add
out
loopne
mov
mov
mov
fsubr
and
jbe
push
call
nop
mov
lock
xchg
clc
xchg
mov
sub
fcom
mov
fst
ins
(bad)
rcl
pop
adc
xlat
adc
sub
jo
rol
rcl
int3
nop
add
mov
jge
inc
push
adc
sbb
imul
pop
push
(bad)
add
fs
jo
add
or
sub
adc
fild
jge
outs
jmp
punpcklbw
cmp
or
cmp
call
pop
rol
xchg
pop
ja
test
and
jmp
loop
(bad)
pop
inc
das
cvtdq2ps
dec
(bad)
jmp
and
xor
or
lock
or
push
pop
arpl
scas
or
xor
push
jge
out
dec
loope
dec
xchg
inc
jo
(bad)
imul
push
push
(bad)
dec
fld
push
pop
xor
or
dec
push
(bad)
stos
sub
add
or
add
ss
pop
sub
sbb
(bad)
mov
mov
cmp
pop
(bad)
rol
push
push
mov
xor
in
enter
inc
sub
std
and
push
mov
aaa
push
adc
lea
jno
fimul
fsub
cmp
push
pusha
mov
and
clc
mov
sub
sbb
into
fs
push
push
sti
jmp
ficom
inc
adc
mov
sbb
and
iret
push
(bad)
ja
fadd
dec
or
jp
pop
cmp
pop
into
pushf
mov
popa
sbb
mov
inc
outs
pop
mov
pusha
or
jmp
lea
mov
aaa
mov
jmp
xchg
into
jl
jmp
cmp
jg
pop
or
mov
cmp
jne
mov
rcr
jne
lods
ror
push
push
dec
mov
sbb
jo
jno
add
sbb
pop
mov
inc
jge
sbb
and
inc
sbb
pop
add
mov
mov
(bad)
mov
push
test
xchg
cmp
jne
or
push
push
cmp
mov
push
mov
test
dec
movs
adc
mov
mov
or
sbb
imul
push
fcom
or
adc
dec
add
(bad)
jle
mov
adc
shl
inc
sbb
xchg
adc
stos
or
and
sbb
sub
push
into
int
mov
popa
and
loope
call
xor
enter
mov
pop
push
rcr
cs
mov
push
push
or
int3
fs
imul
lea
je
test
inc
inc
cmp
push
cmp
or
mov
pop
adc
xor
xchg
loopne
cmp
test
mov
adc
xor
mov
mov
call
leave
cmp
mov
dec
movs
clc
inc
cmp
(bad)
and
sbb
cmp
sbb
cwde
push
ins
outs
push
push
pop
jb
ss
dec
popf
stos
arpl
push
rcl
dec
push
sbb
inc
popa
mov
mov
add
and
inc
sub
(bad)
sbb
call
mov
or
jg
imul
pop
jg
mov
jnp
push
add
dec
inc
call
inc
adc
and
frstor
xchg
pop
push
mov
inc
popf
lods
sub
mov
dec
sub
lock
jle
mov
sub
scas
sbb
inc
push
loopne
hlt
add
or
mov
imul
pop
bound
cs
push
jecxz
pusha
call
add
mov
sbb
test
(bad)
(bad)
jno
or
jmp
dec
je
push
add
ret
mov
pop
clc
and
push
mov
invd
dec
test
ja
(bad)
ja
lock
mov
in
sbb
jbe
(bad)
scas
cmp
cmp
std
scas
xchg
pop
repnz
push
sub
daa
popa
and
fidivr
sbb
xor
adc
inc
add
ins
inc
and
retf
lahf
(bad)
std
lods
push
loope
fs
rcr
ror
mov
call
psubb
and
inc
inc
add
aas
xchg
add
outs
in
mov
cmps
inc
test
push
clc
ss
push
sbb
outs
clc
loope
icebp
rcl
cmp
mov
dec
add
imul
popa
cmp
or
sbb
pop
jle
clc
mov
xor
pusha
gs
pop
mov
aam
mov
sbb
fild
or
mov
pop
xor
cmp
pop
pop
sbb
add
cli
or
rcl
xor
and
or
sub
enter
cmp
push
sub
inc
push
dec
test
add
gs
push
xor
mov
dec
ins
inc
and
movs
imul
jne
and
loopne
add
nop
cmovbe
cmp
sub
or
pop
or
sub
sbb
inc
add
add
mov
jmp
sbb
adc
push
popf
shr
aas
jns
push
and
sbb
add
daa
sub
rol
and
enter
daa
nop
sbb
xor
push
loop
out
psllw
and
scas
pop
pop
lock
or
jl
hlt
ret
sub
jne
jp
adc
xor
loope
add
dec
hlt
mov
rcr
xor
fisub
sub
xor
push
(bad)
cmps
movs
sbb
into
cmp
mov
adc
or
add
and
sbb
inc
sti
mov
mov
jne
loope
bound
pop
push
xor
cmps
lea
mov
adc
shl
int
or
(bad)
fs
daa
push
xor
adc
inc
or
sbb
sbb
add
sbb
pop
and
cmp
ins
add
repz
add
rcr
jo
in
popa
push
or
aas
aad
in
dec
pop
push
cmp
rol
aad
mov
fwait
sbb
call
add
(bad)
in
sbb
icebp
das
ja
out
call
push
inc
or
ds
or
in
sub
push
push
cmp
sbb
adc
xor
test
adc
mov
out
cmc
add
int
lea
icebp
mov
jno
pusha
add
jge
push
and
xor
inc
repnz
ror
adc
in
movs
inc
xor
sbb
mov
imul
fchs
push
sbb
or
shl
jbe
jmp
jle
jbe
jbe
fwait
pop
shl
jne
mov
cmp
int
jbe
add
xor
jmp
add
sub
adc
inc
push
out
push
pop
or
pop
out
inc
pop
dec
jp
std
outs
push
pop
cmp
sbb
or
sbb
and
aas
and
lock
fcom
mov
add
arpl
lds
cmp
xor
push
xor
mov
inc
mov
loopne
mov
sub
dec
in
xor
inc
sbb
sbb
ret
popa
imul
ret
adc
inc
dec
jne
scas
or
inc
and
mov
pop
fild
push
sets
mov
into
mov
mov
sahf
shr
xchg
test
lds
cmps
add
outs
outs
or
sbb
iret
jg
in
sub
jo
fs
cmp
push
adc
(bad)
jg
or
out
jge
xchg
lock
jne
arpl
hlt
pusha
and
cmc
and
or
and
or
xchg
sbb
mov
push
nop
pop
call
aam
sub
rcl
or
cmp
mov
nop
inc
loop
adc
push
mov
ins
mov
inc
daa
gs
or
dec
sbb
cs
inc
mov
push
sbb
hlt
inc
adc
adc
out
adc
sub
adc
adc
je
into
or
icebp
adc
xchg
outs
sbb
test
(bad)
push
mov
mov
cmp
sbb
adc
push
fst
sub
adc
nop
iret
mov
xor
test
les
add
inc
sub
pop
and
and
push
or
jo
jns
sub
loopne
loope
cmps
push
(bad)
or
hlt
aam
dec
mov
test
(bad)
in
movs
pop
adc
push
imul
add
pop
dec
add
and
adc
xor
lods
js
outs
push
div
sub
pop
add
ins
xor
dec
fsub
dec
push
(bad)
xchg
add
sar
mov
add
(bad)
cdq
ret
dec
js
ja
out
or
fadd
jmp
mov
push
stos
aam
mov
sti
pop
add
mov
test
jmp
movs
jge
xchg
test
das
pushf
push
js
iret
repz
sub
xchg
repz
push
scas
cmp
pop
out
hlt
loope
push
ror
mov
pop
cmp
xchg
and
xchg
sahf
jne
sub
xchg
sub
sub
ja
nop
sub
arpl
pop
idiv
mov
sub
pusha
push
sub
leave
sub
sub
dec
pop
cmp
test
sti
lahf
(bad)
cmps
sub
pop
call
jne
push
and
push
and
jnp
add
xor
sbb
movs
lock
dec
popa
leave
and
inc
and
js
pusha
fsub
imul
and
dec
repnz
and
sbb
fs
mov
shl
or
sub
sub
add
dec
ja
add
ret
sub
add
and
jl
cmp
xchg
mov
push
sbb
lods
call
push
pop
test
adc
mov
and
push
jne
lods
push
(bad)
cld
dec
pop
adc
daa
pop
lock
xlat
ret
mov
sbb
xchg
cmp
ss
push
mov
fcom
nop
or
add
and
es
pop
(bad)
ss
dec
pop
or
or
adc
faddp
inc
push
inc
hlt
lea
mov
sti
dec
scas
ror
jno
add
adc
or
lods
sbb
or
ret
cmps
mov
addr16
ret
sub
and
and
pop
push
(bad)
add
jae
mov
fs
push
ins
mov
and
mov
adc
sbb
xchg
dec
ds
dec
cdq
dec
sbb
push
fsubp
adc
mov
fisub
(bad)
ds
xchg
js
loope
sbb
add
fimul
sahf
fisubr
push
(bad)
pushf
sub
(bad)
rcr
(bad)
fst
dec
pop
dec
push
push
cmp
outs
in
test
cwde
mov
shrd
mov
sbb
pop
lahf
pop
psrlq
gs
mov
adc
xor
nop
or
pop
sbb
and
mov
sbb
es
pusha
sub
or
push
pushf
or
das
mov
pop
ret
mov
or
and
aas
outs
bound
sub
icebp
add
push
push
pop
cmps
xor
xlat
imul
mov
xchg
inc
ret
outs
or
push
push
xchg
add
sub
cmps
daa
adc
pop
jb
jne
adc
mov
sub
sub
and
fisttp
pop
xlat
add
mov
pop
cmp
lods
or
or
or
pop
inc
mov
enter
mov
mov
cwde
mov
aas
out
sub
adc
or
push
in
push
adc
fild
push
sub
outs
lods
loopne
push
pop
mov
xchg
cmp
cs
mov
in
dec
inc
sbb
sbb
fwait
inc
not
frstor
outs
push
mov
sbb
sbb
xlat
out
jl
lea
pop
jo
mov
adc
jno
sbb
add
in
loope
adc
or
mov
fwait
in
nop
push
inc
push
cmps
mov
sahf
dec
mov
adc
dec
xor
fmul
jae
mov
retf
aam
loope
and
push
mov
fstp
mov
jmp
movs
push
(bad)
dec
push
jo
push
sbb
aaa
xchg
ins
xchg
lahf
push
loopne
test
ja
scas
fst
dec
loope
movs
add
and
mov
jmp
add
stos
mov
(bad)
inc
aaa
push
inc
pop
mov
or
(bad)
nop
imul
cmp
or
xor
pop
mov
in
nop
call
test
dec
sbb
push
xor
adc
and
inc
daa
out
ss
xor
test
mov
inc
add
enter
and
cmp
pop
cmp
pusha
lahf
aas
inc
aam
(bad)
loopne
clts
(bad)
jne
xchg
aaa
test
inc
call
fild
mov
add
ds
jne
in
cmp
xchg
cmps
push
lock
data16
fiadd
lds
cmp
jl
sub
outs
xchg
push
xor
pop
test
outs
jl
or
dec
mov
into
fistp
lock
mov
popa
neg
inc
mov
jnp
or
xchg
push
mov
xlat
lock
pop
add
test
dec
jge
cmp
jmp
mov
jecxz
mov
inc
das
adc
and
jo
lock
jl
inc
push
cmp
and
cwde
lods
add
clc
pop
shr
pop
mov
jmp
inc
dec
jne
iret
jp
hlt
hlt
imul
add
test
cwde
retf
enter
sub
inc
into
in
aas
addr16
mov
repz
and
or
dec
inc
js
ror
mov
ds
lods
test
add
sbb
mov
leave
pop
add
lea
pusha
inc
inc
dec
add
js
inc
pop
add
or
mov
pop
xlat
add
mov
xchg
xlat
sbb
ror
cmp
push
xchg
das
iret
pop
ins
mov
aaa
imul
jg
cmp
pop
jle
shl
sub
jle
aad
push
adc
pop
add
push
push
cdq
mov
sbb
cmp
jge
data16
add
aas
les
and
jle
mov
adc
jb
xchg
or
mov
dec
test
dec
and
in
sbb
lahf
loopne
les
int3
dec
jae
test
sbb
pop
push
push
cld
in
add
sub
or
inc
shr
ror
and
xor
jmp
adc
in
mov
sbb
adc
cmp
dec
push
sub
pop
pop
mov
push
mov
js
jmp
bound
dec
jo
sub
jl
inc
xor
movs
mov
xchg
mov
cwde
pop
outs
aad
inc
mov
inc
jl
out
lds
mov
adc
and
dec
dec
(bad)
ins
mov
(bad)
sub
lds
xor
test
scas
popa
enter
or
inc
jl
and
dec
mov
movs
loopne
pusha
aas
add
js
inc
xchg
imul
push
inc
sbb
push
or
mov
and
outs
aaa
inc
adc
or
adc
test
sub
mov
cwde
mov
call
mov
push
or
push
or
fcomp
inc
mov
mov
pop
add
inc
sbb
cmp
dec
adc
les
out
xchg
movs
adc
mov
jg
xchg
inc
mov
lea
fdivr
test
lock
inc
or
test
mov
mov
std
daa
push
push
adc
sub
or
clc
or
mov
movs
jbe
loop
sar
add
lods
mov
sub
daa
pop
xor
cmp
call
dec
fnstcw
xor
sub
mov
sub
mov
pop
sbb
adc
or
sbb
arpl
jmp
xchg
or
or
pop
outs
cmp
pop
xor
cmp
dec
add
jo
stos
adc
push
dec
cmp
scas
pop
pop
xor
add
icebp
mov
jae
popf
add
neg
push
cmp
(bad)
outs
ds
add
scas
mov
arpl
xchg
arpl
dec
sub
dec
ins
add
mov
cmp
adc
push
addr16
add
je
push
cmps
and
pop
outs
adc
sub
aad
ss
sbb
add
aas
xchg
or
and
sbb
xor
xor
mul
push
adc
data16
lods
sbb
inc
sbb
out
jb
pop
dec
sbb
mov
push
outs
cmps
sbb
jnp
jae
(bad)
push
sbb
mov
push
mov
push
xchg
cmp
outs
mov
push
ret
fs
sbb
mov
dec
loop
lahf
je
arpl
sbb
fs
test
ins
and
cwde
mov
push
scas
inc
xor
test
pusha
or
sbb
icebp
add
mov
rcr
pop
push
add
push
push
rol
out
pop
les
cmp
or
loope
or
sbb
(bad)
aas
or
cmp
jb
sub
cmps
pop
sbb
(bad)
movs
lods
sahf
popf
mov
pop
mov
add
cmp
fs
rcr
cdq
shl
xchg
cwde
dec
xor
fild
sti
xchg
movs
xchg
movs
(bad)
(bad)
arpl
scas
movs
xchg
test
aas
test
mov
ret
in
int3
add
aas
test
ret
mov
or
dec
test
rcl
inc
cmp
mov
or
nop
or
dec
pop
or
clc
and
xchg
neg
adc
push
mov
push
pop
mov
push
xchg
jmp
mov
(bad)
das
pop
lods
mov
shr
(bad)
ds
push
daa
test
mov
inc
xchg
popf
add
jno
js
add
inc
es
xor
inc
push
cdq
nop
ins
ins
je
ret
hlt
iret
sub
cmp
imul
sbb
cmp
aaa
mov
mov
or
rol
aaa
nop
mov
das
adc
xchg
clc
fld
mov
ret
pushf
add
daa
and
pushf
sbb
fs
dec
pop
add
jmp
dec
shl
shl
jmp
xor
push
sti
and
inc
mov
xlat
xchg
mov
lods
std
(bad)
dec
mov
pop
leave
gs
sub
push
test
mov
shl
in
mov
mov
shr
in
dec
jns
xchg
fcomp
mov
bound
cmp
test
push
cmp
cli
rcl
jns
dec
loopne
pop
pop
push
repz
ins
push
bound
movs
and
adc
sbb
sbb
sub
in
inc
and
push
sub
cmps
imul
or
xor
ss
mov
sbb
adc
push
scas
inc
mov
mov
out
loopne
in
loopne
dec
dec
jb
dec
ror
nop
inc
or
ds
cmp
push
xor
pop
push
push
lds
add
mov
loopne
sub
ret
aam
inc
bound
sub
fnstsw
das
rcr
sti
outs
mov
pop
mov
jl
jb
daa
das
out
jne
or
jecxz
xchg
push
and
xor
xchg
sar
adc
rol
dec
xor
and
sbb
pop
add
jmp
adc
push
fcomp
test
inc
lahf
pop
xchg
nop
push
int
sub
mov
inc
and
push
aad
retf
ror
test
cmp
pop
mov
and
lods
pop
mov
test
hlt
xchg
or
dec
jne
push
adc
int
cmp
out
sub
pop
pop
pop
cmp
cmp
imul
nop
fmul
xor
mov
(bad)
and
aam
push
add
sar
mov
jae
mov
xor
aam
retf
dec
mov
stc
xchg
dec
jmp
stos
data16
cmp
push
mov
stos
(bad)
sbb
sub
xchg
xchg
xor
adc
push
sub
ret
jp
jne
and
daa
mov
and
or
bound
fcompp
fstp
test
inc
push
cmp
inc
adc
icebp
dec
or
push
dec
mov
ins
adc
xchg
mov
cld
add
or
test
loopne
dec
push
mov
or
dec
loopne
test
mov
das
jecxz
pop
add
lahf
outs
or
xlat
aas
adc
les
and
addr16
clc
mov
pop
inc
add
addr16
inc
add
xchg
test
or
inc
rcl
inc
cwde
push
xchg
test
inc
add
sbb
add
les
mov
bound
mov
icebp
pop
pop
test
mov
pop
xchg
sub
push
ja
mov
and
loopne
(bad)
out
xchg
shl
loope
nop
push
adc
in
mov
jl
sbb
adc
sbb
mov
xor
adc
sbb
inc
adc
and
clc
dec
stos
je
or
jge
mov
jmp
xchg
popa
addr16
daa
sub
inc
adc
retf
sub
or
and
cmp
sbb
js
jnp
stos
retf
movs
mov
(bad)
push
mov
or
pusha
movs
les
push
push
adc
fcomi
pop
xchg
ret
push
dec
sbb
mov
add
inc
(bad)
test
ja
les
sub
or
jbe
and
mov
outs
sub
(bad)
fist
js
inc
pop
add
dec
int
leave
add
mov
pop
push
cmp
and
ins
dec
dec
and
lods
add
jo
(bad)
sar
jmp
pop
ss
inc
(bad)
mov
add
test
xor
int
(bad)
add
pop
retf
inc
cdq
outs
call
je
adc
or
jne
sub
mov
or
pop
dec
jno
and
jo
in
lods
dec
cld
jns
ret
cmp
push
dec
ja
cmps
lods
push
cs
gs
out
push
jo
jecxz
push
sub
mov
fidivr
and
cmp
sbb
in
sub
inc
scas
loopne
push
add
xchg
sbb
mov
idiv
or
jo
push
scas
xchg
xchg
or
add
inc
and
mul
sbb
scas
imul
ret
xor
push
bound
xchg
rcl
rcr
jo
push
xor
sbb
add
jns
lss
scas
fld
test
fs
fstp
fwait
movzx
push
add
ret
inc
and
push
test
adc
mov
daa
in
inc
cs
outs
inc
scas
jecxz
push
or
mov
xchg
das
dec
lods
pop
jecxz
mov
scas
movsx
imul
add
sub
fcmovnu
sbb
mov
adc
push
jb
mov
mov
enter
jne
or
xchg
sub
lods
xchg
mov
and
ret
shl
mov
in
rcl
mov
xchg
add
xor
(bad)
mov
add
stos
fist
cmps
inc
add
mov
pop
adc
out
ret
(bad)
cmp
test
je
push
repnz
arpl
scas
cmp
mov
inc
adc
cmp
test
mov
enter
lea
mov
xchg
mov
pop
pop
inc
add
fbstp
push
mov
and
mov
lea
sbb
cmp
loopne
fadd
inc
mov
je
cmp
or
push
or
loopne
mov
sbb
loop
aas
pop
add
pusha
sbb
js
or
pop
and
sbb
fisttp
js
adc
pusha
mov
mov
jle
(bad)
call
mov
sbb
mov
nop
mov
sbb
push
push
rol
jo
lods
pop
shl
mov
aam
fild
cs
push
pushf
out
out
add
lock
add
in
or
jne
pop
sbb
dec
rcl
mov
dec
and
push
add
dec
and
test
add
shl
int3
push
mov
int3
pop
xchg
dec
jo
loope
or
xor
loopne
in
ins
push
call
in
loopne
adc
(bad)
mov
jge
fld
fstp
fwait
and
sbb
lock
loopne
push
daa
push
xchg
clc
rol
inc
clc
stc
mov
mov
push
inc
push
dec
xlat
adc
push
in
out
iret
div
hlt
add
frstor
inc
nop
mov
adc
in
imul
add
sbb
ja
push
imul
imul
lock
hlt
inc
add
or
(bad)
or
push
(bad)
mov
inc
bound
dec
and
imul
mov
mov
into
sbb
mov
mov
and
test
leave
or
push
mov
mov
sub
xor
adc
pushf
and
pusha
lock
add
adc
mov
iret
mov
jecxz
adc
xlat
dec
mov
sbb
jbe
(bad)
ffreep
les
test
je
sub
mov
xchg
adc
or
push
cmp
or
test
dec
mov
sar
in
inc
sbb
loopne
pop
mov
or
mov
sbb
mov
daa
push
in
add
mov
push
dec
(bad)
push
jo
daa
loopne
test
icebp
dec
inc
shl
jnp
movs
repz
or
lea
test
mov
scas
mov
pop
ret
push
mov
enter
xor
enter
cmp
pop
fs
push
stos
test
cmp
mov
cmp
jb
or
xchg
ins
nop
cmp
mov
fadd
out
scas
fwait
test
xchg
cmps
push
lods
movs
mov
adc
repnz
je
mov
mov
dec
adc
cmps
jmp
sub
loope
out
es
or
push
in
push
add
lahf
inc
aaa
retf
mov
mov
and
jbe
add
pop
ds
pop
sti
std
sub
sbb
push
cmp
and
lds
dec
lods
sbb
out
aas
mov
push
mov
xor
xchg
fdiv
ror
ret
jp
jg
cmp
clc
adc
jmp
jmp
mov
add
mov
push
adc
sbb
add
sbb
mov
iret
sub
xlat
xchg
pop
lods
test
pop
jge
jo
add
add
pop
cs
sub
pop
scas
sbb
js
add
lods
xchg
scas
dec
std
lock
sub
inc
and
jcxz
frstor
iret
add
fdiv
sub
das
loopne
out
pop
(bad)
(bad)
enter
dec
scas
push
loop
or
mov
ss
les
pop
pop
dec
jne
add
push
xchg
fmul
add
dec
jo
sub
outs
pop
retf
loopne
cmp
les
mov
retf
sbb
and
sar
fwait
pop
cmp
xor
movsx
or
lea
sbb
ret
add
add
jge
or
dec
sar
loopne
sar
movsx
mov
mov
ret
aam
loop
add
inc
pop
in
mov
or
mov
je
mov
adc
iret
inc
cmp
cmc
dec
inc
ins
test
(bad)
adc
cmps
or
or
cmp
mov
xor
jbe
jmp
add
inc
cmps
push
rcl
inc
mov
cmp
jl
cmp
leave
inc
sbb
adc
pop
jl
push
sbb
aas
or
xor
inc
adc
push
fsubr
xchg
cmp
or
xchg
adc
pushf
jg
cdq
adc
das
adc
push
or
dec
inc
add
inc
out
pop
add
xlat
cs
dec
cmps
sbb
sbb
cmp
mov
cmp
xchg
cmp
enter
ins
test
and
add
push
iret
ins
xor
ja
ins
or
add
add
pop
xchg
or
jnp
inc
cwde
add
rcl
ins
(bad)
movs
rcr
push
or
xor
and
mov
or
je
xchg
rol
mov
mov
sidtd
xor
cwde
xchg
push
pop
inc
mov
sbb
(bad)
fisttp
xchg
clc
repz
xchg
cmp
(bad)
mov
jge
mov
cmp
daa
jae
popf
ror
lea
es
adc
inc
enter
loop
mov
or
clc
test
or
adc
cmps
loope
inc
daa
adc
or
daa
jmp
leave
sbb
adc
mov
add
test
cwde
addr16
movs
fmul
and
lahf
pusha
cwde
ret
retf
cld
add
test
and
pop
pop
test
adc
test
lods
xor
test
jge
sub
push
jmp
retf
stos
adc
xor
push
aas
or
xor
stos
adc
xor
jmp
xor
adc
int3
sbb
stos
push
or
push
adc
(bad)
mov
outs
int3
mov
outs
mov
ins
mov
int
popa
pusha
je
jno
dec
cli
adc
sub
jo
inc
dec
sub
lea
scas
loopne
movs
setno
mov
inc
cwde
int
dec
add
jns
or
aas
scas
ins
into
sbb
scas
(bad)
sbb
sbb
adc
add
daa
add
iret
add
jo
add
add
dec
addr16
popa
sar
iret
in
add
hlt
mov
push
iret
or
nop
cmp
sahf
lea
pop
jbe
or
test
iret
iret
icebp
xor
sbb
and
cmc
iret
jmp
js
pop
ins
pop
rcl
dec
inc
sub
shl
sbb
adc
xchg
add
jmp
stos
or
sar
rcl
shl
and
inc
das
stos
data16
arpl
sub
mov
lods
sub
or
add
bound
add
test
shl
ins
test
push
mov
adc
pop
pop
xchg
add
scas
inc
rcl
sar
inc
mov
(bad)
or
in
pop
sar
stos
rcr
mov
xchg
adc
cli
lahf
add
mov
sbb
das
nop
sbb
mov
cmp
data16
jo
push
push
std
ins
xlat
cmps
mov
sub
retf
xor
add
mov
aad
call
popf
js
sub
push
mov
enter
fist
or
jl
xchg
test
jle
(bad)
(bad)
(bad)
mov
pop
push
cmp
or
inc
or
or
push
loopne
inc
add
pop
ja
xchg
jne
pusha
pop
sbb
mov
jbe
add
add
cdq
test
and
adc
sub
lock
rcr
pop
xor
popa
shr
inc
adc
add
fiadd
sub
cs
rol
cmp
mov
push
add
jbe
add
dec
pop
add
add
push
xor
cmp
cmc
sbb
scas
xchg
in
add
and
ret
xchg
jl
sbb
adc
rcr
mov
adc
mov
xor
xor
push
adc
or
(bad)
add
ss
pop
fcom
mov
add
push
push
push
add
xor
dec
sbb
add
jne
or
xchg
push
jecxz
or
call
xor
nop/reserved
les
das
add
out
or
pusha
test
adc
and
pop
push
adc
xchg
push
lea
inc
sbb
sbb
imul
xor
sbb
add
jo
adc
arpl
fsubr
dec
mov
add
movs
jns
(bad)
loope
(bad)
cmp
inc
sub
(bad)
jg
jg
cmp
push
jl
dec
and
jg
movs
push
cmp
(bad)
sbb
daa
fild
fcomp
fnstsw
sahf
ja
sbb
ds
push
cmp
movs
jmp
lods
mov
pop
stos
push
add
rol
(bad)
(bad)
fadd
mov
outs
cmp
or
adc
inc
fild
xlat
test
cmp
jg
and
and
adc
jl
add
xor
je
rol
xchg
and
loopne
ror
fst
inc
scas
sbb
js
push
or
xchg
sbb
scas
fild
fstp
adc
or
cwde
cs
lock
add
daa
cmps
add
(bad)
push
and
and
mov
(bad)
adc
fmul
xor
mul
xor
add
or
ret
fs
push
shl
and
imul
std
lahf
mov
inc
dec
fs
add
mov
pop
adc
nop
sub
iret
add
mov
or
mov
nop
dec
rcl
lahf
rol
push
fld
mov
cmp
test
nop
cwde
pop
test
mov
adc
shl
jg
es
and
mov
jb
or
mov
out
pusha
shl
or
(bad)
xchg
fldenv
mov
fucomip
nop
ret
pusha
pop
add
jmp
mov
push
add
aaa
scas
nop
fdivr
xlat
and
or
inc
or
and
adc
inc
or
iret
push
add
nop
add
adc
add
and
add
adc
jg
aaa
or
pusha
popa
fdivr
jno
jbe
mov
mov
xor
loop
jb
mov
fld
xor
fsubr
jo
sub
iret
out
daa
pop
fmul
add
fcmovnbe
pop
add
dec
push
(bad)
mov
xlat
push
call
xchg
cmp
call
sub
sub
cmp
fst
daa
add
inc
adc
je
push
sub
xchg
lahf
or
push
jbe
addr16
enter
and
in
cmc
aad
add
call
jecxz
pop
imul
fwait
stos
mov
add
add
jmp
pop
sub
lahf
aas
add
cdq
add
jb
cmp
jecxz
int3
jecxz
aad
or
ja
fdiv
(bad)
jns
sub
pusha
and
sbb
sub
mov
inc
sub
add
fld
inc
and
or
pop
std
and
retf
sub
icebp
and
dec
mov
sbb
inc
xor
pop
or
dec
or
loopne
add
pop
add
sbb
ret
sub
das
xchg
xchg
ins
or
pop
ret
push
add
sub
and
and
adc
push
mov
rdtsc
cmp
inc
loope
add
clc
add
lea
jmp
repnz
ins
daa
adc
pop
pop
mov
jo
xchg
push
pop
out
bound
out
js
or
xstore-rng
cmps
sbb
lds
xchg
lods
mov
cmp
pop
push
dec
aas
push
push
or
daa
pushf
out
or
inc
inc
cmp
repz
not
enter
add
sbb
fcmovne
dec
adc
or
adc
mov
mov
inc
cmp
pop
jg
das
out
repnz
push
pushw
aaa
mov
scas
fild
rol
add
or
adc
pop
dec
ror
call
shr
push
jl
mov
ins
lock
jmp
adc
call
or
and
adc
xchg
and
inc
fs
fcomp
add
stos
mov
jg
jo
sub
and
xor
ins
dec
push
retf
aaa
daa
xchg
ja
call
js
das
push
jmp
retf
in
test
gs
pop
jmp
add
add
mov
or
inc
adc
das
out
stos
cmp
jecxz
add
mov
push
cmc
aaa
icebp
add
inc
xchg
add
cmp
jmp
xchg
scas
lds
xor
or
cmps
psubusw
sbb
add
adc
(bad)
in
add
jne
pop
adc
pop
clc
pop
clc
mov
ins
loopne
push
shr
cmp
jns
xchg
add
test
mov
fnsave
fdiv
cmp
xor
adc
xchg
movs
sbb
int3
aam
stc
aaa
xor
xor
adc
pop
add
inc
pop
xor
sub
pop
iret
pop
xchg
sub
push
in
add
aas
dec
add
sub
pop
ja
sub
fcom
and
les
outs
psraw
jns
jb
pop
xchg
call
sub
lods
or
xor
lods
les
pop
ror
pusha
cmp
inc
sbb
movs
bound
cmp
xchg
push
sub
sbb
in
pusha
or
outs
mov
or
fbld
je
mov
sbb
fisttp
push
push
xor
inc
daa
lock
sbb
shl
push
mov
sbb
iret
and
loopne
call
or
jae
xchg
push
cmp
sbb
or
xor
jnp
jno
adc
imul
add
fwait
or
push
in
cmp
jne
(bad)
and
fiadd
cmp
aas
inc
and
(bad)
push
test
test
pop
movzx
jp
xchg
lods
loopne
call
add
mov
lea
xchg
inc
cmp
pop
lock
xor
jp
push
int3
dec
push
xor
mov
xchg
adc
add
mov
push
add
dec
xchg
xor
inc
clc
test
and
cmp
mov
pop
ret
adc
cmp
push
stos
mov
sub
sbb
inc
adc
inc
adc
add
inc
add
scas
daa
add
loop
jge
sub
inc
hlt
inc
or
inc
pushf
lock
dec
cli
stos
cmp
xor
adc
lods
xor
icebp
cdq
enter
enter
loope
add
xchg
lods
mov
cwde
mov
dec
jle
cmp
add
mov
scas
das
mov
add
neg
or
shl
ret
push
ret
pop
ja
test
nop
scas
jge
(bad)
jb
adc
mov
pop
cmp
mov
mov
mov
jnp
cmps
pop
mov
adc
mov
inc
fidivr
iret
push
add
xor
fimul
and
dec
sbb
(bad)
sub
and
pop
jmp
adc
and
xchg
and
and
or
jo
xchg
cmp
adc
test
sbb
add
sub
cmp
xor
(bad)
sub
lods
mov
retf
nop
mov
sbb
int3
sub
add
lea
and
cmps
imul
add
inc
and
pusha
adc
push
adc
and
sub
sbb
cwde
cmp
add
ins
imul
sbb
outs
imul
psubsb
adc
lahf
mov
pop
call
sbb
dec
movs
push
fwait
nop
or
mov
adc
fist
sbb
lock
lock
push
push
ror
add
das
lahf
xchg
sub
push
or
xchg
or
nop
xor
mov
sbb
adc
and
aaa
into
adc
cmps
fdiv
xchg
sub
scas
fmul
scas
fadd
fs
add
loope
jno
pop
mov
aam
fs
add
out
cmp
dec
fstp
in
dec
and
ss
(bad)
and
mov
pop
pop
mov
dec
mov
xadd
jmp
(bad)
mov
pop
adc
sbb
adc
fadd
inc
jg
push
movs
sub
ror
daa
push
int3
sub
cmp
dec
dec
sub
cmp
and
and
sbb
sub
sub
sbb
or
xchg
test
add
pop
outs
fdivr
sti
rcl
xchg
adc
cwde
adc
movs
daa
adc
shl
xor
and
daa
scas
inc
enter
xchg
sub
fcom
push
push
call
test
or
cs
in
dec
pop
jmp
cmps
fadd
loopne
inc
add
cmp
mov
pop
(bad)
xor
rcl
aas
pop
imul
fimul
adc
mov
inc
ss
adc
jg
pusha
or
test
push
pop
pop
test
outs
daa
shld
mov
data16
push
fsubr
adc
mov
pop
pop
cmps
mov
test
rcl
mov
push
adc
(bad)
mov
pusha
xchg
mov
iret
ja
sbb
mov
or
push
pop
pushf
je
and
push
das
js
push
push
prefetchw
pop
push
outs
pusha
les
cld
mov
arpl
icebp
pusha
lea
pop
call
bound
push
mov
mov
je
inc
inc
clc
mov
dec
add
dec
push
inc
mov
add
xchg
push
mov
add
movs
pop
mov
jl
dec
sub
inc
dec
jle
add
cmps
jge
push
add
pop
and
dec
or
les
repz
cld
repnz
std
dec
cmp
movs
out
pop
call
mov
xor
adc
inc
or
les
clc
data16
mov
inc
push
push
adc
push
sub
sub
or
mov
pop
jb
mov
out
adc
jmp
xchg
in
jns
jno
movs
push
(bad)
repnz
adc
sub
or
mov
cdq
clc
dec
jo
movs
push
and
aaa
jmp
dec
test
adc
pop
jecxz
pop
fdiv
js
or
dec
fucomip
sub
mov
jo
fmul
rol
and
into
push
xor
adc
add
add
sbb
dec
sub
imul
mov
dec
hlt
xor
loopne
movs
pcmpgtw
jo
fsubr
and
cmp
dec
inc
scas
cmp
adc
ret
adc
sbb
aas
cmp
xor
and
retf
xchg
fs
mov
and
inc
sub
ret
or
cmps
fst
add
or
iret
cmp
push
outs
inc
and
sbb
cmps
int3
sbb
push
inc
inc
inc
lea
mov
ret
jo
retf
les
inc
ret
and
and
adc
les
out
jbe
pushf
les
pop
push
dec
add
dec
sub
mov
and
adc
nop
xchg
push
xlat
push
mov
cmc
in
hlt
lock
add
push
adc
pusha
cmp
xchg
mov
clc
and
aaa
fstp
call
sub
add
(bad)
loop
pop
push
pop
pop
lods
loope
jecxz
pop
sahf
lock
jle
les
jmp
push
pusha
dec
or
add
mov
into
jecxz
cwde
cmp
dec
push
mov
les
jecxz
(bad)
inc
and
cmp
add
or
xor
or
push
push
jmp
scas
out
(bad)
or
jmp
or
add
loope
imul
pop
gs
ds
or
or
lea
fsub
into
dec
cmps
(bad)
or
xor
adc
cmp
add
jle
pop
pop
pop
inc
push
jl
dec
cmp
ror
pop
or
jb
int3
or
ret
inc
outs
(bad)
xor
and
lahf
inc
inc
add
adc
mov
or
ins
pusha
or
xor
push
inc
push
rcr
adc
add
add
and
xor
pop
mov
cmp
jge
enter
add
add
(bad)
or
stos
add
pop
sar
add
push
ret
sub
adc
pop
cmp
sar
cmp
aad
pop
or
mov
gs
dec
pop
lahf
pop
inc
daa
or
scas
and
in
jae
loopne
push
mov
sar
and
push
inc
or
or
jns
or
xchg
adc
or
or
mov
xor
ret
(bad)
mov
aad
mov
adc
inc
and
ror
sub
mov
mov
data16
adc
push
push
cmp
adc
imul
xchg
and
pop
inc
jbe
sbb
sub
jnp
and
rol
not
and
push
test
mov
pop
fs
xor
jbe
fcmovnb
fistp
push
dec
add
push
test
pop
mov
loop
add
jae
push
retf
dec
adc
and
cwde
iret
fcomp
(bad)
push
inc
inc
repz
sbb
xchg
(bad)
movs
pop
xor
aas
sbb
inc
and
mov
mov
sti
movs
jo
mov
mov
scas
xor
rcl
jb
call
sbb
dec
daa
loopne
and
and
je
xor
inc
or
dec
sbb
xchg
clc
push
sub
pop
cmp
pop
pop
push
call
and
xor
push
nop
or
or
stos
sbb
call
sub
push
rol
adc
jne
and
mov
push
or
add
cmp
dec
mov
xchg
leave
test
enter
add
xor
push
sbb
ja
or
push
(bad)
and
push
sbb
cmp
adc
push
and
adc
xchg
adc
push
add
jb
or
and
or
mov
or
call
adc
call
je
cmp
push
add
push
in
mov
imul
je
pop
cmp
pop
pop
wbinvd
push
(bad)
aam
fldcw
and
add
icebp
add
adc
sub
xchg
inc
fwait
xor
enter
test
push
mov
test
pop
(bad)
fistp
(bad)
pusha
iret
or
aam
mov
and
call
pop
cmp
pop
or
pushf
mov
lods
sbb
cmps
inc
xor
aaa
jle
cmps
push
cmp
div
sub
and
push
mov
addr16
sbb
push
mov
(bad)
mov
or
jae
je
and
pop
ds
push
bound
or
add
adc
out
pusha
pusha
xchg
mov
inc
push
jle
outs
mov
push
and
and
nop
inc
popf
pop
push
pop
sub
add
xor
stc
arpl
scas
enter
call
ja
sbb
(bad)
aam
aas
xchg
test
jo
cld
clc
push
or
push
pop
sbb
mov
dec
test
jl
mov
inc
xchg
xchg
jne
pop
xchg
add
jl
xchg
adc
xor
mov
loopne
pop
(bad)
popa
mov
add
cmp
adc
inc
sub
adc
pop
xchg
rcl
inc
inc
push
mov
add
push
sub
or
add
pusha
inc
and
test
out
sbb
push
inc
and
adc
mov
gs
xor
mov
xchg
dec
out
add
popa
xor
jbe
pop
out
jl
adc
push
xchg
xor
fdivr
or
mov
push
mov
cmps
and
dec
aaa
ret
les
pusha
pop
fistp
(bad)
(bad)
or
aas
mov
sbb
scas
sbb
jmp
mov
push
sbb
cmp
jg
or
rol
rcl
das
cwde
adc
pop
pushf
sbb
in
daa
inc
ret
sbb
cmp
(bad)
or
sub
out
xlat
dec
jp
xor
xor
pop
push
push
sbb
adc
ja
or
les
add
pop
cmp
or
dec
or
dec
push
mov
push
js
mov
sbb
add
mov
jo
ret
out
pusha
xor
jecxz
pop
or
mul
outs
adc
test
and
push
mov
or
jno
sub
dec
xor
pop
enter
cmp
mov
popa
or
nop
push
outs
push
mul
(bad)
dec
ins
je
pusha
xchg
jmp
dec
test
adc
adc
dec
ins
adc
or
pop
fwait
push
les
jns
enter
mov
ins
and
sub
push
or
mov
xor
xor
aaa
mov
test
jge
daa
ss
add
mov
jg
fadd
jmp
sar
mov
call
dec
mov
ja
sub
or
adc
inc
adc
nop
cmp
or
jae
cwde
(bad)
jno
cmp
scas
mov
arpl
cmp
mov
jle
mov
push
mov
mov
sbb
push
and
xchg
push
vmwrite
jnp
push
setle
xor
pusha
lea
pop
das
fsubr
lahf
mov
stos
xor
dec
dec
outs
sbb
daa
cmp
xor
lods
push
data16
pop
es
imul
pop
leave
pop
adc
xchg
or
and
or
adc
movs
adc
clc
retf
pusha
xchg
pop
sub
pop
out
cmp
sub
add
les
mov
js
adc
or
lods
push
enter
push
fsub
adc
push
mov
push
or
mov
push
(bad)
fcom
mov
sbb
lock
adc
psubusw
cmc
cs
xchg
and
jmp
sub
pop
sbb
sbb
push
sub
aad
sub
sub
inc
mov
out
sub
dec
pusha
and
adc
mov
xchg
jmp
pop
cmp
das
jp
hlt
lahf
jno
or
or
push
fiadd
mov
xadd
pop
cwde
js
shl
mov
inc
adc
mov
or
fisttp
movs
xor
xor
mov
fs
test
nop
cmps
or
ds
mov
ret
mov
lods
dec
mov
jo
je
xchg
pop
shl
adc
adc
pop
arpl
and
pop
cmp
stos
adc
bound
inc
and
mov
xor
sub
push
sbb
aas
popa
ja
mov
daa
outs
or
pop
sbb
cmps
adc
and
sbb
adc
(bad)
adc
sub
sbb
xchg
push
pop
in
fistp
ja
and
jb
enter
cdq
daa
in
pop
push
sub
dec
dec
adc
out
inc
adc
push
(bad)
or
sti
jbe
cmp
sbb
sub
sub
fld
push
div
adc
push
pop
mov
xor
push
mov
inc
add
ret
call
inc
add
cdq
cli
and
movs
mov
pusha
mov
and
es
clc
push
add
push
ins
and
loop
mov
jle
stc
adc
test
(bad)
jo
popf
inc
adc
mov
pop
adc
pushf
add
and
dec
xor
(bad)
in
lds
cmps
les
push
call
jmp
aas
jecxz
add
in
jg
jnp
or
inc
(bad)
movs
mov
fist
or
push
pop
jbe
(bad)
arpl
adc
push
push
movs
shl
or
push
dec
int3
adc
mov
dec
push
in
(bad)
das
jne
xor
inc
in
ret
mov
movs
not
or
out
mov
mov
mov
mov
xor
jmp
adc
rol
xor
sbb
and
jno
xchg
cmp
pshufw
std
fsubr
fld
cmp
pop
mov
add
add
out
jecxz
in
and
jecxz
inc
mov
jmp
jne
out
add
cs
push
dec
mov
into
mov
dec
jge
inc
xor
and
xchg
add
pop
and
sbb
jo
xchg
push
sti
add
pop
inc
clc
push
pop
(bad)
arpl
cvttps2pi
pop
jo
mov
test
lds
ins
std
jl
xor
and
test
sti
push
inc
push
pop
ins
jmp
dec
mov
popa
add
push
xlat
(bad)
in
add
jbe
pop
push
(bad)
dec
jnp
mov
add
(bad)
div
jl
and
stos
inc
pusha
cmp
lea
cmp
mov
ins
call
mov
or
inc
loopne
stc
dec
or
pop
sbb
cmc
in
(bad)
(bad)
fistp
lods
xor
jae
xor
xchg
push
es
or
aaa
dec
movzx
pop
adc
mov
dec
sub
or
pop
xlat
sub
xor
ins
xor
push
imul
push
aaa
aas
inc
push
(bad)
pop
and
pop
test
call
add
outs
out
xchg
pop
test
cmp
cld
sub
cs
add
sub
(bad)
jg
or
popa
and
cmp
dec
jp
es
data16
jge
adc
and
or
dec
jp
mov
cmp
in
sub
sub
into
lock
adc
dec
or
sbb
mov
lods
xor
test
inc
mov
inc
mov
mov
xor
mov
xchg
inc
loopne
js
mov
jne
mov
pop
fwait
adc
in
(bad)
adc
nop
(bad)
cmp
mov
test
(bad)
pop
test
test
and
fwait
lahf
mov
repnz
clc
sbb
sbb
pusha
sub
xor
cmp
adc
sbb
jae
inc
ret
and
lock
jmp
cmp
xchg
lock
add
add
fidivr
shr
sub
das
push
jno
or
iret
out
push
sbb
mov
fadd
loope
add
sub
arpl
xchg
cmp
rol
jecxz
push
in
mov
leave
jl
adc
addr16
je
push
adc
lods
cs
mov
xlat
rol
das
push
jmp
out
dec
mov
dec
das
test
mov
sbb
sbb
sub
out
add
add
inc
mov
or
and
add
dec
inc
fdiv
sbb
jge
jmp
clc
jp
xchg
add
lock
loopne
je
jne
push
mov
mov
fistp
add
sar
add
or
mov
sub
pop
das
xor
movs
mov
jmp
inc
hlt
je
xchg
jge
(bad)
cmp
jle
add
int3
push
inc
fistp
add
push
mov
sub
adc
loop
mov
test
inc
mov
or
test
es
adc
(bad)
out
mov
popf
shl
jmp
and
push
lahf
mov
mov
cmp
adc
ret
pop
add
sub
aas
(bad)
lock
std
mov
mov
pop
mov
retf
mov
mov
sub
mov
mov
sti
adc
adc
jne
mov
test
inc
fsubr
cmc
pop
adc
push
adc
xor
xor
push
xor
jne
xor
das
inc
and
clc
mov
mov
inc
test
fdivr
jmp
inc
bound
pop
dec
scas
in
rcl
push
sbb
push
arpl
not
mov
add
pop
inc
adc
test
lea
mov
push
adc
scas
clc
in
or
pusha
mov
xchg
fisttp
sbb
push
mov
lods
sbb
retf
mov
ds
sbb
pop
cmp
jp
fbstp
out
adc
(bad)
mov
fdiv
add
test
push
add
clc
adc
sub
loop
test
js
lahf
adc
inc
lods
lds
iret
mov
call
adc
mov
or
ja
mov
xor
xor
sbb
in
add
inc
popa
xchg
mov
(bad)
call
pusha
and
nop
stos
in
nop
loopne
mov
push
ficomp
xor
push
add
adc
sub
and
and
(bad)
lahf
push
xor
test
pusha
pop
dec
aaa
sub
jge
xchg
js
mov
or
and
mov
addr16
xor
clc
push
or
dec
jne
dec
repz
das
pop
daa
jb
push
(bad)
lahf
into
mov
data16
arpl
jnp
(bad)
adc
add
jbe
add
xchg
and
add
and
sbb
sub
sub
adc
clc
pop
sbb
pop
mov
lods
sub
aam
push
push
push
mov
addr16
dec
add
or
loopne
add
and
ret
xchg
add
push
push
add
(bad)
push
imul
pop
ds
icebp
and
pop
es
add
ja
or
lds
add
push
add
sub
pop
sub
mov
out
cmc
cmp
xlat
out
pop
or
stos
xor
mov
mov
push
sbb
sbb
xor
sbb
cmc
sbb
inc
mov
cld
jo
adc
push
fdivr
push
rcr
add
xor
je
push
inc
retw
jp
jge
add
inc
xchg
outs
in
ins
test
push
stc
pop
aaa
xor
fnsave
sub
and
inc
mov
or
push
sub
imul
ret
xor
pop
in
push
loope
imul
pop
and
and
pop
sbb
pop
cmp
push
rcr
ret
add
push
leave
inc
rcr
iret
mov
sbb
or
pop
add
and
fs
and
retf
push
xchg
push
mov
repz
or
test
and
lahf
sbb
mov
enter
hlt
inc
dec
xor
in
pushf
aaa
(bad)
es
lock
cmp
retf
mov
mov
jl
mov
mov
adc
jge
mov
push
ja
adc
iret
push
jge
mov
xchg
fldenv
call
sub
data16
sub
push
mov
mov
enter
fdiv
mov
cmovbe
and
add
sub
push
cmps
sti
(bad)
lods
int
xor
fucomip
lsl
adc
sbb
or
cmp
jg
dec
dec
popf
out
sub
xchg
jle
add
sub
sub
push
mov
arpl
daa
push
sti
es
pop
xor
or
or
dec
adc
and
je
sub
ret
mov
fild
lea
outs
or
xchg
jge
inc
cmp
push
mov
sub
inc
or
inc
jno
or
into
sub
adc
outs
icebp
and
imul
mov
ins
or
or
pop
sub
ret
cmp
mov
pop
dec
cmp
call
xor
daa
xor
push
cmp
(bad)
sbb
push
test
xor
jg
inc
std
cwde
sub
fdivp
and
push
and
ret
nop
jno
fisttp
aaa
mov
push
les
dec
add
sub
mov
seto
sahf
jg
push
movs
inc
adc
in
pop
cmp
inc
scas
sahf
push
ja
inc
xor
xchg
sbb
mov
pop
jle
ret
jno
mov
in
int
test
push
push
mov
rcr
mov
(bad)
mov
fadd
in
cmc
sbb
fsub
mov
dec
cmp
sub
jae
sbb
imul
adc
iret
inc
icebp
mov
inc
sub
pop
or
enter
imul
xlat
add
xor
push
jae
nop
xor
inc
and
inc
inc
jle
dec
sbb
sahf
adc
retf
data16
and
ds
pop
daa
ins
cmp
sub
add
test
inc
sub
loop
mov
inc
mov
xor
adc
retf
(bad)
push
add
es
pop
xor
inc
mov
(bad)
sub
sub
push
das
int3
das
sbb
int
cmc
scas
(bad)
push
cmp
ror
dec
movs
arpl
leave
mov
adc
cwde
mov
or
xor
in
add
push
(bad)
(bad)
out
inc
jb
(bad)
push
adc
ds
pop
pop
cmp
lahf
mov
add
push
shr
rol
(bad)
adc
inc
push
xor
daa
stos
in
add
aas
dec
or
test
add
sub
add
jbe
test
dec
shl
enter
jmp
jmp
jg
mov
inc
mov
cmp
cmp
shl
sub
add
rcl
mov
add
imul
or
popa
out
rol
add
add
push
add
add
lock
adc
jmp
add
dec
es
mov
cmps
fadd
add
push
xor
xchg
jecxz
sub
loopne
sbb
add
sub
les
sbb
or
mov
cmps
or
imul
jne
aaa
cmps
in
arpl
cmps
outs
jnp
jg
jl
add
lock
lods
lods
adc
mov
inc
jne
push
ja
xor
xor
nop
dec
push
nop
pushf
cld
push
xor
push
leave
xor
and
fld
or
mov
mov
mov
add
jmp
adc
ins
pop
sub
pop
retf
ja
mov
add
leave
cld
inc
xchg
imul
mov
sbb
add
inc
push
add
inc
rcl
adc
mov
and
mov
inc
mov
cld
pop
push
push
hlt
jp
xor
xor
push
jl
mov
or
or
dec
ret
scas
sub
lds
test
inc
pop
pop
scas
enter
push
inc
mov
dec
ins
(bad)
clc
and
cli
mov
ret
cmp
ins
fwait
adc
xor
cmps
and
je
or
add
cmp
cmc
push
cmps
add
inc
pop
pop
inc
and
hlt
fwait
sbb
js
inc
popf
sub
loopne
add
dec
jp
push
nop
fmul
push
aaa
(bad)
or
mov
and
iret
or
push
or
out
fwait
add
aaa
dec
das
push
cmps
lds
sub
movs
loopne
xor
jle
out
xor
add
movs
cmp
adc
aas
or
push
(bad)
inc
mov
cmp
jns
je
ins
cs
outs
gs
(bad)
(bad)
jmp
cs
outs
ins
ins
arpl
outs
jae
push
dec
imul
popa
cs
inc
pop
fwait
ins
jg
xor
sub
push
push
popa
imul
outs
jbe
mov
inc
inc
jbe
je
outs
xor
jb
ds
add
sub
push
lods
add
bound
cmp
dec
push
int
pop
cmovnp
jo
jb
repz
xchg
xchg
sar
pop
or
inc
gs
jne
je
add
inc
fld
mov
push
adc
jns
cmps
sub
sub
add
push
push
and
mov
dec
bound
adc
jp
xchg
adc
push
jl
push
inc
cmp
add
popa
pop
sbb
mov
ret
das
test
add
dec
push
add
add
add
or
adc
(bad)
mov
scas
pop
cld
ins
cmovge
outs
dec
aad
(bad)
push
popa
(bad)
retf
inc
xchg
or
pop
enter
adc
dec
push
shl
sti
sub
adc
stos
add
je
push
out
call
mov
fmul
sar
shr
push
inc
sbb
pop
mov
jbe
inc
mov
clc
push
sbb
add
adc
sti
idiv
push
inc
dec
cmp
add
fadd
call
into
inc
and
push
rol
sti
or
xor
clc
mov
add
add
(bad)
call
rcr
out
or
add
add
add
add
inc
pop
dec
outs
lods
dec
es
or
add
sbb
pop
outs
adc
cmp
add
add
jnp
cmps
mov
adc
sbb
loope
add
inc
jne
jb
int3
dec
pop
cmp
push
(bad)
push
cld
repnz
dec
dec
das
pop
dec
push
push
xchg
sbb
pop
jecxz
push
push
inc
sub
adc
xor
push
mov
dec
inc
adc
out
cmp
sbb
jae
arpl
loopne
mov
cmp
add
or
sub
adc
fsubrp
mov
add
xchg
mov
syscall
dec
aas
dec
add
xchg
xchg
fistp
cwde
xcrypt-cfb
cmps
jecxz
leave
leave
enter
jne
in
fs
push
inc
jnp
jb
xor
pop
push
dec
xchg
(bad)
xchg
cdq
bound
cwde
rsqrtps
xchg
xchg
xchg
mov
jmp
leave
leave
inc
(bad)
jmp
(bad)
pop
jb
push
mov
and
call
mov
push
add
call
dec
lds
or
add
or
aam
jno
call
sbb
paddd
jae
icebp
pop
inc
mov
xor
add
fs
mov
push
xchg
add
gs
jnp
arpl
and
cmp
cmp
or
and
clc
stos
nop
add
sbb
xor
nop
nop
popa
or
rdmsr
pusha
jo
jbe
xchg
add
and
and
dec
pop
or
push
inc
sbb
loopne
mov
fld
sbb
pop
imul
cmp
or
or
shr
jno
add
pop
pop
or
inc
inc
js
xor
dec
aas
lea
push
dec
add
or
and
(bad)
dec
shl
pop
xor
inc
jnp
xchg
push
mov
or
ja
xor
add
dec
jae
lahf
mov
xchg
pop
jg
das
out
dec
popa
pop
jb
adc
xor
imul
or
pop
mov
mov
ss
xchg
add
shl
add
xor
mov
pop
cmp
sbb
pop
or
and
inc
jge
outs
inc
scas
add
or
dec
popa
jo
xor
mov
xor
inc
add
imul
nop
pop
sub
or
ins
retf
jae
jg
inc
pop
mov
push
outs
inc
jb
push
rcl
cmp
popf
sub
inc
xchg
mov
inc
mov
dec
rcr
aad
push
test
scas
add
dec
jno
push
inc
loope
and
sub
pop
cmp
mov
sahf
mov
push
dec
mov
or
and
sbb
adc
push
add
aad
les
sbb
sbb
xchg
js
imul
int3
dec
or
sub
pop
test
mov
pop
imul
stos
nop
inc
std
daa
lods
nop
dec
push
pop
push
pop
(bad)
dec
cs
inc
dec
cli
cs
fimul
daa
cmovge
shr
aam
sub
inc
addr16
push
aas
iret
js
in
pop
pop
push
test
scas
das
lds
or
pop
inc
pop
fadd
lock
les
aam
arpl
cmc
pop
lods
sub
add
addr16
dec
pop
loop
mov
or
push
push
pop
inc
and
loope
add
push
inc
ins
add
test
mov
xor
xchg
mov
(bad)
mov
inc
adc
fwait
mov
cmp
inc
push
inc
stos
icebp
sbb
pop
push
mov
retf
mov
inc
ja
bound
pop
pop
call
xlat
or
bound
xlat
push
or
dec
xor
enter
imul
jbe
add
pop
or
cmovge
icebp
inc
out
(bad)
scas
pop
cmp
pushf
mov
pxor
pop
stos
dec
inc
sahf
pushf
mov
cdq
inc
dec
dec
ret
push
pop
(bad)
pop
xor
in
pandn
pusha
ds
jb
arpl
cmp
sbb
push
mov
aas
jnp
cdq
or
lea
mov
(bad)
sti
nop
push
scas
cmp
add
xchg
push
aad
cmp
and
mov
rol
dec
ror
in
pusha
(bad)
cli
inc
xor
xor
in
pop
xchg
mov
inc
nop
mov
add
(bad)
mov
(bad)
jbe
jae
mov
xchg
inc
xchg
inc
sbb
mov
mov
inc
add
adc
inc
add
mov
sub
or
dec
push
ja
mov
sbb
push
adc
pop
(bad)
jno
pusha
shl
pop
jg
add
movs
pop
pop
pop
or
push
imul
push
stos
imul
(bad)
fwait
add
push
(bad)
jecxz
mov
(bad)
adc
inc
mov
sub
and
adc
(bad)
mov
pop
add
or
sbb
popf
sub
enter
pop
adc
in
pop
add
push
jns
ror
inc
test
pop
bound
push
mov
inc
mov
jo
sub
cld
inc
pop
push
fs
inc
xchg
inc
mov
mov
and
hlt
(bad)
mov
enter
or
js
push
mov
jb
mov
arpl
adc
int3
add
push
shl
cld
or
add
push
hlt
pop
jb
xchg
int3
mov
ds
push
mov
add
sbb
das
add
sbb
sub
es
int3
into
adc
pop
push
movd
sbb
inc
daa
ins
lods
push
js
add
lahf
test
push
loop
sbb
and
push
fdivr
xor
cmp
mov
cmp
loopne
inc
aas
dec
add
xchg
adc
mov
or
movs
xchg
jb
jne
add
and
jb
lds
ror
jae
outs
sub
add
dec
push
mov
data16
fsub
test
je
imul
sub
fcomp
mov
jne
pop
fadd
adc
or
push
jmp
lahf
nop
test
mov
retf
rcl
je
dec
icebp
pop
addr16
call
inc
dec
add
jns
repz
std
fisttp
out
les
sbb
les
cwde
daa
mov
fwait
jmp
imul
jae
(bad)
dec
xchg
movs
imul
cmps
outs
or
je
out
mov
and
addr16
mov
imul
mov
ret
cwde
push
(bad)
mov
pop
xor
sbb
pop
inc
push
hlt
loopne
fs
movaps
xor
shl
retf
sub
push
mov
sbb
cmp
push
xor
fbld
xchg
in
push
jo
scas
aam
ss
ins
pop
lock
push
ins
scas
cmp
lahf
push
cmp
daa
xchg
ins
sbb
imul
xor
mov
shr
dec
(bad)
dec
or
xor
hlt
ins
stos
adc
cwde
push
and
lahf
adc
loopne
pop
rcr
ins
lahf
inc
nop
or
nop
push
sbb
add
out
out
push
xchg
daa
daa
mov
daa
daa
mov
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
pusha
popa
mov
aas
mov
jae
mov
add
or
add
sub
arpl
add
outs
adc
add
jo
inc
jmp
push
das
or
inc
pop
jl
outs
aad
out
daa
inc
mov
mov
push
adc
mov
fdivr
das
jmp
mov
jp
inc
loop
xchg
and
pop
push
arpl
cmps
fisub
jbe
(bad)
sbb
stos
dec
push
push
mov
(bad)
out
jo
pusha
pop
inc
push
(bad)
jmp
dec
mov
add
outs
push
clc
in
inc
pop
test
cmp
enter
das
cmp
loopne
xor
pop
jmp
xchg
loop
mov
mov
sub
fdiv
sbb
data16
sub
push
loope
lock
(bad)
sbb
sbb
out
sbb
adc
adc
adc
jmp
or
cmps
or
fcomp
push
lock
popa
inc
add
inc
pop
add
pop
cld
jb
fist
clc
cmp
ds
hlt
js
cmp
pop
in
push
pop
fsubrp
xor
(bad)
mov
add
mov
mov
fs
jb
addr16
sub
inc
or
je
outs
fs
jns
ror
fbld
pop
dec
xor
jns
(bad)
mov
push
jne
push
outs
jae
dec
gs
or
bound
dec
sbb
push
inc
jo
or
jno
add
fidiv
jb
mov
or
add
push
xchg
paddusb
addr16
test
mov
xor
(bad)
es
test
add
test
mov
inc
cwde
or
stos
add
push
sbb
rol
imul
test
fadd
inc
mov
pusha
outs
imul
mov
popa
mov
xor
cmp
add
stc
ja
xchg
ds
push
retf
add
lahf
xor
je
push
or
(bad)
retf
ud2
push
jne
jmp
dec
out
pop
jbe
out
add
daa
sub
or
inc
jl
push
gs
xor
adc
push
adc
pop
inc
adc
xor
scas
ins
or
lds
or
inc
ins
imul
(bad)
addr16
jne
lods
and
adc
scas
aas
fs
mov
xchg
push
ins
nop
fcom
mov
jno
dec
mov
dec
add
imul
fs
mov
mov
popa
outs
jae
xor
add
dec
mov
sub
inc
add
jne
xchg
push
add
fwait
test
jle
cmp
or
and
jnp
fadd
inc
dec
ja
xchg
xor
add
ss
repnz
or
ss
loopne
jae
push
mov
adc
cmps
bound
stos
fistp
or
mov
jno
(bad)
iret
adc
mov
dec
or
mov
adc
or
pop
push
push
movs
retf
int3
dec
pop
out
add
add
add
out
adc
mov
ins
fwait
cmp
adc
std
arpl
fild
scas
mov
retf
inc
adc
pop
or
add
inc
adc
out
inc
inc
push
sub
or
popa
ins
jmp
es
ret
add
std
add
sub
(bad)
add
loope
nop
adc
lods
mov
adc
pop
mov
enter
or
push
jge
enter
enter
enter
sub
mov
ret
jnp
enter
inc
push
mov
enter
add
enter
jbe
mov
in
jge
dec
outs
in
enter
in
jle
ror
aaa
push
add
add
jmp
add
test
adc
fs
imul
or
sub
pop
add
add
dec
sub
xor
or
enter
das
sahf
dec
xchg
add
fdivr
jmp
ins
push
mov
xor
add
dec
in
loopne
mov
aas
or
or
or
dec
outs
push
push
sbb
outs
inc
add
sbb
addr16
inc
mov
jne
mov
xor
push
xchg
inc
sub
inc
push
dec
sbb
cmp
and
loope
and
inc
pop
add
push
or
mov
mov
mov
ins
push
(bad)
ins
cmp
or
sti
imul
cmovns
and
push
xchg
and
xor
push
inc
or
sbb
inc
push
fbld
rcr
dec
inc
(bad)
in
push
xchg
or
sbb
in
or
sbb
ins
fwait
adc
and
push
jmp
push
popa
ja
add
cmp
xchg
sbb
popf
dec
ret
and
adc
inc
test
add
push
or
shl
lock
jbe
unpcklps
push
imul
adc
and
or
and
pop
inc
adc
or
xchg
cmp
push
and
mov
adc
test
dec
mov
fadd
outs
popa
ins
jne
push
or
nop
sub
mov
push
shl
sbb
mov
cdq
or
pop
sub
mov
add
add
sbb
sub
hlt
das
iret
xor
cdq
jle
cdq
(bad)
or
ror
mov
inc
mul
push
sbb
aam
sbb
mov
cmp
push
push
inc
bound
pop
pop
and
cmp
lds
inc
mov
add
sbb
outs
xchg
sbb
adc
aas
jns
or
daa
add
or
cmp
lahf
sbb
sub
sbb
or
xchg
int3
push
mov
sub
push
and
add
dec
pop
pop
js
mov
dec
jnp
or
adc
push
adc
adc
dec
and
xlat
xor
sbb
and
push
push
loope
std
cmp
nop
test
adc
adc
repz
xchg
js
mov
sub
pop
pop
cmp
pop
dec
cmp
fist
bound
movs
inc
mov
add
call
cmp
mov
stos
push
loop
rol
jl
sar
add
xchg
lock
jmp
or
add
inc
lods
rol
push
add
or
jnp
mov
lock
and
sbb
xchg
cmc
add
sbb
push
pusha
pop
cmp
mov
fimul
inc
adc
adc
das
ss
mov
add
and
pop
cmp
fadd
mov
xlat
or
mov
test
fdiv
or
ds
fild
inc
rol
adc
aam
sub
mov
jmp
ret
and
ds
adc
add
popa
jmp
push
mov
mov
sahf
xchg
pop
das
fisub
add
call
adc
mov
in
out
ror
mov
xor
ins
fs
sbb
aam
fld
js
test
inc
pop
and
repnz
in
sahf
sub
nop
inc
fisttp
into
jae
inc
jl
ss
ror
fsubp
add
adc
inc
fisubr
lahf
xor
adc
pop
push
outs
adc
sub
or
adc
adc
add
inc
mov
xor
das
or
dec
js
test
cmovg
dec
test
jge
add
dec
inc
fdivr
pop
dec
pop
adc
lea
in
bound
fs
adc
mov
das
mov
daa
adc
in
adc
out
dec
pop
sub
or
(bad)
out
push
lock
lahf
adc
cld
dec
add
mov
fmul
pop
xchg
test
lea
(bad)
jmp
xlat
sub
xchg
ret
jne
mov
mov
jno
push
lock
and
mov
rol
(bad)
or
push
loop
mov
pop
add
inc
add
sbb
push
mov
ret
sbb
add
dec
cld
mov
sbb
les
in
pop
test
mov
pop
sbb
dec
pop
mov
add
add
repz
add
dec
push
loope
push
pop
mov
adc
jo
push
mov
mov
leave
and
mov
mov
push
sub
pusha
adc
arpl
dec
lods
xor
and
mov
nop
pop
sbb
into
pop
pop
jl
adc
imul
aas
rcl
sahf
and
fs
jmp
and
clc
mov
ins
add
enter
and
xchg
mov
push
push
iret
push
adc
cmp
ret
outs
pop
push
xor
lea
or
and
lock
adc
hlt
or
inc
jmp
aas
mov
pop
mov
das
adc
adc
mov
adc
or
push
pop
outs
cmp
fwait
rcl
and
std
outs
aad
or
or
inc
jl
sbb
loopne
pop
jge
push
dec
mov
or
add
dec
(bad)
mov
or
add
push
pop
push
cmp
in
inc
mov
arpl
push
test
add
cmp
inc
sub
and
mov
sbb
mov
jg
mov
or
add
xlat
fnclex
ja
and
adc
movs
rol
jle
mov
push
ins
ins
mov
sbb
sub
dec
enter
sub
jmp
add
adc
xchg
pusha
cmp
push
jne
ficomp
or
ja
push
out
xor
mov
pusha
jb
jnp
mov
mov
dec
mov
jbe
xor
and
or
pop
adc
xchg
add
jg
inc
dec
sbb
mov
pop
cmp
adc
inc
add
dec
lea
les
inc
mov
aad
xor
pop
lock
rol
push
sub
jl
cmps
push
lea
cmps
mov
mov
jae
mov
push
shl
ret
sbb
xor
test
xor
iret
je
xchg
push
sub
sub
lea
rol
pop
mov
rcr
imul
mov
rol
in
cmps
dec
add
cli
and
(bad)
sbb
or
repz
and
pop
xchg
jge
cmp
dec
mov
adc
and
inc
in
lock
sub
jmp
and
je
sub
jne
and
in
mov
std
das
mov
cmp
jne
and
and
stc
xor
add
xchg
nop
dec
shr
lea
lock
mov
mov
es
iret
mov
loopne
sbb
dec
enter
hlt
in
add
add
push
or
push
push
push
test
pop
loopne
js
add
push
jmp
retf
xchg
lock
sar
sub
or
xchg
adc
xor
ins
hlt
imul
dec
add
adc
leave
ret
add
test
or
div
loop
sbb
sti
fidivr
push
adc
mov
fs
adc
adc
pushf
les
add
int3
es
adc
shl
sbb
mov
scas
ins
sub
(bad)
jp
mov
shr
aam
loopne
fmul
loopne
fadd
fadd
jle
add
push
adc
aas
push
and
xlat
lea
mov
inc
add
ret
lds
adc
cld
jg
clc
jmp
sub
cmp
ja
and
bt
mov
cld
call
jmp
cmp
jne
mov
jmp
push
mov
pop
pop
push
or
push
and
jb
rcl
fmul
fistp
add
inc
inc
push
push
inc
jne
mov
xlat
sar
shl
cmc
dec
add
xchg
inc
inc
xchg
add
add
pop
and
xor
xchg
xor
rcl
rol
rcl
fnsave
push
lea
int
push
lock
lock
and
add
cld
iret
iret
je
push
je
add
jg
add
lods
outs
(bad)
mov
out
inc
sar
fistp
add
jmp
dec
jmp
jns
sti
cmp
sbb
add
add
add
sbb
nop
imul
inc
sub
or
cmp
outs
jg
jmp
mov
push
add
cmp
dec
dec
sbb
sar
jns
js
lock
xchg
pop
call
ins
or
xor
and
mov
xor
das
addr16
xchg
push
jno
outs
aaa
test
(bad)
outs
daa
inc
(bad)
call
daa
ins
push
ret
dec
jns
sar
ins
lahf
fadd
test
daa
dec
int3
pop
mov
mov
jbe
inc
jbe
lahf
inc
dec
add
and
mul
push
dec
gs
push
shl
xor
dec
push
mov
sub
popa
les
push
pop
arpl
and
pop
aaa
rcr
mov
cmp
outs
aas
or
cmp
adc
ja
and
lea
xchg
xchg
cmp
mov
add
rcl
sbb
ds
fidivr
sbb
ss
xlat
adc
push
or
(bad)
mov
dec
xor
test
mov
jle
inc
jo
mov
add
hlt
push
je
adc
movs
data16
fld
test
lods
inc
cld
cmp
cmp
xchg
or
mov
(bad)
je
(bad)
jecxz
cmp
jl
cs
cmp
mov
mov
cmp
movups
mov
fcomp
or
and
cmp
cwde
mov
fs
jne
jmp
dec
jne
mov
(bad)
les
push
mov
test
add
pop
jl
add
adc
xchg
push
dec
dec
inc
cmp
mov
push
shl
pusha
cwde
push
or
xchg
jnp
push
mov
jne
lea
test
call
mov
jbe
xor
xchg
or
ret
inc
jne
arpl
mov
xor
jmp
push
add
mov
push
xchg
adc
add
jne
pop
in
scas
mov
test
mov
inc
das
mov
lea
and
xor
mov
fdiv
mov
es
mov
cmp
ds
mov
add
inc
clc
add
xchg
ret
test
mov
into
mov
jne
js
outs
test
sbb
jo
add
cmp
xchg
shr
into
sub
sar
jo
lods
ins
inc
ror
jb
and
adc
mov
xchg
sbb
out
sbb
in
pop
push
pop
es
mov
lea
pop
sbb
push
pop
cmp
inc
fsubrp
push
scas
inc
inc
aas
push
ins
mov
inc
mov
into
push
push
mov
adc
inc
loope
xor
cmp
mov
add
mov
leave
inc
add
adc
push
pop
lods
je
dec
and
add
out
xchg
pop
mov
adc
adc
xchg
test
jmp
popa
mov
out
mov
das
test
test
push
sbb
pop
mov
(bad)
add
jbe
xchg
cmp
push
call
pop
divps
ror
daa
inc
lods
cld
inc
arpl
mov
pop
push
inc
ins
jo
jns
mov
add
add
shl
cmc
nop
popa
xor
pop
sub
pcmpeqd
sub
pop
xlat
add
pushf
pusha
fwait
mov
call
mov
adc
mov
pop
mov
mov
pop
dec
ja
mov
pop
movs
mov
pop
mov
adc
les
daa
(bad)
pushf
das
movs
inc
or
popf
repnz
aas
jne
push
adc
cmps
or
inc
mov
pop
add
inc
dec
lahf
xchg
fdiv
sub
jns
dec
jb
pop
sahf
imul
imul
rol
je
cmp
and
fs
push
outs
jne
arpl
mov
imul
or
rcr
push
xor
jae
fld
enter
mov
dec
xor
xor
or
(bad)
push
popa
jbe
inc
push
push
lods
cmp
fwait
hlt
(bad)
stc
popf
outs
sbb
ror
nop
daa
and
rcl
lahf
dec
jg
daa
daa
daa
mov
repz
pushf
fdiv
mov
sahf
inc
mov
daa
and
mov
or
jo
loop
(bad)
sbb
add
push
push
add
shl
nop
sub
pushf
fnsave
push
add
add
xor
pop
and
or
or
aaa
shl
imul
push
pop
out
xchg
pop
mov
push
jns
bound
jne
cdq
mov
test
mov
jb
dec
ins
dec
mov
es
xor
add
sub
ss
mov
mov
mov
dec
xchg
inc
add
inc
popa
sub
xor
je
adc
or
push
jl
jo
je
enter
inc
mov
push
add
les
pop
(bad)
in
call
mov
push
popa
addr16
sub
enter
mov
scas
add
js
push
push
imul
enter
add
sti
inc
ins
popa
outs
imul
ret
pop
dec
sub
(bad)
jne
retf
adc
push
ins
pop
jo
addr16
sub
sub
pop
lds
add
mov
ret
pop
outs
outs
or
xchg
mov
(bad)
cmp
cwde
ret
sub
push
dec
imul
add
add
add
push
xchg
sub
mov
cmp
lds
pop
popa
jl
dec
pop
ror
sahf
push
jnp
test
cs
and
cmps
cmp
test
div
sbb
dec
je
sbb
add
adc
daa
push
jno
pop
push
lods
mov
mov
or
lock
mov
mov
pop
lock
(bad)
mov
clc
push
mov
(bad)
xor
adc
push
adc
or
sahf
push
or
sub
inc
xor
pop
or
daa
or
cmp
pop
adc
fild
sbb
sub
push
ret
jo
add
adc
and
lds
rol
jmp
pusha
call
clc
mov
mov
movzx
sub
inc
pusha
xlat
push
sub
je
add
sub
call
xchg
out
or
sub
or
adc
lds
push
add
dec
xchg
pop
push
and
int3
repz
shr
add
sbb
int3
js
cmp
sub
xchg
push
xor
jle
pop
jnp
adc
lock
scas
adc
push
repnz
ja
daa
pusha
lea
dec
cmps
test
inc
sub
inc
icebp
add
in
add
out
ficomp
xchg
and
cmp
mov
movs
xchg
dec
pop
sbb
cmp
je
add
pop
(bad)
iret
sub
popa
add
loopne
mov
test
sub
sahf
jl
add
add
or
cmp
jne
out
icebp
pop
or
jge
pushf
jmp
mov
fdivr
pop
pop
fsubr
sbb
daa
jne
das
jne
outs
aaa
imul
xchg
loopne
and
mov
cmp
inc
bnd
and
fnstcw
addr16
or
add
fwait
lock
mov
inc
pop
daa
lock
fmul
or
adc
retf
js
and
dec
pop
or
dec
xchg
dec
mov
adc
mov
adc
and
sub
adc
cmp
fadd
ret
loopne
sti
test
add
gs
xor
inc
add
mov
sbb
inc
xor
push
push
or
jbe
(bad)
cld
mov
mov
mov
retf
lock
ss
(bad)
neg
inc
pusha
inc
test
mov
pusha
push
jp
mov
sub
je
add
push
sbb
or
(bad)
std
cmps
sbb
jae
inc
jmp
inc
inc
add
sub
jb
push
stc
push
pop
mov
inc
in
or
sbb
ffreep
cmps
mov
dec
mov
xor
mov
fs
mov
pop
fucom
mov
add
mov
sbb
ret
mov
push
pop
inc
test
inc
and
mov
or
inc
sbb
push
push
sub
push
cmp
dec
jae
xor
xchg
dec
cmc
pop
rcl
mov
cmp
add
and
enter
fwait
push
fld
push
push
popa
lds
sub
jae
jne
(bad)
dec
cwde
sub
add
(bad)
lock
rcr
pop
dec
pop
in
dec
popa
pop
icebp
das
xchg
jl
adc
loop
mov
(bad)
lods
push
pushf
dec
pop
dec
test
shl
test
dec
out
hlt
call
das
push
pop
and
stc
sub
jmp
xor
stos
or
push
in
jmp
jg
mov
jmp
inc
add
jmp
dec
push
adc
xchg
adc
in
dec
mov
cmp
jne
inc
xor
inc
in
and
outs
popa
lods
inc
and
inc
sbb
or
cli
dec
sub
xchg
scas
xchg
pushf
sub
daa
pop
push
clc
cmp
neg
or
push
xchg
pop
aaa
or
xor
arpl
sbb
test
add
jo
rol
in
movs
rol
and
fcmovbe
test
dec
outs
mov
or
or
arpl
or
lea
shl
out
add
fs
les
dec
xor
movs
gs
pop
loopne
int
sub
mov
xchg
repz
add
sbb
adc
test
push
imul
clc
inc
and
and
push
stos
call
jmp
pop
dec
xchg
push
push
imul
pop
loope
xor
add
or
push
jae
or
cs
shl
inc
jae
push
pushf
aaa
mov
mov
pop
or
cmp
inc
call
mov
push
enter
push
(bad)
loopne
cmp
ins
popa
jae
arpl
out
jae
mov
cmp
out
inc
push
sbb
sar
push
push
push
test
fwait
push
and
loopne
fisubr
cmp
push
push
add
push
xor
xor
push
stos
bound
inc
or
shr
cmp
push
test
pop
icebp
stos
xchg
mov
mov
cli
dec
add
adc
fisttp
inc
xlat
ja
mov
sar
mov
xor
ds
pop
add
add
add
inc
mov
or
add
cmp
cmp
inc
aad
arpl
mov
add
mov
xchg
cmp
lahf
push
add
or
mov
stc
test
sbb
das
xchg
fld
lods
and
les
jo
sbb
adc
cmp
xchg
push
out
jne
inc
(bad)
sbb
add
push
into
push
inc
or
adc
stos
dec
cmp
(bad)
rcl
scas
icebp
cmp
xor
scas
out
cmc
dec
push
das
lods
les
inc
sar
add
imul
sub
popa
pusha
cli
or
sub
xchg
jmp
xor
xchg
inc
outs
inc
and
inc
xchg
iret
xchg
mov
adc
fild
add
scas
mov
jmp
add
(bad)
loop
femms
outs
sbb
sub
pop
fwait
sub
inc
adc
stos
push
std
xchg
sti
mov
ja
outs
shl
inc
xor
push
idiv
dec
mov
retf
(bad)
ss
cmp
add
mov
cmp
or
pop
jl
sar
jle
adc
lock
mov
jno
or
sbb
or
inc
leave
push
adc
rol
ins
gs
mov
loopne
outs
jo
push
jne
and
add
stos
jns
inc
arpl
xchg
mov
or
mov
adc
and
das
pop
test
ja
int
or
mov
mov
fsubr
push
xor
das
out
mov
ret
or
movs
das
mov
sbb
test
mov
es
test
xor
push
loopne
inc
pop
push
add
or
(bad)
mov
add
cmp
ss
mov
popa
fidiv
and
or
add
pop
sub
inc
mov
or
and
shl
je
cli
and
ins
fisub
or
pop
cmp
shl
adc
jge
xor
jb
push
sub
push
gs
inc
pop
in
push
outs
pop
enter
dec
adc
push
cmp
inc
arpl
sbb
or
and
jmp
ins
pop
adc
ficom
inc
gs
outs
(bad)
mov
stos
pop
fs
dec
mov
jnp
sub
inc
pusha
mul
cmps
xor
push
sub
das
sbb
pop
(bad)
lahf
push
int3
mov
push
dec
push
cmp
cmps
jno
scas
dec
addr16
or
test
add
and
loope
mov
sub
xchg
mov
cmc
and
cmp
push
fnstsw
adc
fstp
mov
xchg
ja
jmp
or
aaa
mov
or
imul
sti
imul
or
add
sub
sar
mov
and
dec
dec
add
inc
push
test
(bad)
jmp
or
cmp
loope
loopne
nop
mov
rcl
and
fcmovbe
idiv
pop
add
and
adc
xchg
push
cs
mov
outs
daa
add
mov
ins
and
push
aaa
sbb
add
pop
sar
neg
push
rep
xchg
mov
sub
xchg
mov
jb
jno
fimul
jns
popf
les
lahf
pop
(bad)
out
push
daa
jmp
dec
cld
mov
bound
aas
call
dec
mov
cmp
mov
cwde
(bad)
fdivr
stos
test
ret
test
cmp
xor
sub
push
fsubr
cmp
in
mov
imul
repnz
fwait
xchg
adc
xchg
out
lds
adc
xchg
ret
xchg
jo
and
sbb
sar
cmp
fistp
fimul
frstor
lods
and
(bad)
cmp
jne
int3
adc
and
sbb
mov
dec
mov
pop
fcmovne
dec
mov
mov
mov
and
xor
dec
cmp
test
push
les
enter
enter
dec
(bad)
push
inc
xchg
fdiv
mov
push
dec
or
xor
and
lock
cmp
jmp
adc
push
mov
jae
push
push
push
sahf
add
(bad)
sti
push
cli
mov
push
loopne
dec
ins
(bad)
mov
inc
dec
fsubr
inc
or
out
inc
loope
push
or
push
(bad)
aaa
push
sbb
dec
push
je
jmp
jb
jae
call
or
je
push
inc
sbb
movs
movs
xor
mov
adc
cmps
fnstsw
mov
les
(bad)
lahf
int3
in
mov
fwait
mov
dec
hlt
loope
xor
and
(bad)
push
jp
cmps
dec
mov
inc
inc
sbb
in
lock
(bad)
xor
adc
cdq
add
add
add
out
ret
jmp
and
lds
push
jmp
xlat
mov
mov
push
mov
inc
ror
cmp
cmps
cmp
and
mov
mov
and
push
stos
push
popa
dec
test
jp
ret
inc
and
pop
stos
add
sti
loopne
add
pop
adc
inc
mov
mov
jmp
bound
mov
movs
cmp
push
push
std
mov
adc
outs
adc
mov
sbb
fucomip
inc
lock
movs
pop
add
js
adc
shl
mov
in
and
outs
cld
popf
inc
or
mov
rcl
jo
movs
add
or
sub
add
imul
movs
les
mov
ja
aad
scas
popf
adc
lea
push
push
mov
inc
jae
aas
dec
sbb
inc
outs
je
je
imul
or
in
dec
mov
dec
mov
loop
int
jp
push
or
loopne
cmps
outs
sbb
dec
mov
fistp
push
mov
cmps
sbb
inc
fs
jo
mov
push
(bad)
pop
add
test
xlat
adc
rcl
cmp
adc
pop
das
into
mov
cmps
out
cmp
inc
loope
add
mov
adc
pusha
les
lock
mov
call
adc
rdtsc
mov
xor
(bad)
cmp
add
jmp
dec
adc
pop
adc
mov
ins
mov
xor
push
repz
jg
js
jbe
lea
sbb
pop
adc
or
or
cli
shr
cmp
stc
add
push
add
add
jmp
jg
jle
inc
cmp
rcl
stos
inc
add
jg
test
adc
imul
jns
lahf
cmc
adc
xchg
popa
push
xchg
mov
ret
jns
enter
xlat
mov
inc
jno
push
add
fs
jae
dec
or
jno
out
add
jbe
dec
add
fs
cmp
gs
xchg
mov
or
outs
adc
sub
add
inc
jmp
adc
jmp
in
pop
stc
mov
out
ins
pop
sub
push
loopne
leave
or
sub
add
add
loopne
sti
fdiv
ss
pusha
adc
cs
in
int
or
jns
fild
in
lds
cmp
popf
rol
je
xchg
push
cmp
(bad)
out
adc
push
jb
dec
mov
enter
fld
sbb
inc
xchg
cmp
mov
fnstcw
(bad)
dec
and
or
mov
inc
jle
cmp
lock
loopne
and
mov
mov
ret
inc
push
inc
sti
adc
sbb
add
mov
test
and
inc
adc
inc
das
push
mov
ret
or
cmp
mov
xchg
ret
jnp
sbb
sbb
leave
leave
leave
jne
(bad)
and
sbb
xchg
and
mov
push
jmp
int
xchg
mov
shl
jecxz
sbb
mov
mov
mov
and
mov
sub
ins
push
mov
test
dec
mov
fs
rcl
or
adc
push
popa
retf
mov
xchg
mov
mov
gs
fs
mov
add
pop
gs
or
xor
shl
and
add
lods
or
adc
jl
nop
xor
or
add
fcmovbe
adc
add
jge
mov
mov
sbb
test
cmps
inc
not
jne
xchg
or
lds
cdq
mov
cmp
add
or
or
dec
addr16
xlat
inc
addr16
and
add
pop
pop
push
or
push
or
or
ret
push
push
or
pop
push
fisttp
push
or
or
pop
sbb
repnz
fcom
add
push
or
pop
pusha
sar
sbb
out
push
repnz
and
enter
mov
fild
lock
(bad)
das
mov
scas
pusha
add
cmps
mov
pop
sbb
loopne
sub
fcmovb
sub
movs
add
xor
adc
dec
adc
mov
push
lock
(bad)
xchg
pop
lock
repnz
mov
add
mov
pop
shl
sbb
add
cwde
pop
dec
jl
or
jb
sbb
in
enter
(bad)
mov
cmp
push
rol
(bad)
jmp
dec
add
mov
(bad)
rcl
js
jb
test
test
sub
imul
adc
inc
xchg
lock
jle
sbb
or
pop
pusha
les
sbb
xor
lahf
pop
(bad)
dec
xlat
pop
fild
ss
push
lea
sub
add
call
arpl
or
fiadd
adc
outs
jo
fwait
in
int3
mov
mov
push
push
retf
or
(bad)
clc
fsubr
pop
cmps
xor
cs
int3
mov
cs
push
mov
mov
cs
test
jl
push
retf
jns
imul
rol
out
pop
rcl
rcl
sub
mov
loope
xor
and
fcmovnb
push
stc
and
push
test
out
ins
sbb
xor
int
sub
mov
or
js
fsub
test
push
mov
inc
icebp
mov
call
pop
retfw
lock
push
or
inc
retf
scas
adc
std
(bad)
stc
xor
icebp
fdivrp
fs
cwde
push
push
add
jo
std
push
pop
xor
and
jmp
in
push
xchg
cmp
ins
add
pusha
icebp
imul
push
mov
retf
daa
jge
or
push
int3
imul
push
pushf
das
popf
int3
daa
nop
frstor
inc
jmp
add
les
into
add
push
mov
sbb
pop
cmp
pusha
jmp
inc
jne
les
or
or
aas
pusha
mov
pop
xor
ds
pop
sub
pop
push
add
pop
adc
adc
int
sbb
rcl
sbb
sub
add
lahf
add
push
dec
jae
fisttp
pop
sub
pop
addr16
xchg
ja
pop
or
out
scas
jo
arpl
jns
rol
mov
pop
or
cmp
pop
xlat
sbb
mov
fdivr
pushf
rol
into
jmp
cmp
or
or
sbb
cmp
inc
in
push
or
shl
iret
mov
sub
nop
inc
sub
cld
sbb
mov
pop
push
mov
add
add
rcl
and
out
ror
lock
repnz
(bad)
daa
adc
push
icebp
pop
adc
adc
(bad)
adc
aam
outs
fisub
shr
inc
mov
inc
and
test
pop
cdq
cmp
mov
div
xor
cmps
ror
popa
adc
cmps
ins
pop
dec
ins
adc
or
movs
sub
popa
jae
add
add
lods
out
sub
inc
add
pop
add
shl
mov
inc
jg
fs
add
xor
adc
adc
(bad)
lahf
add
pusha
cmp
pusha
and
bound
push
dec
imul
push
push
xchg
xor
push
mov
cmc
xor
or
sub
add
idiv
cmp
jne
pop
xor
add
inc
dec
std
out
push
sar
and
jne
jne
(bad)
push
add
push
cli
lea
mov
sti
in
arpl
push
push
dec
in
adc
cmp
cmp
jp
ret
ins
xchg
cmp
jl
mov
les
or
add
mov
pusha
xchg
fs
or
test
inc
mov
jle
sub
cld
pop
je
aam
mov
push
or
cmp
stos
daa
fcom
lods
add
inc
fdiv
add
lock
or
idiv
cmp
jge
cmp
cs
push
call
(bad)
push
call
cmp
sub
mov
add
or
push
fdecstp
mov
shl
inc
out
add
out
in
ror
pop
outs
ficom
xchg
(bad)
mov
ja
add
mov
pop
dec
push
push
aam
mov
shr
daa
fs
pusha
jl
jbe
pop
sbb
adc
add
mov
push
dec
cwde
add
jmp
inc
lea
inc
cmp
and
cmp
push
mov
mov
lahf
and
fcomp
out
push
inc
pop
or
(bad)
dec
jg
inc
mov
xor
rol
jnp
(bad)
(bad)
fbstp
dec
(bad)
shr
aaa
jmp
mov
sub
popa
aas
daa
pop
add
cwde
xchg
fild
test
cmp
ret
adc
rcr
arpl
mov
sub
and
mov
cmp
pusha
ret
cmpps
lods
and
sbb
or
into
xchg
(bad)
xlat
cmp
add
aas
adc
xchg
enter
dec
outs
cmp
aad
pop
movs
retf
jmp
pushf
xor
and
and
pusha
or
aam
and
mov
mov
jno
adc
pop
push
push
shr
retf
sbb
pop
jno
hlt
push
push
inc
mov
cwde
sbb
push
inc
test
scas
enter
sbb
(bad)
or
pop
(bad)
iret
dec
repz
cmp
push
ins
jge
(bad)
xchg
add
rol
retf
add
or
setg
je
jl
sub
(bad)
add
dec
sub
sbb
and
or
jnp
or
adc
or
push
add
fist
ins
hlt
imul
dec
xchg
add
lock
xchg
adc
pop
rcr
mov
aad
bound
adc
and
sar
cmp
xor
xlat
mul
mov
xchg
rcl
test
xchg
inc
fucomip
sar
fwait
(bad)
mov
xor
add
or
test
add
clc
and
push
dec
inc
inc
sbb
daa
mov
adc
push
push
or
rol
inc
dec
fadd
adc
inc
add
cdq
fcom
inc
pop
test
mov
mov
rcl
fcmovb
add
push
cwde
rol
js
pop
pop
xor
xor
into
add
cmp
jg
push
push
das
mov
aam
xchg
ret
and
pop
clc
(bad)
fstp
fcom
(bad)
lock
xor
inc
js
sub
loop
mov
out
xchg
sbb
dec
inc
adc
add
sbb
adc
adc
inc
sbb
test
cmps
or
dec
int3
sub
sub
cmp
repz
push
loopne
sub
and
int3
mul
ins
movs
xlat
sbb
push
sbb
rcr
xchg
loope
xchg
push
jl
loop
les
and
(bad)
or
loope
sbb
push
adc
push
not
fild
jne
sbb
dec
retf
mov
xchg
push
int3
or
(bad)
(bad)
xchg
push
add
xchg
test
jns
cmps
(bad)
add
jl
add
xchg
xlat
and
mov
(bad)
hlt
scas
fcmovu
pop
dec
loop
adc
or
push
xor
jmp
adc
das
jbe
dec
test
mov
cmp
mov
cmp
cmp
lods
inc
cmp
sbb
pop
jb
add
fwait
push
loope
push
(bad)
mov
test
push
mov
adc
adc
dec
cmp
cmp
dec
ret
jg
and
or
or
iret
dec
sbb
jno
mov
and
jnp
retf
in
mov
or
cmp
push
pushf
dec
stos
(bad)
lock
jne
add
je
mov
and
aad
mov
mov
xor
(bad)
and
add
leave
add
pushf
add
sbb
add
adc
xchg
enter
and
out
push
xchg
sbb
clc
inc
add
(bad)
adc
xor
jge
les
dec
inc
mov
or
inc
mov
adc
add
jb
int3
jmp
sbb
test
pusha
cmp
mov
cmp
retf
js
sti
add
mov
and
rol
xor
cmp
xor
and
movs
ret
cmp
push
pop
mov
dec
sub
cmps
loopne
jb
icebp
and
or
sbb
stos
jp
mov
add
(bad)
or
and
test
jno
aam
xor
inc
xor
leave
pop
imul
push
and
xchg
add
push
inc
(bad)
out
xchg
and
pop
int3
push
stos
std
or
cmp
mov
and
mov
adc
push
push
stos
mov
add
out
sbb
add
mov
add
in
mov
jbe
jmp
inc
adc
aaa
cmp
lds
into
in
sbb
and
nop
movs
adc
adc
push
cmp
out
sbb
cmp
fldcw
pop
rcl
addr16
sub
out
loope
loope
ret
dec
ret
(bad)
sbb
pop
jmp
jmp
out
cmps
sub
in
dec
sti
fidivr
jmp
dec
sub
mov
add
push
jo
jo
rol
loope
sub
inc
or
ds
fstp
retf
pop
pop
inc
mov
loopne
ins
div
enter
cmp
das
arpl
push
icebp
(bad)
mov
femms
push
in
mov
add
push
push
mov
pushf
pushf
mov
adc
inc
mov
mov
adc
ins
loope
mov
jmp
inc
mov
push
adc
adc
sub
sbb
dec
sahf
mov
lds
xor
sbb
fst
imul
bound
push
sbb
lock
popa
inc
nop
ret
mov
inc
dec
push
dec
jo
in
dec
js
call
in
ror
inc
ror
sub
inc
jno
jmp
sbb
mov
jnp
dec
and
mov
inc
mov
lock
mov
js
pushf
adc
pop
imul
inc
jne
xchg
retf
cmp
lock
inc
in
dec
xlat
add
and
or
mov
aam
sbb
pop
cmps
adc
add
add
add
push
ret
xor
imul
sbb
mov
rcl
and
adc
mov
pop
or
jmp
and
or
ret
shl
out
xchg
inc
rcl
pop
pop
push
pop
pusha
shl
xor
movs
fs
inc
add
mov
retf
push
add
fcomp
mov
or
lds
cmps
(bad)
sbb
test
jns
xor
test
sub
and
push
xchg
hlt
push
adc
adc
pop
pop
or
and
scas
test
popa
imul
mov
add
mov
adc
in
int
add
dec
out
aas
dec
adc
dec
aas
adc
add
out
loopne
ret
int3
out
pusha
imul
push
push
cld
xlat
jecxz
jbe
or
imul
cmp
lock
icebp
pop
lods
repnz
lock
sbb
hlt
xor
pushf
cmp
pop
cld
sbb
out
mov
out
mov
sub
pop
ss
inc
jne
adc
pusha
push
sti
test
and
push
in
fisubr
dec
push
aad
jbe
out
push
(bad)
sbb
push
jae
daa
add
mov
pop
pop
add
mov
push
sbb
sbb
or
lahf
dec
inc
add
pop
adc
push
pop
sub
jl
iret
imul
scas
pop
aad
inc
push
sub
inc
and
dec
push
push
mov
mov
xchg
aaa
adc
jo
xchg
or
daa
lds
(bad)
arpl
and
nop
test
addr16
loopne
jb
je
lea
imul
sub
das
gs
loopne
dec
xor
les
je
cmps
fcom
add
aad
(bad)
dec
arpl
(bad)
popa
ror
dec
fucom
sbb
shl
mov
jmp
out
cmp
aaa
sub
add
das
add
nop
ret
mov
jecxz
mov
push
xor
in
test
jne
mov
add
cld
dec
add
cmp
pop
mov
cmps
inc
or
pop
inc
cdq
and
and
and
or
repz
aam
and
xor
cmp
sahf
ret
and
inc
clc
(bad)
test
repz
adc
lock
and
mov
jecxz
xbegin
mov
ja
cmp
out
and
test
push
push
push
jmp
adc
xchg
cmps
and
call
push
jnp
push
add
add
cli
ja
sub
(bad)
push
cmp
dec
iret
jne
cld
(bad)
loopne
fs
mov
adc
sbb
into
in
in
cmp
stc
sti
add
arpl
dec
cld
push
add
fdiv
mov
pop
push
sbb
aad
and
test
(bad)
push
out
ret
push
lock
or
xor
in
lods
mov
dec
loope
push
rol
fist
and
dec
add
add
or
cmp
add
xchg
mov
shr
ins
imul
jbe
add
fdiv
sti
mov
scas
out
push
pop
xchg
sub
push
mov
mov
mov
psubusw
or
mov
adc
aam
out
xor
inc
sbb
sub
push
jo
mov
cmp
cmp
or
add
pop
stc
in
inc
call
adc
jmp
pop
and
xchg
out
cmps
or
iret
das
hlt
adc
xor
push
xor
adc
add
inc
(bad)
jp
in
or
xchg
mov
or
or
mov
jbe
dec
jne
push
and
inc
dec
xchg
adc
data16
out
mov
or
or
push
inc
jb
js
je
adc
enter
xor
push
add
(bad)
or
scas
sbb
push
out
scas
mov
xor
or
rcr
inc
mov
push
add
adc
jmp
jmp
loopne
rcr
(bad)
xor
sub
pusha
xor
icebp
mov
arpl
shr
dec
and
popf
adc
mov
pop
rcr
sub
push
les
push
add
call
clc
lock
mov
cmp
or
lea
mov
sahf
std
lock
cld
jne
sbb
retf
adc
lahf
(bad)
mov
dec
cmp
icebp
cmp
lock
enter
dec
mov
jnp
dec
pop
jo
inc
or
test
or
or
sbb
add
adc
xor
adc
jo
mov
add
add
push
sbb
fcmovnu
enter
push
mov
enter
xchg
xchg
jno
ret
enter
lahf
mov
add
xor
sbb
call
sbb
and
sar
cmps
dec
loopne
or
or
ja
adc
and
push
or
mov
push
lea
test
add
mov
sbb
push
push
and
ja
dec
ror
sub
mov
neg
lock
add
add
push
mov
xchg
or
adc
hlt
rol
xchg
adc
jmp
jnp
cmp
cmovs
cdq
xor
movs
std
fadd
fnstsw
pop
inc
adc
or
add
pop
adc
mov
test
faddp
call
add
adc
data16
or
out
add
or
test
hlt
xchg
or
sar
clc
or
das
or
jne
jecxz
mov
adc
outs
sbb
jge
push
mov
push
push
adc
jbe
inc
shr
sub
adc
jl
xor
or
ss
jo
or
add
mov
pusha
and
inc
adc
(bad)
shl
mov
mov
add
jl
fst
inc
clc
das
sub
mov
call
pop
pop
pop
push
push
cmp
lea
mov
ss
or
sub
aas
fsubr
push
xchg
adc
mov
outs
inc
mov
sub
jg
dec
xor
cmp
inc
in
popf
aam
loopne
pop
push
std
leave
sbb
jbe
mov
test
dec
pop
ror
pop
lods
out
setle
jo
sub
and
(bad)
jno
js
adc
mov
mov
bound
outs
add
div
(bad)
or
dec
mov
inc
mov
enter
loope
aas
push
(bad)
je
ret
cs
inc
sahf
jb
cmps
into
inc
clc
lock
dec
enter
add
jmp
movs
mov
(bad)
and
mov
test
cdq
hlt
add
sbb
cmp
xlat
(bad)
inc
gs
inc
add
sub
(bad)
sub
sbb
cmps
mov
dec
sbb
jne
out
jns
mov
icebp
inc
cmc
rcl
stos
fsub
cmp
xor
nop
into
push
ja
or
fdivr
(bad)
cmp
jp
mov
in
addr16
call
movs
adc
push
add
adc
dec
mov
xor
jg
add
jbe
sub
idiv
dec
lods
fsub
repnz
dec
push
and
cmp
sbb
lds
(bad)
jg
dec
or
adc
in
push
xchg
leave
add
inc
cmp
shr
pop
sti
sbb
loope
pushf
xchg
mov
clc
lahf
outs
dec
imul
jnp
mov
nop
push
shl
xor
cmp
movq
jae
shl
pop
ja
je
icebp
mov
rcr
and
adc
stos
mov
adc
jge
jmp
xchg
imul
inc
add
out
xor
push
adc
call
outs
adc
lahf
mov
jne
outs
and
push
sahf
dec
push
xchg
out
movs
ja
rcl
or
jae
fsubr
inc
cmc
cld
iret
mov
sbb
push
(bad)
xlat
cmp
adc
mov
fs
popa
jns
in
push
mov
cmp
sbb
lahf
loopne
popa
bound
mov
mov
popa
js
and
(bad)
jg
cmp
ja
add
sub
pop
and
add
lahf
(bad)
call
cs
adc
inc
push
int
inc
push
pusha
aaa
mov
dec
call
daa
jno
outs
adc
popa
add
daa
push
jns
and
call
ror
fwait
repnz
js
inc
or
out
dec
push
dec
dec
push
je
ins
out
(bad)
(bad)
jg
push
adc
dec
xchg
and
loop
inc
xor
xchg
mov
jmp
cwde
in
sub
cmps
(bad)
fiadd
test
pop
retf
(bad)
out
mov
test
sub
dec
jae
(bad)
jg
mov
sub
fnstsw
mov
sar
or
xchg
ins
(bad)
std
mov
mov
inc
pop
sub
mov
add
jbe
cmps
jg
adc
mov
mov
xlat
pop
test
cmc
or
xlat
xchg
cmp
dec
inc
mov
out
sar
sahf
mov
pop
aad
lahf
fwait
das
pop
mov
mov
scas
dec
cmps
cld
in
adc
inc
in
leave
inc
jnp
ja
out
dec
outs
mov
fwait
out
sbb
sar
push
add
jmp
(bad)
aas
retf
lea
push
sub
inc
movs
sub
or
pop
fs
cs
setg
sbb
xor
fnsave
xchg
addr16
push
mov
sub
outs
lock
daa
cdq
ret
push
mov
inc
adc
xlat
sub
ja
adc
push
xchg
popa
ja
or
loopne
jg
jns
and
pop
dec
ror
mov
inc
lods
lock
inc
jb
adc
ja
cmps
imul
ret
rcl
and
xor
fild
jae
add
das
sbb
loope
mov
dec
ret
cmps
add
bound
jl
and
imul
call
test
loopne
add
cmp
add
daa
je
sub
sbb
rcl
fcom
mov
mov
pop
or
adc
dec
das
loopne
test
push
minps
pusha
dec
movaps
in
xor
pop
ins
inc
add
ret
dec
or
mov
or
mov
les
jnp
cmp
jb
sub
jns
pop
imul
mov
test
xor
add
push
addr16
pop
jg
clc
push
push
(bad)
popf
sbb
push
inc
or
loopne
jmp
jmp
sub
jmp
xchg
dec
(bad)
xlat
popa
and
add
add
inc
dec
xchg
add
addr16
cmps
push
sbb
pop
int
add
xchg
add
sub
inc
(bad)
jp
push
add
push
push
lahf
aaa
dec
mov
das
add
sbb
add
jo
push
mov
push
xchg
jne
fmulp
imul
mov
ss
outs
or
or
xor
popa
aas
add
push
mov
add
bswap
adc
mov
add
xchg
jle
gs
inc
daa
je
xchg
sbb
mov
mov
cmp
inc
fwait
jbe
or
rcr
inc
inc
or
ret
mov
or
outs
xchg
addr16
dec
jle
or
loopne
add
jae
mov
scas
hlt
add
mov
repz
int3
rol
or
js
push
xchg
mov
xchg
sbb
add
ret
cwde
and
jge
movs
popa
jecxz
or
fisttp
xor
and
jl
push
inc
arpl
pop
dec
and
add
call
aaa
inc
pop
mov
sub
gs
mov
sub
and
test
xor
shl
add
add
sub
push
aaa
adc
inc
inc
push
fisub
(bad)
jo
fld
and
or
repnz
push
sbb
inc
cmp
int
add
or
xor
es
add
pop
aaa
and
xor
push
jns
mov
in
xlat
icebp
(bad)
xor
mov
fild
mov
js
scas
fs
and
xchg
mov
test
mov
and
or
and
add
mov
adc
inc
daa
jo
xchg
ret
js
cmp
inc
mov
dec
push
aaa
adc
icebp
sbb
jno
out
sbb
xor
js
pop
xchg
sbb
aas
xor
and
or
std
call
(bad)
out
dec
xchg
stos
dec
jbe
call
cmp
sbb
enter
ds
xchg
mov
stos
cmps
push
pushf
aad
mov
sub
arpl
pushf
add
push
nop
ins
jo
mov
inc
dec
jns
cmp
sti
mov
dec
push
add
or
or
enter
popf
or
and
ss
push
adc
data16
pop
adc
cmp
push
inc
cs
outs
movs
mov
mov
loopne
push
adc
mov
pusha
jo
cmp
inc
out
jo
fcomp
add
test
or
add
xor
add
dec
shl
and
adc
pop
xlat
sub
jae
push
fisub
loope
add
xor
aaa
xor
add
cmp
mov
adc
jns
pop
repnz
push
test
outs
jns
icebp
cmp
cwde
inc
inc
mov
aaa
jne
sub
mov
or
ror
push
pusha
push
pop
or
add
mov
or
ud2
push
and
(bad)
icebp
or
lock
push
hlt
push
ror
push
sbb
sbb
add
or
mov
pop
sbb
jae
in
nop
mov
xor
inc
in
push
mov
js
fs
pop
nop
dec
jo
aas
mov
sahf
or
cld
(bad)
or
mov
arpl
in
push
sub
mov
pop
out
xchg
inc
or
jae
add
mov
xchg
adc
outs
or
addr16
push
mov
or
dec
cmp
adc
inc
in
add
or
pop
bound
mov
gs
out
(bad)
addr16
pop
neg
stc
dec
adc
loope
add
fcomp
sbb
stc
ret
and
xor
push
xor
or
add
(bad)
mov
adc
sbb
(bad)
pusha
addr16
lds
push
stos
rol
jbe
xor
adc
imul
das
push
cmps
dec
adc
sbb
add
aas
sub
jae
sbb
inc
sub
jp
inc
sub
jae
xchg
xor
pop
sub
or
mov
sub
les
jb
inc
push
inc
test
inc
add
sbb
push
aad
push
xchg
mov
cmps
outs
mov
in
retf
in
mov
outs
lahf
pop
cmp
jmp
jo
cdq
out
ret
push
or
pop
int3
adc
add
or
sub
add
pop
addr16
sub
mov
jl
pop
dec
adc
xchg
cmp
jne
jp
clc
dec
cld
jne
lea
jmp
imul
in
pop
adc
xor
xchg
adc
add
push
into
adc
fbstp
add
call
add
and
(bad)
fisttp
mov
mov
mov
pop
lods
mov
mov
(bad)
cmp
daa
add
sbb
xor
adc
inc
adc
xchg
test
adc
adc
call
and
mov
push
je
cli
out
or
jmp
mov
pop
ret
mov
(bad)
out
aaa
stc
test
hlt
jne
clc
aam
sub
adc
clc
lea
mov
push
add
call
inc
fmul
adc
add
dec
lock
mov
test
mov
mov
pop
ret
mov
sahf
call
test
(bad)
push
fdivr
mov
cmp
mov
xor
aas
in
mov
add
test
add
cmp
and
in
push
pop
ret
xor
jecxz
mov
adc
jle
or
ret
add
add
xor
popf
add
fwait
test
push
add
or
dec
inc
xchg
ret
adc
cli
ret
inc
or
dec
mov
add
cmp
mov
std
nop
nop
shl
and
(bad)
mov
cmp
jmp
inc
adc
out
or
dec
cmp
jl
push
pop
or
add
in
test
fist
push
or
adc
imul
dec
inc
dec
daa
jmp
mov
bound
mov
mov
outs
xor
mov
xor
xchg
(bad)
push
xor
es
test
fmul
(bad)
in
add
hlt
nop
add
push
add
sub
xor
sbb
int
sbb
call
sbb
inc
sub
inc
inc
loope
adc
or
mov
jmp
popf
xor
mov
loopne
cmp
add
mov
adc
pop
and
into
adc
push
dec
shr
or
or
jmp
fcmovnb
out
rcr
leave
sub
xor
add
jno
sbb
lea
aam
call
jp
mov
bound
cmp
jge
loope
cli
push
ret
add
sti
add
jae
or
push
in
jmp
stos
call
add
je
dec
je
ja
add
test
je
repnz
add
adc
cmp
loopne
add
call
enter
xchg
jge
cmp
jbe
adc
push
push
jne
push
mov
pop
inc
bound
cmp
or
ins
sub
test
lods
fdivr
sub
and
and
adc
pushf
rcr
cmp
fnsave
cld
out
enter
or
jmp
xor
push
push
add
mov
add
cmp
inc
pop
xchg
or
push
jge
inc
or
fadd
imul
adc
sub
add
outs
dec
mov
mov
or
jmp
mov
xchg
push
test
jmp
das
add
pusha
sbb
xchg
loop
movs
add
add
mov
push
pop
inc
jbe
add
and
or
mov
(bad)
fist
in
mov
push
jg
sti
inc
inc
or
leave
or
aaa
cmp
adc
push
or
inc
sbb
dec
loop
inc
xchg
mov
mov
test
lea
call
add
xor
int3
sub
xor
mov
ret
pop
adc
inc
pop
les
(bad)
push
in
in
lahf
imul
ins
outs
in
in
outs
push
push
push
in
in
push
push
push
push
in
in
push
pop
pop
pop
in
in
pop
pop
pop
pop
in
in
pop
inc
inc
inc
shl
in
inc
inc
inc
in
adc
inc
adc
test
call
inc
or
xor
or
push
gs
fcmovnb
jb
sbb
imul
push
jg
adc
adc
outs
jns
push
test
cmps
sbb
out
jae
cdq
inc
mov
push
sti
fidiv
push
nop
sbb
out
cdq
pop
das
mov
lahf
cmp
test
add
daa
push
addr16
adc
push
lock
pop
fadd
or
push
jecxz
mov
push
xchg
in
cmp
add
mov
inc
add
xchg
icebp
and
call
xchg
adc
adc
inc
cmp
xor
les
xor
in
movs
sahf
(bad)
mov
pop
arpl
fstp
mov
sub
sub
mov
(bad)
inc
dec
mov
je
aas
sub
ret
sbb
mov
push
push
pushf
cmp
fldenv
mov
sbb
les
mov
jne
jo
push
mov
add
adc
pop
in
sub
add
push
cmp
(bad)
push
aas
rcr
and
mov
adc
mov
repz
sbb
or
and
mov
mov
jno
sbb
and
add
xchg
popa
jmp
arpl
and
add
push
cdq
(bad)
mov
jmp
sbb
lahf
or
(bad)
out
or
xor
push
fcom
movs
inc
inc
sub
xchg
add
cwde
pop
sub
imul
sbb
jb
sbb
mov
(bad)
xor
adc
push
pop
cmp
sbb
cmc
cmc
xchg
sbb
sti
fisubr
xor
das
aaa
sbb
sub
dec
jb
stos
lods
mov
iret
rcr
push
push
pop
mov
and
push
dec
cmp
or
jmp
inc
pop
add
and
shl
popa
cmp
cmp
push
add
dec
jl
das
push
std
movs
cs
outs
addr16
mov
test
sbb
mov
jb
xor
sbb
cmp
sbb
push
inc
jl
pushf
mov
out
inc
pop
xchg
fmul
inc
sahf
adc
daa
daa
and
and
into
xchg
xchg
xchg
daa
or
inc
jno
enter
clc
xor
ins
add
xchg
or
and
add
push
or
push
arpl
pop
ror
test
std
mov
sti
jno
mov
dec
pop
xor
add
xor
and
push
xchg
fcom
and
pop
sahf
clc
rol
cmps
add
add
pop
pop
adc
xchg
sub
adc
arpl
xor
push
inc
sbb
(bad)
jp
cmps
arpl
(bad)
dec
or
ror
or
add
or
imul
push
and
das
add
out
and
ins
and
mov
arpl
pop
and
test
pop
inc
test
mov
add
sub
sbb
test
and
push
mov
mov
add
or
mov
mov
mov
popa
push
test
push
ins
xor
adc
adc
std
repz
test
mov
or
cs
add
jnp
lds
sub
xchg
test
sub
jecxz
or
adc
mov
inc
test
loope
shl
es
out
cmp
dec
mov
mov
xor
(bad)
adc
pop
aad
inc
push
push
and
mov
jns
icebp
add
push
sub
sub
pop
nop
clc
xor
or
outs
popa
retf
test
lds
or
stos
cmp
cwde
loop
and
sbb
daa
push
repz
mov
dec
(bad)
jge
push
ret
cmp
add
ins
sbb
es
pop
jecxz
add
mov
add
xchg
out
mov
pop
push
and
sub
xor
mov
paddusw
sub
or
sub
push
stc
dec
loopne
add
mov
dec
gs
xchg
popf
sbb
mov
out
scas
push
lods
or
push
out
push
adc
or
push
pop
inc
lea
pusha
push
jno
dec
add
inc
push
add
aam
sub
pop
js
xchg
cmp
adc
and
dec
jbe
push
shr
or
mov
pop
inc
pusha
nop
pusha
popf
popf
fst
and
xlat
adc
cmp
es
das
test
xlat
add
add
pop
(bad)
push
imul
jo
sbb
clc
in
adc
mov
ret
add
xlat
mov
add
loopne
jne
add
jmp
daa
xlat
push
sbb
dec
adc
sbb
or
outs
push
or
xlat
rol
or
test
jmp
inc
push
add
jo
pop
and
sub
add
or
mov
mov
dec
add
in
inc
xor
sbb
jno
out
mov
ret
outs
movs
cmp
not
jl
sahf
inc
rcr
je
sbb
inc
push
add
test
loop
push
lock
loopne
out
fs
shr
xor
add
adc
push
and
push
and
sub
cmps
or
or
inc
adc
mov
jle
or
mov
and
dec
stos
sub
or
test
sub
or
ffreep
or
outs
mov
das
add
push
dec
push
jmp
and
jmp
mov
push
dec
and
cmp
ror
cli
cmp
cmp
jne
inc
mov
or
jmp
mov
cdq
or
cmp
or
mov
sbb
push
jo
es
xchg
push
(bad)
sti
push
dec
push
add
and
fwait
xor
mov
or
popf
fst
and
loopne
dec
cmp
or
pushf
idiv
mov
adc
cmp
imul
dec
xor
and
pop
das
adc
jne
aaa
push
or
daa
push
sbb
mov
shl
xchg
mov
add
inc
dec
daa
jbe
imul
jp
ins
pop
fcom
das
mov
or
sbb
mov
xchg
test
jo
je
fisttp
stos
mov
push
mov
add
sbb
sbb
das
loopne
cmc
sub
enter
shl
int3
mov
(bad)
test
retf
push
aam
xchg
mov
pusha
sti
fild
pop
inc
sbb
fdiv
rol
ins
sbb
mov
pop
and
xor
jmp
add
push
jo
push
test
dec
inc
push
fidiv
nop
sub
or
inc
jmp
sbb
push
inc
xor
(bad)
js
and
repnz
dec
sub
xchg
push
xor
pop
add
mov
add
push
adc
clc
lods
adc
or
daa
int
sub
xor
sbb
xchg
add
out
mov
xchg
xchg
adc
pop
or
inc
fcomp
lea
pop
stos
lock
ss
inc
dec
ds
(bad)
push
sub
mov
xor
or
mov
popa
inc
or
mov
cmp
fisubr
mov
loope
loop
(bad)
jno
mov
jbe
js
pop
test
cs
inc
mov
mov
add
mov
test
dec
fs
out
inc
add
push
mov
pop
add
xor
dec
xor
pop
pop
mov
pop
or
add
pop
sbb
sub
xor
lahf
mov
add
lock
push
inc
push
inc
rol
popf
movs
arpl
add
clc
pushf
adc
mov
push
xchg
or
sbb
sti
mov
ror
rcl
mov
xchg
aam
add
sub
out
sahf
sub
cmp
xor
dec
cmp
mov
test
cmp
and
jo
inc
inc
adc
test
sbb
sub
mov
add
or
outs
or
test
jo
pop
and
or
add
dec
jl
jne
adc
inc
dec
hlt
or
push
inc
popa
jae
pusha
or
pop
xor
popa
mov
mov
movs
popa
and
cmovg
xor
dec
fcomp
psadbw
in
mov
fdivr
icebp
or
mov
ja
jmp
cmc
rcr
pop
das
out
sbb
fiadd
xor
xchg
clts
pop
mov
xor
dec
mov
cmp
push
ss
mov
and
or
es
push
pop
pusha
xor
loopne
imul
push
shl
daa
out
mov
jg
pop
cmp
inc
es
xor
mov
sbb
cmps
sbb
fild
xor
shl
fimul
adc
cmp
or
aaa
cmps
out
jne
in
sbb
ss
cs
pop
rcr
jb
inc
(bad)
or
sbb
add
inc
xor
add
xor
adc
mov
adc
pop
xor
xchg
es
adc
cmps
retf
pop
mov
jno
das
pop
fild
sbb
test
inc
outs
mov
or
ror
mov
jl
inc
lds
adc
mov
pop
push
pop
mov
sbb
sbb
in
and
jne
popa
mov
add
in
sbb
das
adc
test
pop
lahf
mov
pop
sbb
xor
sbb
add
enter
sbb
cwde
int
gs
inc
in
nop
dec
and
cwde
(bad)
jno
(bad)
adc
sbb
mov
inc
pop
jbe
push
cmp
mov
xor
mov
nop
add
cdq
and
int3
jb
sbb
or
adc
cli
sbb
inc
outs
outs
lock
and
xor
mov
lds
mov
xor
adc
lods
push
dec
ins
dec
popf
add
cmp
xchg
cdq
int3
pop
sbb
mov
leave
test
xor
push
xchg
neg
pusha
ja
sar
jb
or
push
xor
add
push
mov
mov
xchg
lods
into
xchg
mov
pop
rol
ja
ss
xlat
push
pop
mov
push
in
xchg
aaa
push
mov
enter
push
mov
sub
push
inc
mov
dec
push
ins
inc
ror
push
dec
pop
xchg
add
inc
jnp
adc
dec
enter
add
inc
sbb
shl
fld
jl
pop
inc
pop
inc
outs
(bad)
cmp
jb
inc
cmp
pusha
inc
adc
adc
add
inc
push
pop
xchg
inc
retf
jo
scas
cmp
adc
rcr
pop
(bad)
js
sbb
fmul
cs
loopne
jne
sub
leave
dec
sub
pop
cmp
pushf
cs
add
add
adc
jne
cmps
(bad)
push
cmp
imul
mov
xor
addr16
stc
loop
scas
dec
jge
push
popa
adc
lahf
adc
push
mov
mov
pusha
pop
mov
aad
push
mov
adc
rcr
(bad)
js
sbb
ss
jmp
cmp
ins
cmp
dec
lgdtd
push
mov
ss
pop
test
dec
and
loope
xor
pop
xor
adc
movs
in
sbb
fsub
sbb
inc
add
inc
push
adc
and
xchg
movs
test
ret
shl
dec
or
pushf
add
add
stc
sub
pop
call
mov
sahf
fld
pop
lods
pop
mov
mov
pusha
mov
xchg
add
sbb
adc
or
lods
pop
cmp
xchg
and
cmp
adc
inc
cmovbe
popf
stos
outs
sbb
inc
jmp
add
or
add
jbe
ss
push
inc
movs
das
pushf
pushf
sub
call
push
call
out
sahf
out
frstor
inc
jns
sar
loope
fucomp
(bad)
inc
and
outs
pop
jo
push
sahf
les
daa
add
and
out
rol
dec
push
add
xchg
data16
add
xor
or
mov
cmp
(bad)
rcr
aas
cmp
sub
scas
es
popf
mov
aas
iret
inc
xchg
push
daa
mov
dec
pop
pop
(bad)
cmps
push
cmp
loopne
scas
inc
addr16
out
ins
popa
outs
or
dec
popa
or
pop
dec
arpl
inc
popa
ud2
jg
add
lods
dec
pusha
mov
add
pop
ins
fsub
mov
dec
mov
dec
jne
inc
jmp
ret
cmps
jne
cmp
add
ds
or
inc
jp
(bad)
fs
rcr
or
push
ins
sub
sbb
pop
mov
retf
jae
in
mov
dec
push
add
and
fsubr
push
push
out
dec
repnz
add
ds
scas
add
ja
jae
and
dec
fld
scas
dec
push
dec
or
js
mov
mov
push
and
cmp
shr
bound
jns
(bad)
jno
inc
inc
stos
neg
ins
or
imul
mov
dec
out
mov
mov
dec
mov
dec
adc
mov
popa
loopne
rcr
mov
push
lea
mov
std
mov
cmp
or
add
xor
sar
fcom
add
outs
cmp
add
cmp
push
or
mov
add
shl
jge
pop
add
pop
mov
inc
fist
mov
adc
xor
sbb
cmp
cmp
imul
leave
push
add
in
xchg
cdq
fdivr
mov
bound
pop
jb
lods
shl
hlt
fst
hlt
loopne
nop
retf
test
hlt
inc
pop
ins
mov
xlat
dec
inc
and
pusha
ss
dec
and
loopne
lods
cmp
mov
in
or
iret
jnp
adc
inc
pop
call
push
inc
push
in
adc
and
sbb
aaa
xor
sbb
mov
or
cmp
loopne
inc
add
cmp
ins
or
adc
pusha
retf
das
call
sub
scas
dec
sbb
jmp
mov
rol
cmp
arpl
xchg
mov
ins
dec
push
(bad)
hlt
adc
add
push
in
dec
jl
mov
lock
sbb
mov
jo
add
and
fsubr
jle
adc
es
add
ins
add
push
jbe
or
mov
or
push
push
ds
in
shr
xor
push
xor
push
cmps
dec
jns
xor
cmp
jns
xor
cmp
push
fsub
cmp
mov
std
add
(bad)
fadd
jl
or
rcr
xchg
and
push
adc
lods
mov
fsubr
cs
cmp
movs
add
xchg
add
pop
js
cmp
add
jg
aas
test
or
sbb
outs
add
push
lahf
cdq
adc
add
iret
jb
lock
clc
inc
cmp
ins
mov
sub
pop
cld
(bad)
retf
push
mov
pushf
in
in
call
ds
sbb
adc
mov
add
out
sub
ret
inc
rol
mov
mov
sub
imul
or
or
and
cmp
rol
movs
dec
and
into
rcr
add
add
fst
xor
push
push
fs
es
adc
lock
push
lock
ss
xlat
nop
jmp
outs
adc
xor
and
inc
dec
jne
mov
aam
inc
stos
mov
out
xor
jg
movs
mov
and
add
sbb
sbb
inc
call
(bad)
ss
mov
sub
and
stos
jae
clc
ins
inc
or
ret
push
or
xchg
mov
push
test
popa
fisub
cmp
push
out
add
call
add
nop
into
pop
(bad)
daa
mov
adc
fadd
into
push
inc
dec
xchg
fadd
in
(bad)
or
cmp
int
add
pop
dec
fsubr
pop
or
shl
cmp
sar
(bad)
adc
test
lods
test
mov
dec
mov
cwde
sub
pushf
dec
and
cld
cmp
je
mov
push
adc
jne
ins
pop
(bad)
sub
std
shl
adc
add
imul
pop
mov
movs
inc
sub
pop
xor
popa
dec
dec
jne
clc
push
sbb
inc
pop
dec
aad
sbb
mov
or
push
add
clc
or
fsub
cwde
shr
jge
lahf
cmp
add
ins
and
sbb
fldcw
adc
pop
retf
add
daa
aam
rol
js
add
adc
call
jmp
xor
push
ret
ja
cmc
push
mov
loopne
mov
(bad)
(bad)
push
jmp
add
lea
pop
cmc
jmp
bnd
mov
repnz
sbb
push
cmp
push
nop
sbb
dec
clc
pop
push
out
or
test
add
cwde
out
pusha
push
push
in
ret
daa
shl
sbb
bound
ret
add
jmp
dec
in
dec
xchg
jno
aaa
adc
dec
jmp
loope
add
repz
inc
pop
or
dec
inc
cmp
sub
test
sbb
or
adc
rol
dec
mov
clc
pop
in
sar
les
test
sbb
retf
hlt
shl
popw
repz
adc
sbb
ins
inc
hlt
in
xor
mov
inc
add
mov
and
sar
add
mov
and
test
sbb
add
aas
dec
xchg
ds
xchg
scas
mov
jns
aam
xchg
add
jb
pop
in
shl
cdq
dec
rcr
mov
fmul
hlt
xchg
sbb
xchg
(bad)
icebp
adc
pusha
jno
out
push
les
fcomp
xchg
mov
mov
jae
das
push
lock
popw
fsub
loop
push
add
rcl
cld
retf
push
add
sbb
push
push
cmp
fild
or
jbe
or
xor
pushf
sbb
mov
jne
in
inc
push
(bad)
loopne
in
ret
sbb
test
xor
push
call
xor
inc
dec
and
or
and
test
pop
add
sbb
loope
rol
add
or
inc
pusha
pop
mov
push
push
cmps
sti
les
mov
push
pop
inc
push
add
pop
add
add
pop
push
outs
loop
jne
inc
mov
scas
aaa
xchg
push
das
and
adc
mov
cmp
popf
stc
outs
inc
pop
inc
movs
arpl
cmp
adc
adc
push
aaa
pop
jbe
cdq
pop
mov
pop
pop
dec
dec
mov
fwait
add
add
and
pop
dec
leave
test
pusha
retf
clc
mov
pop
sub
mov
push
dec
or
xlat
cmp
or
pop
push
push
fs
and
and
js
sub
sets
sbb
(bad)
div
shl
add
mov
call
sub
pop
push
cmp
mov
mov
and
scas
sar
aad
push
add
aas
mov
pop
hlt
imul
and
jae
iret
adc
pop
jmp
pop
pusha
mov
and
in
mov
(bad)
xchg
add
lods
dec
aad
pop
jl
ja
fld
cmp
mov
sub
fld
and
dec
dec
or
inc
pop
mov
jmp
dec
xchg
rol
xor
aas
daa
add
aaa
pop
add
inc
rol
xor
cmp
push
test
push
aas
push
jl
(bad)
mov
xchg
inc
sti
dec
cwde
cmp
out
lock
or
mov
scas
icebp
sub
add
in
and
adc
jo
inc
jge
ins
mov
shr
pop
bound
lea
js
es
inc
call
in
mov
pop
and
cmp
push
shr
push
adc
xchg
xchg
push
fidiv
mov
fild
rcl
push
jbe
jl
hlt
mov
mov
fsub
(bad)
dec
push
fild
sbb
popa
je
jo
dec
pop
or
xchg
inc
call
inc
mov
jae
pand
fstp
mov
push
pop
call
mov
mov
push
jle
dec
loop
les
cmp
icebp
mov
and
push
jecxz
mov
je
in
mov
cdq
fdiv
mov
mov
jns
fild
inc
adc
mov
inc
loopne
xor
inc
sti
scas
jno
cli
mov
jne
dec
push
or
and
push
in
add
mov
mov
(bad)
loopne
lahf
cmp
lds
or
mov
add
call
push
data16
inc
pop
in
add
fsubr
add
rcl
aam
pop
cmp
mov
cld
data16
sub
cmp
jne
dec
jl
mov
jmp
dec
je
or
sahf
adc
ret
mov
shr
mov
daa
xchg
int3
jns
pop
cmp
inc
add
fisub
ins
dec
outs
sbb
sbb
lock
jb
in
shr
mov
ins
jmp
add
in
sbb
push
nop
xchg
imul
ja
gs
mov
mov
stc
jmp
adc
mov
and
fsub
fsubr
jmp
xor
int
jmp
mov
rcl
ror
xlat
push
lods
adc
cmp
jmp
push
test
pop
arpl
xchg
inc
sbb
push
stos
or
jnp
adc
mov
or
cli
jno
fdivr
push
pop
xor
adc
or
sbb
push
sbb
or
pop
lock
xchg
mov
(bad)
ss
or
stos
adc
push
add
maxps
fst
ins
jo
mov
or
ins
(bad)
pusha
js
inc
fadd
push
aas
cmps
dec
or
les
or
cmp
add
out
sub
shl
push
cdq
call
bound
sub
(bad)
push
shl
xor
mov
sar
icebp
sub
clc
push
jecxz
adc
sbb
pop
pop
jecxz
ret
scas
dec
push
cmp
inc
loop
(bad)
popa
dec
fst
inc
cmp
ins
std
or
jecxz
cmp
nop
ror
xor
fdiv
push
js
rol
push
cmp
jo
push
mov
ret
movs
lds
mov
jb
mov
mov
jae
inc
test
cs
push
loope
sub
push
inc
sub
pop
(bad)
mov
push
and
push
add
mov
fcmovb
inc
test
xor
inc
js
push
xor
pop
(bad)
cmps
add
(bad)
hlt
pop
xor
jl
and
push
clc
and
mov
jb
push
sbb
cmp
sub
or
mov
dec
fist
das
adc
dec
inc
push
xchg
inc
adc
dec
add
mov
adc
(bad)
leave
jo
pop
adc
(bad)
cmp
pop
daa
lea
(bad)
daa
or
push
das
inc
jb
xor
fmul
shl
jb
lods
aam
pop
mov
adc
jl
xchg
pop
adc
sahf
push
rcr
push
jmp
loope
sahf
mov
vmaxpd
mov
add
adc
cwde
in
fcomp
mov
push
add
sub
rep
scas
push
stos
push
(bad)
daa
aad
sbb
add
dec
add
xor
xor
or
xchg
jmp
les
call
outs
add
sub
gs
mov
push
sbb
cmp
pop
arpl
and
jge
lods
pop
inc
and
inc
push
imul
scas
add
pop
cmps
add
add
mov
mov
sbb
test
lea
adc
out
scas
xchg
dec
mov
daa
sahf
pushf
pusha
mov
aaa
push
outs
loope
inc
das
call
js
es
loopne
adc
sbb
ror
jmp
ret
or
cs
fist
mov
clc
inc
int
push
or
mov
push
or
jne
jnp
mov
dec
and
imul
jmp
arpl
xor
jle
dec
les
pop
mov
mov
add
sub
dec
xchg
jg
mov
in
enter
or
adc
lds
loopne
add
fsubrp
push
inc
push
aad
cmp
pop
les
sbb
inc
loopne
test
adc
xchg
add
add
ret
add
add
sub
jo
pop
pop
add
mov
sub
add
or
or
outs
test
dec
in
mov
or
sub
mov
js
rol
aas
mov
push
pop
sti
cmps
jmp
xchg
push
pusha
push
add
out
push
cmp
arpl
jnp
cmp
ror
rcl
shl
mov
xor
push
jl
mov
pop
inc
sub
or
add
addr16
inc
and
push
jp
sbb
mov
mov
(bad)
je
xor
fisttp
jmp
xchg
inc
push
test
and
xchg
pushw
xor
(bad)
jg
add
add
inc
lahf
jnp
add
outs
hlt
ret
inc
and
jnp
fwait
mov
inc
push
enter
das
add
ja
push
xor
xchg
mov
scas
pop
cwde
sbb
inc
add
test
xchg
imul
mov
or
(bad)
(bad)
pusha
mov
mov
mov
pop
movs
lahf
add
pop
xchg
add
(bad)
dec
push
in
cdq
mov
mov
das
xor
and
lods
mov
and
cld
add
add
(bad)
push
out
sub
aad
dec
add
mov
icebp
outs
sub
or
pop
mov
adc
jg
ins
push
push
or
movs
push
push
js
or
push
add
icebp
arpl
imul
mov
(bad)
imul
or
jmp
add
in
in
mov
fist
pop
pop
xchg
xor
adc
cmp
xor
ins
popa
aad
push
(bad)
push
pop
lods
movs
(bad)
cmc
jne
add
add
xchg
ds
xchg
jge
add
arpl
pop
or
mov
ins
or
stc
iret
mov
les
shr
mov
shl
ins
(bad)
iret
sub
sbb
push
inc
pop
stos
push
lods
adc
adc
shr
ror
and
push
pop
mov
lods
sbb
inc
stos
mov
(bad)
(bad)
not
ins
addps
cmp
cmps
pop
and
movs
xchg
pop
add
jmp
push
dec
arpl
and
add
jmp
push
cmp
outs
jg
push
dec
outs
shl
fstp
lock
cmp
push
jg
xchg
hlt
xor
xchg
jbe
lar
call
cmp
cmp
(bad)
outs
or
cld
sar
dec
add
daa
mov
outs
(bad)
stc
or
sub
aaa
inc
(bad)
or
mov
pop
mov
repnz
sbb
add
scas
or
cmp
nop
fcomp
mov
push
adc
push
inc
inc
cmp
hlt
mov
je
jge
mov
aas
adc
or
xchg
pop
dec
jo
(bad)
adc
jne
ins
mov
fs
dec
pop
clc
stos
mov
or
rcl
scas
out
mov
pop
inc
popa
xchg
ss
jmp
sbb
xchg
push
xchg
fldcw
lods
retf
xchg
xchg
retf
xchg
jmp
jo
pop
inc
cmp
jno
popf
out
dec
pop
fs
xor
add
scas
add
mov
in
stos
and
test
mov
jno
xchg
pop
jmp
or
push
data16
cmps
xor
jae
jecxz
lods
rcr
das
pop
shl
or
cwde
mov
adc
or
loopne
inc
push
mov
or
add
sbb
mov
push
add
dec
leave
out
xchg
loope
jo
aaa
adc
out
je
arpl
add
push
sbb
cli
add
dec
cmp
mov
in
add
mov
add
push
jb
jo
jbe
jae
es
jno
and
pop
cmp
jb
and
and
(bad)
lods
int
aaa
sbb
xchg
mov
ss
je
lods
pop
jp
aam
inc
lds
je
jb
cmp
fdiv
inc
mov
and
inc
jnp
fs
pusha
mov
jns
push
cs
icebp
mov
adc
inc
sbb
lea
jmp
dec
add
pop
cmp
inc
je
or
test
cwde
in
stos
retf
or
xchg
or
sbb
or
xor
fwait
mov
or
stos
jns
adc
test
inc
adc
add
cmps
je
fwait
nop
push
iret
xor
pop
pop
cmovno
out
xor
jae
push
or
add
push
imul
sbb
sbb
fisttp
adc
sub
mov
imul
add
ins
outs
ja
pop
mov
xchg
sub
xchg
bound
mov
pop
pop
inc
inc
or
popa
jae
inc
sahf
daa
sahf
jp
dec
les
and
jbe
push
bnd
mov
clc
xchg
mov
push
push
add
push
in
clc
push
fdivr
repnz
cmp
ins
ins
or
push
sub
jmp
mov
push
mov
adc
jo
or
push
outs
les
or
pop
repnz
in
or
dec
pop
or
or
push
or
inc
ins
sbb
ror
pop
xchg
or
ret
cmp
or
add
repnz
xchg
in
ds
sbb
mov
jb
call
or
enter
xchg
jne
mov
fdivr
enter
and
push
enter
mov
push
ja
in
retf
enter
pop
js
fisub
and
pop
test
adc
jecxz
inc
mov
and
dec
jge
inc
jmp
and
std
fld
push
cli
cmp
dec
jle
test
push
test
in
fdivr
arpl
xor
and
test
pop
lods
gs
pop
sub
adc
stos
jl
dec
movs
sbb
xchg
sbb
ret
add
in
sar
jne
sbb
jp
aaa
add
xchg
rcr
sbb
out
mov
mov
or
push
mov
hlt
mov
add
inc
out
rol
inc
cmp
add
inc
gs
or
inc
sbb
inc
clc
stos
ss
sub
push
test
mov
xchg
add
jo
jnp
cld
nop
iret
or
popa
push
pop
pop
xor
pop
add
pusha
sub
dec
fadd
jl
add
retf
add
sbb
cmp
sub
sub
pop
aaa
or
sub
pop
add
pusha
jnp
scas
test
cvttps2pi
(bad)
scas
jp
fimul
mov
add
jle
ins
inc
push
aaa
jmp
push
mov
inc
add
aas
pop
pop
xchg
addr16
cmp
cmp
mov
jl
adc
jge
mov
push
into
das
fmul
dec
js
jmp
mov
push
cmps
push
imul
mov
fwait
call
and
xor
fcomp
lss
inc
jae
adc
jl
adc
push
sub
or
mov
push
push
imul
adc
test
test
mov
push
jle
das
bnd
sbb
mov
adc
mov
call
mov
jge
jl
sbb
jle
sub
loopne
adc
xchg
fisubr
pop
rol
mov
push
cmps
jle
daa
add
fsubr
mov
sbb
jle
push
cmp
add
adc
fwait
jge
mov
push
push
outs
pop
xor
pop
inc
push
inc
addr16
enter
inc
cdq
fsub
inc
movzx
test
push
dec
and
jmp
dec
push
push
fcomp
enter
or
adc
div
sub
inc
inc
inc
sub
or
add
inc
dec
fcom
xchg
mov
sub
pop
add
xchg
(bad)
push
pop
inc
jecxz
inc
sub
or
inc
mov
add
in
add
jns
in
sub
mov
popf
xchg
inc
test
(bad)
push
inc
push
shl
or
rol
add
lock
jne
jg
and
adc
ins
pop
lds
inc
adc
pop
das
jae
aaa
shl
ja
in
mul
push
add
inc
inc
add
lods
sub
add
xor
mov
or
mov
ins
add
pop
or
sub
js
jmp
and
xor
sub
cmps
xor
jmp
mov
ss
cmp
adc
lods
gs
je
xchg
pop
lea
mov
pop
xlat
lea
or
adc
and
popf
out
sub
sbb
xor
(bad)
mov
or
out
(bad)
pop
jmp
add
mov
adc
test
inc
pop
xchg
sbb
xchg
loope
pop
(bad)
icebp
or
std
mov
movs
aam
sub
stos
sbb
push
adc
or
add
mov
mov
xchg
or
mov
nop
test
sub
inc
outs
das
jne
push
ja
mov
xor
cmp
mov
add
test
(bad)
sub
ror
cmps
jo
jle
mov
imul
mov
xor
push
in
add
mov
pop
hlt
das
and
inc
sbb
cmp
repz
xor
rcl
lahf
adc
adc
mov
sub
adc
dec
xchg
add
mov
mov
mov
xchg
shl
mov
pop
dec
cmp
out
gs
cmp
mov
arpl
add
jns
or
mov
jns
mov
pop
xchg
setp
or
pusha
adc
and
jns
or
xchg
push
push
(bad)
cmps
jge
sub
mov
aam
sub
jmp
mov
or
(bad)
jg
scas
movs
or
add
inc
xchg
sti
xlat
inc
or
jmp
dec
lock
or
dec
(bad)
pop
cs
cs
rol
mov
mov
jle
xor
in
mov
sub
push
xchg
push
jmp
mov
pusha
push
cld
xchg
xlat
in
push
sub
inc
or
shr
add
mov
les
adc
lds
adc
cld
xchg
sbb
rol
adc
push
loopne
pushf
push
push
adc
adc
add
dec
push
mov
adc
adc
repz
dec
xchg
imul
pop
mov
jmp
pop
in
mov
and
jl
call
mov
xor
lahf
mov
test
adc
add
sub
icebp
aam
lea
les
add
push
call
inc
sbb
and
dec
inc
dec
enter
bound
dec
sbb
mov
adc
es
mov
jmp
hlt
scas
in
call
mov
adc
cmp
mov
pop
add
call
aas
inc
mov
dec
dec
mov
sbb
movs
sbb
adc
dec
(bad)
jae
dec
(bad)
mov
xlat
js
dec
cld
mov
and
push
mov
xchg
mov
inc
rol
and
adc
xchg
sbb
inc
fcomp
or
cmp
pop
enter
xchg
lahf
sub
add
addr16
cmp
scas
mov
sub
sbb
mov
or
add
imul
cwde
mov
push
sbb
mov
jb
sti
movs
dec
mov
inc
mov
pushf
out
cmp
pop
or
push
test
pop
aaa
or
sbb
clc
inc
cdq
fmul
adc
push
or
add
mov
data16
cmp
inc
ins
push
xchg
push
loopne
and
cmc
loope
ins
push
xchg
adc
mov
mov
das
adc
(bad)
movq
pminub
push
in
dec
jae
cmp
nop
into
(bad)
pop
push
ret
int
adc
xor
in
and
adc
test
xchg
add
inc
rcr
faddp
test
add
cmc
add
fimul
or
imul
inc
add
ret
mov
cmp
jb
pop
loopne
les
out
fadd
les
push
fcmovnb
div
add
push
repnz
(bad)
dec
mov
cmp
sub
loope
inc
or
dec
rcl
arpl
or
mov
loopne
jge
lea
add
ret
sysret
cwde
pusha
add
arpl
jg
add
pop
mov
jnp
jg
adc
popf
ins
nop
loope
or
sbb
inc
push
push
or
push
sbb
push
add
add
fs
fbld
jb
xchg
sub
fs
mov
fs
dec
imul
mov
xchg
scas
mov
scas
push
(bad)
push
push
add
add
stos
fild
adc
cmovg
add
xor
add
jbe
stos
mov
nop
push
add
outs
imul
mov
sub
mov
add
xor
add
les
test
xchg
ror
pop
add
retf
and
or
or
sub
pop
add
dec
mov
dec
movs
prefetchnta
add
lea
stc
cmps
sbb
cmc
mov
les
pop
imul
fidiv
test
cmp
cmp
test
inc
js
arpl
je
mov
iret
adc
les
adc
jne
or
jno
adc
bound
push
xchg
lods
cmp
fimul
add
enter
mov
(bad)
in
sbb
cmp
sub
xor
test
push
inc
pop
pop
pop
push
mov
enter
and
push
rcr
cmp
cmovg
cmps
or
aas
aam
jno
mov
psubb
fmul
loop
(bad)
adc
mov
jl
and
pop
or
enter
jno
shr
rol
mov
and
inc
add
in
in
sahf
out
in
int3
pusha
cwde
jmp
pop
ret
push
and
ss
adc
outs
xchg
cmp
cwde
pop
sub
or
ds
jne
daa
mov
push
jmp
outs
aam
cld
sbb
xor
pop
sbb
adc
repz
mov
daa
add
or
xchg
or
aaa
leave
sti
mov
mov
movs
push
add
cdq
idiv
movs
adc
cwde
cmp
adc
popf
xor
lds
stos
add
cmp
mov
and
and
inc
add
aam
mov
call
sbb
xor
scas
sub
adc
out
mov
push
cmovle
xor
sahf
sub
iret
iret
or
sbb
mov
inc
push
(bad)
adc
sub
inc
jmp
push
mov
icebp
int
pop
cmp
push
cmp
mov
push
and
por
lock
push
sbb
les
sbb
push
(bad)
icebp
(bad)
xor
mov
mov
mov
adc
mov
leave
xor
arpl
push
les
jmp
xor
sbb
inc
sub
dec
test
fwait
scas
loop
xchg
sub
xor
jg
sub
sub
scas
ret
or
add
add
add
shl
icebp
lea
pusha
sub
mov
or
fsub
fimul
mov
sbb
pusha
bound
sub
fist
mov
add
add
push
idiv
mov
jmp
adc
int
sbb
ret
push
cmp
xchg
cmp
rcl
pop
dec
pop
xor
mov
cmp
jge
dec
fmul
mov
xlat
fmul
jmp
lods
dec
in
xor
xchg
cmp
fsub
mov
cld
sahf
mov
cmp
repnz
pusha
test
add
jecxz
jmp
call
xor
push
push
andps
xchg
adc
push
int3
sahf
sbb
mov
pop
push
push
xlat
sub
punpcklbw
stos
sahf
xor
lahf
and
ret
out
(bad)
ja
cmp
out
lahf
cmp
jecxz
loopne
mov
sbb
popa
enter
icebp
loopne
xchg
dec
dec
daa
enter
pop
bound
cmp
cmp
push
push
arpl
xchg
in
cmp
shl
imul
jne
xor
ja
pusha
pop
add
inc
enter
iret
pop
nop
mov
and
cmps
xchg
mov
push
out
test
mov
inc
push
mov
add
sub
mov
loopne
fsub
inc
jl
xor
and
or
push
sbb
in
pop
add
push
clc
hlt
xor
popf
pop
fcmovbe
imul
stos
int3
sbb
push
pop
xchg
xor
inc
or
mov
sbb
dec
cld
jnp
mov
out
shl
xchg
iret
repz
movs
push
mov
push
jne
test
add
cmp
pop
test
mov
xor
mov
pop
add
push
daa
xchg
mov
lahf
adc
add
add
inc
add
pop
lock
mov
dec
fldenv
imul
pop
add
dec
add
add
add
std
std
dec
mov
or
and
cmps
mov
xchg
adc
cli
cmps
and
cmp
add
dec
dec
inc
add
inc
mov
mov
call
fimul
movs
clc
push
(bad)
xchg
sub
daa
cmp
popa
pop
inc
and
inc
adc
xchg
adc
jne
call
xchg
cmp
dec
loopne
and
cmps
sub
or
in
movs
adc
jo
xchg
inc
sub
jmp
lods
cmp
cmp
fadd
aas
shr
pop
int3
movzx
push
xchg
aas
adc
lock
inc
(bad)
mov
jae
jmp
mov
mov
shl
pop
and
hlt
jne
adc
add
or
jo
jno
sahf
ja
xchg
mov
in
and
jae
mov
rcl
movs
adc
pusha
inc
and
inc
jp
inc
clc
popa
sub
clc
aas
push
push
iret
icebp
push
push
dec
push
jne
fadd
sub
fld
and
xchg
push
dec
xchg
mov
imul
out
int
add
adc
sbb
xlat
mov
and
fsub
mov
sti
fsubr
add
and
ret
leave
ja
nop
add
add
(bad)
push
test
xor
neg
add
jae
and
enter
mov
add
or
jp
or
icebp
adc
pusha
hlt
jmp
ret
push
xlat
mov
jno
cmps
sbb
sub
loope
lods
inc
sahf
jne
bound
test
pop
pop
cld
pop
ret
add
mov
mov
test
xor
icebp
aaa
cmp
inc
push
dec
and
add
add
sti
push
xor
or
push
outs
jmp
cmps
shr
pop
jmp
repz
jo
adc
adc
test
das
popw
cmp
ror
or
mov
inc
push
adc
cmps
test
ja
pop
add
stos
sbb
add
pop
sbb
fstp
and
add
clc
in
xchg
cmp
arpl
sub
cmp
and
sub
dec
and
data16
loope
push
cs
shl
loopne
jne
push
pushf
clc
xor
ja
stos
pop
add
add
jno
xchg
imul
retf
add
and
aaa
mov
xor
into
cmp
pop
pop
aaa
push
add
adc
cmp
mov
inc
and
ror
fwait
add
and
jmp
fcomp
pop
les
cmp
nop
lods
lea
add
mov
dec
adc
cmc
jne
stos
push
mov
iret
pop
pop
add
pop
or
sub
xor
lahf
cmp
not
neg
sbb
test
mov
fmul
dec
jb
dec
push
mov
hlt
jnp
lahf
cmps
mov
(bad)
loopne
lahf
mov
inc
mov
push
sub
xor
xor
dec
fadd
into
les
and
or
call
enter
xor
jg
inc
movs
mov
lea
add
sbb
lds
fist
add
pop
(bad)
adc
(bad)
xor
push
test
mov
mov
dec
(bad)
pop
or
mov
loope
gs
(bad)
mov
sbb
push
mov
fisttp
clc
mov
pop
adc
and
aam
add
lahf
jae
push
adc
scas
cmc
lea
xchg
and
test
lahf
scas
in
cs
adc
scas
or
pop
add
iret
fs
nop
push
xor
add
aaa
sub
aad
ret
das
retf
out
pop
sbb
leave
adc
push
leave
outs
mov
jne
sbb
add
sub
pushf
mov
mov
jne
ficomp
push
popa
push
lock
mov
push
add
neg
pop
inc
xor
pushf
or
lods
shl
mov
and
(bad)
adc
mov
xor
ret
and
popa
adc
jp
movs
mov
outs
mov
push
xchg
(bad)
jno
sub
in
fisttp
add
rcl
out
hlt
xlat
sbb
sbb
cld
fst
loope
inc
enter
mov
add
add
jbe
rcr
add
sub
nop
add
adc
dec
mov
mov
and
sbb
mov
and
add
add
xchg
add
mov
add
aad
mov
or
or
cs
imul
mov
jmp
adc
aaa
les
adc
pop
pop
out
or
adc
add
shr
jnp
push
ret
xor
inc
cmp
sahf
rcl
fist
movs
lahf
push
test
inc
xor
or
mov
(bad)
lahf
add
rcl
into
mov
xor
xor
daa
pop
xor
inc
xor
or
sub
in
dec
lock
xor
add
inc
cmp
add
outs
pushf
mov
pop
aaa
pop
clc
or
jns
mov
lea
inc
or
test
or
jl
sahf
rol
sbb
mov
jns
sbb
mov
cmp
jp
loopne
inc
and
in
mov
and
xor
je
add
mov
es
inc
add
fadd
inc
fadd
add
mov
or
cmp
mov
or
inc
xchg
sbb
fld
mov
je
int3
and
les
mov
xor
fwait
add
inc
pusha
cld
cmp
movs
push
and
pop
jl
add
dec
fimul
jo
jne
bound
adc
push
push
cmp
hlt
dec
dec
cmp
sbb
fwait
push
mov
in
cmp
daa
sub
jmp
xor
cwde
sub
or
jae
js
aam
xor
ror
mov
xor
add
add
cld
or
mov
pop
sub
add
cmp
jns
and
mov
cmp
adc
add
dec
add
in
sub
lds
loopne
js
cmp
pushf
cmps
lock
jl
nop
mov
test
cmp
inc
rcl
int3
inc
mov
iret
push
outs
cmps
jo
xor
lods
daa
add
lea
xor
pop
aam
in
and
loopne
aam
jl
stos
and
adc
outs
mov
and
push
adc
test
cmp
xchg
pop
mov
xchg
mov
and
cmp
adc
xchg
pusha
push
cmp
in
mov
pop
xor
dec
push
add
cmps
sub
rcl
mov
pop
push
rcr
and
sbb
pop
in
push
adc
and
gs
sbb
mov
mov
sbb
xor
idiv
push
xlat
jne
fcomp
push
and
lock
adc
in
dec
mov
or
ins
or
jbe
aad
sub
sub
inc
cmp
scas
sbb
and
popa
jne
pop
xchg
sbb
pop
ss
push
stos
call
adc
ins
out
mov
sub
and
lds
(bad)
push
mov
in
xor
mov
inc
cmps
nop
or
test
xor
or
xchg
push
fist
mov
or
mov
fsubr
or
sbb
leave
push
enter
shl
adc
mov
add
mov
mov
cmps
nop
add
mov
rcr
(bad)
xlat
dec
mov
or
(bad)
sbb
xor
xlat
or
add
shl
fwait
push
jo
shr
out
mov
addr16
xor
or
test
(bad)
retf
or
add
and
shr
add
scas
cwde
mov
or
and
call
ret
push
leave
sub
mov
add
sbb
add
pusha
add
pop
ret
scas
add
sub
out
nop
test
inc
or
rcl
lds
add
dec
les
mov
push
or
mov
dec
or
lea
fsubr
aaa
sbb
retf
add
or
sub
adc
imul
xlat
fld
inc
push
push
(bad)
(bad)
test
mov
xor
mov
call
mov
lock
test
pop
add
lods
rol
mov
stc
sub
shl
cmp
xor
adc
lock
pop
xor
(bad)
pusha
movs
(bad)
leave
mov
mov
push
ja
mov
add
mov
sbb
movs
mov
push
add
mov
xor
jg
inc
add
mov
mov
in
js
mov
jmp
cmp
adc
(bad)
dec
add
mov
out
push
sbb
add
in
ja
mov
ins
sub
aaa
and
and
mov
xor
cmp
cmc
sbb
aaa
add
adc
inc
test
mov
sub
mov
dec
popf
aam
sub
loopne
inc
mov
call
jo
(bad)
xor
lods
sub
dec
mov
loopne
aas
sbb
add
inc
pop
xor
inc
pop
sbb
mov
mov
jge
and
ret
fcomip
cld
dec
push
and
cmp
(bad)
push
push
push
pushf
adc
dec
mov
xor
jg
mov
rcl
stos
fsub
ret
idiv
pop
cmp
js
cwde
mov
push
inc
pusha
dec
pop
mov
adc
loope
sbb
pop
rcr
movs
add
cld
movs
adc
mov
enter
inc
cmp
fbld
xor
leave
inc
add
(bad)
push
inc
jbe
add
or
outs
lods
or
je
shl
push
push
gs
ins
pop
mov
leave
jae
ins
sbb
rcr
pop
rcl
or
(bad)
test
aas
or
push
jb
and
shl
adc
out
push
sub
inc
je
sub
ins
and
retf
pop
repz
sub
jno
ins
lds
(bad)
out
sbb
or
icebp
sbb
out
or
imul
or
test
adc
mov
xor
ds
pop
aam
push
cmp
xchg
inc
push
into
cmp
or
or
out
sbb
pop
movs
sub
and
inc
(bad)
add
mov
stos
jecxz
or
pop
dec
xor
add
aaa
loop
rol
push
pop
(bad)
sub
ror
pop
test
mov
call
aad
ror
mov
int
lods
cmp
xor
(bad)
add
cmp
push
jmp
push
pop
pop
(bad)
call
add
or
sub
xor
lds
inc
add
inc
sub
ins
shl
sub
sar
cwde
inc
xor
add
add
retf
es
loope
sub
pop
add
push
inc
dec
inc
scas
push
sbb
int
cwde
(bad)
push
enter
cmp
call
data16
cmp
arpl
or
add
add
aam
pop
or
div
cmp
pop
ds
push
ins
enter
out
fwait
cmp
hlt
out
in
(bad)
and
jl
sub
clc
add
sub
mov
stos
rcl
cmp
xchg
addr16
(bad)
pop
or
mov
mov
add
push
sub
fcom
nop
movs
and
call
aaa
add
or
ret
add
jne
adc
sbb
sub
sub
mov
leave
pop
and
push
jl
jge
cdq
loopne
sbb
adc
fldln2
jne
jp
add
ss
xchg
loopne
push
sbb
bound
popa
push
in
xchg
xchg
push
outs
mov
mov
test
push
sub
enter
xor
sbb
or
push
add
aam
adc
mov
dec
mov
into
shl
in
fs
add
div
dec
mov
fidiv
adc
mov
jmp
iret
fcom
leave
or
push
adc
leave
clc
mov
cmp
adc
lods
add
into
cmp
inc
mov
jo
cmp
adc
cmp
and
jne
inc
mov
mov
push
rcr
cmp
push
jl
lock
outs
je
mov
gs
cmp
jge
adc
loope
enter
test
rcl
rcr
or
pop
push
ret
shr
jecxz
neg
jmp
(bad)
jmp
fidivr
mov
sub
and
sbb
movzx
adc
or
inc
adc
push
fiadd
mov
jmp
shl
pop
pop
jne
ror
inc
mov
xor
cmps
cmp
jae
add
mov
rol
call
add
cmps
mov
sbb
dec
pushf
sub
jo
out
and
lahf
cwde
inc
pop
pop
mov
imul
(bad)
inc
adc
add
adc
ret
out
aad
xor
inc
or
push
cmp
or
into
ror
pop
scas
mov
mov
mov
mov
shl
sbb
fwait
adc
retf
inc
shl
test
adc
or
push
(bad)
jmp
pop
mov
mov
scas
dec
cmps
cld
in
inc
in
leave
inc
iret
push
repnz
iret
and
xor
nop
rol
clc
inc
push
sub
inc
movs
sub
or
in
or
pop
iret
retf
iret
and
out
mov
xor
adc
call
pushf
in
mov
sub
cmc
test
or
dec
adc
js
dec
mov
pop
mov
cmp
test
push
push
push
loopne
mov
jb
push
bound
inc
popa
xor
lods
add
pop
bound
jns
data16
push
or
adc
push
or
adc
jnp
nop
dec
aas
(bad)
and
movs
adc
mov
sub
and
nop
push
pop
or
add
les
jmp
add
dec
adc
aad
mov
outs
xor
pop
ja
sub
fwait
js
inc
xor
out
(bad)
xor
(bad)
out
or
in
sti
cmp
sub
cwde
or
cwde
push
and
hlt
(bad)
icebp
push
xor
sbb
xchg
lahf
fsub
xchg
test
icebp
sub
jg
xlat
loopne
sbb
jnp
and
cmp
sbb
aam
mov
adc
mov
daa
fdiv
xchg
push
daa
fadd
dec
adc
mov
popa
push
rol
dec
push
nop
push
sar
xor
sbb
scas
in
fadd
fcom
add
add
stos
ret
fprem1
jmp
ja
fyl2x
xchg
pop
push
sub
push
sahf
dec
push
push
nop
add
xchg
xor
inc
or
cmc
aad
in
stos
in
add
add
mov
xchg
fadd
mov
dec
and
add
add
sub
cmp
scas
adc
je
ss
inc
mov
adc
leave
ds
sub
pop
push
xchg
ret
push
mov
push
outs
test
mov
pop
js
inc
les
enter
popf
rol
mov
mov
not
lea
inc
mov
push
pop
mov
and
adc
push
loope
mov
aad
bound
arpl
xor
mov
fdivr
movs
lock
or
(bad)
pusha
fdiv
mov
pop
pop
sbb
pop
test
and
mov
or
shl
adc
adc
and
jns
xlat
sbb
addr16
shr
and
outs
sub
jae
pusha
div
ins
jbe
add
ins
addr16
retf
aam
lods
push
or
cdq
std
add
add
out
pop
adc
pop
pop
adc
xor
sbb
add
out
cmp
pop
push
cld
inc
aad
cwde
in
sub
cmps
(bad)
fiadd
add
rol
out
mov
mov
stos
push
jnp
out
and
out
adc
or
pop
mov
adc
stos
sti
or
and
(bad)
neg
fisubr
out
(bad)
popf
or
or
fsubp
loopne
and
adc
rcl
xchg
add
mov
in
push
adc
add
movs
xchg
push
shl
sub
popf
add
add
into
pop
xchg
inc
loopne
test
(bad)
sbb
pop
iret
inc
or
outs
mov
stos
jo
sbb
loopne
inc
iret
cmp
pop
popf
(bad)
dec
cmp
mov
mov
call
bound
stc
jp
inc
cdq
jbe
inc
add
fcom
dec
jb
ret
adc
clc
xlat
xchg
mov
dec
adc
push
int
inc
push
dec
call
imul
hlt
or
loope
push
jo
mov
sub
loope
fst
icebp
jbe
xchg
nop
cmp
lods
mov
or
sub
pop
and
and
enter
hlt
lds
inc
dec
adc
aam
add
scas
jbe
loop
mov
stc
adc
adc
test
jg
add
stos
sbb
cmp
sub
js
jecxz
cs
sbb
xchg
and
pop
les
test
push
mov
ret
pop
dec
and
cmps
push
adc
sub
test
cmp
loopne
ror
sbb
mov
inc
hlt
nop
jae
repz
push
int
xchg
(bad)
inc
ins
pop
pop
pop
push
fsub
push
xor
fadd
jo
and
mov
fcom
xor
bound
jne
mov
xchg
test
enter
pop
cld
dec
jmp
(bad)
repnz
pop
sbb
inc
(bad)
push
hlt
dec
add
xlat
jmp
leave
adc
stos
add
in
adc
pop
dec
dec
repnz
in
rol
or
ins
in
fs
inc
push
adc
mov
test
fadd
push
jo
xchg
call
xchg
and
in
out
iret
or
pusha
ss
jle
fst
scas
adc
jns
call
cmp
jne
mov
add
push
loopne
sub
jmp
pushf
lea
push
(bad)
push
pop
mov
ja
mov
(bad)
jg
mov
into
xchg
mov
or
cmp
(bad)
cmp
inc
lods
out
cs
adc
xor
or
loopne
xlat
pop
inc
inc
mov
push
dec
pop
dec
mov
jnp
jmp
and
or
lds
add
jne
mov
es
call
lock
js
mov
movs
imul
(bad)
cmc
xor
cmp
sub
push
ret
addr16
dec
movs
out
mov
mov
push
xor
adc
cmps
ins
inc
sar
jmp
xchg
adc
inc
xor
add
movs
(bad)
out
or
add
fist
movs
call
xchg
xlat
imul
call
fistp
test
dec
pop
pushf
sbb
dec
mov
xor
mov
call
js
jmp
dec
dec
push
and
popa
jmp
or
xchg
adc
adc
pop
jmp
jle
add
sbb
in
(bad)
push
jmp
adc
dec
mov
cmp
int
bnd
pop
xor
loope
inc
sbb
and
pop
les
dec
or
and
and
mov
adc
mov
ret
cmc
add
(bad)
push
leave
add
ins
sbb
pop
sti
jmp
jo
inc
lods
loopne
cmp
rol
loop
xchg
int3
jmp
xor
loope
lahf
movs
xor
xor
cmp
fsubr
xchg
sar
std
les
add
mov
mov
xor
adc
daa
mov
dec
in
iret
shl
retf
mov
adc
cld
stos
pop
enter
(bad)
repz
adc
xchg
or
iret
idiv
loope
add
pop
dec
ret
ret
mov
in
mov
test
or
adc
scas
sar
aaa
dec
push
movups
jmp
push
push
call
push
jno
mov
iret
adc
sub
fs
inc
aaa
add
imul
adc
dec
adc
jb
(bad)
jns
mov
nop
sbb
add
mov
out
jp
fist
dec
pop
das
jnp
and
cwde
loopne
dec
add
inc
add
loopne
test
push
sbb
add
mov
or
dec
fwait
add
or
out
mov
lea
dec
push
aaa
jp
add
adc
sbb
inc
push
stos
aad
and
sub
lock
and
out
sub
sub
push
xchg
push
pop
inc
frstor
or
sub
add
in
cmp
nop
arpl
sub
repnz
add
sub
mov
rcr
dec
cwde
adc
push
pop
jecxz
mov
sbb
int3
add
xchg
mov
or
sahf
push
xlat
push
loope
repz
jmp
es
push
dec
adc
daa
xor
adc
(bad)
xor
cs
lock
ins
mov
xchg
lock
pop
push
cmp
cmp
icebp
daa
fisttp
sub
mov
repz
test
ins
loope
fisttp
aad
add
mov
xor
adc
add
scas
or
fisttp
pop
adc
pushf
push
mov
dec
pop
call
std
push
out
icebp
adc
aas
pop
sub
(bad)
outs
nop
repz
leave
sub
sti
sbb
mov
push
pop
push
test
add
xchg
outs
iret
adc
(bad)
call
push
les
xchg
jne
sti
push
les
cmp
jne
fiadd
(bad)
mov
push
jl
jnp
jne
mov
clc
fdiv
cmp
mov
inc
sbb
add
pop
jmp
jmp
mov
mov
int3
ret
lds
test
addr16
fadd
addr16
xor
and
and
call
outs
mov
lea
and
pusha
adc
inc
adc
shl
dec
xchg
jo
and
and
leave
adc
sbb
or
adc
adc
jp
stos
jo
cmc
jae
jnp
je
mov
data16
adc
sbb
sbb
push
xchg
add
xor
mov
adc
sbb
dec
jne
cmp
jne
cmp
add
pop
cmp
mov
loop
add
adc
adc
loopne
mov
je
mov
sbb
cmp
clc
mov
gs
jo
cmps
mov
int3
call
jge
cmps
add
sub
neg
ds
jo
pop
add
(bad)
ja
adc
add
pop
lahf
sahf
inc
imul
test
and
lahf
dec
and
xor
or
push
xlat
popa
sbb
jae
push
mov
xor
neg
dec
add
addr16
mov
push
mov
dec
imul
sub
mov
cmc
push
mov
add
and
add
pop
loopne
popf
push
stos
outs
addr16
shr
mov
dec
push
add
test
sub
outs
outs
je
rol
aam
pop
adc
add
(bad)
xor
xor
pop
inc
xlat
or
add
cmp
dec
mov
lds
push
xchg
ja
xor
hlt
add
add
cdq
rol
mov
add
adc
es
(bad)
cwde
pop
jo
jbe
xor
out
shl
ja
out
jbe
daa
mov
push
enter
out
push
(bad)
cmp
outs
bound
shl
ins
mov
mov
fild
inc
aas
cmp
jo
add
cmps
mov
adc
inc
push
cmp
and
xor
cmp
nop
sbb
or
or
lahf
and
cmp
jns
rcl
fild
jmp
jns
xchg
adc
sbb
arpl
icebp
loop
inc
stc
cmps
dec
(bad)
dec
push
in
push
jo
pop
cld
cli
mov
push
adc
push
xor
lds
add
les
or
scas
xor
mov
inc
cli
fist
dec
mov
xchg
cli
sti
into
cli
movs
outs
adc
mov
push
scas
or
popa
add
dec
mov
mov
popf
or
fist
push
test
jnp
and
ins
loopne
mov
icebp
addr16
xchg
mov
daa
pop
sbb
add
pop
cdq
cmc
call
mov
adc
sahf
sti
aaa
sbb
pop
mov
das
scas
sti
(bad)
push
sti
cmps
add
dec
pop
pushf
push
enter
pushf
out
mov
sar
push
mov
shr
stc
adc
jecxz
and
stos
pop
mov
cmp
cmp
inc
dec
add
jne
bound
cwde
ss
lods
pop
aad
mov
or
movs
cld
aaa
rcr
mov
movs
xchg
jae
inc
mov
aaa
data16
adc
aas
push
ins
ds
adc
and
retf
dec
mov
sbb
fild
xor
clc
xor
jne
std
xchg
cmp
push
push
pop
inc
mov
mov
jnp
test
mov
mov
pop
es
into
std
das
push
cmps
mov
push
ins
mov
cs
(bad)
test
adc
loop
pop
shl
mov
pop
inc
setne
mov
cmps
inc
imul
mov
pop
mov
aas
add
push
jne
jo
or
push
sub
mov
jbe
sti
dec
and
fwait
inc
jl
add
inc
fadd
rcl
jne
pop
xchg
ficomp
xor
push
add
jge
and
hlt
cmp
push
adc
popa
call
lea
adc
bound
or
int
mov
pop
das
jb
push
or
xchg
jnp
mov
push
mov
mov
add
mov
lea
mov
push
addr16
sti
in
inc
popa
push
in
jns
ins
adc
sbb
sub
imul
sbb
jmp
or
imul
mov
pusha
sub
sbb
add
lods
or
and
add
aas
push
mov
xor
sti
add
mov
pop
lock
sbb
sbb
lods
pop
pop
sbb
ins
add
cmp
mov
sbb
sbb
jne
sub
mov
add
cmps
pop
push
jecxz
or
sar
test
adc
xchg
in
test
es
into
shl
xor
add
and
cmp
inc
or
mov
add
adc
or
add
add
xor
add
add
add
lea
pop
xchg
add
dec
mov
cmp
cmp
inc
pop
cdq
scas
add
or
push
cmp
or
pop
or
or
std
movs
sbb
mov
add
sar
rcr
xor
adc
int3
mov
sbb
inc
mov
add
in
aam
pop
loopne
add
push
ficom
xchg
(bad)
and
cmp
stos
das
push
or
clc
les
mov
fwait
xchg
shl
adc
ss
jle
enter
movd
lods
or
or
sbb
mov
(bad)
enter
add
or
xlat
push
and
jne
imul
loopne
mov
jnp
push
pop
jb
mov
call
xor
add
mov
dec
(bad)
pop
push
adc
test
and
inc
and
mov
clc
or
xchg
inc
cmp
repz
pop
push
movs
rcr
jns
cmps
stc
sbb
(bad)
push
lods
cmp
jae
sub
in
imul
ss
(bad)
cmc
sti
inc
hlt
jnp
mov
ficomp
xor
add
push
fmul
xchg
outs
shr
out
add
out
and
lods
adc
push
mov
not
addr16
ins
jp
out
lock
nop
scas
jmp
add
add
pusha
add
test
ins
or
popa
lock
ins
popa
pusha
popa
mov
fwait
push
sub
xchg
arpl
mul
dec
add
dec
mov
retf
(bad)
ss
mov
push
add
sbb
cmps
mov
arpl
cmp
jg
shl
gs
stos
sti
or
in
fdivr
mov
mov
pop
sub
push
test
mov
dec
xlat
int3
inc
xor
push
push
sbb
test
inc
xor
mov
ins
aaa
daa
push
jnp
dec
and
jno
pop
in
xchg
add
fbld
adc
frstor
push
mov
stos
and
fwait
in
cmp
inc
cmp
mov
or
popa
inc
or
loope
aam
or
mov
sbb
test
adc
jl
inc
xor
or
dec
clc
xlat
sbb
add
mov
ja
sbb
dec
hlt
rol
jne
xlat
ret
jmp
mov
mov
lock
lea
aaa
cwde
test
mov
scas
push
add
pop
add
jmp
rcr
or
rcl
push
mov
add
sub
mov
push
into
(bad)
(bad)
inc
cmovnp
iret
adc
lea
jno
movs
adc
(bad)
pop
push
cmp
inc
add
dec
or
and
data16
push
adc
adc
adc
push
repz
inc
pop
jno
loop
adc
lea
test
and
push
jl
jl
fdivr
jnp
or
adc
adc
lock
rcr
or
cmp
jle
(bad)
mov
pop
cmp
adc
int3
and
nop
or
lods
cmp
cmp
dec
iret
add
cmp
jmp
cmp
push
xlat
rcl
jle
cmp
loope
xor
lock
push
push
jmp
in
pusha
(bad)
jo
test
add
je
inc
clc
cmp
in
sbb
lock
xchg
inc
or
sub
inc
add
sbb
retf
test
push
(bad)
hlt
mov
daa
cmp
je
jmp
daa
mov
add
xor
mov
mov
sub
pusha
cwde
dec
push
leave
mov
int3
add
jle
mov
jecxz
ret
aam
pusha
sbb
clc
stc
mov
stos
push
adc
add
push
adc
ret
popa
xchg
js
fucomp
or
call
das
sbb
inc
add
cwde
adc
(bad)
add
pop
lahf
pusha
sbb
and
mov
fimul
adc
(bad)
mov
or
cdq
xchg
add
clc
into
cmp
ror
mov
pop
dec
movs
add
outs
in
in
and
mov
test
xchg
nop
les
sub
or
sar
sbb
push
rcl
cld
loope
jne
or
cs
daa
movs
cmp
mov
sub
adc
stos
dec
xchg
pop
call
pop
pop
ror
mov
dec
cld
femms
cld
lock
outs
(bad)
push
idiv
adc
icebp
mov
push
clc
push
lock
cmp
add
push
or
cmps
adc
push
inc
setne
popa
ss
jmp
sbb
add
sbb
(bad)
inc
or
mov
push
sub
mov
(bad)
dec
sub
pop
mov
(bad)
cld
clc
and
sbb
inc
inc
jle
lahf
in
jbe
in
rol
add
dec
cmovbe
out
aas
add
jbe
ins
pusha
xor
cmp
pop
sub
pop
xor
add
lock
sbb
pop
clc
das
inc
loopne
fdivrp
push
and
push
push
js
(bad)
push
adc
je
jne
jbe
sub
ins
jne
rcl
sbb
pop
xor
add
adc
packuswb
ins
daa
fisub
and
das
dec
adc
push
add
mov
push
cmps
rcl
xchg
inc
sub
and
push
cmp
daa
adc
and
pop
fs
xchg
enter
push
and
jb
ret
lock
dec
push
cmp
push
aaa
jno
adc
add
add
push
adc
(bad)
push
in
and
add
nop
stos
cmp
movs
or
xor
pop
cmp
loope
xor
sub
adc
add
and
ds
add
or
leave
ret
cwde
test
mov
pushf
mov
inc
pop
pop
imul
(bad)
popa
xchg
bound
jmp
xchg
fwait
mov
or
cmp
outs
inc
loop
js
nop
push
data16
loopne
fs
sbb
add
inc
loopne
jns
push
dec
add
lods
add
xchg
inc
hlt
add
push
push
das
inc
loopne
adc
cli
or
mov
pusha
push
push
sub
je
add
int3
add
(bad)
add
(bad)
or
dec
inc
ret
sbb
lock
xor
movs
arpl
sbb
das
mul
adc
adc
dec
xor
inc
adc
adc
dec
xadd
mov
test
add
sub
inc
or
fs
sub
ss
pop
inc
xor
test
popa
adc
or
xlat
mov
rcl
and
sub
pop
(bad)
fsub
cmp
mov
adc
cmp
ss
cmp
and
(bad)
neg
lods
ret
sub
test
leave
inc
push
stos
loopne
pop
dec
psllq
loopne
or
adc
sbb
pop
cmp
cwde
es
retf
adc
inc
cmp
pop
push
mov
jo
push
and
inc
mov
add
sub
adc
adc
sbb
mov
xchg
jae
cwde
std
push
repnz
pop
adc
gs
adc
push
cmp
xchg
add
das
pop
and
xchg
or
mov
inc
dec
pop
mov
(bad)
jmp
wrmsr
in
in
xchg
sub
das
xchg
fist
das
cld
mov
push
fs
aas
je
rcr
loope
cmps
(bad)
iret
les
pop
push
les
cmp
and
lods
mov
iret
repz
vpmullw
loopne
iret
repz
cmc
std
mov
(bad)
fild
sbb
mov
stos
push
std
xchg
sti
sub
cmp
adc
loop
scas
aaa
jb
test
mov
or
es
push
fwait
jge
out
sbb
cmp
push
inc
sbb
pop
push
mov
aaa
mov
iret
pop
ret
aas
cmps
imul
mov
test
and
ud2
push
adc
or
test
mov
inc
sub
push
mov
pop
xor
mov
sbb
inc
sbb
imul
cmp
jo
inc
jl
imul
repnz
popa
adc
outs
fs
push
popa
std
mov
inc
push
add
xor
adc
push
inc
mov
imul
xchg
inc
mov
mov
add
xor
xchg
add
push
push
push
pusha
rcl
mov
dec
andps
mov
and
sbb
mov
scas
adc
ret
and
sbb
popa
or
aaa
cmp
adc
or
je
push
das
lods
xchg
cli
or
sti
inc
add
jle
pop
mov
loopne
bound
adc
imul
push
ss
pop
ror
mov
ret
push
adc
rcr
xor
ins
sub
test
inc
and
xchg
fs
out
shl
and
ins
or
movnti
jl
test
mov
das
lahf
or
enter
dec
aaa
test
mov
fadd
mov
fimul
in
sbb
xor
jb
xchg
call
imul
pop
enter
ins
cs
shr
pop
or
or
sub
fstp
popf
outs
pop
mov
or
inc
mov
sar
inc
push
xor
ffree
add
jae
clc
add
dec
dec
sbb
mov
fs
mov
mov
jl
adc
inc
push
add
and
or
arpl
or
(bad)
mov
(bad)
sbb
jbe
and
inc
or
cmp
arpl
add
xor
int
rol
je
fimul
xchg
sub
dec
popa
imul
mov
(bad)
imul
iret
or
xchg
fs
sbb
adc
inc
ss
or
jne
pop
pop
sub
das
pop
jno
bound
xchg
(bad)
movs
mov
es
mov
xor
sbb
fild
add
iret
push
xchg
pushf
adc
sub
pop
iret
xchg
xchg
cmp
retf
sub
data16
mov
pusha
(bad)
dec
stos
test
mov
pop
test
(bad)
outs
mov
push
and
xchg
cmp
push
lods
or
test
stos
fsubr
das
inc
mov
int
loope
test
adc
jecxz
inc
lods
dec
dec
scas
ja
adc
adc
int3
jno
adc
enter
or
sar
inc
adc
clc
or
rol
movs
mov
pop
imul
xchg
add
jnp
retf
or
xchg
sub
in
inc
scas
out
aas
aaa
mov
add
sar
sbb
test
or
cwde
mov
or
and
jno
out
and
jmp
les
mov
(bad)
iret
and
fsub
aaa
fimul
or
xchg
out
loopne
cmp
mov
aad
rol
and
sbb
arpl
or
or
sbb
inc
loope
and
addr16
add
das
adc
fwait
movs
xchg
scas
add
data16
adc
outs
sub
xchg
add
mov
pop
inc
pop
push
and
xor
xchg
mov
mov
inc
jecxz
pop
mov
mov
add
out
in
aas
or
xchg
push
cli
sbb
sbb
mov
imul
jbe
pop
or
add
pop
inc
cwde
jecxz
mov
out
pusha
dec
and
sar
fstp
push
mov
jns
and
mov
cmps
pop
mov
icebp
jmp
out
dec
sbb
sbb
outs
mov
mov
(bad)
xchg
add
mov
into
adc
xchg
push
loop
movs
jne
cmp
and
mov
xchg
sub
retf
in
aad
adc
rol
outs
addr16
or
cmovge
add
push
mov
xor
out
std
fisttp
push
call
dec
pop
or
jae
push
lahf
or
pop
icebp
cs
inc
adc
adc
sub
pusha
push
cmp
mov
lods
jo
or
and
daa
test
pop
lock
(bad)
and
push
out
xchg
and
jmp
sbb
retf
mov
push
inc
bound
dec
inc
les
cmp
mov
adc
pop
add
ret
mov
or
xchg
jns
sbb
scas
ret
js
ja
push
cmp
ss
jle
loope
outs
das
mov
jne
shl
and
fsubr
ror
xor
les
pop
test
inc
fsub
and
ja
push
add
daa
leave
ins
scas
xor
sub
cmp
leave
ret
push
sub
ret
mov
cmp
enter
movs
or
in
push
ret
xor
adc
mov
and
push
imul
sbb
pop
pop
mov
or
inc
push
add
daa
dec
add
fs
add
jl
mov
(bad)
popf
sbb
pop
shl
and
ret
adc
and
shl
popf
xlat
popf
dec
fnstsw
imul
jp
bound
add
iret
pop
adc
and
fnstcw
fs
or
push
adc
xchg
push
loop
je
xchg
dec
cdq
les
lods
dec
test
addr16
lea
or
xor
add
sub
cmp
ret
xchg
mov
cmps
sub
xor
test
jl
cdq
push
xchg
push
push
ins
hlt
dec
cmp
jae
inc
cmp
xchg
inc
mov
adc
push
es
add
xor
mov
sbb
cmp
dec
daa
pusha
bound
xor
add
imul
lods
lock
lods
push
dec
inc
xchg
aaa
pop
sub
adc
sub
push
shr
mov
sbb
push
cli
push
imul
xchg
pushf
lods
mov
push
pop
inc
outs
cdq
cmp
movups
ins
mov
adc
aad
ret
jmp
imul
push
outs
jae
popa
in
jb
mov
push
dec
and
stos
or
ins
leave
mov
sub
push
push
adc
push
pop
dec
jns
sub
fnstcw
icebp
push
and
mov
add
push
jmp
pop
xchg
push
call
mov
cmp
(bad)
sub
test
jno
jb
cmp
in
popf
sub
and
xor
jmp
push
or
cmp
out
ja
aad
scas
popf
adc
lea
xor
mov
inc
inc
sub
repnz
inc
in
push
cs
inc
adc
push
xor
inc
cs
xchg
loope
push
sub
popa
outs
jmp
pop
fist
repz
adc
movs
dec
mov
aad
push
sub
xchg
push
lea
dec
xor
cmp
and
cs
adc
pop
mov
sbb
shl
mov
enter
ret
and
mov
loope
add
imul
dec
cmc
xor
sub
(bad)
cs
addr16
arpl
pop
add
inc
adc
jo
fimul
dec
sub
mov
les
mov
adc
cmp
in
cmp
mov
add
sub
stc
outs
adc
cmps
imul
sub
pop
das
adc
xor
idiv
das
and
test
push
test
cmps
inc
daa
add
mov
dec
add
rcl
and
mov
dec
sbb
mov
add
jne
loope
sub
and
push
dec
gs
ins
test
add
push
ret
jae
xchg
inc
adc
push
outs
les
inc
sub
add
jo
mov
push
loope
arpl
jb
or
or
movs
add
add
lahf
lds
call
mov
sub
xchg
aad
xor
popa
mov
out
jmp
add
iret
ja
xor
cvtpi2pd
ins
xor
add
adc
push
je
aaa
daa
aam
mov
push
out
push
sbb
sbb
sub
js
push
jecxz
aas
bound
dec
adc
push
push
add
mov
add
(bad)
xor
xor
jnp
jno
(bad)
sti
inc
xchg
fimul
aas
push
and
add
or
xor
pushf
sbb
mov
(bad)
es
das
pusha
rol
mov
push
(bad)
mov
add
and
inc
add
or
es
xor
lds
jnp
sub
push
or
sub
and
aam
mov
daa
inc
mov
xor
stos
sti
arpl
add
xchg
sub
xchg
daa
pop
mov
add
jg
cmp
pop
dec
not
jno
cmp
or
daa
or
push
les
ficomp
es
das
jecxz
daa
jl
sbb
mov
push
jae
mov
xor
int
mov
xchg
ss
bndstx
cmc
pushf
pushf
mov
rol
jo
adc
sbb
in
in
push
movs
imul
push
or
(bad)
dec
cdq
pop
(bad)
rcr
loope
les
push
test
jnp
jne
pop
sbb
fs
jb
adc
inc
cdq
fiadd
xchg
aam
dec
adc
xchg
fld
ins
pop
add
cmp
lods
cmp
and
xchg
lahf
adc
adc
jg
sar
cmp
push
gs
hlt
xor
inc
icebp
xchg
inc
sub
int
test
jne
xor
lods
sbb
adc
lods
ins
xchg
push
pop
xor
aad
test
cmp
hlt
or
adc
in
cmp
xchg
int3
push
clc
xor
push
cmp
das
xchg
jmp
jo
les
scas
xchg
add
add
and
addr16
jmp
ds
scas
push
inc
pop
das
xor
pusha
retf
ret
jnp
lds
sbb
cmp
nop
outs
push
sbb
lar
adc
sub
in
xor
jns
mov
xor
lea
imul
daa
cmc
cmp
(bad)
sub
dec
xchg
imul
mov
aam
adc
push
je
bound
mov
xchg
outs
mov
xchg
aad
push
cs
test
dec
out
push
inc
or
jnp
cmp
in
or
xor
mov
add
mov
push
push
lea
shr
rcl
adc
push
xor
call
adc
loope
pop
das
cld
outs
xor
call
inc
pop
sbb
sub
mov
push
outs
cs
aas
jae
inc
sti
pop
mov
and
jb
push
aas
jo
xchg
mov
jno
adc
cs
dec
pop
fnstenv
outs
push
push
add
arpl
mov
sbb
fadd
in
fs
push
cmp
in
adc
xor
mov
mov
push
inc
test
jb
shr
inc
or
call
fwait
mov
test
or
mov
jmp
cmps
ins
fist
inc
loopne
in
add
mov
xor
or
push
out
xor
and
dec
sahf
pop
lods
shr
das
neg
dec
arpl
and
fiadd
mov
sbb
fsubr
cmp
fild
and
std
hlt
mov
fdivr
hlt
cmc
std
sub
sbb
and
test
dec
sub
push
push
stos
clc
mov
mov
shl
fidivr
pop
loope
out
inc
inc
sbb
push
mov
adc
test
ret
mov
aas
es
push
push
add
push
sbb
sub
lock
add
(bad)
xor
pop
mov
(bad)
jl
add
shl
mov
cli
add
bound
adc
fist
mov
sub
push
sub
inc
push
inc
data16
mov
fdivrp
and
ds
scas
repz
inc
cmp
ins
out
sbb
and
int
movs
test
icebp
adc
push
sub
xchg
clc
mov
mov
adc
retf
xchg
mov
mov
ins
add
or
pop
jne
pop
dec
addr16
outs
add
dec
jp
xchg
fs
push
sbb
push
xchg
lahf
and
fcomp
sub
unpcklps
sub
mov
ss
adc
jp
lock
pop
rol
cmp
cmps
mov
idiv
xor
add
push
jb
adc
add
adc
pusha
fmul
inc
aas
sub
adc
inc
outs
sgdtd
arpl
dec
js
mov
jg
lds
inc
(bad)
loope
mov
inc
push
es
aam
imul
or
or
pcmpeqd
sbb
xor
push
aam
nop
xchg
mov
cmp
mov
daa
mov
ret
dec
dec
jae
jmp
add
pusha
fist
and
cmp
jmp
sbb
nop
mov
and
nop
jo
and
lahf
call
fwait
mov
rol
inc
and
sub
movs
push
ja
jle
pop
xor
es
sti
dec
shl
jle
sub
push
retf
dec
push
sar
jo
dec
jne
jg
mov
or
push
mov
or
add
sbb
pop
xor
test
test
cmp
mov
shl
pusha
and
jl
mov
shr
sbb
jp
call
xor
out
cmps
enter
shl
aaa
adc
mov
mov
sbb
out
push
lahf
adc
adc
inc
push
adc
je
das
or
aad
mov
scas
and
adc
ret
cmp
call
xchg
adc
sub
adc
push
in
xor
clc
hlt
lock
adc
stc
lods
jmp
outs
retf
push
pop
pop
sub
je
mov
mov
mov
inc
inc
dec
rcl
and
(bad)
jg
inc
in
lods
push
add
sbb
mov
sbb
stos
fcomi
mov
xor
or
mov
ret
or
lods
adc
ja
xor
adc
cmp
ror
add
mov
xchg
push
fimul
and
and
shr
js
push
fadd
je
out
mov
or
add
dec
ret
cmc
loopne
mov
add
push
iret
movzx
sbb
sbb
adc
adc
add
lock
inc
push
hlt
stos
jge
mov
jecxz
mov
lea
add
lods
loopne
mov
or
cmp
je
push
call
sbb
cmc
mov
fmul
fs
inc
test
push
cmp
mov
dec
xor
pop
lods
sub
mov
lea
into
or
xchg
inc
inc
pop
and
inc
popf
push
sahf
adc
or
lea
mov
inc
xchg
or
mov
mov
ins
adc
mov
test
xchg
push
inc
pop
mov
adc
loopne
mov
push
push
add
push
or
inc
adc
les
adc
mov
pop
xchg
cwde
ja
add
test
mov
mov
or
fs
mov
pop
test
push
dec
aas
loope
adc
or
fild
or
inc
es
push
add
mov
push
or
push
or
or
push
dec
mov
ret
dec
xchg
into
nop
add
out
or
loopne
jbe
sub
inc
aaa
add
push
add
test
ror
sqrtps
lds
sbb
inc
rcr
sub
add
dec
sbb
aaa
push
sub
mov
aaa
pop
rol
aad
dec
movs
ret
mov
add
push
or
or
add
std
ja
leave
sbb
ret
cmps
test
xchg
push
adc
inc
(bad)
pop
das
mov
or
gs
dec
jne
lahf
xchg
dec
xchg
lock
mov
scas
xor
jno
(bad)
(bad)
or
xchg
fdiv
xor
push
mov
adc
ret
inc
mov
jp
push
popa
aaa
add
inc
jl
loope
pop
pop
inc
push
rcr
sub
xchg
popa
rcl
arpl
mov
adc
inc
xchg
jns
pushf
sbb
xor
dec
iret
and
cmp
shl
push
jle
or
or
cdq
icebp
out
lea
and
or
pop
sbb
pop
xchg
cdq
mov
add
sbb
mov
(bad)
dec
jmp
sbb
dec
fbld
or
stos
nop
fild
or
sbb
and
scas
icebp
in
add
or
cmps
clc
out
scas
mov
sbb
hlt
sahf
pop
pop
mov
push
ret
mov
outs
jg
test
and
push
popa
xlat
dec
mov
movs
push
jnp
push
adc
mov
lods
pop
ds
and
add
xor
rol
adc
mov
cwde
add
push
ror
scas
cmp
scas
mov
mov
jb
(bad)
xor
mov
or
mov
and
aad
inc
add
mov
rol
dec
lahf
push
or
inc
sub
adc
add
leave
inc
and
ficom
adc
add
mov
dec
adc
(bad)
mov
push
hlt
or
and
aaa
mov
sub
xor
inc
test
imul
add
add
pop
dec
in
add
push
push
aad
sbb
fild
enter
jno
push
push
push
sub
aas
cld
and
inc
jnp
inc
(bad)
neg
inc
movzx
jns
fidivr
xchg
mov
and
push
mov
pop
aaa
dec
and
adc
or
sub
in
push
push
and
add
(bad)
dec
mov
adc
sbb
sub
dec
and
arpl
loopne
fs
out
mov
fadd
es
bound
dec
or
add
xchg
cmp
or
sub
cmp
xchg
lock
dec
lahf
mov
icebp
add
push
lea
adc
pop
xchg
push
stos
iret
push
adc
mov
int
div
aas
pushf
pop
push
jbe
mov
nop
inc
push
sbb
add
add
adc
adc
fcomp
leave
xchg
and
out
pop
in
add
xchg
cmp
arpl
scas
dec
out
movs
ins
sub
ja
sbb
xor
or
loop
inc
pop
dec
in
fmul
xchg
cmps
jo
adc
ins
pop
inc
pusha
sbb
mov
mov
push
shr
sbb
not
push
fcom
sbb
das
xchg
mov
push
sub
sti
xchg
mov
push
mov
add
mov
movs
ds
push
in
cld
push
mov
mov
fistp
mov
dec
adc
mov
loope
jo
adc
xlat
in
and
jle
shl
(bad)
push
inc
add
inc
(bad)
fisttp
pop
cmp
pop
cmp
lea
mov
jmp
dec
fmul
(bad)
inc
jae
cmp
or
fucomip
pop
iret
pop
lods
or
pop
ja
ds
mov
addr16
push
xor
pop
pop
sbb
pop
or
and
mov
sub
xchg
loopne
or
cwde
(bad)
jae
inc
dec
jne
sbb
push
test
or
xchg
push
test
add
add
or
mov
xlat
fistp
add
push
cmp
push
lods
adc
add
(bad)
(bad)
mov
sar
xor
movzx
sub
je
or
je
jmp
push
fcom
je
pop
ret
inc
dec
jne
(bad)
adc
scas
adc
push
mov
xchg
rol
jmp
adc
inc
push
pop
inc
inc
and
pop
mov
test
push
arpl
arpl
sti
xchg
hlt
or
cmp
pop
xor
repz
add
or
jne
sub
mov
add
add
pop
push
call
jno
jmp
mov
adc
pop
jo
mov
aam
aaa
push
push
add
xor
mov
sub
push
sub
adc
(bad)
pop
add
in
daa
jae
inc
call
rcl
(bad)
xchg
(bad)
dec
sub
movs
call
or
ss
adc
cvtps2pi
mov
mov
or
daa
rol
pop
popf
or
add
xchg
aad
scas
in
add
int3
rol
jnp
in
jo
or
fild
jmp
retf
jp
push
pop
or
je
xor
push
test
imul
and
push
movs
lock
xor
cs
ins
ret
dec
leave
aaa
pop
adc
xchg
lock
xor
lock
lock
xor
mov
jecxz
lea
add
add
xchg
les
loope
loopne
outs
data16
adc
jo
loopne
sub
iret
cmp
mov
inc
movs
ds
jnp
mov
push
cmp
push
das
in
aaa
lds
les
jns
imul
cmp
or
pop
adc
shl
(bad)
pusha
stos
or
pop
in
(bad)
bts
adc
lods
lea
fsub
in
les
inc
xchg
sub
in
adc
and
movs
mov
mov
cmc
cli
es
in
pop
mov
clc
jne
push
or
gs
inc
inc
adc
test
fisub
mov
add
and
mov
mov
sbb
mov
push
cmp
jne
cmp
cld
cmp
jmp
(bad)
les
sub
or
mov
xor
sbb
push
cmc
out
(bad)
pop
jbe
retf
jne
or
jl
ret
ret
call
shr
call
call
loopne
fucomp
add
jne
hlt
cdq
call
cli
push
mov
rcl
ret
add
cmp
cmps
call
inc
jns
int3
(bad)
inc
les
rcl
or
enter
in
call
mov
repz
jp
rol
add
je
or
pop
loopne
or
ins
jo
sbb
inc
outs
pusha
mov
(bad)
push
mov
daa
iret
push
popaw
add
loopne
data16
shl
fidivr
mov
mov
mov
loope
add
lods
add
aas
mov
clc
pop
push
ficomp
dec
cwde
sub
je
sub
les
push
icebp
mov
mov
sub
idiv
and
mov
pop
jle
mov
ret
lods
pop
movs
fstp
sbb
fcmovbe
cs
ss
inc
cmp
mov
cmps
sub
sub
jl
inc
icebp
jecxz
dec
mov
sub
jecxz
(bad)
int3
aaa
and
imul
test
mov
cmps
movs
mov
sbb
and
cmp
push
pop
js
and
mov
stc
mov
dec
pop
or
inc
push
cld
jmp
fcom
push
test
cli
inc
mov
cwde
(bad)
hlt
in
pop
inc
add
mov
push
push
fwait
sub
and
pusha
inc
fwait
out
jbe
in
jo
or
les
xchg
xor
fisttp
cmp
jmp
retf
aad
call
std
mov
pop
and
sbb
in
js
(bad)
cmp
sub
pop
sub
fistp
rol
sbb
mov
jge
cmp
rcr
or
jne
cmp
(bad)
mov
sub
test
pop
ret
aam
add
(bad)
cdq
sub
sbb
jo
les
xor
ss
mov
dec
out
fs
xor
(bad)
mov
push
(bad)
out
dec
pop
and
push
push
pop
dec
adc
rcr
aas
cld
sub
jae
push
loopne
mov
jb
inc
out
push
imul
sbb
mov
enter
(bad)
fiadd
sub
jbe
xlat
sub
ds
push
retf
jecxz
and
add
lods
mov
sub
adc
jae
js
cld
mov
pop
add
sti
and
mov
jecxz
push
loope
jo
daa
xor
inc
ror
or
inc
add
mov
pop
loopne
xor
xchg
cmp
cmpxchg
push
inc
dec
shl
and
and
or
add
push
cs
bound
ret
and
lods
sbb
inc
(bad)
dec
lods
test
push
int
shr
movs
mov
frstor
inc
test
pushf
mov
cmp
pop
xor
cwde
dec
mov
sbb
push
and
mov
and
fimul
(bad)
out
and
repnz
repz
inc
and
rcpps
mov
fnsave
pusha
scas
not
xchg
data16
inc
dec
adc
add
mov
ins
push
mov
inc
sbb
sbb
push
aas
je
add
mov
mov
icebp
sub
or
sub
retf
dec
cmp
ror
mov
cli
add
mov
push
adc
adc
pop
jge
mov
inc
popf
add
jmp
movs
push
scas
dec
sbb
pusha
or
dec
push
cmp
xchg
or
inc
sbb
inc
imul
push
aaa
mov
rol
out
sbb
adc
jmp
sbb
ja
(bad)
(bad)
push
xor
arpl
and
xchg
loopne
push
pushf
cwde
les
pop
adc
push
mov
jmp
in
sbb
add
mov
out
cmp
repnz
mov
mov
cwde
push
xor
sub
xchg
aaa
inc
fbld
and
mov
or
jle
sar
out
mov
jg
pushf
add
imul
inc
mov
push
mov
dec
ret
shl
dec
arpl
add
popf
clc
xchg
xor
es
adc
sbb
retf
dec
je
aaa
dec
xor
inc
cld
std
sub
push
sbb
mov
arpl
mov
mov
out
xor
aaa
and
out
stos
xchg
call
mov
push
xchg
loopne
cwde
xchg
push
push
sbb
dec
call
fdivr
out
jmp
and
imul
lea
sbb
clc
cmc
aam
loop
push
gs
add
or
in
inc
push
test
xchg
cwde
sahf
xchg
test
or
aaa
icebp
(bad)
aas
in
int3
pop
mov
adc
pop
sub
push
sbb
ror
test
rcr
ret
retf
scas
inc
ret
push
sbb
sbb
sbb
sti
ja
add
and
sub
mov
add
scas
dec
test
xor
xchg
inc
ret
fs
ret
push
sub
or
sub
ret
(bad)
idiv
sub
or
adc
out
cli
push
mov
and
je
mov
repnz
test
lahf
pop
pop
xchg
or
call
add
test
fldenv
int
adc
cmp
dec
adc
in
popf
call
jecxz
mov
xor
lea
mov
test
xlat
call
sub
dec
(bad)
pushf
sbb
lock
adc
shr
lds
cmps
sar
retf
adc
(bad)
jge
inc
pop
cmps
clc
dec
test
jl
adc
and
outs
sar
jae
jl
(bad)
icebp
push
les
inc
dec
cmp
jg
dec
xor
push
or
jle
and
xchg
cmp
add
test
mov
neg
in
pop
mov
or
xor
clc
fsubrp
push
js
xor
std
es
push
nop
out
loop
data16
mov
in
jo
jge
mov
add
mov
in
ja
jno
pop
or
dec
adc
or
add
lea
add
imul
call
mov
les
test
daa
push
xor
sbb
loopne
push
div
dec
bound
cmps
and
jecxz
sub
enter
pop
outs
sub
mov
or
pop
mov
xor
in
and
bound
out
sahf
test
jecxz
xchg
pop
adc
xor
pop
adc
jmp
add
lds
inc
ins
and
xlat
and
test
mov
rol
rol
add
loop
(bad)
das
loop
adc
nop
xchg
fmul
mov
and
add
adc
push
daa
dec
jmp
or
mov
fisub
push
xchg
(bad)
ja
call
(bad)
ja
pushf
mov
js
dec
and
sub
call
mov
push
neg
or
dec
pop
jo
mov
adc
outs
(bad)
into
es
xlat
pop
lods
(bad)
ins
ret
and
add
mov
ins
aad
and
add
jo
or
jl
push
and
adc
cmp
adc
ins
add
ds
aas
dec
pop
(bad)
sti
pop
push
xchg
pop
sub
jmp
popf
inc
mov
inc
or
shl
or
ins
add
inc
mov
mov
or
push
fs
push
mov
iret
or
ret
popa
pop
out
sbb
(bad)
and
inc
add
jne
jnp
jb
push
or
aas
xchg
test
outs
inc
imul
mov
cmp
loope
add
sub
fdiv
div
push
adc
add
ja
cmp
sub
arpl
fs
gs
cmp
(bad)
aas
add
xchg
dec
mov
imul
fst
adc
dec
push
jns
aaa
in
mov
jg
pop
push
xchg
ins
xchg
js
sbb
pop
adc
add
(bad)
(bad)
fmul
push
pushf
xchg
(bad)
int3
dec
mov
in
add
shr
out
dec
and
jmp
mov
rol
xchg
lods
lea
add
sub
imul
jae
dec
jo
add
add
adc
cmp
fld
jge
push
push
push
ds
and
test
cmp
sbb
sbb
(bad)
dec
sbb
push
or
jge
jns
aad
xor
sub
loopne
adc
push
pop
repz
mov
add
dec
jl
or
test
outs
push
cmps
nop
out
cmp
ins
push
sbb
cs
mov
aaa
pop
shr
jno
pop
add
pop
xchg
outs
add
push
inc
js
je
cmps
push
dec
push
je
aas
xchg
jp
pop
clc
nop
cmp
nop
push
jne
arpl
lods
imul
popa
imul
pop
sub
jp
pop
clc
je
(bad)
xor
and
sti
adc
psraw
xchg
xchg
add
and
adc
xor
mov
fs
imul
jb
dec
add
cmovle
or
or
sub
stos
add
xor
js
pop
sub
mov
and
adc
adc
xchg
inc
xchg
test
in
mov
jo
or
mov
mov
push
xor
sub
lods
repz
inc
call
xchg
jb
pop
mov
xchg
das
scas
jno
sbb
push
push
pop
adc
ret
pop
sbb
dec
cmovbe
xchg
mov
mov
movzx
jno
or
and
ss
dec
sbb
fwait
dec
call
xor
nop
jb
add
mov
in
or
inc
jmp
mov
jl
out
daa
xchg
aam
and
push
enter
sub
test
pop
pop
sub
retf
gs
mov
add
adc
ret
or
adc
sbb
out
mov
fs
jp
and
mov
xchg
fstp
mov
dec
mov
cmp
leave
jno
add
sahf
jge
lds
lods
xor
or
xchg
lahf
sub
or
pusha
xchg
push
dec
or
xor
and
xchg
add
call
ret
in
pop
push
mov
aas
out
pop
repnz
dec
push
push
popf
out
sahf
sbb
sub
cmp
cs
cmp
pusha
cs
sbb
cld
push
xor
fisubr
push
push
adc
ja
addr16
and
mov
jp
call
xor
add
or
mov
add
xor
inc
ja
push
push
push
fmul
and
retf
test
cmps
fadd
jge
fxch
jne
jmp
and
mov
inc
lock
in
ror
or
or
icebp
xchg
or
adc
cmp
or
ja
sbb
retf
pop
xor
(bad)
push
call
adc
add
mov
leave
cmp
sbb
pushf
cmps
arpl
pop
mov
mov
add
or
or
adc
(bad)
outs
mov
adc
dec
cwde
addr16
ss
inc
or
sub
jo
adc
(bad)
ja
ja
das
and
movs
js
jno
lock
aaa
and
or
test
pusha
push
sbb
or
pop
outs
enter
inc
xor
ins
inc
add
jne
sub
inc
xor
mov
add
sub
jns
and
jo
mov
adc
and
bound
add
adc
mov
push
xchg
out
std
jns
call
mov
push
dec
add
or
and
or
jg
pusha
fcom
add
mov
mov
(bad)
fwait
out
adc
and
mov
push
push
jp
or
jo
sub
push
pop
add
cmp
adc
inc
arpl
inc
inc
adc
add
or
sbb
movs
add
pop
aas
outs
push
pop
mov
jecxz
out
push
shl
or
jnp
mov
sbb
and
inc
and
or
push
jnp
in
sti
loopne
pusha
jl
daa
(bad)
das
fdivr
mov
jno
in
cmps
add
sub
sub
jnp
xor
xor
in
cmp
test
and
test
inc
xchg
pusha
test
pop
push
cmp
or
test
jbe
jl
jl
xor
scas
pusha
sbb
sub
pop
mov
and
xor
mov
test
in
and
adc
mov
jge
pmulhuw
enter
jle
sub
sub
out
dec
outs
xchg
fadd
fsubr
inc
int3
jmp
iret
repz
std
fabs
aaa
jge
iret
repz
pop
repz
repz
daa
das
ins
ja
repz
adc
(bad)
hlt
js
adc
fdiv
mov
jge
and
mov
or
mov
sub
mov
fcom
dec
mov
xor
ja
(bad)
push
mov
dec
jge
push
push
xor
inc
mov
pop
cwde
adc
lods
jg
mov
add
mov
movsx
xor
add
adc
xor
cmp
add
cs
gs
add
adc
fld
pushf
imul
add
popa
jae
arpl
cmp
xchg
fcmovnbe
jg
dec
dec
sysret
daa
sub
jg
sbb
pop
or
sub
push
add
inc
data16
mov
outs
sub
mov
(bad)
icebp
test
add
shr
out
pusha
push
ja
stos
inc
jno
adc
stos
cmp
jmp
and
push
scas
sub
clc
push
lahf
or
int3
bswap
out
or
enter
xchg
pushf
pop
pop
pop
xchg
jne
xor
enter
mov
lahf
inc
xchg
xchg
jo
pop
test
fs
dec
nop
rcl
not
or
fisub
test
sub
js
xchg
test
inc
sbb
nop
retf
sbb
and
or
rcl
in
push
push
in
dec
(bad)
xor
inc
pop
ficom
jnp
adc
push
sub
pushf
inc
or
cs
inc
push
push
pop
repz
repz
jae
add
xchg
test
retf
inc
pushf
jns
out
push
cmps
or
sub
out
sahf
out
pop
jo
rcr
in
mov
pop
jo
pop
add
mov
push
pop
adc
and
mov
inc
pop
sbb
dec
or
cmp
je
mov
inc
outs
push
sbb
jo
inc
xor
mov
loopne
iret
je
ins
sahf
push
mov
sub
test
rol
push
dec
inc
jle
inc
or
or
pop
jno
sti
mov
sbb
ret
call
test
das
push
test
pop
daa
sub
dec
mov
stos
sar
mov
nop
test
cmp
push
pop
pop
shl
adc
dec
daa
mov
mov
pop
sti
mov
mov
das
mov
and
cwde
mov
cmp
imul
ja
jb
or
push
aam
and
mov
sahf
out
mov
or
fidivr
push
fild
jecxz
repz
neg
push
push
pop
sub
jo
out
cmp
add
pop
add
loop
add
mov
xchg
add
stos
push
mov
mov
out
mov
fimul
push
and
test
aas
push
add
mov
pop
mov
mov
sbb
or
rcr
or
add
mov
xor
retf
mov
xchg
rcl
inc
mov
add
add
movups
add
cmp
mov
cmp
add
call
pop
add
pop
aad
mov
ins
cs
leave
or
inc
(bad)
mov
leave
sysret
mov
mov
mov
mov
or
xor
fwait
mov
inc
and
cmp
packssdw
and
std
sbb
test
lahf
or
xor
inc
mov
pop
mov
inc
jl
fisttp
nop
jne
inc
movs
das
and
mov
jne
cmp
xor
test
mov
fist
or
cmp
adc
push
loopne
or
pop
cmps
push
mov
mov
add
dec
xor
mov
les
mov
mov
pop
push
sbb
lea
pop
(bad)
(bad)
push
cmp
and
dec
call
sub
sub
sbb
dec
shl
cli
mov
call
xor
fmul
add
dec
push
push
add
jne
ffreep
mov
rcl
xor
inc
fcom
push
and
loopne
add
dec
ret
jl
push
les
icebp
fadd
xchg
pop
or
mov
pop
sub
and
and
and
add
sbb
leave
push
push
mov
xor
dec
je
sub
movs
mov
adc
push
add
xchg
ret
jmp
adc
or
out
sbb
in
mov
sahf
push
inc
dec
pushf
mov
test
and
in
inc
aaa
mov
mov
xchg
push
sbb
inc
or
mov
push
push
jle
sbb
xchg
pop
xchg
mov
clc
push
jge
sbb
adc
scas
movs
aad
adc
or
pop
jnp
aaa
pop
mov
pop
pop
pslld
cmp
adc
mov
dec
sar
push
or
inc
cmp
cmps
(bad)
out
clc
mov
loope
cmp
shl
add
mov
mov
cmp
cmp
and
hlt
inc
rcl
and
jmp
xor
or
and
scas
cmp
in
sbb
lock
sbb
mov
ss
fcom
inc
dec
cmp
or
loope
aam
in
sti
scas
cmp
inc
test
sub
inc
sub
jbe
mov
adc
test
popa
mov
push
mov
jne
daa
pop
adc
cmp
jo
mov
pop
jecxz
(bad)
loop
adc
icebp
aas
inc
inc
dec
jne
inc
mov
or
mov
mov
xchg
inc
sbb
jno
fsub
cmp
ins
jne
push
lea
je
mov
aad
add
int3
and
pusha
and
rol
int3
adc
sar
mov
mov
push
loopne
push
push
dec
aad
imul
enter
adc
xchg
(bad)
or
cmp
mov
xor
popa
loope
add
in
ror
mov
pop
mov
bound
add
fisubr
jg
pop
add
in
push
or
add
das
push
rcr
je
idiv
aaa
add
or
add
sub
mov
or
sbb
pop
iret
jno
inc
pop
cmp
and
or
stc
push
daa
daa
daa
adc
xchg
(bad)
cmps
adc
pop
cld
jle
pop
in
test
inc
and
cmps
imul
or
jmp
xor
lahf
add
aaa
ret
das
cmps
mov
jo
out
add
ja
mov
ret
adc
lock
sbb
sbb
or
pop
fcom
lock
sub
mov
(bad)
mov
mov
jne
loope
ficom
push
pop
inc
push
into
mov
ds
int
xchg
movs
je
and
and
nop
in
out
adc
ds
mov
in
cmp
mov
mov
jl
sbb
retf
xchg
ret
and
loop
mov
and
cmp
test
dec
mov
xchg
lea
mov
dec
jge
js
push
jb
movs
xorps
sub
inc
xchg
sbb
inc
xor
pop
xor
adc
xchg
add
cmps
adc
scas
dec
xchg
(bad)
mov
in
adc
test
pop
das
pusha
mov
in
mov
(bad)
ror
das
call
push
ret
or
inc
add
ror
mov
adc
and
inc
adc
pop
sub
mov
cmp
je
test
push
fwait
ins
cdq
dec
jmp
and
lea
in
jns
pop
jns
(bad)
movs
or
sbb
add
ret
pushw
cmp
add
ds
call
adc
sub
push
adc
pop
sti
fild
jmp
iret
mov
cmp
lods
iret
adc
pop
pop
add
popa
daa
sub
das
sub
sbb
(bad)
cmp
or
scas
mov
ja
mov
mov
push
add
xchg
or
or
mov
cdq
jmp
test
mov
add
pop
sub
enter
xor
js
and
mov
outs
cmps
mov
sbb
sbb
test
jg
adc
pop
into
sub
ret
or
sub
outs
lea
loope
mov
ja
fimul
add
add
inc
fucomi
and
add
and
fimul
and
popa
cwde
xchg
push
in
jl
xchg
pop
pop
test
lds
jo
movs
sbb
ja
add
mov
push
cmp
mov
ss
rol
addr16
xchg
outs
cmp
jecxz
mov
loope
push
cmc
mov
inc
jmp
jb
add
lods
add
jne
int3
out
dec
xor
mov
sbb
jp
neg
mov
pop
jmp
sub
or
setge
je
pop
adc
xor
dec
pop
aam
adc
xor
in
sub
xor
push
cmc
sbb
jp
mov
dec
icebp
sbb
jmp
fist
xchg
fwait
inc
sub
(bad)
call
adc
mov
push
push
xchg
add
sub
adc
pop
fst
pushf
jge
mov
jae
adc
mov
jmp
pushf
sbb
or
and
and
and
ror
es
sbb
xor
mov
sub
retf
in
sbb
inc
mov
xlat
in
loop
mov
dec
xchg
pop
and
sbb
pop
popf
push
dec
or
popf
pop
popf
cwde
add
out
and
mov
jl
mov
adc
(bad)
call
sahf
movs
xchg
repnz
adc
out
rcl
inc
mov
(bad)
pusha
nop
xchg
ret
and
xchg
sti
ret
sar
aad
add
ins
arpl
push
mov
sub
sub
(bad)
call
(bad)
loopne
imul
fidiv
pop
popa
mov
(bad)
pop
arpl
dec
sub
fbstp
xor
cld
push
inc
jns
jecxz
mov
mov
pop
sbb
push
dec
or
inc
push
cmp
adc
fdivr
mov
or
(bad)
adc
jmp
in
dec
cmps
pop
push
inc
aam
das
rcr
push
push
sub
sbb
dec
or
adc
pop
scas
push
in
sbb
loope
push
mov
imul
fbld
inc
std
mov
imul
or
pop
mov
xchg
repz
movs
sub
sub
inc
setg
mov
rol
pop
fnstenv
jge
mov
cmp
adc
push
retf
movs
inc
mov
pushf
je
sub
dec
push
clc
jge
popf
adc
sub
mov
cld
sbb
movs
and
push
ins
jmp
ret
add
das
cmps
inc
push
cwde
jbe
inc
or
es
push
ret
mov
cwde
and
(bad)
and
xchg
fild
sub
add
adc
aam
iret
xchg
lods
mov
jmp
adc
cmps
loopne
add
mov
aaa
sub
outs
gs
rol
mov
cmp
mov
jnp
cdq
mov
mov
das
lock
les
push
push
add
sub
mov
push
imul
ja
add
inc
or
dec
xlat
xchg
adc
in
in
rcr
sti
inc
pop
movs
fld
hlt
aam
adc
(bad)
cmp
test
add
movs
retf
pop
fmul
inc
cmc
shr
sub
mov
jl
out
add
test
add
mov
mov
and
in
movs
nop
iret
rol
xor
adc
cli
mov
ret
je
pop
ss
mov
js
call
mov
in
sbb
jge
das
cmp
call
jmp
add
and
(bad)
sub
test
jne
xchg
or
pop
and
test
sbb
mov
xchg
or
inc
or
xchg
or
imul
or
outs
or
mov
call
xor
xor
movs
ret
pop
mov
retf
sahf
mov
aad
ret
(bad)
jg
mov
dec
ret
into
jle
cs
inc
loopne
mov
int
mov
push
or
push
or
sahf
rol
rol
rol
adc
jmp
mov
in
add
jg
xchg
sbb
outs
mov
setl
test
xchg
mov
pop
push
shl
popa
xchg
cmp
sbb
sbb
loope
or
mov
fcom
fs
cmp
(bad)
or
dec
movs
mov
test
xchg
movs
movs
pop
push
loope
test
or
add
or
and
inc
jb
cmps
push
jns
sub
loope
pop
js
cmp
lahf
mov
add
xor
sub
and
sti
xchg
daa
es
ficom
pop
enter
sbb
push
jne
iret
fmul
rol
retf
ins
add
push
ret
jmp
rol
jnp
scas
inc
jne
das
inc
jmp
out
cld
data16
inc
sub
lock
fwait
add
mov
inc
or
cmps
clc
xchg
jne
loope
mov
cld
and
out
dec
sti
push
mov
xchg
jle
dec
bndldx
lock
daa
call
lahf
sub
cmp
jge
ds
(bad)
cmps
shl
(bad)
adc
pop
es
mov
and
push
ss
sar
mov
aam
pop
fistp
cmp
dec
xor
xor
sbb
je
pop
adc
(bad)
mov
sahf
sbb
ror
dec
push
fnop
mov
mov
adc
pxor
daa
(bad)
bound
mov
fld
xor
ret
adc
scas
and
addr16
jb
ror
int3
add
and
jp
or
adc
mov
inc
xor
jl
inc
mov
cmp
test
inc
movs
shr
aas
mov
push
inc
mov
or
js
mov
push
lea
add
xlat
int3
or
nop
add
into
xchg
clc
popa
mov
mov
push
arpl
xor
lds
ret
or
xor
push
repnz
xor
test
les
ret
inc
xchg
xor
push
pop
addr16
pop
cdq
dec
sets
test
xadd
ins
pop
fdivr
int
fsub
fdivr
test
add
push
pop
adc
aam
jmp
sub
sub
push
pushf
mov
xchg
jne
sbb
xor
jne
cmp
rol
adc
mov
push
rcl
adc
je
(bad)
into
inc
int
movs
bound
and
mov
cwde
inc
adc
(bad)
or
shl
xor
sbb
pop
mov
(bad)
sbb
mov
jae
(bad)
adc
inc
dec
mov
call
std
pop
les
cmps
clc
pop
and
or
add
les
or
enter
mov
pop
pop
sbb
or
(bad)
add
xchg
push
add
lds
pop
mov
inc
mov
ins
mov
mov
jo
or
sbb
jmp
mov
aad
dec
mov
mov
pop
mov
rol
jmp
pusha
push
or
xchg
or
aaa
aas
adc
add
xchg
or
test
lahf
or
sbb
movs
push
pusha
cld
pop
cmp
mov
jmp
shr
lds
mov
jge
mov
cmp
mov
cmp
scas
adc
(bad)
jne
mov
arpl
aas
shl
push
mov
and
cdq
or
add
sbb
push
jmp
shl
sbb
xchg
arpl
add
push
jmp
data16
ja
push
test
cmps
mov
push
and
mul
rol
mov
push
out
mov
inc
je
xor
or
xchg
mov
stos
hlt
and
add
test
mov
mov
loope
push
bound
(bad)
loopne
inc
leave
sub
xchg
mov
scas
mov
or
push
push
sbb
sbb
dec
add
sbb
push
xor
push
mov
(bad)
push
mov
pop
push
addr16
inc
cmp
pop
lods
sub
data16
or
dec
jb
shl
punpckhbw
dec
arpl
jo
into
add
jb
je
mul
imul
add
shr
mov
aaa
or
inc
or
push
daa
sub
or
fdiv
(bad)
(bad)
(bad)
in
adc
sub
call
jp
inc
adc
nop
xor
or
xchg
or
fbstp
pop
dec
popa
lahf
cmc
adc
mov
and
clc
out
mov
ret
pop
test
loop
mov
pop
mov
rol
sub
push
mov
in
(bad)
adc
mov
and
sub
shl
xchg
int3
les
xor
and
and
cmps
inc
mov
psubw
popf
(bad)
push
or
cmp
mov
push
adc
fild
dec
inc
push
je
test
jne
mov
jo
mov
paddd
add
mov
or
push
jo
adc
(bad)
push
pop
cmps
mov
ins
mov
outs
adc
ins
gs
jb
cwde
test
jns
icebp
pop
imul
fsubr
add
add
bound
gs
clc
fild
test
lahf
pop
pop
xchg
xchg
add
test
cs
add
jg
(bad)
aas
mov
add
fcom
xor
stos
xchg
retf
and
in
aaa
scas
add
or
(bad)
pop
pop
les
dec
outs
jnp
mov
mov
sbb
add
push
mov
movs
and
mov
mov
sbb
test
dec
nop
js
inc
push
(bad)
push
mov
mov
in
pop
sub
jb
pop
cmp
cmp
jle
sahf
out
sahf
cmp
adc
add
sahf
out
pop
arpl
fwait
out
sahf
out
ins
jne
test
(bad)
(bad)
(bad)
mov
push
pushf
adc
dec
mov
xor
clc
mov
call
add
xchg
mov
les
sbb
ficom
sub
push
lahf
outs
push
push
add
out
adc
in
xchg
rol
pusha
ins
fwait
int
mov
ds
mov
test
mov
pop
icebp
cmp
push
pusha
cs
leave
push
mov
(bad)
pop
xor
ret
loop
and
fist
mov
daa
ss
mov
fidivr
push
lock
push
mov
cwde
xor
in
imul
pushf
push
and
dec
sub
mov
sub
or
mov
(bad)
jbe
ds
xchg
pop
repz
fistp
mov
mov
xor
pop
inc
push
inc
xchg
(bad)
jb
push
inc
and
inc
or
or
outs
push
inc
inc
mov
out
repnz
icebp
call
clc
jmp
mov
adc
shr
jns
movs
adc
int3
or
add
jmp
mov
mov
sbb
mov
sti
aaa
sub
arpl
cli
loope
popa
dec
push
cmp
push
pop
(bad)
leave
call
mov
pop
sub
or
add
cmps
cmp
mov
clc
pop
adc
xor
and
push
in
arpl
mov
retf
inc
ficomp
retf
sub
sub
int3
mov
shr
movs
push
mov
sbb
mov
int
mov
pop
mov
in
adc
push
cmp
push
mov
popf
mov
aas
movs
push
push
enter
aas
jo
xor
mov
push
push
mov
pop
sub
sbb
stos
mov
jnp
(bad)
fidiv
loop
popf
push
or
push
or
sbb
in
push
aas
pushf
xor
icebp
out
push
or
out
push
fld
loope
repz
pop
dec
jmp
inc
les
cmps
loop
cmps
lods
push
xor
jmp
push
lock
cmp
dec
push
ins
movs
add
mov
outs
stos
clc
push
lock
pop
pop
inc
es
sbb
jmp
adc
es
int
out
loop
gs
dec
les
xchg
stos
mov
sub
vphaddudq
xchg
pop
les
daa
jmp
stos
dec
mov
mov
and
jo
icebp
mov
xor
jnp
jmp
fcomp
fsub
jecxz
mov
cmp
inc
fiadd
sub
int3
push
push
js
dec
aad
cld
mov
inc
shl
sub
leave
ror
or
mov
cmp
mov
shl
fild
jmp
jne
ror
hlt
mov
mov
rcl
sti
or
push
sbb
daa
das
sar
adc
clc
mov
loopne
pop
in
pop
sub
les
repnz
jl
pop
mov
push
push
retf
sub
pop
repnz
mov
movs
sar
push
sbb
dec
mov
pusha
repz
push
mov
cmp
rol
stos
add
add
push
dec
andnps
sbb
pop
sub
dec
pop
push
inc
adc
repz
daa
loope
mov
cmps
dec
shl
cmp
push
shl
pop
cmp
or
or
push
add
(bad)
retf
and
fwait
ins
movs
pop
inc
dec
frstor
lods
test
push
sub
ja
adc
ret
adc
adc
xchg
lds
retf
lds
rol
outs
retf
pop
mov
out
iret
ret
push
pop
push
daa
daa
mov
shrd
lock
lock
dec
outs
cmps
jae
adc
pop
inc
sbb
fs
repz
mov
push
aad
mov
mov
movnti
push
and
out
fistp
out
out
idiv
out
jg
fsubp
cs
repnz
dec
push
and
inc
mov
arpl
test
adc
dec
stos
shl
and
cli
scas
les
mov
mov
shl
adc
es
les
dec
js
ror
cli
cmp
cld
push
push
or
adc
aam
add
or
cmp
leave
pop
add
sbb
lds
sahf
mov
(bad)
(bad)
wbinvd
add
mov
cmc
dec
or
lods
gs
mov
dec
sbb
or
mov
dec
popa
(bad)
in
jmp
sub
rcl
sbb
or
add
mov
stc
xchg
scas
adc
jo
sti
repnz
xor
pusha
jecxz
loop
push
bound
inc
imul
int
adc
outs
pop
dec
sub
pop
xchg
mov
fwait
test
int3
mov
add
and
mov
lds
mov
int3
adc
in
out
add
pop
dec
in
or
lods
shl
or
cmp
std
cdq
mov
cmp
in
add
pop
inc
jbe
je
das
xchg
push
cld
(bad)
loopne
sbb
add
or
pusha
lahf
sbb
mov
inc
imul
jl
xlat
add
retf
dec
jp
jmp
dec
enter
scas
cmp
(bad)
out
dec
push
inc
mov
sbb
popa
xor
push
and
and
add
movs
jecxz
pop
or
mov
(bad)
inc
popf
and
sti
xor
in
or
pusha
enter
jl
cwde
enter
push
adc
add
inc
mov
leave
adc
outs
int
pop
push
jno
add
sub
cmp
bound
icebp
ror
jno
sbb
cmp
inc
stos
mov
xor
jno
enter
pop
xor
adc
sar
test
cmp
mov
stos
cmp
push
aad
inc
lods
ins
add
sub
cmps
xor
inc
cmps
test
add
add
loopne
add
jne
(bad)
jmp
mov
pop
or
neg
mov
test
dec
add
or
pop
push
cmps
jne
rol
adc
add
retf
ss
shl
push
pop
push
sub
xchg
fistp
xchg
ror
cmps
adc
dec
call
push
jno
xlat
popf
sub
aaa
push
and
mov
add
inc
shr
and
or
push
adc
retf
push
mov
xor
xor
xor
mov
lods
js
int3
push
rcr
jne
inc
or
inc
add
or
cwde
int3
add
fadd
aas
pop
retf
sbb
mov
add
fdiv
das
and
xchg
test
jle
mov
inc
call
add
int
jns
enter
imul
outs
pop
dec
inc
arpl
mov
enter
bound
inc
add
xchg
dec
and
push
sbb
and
retf
or
add
mov
ins
setl
outs
ja
mov
dec
in
pushf
pshufw
cmp
pop
in
in
das
ficom
call
into
pop
push
loope
jmp
push
icebp
fldenv
xor
cmp
js
jecxz
pop
cmovs
push
(bad)
push
add
dec
ret
jmp
xor
and
fs
imul
stc
cmps
test
iret
ds
scas
cwde
rol
and
mov
cmps
mov
inc
push
push
les
lock
jmp
add
daa
pushf
arpl
iret
mov
iret
sbb
mov
push
mov
gs
xlat
dec
imul
push
in
addr16
clc
rol
adc
mov
dec
inc
int3
sbb
and
repz
xor
dec
and
mov
add
and
sbb
(bad)
je
pop
dec
or
add
(bad)
lea
hlt
pop
xchg
or
ret
pop
xchg
or
add
adc
push
imul
pop
or
out
dec
push
mov
add
mov
rcl
mov
pop
sbb
outs
pushf
xchg
out
sub
push
and
cmove
push
daa
iret
nop
or
pop
add
imul
repnz
push
add
mov
or
inc
inc
shl
or
inc
inc
mov
xlat
dec
push
add
pop
iret
add
lods
outs
sub
mov
inc
jbe
mov
push
adc
jb
push
repz
jle
shl
dec
pop
stc
or
or
add
sub
and
sub
mov
dec
xchg
pusha
movs
push
enter
and
adc
add
and
mov
add
outs
pop
or
add
mov
addr16
popa
outs
or
ja
jg
push
inc
inc
sbb
mov
aam
mov
add
push
loope
ror
add
mov
and
ins
cmp
imul
xor
mov
add
ds
or
or
add
adc
aas
pop
in
inc
outs
adc
inc
rol
xchg
aad
out
popa
add
inc
mov
lea
push
clc
jne
dec
push
sbb
or
or
add
rol
jmp
test
in
xor
inc
lock
pop
or
bound
sub
ficom
and
xor
ror
and
lods
cdq
(bad)
adc
scas
xor
jo
in
test
dec
popa
stos
test
outs
xchg
jns
icebp
call
aam
fsubr
cs
xchg
sub
lods
fdiv
mov
icebp
cmp
mov
dec
(bad)
inc
push
in
dec
sbb
mov
push
inc
fld
mov
int3
add
loopne
outs
into
loopne
les
test
xor
sbb
add
fs
xchg
sub
inc
mov
adc
or
rcr
and
cvttps2pi
sub
mov
jmp
sbb
hlt
adc
imul
inc
sub
and
or
mov
imul
and
js
and
xor
inc
jmp
and
and
popf
sbb
adc
in
sbb
sbb
xor
sub
seto
sbb
sbb
sbb
mov
in
adc
or
sub
leave
and
adc
and
inc
jmp
jb
or
push
adc
and
or
shr
imul
or
imul
or
adc
(bad)
sbb
add
cmp
fs
imul
inc
xchg
inc
add
add
pushf
fwait
cmp
sub
(bad)
clc
add
mov
or
imul
and
adc
sbb
(bad)
adc
ret
cmp
push
fs
hlt
push
not
inc
lock
lock
in
gs
ja
and
mov
pop
in
movs
in
in
sbb
xchg
call
call
call
inc
push
fs
iret
repz
cmps
xchg
push
lahf
ins
ja
(bad)
or
repz
lods
or
cmp
cmp
loope
jmp
cmc
dec
repz
push
jp
ds
cmp
repz
xchg
mov
cmp
sar
out
mov
and
sti
push
jns
out
add
imul
dec
lea
jns
(bad)
out
mov
push
or
out
sub
sahf
out
sahf
inc
push
pop
ss
jns
out
popf
imul
cmc
jns
out
stos
mov
add
iret
jnp
cmp
push
jmp
push
inc
push
cmp
repz
jbe
push
cmps
repz
repz
nop
fwait
stc
repz
jmp
rcl
fild
in
iret
jnp
out
cs
push
dec
and
inc
repz
adc
cmps
cmp
test
inc
mov
test
int3
cmp
dec
faddp
pop
cwde
rcl
scas
test
aam
mov
leave
retf
and
fmul
inc
test
loopne
fmul
jns
test
lock
xor
iret
ja
sub
ss
jmp
and
outs
xchg
pusha
into
stc
ss
(bad)
jmp
xor
in
outs
and
cli
mov
stos
fsub
cmp
repz
jg
ss
push
sub
inc
movs
sub
or
pop
pop
iret
(bad)
dec
hlt
das
pop
mov
mov
scas
dec
cmps
cld
in
inc
in
leave
inc
push
test
cld
loopne
in
aas
inc
mov
aam
hlt
icebp
(bad)
cli
shr
cmp
ss
and
inc
xor
ss
jno
daa
lahf
addr16
cs
xchg
or
repz
jg
ss
inc
sub
(bad)
sub
mov
adc
add
adc
xor
in
adc
mov
cmc
mov
aaa
(bad)
leave
mov
sbb
mov
call
mov
nop
int
mov
xor
dec
push
cmp
cmc
mov
cmp
mov
lods
mul
or
push
aam
ins
inc
nop
push
mov
test
mov
ficom
loop
in
out
outs
dec
adc
push
ss
adc
cmp
in
aam
sbb
cmp
sub
cmp
sub
pop
adc
or
loopne
ins
cmps
push
test
mov
sbb
mov
lock
and
push
adc
sbb
dec
inc
sub
mov
pushw
mov
and
(bad)
out
cld
jnp
sub
es
fadd
iret
shr
es
sbb
fcomp
sar
push
push
test
scas
adc
out
sub
push
add
and
aam
sbb
add
je
adc
test
in
es
push
push
mov
outs
xchg
mov
inc
ret
ficomp
add
sbb
sbb
mov
or
out
or
add
inc
inc
popa
je
and
sub
add
add
lock
sub
xchg
fwait
cmp
dec
outs
add
adc
shl
adc
in
test
mov
inc
cmps
push
mov
inc
les
jo
adc
sbb
js
pop
sub
inc
adc
aas
or
mov
lds
fdiv
add
push
fadd
icebp
inc
pusha
push
xor
aam
or
sbb
dec
xor
shl
lock
dec
test
push
mov
push
jl
cmp
sub
or
add
xor
push
xor
je
test
mov
xchg
mov
aad
push
ja
loope
mov
les
inc
call
push
add
inc
dec
sub
call
mov
or
rcl
ret
call
std
ss
dec
cmp
sbb
sub
ror
dec
ja
dec
add
vpcmpeqw
or
inc
mov
mov
add
or
add
add
cmp
popa
pop
sub
pop
cs
ins
jbe
push
movs
add
push
adc
out
xor
and
mov
xor
sbb
dec
jp
ja
xor
(bad)
es
lods
add
or
retf
mov
lods
enter
push
stc
jns
add
jmp
test
es
push
jecxz
ins
xchg
xlat
push
xlat
sar
pop
repz
nop
sbb
xchg
mov
sti
inc
es
js
pop
push
inc
adc
ret
xor
jo
ja
mov
(bad)
mov
aad
cmp
or
push
jnp
adc
xchg
jmp
aad
add
mov
sub
jnp
test
or
add
jmp
mov
or
das
add
into
adc
movs
push
aaa
xor
mov
and
ret
push
sbb
xor
call
jbe
test
into
add
js
rcl
adc
add
aaa
xor
popa
inc
int3
inc
loopne
mov
xor
pmuludq
pop
jne
addr16
mov
xor
test
jo
cmp
sub
xchg
pop
movs
mov
mov
push
mov
sub
and
xchg
xchg
mov
push
fisub
and
push
cwde
cwde
xchg
sub
xor
push
xchg
xchg
enter
nop
cmps
add
nop
push
nop
ja
jno
nop
mov
dec
push
cmp
arpl
sti
push
sub
sar
and
test
in
push
add
dec
push
fnstenv
daa
rol
jmp
and
xor
out
push
cmp
jns
out
jbe
mov
out
sahf
mov
fcomp
lahf
out
loop
hlt
add
repz
in
push
push
push
sub
ss
iret
repz
push
pop
push
iret
repz
xchg
jb
mov
cmp
repz
sbb
xchg
(bad)
mov
jecxz
dec
lock
fs
cwde
in
sub
xor
jmp
mov
dec
dec
cmp
ja
add
(bad)
push
sbb
sub
pop
and
sub
jg
xchg
sub
les
mul
add
lods
mov
dec
fs
mov
pop
in
icebp
add
aas
jns
xchg
aas
push
adc
(bad)
cwde
inc
iret
rcl
in
sbb
add
ss
ret
sahf
fsincos
push
sahf
dec
push
outs
xchg
aaa
pushf
js
inc
push
int
inc
push
dec
call
daa
lods
ss
(bad)
js
xlat
mov
cld
push
pop
sti
inc
adc
sti
push
sbb
fdivr
(bad)
xlat
ins
ss
in
(bad)
mov
hlt
test
addr16
out
hlt
test
out
test
rol
fcomp
test
or
ficom
fs
loop
shl
pop
push
pusha
cmp
mov
or
xchg
jo
pop
mov
les
push
sbb
adc
je
mov
call
pop
leave
in
or
jg
inc
cmovs
or
and
stos
mov
sub
test
mov
inc
add
mov
xchg
cmp
out
pop
xor
aas
push
adc
pop
sbb
lock
or
fs
icebp
cmp
lock
rcl
loopne
inc
ins
inc
mov
jp
arpl
lock
cmp
add
shl
dec
sub
add
dec
sub
xchg
aas
xlat
or
inc
mov
dec
(bad)
jbe
sbb
inc
jo
loop
aam
call
and
jo
in
inc
jno
inc
adc
pop
adc
add
jo
jo
lock
and
retf
push
out
sahf
test
hlt
call
retf
xchg
and
loop
icebp
push
jmp
repnz
mov
call
icebp
xchg
push
pop
add
jo
test
add
jg
test
push
fsub
lods
data16
push
fistp
popw
js
je
jbe
test
and
out
add
mov
and
sbb
popa
jns
ja
xor
cdq
rol
imul
mov
call
dec
add
sub
mov
or
loop
repz
daa
div
or
cmps
je
loope
aas
ss
add
jg
mov
mov
mov
int3
xchg
ficom
hlt
inc
cmp
xchg
cmp
(bad)
mov
movs
jmp
cdq
aas
sbb
inc
jmp
dec
xor
in
or
mov
jbe
or
addr16
sub
or
push
mov
xor
sbb
pop
sbb
test
inc
xlat
and
cs
iret
push
jo
sbb
mov
inc
popf
add
add
rol
jae
shl
loopne
or
in
aaa
and
aas
imul
int3
aad
push
xchg
in
push
inc
push
fs
push
imul
push
dec
dec
push
enter
dec
inc
enter
and
push
add
add
push
cmp
ds
in
lds
push
push
and
push
cmp
dec
push
push
das
outs
pop
popf
out
jg
fs
sbb
inc
sub
pushf
cs
(bad)
jp
dec
movs
lods
test
pop
jb
stc
mov
cmp
dec
jmp
rcl
mov
sub
mov
mov
inc
mov
scas
jl
cs
jns
jns
pushw
pop
add
sbb
hlt
icebp
xlat
xor
pop
ja
jb
movs
xor
scas
rol
shl
xlat
js
jl
add
mov
mov
rcl
out
repnz
mov
push
add
xor
js
cmps
rcr
lods
ins
xchg
push
mov
int3
adc
xchg
cmp
cmp
cmc
fdiv
cmp
adc
push
push
push
shr
or
add
out
xchg
mov
pop
push
sub
xor
xchg
pop
and
fist
lock
mov
pop
add
ror
and
cli
cmp
loop
push
jno
ins
xor
push
sbb
jo
xchg
lea
test
addr16
or
cmps
sub
mov
add
mov
int3
push
lds
retf
push
sub
dec
and
pop
dec
loopne
mov
enter
pop
adc
vmwrite
rcr
jo
js
movs
pop
mov
and
loopne
movs
adc
arpl
and
and
cmc
dec
mov
jbe
sysret
cmp
mov
mov
ror
and
cld
loope
or
xor
(bad)
jle
lds
fstp
jo
or
push
or
sbb
adc
lock
ffree
inc
loope
fistp
cs
and
movs
jno
cs
dec
clc
push
push
adc
jl
or
aaa
inc
sbb
repnz
std
in
ffreep
sbb
dec
push
inc
outs
popa
bound
or
in
sub
mov
sbb
scas
lock
jno
js
inc
mov
mov
icebp
js
mov
sub
imul
je
shl
pop
lahf
inc
mov
dec
add
js
enter
push
ins
xchg
ins
ins
xchg
ins
xchg
inc
push
fs
push
fld
adc
inc
add
fs
mov
push
fs
jge
xor
jge
fcomp
and
pusha
pop
imul
pop
jge
pop
push
imul
inc
push
fs
pop
push
inc
bound
enter
push
jns
push
bound
js
out
inc
or
and
dec
sub
dec
in
out
or
sub
fild
inc
imul
int3
int3
addr16
test
out
pop
pushf
lods
mov
out
in
stc
(bad)
sar
dec
ret
(bad)
push
inc
push
out
sahf
out
sbb
ja
out
sahf
dec
mov
jns
out
cwde
loope
dec
repz
xor
ds
repz
or
push
data16
mov
repz
mov
iret
repz
(bad)
fsub
mov
out
add
repnz
push
inc
push
dec
repz
repz
data16
pop
mov
cmp
fwait
lods
mov
mov
jmp
xchg
dec
(bad)
idiv
jg
outs
nop
pop
mov
dec
mov
sar
or
ja
adc
ja
or
jecxz
call
mov
fwait
out
sbb
adc
pop
ja
retf
add
and
cs
add
(bad)
jg
mov
pop
cs
inc
sahf
jb
cmps
into
inc
clc
es
jle
dec
movs
inc
pop
sub
mov
push
fs
cmps
adc
adc
ss
xchg
je
adc
jns
lods
pop
test
(bad)
aas
jns
mov
and
pop
dec
ror
mov
inc
lods
lock
xchg
inc
dec
loopne
mov
mov
movs
ss
cdq
mov
inc
mov
out
sar
sahf
mov
jns
jg
(bad)
fnsave
jns
rol
les
xor
jge
cs
clc
pop
sub
ds
outs
jle
add
or
add
mov
(bad)
jmp
cmp
mov
xlat
mov
aam
dec
mov
(bad)
push
add
push
int3
(bad)
mov
(bad)
dec
push
sti
call
out
dec
scas
push
not
mov
push
sub
push
push
ins
cs
mov
push
pushf
push
inc
in
push
xchg
push
mov
mov
mov
es
cmps
test
jbe
push
add
add
addr16
pop
push
sub
adc
movzx
inc
add
pop
dec
xchg
sbb
enter
mov
push
add
(bad)
fdivr
jge
leave
sub
iret
pop
ss
pusha
cvttps2pi
inc
mov
sub
push
mov
stos
mov
loope
fcom
mov
js
push
add
mov
sub
mov
dec
sbb
mov
inc
cmps
pop
xor
test
call
adc
mov
mov
call
or
ret
adc
in
or
xlat
(bad)
pop
jo
and
mov
pop
adc
fistp
sub
lea
test
bound
push
imul
or
outs
popa
inc
jmp
cs
xchg
inc
aam
lods
sbb
aad
jne
(bad)
or
pop
cmps
hlt
xor
push
or
and
adc
inc
test
sbb
mul
inc
hlt
push
and
int3
int3
arpl
je
sbb
cmps
ret
rcl
and
nop
cs
fiadd
sbb
mov
ja
sti
out
enter
push
fimul
sub
add
jle
cs
in
mov
add
push
loopne
add
push
dec
fsubr
enter
imul
inc
imul
add
add
std
add
jp
pop
or
call
or
xchg
fild
xor
xor
fwait
mov
scas
out
stos
(bad)
(bad)
iret
or
mov
inc
sub
cli
sbb
pusha
push
fwait
sbb
sbb
das
test
retf
or
fadd
out
inc
les
mov
lock
int3
psrld
les
pop
jo
mov
add
push
add
mov
sbb
adc
xor
pop
cmp
sub
or
sbb
es
das
inc
fst
mov
inc
test
cmp
inc
sbb
or
sahf
sbb
add
test
movs
or
cmp
aam
loopne
adc
jge
mov
jae
add
sbb
inc
add
xchg
push
mov
add
sub
add
push
pop
dec
cmovne
sbb
add
ss
int3
push
jl
push
fimul
cld
das
or
and
add
jle
sub
pop
xchg
push
dec
add
add
ins
mov
inc
push
xor
adc
or
xor
xchg
pop
sub
mov
js
sbb
adc
jo
mov
test
xor
xchg
or
pusha
pushf
call
xor
hlt
clc
and
and
pop
push
and
or
dec
test
push
adc
pop
sbb
and
xor
mov
mov
cmps
cwde
retf
push
mov
out
inc
inc
loope
mov
stos
ins
movzx
es
pop
sub
outs
mov
stos
fcom
or
fcomp
arpl
cmc
pop
add
mov
ror
hlt
ins
aaa
leave
inc
and
(bad)
mov
adc
clc
ins
sbb
hlt
xor
data16
adc
xor
inc
mov
arpl
push
adc
scas
jp
loop
inc
push
pop
adc
cmp
cmp
aad
sub
fmul
mov
dec
call
mov
mov
add
or
pop
sub
outs
scas
pusha
outs
add
xchg
sub
mov
add
repnz
pusha
adc
pusha
mov
mov
push
call
clc
bound
lahf
mov
arpl
out
inc
pop
add
and
iret
sbb
lods
movs
and
outs
jns
or
outs
push
rol
inc
xor
loopne
adc
sbb
dec
dec
leave
dec
push
xchg
sub
add
sbb
sub
or
aaa
scas
ins
adc
inc
pop
sub
aad
pop
in
shl
pop
pop
das
sbb
adc
inc
shl
cmp
loope
mov
fld
adc
sbb
push
call
add
lock
inc
inc
pop
pop
inc
ror
aam
pusha
loop
dec
sbb
mov
and
push
mov
pusha
inc
and
xlat
pop
sbb
fcmovnb
stc
ror
repz
push
jb
push
or
neg
cmp
xchg
add
ffreep
fmul
dec
pop
mov
in
xor
into
retf
push
call
mov
out
and
xchg
cmp
movs
sub
sar
ins
xor
dec
pop
xchg
or
sub
or
movs
xor
add
push
das
xor
repnz
adc
push
jae
pusha
imul
mov
fisub
imul
fld
daa
int3
or
outs
or
(bad)
and
push
inc
dec
jne
dec
nop
cmp
push
in
or
cmp
enter
dec
aaa
inc
test
outs
in
mov
lahf
mov
(bad)
cli
adc
push
out
outs
xchg
or
push
sbb
cmovo
inc
loopne
and
pop
lock
lock
pusha
mov
cmp
or
cmp
inc
push
pop
cmps
push
inc
sbb
mov
je
shl
sbb
je
jnp
test
inc
das
movs
push
es
sub
pop
adc
inc
adc
adc
lahf
inc
mov
inc
inc
mov
inc
inc
inc
dec
add
add
inc
add
mov
or
shl
mov
ins
adc
mov
js
mov
test
xchg
cmp
jmp
cmp
sbb
addr16
push
or
inc
dec
jno
mov
push
(bad)
pop
fbstp
or
loop
pop
sbb
nop
sbb
mov
mov
jmp
mov
(bad)
hlt
jmp
and
or
xchg
stos
hlt
xchg
cmps
inc
sbb
(bad)
daa
fmul
adc
push
inc
add
jb
add
sbb
sbb
mov
aaa
mov
or
das
(bad)
pop
test
xchg
(bad)
in
or
nop
mov
daa
lods
mov
into
pop
jle
sahf
add
or
push
or
sbb
fs
ret
sub
scas
or
js
mov
adc
push
mov
mov
int3
rol
call
xor
add
pop
loope
ret
pop
mov
push
mov
pop
sbb
jae
and
push
jge
inc
(bad)
nop
sti
outs
clc
jo
adc
add
jecxz
adc
movs
dec
and
das
jno
in
lds
sub
sbb
and
or
mov
js
sub
arpl
inc
loopne
and
push
push
xchg
push
inc
mov
adc
dec
mov
adc
and
dec
pop
js
test
mov
lea
mov
inc
or
das
nop
cmps
xor
jmp
test
adc
pop
test
pop
das
push
rol
test
pop
ror
inc
daa
jo
das
hlt
or
lock
or
or
fcomp
stos
and
ret
in
ret
data16
sub
pop
dec
jne
xor
dec
test
outs
loope
and
js
jge
pusha
rol
or
or
dec
rcr
sbb
fist
test
or
or
aas
leave
or
mov
and
pop
pop
jmp
dec
in
test
dec
sub
sub
jo
sbb
out
popa
adc
popa
comiss
jno
jo
xchg
imul
mov
xor
ror
gs
push
adc
sub
into
ja
xchg
sub
cmp
mov
mov
inc
lock
push
dec
sbb
or
mov
jo
or
or
shl
popa
adc
loopne
movs
cmps
or
pop
hlt
clc
bound
js
cmp
adc
fiadd
push
pusha
jle
push
pop
int
imul
xor
add
mov
or
or
nop
and
lahf
inc
sahf
pop
jb
jb
mov
loopne
stos
or
xchg
xchg
je
lea
mov
enter
int
call
push
or
sub
ins
je
adc
arpl
daa
push
and
mov
pop
and
adc
outs
daa
rcl
push
sbb
cld
push
enter
popa
mov
inc
and
shl
mov
or
dec
push
hlt
fist
shl
(bad)
dec
push
and
out
jae
movs
and
add
and
sbb
xchg
pushf
dec
cs
mov
dec
cmps
adc
and
call
push
(bad)
mov
stos
enter
mov
stos
stos
dec
(bad)
and
aas
popf
and
or
in
aas
js
adc
and
lods
and
jg
stos
ss
js
xor
(bad)
movs
and
daa
aas
movs
and
jb
scas
mov
ins
push
and
pusha
pop
jp
push
aad
push
enter
cmp
xchg
xchg
pop
pop
inc
jne
imul
adc
jge
and
jmp
mov
ret
adc
loopne
dec
sbb
sbb
in
ret
je
or
mov
cli
lock
rcr
pop
sub
mov
sbb
lods
sbb
xchg
mov
pop
inc
pop
(bad)
fld
rol
or
rol
ret
mov
push
cmp
in
dec
sub
mov
jne
or
xor
dec
add
mov
mov
pop
cdq
pop
inc
mov
adc
mov
or
inc
or
aam
cmp
rol
cmp
add
and
mov
cwde
or
inc
ret
mov
lods
push
int
call
add
jbe
lock
cvtps2pi
popa
les
dec
popa
neg
bound
xor
dec
and
and
clc
add
cmp
dec
imul
sbb
jmp
and
adc
dec
cwde
mov
mov
mov
sub
lods
and
inc
adc
inc
sbb
int3
or
sub
pop
std
sbb
pop
pop
call
aaa
imul
pop
pop
fmul
dec
pop
mov
or
push
inc
mov
ret
sbb
cld
mov
loope
cmc
dec
leave
in
and
sub
fnsave
movs
pop
sete
lea
jp
inc
adc
add
jp
xchg
fisttp
xchg
inc
lea
daa
jmp
cli
scas
push
je
xlat
ret
lock
test
call
cmp
scas
mov
les
bound
wbinvd
mov
mov
and
repz
ret
xchg
mov
test
cs
cmp
add
popf
aas
pop
dec
test
shr
adc
xchg
add
neg
movs
sub
mov
pop
mov
enter
sub
add
leave
mov
jae
sub
cmp
adc
mul
mov
add
movs
add
test
mov
nop
retf
movs
push
mov
cmps
add
xor
mov
aam
mov
inc
or
daa
add
push
mov
pop
call
mov
add
xchg
adc
add
sbb
(bad)
imul
scas
imul
rol
pop
xchg
or
pop
lods
imul
call
mov
cmps
inc
jmp
xchg
pop
clc
sub
pop
push
or
fwait
cwde
add
push
loope
sbb
push
loopne
sbb
pushf
cld
ror
jmp
push
push
mov
mov
out
les
fsub
or
adc
sub
push
sub
(bad)
pop
and
inc
out
add
rol
retf
loop
ja
or
cmps
fmul
add
xor
aaa
pop
jae
jp
imul
inc
mov
add
adc
cmps
jge
lods
push
xchg
mov
jle
cmps
dec
stos
dec
clc
mov
adc
add
loope
jecxz
and
(bad)
nop
and
adc
aam
in
sbb
xchg
hlt
cld
loope
rcl
push
loopne
xor
jmp
sub
and
add
sbb
or
pusha
adc
test
jl
mov
mov
inc
or
inc
sub
push
or
xchg
xchg
sbb
test
das
ror
add
mov
int3
dec
adc
aam
icebp
scas
push
sub
xor
(bad)
pop
ret
cmp
and
jmp
test
push
adc
out
sbb
ds
(bad)
fcom
sub
mov
sbb
adc
mov
push
push
xchg
inc
mov
sbb
test
pop
aaa
test
pop
mov
iret
cld
js
(bad)
loopne
clc
mov
sub
jo
mov
dec
xor
pop
sub
push
loop
mov
xlat
sub
push
pop
clc
push
or
pushf
xor
pop
push
js
shr
or
dec
popa
(bad)
es
mov
popa
(bad)
nop
xor
(bad)
pop
jecxz
nop
xchg
retf
loopne
xchg
ret
fistp
xchg
das
test
ret
cmp
fist
sub
inc
add
not
test
rcr
aas
inc
add
or
add
xor
add
and
mov
push
jnp
loopne
pop
pushf
clc
or
cmp
fs
int
push
push
lahf
pushf
xor
test
pop
dec
xor
xchg
les
xchg
hlt
sbb
sbb
mov
daa
cmps
add
es
loopne
adc
aam
in
shl
inc
xchg
fadd
pop
pop
clc
pop
cmp
(bad)
or
mov
pop
mov
xor
sub
dec
inc
test
mov
add
cmps
push
xchg
cmp
sub
xchg
sar
cmp
pop
mov
clc
inc
inc
push
jo
ret
mul
adc
cmp
or
or
daa
pop
xor
retf
ret
retf
mov
add
pop
mov
lea
push
cmp
xchg
adc
mov
dec
call
xchg
loopne
stos
and
ins
popf
mov
mov
jae
sbb
inc
cdq
inc
mov
cmps
mov
js
or
mov
sbb
lds
sbb
add
sbb
push
shl
nop
mov
js
aaa
push
cmp
sub
scas
push
clc
das
sub
iret
inc
shr
pushf
add
sti
or
sbb
fstp
jno
or
or
nop
fimul
(bad)
push
and
or
add
out
fsubr
and
clc
push
aas
test
xchg
xchg
clc
leave
push
hlt
and
push
ror
mov
dec
div
or
xlat
inc
adc
inc
inc
jns
gs
sub
push
sti
pop
xor
jle
adc
shr
cs
push
in
mov
xor
cmp
mov
and
adc
rcr
bound
xchg
(bad)
pop
sbb
stc
mov
icebp
ja
push
cwde
mov
add
fs
or
or
and
in
hlt
clc
in
mov
loop
call
loopne
add
mov
sbb
xchg
test
ja
lock
dec
sub
outs
add
adc
mov
lods
aam
inc
js
fdivr
jmp
push
cmp
fadd
retf
gs
sub
mov
push
mov
add
add
add
mul
out
push
pop
and
mov
dec
dec
jne
jmp
mov
pushf
mov
mov
sub
cmp
add
push
mov
xchg
int
inc
cmp
pop
dec
ret
jae
dec
test
arpl
test
xor
lea
jmp
push
adc
pop
aad
push
loopne
push
stos
xchg
dec
pop
lds
fistp
xor
push
xchg
mov
cmp
mov
shl
mov
add
enter
cmp
mov
add
int
or
mov
push
jg
out
inc
inc
in
push
pop
jg
bound
push
(bad)
jbe
sbb
pop
rcr
xchg
sub
and
cmp
sub
fdivr
addr16
sbb
sub
test
(bad)
fiadd
jmp
mov
jmp
ret
add
or
enter
push
cmp
cmp
mov
jmp
or
adc
inc
pop
pop
js
dec
jmp
inc
push
mov
pusha
inc
(bad)
fstp
call
sti
lea
adc
adc
inc
pop
jl
sub
push
push
sti
mov
jne
add
(bad)
mov
cmps
pop
les
or
pop
cdq
jmp
inc
and
outs
test
iret
pusha
loope
sub
push
xlat
das
test
ret
add
fadd
out
mov
jns
push
mov
xor
lock
imul
mov
jo
mov
mov
dec
jno
sub
push
push
scas
pop
mov
cmps
cld
dec
jl
icebp
les
add
add
(bad)
lock
sub
or
adc
out
cmp
sub
aad
push
xchg
je
ins
jmp
(bad)
daa
or
xchg
jo
cli
jbe
push
jl
sub
adc
pop
push
adc
mov
mov
pop
pop
adc
dec
cmp
inc
xchg
scas
pusha
pop
mov
dec
adc
(bad)
push
push
ds
sbb
jmp
cli
fwait
mov
cmp
je
adc
cdq
jbe
pop
add
or
pop
or
push
dec
daa
push
les
mov
xchg
inc
and
dec
and
aas
cmp
inc
push
in
or
lock
cs
mov
sbb
dec
fistp
mov
mov
and
and
adc
push
ror
dec
out
add
cmp
sub
imul
push
cs
sbb
ins
test
mov
xchg
or
call
ret
test
loope
add
pop
dec
std
add
cdq
sbb
scas
mov
pop
je
push
les
arpl
adc
shr
movs
ss
jmp
push
sub
jo
ret
sahf
fstp
pop
and
pop
daa
fs
or
cmp
sbb
in
movs
push
cmp
in
adc
in
or
xor
mov
push
pop
push
(bad)
mov
bound
out
xor
and
pop
cmps
xor
cmps
jecxz
jmp
push
push
dec
mov
daa
je
(bad)
test
aaa
adc
dec
xchg
mov
lock
cmp
call
lds
xor
inc
push
adc
loopne
pop
jl
inc
div
sbb
sbb
out
stos
add
or
adc
inc
push
mov
mov
rol
nop
inc
mov
(bad)
cmps
sbb
or
and
icebp
mov
inc
inc
pop
jne
sbb
iret
js
ret
shl
xor
jmp
out
add
add
(bad)
jle
add
mov
adc
loopne
inc
lds
push
sbb
jns
inc
add
pusha
pop
les
pop
test
rol
inc
dec
ds
inc
loop
sub
inc
jmp
rcl
xlat
jne
inc
fst
dec
and
and
movs
add
in
jp
xchg
pushf
add
sahf
in
dec
jecxz
pusha
pop
or
(bad)
add
cmp
in
mov
stos
inc
mov
or
inc
(bad)
lahf
daa
hlt
push
inc
mov
add
sbb
test
and
imul
popa
jecxz
xor
push
test
and
mov
addr16
xor
or
push
dec
inc
mov
jg
and
shl
movs
add
lock
jmp
jmp
mov
push
xor
sub
lods
repz
movs
pop
sbb
leave
add
dec
push
sbb
fcomi
sub
aaa
in
xor
pop
addr16
clc
mov
inc
sbb
nop
sbb
rol
lahf
ret
pop
jae
lahf
in
sbb
push
mov
fcomp
add
pop
ret
mov
dec
push
dec
dec
cld
dec
out
adc
test
in
inc
adc
out
sbb
ror
jmp
jp
cmp
add
ins
mov
cmp
sar
jmp
lea
cmp
rcr
and
dec
or
or
pusha
xchg
dec
jns
xchg
sbb
xchg
add
sbb
pop
inc
mov
nop
add
(bad)
movs
inc
or
pop
das
test
sbb
sbb
adc
cmp
sbb
jno
inc
adc
in
add
push
fdivr
xor
fwait
mov
sub
call
scas
dec
add
jno
adc
jns
push
ret
shl
adc
pop
or
push
pusha
and
push
dec
call
das
pop
adc
nop
dec
jns
in
mov
push
xchg
add
xchg
mov
xor
(bad)
mov
dec
cmp
pop
leave
add
or
adc
dec
xlat
loopne
cmp
idiv
cmp
push
sbb
cmps
adc
xchg
fsubr
test
add
add
out
sub
mov
dec
add
jb
add
dec
xchg
or
cdq
lock
push
push
inc
cdq
pop
push
add
add
or
push
mov
les
lods
dec
scas
or
xor
cmps
push
fiadd
xor
pop
aaa
out
push
dec
cli
mov
dec
adc
mov
lock
les
dec
icebp
push
push
and
adc
jg
adc
cld
xchg
sub
inc
loop
xor
add
xlat
mov
xchg
add
into
jl
push
jp
adc
pushw
aam
or
pusha
mov
cmp
adc
push
inc
pop
and
jo
push
or
mov
or
shl
and
sbb
add
in
jge
xchg
aam
fs
sub
or
inc
add
adc
xor
add
mov
cmp
xor
nop
mov
ja
pop
adc
enter
pop
push
inc
lock
es
pop
push
push
mov
pop
pop
cdq
adc
je
rcl
sbb
sub
and
pop
je
fsincos
stos
test
mov
jnp
push
out
punpcklwd
loop
sbb
xor
add
dec
xor
loope
sub
pop
push
or
inc
add
jne
je
xlat
jge
adc
jb
scas
add
call
inc
cmps
call
pushf
cwde
div
push
dec
lds
mov
inc
into
push
jnp
xor
or
loopne
jbe
or
sub
mov
or
add
adc
mov
das
push
js
pop
mov
ret
ret
push
sub
dec
bound
repnz
loope
jo
adc
retf
data16
(bad)
pop
iret
data16
or
in
add
out
call
js
pop
loop
data16
pushf
adc
inc
aaa
pop
add
mov
cmp
outs
or
setg
pop
inc
add
sbb
fst
(bad)
push
sub
scas
addr16
lods
mov
add
mov
pushf
stos
inc
adc
push
repz
pop
inc
and
aad
out
adc
xchg
ror
daa
stos
or
jmp
dec
hlt
enter
inc
jne
iret
sub
lea
dec
pop
dec
rcl
mov
out
mov
les
inc
aas
xchg
dec
push
mov
neg
test
mov
mov
sbb
mov
jb
pop
rsm
mov
daa
ret
xchg
popf
mov
inc
push
lea
daa
push
cmp
lea
nop
pop
daa
cdq
imul
xchg
sub
cmp
mov
enter
aad
and
push
cmp
xchg
pop
adc
sbb
outs
sub
jmp
dec
sub
mov
ins
mov
sbb
jmp
pop
push
inc
or
add
push
cli
and
inc
je
push
push
inc
mov
pop
(bad)
xchg
fiadd
nop
cmp
dec
push
jmp
add
sbb
pop
cmps
push
icebp
dec
js
push
dec
retf
adc
lods
sub
sbb
jo
pop
sti
adc
std
xchg
cmp
call
sbb
or
icebp
xchg
ret
or
ret
push
xchg
jne
pop
sbb
sbb
ret
sbb
jg
pop
push
push
inc
jbe
les
mov
or
push
jle
push
test
jle
(bad)
(bad)
dec
cli
test
out
inc
and
cld
das
or
pop
pushf
rol
call
pop
adc
pusha
xchg
ret
adc
pop
in
pusha
rcr
xchg
adc
xor
je
shr
cs
mov
shl
test
xchg
cld
daa
sub
add
cmp
inc
push
ss
ret
test
stos
sub
je
or
pusha
and
(bad)
fcmovb
loopne
pusha
ret
mov
push
sub
pop
xlat
les
adc
scas
or
daa
inc
cmps
adc
xlat
mov
mov
test
pop
fistp
pushf
and
xor
aam
rcl
sub
and
jo
mov
and
cmovge
lods
jmp
xor
push
xchg
pop
test
and
pushf
call
shl
call
es
jnp
cmp
mul
je
repz
pop
jmp
and
mov
mov
pop
cmps
pushf
(bad)
rol
and
nop
xor
cmp
rcl
jle
pop
mov
or
mov
add
add
mov
(bad)
push
sbb
jno
jo
mov
mov
or
dec
dec
adc
daa
mov
pop
movs
jb
dec
and
and
xchg
cmp
mov
daa
inc
push
push
aas
mov
cmps
push
push
int3
fsub
int3
ret
and
xor
jbe
mov
sbb
push
pushf
xchg
sub
mov
sub
pop
xchg
lods
test
xor
and
inc
enter
scas
loopne
mov
pushf
pop
sub
adc
das
inc
xchg
dec
pop
add
mov
lods
js
imul
icebp
dec
push
rcr
shl
push
push
cmp
(bad)
sub
push
jl
jne
xor
xchg
mov
movs
mov
aas
adc
push
lahf
addr16
add
in
cmc
rcr
pop
rcl
ss
mov
inc
pop
retf
cmp
mov
bound
(bad)
bound
dec
pop
pop
les
mov
add
ret
push
inc
rol
shr
js
out
mov
push
inc
mov
or
in
xchg
(bad)
clc
int
xor
addr16
ins
push
rcr
cmp
push
or
or
push
dec
mov
js
sbb
inc
pusha
mov
xor
dec
add
add
jae
lock
push
or
clc
mov
jge
push
add
sub
xor
cld
inc
movs
aaa
pop
sbb
xchg
cs
aas
int
arpl
sub
sbb
or
aad
push
or
pop
sbb
inc
sub
add
imul
arpl
cmp
int
aas
lock
sbb
jmp
xor
sbb
add
das
not
or
xor
or
cwde
std
or
shl
mov
retf
mov
test
jne
aaa
jecxz
icebp
adc
dec
sbb
push
add
add
push
int
or
aaa
push
mov
fs
sbb
cmp
inc
or
mov
pop
pushf
add
cmp
inc
xor
sbb
push
mov
psllw
or
gs
mov
add
cmova
adc
ja
ins
shl
adc
mov
mov
aam
out
sbb
xchg
fwait
loopne
inc
(bad)
inc
rol
mov
test
push
mov
pop
jmp
rol
mov
movs
sbb
add
inc
jg
sub
jmp
inc
dec
ret
mov
scas
jle
mov
push
in
cmp
push
push
xchg
pop
mov
pop
xchg
mov
inc
pop
ins
mov
mov
pop
ja
sbb
popf
sar
or
les
fbld
enter
or
xchg
cld
adc
(bad)
jmp
gs
mov
or
push
in
add
push
xchg
sbb
xchg
lods
inc
call
add
clc
fisttp
out
sub
stos
cmp
frstor
test
xchg
test
test
jle
retf
add
push
(bad)
jo
dec
push
add
xor
cmp
cmc
loope
das
nop
pop
and
fwait
mov
or
pop
add
into
jmp
shl
sbb
and
mov
(bad)
movs
fistp
mov
pop
and
mov
mov
pop
rol
xchg
mov
inc
rol
push
enter
adc
ret
mov
jno
dec
sub
cmps
into
pop
nop
add
out
xor
push
cmps
inc
outs
xchg
or
mov
lea
ret
push
addr16
addr16
jne
add
nop
adc
addr16
shl
cmp
xor
adc
dec
push
jns
ja
pmulhw
adc
pop
jo
popa
mov
ins
jle
pushf
cmp
pop
and
(bad)
ss
jne
or
or
push
call
adc
xor
adc
mov
mov
add
mov
(bad)
push
and
adc
ror
sbb
mov
test
in
push
aas
into
aas
push
add
ja
adc
push
inc
inc
pop
cld
xchg
stos
stos
bound
mov
(bad)
adc
adc
mov
or
fistp
inc
sbb
lea
mov
jno
or
in
rcl
cmp
repz
cmp
adc
jecxz
adc
jo
imul
and
jo
inc
mov
call
inc
push
jl
or
cmp
mov
icebp
and
push
test
test
cmp
adc
sbb
aaa
inc
xchg
or
mov
add
inc
imul
sbb
pop
cmp
dec
imul
ds
push
jmp
or
repz
sub
aad
adc
mov
or
out
adc
inc
cmp
dec
adc
jg
nop
pop
sbb
adc
add
sub
pop
jg
add
popa
mov
scas
inc
inc
inc
pop
imul
fstp
push
ss
jg
or
pushf
call
scas
pop
pop
scas
sbb
xchg
xor
add
jg
inc
xchg
out
push
enter
out
aaa
pushf
inc
ret
test
cs
ins
sbb
push
inc
aaa
dec
aaa
mov
cdq
ds
pop
adc
loopne
rcl
add
fcomip
push
mov
xchg
or
push
add
inc
or
or
scas
retf
test
imul
adc
das
addr16
pop
outs
add
sub
and
rcl
fwait
jns
jmp
xor
add
inc
adc
imul
sub
mov
mov
xchg
(bad)
outs
pop
xchg
das
stos
add
sub
push
sbb
pop
or
stos
sub
mov
add
jmp
add
inc
dec
inc
xor
add
or
sbb
outs
inc
sub
add
sbb
push
outs
jae
test
scas
mov
mov
mov
ret
xchg
jne
int
mov
addr16
call
adc
popa
retf
lahf
outs
mov
loope
outs
jg
pop
aam
fisubr
lock
xor
xlat
add
or
out
adc
push
imul
fild
xor
sbb
fld
call
pop
mov
inc
adc
jo
outs
pop
pop
popa
push
outs
test
fs
jb
fstp
ret
data16
push
out
and
bound
adc
dec
punpcklwd
sbb
push
out
adc
arpl
fistp
je
xor
and
xor
pusha
xor
clc
outs
jl
fucomi
and
pop
add
or
outs
inc
ret
add
outs
push
call
ss
dec
outs
inc
imul
pop
xor
frstor
in
mov
fcomp
mov
cmpps
mov
or
inc
push
inc
jns
fisubr
jae
mov
inc
pusha
mov
imul
mov
outs
xchg
pop
je
jp
dec
add
outs
adc
adc
outs
xor
or
fild
xor
test
push
jae
push
pop
add
pushf
(bad)
(bad)
ja
add
cmp
mov
push
mov
pop
cmp
inc
test
mov
adc
das
test
inc
and
add
dec
or
push
xor
mov
ins
in
adc
je
fcomp
test
popa
add
into
scas
outs
and
outs
mov
jb
rol
pop
adc
mov
push
in
mov
fisub
inc
push
inc
movs
or
lods
neg
add
xor
(bad)
and
mov
push
rcr
add
inc
push
push
sbb
add
cmp
cmp
cmova
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
xor
xor
cmp
cmp
xor
cmp
cmp
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
and
and
cmp
cmp
and
cmp
cmp
daa
sub
sub
cmp
cmp
sub
cmp
cmp
das
adc
adc
cmp
cmp
adc
push
cmp
cmp
pop
sbb
sbb
cmp
cmp
sbb
push
cmp
cmp
pop
add
add
cmp
cmp
add
push
mov
(bad)
hlt
int3
ja
je
pop
das
cmp
fsubrp
push
or
inc
and
xor
fstp
std
ja
or
or
loope
sar
je
ins
dec
gs
jo
pushf
dec
push
cld
inc
cmps
inc
cmp
mov
or
inc
jns
push
push
jb
dec
pushf
mov
sbb
push
xor
push
jl
push
pop
xor
pop
or
mov
pushf
enter
pusha
dec
pop
fsub
jo
data16
jo
xor
add
inc
and
imul
adc
test
pop
aaa
sub
loopne
mov
or
das
inc
movs
jns
xor
(bad)
stc
sub
minps
adc
dec
loopne
leave
add
mov
out
mov
dec
mov
jnp
lea
cmp
jge
lea
push
mov
sub
cmp
cmp
mov
sar
and
fist
or
mov
push
or
or
int
pusha
int
arpl
add
rcl
mov
outs
mov
mov
pop
sub
push
push
(bad)
icebp
repz
adc
mov
iret
repz
push
mov
inc
jnp
lock
add
add
cmp
ds
ds
fadd
dec
hlt
mov
cmp
ins
mov
(bad)
wbinvd
or
mov
inc
outs
arpl
out
inc
clc
outs
addr16
add
push
xchg
int
retf
les
inc
fisttp
out
popa
js
jo
pusha
sbb
dec
bound
aad
into
jae
inc
jbe
push
test
dec
xor
test
btr
add
and
or
les
fwait
rol
fwait
xor
outs
bound
pop
pop
jne
clc
add
(bad)
das
and
pop
in
inc
jns
lods
call
test
movs
lods
mov
out
adc
js
mov
scas
sahf
xor
push
sbb
mov
rcl
jmp
jae
jbe
mov
les
jnp
jl
sbb
jnp
inc
jg
xchg
xor
pusha
lds
and
jl
in
and
mov
push
scas
cmp
push
mov
and
inc
add
mov
imul
xchg
xchg
fild
pop
lods
pop
xor
addr16
nop
pop
je
pushf
pop
or
add
addr16
mov
outs
fs
xchg
xlat
pop
sub
pop
push
push
jbe
nop
push
and
pop
sub
xor
add
xor
cmp
inc
dec
push
jbe
dec
into
add
push
ss
fild
xor
or
outs
adc
or
jg
in
jmp
cmp
push
push
outs
or
jg
mov
gs
out
sbb
add
pop
dec
fadd
jecxz
and
(bad)
stc
pop
iret
pop
adc
int3
fist
and
sar
add
dec
dec
imul
cmp
je
or
arpl
push
push
jo
je
dec
mov
jne
mov
jg
mov
xor
xor
rol
ss
dec
and
xchg
mov
sbb
or
mov
cmp
mov
je
sbb
gs
or
mov
sbb
xchg
add
mov
rol
xchg
jl
xor
add
cs
or
sbb
pop
test
or
or
mov
dec
inc
jl
lds
mov
xor
add
ja
push
or
or
ja
add
adc
pop
inc
jne
data16
(bad)
retf
xchg
inc
inc
sbb
sbb
mov
les
xchg
add
xlat
pop
mov
sbb
dec
jne
test
jne
movzx
jmp
push
dec
je
push
sbb
jmp
mov
pop
or
stos
sbb
add
aam
imul
daa
jbe
adc
jne
pop
cmp
nop
sub
push
xor
sbb
mov
mov
mov
pusha
ror
mov
ins
fisubr
jecxz
xchg
shl
lock
fsub
dec
jg
add
add
add
sub
sti
add
jne
cmp
addr16
or
sub
test
adc
sti
mov
data16
mov
jmp
sbb
mov
add
inc
mov
inc
mov
dec
je
or
xchg
mov
add
scas
push
xchg
push
cmp
and
popf
les
retf
cmp
sbb
and
inc
out
sbb
xor
inc
je
ret
xchg
icebp
ss
test
clc
das
push
test
dec
test
mov
rcr
push
enter
out
xchg
test
jno
repnz
test
test
mov
pop
cdq
or
dec
xchg
in
test
inc
push
sbb
fist
and
sub
ret
sub
xchg
iret
pop
adc
mov
pop
add
sbb
cmp
add
jg
rcr
inc
movs
jg
data16
adc
repz
ds
jne
jg
xor
inc
hlt
mov
div
lock
cmc
sub
add
ins
mov
repz
cmp
and
cmp
cmp
xchg
xor
push
mov
ret
jb
popf
xor
add
mov
dec
push
sar
into
sbb
clc
xor
jne
outs
xchg
lock
mov
popf
fcom
cmps
sbb
shr
push
pusha
clc
cwde
fiadd
(bad)
adc
push
sbb
sbb
and
loop
inc
xchg
add
jne
or
mov
inc
js
adc
or
fistp
add
mov
and
sbb
jmp
outs
adc
aaa
and
xor
test
cmps
das
push
add
add
push
dec
call
mov
std
out
dec
push
sti
dec
test
jl
inc
test
aaa
lea
(bad)
sub
call
mov
sub
fadd
cmp
mov
pop
inc
hlt
pop
mulps
and
add
jne
mov
stos
xor
and
xchg
add
(bad)
jmp
int
into
jmp
movs
xchg
add
mov
pop
xlat
sub
mov
cmp
ja
mov
test
pop
sub
cwde
jl
push
in
jg
shl
movs
ret
rol
and
push
and
fimul
shr
dec
arpl
ret
push
xor
push
cmp
or
retf
add
pop
dec
cmc
mov
cmp
ret
sub
mov
or
mov
scas
in
mov
mov
js
add
mov
jmp
sbb
adc
jmp
je
loopne
dec
xor
outs
jmp
xor
dec
mov
mov
inc
sub
fbstp
retf
ss
lea
cmp
adc
scas
inc
cmps
jg
jmp
addr16
add
pusha
mov
pop
xor
popa
and
loop
mov
mov
jns
stos
mov
add
xchg
mov
lock
or
add
mov
enter
sbb
pop
mov
sbb
push
into
mov
sbb
mov
imul
push
loop
mov
adc
xchg
fsub
inc
outs
dec
iret
es
ja
sub
add
outs
outs
ret
or
sub
jle
sub
inc
push
or
push
or
or
popa
jns
mov
adc
add
jno
push
push
mov
cmp
xor
mov
xchg
(bad)
loopne
inc
push
call
out
add
cmp
xchg
outs
jmp
cmp
stos
xlat
add
jbe
xchg
pop
cmp
or
nop
mov
xchg
clc
(bad)
jne
or
mov
lods
pop
add
push
xchg
xor
and
sbb
or
inc
sbb
dec
icebp
sub
addr16
or
or
cmp
jb
or
jbe
jb
xor
pop
test
and
and
in
dec
loopne
sbb
cmp
mov
add
mov
fcomp
mov
push
sahf
xor
ja
or
push
sbb
sahf
ret
sbb
pusha
(bad)
and
push
sbb
dec
adc
js
lds
inc
(bad)
js
push
dec
enter
sub
lods
add
pop
hlt
mov
mov
pop
out
adc
aas
add
xchg
add
mov
mov
popa
and
or
add
push
scas
mov
dec
fadd
leave
add
gs
or
xor
push
or
movs
add
mov
fucomip
push
retf
mov
inc
mov
rol
inc
sahf
add
fmul
add
add
das
pop
dec
inc
call
dec
add
push
sub
sbb
inc
xor
idiv
inc
jbe
or
data16
loopne
jo
mov
dec
push
(bad)
and
rcr
sbb
inc
mov
mov
daa
and
and
xor
bts
and
adc
or
jno
pop
add
and
sub
int
dec
pop
mov
div
pop
adc
je
lea
cdq
sbb
mov
cld
pop
mov
add
sub
jl
inc
outs
adc
call
inc
idiv
or
ja
inc
dec
jne
jo
pushf
mov
shl
inc
rcl
mov
mov
push
jb
and
dec
fwait
sbb
test
lods
test
and
and
shl
sbb
adc
loope
mov
loopne
push
mov
test
mov
add
inc
cmp
sub
inc
pop
pusha
pusha
sbb
dec
test
mov
nop
out
cs
add
aaa
push
adc
or
into
sub
jne
pusha
daa
mov
je
mov
cmp
xchg
popa
sub
out
add
and
cmp
xor
popf
rcl
and
call
arpl
in
arpl
xchg
adc
mov
fs
in
cmp
retf
xchg
inc
pop
or
jo
lea
hlt
mov
jle
pop
mov
mov
cmp
je
sub
mov
and
jb
cmps
test
sub
push
jb
push
out
sub
fcmovu
jge
cmp
add
(bad)
int
test
mov
jmp
sub
lahf
dec
sub
cmp
sub
lods
ja
or
(bad)
movs
and
jbe
mov
or
add
test
das
jmp
jne
add
call
jnp
call
cmp
je
push
jmp
inc
dec
add
and
mov
mov
shl
mov
inc
or
rcl
push
ins
ja
hlt
jb
xchg
and
mov
add
jmp
(bad)
mov
sahf
jge
repz
(bad)
mov
dec
(bad)
lea
mov
dec
mov
cmp
jne
adc
or
xor
add
jle
mov
mov
xor
icebp
jmp
loop
sub
mov
sub
inc
or
ins
or
mov
fwait
loopne
jl
cmp
xor
test
test
pop
xor
std
xor
xchg
movs
jae
mov
add
inc
or
data16
movs
leave
test
pushf
imul
sbb
stc
dec
sbb
pop
fadd
sub
or
pop
dec
mov
fild
ficom
jnp
cmp
mov
cmp
shr
nop
mov
mov
and
mov
adc
imul
sbb
dec
loopne
add
and
pusha
icebp
bound
and
jnp
adc
mov
mov
add
jecxz
ror
(bad)
jecxz
cmp
xchg
test
cmp
add
loopne
push
and
(bad)
aas
add
and
adc
lock
or
push
pushf
xchg
pop
(bad)
call
sbb
out
movs
ret
cs
or
mov
popf
mov
mov
dec
outs
enter
sub
fsub
lea
mov
add
or
lock
xchg
icebp
adc
loopne
pop
loopne
icebp
call
cmp
inc
leave
ins
les
mov
mov
mov
test
or
inc
sbb
mov
sbb
pop
mov
ret
ror
(bad)
jge
inc
test
mov
or
call
pop
push
test
add
xor
mov
xchg
call
adc
add
dec
mov
inc
arpl
sti
hlt
fwait
cmp
verr
sar
jle
jge
inc
jo
(bad)
push
sub
std
call
push
or
pop
cmp
jbe
jmp
jle
movs
or
cmp
inc
sbb
xchg
jp
and
sub
(bad)
jg
shl
inc
xchg
cmp
je
inc
dec
jne
ds
test
lahf
cmovge
lea
sub
sub
pop
clc
jb
inc
xchg
and
mov
push
dec
or
sbb
jne
dec
jne
jmp
sbb
icebp
mov
and
pop
add
into
sbb
cdq
push
lds
out
clc
or
mov
push
js
in
je
jb
mov
mov
cli
ja
(bad)
in
clc
jle
or
mov
(bad)
outs
xor
adc
push
jae
sbb
aam
ins
loopne
sub
sahf
pause
mov
or
inc
neg
xchg
jmp
inc
jmp
es
cli
xor
mov
dec
mov
lock
add
add
in
cwde
cmc
mov
add
ins
mov
inc
inc
cmc
pop
adc
repz
jo
enter
sbb
mov
xor
aam
and
push
xchg
das
add
in
test
scas
xlat
inc
adc
aas
jb
into
cmp
jbe
test
push
jle
mov
sbb
ins
push
sub
add
xor
jbe
scas
jae
jg
clc
mov
dec
call
test
retf
xchg
mov
xchg
or
xor
cmp
jl
sbb
adc
mov
iret
push
sbb
xor
call
and
ja
js
jne
jne
fld
sbb
nop
shr
mov
fs
das
add
jae
add
mov
jo
push
mov
int
jo
fadd
pop
(bad)
mov
repz
mov
sub
or
sbb
(bad)
pop
pop
cmps
shr
xor
in
pushf
or
adc
inc
loopne
xor
loopne
or
in
cmp
mov
pop
and
dec
lea
js
in
pop
popf
out
ror
or
pop
lock
lods
pop
cmp
mov
popf
fcomp
scas
lock
loopne
neg
pop
fdivr
(bad)
mov
push
xchg
adc
dec
sub
lahf
daa
dec
arpl
mov
sbb
push
inc
daa
adc
fs
push
mov
out
popa
in
or
leave
dec
daa
dec
out
mov
(bad)
bound
popa
mov
adc
daa
xchg
or
dec
jns
fbld
mov
es
mov
(bad)
int3
retf
daa
dec
sub
fdivr
out
dec
inc
jbe
push
jle
les
std
inc
mov
mov
in
add
dec
mov
sbb
js
pop
lea
fisubr
pop
(bad)
fisub
mov
jmp
mov
mov
add
xor
sub
sti
cmp
add
ss
das
bound
xchg
push
mov
and
push
mov
call
aaa
nop
pop
cld
cwde
adc
xchg
cmp
outs
sbb
or
jb
cmp
retf
leave
in
adc
sbb
daa
xchg
mov
cmp
sub
imul
rcl
push
es
pop
fsub
les
xchg
retf
in
test
or
push
es
hlt
pusha
shl
dec
sub
and
inc
and
add
or
leave
gs
adc
jb
adc
sbb
sub
fsub
retf
hlt
sub
fs
sub
xor
sbb
test
sub
mul
rcr
or
imul
mov
mov
loopne
outs
jb
inc
or
int3
or
fld
pop
or
add
fcomp
mov
aas
adc
add
sbb
mov
and
imul
scas
xchg
add
push
xlat
scas
adc
or
push
jae
fcom
dec
or
push
sbb
aas
pop
add
jne
and
cmp
(bad)
div
aas
add
pop
packsswb
das
or
cmps
add
adc
add
mov
das
ins
out
add
fimul
das
push
jae
loopne
add
je
ins
shl
loopne
gs
xlat
add
aaa
xlat
add
aas
fadd
add
push
ret
aaa
lahf
aaa
fsub
sbb
adc
rcr
test
or
xlat
jb
dec
in
or
inc
call
lea
cld
add
and
mov
adc
jo
stc
lea
ret
repnz
push
cld
mov
hlt
lods
rcl
call
call
add
test
cmp
call
movzx
mov
mov
mov
and
and
sub
sub
adc
cmp
or
sub
or
pop
fcom
fcom
mov
outs
add
test
call
mov
fist
outs
(bad)
nop
adc
and
mov
dec
add
outs
push
outs
add
sub
lahf
jmp
daa
push
push
and
int
push
cs
adc
sbb
or
xor
aaa
(bad)
and
test
jns
adc
in
in
dec
push
data16
mov
jmp
or
pop
enter
mov
mov
mov
pop
das
daa
or
cmp
or
cmps
sbb
xchg
das
test
pop
cmp
jmp
sub
sbb
add
sbb
sub
pop
das
push
ret
enter
fsubr
clc
or
and
sub
aam
or
repnz
(bad)
push
xchg
fst
mov
inc
push
imul
test
or
sbb
cmps
dec
test
mov
add
add
sub
mov
xchg
pop
mov
push
outs
lea
cmp
mov
ror
popf
mov
dec
pcmpgtd
out
add
jmp
and
push
mov
inc
clc
dec
and
sub
imul
cmp
cdq
idiv
push
adc
ret
sbb
je
xchg
or
fstp
fwait
test
loopne
cmp
fsub
and
mov
es
mul
pusha
or
(bad)
call
rcl
sbb
jne
mov
test
(bad)
dec
add
push
int3
and
add
mov
test
rcl
fs
cmps
adc
clc
and
lea
ss
lds
lods
test
int3
pop
adc
out
fsubr
jmp
mov
hlt
mov
mov
test
sub
inc
push
ins
mov
jne
or
mov
push
into
cmp
retf
mov
sbb
mov
jmp
mov
pop
xchg
adc
and
or
hlt
ret
add
sub
inc
test
mov
dec
jp
ret
or
mov
movs
pusha
pop
bound
or
xchg
mov
push
data16
inc
ret
jecxz
rol
push
sbb
in
sub
gs
sbb
add
sub
in
cmps
ins
shl
inc
inc
stos
sub
ss
add
xchg
in
mov
cld
cld
mov
(bad)
leave
add
push
xor
inc
lahf
mov
fcmovnb
sbb
pop
mov
or
(bad)
push
sub
sbb
sbb
or
push
or
push
add
gs
and
jmp
into
ror
mov
addr16
sar
dec
les
jecxz
or
mov
outs
mov
(bad)
ret
mov
sub
lods
test
mov
pop
xchg
retf
ficom
mov
sub
mov
xchg
jo
mov
add
lock
hlt
add
inc
or
js
test
xlat
lods
cmp
(bad)
fiadd
xor
arpl
adc
push
(bad)
jo
div
or
pop
popf
cmp
mov
mov
loope
adc
mov
add
or
push
retf
add
(bad)
and
lods
aad
lods
add
out
cli
push
int3
push
xor
mov
add
clc
hlt
push
cmp
test
or
mov
pop
fnstenv
inc
adc
in
inc
inc
xchg
sar
lea
es
loop
sub
and
xchg
inc
es
iret
and
push
jmp
and
push
(bad)
add
push
ret
push
jbe
mov
mov
rcl
scas
push
jg
mov
jg
rcl
scas
sbb
add
and
leave
jge
outs
call
scas
iret
lods
shl
mov
aas
xchg
mov
push
cmp
sbb
adc
ja
adc
aam
movs
sahf
xchg
jns
pop
inc
mov
ret
or
in
adc
or
adc
mov
pop
pop
push
loopne
scas
mov
push
or
cmp
outs
rcl
and
sub
push
add
mov
jne
or
mov
jp
daa
pusha
jo
sbb
pop
xchg
xchg
rol
add
push
nop
out
add
sar
imul
xchg
sub
outs
xor
sub
adc
inc
cld
imul
sti
movs
mov
mov
pusha
stos
shr
leave
jp
push
and
imul
add
das
add
adc
xor
or
mov
adc
aam
add
not
lods
lods
and
and
daa
inc
test
mov
pop
or
add
push
cmp
lock
mov
jge
pop
cmp
xlat
xor
stos
jbe
add
pop
dec
sub
test
or
xor
add
mov
imul
adc
inc
add
mov
test
inc
loopne
sbb
fisttp
adc
adc
dec
adc
xor
pusha
add
push
xor
push
jb
je
add
push
gs
sub
sub
add
adc
sub
in
(bad)
cmp
jle
in
push
and
dec
pop
sub
jl
inc
lea
mov
movzx
or
jne
adc
mov
xchg
(bad)
push
icebp
pop
mov
jne
lahf
mov
test
mov
pop
dec
add
cmovo
ss
in
test
sub
jno
push
adc
push
jbe
adc
cmp
int
and
aad
clc
add
nop
add
scas
int
inc
sub
call
pop
adc
ror
push
into
retf
js
jl
pop
cmps
rol
test
push
adc
xor
cmp
jge
mov
or
inc
nop
push
push
or
jne
cmp
add
add
push
jo
std
pop
ret
(bad)
call
or
push
inc
(bad)
(bad)
jmp
inc
dec
jne
pusha
lahf
rcr
jno
std
mov
pushf
push
lods
dec
xchg
ins
inc
add
jp
cmp
adc
aam
sahf
push
pop
shl
pusha
daa
cmp
rcl
xor
(bad)
test
jne
dec
xchg
pushf
adc
stos
inc
lds
mov
mov
jnp
push
inc
cmp
mov
rep
add
mov
push
out
add
inc
and
and
mov
mov
add
jno
pop
adc
sub
out
rol
(bad)
cmp
(bad)
dec
addr16
dec
cmps
sti
int
nop
imul
test
adc
mov
xchg
loopne
ret
fwait
mov
loop
js
push
test
xchg
sbb
pop
jg
ins
xor
test
je
mov
inc
js
pop
sbb
mov
(bad)
lea
ficom
push
ja
addr16
mov
dec
mov
dec
and
lock
lods
mov
shr
or
mov
inc
mov
sbb
push
lock
test
push
outs
inc
add
jg
leave
adc
jmp
sahf
sbb
je
sub
je
jmp
and
cmp
outs
test
add
pop
push
add
jb
int3
in
out
inc
push
fisubr
mov
and
jne
cmp
shl
or
test
sbb
cmps
dec
xor
es
jo
dec
jge
xchg
or
(bad)
data16
(bad)
xchg
add
cld
test
test
cmp
bnd
icebp
int
paddsb
push
lahf
test
mov
jge
dec
js
adc
enter
test
and
inc
inc
jae
adc
clc
pop
and
adc
add
imul
mov
cmps
ins
out
jb
sub
cmp
imul
jbe
jle
sbb
cmp
or
mov
push
xchg
jo
xchg
jno
sbb
pop
lock
sbb
push
push
sbb
(bad)
push
mov
cmp
out
inc
iret
add
(bad)
arpl
pusha
mov
retf
sbb
fisub
add
xor
js
add
call
pushf
data16
ins
iret
add
sbb
and
jae
pop
in
xor
call
adc
or
push
fstp
jmp
call
push
std
dec
or
xchg
sar
add
(bad)
push
jne
add
pop
loopne
pop
loope
popa
test
ins
pushf
mov
and
data16
icebp
test
imul
push
fwait
push
and
fs
jno
cmp
ret
jg
mov
adc
sti
dec
adc
add
mov
in
nop
(bad)
cmp
push
cmp
cmp
mov
cmp
(bad)
adc
cmp
pop
mov
jmp
mov
mov
adc
mov
ds
cld
cmp
in
sub
cdq
mov
mov
inc
xchg
add
pop
enter
(bad)
pusha
loop
dec
mov
push
dec
xchg
je
fstp
adc
pop
add
xor
mov
jp
jb
outs
ins
test
and
fs
dec
mov
ss
jecxz
mov
adc
in
add
or
inc
dec
ja
jb
les
sti
inc
pop
cmc
arpl
ror
mov
xor
ins
(bad)
fdiv
add
dec
mov
jl
fist
mov
push
iret
sub
scas
mov
inc
loopne
xchg
or
pop
test
ret
push
adc
adc
add
mov
loope
sar
mov
pop
std
sbb
xor
push
xchg
xlat
xchg
push
and
call
sbb
jnp
xor
adc
out
sbb
dec
outs
xor
cmp
out
sub
call
and
je
lock
or
imul
push
inc
rol
push
or
test
into
sub
cmp
and
jae
fdiv
push
add
imul
jmp
std
inc
push
imul
pop
pop
dec
jmp
sub
cmp
ins
pop
cmp
push
test
ds
je
bound
dec
pop
adc
ins
fs
pusha
(bad)
pop
dec
sub
in
cmps
inc
or
xor
xchg
fld
mov
xor
pop
jg
or
jmp
fiadd
mov
mov
cmp
hlt
push
push
push
inc
inc
dec
inc
adc
or
pop
arpl
(bad)
cmp
daa
popa
retf
mov
popa
jns
jle
mov
fisubr
add
ins
gs
or
xchg
mov
push
je
pop
mov
add
add
mov
jne
push
nop
mov
xor
ds
cmp
cmp
fs
mov
dec
pop
test
push
test
cmp
pop
cwde
mov
xor
test
push
push
sbb
gs
pusha
jmp
sub
mov
mov
add
mov
mul
mov
push
ret
sbb
pusha
or
adc
je
nop
inc
jae
mov
icebp
fiadd
push
xor
xor
cmp
xor
xchg
or
(bad)
shr
add
gs
xchg
sbb
sbb
push
cmps
(bad)
pop
jne
and
jne
add
inc
cdq
add
inc
cmp
dec
push
jns
mov
test
fsubr
(bad)
(bad)
push
or
inc
adc
dec
add
sub
xor
mov
adc
add
(bad)
rol
push
sub
sbb
ja
push
in
test
sbb
je
ret
fcom
div
mov
pop
adc
ss
lods
mov
mov
inc
inc
jge
jo
jo
ror
hlt
or
(bad)
scas
push
popa
mov
cmp
push
and
(bad)
in
fistp
cmp
jp
inc
ins
push
push
sub
adc
fcmove
push
inc
daa
push
or
aaa
jbe
hlt
fisttp
out
hlt
push
mov
adc
jmp
mov
lds
cld
outs
or
and
cmp
nop
sbb
mov
clc
clc
ret
adc
xchg
hlt
lock
adc
pop
push
push
fnstsw
xchg
in
in
es
rol
mov
imul
icebp
pop
popf
and
ror
or
inc
cmp
push
jp
je
call
aas
(bad)
(bad)
push
add
test
daa
cmp
cmp
aaa
mov
pusha
clc
and
daa
add
xchg
cmp
enter
js
push
and
adc
daa
movs
rcl
and
enter
push
mov
cmp
arpl
or
leave
jb
pop
add
sub
stos
nop
adc
leave
sbb
push
push
das
add
xchg
mov
test
sub
sub
fs
loopne
add
out
jge
hlt
push
arpl
sbb
jb
js
je
std
retf
sbb
cmp
nop
int3
xor
enter
inc
add
and
mov
dec
arpl
sbb
add
and
cmp
ret
inc
(bad)
push
jg
imul
loope
inc
ins
jg
into
inc
xchg
sbb
enter
cs
dec
enter
les
jno
daa
jo
mov
in
rol
gs
popa
iret
jb
and
cmp
inc
cmp
iret
(bad)
sbb
xor
add
and
jl
inc
sbb
push
inc
movs
enter
xchg
rcl
ret
or
add
xor
enter
test
inc
es
dec
mov
add
retf
mov
outs
xchg
pop
adc
inc
sbb
int3
lea
xor
nop
add
jae
aam
push
leave
ror
rcr
jno
pop
add
movs
pusha
cwde
sub
rcr
out
pop
jnp
popa
mov
sbb
xor
push
sahf
add
xor
xchg
clc
xor
adc
outs
pop
popa
nop
push
jb
daa
stc
aad
(bad)
mov
push
pop
pop
add
mov
xor
(bad)
sbb
sub
jecxz
jle
gs
mov
xor
das
or
dec
sub
pop
sbb
xlat
out
or
cmps
xchg
(bad)
push
fcomp
cmp
sbb
and
enter
and
xchg
(bad)
or
pop
pop
fstp
cmp
push
pusha
cwde
add
xor
test
loopne
dec
jb
jbe
or
fidiv
jl
loop
and
sbb
cmp
sbb
lahf
fs
ficom
or
popa
loopne
xchg
enter
sbb
movs
(bad)
bound
push
xchg
mov
adc
pop
and
push
dec
ins
jns
test
inc
movs
fcomp
fsubr
sbb
xlat
ins
aas
lods
fadd
aas
xchg
cmp
mov
fst
je
xor
jo
sub
xlat
jo
frstor
pusha
inc
sbb
jns
sub
bound
ficomp
fbstp
sbb
iret
je
hlt
ficomp
cmp
cmp
or
cmp
sbb
daa
sbb
inc
or
jmp
aas
imul
add
pop
cs
cmp
or
sub
add
loope
and
xchg
loope
call
inc
ret
loopne
aaa
dec
loop
inc
sbb
sbb
push
loop
sub
or
inc
and
aam
bound
lmsw
cmp
dec
mov
sbb
test
xchg
dec
sbb
sub
in
pop
add
in
mov
add
xor
inc
xchg
in
xchg
add
js
aas
lods
in
inc
push
add
and
in
mov
or
xor
lock
jb
rcl
and
out
and
jb
nop
fsub
push
jno
add
pushf
sbb
call
xchg
sete
clc
out
and
and
sub
sbb
push
push
sbb
dec
outs
psubsw
in
add
and
and
push
push
or
cmp
add
push
mov
loopne
sbb
adc
cmp
ltr
mov
dec
dec
or
xchg
bound
pop
nop
push
ret
test
je
mov
cmp
jmp
in
cmp
aaa
inc
or
nop
in
nop
adc
movs
movs
jl
loope
nop
mov
loopne
dec
inc
sahf
dec
cmp
(bad)
in
test
nop
xchg
add
test
xchg
xchg
in
adc
push
adc
add
add
mov
stos
(bad)
out
dec
pushf
sbb
push
shr
loop
cmp
push
push
or
xor
loope
pop
out
push
sbb
add
cmps
mov
loopne
sbb
sbb
arpl
test
sbb
ins
fild
icebp
dec
inc
icebp
pop
xor
inc
mov
scas
mov
add
xor
icebp
ret
or
scas
xchg
jae
dec
adc
lock
inc
sub
gs
add
aam
test
mov
mov
je
push
(bad)
movs
repz
add
xrelease
or
inc
mov
cmp
lods
repz
mov
inc
inc
and
or
xchg
hlt
or
cmp
inc
enter
hlt
xor
mov
pop
sbb
xor
(bad)
push
mul
in
inc
les
pushf
nop
les
test
addr16
cmp
pop
jns
jg
test
and
mov
mov
enter
rcl
inc
cmps
xchg
or
test
sub
and
fild
mov
pop
mov
pop
and
enter
add
pop
push
ret
test
pop
add
cmp
nop
cli
shl
daa
xchg
stc
aad
and
adc
xlat
rol
or
(bad)
pop
test
jb
dec
aam
fs
adc
or
or
or
lock
and
cld
pop
cld
xchg
jo
fcom
fmul
sbb
cld
adc
pop
mov
push
std
out
jo
xor
call
push
call
sub
sbb
xor
outs
aas
(bad)
inc
(bad)
aas
xor
daa
in
es
cwde
or
(bad)
outs
sbb
mov
inc
or
or
jmp
and
sar
or
xor
jmp
bound
inc
mov
add
xchg
repnz
or
int
aaa
push
add
sbb
xor
pop
lahf
jg
dec
ret
xor
pop
dec
shl
sbb
pop
adc
aaa
sbb
mov
arpl
push
ret
push
or
add
pushf
xchg
add
add
test
clc
clc
or
leave
sub
in
inc
dec
push
add
inc
jb
mov
cmp
add
dec
imul
pop
add
or
add
adc
out
push
inc
xlat
dec
inc
ja
or
push
jmp
mov
xchg
add
rol
add
add
adc
rcl
arpl
ss
add
aam
rol
pop
lock
daa
in
push
or
fadd
scas
stos
add
add
pop
daa
in
push
or
or
cmps
in
and
or
inc
jb
and
mov
or
call
dec
or
test
push
(bad)
in
and
and
or
dec
adc
jg
mov
jae
call
jo
fs
adc
xchg
xor
and
mov
dec
or
cdq
xor
lock
xchg
push
jp
(bad)
xor
inc
int
dec
leave
inc
rcl
in
in
aam
or
(bad)
or
dec
add
add
xchg
cmp
or
dec
push
inc
xchg
add
inc
cmc
or
aas
xlat
add
xor
inc
cmovb
or
and
das
and
xchg
movs
adc
and
dec
add
pop
or
outs
jb
and
enter
pop
pusha
adc
inc
and
push
pop
ret
ror
aam
jnp
outs
jge
pushf
adc
jo
and
add
cmp
test
test
and
add
or
adc
pop
add
adc
xchg
adc
movs
sbb
pop
popa
sub
add
adc
adc
and
adc
push
cmp
pop
sbb
add
(bad)
rcl
arpl
xor
jo
add
adc
pop
push
add
add
test
test
adc
leave
or
inc
and
repz
push
dec
push
popa
or
sbb
js
(bad)
xor
and
rcl
dec
leave
mov
ja
pop
push
inc
nop
aaa
and
dec
dec
nop
push
pop
sbb
inc
or
xchg
dec
push
add
out
sbb
pushf
sbb
mov
rcl
jb
sbb
lods
xchg
add
push
add
sub
sbb
sbb
addr16
das
add
sbb
push
das
addr16
dec
or
add
inc
adc
and
or
call
fs
or
sub
outs
stc
sbb
sbb
add
mov
jb
das
add
xor
inc
aas
das
jb
js
push
sub
sub
add
or
pop
xor
sbb
sbb
sbb
xchg
nop
add
xchg
push
pop
mov
test
mov
push
jb
cmp
push
mov
cmp
nop
push
test
mov
mov
in
mov
aam
mov
jb
enter
sbb
push
mov
dec
xchg
or
sbb
dec
pop
or
jg
daa
gs
std
and
sbb
fsub
adc
xchg
add
(bad)
adc
jae
mov
jb
push
aaa
nop
inc
mov
adc
cmps
pop
and
inc
dec
enter
and
xor
and
add
ja
and
in
sbb
in
and
xchg
pushf
mov
add
add
mov
jo
or
jae
or
es
in
pusha
cwde
daa
ja
test
mov
out
sub
pop
cmp
sbb
pop
repnz
cmps
xor
nop
push
jb
pop
sub
popa
cmp
pop
addr16
sbb
jp
adc
add
inc
psrad
pop
out
mov
inc
push
addr16
sub
add
cdq
sub
xchg
add
enter
mov
arpl
sub
inc
sbb
sbb
fsubr
add
xchg
pushf
adc
retf
pop
push
ins
fbld
inc
dec
or
sbb
adc
dec
push
js
xor
push
cs
add
jo
jo
jb
push
jo
sbb
pop
push
lea
ja
inc
sbb
pop
je
das
add
and
xor
sbb
push
les
add
add
add
xor
and
push
inc
add
mov
mov
dec
or
xchg
retf
outs
and
add
and
cmp
sub
and
xor
add
cmp
mov
(bad)
icebp
sub
retf
loope
sub
popa
out
push
xor
add
test
or
and
scas
add
xor
xor
enter
xor
mov
in
pusha
mov
sub
add
xchg
xor
ins
add
les
arpl
and
aaa
cmp
rol
add
les
cmp
push
push
inc
push
pop
adc
sbb
inc
pop
pusha
retf
pop
cmp
inc
shl
jg
or
and
sub
cmp
push
lods
pop
jns
jg
pop
add
cmp
mov
cmp
aam
pushf
mov
pop
cmp
sub
add
outs
es
dec
enter
or
xor
inc
sbb
(bad)
jo
arpl
xchg
fs
xor
mov
cmp
nop
add
adc
cmp
cmp
push
xor
xor
jg
inc
sbb
sbb
cmp
ret
aam
pushf
jne
(bad)
jg
sub
add
sbb
and
or
lods
lea
sub
ficomp
lahf
lds
add
xor
or
xchg
cmp
int3
inc
add
pusha
inc
pop
and
xchg
inc
inc
lahf
jb
mov
cmp
sbb
pushf
xchg
push
add
test
leave
inc
and
inc
push
pop
push
sub
push
xchg
xchg
adc
cmps
xchg
inc
cmp
inc
jb
test
inc
push
jo
add
push
xchg
out
inc
push
dec
enter
lods
les
leave
or
inc
or
in
inc
int3
int3
jb
jb
lock
pop
mov
sbb
and
push
scas
adc
inc
and
in
add
mov
mov
cmp
loope
in
mov
jmp
sub
mov
sbb
icebp
mov
mov
mov
lods
adc
xlat
mov
test
inc
aam
adc
jo
cmp
xchg
nop
adc
xor
inc
shr
add
mov
pop
aaa
jno
test
arpl
mov
loope
fwait
jne
imul
add
test
add
lahf
cmp
xlat
push
(bad)
jnp
call
push
inc
movs
or
mov
adc
jnp
dec
push
adc
sbb
call
mov
mov
adc
push
jae
xchg
push
mov
scas
or
push
(bad)
dec
sub
adc
push
dec
add
and
fild
ret
xchg
bound
pushf
xchg
xor
leave
push
dec
loopne
loopne
xor
loope
retf
lods
lods
in
sbb
sub
sbb
retf
dec
mov
lods
fistp
add
push
mov
call
outs
pop
aas
dec
fidivr
mov
in
and
(bad)
sbb
call
aaa
sahf
xlat
pop
adc
loopne
cmps
nop
dec
lock
arpl
les
repnz
cmps
sbb
inc
pop
sbb
hlt
lds
and
pop
popf
push
mov
xor
test
adc
dec
in
stc
fmul
sub
leave
xor
stc
push
ds
retf
xor
int3
cmp
xchg
dec
in
cmp
into
inc
cwde
iret
inc
push
stc
push
ds
ror
ror
dec
in
rcl
rcl
xchg
dec
in
adc
(bad)
pop
cmp
pusha
push
stc
push
ds
fsub
push
nop
fisubr
jo
fsub
push
stc
push
je
fnstsw
fist
dec
jl
loopne
pop
loope
inc
in
stc
test
mov
lahf
scas
in
nop
call
mov
xor
aam
cli
adc
imul
adc
add
jecxz
xchg
cmps
in
sar
cmp
mov
adc
mov
mul
push
stc
je
enter
cmp
push
ds
dec
mov
repz
bnd
mov
lock
fmul
and
adc
lahf
retf
adc
dec
and
lods
(bad)
call
jl
push
pop
std
adc
sub
adc
loopne
scas
inc
imul
cld
jnp
adc
enter
or
push
stc
push
ds
cmp
ds
dec
in
add
in
or
pop
rcl
sbb
or
scas
jmp
fbld
jo
and
or
sub
retf
mov
cmp
xor
xchg
xor
cmp
aas
cmp
in
jne
inc
adc
or
push
ds
or
(bad)
adc
lahf
scas
inc
push
xchg
xor
dec
and
mov
xchg
jmp
pop
es
setne
push
pop
arpl
adc
sub
push
ds
adc
cmps
repnz
jo
sub
test
xor
adc
lahf
retf
mov
hlt
clc
dec
int3
scas
repnz
rcl
test
push
fisttp
mov
dec
adc
mov
dec
mov
xor
adc
pop
cwde
jl
shl
sbb
lock
fistp
adc
xchg
aam
repz
es
cmp
pop
jmp
loopne
test
imul
inc
adc
xor
repz
jne
retf
push
adc
mov
(bad)
es
or
and
fbld
out
push
mov
in
aas
rcr
lock
push
loop
loop
sub
inc
xchg
adc
push
nop
add
dec
add
not
and
push
(bad)
mov
adc
div
jle
or
add
and
add
sub
iret
and
(bad)
mov
add
add
mov
add
cmp
jbe
ja
jbe
or
dec
cmp
push
inc
add
in
mov
cmp
ja
add
and
xchg
add
mov
sahf
out
fidivr
xlat
fidiv
out
in
repz
adc
add
dec
mov
ja
ret
fsubr
cmp
sti
sbb
fstp
std
adc
jmp
mov
stc
or
add
fnsave
adc
loopne
mov
fcomp
inc
js
and
add
mov
imul
xchg
dec
jbe
jg
push
mov
pusha
sub
jp
xchg
out
sub
add
or
xchg
xchg
xchg
xchg
or
sub
fcomp
jg
jg
add
add
adc
loop
mov
jne
adc
push
ja
ins
loopne
adc
cmp
imul
adc
nop
push
cmps
mov
call
test
and
sbb
shl
or
neg
mov
add
push
adc
hlt
sub
or
sub
movs
jb
sbb
and
sbb
and
out
xchg
inc
je
push
inc
push
cs
enter
push
cmp
cmp
(bad)
(bad)
dec
pop
mov
cmps
or
ret
dec
loopne
jecxz
xchg
mov
mov
sub
mov
retf
and
pop
mov
mov
inc
mov
push
add
sub
sbb
aas
mov
shl
push
mov
sub
dec
je
addr16
add
nop
fwait
rol
jb
mul
adc
outs
inc
sbb
or
fsub
mov
(bad)
ret
xlat
sbb
jae
addr16
or
mov
push
rol
sbb
xchg
(bad)
xor
cs
iret
pop
scas
jbe
je
arpl
ja
imul
cmp
fdiv
add
pop
add
nop
pusha
cwde
dec
jnp
pop
loopne
sahf
pop
push
or
movs
add
or
in
ror
inc
pop
pusha
or
sbb
das
pop
fsubr
jbe
ret
inc
mov
push
adc
pushf
ja
push
cmps
mov
ss
mov
das
cmp
outs
mov
adc
push
pop
push
lods
lds
pop
pop
outs
mov
pop
add
int
xchg
sub
add
add
out
lahf
jmp
add
add
adc
dec
sub
push
adc
inc
pop
bts
mov
push
fisub
add
pop
xor
rdmsr
sahf
pop
pop
stc
daa
call
xor
ds
xor
pop
mov
push
pop
getsec
repnz
in
loopne
jle
add
mov
pop
mov
(bad)
call
add
cmp
and
popa
arpl
push
inc
call
scas
xor
scas
adc
cmp
dec
jb
scas
adc
dec
push
xor
jo
outs
jb
push
jnp
imul
dec
or
xchg
push
gs
mov
mov
jbe
or
outs
adc
or
inc
jb
ins
or
outs
mov
les
push
outs
or
fmul
or
je
pop
in
push
mov
jo
inc
pop
inc
push
and
jle
gs
pop
adc
ins
rcl
inc
outs
mov
ins
adc
fs
in
in
and
ja
arpl
outs
retf
jb
outs
jae
pop
xchg
outs
inc
fs
mov
cmp
add
or
add
outs
enter
xor
int3
jbe
outs
inc
jne
add
push
dec
iret
and
int3
fucomip
fsubr
test
add
nop
or
inc
stos
(bad)
in
lock
push
inc
scas
sub
inc
jns
sbb
int3
mov
ror
imul
push
mov
push
fwait
pop
in
pop
sub
ret
inc
mov
aaa
mov
dec
jne
bound
lock
push
and
imul
and
cmps
add
loopne
out
add
clc
mov
mov
lods
mov
mov
and
ja
arpl
dec
outs
sbb
dec
adc
addr16
and
inc
inc
dec
addr16
in
jo
aam
inc
stos
add
loopne
push
sbb
add
rol
push
nop
and
or
add
and
and
inc
shl
push
add
inc
cmp
inc
jo
inc
cmc
add
inc
add
ds
out
and
ins
jns
inc
je
arpl
dec
(bad)
fmul
add
ins
mov
leave
or
ds
jecxz
jbe
gs
xor
test
ror
sub
add
add
and
inc
dec
add
std
jp
dec
add
rol
mov
lods
mov
rol
loopne
enter
popf
or
ret
add
jne
fs
pop
xchg
sub
dec
jae
fwait
xor
call
gs
dec
push
fs
jle
ins
inc
pop
jg
sbb
shl
xor
sub
in
iret
or
push
sub
test
js
out
and
popa
jae
sbb
sub
std
sbb
and
push
shl
pusha
test
add
pusha
inc
or
ret
out
fisttp
jo
popa
aas
mov
add
jmp
adc
jo
dec
gs
jae
imul
lahf
xlat
loopne
sti
in
mov
jo
xchg
xor
ins
movs
ins
and
push
call
push
and
and
pop
(bad)
mov
sub
loope
xor
sbb
aaa
into
jae
sbb
cs
adc
scas
into
and
add
fs
movs
add
mov
jnp
mov
or
pop
in
pop
and
test
pop
sbb
pop
les
ficom
and
inc
popa
imul
adc
lahf
adc
xchg
aam
mov
mov
dec
add
xchg
pop
push
pop
inc
loop
(bad)
cld
inc
js
fild
fadd
out
cmp
inc
test
scas
xor
or
lock
(bad)
xchg
xor
add
inc
jmp
push
xor
add
mov
jle
adc
jge
dec
sub
adc
sbb
add
xchg
add
popa
push
fucomp
sbb
clc
mov
xor
es
push
movzx
out
loopne
dec
in
add
dec
and
in
pusha
cmps
(bad)
int
xor
dec
jne
outs
lods
retf
inc
and
sar
jb
jp
xchg
mov
pop
cmp
push
bound
add
push
test
mov
outs
bound
cmp
cmps
add
shl
aaa
out
add
call
jbe
fcom
xchg
or
jle
aaa
scas
or
test
(bad)
(bad)
xlat
pop
ret
xchg
mov
jmp
add
dec
dec
mul
mov
cmp
jmp
loopne
jl
and
add
sub
dec
test
fcmove
sbb
push
(bad)
mov
call
lea
mov
movs
add
pop
xchg
shr
fmul
mov
adc
(bad)
mov
xchg
(bad)
pop
cmp
icebp
outs
push
fcmovnu
sub
lea
aam
test
mov
mov
xchg
cli
xchg
rcr
clc
adc
adc
add
pop
loop
loope
sbb
mov
loop
ret
ja
cli
bound
mov
mov
push
fs
test
fistp
bound
cmps
pop
adc
loopne
sub
mov
mov
pop
xchg
es
ficom
jnp
jl
es
xor
and
fcomip
cs
clc
and
pop
nop
enter
push
push
dec
sbb
cmp
aaa
and
push
or
mov
pusha
push
nop
and
lods
mov
es
int3
scas
jl
cs
daa
push
add
sahf
pop
or
call
or
push
mov
push
mov
add
pusha
pop
cmps
jg
dec
and
and
inc
in
lods
cmps
outs
xor
or
adc
mov
sub
or
push
sar
div
xchg
shl
xchg
retf
mov
add
out
push
sub
xor
in
inc
inc
leave
and
scas
sbb
in
rol
push
mov
pop
adc
mov
test
in
cmp
mov
sub
xor
push
adc
xor
or
adc
dec
mov
or
push
cmp
data16
sbb
adc
mov
push
or
test
adc
mov
test
mov
inc
call
lock
xchg
jnp
inc
sub
mov
jmp
pop
mov
jecxz
fbld
pop
pusha
mov
mov
pop
sbb
ret
adc
ja
imul
loop
adc
push
jbe
push
outs
popa
jbe
popa
bound
pop
mov
icebp
push
call
out
and
outs
ja
cdq
add
or
ins
mov
xor
in
es
fistp
inc
lods
mov
jo
push
fcmovnbe
ins
pop
xor
ror
push
sub
pop
lahf
pop
mov
jl
mov
(bad)
popa
dec
add
rol
and
faddp
inc
xchg
sbb
pop
xchg
psubb
cmovs
clts
into
pop
sub
(bad)
aaa
sysret
add
sahf
(bad)
dec
lods
push
ins
aas
rcr
out
mov
or
pop
xor
and
popa
mov
push
(bad)
mov
aaa
mov
push
enter
gs
outs
jbe
ins
mov
and
sub
into
cli
imul
ins
div
gs
fs
jb
jae
dec
aaa
dec
jno
dec
add
or
cwde
sahf
dec
xchg
aas
icebp
push
push
fiadd
jae
mov
pop
les
es
es
int
sub
dec
std
jno
xchg
push
add
mov
mov
aas
xchg
cmp
pusha
jbe
pop
inc
adc
add
data16
int
or
scas
mov
aam
push
jb
je
daa
sbb
inc
mov
lahf
ror
push
or
out
shl
inc
pop
or
cmps
xor
mov
emms
pushf
dec
jnp
push
(bad)
push
ja
add
jg
mov
or
xchg
shl
push
cmc
(bad)
scas
push
pop
pop
dec
push
lods
sbb
jbe
mov
js
pop
pop
outs
cmovno
adc
jo
test
scas
fild
dec
dec
jge
mov
mov
adc
push
sahf
xchg
out
mov
xchg
es
jbe
fldcw
xchg
mov
xchg
fist
jo
in
imul
lock
fdivr
lock
dec
xchg
nop
xchg
cmp
aam
sahf
out
add
lock
mov
rcl
clc
add
push
nop
fwait
inc
sbb
(bad)
mov
lock
cmp
sub
les
fisub
call
pop
ret
jmp
cvtps2pd
or
sti
(bad)
(bad)
jb
adc
retf
sub
pslld
jae
das
jg
scas
cmp
loop
comiss
in
add
js
retf
xor
cmovo
jo
mov
adc
jb
xchg
movlps
push
add
call
sysexit
add
icebp
jle
in
add
js
xor
dec
mov
push
js
xchg
movups
jbe
dec
(bad)
ins
jns
sbb
fistp
sub
in
mov
(bad)
pop
sub
pop
mov
push
sub
lods
sub
mov
sub
das
push
inc
arpl
je
lods
(bad)
(bad)
je
stos
add
stos
cmp
mov
dec
outs
pop
outs
dec
xchg
imul
jno
cmps
fcomi
inc
test
in
sbb
push
clc
clc
mov
adc
jns
cmps
xor
push
pop
mov
outs
out
rol
xlat
add
je
outs
or
add
xor
call
sbb
push
jns
xor
dec
jns
dec
pop
adc
dec
retf
nop
push
add
add
das
push
xor
inc
xor
test
rol
jnp
or
rcl
mov
pop
shr
mov
jmp
pop
dec
popa
xchg
lods
and
popa
xchg
or
add
popa
mov
popa
push
inc
or
retf
or
dec
mov
test
adc
movs
inc
loopne
add
inc
and
dec
jnp
loop
sbb
ins
loop
xchg
jae
adc
dec
inc
add
ret
arpl
cs
push
mov
add
arpl
(bad)
mov
inc
and
cwde
adc
test
mov
jmp
loopne
sti
push
and
adc
inc
test
inc
pusha
popa
shl
cmp
inc
daa
sbb
das
pop
inc
sbb
jno
sbb
push
pop
mov
jae
inc
clc
mov
adc
aam
jns
cmp
or
mov
aam
xlat
ins
out
or
or
push
gs
mov
push
and
stc
outs
xor
rcl
mov
mov
pand
aad
and
dec
mov
or
and
xor
inc
push
in
adc
adc
xor
aas
mov
cmp
inc
popa
push
sub
jecxz
dec
jg
dec
dec
push
pop
mov
inc
dec
ins
add
(bad)
xor
add
out
add
or
inc
add
add
jb
or
or
jae
in
ret
cmp
jno
inc
mul
idiv
inc
push
adc
or
call
and
loopne
xchg
shrd
ins
add
or
adc
mov
or
imul
popf
push
push
xor
ds
and
xor
sub
push
push
xor
pop
fst
mov
test
add
jg
shl
lahf
push
fadd
push
adc
jl
sahf
xchg
cwde
push
sbb
sbb
xchg
or
push
mov
nop
inc
adc
pop
jg
mov
add
and
mov
jmp
(bad)
pop
mov
add
es
xor
daa
mov
mov
mov
shl
int
pusha
jle
cwde
and
xor
inc
fwait
adc
pop
aam
aam
fmul
jbe
push
cmp
push
arpl
add
jp
inc
clc
(bad)
shl
sti
and
mov
call
mov
cmp
je
pop
add
add
or
pop
sti
jmp
lea
pop
fsub
add
cmc
push
sub
data16
in
mov
pop
inc
add
hlt
loopne
push
or
mov
outs
pop
add
test
fimul
aam
in
add
cmp
and
inc
fiadd
adc
mov
retf
(bad)
jmp
add
jno
aam
clc
xchg
pushf
sub
jne
inc
add
fadd
pushf
sub
sbb
inc
int3
add
iret
dec
add
xor
loopne
mov
push
add
dec
add
lahf
pusha
rcl
mov
idiv
adc
pop
popa
xchg
pop
mov
push
call
sbb
sahf
rcl
imul
push
dec
adc
pusha
icebp
inc
xor
shl
stc
ret
sbb
mov
shr
pusha
mov
pop
sbb
mov
cmp
call
xchg
loop
jmp
pop
jmp
xchg
ins
arpl
in
pop
add
jbe
call
fs
push
mov
sbb
hlt
es
inc
inc
sub
or
(bad)
xor
cwde
jno
mov
jbe
xchg
inc
add
icebp
sbb
dec
cs
mov
addr16
mov
add
pop
ret
sub
jb
(bad)
mov
and
pop
in
add
fstp
fadd
inc
dec
shr
sub
jle
leave
and
je
lea
sahf
mov
(bad)
sub
(bad)
push
jbe
cmp
pop
sbb
ins
div
mov
or
out
mov
adc
xor
fsubr
fucomi
test
add
push
pop
arpl
call
pop
scas
push
outs
enter
mov
push
push
cdq
ins
push
mov
movs
imul
sbb
cmp
lock
hlt
add
xor
mov
xor
daa
mov
(bad)
push
inc
and
sbb
mov
arpl
add
das
in
dec
ret
div
retf
sbb
pushf
mov
mov
cmp
popa
add
push
or
jmp
or
xchg
xchg
fs
popa
lods
inc
loope
inc
or
clc
sbb
xor
adc
(bad)
fmul
inc
(bad)
mov
add
adc
and
add
retf
aaa
test
mov
pop
xor
jg
adc
inc
dec
and
cmp
adc
scas
pop
xor
adc
push
inc
cmp
jecxz
inc
and
fsub
mov
xchg
pop
jmp
mov
adc
pop
aam
repnz
mov
jno
add
test
xchg
mov
pmaxsw
sbb
lods
jmp
mov
push
add
dec
je
dec
pop
xchg
jge
xor
aas
jns
in
jmp
test
cmps
in
push
loopne
push
leave
call
mov
fild
scas
push
xchg
in
fst
mov
or
fsubr
imul
icebp
test
iret
jmp
pop
mov
cmps
inc
ins
push
dec
mov
jo
int
sbb
jl
pusha
popf
cmp
pop
mov
out
mov
add
imul
(bad)
stos
push
fs
in
push
mov
xor
sbb
lock
rol
xor
test
push
push
es
push
pop
fwait
push
cmp
jbe
jmp
jbe
adc
and
cmp
test
jecxz
pushf
fst
mov
stc
jno
cmp
cmp
mov
ret
push
jno
push
sbb
dec
mov
pop
mov
mov
sbb
(bad)
push
cld
out
jb
xor
inc
xor
pop
ds
cmc
xor
sbb
mov
mov
xchg
push
scas
xchg
add
loop
fs
mov
pop
inc
lods
xchg
push
cmp
jmp
xor
imul
add
lahf
je
mov
clc
sets
pop
jns
ja
test
push
pop
test
fs
and
cmp
adc
pop
add
add
mov
es
mov
unpcklps
retf
enter
jne
and
lods
pop
pop
xchg
jne
test
mov
xchg
or
add
inc
sahf
push
dec
push
out
arpl
in
mov
cmps
or
pop
mov
cmp
and
lea
les
adc
fstp
dec
jno
and
lds
(bad)
lods
call
pop
fild
dec
mov
xchg
pop
fdivr
inc
int3
out
fdivr
mov
sbb
cld
mov
stos
ds
loopne
and
icebp
push
mov
cmp
outs
je
inc
cwde
mov
adc
(bad)
fild
adc
mov
js
xor
inc
loop
outs
jo
inc
ret
xchg
js
mov
or
xor
sub
lea
cmp
mov
aaa
sbb
int
sub
mov
add
mov
mov
fwait
popa
in
dec
bound
std
imul
mov
sbb
icebp
add
mov
test
sub
ror
cmp
fisttp
mov
or
fidiv
inc
add
leave
shl
imul
cdq
aas
adc
cmp
in
gs
in
adc
jns
mov
mov
in
mov
test
add
mov
imul
or
xchg
aad
xor
ins
jl
aad
ret
jbe
mov
pop
jmp
xchg
add
sub
inc
pop
cmp
sub
inc
push
pop
ret
xor
mov
cmp
lea
jp
xor
or
lea
inc
scas
push
cmp
in
icebp
jecxz
jne
pop
dec
mov
dec
mov
xchg
or
mov
mov
or
add
dec
jne
and
mov
mov
das
in
jg
leave
dec
call
sbb
or
cmp
in
add
mov
mov
sub
or
cmps
mov
pmaddwd
mov
pop
test
mov
sub
sbb
ja
or
cli
(bad)
cld
(bad)
(bad)
(bad)
jg
jmp
ins
(bad)
out
cmp
add
jle
cmp
seta
or
jmp
jo
or
pop
lods
in
movs
and
idiv
inc
ret
mov
sbb
imul
shr
ins
jmp
mov
mov
inc
setg
sar
cmp
retf
leave
inc
jo
dec
push
ret
mov
sbb
mov
ret
push
test
jbe
inc
or
mov
or
test
push
xor
push
iret
pop
loopne
not
std
jecxz
xor
or
push
and
jg
push
lock
sub
jae
(bad)
in
imul
mov
push
xchg
cmp
jne
or
lods
xor
lea
outs
lods
or
mov
add
mov
nop
cmc
cmp
pop
aas
repz
mov
mov
jno
cmps
add
les
mov
xor
call
xor
jle
mov
push
push
push
lds
jno
sahf
jmp
mov
push
push
push
xor
inc
sbb
xor
adc
scas
inc
jo
cwde
fs
pop
xchg
mov
push
adc
std
clc
cmp
clc
mov
sub
test
and
cmp
dec
push
pusha
lock
jp
ror
sar
rcl
je
fbld
aam
push
sub
xor
pusha
and
adc
or
js
mov
add
pop
ror
and
je
les
push
in
adc
stc
rcl
and
dec
gs
jno
mov
stc
mov
xor
ror
dec
(bad)
cmp
mov
adc
inc
dec
dec
movs
dec
pop
loop
jne
jg
cld
inc
es
dec
in
add
or
(bad)
mov
ret
push
mov
mov
jnp
and
or
adc
xchg
mov
loopne
push
jo
invlpg
push
pop
sbb
push
and
or
add
push
pusha
les
xor
(bad)
fcmovne
in
xor
aaa
das
and
(bad)
xchg
xor
xor
mov
add
cmp
xchg
mov
adc
add
xchg
movs
add
dec
mov
jno
pop
lock
and
rcr
loope
sub
mov
aam
stos
hlt
shr
or
mov
es
dec
(bad)
or
and
std
iret
mov
arpl
jno
jge
add
sbb
or
jmp
push
xchg
lods
std
test
hlt
push
imul
push
ror
jl
inc
cmp
jne
call
jl
add
xchg
inc
cmps
jecxz
xchg
push
mov
or
jmp
or
in
cmps
adc
lahf
rol
das
add
pusha
jb
or
jo
cmp
adc
fxch
jbe
push
push
or
adc
add
lds
test
adc
test
lea
jo
pop
daa
push
pop
push
loopne
fcomp
sub
enter
pop
hlt
mov
inc
ins
lea
mov
aaa
aad
jecxz
stos
fcom
jmp
mov
sbb
clc
sbb
pop
dec
adc
adc
pop
ds
pop
dec
jns
into
push
(bad)
adc
lds
pop
inc
inc
loop
jmp
ret
les
mov
addr16
sar
xchg
lea
sub
fstp
fs
jnp
mov
or
cwde
loop
div
push
mov
loope
rcl
loopne
retf
cmps
sbb
add
add
pop
add
(bad)
imul
cmp
mov
xor
push
or
push
mov
stos
push
mov
adc
in
inc
and
mov
retf
idiv
bt
jmp
cwde
cwde
add
mov
add
xor
test
cmp
push
out
sar
in
frstor
jmp
add
mov
mov
add
or
pusha
mov
and
int
aam
adc
in
test
pop
sbb
sub
jge
in
imul
test
push
(bad)
test
inc
movs
stos
shr
xor
adc
cmps
rol
sbb
jmp
lea
ins
movs
je
mov
adc
loopne
and
sbb
add
mov
cmps
add
inc
data16
inc
jb
mov
mov
pop
mov
test
(bad)
pop
fild
dec
test
fsub
sbb
je
inc
ja
(bad)
xor
retf
mov
pushf
(bad)
xlat
addr16
sar
mov
out
and
add
pop
fwait
pop
cwde
pop
cwde
ins
pop
inc
cmps
pop
adc
mov
mov
mov
and
lock
inc
jmp
je
mov
enter
sbb
push
push
ret
pop
jmp
inc
xchg
inc
xor
inc
test
push
in
popa
in
test
push
aad
pop
adc
icebp
movs
ret
(bad)
mov
mov
cmp
setne
and
adc
push
inc
add
lock
sbb
int3
sub
or
fdivp
or
mov
and
mov
cmp
pushf
lea
fsubr
xor
stos
pushf
and
add
jecxz
mov
push
cmp
outs
add
pop
mov
and
pop
in
test
add
mov
ins
retf
cmc
jne
push
jl
pop
dec
sub
fsubp
movs
push
repz
and
mov
sub
out
sar
add
lahf
pusha
or
push
out
call
xor
sub
xacquire
cmp
adc
add
push
dec
cwde
loope
pop
add
sar
mov
fstp
inc
add
loope
cli
cwde
xlat
inc
sti
jno
icebp
je
dec
inc
or
mov
imul
add
outs
scas
sbb
es
hlt
push
and
sub
(bad)
adc
and
dec
sbb
inc
cmp
xor
arpl
inc
or
cmp
pop
inc
dec
adc
or
dec
sahf
inc
nop
mov
popa
pop
xor
dec
shl
mov
pop
mov
xchg
lods
pop
nop
fld
pop
add
fcom
add
dec
or
or
sbb
movlps
fisubr
add
adc
iret
pop
and
or
pop
test
sbb
(bad)
lahf
pop
cmp
ret
push
outs
jae
xor
mov
and
cmp
pop
mov
je
jp
pusha
popf
ja
or
mov
iret
dec
outs
mov
test
pop
and
sbb
push
ins
dec
add
add
cmp
fdivr
jns
push
das
ror
or
adc
and
push
xor
data16
cmps
adc
aaa
add
call
add
inc
verr
sbb
bound
sub
(bad)
jne
scas
mov
push
inc
mov
cmp
add
push
add
pop
add
(bad)
std
sub
fwait
push
hlt
shld
push
fisubr
aas
(bad)
push
stos
push
push
lock
and
popf
lods
adc
lods
stc
cs
lods
dec
xor
or
xchg
aas
mov
inc
xor
push
pop
in
lahf
mov
mov
inc
add
adc
dec
test
add
aaa
test
ror
dec
xor
and
aas
dec
add
push
or
and
cld
xchg
add
(bad)
and
pop
lds
aam
mov
inc
nop
mov
sub
adc
inc
and
shl
jno
add
sub
rcl
pop
inc
xchg
dec
movs
mov
mov
adc
adc
addr16
sbb
gs
dec
mov
arpl
nop
sbb
jbe
aad
push
nop
add
movs
pop
rcl
push
adc
dec
cmp
add
sub
cwde
das
pop
adc
pop
daa
dec
bound
mov
daa
pop
sub
inc
mov
daa
add
inc
imul
daa
inc
xor
jb
pushf
cmp
sti
int3
test
test
cdq
push
int3
mov
test
outs
stos
fistp
movsx
retf
ins
test
adc
lods
test
or
lods
mov
mov
pusha
dec
scas
test
scas
leave
std
fwait
outs
fldcw
verr
scas
bsf
into
ds
out
add
scas
fucomp
pushf
int3
(bad)
jo
adc
scas
push
aas
mov
add
mov
adc
movhps
neg
mov
add
mov
out
jbe
mov
ins
push
push
sbb
jp
sbb
test
out
out
neg
pop
push
add
inc
addr16
and
out
aas
ss
jle
mov
cmp
and
mov
mov
fidivr
mov
mov
cld
std
xor
int
daa
add
movaps
sub
mov
push
clc
mov
out
jo
es
pop
sbb
in
add
or
push
adc
mov
xor
sub
mov
aad
sbb
sbb
sbb
test
and
inc
adc
sbb
(bad)
mov
or
xchg
jecxz
arpl
fs
rol
push
dec
outs
arpl
popa
scas
add
es
fimul
popa
dec
adc
mov
ss
push
call
mov
or
test
ins
test
mov
mov
pop
fld
jno
sbb
pop
sub
sub
cmp
push
xchg
and
adc
mov
lods
xor
dec
dec
sub
ret
sar
jg
jns
fwait
and
sub
push
pop
stos
ror
pusha
dec
les
cmps
cli
and
xchg
retf
jmp
inc
imul
lods
lahf
test
mov
sar
lahf
push
inc
mov
or
push
arpl
adc
mov
pop
mov
xchg
inc
add
lock
or
lods
inc
xchg
mov
mov
xor
hlt
xor
popa
(bad)
gs
sbb
xlat
mov
sub
addr16
ret
lds
sub
inc
mov
leave
xchg
push
shr
dec
jo
fwait
adc
mov
sub
pop
sbb
inc
adc
jae
mov
mov
sbb
mov
mov
adc
sbb
sub
push
and
mov
inc
inc
test
test
shl
popf
ret
dec
pop
popf
and
add
popf
push
jbe
sbb
ja
shl
xchg
test
test
cmp
mul
cmps
arpl
ins
sbb
aam
fs
(bad)
push
mov
inc
add
shl
cmp
jmp
sub
(bad)
ss
inc
push
call
or
adc
add
lods
adc
pop
jmp
inc
or
pop
stos
mov
add
add
ss
loopne
pop
xlat
add
add
inc
pop
jg
xor
sub
pop
std
adc
and
arpl
add
adc
or
cmovnp
pushf
shl
dec
addr16
loope
mov
(bad)
cli
dec
pushf
add
pop
jmp
or
sub
jne
(bad)
(bad)
or
popf
add
pop
add
or
mov
dec
push
(bad)
loope
scas
add
(bad)
clc
adc
(bad)
push
adc
inc
or
adc
stc
dec
mov
inc
adc
mov
add
in
ds
jle
cld
inc
mov
mov
inc
pop
aaa
pop
push
inc
(bad)
push
cmp
and
adc
cmp
(bad)
test
pop
cmps
fmul
cmp
and
stos
call
lea
inc
retf
dec
adc
ja
lock
or
mov
mov
dec
and
and
or
dec
pusha
loopne
movs
and
aas
mov
mov
call
aas
lock
push
hlt
adc
in
mov
shl
mov
pop
push
add
hlt
pop
test
rcr
dec
dec
out
les
stos
push
test
or
xor
push
scas
(bad)
push
les
popa
inc
or
mov
mov
cmp
xor
data16
lahf
push
jecxz
or
ja
mov
mov
add
and
cdq
lea
out
mov
cmps
lock
or
mov
xchg
mov
fisub
jne
inc
jmp
mov
adc
cmp
je
add
fst
test
mov
add
loopne
mov
hlt
repz
xor
push
fld
push
or
hlt
pop
cwde
add
or
mov
dec
call
or
sub
cmps
jge
loopne
in
xor
adc
out
aaa
add
mov
add
mov
jmp
call
push
cmp
jle
or
call
mov
xchg
je
mov
test
in
xchg
sbb
loopne
inc
cmp
or
(bad)
push
push
(bad)
nop
jbe
je
lods
out
sub
add
loope
out
(bad)
or
cmp
mov
add
out
es
mov
mov
mov
das
mov
clc
push
les
mov
pop
mov
movs
in
test
mov
or
jg
adc
ss
stos
mov
or
xchg
adc
int
ret
lock
xor
lods
add
cmp
sub
xchg
aam
fimul
inc
or
popa
sbb
dec
dec
xchg
dec
call
dec
pop
fisttp
cmp
push
out
aas
xor
sbb
xor
xor
mov
push
push
rcl
sub
ja
cmp
mov
dec
mov
cmp
pop
mov
inc
and
push
add
popa
push
push
pop
out
out
or
icebp
scas
mov
pop
jb
or
mov
or
cmc
mov
sbb
jp
test
icebp
push
inc
ins
push
xchg
in
mov
loopne
cmp
call
ja
add
inc
push
cmp
push
shr
outs
push
cmp
adc
push
stos
adc
add
cmp
in
clc
jae
sub
jge
(bad)
add
adc
(bad)
xchg
add
mov
or
cmp
mov
ins
jmp
(bad)
cmp
jp
sbb
add
adc
add
fs
and
adc
pushf
inc
add
lea
(bad)
aas
lock
mov
ss
clc
or
lea
dec
retf
js
mov
jmp
clc
xor
cs
and
scas
dec
lock
sub
lock
add
lock
and
inc
pop
loopne
out
and
clc
add
clc
ds
in
jnp
and
test
rol
ret
add
pop
push
mov
push
sub
dec
pop
pusha
mov
cmp
dec
dec
pop
sahf
out
outs
pop
push
jo
adc
retf
add
sahf
out
sahf
sub
and
dec
pop
ins
jns
out
jle
mov
sahf
out
jmp
jns
out
cmp
gs
outs
mov
cmp
sbb
or
and
inc
jnp
and
leave
and
xchg
jmp
push
movs
in
call
xchg
in
fisttp
or
rol
and
or
xlat
and
xchg
sub
or
mov
and
sub
sbb
pop
neg
frstor
inc
cmp
xchg
mov
fcmovbe
push
add
lock
sub
loopne
xor
jmp
sbb
mov
jo
enter
sbb
jbe
mov
sbb
add
xchg
inc
sbb
xchg
or
cmp
clc
stos
adc
inc
loopne
mov
les
push
call
test
dec
mov
retf
out
xor
jns
pop
dec
mov
(bad)
clc
nop
mov
or
ja
ja
xchg
mov
push
jne
fs
sbb
jg
mov
mov
rol
(bad)
pop
sbb
add
push
adc
test
inc
inc
push
or
mov
(bad)
and
push
cmp
jnp
jl
adc
jle
icebp
sar
sahf
and
call
aas
call
lock
and
pop
jmp
mov
movs
add
jmp
pusha
retf
adc
mov
pop
movs
in
xchg
inc
add
inc
xor
call
loop
sar
jmp
jl
or
scas
mov
add
loope
pop
out
push
xor
or
adc
shr
mov
test
pop
js
(bad)
dec
jecxz
popa
daa
cmp
test
not
xchg
pop
mov
mov
mov
ret
repz
imul
cmp
jmp
test
lahf
je
jae
cld
sub
xchg
or
or
and
jne
inc
or
cmp
fstp
or
movhps
outs
add
ss
pop
cmp
add
fldcw
push
gs
or
jo
push
or
pusha
or
inc
jns
dec
ror
das
or
ins
or
outs
je
jo
mov
push
aaa
inc
jbe
aaa
add
push
repnz
ja
fisub
enter
lea
or
push
jae
xchg
jo
push
lods
les
jae
jge
add
add
out
push
dec
cmps
pop
rol
(bad)
outs
push
scas
jnp
inc
xchg
dec
outs
ins
outs
or
shl
pop
or
stos
imul
push
fisubr
and
inc
gs
fmul
jae
mov
pushf
loop
dec
dec
popa
js
dec
cmp
mov
in
push
dec
jnp
or
dec
lods
mul
ja
mov
or
add
ficom
add
shr
leave
out
adc
les
and
scas
xchg
gs
loop
out
(bad)
lahf
jno
leave
pop
add
int3
out
cmps
xor
add
push
xchg
xchg
pop
outs
loope
mov
inc
pop
sub
or
xchg
inc
fisub
ss
ds
cmp
push
lock
push
inc
push
cwde
xor
call
sub
mov
add
js
mov
into
add
add
data16
push
dec
into
inc
hlt
ja
xor
push
sbb
dec
outs
into
pop
add
or
test
stc
mov
cs
enter
neg
add
int
sub
test
outs
lods
cld
retf
mov
sub
push
mov
adc
adc
(bad)
mov
push
scas
js
adc
rcl
pop
clc
movlps
push
xor
pop
xchg
or
xchg
sub
cmps
pop
jnp
lds
and
pop
add
aas
fld
cmp
shl
mov
and
sbb
fld
inc
inc
imul
mov
xchg
cmp
pand
mov
ror
add
inc
in
fisubr
pop
sahf
add
int3
lds
add
aas
dec
test
popa
pop
dec
(bad)
adc
or
add
lods
or
ins
or
pop
push
ficomp
out
sub
mov
call
imul
dec
je
push
inc
mov
xor
test
test
dec
mov
test
leave
mov
mov
(bad)
mov
xchg
not
stos
mov
es
mov
dec
sub
or
dec
lock
xor
sbb
int
rcr
push
jg
or
test
mov
xor
push
fild
popf
cmp
inc
jmp
fmul
lea
(bad)
jnp
je
inc
enter
push
add
push
mov
or
ret
mov
or
(bad)
xor
push
pop
fst
adc
je
mov
sub
mov
loop
outs
enter
xor
mov
cmp
push
shl
dec
jmp
ror
add
sti
outs
test
inc
icebp
pop
adc
mov
hlt
in
push
push
pop
mov
mov
cwde
lock
inc
inc
ret
sti
movs
sti
sti
test
mov
jmp
mov
mov
adc
push
xchg
or
fs
xor
push
dec
pop
sbb
xchg
mov
icebp
and
fmul
inc
aad
adc
mov
fdiv
jl
inc
ret
std
fistp
into
adc
(bad)
xchg
push
cwde
(bad)
fmul
mov
push
sub
stc
pop
jb
mov
jecxz
jge
fadd
sbb
sbb
(bad)
addr16
das
jl
inc
in
cwde
fucomip
jbe
loopne
iret
fcomp
mov
into
mov
mov
pusha
inc
ins
jb
adc
xor
fild
xor
xor
cmp
call
ins
and
xchg
ja
pop
add
pushf
(bad)
ja
cmp
gs
mov
pop
sub
add
pop
add
jbe
ucomiss
adc
mov
add
xlat
pop
sub
and
test
pop
fsubr
loop
fmul
dec
outs
mov
adc
adc
sar
dec
shl
movs
rcr
pop
mov
inc
jo
movzx
add
push
popa
imul
adc
and
stos
test
dec
arpl
js
cmps
mov
add
pushf
mov
or
xor
adc
xlat
pop
sub
ror
cmp
addr16
movs
pusha
and
xlat
pop
sub
and
sbb
test
addr16
push
inc
push
mov
ins
xchg
add
loopne
jbe
or
push
aad
rcr
lods
sysenter
inc
lahf
out
sbb
aam
inc
or
jg
dec
xor
mov
pop
add
pop
adc
or
fld
cwde
pop
je
jp
mov
dec
sub
or
jb
jo
int
inc
jnp
pop
cmp
inc
mov
adc
xlat
xchg
pusha
adc
rol
inc
popa
je
push
inc
push
xlat
pop
sub
and
xchg
mov
xlat
addr16
mov
xor
and
pop
sub
enter
mov
add
pushf
inc
int3
mov
iret
mov
xor
ror
js
push
cvtps2pd
out
fmul
push
jo
jns
lods
sti
test
pop
cmp
inc
mov
xchg
pop
sbb
push
xchg
xchg
cwde
add
sbb
mov
pop
sub
rol
add
ror
(bad)
outs
ins
add
cmp
inc
sbb
cmps
or
fadd
xor
jae
dec
add
mov
mov
xchg
inc
cwde
add
mov
add
popa
(bad)
outs
je
js
inc
shl
mov
pop
inc
repnz
dec
fsub
fsubr
jo
pop
divps
and
jmp
stos
mov
iret
pop
and
cmp
pop
ds
ins
imul
fstp
or
push
sbb
fild
push
add
adc
and
sbb
ja
fild
xor
inc
mov
add
(bad)
out
pop
enter
add
inc
mov
fadd
out
pop
inc
push
fwait
pop
mov
out
or
cmp
adc
aam
sbb
dec
fwait
or
push
xor
sbb
add
jbe
pcmpgtd
adc
push
outs
imul
scas
add
xor
loopne
adc
ja
pop
sbb
inc
jo
mov
dec
and
sbb
push
sub
dec
test
out
pop
push
popa
mov
inc
dec
paddw
inc
xor
xchg
or
pop
call
or
xchg
pop
push
or
jle
jne
push
out
add
fmul
and
enter
mov
dec
add
xchg
dec
xor
pop
sub
xchg
add
outs
inc
jo
mov
pop
punpckhdq
mov
push
or
or
popa
ins
(bad)
out
(bad)
mov
dec
cdq
fsubr
shl
pop
pop
xor
or
and
sbb
fwait
push
add
imul
xor
inc
and
mov
inc
pusha
out
lahf
sub
pop
clts
or
cmp
ins
and
sbb
arpl
popa
add
dec
hlt
scas
outs
mov
jb
in
in
fsubr
fimul
and
inc
rcl
inc
push
add
outs
mov
loopne
in
in
mov
mov
mov
popa
add
dec
imul
dec
pusha
jl
inc
push
ror
out
loopne
outs
adc
arpl
and
push
add
xchg
push
cs
call
and
ds
outs
mov
lahf
mov
pusha
pcmpgtd
adc
add
popa
adc
lea
xchg
imul
xor
sub
dec
cdq
or
es
sbb
and
push
pop
xor
cmp
call
xchg
fcmovnb
push
jb
xchg
push
call
loopne
call
ror
js
sbb
mov
fstp
call
aas
pop
or
jbe
sub
popa
or
(bad)
pusha
add
xor
inc
daa
pop
xchg
cmp
shl
lea
(bad)
sub
mov
test
arpl
and
mov
ins
cs
int
rcr
add
dec
test
lods
repnz
inc
mov
out
or
push
jb
ss
cmp
adc
dec
adc
xor
push
cmps
jbe
xor
pop
add
adc
xchg
(bad)
and
push
mov
sub
jne
push
addr16
or
bound
iret
arpl
sub
fidivr
out
cs
(bad)
add
xlat
xor
push
xchg
sbb
and
shl
pop
pop
push
out
mov
fwait
xor
or
scas
xor
pop
mov
sub
out
(bad)
mov
adc
push
jbe
inc
pop
imul
aas
or
inc
mov
outs
mov
scas
adc
jg
adc
xor
ins
pop
out
add
push
call
sub
and
sbb
pop
cs
push
xor
pusha
pop
xor
fild
ret
les
fbld
add
or
push
mov
imul
ja
adc
bound
push
add
rcl
adc
mov
or
dec
mov
push
lahf
push
inc
bound
in
cmp
push
or
sti
dec
or
inc
out
(bad)
mov
xlat
or
add
ss
xor
pop
xchg
mov
lahf
inc
add
cmp
mov
adc
inc
or
in
mov
xor
sbb
or
mov
aaa
test
push
pop
or
dec
sbb
aas
adc
jae
daa
mov
push
ja
inc
xor
cmp
mov
adc
das
or
pop
jb
pop
imul
push
push
xor
js
inc
loop
fist
rol
test
inc
push
xor
pop
jmp
xor
push
or
add
ins
push
aas
inc
and
shr
popa
jg
sub
(bad)
out
jg
loop
xchg
sub
sub
add
and
lods
xchg
pop
inc
pop
fcom
push
(bad)
jnp
test
aas
mov
sub
pushf
mov
inc
jecxz
dec
or
loop
mov
xchg
(bad)
das
enter
jp
inc
movups
pop
xlat
xlat
loop
and
push
pop
clc
jne
xor
outs
push
add
xchg
cmp
push
stos
adc
outs
push
out
cdq
test
(bad)
ds
stos
xchg
aas
js
pop
or
pop
aas
das
movs
and
pusha
stos
and
outs
iret
jb
fiadd
ja
aas
not
push
bound
push
nop
cmp
addr16
outs
and
pop
add
and
cs
or
xor
and
imul
and
mov
(bad)
inc
push
push
push
mov
push
iret
mov
inc
push
pop
(bad)
enter
add
sbb
push
jo
inc
imul
shl
add
sbb
jmp
lds
inc
mov
rcr
mov
scas
outs
call
xor
ss
mov
jo
inc
pop
push
sub
and
xor
popa
pop
dec
or
mov
mov
cmp
pop
sahf
inc
out
ins
adc
adc
adc
add
fwait
and
sahf
jno
push
sub
xor
add
push
(bad)
aas
faddp
and
push
dec
dec
pop
inc
add
add
aaa
test
dec
add
or
push
xor
out
(bad)
push
xor
mov
inc
adc
(bad)
push
cmp
movs
xchg
cwde
out
mov
and
pop
fwait
ss
aaa
add
push
ja
push
add
test
out
mov
dec
inc
adc
pop
or
iret
cmp
sbb
cmps
out
pop
add
xchg
(bad)
push
(bad)
or
or
mov
adc
xor
dec
(bad)
aas
ret
mov
xor
fist
pop
cmps
xchg
pop
cmps
idiv
and
xchg
xor
and
xchg
mov
stos
pop
iret
cmp
pop
stos
xor
or
pop
add
and
push
test
shl
or
aas
xchg
xor
iret
or
outs
mov
das
pop
prefetch
and
cmp
xlat
out
add
pop
dec
dec
xchg
xor
xor
ins
test
ss
mov
(bad)
outs
or
daa
out
bound
dec
pop
(bad)
push
add
sub
and
xor
add
inc
inc
mov
adc
jg
add
add
scas
dec
test
pop
leave
xor
add
sar
dec
pop
lahf
pop
inc
adc
outs
data16
mov
dec
add
mov
jmp
dec
mov
jne
jo
cwde
and
dec
aaa
(bad)
(bad)
frstor
out
aaa
push
mov
sbb
in
push
scas
xor
add
push
cmp
pop
stos
sbb
mov
xor
push
xchg
mov
pop
fistp
ja
aaa
adc
data16
ja
ds
loopne
push
arpl
add
pop
cs
fisttp
adc
push
sbb
or
dec
mov
xor
jmp
aaa
lahf
dec
inc
loop
inc
mov
sbb
adc
pusha
(bad)
pop
daa
pusha
adc
add
(bad)
pop
aas
ss
fadd
(bad)
aaa
jae
pop
pop
in
pop
scas
test
ja
mov
(bad)
(bad)
dec
adc
xor
mov
mov
add
mov
cmp
pop
pop
int
adc
arpl
add
fsub
loopne
scas
aaa
aam
inc
or
seta
pusha
pop
aad
scas
pop
xchg
aaa
(bad)
xchg
addr16
cmp
inc
in
adc
retf
push
jb
add
daa
imul
arpl
jg
jbe
ret
and
dec
adc
add
or
dec
aam
adc
pop
mov
mov
or
cmps
xlat
and
xor
inc
test
mov
cmps
jg
or
cmp
add
pop
test
dec
add
bound
ja
inc
xor
outs
or
outs
xor
xchg
shl
adc
popa
add
ja
jo
or
dec
ins
xchg
sbb
inc
jg
add
jne
pop
pop
fist
daa
fisttp
inc
das
mov
stos
rcr
xor
ret
pop
add
shr
outs
xor
test
and
outs
xor
add
push
sbb
bswap
imul
inc
push
popa
inc
rol
xor
push
inc
outs
dec
push
or
(bad)
pop
or
mov
add
popa
dec
xor
adc
push
pop
inc
mov
sub
lahf
mov
add
xor
add
out
ins
int3
xor
mov
aaa
and
mov
add
add
clc
idiv
sub
ss
mov
inc
out
xor
shl
fdiv
dec
fstp
test
lahf
ffree
or
xchg
sbb
bound
add
adc
inc
xor
dec
(bad)
sbb
push
jbe
mov
pop
push
ja
fisubr
aas
push
mov
mov
cmp
add
sub
or
mov
xchg
aas
bswap
movs
xchg
mov
inc
xor
xor
pop
push
aas
daa
inc
bound
mov
out
(bad)
retf
les
aaa
add
add
adc
addr16
dec
adc
xor
xlat
push
inc
and
xor
fisttp
xlat
and
daa
add
int3
sbb
jmp
jne
or
mov
dec
ror
ds
pop
sbb
push
push
fisubr
sti
outs
les
pop
dec
xor
push
mov
add
(bad)
inc
push
or
push
mov
sub
inc
(bad)
push
inc
add
popa
pop
scas
arpl
add
dec
test
inc
add
shl
scas
cmps
test
cmps
sbb
pop
cmps
aas
sub
or
and
inc
bound
xchg
stos
add
inc
rol
(bad)
mov
cmps
arpl
xor
ret
mov
outs
test
stos
inc
fild
mov
or
aas
mov
out
sbb
xor
add
adc
outs
inc
push
sub
shl
xchg
imul
(bad)
push
ss
xor
dec
xchg
xchg
pop
mov
push
adc
pop
out
inc
mov
mov
adc
pop
out
push
inc
inc
mov
xor
dec
and
cmp
dec
xor
or
ins
addr16
pop
fsub
movs
scas
sti
mov
sub
sub
pandn
mov
mov
aas
push
mov
adc
or
cmp
xor
dec
out
sti
lock
bound
aaa
push
dec
pop
shr
cmp
inc
inc
in
imul
xchg
fimul
out
adc
or
adc
adc
aas
push
push
and
in
push
js
mov
data16
adc
mov
movs
call
pop
cmps
push
sub
daa
jns
add
xor
or
ror
sub
or
(bad)
xor
shr
daa
(bad)
cwde
or
push
arpl
ror
xor
div
adc
sbb
push
mov
inc
aaa
(bad)
aas
cmps
mov
push
xor
mov
xor
adc
mov
mov
or
pusha
iret
out
push
aam
jo
imul
jb
nop
sub
xchg
pop
in
add
inc
jae
fmul
(bad)
adc
mov
push
or
ins
pop
xchg
jo
fs
aaa
sub
and
and
mov
mov
(bad)
aas
dec
scas
jo
scas
aam
addr16
dec
cmp
add
fsubr
les
sub
lahf
or
and
mov
inc
jmp
pop
je
movs
adc
xor
lahf
or
aas
pop
jo
and
aas
pop
cmp
push
addr16
jns
sbb
or
or
add
xor
mov
jg
push
and
outs
inc
cmps
adc
stos
int
inc
xlat
fistp
mov
sbb
daa
xchg
sub
sub
out
inc
das
xchg
inc
push
mov
push
pop
xchg
aaa
out
cmp
pop
inc
into
push
pop
rcl
dec
mov
sbb
inc
(bad)
mul
and
add
push
or
xor
aam
mov
retf
pop
(bad)
out
lods
sbb
inc
xchg
jecxz
fistp
lea
push
pop
imul
das
pop
ins
pop
mov
test
rcr
nop
or
mov
add
(bad)
imul
fdiv
jo
pop
pusha
adc
out
or
mov
or
sub
pusha
xor
push
(bad)
pop
test
mov
aas
dec
pop
mov
cmp
mov
test
xor
pop
lds
mov
add
push
sahf
nop
(bad)
outs
inc
cmp
cmp
dec
pop
push
aaa
push
sub
xor
push
pusha
aas
mov
addr16
and
jmp
xchg
sub
shl
push
jecxz
inc
pop
bound
sub
shl
adc
(bad)
xor
das
mov
or
jbe
add
div
enter
add
xlat
mov
jg
(bad)
aam
lahf
outs
inc
ins
daa
xor
sub
jo
adc
pop
add
addr16
(bad)
push
mov
xchg
xchg
mov
push
xor
jb
sbb
outs
pop
push
scas
cmc
or
or
je
jae
add
ss
lea
pop
dec
outs
xor
push
add
ins
test
mov
jmp
and
sbb
pop
retf
or
bound
push
pop
dec
cmps
call
and
pop
(bad)
xchg
or
add
out
xor
push
pop
inc
ss
xor
les
push
sub
ret
das
out
out
xchg
lea
movs
aas
aaa
or
sub
daa
mov
or
xchg
xor
sub
test
or
ins
je
cmps
aaa
xor
out
push
sub
or
jae
mov
mov
scas
out
sbb
pusha
mov
out
sub
push
dec
out
sbb
pusha
pop
jg
xor
aaa
inc
adc
aaa
ja
sbb
dec
mov
out
xlat
pusha
adc
sub
mov
dec
movs
inc
aaa
test
maskmovq
idiv
not
inc
popa
and
dec
outs
in
inc
das
inc
inc
adc
test
or
pop
aaa
xor
inc
add
sub
out
(bad)
xor
mov
xor
daa
cmp
adc
sub
push
sbb
adc
outs
xchg
mov
fisubr
daa
and
pop
push
popa
add
xchg
neg
bound
inc
pop
neg
sub
call
das
or
add
bound
loop
fdiv
out
out
add
xlat
mul
push
fidivr
popa
or
das
jno
adc
ds
daa
push
xchg
idiv
cmp
outs
adc
popa
sbb
ins
mov
mov
ja
int3
sub
fs
bound
sbb
div
dec
inc
sub
inc
aaa
mov
test
xchg
xor
getsec
inc
or
jae
add
mov
add
mov
add
xor
daa
int
pop
lea
out
aaa
mov
ins
fbld
mov
or
out
mov
dec
mov
adc
daa
jg
sbb
iret
xlat
iret
or
add
iret
daa
push
ret
(bad)
jo
sub
xchg
fmul
dec
xor
or
mov
xchg
iret
push
adc
and
iret
aaa
sbb
js
ds
ss
pop
bound
daa
iret
xchg
inc
sbb
test
movlhps
test
pop
daa
push
mov
mov
test
aas
ss
jb
daa
or
pop
aaa
adc
ins
push
daa
neg
(bad)
rol
push
xor
adc
inc
cmps
xchg
iret
mov
add
push
adc
addr16
les
inc
fbstp
daa
jne
sub
sub
aas
test
daa
iret
test
pop
bound
test
inc
pop
rcl
xchg
pusha
xor
outs
aaa
pop
inc
mov
test
lods
ret
(bad)
or
pop
inc
addr16
aaa
popa
popa
or
out
xor
pop
inc
sbb
mov
ret
xchg
fisub
push
xor
pop
dec
test
jne
aaa
dec
sbb
jo
out
aam
int3
(bad)
mov
sub
inc
cmp
loop
push
push
inc
xchg
dec
imul
fsubr
push
cmps
cmps
ins
movs
test
outs
cmps
pusha
popa
add
cmps
xor
outs
cmps
mov
mov
adc
xchg
daa
pusha
inc
popa
test
fwait
add
and
inc
sbb
add
pop
mov
mov
sub
div
daa
mov
mov
scas
mov
scas
mov
and
xor
ja
adc
xchg
xchg
sub
(bad)
arpl
sbb
cmps
sbb
mov
inc
add
rcl
fisttp
xor
xchg
pop
cmp
dec
sub
adc
push
dec
out
add
movs
lahf
out
cld
dec
and
add
mov
sub
push
inc
push
popa
add
inc
cmps
inc
sbb
or
or
or
adc
inc
leave
push
pop
push
add
push
sub
xchg
cmovae
fmul
pop
adc
sub
push
inc
or
mov
sbb
cmps
push
mov
xchg
test
sub
dec
sub
test
inc
(bad)
jnp
ret
push
imul
loop
(bad)
outs
push
outs
push
imul
or
xchg
or
sbb
bound
pop
das
push
ja
mov
ja
xchg
add
push
sub
aaa
pushw
inc
(bad)
out
push
popa
add
push
adc
add
mov
in
cmp
push
dec
inc
inc
mov
cs
pop
push
cmp
add
push
push
dec
(bad)
cmp
rcr
sub
jne
inc
cmps
cmps
or
cmp
movs
xchg
or
inc
aas
sbb
sub
cmp
dec
popa
adc
push
daa
inc
inc
mov
daa
sub
pop
and
or
and
daa
cmp
adc
mov
mov
push
sub
add
pop
out
bound
adc
daa
inc
xchg
pop
icebp
mov
imul
push
outs
mov
xor
inc
add
mov
ins
sbb
pop
movs
outs
(bad)
movs
inc
pop
test
and
es
pop
daa
cmp
jae
pop
xchg
push
pusha
or
mov
push
mov
or
dec
sub
xor
inc
add
xlat
daa
lock
leave
or
xchg
mov
pop
pusha
int
add
(bad)
es
add
push
imul
sub
out
pop
pop
shl
jb
cmp
and
push
sbb
add
lahf
les
lock
or
aaa
movs
adc
dec
lea
add
sbb
push
adc
jp
out
sub
outs
ss
dec
cmps
inc
outs
sbb
daa
add
add
fs
push
aas
adc
inc
aaa
cmp
mov
mov
mov
bound
scas
xor
shl
aaa
mov
adc
aas
adc
popa
fisttp
jge
dec
add
pop
outs
les
inc
outs
andnps
or
pop
sbb
add
dec
inc
iret
xor
inc
sub
xor
pusha
and
(bad)
cmp
mov
dec
mov
pop
add
push
mov
daa
lea
pop
sub
fist
add
sub
pop
aaa
pop
dec
add
(bad)
xor
cmps
les
or
pop
xor
jmp
add
pop
aaa
pop
outs
xor
inc
es
out
sub
sbb
dec
lods
inc
xchg
pop
xor
das
dec
(bad)
das
cmp
rcl
das
ja
fs
jae
mov
sti
push
add
pop
inc
lock
dec
(bad)
xchg
push
or
ds
fwait
test
pop
pop
xchg
dec
fisttp
push
jbe
fwait
push
imul
movs
xchg
add
pop
cmps
aaa
sub
mov
pop
cmp
ins
int
mov
imul
das
add
sbb
test
ret
scas
dec
cmp
or
mov
pop
ins
add
adc
aaa
xchg
imul
inc
bound
mov
pop
xchg
pop
mov
push
pushf
cmps
pop
mov
jmp
outs
inc
pop
mov
xchg
mov
or
pop
inc
add
jmp
outs
push
mov
das
push
jmp
push
xor
pop
shl
and
in
add
inc
mov
add
cmps
dec
test
mov
ss
shr
aaa
push
mov
(bad)
out
jae
rcl
popa
xor
pop
(bad)
mov
inc
add
add
imul
push
je
out
or
fistp
mov
imul
or
or
pop
xchg
imul
xchg
or
movs
jecxz
fbstp
inc
xchg
(bad)
(bad)
movs
jmp
js
push
(bad)
xchg
out
out
sbb
inc
sub
xchg
mov
aas
or
xor
(bad)
xor
add
add
das
sub
or
mov
add
dec
mov
lods
mov
ja
stos
add
inc
mov
in
mov
jmp
cmp
lods
jmp
mov
xchg
fisub
aas
cmps
hlt
add
xor
inc
xchg
cmp
mov
nop
scas
push
aas
mov
and
jmp
rcr
push
test
push
add
add
inc
add
push
sbb
inc
lds
add
inc
scas
or
ins
adc
jg
mov
(bad)
and
jmp
add
mov
sbb
imul
push
inc
push
mov
imul
loopne
test
inc
push
sbb
sbb
imul
add
arpl
ins
add
sbb
ja
cmps
lea
ja
adc
idiv
pop
mov
mov
ins
xor
ud0
mov
pusha
ja
inc
push
mov
cmp
inc
xor
(bad)
xchg
adc
ror
pop
xchg
out
ret
adc
pop
dec
fcmovb
xor
fwait
jb
push
outs
adc
push
xlat
fs
push
sti
push
adc
test
add
inc
fisub
test
pop
and
adc
pop
movs
mov
push
iret
xchg
or
pop
div
adc
push
xchg
mov
(bad)
test
inc
iret
adc
(bad)
jg
push
push
sub
mov
or
add
sbb
inc
and
push
push
or
daa
arpl
push
and
lahf
sbb
mov
out
ror
retf
and
shl
add
(bad)
cmp
pop
jae
fadd
cmp
dec
mov
push
or
dec
aas
imul
xor
add
sub
daa
adc
push
inc
addr16
or
rcl
xchg
inc
rcpps
push
inc
scas
pop
outs
mov
xor
fdiv
rcr
push
es
popf
dec
or
aas
fbld
rol
add
sub
mov
mov
push
test
dec
daa
dec
lahf
loopne
or
pop
and
xchg
jb
fadd
sub
sahf
pop
cmps
inc
pop
cwde
pop
add
(bad)
aas
mov
or
jbe
and
adc
xor
mov
outs
xchg
aaa
sbb
ret
loopne
outs
syscall
nop
sbb
mov
je
rol
add
mov
adc
aaa
pop
les
and
bound
or
loopne
cmps
femms
cwde
or
or
ja
and
add
add
or
adc
adc
pop
pop
mov
adc
nop
sti
push
sub
pop
test
xlat
push
mov
jbe
repz
iret
and
and
cmp
iret
iret
inc
mov
add
test
bound
xchg
inc
cmps
pusha
mov
push
dec
sub
inc
retf
sub
(bad)
iret
mov
inc
add
add
out
mov
and
add
sbb
xchg
adc
jae
add
or
maskmovq
mul
pop
and
xor
push
jb
pop
sbb
or
call
xor
dec
lea
xor
mov
inc
dec
(bad)
out
push
out
daa
add
sti
jb
cs
pop
lds
fcmovnbe
jg
ja
dec
pop
sub
push
lahf
sbb
popa
add
dec
and
adc
dec
addr16
(bad)
mov
push
mov
cli
xor
push
outs
das
xchg
mov
cmps
cs
mov
outs
out
sbb
fs
mov
mov
or
mov
push
lea
inc
(bad)
test
pop
in
ins
add
dec
dec
arpl
loop
xchg
xchg
xor
mov
aas
or
outs
jg
lahf
pop
pop
push
inc
fwait
add
jg
scas
push
jnp
movs
cmp
add
push
jmp
xchg
inc
seto
lock
push
inc
cmovae
dec
imul
fwait
or
aaa
push
mov
sub
jg
dec
push
or
mov
or
sub
add
in
push
(bad)
push
push
or
dec
sti
js
or
xchg
dec
mov
xchg
mov
outs
ins
repz
push
mov
sub
(bad)
mov
(bad)
outs
or
pop
sub
pushf
xor
add
adc
aaa
pop
aas
pop
sub
ficom
inc
(bad)
aaa
add
fimul
dec
stos
sub
mov
(bad)
xor
xchg
sbb
add
ja
ins
sbb
ja
add
rol
push
das
add
sbb
inc
out
xor
and
rol
ja
add
fldcw
ja
cmp
push
dec
or
or
xchg
push
sbb
div
inc
cmp
pop
mov
add
add
shl
je
push
lahf
das
push
inc
add
add
shl
mov
fst
add
add
xor
xor
ss
adc
ss
daa
cmp
sbb
xor
fwait
test
aaa
mov
int
ja
bound
es
push
mov
xor
xor
loop
mov
add
(bad)
dec
jmp
inc
add
cmp
jne
mov
pop
inc
and
or
ret
lock
call
inc
fdiv
repnz
not
inc
mov
xchg
(bad)
or
test
dec
ins
push
mov
rcr
das
sub
dec
adc
and
bound
scas
add
xor
adc
pop
leave
xchg
xor
dec
adc
sbb
repz
sub
loope
popa
cmp
pop
add
cmps
jnp
sbb
dec
adc
add
call
iret
jmp
xor
add
outs
xchg
adc
inc
cmp
or
add
jno
adc
imul
mov
push
or
xor
pop
or
mov
and
push
outs
mov
lds
dec
xor
adc
adc
push
les
lods
popa
jb
mov
out
nop
lsl
fcom
xchg
jecxz
push
enter
mov
or
push
jns
jae
pop
add
bound
inc
jmp
jbe
sti
aaa
or
jecxz
xchg
pop
mov
or
xor
js
ins
mov
ins
shl
jnp
cmp
add
mov
cmp
add
sbb
xchg
pop
dec
fld
mov
xchg
cmp
sbb
(bad)
(bad)
mov
mov
pop
or
inc
outs
inc
pop
mov
xor
push
test
gs
pop
sbb
adc
mov
sub
jl
sub
xchg
or
push
mov
inc
push
mov
mov
cmps
xor
mov
push
(bad)
mov
stos
in
test
or
pop
or
jle
fxch
add
dec
mov
adc
cmp
jne
xchg
xor
stos
push
push
mov
xchg
scas
jmp
mov
test
lock
(bad)
lea
xchg
pop
pusha
mov
outs
scas
(bad)
sti
push
bswap
pop
lods
dec
jo
test
or
and
push
jo
mov
nop
mov
mov
stc
jle
jae
push
dec
adc
push
xchg
iret
test
mov
(bad)
in
xchg
or
hlt
fwait
shr
push
dec
lock
lock
out
jo
push
jns
mov
cmp
lock
adc
ss
sub
pop
les
cdq
les
aas
dec
ret
sbb
or
jg
add
mov
into
sub
lahf
add
sub
add
and
ror
cmp
test
sbb
dec
inc
(bad)
jnp
ror
push
retf
test
add
sub
lock
cmp
sbb
ss
mov
or
pop
dec
jecxz
xchg
jno
mov
lods
xor
lea
and
sti
add
dec
jne
and
inc
jecxz
je
mov
jmp
ss
inc
jnp
inc
push
test
mov
pop
(bad)
jp
mov
aaa
popa
jo
outs
or
mov
test
mov
sbb
out
(bad)
push
pushf
pushf
pushf
cmp
or
or
pushf
pushf
pushf
pushf
or
push
cmovle
sahf
lock
icebp
repnz
dec
dec
dec
hlt
cmc
div
dec
dec
dec
dec
clc
stc
cli
sti
dec
dec
dec
dec
cld
std
(bad)
dec
dec
dec
loopne
loop
dec
dec
dec
dec
in
out
dec
dec
dec
dec
call
dec
dec
dec
in
in
out
out
dec
dec
dec
dec
rcl
rcl
dec
dec
dec
dec
aam
(bad)
xlat
dec
dec
dec
dec
fcomp
fcmovu
dec
dec
dec
dec
(bad)
(bad)
dec
dec
dec
dec
rol
ret
dec
dec
dec
dec
(bad)
(bad)
dec
dec
dec
dec
enter
dec
dec
dec
dec
int3
int
iret
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
movs
movs
cmps
cmps
dec
dec
dec
dec
test
stos
stos
dec
dec
dec
dec
lods
lods
scas
scas
dec
dec
dec
dec
nop
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
cwde
cdq
call
popf
sahf
lahf
dec
dec
dec
dec
add
dec
test
dec
dec
mov
dec
dec
mov
dec
dec
jo
jb
dec
dec
dec
dec
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
ins
ins
outs
outs
dec
dec
dec
dec
push
push
push
push
mov
push
push
pop
pop
ret
jp
and
dec
pop
daa
mov
mov
rol
sahf
xchg
loop
daa
inc
mov
inc
mov
out
mov
cmp
inc
(bad)
bound
dec
pop
in
push
xor
inc
repnz
daa
dec
jns
fist
jmp
daa
ins
lahf
jne
loopne
adc
mov
add
mov
daa
pusha
shr
inc
push
or
into
mov
push
adc
jp
ror
lods
jge
sbb
push
cwde
loope
fstp
or
mov
adc
outs
mov
push
jae
jb
ins
dec
push
les
pop
cdq
dec
inc
jne
ins
fs
(bad)
aas
int
push
gs
ret
adc
inc
dec
dec
dec
inc
dec
imul
sub
mov
adc
daa
mov
hlt
into
idiv
pop
jp
movs
repz
sahf
xchg
daa
dec
jnp
dec
inc
mov
push
dec
add
dec
cmp
push
and
inc
mov
sbb
adc
push
or
and
inc
push
mov
sbb
sbb
enter
test
fisub
inc
push
popa
shl
mov
sub
inc
gs
jbe
mov
popa
enter
fistp
add
inc
add
mov
inc
fstp
inc
aad
add
and
ss
gs
jne
je
popf
or
fcomp
lock
push
push
movs
fwait
ja
sahf
vcmpngtpd
jae
inc
mov
mov
or
jno
xchg
popa
je
push
adc
push
popa
jbe
outs
stos
bound
sar
and
jnp
lahf
jns
jne
xor
sub
aam
daa
lods
pavgb
mov
jno
pop
mov
ja
sub
outs
bound
daa
shl
dec
and
enter
or
scas
pop
ss
imul
or
and
mov
fistp
and
jne
pop
and
push
xchg
outs
lahf
cwde
inc
or
push
ins
popa
cmp
adc
xor
or
dec
add
dec
push
push
push
fwait
popa
jne
ss
jge
add
ss
dec
ins
jmp
dec
cvtdq2ps
int3
pop
aaa
scas
call
add
enter
imul
or
mov
lock
out
inc
fmul
loop
add
inc
loope
jecxz
jecxz
push
test
je
sub
ds
mov
sbb
push
jp
cmp
jg
mov
(bad)
out
jl
dec
cmp
jne
cmp
test
cmp
leave
and
ror
inc
and
ins
je
and
dec
add
mov
jmp
pop
or
dec
jno
mov
ret
mov
xor
std
call
jne
push
cmp
ss
nop
aam
mov
mov
push
jne
mov
mov
and
or
push
js
pop
push
loop
loopne
xor
sar
jge
jne
mov
or
mov
adc
mov
sub
mov
dec
in
inc
stos
in
in
into
xor
jo
inc
enter
add
enter
jmp
inc
mov
sahf
hlt
mov
outs
in
cmp
or
int3
ss
es
les
iret
cmp
push
push
(bad)
clc
push
push
add
inc
mov
jnp
(bad)
xor
out
mov
push
dec
push
cmp
es
inc
mov
xor
cmps
das
inc
cs
test
(bad)
sbb
icebp
movs
and
xor
sbb
cli
iret
popf
sub
jb
inc
xchg
sbb
or
dec
jne
outs
shl
or
shl
shr
inc
push
clc
or
ret
js
cld
mov
movs
cld
pop
(bad)
sub
fimul
inc
test
movs
mov
ret
add
pop
call
add
dec
sbb
sbb
lock
or
pop
movzx
or
jo
inc
pop
jo
push
mov
adc
stc
cli
mov
call
jecxz
cdq
popa
lock
mov
jbe
or
movs
push
loopne
inc
cmc
sbb
cmp
xchg
sbb
sub
push
bound
fmul
adc
test
stos
test
leave
stos
mov
xor
mov
pop
mov
mov
cwde
shl
jp
ins
aas
mov
push
iret
test
loope
cmps
jo
sub
imul
jmp
or
aam
or
cdq
inc
dec
sub
inc
imul
sbb
inc
mov
sbb
call
dec
jle
jl
inc
sub
xchg
fdivr
aad
std
shl
dec
mul
jmp
sbb
mov
adc
lods
int3
mov
mov
adc
pop
or
adc
lock
mov
mov
fs
cs
lock
and
push
(bad)
in
pop
mov
inc
in
push
xor
enter
add
xchg
or
test
mov
clc
add
outs
das
and
(bad)
rol
jmp
sbb
jb
ds
repz
arpl
and
adc
fsubr
mov
imul
js
dec
or
mov
inc
jbe
movs
rol
es
pop
inc
fmul
push
adc
inc
jmp
jnp
lea
cdq
push
and
jnp
dec
push
dec
jb
mov
pop
test
push
sbb
dec
arpl
mov
mov
(bad)
out
mov
jbe
sub
mov
mov
cmp
movs
inc
sub
mov
outs
lods
push
sbb
mov
jge
je
in
dec
sti
das
and
jne
xor
jmp
push
in
add
(bad)
adc
pop
stos
or
sbb
inc
rcl
mov
or
fadd
pop
mov
add
retf
aas
cmp
retf
inc
pop
mov
or
pusha
adc
add
ja
push
loopne
pop
into
mov
(bad)
aaa
imul
push
and
pop
ret
jbe
inc
add
dec
in
rcl
daa
pop
push
add
cmp
jmp
xchg
in
add
xlat
rol
jb
add
pop
push
push
icebp
iret
pusha
inc
push
mov
xchg
cmp
pushf
sub
cmp
mov
push
sbb
daa
pop
pop
cmps
shr
cli
or
dec
test
cmp
xlat
push
jge
add
(bad)
fbstp
jecxz
mov
mov
ds
das
fadd
sti
add
loop
mov
jo
stc
(bad)
cld
push
add
sbb
jmp
dec
test
jne
mov
sbb
pusha
inc
hlt
arpl
imul
adc
xchg
mov
and
fld
pop
pop
ret
push
sub
loopne
sti
in
push
les
inc
and
mov
jo
enter
mov
adc
lods
inc
push
rcr
inc
rcr
ja
inc
lods
sbb
ret
lahf
jnp
push
pop
mov
daa
test
cmps
adc
mov
dec
inc
daa
push
and
pusha
mov
and
out
inc
push
sub
pop
aaa
pop
inc
lds
movs
shr
cmp
xchg
test
fimul
push
daa
out
pusha
mov
mov
dec
pop
(bad)
push
daa
dec
lahf
es
and
sti
sub
add
(bad)
mov
(bad)
dec
sub
pusha
ficom
cmp
lea
mov
ins
xchg
fadd
dec
jae
call
adc
sbb
repnz
test
inc
xor
das
ja
add
push
or
iret
pop
push
ja
mov
add
sbb
rcr
inc
test
scas
pop
pop
enter
das
dec
inc
adc
popa
and
mov
dec
dec
dec
jg
push
jg
sub
inc
out
leave
xchg
add
in
cmp
jo
push
push
inc
push
push
add
push
(bad)
dec
push
das
dec
loopne
add
daa
inc
mov
inc
mov
ret
test
add
bound
add
es
mov
cmc
add
clc
test
je
mov
gs
add
popa
pop
cmp
add
outs
(bad)
jg
out
jne
inc
add
cmp
jne
xor
jne
and
pop
dec
or
push
fbstp
pop
inc
mov
sbb
or
popa
repz
into
adc
xchg
jge
cmp
inc
mov
mov
jge
hlt
sbb
mov
mov
lock
cmp
sub
and
in
xor
cs
inc
push
mov
test
push
sub
and
push
retf
push
add
pop
pop
dec
add
pop
cmp
movs
or
sbb
mov
fiadd
pop
mov
ja
jo
push
inc
xor
movs
pop
enter
or
dec
mov
bound
mov
mov
scas
add
or
fsubr
inc
inc
mov
ss
pop
push
aad
xchg
(bad)
aaa
push
inc
dec
add
test
mov
cs
push
add
fwait
sbb
add
push
pop
enter
mov
aaa
sub
adc
outs
mov
dec
aas
outs
jo
test
push
inc
mov
daa
pop
dec
lds
outs
and
mov
add
pop
push
cmps
jne
cmps
dec
sti
xchg
pusha
and
xchg
adc
fadd
xchg
dec
daa
mov
dec
sbb
daa
push
daa
xor
pusha
ja
dec
pop
and
outs
xlat
dec
nop
mov
jg
pop
dec
scas
add
mov
das
lods
scas
add
cmps
fnstenv
mov
das
sub
push
dec
push
sub
push
xor
or
push
test
add
dec
mov
ja
inc
aas
push
fwait
sbb
test
xchg
add
ficom
je
push
pop
push
mov
push
pop
push
push
test
pop
push
pop
push
dec
daa
inc
outs
jo
mov
pop
push
addr16
in
mov
push
xchg
or
pop
push
test
pop
pop
xlat
mov
dec
pop
pop
js
ret
out
jmp
inc
je
int3
mov
cli
xchg
mov
cmp
add
dec
jne
xchg
xor
and
mov
out
dec
mov
jg
push
stos
je
cli
pop
add
cmps
or
xchg
add
movs
loope
in
cwde
in
in
xchg
sub
cmc
pop
test
js
add
sbb
out
sub
je
sahf
call
mov
shl
dec
add
ins
jo
xor
sub
xchg
ret
jp
push
mov
imul
fldcw
leave
pop
loopne
add
and
add
adc
dec
fstp
fwait
ss
jne
(bad)
retf
push
fisub
xor
and
or
sub
enter
mov
popf
mov
and
add
adc
sub
cwde
ret
pop
jo
push
lock
aas
ins
(bad)
jnp
jo
xor
fwait
cmps
call
fstsw
sahf
jae
out
mov
std
sbb
loope
into
imul
call
push
jae
popa
scas
and
push
fs
clc
(bad)
sti
mov
mov
pop
or
clc
lock
fucomi
adc
or
adc
(bad)
mov
push
add
sti
jg
test
jle
cmp
jl
aas
es
jnp
push
ss
orps
and
mov
mov
jnp
add
push
mov
in
call
(bad)
cmp
push
icebp
(bad)
movs
sbb
cld
pop
je
das
loopne
adc
inc
jg
dec
and
xchg
push
mov
and
jmp
pushf
cmp
jmp
push
enter
aad
pushf
movs
mov
cld
add
iret
jnp
mov
push
mov
and
inc
ins
popf
in
lock
movs
es
lock
je
xchg
sub
js
pop
jle
cmp
cmp
xor
hlt
dec
dec
push
add
push
shl
loope
or
movd
pop
(bad)
call
cmps
mov
sahf
xlat
add
gs
push
ins
jg
nop
pop
xchg
stc
fwait
xor
ret
je
sub
test
pop
add
pop
xor
sub
adc
xor
jae
add
adc
sar
and
cli
adc
iret
dec
int3
push
rcl
imul
add
add
push
in
ret
sar
jne
sub
mov
pop
jmp
pop
mov
out
fdiv
in
lahf
mov
loopne
lods
in
shr
aam
mov
call
mov
into
inc
add
int3
fstp
scas
push
push
jnp
mov
jne
jne
xchg
xchg
ret
inc
pop
popf
loope
add
and
aam
xor
push
dec
leave
xchg
dec
ins
popa
ins
xchg
dec
leave
xchg
push
leave
xchg
dec
leave
popa
jae
mov
fs
push
or
std
sahf
cmps
pop
ja
cmp
xchg
shl
in
out
lahf
lahf
addr16
pop
pop
in
inc
jl
adc
or
inc
in
fnstenv
jo
sbb
add
inc
jg
cmp
adc
cmp
dec
and
push
sbb
jne
pop
pop
or
dec
test
cmp
or
lock
mov
mov
pop
and
movs
jae
inc
out
sub
add
out
mov
movs
cmp
pop
mov
shl
in
ret
popf
mov
push
xchg
jne
mov
test
add
push
out
inc
clc
psubsw
add
test
leave
call
pop
mov
mov
dec
(bad)
test
je
(bad)
loope
dec
in
inc
add
sub
pop
push
retf
or
mov
pop
mov
aam
(bad)
cmp
jmp
cmp
shl
mov
xchg
cmp
inc
addr16
je
ja
arpl
pop
jno
push
or
out
add
popf
xor
enter
lock
jns
clc
cld
imul
mov
leave
fld
faddp
dec
fsub
ror
in
and
loopne
(bad)
aaa
and
fsub
push
or
cmp
push
and
and
and
and
xor
push
dec
stos
sub
sub
jg
hlt
ins
add
add
cmp
add
pop
dec
je
cmc
add
pop
mov
add
inc
inc
push
mov
add
sbb
inc
add
add
and
add
inc
add
into
push
add
push
not
and
retf
sahf
pop
ins
(bad)
pop
pusha
repnz
mov
call
and
jecxz
mov
neg
inc
inc
es
cmp
cs
and
jo
dec
es
int3
add
xchg
pop
mov
lock
xor
dec
and
and
mov
ins
lods
fmul
and
inc
jo
xchg
pop
jb
fadd
pop
jb
mov
pushf
fsub
aaa
pop
mov
das
add
lahf
pop
pusha
leave
and
in
xchg
pop
pop
jnp
mov
scas
lods
loope
sbb
call
or
enter
jb
and
in
dec
pop
cmp
push
mov
and
test
dec
scas
lods
loopne
les
test
lock
inc
pop
jb
and
mov
xchg
sbb
lahf
pop
mov
xchg
dec
cs
and
test
dec
pop
jb
add
sub
mov
xlat
push
lock
in
sbb
not
jl
jb
and
mov
jo
xor
dec
cs
retf
push
leave
and
call
sbb
out
test
sbb
aas
pop
dec
pop
jb
test
cmp
xchg
mov
sbb
ins
sub
and
mov
mov
and
jb
and
in
dec
pop
and
jl
leave
and
dec
mov
and
je
xchg
mov
pop
dec
pop
jb
cwde
fsub
das
mov
lock
in
imul
test
leave
and
or
imul
fnstenv
mov
ins
dec
pop
jb
mov
inc
fist
int3
or
dec
pop
jb
and
leave
and
mov
jns
fidiv
and
xor
js
es
int3
or
pop
adc
clc
dec
loope
es
mov
in
inc
loop
dec
repnz
dec
fcomp
pop
jns
and
in
xchg
dec
es
xchg
ror
lods
mov
movs
xchg
dec
repnz
lock
test
cs
in
or
push
mov
dec
aam
call
xchg
mov
fimul
mov
jmp
hlt
push
jb
push
in
ja
pop
je
mov
xchg
dec
in
out
pop
pop
leave
and
test
xchg
imul
lock
pop
fsubr
mov
inc
pop
enter
jb
or
mov
repz
movs
xor
dec
cs
xor
js
xchg
xchg
pop
les
mov
scas
xchg
xchg
pop
pop
pop
les
and
mov
clc
xchg
pop
jb
jl
cld
inc
das
mov
in
cli
not
cld
cmp
inc
scas
lods
mov
(bad)
pop
or
int3
adc
pop
jns
and
(bad)
in
dec
es
movs
fmul
and
pusha
lods
dec
xchg
je
mov
repnz
int3
xor
sub
cdq
in
sub
js
in
fimul
add
pop
mov
adc
mov
dec
es
add
mov
dec
dec
pop
jb
cwde
hlt
push
pop
xor
cld
cmp
daa
sub
mov
les
dec
mov
nop
call
mov
xchg
rol
xchg
dec
es
movs
call
xor
or
xchg
pop
pop
ror
not
cwde
fsubr
cdq
in
sbb
pop
movs
push
lock
dec
in
xor
pop
lods
loopne
xlat
pop
mov
xchg
dec
scas
pop
xchg
fdiv
adc
and
fcomp
adc
pop
xchg
fcom
sub
jo
xchg
pop
jb
hlt
and
daa
dec
cs
xlat
push
lock
call
sbb
and
mov
js
pop
ret
dec
rol
lahf
pop
leave
and
int3
ss
jne
jg
sbb
cmp
les
sahf
cmp
cmp
mov
xor
cs
inc
push
das
inc
aaa
jns
mov
pop
cmc
mov
je
loopne
test
inc
add
push
inc
cmp
das
mov
or
(bad)
iret
jge
xor
fs
adc
fxch
add
sbb
cld
in
(bad)
out
fist
mov
dec
test
jl
inc
and
jl
inc
lea
sbb
mov
cmp
push
or
je
movs
add
cwde
mov
cwde
pop
dec
mov
test
fsubr
mov
sub
pop
lock
jle
lea
movs
jle
(bad)
cs
push
out
cdq
ror
ret
pop
sahf
mov
sub
jp
jne
add
mov
imul
mov
adc
inc
fcomp
cmp
jae
adc
popf
jb
aam
sbb
aam
push
pop
sbb
clc
add
adc
push
lods
mov
xchg
loope
int3
call
or
ret
adc
out
out
pop
push
dec
mov
call
(bad)
cmp
lock
into
int3
mov
push
sbb
mov
ss
xor
daa
imul
pop
das
push
dec
jb
ja
or
add
ss
jg
fcom
outs
push
xor
adc
cmp
cs
fwait
sbb
pop
mov
xchg
pop
adc
sub
retf
add
jbe
pcmpeqw
add
sti
mov
adc
cs
mov
das
mov
xchg
add
pop
ja
mov
inc
inc
xor
xchg
ja
fdivr
mov
sbb
dec
add
pminub
fwait
neg
adc
or
imul
push
pop
adc
push
inc
bound
adc
adc
sub
inc
adc
pop
jg
jmp
scas
jo
mov
add
fwait
cmp
jbe
aaa
outs
and
jb
lods
std
adc
outs
ins
das
add
outs
sbb
bound
sbb
aaa
push
and
jae
xlat
push
cmps
jae
cmp
jae
mov
outs
addr16
push
rcr
pop
ja
jbe
(bad)
and
retf
das
pop
adc
je
fild
jae
js
ins
and
addr16
mov
fsub
es
cmp
sbb
aas
inc
das
inc
pop
loopne
mov
lar
inc
dec
fld
push
gs
xchg
inc
or
or
or
push
cmp
xlat
push
pop
sbb
bound
push
xchg
push
daa
push
push
add
out
jb
rcr
aas
xor
pop
and
daa
ja
xor
pusha
iret
rcl
in
ds
adc
fadd
push
adc
push
(bad)
scas
int
adc
aaa
jne
adc
sbb
mov
sahf
jo
add
daa
mov
xchg
push
push
xchg
and
and
pop
das
and
lds
aaa
mov
or
iret
maxps
sbb
push
mov
push
bound
pop
mov
icebp
mov
and
dec
sar
outs
push
bound
mov
aas
sbb
(bad)
fisub
push
inc
out
je
bound
push
sahf
inc
imul
outs
ja
pop
fadd
xchg
add
or
ss
xor
adc
mov
pop
xlat
add
adc
ror
je
add
stos
outs
sbb
pop
shl
xor
js
adc
aaa
jno
or
push
repz
les
test
adc
ins
jbe
aas
sub
sbb
jb
pop
or
pop
data16
and
pop
xchg
pop
adc
xchg
jmp
pop
pusha
mov
xchg
sbb
out
push
retf
nop
ret
fbstp
imul
das
pop
adc
xor
sbb
mov
adc
imul
out
imul
ins
adc
das
es
mov
xchg
jg
jae
xor
add
add
fisttp
js
rcr
mov
push
adc
loopne
push
sub
xor
adc
js
loopne
jmp
outs
js
mov
or
sbb
mov
(bad)
fstp
jp
daa
push
and
dec
fisttp
xor
jne
dec
lods
sbb
imul
pop
or
inc
push
fwait
imul
jb
push
add
imul
shr
mov
dec
rcl
pop
outs
xor
and
sbb
or
outs
bound
pop
xor
mov
aas
outs
outs
lds
push
ret
arpl
clc
add
pop
ror
outs
sub
daa
pop
add
pop
pop
fs
nop
add
add
xchg
and
addr16
push
xchg
pop
pop
add
retf
imul
enter
jbe
mov
cs
arpl
mov
daa
add
dec
addr16
mov
(bad)
sub
ins
das
lods
push
and
add
xchg
pop
es
xlat
scas
inc
push
fcom
xor
push
cmp
imul
add
and
popa
(bad)
movhps
push
mov
sbb
call
add
ins
in
mov
call
imul
mov
outs
push
js
add
xor
inc
mov
jno
sbb
jbe
jecxz
jno
inc
lds
pop
xor
(bad)
mov
stos
add
add
test
(bad)
push
shl
mov
das
pop
adc
test
mov
sub
mov
je
adc
or
ins
jo
mov
sbb
inc
es
dec
cmps
xchg
lea
addr16
xchg
cmp
out
imul
sbb
or
adc
(bad)
arpl
(bad)
pop
loope
add
sub
lods
daa
sub
jno
xor
(bad)
imul
fisubr
add
sbb
xor
xchg
cmp
inc
cmp
push
scas
fs
popa
xchg
jo
loope
dec
push
add
adc
and
adc
sbb
jne
push
daa
pop
xlat
outs
lahf
inc
add
imul
scas
jmp
push
bound
mov
lahf
or
mov
sbb
pop
test
sub
les
inc
mov
mov
ins
mov
inc
daa
jo
and
sub
mov
retf
pop
sub
mov
lea
aas
inc
mov
fcom
mov
ja
ja
sub
push
dec
pop
and
bound
jg
fcmovnbe
mov
adc
out
movs
in
pusha
pop
sbb
xchg
push
loop
sub
bound
push
and
out
push
jg
add
sub
idiv
sub
xor
mul
sub
pop
out
jg
outs
daa
adc
mov
lds
arpl
mov
js
inc
imul
out
push
inc
inc
xchg
sbb
outs
ffreep
push
sub
mov
test
iret
inc
pop
popa
div
sbb
pop
push
mov
ja
pop
mov
push
jbe
(bad)
addr16
and
push
mov
pop
jo
lds
inc
out
inc
packuswb
lahf
movs
fimul
dec
mov
iret
mov
or
sbb
dec
jg
sbb
sub
packssdw
daa
rcl
scas
ficom
dec
sbb
jo
arpl
rcr
or
out
add
push
mov
pop
shl
je
add
das
xor
adc
pop
or
dec
cmps
xchg
movs
add
data16
fadd
xlat
sbb
scas
dec
and
inc
sahf
xchg
fldenv
add
ja
mov
or
inc
jne
or
ja
bound
bound
add
add
arpl
imul
xchg
outs
add
and
inc
popf
mov
(bad)
cmp
xor
sub
jne
in
sbb
mov
(bad)
repnz
int
mov
jle
add
adc
jp
dec
adc
inc
push
lods
je
jmp
cmps
and
lahf
push
sub
inc
(bad)
pop
cmps
mov
push
mov
jae
ja
push
pop
mov
inc
adc
pop
shl
inc
xchg
push
add
cmp
scas
lock
sbb
fcom
gs
addr16
sbb
pop
add
rol
test
fidiv
outs
and
mov
(bad)
js
mov
dec
(bad)
data16
or
or
das
dec
jg
shl
pushf
imul
mov
ins
out
pop
mov
jg
xchg
sbb
aaa
inc
pop
pop
ja
sbb
add
addr16
inc
dec
iret
stos
addr16
pop
outs
pop
sbb
(bad)
pop
xor
addr16
and
or
dec
jg
lahf
xchg
or
ja
ja
frstor
push
sbb
pop
jbe
imul
in
inc
in
jo
daa
jno
jo
(bad)
(bad)
sbb
inc
cmp
int3
popa
cmp
(bad)
mov
jmp
inc
xlat
add
outs
push
pop
mov
jg
daa
test
adc
paddq
sbb
in
cmp
imul
cmps
push
loop
mov
jg
add
inc
cmp
adc
mov
mov
daa
jnp
fidiv
xor
aas
bound
xor
adc
push
and
ins
xchg
push
mov
or
aas
mov
inc
adc
das
(bad)
jne
jo
test
and
dec
ins
lahf
(bad)
inc
mov
test
inc
sbb
cs
fbld
aas
sub
fwait
int3
add
pop
dec
js
dec
inc
call
mov
push
sbb
push
cmp
inc
data16
sbb
outs
mov
pop
(bad)
and
and
add
xchg
scas
jnp
jp
xchg
push
scas
jnp
jg
add
movs
pusha
sbb
arpl
push
out
fist
int
call
adc
stos
mov
sbb
je
xor
xchg
add
pop
dec
push
mov
das
jbe
stos
and
pop
das
sbb
inc
aaa
sub
popa
out
je
and
inc
loopne
fcmovnbe
and
lea
daa
xlat
test
pop
stos
arpl
lahf
sbb
data16
xchg
dec
add
stos
xchg
test
nop
push
pop
inc
test
iret
imul
dec
sub
adc
rcl
outs
daa
dec
add
push
(bad)
pop
gs
test
add
loopne
or
ins
inc
sub
push
xchg
sub
lahf
xchg
mov
push
adc
and
mov
xor
xlat
bound
lods
xchg
sbb
sbb
ret
mov
xchg
sbb
ja
repz
mov
(bad)
sub
add
imul
iret
das
add
shl
adc
inc
test
jae
bound
sbb
xor
es
iret
add
inc
and
mov
out
out
rcl
out
dec
sbb
push
add
sar
stos
mov
test
pop
mul
or
fldenv
adc
call
inc
inc
add
mov
add
sbb
scas
je
adc
xor
inc
inc
movs
inc
dec
adc
test
pop
inc
and
or
sub
xchg
icebp
test
dec
test
adc
out
inc
inc
ret
sbb
adc
pop
leave
and
aaa
or
jg
add
(bad)
mov
push
shr
pop
add
xchg
cmps
pop
sbb
sub
or
int
aaa
stos
pop
mov
jno
pop
fisub
cmps
outs
shr
aas
cmps
sbb
pop
outs
cmp
fsub
scas
sbb
mov
sub
dec
cwde
dec
fstp
fs
xchg
ja
sbb
add
lea
ins
push
or
lds
and
mov
ja
jno
jnp
mov
push
xchg
xor
sbb
mov
mov
or
ins
(bad)
mov
(bad)
pop
push
pop
jno
and
sbb
adc
jmp
nop
pusha
pop
(bad)
mov
scas
jno
inc
ret
xlat
xor
adc
in
or
push
(bad)
in
and
xor
jecxz
jns
push
das
sbb
retf
add
outs
sbb
and
add
loope
es
xlat
fisub
mov
pusha
fist
mov
mov
(bad)
jnp
xor
xor
lahf
xlat
ins
and
mov
les
xlat
inc
and
pop
bound
arpl
xor
inc
cmp
lods
cwde
pop
xchg
ins
and
mov
fadd
cmps
jo
mov
xchg
fs
movs
adc
add
test
or
add
out
je
xchg
scas
ret
push
je
test
ret
out
add
aas
inc
inc
or
dec
xor
xchg
add
pop
mov
(bad)
push
imul
jp
neg
popa
addr16
push
lahf
mov
push
jmp
pop
inc
jb
jmp
ins
push
test
mov
mov
mov
push
pop
(bad)
add
mov
inc
bound
mov
xor
mov
mov
pop
dec
inc
out
je
shl
mov
dec
sub
fisubr
imul
leave
das
jnp
and
or
dec
repz
dec
(bad)
aam
or
adc
cs
daa
sbb
push
sub
mov
inc
ja
mov
or
lahf
retf
adc
adc
add
sbb
sbb
scas
pop
mov
stos
mov
nop
ss
mov
cmps
push
mov
ja
sub
ja
xchg
adc
add
pop
fcomp
fwait
cmp
adc
enter
push
add
popa
das
jae
sub
jae
mov
push
jno
inc
cmp
inc
(bad)
mov
fs
stos
pop
stos
adc
(bad)
mov
(bad)
push
xchg
and
outs
jmp
imul
xlat
push
pusha
sub
xchg
je
loopne
pop
adc
lahf
sbb
test
jae
out
or
nop
fadd
repz
aad
or
sub
ins
(bad)
dec
shr
mov
cmps
dec
retf
adc
packssdw
sub
loopne
and
inc
ret
pop
xlat
aaa
sbb
sbb
adc
adc
add
cmp
xor
pop
sbb
or
jb
xchg
push
pop
cmp
cwde
(bad)
and
xchg
push
test
das
push
arpl
jbe
adc
cmps
xor
cmps
and
cdq
ss
lahf
and
add
adc
mov
test
push
jnp
js
add
js
push
addr16
sub
mov
xchg
lock
adc
mov
xor
mov
adc
adc
ja
mov
pop
sbb
sbb
sub
outs
pop
call
cmp
inc
and
add
je
push
sbb
(bad)
(bad)
daa
mov
add
mov
mov
jg
xor
dec
push
sub
popa
mov
cs
test
adc
mov
mov
sar
inc
sbb
ror
(bad)
(bad)
pop
sbb
and
xchg
test
xor
fs
push
adc
aaa
jmp
sub
arpl
je
xchg
outs
or
adc
adc
(bad)
dec
dec
dec
jne
sti
xchg
xor
shl
shl
jle
inc
mov
fisttp
in
(bad)
mov
mov
xchg
jae
fsubr
add
inc
fcmove
mov
xor
imul
dec
mov
mov
sbb
jbe
mov
arpl
inc
lds
push
gs
pop
ja
xlat
and
xor
addr16
imul
(bad)
bound
fisub
or
rcl
inc
addr16
xor
push
xor
aas
imul
sbb
dec
add
ret
jg
and
rol
call
jg
pop
lds
xor
and
shr
xchg
scas
mov
add
rol
inc
pop
xchg
push
mov
jnp
push
push
dec
push
jo
ss
xor
sti
mov
adc
mov
nop
lahf
pmaxsw
push
inc
jecxz
or
imul
adc
and
test
or
xchg
mov
lea
dec
cmps
sbb
aaa
add
nop
inc
scas
(bad)
and
mov
push
pop
jno
push
or
ja
inc
cmps
pop
pop
adc
outs
stos
pop
addr16
ins
push
push
test
pop
adc
outs
mov
push
movs
pop
jg
pop
push
pop
pop
jnp
jp
mov
(bad)
xchg
mov
ja
fimul
xor
jmp
add
popf
ror
xor
(bad)
imul
adc
sbb
adc
stos
xor
push
add
pop
and
xor
xor
mov
sub
fisub
push
adc
jo
sbb
ror
sbb
loopne
repz
and
shl
push
add
push
pop
out
jbe
sub
adc
add
mov
jo
push
push
out
addr16
js
adc
xchg
arpl
or
out
push
add
out
sub
sub
out
addr16
and
or
mov
shl
pop
or
jno
mov
mov
adc
add
pop
je
or
and
ret
pop
sub
pop
mov
pop
pop
jl
xchg
xchg
jg
push
xor
punpcklwd
int3
sub
mov
adc
ud2
or
and
xor
fidiv
pop
pop
js
ja
cs
inc
jmp
movs
add
push
dec
sbb
add
loop
jmp
cmp
and
pop
mov
or
push
inc
jecxz
int3
adc
add
addr16
mov
sahf
and
mov
out
lea
push
and
gs
inc
sub
dec
repnz
jne
test
pusha
aaa
dec
mov
nop
jmp
mov
(bad)
jnp
ins
pop
add
push
jmp
or
hlt
shl
in
lods
cdq
mov
pusha
in
in
add
jg
add
add
or
mov
cmps
inc
adc
cs
fidivr
or
sbb
adc
mov
mov
mov
adc
cmp
(bad)
or
outs
mov
or
fdiv
push
sbb
mov
sbb
fisttp
shr
or
push
or
inc
adc
jne
mov
loopne
xchg
js
adc
inc
inc
int
sbb
pop
aam
dec
clc
movzx
sub
ins
inc
pop
pop
sbb
pop
pop
and
loope
and
aaa
ja
mov
les
(bad)
and
mov
popa
bound
pop
pop
push
adc
jge
or
jge
add
(bad)
add
outs
adc
hlt
adc
leave
mov
mov
loopne
ror
sub
and
call
jl
jle
adc
dec
or
test
mov
dec
sar
hlt
pop
adc
sbb
xchg
adc
and
add
sbb
test
cmp
jnp
lds
xor
jmp
or
mov
and
cmp
js
idiv
inc
or
mov
xlat
or
xchg
mov
or
mov
aaa
les
cmp
dec
mov
loop
in
nop
enter
push
jmp
icebp
and
mov
inc
adc
loopne
or
cmp
lea
pop
lock
call
pop
or
dec
in
dec
jbe
sbb
clc
add
inc
js
retf
dec
rol
xchg
mov
add
and
and
aad
inc
dec
fmul
push
jns
scas
sahf
jne
jae
sbb
add
jge
inc
sub
nop
xlat
inc
fsub
clc
mov
push
loope
push
sub
or
in
adc
addr16
(bad)
sti
pusha
bound
or
rcr
push
js
je
sub
jg
cmp
sete
mov
xor
xor
add
add
sub
push
push
cmps
test
cmps
aas
adc
add
fist
pop
fsubr
call
add
stc
mov
mov
push
mul
addr16
add
inc
mov
loopne
jmp
rol
push
and
notrack
ret
or
add
push
or
mov
mov
add
mul
leave
mov
cmp
mov
or
or
xchg
mov
cmp
test
adc
in
xor
xor
or
inc
jne
xlat
or
aad
jne
xor
jg
fsub
cmp
das
nop
pop
push
jl
(bad)
cs
ret
test
xlat
jge
xchg
add
addr16
xchg
(bad)
loopne
fdivr
stos
and
or
mov
ins
js
sbb
jge
ret
cdq
js
loop
gs
push
out
ds
pop
push
in
pop
sub
dec
stos
mov
pop
in
jb
enter
in
js
adc
lock
sub
pop
mov
je
inc
jmp
jmp
mov
sbb
pop
rol
inc
inc
inc
adc
cmp
loopne
and
add
sub
adc
xchg
cmp
and
mov
pop
mov
movs
inc
out
loope
mov
popf
cs
daa
jge
test
add
das
pusha
dec
push
add
mov
add
inc
push
adc
cmp
inc
mov
and
mov
pop
xchg
pop
fadd
das
or
push
add
mov
push
xchg
push
imul
ret
and
push
mov
push
daa
xchg
xor
popf
sub
ja
inc
mov
or
dec
ret
add
shr
dec
or
lods
in
jne
cmc
ror
push
lahf
pushf
es
push
cmps
imul
add
pushf
inc
cmp
jl
adc
push
(bad)
imul
jmp
adc
fisubr
aas
jne
xor
hlt
ds
xor
adc
and
mov
xor
lea
hlt
aaa
in
sub
pusha
div
jl
icebp
sub
in
scas
or
popf
dec
xchg
pusha
loope
or
dec
test
jne
(bad)
jge
inc
jmp
sub
shl
jne
(bad)
xor
loopne
int
adc
sub
sbb
sbb
out
scas
add
xlat
sbb
xchg
xchg
push
lock
add
sahf
or
iret
dec
lock
fs
jbe
mov
mov
pop
jmp
jb
je
sub
mov
or
xor
or
push
and
ds
(bad)
fsubr
xor
fcmovb
cmp
imul
popa
pop
adc
loopne
movs
shr
sub
repnz
jle
cmp
cld
or
je
jae
add
xchg
mov
jb
add
mov
jbe
jo
sbb
outs
fimul
or
sbb
push
or
mov
or
in
in
mov
mov
loopne
or
sbb
rol
and
mov
sbb
outs
and
(bad)
lea
ret
add
and
or
xor
or
callw
xchg
int3
fcmove
sub
scas
cmp
cmp
ins
xor
mov
mov
imul
es
ins
inc
pop
enter
and
mov
jbe
arpl
mov
ss
or
push
pusha
adc
xchg
push
jmp
inc
sub
rcr
sbb
inc
jge
xchg
out
sub
jo
mov
mov
xor
xor
cmp
mov
aaa
mov
cmp
xor
imul
jne
sbb
push
sbb
sbb
mov
xchg
mov
xchg
retf
in
sbb
mov
nop
ins
shl
xor
cmp
dec
lods
(bad)
mov
mov
lods
add
iret
mov
sub
push
or
dec
mul
inc
enter
adc
mov
push
push
pop
sbb
xchg
inc
out
push
movs
xor
push
xor
xchg
and
mov
jb
xchg
adc
imul
and
(bad)
jo
lock
sbb
mov
jecxz
dec
test
mov
repz
int
jb
cmp
push
scas
test
sub
repnz
add
and
or
push
aad
int
add
sub
or
or
xchg
push
jmp
jl
mov
xchg
or
call
xchg
test
shl
test
add
mov
in
je
add
pop
nop
popa
fist
je
adc
adc
rol
mov
loope
jecxz
push
or
jns
nop
imul
out
test
loope
aad
lds
pop
jo
outs
sbb
loop
mov
test
and
inc
fs
in
and
div
push
mov
push
daa
jbe
popa
jmp
or
and
aad
cld
(bad)
sbb
dec
cmp
ret
test
pop
or
adc
lea
rcl
inc
mov
mov
ins
push
mov
pop
sub
push
pop
cs
inc
push
push
clc
clc
pop
lds
dec
push
out
mov
scas
in
push
out
sub
pop
pop
shl
into
out
lock
pop
mov
sbb
xor
sub
sbb
lods
or
mov
loopne
test
mov
ins
sub
push
or
xchg
lock
rcl
dec
jb
inc
mov
rol
inc
mov
sub
mov
cmp
xor
mov
retf
in
cmp
xor
mov
dec
pop
hlt
sub
pop
mov
mov
mov
mov
mov
popf
and
mov
cmp
fistp
sbb
int3
dec
push
inc
std
loopne
mov
xor
mov
adc
fsubr
add
sbb
cmp
and
aas
push
push
push
push
sbb
jbe
(bad)
imul
cmps
and
jno
pop
xchg
aam
push
stos
js
jp
inc
mov
pop
and
inc
mov
inc
jp
call
dec
jg
xchg
js
push
xchg
sub
jb
cmps
pop
stos
or
jp
adc
and
pop
ss
xchg
xchg
jmp
mov
dec
aaa
lahf
mov
xor
inc
xor
hlt
cmp
aas
push
push
adc
jbe
inc
lahf
rol
add
add
push
jg
imul
inc
and
inc
cmp
in
sub
cmp
cmp
pop
xor
dec
cmp
push
xchg
xchg
pop
das
jg
jne
push
scas
repnz
dec
popa
push
sbb
xchg
dec
adc
push
scas
dec
icebp
clc
sub
sbb
push
rol
shl
lahf
das
cmp
pop
push
xchg
and
shl
push
(bad)
sub
push
pop
add
jnp
(bad)
mov
jbe
push
gs
mov
mov
pop
add
push
add
fcmovnb
leave
test
mov
add
pop
aad
pop
and
jmp
add
adc
rcr
push
(bad)
out
inc
(bad)
pop
jne
and
clc
test
in
mov
scas
shr
add
cmp
jle
mov
ja
jmp
popa
in
mov
cmovns
or
fisub
cmp
inc
push
loop
jmp
sar
pop
jge
mov
or
sub
push
mov
es
add
xor
push
pusha
and
xor
cmp
push
test
pop
xor
fnstcw
cwde
cmp
add
(bad)
xor
cld
leave
div
imul
and
clc
shl
mov
mov
cld
push
movzx
outs
xchg
loop
test
jl
ror
pop
xor
fdiv
and
mov
mov
mov
(bad)
aad
pop
adc
inc
inc
dec
sahf
int3
fsub
(bad)
ds
scas
xor
push
fdivr
xor
cdq
fcomp
sti
scas
sbb
dec
aam
sbb
lock
mov
lods
sub
jmp
shr
cs
xor
push
and
add
and
mov
sub
cmc
add
add
pop
dec
xor
push
sbb
cmps
adc
bt
inc
sar
je
or
and
xchg
push
lock
shl
psubq
mov
aam
jns
or
aas
scas
pop
jecxz
pop
dec
jg
and
cmp
out
or
xor
push
out
add
inc
jnp
push
iret
mov
in
cld
push
es
aaa
inc
xor
dec
dec
fisttp
inc
pop
ret
fiadd
imul
add
imul
push
mov
and
mov
dec
in
cmps
in
ja
push
or
push
inc
or
mov
std
inc
ins
xchg
xchg
inc
movs
sti
fstp
sub
jae
xor
push
loopne
inc
mov
jle
sub
sub
(bad)
adc
push
cmp
out
adc
add
loop
es
call
inc
adc
adc
ja
lock
daa
call
lods
inc
cmp
je
push
mov
xor
sub
test
adc
and
or
sub
inc
xlat
(bad)
and
push
pop
invd
pop
sub
add
mov
fwait
popa
cmp
ja
xchg
daa
dec
or
cld
dec
or
sti
(bad)
pushf
fiadd
inc
rcl
sub
cs
adc
adc
push
sar
rcl
mov
mov
sbb
sar
jmp
sub
pop
popf
lock
das
sbb
xchg
jge
int
into
jmp
outs
push
cld
fldcw
mov
jecxz
loopne
cmp
adc
pushf
adc
add
pop
aaa
js
das
ins
dec
and
cmp
mov
push
pop
das
clc
dec
test
jl
js
cmps
cli
inc
xor
push
mov
xlat
cmp
movs
jle
(bad)
fmul
sub
sbb
(bad)
mov
fcom
or
add
std
adc
cmp
inc
dec
jne
add
les
xlat
mov
or
and
jae
push
test
push
jge
aaa
fiadd
out
pop
lds
adc
test
mov
jbe
lahf
lahf
xor
jmp
mov
cmp
jmp
adc
push
cmp
mov
outs
das
(bad)
adc
sub
dec
push
add
retf
mov
nop
lahf
clc
rcr
int3
scas
cld
(bad)
popf
retf
sub
mov
adc
dec
jl
inc
std
outs
jne
cmp
jmp
add
dec
jne
inc
or
(bad)
out
cmp
or
adc
cli
cdq
fcom
lods
cmp
mov
mov
(bad)
cld
dec
sub
push
les
into
arpl
mov
les
call
add
rcl
inc
sbb
test
jg
movs
mov
sbb
in
adc
dec
fdiv
jbe
clc
test
add
push
mov
or
sbb
and
mov
arpl
pop
ret
mov
dec
cmp
jg
je
ins
je
or
stos
sbb
or
je
or
jmp
dec
cmp
ins
mov
add
mov
jmp
or
ret
or
add
push
popa
fnsave
xor
cmp
sbb
aas
sti
push
fldlg2
adc
cmp
add
push
sbb
pushf
aas
loop
enter
cmp
or
lods
cmp
shr
jl
dec
mov
outs
dec
or
xor
cmp
ret
mov
inc
xor
mov
test
arpl
sub
or
ret
mov
add
inc
sbb
mov
cmp
add
add
out
cmp
cmp
jmp
add
or
sbb
cmc
or
nop
sbb
inc
mov
ret
or
call
xor
jae
mov
add
shl
jmp
ret
dec
scas
je
jmp
jle
jae
ins
jmp
pop
dec
lock
jbe
adc
or
ret
push
cmp
test
imul
inc
mov
xchg
push
dec
fldenv
cmps
pusha
sbb
push
popa
aam
or
add
test
inc
jl
xchg
(bad)
jmp
aas
lahf
sub
cmp
push
inc
data16
mov
cmp
movq
mov
and
jge
xchg
es
into
push
jns
std
and
cmp
sub
pop
movs
imul
pop
mov
push
outs
mov
retf
sti
(bad)
jg
mov
push
push
push
push
imul
dec
data16
je
jbe
(bad)
mov
lahf
sub
or
inc
add
add
not
inc
push
dec
inc
push
or
jo
in
or
jg
ins
ret
jns
out
test
pop
mov
fdivr
xor
out
shr
push
inc
sub
inc
add
sahf
data16
push
xchg
mov
mov
data16
mov
push
cmps
out
mov
ss
ss
cmp
push
int3
sti
call
loopne
js
fs
push
int
sahf
data16
call
dec
xchg
mov
cld
or
sar
out
and
shl
loope
repz
sahf
lock
push
retf
add
mov
mov
and
inc
dec
clc
(bad)
inc
ins
jne
push
gs
jb
je
jb
adc
ret
call
outs
outs
ins
fs
imul
mov
pop
or
sub
xchg
dec
outs
addr16
ss
jl
mov
push
jne
je
push
jns
pop
add
push
fs
push
inc
add
inc
inc
jnp
sahf
xchg
dec
mov
or
daa
daa
iret
xor
test
or
inc
pop
mov
pop
pop
lock
add
gs
fs
jae
cmp
cs
fs
je
fs
aaa
or
push
dec
add
ins
push
or
ret
inc
cmp
pop
lock
dec
mov
push
das
fcmovb
xlat
inc
or
fs
add
ja
mov
push
jb
jae
div
pop
dec
enter
add
jnp
data16
add
push
inc
lea
mov
inc
add
pop
adc
jbe
je
outs
adc
adc
or
loope
and
push
inc
jb
je
imul
or
jno
loope
aam
inc
add
pop
inc
js
popa
arpl
and
in
out
adc
dec
outs
push
js
dec
nop
push
pop
adc
push
out
inc
repnz
inc
(bad)
imul
mov
push
sbb
repz
sbb
add
mov
out
and
pusha
add
inc
add
rol
adc
ins
adc
and
lea
call
push
pusha
push
xor
inc
xor
(bad)
in
push
inc
or
ins
ins
dec
jae
fst
imul
push
dec
shl
jae
loopne
and
pop
fwait
aam
int
fidiv
test
rcr
jecxz
pop
into
or
add
fs
fnstenv
sbb
(bad)
and
sbb
dec
sbb
loopne
ret
sbb
sti
mov
pop
add
add
stos
add
add
mov
movs
mov
in
or
add
es
sbb
cmc
pusha
xchg
sbb
daa
retw
pop
mov
add
js
sub
inc
(bad)
cmp
or
cmp
and
(bad)
push
hlt
aaa
rcr
xor
aaa
and
xor
push
loope
jne
sar
aas
add
jno
sar
aad
inc
xchg
sbb
loope
and
mov
xor
push
enter
or
xchg
sbb
cmp
and
jae
push
mov
idiv
push
(bad)
xor
repnz
add
pop
inc
hlt
mov
sbb
or
adc
dec
adc
lods
adc
cli
outs
dec
shl
out
outs
pushf
popa
nop
lds
push
call
inc
mov
sbb
and
cmc
dec
cld
mov
ins
or
jle
adc
lea
xor
loope
jmp
dec
or
jmp
lahf
mov
ror
lea
pop
int3
add
push
outs
push
push
aad
add
cmp
jg
cmp
ja
inc
jbe
ffree
pop
sahf
cwde
aam
test
popa
mov
jecxz
sub
add
inc
pop
mov
jge
cmc
mov
push
pop
add
inc
pusha
dec
jp
pop
or
sbb
add
cmp
or
xadd
jae
repz
xchg
adc
(bad)
xlat
dec
sub
stos
fdivr
cld
mov
stos
dec
mov
es
mov
xchg
push
das
or
mov
inc
sti
mov
sti
mov
adc
dec
sbb
mov
add
aas
jae
fisttp
(bad)
popa
sbb
lock
lock
retf
cmp
test
or
mov
loopne
pop
jmp
add
push
stos
adc
mov
sbb
ja
mov
call
pop
icebp
dec
mov
push
inc
jle
hlt
sub
dec
jge
cmp
cmp
hlt
add
sbb
add
sbb
dec
push
cmps
add
cmps
jle
idiv
in
cmp
loopne
into
aam
repnz
inc
lods
and
sbb
fucomi
mov
jg
add
sbb
jp
dec
fwait
inc
pusha
fcom
clc
xchg
mov
dec
fistp
ins
pop
sbb
test
mov
fld
rcr
sbb
adc
sub
push
pop
lock
push
ret
hlt
adc
cmc
or
dec
dec
sbb
call
add
lods
mov
mov
daa
out
pop
adc
daa
rcr
ret
cwde
dec
sub
and
scas
enter
test
cmp
(bad)
test
ror
loop
sub
lock
jl
ins
add
or
lock
and
cmp
ds
push
aas
call
add
aam
pop
pop
adc
loop
rcr
repz
dec
xchg
push
push
mov
(bad)
cdq
add
jmp
sbb
or
js
or
dec
fmul
sub
sub
rcr
pop
cwde
add
int
sbb
xchg
jnp
add
jle
adc
fcomp
sar
mov
inc
retf
cmp
sti
fs
dec
adc
inc
int3
push
push
xor
fisub
sbb
xchg
leave
jns
pusha
xor
xchg
(bad)
jo
int
and
adc
dec
xor
ret
mov
daa
and
dec
das
ja
rol
(bad)
jl
dec
jle
adc
xor
and
js
das
data16
je
mov
sar
add
add
inc
adc
add
pop
and
xchg
daa
int
mov
nop
ror
loopne
or
jno
jmp
fcomp
sub
add
inc
test
pop
pop
iret
mov
push
and
sbb
cmp
xlat
jno
out
jo
sar
test
fdivr
or
push
push
cwde
sbb
sar
paddw
ds
rcl
add
adc
outs
enter
lods
add
inc
push
sti
push
mov
lock
daa
jo
rcl
inc
mov
neg
ret
dec
je
push
sub
dec
adc
xor
or
into
shl
(bad)
hlt
std
in
aad
add
bound
add
es
push
pop
or
jne
mov
push
nop
nop
jle
rcr
lea
sbb
cmp
mov
jmp
cmp
and
xchg
mov
add
push
inc
sub
pop
fcmovb
xor
fistp
adc
pusha
inc
mov
test
cli
cmp
add
push
mov
fstp
pop
and
cpuid
pop
data16
cmp
hlt
mov
jmp
pop
and
es
jae
mov
push
cmp
dec
test
icebp
imul
xor
pop
imul
adc
or
mov
xlat
mov
into
jo
enter
mov
fstp
and
iret
enter
push
jbe
add
add
dec
dec
data16
xor
xchg
sti
or
and
xor
adc
or
sub
stos
stos
jl
sbb
jle
jmp
push
add
outs
idiv
je
retf
inc
mov
je
ins
xor
leave
test
out
pushf
or
repnz
jne
add
aad
add
adc
pop
mov
test
or
sbb
movs
pop
(bad)
push
xchg
mov
ror
mov
add
jae
test
xor
inc
jae
mov
pop
mov
mov
or
and
pop
data16
rcl
and
mov
adc
imul
pop
pop
and
ja
mov
and
sbb
xor
jmp
mov
popa
mov
xchg
or
ret
retf
and
push
or
pop
pop
add
pop
jne
call
mov
inc
and
add
fcomp
inc
(bad)
(bad)
cmp
pop
push
inc
test
jns
add
mov
fs
(bad)
ffreep
jne
add
push
cmp
inc
add
sub
add
movq
ror
pop
adc
jbe
loopne
test
ror
jecxz
idiv
pop
lds
sbb
adc
mov
xchg
mov
sbb
mul
mov
or
add
add
push
ss
push
sub
mov
or
add
jmp
pop
in
or
inc
call
ins
pop
and
imul
fabs
js
and
mov
rcr
pop
inc
and
pop
addr16
mov
ror
scas
aad
aaa
push
inc
jl
or
imul
inc
pop
jne
test
fimul
inc
dec
or
fild
cwde
rol
cmp
pop
inc
sub
ins
sbb
cmc
pop
pop
stc
mul
les
pusha
cmp
or
pop
test
jne
sub
call
inc
add
sbb
sub
iret
icebp
pusha
sub
loopne
dec
sub
sub
mov
popf
sub
pusha
(bad)
movs
ret
push
add
or
ins
dec
add
in
test
pop
add
js
sbb
scas
rcl
ins
pop
(bad)
popa
xchg
outs
dec
in
inc
das
push
shr
in
imul
xchg
dec
dec
je
das
sbb
xor
pop
or
inc
aad
dec
dec
clc
xor
js
push
mov
inc
dec
dec
mov
adc
pop
sub
adc
push
push
mov
clc
inc
cli
inc
push
add
clc
xchg
pop
lock
clc
sub
adc
(bad)
cmp
popa
mov
test
cmp
clc
clc
pop
and
and
dec
inc
sbb
add
adc
std
lds
dec
add
and
jo
and
jg
jbe
loope
sbb
jecxz
into
dec
inc
inc
in
dec
js
jge
pop
and
mov
into
dec
adc
inc
aad
inc
nop
push
ret
push
pusha
sbb
(bad)
stos
cmp
(bad)
arpl
pusha
cmc
pop
pusha
movs
je
(bad)
adc
mov
inc
(bad)
popf
fisubr
ret
clc
mov
shl
ror
pop
(bad)
fld
movs
and
and
pop
leave
mov
sbb
les
pop
and
sub
cwde
clc
mov
push
popa
bound
pop
or
push
pop
mov
in
fist
loop
popa
xchg
lock
mov
push
cmps
push
aaa
add
inc
test
xchg
inc
cwde
inc
loope
push
cmp
popa
add
es
sbb
inc
mov
xor
mov
dec
or
imul
test
pop
and
push
iret
xor
pop
rol
nop
inc
cmp
out
cs
or
sub
(bad)
jmp
or
or
int3
retf
lds
dec
add
(bad)
cmp
js
or
loopne
or
arpl
add
sbb
clc
mov
push
inc
fs
pop
push
les
fbstp
gs
xor
addr16
iret
cmp
out
sub
leave
cmp
cs
mov
or
ins
fs
int3
push
adc
adc
adc
xor
xor
add
inc
mov
in
jne
je
and
nop
jb
lods
or
xor
shl
cmp
add
rcl
sub
and
add
loopne
xchg
add
cwde
dec
mov
and
mov
mov
test
gs
hlt
push
mov
fld
add
inc
dec
jne
mov
mov
(bad)
fisttp
dec
test
jle
mov
add
lea
cmp
add
mov
inc
dec
jne
xor
ror
daa
inc
ss
sub
mov
push
xor
inc
jl
pop
ss
popa
rep
add
add
push
xlat
mov
pop
push
mov
xchg
dec
test
sbb
xor
cmp
ror
shr
xchg
push
ret
cmp
or
(bad)
ja
iret
mov
add
mov
stos
das
sbb
add
in
or
push
sbb
mov
push
in
cmp
loop
dec
cld
das
repnz
or
inc
lods
adc
jle
pop
push
jns
add
sar
add
pop
call
test
adc
lea
call
in
lock
(bad)
clc
and
add
sti
xchg
outs
ja
aaa
add
inc
add
jg
cmps
fidiv
inc
add
and
pop
cmp
push
pusha
push
adc
shr
sub
inc
sub
or
sub
xor
add
fldenv
or
add
shl
pop
add
in
dec
call
add
add
or
add
add
cmp
pop
data16
(bad)
mov
ficom
push
jmp
adc
add
sbb
mov
lods
or
call
sub
(bad)
loop
push
add
imul
mov
and
add
pop
inc
test
jg
add
cmp
jg
aam
sub
sub
cmp
add
push
xchg
jno
loope
ffree
fdivr
push
sub
icebp
lea
adc
add
idiv
mov
fild
mov
pusha
test
(bad)
jne
in
div
push
pop
(bad)
xor
sub
mov
or
fcomp
cmp
sub
mov
or
add
leave
sti
push
add
push
or
out
ss
jle
mov
pop
jnp
push
add
or
mov
add
ret
sub
jmp
outs
cmp
clc
std
jbe
cmp
mov
xor
loope
das
fsubr
in
enter
int
fnstsw
lsl
pop
push
sub
xor
add
push
(bad)
xor
imul
xor
fcomip
cli
add
and
cmp
dec
or
push
push
cmp
(bad)
imul
pop
aaa
in
jbe
jmp
cmove
push
popa
push
adc
adc
push
ins
pop
arpl
mov
sbb
les
push
xchg
mov
ins
pop
xor
ins
xlat
clc
cmp
fistp
inc
arpl
mov
xlat
sbb
add
mov
push
lea
pop
lods
rcr
cmps
rcl
push
cwde
add
in
add
call
sahf
imul
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
push
stos
dec
push
push
push
push
push
dec
pop
pop
pop
popa
bound
addr16
imul
(bad)
jmp
jo
jb
je
jbe
js
jp
xor
xor
sub
lahf
mov
jnp
les
fs
pop
xor
movs
movs
enter
(bad)
inc
add
jl
mov
cmp
nop
push
imul
and
inc
sar
ins
inc
and
pop
mov
lods
ins
aas
jl
inc
aaa
jbe
push
add
cs
jne
jg
(bad)
jmp
push
gs
sti
add
inc
fistp
push
push
sub
push
inc
outs
push
gs
fbstp
jl
push
push
inc
popa
imul
ret
in
je
arpl
outs
addr16
jl
in
je
push
xchg
fisubr
sbb
pop
push
add
or
arpl
movs
aaa
dec
je
jo
push
mov
xor
shl
push
in
mov
lock
pop
jne
inc
jne
add
outs
pop
sbb
mov
pop
push
je
jo
pop
dec
jl
or
pop
inc
in
and
or
inc
mov
jecxz
pop
pop
sub
push
push
push
dec
loope
jnp
ds
dec
jl
wbinvd
add
retf
fisttp
and
or
dec
jo
cmp
sbb
es
cmp
mov
inc
add
jo
ret
lds
pop
add
jmp
mov
adc
mov
dec
and
and
xor
dec
dec
xor
push
inc
sub
jne
inc
dec
push
push
xor
inc
inc
push
jb
xchg
and
push
inc
cmp
lahf
xchg
mov
dec
imul
add
gs
add
ins
imul
adc
in
push
add
add
inc
cmps
pop
mov
rcr
and
clc
cmps
inc
push
xor
and
jo
ins
jle
or
xchg
xchg
cmp
push
ficom
dec
xor
cmp
xor
add
xor
mov
inc
or
jb
pop
dec
sahf
into
call
xor
imul
outs
jb
test
cmp
add
cdq
jae
or
push
out
lods
mov
test
jo
pop
jb
jns
stos
jg
push
in
data16
mov
loopne
jb
outs
pop
jg
push
pop
push
sub
outs
js
inc
imul
ja
sbb
adc
add
and
inc
pushf
popa
ins
ins
xchg
movs
cs
adc
dec
add
inc
mov
mov
cmovae
and
jb
pop
and
pop
mov
lods
pop
aas
or
ins
jne
test
es
xor
das
ins
call
mov
jno
aas
xchg
jno
test
jne
inc
mov
daa
mov
mov
jge
cs
mov
and
cmp
push
aaa
nop
push
shl
cdq
je
mov
mov
xor
or
dec
ret
imul
aas
jle
ror
sbb
cwde
mov
(bad)
loopne
add
sbb
sbb
inc
or
xor
and
add
push
dec
or
mov
ret
addr16
jns
cdq
or
or
mov
loopne
inc
or
or
xchg
pop
and
xor
out
mov
clc
ja
mov
adc
lock
rcl
mov
mov
add
cmp
xchg
retf
xor
call
jge
fadd
cmp
mov
fiadd
xchg
add
ficom
addr16
mov
or
mov
mov
adc
add
jecxz
test
outs
mov
adc
scas
js
mov
mov
movs
or
aam
jno
ins
iret
pop
sbb
popa
adc
mov
test
add
jbe
mov
dec
xor
test
sbb
adc
inc
sbb
gs
pop
push
mov
push
inc
sub
and
add
andnps
rcl
xchg
pop
(bad)
push
ja
cmp
test
inc
fdiv
into
mov
ins
cmp
call
push
adc
out
call
xor
arpl
jg
dec
pop
sub
mov
cwde
ins
sbb
aam
out
fs
pop
loop
dec
jg
test
mov
jmp
sub
xchg
int
inc
add
dec
pop
mov
mov
fwait
mov
loop
mov
and
sub
sbb
sub
push
lods
add
push
and
and
jle
jne
pop
pushf
adc
(bad)
jp
xchg
mov
jmp
mov
movs
push
fmul
pop
daa
jbe
std
mov
adc
add
lahf
outs
inc
loop
adc
add
cmp
or
scas
push
lock
mov
repz
movntps
out
pop
sti
push
adc
(bad)
push
adc
push
cmp
ds
mov
mov
xchg
pop
aaa
ret
test
add
or
and
add
dec
xchg
packsswb
pop
js
add
add
pushf
pushf
pushf
je
adc
sbb
pushf
pushf
pushf
pushf
dec
dec
push
push
js
scas
pop
add
and
sbb
dec
ja
gs
xor
push
popa
arpl
clc
call
ins
arpl
ja
push
loope
cmp
pop
ja
inc
add
daa
adc
adc
inc
mov
add
mov
je
inc
imul
test
and
sbb
arpl
test
add
aaa
dec
popa
cs
addr16
mov
push
pusha
fisttp
jno
xor
sbb
addr16
retf
fmul
push
enter
xchg
adc
pop
repnz
push
mov
shr
imul
rcl
xor
icebp
adc
add
cmp
xchg
popa
das
push
xchg
pop
leave
dec
ret
ss
push
xchg
jne
outs
ins
iret
mov
xchg
add
jg
inc
jo
jb
jecxz
dec
inc
push
popa
push
jo
pusha
sahf
dec
push
jns
jg
imul
and
data16
xor
inc
dec
pop
cmp
push
xchg
jae
push
dec
test
sub
hlt
(bad)
jmp
dec
add
inc
xlat
loop
push
test
loop
mov
sbb
in
mov
xor
or
jns
test
outs
xor
push
inc
sti
adc
out
fld
add
or
pop
(bad)
ficomp
ins
test
inc
daa
hlt
je
stos
inc
push
adc
dec
or
xchg
nop
aad
mov
sbb
mov
test
mov
add
adc
call
push
xor
loop
dec
aaa
dec
jecxz
or
test
ror
call
dec
rcl
lea
in
out
sbb
add
or
imul
mov
push
and
scas
or
nop
add
mov
xor
(bad)
jb
push
or
pop
in
push
mov
cmp
test
pop
mov
aad
jnp
inc
push
or
sbb
stos
dec
or
inc
lock
stos
int
jmp
or
jecxz
push
pop
jnp
push
mov
lds
(bad)
push
pop
test
scas
and
xchg
xchg
push
cmp
jnp
push
ror
in
jne
(bad)
pop
jnp
scas
pop
xchg
outs
push
adc
adc
mov
js
pushf
rol
dec
adc
lods
and
inc
push
test
add
mov
mov
mov
pop
sbb
scas
in
jg
mov
lds
push
sub
cli
ret
mov
mov
jl
push
mov
stos
xchg
add
mov
or
adc
push
mov
je
imul
les
rol
or
mov
cmp
test
outs
scas
push
push
imul
and
es
clc
push
nop
pop
push
movs
push
sbb
test
xlat
mov
pop
xlat
add
jno
push
dec
add
inc
cmovbe
bound
add
pop
loop
aaa
jmp
or
outs
jb
mov
inc
adc
adc
aaa
add
jmp
stc
inc
jns
gs
jne
test
cmp
add
push
and
test
sub
add
pusha
test
ficomp
add
xchg
jo
push
pusha
js
or
loopne
leave
sbb
xchg
mov
add
jnp
ss
dec
inc
adc
cs
add
dec
cmp
es
adc
pusha
and
adc
pop
dec
pop
stc
leave
adc
cmps
and
mov
add
dec
inc
stos
xchg
adc
mov
or
outs
mov
jo
pop
push
jbe
push
pop
or
retf
xchg
inc
sbb
add
(bad)
jbe
test
add
xchg
scas
fisttp
lock
test
test
fs
jmp
stos
iret
cmc
sub
mov
add
stos
pop
pushf
jp
mov
sub
jle
cmp
outs
inc
push
sub
test
(bad)
push
adc
push
fmul
push
aas
or
cmps
out
or
cmps
and
xor
dec
arpl
cs
adc
dec
jne
imul
xchg
or
fiadd
sbb
cmp
pop
mov
xchg
les
push
mov
ins
movs
add
sub
sysret
fwait
push
cwde
stos
mov
inc
(bad)
mov
and
and
sbb
push
mov
sbb
mov
mov
and
jmp
jo
pop
push
cmp
pushf
sbb
rol
jno
mov
xchg
lock
loope
push
xor
das
inc
pushf
and
out
nop
sbb
push
push
push
adc
cmp
dec
call
add
shl
push
out
add
push
mov
mov
dec
adc
cmp
or
mulps
add
nop
push
lds
cmc
push
stos
dec
and
in
add
pusha
push
lock
gs
aam
fiadd
aaa
pusha
inc
cmp
push
not
dec
mov
sbb
shl
sbb
push
ins
and
ins
push
push
push
or
mov
mov
cmp
cdq
cmp
arpl
nop
fsubr
cmp
push
add
jge
cmp
add
xor
imul
sbb
lahf
xor
aam
push
cmps
push
sbb
cmp
int3
call
or
cmp
je
mov
movs
push
cwde
mov
test
or
test
add
mov
mov
in
pushf
mov
in
lods
mov
jo
mov
les
mov
arpl
jo
test
and
mov
jno
call
std
addr16
js
iret
ins
xor
pushf
add
ins
and
dec
test
or
or
ror
inc
in
sbb
shr
add
dec
adc
test
dec
fsub
or
inc
push
or
inc
mov
mov
xchg
mov
inc
enter
xor
jno
cmp
imul
dec
mov
or
mov
pop
ss
cmps
sub
jno
cmp
cmc
ror
loope
ins
mov
push
inc
jmp
and
bound
pop
cmp
out
push
mov
xchg
xchg
dec
adc
retf
dec
adc
in
sbb
push
in
inc
or
add
xchg
push
inc
mov
mov
pop
jnp
mov
loope
outs
mov
mov
sbb
xor
jnp
xchg
call
xor
sbb
bound
or
inc
pop
sub
in
out
lea
mov
inc
sbb
mov
add
lods
inc
push
add
mov
mov
pop
push
push
mov
fs
xor
pop
add
ins
jb
pop
mov
mov
(bad)
aad
and
lds
push
sub
sbb
push
jmp
lea
sbb
jns
shr
sbb
mov
push
ja
sbb
sbb
and
dec
lods
jl
sar
add
nop
pop
mov
push
in
push
outs
push
daa
add
rol
mov
iret
fcomp
int3
mov
out
inc
pop
es
add
loopne
xor
add
(bad)
or
dec
or
(bad)
loope
xor
xor
adc
inc
pop
int
(bad)
pushf
jae
add
mov
push
sbb
inc
mov
add
xor
xchg
stc
adc
mov
adc
aam
in
outs
jbe
and
inc
popa
loopne
or
gs
sub
add
gs
mov
mov
mov
pop
aas
push
push
jb
mov
push
cld
mov
addr16
arpl
or
sub
adc
rcl
(bad)
daa
push
mov
outs
into
mov
push
mov
mov
sbb
dec
cdq
add
in
out
fadd
enter
sbb
mov
bswap
enter
mov
dec
add
xchg
pop
test
mov
inc
and
xor
(bad)
xchg
rol
add
xchg
inc
jo
js
ss
es
mov
xor
inc
loopne
adc
inc
mov
pusha
test
add
sbb
dec
stc
lock
cmp
add
xchg
mov
push
inc
shr
mul
adc
les
aad
jmp
(bad)
in
mov
rol
(bad)
neg
lods
add
push
ja
pusha
popf
lds
hlt
je
fdivr
sub
sbb
push
or
retf
push
or
pop
inc
clc
data16
adc
rcr
sbb
and
rcr
push
call
mov
or
xor
imul
imul
xor
pop
and
pop
pop
cmps
mov
cmps
sub
push
lods
cmps
imul
cmp
lea
lea
push
adc
cmp
cmp
sbb
or
cmp
xor
sbb
imul
sbb
sbb
inc
jle
rol
sub
xchg
(bad)
dec
cs
mov
mov
sbb
mov
or
inc
mov
dec
sbb
mov
inc
or
lea
mov
pop
sbb
cmp
loop
and
add
dec
fdivr
leave
in
adc
mov
dec
cs
aam
clc
aam
inc
jle
sbb
mov
pop
repnz
sbb
mov
cmp
enter
pop
out
xchg
test
cmp
mov
add
sbb
add
mov
xchg
js
pop
pusha
add
xchg
shr
imul
jecxz
setge
lock
xor
inc
cmp
and
xor
xor
or
inc
inc
xor
(bad)
push
test
loopne
push
sub
fldenv
mov
sar
outs
cmpxchg
inc
sbb
xor
mov
ins
sub
cmps
sar
cmp
mov
dec
fld
xor
and
xor
inc
inc
jne
pushf
add
and
inc
mov
pop
pop
fwait
jmp
xor
dec
outs
fisttp
jo
fs
xor
pop
jo
mov
lock
mov
or
call
jge
add
jmp
jl
xlat
mov
ins
call
faddp
mov
ss
add
jmp
mov
add
aaa
sub
mov
fdivr
call
mov
and
and
jb
fdivr
lods
mov
sub
or
push
xor
cdq
mov
add
mov
inc
jge
adc
push
fnstsw
dec
aaa
outs
or
pop
pop
xor
or
adc
ins
add
imul
adc
addr16
pusha
mov
les
pop
push
(bad)
dec
jne
or
test
mov
mov
scas
gs
pop
in
bound
push
push
pop
gs
in
adc
cmp
pop
das
push
aaa
add
out
xchg
dec
xor
ret
adc
pop
push
xchg
adc
pop
jle
xor
and
test
mov
mov
inc
cs
xlat
faddp
lock
popa
mov
cs
jp
xchg
bound
sar
push
add
bound
sbb
fiadd
dec
js
dec
lahf
fisttp
loope
jle
adc
jne
sbb
jnp
push
and
nop
mov
ins
cmp
push
mov
sbb
mov
in
sbb
in
and
and
mov
add
mov
je
sub
mov
jle
or
sub
and
mov
sbb
sub
pusha
fist
and
dec
jae
or
fld
fcomp
sbb
xchg
pop
fmul
lods
xchg
jbe
clc
mov
inc
cs
push
push
frstpm(287
sub
jbe
lea
xchg
mov
js
xor
xchg
inc
adc
xchg
cdq
push
lods
dec
sbb
and
mov
sbb
sbb
sbb
mov
inc
inc
cmp
or
jmp
nop
lock
nop
mov
add
or
or
fmul
jno
or
and
inc
lods
sar
push
iret
dec
pop
inc
inc
shl
inc
sub
or
rol
jns
inc
jl
ffreep
sbb
aas
add
xor
mov
je
jl
push
mov
(bad)
rol
sbb
jle
push
data16
and
jge
xchg
fcomp
test
ja
jo
jne
lock
sbb
ins
mov
mov
sub
or
in
in
mov
pop
xchg
and
ja
jge
dec
enter
pusha
and
sbb
es
add
shl
or
aaa
jp
sbb
aad
inc
adc
pand
mov
std
stos
jmp
pop
add
adc
or
stos
sbb
mov
ins
jmp
sub
push
jmp
scas
stos
mov
push
fistp
mov
push
jne
cmp
hlt
sbb
jb
aas
pop
dec
test
dec
inc
cmp
xor
scas
adc
inc
jp
xor
dec
not
jecxz
xor
ds
daa
inc
loope
je
inc
inc
add
push
xor
mov
ins
add
dec
pusha
xchg
dec
pop
add
je
mov
js
sbb
adc
dec
jne
fstp
retf
pop
adc
xchg
inc
push
inc
movs
mov
jbe
cld
inc
add
add
daa
in
lahf
test
push
jbe
and
popf
or
je
pop
fiadd
adc
adc
mov
sbb
add
push
inc
mov
test
cld
dec
push
xchg
addr16
movs
push
jae
jge
sbb
imul
and
or
clc
imul
popa
cmp
add
aaa
ror
mov
enter
mov
or
sub
adc
cmc
movs
dec
sbb
lock
lahf
push
sbb
push
rol
dec
pop
or
xchg
retf
dec
inc
mov
pusha
stos
aas
aas
scas
adc
jmp
jp
or
out
xchg
outs
add
jne
inc
popa
pop
mov
push
call
(bad)
push
and
inc
inc
inc
inc
sbb
and
xchg
and
out
js
sbb
sbb
jmp
jnp
fcom
add
adc
sbb
push
mov
int
xor
in
sar
loopne
test
and
sbb
sar
jnp
fmul
cmp
dec
clc
fadd
cmp
enter
sbb
jnp
(bad)
and
popa
ins
sub
pop
push
movs
jae
jne
xchg
jbe
lods
lock
mov
xor
add
mov
or
or
jp
mov
add
jo
push
jmp
cs
sbb
adc
out
shl
and
das
push
fdiv
sbb
inc
jnp
jmp
mov
inc
inc
xchg
sub
mov
lock
mov
and
sub
sbb
test
(bad)
out
ja
push
sub
mov
jne
sbb
pusha
mov
mov
or
adc
sub
add
ja
add
fmul
add
add
mov
dec
cmps
movs
and
sbb
(bad)
pop
pop
add
cs
inc
les
sub
fadd
ret
cdq
in
sbb
les
sbb
cwde
jecxz
add
ret
mov
add
movs
sbb
inc
adc
pop
test
leave
cmp
or
jo
push
add
add
stos
mov
mov
add
dec
outs
cmps
call
mov
or
pop
lods
push
adc
push
loopne
push
xor
mov
jo
(bad)
adc
jno
inc
mov
xor
fwait
dec
adc
sub
cmp
add
lahf
pushf
mov
pop
prefetch
adc
and
add
push
mov
mov
ror
mov
inc
xor
cmp
sub
jae
xchg
ss
hlt
lahf
pusha
inc
leave
cdq
loopne
popa
add
sti
jecxz
pop
mov
cwde
xor
pop
mov
or
mov
dec
jne
and
loopne
xlat
sbb
int
fwait
sbb
test
cmp
and
bound
aad
loopne
jae
mov
pop
inc
cwde
or
aaa
add
cmp
or
or
lods
pop
and
mov
in
lods
in
cwde
inc
add
dec
loopne
cmp
xchg
test
mov
xchg
mov
lea
fild
loopne
jnp
bound
sub
pop
test
cmp
or
aas
sbb
pop
shl
sub
xlat
(bad)
cld
lea
call
mov
push
in
mov
xor
lock
and
cmp
enter
xor
bnd
in
ror
mov
mov
xchg
mov
test
mov
add
mov
popa
or
in
ins
push
cmp
inc
dec
jns
inc
adc
push
out
adc
adc
pop
rol
cs
push
aaa
sub
sub
(bad)
lea
and
push
and
dec
repz
pusha
sub
ins
das
es
jnp
push
add
ret
pusha
mov
mov
jg
test
cmp
or
dec
pop
push
ret
sbb
test
adc
pop
dec
xor
ror
mov
mov
xchg
popf
in
leave
ja
mov
mov
cdq
xchg
xchg
pushf
pushf
cs
pop
lods
lods
mov
dec
movs
movs
test
lds
push
mov
movs
mov
or
sub
sub
test
dec
add
mov
leave
xor
jmp
mov
(bad)
fild
inc
mov
add
mov
scas
clc
pop
add
inc
inc
mov
arpl
cmp
fwait
push
es
lea
add
les
mov
pop
sub
jbe
mov
push
and
stos
fisubr
dec
push
mov
ret
xor
jo
loope
popa
add
add
fmul
pop
aas
pcmpgtb
push
sub
clc
ja
imul
mov
iret
mov
mov
pop
add
fmul
nop
mov
movs
xor
dec
gs
mov
nop
sbb
xchg
in
xchg
sub
push
cmps
pushf
dec
movs
xor
or
dec
test
dec
sub
jl
sbb
(bad)
mov
mul
fcomp
or
jo
mov
pop
mov
(bad)
(bad)
(bad)
jnp
dec
jmp
jge
in
gs
cmp
je
inc
clc
mov
dec
pop
sub
adc
push
and
push
xor
cvtdq2ps
pop
mov
and
mov
dec
and
popa
mov
add
cmps
adc
(bad)
movs
scas
pop
push
sub
mov
jmp
push
lods
or
test
dec
mov
ins
je
iret
and
mov
inc
or
sbb
pop
dec
and
mov
push
popa
stos
ja
mov
adc
sbb
and
or
ret
mov
sbb
js
pop
mov
dec
inc
cmps
or
jg
add
test
mov
mov
push
cmp
dec
or
and
add
sbb
pushf
fadd
sub
aas
add
int3
pop
loopne
sbb
push
call
sbb
mov
call
loopne
jge
dec
push
cmp
xchg
mov
cmp
in
sbb
mov
lock
cmc
or
mov
dec
out
arpl
mov
jno
scas
push
add
and
jecxz
jmp
pop
push
add
add
add
arpl
rol
fdivr
adc
out
adc
daa
loopne
test
cmp
dec
adc
cmps
das
repz
mov
jne
lods
and
outs
lods
unpckhps
not
mov
cmps
cmp
xchg
sar
adc
sbb
jne
pop
inc
cmp
loopne
inc
in
dec
sub
xor
movs
out
jbe
or
mov
cmp
not
nop
push
(bad)
mov
hlt
fsubr
jb
fcom
inc
mov
cmps
ins
fadd
mov
out
cmp
sbb
push
adc
movs
xchg
sbb
test
or
xchg
adc
and
mov
in
neg
xchg
pusha
movs
int3
mov
(bad)
arpl
pop
mov
dec
out
inc
sbb
mov
add
pop
das
and
add
test
bound
outs
sub
adc
inc
or
pop
and
adc
xchg
mov
aad
sti
inc
adc
adc
sub
mov
xchg
dec
adc
add
add
sub
mov
push
ret
stc
adc
or
test
dec
es
pop
inc
nop
mov
pop
fcom
fadd
push
out
push
dec
mov
mov
int
xor
mov
sub
sub
gs
daa
mov
push
and
neg
pop
enter
cmp
mov
push
cld
leave
(bad)
xchg
mov
pop
add
adc
sar
cmps
mov
mov
xchg
sbb
popa
je
bound
cmp
nop
(bad)
mov
jo
arpl
test
aas
(bad)
test
test
mov
push
xor
ror
sti
xor
mov
dec
cs
add
enter
test
and
and
xchg
push
xor
(bad)
rcl
neg
shl
popa
mov
loope
add
sbb
inc
icebp
add
lea
fstp
sub
stos
add
cmp
sub
enter
mov
add
cmp
push
or
cs
into
imul
push
sub
add
jmp
jae
pusha
mov
push
popa
imul
xor
xor
push
sub
push
js
or
push
inc
enter
lahf
jg
add
dec
gs
int3
jg
lahf
sti
push
xchg
mov
mov
inc
xor
push
jg
or
fs
sub
lods
(bad)
shr
pop
jns
xor
jo
add
aaa
sub
leave
aaa
or
or
mov
mov
pop
ret
pop
daa
and
sbb
mov
dec
out
push
adc
push
mov
sar
dec
jne
add
arpl
and
mov
or
test
out
jmp
and
daa
xchg
lds
push
das
call
scas
cmp
push
hlt
mov
mov
and
or
mov
dec
push
xchg
push
xchg
outs
fcmovu
femms
adc
js
mov
or
sbb
imul
js
jecxz
nop
lds
inc
add
xchg
push
xor
dec
pop
test
xchg
lods
ret
inc
ja
mov
inc
je
add
sti
cs
jle
inc
dec
outs
mov
cmp
push
add
fwait
push
and
and
add
push
ret
dec
jb
add
int
sub
xchg
pop
push
imul
imul
add
push
outs
pop
cmc
scas
jmp
cmc
or
add
push
rol
jmp
fsubr
inc
pop
sub
xor
mov
jno
push
dec
pop
leave
dec
inc
jl
bound
shl
pop
(bad)
mov
inc
adc
adc
sbb
iret
pop
and
mov
sbb
out
nop
jmp
inc
mov
loopne
mov
ins
inc
sbb
sbb
xor
xor
jl
inc
sbb
lea
fsub
pop
daa
adc
inc
mov
in
stos
mov
in
fiadd
pushf
mov
(bad)
mov
rol
adc
lods
movs
out
jbe
xor
scas
sbb
adc
dec
pop
enter
inc
mov
jmp
or
cmp
mov
enter
(bad)
loopne
or
cwde
add
pop
sub
out
push
cmp
nop
fwait
les
daa
mov
stos
and
dec
mov
add
xchg
loope
rcl
popf
add
push
rol
out
mov
xchg
xor
hlt
int
aas
or
dec
rcl
mov
xchg
test
push
ds
or
cwde
jl
outs
sub
addr16
ret
popa
aad
leave
retf
or
adc
test
mov
or
out
rcl
and
mov
(bad)
into
adc
inc
add
pusha
sub
hlt
mov
ss
dec
xchg
xchg
mov
add
loopne
pop
mov
and
cmc
stc
shr
xor
dec
call
lock
daa
(bad)
repz
pop
sub
test
sbb
xchg
lock
sub
ret
call
add
add
pusha
and
fisttp
sbb
sub
sar
add
and
jmp
test
je
cwde
dec
or
loop
or
cmp
shr
pop
mov
loope
aad
jne
sub
add
inc
jo
and
sbb
adc
jne
mov
pop
pop
pop
pop
cmp
sub
mov
into
std
imul
movs
or
clts
ins
push
retf
mov
xor
pop
fisubr
jmp
pop
mov
jnp
add
push
(bad)
shl
inc
fbld
inc
push
mov
fistp
test
xor
mov
pop
ds
ret
adc
or
sti
lea
inc
inc
cmp
push
xor
or
sbb
add
sub
fadd
shl
dec
jmp
loopne
sub
dec
adc
daa
cmps
(bad)
fwait
mov
das
push
int
mov
pop
out
rcl
cmp
in
pop
test
push
push
inc
sbb
xor
push
test
sub
mov
mov
sti
nop
or
inc
mov
hlt
adc
repz
add
and
(bad)
call
popa
add
vpexpandq
fwait
mov
sbb
sub
sub
pop
sub
retf
pop
jmp
mov
xlat
in
ret
mov
xor
ficom
or
movs
lock
sti
call
add
adc
ins
push
add
inc
mov
pushf
ror
xchg
inc
sbb
aaa
push
test
scas
xor
icebp
iret
rcl
inc
jae
cmp
bound
jle
pop
nop
mov
dec
and
jo
sub
sub
adc
int3
add
imul
xchg
inc
mov
movs
imul
mov
arpl
popf
add
in
xchg
ret
ret
mov
arpl
inc
dec
jne
jmp
or
mov
or
(bad)
popa
out
xor
clc
iret
in
popa
test
mov
int3
sbb
(bad)
stos
mov
aas
mov
push
cld
jmp
popf
cmp
jl
cmp
sete
ret
dec
sub
test
inc
xchg
rcr
ror
inc
daa
sbb
pop
test
jl
int3
add
fcom
adc
xchg
inc
stos
js
shl
ins
lahf
jp
adc
jg
pop
add
bound
stc
bound
movs
shl
dec
dec
mov
or
test
and
inc
cmp
jp
aas
push
add
test
add
xchg
sahf
adc
fild
xlat
dec
loopne
inc
pusha
add
dec
adc
clc
jae
rcr
sbb
pop
pop
fcomp
push
adc
retf
add
or
and
inc
jecxz
sbb
daa
and
outs
push
sar
dec
rol
es
das
sbb
pushf
aaa
cmp
dec
out
aad
loopne
cmp
pop
inc
imul
(bad)
adc
push
pop
(bad)
fbstp
aad
inc
int3
jbe
cmp
and
call
ins
mov
push
jb
add
outs
aas
xor
shr
div
jne
jne
or
inc
dec
outs
ins
jns
push
aas
loope
imul
dec
dec
rcl
push
and
ja
mov
retf
mov
prefetchwt1
or
jne
std
in
outs
jmp
inc
repnz
stc
push
and
mov
xchg
dec
div
sbb
adc
or
add
lods
push
xchg
cmc
adc
sub
xor
xchg
test
mov
jne
fs
pop
xchg
aaa
xor
jo
dec
sub
pop
dec
xor
shl
or
outs
add
and
aam
mov
rol
xor
add
movs
jmp
(bad)
sar
sub
xchg
push
push
and
xchg
pop
add
mov
stc
loopne
jo
or
mov
ins
add
js
mov
xchg
xchg
retf
call
fistp
xor
in
in
call
sub
bound
push
mov
fcmovb
cmp
sub
mov
popa
push
inc
xor
or
jne
cmp
je
adc
sub
pop
xchg
mov
(bad)
mov
int3
or
(bad)
sub
push
(bad)
fnstsw
push
ret
inc
cld
mov
mov
push
cmp
dec
dec
add
inc
add
popa
add
mov
push
aam
loop
mov
xlat
arpl
inc
(bad)
mov
mov
fsubr
loopne
mov
add
pop
sbb
dec
outs
add
addr16
pop
popa
dec
outs
inc
push
or
pop
cmp
mov
adc
xlat
jg
into
in
mov
jg
jmp
push
inc
push
outs
outs
dec
jne
jnp
or
dec
out
cmp
add
fdiv
or
add
out
stos
push
gs
outs
movs
xchg
les
fs
or
push
(bad)
fs
push
dec
bound
cli
xor
mov
mov
adc
mov
sti
cli
sub
shr
sbb
adc
push
mov
inc
fldcw
inc
ficomp
dec
adc
mov
cmps
add
sbb
push
jnp
push
inc
or
add
mov
xor
and
cmp
inc
jb
ja
push
test
cmp
push
xchg
mov
xlat
add
or
inc
jnp
(bad)
fadd
popa
es
test
push
fidiv
dec
sahf
inc
ficom
(bad)
aas
mov
dec
arpl
leave
mov
out
dec
inc
fimul
dec
fdiv
daa
daa
daa
push
xchg
xchg
xchg
fidiv
retf
leave
enter
sahf
fnsetpm(287
in
in
loopne
push
sahf
jb
repnz
xor
jns
jno
dec
push
fldenv
mov
add
adc
adc
pop
dec
dec
aas
pusha
in
bound
jmp
mov
push
jbe
inc
push
add
pop
pop
mov
xor
jge
or
fsub
out
xchg
add
test
inc
call
sbb
inc
inc
popa
outs
push
mov
stos
imul
adc
add
test
pop
add
mov
add
lods
add
mov
(bad)
jne
sbb
mov
mov
mov
test
leave
ret
adc
mov
push
pop
mov
call
jmp
and
jge
dec
adc
out
retf
fcomp
retf
sbb
dec
retf
mov
cwde
in
retf
fisub
jl
mov
sbb
lds
imul
jns
xchg
and
inc
jmp
dec
outs
test
ds
imul
push
in
ss
out
jnp
pop
add
dec
ja
push
jbe
fisttp
fimul
sar
jg
or
adc
jo
scas
or
dec
aam
mov
and
ror
xchg
adc
mov
mov
retf
ins
mov
add
inc
pop
add
add
call
pop
xchg
bound
ror
inc
popa
shl
cmp
neg
jg
xor
inc
add
aaa
adc
mov
adc
imul
shr
leave
outs
popf
jg
sbb
fwait
push
inc
ret
sub
aaa
sub
push
aaa
add
xor
fs
rcl
jmp
mov
test
push
xchg
add
mov
ret
push
xchg
push
xor
ss
jecxz
add
pop
outs
xchg
add
add
adc
mov
mov
xchg
mov
test
addr16
xchg
mov
push
dec
sub
lds
xor
jnp
jl
lahf
(bad)
in
sub
lahf
push
retf
das
sbb
mov
das
int
inc
popa
mov
dec
or
cs
icebp
inc
cmc
push
loope
cmps
jno
or
or
test
cmps
jnp
and
test
pop
add
or
cmc
mov
or
jecxz
xor
mov
je
fiadd
dec
and
fnstcw
add
ret
mov
pop
outs
popa
adc
xchg
cmp
in
idiv
ret
cmp
jne
add
mov
jmp
mov
adc
sar
les
call
(bad)
and
xor
jo
cmps
inc
xor
and
cmp
dec
pop
cdq
dec
cmp
inc
xchg
push
pop
(bad)
adc
loope
add
addr16
sub
es
iret
pop
sub
and
push
cmp
inc
add
and
or
adc
ficomp
xor
or
pop
addr16
hlt
adc
sbb
je
cmp
movs
pop
ja
dec
inc
inc
jl
cmp
pop
mov
sbb
ret
inc
jge
xor
sub
ja
add
dec
push
cmp
dec
inc
or
push
pop
jg
data16
jno
push
and
push
jle
ss
stc
aad
cli
push
xor
sahf
add
add
movs
add
pop
xlat
and
clc
and
cmp
push
(bad)
mov
rol
dec
or
sar
inc
(bad)
jmp
shl
bound
int3
lds
sub
cs
or
shl
mov
xor
and
rcl
dec
fimul
sti
test
jge
push
cmp
sbb
in
fsubr
jmp
cmp
mov
or
xchg
hlt
lahf
or
xchg
aad
out
pusha
enter
aad
cmp
outs
push
div
mov
iret
mov
inc
or
cmp
push
dec
mov
stos
adc
add
pop
mov
mov
add
icebp
add
pop
out
and
popf
inc
pop
sbb
jl
add
jmp
add
adc
and
cmps
mov
jnp
mul
in
sbb
stos
add
adc
dec
adc
and
or
shl
inc
jge
cmps
imul
xor
sub
mov
mov
and
sbb
inc
or
das
xor
movs
mov
dec
add
cmp
pop
enter
pop
inc
les
inc
fmul
fadd
adc
mov
jmp
xor
and
js
sub
add
xor
loope
movs
or
xchg
mov
adc
bound
mov
ins
cmp
inc
dec
dec
fsub
push
inc
pop
xchg
push
shl
or
add
test
push
ss
enter
sub
jo
sar
mov
lock
dec
cmp
dec
test
jl
inc
push
lea
cmp
adc
lock
pop
jb
jb
(bad)
jge
mov
adc
sbb
je
push
add
add
dec
jne
fisubr
fsubr
je
mov
sub
mov
jmp
inc
dec
jne
call
in
lods
mov
pop
pop
cmp
push
test
pop
mov
lods
je
push
sbb
out
gs
movs
outs
mov
(bad)
sbb
cmp
jo
arpl
and
outs
add
sbb
adc
jae
jbe
xor
dec
cmps
icebp
ins
cwde
adc
jp
cmp
test
mov
pop
sbb
jg
add
nop
add
sbb
mov
dec
pop
push
clc
sub
mov
test
arpl
and
test
(bad)
movs
ret
add
rol
jne
xlat
cmps
retf
add
or
lea
or
pushf
adc
add
mov
lods
sub
jmp
add
push
dec
xor
pop
das
ret
inc
loop
or
jle
cs
and
and
push
aaa
sti
or
(bad)
sub
sbb
add
mov
add
mov
and
sbb
cmp
add
add
jo
push
cld
sbb
stos
pop
or
(bad)
cs
or
push
xor
cmp
pop
and
sub
or
add
add
jmp
inc
jb
imul
outs
imul
add
pusha
les
(bad)
or
test
scas
add
xor
data16
jbe
add
xor
add
inc
sbb
inc
add
lea
sbb
push
or
push
bound
add
and
mov
jecxz
add
or
rol
jae
push
int
test
js
push
jns
loop
dec
ds
icebp
and
stc
add
movs
in
pop
pushf
aaa
sti
fisubr
es
out
das
ror
ins
dec
pop
ror
or
xor
lahf
ds
or
push
lock
out
push
je
xor
mov
xor
loop
mov
push
or
mov
or
call
jae
loope
mov
outs
sub
add
popa
and
mov
test
adc
xor
scas
xor
rcl
out
sub
inc
rcl
out
push
and
dec
push
jmp
adc
mov
mov
pop
xor
sub
cwde
mov
sbb
or
sbb
jmp
push
xchg
cs
mov
rol
jp
pop
aaa
dec
iret
add
push
pop
inc
dec
loopne
push
add
icebp
rol
or
mov
stc
sub
popa
repz
sub
inc
inc
pushf
or
pavgb
xchg
mov
sub
push
movaps
push
add
dec
cmps
mov
mov
or
shr
lea
mov
push
xor
test
sub
rcl
ins
add
inc
xor
data16
cmp
dec
out
push
ds
push
pop
or
push
call
lock
out
sub
inc
dec
dec
mov
jae
mov
pop
push
add
push
and
and
ins
pop
mov
mov
pop
pop
pop
xor
loopne
int
pusha
jno
out
test
xchg
in
test
stos
pop
pop
inc
cmp
jne
add
push
cmp
mov
xor
clc
adc
xchg
push
mov
jo
push
or
call
mov
(bad)
mov
js
or
jo
mov
adc
dec
repnz
test
xor
or
movs
cmp
jne
cmp
mov
add
or
fiadd
and
bnd
mov
pop
lock
div
xchg
rol
add
dec
dec
popa
pop
xor
push
ins
test
pop
and
adc
add
mov
dec
les
cwde
femms
bound
repnz
inc
xor
mov
sub
xchg
push
and
dec
popa
jb
gs
pop
dec
and
push
popf
jbe
or
add
xchg
pop
push
out
lahf
push
adc
push
aaa
pop
mov
pop
test
rcr
div
(bad)
jle
adc
push
aaa
mov
subps
dec
cmc
fbstp
not
je
push
inc
clc
das
jl
sahf
push
mov
or
inc
adc
adc
ss
sbb
fiadd
dec
into
lods
adc
imul
les
mov
cmps
sti
xchg
ss
cwde
shl
je
push
lock
dec
sahf
mov
push
pushf
adc
or
push
nop
and
push
hlt
pop
pop
dec
ins
ss
in
adc
push
xor
cs
and
cs
adc
xchg
sar
lea
loopne
test
jge
loopne
add
adc
inc
icebp
int
adc
adc
ja
pop
sbb
jae
fs
call
xor
popa
ret
sub
lock
push
jae
imul
sub
out
push
dec
outs
or
je
xchg
movs
clc
inc
mov
add
test
dec
popa
js
inc
mov
and
jne
in
add
jge
pusha
lods
cmp
mov
and
sub
ins
mov
or
mov
jno
bound
pop
inc
or
sbb
add
push
mov
dec
inc
push
mov
xor
xchg
das
mov
fldcw
sti
fs
lea
lea
lock
das
les
jbe
mov
xchg
out
daa
xor
adc
inc
int3
fwait
popa
add
sbb
shr
adc
push
push
fimul
inc
adc
data16
jne
js
arpl
mov
xor
lock
bound
and
fstp
mov
retf
xchg
and
push
and
mov
and
adc
cpuid
std
adc
retf
popf
iret
cs
push
pop
and
mov
jg
mov
(bad)
sub
pusha
aas
call
xchg
jg
sub
xor
aas
ror
jb
adc
arpl
icebp
cmp
jg
sub
test
or
mov
jns
std
repnz
das
add
aas
int3
cmova
mov
(bad)
and
frstor
outs
xor
cmp
loop
xor
imul
pop
lds
dec
or
xor
stos
or
dec
or
sahf
pushf
int3
js
(bad)
jb
jb
ret
or
xor
cmps
or
adc
dec
jbe
repnz
xor
in
pushw
aas
aaa
push
push
aaa
add
outs
xchg
stos
cmp
pop
and
rcpps
mov
stos
cmp
inc
adc
fwait
xor
mov
arpl
mov
ror
push
gs
or
sbb
daa
sub
repz
jo
and
out
adc
push
nop
fcom
add
xor
leave
cmp
pop
js
imul
dec
dec
inc
rcr
xchg
sub
in
add
push
inc
adc
add
adc
js
lds
add
xor
adc
pushf
jmp
mov
add
sbb
jp
das
or
dec
fisttp
cwde
mov
pop
inc
jp
jb
pop
adc
gs
(bad)
(bad)
aas
push
pop
xor
xor
and
xchg
mov
push
xchg
loopne
ins
js
inc
pop
xor
in
cdq
lahf
add
jo
mov
sbb
adc
addr16
lods
mov
inc
addr16
out
adc
sub
adc
and
outs
push
xchg
je
call
sbb
inc
dec
or
outs
or
inc
stos
pop
mov
xor
add
jne
popf
or
jmp
ret
dec
scas
mov
or
mov
shl
cs
xchg
or
into
jb
add
add
mov
aaa
icebp
or
inc
inc
adc
mov
add
ins
dec
push
sbb
pop
fsub
cmp
sbb
xchg
inc
and
dec
add
dec
sbb
xchg
cwde
(bad)
(bad)
dec
push
xor
push
push
xchg
es
dec
jo
inc
data16
dec
add
mov
cmp
and
and
adc
int3
ret
lods
mov
xor
mov
stos
js
sbb
push
jae
xor
push
loope
int
mov
and
bound
inc
(bad)
push
or
add
push
rol
and
push
add
add
xor
or
jecxz
cmp
pop
or
sbb
adc
push
scas
add
sbb
cmp
mov
shr
sbb
rdtsc
call
ja
arpl
adc
daa
or
addr16
loop
pushf
push
fs
clc
inc
jge
inc
popa
sbb
loop
mul
cmp
imul
lods
mov
adc
dec
or
cmp
loopne
or
ins
push
mov
pop
inc
movs
xchg
push
mov
lahf
xchg
adc
pop
cmp
inc
jo
push
sbb
imul
cmp
inc
aaa
arpl
push
adc
push
jo
adc
push
push
imul
ins
push
inc
and
or
cmp
gs
stc
arpl
sbb
pop
mov
push
mov
inc
sub
jnp
cs
xchg
ficomp
imul
push
inc
outs
je
jo
mov
jns
stos
pop
push
out
(bad)
cmc
adc
cmc
ret
vpmovsxbw
push
imul
pusha
sbb
sbb
sub
pop
adc
inc
or
and
call
mov
jmp
xor
(bad)
cmp
sub
sysexit
push
dec
mov
xchg
mov
cmp
cmp
pop
(bad)
and
xchg
int
hlt
pop
cmp
dec
pop
push
dec
jae
sbb
mov
xor
sub
mov
jle
cmc
pop
push
add
test
pusha
sub
dec
shr
or
test
sbb
nop
inc
cmp
test
pop
and
or
jae
mov
adc
mov
inc
aas
cld
sbb
cmp
sbb
add
dec
dec
or
mov
add
lea
popa
jge
mov
mov
pop
adc
mov
push
ret
call
or
ret
call
xor
push
in
sbb
pop
aas
jp
out
mov
mov
cmp
les
xor
mov
sub
push
sbb
jae
and
cmp
cmp
sbb
ins
inc
adc
and
xor
inc
and
aad
adc
adc
jne
push
push
ins
inc
xchg
dec
push
pop
add
mov
inc
test
mov
aaa
imul
or
lods
adc
cmps
mov
inc
inc
pop
test
repnz
pop
je
punpcklbw
ss
push
adc
bound
lods
adc
lds
adc
popa
push
pop
sub
in
dec
stos
rol
je
pop
bound
adc
xor
xor
pop
dec
imul
add
xchg
daa
pusha
mov
sub
pop
lods
mov
cmp
adc
call
fld
xor
xor
test
xor
js
adc
push
jo
jns
pop
adc
imul
sbb
arpl
sbb
cld
sub
mov
or
and
call
ss
test
mov
pop
xor
pop
lahf
add
das
dec
and
pop
dec
add
daa
add
call
nop
sub
add
sub
test
mov
loopne
test
sbb
loopne
sbb
pop
dec
imul
out
or
and
(bad)
stc
inc
or
sbb
push
mov
cwde
mov
or
ret
ror
scas
in
adc
xchg
xchg
xchg
out
add
adc
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
push
and
sub
push
outs
xchg
or
xchg
mov
pop
sub
adc
dec
push
jmp
xchg
shr
xchg
lds
pop
(bad)
rcl
shr
push
stos
dec
sbb
sbb
jo
dec
outs
pusha
xchg
nop
and
mov
adc
adc
add
push
sti
pop
loopne
nop
ins
imul
lea
push
push
push
adc
pop
sub
pushf
adc
push
fistp
cmp
pusha
bound
fs
adc
pusha
adc
shr
lock
sbb
test
xchg
inc
push
out
or
dec
xchg
enter
adc
les
xchg
cwde
fdiv
cmp
and
and
jle
test
inc
dec
cmp
xor
cmp
push
sub
xor
rol
inc
or
je
mov
pop
test
int3
and
sub
sbb
das
mov
sti
mov
inc
bound
inc
add
adc
mov
jge
or
(bad)
mov
add
lock
add
sub
mov
(bad)
cs
adc
fstp
cmps
sbb
ins
ficom
jno
bound
hlt
(bad)
int3
dec
and
mov
call
mov
mov
out
cmp
mov
nop
jg
dec
daa
sbb
mov
mov
inc
jne
sbb
push
into
sub
pusha
adc
pop
jmp
mov
das
pop
rcl
test
xchg
jp
dec
pop
or
test
das
mov
sbb
fisttp
cmp
pop
pusha
mul
sbb
jmp
pop
adc
imul
(bad)
push
xchg
test
push
ror
or
icebp
pop
(bad)
jle
movs
dec
cld
xchg
mov
xor
jno
mov
rcl
jle
cs
mov
das
sbb
mov
jecxz
dec
pushf
fcomp
or
jg
mov
mov
mov
push
jnp
pop
push
ret
cdq
cmp
bound
test
cs
cld
push
pop
sbb
pushf
sub
or
push
ins
enter
push
test
out
mov
inc
and
ins
cmp
pop
(bad)
popw
test
je
mov
aas
test
and
cmp
fistp
pop
movs
sbb
sub
loope
lods
mov
xchg
jmp
and
or
push
xor
and
clc
push
inc
enter
jmp
mov
test
mov
aaa
mov
and
sbb
lock
out
cld
pop
xor
jmp
inc
test
les
in
popa
mov
shl
es
add
pop
add
dec
movs
sbb
or
int3
rol
fldpi
and
sbb
shr
imul
movs
aas
pop
xor
ins
pop
mov
or
pop
hlt
lock
loopne
call
rcr
xor
add
jecxz
mov
mov
or
outs
mov
xor
rol
sbb
je
inc
sbb
retf
retf
adc
pop
push
lock
cmp
or
out
dec
aad
movzx
les
adc
push
les
inc
mov
xlat
or
sbb
and
sar
int
loop
cmp
inc
sbb
mov
pop
ror
add
retf
movs
xor
xchg
mov
xchg
adc
ret
mov
adc
pop
aad
cmps
sub
fmul
lahf
inc
into
push
xor
cmp
sbb
adc
push
(bad)
cli
out
jl
jns
fnstenv
inc
sbb
add
scas
hlt
jbe
(bad)
dec
aaa
xchg
call
loope
mov
jo
les
add
scas
add
push
pop
hlt
loop
mov
je
rol
sbb
and
pop
adc
add
fistp
mov
jne
push
mov
push
and
loopne
adc
fadd
dec
mov
or
jp
mov
push
loopne
mov
cmp
dec
or
push
pop
jno
fsub
jmp
pusha
sbb
dec
pop
sub
stc
xchg
sub
adc
jle
cmp
jle
cmp
(bad)
in
lods
cmps
xchg
loopne
mov
movups
mov
icebp
inc
or
push
adc
clc
jbe
push
(bad)
xor
sbb
test
test
cmp
jne
lock
pusha
lock
cmp
lea
rol
fwait
call
mov
sbb
sbb
sar
pop
jb
or
mov
in
add
xor
cmp
jle
loopne
push
lds
cmp
shl
add
add
jle
pop
jg
or
cmp
jne
dec
ss
xchg
add
outs
shl
mov
xchg
(bad)
sahf
jmp
les
out
pushf
rcr
icebp
add
or
ja
mov
in
sbb
push
ins
xchg
clc
add
ret
push
dec
cmp
jge
(bad)
aad
inc
and
int3
sbb
dec
xlat
mov
push
inc
fs
lock
pop
lods
adc
cmp
sbb
mov
sub
adc
mov
es
pusha
out
push
xchg
jl
sbb
push
in
arpl
enter
mov
or
jns
jl
adc
sbb
fmul
xor
mov
xchg
pusha
and
jae
add
pop
push
push
and
or
shl
fist
addr16
data16
jmp
push
fdecstp
fstp
xchg
pushf
inc
xor
cmp
mov
adc
mov
pop
inc
ss
add
test
(bad)
jmp
mov
(bad)
pop
mov
mov
ja
scas
xchg
loope
outs
adc
test
mov
xchg
fwait
jne
and
add
ret
cmp
ins
push
pop
ret
sbb
test
adc
push
jmp
inc
leave
in
fsubr
jno
adc
push
outs
or
je
clc
mov
sar
imul
and
test
pop
js
jmp
sub
call
jnp
inc
mov
push
inc
mov
dec
or
pop
sbb
mov
int3
aas
xchg
cmp
mov
pop
mov
daa
xchg
cwde
fsub
lock
sbb
and
test
fld
pop
mov
fisttp
clc
clc
outs
or
inc
in
jl
push
int
les
sbb
push
push
mov
call
(bad)
stc
pop
dec
inc
or
or
mov
jae
inc
cs
cwde
mov
std
adc
dec
clc
test
sbb
and
push
mov
and
jne
pop
es
inc
dec
mov
jecxz
mov
adc
add
sti
adc
pop
jo
cmp
or
scas
jbe
or
in
mov
mov
repz
cmps
cld
test
je
clc
fwait
movs
and
scas
enter
add
ret
adc
jno
sub
(bad)
lock
lea
jns
jg
cmp
setge
dec
ins
sbb
or
ja
sub
sbb
jecxz
jo
aad
mov
jg
pop
shl
xchg
pusha
test
(bad)
cmp
pop
shl
enter
push
pop
mov
push
add
aas
imul
mov
test
jae
push
jmp
push
pop
pop
xchg
aam
or
jo
jle
test
xor
lods
jo
inc
call
jmp
rol
mov
stos
lea
daa
add
add
sbb
iret
mov
xchg
inc
pop
jne
pop
adc
sbb
loopne
retf
fmul
and
enter
add
xchg
leave
jno
mov
or
test
not
or
add
xchg
jge
cmc
mov
je
xlat
jnp
xor
and
iret
sub
lods
jnp
cdq
jmp
sbb
loopne
cmp
inc
cmp
jp
pop
addr16
sub
mov
nop
mov
or
dec
leave
ret
inc
lock
xchg
call
int3
cmp
mov
xchg
fwait
pop
lock
jle
pusha
mov
xor
cmp
or
mov
mov
mov
(bad)
aam
adc
adc
call
cmp
jge
sbb
outs
arpl
mov
outs
adc
jmp
and
sti
sub
mov
adc
inc
in
mov
push
or
pusha
or
pop
addr16
fdiv
fdivr
pop
fwait
or
in
pop
loopne
(bad)
jge
fist
jmp
add
call
(bad)
call
pusha
push
push
sub
xlat
ja
mov
jge
push
fdivr
add
inc
repz
je
push
add
add
popf
dec
jmp
movs
inc
pop
push
scas
add
and
outs
cmps
je
xor
mov
fistp
xchg
jmp
jns
bound
inc
repz
xor
jle
pop
push
sbb
ins
mov
pop
mov
jmp
pop
pop
or
shr
loopne
jo
add
mov
or
mov
sbb
sbb
dec
in
add
shr
push
or
and
push
imul
pushf
out
pusha
or
imul
fldenv
inc
inc
cmp
dec
cmps
or
fcmovnbe
or
clc
and
je
adc
sbb
add
call
mov
cmp
sar
je
cmp
out
xor
test
fcom
js
or
cmp
repz
jne
sbb
add
pop
sbb
dec
sub
or
sub
sti
pop
jae
jmp
or
xor
xor
lds
inc
aam
push
loop
xchg
pop
adc
push
mov
or
xchg
fild
jle
mov
loope
enter
jae
setb
std
inc
mov
pusha
scas
sbb
ftst
fistp
mov
pop
ret
pop
inc
adc
jmp
push
cld
inc
add
jmp
jl
repz
sti
ror
jp
push
test
sub
mov
data16
add
outs
cwde
pop
pop
pop
xlat
cld
int
mov
inc
iret
cwde
sub
or
ret
aaa
sub
inc
popa
adc
jno
and
por
inc
lahf
add
sub
add
mov
mov
and
aad
xchg
push
neg
add
nop
fcomp
mov
das
cdq
mov
shl
inc
jbe
inc
cld
mov
dec
and
call
push
sub
addps
cs
push
add
into
iret
aam
push
mov
rcr
push
add
mov
daa
mov
sub
sar
xchg
into
mov
adc
dec
jne
xchg
or
adc
push
xchg
dec
aam
fstp
mov
mov
jmp
imul
or
or
dec
adc
call
test
jp
cmp
xor
dec
mov
and
mov
sbb
add
fucomip
xor
loope
fldcw
jl
add
push
lock
nop
fsub
aad
push
pop
adc
dec
xchg
dec
js
leave
cs
push
or
adc
fimul
sbb
sbb
jo
sysret
inc
mov
icebp
pop
inc
stc
jle
cmp
jge
fisubr
sbb
test
das
push
lods
jno
mov
popa
ins
iret
pop
jmp
xor
or
sub
sub
xor
je
(bad)
into
jb
lock
inc
call
(bad)
push
mov
cmp
mov
inc
inc
jbe
adc
fs
sub
inc
or
adc
clc
test
push
lahf
ins
cld
add
les
adc
xor
loop
ins
(bad)
retf
sub
int
inc
in
push
into
lds
or
data16
cwde
add
loope
add
pop
mov
adc
pop
movzx
add
cmp
ja
sbb
mov
pusha
or
or
add
add
add
and
cld
push
lds
or
fisub
dec
gs
ficom
lods
push
loope
dec
or
pop
mov
dec
dec
mov
and
pop
cmc
add
adc
jle
out
not
ss
ret
inc
add
mov
adc
jbe
ja
jns
and
popf
xchg
icebp
lock
jg
xchg
push
repnz
jno
ja
xor
je
pusha
cmp
dec
and
pop
and
in
xor
test
jge
adc
or
enter
xchg
repnz
test
dec
push
xchg
sbb
cmp
rol
sub
pop
inc
je
pop
mov
jo
inc
inc
test
cmp
dec
call
xlat
xchg
loopne
(bad)
pusha
or
and
dec
cmp
or
xor
rol
dec
or
imul
adc
mov
xchg
out
cmp
in
push
push
jmp
push
push
push
and
xchg
xchg
inc
ret
push
mov
and
push
test
cmp
jl
test
mov
fisub
sub
pop
xchg
fcom
or
jp
inc
and
jge
cmp
aas
aaa
xor
and
xor
lods
(bad)
int
or
push
adc
mov
ins
ds
cmps
inc
add
add
sub
mov
adc
sub
mov
mov
sub
test
and
jnp
jbe
add
xor
cli
or
xchg
adc
aaa
jno
loop
sub
xor
adc
fdivr
inc
lock
test
or
sbb
out
xor
jns
ret
(bad)
mov
test
ret
pop
or
nop
and
mov
mov
lods
push
push
sub
inc
invd
cmp
add
and
push
push
dec
cli
and
aam
mov
lahf
xchg
mov
fsubr
ret
pop
loopne
adc
jnp
or
sbb
xor
rol
movs
sub
movs
or
test
psrld
or
jg
and
and
rcl
jp
sbb
jl
pushf
(bad)
jo
enter
xchg
push
sub
push
push
push
ins
pop
lar
(bad)
jge
push
sub
popa
adc
popf
cmp
lea
and
jnp
jo
push
pusha
pop
pop
lods
xchg
mov
and
add
(bad)
bound
pusha
sub
jg
mov
xor
inc
dec
sbb
or
xchg
call
push
mov
push
adc
push
rcl
dec
cmp
push
xor
das
dec
cmp
cmp
lock
pop
push
gs
xlat
push
mov
jmp
push
aam
inc
outs
sbb
test
add
sub
sub
mov
mul
dec
imul
xor
popa
js
adc
and
fwait
mov
fwait
xchg
xchg
rcr
adc
ret
add
push
sbb
sbb
inc
jb
aad
rol
sar
and
or
pop
dec
mov
std
push
in
jnp
outs
mov
imul
or
xlat
and
mov
sub
ror
jo
jg
xchg
dec
adc
aad
sahf
imul
sub
adc
mov
std
cmp
outs
clc
mov
inc
jecxz
test
rol
addr16
jle
cmp
mov
mov
sbb
fstp
mov
stos
mov
add
or
or
push
xor
movs
dec
outs
cmp
pushf
pushf
fmul
loope
(bad)
cmp
and
inc
or
daa
daa
and
xor
mov
clc
in
leave
enter
mov
in
pop
pushf
ror
addr16
loope
or
inc
sub
lods
cwde
mov
lods
or
mov
js
icebp
jno
jecxz
scas
dec
push
ins
ret
push
sbb
xchg
xor
and
inc
xor
jo
add
or
outs
je
aam
add
jae
xor
mov
fwait
xchg
leave
xor
jb
adc
movs
inc
pop
cmp
inc
xor
or
inc
jecxz
imul
xor
sbb
ret
sub
adc
add
sbb
jo
lock
inc
gs
les
cld
sbb
and
mov
addr16
cmp
and
dec
cmp
mov
xor
gs
add
or
rol
je
aad
adc
lods
(bad)
shl
sub
push
jne
jne
dec
cmp
mov
push
loop
movs
xchg
stos
test
mov
bsf
jbe
cmp
cld
adc
cs
fwait
or
sbb
dec
sbb
(bad)
nop
test
cmp
out
mov
sub
in
rcl
mov
adc
cs
jl
adc
cmp
ins
lods
push
(bad)
cmp
sbb
les
inc
pop
mov
or
loopne
mov
jmp
and
sub
push
or
pop
cmp
ret
pop
aaa
sar
pop
add
dec
cmps
aam
cmp
sub
sbb
inc
dec
gs
ret
mov
and
or
mov
and
stos
and
push
inc
ins
mov
add
add
jb
mov
dec
ret
sbb
jo
pop
xor
mov
push
and
popf
push
inc
fiadd
adc
add
bound
pop
push
dec
lds
push
xchg
adc
dec
movs
imul
dec
gs
(bad)
jmp
pop
jne
mov
adc
jg
imul
pop
pop
inc
and
dec
loopne
xor
adc
xor
jae
aad
mov
inc
mov
xor
or
jbe
aaa
add
gs
mov
inc
popa
call
and
bound
shl
dec
jge
push
inc
xchg
xchg
or
aas
and
pushf
cmp
pop
adc
sbb
or
add
adc
test
pop
add
xor
rol
adc
xor
and
and
jbe
add
dec
dec
add
cmp
inc
popa
js
jo
test
fadd
inc
mov
dec
inc
mov
rcr
sub
add
xor
call
dec
test
push
rol
adc
or
inc
leave
or
jmp
xchg
xchg
retf
inc
inc
imul
fdivr
sbb
jno
adc
pcmpgtw
xor
push
push
mov
mov
sbb
xlat
movs
jge
push
arpl
les
test
lds
and
jnp
je
sbb
mov
les
clc
pop
sub
(bad)
pop
adc
xor
push
push
mov
lock
cld
inc
cmp
mov
jmp
pop
movs
push
pop
add
jmp
xor
das
inc
sub
jmp
adc
call
and
inc
inc
ss
jge
add
or
mov
inc
movzx
push
movzx
or
rcr
dec
sbb
push
lods
or
adc
mov
fcmovnu
adc
cmp
add
mov
pop
aaa
jmp
outs
or
call
and
sahf
mov
pop
push
cmp
push
adc
dec
and
rol
in
nop
inc
iret
inc
jo
enter
nop
dec
push
push
shr
je
sbb
pop
nop
push
cmp
mov
inc
test
jae
lock
add
aam
repz
ss
sub
xchg
sti
mov
inc
or
cmp
jbe
adc
xor
mov
loopne
and
loope
ins
add
out
jae
(bad)
xlat
or
jmp
(bad)
cmp
scas
ins
xchg
call
sbb
jb
lea
stc
lods
ja
xor
mov
xchg
rcl
popf
int
dec
or
sub
or
lods
ss
push
test
mov
cmps
dec
loope
test
jnp
dec
mov
dec
xor
and
mov
push
mov
popa
add
retf
ret
aas
push
rcr
lock
je
mov
or
xor
movs
es
(bad)
pop
dec
test
in
inc
lahf
jle
sbb
add
sub
outs
and
sbb
or
setne
pop
pop
sbb
test
pop
mov
or
inc
repz
mov
add
or
xchg
mov
or
add
xchg
jl
pop
cmp
inc
xor
das
pop
ins
cmps
test
and
(bad)
mov
dec
test
fs
dec
push
stos
push
inc
sbb
inc
and
push
pop
push
movs
or
fld
into
aad
cdq
clc
and
enter
sbb
push
dec
xor
call
inc
dec
arpl
pop
idiv
faddp
aas
repnz
nop
fmul
mov
ins
movs
adc
xor
jle
or
mov
outs
outs
pop
test
jne
dec
sub
pop
push
cmp
jg
push
or
push
add
iret
push
ret
or
xor
pop
add
aad
ret
mov
and
xor
dec
push
sbb
and
(bad)
rol
add
ja
cmp
or
add
push
adc
sti
or
push
dec
sbb
shl
add
xor
sbb
jb
adc
in
xchg
xchg
adc
(bad)
push
jo
mov
adc
cwde
sbb
or
add
(bad)
xor
outs
ret
sar
inc
(bad)
push
pop
shr
mov
or
cmps
and
arpl
or
ret
cmp
mov
xor
sub
ja
push
outs
jg
sbb
sub
ja
dec
xlat
pop
je
and
icebp
outs
xchg
jmp
dec
inc
jne
adc
cwde
dec
xor
fadd
shl
and
sete
(bad)
loopne
xor
movs
dec
dec
push
jmp
adc
mov
inc
pop
js
daa
mov
cmps
aaa
lock
adc
inc
stc
jne
adc
sub
or
mov
fldcw
add
and
das
add
mov
test
cmp
clc
add
loopne
xchg
sbb
jne
ret
je
iret
adc
adc
push
pop
or
je
mov
and
sub
dec
(bad)
fwait
clc
or
xchg
sbb
rsqrtps
das
sub
xor
and
push
cmp
dec
das
adc
adc
call
dec
xor
mov
sub
outs
jl
fnstsw
fsubr
add
push
inc
or
mov
je
dec
shl
aad
push
mov
popa
mov
sbb
jne
je
ins
ror
pop
ffreep
pop
dec
mov
fsubr
xchg
pop
punpckhdq
and
inc
push
jo
push
add
push
jne
jo
stos
adc
inc
push
lock
add
(bad)
mov
sub
push
push
or
jns
dec
das
mov
mov
pop
nop
push
pop
cmp
inc
push
pop
mov
pop
add
push
int
sbb
mov
in
ins
js
push
mov
fwait
sub
repz
mov
push
imul
aas
push
hlt
test
pop
sub
cwde
add
call
mov
adc
sub
cmc
sbb
nop
xor
or
fs
out
in
daa
loopne
mov
pop
add
loopne
stc
jb
add
add
and
pop
sbb
pop
xlat
adc
pop
hlt
sbb
adc
lods
add
jge
add
scas
push
pop
adc
jecxz
dec
stos
arpl
dec
dec
ins
outs
push
outs
inc
dec
popa
pop
push
loope
jne
sbb
add
push
cmp
adc
add
icebp
push
add
icebp
or
adc
xlat
cli
or
add
movs
mov
loopne
dec
push
add
xor
inc
(bad)
(bad)
adc
call
shl
loopne
sbb
push
add
sub
or
pop
or
jecxz
adc
inc
popa
add
dec
iret
call
or
pusha
add
dec
push
mov
enter
push
and
or
movs
xchg
jmp
mov
stos
xchg
push
xchg
mov
mov
lods
repnz
sti
mov
or
fsubp
nop
(bad)
cwde
sbb
adc
xchg
inc
jae
pushf
retf
dec
fist
pusha
push
or
or
dec
mov
dec
push
les
cmp
push
mov
mov
pop
jecxz
add
shl
xchg
movzx
push
ret
jge
or
mov
adc
pushf
push
push
mov
scas
add
pusha
inc
push
fnsave
mov
dec
movs
push
or
fwait
int3
nop
mov
sbb
or
test
xchg
fimul
mov
inc
add
pop
cmp
hlt
mov
clc
inc
stos
(bad)
pop
mov
mov
inc
loop
cmp
add
push
nop
rcl
aam
scas
das
push
xchg
dec
leave
test
jnp
and
nop
adc
dec
sbb
neg
mov
xchg
hlt
das
inc
scas
bound
xchg
push
and
dec
lds
inc
and
pop
fwait
mov
clc
(bad)
jnp
and
add
push
cdq
sbb
cdq
ret
popa
and
out
push
jne
cmp
push
add
icebp
push
xchg
stos
fcom
test
mov
scas
pop
push
and
sbb
push
push
jg
outs
mov
jae
mov
stos
jp
or
fcom
into
push
pushf
(bad)
fcomp
aam
pslld
dec
cld
cmc
or
mov
test
jo
mov
in
push
in
sub
add
pop
clc
add
loopne
push
clc
mov
mov
inc
push
and
push
pop
add
daa
mov
es
add
xor
adc
pop
pop
sar
jl
(bad)
cs
loope
mov
mov
jg
add
mov
popf
daa
pusha
push
and
xor
mov
imul
push
adc
call
pop
add
add
add
xchg
or
sub
test
push
test
push
and
sub
push
in
and
sbb
pop
or
sbb
dec
aam
xor
push
loope
xchg
add
adc
aaa
ja
cmps
call
push
fs
mov
or
adc
inc
add
cmp
inc
ja
inc
fcmovnbe
rcr
cs
outs
inc
sbb
pop
(bad)
sahf
pusha
mov
and
dec
fist
add
int3
inc
push
inc
jg
mov
add
repz
ret
call
in
push
test
mov
es
les
push
dec
mov
dec
loope
sub
cld
cmp
push
pop
mov
cmps
xor
mov
sbb
lods
pop
lahf
jae
sbb
ss
sub
add
cdq
sub
dec
imul
push
jle
add
or
cmps
xor
jle
ins
pop
cmps
pop
xchg
mov
rcr
xchg
cmp
(bad)
xchg
scas
sbb
dec
aaa
push
gs
pop
add
jge
std
mov
jmp
mov
mov
icebp
jne
jmp
xchg
mov
push
in
mov
loop
xor
shr
pop
jo
aaa
ss
adc
sub
or
adc
mov
js
outs
inc
leave
or
pop
inc
xchg
sbb
aas
mov
pusha
popf
pop
sbb
loopne
sub
ins
fidiv
mov
add
clc
inc
or
and
push
push
fsub
add
mov
and
mov
mov
and
aad
ja
pop
fild
hlt
add
sub
or
fdivr
cld
lea
mov
cmp
push
movs
dec
or
add
je
and
push
shr
push
pop
mov
aam
or
lods
mov
mul
jmp
dec
xchg
pushf
jge
test
push
jp
and
shr
mov
stos
mov
dec
ret
push
jle
data16
cmp
ret
pcmpeqd
in
mov
xchg
loopne
stos
je
mov
sub
jae
and
popa
in
icebp
inc
loop
push
clc
aad
push
(bad)
fnstsw
and
stos
or
push
in
push
add
xor
sbb
fsubr
mov
mov
mov
mov
sub
push
push
mov
rcl
add
dec
loopne
jmp
mov
sub
dec
jb
fld
push
das
pop
sub
and
mov
retf
nop
mov
sub
mov
add
mov
adc
rol
call
adc
and
cmp
or
inc
or
jno
pop
das
sub
mov
add
mov
add
out
popf
inc
xor
inc
pop
sbb
je
aam
pop
sar
or
pop
sbb
cmps
scas
mov
inc
das
dec
add
xor
aas
fild
pushf
xchg
aad
pop
adc
js
xor
loope
add
scas
mov
enter
sbb
mov
or
sub
jmp
test
adc
cmps
rcr
add
data16
add
push
and
cld
mov
xchg
aas
in
mov
or
loop
cmps
inc
pusha
lods
or
dec
(bad)
int3
addr16
push
sbb
jns
bound
mov
mov
mov
push
jo
push
inc
pop
mov
mov
ficom
push
sbb
fdivr
icebp
mov
add
adc
push
imul
in
mov
push
mov
sbb
inc
sahf
jbe
or
gs
fld
test
push
mov
call
cmp
popf
dec
mov
cmps
jae
add
jp
test
rcr
movups
inc
pusha
aad
imul
out
add
and
enter
bound
adc
hlt
shl
mov
arpl
bndstx
xchg
xor
retf
add
sbb
cmp
pop
mov
push
cs
add
and
idiv
ja
cmp
adc
add
data16
data16
xchg
pop
pop
and
ja
es
push
inc
push
lods
cmp
mov
inc
in
daa
ds
push
add
enter
je
pop
call
fistp
sbb
push
pop
shr
sbb
mov
cdq
sub
in
loop
cmp
jo
add
rcr
daa
add
fsubr
mov
pop
popa
push
cwde
and
rcl
sbb
mov
xchg
add
lods
out
rcr
test
or
ss
sub
das
fcmovbe
lds
push
aas
addr16
inc
cmp
mov
or
out
sub
jge
fisttp
cmp
adc
push
sub
dec
inc
ins
scas
test
outs
dec
mov
jnp
cdq
clc
push
nop
pop
loope
mov
les
push
div
lea
mov
sar
rcl
xor
push
aas
les
mov
jbe
jnp
push
fadd
push
add
add
mov
ret
lea
add
adc
popa
push
cwde
sbb
bound
ret
shl
or
add
(bad)
adc
push
(bad)
cmc
cmps
loopne
dec
in
or
pusha
inc
add
inc
ins
or
je
push
adc
cmps
pop
add
test
sbb
inc
mov
mov
push
add
add
lods
pop
mov
inc
sub
and
jne
or
add
add
add
iret
add
or
ja
test
push
add
sbb
add
or
test
ins
cwde
mov
add
addr16
push
mov
cmp
mov
lock
push
sub
sub
or
pushf
imul
movs
ret
dec
sbb
push
adc
mov
fidiv
add
mov
and
mov
daa
sahf
push
mov
pop
push
xor
or
(bad)
jno
sub
mov
enter
scas
mov
or
add
pusha
add
add
sbb
and
adc
add
les
mov
mov
mov
outs
mov
jmp
dec
test
(bad)
into
lahf
pop
jl
icebp
push
sub
daa
ss
ret
inc
lahf
mov
in
dec
aas
js
inc
sbb
popa
outs
ins
push
inc
outs
mov
shl
push
cmp
xchg
xor
test
xor
or
cmp
(bad)
addr16
inc
xchg
ins
es
add
test
movs
mov
lock
imul
inc
push
inc
data16
pop
rol
sbb
xchg
dec
jno
(bad)
in
imul
sbb
ss
cmp
sbb
es
gs
add
ins
jns
movs
pop
adc
dec
and
adc
add
lds
loope
cmp
mov
add
fwait
xor
adc
add
out
cmp
add
adc
jmp
xchg
xor
das
ins
test
mov
test
ja
je
cmp
add
xor
push
push
aas
imul
xor
movs
in
xor
test
jmp
or
ins
daa
fcomp
repnz
outs
std
test
movs
or
or
xchg
sub
rol
(bad)
add
or
cmp
test
cs
in
lods
cmp
mov
outs
mov
nop
mov
jecxz
xchg
mov
adc
or
mov
add
inc
mov
jmp
push
mov
add
adc
xchg
sbb
je
test
loope
ins
(bad)
int
and
lods
mov
rcl
mov
mov
dec
jmp
je
idiv
das
retf
(bad)
jle
js
icebp
hlt
jl
inc
test
cmp
jne
call
icebp
std
fiadd
inc
je
popa
(bad)
sbb
stos
xchg
pop
aas
mov
cmp
stos
and
xor
out
cmp
mov
retf
mov
call
cmp
and
ja
fmulp
and
sub
lods
or
xchg
and
or
fld
xchg
adc
add
xchg
jne
out
add
sub
xor
or
pop
adc
add
movs
in
jbe
nop
xlat
or
dec
push
retf
pop
adc
dec
es
push
add
pusha
add
inc
icebp
xor
out
out
mov
cmp
mov
test
inc
movs
in
cmp
sub
cld
jo
(bad)
popa
pop
jmp
pop
and
mov
lock
cmp
pop
fs
sbb
iret
mov
push
out
jae
inc
mov
sbb
lea
push
pop
dec
in
repnz
sar
inc
daa
lock
cmp
jg
push
xchg
clc
(bad)
loopne
arpl
daa
daa
daa
mov
bswap
int3
loopne
fcom
jo
outs
adc
popa
push
adc
fs
pop
sub
or
in
aaa
pop
mov
fld
mov
ins
xchg
jmp
dec
aas
xor
adc
pop
sub
scas
sbb
jge
adc
or
mov
imul
das
call
push
dec
sub
add
hlt
add
pop
jne
popf
push
sub
icebp
add
ret
add
das
clc
adc
les
nop
sbb
sbb
xlat
sbb
imul
adc
jmp
arpl
mov
ds
bswap
in
mov
das
sub
adc
(bad)
call
sub
or
int
ror
inc
mov
cs
imul
inc
pop
mov
cmp
mov
inc
pop
or
lds
fwait
jae
in
or
(bad)
push
add
clc
or
aaa
es
ret
jo
(bad)
fcom
adc
cmp
jnp
fimul
xor
xor
jne
shl
div
or
add
jge
rol
(bad)
sub
sar
jmp
mov
inc
not
pop
outs
test
inc
pop
adc
sbb
cmp
dec
imul
add
scas
cs
xor
push
shr
push
(bad)
dec
mov
or
mov
sub
dec
cmps
mov
mov
fisttp
je
aaa
add
or
fwait
(bad)
ret
mov
lea
mov
adc
test
ins
(bad)
push
and
jo
or
xchg
test
push
cmp
pop
and
push
push
push
jecxz
jecxz
push
and
add
mov
add
cmc
add
mov
jmp
mov
add
sbb
icebp
or
jb
in
add
add
repnz
adc
adc
xchg
sbb
jns
add
movs
mov
js
int3
or
lock
or
inc
jnp
(bad)
jmp
aaa
or
jecxz
out
sbb
push
mov
(bad)
mov
adc
ret
push
mov
test
xchg
mov
not
jge
(bad)
and
and
add
(bad)
inc
dec
pushf
push
iret
fst
(bad)
mov
aam
leave
mov
movs
das
(bad)
in
and
aaa
stc
mov
rcr
rcl
dec
dec
cmp
cmp
mov
arpl
cmp
repnz
mov
jnp
retf
mov
or
das
aad
ffree
cmp
sub
sub
mov
sbb
push
adc
cmp
outs
pusha
mov
lods
jne
fist
xchg
mov
loopne
inc
push
cdq
mov
mov
dec
mov
mov
push
pop
lock
(bad)
aad
stos
enter
clc
dec
test
inc
mov
cld
in
xor
pop
sbb
xor
or
ret
idiv
clc
xor
frstor
and
or
sub
jge
push
int3
in
ror
test
mov
xlat
movs
adc
fwait
jmp
mov
lea
pop
rcr
das
popf
bound
inc
test
test
lea
or
fnstcw
(bad)
push
rol
inc
mov
jne
lods
stc
xchg
jle
retf
or
cmp
cli
push
sbb
mov
cmp
pop
jl
cmovne
scas
imul
jmp
nop
fnstcw
push
(bad)
sti
xor
div
mov
pop
ss
mov
sbb
ret
pop
cli
mov
cmp
push
xchg
sub
iret
mov
cmps
ins
and
ss
sbb
sbb
fs
int3
sahf
mov
(bad)
mov
test
cmc
(bad)
cmp
call
jl
mov
fmul
rcl
enter
sub
and
or
cld
nop
jg
je
cmp
ss
in
sahf
cld
outs
add
add
lock
sub
hlt
or
xchg
inc
cmps
clc
cld
add
fimul
and
into
icebp
jmpw
std
xchg
pop
xchg
adc
cmp
in
fistp
fnstenv
(bad)
mov
mov
jmp
jne
sbb
cs
mov
scas
sbb
xchg
mov
popf
imul
cld
pop
in
xchg
nop
ins
cs
retf
not
clc
or
inc
xchg
pop
imul
hlt
push
add
or
sbb
pop
ret
xchg
jmp
pop
push
sub
loopne
mov
(bad)
lock
aaa
or
les
icebp
sub
in
fs
xor
cmp
movs
pop
inc
lahf
and
aas
push
inc
xor
push
dec
inc
dec
push
addr16
gs
inc
push
sub
pop
rol
jo
mov
add
in
mov
dec
verw
mov
or
popa
ret
xchg
sysenter
or
inc
and
movs
imul
je
(bad)
jmp
push
adc
sub
not
jae
lods
aas
and
adc
in
shl
lods
push
or
xor
movs
xchg
test
jae
xor
jmp
mov
enter
push
cmp
add
dec
xchg
fist
mov
cmp
add
shl
push
jo
(bad)
lods
dec
and
lods
push
popf
push
push
or
adc
sub
imul
mov
xchg
jbe
call
ret
dec
or
aas
mov
mov
push
jb
test
mov
xchg
cmps
cli
jle
push
bndldx
push
inc
jmp
aaa
das
xor
adc
add
daa
mov
or
popa
add
and
adc
and
ret
add
out
ins
or
mov
scas
retf
push
inc
push
bound
(bad)
adc
mov
repnz
pop
cmp
nop
bound
call
or
add
pop
jbe
add
arpl
push
cmp
add
add
jl
pop
and
or
cmps
mul
or
or
es
mov
nop
add
sbb
or
push
sbb
je
mov
push
out
push
adc
jbe
xor
movzx
add
or
test
dec
stos
inc
mov
and
aaa
adc
or
inc
adc
pop
push
push
clc
call
enter
int3
mov
cmp
call
and
push
push
sahf
lock
add
mov
enter
in
adc
add
sub
clc
popa
call
sbb
dec
pop
cmp
add
call
addr16
jmp
mov
and
(bad)
(bad)
mov
cs
ss
mov
and
loopne
or
rcr
arpl
push
rol
xchg
or
daa
(bad)
add
leave
leave
rcl
aam
jo
xor
arpl
shl
mov
test
cdq
push
push
(bad)
stc
adc
vaddps
xchg
cmp
test
dec
and
add
nop
fdivr
cmp
gs
xor
push
aas
sbb
push
xor
add
add
movs
add
adc
xor
ret
fcomp
movs
jbe
and
in
push
rol
sub
add
mov
add
popw
xor
inc
add
lds
push
push
aas
mov
push
ror
push
mov
rol
js
test
movs
inc
add
je
add
or
sub
imul
xchg
pop
sbb
push
mov
lahf
arpl
fnstsw
mov
adc
sbb
inc
lock
in
inc
cmps
fiadd
pusha
mov
cld
inc
push
shl
aas
add
or
xchg
(bad)
xchg
dec
fnstcw
pop
out
push
jmp
add
outs
test
mov
daa
inc
fimul
imul
jbe
add
lock
sbb
pop
adc
mov
push
inc
cmp
sub
test
add
adc
mov
pop
mov
ret
jmp
clc
out
mov
add
adc
rol
push
sub
xor
sbb
add
xor
in
sbb
cmp
loopne
adc
add
sbb
icebp
nop
xchg
xchg
(bad)
adc
xor
sub
es
pusha
icebp
jmp
popa
or
mov
pusha
jmp
xchg
xor
rcl
pop
inc
add
add
cs
push
mov
outs
add
push
loopne
mov
pop
push
lds
push
push
idiv
lea
ins
hlt
call
cmp
icebp
adc
dec
ret
push
add
jecxz
and
sti
add
pop
or
sbb
sub
lea
add
push
pop
fimul
call
imul
cli
clc
sbb
dec
adc
hlt
jno
call
push
nop
inc
movs
lods
or
add
add
sub
pcmpgtb
jge
fnstsw
push
or
ja
or
test
rcl
repz
adc
aaa
push
pop
enter
jge
cmp
loop
dec
call
cwde
xor
scas
in
enter
pushf
jecxz
mov
xchg
out
je
fsub
or
fcom
fsub
and
fsubr
push
int3
add
jle
mov
lds
inc
fimul
mov
out
xchg
mov
push
int3
int3
std
add
lsl
xor
clc
push
sbb
pop
inc
pop
imul
lahf
fidivr
cmp
rol
jmp
cs
mov
xchg
adc
inc
push
ror
sbb
and
and
jns
or
mov
enter
hlt
dec
and
pusha
or
iret
xchg
repz
jne
jns
les
sub
push
mov
scas
xchg
inc
scas
add
nop
mov
xor
rcl
popa
arpl
retf
test
push
pop
or
dec
call
repz
nop
dec
es
hlt
lock
push
nop
dec
lock
sbb
push
nop
in
call
dec
dec
repz
xchg
dec
or
mov
xchg
jl
and
pop
popf
cmp
push
(bad)
add
loope
pushf
add
or
add
mov
add
movs
loopne
xor
inc
pusha
loopne
mov
cli
push
ss
lea
(bad)
pop
inc
add
jmp
jb
je
jmp
shl
sub
jnp
jmp
pop
push
js
and
inc
jecxz
sub
ss
xor
mov
in
mov
add
add
aas
repnz
inc
imul
into
adc
and
pop
dec
mov
cmp
push
add
or
add
cmp
retf
les
adc
add
add
sub
add
lahf
xchg
loope
(bad)
pop
sub
addr16
push
push
call
cmp
add
call
push
cmp
jne
cmp
pusha
cpuid
jbe
lock
fmul
add
inc
movs
add
test
or
cli
test
stc
aam
pop
and
mov
add
pop
mov
das
or
pop
div
test
push
cli
fdivr
add
push
jg
rcl
inc
push
in
retf
add
jmp
add
jnp
mov
inc
jb
and
call
nop
push
inc
fistp
push
icebp
fild
push
in
cmp
inc
ret
shl
loope
dec
cwde
pop
inc
and
inc
dec
and
dec
dec
or
mov
mov
sbb
pop
push
mov
neg
or
jl
sbb
sti
push
fs
gs
lock
inc
mov
call
scas
lock
in
adc
add
sbb
mov
dec
sbb
fcomp
add
push
pop
xor
nop
cdq
or
loop
mov
and
xor
aam
jns
xlat
mov
push
sti
push
and
jns
out
mov
das
sub
mov
cli
add
scas
adc
dec
dec
int3
add
scas
adc
dec
dec
enter
adc
dec
dec
les
les
rol
scas
adc
dec
dec
mov
sbb
mov
mov
mov
sub
popa
mov
inc
mov
out
adc
sbb
hlt
hlt
hlt
xchg
pushf
(bad)
enter
mov
sbb
or
mov
test
not
mov
xor
icebp
push
push
ja
push
loop
jmp
popa
cdq
sahf
and
scas
and
adc
fimul
and
in
imul
mov
fs
dec
add
data16
cmp
push
in
add
inc
jmp
call
les
mov
leave
aad
adc
dec
and
sti
adc
and
push
pop
pop
icebp
jl
pop
ss
jae
jmp
into
dec
nop
lock
iret
push
xor
mov
adc
lahf
(bad)
imul
push
cmp
cmp
(bad)
fild
pop
mov
sahf
popf
out
fcmovb
(bad)
lahf
xchg
mov
sub
dec
scas
pop
jmp
mov
xchg
loopne
add
dec
fcom
or
xchg
fmul
rcl
dec
aam
aam
loopne
add
xchg
shl
jo
add
xchg
int3
or
enter
add
(bad)
rcl
add
hlt
test
jae
lds
clc
mov
loopne
cmp
arpl
cmps
outs
mov
and
mov
ficom
pop
ins
inc
jp
out
mov
pop
enter
call
adc
mov
adc
div
cmps
shl
sub
push
cmps
rcl
xchg
bnd
adc
ret
push
js
and
ret
adc
test
call
push
and
adc
add
mov
sub
into
or
nop
push
jl
xlat
mov
and
ja
push
stos
je
and
add
inc
nop
cwde
das
pusha
jb
sar
outs
call
xor
(bad)
push
mov
jge
add
add
push
cmp
jne
add
push
xchg
jle
jl
jmp
xchg
dec
mov
inc
dec
cmc
lock
test
or
retf
cmp
pop
cmps
dec
inc
mov
in
aaa
add
cs
jmp
pop
ret
jl
xchg
push
mov
jnp
es
push
je
xor
cld
push
call
dec
in
in
sbb
push
loopne
sbb
push
fdiv
call
fdiv
call
aam
jb
add
rcl
add
int3
int3
enter
and
enter
pop
xchg
inc
adc
push
sbb
je
dec
mov
adc
push
inc
push
bound
mov
adc
jle
sub
imul
in
add
or
icebp
mov
jmp
xchg
sub
les
sub
and
xlat
jmp
lods
jmp
shl
ja
in
mov
add
lock
add
jmp
aas
pop
add
fistp
jo
and
daa
ja
cmps
repz
nop
lock
sub
(bad)
adc
and
pop
pop
mov
xor
mov
ins
pop
pushf
(bad)
xchg
leave
fsub
test
mov
movs
movs
fmul
inc
es
cwde
sub
(bad)
loopne
push
adc
ins
mov
add
cmp
ja
inc
sub
jbe
mov
add
dec
mov
add
fwait
sub
data16
cmp
test
ins
add
inc
or
iret
cdq
sub
push
(bad)
(bad)
div
add
push
loopne
mov
add
add
neg
mov
pushf
retf
daa
lock
hlt
pop
neg
pop
cmc
dec
or
sub
mov
add
dec
jne
rol
sub
mov
pop
add
add
shl
or
ds
or
jo
inc
add
dec
add
(bad)
xor
(bad)
scas
cs
pop
push
mov
pop
test
mov
pop
sbb
xor
add
daa
sbb
sti
popa
and
out
leave
lods
pop
push
shr
sub
cmp
sbb
adc
in
in
and
or
mov
add
add
out
jp
sbb
mov
mov
cs
and
enter
and
adc
fucomp
push
mov
jmp
into
rcl
jl
pop
add
sbb
stos
add
loopne
add
sbb
nop
push
jb
ss
mov
test
cmp
adc
add
cmp
fsub
dec
and
fdiv
sub
add
or
mov
test
(bad)
js
shl
stos
add
or
fwait
or
iret
fdiv
inc
cmp
dec
stc
dec
(bad)
sub
xchg
xlat
and
pop
xor
or
daa
lea
sbb
jge
xor
jae
hlt
ror
jns
daa
test
mov
cmp
add
xchg
imul
add
jne
gs
pop
js
(bad)
mov
add
push
(bad)
and
lea
push
mov
or
clc
iret
cwde
jl
or
push
add
sub
fsub
cmp
push
or
movs
stos
mov
mov
(bad)
adc
jnp
mov
sar
addr16
dec
jbe
push
scas
cmp
ror
rcl
clc
or
push
sbb
or
xor
arpl
mov
js
scas
jmp
push
enter
push
ja
pushf
bound
inc
lea
mov
mov
scas
es
ins
daa
mov
mov
inc
mov
jnp
dec
sbb
add
je
pop
rcr
aas
or
lds
pop
add
aas
add
ret
nop
pop
jno
dec
mov
cmp
add
pop
or
add
push
lahf
loopne
loop
dec
xchg
xchg
adc
add
out
ss
push
or
mov
inc
and
lock
nop
push
shl
push
adc
adc
pop
push
add
shl
xchg
in
xchg
push
dec
lahf
mov
shl
ja
cs
jns
sbb
mov
mov
pop
jmp
in
xchg
cmc
cmps
or
add
add
inc
xor
and
mov
jo
and
adc
inc
shl
jno
push
lahf
pop
and
adc
bound
push
les
call
jno
mov
push
pop
test
or
bound
jecxz
xor
inc
call
adc
adc
or
loopne
loopne
or
mov
or
push
out
push
in
ds
or
rcr
cmp
pop
xchg
pop
jnp
cmp
mov
add
push
inc
mov
dec
cwde
(bad)
clc
ja
lds
inc
push
sub
mov
not
dec
xchg
pop
imul
mov
imul
dec
sbb
mov
add
sub
sbb
sbb
ret
push
xor
xchg
outs
outs
pop
pop
(bad)
inc
dec
aaa
jmp
sbb
in
in
push
jnp
add
dec
push
lock
lock
in
pop
(bad)
rcr
or
rcl
pop
into
imul
and
add
jo
cdq
cli
lahf
mov
jne
cmp
xchg
sbb
test
fldcw
inc
sbb
je
outs
add
fcomp
loopne
sub
pop
call
mov
inc
and
or
jg
add
cmp
add
jmp
mov
je
sub
xor
imul
mov
and
or
in
push
xchg
add
and
add
or
(bad)
adc
unpckhps
je
jl
push
xchg
je
jle
sbb
sbb
fucomp
jne
lea
sti
stos
ret
push
in
nop
or
jns
add
jb
minps
add
movs
dec
ds
gs
hlt
lock
push
nop
retf
cmp
into
and
outs
mov
push
or
jne
add
or
stos
mov
or
(bad)
je
mov
mov
push
dec
lea
push
enter
jge
or
adc
jne
ins
or
push
adc
push
xchg
mov
aas
sbb
gs
clc
mov
jmp
xor
dec
inc
xchg
xor
sbb
pushf
std
adc
mov
jle
aad
das
jo
lahf
ret
xchg
and
xlat
adc
fdivr
sub
inc
mov
retf
dec
jg
daa
mov
ror
jae
fdivr
jecxz
add
cmp
loop
test
jbe
test
mov
out
sbb
cmp
pusha
dec
mov
mov
add
add
add
mov
test
aaa
and
ret
adc
sub
dec
hlt
fnsave
fimul
je
mov
add
cmp
jo
xchg
add
and
cli
es
scas
add
and
mov
outs
mov
call
lods
inc
or
in
and
inc
inc
loope
pop
sbb
adc
jl
ror
das
mov
dec
sub
ret
(bad)
jle
jae
mov
scas
sub
add
mov
lock
mov
pop
xchg
dec
adc
adc
cmp
jo
stos
aaa
push
add
sbb
adc
mov
push
sbb
loop
(bad)
retf
imul
fsubr
in
cdq
adc
scas
jmp
cmp
ror
xor
mov
or
adc
cmc
push
lock
jo
cmp
inc
xor
clc
mov
inc
mov
and
add
inc
jb
add
jnp
adc
lar
out
dec
mov
pusha
or
mov
(bad)
test
ins
(bad)
jg
add
inc
and
dec
daa
pushf
push
or
inc
add
sbb
scas
test
popa
stos
dec
pop
les
sbb
push
or
add
inc
outs
add
mov
xor
jb
scas
pop
sbb
mov
aas
daa
add
pop
add
mov
lods
das
loop
adc
jnp
adc
lock
inc
mov
xchg
pop
loope
inc
fist
inc
dec
push
jne
sbb
in
std
add
or
aam
or
ja
sbb
outs
int
es
cmp
fld
jo
fwait
popa
jl
cmp
add
push
sub
or
mov
(bad)
cli
loope
push
sbb
xor
mov
adc
mov
pop
add
cmps
movs
push
sar
sbb
dec
push
int3
in
(bad)
sti
push
and
enter
aas
lahf
add
add
mov
and
inc
mov
adc
ret
and
push
and
cdq
mov
inc
push
arpl
inc
or
adc
scas
dec
fimul
mov
lea
or
pop
adc
xchg
mov
ja
dec
adc
inc
test
and
inc
cmovbe
sbb
inc
mov
adc
sbb
xlat
dec
dec
dec
je
push
and
das
retf
push
mov
(bad)
and
scas
add
push
mov
das
adc
imul
mov
dec
ins
mov
mov
dec
sidtd
xchg
test
add
es
mov
shl
mov
dec
and
sbb
mov
dec
pop
loop
outs
test
and
push
outs
ins
dec
ret
and
jl
pop
push
mov
jmp
sub
ror
out
(bad)
jmp
ret
inc
push
das
inc
push
adc
pop
dec
repnz
outs
and
call
jle
mov
or
mov
adc
xor
add
add
or
xor
adc
pop
push
cmp
mov
mov
pop
test
ret
ret
sbb
pop
or
outs
iret
pop
shl
mov
add
ret
dec
test
dec
and
adc
mov
ret
cmp
mov
repnz
ret
xchg
xchg
stos
sub
add
adc
outs
ins
adc
es
add
sub
push
outs
addr16
and
xor
or
lods
pop
xor
inc
leave
inc
dec
xor
leave
aas
hlt
ret
mul
shr
outs
push
sbb
cwde
iret
adc
cmp
loope
enter
or
data16
bound
mov
or
or
les
(bad)
in
enter
push
lds
xchg
fstp
enter
or
shufps
pop
push
push
xchg
int3
cmp
jae
pop
adc
(bad)
jne
call
inc
jne
add
out
pop
xor
add
loopne
es
das
imul
dec
das
add
mov
dec
test
cwde
cwde
inc
popa
push
or
clc
lds
stos
xchg
sar
dec
xor
pop
or
add
jo
add
ret
loope
and
fcom
cli
mov
jne
inc
sub
xchg
and
add
add
dec
adc
movs
sbb
mov
ins
arpl
jns
stos
aam
sub
adc
adc
xor
fdiv
xor
popa
les
jnp
mov
call
lgs
(bad)
sbb
(bad)
and
sbb
jo
adc
pop
or
jbe
cmps
adc
dec
or
mov
mov
pop
cmp
fwait
lds
pop
or
in
pop
inc
pop
enter
push
jg
pop
pusha
and
xchg
arpl
inc
loope
push
pop
xchg
mov
xor
jns
mov
add
cmp
add
or
clc
xchg
int3
xchg
sahf
adc
add
mov
add
or
cmp
inc
push
xor
add
arpl
cs
loope
add
mov
ret
arpl
push
das
int
sbb
or
or
xchg
and
push
add
or
(bad)
sti
xor
shl
mov
xlat
cdq
out
retf
mov
inc
cmovbe
adc
push
mov
pop
xor
das
ror
aaa
sub
mov
pop
xor
sbb
push
hlt
addr16
fmul
pop
pusha
add
and
ret
loop
popa
imul
pop
inc
call
adc
add
add
jle
aaa
je
ja
or
outs
fs
pop
or
sbb
push
push
jne
movs
fs
sti
(bad)
fwait
xchg
movs
dec
or
mov
mov
ret
cdq
jbe
add
pop
test
or
or
dec
inc
pushf
mov
sbb
outs
shl
mov
add
and
inc
in
sub
fdivr
add
pop
int3
lock
rol
add
add
xor
lock
lock
adc
gs
paddusw
or
inc
xchg
and
sbb
aas
les
push
adc
dec
outs
jae
jo
push
fidiv
push
inc
sbb
push
xchg
into
das
iret
push
je
ret
inc
sub
push
sbb
push
loope
ss
push
cld
rcl
push
clc
test
lahf
out
in
add
cmps
fsubr
jmp
mov
pop
push
and
js
xchg
andps
adc
sbb
and
ds
inc
and
or
mov
jnp
and
outs
dec
and
add
xchg
mov
inc
or
rol
sbb
gs
adc
and
and
add
mov
sbb
ins
or
push
mov
add
mov
add
push
bound
data16
sbb
dec
mov
test
aaa
iret
rol
sub
ficomp
dec
cmp
(bad)
xor
jle
cmps
iret
mov
adc
pop
ror
adc
adc
in
inc
add
adc
sbb
cmp
inc
dec
add
and
test
dec
or
sub
inc
mov
ret
pop
inc
ins
add
sub
xor
push
rcl
jns
arpl
es
push
pop
cli
fist
add
gs
outs
fs
fbld
rol
xor
mov
sub
adc
gs
sub
(bad)
jo
mov
or
mov
dec
pusha
fisttp
and
and
xchg
and
shr
jmp
ins
repnz
mov
outs
mov
cmp
scas
push
dec
inc
push
iret
and
and
sub
adc
inc
dec
(bad)
test
adc
mov
in
or
bound
fild
add
push
dec
(bad)
stos
push
cmp
add
jmp
push
push
call
xchg
arpl
popf
xchg
push
sbb
push
and
xor
shl
and
push
fistp
push
adc
cld
xor
jmp
cmp
xor
dec
inc
dec
sbb
pop
out
jns
and
cmp
scas
xlat
mov
or
adc
ror
call
jmp
inc
clc
mov
leave
and
aaa
xchg
nop
or
retf
aad
cmp
jmp
cmp
and
pop
(bad)
(bad)
ds
jne
xor
pusha
jb
sbb
mov
dec
push
add
fist
sbb
test
and
mov
arpl
pop
shl
xor
rcr
xor
xchg
or
push
cld
ror
pop
xor
sub
or
scas
and
lea
sub
pop
shl
rcl
xor
rcl
(bad)
(bad)
scas
aam
cmp
(bad)
add
mov
jmp
sar
sub
pushf
and
sbb
push
adc
or
xor
inc
adc
push
and
push
ret
adc
or
and
inc
or
inc
add
ficom
or
loope
ins
pop
cwde
inc
jb
into
popa
push
and
jne
outs
sahf
sub
sar
or
jae
mov
aas
xor
mov
mov
dec
fbld
push
jb
or
icebp
(bad)
lea
cmp
inc
dec
add
add
mov
in
popf
sbb
enter
nop
imul
and
add
(bad)
lock
int
aaa
cld
sti
mov
push
sbb
jno
add
xlat
inc
dec
inc
hlt
sub
inc
jbe
sbb
fisttp
clc
(bad)
mov
stos
sub
call
push
inc
mov
rcr
dec
fisubr
push
add
scas
outs
inc
xor
mov
pcmpgtd
jo
sti
aaa
jl
xor
or
sub
add
js
add
fcom
push
fild
mov
and
je
mov
xor
sub
(bad)
repz
xor
call
out
jne
or
into
push
sub
jae
cmp
test
sti
aad
fsubr
jle
(bad)
loopne
push
mov
jne
rol
mov
mov
rcr
mov
(bad)
jne
adc
test
aad
(bad)
xor
dec
cmp
inc
pop
push
bound
sub
sbb
inc
aas
pop
repz
mov
bound
jmp
test
push
inc
popa
and
add
adc
inc
outs
or
imul
inc
ins
scas
xchg
fnstcw
data16
push
es
das
dec
push
inc
hlt
mov
mov
(bad)
in
fsubr
std
(bad)
pop
fsub
push
push
je
pop
sbb
and
test
adc
inc
inc
int3
jbe
sti
mov
pop
(bad)
or
les
retf
push
dec
mov
jg
adc
or
das
adc
push
unpckhps
mov
add
jno
inc
jl
push
daa
cdq
add
cmp
inc
rcr
pop
das
enter
jno
imul
push
push
push
and
loop
mov
add
outs
imul
push
inc
xor
add
or
xlat
add
push
pop
outs
push
ret
add
fld
or
cmp
or
(bad)
sbb
push
xor
add
add
das
(bad)
pop
jnp
sbb
cmp
sub
fadd
pop
sti
neg
jno
jmp
pop
and
inc
cmp
xor
ja
adc
call
cmps
sbb
pushf
pushf
ret
jg
sbb
cmp
bound
xchg
lods
mov
jno
cmp
dec
clc
inc
mov
or
in
push
mov
dec
cmp
sbb
jl
add
push
jge
xor
repz
aam
jns
fdivr
fldl2e
mov
or
fsubr
xchg
add
xchg
fist
cmp
mul
out
nop
pusha
or
sbb
dec
adc
or
lahf
faddp
and
jle
mov
div
push
nop
or
pop
neg
scas
pop
mov
jmp
nop
adc
inc
mul
add
and
dec
push
punpckhdq
fiadd
cmp
inc
in
movhps
mov
popa
pusha
cmp
sbb
shl
loope
sub
loop
fwait
sldt
pop
loop
or
xchg
sbb
jne
call
push
test
mov
pusha
inc
lahf
adc
outs
jmp
jae
popa
push
jae
fisub
jmp
xor
(bad)
call
pop
or
jne
outs
ja
dec
inc
xor
test
or
add
or
stos
loope
mov
push
adc
mov
add
popa
movs
pop
pop
add
int3
(bad)
adc
mov
ss
fld
adc
and
les
call
fadd
daa
jns
loopne
loope
add
div
aam
das
jmp
jmp
cmp
inc
dec
mov
push
fadd
jmp
or
clc
data16
out
inc
or
or
pop
jg
add
outs
jne
push
ror
cs
dec
jae
add
or
push
dec
push
outs
jge
ret
sti
mov
xchg
add
retf
add
pmaxsw
arpl
push
dec
aas
and
sub
(bad)
push
loop
or
jns
or
mov
(bad)
adc
jno
outs
pop
(bad)
loope
and
inc
enter
leave
mov
out
ret
cdq
sbb
add
fbstp
cmp
xchg
push
cmp
lea
jae
jecxz
int
adc
lock
aam
cli
jecxz
sub
dec
sub
cwde
jmp
bound
loopne
loop
retf
pop
push
(bad)
sbb
mov
sbb
xor
lahf
pop
bndstx
pop
movs
sbb
mov
sbb
in
ficomp
sub
gs
sahf
test
sar
leave
jl
imul
inc
push
push
push
jbe
sar
sub
pop
lahf
pop
mov
std
mov
and
fwait
sub
sbb
and
xor
and
dec
scas
ret
into
out
aas
(bad)
aas
mov
add
test
add
cmp
ret
push
test
inc
scas
or
jo
jb
cmp
adc
shl
ja
mov
cmp
les
je
shl
aaa
add
xchg
stos
pop
ins
mov
jb
sbb
jecxz
sub
cmp
mov
out
add
dec
push
faddp
add
push
and
mov
inc
cs
push
enter
fdivr
push
scas
jmp
addr16
bound
adc
mov
pop
daa
out
cmp
pop
sbb
out
mov
jle
inc
or
mov
sub
adc
push
fcom
inc
xchg
ret
sbb
addr16
aam
in
or
sbb
add
lahf
cmps
mov
sar
test
fdivr
ja
mov
add
xchg
push
ret
inc
pop
or
dec
lods
outs
cmp
fwait
in
cmp
push
add
movs
and
js
mov
(bad)
cmps
jge
cmp
imul
in
jmp
mov
cwde
stos
test
add
sub
jbe
inc
pop
mov
adc
pop
imul
nop
ins
dec
add
and
dec
adc
popf
ins
js
xchg
push
or
add
es
or
adc
je
lock
cli
add
ja
aaa
mov
fiadd
dec
sub
scas
sub
mov
in
pop
bound
(bad)
ficomp
dec
aas
adc
mov
xchg
popa
pushf
xor
cld
adc
xor
adc
rol
push
and
fcom
xlat
or
test
loopne
cld
push
xchg
test
nop
pop
out
xor
or
mov
sub
out
dec
inc
mov
pushf
or
aam
add
add
fdivr
xchg
sub
sub
or
push
pop
lahf
sbb
sub
add
outs
ins
jo
jae
test
push
pop
clc
loope
retf
sub
aam
pop
mov
cmp
in
adc
out
pop
push
test
enter
lock
mov
inc
test
push
or
mov
push
and
push
pop
movs
mov
movlps
rcr
jp
(bad)
mov
xchg
xlat
sub
out
das
pop
add
cvtpi2ps
lock
fwait
das
scas
(bad)
icebp
je
pop
in
mov
xchg
xchg
xchg
adc
out
mov
mov
ins
retf
dec
stos
je
xor
popa
pop
xchg
pop
pop
imul
and
dec
cs
add
arpl
jno
or
int
and
inc
pusha
inc
jae
(bad)
mov
js
mov
add
and
pop
test
dec
adc
inc
loop
pop
loopne
push
imul
leave
les
or
cs
sbb
sbb
and
mov
stos
ror
jp
or
and
mov
xchg
shl
adc
call
test
mov
add
dec
inc
sub
add
subps
(bad)
adc
inc
jae
xchg
add
test
push
inc
or
push
outs
sbb
push
repnz
adc
inc
xor
jae
push
sbb
dec
push
ffree
ja
test
sub
jmp
and
pop
imul
das
pop
add
add
xor
(bad)
movs
repnz
add
adc
inc
push
inc
inc
cmp
xchg
adc
test
add
add
gs
test
clc
das
pop
hlt
or
pop
sbb
add
mov
test
imul
cld
sub
out
or
sbb
and
cmp
jne
in
push
add
popa
clc
scas
popf
add
push
div
mov
sbb
jnp
add
jne
(bad)
jnp
enter
cmp
jne
dec
adc
add
add
push
add
mov
stos
jbe
add
js
mov
mov
lahf
or
aam
xchg
cld
mov
adc
out
ja
sar
sub
loop
pop
push
push
retf
loope
cmp
sbb
jle
adc
add
inc
add
inc
jno
xchg
pop
icebp
outs
pusha
ret
adc
mov
xor
clc
mov
inc
and
mov
inc
jmp
ss
out
loopne
(bad)
int
iret
popf
(bad)
dec
add
ret
nop
push
mov
mov
jo
add
bound
or
lods
loopne
call
sub
or
jle
(bad)
mov
cmp
jne
mov
jmp
inc
dec
jne
mov
inc
inc
rol
mov
mov
jno
push
xchg
rol
mul
hlt
call
or
sbb
cmp
fsub
out
mov
pop
cmp
daa
ret
data16
outs
cwde
scas
cli
popa
ins
inc
imul
ror
outs
data16
adc
imul
imul
add
sbb
add
sbb
int
not
or
push
jbe
push
imul
cdq
push
xor
push
adc
xchg
pop
dec
cld
cmps
nop
cld
aas
or
or
movs
leave
in
add
or
mov
sub
ja
cmp
sbb
outs
arpl
fwait
dec
add
or
adc
lea
and
dec
adc
adc
pop
and
stos
adc
in
xchg
sbb
fldcw
and
xchg
xor
mov
add
jns
sub
sub
jae
sub
iret
mov
repz
jle
aam
inc
and
minps
in
leave
cdq
repnz
stc
cmps
mov
pushf
(bad)
dec
out
xor
bound
cli
mov
add
inc
xor
jecxz
add
xor
pop
inc
and
pop
mov
mov
outs
pushf
cmc
dec
inc
mov
cmp
loop
mov
cmp
call
cs
scas
int3
adc
sbb
(bad)
add
js
dec
jle
ins
sbb
xchg
mov
test
sar
pop
sbb
dec
fs
bound
outs
add
pop
xor
js
jb
add
das
sub
inc
cmp
sbb
add
retf
jo
cmp
jae
or
mov
in
mov
fistp
sbb
dec
enter
add
push
cwde
or
in
std
sbb
cmp
enter
add
test
xor
imul
push
inc
push
stos
mov
ficom
add
aad
add
loope
inc
mov
sub
sub
dec
mov
mov
pop
add
mov
add
pop
pop
add
and
cdq
fnstsw
ret
jmp
test
sbb
jae
sbb
dec
icebp
icebp
add
(bad)
cmovne
lods
dec
cmps
or
pop
sub
and
leave
push
test
add
mov
xchg
or
inc
and
cmc
sbb
mov
in
jo
add
mov
movs
fsub
mov
inc
test
and
xor
jmp
mov
loope
idiv
mov
pop
(bad)
cmp
je
or
je
pop
jne
ret
inc
imul
mov
sub
fdivr
add
mov
in
das
ja
stos
xor
add
xlat
xor
cmp
les
xor
adc
cmp
inc
add
in
loopne
sbb
test
pop
jl
push
or
adc
pushf
pushf
pushf
and
mov
add
mov
test
adc
aam
inc
std
push
or
mov
push
jnp
cld
fst
lea
and
lods
cmp
sub
push
jmp
push
popa
daa
and
mov
and
not
push
push
add
jle
xor
mov
pop
fs
ins
add
mov
repnz
mov
xor
sahf
pusha
je
xor
lock
enter
add
ret
jne
daa
in
test
cmp
fdivr
push
xlat
cmp
jle
out
lock
mov
rol
pop
nop
ja
aas
in
sbb
jo
call
imul
mov
jbe
pusha
add
fwait
add
inc
cmc
cli
jnp
add
cmp
jbe
push
aaa
ins
or
or
xor
js
ret
ret
je
int
jae
movs
imul
stos
inc
test
add
add
and
aaa
and
and
xchg
dec
sbb
(bad)
mov
enter
mov
nop
mov
icebp
ins
inc
add
add
add
ret
lahf
das
mov
inc
jne
jg
pop
aas
pop
enter
pop
cmp
pop
enter
pop
push
jne
push
scas
out
dec
push
mov
mov
sub
adc
into
xor
add
mul
and
(bad)
fisubr
push
pop
or
add
cmp
push
pusha
push
ja
cmps
std
push
loopne
loopne
lock
pushf
ror
icebp
sub
add
add
add
mov
mov
in
sti
cdq
sbb
pop
fimul
loopne
adc
fs
or
mov
dec
ins
and
je
neg
fst
push
and
dec
sbb
push
and
inc
mov
mov
jo
sbb
sub
mov
lock
mov
add
xchg
enter
std
add
mov
add
fwait
ins
adc
je
dec
je
jmp
jmp
enter
dec
add
bound
jmp
push
inc
cmp
pop
add
xor
xor
add
nop
mov
xlat
sbb
imul
add
ret
in
push
push
add
and
mov
sbb
mov
sbb
(bad)
mov
outs
push
add
push
dec
mov
push
push
aas
add
ins
ffree
inc
pop
mov
mov
dec
xor
xor
xor
movaps
push
neg
jo
xchg
cmp
push
push
packssdw
cmp
and
rcl
push
or
mov
sub
lock
mov
mov
mov
push
hlt
mov
add
push
pop
add
and
or
out
push
nop
jmp
push
loope
gs
addr16
enter
je
pop
loope
data16
xchg
xchg
aam
repz
push
and
push
scas
inc
sub
add
iret
jb
and
mov
das
cmps
lock
or
in
bound
and
es
pop
cwde
inc
xchg
jae
jae
sbb
test
xchg
xor
adc
add
add
xchg
movs
int
add
and
jne
pop
mov
daa
fwait
mov
daa
mov
ficom
or
add
push
push
sbb
mov
push
or
and
xor
pop
xchg
ss
aaa
inc
ds
dec
sub
dec
sbb
sub
xchg
cli
push
and
das
test
test
pop
out
pusha
mov
pop
fisubr
les
add
or
jo
jae
lock
cmp
je
inc
mov
sbb
dec
outs
ins
jns
mov
push
sub
add
fadd
jne
and
jbe
jb
das
or
inc
add
fild
pop
test
fs
je
cmp
jbe
mov
jb
xor
and
jae
lahf
sbb
cs
or
(bad)
lock
fst
fs
movs
lock
push
xchg
mov
push
dec
mov
push
sbb
xor
lea
ret
cmp
xlat
or
repnz
pop
add
ror
push
mov
fsubr
xor
ja
sub
movaps
ret
dec
push
mov
dec
jmp
dec
jae
popa
push
jecxz
jne
(bad)
adc
adc
inc
cmp
add
adc
adc
and
test
je
das
popf
or
jb
fld
std
mov
push
leave
ror
mov
add
jo
aad
int3
mov
scas
das
adc
stos
add
jb
mov
mov
test
leave
in
adc
aaa
add
popa
push
sbb
test
mov
or
sbb
mov
aas
dec
ffree
stos
dec
jmp
test
imul
push
stos
pop
lea
xor
pop
gs
popf
and
xchg
or
sbb
add
sub
xor
and
jg
push
test
frstor
inc
gs
leave
add
scas
xchg
mov
or
jo
fs
(bad)
cmp
in
add
mov
jno
mov
and
jle
setg
addr16
add
pop
cmp
arpl
inc
into
add
test
and
je
call
popf
mov
in
push
sbb
push
dec
add
push
jns
pop
mov
pop
sub
sub
inc
fmul
repnz
imul
inc
jo
xchg
fdivrp
pop
inc
push
push
sbb
adc
idiv
bound
in
in
pop
mov
paddq
repnz
fs
xchg
in
adc
jbe
xor
cmps
pop
int3
psllw
fs
adc
pop
adc
pop
seta
add
adc
jae
push
sub
loopne
ror
mov
adc
add
sbb
ins
xchg
and
mov
xor
push
or
(bad)
jae
add
test
es
sbb
inc
jo
fld
fs
sbb
nop
or
xlat
pop
cmp
xchg
pop
and
add
dec
and
and
inc
sub
iret
test
cmp
add
test
add
push
pop
fwait
xchg
dec
mov
add
call
test
mov
call
aaa
jmp
sti
les
icebp
ins
and
inc
sbb
push
add
data16
pop
mov
or
lds
dec
hlt
inc
imul
mov
sub
mov
daa
xchg
add
enter
cs
push
jnp
ret
push
sbb
js
mov
mov
add
test
icebp
mov
or
or
repnz
inc
jns
nop
call
icebp
push
sbb
out
jno
add
inc
loope
mov
pop
add
pop
mov
outs
or
pop
daa
jno
xchg
popw
ror
lods
add
cmps
mov
fnstcw
les
add
jmp
add
clc
add
mov
call
pop
mov
cmp
and
fdivr
mov
jmp
lea
fcom
xor
mov
aas
xchg
test
rol
or
fld
sbb
or
cld
mov
mov
inc
and
jns
out
jg
je
mov
jmp
and
jne
adc
das
sbb
data16
aas
push
add
iret
or
mov
cmp
cld
jnp
xchg
lock
or
sbb
sub
pop
icebp
sub
or
sub
test
adc
inc
int
add
cli
push
cdq
and
je
mov
mov
stc
ret
jmp
lea
mov
popa
cmps
jo
test
dec
iret
not
or
add
xor
adc
lea
fistp
imul
xchg
rcr
jne
adc
mov
sbb
pop
das
test
sbb
push
push
mov
mov
pop
add
fldenv
add
or
mov
mov
push
push
add
je
pop
mov
add
xlat
cmp
fild
mov
out
push
mov
mov
and
nop
xchg
test
lds
add
adc
jo
pop
xchg
push
fwait
mov
mov
or
mov
or
iret
or
pop
sbb
loopne
push
push
fscale
add
push
les
lock
xchg
fisttp
imul
test
repz
push
mov
stc
ins
movs
inc
jmp
or
push
push
jle
and
pop
outs
or
dec
mov
inc
adc
adc
pop
add
mov
sbb
sbb
call
cmp
sbb
sub
inc
xor
xor
cmp
cmp
inc
loop
mov
je
inc
or
dec
jmp
xchg
dec
add
pop
lahf
pop
xor
mov
cmp
xchg
enter
daa
ret
js
pop
push
and
push
or
fcomp
fs
sbb
push
or
dec
shr
fwait
(bad)
shr
sbb
pop
xchg
hlt
push
lock
and
mov
movs
push
js
les
or
cmp
fist
inc
adc
pop
jnp
out
add
pop
and
add
and
je
pop
sbb
adc
popa
or
sbb
leave
(bad)
or
lock
les
adc
jle
push
hlt
mov
(bad)
add
loope
scas
retf
dec
mov
adc
hlt
cmps
aas
cld
mov
shr
jmp
lea
aaa
jo
inc
hlt
push
mov
sar
cmp
mov
cmp
mov
dec
cmp
push
sbb
rol
add
xchg
cli
push
mov
in
mov
xor
cmp
mov
push
in
in
sub
jno
xor
push
pushf
and
xchg
int
adc
jbe
movd
sub
xor
ror
ret
inc
or
push
pop
and
jmp
neg
add
cdq
hlt
pop
nop
movs
hlt
or
push
cmp
inc
cmp
bound
shl
popa
pop
jp
fld
cli
or
call
test
sub
cld
mov
mov
xchg
mov
loopne
scas
fcmovb
adc
movs
fild
pop
cli
inc
push
dec
cmp
pop
add
sbb
pusha
push
cwde
pop
cld
shl
lea
popf
add
push
or
cmp
out
add
clc
dec
dec
out
jl
cmp
call
add
sar
ja
scas
sub
lock
pop
fdiv
mov
fidivr
fld
pop
fcomp
ret
adc
mov
add
fild
jge
fwait
cld
enter
test
outs
les
push
or
gs
mov
test
test
mov
popf
inc
dec
mov
in
pop
lea
(bad)
shl
fstsw
sahf
cmps
repnz
adc
int
mov
mov
mov
int
push
enter
pop
adc
mov
cdq
test
add
xchg
das
push
mov
cdq
push
loopne
fdiv
je
fs
ss
cmc
sbb
cld
and
adc
int
in
adc
mov
and
pop
xor
push
mov
xchg
dec
sub
lock
mov
cs
or
and
mov
jmp
test
shl
je
mov
push
sar
adc
sbb
and
fcmovu
dec
xchg
dec
and
inc
dec
ds
pusha
xchg
and
jl
dec
std
sbb
jne
adc
mov
ret
sbb
or
or
shr
cmp
jecxz
sbb
and
push
arpl
imul
jae
dec
dec
cmp
cmp
aas
inc
or
ds
push
dec
js
das
push
cs
fwait
cwde
movs
retf
addr16
mov
inc
(bad)
dec
jb
aaa
stos
dec
pusha
(bad)
jle
addr16
sahf
ins
add
or
dec
inc
xchg
inc
push
retf
or
in
sub
inc
xchg
cmp
or
push
sbb
pop
addr16
dec
cmp
data16
daa
pop
mov
dec
xchg
dec
ja
rcl
push
push
faddp
push
jb
xchg
inc
loope
add
aaa
or
test
cmp
xchg
dec
mov
or
aas
mov
mov
xor
and
mov
mov
dec
cmp
jl
dec
and
jle
mov
gs
in
nop
jo
cmp
inc
inc
fdiv
push
test
adc
hlt
cmp
sub
push
adc
call
add
add
mov
mov
out
sub
mov
sbb
and
pop
js
jno
inc
fcomip
adc
sub
test
and
ret
adc
push
or
pop
in
adc
cmp
les
mov
jbe
adc
and
adc
inc
pop
dec
add
xlat
stos
stc
mov
mov
push
xchg
and
mov
adc
add
adc
pop
mov
jle
lods
int3
rcr
adc
mov
jae
sub
rcr
loopne
shl
cmp
fnstenv
mov
daa
mov
push
add
cmp
add
xchg
iret
std
or
fadd
outs
in
add
or
mov
jbe
sbb
pop
test
rcr
in
add
cmp
enter
sbb
addr16
sub
sbb
mov
push
or
test
test
(bad)
jo
or
cmp
ret
mov
in
inc
sub
push
mov
push
and
pop
(bad)
je
rep
and
inc
push
sbb
ja
inc
inc
dec
loope
hlt
xchg
add
loopne
mov
and
cmps
or
out
pop
jo
push
mov
fbld
dec
(bad)
xlat
xor
add
rol
das
aaa
or
jg
in
add
fld
fcomp
cli
or
cmp
jmp
daa
push
sbb
stc
pop
xchg
pop
sub
and
dec
pop
out
addr16
or
cmp
sub
adc
xlat
and
es
fild
out
dec
aad
push
or
push
call
inc
sub
jae
inc
mov
daa
inc
jb
loop
xchg
and
sbb
ret
cmp
nop
out
jecxz
and
pop
and
call
(bad)
adc
cmp
mov
and
sbb
dec
test
add
nop
xor
fldenv
hlt
inc
adc
xchg
or
xor
daa
pop
pusha
push
mov
loopne
and
repz
jb
clc
sbb
sub
sbb
aaa
or
xor
(bad)
sub
sub
sub
popa
mov
scas
outs
xor
sub
bound
js
out
call
es
out
add
sub
cld
mov
add
push
sbb
jmp
pop
mov
cwde
cdq
inc
es
ins
sub
test
adc
cmp
xchg
ret
mov
pop
xchg
add
ret
push
pop
xchg
adc
popf
call
push
ret
add
pop
js
mov
and
pop
or
test
mov
cli
xlat
and
cmp
jne
pop
mov
gs
and
stc
jno
dec
stos
adc
fwait
and
rol
(bad)
dec
mov
fcomp
or
imul
nop
xor
aas
mov
mov
aaa
dec
cld
je
dec
ss
aad
arpl
mov
add
bound
jo
jmp
xlat
in
push
aad
or
fucomip
sub
addr16
mov
cmps
shl
lea
adc
lock
mov
in
das
lods
in
jno
pop
outs
aam
shr
mov
inc
test
xchg
dec
mov
cmp
sbb
jne
(bad)
jbe
lfs
inc
sbb
cmps
inc
and
mov
add
add
inc
sbb
and
adc
push
or
out
push
jo
bound
mov
movs
add
mov
adc
test
daa
lock
mov
push
or
add
enter
sub
jge
out
mov
test
or
les
pushf
mov
das
ret
ja
js
sub
push
push
rdpmc
dec
sar
imul
pop
mov
or
(bad)
call
(bad)
xchg
push
pop
ins
(bad)
jo
inc
xor
inc
cmp
inc
xor
add
les
clc
rol
sub
inc
(bad)
cmp
in
les
pop
adc
jnp
adc
ins
add
pusha
add
rol
jmp
inc
add
mov
jno
add
bound
add
adc
imul
cwde
jne
sub
add
movs
adc
or
clc
in
mov
adc
leave
test
or
cmp
test
add
mov
push
leave
cli
and
inc
nop
dec
push
mov
enter
jo
dec
pop
jmp
xlat
xchg
xchg
push
outs
sub
add
sbb
sahf
or
sbb
xor
or
lods
mov
or
mov
outs
adc
or
test
xor
or
adc
add
lea
sbb
(bad)
idiv
or
cmps
add
in
fdiv
mov
out
sub
add
or
adc
pop
ins
jmp
adc
aas
jnp
sbb
adc
fsubr
sbb
or
sub
push
dec
outs
dec
mov
leave
ror
cwde
add
xchg
nop
daa
or
jl
add
pop
push
xor
cmp
or
test
loopne
pop
imul
movs
jae
and
shl
cdq
mov
loopne
movs
das
adc
sub
addr16
inc
les
aaa
adc
pusha
imul
nop
pop
shl
sti
and
push
jbe
mov
xor
mov
xor
aam
cmp
das
jb
xor
push
pop
pop
adc
ret
push
leave
xor
cmp
and
aaa
inc
cli
add
adc
(bad)
aad
sub
jecxz
iret
dec
xchg
sub
dec
or
scas
ret
lea
adc
out
mov
add
add
sbb
adc
clc
cmovs
add
cmp
cdq
inc
cmps
lock
or
test
mov
pop
sub
xchg
sbb
lds
and
mov
push
and
test
adc
adc
xchg
sbb
jne
cmps
sbb
inc
push
ins
jge
div
mov
mov
fmul
dec
dec
cmp
or
inc
pop
cli
pop
dec
jp
adc
and
(bad)
xor
pop
jne
xor
or
je
cmp
stc
fldenv
mov
rcr
lea
or
push
call
mov
or
add
inc
pop
inc
popfw
adc
jge
stos
add
adc
or
jno
mov
add
push
jp
(bad)
addr16
nop
add
jp
xchg
sbb
mov
clc
mov
pop
mov
(bad)
fisubr
ins
mov
inc
jne
fld
fdiv
outs
adc
pop
or
or
add
xchg
ss
aam
mov
inc
sbb
cmps
add
and
mov
int3
add
in
retf
adc
outs
mov
fdiv
and
in
call
dec
inc
mov
inc
test
call
movzx
in
adc
pop
je
sub
(bad)
call
xor
rcl
ss
and
cmps
dec
jle
mov
add
ror
loopne
xor
sbb
das
out
push
fmul
inc
pushf
out
pop
int
loop
lea
mov
fisubr
jbe
mov
push
xor
add
call
or
add
sub
mov
jmp
cmp
cmp
pusha
and
mov
adc
or
stos
cmp
outs
add
xchg
mov
ret
scas
push
mov
movs
or
or
sub
out
inc
xor
arpl
dec
(bad)
lock
inc
clc
jge
and
xchg
into
mov
(bad)
pusha
mov
les
xor
loope
sub
aaa
or
pop
aas
lock
mov
aam
shr
enter
and
push
push
test
or
es
xchg
js
adc
rcr
add
push
mov
adc
push
or
outs
stos
dec
call
pushf
and
fnsave
xchg
pop
js
cmp
dec
push
cmp
xor
inc
stos
add
inc
pop
outs
adc
pop
xor
cmp
cmps
arpl
or
test
les
in
popa
cmp
nop
mov
lock
fs
loope
rol
lea
scas
add
nop
pop
enter
mov
inc
pusha
icebp
(bad)
leave
sbb
cmovb
dec
inc
push
cmp
out
test
es
das
lods
push
sbb
shl
inc
cmp
je
ja
aas
rol
cs
cwde
hlt
xchg
ds
lds
pop
sbb
mov
icebp
pop
ds
cmp
or
jmp
mov
push
call
push
lds
rol
fsubr
cmc
ja
push
or
xor
and
mov
pop
addr16
mov
cmp
inc
daa
scas
or
cmp
inc
pop
mov
xor
inc
cmp
adc
cmp
xchg
cmp
jo
xchg
push
and
ins
or
daa
pop
inc
cmps
mov
pop
aad
inc
mov
cmp
inc
(bad)
add
add
outs
and
ds
add
ins
jne
nop
cmp
and
mov
test
push
mov
fdiv
sub
in
test
pop
pop
inc
inc
pop
dec
jne
jmp
ret
add
shl
push
adc
and
xor
add
mov
cmp
es
mov
cmp
dec
pop
test
mov
in
add
push
pop
adc
ins
pop
mov
and
push
jg
pop
push
push
push
loope
cmps
cmp
pop
ds
push
sbb
dec
inc
bound
popa
test
loopne
or
pop
dec
cmovno
loop
loop
sbb
pop
cmp
add
ds
xor
add
andnps
jp
fistp
addr16
sub
aad
addr16
add
psubb
or
repnz
jbe
or
pop
push
sbb
mov
nop
movs
inc
or
mov
sbb
frstor
adc
push
int3
add
ja
pusha
in
test
lock
fsub
in
ret
div
adc
daa
mov
cmc
and
add
add
or
outs
cmps
add
cdq
adc
adc
ja
push
and
sub
cs
(bad)
mov
in
jo
mov
ret
scas
mov
adc
(bad)
imul
in
adc
out
shl
push
mov
pop
pop
(bad)
jbe
shl
add
sbb
inc
and
and
aas
add
xchg
popaw
and
loopne
mov
add
push
dec
aam
pop
ins
add
add
jae
push
push
mov
jbe
js
movs
add
mov
mov
push
and
scas
push
push
aaa
cmps
dec
(bad)
out
dec
mov
stos
push
bound
ins
call
add
pop
push
adc
xor
test
lock
dec
cmp
mov
and
add
ins
es
sub
cs
or
pop
add
sahf
cmps
xchg
scas
jle
pop
dec
scas
or
and
add
and
nop
ret
(bad)
or
push
mov
idiv
push
pop
push
enter
inc
push
or
or
mov
adc
outs
and
cmp
out
pop
loop
movs
mov
mov
add
add
mov
std
inc
outs
or
jge
adc
lods
add
popa
outs
add
or
(bad)
jae
mov
push
push
mov
aad
lods
rcr
adc
or
jl
inc
add
adc
lock
outs
add
js
lods
inc
cmp
pop
mov
or
adc
jb
sub
xor
mov
inc
cmp
pop
jl
mov
or
popf
inc
loopne
loopne
xchg
add
mov
inc
mov
inc
jns
loopne
inc
pop
pop
adc
(bad)
mov
addr16
movs
mov
dec
xor
add
in
aas
mov
sbb
adc
aas
mov
aaa
push
push
mov
or
pop
fnstsw
mov
(bad)
sar
or
call
jp
xor
jmp
test
fbstp
mov
cmp
mov
and
scas
hlt
sbb
loop
outs
hlt
mov
daa
cs
das
mov
popa
adc
in
ret
sbb
inc
in
cmp
adc
jo
inc
cld
sbb
add
sub
dec
jnp
jbe
and
or
push
fs
fdiv
out
add
or
cmp
and
push
enter
mov
pop
aas
call
push
enter
add
dec
cmp
or
rcr
push
add
sub
add
dec
jne
mov
pop
dec
adc
lock
jbe
mov
sbb
int
std
test
push
inc
mov
cmp
movs
push
cmps
retf
dec
lea
sbb
dec
adc
(bad)
movs
loop
jg
pop
dec
popa
adc
sbb
pop
pop
lds
into
mov
push
ins
scas
push
pusha
shl
adc
leave
xchg
ss
push
jmp
pop
sub
movhps
xor
dec
xchg
mov
mov
dec
out
dec
movhlps
hlt
cli
or
aam
loopne
invd
idiv
es
das
aas
mul
dec
xor
dec
js
pop
add
jg
add
adc
xchg
add
add
pusha
fucomp
fcom
fnstsw
dec
xor
and
dec
jecxz
stos
sbb
test
jge
jmp
add
(bad)
je
ret
sti
dec
jecxz
and
mov
add
xchg
js
add
es
mov
mov
add
ret
pop
movs
in
xor
int3
lock
jne
mov
and
sbb
sbb
xor
add
and
mov
dec
daa
or
mov
dec
(bad)
cmp
push
push
xor
adc
enter
sbb
sub
mov
or
dec
push
pop
mov
push
mov
mov
fidiv
aas
or
pop
mov
jbe
cmp
pop
pop
push
xchg
mov
(bad)
dec
dec
pop
rcr
inc
outs
das
fimul
mov
xor
repz
loop
in
add
adc
mov
xor
xor
or
adc
adc
pusha
or
sbb
stos
dec
cdq
adc
lods
out
pop
xor
nop
sbb
fst
xchg
cwde
std
inc
clc
xor
cmp
jle
sbb
inc
lea
cmp
in
das
add
push
cmp
jne
adc
sbb
jne
or
jb
mov
(bad)
sbb
cmp
mov
pusha
mov
shr
in
shr
adc
sar
xchg
push
adc
jmp
or
sbb
add
ja
dec
pusha
aaa
stc
pop
jmp
or
inc
stc
jle
or
int3
ficomp
aas
add
test
test
fisttp
mov
or
cli
sbb
sbb
inc
adc
cmps
jae
inc
movs
lods
mov
dec
lock
xor
sub
jecxz
dec
or
xlat
iret
cld
add
xor
dec
push
push
lea
movs
or
sbb
cmp
imul
sub
adc
mov
pop
(bad)
cmp
cmp
dec
imul
mov
mov
inc
adc
inc
mov
fs
dec
and
mov
pop
sbb
out
mov
nop
mov
cs
pop
push
sub
jb
je
push
fs
pop
sahf
or
dec
jns
mov
ror
aad
add
add
shl
jg
push
mov
pop
and
fidivr
inc
push
shl
cmp
or
jge
sahf
sub
xor
xor
sbb
xor
inc
mov
subps
inc
test
shr
mov
jbe
jnp
xlat
jmp
(bad)
pusha
loope
ret
and
dec
cmps
push
or
xchg
mov
mov
lea
and
xchg
lods
inc
(bad)
arpl
nop
mov
mov
psubb
add
mov
cmp
pop
dec
cld
push
sbb
mov
pop
or
es
punpckhbw
push
pop
dec
push
pop
leave
retf
retf
cmp
push
push
push
adc
loopne
and
jnp
add
push
mov
cs
mov
add
pop
inc
mov
(bad)
push
(bad)
or
test
add
ret
lds
cwde
ds
imul
jmp
mov
das
adc
push
jl
pop
dec
dec
(bad)
mov
cmp
xor
repz
icebp
cmp
push
cmp
adc
adc
push
sbb
pop
loope
hlt
test
data16
jmp
mov
aaa
das
cmp
and
xor
jae
pop
and
adc
push
test
rol
loopne
js
mov
adc
push
dec
rcl
or
jp
sbb
mov
in
xchg
ror
out
in
add
push
or
adc
movs
push
pop
hlt
push
push
or
adc
pop
lahf
(bad)
repnz
push
mov
or
movs
push
test
mov
sbb
pop
nop
das
scas
push
rcpps
add
mov
rcl
xchg
push
into
push
fist
nop
mov
outs
push
outs
push
adc
add
cmp
adc
add
fsubr
test
mov
push
pop
jl
in
ret
and
pop
cld
adc
mov
call
test
jmp
dec
mov
xor
dec
xchg
and
xchg
ror
push
in
hlt
jno
push
lea
jno
xchg
ret
lock
or
icebp
aad
ror
or
rol
dec
pop
cmp
dec
sbb
pop
lahf
push
in
xor
push
add
(bad)
pop
xchg
xor
stos
jle
imul
xchg
dec
sbb
sub
push
and
and
xchg
ret
add
dec
adc
jl
loopne
push
pusha
into
or
sbb
inc
dec
aad
call
xor
in
push
out
dec
or
sub
or
cmp
fld
mov
mov
and
mov
xchg
vcomiss
add
cmp
jne
or
cwde
clc
inc
sar
add
add
sbb
and
or
test
cmp
jg
mov
pop
push
dec
pop
jae
or
adc
pop
pop
mov
inc
dec
jbe
icebp
out
add
inc
cmp
inc
aad
push
cmp
mov
mov
xor
enter
sbb
push
lock
jecxz
cmp
dec
fisubr
shr
into
and
nop
mul
mov
xlat
jmp
scas
or
or
call
inc
jl
add
rcr
ins
iretw
rol
pop
ds
popa
xchg
stos
adc
pop
mov
push
cs
sub
repnz
dec
loopne
dec
in
mov
jl
dec
(bad)
call
xchg
mov
les
arpl
dec
adc
bound
sub
mov
and
jns
cmp
cmp
popf
adc
xchg
or
add
in
setle
jmp
int
push
jmp
push
je
addr16
xor
arpl
(bad)
xchg
xor
sar
dec
aam
pop
pop
cmp
mov
outs
sbb
dec
add
outs
out
xor
xor
sbb
pop
add
mov
mov
(bad)
lea
jns
(bad)
cmp
sar
sahf
jmp
mov
dec
dec
inc
mov
in
daa
mov
sub
call
add
icebp
push
xor
mov
test
jle
sbb
add
mov
jno
push
test
or
enter
or
or
adc
loopne
pop
ss
add
ret
inc
dec
sbb
push
(bad)
(bad)
dec
repz
add
pushf
sub
sub
add
xchg
jmp
add
es
sti
sbb
shr
out
inc
dec
std
ror
xor
xchg
push
sub
ror
xor
sbb
or
rol
aam
adc
push
stos
pop
fcmovnb
mov
inc
pop
retf
enter
mov
cmps
jne
cmp
mov
cmp
cmps
popa
or
or
arpl
jl
jecxz
mov
repnz
les
jne
inc
shl
fistp
xchg
cdq
inc
push
mov
nop
mov
pop
inc
push
sub
stc
xor
ins
shr
sub
mov
ins
fadd
mov
add
push
js
add
movs
or
div
xor
sbb
(bad)
shr
xchg
lea
push
inc
daa
mov
push
adc
test
pushf
mov
ss
pop
adc
je
leave
jle
pop
pushf
rcl
xchg
xor
(bad)
mov
mov
es
mov
add
dec
push
aam
fcom
in
aam
in
(bad)
jmp
cwde
dec
pop
enter
and
jb
mov
dec
jae
rcl
shl
xor
shr
sbb
inc
jecxz
ss
xchg
dec
imul
sbb
and
add
enter
inc
or
jo
add
addr16
sahf
inc
xchg
shr
push
jg
pop
movs
sbb
or
push
aaa
outs
or
and
pop
pop
push
or
fadd
adc
arpl
test
mov
and
mov
add
js
and
inc
or
pop
lock
inc
lock
out
mov
jo
jl
jbe
out
scas
xor
repnz
(bad)
add
out
mov
ss
pop
jle
(bad)
xor
or
inc
in
push
jmp
xchg
shl
call
test
mul
jne
ret
fld
push
in
cmps
repz
imul
xchg
out
arpl
loopne
or
sbb
or
cmp
into
sub
jo
enter
xchg
push
xchg
lahf
push
adc
pop
or
lds
inc
cmps
add
clc
dec
jle
mov
jo
or
adc
xchg
shl
test
lock
hlt
and
vcmpss
add
cld
sbb
mov
add
shl
sbb
mov
xor
inc
fadd
es
in
aam
in
in
inc
xchg
mov
sub
dec
je
add
pop
sbb
mov
fsub
mov
push
inc
sti
and
ss
shl
cmp
enter
xor
or
add
aam
fsubr
sbb
les
adc
idiv
rcl
aam
add
aas
mov
mov
xor
and
mov
add
dec
mov
mov
jae
int
push
rol
mov
lds
aaa
lods
xchg
cmp
pop
ret
add
stos
std
mov
sub
lods
lods
push
pusha
fld
pop
ins
and
daa
pop
pop
cmp
push
or
xor
cmp
ja
ins
cmps
add
fcom
shl
push
shr
ret
fild
push
stos
push
adc
dec
test
jl
cld
jg
adc
mov
add
mov
mov
inc
dec
jne
push
in
icebp
cmc
cmps
mov
test
mov
mov
sbb
imul
ds
test
clc
add
or
push
dec
or
loopne
inc
call
or
and
out
cmp
int3
or
enter
jle
and
cmp
cmp
and
inc
adc
pop
xlat
xchg
outs
shl
xor
jmp
sbb
pusha
xor
mov
xor
mov
fcom
in
or
xor
out
and
clc
inc
xchg
or
and
data16
lea
leave
adc
xchg
mov
stos
mov
enter
cmps
(bad)
enter
rcl
dec
ins
adc
scas
and
rol
jo
inc
xchg
cmp
jge
add
jge
pop
les
add
sub
jb
fs
sbb
adc
mov
xor
fsub
or
add
mov
add
rol
in
(bad)
push
addr16
arpl
les
iret
mov
mov
mov
pop
jg
push
pop
je
push
xor
pop
ins
lods
shr
and
lods
fwait
mov
cs
fsubr
or
cmps
ret
fstp
pop
fcom
(bad)
add
jne
pavgb
cwde
or
push
mov
call
daa
mov
ja
daa
inc
(bad)
jns
push
cmp
cwde
fisubr
pusha
daa
ins
push
push
cmp
or
test
mov
adc
lods
pop
bound
pop
mov
dec
add
and
(bad)
aaa
add
jb
jne
outs
push
jb
outs
je
pop
out
add
pop
pop
jae
adc
add
push
or
or
inc
add
mov
sub
dec
aam
push
cmp
push
push
out
sbb
pop
std
lea
pop
inc
push
call
and
popa
xchg
mov
jbe
jno
clc
push
push
xchg
adc
ds
mov
stos
mov
jmp
or
ror
aas
fmul
inc
fcom
into
ret
xlat
icebp
hlt
(bad)
push
hlt
and
add
test
in
in
add
or
ret
aaa
mov
mov
inc
movs
or
loopne
jle
jno
or
mov
in
test
daa
mul
mov
and
fdivr
fdivr
pop
fmul
pushf
inc
(bad)
(bad)
lock
pop
jmp
cmp
inc
jmp
inc
clc
xchg
rol
push
jl
lods
jmp
and
sbb
mov
cs
adc
shr
cs
dec
adc
fisub
jecxz
imul
mov
mov
mov
xchg
leave
sbb
in
test
in
aaa
cld
ret
xchg
fsubr
cwde
mov
scas
jne
cmp
icebp
add
and
jmp
scas
sbb
ret
and
pop
scas
mov
stos
push
test
mov
ret
jmp
fisubr
add
scas
mov
dec
sbb
dec
inc
add
mov
cwde
pop
or
pop
scas
pop
and
sbb
add
mov
out
lods
add
dec
test
add
outs
or
jmp
call
ins
push
xchg
push
pop
add
xor
adc
idiv
xor
add
cmp
loope
jecxz
push
or
sub
inc
inc
add
inc
pop
sub
add
add
xchg
lock
stos
add
adc
adc
enter
mov
and
or
jnp
cdq
and
push
or
or
out
or
xchg
sahf
sub
pusha
daa
adc
mov
imul
ins
xchg
mov
push
je
std
push
and
inc
movs
ins
mov
cmp
pop
sbb
in
repz
xchg
mov
push
sbb
jne
or
pop
out
xor
push
dec
sub
cmp
je
or
popfw
mov
or
inc
out
adc
pop
aaa
pop
fidivr
and
sub
mov
adc
nop
push
or
in
inc
bound
imul
inc
or
cmp
mov
inc
or
icebp
call
or
rol
imul
cmp
inc
scas
popa
and
sbb
pop
fadd
fsubr
hlt
jo
jns
out
push
push
and
aas
push
and
mov
mov
stc
or
cmp
mov
jns
push
mov
inc
lods
add
push
push
adc
nop
add
jo
and
dec
xor
push
add
sub
xchg
imul
cmp
movs
inc
adc
sub
mov
pop
retf
ror
imul
push
or
dec
sbb
inc
jno
lock
xchg
outs
add
dec
lds
pop
(bad)
fchs
jnp
icebp
add
jno
clc
push
in
test
jb
dec
pushf
xor
jae
inc
sbb
push
inc
out
jp
test
in
out
ins
xor
push
sbb
outs
xor
mov
stos
inc
ds
ret
push
sub
mov
jle
sub
add
aas
aas
mov
pop
ret
imul
sub
cmps
add
mov
loopne
mov
inc
cmc
aaa
sub
mov
ja
adc
add
inc
push
pusha
or
jne
pop
pop
enter
mov
add
mov
adc
mov
xchg
fs
push
ucomiss
jg
sbb
mov
not
repz
push
outs
jae
jnp
pushf
mov
inc
icebp
lock
lods
jo
pop
stos
pushf
call
jae
lea
pushf
call
jmp
outs
or
pop
jne
or
sbb
push
out
and
add
mov
push
lea
dec
rcr
push
jnp
jb
adc
daa
and
mov
ret
mov
inc
or
and
sub
or
sub
or
int3
or
retf
sbb
adc
inc
arpl
push
mov
xchg
sub
pop
xlat
aaa
push
inc
adc
rol
and
add
push
add
cmp
sbb
fs
imul
inc
or
fiadd
fsub
xor
sbb
adc
fwait
mov
or
or
mov
ret
dec
mov
inc
daa
mov
loopne
xor
xchg
add
test
lods
or
jae
inc
test
or
ins
or
pop
in
lea
ja
lock
div
xlat
or
outs
push
fmul
xor
xor
mov
and
inc
jo
mov
pop
mov
mov
clc
or
pop
mov
jo
dec
je
int3
gs
out
sbb
mov
ins
js
pushf
pop
js
cwde
add
mov
and
add
xor
sbb
aaa
add
(bad)
(bad)
and
das
cmp
add
mov
jle
test
gs
movs
aad
pop
jb
je
ins
push
adc
adc
or
dec
fsub
jp
mov
stc
int
inc
sub
add
imul
mov
ins
hlt
cld
lea
pop
or
mov
imul
outs
popa
push
xchg
aad
jb
xor
test
test
gs
push
out
(bad)
push
xor
cmp
ins
imul
out
xchg
jo
cmp
clc
sbb
sub
xchg
pop
bound
jne
iret
(bad)
cs
mov
xor
(bad)
les
cdq
(bad)
mov
in
dec
xchg
jnp
out
jnp
imul
ja
rcl
sbb
jnp
inc
xor
push
sub
jmp
mov
retf
push
mov
and
pop
outs
mov
pop
add
mov
addr16
shr
inc
sub
cmp
shr
adc
mov
adc
loopne
xchg
mov
add
test
sub
lea
pop
aaa
jo
push
add
and
pop
icebp
cmp
jne
jmp
pop
add
inc
inc
and
mov
mov
cmp
mov
ret
pop
sbb
sbb
xchg
pop
lock
nop
jl
fmul
cdq
sub
(bad)
sar
and
or
aas
cmp
test
or
adc
lds
adc
mov
jge
sub
in
shl
jo
fwait
sbb
xor
test
lods
pop
mov
and
xchg
jge
push
jge
or
out
fcmovbe
movq
fs
and
sahf
outs
jae
push
lds
mov
ins
aam
cdq
imul
adc
mov
test
aaa
shl
gs
mov
in
jns
add
push
sub
or
test
in
add
adc
mov
cdq
je
clc
fisttp
xor
rol
rol
add
adc
call
push
ins
cmps
or
aad
pop
iret
in
or
loope
adc
hlt
shr
jne
push
sbb
mov
call
inc
mov
jo
fwait
data16
mov
and
out
sub
jnp
jl
inc
or
add
jg
mov
in
xor
in
lahf
sbb
je
push
or
jl
jge
jl
fadd
adc
dec
sti
sbb
dec
inc
(bad)
jle
inc
fs
push
or
ret
sbb
stos
xchg
xor
ror
push
cwde
or
js
sub
aaa
push
hlt
add
sub
sub
and
push
adc
add
cdq
js
stos
test
call
rol
xor
rcr
out
xor
push
add
dec
aaa
cmps
push
push
lods
mov
jmp
jecxz
adc
add
lods
sub
xor
dec
sbb
push
push
test
add
shl
loope
pusha
mov
fs
inc
mov
(bad)
icebp
lds
cmp
mov
xchg
lock
push
punpckhbw
inc
test
call
pop
sar
(bad)
stc
sub
bound
jl
test
inc
test
fidivr
ffreep
mov
jae
push
(bad)
mov
mov
test
cmps
(bad)
cmps
(bad)
mov
dec
retf
or
dec
je
jmp
fsub
or
or
stos
out
and
and
add
js
jno
dec
mov
ja
dec
icebp
rcr
jmp
sbb
retf
sbb
pusha
xchg
out
mov
sub
pop
mov
adc
popa
cwde
mov
jmp
xor
push
dec
es
dec
ja
cmp
dec
adc
repnz
fild
fs
retf
pop
mov
and
push
jb
and
pop
push
addr16
fdivp
mov
mov
dec
inc
mov
mov
adc
or
out
push
jle
and
mov
unpcklps
(bad)
mov
push
ins
inc
test
in
call
add
mov
adc
cmp
clc
dec
dec
or
cmp
add
je
popf
data16
fcomip
inc
adc
sub
outs
jo
in
inc
pusha
pop
repnz
sub
lea
xor
fild
fimul
push
add
inc
mov
jmp
arpl
adc
popf
test
jg
xchg
ror
add
in
jge
addr16
stos
dec
test
cmp
adc
rcr
mov
dec
mov
sbb
shr
stos
mov
or
dec
imul
aam
fcom
xor
mov
push
xor
ret
scas
mov
aaa
sbb
push
stos
adc
data16
mov
(bad)
push
es
push
jns
test
xchg
sahf
inc
sbb
inc
adc
pusha
ins
adc
fwait
in
pusha
enter
mov
sbb
in
les
cmps
fdiv
popa
lea
add
jg
add
daa
sbb
dec
mov
mov
inc
mov
jo
jae
xor
imul
cmp
push
cs
jp
ja
bound
(bad)
jae
inc
jae
imul
jg
aas
jae
push
mov
sbb
xchg
and
push
fbld
imul
les
outs
dec
imul
sbb
fs
jmp
dec
daa
sbb
xchg
jmp
push
push
jle
test
add
push
or
loopne
in
push
xor
pop
cs
enter
(bad)
fcmovnb
and
adc
add
add
into
adc
mov
jne
xor
sbb
add
pop
cmp
retf
pop
mov
xchg
imul
mov
mov
push
out
pop
sbb
push
inc
or
push
push
or
jne
cmp
push
push
fsub
daa
xchg
inc
test
dec
mov
push
pop
outs
ss
jo
add
pop
adc
jmp
mov
mov
inc
xor
mov
or
adc
xor
pop
mov
add
nop
push
adc
cmp
lods
or
or
adc
jge
mov
jae
or
daa
test
jbe
sbb
and
pop
enter
and
cmp
frstpm(287
shl
cmp
je
cmp
adc
int3
inc
adc
into
jge
or
cmp
imul
or
adc
sub
fwait
es
cmp
dec
fdivr
push
mov
test
test
cmp
push
mov
add
movs
add
and
or
inc
sbb
sti
add
sub
das
sahf
cmp
hlt
sbb
mov
dec
jl
push
int3
loopne
inc
add
pop
sbb
lock
mov
dec
mov
cmp
ss
sub
dec
push
push
dec
call
mov
xor
out
cmp
mov
jmp
push
in
push
sbb
add
cmp
data16
xor
jne
add
sbb
cmc
fsub
dec
adc
pop
sub
mov
mov
(bad)
bound
stc
mov
mov
or
or
jae
push
push
xchg
or
add
or
mov
jnp
sub
jl
idiv
fwait
cmp
xlat
loopne
retf
mul
shr
mov
and
mov
mov
sub
push
mov
and
xor
or
add
mov
inc
mov
xor
in
or
xor
mov
das
pop
sbb
loopne
or
hlt
mov
fsubr
jl
scas
and
push
sub
jno
cmp
ret
xor
add
stc
test
mov
fild
add
jg
mov
push
ss
mov
daa
sbb
mov
test
sbb
sub
cmp
test
rol
add
add
inc
push
pop
or
inc
pop
popa
mov
gs
mov
shl
sub
pop
shl
inc
jo
test
enter
jno
inc
fcmovnu
and
hlt
ja
aam
in
jmp
pop
xchg
push
push
jo
loope
cdq
les
dec
adc
sub
lahf
jo
(bad)
adc
sub
out
xchg
push
gs
xchg
sbb
and
add
add
das
retf
cli
aaa
cmp
mov
jne
jbe
(bad)
loopne
mov
or
inc
xor
ret
inc
(bad)
je
xchg
jo
ficom
rol
push
sbb
jnp
adc
movs
retf
or
icebp
outs
adc
jno
xchg
aaa
lahf
cdq
or
mov
loope
in
out
mov
cmp
lea
mov
and
shl
adc
pop
repz
pusha
mov
int3
test
mov
fs
or
jb
and
dec
fstp
mov
sti
sub
out
test
in
clc
mov
sub
jecxz
xor
outs
cmp
cmp
jne
mov
sub
mov
test
xor
xor
stc
clc
mov
sbb
punpcklwd
shl
jl
xchg
jmp
ret
xlat
das
or
mov
jae
ins
pop
adc
mov
test
or
pusha
iret
fisub
add
addr16
jne
sub
aas
arpl
imul
xor
sbb
xchg
rol
xchg
jnp
and
lds
and
frstor
adc
(bad)
shr
lock
pusha
mov
and
xchg
mov
xor
dec
cld
add
inc
dec
call
dec
stc
hlt
call
icebp
fsub
push
loop
jp
lahf
out
xchg
outs
cmp
xor
dec
sar
divps
jo
les
aaa
or
inc
ins
outs
dec
dec
loope
mov
je
out
add
sub
inc
dec
je
retf
push
iret
push
inc
test
xor
push
or
mov
push
test
dec
xlat
sahf
add
push
or
add
outs
push
sub
pop
cld
pusha
jae
retf
inc
call
mov
inc
cmp
xchg
test
cwde
jne
pop
or
lods
loopne
pop
hlt
xchg
xor
pop
cmp
xchg
ins
test
mov
ficomp
adc
add
ficom
(bad)
dec
add
push
add
dec
adc
mov
(bad)
xor
adc
add
ret
sub
clc
adc
add
lock
push
push
jae
xchg
cdq
sub
or
arpl
push
(bad)
int3
std
fs
(bad)
not
push
jmp
mov
add
dec
add
(bad)
out
mov
or
dec
pop
push
dec
dec
dec
inc
clc
inc
push
mov
push
inc
dec
inc
dec
push
dec
or
or
xchg
pop
add
or
pop
pop
add
pop
jp
popa
xor
cmp
gs
mov
dec
lock
inc
xchg
xchg
mov
xor
push
or
push
pop
dec
or
and
sub
loopne
je
mov
or
push
push
test
inc
dec
sbb
mov
outs
xor
or
pop
or
icebp
sub
xor
mov
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
push
xor
loopne
or
mov
mov
xor
add
iret
fldcw
mov
xchg
(bad)
mov
div
add
dec
sbb
and
jge
adc
push
dec
dec
inc
inc
xchg
dec
dec
popa
mov
test
sub
xchg
sub
test
add
dec
loope
popf
bound
and
jmp
aam
xchg
enter
and
jae
adc
icebp
adc
addr16
jb
dec
inc
loopne
pop
sbb
arpl
add
and
fs
pop
and
or
arpl
jnp
sbb
pop
and
push
add
aam
sub
push
jp
pusha
inc
add
mov
dec
adc
stos
arpl
jb
inc
mov
imul
sub
mov
std
and
or
call
jae
jns
sbb
in
and
push
sbb
mov
imul
pop
bound
daa
sub
jbe
dec
mov
mov
or
mov
mov
gs
xor
test
push
add
xor
dec
mov
cmp
pop
retf
call
pop
cdq
dec
inc
push
dec
xor
inc
dec
inc
cmp
test
xor
jne
cmp
add
mov
imul
(bad)
clc
adc
sbb
pop
popa
ja
cmps
imul
(bad)
pop
add
jge
push
cmc
cs
pop
aas
add
mov
pop
in
cs
sub
xchg
cmps
sub
neg
add
adc
add
loopne
sub
outs
xor
imul
pop
dec
test
cmp
leave
inc
jo
ror
pop
movs
loopne
call
dec
and
aam
or
inc
push
xor
ror
lock
adc
xor
movs
popf
mov
inc
inc
cmp
push
add
sub
adc
push
bound
(bad)
aas
adc
loope
inc
inc
dec
inc
inc
add
mov
xor
mov
dec
inc
xor
movs
or
add
cmps
shr
dec
jb
rol
dec
dec
pop
mov
mov
or
xor
das
adc
cmps
cmp
mov
dec
dec
push
inc
push
jnp
mov
inc
add
outs
inc
dec
push
cmp
mov
pop
pushf
mov
and
cmps
shl
pushf
fisttp
jl
cwde
ss
or
push
inc
add
xor
test
push
push
inc
mov
mov
and
call
loop
cdq
sub
and
call
addr16
in
and
or
test
pop
fwait
sub
in
mov
mov
call
inc
pshufw
cmp
xor
je
sub
popa
xor
pop
arpl
mov
pop
jmp
ret
push
bound
sub
pcmpeqw
lods
call
xchg
ds
push
pop
jne
jb
mov
inc
mov
xor
pop
xchg
or
jae
xor
adc
cmp
xlat
add
(bad)
sbb
pop
sub
pop
inc
adc
jae
pop
shr
test
pushf
mov
push
or
or
add
movs
bound
pop
sub
xor
imul
sub
push
mov
sbb
xchg
inc
cmp
push
aas
jl
inc
and
jo
xchg
pop
jmp
bound
add
sub
sub
or
xor
adc
fdiv
lea
dec
adc
test
outs
sub
adc
shr
js
rol
push
data16
mov
pusha
test
inc
clc
and
sub
jo
sub
sub
out
xor
fwait
daa
xor
daa
push
cmp
fcomp
sub
jns
shr
loop
das
xor
cmp
call
add
add
out
inc
adc
sub
scas
lock
xchg
mov
rcl
cmp
adc
ret
outs
sbb
std
les
sbb
in
jb
and
cmp
xor
sub
(bad)
js
sub
jno
movs
or
movs
jno
jmp
dec
sub
jecxz
inc
jmp
jb
or
adc
xchg
inc
loop
inc
mov
jno
popa
mov
or
jmp
or
pop
ja
xor
add
push
push
ins
cmp
cwde
adc
sub
repz
add
dec
in
mov
sbb
add
je
mov
xor
inc
push
push
dec
sbb
sbb
push
add
mov
push
inc
or
call
adc
inc
int
pop
xor
push
fs
stos
jp
outs
mov
pop
add
inc
jne
pop
or
popa
repz
add
(bad)
loope
pop
add
jl
das
rol
adc
mov
or
sbb
dec
and
or
xor
shr
inc
movs
cmovno
out
shr
push
sub
add
cmp
mov
pop
arpl
or
mov
jno
jo
and
sub
in
daa
imul
movs
in
pop
add
inc
jbe
loopne
shl
xor
jb
popf
movs
(bad)
jecxz
jno
jmp
and
dec
lahf
or
test
and
push
stos
ins
jge
(bad)
dec
jbe
add
xchg
or
push
push
pop
push
dec
inc
pop
in
cmps
cs
cmps
mov
adc
push
sub
sub
adc
sbb
sahf
sub
fcomp
gs
and
mov
cmp
adc
sbb
outs
je
test
pop
xor
adc
push
push
inc
cmp
push
pop
aas
int3
(bad)
mov
push
or
cmps
sub
sbb
test
dec
or
inc
mov
mul
or
add
add
lds
jo
enter
xor
bound
add
loope
fiadd
inc
cmp
jnp
dec
or
lods
cmps
das
mov
js
movs
mov
cmps
inc
cwde
pop
popa
sub
or
ds
loope
inc
adc
pop
cmc
add
jge
arpl
loop
push
std
push
js
mov
pop
push
push
push
pop
or
xchg
xchg
sbb
icebp
jae
add
rol
adc
dec
push
lds
add
mov
jge
and
popa
out
push
push
call
inc
xor
call
push
mov
mov
inc
lods
clc
mov
adc
jno
dec
mov
mov
(bad)
jmp
jnp
inc
inc
mov
daa
xchg
fs
inc
push
inc
dec
push
dec
inc
push
jno
stos
adc
mov
iret
aaa
xchg
test
lds
and
mov
imul
mov
outs
push
imul
shl
clc
adc
popa
or
loope
sar
lock
jo
inc
add
nop
xchg
ret
mov
inc
test
or
pop
adc
or
mov
adc
fbld
sbb
xchg
shr
and
ins
dec
les
mov
mov
add
das
and
xor
movs
jb
je
ucomiss
pop
pop
pop
add
mov
test
fnstcw
push
sbb
sbb
pop
add
and
add
jmp
jne
sub
aas
in
pop
jne
or
adc
ins
lods
imul
fcmovnb
(bad)
pop
cwde
inc
daa
cld
stos
test
dec
pushf
mov
adc
jne
inc
dec
inc
add
scas
nop
sbb
pop
cmp
mov
push
jne
sbb
mov
pop
xchg
xlat
adc
push
pusha
test
adc
mov
nop
mov
dec
inc
push
mov
retf
mov
cs
inc
inc
sbb
or
dec
jne
in
popa
and
push
sub
mov
dec
push
lods
lds
mov
xlat
add
push
cmp
pcmpeqb
dec
xchg
mov
dec
pop
mov
or
lods
jge
adc
jnp
ja
ja
sar
ja
loopne
fsubr
add
add
add
push
enter
bound
outs
dec
lods
lods
pop
outs
add
add
add
jae
js
xor
xor
lods
sub
outs
pop
push
mov
mov
mov
and
imul
sub
or
push
mov
sub
add
dec
push
mov
ja
fwait
or
add
je
movs
adc
xor
push
enter
inc
sbb
xor
or
popa
outs
xor
push
mov
pop
jno
dec
pop
dec
test
jbe
fmul
pop
sub
gs
pop
xor
push
xor
or
xchg
add
push
adc
imul
add
xor
inc
inc
xor
adc
(bad)
adc
popf
adc
xor
push
ins
adc
adc
xor
pop
add
adc
rol
add
adc
push
inc
push
mov
ds
and
mov
push
(bad)
or
jl
ror
mov
adc
adc
pop
loopne
cmp
pop
into
dec
and
or
xchg
outs
lods
or
mov
mov
loopne
mov
out
daa
cmc
pop
add
mov
xor
push
adc
mov
ror
aam
push
push
add
cmovno
push
pusha
pop
mov
dec
inc
loope
and
in
add
lock
mov
loop
ret
or
mov
ror
inc
outs
bound
out
nop
repz
add
or
pop
adc
jno
mov
sar
or
jg
(bad)
or
dec
inc
add
adc
ins
adc
or
push
cs
rcr
mov
cmp
(bad)
mov
ins
retf
aam
adc
jo
sbb
jecxz
adc
pusha
lahf
call
ds
pop
adc
fwait
pusha
je
gs
movs
pop
or
inc
sbb
cmp
or
sub
pop
cld
jne
aas
nop
mov
inc
cmp
repnz
push
pop
loop
sub
out
mov
imul
int
(bad)
movs
add
out
mov
lock
add
push
or
loopne
or
lods
jne
inc
xor
lahf
movs
mov
js
jecxz
bound
jo
frstor
test
sub
ins
mov
inc
pop
push
mov
push
dec
dec
dec
aaa
lods
mov
les
push
sar
push
dec
test
iret
clc
mov
fnstcw
inc
iret
inc
dec
dec
inc
or
xor
mov
mov
in
or
pop
lea
push
ins
and
add
retf
dec
jne
(bad)
(bad)
ds
push
pop
or
popa
je
xor
pusha
adc
pop
std
punpckhwd
mov
or
add
and
jns
adc
inc
add
ror
dec
call
scas
inc
jmp
or
or
fbld
sub
daa
and
mov
add
pusha
sub
mov
out
dec
pop
push
and
in
pop
jmp
add
add
mov
repz
mov
mov
nop
dec
cmp
xchg
jo
inc
loopne
jae
fwait
push
or
or
add
fbld
adc
push
stc
add
pop
or
or
aaa
les
push
hlt
mov
arpl
xchg
or
mov
jno
push
lods
call
adc
add
div
add
test
cmp
adc
retf
mov
retf
adc
and
mov
int
or
arpl
or
or
or
inc
ins
and
imul
pop
lods
push
test
push
mov
(bad)
cmp
imul
mov
add
pop
in
rol
jge
jo
ds
arpl
push
sbb
xor
or
ret
fcom
popa
jne
(bad)
push
pushf
dec
and
dec
push
push
aam
outs
push
popa
add
daa
sub
mov
sbb
pop
test
pusha
add
inc
pop
cmp
push
or
into
push
adc
mov
mov
push
inc
adc
sbb
mov
push
ret
add
js
pop
popf
adc
cmp
mov
pop
or
mov
and
or
retf
cmps
fwait
add
or
in
push
dec
adc
imul
jle
int
add
cmp
scas
adc
sub
pop
sub
fadd
sub
and
xchg
add
mov
and
jnp
mov
cwde
loop
and
push
adc
and
add
sub
call
push
and
outs
push
sbb
js
je
fisubr
inc
frstor
sbb
push
mov
mov
add
pop
inc
pop
add
mov
push
pop
mov
or
addr16
cdq
push
pop
dec
adc
data16
inc
adc
je
ja
cmp
pop
mov
bound
add
pop
jp
adc
retf
sub
push
jb
stc
add
or
pop
nop
test
push
xor
ins
xor
das
pop
push
mov
ror
sub
inc
dec
cmp
adc
inc
fld
mov
inc
retf
lea
imul
dec
push
aad
outs
popa
jno
imul
je
push
imul
lds
loope
add
mov
sar
add
sub
fisttp
mov
jne
in
aaa
cld
mov
(bad)
imul
xchg
push
aam
es
mov
cs
push
das
leave
cmp
and
jnp
inc
or
sub
out
rol
cmp
cmp
adc
or
std
iret
or
sub
(bad)
imul
push
fwait
or
je
xor
dec
popa
pop
daa
icebp
aaa
dec
cli
aam
push
out
pop
xor
mov
scas
pop
xor
push
xor
mov
or
push
inc
or
adc
leave
or
mov
or
mov
ret
bound
stc
imul
adc
push
xchg
xchg
cmp
push
cmps
dec
adc
in
mov
lods
outs
fs
cmp
add
pusha
push
pop
adc
ins
and
add
and
jne
call
pop
imul
mov
xchg
sub
je
sub
xchg
outs
push
(bad)
xor
aas
push
mov
mov
adc
jo
mov
lock
sbb
outs
mov
gs
sub
pop
push
jno
rcl
pop
mov
das
or
push
enter
fisttp
push
or
rcr
add
sbb
das
push
ret
fisubr
ja
add
and
inc
push
ja
sub
pop
arpl
mov
enter
pop
arpl
sbb
jbe
daa
jo
jg
sub
outs
test
int3
inc
(bad)
or
test
sub
cs
mov
(bad)
ja
ins
dec
pop
rcr
mov
push
sbb
xor
aad
cmp
jb
inc
jge
cmp
popa
xchg
push
aam
jo
or
mov
(bad)
loopne
jno
stos
jg
or
cmps
das
dec
xchg
dec
aaa
adc
cmp
retf
dec
cmp
or
or
shl
add
imul
or
sub
dec
test
in
cmp
jge
add
inc
sub
push
arpl
xor
out
mov
jo
scas
data16
and
xor
jne
push
adc
lock
cmps
cs
pop
ret
sbb
mov
or
test
in
in
ds
pop
push
stos
lods
ret
nop
fs
or
retf
test
add
pop
jmp
pop
push
push
or
sub
sub
daa
cmc
dec
mov
ss
pop
neg
pusha
jo
xchg
mov
mov
or
cwde
xchg
add
in
inc
in
jl
mov
in
test
scas
mov
scas
test
in
ret
and
fwait
ret
cmp
mov
shl
xchg
adc
in
mov
xor
add
inc
cmp
aaa
pop
inc
fmul
mov
gs
retf
sahf
cmc
pop
adc
push
inc
nop
test
jne
into
or
lds
out
pop
adc
or
inc
inc
lds
push
in
jae
inc
or
adc
add
or
jge
pusha
ret
mov
sbb
in
mov
adc
pop
aaa
sar
outs
mov
cmp
push
pop
sub
lods
mov
or
and
sti
xchg
les
pushf
add
aas
dec
xchg
inc
pop
data16
ins
lea
xor
sti
xor
arpl
popa
mov
int3
or
pop
mov
inc
shl
push
mov
cmp
and
lahf
add
pushf
sub
hlt
leave
xchg
in
pop
or
xor
adc
test
add
mov
mov
sbb
pop
retf
movs
rcl
into
add
sbb
imul
adc
aaa
xchg
rol
sbb
pop
jae
mov
test
adc
jbe
cmp
ins
out
xor
lds
nop
stc
adc
sbb
sub
in
push
mov
(bad)
pop
jnp
pop
cmp
add
sub
mov
popa
mov
push
mov
or
add
and
add
jmp
mov
je
arpl
mov
js
dec
(bad)
loopne
add
pop
test
cmp
aas
loopne
aas
mov
dec
mov
mov
xor
or
jbe
stos
and
js
popa
dec
or
jo
je
dec
stos
out
or
fwait
imul
or
inc
dec
mov
inc
inc
dec
ror
es
movs
sbb
test
lock
jecxz
ins
lods
mov
push
xor
inc
ja
add
or
push
add
gs
jmp
mov
mov
sbb
in
mov
adc
les
jecxz
push
enter
or
add
add
adc
in
inc
adc
dec
pop
movs
call
scas
ror
cmp
xlat
and
inc
clc
jo
or
cmp
jmp
sbb
add
bound
jmp
nop
xchg
adc
popf
repnz
adc
fs
dec
pop
adc
push
add
add
adc
cwde
or
popa
loop
fmul
jge
or
inc
daa
pop
shl
ja
cmp
adc
aaa
cmp
adc
loope
aad
dec
int3
push
sahf
mov
mov
das
xor
push
cs
ins
fdivr
inc
push
dec
push
xor
out
scas
jb
loope
cs
clc
arpl
mov
mov
add
add
or
popa
movs
sub
xchg
adc
inc
test
or
int
push
pop
ret
cmp
add
es
cmp
mov
inc
cmp
mov
mov
int3
div
enter
adc
ja
pop
adc
call
dec
call
gs
adc
lock
or
std
push
sub
sub
xor
test
rcr
jecxz
sub
mov
mov
xor
or
mov
pop
mov
xor
iret
jb
(bad)
cmps
fisub
pop
xchg
test
xor
in
daa
into
inc
fisubr
inc
daa
sub
jecxz
je
dec
outs
data16
inc
dec
cmp
gs
(bad)
xchg
cmc
or
test
jae
pusha
int3
das
outs
rcl
jge
xor
pop
xor
jae
adc
or
add
sub
mov
cmc
test
pop
pop
or
shr
mov
pop
sahf
dec
pop
mov
retf
add
xor
push
js
ret
push
mov
js
dec
movs
xor
sti
jge
pop
(bad)
ds
add
in
mov
or
cmp
movs
jecxz
loopne
xchg
in
add
add
adc
sbb
and
fs
cmp
lock
icebp
pushf
iret
std
add
mov
je
xchg
add
(bad)
jmp
xchg
rol
xchg
mov
jmp
sbb
mov
inc
fsubr
mov
imul
das
mov
sbb
je
in
inc
test
mov
adc
iret
xor
inc
xchg
hlt
jnp
loopne
sar
sti
pop
mov
outs
cld
repz
sti
jp
icebp
add
or
pusha
pop
adc
add
add
mov
cmp
mov
or
int
xchg
lods
add
cwde
pop
mov
js
xlat
adc
push
outs
add
dec
sbb
xor
xor
inc
sbb
push
and
shr
data16
adc
rcl
or
jmp
or
xchg
cmp
xor
xor
mov
sub
pop
jo
pop
arpl
ret
mov
or
cmp
and
mov
add
mov
sbb
(bad)
jo
push
dec
mov
xchg
imul
lods
xor
(bad)
retf
je
or
(bad)
sub
push
inc
sbb
das
sbb
cdq
inc
dec
retf
mov
xchg
in
test
inc
sub
mov
je
stos
sbb
out
mov
or
lds
or
ins
push
add
mov
jb
pop
jle
or
test
fild
sub
movs
das
jnp
jb
fnstenv
gs
cmp
ret
movs
xor
scas
ja
xor
je
ds
sub
push
pop
jae
cmp
or
or
ja
ja
(bad)
int
adc
adc
pop
or
fidivr
loopne
dec
adc
add
add
xor
nop
lea
aaa
popa
sbb
dec
sub
enter
xchg
xor
pusha
mov
add
jp
xor
mul
or
ss
cmp
or
jnp
xor
stc
dec
cdq
pop
add
test
shl
fsub
add
int
cdq
rdtsc
or
popf
xor
mov
mov
pop
in
dec
jge
jne
jnp
leave
arpl
and
mov
call
adc
add
sti
mov
ror
jb
xlat
neg
ror
and
dec
push
inc
inc
and
mov
sub
lea
xchg
mov
or
inc
or
cmps
jecxz
xchg
adc
dec
jo
sbb
lea
jo
and
or
mov
daa
js
pushf
fild
icebp
es
clc
inc
inc
push
or
or
inc
ss
sub
or
popf
jo
dec
push
sub
mov
sbb
imul
test
add
mov
lds
add
xchg
clc
shl
leave
adc
popa
jns
add
jo
add
cs
in
add
jmp
addr16
sbb
std
rol
fld
imul
or
in
outs
ins
xor
adc
jno
inc
shl
xor
gs
inc
loopne
test
dec
dec
dec
lods
mov
xor
(bad)
loope
xchg
pop
and
xchg
in
sub
aas
mov
arpl
in
aas
pop
add
mov
sub
int
mov
outs
stc
xor
mov
std
cmp
je
fnstcw
aaa
inc
jo
jns
inc
dec
adc
add
sub
or
fidiv
pop
sbb
cmp
mov
dec
enter
and
ret
inc
push
je
das
sub
adc
sub
add
adc
je
cwde
cmp
sbb
outs
in
jmp
xor
ins
sub
cmp
scas
mov
jae
lea
pop
outs
push
jnp
sub
adc
popa
adc
mov
arpl
cmp
add
je
fwait
xchg
dec
xor
loopne
daa
icebp
shl
cmp
dec
ins
sbb
cmps
and
xor
push
add
and
sar
push
ror
dec
sub
inc
adc
dec
adc
sbb
aaa
and
and
imul
ror
xchg
jecxz
push
add
movs
popf
out
mov
push
popa
popa
scas
fs
dec
mov
jmp
fnsave
add
test
lea
push
mov
rcl
add
test
xor
push
(bad)
inc
inc
add
mov
movs
mov
das
psllw
jbe
dec
push
xor
(bad)
or
sub
scas
jne
add
aas
xor
cmp
mov
pop
jp
jns
add
or
xor
xchg
inc
arpl
das
adc
mov
pop
aaa
ror
js
push
push
sbb
mov
out
mov
bound
mov
xor
mov
xchg
ret
xchg
xor
dec
enter
and
sbb
rol
or
and
(bad)
xlat
retf
xor
push
mov
lock
add
cmps
or
push
add
and
xor
jmp
or
mov
jns
jp
jb
imul
mov
fucomip
lahf
pop
fwait
mov
sub
data16
jae
dec
pop
pop
add
inc
mov
cwde
jg
fs
xor
ins
imul
xor
lahf
mul
mov
mov
adc
pop
shl
mov
fwait
sub
es
or
dec
inc
xor
ret
mov
test
mov
or
data16
inc
sub
gs
rol
repz
lds
pop
cmp
int3
fist
push
data16
add
and
retf
test
call
dec
imul
lock
and
repz
call
loope
inc
and
adc
mov
mov
and
cmp
dec
jae
or
test
sub
or
out
das
loopne
psraw
and
shr
test
aas
int3
fldenv
mov
inc
mov
icebp
mov
mov
and
xor
fdivr
push
pop
or
ret
cmp
dec
sti
or
push
xor
(bad)
or
cmp
das
sub
pop
xor
push
mov
sub
or
add
add
and
or
bound
adc
xchg
cmp
dec
and
sbb
loop
and
or
test
adc
je
cmc
cmp
arpl
dec
jbe
inc
stos
push
xor
push
xor
bound
jo
push
cmp
fstp
add
cmp
out
je
mov
imul
test
arpl
fsub
xchg
jne
or
adc
js
or
dec
push
fs
mov
xor
lock
loope
cs
pop
inc
ret
cld
and
or
das
ja
(bad)
mov
das
out
jne
xchg
add
mov
daa
fmul
xor
or
add
fcom
cmp
jo
stos
ficomp
push
je
pop
mov
adc
mov
test
lods
jae
or
push
jmp
cmp
(bad)
inc
mov
(bad)
adc
ja
dec
xlat
pop
sub
and
fadd
sbb
loopne
out
inc
out
es
adc
fs
or
mov
xor
push
cld
mov
jne
pop
mov
out
or
jne
jp
inc
push
(bad)
(bad)
dec
inc
shl
lds
dec
rcl
jge
xor
push
popa
xchg
js
dec
jl
xchg
sub
mov
xchg
ret
or
push
test
rep
inc
out
mov
xor
xor
adc
imul
mov
adc
mov
mov
or
mov
cmp
lea
scas
add
ret
add
test
ins
sbb
inc
pop
push
mov
dec
fcomp
(bad)
fdiv
add
outs
sub
jmp
mov
ins
call
jmp
call
call
rol
shl
inc
mov
imul
mov
or
push
pop
clc
adc
push
inc
pop
cmp
add
mov
loop
inc
pop
pop
sub
mov
mov
jmp
int
push
pusha
pop
push
cmps
(bad)
inc
stos
(bad)
scas
lods
(bad)
add
adc
xchg
lds
aaa
xchg
out
jmp
pusha
push
nop
(bad)
sbb
pop
push
outs
outs
add
jns
mov
push
sbb
mov
inc
fcom
adc
ficom
cmp
ss
mov
jmp
inc
fstp
retf
add
add
xor
imul
movs
frstor
sub
jo
shl
pcmpeqd
push
jmp
inc
inc
es
xor
daa
inc
xlat
pop
sub
daa
dec
jno
jae
in
outs
xor
inc
pop
sub
outs
or
cwde
add
inc
inc
sti
push
dec
adc
xlat
pop
sub
and
cmp
sub
or
stos
add
adc
add
mov
add
push
lods
pusha
adc
psubq
mov
xchg
sub
imul
dec
push
mov
push
push
call
imul
mov
push
sub
pop
adc
pop
jo
and
dec
mov
mov
ja
lods
mov
or
inc
ret
sub
dec
cmps
add
add
imul
loopne
adc
outs
push
or
and
mov
jo
jo
cdq
or
adc
sub
and
jb
push
and
inc
dec
and
pusha
pusha
in
in
cmps
add
add
or
lods
or
sbb
and
cmp
in
sbb
and
push
xor
movs
jo
jo
and
pop
in
gs
push
wrmsr
pop
js
push
scas
push
mov
shl
(bad)
cld
inc
mov
or
push
adc
push
add
and
jle
lock
rcr
add
add
sbb
sbb
dec
xlat
ins
sub
retf
fiadd
je
adc
pop
and
gs
sub
rol
jl
mov
push
pop
daa
add
(bad)
les
sti
mov
loopne
mov
xor
push
loope
mov
push
push
push
push
sub
xchg
fist
sub
jmp
and
xor
sub
or
pop
mov
das
out
and
push
fs
pusha
and
pop
mov
inc
sti
add
mov
push
push
aaa
dec
push
iret
jae
inc
adc
aad
enter
jmp
xchg
jp
mov
push
in
shl
aam
sbb
fs
sub
mov
ins
retf
add
cli
mov
push
pop
aas
ror
fldenv
adc
sbb
ret
sbb
ins
pusha
sub
mov
aam
loope
add
cmp
pop
gs
adc
cdq
inc
outs
add
and
or
dec
xchg
xlat
add
adc
jge
add
scas
fucom
push
push
fldenv
fwait
shl
push
sbb
js
cs
hlt
jo
xchg
adc
jp
fwait
hlt
adc
inc
mov
outs
or
pop
enter
into
jecxz
add
sub
inc
jae
pop
add
outs
dec
fdiv
pop
and
sub
ins
xor
cmp
enter
xor
sbb
popa
xchg
cmp
popf
xor
retf
in
or
inc
dec
ret
push
pop
hlt
pop
mov
inc
cmp
mov
clc
and
add
and
or
and
mov
scas
outs
add
and
ret
ret
div
pop
clc
out
mov
test
cmc
aam
and
repnz
push
or
pop
jl
pop
mov
loopne
jns
in
cld
mov
adc
nop
push
mov
std
jnp
mov
scas
lock
cmp
jmp
in
jns
(bad)
push
in
adc
jmp
adc
add
cmp
cmp
loope
jg
arpl
jo
push
add
nop
dec
jo
mov
daa
outs
loope
loopne
adc
push
mov
into
mov
rol
dec
adc
mov
mov
adc
call
lods
fprem
stos
sbb
pcmpeqw
test
jne
jl
sbb
xchg
rol
test
icebp
mov
pop
cwde
cmps
inc
add
and
bound
shr
push
mov
ins
mul
sub
(bad)
dec
inc
nop
pop
(bad)
push
pop
mov
(bad)
not
out
inc
retf
push
pop
dec
push
mov
add
push
inc
push
movs
out
sti
arpl
sub
mov
mov
add
mov
out
es
call
pushf
sbb
fs
rcr
and
pop
or
pusha
sbb
jb
push
mov
and
nop
fs
je
pop
sbb
push
js
and
and
mov
and
jb
shl
mov
push
cmp
adc
xchg
xchg
movs
cwde
in
sbb
pushf
xchg
and
push
movs
inc
test
fs
push
mov
sbb
mov
inc
in
and
mov
cmp
fs
lds
(bad)
sti
and
cmp
retf
and
and
ret
cs
xor
enter
mov
(bad)
ss
test
in
cmp
call
sbb
jno
and
das
and
(bad)
xchg
push
and
nop
cld
xor
leave
ins
jb
popf
inc
add
and
inc
mov
int3
or
pop
fs
xchg
adc
ins
inc
push
sbb
sbb
inc
and
sbb
mov
inc
sub
xor
xor
sar
push
and
and
call
ins
nop
sbb
inc
and
push
sbb
fs
xchg
pop
and
sbb
mov
xor
and
and
xchg
sbb
enter
mov
mov
mov
sbb
mov
leave
and
cwde
fistp
pushf
mov
fsub
dec
xchg
add
movs
(bad)
xor
enter
fs
pop
je
jbe
retf
les
and
and
pop
sbb
mov
(bad)
push
pop
and
stc
and
jb
shl
cmp
shr
mov
and
das
stc
cmp
cmp
dec
and
and
lds
test
and
sbb
jb
in
mov
add
sbb
outs
ins
xor
pusha
xchg
xchg
cdq
push
or
mov
mov
push
mov
pop
xor
push
mov
and
(bad)
ss
mov
in
and
add
loopne
inc
push
sbb
fs
mov
dec
and
clc
dec
sbb
xor
hlt
pop
(bad)
cmps
sbb
and
add
add
and
fs
sub
retf
inc
inc
push
add
or
fs
mov
fcom
mov
sbb
clc
cmc
and
mov
adc
js
sbb
xchg
sbb
and
cmp
pusha
sub
inc
sbb
ret
sub
or
jne
int
mov
xor
and
ss
inc
daa
mov
nop
cdq
push
mov
sbb
aam
add
mov
enter
and
xor
jl
pushf
(bad)
and
jb
enter
int3
and
cmp
in
and
mov
xchg
test
lods
lock
sub
and
in
mov
test
inc
inc
push
sbb
enter
int
fmul
in
xchg
inc
aam
fmul
sbb
fs
mov
mov
fdiv
inc
jno
js
sub
in
and
cmp
mov
in
and
cwde
retf
sub
in
dec
mov
adc
test
les
shl
enter
mov
and
das
and
sbb
xchg
int3
ror
dec
and
ins
ss
cmp
call
sbb
test
lods
jb
lds
cld
push
and
inc
inc
push
cmp
lock
retf
add
je
mov
or
or
xor
enter
adc
mov
push
cmp
call
in
mov
and
(bad)
sub
fadd
push
sbb
cwde
jo
nop
xchg
loopne
in
xor
and
pushf
enter
lock
push
cdq
(bad)
loope
xor
and
retf
arpl
mov
(bad)
int3
int3
(bad)
jo
add
xor
and
xchg
adc
sbb
xchg
arpl
sbb
test
xchg
and
enter
sub
aaa
push
(bad)
out
sub
pop
and
sub
enter
int3
dec
xchg
and
mov
and
fs
dec
sbb
push
cmp
in
lods
jo
enter
push
je
inc
(bad)
sbb
xor
adc
cmp
and
xchg
enter
js
add
inc
mov
push
push
inc
sub
push
push
in
xchg
inc
pop
jl
outs
cmp
ins
mov
iret
add
dec
loopne
je
cwde
adc
and
add
ror
stos
fidiv
xor
ret
add
stos
and
push
jmp
imul
and
xor
jg
dec
add
retf
mov
push
call
push
or
push
nop
xchg
arpl
xchg
and
cmp
ins
aam
inc
inc
push
jo
inc
(bad)
sbb
sbb
xor
push
and
in
sub
push
mov
push
sbb
push
fcomp
cmp
shl
xchg
push
and
repz
sbb
mov
pop
lock
aas
dec
xor
ins
sub
jo
lods
in
push
sbb
daa
and
cmp
or
enter
and
dec
push
sbb
jb
fs
rol
inc
pushf
pusha
nop
retf
arpl
jg
and
in
test
dec
xchg
cmp
or
(bad)
add
into
push
add
aad
dec
jbe
enter
sbb
push
aaa
push
sbb
xlat
fidiv
fcom
cmp
call
stos
or
ja
add
gs
or
scas
jbe
push
dec
fs
sbb
neg
push
cmps
ds
adc
fwait
pop
dec
push
jns
mov
xor
xlat
xchg
and
test
popa
arpl
jle
aaa
mov
or
sbb
pop
and
jnp
outs
or
fs
mov
sti
push
xchg
adc
rol
arpl
cs
sbb
jb
mov
sub
add
aaa
xchg
jno
add
addr16
ja
mov
xchg
aas
add
sbb
bound
pop
xlat
jbe
add
mov
in
mov
push
in
or
pop
push
popa
fistp
pop
inc
and
adc
mov
inc
mov
stos
or
or
mov
pop
es
pop
dec
xchg
jg
loope
jne
aaa
outs
popa
fisub
dec
push
mov
inc
or
rol
mov
adc
mov
ins
mov
aas
out
(bad)
mov
push
call
(bad)
cmc
jo
or
inc
and
and
call
add
shl
imul
mov
mov
adc
ficom
cmps
and
sbb
jl
push
xor
push
push
or
adc
inc
sub
dec
dec
imul
popa
ror
cmp
loopne
and
pop
add
ins
adc
xor
dec
add
and
sub
xchg
es
push
outs
xor
add
pusha
dec
dec
or
dec
inc
and
adc
inc
sbb
iret
imul
ds
fs
add
fadd
outs
dec
adc
(bad)
pop
das
xor
mov
xlat
imul
add
push
aas
xlat
mov
lods
(bad)
pop
pop
adc
shl
out
gs
and
cmps
pop
inc
adc
mov
jb
imul
inc
xchg
mov
mov
mov
imul
imul
jl
inc
xchg
dec
cdq
xchg
add
pusha
aaa
scas
xor
sub
sbb
pop
mov
call
in
push
aas
cmp
cmp
pop
daa
sub
xchg
ins
add
or
loope
push
aam
or
jae
fwait
jne
push
pop
fadd
outs
outs
add
xor
fild
jmp
cmp
cdq
pusha
outs
or
add
mov
pusha
ret
add
push
add
push
es
cmp
pop
push
push
loope
rcr
ret
mov
xor
les
iret
sbb
xchg
(bad)
pop
mov
xchg
jg
movs
ss
push
push
inc
or
pop
xchg
adc
jne
fistp
or
mov
xchg
pop
or
add
mov
add
mov
or
out
inc
add
jmp
xchg
add
out
push
inc
mov
push
add
addr16
rol
pop
xchg
xor
ret
push
pop
test
xor
movs
call
inc
add
sub
add
data16
ins
mov
pop
sbb
pop
or
cli
cwde
push
jecxz
pop
scas
sbb
dec
inc
dec
lods
lea
mov
push
arpl
test
adc
or
xor
inc
or
mov
or
adc
mov
inc
mul
lock
arpl
loopne
push
or
dec
ins
push
xchg
outs
jmp
test
ficom
add
cmova
dec
mov
outs
pop
jns
mov
jmp
adc
jmp
das
mov
(bad)
push
adc
pop
mov
outs
jg
arpl
sbb
sub
pusha
and
jnp
and
sub
adc
mov
mov
aaa
inc
xchg
(bad)
(bad)
pop
sub
fidivr
adc
adc
xor
add
lahf
push
stos
adc
sbb
clc
cmp
inc
test
mov
dec
jno
mov
(bad)
ja
or
adc
xchg
pop
cmp
test
(bad)
or
aas
popa
test
aas
inc
inc
pop
pop
ds
imul
imul
dec
adc
xor
ja
sub
mov
push
xchg
push
fcmovnu
aaa
inc
or
jo
sbb
jae
dec
xor
push
lahf
fadd
adc
cwde
xor
ins
and
xlat
arpl
mov
sub
adc
adc
adc
pop
sbb
pop
pop
adc
imul
pop
mov
lods
xor
lahf
adc
mov
and
push
cmp
add
inc
ja
mov
les
pop
pop
or
ins
fnsave
sar
addr16
or
ja
add
mov
mov
out
jo
pop
imul
xchg
rol
sub
test
rcr
rol
call
jae
test
cwde
stos
outs
pop
pop
add
add
jbe
adc
adc
mov
clc
aaa
cmp
pop
scas
popa
aad
sub
adc
push
addr16
inc
xchg
jp
mov
sbb
dec
out
adc
les
adc
ins
je
xchg
push
addr16
inc
dec
cmp
inc
imul
xor
add
aaa
pusha
aas
das
xor
or
dec
dec
inc
jg
push
push
emms
adc
aaa
(bad)
cmp
jne
pcmpgtb
fsubr
jae
aas
or
pop
xlat
scas
es
outs
mov
jo
or
push
mov
test
jae
add
aad
jg
sub
fcmovbe
mov
dec
retf
sub
adc
pop
dec
adc
inc
mov
in
test
pusha
pop
inc
aaa
aas
dec
ins
sbb
push
aas
or
or
test
inc
inc
scas
pop
mov
dec
adc
stos
pop
and
dec
lahf
dec
sub
stos
xchg
outs
out
rol
pop
adc
stos
mov
lods
jbe
mov
or
rcl
push
or
out
scas
jae
and
bound
dec
mov
shl
lahf
dec
dec
imul
inc
pop
dec
sbb
dec
repnz
test
jle
imul
xchg
out
xchg
stos
inc
fwait
loopne
outs
(bad)
push
xchg
sar
jbe
or
call
movs
aas
outs
iret
push
xchg
dec
sub
adc
daa
adc
add
aaa
add
inc
scas
and
aaa
pop
sbb
sub
jne
lock
or
mov
mov
dec
dec
add
out
stos
inc
xor
adc
adc
adc
dec
cmps
bound
outs
jno
imul
ss
adc
outs
rol
ss
push
inc
shr
das
sar
bound
mov
aam
sub
jg
adc
dec
add
pop
sbb
push
sbb
push
sub
mov
iret
outs
jnp
nop
imul
mov
lods
sub
cmp
dec
call
xchg
shl
(bad)
test
or
pusha
push
xlat
test
ja
sub
and
neg
inc
xchg
push
ja
sub
sbb
push
pop
push
pop
sbb
iret
sbb
push
adc
xor
xor
outs
test
jno
addr16
ja
cmp
les
ja
pop
and
test
add
pop
cmps
push
test
das
xlat
dec
xor
adc
pop
inc
xchg
cwde
or
(bad)
jg
in
or
fst
xor
iret
ja
lods
sbb
mov
adc
xor
mov
xchg
ss
xor
sbb
xor
pop
ins
scas
xor
aaa
xor
sub
sbb
dec
out
shl
push
adc
mov
test
mov
xchg
pop
(bad)
mov
les
addr16
pusha
sbb
or
addr16
pop
add
mov
xor
or
dec
ins
inc
inc
dec
inc
adc
sbb
in
loopne
fist
cmp
xchg
daa
jle
adc
pop
dec
adc
push
xchg
or
nop
imul
jae
xor
(bad)
adc
inc
das
inc
out
cmp
add
outs
fisubr
pop
pusha
mov
inc
aaa
xchg
aaa
inc
ins
xor
adc
das
inc
jae
or
jg
push
inc
inc
pop
loope
xor
aaa
inc
push
mov
jo
lahf
pop
adc
adc
lods
call
inc
xor
jmp
popa
xor
in
or
out
(bad)
adc
dec
outs
dec
pop
add
sub
lods
pop
(bad)
jg
inc
icebp
or
ja
push
sub
sbb
inc
pop
imul
pop
xor
cmp
jg
iret
add
addr16
cvttps2pi
test
dec
cmps
sbb
iret
or
dec
or
push
dec
daa
pusha
and
mov
fsub
mov
push
addr16
push
and
les
sbb
add
pop
xchg
jae
lds
pop
call
inc
outs
pusha
pop
jo
add
ss
fadd
aaa
(bad)
or
in
loopne
sub
inc
inc
imul
mov
rcl
jle
ss
or
jbe
jne
cmp
inc
pop
cmovbe
push
movs
add
cmps
outs
lahf
push
and
mov
in
pop
adc
and
adc
inc
sbb
(bad)
and
sub
je
test
and
push
(bad)
cs
inc
outs
fistp
int
xor
mov
je
and
pop
sbb
or
sbb
sbb
pop
pop
pusha
sbb
sbb
push
inc
inc
popw
jl
add
nop
xchg
cwde
inc
inc
inc
inc
pushf
mov
inc
inc
lods
mov
sbb
mov
mov
sbb
sbb
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
hlt
clc
cld
inc
inc
call
inc
inc
inc
inc
adc
sbb
inc
inc
inc
and
and
ds
sub
xor
xor
inc
inc
xor
xor
pop
add
nop
xchg
cwde
xor
xor
xor
xor
sub
xor
xor
xor
cmp
inc
enter
js
test
lods
or
enter
ror
enter
fcomp
enter
loopne
call
enter
movs
enter
cld
add
add
mov
enter
clc
push
adc
sbb
inc
or
and
inc
inc
inc
inc
sub
xor
inc
cs
inc
cmp
mov
or
nop
pushf
movs
test
inc
inc
inc
lods
mov
inc
inc
mov
inc
inc
inc
enter
(bad)
xor
xor
xor
xor
test
loopne
ins
jbe
xor
aam
enter
js
lock
fcmovne
test
inc
inc
inc
inc
enter
xchg
or
pop
(bad)
or
int
call
sbb
mov
or
sbb
sbb
adc
sbb
fwait
in
sbb
pop
rcr
or
ss
(bad)
or
xchg
lock
clc
cld
enter
add
enter
adc
sbb
enter
and
sub
enter
xor
pop
leave
enter
pusha
fs
lds
or
cmp
and
and
js
push
in
ins
fwait
int
push
or
retf
and
mov
pop
fs
pusha
and
and
dec
mov
ss
xor
ret
or
or
push
sbb
dec
dec
push
fwait
ins
sbb
push
pop
sub
ins
ss
sub
sub
xor
enter
fs
push
ins
jo
xchg
inc
mov
int
retf
pminub
xchg
sbb
dec
jne
push
or
data16
dec
cld
xchg
mov
pop
pop
(bad)
cld
sahf
mov
clc
pop
adc
cli
or
mov
pop
lea
or
xchg
jbe
aam
xlat
test
mov
pop
cs
mov
test
jbe
xor
or
push
in
mov
mov
xlat
(bad)
pop
xchg
lock
cwde
sub
add
add
pop
cdq
fs
in
add
enter
mov
dec
loopne
(bad)
(bad)
fidiv
leave
add
add
xchg
mov
pop
dec
sahf
retf
leave
fcomp
ror
in
xchg
xchg
int3
or
adc
enter
(bad)
les
idiv
jae
enter
cmp
add
xor
push
pop
mov
adc
mov
xchg
sar
xchg
xchg
xor
mov
idiv
jo
or
sbb
mov
aaa
mov
mov
je
push
sbb
mov
je
mov
ins
xchg
ret
inc
adc
mov
mov
into
imul
jo
int
push
mov
imul
and
out
pop
adc
int3
and
pop
lods
or
and
inc
add
in
in
fsubrp
cmps
mov
mov
sbb
cmps
sub
mov
retf
shl
sbb
xchg
loopne
add
and
add
xchg
iret
imul
lock
cmp
adc
push
mov
lods
adc
outs
mov
add
add
test
add
or
out
sub
js
out
inc
or
ret
cmovo
mov
pusha
scas
inc
and
dec
mov
ret
pop
and
adc
push
and
and
fcomp
push
push
cs
xor
in
ffreep
dec
adc
push
rcr
mov
inc
cld
mov
mov
sub
and
add
test
mov
inc
adc
jno
int3
nop
cmp
mov
or
or
scas
xchg
mov
pop
cmp
arpl
jle
pop
jbe
jbe
or
xor
sub
xor
sbb
inc
add
ja
push
in
push
push
scas
jae
mov
mov
pop
or
dec
jo
sbb
cld
fisubr
outs
push
push
jbe
inc
fsub
jmp
inc
popf
or
dec
out
adc
test
add
mov
mov
out
ror
cmp
adc
push
adc
adc
dec
outs
and
push
mov
push
int
nop
push
adc
or
je
(bad)
scas
idiv
js
or
add
jbe
lds
mov
inc
ret
fnstenv
loopne
push
or
jo
mov
jmp
mov
mov
sbb
inc
inc
inc
inc
xor
xor
ds
add
add
add
jb
mov
sbb
fisttp
cmp
int3
aaa
dec
clc
sbb
inc
push
or
loope
es
add
dec
jnp
sub
push
dec
mov
add
push
mov
adc
aam
jb
popa
jns
pop
loopne
ror
gs
jnp
mov
or
inc
cmp
into
popf
inc
jbe
or
or
push
lds
scas
mov
adc
dec
addr16
mov
add
mov
mov
mov
or
inc
cmp
sub
push
dec
add
push
outs
call
xlat
ss
push
cdq
dec
pop
dec
and
dec
stc
xor
xor
jb
sbb
pop
mov
sbb
add
fild
adc
dec
add
push
and
or
popa
adc
add
fistp
add
loope
ins
pop
call
fbstp
movs
add
addr16
out
sbb
js
les
push
dec
fdiv
push
ja
and
aaa
out
push
sub
rol
scas
add
lock
test
push
mov
push
push
push
pusha
cmp
pop
inc
add
xor
iret
add
into
and
pusha
sbb
clc
(bad)
lahf
ins
and
dec
test
pop
pop
(bad)
cmp
add
or
cdq
adc
jnp
sbb
pop
mov
and
inc
or
pop
sub
mov
dec
dec
enter
push
or
lds
out
cmp
lea
ror
sbb
loopne
dec
dec
dec
jl
add
lock
je
mov
xchg
(bad)
xor
jl
push
jge
nop
push
ja
and
fdivr
add
push
mov
aas
outs
(bad)
push
sub
movs
inc
out
adc
adc
mov
xor
adc
movs
cdq
outs
adc
mov
push
push
xchg
lods
psllq
sbb
add
pop
mov
inc
ret
xchg
data16
fdiv
sti
mov
inc
imul
pop
mov
xor
mov
jns
test
pop
dec
test
cmp
ret
add
cwde
shl
inc
lods
adc
sbb
cmp
adc
test
lock
jo
mov
outs
jecxz
or
call
call
and
ins
test
add
mov
dec
cwde
popa
dec
int
add
retf
add
adc
sub
jmp
jo
jo
movs
clc
cmps
inc
jl
adc
xor
sti
inc
or
push
xchg
mov
outs
mov
or
sub
mov
xchg
dec
outs
fsubr
out
aam
inc
scas
dec
ror
jmp
add
cmp
and
pop
call
rol
cmp
or
sbb
inc
clc
sub
mov
shl
mov
xchg
(bad)
push
popa
cs
and
mov
sbb
sbb
add
sub
add
jb
inc
inc
inc
xchg
mov
cli
pop
inc
cs
pop
push
inc
push
xchg
stos
pop
push
push
aas
pop
pop
push
push
mov
pop
das
pop
push
cmp
dec
adc
cmc
adc
pop
daa
pop
dec
inc
push
xchg
add
adc
daa
popf
xchg
or
sbb
xchg
mov
push
sbb
lahf
daa
jns
adc
add
cmp
mov
outs
iret
add
and
or
ror
dec
or
sub
sahf
das
cmp
xchg
push
rol
or
loop
fnstenv
scas
and
xor
fild
push
pop
neg
hlt
out
xor
dec
ds
push
inc
push
pop
daa
daa
mov
shrd
jae
fnstenv
cmps
or
push
fs
daa
or
je
inc
ins
and
outs
jns
and
cmp
pop
jl
ins
lods
dec
cmp
add
stos
stos
dec
loope
and
in
test
pop
adc
push
sub
xor
test
lock
pop
pop
inc
pop
cmps
les
dec
mov
neg
inc
and
add
jnp
test
pop
xor
xor
pop
jl
mov
call
mov
sbb
jmp
das
jnp
loopne
xchg
jmp
dec
mov
jg
inc
inc
sub
add
outs
dec
daa
icebp
inc
inc
or
adc
outs
lds
or
adc
push
or
sbb
and
lods
mov
cmp
(bad)
adc
adc
pusha
ins
inc
fisttp
rcl
pop
sbb
pop
mov
add
pop
pop
daa
stc
das
inc
pop
pop
jnp
add
cmps
wrmsr
stos
or
add
cmp
push
mov
jecxz
push
cmps
mov
add
add
push
shl
cmp
pop
test
in
jo
mov
in
iretw
add
xor
mov
pop
sub
call
cmps
shl
in
lods
cmp
(bad)
scas
inc
add
adc
shl
pop
std
sbb
je
lods
push
jnp
hlt
stos
pop
inc
sbb
aaa
xchg
lods
mov
and
mov
push
inc
add
scas
xchg
lock
mov
jnp
outs
or
mov
aas
add
cdq
and
push
jle
aaa
mov
and
mov
inc
(bad)
dec
inc
movs
mov
pop
pop
add
and
cmp
aas
ins
adc
jae
sub
push
xchg
add
and
jge
or
pop
cmp
mov
pusha
xor
sbb
pop
jae
lock
pop
dec
push
dec
hlt
and
push
ss
mov
mov
dec
xor
inc
push
sbb
int3
pop
jg
fld
inc
lods
clc
pusha
push
jmp
xor
imul
je
loopne
jg
xor
shl
pop
and
lahf
mov
jmp
mov
outs
lock
in
jl
push
dec
pop
sub
cwde
xor
pushf
and
fistp
(bad)
jo
adc
or
js
mov
pop
es
jl
pop
add
push
dec
into
clc
mov
data16
jle
sub
and
repz
mov
ins
ret
inc
mov
or
je
data16
mov
push
xor
push
mov
fnstcw
push
nop
and
mov
pop
push
shl
mov
cs
int3
and
sbb
fsub
faddp
sbb
push
scas
cwde
cs
repz
mov
push
inc
(bad)
icebp
mov
mov
push
nop
mov
push
dec
add
inc
jb
or
adc
sub
sbb
pop
adc
data16
pop
fidiv
add
xchg
inc
clc
cmp
or
cmp
inc
push
sub
cmovbe
out
inc
js
xor
xor
data16
push
jmp
xor
adc
push
mov
(bad)
shl
bound
dec
rol
mov
xor
sbb
inc
es
add
push
lahf
aaa
add
mov
imul
outs
jns
dec
and
scas
test
nop
icebp
and
push
arpl
xor
and
push
or
(bad)
js
pop
add
cmp
loope
add
push
loop
dec
sub
shl
mov
sub
sbb
fs
(bad)
xor
sbb
jae
dec
int3
loopne
adc
add
inc
add
and
push
push
shl
out
xor
mov
xchg
push
(bad)
adc
and
lds
call
jmp
dec
adc
out
dec
jecxz
xor
fdivr
push
xchg
dec
mov
mov
cs
inc
push
sbb
sbb
or
test
or
pop
add
pushf
ret
in
dec
xchg
int
adc
ds
test
xchg
pop
pop
in
call
xlat
(bad)
adc
sar
push
inc
nop
push
mov
in
call
push
or
add
js
push
je
outs
neg
das
lock
int3
or
and
add
in
enter
call
cs
mov
loopne
push
aam
fistp
jl
les
pop
pushf
push
lods
shr
enter
jnp
xchg
adc
pop
rcr
loopne
ins
das
mov
mov
jb
jns
mov
mov
adc
add
addr16
scas
enter
xor
cs
jp
mov
addr16
fistp
mov
ins
jmp
sbb
das
loopne
ficomp
arpl
jge
add
push
sub
and
mov
dec
dec
pop
and
dec
paddd
dec
or
inc
sub
movs
and
inc
rcr
inc
bound
mov
push
xor
aam
inc
add
and
mov
(bad)
mov
or
dec
popa
sbb
and
gs
pop
ins
or
gs
push
lods
loop
gs
push
push
push
jbe
push
and
mov
cmp
pop
xchg
or
pop
or
push
jl
add
push
call
pop
jnp
mov
or
test
add
addr16
mov
push
loopne
outs
push
mov
pop
in
or
rcl
mov
add
imul
mul
aaa
dec
pop
in
int3
or
and
loope
lods
mov
les
daa
ins
das
sub
je
jnp
or
nop
push
(bad)
in
adc
bound
jl
addr16
or
dec
scas
pop
ins
mov
mov
jmp
add
cmp
mov
stos
jno
shr
rcr
fisttp
popa
mov
sub
or
popw
add
push
dec
and
dec
push
jmp
shl
and
add
movs
or
mov
or
stos
loop
jne
inc
mov
mov
test
sbb
imul
ins
pop
daa
jns
ret
fndisi(8087
das
out
imul
stos
xchg
xor
sbb
inc
and
sti
imul
push
out
and
xor
add
cwde
cdq
add
mov
adc
or
adc
or
fcomp
das
mov
fbstp
fist
pop
xor
adc
fs
je
or
mov
(bad)
mov
sbb
in
enter
jmp
xor
jle
add
scas
cmp
les
dec
inc
xor
cmp
or
mov
mov
push
dec
inc
xor
sbb
cmp
mov
iret
add
xor
xor
sub
or
xchg
and
xor
push
inc
push
sub
pop
mov
in
push
mov
cmp
sbb
mov
inc
test
ins
adc
jle
mov
rol
xchg
jb
addr16
xor
mov
addr16
pop
sub
xlat
push
mov
or
fld
ss
xlat
popa
sbb
ss
or
lock
sbb
les
ret
in
mov
add
push
xchg
jo
mov
xor
jno
es
loopne
dec
push
and
pop
ins
mov
mov
ins
sub
or
inc
xchg
mov
outs
pop
clc
outs
and
inc
gs
cld
push
cdq
or
or
inc
popa
outs
inc
jb
add
adc
sub
jo
fidiv
sub
mov
sti
ss
enter
sbb
shl
add
ret
inc
push
sub
sahf
inc
ficomp
and
or
mov
jl
add
retf
sahf
jno
rol
dec
mov
inc
pusha
scas
add
scas
inc
ret
adc
retf
fsubr
pusha
adc
xor
fadd
sub
or
jb
arpl
sbb
add
sbb
mov
clc
dec
sbb
mov
out
shl
xor
mov
mov
addr16
scas
mov
mov
adc
sbb
inc
imul
dec
adc
jmp
cmp
cmp
push
dec
mov
inc
push
add
inc
jl
or
outs
cld
mov
cmp
and
in
or
outs
mov
aam
daa
dec
das
in
push
pop
js
je
mov
cmps
lods
lods
sahf
xor
inc
std
test
je
cmps
je
popa
add
xor
je
ret
add
jmp
je
mov
push
mov
mov
outs
push
daa
stc
cmp
adc
iret
pop
add
add
jmp
enter
jp
sbb
sbb
enter
fadd
xlat
push
sub
ins
sub
inc
jbe
out
push
popf
(bad)
and
cmp
or
jp
jg
adc
sub
xor
or
cmp
push
sbb
cmps
rcl
add
cmps
stc
inc
outs
jne
fs
mov
sbb
imul
pop
inc
loop
add
add
or
(bad)
jbe
inc
jo
dec
lock
aam
ficom
adc
push
or
dec
push
pop
sub
enter
add
jbe
test
mov
mov
pop
xor
adc
cmp
pop
xchg
fbld
xor
adc
cmp
pop
inc
cmovp
es
sbb
and
mov
lods
dec
popa
and
out
pop
inc
push
or
push
xchg
jns
jbe
or
adc
add
or
dec
addr16
fsub
shr
inc
inc
add
imul
pminub
pop
lea
pop
mov
aaa
(bad)
cld
nop
pop
or
inc
enter
in
and
nop
jp
pop
pushf
punpcklbw
or
mov
add
pop
cmp
inc
jg
cmp
fild
pop
punpckldq
push
inc
push
or
lods
pop
push
out
cmp
(bad)
sti
sbb
mov
sbb
and
shr
inc
sbb
xchg
add
jl
and
addr16
sub
fucomi
and
ror
ret
adc
sub
xor
inc
add
adc
ss
xor
jg
pop
nop
adc
outs
setbe
cmp
add
push
fild
xor
loopne
cmp
outs
push
jo
cmovle
loopne
test
cmp
or
lods
pop
jno
pop
xor
or
add
or
pop
adc
mov
jne
pushf
idiv
push
or
inc
sti
in
aam
hlt
xchg
jg
test
cmp
sbb
mov
adc
mov
mov
mov
mov
push
pusha
push
fisub
test
setg
lea
xor
inc
mov
jne
and
mov
or
xchg
sbb
jae
and
call
ins
or
std
out
push
(bad)
leave
jb
inc
int3
mov
mov
fwait
sub
xor
fld
mov
add
sbb
and
or
imul
out
cmp
push
sbb
fild
xor
out
movs
lock
sub
add
call
in
mov
mov
out
xchg
jns
mov
test
cmp
mov
shl
call
mov
cwde
cmp
fwait
add
mov
(bad)
sub
or
sub
mov
ret
or
aam
pop
mov
loop
je
jnp
sub
xor
sbb
mov
mov
pusha
inc
cmp
adc
pushf
jg
jae
ins
shr
inc
stos
call
push
adc
imul
cmp
enter
fdivrp
jae
sub
sub
add
je
mov
test
shl
fild
push
mov
dec
inc
fwait
rol
fcomp
push
js
sar
xchg
mov
int3
jmp
jmp
mov
fnsave
fstp
sub
mov
sbb
add
mov
shl
jmp
sub
fisttp
shl
sbb
cmp
sti
mov
sub
jo
mov
adc
jmp
pop
mov
dec
cmp
cld
cli
hlt
xchg
jns
clc
xchg
iret
mov
pop
xchg
test
sbb
fcmovbe
(bad)
mov
push
jo
stos
add
push
jb
in
jbe
sbb
(bad)
aad
and
(bad)
in
ins
and
push
mov
popa
or
aam
mov
pop
mov
aad
fst
or
jne
in
in
mov
cmps
aad
and
in
mov
rol
dec
aad
mov
sub
mov
sbb
test
mov
xchg
xchg
mov
jbe
or
adc
test
jge
enter
dec
dec
mov
pop
lock
or
cmp
mov
test
jne
mov
mov
pop
in
js
push
mov
mov
dec
clc
mov
cmp
ins
es
pop
lods
fadd
xchg
jo
out
sbb
fisubr
lock
test
jle
adc
adc
sbb
xor
mov
out
dec
jne
or
mov
(bad)
pop
sub
adc
mov
mov
out
xor
xchg
ret
ror
or
test
jl
int
pop
pop
push
mov
push
mov
pop
mov
and
adc
js
inc
(bad)
repnz
add
arpl
imul
or
and
pop
aam
push
arpl
leavew
inc
mov
push
add
into
mov
(bad)
or
push
adc
xlat
and
adc
bound
fcomp
adc
push
pop
push
sbb
fbld
sahf
aas
push
jnp
cli
ret
and
jmp
mov
xchg
imul
add
and
mov
mov
cmovg
jmp
jmp
(bad)
outs
(bad)
leave
and
(bad)
adc
mov
inc
jns
jns
inc
iret
push
push
jmp
pop
jmp
jns
mov
mov
fimul
test
fidivr
or
and
je
jmp
xchg
mov
fucomip
mov
mov
pop
cmp
push
fcomp
add
in
sub
mov
stc
or
adc
loopne
ret
scas
fst
sahf
ret
inc
add
pop
loopne
bound
push
sub
loope
xor
stos
sahf
mov
pop
cld
cmp
je
test
ret
leave
adc
xchg
xor
icebp
pop
idiv
mov
aam
clc
ins
jne
mul
popf
fld
jmp
scas
rcl
mov
mov
imul
test
mov
cld
out
pop
and
mov
jmp
pcmpgtb
imul
or
dec
retf
pop
mov
imul
lds
aaa
dec
pop
jmp
mov
imul
mov
jecxz
mov
shl
mov
adc
out
pop
sub
call
pop
cld
cmp
je
loope
repz
dec
nop
in
icebp
mov
mov
aas
push
lea
jno
in
jnp
scas
adc
or
das
sahf
sbb
arpl
js
in
scas
imul
push
push
sbb
retf
icebp
unpcklps
xchg
sbb
aad
mov
jle
lock
sar
call
xchg
loope
dec
daa
push
call
adc
icebp
inc
and
data16
ins
loop
dec
jne
jle
out
or
jecxz
push
retf
inc
fisubr
jge
call
lahf
cmc
out
cmp
jle
cmp
or
std
icebp
push
mov
jmp
sbb
add
ficomp
xchg
sbb
add
add
jle
fwait
and
mov
and
loope
aaa
pop
mov
ret
jecxz
adc
xor
xor
clc
hlt
rcr
sub
add
nop
outs
repnz
mov
xor
fmul
mov
or
mov
xor
add
pop
mov
paddsb
(bad)
cwde
call
scas
or
scas
js
mov
inc
dec
dec
ror
cmps
cmp
(bad)
cdq
push
pusha
sti
mov
jecxz
or
ins
mul
inc
jo
push
retf
and
push
in
sahf
xchg
adc
inc
and
xor
jo
dec
inc
cmp
fmul
push
sbb
pop
adc
add
mov
xchg
arpl
repz
push
sbb
inc
and
add
cmps
mov
inc
popa
or
xor
arpl
data16
sbb
sub
lds
mov
add
(bad)
std
fcom
pop
pop
scas
sbb
dec
mov
add
jmp
mov
in
inc
jo
dec
ins
fmul
mov
(bad)
jmp
mov
fist
push
sti
adc
jl
pop
ret
add
call
xlat
aaa
popa
jbe
xchg
mov
push
push
pop
or
mov
xchg
std
inc
mov
sbb
fistp
inc
or
and
xchg
lods
pushf
or
test
sub
mov
sahf
dec
push
push
jl
dec
jne
daa
in
cmps
loop
and
inc
mov
and
push
or
and
fnstsw
adc
mov
nop
jmp
xchg
mov
push
add
mov
pop
je
push
nop
or
ins
xchg
clc
outs
rol
shl
push
jecxz
mov
push
ficomp
cmp
test
je
fadd
jmp
in
jb
xchg
ins
call
loopne
adc
xor
add
lock
rcl
mov
xor
dec
(bad)
out
xor
ret
and
and
dec
clc
mov
les
mov
mov
jae
(bad)
push
add
dec
fwait
jp
or
or
or
mov
or
fcmovu
(bad)
pop
pop
mov
add
pop
imul
add
mov
pop
call
xchg
pop
mov
sti
call
dec
inc
in
push
pop
cmp
inc
inc
(bad)
aas
xchg
adc
mov
push
cmps
ins
or
sti
adc
push
dec
jne
jg
or
jnp
pop
dec
daa
es
js
mov
adc
xchg
xchg
pop
dec
pop
movs
ret
das
mov
inc
inc
pop
outs
push
push
cmp
mov
jge
add
lea
das
mov
mov
and
retf
jl
mov
movs
push
test
or
and
sbb
pop
add
pusha
pop
aas
ret
xchg
mov
mov
push
inc
jo
mov
fwait
nop
xchg
or
jns
inc
fwait
xchg
add
in
loope
out
movzx
mov
ret
cmp
cmps
sbb
movs
lods
(bad)
xor
jno
add
inc
or
jmp
xlat
shl
pop
inc
jb
clc
push
pop
sub
pop
pop
or
adc
inc
xor
cmp
ja
enter
adc
fcmovu
or
addr16
xlat
sub
mov
push
or
sbb
adc
aaa
test
je
les
pop
loope
adc
popf
dec
inc
pop
mov
push
add
adc
jmp
push
icebp
sub
jns
(bad)
(bad)
jmp
jo
xchg
add
je
dec
je
leave
sti
mov
sub
adc
push
adc
adc
mov
dec
xor
mov
movs
add
or
mov
inc
clc
test
inc
add
mov
or
push
cmp
jne
mov
iret
in
jmp
pop
jbe
xchg
and
and
add
and
add
sbb
je
and
ds
xchg
pushf
or
mov
out
lea
sub
add
pop
repnz
retf
cmp
gs
lea
mov
dec
sar
adc
or
repnz
mov
mov
adc
mov
adc
push
aaa
shr
inc
adc
sbb
ficomp
push
adc
das
rcr
daa
ins
or
inc
inc
jg
push
sbb
in
push
mov
ret
ins
shl
xchg
sub
xor
mov
jmp
mov
sbb
dec
pusha
das
pop
add
fcom
test
call
mov
lea
xchg
push
nop
xchg
popa
das
aad
or
or
outs
(bad)
shl
pop
inc
mov
nop
mov
enter
inc
sbb
or
jae
xlat
inc
and
es
lock
in
mov
push
adc
pop
jnp
add
adc
add
int
int
push
adc
sahf
adc
pop
movs
sub
ss
lea
scas
loopne
lock
mov
add
xchg
sti
clc
fstp
push
adc
sbb
sbb
je
push
and
(bad)
adc
jecxz
mov
fild
push
cld
mov
pop
fstp
sub
jmp
add
dec
ret
add
push
js
sub
push
ja
mov
adc
shl
jecxz
xchg
mov
xor
mov
mov
push
or
push
retf
sub
sub
xchg
or
mov
mov
jl
jnp
aaa
mov
cmp
dec
ret
or
scas
repz
xchg
les
out
mov
je
mov
bound
inc
rol
push
cmp
cwde
xor
adc
lds
cmp
jge
cmp
aaa
xchg
push
add
pop
movs
aaa
mov
call
sub
add
ror
push
test
add
test
cmp
movs
sahf
add
nop
mov
and
dec
sti
lds
adc
add
in
sub
adc
xchg
xor
push
loop
or
nop
mov
cmp
and
scas
shr
or
test
mov
jle
or
sti
or
adc
adc
mov
ret
test
iret
sbb
js
push
xchg
push
sti
mov
stc
or
xchg
xchg
push
pop
bound
adc
push
sbb
mov
push
xchg
xchg
shl
lods
ins
lock
jne
ret
fild
or
inc
inc
mov
(bad)
repnz
(bad)
mov
cmps
das
inc
movs
sub
adc
loopne
mov
ja
nop
or
cpuid
mov
outs
jo
sahf
add
test
adc
or
out
mov
jnp
mov
outs
push
stos
xor
xor
xor
sub
leave
call
es
lock
cmp
push
jl
pop
mov
push
mov
out
mov
add
mov
gs
mov
xor
dec
lock
mov
ins
add
daa
cmp
push
aad
jne
xor
mov
add
je
inc
xor
cmps
inc
push
cmp
jne
pop
clc
fadd
rol
pop
cs
pop
je
pop
pop
cmp
sbb
pop
mov
cmp
jge
jecxz
cmp
pop
cmp
pop
mov
loope
cmp
fistp
push
sbb
jl
icebp
push
ret
jo
aaa
ret
(bad)
outs
dec
clc
xor
add
xchg
outs
or
sub
sub
cmps
sbb
xor
xor
arpl
sbb
cmp
and
mov
ret
ja
loope
addr16
dec
inc
aaa
ret
adc
and
adc
je
loope
mov
adc
xchg
ja
adc
cmp
lahf
cli
test
jg
mov
popf
or
adc
fwait
sub
mov
scas
gs
daa
mov
retf
in
popf
mov
cli
aam
mov
lahf
pop
xor
push
adc
push
add
mov
add
movs
fist
or
loopne
pop
xchg
add
xchg
sbb
xor
push
loop
mov
sbb
push
clc
add
in
je
mov
xor
cmps
pop
std
and
jmp
sbb
inc
inc
rcr
jmp
cmp
call
adc
mov
dec
repnz
(bad)
and
inc
sbb
iret
sbb
jbe
cmps
ror
inc
or
push
test
out
mov
repnz
adc
mov
xchg
push
dec
jle
enter
sbb
pop
xchg
arpl
aad
sub
fdiv
loopne
add
inc
inc
not
cmps
xchg
xchg
xchg
adc
add
xor
fwait
mov
pop
mov
add
push
or
stos
pushf
int3
sbb
cdq
or
shl
loop
inc
mov
fcomp
shr
test
jb
adc
pop
sub
push
add
add
add
call
push
mov
jnp
inc
mov
xor
cmp
test
test
imul
mov
and
add
or
shl
mov
pushf
mov
scas
xchg
adc
xor
lock
clc
loope
push
inc
jnp
add
or
xor
icebp
inc
and
sbb
inc
push
loope
xchg
fsub
jo
pop
imul
push
or
fs
sbb
lock
push
sbb
jp
nop
(bad)
sbb
adc
lahf
sbb
ficomp
clc
push
stos
sub
mov
rol
shr
push
mov
push
lock
jo
jmp
push
or
bound
and
int
or
mov
test
dec
sub
jne
into
dec
add
inc
sub
je
(bad)
adc
aam
fldcw
hlt
jle
cmp
arpl
fldenv
jo
shr
cmp
mov
cmp
dec
cmp
popa
dec
push
or
jmp
push
inc
xor
inc
push
push
push
inc
dec
inc
push
dec
add
jg
xchg
push
ror
leave
je
mov
add
rcr
loop
add
xchg
test
add
(bad)
loopne
add
push
push
mov
popf
cmp
add
sbb
pop
mov
imul
stos
add
push
cmp
enter
dec
enter
add
pop
je
dec
je
test
mov
fwait
cmps
or
enter
jne
mov
pop
pop
fdiv
enter
xor
les
ins
and
fcom
ror
in
clc
fnsave
(bad)
jge
rcr
push
loopne
jmp
mov
arpl
jbe
mov
gs
xor
add
cmp
mov
push
enter
out
ja
and
xor
fist
push
out
lods
in
test
add
sti
aam
sub
mov
add
cwde
je
loope
out
or
lods
pop
jecxz
ror
push
std
push
or
sub
mov
jb
shl
pop
lds
adc
mov
pop
gs
push
push
fwait
push
rol
pop
or
ja
ja
adc
or
push
(bad)
(bad)
xlat
mov
pushf
ss
mov
(bad)
sub
out
and
pusha
jecxz
dec
fsubr
push
push
sub
and
push
sbb
sbb
fidivr
out
or
stos
lods
jg
push
ja
jmp
mov
repz
movs
sahf
mov
aad
and
mov
push
cs
dec
add
add
ret
addr16
sub
or
lahf
xchg
scas
rol
cmp
sub
in
mov
adc
aam
jae
jae
iret
jno
push
imul
hlt
mov
loopne
pushaw
and
inc
sub
add
jl
and
xchg
call
sbb
adc
jmp
add
out
add
es
xchg
in
fdiv
mov
and
jnp
lock
and
imul
cmp
lock
jge
mov
loope
adc
jnp
imul
mov
jne
push
aaa
enter
loopne
mov
ss
mov
cmp
and
dec
pop
pop
int3
push
movs
xor
fmul
or
je
xchg
or
jae
dec
ins
and
hlt
ja
push
fdivr
inc
sbb
jecxz
pop
push
ds
and
and
cmp
push
aaa
cmp
pop
sbb
push
and
pusha
popa
push
aas
fwait
mov
xchg
jo
or
adc
adc
pop
mov
pop
add
ret
mov
icebp
je
cmp
xchg
test
mov
(bad)
enter
movs
out
js
or
sub
mov
dec
repnz
in
inc
add
jb
mov
mov
and
gs
cmp
adc
xchg
lods
js
push
xor
xor
aam
or
inc
push
js
jle
ret
jmp
mov
mov
cmp
je
or
je
push
pop
inc
ret
ds
scas
xchg
mov
sbb
loope
clc
mov
sub
push
push
retw
std
outs
lahf
nop
jmp
sub
cmp
jl
jmp
cld
sub
pop
xchg
jmp
les
in
and
push
out
call
loope
mov
js
je
and
sbb
mov
and
or
clc
mov
xchg
jne
stc
cmps
stc
ins
movs
adc
fdiv
mov
adc
aas
add
xchg
adc
cmp
add
or
icebp
push
daa
xor
xor
push
lea
adc
jno
jb
cmp
jo
sub
or
repz
(bad)
mov
dec
and
ret
in
pop
ror
xchg
or
mov
inc
(bad)
and
and
inc
int3
jmp
push
mov
and
pop
push
add
inc
data16
push
mov
mul
int3
mov
mov
lea
(bad)
loope
jne
inc
mov
mov
pop
arpl
mov
add
mov
test
cmps
daa
ja
mov
and
lea
(bad)
mov
into
test
push
call
ror
push
test
dec
mov
je
loop
cmp
mov
and
aas
sbb
dec
jp
cld
sub
inc
inc
xor
lea
jp
cmp
out
bound
jo
movzx
inc
test
inc
lods
add
int3
mov
(bad)
cmp
(bad)
cld
dec
inc
inc
dec
jne
push
in
or
add
or
cmps
pop
adc
mov
unpcklps
sbb
cmp
pop
jle
sbb
xor
lds
nop
adc
and
push
and
mov
(bad)
and
mov
jae
test
lea
sbb
xor
jb
xor
and
(bad)
es
out
pop
ret
imul
and
cmps
loopne
mov
adc
out
add
stc
mov
pop
pushf
fstp
and
and
sbb
mov
push
mov
inc
pop
cld
jmp
pop
mov
and
pop
jl
add
mov
inc
pop
pusha
loope
loope
popa
inc
dec
fwait
mov
and
xchg
mov
in
mov
cmp
out
in
hlt
lock
adc
lods
jp
cmps
mov
and
cmp
push
cmp
inc
rcl
inc
in
lock
enter
inc
inc
popf
add
mov
cmp
or
jo
inc
cmp
inc
repnz
push
lods
lods
cmp
fcom
ret
mov
mov
mov
inc
sbb
ja
or
mov
fimul
mov
adc
gs
test
add
adc
inc
je
and
gs
sbb
inc
ret
cli
adc
mov
push
pop
jb
adc
sbb
sbb
in
jle
mov
dec
xchg
ds
push
mov
loope
shl
in
mov
sahf
cmp
xor
(bad)
xchg
cwde
push
push
push
or
and
jo
hlt
std
jmp
mov
test
and
not
mov
(bad)
retf
cmps
outs
es
dec
mov
xor
mov
dec
push
mov
jbe
mov
inc
nop
loopne
adc
and
jo
or
jecxz
sub
sar
pop
push
mov
in
fdivr
not
pop
hlt
mov
sub
mov
mov
mov
xchg
push
adc
cwde
in
push
jae
sbb
addr16
shl
lea
sar
push
jo
scas
call
and
jnp
add
push
sbb
adc
inc
and
call
cwde
push
daa
cmc
dec
mov
add
and
and
ja
mov
in
sbb
ja
adc
cwde
push
adc
mov
ret
imul
je
add
dec
ret
or
adc
dec
rol
add
cli
lods
mov
inc
lahf
mov
retf
or
push
or
adc
or
fst
and
sub
dec
and
mov
sub
cmp
sub
jl
mov
popa
(bad)
lods
es
sub
or
or
dec
movs
sti
and
fwait
push
xor
aam
cli
std
int3
fadd
fstp
jns
fs
sub
mov
fwait
data16
fsubr
fwait
mov
dec
jo
iret
push
push
cmp
push
push
rcl
fst
dec
adc
dec
rol
dec
inc
dec
mov
push
sub
leave
jo
je
cmp
or
sti
jmp
sti
pop
lds
jne
xchg
aam
sti
scas
adc
push
add
xor
cs
sti
dec
dec
in
pop
(bad)
stos
scas
shr
push
pop
cmp
mov
in
fist
sti
jmp
ja
dec
and
push
scas
ins
or
add
pop
(bad)
or
xchg
mov
push
cmp
mov
mov
sti
and
nop
cli
ret
in
dec
sbb
pop
(bad)
add
dec
(bad)
jecxz
fist
test
sbb
jle
int
or
push
dec
rcl
dec
jb
push
fs
xchg
xchg
mov
adc
and
in
in
dec
xchg
movs
push
pusha
add
add
mov
es
xchg
add
or
inc
jbe
popa
bound
inc
sub
sti
push
add
out
jge
add
or
sti
pop
add
and
inc
jae
gs
or
mov
test
inc
push
add
mov
outs
arpl
xchg
xchg
sbb
int
adc
stc
jle
jo
mov
dec
mov
or
push
nop
imul
mov
push
mov
shl
inc
sub
(bad)
adc
add
inc
ins
sbb
add
add
test
and
push
outs
jae
cmp
sti
mov
gs
out
mov
adc
pop
popf
sub
sub
in
push
and
lahf
xchg
fisub
mov
pop
lods
das
ret
adc
mov
(bad)
dec
mov
into
in
pop
(bad)
clc
ficomp
push
out
into
leave
pop
stc
syscall
adc
push
adc
pop
jo
dec
mov
sub
das
and
sahf
jge
andps
pop
xor
add
mov
aad
out
stos
test
das
lods
retf
or
out
pop
sbb
push
enter
das
cmp
in
add
and
iret
je
scas
dec
jmp
rol
inc
dec
sub
add
clc
jbe
inc
outs
fs
(bad)
ja
mov
sub
mov
pop
sti
inc
outs
add
clc
push
sbb
sbb
clc
enter
push
mov
cld
adc
xchg
das
retf
loope
sub
sbb
inc
mov
add
ror
sub
add
or
(bad)
sti
out
mov
jecxz
mov
sub
ins
inc
or
test
push
shl
pop
test
nop
xchg
jbe
outs
in
test
mov
dec
dec
ret
push
add
jbe
adc
inc
aad
jbe
inc
and
push
fmul
push
push
fwait
cmp
sar
add
jecxz
cld
mov
push
inc
or
in
not
mov
in
sub
jecxz
jge
jmp
jb
jmp
jl
push
add
cmc
push
clc
fldenv
push
sbb
sbb
mov
pop
jb
shl
or
mov
adc
or
stc
and
inc
shl
add
or
mov
xchg
ficomp
add
rol
sub
mov
cmp
fcom
push
pop
adc
outs
popf
cmp
(bad)
add
add
push
sbb
and
mov
xor
repnz
push
js
dec
into
jmp
in
icebp
mov
(bad)
xlat
call
mov
add
fld
ret
mov
loopne
aad
add
mov
xchg
nop
mov
push
iret
rcr
cmp
aas
shl
movs
add
and
mov
add
aas
mov
call
popa
jle
or
cs
sub
jbe
cmps
mov
push
in
sub
mov
sti
cmp
mov
push
iret
dec
loopne
mov
mov
ret
retf
or
loopne
mov
fadd
xchg
data16
loope
and
jne
call
hlt
mov
rcl
call
fstp
ds
push
hlt
in
ret
daa
push
js
ret
inc
das
push
jae
shr
add
in
pop
scas
mov
push
lods
push
xchg
dec
hlt
adc
mov
ret
je
call
adc
in
(bad)
cmp
xlat
and
push
xor
xor
or
cmp
adc
cmp
out
jecxz
shl
ss
jns
push
das
pop
push
or
retf
test
or
and
fild
shl
add
add
lods
mov
inc
inc
jne
mov
adc
mov
or
push
fisttp
popa
addr16
imul
jae
xor
cmp
in
adc
push
es
or
push
sub
(bad)
mov
das
pop
push
sbb
ror
data16
dec
mov
sbb
(bad)
add
push
sbb
cs
adc
push
inc
arpl
push
jb
mov
cwde
shl
push
adc
int
es
aas
or
push
in
shr
sti
cmp
sysret
loope
test
jbe
jo
mov
sar
fcmovnb
mov
pop
mov
xchg
sbb
es
mov
mov
push
loopne
add
fisub
sbb
xor
or
jg
xor
or
daa
cmps
sbb
push
inc
mov
mov
pop
add
call
mov
pop
mov
pop
or
adc
push
and
sbb
sub
or
or
adc
call
inc
ficom
xlat
add
rol
adc
ja
mov
push
add
add
lahf
mov
mov
dec
push
adc
shl
add
das
movs
sbb
add
add
in
pop
and
or
jl
data16
adc
jne
(bad)
push
fcos
xor
xor
and
xor
add
pop
or
add
enter
jg
(bad)
xor
and
cmp
lds
inc
add
pop
xor
xchg
addr16
aam
ret
and
(bad)
xor
mov
iret
outs
sub
outs
ret
add
xor
adc
add
adc
dec
div
dec
fidivr
(bad)
or
and
or
test
cdq
jns
pop
add
(bad)
and
inc
jo
in
lds
fs
int3
out
mov
and
dec
(bad)
or
add
cwde
or
into
xchg
fisub
ror
or
ret
popa
push
xchg
test
fwait
out
cmp
cmp
mov
rcr
cmp
add
xor
mov
xor
add
lea
adc
xor
cmp
xor
in
iret
sbb
adc
cmp
test
inc
dec
adc
enter
and
jb
sbb
sbb
and
adc
xchg
dec
or
retf
add
add
add
push
pop
pop
adc
das
fdivr
call
add
fwait
push
or
fstp
fisttp
inc
add
sti
pop
icebp
jmp
add
jne
adc
push
push
rol
in
sbb
aam
xchg
cdq
sub
push
fild
lock
jae
dec
int
sbb
sar
push
mov
test
jno
lock
jl
clc
cmp
outs
push
dec
cli
sti
aas
jg
jl
sbb
inc
nop
into
mov
sbb
repz
cmp
pop
sahf
sbb
scas
or
mov
xchg
jne
cmp
xor
(bad)
adc
loopne
push
fnstcw
mov
add
daa
shrd
shr
push
add
jl
shr
es
ins
aaa
lods
push
imul
lds
sub
in
pop
mov
lahf
and
push
mov
test
lock
cmp
sbb
js
mov
rol
add
sub
nop
adc
pushf
inc
outs
push
jmp
dec
pop
and
mov
mov
jbe
mov
add
add
stos
and
pusha
movs
sar
test
ja
rcl
int
or
cmp
or
mov
and
not
scas
pop
mov
sub
imul
mov
div
cmp
scas
pop
mov
lock
mov
idiv
clc
imul
in
inc
cmp
test
imul
push
imul
or
cdq
ret
(bad)
imul
into
mov
test
js
cmps
jne
push
test
lods
sti
cwde
adc
adc
mov
(bad)
sbb
in
arpl
push
mov
neg
cs
mov
push
in
test
not
in
arpl
push
in
imul
in
arpl
mov
not
cmp
dec
cmp
jmp
jbe
iret
push
cmp
out
jne
cmp
retf
rcl
adc
leave
cmp
not
pusha
out
pop
out
xor
dec
pop
out
pusha
out
bound
and
fs
inc
and
ret
sub
and
mov
out
je
div
(bad)
out
js
jbe
bound
sub
and
bound
and
test
vaddsubps
(bad)
cmps
jne
cmp
jmp
lods
jnp
icebp
cmp
xchg
test
mov
(bad)
cmp
xchg
jo
cmp
imul
pop
xchg
mov
add
cmp
test
sti
pop
mov
imul
jnp
mov
pop
test
movs
lods
neg
mov
mov
imul
test
sti
pop
mov
test
jg
and
dec
push
dec
mov
mov
dec
push
push
push
pop
out
ss
push
call
lock
jbe
jne
jg
call
push
mov
dec
mov
or
sub
sti
or
dec
sar
sub
mov
push
lea
pop
das
jmp
scas
sar
jns
nop
pop
rcl
fadd
jl
add
pop
pop
or
mov
xor
pop
sub
icebp
cmp
movs
movs
cld
jp
mov
fcomi
pop
hlt
shl
and
push
push
add
retf
or
or
in
sti
shl
and
inc
add
enter
or
mov
loopne
dec
repz
push
add
add
add
or
inc
call
or
push
call
shr
or
push
or
loopne
iret
movs
push
push
push
sub
jge
and
add
or
ret
inc
jp
sbb
cli
icebp
(bad)
adc
call
dec
imul
lea
cmp
nop
mov
test
adc
pop
add
add
js
ins
push
mov
scas
and
out
jge
pop
add
mov
pop
shr
lds
push
push
cs
add
sub
sbb
add
add
inc
popf
adc
(bad)
test
cmp
mov
fisttp
adc
push
mov
inc
push
stc
and
pop
ins
bts
inc
inc
pop
aad
sub
ror
pop
pop
cmp
jge
lea
cmp
jg
pop
adc
cmp
inc
sbb
jne
call
ror
and
hlt
fist
aam
add
popa
ins
or
(bad)
lods
and
inc
out
pop
add
loop
lea
test
push
dec
mov
or
fld
sbb
add
fs
dec
sbb
mov
out
cmp
das
fstp
out
sbb
xor
arpl
retf
push
arpl
jno
inc
loope
lods
ja
bound
mov
xor
lea
dec
jecxz
fimul
std
mov
inc
or
mov
push
mov
call
adc
stc
inc
adc
scas
add
loopne
pop
mov
test
add
ins
push
enter
stos
dec
inc
adc
pop
out
idiv
(bad)
inc
outs
lock
pop
ror
jb
pop
push
int3
popa
and
xor
lods
adc
cld
pop
addr16
adc
nop
call
enter
inc
rcr
and
sbb
fisttp
adc
mov
inc
jg
mov
add
inc
or
xor
out
mov
push
mov
jb
mov
sbb
std
and
mov
sub
loopne
not
add
sbb
adc
mov
jge
adc
push
cmp
add
push
sbb
sbb
xor
pop
jo
ret
pop
sbb
push
test
neg
mov
xchg
clc
mov
in
push
(bad)
inc
jl
sbb
jns
lea
jecxz
or
or
pop
add
fcomp
mov
and
add
xor
sbb
pop
dec
inc
int3
or
add
lods
pop
(bad)
cmp
sub
xlat
aam
ja
pop
sub
rcl
in
sbb
scas
mov
push
fcom
inc
loopne
jle
scas
sub
and
loopne
and
push
jns
jl
jo
cmp
fcom
sbb
xchg
test
add
xchg
popa
scas
sbb
les
test
movs
shr
js
arpl
or
les
push
sbb
shl
or
or
out
sub
ror
cmp
ror
adc
popa
inc
(bad)
sbb
dec
call
xor
adc
sub
push
sub
xor
or
pop
push
push
sub
ret
mov
enter
mov
push
aas
movs
or
push
mov
inc
fbstp
adc
push
mov
fwait
ss
sbb
push
out
mov
int
cmp
repz
cmp
in
dec
repnz
sub
push
cmp
jnp
cmp
xor
push
cmp
dec
fimul
cmp
cmp
add
lods
out
cld
leave
and
jb
sbb
adc
call
aad
into
cld
inc
mov
inc
add
cli
and
sbb
rcl
ret
cwde
or
int3
(bad)
xchg
sub
icebp
cmp
or
adc
cmovs
clc
ds
in
xlat
neg
ja
push
mov
das
and
out
sbb
and
or
pop
xlat
xor
push
scas
or
ja
out
xchg
out
mov
je
cld
cmps
push
push
pop
push
xor
imul
or
icebp
mov
push
sbb
pop
unpcklps
sbb
add
dec
dec
add
pop
push
imul
ret
or
jge
inc
inc
outs
ins
popa
imul
clc
inc
push
jae
loop
inc
mov
jb
push
dec
add
rcl
(bad)
ud2
xchg
xor
ja
rol
push
cmp
es
or
mov
in
inc
bound
push
cmp
fmul
jmp
lds
sub
dec
gs
ins
push
mov
inc
pop
pop
inc
mov
mov
mov
adc
xor
xor
test
jge
movs
sbb
mov
mov
out
jno
push
xor
sbb
jg
add
and
adc
jg
call
aaa
fdivr
add
jmp
lea
js
pop
pop
sbb
xor
dec
sbb
out
or
data16
(bad)
outs
xchg
test
adc
sub
add
or
mov
mov
xchg
out
cdq
shr
mov
das
sub
test
xchg
sbb
hlt
and
jl
push
es
shl
inc
add
or
pop
or
lods
cli
loopne
xchg
xchg
mov
push
std
loope
dec
sbb
push
push
adc
(bad)
push
(bad)
in
loope
(bad)
daa
hlt
mov
enter
jnp
outs
scas
or
mov
adc
mov
mov
adc
neg
add
and
and
adc
sub
push
scas
dec
cmp
sub
pop
loop
or
je
push
daa
push
and
mov
dec
shl
push
jecxz
xor
sbb
test
or
(bad)
stos
inc
push
mov
gs
push
test
sbb
and
push
(bad)
dec
sbb
clc
push
sar
inc
mov
or
lea
dec
mov
test
mov
addr16
scas
add
dec
add
add
add
out
dec
mov
jno
ret
jmp
push
(bad)
leave
ret
rcr
adc
adc
dec
pusha
push
ret
push
pop
cmp
push
sbb
movs
sub
retf
call
nop
jae
add
and
cwde
ret
xchg
and
mov
push
push
push
dec
dec
inc
in
iret
jge
(bad)
mov
push
inc
inc
push
push
dec
push
pop
pop
push
push
inc
push
push
push
pushf
cmp
dec
popa
shl
or
test
sti
mov
or
mov
loop
dec
mov
ja
outs
ja
and
add
nop
add
mov
out
ins
jo
ror
fsubr
es
enter
icebp
push
imul
pusha
fstp
push
loopne
add
aaa
or
clc
inc
jo
sar
or
and
jg
inc
popa
jo
mov
jmp
imul
aaa
cdq
movs
nop
lock
daa
push
aaa
js
pop
push
ja
push
inc
push
add
add
arpl
call
push
outs
imul
cmp
adc
in
icebp
or
outs
ins
ins
or
popa
fadd
cwde
repz
cmps
lods
repz
mov
add
mov
(bad)
sub
xchg
or
mov
adc
pop
or
mov
loopne
mov
jbe
or
mov
adc
push
pusha
iret
fldenv
(bad)
sub
imul
or
fdivr
or
xor
ins
inc
add
ins
adc
arpl
add
mov
inc
inc
xor
(bad)
push
pop
dec
inc
mov
add
rcr
pop
ja
inc
jb
and
pop
mov
arpl
ins
add
push
ja
out
mov
sbb
add
adc
xlat
adc
xor
cmps
sbb
(bad)
(bad)
push
mov
push
dec
push
inc
pop
inc
push
inc
inc
dec
push
dec
inc
dec
push
pop
dec
inc
dec
inc
dec
inc
sahf
ret
in
push
sbb
jmp
jae
nop
push
mov
mov
std
push
pop
fmul
mov
les
add
into
mov
bound
sub
jl
str
test
jecxz
mov
fs
jne
pop
pop
rol
mov
ret
lods
or
inc
js
imul
add
inc
scas
mov
sbb
(bad)
div
adc
inc
inc
test
xor
jnp
mov
jae
add
adc
dec
or
dec
dec
dec
jns
adc
dec
pop
hlt
arpl
xchg
mov
lahf
add
or
pushf
and
ins
or
shl
or
fild
or
lahf
or
mov
fsubr
push
gs
or
jbe
xor
and
xor
sub
in
add
push
jo
jo
je
xor
push
lock
out
gs
gs
jo
ds
loopne
pusha
addr16
pop
test
push
sbb
in
shr
mov
inc
inc
push
push
pop
push
clc
in
push
xor
ja
adc
add
adc
push
jmp
and
dec
push
mov
pop
inc
push
push
dec
pop
push
dec
and
sahf
fiadd
ja
xlat
sub
xor
stc
daa
dec
mov
and
push
and
pop
das
stc
push
ja
shl
dec
xchg
pop
mov
xchg
add
pop
sub
xchg
and
add
out
cmps
fcom
sub
js
pop
inc
cli
mov
push
mov
cmp
imul
or
call
(bad)
sbb
test
ret
inc
pop
inc
(bad)
xchg
pop
fwait
test
sbb
fninit
jne
or
pop
pusha
sar
(bad)
and
mov
arpl
icebp
loope
push
mov
aad
xor
fist
cmp
das
mov
hlt
inc
pop
sbb
les
cmps
jae
fimul
xor
inc
dec
or
push
das
sub
fdiv
sub
add
mov
jne
pop
add
push
dec
push
outs
test
jo
aaa
or
lahf
fstp
aaa
fmul
adc
dec
inc
pop
shl
pusha
pop
add
push
and
sbb
loop
pop
mov
pusha
ja
dec
aam
inc
inc
int
cld
mov
lods
iret
mov
mov
lods
loopne
pop
add
push
out
pop
pop
adc
inc
dec
in
cmp
inc
mov
or
mov
or
push
xor
cmps
mov
imul
(bad)
scas
pop
dec
dec
inc
dec
mov
mov
pop
sbb
push
ja
es
push
fistp
add
and
dec
pop
repnz
test
inc
ins
mov
mov
lds
loopne
push
outs
inc
(bad)
ficomp
fist
fadd
jecxz
or
mov
or
(bad)
xor
das
xor
pop
dec
jne
jns
jne
in
xor
arpl
in
popf
pusha
(bad)
or
push
inc
ins
add
sbb
push
cmp
jmp
(bad)
jb
sub
xchg
(bad)
xchg
retf
push
add
in
mov
cli
xchg
sbb
inc
jns
mov
dec
lock
adc
sbb
jno
imul
and
cmc
pop
sbb
ins
popa
loope
inc
test
inc
fmul
rcl
or
push
xor
call
and
mov
fld
adc
jo
movs
jge
adc
stc
adc
jo
mov
inc
gs
jnp
(bad)
in
inc
jo
das
jb
ins
jnp
cmp
push
and
inc
cmps
aas
sub
shl
clc
add
loopne
lods
inc
popa
retf
dec
dec
xor
push
or
jo
mov
add
aaa
or
mov
adc
add
pop
iret
xor
jmp
mov
inc
outs
jne
cvtps2pi
int3
push
fs
xor
dec
sbb
cmps
mov
push
or
push
loop
jbe
inc
push
push
inc
fcom
jne
loopne
pop
xchg
inc
fs
pavgb
cmp
mov
adc
and
and
dec
mov
popa
cmp
xor
mov
dec
repnz
pop
add
iret
mov
pop
pushf
das
mov
sbb
pop
mov
scas
repnz
sub
add
xchg
xchg
inc
pusha
and
xchg
push
inc
xchg
pop
push
in
pop
xor
sbb
stos
add
mov
fimul
fsub
or
repnz
rol
cwde
inc
js
push
mov
adc
adc
sbb
inc
inc
test
ins
rol
adc
jmp
mov
xor
test
add
add
pop
sar
iret
out
int
sub
add
or
and
iret
rcr
adc
jb
(bad)
fcom
das
fild
cmp
cmp
mov
and
push
(bad)
xor
movs
repz
sub
adc
fsubr
sub
cs
pop
int
data16
rcr
ins
push
outs
mov
xor
rol
inc
add
ds
cmp
movs
inc
xchg
outs
mov
bound
or
repz
inc
pop
push
push
and
fisttp
push
push
movs
rcl
retf
xor
push
in
cs
inc
test
cmp
or
movs
mov
xchg
push
cmp
adc
xor
jmp
pop
and
ret
lds
daa
xchg
lds
sar
inc
xor
ret
xchg
sub
push
inc
add
test
outs
add
imul
dec
ins
addr16
mov
out
push
mov
jo
pop
daa
adc
das
and
and
adc
jb
jne
push
add
ins
sbb
mov
imul
jp
ds
add
pop
pop
fcmovnu
sbb
or
popa
test
add
pop
popf
fwait
loope
outs
shl
mov
jae
pop
add
test
or
jmp
pop
fldcw
inc
adc
out
not
or
ja
daa
imul
push
pop
xchg
and
mov
mov
addr16
ret
xchg
or
push
inc
xchg
outs
ins
daa
cmp
lds
inc
scas
hlt
or
xor
popa
inc
outs
cwde
push
mov
ins
or
dec
jno
pop
repz
ins
adc
mov
in
xchg
call
arpl
stos
or
adc
pop
mov
bound
mov
mov
mov
jge
pop
loope
das
sub
or
adc
push
lods
je
inc
add
inc
jmp
jne
inc
outs
or
sbb
push
jp
pop
ret
ss
leave
jbe
or
and
mov
push
int3
xor
das
push
push
mov
inc
pushf
addr16
sub
sub
ror
inc
data16
pop
pop
data16
inc
sub
sbb
add
or
add
pusha
ret
cmp
outs
repz
bound
cwde
call
or
or
lods
ins
outs
lods
movs
push
ins
mov
js
jae
mov
pop
xchg
cld
mov
add
add
adc
std
dec
jmp
xchg
in
jno
mov
iret
pop
aaa
sbb
scas
in
mov
or
arpl
test
stos
add
dec
lds
add
les
sbb
adc
ud0
dec
inc
add
pop
mov
sub
or
inc
sub
and
cmc
jns
(bad)
jo
daa
mov
and
loope
movlps
pop
or
xor
sub
shl
jge
(bad)
(bad)
pusha
sbb
popa
out
xor
imul
add
pop
les
and
xchg
sbb
sbb
add
aaa
pop
jge
xchg
aas
jb
pop
dec
nop
push
(bad)
fld
mov
cld
das
sbb
(bad)
adc
sub
sub
ret
or
add
call
adc
lea
or
sub
sub
xchg
daa
setg
xchg
mov
(bad)
out
sbb
jp
push
retf
mov
stos
or
push
stc
cmp
sub
dec
or
or
push
xchg
(bad)
push
xor
cmp
mov
das
or
arpl
add
stos
adc
dec
ins
sub
add
inc
or
das
sahf
sbb
xchg
cs
das
inc
cmp
adc
or
add
dec
cmp
arpl
lock
and
cmps
mov
pop
or
xchg
inc
cwde
adc
mov
xor
out
inc
pop
adc
sub
jecxz
fs
aam
adc
jae
add
mov
mov
xor
mov
pop
enter
xchg
inc
sbb
retf
push
jo
jbe
or
xchg
inc
inc
xchg
adc
shr
add
pop
sti
das
mov
push
cwde
adc
fidiv
adc
adc
mov
repz
pushf
adc
mov
mov
ror
xor
movsx
aad
and
add
adc
es
test
or
ja
shl
mov
lock
xchg
sub
imul
js
inc
adc
adc
xor
pop
dec
test
push
add
pop
mov
sbb
or
inc
push
cmp
data16
mov
sti
mov
pop
sti
add
push
inc
push
sub
mov
mov
nop
das
(bad)
adc
ret
(bad)
jl
cmps
mov
cmp
xor
out
add
or
xchg
mov
sbb
pop
(bad)
ficom
dec
data16
aas
adc
loop
out
inc
loopne
push
mov
jns
jecxz
add
push
adc
ss
ja
in
add
aaa
add
mov
lods
pop
pop
and
cmp
call
enter
mov
jb
xchg
fsubr
loopne
xchg
jecxz
(bad)
imul
hlt
je
pop
inc
test
imul
int
and
cmp
mov
inc
jae
xor
xor
retf
daa
inc
stos
or
push
sbb
pop
lea
mov
shl
mov
push
or
popf
jge
jl
push
push
pop
das
cmp
inc
in
cmp
daa
popa
pop
push
cwde
and
dec
loop
clc
push
adc
lahf
push
xor
jno
inc
xlat
mov
adc
add
add
outs
unpcklps
or
enter
lahf
mov
mov
pop
retf
mov
and
fmul
inc
sbb
adc
pop
stos
xor
dec
aaa
aaa
push
sbb
sbb
aaa
dec
sbb
ins
dec
cmp
cdq
pop
jne
push
mov
pop
ins
ret
das
and
mov
mov
and
les
push
or
hlt
cwde
xor
imul
cs
shl
adc
add
or
inc
cmc
pop
fs
push
ret
idiv
cli
cmp
xchg
cli
and
lahf
out
(bad)
mov
dec
cmp
repz
es
sub
inc
push
repz
repz
outs
jl
cwde
in
cmp
cmps
mov
rcr
jbe
sbb
push
sbb
push
xor
in
mov
ds
push
js
cmp
push
mov
fcmovbe
jl
mov
add
adc
repz
and
cmp
pop
in
loope
je
push
mov
xchg
dec
gs
add
add
stos
sbb
push
sahf
lods
mov
cmp
in
out
add
loopne
iret
jnp
push
sbb
cmp
jns
mov
ss
push
bound
fstp
jle
call
xor
retf
test
and
out
pop
sub
loopne
cld
push
into
rep
iret
or
shl
push
ds
data16
and
adc
in
sbb
push
dec
or
pop
mov
jmp
dec
and
pop
gs
adc
cmp
add
jb
push
sbb
adc
jbe
(bad)
ficomp
jb
push
pusha
(bad)
push
fadd
loopne
push
ss
cmp
mov
jecxz
lods
fild
jb
bswap
loop
push
(bad)
enter
in
dec
fdivr
push
ret
xchg
in
pop
rol
sbb
call
jnp
sbb
push
js
sbb
add
sbb
cmp
push
test
sbb
(bad)
out
cmp
sbb
mov
mov
nop
arpl
neg
nop
pop
cmp
sbb
je
pop
inc
bound
mov
loopne
dec
hlt
mov
pusha
pop
rol
pop
dec
push
jno
sbb
fdiv
or
inc
inc
mov
pop
cmp
xor
adc
pop
and
fcom
aaa
je
sti
cmp
cmp
sub
pop
int3
cmps
mov
fistp
js
and
cmp
js
cmp
xlat
mov
sbb
fs
cmp
push
xchg
adc
pop
lock
mov
inc
xor
div
and
retf
outs
aam
fadd
push
xor
add
sub
ds
inc
and
xchg
(bad)
fnsave
std
sbb
aas
loop
jmp
mov
adc
add
dec
cld
or
imul
lahf
hlt
sub
adc
adc
xor
xchg
loopne
inc
mov
push
aam
inc
or
jo
pop
ret
ret
or
js
ds
push
xor
push
pusha
and
push
jmp
add
pop
add
stos
and
xor
std
in
xor
daa
push
pop
test
pop
add
mov
mov
mov
lods
int3
add
jle
(bad)
or
fdivr
adc
mov
out
es
punpckhbw
jo
les
pop
shl
or
mov
sub
add
fbstp
jbe
and
or
les
mov
or
jge
pop
or
ins
fistp
jbe
push
push
push
into
mov
mov
dec
jp
jo
fiadd
ins
je
or
and
je
rcl
outs
xor
sub
mov
aas
ror
pop
push
or
lock
or
sub
or
push
xchg
push
xor
push
mov
sub
add
lock
add
les
xchg
inc
das
and
out
ja
(bad)
inc
xor
add
mov
data16
popf
xor
xor
xor
lea
xchg
jmp
in
or
idiv
mov
shr
shr
push
inc
das
push
gs
data16
jge
retf
sbb
push
pop
inc
arpl
scas
xchg
adc
repz
addr16
pop
ja
add
loop
or
mov
mov
adc
mov
cmp
or
pop
sbb
cmp
push
mov
sub
(bad)
invd
cmps
add
push
mov
lods
or
and
and
(bad)
es
jg
mov
add
mov
mov
and
sub
sbb
add
inc
add
cmp
das
and
fld
mov
adc
or
and
cmp
add
(bad)
out
xor
push
jns
pop
push
push
pop
push
cmp
sbb
and
jg
mov
mov
int3
mov
or
xchg
mov
daa
mov
push
into
gs
jmp
mov
inc
push
xlat
imul
rol
outs
repz
(bad)
loop
xchg
jne
jle
sub
cmps
mov
and
mov
(bad)
and
dec
and
xchg
mov
add
cmp
popf
add
inc
inc
data16
mov
mov
adc
adc
test
pop
jne
test
mov
and
ja
add
mov
aad
in
lods
nop
jmp
xchg
es
xchg
inc
je
loopne
add
mov
add
rol
ja
test
and
dec
in
sub
jb
je
fs
adc
add
ins
or
sub
mov
leave
clc
lea
push
push
jl
xor
cmc
and
and
test
push
add
rcl
mov
xchg
mov
xchg
daa
mov
iret
loopne
hlt
xchg
mov
clc
cmp
jno
imul
or
es
shl
popa
push
xchg
dec
das
mov
adc
and
add
sub
(bad)
jecxz
rol
jb
neg
adc
push
add
or
jnp
or
add
jo
add
pop
pop
push
cmp
lahf
adc
loopne
cmp
push
mov
add
das
cwde
mov
outs
inc
sub
das
mov
jl
shl
pop
sbb
ret
dec
outs
loopne
pop
cmps
mov
cmp
push
or
sbb
sar
push
stos
mov
push
mov
mov
add
xchg
mov
jmp
xor
ins
inc
rcr
int
xchg
mov
dec
push
inc
adc
out
or
scas
sub
rcl
push
sbb
cmps
adc
adc
or
setge
xor
sar
dec
std
dec
jp
jl
inc
add
pop
cld
cmp
ins
push
clc
adc
pop
sbb
out
sbb
xchg
push
in
mov
or
ror
lea
mov
jmp
jo
or
mov
add
addr16
(bad)
push
push
xor
rcr
push
push
add
mov
add
int3
fstp
ins
(bad)
mov
pop
mov
xor
add
jmp
and
mov
jno
ret
sbb
lahf
pop
inc
sub
pop
retf
and
add
enter
sub
sub
bound
shr
jg
nop/reserved
pop
adc
pop
into
push
add
nop
sub
xchg
(bad)
cs
sub
mov
push
add
sbb
cmp
loope
push
adc
add
nop
sbb
add
mov
pop
push
aaa
pop
sbb
inc
and
xchg
xor
sub
xchg
sar
out
pusha
push
inc
popf
adc
push
pop
push
retf
mov
xchg
and
jg
dec
cmp
div
mov
(bad)
lock
add
movs
xlat
xor
jle
icebp
shl
test
sub
and
movs
pop
or
sub
sub
dec
je
gs
enter
push
xor
cmp
ret
and
or
cld
idiv
sub
scas
push
add
mov
mov
arpl
and
push
ja
mov
mov
mov
push
cmp
aad
adc
pop
in
adc
add
scas
jo
adc
mov
xor
jge
xchg
sbb
je
dec
test
and
jo
sbb
test
lahf
or
rol
cmp
mov
int
ja
mov
jl
add
sti
punpcklwd
ror
pop
ins
inc
pop
and
push
add
jae
add
aam
sub
mov
xor
adc
add
add
daa
jns
mov
pop
pop
add
fimul
dec
ret
loop
push
jo
mov
sub
xor
movs
sub
xor
xchg
mov
sub
cmp
movs
das
js
iret
fwait
sbb
pusha
add
pop
sbb
jo
add
out
adc
push
pop
add
enter
pop
add
lods
movs
and
repnz
adc
je
push
test
lds
(bad)
xor
mov
push
xor
mov
call
and
mov
xchg
add
inc
mov
scas
int3
rol
pop
inc
or
push
aam
or
xchg
cs
adc
push
jne
(bad)
shl
outs
sub
hlt
mov
and
jnp
xor
xchg
sbb
movs
inc
test
pop
inc
pop
dec
inc
mov
in
leave
or
ror
cmp
add
dec
add
inc
mov
scas
mov
es
xor
mov
clc
dec
xor
nop
mov
push
add
iret
hlt
xor
js
xor
(bad)
adc
add
mov
pop
adc
js
cmp
jmp
in
lds
daa
jo
xor
int
in
xor
push
inc
lock
in
outs
in
sbb
out
sub
mov
fs
addr16
xor
add
xor
cmp
enter
push
mov
add
ins
push
fild
pop
jp
sar
mov
push
sbb
fcomp
jge
push
cli
sub
dec
test
mov
pop
mov
push
cmp
clc
mov
push
enter
aam
aam
inc
mov
mov
add
adc
test
inc
xor
adc
in
xor
in
xor
push
lods
out
lods
rcl
push
mov
add
movs
dec
fs
inc
inc
adc
loopne
mov
ins
call
push
call
retf
push
push
dec
test
into
mov
pop
pop
sbb
in
ins
mov
cmp
adc
pop
pop
pop
pop
or
xor
mov
clc
notrack
(bad)
pop
shl
lods
adc
pop
mov
dec
add
popf
adc
rcr
mov
lock
dec
ds
jno
or
cld
jne
xor
mov
or
add
scas
mov
outs
inc
movs
mov
add
ret
scas
ret
das
cmp
mov
das
test
arpl
add
inc
jbe
mov
das
pop
adc
(bad)
inc
mov
pop
call
pop
(bad)
clc
jns
psrad
ins
pop
and
mov
jbe
fs
ins
outs
add
ins
add
fild
xor
outs
and
push
rcl
loop
popa
xchg
aaa
xchg
popf
push
and
out
push
cli
test
pop
fadd
and
dec
out
pmulhuw
cmp
jge
je
inc
out
jbe
enter
imul
jnp
dec
dec
add
mov
add
mov
adc
xchg
jle
ret
push
inc
push
gs
inc
fwait
or
add
out
cmp
push
add
nop
loop
cmps
cdq
mov
jo
jno
and
es
dec
sbb
imul
pushf
xchg
and
or
sub
or
idiv
mov
fs
xor
push
dec
pop
xor
inc
inc
hlt
out
xor
jns
dec
jns
cmp
loop
lods
add
jae
cmp
dec
in
dec
loope
jb
cmp
pop
cmp
pandn
test
mov
inc
sub
sub
push
or
or
sub
cmp
ret
pop
fadd
pop
cld
enter
mov
lds
adc
pop
imul
xchg
mov
adc
pop
pop
(bad)
fild
xchg
sti
daa
lock
jecxz
cdq
mov
add
add
mov
push
inc
jnp
mov
xor
cmp
cmp
sub
push
or
pop
and
add
sbb
sbb
adc
dec
inc
aas
dec
sbb
sbb
jg
sub
xor
in
inc
inc
mov
adc
call
jb
in
(bad)
in
jmp
cmp
sbb
out
cmp
or
not
xchg
and
outs
cmp
mov
div
int3
aam
cmp
movs
adc
xchg
mov
pop
(bad)
sub
adc
push
cmp
inc
pop
je
pop
js
and
cs
(bad)
mov
or
add
and
loopne
and
fadd
cmps
stos
or
push
nop
test
or
idiv
pop
call
or
or
(bad)
(bad)
sti
sbb
jae
jo
or
xor
push
mov
std
imul
lods
mov
sub
aam
mov
fcomp
and
jne
ja
sub
xor
jb
sbb
cmps
pop
(bad)
cmp
pop
or
push
inc
jle
into
and
test
pcmpeqd
jg
sbb
cmp
xor
(bad)
dec
int3
mov
add
sub
iret
pusha
fld
jmp
lock
rcr
shr
mov
push
cmp
and
sbb
or
div
mov
xchg
xchg
mov
and
cmc
sbb
leave
sbb
inc
mov
inc
sub
xor
sar
out
fld
inc
push
push
ret
mov
fsubrp
xchg
adc
push
hlt
xchg
or
(bad)
fisubr
inc
mov
add
jnp
(bad)
retf
and
inc
loopne
push
es
out
jo
les
popf
jl
and
add
inc
xchg
xor
inc
jge
dec
jmp
jae
add
into
arpl
mov
pop
xor
test
fcmovb
cmp
sub
out
and
fsubr
adc
and
xor
mov
and
mov
adc
daa
loopne
adc
sbb
aaa
outs
das
dec
cmp
pop
arpl
pushf
inc
sti
sub
rcr
outs
jo
push
pop
jmp
xlat
cmp
or
arpl
xor
pop
xor
or
and
pop
addr16
(bad)
pop
test
pop
push
rol
add
in
and
sbb
mov
sbb
(bad)
std
sbb
pop
(bad)
cmp
je
or
inc
inc
xor
push
mov
add
sub
cmp
jne
push
or
scas
mov
jg
pop
ss
push
lgs
mov
inc
adc
inc
cmp
sbb
sub
and
pinsrw
push
in
mov
jmp
in
stc
ds
inc
inc
cmp
xchg
fnsetpm(287
rol
arpl
inc
xor
add
clc
or
dec
add
shl
add
add
xor
das
add
add
xchg
sbb
push
pop
mov
ret
add
div
inc
repz
pop
sub
dec
and
jmp
mov
mov
je
aam
aam
shr
add
xor
sti
adc
add
pop
xchg
or
mov
outs
pop
jl
mov
enter
add
cmp
inc
and
cmp
mov
and
and
jbe
cli
mov
sbb
mov
sbb
fsubr
outs
sbb
les
mov
add
cs
popa
xor
mov
sti
push
rol
mov
(bad)
pop
ins
push
in
movs
in
out
mov
in
mov
xor
pop
mov
inc
cmp
iret
or
js
rcl
mov
adc
push
sbb
lods
mov
scas
loope
int3
lods
jne
mov
xor
scas
add
mov
add
clc
mov
ss
and
cmp
inc
or
popa
test
aas
mov
xchg
call
outs
push
shl
mov
add
movs
pusha
fld
sbb
movs
out
or
lock
fst
xor
bound
pop
cmp
inc
sub
add
nop
add
das
fisttp
cmp
rol
add
mov
test
mov
pop
add
dec
in
add
test
inc
out
xchg
outs
jmp
inc
fmulp
sbb
out
xchg
dec
ins
(bad)
rol
push
push
push
lods
xor
xlat
lock
outs
jg
or
sub
outs
jb
popa
ins
add
pop
and
fisubr
push
jb
js
or
adc
xchg
out
cs
xor
mov
punpckhbw
outs
data16
ret
push
fs
adc
data16
test
outs
ins
adc
fadd
std
cmp
gs
popa
jb
ins
jae
add
(bad)
pop
fnstcw
push
aaa
dec
sub
popa
out
inc
mov
pop
mov
mov
sub
popa
jo
push
push
js
pop
je
dec
(bad)
gs
xchg
inc
sbb
cmp
dec
adc
mov
push
xor
mov
jo
popa
out
mov
xor
or
mov
lock
jg
loopne
in
dec
outs
push
neg
add
jbe
in
test
fiadd
push
movs
fcomi
int
call
add
jae
push
or
mov
or
ins
popa
pop
add
jbe
repnz
add
inc
int
sahf
iret
pop
inc
outs
adc
and
cmp
in
mov
jnp
movs
hlt
nop
pop
js
pop
imul
icebp
pusha
mov
pop
jmp
test
jecxz
add
pop
mov
mov
dec
and
sub
dec
cmp
fnstsw
dec
imul
ror
mov
jne
mov
dec
inc
pop
lea
and
cmp
add
inc
pop
fiadd
imul
sar
sbb
inc
cmp
sub
mov
dec
add
out
stos
pop
mov
push
(bad)
sub
movs
sub
dec
jg
jno
xchg
jg
cmp
xchg
sub
jle
dec
mov
adc
mov
shr
add
jl
shr
sub
inc
mov
adc
pusha
push
lods
dec
push
scas
cmp
add
push
int3
xchg
push
mov
pop
aas
push
jmp
add
fisubr
fdivr
push
mov
cmp
pop
pop
adc
push
(bad)
jnp
and
and
clc
jae
lock
cmp
mov
push
pop
cs
test
leave
sub
mov
mov
jae
add
add
fsubr
cmp
sar
add
shr
jmp
ins
xor
jle
push
sub
retf
pusha
xor
test
in
add
xchg
loope
call
icebp
pop
pop
pusha
rcl
out
loopne
ins
sbb
test
jp
dec
xor
xor
repz
dec
jae
push
add
xor
mov
fwait
pop
adc
sbb
mov
outs
xor
or
popf
add
inc
add
or
push
lods
lds
aad
dec
cmp
sub
push
(bad)
mov
lds
push
or
add
fs
outs
dec
ins
test
ror
(bad)
das
or
add
push
ror
cli
cmps
imul
pop
ja
dec
lahf
sahf
push
clc
popf
pop
adc
outs
(bad)
pop
push
pop
enter
ret
fcom
inc
cmp
mov
arpl
in
dec
test
push
outs
jne
add
fdiv
or
cmp
sub
cmp
sub
push
jmp
fwait
loopne
mov
in
push
inc
pop
xor
dec
push
jmp
dec
cmps
pop
xchg
fwait
mov
mov
and
push
scas
enter
push
bound
imul
dec
or
rcr
mov
add
inc
xchg
inc
imul
jns
ds
hlt
(bad)
fld
add
add
sub
daa
loop
repnz
adc
lods
sahf
cmp
jo
rcr
lds
cli
or
sbb
adc
mov
inc
mov
mul
shr
push
jge
push
inc
push
mov
daa
mov
psubusw
lods
jns
cld
inc
mov
or
add
(bad)
sub
inc
pop
xchg
or
mov
mov
push
movs
push
hlt
push
sbb
adc
aam
xor
nop
test
lds
aam
mov
add
pop
cmp
or
cmp
lods
dec
add
mov
adc
and
test
inc
add
nop
push
cmp
xchg
pop
push
mov
or
mov
pusha
push
or
push
push
inc
cmp
inc
sub
lods
lahf
add
pop
sbb
sbb
push
mov
ins
popa
es
push
das
out
test
cmp
or
pop
mov
and
sbb
pushf
push
or
inc
ins
jnp
add
push
pop
xchg
sahf
sub
cwde
xor
pushf
mov
xor
jo
adc
or
hlt
(bad)
push
js
mov
cmps
call
int
add
push
dec
into
xor
out
push
aam
mov
or
mov
stc
mov
push
les
fdiv
ins
push
add
repz
in
test
push
mov
mov
jl
jle
add
data16
jp
jge
stos
mov
or
cs
pop
je
pop
sub
adc
std
stos
in
test
adc
adc
cmp
xor
sbb
imul
test
ret
outs
lock
icebp
data16
ins
jo
inc
outs
mov
int
jb
and
inc
jno
xor
cmp
inc
or
sub
cmp
xor
shr
sbb
ins
outs
ja
xor
cmp
adc
xor
inc
int
les
inc
adc
mov
pop
mov
cmp
aaa
repz
and
inc
fwait
xor
nop
rol
in
xor
shr
repz
add
cmp
and
push
mov
push
or
es
popa
sub
stos
inc
add
nop
and
xchg
fidiv
pushf
dec
int3
jb
ss
fisubr
rcl
inc
ins
cmp
call
je
imul
push
loopne
inc
pusha
das
xchg
inc
rcr
nop
out
sbb
dec
aam
push
xor
dec
aaa
js
jns
add
xor
lods
cmc
push
lods
sbb
daa
daa
mov
lea
test
ficom
pop
and
enter
(bad)
pop
xchg
repnz
loop
pop
xchg
add
xor
or
xor
pop
sbb
pop
sbb
and
scas
cmc
xor
xor
push
in
jae
pop
popa
mov
inc
in
pusha
cmp
fisttp
pop
cmp
stos
aam
dec
adc
mov
sub
jg
or
dec
inc
pop
imul
and
shr
(bad)
je
xchg
test
pop
mov
pusha
rol
mov
ja
lahf
add
or
cmp
sbb
aas
scas
push
push
mov
push
arpl
inc
pop
dec
sbb
lock
std
mov
inc
imul
aaa
call
call
in
ret
pop
mov
data16
and
or
dec
add
lods
in
fwait
or
and
and
call
and
cmp
add
or
add
jno
rol
xchg
sar
loopne
sbb
ficomp
test
loope
inc
ret
and
clc
xor
mov
mov
sbb
cdq
sbb
bound
adc
or
cmp
pop
movs
or
or
xor
mov
outs
or
cmp
loopne
pop
es
xor
xor
ja
(bad)
icebp
xor
jb
sbb
ins
xchg
jb
xor
mov
xor
xor
push
xchg
cmp
cmp
cmp
pop
(bad)
popa
mov
rcr
fmul
jecxz
inc
jmp
in
xchg
or
sar
add
dec
or
xor
inc
ja
sbb
xor
inc
into
test
cmp
sub
(bad)
jo
inc
jmp
jmp
mov
daa
sub
pop
xchg
cmps
ret
sub
inc
stc
xchg
sub
adc
fidivr
push
push
add
inc
loop
jno
dec
add
lods
xchg
lea
adc
imul
ins
jne
stc
jmp
push
(bad)
cmp
cwde
jno
sbb
adc
dec
jns
mov
adc
mov
inc
(bad)
pushf
dec
pop
nop
mov
in
call
adc
pop
call
inc
cmp
inc
cmp
jmp
adc
push
dec
jmp
adc
push
sbb
les
jo
jge
xchg
js
adc
adc
sbb
lods
xchg
adc
xor
scas
or
or
jmp
cdq
dec
adc
add
popa
xchg
into
ins
mov
xchg
xchg
inc
push
xor
sbb
pop
sbb
jns
xlat
add
adc
adc
mov
add
mov
add
adc
or
or
pop
cmp
add
test
inc
out
out
xchg
add
sub
add
mov
add
in
push
add
add
or
sbb
lods
dec
repnz
add
add
add
fs
mov
fs
and
jb
fs
(bad)
xor
jno
lods
dec
and
mov
into
in
xor
cmps
rcr
push
outs
imul
jbe
push
outs
(bad)
pop
xor
das
movs
rcl
les
fsub
cmp
jl
mov
add
add
and
int3
pop
addr16
sub
push
test
add
or
out
inc
inc
addr16
sbb
pusha
xor
pop
adc
js
xchg
outs
mov
arpl
add
mov
test
or
cwde
dec
lock
add
jae
adc
add
lea
mov
ds
pop
pop
mov
pop
ret
pop
add
add
addr16
mov
adc
aad
or
push
pop
movs
xor
out
xor
xor
xor
inc
sbb
jecxz
(bad)
xchg
add
add
cld
adc
or
outs
mov
xlat
es
mov
jo
xor
movs
mov
dec
sahf
sub
pop
pop
sub
out
sbb
or
retf
and
test
pop
arpl
push
adc
pop
sub
jle
mov
(bad)
dec
and
fs
push
scas
and
mul
jg
pop
je
(bad)
sub
clc
mov
xchg
push
hlt
mov
pusha
mov
add
xor
fstp
and
repnz
push
loop
lea
nop
inc
cmp
and
dec
push
xchg
and
test
addr16
lock
or
outs
mov
mov
xchg
ss
mov
es
sub
and
and
jb
jmp
aas
outs
imul
mov
fs
mov
pop
add
sub
add
jnp
xchg
xchg
jno
mov
xor
mov
aad
pop
clc
popa
fs
jae
adc
xchg
out
mov
rcl
pop
xor
repz
imul
sbb
sub
es
pop
cdq
mov
sub
dec
gs
(bad)
(bad)
hlt
shl
xor
leave
out
and
movzx
xor
add
sbb
jne
xchg
xor
xor
je
sub
mov
clc
push
(bad)
jae
cmp
fistp
xor
cmp
mov
and
je
pop
push
adc
aam
div
mov
ss
jmp
xchg
call
dec
stos
dec
ficom
ja
jg
push
inc
loopne
mov
inc
mov
sbb
dec
cmp
bound
sub
add
fcomp
movs
push
or
add
bound
mul
push
jle
push
mov
dec
les
mov
nop
pop
ja
test
jp
repnz
outs
add
(bad)
xor
add
add
cmp
loop
add
(bad)
and
xlat
aam
sub
je
fsub
leave
vmovntps
shr
ret
(bad)
add
je
or
call
je
add
popf
loopne
mov
xchg
scas
mov
pop
cmp
or
loop
dec
shl
cmp
sbb
sub
in
lods
jge
clc
ds
sbb
push
pop
cli
loop
mov
in
inc
add
sub
adc
dec
test
jo
mov
xchg
hlt
setg
cmp
aaa
lock
je
mov
test
adc
outs
jmp
or
push
mov
mov
aad
adc
add
jb
mov
dec
loopne
loop
dec
ins
jbe
mov
test
and
push
in
dec
sub
mov
inc
xor
xchg
xlat
repnz
adc
or
inc
gs
popf
add
addr16
loope
mov
fmul
mov
mov
mov
nop
mov
mov
loopne
das
sub
pop
sub
es
mov
jno
add
xchg
push
outs
ss
xor
inc
das
adc
jle
sub
aam
cmps
popa
pop
dec
mov
push
ret
inc
or
mov
or
test
dec
add
adc
push
hlt
cmp
ret
outs
pop
popa
push
or
jnp
inc
xor
push
es
or
adc
push
mov
and
lds
ret
in
popa
jno
test
xchg
jmp
sbb
add
xchg
push
mov
add
and
mov
movups
cmps
fadd
out
inc
xor
shl
mov
gs
add
sahf
pop
inc
call
sbb
pop
pop
pop
aam
push
test
push
call
(bad)
(bad)
mov
xor
(bad)
call
sbb
loope
jmp
neg
pop
mov
xchg
jne
arpl
inc
dec
jne
cmp
pop
and
ds
lea
pop
adc
in
mov
call
or
test
mov
nop
pop
lods
addr16
getsec
pop
sets
js
or
mov
sub
and
dec
fcom
sbb
pop
pop
mov
adc
mov
add
(bad)
jnp
mov
jb
add
mov
or
pop
std
jmp
inc
sbb
dec
pop
push
push
add
pop
pop
pop
std
or
mov
push
adc
jmp
mov
dec
adc
mov
push
dec
and
(bad)
xor
rcl
jae
ret
push
jne
ins
lods
adc
fs
ret
pusha
cmp
int
stos
jae
or
xchg
pop
aam
out
or
nop
add
jecxz
popa
add
mov
mov
dec
pop
sbb
inc
std
lea
inc
xchg
or
pushf
mov
inc
push
adc
je
add
pop
sbb
push
test
jle
xchg
or
xchg
add
mov
jmp
lea
fadd
cwde
aam
dec
adc
dec
icebp
je
ret
adc
ss
push
movzx
into
mov
cmp
mov
push
push
inc
jle
ror
xchg
cld
arpl
or
call
pop
outs
sub
out
mov
fimul
sub
call
test
or
pop
xchg
leave
jl
cs
xchg
fsubr
outs
dec
push
and
push
add
add
(bad)
dec
cli
or
cmp
popa
mov
mov
push
adc
fadd
xchg
loope
pop
imul
cmp
jbe
inc
or
or
pushf
xor
xor
push
adc
int3
jae
mov
arpl
ror
mov
push
dec
cwde
call
lock
loopne
mov
jle
mov
xchg
xchg
add
ss
leave
push
hlt
mov
aas
cmp
adc
pop
and
add
nop
and
sbb
retf
xchg
mov
adc
jae
push
and
inc
cmp
cmp
jl
jb
lds
adc
xor
jl
xchg
jno
mov
pop
or
lock
add
fwait
pusha
cmp
mov
push
jne
lock
add
push
lock
daa
sub
cmp
pop
(bad)
pop
movs
lahf
shl
invlpg
push
popa
dec
rdtsc
bound
inc
pop
daa
fmul
lea
call
mov
ret
add
ins
mov
aam
shl
sub
xor
fs
cmp
xchg
mov
scas
sub
ror
js
test
push
xchg
add
pop
and
push
(bad)
loop
push
dec
mov
stos
push
sub
ucomiss
or
push
xor
pop
outs
xor
ja
jp
fisttp
imul
xor
dec
mov
neg
jg
dec
cmp
mov
ja
jmp
jg
sub
mov
sti
inc
ret
push
(bad)
outs
adc
mov
push
xor
lock
ss
xchg
mov
fcomp
and
cmp
fisub
xlat
sbb
and
lock
inc
push
sub
in
clc
add
push
mov
add
sub
jmp
add
adc
push
imul
mov
cmps
inc
adc
mov
int3
add
push
das
stos
test
test
dec
arpl
jg
xchg
xchg
xor
test
in
les
(bad)
cmp
cmp
sar
adc
xor
dec
adc
sbb
jb
fadd
out
add
in
mov
dec
push
outs
out
or
push
in
dec
dec
repnz
mov
clc
mov
cwde
sbb
fild
aaa
sbb
mov
fisubr
ret
push
adc
mov
fdivr
dec
rcr
ficomp
aas
dec
adc
loopne
jle
je
clc
mov
mov
add
pop
in
or
aad
fs
pusha
mov
sub
pushf
fsubr
cmp
adc
shl
fsub
fcom
and
aas
rcr
mov
add
xor
dec
pop
(bad)
and
dec
xchg
dec
out
or
cdq
push
push
pop
loope
push
arpl
jp
fdivr
sbb
test
jp
mov
lock
jne
mov
das
jmp
inc
mov
lahf
inc
xor
sbb
xor
mov
out
das
dec
nop
sbb
fdivr
test
(bad)
inc
jae
dec
push
add
jnp
adc
pop
inc
cmp
jge
out
jmp
ficom
mov
outs
pop
add
scas
sti
pop
mov
cmp
jne
rcr
test
loop
xor
xchg
ja
push
add
add
jmp
sub
popa
out
xchg
push
pusha
sbb
fs
push
fs
and
imul
nop
cdq
clc
sar
scas
adc
cmp
xchg
out
push
popa
cmp
jle
bound
xchg
pop
out
cmp
les
jle
sbb
push
cmps
inc
or
in
jbe
jmp
mov
aam
xchg
sub
mov
add
mov
jecxz
adc
inc
ins
inc
adc
xchg
adc
(bad)
imul
add
or
ins
inc
outs
ins
aaa
inc
loopne
mov
add
add
sbb
push
xchg
xor
je
clc
dec
dec
dec
outs
leave
add
push
rcr
sbb
popa
jae
(bad)
push
xor
les
inc
aaa
dec
xor
push
call
shl
dec
add
pop
mov
les
mov
shl
ja
out
and
ret
imul
push
or
mov
leave
mov
pop
inc
fnsave
cmc
add
push
pusha
jle
sub
dec
in
cmc
xchg
arpl
test
aas
shr
adc
or
cwde
cmp
adc
rol
add
outs
jno
push
bound
or
add
bound
in
mov
shl
jo
in
xlat
pop
or
iret
(bad)
mov
(bad)
cmp
or
clc
cdq
add
cmp
dec
data16
jl
imul
xlat
jne
mov
add
scas
repz
pop
mov
int3
and
cld
jnp
inc
(bad)
loopne
cmp
jne
or
fbld
xchg
loopne
cwde
jge
sti
inc
xor
jae
jbe
shl
fdiv
inc
jg
add
cmp
ja
cld
xor
pop
jecxz
fldcw
or
dec
push
jmp
cld
shl
mov
jns
dec
adc
stos
into
add
add
nop
je
mov
mov
int3
adc
inc
(bad)
sbb
loopne
sar
lods
inc
add
dec
mov
(bad)
mov
mov
inc
dec
jne
jecxz
push
and
(bad)
pop
loopne
scas
mov
jae
inc
add
lahf
pushf
xor
aad
test
out
or
mov
enter
(bad)
mov
hlt
push
jp
movzx
ins
jno
jmp
pop
mov
lahf
lahf
adc
ffreep
out
loope
and
cmp
jne
cmp
add
daa
inc
jmp
adc
(bad)
in
sbb
add
cwde
add
mov
(bad)
push
add
jne
cli
mov
or
fchs
clc
test
cmp
cmp
push
pop
and
enter
stos
sbb
sbb
push
adc
cdq
enter
mov
pusha
inc
dec
inc
cmp
shr
lahf
fwait
and
cmp
jle
cmps
jo
mov
outs
and
cmps
inc
outs
push
and
mov
sbb
dec
in
push
cli
sbb
mov
jmp
add
sbb
mov
and
adc
enter
jo
dec
and
and
inc
test
movs
sbb
push
bound
adc
leave
sbb
pop
popa
mov
and
cvtdq2ps
pop
ret
add
pop
pop
or
call
retf
in
sub
nop
ss
bnd
sub
movs
push
mov
or
pop
(bad)
cmps
mov
les
or
or
and
in
mov
sbb
shr
and
loopne
sub
sub
rcr
xor
pop
xchg
mov
and
sbb
xchg
loope
fcom
mov
sti
ins
mov
cmp
adc
(bad)
hlt
fstp
push
sar
daa
sub
nop
push
xchg
sub
mov
cmp
or
fs
push
or
dec
retf
inc
lock
aaa
or
div
pop
sub
and
in
iret
adc
dec
or
adc
adc
js
daa
aam
gs
ja
(bad)
hlt
mov
out
hlt
mov
push
in
addr16
mov
nop
add
aaa
movs
push
add
cmp
xor
add
mov
ficomp
jae
cmc
xchg
call
jmp
xchg
js
or
les
je
sub
mov
lods
mov
sub
xchg
das
xchg
or
mov
sub
mov
mov
pop
in
and
loopne
cmovns
pop
mov
sar
les
js
ds
cmp
pop
jbe
mov
lods
jnp
(bad)
push
xor
pop
cmp
sahf
adc
add
repz
pop
mov
sbb
jb
movs
xchg
rcl
or
scas
xor
ret
sub
ss
ins
jne
test
mov
out
and
inc
(bad)
push
stos
sbb
hlt
push
adc
xor
sbb
jg
mov
scas
mov
jnp
push
and
adc
sbb
push
scas
sbb
fbstp
mov
jo
pop
xor
das
add
adc
imul
push
sbb
dec
fbstp
or
push
inc
data16
add
jecxz
xchg
mov
pop
push
add
adc
daa
scas
cmp
add
xor
mov
ror
mov
cmps
mov
inc
movs
daa
adc
sbb
dec
push
push
getsec
jne
aam
in
pop
loopne
mov
call
test
arpl
jo
and
fcomp
adc
enter
pop
pusha
or
in
pop
in
mov
push
clc
stc
pop
push
repz
lock
mov
neg
add
nop
mov
mov
add
adc
inc
shl
je
push
push
inc
loope
xor
jge
js
mov
imul
mov
lock
rcl
xchg
mov
call
or
jbe
add
xchg
ret
jmp
xchg
mov
adc
mov
cdq
sbb
dec
dec
mov
setne
mov
push
dec
test
and
sub
aam
ret
nop
and
xor
daa
int3
int
in
fadd
inc
jae
jmp
daa
and
xor
js
dec
and
xchg
loopne
push
xor
(bad)
mov
aaa
add
sbb
xor
test
add
pop
adc
test
xor
mov
js
fdivr
mov
repz
cwde
jecxz
clc
arpl
jg
sbb
sub
or
inc
mov
or
xor
rcr
pop
sbb
pop
inc
sub
add
add
js
js
in
pushf
fwait
push
outs
fdivr
jo
and
lea
xor
imul
inc
ror
mov
pop
jns
arpl
jnp
fisttp
mov
pop
xchg
xor
rcr
mov
or
or
and
mov
fwait
cmp
jne
xor
xchg
sbb
mov
ins
adc
out
fst
xlat
jg
dec
orps
sbb
add
xor
fcom
movs
adc
dec
xchg
lock
in
add
jmp
xchg
clc
cmp
fild
inc
ror
ja
jo
adc
(bad)
jns
add
(bad)
cmp
mov
jmp
ja
mov
out
or
add
int3
aam
add
dec
jne
xchg
dec
out
or
pop
les
loopne
add
bound
ror
fild
inc
xchg
or
jb
push
add
inc
loope
adc
inc
sti
add
cmp
adc
das
call
or
dec
out
mov
(bad)
push
fisubr
jecxz
adc
ret
push
xlat
cmp
das
or
fsub
or
xor
push
cmp
sub
pop
push
scas
ror
jmp
sub
mov
or
jns
aaa
push
mov
leave
es
test
mov
xchg
mov
and
rol
repnz
mov
cwde
test
rol
adc
add
sub
jo
or
pop
shl
out
shl
mov
dec
hlt
mov
scas
fld
retf
add
pop
cmp
sti
add
cmp
dec
fist
xchg
jmp
and
xor
sub
adc
mov
test
inc
and
cld
shl
and
adc
les
imul
pop
adc
fldcw
jmp
mov
adc
inc
mov
sti
push
fcom
dec
xchg
mov
xchg
xor
sbb
pop
cmps
add
push
test
fsub
jb
jg
mov
call
ins
xor
iret
dec
sahf
in
push
in
mov
and
cmp
jmp
sbb
pop
add
loopne
xchg
pusha
sub
div
int
cld
jb
and
call
mov
pop
xor
inc
and
jmp
and
jge
jmp
or
sti
and
dec
mov
ret
mov
mov
sub
loopne
test
sbb
mov
cmp
mov
fsubr
mov
pop
mov
inc
mov
enter
cmps
push
xchg
jmp
inc
je
jmp
sbb
and
cmovg
add
jo
stos
fsub
or
dec
fidivr
inc
sbb
add
mov
xchg
pop
out
(bad)
aam
and
test
add
sti
inc
cmp
aaa
push
xchg
inc
and
inc
lahf
mov
out
or
or
int
test
add
rol
jmp
adc
repz
adc
icebp
sub
pop
rcr
sbb
sbb
cmp
call
clc
dec
jne
dec
mov
sub
adc
setae
push
mov
xchg
sbb
out
mov
mov
xchg
in
add
jmp
(bad)
repz
add
enter
mov
pop
pop
scas
jne
scas
dec
scas
jecxz
aaa
add
mov
push
(bad)
je
lahf
adc
rcr
dec
add
jo
sbb
je
in
xor
jecxz
and
or
pop
ret
inc
ret
and
idiv
xchg
test
xchg
les
add
mov
mov
loope
mov
mov
xchg
fnstenv
out
pop
or
imul
ds
jge
sub
lock
push
adc
mov
push
jbe
ins
push
jmp
mov
daa
cmp
jne
mov
outs
pop
sbb
nop
pop
and
cwde
jecxz
sbb
enter
and
dec
sbb
jge
(bad)
fnstcw
inc
mov
js
popf
pop
inc
pop
pushf
pop
addr16
fisub
mov
xor
or
jg
jl
sahf
or
adc
sbb
jmp
fs
ret
movs
arpl
push
(bad)
rcr
pusha
mov
cld
(bad)
aas
imul
or
mov
add
out
xor
add
pop
(bad)
adc
add
or
xor
or
lock
and
pushf
lahf
ret
out
xchg
inc
bound
jo
xchg
cmp
xor
push
xor
ins
cmps
xor
add
mov
adc
ffreep
xor
mov
mov
ret
jns
cmp
xor
and
hlt
mov
push
mov
xchg
lock
pusha
inc
sahf
xchg
push
(bad)
aad
loopne
mov
lds
das
inc
imul
xor
bound
shr
adc
and
push
add
xchg
icebp
inc
dec
sub
lock
popf
in
loopne
add
add
mov
clc
pop
mov
mov
lods
iret
or
sbb
push
cli
push
cmp
test
fwait
pop
and
popf
loope
bound
push
(bad)
adc
xchg
sub
or
mov
in
inc
jp
add
outs
ret
jne
xor
mov
js
ss
fisttp
mov
std
jmp
inc
add
(bad)
lods
jmp
popf
fst
xlat
popf
or
and
inc
mov
xchg
mul
mov
in
dec
fcomi
js
ror
mov
and
dec
mov
popa
dec
test
push
add
or
mov
or
aas
cmps
pusha
mov
test
xchg
add
and
mov
cld
fidivr
mov
push
mov
call
ror
(bad)
retf
pop
add
add
test
mov
dec
or
in
gs
arpl
xor
js
cmp
pop
sbb
mov
call
adc
les
push
aad
push
sub
js
push
xchg
push
mov
(bad)
xchg
pushf
shl
fwait
ja
or
mov
mov
in
aaa
add
mov
push
loopne
add
push
ins
sbb
in
bound
xchg
fild
dec
hlt
jne
aaa
in
cmp
cmp
adc
or
add
sbb
sub
or
lea
push
fisubr
push
sbb
jg
rcl
pop
and
lock
jo
pop
(bad)
push
or
cmps
and
or
scas
inc
sbb
mov
cs
sub
pop
(bad)
fcomp
push
push
add
fcomp
push
sbb
cmp
jg
add
xchg
cmp
outs
rol
ret
push
lods
add
lods
jmp
sbb
mov
dec
iret
and
popa
push
and
cmc
sub
mov
mov
adc
in
lods
movs
sbb
in
jecxz
push
adc
xchg
and
arpl
outs
aad
push
enter
adc
fs
test
clc
fisttp
das
mov
test
jl
inc
and
mov
jmp
retf
jne
pop
in
repnz
add
inc
mov
push
push
ret
mov
dec
sub
in
lea
inc
fs
pop
js
je
dec
mov
add
pop
inc
retf
or
rol
(bad)
out
xchg
(bad)
sub
test
jnp
sbb
fsubr
push
fwait
mov
fwait
rcl
inc
lock
fstp
outs
cld
dec
xchg
dec
dec
mov
push
push
(bad)
cmp
jo
fsubr
ins
add
dec
je
dec
add
fsubrp
add
push
push
push
add
and
call
mov
sbb
aad
(bad)
mov
or
jmp
mov
dec
push
jns
mov
test
inc
ins
adc
loop
faddp
sbb
add
or
cmp
les
xchg
daa
aad
dec
sbb
adc
adc
loopne
pop
ds
xor
test
add
data16
fadd
jbe
sub
fwait
add
cmp
jno
shrd
and
inc
mov
push
call
addr16
pop
or
addr16
call
add
clc
add
mov
outs
add
cmp
clc
cld
add
or
inc
cmp
dec
frstor
push
mov
jmp
xchg
mov
mov
dec
mov
imul
jo
sbb
lods
pop
adc
loope
mov
xchg
cmp
call
xchg
(bad)
inc
and
mov
(bad)
mov
nop
(bad)
mov
loopne
icebp
sbb
xchg
ret
lds
and
fnstcw
retf
or
jmp
dec
inc
or
or
mov
jmp
imul
cmps
das
xor
sbb
adc
mov
(bad)
cwde
lds
jl
mov
sbb
fwait
call
mov
stos
inc
pusha
out
jmp
mov
adc
test
jmp
xor
(bad)
xchg
test
gs
div
dec
adc
jb
pop
xchg
push
or
add
fsub
add
in
mov
fcmovb
cmp
dec
sti
adc
es
xchg
or
ret
mov
sbb
(bad)
mul
sbb
xchg
call
and
xor
retf
xchg
popf
adc
dec
adc
es
ins
movs
(bad)
(bad)
shl
rol
and
xchg
sub
jecxz
int3
mov
inc
add
or
push
inc
(bad)
int3
cld
add
inc
pop
cdq
mov
das
xchg
test
shl
shr
cmp
jno
xchg
fwait
aaa
pop
mov
inc
test
enter
dec
push
mov
xchg
scas
or
stos
pop
push
xchg
pop
cmp
push
adc
je
jmp
cmp
lea
jne
clc
imul
inc
pop
pop
xor
out
in
lock
test
cmp
and
lea
adc
lods
test
aam
adc
int
fimul
stc
push
adc
jno
(bad)
jmp
in
xor
add
add
cld
push
sub
pop
imul
mov
jae
adc
cs
pop
rcl
jbe
mov
cwde
sub
test
clc
add
(bad)
mov
or
retf
push
movs
pop
push
ficomp
adc
sub
sub
xor
loopne
push
push
pop
call
cmp
and
jnp
lahf
adc
jge
es
cmp
je
push
jnp
icebp
imul
cs
pusha
and
xor
ja
xor
fidivr
js
out
push
push
div
push
bound
dec
push
pusha
shl
fwait
inc
add
cmps
or
push
pop
sbb
add
call
fcmovbe
sbb
add
int
adc
in
or
ror
dec
cmc
inc
lods
mov
xchg
add
inc
and
mov
int3
mov
fistp
and
mov
je
push
mov
adc
scas
jne
mov
in
imul
lahf
xchg
(bad)
inc
shl
pusha
xor
popa
cld
xchg
push
js
adc
push
mov
mov
inc
adc
sar
adc
loopne
(bad)
jbe
out
pop
ret
cmp
das
jle
fucomi
int3
pop
test
xchg
dec
cld
rcr
xchg
cmps
out
cmp
pop
call
es
test
scas
mov
test
pop
cmp
add
push
inc
jl
add
je
jp
daa
inc
pop
or
sbb
out
or
inc
std
add
enter
pop
(bad)
mov
jne
inc
aam
push
clc
push
arpl
js
fsubr
mov
add
test
cld
(bad)
loope
pop
pop
cmp
je
mov
or
cmp
and
mov
and
push
into
shr
clc
or
push
jo
daa
mov
scas
jmp
push
sbb
push
std
sbb
pushf
pushf
cmp
push
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
xor
xor
xor
pushf
aaa
cmp
cmp
pushf
pushf
pushf
cmp
ja
test
inc
dec
inc
dec
std
cmp
or
mov
add
or
popa
adc
ins
popa
or
cs
fwait
mov
neg
test
cmovbe
jo
fld
cmp
sti
inc
dec
add
pop
and
or
push
dec
mov
or
push
(bad)
cld
mov
mov
mov
addr16
mov
jae
popa
jb
jle
addr16
loopne
xor
mov
es
xchg
add
cwde
push
or
movs
inc
daa
xor
test
fcomp
adc
add
js
outs
cld
stc
pop
push
pop
enter
xchg
fdiv
fidiv
mov
dec
sub
push
retf
mov
jbe
loopne
inc
push
push
push
lea
mov
or
ss
adc
mov
ins
jae
dec
(bad)
inc
aad
adc
push
popa
mov
fmul
inc
ror
push
mov
jnp
push
inc
mov
fs
mov
inc
jnp
or
adc
jae
mov
inc
outs
mov
mov
test
or
bound
push
mov
cmp
sti
clc
cmps
inc
add
bound
xchg
imul
adc
jns
div
in
mov
mov
das
and
icebp
fs
sbb
pusha
daa
mov
js
push
fucomip
adc
mov
add
adc
ins
loop
fdiv
enter
dec
mov
adc
inc
lea
in
mov
xchg
retf
enter
push
mov
jp
jo
pusha
rcl
test
or
mov
sbb
loope
dec
cmp
ins
dec
xor
ins
add
nop
mov
cmp
pop
inc
arpl
sbb
(bad)
fcmove
aad
and
ins
cli
jb
mov
add
pusha
dec
pop
push
push
dec
inc
loop
js
dec
outs
les
push
loopne
fsubr
loopne
sbb
ret
ins
add
xor
or
jb
xor
jmp
jns
test
je
jge
xchg
add
cmp
rol
and
xchg
push
pop
or
lods
test
and
sbb
and
dec
popa
aaa
mov
dec
outs
jbe
sbb
cmps
mov
inc
iret
or
or
mov
and
push
repnz
lds
loopne
cmp
in
sub
jnp
add
add
jmp
imul
push
push
imul
add
daa
mov
lock
out
add
adc
or
xor
fsub
jmp
add
add
jecxz
aam
pop
iret
or
add
or
xor
js
push
or
ins
call
add
jo
cmc
add
sbb
add
add
out
or
add
sahf
adc
dec
popa
jo
pusha
je
mov
mov
mov
push
je
sbb
push
xchg
retf
add
jns
addr16
or
jns
movs
imul
push
pop
or
mov
or
ja
or
dec
adc
or
push
or
pushf
ins
jmp
mov
mov
push
jae
cmp
mov
fcom
adc
mov
mov
jecxz
mov
out
cld
sysret
add
xchg
psrad
jns
xchg
xchg
mov
push
inc
push
xor
push
pop
cmp
imul
shl
loopne
mov
sbb
or
push
(bad)
push
sbb
fstp
mov
jo
js
mov
adc
add
daa
adc
push
pop
frstor
inc
pop
or
add
pusha
test
fld
cmp
dec
adc
sahf
mov
jbe
out
inc
mov
inc
div
les
sbb
pop
or
jg
push
pop
jbe
enter
invd
sub
jno
fsubr
push
and
mov
push
outs
imul
xor
bound
push
mov
out
ret
je
mov
test
adc
mov
push
fs
and
ins
out
pushf
and
jl
push
popa
pop
pop
dec
aam
push
outs
stos
pop
dec
jnp
je
jp
or
mov
push
mov
neg
add
imul
cwde
cmove
lahf
jae
pop
es
lock
or
adc
push
pop
sbb
popa
rol
add
ins
fs
adc
sub
add
cs
sub
adc
xor
pop
or
pop
fld
ins
pop
and
gs
test
fist
popa
cmps
add
scas
dec
xor
pop
mov
ins
jns
pop
fs
or
adc
push
std
add
and
fisttp
out
push
add
or
ret
sub
jmp
imul
js
add
rcr
push
repnz
or
mov
jb
xchg
push
pop
add
add
in
sub
fs
add
push
or
gs
fiadd
sbb
ins
sbb
jae
add
adc
fdiv
xor
xlat
lods
and
push
int
cmp
lock
inc
add
or
outs
add
ja
inc
adc
es
adc
mov
test
inc
jns
xchg
push
jl
push
lock
fcomp
cmp
adc
ror
into
ror
pop
or
inc
test
add
int3
add
or
or
stos
add
ret
movs
ds
jecxz
loope
ret
mov
(bad)
jnp
or
cmp
jb
shl
inc
mov
jo
ror
les
sbb
ror
or
test
inc
cwde
stc
outs
and
cmp
fdiv
movs
or
rol
dec
aad
sub
mov
imul
jns
test
test
push
push
dec
pop
ret
inc
inc
add
pop
fild
pop
xchg
jg
xchg
or
fsub
cli
or
sbb
sbb
mov
sbb
call
or
mov
aas
push
mov
jp
enter
inc
jnp
sbb
pushf
push
lods
pop
bt
push
repz
leave
add
mov
outs
jmp
aam
inc
cmp
and
push
nop
inc
setae
or
mov
xor
mov
adc
test
outs
and
test
aaa
and
shl
jmp
(bad)
xor
jb
fstp
push
loopne
out
lock
mov
push
clc
cmps
push
cs
fst
loopne
or
pop
ror
outs
adc
inc
sbb
cmp
mov
push
je
fwait
(bad)
mov
in
movaps
dec
add
enter
fcmovne
pop
out
and
push
or
push
imul
arpl
or
jg
mov
and
mov
ret
cmps
push
jmp
add
sbb
loope
ins
popa
bound
push
xor
out
gs
dec
jge
cmp
inc
fsub
adc
add
cwde
inc
mov
bound
or
pop
inc
push
bound
leave
and
pusha
add
push
js
push
pop
cmp
es
ja
or
sub
mov
lods
jo
adc
mov
dec
sub
and
push
ds
and
jae
retf
pushf
cwde
mov
retf
scas
sbb
mov
scas
add
adc
in
test
lahf
fwait
jmp
retf
retf
paddusw
imul
pop
sysret
jno
pusha
adc
fisub
ins
movs
ja
retf
les
shl
lea
push
mov
pop
sbb
cmp
mov
mov
js
or
in
jge
stos
xor
or
in
add
jge
inc
or
sub
cdq
push
inc
iret
repnz
fld
add
add
add
jge
adc
sub
push
adc
push
ret
or
add
add
add
mov
pop
cmp
dec
gs
push
push
cdq
pop
add
sahf
jo
add
add
xchg
xlat
dec
pop
or
jecxz
int
out
pusha
bound
pusha
xchg
xor
cmp
das
mov
push
cmp
cmp
fcmove
mov
(bad)
mov
dec
mov
push
xchg
cmps
nop
mov
rcl
movs
mov
pushf
ins
sbb
shl
jo
xchg
jno
pop
sbb
push
sbb
gs
xor
pop
or
mov
mov
xchg
int3
test
hlt
and
cmp
inc
mov
jge
push
lods
or
sub
(bad)
sub
inc
dec
rcl
mov
in
mov
pusha
data16
cmp
add
inc
inc
inc
std
and
mov
daa
sub
lahf
mov
cwde
fs
into
std
cld
(bad)
test
mov
pcmpeqw
cmovl
ins
push
or
psubd
aas
mov
out
in
cli
push
rcl
and
and
shl
cmp
jnp
push
add
fmul
arpl
xchg
test
sub
(bad)
and
nop
outs
je
cmp
mov
inc
test
or
mov
les
jno
lods
popa
sti
shl
add
ja
cmp
add
fwait
inc
fistp
push
cld
pop
inc
inc
out
jbe
stos
adc
inc
jb
push
sub
arpl
dec
push
mov
xor
push
test
inc
add
lds
dec
jno
loopne
or
arpl
cmp
fwait
push
push
clc
shl
inc
adc
aaa
add
addr16
sbb
mov
mov
push
jbe
jne
int3
loopne
sub
dec
mov
push
mov
sub
add
adc
or
xor
je
jns
xchg
cmps
push
pop
add
ficom
add
mov
dec
add
mov
jae
outs
add
add
xor
jnp
mov
jnp
pop
cmp
pop
sbb
cmps
outs
ins
xor
sbb
add
aad
dec
push
ja
or
adc
bound
inc
ins
or
mov
in
paddq
jl
fs
(bad)
out
aad
fs
pop
jg
in
fs
js
cmp
add
jle
sbb
push
fmul
sbb
pop
test
mov
mov
mov
inc
pushf
adc
inc
mov
cmp
adc
cmp
dec
pop
push
sub
sub
cmp
adc
jbe
pop
hlt
jae
dec
xor
adc
or
dec
or
stc
sbb
jo
js
mov
jb
mov
adc
inc
inc
mov
and
inc
mov
mov
sub
or
mov
adc
inc
push
xchg
ror
or
movs
add
sub
test
cmc
add
test
push
addr16
das
mov
nop
add
test
cmp
adc
pop
ins
lahf
pop
int3
test
push
nop
fisttp
inc
ins
jo
jns
cmp
add
outs
scas
pop
inc
dec
jo
imul
jb
fwait
cmp
aaa
cwde
xlat
pop
shr
push
or
jno
push
aaa
mov
fadd
inc
push
or
pop
lds
xor
push
mov
push
out
mov
add
jmp
(bad)
movs
add
fsubr
loope
cmp
push
dec
pop
adc
push
jae
movs
test
sbb
push
or
push
icebp
ret
inc
inc
cmp
arpl
dec
int3
or
xchg
lahf
or
popa
jns
imul
gs
adc
add
jl
push
and
ins
inc
add
mov
mov
push
inc
imul
loope
cmp
fs
pop
cwde
fld
gs
dec
sbb
add
data16
or
leave
(bad)
icebp
or
(bad)
ror
xchg
fldcw
push
(bad)
fnstsw
imul
mul
loope
loop
dec
ds
xor
jmp
jge
or
and
aas
jecxz
add
fstp
fcmovbe
lds
ret
sbb
add
xlat
rol
adc
lods
cmp
mov
fsubr
(bad)
iret
ins
pop
adc
mov
test
mov
loope
sub
ins
inc
loope
push
push
push
add
pop
push
mov
test
sbb
or
js
inc
and
lea
or
in
dec
xor
pop
loopne
sub
jecxz
inc
ror
jge
or
jl
pushf
pop
inc
adc
push
inc
shl
inc
js
jo
ins
sar
popa
cmp
rol
and
add
mov
push
stos
pusha
sti
xor
inc
or
cmp
inc
(bad)
jo
test
or
ins
dec
add
(bad)
or
push
or
cmp
je
adc
mov
or
inc
(bad)
jge
adc
and
call
es
fisub
stos
daa
popf
das
push
inc
(bad)
cmp
add
in
loop
jecxz
je
push
popa
mov
adc
and
stos
js
(bad)
adc
inc
scas
out
cmps
adc
adc
pop
mov
in
jns
sbb
dec
cs
sbb
inc
mov
jl
mov
(bad)
sbb
xor
fild
jns
loopne
cmp
pop
fist
inc
call
dec
sub
add
mov
and
pop
lods
mov
push
pop
adc
sub
enter
test
fild
or
enter
mov
enter
or
cmp
add
mov
mov
adc
cmp
jmp
sbb
push
inc
jb
icebp
pop
ds
cmp
pop
inc
or
nop
fidivr
sbb
xchg
movs
mul
call
xchg
jno
aaa
int
xchg
sbb
dec
adc
sbb
stos
gs
sbb
popa
pop
push
mov
lahf
call
fwait
push
dec
mov
sub
pop
and
sbb
mov
or
adc
loope
xor
mov
loop
sbb
nop
add
loopne
clc
jecxz
fiadd
daa
sub
jbe
and
jecxz
add
outs
outs
xchg
and
mov
loop
loop
loop
cmps
xor
icebp
loop
dec
ins
ins
sub
mov
(bad)
xor
push
outs
stos
rcl
ins
mov
or
add
push
push
mov
mov
lds
adc
mov
add
jecxz
loope
and
push
or
iret
dec
fisubr
imul
adc
dec
jmp
adc
pushf
enter
inc
or
pop
das
lahf
mov
push
adc
sub
ins
pop
sbb
add
inc
push
mov
inc
cwde
adc
icebp
adc
add
ins
push
push
in
adc
inc
outs
and
sti
and
pop
dec
int3
in
and
cld
mov
fwait
jge
push
in
push
push
sbb
mov
enter
add
push
cmp
ds
push
inc
xchg
cmp
jecxz
push
(bad)
adc
in
cmps
in
out
sbb
jb
in
adc
out
mov
and
out
sbb
loope
push
add
shr
xor
push
imul
int3
add
pop
lock
hlt
pop
add
sbb
jmp
push
dec
mov
mov
jmp
mov
mov
adc
adc
ret
sbb
outs
push
in
xchg
jo
inc
out
jecxz
inc
shr
aaa
pop
mov
xchg
out
jno
jecxz
vpshld
inc
mov
or
and
(bad)
dec
xchg
cmps
inc
retf
ror
enter
fadd
out
(bad)
pop
or
(bad)
sub
and
add
pushf
adc
fisub
adc
adc
lock
jb
scas
xchg
iret
jmp
add
inc
or
into
hlt
cmp
call
add
and
jmp
xor
ss
cmp
lea
sbb
jns
mov
and
jmp
inc
fisttp
push
dec
jno
adc
lods
nop
jmp
mov
pop
leave
add
cmp
mov
call
fiadd
test
cmp
mov
jmp
jmp
imul
rcr
sub
pop
push
and
jmp
in
sbb
inc
or
xchg
cmp
dec
and
add
push
cdq
jmp
cmp
sub
cmp
dec
cld
jmp
outs
push
jae
(bad)
jo
inc
pop
inc
pop
popf
adc
jmp
xlat
aaa
call
stc
cs
and
mov
mov
and
das
das
in
aaa
aas
icebp
stos
or
push
cmc
dec
aas
ins
push
enter
mov
mov
push
add
jo
sub
push
clc
mov
data16
js
dec
or
mov
sub
sub
adc
ret
dec
js
mov
inc
mov
loope
xor
dec
jmp
popa
add
mov
sbb
scas
jno
and
int
in
outs
dec
lock
aas
add
pop
inc
es
das
(bad)
in
test
xor
mov
outs
add
pusha
xchg
lock
out
push
sahf
test
shr
shr
cmps
or
and
out
pop
iret
inc
ucomiss
sti
add
mov
jle
scas
(bad)
out
and
mov
popa
ins
inc
add
test
cs
add
ja
clc
jno
sbb
int
add
xchg
pop
sbb
add
shl
xor
mov
add
cmp
inc
mov
pop
adc
aaa
mov
push
lea
mov
arpl
(bad)
(bad)
or
fcomip
dec
cmp
pop
and
push
jb
or
sbb
sahf
imul
fidiv
xor
xor
fldcw
add
dec
pop
jbe
cmc
adc
or
push
pop
ror
in
xchg
jbe
fiadd
and
add
add
pop
xchg
push
push
add
fisttp
sbb
fs
adc
idiv
clc
xor
fs
inc
imul
adc
jns
pop
gs
push
cwde
xor
push
mov
or
adc
dec
popa
dec
jne
dec
or
mov
jb
jb
jb
sub
push
ror
imul
push
sbb
mov
xlat
and
inc
sbb
push
cmp
jg
mov
xor
jo
and
aaa
jo
aaa
stc
out
aam
or
jge
mov
sub
aas
inc
outs
cmp
inc
pop
mov
ror
or
mov
mov
repnz
push
add
or
jns
ret
jns
js
icebp
fistp
jle
push
icebp
test
push
adc
or
outs
xchg
lods
outs
or
jns
daa
stc
leave
imul
movs
das
ins
xchg
add
dec
pop
and
mov
repnz
add
inc
popf
lock
rol
fisttp
test
repz
xor
pusha
ret
iret
fwait
das
enter
sahf
inc
into
push
inc
push
sbb
xor
push
push
(bad)
add
popa
push
or
mov
dec
call
test
cmp
scas
jge
fisttp
in
push
clc
inc
push
xor
add
mov
rcl
js
les
jle
push
inc
jle
fbstp
cld
pusha
outs
push
enter
or
lods
adc
data16
movs
sbb
add
popa
mov
ror
and
jmp
adc
sub
or
loop
ror
xchg
sub
or
add
pop
clc
int
sub
dec
jae
sub
outs
sub
adc
add
inc
inc
sub
movs
in
add
pop
add
ficom
and
popa
and
cmp
inc
inc
mov
bound
cmp
and
xor
inc
stc
stc
inc
fild
jnp
sub
xor
push
in
outs
adc
sbb
xor
push
mov
xlat
push
repnz
pop
push
fistp
adc
aad
pop
and
inc
add
clc
je
sub
pusha
enter
xor
push
pop
js
adc
jo
pusha
or
xor
shr
daa
dec
outs
cmc
and
inc
sbb
ficom
add
test
lea
pop
movs
add
nop
rcl
js
adc
xchg
jo
add
ja
mov
xor
(bad)
rcr
or
cmp
dec
push
call
cmc
lea
test
(bad)
icebp
or
push
dec
sbb
cpuid
shr
fs
repz
test
call
clc
cmp
pop
dec
sbb
fstp
loop
dec
jl
push
je
jb
iret
push
mov
and
pop
and
std
daa
test
dec
inc
adc
(bad)
dec
cmp
jmp
out
push
repz
or
popa
mul
and
xor
fiadd
fs
sbb
xor
adc
mov
mov
xor
clc
add
add
and
stos
jo
clc
cwde
add
jns
stos
(bad)
cli
jae
push
movs
push
or
sub
sub
and
imul
pop
cmc
add
push
rol
xlat
pop
push
ret
popf
test
or
rol
add
js
cmp
or
push
push
test
inc
imul
mov
push
jb
retf
or
test
jge
pop
inc
dec
and
inc
adc
adc
vpmacswd
adc
add
add
sub
sbb
sbb
xor
fcomp
adc
daa
adc
push
add
fisttp
add
in
sub
retf
push
or
and
or
jne
push
stos
sbb
inc
jmp
dec
jge
add
sbb
fbld
or
xor
xor
or
jb
xor
retf
cmc
sbb
inc
xor
xor
jno
ret
xor
adc
xor
cmp
xor
sahf
(bad)
(bad)
xor
xor
push
ja
test
sbb
sti
test
or
push
(bad)
mov
adc
div
std
lahf
sub
pop
pop
popa
push
leave
jno
xor
pusha
pop
jo
cmp
xor
and
inc
(bad)
dec
in
rcr
sub
push
mov
rol
cdq
pop
arpl
ja
push
sub
cs
cmp
pop
ret
adc
mov
movs
pop
(bad)
cmp
jno
and
or
add
add
ret
dec
jge
js
and
rcr
adc
push
jmp
and
dec
xchg
adc
mov
xchg
repz
sbb
pusha
inc
or
xor
push
dec
pop
xor
push
inc
cmp
(bad)
dec
inc
(bad)
js
push
xchg
loop
imul
inc
movs
test
xchg
sbb
(bad)
mov
push
(bad)
cdq
pop
jmp
outs
cmp
xchg
dec
or
push
pop
push
xlat
fsubr
xor
fcomi
or
push
adc
ins
and
enter
pop
or
outs
cmps
add
push
inc
dec
jecxz
cmp
jo
out
push
rcl
movs
mov
test
ss
pop
push
xor
lock
jns
push
loopne
ds
mov
loopne
call
fdiv
(bad)
or
pushf
push
or
test
push
add
scas
or
inc
cmps
loope
sub
ins
jns
pusha
sbb
inc
fwait
and
inc
out
and
and
stos
dec
sub
add
add
or
sbb
jbe
pop
dec
xor
push
xor
mov
lahf
xor
cmp
cmp
dec
out
call
cs
repz
add
mov
icebp
push
dec
push
cld
adc
mov
mov
adc
adc
sbb
inc
lock
lods
adc
ret
bound
arpl
xchg
and
(bad)
dec
dec
in
cmp
add
and
mov
mov
ja
repnz
adc
popa
ins
mov
push
mov
pop
or
add
xor
add
mov
cmp
cli
pop
add
data16
xor
mov
je
adc
push
loope
push
jo
movs
mov
sahf
aas
or
leave
fwait
cmp
and
sub
vcvtpd2ps
shl
or
call
or
dec
stos
inc
inc
(bad)
fbld
scas
data16
xchg
mov
push
jns
stos
std
dec
fist
adc
aas
fisubr
xor
mov
jecxz
mov
xchg
or
adc
and
push
add
add
movs
addr16
add
es
add
pop
rol
mov
pusha
adc
add
clc
cmc
data16
mov
sti
(bad)
stc
push
or
cwde
sbb
mov
xchg
fdivrp
ss
idiv
or
shl
rol
les
jmp
iret
sub
sub
pop
lods
mov
cmp
xor
arpl
(bad)
ret
jle
add
mov
or
sar
sub
inc
push
sti
lods
cmp
mov
not
jb
pusha
xor
sbb
push
push
push
vmread
xor
xor
mov
movups
mov
(bad)
fstp
and
push
cmp
cs
or
jne
inc
rol
sub
jno
add
test
jo
int
ins
rol
push
or
sbb
push
ret
mov
jne
rol
in
pop
sbb
mov
fmul
or
inc
mov
pop
push
jnp
(bad)
push
sub
ins
sub
das
add
mov
fstp
pop
adc
std
imul
push
(bad)
adc
jb
daa
outs
dec
sub
cwde
or
es
das
fstp
mov
push
or
fsub
xor
mov
pushf
iret
pop
int
sbb
in
jmp
and
retf
mov
push
hlt
jle
imul
jo
(bad)
mov
das
lods
loop
or
or
xchg
sbb
gs
sub
movs
ja
sbb
mov
adc
pop
add
adc
push
adc
retf
inc
mov
outs
pop
ja
mov
push
mov
(bad)
add
xor
add
lods
fistp
test
or
or
mov
shr
test
pop
aam
inc
sbb
and
dec
or
inc
(bad)
inc
adc
dec
sbb
daa
mov
sbb
mov
pop
hlt
or
mov
fucomi
das
or
imul
and
aam
adc
jecxz
aam
mov
(bad)
sub
outs
xlat
xor
jmp
cdq
fisttp
xor
lods
test
or
or
push
js
clc
(bad)
dec
pop
adc
jns
mov
lock
pusha
and
push
pop
xor
sbb
xchg
rcl
sbb
iret
lds
mov
mov
js
or
fs
inc
mov
mov
out
mov
xor
xchg
push
int
or
push
lds
cmp
or
adc
adc
xor
rol
iret
add
bound
adc
pop
test
clc
or
aam
pop
movlhps
in
pop
push
clc
push
cmp
out
push
loope
shl
adc
in
xor
clc
ror
fsubr
mov
push
rcl
sbb
in
test
ins
das
lock
or
je
mov
xlat
xchg
bswap
movups
xor
rcr
arpl
cmp
mov
ins
fld
pop
jge
push
add
popf
loopne
add
mov
add
add
add
add
in
and
(bad)
sbb
div
mov
call
mov
movzx
imul
mov
adc
pop
add
cld
lar
inc
rol
ret
stc
push
jne
(bad)
push
(bad)
sbb
add
ret
(bad)
xchg
add
push
rcr
jne
(bad)
into
jl
fdiv
inc
loopne
ret
test
jg
clc
std
push
pushf
pop
shr
test
or
add
pop
stc
sub
adc
into
jl
adc
pop
push
push
or
add
push
sub
adc
sub
lea
lea
jb
mov
pop
loopne
mov
add
movs
nop
ror
loope
daa
push
out
mov
xchg
(bad)
clc
push
add
add
xchg
call
loop
sbb
rol
adc
add
movs
loopne
mov
cs
add
retf
in
lahf
cmp
jge
inc
add
out
mov
or
stc
cs
push
mov
pop
jnp
scas
add
push
adc
push
and
loope
inc
push
and
rcl
aas
(bad)
fld
xchg
test
enter
inc
adc
xor
cmp
push
icebp
clc
mov
pop
mov
push
rol
iret
mov
inc
sub
fs
mov
mov
loopne
shl
fimul
inc
sub
jo
imul
pop
les
dec
mov
pop
ins
add
pusha
cmp
sub
retf
adc
push
jl
idiv
sub
sbb
das
add
mov
jo
mov
inc
adc
pop
adc
or
or
retf
fimul
dec
jge
adc
dec
and
sbb
ficom
lock
push
call
hlt
aas
adc
adc
jae
adc
or
add
xlat
inc
inc
and
sti
stc
or
sbb
je
jne
and
sbb
sti
jo
jo
call
push
sbb
test
out
lods
cmp
cmp
pop
out
in
mov
mov
adc
movs
jp
mov
dec
js
jb
sbb
sub
mov
or
dec
dec
jmp
loope
(bad)
fiadd
loope
sub
dec
xor
es
popa
sbb
add
mov
push
add
adc
or
add
bound
cwde
and
cwde
or
or
cwde
js
add
ret
in
pop
cmp
fbstp
add
adc
imul
dec
pushf
push
fisttp
pop
add
push
add
dec
daa
movs
mov
aaa
fsub
pop
aaa
add
push
inc
movs
xchg
jo
ins
(bad)
imul
test
jne
test
fadd
inc
out
(bad)
push
mov
bound
test
add
mov
jae
xor
pop
push
call
mov
push
dec
test
pop
ds
inc
xor
sbb
popf
aad
adc
jne
pop
mov
test
imul
pop
mov
jmp
add
or
(bad)
rcl
xlat
data16
sbb
pop
pop
scas
es
pop
das
adc
push
outs
cmp
dec
add
dec
lahf
sbb
xor
and
jle
sub
push
sbb
stos
adc
retf
add
icebp
imul
add
push
pop
cmps
xor
outs
ja
xchg
pop
or
loopne
retf
or
mov
add
shl
xchg
test
push
jo
lds
fnstsw
(bad)
out
fstp
inc
cvtps2pd
js
push
adc
data16
dec
fadd
gs
mov
mov
add
add
fcomp
or
and
jge
sbb
sbb
push
mov
push
shl
ja
mov
jo
fwait
add
pop
or
pop
jae
in
(bad)
lock
add
or
push
jo
into
fwait
jge
or
das
daa
push
sub
popa
add
pop
sbb
mov
ds
mov
adc
sbb
dec
inc
push
mov
popa
test
das
sbb
daa
ss
push
das
cs
nop
mov
and
inc
nop
ror
ins
rcl
lds
movs
and
xor
mov
pusha
scas
mov
push
cdq
push
jb
add
mov
test
test
or
sbb
sbb
loopne
inc
pop
pop
or
adc
jo
dec
fild
loop
daa
xchg
inc
pop
test
or
or
jo
(bad)
les
or
or
mov
push
cdq
mov
push
bound
or
sbb
shr
(bad)
int
sub
add
mov
push
add
or
iret
test
adc
or
test
popa
sti
adc
or
mov
stc
and
and
les
jno
test
pop
aas
pop
cmp
imul
and
test
push
pavgb
rol
imul
cmp
push
mov
cmp
sbb
sub
mov
mov
jge
jne
lock
nop
call
inc
jl
inc
and
and
loope
adc
or
xor
and
inc
add
mov
(bad)
lea
(bad)
adc
xchg
(bad)
clc
or
dec
or
dec
jecxz
mov
dec
fcom
or
jmp
rol
jnp
mov
cld
xor
and
or
jl
cmp
jl
(bad)
push
or
fcomp
inc
push
and
adc
or
inc
or
inc
adc
mov
sub
test
push
push
push
ins
jnp
mov
imul
add
not
and
call
in
mov
cmp
in
sub
mov
aam
ins
push
aam
jb
clc
dec
jbe
iret
clc
mov
sbb
xor
cmp
adc
cmps
jbe
add
bswap
enter
jns
jmp
ja
in
out
push
xor
and
(bad)
mov
sub
shl
ret
mov
cwde
dec
xor
xor
add
inc
aaa
retf
push
cmp
jne
test
es
adc
inc
adc
call
xor
and
ss
movs
mov
dec
mov
int
(bad)
sti
mov
mov
add
pop
jmp
test
inc
or
inc
or
push
inc
adc
adc
xchg
jge
test
imul
inc
dec
retf
push
push
xlat
test
or
jge
outs
xor
in
sub
inc
int
aas
sbb
jbe
shl
xchg
push
pusha
jmp
push
idiv
scas
dec
mov
and
div
mov
rcl
dec
cli
add
add
cmp
jge
add
xor
and
mov
jnp
loopne
jmp
inc
sbb
or
sub
icebp
pusha
(bad)
push
push
cli
retf
sub
add
xchg
sub
push
xor
push
sbb
mov
mov
test
adc
rcl
mov
pop
or
inc
pop
dec
cmp
mov
call
mov
movs
dec
pop
or
mov
adc
xor
push
or
fisub
fwait
sbb
push
ret
xchg
rcl
in
jge
xchg
pop
inc
pop
push
clc
adc
ja
or
inc
cmp
cld
pop
inc
adc
cmp
xchg
add
add
cmp
add
out
lods
loop
inc
xchg
and
dec
and
test
inc
push
ror
hlt
xchg
jbe
xor
mov
dec
adc
fcom
xchg
push
adc
or
lods
dec
ja
or
popa
cs
pop
xor
adc
mov
inc
sub
gs
test
ss
retf
cmps
icebp
cs
pop
dec
jno
adc
adc
jo
jns
adc
call
rol
mov
ins
sub
add
pop
ret
(bad)
pusha
(bad)
lock
dec
sub
lahf
adc
mov
mov
mov
lea
ins
ficom
push
mov
mov
push
or
add
out
add
adc
jp
mov
cld
push
movs
and
mov
or
mov
pusha
inc
mov
pop
xor
dec
retf
cmp
pop
hlt
sar
mov
in
sahf
sbb
add
out
pop
push
retf
js
or
adc
rol
lea
add
adc
xor
adc
push
push
pop
pop
pop
pusha
adc
pop
mov
inc
xchg
leave
imul
jne
call
add
xchg
mov
xchg
or
dec
mov
rcr
add
push
xor
rcr
ror
neg
(bad)
in
repnz
or
(bad)
xor
mov
add
(bad)
jmp
call
sub
push
inc
ret
and
add
adc
cs
add
ffree
(bad)
cld
ds
push
adc
pusha
dec
or
push
sbb
dec
(bad)
je
pop
sbb
cmp
cmps
aaa
sti
sbb
lods
daa
pop
es
das
push
inc
(bad)
and
adc
(bad)
cmp
into
adc
ins
add
add
cmp
jecxz
gs
sub
pop
sbb
jae
ins
and
add
jge
into
loopne
arpl
cmp
inc
in
fwait
and
aaa
add
es
fld
in
es
mov
sub
(bad)
jl
test
(bad)
cmp
xchg
gs
dec
xchg
sbb
adc
lea
pop
add
jmp
xor
mov
test
mov
cmp
sti
das
or
rol
icebp
loop
adc
push
lock
xor
add
sub
sbb
cs
xchg
test
sub
jl
sub
cmp
inc
inc
fdiv
mov
pop
push
icebp
mov
lea
call
ret
add
mov
xchg
sub
es
mul
sbb
das
dec
push
push
(bad)
push
test
cmp
push
aas
dec
or
mov
push
pop
ds
mov
mov
nop
adc
daa
xchg
jl
adc
sbb
sbb
outs
and
ins
and
inc
cmp
sub
or
sbb
jns
xor
xor
xor
or
outs
ja
cmp
lea
fiadd
wrmsr
xchg
push
push
cmp
dec
xor
mov
sub
xchg
push
std
and
sub
sbb
push
mov
add
rcl
lds
nop
sub
repz
fsubr
mov
in
and
and
and
mov
and
inc
pop
retf
bound
add
sub
(bad)
in
mov
push
shr
and
out
mov
mov
pop
rol
inc
inc
je
dec
push
daa
adc
or
and
xlat
stc
or
sbb
sbb
xor
mov
popa
popa
ja
and
daa
fcomp
in
fisubr
ja
daa
sub
daa
(bad)
xor
daa
xor
or
in
or
and
and
rol
and
imul
push
jno
dec
sbb
inc
pop
adc
popf
xor
jecxz
xor
jbe
jae
jb
enter
cs
cs
jle
sbb
mov
or
xor
inc
stos
push
(bad)
push
cmp
push
mov
lods
push
dec
lea
ds
stos
push
dec
jno
stos
inc
xor
gs
or
xor
pop
cmp
cmp
dec
xor
loopne
out
das
and
inc
dec
aas
aam
mov
in
loopne
mov
xor
das
sbb
andps
adc
test
fild
sbb
leave
loope
add
gs
fdiv
xchg
xor
in
das
cli
xor
daa
adc
or
or
jge
inc
push
or
xor
pop
mov
dec
enter
in
pusha
xor
xor
int
clc
das
push
xor
inc
dec
mov
xor
das
xor
jns
pop
pop
xor
or
imul
leave
pop
(bad)
cmp
scas
lock
xor
imul
cmp
jl
xchg
inc
pop
dec
int3
dec
hlt
dec
push
push
adc
push
hlt
dec
(bad)
sbb
ret
push
adc
test
ja
dec
adc
daa
test
test
nop
inc
test
test
test
cmp
pop
ficom
movs
jno
push
xor
ins
jno
inc
jo
in
repnz
addr16
push
dec
xor
mov
jns
xor
push
cmp
xor
aad
mov
imul
or
bound
jnp
cmp
jnp
inc
and
and
or
test
add
lahf
pop
mov
mov
icebp
sub
xor
aaa
aas
cwde
dec
je
jne
and
sub
das
push
cmp
add
loop
rcl
inc
xchg
cmp
push
call
or
push
dec
sub
mov
dec
xor
push
mov
push
dec
sub
mov
cmp
mov
enter
cmp
push
xor
movs
jmp
fs
jns
cmp
imul
xor
jmp
push
mov
lahf
xor
xor
rol
cmp
xlat
das
adc
add
inc
or
ja
mov
pop
mov
mov
push
loope
icebp
push
add
shl
fsubr
push
adc
jge
inc
pop
jae
sub
push
mov
mov
add
mov
mov
test
pop
lock
push
push
add
fcmovb
push
inc
xor
bound
mov
adc
aaa
add
nop
mov
cwde
aas
lahf
cvtps2pi
fsubr
add
adc
and
adc
sti
or
and
fstp
mov
mov
cmp
jl
or
jge
inc
repnz
xor
mov
push
xor
popa
sar
pop
fwait
pop
jl
rol
popf
ss
retf
push
or
adc
nop
adc
or
ret
jno
push
or
xchg
cmc
adc
sbb
and
and
xor
xor
cs
or
add
test
pop
sar
movs
or
sar
mov
add
and
mov
adc
int
(bad)
sbb
xchg
sbb
xor
sub
pushf
sbb
and
xor
enter
xor
xor
add
push
push
imul
mov
movs
sub
pop
lock
mov
je
cmp
mov
cmp
mov
mov
enter
xor
dec
mov
ins
cmp
out
test
std
scas
daa
mov
jnp
cdq
ins
mov
xor
mov
test
sub
xor
jle
mov
jnp
fisub
mov
mov
mov
jmp
adc
cmp
xor
stos
inc
pusha
sbb
out
and
ja
xchg
retf
in
sbb
xchg
inc
sbb
inc
cmp
mov
and
dec
xor
xchg
pop
jb
cmp
inc
adc
and
mov
mov
xor
scas
adc
and
xor
xchg
push
adc
xchg
lea
jne
stos
fldenv
lods
xchg
nop
lods
add
daa
xor
ret
mov
pop
jno
mov
and
xor
cmp
mov
dec
mov
add
sbb
pop
or
sub
or
mov
push
nop
add
and
add
inc
sub
add
shufps
daa
sbb
pop
xchg
dec
rol
sbb
and
xor
and
sub
ret
and
mul
inc
nop
xchg
mov
sar
test
mov
cmp
fwait
xchg
popa
pushf
leave
clc
mov
test
jge
xor
jmp
rol
or
cmp
dec
shl
pop
xchg
xor
push
mov
sbb
clc
jmp
sbb
ja
mov
sub
xor
push
dec
call
mov
adc
fwait
clc
sbb
adc
sub
mov
lods
dec
jo
fdivr
enter
lock
xchg
in
call
fst
or
sub
push
enter
cmps
dec
cmp
xchg
retf
or
dec
cmp
js
add
and
or
inc
dec
push
inc
inc
inc
dec
push
push
jmp
and
and
stos
stos
and
and
stos
stos
stos
stos
inc
inc
cmp
sub
lea
jb
iret
jae
test
inc
add
cdq
jne
pusha
out
xchg
pop
sub
fwait
or
not
and
loopne
mov
sub
lds
mov
and
xor
leave
mov
sbb
add
mov
mov
xor
xor
in
sbb
and
and
sub
sbb
push
xor
loope
pusha
sub
sbb
mov
push
xor
rcr
and
sub
push
and
test
mov
sbb
nop
and
sub
sbb
sub
and
es
test
nop
pop
mov
xor
xchg
sub
mov
das
or
inc
les
or
or
(bad)
or
mov
add
adc
ficom
(bad)
xchg
popa
sub
or
jne
dec
mov
sub
add
cmp
inc
sbb
in
adc
xchg
fisttp
push
je
lea
adc
imul
add
add
xchg
fidiv
or
inc
add
and
push
xchg
dec
add
dec
and
cmps
jg
sbb
sbb
sbb
cwde
mov
inc
jo
mov
cmp
add
xor
test
push
mov
push
sub
add
sbb
inc
push
nop
and
nop
add
xor
sbb
xor
sub
or
xor
jno
aaa
xor
and
adc
cmp
push
cwde
or
sub
popa
cmp
dec
and
in
push
pop
cld
test
je
mov
jbe
mov
pusha
pop
add
add
sbb
mov
xor
and
clc
es
or
and
fwait
mov
pop
pop
pop
fwait
mov
outs
jg
call
(bad)
test
mov
add
ja
fst
jo
add
xor
cmps
call
xchg
(bad)
sbb
retf
sub
push
pop
add
cdq
div
jp
xor
test
xchg
adc
movs
xor
ja
mov
ret
sti
jns
leave
mov
dec
clc
das
test
dec
inc
add
and
or
mov
jno
push
fwait
ret
aaa
jecxz
lahf
dec
cli
push
mov
lahf
adc
adc
push
imul
pop
imul
mov
inc
cs
ins
or
push
enter
pusha
push
dec
add
jmp
and
add
inc
dec
dec
enter
push
push
pop
and
fs
mov
enter
js
test
inc
push
cmp
test
test
cmp
nop
test
test
cmp
nop
inc
test
test
cli
pop
push
test
cli
sbb
aaa
lds
sub
mov
jno
inc
and
pop
cli
inc
mov
cvtps2pd
xchg
mov
inc
push
fs
outs
mov
push
in
gs
stos
fbld
bound
or
mov
push
inc
adc
inc
jmp
dec
inc
sbb
nop
retf
and
in
enter
pop
xor
xor
cmp
pop
push
push
pop
aaa
push
or
add
and
sub
mov
xchg
and
push
xor
in
pop
and
cs
leave
push
add
mov
xor
xor
xor
mov
xor
mov
xor
xor
nop
and
cmp
push
inc
xchg
bound
mov
shr
add
adc
inc
add
(bad)
call
pop
pop
xor
cld
test
je
add
mov
mov
jbe
or
adc
out
sbb
int
iret
loop
sbb
inc
cmp
aaa
dec
clc
outs
fnstsw
sbb
adc
sar
scas
add
sar
hlt
xor
inc
or
vmovntps
outs
sahf
idiv
add
inc
inc
cmp
push
aaa
mov
sub
or
ror
ficomp
loop
xor
mov
inc
cmp
or
mov
cmp
mov
inc
dec
fistp
add
fsubr
xor
out
xchg
inc
cmp
cmp
jnp
inc
push
cmp
cmp
test
add
and
push
and
pop
popa
dec
pop
add
or
add
xchg
jmp
lods
aaa
sbb
mov
and
mov
sbb
popa
sub
inc
frstor
mov
les
lods
mov
dec
mov
mov
cmps
or
or
bound
stc
add
pop
rol
or
push
mov
or
test
push
inc
jg
sar
pop
pusha
addr16
cmp
xor
(bad)
adc
push
inc
add
call
cmps
pop
ret
add
dec
jae
gs
cli
aas
sbb
subps
fs
jne
and
pop
lock
push
sbb
nop
lea
and
cdq
sbb
jmp
repnz
add
gs
and
push
and
push
cmp
or
je
das
mov
push
int3
pop
jno
add
aam
add
xchg
ins
movs
test
outs
sbb
add
mov
or
test
adc
aam
or
sbb
test
dec
scas
cmp
test
out
pop
pop
add
pop
cmp
lds
mov
dec
pop
scas
clc
outs
fist
lods
pop
pusha
daa
ret
push
cmp
mov
mov
add
inc
scas
mov
scas
loope
xchg
lods
inc
add
adc
mov
lods
cmovbe
xchg
add
mov
popa
lods
outs
and
leave
jge
mov
shl
pop
adc
adc
cmp
arpl
inc
and
pxor
cmp
cmp
out
pop
lahf
or
(bad)
or
or
push
cdq
adc
scas
add
xor
or
xchg
xchg
add
popf
cmp
sub
sti
or
dec
mov
xor
add
cdq
pop
sub
jmp
js
arpl
rcr
sbb
or
mov
xor
or
cwde
sbb
cmp
jne
cmp
mov
push
add
dec
sbb
add
(bad)
jp
popa
cmp
pop
adc
or
push
loop
jg
jns
pop
cmp
inc
mov
or
mov
pop
psubw
add
or
mov
fidiv
sub
or
pop
sti
jmp
pop
adc
outs
ret
fild
lea
push
sbb
pusha
or
or
push
mov
dec
jmp
(bad)
and
xchg
cmp
js
adc
mov
adc
jmp
mov
mov
cmp
push
inc
sahf
retf
adc
sbb
sbb
xchg
jmp
mov
enter
iret
add
push
fiadd
stos
mov
xchg
mov
mov
std
and
inc
shr
call
retf
es
push
sbb
or
outs
jno
mov
push
inc
push
dec
adc
pop
bound
push
adc
push
push
inc
pushf
cdq
call
add
sbb
pop
or
adc
mov
jo
adc
ror
or
aaa
pop
nop
shl
mov
and
test
lea
mov
mov
mov
push
push
or
mov
adc
jle
adc
dec
adc
cmps
push
fs
jmp
(bad)
add
pop
mov
ja
fdiv
jp
and
sahf
sbb
sbb
jne
sar
mov
loop
add
dec
fs
or
fimul
add
pop
sub
in
jle
cmp
sbb
mov
mov
mov
xor
pushf
test
stos
cmp
test
jle
lock
add
dec
add
or
mov
add
cmp
adc
push
and
lahf
pusha
repz
mov
mov
clc
inc
xchg
jbe
xchg
or
dec
test
add
fisttp
sub
ret
mov
jmp
mov
xchg
xchg
add
fdivr
sbb
xor
jp
cmp
jg
mov
adc
pop
loopne
in
jo
das
and
hlt
pop
add
(bad)
push
aaa
pusha
ret
loopne
arpl
jp
in
add
add
add
leave
add
mov
xchg
ins
arpl
mov
jne
and
sbb
jp
aas
pop
popf
mov
pusha
nop
push
add
mov
mov
int3
xchg
nop
cs
mov
sub
dec
dec
jl
inc
or
jne
(bad)
mov
push
adc
arpl
add
test
xor
pop
xchg
out
adc
(bad)
fdivr
or
push
push
add
jo
mov
jne
push
dec
mov
push
aam
jp
push
cld
retf
je
xchg
test
je
cmp
fsubrp
aad
push
ror
(bad)
out
add
push
xchg
loopne
jnp
ja
mov
add
ins
ins
(bad)
cmp
jmp
and
je
(bad)
cmc
inc
stos
dec
(bad)
hlt
sti
aam
mov
mov
pop
add
ins
xor
push
add
stos
mov
push
pop
dec
mov
scas
mov
add
pop
cs
adc
and
lds
cmp
adc
call
dec
mov
aam
cmp
xchg
push
mov
add
sbb
leave
push
push
out
gs
lock
pop
addr16
push
bound
ret
shl
mov
scas
mov
mov
js
fld
lea
and
or
mov
inc
cld
add
adc
xlat
pop
mov
lahf
popf
xor
sahf
xchg
xchg
out
or
add
add
xchg
out
add
add
mov
push
xor
mov
push
imul
aad
cmp
in
sahf
inc
sbb
pop
add
xchg
rcl
clc
jg
cmps
xor
(bad)
mov
and
rol
rol
fdiv
mov
push
jae
shl
in
test
scas
scas
sub
sbb
mov
movs
addr16
xor
or
xchg
jb
out
mov
aaa
out
sahf
out
inc
cs
popf
xchg
cmovnp
mov
mov
adc
call
pushf
pop
push
add
lock
daa
pusha
adc
push
mov
ficomp
fsubr
mov
lock
cs
and
lock
dec
sbb
clc
jmp
inc
jmp
movs
(bad)
cmp
mov
je
dec
je
test
jns
adc
pushf
enter
into
jbe
out
call
ret
pop
sub
(bad)
adc
sbb
inc
inc
hlt
or
adc
inc
call
xchg
pop
push
dec
cmp
dec
pop
imul
ds
mov
add
pop
adc
push
pop
sub
pushf
xchg
je
aaa
mov
xor
enter
jl
xor
cmp
xor
bnd
adc
ss
cwde
ret
inc
dec
pop
out
movs
xchg
ror
and
(bad)
jg
or
push
adc
lods
test
dec
xchg
jns
jecxz
outs
or
push
and
fldl2t
jmp
arpl
lock
in
sar
imul
cmp
mov
xlat
mov
fmul
out
push
dec
sub
jmp
out
xchg
retf
or
dec
jb
stc
sub
jae
cmp
movd
or
push
shl
mov
add
xchg
jmp
add
arpl
add
or
xlat
aaa
lock
in
adc
or
adc
pop
in
jge
in
mov
mov
pop
or
jge
and
test
out
jl
jge
lock
push
adc
jne
jmp
lods
add
add
mov
sahf
loopne
lds
push
fadd
xor
out
aaa
aaa
repnz
aam
in
lea
add
pop
fwait
jmp
test
inc
mov
ds
inc
add
push
lea
push
rcl
loopne
ret
test
popa
or
out
add
or
loopne
out
jp
mov
lock
call
add
adc
sbb
fist
sbb
lea
and
(bad)
pop
xor
lahf
ss
in
mov
inc
add
or
sbb
loopne
loope
xchg
retf
(bad)
lock
mov
adc
sbb
pop
call
pushf
adc
or
pop
adc
popa
lods
int3
or
inc
or
and
add
xor
sbb
or
add
adc
cmp
stos
add
in
cmp
inc
dec
stos
outs
inc
(bad)
icebp
adc
add
adc
mov
and
adc
pop
or
loopne
adc
jne
or
loope
push
pop
call
lea
push
add
fwait
pop
jne
mov
mov
mov
add
fdivr
mov
mov
adc
xchg
aas
add
xor
jg
pop
pop
lock
(bad)
adc
icebp
hlt
xchg
inc
sub
ja
(bad)
adc
int3
jbe
jnp
test
add
or
pop
int3
push
add
pop
sub
cld
cmp
xor
jmp
lea
lock
dec
add
adc
cmp
jne
push
dec
add
dec
js
pop
pop
adc
rol
cmp
cmp
loopne
inc
jl
or
jmp
mov
loop
add
dec
dec
shl
inc
xor
test
sti
adc
mov
and
add
dec
push
cmp
mov
shl
cmp
dec
pop
or
pop
pop
sbb
adc
repz
call
pushf
mov
cmp
pop
mov
inc
fsub
dec
push
mov
jp
cmp
into
jecxz
mov
lock
mov
adc
dec
inc
dec
add
test
mov
clc
rcr
mov
test
and
aas
int3
xchg
adc
mov
ret
(bad)
mov
jmp
stos
test
mov
or
inc
je
cmp
mov
inc
xor
sbb
push
add
daa
or
mov
add
inc
pop
cmp
popa
dec
mov
pop
stos
pop
loope
daa
fidivr
xor
push
xchg
and
inc
outs
pusha
in
dec
dec
sbb
push
adc
dec
outs
sub
add
lahf
mov
jne
jmp
add
mov
add
mov
or
(bad)
loop
xchg
(bad)
cli
dec
push
cmp
or
rol
ret
ds
fimul
adc
push
aas
pop
pop
add
jg
and
(bad)
fcmovb
add
jne
movs
add
add
cmc
and
pop
ds
xchg
lock
js
jo
cmp
test
fnstsw
in
pusha
or
push
and
or
xor
dec
or
mov
mov
call
dec
add
popa
inc
cs
ins
lea
sbb
push
pop
aaa
cdq
hlt
div
test
sbb
lahf
aaa
or
pop
sbb
sub
clc
adc
cmp
inc
dec
xchg
loopne
(bad)
jl
pop
adc
jge
push
jbe
dec
add
push
(bad)
loopne
sub
sub
inc
retf
aas
and
jo
pop
das
jno
cmp
out
push
pop
ret
nop
nop
out
rcl
cmp
sbb
or
in
inc
and
lahf
dec
clc
mov
mov
mov
shr
push
ret
loope
test
push
rcr
adc
add
or
push
fcomip
popa
test
add
mov
push
jb
mov
rcl
dec
leave
pop
jb
pop
mov
inc
fisttp
mov
mov
adc
sti
xchg
sbb
out
inc
add
dec
pop
mov
jne
outs
cli
mov
add
call
clc
call
mov
sub
push
jg
and
retf
test
repz
and
jae
pop
cmps
bound
cmp
mov
xchg
push
icebp
bound
sub
jl
jns
in
test
adc
ror
jecxz
inc
cmp
jg
mov
or
inc
fs
add
add
and
push
or
push
adc
mov
mov
js
lock
sbb
aas
int3
adc
repnz
dec
cmp
jne
inc
mov
mov
stos
sub
ss
je
push
jg
sbb
pop
push
lock
mov
cli
add
out
mov
jo
fld
jbe
ja
js
add
push
dec
push
ficom
in
popa
and
or
mov
call
or
add
adc
aas
inc
add
adc
mov
pop
js
cmp
sbb
movs
push
cmp
or
push
add
inc
test
movs
mov
out
mov
and
and
js
push
xchg
jo
adc
out
push
cld
dec
mov
daa
pushf
adc
test
je
mov
mov
(bad)
fcmove
push
add
pop
xor
inc
or
sub
dec
cmp
jmp
add
cmp
jne
pop
jbe
xor
sbb
cmp
ror
shl
ret
es
loopne
out
dec
js
push
fisttp
stos
adc
jne
aam
inc
loope
add
sysret
inc
jo
loopne
outs
sbb
cmp
xchg
jbe
retf
dec
mov
push
jbe
or
fsub
and
xor
xchg
xchg
stos
pusha
sbb
repz
pusha
add
mov
add
sub
dec
adc
or
movs
cmps
sub
pusha
je
add
sbb
fist
ret
loope
dec
es
inc
or
cli
xlat
ffree
sub
mov
push
inc
dec
dec
sub
repnz
adc
call
cld
pop
jl
pop
hlt
push
shl
movs
inc
or
aad
cmp
jne
cmp
dec
sub
mov
sub
stos
lods
mov
ret
cmp
jbe
mov
push
inc
inc
sbb
icebp
inc
cmp
and
and
repz
pop
call
inc
out
push
lock
push
mov
push
lock
adc
push
and
and
push
sub
jbe
jmp
or
or
mov
dec
out
jmp
test
inc
xor
add
shr
fstp
lods
mov
xlat
inc
pop
inc
mov
inc
mov
bound
sub
lahf
icebp
add
in
stos
or
arpl
mov
mov
pop
mov
or
and
ins
cmp
add
push
add
adc
inc
or
fnstsw
pop
mov
inc
and
inc
add
dec
cmp
push
loopne
mov
push
add
pop
pop
adc
mov
mov
adc
xchg
mov
mov
add
pop
data16
pop
mov
mov
jmp
inc
jo
jo
movlps
popa
outs
idiv
add
loop
(bad)
xchg
dec
fdivr
mov
cmp
xor
add
inc
or
jo
fcomp
xor
ds
and
push
mov
scas
aam
add
mov
pusha
int3
das
(bad)
jp
popf
mov
xchg
nop
fadd
shl
push
cmc
jle
or
pop
cmp
ins
pop
inc
out
mov
or
cld
mov
in
xor
push
stc
mov
sti
or
outs
rcl
and
push
or
lds
and
cmp
jne
imul
and
adc
sbb
push
jnp
add
and
pusha
test
pushf
push
add
imul
shr
sub
or
jecxz
fsubrp
outs
add
add
in
rcr
add
jbe
sbb
sub
mov
push
lea
jmp
adc
sub
push
in
test
in
mov
in
mov
sub
fwait
xor
and
cli
cmp
addps
mov
inc
jl
cmp
and
gs
js
iret
xchg
icebp
retf
mov
push
add
test
mov
sar
enter
add
inc
push
pop
pop
jne
lock
jnp
je
mov
mov
add
cdq
mov
jle
popa
xor
sbb
add
daa
pusha
test
retf
cmp
sub
mov
push
sub
jge
mov
cmp
jg
cmp
xor
cs
mov
sbb
ret
adc
scas
xor
mov
hlt
xor
(bad)
dec
popa
jbe
sbb
jge
fwait
jp
lahf
mov
jp
pop
fisubr
add
lahf
cmp
out
sahf
xchg
in
cwde
hlt
cld
add
push
or
in
das
ins
out
push
jle
dec
jle
jle
call
or
sub
pusha
jg
shl
pushf
jle
pop
jmp
sbb
jnp
cmp
cmp
or
fistp
sbb
adc
imul
mov
mov
add
std
dec
sbb
mov
sub
pop
cwde
repz
das
sar
adc
xor
lea
mov
in
mov
jge
fild
repnz
jbe
inc
add
add
inc
mov
ja
mov
and
dec
push
mov
mov
sbb
push
pusha
lods
or
mov
inc
sbb
ins
aam
cmp
ret
sbb
js
push
add
sub
sbb
aaa
inc
push
push
mov
sahf
out
mov
push
add
into
(bad)
or
into
inc
addr16
mov
add
test
xor
push
dec
xor
xchg
add
test
out
jo
popa
add
inc
sub
addr16
xor
loopne
dec
popa
sti
jnp
test
jb
inc
mov
mov
and
stos
or
cmp
xchg
pop
and
adc
dec
sbb
mov
bndstx
jge
sbb
aam
or
mov
xlat
mov
xchg
adc
inc
xchg
push
or
inc
mov
or
lea
push
mov
sbb
sbb
inc
in
and
jmp
test
adc
or
inc
imul
in
rcr
lods
adc
and
sub
mov
es
das
jmp
inc
pop
shl
bound
inc
push
xchg
xchg
jbe
xor
nop
or
dec
adc
sub
ins
ja
mov
or
xlat
xor
inc
inc
dec
inc
pop
and
cmp
std
add
inc
push
mov
and
dec
and
or
dec
sbb
test
jecxz
rol
or
sbb
test
xchg
xor
test
imul
dec
inc
xchg
sub
dec
add
das
cwde
and
ds
movs
sbb
pop
adc
push
(bad)
adc
pop
fild
add
inc
popa
in
leave
movs
clc
inc
mov
adc
jg
loop
push
pop
fdivr
rcr
test
adc
dec
popf
pop
jno
mov
jo
les
push
inc
stos
lock
pop
push
sbb
and
inc
xor
adc
sbb
rcr
sub
dec
and
cmp
or
js
je
inc
xor
xor
push
push
mov
rcl
adc
pusha
and
jnp
jne
outs
add
add
and
sbb
ins
adc
sbb
mov
jp
adc
(bad)
pusha
add
push
or
cld
mov
and
fmul
mov
and
sub
lods
or
inc
loopne
and
xor
stos
ss
mov
(bad)
in
neg
push
add
bound
or
inc
mov
aaa
push
adc
adc
ja
inc
adc
sub
sbb
pop
pop
and
or
mov
fstp
pusha
fcomp
jbe
jmp
or
jmp
xchg
pusha
jmp
icebp
hlt
push
mov
push
(bad)
xlat
sbb
sbb
xor
sub
mov
and
inc
cmp
jle
out
or
cmp
push
popf
call
pop
je
pusha
je
push
add
mov
lock
xor
cmp
jo
test
jl
xchg
nop
loopne
popf
sub
inc
lods
ja
jo
add
mov
jg
or
into
in
jle
cmp
jge
mov
or
add
cmc
push
scas
or
add
sub
add
call
inc
xor
jmp
fisttp
xor
xor
jb
jg
fdivr
push
mov
enter
sbb
es
das
pop
popa
and
inc
mov
movs
mov
add
adc
xchg
and
fbld
call
cs
jae
jnp
inc
dec
in
jmp
and
pusha
add
loopne
mov
in
sub
adc
les
mov
mov
jnp
push
or
inc
rol
shl
or
dec
adc
cmp
mov
inc
jns
add
sbb
lods
sub
push
sub
ja
shl
(bad)
sub
adc
mov
cmc
mov
jp
outs
lods
fild
jb
mov
add
dec
mov
lea
cmp
mov
mov
sbb
adc
add
jmp
jnp
ja
sub
and
lea
and
sub
pop
add
mov
sub
mov
add
iret
int
jg
cmp
sub
dec
mov
dec
test
test
es
mov
add
je
mov
add
mov
jecxz
push
pop
sti
or
mov
or
aad
push
dec
inc
imul
jae
ret
daa
sbb
daa
jns
mov
mov
mov
dec
inc
into
(bad)
mov
daa
fadd
fist
(bad)
(bad)
int
(bad)
leave
and
popf
pop
inc
iret
add
iret
outs
xchg
add
dec
fsubr
call
xchg
add
rcl
mov
adc
mov
xchg
or
add
pop
mov
push
pop
outs
movs
or
aad
js
add
push
mov
sub
(bad)
pop
fadd
imul
adc
or
popa
or
xor
stos
jecxz
mov
pop
and
push
xor
mov
scas
inc
test
inc
addr16
pop
loope
or
out
(bad)
jg
push
mov
mov
sbb
jle
cmp
fistp
loope
and
shl
ja
or
bound
mov
push
sbb
adc
mov
mov
dec
(bad)
sbb
retf
neg
sub
sub
push
ja
mov
adc
add
jl
xor
pop
adc
clc
mov
jne
mov
add
mov
sar
ret
push
clc
outs
lock
sar
cmp
jne
dec
adc
xor
stc
jne
popf
push
adc
and
or
mov
jmp
imul
cmp
inc
mov
and
clc
shr
and
aas
sbb
mov
int
(bad)
and
out
(bad)
ficom
jne
and
mov
jge
inc
jle
adc
or
cs
cld
cmp
jbe
ins
jno
das
aaa
jmp
retf
cmp
daa
test
lahf
aas
jge
add
ins
cs
loope
sti
repz
mov
inc
mov
pop
add
cmp
test
push
or
ss
arpl
jle
push
lds
mov
xchg
mov
jle
adc
mov
xchg
dec
add
push
mov
popa
not
jmp
adc
lock
fs
in
sub
ror
push
jne
daa
cmp
xchg
add
sahf
or
mov
and
pop
inc
clc
popa
fisub
sbb
xor
mov
jo
fild
pusha
sub
dec
nop
mov
sbb
xchg
sub
inc
lahf
leave
(bad)
loopne
or
daa
in
arpl
and
loopne
add
pop
pop
pop
and
aas
fsubr
(bad)
cmp
dec
fcomp
xchg
mov
lods
sbb
aam
jne
jl
sub
into
and
loopne
sbb
das
int3
dec
vfrczps
pop
xor
or
js
sar
lock
mov
xor
mov
sub
sub
push
test
add
and
inc
jbe
adc
mov
mov
mov
sbb
cwde
push
in
les
cmp
xor
std
add
cmp
test
aas
xor
or
mov
lods
std
cs
imul
push
jle
add
aad
ret
xor
cmp
xor
cli
sahf
call
jne
(bad)
push
pop
inc
mov
mov
cs
data16
xor
xchg
cmps
xchg
inc
jp
loope
popf
test
movs
inc
scas
add
xchg
imul
push
sub
cmps
mov
mov
retf
mov
inc
or
rol
pusha
adc
adc
pop
push
mov
aam
push
mov
rcr
in
jb
xchg
fcom
sahf
push
mov
add
mov
inc
(bad)
shl
fisttp
aas
add
xchg
cs
add
xchg
mov
mov
mov
adc
push
sbb
and
daa
aas
movs
ins
jns
sub
pop
test
jnp
les
(bad)
and
mov
ffree
jne
sub
pusha
jecxz
push
mov
out
mov
imul
int3
lock
mov
das
lock
inc
push
mov
in
gs
jo
ss
pop
in
mov
mov
inc
fnstsw
pop
imul
retf
cmp
jg
cmp
add
fnstenv
addr16
(bad)
adc
mov
sub
clc
lods
rol
mov
jle
cmp
push
jg
scas
ror
push
sbb
pop
adc
jle
jo
xor
pop
ret
add
jb
(bad)
sti
pop
dec
add
and
rcl
xor
pop
push
lock
movs
or
mov
push
cmp
popf
dec
inc
fcmovnu
or
mov
dec
sbb
sub
jmp
add
add
add
aas
fcom
jb
inc
jge
pushf
pushf
fmul
and
jno
(bad)
or
jg
retf
and
sahf
das
and
neg
lea
rcr
mov
fcom
dec
dec
cmp
cwde
inc
or
ins
inc
call
and
es
pop
push
stc
mov
xor
or
sti
pusha
shr
push
mov
cdq
pusha
daa
inc
gs
mov
or
ret
call
enter
cmc
jg
add
shl
cwde
xor
and
shld
push
cmp
fs
add
dec
jo
push
sbb
pop
pop
mov
test
mov
mul
je
and
ret
dec
add
add
jns
mov
sbb
xchg
ret
xor
and
sub
xchg
add
add
pop
xor
sahf
(bad)
jmp
call
sti
cmp
ret
mov
or
sub
push
add
(bad)
xchg
pop
repz
ret
cs
(bad)
out
mov
adc
or
mov
lahf
add
fild
add
les
ret
(bad)
jmp
fdivp
out
je
lods
sar
daa
mov
sar
scas
add
outs
nop
cmp
or
shl
and
lds
clc
inc
push
pop
mov
mov
(bad)
mov
lds
push
mov
and
test
cmc
(bad)
jp
inc
xor
movs
inc
sbb
jmp
std
outs
jne
cs
mov
and
adc
pop
jmp
fwait
lahf
jl
out
ds
es
das
ret
scas
add
push
sbb
mov
push
bound
and
and
ret
add
pop
or
les
rcl
jmp
int
imul
jge
imul
inc
mov
cmps
cmp
xor
popa
or
inc
xor
and
add
in
outs
mov
jne
xor
in
or
jo
inc
call
gs
xor
das
mov
scas
sti
icebp
iret
cmp
pop
add
mov
js
cdq
iret
sub
repz
in
imul
and
and
dec
jmp
fwait
inc
dec
shl
gs
xlat
imul
ret
(bad)
sti
push
and
arpl
popa
xchg
out
add
pop
das
push
popa
and
lods
into
popf
mov
jnp
jo
sub
arpl
adc
enter
xor
sub
xchg
mov
adc
or
sti
add
or
loope
ins
cmp
adc
dec
or
xor
push
mov
sub
inc
mov
cmps
pop
jne
and
les
mov
(bad)
nop
mov
data16
loopne
out
inc
xor
pop
mov
(bad)
shl
add
ins
(bad)
fbld
or
mov
jmp
mov
inc
cmp
aad
xchg
mov
add
sub
mov
jg
jnp
shr
imul
jge
cmc
inc
sti
push
test
cmp
jne
dec
add
loopne
ins
push
inc
cmp
pop
push
inc
cmp
dec
cmp
pop
or
jne
mov
mov
or
jmp
or
je
add
jmp
add
sub
and
inc
pop
enter
(bad)
sbb
jmp
das
sub
sahf
retf
add
add
outs
repnz
add
fisttp
scas
fiadd
push
ds
mov
in
inc
iret
test
ins
xor
adc
test
dec
adc
int
jl
sbb
adc
pop
repz
push
and
or
adc
sub
add
adc
adc
inc
push
inc
(bad)
fcomip
inc
js
inc
sbb
fnsave
jo
adc
jo
mov
adc
mov
bound
inc
cmp
nop
lods
mov
sub
fnsave
dec
or
xor
push
push
outs
sysenter
setbe
fst
std
push
jmp
sbb
push
daa
popa
fmul
ret
addps
ret
jns
lea
inc
test
jb
mov
and
cmp
clc
out
js
ret
sub
sub
mov
mov
int3
aas
pop
test
or
jmp
mov
pop
call
sub
popa
lock
push
or
add
cmp
clc
or
add
out
test
das
pop
push
ins
xchg
fwait
mov
movs
outs
add
movs
adc
pop
adc
add
push
sub
aaa
and
bound
or
dec
and
rcr
xchg
js
push
add
xchg
ror
pop
and
cdq
xor
push
dec
cmps
sar
aad
or
cmp
jg
scas
mov
aas
or
mov
xchg
cmps
push
jle
pop
mov
int
ss
mov
and
inc
sub
cmp
jne
or
pop
inc
push
test
or
mov
inc
in
sbb
int3
inc
sub
add
pop
aaa
cmp
scas
movs
inc
xchg
pop
loope
jo
cwde
mov
jae
mov
movs
pusha
sbb
add
dec
idiv
test
inc
cmps
pusha
sub
xor
(bad)
loopne
call
mov
cmp
je
xchg
xchg
push
xchg
cdq
xchg
enter
ja
outs
xchg
sbb
fwait
clc
mov
shl
push
or
jnp
dec
popf
fcmovbe
xlat
mov
data16
fwait
and
jmp
inc
pusha
mov
jbe
mov
(bad)
dec
jge
inc
mov
bound
mov
jmp
xlat
popf
rol
movs
push
scas
add
movs
fs
push
dec
mov
lea
aad
imul
push
pop
cld
pop
and
cs
clc
popf
cld
hlt
loop
loop
jmp
or
test
retf
mov
(bad)
fs
adc
dec
(bad)
movs
adc
sub
test
lock
(bad)
icebp
pop
nop
fadd
push
or
push
jg
cmps
test
push
push
sbb
call
movs
mov
mov
clc
adc
mov
les
push
(bad)
cmp
xor
dec
cmovge
in
xlat
in
mov
bound
imul
sub
test
push
cs
pop
sbb
push
(bad)
clc
and
inc
shl
int3
loopne
inc
add
ret
test
mov
(bad)
outs
mov
sub
push
and
mov
ret
lods
sbb
or
jo
mov
mov
xor
in
mov
jnp
or
jmp
popf
rol
sub
mov
nop
add
cmp
cmp
imul
xor
movs
lods
leave
xchg
pop
arpl
pop
adc
push
or
sbb
inc
shr
or
mul
mov
inc
mov
jb
pop
jg
add
and
and
or
mov
and
inc
and
(bad)
inc
and
mov
sub
jle
and
inc
or
or
sbb
outs
adc
adc
or
stc
inc
fs
push
ins
sub
add
jno
dec
loope
jge
cwde
nop
cs
push
mov
push
xchg
outs
es
dec
dec
lahf
xor
cmp
ud2
mov
cld
mov
and
and
sbb
xor
pop
cmp
je
push
je
ret
les
loopne
or
push
dec
mov
ss
add
inc
dec
and
ss
aaa
test
fsubr
inc
adc
cmp
and
add
mov
add
xchg
(bad)
jmp
js
mov
das
jecxz
jle
pop
pop
jl
jnp
xchg
les
(bad)
repnz
add
ja
sub
call
jnp
push
(bad)
mov
add
add
and
xor
cmp
fucomip
xchg
mov
mov
pop
mov
test
jmp
fidiv
retf
out
rol
es
fadd
or
pop
sub
jmp
or
test
js
outs
je
cmps
cmps
inc
adc
ror
cmp
data16
enter
sbb
es
dec
and
fadd
xchg
(bad)
sub
sub
xor
lods
neg
add
pop
sbb
sbb
sbb
scas
or
(bad)
iret
xchg
adc
les
sar
lock
(bad)
je
and
shl
and
pop
adc
lock
imul
adc
or
fwait
xor
push
push
fwait
imul
inc
inc
popa
pusha
aaa
adc
(bad)
loopne
ret
push
push
add
pusha
icebp
pop
nop
or
pop
je
add
mov
mov
push
lods
pusha
dec
cmp
pop
mov
leave
ins
push
xor
movs
inc
sub
push
sub
jmp
loope
sbb
cwde
enter
idiv
cmp
inc
pop
pop
outs
push
fnstcw
inc
call
xchg
aam
xchg
and
arpl
int
lock
mov
mov
mov
fild
sub
ret
mov
push
pop
xor
popa
popa
data16
icebp
pop
lock
cmps
mov
xor
pop
add
jmp
or
popa
jb
cmp
mov
pop
mov
test
push
fadd
fstp
jmp
inc
jg
popa
cmp
mov
(bad)
inc
dec
push
fcom
bound
jne
fdiv
jle
xchg
dec
fisttp
push
dec
mov
push
push
(bad)
or
(bad)
cmp
(bad)
ficom
pop
fldenv
sar
dec
icebp
rcr
mov
add
shr
add
stos
clc
fwait
out
add
shr
stos
(bad)
fsubp
pop
sub
push
mov
sar
jo
loopne
cmps
cmp
ret
ins
enter
test
shl
push
jbe
dec
xlat
popf
sbb
jmp
int
or
and
or
popa
inc
pop
mov
imul
sbb
aam
int3
loop
inc
jle
js
jge
aaa
lods
add
ss
jne
out
push
add
cmp
sub
in
pop
mov
jl
in
test
lods
ds
adc
pop
dec
iret
adc
in
scas
in
xor
psllw
es
in
add
pop
gs
lock
mov
sub
push
add
add
push
nop
ret
popa
(bad)
(bad)
push
push
int3
lahf
pop
scas
or
ret
ret
cli
xchg
sub
iret
and
pop
fsub
sub
ins
sbb
lds
loop
mov
repnz
sub
fst
push
sub
es
fadd
xor
cdq
xor
fsubr
out
shr
and
xchg
jne
fstp
sbb
(bad)
jmp
shl
pop
add
shl
add
adc
sub
and
or
retf
(bad)
(bad)
fiadd
and
dec
int3
call
xor
cmp
pop
xor
test
ficomp
test
add
arpl
add
rcr
jmp
and
call
shr
inc
div
or
or
minps
repz
cmp
mov
xchg
dec
push
cmp
add
and
mov
iret
mov
xor
adc
cdq
inc
es
cld
cld
shl
inc
cld
mov
and
cld
and
or
das
sub
jmp
sub
adc
or
jmp
cmp
add
call
mov
in
mov
je
lods
pop
fs
add
xchg
sub
or
adc
jnp
in
ins
sar
dec
hlt
lock
fs
clc
mov
mov
rol
int3
mov
cmp
add
cli
cs
fs
rol
iret
mov
inc
jge
xchg
sbb
jne
or
pop
nop
dec
pop
loop
push
daa
shl
je
les
jne
or
mov
jmp
dec
mov
call
jne
dec
mov
in
popa
je
(bad)
add
fadd
call
cmps
jmp
add
sar
jmp
sbb
fld
shr
outs
ss
mov
in
jb
jge
je
les
mov
movs
dec
call
(bad)
test
loopne
adc
mov
inc
or
dec
xor
or
fnsave
movs
ftst
cmp
iret
test
loopne
push
lds
and
cmps
int3
inc
push
push
sbb
xor
mov
mov
ins
(bad)
hlt
sbb
fs
(bad)
sbb
sahf
xlat
adc
sbb
add
inc
and
(bad)
rol
mov
adc
add
pop
cmp
fdiv
fld
inc
push
cmp
and
dec
cwde
call
jmp
mov
nop
stos
test
retf
lods
arpl
or
pop
mov
sub
jecxz
in
or
les
ret
pop
xlat
or
and
push
ja
sbb
lea
and
sbb
inc
sub
or
adc
loopne
sub
xor
inc
inc
bound
stos
add
in
idiv
xchg
mov
pushf
and
and
sbb
hlt
mov
xchg
or
cmp
call
pop
comiss
retf
inc
das
push
sbb
adc
dec
push
push
(bad)
sub
ret
in
xor
push
into
test
enter
sbb
das
cli
mov
push
or
push
adc
and
in
cdq
adc
dec
sub
shr
mov
pop
test
pop
out
aad
adc
add
pop
cmp
rol
loop
fdiv
out
xor
daa
mov
rcl
sbb
mov
jecxz
mov
add
(bad)
adc
dec
inc
add
pushf
clc
pop
inc
mov
and
fisubr
clc
push
daa
push
jae
jnp
xor
adc
(bad)
cmp
xchg
mov
add
mov
mov
or
cmp
mov
hlt
pop
add
add
or
push
jmp
jge
and
add
in
je
cmp
push
ror
lock
push
add
add
iret
test
or
fld
adc
out
sbb
ficom
(bad)
pop
popa
movs
push
push
inc
idiv
push
push
or
jne
sbb
jmp
mov
mov
sbb
retf
rol
sub
addr16
mov
pop
aam
daa
mov
pop
and
cdq
mov
inc
add
xor
jmp
out
jae
enter
test
mov
jno
inc
ss
imul
mov
das
jle
or
sbb
sbb
(bad)
fistp
add
loop
or
mov
xlat
iret
push
pop
dec
leave
xor
add
jne
int
lea
mov
movsx
adc
popf
pop
pop
scas
pop
cmp
xchg
mov
iret
xchg
fdiv
mov
loope
nop
aad
(bad)
xor
sbb
cli
ss
xchg
sub
cmps
mov
test
js
pop
std
nop
cs
and
jno
loop
sub
inc
mov
loopne
mov
pop
mov
cmp
mov
fnsave
add
and
cs
daa
sub
imul
out
hlt
xor
inc
inc
sub
jb
ret
fadd
or
add
ja
jp
stos
test
jmp
sub
xchg
je
mov
cmp
sub
xor
ret
pop
das
cmc
pop
lds
jecxz
(bad)
cmp
cmp
(bad)
(bad)
dec
les
add
mov
pop
ret
mov
in
ja
shl
adc
add
xchg
imul
loope
or
les
(bad)
jg
inc
fsubr
xchg
icebp
jle
mov
inc
cld
mov
adc
pop
cmp
in
ror
and
push
out
lea
stc
pop
loopne
push
dec
sub
xor
aas
pop
mov
outs
sahf
and
push
fcomi
ret
pop
jne
cmp
sbb
cmp
call
push
ja
cld
fist
jnp
out
xchg
jmp
ret
int3
sbb
xlat
mov
and
inc
dec
test
imul
pushf
in
jge
dec
lock
sub
jp
adc
and
and
inc
scas
(bad)
ja
mov
inc
movs
sub
cmps
icebp
fcomp
ds
mov
add
test
pop
and
or
sbb
dec
iret
mov
pop
loope
add
pop
les
or
pop
les
jo
push
jns
repz
xor
iret
call
push
push
outs
and
test
out
(bad)
jmp
or
jmp
inc
inc
inc
dec
jne
jmp
dec
clc
and
lock
lods
push
mov
daa
adc
dec
aas
loopne
enter
loopne
or
inc
sbb
pop
mov
hlt
test
pop
clc
and
pop
loopne
loopne
pop
clc
dec
sub
add
test
jle
pop
or
xor
adc
fcmovb
jmp
jge
mov
add
sbb
ds
dec
dec
dec
jg
pop
jb
xchg
push
sbb
sbb
add
bt
movs
aad
dec
mov
js
retf
mov
push
inc
push
inc
out
jne
int
(bad)
loopne
imul
call
and
in
cwde
or
xor
cwde
xchg
xchg
sbb
imul
icebp
jo
and
test
push
mov
mov
mov
(bad)
pop
inc
cmp
je
mov
cmp
jne
push
xor
(bad)
adc
loopne
fsubr
cmp
pop
or
mov
jne
dec
add
sub
inc
and
fld
(bad)
test
xchg
fmulp
nop
fiadd
dec
jne
stos
call
push
push
mov
aam
mov
sub
mov
pop
sub
lock
adc
mov
pop
adc
and
dec
sbb
add
jns
pop
ins
jno
push
mov
mov
xchg
imul
bound
addr16
add
cdq
cmp
inc
add
jl
xadd
inc
aam
aam
arpl
daa
or
sar
push
cwde
int3
fcomp
pop
mov
into
test
xchg
rcl
mov
mov
push
xlat
loop
push
sbb
sbb
add
test
ficom
mov
fidivr
iret
add
xchg
pop
mov
dec
mov
pop
add
add
and
cld
jp
sub
jnp
test
rcl
jl
or
inc
add
pushf
adc
test
dec
adc
adc
xor
xor
sbb
pop
mov
pop
in
scas
call
push
(bad)
mov
jo
jl
sar
mov
pop
push
cmp
movs
adc
sbb
dec
int3
jmp
mov
adc
leave
adc
pop
dec
shr
jmp
pop
dec
sbb
inc
and
loopne
push
or
addr16
(bad)
(bad)
loopne
dec
sub
das
dec
(bad)
stc
push
adc
(bad)
pop
push
inc
pop
jge
cmp
(bad)
or
clc
add
icebp
push
fwait
loop
pop
je
div
and
sub
or
push
adc
mov
dec
jle
sar
or
aam
and
jp
fsub
sub
pop
or
and
daa
xchg
sub
ret
xchg
hlt
push
or
(bad)
pop
outs
or
mov
inc
add
mov
dec
sub
sub
push
test
jp
ficom
adc
(bad)
or
shr
ds
xor
mov
(bad)
out
cmp
adc
mov
(bad)
mov
pop
sub
fxtract
cmp
add
or
call
adc
popa
adc
mov
inc
test
add
jmp
(bad)
aam
in
cld
add
push
and
and
inc
push
or
sub
sub
xchg
xor
imul
popa
push
mov
mov
push
cmp
imul
dec
sbb
shl
add
aad
in
call
sbb
jecxz
sbb
and
and
pop
inc
push
xchg
add
call
jmp
xor
and
inc
cmps
jo
and
mov
jmp
xchg
cmp
das
push
add
and
push
mov
mov
push
imul
shr
mov
lods
adc
sub
std
mov
dec
je
sub
je
or
pop
add
jmp
add
add
js
mov
push
(bad)
dec
xor
loop
xor
cmps
lock
jmp
jmp
inc
inc
ins
mov
mov
daa
fimul
imul
adc
or
xlat
sbb
jo
push
gs
push
hlt
stos
and
dec
pushf
inc
pop
ror
test
xchg
out
add
test
sub
jb
sub
je
lock
mov
and
or
mov
leave
jnp
repz
dec
or
push
call
adc
xor
pop
imul
xor
xchg
dec
jae
xor
jecxz
mov
iret
mov
stc
dec
xchg
pop
lock
jg
retf
fmul
shr
and
fwait
clc
inc
je
ja
pop
(bad)
fisttp
sbb
sbb
xor
mov
add
outs
retf
jno
mov
sbb
jecxz
xchg
rol
mov
jge
stc
call
pop
sahf
sub
and
scas
push
adc
mov
(bad)
push
mov
xchg
mov
jne
and
lods
inc
and
fld
cmp
retf
adc
cli
pop
mov
jge
daa
loopne
dec
lahf
xor
test
jbe
cmp
jnp
mov
jae
daa
lock
adc
pushaw
lock
cmp
or
sbb
scas
jecxz
sub
cwde
sub
leave
aam
adc
push
or
jmp
adc
pop
retf
mov
iret
xchg
lea
test
rol
loopne
add
and
mov
add
test
rcr
cmp
push
popf
adc
and
sub
cld
(bad)
test
in
jo
in
cmc
xor
jge
int3
mov
lock
test
int3
(bad)
or
push
sbb
ret
push
and
or
adc
sub
loop
or
jo
cmp
fwait
xchg
jo
shl
sub
cs
jne
std
js
test
movs
dec
inc
fcomp
lds
inc
dec
aaa
dec
mov
in
fdivr
daa
push
(bad)
(bad)
call
xor
ret
rcl
cs
mov
movs
xor
popa
lods
mov
retf
jge
cmp
popa
pop
or
add
push
or
ja
jne
fsubr
mov
push
pop
shl
or
jb
sbb
ja
push
and
(bad)
mov
ret
pop
pusha
push
inc
cmps
add
add
push
loop
mov
lahf
dec
lahf
sbb
sbb
shl
sbb
in
pop
xchg
in
into
mov
dec
push
xlat
xchg
fcom
out
cmp
addr16
and
mov
lods
cs
mov
test
lock
cmp
and
out
arpl
mov
in
push
call
imul
fcomp
jmp
dec
loop
adc
icebp
jg
sbb
loop
bswap
jnp
add
or
sbb
push
and
aas
stc
sub
pop
push
and
pop
or
pop
or
or
xlat
mov
add
daa
lea
inc
cwde
sti
mov
sbb
jo
push
mov
movs
pop
dec
inc
dec
call
add
test
nop
outs
sbb
fwait
cmp
add
mov
xchg
sar
dec
clts
(bad)
clc
mov
ficomp
mov
mov
ret
daa
aad
not
add
cld
in
retf
add
push
inc
add
xor
add
in
add
or
pop
fmul
xor
inc
cmps
or
jmp
cmp
iret
sub
mov
cmp
cld
adc
stos
or
jge
cmp
jg
in
or
mov
jge
xor
push
sbb
dec
mov
mov
sub
adc
scas
xlat
sbb
jno
push
sar
push
ins
icebp
inc
pusha
and
ret
shl
and
arpl
mov
cmp
xchg
mov
xor
xor
pushf
cmp
adc
push
sbb
cmps
jle
push
sub
and
movs
mov
fdivr
mov
pop
sub
push
or
mov
sbb
inc
push
adc
inc
pop
push
ficomp
mov
xchg
and
(bad)
jo
xor
daa
jae
pop
and
xor
pop
pop
dec
movs
jae
inc
sbb
outs
add
sti
or
push
cmp
push
shl
js
xchg
inc
shl
mov
mov
pushf
sbb
mov
inc
inc
loopne
jmp
pop
je
or
jl
inc
in
add
in
or
je
mov
inc
dec
jne
cmps
add
inc
xchg
jg
enter
sub
or
sbb
mov
pop
adc
or
or
and
int3
lods
cmp
mov
das
jle
(bad)
inc
gs
or
mov
cli
mov
push
xor
int3
jle
call
mov
inc
test
adc
lds
add
sar
scas
test
add
and
loop
xchg
push
sbb
mov
mov
inc
icebp
outs
test
ret
adc
mov
sbb
out
lds
or
lock
xor
push
sbb
push
push
add
call
mov
loopne
jnp
inc
sbb
lock
add
and
sub
sbb
mov
mov
and
sub
ror
stos
adc
or
pushf
shl
inc
and
daa
pop
pop
imul
mov
nop/reserved
mov
jmp
loopne
and
outs
add
xchg
mov
(bad)
mov
cmp
(bad)
ficom
sub
add
pop
jmp
hlt
mov
and
das
sub
outs
bound
dec
jne
sbb
jo
cmp
adc
mov
clc
adc
into
sub
pop
fldenv
push
test
(bad)
dec
push
daa
sbb
xor
and
sbb
(bad)
xor
adc
sar
and
mov
pop
movs
hlt
adc
jg
inc
shl
mov
push
shl
xlat
mov
inc
shl
adc
shl
(bad)
fsubrp
in
jp
mov
pop
test
lea
jge
in
add
ins
dec
in
cmp
push
push
call
out
dec
test
pop
add
daa
mov
sub
call
sub
mov
addr16
xor
or
dec
sub
jl
loopne
add
in
xor
jl
aam
mov
and
xor
mov
fist
add
dec
sub
jl
inc
je
jne
pop
or
add
lods
je
xchg
sbb
sbb
mov
leave
(bad)
je
sub
clc
add
and
xchg
mov
add
push
mov
femms
jno
in
pop
mov
mov
inc
cli
xchg
inc
add
icebp
loopne
fbstp
xor
mov
adc
sbb
adc
add
xchg
out
mov
pop
add
mov
cmp
test
lods
fwait
adc
mov
adc
mov
cmp
and
inc
out
xchg
xor
xchg
lock
and
mov
mov
and
inc
dec
pusha
push
and
add
fisubr
fistp
add
out
xor
pop
push
adc
nop
sti
not
xchg
jg
fsub
addr16
add
ins
push
inc
ret
mov
inc
xchg
inc
add
dec
xchg
arpl
in
mov
mov
xchg
outs
sysenter
(bad)
add
push
inc
js
outs
jae
movs
jg
test
je
add
test
mov
cmc
dec
mov
add
fs
add
jmp
dec
popa
bound
outs
and
inc
ins
lea
ret
ja
add
fs
add
add
or
cld
mov
cmp
sbb
jbe
mov
pop
ret
imul
fldenv
pop
and
outs
pusha
xchg
pop
mov
adc
movs
mov
cmp
nop
out
pop
int3
fs
stc
test
adc
jns
(bad)
je
call
out
inc
mov
push
push
xor
retf
or
sbb
loopne
loopne
or
dec
mov
or
jmp
movs
xor
movs
(bad)
call
(bad)
and
cld
xchg
mov
mov
mov
inc
cwde
lea
imul
jle
out
jl
ret
push
movs
(bad)
cmp
jne
mov
jmp
push
or
test
cmp
ja
xchg
scas
ror
fldenv
movs
mov
mov
clc
loopne
jp
jl
cmp
sahf
mul
and
xchg
xor
je
js
mov
xchg
call
cmp
rcr
sub
push
rcl
add
jl
xor
adc
popf
sbb
add
ret
add
ins
add
sub
sub
or
pusha
adc
shl
adc
adc
lods
xchg
dec
fiadd
xchg
imul
adc
and
dec
add
stc
mov
cld
add
movs
pop
xor
inc
cmp
ins
sbb
add
xchg
(bad)
pop
xchg
popa
or
(bad)
pop
ret
outs
mov
inc
and
fdiv
adc
add
push
bound
(bad)
pop
lock
into
test
pop
cmp
push
jno
ja
cld
mov
pusha
(bad)
push
ja
rol
scas
cli
clc
(bad)
sahf
shr
jbe
cmps
add
cmp
lar
sbb
aas
cmp
and
js
inc
test
inc
mov
jmp
nop
jecxz
or
mov
je
xor
or
jo
and
inc
mov
shl
cmp
ror
pop
ror
dec
or
mov
pop
and
dec
xchg
add
xor
lahf
das
cmp
ret
(bad)
loope
test
xchg
inc
inc
not
out
loope
inc
jno
ret
add
cmp
jg
and
ret
ins
aas
jne
and
xor
scas
(bad)
cs
pop
cmp
add
loopne
jp
pusha
clc
adc
cli
mov
mov
mov
mov
scas
xor
movs
xchg
daa
les
bswap
or
mov
imul
cmp
outs
or
sti
mov
jle
call
pusha
call
loope
cs
or
mov
clc
pusha
xor
into
pop
(bad)
loopne
dec
pop
add
sti
push
xchg
shl
loop
les
clc
push
or
cwde
push
rcr
fnstenv
dec
sub
sub
add
je
add
test
add
push
push
lea
adc
jl
adc
sbb
add
cmp
sbb
add
inc
xchg
mov
call
xchg
movs
pop
push
rol
add
sbb
(bad)
and
jg
mov
sbb
push
inc
dec
cld
(bad)
adc
test
mov
mov
popa
pop
xchg
sbb
sbb
rol
jl
not
outs
sub
pusha
sbb
cmp
movs
inc
les
sbb
jg
int3
in
int
les
out
fsubr
or
add
sub
mov
push
jecxz
in
in
in
in
lods
fwait
or
inc
jo
in
mov
pop
out
out
sbb
and
pop
les
out
inc
pop
pop
inc
adc
jecxz
dec
fs
add
in
push
in
jnp
sub
lock
mov
imul
sbb
test
sbb
pop
push
mov
mov
cld
mov
shr
dec
and
fdiv
pop
add
movs
movs
movs
movs
mov
pusha
mov
je
pop
dec
pop
nop
add
or
push
or
push
push
mov
movs
je
add
lahf
inc
pop
push
jl
test
inc
add
sar
push
aam
or
sbb
push
jmp
push
push
push
xor
mov
in
push
mov
loopne
xchg
add
ret
loopne
(bad)
cli
inc
imul
popa
mov
cmp
sbb
mov
sub
mov
push
out
and
cmp
data16
cwde
mov
dec
xor
imul
xchg
jmp
adc
cwde
adc
xchg
lods
nop
lock
test
sub
inc
add
adc
lds
retf
sbb
push
xlat
sub
pop
arpl
add
adc
or
les
mov
push
push
lods
pop
inc
mov
and
pop
call
push
sbb
lea
and
cld
xor
ja
clc
bound
ror
(bad)
loope
xor
out
mov
add
in
push
icebp
mov
pop
inc
inc
les
cmp
out
adc
xor
lock
dec
pusha
and
xor
dec
inc
js
or
mov
sub
adc
and
inc
ret
push
or
or
or
and
jecxz
mov
and
sbb
sub
push
in
push
inc
ins
iret
shr
adc
xor
add
clc
cmp
adc
sub
jge
in
test
mov
loope
push
test
xor
xlat
js
pcmpeqb
cmp
sub
sbb
retf
pop
push
add
push
add
pop
fisttp
add
loop
mov
dec
(bad)
push
xor
inc
cmp
pop
(bad)
pop
cmp
and
inc
mov
fwait
inc
mov
loopne
push
rol
dec
mov
and
mov
add
inc
inc
or
ret
mov
mov
outs
fsub
or
sbb
rol
arpl
outs
push
push
push
jne
dec
sbb
lea
dec
int3
and
sub
lods
adc
add
(bad)
adc
sub
sbb
sbb
xlat
aad
mov
inc
dec
jne
pusha
lds
inc
cmps
jg
xchg
lock
sbb
es
pop
into
push
inc
and
push
mov
or
pop
bound
pop
push
jmp
mov
jmp
and
ret
fist
push
lods
push
sub
sbb
sub
push
mov
shl
and
imul
in
sbb
dec
pop
mov
shl
pop
(bad)
push
sbb
mov
add
mov
dec
add
push
loopne
sbb
add
adc
cs
pop
dec
and
aad
pushf
lods
mov
sub
pop
test
mov
mov
test
movs
add
into
dec
and
pop
std
test
movs
je
jmp
cmp
cmp
jo
stos
ss
test
gs
jmp
pusha
dec
xor
xchg
add
lock
xchg
or
stos
shr
adc
test
shr
push
mov
mov
inc
mov
js
cs
xlat
loopne
in
test
jl
mov
xchg
or
add
dec
pop
inc
and
je
loopne
pop
cmps
and
jle
and
retf
push
iret
ins
or
into
test
inc
push
xor
leave
ja
add
ret
mov
lods
add
pusha
push
xor
or
inc
mov
dec
sub
ja
jo
and
pop
(bad)
es
cdq
jne
sub
pop
loopne
sbb
jo
jmp
sbb
pop
push
pop
es
jne
jmp
test
inc
xchg
dec
arpl
outs
mov
loope
mov
(bad)
in
in
xor
(bad)
in
cmp
rcr
outs
enter
adc
sbb
adc
mov
sbb
(bad)
test
push
rol
jne
mov
jnp
dec
out
test
inc
outs
push
test
test
add
xchg
or
push
add
inc
mov
je
fild
mov
and
aas
jb
pusha
add
jnp
mov
xor
scas
push
inc
sbb
xchg
je
sbb
jle
sar
adc
push
cmp
jmp
adc
imul
in
je
xor
add
cmp
xchg
jne
pop
inc
fmul
sub
lea
rcr
and
cmp
in
sub
stos
jnp
aas
mov
icebp
fisttp
or
push
push
lea
aad
jg
xor
push
lods
mov
dec
test
ins
std
or
cmp
sub
adc
nop
aaa
es
mov
and
mov
(bad)
mov
mov
sbb
sbb
inc
adc
daa
and
outs
pop
sub
pop
(bad)
cmps
dec
or
or
sbb
loope
fs
mov
or
cmp
pop
cmp
sbb
mov
ins
addr16
aam
push
rcr
(bad)
pop
xchg
loope
cmp
push
jp
ret
push
and
inc
pop
movs
add
mov
ret
add
shl
lock
out
in
mov
cmp
sbb
or
inc
fild
xor
push
stos
and
push
ret
stc
push
and
dec
dec
mov
add
mov
aaa
adc
in
or
movd
test
sub
add
jecxz
push
pop
fld
add
cmp
jb
sub
sub
push
and
in
int3
dec
inc
fcom
sub
mov
inc
cmp
and
in
stos
mov
or
push
jmp
daa
pop
(bad)
das
and
jbe
imul
and
mov
adc
push
jbe
das
outs
fcomp
(bad)
ss
lahf
inc
int
loop
ins
loop
or
sub
jne
aaa
inc
sbb
(bad)
sti
adc
sub
int3
push
pop
sub
cmp
cmp
icebp
call
shr
cmp
adc
jmp
xor
xor
sbb
fmul
inc
arpl
push
jl
mov
sbb
inc
dec
mov
inc
imul
add
bound
cmp
or
inc
sbb
sub
sbb
adc
cs
jl
push
sbb
(bad)
xor
jne
call
mov
loope
pop
stos
cmp
jg
movzx
fcom
jle
je
mov
or
mov
add
movs
mov
inc
pop
rol
pop
xchg
leave
ret
mov
pop
ja
jno
mov
dec
bts
in
clc
aam
ret
add
rol
adc
(bad)
aad
cmp
inc
inc
adc
int3
xor
sub
inc
inc
xor
adc
imul
dec
shl
cmp
mov
jle
(bad)
sub
pop
and
and
movs
outs
fwait
or
push
ins
mov
inc
frstor
sub
dec
ror
mov
repnz
or
add
dec
cmps
sbb
cmp
dec
cmp
add
inc
daa
adc
loope
lods
push
mov
inc
mov
inc
mov
stos
add
pop
stc
fwait
es
rcl
pop
std
add
mov
or
jecxz
xor
inc
add
pop
loope
pop
cmp
mov
fwait
pusha
and
inc
dec
push
loope
inc
pop
add
dec
mov
lods
lods
sbb
cmp
movs
call
xor
(bad)
mov
xor
pop
cmp
stos
aam
inc
and
and
(bad)
imul
sar
adc
call
imul
jo
add
fcom
out
and
shl
push
cmp
inc
add
ret
xor
imul
add
ret
mov
inc
aam
inc
inc
je
push
sbb
dec
popa
hlt
push
sbb
fstp
sbb
cdq
sub
mov
mov
jg
dec
lock
push
test
shr
lahf
cdq
inc
cs
dec
or
inc
cs
pop
pop
cmp
push
je
sbb
sbb
cs
or
ret
fsincos
jge
popa
sub
xchg
ror
or
adc
mov
mov
xchg
mov
outs
dec
mov
xor
xchg
inc
mov
dec
fistp
mov
ds
add
(bad)
iret
push
cmps
pop
xor
xor
dec
or
or
(bad)
pop
lock
push
hlt
repz
sbb
outs
test
xchg
push
sbb
push
out
adc
pop
inc
push
mov
inc
ffree
sbb
push
or
js
or
lods
fadd
add
ror
add
jnp
push
add
and
mov
sub
xor
rcr
xchg
sti
sahf
retf
adc
iret
sub
daa
sub
sub
cmp
add
pop
inc
and
xchg
(bad)
jge
pop
mov
inc
pop
outs
dec
int
pusha
pop
(bad)
mov
add
movs
in
call
lock
in
movs
test
arpl
(bad)
out
stos
adc
aam
sbb
mov
xor
test
pop
aam
xchg
mov
push
mov
fst
cmp
xchg
in
or
xlat
inc
inc
aam
push
js
sbb
inc
dec
adc
fisttp
scas
inc
lds
lock
inc
cs
enter
sub
xor
clc
jnp
fsubrp
dec
(bad)
repz
dec
sub
mov
pop
sbb
adc
and
or
(bad)
and
xor
loopne
inc
xor
or
pop
ret
ret
cmp
cmp
loopne
pop
or
shr
adc
cli
adc
push
push
lea
scas
fst
(bad)
cwde
pop
inc
and
mov
add
dec
lea
test
xchg
inc
xchg
bswap
or
push
push
je
iret
push
int3
mov
mov
pop
cmp
push
xor
jmp
popa
fmul
int
imul
fsubr
inc
lahf
cmp
inc
mov
adc
adc
imul
std
rol
and
dec
ins
cs
je
and
rcr
pop
add
cmp
fmul
adc
inc
pop
sbb
and
inc
mov
xchg
inc
les
cmp
jl
je
sbb
push
cmp
mov
arpl
pop
sub
movs
pop
cmp
sbb
or
lds
pop
cmc
jg
xor
push
mov
mov
mov
repnz
mov
cmp
pop
scas
mov
mov
xchg
cwde
push
mov
int3
adc
mov
or
or
lods
adc
mov
or
pop
inc
dec
cmc
and
and
cdq
mov
add
sub
lods
sbb
add
ds
pop
pop
sbb
mov
es
pop
lods
les
pop
stos
add
cmp
movs
arpl
popa
add
inc
lock
imul
test
or
push
push
in
scas
test
pop
lahf
or
jb
inc
dec
jne
push
xor
stos
pusha
lock
push
inc
fsubr
inc
sbb
rcr
sub
aam
rcr
sub
lock
pusha
popa
dec
mov
inc
stc
inc
xchg
adc
movs
adc
cmp
sbb
mov
and
add
mov
and
pcmpgtw
add
cmp
pusha
and
pop
hlt
pop
loopne
sar
mov
xchg
call
and
enter
dec
ror
xor
mov
mov
add
mov
xchg
sbb
test
jo
test
sub
jo
fdivr
dec
push
pop
arpl
(bad)
xchg
xor
pop
xchg
and
iret
outs
loop
lods
retf
push
pop
or
push
in
sub
pusha
dec
dec
(bad)
push
sub
mov
fwait
cdq
xchg
int
fld
add
ret
test
mov
add
adc
inc
imul
adc
push
mov
push
jne
dec
and
fimul
pusha
movs
scas
dec
lahf
sub
mov
jne
dec
push
push
adc
test
push
xor
push
jae
cdq
push
rol
inc
sub
test
pop
ret
mov
(bad)
xchg
cwde
pop
movs
fs
cwde
dec
add
lods
add
cmp
adc
test
add
lahf
jecxz
ss
sub
mov
je
ret
dec
xor
jle
sub
sti
dec
mov
mov
add
pop
sub
lds
xchg
xor
fdivr
nop
mov
push
shl
xchg
dec
adc
jo
xor
aaa
jno
sub
xor
lods
sub
xlat
dec
in
scas
ss
jb
sub
and
push
bound
inc
call
and
aam
inc
and
cmp
mov
js
les
or
in
mov
arpl
and
rol
outs
out
dec
jns
mov
or
ja
and
or
ret
mov
mov
pusha
js
jl
movs
and
cmp
sar
push
ficomp
adc
xchg
es
rol
movs
mov
jo
jnp
int
das
inc
xor
data16
aas
pop
out
lock
mov
mov
ror
mov
inc
mov
lock
pop
fdivr
and
test
push
(bad)
mov
clc
inc
ror
or
xor
mov
cmp
adc
sbb
dec
cmp
pop
(bad)
adc
dec
fwait
push
and
hlt
push
or
imul
inc
sub
jmp
and
mov
pushf
lea
mov
scas
sub
jb
add
aam
add
or
mov
push
dec
and
or
(bad)
aas
aam
shl
cmp
xor
or
icebp
mov
add
stc
enter
ret
push
pcmpeqb
pop
sbb
in
ja
js
add
pop
mov
push
cmps
adc
int
sbb
mov
inc
cmp
call
cmp
stos
aad
jns
aas
push
arpl
sub
aam
arpl
and
aam
pop
lods
push
daa
das
lock
push
loopne
mov
push
clc
test
or
push
scas
mov
push
adc
mov
cmp
mov
shl
sar
adc
sub
pop
test
sub
xchg
shl
ins
push
popa
push
and
and
push
jmp
cmp
imul
aas
loopne
sub
sub
sbb
and
mov
add
(bad)
dec
or
add
push
pusha
clc
fwait
(bad)
jl
shl
aam
outs
or
fwait
xlat
ror
dec
adc
pop
mov
pop
lahf
sub
(bad)
shl
lea
mov
sub
inc
push
fisttp
pop
test
adc
cld
jne
js
bound
ret
jnp
push
arpl
mov
loopne
cmp
test
inc
adc
out
(bad)
hlt
pop
sbb
sbb
hlt
add
xor
fisttp
push
or
xchg
sbb
cs
dec
jne
cmp
add
inc
mov
dec
loope
adc
mov
xlat
retf
(bad)
rcl
jb
jmp
or
adc
jnp
cs
dec
or
out
imul
(bad)
neg
adc
add
(bad)
pop
in
pop
jmp
jge
shl
inc
or
divps
sahf
test
push
adc
adc
add
inc
pushf
sbb
fdivp
pop
cmp
sub
(bad)
ret
hlt
out
cmps
mov
adc
push
cmps
add
xchg
pop
mov
dec
jmp
gs
push
xchg
cmp
sbb
mov
rol
je
out
or
sbb
xchg
add
pop
dec
cld
(bad)
mov
pop
cmp
jmp
add
pop
adc
push
xchg
add
in
sub
jne
mov
das
fs
mov
(bad)
call
ror
add
icebp
aaa
mov
clc
cmc
das
popa
cmp
inc
scas
xchg
shr
ret
inc
cmp
or
aas
pop
mov
jo
push
pop
mov
inc
sbb
and
cdq
lods
adc
or
das
inc
cdq
inc
or
or
adc
scas
mov
ret
clc
mov
push
js
add
xor
add
sbb
adc
add
test
jb
pop
or
push
mov
pop
add
push
ret
lea
mov
pop
inc
jne
mov
or
mov
int3
push
cmp
nop
jne
mov
jae
jmp
mov
ja
cmp
jp
mov
adc
icebp
add
loopne
popa
adc
add
loop
pop
stos
dec
add
arpl
int
fs
cmps
xchg
jmp
inc
rcl
movs
stos
and
mov
inc
add
psubb
mov
dec
daa
xchg
pop
mov
or
inc
das
imul
cmc
add
and
add
movs
inc
or
jg
xchg
aad
in
push
sbb
mov
push
test
add
xchg
adc
pop
xchg
mov
dec
inc
push
dec
inc
js
adc
sti
and
mov
gs
loopne
fsubr
inc
mov
push
xor
jmp
fmul
test
mov
adc
dec
mov
inc
es
jo
sub
and
in
fiadd
sub
adc
sub
add
cs
add
adc
ins
call
xchg
inc
mov
jo
nop
punpckldq
scas
repnz
adc
test
(bad)
xchg
add
jmp
xor
int
(bad)
sbb
inc
push
dec
push
(bad)
pushf
jmp
sbb
and
das
data16
jecxz
xor
sbb
jecxz
sub
mov
loop
addr16
cdq
imul
push
cld
adc
cmp
(bad)
or
inc
push
(bad)
movs
dec
lea
jmp
add
test
sbb
lock
sbb
and
inc
push
lea
pop
dec
rol
dec
xchg
clc
sub
lods
push
mov
push
call
pop
lods
mov
jmp
or
les
aad
mov
jno
xlat
pop
push
sub
sbb
push
xor
and
add
or
ret
popa
xchg
sbb
sbb
add
jno
adc
lods
mov
cmp
aad
ret
mov
and
add
fbld
sub
loop
mov
add
add
mov
(bad)
xor
inc
jno
jmp
sbb
fdivr
add
push
add
cmp
jne
xchg
daa
imul
adc
dec
push
fs
pop
loop
mov
inc
adc
sbb
mov
jae
sub
cmp
add
nop
pop
lock
rcl
adc
fcmovb
push
test
lock
cld
or
add
mul
add
inc
cmp
adc
push
out
add
jl
add
and
mov
add
mov
adc
addr16
dec
fldenv
sbb
jnp
mov
cmp
inc
iret
test
imul
ret
pusha
or
or
push
mov
sub
je
or
or
(bad)
or
adc
cmp
pushf
out
sbb
arpl
ja
adc
or
mov
and
xor
jmp
or
pop
fdivr
pusha
xor
add
leave
mov
ret
ret
lock
aad
sbb
call
xlat
or
mov
imul
xchg
sar
es
gs
inc
icebp
mov
popa
into
mov
pop
sbb
aas
rcr
sbb
icebp
loopne
cmp
in
outs
inc
cwde
loop
push
fisttp
mov
pop
fist
pop
not
imul
xchg
push
and
push
stos
sub
cwde
adc
inc
in
lock
loope
mov
add
pop
xor
pop
fsub
sub
push
pop
dec
dec
int3
pop
push
cmp
sbb
xchg
xor
ss
jno
rcl
push
daa
cwde
test
sub
das
jae
test
pop
jo
or
loope
lods
into
and
or
mov
int
push
test
loopne
mov
mov
lock
xor
inc
stc
loop
leave
movs
idiv
mov
inc
data16
sub
sub
adc
inc
js
jnp
or
fcmovnu
push
sbb
ds
cmp
cmp
and
and
cmp
cmp
and
es
cmp
cmp
sub
sub
cmp
cmp
sub
cs
les
cmp
adc
adc
jg
pop
scas
sbb
add
arpl
outs
add
jo
ret
pop
je
bound
ja
push
enter
or
jae
outs
inc
push
rcl
inc
adc
add
out
jmp
jbe
pop
jne
data16
or
jb
jbe
daa
xor
fild
fisubr
imul
ins
ja
xlat
dec
pop
outs
jnp
jg
fs
jo
pop
dec
popa
xlat
xor
fs
fidiv
jb
popa
scas
pop
xor
and
push
jbe
inc
xchg
cld
sub
daa
push
fild
repnz
jg
(bad)
adc
outs
ds
lock
pcmpeqb
popa
push
inc
and
add
inc
cli
jns
rsqrtps
nop
inc
dec
pop
xchg
xchg
dec
dec
inc
jl
xchg
loopne
xor
rol
or
out
mov
dec
inc
push
dec
lahf
mov
fidiv
mov
push
pop
adc
jo
imul
or
data16
adc
pop
cld
das
add
pop
sbb
inc
jb
xor
or
hlt
dec
jo
dec
enter
pop
movs
rsm
inc
pop
inc
dec
adc
push
outs
gs
arpl
lods
sti
gs
outs
fs
pop
sub
sub
js
cmps
sub
mov
punpckldq
bound
outs
jbe
ins
imul
cmp
add
pushf
fld
addr16
adc
push
jle
push
adc
dec
inc
push
add
pop
sub
add
mov
and
das
retf
aas
js
pop
leave
dec
imul
je
jo
gs
inc
inc
push
and
jo
ja
mov
add
xchg
stos
loopne
jle
call
dec
dec
inc
add
pop
and
sbb
mov
pop
cmp
sbb
pop
adc
aad
outs
ja
push
or
je
xlat
pop
xor
daa
jns
add
(bad)
hlt
das
cli
ja
push
jo
adc
jmp
dec
sub
pop
xor
in
jge
lods
sub
into
in
rcr
mov
mov
test
outs
je
sbb
mov
iret
pop
sub
and
sub
push
sar
outs
jle
popa
xor
inc
jle
js
mov
iret
pop
sub
sbb
sub
mov
and
es
outs
xor
cmp
imul
outs
inc
pop
xchg
call
push
iret
and
pop
cmp
sub
sub
fiadd
fs
push
jnp
push
out
(bad)
or
fld
push
dec
stos
fild
mov
loopne
movs
sub
in
adc
mov
sub
jge
mov
xlat
pop
xor
sub
dec
cs
sub
sub
aad
add
jg
cmp
ret
inc
add
gs
iret
stos
shl
pop
sub
inc
lock
(bad)
or
sbb
inc
sti
enter
outs
mov
imul
cdq
shl
popa
inc
retf
inc
mov
xchg
in
mov
or
pop
in
das
repnz
pop
loopne
add
jne
mov
mov
pop
xchg
and
xor
daa
pop
shl
xor
mov
mov
ja
xlat
pop
xor
daa
jnp
das
dec
push
push
fld
inc
pop
inc
dec
or
dec
inc
dec
sub
inc
dec
mov
inc
pop
or
imul
sub
ja
sahf
add
push
aaa
lods
jge
packsswb
outs
ins
add
(bad)
pop
jo
ins
aam
gs
push
sub
clc
or
push
adc
push
add
ins
mov
adc
sub
loopne
or
pop
mov
add
(bad)
out
mov
xor
mov
loope
js
mov
push
outs
movs
ss
daa
enter
xor
push
aaa
movs
pop
mov
clc
mov
in
inc
push
mov
xor
loopne
push
mov
ja
es
das
icebp
push
adc
fld
or
sub
cwde
scas
pop
add
mov
test
adc
rol
clc
mov
mov
in
cwde
or
pop
push
and
cmp
sbb
xlat
aam
fdiv
push
fcomp
add
add
setp
daa
int
mov
add
or
adc
fsub
xor
popa
xor
aam
rcr
push
sbb
jmp
jnp
pusha
dec
inc
gs
add
pop
mov
out
cmp
jo
js
inc
add
mov
mov
adc
add
shl
pop
aaa
pop
fild
iret
and
js
data16
shr
fld
adc
js
aaa
push
pop
(bad)
fdivr
add
fwait
dec
movs
push
xchg
sub
sub
or
ins
adc
push
repz
(bad)
mov
mov
mov
and
shr
xor
sar
add
jle
fs
or
xor
outs
movs
add
out
stc
or
or
push
pop
stos
cmp
sbb
push
pop
enter
pusha
call
mov
or
sbb
jns
pop
sub
mul
mov
inc
inc
and
popa
pop
shl
loope
push
stos
add
or
mov
jl
push
xchg
pusha
add
mov
inc
mov
mov
xchg
add
cmp
arpl
xchg
adc
push
and
pop
je
outs
fs
sbb
imul
xor
add
sti
sub
xor
ins
cdq
or
mov
fild
push
mov
cmc
dec
push
xor
xlat
(bad)
lods
add
add
push
jo
or
jb
ja
or
popa
xor
sub
xor
jae
mov
dec
sti
xor
push
in
add
aaa
hlt
add
and
cld
push
inc
or
inc
mov
xchg
mov
sbb
test
sub
fcmovnu
pop
fsub
or
xor
mov
ins
push
dec
retf
test
sti
push
mov
push
clc
int3
jbe
push
xor
push
add
push
cmps
push
cmp
enter
mov
data16
dec
inc
cmp
aad
xchg
or
mov
or
pop
es
loop
inc
xor
or
xor
sub
pop
data16
out
loope
mov
and
cmp
xor
lods
xor
adc
clc
sub
pop
cmp
push
je
sub
je
mov
xor
adc
sbb
sbb
or
mov
mov
pop
loopne
push
mov
adc
daa
dec
out
sbb
int3
aaa
daa
or
sysexit
addr16
jnp
dec
lods
repz
pop
pop
cmp
pushf
int3
jbe
sbb
ret
das
adc
cmovbe
dec
(bad)
pavgb
das
jne
cmp
sub
dec
mov
in
xor
ins
push
ds
add
stc
sbb
out
cmp
sbb
int3
(bad)
push
sub
cld
xor
add
push
push
sub
hlt
inc
push
ds
(bad)
dec
cs
add
popa
sti
add
bound
daa
call
add
pop
add
sub
jle
add
xchg
jo
popa
lods
out
adc
test
adc
mov
inc
inc
pop
lock
pop
je
test
and
fcom
pop
add
ja
jb
and
cmp
push
je
inc
jb
mov
addr16
adc
inc
ins
imul
and
aaa
adc
or
cmps
ret
inc
std
add
dec
and
ret
jo
retf
add
pop
dec
jge
or
int
mov
pop
dec
mov
or
xchg
add
add
test
or
and
pop
or
addr16
xor
aam
adc
mov
rcr
popa
inc
sbb
aas
dec
or
inc
aas
xor
adc
repnz
popa
cmp
adc
test
(bad)
cmp
pusha
add
mov
adc
push
add
mov
loope
pop
pop
cdq
jmp
fs
jge
cmp
inc
jp
mov
mov
stc
inc
clc
cmps
inc
push
outs
jne
arpl
rcl
add
imul
push
aad
xor
imul
sub
cmp
gs
in
mov
jecxz
scas
adc
adc
xchg
ficom
sub
inc
mov
add
xor
push
push
inc
push
xor
rol
call
mov
aaa
das
push
cmps
inc
fcom
mov
clc
test
inc
push
jns
gs
pop
imul
iret
in
xchg
add
pop
or
daa
adc
and
sbb
ds
push
and
std
cmp
dec
adc
imul
pop
push
adc
in
icebp
ret
inc
pop
dec
add
ret
pop
icebp
bound
cli
push
mov
xchg
or
cmps
push
or
mov
add
in
or
je
inc
fadd
bound
(bad)
lea
dec
push
arpl
gs
mov
dec
inc
pop
add
scas
and
lods
jp
fs
pop
mov
jl
dec
repz
aam
popa
pop
xlat
or
aas
xchg
or
push
mov
inc
adc
mov
add
sbb
pop
sbb
bound
push
pop
inc
ss
mov
mov
push
sar
jmp
push
inc
aaa
sbb
sbb
pop
and
out
adc
push
mov
sbb
and
or
adc
sbb
sub
adc
les
sub
sbb
cmp
sub
int3
shr
rcl
mov
adc
or
mov
inc
dec
sub
lods
popf
add
mov
push
jmp
shl
rcr
adc
push
xor
outs
jg
and
dec
in
popf
ins
inc
and
bound
(bad)
adc
sub
pop
jne
sbb
stos
lahf
or
xor
push
add
gs
(bad)
clc
inc
ins
jo
jns
jmp
sub
sbb
mov
shl
sbb
cmc
or
push
pusha
mov
inc
or
loop
dec
adc
inc
inc
xlat
mov
nop
add
aam
mov
das
jecxz
sbb
jl
scas
xchg
mov
loopne
dec
imul
add
lock
xchg
mov
xor
data16
icebp
scas
push
lea
and
mov
xchg
fisttp
adc
sbb
jecxz
sub
inc
xor
shl
push
dec
mov
inc
mov
mov
pop
push
inc
dec
dec
push
dec
mov
scas
xor
xchg
pusha
cmp
dec
cmp
je
jmp
stos
fdivr
or
lds
sub
or
test
test
imul
popf
cli
mov
mov
ret
mov
xchg
inc
add
mov
push
push
mov
mov
sbb
(bad)
pop
fwait
adc
inc
xor
cmp
pop
mov
rol
lods
inc
inc
call
mov
daa
pop
pop
pop
push
sbb
xchg
dec
push
fs
mov
sub
(bad)
adc
xchg
pop
add
mov
push
imul
add
cmp
mov
rol
inc
sub
dec
les
and
out
ss
sub
xchg
pop
sbb
add
ds
push
sbb
inc
(bad)
dec
test
or
test
and
pop
test
mov
dec
push
or
sbb
jg
add
mov
push
clc
addr16
daa
mov
push
mov
add
in
adc
daa
or
xchg
outs
lds
or
sub
movs
leave
cmp
fadd
pushf
arpl
ins
js
out
fincstp
xor
das
dec
push
jo
ror
sbb
hlt
jae
sbb
push
xor
jbe
sbb
add
mov
jno
or
pop
add
hlt
sbb
sbb
movs
or
sub
(bad)
push
xor
sbb
sub
ror
scas
or
and
nop
pop
jo
loopne
scas
loopne
dec
dec
test
fadd
js
add
push
bound
test
push
or
loop
cmp
fs
pop
sub
retf
loopne
dec
and
es
dec
adc
scas
push
outs
ja
push
jmp
or
pop
pop
and
enter
popa
add
arpl
cmp
leave
fs
push
dec
test
mov
cs
dec
jmp
cmp
dec
dec
sbb
pop
push
mov
pop
mov
test
aaa
cmp
dec
mov
add
mov
and
and
imul
and
cmp
dec
mov
inc
adc
dec
lahf
pop
mov
fbld
cmps
out
data16
dec
or
inc
inc
jle
into
cmc
stos
rcr
outs
lods
imul
stos
sbb
inc
sub
in
call
push
xor
mov
jmp
xchg
push
adc
ins
jmp
scas
or
fimul
int
rcr
lods
jmp
mov
mov
fs
add
sub
out
sbb
ficomp
bound
pop
or
jae
mov
je
pop
(bad)
cwde
sbb
jg
dec
push
mov
sbb
es
and
fst
xor
or
retf
pushf
jg
or
iret
add
push
push
jae
scas
push
sbb
daa
pop
cli
jne
sbb
add
dec
das
stos
and
dec
aad
dec
push
jae
aad
and
cmp
aad
stos
inc
pop
push
aad
sbb
sbb
sub
xor
fld
push
push
outs
pop
mov
pop
dec
xor
add
mov
loop
adc
pop
lds
jnp
sbb
sbb
xor
call
or
ds
mov
sub
xor
dec
dec
test
xor
inc
mov
loopne
dec
xor
mov
xor
out
dec
inc
gs
dec
xchg
xor
mov
mov
adc
lahf
pop
mov
or
fbld
loope
cmp
bound
hlt
in
mov
pusha
or
test
out
push
jg
push
push
pop
icebp
mov
or
push
cmp
jg
mov
xor
cmp
adc
imul
mov
nop
cvtps2pd
loop
or
cli
ret
push
dec
jns
loope
push
inc
test
cmp
or
mov
and
sub
imul
pop
push
jbe
mov
clc
gs
aam
out
test
pop
sub
jo
outs
pop
inc
scas
add
xchg
dec
xchg
push
push
mov
adc
jno
clc
adc
push
aad
jo
push
push
jle
sbb
das
jg
sbb
xor
jge
push
clc
jl
lds
lock
adc
lea
adc
clc
add
push
lods
jmp
and
dec
push
pop
fbld
pop
push
rcl
sbb
xchg
popf
mov
pushf
and
les
daa
pop
inc
xchg
or
addr16
sbb
mov
retf
add
pop
adc
(bad)
adc
push
hlt
rcr
sbb
(bad)
adc
push
jg
pop
je
mov
add
push
das
cmp
push
add
jp
adc
and
and
adc
popa
out
test
push
jg
sbb
imul
push
enter
push
sbb
xchg
mov
jl
jae
sub
dec
data16
(bad)
mov
push
ret
or
ficom
xor
inc
fnstcw
lea
or
sub
fisubr
pop
dec
push
outs
popfw
push
push
mov
lods
(bad)
ins
mov
jns
je
jns
push
ins
inc
in
(bad)
jns
mov
sub
mov
pop
sbb
or
outs
je
inc
jno
xlat
dec
clc
pop
push
mov
cli
das
sbb
inc
push
shl
inc
inc
outs
les
xor
add
mov
pop
cmps
out
jecxz
or
push
aaa
dec
outs
outs
cmp
adc
mov
sbb
in
hlt
gs
clc
and
pop
fs
jmp
cmc
and
lods
dec
arpl
cmps
xor
xchg
pop
mov
push
push
sbb
pop
push
sbb
inc
pop
mov
ror
add
pop
or
iret
pop
inc
data16
push
pop
and
mov
inc
inc
inc
shl
add
icebp
add
mov
push
cmp
sub
idiv
pop
aas
add
fist
add
idiv
jb
in
call
cmp
iret
xchg
(bad)
sbb
add
hlt
neg
aaa
adc
pop
push
call
inc
dec
push
out
push
jb
push
or
loopne
mov
cli
jo
mov
adc
sbb
add
or
sbb
movs
movs
dec
in
mov
mov
dec
pop
cmp
hlt
pop
sub
hlt
repz
les
inc
adc
mov
cwde
cmp
imul
add
pop
aas
pop
(bad)
jg
push
mov
pop
sub
std
pop
in
mov
mov
pop
pop
js
sbb
mov
pop
mov
adc
sar
lahf
adc
dec
mov
fstp
pop
and
(bad)
cmp
rol
pop
or
jl
mov
mov
xchg
push
sbb
pop
nop
jmp
lea
xchg
lods
or
retf
(bad)
xchg
sbb
es
shl
test
aas
(bad)
adc
push
push
sub
push
push
or
cdq
ret
sar
xor
sub
sub
dec
pop
call
push
(bad)
(bad)
pop
aam
mov
sub
mov
lahf
ret
test
pop
aam
push
fsubr
ror
and
cli
and
pop
xchg
inc
popa
test
test
push
sbb
cmp
imul
loopne
adc
pop
jae
clc
xlat
enter
jp
les
mov
in
adc
sub
data16
ret
adc
mov
push
cmp
fcom
fcmovbe
ret
aaa
jo
movs
add
add
fadd
and
psraw
ret
xchg
mov
cvttps2pi
and
test
clc
hlt
fidiv
add
clc
xchg
push
or
sahf
xor
mov
sub
mov
fwait
mov
mov
push
je
shr
xor
jmp
adc
aas
jecxz
dec
jne
mov
inc
add
cmp
add
xor
dec
add
adc
mov
mov
push
dec
sbb
and
daa
mov
xor
and
por
shr
and
dec
jne
fwait
jnp
loopne
(bad)
push
mov
out
add
push
jne
js
stc
sub
inc
mov
ret
mov
clc
inc
add
mov
rol
shl
sub
cmp
jl
xchg
jmp
cmp
jl
dec
push
push
jo
fadd
xchg
test
pop
shr
pop
cmps
ins
cli
mov
ja
jmp
popa
push
jno
out
(bad)
popf
xor
inc
pop
pop
push
ror
rcr
les
jns
repz
inc
cli
add
add
mov
shr
clc
add
cmp
shr
ret
sbb
cmp
xchg
imul
std
xor
fs
dec
mov
add
mov
sbb
sbb
cmp
push
pop
jne
xor
xor
xor
sbb
(bad)
push
pop
mov
jb
pop
out
aam
popa
(bad)
fnsave
mov
jo
and
clc
push
in
pop
cmp
inc
nop
sbb
sbb
cs
mov
adc
add
imul
arpl
or
sub
add
mov
dec
adc
add
mov
mov
adc
and
mov
pop
adc
pusha
outs
add
arpl
(bad)
fmul
dec
jne
xor
sar
push
xor
cmp
sbb
adc
adc
mov
mov
jmp
bound
int3
mov
mov
add
xor
mov
or
out
jmp
add
or
lea
xchg
or
cwde
(bad)
inc
xchg
adc
xor
rol
pop
or
push
leave
into
ret
daa
icebp
test
and
xchg
aad
pusha
sub
imul
fs
xchg
sub
inc
push
retf
nop
add
cmp
rcl
or
scas
mov
test
cwde
loopne
xlat
add
or
or
cmp
icebp
call
mov
fwait
(bad)
xchg
fmul
(bad)
sahf
sbb
arpl
push
add
push
add
pop
push
fsub
cmp
ds
mov
movs
jg
xchg
jmp
dec
jne
push
movs
and
call
arpl
pushf
cmc
inc
add
xchg
cmove
cmp
jge
push
add
cdq
cmp
mov
push
cmp
aam
cmc
rcr
mov
enter
jge
lea
enter
mov
arpl
clc
mov
inc
and
add
mov
popf
pusha
sbb
sub
ss
int3
icebp
lock
popf
add
xor
div
loopne
movs
xchg
mov
ror
cmp
xor
popf
sub
inc
data16
mov
inc
dec
popf
nop
es
pop
add
add
sub
dec
sub
or
xchg
pop
add
xchg
scas
pop
gs
mov
jne
mov
mov
mov
xor
cwde
push
pop
dec
mov
ds
(bad)
push
or
adc
mov
dec
test
xchg
and
neg
pop
pop
xlat
jp
push
mov
push
or
push
aam
dec
mov
sbb
aaa
call
jae
loope
ret
push
or
call
fst
ins
dec
cmp
ja
pusha
add
xchg
add
cli
fild
leave
mov
cmp
jb
mov
aaa
mov
stc
sub
add
mul
adc
mov
add
add
lea
or
add
jnp
pop
push
add
outs
or
xchg
lock
shl
enter
(bad)
fcom
inc
push
jne
jbe
pop
sub
or
fisttp
push
daa
(bad)
or
jg
lea
jmp
sub
push
or
mov
add
mov
sbb
scas
ins
pop
sbb
scas
call
pop
xchg
je
push
xchg
push
int
ds
push
fidiv
add
aad
mov
xor
in
jecxz
adc
aas
fwait
push
cdq
(bad)
jmp
data16
rcl
adc
jae
add
xchg
xor
adc
rdtsc
add
ror
das
ret
popf
(bad)
dec
xor
and
in
sbb
mov
adc
add
dec
bound
jnp
aam
in
rcr
sbb
jmp
add
loopne
fwait
and
xor
pusha
loopne
mov
aaa
and
adc
iret
in
pop
sub
jo
or
imul
adc
jbe
or
jmp
adc
or
xor
sti
and
hlt
push
xlat
shl
scas
sub
xchg
in
fs
xor
add
mov
outs
cmp
sub
jns
scas
pop
not
push
js
pop
jb
clc
es
sbb
add
scas
xor
jb
push
adc
mov
xor
pop
js
sar
mov
retf
push
sar
adc
call
lock
inc
mov
pop
ret
dec
mov
lea
adc
sar
scas
xor
daa
rcr
fdiv
in
imul
jl
mov
in
adc
add
inc
push
push
or
xchg
add
or
adc
cwde
scas
or
and
jmp
ins
shr
mov
mov
adc
mov
adc
call
les
clc
pop
(bad)
sub
cdq
ror
xor
dec
lods
pop
or
push
pop
call
lea
test
neg
push
mov
mov
fs
jne
popf
lods
or
adc
and
lods
(bad)
int
xor
bt
add
les
add
ret
sbb
xlat
xchg
inc
jno
shr
and
xlat
addr16
inc
sbb
mov
push
(bad)
and
ins
daa
jp
sti
nop
ins
(bad)
clc
adc
cmp
jl
pop
hlt
bnd
in
(bad)
sbb
xchg
jmp
cmps
mov
das
or
adc
sbb
add
movs
aam
test
aad
dec
or
push
aas
pop
or
enter
(bad)
mov
data16
adc
dec
or
sub
ret
cmp
push
xor
pop
aas
sub
dec
rcl
xor
dec
or
jb
and
pop
hlt
push
loopne
adc
push
js
lea
inc
lock
(bad)
dec
mov
cmp
hlt
sete
test
mov
and
sbb
mov
aaa
jecxz
dec
and
xor
(bad)
xchg
or
jg
add
pop
in
inc
push
cmp
jne
imul
fisttp
or
loope
or
add
mov
es
cs
add
push
mov
pop
add
add
in
mov
add
(bad)
pop
cmps
jns
mov
mov
push
mov
or
pop
clc
cmps
jns
sbb
sbb
push
sbb
pop
dec
push
mov
retf
pop
adc
loopne
retf
jae
mov
add
inc
xchg
push
pusha
and
cmp
iret
mov
mov
pop
add
add
pushf
push
sbb
in
in
lds
cld
mov
ret
or
aaa
shr
jo
(bad)
jnp
push
clc
bound
inc
imul
movnti
lds
inc
lea
sbb
jecxz
jno
jnp
adc
push
xchg
or
adc
push
sub
push
sub
sti
inc
imul
dec
mov
add
aas
dec
ja
sbb
jne
pop
fwait
cmp
or
mov
(bad)
sub
jmp
lea
cmovo
xchg
and
jnp
ins
ins
retf
push
ins
loop
shl
ja
xchg
jo
xor
popa
adc
inc
dec
push
sub
push
dec
xor
hlt
lock
xor
dec
xor
mov
jmp
sbb
fadd
inc
aaa
xchg
xchg
aam
sub
lods
(bad)
dec
push
cld
scas
rcr
push
xchg
outs
lea
pusha
cmp
add
push
lock
add
push
or
xor
fucomp
adc
rol
scas
shr
ss
or
or
(bad)
dec
in
xor
lock
popa
mov
add
mov
inc
in
add
mov
jo
xor
add
cmp
aaa
jb
prefetcht2
in
add
inc
adc
pop
add
cmp
adc
adc
in
adc
pop
pop
push
cmp
adc
hlt
mov
add
(bad)
sbb
ror
cmps
shl
sub
dec
push
imul
adc
fwait
add
mov
mov
push
add
or
add
xor
push
cmp
outs
data16
xlat
inc
dec
(bad)
aad
popa
push
lods
(bad)
test
add
dec
adc
or
inc
mov
or
push
adc
out
rcl
je
fwait
loop
arpl
sbb
dec
lea
call
push
inc
movs
dec
lods
push
and
adc
fucomp
scas
mov
xchg
push
or
xor
lods
add
daa
std
ja
lea
mov
inc
sbb
mov
or
call
nop
in
daa
fwait
and
cdq
pop
adc
mov
test
sub
xor
dec
cmp
sbb
inc
pusha
scas
push
or
imul
sub
ins
(bad)
inc
daa
sahf
lds
pop
rdpmc
adc
mov
jbe
aas
mov
mov
mov
pop
push
std
mov
jae
ins
sub
or
call
and
fisttp
pushfw
inc
or
push
lea
xchg
push
jo
jne
and
mov
retf
push
pop
out
ja
jbe
fcomip
mov
xor
leave
or
jmp
cmp
(bad)
push
lock
sub
iret
(bad)
mov
push
jp
cmp
popa
in
mov
mov
popa
pop
push
xchg
dec
xor
sub
mov
adc
popa
jnp
or
fbld
cmp
std
add
mov
test
add
mov
fwait
push
cmp
jl
mov
inc
add
or
jae
add
sbb
push
jne
mov
ds
add
and
jb
call
add
leave
dec
js
call
hlt
icebp
data16
mov
shl
adc
shl
push
mov
ret
lea
loopne
lock
push
push
pop
xchg
jbe
test
cmp
or
add
add
ret
add
jne
les
cld
iret
pop
push
add
scas
gs
add
add
dec
lock
or
inc
mov
test
push
mov
or
dec
dec
pop
adc
repz
cmp
loop
les
xchg
or
cld
dec
cld
mov
xor
mul
and
add
cmc
das
mov
cmps
mov
sbb
or
lock
or
adc
or
pop
dec
or
in
mov
sub
lock
add
sub
jb
stos
or
nop
adc
dec
jo
sti
int
std
adc
jl
ret
or
cmp
ja
push
mov
add
push
adc
mov
cld
mov
push
pusha
sub
xor
imul
or
push
add
sbb
cs
adc
sbb
stc
pop
push
or
push
push
mov
arpl
div
imul
mov
loopne
call
and
or
inc
ins
cmp
je
cmp
cmp
mov
pop
bound
mov
fucomip
sub
sub
mov
pop
mov
clc
and
sbb
cmp
adc
add
push
pop
push
jo
lock
ins
int
(bad)
push
sbb
out
push
adc
mov
les
aad
fidiv
dec
dec
pushf
js
rcl
loope
js
lods
nop
pusha
(bad)
or
pop
sub
adc
push
imul
sar
push
inc
push
cmp
mov
adc
jge
sbb
jns
add
mov
sar
xchg
adc
jnp
std
mov
cmp
add
sub
js
inc
adc
inc
adc
out
cmp
mov
pop
and
xchg
or
aam
push
data16
push
push
retf
aam
xor
mov
adc
push
sbb
or
aas
xchg
pushf
fsub
pop
mov
mov
pop
and
shr
mov
int
mov
inc
inc
xchg
and
mov
mov
(bad)
inc
dec
bound
sub
mov
mov
lods
push
inc
and
xchg
or
in
sbb
movs
fistp
in
push
mov
and
push
shl
shl
or
pop
push
or
pop
mov
sbb
sbb
int
adc
push
xor
sub
xor
out
or
xor
xor
cmp
jne
rcr
or
jo
js
std
xor
sbb
mov
fwait
add
dec
jne
mov
jno
or
cmp
mov
inc
add
dec
adc
or
jno
pusha
dec
addr16
sahf
fcom
jle
mov
and
inc
pop
and
call
sub
cmps
sub
or
mov
pop
daa
cld
and
jle
(bad)
cmp
sbb
cld
fsub
fwait
lea
inc
mov
sub
into
inc
jns
jg
loop
and
push
push
or
and
add
dec
test
add
(bad)
cmps
leave
or
inc
cmp
dec
push
adc
push
mov
sbb
add
test
popa
adc
push
call
jecxz
or
fneni(8087
add
and
xor
sbb
stos
adc
mov
sbb
add
xor
or
or
sub
cmp
inc
inc
mov
cld
je
dec
add
pushf
fiadd
in
or
add
test
push
daa
add
cdq
mov
jne
add
mov
add
pop
xchg
push
sbb
add
push
fsubr
fadd
loopne
or
or
pusha
rcl
add
mov
sub
into
lock
lock
xor
cmp
mov
aaa
sbb
push
cdq
cmp
jne
mov
pop
cld
cli
in
adc
js
add
lock
out
aam
or
shr
dec
inc
cmp
add
outs
jmp
adc
je
(bad)
jmp
test
adc
mov
popf
or
and
or
pusha
pop
inc
loopne
push
mov
and
ins
rcl
cmp
(bad)
fdivr
and
dec
test
ins
sbb
xor
pusha
add
or
add
push
or
arpl
or
lea
sub
cmp
adc
popw
mov
or
cmp
inc
push
cdq
or
xor
push
add
cmps
add
jecxz
in
clc
and
jge
ret
fsub
adc
mov
icebp
jge
adc
or
and
dec
fcomp
sbb
loop
sub
jmp
stos
xchg
push
jns
into
mov
pop
addr16
std
dec
inc
stos
or
add
rol
or
push
jne
jg
dec
loop
adc
lea
add
lea
cmp
sbb
pushf
pop
push
inc
dec
lods
lea
add
scas
fcomp
popf
push
add
test
pop
sbb
or
adc
xor
add
pop
push
ror
xor
or
sub
lods
movs
add
or
add
fwait
(bad)
mov
std
push
pop
sbb
and
lock
das
add
mov
sub
dec
mov
imul
test
push
rol
stc
in
adc
enter
mov
jmp
sbb
or
and
mov
into
clc
inc
sub
shl
ret
pusha
mov
add
mov
jge
clc
inc
cmp
lock
dec
sbb
pop
jl
(bad)
mov
sar
jbe
push
adc
ror
cmp
hlt
and
inc
inc
and
clc
inc
push
inc
pop
sbb
pusha
shr
push
or
clc
sti
add
pop
dec
clc
add
cmp
movs
adc
and
and
add
cvtps2pd
and
mov
rol
pop
cmc
add
mov
les
jecxz
jl
call
fimul
cmps
lods
ret
push
mov
inc
shl
xchg
mov
movs
mov
jne
push
xchg
or
jge
mov
or
dec
sub
dec
cmp
jg
sub
fisttp
cmp
test
leave
push
add
xchg
stos
cmp
pop
pop
or
adc
sub
mov
add
add
xchg
sbb
or
out
adc
fcom
test
add
cwde
jae
imul
and
sbb
retf
inc
iret
bound
mov
aas
aam
fadd
inc
loopne
(bad)
in
(bad)
nop
ret
mov
adc
or
cmp
xchg
inc
jae
mov
dec
xchg
cdq
push
pop
mov
ss
adc
mov
sub
je
push
adc
mov
pop
int3
(bad)
stos
mov
es
cmp
and
mov
adc
retf
xchg
xor
out
jne
dec
addr16
xor
push
add
addr16
fwait
aam
jns
cli
add
and
push
nop
mov
push
dec
push
push
push
jmp
cmp
xchg
pushf
push
xor
js
daa
push
push
test
jnp
cmp
or
mov
int
lods
mov
inc
or
push
lahf
adc
dec
in
push
(bad)
push
or
dec
into
mov
add
dec
cdq
idiv
mov
(bad)
sbb
push
out
xchg
test
xor
dec
ins
loope
push
mov
adc
sub
push
std
cmp
loopne
movs
(bad)
jo
mov
or
pop
xchg
imul
in
mov
js
mov
mov
add
mov
and
mov
loopne
mov
xchg
loop
push
jge
and
mov
popf
hlt
loope
dec
(bad)
cmp
outs
bound
jle
inc
fstcw
lock
call
or
sub
add
jb
push
loopne
jno
sub
push
add
xor
sub
or
push
imul
add
sub
inc
xor
sub
sbb
loope
sahf
ja
or
mov
fcomp
add
pop
jne
sbb
pop
add
aas
lea
mov
xchg
inc
movs
es
xor
dec
jne
stos
or
add
or
xor
and
aam
inc
xchg
sbb
std
mov
movs
mov
jne
and
std
daa
aad
mov
shr
call
movs
pop
or
cmp
inc
or
pusha
xchg
pop
ss
dec
(bad)
adc
(bad)
inc
push
adc
jmp
and
or
mov
inc
mov
mov
and
and
loopne
sub
nop
add
mov
xchg
test
pop
cmp
shr
add
jecxz
or
or
loopne
mov
mov
and
test
jno
add
inc
jle
adc
inc
pop
cdq
add
jmp
or
mov
pop
int
pusha
mov
lea
or
inc
cwde
adc
mov
mov
inc
xchg
add
lods
or
nop
add
jno
jg
mov
inc
or
inc
inc
(bad)
ja
and
push
ret
jmp
(bad)
jbe
jo
jne
pop
ja
xor
aas
mov
push
cmp
jnp
inc
mov
sbb
jo
mov
out
push
fld
or
mov
pop
ret
in
(bad)
scas
les
movs
sbb
push
push
ret
mov
in
stos
(bad)
aad
xor
push
jecxz
add
in
fwait
mov
dec
ret
and
mov
cmp
push
ror
pop
push
das
push
dec
pop
or
jmp
push
cdq
push
cmp
pop
in
push
fld
xchg
mov
pop
mov
(bad)
repnz
jne
arpl
int3
adc
shl
retf
inc
mov
inc
clc
mov
scas
pop
jecxz
add
push
call
mov
test
add
push
clc
add
sub
fmul
dec
sbb
push
push
das
dec
ja
je
xor
loopne
jae
dec
jnp
sub
jb
add
sar
fisttp
add
and
mov
dec
mov
sub
js
adc
xchg
mov
test
call
xor
and
mov
xor
push
enter
mov
call
dec
out
jg
bound
mov
retf
xor
jmp
sub
adc
push
dec
mov
sub
add
sar
push
rol
sub
add
and
mov
cdq
popa
sbb
mov
loope
jnp
jae
ins
mov
sub
sub
pop
sub
cmp
adc
xor
adc
scas
mov
lds
mov
mov
ret
js
pop
pop
fist
dec
test
sbb
add
xor
cmp
out
lock
cdq
cmp
jo
fdiv
mov
pop
pop
sbb
xchg
push
mov
lea
jge
lea
and
xor
(bad)
sub
xchg
out
sbb
push
inc
adc
shl
inc
mov
(bad)
lods
jno
or
enter
add
sbb
pop
cmp
gs
adc
sub
sub
lods
fstp
cmc
enter
pop
inc
pop
cmp
or
cmp
ret
lods
shr
mov
pop
ret
fstp
daa
ror
jno
lock
scas
and
ret
popa
xor
imul
push
mov
xor
lahf
nop
sub
sub
sbb
jb
lods
sub
add
add
xor
xor
test
enter
in
mov
inc
dec
mov
mov
pop
mov
jmp
int3
mov
xchg
jmp
sbb
inc
mov
add
rcl
jne
dec
dec
mov
sub
xor
test
xor
add
add
inc
pop
mov
iret
mov
es
cmp
sbb
sbb
mov
add
lds
pop
icebp
adc
xlat
ret
(bad)
inc
arpl
mov
add
aaa
add
js
scas
in
add
or
xor
cmps
cli
call
xor
into
out
ret
add
xor
adc
mov
bound
mov
sub
jnp
or
std
dec
jne
xor
not
jg
cmp
jbe
mov
sub
fiadd
mov
ss
xor
pop
pop
sub
and
sbb
sbb
not
jb
ss
je
sub
xor
mov
adc
and
dec
aas
out
ret
dec
adc
or
xor
xor
arpl
or
xor
mov
jb
dec
add
dec
xlat
(bad)
fdiv
(bad)
cmps
adc
push
inc
daa
dec
pop
jbe
in
dec
pop
retf
adc
pop
mov
lahf
call
scas
adc
adc
adc
inc
sbb
add
out
mov
dec
sub
cwde
inc
pop
loope
(bad)
frstpm(287
pop
mov
std
push
sub
mov
mov
sahf
(bad)
scas
sbb
shl
outs
dec
je
ins
add
and
je
or
adc
js
mov
jmp
sbb
pop
aaa
pop
gs
pop
pop
dec
inc
in
cmp
or
fidiv
xchg
sub
test
or
or
shl
popf
push
sbb
sbb
hlt
mov
xlat
or
sbb
dec
mov
and
dec
push
and
or
sub
outs
loopne
mov
or
inc
sbb
push
out
or
xchg
(bad)
outs
imul
and
and
sub
ins
push
xor
test
sbb
das
or
sub
call
push
push
and
sbb
js
or
mov
xlat
dec
dec
dec
je
push
push
frstor
add
sub
adc
or
lock
push
add
daa
fmul
inc
rol
sbb
adc
shr
xor
inc
ror
mov
dec
jmp
push
pop
fiadd
push
xor
or
inc
sub
data16
jnp
mov
(bad)
iret
movs
aad
and
mov
lods
dec
mov
push
hlt
je
sbb
data16
lock
jl
mov
sbb
mov
pop
stos
ins
mov
into
add
ror
push
jne
push
add
pop
retf
sub
out
jg
mov
adc
add
mov
push
and
pop
add
or
cmp
lock
sahf
test
pop
sub
call
or
mov
add
(bad)
cmp
and
jnp
retf
xor
pop
frstpm(287
enter
add
mov
add
mov
inc
call
pop
nop
jnp
sbb
xlat
retf
les
pushf
repnz
and
pop
fiadd
imul
pusha
ja
adc
pop
mov
sbb
popf
and
cdq
imul
jg
ror
sub
je
sub
pop
mov
mov
cld
je
mov
sbb
or
mov
mov
cmp
fwait
push
sbb
mov
pop
sbb
and
sbb
sbb
ret
and
push
loopne
add
add
nop
data16
jb
call
and
call
or
add
xchg
aam
(bad)
les
ret
scas
adc
add
jbe
jmp
or
mov
sbb
sbb
xchg
stos
test
push
xor
mov
xlat
das
push
add
mov
mov
inc
mov
mov
jl
(bad)
pop
adc
adc
add
pop
je
or
out
or
sub
mov
pop
sbb
sbb
cmp
jb
inc
push
retf
adc
cmp
adc
or
add
aaa
clc
and
sub
push
sub
add
into
into
pop
outs
sbb
xchg
sbb
pop
xor
dec
sub
or
pop
jmp
out
pop
dec
in
sub
and
jns
mov
push
adc
sub
mov
mov
movups
or
add
pop
pusha
or
sub
adc
push
add
in
push
scas
mov
push
push
mov
cmp
(bad)
fld
mov
jle
scas
ret
sub
xor
sub
nop
sbb
and
js
add
or
fst
scas
lds
sbb
pop
ja
(bad)
movs
or
mov
adc
mov
enter
and
cmp
sub
xchg
jmp
aad
push
les
xor
inc
mov
ss
rcl
push
cmp
adc
and
fisub
(bad)
jne
push
cld
jmp
jbe
xchg
sbb
sub
cmp
mov
(bad)
mov
push
pop
or
jbe
test
push
jns
out
pop
pusha
and
sub
aaa
icebp
dec
fmul
mov
xchg
mov
jmp
mov
mov
sub
test
enter
in
sti
adc
pop
xchg
(bad)
dec
or
(bad)
mov
sbb
push
jge
inc
sub
fnstenv
shr
sub
cmp
xlat
inc
stos
xchg
lods
mov
lea
mov
addr16
mov
inc
sub
jae
(bad)
ins
sub
test
mov
test
(bad)
cli
push
mov
mov
mov
cld
jle
icebp
fiadd
and
and
or
inc
clc
jb
enter
dec
hlt
jne
dec
enter
cdq
cmp
pusha
cmp
jo
xor
add
adc
jnp
fdivr
jmp
shl
stos
movs
lock
mov
mov
int3
(bad)
lea
(bad)
loopne
inc
aas
aam
test
fimul
int3
inc
and
push
ret
fisttp
xchg
add
pop
add
push
lea
lea
mov
pop
mov
mov
adc
push
mov
shl
mov
inc
push
dec
add
xor
adc
jbe
add
int3
(bad)
mov
push
out
mov
or
sub
add
jecxz
dec
movs
cmp
addr16
adc
sub
and
movs
loope
dec
retf
add
out
adc
movs
addr16
popa
loop
pop
xchg
lock
and
sar
inc
arpl
inc
pop
loopne
xchg
sar
dec
shl
add
adc
jns
mov
jo
mov
loopne
lock
and
mov
xchg
fstsw
sahf
jne
inc
lock
shl
pop
add
(bad)
aas
jmp
inc
xchg
mov
adc
arpl
mov
mov
xor
and
pop
inc
pop
push
add
mov
pusha
pop
fmulp
hlt
fstp
fwait
and
push
add
lock
sub
imul
push
add
or
les
rcl
retf
jnp
add
dec
or
cli
fdiv
cmps
add
mov
sub
ins
in
mov
fcmovnu
or
fdivr
jo
cwde
xchg
sbb
or
test
cmp
sub
pop
pop
sub
sti
xchg
jne
push
xor
xor
int
add
jmp
and
in
mov
inc
jmp
nop
mov
(bad)
mov
jmp
push
adc
inc
or
scas
movs
jmp
aaa
(bad)
sub
or
add
xchg
ret
in
push
mov
jo
pop
add
or
sub
out
lock
mov
push
mov
cmp
sbb
and
or
shl
sub
xchg
enter
xchg
fnstsw
or
nop
dec
push
xlat
sbb
xchg
xchg
jnp
add
popa
mov
stc
pop
or
mov
adc
xchg
int3
inc
jge
outs
into
jo
xor
mov
mov
and
(bad)
sbb
push
(bad)
out
sbb
sbb
inc
pop
dec
mov
or
ins
xchg
imul
push
sbb
sar
mov
daa
push
in
dec
cmp
xchg
add
add
loope
into
add
push
pop
sbb
mov
push
sub
clc
es
inc
test
mov
(bad)
jmp
push
add
(bad)
sub
mov
lea
pop
mov
cdq
sbb
add
sub
and
in
or
js
pop
dec
push
pop
cmps
add
add
mov
pop
sub
inc
push
cmovg
shl
or
inc
cmps
adc
or
push
ds
sub
push
push
aas
enter
(bad)
xor
stos
js
daa
sub
xchg
add
movs
cmp
xor
xor
push
stos
aad
push
pop
pusha
iret
cmp
and
ret
xchg
mov
lock
mov
cli
pop
mov
sbb
inc
sbb
dec
ror
(bad)
arpl
sub
adc
jle
das
push
mov
mov
jmp
jo
jmp
test
sub
lock
mov
or
jle
mov
out
dec
push
jl
scas
push
or
push
xchg
jg
or
push
add
add
inc
sub
xor
lea
mov
mov
lahf
inc
out
jnp
jl
cmp
inc
sub
jmp
mul
sub
nop
mov
sub
cmp
mov
jl
mov
jecxz
inc
js
out
add
jb
sbb
ja
lock
cmp
cmp
inc
mov
mov
out
inc
push
fild
cmp
loopne
sub
pop
mov
mov
mov
movs
mov
scas
nop
and
icebp
scas
inc
imul
pusha
xchg
inc
dec
mov
mov
fdiv
neg
mov
or
pushf
mov
add
(bad)
sbb
and
xchg
std
mov
pop
and
adc
pop
ja
adc
lock
or
or
xchg
sar
rol
in
cmp
or
push
lods
imul
clc
(bad)
dec
movs
enter
enter
popa
cmp
mov
jno
xchg
push
or
jnp
pop
mov
mov
leave
adc
adc
inc
enter
scas
test
mov
sub
inc
loop
div
dec
push
in
fcom
push
push
sub
xchg
cdq
mov
sar
bound
jmp
adc
push
(bad)
(bad)
shl
jge
scas
rol
sbb
push
imul
mov
add
rcl
mov
mov
inc
sbb
mov
inc
fild
xchg
test
outs
dec
les
push
adc
add
jmp
std
lea
lea
pop
les
adc
or
or
add
mov
lahf
pop
dec
les
int3
pop
mov
xor
push
sbb
clc
push
push
add
test
add
or
xchg
and
pop
mov
add
add
push
mov
mov
in
jae
inc
outs
add
push
inc
adc
fnstcw
add
and
dec
ret
push
dec
ss
add
nop
mov
add
andnps
into
test
fcmovnb
jb
jmp
mov
push
pop
neg
push
int3
push
dec
shr
mov
mov
dec
scas
enter
(bad)
inc
xchg
call
movs
add
jns
fild
inc
sub
xor
(bad)
or
ins
pusha
mov
push
push
add
lock
and
popa
dec
or
call
xor
inc
ret
mov
mov
pop
stos
mov
add
shr
and
mov
call
push
fadd
add
cmp
jno
inc
test
arpl
add
sbb
ins
sub
jecxz
call
add
test
mov
and
(bad)
mov
adc
add
pop
xchg
jno
mov
dec
cmp
adc
out
std
cld
sub
sbb
sub
push
into
mov
add
and
lea
mov
push
push
mov
adc
mov
xchg
das
or
call
mov
mov
mov
add
xchg
mov
add
outs
adc
pop
inc
iret
rcl
sar
add
enter
add
adc
enter
popa
cdq
add
inc
or
sub
shr
xchg
or
ret
cdq
ret
adc
jbe
mov
jne
inc
call
mov
imul
mov
adc
(bad)
out
xor
adc
or
test
in
jmp
or
jge
inc
and
push
dec
movs
mov
dec
lea
mov
mov
dec
test
push
push
xor
adc
jge
xchg
mov
or
inc
mov
enter
pop
sub
push
push
push
sbb
sbb
mov
inc
arpl
stc
adc
ins
movs
mov
pop
clc
ret
xchg
push
cmps
out
adc
mov
sahf
cmp
scas
imul
out
scas
or
pop
bound
aad
sbb
repz
cmp
ja
dec
mov
or
jae
cmp
aaa
push
ins
and
or
mov
push
adc
in
dec
pop
dec
adc
hlt
fsub
inc
and
mov
cmp
in
adc
fs
test
mov
add
es
in
in
rol
mov
in
aam
add
aam
sub
(bad)
shl
jl
add
int3
int3
mov
or
pusha
add
ret
mov
arpl
sub
add
cmps
lods
jne
retf
pop
add
rol
mov
mov
cmp
fidiv
test
jo
dec
cmp
les
sub
les
arpl
nop
jg
out
shl
or
xchg
xchg
sub
arpl
inc
aaa
je
xchg
xor
or
mov
data16
repz
add
push
dec
ds
xchg
std
test
pusha
xchg
dec
jnp
pusha
(bad)
rol
mov
or
sbb
or
jnp
mov
cli
mov
xor
jmp
dec
dec
shl
scas
lods
ffree
inc
das
arpl
dec
pop
hlt
cmp
pop
inc
hlt
inc
das
lods
and
aaa
aaa
ret
(bad)
mov
std
imul
fadd
fcmovb
and
(bad)
aaa
cmps
mov
xchg
or
ins
jno
xchg
clc
aas
clc
mov
push
mov
pushf
and
and
or
mov
ds
xchg
xchg
les
mov
push
or
xlat
(bad)
push
push
jno
addr16
xor
mov
and
fs
retf
mov
sub
push
nop
(bad)
jle
scas
adc
js
pop
push
and
xchg
cmps
ret
add
imul
std
or
adc
mov
mov
movs
sbb
and
pusha
sub
adc
push
or
out
sub
push
iret
(bad)
inc
add
add
or
jns
cmc
cmp
movs
push
adc
pop
or
or
mov
adc
sbb
into
add
sti
adc
adc
or
sub
ror
iret
in
push
ret
inc
add
cwde
add
mov
push
add
xchg
inc
jecxz
jg
lods
sbb
cmp
jne
mov
pop
aam
fsub
test
ja
sbb
or
sbb
add
adc
fdiv
fadd
loopne
add
nop
scas
loopne
dec
mov
inc
test
add
es
sub
jmp
cmps
push
push
cmp
sbb
jmp
sub
push
movs
adc
sub
mov
jnp
mov
clc
inc
and
push
xchg
pop
jmp
loop
test
jmp
pop
xrelease
pop
pop
pushf
lods
jnp
push
mov
pop
dec
xor
or
pop
aam
(bad)
push
aam
xchg
lea
cld
push
adc
lds
sub
and
fcmovbe
mov
mov
ret
push
pop
ffree
and
add
cmp
call
add
mov
mov
adc
dec
pushf
pop
cmp
sbb
call
adc
in
add
(bad)
cmp
pop
leave
sti
lds
sub
mov
inc
mov
adc
(bad)
inc
(bad)
int
imul
dec
add
call
sbb
test
sar
arpl
push
jae
or
loopne
pushf
cli
adc
mov
clc
mov
aas
dec
fiadd
add
jo
add
jg
adc
pop
add
scas
clc
and
hlt
out
add
add
jnp
and
push
and
push
fcomp
clc
hlt
test
das
mov
mov
mov
jmp
inc
loopne
aam
adc
push
movs
test
es
ins
inc
ret
daa
inc
frstor
stos
fild
fsub
mov
mov
or
mov
imul
mov
ret
add
pop
aas
and
jne
sbb
imul
or
data16
mov
call
add
xor
or
iret
sub
sub
and
cs
test
cmp
ficom
xchg
cmps
pop
inc
add
and
outs
hlt
mov
in
retf
or
(bad)
mov
rcl
jmp
sbb
add
dec
jne
lea
lea
mov
rep
push
adc
inc
scas
push
xchg
shr
cli
push
je
or
dec
add
out
outs
pop
ret
pushf
pop
addr16
mov
nop
mov
adc
sub
and
scas
cmps
sub
mov
mov
dec
ror
push
push
dec
es
loope
fidivr
fsubp
retf
adc
dec
adc
or
jne
lahf
xor
push
pop
xchg
dec
inc
cmp
or
mov
shl
mov
seto
test
btr
jmp
add
(bad)
adc
add
adc
xlat
popa
mov
ror
cmp
(bad)
or
jp
fbstp
xchg
adc
xchg
ret
rcl
add
mov
mov
test
fldenv
data16
jb
push
aam
adc
adc
pop
jmp
sbb
mov
cmp
sar
pop
sbb
clc
sbb
ret
(bad)
hlt
ret
inc
add
aad
fwait
ret
mov
xchg
pop
push
aam
add
je
jmp
push
xor
add
mov
adc
add
in
push
fwait
ins
inc
loopne
test
out
add
or
lods
dec
cwde
mov
aam
adc
mov
push
leave
movs
retf
adc
out
adc
or
inc
out
inc
aaa
push
setae
cwde
add
mov
ins
movs
pop
das
mov
xor
enter
rol
pop
inc
fst
push
hlt
inc
in
out
mov
push
adc
push
cmp
out
sub
adc
loop
or
sub
adc
in
rcr
cmp
test
dec
gs
shr
jmp
mov
mov
ins
out
cmp
mov
out
fucomip
leave
arpl
add
push
call
mov
test
shl
adc
adc
cmp
(bad)
lds
outs
arpl
arpl
sub
jb
fadd
and
add
fdivr
or
inc
sbb
mov
mov
xchg
sub
inc
dec
pushw
add
dec
test
inc
add
xor
or
sub
ret
adc
rcl
lock
retf
out
or
adc
or
push
adc
sub
(bad)
push
and
popa
add
or
xlat
push
jmp
jge
push
cs
cmp
or
mov
retf
add
shr
leave
push
xor
or
cmp
add
add
inc
rol
cwde
fwait
pop
mov
clc
aas
or
sub
adc
fdivr
xor
scas
or
or
sar
call
or
add
or
ins
clc
mov
xadd
loopne
lods
ja
dec
fmul
mov
pop
sub
add
push
adc
fiadd
dec
and
mov
push
push
pop
xchg
xchg
js
lock
xor
jl
mov
pusha
cmp
call
scas
xor
cmp
add
cmp
jo
test
shl
jbe
sub
jecxz
mov
add
mov
dec
jnp
or
out
mov
clc
sahf
sar
pop
pop
pop
enter
and
push
cwde
ret
popa
xchg
rol
ins
mov
push
out
dec
ror
push
mov
lods
sub
in
mov
icebp
lock
mov
aam
adc
nop
sbb
dec
adc
pop
mov
cld
mov
and
dec
aam
mov
push
sbb
ja
push
mov
clc
pop
pop
cs
retf
pop
hlt
pop
fcom
push
cmp
adc
cmp
inc
mov
xor
xchg
icebp
leave
push
xor
pop
pop
cmp
push
mov
lds
dec
in
jl
arpl
xor
ret
hlt
jl
ja
jge
sbb
dec
sub
jne
fcomp
(bad)
hlt
add
mov
jmp
dec
sbb
add
mov
jmp
daa
mov
in
cwde
inc
daa
in
inc
test
sbb
cmp
jo
adc
rcr
push
mov
sub
inc
inc
inc
push
jns
aas
mov
sbb
mov
and
or
sub
clc
pop
pop
(bad)
loope
outs
adc
cmps
int3
sbb
adc
adc
pop
adc
push
sbb
add
dec
push
rol
jo
add
jne
add
mov
and
in
sub
or
adc
loope
or
mov
jo
pop
aam
adc
mov
xchg
jl
(bad)
and
addr16
sub
sbb
xchg
popa
in
test
int3
mov
mov
out
or
cmps
xor
inc
arpl
adc
dec
aam
mov
xor
pusha
mov
xchg
pop
mov
add
call
adc
cmp
mov
je
pop
mov
pop
mov
aad
mov
ja
push
xor
inc
ret
push
fwait
cld
rcr
int
cmp
ret
lock
fild
dec
leave
fcom
mov
jl
mov
jne
cmc
ret
jge
mov
es
dec
sbb
adc
lahf
fisttp
adc
adc
push
inc
out
mov
das
xor
clc
jns
sbb
stos
inc
out
pop
mov
mov
clc
push
xor
fiadd
test
pop
nop
inc
inc
pop
or
shl
inc
les
inc
arpl
inc
inc
jo
sub
sub
add
dec
cmp
push
inc
inc
shr
jmp
add
push
add
pop
ins
std
xor
sar
jo
add
in
mov
addr16
jne
adc
xchg
ds
push
dec
add
outs
push
loopne
dec
adc
push
sub
sub
inc
pop
jae
push
pushf
sbb
dec
in
ss
stos
inc
cmp
or
jmp
shl
mul
and
repz
lods
pop
xor
push
jge
clc
jae
jne
ins
sahf
push
adc
cmp
jne
in
mov
or
jb
hlt
or
inc
movs
push
test
movups
jo
dec
cdq
and
cmp
xor
jno
pusha
mov
data16
push
shr
adc
cmp
das
and
jno
fs
pop
ja
adc
scas
mov
fnstenv
sub
cmp
(bad)
loopne
lock
int3
out
in
xor
xor
movs
push
je
popa
sbb
cdq
aam
jmp
push
icebp
cmp
in
xchg
push
xor
adc
out
mov
dec
or
data16
fnstenv
mov
ja
push
repnz
shl
enter
dec
inc
je
out
movs
mov
icebp
pop
je
in
xor
inc
stos
xor
jmp
pop
or
(bad)
test
push
gs
jo
ss
cmp
retf
in
pusha
scas
push
ins
outs
outs
jle
sub
fist
inc
loope
sbb
call
fs
mov
add
push
add
push
pop
mov
mov
imul
ins
popa
cmp
imul
aad
cmp
dec
xor
xchg
push
or
inc
dec
js
imul
or
outs
test
bound
pop
mov
prefetchwt1
or
mov
repnz
movsx
mov
cmps
push
xlat
mov
add
loop
cdq
ins
scas
pop
daa
lea
pop
adc
inc
mov
mov
or
dec
sub
loopne
and
inc
dec
inc
xlat
add
inc
je
push
sub
int
push
ss
push
dec
and
jge
les
(bad)
jnp
mov
mov
inc
push
sub
icebp
popa
sbb
sbb
mov
or
mov
mov
push
pop
mov
pop
and
mov
test
test
ror
enter
or
enter
sbb
cmp
js
add
fs
push
mov
scas
or
js
inc
aaa
adc
repz
mov
xchg
adc
sub
jmp
in
and
jno
inc
movs
adc
sub
dec
(bad)
clc
mov
or
dec
dec
ficom
cmp
push
out
ds
movs
xor
or
pop
mov
scas
xchg
inc
or
(bad)
es
aam
adc
push
push
dec
push
push
mov
adc
xlat
pop
cld
or
adc
add
scas
sub
(bad)
mov
inc
mov
gs
mov
adc
ret
add
and
sar
push
adc
push
xchg
fnstenv
and
or
mov
cmp
cld
push
pusha
arpl
push
or
or
dec
sub
mov
mov
add
xlat
adc
push
ins
and
push
sahf
add
dec
jbe
stos
xor
test
call
in
and
mov
icebp
clc
mov
pop
sbb
and
fld
push
mov
inc
add
mov
or
or
sbb
inc
or
inc
and
mov
inc
repz
loope
add
and
xchg
shl
iret
test
retf
ror
or
or
sub
pop
adc
inc
sub
inc
mov
je
jmp
sub
int3
mov
jmp
jnp
data16
imul
(bad)
xor
test
or
sub
push
cmps
jmp
sbb
pop
adc
fdivr
lock
mov
ins
or
sbb
lds
inc
push
shl
add
leave
pop
push
div
aad
nop
iret
js
inc
and
enter
jmp
jb
and
add
loopne
adc
rol
xchg
dec
xchg
mov
dec
clc
add
cmp
jge
out
icebp
sbb
je
jmp
cld
dec
mov
inc
fild
add
fdivrp
or
push
sbb
faddp
fmul
adc
js
xor
push
je
mov
rcr
push
sub
and
cmp
mov
popf
add
mov
cmps
jae
lock
xor
mov
jle
pusha
pop
inc
aas
cmp
inc
push
mov
loopne
inc
lea
fdivr
sbb
stos
cmc
inc
pusha
push
inc
stos
leave
mov
mov
xchg
xor
out
sti
adc
pop
rep
and
fnsave
xchg
jns
add
(bad)
push
lock
push
mov
sbb
fnsave
cwde
cwde
jne
xchg
rcl
cmp
fwait
fs
mov
rcl
mov
fcomp
or
push
loopne
mov
add
call
dec
mov
cmp
cmc
sbb
fld
cld
pop
or
cmp
ins
loopne
cmp
ret
outs
and
jne
cmp
repz
push
dec
ds
fnsave
mov
nop
adc
sti
fisub
dec
imul
les
and
push
sbb
mov
addr16
ret
add
and
nop
into
dec
push
adc
fild
sbb
add
cmc
pop
mov
xchg
jecxz
pop
add
les
js
push
add
aaa
je
xchg
sbb
call
cmp
or
and
arpl
stc
mov
fdiv
adc
pushf
and
push
and
inc
inc
je
in
inc
stc
xchg
inc
shl
gs
daa
test
push
push
in
es
mov
push
jge
dec
lea
jbe
inc
cmp
or
ss
mov
ins
out
adc
(bad)
sbb
test
js
test
xchg
aas
adc
cmc
inc
sub
inc
inc
cmp
jb
push
stos
mov
mov
inc
pop
xchg
das
shl
or
pop
or
sbb
add
fistp
or
addr16
sbb
fimul
push
sub
inc
sbb
dec
dec
arpl
mov
jmp
xor
test
and
fiadd
mov
dec
adc
enter
inc
xor
jns
adc
sub
jnp
mov
sub
mov
add
cmps
out
ins
aad
cdq
pop
inc
and
and
stos
iret
cwde
pop
cmp
or
inc
stc
mov
dec
inc
call
je
xchg
lahf
pop
outs
lock
cli
sar
cmp
push
sbb
sub
adc
lahf
mov
test
sub
in
daa
je
push
adc
or
or
or
shl
xor
inc
jo
fisttp
popf
mov
dec
cmp
movs
xchg
mov
mov
and
inc
and
add
hlt
or
push
jp
icebp
cmp
or
pop
jb
cmps
movs
push
cmc
gs
test
retf
jne
mov
sbb
mov
fnsave
add
fist
adc
push
and
pop
and
mov
fnsave
mov
xor
xor
or
sbb
enter
adc
sbb
mov
jno
and
or
inc
jg
(bad)
jne
mov
sbb
movs
xchg
ret
mov
add
xor
and
mov
clc
scas
movzx
cmps
data16
add
dec
mov
xor
repnz
shl
adc
leave
mov
pusha
add
pop
add
push
add
sub
inc
neg
dec
jne
dec
pop
sbb
or
add
pusha
push
mov
sbb
and
test
fadd
and
mov
add
or
pop
jnp
adc
call
push
or
push
sub
cmp
mov
dec
xchg
cmp
ja
scas
cli
dec
push
add
add
push
lea
es
sub
push
pop
iret
jo
add
cmp
loop
js
and
div
or
repz
push
stc
adc
cmps
daa
ins
add
add
jl
jbe
hlt
mov
call
imul
dec
aas
loope
inc
enter
test
sbb
ror
test
or
shl
jne
lods
sub
mov
xchg
jecxz
stos
ins
and
out
adc
jmp
mov
add
adc
mov
mov
cmp
lahf
loopne
push
jo
add
or
sbb
jae
pop
xchg
lea
adc
cmp
xor
jb
js
inc
dec
dec
push
jne
mov
js
sbb
and
ror
jmp
ror
lods
inc
cwde
or
mov
add
inc
add
loope
add
mov
inc
cmp
in
sbb
add
jns
sbb
das
sub
bound
not
jg
hlt
jmp
mov
jg
adc
xlat
lods
jge
push
mov
adc
xor
mov
cmp
or
jne
pop
cwde
je
or
add
call
and
mov
popa
outs
adc
icebp
aaa
adc
inc
and
lods
test
add
add
dec
push
and
pop
lock
lods
or
punpcklwd
add
push
mov
push
ror
fiadd
fmul
rcr
cmp
jl
fsub
sti
fiadd
ins
lock
aas
jb
sub
fsub
daa
clc
jo
loopne
cmp
push
aas
shl
adc
test
test
sti
sbb
test
push
rcl
mov
sti
inc
jnp
and
cmps
je
mov
push
and
jne
sbb
xor
mov
enter
pop
or
sub
pop
jae
pusha
sbb
loope
inc
js
mov
out
sub
ss
adc
fcmovu
jle
and
ror
mov
adc
(bad)
xchg
scas
cmp
mov
xchg
stc
push
call
mov
add
bt
mov
adc
stos
jne
enter
ret
outs
in
jge
iret
jo
fdiv
mov
pop
fsub
retf
mov
or
add
dec
jnp
lock
push
cmp
cmp
les
loope
ss
push
scas
cmp
sahf
sub
push
adc
scas
sbb
or
add
adc
shl
fadd
or
sub
outs
add
dec
in
and
dec
or
xor
aad
sub
int3
test
mov
add
aas
push
fist
xor
adc
sbb
mov
stos
pop
retf
jno
sub
cmp
cmp
daa
loope
jl
mov
pop
shr
fstp
push
sbb
adc
ret
or
neg
jl
ins
test
inc
les
and
callw
sbb
in
dec
push
cmp
adc
mov
rcr
outs
mov
mov
popa
adc
inc
dec
ss
xor
inc
pop
sub
sbb
sbb
adc
cdq
loop
mov
add
add
shl
pop
or
mov
add
rcl
dec
or
mov
pop
lea
fwait
mov
(bad)
dec
inc
push
or
dec
hlt
fcom
push
loopne
push
inc
adc
adc
aaa
adc
outs
fs
rcr
cmp
and
cmp
dec
imul
lahf
or
xor
xchg
nop
adc
sti
and
test
pop
(bad)
outs
movs
xchg
lahf
scas
cmp
int3
mov
xchg
nop
arpl
sbb
icebp
jae
add
ret
dec
cmp
je
mov
sar
push
mov
mov
adc
scas
inc
xchg
jmp
inc
sub
inc
or
jp
pop
lods
(bad)
jmp
push
mov
inc
jg
dec
cmp
je
mov
or
dec
int
dec
invd
and
(bad)
sbb
mov
mov
mov
mov
xor
out
jae
mov
jno
push
(bad)
sub
sub
cmps
mov
inc
inc
dec
movntps
dec
push
jg
xchg
lods
cmp
jg
ja
adc
xchg
in
fldlg2
pop
or
lods
js
cmps
js
hlt
or
adc
cmp
jle
xlat
dec
loope
test
push
sbb
pusha
popa
xchg
loope
push
fidivr
lock
lock
mov
call
in
scas
add
xchg
test
sub
cli
ds
je
mov
mov
xchg
mov
xchg
fwait
rcr
jmp
adc
and
mov
and
mov
clc
inc
fdiv
mov
mov
stos
inc
cmp
mov
xchg
movs
mov
fldcw
jno
mov
sbb
sbb
xor
outs
adc
jno
ins
xor
sti
jge
xchg
test
repz
adc
test
add
sets
jle
movs
adc
pop
lods
les
adc
mov
jo
sub
and
movs
mov
bound
add
dec
and
or
not
xchg
popa
sub
push
jmp
xor
in
add
xor
mul
ret
push
arpl
push
(bad)
push
cmp
(bad)
(bad)
jmp
mov
sub
xor
push
mov
adc
cmps
ret
add
cmp
ficom
cs
push
mov
add
jecxz
cld
(bad)
add
mov
mov
mov
das
outs
cs
rcl
fcmovnb
arpl
xor
adc
push
stos
ror
(bad)
push
add
cmp
add
xor
ja
lods
jne
sub
xchg
mov
and
lds
test
push
ins
sub
lock
inc
in
inc
inc
sbb
push
cdq
test
push
push
pop
cmp
(bad)
pop
pusha
xchg
mov
cmp
push
dec
ins
xchg
mov
mov
and
leave
or
rol
push
daa
push
adc
pop
jns
aad
mov
add
add
add
bound
sub
and
mov
arpl
inc
mov
mov
mov
dec
outs
not
add
fadd
ja
mov
mov
add
add
add
icebp
pop
neg
push
std
xor
push
or
mov
call
sub
or
movs
cmp
sbb
(bad)
cmp
dec
cmp
stc
sub
dec
and
(bad)
loope
inc
cmps
(bad)
daa
xchg
jl
cmp
mov
pop
test
retfw
and
int
data16
pop
jecxz
clc
or
xor
mov
inc
jmp
inc
adc
inc
mov
sub
mov
jne
jmp
cmp
xor
shl
and
add
mov
call
aaa
mov
push
ja
jp
sbb
sbb
pmaxsw
cmps
hlt
call
icebp
loopne
leave
call
inc
pop
add
or
or
cmp
cmps
loop
mov
mov
push
xor
inc
sub
add
pop
or
push
or
jl
pop
dec
push
add
jae
jl
mov
(bad)
push
jbe
nop
xor
pop
cmc
dec
and
outs
call
push
add
xchg
bound
or
int3
js
adc
sbb
hlt
sbb
test
mov
xchg
add
in
fld
pusha
mov
nop
jmp
mov
test
mov
(bad)
outs
add
add
iret
sbb
mov
scas
add
retf
add
add
sbb
dec
add
(bad)
js
daa
mov
dec
or
inc
mov
mov
sbb
mov
jo
sub
ret
loopne
pop
and
call
fisub
jge
add
lds
mov
push
pop
sbb
lds
cwde
sar
shl
movs
lahf
dec
dec
add
add
lahf
pusha
adc
adc
(bad)
cmp
inc
ret
add
test
add
push
mov
and
jecxz
pop
(bad)
jnp
adc
xor
mov
sbb
and
jg
dec
adc
push
loopne
iret
pop
push
cmp
jge
push
popa
cmp
movs
ror
or
xor
jge
mov
push
shl
add
jg
js
fwait
jge
xchg
ss
call
push
inc
sub
pop
jbe
fadd
push
adc
or
mul
dec
pop
je
test
shl
jne
(bad)
fwait
xchg
call
leave
jbe
mov
push
rcr
hlt
dec
push
ja
test
and
repz
mov
pop
rcl
mov
adc
add
pop
mov
pop
adc
sub
mov
xor
shl
push
and
mov
nop
add
or
push
or
dec
cmp
aad
stos
mov
mov
loopne
xor
and
pop
adc
push
lock
dec
push
or
mov
adc
mov
ins
dec
push
mov
inc
pop
cmps
iret
adc
xor
dec
mov
add
arpl
sub
je
inc
jo
cmp
inc
pop
or
add
or
push
lds
inc
mov
js
stos
repnz
pop
mov
clc
add
push
shl
cmp
bound
push
mov
inc
inc
(bad)
cmp
into
add
and
cmp
pop
js
add
cdq
idiv
or
add
(bad)
call
popa
jmp
mov
jl
fimul
mov
loopne
dec
or
lods
pop
dec
or
xor
cmp
aad
xchg
mov
push
inc
push
mov
pop
dec
fcomp
dec
sbb
adc
push
xchg
mov
add
and
js
cmp
in
in
nop
pop
push
add
jg
cmp
scas
loope
mov
or
add
pop
adc
jmp
dec
cmp
(bad)
cmp
jle
add
scas
mov
inc
out
push
retf
jl
adc
sbb
ror
add
add
or
jne
ins
add
test
sbb
adc
xor
dec
sub
push
xor
xchg
mov
and
or
push
nop
dec
js
aam
or
stos
push
push
fcomp
xor
cmps
push
stos
add
sbb
jge
add
cmp
ja
inc
or
add
inc
cmp
call
jbe
cmp
or
dec
xchg
or
xlat
pop
adc
add
in
dec
mov
int
cmp
mov
cmp
inc
(bad)
sub
enter
mov
(bad)
mov
or
jae
jae
mov
pop
and
clc
pop
jae
(bad)
imul
inc
add
pop
jo
mov
lock
(bad)
jbe
(bad)
sbb
pusha
add
xchg
and
out
jmp
mov
nop
or
cdq
jl
jg
inc
push
pop
push
inc
sbb
pop
push
or
jmp
inc
pop
xchg
pop
xor
sub
xor
rcr
adc
adc
jl
ret
inc
mov
mov
inc
add
mov
ja
mov
sbb
push
inc
in
xlat
pop
inc
(bad)
cmp
dec
dec
add
pop
and
loope
dec
mov
dec
xchg
cmp
je
aam
into
pop
and
add
rol
test
add
mov
retf
mov
lahf
cmp
xor
jne
out
test
outs
mov
sub
aam
mov
xchg
in
in
pop
push
repnz
daa
jb
rol
jbe
ins
imul
loop
sldt
vmread
push
add
ret
mov
cmp
iret
sub
es
les
call
mov
push
mov
adc
(bad)
imul
mov
repnz
xchg
mov
lods
repz
or
dec
hlt
retf
retf
or
cmc
adc
adc
mov
aam
enter
sti
and
cld
out
xor
xor
cmp
push
dec
or
test
call
pop
call
xor
dec
dec
mov
mov
fild
(bad)
pop
scas
int3
adc
add
xor
loope
leave
or
adc
nop
adc
pop
cld
sub
push
(bad)
fdiv
or
sbb
push
shr
leave
sub
inc
sbb
fdivr
jg
cmp
cmp
repnz
xchg
ins
xor
or
cmp
ds
or
inc
jp
xchg
or
movs
cmp
xor
jmp
lock
fiadd
jg
cmp
rcl
push
or
jecxz
ins
fisubr
sti
outs
mov
or
in
sti
adc
or
xchg
cmp
mov
inc
add
ss
cwde
idiv
or
ins
ja
add
inc
and
mov
jp
sbb
das
sub
das
xchg
std
dec
sahf
and
dec
imul
imul
pop
(bad)
out
sub
arpl
sub
adc
pcmpeqd
(bad)
inc
and
or
in
data16
retf
lock
nop
xchg
in
pop
push
pop
mov
push
push
mov
dec
pop
adc
inc
xlat
mov
and
pusha
jg
lods
clc
xor
retf
inc
cmp
inc
inc
adc
movs
sbb
jno
adc
fadd
inc
jne
inc
sub
fs
mov
jae
cmp
cwde
repnz
sbb
add
jp
xchg
das
sbb
test
add
or
xlat
xor
dec
pusha
mov
in
test
add
out
in
or
add
jo
xor
xor
ins
jns
jns
shl
xchg
jns
in
test
sbb
mov
daa
cmp
push
outs
and
pusha
daa
ja
or
inc
add
mov
icebp
mov
add
test
jg
inc
and
hlt
dec
add
mov
lahf
pop
ret
fld
out
mov
pop
cmp
jmp
movs
add
sbb
icebp
mov
adc
jae
cmp
lds
xor
sti
int
and
push
pop
std
fiadd
inc
jbe
or
imul
cmp
cwde
and
cs
aam
add
cmp
mov
ret
nop
or
ja
xchg
or
mov
inc
lods
adc
push
jno
dec
adc
adc
pop
inc
bound
(bad)
shl
cmp
(bad)
mov
outs
fadd
mov
jb
je
dec
je
jmp
push
sbb
repz
inc
out
int3
(bad)
sbb
pop
cs
or
(bad)
in
mov
mov
ds
push
dec
pop
adc
jno
inc
scas
push
int3
xchg
popa
cmp
mov
nop
push
cmp
mov
mov
loopne
dec
push
push
sbb
fdiv
sub
or
rol
test
das
push
adc
dec
xlat
jecxz
jmp
push
mov
pop
inc
and
push
mov
outs
add
or
lock
xchg
mov
adc
popf
and
lock
loopne
pop
sbb
les
(bad)
pop
sub
aaa
or
inc
xor
inc
sub
outs
(bad)
mov
js
scas
xor
mov
push
sbb
mov
(bad)
loope
adc
stos
mov
dec
jge
xor
sbb
daa
xor
dec
jmp
sub
iret
hlt
or
in
das
jb
jg
add
sub
mov
jmp
inc
(bad)
mov
rol
bound
jbe
xor
jnp
ret
(bad)
xor
cmp
mov
repnz
sbb
add
shl
(bad)
jo
jne
jne
dec
ret
dec
push
pop
popfw
rcl
retf
adc
arpl
dec
popa
add
mov
adc
fidivr
inc
(bad)
adc
je
dec
jg
push
inc
jp
or
dec
or
pop
fdivr
fadd
sub
mov
clc
imul
ja
jge
push
loopne
add
test
push
pop
(bad)
mov
jl
test
outs
lock
mov
cmp
test
pusha
mov
out
dec
je
loopne
loopne
mov
pop
stos
loope
aas
outs
mov
add
(bad)
and
inc
popa
jb
inc
in
sub
dec
nop
mov
int3
mov
inc
push
mov
int
add
jp
sub
aas
inc
mov
pop
cli
stc
xchg
cmp
sub
cmp
adc
sub
or
jnp
inc
lds
mov
adc
(bad)
mov
mov
mov
rol
add
add
push
jmp
or
sub
pop
clc
add
or
scas
mov
mov
dec
adc
cmc
mov
pop
cmp
jne
lea
push
or
jo
sbb
jmp
add
xor
ja
jae
cmp
jne
icebp
xor
fistp
idiv
mov
mov
sbb
fidiv
or
je
ja
pop
adc
inc
rol
push
or
xor
mov
imul
sbb
xor
cmp
xor
test
mov
xchg
cdq
mov
js
pop
ret
aaa
into
mov
mov
and
pop
dec
cmp
fistp
sbb
add
or
sahf
mov
das
or
mov
jmp
js
dec
or
push
pop
mov
out
idiv
fdiv
shl
push
pop
add
xor
das
ret
loop
jb
or
inc
jo
and
loopne
daa
mov
cli
push
add
jge
add
leave
push
nop
or
shl
mov
or
je
(bad)
popf
mov
dec
mov
jmp
add
xchg
or
xor
out
rol
add
sbb
or
cmp
jg
and
cmp
popf
clc
add
mov
jmp
out
ror
imul
imul
jmp
add
and
xchg
mov
dec
sub
je
dec
sub
jb
or
sbb
sub
cpuid
adc
add
pop
and
js
ror
nop
js
pop
jge
or
iret
clc
clc
inc
push
xlat
mov
call
inc
test
adc
arpl
and
lock
mov
adc
lods
adc
into
(bad)
mov
inc
inc
cmp
sti
push
cmc
pusha
stos
mov
mov
lods
fwait
mov
hlt
push
push
cmp
add
jl
stos
lea
mov
jmp
leave
sbb
jbe
cwde
ret
push
mov
jo
sti
je
jo
adc
or
inc
xor
adc
dec
jge
xchg
push
arpl
ret
inc
lods
dec
sbb
xor
cmp
fs
push
push
mov
xor
movs
loope
fs
das
sub
add
call
ins
xor
loope
(bad)
jmp
cmp
retf
xlat
pop
add
fs
sbb
test
sub
inc
and
test
int3
sar
ins
and
enter
push
bound
push
aaa
push
mov
jmp
adc
ror
pop
movs
pop
or
pusha
mov
loopne
jmp
sbb
in
loope
pop
xchg
or
jmp
adc
mov
sti
pop
loopne
jne
inc
sbb
sti
xchg
js
pop
xor
sub
or
test
cmps
or
jbe
add
jo
in
or
sbb
xchg
dec
mov
add
push
inc
movs
retf
fild
xchg
retf
(bad)
iret
add
inc
mov
pop
and
push
xchg
mov
inc
in
mov
adc
nop
xchg
sbb
adc
and
inc
ins
jne
mov
sbb
scas
call
idiv
(bad)
cmps
jns
imul
push
or
das
jmp
add
cmovno
rol
imul
adc
sub
enter
add
aas
outs
popf
pop
mov
in
add
adc
cli
test
out
lock
imul
push
arpl
push
add
pop
xchg
add
cmp
and
dec
adc
outs
mov
mov
popa
ror
js
mov
loopne
nop
pop
xchg
inc
or
or
hlt
and
and
rol
and
repnz
bswap
push
lods
or
(bad)
cs
sbb
pop
mov
js
add
push
cmp
clc
and
adc
in
lock
outs
and
loopne
mov
sbb
xchg
cmp
pop
lods
je
dec
es
cmp
addr16
cmp
jl
fld
adc
cmps
je
xchg
cwde
or
in
ret
push
dec
push
pushf
add
or
xchg
sbb
xor
adc
sub
mov
push
sbb
and
js
mov
xchg
add
dec
jle
or
popa
push
(bad)
or
add
fadd
loopne
mov
out
add
push
popa
mov
add
test
lock
fcomp
xchg
int
mov
lea
mov
sbb
mov
push
pushf
test
sar
jne
jns
push
jle
test
and
cmp
mov
xchg
cmp
lock
pop
fstp
cmp
fdivr
jl
cs
add
adc
adc
push
das
jo
out
cmp
adc
sbb
jo
add
mov
in
jmp
pop
pop
and
(bad)
jmp
adc
lea
push
stc
push
cwde
jmp
add
popf
fdiv
sub
push
mov
js
xor
mov
pop
adc
gs
xor
pop
call
add
push
loope
push
inc
adc
adc
in
dec
sub
sbb
and
je
xchg
(bad)
dec
pop
arpl
inc
sbb
inc
xor
lock
bound
mov
mov
arpl
sbb
mov
dec
mov
shl
add
adc
cmps
mov
js
xchg
pop
push
cmp
je
fadd
ret
push
or
add
pop
mov
gs
je
xor
xlat
test
and
retf
inc
loopne
or
sbb
sbb
adc
jns
push
scas
xchg
mov
lock
inc
(bad)
(bad)
mov
daa
push
test
cdq
mov
mov
cdq
ins
and
arpl
adc
push
test
sub
xor
or
push
add
sar
mov
into
push
or
and
xchg
push
loopne
mov
and
fnsave
dec
or
mov
pop
or
jmp
lea
sar
xchg
int3
sbb
jae
cld
mov
and
adc
bound
not
fisttp
sub
or
into
push
pop
lock
fsubr
sub
adc
out
or
ins
sar
push
cmp
jle
push
xor
repz
(bad)
outs
pusha
and
aas
shl
dec
and
cmp
sbb
add
(bad)
popf
inc
adc
sar
pop
cmp
shl
bt
or
pop
test
pop
mov
icebp
invd
inc
jg
shl
mov
sbb
lahf
aas
jge
cmp
and
hlt
jg
sbb
dec
inc
mov
dec
call
and
mov
push
cmp
add
scas
lea
scas
dec
sub
les
sbb
push
mov
or
mov
or
cwde
jecxz
mov
loop
cmp
adc
ror
pushf
loopne
or
inc
mov
push
enter
or
and
cmps
outs
out
push
cmp
cmp
std
(bad)
mov
out
es
mov
dec
in
add
cmp
ret
clc
data16
jo
cmp
cs
lds
push
sub
push
add
ins
test
clc
add
dec
pop
dec
xor
clc
push
mov
(bad)
js
or
fisub
movzx
nop
(bad)
in
jecxz
push
push
sbb
outs
clc
aaa
xor
fcmovb
mov
sar
out
push
inc
mov
xchg
aas
xor
out
sub
cmp
sar
mov
dec
lock
jae
mov
js
cmp
xor
out
inc
dec
or
and
jl
add
cmp
jmp
push
movzx
mov
out
add
xor
repz
push
adc
inc
sub
shr
lds
dec
sub
cmp
(bad)
mov
js
imul
mov
mov
and
test
mov
push
pop
fwait
shr
or
adc
xlat
xor
stos
dec
xor
dec
test
push
push
fadd
call
or
xor
mov
cmp
out
or
push
add
jmp
lds
cmc
dec
call
jmp
mov
daa
test
sbb
(bad)
mov
xchg
or
jnp
rol
(bad)
stc
pop
fucomp
aad
data16
or
inc
(bad)
outs
add
and
aas
jl
mov
jo
popa
push
ficomp
cli
stos
add
push
das
inc
adc
and
add
inc
or
lea
add
and
inc
inc
ror
call
loopne
add
mov
js
jns
xor
mov
or
mov
ins
xor
adc
imul
add
cmovo
or
stos
inc
cmp
and
sub
ins
clc
hlt
mov
sbb
add
lock
loopne
xor
lea
push
das
xor
dec
ins
adc
push
mul
(bad)
sbb
xor
mov
(bad)
cld
lods
imul
frstor
imul
dec
ins
aad
mov
bound
clc
inc
sub
retf
jb
je
dec
enter
inc
shl
jbe
pusha
or
adc
or
push
or
or
jge
je
dec
rcl
push
dec
test
push
adc
cld
std
push
jmp
or
jmp
sbb
je
inc
outs
stos
push
push
xor
data16
mov
sbb
cdq
adc
cmp
lock
sbb
sbb
push
push
outs
mov
ror
add
add
jecxz
cmp
ins
lods
aas
cs
inc
es
and
ret
dec
mov
or
dec
mov
adc
cs
cmp
js
(bad)
sti
xlat
dec
loope
xchg
add
adc
shr
ds
mov
add
add
sub
jecxz
sbb
jmp
xchg
xchg
pop
lea
mov
jbe
and
ror
pop
xor
sbb
push
push
rol
aam
mov
sub
gs
or
inc
or
xchg
pop
or
stc
pop
adc
push
inc
xchg
xchg
sbb
lea
pushf
and
sbb
sbb
inc
inc
xchg
push
push
jg
bound
add
scas
pop
inc
jge
inc
add
ror
int
mov
lea
shl
outs
xor
sbb
test
and
loope
addr16
inc
xor
pop
mov
cmp
cmps
jl
fs
clc
inc
jl
dec
pop
ret
loopne
ja
xor
or
ds
fisubr
mov
clc
(bad)
cmps
outs
dec
jp
cmp
push
lea
lock
lock
sub
pop
adc
mov
push
xchg
push
(bad)
xchg
inc
(bad)
je
push
mov
aaa
pop
jl
add
ds
mov
mov
cmp
out
or
lea
out
(bad)
sbb
xchg
test
mov
sbb
pusha
js
xor
pusha
nop
pop
pusha
push
add
add
lahf
(bad)
(bad)
dec
inc
and
mov
jmp
js
push
js
pop
jmp
rol
pop
add
movs
inc
cmp
cmp
or
stos
dec
lods
ins
add
enter
cdq
push
or
add
inc
pushf
sbb
or
jo
inc
or
sar
dec
sbb
add
ficom
jnp
or
adc
push
aam
push
mov
push
and
inc
lds
in
and
inc
push
mov
in
lea
mov
cmp
pushf
sbb
push
pusha
add
loope
sub
jle
aam
add
push
adc
dec
in
lea
inc
xchg
test
adc
push
movd
inc
inc
mov
adc
mov
xor
mov
enter
movsx
cld
popf
adc
inc
lea
sub
adc
mov
icebp
je
mov
add
ret
jg
add
add
inc
shl
mov
test
sub
sub
lock
lea
cmp
imul
aam
pop
sub
stos
jle
mov
mov
clc
dec
in
ret
dec
mov
mov
inc
inc
mov
ret
xor
scas
pop
pop
add
movsx
add
add
ret
shl
test
popa
popa
(bad)
in
stos
inc
and
stos
sbb
inc
mov
add
adc
test
and
sub
jge
(bad)
sahf
add
sbb
pop
mov
cdq
xor
inc
test
shl
aad
retf
(bad)
shl
adc
pop
aam
leave
fisub
and
mov
mov
mov
and
aam
sbb
push
les
out
jl
add
or
or
jge
bound
sbb
adc
dec
jge
inc
push
cmp
or
fs
inc
(bad)
or
adc
add
jge
dec
(bad)
ret
rol
mov
mov
add
cwde
pop
test
push
imul
pop
in
sbb
bound
not
adc
mov
outs
fwait
stc
dec
cwde
out
inc
mov
jge
pop
sbb
inc
inc
push
or
mov
(bad)
jns
sbb
sbb
lea
pop
xchg
sub
je
inc
mov
xchg
push
or
sbb
repnz
shl
adc
sbb
ror
add
adc
daa
mov
sub
jne
mov
mov
mov
inc
sbb
mov
gs
(bad)
mov
jge
call
jb
dec
push
pop
add
ret
xchg
pop
or
jbe
or
xchg
jge
sti
jle
push
loopne
sbb
js
(bad)
enter
rcl
or
jne
sti
or
adc
xchg
jne
add
lea
sbb
mov
or
cmp
lock
not
xchg
call
pushf
lock
jge
jo
hlt
pop
or
add
xor
rol
or
inc
push
fsub
cmp
jg
jne
push
mov
or
sbb
adc
sbb
jno
sbb
add
mov
mov
push
adc
inc
inc
or
jne
add
pop
mov
mov
sub
and
test
xchg
(bad)
jle
cmc
sub
jno
xor
jmp
mov
fdivr
test
aas
xchg
clc
xor
jmp
sub
ja
push
mov
or
dec
and
add
mov
lea
(bad)
js
inc
dec
in
jmp
xor
mov
xor
ins
nop
or
loop
sbb
xor
adc
add
adc
mov
test
(bad)
or
mov
jmp
retf
mov
inc
popf
dec
das
mov
add
aaa
cmp
aad
js
enter
ja
add
je
inc
mov
int3
mov
sub
xor
test
xchg
rcl
and
loope
iret
cmp
mov
mov
adc
jb
pop
popf
cmp
push
or
mov
lock
cmp
aas
push
fs
push
add
aaa
jl
into
ja
repnz
inc
jmp
push
lods
dec
clc
(bad)
sti
daa
lds
inc
cmp
xchg
test
in
nop
mov
sbb
or
xchg
sbb
and
sub
psrad
fistp
xchg
xchg
ret
sub
loop
fistp
inc
mov
xor
pop
popf
sbb
xchg
inc
(bad)
push
mov
push
test
push
pop
xchg
add
loopne
sbb
fs
pusha
push
and
jo
push
push
test
cli
add
push
push
and
das
mov
mov
aam
lea
xor
sbb
mov
add
mov
sbb
jmp
and
enter
jo
xchg
mov
jge
cs
xor
pop
out
sbb
add
pop
and
scas
ja
and
add
mov
jmp
push
out
in
dec
imul
or
movs
push
test
das
push
push
(bad)
push
sub
dec
push
jbe
enter
mov
xchg
sub
std
sbb
xor
cmp
ja
push
add
repnz
ret
mov
sbb
je
jp
mov
test
mov
ret
cmp
adc
push
and
sbb
xchg
test
push
pop
and
add
sub
push
inc
jo
adc
mov
sbb
xor
ds
dec
adc
pusha
(bad)
or
inc
mov
push
test
xchg
jne
ror
adc
jo
and
mov
or
mov
sbb
add
ror
mov
out
jmp
or
loopne
jge
pop
lods
inc
mov
sub
mov
xor
and
bound
shl
rcl
in
jne
xchg
dec
scas
jge
xor
sub
lods
(bad)
or
sar
mov
push
jge
mov
je
cwde
idiv
adc
cmp
or
xor
mov
aaa
cwde
pop
hlt
mov
mov
push
in
and
xor
or
aam
inc
xchg
js
inc
dec
lock
lock
je
push
dec
or
mov
shr
jecxz
cdq
dec
ret
shl
cmp
je
add
mov
cs
add
mov
or
sbb
mov
add
mov
push
xchg
(bad)
xlat
and
push
inc
xchg
and
(bad)
jbe
(bad)
and
push
adc
sub
or
or
push
adc
das
sub
jo
jmp
fcomp
or
dec
xchg
fucomip
push
fmul
jne
int
sub
dec
fdivr
xor
lahf
mov
mov
adc
push
in
add
hlt
lea
rcr
and
add
inc
and
xchg
jmp
aam
mov
int3
and
mov
nop
retf
loopne
add
mov
sub
cmp
arpl
mov
inc
jmp
sbb
xor
imul
rcr
xchg
jmp
sbb
or
push
xor
adc
and
adc
fadd
pop
out
mov
int3
cmp
sbb
sbb
pop
and
pop
add
jno
push
add
and
out
imul
lock
add
test
push
jo
scas
push
js
pop
mov
mov
and
sar
test
loope
mov
sub
jmp
inc
jl
bound
mov
fwait
cmp
push
and
sbb
jb
push
loopne
out
out
aad
or
or
add
adc
adc
add
xchg
dec
or
int3
inc
aaa
adc
adc
xor
fimul
loope
jmp
adc
push
push
push
icebp
mov
cmps
mov
nop
or
mov
lock
fadd
fiadd
or
xchg
sbb
cwde
xor
mov
pop
fcmovb
fidiv
push
xor
mov
ret
cmc
mov
ret
in
jecxz
mov
lock
jle
scas
inc
jge
adc
add
xor
sti
adc
cs
cmp
dec
cli
inc
mov
ret
fbstp
sub
icebp
inc
mov
jns
and
movs
nop
pop
int3
and
pop
xchg
xchg
dec
clc
and
inc
push
sahf
rol
pop
mov
cld
jge
std
mov
xchg
mov
hlt
test
mov
mov
sbb
neg
fisub
ins
lock
jl
inc
repz
push
outs
adc
adc
aam
loopne
inc
pusha
and
add
aas
pop
add
jmp
ret
ret
mov
es
cmp
stos
mov
lock
cmps
sti
push
sbb
fadd
es
ror
arpl
push
adc
lahf
cs
sbb
mov
repnz
cmps
fadd
test
out
fucomp
les
ror
add
push
sar
cmp
mov
sbb
nop
mov
loopne
xor
push
stos
jo
push
mov
inc
fsub
popf
fdivr
inc
push
inc
add
mov
outs
out
push
sbb
mov
push
xor
add
les
sub
rol
icebp
jo
pop
push
mov
add
push
shl
add
sub
or
or
jmp
mov
mov
add
adc
add
inc
shr
add
sub
adc
mov
sub
mov
test
mov
inc
clc
(bad)
adc
jne
mov
aaa
ds
pop
mov
dec
cmp
imul
rol
adc
sub
xchg
xor
test
mov
sbb
inc
or
adc
mov
mov
cwde
mov
xor
shl
add
and
or
jmp
repz
dec
leave
dec
add
mov
jmp
sub
aaa
es
sbb
sub
les
sbb
inc
dec
(bad)
inc
sbb
icebp
push
mov
pop
jl
and
pop
push
ja
pop
popa
add
jl
cmp
mov
(bad)
and
pinsrw
scas
ret
inc
adc
and
inc
loop
cmp
jge
data16
sbb
mov
sbb
leave
lods
jns
lods
outs
test
xrelease
inc
ret
nop
pop
push
leave
clc
ss
pop
cmc
adc
mov
dec
(bad)
sbb
jne
aaa
and
or
push
adc
xor
(bad)
pop
mov
xor
cdq
idiv
dec
adc
inc
pushf
ret
test
outs
jg
and
add
or
jl
fsubr
mov
lea
inc
xor
xchg
adc
adc
inc
lds
rcl
shr
rcl
adc
ret
fstp
add
dec
dec
push
dec
inc
add
push
push
ret
sub
bound
mov
push
std
in
add
mov
shl
jbe
add
push
add
and
daa
push
push
and
sbb
adc
and
test
dec
xlat
(bad)
fcom
sub
push
sbb
jo
push
or
push
les
mov
pop
(bad)
sbb
call
hlt
sbb
dec
sbb
mov
dec
and
lods
lock
lock
test
retf
add
cmp
xor
hlt
dec
pushf
xchg
or
cdq
xchg
lahf
in
push
(bad)
and
into
add
jbe
pop
rcr
xchg
push
mov
sbb
fld
fadd
cmp
lock
pop
sbb
pop
add
add
jl
adc
push
fdivrp
inc
xchg
mov
jl
into
ror
sbb
icebp
icebp
mul
dec
cmc
hlt
dec
js
adc
(bad)
dec
add
jne
push
icebp
pusha
push
mov
dec
xor
dec
xchg
das
loopne
popa
and
adc
adc
ret
inc
add
adc
hlt
pop
sbb
push
pushf
or
mov
pushf
sbb
or
lock
xor
lea
xchg
mov
fstp
or
xor
and
mov
fldcw
add
cwde
jno
test
lods
push
jb
test
or
or
loope
mov
sbb
push
push
xchg
test
(bad)
and
test
cwde
adc
cs
ret
lahf
movs
push
add
adc
addr16
add
repz
loopne
add
fiadd
retf
out
jbe
ins
adc
mov
inc
jns
inc
add
sbb
cmp
jl
jp
les
xlat
(bad)
ret
mov
pop
lods
cld
pop
and
jmp
in
add
lods
inc
or
or
shl
movs
xchg
or
lods
lock
fmul
push
sar
sbb
sub
data16
(bad)
jo
neg
cmp
sub
adc
mov
test
mov
rcr
stos
mov
movs
popa
or
ins
aad
loop
test
outs
jno
leave
clc
sahf
popa
jo
jmp
dec
sbb
mov
or
adc
cmp
push
dec
mov
jmp
int3
and
inc
xchg
pusha
jg
push
mov
ds
dec
adc
(bad)
pop
push
movs
ja
pop
js
mov
sbb
loopne
cwde
push
pop
sbb
pop
jo
inc
test
cmp
mov
mov
popa
push
and
test
fcom
fsubr
xor
in
jbe
or
sbb
ds
dec
sbb
sbb
add
inc
and
adc
mov
(bad)
dec
ja
(bad)
push
fist
loopne
push
in
ror
lahf
pop
push
xor
outs
in
jae
inc
rcr
jle
imul
or
(bad)
in
and
mov
pop
sbb
add
jne
test
jno
loopne
jbe
cmp
pop
bndldx
in
adc
inc
fimul
sub
sbb
imul
fadd
mov
sub
jl
xor
adc
jno
and
ins
inc
jo
sbb
es
(bad)
(bad)
push
and
js
(bad)
jmp
cli
les
mov
push
(bad)
inc
xor
sbb
mov
inc
retf
push
daa
pop
sbb
add
jge
adc
mov
dec
or
inc
test
retf
or
sbb
push
loop
add
pusha
pop
call
shr
and
sbb
mov
inc
push
add
inc
jp
loopne
rcr
loopne
fcomp
retf
rol
in
jl
cmc
adc
dec
and
loope
jbe
xchg
push
cmp
ss
xor
inc
int3
sub
mov
dec
xor
dec
xor
xor
dec
pop
add
mov
adc
retf
call
mov
cmp
fdivr
fist
cmp
adc
stos
mov
adc
xor
int
push
or
loop
cli
xor
jns
adc
xchg
or
test
jmp
ret
mov
cmp
jbe
test
mov
or
push
shufps
xchg
fcmovne
div
inc
in
lahf
push
xor
inc
xor
ud0
ja
lock
bound
shl
add
and
sub
pusha
cmp
and
mov
sub
inc
mov
inc
loope
cli
je
ret
enter
ret
mov
mov
shl
mov
cwde
bnd
sbb
enter
aaa
mov
push
inc
add
iret
mov
shl
push
xor
retf
xor
ins
fcom
cmps
xchg
mov
or
sbb
jno
adc
enter
enter
sbb
push
mov
pushf
fadd
fadd
push
adc
enter
inc
clc
pop
pusha
stos
es
add
js
jmp
or
or
add
or
out
nop
mov
push
mov
add
adc
jl
mov
sub
(bad)
sub
inc
add
(bad)
int3
push
ins
sysenter
xor
inc
jnp
loope
into
out
clc
add
test
cdq
add
aam
lock
jp
adc
mov
dec
cwde
loope
xor
or
rcr
sti
lock
and
mov
inc
jne
dec
retf
ja
data16
add
mov
mov
push
call
int3
rcr
or
add
mov
push
mov
rcr
pop
inc
loop
dec
pop
aas
mov
mov
jbe
(bad)
shr
push
sub
loope
loopne
mov
cmp
jl
xlat
or
mov
mov
add
or
test
pop
sub
loope
and
je
clc
xor
xchg
lods
xor
fimul
cmp
ds
mov
cmp
inc
cmp
aad
xor
sar
aas
adc
cmp
jne
daa
sbb
fild
dec
xor
sub
cmp
outs
push
push
xor
dec
das
adc
imul
inc
add
add
lds
inc
push
jg
lea
or
stos
xor
aaa
ret
imul
sub
idiv
pop
add
jae
add
xchg
call
inc
jb
jmp
add
aaa
add
jp
xchg
mov
enter
cmp
cmp
rdtsc
and
add
or
adc
movs
das
mov
inc
dec
inc
loope
cli
xor
cmp
dec
jp
dec
adc
cmp
dec
or
add
sar
sar
shl
mul
push
xchg
inc
sub
inc
add
adc
or
into
xor
mov
call
dec
movs
or
and
mov
push
push
dec
jmp
inc
nop
adc
bound
in
mov
jge
js
jle
hlt
adc
jbe
jg
mov
mov
sub
push
dec
pop
enter
dec
aaa
sbb
scas
test
dec
cmp
inc
dec
mov
sbb
or
add
ret
mov
mov
cmp
cmp
push
les
xchg
je
out
pusha
push
cs
cmp
add
dec
or
jo
dec
(bad)
cld
xchg
adc
aas
(bad)
in
xor
push
add
mov
sbb
test
or
dec
or
fisttp
or
adc
sbb
jge
inc
jge
ror
add
aaa
ds
pop
fisttp
ins
mov
pusha
jl
sti
cwde
xor
inc
pop
sti
mov
or
cli
scas
jno
data16
in
dec
inc
cld
jae
and
mov
adc
sar
popa
or
iret
pusha
add
xor
popa
call
xchg
or
xor
push
adc
adc
nop
mov
xor
ja
leave
in
or
dec
rcr
je
jle
jns
aad
xchg
icebp
fnstsw
fld
or
xchg
mov
ret
das
loopne
dec
sbb
push
add
cs
push
or
jmp
inc
add
loope
pop
or
ffree
cmp
jo
fnstsw
pop
mov
movs
fstp
or
or
ja
adc
sbb
dec
push
mov
lea
mov
add
(bad)
ret
imul
shl
sub
fs
mov
push
push
outs
add
fsub
js
scas
fwait
add
fimul
pusha
mov
std
inc
inc
adc
mov
jg
push
inc
sub
sub
adc
imul
push
push
cmp
out
out
addr16
push
pop
and
dec
sbb
dec
or
adc
scas
push
ret
cmp
test
gs
cmp
ja
pusha
test
ror
xchg
mov
popa
add
sub
and
dec
test
adc
or
push
pop
push
es
sub
pusha
inc
push
pop
call
xchg
mov
sti
dec
sub
adc
int
dec
ins
push
adc
adc
stos
push
js
int
jp
imul
inc
cld
and
leave
pop
pop
je
dec
je
dec
or
adc
inc
xor
je
or
fsubr
add
leave
int3
or
xchg
adc
shl
sub
sub
mov
stos
loopne
xchg
movs
or
(bad)
fisubr
xchg
dec
sbb
jmp
mov
sbb
and
pop
push
pop
pushf
pop
or
adc
pop
adc
xchg
(bad)
retf
xor
pop
mov
das
jns
inc
retf
or
das
pop
je
adc
jl
leave
shr
aas
sar
add
jae
jl
neg
add
movzx
hlt
xor
and
(bad)
dec
push
rol
mov
ins
cwde
in
xchg
(bad)
mov
and
fisttp
and
test
inc
int
cdq
and
add
cmc
movs
sar
mov
add
and
addr16
xchg
xchg
imul
fisub
sub
mov
addr16
mov
ror
cs
mov
add
inc
test
pop
and
mov
cs
push
or
dec
inc
mov
push
outs
xor
dec
push
mov
adc
test
add
call
dec
xchg
lock
sub
cs
adc
mov
jg
mov
add
sbb
or
ins
loope
aas
add
dec
(bad)
rep
sub
jle
(bad)
jnp
and
add
js
inc
sub
arpl
sbb
push
add
adc
dec
adc
clc
push
call
lea
inc
aam
jg
and
iret
push
jmp
dec
enter
bound
rcl
pop
cmp
fcomp
rcr
dec
cld
popa
lds
mov
pop
cld
int
arpl
push
in
mov
jb
call
mov
lock
cld
sbb
scas
cmp
jb
or
mov
inc
clc
jge
sub
sub
xor
jbe
mov
sbb
fmul
inc
inc
in
jle
(bad)
add
clc
and
jg
sbb
or
xor
push
ror
sbb
ins
inc
inc
call
fwait
dec
push
or
fdivr
outs
mov
dec
cli
adc
push
and
into
or
sbb
inc
stos
add
mov
mov
sbb
add
adc
add
fadd
not
jg
mov
inc
sbb
xchg
ss
shr
xor
daa
xchg
xchg
push
fdivr
call
lock
xor
add
jmp
cli
add
ret
or
(bad)
out
test
adc
addr16
sbb
xchg
or
clc
xor
cs
dec
jo
mov
sar
(bad)
xchg
movs
js
push
and
hlt
and
ds
sub
lea
cmps
jo
js
dec
les
add
push
mov
adc
adc
retf
push
xchg
ss
add
hlt
mov
add
and
ret
imul
or
and
push
jg
push
call
push
and
jo
test
and
aaa
ret
out
cmp
xor
mov
outs
lock
mov
add
mov
ins
mov
out
sti
inc
loopne
das
adc
fadd
add
neg
sub
mov
and
add
xchg
jb
add
jge
ror
inc
mov
(bad)
out
xchg
and
and
push
mov
sub
rcr
in
(bad)
scas
int3
sar
push
frndint
add
pop
push
ror
dec
sbb
mov
clc
push
mov
add
bt
(bad)
and
ret
fld
je
push
inc
xchg
je
daa
xor
push
mov
out
and
push
cmp
shl
xchg
adc
aam
add
sbb
test
shr
or
and
pop
clc
imul
fmul
adc
and
jl
adc
sbb
outs
fdiv
bound
cmp
fisubr
test
repz
push
xor
cmp
movups
push
cmp
sbb
add
icebp
add
pop
(bad)
xchg
adc
fcmovb
mov
sar
mov
dec
inc
lock
ins
inc
lods
xor
jbe
adc
into
leave
or
ror
loop
test
retf
lock
js
pop
push
mov
add
mov
ins
mov
xchg
xor
mov
imul
dec
xchg
nop
push
jg
aaa
icebp
lods
test
push
adc
out
stc
mov
lods
sub
dec
xchg
test
sbb
lods
mov
inc
jp
sbb
add
jb
push
xor
nop
cmp
xchg
dec
or
inc
adc
test
cmp
push
cmp
mov
loop
sub
jns
aas
dec
mov
daa
out
xchg
pop
(bad)
inc
push
shl
shr
imul
sub
xor
push
or
sub
or
xor
sbb
mov
and
and
pop
mov
ja
test
xchg
fadd
xor
adc
add
pop
int3
mov
or
sahf
mov
mov
stc
jbe
mov
jmp
add
push
push
inc
add
and
test
pop
add
mov
test
ficomp
cmp
sar
xchg
and
outs
xchg
test
out
mov
(bad)
data16
add
inc
mov
test
pusha
xor
add
adc
rcl
fst
mov
push
sbb
mov
and
cli
cld
cli
std
test
jne
mov
into
test
shl
xchg
mov
mov
movs
mov
or
pushw
sub
mov
pop
ror
jge
(bad)
data16
mov
clc
mov
push
adc
imul
sub
cmp
mov
push
fadd
lock
(bad)
adc
lea
xchg
pushf
cs
xlat
mov
pop
ret
push
retf
aam
(bad)
test
inc
loopne
pop
retf
pop
adc
fcomp
or
and
rcr
mov
sbb
mov
pop
ja
pop
mov
outs
icebp
mov
dec
or
adc
loope
call
nop
(bad)
xchg
lods
pop
pop
jmp
mov
jne
(bad)
mov
or
add
push
adc
cld
pop
pushf
dec
sub
data16
neg
neg
idiv
pushf
push
inc
push
clc
adc
sbb
push
xor
cmp
test
imul
add
dec
jl
pop
jg
pop
or
sbb
pop
scas
call
(bad)
cmps
push
(bad)
mov
popa
add
push
adc
aaa
fcom
and
pusha
add
mov
jo
pusha
pop
dec
jle
add
mov
push
sbb
fmul
(bad)
clc
fadd
js
or
cmp
jnp
sar
loopne
lahf
ja
cmps
outs
adc
pushf
mov
loop
jne
xchg
sub
push
dec
push
push
imul
das
and
push
cmp
push
lea
push
int
dec
enter
iret
xor
xlat
dec
adc
xor
and
push
stos
sbb
pop
aam
out
xor
pop
test
imul
sbb
inc
mov
jl
add
cmps
adc
test
and
add
pop
icebp
nop
push
mov
mov
mov
dec
imul
sub
sub
pop
aam
mov
push
lods
sar
mov
jnp
sub
jge
inc
or
sbb
mov
xchg
add
or
mov
repz
jecxz
ror
mov
add
pop
pinsrw
adc
push
ret
loopne
and
test
scas
sub
les
adc
loopne
out
js
xchg
or
xchg
popf
nop
jo
add
and
mov
mov
retf
push
(bad)
outs
dec
(bad)
push
imul
ss
jmp
mov
test
enter
ins
mov
pop
mov
cmp
and
mov
fsub
loop
cmp
jl
add
inc
xor
cmp
jl
add
fsub
hlt
mov
and
into
inc
mov
push
xchg
add
test
je
inc
or
sbb
ja
inc
ja
xor
out
pop
ja
bound
xchg
sbb
xor
fwait
sub
pop
push
adc
test
add
and
pushf
(bad)
stos
sti
sti
shl
fs
sbb
and
ror
std
inc
out
aas
mov
adc
or
mov
or
ficomp
cmp
jl
adc
cli
sbb
int3
push
div
jbe
mov
pop
mov
pop
aaa
iret
fst
push
xor
rcr
aaa
cmp
jle
pop
sub
mov
clc
mov
sbb
or
popa
jg
mov
pop
mov
and
fsub
and
cli
adc
jns
call
xchg
rol
or
cmp
iret
jo
push
cwde
or
jle
mov
add
cli
clc
sub
scas
and
leave
mov
and
cmp
sahf
or
adc
inc
loopne
dec
cmp
cs
cmps
(bad)
leave
in
test
sti
neg
sbb
add
in
jmp
cmp
out
pop
or
dec
shr
(bad)
or
fwait
jo
call
or
test
jne
mov
mov
dec
rol
inc
fldcw
test
or
rcr
mov
dec
cld
jmp
lea
sub
adc
mov
(bad)
scas
out
test
in
adc
push
fwait
jle
cwde
jno
xchg
ret
ds
gs
sub
dec
sbb
js
mov
inc
inc
or
loopne
icebp
cmp
xor
pop
pop
adc
pop
and
add
pusha
add
push
call
push
rep
sahf
out
lea
mov
or
je
pop
rol
mov
enter
and
xchg
sub
push
pop
outs
mov
jg
or
dec
xor
mov
arpl
inc
xor
adc
inc
jb
jmp
inc
inc
pop
adc
imul
mov
jo
cmp
je
cmp
jb
and
(bad)
and
dec
je
cmp
sbb
ror
add
xor
clc
push
adc
jns
mov
daa
inc
dec
jb
sbb
inc
and
xchg
push
int
adc
push
mov
dec
push
inc
sbb
inc
sub
ss
cld
fdivrp
or
or
xor
cmp
mov
inc
sub
nop
adc
scas
push
dec
mov
push
sbb
dec
cld
cmc
and
xlat
inc
add
mov
adc
shl
test
cli
or
push
test
btc
lods
aas
sub
lods
lock
cmp
jge
das
ins
add
ret
inc
fsub
mov
enter
les
call
loope
mov
nop
dec
clc
jmp
out
movs
aam
je
mov
movs
js
add
shr
inc
add
fisub
movs
popfw
add
add
ret
ins
and
popf
sbb
inc
and
mov
dec
xchg
cmp
jmp
or
not
mov
xor
sbb
push
mov
pushf
shr
sbb
mov
or
sti
or
cmp
test
ret
sbb
inc
ds
mov
jb
xchg
lahf
mov
dec
push
das
ds
dec
xor
xchg
pusha
bound
inc
fstp
clc
or
pop
mov
mov
mov
mov
inc
mov
pop
loopne
dec
loopne
dec
and
dec
sub
(bad)
call
fs
sub
add
mov
clc
pop
ja
xchg
test
pop
lods
rol
and
mov
mov
mov
push
les
stos
and
stos
test
or
leave
jle
add
std
push
cmp
or
lea
clc
add
test
mov
cmp
adc
xchg
out
jno
add
or
add
adc
add
push
pop
popa
mov
cmp
inc
or
add
hlt
dec
xchg
add
or
inc
jbe
cvttps2pi
mov
or
adc
push
hlt
add
or
hlt
jge
stos
fild
cmps
sub
sub
jecxz
aam
mov
(bad)
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
pop
out
cmp
add
or
scas
add
cmp
jp
rol
shl
retf
pop
(bad)
or
xchg
mov
jbe
and
bound
adc
push
cmp
inc
std
cmp
add
lds
cmp
(bad)
sti
mov
jmp
xlat
ror
ret
xchg
test
pushf
mov
test
imul
lea
push
mov
push
shl
cmp
sbb
dec
jnp
or
mov
push
das
scas
push
and
inc
or
add
jg
lds
sbb
fbld
inc
call
pop
or
popa
movs
dec
dec
sbb
fild
test
dec
jno
jl
xchg
inc
xor
ins
and
adc
add
cmp
mov
into
mov
adc
or
(bad)
jge
add
lea
or
les
mov
mov
dec
xor
jmp
add
call
or
inc
cs
enter
daa
add
loope
mov
pop
je
daa
adc
out
adc
repz
dec
mov
(bad)
jae
xchg
popa
sub
adc
sti
adc
icebp
jge
inc
(bad)
(bad)
add
call
inc
inc
dec
aam
mov
sar
add
(bad)
shl
xchg
fdivr
and
sbb
push
inc
pop
sbb
jl
jge
xlat
mov
or
daa
xchg
sbb
xchg
push
jbe
push
and
ror
jecxz
scas
push
dec
inc
mov
mov
je
repnz
jmp
mov
mov
adc
out
mov
scas
jae
inc
push
retf
loop
out
pop
(bad)
jo
js
les
retf
inc
mov
fwait
in
imul
loope
adc
mov
add
or
jge
pop
inc
adc
test
loopne
repz
push
push
adc
and
icebp
jp
sbb
fwait
push
cmc
pop
mov
jb
sub
scas
add
dec
sub
das
mov
stos
push
and
sahf
add
cmps
ficomp
rcl
cmp
ret
shl
das
ficomp
aaa
jae
scas
mov
hlt
fwait
cwde
lods
out
mov
lods
cmp
add
mov
jo
sbb
ins
dec
pushf
mov
cmp
ds
xor
je
inc
add
push
or
mov
dec
das
xchg
cmp
test
pop
and
js
adc
adc
adc
fstp
xchg
or
fstp
add
or
icebp
in
fiadd
ret
xor
not
or
mov
cmps
or
mov
cwde
pushf
stc
add
gs
push
popa
shl
mov
pop
test
(bad)
call
shr
fs
movs
cwde
mov
jmp
add
pusha
cmp
icebp
imul
and
sbb
mov
cmp
enter
(bad)
dec
in
add
lds
pop
inc
mov
fs
sbb
in
hlt
ret
pop
in
fadd
jns
stos
push
push
dec
add
mov
or
sbb
cwde
add
add
and
dec
mov
or
test
push
dec
or
xchg
add
jge
cmp
push
ret
fcmovb
shr
inc
clc
mov
pop
pushf
jbe
dec
push
or
push
adc
adc
dec
test
mov
and
sti
es
in
add
mov
sahf
dec
fld
jge
sub
dec
fist
xchg
mov
popa
mov
mov
jno
xchg
pusha
push
dec
daa
dec
push
add
xor
jae
mov
adc
inc
push
fisubr
mov
adc
add
pop
inc
push
jae
cmp
inc
inc
mov
inc
adc
iret
leave
push
or
scas
add
cmp
push
and
and
or
scas
retf
and
enter
cmp
lea
add
sub
dec
pop
add
cmp
adc
iret
add
dec
ja
fidivr
cld
dec
xor
or
dec
nop
sbb
push
int3
push
jne
push
mov
xor
mov
mov
test
sub
and
daa
mov
test
cmp
daa
frstor
jl
sbb
push
mov
std
cmp
adc
xchg
ds
cwde
push
loopne
das
std
mov
pop
jae
and
sbb
jecxz
xchg
push
mov
data16
pop
inc
or
push
hlt
mov
test
mov
out
rcl
mov
into
sub
sub
inc
or
test
jl
mov
add
xor
rcl
inc
adc
mov
dec
dec
int3
jno
push
add
dec
loopne
arpl
and
ja
add
test
add
test
pop
enter
je
mov
and
fs
arpl
and
inc
test
jl
xchg
xchg
call
loopne
adc
shr
push
push
imul
arpl
adc
mov
movs
popf
stos
mov
ret
add
pop
mov
push
mov
push
push
arpl
jb
adc
pusha
in
xchg
mov
dec
dec
sub
icebp
dec
je
pusha
pop
sbb
pusha
dec
arpl
inc
xchg
dec
pushf
cmp
and
out
lea
and
mov
dec
push
je
jo
xor
push
xchg
pop
data16
and
xor
add
xchg
(bad)
cmp
xlat
jl
inc
and
cmp
cmp
xchg
sti
imul
iret
cmp
loopne
push
sbb
and
mov
cli
mov
add
sbb
push
mov
cmp
mov
(bad)
cs
or
xchg
sbb
loope
mov
pop
popa
cwde
stc
mov
xchg
mov
aas
add
or
pop
jo
(bad)
hlt
rol
(bad)
inc
xchg
mov
loopne
lock
pop
retf
add
cmp
pusha
or
mov
pop
jo
adc
adc
dec
xchg
adc
push
cs
into
adc
sbb
cmp
mov
add
pop
fcomp
jbe
jb
adc
mov
nop
pop
adc
jne
mov
dec
adc
aam
or
enter
test
fsub
mov
ror
xchg
mov
mov
mov
cmp
adc
or
pop
ffree
mov
add
jmp
cmp
mov
lock
lock
addr16
imul
push
pusha
jo
call
or
sub
mov
test
dec
or
jge
pop
cmp
mov
jae
push
mov
cmp
ins
xlat
das
fcmovb
mov
push
sbb
das
loopne
movs
xchg
jge
je
inc
leave
arpl
ror
aam
sub
dec
mov
into
inc
rcl
pop
fist
adc
push
mov
add
add
xor
xor
xchg
xchg
js
xchg
out
enter
adc
test
xchg
sbb
xchg
sub
push
sbb
in
enter
js
nop
push
push
jo
shl
cmp
xor
hlt
jbe
sub
sub
ds
lock
pusha
add
mov
out
cmp
int3
add
call
into
jl
ja
add
sub
sbb
pop
aaa
aas
sbb
rol
xchg
or
cmp
inc
call
sub
xchg
jg
sub
cmp
pop
mov
je
mov
pushf
movs
or
xor
ret
sub
movs
push
lock
jae
xor
or
cmp
or
and
push
or
sub
fadd
dec
retf
ds
cmp
dec
shr
sub
dec
mov
fwait
push
adc
je
fmul
add
pop
xor
jle
inc
sub
push
cmp
pop
or
xchg
js
dec
(bad)
stos
adc
dec
lods
mov
adc
rcl
arpl
mov
arpl
dec
push
add
jge
mov
add
xor
xchg
out
cmp
xchg
push
pop
and
inc
test
push
inc
fneni(8087
jmp
pop
mov
sbb
popa
dec
dec
je
add
jmp
shr
ss
gs
add
nop
xor
inc
call
rol
pop
jmp
push
push
pop
(bad)
test
sub
dec
sbb
xor
jo
enter
(bad)
adc
add
lods
in
push
sub
push
and
dec
jecxz
add
lods
mov
call
clc
sub
fcmovnb
(bad)
cmp
push
push
adc
adc
movzx
int3
and
jl
(bad)
gs
cmps
xchg
out
dec
arpl
std
cmp
mov
push
inc
(bad)
and
ret
into
mov
sti
int3
push
inc
cmp
ret
daa
add
sbb
fnstcw
xchg
out
sub
sbb
mov
ja
dec
repnz
sub
or
mov
fmul
fmul
fstp
mov
jo
inc
mov
dec
jl
popf
loope
add
sub
adc
enter
int
add
adc
pop
add
(bad)
icebp
adc
ja
lahf
or
loopne
push
jge
into
mov
outs
add
ins
and
js
mov
or
ret
mov
add
mov
mov
sbb
pop
xchg
lods
rcl
push
and
rcr
or
mov
mov
(bad)
pusha
addr16
or
inc
pop
cmp
sbb
mov
(bad)
fsubr
pop
cmp
mov
pop
cli
in
push
xor
pop
test
retf
and
add
lods
clc
adc
push
call
push
loopne
ins
mov
sub
pop
push
movs
pop
hlt
(bad)
inc
push
rol
inc
es
inc
mov
sbb
call
or
pusha
cmp
jae
jae
or
push
or
jbe
sbb
xchg
lea
or
std
mov
test
mov
or
push
adc
pusha
xchg
aaa
add
je
mov
pop
and
aas
mov
jo
or
push
out
xor
dec
adc
aas
sub
push
pop
bound
dec
sbb
fst
shl
test
xchg
adc
dec
ret
or
call
sub
sbb
loopne
repnz
jbe
mov
inc
xchg
test
jle
mov
inc
dec
push
or
sub
dec
add
inc
ins
sub
cmp
rol
lock
push
adc
dec
add
sub
add
sbb
ror
loopne
xchg
xlat
hlt
add
or
or
sbb
pop
je
mov
sub
jns
cli
cmp
in
cs
xchg
sbb
or
sbb
rol
xchg
ja
rcl
sub
sar
or
loope
adc
mov
sub
aam
jmp
call
or
or
mov
ja
cmp
loop
inc
mov
inc
add
loop
pusha
add
loop
sub
jle
rcl
hlt
(bad)
jl
add
sub
push
in
or
hlt
jg
scas
ror
push
push
shl
in
mov
js
push
lock
lods
push
inc
mov
shl
pop
fisttp
inc
sbb
shl
jg
pushf
add
test
sub
cmp
test
jbe
add
push
mov
pop
xlat
pop
aas
mov
inc
clc
inc
sbb
arpl
(bad)
mov
or
dec
fisubr
adc
pop
fsubr
inc
mov
dec
sub
shl
pop
fadd
add
frstor
cmps
push
or
xchg
(bad)
jmp
rol
aas
loopne
and
cmp
cld
jecxz
adc
lods
dec
pop
or
fdiv
ins
lea
jbe
dec
cwde
int3
push
add
cmp
mov
ficom
inc
and
mov
add
inc
adc
sbb
sahf
inc
cmp
push
mov
sbb
(bad)
idiv
jbe
lea
movs
jb
mov
push
loop
xchg
nop
pop
inc
cmp
inc
(bad)
test
fcmovnb
inc
in
jecxz
cld
pop
or
mov
xor
add
mov
shl
or
sub
push
sub
lods
(bad)
add
rol
mov
sbb
mov
std
(bad)
and
mov
mov
clc
ret
into
sub
cmp
test
mov
jae
sbb
sbb
jecxz
inc
fcomp
adc
fld
jg
adc
xor
cmp
mov
pop
rcl
pop
cmp
sbb
loop
pop
mov
mov
and
jmp
pop
push
or
pop
loopne
sbb
mov
lock
add
or
in
mov
ins
mov
shl
imul
pop
test
jne
xchg
cmp
lock
jecxz
(bad)
jne
inc
and
cwde
or
pop
inc
fist
pop
lock
retf
ret
push
push
add
scas
in
push
push
sub
inc
sbb
pop
test
bound
or
jmp
inc
xchg
mov
enter
inc
scas
loopne
adc
cli
adc
cmp
add
ins
xor
sub
(bad)
lods
dec
mov
or
jo
cmp
pop
loop
clc
je
xlat
push
and
mov
rcl
mov
test
js
loope
push
pop
(bad)
push
mov
sbb
test
sbb
mov
jmp
push
lea
inc
inc
xchg
mov
bound
jnp
mov
or
cmps
jns
cmps
ins
inc
gs
pop
fidivr
and
std
movs
mov
rol
fdivr
fstp
fistp
mov
or
movs
retf
icebp
adc
shl
mov
ds
cwde
xchg
cld
fild
fmul
adc
shl
ja
hlt
pusha
shr
aam
lock
les
fsub
fld
pop
rcl
lock
daa
push
sbb
aam
fdiv
fnsave
jl
and
mov
fidivr
mov
in
xor
xchg
(bad)
xor
push
fsub
(bad)
fisub
jbe
adc
enter
pop
les
gs
imul
les
mov
sbb
rcr
or
rcr
fld
sbb
and
xchg
add
pop
in
jo
mov
cmps
in
add
popf
out
in
xor
push
or
pop
push
fwait
inc
rcr
xchg
adc
popa
push
arpl
adc
fdiv
xor
adc
je
mov
pop
pusha
push
mov
popf
inc
pop
or
mov
cdq
movs
add
mov
fmul
dec
xor
jne
pop
sbb
ret
out
ss
repz
repz
sub
or
adc
sub
iret
arpl
test
xchg
out
arpl
add
inc
xor
push
mov
in
push
mov
ret
dec
pop
in
add
les
mov
push
aaa
cmp
add
add
sub
add
cmp
sub
into
and
inc
and
sbb
xchg
inc
repz
aas
pop
sub
aam
mov
jne
daa
push
sbb
mov
sar
test
push
arpl
xabort
mov
das
inc
mov
and
in
xlat
leave
inc
sub
and
jp
jp
or
dec
sub
jo
sbb
pop
xor
cs
scas
or
mov
add
pusha
mov
pop
dec
pop
retf
rol
jnp
outs
jns
outs
dec
lock
stos
call
int3
sbb
dec
jmp
mov
cs
shl
pop
add
in
add
sub
shl
in
(bad)
loopne
adc
push
imul
or
sti
cmp
push
ret
sbb
lock
mov
dec
jmp
mov
out
pusha
dec
loopne
xor
mov
jns
enter
pop
int
sbb
jns
test
mov
pop
loopne
jle
loopne
jge
mov
jge
lea
add
ret
pusha
imul
mov
stos
push
arpl
sti
shl
sub
or
push
sub
or
push
pusha
or
mov
(bad)
int3
mov
xor
add
sub
sbb
add
fsub
and
loopne
push
sub
dec
adc
mov
in
sub
cwde
shl
fldenv
sbb
cwde
mov
in
loopne
push
sub
sti
dec
cmp
rol
dec
ror
pop
jp
les
push
push
sub
push
or
adc
inc
call
cmp
inc
cmps
jge
jne
or
pop
mov
and
mov
dec
shl
add
add
push
hlt
ret
pop
stos
hlt
jo
push
stos
or
or
fld1
fiadd
mov
adc
inc
xchg
mov
sbb
adc
pop
xchg
fdivr
xor
fld
imul
push
add
dec
sbb
pop
or
add
pop
adc
mov
and
sbb
mov
jecxz
sbb
sub
cmp
mov
mov
enter
dec
int
push
mov
bound
add
arpl
cmp
out
xor
popa
loope
add
sub
lods
ja
xor
test
jmp
pop
jmp
in
loopne
inc
xchg
mul
fdiv
shl
mov
add
test
aas
or
cmps
jns
and
xor
dec
sub
or
ret
xor
mov
cmp
jmp
or
add
pusha
push
jb
int3
or
push
push
jne
scas
(bad)
jmp
mov
push
in
icebp
shl
and
or
push
lea
add
jg
(bad)
neg
lea
shl
test
sub
jp
sbb
cs
or
inc
call
mov
lock
push
in
jne
xor
sbb
and
hlt
data16
aaa
xor
fimul
in
stos
loope
mov
in
jns
dec
loopne
mov
lock
cmps
inc
cmp
hlt
mov
lock
and
jne
ret
dec
cmp
int
mov
cmp
ja
cld
add
loopne
inc
adc
mov
or
and
sub
daa
sub
and
dec
test
sahf
and
clc
add
in
outs
imul
in
cs
xor
add
pop
scas
cs
push
in
aas
cmp
xor
daa
mov
call
pop
(bad)
loop
fimul
std
adc
add
add
je
push
xor
dec
ss
push
retf
mov
stos
dec
in
sti
neg
(bad)
sub
test
ror
bound
retf
push
sbb
adc
or
mov
or
add
push
cmp
les
repz
mov
into
hlt
iret
je
pop
ret
shl
stc
or
stc
sub
dec
nop
ret
fnstenv
and
push
push
fsubr
pop
push
pop
retf
pop
inc
scas
sub
pop
dec
lods
or
shl
push
push
bound
adc
mov
dec
loopne
push
dec
add
fld
add
ret
cmp
cmp
cli
ret
aam
cmp
std
mov
in
rcr
add
mov
pop
sub
das
lods
popa
aad
sbb
hlt
lea
cmp
mov
hlt
cli
push
pop
out
push
out
adc
add
mov
or
ins
adc
push
neg
pop
mov
push
mov
rcr
loop
or
sbb
cmps
xlat
inc
cdq
mov
cmps
add
or
repz
call
mov
and
aaa
sbb
iret
ins
mov
pop
pusha
and
xlat
inc
and
lock
sub
(bad)
lock
cmp
adc
mov
sbb
or
rol
inc
and
adc
cmps
adc
or
sbb
xlat
clc
dec
loopne
or
dec
mov
cmp
ret
jne
cmp
loopne
repz
xchg
(bad)
outs
mov
or
ds
or
lock
sar
movs
mov
push
or
pop
jnp
inc
dec
and
rcl
enter
xchg
aad
sub
cli
aaa
add
inc
cwde
lods
sub
mov
loope
add
push
mov
sbb
mov
dec
or
arpl
push
cwde
lea
dec
mov
or
cmp
data16
sub
xor
or
out
cmp
or
pop
jbe
lea
adc
scas
fwait
push
push
and
(bad)
push
(bad)
test
scas
or
mov
xor
sub
mov
sbb
mov
and
sbb
retf
sbb
adc
ret
out
outs
int3
rol
and
mov
inc
cmp
push
push
cld
xor
adc
or
ds
(bad)
push
add
std
jp
addr16
xchg
cmp
outs
dec
movzx
shl
inc
pop
add
pop
sub
call
pop
es
pop
inc
sub
adc
popa
mov
pusha
aad
push
inc
and
add
inc
add
mov
in
mov
dec
add
mov
xchg
cmp
inc
adc
cwde
push
add
int3
or
nop
cmp
and
add
mov
inc
cmp
inc
rcr
add
add
dec
jbe
rcl
inc
and
fwait
lods
push
cmp
jne
mov
jbe
xor
dec
and
dec
xlat
data16
push
mov
mov
dec
add
jge
mov
gs
lock
test
scas
inc
mov
sar
out
rcr
push
push
ror
push
cmp
add
int
pusha
nop
loope
mov
loope
mov
xor
and
scas
lds
pop
mov
rcl
dec
into
ds
js
rol
mov
push
pop
and
jecxz
fmul
jb
mov
loope
add
mov
fmul
pop
movs
ds
lods
sbb
jmp
inc
jg
dec
in
adc
inc
pop
jl
or
movaps
lock
jmp
inc
imul
pop
inc
pusha
add
xor
cmp
ja
ds
inc
add
cmp
ret
sbb
hlt
out
dec
loope
inc
inc
ins
and
loopne
loope
jmp
dec
mov
inc
pusha
cmc
jmp
cmp
jmp
xor
mov
or
das
push
je
inc
jbe
add
out
pop
add
(bad)
dec
sbb
dec
icebp
inc
ins
xchg
sar
cmp
lea
cmps
dec
fldpi
push
add
push
dec
add
ss
(bad)
dec
dec
nop
mov
or
inc
call
mov
xchg
pop
adc
cmp
xchg
push
adc
sbb
cmps
add
xchg
iret
jl
add
or
sbb
or
xchg
xchg
or
or
imul
(bad)
jnp
mov
and
pop
mov
cmc
inc
add
mov
add
adc
adc
lock
fsub
add
inc
mov
add
and
es
js
out
cs
xor
pop
outs
add
push
inc
sub
inc
and
add
push
int
sub
scas
jmp
push
jne
cmp
xchg
lea
sbb
out
add
(bad)
dec
inc
jnp
out
dec
sub
mov
add
xor
aam
jle
bound
les
inc
mov
mov
cmp
sub
and
lock
sbb
mov
xchg
push
sbb
push
and
rcr
nop
xchg
and
and
nop
inc
push
and
or
sub
nop
out
outs
les
frstor
in
lea
adc
or
jno
maxps
pop
mov
jo
popa
(bad)
mov
mov
mul
je
sub
test
add
je
mov
cmp
or
and
mov
add
push
xor
iret
jg
mov
jge
or
xchg
adc
xchg
rol
adc
cmp
xchg
cwde
lds
xchg
rol
dec
(bad)
adc
in
lea
mov
pop
push
or
dec
cld
xor
jecxz
pushf
mov
add
pop
les
and
clc
addr16
pop
daa
cwde
adc
pop
sbb
dec
inc
mov
and
cmps
popa
popa
fbld
inc
popa
add
add
adc
ja
inc
retf
or
push
xor
and
repz
push
rcr
add
(bad)
lock
xchg
pop
ret
imul
pop
js
loope
(bad)
popf
jne
add
sbb
xchg
cld
mov
cmp
popf
mov
sub
sbb
je
and
movs
pop
push
sub
dec
xor
add
inc
jmp
mov
inc
cmp
shr
fst
or
add
int3
dec
dec
ja
cld
(bad)
lock
js
add
push
test
jns
movzx
push
jp
ins
mov
dec
add
or
adc
sbb
jp
add
or
add
push
ret
xor
sti
mov
vpsllw
xchg
cs
push
adc
jl
icebp
loop
jo
inc
push
add
inc
mov
ss
inc
sbb
jge
adc
mov
mov
and
aaa
or
mov
push
ss
xchg
fsub
adc
xor
cmps
pusha
adc
push
adc
outs
dec
adc
mov
in
adc
arpl
(bad)
es
scas
cmp
push
shl
mov
cmc
xor
lea
push
pop
(bad)
push
shr
cld
add
adc
jb
clc
mov
jg
dec
jne
push
add
imul
stc
dec
sbb
xor
and
repnz
(bad)
push
cli
mov
cmps
push
push
mov
mov
xor
ins
(bad)
mov
loop
xchg
mov
add
and
or
sub
call
mov
mov
and
ja
sub
dec
add
mov
jne
pop
push
pop
inc
imul
and
inc
or
js
adc
adc
push
add
inc
and
or
lods
jo
pop
or
xor
jmp
sub
stos
sub
idiv
cli
je
dec
test
(bad)
ins
mov
js
mov
or
xchg
push
mov
adc
or
xor
mov
sbb
pop
sbb
mov
(bad)
dec
add
out
jo
or
leave
je
adc
je
push
cmc
add
cmp
cdq
nop
arpl
ins
push
outs
jo
popa
inc
cmp
pop
add
in
jmp
jmp
popa
loop
cmps
jnp
pop
push
mov
fdivr
outs
mov
aaa
inc
idiv
pop
rol
sbb
clc
sbb
outs
sbb
push
jne
std
and
add
sahf
fiadd
aaa
add
dec
pop
and
mov
xchg
inc
clc
or
iret
adc
xor
cld
clc
stc
adc
sub
dec
mov
dec
add
call
ror
add
(bad)
aam
add
dec
or
shl
xchg
sbb
test
scas
jg
xor
shl
push
sbb
mov
sub
xor
push
add
jnp
rol
push
adc
pop
aaa
jle
dec
pop
dec
pop
pop
sbb
sub
push
lea
sbb
pop
jae
pop
adc
lock
fistp
xchg
jb
(bad)
dec
test
jmp
sub
cld
je
sub
je
xor
push
lea
mov
push
pop
jnp
bound
xchg
jmp
and
mov
das
cmp
cmp
ins
mov
xor
mov
cmp
sbb
dec
and
in
nop
cmp
loopne
push
cmp
call
push
jb
jne
aad
jmp
xor
mov
les
and
xor
jbe
pop
pop
or
dec
fcmovne
js
sbb
inc
sub
sbb
dec
lock
test
cmp
sbb
cmps
add
sbb
jnp
cmp
jl
dec
nop
push
add
mov
ror
mov
add
loope
rcl
adc
or
sub
lock
add
xor
inc
hlt
pop
xchg
dec
nop
jg
mov
jmp
jmp
jo
idiv
je
ret
mov
jmp
pop
mov
xlat
cdq
dec
or
mov
pop
push
pop
xchg
inc
push
or
add
jne
jae
ins
fild
or
and
dec
inc
fwait
add
ja
rol
test
dec
add
xchg
cwde
in
mov
pop
rcr
and
mov
lods
dec
clc
mov
mov
pop
dec
push
push
or
push
sub
jnp
pop
pop
add
fwait
or
push
jno
jmp
mov
aad
inc
sbb
xor
call
(bad)
xchg
inc
test
push
in
pop
xchg
mov
sub
leave
mov
inc
stc
adc
ds
or
cmps
mov
push
out
pop
mov
cmp
xchg
hlt
movs
test
pop
push
or
inc
xchg
inc
rol
pushf
xchg
popa
xchg
pop
sbb
push
cmp
aad
xor
(bad)
cmp
push
push
add
mov
xor
mov
dec
inc
cmp
inc
cmp
punpcklbw
outs
jne
dec
call
pop
lds
test
mov
sbb
dec
shl
ret
ins
push
sbb
push
and
mov
sar
clc
jmp
test
bound
or
adc
lds
pop
jb
add
push
push
and
add
or
jle
rol
sbb
xchg
sbb
add
aas
rol
ror
sbb
test
imul
pop
pop
inc
xor
add
popa
mov
cld
mul
jmp
and
repnz
jbe
icebp
cmps
test
inc
ret
je
in
dec
or
into
add
pop
mov
lock
xchg
mov
ret
into
cmp
jbe
ds
dec
(bad)
ret
std
mov
ja
xchg
js
bound
mov
ficomp
mov
dec
rep
rcl
xchg
enter
pop
and
movs
loopne
fiadd
mov
push
mov
cmp
std
call
mov
dec
jbe
add
lahf
xor
xlat
leave
and
pop
cs
das
xchg
xor
ins
mov
inc
fcom
push
jno
cmp
ret
mov
sbb
xchg
retf
popa
jp
test
retf
mov
sub
mov
retf
jge
jmp
mov
mov
mov
ret
cs
mov
push
jns
xchg
fsubr
and
and
mov
jbe
ret
call
dec
popa
addr16
sub
mov
test
xchg
inc
sub
sbb
pop
inc
sub
fwait
lock
imul
sbb
pop
sbb
dec
hlt
nop
icebp
cs
cmp
ins
dec
out
mov
aas
or
daa
pushf
cmp
(bad)
loopne
add
push
adc
in
xchg
xor
loop
mov
push
xor
ja
inc
push
mov
shl
sbb
cmp
pop
mov
fcmovnb
sbb
jl
push
xlat
jle
add
inc
es
push
lea
fadd
std
fdiv
push
add
push
pop
fidiv
sub
inc
add
mov
fsub
and
js
mov
or
mov
cs
xchg
add
rol
mov
call
sub
test
shl
mov
sti
push
nop
ins
loope
(bad)
inc
or
adc
dec
sbb
sub
dec
pop
nop
dec
adc
push
rcl
rol
fist
mov
and
add
sahf
bound
inc
or
mov
es
mov
dec
pusha
and
adc
pop
inc
call
in
ds
xor
cwde
dec
pop
or
pop
jg
xchg
xchg
mov
sub
cmp
push
clc
or
sub
mov
push
stc
push
jae
mov
sub
out
es
mov
mov
jae
mov
in
pop
je
inc
add
mov
mov
mov
inc
cmp
ror
dec
jl
push
out
jg
mov
shr
xchg
cmp
imul
sub
lea
dec
mov
xchg
adc
mov
xor
mov
imul
daa
add
call
pop
push
mov
ret
popa
lods
daa
cdq
shl
add
xchg
push
push
adc
icebp
movs
jge
xchg
inc
fwait
xchg
jle
cmp
push
jbe
addr16
push
push
push
pop
fisubr
add
test
or
cmp
push
inc
(bad)
push
popf
push
outs
sbb
jle
pop
mov
mov
neg
and
mov
icebp
inc
adc
enter
inc
pop
pop
sub
jg
jnp
ret
add
dec
leave
jb
dec
add
adc
mov
lods
inc
and
popa
and
dec
lods
sbb
das
ds
add
or
mov
push
pop
test
xchg
cmp
stos
loopne
or
dec
aas
adc
je
xor
outs
mov
retf
cmp
(bad)
aaa
mov
sbb
jbe
pop
out
jo
in
mov
ins
sub
sar
rcr
loopne
mov
aas
bound
pop
ret
jne
ficomp
and
and
add
out
cmp
pop
or
adc
push
cmps
mov
sbb
mov
or
imul
(bad)
add
in
jo
lea
sbb
jp
adc
add
call
push
ficomp
ins
mov
xor
movs
int3
nop
jg
pushf
sbb
clc
inc
cmp
pop
adc
daa
or
test
icebp
push
push
dec
rol
sbb
inc
mov
sub
mov
add
sub
adc
gs
xchg
cmp
xlat
pop
and
cwde
cmp
(bad)
sbb
lea
jg
cs
adc
loop
mov
xor
jmp
cmps
add
call
push
retf
fs
inc
loop
mov
pop
ret
add
and
into
cmps
hlt
sti
adc
dec
xchg
push
mov
sub
adc
jae
and
xor
cmp
ret
clc
lea
and
add
test
add
dec
loope
rol
pop
add
mov
sahf
or
add
xchg
push
pop
test
fwait
mov
aas
clc
or
lock
js
sub
dec
push
sbb
std
ins
adc
jecxz
mov
dec
add
dec
jne
dec
or
push
out
add
inc
cmp
sub
cwde
fistp
clc
inc
js
inc
cli
add
mov
or
mov
xor
jle
sbb
add
aas
cmp
popf
in
pusha
add
cmc
adc
movs
enter
fwait
add
aad
nop
fcom
pop
sub
xchg
adc
dec
call
js
add
xor
push
cdq
jbe
out
jns
scas
das
punpckhwd
ret
es
call
inc
or
push
and
aad
cdq
or
stos
xchg
mov
js
bnd
push
push
and
test
out
daa
inc
push
mov
stos
and
fidivr
push
sub
pushw
hlt
mov
mov
test
int3
lods
mov
inc
or
or
bound
ret
adc
fadd
scas
adc
push
ja
mov
dec
arpl
sub
leave
inc
and
ret
dec
inc
pop
dec
icebp
stos
(bad)
dec
push
rol
adc
push
xchg
add
leave
sub
add
xchg
fimul
nop
jbe
pusha
add
nop
dec
push
add
inc
push
mov
nop
dec
pop
cmps
add
out
stos
dec
jno
fsubr
movs
leave
sar
leave
lods
popa
cld
(bad)
add
scas
inc
mov
fsubr
add
jl
and
popa
cmc
cmp
loope
push
adc
es
(bad)
sub
add
mov
movs
adc
or
inc
cmp
or
ret
inc
scas
push
mov
es
lods
push
adc
pusha
lods
call
test
mov
xor
cmp
jle
addr16
sahf
jge
pusha
stos
xor
js
js
inc
jg
dec
mov
nop
ja
lock
pop
add
sub
or
push
jbe
test
xor
jmp
or
cmp
push
sub
push
dec
loopne
movs
mov
mov
inc
iret
push
push
and
es
aam
not
lds
xor
add
inc
fsub
xchg
add
sbb
xor
mov
sbb
ror
sub
daa
movs
les
mov
mov
or
je
sti
push
mov
or
mov
mov
mov
mov
ror
or
and
leave
inc
jecxz
out
out
jge
sahf
jo
hlt
mov
push
call
sbb
xor
imul
in
pop
cmp
lods
call
push
add
ret
dec
sahf
test
aas
push
adc
mov
or
push
add
(bad)
push
nop
cwde
stos
or
sub
xor
push
add
test
mov
ja
adc
add
sub
or
push
loope
popa
sub
stos
push
inc
lock
pop
out
add
pop
movs
or
imul
mul
inc
dec
dec
mov
movs
arpl
adc
xchg
sbb
cwde
inc
or
loop
icebp
mov
mov
mov
xchg
cmp
jb
mov
mov
mov
add
ins
and
mov
dec
adc
add
inc
pusha
cmp
xor
int
loopne
mov
push
lea
and
mov
dec
sbb
int
sbb
or
sbb
and
sbb
lea
(bad)
dec
ret
addr16
and
das
mov
pop
shl
aas
adc
arpl
jmp
or
ins
adc
push
cld
inc
jp
pop
cwde
fcomp
mov
imul
inc
add
adc
adc
inc
outs
inc
adc
fld
pusha
adc
and
add
mul
sbb
inc
and
xchg
pop
jge
sub
and
sbb
inc
lea
movs
push
cmp
sub
or
sub
add
xor
xor
inc
xor
lock
xor
mov
fcom
sets
and
or
push
mov
test
mov
xor
mov
ficom
mov
(bad)
retf
inc
(bad)
data16
adc
dec
or
jns
addr16
adc
pop
rol
jmp
and
adc
pop
cmp
push
push
sub
movs
loop
ins
and
sbb
mov
popa
jb
cmc
push
out
shl
pop
or
add
js
xchg
jae
or
adc
pop
and
adc
je
or
imul
fidivr
out
push
rcr
sbb
sbb
xchg
call
inc
add
fild
fabs
add
xor
mov
fist
xor
inc
mov
sbb
or
scas
enter
xor
xor
daa
mov
mov
test
pop
int
xlat
sbb
rol
dec
sub
(bad)
mov
mov
sbb
sub
arpl
push
inc
js
add
adc
outs
mov
mov
ret
outs
adc
mov
int3
add
add
add
lock
outs
bound
movs
test
(bad)
push
(bad)
cs
and
cmp
adc
das
rcr
aas
daa
sar
mov
mov
sbb
sbb
add
hlt
mov
mov
mov
xchg
loope
jo
jg
rcr
cmp
js
sbb
mov
movzx
cmp
mov
inc
push
shr
(bad)
inc
jl
cmp
add
or
and
push
fsubr
pop
mov
sbb
clc
mov
add
ret
or
sub
fwait
mov
imul
ror
and
dec
inc
add
pop
sub
pop
jmp
or
shl
push
test
add
push
and
pop
mov
call
xchg
or
call
cs
xor
pop
cmp
in
xchg
xor
adc
inc
and
add
push
lods
adc
adc
mov
adc
adc
adc
sub
es
outs
test
or
or
mov
dec
sub
jmp
test
cmp
add
and
push
dec
jmp
icebp
pop
(bad)
enter
pusha
lods
out
push
scas
xor
sbb
bound
push
(bad)
call
sub
mov
and
jnp
inc
(bad)
movs
not
shl
(bad)
push
push
sbb
cmp
and
mov
shl
daa
lods
pop
mov
jmp
pop
adc
push
jle
(bad)
and
cmps
movs
fimul
sbb
push
mov
daa
xchg
cmps
hlt
add
cwde
sbb
aaa
inc
push
mov
or
jl
and
pop
imul
pusha
inc
adc
push
xchg
mov
shl
mov
cmp
adc
mov
lods
sbb
jecxz
sub
push
sbb
loopne
adc
jbe
jnp
inc
pop
dec
das
aaa
mov
scas
xchg
adc
call
dec
mov
leave
adc
ficom
aaa
fs
shr
in
bound
test
sub
adc
add
call
xor
sub
inc
mov
xchg
icebp
sar
adc
jmp
sti
and
add
xor
aaa
stos
or
loopne
push
mov
mov
or
mov
fldcw
add
stos
cmp
push
adc
pop
or
stos
jmp
sbb
cmp
push
(bad)
aad
pop
in
jmp
push
mov
push
mov
and
add
ss
push
add
pop
adc
adc
mov
mov
js
pop
mov
push
pop
rol
test
sub
push
xor
dec
fimul
rcr
wbinvd
mov
fild
xor
ret
or
fidiv
pop
int
je
or
cmps
popa
ret
pop
mov
adc
jge
jg
test
jmp
aas
push
sbb
sbb
cmp
popf
fadd
not
(bad)
sbb
adc
es
xor
mov
dec
fdiv
jae
stos
and
mov
mov
mov
fisttp
cmp
call
popa
pusha
or
mov
mov
movs
pop
or
test
push
daa
ret
xchg
out
xchg
add
dec
mov
mov
mov
or
stos
ins
add
or
rcl
sbb
xchg
push
call
or
pop
leave
push
and
jecxz
xor
add
inc
xchg
movs
xchg
(bad)
(bad)
les
sbb
imul
pop
shld
cmp
and
mov
sbb
ins
daa
or
lea
sbb
xor
aad
jg
or
or
push
loop
int3
fist
std
push
nop
jge
mov
jle
adc
mov
cmps
cmp
ss
in
cmps
addr16
push
adc
sbb
inc
and
or
(bad)
xor
pop
call
dec
sahf
das
jnp
sbb
das
and
fcmovu
mov
aaa
outs
or
sub
cmp
jbe
arpl
sub
push
xor
enter
cmp
test
and
mov
mov
cmc
push
jp
push
shl
imul
push
rol
mov
cli
inc
aad
and
js
aas
je
mov
and
sti
adc
popf
or
scas
ret
add
test
loope
jmp
push
sub
jmp
jne
arpl
xchg
jae
in
cwde
sub
and
mov
mov
push
xchg
push
or
and
aas
fiadd
mov
jle
or
pop
cmp
movs
adc
sbb
sbb
ins
mov
(bad)
enter
test
jl
cmp
push
jnp
add
pop
push
arpl
pop
jle
cmp
jg
and
movhps
add
in
aam
lods
pop
out
cmp
sbb
adc
dec
mov
jle
xor
int3
in
test
sub
pop
add
jge
in
and
mov
mov
pop
test
jl
cmp
jg
push
sbb
sbb
jmp
pop
mov
add
mov
or
sbb
or
or
inc
adc
jbe
retf
or
and
inc
cld
mov
add
fbstp
pusha
sar
pop
pop
pop
lea
push
jg
push
sbb
fdiv
add
cmp
test
dec
(bad)
clc
or
inc
mov
mov
inc
dec
inc
pusha
mul
dec
mov
adc
pop
and
sbb
jbe
out
jge
adc
sub
loopne
jne
nop
jns
repz
shl
cmp
and
xor
test
je
xor
enter
pushf
add
loopne
dec
lods
jle
xor
sub
push
sub
xadd
xor
jmp
mov
push
jne
xchg
adc
mov
sub
mov
nop
push
cmps
or
ins
mov
mov
jns
clc
adc
loope
ss
mov
dec
inc
aam
ja
lds
sbb
jl
add
shl
add
mov
inc
inc
loop
bswap
shr
xor
mov
sbb
lea
xor
and
push
sub
jmp
cmp
pop
dec
adc
and
out
xchg
xchg
adc
jbe
mov
dec
out
popa
das
adc
cmp
jne
out
sbb
in
xor
in
movsx
fist
mov
mov
sub
or
and
xor
inc
cmp
push
xchg
or
push
and
loopne
or
add
dec
mov
cdq
push
cmp
ss
mov
add
add
cmp
or
push
inc
test
aaa
or
push
aam
and
in
test
sbb
or
aaa
ret
push
fs
xor
mov
push
xor
cmp
add
inc
in
sbb
ins
nop
xor
dec
inc
stos
cmp
mov
stos
mov
xchg
and
mov
cwde
add
mov
inc
mov
xor
inc
in
mov
adc
loope
or
stos
scas
cmp
js
push
or
jns
jbe
add
das
scas
dec
fwait
inc
adc
push
push
add
adc
js
fimul
repnz
mov
test
mov
or
je
imul
pusha
add
fs
push
sub
lods
jmp
adc
push
popa
jmp
jle
ja
ret
xor
push
cld
(bad)
inc
gs
xchg
je
dec
or
add
mov
mov
fist
cs
pop
lahf
or
jecxz
dec
sbb
test
sbb
push
outs
bound
dec
cmp
inc
or
or
sub
xor
or
add
adc
cmps
adc
mov
dec
dec
sbb
std
xchg
inc
rcr
adc
jmp
ror
mov
cmp
icebp
xchg
dec
mov
ror
mov
xchg
xor
push
je
jmp
or
xor
es
and
inc
sub
sub
pushf
ret
cmp
sbb
cwde
test
push
add
mov
clc
or
mov
(bad)
jbe
add
or
pop
inc
test
mov
outs
scas
sbb
lods
or
mov
and
inc
out
(bad)
std
xchg
jbe
pushf
stos
xor
and
dec
xchg
or
push
xor
xchg
pop
pop
out
push
push
or
mov
sbb
loop
cli
add
ret
daa
cmp
mov
push
push
mov
fs
jmp
xchg
xchg
retf
or
dec
xchg
sbb
imul
lea
push
mov
and
sahf
add
add
mov
ret
in
test
call
inc
xor
rcr
adc
daa
inc
dec
add
rol
icebp
adc
pop
lock
push
cmp
mov
pop
cmp
xchg
ret
dec
repnz
mov
ret
inc
mov
(bad)
pusha
test
aaa
inc
mov
sbb
and
adc
call
js
int
mov
mov
rcl
and
scas
lods
adc
lea
(bad)
mov
sbb
dec
lock
cmp
or
and
adc
pop
push
xor
sub
bound
fild
clc
mov
or
push
js
pop
jo
mov
call
into
popa
push
mov
xor
adc
adc
in
sar
cmp
pop
mov
xchg
push
adc
dec
xor
ret
add
inc
adc
hlt
pop
mov
push
pop
jb
xor
hlt
push
lea
pop
stos
xchg
mov
jb
add
rol
jbe
(bad)
xchg
test
hlt
add
dec
add
add
movs
push
aas
shr
push
cwde
xor
mov
or
(bad)
or
pop
cwde
jne
ins
inc
add
call
add
mov
pop
mov
cmp
xchg
arpl
push
pop
aaa
loopne
(bad)
shl
cmc
mov
lock
push
in
out
pushf
inc
ins
push
mov
xchg
fcom
xchg
in
jmp
inc
loope
push
ins
or
lock
and
push
cmps
mov
add
pusha
sbb
call
mov
loopne
loop
add
adc
push
fwait
sbb
enter
or
or
(bad)
rcr
outs
lahf
and
shl
dec
xchg
scas
cmc
dec
cmp
dec
sbb
sbb
sti
lock
inc
push
inc
add
loopne
imul
es
mov
fwait
es
aaa
sbb
xor
outs
les
inc
xor
jmp
outs
inc
add
and
xchg
sbb
adc
ficom
push
sbb
inc
js
lock
mov
push
inc
nop
mov
inc
jle
adc
dec
imul
sbb
mov
lock
or
inc
xor
inc
add
ret
ret
mov
out
imul
xor
cmp
enter
sbb
lea
mov
enter
cmps
(bad)
adc
dec
or
xor
or
push
adc
inc
test
xchg
cmp
mov
popa
test
jl
inc
fsubr
lods
mov
add
ret
add
xor
add
ret
add
fs
push
inc
mov
nop
push
mov
lea
in
sbb
mov
cmp
and
shl
aas
or
pop
add
xchg
or
jo
or
or
shl
add
sub
or
cmp
icebp
mov
pop
icebp
jmp
and
stos
je
idiv
inc
test
add
add
icebp
cs
xchg
lock
mov
push
push
cwde
or
call
fmul
pushf
jle
lea
mov
mov
sbb
add
add
inc
xchg
jmp
push
mov
push
or
sub
mov
lock
ret
imul
sbb
les
inc
xor
pandn
int3
es
mov
outs
loop
imul
mov
rcl
add
outs
add
pushf
sbb
test
retf
mov
or
and
inc
lea
sbb
xor
push
inc
sbb
xchg
xchg
push
cmp
xor
mov
shl
add
add
outs
adc
pop
frstor
mov
or
xor
push
out
adc
dec
sbb
mov
(bad)
test
adc
cmp
test
push
mov
out
add
dec
je
add
jmp
fiadd
or
and
dec
int3
shl
add
cmp
adc
push
movs
or
(bad)
bswap
inc
add
mov
mov
inc
nop
cmp
mov
xor
or
mov
or
push
adc
daa
ret
mov
mov
inc
dec
or
xchg
(bad)
sbb
mov
je
leave
sub
dec
add
in
aam
add
mov
loopne
je
imul
jo
movs
clc
add
sti
popa
jmp
hlt
add
and
add
jo
sbb
dec
jge
div
mov
push
xchg
adc
add
xor
xor
cmps
xchg
int3
adc
(bad)
mov
in
mov
jmp
mov
and
xchg
push
shr
pop
cwde
and
inc
inc
jmp
inc
outs
imul
sar
adc
inc
mov
data16
sub
jl
mov
cmp
sbb
jp
popa
push
adc
sub
mov
mov
adc
jo
call
pop
inc
adc
call
clc
sub
mov
jl
loope
out
add
neg
js
hlt
push
and
inc
ss
xchg
nop
and
test
pushf
add
sbb
stos
jp
xchg
inc
cmp
sub
mov
cwde
and
sbb
sub
xchg
imul
cld
mov
push
lea
cmp
push
icebp
fsubr
sub
sahf
add
or
cmp
sbb
xor
inc
sbb
retf
sbb
pop
lea
cmp
data16
cmp
adc
or
sbb
adc
dec
cwde
adc
mov
sub
cmps
mov
jae
imul
hlt
ss
inc
and
retf
xchg
and
xor
inc
sbb
adc
fistp
pop
or
push
pop
cmc
or
jle
out
(bad)
popa
loope
scas
(bad)
jp
rol
mov
pop
jns
(bad)
cmp
mov
lea
and
xor
lahf
xor
loop
sbb
inc
imul
lahf
dec
jae
stos
sahf
ret
and
cmp
es
ds
or
mov
sub
lahf
arpl
cmp
sbb
adc
push
lds
rcl
adc
or
rcr
mov
push
lods
xor
dec
mov
ror
adc
push
pop
lahf
push
pop
and
push
and
jne
inc
test
or
inc
push
sbb
cmp
nop
pop
popa
push
xor
xchg
jle
cmp
pop
js
add
es
sub
fdivr
mov
ret
lock
xchg
push
jne
lds
add
jbe
mov
mov
and
jmp
pop
inc
sub
fidivr
and
pusha
and
adc
das
ret
or
adc
mov
cmps
mov
scas
sub
or
sub
sub
shl
jg
add
(bad)
(bad)
stc
cmp
inc
xlat
add
sub
and
mov
inc
lea
sbb
loopne
mov
dec
ja
xor
mov
mov
jge
inc
cmp
scas
clc
mov
les
int3
fld
xchg
sub
add
data16
inc
mov
je
xor
pop
inc
retf
js
add
add
mov
test
daa
nop
lahf
add
xchg
(bad)
xor
or
inc
cmc
jg
jmp
fsubr
out
sub
cmp
test
pop
iret
rcr
dec
push
mov
jle
pusha
add
push
rol
hlt
in
ret
jo
sbb
imul
inc
loop
es
xchg
mov
test
dec
dec
mov
lods
cmp
ficom
or
stos
adc
movs
movmskps
jg
adc
neg
cmp
xchg
sbb
adc
and
lea
dec
xchg
mov
or
or
in
jb
test
cld
jns
add
or
jmp
pop
loopne
loopne
adc
(bad)
sbb
sbb
xor
inc
and
jl
inc
and
dec
inc
push
lock
adc
mov
push
mov
mov
hlt
ja
cmovl
pushf
mov
xor
fisttp
leave
rcl
xchg
nop
mov
mov
fwait
aas
adc
in
xchg
or
sbb
rcr
xor
cli
ds
popa
fs
loopne
adc
pushf
loopne
jb
lods
sub
in
scas
psubsb
pop
xor
popa
xor
add
aam
es
mov
ins
inc
inc
mov
add
push
js
ret
dec
sahf
pusha
xor
xor
sub
aaa
pop
retf
test
inc
inc
or
shl
adc
test
fsubr
and
das
add
scas
and
push
xor
sub
out
loopne
scas
ror
stos
call
xchg
stos
test
push
(bad)
psadbw
jle
mov
add
sub
mov
mov
imul
scas
push
xor
adc
and
test
fadd
dec
es
call
mov
mov
xchg
js
cmps
pop
sbb
and
or
pop
add
push
and
test
xchg
or
push
add
inc
inc
sbb
aad
pusha
repnz
comiss
xchg
shl
cmp
add
hlt
jmp
sbb
sahf
or
icebp
clc
cmp
jl
pop
xor
scas
xchg
hlt
les
or
hlt
jb
jge
clc
jl
inc
pop
pop
sbb
out
pop
push
inc
or
mov
shr
mov
jo
into
pop
mov
push
daa
iret
dec
mov
xor
cmp
sub
iret
sub
test
je
push
sahf
div
dec
out
inc
fiadd
jnp
or
add
(bad)
or
pop
mov
inc
or
rol
hlt
fadd
add
fisubr
add
sti
dec
outs
mov
inc
cmp
mov
add
pop
xor
adc
fstp
add
cmp
fild
les
hlt
mov
fldcw
je
inc
add
inc
pop
jne
iret
cmp
push
or
push
adc
js
inc
hlt
add
push
clc
hlt
cld
fs
ret
test
les
add
test
mov
push
adc
push
mov
inc
pop
ds
or
and
dec
pop
call
dec
xchg
sub
cmp
or
and
add
test
mov
test
ror
push
dec
clc
or
jmp
inc
adc
jnp
jo
jns
mov
push
ror
imul
outs
(bad)
cmp
inc
loop
mov
mov
cmp
push
and
stos
mov
mov
xor
sahf
rcl
or
ror
cdq
mov
sbb
or
sub
sub
ins
call
dec
adc
inc
push
in
lods
aam
mov
sbb
loope
add
iret
js
push
dec
or
repnz
or
lods
les
int3
js
and
mov
fsub
ss
push
jle
jnp
arpl
(bad)
jge
aas
add
adc
popa
add
and
push
jge
movzx
add
inc
inc
add
call
dec
jl
loopne
add
jbe
dec
shr
jge
scas
mov
add
mov
and
call
into
das
pop
push
inc
push
int3
sub
add
pusha
test
sub
xchg
push
mov
or
adc
push
xchg
in
sub
dec
jo
mov
cld
sets
sbb
(bad)
leave
pop
pusha
js
mov
in
fwait
pop
mov
loopne
push
gs
imul
fisttp
add
push
test
sbb
iret
test
add
adc
cmp
test
push
fcom
dec
cmp
jo
xchg
cmp
fld
or
sar
jmp
cmp
shl
sbb
jle
ret
clc
jg
pop
lahf
loopne
adc
lods
push
loope
mov
pop
test
pusha
mov
jmp
adc
add
adc
inc
int3
dec
xor
shl
sub
sbb
ret
ror
or
pusha
fiadd
inc
loopne
(bad)
and
cmps
pusha
rcl
iret
inc
or
xchg
xor
add
jp
add
cmps
ins
icebp
dec
lea
adc
xor
leave
push
adc
jp
mov
mov
loop
inc
mov
add
rcl
lea
sub
dec
test
add
ds
xor
or
mov
mov
imul
imul
ins
jl
inc
loopne
rol
ds
sbb
int3
icebp
xor
test
adc
cld
mov
loop
push
out
inc
jns
mov
xlat
or
push
xchg
mov
adc
pop
sbb
sbb
mov
add
push
jns
dec
shl
pop
retf
mov
jbe
(bad)
mov
loopne
and
or
add
(bad)
and
cmp
add
push
or
adc
call
dec
adc
pop
jle
pop
push
or
dec
dec
xchg
dec
push
inc
cdq
ja
ret
inc
sbb
adc
lock
fidiv
mov
inc
sub
sbb
add
pop
pusha
mov
rcr
dec
loopne
add
push
push
lock
jg
cwde
pop
(bad)
nop
add
and
aam
fmul
sbb
inc
dec
adc
outs
pop
mov
jmp
push
push
or
fnstcw
and
(bad)
and
mov
rcl
(bad)
aam
sahf
js
adc
(bad)
cld
imul
xor
inc
add
mov
popa
test
mov
rol
mov
or
add
pop
stos
jl
or
push
xor
sbb
repz
xchg
jo
xor
in
sub
adc
pop
and
add
push
fs
mov
pop
mov
(bad)
and
adc
jbe
loope
xor
and
and
(bad)
sti
ja
stos
fisubr
cmp
inc
add
je
push
je
push
es
arpl
sbb
(bad)
jae
and
ja
add
aas
sub
(bad)
sbb
ret
mov
ss
pop
adc
(bad)
clc
inc
ss
test
js
or
int3
mov
or
or
and
and
dec
movs
and
test
mov
fmul
mov
push
or
xlat
std
mov
je
sar
pop
mov
lods
or
adc
push
and
bound
add
mov
sbb
jl
aas
pop
jne
fst
int
sub
push
jl
out
data16
gs
in
mov
fsub
retf
andps
loop
jmp
sbb
add
inc
cmp
sbb
in
jae
jbe
out
or
scas
push
push
loopne
lock
sbb
leave
stos
add
xchg
jne
jmp
pop
data16
test
lods
cmp
pop
fdivr
jne
dec
mov
mov
push
add
sub
adc
cmp
cmp
cwde
dec
inc
sub
jno
fmul
add
fs
repz
(bad)
dec
cdq
dec
test
fild
loopne
je
add
popf
push
add
cdq
or
or
xor
jne
imul
inc
call
sar
or
icebp
inc
ret
cmp
movsx
int3
fbld
add
mov
inc
test
pop
div
rol
jl
ret
and
and
and
dec
cld
icebp
add
xchg
dec
sti
clc
and
fidiv
adc
or
mov
sbb
jo
cmp
in
pop
stos
pop
and
cmp
paddusb
fmul
inc
push
test
dec
or
and
push
inc
cld
mov
inc
and
dec
or
rcr
push
mov
add
dec
add
and
jp
popa
sub
rcl
aas
jg
sbb
out
xchg
sbb
add
dec
mov
xor
dec
loopne
cwde
inc
rol
inc
cld
mov
iret
or
inc
sub
or
jge
lods
and
inc
sub
or
pop
shl
sub
adc
inc
sbb
xchg
lea
rol
sub
not
pop
mov
adc
in
adc
rcr
mov
mov
or
sbb
inc
(bad)
sar
push
sbb
cmp
enter
add
loope
ret
jmp
sub
ret
xor
mov
add
hlt
mov
jge
xor
loopne
or
repnz
cmps
enter
inc
enter
pop
or
mov
xlat
push
(bad)
sbb
and
loopne
inc
cs
leave
enter
fmul
enter
aam
enter
rcl
int3
pop
cmp
test
dec
mov
addr16
clc
bound
adc
push
fdivr
adc
xor
jnp
push
cmp
jmp
in
fadd
mov
sbb
sbb
test
loopne
hlt
mov
adc
or
into
add
mov
mov
mov
mov
call
fstp
add
jmp
bound
sub
clc
push
pop
sub
dec
lock
add
cmp
add
jp
mov
xchg
test
add
or
jnp
out
cmp
sete
and
push
and
cmp
jne
mov
pop
icebp
mov
cmp
nop
repnz
cmp
push
and
jp
out
in
adc
sub
inc
inc
fcomp
add
or
mov
or
and
add
xor
cdq
jnp
fdivp
sbb
sahf
push
push
or
push
xor
xor
jno
adc
push
aam
jae
or
pop
and
in
movs
ret
(bad)
sbb
test
add
shl
push
das
push
adc
jae
mov
dec
cmp
add
and
add
jno
sti
add
pop
rol
ret
cwde
push
sbb
cmp
outs
xchg
lock
fs
xchg
adc
retf
sub
push
or
repnz
or
cld
jg
je
adc
xchg
cmp
adc
push
dec
movs
nop
fimul
cmp
(bad)
imul
sub
outs
mov
(bad)
add
sar
out
mov
int
out
jae
cmp
dec
mov
ror
call
push
fs
ins
inc
mov
adc
fbstp
sub
adc
mov
cmp
dec
add
int3
cmp
push
pusha
fidiv
sub
jg
push
pusha
adc
mov
inc
sahf
out
jb
inc
jp
rcr
mov
cld
xchg
push
nop
stos
sbb
movsx
jne
addr16
dec
mov
call
jg
sbb
adc
popa
clc
ss
dec
inc
loop
xchg
ficom
sbb
add
inc
cmp
inc
sar
jne
cli
push
jle
sub
sbb
push
ds
sbb
or
cmp
ret
pop
push
push
cli
inc
je
inc
inc
dec
and
repnz
ds
or
loopne
(bad)
xor
enter
mov
pop
cwde
adc
sub
ret
xor
cmp
sbb
lea
stos
inc
inc
jle
and
xchg
jl
jno
gs
loopne
cmp
enter
stos
push
stos
mov
pop
call
xor
or
add
rol
pushf
adc
rcl
push
jp
adc
mov
std
retf
cmps
push
ret
ret
add
adc
popf
sbb
je
loop
ins
jo
ds
sub
xchg
sbb
xor
mov
lock
xor
lock
add
jge
neg
dec
mov
rcl
pop
inc
call
jle
cmp
aas
push
adc
in
jmp
push
mov
adc
dec
inc
in
fistp
mov
in
(bad)
mov
mov
sbb
fimul
pusha
and
sbb
lea
aaa
pop
nop
mov
pushf
dec
pop
dec
add
jo
leave
sbb
das
loope
mov
and
cwde
and
and
loope
or
mov
xchg
dec
adc
popa
clc
or
mov
(bad)
sar
cmp
mov
or
adc
push
ret
movs
clc
push
sbb
cwde
ret
and
or
inc
sbb
push
inc
pop
add
add
int3
adc
neg
hlt
rol
sbb
loopne
not
call
rcr
inc
enter
jmp
int
inc
xchg
ret
dec
jle
add
sub
sub
cmps
in
add
inc
sar
mov
std
or
sub
xor
ret
add
jns
and
loopne
mov
add
mov
pop
neg
loopne
adc
jne
inc
mov
adc
mov
cdq
push
or
jb
das
xor
inc
add
call
bound
addr16
and
and
jo
cli
sar
cmp
sbb
cld
pop
lock
push
or
dec
mov
addr16
inc
rol
mov
mov
jl
inc
sahf
push
adc
sub
xor
mov
cmps
add
sbb
lods
jge
inc
push
sbb
mov
movs
imul
shl
mov
cmp
push
ret
adc
btr
mov
lea
pop
lea
int
js
jl
icebp
dec
cmp
dec
xchg
cmp
neg
dec
js
into
rol
dec
sbb
imul
into
push
cs
mov
imul
cmp
mov
or
dec
sbb
add
(bad)
mov
and
mov
jne
inc
or
mov
cwde
inc
push
out
mov
add
shr
(bad)
pop
xchg
or
jle
popa
jo
std
out
jle
mov
xor
adc
or
ja
test
in
or
cmp
add
(bad)
mov
call
inc
and
pop
fxch
push
pop
add
rcl
jmp
cmp
je
adc
mov
add
and
add
and
inc
xlat
adc
test
enter
dec
adc
adc
inc
rcr
sub
popa
rol
and
inc
mov
push
ret
fcom
mov
scas
jne
sub
mov
inc
mov
push
pop
sbb
dec
adc
mov
lea
jmp
gs
cmp
adc
loop
adc
stos
lea
lock
mov
(bad)
xlat
xchg
jle
push
or
mov
enter
jecxz
fcomp
lea
cli
or
mov
movs
cwde
bound
jl
scas
call
div
sbb
mov
sbb
repz
sbb
stos
fwait
cli
fisubr
xlat
push
dec
ret
sub
push
add
jecxz
xchg
clc
sub
js
sub
jae
push
fdivr
mov
add
push
sub
mov
add
pop
add
imul
push
cmp
mov
push
int3
jns
int3
test
inc
daa
test
adc
sti
add
mov
jge
pop
movs
mov
call
inc
mov
jmp
std
xlat
je
nop
add
lea
pop
sub
jl
fld
fstp
sti
mov
scas
mov
les
jmp
pop
adc
or
retf
adc
xor
fwait
into
shl
dec
or
jne
and
scas
add
xor
push
push
and
add
nop
scas
push
xor
inc
sahf
fst
enter
mov
mov
sub
addr16
cmc
inc
mov
mov
xor
mov
push
int3
mov
imul
fimul
les
fadd
fnstenv
and
bound
inc
add
sbb
call
or
adc
pop
imul
or
or
adc
or
adc
cmp
inc
and
das
popf
or
sub
iret
in
fimul
sub
out
jge
jbe
sbb
fs
adc
sub
scas
sub
fmul
xor
sub
out
cmp
adc
adc
sbb
push
sbb
sbb
sbb
fs
jge
sahf
or
add
icebp
inc
and
cmp
imul
sti
xchg
retf
jnp
cmp
sbb
cmp
inc
fs
test
cs
adc
fs
in
out
inc
sub
sub
xor
nop
pop
neg
mov
repz
fisub
rcr
mov
pushf
push
mov
sbb
pop
imul
adc
xor
xchg
or
sbb
call
sub
fs
mov
and
jle
call
and
into
repz
aas
adc
mov
xchg
mov
aas
fcomip
scas
xor
inc
add
pop
mov
movs
mov
lods
xor
pop
mov
dec
repnz
out
jne
pop
mov
(bad)
add
outs
or
test
xchg
cmps
dec
idiv
push
js
outs
call
or
mov
add
leave
xchg
dec
mov
jo
ret
adc
mov
mov
jnp
xchg
pop
jo
shr
and
mov
xchg
adc
adc
scas
push
sbb
loop
jmp
lea
push
test
ds
movs
pop
out
test
xchg
cs
(bad)
iret
test
popa
cwde
inc
push
xlat
xor
sub
push
pusha
xchg
xor
sub
xchg
je
inc
or
repnz
and
sbb
mov
dec
cmp
mov
sar
or
popa
cmp
pop
dec
mov
push
fsubr
sbb
lahf
add
xchg
dec
mov
xor
pop
and
addr16
dec
mov
mov
push
inc
in
jne
cmp
push
mov
or
imul
xchg
mov
hlt
lea
adc
ins
mov
push
cmp
sbb
loopne
sbb
xchg
jp
call
cwde
cli
inc
mov
add
icebp
inc
and
call
and
mov
int3
loopne
add
jmp
lea
mov
add
inc
dec
or
je
push
and
adc
jbe
jp
(bad)
jg
add
mov
cmp
or
ror
push
pop
mov
sahf
rol
sub
adc
lea
or
add
inc
mov
adc
jne
jg
or
pop
in
mov
or
(bad)
inc
adc
push
or
mov
mov
inc
pop
fadd
lods
jl
mov
push
aaa
fistp
arpl
pop
push
push
adc
xor
iret
or
jmp
inc
(bad)
mov
outs
icebp
mov
sbb
jecxz
sar
inc
push
fild
aad
stos
mov
adc
enter
xchg
jae
or
test
addr16
rol
push
in
add
adc
sbb
xchg
popa
mul
test
inc
sar
cli
inc
sbb
or
pop
inc
and
popa
dec
xchg
pusha
mov
loopne
or
jae
mov
std
inc
iret
hlt
sub
sbb
push
aaa
or
cwde
test
out
aam
dec
sti
push
pushf
or
adc
loop
inc
dec
add
or
repz
cmp
jle
push
xor
push
mov
add
xchg
rol
mov
sub
pop
jg
sub
imul
mov
push
inc
jb
add
ret
mov
cdq
mov
adc
or
adc
sub
outs
and
dec
rol
jge
inc
and
push
jno
jmp
add
imul
pop
rol
mov
jo
repnz
and
jmp
aaa
or
mov
aas
mov
inc
clc
movs
pop
stc
fcomip
and
dec
psubd
fimul
xchg
xlat
dec
xchg
push
lea
ret
js
jmp
or
rep
pop
mov
scas
mov
cmp
cmp
sub
adc
cmc
lods
pop
cli
retf
mov
lea
rol
cmp
mov
lock
xchg
sub
shr
lea
mov
and
sbb
add
mov
aad
and
push
or
jge
or
xchg
inc
adc
push
add
cmp
bound
data16
inc
and
xchg
stos
jecxz
sub
ss
sub
mov
jb
adc
fmul
pop
sub
adc
xor
sub
and
les
inc
mov
aam
mov
adc
aad
gs
in
and
test
stos
adc
pop
push
sbb
cmp
sbb
cli
outs
mov
div
mov
dec
dec
mov
sbb
cmps
add
inc
leave
jmp
push
inc
mov
push
mov
add
lea
inc
ins
add
into
mov
jl
loop
sub
adc
adc
bound
mov
(bad)
(bad)
jne
es
adc
rol
cmp
mov
call
mov
jno
adc
aad
clc
lea
(bad)
shl
mov
mov
jge
pusha
lods
pop
sbb
and
imul
das
fadd
(bad)
mov
sahf
test
inc
ja
or
jecxz
adc
les
imul
and
lea
xchg
sar
push
jno
lea
adc
add
inc
pop
sub
pop
mov
scas
retf
mov
sub
or
es
xor
cmp
jp
cmc
out
popa
or
xor
xor
cmp
jl
ret
je
mov
(bad)
sti
fistp
push
loop
sar
js
cli
shl
xchg
add
mov
cmp
cmp
jnp
scas
mov
mov
xadd
repz
jle
sbb
pop
sub
lock
cmp
push
sbb
lock
fs
daa
out
jmp
or
jp
jo
add
cmp
into
jmp
scas
clc
aaa
push
mov
jmp
dec
dec
cmp
stc
add
(bad)
inc
dec
mov
movs
fimul
stc
imul
jb
iret
les
dec
dec
cmp
adc
adc
or
xor
jmp
sbb
pop
sar
pop
cmp
cmp
push
mov
inc
inc
add
push
sar
in
inc
movs
bound
lods
test
jmp
cmp
lods
push
dec
pop
enter
in
pushf
adc
or
jecxz
das
and
movs
mov
(bad)
mov
ja
add
push
sbb
sub
in
movs
jb
pop
(bad)
mov
mov
lods
sbb
push
stos
pop
push
popa
(bad)
mov
mov
test
mov
jns
add
arpl
push
mov
mov
sub
add
fisubr
cmp
inc
add
adc
lock
or
push
add
dec
add
pop
adc
cld
iret
popa
add
or
jno
out
add
xor
xor
inc
push
push
push
push
jne
xor
push
inc
jo
push
or
(bad)
jmp
imul
pop
jbe
inc
dec
ja
imul
add
neg
outs
jb
xor
imul
gs
mov
add
jg
inc
aaa
adc
xor
cmp
xor
cmp
cmp
(bad)
mov
push
inc
sub
bound
bound
xor
(bad)
push
pop
jb
inc
pop
bound
inc
cmp
dec
data16
xor
inc
dec
push
imul
dec
fs
call
loopne
jp
add
cmp
push
popa
imul
inc
and
outs
in
call
cmp
inc
cmp
inc
inc
jb
fs
dec
inc
inc
push
outs
inc
push
push
dec
jge
(bad)
pop
push
jae
gs
jp
dec
imul
inc
xor
cmp
dec
(bad)
mov
push
inc
and
dec
push
push
jb
fs
jp
je
pop
fdivr
push
inc
inc
xor
js
popa
xor
mov
pop
inc
push
inc
ins
inc
jbe
inc
push
outs
aaa
bound
cmp
cld
imul
bound
inc
je
imul
pop
inc
xchg
or
mul
outs
cmp
sub
jmp
dec
and
int3
sub
clc
outs
cli
jmp
xor
ss
push
pop
pop
dec
push
in
pop
pop
xor
pop
inc
xor
fild
sub
xor
sub
dec
pop
out
inc
imul
pop
(bad)
fistp
cld
gs
inc
jp
push
inc
inc
xor
and
sub
or
fidiv
inc
push
cmp
mov
jns
and
cmp
and
pop
data16
inc
outs
test
push
pop
imul
jns
jns
sub
data16
cmp
test
(bad)
mov
aas
pop
push
das
popa
jo
pop
jbe
das
push
outs
xor
mov
call
popa
ins
imul
sbb
popa
ins
jo
outs
inc
enter
add
je
ins
sbb
outs
ja
ins
outs
cld
gs
mov
outs
fs
lods
arpl
add
dec
gs
je
mov
jae
sahf
ins
push
sbb
xor
add
(bad)
jg
push
xor
push
push
push
mov
inc
scas
sub
test
call
mov
loop
lock
adc
nop
inc
js
and
inc
push
test
cmp
cmp
pushf
mov
add
retf
adc
nop
mov
jmp
clc
pop
pop
js
add
mov
adc
ret
adc
jmp
xor
out
sub
adc
mov
cmps
mov
fcomp
rol
inc
or
dec
dec
mov
mov
adc
dec
dec
dec
sbb
and
shr
or
or
bound
pop
inc
dec
push
cmp
shl
jo
mov
inc
push
jbe
push
not
pop
dec
inc
add
pop
inc
imul
adc
adc
add
add
dec
pop
dec
in
add
adc
add
popa
outs
or
cmp
je
pop
or
and
add
push
adc
lds
repz
sti
aas
cmp
adc
inc
add
call
mov
jns
adc
sbb
inc
jnp
rol
in
je
add
sub
sbb
(bad)
shl
jl
xchg
je
xchg
add
pushf
pop
mov
push
ins
cmp
inc
push
popa
jne
fwait
rcr
inc
or
add
or
sub
adc
jae
dec
fisub
sub
sub
or
or
ret
in
popf
ins
sub
adc
pop
rcr
rdpmc
xchg
pusha
ss
cdq
or
cdq
push
sub
or
dec
aaa
mov
pop
imul
sub
inc
jmp
inc
add
int
or
mov
add
dec
ins
mov
pop
dec
push
push
sub
dec
inc
cmp
lahf
dec
call
outs
dec
dec
or
call
xchg
enter
fmul
test
sbb
mov
adc
push
inc
xchg
mov
jmp
mov
loopne
mov
and
inc
inc
cs
popf
pushf
pop
inc
inc
int
add
aaa
push
xchg
pop
sbb
test
pop
das
add
aaa
mov
add
icebp
add
cmps
xchg
imul
sbb
add
(bad)
aaa
or
push
mov
mov
sar
or
push
jns
pop
push
rcr
arpl
dec
outs
sahf
ins
out
imul
or
mov
mov
pop
popf
adc
mov
mov
xchg
sub
or
or
pop
cmp
fldcw
sti
jo
sbb
inc
lea
mov
mov
push
or
or
imul
inc
dec
icebp
and
mov
call
mov
les
xor
mov
fistp
or
mov
das
sbb
sbb
jne
mov
loop
xchg
sbb
dec
sbb
shr
jmp
add
lahf
pushf
pop
cmps
adc
xchg
cmp
xchg
sti
mov
jne
jne
hlt
sub
rol
dec
sbb
(bad)
(bad)
push
mov
xor
inc
add
sbb
inc
sbb
adc
and
pop
inc
jo
jns
nop
pop
adc
pop
mov
or
or
aad
sbb
ror
loop
jo
inc
sbb
add
mov
jmp
call
jno
fadd
sbb
mov
ret
mov
arpl
dec
add
dec
loopne
push
clc
adc
inc
loope
call
aaa
sub
xor
pop
daa
ficomp
push
out
cmp
cmp
mov
stc
push
push
jmp
jl
enter
add
mov
test
jb
clc
out
fistp
jo
mov
in
jo
je
sbb
inc
hlt
mov
sub
(bad)
adc
call
call
or
sbb
int3
fiadd
hlt
mov
cmp
inc
fcom
and
in
fisttp
sbb
dec
pop
push
data16
pusha
fst
mov
(bad)
in
jg
inc
aam
push
aam
in
sub
xchg
sbb
mov
or
add
cld
sti
adc
orps
je
jo
cmp
das
adc
xor
add
or
jge
mov
add
adc
aas
adc
fucomp
not
inc
xor
jae
ds
outs
add
inc
out
jbe
bound
and
(bad)
mov
test
shl
sub
dec
adc
mov
pop
mov
mov
mov
inc
add
ins
push
ret
or
or
push
sbb
or
test
mov
push
pop
xor
xchg
mov
lar
sub
mov
or
push
sub
pop
sti
and
std
(bad)
lock
push
call
imul
call
enter
xchg
dec
loopne
in
sbb
dec
sahf
in
fcomp
imul
aam
fadd
fcom
rcr
xchg
int
enter
push
int3
nop
and
or
les
sbb
cwde
jmp
rol
mov
daa
sub
jnp
(bad)
in
mov
je
sbb
add
pop
ficom
mov
inc
push
add
fnstsw
and
and
push
ja
mov
imul
sbb
mov
sbb
pop
xor
push
clc
jnp
dec
js
cld
and
shl
syscall
ja
mov
mov
into
adc
push
push
lods
sub
pop
mov
inc
daa
and
xor
call
int
cld
cmp
sub
rcl
sbb
xchg
bound
add
cmp
jb
mov
pop
inc
loopne
sar
int3
sub
or
ror
mov
mov
or
adc
sub
jne
push
pop
xor
add
push
in
push
je
and
cmps
(bad)
(bad)
mov
push
in
call
or
cmp
xor
in
adc
arpl
or
jg
mov
gs
scas
in
pop
shl
pop
shr
sub
inc
xor
inc
inc
sub
pop
or
add
or
repz
and
jl
int3
mov
pop
add
mov
and
sbb
(bad)
neg
pop
cli
and
push
inc
adc
test
mov
mov
cld
add
enter
jmp
jecxz
popa
out
leave
or
mov
(bad)
clc
mov
mov
adc
imul
icebp
push
sbb
shr
dec
in
imul
xor
jae
in
xor
dec
xchg
retf
push
jmp
ror
add
push
icebp
mov
or
pushf
aam
xchg
jecxz
mov
loopne
lea
and
and
xchg
jl
sub
sbb
push
jb
mov
adc
or
(bad)
sub
jmp
loopne
pop
sub
or
cmp
iret
cld
push
out
js
aaa
in
test
push
iret
push
ins
and
(bad)
imul
enter
cmps
out
push
fldenv
es
mov
mov
xlat
pusha
fmul
add
xor
std
jb
enter
xor
sub
aad
mov
lea
jo
adc
and
lods
hlt
jb
outs
push
dec
aaa
enter
add
movs
inc
cmps
sbb
pop
inc
stos
mov
and
sub
jnp
sahf
push
sub
loopne
mov
jmp
or
sbb
jno
and
and
loope
scas
dec
mov
and
test
push
sbb
push
cmps
sbb
adc
fsub
xchg
mov
jo
and
mov
push
adc
loopne
iret
sub
test
add
shl
inc
and
loopne
(bad)
loopne
fdivr
rol
or
mov
push
rcr
enter
and
int3
int3
pop
or
inc
mov
(bad)
loopne
adc
aam
cs
(bad)
inc
ss
fdivr
push
inc
dec
pop
mov
(bad)
push
dec
enter
ror
pop
sbb
stos
mov
xor
and
jge
sbb
jnp
mov
push
push
mov
and
out
and
cmp
icebp
nop
inc
add
mov
mov
sbb
fadd
sbb
xor
jmp
pop
cmp
sbb
pop
push
xchg
cwde
mov
push
in
push
int3
cmp
inc
and
and
ss
mov
jno
sbb
jae
xchg
pop
loopne
dec
jne
adc
dec
xor
nop
mov
(bad)
mov
(bad)
mov
cmovo
or
mov
pop
aaa
cs
aaa
mov
pop
in
xor
xor
daa
xor
(bad)
cs
xor
xor
je
sbb
mov
out
(bad)
outs
loope
mov
inc
imul
pop
fwait
cs
je
add
nop
jg
push
shl
retf
test
inc
scas
outs
je
add
(bad)
and
pop
push
jne
retf
push
lahf
dec
fadd
int3
xchg
pop
mov
adc
rol
push
or
jnp
mov
and
dec
cld
mov
les
fst
mov
mov
mov
pop
pusha
neg
mov
sahf
and
jo
mov
scas
sub
jb
cs
mov
fidiv
pop
jne
daa
out
mov
popa
(bad)
popa
push
jmp
js
sub
mov
push
out
sub
pusha
push
sub
adc
mov
scas
test
inc
cld
cmc
lock
ret
jb
and
out
add
and
in
and
xor
jns
push
push
dec
sub
or
cmp
cmps
sub
xchg
inc
push
sbb
xchg
lock
stc
call
or
push
xchg
xchg
mov
in
int3
xor
adc
jmp
(bad)
clc
pop
es
pop
sbb
test
mov
mov
push
sub
and
cmp
xor
(bad)
xchg
fdiv
jmp
outs
loopne
setnp
aad
out
sbb
ja
fdiv
test
and
lds
xchg
mov
cmp
jb
add
out
xchg
movs
in
sub
mov
sub
mov
xor
mov
out
fimul
fbstp
xchg
mov
xchg
jno
rol
dec
pop
sbb
mov
jbe
or
int3
sub
sbb
push
sub
push
pop
xchg
mul
mov
mov
jle
xchg
test
pop
xor
ret
scas
cwde
push
mov
jbe
mov
stos
std
pop
in
jmp
rcl
sbb
call
inc
out
es
dec
fdivr
aam
dec
xor
adc
adc
dec
cs
jg
and
pshufw
loopne
mov
inc
js
pop
hlt
mov
push
js
adc
push
les
test
pop
fldcw
popa
test
adc
les
inc
jo
adc
call
out
(bad)
sbb
mov
call
cmp
retf
lea
fmul
cwde
loop
mov
fbstp
mov
movs
js
jnp
js
xchg
fadd
test
push
movs
xchg
inc
or
mov
adc
shr
mov
dec
outs
or
outs
jmp
jno
lds
test
add
sbb
and
add
(bad)
pop
jp
aaa
push
mov
add
ins
outs
push
mov
cmps
fs
sub
mov
cmps
ins
adc
cli
arpl
fs
or
push
pop
cmp
aad
das
push
stos
sbb
ret
push
call
and
(bad)
or
mov
cmp
dec
push
inc
ja
xor
or
xchg
xor
sub
push
dec
adc
scas
fild
xor
cmp
inc
pop
xor
cmp
neg
(bad)
pusha
es
pop
js
push
cmp
data16
ss
test
push
push
inc
cwde
xor
imul
pushf
and
dec
sub
mov
sub
or
jnp
cmp
es
xchg
fdivr
shl
adc
pusha
sbb
sbb
sub
adc
cmp
pop
or
xchg
dec
outs
fs
gs
or
push
add
xor
sti
iret
and
sbb
mov
sub
in
push
or
and
clc
xor
push
imul
aaa
inc
js
in
mov
je
jp
or
imul
stos
add
push
(bad)
cld
push
shld
jns
icebp
dec
xor
and
inc
and
or
xor
inc
mov
mov
mov
xor
sbb
scas
push
mov
popa
sbb
fstp
(bad)
pusha
push
popa
mov
sub
data16
fsub
(bad)
rcr
or
shl
push
jle
cdq
pop
mov
cwde
test
sbb
or
imul
and
jno
pop
sub
(bad)
cmp
mov
sbb
cmp
add
or
xor
aaa
loopne
adc
cld
or
call
adc
dec
xor
test
hlt
hlt
hlt
and
xchg
and
call
mov
cwde
pop
(bad)
mov
cld
loopne
fs
pusha
and
cmps
xor
xor
daa
hlt
or
rol
mov
aaa
mov
pop
sub
mov
adc
mov
dec
pushf
jl
in
mov
test
and
cmp
push
cli
test
sub
fimul
xchg
call
into
pop
and
loope
pop
or
fnstcw
sub
mov
dec
cld
pusha
loope
mov
clc
int3
inc
or
or
iret
jno
lock
test
mov
push
cmp
and
shl
shl
mov
inc
mov
lds
jne
movzx
ds
cld
out
mov
dec
retf
sbb
dec
mov
lock
movs
xor
or
inc
push
in
cld
add
mov
scas
mov
add
shl
mov
outs
ins
push
jbe
cmp
inc
test
iret
and
push
mov
inc
jg
jno
scas
sbb
cmp
cdq
xchg
and
sbb
jbe
mov
cmp
in
adc
dec
pop
jg
mov
test
xchg
aaa
mov
jnp
push
push
or
jl
add
dec
cmp
push
mov
lea
cmp
test
shl
jbe
mov
rcr
jno
xor
mov
movs
repz
xchg
loop
daa
mov
mov
cmp
inc
imul
lods
adc
popa
add
sub
scas
(bad)
jne
add
xor
jne
inc
retf
lea
aas
das
xor
lahf
and
ss
mov
cmp
mov
fdivr
jmp
adc
sub
mov
cmps
push
add
add
stos
fwait
shr
test
stc
(bad)
addr16
mov
push
dec
fidivr
stos
push
mov
(bad)
push
xor
pop
dec
sub
das
out
xlat
and
pop
ss
and
dec
push
push
xor
fwait
adc
push
sbb
gs
bound
mov
lahf
pop
aaa
addr16
mov
out
ss
cs
mov
dec
test
and
imul
loope
mov
fwait
inc
scas
jbe
cmp
cmp
push
loopne
push
out
add
inc
xor
xor
adc
jbe
push
push
jb
fcmovne
sti
xchg
daa
ficom
push
inc
mov
or
sub
push
mov
push
call
loopne
xchg
not
inc
test
inc
adc
lds
mov
rol
cwde
mov
add
inc
push
aam
sub
mov
mov
rol
pop
shl
pop
add
inc
pusha
sahf
cmp
imul
lods
inc
dec
cmp
aad
add
clc
dec
adc
mov
mov
inc
sbb
inc
add
cmp
and
cmp
test
inc
lods
gs
addr16
retf
dec
mov
stc
cmp
lea
pushw
cmp
xchg
add
and
movs
addr16
or
push
sub
mov
push
or
inc
mov
dec
xchg
mov
cmp
lods
inc
xchg
sbb
adc
sub
xchg
(bad)
mov
imul
repnz
call
in
mov
outs
push
jnp
push
loop
mov
xchg
in
mov
sub
movlps
push
hlt
mov
or
popa
ins
mov
out
cmp
or
jb
lock
pusha
and
clc
sub
inc
push
mov
add
and
adc
ffreep
test
xlat
jo
aaa
icebp
push
mov
aas
cld
sub
test
push
fisttp
push
cmp
sub
das
mov
mov
and
lods
xchg
add
in
movs
xor
sub
xor
xchg
dec
push
xor
cmp
push
push
movs
xor
inc
nop
and
fiadd
pusha
inc
mov
and
or
call
in
inc
pusha
and
add
adc
scas
add
dec
shr
add
add
loop
lock
fcmove
or
ror
call
jmp
jnp
sbb
cs
mov
push
jae
outs
mov
add
in
mov
cmp
aas
les
adc
js
outs
sbb
or
das
push
push
or
inc
ror
out
ret
dec
push
ins
mov
mov
adc
aas
jmp
leave
inc
dec
ja
push
lea
add
repz
or
aaa
xlat
ds
sbb
retf
outs
aaa
or
add
outs
push
aas
add
adc
cmp
push
js
sub
push
call
mov
jg
inc
jb
sbb
cmp
mov
inc
scas
nop
mov
cmp
dec
sbb
les
jmp
out
mov
jl
cli
push
shl
out
sbb
adc
rol
jns
je
ins
arpl
ror
dec
mov
loop
mov
xor
mov
inc
dec
jae
idiv
pop
lea
xchg
inc
(bad)
push
and
or
out
imul
rcr
(bad)
pop
sub
ds
mov
mov
mov
cmps
add
mov
clc
adc
add
(bad)
mov
inc
cmc
add
mov
imul
call
lds
inc
(bad)
fdiv
mov
sbb
dec
int
add
fcmovnb
add
sub
add
inc
sub
add
(bad)
je
dec
pop
add
dec
sub
rol
lods
pop
out
shl
pop
sbb
pop
outs
lahf
or
mov
int
sbb
retf
add
ret
add
push
test
xor
in
cmp
ins
outs
inc
adc
sub
xor
inc
cwde
inc
(bad)
push
mov
aaa
sub
daa
mov
xchg
arpl
push
les
jmp
dec
cmps
jo
jl
in
int
stos
dec
mov
popa
or
and
push
fistp
mov
bswap
enter
in
aaa
inc
jl
pop
iret
leave
mov
add
adc
es
dec
xor
and
dec
fld
ss
push
dec
and
push
ror
lods
push
adc
fimul
inc
ins
push
jb
aas
lea
in
(bad)
and
push
mov
add
add
sti
dec
dec
add
cmp
push
inc
ins
fs
jecxz
jg
inc
sbb
lea
sub
daa
mov
jb
aam
push
stc
or
ror
add
js
mov
xlat
push
add
push
jo
and
int
mov
imul
inc
cmps
pop
or
lods
inc
mov
dec
jne
push
mov
or
add
or
sbb
test
outs
je
out
inc
mov
add
xchg
jo
xor
push
imul
cmp
mov
mov
iret
and
icebp
cmp
dec
cmp
jae
mov
jmp
sub
mov
(bad)
push
or
add
xchg
jo
and
xor
pop
xor
mov
push
and
int3
mov
sahf
lea
sahf
push
add
jmp
pop
stos
jge
add
push
not
test
rcl
test
xchg
adc
mov
in
adc
mov
ds
pop
lock
inc
lock
dec
fiadd
mov
ror
push
add
push
sub
xor
or
mov
js
jbe
dec
mov
clc
push
or
int3
jns
cmp
pop
ror
call
out
xor
inc
hlt
or
in
mov
ss
push
or
and
loopne
sbb
test
popa
adc
fisttp
fst
aam
lods
mov
add
bound
dec
ja
mov
inc
clc
bound
xchg
sbb
cmp
adc
daa
cwde
ret
in
cmp
or
cwde
das
stc
jne
cmp
jle
or
cmp
iret
and
pop
aas
scas
inc
add
adc
popf
adc
adc
and
jg
adc
loopne
mov
jne
dec
cmps
int
inc
pop
scas
fwait
clc
cmc
dec
jmp
arpl
cmp
fwait
(bad)
dec
or
or
dec
sbb
iret
nop
sub
aad
rcl
pop
sub
push
rol
mov
shl
jp
xor
push
or
test
sub
dec
pop
jecxz
push
adc
mov
push
mov
jge
adc
sbb
les
xor
shl
es
mov
in
clc
inc
inc
jge
push
into
dec
(bad)
fimul
inc
adc
lock
rcl
sar
mov
dec
xor
call
outs
inc
add
push
sub
fidivr
movs
out
js
ret
jmp
out
je
mov
mov
push
and
mov
or
mov
outs
cwde
push
shl
iret
pop
pop
dec
dec
adc
cmp
cmp
mov
sbb
mov
mov
icebp
xor
cmp
jl
mov
xor
sub
mov
push
cmp
dec
test
bound
popa
stos
movs
sbb
inc
int3
and
(bad)
js
pop
sbb
or
mov
call
scas
add
sbb
inc
ret
popa
sbb
add
mov
add
adc
add
adc
and
int3
cmp
and
adc
mov
add
add
sbb
fdivrp
pop
test
xchg
add
xor
jns
scas
and
push
rcr
les
dec
jmp
test
arpl
stc
mov
mov
add
jl
cmp
push
stos
mov
push
rcl
jns
es
push
add
and
jns
iret
push
add
add
cmp
in
add
inc
add
inc
dec
loope
mov
fisttp
cmp
inc
rcl
dec
add
sar
adc
add
sbb
and
mov
push
mov
test
jb
inc
xor
pushf
mov
cmp
lods
mov
in
push
(bad)
cmp
dec
jne
(bad)
push
jnp
add
and
das
push
push
sub
cs
and
or
js
loop
mov
into
movs
add
sub
dec
div
shr
mov
mov
and
add
push
push
push
push
addr16
inc
inc
add
inc
mov
pusha
cs
and
xor
shl
mov
sbb
push
je
(bad)
or
fist
sub
mov
int
fild
adc
add
add
inc
adc
stos
add
addr16
sbb
ins
xchg
push
push
test
gs
jge
jne
cmp
push
aas
sbb
pop
adc
aaa
inc
push
retf
or
scas
inc
mov
mov
mov
and
ror
add
shl
mov
scas
inc
jmp
dec
cli
sub
je
xchg
push
andps
inc
push
xor
dec
sub
cwde
xchg
movs
xor
leave
lea
sahf
je
movaps
leave
jnp
and
add
test
adc
add
push
scas
arpl
add
shr
iret
or
loopne
outs
add
add
aaa
dec
jnp
and
popa
ins
xchg
dec
add
dec
inc
lock
gs
jo
xchg
addr16
(bad)
ror
(bad)
xor
ins
popa
jb
jae
mov
add
dec
pop
imul
mov
arpl
jnp
sub
test
or
pop
shr
pop
imul
inc
jne
add
cs
jo
arpl
mov
movs
add
inc
pusha
scas
call
outs
dec
gs
cs
and
aas
push
imul
mov
xor
lods
idiv
xchg
add
lock
arpl
sbb
dec
and
xor
popa
dec
scas
mov
sbb
and
in
sti
shl
xchg
mov
adc
inc
jmp
push
pop
dec
or
mov
ins
ss
push
lock
outs
das
or
into
loop
pop
inc
push
jns
push
je
dec
xchg
bound
mov
fistp
pusha
mov
jl
movs
lods
out
and
push
xor
add
jae
push
lock
mov
or
clc
les
jl
push
push
popf
add
sub
outs
or
add
sahf
test
leave
iret
push
call
add
cmp
aaa
and
mov
push
popa
xchg
leave
shr
fwait
sti
push
push
ins
test
xor
inc
lea
mov
sub
push
jne
xor
inc
(bad)
push
cmp
iret
and
mov
mov
and
outs
packsswb
je
lea
mov
ret
jnp
dec
daa
cmp
xchg
push
add
mov
fptan
pop
adc
dec
and
(bad)
xor
rcr
enter
inc
mov
aam
in
test
adc
and
push
nop
or
(bad)
adc
add
xchg
mov
mov
cmp
jne
dec
mov
test
push
dec
and
jle
daa
and
or
inc
fiadd
mov
xor
iret
fstp
fcom
xor
push
hlt
cmc
inc
rol
push
xchg
aam
push
or
mov
sti
lea
add
inc
sub
pop
icebp
ret
sahf
dec
jne
pushf
or
in
jae
pop
int3
and
movs
cmc
scas
lds
call
inc
mov
pop
test
dec
push
lods
pop
push
or
test
push
or
pop
inc
or
arpl
imul
mov
pop
and
mov
add
ds
xchg
push
push
pop
dec
sbb
(bad)
inc
(bad)
pop
jb
nop
add
pop
out
jb
jns
add
add
inc
inc
pop
add
xor
inc
mov
movs
rcr
push
add
mov
jp
inc
xchg
test
add
dec
jbe
in
mov
not
sub
push
cmp
int
cld
jns
mov
xor
js
adc
jo
inc
hlt
cld
add
add
cwde
outs
mov
add
push
mov
or
imul
cld
jbe
jmp
jle
les
and
test
fdiv
rcr
fs
scas
push
test
pop
jg
pop
dec
mov
sbb
xchg
jle
inc
scas
in
push
in
add
mov
sahf
retf
les
scas
lock
add
fs
lock
cmp
scas
inc
pop
mov
xchg
int3
mov
mov
fcomp
mov
scas
in
call
jmp
xor
or
movs
jbe
test
add
jbe
inc
mov
xor
loopne
inc
(bad)
and
inc
or
sbb
xor
mov
and
and
adc
add
or
cdq
pusha
aas
sbb
pop
and
mov
dec
cmp
add
add
add
stos
test
pop
jl
xchg
mov
dec
jl
mov
xor
push
xor
and
hlt
(bad)
sub
inc
or
jmp
sub
ds
mov
inc
add
jo
sbb
in
adc
add
add
retf
ja
stc
mov
add
xor
ror
ss
nop
push
push
xlat
sbb
add
je
sti
mov
push
or
mov
xor
cmp
(bad)
xor
or
push
daa
sub
mov
ins
cmp
in
or
jle
fstp
pop
(bad)
adc
or
mov
xor
jb
test
xchg
xchg
or
test
je
mov
lock
or
xchg
retf
push
out
pusha
in
aam
or
call
js
out
inc
jmp
inc
pop
mov
jg
push
and
add
rcr
in
lds
call
into
push
push
push
jnp
dec
cmp
gs
dec
js
and
jae
adc
fwait
mov
dec
adc
movs
mul
adc
fwait
mov
ss
adc
or
gs
inc
pop
fstp
push
jnp
daa
dec
xchg
sbb
pop
and
inc
(bad)
pusha
mov
push
bound
gs
add
(bad)
call
shl
cld
dec
and
in
mov
in
sbb
in
push
push
out
pop
add
inc
jg
clc
mov
lock
add
inc
arpl
xchg
mov
xor
adc
add
and
shl
cmp
sub
and
xchg
and
shr
xchg
rol
test
sbb
mov
test
fdiv
jns
inc
rol
rcl
sbb
sbb
mov
dec
add
test
mov
mov
adc
mov
adc
lea
xchg
inc
rol
ror
loope
sbb
mov
jmp
dec
sbb
push
movs
(bad)
cmps
dec
or
sub
add
cld
push
aam
fmul
test
xchg
movs
push
pop
test
mov
lock
xor
jecxz
loopne
dec
and
sbb
mov
test
mov
push
dec
pop
loopne
popf
and
mov
xor
push
cmc
xor
and
icebp
ja
ds
mov
cwde
mov
cmp
mov
sub
mov
inc
jae
push
sub
lods
mov
cmps
das
inc
ins
inc
sahf
mov
push
gs
push
(bad)
adc
mov
push
mov
sub
or
xchg
dec
jge
(bad)
addr16
mov
scas
dec
loopne
add
lods
loopne
xchg
js
jo
cmp
int
pop
add
call
add
push
sbb
cmp
arpl
aam
cmp
es
aad
xor
fcomp
xchg
stos
sub
daa
cmc
mov
mov
xor
push
xchg
shl
movs
cmps
sahf
loope
jnp
popf
xor
add
push
mov
lock
mov
xchg
fmul
mov
fiadd
mov
(bad)
ja
mov
jne
jp
inc
xor
int
iret
dec
(bad)
jecxz
xor
imul
pop
sub
xchg
xor
data16
jne
pop
adc
sbb
push
cmp
adc
sub
push
push
nop
call
lock
je
lea
pusha
call
clc
mov
add
(bad)
cmp
sbb
nop
pop
ror
add
(bad)
test
xor
outs
push
in
and
and
das
movs
push
mov
loopne
dec
sti
and
stos
jmp
sub
movs
xor
xchg
popa
mov
(bad)
fwait
and
nop
scas
inc
xlat
das
xor
xchg
xor
inc
push
pushf
arpl
pop
sub
ds
mov
pop
sub
xchg
xchg
nop
cs
imul
and
dec
push
mov
xchg
enter
je
test
adc
or
sub
add
(bad)
add
call
push
pop
call
xchg
jo
ja
rcr
and
mov
aad
sbb
sub
or
imul
aas
cmp
pop
sub
mov
sub
mov
or
push
xchg
sbb
(bad)
and
test
fcomp
(bad)
sub
mov
jg
test
push
mov
call
sbb
mov
cmps
enter
nop
dec
repz
in
cld
sub
dec
icebp
pop
mov
rol
or
pop
outs
xchg
jge
scas
jge
cmp
push
clc
lods
inc
xchg
ds
cld
rol
push
lods
in
jb
or
popa
lea
mov
jb
xchg
cld
les
sbb
and
add
mov
pop
repnz
mov
cmp
mov
mov
scas
mov
adc
fadd
mov
js
scas
outs
aam
push
bound
hlt
jno
mov
jns
and
jmp
shl
and
lea
sbb
aaa
mov
test
rcr
jo
shr
xchg
add
inc
jne
test
hlt
add
jmp
loope
cmp
jne
add
jmp
xchg
dec
test
movs
movs
fisub
and
je
jge
lahf
cwde
cwde
test
xchg
inc
mov
pop
mov
aaa
jae
pop
pop
mov
test
inc
aaa
mov
test
xor
sbb
xchg
dec
scas
xchg
xchg
nop
in
and
rcl
push
je
mov
and
aad
mov
and
dec
mov
imul
jge
and
je
loope
test
xor
out
xchg
xor
test
ret
or
inc
and
lea
test
enter
push
xor
mov
dec
pop
pop
or
push
jne
mov
lea
xor
lods
push
cmp
cs
pop
imul
ss
push
add
sbb
dec
enter
jmp
push
fidiv
inc
das
cmps
push
mov
push
pop
inc
adc
xchg
mov
sub
jnp
(bad)
and
popa
and
cmc
ret
adc
jno
pop
aas
adc
into
outs
ja
adc
mov
sbb
dec
inc
mov
jb
je
shl
add
mov
mov
pop
mov
or
xor
inc
pop
inc
pop
data16
(bad)
aam
or
ret
mov
adc
mov
add
sub
add
je
retf
lds
mov
dec
dec
out
ins
shr
jl
and
jne
add
xchg
adc
loopne
(bad)
lahf
call
mov
adc
bound
outs
hlt
push
adc
je
retf
cmp
fadd
ds
fs
cmp
jg
fisubr
enter
inc
clc
fsubr
in
adc
or
fmul
mov
push
les
push
and
fild
test
adc
fwait
lods
sahf
inc
aam
fistp
fstp
fwait
dec
adc
(bad)
jle
mov
dec
cdq
sub
dec
bound
loope
ja
adc
sub
scas
dec
jl
dec
loopne
call
(bad)
mov
fistp
mov
jns
addr16
mov
sbb
jmp
mov
test
and
out
in
mov
(bad)
fwait
(bad)
push
lea
push
adc
(bad)
jecxz
or
mov
jp
movs
loopne
dec
adc
push
(bad)
push
test
add
push
int3
add
pop
shl
shl
int3
sub
fwait
sbb
sbb
clc
ret
shr
in
mov
clc
adc
call
xchg
test
jne
imul
push
sahf
mov
jbe
mov
inc
add
jbe
fnstsw
sahf
jae
fldenv
adc
enter
inc
neg
inc
out
inc
mov
pop
inc
setns
pop
push
dec
sub
add
sub
jns
or
dec
xor
mov
mov
aam
fsub
push
rcr
or
es
(bad)
shl
shl
dec
(bad)
cmc
jmp
jmp
sub
add
adc
ds
ret
dec
cmp
ror
xor
(bad)
imul
xor
fisttp
push
scas
add
add
jb
jp
jp
cmp
dec
cs
sub
(bad)
je
aas
pop
jnp
lock
ins
loopne
lock
adc
rcl
sbb
or
aaa
loope
xor
aaa
xchg
and
aaa
sbb
jg
xlat
into
mov
or
in
and
jnp
cli
push
push
mov
inc
jno
inc
push
ror
adc
mov
xlat
fsubr
xor
mov
sub
outs
mov
sbb
sbb
test
je
jne
jp
push
inc
dec
data16
or
and
lea
adc
pop
imul
popa
(bad)
and
aaa
and
enter
retf
and
adc
int3
push
or
adc
retf
adc
inc
arpl
add
idiv
sbb
mov
das
sbb
loop
jae
pushf
mov
pop
add
cmp
inc
pushf
push
sub
or
add
inc
adc
mov
jno
xor
dec
inc
push
mov
or
mov
cmps
in
je
jmp
jns
fistp
push
push
sbb
add
mov
sbb
pop
pop
bnd
bound
dec
enter
mov
shr
push
mov
fdivr
inc
adc
inc
popf
sahf
mov
inc
into
push
cmp
nop
out
sbb
dec
push
jmp
fs
xor
xor
mov
test
enter
shl
cmp
adc
cbw
push
call
popa
mov
mov
cmps
movs
sub
call
sbb
mov
in
jp
jmp
gs
add
add
(bad)
es
mov
dec
push
and
or
ret
sbb
aaa
pop
pusha
fcomp
cs
add
or
scas
pop
xlat
jecxz
push
scas
outs
ss
cdq
adc
dec
out
fmul
rol
xchg
xchg
and
mov
cmp
pusha
mov
jb
gs
add
inc
imul
mov
out
dec
push
fisubr
sub
jmp
repnz
push
pop
inc
sbb
imul
add
dec
add
add
or
outs
pop
jge
pop
dec
gs
outs
jne
add
mov
rol
sub
or
cmp
outs
add
inc
loop
enter
fwait
mov
pushf
and
sbb
dec
shl
mov
fsub
sbb
pop
and
mov
or
mov
in
ret
push
cmp
in
lea
(bad)
cmc
xchg
push
lea
xor
int
aad
mov
test
xchg
iret
(bad)
mov
push
sub
jo
test
or
sbb
fsub
or
daa
pop
sub
cmp
in
stos
fxch
pop
sahf
adc
mov
loope
test
mov
cld
imul
nop
cdq
or
and
mov
sbb
aas
mov
mov
mov
xchg
movs
xchg
push
xchg
imul
sub
dec
aaa
je
push
push
rcl
inc
sbb
sbb
dec
cmps
je
push
outs
rcl
jmp
imul
and
push
dec
or
das
xchg
push
test
cmps
pusha
push
xchg
jo
inc
xchg
jnp
inc
jge
sbb
ss
inc
adc
sub
xchg
adc
aam
aam
adc
mov
test
cmovae
sbb
rol
add
(bad)
sub
(bad)
frstor
xchg
pop
pop
xor
sub
add
mov
mov
add
movs
adc
pop
es
jnp
add
add
adc
and
inc
daa
add
ss
cmp
inc
mov
lock
add
out
sar
and
cmove
mov
js
dec
sub
inc
inc
push
fs
arpl
xor
sti
imul
sbb
imul
jne
aam
and
jno
dec
inc
inc
and
dec
je
add
inc
in
add
test
pushf
push
hlt
iret
hlt
inc
ins
xchg
mov
mov
fcmove
clc
jnp
popa
repnz
xchg
add
mov
dec
sub
sti
mov
sbb
inc
adc
pop
rol
sbb
(bad)
mov
call
cmp
push
inc
xchg
mov
mov
sub
xor
or
dec
cs
sbb
in
jmp
je
mov
cwde
mov
cmp
mov
add
adc
sbb
in
mov
xor
adc
mov
js
cmp
jge
pop
mov
outs
lods
and
add
or
rol
mov
popa
add
mov
add
xchg
pop
pop
inc
loopne
cmp
jae
or
cmp
dec
push
jb
and
and
loope
add
and
lods
or
dec
sbb
inc
mov
push
dec
mov
pop
dec
dec
repz
ins
xor
pop
fist
pop
cs
fisttp
outs
leave
dec
mov
jl
and
je
sahf
dec
or
repnz
xchg
lods
mov
pop
mov
loope
or
enter
rcr
mov
(bad)
fisubr
xor
adc
sbb
and
jno
cmp
xchg
sub
in
jbe
xor
cdq
inc
cs
xor
enter
xor
xchg
sub
and
and
and
sbb
mov
adc
mov
mov
push
add
push
xchg
in
sbb
xor
or
out
push
jno
mov
pop
sub
mov
mov
and
mov
xchg
mov
push
add
and
sti
xchg
pop
mov
mov
loopne
pop
sbb
ret
sub
popa
sbb
ja
lea
sub
sub
test
xchg
jo
pop
test
fwait
js
mov
push
mov
cmp
je
mov
scas
sub
int3
in
jns
push
ror
aaa
pop
lea
mov
movs
cmp
sub
sub
sub
push
imul
cmp
pop
hlt
shr
jne
sbb
inc
ins
test
sub
add
(bad)
pop
nop
mov
jae
push
daa
movs
loop
dec
jno
rcr
jne
fnstcw
pop
mov
fadd
add
inc
loope
jmp
jb
push
jmp
fsub
push
data16
add
les
ins
aaa
add
mov
push
imul
shr
or
jno
jl
inc
mov
cld
(bad)
ja
lea
imul
clc
shr
ds
and
int
inc
inc
sub
loop
idiv
fmul
shr
add
scas
xor
test
cld
pop
sti
cwde
cmp
dec
test
jl
inc
mov
sbb
hlt
xor
push
push
ror
imul
lock
shr
adc
inc
cmp
out
mov
inc
sahf
mov
pusha
gs
jbe
loope
jmp
xchg
das
es
arpl
cmp
shr
xchg
sbb
pusha
fmul
aam
ficomp
jge
inc
cmp
add
addr16
sbb
das
enter
and
jne
(bad)
pop
test
xlat
inc
js
(bad)
mov
in
or
ins
retf
sbb
popa
loope
xor
xlat
push
popf
add
and
out
cmp
jbe
popf
std
lea
inc
lods
jge
add
(bad)
push
rcl
lock
call
fst
test
test
in
jge
(bad)
adc
mov
loop
mov
rol
jo
cdq
mov
imul
ror
mov
jmp
xor
movs
sbb
mov
push
add
sub
rcl
mov
or
rcr
inc
sbb
adc
push
add
sub
push
xlat
xor
das
add
add
(bad)
push
sbb
sahf
mov
out
pushf
rol
push
outs
push
xlat
adc
adc
iret
adc
mov
fild
pop
push
fstp
pop
add
or
add
xchg
lods
rol
pop
xchg
iret
daa
icebp
mov
inc
aaa
jo
adc
dec
fwait
pop
ins
adc
xor
push
daa
xchg
jno
test
das
arpl
and
je
pusha
pop
push
ins
jbe
or
inc
push
nop
loop
or
cmp
adc
loop
pop
(bad)
imul
shl
aas
xor
fdiv
xchg
sub
repz
add
fdivr
lods
addr16
add
adc
push
or
push
dec
adc
adc
jbe
xchg
adc
push
mov
dec
ins
enter
push
les
pop
and
push
jmp
push
and
add
cmp
inc
add
pop
out
sar
push
call
mov
pusha
pusha
outs
or
cmp
or
and
lods
aad
popf
das
arpl
cmp
push
sub
aas
(bad)
hlt
aam
push
cmp
jae
or
retf
rcl
cmp
jp
pop
add
ins
jae
push
sub
pop
in
pushf
adc
call
add
push
fmul
pusha
pop
adc
in
push
es
dec
call
jne
sub
call
sub
mov
push
int3
dec
pusha
xchg
ret
cmp
clc
outs
pusha
push
adc
add
loope
jbe
stos
mov
push
adc
jle
mov
push
out
out
or
add
jmp
jge
mov
shl
dec
add
(bad)
mov
cs
xchg
loop
(bad)
push
or
sub
int3
push
xlat
cmp
es
ins
xchg
push
mov
or
es
push
call
pop
and
xlat
dec
pop
dec
scas
pop
and
push
pop
add
shl
pop
pop
dec
mov
mov
cmp
jne
push
adc
adc
mov
push
adc
jp
mov
and
imul
and
fwait
mov
add
mov
test
mov
popf
or
js
lods
push
push
push
dec
movzx
iret
inc
cmp
sbb
repz
jns
adc
inc
or
sbb
sahf
retf
and
in
sub
sub
xor
test
cmp
inc
cmps
repnz
inc
push
dec
dec
nop
add
add
inc
rcl
add
loopne
pop
test
cmp
movs
adc
xor
add
sbb
stc
adc
cdq
and
inc
(bad)
clc
jmp
in
inc
rcr
mov
stos
sub
rcl
mov
push
push
int
sub
rol
(bad)
dec
jnp
mov
repnz
add
loope
adc
or
mov
test
aam
adc
push
call
inc
or
inc
pop
add
adc
sbb
push
call
call
jns
cmc
xchg
dec
xchg
ror
popf
movs
xchg
adc
or
(bad)
xlat
and
in
cld
shr
lock
cmp
add
sub
xchg
les
xor
aam
inc
icebp
call
add
and
sbb
and
mov
sbb
(bad)
sbb
ins
cmp
adc
retf
test
ficom
add
arpl
outs
stos
push
mov
test
or
ret
adc
inc
mov
mov
or
ins
ret
rcr
test
seta
inc
nop
pop
push
cmp
inc
and
popa
xchg
adc
mov
adc
add
or
adc
out
cmp
popf
xor
arpl
sbb
comiss
mov
fwait
cmp
push
sbb
jecxz
pushf
mov
aam
pusha
mov
rcl
adc
movs
in
pushf
cmp
pop
mov
pop
xchg
ret
dec
add
loopne
add
(bad)
jb
aaa
pop
sbb
les
mov
jecxz
push
test
inc
shr
push
and
or
pop
fwait
inc
repz
scas
add
xor
jo
sahf
iret
dec
inc
je
adc
add
jo
add
cs
mov
and
sbb
jge
sbb
sbb
pop
xor
jnp
rcl
xchg
jo
mov
mov
loop
imul
inc
xchg
or
or
lds
mov
aaa
hlt
push
xchg
lods
leave
push
popa
xchg
mov
loopne
test
imul
in
push
mov
in
imul
inc
ds
and
loopne
shl
push
sub
test
cmp
push
je
inc
aam
jmp
shl
fistp
mov
cmp
sbb
mov
and
mov
jg
(bad)
push
mov
pop
sub
push
ss
enter
leave
enter
mov
nop
retf
movs
(bad)
les
cmp
leave
add
and
or
inc
add
pop
push
xchg
add
nop
mov
mov
or
ja
and
jb
or
mov
sbb
dec
in
sbb
jb
and
sbb
and
mov
cs
add
mov
mov
nop
sbb
outs
call
aad
mov
push
mov
loopne
aad
inc
xor
or
inc
xor
cmp
pop
ret
push
(bad)
pop
push
loopne
push
inc
ss
cmp
inc
and
or
jge
pop
inc
xor
pop
and
push
mov
dec
mov
push
loope
or
add
pop
loopne
add
outs
cs
sub
adc
call
add
sti
cmps
imul
mov
push
or
aas
adc
test
xchg
pop
fsubr
mov
inc
xor
ins
shl
xchg
scas
scas
push
mov
dec
pop
push
add
xchg
sbb
dec
or
mov
or
add
pop
int
mov
arpl
jns
mov
loopne
addr16
push
push
mov
(bad)
pop
(bad)
inc
mov
pop
dec
xchg
or
loopne
pop
ja
add
nop
mov
add
push
imul
mov
mov
cmovg
push
mov
pop
lds
jg
inc
mov
pop
jmp
pusha
psraw
dec
adc
(bad)
test
movs
outs
mov
jge
and
retf
jge
ja
js
cmps
(bad)
pop
cmps
add
mov
or
mov
cld
jp
inc
mov
outs
leave
mov
mov
mov
sub
sub
pop
inc
rcl
push
push
outs
pop
scas
movs
dec
outs
add
mov
xlat
pushf
xchg
add
push
cmps
inc
mov
xchg
daa
cmps
cs
xor
sbb
jo
mov
sbb
push
sbb
push
daa
daa
iret
mov
pop
push
pop
sbb
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
push
pop
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
push
pop
or
daa
daa
daa
daa
or
or
xchg
daa
daa
daa
push
(bad)
cld
bound
cmps
add
adc
gs
sub
push
sub
jmp
push
sbb
mov
jl
lods
mov
push
or
test
in
and
mov
rol
push
add
sub
or
outs
cmp
mov
sub
in
daa
test
add
loopne
fdivr
or
mov
mov
xchg
fdivr
push
cdq
aam
sar
retf
int3
mov
adc
fmul
mov
xor
adc
mov
leave
cmp
mov
jns
or
push
bswap
inc
popa
or
les
or
mov
mov
adc
cwde
test
mov
jge
dec
sti
mov
mov
mov
mov
xchg
sar
adc
imul
cmp
das
movs
mov
mov
mov
mov
bound
int3
pop
adc
das
rcr
pop
adc
pop
adc
imul
lock
sbb
pop
dec
mov
jle
mov
mov
jne
mov
cld
daa
js
mov
call
das
ins
mov
xchg
adc
mov
imul
sbb
or
fcomp
(bad)
and
push
aam
mov
aam
imul
dec
add
mov
push
add
push
or
mov
in
aaa
dec
or
push
mov
push
dec
cdq
push
jo
repz
fadd
xor
mov
push
sub
enter
cmps
test
movs
sub
fnstsw
ins
and
xchg
data16
push
cmps
inc
sub
mov
dec
push
cmp
push
stos
push
or
push
sar
push
(bad)
sti
pop
dec
(bad)
mov
lds
mov
rol
mov
dec
push
cmp
pushf
mov
enter
fcmovnb
rcl
push
xor
push
pop
push
(bad)
rcl
clc
ins
mov
adc
mov
push
xchg
(bad)
test
push
shr
and
(bad)
push
ret
push
adc
call
jns
ins
push
js
in
mov
sahf
push
and
ins
ss
lahf
cmp
pushf
int3
hlt
mov
xchg
push
sahf
ds
add
nop
add
or
mov
push
xchg
ins
pop
dec
arpl
addr16
and
adc
and
push
imul
jne
je
cdq
sub
or
mov
mov
outs
je
outs
ins
movs
and
or
jle
jnp
sbb
popa
arpl
dec
and
js
lods
repnz
in
ret
ins
addr16
push
jb
push
mov
adc
dec
imul
gs
retf
mov
lea
es
dec
inc
outs
pop
mov
add
push
xor
mov
outs
pop
in
push
add
das
adc
imul
xor
inc
mov
imul
ins
int3
sub
rcl
iret
inc
aaa
fadd
fsubr
adc
ret
or
ret
xor
adc
mov
mov
mov
sbb
cwde
ror
sub
or
xchg
pop
xor
pushf
add
ins
cmps
adc
aaa
loopne
fld
adc
push
arpl
add
jmp
test
sub
mov
mov
mov
push
add
push
outs
clc
js
sub
out
pop
inc
dec
jmp
in
cs
out
add
mov
dec
inc
inc
fld
test
fbld
jp
add
mov
pop
pop
test
and
mov
sub
mov
xor
mov
adc
xor
inc
inc
fild
sub
mov
add
inc
inc
pop
cmp
dec
inc
inc
or
jne
in
in
scas
int3
retf
jnp
rol
out
in
aam
mov
mov
cdq
aas
cmps
inc
inc
fld
mov
xor
adc
ja
add
mov
jp
adc
inc
lock
ficom
and
popa
jecxz
mov
clc
out
jmp
gs
and
imul
movs
mov
rol
sub
and
push
jo
inc
inc
call
push
sbb
loope
sub
sbb
imul
dec
mov
or
sub
lahf
push
xchg
sub
das
add
pop
dec
outs
mov
movs
mov
mov
sbb
or
adc
adc
imul
push
push
pop
mov
jo
push
sbb
mov
adc
adc
cli
xchg
mov
mov
adc
nop
pop
sahf
jecxz
mov
leave
leave
leave
push
clc
pop
mov
push
xchg
gs
jo
js
dec
mov
ins
pop
dec
sub
mov
nop
sbb
dec
pop
push
cmp
sbb
push
push
push
pop
mov
and
push
inc
mov
inc
xchg
jg
push
adc
out
add
cmp
mov
inc
fld
mov
jno
pop
or
jge
mov
inc
jp
inc
arpl
and
sbb
mov
mov
push
js
ja
fsubr
mov
push
dec
in
sbb
iret
add
xor
push
pop
jmp
test
daa
xlat
push
inc
clc
or
mov
lds
jmp
outs
lods
mov
dec
popa
and
or
out
ret
hlt
sub
mov
sbb
xor
cmc
add
mov
inc
sbb
rol
out
jg
lock
xchg
xchg
push
add
push
sbb
lods
inc
or
inc
sbb
outs
add
add
jbe
bound
xor
xchg
adc
std
xlat
add
stos
adc
and
add
add
add
(bad)
scas
push
aas
dec
add
jmp
les
pop
xchg
dec
jnp
adc
test
cmps
sbb
scas
call
push
repnz
mov
loopne
and
lock
inc
ret
jle
ret
les
sub
daa
pop
scas
ret
inc
rol
inc
shr
mov
add
mov
xor
rol
fisubr
add
dec
or
sbb
sbb
mov
lock
inc
xlat
test
push
mov
popa
add
inc
pop
or
push
clc
in
mov
jnp
(bad)
fsubr
inc
adc
inc
mov
dec
jmp
inc
sub
jne
das
and
add
mov
frndint
lds
sti
inc
movs
mov
adc
fmul
lahf
jnp
lock
sbb
mov
or
dec
stos
dec
enter
push
sar
mov
fdivr
call
mov
in
pop
adc
in
stc
fcomp
jnp
loopne
fdivr
nop
add
rcl
cs
pop
ret
stos
loopne
pop
sub
xchg
icebp
push
nop
in
dec
nop
jp
mov
test
pop
mov
and
cmps
sub
nop
mov
stc
push
cs
int3
adc
push
pop
push
jb
cwde
and
fild
movs
push
inc
inc
inc
pop
push
jne
mov
xchg
adc
xor
daa
xor
jle
add
add
push
dec
inc
jmp
dec
es
neg
push
cmp
dec
jbe
and
mov
mov
sub
das
xchg
add
jle
and
push
xor
xchg
or
xor
xor
push
mov
xor
push
shl
(bad)
out
mov
cwde
pop
scas
stos
ja
lahf
pop
push
sbb
inc
(bad)
int
fidiv
adc
push
call
and
push
xor
dec
dec
in
fidiv
int
ja
pop
inc
ss
imul
mov
jp
out
mov
cmp
cmp
inc
jb
fcomp
std
mov
jecxz
loope
and
add
push
sbb
enter
lock
test
sub
sbb
xor
sar
mov
adc
aaa
adc
xor
xor
cmp
cmp
out
sbb
scas
xor
rol
xchg
cmps
outs
sbb
aas
jae
aas
dec
inc
pop
pusha
imul
cmp
jbe
pop
jb
or
sbb
add
mov
out
stos
add
sub
cmps
cmp
cmp
mov
ja
imul
xor
cs
push
mov
aaa
scas
cmps
push
add
push
adc
out
mov
push
outs
adc
mov
add
fdiv
add
fisubr
or
inc
or
adc
or
push
or
mov
ret
add
dec
adc
cs
dec
imul
mov
lods
pop
dec
xor
clc
imul
add
pop
gs
xor
fld
std
in
fsub
sbb
fwait
cmp
jge
add
and
adc
inc
les
lock
rol
jg
adc
(bad)
jle
mov
dec
dec
call
mov
in
pop
or
loop
mov
push
shr
mov
and
dec
out
loopne
loope
sub
sub
jl
int3
mov
movs
add
sub
mov
push
adc
pop
push
add
cmp
pop
xor
xor
sub
and
jp
sub
cwde
movs
inc
pusha
lods
inc
inc
add
loopne
mov
push
mov
adc
mov
cmp
imul
dec
fdivr
add
rcr
shr
in
or
add
inc
add
add
cmp
inc
add
js
dec
add
add
dec
sysexit
mov
push
int3
or
std
call
sbb
dec
cmp
adc
or
cmp
push
mov
mov
popf
push
fadd
aam
mov
mov
push
loop
call
and
fisttp
inc
mov
dec
cdq
in
ret
push
js
or
inc
inc
sub
mov
sbb
les
jge
mov
mov
or
outs
adc
and
push
int3
jnp
and
cmp
add
pop
mov
mov
or
xor
scas
adc
pop
ds
repnz
push
xor
or
(bad)
dec
cmps
add
ficomp
xor
and
dec
or
dec
rcr
das
mov
pop
cld
cwde
inc
dec
jne
xchg
mov
mov
aaa
fnstenv
mov
push
cmp
enter
daa
and
out
add
and
fidivr
mov
cmp
loopne
pop
les
push
jle
lahf
ja
push
scas
das
les
dec
xchg
adc
xchg
jg
sbb
xor
add
sbb
inc
push
mov
mov
inc
cmove
add
or
mov
pop
inc
push
push
jb
sub
dec
cmp
(bad)
stc
or
mov
lods
or
jb
jae
outs
mov
mov
loop
or
movs
jne
xlat
imul
ins
mov
fsub
mov
aas
pop
loope
cld
sbb
or
xor
rol
add
(bad)
adc
popa
xchg
fadd
pop
add
push
enter
push
sbb
lods
int3
das
xor
xchg
aas
or
loope
add
rcr
add
adc
fsubr
adc
mov
xchg
sub
test
mov
add
or
add
adc
shr
test
add
mov
popf
cmp
movs
push
addr16
bnd
sub
sub
sbb
jg
sub
mov
mov
adc
or
movs
ss
and
pop
inc
push
outs
div
out
pop
mov
outs
arpl
daa
or
test
enter
inc
or
mov
jo
mov
push
es
popa
jb
daa
ror
and
jl
adc
xor
dec
loopne
ins
ins
imul
stc
mov
push
jo
adc
dec
pop
imul
and
imul
jp
push
outs
or
mov
push
shl
pop
inc
mov
outs
adc
add
outs
or
inc
mov
add
mov
das
sbb
xor
pop
pop
test
mov
add
lods
jge
mov
mov
fcom
cmp
mov
fnclex
cmp
xor
stc
xor
xor
ins
or
std
ss
ins
aaa
mov
inc
out
adc
pop
sbb
and
mov
les
adc
push
xchg
ror
inc
inc
sub
dec
ins
adc
clc
or
cs
or
inc
imul
cmp
sub
xor
adc
xor
and
adc
inc
movs
and
inc
sbb
add
adc
or
(bad)
pop
daa
inc
jns
jae
or
xor
push
outs
jb
fist
adc
or
mov
add
div
addr16
stos
or
adc
sbb
push
or
mov
and
xor
cld
adc
mov
or
push
inc
jns
cmp
add
popa
ins
adc
push
sbb
add
or
mov
push
add
xchg
sub
in
add
xor
cwde
and
push
or
mov
rcl
sub
and
mov
outs
js
icebp
inc
aaa
icebp
mov
adc
dec
sbb
xchg
fsubp
sbb
sbb
das
xor
cmp
lods
mov
adc
push
add
sbb
cmp
cmps
jge
ret
js
sbb
ins
xor
sub
arpl
lock
xchg
repnz
adc
psubd
sbb
xor
aaa
shl
cmp
cmp
dec
inc
sahf
pushf
fcom
ret
xor
cmp
mov
inc
ins
pop
sub
punpckhdq
sbb
gs
mov
outs
repz
mov
lods
mov
stos
pop
das
mov
pop
call
jl
cvttps2pi
or
aad
dec
rcl
sub
int
cmp
xor
rol
jno
rcl
ins
jne
ret
in
add
retf
add
pop
inc
jno
popf
xor
pop
arpl
and
lods
stos
mov
movs
add
push
and
stos
leave
or
jne
mov
push
loop
or
pop
and
or
mov
mov
add
and
leave
add
inc
test
sub
je
lods
push
inc
mov
jns
add
pusha
test
dec
jmp
and
int
cmp
xchg
adc
xchg
add
clc
clc
movs
dec
dec
push
push
and
xchg
ins
in
data16
sub
ins
stc
outs
rol
fld
xchg
add
loop
inc
mov
inc
xor
sbb
mov
inc
add
pusha
and
mov
xchg
and
mov
mov
es
test
or
inc
js
outs
jmp
ins
and
pop
inc
fs
je
add
dec
or
std
fbld
push
dec
dec
dec
bound
pop
popa
je
push
(bad)
in
movs
adc
mov
test
loope
out
inc
add
pop
add
ja
pop
push
das
or
outs
inc
add
iret
cmp
and
ss
cwde
mov
sbb
sbb
sbb
aaa
dec
jmp
pop
je
or
rcr
add
or
xchg
add
mov
cmp
add
adc
mov
adc
inc
daa
and
xchg
adc
mov
sar
or
inc
ds
jnp
adc
(bad)
iret
cmp
add
mov
cmp
cmp
or
out
or
inc
push
pop
inc
adc
jnp
pop
pop
das
inc
or
sub
sbb
daa
and
cmp
adc
js
imul
dec
sbb
out
cs
xchg
push
pop
and
add
add
mov
popa
out
inc
mov
ret
mov
lock
cmp
xchg
fiadd
test
add
ins
xchg
lock
xchg
inc
push
out
sub
push
sbb
jg
stos
ret
xor
inc
push
pop
inc
sti
xor
inc
push
or
xchg
xor
fcom
sub
pop
arpl
daa
out
sbb
xor
mov
dec
icebp
jl
icebp
ds
cs
icebp
and
cld
or
add
gs
push
nop
retf
repz
or
gs
pop
xchg
or
imul
xor
aaa
push
push
ret
pop
nop
xchg
pop
dec
test
adc
mov
fnstenv
sbb
in
lock
(bad)
mov
pop
mov
add
arpl
push
les
test
or
lds
and
cmps
mov
fadd
nop
dec
rol
xchg
push
add
js
rol
fsub
(bad)
or
imul
(bad)
xchg
aad
adc
aas
daa
(bad)
and
mov
repnz
and
mov
pop
push
adc
lock
aas
lods
fdivr
and
lods
push
mov
push
mov
mov
inc
ret
inc
sbb
ret
push
shr
imul
fdivr
jbe
inc
sub
adc
cmp
adc
xor
sub
sbb
js
xchg
nop
add
dec
ins
daa
push
mov
xlat
nop
mov
test
(bad)
loopne
les
movs
or
(bad)
mov
les
(bad)
movs
sub
pop
pop
pop
pop
mov
xchg
ins
adc
out
out
add
and
lea
xchg
mov
push
jle
inc
push
movs
mov
inc
icebp
data16
add
inc
imul
xor
mov
cmp
push
fs
imul
inc
mov
mov
dec
mov
in
pop
stos
push
icebp
inc
pushf
inc
fstp
xor
cwde
sub
cwde
mov
inc
xchg
pop
loopne
push
pop
dec
mov
shr
adc
add
enter
sub
out
es
cmp
adc
or
mov
and
or
arpl
inc
xchg
call
mov
cmp
jne
pop
pusha
popf
lods
jbe
sub
in
in
xchg
push
cmp
cmps
sub
cmp
loopne
retf
loop
inc
adc
inc
jnp
into
cmc
sbb
enter
fidivr
lock
rcl
and
mov
test
push
and
in
test
mov
js
clc
or
clc
mov
fist
jmp
imul
rol
push
push
mov
mov
push
pop
cld
adc
call
and
xor
cmp
dec
inc
in
push
mov
mov
add
mov
mov
or
rcl
adc
sub
sub
call
jne
mov
sahf
mov
add
rol
pop
retf
mov
mov
dec
mov
(bad)
jo
in
lods
mov
rol
xchg
loope
ss
cmc
and
imul
sbb
mov
fdivr
mov
je
pop
or
push
cli
out
sbb
adc
jmp
fwait
mov
cwde
popa
je
mov
add
cmc
retf
sar
xchg
xor
movs
inc
outs
adc
cmp
mov
(bad)
je
inc
add
outs
or
add
or
xchg
call
lahf
pop
lahf
jo
inc
push
leave
jo
fst
add
adc
sbb
xor
pop
rcl
sar
push
(bad)
cmp
(bad)
in
adc
adc
add
sti
and
gs
jb
loopne
xchg
mov
or
das
pop
jb
pusha
pusha
adc
inc
dec
fs
enter
lods
nop
push
inc
or
iret
push
data16
cmp
(bad)
or
lea
adc
jl
adc
cmps
shr
adc
mov
add
mov
adc
je
pop
js
inc
scas
adc
and
jg
icebp
dec
pop
or
fild
adc
fld
iret
outs
sub
sbb
pop
and
jb
mov
pushf
movs
sbb
(bad)
pusha
cli
leave
and
mov
pop
add
(bad)
jo
adc
sbb
fs
mov
in
mov
ins
mov
lods
xor
cs
or
inc
es
inc
mov
int3
jmp
xchg
js
dec
in
mov
popa
jmp
dec
mov
or
mov
mov
test
dec
push
xchg
loop
repnz
inc
jmp
clc
js
leave
imul
dec
xchg
mov
mov
lods
push
add
push
adc
and
imul
adc
inc
mov
push
jo
add
sbb
movs
btr
xor
ins
in
or
and
add
lock
imul
inc
xor
jno
nop
jmp
out
call
nop
jbe
dec
js
push
push
sbb
xor
fldcw
mul
cmp
or
aaa
cmp
or
xor
scas
rol
addr16
rol
loop
or
pop
push
sahf
cmp
add
push
call
mov
aas
or
sbb
push
test
dec
jae
mov
adc
or
or
push
xchg
xchg
pusha
adc
adc
inc
lods
out
and
push
add
add
rcr
bound
mov
test
push
fisttp
das
mov
dec
mov
popa
jns
arpl
add
outs
xor
dec
cmc
push
sub
dec
sub
add
push
sti
pop
sub
xlat
pop
imul
add
and
mov
shr
les
or
(bad)
xlat
dec
ret
add
das
or
xor
clc
mov
pop
outs
stos
mov
xor
push
xor
xchg
or
out
test
cmp
pop
add
jo
bound
mov
aam
sbb
scas
and
pop
pop
pop
sub
push
cmp
addr16
inc
mov
sahf
or
push
enter
scas
and
and
ret
stos
add
jnp
mov
movs
(bad)
sbb
cmp
pop
inc
jo
dec
sub
pop
push
rsqrtps
not
push
mov
add
add
mov
hlt
mov
xor
mov
xchg
sbb
aam
icebp
xchg
adc
in
mov
pop
or
test
add
sub
ins
dec
cmc
adc
or
adc
sbb
stos
add
adc
fidivr
add
retf
repnz
pop
inc
and
inc
or
jg
push
ret
xor
jbe
cld
cmc
lahf
clc
mov
jecxz
mov
xor
in
dec
ret
inc
idiv
inc
push
pop
test
(bad)
mov
idiv
aas
test
jmp
mov
in
inc
add
dec
shl
loope
jns
push
adc
mov
xchg
or
ror
ret
dec
mov
in
test
adc
repz
mov
mov
stos
fs
packuswb
test
push
and
imul
mov
in
fs
arpl
mov
mov
push
pop
sbb
es
ins
sub
sbb
fs
cmp
jmp
js
mov
jl
loopne
cmp
ror
outs
bound
in
add
dec
test
or
sbb
pop
xor
iret
lods
cmc
lods
loopne
dec
jb
test
or
scas
cmc
mov
hlt
mov
scas
and
idiv
cmp
sub
sbb
fdiv
adc
or
fistp
cld
sub
mov
fsubr
stc
mov
add
mov
add
or
(bad)
into
add
xchg
clc
dec
mov
fiadd
adc
lock
ret
cwde
jmp
cwde
xchg
add
pushf
jmp
ds
(bad)
adc
mov
aam
out
pop
push
sub
adc
not
stos
hlt
popf
push
nop
add
mov
mov
ins
mov
cmp
mov
mov
sub
xor
and
sbb
or
xor
dec
fs
outs
js
not
pop
fistp
and
xchg
pop
inc
jl
inc
adc
mov
push
add
sar
jns
mov
pop
or
das
mov
inc
push
add
mov
cld
pushf
mov
push
shl
sub
mov
push
leave
push
rol
cmp
ins
jo
push
sbb
jo
adc
ror
inc
dec
xor
fdivr
push
rcr
fidivr
(bad)
sti
int
push
(bad)
adc
bnd
xlat
test
stos
loop
sbb
rol
dec
push
add
loopne
popa
popf
push
sbb
adc
add
in
or
cli
jbe
aaa
es
mov
inc
and
sbb
add
cmp
add
(bad)
adc
or
ins
add
pop
sbb
test
scas
or
jle
iret
push
push
add
neg
inc
cmp
add
inc
ss
or
or
das
imul
adc
cmp
lock
mov
dec
sbb
ins
add
add
cmps
adc
jb
rol
mov
push
or
mov
das
inc
mov
adc
dec
stos
sbb
push
lahf
jle
mov
les
data16
jno
mov
das
pop
adc
aas
sub
fbstp
inc
es
and
jnp
push
aas
pop
ins
and
push
(bad)
and
xchg
ret
dec
inc
sbb
pop
pop
lahf
pop
arpl
sub
or
out
and
push
add
sbb
jmp
test
inc
orps
pop
jecxz
repz
push
jle
(bad)
and
or
aaa
or
ret
inc
mov
inc
call
fild
ja
mov
xor
push
xchg
pop
out
jbe
leave
push
addr16
adc
imul
pop
jo
jbe
and
in
cmp
xor
pop
sbb
shr
dec
outs
and
dec
ret
out
pop
mov
je
daa
aaa
adc
pop
pusha
push
lahf
push
mov
not
push
arpl
out
fs
pop
inc
pop
pop
fstp
mov
cdq
out
loope
mov
mov
aam
jns
add
out
inc
mov
test
pop
out
push
mov
mov
fs
ja
pop
in
sub
jge
push
cmp
add
add
or
xor
inc
mov
sub
fcom
push
outs
(bad)
(bad)
pop
adc
test
dec
xor
test
mov
adc
adc
adc
movs
or
jmp
inc
lea
icebp
push
lea
lods
icebp
lods
adc
adc
mov
lods
sbb
ror
arpl
add
int
test
dec
jb
retf
mov
(bad)
cmp
les
sub
sbb
test
xchg
mov
out
lods
inc
xchg
dec
sbb
ret
clc
jg
dec
adc
add
addr16
call
add
mov
ret
xchg
retf
xchg
or
ret
inc
adc
push
ret
or
inc
ret
jmp
add
daa
cs
test
int3
mov
pop
add
push
sub
mov
add
sub
into
nop
push
xor
ror
aam
inc
fcomp
ja
mov
jo
push
or
or
adc
mov
inc
imul
mov
mov
push
push
or
xor
add
fsub
mov
leave
inc
push
pop
fstp
mov
jmp
cwde
repz
or
adc
or
adc
test
inc
loop
sub
push
addr16
and
push
add
jmp
rcl
icebp
mov
fdiv
inc
sub
xor
mov
and
or
pop
dec
mov
jns
mov
lahf
jecxz
test
adc
imul
dec
mov
sahf
adc
ss
lods
loopne
jge
enter
push
pop
das
jmp
sub
fmul
pop
les
dec
xchg
ret
sub
sub
jbe
sbb
rol
or
adc
cld
lahf
add
div
inc
push
js
jge
pop
sbb
je
int
pop
xor
hlt
mov
or
add
or
jb
adc
push
and
sub
test
mov
adc
inc
sti
(bad)
bound
pop
loopne
mov
fild
pop
in
or
add
sbb
add
or
movlps
test
inc
icebp
sbb
sbb
mov
push
aas
mov
xchg
push
cmp
shr
adc
jg
or
and
test
test
inc
sub
stc
lea
sub
test
push
mov
clc
dec
sbb
push
ds
adc
les
inc
mov
or
fdiv
mov
pop
sbb
pop
fs
je
ret
ret
aam
push
(bad)
and
mov
shr
sbb
pop
jo
mov
pusha
bound
mov
or
xchg
lahf
pop
mov
mov
jne
out
stos
inc
mov
out
push
jg
fimul
or
mov
sub
addr16
call
pop
and
adc
cwde
jl
inc
mov
or
(bad)
(bad)
cvttps2pi
or
add
push
or
dec
ret
dec
xor
icebp
(bad)
(bad)
mov
mov
dec
push
jns
mov
mov
xor
test
jl
inc
cmp
jne
mov
push
push
dec
jne
mov
mov
adc
sbb
in
sbb
mov
bound
std
call
and
adc
je
or
arpl
mov
je
(bad)
cmp
add
int3
js
scas
rol
jo
mov
ret
push
jo
cdq
lds
mov
imul
test
test
push
int
jae
adc
test
dec
call
and
cmp
in
fbstp
xor
in
lahf
(bad)
les
aam
inc
push
fcom
jg
retf
cmp
jne
inc
push
lea
pop
sbb
iret
xor
clc
lahf
or
iret
and
mov
inc
dec
fdiv
imul
cmp
add
les
or
dec
out
cmp
(bad)
scas
cmp
mov
jp
in
mov
push
les
push
scas
mov
mov
nop
push
jae
mov
jmp
push
push
imul
and
mov
sub
mov
jg
sub
leave
xor
(bad)
adc
push
pop
imul
jle
ds
loopne
(bad)
mov
mov
movs
adc
stos
xlat
push
xchg
jo
adc
ret
or
sbb
add
mov
int3
push
mov
out
adc
xor
jmp
mov
or
cmp
inc
adc
cmp
shl
push
sub
nop
push
adc
add
adc
lea
push
pushf
adc
cwde
dec
or
(bad)
out
inc
(bad)
(bad)
clc
jle
je
add
jge
push
enter
or
add
retf
mov
adc
or
sbb
std
test
jecxz
scas
icebp
mov
(bad)
jecxz
mov
xor
xchg
pop
in
pop
add
scas
scas
data16
cmp
call
mov
sub
hlt
lods
retf
adc
push
mov
(bad)
dec
add
jo
xor
or
xor
and
inc
add
adc
sbb
iret
in
adc
mov
adc
repz
lahf
sub
dec
or
pop
add
addr16
push
add
sbb
popa
or
mov
and
or
sbb
xor
mov
test
mov
add
cmp
jne
jae
jp
pop
xor
mov
pop
pop
(bad)
imul
xchg
sub
leave
adc
movs
xor
das
outs
sahf
push
xor
or
outs
pop
sbb
push
addr16
add
cs
or
aas
add
adc
outs
mov
mov
mov
out
or
outs
cmps
and
jo
dec
or
scas
and
xchg
add
cmp
ss
xchg
pop
add
add
(bad)
cmp
ror
pop
mov
es
bound
(bad)
jb
into
add
aaa
ror
jnp
leave
sbb
rcl
xor
xlat
add
mov
clc
ja
sub
jb
push
or
sub
test
es
cmp
fsubr
retf
pusha
bound
fmul
add
push
loopne
adc
adc
add
adc
cmp
or
in
fld
movzx
sbb
add
xchg
mov
dec
or
mov
add
loop
popf
movs
mov
adc
xor
sbb
dec
sub
lea
dec
repnz
loope
mov
mov
sub
dec
sbb
pusha
loopne
sar
inc
cmps
add
dec
xor
outs
loop
add
inc
cld
and
and
es
bswap
add
sbb
cmp
mov
add
fadd
(bad)
jle
xor
cmp
ret
out
jle
and
mov
or
js
inc
outs
dec
xchg
aas
and
ror
leave
xor
hlt
imul
mov
xor
xchg
aas
mov
mov
ja
add
add
loopne
icebp
fisubr
inc
add
mov
dec
pop
movs
xchg
push
mov
add
sbb
xchg
dec
mov
dec
xor
aas
jmp
pop
nop
sahf
add
es
call
adc
jae
test
push
inc
lahf
cmp
xchg
or
sbb
loope
fsub
adc
cmps
repz
mov
je
dec
je
xchg
(bad)
in
ror
dec
push
sbb
adc
and
mov
push
out
push
or
adc
mov
cmps
in
call
cmps
or
cmp
push
mov
add
addr16
dec
sub
iret
inc
sbb
xchg
sbb
pusha
shl
cmp
xchg
cmp
(bad)
add
or
cmps
outs
sub
out
dec
sub
sbb
adc
or
aaa
xor
sub
fisubr
xor
dec
push
push
repnz
out
loope
ret
js
enter
ins
pop
cli
mov
sbb
and
rol
cmp
(bad)
lock
pusha
sub
lock
in
mov
add
cmp
cmp
add
adc
fucom
mov
push
in
mov
pop
and
arpl
pop
and
movs
push
dec
jp
add
mov
sbb
mov
leave
adc
(bad)
push
rcl
xchg
jb
xchg
inc
and
rol
add
ins
xor
or
push
fs
sub
(bad)
jnp
cmp
add
inc
sbb
pop
push
dec
xchg
mov
sbb
jne
jb
ins
inc
loop
pusha
jg
jge
std
retf
inc
add
pop
push
add
cmps
push
jne
lods
and
jp
sahf
js
test
push
cwde
inc
adc
mov
pop
add
or
push
inc
mov
stos
test
xchg
jno
xlat
mov
dec
mov
cmp
or
xor
mov
cmp
rol
or
cmp
scas
shr
pop
sub
sbb
sbb
dec
or
enter
add
ret
dec
mov
nop
dec
jne
pop
xadd
cwde
out
push
push
ss
or
mov
nop
or
rdpmc
dec
mov
inc
push
add
shl
(bad)
shr
or
mov
inc
fist
or
(bad)
jg
cwde
mov
cmp
add
add
sub
call
mov
jmp
xchg
std
mov
pop
adc
fbstp
call
jmp
pop
cmp
jne
sbb
fs
push
cmp
sbb
sti
mov
adc
call
jecxz
jo
cmp
pop
aaa
fild
or
leave
mov
je
mov
loop
rcl
cmp
mov
xchg
stos
lods
mov
push
rol
mov
adc
mov
add
inc
mov
lahf
and
push
(bad)
push
shr
(bad)
cmp
icebp
pop
xlat
scas
dec
call
and
movs
popf
rol
fwait
sub
cmp
xchg
sbb
add
js
mov
in
or
adc
cmp
cmp
push
pop
fadd
pop
out
cmp
sub
fwait
sti
popf
and
pop
imul
movs
xor
or
fabs
fcomp
mov
shl
sbb
adc
loopne
dec
pop
dec
ret
ficom
mov
and
push
xor
xchg
xchg
push
aaa
xor
pop
mov
sub
ja
adc
outs
add
call
inc
leave
shl
ficomp
cmp
ins
cmps
enter
scas
or
mov
loopne
in
leave
mov
nop
inc
add
cmps
add
inc
loope
js
adc
cmp
sahf
fsubr
fdivr
push
add
mov
push
adc
mov
dec
es
shl
or
and
and
inc
retf
mov
or
fiadd
sub
shr
pop
dec
sub
add
add
pop
fiadd
rcr
and
imul
shl
pushf
push
sub
sub
mov
(bad)
dec
test
add
add
xor
psubd
cmc
add
dec
xchg
add
fild
cmp
or
jbe
add
jns
inc
mov
sbb
xor
or
xor
sub
inc
or
test
dec
mov
adc
add
pop
mov
jl
cmp
cmp
je
out
push
ret
xor
enter
adc
test
push
sub
push
add
cmp
loop
nop
lea
mov
or
sub
mov
retf
pop
xchg
pop
or
movs
mov
in
add
sbb
mov
das
fisubr
bound
add
mov
cld
push
push
xchg
ins
xchg
mov
cdq
pop
and
add
lahf
mov
loop
jp
rcr
pop
outs
xchg
mov
fadd
and
cmp
lock
xor
or
jmp
mov
mov
adc
adc
adc
add
push
add
push
loopne
dec
mov
ja
xor
rcr
mov
xor
push
jne
sub
mov
inc
test
rcr
add
loope
std
adc
aas
cdq
scas
clc
fwait
cmps
jne
ds
enter
mov
in
sbb
xchg
loopne
and
mov
daa
mov
ror
mov
ret
push
xor
and
scas
xor
pop
std
adc
iret
and
mov
push
add
sub
jg
push
adc
lahf
imul
sbb
push
addr16
aas
ins
add
and
jmp
sub
push
out
adc
xchg
fwait
out
sbb
div
add
test
sub
sub
mov
cmp
jae
rcr
out
push
inc
pop
push
inc
jl
aas
gs
and
jns
neg
mov
shr
or
and
jg
jns
or
inc
mov
sbb
gs
jo
shr
setnp
xor
ins
mov
lahf
sti
lahf
push
sbb
das
lahf
or
cmp
aaa
dec
push
push
add
jg
bound
adc
ja
and
call
ror
mov
out
push
xchg
jno
mov
pop
pop
ror
xchg
loopne
fs
pop
loopne
pop
cmp
(bad)
movs
adc
lahf
test
mov
popf
shl
dec
fadd
mov
sbb
pusha
stos
adc
shl
sub
xchg
bound
inc
pop
cmp
add
retf
adc
fs
sbb
sub
cmp
cmp
lods
mov
push
pop
ins
jae
and
inc
outs
and
lods
cdq
mov
pop
push
pop
add
cdq
(bad)
jg
js
mov
adc
movs
popf
add
adc
xchg
jle
dec
daa
icebp
fimul
xor
sbb
cdq
int
cmp
xlat
loope
retf
ret
add
mov
xor
out
in
mov
iret
ret
cmc
imul
loope
and
jbe
retf
sbb
arpl
test
fistp
xor
pop
out
pusha
mov
dec
cmp
add
xchg
mov
xlat
cmp
outs
fmul
push
dec
or
rcl
mov
fisubr
lahf
add
sub
sbb
jg
mov
shr
pop
inc
rol
cld
dec
pop
cs
lods
jle
or
cmp
scas
mov
adc
jbe
jmp
jle
fild
fild
or
sub
cmp
push
test
scas
or
mov
adc
add
js
adc
inc
test
inc
dec
or
pop
ins
enter
mov
push
clc
fstp
sbb
pop
ret
push
xor
cmp
js
call
aam
sbb
add
add
loopne
pop
push
pop
pop
inc
ins
adc
adc
push
or
loopne
add
push
adc
les
or
sub
cmp
sub
lea
add
and
push
mov
daa
push
inc
movs
test
mov
add
inc
jg
push
dec
lods
mov
add
xchg
xor
aam
sub
mov
fwait
add
std
(bad)
lahf
add
sub
pop
mov
cdq
inc
mov
adc
das
lds
push
mov
mov
inc
pop
jbe
inc
cmp
fdivp
fadd
sbb
push
and
mov
push
dec
rcl
daa
inc
adc
cmp
adc
enter
fcom
lock
fiadd
les
in
mov
dec
mov
mov
adc
jb
dec
loopne
sbb
and
mov
fiadd
pop
je
dec
cmp
or
rol
xor
dec
pop
adc
scas
jle
add
loopne
je
into
pop
dec
adc
js
mov
sti
ds
inc
jle
ror
(bad)
int3
pusha
ret
pop
cs
xchg
xor
call
or
bound
bound
jo
adc
nop
xor
add
hlt
fucomi
xor
push
push
pop
fcomp
ins
popa
mov
scas
loop
push
add
cld
sbb
jno
sbb
dec
add
add
mov
xor
and
sub
imul
es
inc
adc
or
mov
cs
inc
and
jb
add
fwait
out
inc
adc
clc
mov
mov
mov
mov
and
push
inc
mov
cli
lock
jbe
xor
lea
in
jne
jne
popf
dec
or
jmp
popa
mov
xor
mov
mov
adc
call
dec
call
inc
mov
adc
cmp
add
test
es
push
xor
test
mov
popa
add
sbb
adc
out
mov
xor
push
out
jge
add
xor
xor
(bad)
jnp
xor
or
test
sbb
dec
arpl
jp
mov
adc
and
xchg
add
aas
jo
inc
fsub
push
mov
pop
add
jl
cs
dec
xor
ucomiss
fisub
mov
in
and
pop
sbb
or
aam
or
inc
mov
add
mov
inc
clc
cs
cmp
dec
cld
adc
adc
or
(bad)
and
adc
or
aaa
cmps
push
lahf
popf
sub
jg
xchg
loop
les
dec
cld
inc
ret
jmp
cmp
mov
xor
scas
hlt
jnp
push
ss
pusha
push
push
mov
ret
jns
push
or
mov
or
imul
fild
push
in
xor
pop
xchg
mov
dec
sbb
dec
rol
call
pop
or
pop
and
pushf
fdivr
fadd
dec
adc
push
jp
frstor
mov
lock
mov
lock
adc
nop
ret
jp
addr16
add
fwait
rcl
mov
leave
push
or
outs
arpl
fadd
ret
enter
int3
push
enter
sbb
rol
nop
add
mov
rcl
xor
les
push
inc
aad
mov
or
push
mov
stos
sub
les
bound
push
xlat
xchg
pop
or
xor
xchg
rol
scas
test
daa
or
cmp
rcr
pop
add
add
or
cmp
cmps
jg
(bad)
call
loopne
mov
mov
mov
test
ins
xchg
push
add
cmc
cmps
add
cwde
fadd
loope
inc
clc
add
cmp
cmp
pop
push
push
std
or
add
dec
inc
or
in
or
and
sub
jne
lods
xchg
stos
adc
leave
gs
sub
dec
in
cmovns
ret
or
sbb
mov
loopne
(bad)
sbb
int3
push
add
add
sbb
fild
mov
adc
or
inc
jae
loope
push
cmp
dec
inc
ins
adc
mov
push
pop
lds
pop
and
aam
popa
pusha
repz
push
pop
jl
pop
outs
sbb
cmp
lea
mov
movs
out
test
adc
or
sbb
sub
sub
(bad)
shl
add
lods
cmp
and
leave
(bad)
cld
mov
xor
mov
cld
mov
enter
and
loope
add
retf
dec
shl
push
out
inc
mov
jbe
mov
mov
int
mov
js
jno
adc
mov
adc
or
outs
lods
mov
pop
sbb
mov
xchg
arpl
fnstenv
sub
jns
push
add
cdq
or
add
jae
jmp
fwait
mov
mov
mov
mov
adc
ret
dec
sbb
daa
outs
lds
rol
xchg
sbb
call
(bad)
cld
add
add
add
mov
pop
xor
mov
mov
mov
inc
jecxz
test
jle
xor
(bad)
dec
push
cmp
je
mov
mov
mov
jle
xor
push
xchg
inc
cmp
jne
sub
or
push
popa
mov
add
adc
imul
pop
adc
and
int
mov
xor
test
mov
mov
mov
nop
test
pop
cmp
dec
lods
fldcw
or
add
push
and
adc
sbb
jo
xchg
cmp
xchg
mov
xlat
pushf
mov
mov
push
push
mov
fadd
(bad)
cmps
adc
jne
je
inc
lock
mov
push
cmp
jae
fisttp
and
adc
or
sti
xchg
xchg
pop
dec
inc
cs
pop
pusha
inc
add
in
dec
jmp
ret
aas
mov
add
out
cwde
push
add
mov
(bad)
leave
mov
add
div
and
or
xor
aas
and
mov
les
xor
retf
jno
and
sar
push
xor
aas
test
sub
rcr
add
push
inc
movs
mov
dec
cmp
adc
push
or
and
enter
shl
mov
push
repz
pop
and
mov
inc
test
movs
sbb
rol
push
inc
scas
and
mov
and
jnp
jne
add
xor
mov
stos
cmp
ret
cwde
adc
xor
(bad)
shl
test
scas
lea
mov
outs
xor
out
sbb
inc
pop
inc
xor
iret
daa
add
and
repz
xchg
jecxz
jb
(bad)
dec
arpl
arpl
dec
(bad)
mov
(bad)
scas
and
push
add
xchg
outs
and
lods
inc
adc
sub
jg
lods
mov
femms
stos
mov
adc
jo
outs
arpl
dec
aaa
ret
inc
outs
push
aas
sub
shl
pop
sti
inc
and
push
push
inc
xchg
(bad)
jmp
popa
pop
pop
ror
mov
in
das
inc
daa
sub
repnz
lea
and
out
nop
fsub
xor
test
popa
and
adc
mov
mov
hlt
cld
loope
mov
inc
cmp
jl
js
int3
ficom
lods
xor
lods
test
fwait
jno
in
rol
jo
mov
xchg
sbb
push
sbb
in
(bad)
pop
aad
aas
mov
fcom
cdq
jmp
imul
inc
shl
cmp
pop
mov
add
ret
inc
aam
je
int3
push
or
mov
xor
cld
dec
fwait
inc
cmp
mov
iret
and
test
cmp
sbb
mov
adc
add
dec
mov
sbb
add
dec
sbb
mov
or
(bad)
rol
sub
stc
test
test
and
stc
xor
or
mov
inc
jnp
or
clc
sub
dec
pusha
rol
mov
add
arpl
rcr
outs
movs
in
lods
and
scas
push
fiadd
outs
jae
daa
add
inc
jle
mov
outs
(bad)
push
test
popa
add
cwde
sub
xchg
push
daa
pop
push
sbb
dec
js
mov
rcl
mov
rol
and
mov
jle
call
mov
sub
(bad)
outs
push
or
enter
inc
dec
add
jns
xchg
push
dec
sub
popa
push
or
xor
loopne
lahf
and
outs
cmps
(bad)
out
popa
mov
and
add
mov
pop
mov
jecxz
jmp
movs
cli
inc
cwde
(bad)
jb
fcom
sub
hlt
and
or
loopne
and
div
call
and
pop
iret
repz
inc
sub
call
add
push
push
push
push
push
push
push
mov
push
push
push
je
stos
shr
je
or
jl
aam
push
mov
mov
call
add
or
pushf
dec
in
js
int
mov
mov
pusha
lods
aaa
icebp
int3
inc
cld
retf
add
neg
into
xor
call
(bad)
in
fild
(bad)
sub
push
push
push
jb
jo
retf
out
dec
and
je
sbb
(bad)
icebp
dec
lods
hlt
xchg
push
bound
jle
mov
adc
mov
shr
xchg
popf
cs
pop
cmp
int
xchg
out
push
xchg
push
jl
lods
div
pop
test
sub
neg
xor
mov
push
lods
push
rol
jecxz
mov
test
inc
xor
mov
add
cs
add
scas
outs
aam
mov
call
inc
mov
sti
xor
int
outs
add
sbb
push
retf
ds
outs
push
inc
jg
add
mov
cs
push
sub
add
or
shl
sub
outs
pusha
pop
push
cs
data16
inc
adc
jo
test
(bad)
push
and
xchg
add
xor
sub
cmp
xor
mov
push
jne
sbb
push
repnz
les
or
movs
sub
ins
sub
or
fmul
pushf
ins
fisub
push
and
outs
lahf
xchg
xchg
iret
aam
shl
lds
jle
pop
xchg
or
push
dec
push
push
js
dec
jns
lock
sbb
and
jnp
dec
das
pop
push
xor
inc
cwde
and
aas
mov
mov
sbb
push
sub
push
mov
ds
pop
push
dec
push
outs
add
mov
sub
add
mov
fs
mov
xor
push
xchg
xor
in
dec
dec
cmp
sub
pop
push
push
js
jle
aaa
adc
fwait
xchg
push
sub
inc
adc
shr
adc
adc
int
repz
pushf
mov
in
sbb
rcr
xchg
mov
add
xchg
inc
push
mov
cli
fdiv
push
test
aas
push
or
jle
push
loope
ins
adc
add
inc
cmp
cdq
int
pusha
push
add
add
push
jo
add
stc
cmps
div
mov
cs
push
push
xchg
fbstp
loope
repz
push
add
mov
clc
outs
loopne
push
add
add
pop
stos
xor
mov
xchg
outs
adc
aam
inc
push
mov
dec
dec
dec
mov
push
das
fs
sub
aam
dec
mov
and
mov
das
cwde
mov
or
sbb
push
movs
ins
add
rol
test
call
aaa
hlt
outs
clc
mov
adc
adc
(bad)
fwait
mov
mov
out
lods
ror
push
pop
fimul
cwde
push
stc
call
popf
hlt
push
je
cld
cmps
div
cmp
sbb
nop
fbstp
or
pop
bound
(bad)
adc
mov
int3
js
push
push
das
add
leave
out
pop
pusha
add
dec
leave
aaa
test
fnstcw
div
mov
pop
pop
xlat
mov
les
fisttp
xor
(bad)
sbb
nop
push
sub
cmps
stc
sbb
push
(bad)
push
push
add
leave
addr16
addr16
lods
xchg
pusha
aad
shl
xchg
fcomp
scas
dec
pop
add
cmp
ds
test
(bad)
(bad)
rcr
cmp
imul
fmul
lock
dec
or
aas
add
dec
or
pop
push
push
pusha
inc
pop
push
int3
push
sub
aam
push
(bad)
int
sub
mov
ja
add
push
sub
mov
add
dec
pop
pop
or
sar
cmps
pop
ins
sbb
dec
jle
dec
xor
mov
push
cwde
push
iret
dec
inc
int
mov
dec
add
add
rol
pop
pop
nop
nop
push
dec
xchg
inc
aas
ss
aam
in
inc
inc
pop
clc
push
mov
or
pop
shl
sar
adc
push
pop
mov
sbb
push
clc
fcom
dec
nop
shr
in
dec
(bad)
test
das
rcl
pop
lock
popf
xlat
dec
add
push
sbb
xor
dec
push
mov
push
adc
cwde
aam
addr16
mul
inc
aad
cwde
aad
sub
add
and
push
(bad)
jg
or
xchg
scas
aam
iret
mov
fimul
dec
fsubr
fldenv
test
lahf
sbb
pop
add
stos
fsubr
push
push
sbb
fiadd
pop
inc
rol
int3
mov
or
iret
pop
add
daa
xchg
push
inc
jo
xchg
xchg
push
ins
inc
pop
mov
out
sahf
inc
dec
push
mov
cld
or
pop
int3
iret
repz
push
ins
mov
repz
ds
xchg
mov
iret
mov
ds
test
adc
cwde
daa
mov
pop
or
dec
out
mov
xor
dec
fs
out
sahf
sbb
add
xor
push
jo
mov
pushf
push
mov
ror
lock
rol
in
clc
push
adc
inc
pop
cmp
repz
mov
outs
and
add
(bad)
adc
sub
inc
jge
aaa
clc
push
adc
ds
mov
jo
nop
aaa
cmp
mov
push
out
pop
outs
jge
loop
movs
and
push
in
add
jbe
mov
out
and
xlat
outs
and
fs
xchg
push
add
push
in
test
pop
mov
(bad)
shl
and
das
push
push
adc
daa
cld
aaa
inc
and
sub
and
outs
or
or
out
mov
sbb
daa
fistp
fsub
mov
mov
in
mov
sar
dec
push
cwde
sbb
cdq
lods
cs
in
xor
or
push
fs
dec
pop
fldcw
fcomp
mov
push
sub
ins
jp
lea
call
mov
sub
push
mov
pop
sub
dec
dec
pop
or
add
daa
in
or
pop
pop
mov
paddsw
ret
jo
rol
cld
aad
xor
mov
fnstcw
pop
pop
mov
ins
mov
mov
outs
clc
push
mov
inc
call
push
or
jo
ss
adc
sahf
or
xchg
lahf
cmp
dec
or
xor
(bad)
fisub
mov
movs
push
cmps
jge
int
push
and
or
aaa
in
cs
iret
fcom
mov
call
(bad)
scas
inc
pop
cmps
sbb
aaa
xchg
lock
out
loopne
mov
or
ja
push
fs
push
mov
sar
mov
(bad)
ror
lock
(bad)
mov
push
retf
retf
out
pop
mov
dec
mov
inc
emms
int3
xchg
sbb
add
inc
pop
fisttp
mov
mov
pop
pop
mov
popa
(bad)
pushf
push
push
movs
sbb
sti
jns
dec
add
sti
cmp
adc
push
pop
pushf
mov
push
fnstcw
je
push
and
mov
ins
xchg
sbb
int
shr
les
sbb
int3
outs
out
int
add
push
push
push
mov
enter
imul
push
or
push
rcr
fisub
adc
cmps
movs
push
clc
cmps
in
loopne
mov
cmps
loopne
outs
cwde
stos
cs
pop
out
fwait
ins
out
loopne
fidiv
les
js
push
mov
pushf
popf
ins
push
fadd
daa
enter
(bad)
push
push
imul
loopne
int
or
or
sbb
fidiv
fnstsw
fiadd
mov
xor
sti
outs
inc
in
push
mov
push
jmp
xor
xchg
push
lahf
ja
test
jbe
in
xor
push
fucomip
loope
push
mov
iret
fmul
xchg
hlt
fnstsw
sbb
cmc
cs
jo
inc
push
push
test
clc
pop
push
js
jle
mov
push
test
outs
adc
mov
pop
and
inc
push
test
sar
mov
and
push
push
and
lock
inc
push
push
bound
in
ins
and
fmul
sbb
pop
and
ins
cmps
jge
mov
sub
add
push
mov
in
fidiv
daa
jl
shrd
fdivr
mov
pop
cmp
pop
cmp
dec
nop
push
jl
pop
fadd
jp
inc
inc
dec
cwde
cmps
jl
push
pusha
mov
rcl
imul
push
in
jg
mov
inc
pop
inc
xchg
mov
cli
je
inc
ds
inc
fbstp
jg
mov
shl
push
mov
movs
movs
pop
mov
pusha
es
push
sub
mov
test
js
push
xor
inc
scas
push
sbb
in
in
mov
das
je
xchg
test
pop
push
mov
mov
mov
mov
mov
push
sub
jmp
mov
or
xchg
pop
rcr
sbb
dec
out
andps
inc
sbb
mov
and
addr16
push
push
test
adc
inc
push
pop
mov
adc
push
pop
jl
add
sub
sub
test
rcl
push
or
out
fiadd
fadd
cmp
mov
cmp
pop
pop
jno
aam
int
jl
or
cld
rcl
jmp
sub
add
call
sahf
call
cmp
int3
mov
mov
pop
xchg
sahf
dec
pop
push
nop
xchg
clc
xchg
push
pusha
and
ins
outs
fist
test
push
xor
sub
mov
xor
shl
cmp
mov
lods
cmp
inc
inc
pop
outs
lock
push
sbb
out
mov
pusha
push
push
push
cmp
inc
outs
in
and
ds
jo
mov
fisub
(bad)
jne
ja
test
xchg
jnp
jge
lods
add
push
and
add
dec
jnp
add
or
js
ins
ss
xchg
add
movs
xchg
fcomp
fcmovnu
ficomp
mov
stos
push
lods
xchg
fcmovnu
xchg
scas
outs
xor
push
xchg
ss
push
je
aam
xchg
jle
mov
cmps
pusha
rol
mov
into
fidivr
pop
outs
jl
cmps
inc
in
popa
(bad)
lods
arpl
in
adc
fsubr
js
daa
in
cs
adc
pop
and
adc
pop
pushf
adc
sub
mov
arpl
or
pop
add
fldcw
push
nop
xchg
ror
data16
aas
dec
inc
(bad)
jnp
(bad)
ins
scas
sbb
scas
call
dec
jle
cmp
push
dec
push
je
mov
jnp
hlt
pop
mov
and
push
jo
pop
addr16
and
ss
xlat
push
push
push
lock
outs
push
ins
out
rcr
nop
jb
jae
or
aam
push
add
inc
test
sahf
pop
inc
and
xor
aam
mov
mov
add
pop
adc
call
mov
pop
outs
sbb
pop
rcl
sub
mov
xor
pop
add
(bad)
sar
jmp
dec
pop
inc
ins
pop
lfs
loopne
call
pop
test
div
push
test
out
jb
aas
mov
into
push
pop
pop
pop
xor
daa
movs
imul
ins
adc
mov
pop
sub
mov
pop
sbb
add
jecxz
fiadd
in
out
cwde
pop
pop
mov
xlat
jo
arpl
dec
ins
fistp
mov
sub
dec
dec
pop
pop
sub
add
lds
ds
mov
mov
pusha
movs
(bad)
repnz
push
fs
dec
fldcw
xchg
pop
xchg
int3
cwde
cwde
fwait
sub
in
ins
mov
and
dec
cmps
push
test
sbb
or
pop
or
push
repz
daa
fisubr
lea
inc
ja
xchg
out
test
push
lock
idiv
cwde
pusha
fwait
stc
pushf
dec
test
xor
adc
add
in
or
les
push
lods
adc
adc
pop
push
aas
ins
(bad)
and
ins
es
nop
sub
fdiv
push
sub
fcmovnu
data16
sbb
push
test
popa
push
test
ds
fisubr
jo
dec
jnp
add
mov
in
mov
cmps
mov
or
mov
jnp
int3
cs
push
cwde
rcr
shr
mul
push
inc
ficomp
cs
cld
jmp
mov
inc
push
mov
dec
in
call
es
cld
push
lock
mul
clc
add
add
push
femms
ins
addr16
adc
add
push
les
push
xchg
pop
rol
push
inc
push
pop
push
pop
mov
lahf
pshufw
ds
mov
push
pop
xlat
pop
popf
call
or
ins
or
adc
scas
jecxz
push
imul
adc
bound
in
(bad)
push
mov
dec
in
scas
push
pusha
mov
or
add
mov
push
inc
push
enter
lea
pop
fisubr
cmp
ror
test
xlat
dec
and
stos
ins
xchg
lods
outs
pop
(bad)
pop
addr16
xor
or
jns
scas
dec
cs
pop
inc
in
pop
push
loopne
neg
icebp
push
push
pushf
xlat
push
aam
in
inc
jl
loop
lods
mov
pusha
or
jbe
idiv
clc
mov
jl
jbe
mov
push
lods
ret
das
sti
or
cmp
inc
aam
(bad)
adc
out
dec
pop
sub
push
mov
jne
jmp
lock
xchg
enter
cld
retf
iret
mov
aas
out
aam
xlat
mov
push
nop
dec
ja
push
pop
cmp
push
or
mov
pop
(bad)
fwait
scas
cmp
fadd
pushf
rcl
scas
aad
mov
ret
dec
int3
addr16
(bad)
xlat
push
add
lahf
mov
dec
mov
xor
push
in
mov
fbstp
pop
out
es
mov
ds
ins
inc
loopne
loope
les
jl
fld
in
in
loopne
out
out
mov
out
loop
cmp
sbb
das
add
cmps
rol
hlt
and
or
outs
push
add
daa
push
sahf
iret
fild
lahf
(bad)
adc
lahf
out
ins
push
int3
mov
and
mov
push
shr
je
lods
push
mov
lahf
out
fcmovnb
mov
xor
push
push
mov
fldcw
mov
hlt
fisub
(bad)
(bad)
jle
push
fdiv
int
test
js
aam
mul
and
aaa
inc
jo
pusha
mov
adc
lock
aas
outs
fldcw
movs
mov
mov
pusha
nop
push
mov
dec
mov
xchg
int3
cmp
adc
jl
fwait
lods
(bad)
xor
or
adc
jo
lods
jbe
clc
mov
mov
data16
fs
mov
mov
add
les
push
push
leave
mov
push
fsubr
jge
iret
cmps
rol
nop
aam
sbb
repz
test
mov
outs
push
mov
cwde
call
stc
push
mov
pop
push
jo
sub
adc
push
sub
xchg
fstp
push
enter
push
dec
out
pop
icebp
push
sub
cmp
clc
push
cld
or
dec
jno
mov
sbb
dec
pop
sub
mov
fs
or
into
fsubp
mov
xor
xor
add
pop
shr
push
inc
add
dec
push
dec
sub
push
dec
mov
imul
push
inc
pop
addr16
and
xchg
fbld
lock
pop
pop
pop
mov
cmp
cmc
lock
ds
inc
jg
mov
pop
hlt
fisub
out
push
push
push
lock
jne
push
push
pop
push
popa
dec
mov
push
mov
or
sahf
(bad)
pop
sub
fsubr
pop
pop
push
jo
add
in
inc
dec
cmps
pop
in
sub
out
sbb
sub
dec
fs
dec
repz
add
sbb
aas
fstp
push
mov
and
dec
ins
mov
jmp
push
(bad)
push
mov
out
es
ins
mov
pop
add
fdivr
add
push
fnstcw
pusha
add
int3
or
daa
mov
sbb
xor
ds
mov
nop
cmp
inc
stc
cmp
fwait
aas
int3
push
and
push
pop
shl
push
lahf
cmps
push
push
xor
sub
fsubr
ins
pop
cwde
push
inc
jne
(bad)
push
ret
jl
test
mov
sbb
push
test
pop
dec
mov
fcmovne
push
test
shl
lods
push
ins
popf
sbb
fdivr
adc
int
scas
push
inc
push
mov
push
adc
mov
xchg
push
lock
ss
(bad)
mov
popf
les
mov
es
mov
sar
push
in
mov
sbb
push
movs
push
mov
cmp
jl
and
push
stos
daa
sbb
push
pusha
push
push
mov
jo
addr16
clc
mov
ja
jl
out
jbe
push
adc
jl
inc
push
test
into
shr
rcl
add
dec
cmp
rcl
pop
xchg
fs
push
rcr
imul
mov
fcmovnu
xor
pop
jo
push
sub
imul
fwait
out
dec
lods
push
enter
inc
outs
call
neg
dec
mov
ins
jne
jbe
fwait
jge
xchg
in
or
pusha
push
mov
popf
jge
js
and
je
xor
daa
dec
xchg
mov
in
loope
mov
dec
lea
push
dec
repz
(bad)
into
push
sbb
fistp
push
push
or
shl
lahf
clc
fcom
push
movs
scas
scas
cmps
jge
dec
js
ja
dec
mov
jge
int3
in
cmp
out
push
mov
lock
out
push
fdiv
(bad)
cs
clc
(bad)
test
push
and
push
in
mov
jmp
push
add
in
fmul
dec
push
scas
cmp
cmps
test
stc
pop
xor
jnp
inc
sub
add
xchg
lahf
jns
ret
add
cwde
int3
xor
data16
enter
neg
cmps
stc
xor
add
dec
push
inc
jns
outs
mul
jl
jl
inc
xchg
dec
jg
mov
in
jnp
fistp
or
das
mov
ins
ss
data16
dec
movs
shr
aas
xor
test
fdiv
jns
loop
mov
push
call
clc
imul
mov
xchg
ss
hlt
push
les
xchg
push
sbb
out
pop
push
test
ja
enter
jl
dec
xchg
cmp
push
jl
test
loopne
pop
scas
push
cmp
jnp
neg
pop
dec
push
call
push
int3
outs
cs
jl
imul
mov
fdivr
cmp
mov
pop
rol
and
add
add
mov
in
test
mov
(bad)
lods
adc
add
into
push
jbe
push
sbb
pushf
imul
pop
test
and
push
inc
pop
add
ins
enter
pop
add
pop
inc
push
mov
jbe
and
add
inc
inc
rcl
pop
inc
pop
sysret
push
push
sub
add
push
mov
ja
sub
adc
add
test
je
aas
pop
adc
push
pop
sub
(bad)
aas
test
aad
pop
lahf
popf
add
test
nop
push
in
iret
sar
inc
lods
in
int3
dec
je
mov
ins
ss
test
push
dec
and
xor
pushf
bound
addr16
cmp
or
pop
adc
pop
jmp
retf
push
aaa
jl
pop
pop
psubusb
ja
rcr
jo
sbb
enter
sar
fwait
int
mov
xor
ins
pop
hlt
or
or
sbb
or
or
sub
adc
mov
sbb
sbb
xlat
xor
dec
push
fs
lods
mov
jnp
aas
les
loopne
clc
repnz
add
repz
lods
push
or
sub
rcl
inc
pop
mov
lock
shl
push
adc
pop
fmul
out
mov
call
add
dec
mov
sbb
pusha
inc
les
xor
jo
fadd
test
std
test
aaa
ins
std
addr16
es
das
inc
sub
(bad)
scas
mov
mov
cld
inc
daa
pop
popa
inc
jo
aas
test
adc
aas
sub
movs
xchg
add
mov
(bad)
add
dec
inc
mov
add
push
sbb
addr16
cdq
cs
aaa
in
fisub
call
rcr
xchg
pop
or
xchg
xchg
inc
push
xchg
xchg
mov
daa
mov
sbb
push
or
cs
fcmovbe
pop
and
call
push
sub
push
inc
fsub
call
push
mov
int3
scas
repz
jle
mov
fdivr
mov
xchg
lods
pop
idiv
in
test
pusha
test
shr
clc
stos
daa
or
aas
and
fsubr
fisubr
nop
push
int3
dec
pop
sbb
add
scas
push
fist
into
jo
lods
lods
lahf
fcom
adc
mov
loopne
add
or
cmps
mov
out
sub
pop
pop
jns
shl
ins
mov
daa
ror
or
pop
sub
je
dec
xchg
or
xlat
shl
xchg
dec
push
mov
out
mov
data16
push
pushf
cmp
mov
daa
lds
test
adc
adc
mov
adc
jbe
iret
mov
pop
clc
push
push
mov
push
inc
clc
dec
fiadd
and
jle
sar
sub
xor
div
mov
pop
inc
ret
push
mov
fdivr
cmps
stc
adc
xor
jmp
ds
enter
pushw
js
cs
mov
push
in
jge
iret
lock
out
push
lock
fild
push
xchg
fldz
cmp
iret
sub
je
xor
cmps
loope
call
fldcw
jl
idiv
unpcklps
gs
dec
cmp
jmp
in
das
test
and
test
nop
push
lods
jmp
jae
or
push
nop
aas
fcomp
mov
cmp
dec
push
mov
inc
push
xor
iret
mov
inc
push
cld
push
pop
fucomi
inc
or
ss
dec
jnp
ins
push
aam
outs
enter
fsubp
shr
in
movs
ja
js
jns
ins
ds
push
mov
xor
jg
inc
fist
jle
jo
cmp
faddp
push
cmp
pop
mov
(bad)
mov
aam
rcr
fwait
and
mov
push
pop
les
int3
cmps
ror
sar
lahf
loop
in
in
and
inc
(bad)
out
and
pop
ins
jno
adc
aaa
sub
inc
push
scas
in
rol
jne
ja
push
mov
js
push
pusha
ja
sbb
(bad)
cld
inc
inc
inc
inc
into
into
or
das
nop
push
cmovs
jbe
pop
bound
pop
cmp
cmp
ss
ret
fstp
aas
push
cmc
push
pushf
push
add
pusha
cld
cmp
ficomp
das
or
mov
lock
adc
daa
mov
or
push
ret
fsubr
add
data16
pop
pop
ja
lahf
push
lock
and
and
mov
int
repz
adc
int3
ins
jae
cmp
sub
inc
sub
sub
enter
test
inc
sub
dec
ins
adc
push
pop
das
daa
mov
ins
ds
push
aam
in
or
fdiv
dec
xor
cmp
mov
xor
lods
shr
xor
loopne
les
inc
sub
(bad)
fs
pushf
jge
or
dec
inc
dec
push
and
pop
js
shl
push
pop
push
xchg
hlt
pop
jbe
jge
push
cmp
pop
popa
outs
mov
push
call
cmp
dec
push
mov
aam
pop
pop
fidivr
xchg
mov
daa
push
mov
mov
int3
mov
mov
out
push
les
mov
push
add
pop
les
outs
ss
leave
mov
sub
pop
rcr
xlat
jle
mov
jl
push
fistp
push
jecxz
lahf
out
push
cwde
(bad)
hlt
push
in
out
mov
ins
dec
jmp
cmps
stc
mov
push
clc
js
fdiv
lahf
pop
lahf
clc
push
icebp
out
push
cld
stc
rol
pusha
in
or
push
pop
push
xchg
or
hlt
pop
mul
mov
or
lock
xor
daa
ror
push
cmp
pusha
not
sub
addr16
inc
lds
enter
add
pushf
cs
jbe
int
shr
xor
jl
cmp
jnp
outs
fdiv
push
cmp
shl
mov
fs
pop
les
cmp
je
jl
cmps
stc
add
fs
fcomp
(bad)
mov
push
in
and
fidiv
das
jb
call
es
ins
mov
push
cwde
jp
jl
jg
ins
test
mov
mov
test
int
pusha
call
push
mov
movs
and
and
(bad)
outs
shl
cmovs
fucomi
fisttp
push
ja
test
push
adc
add
jnp
push
scas
inc
test
pop
push
test
fiadd
sub
add
mov
mov
push
loopne
adc
aaa
enter
test
dec
pop
jmp
xlat
(bad)
mov
daa
movs
push
call
fs
mov
jbe
movs
in
out
imul
jo
mov
jnp
lods
push
in
clc
push
fs
ins
mov
das
pop
mov
cmps
stc
push
xor
ins
test
aaa
fdivr
pusha
sub
pushw
mov
mov
pop
push
xchg
int3
daa
or
int
cmps
ins
push
inc
cld
inc
adc
push
add
inc
or
cmp
mov
jns
mul
js
mov
in
sub
out
dec
je
loopne
mov
add
daa
adc
cs
sub
xchg
mov
imul
add
fwait
inc
ja
push
sbb
(bad)
out
xor
fadd
xor
shl
test
mov
les
das
inc
pop
mov
dec
aam
inc
cmp
lds
adc
(bad)
enter
(bad)
int
push
cmps
in
push
rol
fs
push
inc
clts
in
add
adc
adc
adc
jbe
sbb
sbb
pushf
sbb
cmp
push
and
and
mov
pop
out
jmp
push
push
and
sub
sub
sub
loopne
ins
push
mov
les
xor
add
mov
push
add
push
fisttp
das
dec
test
out
shr
cli
adc
int3
or
inc
add
add
repz
mov
or
aaa
inc
add
push
les
mov
push
loopne
shr
push
jno
je
push
or
push
cwde
jnp
jge
jo
fld
dec
jle
sub
push
sub
xchg
test
dec
mov
mov
int
add
fmul
ds
daa
hlt
mov
sbb
push
add
inc
pop
aam
aam
and
push
out
pop
jbe
jo
pop
in
ds
push
aaa
bound
push
mov
cdq
fnsave
mov
cmp
into
mov
pop
jl
mov
mov
mov
mov
mov
ret
test
jo
retf
aas
aam
adc
pop
fistp
nop
push
xchg
shr
rol
ja
or
push
inc
aad
or
out
pop
call
jbe
popf
popf
call
push
clc
out
ss
fisub
ja
push
cmc
inc
xchg
popf
pusha
stc
outs
pop
in
cli
cmps
jbe
xchg
fsub
js
mov
cmp
mov
aaa
sbb
pop
out
push
in
or
pop
inc
xor
mov
adc
pusha
or
pop
not
sub
or
add
adc
mov
add
pop
adc
push
adc
push
rol
inc
adc
ja
mov
and
inc
adc
pop
bound
test
stos
test
pop
rol
inc
aas
pop
rol
call
aaa
das
pop
dec
outs
jae
popa
ins
ins
jae
jb
pop
push
jne
inc
sti
dec
jmp
popa
je
adc
gs
cs
imul
bound
and
popa
jb
je
pusha
push
xor
jo
inc
outs
ja
fldln2
(bad)
aaa
cmp
jo
jae
sbb
imul
or
aaa
xchg
or
cld
imul
pop
jle
jb
sub
cs
js
xor
inc
push
lock
cmp
push
push
dec
xchg
jae
sub
inc
aas
int3
(bad)
in
push
dec
nop
inc
outs
ins
fs
pop
dec
ins
popa
adc
dec
ins
jo
mov
jae
gs
outs
sbb
or
outs
pop
imul
rol
jbe
pop
ror
les
pusha
js
add
ret
std
pop
test
je
or
outs
arpl
or
or
aaa
push
imul
cmp
sti
scas
inc
sbb
ins
(bad)
dec
dec
cmp
sbb
pop
or
arpl
imul
shl
or
sub
jae
gs
jne
push
pusha
or
jo
aas
dec
lds
xor
outs
arpl
adc
adc
pusha
je
inc
ins
cwde
loope
push
imul
inc
jp
mov
adc
mov
dec
push
inc
jp
ins
outs
popa
inc
adc
dec
push
push
push
dec
xchg
cmp
and
dec
add
lods
mov
dec
bound
or
jl
ins
or
inc
dec
or
adc
dec
mov
cld
mov
aad
jo
jo
adc
sbb
aam
inc
fisttp
daa
inc
jno
imul
(bad)
fist
jae
imul
inc
ins
clc
mov
lds
push
inc
inc
mov
arpl
xor
sbb
push
adc
cmp
sbb
outs
enter
bound
in
enter
ss
sbb
(bad)
lock
ret
sub
cmp
mov
aam
test
test
or
dec
dec
dec
inc
mov
add
xor
push
add
add
lods
imul
adc
jne
adc
sub
cs
dec
inc
mov
shl
arpl
jmp
sbb
ins
adc
xor
sbb
sbb
mov
out
jns
or
push
ret
popa
dec
inc
pop
dec
push
dec
dec
push
sbb
ins
les
int3
or
adc
xchg
jae
sub
cs
xor
test
imul
pop
je
arpl
ins
fcmovu
fcom
jg
inc
imul
and
jg
lea
jno
cmps
fiadd
aaa
add
xor
adc
adc
fucomi
or
nop
add
nop
or
movs
mov
adc
or
stos
je
cli
daa
fdiv
and
(bad)
popa
push
mov
arpl
outs
adc
jg
sub
inc
push
(bad)
enter
fnsave
std
fadd
data16
sub
fs
jb
mov
sbb
and
outs
adc
mov
mov
inc
inc
pop
adc
mov
inc
and
jge
ja
rcl
mov
dec
lock
jl
push
cmc
lds
jb
jae
jb
(bad)
js
pmaddwd
push
jg
or
push
arpl
inc
in
add
inc
pop
sbb
cmp
scas
ret
dec
bound
push
pop
mov
mov
pop
cmp
inc
ja
or
push
js
pop
mov
jne
cmps
stc
dec
ins
addr16
adc
pop
inc
push
mov
fs
add
mov
sub
or
mov
jo
and
addr16
dec
bound
sbb
push
mov
add
dec
push
dec
pop
jne
cmp
push
jo
push
push
sub
xchg
dec
ins
inc
dec
test
adc
adc
das
sbb
or
inc
sbb
inc
ins
adc
push
sub
add
ins
pop
xor
cmp
pop
add
sub
pop
test
xchg
xor
mov
pop
mov
mov
jb
jns
xchg
rcr
push
out
dec
pop
or
pop
sub
aam
or
cdq
sbb
cmp
pop
and
push
lods
stos
test
aad
ins
push
sub
or
inc
inc
movs
lahf
xchg
ss
jo
dec
fld
push
inc
inc
pop
adc
push
adc
or
inc
mov
jo
push
or
push
aam
gs
push
adc
inc
fwait
in
adc
jno
ja
mov
push
push
dec
or
ret
js
jbe
jle
push
dec
push
dec
dec
ss
test
dec
dec
jo
jp
aaa
inc
mov
sbb
or
shr
push
push
popa
retw
sti
cli
push
fs
xchg
aad
retf
hlt
mov
call
or
and
add
popf
xchg
imul
sbb
outs
lods
lods
imul
adc
imul
and
jge
mov
jne
push
popf
call
pusha
add
jl
push
sub
pop
ss
sbb
scas
pop
imul
cld
sub
dec
fidivr
pop
lods
add
test
inc
xor
jg
adc
xor
xor
dec
push
adc
add
sbb
adc
ret
pop
mov
inc
outs
inc
jb
push
push
dec
sqrtps
imul
pop
(bad)
add
jge
adc
lds
jo
imul
imul
inc
addr16
xor
pusha
dec
dec
pop
pop
jne
adc
dec
inc
daa
add
hlt
adc
dec
pop
mov
das
aad
mov
or
jnp
out
jae
mov
xor
adc
inc
inc
inc
jp
push
bnd
fwait
(bad)
lahf
pop
push
bound
or
and
dec
or
shl
push
clc
or
xor
out
lods
sahf
push
jo
or
jb
sbb
push
sbb
push
in
or
cmp
into
or
mov
sub
cmp
js
mov
jo
jle
imul
jae
pop
jne
or
ins
or
or
or
inc
and
jns
adc
mov
lods
jae
sbb
sahf
cmps
daa
or
mov
jae
in
push
outs
or
jp
push
daa
mov
bound
jae
jno
sbb
mov
push
dec
jns
xor
lods
pop
dec
dec
push
cmp
sub
or
inc
adc
xchg
bound
pop
push
ror
add
test
fstp
mov
push
lds
ret
and
adc
add
and
or
adc
pop
adc
sub
pop
sbb
ds
adc
sbb
popa
sbb
mov
fs
push
out
dec
push
pop
inc
shl
jle
add
xchg
sbb
mov
popf
push
leave
test
push
mov
push
popf
daa
push
push
pop
add
pop
adc
push
push
loope
add
xchg
fist
fsub
je
push
inc
jns
or
adc
imul
push
adc
dec
in
add
cld
add
sub
and
mov
push
or
mov
add
or
inc
add
add
inc
add
sbb
popf
in
cmp
xor
lock
mov
(bad)
ficom
add
nop
pop
inc
dec
or
sub
jl
push
repz
ds
xchg
mov
dec
cmp
sbb
mov
cld
clc
cdq
addr16
loopne
add
mov
sbb
cwde
pop
jns
add
pusha
sbb
push
ins
jae
sub
add
(bad)
fmul
xor
mov
nop
aas
mov
das
adc
nop
or
pop
pop
mov
ror
aam
sets
pop
or
pop
rol
inc
add
nop
add
push
add
xor
mov
pop
cld
and
leave
mov
int3
(bad)
push
sbb
aaa
ret
xor
sbb
pop
pusha
and
mov
ja
adc
in
mov
and
mov
mov
inc
les
add
cs
loopne
shl
adc
cmp
or
jle
xchg
loopne
movzx
fdivr
call
jge
fstp
cmp
sub
je
dec
jne
std
outs
sbb
and
jb
je
(bad)
repnz
mov
cmp
mov
adc
xor
cmp
sbb
xchg
nop
out
sub
xlat
add
int3
jecxz
jmp
jmp
dec
sbb
and
and
shl
inc
sub
mov
xlat
xor
aaa
movs
fld
or
inc
jmp
xchg
xchg
xchg
inc
ret
add
or
add
lods
cld
jae
mov
icebp
fistp
cmp
mov
mov
pusha
mov
fcom
inc
call
xor
fwait
mov
mov
(bad)
das
lods
test
cmp
shr
fsub
sbb
add
push
imul
adc
loopne
and
or
popw
pop
aas
and
loopne
dec
cmp
xor
mov
out
std
dec
fsub
mov
mov
mov
adc
ins
xor
mov
mov
mov
mov
inc
sbb
fcmovnb
mov
add
cld
jbe
sub
jmp
xor
sti
stos
scas
lods
mov
mov
mov
pop
mov
cmp
mov
jnp
xchg
or
lahf
adc
add
cmp
mov
ss
sahf
jmp
add
push
cmps
aaa
ret
aaa
leave
or
adc
call
gs
js
or
xchg
add
mov
test
je
aas
(bad)
add
dec
cmp
add
mov
fist
test
and
cwde
int
xchg
mov
inc
xor
inc
imul
pop
les
pop
add
adc
sub
mov
adc
adc
sbb
lea
aad
fdivr
loopne
or
mov
ret
aaa
leave
add
pop
leave
push
add
out
sbb
sbb
ss
mov
adc
or
pusha
cld
loop
out
inc
out
mov
push
mov
fnstcw
test
add
sub
sub
cmovo
aas
adc
xchg
or
sbb
mov
add
pop
mov
adc
push
pusha
aaa
and
cmp
clc
and
leave
ins
int
cmp
sub
enter
cmp
cmp
adc
add
add
add
or
push
pop
adc
cmp
repnz
or
push
or
or
daa
dec
sahf
sbb
jns
in
and
and
and
adc
dec
sahf
cmp
adc
adc
in
xchg
pop
xor
xor
xor
dec
sahf
cmp
sbb
sbb
sbb
xchg
daa
ds
push
adc
in
daa
dec
inc
ds
jl
clc
mov
and
mul
pop
or
sub
div
mov
not
not
pmaxsw
cmp
neg
cmp
not
not
pop
mul
push
not
not
imul
sar
adc
adc
adc
mul
push
fcom
not
not
sar
adc
pmaxsw
adc
adc
adc
push
fadd
cmp
adc
adc
jo
out
rcl
adc
adc
fadd
adc
daa
dec
sahf
in
adc
inc
das
inc
cmp
in
xchg
cmp
ds
aas
dec
pop
fs
outs
jno
push
hlt
mov
loop
add
outs
adc
das
adc
push
and
ficom
mov
xlat
adc
add
mov
inc
lods
in
mov
and
test
fisttp
sub
mov
fld
cmp
jl
mov
jmp
sbb
or
arpl
jg
daa
adc
add
test
jge
sub
add
jmp
pop
or
clc
jl
mov
mov
push
xor
lock
cmovo
scas
pop
addr16
pop
push
ficomp
ret
push
or
data16
ror
mov
dec
or
push
push
pop
fsub
mov
xor
inc
push
push
mov
xor
in
xor
adc
inc
nop
and
inc
xchg
ins
and
cwde
inc
fcom
pop
aad
pop
and
push
inc
je
enter
rcr
aaa
and
mov
adc
pop
sahf
cld
rcr
cld
inc
fs
pushf
push
pop
cmp
hlt
shl
xor
xor
and
dec
adc
imul
sub
push
cmps
inc
xor
ret
mul
je
jne
movs
inc
xor
mov
sbb
sbb
and
xor
add
sub
and
xor
xor
test
test
cmp
prefetch
or
fisttp
cmp
setae
add
sbb
sbb
mov
push
add
mov
jne
or
(bad)
in
push
retf
adc
outs
push
push
dec
clc
inc
push
jb
ja
dec
jo
in
mov
and
in
and
pusha
jg
retf
hlt
sar
pop
cld
jg
aas
xor
mov
inc
je
mov
cs
jg
pop
aas
call
popf
xor
lock
xchg
mov
bound
clc
jg
xchg
aas
js
stos
mov
or
or
cwde
(bad)
and
xchg
enter
mov
pop
das
mov
jl
pop
add
fcmovnu
cmc
les
adc
pop
sahf
jnp
daa
adc
mov
sti
lods
push
push
dec
fdivr
and
or
pop
(bad)
push
jecxz
sbb
and
sub
inc
add
jo
imul
nop
push
or
je
add
add
out
mov
push
outs
add
or
outs
push
push
xchg
xor
push
loopne
pop
dec
out
sub
das
ss
nop
(bad)
sbb
push
xchg
mov
adc
push
ins
mov
sti
out
cmp
jg
mov
pushf
or
cli
mov
or
call
mov
test
pop
loopne
lock
mov
dec
dec
add
sub
sub
push
sub
mov
loope
pusha
ret
push
aas
cs
bound
jo
sbb
jae
mov
mov
xchg
int3
or
add
push
dec
enter
xchg
mov
xor
dec
in
test
pop
push
sbb
imul
pusha
shl
push
jb
pop
popa
push
sub
sbb
xchg
das
ror
mov
lds
jnp
aam
dec
aas
pop
adc
add
dec
pusha
dec
sbb
xor
movs
push
lock
jg
lock
and
rol
pop
jle
mov
popa
outs
pop
pop
pandn
add
enter
not
outs
dec
ja
daa
and
adc
push
sbb
loopne
dec
clc
jb
sub
mov
jo
out
adc
push
loope
push
jg
mov
push
and
inc
inc
sti
loopne
add
or
sbb
cmp
add
sub
or
inc
ffreep
push
push
push
sbb
xor
xchg
mov
nop
jae
sbb
pusha
imul
cmp
jbe
clc
test
rol
cmp
sub
sbb
and
inc
ret
adc
adc
lds
mov
(bad)
inc
dec
push
mov
pop
xchg
jbe
mov
dec
xchg
push
sub
or
bound
fild
inc
ss
mov
js
idiv
cmps
jle
adc
cmp
push
call
adc
test
daa
leave
add
xor
div
ret
ja
cdq
sbb
push
in
fwait
mov
je
xor
pop
jle
cmp
outs
jae
sbb
xchg
mov
test
inc
inc
push
inc
adc
mov
ja
xchg
or
push
dec
jge
shl
sbb
outs
iret
std
fcom
sbb
jbe
xchg
pavgb
shl
or
in
pop
mov
cmp
(bad)
sub
test
jl
in
sbb
push
outs
loopne
adc
mov
or
xor
mov
mov
clc
xchg
mov
je
inc
mov
xor
in
in
mov
movs
mov
jge
mov
mov
ss
daa
pushf
pop
add
arpl
das
pop
add
imul
je
xor
pop
inc
xchg
mov
scas
pop
dec
sub
pop
cmp
xor
call
mov
in
cmp
or
xchg
ret
add
jl
mov
loopne
push
push
mov
inc
push
add
xor
add
out
lock
xor
mov
aaa
mov
mov
inc
pop
pop
fistp
pop
jo
addr16
inc
nop
pop
cmps
imul
hlt
fistp
js
and
pop
cmp
lods
push
or
sbb
pop
fwait
inc
out
cmp
inc
ss
adc
jp
pop
addr16
jb
adc
fwait
xor
xor
adc
in
xchg
or
and
mov
pop
clc
adc
pop
je
push
aaa
out
or
stos
fsub
inc
pop
jo
es
inc
in
pop
es
cmps
dec
mov
hlt
pushw
pop
fst
push
(bad)
mov
call
stos
push
out
std
ja
jb
fsubr
mov
jge
pop
ud1
pop
mov
gs
retf
jb
xor
stos
leave
or
sub
bound
lock
clc
cmp
je
mov
dec
push
inc
add
sub
mov
(bad)
loopne
inc
aas
fadd
neg
rcr
nop
pop
fcomp
push
jo
fdivr
cli
sub
int3
jno
mov
inc
ret
inc
js
and
daa
retf
ja
cmps
loopne
in
mov
jnp
(bad)
icebp
sbb
sub
daa
sub
movs
shr
pop
into
std
mov
mov
adc
(bad)
adc
cmps
lock
xchg
frstor
test
xchg
xlat
clc
repnz
pop
mov
inc
pop
fist
ret
out
dec
xor
nop
dec
xor
fs
mov
pop
dec
or
or
push
adc
adc
jae
and
mov
cwde
and
pop
and
xor
sub
and
and
inc
xchg
enter
push
sbb
pop
fs
iret
in
test
lods
ins
enter
jae
int3
je
js
nop
inc
mov
jl
test
mov
xchg
cwde
pushf
pop
out
mov
fdivr
cmp
out
popf
mov
mov
cmp
mov
fs
lods
in
push
mov
lods
je
mov
frstor
mov
int3
fsub
jmp
xchg
retf
movs
fsub
push
jmp
mov
sub
ins
adc
push
or
out
lock
xchg
fild
jecxz
out
stos
push
adc
adc
imul
lock
lds
adc
jge
test
inc
adc
adc
ins
rcl
in
repnz
sbb
mov
shl
nop
adc
dec
ja
adc
mov
stos
pop
mov
inc
loopne
push
sub
xchg
mov
lods
out
hlt
orps
mov
sbb
enter
mov
or
pop
pop
mov
add
jl
or
mov
sbb
push
mov
aam
mov
inc
add
or
ins
loopne
adc
pop
enter
(bad)
push
or
jne
sahf
jb
sar
push
inc
sub
loopne
or
sub
inc
minpd
jl
fs
and
push
mul
sub
arpl
jns
ficomp
cmp
push
das
add
out
mov
outs
xchg
jb
push
push
jle
scas
fisubr
pop
addr16
or
or
(bad)
dec
addr16
popa
out
inc
cli
je
outs
mul
(bad)
sbb
sub
and
add
pop
pop
push
push
int3
out
dec
jb
ficomp
shr
push
xor
cmp
xor
push
pop
ja
test
or
xor
xchg
jne
jp
push
imul
inc
xor
xchg
xor
mov
jmp
pop
mov
sbb
mov
fcomp
stos
and
sub
mov
add
mov
inc
xor
mov
inc
and
mov
dec
repnz
dec
out
xchg
inc
push
ins
(bad)
lock
aaa
pop
pop
adc
fmul
cli
or
ins
sub
test
daa
and
cmp
enter
mov
sub
lahf
xor
rcl
neg
enter
adc
aaa
mov
ja
pop
retf
dec
inc
cmps
xchg
aaa
int3
psrlw
inc
daa
add
loopne
aad
shl
and
push
sub
sti
or
push
cld
mov
xchg
(bad)
mov
sti
dec
or
mov
mov
mov
pop
ror
clc
stos
inc
clc
push
popa
push
push
call
test
or
cld
into
push
or
sbb
add
lds
and
pop
mov
fistp
mov
repnz
fadd
std
or
sahf
add
mov
mov
iret
sbb
ret
ret
push
into
mov
jmp
jmp
out
sti
inc
sub
mov
inc
das
pop
out
sub
pop
ds
pop
add
inc
ret
rol
sub
cmc
fisttp
fadd
jmp
iret
fiadd
and
xchg
mov
sbb
(bad)
push
stos
push
ja
ja
cmc
das
imul
arpl
mov
jg
inc
dec
push
outs
gs
ins
in
pop
das
sbb
inc
dec
call
iret
push
cmp
pop
outs
fdiv
adc
sbb
and
call
lods
inc
cmp
nop
sub
xchg
xchg
cmp
sbb
dec
push
sti
sbb
ja
push
sbb
xchg
das
cdq
dec
mov
aaa
hlt
dec
test
cmp
iret
sti
cmps
imul
add
call
inc
or
inc
mov
mov
rcr
push
or
jle
mov
in
cmp
cmp
gs
cmp
test
sbb
push
or
dec
jne
ds
std
idiv
mov
xor
xor
shl
mov
call
inc
cmps
mov
push
(bad)
cmp
push
fiadd
jl
sub
mov
test
cmps
fs
and
cmp
or
jo
call
adc
std
mov
jmp
push
call
mov
daa
mov
dec
sbb
jle
loopne
call
xor
fidivr
dec
jmp
repnz
pop
fisttp
and
mov
cmp
fisttp
inc
inc
call
mov
push
sub
ins
rcr
add
nop
rol
outs
outs
lock
push
inc
cmps
shl
imul
inc
xor
outs
add
add
test
add
(bad)
jg
aas
fisub
into
movs
cmp
jne
xchg
sub
cwde
jns
iret
repz
(bad)
in
sub
cmp
jo
out
pop
pusha
in
movs
data16
sbb
xchg
and
mov
bound
cmp
and
inc
push
dec
(bad)
mov
jb
pop
mov
aas
pusha
push
jo
inc
jb
pop
or
cwde
mov
mov
xchg
pop
and
shl
add
and
ins
pusha
add
aas
and
xchg
pop
xor
and
leave
pusha
and
loopne
das
push
adc
inc
in
mov
and
xchg
mov
and
inc
jb
dec
jo
cs
mov
and
lock
loopne
mov
inc
jo
adc
dec
pop
and
rol
push
or
or
xor
lods
xor
cmp
cmp
out
push
retf
int3
enter
enter
fcomp
fxch
(bad)
fidiv
or
(bad)
fnstsw
loope
add
in
in
in
loope
fidivr
cmp
adc
mov
dec
adc
add
daa
lahf
jl
pushf
or
ret
mov
adc
and
stc
adc
sbb
imul
repnz
mov
and
inc
mov
call
(bad)
sub
test
out
sub
jecxz
jg
in
add
leave
sbb
mov
cmp
jg
out
fidivr
call
mov
bound
mov
jp
mov
xlat
fadd
outs
xor
xchg
push
or
push
push
test
into
sbb
ror
mov
push
pop
test
enter
mov
jmp
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
pop
inc
fisttp
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
(bad)
(bad)
(bad)
aad
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
(bad)
(bad)
jmp
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
(bad)
(bad)
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
(bad)
(bad)
(bad)
inc
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
mov
xchg
iret
inc
bound
ds
push
cmps
scas
mov
sbb
mov
add
cmp
xor
in
cmp
sahf
(bad)
(bad)
(bad)
call
and
push
movs
mov
popa
mov
fsub
addr16
repz
mov
sub
(bad)
call
push
pusha
les
outs
bound
xor
cmp
cmp
gs
dec
fidiv
and
popa
je
xor
lock
xor
ss
cmp
inc
inc
inc
inc
inc
push
sar
imul
pop
cdq
push
adc
jns
out
sub
sub
xor
inc
pop
push
cmp
out
push
(bad)
repz
repz
jp
lahf
push
pushf
cmp
test
push
mov
shl
jae
scas
push
shr
call
pop
hlt
cdq
call
cs
sbb
outs
sar
cmp
push
aas
cmp
sahf
jnp
push
int3
test
lea
pop
sbb
pop
push
lods
fdiv
jo
int3
mov
call
fcomp
push
in
sub
mov
push
pmuludq
jne
or
outs
sbb
sbb
loopne
in
jo
jo
je
cmp
aaa
pushf
mov
js
sub
aaa
pushf
loopne
iret
cmp
inc
js
js
loope
or
unpcklps
mov
dec
sbb
jl
cs
lds
into
scas
cmp
jl
jl
mov
jl
lea
mov
mov
sbb
mov
call
adc
or
add
sbb
or
add
inc
(bad)
push
adc
add
std
fbstp
pop
(bad)
pop
add
mov
add
sbb
sbb
mov
cmps
sbb
adc
std
sbb
jecxz
inc
ins
neg
adc
mov
lahf
push
push
jo
shl
mov
cmps
pusha
cmps
push
test
test
out
jl
or
push
les
mov
fld
cwde
scas
push
mov
outs
push
sub
inc
loope
inc
sub
ret
lods
ret
mov
adc
outs
ret
xor
(bad)
pushf
pushf
pop
test
pushf
pushf
adc
adc
cmp
push
fwait
add
add
push
ss
add
test
xor
xor
sahf
out
sahf
xor
xor
ss
mov
jmp
dec
add
repz
repz
xor
div
add
push
sahf
out
sahf
xor
ss
cmp
iret
jmp
sti
shl
xchg
dec
add
xor
cmp
cmp
sbb
cmp
sti
mov
xor
idiv
xor
dec
pop
iret
repz
cmp
stos
popf
jnp
xor
xor
ss
dec
add
js
loopne
push
cmp
repz
mov
js
idiv
inc
aaa
add
push
cmp
nop
sti
xor
and
dec
idiv
add
mov
loopne
cmp
cmp
fstp
dec
dec
dec
inc
xor
push
inc
inc
adc
repz
inc
inc
inc
dec
out
ficom
xor
xor
or
xor
out
sahf
out
xor
xor
xor
adc
xor
xor
sahf
out
xor
fistp
out
xor
xor
xor
ficom
sbb
xor
xor
out
xor
out
sar
jle
ss
jns
outs
sahf
out
fidiv
jle
aaa
aaa
aaa
aaa
out
shl
jle
sbb
jns
cmp
cmp
iret
out
ficom
cmp
cmp
clc
icebp
mov
stos
inc
cmp
pop
(bad)
mov
fild
cmp
sti
mov
inc
push
inc
inc
inc
pop
cld
js
inc
and
xor
das
dec
xor
jmp
hlt
cmp
jnp
add
inc
inc
inc
das
jle
jp
inc
sub
xor
xor
retf
inc
pop
cmp
repz
inc
push
inc
inc
adc
pop
(bad)
mov
xor
loope
sar
fild
dec
lahf
fdivp
jae
add
inc
mov
icebp
loop
mov
xor
jl
dec
cmp
jecxz
jmp
jnp
cmps
cmp
add
inc
sbb
sub
inc
dec
inc
ss
sbb
inc
imul
cs
arpl
pusha
test
mov
mov
adc
cmp
sbb
xlat
xchg
and
inc
mov
movs
pusha
es
add
pusha
out
iret
repz
pop
push
jo
or
cwde
mov
iret
repz
mov
cmp
loopne
lock
adc
iret
repz
or
sbb
sub
cmp
repz
inc
dec
push
pop
repz
repz
push
inc
adc
(bad)
ret
xchg
xchg
gs
push
scas
and
push
dec
xchg
add
loop
fimul
div
repz
test
and
jmp
or
scas
jge
pop
add
add
(bad)
jp
mov
xchg
inc
cs
fdivr
xlat
add
and
add
jg
push
add
into
add
xchg
add
add
dec
add
add
add
add
sub
mov
lock
icebp
(bad)
pop
inc
and
(bad)
adc
adc
mov
adc
add
je
outs
xchg
test
xchg
xchg
push
pop
or
(bad)
div
add
add
add
fcmovbe
adc
add
pop
xlat
popf
imul
das
jbe
pop
pop
pop
(bad)
sti
jnp
in
or
or
push
or
or
das
or
or
in
(bad)
or
or
add
repz
pop
mov
clc
push
adc
repnz
dec
iret
repz
push
clc
sahf
out
adc
sub
cmp
xchg
mov
in
and
popa
mov
add
out
outs
dec
or
or
inc
mov
movs
mov
push
push
inc
add
xchg
jge
icebp
out
(bad)
inc
pop
cmovo
adc
pop
jmp
pop
sti
mov
pop
(bad)
retf
xchg
adc
(bad)
(bad)
cmp
or
icebp
or
cld
mov
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
int
aaa
inc
pop
scas
scas
stos
movs
in
bound
dec
mov
mov
push
xor
cmp
jmp
(bad)
(bad)
(bad)
call
mov
dec
jge
dec
pushf
sbb
aam
mov
push
jp
inc
inc
xchg
inc
(bad)
(bad)
jmp
add
cmp
ret
(bad)
dec
dec
test
push
cdq
iret
sub
(bad)
jne
mov
or
sub
or
hlt
dec
out
or
and
push
jbe
xor
dec
adc
ja
pop
jnp
cmp
inc
daa
jo
js
imul
fisubr
push
xchg
(bad)
nop
ja
mov
iret
test
ror
pusha
js
adc
push
fsubr
dec
js
daa
faddp
mov
or
call
lock
sbb
push
xor
fidiv
out
mov
dec
mov
(bad)
das
xor
out
push
jnp
mov
cwde
movs
aas
out
neg
das
les
(bad)
jnp
jnp
out
pop
loopne
daa
js
pop
pushf
sub
adc
test
test
sub
mov
jle
push
cs
mov
das
(bad)
mov
and
loopne
cwde
pop
imul
das
ins
es
push
mov
je
bound
add
cs
adc
mov
mov
fadd
call
es
popa
inc
dec
out
mov
push
xchg
fs
js
lock
in
mov
paddsb
loop
sub
ja
pop
out
pop
dec
outs
push
push
push
jl
movs
inc
push
push
fldcw
bsf
jbe
addr16
jp
sbb
aas
add
dec
mov
in
pop
and
add
xor
mov
outs
sysenter
iret
jg
aad
mov
or
jge
cmp
nop
jl
and
inc
pop
pop
in
movs
mov
add
(bad)
in
mov
mov
aam
fmul
fmul
adc
lock
xor
les
int3
sysret
jne
or
addr16
scas
aas
iret
mov
inc
mov
loopne
inc
pop
add
xor
add
mov
dec
add
inc
mov
iret
repz
je
test
add
call
dec
aam
repz
ja
dec
inc
mov
jl
iret
repz
cwde
cli
mov
fdivr
sahf
out
cmp
neg
idiv
sahf
out
cmc
pop
hlt
xor
jns
out
repnz
jns
lock
out
and
inc
neg
repz
pop
in
dec
jmp
in
int
push
jmp
lods
shl
adc
in
cmp
and
lods
(bad)
pop
enter
rol
dec
push
cmp
and
adc
pop
push
push
xlat
pop
jnp
pop
and
nop
aas
push
mov
test
mov
int3
rcr
call
loopne
cmp
push
xor
ficom
fimul
or
push
add
cmp
add
prefetcht0
sahf
out
ss
cmp
adc
sahf
out
or
out
fcomp
outs
push
sbb
push
adc
push
or
iret
sar
or
add
repz
jae
push
sbb
fadd
push
push
cld
sbb
out
pop
dec
ficomp
ins
push
bswap
repz
cs
adc
iret
repz
hlt
push
adc
inc
push
cmp
xor
push
cmp
test
pop
xlat
icebp
push
xlat
jmp
rcr
nop
cld
push
aam
jg
pop
jae
out
push
pop
ds
push
fdiv
bound
fwait
jge
push
(bad)
in
push
iret
mov
dec
ror
loop
mov
or
sub
mov
push
xchg
sahf
pop
dec
mov
fistp
add
sar
int3
push
sbb
scas
loopne
cs
in
xchg
fs
into
pusha
inc
loope
cmp
push
cmp
fdivr
push
iret
jle
into
iret
jnp
fimul
test
add
push
scas
fs
push
pop
ins
push
mov
fimul
mov
(bad)
mov
jmp
daa
clc
mov
dec
mov
cdq
dec
stc
addr16
mov
jp
jmp
(bad)
push
mov
dec
das
sahf
pop
movaps
iret
cmp
into
sahf
push
rol
xchg
ds
mov
sahf
les
(bad)
mov
add
pop
psignb
into
push
push
cmc
cld
and
mov
test
inc
lods
pop
mov
fild
setl
aas
ret
out
add
sub
dec
jno
mov
add
and
js
cmp
(bad)
xchg
push
push
das
fisubr
push
sbb
or
sub
mov
sahf
sahf
loopne
clc
push
pop
pop
int
push
add
sahf
aas
pop
(bad)
fst
add
push
mov
push
push
cli
out
call
pop
push
loopne
or
xor
sbb
int
push
mov
mov
out
mov
push
cmp
or
sar
inc
xor
rol
push
neg
add
push
nop
out
nop
ds
mov
jo
xchg
mov
ds
push
stos
mov
data16
(bad)
push
cli
into
xchg
pop
setnp
les
and
sahf
std
add
mov
xor
or
pusha
xchg
pusha
dec
mov
dec
dec
lock
stos
int
dec
int
daa
cli
cmp
into
push
(bad)
ds
jge
lahf
loope
mov
into
push
out
push
cli
call
adc
shr
(bad)
mov
xchg
sbb
push
retf
push
stc
cmp
shl
mov
sub
fsubp
cli
mov
jl
out
std
dec
push
cmp
or
xor
push
and
push
jl
imul
push
inc
mov
(bad)
jo
dec
lahf
jecxz
clc
push
stos
call
sti
cwde
pop
push
out
out
test
push
xchg
jo
out
push
aad
pop
push
icebp
imul
je
loope
cld
fcmove
rcr
push
frstor
loopne
or
scas
dec
enter
push
add
test
sbb
pop
pusha
dec
push
hlt
or
loope
inc
dec
adc
jl
div
mov
hlt
outs
push
push
mov
outs
sub
lock
push
sub
icebp
ss
mov
ds
outs
sbb
push
nop
xor
in
mov
outs
push
push
mov
add
mov
mov
fdivr
imul
shl
inc
bound
or
je
pop
sub
mov
add
out
push
push
cmc
scas
mov
and
cmp
dec
pop
add
(bad)
rol
or
jl
dec
push
fisttp
add
js
sahf
daa
add
scas
push
add
xor
out
dec
clc
sbb
cmp
sbb
pop
push
mov
jne
pop
push
mov
or
push
mov
jns
out
mov
mov
sahf
int3
fcomp
add
xchg
push
sub
mov
cmp
pusha
add
adc
daa
cmp
dec
test
je
add
mov
inc
in
push
adc
mov
or
bound
outs
or
add
jmp
adc
add
add
adc
sbb
add
(bad)
mov
sbb
jge
lods
jle
sar
out
add
(bad)
sbb
sbb
sub
in
and
or
and
mov
add
mov
lds
rcr
sub
and
xor
xor
push
mov
push
cmp
xor
xor
dec
gs
ins
outs
jne
and
loopne
and
jns
adc
dec
popa
jb
and
cmp
inc
and
lahf
in
add
sbb
mov
pop
add
add
jbe
and
add
add
loope
cmp
das
pop
mul
jae
inc
pop
pop
add
iret
mov
cmp
pop
add
adc
adc
sbb
pop
lds
test
or
adc
pop
push
jo
lods
or
fmul
dec
or
push
or
sbb
loopne
lea
mov
sbb
nop
dec
pop
cmp
mov
cmp
rol
adc
adc
push
maskmovq
ja
or
push
dec
push
lock
or
push
adc
adc
push
je
xor
enter
out
jle
push
fs
and
test
pop
test
sar
inc
push
call
sbb
cwde
xchg
sar
push
push
jl
cmp
fcomp
out
test
or
mov
jnp
jnp
jle
push
push
push
adc
mov
out
mov
(bad)
dec
push
bound
and
movs
push
add
jo
jns
add
jle
or
out
mov
xchg
inc
jp
cmp
aam
adc
loope
jnp
push
sub
mov
lahf
mov
and
mov
add
ds
jnp
xchg
(bad)
xor
jbe
ss
dec
push
jnp
out
mov
lods
push
fild
mov
or
pop
push
push
push
pushf
(bad)
arpl
jle
neg
jnp
ds
fdivr
sbb
outs
push
cs
mov
push
push
push
mov
cld
call
mov
inc
ds
jnp
jmp
and
mov
ja
add
pop
push
sbb
push
mov
jns
cmp
sar
imul
sub
mov
pop
mov
dec
push
shl
mov
call
adc
adc
push
xor
push
and
push
stos
push
pop
test
inc
push
jmp
push
sbb
push
cmp
push
(bad)
ins
push
sub
inc
mov
mov
cli
jmp
dec
push
push
or
call
ret
cmps
or
jl
sub
or
call
into
or
(bad)
jnp
push
or
jmp
jne
loopne
scas
or
dec
push
imul
sub
adc
push
aaa
mov
into
jmp
daa
push
scas
push
(bad)
scas
js
xchg
inc
push
out
call
adc
or
push
fdivrp
out
jne
fisubr
das
push
mov
dec
push
(bad)
jns
pop
push
inc
mov
or
xchg
leave
test
or
pop
leave
test
nop
jmp
test
or
movs
add
mov
aad
add
pop
leave
test
int
nop
or
add
popf
test
jns
pop
leave
std
ret
mov
or
xchg
leave
test
or
pop
retf
stos
add
fist
leave
test
or
cmps
add
mov
xlat
mov
and
leave
test
iret
mov
add
lahf
test
mov
jle
sahf
pop
push
out
add
dec
sbb
adc
add
adc
xor
adc
dec
push
and
add
add
add
add
sbb
mov
push
imul
add
call
or
rol
das
sbb
jo
adc
mov
fisubr
data16
jo
int3
push
push
mov
and
inc
pop
cvtdq2ps
clc
push
and
ficomp
push
arpl
ret
add
dec
add
mov
and
je
outs
fs
add
jmp
popa
ins
imul
test
xor
sub
add
jb
push
imul
ins
(bad)
mov
ins
mov
sub
scas
and
cmp
mov
sbb
addr16
ins
outs
outs
js
outs
jns
and
fs
fild
jns
(bad)
div
out
and
add
imul
loop
xor
dec
pusha
jae
inc
and
sub
ficomp
sub
das
mov
sub
retf
arpl
pop
or
adc
popa
add
or
adc
fs
cmp
sub
push
pop
mov
popa
add
arpl
cmp
pop
cmp
mov
or
sub
jle
push
movs
push
test
not
mov
or
push
mov
(bad)
jecxz
adc
in
in
adc
adc
call
dec
mov
sub
out
sub
sbb
mov
add
xchg
inc
test
push
(bad)
add
out
add
jecxz
iret
jmp
rol
push
add
sbb
clc
cmp
repz
sbb
inc
add
xchg
push
add
add
add
add
add
or
pop
cmp
cmp
or
or
test
cmp
or
add
mov
inc
aaa
not
adc
or
or
or
adc
add
add
(bad)
sbb
sahf
int3
sub
ins
in
sbb
sahf
out
pushf
pop
fdivr
out
sahf
out
cld
add
sahf
ret
(bad)
adc
out
xchg
push
shl
mov
jns
out
repnz
sahf
retf
push
sbb
out
call
sahf
out
cli
push
xchg
out
sahf
(bad)
cmps
data16
jns
out
xchg
push
(bad)
ss
jns
out
test
dec
sahf
out
sahf
into
cs
outs
out
push
jns
out
sahf
pop
fidivr
mov
jle
add
sahf
shl
popa
loope
jns
out
xchg
push
shl
mov
jns
out
icebp
or
sahf
leave
sub
sahf
out
cdq
pop
fnstcw
mov
jns
add
jns
lds
jns
out
xchg
push
aad
mov
jns
out
cmc
or
jns
int
lods
ins
in
sbb
popf
pop
fnstsw
out
std
adc
add
repz
push
push
push
rcl
xor
repz
mov
jae
repz
repz
mov
repz
mov
retf
retf
sub
repz
stos
stos
imul
iret
repz
sbb
fwait
iret
repz
fwait
pop
pop
fcmovnu
cmp
repz
mov
cmp
repz
sti
pop
pop
xchg
repz
xchg
mov
cmp
cmps
cmps
addr16
repz
pop
pop
xchg
iret
repz
xchg
push
push
xlat
xlat
aaa
cmp
repz
mov
ja
repz
repz
(bad)
jg
(bad)
dec
dec
iret
iret
das
cmp
repz
scas
scas
outs
outs
repz
repz
out
pop
pop
lahf
iret
repz
lahf
pop
pop
(bad)
aas
cmp
repz
mov
mov
xor
and
jns
out
adc
jo
sahf
cmps
jns
push
dec
sub
out
sahf
out
cmp
inc
sahf
out
sahf
and
adc
xor
out
fidivr
add
sar
arpl
dec
adc
add
inc
dec
jnp
cdq
push
test
xor
cmp
jecxz
push
push
into
repz
push
add
or
repz
jmp
adc
adc
sbb
pop
xor
imul
add
add
or
in
dec
or
or
and
mov
gs
adc
adc
enter
sbb
leave
sbb
sbb
xchg
pop
xchg
sbb
xchg
mov
addr16
add
cs
in
adc
push
pop
test
inc
ret
mov
xor
sbb
test
iret
dec
inc
or
les
push
out
mov
adc
sbb
out
add
push
xor
inc
jns
out
push
pusha
jo
mov
shl
fisttp
iret
adc
mov
mov
add
addr16
gs
cvttps2pi
out
js
dec
jecxz
add
fsub
adc
(bad)
dec
pop
ja
popa
push
out
mov
les
(bad)
hlt
(bad)
(bad)
(bad)
jmp
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
push
out
sbb
mov
repnz
repz
test
ficomp
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
(bad)
(bad)
(bad)
inc
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
(bad)
(bad)
inc
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
(bad)
(bad)
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
(bad)
(bad)
(bad)
push
iret
shld
sub
mov
(bad)
and
or
adc
(bad)
jmp
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
dec
movs
in
lahf
xor
mov
js
stc
jl
test
xchg
sbb
loope
dec
ins
or
pop
arpl
hlt
push
imul
mov
sbb
xor
dec
sub
push
ins
jnp
add
shl
(bad)
(bad)
dec
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
loope
ror
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
cld
(bad)
(bad)
fist
movs
sti
hlt
(bad)
shr
imul
mov
sar
(bad)
mov
add
pop
dec
or
cmp
add
(bad)
jg
add
xchg
or
and
test
or
mov
popa
into
push
(bad)
(bad)
(bad)
(bad)
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
(bad)
inc
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
cmps
(bad)
(bad)
dec
arpl
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
jl
(bad)
(bad)
push
xchg
(bad)
shl
add
inc
push
imul
(bad)
(bad)
(bad)
inc
out
imul
aam
loopne
ror
int3
dec
frstor
fistp
(bad)
(bad)
(bad)
dec
aad
mov
call
xchg
shl
push
repnz
addr16
(bad)
(bad)
(bad)
jmp
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
(bad)
(bad)
jmp
jns
imul
and
shr
ss
push
xchg
ja
int3
add
(bad)
(bad)
(bad)
(bad)
mov
das
es
lds
or
sub
mov
cmps
call
ret
sar
(bad)
(bad)
push
sbb
ret
es
pushf
mov
ins
add
ss
push
cmp
jb
add
adc
mov
(bad)
(bad)
push
or
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
(bad)
(bad)
(bad)
(bad)
sbb
int
mov
mul
ja
outs
ja
mov
out
cli
jo
(bad)
(bad)
jmp
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
(bad)
(bad)
(bad)
(bad)
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
dec
shr
or
inc
lock
aaa
push
scas
mov
fidivr
mov
jmp
(bad)
(bad)
call
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
jmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
sbb
and
ret
push
sub
(bad)
mov
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
(bad)
(bad)
(bad)
push
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
(bad)
(bad)
(bad)
jmp
aaa
xlat
mov
sbb
test
sbb
add
call
(bad)
(bad)
push
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
(bad)
(bad)
call
call
gs
fisubr
inc
inc
sub
imul
jo
cmc
(bad)
(bad)
jmp
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
(bad)
jg
pop
add
hlt
div
sub
xchg
sbb
xor
pop
nop
sti
mov
(bad)
(bad)
(bad)
inc
cmp
mov
(bad)
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
sub
push
adc
push
lea
fnstcw
mov
inc
mov
and
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
mov
pop
mov
mov
lea
push
cwde
xlat
ficom
test
inc
sar
loope
xchg
retf
les
jb
out
imul
push
inc
lahf
test
clc
(bad)
call
adc
push
sbb
adc
and
inc
and
inc
out
and
dec
push
fs
dec
mov
mov
and
cmps
xor
mov
lods
out
(bad)
(bad)
mov
fcom
lahf
ins
mov
xchg
adc
jle
push
(bad)
(bad)
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
(bad)
(bad)
(bad)
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
test
(bad)
(bad)
dec
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
(bad)
(bad)
inc
pop
repz
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
call
mov
pop
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
add
(bad)
(bad)
(bad)
call
add
mov
rcl
xchg
push
(bad)
push
hlt
out
les
fdecstp
aaa
cld
or
scas
test
sbb
inc
xor
push
retf
call
push
outs
sbb
sub
loope
fisub
lds
push
call
dec
in
(bad)
(bad)
push
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
(bad)
jmp
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
mov
dec
cmc
shr
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
call
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
(bad)
(bad)
call
les
adc
sub
dec
add
sar
push
or
cmp
(bad)
(bad)
call
fcom
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
(bad)
(bad)
(bad)
call
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
(bad)
(bad)
inc
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
(bad)
(bad)
mov
(bad)
sbb
mov
mov
in
and
(bad)
(bad)
(bad)
out
out
mov
shl
es
xchg
aas
mov
adc
out
(bad)
(bad)
dec
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
xor
aas
mov
and
push
push
add
test
pop
mov
(bad)
(bad)
push
mov
ret
mov
lea
push
adc
(bad)
cmp
(bad)
test
pop
cmp
or
stc
sbb
sub
mov
inc
(bad)
(bad)
(bad)
dec
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
(bad)
call
mov
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
(bad)
(bad)
(bad)
jmp
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
(bad)
(bad)
(bad)
(bad)
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
jmp
fsub
leave
pop
sub
and
mov
(bad)
(bad)
(bad)
jmp
adc
mov
sub
fidivr
sub
ds
sbb
sub
call
lods
mov
call
pop
cmp
xor
jb
and
(bad)
(bad)
(bad)
call
jb
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
cli
mov
retf
jp
retf
mov
mov
fdivrp
cmp
nop
clc
push
in
es
xchg
pop
in
ja
add
push
or
(bad)
(bad)
(bad)
(bad)
out
je
arpl
sub
shr
aam
cmps
gs
fs
imul
add
xlat
dec
pop
mov
outs
jns
dec
cld
arpl
dec
retf
(bad)
(bad)
(bad)
dec
sbb
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
(bad)
(bad)
call
inc
sub
dec
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
stos
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
(bad)
(bad)
(bad)
mov
sti
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
(bad)
call
out
fsin
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
or
(bad)
jmp
loop
call
mov
stos
jmp
pop
imul
fcom
cld
(bad)
(bad)
(bad)
call
push
push
jmp
sbb
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
jmp
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
dec
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
(bad)
(bad)
push
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
(bad)
(bad)
(bad)
(bad)
(bad)
jle
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
leave
xor
inc
ins
xchg
jg
dec
sbb
ror
mov
xchg
ja
ins
nop
cs
sub
pushf
ds
(bad)
(bad)
jmp
xchg
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
(bad)
(bad)
(bad)
push
cdq
dec
mov
repz
dec
mov
or
(bad)
in
popf
(bad)
(bad)
(bad)
inc
mov
and
mov
push
pop
and
push
adc
fadd
(bad)
call
test
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
(bad)
(bad)
(bad)
(bad)
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
(bad)
(bad)
(bad)
(bad)
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
(bad)
(bad)
(bad)
dec
mov
mov
mov
cmovns
push
dec
adc
mov
mov
call
(bad)
fidivr
pop
pop
mov
jmp
mov
stos
out
scas
pop
cmc
xchg
mov
push
xchg
bound
pop
imul
(bad)
jmp
lds
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
(bad)
(bad)
call
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
(bad)
(bad)
(bad)
dec
jo
lods
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
(bad)
(bad)
dec
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
(bad)
(bad)
cmp
mov
cmp
pop
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
cld
mov
clc
mov
lahf
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
call
shl
mov
(bad)
lds
xchg
lahf
mov
(bad)
mov
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
sbb
call
mul
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
(bad)
(bad)
cmp
adc
shl
cmp
das
retf
jnp
dec
ja
prefetchw
or
(bad)
(bad)
(bad)
push
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
(bad)
(bad)
(bad)
push
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
cmp
aas
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
(bad)
cmps
(bad)
call
inc
addr16
fwait
push
add
in
mov
dec
leave
xor
(bad)
(bad)
jmp
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
jmp
div
mov
clc
inc
add
and
push
cdq
inc
loopne
retf
xor
mov
in
pop
shl
push
mov
inc
aad
in
jmp
(bad)
(bad)
(bad)
jmp
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
(bad)
jmp
or
xchg
movs
loope
mov
sub
dec
dec
cmc
scas
repz
(bad)
(bad)
push
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
mov
xchg
idiv
sub
sbb
repnz
and
sbb
pusha
jle
dec
(bad)
(bad)
push
mov
(bad)
out
mov
pop
push
mov
ret
mov
fldenv
and
(bad)
push
arpl
popa
stc
(bad)
and
push
mov
rol
outs
mov
push
(bad)
(bad)
(bad)
dec
or
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
(bad)
(bad)
push
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
(bad)
(bad)
(bad)
call
inc
push
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
dec
(bad)
stc
mov
mov
lock
imul
ss
test
(bad)
(bad)
push
(bad)
cs
mov
call
mov
loope
into
cs
(bad)
(bad)
fbstp
add
pop
std
pop
jmp
icebp
and
sub
(bad)
(bad)
(bad)
ds
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
(bad)
(bad)
jmp
repz
adc
mov
jle
cmp
pushf
in
(bad)
jmp
adc
add
sbb
cmps
push
data16
jno
ds
outs
sub
mov
(bad)
(bad)
inc
mov
mov
dec
rol
pop
outs
sti
ret
neg
jmp
pop
jmp
int3
jp
or
xchg
popa
mov
fdivrp
ja
xor
cdq
(bad)
(bad)
(bad)
dec
push
mov
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
(bad)
call
(bad)
jle
jl
out
sub
xchg
sbb
mov
repnz
mov
(bad)
mov
aam
ins
fucom
jmp
aam
push
sub
push
imul
std
(bad)
stc
jp
gs
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
call
pusha
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
ins
clc
(bad)
(bad)
(bad)
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
(bad)
(bad)
jmp
mov
enter
mov
mov
mov
mov
and
mov
movs
movaps
mov
sahf
pop
add
fnstenv
das
outs
jl
pop
push
sbb
cmp
(bad)
(bad)
call
cwde
shl
mov
jno
test
lahf
mov
mov
js
leave
les
and
or
sbb
(bad)
(bad)
jmp
mov
xchg
fs
xchg
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
(bad)
(bad)
(bad)
inc
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
jl
cwde
(bad)
jg
fstp
mov
jl
sti
aam
gs
mov
test
(bad)
push
push
into
mov
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
push
outs
frndint
lods
mov
pusha
mov
jae
add
pop
fisttp
push
cld
(bad)
push
daa
add
mov
or
xchg
mov
and
mov
aam
into
(bad)
(bad)
(bad)
jmp
lahf
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
ja
call
inc
es
jecxz
or
xchg
cmp
pop
test
push
iret
(bad)
(bad)
(bad)
dec
xchg
or
popf
or
scas
daa
jge
sahf
mov
setae
mov
push
mul
(bad)
(bad)
(bad)
call
gs
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
jmp
mov
mov
aad
(bad)
mov
push
fadd
les
(bad)
inc
mov
addr16
mov
fisttp
ss
fmul
cld
call
sbb
dec
test
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
(bad)
(bad)
(bad)
(bad)
mov
add
mov
lds
or
sub
add
xlat
jmp
mov
iret
xor
sahf
mov
scas
sbb
in
arpl
es
mov
or
(bad)
(bad)
jmp
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
ror
loope
aad
repnz
mov
fcmovnu
and
aam
inc
push
fiadd
outs
cmp
ja
sbb
out
punpckhdq
push
(bad)
(bad)
(bad)
(bad)
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
(bad)
(bad)
(bad)
inc
ret
es
shl
test
ja
scas
shr
(bad)
pop
fadd
(bad)
(bad)
(bad)
dec
data16
fdivr
lock
mov
iret
jg
mov
jmp
retf
mov
scas
clc
(bad)
call
cmps
mov
xlat
push
xchg
push
ficom
and
addr16
jp
(bad)
jmp
pop
push
sub
or
mov
sub
mov
(bad)
sbb
xor
bound
lods
lds
pop
cmps
xchg
(bad)
(bad)
dec
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
xchg
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
(bad)
(bad)
(bad)
inc
sbb
sbb
ss
call
ins
sbb
inc
aas
(bad)
(bad)
(bad)
dec
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadd
neg
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
pop
cmc
(bad)
dec
sub
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
xor
mov
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
jmp
shr
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
(bad)
(bad)
(bad)
call
xchg
adc
mov
cmp
lds
or
sub
dec
add
inc
xlat
xor
cli
bound
pop
(bad)
(bad)
(bad)
call
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
(bad)
(bad)
(bad)
call
out
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
out
shl
or
add
lahf
loop
cmps
int3
and
aaa
cld
jmp
mov
loope
mov
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
hlt
(bad)
(bad)
(bad)
jmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
(bad)
(bad)
fisttp
fidiv
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
(bad)
push
cli
call
js
cmps
cmp
sbb
or
retf
mov
(bad)
(bad)
(bad)
call
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
xlat
inc
mov
mov
mov
inc
mov
push
ja
cwde
pop
ins
(bad)
adc
dec
or
jle
daa
mov
fnstsw
xor
mov
pop
hlt
push
lds
(bad)
out
hlt
push
out
rcl
pop
mov
test
or
fisubr
add
pop
in
shl
lods
clc
pop
sbb
and
sub
data16
loope
lds
gs
(bad)
jmp
sbb
xchg
sub
in
scas
mov
(bad)
repz
(bad)
(bad)
(bad)
(bad)
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
std
(bad)
(bad)
push
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
jg
cs
xlat
push
scas
xchg
adc
lea
or
mov
dec
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
jmp
add
push
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jmp
fmul
dec
pop
push
cli
jle
jnp
sub
sub
xchg
mov
call
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
(bad)
call
push
aas
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
loopne
ror
(bad)
out
and
loope
or
mov
clc
(bad)
push
mov
inc
out
cmp
ja
fsub
push
jle
hlt
out
lods
(bad)
(bad)
call
aaa
test
mov
adc
xor
add
mov
aaa
add
pop
lods
test
push
retf
ret
lea
dec
push
test
(bad)
(bad)
dec
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
dec
call
sbb
mov
sbb
lods
sbb
popa
fwait
(bad)
(bad)
(bad)
call
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
call
mov
in
push
loopne
(bad)
sub
cmp
xchg
mov
or
(bad)
(bad)
(bad)
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
(bad)
jmp
test
xchg
aad
xor
imul
adc
frstor
in
mov
cmps
daa
(bad)
(bad)
inc
(bad)
es
dec
dec
and
cdq
and
and
adc
(bad)
(bad)
(bad)
jmp
mov
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
sar
(bad)
push
out
jae
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
(bad)
(bad)
(bad)
jg
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
cli
scas
ins
jl
outs
cmp
fisub
nop
jmp
dec
pop
push
repz
arpl
popa
sub
push
push
(bad)
(bad)
jmp
xlat
aam
fs
mov
dec
xlat
retf
and
mov
or
ror
sbb
arpl
dec
sbb
retf
dec
pop
mov
(bad)
(bad)
call
inc
les
scas
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
(bad)
(bad)
jmp
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
adc
(bad)
(bad)
jmp
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
fcomip
(bad)
call
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
out
(bad)
(bad)
inc
xor
jp
add
out
in
paddsb
hlt
popa
call
das
loop
jmp
stos
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
call
adc
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
(bad)
(bad)
(bad)
dec
inc
xchg
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fdivrp
(bad)
(bad)
push
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
sar
(bad)
(bad)
jmp
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
(bad)
call
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
cli
(bad)
dec
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
ins
cld
outs
(bad)
(bad)
push
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
xbegin
(bad)
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
dec
dec
pop
pop
mov
mov
sbb
mov
or
(bad)
inc
pop
push
mov
sbb
int3
push
test
arpl
aad
or
test
and
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
jmp
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
(bad)
push
push
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
(bad)
(bad)
(bad)
mov
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
call
mov
or
mov
mov
out
(bad)
bound
xor
std
outs
cli
popf
xlat
cmp
or
outs
mov
(bad)
(bad)
(bad)
dec
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
adc
jno
(bad)
(bad)
(bad)
fistp
enter
lods
jne
or
into
outs
es
lods
jg
sub
mov
(bad)
(bad)
(bad)
sti
xchg
rcr
mov
(bad)
and
xor
pop
or
addr16
(bad)
(bad)
push
das
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
(bad)
(bad)
push
jmp
jecxz
in
fmul
lock
mov
pop
adc
xor
loop
push
dec
jg
outs
test
or
sar
(bad)
call
xor
and
lds
sub
mov
inc
and
(bad)
xchg
test
call
neg
test
pop
xor
not
adc
iret
push
retf
mov
ret
pusha
fwait
(bad)
(bad)
inc
sbb
mov
test
fistp
ret
imul
cmp
push
ret
ja
imul
setl
(bad)
sub
mov
cwde
cmc
cld
(bad)
(bad)
(bad)
call
call
push
fidiv
sbb
mov
inc
sub
mov
cmp
cmp
jmp
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
(bad)
(bad)
(bad)
push
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
(bad)
(bad)
(bad)
push
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
jb
(bad)
(bad)
jmp
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
(bad)
inc
inc
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
in
cld
mov
pop
mov
in
sbb
bound
and
inc
sbb
jmp
push
mov
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
(bad)
jmp
or
cmp
movs
add
sub
scas
cmc
(bad)
(bad)
call
xor
jbe
mov
mov
sbb
ror
sar
add
push
pop
icebp
inc
movs
not
cmp
and
dec
imul
cmc
xlat
jle
pop
cli
(bad)
jmp
(bad)
mov
ret
push
jp
jmp
fnop
add
fbstp
jmp
popa
call
call
inc
rcr
mov
ss
dec
call
xchg
ud0
(bad)
inc
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
scas
dec
(bad)
(bad)
(bad)
push
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
(bad)
(bad)
clc
inc
call
inc
xchg
push
xor
es
jmp
fdiv
fisttp
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
(bad)
(bad)
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
out
(bad)
(bad)
inc
add
pop
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
(bad)
(bad)
(bad)
jmp
(bad)
jg
cmp
es
jl
mov
pop
sbb
mov
repz
cli
(bad)
(bad)
jmp
dec
test
adc
ja
mov
ret
add
cmp
cdq
in
(bad)
call
or
pushw
cmps
fidiv
sub
fisubr
sar
lock
(bad)
(bad)
push
or
cs
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
iret
sub
push
jp
mov
push
icebp
adc
repz
cmps
mov
rcl
(bad)
iret
repz
outs
gs
popa
jb
add
imul
(bad)
jle
jbe
ror
push
sub
sbb
adc
inc
jb
cmp
outs
mov
js
bound
popa
dec
popa
mov
jecxz
call
push
jle
mov
lock
out
push
std
cmc
out
call
cmp
clc
fadd
xor
fnstsw
int
cmc
pop
cli
jmp
add
mov
lock
aam
add
push
retf
cld
push
out
add
add
add
lods
add
in
mov
sbb
xor
in
sahf
or
mov
addr16
or
push
aam
sub
(bad)
bswap
cmp
dec
jmp
jg
pop
nop
sti
(bad)
mov
mov
or
or
lock
inc
push
mov
fs
sbb
pop
add
push
(bad)
jg
cs
fld
cld
packsswb
inc
push
fcom
(bad)
stc
out
add
sub
add
imul
pusha
add
out
mov
in
xor
pop
mov
inc
cmovne
push
mov
and
stc
out
push
push
mov
add
int
aas
or
imul
xor
mov
imul
clc
push
out
call
shl
push
frstor
add
inc
movs
cmp
push
lods
jmp
add
mov
push
lahf
loopne
cmp
out
pop
aam
push
mov
data16
inc
push
fisub
and
jl
pop
push
imul
jo
add
xchg
mov
jl
mov
fcmovbe
scas
inc
push
data16
push
push
cmp
jno
push
in
adc
cld
mov
mov
push
imul
loopne
cmp
push
xor
fnstenv
lods
movq
push
jl
mov
dec
push
and
out
mov
loop
cs
push
loopne
ror
lods
fdivr
cld
push
xchg
out
sub
fs
in
pop
jne
out
loop
add
push
dec
push
mov
loope
clc
push
dec
ror
mov
outs
dec
iret
or
in
imul
mov
jle
dec
jmp
sub
pushf
std
push
inc
imul
push
or
mov
sbb
jo
push
into
ror
xchg
push
pop
sahf
mov
mov
pop
mov
movsx
(bad)
mov
mov
mov
xchg
cmp
push
cdq
xor
test
inc
aam
mov
sbb
out
add
push
(bad)
adc
std
add
(bad)
xchg
mov
loop
push
mov
imul
mov
push
out
jnp
add
dec
jle
dec
dec
movzx
add
addr16
push
cs
fidiv
popf
inc
and
push
push
(bad)
scas
push
mov
ret
sahf
dec
dec
imul
push
mov
fiadd
je
push
or
ja
cdq
jle
cs
push
jge
daa
mov
add
push
out
lock
jle
push
push
cs
jo
fnstenv
or
push
cmc
add
cmp
xor
imul
dec
mov
cmp
mov
dec
mov
push
mov
adc
push
test
push
enter
call
push
lsl
jno
sbb
add
or
sub
rcr
add
mov
inc
sbb
unpckhps
add
lar
and
adc
pop
push
xor
loope
add
dec
push
div
imul
jp
push
data16
test
or
or
add
sbb
fist
xchg
add
lahf
neg
popa
nop
inc
ja
or
push
add
pop
adc
xor
jne
xor
repz
push
maxps
inc
test
cmp
pop
pop
adc
or
add
stos
and
sub
dec
inc
neg
iret
stos
retf
clc
adc
aas
je
push
and
pushf
out
in
dec
psubb
xchg
leave
rcr
mov
cdq
push
cmp
dec
push
add
dec
or
add
in
cmp
inc
std
cld
fld
mov
inc
cmp
das
cmps
aas
push
outs
ja
daa
mov
add
into
rep
add
push
add
add
out
fidivr
mov
jns
mov
sahf
out
sbb
dec
push
push
inc
pop
je
jns
out
movs
rcl
sbb
or
aaa
outs
popf
push
cmp
add
ret
or
xchg
or
xchg
or
dec
xchg
shl
add
lahf
push
lahf
out
out
add
lock
adc
cmp
repz
xor
pop
ins
repz
repz
cwde
lods
shl
clc
add
sbb
cmp
push
push
jns
movs
mov
fdiv
cmp
out
add
adc
pop
iret
repz
js
mov
enter
loope
in
scas
mov
nop
adc
adc
adc
push
cmp
rcl
or
xlat
scas
or
cmp
out
(bad)
push
xor
in
ja
mov
xchg
jg
add
adc
inc
scas
sbb
data16
add
add
sub
test
mov
and
adc
add
add
loopne
add
iret
adc
mov
sub
lock
sbb
pop
push
sbb
loopne
idiv
or
or
or
pop
sbb
adc
and
add
rcl
or
push
mov
or
lahf
shl
add
or
mov
sbb
loope
xchg
dec
or
xlat
fist
imul
pop
pop
scas
arpl
xchg
add
jg
(bad)
cmp
repz
mov
sti
add
repz
std
(bad)
(bad)
das
sahf
out
sar
push
add
xchg
add
sbb
sbb
cld
mov
mov
push
add
adc
scas
shl
inc
hlt
push
(bad)
call
repnz
cmp
ins
inc
popa
loopne
add
inc
mov
lock
sahf
out
sub
pusha
js
repz
out
(bad)
fdivr
adc
iret
repz
xor
push
out
cmp
cld
and
pop
jns
out
and
dec
repz
dec
test
mov
cmp
xor
push
jo
nop
test
call
and
popf
sub
out
and
add
mov
add
ins
inc
mov
add
rcr
sbb
mov
sub
and
mov
pop
movs
pop
pop
pusha
arpl
ins
pusha
arpl
int
sbb
add
pop
ins
push
add
sub
add
nop
or
add
add
div
ffree
fiadd
fucomip
jns
inc
jo
rcl
push
add
pop
ja
jns
fild
pusha
pop
add
cmp
jnp
or
mov
pop
je
out
mov
add
outs
loope
add
add
or
out
push
and
add
test
xchg
add
imul
xchg
out
fs
js
mov
mov
fdiv
add
out
sahf
cmps
sbb
push
push
jl
movs
mov
sar
and
jl
sti
(bad)
add
mov
hlt
push
and
and
mov
mov
or
push
cmp
mov
out
mov
pusha
add
push
test
iret
repz
lock
sub
js
mov
test
les
fdiv
add
push
add
xlat
push
and
ds
push
pop
jo
cmp
pushf
out
xchg
push
fsubr
push
jns
out
push
adc
xor
push
out
ds
repz
es
jo
mov
add
out
mov
pop
add
push
sbb
xor
mov
jns
pop
outs
push
rcr
dec
add
ret
add
mov
das
add
mov
call
add
jbe
push
adc
shl
clc
repz
repz
and
pop
iret
repz
jo
cwde
lods
shl
push
lods
retf
iret
adc
mov
and
mov
jbe
mov
fdivr
(bad)
adc
fidivr
xchg
mov
out
rcl
lock
push
push
adc
enter
(bad)
sbb
fs
(bad)
(bad)
dec
cs
jb
xor
enter
pop
outs
imul
in
jecxz
ret
and
out
movs
dec
jne
add
inc
cmps
or
inc
cmp
pop
std
inc
sub
push
add
pop
add
push
mov
add
xor
repz
push
clc
sahf
out
ds
pop
ins
pushf
mov
loopne
in
jbe
inc
jl
out
sahf
cwde
mov
xor
iret
repz
js
(bad)
call
adc
jbe
push
js
(bad)
repz
out
outs
push
dec
push
mov
lock
aam
out
call
lods
cmp
out
enter
sub
sti
cmp
repz
int3
cld
sub
sahf
ds
repz
in
hlt
jns
out
sbb
push
sahf
out
call
push
ins
jl
out
and
cmp
sbb
push
pusha
test
hlt
adc
out
test
iret
repz
call
pop
mov
int3
cld
sub
pushw
out
repz
jl
shl
cli
ss
repz
dec
push
jns
iret
clc
sub
test
test
sar
lock
inc
pusha
je
iret
repz
mov
push
iret
repz
dec
push
repz
ds
ss
ins
mov
shl
adc
dec
push
dec
dec
out
sahf
jo
mov
jge
sub
dec
adc
add
ss
dec
push
jns
fdivr
adc
cmp
cmp
repz
cmp
cmp
or
jbe
push
je
mov
dec
mov
loopne
push
and
imul
hlt
sub
fidivr
out
lods
call
pusha
ja
out
pushf
fdivr
and
push
push
jns
jns
cwde
mov
push
push
repz
out
movs
(bad)
in
or
iret
repz
xor
enter
sti
cmp
adc
inc
push
je
stc
cmp
mov
sbb
pop
sub
or
pop
test
int3
call
out
sahf
out
xchg
mov
ja
or
jbe
push
je
fcomp
movd
cmp
xor
clc
adc
cmps
push
js
icebp
jns
pushf
fdivr
sub
sahf
push
jo
iret
repz
mov
cld
and
iret
repz
cwde
shl
sahf
out
adc
adc
jl
mov
aam
sbb
push
push
pusha
out
ds
repz
push
inc
ds
repz
cwde
shl
push
iret
repz
repz
push
push
push
mov
out
ds
sahf
push
push
fs
out
ds
shl
sbb
push
push
fucom
jns
jl
int3
lock
cmps
idiv
out
push
sbb
jl
out
push
pop
jl
aam
sbb
cmp
sbb
push
dec
fs
out
ds
shl
sbb
pusha
(bad)
out
sahf
js
mov
ds
repz
int3
add
jns
out
mov
jo
rcr
pop
pushw
push
push
jns
fdivr
or
and
sbb
iret
repz
out
push
dec
pusha
mov
fdiv
adc
inc
push
pusha
cmp
repz
pushf
mov
mov
push
dec
pop
and
fdiv
or
push
jns
out
push
pop
test
lock
pop
push
inc
pusha
js
repz
cwde
mov
in
or
sahf
out
fdivrp
push
dec
pusha
sbb
or
ds
inc
push
nop
mov
in
sub
iret
repz
movs
sar
repz
sub
push
cmp
out
sahf
out
pushf
mov
mov
push
push
js
mov
loope
cmp
hlt
adc
into
push
dec
jns
out
jo
lods
(bad)
in
repz
inc
sub
push
test
loopne
sub
cmp
repz
test
fsubp
add
push
push
xor
push
test
cmp
repz
outs
push
cmp
clc
cmp
repz
xor
jns
ja
push
cmp
push
sahf
movs
mov
push
cmp
repz
ins
mov
repz
or
jbe
xor
jns
ja
jo
lods
(bad)
iret
cmp
cld
sbb
inc
push
inc
pop
ds
repz
cwde
mov
add
jns
out
es
inc
pop
and
aam
xor
repz
push
je
test
in
mov
ss
push
dec
fs
cmp
mov
out
ficomp
inc
pusha
sub
fdiv
push
push
js
repz
repz
hlt
sbb
pushw
ins
aaa
clc
cmp
cwde
shl
cmp
sahf
out
sahf
dec
push
cmp
sbb
pushw
pusha
and
adc
push
pop
out
sahf
out
xchg
mov
in
iret
repz
push
cmp
je
fsubp
repz
aam
ds
pop
jge
out
je
enter
sahf
out
fidiv
int3
in
cmp
cmp
inc
es
pusha
xchg
mov
mov
repz
sub
push
jl
jge
out
mov
push
push
jge
out
test
out
(bad)
push
pop
js
int3
lock
pop
jl
inc
pop
push
je
mov
fsubp
repz
dec
push
test
repz
mov
pop
je
mov
adc
inc
push
je
ja
out
lods
shr
adc
push
sahf
out
sahf
mov
lock
and
push
fs
ds
rep
int3
lock
scas
push
test
out
ds
es
pop
sbb
fdiv
and
cmp
repz
js
enter
out
sahf
mul
push
je
(bad)
in
repz
push
mov
clc
sbb
push
push
js
sti
cmp
mov
sahf
push
push
mov
jns
aaa
push
push
dec
ins
nop
mov
sbb
fdivr
and
push
push
cmp
and
inc
movs
loopne
jns
jge
push
out
push
mov
lds
push
jbe
xor
push
outs
push
xchg
aam
push
out
lods
repz
pop
push
push
mov
loope
pop
into
push
pusha
nop
(bad)
repz
add
ja
cmp
movs
shl
adc
push
lahf
out
sahf
push
je
shr
pop
out
sahf
ja
push
push
push
push
lahf
loopne
pop
xchg
push
ins
xchg
int3
sahf
ja
cmp
xor
(bad)
push
pushf
int3
out
fidivr
pop
es
ins
pushf
mov
fsub
out
mov
cmp
cmp
mov
or
mov
and
mov
out
push
sub
out
fmulp
push
push
je
mov
jnp
aaa
gs
jl
repz
lahf
out
lock
push
test
clc
cmp
lods
enter
push
repz
repz
inc
pop
jl
mov
shr
adc
jbe
push
lahf
out
sahf
je
mov
out
sahf
ja
push
inc
ins
xchg
mov
in
push
push
pop
test
mov
dec
lds
sbb
mov
fwait
rol
xor
in
retf
sub
push
or
test
add
push
mov
add
or
adc
mov
rol
les
mov
les
add
dec
cmp
in
mov
add
mov
add
daa
push
call
mov
add
aaa
mov
add
pop
cmp
daa
add
add
xor
arpl
and
ss
leave
in
mov
cmp
add
leave
dec
(bad)
(bad)
enter
in
add
pop
add
cdq
sbb
add
xchg
arpl
fwait
pushf
pop
add
bound
xor
or
aad
inc
push
xchg
add
pusha
out
mov
test
add
push
bnd
push
add
pop
add
je
jne
leave
leave
and
leave
leave
leave
jp
jl
into
(bad)
cmps
mov
loopne
loope
push
adc
fmul
inc
mov
fistp
sbb
(bad)
popf
pop
pop
add
imul
add
push
add
adc
adc
adc
inc
jmp
pop
daa
sbb
sbb
and
daa
sub
daa
bound
and
dec
and
dec
(bad)
(bad)
in
jmp
and
dec
mov
adc
dec
popa
push
enter
and
jno
(bad)
loopne
xlat
icebp
(bad)
jmp
fisubr
fidiv
fidiv
xor
or
idiv
inc
and
sub
retf
fbld
sbb
retf
repnz
sti
(bad)
repz
and
(bad)
test
stc
(bad)
push
jnp
push
jle
jp
add
or
inc
in
call
and
add
xchg
xlat
stos
mov
enter
add
add
add
add
add
lock
add
add
add
mov
inc
ja
out
sahf
out
push
cdq
lock
int3
loopne
or
out
sahf
out
xor
adc
sahf
xchg
test
aam
push
push
cmp
test
cld
adc
repz
repz
je
pushf
mov
in
or
fdiv
hlt
inc
ins
push
das
or
das
and
iret
repz
pop
push
jo
pushf
push
(bad)
jns
mov
enter
adc
ins
sub
cmp
mov
sar
push
jl
pop
test
shl
jns
fdivr
xchg
ins
mov
mov
cmps
sbb
sub
add
mov
or
out
sahf
mov
push
xor
fs
out
sahf
xchg
test
fdiv
or
pop
push
cmp
xor
iret
repz
lods
(bad)
fdiv
ficomp
scas
(bad)
(bad)
mov
jo
idiv
ja
je
(bad)
jmp
loopne
(bad)
hlt
push
out
out
or
push
nop
push
dec
pusha
add
sahf
jo
dec
nop
popf
fld
fbstp
imul
fmul
lahf
(bad)
pmuludq
pushf
mul
add
inc
xchg
mov
pop
loopne
or
lahf
push
pop
nop
xchg
add
fwait
popf
jmp
rol
call
jns
cld
push
adc
mov
jbe
jbe
xchg
pop
adc
aas
mov
xchg
(bad)
ror
in
cld
iret
adc
mov
jg
xchg
mov
push
push
fs
jl
nop
xchg
loope
in
out
test
shr
mov
call
adc
xlat
loopne
dec
push
pusha
push
js
loope
xlat
jl
pinsrw
xchg
outs
in
xchg
scas
cld
xchg
xchg
mov
pushf
lahf
or
nop
out
ret
cmp
scas
push
pcmpgtb
je
pop
test
shr
(bad)
aas
pmuludq
mov
xchg
push
sub
repz
cmps
dec
sub
pop
push
push
pop
jo
cmp
repz
mov
std
jns
js
cs
int3
fsubr
add
add
push
or
mov
add
and
push
and
and
and
and
std
jg
and
gs
cmp
and
sub
sub
(bad)
jmp
xor
and
aas
and
inc
and
dec
and
call
and
push
and
pop
and
popa
and
add
(bad)
jmp
push
and
ins
and
and
and
add
and
jmp
xor
ss
and
inc
and
dec
imul
and
pop
and
and
sub
sub
mov
(bad)
push
cmp
cmp
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
pop
addr16
aas
inc
sbb
pop
popa
arpl
imul
ja
or
bnd
jge
aaa
add
mov
cld
and
inc
xor
daa
add
xchg
push
sub
sub
add
cmp
cmp
ds
inc
and
addr16
add
dec
inc
dec
adc
adc
dec
push
push
or
push
inc
xor
sub
push
scas
push
dec
movs
push
push
dec
pop
ds
push
pop
dec
pop
mov
pop
mov
ror
add
add
arpl
imul
add
add
inc
rcl
adc
or
add
scas
jge
and
loopne
(bad)
jmp
add
add
and
add
add
add
add
add
sub
(bad)
(bad)
fbld
xor
xor
xor
xor
xor
add
add
add
add
jmp
add
add
cmp
int3
inc
add
inc
add
(bad)
(bad)
inc
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
add
push
add
pop
add
pop
add
add
add
popa
add
(bad)
(bad)
inc
arpl
add
add
push
add
ins
add
outs
add
jo
jno
jb
(bad)
(bad)
inc
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
add
imul
inc
fwait
sub
div
retf
cs
sbb
jnp
or
add
jg
inc
mov
mov
mov
(bad)
call
js
push
push
mov
call
out
into
mov
cmc
sub
xchg
inc
xor
call
sub
inc
mov
xlat
pop
mov
adc
std
mov
cmps
and
(bad)
(bad)
dec
mov
bound
inc
rcl
es
(bad)
mov
pop
adc
(bad)
push
adc
add
(bad)
(bad)
(bad)
(bad)
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
mov
outs
addr16
(bad)
(bad)
dec
inc
cmp
inc
popa
popf
ins
or
in
inc
jmp
pusha
dec
mov
(bad)
(bad)
mov
fwait
sub
daa
mov
aam
sbb
aam
in
(bad)
clc
jl
pop
gs
(bad)
(bad)
call
les
hlt
xchg
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
jge
out
call
(bad)
(bad)
(bad)
call
test
test
loopne
sub
adc
add
cmp
xor
rcl
sub
rol
add
je
push
stc
jle
jg
inc
push
and
and
sub
add
push
ins
ret
mov
jg
(bad)
(bad)
sbb
(bad)
neg
cmps
mov
enter
aas
xor
(bad)
cmp
arpl
and
add
arpl
data16
and
mov
out
mov
add
ins
ins
pop
and
inc
(bad)
ficomp
pop
mov
adc
ja
mov
aas
inc
pop
xchg
cmps
outs
es
sar
(bad)
(bad)
lods
sbb
pop
add
sub
add
rol
sub
mov
jae
sub
int3
adc
jae
les
scas
inc
and
push
dec
and
push
ins
jno
out
dec
ins
adc
mov
xchg
dec
add
or
aaa
cmps
sbb
sub
sbb
sbb
or
pop
push
xlat
pop
dec
popa
jmp
mov
inc
idiv
adc
or
sbb
add
pop
add
add
repnz
repz
nop
jg
mov
adc
dec
xchg
stos
jge
push
pop
inc
(bad)
jg
idiv
jg
jnp
inc
push
push
inc
inc
push
inc
xor
xor
dec
dec
inc
pop
sbb
push
xor
mov
clc
mov
out
ds
mov
test
les
icebp
inc
ins
adc
comiss
bound
add
and
inc
lldt
sub
and
add
dec
inc
inc
push
xchg
push
sbb
add
pop
dec
add
push
dec
inc
or
fisub
mov
push
enter
jns
rol
or
cmp
mov
shrd
fiadd
pop
pop
or
or
jns
std
push
stc
icebp
loope
cmp
(bad)
cld
clc
sub
repz
cmp
ss
inc
xor
or
mov
cld
add
xor
bswap
aas
inc
mov
mov
add
(bad)
dec
mov
jmp
loopne
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
(bad)
(bad)
(bad)
dec
enter
les
or
cmp
pop
(bad)
aaa
test
dec
mov
ja
(bad)
(bad)
jmp
call
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
(bad)
(bad)
(bad)
inc
ret
push
into
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
jge
(bad)
(bad)
jmp
loop
shr
out
push
fisub
loope
shr
bound
pop
mov
ins
popf
pop
(bad)
(bad)
(bad)
dec
retf
push
(bad)
test
cmp
add
dec
mov
jbe
dec
mov
jne
(bad)
(bad)
jmp
jmp
sub
sbb
and
push
pop
cmps
xchg
push
test
gs
push
adc
das
or
add
pop
lahf
push
inc
dec
mov
xor
and
jae
push
xor
cdq
std
mul
sbb
push
bound
mov
inc
sub
mov
pop
push
and
mov
or
fldcw
push
ss
and
sbb
or
cdq
mov
mov
cmps
mov
mov
sbb
xor
dec
mov
xor
aas
retf
xchg
dec
scas
out
aas
stos
adc
shl
aas
aas
cmp
jmp
jno
inc
jnp
push
loope
pop
stos
jb
push
test
add
jp
stos
add
add
repz
nop
adc
xlat
imul
sbb
mov
push
sub
and
cmp
repz
jg
push
adc
repz
xor
cmp
sub
iret
repz
push
movhps
repz
repz
iret
repz
xor
es
daa
cs
repz
cmp
ss
push
and
aas
adc
or
push
pop
xor
pop
push
dec
mov
add
or
popa
pop
inc
add
aas
cmp
(bad)
rol
sbb
ds
in
not
aaa
and
add
in
dec
cmps
and
cmc
fstp
push
jno
xor
dec
in
jns
mov
outs
jns
js
dec
dec
ficomp
push
jo
dec
arpl
sub
das
daa
pop
stos
xor
out
inc
aas
fdiv
mov
aaa
cmp
outs
dec
and
pop
fcomp
add
add
add
pop
ins
pusha
mov
je
add
add
add
(bad)
call
and
inc
push
adc
pop
and
xor
inc
mov
adc
mov
bound
jo
pop
sbb
sbb
sub
pop
and
cmp
inc
dec
dec
dec
push
push
push
push
push
jmp
pop
arpl
push
jne
ja
jns
(bad)
(bad)
(bad)
inc
mov
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
or
push
repz
cmc
div
clc
stc
cli
das
pop
shl
gs
lahf
adc
out
inc
mov
push
pop
popa
jno
and
adc
das
push
or
xor
adc
loope
add
imul
imul
aas
call
cld
push
js
sbb
jns
test
push
js
ds
repz
fdiv
jns
cmps
fldcw
dec
ins
xchg
mov
fdivr
sbb
dec
jo
(bad)
cmp
nop
mov
aam
arpl
add
mov
or
scas
push
push
xlat
(bad)
mov
(bad)
push
fadd
inc
sbb
add
daa
data16
push
test
cs
mov
daa
mov
push
sub
inc
ds
push
pushf
ficomp
mov
push
aam
push
cmp
xchg
leave
push
enter
icebp
data16
pop
outs
call
aas
and
int3
jb
imul
cmps
push
fsubr
xchg
lock
cwde
push
aam
js
pop
add
push
adc
sub
dec
outs
or
mov
pop
in
ins
jnp
mov
ins
xor
(bad)
and
cmp
xor
lods
int
push
scas
mov
mov
push
add
aam
adc
(bad)
adc
gs
push
pop
and
jnp
loopne
fs
pop
xchg
les
xchg
push
into
and
iret
or
(bad)
fs
and
out
xchg
or
pop
scas
push
push
mov
fs
imul
cmp
add
aam
loop
loopne
lock
push
cmp
inc
pop
mov
aaa
jo
out
cmp
out
fidiv
cld
push
mov
jo
xor
out
faddp
dec
es
data16
lock
sub
mov
cmp
(bad)
and
in
jno
ja
mov
sbb
ds
mov
jle
ds
jle
ja
sub
push
sbb
push
call
pop
ret
sbb
mov
push
mov
dec
test
sub
loopne
loopne
add
je
sub
mov
neg
jnp
scas
nop
sub
push
out
(bad)
fadd
jnp
aam
push
or
je
in
rol
push
push
jo
cmp
cmps
mov
pop
(bad)
loopne
push
cmp
cmp
cmps
movs
push
in
popa
aaa
hlt
cmps
pop
outs
pop
inc
dec
out
mov
cs
xor
in
(bad)
out
(bad)
mov
push
les
pushf
mov
cmp
push
add
push
push
push
push
mov
mov
sbb
xchg
jo
jo
data16
cmps
enter
adc
mov
ds
int3
sahf
and
cmp
fs
je
in
cmp
hlt
fistp
loopne
and
pop
(bad)
adc
jl
movs
jbe
inc
jle
js
(bad)
dec
clc
icebp
mov
neg
sahf
std
push
call
ins
cs
dec
sbb
pop
iret
jmp
ss
push
push
int3
push
aam
sbb
movs
ins
test
js
ds
push
mov
in
ss
push
fidivr
jbe
push
dec
dec
xor
cmp
scas
adc
dec
push
pushf
push
fidivr
xchg
cmps
ins
(bad)
je
in
fiadd
lock
test
ja
jbe
cs
(bad)
xor
cwde
mov
cmp
cmp
js
add
mov
(bad)
ror
pop
es
repz
or
outs
scas
xchg
lock
(bad)
out
mov
ja
call
xchg
jle
clc
jle
pop
cmps
mov
fistp
jle
jmp
jle
out
jo
jbe
loope
cmc
push
clc
pop
out
ins
push
dec
shr
loopne
test
scas
lods
cmps
js
pop
push
inc
lock
in
sbb
jnp
jnp
test
or
(bad)
lock
test
ret
in
sahf
shl
sahf
xchg
add
clts
jl
push
mov
lock
in
lock
jl
cwde
push
out
loope
mov
fmul
inc
dec
scas
test
sub
div
fisubr
(bad)
(bad)
jbe
data16
int3
mov
cmp
xchg
test
iret
add
dec
movs
push
push
iret
cs
ins
ja
fidivr
je
test
cs
pushf
push
shr
(bad)
mov
ds
scas
ret
imul
into
xchg
and
fdivr
test
mov
ds
faddp
sbb
push
and
ja
push
rcr
or
fdivr
xor
test
iret
jmp
pushaw
(bad)
or
mov
jae
jp
cld
cmps
lods
fild
mov
ds
xchg
mov
xchg
js
jmp
fcom
adc
nop
mov
push
xchg
neg
out
mov
scas
sbb
mov
add
push
fs
loope
into
push
fcomp
test
mov
push
adc
loopne
mov
into
call
movzx
pop
js
pushaw
push
and
pop
mov
push
push
mov
inc
(bad)
pusha
ja
mov
jbe
ss
inc
in
xchg
mov
mov
fidivr
inc
push
hlt
data16
xchg
sbb
into
jl
mov
dec
lods
mov
out
cmps
in
or
xchg
mov
iret
add
pop
neg
cmp
out
mov
data16
push
(bad)
jae
inc
push
push
pusha
pop
pop
outs
int3
mov
fs
movs
dec
les
cld
cs
outs
lock
clc
clc
(bad)
xchg
cs
push
fidivr
test
mov
in
loopne
loopne
data16
sub
xchg
(bad)
push
js
push
inc
(bad)
mov
push
push
faddp
ror
jle
push
inc
cmps
test
sbb
mov
dec
(bad)
stos
ror
dec
sbb
push
cs
push
pop
cmps
or
push
push
or
ja
data16
mov
sahf
or
add
pop
cmps
jbe
jo
fild
and
movs
loopne
mov
int3
push
mov
sbb
loopne
fcom
mov
out
es
or
div
jle
mov
cmps
shl
push
inc
dec
inc
push
js
loopne
mov
addr16
sub
fidiv
rol
outs
pushf
pushf
out
loopne
daa
cs
dec
es
add
lods
push
fidivr
fcom
pop
inc
js
adc
push
pop
push
cmps
sbb
fs
hlt
js
loopne
es
(bad)
push
mov
out
sbb
div
imul
(bad)
add
jbe
add
hlt
(bad)
inc
ss
add
pusha
xchg
push
dec
aas
outs
sbb
aam
js
cmp
pushf
inc
test
fisubr
(bad)
xor
jo
sub
(bad)
jp
pxor
hlt
xchg
mov
in
jbe
mov
inc
and
mov
fistp
push
sahf
faddp
test
(bad)
xor
in
add
jg
fadd
lods
fsubrp
sbb
cwde
out
push
jl
cld
(bad)
push
xchg
(bad)
dec
push
fdiv
pop
addr16
sahf
ds
mov
(bad)
cmp
cmp
lock
(bad)
lods
daa
out
cmp
jge
mov
jo
mov
test
psllw
in
push
cs
dec
and
sbb
mov
or
or
loop
pusha
test
push
adc
dec
out
jnp
xlat
fsubp
push
cmp
push
lods
addr16
mov
test
lahf
outs
pop
(bad)
xchg
jmp
push
pop
push
iret
test
push
fs
jnp
pop
cmps
jl
and
clc
pusha
add
xchg
es
jle
dec
mov
pop
push
xor
in
mov
div
sub
int3
push
sbb
pusha
aaa
js
and
sbb
rol
cld
lods
push
push
mov
sbb
addr16
ret
pop
ss
ds
mov
sbb
jnp
pop
cmps
rol
pop
push
mov
aam
lock
movs
(bad)
div
data16
push
sub
pop
out
jns
mov
dec
aas
(bad)
inc
inc
xor
js
inc
push
je
clc
ror
rol
cmp
clc
push
sbb
xchg
les
push
add
in
inc
inc
push
neg
or
push
mov
call
lock
adc
xchg
out
sbb
mov
pop
out
ins
cmc
(bad)
mov
pop
aam
enter
icebp
sahf
out
cs
test
nop
cs
sbb
(bad)
outs
data16
or
cmp
mov
test
pushf
push
lock
js
jge
mov
xchg
sbb
rcr
(bad)
cmp
push
dec
inc
mov
je
sbb
jo
int3
sahf
dec
inc
adc
out
call
call
push
cmp
sbb
dec
sbb
pop
imul
cmp
test
sub
loopne
hlt
sbb
and
push
push
sub
into
call
aaa
mov
loopne
hlt
pop
cmp
pop
sahf
in
mov
div
call
cmp
loop
sub
xchg
cs
je
mov
xchg
call
mov
xchg
nop
pop
ss
loopne
les
pop
les
sar
imul
test
add
mov
ins
push
push
add
daa
jl
dec
mov
rol
mov
out
mov
mov
xor
sbb
data16
lahf
clc
js
pop
cs
idiv
xchg
sbb
push
jl
push
adc
or
pop
push
cwde
out
je
inc
out
je
test
sahf
in
push
adc
push
jnp
mov
xchg
dec
(bad)
push
and
mov
push
xor
ss
pop
add
xchg
jns
mov
dec
test
xor
sbb
pxor
out
cmps
adc
shl
mov
push
into
lock
xchg
hlt
mov
loopne
loope
sahf
adc
ds
mov
push
test
mov
sahf
add
sbb
loop
mov
cmps
clc
(bad)
jo
sar
les
jo
lock
push
xchg
dec
fsubr
lods
cmps
aas
dec
sahf
xor
pop
loopne
das
(bad)
xor
out
dec
test
mov
out
loopne
push
push
or
push
xchg
sbb
and
pop
dec
packsswb
or
xchg
cs
xchg
dec
int3
pop
cmps
inc
sbb
pusha
inc
aas
dec
cmps
mov
js
pop
into
xor
(bad)
dec
dec
sub
adc
push
lock
pop
jle
pop
pop
movq
cmps
cld
xchg
fs
push
mov
mov
mov
movs
into
push
js
jp
add
loopne
and
icebp
cmp
sahf
push
push
in
xor
inc
or
jno
fimul
add
push
sahf
movs
(bad)
pop
pop
out
sbb
mov
inc
out
xchg
pusha
adc
ficom
inc
mov
cmp
push
inc
out
outs
dec
push
hlt
jle
not
jp
jbe
fmul
fidivr
call
sub
nop
lods
scas
sbb
pop
loope
push
pusha
fimul
mov
(bad)
into
call
xchg
int3
ss
xchg
mov
data16
jle
in
push
push
pop
jp
outs
push
push
sbb
shr
xchg
fadd
cmp
dec
pop
pop
out
pop
in
push
test
mov
into
push
(bad)
push
ds
nop
xchg
rcl
pop
sub
and
outs
adc
js
js
imul
es
push
cs
sbb
or
xchg
mov
xor
iret
inc
push
aad
add
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
cld
aaa
adc
add
dec
xchg
add
cmp
out
mov
adc
mov
out
mov
ss
push
pop
sbb
mov
neg
ss
push
fs
pop
jnp
ss
ins
ss
js
sar
xor
int3
aas
mov
out
mov
fdivr
int3
je
mov
push
xchg
ds
ss
push
xchg
scas
ss
mov
(bad)
push
mov
pop
ss
aas
out
jl
sti
fidivr
lock
sar
js
adc
aas
xor
xchg
out
xlat
push
xor
push
fdivr
sbb
mov
cld
push
in
test
add
hlt
sub
jmp
push
mov
ds
test
call
sbb
cmp
fild
push
inc
test
xchg
inc
repz
xor
mov
jns
out
mov
icebp
sar
cmp
lds
sub
push
sub
pop
dec
and
loope
das
mov
scas
pop
fmul
lock
mul
push
or
push
push
push
push
sahf
fucomi
mov
mov
fdiv
push
add
pop
ja
cmps
sbb
inc
add
je
cmp
repz
mov
dec
outs
mov
cli
push
adc
pop
inc
divps
add
dec
imul
gs
xor
cs
ins
pop
inc
gs
outs
imul
call
outs
arpl
jae
jb
outs
data16
je
outs
outs
ds
jae
jo
pop
(bad)
imul
push
bound
xchg
push
pop
push
dec
outs
push
data16
inc
or
cmp
inc
je
pop
mov
popa
add
gs
cmp
daa
inc
shr
fldcw
sub
sbb
push
push
outs
lahf
or
add
outs
imul
outs
std
xor
int
pop
pop
gs
popa
ins
gs
inc
jnp
jbe
dec
inc
mov
adc
psadbw
pop
gs
jb
dec
and
gs
jmp
or
fs
arpl
gs
mov
mov
fst
inc
pushf
dec
jb
inc
imul
sub
idiv
push
xor
inc
jne
inc
gs
popa
adc
jo
popa
shl
jnp
inc
mov
and
push
sub
inc
jb
ja
div
adc
mov
gs
inc
js
retf
syscall
(bad)
(bad)
cli
dec
jo
outs
push
je
jne
shr
daa
mov
enter
arpl
sbb
mov
je
sub
shl
adc
xchg
inc
dec
mov
inc
dec
push
dec
inc
push
dec
cs
dec
dec
mov
mov
push
jbe
jo
rcl
xor
xchg
fs
sbb
mov
inc
jb
shl
enter
imul
out
popa
(bad)
sbb
dec
push
ja
cmp
mov
xor
pusha
xor
xchg
dec
mov
stos
cmc
js
outs
xor
add
xchg
test
mov
jle
mov
xor
add
mov
pop
test
inc
push
xchg
add
call
add
add
dec
add
or
push
push
mov
dec
or
inc
add
dec
add
dec
add
cs
push
pop
jae
(bad)
sbb
dec
adc
inc
adc
push
jnp
(bad)
mov
dec
inc
push
push
pop
inc
push
inc
xchg
mov
inc
push
push
es
push
inc
imul
fnstsw
jnp
or
arpl
stos
push
or
push
and
imul
cmp
pop
retf
mov
push
inc
sbb
mov
and
inc
xor
not
je
pop
out
cld
fld
or
jns
enter
mov
cmp
sar
inc
pop
retf
xchg
das
adc
jg
clc
aas
push
push
sahf
xchg
out
jmp
rol
add
(bad)
imul
clts
aas
(bad)
jg
or
or
pop
addr16
push
or
ret
jge
addr16
in
or
push
mov
data16
jnp
rol
mov
pop
(bad)
iret
push
clc
jg
jmp
add
sbb
ficomp
cmp
ja
add
loopne
push
cmp
lock
clc
sbb
or
cmp
das
aas
pop
xor
add
addr16
jecxz
pop
pop
lock
xor
outs
push
ss
cmp
mov
mov
rol
pushw
jbe
jge
jns
jg
sbb
add
or
inc
pop
daa
add
pop
pop
inc
lock
pop
ret
ds
xor
push
in
jns
out
mov
jg
out
pop
xchg
dec
(bad)
cmp
sub
dec
add
add
fsubrp
add
push
or
add
loopne
add
add
stmxcsr
dec
pop
outs
add
ror
jp
add
pop
pop
es
cs
test
push
pop
push
inc
pop
pusha
mov
pop
adc
mov
addr16
xor
add
xlat
pop
ficomp
sub
add
inc
or
mov
aas
pop
jg
xor
cwde
add
add
rcr
inc
or
adc
punpcklbw
aas
add
mov
sub
aad
cmp
fadd
mov
add
or
lock
jo
and
pushf
add
ins
jnp
pop
add
cmp
sbb
popa
mov
cmp
sub
inc
add
inc
cmp
rol
inc
xor
sbb
sbb
push
push
sbb
js
pop
mov
jne
int
or
ret
rol
lock
xchg
dec
sbb
cmp
sbb
or
(bad)
shl
loopne
shl
mov
ret
add
test
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
test
es
add
jae
gs
jge
mov
add
ins
push
cmp
and
outs
and
outs
sub
jb
mov
adc
arpl
outs
sbb
sbb
imul
cs
inc
jns
sahf
addr16
imul
neg
inc
push
adc
jae
push
ja
ins
push
jnp
jnp
popa
fbld
ins
xchg
jg
jb
out
mov
(bad)
fs
inc
and
jns
(bad)
out
cmp
and
mov
cmp
arpl
arpl
(bad)
jle
xor
add
add
ja
fbld
add
add
add
add
add
xor
cmp
ror
fidivr
push
push
push
add
add
sbb
js
je
sub
scas
retf
push
mov
sub
jg
rcl
repnz
add
add
or
ficomp
inc
add
ss
push
xor
mov
loopne
and
arpl
jnp
outs
scas
push
cmp
xchg
add
bound
xchg
inc
jnp
ins
pop
xor
addr16
aaa
add
mov
idiv
xor
xor
cmp
neg
in
dec
add
pop
xor
sbb
cmp
pop
data16
push
inc
neg
(bad)
out
or
push
dec
mov
dec
sbb
dec
jnp
mov
mov
xor
inc
dec
fidiv
xor
aaa
ja
cmp
mov
sub
mov
fwait
test
push
mov
aaa
ret
inc
jo
inc
push
xor
pop
xchg
and
push
je
into
inc
pop
inc
push
and
pop
mov
ds
ds
mov
mov
xchg
add
pop
inc
mov
ins
push
or
out
jne
imul
arpl
(bad)
cmp
imul
add
imul
xor
lods
jecxz
mov
jmp
and
or
xchg
out
dec
inc
outs
sub
arpl
out
mov
out
mov
stos
fs
imul
mov
pop
mov
push
xchg
jb
pop
jo
cmp
test
mov
mov
push
outs
sbb
xor
shl
and
jo
push
outs
push
jmp
push
inc
lock
jbe
jne
xchg
gs
mov
data16
push
sub
cmc
sub
cmp
push
push
mov
shl
lds
inc
out
push
add
sbb
mov
or
pop
add
ror
sub
adc
test
and
xchg
icebp
jecxz
and
(bad)
bound
hlt
retf
mov
add
mov
sbb
shl
mov
mov
push
xor
sbb
mov
push
jae
xor
js
pop
jbe
adc
or
test
out
shl
repz
sbb
mov
outs
fisub
jg
imul
cmp
inc
into
out
push
sub
ficom
gs
and
and
push
test
push
push
add
push
inc
and
jnp
cmp
push
aas
push
push
inc
scas
lds
sbb
jmp
pop
pop
cmp
aaa
pop
inc
push
or
adc
inc
retf
or
mov
xor
enter
jmp
xor
and
outs
stos
cmp
push
ror
scas
push
push
sub
retf
push
dec
and
add
xchg
mov
dec
push
xor
das
iret
inc
mov
push
(bad)
sti
arpl
daa
add
inc
ins
sbb
ins
imul
je
nop
sub
mov
jecxz
loopne
ins
cmps
fwait
mov
jo
jae
dec
adc
xchg
or
inc
inc
push
jnp
or
push
and
cs
push
cmp
dec
imul
cmp
inc
shl
pop
popa
add
fcomp
adc
xchg
sahf
or
sbb
repz
mov
sti
daa
or
inc
loop
xchg
test
dec
add
and
xchg
xlat
jns
mov
jne
test
add
or
push
pop
outs
dec
mov
add
sbb
dec
arpl
or
jae
jo
je
sbb
sbb
add
jae
mov
loop
push
push
mov
cmps
outs
pop
xlat
add
or
push
sub
test
add
sub
lds
jmp
ja
sbb
xor
pop
test
and
js
cmps
jmp
cmp
and
cs
call
add
push
or
outs
jmp
cmps
pop
dec
mov
outs
mov
cmp
add
outs
xchg
jle
inc
dec
mov
daa
jae
push
sub
je
or
js
cmp
add
int3
mov
fadd
mov
mov
inc
mov
mov
scas
div
push
outs
les
lahf
mov
ret
arpl
and
xchg
inc
imul
stos
jbe
or
push
or
test
and
xchg
or
(bad)
mov
mov
frstor
mov
inc
inc
xor
js
adc
daa
xlat
sub
jo
nop
push
scas
mov
unpckhps
jecxz
cmp
sti
xor
pop
inc
pop
inc
mov
stos
sub
mov
xor
ret
stos
jno
add
ret
jmp
adc
pop
jno
jo
arpl
or
dec
add
daa
inc
jae
mov
add
mov
aam
ficom
cmps
movs
cwde
inc
cmp
push
lahf
ins
add
jo
adc
jns
ins
xor
adc
loopne
dec
das
daa
jb
xchg
ins
sbb
xchg
cmp
shl
dec
mov
lods
or
inc
xchg
clc
push
es
pop
inc
jae
gs
xor
cmp
xchg
scas
out
sbb
iret
sbb
and
outs
ret
repz
mov
mov
xlat
scas
adc
iret
or
xor
stos
push
or
fcmovbe
push
inc
cmp
popa
aas
(bad)
loopne
push
ins
xchg
jo
or
adc
adc
bswap
xor
lock
outs
inc
inc
pop
push
push
js
sbb
bound
sub
lock
add
sub
sbb
add
xchg
dec
dec
push
or
dec
jb
movs
shl
pop
bnd
pop
dec
int
push
out
sbb
dec
shl
jmp
sti
or
mov
jmp
or
or
sub
addr16
fwait
push
mov
and
mov
arpl
sub
jo
or
or
add
addr16
ins
xlat
or
add
mov
lods
push
pop
push
cmp
mov
sbb
mov
in
push
xchg
pop
outs
push
sbb
jmp
sahf
inc
add
pop
vpmovm2d
fld
sub
sub
sub
jb
push
and
dec
inc
mov
push
lea
(bad)
adc
mov
add
scas
ja
push
test
dec
push
jnp
and
add
sbb
jmp
outs
adc
je
rol
xchg
xchg
shr
xor
push
cmp
out
inc
and
xchg
jno
shl
and
cmp
lahf
jb
rcr
xchg
je
add
out
sti
or
adc
sub
pop
mov
and
ins
add
(bad)
addr16
jo
mov
outs
xchg
pusha
jnp
xor
out
bound
and
jae
outs
jnp
xor
xchg
data16
push
add
xor
out
pop
and
lahf
xor
(bad)
cmp
jae
jo
and
xchg
div
jae
inc
xchg
sbb
repnz
add
shl
jb
add
push
call
mov
test
sti
test
ret
outs
jae
addr16
jae
pop
imul
jae
outs
push
aas
jae
arpl
pop
push
mov
inc
cwde
adc
or
mov
sti
add
adc
adc
or
adc
push
xor
aaa
aas
mov
pop
je
fdiv
xchg
mov
pop
sbb
outs
mov
jle
arpl
int
dec
xchg
sti
sub
scas
ret
jb
outs
cmp
mov
sti
out
mov
movlps
sub
push
mov
and
das
pop
stos
push
sbb
scas
or
pop
scas
adc
jb
loopne
and
push
adc
retf
gs
cmp
ss
mov
mov
push
adc
sub
sbb
sub
dec
push
cmp
pop
sub
inc
mov
push
push
adc
and
add
push
adc
add
(bad)
daa
xor
cmp
aaa
push
outs
xor
jb
fwait
xor
inc
jae
add
cmps
mov
add
jmp
and
and
(bad)
mov
add
fucomi
gs
cwde
push
adc
xor
mov
inc
dec
jne
push
add
dec
and
adc
push
popa
or
sbb
push
mov
push
out
add
jb
outs
gs
test
das
mov
or
bound
in
adc
push
dec
cmps
gs
pop
outs
fisub
arpl
bound
dec
xchg
or
sub
xchg
ret
xor
mov
jg
jbe
inc
outs
je
or
cmp
or
sub
rol
fist
xor
jae
sub
ret
sub
fwait
and
push
xor
adc
inc
nop
inc
sub
xchg
cs
xchg
cmp
jl
lahf
mov
lods
add
popa
xchg
dec
icebp
jno
add
arpl
cwde
sub
adc
scas
out
jae
shr
or
fild
and
pusha
addr16
cmp
jle
jmp
and
sub
call
inc
pop
push
test
and
xor
addr16
and
sbb
lea
or
add
push
sbb
sti
imul
push
xchg
imul
or
call
bound
ja
mov
test
pop
xchg
push
mov
out
outs
inc
mov
daa
sbb
test
add
lods
nop
lds
add
outs
and
iret
lahf
inc
xor
popa
cs
fistp
push
or
sbb
addr16
jmp
ins
sub
arpl
das
xor
mov
imul
xlat
mov
xchg
sbb
(bad)
ds
fs
outs
sbb
adc
mov
sub
push
ds
(bad)
outs
into
xor
sti
mov
xchg
or
fisubr
out
(bad)
jae
add
inc
ins
xor
cmp
push
jmp
sub
jne
lock
push
sub
xor
pop
lahf
xor
sti
arpl
dec
pop
add
mov
outs
jo
adc
movs
or
out
(bad)
fs
pusha
or
adc
xor
push
into
or
jnp
pop
fs
loopne
stos
push
rcr
sbb
ret
pop
outs
cmp
adc
add
jecxz
push
pusha
rcl
fimul
loop
add
xchg
inc
shr
ins
fist
dec
pop
cmps
pushf
fiadd
jmp
jae
adc
fs
test
or
add
mov
inc
add
and
mov
sbb
mov
les
inc
xchg
mov
add
mov
push
xor
retf
movups
push
and
mov
pop
fwait
ret
mov
popa
jmp
jae
mov
lea
jae
test
rcr
dec
xor
scas
mov
jne
rol
xchg
dec
push
sbb
xor
push
mov
daa
and
mov
add
rcl
add
jp
bound
fisub
inc
add
test
adc
test
xor
pusha
push
push
and
jo
dec
mov
rol
push
outs
cmp
pusha
arpl
rol
pusha
dec
xor
mov
add
jecxz
retf
popa
xor
fild
fadd
xchg
div
and
mov
or
mov
(bad)
adc
xchg
movs
dec
dec
and
pusha
(bad)
and
jp
mov
cs
cmp
sub
or
and
scas
rol
and
fwait
das
jne
and
and
xchg
shl
or
sub
and
sbb
add
pop
mov
mov
sub
xor
imul
push
rcr
rol
ret
aaa
imul
scas
mov
mov
dec
mov
mov
push
imul
das
test
mov
add
arpl
cmp
push
fwait
es
dec
les
mov
mov
imul
jns
daa
sub
jo
xlat
push
push
mov
jo
retf
pop
movs
addr16
push
popa
add
xor
jmp
jae
adc
test
outs
xchg
add
inc
inc
and
push
ret
repz
mov
dec
bt
(bad)
fs
sub
xchg
ffreep
(bad)
(bad)
and
(bad)
or
push
in
outs
scas
test
mov
retf
mov
xor
push
sbb
or
ja
outs
movs
and
xchg
inc
mov
jmp
inc
and
ret
fwait
in
push
push
mov
das
sub
sub
xchg
(bad)
outs
fwait
sbb
jbe
out
ja
div
scas
mov
popf
add
loop
mov
adc
ret
jo
xor
sbb
pop
or
xor
mov
dec
push
push
cmps
adc
out
and
and
sbb
xor
shl
mov
adc
jbe
mov
push
bound
das
sbb
jb
mov
and
addr16
les
mov
jecxz
mov
bound
add
das
jg
pusha
in
adc
mov
adc
or
push
xchg
push
push
xor
dec
arpl
or
repz
pop
popf
add
push
push
xlat
push
add
push
inc
mov
dec
jge
pusha
or
adc
and
test
xor
inc
lahf
cmp
sub
pop
cmps
xchg
ret
jmp
or
push
xor
fwait
bound
pop
pusha
xor
mov
add
loope
add
cmp
xor
movs
add
test
cwde
xor
xchg
push
les
xor
push
push
ins
inc
loop
or
adc
ja
pop
sub
(bad)
or
and
lds
ins
cmp
jmp
sub
fcomp
mov
adc
push
pushf
push
mov
xchg
shl
xor
push
mov
mov
ja
and
ins
pop
scas
bound
(bad)
pop
sub
or
(bad)
and
xor
cmp
add
scas
outs
call
lahf
jmp
gs
ins
push
mov
sbb
xor
retf
adc
adc
scas
sub
pusha
imul
mov
sub
bound
push
sbb
jno
ja
outs
fsubr
inc
pusha
pop
nop
imul
jae
pop
aaa
mov
cs
ins
iret
sbb
push
fs
and
inc
sub
inc
mov
add
xchg
inc
lahf
(bad)
and
push
add
arpl
adc
and
mov
mov
scas
pop
dec
imul
cmps
mov
pop
pop
or
sbb
push
das
mov
adc
sub
iret
sub
cmps
hlt
adc
add
rol
mov
scas
addr16
enter
popa
aaa
or
mov
inc
inc
mov
push
pop
mov
movsx
ins
ret
push
or
std
mov
or
fimul
jae
cmp
xchg
test
or
(bad)
rol
push
cmp
pop
imul
scas
pop
and
xor
jo
jecxz
stos
sub
out
retf
mov
push
das
iret
fs
loope
jp
sub
aas
imul
push
iret
retf
xlat
mov
xchg
jle
and
and
pop
jb
mov
lods
adc
xchg
mov
or
loop
adc
adc
scas
adc
icebp
mov
cmp
add
scas
ins
rol
or
ret
jae
dec
sbb
sub
inc
ret
stos
cs
movs
sub
cmps
mov
sar
xlat
jg
xchg
fdiv
addr16
adc
fwait
and
sub
inc
(bad)
dec
adc
enter
data16
jnp
pop
push
xlat
es
xor
add
je
cmp
sbb
ja
addr16
inc
pusha
inc
mov
and
ja
add
sar
or
inc
jmp
push
addr16
mov
shl
pop
test
adc
lahf
imul
and
scas
adc
sbb
or
dec
sub
adc
mov
lods
xchg
aaa
fs
arpl
and
inc
inc
retf
push
ja
push
inc
imul
repz
lods
test
sbb
or
fwait
jae
cs
or
jae
push
aaa
jae
dec
js
jnp
addr16
adc
arpl
xor
xor
sub
push
adc
lahf
out
sbb
pop
pop
push
jecxz
rcl
jnp
sub
ret
shl
or
sti
ins
retf
sub
mov
pop
jmp
(bad)
xchg
sbb
sbb
mov
mov
pop
xor
cmp
jg
inc
mov
aam
xchg
mov
bound
mov
or
lea
fld
add
mov
adc
pop
rol
out
sti
add
(bad)
jg
add
add
and
add
and
mov
lea
mov
scas
stos
loope
pop
fwait
iret
xlat
(bad)
cmp
add
push
popa
pop
push
retf
jecxz
ror
ja
sub
inc
retf
rcl
jb
jae
mov
cmp
inc
outs
lea
add
shl
pop
push
inc
sub
adc
or
loopne
and
mov
jae
xchg
mov
sub
loop
mov
jle
add
xlat
mov
cmp
imul
inc
and
push
jg
test
dec
push
test
test
lahf
pop
lods
add
push
stos
xlat
jnp
shl
xchg
and
les
test
push
outs
cmp
imul
mov
addr16
mov
add
add
sub
test
xchg
stos
ret
imul
imul
add
dec
adc
fbstp
es
push
das
sub
fadd
cwde
maxps
or
das
jecxz
xchg
leave
lea
stos
xchg
dec
mov
and
cs
aaa
push
lahf
xchg
pushf
ret
out
popa
push
loopne
add
fcomp
retf
lea
ins
fwait
es
lea
mov
ret
inc
jo
xchg
push
pop
ret
mov
add
mov
sbb
lahf
pop
sti
iret
or
bound
jae
stos
add
jmp
push
push
push
adc
out
or
sub
(bad)
push
add
pop
pop
or
xor
xor
adc
lds
sub
scas
jo
dec
aas
movs
sub
and
adc
or
cmp
xchg
cmp
jmp
dec
adc
jmp
shl
xor
xor
mov
sub
push
add
adc
xchg
add
daa
out
mov
dec
dec
mov
dec
mov
je
rcl
nop
sub
(bad)
sbb
ins
clc
and
push
adc
dec
sub
add
push
stos
test
push
inc
sub
or
sbb
out
outs
or
jns
or
lea
js
cmp
add
adc
mov
sbb
pop
mov
push
pop
add
sbb
(bad)
je
add
(bad)
out
sub
xchg
add
jmp
pusha
inc
xor
iret
or
mov
mov
add
jecxz
push
add
adc
out
push
mov
adc
mov
mov
pusha
xchg
push
ins
push
pusha
test
adc
jg
push
inc
or
stos
cmc
outs
or
or
ins
pop
xchg
shr
push
arpl
or
push
pop
or
retf
push
sbb
adc
mov
xchg
and
and
adc
aaa
rcl
mov
mov
adc
aas
xor
dec
pop
and
and
rol
and
and
push
bound
sti
mov
sbb
cmp
inc
and
stos
add
push
ins
mov
pop
dec
cmp
(bad)
rol
imul
aam
push
xor
cmp
out
imul
adc
push
jae
sub
dec
repz
mov
out
cs
xchg
add
arpl
retf
and
mov
xchg
xor
test
sbb
cmp
popa
xor
outs
or
outs
out
sub
push
pop
(bad)
arpl
sbb
adc
or
nop
add
and
adc
sbb
retf
add
imul
add
call
call
push
ret
and
xor
jae
stos
add
sbb
dec
sub
push
(bad)
fwait
sbb
inc
jnp
and
adc
shl
mov
xor
neg
and
jb
jo
adc
xor
adc
push
xchg
dec
inc
mov
adc
fiadd
inc
ja
add
jae
inc
daa
data16
arpl
daa
xor
push
mov
pop
jg
and
retf
add
dec
lahf
mov
add
hlt
sbb
imul
fld
mov
imul
cmp
(bad)
mov
pop
mov
pop
js
push
push
dec
test
inc
pop
imul
push
push
mov
xchg
je
xchg
shl
js
les
inc
xchg
push
cs
outs
jmp
push
add
movs
sbb
jmp
jne
mov
fwait
lea
push
push
pop
scas
xor
add
sbb
mov
sub
daa
inc
pop
ins
or
xchg
out
test
pop
lahf
sbb
adc
push
add
add
imul
bound
sub
cld
mov
gs
mov
and
and
mov
inc
inc
jo
adc
push
out
and
dec
add
aam
stos
jae
and
add
sbb
out
pop
mov
xor
(bad)
mov
jmp
(bad)
movs
jae
imul
cmps
lods
add
es
lods
push
sub
adc
sbb
sti
pop
movaps
das
or
sbb
jae
adc
push
test
sbb
or
or
aas
sub
add
push
xchg
hlt
movs
push
fld
pop
cwde
outs
inc
lsl
test
(bad)
mov
pop
ds
dec
mov
jbe
cmp
or
push
ins
adc
add
in
push
imul
das
add
(bad)
ins
sub
sbb
pop
mov
pop
ins
ret
addr16
je
push
stos
lock
out
adc
mov
and
sbb
pop
xchg
adc
mov
ret
inc
inc
lahf
sbb
es
in
push
nop
imul
pop
popa
cmps
jnp
add
pop
add
mov
push
dec
scas
dec
mov
cmp
rcr
aaa
(bad)
pop
push
rcr
xor
and
iret
pop
push
call
(bad)
or
fimul
mov
nop
xchg
adc
pop
sub
push
inc
fs
out
(bad)
ins
call
or
push
add
pop
rol
stos
and
retf
and
xor
sar
pop
and
xor
adc
fsubr
mov
mov
rcr
rol
jbe
test
rol
jns
mov
retf
and
or
(bad)
fld
not
or
test
jo
cmp
addr16
push
addr16
inc
add
arpl
mov
outs
out
cmp
mov
mov
sbb
xor
ins
test
cmps
lea
iret
add
call
xor
nop
add
mov
xchg
neg
sbb
arpl
and
sub
pop
sub
sub
(bad)
ja
adc
outs
mov
add
add
arpl
repz
test
pshufw
fwait
sbb
pop
fwait
pop
inc
mov
arpl
out
or
lock
out
adc
push
push
adc
add
add
arpl
adc
lahf
push
test
fistp
sbb
dec
xlat
sbb
add
pusha
xchg
mov
test
lods
mov
push
ret
jo
test
pop
xor
adc
stos
fistp
ins
je
xlat
movq
jle
mov
push
sub
and
ja
aaa
xor
jmp
adc
pop
inc
out
jbe
lea
and
iret
mov
shr
lahf
xchg
push
add
push
mov
and
out
movs
fcomp
add
sbb
out
dec
inc
mov
or
pop
inc
sbb
imul
xor
sbb
imul
out
mov
sbb
push
pop
sbb
arpl
xchg
push
fild
mov
sbb
aad
leave
xor
arpl
sub
rcr
sbb
jmp
rol
das
cmp
push
jae
xchg
popa
fbld
adc
sbb
sbb
cmp
int
aas
sub
dec
ret
stos
ret
shl
stos
pop
xor
ins
xchg
push
ja
test
mov
or
add
jle
ins
sbb
stos
mov
mov
shr
add
ret
jae
les
ja
mov
mov
ret
icebp
and
pusha
pop
daa
xchg
push
imul
sub
add
dec
imul
mov
out
xchg
add
add
(bad)
pop
dec
pusha
push
or
push
les
cmp
and
pop
pop
ja
xor
(bad)
ret
idiv
and
add
adc
mov
mov
xlat
stos
add
cs
jae
mov
jae
or
sub
xchg
add
xchg
pop
or
xlat
outs
add
mov
rcl
pop
cmp
nop
or
mov
mov
mov
cmp
jo
daa
jge
pushf
pop
outs
jae
mov
ja
ins
xor
imul
lods
mov
nop
push
push
xor
aad
push
push
mov
dec
movs
imul
aas
push
ins
adc
add
das
or
js
xor
cmp
retf
aas
mov
push
cmp
mov
adc
push
add
test
add
addr16
mov
sbb
xchg
inc
inc
dec
mov
imul
pop
sbb
(bad)
pop
dec
test
cmps
xchg
push
test
and
dec
mov
in
inc
das
adc
sbb
adc
lahf
cmc
data16
jecxz
push
jnp
inc
mov
jecxz
push
or
mov
mov
cmp
pop
or
(bad)
cmc
mov
xchg
jbe
dec
mov
inc
add
ret
addr16
or
pop
(bad)
movq
or
add
adc
jge
jp
cmps
or
push
and
fstp
inc
(bad)
sbb
js
jae
sub
or
shl
cmp
fadd
push
cmps
dec
or
push
push
clc
clc
das
popa
xchg
and
ja
adc
mov
xor
add
cs
push
push
xor
pop
push
stos
mov
sti
retf
adc
add
inc
jno
pop
inc
and
gs
and
inc
(bad)
or
or
or
xor
sbb
test
and
out
sub
sti
stos
add
sub
inc
lods
xor
lds
pop
pusha
aas
and
call
sbb
(bad)
add
addr16
mov
mov
(bad)
into
jg
aas
jo
cwde
mov
push
sub
mov
nop
push
push
fwait
xchg
sub
mov
xchg
imul
pop
data16
xor
out
rol
or
and
sbb
pushf
push
sar
inc
pop
mov
retf
(bad)
jb
inc
ja
arpl
add
nop
and
xchg
pop
retf
pusha
aam
ret
and
out
arpl
mov
mov
test
jns
shl
ret
pop
sub
cmps
pusha
popf
add
arpl
mov
or
aad
pop
xor
(bad)
and
ror
jb
ffreep
cmps
inc
test
test
push
das
jnp
or
ja
pop
dec
inc
test
and
sub
adc
rol
dec
cmps
xchg
or
sub
or
inc
sbb
xor
scas
add
mov
aaa
mov
and
push
aaa
(bad)
cmp
push
pop
daa
mov
jne
mov
mov
or
sub
(bad)
or
inc
cwde
push
pop
das
adc
fisttp
mov
xchg
or
sub
sbb
sbb
or
sub
(bad)
fistp
pop
sub
add
add
dec
add
xor
and
stos
lock
inc
retf
retf
iret
sbb
mov
add
mov
push
pop
in
(bad)
das
inc
sbb
inc
dec
jnp
pusha
mov
inc
mov
or
mov
dec
add
dec
and
xchg
xor
xor
mov
fwait
or
call
pop
jb
mov
mov
xor
int3
add
call
mov
mov
mov
pop
arpl
div
test
push
mov
xchg
cmp
sub
dec
add
add
mov
inc
add
adc
test
fild
imul
outs
ss
ins
jl
dec
mov
sar
fwait
and
pop
adc
ret
dec
jecxz
xchg
imul
mov
ret
add
es
pop
mov
add
jg
arpl
ret
(bad)
aaa
jno
rcl
daa
sub
pop
ret
imul
push
(bad)
shl
arpl
sbb
inc
in
ret
sbb
gs
cmp
gs
sahf
ret
inc
loope
and
(bad)
cmp
push
xchg
inc
jo
adc
and
je
outs
(bad)
rcl
fsub
mov
shr
sti
jne
fdiv
sub
ins
ret
inc
xchg
pop
enter
xchg
adc
jbe
push
fwait
cmps
mov
gs
xchg
sub
aas
imul
add
pop
das
add
sbb
sub
push
aaa
push
jbe
test
mov
data16
push
sar
xchg
push
ret
pop
or
xor
mov
inc
sub
inc
sbb
lods
jmp
push
mov
xor
sub
sub
pop
mov
ss
test
push
add
pop
xor
fdiv
pop
cmp
jmp
mov
popa
jb
pop
push
push
hlt
pusha
inc
dec
ins
mov
adc
cmp
mov
outs
inc
mov
inc
ja
loopne
iret
scas
movups
clc
inc
add
mov
loopne
mov
call
cmp
test
stos
aaa
arpl
sbb
sbb
inc
stos
add
add
pop
arpl
push
mov
xor
jns
lods
sbb
repz
addr16
out
add
push
sub
jnp
popa
pop
shr
xor
or
sub
add
mov
out
outs
scas
ins
jnp
inc
sbb
xor
sub
inc
or
xchg
mov
xlat
xlat
or
and
dec
push
imul
lods
sub
mov
xor
dec
or
add
or
and
or
div
dec
bound
push
mov
mov
icebp
loopne
push
xor
and
cmps
and
test
das
imul
mov
push
daa
xchg
daa
add
or
out
es
sub
outs
push
sti
fmul
xchg
sti
dec
aaa
jnp
jo
add
push
inc
test
xchg
lea
mov
pop
pop
inc
push
and
mov
cmp
jae
xchg
call
ja
xor
pop
addr16
xor
xor
and
call
stos
jg
sbb
ss
rdpmc
cmps
or
daa
mov
xor
movs
inc
or
and
mov
xchg
adc
retf
daa
sti
fs
push
mov
pop
imul
or
sub
push
push
pop
cmp
push
test
jae
arpl
or
lahf
add
push
cmp
stos
movs
lds
push
imul
jno
dec
xor
stos
movs
push
or
mov
pop
jmp
sub
inc
stos
push
bound
cmp
and
fsubr
arpl
add
xchg
stos
sub
sti
adc
call
dec
pop
push
std
(bad)
or
add
aaa
aas
xor
push
sbb
bound
into
aas
and
cmp
xchg
xchg
in
(bad)
in
inc
fs
ins
and
lock
xor
fdiv
ins
mov
mov
daa
cmps
sub
and
lahf
cwde
scas
adc
ja
stos
icebp
push
pop
stos
push
stos
dec
add
and
push
ja
outs
and
pop
imul
push
retf
scas
or
adc
push
loop
mov
mul
add
mov
imul
add
jno
jnp
arpl
sub
retf
sub
mov
push
lahf
xchg
sub
ins
rol
pop
sub
pop
add
or
mov
ret
fist
stos
inc
outs
je
and
daa
add
or
jae
pop
and
mov
jo
jae
adc
sbb
add
cmp
shl
and
jnp
test
inc
pusha
pushf
repz
push
xor
jnp
pop
inc
add
jl
nop
pusha
and
js
dec
add
rcr
dec
jmp
dec
mov
pop
xchg
nop
mov
shr
loopne
push
add
cmp
adc
test
aaa
mov
inc
cmp
(bad)
das
sub
adc
pop
call
or
inc
dec
or
cmp
(bad)
arpl
and
sbb
push
test
push
mov
xor
rol
scas
ja
sbb
jae
addr16
outs
and
add
sub
adc
pop
sbb
pop
pop
mov
ror
sbb
and
push
adc
inc
jmp
push
jae
rcr
es
inc
neg
sti
dec
test
sub
sub
add
push
setg
mov
push
mov
sbb
or
push
sub
or
lods
fcomp
pop
mov
mov
repz
sbb
push
repz
sub
dec
xchg
adc
sub
out
test
sbb
es
adc
scas
ret
mov
jae
and
push
adc
sub
rcl
xor
ret
or
or
add
loopne
or
add
mov
js
pop
jg
add
sbb
fist
add
movs
in
pusha
and
xchg
out
sar
xlat
xchg
pop
popa
inc
dec
test
ja
inc
pop
add
push
or
iret
sbb
cmps
out
sbb
mov
outs
aaa
add
dec
add
add
inc
dec
(bad)
lahf
pop
add
jo
push
add
ficom
fiadd
retf
push
inc
pop
xchg
(bad)
rol
out
(bad)
imul
inc
xlat
ins
push
add
adc
pop
jae
pop
cvtps2pd
pop
jmp
xlat
cmp
add
mov
push
outs
out
inc
sbb
mov
and
jae
xor
xor
arpl
icebp
push
add
mov
das
jmp
sbb
jmp
or
into
adc
or
loopne
push
inc
fisttp
jg
(bad)
or
aaa
sti
dec
jp
inc
xor
or
and
jecxz
sub
xor
lods
or
pop
sub
pushf
xchg
stos
jp
pop
inc
push
test
es
icebp
sub
push
add
int
add
xor
inc
or
inc
xchg
sbb
ds
sub
pop
ret
add
loope
inc
mov
arpl
inc
jne
xchg
pop
shl
imul
mov
push
pop
(bad)
push
aaa
xchg
shrd
dec
xor
loopne
jo
jg
cmp
(bad)
mov
jnp
test
aaa
call
sbb
and
imul
add
cmp
sub
nop
sbb
pop
rcr
jnp
or
xchg
daa
cmps
lods
add
xchg
inc
fs
addr16
pushf
sbb
add
std
cmp
jecxz
pop
push
ret
or
xchg
and
add
fist
add
or
push
jae
add
xchg
or
call
add
inc
popa
and
add
add
int
pop
mov
dec
add
add
ss
int
fistp
rol
dec
mov
pop
ss
or
mov
stos
repz
cmp
mov
rol
mov
ss
add
test
xlat
arpl
mov
mov
(bad)
in
mov
jmp
fwait
jbe
imul
inc
mov
xchg
sbb
loopne
out
xchg
shl
sti
and
test
mov
(bad)
push
shl
jb
movs
adc
inc
fwait
test
loope
inc
xor
shl
xchg
sub
mov
pop
fs
pop
(bad)
dec
or
fld
jmp
arpl
dec
out
and
imul
sahf
adc
js
and
mov
adc
call
adc
jb
adc
cmp
(bad)
arpl
jae
mov
pop
adc
or
pop
lods
(bad)
bound
sub
scas
cmp
aaa
sub
sub
jb
push
call
mov
add
jae
and
mov
add
xor
jae
adc
es
pop
adc
lds
pop
add
jnp
or
lahf
pop
sbb
shl
aaa
(bad)
cmp
stos
and
inc
mov
sbb
mov
and
bound
inc
pop
add
repnz
jbe
fistp
inc
and
inc
push
xchg
dec
dec
(bad)
sbb
xor
scas
adc
adc
in
pop
mov
inc
pop
addr16
mov
push
sbb
sbb
ret
pop
inc
pop
xor
inc
adc
(bad)
sub
jg
jo
mov
out
inc
rol
add
inc
adc
jo
sbb
xor
or
aas
ja
daa
and
bound
or
cmp
inc
aas
add
xor
or
inc
sbb
xor
sub
in
xor
sub
aam
or
and
inc
pop
cmps
shr
lahf
sbb
cmovs
out
addr16
add
pop
adc
fistp
jecxz
cmp
xor
out
inc
push
add
and
fld
inc
inc
and
add
sbb
dec
outs
jmp
or
jg
push
add
add
inc
out
add
mov
sbb
pop
pop
rol
sbb
jecxz
add
loopne
push
daa
(bad)
xchg
adc
sub
dec
mov
mov
adc
loopne
repnz
(bad)
(bad)
pop
not
pop
xchg
test
outs
add
or
and
(bad)
adc
sahf
out
or
or
fist
sub
aas
sub
push
test
outs
push
shl
pop
pusha
rcr
and
rcl
sub
and
push
add
and
push
sub
jae
das
jo
adc
mov
shl
sub
addr16
and
das
lahf
sub
inc
sub
or
mov
inc
aas
out
add
xchg
or
add
sbb
bound
ja
or
dec
(bad)
and
push
inc
push
or
mov
push
sub
idiv
inc
xlat
ins
ret
test
push
xor
dec
mov
mov
lods
movs
push
mov
mov
shl
aaa
(bad)
adc
mov
test
sbb
pop
pop
sub
pop
jno
outs
add
dec
mov
pop
ror
xchg
scas
jae
xchg
stos
or
mov
aas
lahf
imul
xchg
imul
nop
mov
jae
mov
push
pop
jb
pop
inc
add
inc
sahf
push
pop
inc
push
dec
outs
and
jbe
test
mov
pop
retf
loop
(bad)
loope
and
aaa
add
xor
es
push
sub
adc
dec
add
xor
and
sbb
pop
mov
aaa
mov
outs
arpl
dec
ret
or
ret
pop
arpl
inc
mov
sbb
or
popa
fmul
cmp
adc
xchg
add
xchg
iret
or
movs
or
pop
or
add
push
push
es
pusha
xchg
adc
add
pop
and
push
sbb
mov
in
add
inc
pop
and
xchg
mov
popf
dec
les
xor
repz
arpl
push
pop
fwait
neg
mov
and
jmp
test
fsub
sbb
je
and
add
test
cmp
cmp
pop
xor
ret
fisttp
mov
dec
or
pop
cwde
fs
and
adc
dec
add
loope
fwait
je
daa
sub
cmps
inc
fcomp
test
jb
jmp
or
add
sbb
dec
mov
mov
and
push
add
loope
gs
jb
xor
fcom
adc
mov
das
and
jge
repz
or
fsubr
js
outs
iret
jns
fdiv
mov
sub
jb
pop
test
adc
mov
add
sti
popa
push
add
sti
add
outs
inc
mov
dec
push
adc
jae
add
push
js
dec
xor
xor
fild
test
push
sti
dec
sub
test
adc
adc
inc
sti
jnp
pop
fimul
test
loopne
jmp
or
jne
inc
jnp
inc
test
test
sub
mov
xchg
sbb
xchg
inc
sahf
mov
dec
and
and
retf
bound
fistp
stos
fdiv
adc
xchg
lock
lods
adc
fwait
pop
adc
xor
and
xlat
or
add
pop
test
add
sbb
dec
add
or
cmps
jnp
sbb
xchg
daa
popa
cs
dec
dec
outs
pop
nop
sbb
sbb
adc
and
jo
mov
sub
adc
test
shr
scas
outs
push
add
mov
and
adc
sbb
pop
pop
mov
jp
lea
sub
nop
mov
lods
inc
adc
pop
or
push
push
pop
outs
ins
add
adc
ja
adc
jae
test
scas
add
and
xor
dec
js
mov
push
add
or
and
xchg
add
mov
xchg
jo
or
mov
push
fs
pop
push
jmp
cmp
call
xlat
mov
xor
adc
pop
sub
pusha
daa
xor
sub
ins
inc
sbb
mov
mov
jo
inc
jnp
or
push
fs
fld
pop
not
xor
and
and
and
add
and
(bad)
les
imul
mov
add
mov
push
or
sbb
push
fidivr
dec
pop
sbb
(bad)
mov
pop
test
xlat
jp
outs
daa
or
dec
jae
inc
sub
push
or
int3
cmp
and
xchg
push
add
pop
aas
call
adc
rcl
add
lods
sbb
ret
and
push
and
cmp
push
dec
jnp
lds
mov
add
pop
mov
push
pop
pop
inc
inc
inc
add
add
lock
pop
add
add
mov
mov
mov
and
cs
adc
sub
push
sub
inc
or
sar
daa
out
idiv
gs
pop
outs
jbe
fiadd
and
xchg
add
call
push
add
add
add
xlat
cmp
push
popa
aaa
stos
push
lea
sbb
fisubr
or
or
lods
repnz
pop
fisubr
pop
add
ins
aas
jo
or
add
add
outs
pop
pop
fild
mov
jbe
out
iret
jb
add
ss
adc
adc
shl
mov
aam
fbstp
mov
adc
scas
mov
pop
dec
out
jo
loope
imul
adc
ret
jb
sbb
das
adc
fwait
and
sti
xlat
loope
js
adc
mov
rcl
push
adc
dec
outs
pop
push
jp
xor
(bad)
xor
cli
imul
push
shl
mov
movs
pop
adc
add
repz
sub
inc
call
popa
cmps
add
xor
aas
add
mov
dec
out
add
or
adc
mov
mov
jne
fild
and
and
add
mul
push
xor
dec
(bad)
mov
inc
pop
out
mov
push
or
mov
adc
mov
xchg
push
test
sub
imul
addr16
mov
les
pop
cmps
jae
inc
xchg
sub
gs
push
stos
sbb
inc
mov
imul
jae
sub
push
sbb
das
push
jnp
dec
jecxz
dec
(bad)
dec
ret
jnp
mov
dec
and
arpl
jmp
out
inc
jo
and
das
test
xor
lods
push
mov
imul
sar
adc
test
mov
xor
arpl
je
add
dec
jg
(bad)
sub
mov
je
scas
add
and
cmp
inc
cmp
arpl
adc
imul
xchg
imul
sbb
adc
rol
shr
les
dec
add
daa
(bad)
jg
add
xor
push
adc
push
add
imul
bound
push
inc
jmp
mov
imul
stos
jne
adc
or
out
sub
pop
sbb
imul
xchg
inc
fcom
pop
adc
es
scas
xor
nop
sub
jnp
fs
movntps
dec
cmps
add
or
sbb
adc
inc
repz
sub
pop
mov
push
das
jmp
jmp
mov
or
mov
sub
ins
adc
mov
pop
aaa
cmp
pop
stos
scas
lahf
mov
mov
inc
dec
xchg
push
adc
sbb
inc
scas
sbb
jnp
or
or
das
ds
test
das
or
add
stos
adc
and
imul
jns
fs
push
xchg
or
imul
adc
sbb
ds
ja
xlat
fs
fs
and
fisub
add
and
mov
inc
mov
xor
adc
ror
scas
adc
mov
stos
xor
mov
call
es
aaa
mov
pop
fwait
cmp
jp
add
or
inc
outs
ja
ins
outs
popa
fs
jg
add
cs
inc
push
ins
push
outs
jb
adc
and
cmc
daa
ins
adc
je
adc
jae
outs
imul
idiv
imul
push
imul
and
rcr
ins
in
jae
jae
and
and
in
xchg
mov
popa
jb
arpl
loopne
jmp
cld
les
mov
dec
sahf
push
push
jns
mov
and
or
into
sbb
adc
jbe
in
add
mov
js
xor
fist
push
jae
push
bound
int
push
dec
inc
outs
ins
cmp
call
popa
addr16
ins
jo
fisttp
dec
call
imul
sub
and
mov
jbe
pop
lods
lods
and
xor
in
ins
ins
or
ja
sbb
xchg
sub
je
arpl
(bad)
aaa
push
jno
push
imul
sahf
push
xor
jo
ror
adc
sub
gs
ds
outs
loopne
arpl
gs
jne
(bad)
or
or
ins
gs
(bad)
lock
pop
pushf
shr
dec
bound
in
in
xchg
outs
outs
adc
sub
xor
inc
imul
sub
(bad)
jae
cmps
jecxz
imul
jmp
fs
dec
mov
loope
and
pop
push
and
(bad)
outs
xchg
imul
jmp
imul
mov
add
sbb
mov
cmp
mov
int
jae
dec
jmp
cmp
jbe
jb
jbe
dec
xchg
test
es
in
mov
inc
imul
in
data16
and
daa
popa
mov
and
(bad)
cmp
(bad)
push
mov
imul
ins
imul
mov
xchg
dec
dec
sbb
rol
fadd
hlt
inc
jne
cwde
dec
add
je
push
stos
xor
inc
setae
mov
lods
ror
or
push
popa
(bad)
out
cwde
or
add
pop
sub
inc
adc
pop
pop
mov
xor
pop
dec
popa
ins
gs
rcr
es
cmps
xchg
and
cwd
je
in
lods
sub
or
jns
inc
jne
sbb
ror
popa
(bad)
adc
xchg
adc
adc
xor
push
outs
fwait
mov
push
push
sbb
mov
or
jne
aad
cli
sub
xor
ss
xchg
xor
inc
jb
std
xlat
das
fcomp
scas
jp
push
arpl
call
push
xchg
je
xor
jo
push
push
loope
out
adc
sbb
add
dec
push
push
push
inc
jo
stc
sbb
fs
jbe
and
mov
mov
push
or
mov
out
mov
inc
ret
xlat
ss
jns
jae
repz
sbb
inc
sbb
pop
dec
shr
rcl
jle
push
bound
jp
rcr
jo
dec
addr16
pushf
mov
test
lahf
rcr
(bad)
je
aad
fs
inc
dec
shr
jae
dec
imul
ja
stos
imul
ret
cs
jno
jo
add
add
dec
clts
pop
hlt
outs
frstor
xor
sahf
test
xchg
mov
push
sbb
cmps
adc
xor
int
pop
rcl
or
fnstcw
mov
das
dec
push
arpl
inc
fcmovnb
or
jo
gs
jne
inc
ins
mov
in
loop
bound
xchg
adc
test
fadd
adc
mov
ror
outs
jne
arpl
add
xchg
pop
jne
inc
in
xor
ins
addr16
sub
push
sahf
out
add
and
sbb
dec
add
dec
push
fsubr
push
sti
jbe
adc
imul
or
jns
mov
pusha
or
lea
imul
pop
and
ins
aas
js
loopne
mov
push
js
add
mov
sbb
ins
dec
sbb
mov
jo
sahf
je
repnz
in
xchg
add
imul
sqrtps
mov
sub
inc
jb
push
mov
in
fstp
daa
xor
or
inc
push
dec
stos
nop
fbld
pop
adc
add
push
gs
xchg
mov
sbb
xchg
outs
or
loopne
jo
stos
jb
cmp
ins
xchg
sub
outs
jne
and
ins
jge
jo
in
loopne
fsub
mov
ins
cmp
js
mov
ret
jne
ss
push
push
sub
jns
imul
mov
add
jo
mov
adc
popa
jns
push
je
loopne
jmp
add
sar
and
(bad)
push
xchg
sbb
add
push
inc
hlt
inc
push
ins
pusha
(bad)
out
adc
fdivr
cmp
lds
imul
je
sbb
fldenv
fisttp
mov
fadd
inc
jg
inc
jmp
retf
push
or
jae
dec
adc
das
mov
add
dec
out
dec
dec
(bad)
aas
ins
dec
js
cmp
push
adc
dec
dec
dec
popa
inc
stos
push
push
add
cmp
sub
pop
adc
mov
mov
sbb
jo
es
adc
imul
bound
push
inc
ret
fsubr
push
xchg
mov
ret
cmp
loopne
stos
es
int
dec
mov
out
scas
(bad)
outs
imul
mov
xor
pop
lock
fist
shr
push
dec
jne
(bad)
fild
mov
xor
push
pop
jno
imul
je
jns
cmp
out
push
sbb
in
cmp
aam
pushf
sub
mov
adc
es
(bad)
and
outs
es
or
xor
ds
mov
or
scas
xor
mov
cmp
dec
inc
sbb
adc
fiadd
xchg
adc
cmp
imul
mov
fiadd
jnp
adc
pop
cmp
mov
call
test
and
xchg
mov
mov
jns
inc
inc
into
sbb
ins
or
and
scas
fadd
pop
push
jb
jnp
and
jb
test
jl
iret
fwait
jo
and
jne
sub
sub
out
es
data16
les
das
adc
rol
out
iret
es
or
sub
cwde
nop
sbb
mov
jmp
mov
stos
add
xor
arpl
xor
add
cmp
add
pop
add
or
cmp
cmp
aaa
inc
and
push
dec
stos
cmp
inc
(bad)
push
push
add
xor
in
loop
add
rol
fisub
cmp
stos
hlt
cs
addr16
push
ss
add
aad
jo
dec
sub
push
imul
pop
xlat
les
xor
xor
jns
cmp
gs
in
sbb
es
fisub
adc
inc
push
xor
int
lods
sub
lods
adc
adc
xor
dec
dec
(bad)
pop
dec
xor
retf
xor
sub
loope
or
lods
adc
sahf
js
cmps
sub
cdq
jnp
cmp
add
xor
mov
and
fs
cmp
pop
dec
mov
push
push
inc
push
and
xor
ret
xor
pop
sub
or
(bad)
aam
adc
and
data16
jecxz
mov
ret
pop
push
jne
inc
push
sub
mov
adc
pop
loope
dec
push
xor
les
je
jo
sbb
mov
jg
inc
mov
out
dec
mov
dec
inc
sbb
fadd
mov
jns
jmp
adc
adc
push
xchg
push
idiv
cmp
jns
in
loopne
sub
data16
mov
jl
adc
movs
sub
fld
jno
pop
pusha
pusha
ja
(bad)
jae
or
or
inc
inc
inc
icebp
test
(bad)
out
mov
retf
andps
pop
sub
push
sbb
mov
aas
ins
dec
dec
jb
or
dec
outs
sbb
xor
and
xor
adc
jns
adc
mov
push
dec
push
adc
dec
movs
sbb
aas
add
push
rol
pop
push
cmp
or
cs
cwde
jmp
or
call
imul
js
jne
add
add
push
adc
cs
popf
mov
int
adc
fs
sbb
add
mov
sub
pop
dec
push
and
ins
pop
in
call
das
push
popa
gs
or
add
dec
sbb
jmp
int3
icebp
and
aaa
or
sub
push
dec
inc
arpl
push
push
or
aaa
xor
das
sbb
ins
sub
sub
sub
cmp
lea
cmp
jb
addr16
jb
jl
push
ins
mov
cld
loop
xor
out
and
push
and
and
push
ss
push
call
cmp
imul
xor
push
dec
ror
in
fsubr
mov
sbb
outs
dec
inc
push
xor
xor
xor
xor
ins
jo
sbb
ins
adc
mov
xchg
fmulp
xchg
or
add
aaa
out
test
dec
push
add
xchg
dec
aad
or
push
outs
dec
arpl
push
data16
adc
push
outs
jo
or
add
sbb
les
mov
xor
imul
xchg
add
inc
dec
mov
dec
test
bound
push
imul
pop
ins
imul
jp
cmp
or
push
cld
(bad)
(bad)
dec
fwait
inc
jg
pop
push
add
pop
or
push
cli
arpl
outs
lods
gs
retf
adc
js
aam
adc
mov
lds
adc
fwait
(bad)
popa
fisubr
adc
and
or
inc
cs
out
pop
xor
in
push
push
scas
inc
dec
pop
inc
dec
inc
push
push
inc
push
or
sbb
ins
cmp
pop
cmc
fdivp
daa
mov
push
pop
or
mov
mov
sbb
jmp
inc
xchg
(bad)
pop
push
jo
inc
gs
inc
repnz
outs
cs
push
mov
loop
push
pop
sbb
adc
out
pop
outs
das
pop
xor
inc
or
aaa
or
(bad)
sub
inc
ja
rol
cmp
adc
mov
inc
arpl
or
or
add
push
pushf
cmp
or
scas
pop
sub
enter
or
shl
jb
mov
xor
xchg
add
and
and
cs
outs
fmul
or
cmp
or
pop
je
mov
and
xchg
gs
dec
jne
pop
push
bound
fadd
retf
ins
data16
enter
or
sbb
jo
adc
xor
or
push
inc
dec
add
fild
mov
ins
adc
enter
add
(bad)
cmps
sbb
xadd
mov
movs
add
aaa
or
popa
imul
xchg
pusha
xchg
and
test
arpl
outs
inc
loopne
arpl
add
adc
pop
xor
enter
sub
or
xor
jnp
or
aam
scas
in
or
cwde
test
and
outs
sub
dec
ret
sbb
mov
enter
pop
dec
mov
inc
or
dec
dec
inc
push
fs
sbb
push
or
jge
or
mov
pop
jae
sub
outs
fild
add
call
push
pop
je
cmp
ins
or
mov
aad
add
js
or
and
hlt
fwait
loopne
dec
cmp
and
push
adc
dec
xor
(bad)
dec
ficomp
push
jp
push
arpl
arpl
and
or
cmp
dec
inc
and
mov
pop
scas
cmp
sub
movs
std
inc
je
xor
cld
push
and
(bad)
(bad)
and
xor
xor
aaa
cmp
xor
and
push
das
xor
outs
(bad)
fstp
das
push
sub
xor
xor
and
and
or
(bad)
adc
inc
inc
fstp
scas
mov
je
cmp
das
ja
cs
cs
das
xor
add
xor
cs
pop
and
push
fwait
lods
ret
loope
outs
and
je
je
and
pop
nop
ins
inc
add
loope
xchg
das
js
jo
jbe
fstp
xor
imul
test
ins
xor
enter
fisubr
jo
int3
cmp
jae
in
pusha
(bad)
(bad)
cmp
mov
ins
ins
jae
jmp
jbe
jae
nop
das
add
shl
pop
xchg
and
lods
data16
xor
push
in
and
imul
ins
outs
cmp
cmp
mov
cs
test
inc
stos
ret
push
mov
push
sub
gs
gs
and
arpl
push
ds
xor
xchg
lods
sbb
xor
or
add
jns
mov
inc
push
jp
xchg
lock
imul
push
cmp
sbb
ds
in
mov
jle
sub
cmp
push
movs
cmp
add
jbe
sub
xor
sub
dec
int3
cmp
inc
and
imul
add
push
cdq
cmps
enter
bound
scas
cli
popa
cmp
fs
xor
aaa
cmps
pop
sub
jne
mov
rcl
push
and
push
jnp
aad
lock
popa
ins
lds
inc
pop
ins
(bad)
aad
add
mov
loopne
les
sub
ins
imul
jo
frstor
retf
dec
fbld
popa
rcl
ins
jle
arpl
sub
cwde
loopne
inc
sub
pop
mov
mov
lea
ja
fwait
pop
movs
fcomp
inc
cmp
je
mov
jns
inc
inc
add
mov
aaa
das
cmp
cdq
cmp
js
push
popf
adc
popa
aad
cmp
mov
fisubr
pop
pop
mov
daa
clc
aaa
aaa
je
mov
leave
rol
(bad)
jne
dec
pop
and
pop
xor
(bad)
and
test
imul
ficomp
cwde
fadd
ds
sub
arpl
pop
inc
jae
or
inc
push
and
rol
jno
sbb
sbb
nop
sub
mov
das
add
test
stos
lea
add
stos
add
add
sub
shl
outs
fist
push
shl
scas
pop
and
(bad)
(bad)
(bad)
inc
js
arpl
(bad)
(bad)
aas
add
add
movs
dec
xchg
(bad)
out
in
mov
push
dec
push
mov
mov
scas
cbw
bound
and
movs
adc
(bad)
(bad)
jmp
mov
test
(bad)
adc
add
xor
orps
pop
les
add
dec
inc
or
dec
inc
scas
inc
pusha
xor
pop
inc
pop
dec
lock
imul
ror
test
push
jo
adc
or
xchg
fst
dec
add
inc
push
or
and
mov
cmp
xor
sub
xor
icebp
xor
xor
jmp
aaa
fs
fs
jmp
arpl
cmp
add
mov
dec
ror
icebp
lds
inc
sub
push
adc
add
and
test
add
stos
stos
mov
add
stos
add
add
add
stos
add
add
stos
stos
add
stos
ss
and
add
neg
push
inc
rol
lds
sub
dec
call
call
push
and
call
pusha
aad
lods
adc
ins
(bad)
out
pushf
call
(bad)
inc
test
mov
sar
mov
push
fbld
call
add
popf
jne
ret
outs
dec
xchg
nop
fst
js
add
shr
or
push
or
and
or
and
sbb
loope
push
mov
mov
sbb
xor
popf
int3
or
xor
jl
jmp
mov
dec
les
pop
sbb
cmp
xchg
xor
cmp
inc
or
mov
adc
adc
cwde
sar
push
mov
mov
dec
or
add
mov
cmp
mov
jl
xchg
shl
nop
sub
push
or
in
add
loopne
add
push
popa
imul
loopne
cmc
add
or
(bad)
jnp
int
or
cs
adc
or
push
scas
int3
adc
inc
pop
or
test
ret
ins
sub
cmp
adc
daa
push
adc
push
adc
(bad)
(bad)
jg
adc
sar
sar
adc
push
adc
and
(bad)
lahf
or
add
add
add
add
push
xor
jb
or
pop
xor
jne
call
jns
outs
or
fs
mov
adc
jo
outs
cmps
and
sub
mov
sahf
ins
add
outs
cmp
mov
or
cmc
xor
in
jl
fiadd
inc
mov
and
pop
(bad)
or
fdivrp
pop
inc
popa
xchg
test
cmp
sti
pop
or
rol
mov
loope
ret
jne
sar
das
out
jne
ret
adc
and
mov
push
xor
cmp
shr
pusha
cmps
or
rol
push
data16
rol
jae
or
or
je
xor
in
or
sub
xchg
cmp
cmovnp
cwde
call
push
ss
cmp
pop
mov
jmp
shl
sbb
dec
mov
pop
sahf
add
cmp
inc
sub
jo
push
sbb
cmp
add
daa
adc
pop
or
cdq
dec
shl
arpl
adc
ret
jo
(bad)
push
imul
dec
jmp
mov
jns
in
push
cmp
popa
dec
rcr
xchg
es
inc
add
test
ss
fcom
xor
shl
mov
inc
dec
sbb
inc
push
inc
xor
xor
add
movs
sbb
cmp
call
popa
push
js
cs
outs
or
outs
ds
add
or
jg
sub
(bad)
inc
dec
imul
dec
test
push
add
push
mov
std
(bad)
jmp
movs
xor
sub
xor
mov
ror
sbb
cmp
xor
pushf
add
and
dec
inc
sub
adc
add
and
cmp
pop
sar
sub
inc
mov
fs
ja
inc
cmp
adc
ja
bound
cmp
xchg
xor
push
pop
pushf
pop
mov
or
add
lahf
cmp
mov
sbb
(bad)
push
dec
jae
mov
cmp
jg
adc
or
pop
sbb
dec
(bad)
(bad)
(bad)
inc
cmp
jg
pop
pop
sar
pushf
jae
out
jmp
in
cmp
jmp
jg
arpl
fsubr
adc
aaa
inc
add
int
add
pop
movs
cmps
pop
inc
xor
jle
aam
push
push
ret
bound
inc
mov
in
lods
dec
stos
popf
fs
lock
call
(bad)
ins
js
call
add
pop
or
adc
cwde
sbb
sub
adc
clc
(bad)
(bad)
push
es
xor
xor
xor
fstp
sbb
(bad)
(bad)
jmp
jg
push
xchg
mov
mov
jnp
jle
mov
cmp
test
pop
xchg
(bad)
jmp
js
mov
test
xchg
xor
mov
(bad)
(bad)
(bad)
call
test
push
xchg
adc
push
cwde
imul
imul
mov
jp
(bad)
(bad)
call
push
loop
lds
in
mov
out
scas
mov
add
movs
mov
cld
call
sahf
aaa
mov
loopne
enter
out
lahf
iret
out
sub
out
inc
xor
xchg
mov
(bad)
(bad)
push
mov
sar
adc
xor
loopne
xor
sbb
test
or
dec
mov
jmp
test
inc
test
pusha
adc
add
jo
movs
push
or
add
sbb
jg
inc
push
jne
cmp
pusha
jp
jge
test
push
mov
(bad)
jmp
sbb
pop
pushf
and
mov
cmps
jp
stos
jnp
(bad)
(bad)
call
test
mov
mov
imul
retf
(bad)
(bad)
(bad)
(bad)
mov
call
xchg
mov
jp
leave
inc
mov
mov
cmp
stos
add
add
call
add
icebp
out
scas
mov
adc
movs
or
xrelease
add
call
and
repz
mov
push
adc
push
xchg
(bad)
(bad)
jg
adc
movs
push
adc
mov
xchg
movs
gs
and
cdq
and
out
mov
sbb
les
leave
jle
aad
dec
sbb
fsubr
jg
inc
xchg
or
pop
mov
fimul
push
jne
push
push
xor
add
(bad)
(bad)
cmp
push
test
addr16
jns
and
push
pushf
popf
adc
mov
inc
cmp
cmps
popf
stos
or
movs
cmps
xor
xchg
jo
(bad)
(bad)
(bad)
(bad)
mov
adc
xor
dec
les
add
js
adc
push
mov
(bad)
(bad)
(bad)
jge
sub
loop
jns
popf
mov
adc
pushf
jmp
and
cli
cmp
call
loop
retf
xor
int
dec
ret
out
js
pop
mov
sub
mov
(bad)
(bad)
(bad)
jmp
inc
or
jb
adc
and
movs
sub
(bad)
(bad)
(bad)
jmp
xchg
rol
nop
push
add
sbb
push
lea
and
inc
inc
push
pop
(bad)
(bad)
(bad)
jmp
or
shl
das
jo
pop
inc
es
je
add
add
sbb
(bad)
inc
push
jno
mov
popf
movs
or
bound
mov
add
or
sbb
mov
mov
(bad)
call
dec
ror
mov
or
mov
add
mov
jg
pop
push
sbb
add
out
xchg
mov
dec
imul
cmp
jecxz
inc
and
xor
jno
sub
inc
push
mov
repz
(bad)
out
mov
inc
push
pop
stos
nop
scas
adc
adc
dec
fs
mov
sub
(bad)
(bad)
jg
push
push
mov
xor
or
pop
clc
dec
ret
(bad)
(bad)
(bad)
jmp
or
lea
fwait
or
shl
or
ds
(bad)
mov
das
jb
pop
cmp
dec
xchg
xchg
adc
xchg
xchg
pop
cmp
xchg
cmp
xchg
mov
xchg
stos
cmp
and
add
push
popf
adc
xchg
test
inc
or
push
sbb
mov
(bad)
(bad)
mov
mov
pop
pop
add
jge
push
or
or
dec
fidivr
push
add
or
(bad)
(bad)
dec
xchg
fwait
dec
xor
or
rol
inc
shl
add
xchg
fwait
push
jmp
sbb
add
dec
shl
add
sar
adc
ret
xchg
add
mov
aam
adc
inc
pop
dec
mov
push
sub
stos
loope
aad
jnp
xchg
dec
add
pop
inc
rcl
(bad)
dec
jg
push
dec
xor
inc
or
mul
mov
dec
xchg
call
mov
(bad)
mov
cmp
xchg
bound
dec
and
dec
(bad)
(bad)
call
adc
mov
mov
dec
xchg
add
mov
dec
das
cli
call
and
add
test
lahf
es
jg
scas
cmp
sbb
xchg
test
inc
xor
sahf
mov
push
adc
or
add
retf
or
or
retf
mov
loopne
retf
fcomip
call
dec
mov
adc
mov
icebp
adc
retf
movs
sbb
clc
loop
mov
inc
add
dec
inc
add
jg
add
inc
mov
mov
data16
fwait
and
add
cmp
xor
inc
xchg
add
movs
ins
sbb
ja
mov
cwde
pop
dec
mov
(bad)
or
(bad)
(bad)
dec
mov
or
add
into
ret
adc
lds
sbb
adc
in
out
jmp
push
sub
fwait
push
loopne
push
pop
inc
cmc
call
or
or
jmp
and
lock
jp
or
test
jmp
jge
sbb
cmps
cmps
xchg
pop
scas
pop
xor
hlt
mov
call
inc
ret
in
xor
or
cmp
(bad)
test
mov
(bad)
jg
enter
sub
or
(bad)
push
adc
fimul
add
cmp
(bad)
(bad)
inc
shl
adc
inc
out
call
adc
mov
jne
or
xor
nop
push
sbb
push
push
add
je
outs
cmp
xor
or
xchg
mov
cld
(bad)
jp
or
lea
jo
add
sub
push
add
pop
mov
(bad)
jg
mov
stos
push
add
lds
pop
adc
ins
add
(bad)
(bad)
jg
movs
mov
add
es
push
sbb
ror
mov
aam
add
inc
outs
(bad)
(bad)
(bad)
inc
aam
adc
push
aas
dec
faddp
jmp
sbb
adc
pop
clc
rol
rol
mov
inc
cmc
sbb
stos
inc
xor
pop
(bad)
mov
mov
push
add
aad
or
sbb
push
js
jnp
dec
imul
sub
arpl
adc
xchg
xchg
cmp
(bad)
fcomip
call
adc
mov
add
sbb
inc
jne
jle
int3
aaa
cld
add
push
pop
mov
add
fcomip
push
imul
sub
push
cmp
push
or
add
inc
xchg
loope
(bad)
(bad)
(bad)
cmp
adc
and
int3
jmp
add
sbb
icebp
ds
cli
ss
lock
sub
pop
add
mov
das
push
or
or
sbb
xor
ss
jmp
mov
or
sub
or
dec
fmul
push
mov
add
inc
pop
sbb
mov
cs
add
jp
push
(bad)
(bad)
inc
jne
pop
jb
and
push
or
xchg
mov
inc
or
fwait
and
(bad)
call
push
mov
mov
sbb
test
cmp
push
xchg
inc
das
or
mov
ret
cwde
jle
mov
(bad)
(bad)
inc
pop
mov
sub
bound
pop
ret
adc
sub
int
adc
(bad)
call
dec
pop
loopne
shl
add
mov
inc
cs
fwait
shl
jle
jno
cmps
in
adc
stos
inc
inc
(bad)
mov
or
add
mov
push
or
xor
push
xor
es
(bad)
out
sti
jg
in
or
or
inc
inc
jns
sbb
fdivr
loopne
adc
dec
mov
inc
add
add
dec
add
fld
add
mov
fwait
mov
jmp
adc
mov
fsub
mov
mov
add
add
adc
add
les
(bad)
jno
push
add
ds
add
add
xor
xlat
mov
pop
or
or
adc
imul
scas
push
ds
add
pop
sbb
add
add
(bad)
call
xor
and
popa
jno
adc
adc
push
pop
xor
loope
sbb
bound
xor
ss
push
push
push
adc
sbb
aaa
inc
inc
inc
push
arpl
(bad)
(bad)
(bad)
push
xchg
rcl
sub
mov
push
fs
test
(bad)
inc
ja
movs
cmps
mov
push
sbb
jmp
sub
vaddss
xlat
in
push
add
dec
jo
or
add
ds
int
out
imul
add
or
add
push
fadd
ss
and
push
dec
inc
adc
lock
xor
adc
push
icebp
or
xchg
ror
inc
jb
shl
push
push
je
xchg
mov
dec
fs
aam
jmp
clc
or
inc
gs
xchg
mov
movs
push
ret
test
(bad)
(bad)
fiadd
or
mov
mov
or
xchg
hlt
popa
push
stc
ror
(bad)
dec
retf
sbb
push
in
xor
xlat
inc
out
adc
cmp
xchg
(bad)
jmp
add
xor
mov
inc
push
iret
inc
adc
cmp
push
test
sub
(bad)
(bad)
dec
jmp
inc
fisubr
inc
fs
test
xor
cmps
sbb
add
(bad)
fcomip
sbb
inc
and
xchg
adc
mov
int
lds
(bad)
(bad)
(bad)
call
xor
add
push
push
cdq
jg
xchg
ins
xchg
call
ror
movs
xor
es
(bad)
(bad)
(bad)
jmp
jno
sub
add
adc
rol
fst
push
jl
not
les
out
adc
jmp
(bad)
adc
sub
jo
call
ret
rcr
jg
call
test
lods
push
data16
vmwrite
inc
jns
loopne
in
add
into
cmp
(bad)
cmp
test
leave
int
inc
retf
pushf
adc
xor
mov
push
loopne
test
dec
pop
cld
repz
and
mov
test
ret
ret
push
lea
sti
(bad)
dec
jne
pushf
mov
xor
dec
ins
ja
mul
push
test
call
push
sar
arpl
push
and
into
mov
mov
test
stos
pop
and
(bad)
(bad)
(bad)
push
xor
sub
ins
loopne
or
sub
ds
and
lds
xchg
(bad)
inc
lds
movs
sbb
jge
cli
aam
sub
pop
jge
mov
test
(bad)
(bad)
jmp
add
jmp
jb
sahf
popa
adc
dec
aaa
push
pop
xor
and
pusha
push
xchg
jbe
sub
(bad)
(bad)
push
mov
sub
test
sub
sub
stc
bswap
repz
sbb
(bad)
(bad)
(bad)
call
add
and
push
xlat
sub
cmp
fld
out
fmul
inc
add
cwde
fs
(bad)
(bad)
push
sub
shl
push
push
mov
aam
pop
or
xlat
xor
adc
jmp
pusha
fisttp
les
add
(bad)
adc
pop
pop
stos
mov
xchg
dec
call
arpl
out
and
lahf
adc
(bad)
(bad)
push
xchg
push
xchg
mov
popa
mov
sub
aad
mov
ret
(bad)
(bad)
(bad)
call
adc
push
xchg
add
ror
fsub
fst
call
jnp
leave
mov
cli
mov
mov
out
cli
push
jo
pop
inc
adc
adc
sub
sub
add
call
sub
inc
aam
aam
push
jge
push
adc
xchg
jno
inc
sub
dec
sub
(bad)
sbb
and
or
xchg
mov
movs
adc
adc
pushf
in
(bad)
fcomip
mov
clc
cmp
retf
cmp
leave
repz
pushf
sub
jmp
push
addr16
shl
cmp
hlt
mov
retf
lods
fistp
sar
je
test
add
cmp
xchg
retf
mov
mov
jle
cli
test
jmp
add
adc
js
add
and
adc
scas
sub
bound
jbe
and
mov
inc
add
push
out
mov
call
xchg
out
jbe
(bad)
(bad)
call
adc
mov
sbb
inc
xchg
cmc
add
mov
in
(bad)
mov
enter
cwde
out
push
inc
out
adc
mov
and
push
push
adc
rol
mov
sub
jno
test
pop
xor
sbb
xchg
inc
outs
(bad)
dec
push
or
adc
xchg
jb
cli
pushf
pop
sub
in
or
mov
and
(bad)
(bad)
call
loope
sub
sub
pop
jne
sbb
dec
ja
and
xchg
or
jmp
jg
or
sbb
loop
shl
rol
and
(bad)
(bad)
call
loopne
dec
push
push
inc
pop
xor
outs
mov
pop
jnp
sub
call
int
(bad)
dec
and
stos
test
push
pop
push
icebp
in
push
push
shl
pop
(bad)
(bad)
(bad)
(bad)
cmp
jnp
jb
xchg
fsub
jne
xchg
xchg
(bad)
jge
(bad)
imul
arpl
pop
into
(bad)
(bad)
(bad)
inc
stos
scas
sub
in
mov
call
into
es
popa
xor
inc
mov
mov
(bad)
(bad)
call
mov
mov
dec
push
pop
sub
gs
mov
fwait
int
pop
sbb
push
(bad)
(bad)
mov
(bad)
cdq
push
sbb
adc
xor
inc
pop
dec
sar
inc
popa
and
and
mov
xchg
push
pop
leave
add
add
xchg
dec
rcl
into
wbinvd
ja
(bad)
dec
pop
shl
mov
sbb
shl
mov
or
jmp
movs
xchg
xchg
inc
mov
xor
or
jmp
adc
(bad)
shl
sbb
call
cmp
retf
push
cmp
sti
push
test
fcom
loop
cmp
sbb
call
xchg
jp
push
adc
push
push
jbe
test
out
push
push
add
scas
or
inc
(bad)
pop
add
pop
jbe
sbb
cmp
bound
nop
push
iret
hlt
push
adc
push
and
mov
ins
imul
push
scas
sub
das
mov
mov
bound
or
push
inc
xchg
retf
int
lock
test
test
push
movs
retf
pop
(bad)
xor
addr16
mov
inc
dec
mov
sbb
inc
lock
cld
(bad)
sti
inc
xchg
or
jle
inc
(bad)
inc
daa
data16
in
loop
or
(bad)
(bad)
jmp
call
push
outs
stos
add
pushf
mov
mov
and
icebp
mov
(bad)
call
xlat
lods
cwde
mov
(bad)
cwde
sub
jne
sbb
xchg
das
mov
fdiv
mov
mov
movs
lods
movs
inc
pop
stos
push
(bad)
cmp
stc
ret
mov
stos
(bad)
jmp
xor
test
in
cmp
imul
xchg
inc
xchg
test
(bad)
(bad)
(bad)
fidivr
inc
and
ficom
pushf
xchg
sahf
push
jno
sub
shl
(bad)
(bad)
(bad)
jmp
popa
stos
in
rcr
push
lds
push
and
mov
xor
ret
push
and
dec
xchg
jnp
repz
inc
test
push
ret
(bad)
(bad)
mov
and
movs
push
pop
push
ret
sub
sub
(bad)
dec
movs
call
inc
out
xchg
xchg
(bad)
xchg
int
mov
add
jno
lods
or
inc
xor
in
out
ret
(bad)
(bad)
(bad)
inc
sub
and
mov
adc
sbb
in
pop
pop
xchg
add
mov
push
mov
clc
(bad)
(bad)
inc
fistp
jmp
jp
xchg
std
xchg
loop
jge
in
cmp
(bad)
out
les
(bad)
mov
cli
ins
in
cmp
stos
sub
(bad)
(bad)
jmp
cli
(bad)
sub
cmp
mov
dec
dec
shl
stc
jmp
mov
sbb
cmc
call
dec
xchg
xchg
and
cmps
sbb
enter
out
pusha
pop
fmul
push
jmp
push
sbb
lock
mov
inc
sbb
jnp
jmp
test
(bad)
sub
popa
inc
hlt
mov
and
iret
inc
test
pop
and
retf
clc
push
mov
pop
cmp
fwait
(bad)
push
xchg
dec
jecxz
xor
adc
mov
pop
(bad)
(bad)
(bad)
call
mov
ss
popa
mov
mov
jg
sub
repnz
jmp
mov
mov
pop
jecxz
dec
sub
add
cmp
pop
loopne
call
jo
push
adc
sub
test
dec
test
cwde
popa
popf
ja
(bad)
jmp
and
adc
xor
cdq
pop
data16
jne
dec
cs
stos
adc
and
jo
cmps
sub
mov
and
and
and
mul
adc
cmc
(bad)
(bad)
inc
movs
stos
push
push
cli
mov
and
sbb
movs
and
dec
test
inc
jb
sar
cmp
and
es
xchg
and
stos
(bad)
(bad)
(bad)
mov
retf
aad
movs
xchg
cwde
xor
mov
add
lods
push
scas
and
test
inc
(bad)
(bad)
(bad)
jmp
lods
mov
mov
or
dec
xchg
xchg
daa
cmp
out
test
mov
(bad)
dec
cwde
aad
dec
addr16
test
add
adc
add
fsub
stos
(bad)
(bad)
(bad)
mov
mov
shr
adc
inc
pop
jae
dec
xlat
mov
pop
nop
ror
mov
jmp
jne
push
lds
movs
push
adc
mov
sti
sub
cdq
xchg
xlat
or
(bad)
out
(bad)
and
mov
jbe
and
pop
fld
xchg
ins
mov
cmp
inc
or
sub
fisttp
shr
mov
pop
or
ret
adc
mov
cmp
(bad)
dec
imul
fldcw
jnp
and
inc
pop
imul
pop
mov
mov
inc
mov
std
push
ret
push
loopne
popa
imul
(bad)
jmp
aam
push
push
movs
mov
mov
shr
mov
add
dec
add
xor
jmp
mov
jmp
sub
xchg
call
push
test
(bad)
pop
push
add
call
fmul
(bad)
call
std
(bad)
jmp
je
loope
pop
add
sahf
add
fsubr
(bad)
(bad)
(bad)
(bad)
jmp
dec
mov
xor
fwait
icebp
jle
jge
xchg
mov
xchg
in
loop
cmps
(bad)
(bad)
jmp
and
mov
add
ret
inc
mov
inc
jge
xor
inc
xor
sbb
(bad)
aas
popa
and
inc
and
cmps
push
cmp
out
pop
jecxz
adc
dec
arpl
sti
xor
add
fmul
sub
push
xchg
push
adc
inc
fstp
js
repnz
inc
sti
push
xor
pushf
mov
(bad)
(bad)
(bad)
jmp
imul
retf
adc
movs
call
int3
mov
stos
sbb
in
stc
(bad)
(bad)
(bad)
call
stos
mov
inc
jnp
cmp
imul
xchg
cmc
cli
inc
push
rol
adc
(bad)
(bad)
call
sbb
sbb
mov
iret
ret
cmp
jl
sbb
adc
(bad)
jg
xor
sbb
in
sub
dec
pop
xor
jmp
pusha
or
jne
(bad)
dec
cmp
sahf
jo
das
push
ds
mov
xor
add
test
(bad)
(bad)
push
stos
test
and
sub
inc
push
inc
pop
xor
cmps
loopne
pop
sub
ja
pop
ds
(bad)
(bad)
inc
xchg
sub
sub
and
xor
leave
sub
out
(bad)
(bad)
(bad)
call
popf
adc
inc
fwait
xor
aaa
aad
xchg
sti
imul
adc
(bad)
(bad)
jmp
inc
or
xchg
cdq
push
push
cwde
in
pop
push
or
jmp
repnz
(bad)
(bad)
dec
xor
pusha
or
fidivr
inc
fs
retf
push
jmp
mov
(bad)
(bad)
ja
and
xchg
add
push
mov
popf
inc
(bad)
lods
mov
(bad)
(bad)
(bad)
jmp
in
pop
cmp
mov
sub
imul
jge
mov
(bad)
out
mov
test
mov
or
or
jae
xchg
and
pop
dec
popa
call
scas
pushf
push
out
sbb
sub
movs
cmc
cwde
pop
mov
add
jl
jnp
and
inc
jmp
and
call
(bad)
(bad)
(bad)
inc
ror
repnz
int3
dec
dec
push
add
mov
jne
cmp
push
xchg
xchg
inc
enter
cmps
call
hlt
dec
xchg
(bad)
loopne
fisttp
and
imul
movs
lock
(bad)
jg
push
in
not
push
sub
inc
shl
adc
mov
cmp
sar
mov
add
jmp
leave
cli
or
out
mov
(bad)
(bad)
(bad)
call
inc
pushf
dec
cmps
movs
xchg
pop
and
loop
adc
fwait
push
add
and
(bad)
(bad)
jmp
leave
add
stos
pop
xchg
movs
sub
mov
mov
ret
neg
xor
js
test
nop
xor
or
sbb
inc
push
cld
(bad)
dec
mov
in
repnz
xor
mov
ja
add
(bad)
(bad)
shl
and
movs
and
pop
lods
sbb
(bad)
(bad)
(bad)
jmp
inc
and
lods
shl
push
adc
movs
push
push
mov
xchg
adc
icebp
(bad)
(bad)
jmp
sbb
icebp
mov
aaa
mov
and
jo
sbb
stos
sbb
(bad)
(bad)
call
xchg
cmps
call
jg
ja
pop
aaa
sbb
mov
out
xlat
test
iret
movq
ret
dec
ficom
fldcw
add
mov
scas
pop
cld
scas
clc
cmps
pop
xor
je
movs
jnp
outs
sbb
pop
push
cld
dec
icebp
test
push
jb
sub
test
sbb
ins
iret
dec
xor
(bad)
(bad)
dec
inc
sub
and
xor
jo
sbb
repnz
mov
jge
xchg
fst
xor
inc
mov
pop
mov
retf
cmc
lahf
pop
or
add
pop
push
(bad)
(bad)
(bad)
fild
sbb
stos
add
fisttp
stos
popa
adc
test
dec
add
(bad)
(bad)
dec
or
xor
retf
cwde
or
mov
out
push
inc
test
out
(bad)
push
mov
adc
lods
fcomi
pop
lods
cdq
scas
push
dec
lods
jge
and
(bad)
(bad)
(bad)
call
mov
mov
xchg
sub
or
inc
or
xor
iret
sbb
loope
dec
cmp
ja
inc
mov
outs
loopne
add
inc
cmp
in
and
xchg
loop
add
enter
(bad)
call
test
mov
in
pushf
push
and
lods
mov
(bad)
(bad)
mov
jns
add
int3
push
test
dec
mov
or
repz
or
test
xchg
xchg
or
mov
adc
mov
sbb
(bad)
(bad)
(bad)
call
stc
inc
loopne
xchg
test
pop
push
nop
movs
test
cmps
dec
int3
movs
adc
mov
jmp
push
or
clc
jb
jb
(bad)
js
inc
stc
jg
(bad)
in
int3
mov
pop
pushf
jno
adc
inc
xor
lds
(bad)
(bad)
(bad)
(bad)
cmp
mov
sbb
mov
sbb
sbb
pop
and
dec
push
pop
std
inc
jb
repnz
movs
sub
call
dec
dec
add
lods
pop
lock
pop
and
or
(bad)
jmp
in
es
shl
inc
jae
xor
popf
xchg
xchg
ret
(bad)
(bad)
push
push
cld
sbb
das
mov
mov
sbb
shl
test
xchg
sub
jmp
repz
stos
adc
cmp
add
in
fild
(bad)
(bad)
dec
fwait
mov
inc
bound
ret
int
add
sub
mov
aad
(bad)
call
out
test
mov
cmps
(bad)
xchg
mov
mov
dec
inc
and
retf
push
cmps
nop
sbb
or
cmc
(bad)
dec
sbb
push
enter
push
inc
push
xor
loopne
pop
ret
mov
xchg
(bad)
(bad)
jmp
sbb
popa
sbb
sbb
jg
fwait
push
mov
inc
into
icebp
cmc
push
(bad)
(bad)
call
and
add
mov
mov
sbb
mov
and
pushf
in
add
(bad)
(bad)
(bad)
call
cmp
mov
jne
mov
lahf
repz
iret
outs
stos
fild
mov
(bad)
(bad)
cmp
shl
push
inc
adc
or
inc
adc
inc
pop
xlat
xchg
xor
sbb
(bad)
(bad)
(bad)
inc
push
hlt
jo
(bad)
mov
sbb
lahf
aaa
cmp
sahf
xor
mov
stc
aam
cmps
mov
add
(bad)
(bad)
(bad)
call
sub
push
mov
push
shl
cmc
imul
fdivr
push
inc
outs
mov
(bad)
scas
inc
sub
ins
pop
aaa
(bad)
adc
in
dec
pop
inc
push
movs
out
addr16
(bad)
(bad)
inc
rol
dec
daa
inc
(bad)
mov
jge
out
sti
mov
stos
mov
mov
icebp
push
or
(bad)
adc
lods
sub
lods
xor
frstor
dec
mov
(bad)
(bad)
push
xchg
dec
xchg
ja
or
iret
fisttp
icebp
jb
stos
and
in
sbb
mov
mov
xchg
adc
mov
dec
out
scas
hlt
push
dec
sub
push
dec
popa
jge
ins
(bad)
(bad)
(bad)
call
push
dec
repz
out
push
pop
int3
lods
les
add
mov
jp
push
lahf
sbb
xchg
shl
sbb
cli
and
inc
rcl
movs
push
cmps
fwait
sbb
xchg
xchg
mov
lahf
xor
push
(bad)
(bad)
(bad)
jmp
xchg
mov
cld
loop
adc
jmp
mov
xchg
inc
ficom
(bad)
aam
mov
push
aam
int
sbb
(bad)
in
pop
or
fldenv
pop
add
(bad)
cmp
gs
xor
loopne
push
mov
xchg
dec
out
add
repz
(bad)
(bad)
jmp
xor
sub
adc
adc
aam
(bad)
jmp
cmp
(bad)
call
xor
clc
imul
sub
and
and
or
test
(bad)
(bad)
call
jae
sub
dec
xchg
mov
dec
jno
fst
xlat
(bad)
(bad)
(bad)
(bad)
mov
and
sbb
xor
jno
cmp
movs
(bad)
js
imul
mov
sub
in
and
push
xor
jmp
repz
add
lea
or
call
shr
(bad)
sub
pushf
sbb
add
inc
push
pusha
dec
mov
(bad)
fbstp
push
jecxz
bound
push
cmp
add
test
mov
push
loop
(bad)
(bad)
jmp
or
xor
mov
mov
push
test
scas
mov
out
jne
(bad)
(bad)
jmp
pusha
mov
cmp
pushf
add
adc
test
mov
repnz
icebp
ja
mov
mov
cmps
jle
and
out
(bad)
(bad)
(bad)
fisttp
xchg
fwait
fs
add
or
xlat
inc
(bad)
or
xchg
mov
mov
sbb
pop
inc
xchg
cs
outs
jns
jnp
fs
sbb
xchg
and
add
mov
std
mov
push
push
lea
jmp
jo
adc
ds
inc
mov
ja
popw
push
inc
push
loop
inc
fs
outs
fcomip
(bad)
jg
jb
pop
mov
pushf
add
outs
aad
add
dec
das
adc
(bad)
(bad)
inc
inc
jnp
jmp
mov
test
add
xchg
inc
pop
pop
xor
add
(bad)
imul
jg
(bad)
push
test
cmp
xchg
push
push
aas
fisubr
cmp
inc
sbb
mov
adc
nop
sbb
mov
adc
ins
or
xchg
mov
sahf
les
inc
and
cld
push
aam
dec
ins
or
adc
leave
(bad)
(bad)
(bad)
(bad)
call
ret
shl
mov
mov
gs
scas
cwde
sbb
aad
sbb
ds
(bad)
(bad)
jmp
pop
cmp
dec
and
mov
or
adc
pop
into
jp
call
push
(bad)
(bad)
inc
daa
stos
stos
add
pusha
jecxz
iret
pop
adc
scas
mov
and
jmp
mov
or
ss
or
retf
mov
jb
mov
push
(bad)
(bad)
(bad)
push
ins
iret
mov
mov
push
jne
and
js
aad
push
sub
cmps
call
xchg
or
mov
cmp
xchg
sbb
xchg
and
pop
inc
or
xchg
or
inc
cmp
lock
mov
xchg
xchg
or
add
(bad)
(bad)
jmp
inc
ins
pop
mov
inc
adc
mov
jmp
xchg
lds
loop
sbb
(bad)
(bad)
inc
pop
ins
push
call
pop
mov
push
push
xor
add
sbb
push
mov
dec
inc
cld
call
int
dec
add
xchg
pop
xchg
icebp
jbe
dec
ja
sub
imul
jo
enter
and
sub
adc
sbb
push
pop
hlt
popf
mov
(bad)
fbstp
jge
mov
test
mov
mov
adc
cs
mov
call
call
loope
movs
pusha
sbb
inc
retf
sbb
xchg
repz
ss
(bad)
(bad)
dec
retf
jl
mov
in
stos
popa
sub
dec
add
adc
add
call
mov
adc
and
sub
retf
add
outs
out
shl
(bad)
(bad)
(bad)
(bad)
jmp
jnp
std
std
rcl
sahf
stos
xchg
mov
(bad)
arpl
and
xchg
jb
test
jmp
inc
sbb
call
add
loopne
outs
cmp
test
xlat
push
movs
icebp
(bad)
dec
ret
fist
pop
dec
jle
cmp
sahf
fld
inc
add
mov
sub
pop
mov
popa
call
test
rol
test
xchg
adc
(bad)
(bad)
push
jmp
sti
add
add
adc
or
stc
inc
mov
dec
xchg
cmp
call
and
popa
cmp
popf
fsubr
mov
jo
call
scas
push
jae
xor
mov
pop
mov
adc
movs
dec
cmp
(bad)
jmp
lods
loope
pop
jmp
push
add
dec
ret
mov
mov
lds
pop
test
xchg
idiv
(bad)
(bad)
dec
xor
shl
or
lahf
inc
and
inc
psubsw
pop
lods
stos
mov
sbb
(bad)
cmp
sbb
cmps
push
cmps
fwait
clc
add
lds
(bad)
inc
lock
cmp
mov
push
dec
xchg
hlt
push
out
mov
xchg
pop
xchg
mov
fs
push
cdq
test
scas
das
adc
sbb
rol
bound
(bad)
xor
inc
xor
das
clc
inc
mov
sbb
inc
in
or
ins
aad
jne
adc
and
inc
push
imul
cmp
cmp
je
(bad)
(bad)
dec
mov
call
adc
movs
data16
vunpcklps
adc
(bad)
call
ret
pop
or
sbb
shl
cmp
xlat
mov
nop
add
push
jmp
retf
stos
in
fs
in
out
dec
or
test
fcomip
inc
and
xchg
(bad)
mov
je
dec
ds
mov
adc
dec
jg
and
jg
or
push
or
test
test
mov
jnp
(bad)
(bad)
(bad)
jmp
adc
xor
pop
lds
pop
adc
adc
mov
(bad)
(bad)
dec
movs
inc
je
dec
adc
xor
fldenv
cli
xchg
(bad)
(bad)
call
sahf
jno
push
ror
ret
xchg
dec
movs
sbb
(bad)
sub
ret
stos
xor
xchg
(bad)
xchg
dec
sub
mov
sub
jb
fist
(bad)
mov
cli
int
pop
fs
mov
ficomp
inc
mov
and
and
movs
ret
dec
jo
std
(bad)
dec
stos
add
push
stos
aam
bound
loope
sbb
xchg
inc
mov
push
std
call
ror
push
push
lds
jle
mov
outs
xchg
pop
sub
mov
pop
(bad)
(bad)
(bad)
dec
xchg
pop
push
test
into
call
inc
out
movs
shl
js
add
xor
(bad)
(bad)
jmp
mov
push
adc
mov
adc
sub
dec
add
dec
cld
(bad)
dec
arpl
cmp
mov
sbb
cmp
jbe
inc
fadd
push
adc
test
jmp
cli
ds
jne
int
sbb
dec
push
dec
jmp
ret
inc
xlat
dec
(bad)
lock
and
and
ret
(bad)
jg
dec
xor
and
cs
mov
mov
fs
inc
and
(bad)
(bad)
(bad)
dec
dec
or
or
in
in
mov
cwde
pop
or
mov
pop
inc
dec
mov
or
call
dec
or
and
int
and
sar
je
sub
sbb
adc
(bad)
or
(bad)
fistp
jo
out
inc
rcl
push
scas
jae
sub
or
fsubr
and
mov
push
push
jno
(bad)
xor
into
call
in
and
jne
imul
(bad)
aam
(bad)
call
loop
pop
cmps
add
fild
test
xor
push
ja
cld
jmp
fwait
and
ret
inc
pop
ret
inc
shl
xchg
nop
jp
push
fwait
(bad)
(bad)
call
cmps
stos
mov
cld
imul
out
cmp
imul
adc
scas
fisubr
add
je
xor
push
(bad)
retf
js
(bad)
loop
mov
(bad)
(bad)
(bad)
jmp
xchg
sbb
jb
sbb
enter
sbb
push
ins
and
(bad)
(bad)
(bad)
push
cmp
inc
mov
dec
push
mov
aad
cmp
mov
cmp
(bad)
(bad)
jg
mov
(bad)
fimul
jb
pop
inc
int
popf
rcl
sbb
jp
pop
enter
(bad)
call
scas
push
fiadd
sbb
movs
jo
test
or
(bad)
(bad)
(bad)
jmp
pop
lea
adc
mov
repz
sub
inc
je
imul
and
ins
mov
xor
push
inc
test
cli
aam
fiadd
dec
lods
adc
push
pusha
jb
mov
fild
aad
stos
(bad)
jmp
pop
into
push
mov
popa
fsub
jbe
(bad)
xchg
push
cmp
cmp
(bad)
(bad)
push
in
fldenv
jns
inc
or
aaa
das
push
dec
ja
ins
add
push
sub
xchg
(bad)
(bad)
(bad)
fistp
mov
daa
pop
cmp
pop
jmp
xchg
inc
sub
xor
mov
push
add
dec
mov
pop
shl
and
xor
cld
outs
or
(bad)
call
nop
xor
xor
mov
pop
cli
dec
cld
enter
add
imul
pop
inc
inc
std
lods
cmp
into
nop
or
out
pop
sar
mov
cdq
mov
dec
xchg
cmp
add
scas
loop
stos
sub
add
cli
fbstp
sbb
(bad)
shl
(bad)
out
cli
scas
mov
jae
mov
retf
push
pop
jmp
popf
push
(bad)
(bad)
(bad)
dec
jnp
adc
jne
jo
daa
cmp
movs
jno
sub
rcr
and
stos
adc
loop
(bad)
jmp
das
movs
xor
mov
sub
lahf
gs
or
mov
inc
adc
enter
sub
shl
cmps
xor
(bad)
cmp
sbb
pop
push
xlat
mov
xor
into
inc
(bad)
(bad)
(bad)
out
jbe
iret
xor
mov
push
enter
retf
stos
es
inc
mov
cmp
idiv
(bad)
(bad)
call
push
sbb
outs
cmp
sbb
mov
addr16
sahf
sahf
loope
mov
and
add
sbb
lds
xchg
sbb
cmp
in
pop
cli
inc
sahf
shr
push
mov
push
xor
call
dec
xchg
mov
in
xchg
mov
(bad)
(bad)
jmp
fwait
sub
jne
jne
shl
ja
ror
pushf
dec
add
int3
or
(bad)
(bad)
dec
retf
or
in
mov
data16
push
sub
stc
mov
lods
imul
or
mov
rep
pop
xchg
mov
sub
adc
call
jmp
movs
pushf
(bad)
sar
mov
add
(bad)
jmp
cmp
sub
imul
icebp
jecxz
js
sbb
pop
jge
sub
push
mov
test
fidivr
stos
pop
hlt
into
jno
cdq
sbb
xchg
das
pop
hlt
retf
lds
(bad)
or
(bad)
push
ror
mov
push
sub
out
repz
sub
addps
or
popf
push
pop
push
adc
(bad)
jmp
push
lods
xchg
push
pop
movs
add
push
int3
inc
or
clc
mov
sub
dec
stos
dec
push
cmc
stos
fcomip
(bad)
call
adc
stos
shr
(bad)
cmp
retf
in
in
ss
mov
(bad)
(bad)
jmp
add
out
jno
into
adc
xchg
mov
(bad)
(bad)
jmp
js
or
and
push
xchg
add
add
test
cwde
xchg
shl
mov
mov
mov
xchg
das
fist
in
nop
dec
inc
sub
mov
sub
stc
aam
jno
xchg
adc
cmp
hlt
push
int3
lahf
int3
push
xchg
in
dec
lods
rol
pushf
or
mov
gs
add
and
test
ret
xchg
les
or
jo
push
jmp
jle
cmp
or
or
mov
pop
hlt
in
adc
add
jno
(bad)
rcr
(bad)
(bad)
(bad)
jmp
ss
pop
fs
movs
(bad)
data16
leave
mov
fld
inc
call
loope
(bad)
(bad)
(bad)
fstp
sbb
xchg
daa
sub
dec
shl
in
adc
jmp
mov
(bad)
(bad)
(bad)
push
rcr
and
mov
inc
sub
lahf
jae
sar
jo
test
xor
(bad)
(bad)
(bad)
(bad)
call
inc
stos
ss
push
jl
out
dec
std
adc
push
adc
(bad)
ss
mov
cmc
mov
push
imul
(bad)
or
pop
enter
out
test
and
sub
les
jmp
repz
mov
(bad)
(bad)
jmp
push
pop
push
jp
mov
xchg
(bad)
aas
xchg
jae
data16
lods
cmp
ss
mov
(bad)
(bad)
(bad)
push
test
shl
dec
lods
xor
xchg
pushf
jmp
es
push
(bad)
call
sbb
outs
add
adc
iret
call
mov
push
jmp
adc
cwde
dec
dec
sub
push
inc
or
(bad)
ror
mov
sub
dec
movs
ficomp
fs
(bad)
les
out
out
out
in
jno
dec
imul
aad
mov
xor
(bad)
(bad)
call
xchg
retf
imul
cmps
mov
sahf
jmp
cmp
pushf
stos
mov
mov
ret
lods
sahf
ins
aad
arpl
mov
sub
inc
xchg
movs
sub
inc
mov
or
jo
sbb
sub
push
pinsrw
into
in
add
inc
mov
(bad)
(bad)
(bad)
call
nop
mov
mov
imul
jmp
movs
sub
jne
jae
push
(bad)
sbb
dec
(bad)
(bad)
call
loope
push
mov
retf
and
push
jo
dec
rol
jmp
scas
cdq
jecxz
and
dec
inc
faddp
adc
lods
test
dec
dec
pop
mov
enter
mov
add
pop
xchg
mov
push
int3
inc
add
push
mov
or
nop
shl
cmp
stos
test
pop
mov
push
pop
es
lock
aas
xchg
stos
(bad)
(bad)
(bad)
call
arpl
mov
mov
mov
test
dec
xor
jmp
xor
pop
jmp
or
mov
mov
push
sub
(bad)
(bad)
call
add
cmp
repz
fist
mov
test
push
and
dec
and
aaa
cld
call
jo
sbb
cdq
test
xchg
add
mov
int3
das
cdq
sub
sub
(bad)
(bad)
push
sbb
adc
test
aaa
mov
mov
fisttp
inc
add
or
or
push
inc
push
(bad)
(bad)
(bad)
jmp
add
push
add
(bad)
mov
sbb
scas
shr
sbb
cmp
xlat
cmp
add
loop
inc
push
sahf
or
inc
cmp
mov
(bad)
(bad)
dec
ret
rcl
nop
xchg
jl
and
sahf
cmp
repnz
or
(bad)
jmp
sub
adc
xor
pop
cmp
mov
(bad)
(bad)
call
and
lods
nop
imul
fs
pop
or
mov
and
les
fisubr
mov
cmp
pop
(bad)
(bad)
(bad)
jmp
or
dec
leave
add
inc
cmp
ins
cdq
mov
(bad)
(bad)
inc
mov
cli
and
add
push
out
push
xchg
leave
ret
push
adc
lock
adc
fcomip
(bad)
(bad)
jnp
push
sbb
add
addr16
and
cs
add
jmp
call
scas
mov
data16
jnp
je
pop
xchg
inc
inc
test
jmp
out
mov
inc
adc
test
mov
fld
pop
fnstenv
adc
(bad)
(bad)
call
out
aaa
stos
sbb
push
sbb
cmp
dec
add
inc
xor
jmp
ficom
inc
int3
aad
call
sbb
sub
mov
mov
aaa
cld
idiv
call
and
hlt
mov
jmp
iret
daa
xor
sub
add
movups
inc
add
sbb
xchg
mov
shr
mov
sahf
je
(bad)
(bad)
dec
jns
jo
std
push
daa
daa
rcr
dec
sar
or
xor
je
and
cmp
(bad)
(bad)
(bad)
inc
ror
gs
outs
(bad)
jge
pop
jne
jge
sub
or
rcl
mov
(bad)
(bad)
(bad)
cld
fld
adc
xor
mov
repz
cdq
pusha
xor
repnz
mov
mov
push
(bad)
(bad)
(bad)
inc
aam
pop
test
pusha
cmc
daa
mov
ror
push
mov
test
xchg
(bad)
mov
cmc
add
push
aad
xchg
pop
mov
sbb
push
scas
movs
(bad)
retf
mov
add
rcl
mov
and
cmp
call
xor
mov
or
xor
add
jbe
cmp
(bad)
(bad)
dec
cwde
rcl
sar
loope
mov
dec
lds
aaa
inc
sbb
xor
mov
dec
movs
push
xchg
xchg
sub
retf
cwde
mov
(bad)
int
adc
test
call
outs
mov
push
xor
arpl
sbb
jmp
lea
xchg
mov
cmp
test
xchg
(bad)
mov
call
pop
cdq
aam
jnp
aaa
add
rsm
jmp
lods
xchg
out
cmps
add
out
xchg
mov
retf
and
(bad)
(bad)
push
imul
or
fwait
sub
aad
daa
sbb
cmp
adc
call
jp
and
jmp
int3
adc
cmp
mov
cwde
mov
int3
pushf
call
cwde
aas
in
data16
add
mov
iret
push
and
or
or
(bad)
(bad)
(bad)
dec
jnp
mov
cmp
mov
jb
and
adc
repnz
sar
in
push
inc
dec
mov
lods
stc
rcr
(bad)
(bad)
call
nop
out
call
add
and
add
push
mov
add
add
mov
xchg
jae
pusha
dec
cs
push
test
into
inc
mov
or
add
jl
stc
out
mov
(bad)
(bad)
push
push
inc
xor
lock
lahf
repnz
pop
and
sub
outs
pop
iret
jl
call
ins
adc
js
lods
add
loope
mov
adc
adc
mov
mov
es
mov
arpl
push
push
(bad)
jmp
aam
adc
jbe
add
inc
pop
xchg
ins
cli
aam
stos
mov
inc
(bad)
(bad)
(bad)
call
dec
pop
or
jb
dec
add
push
add
sbb
ror
cmps
xor
in
(bad)
(bad)
dec
bound
push
jmp
xor
jecxz
xchg
xchg
mov
mov
jmp
(bad)
(bad)
(bad)
(bad)
jle
jo
dec
jno
data16
inc
jecxz
(bad)
push
mov
push
add
pop
mov
and
mov
dec
push
push
nop
shl
mov
mov
stc
adc
pop
adc
or
sahf
pop
mov
aas
(bad)
dec
or
jg
(bad)
jmp
fwait
(bad)
aad
cmp
movs
sbb
adc
push
mov
xor
push
fs
push
fsubr
dec
push
xor
je
nop
jmp
jmp
pop
out
stos
(bad)
and
or
mov
stos
(bad)
call
xchg
pusha
add
push
push
jg
sbb
pop
or
loopne
(bad)
(bad)
inc
jge
pop
cmc
push
jno
jle
xchg
stc
ret
mul
aad
jbe
(bad)
xchg
add
fs
and
xor
(bad)
call
fld
imul
add
shl
into
in
and
sub
icebp
pop
push
(bad)
(bad)
jmp
jne
push
jo
cwde
cdq
pop
sub
pop
cmp
ins
(bad)
jmp
dec
jb
cmp
clc
shl
mov
ds
rcr
das
add
(bad)
(bad)
(bad)
(bad)
jl
(bad)
les
dec
cmp
mov
nop
out
push
cmp
(bad)
or
test
mov
xor
push
jno
cmp
jmp
aam
xor
or
stc
inc
fmulp
dec
or
push
mov
or
(bad)
(bad)
(bad)
(bad)
mov
cdq
mov
movs
ror
push
and
dec
mov
sub
sub
daa
or
cmp
popf
xchg
fldcw
mov
sub
cmp
xor
adc
and
(bad)
(bad)
push
lods
inc
xchg
add
sub
cmp
jmp
call
mov
(bad)
adc
add
pop
push
test
mov
gs
frstor
xchg
mov
adc
pop
movs
mov
(bad)
(bad)
push
(bad)
cmp
push
adc
inc
mov
mov
(bad)
(bad)
jmp
mov
sbb
gs
(bad)
sbb
or
scas
les
(bad)
(bad)
(bad)
push
xlat
xor
bound
lds
dec
repnz
fisubr
popf
jnp
mov
sub
call
clc
jecxz
stos
push
mov
push
arpl
ror
(bad)
(bad)
movs
in
or
xor
adc
int3
xor
out
push
shl
push
fdiv
(bad)
cmp
sub
push
cmp
and
mov
shr
push
fs
and
cdq
fcmovu
mov
add
(bad)
jmp
inc
dec
mov
mov
mov
int
jo
mov
sub
pop
call
cld
jno
bound
cwde
push
inc
xchg
int3
into
xor
fcmovb
add
add
outs
cmp
into
and
inc
aam
cli
test
stos
out
inc
ins
std
xchg
and
(bad)
push
add
jp
jae
mov
into
mov
repnz
xchg
(bad)
dec
in
iret
sbb
fld
mov
(bad)
(bad)
(bad)
push
into
je
pop
stos
dec
and
or
ds
mov
gs
lock
dec
xchg
pop
into
cld
mov
xor
test
cmps
sub
sub
(bad)
cmp
call
xchg
out
add
sub
(bad)
repz
and
test
(bad)
(bad)
(bad)
jmp
mov
or
push
imul
shl
pushf
loopne
and
pop
xchg
out
jg
mov
cmp
cwde
nop
mov
(bad)
xchg
out
(bad)
(bad)
(bad)
jmp
add
xchg
sbb
dec
push
jnp
or
add
xchg
fs
pusha
xchg
sbb
jnp
sub
inc
daa
clc
aam
nop
dec
lods
inc
sbb
out
dec
mov
(bad)
call
pop
fs
pop
sub
retf
add
cmp
cmp
push
or
push
cwde
popa
sub
repnz
(bad)
jg
jmp
repnz
xor
repnz
fisub
retf
push
dec
push
repnz
sbb
js
inc
cmovl
pop
ret
scas
xchg
cwde
mov
adc
imul
into
jne
pop
push
and
(bad)
push
adc
add
ins
mov
mov
jns
inc
inc
pop
push
shl
cmp
gs
xchg
mov
dec
jp
repnz
mov
(bad)
inc
and
fcom
xor
pop
mov
mov
jb
xor
mov
ret
outs
cli
(bad)
call
cmp
test
inc
push
push
movs
or
test
test
jnp
ins
clc
(bad)
(bad)
inc
idiv
add
or
xchg
lahf
mov
outs
std
shl
(bad)
fs
lods
icebp
add
mov
pop
inc
bound
aam
stos
sub
in
cmps
mov
pop
adc
jns
(bad)
(bad)
(bad)
call
xlat
add
call
xor
ret
stos
inc
xchg
push
aaa
out
out
or
inc
adc
xor
sub
hlt
(bad)
jmp
sbb
dec
adc
lds
mov
mov
cmps
push
xor
hlt
(bad)
dec
mov
fcom
popf
xlat
sub
push
stos
sbb
and
add
arpl
ret
test
and
xor
or
xor
sub
or
adc
bound
(bad)
(bad)
(bad)
call
inc
inc
pop
dec
xchg
xchg
aas
pop
nop
pushf
stc
mov
(bad)
mov
add
arpl
fwait
jecxz
hlt
(bad)
(bad)
call
dec
mov
add
arpl
cmp
in
retf
cmps
push
push
(bad)
(bad)
call
leave
add
pop
retf
cmp
adc
push
pop
xchg
outs
add
mov
mov
pop
push
cwde
push
popa
sub
mov
or
rcl
dec
cli
(bad)
(bad)
push
cmc
push
mov
push
push
mov
sub
dec
stos
test
cmp
jg
out
(bad)
icebp
ins
inc
pop
push
dec
push
push
or
aas
data16
inc
inc
imul
shl
push
mov
xor
rol
inc
sbb
pushf
dec
fidivr
test
mov
xchg
push
(bad)
(bad)
cmp
mov
xchg
das
inc
add
add
mov
dec
mov
dec
add
into
add
inc
out
cli
mov
lods
div
mov
jle
pop
jns
mov
(bad)
(bad)
jmp
dec
stos
jnp
lahf
out
(bad)
pminub
and
or
or
push
sub
(bad)
(bad)
call
adc
mov
test
popf
invd
and
or
pop
push
pop
xor
mov
adc
mov
inc
xchg
call
pop
inc
push
int3
dec
and
jmp
xchg
ss
dec
pop
and
daa
pop
add
xor
xor
not
call
(bad)
xor
mov
xor
xchg
xchg
cmp
sub
pusha
movs
stos
shl
sub
in
dec
test
mov
pop
xchg
mov
shl
pop
out
test
movs
adc
and
(bad)
(bad)
call
rol
das
fwait
lds
rcr
ret
call
icebp
(bad)
jmp
(bad)
adc
push
xchg
nop
in
jae
sbb
adc
sub
cmps
cld
mov
nop
mov
mov
in
cdq
dec
into
push
clc
inc
jbe
push
adc
lods
xchg
push
cmc
mov
repz
call
(bad)
out
cmp
or
push
push
outs
dec
pop
nop
mov
imul
push
dec
or
adc
xor
(bad)
mov
sar
int
push
std
test
mov
call
and
adc
sbb
push
(bad)
sub
xor
xor
or
xchg
(bad)
call
sub
jbe
cmp
mov
hlt
xor
cli
inc
sbb
aam
mov
cs
sbb
fwait
outs
ja
add
pop
ds
je
sub
sbb
pop
(bad)
(bad)
(bad)
jmp
or
adc
push
ds
push
jmp
cmp
jnp
cmp
(bad)
(bad)
call
ds
ficomp
inc
and
xchg
ror
int3
mov
aam
scas
clc
jmp
inc
push
stos
fistp
xchg
adc
add
sub
and
(bad)
(bad)
(bad)
jmp
jns
xchg
dec
inc
rcl
xor
xchg
or
hlt
leave
push
pop
sbb
or
(bad)
call
push
sub
dec
dec
cmc
mov
jnp
adc
add
xlat
sbb
cmp
mov
(bad)
(bad)
call
xchg
xchg
sbb
call
mov
xchg
enter
int
loope
mov
mov
push
jnp
(bad)
mov
jb
retf
inc
push
add
test
test
add
(bad)
(bad)
call
(bad)
fdivr
cs
test
mov
dec
and
mov
push
call
sub
add
adc
and
in
les
cmp
cmp
test
sar
loopne
or
nop
jecxz
sub
xchg
add
(bad)
(bad)
jmp
retf
and
mov
push
sub
pop
(bad)
fldcw
inc
lods
pop
mov
mov
icebp
dec
add
(bad)
call
arpl
xchg
imul
xchg
mov
into
jb
jae
mov
inc
mov
scas
(bad)
nop
inc
cld
jmp
and
xor
xchg
mov
sbb
pop
push
and
sub
pop
inc
dec
or
fbstp
rol
imul
pop
mov
in
out
xor
cdq
jbe
or
jle
test
mov
mov
xor
push
repz
jmp
loopne
add
push
sahf
sbb
mov
idiv
jns
(bad)
(bad)
inc
lahf
and
sub
xchg
sub
cmc
and
(bad)
(bad)
(bad)
jmp
clc
or
and
push
addr16
mov
xor
inc
xchg
mov
(bad)
jg
mov
and
sbb
jmp
push
xchg
mov
jne
add
mov
(bad)
cmp
mov
test
mov
or
pop
loope
or
xor
jmp
(bad)
call
test
adc
cmp
jae
outs
mov
ja
into
mov
ins
sub
lods
adc
aad
jle
mov
and
push
shl
ret
and
add
cmp
mov
cli
cmp
dec
push
jb
pop
cmp
or
(bad)
(bad)
dec
vpaddq
mov
cld
cdq
fisub
xchg
mov
mov
add
(bad)
(bad)
push
int
mov
aaa
xor
xchg
and
mov
or
(bad)
(bad)
jg
dec
sar
int3
push
pop
sbb
inc
pop
or
push
inc
push
add
push
jp
lds
(bad)
mov
mov
push
mov
mov
dec
jl
(bad)
(bad)
jg
mov
cmps
retf
mov
nop
in
push
aad
adc
(bad)
(bad)
jg
add
mov
jno
fisubr
sbb
sub
push
push
xor
or
aad
(bad)
inc
cwde
jp
inc
stos
xchg
fdivr
pop
dec
cld
bound
cmps
sub
cmp
cs
(bad)
xor
add
or
sti
fadd
cld
(bad)
inc
(bad)
loopne
jmp
loopne
mov
je
pop
ds
(bad)
(bad)
push
stos
push
mov
xchg
mov
xor
sbb
xor
push
mov
cmps
lods
nop
and
(bad)
(bad)
inc
jl
sub
sub
fwait
loop
xor
pop
or
test
retf
pop
cld
xor
inc
and
mov
add
xchg
imul
jno
adc
add
popf
(bad)
(bad)
(bad)
(bad)
out
or
std
push
pop
cmp
hlt
jns
scas
sub
out
mov
push
rcr
ror
call
stos
jae
pop
sar
fnstsw
adc
adc
inc
jl
push
in
dec
imul
stos
and
(bad)
(bad)
jmp
cmp
cmp
push
xchg
jnp
or
(bad)
cmp
cmp
(bad)
(bad)
cmp
jmp
sbb
mov
inc
nop
push
or
(bad)
(bad)
(bad)
dec
dec
outs
pop
sti
add
cwde
xchg
fdivr
fadd
inc
and
dec
into
mov
push
xor
pop
cmp
mov
push
xchg
or
or
cmp
fisub
lahf
jle
sub
xchg
test
inc
dec
(bad)
xchg
jns
inc
repnz
scas
and
mov
pop
(bad)
jg
call
fcomp
sub
cmp
xchg
jo
movs
fcomip
call
push
inc
or
jl
xor
xor
ret
(bad)
(bad)
inc
test
adc
mov
cmps
xchg
mov
lods
dec
adc
mov
sub
(bad)
push
sbb
pop
repz
adc
inc
xchg
push
push
adc
fcomip
pop
sub
push
inc
retfw
mov
inc
in
into
lea
or
(bad)
(bad)
dec
xlat
inc
bound
inc
mov
sbb
and
mov
pop
cmp
cs
pop
enter
mov
jmp
mov
(bad)
(bad)
(bad)
(bad)
jle
js
inc
jne
cmp
cmp
or
push
xor
xchg
xchg
test
jp
dec
ret
jmp
je
pop
icebp
jmp
or
push
pop
sub
nop
cmp
mov
inc
pop
adc
and
(bad)
mov
retf
cs
sbb
push
jo
(bad)
mov
(bad)
(bad)
fisttp
retf
adc
pop
and
add
cmp
xor
fild
cmp
(bad)
jg
xchg
jmp
xchg
test
xchg
xchg
adc
dec
mov
(bad)
inc
xchg
shr
pop
adc
scas
or
jo
mov
popa
xchg
(bad)
(bad)
jmp
sub
add
pop
and
push
xchg
jbe
sub
jns
lock
fdiv
xchg
xchg
mov
jb
or
cmp
or
xchg
les
inc
push
sbb
sqrtps
mov
dec
sub
repnz
add
add
pop
nop
push
movs
jne
dec
cs
(bad)
(bad)
(bad)
dec
inc
sti
xchg
sbb
ds
jmp
lea
loope
adc
dec
jp
arpl
(bad)
(bad)
dec
or
leave
aad
push
xor
push
mov
push
mov
adc
xchg
xor
(bad)
(bad)
(bad)
fdiv
scas
adc
and
repz
adc
add
cmp
sbb
(bad)
(bad)
push
lock
push
or
setle
pushf
stc
inc
jae
or
adc
inc
cmps
xchg
call
rcr
(bad)
aam
xor
jo
sbb
imul
jecxz
sbb
xor
imul
sub
inc
adc
(bad)
call
jno
call
push
rcl
mov
out
retf
lods
sbb
(bad)
call
rcr
pop
and
mov
ds
or
adc
cs
cmps
mov
sbb
mov
test
out
cmp
and
and
sti
(bad)
(bad)
(bad)
inc
icebp
rol
cmc
jo
loope
in
xchg
xor
cmps
sub
into
std
xchg
retf
mov
out
mov
jp
mov
(bad)
(bad)
(bad)
(bad)
jmp
ret
popa
push
out
cmps
repnz
and
fprem1
mov
add
rcl
sbb
sub
bound
push
call
mov
mov
mov
xlat
(bad)
call
fisub
or
pop
pushf
(bad)
pop
xor
arpl
(bad)
(bad)
(bad)
jmp
push
or
push
or
imul
test
cmc
push
in
aam
adc
retf
xchg
push
dec
out
test
pop
sbb
ds
mov
movs
add
les
(bad)
(bad)
inc
push
xchg
push
or
push
xchg
movs
mov
xchg
loopne
lea
out
adc
jp
lods
(bad)
dec
lock
pushf
dec
cli
enter
pop
or
and
push
(bad)
sbb
cmp
(bad)
(bad)
jmp
out
jns
enter
xor
pop
test
stos
and
xchg
bound
movs
push
int3
sub
shl
dec
mov
hlt
mov
inc
jb
pop
inc
clc
out
ds
sub
mov
out
fisubr
test
sub
push
es
(bad)
(bad)
inc
shl
pop
inc
fld
xchg
adc
rcr
add
and
cmps
ja
call
into
jno
test
out
dec
mov
cld
int
cli
add
call
inc
nop
mov
(bad)
or
jb
xchg
push
call
(bad)
enter
pop
add
(bad)
push
lods
repnz
or
adc
nop
push
scas
jmp
and
adc
and
in
jg
jmp
mov
mov
and
pop
add
mov
sar
dec
dec
jno
outs
adc
xor
or
out
or
fstp
(bad)
cli
arpl
dec
gs
test
fucomp
mov
push
mov
or
lock
in
(bad)
and
mov
xchg
sub
or
retf
(bad)
(bad)
fild
sub
jns
fmul
push
mov
dec
push
push
enter
les
movs
xor
das
clc
outs
enter
dec
push
mov
adc
and
mov
int
(bad)
(bad)
fst
cmp
adc
dec
pop
std
push
xor
add
(bad)
jg
movs
imul
add
lods
pop
jb
xor
xchg
and
pop
dec
sar
(bad)
(bad)
jmp
pop
(bad)
xchg
mov
fld
repz
imul
mov
(bad)
(bad)
jmp
hlt
lahf
mov
mov
inc
fs
imul
push
rcl
mov
(bad)
(bad)
jmp
popa
mov
es
mov
dec
push
int
or
bound
mov
fldln2
cmp
(bad)
mov
(bad)
in
xor
aad
push
and
xchg
pop
es
inc
adc
(bad)
(bad)
inc
jne
add
sbb
cmp
mov
pop
adc
dec
(bad)
push
pop
xchg
(bad)
push
jl
mov
mov
adc
ret
jmp
inc
add
xchg
push
je
stos
cli
int
test
xchg
iret
mov
xor
adc
je
add
scas
addr16
addr16
bound
sub
xchg
inc
les
dec
mov
mov
mov
or
jne
mov
inc
in
repnz
and
mov
cld
sti
and
(bad)
jmp
push
mov
test
and
pop
push
mov
test
and
call
bound
out
mov
loopne
cs
push
mov
mov
xchg
mov
sub
(bad)
(bad)
call
test
mov
sbb
inc
nop
aad
push
iret
mov
xor
aas
retf
test
aad
test
cmp
loop
popf
xchg
sbb
push
xor
sbb
add
sar
cmp
dec
mov
clc
ja
cmps
call
xor
(bad)
adc
pop
cmps
movs
(bad)
(bad)
call
push
xor
sbb
push
add
popa
jmp
dec
mov
leave
(bad)
(bad)
(bad)
(bad)
cli
fdiv
cld
loope
and
std
and
push
adc
and
test
inc
mov
stos
mov
dec
fcomip
(bad)
jmp
mov
mov
lods
sbb
js
lds
pop
pop
(bad)
(bad)
inc
mov
inc
pop
cli
les
outs
mov
les
cmp
jne
inc
out
enter
jo
inc
mov
repz
pushf
aad
(bad)
(bad)
jmp
xchg
les
sub
jecxz
push
or
mov
and
adc
(bad)
(bad)
call
mov
hlt
fcom
inc
pop
jb
fisubr
jp
test
addr16
stc
sahf
push
dec
inc
push
(bad)
mov
inc
scas
push
cmp
xchg
mov
sub
mov
test
sti
mov
mov
jmp
push
adc
cmp
pop
push
push
jmp
add
movs
push
movs
dec
jb
rcl
in
repz
push
inc
cld
cdq
adc
(bad)
mov
push
test
movs
jmp
and
and
push
stos
enter
pop
mov
(bad)
mov
add
add
mov
gs
xchg
jmp
jg
sub
sub
cmps
mov
rcl
adc
or
scas
jno
loop
mov
setns
movs
mov
sub
inc
add
cli
sub
cmp
lock
icebp
out
ret
retf
and
stos
mov
mov
(bad)
(bad)
(bad)
dec
xchg
fld
jbe
mov
inc
mov
sub
jp
sbb
xor
or
es
(bad)
(bad)
push
and
lock
std
cmc
fiadd
pop
outs
enter
aad
aam
xor
stos
mov
(bad)
jmp
ds
imul
adc
cmp
jle
vmulpd
inc
dec
push
sub
xchg
mov
jmp
cwde
adc
cmps
(bad)
(bad)
es
push
cmp
xor
sbb
clc
scas
cli
call
imul
xor
in
or
push
mov
jmp
add
sub
pop
xchg
nop
xchg
pop
adc
dec
pop
mov
js
sahf
push
xchg
inc
dec
push
cld
xchg
mov
add
mov
into
mov
ds
sub
(bad)
cli
scas
xchg
push
in
pop
inc
or
stos
lods
adc
es
mov
(bad)
(bad)
mov
adc
push
mov
pop
lods
leave
aaa
cmp
push
(bad)
fimul
(bad)
fcomip
jmp
test
lods
rcl
dec
add
pop
xchg
cmp
(bad)
(bad)
(bad)
jmp
mov
test
iret
adc
push
stos
and
xor
sub
pop
or
jmp
sbb
rcr
(bad)
sar
xchg
arpl
sbb
jl
push
(bad)
mov
xor
fcomp
push
xor
push
shr
(bad)
(bad)
(bad)
push
test
push
(bad)
std
pop
fisttp
dec
in
mov
lds
cmc
jae
imul
jg
pusha
inc
and
push
push
test
adc
push
popf
(bad)
(bad)
(bad)
inc
mov
aam
stos
sbb
cmc
pop
(bad)
jecxz
push
cs
mov
or
(bad)
(bad)
cmp
jmp
xor
test
test
ficom
push
cmp
push
mov
(bad)
(bad)
push
arpl
retf
pop
and
icebp
ret
mov
inc
test
lods
xchg
cmp
(bad)
jmp
fwait
sub
les
sbb
cmp
xor
(bad)
inc
ror
loopne
adc
dec
cmp
jge
outs
fs
xor
rol
retf
pop
jbe
(bad)
dec
in
sbb
(bad)
push
in
or
lds
jmp
sub
cmp
shl
js
sbb
mov
outs
pop
call
stos
push
aam
pop
ror
call
(bad)
(bad)
(bad)
jmp
xchg
sbb
mov
test
and
sbb
jmp
mov
imul
lods
test
adc
rcl
fs
call
(bad)
in
push
shl
pop
adc
push
add
cmp
xchg
and
push
(bad)
jmp
and
pop
xchg
cmp
push
(bad)
cmp
dec
ss
xchg
add
sub
pop
pushf
sub
jle
push
dec
hlt
inc
outs
loopne
ja
(bad)
(bad)
(bad)
call
push
jmp
scas
push
(bad)
(bad)
and
aam
jmp
in
js
push
push
enter
adc
sbb
(bad)
push
test
jo
sub
movs
ins
mov
xchg
test
out
clc
(bad)
jmp
dec
dec
nop
pusha
fcmovb
imul
fwait
mov
in
push
ficom
dec
pop
mov
lods
add
jo
mov
lods
push
in
test
(bad)
aad
mov
clc
(bad)
(bad)
inc
lods
push
jbe
or
cmp
and
xor
mov
(bad)
pop
(bad)
(bad)
(bad)
jmp
mov
jg
out
dec
add
pop
repz
vcmpps
cs
(bad)
(bad)
(bad)
jmp
bnd
mov
xor
xor
pop
stos
repnz
xchg
push
xchg
aaa
std
(bad)
(bad)
out
push
push
and
(bad)
mov
out
sbb
(bad)
fisub
jmp
push
out
jne
jge
fdivr
aaa
pushf
sahf
xchg
call
(bad)
(bad)
jle
jo
cmps
sub
xchg
movs
les
inc
nop
inc
aad
enter
mov
arpl
(bad)
(bad)
push
loope
fs
sub
inc
aad
cmps
add
jns
fidivr
push
adc
xchg
fld
scas
(bad)
(bad)
jmp
mov
or
dec
aad
fstp
jmp
or
or
(bad)
mov
cmp
ss
sub
pop
cmp
icebp
(bad)
(bad)
(bad)
inc
jae
aad
pop
in
xchg
and
jle
pop
in
test
out
mov
mov
xor
les
jno
sbb
jnp
sub
sub
test
mov
out
and
xor
(bad)
cmp
jmp
sahf
push
inc
inc
in
fld
call
mov
add
cli
lock
mov
ret
jb
pop
dec
xor
push
(bad)
(bad)
(bad)
call
(bad)
sahf
addr16
pop
ins
aas
pushf
push
pop
aad
add
adc
popa
test
sub
fnsave
mov
stos
outs
repnz
(bad)
and
shr
xchg
cmp
(bad)
call
fiadd
pop
xor
dec
inc
dec
call
aam
pop
dec
call
(bad)
inc
cld
fdivr
mov
gs
add
arpl
dec
pop
or
das
xchg
sbb
cdq
inc
sub
adc
and
lods
shr
mov
jl
les
(bad)
(bad)
jg
in
pop
loopne
add
xchg
sbb
and
loop
xor
adc
mov
mov
cli
fistp
pop
dec
sub
xor
(bad)
(bad)
(bad)
jg
clc
ret
push
cmps
inc
aam
sub
nop
sub
loopne
or
ret
adc
and
cld
jmp
int3
xor
xchg
dec
loope
xlat
or
nop
push
push
push
mov
adc
aaa
stos
cli
stc
(bad)
(bad)
(bad)
inc
ds
jne
add
cmp
adc
or
cmp
rol
push
cdq
(bad)
(bad)
(bad)
call
adc
xor
rcr
adc
(bad)
shl
cmp
stos
mov
call
je
test
test
adc
test
cmp
jge
popf
mov
nop
adc
call
ins
jge
add
lds
dec
dec
das
push
das
sbb
(bad)
inc
pop
stc
sbb
jno
data16
add
xor
add
and
(bad)
(bad)
push
pop
mov
std
fiadd
sub
repnz
xor
adc
inc
(bad)
(bad)
(bad)
aas
nop
sub
retf
mov
mov
dec
and
jnp
lds
add
aaa
cld
dec
add
cdq
ja
lock
sub
idiv
pop
fmul
inc
adc
push
or
(bad)
jmp
sub
jb
inc
stos
imul
cmp
sar
and
push
sbb
jne
cmp
dec
push
mov
rcl
adc
inc
retf
(bad)
(bad)
(bad)
cmp
jge
lods
xchg
inc
adc
cmps
and
jo
cdq
ret
xor
dec
and
(bad)
jg
dec
ds
sahf
cmp
xor
inc
fwait
push
cmp
jb
xchg
stc
adc
(bad)
(bad)
(bad)
jmp
vpshld
sbb
int
pop
loopne
pop
jmp
sub
adc
call
jmp
mov
dec
cld
lds
sub
ja
mov
fist
call
mov
or
and
loop
push
push
xchg
mov
jg
xchg
inc
test
sub
push
push
retf
sbb
and
xchg
cmp
add
and
rcr
and
mov
push
fadd
sub
sub
add
pop
cmp
clc
pop
(bad)
cmp
imul
push
out
push
and
test
xchg
mov
test
xor
ins
cli
in
mov
cdq
in
fisttp
or
dec
cmp
adc
sub
pop
cmc
call
movs
or
mov
or
xchg
movs
jmp
jb
fwait
mov
dec
inc
scas
pusha
popf
jge
test
add
mov
dec
sub
xchg
sar
sub
mov
dec
inc
popf
push
mov
dec
cmc
cmp
jl
push
ret
mov
lods
dec
(bad)
pop
or
(bad)
call
xchg
push
xor
push
inc
adc
jmp
por
neg
repz
(bad)
jmp
ror
xor
retf
fwait
jno
test
jb
mov
loop
ins
rol
(bad)
push
mov
push
push
pop
mov
dec
add
mov
ja
jl
stos
in
test
scas
(bad)
jmp
mov
cmps
and
fs
dec
dec
push
and
push
mov
inc
in
(bad)
(bad)
call
mov
lods
pop
into
scas
add
mov
bswap
(bad)
(bad)
(bad)
pop
ficomp
mov
and
inc
jb
sub
and
mov
inc
inc
movs
xchg
pusha
inc
sub
(bad)
(bad)
(bad)
jmp
adc
stc
in
jecxz
lea
and
add
aaa
or
mov
push
mov
ret
(bad)
(bad)
jmp
cdq
push
adc
or
stos
xchg
(bad)
pop
mov
(bad)
(bad)
jg
mov
stos
adc
jne
pop
inc
loope
mov
arpl
dec
xchg
(bad)
dec
lock
aam
test
add
shl
mov
es
adc
add
jo
movs
inc
(bad)
(bad)
(bad)
inc
mov
mov
sahf
adc
pushf
push
ret
inc
sub
push
xchg
inc
xchg
sbb
pop
add
xchg
jmp
aaa
mov
call
lods
or
into
aad
xor
and
push
adc
sub
push
stos
jae
stos
dec
(bad)
(bad)
(bad)
call
add
ffree
xchg
pop
repz
pusha
repz
push
cmps
xchg
mov
jmp
mov
lods
sub
sbb
test
push
push
repz
and
mov
(bad)
(bad)
jmp
push
push
pop
gs
or
add
into
xchg
das
mov
ss
jl
(bad)
(bad)
jmp
add
adc
lods
inc
push
idiv
sub
push
aaa
addr16
in
mov
or
add
loop
inc
sub
xchg
int3
sub
xor
mov
mov
ins
xchg
and
jmp
xchg
jne
std
push
test
adc
leave
shl
xor
call
or
rep
or
jmp
fbstp
icebp
jl
sbb
ins
mov
cs
les
(bad)
(bad)
(bad)
aas
mov
les
lods
push
push
and
mov
push
rcl
push
sub
(bad)
(bad)
call
sub
out
mov
mov
xchg
call
imul
lds
aaa
pop
mov
mov
mov
inc
popa
xchg
push
add
sub
sub
in
popf
cmp
sub
jp
push
xchg
mov
movs
and
loope
cmps
lock
sahf
xor
push
das
sahf
cwde
gs
xor
pop
sub
test
dec
(bad)
(bad)
(bad)
push
push
lock
mov
loope
les
xchg
fimul
cli
out
dec
inc
add
jno
test
push
les
sbb
xor
cdq
jnp
vcvttpd2dq
xchg
aaa
lahf
test
jmp
pop
dec
sub
mov
sub
xchg
mov
adc
sbb
(bad)
(bad)
push
aam
cmp
in
ret
lods
ret
inc
xchg
mov
cmp
(bad)
(bad)
int3
lock
cmp
lea
mov
dec
and
stos
and
cli
(bad)
jmp
int3
pop
sets
sahf
scas
sbb
push
dec
jmp
aad
pop
sub
(bad)
(bad)
mov
test
fld
push
pop
push
ja
sub
fcomip
(bad)
(bad)
jmp
and
cwde
bound
fcomi
out
(bad)
mov
movs
sub
and
jmp
call
mov
push
adc
mov
ret
lea
popf
xchg
scas
pop
ficom
sbb
(bad)
sub
cmp
(bad)
(bad)
(bad)
(bad)
cmp
jl
popf
adc
inc
mov
test
lods
sub
int3
add
mov
inc
inc
cmp
(bad)
(bad)
jmp
cmp
cmp
pushf
xchg
push
and
push
cmp
cwde
mov
pop
adc
dec
sbb
and
(bad)
mov
sbb
mov
call
icebp
rol
mov
sahf
(bad)
(bad)
(bad)
fild
int3
push
mov
sbb
and
repnz
mov
xor
fdivr
jnp
xor
call
(bad)
push
aas
sub
leave
sub
nop
xor
pop
rol
add
call
cmps
adc
cmp
inc
retf
ss
sbb
jl
stc
pushf
fidiv
jne
je
loop
adc
push
sar
(bad)
(bad)
(bad)
mov
mov
jb
mov
add
and
add
inc
xchg
(bad)
(bad)
inc
shl
add
xchg
into
fdivr
push
and
mov
dec
push
mov
mov
sub
pop
je
jmp
fdiv
arpl
fsub
xchg
aam
pop
push
mov
mov
sbb
jne
push
cmp
or
out
cs
iret
test
test
(bad)
(bad)
(bad)
dec
mov
adc
sub
popa
loop
and
xchg
je
xor
adc
(bad)
(bad)
(bad)
clc
jo
leave
sub
sub
adc
cs
jecxz
mov
jl
dec
mov
leave
mov
(bad)
(bad)
dec
push
retf
dec
pop
movs
sub
inc
add
in
nop
mov
mov
(bad)
stos
mov
sub
xchg
sbb
jge
je
xchg
add
dec
int3
or
es
xor
jge
lods
xchg
jnp
adc
push
pop
popa
js
aam
mov
mov
icebp
fild
pushf
pop
add
daa
push
retf
int
shl
(bad)
call
imul
mov
lds
les
pushf
les
leave
aad
mov
jbe
ins
pop
cmp
icebp
lea
xor
(bad)
push
pop
lea
or
or
sub
in
sti
(bad)
jmp
push
mov
push
stos
inc
rcr
jno
mov
(bad)
push
dec
sbb
jo
sub
aam
ret
push
dec
xchg
or
sbb
(bad)
(bad)
call
enter
int3
cvtdq2ps
enter
pop
and
ds
xchg
scas
xor
call
pop
jp
ret
jle
adc
mov
sbb
xchg
in
enter
cmp
inc
fidivr
icebp
push
out
jmp
or
mov
xchg
imul
cld
mov
and
test
sub
sbb
dec
jecxz
xchg
and
add
call
test
cmc
movs
stc
sbb
jnp
cld
outs
push
in
test
jmp
sbb
mov
pop
or
mov
ja
in
dec
cld
dec
xor
(bad)
(bad)
fisttp
arpl
xchg
hlt
stos
daa
xor
movs
and
mov
dec
adc
out
dec
mov
(bad)
out
call
clc
add
cdq
jb
les
test
xor
sub
inc
mov
pop
pop
cmp
rol
add
xchg
aam
xor
inc
out
or
dec
cmc
fisubr
jg
stos
out
dec
mov
dec
test
and
sbb
mov
call
xchg
stos
mov
push
test
(bad)
or
jg
push
aam
(bad)
call
inc
outs
nop
mov
jle
jbe
and
pop
add
add
movs
dec
lock
inc
cs
pop
inc
pop
pushf
adc
dec
mov
out
cli
(bad)
(bad)
jmp
gs
inc
cmp
xor
mov
xchg
cmp
push
enter
(bad)
(bad)
out
xchg
imul
pop
out
mov
mov
mov
xlat
pop
jae
dec
mov
sbb
(bad)
(bad)
(bad)
jmp
xchg
out
jecxz
xchg
sub
cmp
mov
mov
adc
cld
fnsave
jmp
into
lods
pop
icebp
sbb
test
stos
je
add
xlat
ret
fidiv
iret
(bad)
(bad)
(bad)
mov
mov
dec
ds
cmp
add
(bad)
jle
dec
movs
jg
(bad)
push
dec
push
xchg
test
xchg
aad
call
bound
(bad)
(bad)
(bad)
push
fld
dec
mov
sar
jbe
in
dec
sbb
mov
inc
jmp
test
scas
outs
xor
xchg
jp
sub
mov
inc
pusha
and
xchg
cld
rcl
mov
adc
xchg
ds
mov
push
dec
dec
bound
fidiv
ds
lea
xlat
mov
(bad)
(bad)
inc
xor
sbb
mov
dec
frstor
(bad)
jmp
sbb
sub
push
iret
push
jge
ficomp
jo
outs
jbe
sub
jne
pop
cld
sti
popa
push
sbb
arpl
push
adc
sbb
xchg
(bad)
(bad)
(bad)
dec
in
scas
scas
imul
sbb
call
test
pop
or
cld
xor
(bad)
call
loopne
xor
xor
sub
sub
mov
xchg
or
push
rcl
jecxz
es
arpl
lock
test
test
xchg
cwde
inc
dec
leave
or
int3
xor
movs
and
adc
xor
data16
push
inc
dec
mov
and
pop
adc
sub
test
bound
(bad)
(bad)
call
xchg
loope
sub
aam
fild
pop
rol
sbb
jle
std
xchg
iret
iret
or
xchg
loop
or
call
inc
adc
sub
cmp
lods
add
mov
mov
cmc
cwde
xor
jbe
(bad)
(bad)
call
test
jns
sbb
cwde
dec
cdq
int3
mov
inc
or
inc
sub
pushf
cmps
xor
bound
call
add
and
push
push
daa
or
mov
mov
cmp
(bad)
dec
ds
repz
sub
xchg
or
pop
cdq
inc
or
xchg
imul
(bad)
(bad)
jg
cmps
mov
sub
loope
aam
dec
push
pop
ja
jmp
call
stos
or
add
mov
or
inc
or
push
mov
stos
test
aaa
(bad)
(bad)
(bad)
mov
mov
fild
pop
jae
fild
scas
das
shl
retf
push
movs
dec
and
inc
sar
fwait
dec
dec
shr
sub
cld
cld
fsub
sbb
std
(bad)
(bad)
jg
popa
mov
int3
pop
push
xchg
push
or
sbb
movs
or
xchg
mov
clc
adc
mov
popa
aam
aaa
xchg
xchg
fcomip
(bad)
push
mov
sub
movs
dec
stc
mov
dec
pusha
in
push
aad
sbb
inc
popf
out
jl
mov
push
jl
pop
stos
repnz
or
pop
xor
mov
call
aam
into
in
add
retf
push
pop
lock
loope
adc
mov
cmp
push
and
xchg
loopne
popf
aam
xor
add
mov
push
cmps
daa
(bad)
jmp
adc
jo
mov
jge
mov
stc
inc
jle
xor
push
nop
mov
test
repz
and
call
xchg
adc
das
xchg
stos
mov
jbe
push
sbb
xor
inc
push
xor
(bad)
(bad)
call
inc
sub
add
sbb
int3
in
adc
call
xor
(bad)
(bad)
dec
and
push
das
jno
jecxz
stc
push
enter
mov
xchg
in
pop
xor
jle
or
(bad)
(bad)
(bad)
cli
out
not
jnp
leave
jmp
xchg
stos
ficomp
pop
test
mov
(bad)
(bad)
(bad)
inc
in
push
int3
xchg
test
sbb
lahf
xor
add
inc
jp
mov
into
adc
(bad)
(bad)
mov
jbe
stos
xchg
test
add
push
not
mul
rcl
mov
(bad)
(bad)
call
dec
sbb
das
or
int
mov
loop
dec
pushw
out
inc
adc
cmp
data16
(bad)
(bad)
(bad)
inc
dec
pop
jmp
cmp
xor
icebp
sub
ds
enter
inc
(bad)
(bad)
(bad)
cmp
and
in
add
jle
mov
xchg
js
es
and
(bad)
(bad)
push
imul
out
lea
add
cmp
loope
les
push
add
inc
add
push
lahf
mov
retf
outs
pop
ret
xchg
bound
aas
es
dec
or
inc
fisub
(bad)
inc
jge
cwde
test
dec
cmp
mov
ins
xlat
add
test
loopne
(bad)
call
mov
mov
inc
push
enter
dec
test
(bad)
dec
pop
and
xor
rol
pop
dec
neg
(bad)
(bad)
call
jecxz
add
dec
leave
push
dec
adc
inc
dec
adc
loopne
dec
adc
jle
enter
(bad)
dec
xchg
mov
cmc
or
jmp
shl
inc
xor
cmp
xor
(bad)
(bad)
(bad)
call
retf
push
or
sub
in
sbb
jbe
fisttp
fcomp
ins
(bad)
call
cmp
jg
pop
sub
outs
mov
dec
call
push
mov
(bad)
(bad)
(bad)
(bad)
cli
push
add
xchg
and
push
and
mov
xor
push
js
pop
pushf
add
(bad)
(bad)
jmp
ja
pushaw
and
xor
add
xchg
cdq
cdq
daa
xor
jbe
xchg
pusha
(bad)
(bad)
(bad)
call
pop
cmp
loope
das
cmp
out
push
dec
cmp
xchg
pop
fsubr
and
and
(bad)
gs
(bad)
(bad)
dec
pop
inc
inc
dec
nop
retf
cs
inc
push
lea
pop
jmp
lea
mov
jmp
jbe
mov
inc
mov
in
adc
(bad)
cmp
add
xlat
pop
inc
or
mov
jge
push
adc
jg
mov
cwde
es
and
mov
inc
mov
(bad)
(bad)
(bad)
inc
or
and
mov
cdq
mov
or
inc
jb
xor
retf
jno
(bad)
(bad)
jmp
adc
or
inc
or
pop
aam
push
pop
inc
inc
dec
dec
mov
popf
sub
adc
cmc
ret
movs
vpsadbw
mov
or
xchg
(bad)
(bad)
jmp
scas
loopne
test
cmc
and
jp
inc
shl
outs
int
popa
fcos
(bad)
call
into
sub
je
int
add
cs
imul
xor
lds
inc
pop
jg
(bad)
call
fcomp
call
xor
jbe
push
rcr
sub
(bad)
mov
call
dec
ret
data16
jge
cmp
popa
inc
dec
daa
cmp
sbb
cli
push
inc
xchg
movs
shl
data16
jns
mov
inc
and
jge
sbb
cmp
mov
adc
dec
push
bound
cli
push
mov
jle
jmp
cli
inc
push
test
cmps
sahf
jne
xor
int3
je
(bad)
(bad)
inc
sbb
mov
xchg
push
ret
and
in
xor
and
push
xor
(bad)
(bad)
call
mov
adc
dec
push
push
cmps
jmp
add
mov
(bad)
(bad)
stos
pusha
std
(bad)
nop
add
sbb
xchg
inc
pusha
inc
retf
adc
jo
sti
xor
(bad)
(bad)
fild
hlt
mov
pushw
test
popa
scas
push
scas
cmp
sub
cmp
lea
xchg
pop
mov
adc
pop
xor
data16
fwait
dec
xor
mov
(bad)
mov
add
xlat
gs
xchg
psubusw
and
mov
(bad)
jmp
sahf
aam
and
or
je
mov
jmp
push
mulps
cld
mov
pop
movs
jl
shr
xchg
sub
(bad)
(bad)
push
cmps
ins
push
push
and
movs
pop
jne
ds
inc
sub
dec
sbb
and
ds
sbb
sbb
(bad)
push
dec
push
scas
push
(bad)
bound
fisub
sbb
(bad)
call
add
or
sbb
sbb
(bad)
push
loop
inc
push
and
cmp
jle
pop
cmps
adc
mov
int
dec
(bad)
(bad)
jmp
std
push
add
push
inc
movs
mov
scas
pop
mov
loope
jo
pop
(bad)
fbld
aas
pop
xor
inc
add
cdq
push
push
cdq
push
test
call
jge
jne
je
dec
test
pushf
imul
sub
mov
cli
stos
or
(bad)
(bad)
cmp
ss
mov
pop
leave
dec
cmp
ror
inc
mov
out
movs
repz
mov
dec
xor
xchg
outs
xchg
jmp
ffree
mov
retf
into
jmp
jecxz
inc
adc
mov
jg
cs
(bad)
(bad)
call
je
jl
sub
dec
imul
or
icebp
in
scas
popf
pop
push
pop
sub
add
in
cmps
(bad)
(bad)
(bad)
push
mov
stos
js
or
push
pop
cdq
xlat
adc
rcl
mov
idiv
add
jmp
xor
icebp
in
sub
pop
leave
add
aam
push
mov
mov
sbb
sbb
mov
dec
cmp
arpl
adc
scas
(bad)
(bad)
inc
push
in
jno
sub
mov
xor
loopne
stos
rol
(bad)
(bad)
jmp
push
fld
or
jmp
les
pushf
add
mov
pushf
xor
test
clc
aad
iret
out
mov
(bad)
(bad)
call
imul
shl
sub
push
cmps
adc
add
mov
mov
nop
stos
inc
pop
push
ds
sub
dec
push
loop
xor
dec
das
into
adc
jl
mov
cmp
dec
movs
jge
scas
clc
jg
push
mov
stos
push
fcmovnb
jge
xchg
in
pop
lods
sub
mov
(bad)
(bad)
push
xor
shl
jae
ds
push
add
scas
sti
push
dec
or
pop
or
(bad)
(bad)
(bad)
jmp
push
pop
imul
xchg
ret
sub
and
adc
popa
xchg
test
(bad)
(bad)
(bad)
dec
popf
fmulp
addr16
jnp
imul
iret
mov
sar
add
jp
in
mov
or
inc
jne
je
popf
push
and
jne
inc
mov
dec
mov
outs
sbb
push
xchg
sbb
in
or
inc
sbb
ins
imul
(bad)
jmp
test
sbb
adc
shrd
lock
test
leave
or
inc
mov
call
(bad)
(bad)
call
retf
out
fadd
call
ror
cmp
int3
push
(bad)
(bad)
(bad)
dec
push
xchg
xchg
fwait
mov
xchg
repz
pop
mov
and
add
stos
mov
xchg
dec
jmp
out
xor
mov
imul
scas
or
ins
cli
lea
jmp
ror
adc
jmp
pusha
adc
mov
or
xor
sbb
call
xor
sub
ret
loope
movs
sub
sar
test
inc
fdivp
cdq
(bad)
jmp
clc
(bad)
clc
lahf
push
dec
cmps
lods
sub
(bad)
(bad)
call
(bad)
and
or
pop
test
xchg
mov
fwait
imul
xor
xchg
lea
(bad)
(bad)
(bad)
(bad)
mov
icebp
xor
test
mov
sub
jae
sbb
shl
scas
adc
in
in
and
mov
mov
nop
inc
add
xchg
jecxz
or
popa
(bad)
(bad)
(bad)
jmp
enter
jecxz
das
mov
dec
mov
adc
in
loopne
jl
cmps
inc
add
(bad)
dec
dec
popf
cdq
jl
popa
lods
daa
mov
mov
mov
psrlq
repz
test
pop
add
(bad)
(bad)
(bad)
dec
mov
into
lods
cmc
jecxz
cmp
push
mov
out
mul
sbb
jns
adc
xor
test
mov
addr16
or
xchg
cmp
(bad)
(bad)
call
xchg
inc
push
or
cmps
jmp
xor
scas
mov
retf
or
pop
dec
xchg
jne
(bad)
(bad)
inc
mov
mov
sub
and
mov
movs
dec
cmp
movs
push
pop
bound
sub
push
push
push
movs
pop
add
adc
pop
(bad)
int3
sbb
fwait
(bad)
(bad)
jmp
cmps
addr16
xor
add
les
dec
std
xor
imul
xchg
fistp
movs
dec
ret
pop
cmp
xchg
pop
jmp
(bad)
call
pop
dec
icebp
(bad)
outs
cmc
dec
stos
push
not
jae
sub
icebp
inc
cld
push
and
push
aam
sahf
or
add
idiv
(bad)
(bad)
fist
mov
out
or
out
out
inc
xor
popa
sub
mov
sub
(bad)
(bad)
inc
mov
push
aad
aad
sbb
into
add
cmp
mov
loope
adc
jge
icebp
call
cmp
dec
int3
mov
adc
and
inc
stos
rcl
jb
(bad)
call
xor
cmps
xchg
ins
(bad)
cmc
jo
cwde
add
out
in
call
and
iret
adc
(bad)
jg
retf
inc
out
cmp
dec
adc
mov
xor
push
cld
(bad)
dec
xor
jecxz
sbb
mov
nop
loopne
in
(bad)
(bad)
(bad)
mov
xor
push
sub
or
mov
loopne
pushf
or
ss
cld
(bad)
push
xor
cli
mov
les
arpl
nop
arpl
lock
(bad)
dec
cmps
fisub
jnp
sbb
cmp
cwde
repz
push
xor
call
xchg
mov
lahf
cmp
mov
inc
push
push
adc
and
retf
mov
(bad)
call
lea
stos
push
test
xchg
and
pop
mov
inc
jo
test
mov
mov
fadd
retf
retf
fiadd
sub
(bad)
(bad)
(bad)
jns
fisub
sub
sar
mov
mov
inc
dec
popa
jb
test
or
and
loop
das
(bad)
and
inc
outs
enter
mov
xchg
sar
mov
xor
push
movs
push
jmp
lds
popa
push
sub
jmp
inc
push
ror
push
dec
xor
les
dec
push
out
sbb
mov
dec
in
sbb
xor
scas
pop
pop
loope
xchg
and
popa
retf
mov
(bad)
(bad)
(bad)
call
push
inc
pusha
xchg
add
xor
bound
mov
movs
repz
push
fstp
xchg
in
fdiv
loop
inc
jno
(bad)
(bad)
(bad)
(bad)
in
aad
out
jne
jp
in
add
dec
jl
into
xor
mov
sub
popf
cmp
inc
mov
test
clc
pop
push
pop
sbb
or
push
sbb
jae
(bad)
(bad)
(bad)
dec
pop
nop
xor
xor
test
mov
mov
or
(bad)
(bad)
js
or
lea
push
sub
inc
xchg
or
push
mov
mov
(bad)
(bad)
(bad)
push
mov
xchg
sub
or
jb
mov
lods
or
ret
and
data16
(bad)
jmp
enter
rol
(bad)
cmp
bound
mov
adc
data16
sub
sub
xor
shr
gs
dec
jae
inc
or
or
loopne
add
or
push
push
sbb
inc
xlat
adc
lods
movs
enter
std
bound
mov
dec
rcl
inc
push
call
mov
jp
stos
adc
sub
(bad)
(bad)
(bad)
(bad)
jmp
out
inc
js
rol
and
sbb
xor
add
ins
mov
(bad)
(bad)
call
push
and
push
jmp
cmp
pop
iret
jl
pusha
fiadd
adc
jo
(bad)
in
(bad)
les
jmp
xor
popf
ficomp
movs
mov
(bad)
call
jbe
mov
pop
cdq
jmp
pop
test
leave
pop
or
fiadd
sar
adc
sub
ret
mov
adc
lea
imul
ins
add
(bad)
(bad)
(bad)
fist
shl
cmps
out
xchg
xchg
dec
add
cmc
sub
push
and
cmp
xor
shl
adc
push
jmp
mov
push
sub
add
adc
div
(bad)
dec
fld
fadd
mov
je
push
mov
push
add
(bad)
jmp
and
push
or
lea
add
jge
iret
fdivr
out
dec
sub
dec
and
(bad)
call
in
pop
into
mov
adc
loop
out
les
bound
and
push
add
and
mov
mov
push
xor
and
cld
(bad)
inc
mov
data16
push
or
pushf
inc
adc
(bad)
call
pop
sub
push
push
sbb
shl
in
mov
cwde
xchg
call
add
fwait
cld
inc
adc
sub
(bad)
xor
push
cld
sbb
lds
adc
les
sub
(bad)
call
adc
aam
call
dec
in
jo
xor
ret
repz
sub
(bad)
(bad)
jge
add
int
add
inc
mov
and
adc
push
jns
dec
xlat
stos
push
cmp
add
xchg
cld
(bad)
(bad)
jmp
lock
xor
sbb
push
xchg
int3
pop
cdq
movs
loope
push
pop
popa
push
loopne
shr
aam
or
mov
in
pop
call
or
jp
sar
xor
ret
(bad)
call
frstor
add
test
ss
int
xor
retf
scas
inc
gs
xchg
sub
(bad)
(bad)
(bad)
inc
pop
pop
or
push
adc
shr
loope
dec
cmps
sbb
stos
xchg
(bad)
(bad)
(bad)
push
adc
sub
addr16
push
mov
jp
mov
xor
sub
jmp
dec
enter
inc
scas
aad
cmps
sbb
pusha
and
mov
test
(bad)
(bad)
(bad)
dec
mov
(bad)
adc
ins
or
push
xchg
inc
mov
ud0
(bad)
(bad)
fstp
mov
or
or
push
or
inc
shr
and
inc
movs
ja
inc
data16
(bad)
mov
jno
shr
mov
loopne
push
movhps
dec
or
xchg
(bad)
jmp
mov
mov
mov
pop
jmp
rcr
imul
(bad)
jmp
cli
pop
and
adc
repnz
test
aas
mov
or
and
adc
and
inc
sub
rcl
repnz
dec
push
dec
test
pop
dec
pop
mov
and
(bad)
(bad)
(bad)
aas
cmp
xchg
aaa
mov
adc
dec
mov
dec
test
leave
lock
or
shr
and
mov
adc
test
mov
and
(bad)
dec
adc
mov
js
mov
and
or
(bad)
jmp
sbb
sub
xchg
adc
fadd
daa
sub
push
xchg
(bad)
mov
push
lods
movs
push
nop
outs
dec
add
xchg
xor
jb
mov
inc
retf
(bad)
(bad)
jmp
psrad
sub
jmp
xchg
out
sbb
fmul
mov
sbb
and
(bad)
(bad)
(bad)
out
xor
outs
movs
fist
ins
or
or
ds
mov
pusha
or
movs
(bad)
call
loopne
mov
adc
adc
push
pop
adc
cdq
retf
test
jg
pop
test
jbe
dec
nop
call
adc
je
mov
push
mov
push
(bad)
pushf
popa
mov
test
cmps
dec
adc
icebp
(bad)
(bad)
(bad)
call
mov
inc
jne
imul
movs
mov
adc
push
pop
sub
jne
(bad)
call
add
xor
in
shl
xchg
adc
cs
dec
test
push
push
dec
or
mov
mov
icebp
ret
push
prefetchnta
pop
lods
aam
aam
dec
out
mov
(bad)
call
sbb
cmp
fcmovb
cwde
jb
stos
or
inc
(bad)
(bad)
(bad)
mov
mov
pop
outs
xchg
ret
xchg
jns
push
cwde
xchg
push
mov
push
adc
imul
js
mov
or
inc
add
retf
movs
jnp
mov
mov
add
ss
xlat
(bad)
(bad)
push
out
loop
push
test
lahf
push
pop
jno
scas
jp
mov
adc
xchg
xor
mov
(bad)
(bad)
jg
movs
dec
xchg
cdq
add
and
sub
cmps
ret
add
xchg
stos
push
cmp
sub
fimul
std
call
and
xlat
pop
mov
inc
or
scas
adc
(bad)
dec
inc
add
test
dec
shl
in
jns
lock
sbb
or
adc
cs
lods
out
mov
sbb
or
mov
or
push
dec
(bad)
(bad)
(bad)
push
dec
dec
fs
or
ss
es
mov
push
out
xchg
and
jmp
xor
stc
add
cmps
out
dec
and
imul
cmp
pop
cli
div
xor
xlat
popf
cmp
xor
fisub
movs
std
fdivr
(bad)
jg
inc
and
inc
inc
jae
inc
dec
push
cdq
das
cdq
add
lods
jg
(bad)
jmp
jl
mov
rcr
push
(bad)
movs
sbb
xchg
pop
loopne
add
movs
sub
dec
and
push
hlt
std
(bad)
fcomip
adc
in
and
fs
push
repnz
cmps
mov
sbb
cmp
jmp
xor
push
jmp
lock
sbb
inc
mov
mov
(bad)
fcomip
dec
inc
mov
adc
fwait
inc
xchg
int3
retf
push
cmps
inc
(bad)
cmp
pop
std
(bad)
jge
push
retf
sub
dec
fnstsw
and
daa
popf
pop
mov
imul
bound
push
add
push
or
mov
sub
ins
jnp
nop
daa
enter
(bad)
(bad)
push
mov
hlt
in
mov
push
mov
and
movs
outs
lods
movs
jp
sub
mov
aad
dec
mov
movs
add
sub
(bad)
ja
in
fld
in
sub
enter
outs
cli
dec
jmp
sbb
mov
pop
bnd
cmp
inc
(bad)
mov
(bad)
(bad)
call
cs
aaa
pushf
frstor
jmp
xor
and
retf
call
test
leave
sbb
outs
clc
call
rcr
push
mov
add
pop
addr16
sbb
jb
into
sbb
sbb
(bad)
(bad)
(bad)
push
addr16
jl
push
arpl
inc
dec
dec
push
sub
dec
sbb
xlat
xlat
push
enter
das
clc
cmp
dec
cld
mov
fbld
cmp
ins
std
call
movs
inc
sub
ja
retf
add
mov
lds
and
pop
(bad)
cmp
sub
(bad)
call
lock
adc
ret
sub
jmp
mov
(bad)
push
dec
adc
nop
ret
sbb
test
xchg
inc
shl
jb
adc
sbb
push
push
imul
stos
mov
cmp
xchg
shl
add
mov
and
jmp
popa
jae
pop
xor
jmp
add
movs
xor
sbb
push
mov
mov
push
std
call
cld
mov
adc
push
in
bound
cdq
(bad)
(bad)
push
push
out
ins
(bad)
adc
xchg
dec
jb
(bad)
push
jne
sub
pop
mov
clc
(bad)
push
enter
add
inc
in
(bad)
dec
and
mov
mov
sub
dec
cmp
ins
sub
push
(bad)
jmp
mov
jl
mov
mov
pop
outs
data16
fs
shl
xor
rcr
pop
add
and
xchg
stos
sbb
inc
add
sub
sub
mov
mov
mov
mov
jne
leave
dec
add
das
push
cmp
aam
je
cmc
(bad)
jg
inc
test
lds
mov
inc
dec
(bad)
fisttp
push
(bad)
call
or
cmp
jle
pop
and
jns
popa
(bad)
scas
cmp
(bad)
(bad)
(bad)
call
pushf
mul
das
out
mov
cmps
mov
les
popf
xchg
std
(bad)
(bad)
(bad)
fimul
enter
sbb
dec
mov
or
aam
lds
std
gs
mov
pop
mov
add
sbb
stc
jae
push
push
sbb
xor
dec
jne
sbb
push
inc
les
lea
cmps
add
in
inc
stos
cmp
push
push
jmp
ja
in
loope
or
in
rcr
int3
sub
push
sub
and
(bad)
(bad)
dec
int
or
jg
test
mov
add
loopne
(bad)
imul
pusha
(bad)
jmp
clc
nop
les
les
or
es
dec
or
or
movs
inc
dec
mov
ds
push
sahf
mov
xor
adc
dec
jnp
mov
dec
mov
(bad)
(bad)
dec
jnp
inc
push
les
sub
xor
(bad)
and
push
mov
cwde
jg
(bad)
dec
add
sahf
xchg
mov
push
and
mov
sub
pop
ja
xor
addr16
(bad)
(bad)
inc
adc
add
gs
xor
mov
sub
int
cmp
stc
stos
or
jnp
loop
jmp
cli
mov
(bad)
(bad)
call
jo
call
fucom
nop
add
inc
push
or
cwde
or
or
sub
popf
add
arpl
scas
out
or
fadd
(bad)
(bad)
(bad)
aas
jl
pop
movs
mov
adc
jmp
clc
icebp
xchg
cmp
push
mov
add
(bad)
jmp
and
dec
aaa
mov
imul
inc
and
and
(bad)
(bad)
fistp
fist
xor
enter
lea
inc
retf
fldenv
cmps
shl
and
(bad)
(bad)
(bad)
jmp
movs
fwait
nop
inc
jno
into
test
fwait
(bad)
std
pop
push
sbb
int3
jl
lds
lock
(bad)
(bad)
(bad)
call
cmp
jae
ret
dec
enter
sub
mov
push
xor
test
dec
in
and
fcmovbe
sti
sbb
dec
cdq
or
test
pop
leave
add
es
xor
mov
loope
es
daa
cmp
inc
das
mov
into
cld
(bad)
(bad)
jg
push
stos
inc
out
sub
mov
loop
mov
adc
(bad)
inc
sub
mov
or
mov
mov
mov
add
(bad)
(bad)
(bad)
jmp
outs
sbb
xchg
add
add
xor
in
push
stos
icebp
jae
xchg
jg
mov
bound
inc
aas
jl
data16
jp
rcr
add
in
sbb
call
js
test
mov
pop
xor
(bad)
jmp
icebp
pop
popf
sub
pusha
mov
cmp
pop
xchg
(bad)
adc
sbb
(bad)
(bad)
cmp
jbe
std
rol
mov
clc
mov
dec
rol
adc
(bad)
(bad)
jmp
fs
and
adc
push
inc
xchg
lods
inc
mov
mul
mov
and
mov
dec
ret
jmp
ret
out
test
push
pop
dec
sbb
pop
xor
out
(bad)
(bad)
call
mov
icebp
sbb
(bad)
sahf
test
xor
inc
je
fdiv
(bad)
jg
dec
adc
retf
dec
jmp
(bad)
sbb
das
(bad)
(bad)
(bad)
jmp
xor
xchg
xchg
mov
xchg
cmp
mov
xchg
stc
movs
pop
adc
xor
inc
pop
sbb
inc
jg
(bad)
call
shr
mov
add
in
push
jp
inc
xchg
inc
div
pop
cmp
sbb
in
movs
repnz
sbb
out
mov
cwde
sbb
(bad)
(bad)
push
dec
pop
stos
cmp
pop
jp
fwait
add
fptan
retf
test
jg
fdivr
(bad)
(bad)
inc
addr16
mov
lahf
inc
cmp
in
push
stc
jle
sub
xor
fisub
inc
cmp
pusha
sbb
in
mov
push
mov
popf
pop
stc
out
call
popf
cwde
dec
push
add
repz
cmp
(bad)
(bad)
call
ins
lods
ja
imul
dec
add
ja
or
mov
arpl
pop
not
fcomip
push
test
or
jo
cmp
inc
push
cmps
or
punpckhbw
(bad)
(bad)
jg
and
jecxz
fcom
out
push
inc
inc
cmp
lods
mov
xchg
in
and
push
(bad)
aaa
cld
xchg
cmp
out
mov
(bad)
jge
xchg
out
dec
rol
mov
jo
cld
gs
push
scas
outs
push
xchg
inc
inc
mov
push
bound
xchg
jbe
(bad)
bnd
and
ss
(bad)
or
push
mov
imul
rol
retf
adc
inc
add
(bad)
(bad)
(bad)
mov
push
mov
jecxz
sub
test
enter
add
ret
inc
xor
popf
aad
ins
jmp
movs
shl
(bad)
push
jb
inc
mov
mov
in
icebp
out
into
es
(bad)
jp
mul
pop
jnp
xor
push
cmp
or
(bad)
jmp
stos
pushf
jp
pop
xchg
cld
inc
jmp
dec
loope
sbb
cmps
mov
mov
jmp
inc
retf
sbb
imul
push
mov
(bad)
jmp
xchg
add
cs
cmp
loop
pop
and
sti
pop
mov
repz
mov
retf
sub
call
mov
test
gs
mov
(bad)
dec
push
cmps
mov
cmps
jmp
outs
or
push
ja
(bad)
jg
mov
and
jecxz
inc
mov
push
cdq
jne
push
mov
mov
jb
loopne
js
sbb
out
mov
xchg
das
add
aad
ret
push
ret
shl
(bad)
clc
xchg
sub
mov
or
inc
xor
jae
push
jae
scas
(bad)
call
cmp
fldenv
cmps
mov
fs
(bad)
(bad)
(bad)
(bad)
pop
add
push
lea
ret
jmp
mov
xchg
lods
mov
scas
dec
xlat
xchg
loopne
stos
into
mov
mov
call
call
pop
hlt
adc
scas
aad
jmp
jne
xor
test
(bad)
push
mov
sahf
lods
adc
add
popa
retf
arpl
retf
(bad)
(bad)
jg
jmp
loopne
or
rol
int3
or
inc
enter
dec
cmps
mov
add
add
mov
push
mov
inc
and
mov
jnp
movs
pop
and
idiv
call
jmp
xor
push
adc
or
inc
and
int3
(bad)
(bad)
(bad)
call
movs
je
fstp
sub
out
mov
dec
pop
xchg
div
popa
sar
retf
test
lea
xor
push
sub
xlat
stos
dec
xchg
dec
push
pusha
mov
into
xchg
retf
xchg
lea
scas
xchg
cli
xchg
adc
out
pop
mov
call
cld
sub
sub
xchg
mov
mov
mov
sar
(bad)
(bad)
jnp
xor
xchg
(bad)
loope
inc
or
and
jp
idiv
dec
xchg
xchg
test
jg
nop
xchg
cmps
push
aam
push
add
test
jno
inc
pop
sbb
nop
(bad)
(bad)
(bad)
dec
not
ffree
scas
rcl
pop
dec
mov
cmp
or
lds
or
popf
xchg
(bad)
mov
aam
test
mov
cmc
xlat
mov
ja
aam
jnp
lock
clc
cmc
mov
stc
les
or
adc
jnp
inc
push
mov
(bad)
inc
push
push
scas
cmc
and
xchg
add
popa
ja
jbe
mov
and
in
retf
std
(bad)
(bad)
dec
movs
cwde
cdq
call
cmp
dec
adc
and
adc
sub
je
std
(bad)
jg
push
sub
mov
test
stos
arpl
iret
or
pop
icebp
call
xchg
les
ret
je
pop
mov
sub
or
(bad)
call
pop
mov
into
ins
bound
jge
clc
push
loope
lds
add
stos
mov
(bad)
push
sbb
(bad)
call
rcl
loop
retf
push
push
int
shl
cmp
(bad)
(bad)
into
sub
sub
push
loope
push
mov
adc
cmp
pop
inc
sti
push
movs
sub
(bad)
call
sub
push
adc
js
mov
call
(bad)
in
(bad)
inc
lds
dec
int3
rcr
add
(bad)
(bad)
push
or
lds
repnz
js
out
das
call
imul
xchg
and
dec
pop
lock
clc
mov
mov
pusha
sub
adc
lahf
cs
scas
js
xchg
(bad)
push
cmp
in
or
movs
mov
cld
scas
inc
push
jae
aas
icebp
jp
push
cmp
sar
push
mov
das
sub
in
(bad)
retf
push
sti
xor
retf
mov
pusha
faddp
or
or
add
inc
loopne
mov
enter
daa
dec
(bad)
(bad)
jg
pop
call
jns
xor
mov
sbb
add
in
(bad)
(bad)
xor
mov
aam
sub
or
int
sub
(bad)
push
mov
push
xchg
xchg
ds
sbb
xchg
xchg
arpl
in
movs
cmp
(bad)
(bad)
fist
adc
mov
pop
rcr
test
loope
pop
push
sbb
jmp
mov
inc
shl
mov
dec
sub
xor
cdq
push
popf
repnz
mov
cmps
jmp
rol
das
out
repnz
cwde
movs
cwde
push
test
std
cs
(bad)
(bad)
(bad)
jg
mov
jno
not
jnp
or
movs
or
and
xlat
sub
(bad)
shr
daa
lods
sbb
(bad)
(bad)
inc
sbb
adc
mov
sub
icebp
push
jno
retf
jae
dec
mov
mov
(bad)
(bad)
push
push
mov
sub
dec
inc
and
sbb
je
cmp
dec
sub
(bad)
(bad)
cmp
cdq
fstp
js
sub
xchg
mov
inc
sbb
add
xlat
dec
xor
push
stos
(bad)
(bad)
mov
sbb
add
outs
xchg
mov
or
cmp
leave
icebp
(bad)
(bad)
jmp
cwde
push
push
mov
and
dec
ins
test
mov
dec
xor
pop
xchg
sbb
leave
and
(bad)
sub
push
or
and
hlt
jecxz
adc
nop
push
fisubr
mov
xchg
nop
inc
pop
dec
xor
pop
xor
rcl
add
popa
jmp
pop
ins
(bad)
(bad)
(bad)
push
push
stos
mov
(bad)
aad
iret
mov
jge
or
icebp
loope
rol
push
inc
inc
xchg
jae
out
scas
jg
or
movs
add
push
add
aas
mov
or
dec
scas
jbe
(bad)
(bad)
call
call
cmp
out
not
imul
mov
push
dec
jbe
add
(bad)
(bad)
jg
(bad)
push
or
inc
mov
push
cmp
cdq
adc
cs
scas
fs
fs
(bad)
call
aaa
xchg
push
pop
adc
int3
jmp
cmp
adc
sub
(bad)
dec
cmp
xchg
aam
push
sbb
jno
mov
repnz
add
dec
and
test
add
sub
lds
push
push
mov
and
push
je
fcomp
inc
mov
ja
push
(bad)
(bad)
jmp
pop
gs
dec
lods
add
pop
dec
bound
dec
bound
xor
mov
jmp
mov
or
loope
xor
aam
inc
sub
ror
retf
(bad)
(bad)
(bad)
call
xor
inc
outs
lods
mov
sbb
iret
leave
mov
sahf
pop
pop
rcr
stos
xor
ret
sti
sub
sar
mov
call
adc
inc
dec
dec
push
bound
xchg
inc
mov
repnz
ss
or
ror
cmps
ins
add
test
arpl
or
add
xchg
add
shl
xchg
lea
(bad)
call
xchg
adc
rol
xor
pop
lods
scas
pusha
xor
pop
adc
cmc
(bad)
call
or
push
jmp
mov
test
sub
pop
mov
aas
xor
and
je
push
lock
(bad)
(bad)
jmp
jle
adc
and
leave
ja
add
ja
fadd
and
dec
(bad)
jmp
and
test
test
inc
imul
and
daa
cmp
sbb
push
jmp
or
adc
test
adc
repz
jg
sbb
add
repz
out
out
mov
jmp
add
pop
data16
loop
and
bound
rol
(bad)
(bad)
(bad)
inc
push
jno
sbb
test
mov
push
fild
pop
out
inc
test
pop
out
dec
(bad)
(bad)
fcomip
loop
lods
pop
mov
mov
adc
mov
repnz
call
adc
mov
nop
xchg
hlt
mov
pushf
push
(bad)
or
dec
add
mov
mov
les
push
inc
test
mov
inc
mov
cmp
in
mov
je
pop
pop
psrld
dec
pop
mov
xchg
je
xor
sahf
pop
fdivr
aaa
cld
push
test
and
push
ja
jne
cmc
dec
ror
(bad)
in
popa
mov
and
pop
loop
imul
inc
inc
hlt
inc
pmaddwd
je
test
aas
push
jo
xchg
xchg
and
(bad)
out
jmp
arpl
and
mov
dec
add
mov
xchg
push
mov
out
daa
sub
stos
sahf
js
dec
mov
int
or
mul
(bad)
(bad)
dec
pop
cmps
push
adc
cmp
xchg
test
pop
cs
rcr
(bad)
(bad)
jl
add
cld
mov
xchg
popa
scas
sbb
xchg
push
call
(bad)
(bad)
(bad)
call
mov
xor
int
add
add
add
ds
(bad)
push
sub
outs
clc
inc
daa
xor
stos
mov
xchg
cmp
(bad)
(bad)
(bad)
fild
data16
popa
mov
and
dec
pop
pop
in
ret
pushf
cli
gs
mov
and
add
inc
aas
int
into
mov
loopne
jo
or
(bad)
(bad)
call
xor
cmp
and
xchg
mov
xchg
imul
sub
adc
(bad)
jmp
push
or
xor
sub
inc
arpl
sub
or
inc
lds
(bad)
out
pop
xor
add
loop
ins
jb
and
add
pop
inc
dec
scas
pop
cmp
or
call
mov
lds
add
xor
ss
call
dec
inc
sub
pop
pop
in
cli
sbb
les
ror
(bad)
(bad)
jg
jge
stos
mov
jne
push
data16
jne
cs
jae
movs
gs
repnz
(bad)
(bad)
push
mov
sbb
ret
arpl
jecxz
jl
jns
mov
into
jns
inc
pushf
mov
add
retf
mov
scas
sub
jmp
mov
or
mov
call
or
xor
les
sub
nop
or
jp
call
loopne
cmp
scas
clc
(bad)
mov
out
scas
gs
and
add
popf
icebp
push
sbb
stos
xor
adc
jl
ja
or
push
jmp
inc
popa
push
sub
cmp
movs
mov
(bad)
(bad)
dec
outs
adc
adc
repz
stos
aam
push
sub
retf
or
(bad)
(bad)
call
mov
add
jecxz
rol
loopne
mov
inc
adc
pushf
sub
and
scas
push
mov
lahf
dec
mov
jp
sub
xor
dec
mov
(bad)
call
xor
xor
xor
and
dec
sbb
mov
jmp
mov
stos
mov
out
ficom
(bad)
jmp
(bad)
or
pop
and
adc
ret
mov
test
shr
push
sbb
jmp
push
push
sbb
pop
lock
ret
xchg
fs
(bad)
hlt
push
(bad)
(bad)
(bad)
call
dec
cmc
outs
gs
cmp
mov
xor
lods
int
lahf
lods
pop
scas
aaa
mov
(bad)
(bad)
(bad)
(bad)
call
mov
scas
outs
adc
cmc
jb
lea
xchg
push
rcr
cmp
and
sub
dec
cwde
mov
and
jg
jge
jmp
(bad)
(bad)
inc
sti
sbb
fs
stos
or
dec
push
mov
test
mov
mov
sbb
pop
and
rcr
movs
loopne
jne
jno
add
lock
mov
dec
js
cmp
pop
popa
xor
add
hlt
(bad)
(bad)
(bad)
cli
cmc
push
test
mov
fwait
idiv
jno
stos
frstor
aaa
cs
push
(bad)
(bad)
(bad)
fbld
das
ror
pusha
fsub
sub
imul
cmps
cdq
add
pop
ins
sub
(bad)
dec
outs
sbb
push
pusha
xchg
dec
inc
dec
push
enter
pop
sbb
scas
(bad)
(bad)
mov
addr16
retf
push
dec
(bad)
sbb
push
and
ins
sub
xchg
push
call
xchg
push
pushf
add
mov
(bad)
(bad)
inc
add
sub
and
push
push
cmp
(bad)
(bad)
jmp
arpl
dec
and
mov
lea
adc
int
cmp
call
je
push
nop
mov
push
mov
dec
add
xchg
and
ins
jno
rcr
call
jp
push
jo
scas
retf
xchg
pop
xchg
test
cmps
nop
retf
and
mov
(bad)
dec
je
mov
mov
das
jne
add
in
test
out
xchg
ss
push
pop
sub
es
enter
jp
fld
popa
fsub
xor
add
leave
mov
dec
dec
push
dec
ja
sbb
mov
sbb
xor
jmp
xchg
sub
and
mov
mov
jns
sahf
(bad)
(bad)
(bad)
call
imul
inc
nop
call
fs
lds
ret
push
push
in
push
xchg
mov
(bad)
call
je
daa
mov
ins
inc
sbb
mov
fst
lds
mov
sbb
out
mov
icebp
adc
jo
mov
fs
int3
jmp
ja
test
call
sub
sbb
cmc
add
dec
pop
movs
xchg
cmp
mov
jae
and
and
and
jge
test
cs
call
std
out
or
add
lods
lods
cli
stos
dec
push
push
lods
rcr
xchg
test
outs
jne
cmc
(bad)
(bad)
(bad)
mov
xchg
cmp
dec
xchg
or
dec
out
push
cld
mov
mov
(bad)
int
push
shr
inc
pop
mov
test
pop
int
imul
jg
(bad)
(bad)
(bad)
jne
sub
adc
push
sub
dec
mov
in
xchg
xchg
(bad)
(bad)
call
cmp
outs
(bad)
push
adc
enter
repz
push
shr
int3
dec
sub
out
lods
push
inc
fstp
pop
cmc
pushf
scas
stc
movs
lea
xor
daa
sahf
and
jl
imul
jo
ror
lods
mov
pop
stc
mov
sub
mov
jmp
movs
add
add
mov
test
scas
clc
call
fsub
daa
or
jcxz
mov
or
jmp
dec
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
popa
data16
mov
jae
inc
mov
cdq
test
rcl
sbb
(bad)
aam
cmps
(bad)
in
outs
int
add
jne
pop
(bad)
in
retf
cmp
js
adc
repnz
(bad)
(bad)
(bad)
inc
push
adc
int
ins
xchg
pop
mov
mov
sub
stc
scas
push
(bad)
(bad)
(bad)
push
cwde
loopne
mov
jo
mov
aam
add
int
cmp
test
call
cs
aam
enter
inc
jo
jmp
sbb
xor
js
pop
test
adc
inc
ret
sub
xor
adc
sub
pop
aad
test
xchg
outs
(bad)
jnp
pop
(bad)
retf
xor
jg
pop
mov
in
jecxz
mov
xor
call
and
retf
inc
dec
xchg
shl
push
(bad)
jno
mov
(bad)
(bad)
(bad)
mov
jbe
xchg
mov
dec
mov
dec
mov
mov
ds
sub
adc
cmp
push
dec
push
cwde
sub
mov
mov
push
push
push
inc
movs
cmp
call
inc
pop
arpl
adc
aad
jno
out
jmp
sub
mov
(bad)
xchg
inc
xor
xchg
push
mov
add
addr16
and
push
add
sahf
xor
sbb
out
xlat
scas
pop
(bad)
(bad)
(bad)
jmp
or
sub
inc
cmp
aaa
cmp
jp
sbb
lods
cmp
inc
or
sub
fistp
mov
cmps
cdq
mov
and
sub
and
lods
test
stos
sbb
inc
jmp
push
push
push
stos
das
fsubr
mov
cmps
sbb
dec
or
xchg
ss
inc
push
push
pop
sbb
in
push
adc
and
(bad)
(bad)
push
aad
cli
lods
in
xor
sub
inc
mov
pop
ret
fwait
xlat
inc
jno
out
jg
cmp
lods
ds
aam
mov
or
mov
rep
lahf
pusha
inc
in
sbb
jb
stos
or
and
xchg
or
fwait
out
mov
loope
out
clc
clc
mov
dec
dec
movs
xor
sbb
(bad)
call
call
dec
mov
jno
jmp
(bad)
test
(bad)
(bad)
jmp
push
sub
lea
add
test
jae
inc
adc
xchg
push
pop
pushf
call
xchg
sbb
pop
xchg
aad
add
xor
(bad)
pushf
dec
and
jl
sahf
out
cli
(bad)
(bad)
mov
fwait
adc
add
dec
sbb
xchg
push
popa
fimul
aad
(bad)
jmp
ror
bound
xor
sub
dec
adc
add
jg
imul
test
int3
lods
push
rcr
sbb
add
jnp
mov
sar
rcl
in
and
dec
or
dec
cmp
and
and
in
(bad)
(bad)
jmp
mov
rcr
adc
mov
dec
cmp
test
(bad)
dec
outs
pop
jmp
test
add
aas
clc
(bad)
jmp
cmp
jno
(bad)
adc
mov
inc
inc
and
pop
(bad)
retf
mov
call
push
xor
fwait
dec
xor
push
mul
mov
inc
mov
pop
jle
push
outs
data16
lahf
or
mov
(bad)
mov
xchg
pushf
lods
fstp
dec
cmps
or
adc
test
mov
jmp
enter
or
fwait
jmp
cmps
adc
popa
fcmovb
or
mov
(bad)
call
rol
jae
loop
inc
xor
sub
rol
lahf
outs
adc
push
pop
mov
popf
aas
pushf
clc
mov
fwait
mov
xchg
pop
xchg
and
dec
lds
je
(bad)
jmp
and
xchg
xchg
and
stos
aad
sbb
push
sar
rcr
sbb
movs
aam
gs
inc
div
push
add
inc
ins
fst
aaa
jne
call
retf
or
das
jns
dec
lods
dec
jno
dec
push
and
(bad)
(bad)
(bad)
(bad)
out
daa
xor
mov
pushf
cmps
sub
mov
or
push
retf
cmps
rcl
mov
sub
push
push
dec
push
sbb
test
xchg
jge
sbb
popa
inc
dec
rol
rcr
sbb
ret
push
mov
cdq
xor
(bad)
(bad)
(bad)
push
adc
leave
cmps
sub
sub
inc
in
cmc
jmp
test
dec
(bad)
sub
jmp
or
test
xchg
xchg
or
fiadd
pop
imul
jmp
test
dec
or
pop
xchg
or
cli
imul
shr
dec
mov
mov
ins
popa
or
sub
pop
mov
hlt
push
or
fwait
dec
sar
(bad)
inc
sub
mov
sbb
sar
mov
cmp
aas
call
inc
dec
sub
(bad)
(bad)
(bad)
fisttp
mov
scas
push
xchg
int3
inc
sub
or
adc
lea
cmp
out
mov
mov
loopne
push
cmp
inc
mov
push
ucomiss
inc
sub
xchg
(bad)
(bad)
sti
and
int3
rcl
pop
jmp
push
sub
push
mov
jmp
stos
mov
mov
jnp
movaps
mov
mov
aaa
push
add
dec
loop
gs
pop
cmp
(bad)
dec
jne
movs
popf
and
js
aas
pop
pushf
movs
xor
pop
mov
jo
(bad)
jg
call
sub
or
(bad)
vpsubusw
loopne
sahf
into
(bad)
(bad)
(bad)
dec
or
push
gs
push
push
hlt
inc
adc
jmp
gs
std
push
sti
push
mov
hlt
jmp
idiv
xchg
cmp
dec
aad
xor
inc
sub
xchg
mov
mov
hlt
pop
inc
int3
(bad)
(bad)
(bad)
inc
add
imul
and
jne
cmp
idiv
and
inc
push
and
in
add
bound
pop
xchg
or
adc
xor
or
aaa
cld
push
cmp
dec
adc
dec
cs
shl
xor
adc
sar
(bad)
jmp
sbb
xchg
mov
sub
scas
not
xor
fisttp
cmc
xchg
loopne
shl
std
push
fsub
pop
or
imul
mov
jle
(bad)
(bad)
dec
mov
sbb
inc
or
mov
cmc
enter
fidivr
loopne
cmp
(bad)
jmp
inc
push
not
adc
jo
fmul
push
cwde
add
mov
aaa
sub
cdq
popf
xchg
test
sub
lock
retf
(bad)
(bad)
(bad)
inc
jg
sub
pop
ror
push
pop
mov
(bad)
add
push
inc
std
inc
daa
and
push
inc
mov
mov
jmp
sbb
add
jbe
push
cmp
(bad)
call
test
jp
xchg
loop
adc
xchg
xchg
or
sub
(bad)
(bad)
(bad)
dec
adc
adc
inc
jnp
mov
mov
int3
(bad)
adc
add
(bad)
jg
inc
cli
fcom
stc
jmp
mov
dec
xor
cli
push
add
(bad)
(bad)
(bad)
jmp
jns
je
mov
sar
test
mov
lods
sub
(bad)
(bad)
in
popa
scas
adc
pop
and
add
xor
call
call
(bad)
inc
cmp
sub
mov
xor
out
cli
push
xor
sub
dec
loop
xchg
pop
inc
mov
push
outs
and
aad
jmp
add
cmp
pop
fadd
and
ins
mov
call
fnstcw
jmp
(bad)
call
mov
scas
sub
lods
cmp
jnp
sbb
pop
add
les
sub
lock
(bad)
call
das
out
adc
jmp
call
mov
cmc
dec
sub
sub
(bad)
(bad)
out
mov
xor
adc
in
into
pop
mov
loopne
mov
(bad)
dec
or
inc
cli
dec
movs
jb
idiv
aam
mov
daa
popf
jge
mov
jmp
jmp
es
lds
cmp
xchg
fdiv
repnz
retf
(bad)
push
repz
jae
mov
stos
xchg
ss
inc
ja
sahf
outs
pop
cmps
mov
stos
pop
dec
inc
scas
dec
(bad)
jmp
(bad)
fist
xchg
sub
pop
xchg
stos
xchg
loopne
mov
les
and
inc
(bad)
(bad)
(bad)
jmp
push
sub
bound
aad
cmp
daa
push
stos
cmps
add
add
add
xor
adc
jmp
mov
sub
xor
push
(bad)
into
nop
add
xor
mov
(bad)
mov
or
adc
loopne
out
(bad)
mov
mov
(bad)
(bad)
(bad)
jmp
jl
or
mov
adc
bound
sar
pop
movs
out
inc
(bad)
mov
aas
cs
and
retf
stos
fsub
push
jge
xchg
(bad)
(bad)
(bad)
jmp
inc
xchg
gs
rcr
mov
ja
cs
sub
sti
inc
cmp
and
ret
(bad)
inc
adc
inc
(bad)
pause
retf
push
movs
es
inc
pusha
xchg
inc
dec
in
or
ret
dec
inc
jge
jmp
jecxz
push
pop
test
jno
sbb
scas
sub
call
and
add
sub
mov
out
lahf
stos
(bad)
jg
test
sub
retf
dec
(bad)
(bad)
cmc
mov
jecxz
data16
(bad)
push
fisub
adc
(bad)
(bad)
or
int
movs
sub
int3
call
retf
movs
xchg
in
pop
(bad)
mov
cld
mov
scas
jmp
and
(bad)
(bad)
dec
sub
push
pop
pop
mov
ds
pop
jo
xchg
retf
add
push
adc
(bad)
(bad)
(bad)
call
and
push
mov
retf
xchg
test
je
add
movs
jge
mov
mov
mov
sub
clc
fldenv
xchg
mov
push
int3
or
dec
shr
inc
jmp
dec
dec
mov
fistp
das
stos
aad
xchg
inc
nop
sub
(bad)
(bad)
(bad)
call
jo
inc
push
(bad)
aam
inc
in
sbb
mov
xchg
mov
daa
push
cmps
(bad)
(bad)
call
jp
sbb
loop
add
lods
adc
ins
lock
les
pop
leave
popa
or
bswap
fisubr
lahf
jmp
push
test
push
aad
mov
fisubr
out
ror
js
(bad)
(bad)
jmp
adc
imul
xor
or
add
push
(bad)
(bad)
clc
ror
jo
lds
push
push
cmp
jb
out
xchg
dec
test
xchg
(bad)
(bad)
(bad)
call
test
adc
dec
jo
xor
js
sti
cdq
jmp
scas
mov
shl
(bad)
push
stc
ret
push
xchg
inc
push
stos
stos
cs
jo
mov
pusha
add
inc
cmp
mov
pop
push
icebp
stos
mov
push
sub
cmp
(bad)
mov
shl
(bad)
xchg
in
(bad)
(bad)
(bad)
jmp
mov
dec
xor
pushf
stc
mov
sbb
jp
cmps
inc
pop
loope
(bad)
(bad)
call
mov
jbe
jnp
jle
inc
cdq
stos
stc
inc
dec
sbb
or
test
lods
lock
jno
dec
lock
lock
xchg
ret
jmp
ret
cmp
(bad)
dec
mov
neg
pop
dec
add
add
(bad)
(bad)
dec
test
push
retf
fld
cs
bound
scas
pop
cmp
mov
(bad)
jmp
add
lods
sub
test
pushf
js
sbb
dec
(bad)
(bad)
jg
sbb
sbb
adc
sbb
push
sub
aaa
stos
inc
xchg
(bad)
(bad)
(bad)
push
or
or
bound
stos
dec
movs
xor
shl
je
pop
xor
in
repnz
push
mov
push
inc
dec
pop
xchg
inc
jecxz
mov
mov
(bad)
jmp
dec
les
inc
adc
adc
jmp
(bad)
mov
outs
push
mov
pop
cmc
pop
push
imul
test
(bad)
inc
mov
punpckhbw
and
push
popa
clc
cmp
loop
cld
(bad)
(bad)
(bad)
mov
adc
jmp
ret
pop
ret
xchg
adc
and
cs
(bad)
jmp
xchg
pop
add
cmp
mov
aad
sbb
je
sahf
adc
dec
xor
push
mov
jmp
and
addr16
and
add
inc
sub
dec
pushf
sub
push
mov
or
mov
(bad)
(bad)
(bad)
fbstp
retf
mov
and
(bad)
xchg
jmp
adc
jno
(bad)
(bad)
dec
xchg
xchg
push
jg
xor
fwait
int
cmp
ficom
or
push
stos
aaa
mov
je
(bad)
(bad)
push
mov
ds
iret
push
sbb
xor
or
outs
enter
(bad)
(bad)
jg
pop
xchg
cdq
and
add
stos
adc
movs
movs
sbb
(bad)
(bad)
(bad)
jmp
or
and
xchg
dec
push
xchg
push
mov
cmp
push
cmc
(bad)
(bad)
(bad)
jmp
jno
repz
or
lods
into
out
stos
jnp
into
push
dec
jl
retf
or
aad
sub
(bad)
xchg
cmp
jmp
out
js
hlt
(bad)
call
xchg
sbb
(bad)
mov
push
sbb
mov
sub
add
(bad)
(bad)
jge
jle
adc
in
jmp
call
out
or
ret
mov
adc
scas
call
(bad)
scas
pop
push
cs
loope
outs
jmp
enter
jmp
in
sub
loop
xor
gs
mov
mov
test
sbb
cmp
mov
adc
inc
pop
sub
jl
sbb
call
xchg
rcl
adc
push
aam
xor
popf
mov
adc
cmc
sbb
cmp
pushw
outs
leave
mov
pop
stos
movs
sub
jmp
dec
inc
mov
cli
shr
pop
mov
(bad)
jmp
(bad)
fidivr
mov
cmp
mov
test
push
cld
and
add
add
(bad)
mov
cmp
sbb
aad
jmp
cli
leave
cli
mov
jbe
inc
loop
pop
push
xchg
jl
stos
(bad)
jg
retf
inc
fcom
jle
push
jge
fs
inc
das
pop
pushf
pop
cwde
jbe
add
dec
fwait
mov
mov
rcr
mov
mov
(bad)
jmp
mov
xor
jle
or
call
(bad)
call
or
push
adc
cwde
popa
cwde
cmp
jg
or
jmp
pop
(bad)
(bad)
(bad)
push
loopne
xor
stos
ret
add
push
aam
ss
and
call
xchg
int3
hlt
(bad)
(bad)
push
fcom
fdiv
xchg
cwde
jecxz
sub
sbb
fist
fistp
dec
mov
jmp
push
dec
add
mov
clc
(bad)
jmp
scas
dec
xor
dec
pop
into
push
or
xor
inc
out
push
fbld
sub
imul
mov
in
add
jge
rol
call
call
add
or
out
jle
inc
push
jb
inc
fmul
call
push
and
ftst
inc
repz
dec
push
movs
mov
push
(bad)
mov
shl
std
idiv
or
test
mov
push
repnz
sub
or
inc
sub
mov
jne
fcomip
mov
fdiv
enter
push
mov
pop
push
jno
jmp
(bad)
push
add
(bad)
(bad)
call
sbb
inc
pusha
jbe
sti
jb
sbb
iret
pop
add
jo
cmp
inc
(bad)
(bad)
(bad)
call
cdq
dec
out
rep
xor
mov
das
xchg
cdq
ret
loop
push
inc
push
shl
jg
(bad)
inc
pop
jbe
cmovle
inc
or
(bad)
jmp
xchg
adc
pop
mov
das
xchg
or
cmps
sub
sub
mov
call
jb
mov
cdq
push
sbb
ds
rcr
jae
(bad)
(bad)
push
sahf
add
scas
mov
xchg
enter
add
add
pop
pop
cwde
in
adc
(bad)
jg
loop
adc
push
pop
mov
test
ret
push
xchg
jb
inc
ja
call
and
test
int3
xor
push
xchg
cld
inc
hlt
pop
xchg
int3
sbb
(bad)
icebp
imul
(bad)
rol
jb
loop
jecxz
dec
(bad)
call
mov
sbb
cmp
repz
adc
dec
mov
(bad)
call
mov
or
cld
jb
test
add
(bad)
push
popa
jmp
xor
add
sbb
xchg
data16
(bad)
(bad)
jg
inc
mov
pop
or
or
mov
cmp
jo
sub
(bad)
movs
test
(bad)
jmp
push
in
xor
adc
dec
xchg
push
lods
in
dec
aas
push
data16
push
dec
push
ja
test
(bad)
(bad)
push
inc
imul
sub
add
and
repnz
call
(bad)
inc
bound
push
add
lahf
iret
push
adc
(bad)
sub
retf
(bad)
(bad)
push
mov
dec
pusha
mov
hlt
pop
movs
inc
cmps
dec
(bad)
adc
(bad)
cmp
data16
(bad)
(bad)
jmp
enter
jmp
add
dec
pop
jo
imul
pop
hlt
aad
lods
sbb
inc
sub
push
cdq
jb
in
sti
dec
mov
fld
mov
stos
fcom
xor
stc
cmp
or
adc
into
test
(bad)
(bad)
(bad)
jmp
mov
test
test
mov
shl
and
pop
and
mov
(bad)
(bad)
dec
mov
xor
push
dec
push
ror
ds
mov
add
xchg
test
dec
(bad)
jg
call
in
xchg
cmc
stos
fnstsw
adc
push
in
inc
xor
pop
lock
fwait
test
(bad)
jmp
stos
push
ret
ds
sbb
test
repz
inc
push
ret
inc
xchg
retf
(bad)
jmp
rol
sbb
push
sbb
and
iret
je
cmc
sbb
dec
xchg
xchg
call
mov
jb
repnz
add
xchg
jg
(bad)
jmp
mov
repnz
repnz
movs
cmp
cmp
out
(bad)
(bad)
call
xchg
loop
pop
aam
inc
cmp
inc
adc
add
xchg
push
in
ss
jg
jp
js
push
imul
cmc
push
mov
es
jg
jle
sub
sbb
es
adc
mov
pop
imul
hlt
and
inc
pusha
xchg
dec
cmp
jle
(bad)
jmp
push
neg
mov
pop
arpl
mov
test
xor
fldenv
(bad)
(bad)
(bad)
inc
dec
push
xor
push
mov
push
fmul
aam
nop
in
add
dec
(bad)
sti
jns
cli
test
jecxz
repnz
mov
sbb
cmp
mov
nop
sti
push
xchg
es
cld
(bad)
jmp
xchg
in
push
xchg
nop
jle
ins
mov
icebp
mov
out
div
nop
(bad)
(bad)
call
aad
out
nop
mov
mov
sbb
test
pushf
mov
xor
ja
add
push
test
jnp
lea
shl
dec
mov
jmp
or
and
jge
(bad)
(bad)
(bad)
(bad)
mov
sbb
adc
add
fld
inc
jns
nop
pop
adc
add
(bad)
(bad)
call
cmp
add
hlt
js
or
scas
xor
sbb
pusha
movs
inc
inc
add
dec
movs
fnstenv
hlt
(bad)
push
add
fxch
mov
jecxz
ror
push
cmp
fwait
(bad)
jmp
or
sub
add
or
mov
test
mov
cmp
sub
pop
mov
pop
pop
stos
imul
xchg
fwait
mov
or
dec
adc
jns
push
adc
push
(bad)
(bad)
(bad)
jmp
stos
enter
or
dec
aad
mov
mov
push
dec
push
mov
mov
(bad)
(bad)
(bad)
jmp
movs
pop
jle
es
mov
cmp
sbb
dec
bound
pop
xlat
xchg
cmp
(bad)
cmp
rcl
mov
add
mov
retf
shl
dec
push
std
(bad)
(bad)
jg
dec
popf
xchg
sbb
or
mov
push
into
stc
loop
popf
inc
add
inc
add
(bad)
push
mov
call
push
clc
push
rol
mov
sbb
(bad)
jg
jbe
cmp
push
rol
shl
or
push
add
mov
(bad)
push
idiv
and
repz
out
push
add
in
(bad)
(bad)
(bad)
inc
or
mov
xchg
dec
gs
push
pushf
adc
push
mov
test
imul
(bad)
dec
adc
xchg
loopne
mov
in
lock
rcl
aaa
call
ja
add
int
int3
gs
pushf
push
xor
pop
std
push
pop
(bad)
(bad)
(bad)
(bad)
fisubr
jae
mov
pusha
mov
pop
mov
push
or
sub
push
xchg
dec
pop
lods
(bad)
call
pop
cmp
retf
jp
movs
call
xor
or
sar
(bad)
call
push
aad
sbb
mov
movs
xchg
sbb
test
(bad)
(bad)
jg
pop
xor
jbe
cwde
popf
pushf
rol
sbb
gs
push
cld
mov
call
mov
jmp
mov
scas
mov
pusha
jo
mov
mov
jecxz
mov
rcl
cmp
pop
sub
retf
jmp
cli
xchg
in
fsubr
(bad)
push
mov
test
mov
and
call
inc
add
(bad)
inc
mov
ret
and
sbb
movs
pop
jmp
(bad)
das
xor
jp
loopne
mov
call
xor
data16
test
push
test
adc
add
cld
(bad)
dec
test
popa
sub
and
dec
adc
mov
out
neg
(bad)
(bad)
inc
add
ret
jne
cmp
(bad)
jecxz
bound
mov
lods
retf
xchg
(bad)
inc
sub
push
dec
pop
inc
aad
fld
mov
gs
(bad)
out
(bad)
(bad)
inc
movsx
xchg
inc
xchg
add
dec
hlt
jb
popa
int3
sbb
mov
xor
(bad)
push
push
sbb
cmp
dec
pop
mov
pop
add
sbb
or
xchg
push
mov
and
int3
adc
(bad)
mov
fs
cs
jge
cmp
(bad)
sub
jg
inc
push
(bad)
jmp
jnp
or
ins
xchg
ret
pop
xor
sar
pop
add
xchg
dec
(bad)
(bad)
(bad)
jmp
jne
shl
js
xchg
push
xchg
sbb
fst
push
pop
mov
add
mov
repnz
(bad)
(bad)
push
adc
xchg
in
push
mov
add
or
test
clc
call
mov
sub
push
cmp
lods
push
cmp
loop
mov
popa
pop
xor
mov
jmp
mov
push
pop
(bad)
(bad)
(bad)
call
pushf
ret
stos
psllq
cs
xchg
movs
cmps
sbb
dec
repz
pop
xchg
xchg
push
push
(bad)
(bad)
jmp
add
inc
adc
gs
mov
xchg
push
rcl
(bad)
(bad)
jmp
mov
outs
push
mov
fs
sub
mov
dec
add
into
pop
and
xor
(bad)
(bad)
(bad)
cmp
add
or
push
xor
cmp
inc
aam
mov
test
loope
adc
sahf
cmp
int3
dec
outs
sub
cmp
push
in
mov
jmp
pushf
mov
cwde
iret
mov
ret
and
stc
jne
dec
lds
mov
sub
cmp
cmp
add
mov
(bad)
(bad)
jg
cmp
mov
aam
push
hlt
cmovno
push
test
lahf
pop
into
pop
ficom
cld
call
mov
mov
cld
call
(bad)
jmp
fsub
test
retf
mov
push
lock
js
pop
fs
aad
sar
mov
or
push
int3
inc
push
push
and
xchg
sbb
fwait
jle
adc
outs
sub
xchg
xor
push
outs
test
dec
stos
pop
js
cmps
sti
dec
add
fadd
ds
jl
imul
(bad)
(bad)
call
mov
sub
movs
xor
jmp
mov
inc
movs
jmp
fwait
mov
(bad)
jp
xchg
(bad)
jp
push
sahf
xchg
jbe
adc
jne
or
es
sahf
rcr
dec
add
mov
or
(bad)
jg
clc
rcr
xor
(bad)
mov
jb
mov
(bad)
(bad)
jmp
mov
xor
mov
xor
lods
mov
xchg
sbb
add
jg
(bad)
push
cmp
jle
loope
xchg
loopne
nop
fst
sbb
cmp
sbb
jnp
sub
and
movs
repnz
sbb
and
out
xor
popa
call
sub
mov
pop
mov
push
push
add
cmp
sub
push
mov
and
mov
inc
ss
push
call
shl
xchg
push
adc
dec
popa
add
clc
ja
loopne
dec
inc
cli
pushf
jo
jbe
push
inc
push
dec
pop
(bad)
(bad)
jmp
push
cmc
outs
jecxz
xlat
rcl
in
adc
movs
add
push
loop
xor
jle
(bad)
call
mov
adc
mov
or
pusha
dec
stc
(bad)
dec
cmc
inc
(bad)
(bad)
(bad)
mov
ins
or
test
mov
ror
add
out
mov
inc
fisub
(bad)
nop
xchg
cmp
stos
add
dec
add
inc
cmc
scas
mov
(bad)
jmp
lods
push
inc
fldcw
outs
xchg
pop
jne
xor
inc
bound
jmp
shl
adc
mov
mov
jle
pop
and
(bad)
(bad)
inc
add
or
(bad)
jle
sbb
mov
and
or
push
xchg
xor
inc
adc
fldenv
or
fldpi
pop
dec
ja
push
call
sbb
add
fld
jne
xor
pop
std
(bad)
(bad)
(bad)
clc
sub
jmp
and
pusha
movs
sub
mov
xchg
stos
ror
pop
(bad)
(bad)
push
lea
add
les
imul
and
and
les
popa
add
cwde
inc
ins
(bad)
(bad)
(bad)
dec
shl
add
and
imul
xchg
pop
test
fadd
sbb
test
mov
jecxz
test
pop
xor
inc
dec
shl
sub
inc
push
xchg
cmps
pop
call
jo
rcl
mov
sar
ss
jne
mov
(bad)
jmp
xchg
sub
dec
enter
add
daa
cs
mov
mov
push
mov
loopne
jmp
das
add
clc
jbe
aaa
or
int
jns
out
call
sbb
int3
xor
cmove
or
(bad)
inc
setne
shr
test
outs
mov
lods
scas
das
dec
sbb
popa
ret
add
adc
fldenv
bound
and
adc
call
stos
inc
add
xor
retf
push
adc
call
push
adc
pop
sub
push
scas
scas
fs
mov
(bad)
mov
shr
push
stos
or
rcr
jno
jns
add
dec
and
(bad)
(bad)
jmp
test
data16
jbe
and
xchg
mov
push
xor
pop
xchg
cmp
icebp
lahf
sbb
(bad)
(bad)
(bad)
fistp
xchg
rcl
call
inc
pushf
stos
retf
shl
test
ror
cmc
(bad)
inc
xlat
int
sbb
push
sbb
or
jmp
sub
pop
int
jo
(bad)
(bad)
(bad)
cmp
push
mov
jmp
mov
dec
sub
and
jg
pop
or
(bad)
(bad)
(bad)
push
pop
hlt
mov
mov
cmp
pop
movs
sahf
nop
and
xchg
and
mov
test
jg
jb
sub
jo
sub
sub
pop
push
mov
(bad)
jg
mov
xor
xor
xchg
xchg
xor
push
stos
repnz
(bad)
(bad)
(bad)
dec
inc
push
mov
rsm
sbb
mov
mov
ja
rol
mov
dec
enter
push
jmp
(bad)
(bad)
call
fcomp
adc
dec
stos
sub
mov
nop
push
xchg
and
pop
(bad)
call
mov
dec
cmp
jo
pop
or
xchg
and
cmp
jmp
inc
repnz
push
mov
pushf
xchg
mov
cmps
cmp
int3
and
mov
cmp
daa
add
pushf
ds
lods
dec
or
sbb
outs
fsub
sbb
js
fwait
push
adc
stc
adc
out
mov
ret
xchg
xor
pop
cmp
repnz
(bad)
(bad)
(bad)
cmp
movs
cmp
mov
or
jb
enter
retf
cmps
pop
arpl
mov
mov
je
fisttp
push
sbb
dec
inc
cmps
add
loope
fild
stos
dec
mov
(bad)
mov
aad
mov
push
pusha
(bad)
sbb
test
sub
or
fcomip
leave
xor
pop
push
in
or
adc
test
inc
movs
push
pop
int
(bad)
(bad)
(bad)
call
add
push
and
xor
test
mov
inc
jp
inc
xor
push
(bad)
(bad)
(bad)
jmp
jmp
add
xchg
in
adc
in
or
js
inc
data16
jg
(bad)
(bad)
jnp
movs
pop
popa
or
sbb
aad
inc
pop
mov
jne
or
int
pop
adc
push
add
jmp
cmp
lods
cmp
stos
test
add
inc
jle
(bad)
(bad)
jg
mov
fisub
add
mov
or
leave
retf
xlat
adc
popf
psubd
(bad)
(bad)
(bad)
inc
sar
subps
(bad)
fcmove
movs
add
dec
sbb
push
test
inc
popa
scas
add
(bad)
inc
add
or
int
mov
xchg
stos
mov
retf
sub
and
aaa
scas
sub
mov
push
cmp
mov
test
and
daa
into
daa
inc
sub
xchg
dec
mov
fstp
cs
lock
addr16
lock
ins
cli
pop
bound
dec
test
addr16
or
(bad)
(bad)
(bad)
jmp
xor
cmc
adc
dec
test
push
sbb
add
mov
retf
add
test
loope
push
call
jmp
xchg
xchg
das
add
outs
cmp
dec
inc
inc
sub
stos
loope
xchg
or
(bad)
(bad)
(bad)
jmp
xor
popf
test
shl
aad
loop
shr
sbb
arpl
jae
(bad)
(bad)
(bad)
call
adc
push
jae
ds
adc
cdq
stc
jae
xchg
cmps
shr
aam
stos
nop
inc
in
mov
ret
(bad)
(bad)
(bad)
push
retf
int
add
xchg
aad
in
enter
ret
pop
nop
retf
test
dec
sub
(bad)
dec
pushf
push
ficom
and
out
shr
mov
jle
or
(bad)
(bad)
call
ret
test
mov
sbb
inc
inc
dec
sub
dec
inc
cmc
into
fs
dec
(bad)
(bad)
(bad)
fistp
mov
pop
add
cdq
jle
out
pop
push
mov
mov
xor
ss
jmp
xchg
inc
idiv
test
xor
rol
outs
clc
call
pop
fmul
movs
lds
(bad)
ins
cmp
and
pushf
or
cmc
cld
(bad)
(bad)
push
nop
or
mov
test
xchg
push
scas
xchg
test
mov
xchg
jmp
imul
and
cmc
push
scas
pop
dec
jp
xor
(bad)
(bad)
(bad)
call
iret
or
jb
or
mov
or
and
mov
outs
mov
inc
inc
mov
cmps
xchg
xor
int3
jbe
xlat
jmp
lock
inc
cwde
dec
cld
or
add
mov
xor
(bad)
(bad)
jmp
test
int3
dec
ss
dec
test
pop
fidivr
adc
mov
dec
adc
pop
bound
std
pushf
dec
popa
push
add
out
dec
cwde
imul
shl
push
ret
pop
in
ins
(bad)
(bad)
(bad)
call
das
inc
push
mov
daa
movs
jmp
push
mov
push
push
aad
lods
sbb
jmp
push
jp
test
sub
add
int3
lahf
jne
mov
jmp
ja
adc
mov
pop
sbb
push
xchg
sahf
(bad)
(bad)
(bad)
call
xor
push
and
push
add
pop
dec
xchg
int
fld
sub
inc
pop
lods
push
cmps
fld
loop
stos
mov
lds
xor
jne
mov
cmp
jae
sbb
mov
aaa
rcr
push
adc
push
pop
jle
sub
pop
in
dec
dec
es
bound
sub
jae
ja
or
das
cmp
lds
aas
bound
mov
(bad)
(bad)
call
mov
int
or
xchg
sbb
ins
fs
sub
mov
jmp
mov
mov
jmp
cli
and
push
fiadd
xchg
lods
pop
sbb
sub
(bad)
dec
cmc
inc
sbb
mov
sahf
adc
inc
std
pop
pop
sub
test
inc
or
adc
(bad)
(bad)
(bad)
inc
add
xchg
stos
pop
(bad)
push
sbb
sbb
outs
xchg
inc
push
lock
jle
jecxz
mov
clc
(bad)
dec
iret
add
sbb
stos
xor
cs
loope
std
inc
test
addr16
sub
mov
sbb
(bad)
push
movs
call
loopne
cmp
pop
or
pushf
jae
(bad)
(bad)
mov
retf
mov
mov
enter
(bad)
(bad)
(bad)
call
mov
push
loopne
add
push
xlat
pop
pop
jno
jge
dec
push
mov
loopne
ret
(bad)
(bad)
(bad)
call
mov
jb
or
xchg
inc
hlt
add
test
mov
(bad)
push
(bad)
xchg
sub
enter
lock
cmp
inc
or
cs
(bad)
(bad)
(bad)
(bad)
inc
fcomp
push
test
add
pop
and
aad
(bad)
(bad)
(bad)
call
xor
pop
mov
pop
fisubr
loop
mov
sub
les
cmp
(bad)
(bad)
(bad)
push
in
fistp
cdq
stos
xor
xchg
gs
(bad)
sbb
(bad)
daa
sbb
(bad)
scas
(bad)
jmp
mul
sub
sbb
mov
mov
movs
ins
fcomip
call
push
sub
shl
cmp
sbb
ret
push
ins
(bad)
(bad)
(bad)
push
mov
xchg
inc
jb
lea
add
cmp
xchg
(bad)
fdiv
dec
push
sar
jmp
(bad)
(bad)
call
(bad)
pushf
arpl
dec
nop
frstor
xchg
push
push
push
jle
push
pop
jl
data16
mov
popa
dec
push
dec
das
adc
mov
push
xchg
pop
pop
daa
push
movs
mov
ja
lock
(bad)
call
lea
mov
jb
mov
push
fsubr
push
mov
adc
add
push
retf
movs
or
(bad)
(bad)
push
fwait
aas
rol
or
adc
and
adc
int
test
out
(bad)
(bad)
(bad)
call
and
pop
adc
mov
sub
stos
out
(bad)
nop
ret
shl
leave
jmp
dec
ja
or
iret
es
out
stos
or
push
(bad)
pop
outs
cli
(bad)
jg
mov
pop
fld
leave
(bad)
and
test
stos
dec
sub
xchg
mov
inc
lea
(bad)
xchg
retf
lea
xchg
or
sub
or
sbb
mov
mov
sbb
arpl
xchg
xor
push
imul
ffreep
dec
xor
nop
repz
add
(bad)
(bad)
fbstp
loopne
stos
sahf
mov
xor
lock
cmp
cmp
mov
loopne
arpl
cmps
cmps
cmps
call
and
cs
aad
(bad)
lods
cdq
ficom
pop
jne
mov
pop
mov
cmc
stos
cld
mov
sub
sbb
test
xchg
outs
es
sahf
xchg
or
inc
xchg
mov
(bad)
inc
call
cmps
add
pushf
mov
xchg
sub
retf
pop
inc
dec
mov
push
hlt
mov
or
mov
out
aas
push
es
sar
mov
sub
ret
dec
and
jns
sar
and
push
je
pop
xor
pop
jg
or
cmp
ret
(bad)
(bad)
dec
fnstsw
mov
xchg
fisub
ror
arpl
pop
adc
(bad)
fcomip
inc
test
jecxz
je
add
ret
daa
rcr
xor
push
frstor
(bad)
(bad)
inc
push
ds
sbb
ds
test
add
jb
xchg
inc
push
inc
sbb
sub
mov
push
icebp
clc
call
mov
and
fwait
sub
js
cmp
cli
mov
loop
rcl
mov
sub
adc
loopne
(bad)
(bad)
(bad)
fidivr
push
push
add
sbb
sub
jnp
jge
mov
gs
jmp
dec
inc
mov
popa
push
push
pop
mov
xchg
pusha
out
pushf
movs
add
ins
mov
dec
aaa
std
and
mov
(bad)
jmp
sar
dec
(bad)
out
dec
imul
ret
adc
dec
mov
push
add
sub
inc
inc
(bad)
(bad)
inc
bswap
mov
pusha
sbb
movs
push
push
sub
les
xor
mov
mov
sbb
cmc
xchg
int
mov
outs
clc
add
dec
(bad)
cmp
push
lods
pop
mov
test
das
clc
call
push
sbb
xchg
(bad)
fistp
add
test
shr
daa
fwait
arpl
mov
mov
clc
(bad)
mov
inc
aam
dec
add
cmp
sbb
add
ja
aad
mov
(bad)
(bad)
(bad)
inc
xchg
mov
movs
in
xchg
movs
out
cmp
sbb
pop
and
mov
inc
mov
or
(bad)
(bad)
(bad)
call
rcl
jmp
jne
mov
push
pop
jnp
and
mov
push
pop
(bad)
(bad)
mov
(bad)
mov
ficom
cmp
mov
retf
and
retf
call
sub
outs
shl
pop
mov
call
iret
hlt
(bad)
(bad)
push
or
push
and
jmp
sub
mov
cs
jmp
pop
xor
jo
push
inc
dec
(bad)
icebp
out
scas
je
jl
cli
inc
xor
adc
and
(bad)
dec
jb
pop
stos
jecxz
add
or
and
add
fwait
mov
mov
cmp
jmp
ss
cmp
push
das
leave
mov
push
sub
cli
test
inc
adc
pop
mov
(bad)
jmp
adc
scas
out
sbb
push
movs
jbe
push
push
adc
add
fcomip
or
lahf
imul
(bad)
pop
sahf
mul
(bad)
push
xor
push
ror
adc
cli
inc
lds
fucomip
or
sub
push
ja
loope
call
sub
and
or
push
test
test
(bad)
(bad)
(bad)
call
fs
(bad)
imul
cmp
addr16
adc
cli
cld
icebp
sbb
jg
(bad)
(bad)
mov
mov
pop
jo
movs
cmps
xor
scas
test
xchg
je
(bad)
jmp
xor
and
jmp
jae
xchg
push
lods
aas
(bad)
and
loope
or
ror
call
inc
rcr
test
mov
call
je
(bad)
(bad)
call
(bad)
push
adc
mov
sub
adc
call
sar
(bad)
(bad)
cmp
cli
mov
mov
xor
or
inc
(bad)
jg
mov
(bad)
push
inc
jb
cli
jmp
and
(bad)
(bad)
(bad)
(bad)
jns
lds
ins
inc
gs
test
and
xchg
xchg
cs
mov
add
jmp
push
scas
fwait
and
ss
mov
ds
stos
fild
scas
mov
push
add
push
mov
cld
adc
pop
in
and
retf
xchg
test
(bad)
cmps
xor
mov
pop
or
loop
lahf
fs
push
pop
add
pop
add
adc
jmp
push
or
push
push
shr
fs
sub
lock
xor
push
pop
or
(bad)
(bad)
dec
adc
sub
pop
xchg
push
bound
push
inc
push
add
dec
lea
mov
jo
stos
test
or
cld
scas
pop
int3
add
dec
jb
hlt
mov
mov
add
inc
scas
icebp
pmullw
sub
aaa
cld
(bad)
(bad)
ds
fst
pop
(bad)
pop
leave
and
inc
sbb
into
popa
mov
xor
(bad)
inc
mov
inc
pop
das
inc
movs
call
add
or
cmp
xor
(bad)
fistp
fwait
inc
adc
sbb
call
(bad)
icebp
add
inc
daa
(bad)
call
add
loopne
les
mov
pop
inc
sbb
mov
(bad)
(bad)
(bad)
jmp
pop
lods
xchg
into
mov
popf
pop
push
test
mov
jle
mov
(bad)
call
js
test
mov
xor
sbb
dec
mov
or
xchg
mov
push
sbb
in
sbb
inc
add
mov
jl
cmp
dec
mov
call
jb
dec
ja
stos
mov
or
es
les
jecxz
mov
outs
add
mov
inc
in
sub
shld
adc
fxtract
mov
adc
scas
test
aam
and
aam
push
cmp
bound
mov
scas
mov
sbb
and
adc
gs
fldcw
add
retf
push
movs
cmc
xchg
adc
pop
loopne
stos
mov
pop
mov
test
pushw
(bad)
xlat
(bad)
(bad)
(bad)
out
dec
or
sbb
mov
or
sub
(bad)
and
loopne
inc
(bad)
mov
push
shl
or
xchg
clc
fs
test
mov
(bad)
push
push
test
in
adc
xchg
xchg
dec
and
mov
push
sub
ja
retf
(bad)
(bad)
inc
fstp
adc
dec
mov
dec
add
and
push
mov
(bad)
dec
(bad)
fwait
rcr
call
(bad)
mov
xchg
mov
mov
mov
sbb
mov
push
mov
fldenv
(bad)
(bad)
(bad)
call
movs
ret
sub
out
mov
and
xchg
xor
dec
xchg
xor
xor
call
or
mov
hlt
dec
xchg
int3
dec
jmp
pop
mov
mov
inc
inc
mov
mov
add
sbb
test
bound
sbb
(bad)
jmp
adc
sahf
std
xor
add
mov
pusha
int3
push
push
or
(bad)
(bad)
(bad)
call
sub
ror
mov
adc
aas
mov
cwde
and
or
(bad)
mov
adc
(bad)
inc
adc
(bad)
pushf
mov
test
jae
mov
or
movs
and
cmp
push
add
sub
xor
(bad)
(bad)
(bad)
call
mov
repz
jno
pop
test
and
test
or
jg
addr16
(bad)
(bad)
jmp
imul
push
loope
not
loop
aaa
xor
retf
sbb
sub
jbe
repz
(bad)
(bad)
push
data16
xchg
inc
or
xchg
hlt
(bad)
and
push
mov
mov
ins
mov
loope
push
popa
cmc
(bad)
(bad)
call
xchg
or
jmp
mov
dec
push
retf
aas
push
inc
scas
lods
fld
sbb
and
lea
test
rol
fidivr
push
sub
outs
(bad)
(bad)
call
jmp
loope
js
and
mov
inc
jge
add
js
(bad)
dec
mov
push
aaa
imul
mov
xchg
(bad)
jmp
pop
or
or
adc
xchg
dec
add
(bad)
mov
and
and
js
lods
or
xor
ins
add
(bad)
(bad)
call
cs
out
and
inc
push
(bad)
dec
mov
sbb
mov
push
lods
lds
push
pop
lods
icebp
addr16
loope
mov
out
sub
rol
stos
jecxz
lahf
outs
sbb
(bad)
(bad)
mov
adc
xor
push
push
mov
cmp
adc
ins
sbb
mov
stos
jne
das
push
and
sub
mov
test
jbe
jecxz
xchg
test
(bad)
dec
arpl
fs
sub
dec
ins
popf
dec
dec
lods
data16
push
jae
movs
jmp
(bad)
dec
dec
(bad)
(bad)
jg
push
test
scas
xchg
sahf
popf
xchg
mov
int
(bad)
in
add
pop
dec
(bad)
mov
test
out
or
inc
xchg
lds
cmp
pop
enter
sbb
adc
test
pop
imul
inc
rcr
xchg
sbb
pop
fiadd
xchg
and
push
jnp
out
cmp
mov
cli
ja
inc
cmp
xchg
xchg
retf
mov
das
stos
xchg
push
mov
xchg
andps
add
and
(bad)
(bad)
(bad)
dec
enter
dec
xor
push
sub
or
call
addr16
(bad)
(bad)
jmp
push
dec
jne
and
mov
push
shrd
cwde
mov
adc
or
pop
(bad)
(bad)
(bad)
push
inc
data16
push
aad
xor
mov
jp
pop
cdq
fistp
ja
(bad)
lock
(bad)
pop
cmc
das
or
sbb
pop
cmps
inc
daa
test
adc
in
movs
sbb
inc
std
push
jmp
adc
(bad)
call
enter
lock
xor
inc
cwde
std
jb
call
mov
pop
sub
(bad)
dec
jl
push
cmp
jmp
adc
(bad)
(bad)
jmp
mov
push
pop
sbb
push
rol
xor
hlt
push
repz
push
or
add
xor
pop
stos
inc
adc
dec
clc
stc
ror
cli
xchg
mov
add
push
mov
(bad)
(bad)
call
lods
add
nop
add
sbb
and
mov
or
add
sti
fst
pop
pusha
dec
pop
or
xchg
xchg
and
mov
xchg
in
dec
lds
xchg
sbb
(bad)
(bad)
dec
xlat
popf
inc
mov
pop
shr
add
jno
aad
into
xor
jmp
lock
xchg
loope
adc
int3
test
jb
xor
add
inc
xor
test
mov
stos
nop
lds
jg
fbstp
jge
sbb
push
daa
scas
aad
jmp
dec
(bad)
mov
popa
ret
shl
xchg
test
push
sti
out
les
mov
add
mov
leave
add
sbb
test
add
sbb
adc
sbb
mov
lds
movs
sub
shl
gs
mov
mov
(bad)
(bad)
jmp
nop
dec
xor
mov
(bad)
pop
lds
out
mov
dec
pop
dec
pusha
cmps
(bad)
(bad)
(bad)
call
add
mov
adc
shr
xor
loop
add
in
call
push
call
xor
and
jmp
add
mov
nop
(bad)
les
cmp
call
fsub
(bad)
(bad)
jmp
pop
pop
sub
movs
xchg
jp
sahf
cmp
mov
jmp
jno
repnz
(bad)
(bad)
(bad)
push
loop
movs
inc
xchg
inc
je
mov
adc
adc
je
pop
ror
inc
shl
(bad)
(bad)
(bad)
push
fs
(bad)
adc
ret
mov
movs
nop
mov
shl
push
scas
xchg
push
push
push
sbb
mov
xor
add
or
lods
jg
in
jl
pop
cmp
test
jo
retf
xor
popf
mov
clc
adc
and
(bad)
(bad)
(bad)
jmp
or
xlat
pop
shl
sub
mov
ficom
popa
push
(bad)
jmp
jnp
in
and
push
pop
cmp
sbb
in
push
scas
inc
add
loop
fcomip
jp
sub
pop
fild
leave
sti
push
adc
dec
je
(bad)
fisttp
mov
ds
sub
inc
cli
xchg
icebp
arpl
(bad)
(bad)
(bad)
jmp
cmp
push
loop
mov
jne
push
int3
sub
and
loope
mov
enter
push
cs
hlt
inc
push
int3
push
ins
push
adc
jmp
lods
inc
mov
jge
stc
xor
and
inc
out
cs
jb
outs
scas
(bad)
(bad)
(bad)
call
push
daa
xlat
arpl
adc
(bad)
ror
ds
out
lods
aam
inc
aaa
inc
les
or
scas
(bad)
(bad)
(bad)
(bad)
fiadd
mov
pop
(bad)
and
pusha
add
xor
aam
jne
sub
(bad)
push
daa
push
sbb
retf
call
shl
inc
push
in
stos
add
and
inc
inc
sbb
cdq
add
push
adc
xor
jmp
pop
and
mov
mov
cli
(bad)
mov
xchg
pushf
mov
lds
cli
iret
push
mov
cmp
(bad)
out
test
inc
pop
mov
cli
addr16
loope
adc
or
xor
arpl
cmp
add
jg
dec
mov
pop
fwait
ror
into
test
or
dec
dec
push
bound
lea
jmp
call
pop
mov
xor
imul
lods
mov
idiv
mov
(bad)
(bad)
(bad)
jmp
xor
inc
sbb
inc
dec
cmp
dec
xor
mov
inc
jecxz
push
push
sub
int
pop
sub
retf
push
dec
mov
rcl
ja
mov
xchg
in
call
sbb
ficomp
and
push
call
(bad)
(bad)
(bad)
dec
xor
inc
mov
and
js
xchg
int3
push
and
adc
jns
mov
jns
dec
and
loopne
cdq
mov
maskmovq
div
dec
das
xor
dec
adc
stos
into
and
loop
add
cmp
or
ret
cmp
mov
retf
sub
retf
stos
mov
sar
in
jnp
sbb
leave
pop
(bad)
mov
push
cmps
pusha
mov
inc
mov
call
(bad)
in
xchg
or
bound
jmp
sub
je
inc
imul
(bad)
jmp
push
je
pop
jmp
xor
stc
or
ret
les
adc
and
or
push
xchg
aaa
sub
or
jmp
cmp
jp
xchg
inc
aam
mov
out
cli
(bad)
jmp
nop
cmp
mov
mov
sahf
leave
or
xchg
or
pop
push
mov
pop
inc
popf
jmp
sub
sub
outs
je
sub
popf
inc
xchg
cmp
bound
in
jp
inc
push
cmp
xchg
adc
jno
and
(bad)
(bad)
inc
fdiv
push
call
int
inc
push
(bad)
xchg
add
dec
cld
add
xor
je
or
jg
shr
into
dec
js
xor
ja
inc
cdq
and
mov
push
xchg
pop
(bad)
mov
nop
inc
push
cmc
mov
mov
push
jl
push
pop
lods
pop
push
movs
xor
(bad)
mov
or
or
nop
nop
int
mov
mov
(bad)
(bad)
js
sub
add
call
jns
iret
xor
call
test
mov
not
mov
sub
stc
sbb
jp
inc
adc
scas
clc
inc
iret
pop
xchg
test
pusha
retf
xchg
sub
xchg
adc
inc
(bad)
(bad)
cmp
jp
xlat
push
(bad)
xor
shr
(bad)
(bad)
(bad)
jg
lods
jo
into
mov
dec
je
adc
fs
mov
imul
(bad)
dec
fdivr
out
imul
inc
jle
cwde
xchg
popa
pop
cmp
push
call
pop
mov
(bad)
fldcw
push
push
adc
cmp
pop
sti
dec
ret
xchg
pop
fistp
(bad)
(bad)
call
jp
imul
rcr
mov
popa
xor
ja
(bad)
(bad)
jmp
sub
ins
aad
jmp
pop
stc
loope
in
sbb
enter
jbe
stos
mov
test
push
es
sub
int
push
enter
cmp
movs
shl
jl
bound
jne
(bad)
push
jmp
out
fidiv
inc
sbb
loope
cmc
add
test
(bad)
(bad)
call
sub
adc
sub
(bad)
sub
jo
or
repnz
jb
lods
pop
(bad)
(bad)
(bad)
dec
mov
xlat
inc
retf
adc
add
sbb
retf
aam
cmp
push
ins
add
pusha
cmp
jo
push
pop
test
add
(bad)
mov
mov
xchg
(bad)
(bad)
(bad)
jmp
test
sbb
jp
jne
sbb
sbb
xchg
xchg
call
pop
stc
in
js
push
mov
add
stc
sbb
mov
(bad)
ds
call
std
call
or
jmp
jp
lea
mov
int3
push
(bad)
inc
or
pop
mov
sub
jb
stos
mov
cli
mov
imul
sbb
cs
pop
jecxz
push
test
(bad)
(bad)
setbe
int3
push
mov
adc
xchg
pop
xchg
add
pushf
xchg
(bad)
(bad)
call
or
cmp
sbb
inc
xlat
adc
xchg
dec
cld
jmp
outs
(bad)
xor
mov
in
mov
cli
into
add
ror
cmps
mov
out
bound
repnz
mov
adc
mov
mov
jmp
(bad)
(bad)
call
push
movs
and
mov
push
xchg
adc
mov
shl
xor
xor
test
mov
or
call
and
pushf
imul
in
adc
mov
test
xchg
into
sub
dec
add
popf
pusha
inc
int3
cwde
outs
sbb
dec
sub
and
sar
xchg
sub
icebp
scas
test
xor
sar
stos
jo
daa
cmp
cmps
adc
xchg
add
add
cmps
gs
daa
lods
mov
ror
add
dec
jbe
jp
or
(bad)
(bad)
jmp
addr16
mov
inc
sar
mov
sub
pop
xchg
jns
ss
pop
add
out
jge
sub
(bad)
(bad)
(bad)
push
shl
push
xchg
or
loopne
inc
movs
push
sahf
mov
mov
sbb
movlhps
(bad)
(bad)
jmp
mov
popa
test
fcomp
call
and
(bad)
mov
dec
fs
(bad)
(bad)
inc
inc
pop
cmp
push
or
dec
xchg
lods
and
movs
inc
and
data16
(bad)
(bad)
call
mov
mov
jb
(bad)
and
cmp
sbb
mov
jno
xor
and
and
push
mov
movs
jge
and
(bad)
(bad)
(bad)
dec
push
mov
mov
add
(bad)
fcom
dec
xchg
leave
les
lods
out
ficomp
push
adc
shr
adc
push
int
(bad)
(bad)
(bad)
ficom
sbb
test
test
adc
cwde
(bad)
hlt
ret
mov
inc
pop
(bad)
(bad)
(bad)
push
add
jno
test
shr
out
in
lea
fwait
lods
xchg
adc
jp
call
scas
xor
and
xor
push
lods
mov
mov
dec
out
dec
mov
retf
arpl
(bad)
call
movups
xor
jl
push
pop
cdq
jnp
arpl
add
(bad)
jg
sub
cli
adc
push
dec
sbb
mov
ins
add
cmp
loop
mov
ja
jmp
fisub
jle
mov
loope
ins
icebp
add
adc
cdq
imul
stos
pop
out
iret
(bad)
mov
sub
nop
out
arpl
dec
rcr
ret
push
dec
xor
adc
push
inc
pop
fstp
mov
jle
cmc
jns
mov
(bad)
fcom
loope
xchg
rol
scas
mov
sbb
(bad)
(bad)
jg
inc
or
xchg
sub
mov
jne
(bad)
rcr
pop
call
or
jno
mov
inc
call
pop
mov
adc
mov
mov
shr
mov
sub
(bad)
(bad)
push
xchg
add
mov
add
mov
push
inc
xor
xchg
mov
mov
push
xchg
inc
sub
scas
mov
test
(bad)
(bad)
out
mov
fs
cmp
pop
inc
and
cmps
or
xchg
jecxz
xchg
xchg
(bad)
push
jmp
nop
sbb
xor
fs
imul
dec
sub
(bad)
(bad)
dec
cld
out
gs
add
and
call
pop
ins
arpl
xchg
aad
(bad)
(bad)
jmp
xchg
retf
dec
pop
dec
xchg
imul
mov
rol
dec
dec
push
lods
inc
stos
nop
(bad)
(bad)
mov
nop
xor
(bad)
movs
sub
xchg
cmps
push
adc
cmp
pop
(bad)
dec
cli
pushf
xor
mov
aas
xor
pop
loope
and
test
xchg
shr
call
push
sahf
ins
mov
repnz
cmp
int
mov
movs
jo
(bad)
jp
jbe
or
(bad)
(bad)
(bad)
(bad)
mov
inc
jae
int
sub
adc
push
out
or
(bad)
call
add
call
dec
retf
loope
out
movs
and
test
pop
dec
jb
adc
cmp
pushf
xor
pop
inc
call
inc
push
xchg
add
jmp
or
push
aam
sub
loopne
stos
(bad)
jmp
ror
es
jns
cmp
mov
xchg
(bad)
(bad)
(bad)
dec
xor
imul
jno
jmp
test
les
ds
dec
mov
and
jno
test
(bad)
(bad)
jmp
nop
inc
lods
retf
stos
and
xor
add
sub
and
(bad)
lea
jecxz
jmp
cli
dec
adc
add
dec
xchg
jae
pusha
sub
adc
dec
inc
fwait
xor
jl
scas
clc
(bad)
push
call
ins
ret
mov
push
or
mov
(bad)
add
add
push
inc
(bad)
data16
inc
mov
fst
pop
test
(bad)
(bad)
(bad)
call
cmp
inc
sub
aam
pop
jp
mov
sbb
imul
push
fnstcw
add
call
sub
ret
pop
xor
jnp
mov
dec
jne
test
jbe
push
pop
mov
jo
jecxz
idiv
stos
outs
ss
mov
pop
jo
mov
push
adc
test
sub
pop
retf
sub
mov
add
pop
mov
repnz
into
mov
lods
icebp
lea
and
in
(bad)
(bad)
call
mov
lods
aaa
mov
add
inc
pushf
jne
in
mov
cwde
pop
cld
(bad)
dec
sub
add
sbb
push
sbb
loop
sub
fwait
cmp
inc
push
test
xchg
(bad)
(bad)
(bad)
jmp
repz
cmp
cmp
(bad)
fstp
jl
cwde
cmp
mov
dec
add
sub
(bad)
dec
ins
push
sbb
pop
push
push
add
pop
xor
push
movs
inc
and
mov
(bad)
(bad)
jmp
or
repnz
les
jle
popa
loope
(bad)
jo
push
add
call
(bad)
popa
pop
jmp
movs
mov
or
popa
(bad)
(bad)
(bad)
jmp
pop
xchg
test
stos
repz
test
fisttp
out
jl
jmp
test
pop
push
add
leave
jmp
inc
(bad)
(bad)
jmp
mov
sbb
(bad)
ror
xor
xchg
xchg
xchg
cmc
inc
pop
(bad)
(bad)
(bad)
call
mov
mov
in
adc
push
dec
fsubr
sbb
dec
(bad)
(bad)
mov
cmp
cmp
push
dec
cli
into
shr
dec
cs
(bad)
(bad)
(bad)
inc
xor
or
xor
push
push
push
mov
inc
outs
push
(bad)
push
(bad)
(bad)
(bad)
fistp
cmp
and
add
mov
mov
xchg
xchg
adc
(bad)
(bad)
(bad)
out
mov
aad
aam
into
sub
fwait
adc
test
add
in
(bad)
adc
call
test
dec
test
sti
movq
retf
and
out
pop
and
shr
sar
out
data16
popf
sahf
scas
in
ds
inc
xor
push
call
outs
(bad)
leave
(bad)
inc
xor
and
or
jmp
inc
jb
or
fstp
lds
fucomip
rcl
popa
aad
(bad)
(bad)
(bad)
jmp
jno
dec
fisub
fld
or
cs
add
mov
int
inc
shl
cmp
adc
add
cmp
push
mov
cwde
push
into
ficom
inc
test
cmps
scas
cli
(bad)
inc
pop
push
xchg
and
out
add
xchg
test
stos
scas
cli
(bad)
jmp
pop
out
retf
in
test
mov
sub
adc
movs
lods
fbstp
inc
inc
cmc
dec
sub
mov
dec
xor
cmp
cmp
(bad)
mov
add
dec
div
cmp
(bad)
popf
scas
nop
test
pop
(bad)
(bad)
(bad)
call
test
aam
or
inc
dec
bound
pop
movs
xlat
inc
popa
sbb
jp
(bad)
(bad)
(bad)
mov
cld
and
inc
inc
push
mov
inc
push
push
dec
outs
mov
inc
xchg
mov
sub
dec
mov
neg
push
jge
or
xlat
xchg
mov
leave
and
and
pop
cmp
(bad)
cmp
or
(bad)
(bad)
(bad)
call
sbb
push
arpl
scas
cmp
pop
adc
(bad)
lods
dec
(bad)
inc
jno
repnz
adc
sbb
(bad)
fcomip
xor
sub
sub
enter
mov
nop
(bad)
(bad)
jg
mov
je
mov
add
cmp
inc
les
adc
loopne
std
(bad)
(bad)
jmp
cld
sub
(bad)
ret
xchg
mov
push
ret
push
cdq
loopne
mov
outs
adc
fcom
jle
xor
sbb
enter
xor
out
hlt
push
ja
lock
dec
add
sbb
ror
leave
adc
ja
clc
jmp
mov
mov
scas
mov
(bad)
(bad)
dec
mov
rcl
cmp
dec
outs
or
add
(bad)
push
and
cwde
mov
(bad)
(bad)
(bad)
call
jno
nop
or
aas
inc
lods
(bad)
adc
lahf
fwait
pop
dec
mov
xchg
and
and
lds
(bad)
(bad)
inc
pop
xor
call
or
xor
xor
pop
pop
or
jmp
mov
dec
lods
inc
cdq
jae
pop
test
shl
pop
sub
movs
rol
cmp
cwde
push
jno
mov
ins
adc
cli
adc
mov
je
cmps
enter
(bad)
je
mov
mov
or
pop
cmp
xchg
(bad)
call
sub
xchg
adc
push
push
inc
rol
stos
iret
xchg
push
les
pop
(bad)
push
dec
sahf
sbb
adc
dec
test
stos
inc
sub
pop
test
mov
(bad)
fmul
out
(bad)
aad
(bad)
pop
inc
inc
pusha
pop
sub
or
and
xor
cmps
(bad)
(bad)
push
sbb
out
bound
test
shl
(bad)
adc
dec
data16
(bad)
(bad)
(bad)
jmp
pop
rcr
and
or
jne
fldcw
aaa
jae
mov
les
daa
cmp
add
leave
dec
jl
int
pop
rcr
push
sub
addr16
mov
pop
adc
mov
inc
loop
(bad)
mov
stos
outs
add
jp
jl
sahf
adc
(bad)
call
add
test
xchg
dec
stos
repz
push
push
add
jmp
(bad)
(bad)
(bad)
push
dec
mov
out
push
add
sahf
adc
mov
movs
aad
sub
(bad)
xor
(bad)
(bad)
call
test
fcmovu
sbb
jp
xchg
dec
add
outs
cmp
add
dec
(bad)
(bad)
(bad)
dec
pop
xchg
std
sub
mov
dec
mov
cmp
cmp
sub
pop
pop
jae
sub
mov
ror
ds
add
daa
ret
das
cli
jg
push
and
mov
push
adc
push
ret
mov
call
mov
sub
jns
stos
pop
(bad)
jo
pop
cmp
test
(bad)
cdq
shl
or
adc
mov
retf
mov
call
ror
fidiv
popf
xor
cwde
js
jl
inc
mov
(bad)
(bad)
(bad)
cmp
xor
and
xor
dec
inc
mov
xchg
or
sbb
dec
push
inc
clc
(bad)
push
rol
add
ret
jmp
in
ror
push
or
dec
sahf
iret
mov
mov
loope
mov
dec
push
out
sub
and
and
sbb
pop
or
xor
out
push
mov
dec
sub
sbb
movs
or
pop
fisttp
mov
ds
add
stos
mov
and
cmp
lods
inc
movs
jle
inc
mov
fld
xchg
xchg
xchg
in
out
cli
(bad)
inc
hlt
jbe
pusha
stc
or
pop
in
push
aas
mov
pop
stos
les
push
std
call
inc
push
adc
mov
inc
mov
xor
mov
sahf
daa
aad
(bad)
mov
test
or
xlat
and
test
mov
mov
(bad)
fcomip
shl
sbb
mov
push
jae
sub
call
fidiv
xchg
(bad)
(bad)
(bad)
push
push
popa
xchg
push
add
pop
push
cmp
test
add
pop
outs
xchg
sub
(bad)
push
and
addr16
xor
pop
dec
gs
sbb
add
adc
(bad)
jg
or
jmp
push
repz
aas
fs
xchg
jnp
test
fsub
(bad)
(bad)
call
or
aad
std
ins
pop
out
add
pop
sub
lods
(bad)
lods
sbb
pop
(bad)
mov
pop
or
mov
fcmovbe
xchg
dec
inc
aad
lods
cmp
jg
or
sbb
jno
ss
clc
loopne
aaa
test
push
cs
ud0
(bad)
jmp
xchg
ror
cwde
cmps
and
mov
nop
lds
push
(bad)
cmc
(bad)
(bad)
(bad)
push
sbb
fucomp
pop
cmc
xchg
jne
adc
add
gs
(bad)
dec
ja
pop
stos
sub
scas
sbb
in
test
sbb
sbb
icebp
jae
xchg
xchg
adc
in
pop
cmp
popf
aas
jne
stos
xchg
ins
repz
xchg
fwait
ror
dec
jge
add
fsub
popa
jg
adc
add
clc
(bad)
(bad)
call
lds
push
mov
dec
ds
add
test
inc
mov
out
dec
xor
sub
les
push
pop
ins
std
cmp
(bad)
fucomp
fidivr
int3
jns
call
(bad)
jle
jno
lock
pop
ret
push
aaa
and
push
(bad)
(bad)
(bad)
dec
hlt
repnz
pop
inc
cdq
mov
jl
mov
xchg
je
mov
cwde
push
(bad)
(bad)
(bad)
jmp
in
sub
push
rcr
rol
scas
xchg
sbb
call
mov
lods
(bad)
push
retf
cmps
xchg
inc
ret
std
test
dec
and
(bad)
(bad)
jmp
cmp
mov
bound
adc
dec
sub
xor
idiv
je
mov
pop
mov
call
xor
loopne
test
sbb
jg
cli
mov
hlt
cdq
ss
stos
push
int
xchg
shl
xlat
and
cmp
mov
(bad)
(bad)
inc
or
add
cmp
movs
pop
sub
ja
and
push
hlt
add
out
retf
int
pop
(bad)
(bad)
(bad)
mov
sbb
xor
mov
xchg
or
and
outs
inc
cdq
xor
mov
dec
dec
dec
loopne
pop
pop
arpl
sbb
push
inc
loope
dec
idiv
mov
dec
sub
add
push
and
add
(bad)
push
pop
add
xor
pusha
cmp
fidiv
xchg
adc
(bad)
(bad)
dec
jae
sub
mov
add
xchg
push
mov
sbb
mov
jmp
pcmpeqd
dec
pusha
and
and
rcl
cli
push
cli
mov
(bad)
sbb
stc
xchg
add
aaa
adc
inc
pop
inc
nop
mov
sbb
mov
addr16
inc
or
(bad)
(bad)
call
jl
mov
dec
imul
ins
jns
bound
imul
popa
mov
test
(bad)
(bad)
(bad)
push
jne
push
and
mov
add
rol
pop
fistp
adc
fwait
inc
hlt
into
adc
(bad)
push
jmp
add
or
hlt
push
cmp
push
jb
adc
fcom
iret
scas
add
(bad)
jmp
and
(bad)
push
loope
cmp
(bad)
mov
mov
and
add
sub
lds
dec
int
mov
lahf
cs
loopne
(bad)
jmp
aaa
xchg
dec
adc
lahf
or
mov
sbb
or
scas
inc
(bad)
(bad)
(bad)
mov
in
push
test
add
add
sti
cmc
loope
adc
adc
popf
mov
(bad)
call
xor
xor
dec
push
retf
sbb
xchg
fwait
test
cwde
push
sbb
sbb
(bad)
jmp
mov
xor
xchg
repz
gs
scas
xor
and
mov
mov
out
dec
pop
lods
xor
cld
cmps
jmp
test
add
lock
fdivr
in
mov
(bad)
jg
lock
add
and
lods
rol
out
dec
(bad)
(bad)
(bad)
dec
data16
jp
fadd
fucomp
imul
add
icebp
(bad)
jmp
loope
or
and
mov
sub
adc
dec
retf
add
sub
push
push
outs
or
cmp
fisttp
lock
aam
or
cs
push
bound
neg
xor
inc
dec
dec
sub
(bad)
push
rdmsr
test
out
addr16
jb
sbb
mov
mov
(bad)
call
pop
add
inc
cld
call
shl
adc
mov
add
or
sub
call
nop
in
lods
mov
mov
jmp
dec
and
pop
mov
mov
cmp
push
adc
inc
ret
fisttp
push
(bad)
jmp
aad
mov
pop
xor
mov
sub
ins
rol
call
cld
jmp
dec
or
shl
sbb
call
(bad)
(bad)
jns
adc
dec
inc
loop
and
or
(bad)
fs
jno
fsubr
xor
mov
cmc
(bad)
(bad)
jmp
fst
cmc
aaa
add
sub
xchg
push
xchg
addr16
(bad)
jg
ffreep
shl
(bad)
aad
daa
mov
jmp
(bad)
loope
push
inc
jmp
jecxz
mov
(bad)
(bad)
jmp
outs
jge
or
add
dec
push
mov
add
mov
lods
xor
inc
ins
cmc
call
inc
fwait
add
pop
and
test
loop
mov
mov
inc
inc
cmp
sub
inc
adc
cmc
jb
aam
cmp
or
mov
sbb
and
mov
cmps
mov
int3
cmp
lock
add
xor
aad
(bad)
(bad)
(bad)
call
cmc
dec
adc
mov
mov
ret
mov
outs
stc
jnp
(bad)
(bad)
(bad)
jmp
mov
nop
(bad)
into
xchg
cmp
push
inc
sbb
je
push
fwait
jmp
inc
jl
fs
or
in
or
xor
pusha
(bad)
xor
pusha
push
ins
in
inc
mov
(bad)
(bad)
(bad)
call
cmp
xchg
mov
cmc
inc
aaa
(bad)
cmovbe
(bad)
movs
imul
(bad)
jge
fwait
(bad)
(bad)
jmp
sahf
sbb
xor
jge
jne
bound
jmp
shl
inc
inc
rcl
nop
lahf
lods
inc
xor
mov
dec
or
sub
stos
sbb
(bad)
pop
xor
sub
out
mov
sbb
pop
icebp
push
cmp
(bad)
(bad)
dec
(bad)
fldenv
test
cmps
and
push
into
jnp
or
movs
fild
sahf
fs
jl
hlt
(bad)
(bad)
call
or
xchg
test
inc
push
hlt
rcl
inc
hlt
xchg
xor
jp
jecxz
leave
outs
sbb
pop
in
nop
or
cmp
adc
(bad)
fisubr
adc
mov
pop
inc
nop
pushf
(bad)
pop
sub
(bad)
(bad)
(bad)
call
inc
call
lods
push
add
cmp
or
ds
in
and
and
(bad)
(bad)
(bad)
inc
dec
and
and
inc
or
jae
mov
adc
adc
aad
add
push
dec
mov
xchg
xchg
pushf
ds
jbe
test
xor
xchg
adc
(bad)
jmp
push
std
(bad)
(bad)
jmp
push
test
mov
add
or
inc
sub
xor
sub
loopne
out
jbe
stos
(bad)
outs
mov
inc
push
adc
adc
push
add
lods
jbe
push
cld
jno
(bad)
push
std
sub
aad
fs
jge
sub
cmps
ds
clc
call
and
push
cld
adc
sub
call
mov
ret
loop
(bad)
(bad)
(bad)
inc
ret
mov
stos
movs
sbb
int
in
xchg
add
and
adc
movs
mov
sub
(bad)
(bad)
ffreep
push
fmul
adc
nop
xchg
push
test
or
pop
lock
mov
sti
xchg
mov
push
or
mov
(bad)
(bad)
jmp
sub
xchg
btc
xor
xchg
adc
(bad)
fwait
add
or
sub
push
mov
(bad)
(bad)
(bad)
jmp
ins
mov
push
aaa
pop
xchg
shl
pop
setno
lea
(bad)
(bad)
(bad)
jmp
and
retf
dec
popa
sub
xchg
push
ror
in
add
dec
mov
(bad)
rcl
jecxz
mov
lods
jmp
(bad)
fcomip
jg
dec
inc
push
daa
adc
push
xchg
and
mov
rcr
lock
ds
inc
push
inc
jnp
mov
call
cmc
pop
test
(bad)
ror
sbb
rcl
dec
or
push
mov
xchg
daa
pause
cmc
mov
push
push
adc
cs
add
adc
sar
adc
lock
in
(bad)
mov
push
and
inc
push
fsub
sub
pop
hlt
test
mov
cmp
sub
imul
lock
(bad)
jmp
jne
int3
cmp
xlat
mov
scas
das
dec
sub
xchg
les
and
(bad)
dec
es
pusha
movs
cmp
lods
cli
xor
dec
iret
cmc
retf
pusha
cmp
(bad)
(bad)
(bad)
call
xchg
push
adc
out
rcr
push
dec
sbb
dec
dec
pop
sbb
jle
(bad)
adc
adc
loop
mov
xchg
retf
sar
repz
ds
jl
sbb
push
aam
adc
(bad)
call
lods
inc
stos
sub
int3
ds
ret
out
sbb
out
stos
sub
(bad)
(bad)
call
out
pop
ror
xor
mov
or
dec
cmp
gs
xchg
rol
jmp
ficomp
cld
int3
inc
and
adc
rol
push
adc
and
or
mov
(bad)
jg
jmp
push
add
mov
sbb
out
mov
jmp
(bad)
(bad)
(bad)
(bad)
jle
xchg
rcl
pop
jne
data16
push
sub
or
int3
or
xchg
les
adc
call
push
outs
daa
cmp
pop
dec
inc
push
mov
(bad)
dec
mov
cwde
out
or
push
xor
std
push
mov
(bad)
(bad)
jmp
jmp
jno
push
jns
adc
pop
stos
(bad)
les
imul
icebp
or
retf
hlt
mov
stos
add
xor
call
cld
call
adc
cmp
push
sbb
push
pop
test
xor
(bad)
(bad)
(bad)
jmp
inc
stos
jae
add
and
scas
add
mov
mov
dec
add
dec
push
xor
inc
cmp
ret
xchg
gs
(bad)
(bad)
(bad)
call
pop
sub
sub
enter
test
xchg
shl
mov
pop
popa
and
call
push
mov
ror
xchg
arpl
and
(bad)
mov
push
(bad)
push
inc
bound
dec
jle
js
push
mov
dec
add
(bad)
jmp
aas
stos
dec
aaa
imul
jecxz
and
shl
cli
xor
mov
imul
adc
jo
and
add
out
aam
pushf
push
out
jp
mov
popa
movs
sub
call
movs
dec
out
pop
jo
sub
jmp
call
dec
mov
enter
shl
(bad)
jmp
xchg
adc
xchg
inc
cdq
fistp
mov
xor
xchg
rcr
call
pop
outs
sbb
mov
push
adc
add
fisub
in
ins
and
loope
ds
fmul
xchg
or
cdq
movs
push
fiadd
in
dec
cmps
lods
sub
or
lds
xchg
scas
and
pop
sub
lahf
push
andps
adc
(bad)
(bad)
(bad)
(bad)
test
js
inc
mov
fs
mov
fs
and
cmps
dec
(bad)
and
xor
jecxz
inc
lea
(bad)
mov
retf
call
fbld
pop
adc
xchg
inc
inc
xchg
sub
push
cmp
loopne
(bad)
jmp
push
pop
cld
mov
push
jno
popa
jmp
push
sub
inc
adc
ret
push
jo
and
test
xchg
test
int3
jmp
nop
loopne
mov
(bad)
jmp
mov
into
and
jns
enter
fsub
pop
leave
in
gs
(bad)
jmp
xor
jno
sub
cmp
push
sbb
xor
and
pop
and
adc
xchg
ins
cdq
push
push
outs
mov
dec
jno
xchg
add
push
sub
ret
popw
test
mov
push
or
mov
dec
ja
pushf
pop
push
sub
cmp
scas
dec
or
add
gs
dec
stos
inc
enter
xor
jmp
scas
mov
aad
sbb
xchg
push
mov
(bad)
(bad)
(bad)
dec
(bad)
sti
jecxz
xchg
inc
mov
lods
push
sahf
ins
lods
cmps
aam
cs
out
dec
loope
imul
les
sbb
mov
inc
sbb
out
jge
push
jmp
mov
mov
in
add
(bad)
mov
mov
inc
dec
jno
out
xchg
cmp
lods
cmc
dec
ja
add
mov
(bad)
(bad)
call
xchg
xchg
and
mov
and
add
mov
sub
out
(bad)
(bad)
(bad)
dec
mov
ret
lods
sar
mov
int3
into
xor
sbb
nop
sbb
(bad)
push
call
loopne
nop
popa
jbe
or
pop
cmp
and
nop
(bad)
(bad)
jmp
std
mov
sub
lds
cld
out
loope
cmp
and
call
jecxz
gs
mov
and
aad
hlt
mov
mov
(bad)
(bad)
call
dec
pop
cmp
dec
fadd
test
inc
fld
and
retf
or
(bad)
(bad)
jmp
mov
adc
mov
pop
mov
(bad)
dec
fs
stos
mov
(bad)
(bad)
cmp
sub
dec
and
cmp
test
sub
cmp
retf
(bad)
(bad)
jns
xor
jnp
mov
js
shr
nop
fmul
aam
int
gs
ins
dec
icebp
(bad)
(bad)
jmp
xchg
adc
int
sbb
push
retf
shl
cmp
ins
cmp
pop
icebp
inc
dec
lods
xchg
add
in
jo
mov
sub
xchg
lods
push
mov
inc
pop
push
cwde
ins
push
mov
daa
adc
mov
pop
(bad)
(bad)
push
sub
mov
cdq
aad
or
into
push
stos
mov
test
or
mov
jge
arpl
mov
add
inc
mov
cwde
xchg
or
mov
jmp
inc
dec
push
rcl
hlt
dec
mov
in
arpl
scas
mov
test
mov
mov
and
inc
into
add
call
mov
into
sbb
(bad)
mov
dec
fld
mov
jb
cmps
lds
(bad)
(bad)
(bad)
jg
aad
imul
test
rol
test
xor
sbb
jmp
test
(bad)
(bad)
call
xchg
dec
mov
xchg
nop
das
jne
sbb
inc
fnsetpm(287
ret
push
mov
inc
(bad)
jmp
clc
or
xchg
xchg
scas
sub
adc
retf
cli
xor
cmp
xor
xchg
test
mov
(bad)
(bad)
(bad)
(bad)
jmp
and
movs
mov
mov
push
push
mov
fist
mov
push
mov
xor
mov
hlt
and
push
adc
(bad)
lods
push
mov
je
scas
test
adc
(bad)
(bad)
inc
ficom
or
mov
je
aaa
iret
mov
mov
xchg
(bad)
inc
push
hlt
cmc
push
(bad)
jmp
fdivr
je
add
add
inc
sub
out
xchg
cld
cld
(bad)
(bad)
call
nop
xor
ret
enter
jle
daa
mov
adc
popf
dec
sub
mov
pop
call
add
mov
jno
adc
xor
loope
(bad)
(bad)
jmp
and
sti
into
icebp
cdq
mov
pop
repz
jae
or
jmp
and
push
xor
hlt
js
fs
ret
(bad)
mov
xchg
sbb
mov
movs
jns
cmps
(bad)
(bad)
(bad)
jmp
mov
sub
push
push
or
movs
xchg
cmc
pop
dec
mov
mov
mov
(bad)
dec
push
jae
xchg
cmp
jbe
popf
jge
push
ror
retf
(bad)
call
mov
xchg
xor
pop
mov
xor
push
inc
adc
fwait
(bad)
push
inc
mov
test
dec
add
mov
(bad)
(bad)
dec
adc
adc
loopne
sub
cmps
mov
pushf
push
pop
fistp
add
jns
stc
adc
(bad)
(bad)
call
fbstp
ret
adc
cdq
jg
mov
xchg
sub
or
inc
adc
jg
call
pop
shl
mov
retf
xor
mov
xor
mov
(bad)
jmp
cld
mov
call
push
mov
ret
adc
inc
or
daa
push
(bad)
(bad)
(bad)
dec
pop
pop
jno
push
pushf
mov
jle
inc
mov
xor
xor
jno
mul
sbb
stos
retf
je
mov
cs
and
(bad)
test
sub
xchg
(bad)
(bad)
(bad)
jmp
sbb
mov
pop
scas
dec
ret
inc
imul
fst
cmp
jl
(bad)
jg
call
fwait
cmp
adc
adc
les
jmp
cli
inc
push
lods
lock
sbb
xchg
nop
or
xor
into
pop
(bad)
(bad)
(bad)
(bad)
and
xchg
arpl
pop
clc
fnstenv
je
xchg
sub
or
aas
std
cs
cmp
xor
lds
pop
clc
mov
aaa
(bad)
dec
cdq
aas
push
into
pop
cs
(bad)
call
loopne
dec
dec
pusha
add
xor
and
addr16
cld
cmps
inc
pop
mov
xchg
call
clc
pusha
fnstenv
jno
mov
inc
mov
pop
cmp
(bad)
push
push
sbb
mov
lock
inc
push
cmps
adc
mov
mov
push
cmps
cmp
retf
push
stos
(bad)
fldenv
add
cld
pop
je
cmp
loop
dec
icebp
aas
aam
mov
mov
(bad)
(bad)
dec
pop
loop
push
adc
inc
clc
cmp
push
dec
aad
cmc
pop
test
or
jo
xchg
(bad)
(bad)
(bad)
jmp
mov
add
mov
mov
sub
int3
xor
jo
mov
(bad)
(bad)
call
mov
ret
or
pusha
lods
lds
inc
mov
mov
cmps
fwait
(bad)
lods
pop
adc
jle
mov
and
addr16
cmp
js
(bad)
(bad)
jmp
ret
movs
xor
mov
icebp
mov
int
scas
daa
or
call
ret
jmp
inc
sub
sub
xchg
shl
imul
mov
xor
cld
mov
loope
in
mov
ror
xchg
inc
pop
jle
popa
or
lahf
lds
(bad)
(bad)
(bad)
call
ret
dec
mov
jnp
mov
mov
test
mov
test
cld
mov
in
mov
adc
adc
sub
push
pop
iret
test
mov
test
in
sbb
xor
push
push
test
test
inc
jmp
push
pop
push
rol
lods
mov
fwait
(bad)
(bad)
jmp
push
scas
sub
adc
push
in
and
loop
mov
out
push
sbb
std
(bad)
(bad)
jmp
icebp
gs
push
lahf
lods
fnstcw
xchg
inc
(bad)
push
xor
mov
out
test
(bad)
mov
xor
sahf
clc
(bad)
loop
mov
out
xchg
xor
(bad)
(bad)
push
mov
sub
jo
pop
int
cmp
imul
mov
push
lods
mov
(bad)
(bad)
(bad)
jmp
mov
dec
cmc
inc
sar
mov
or
mov
(bad)
sub
sub
(bad)
mov
neg
lock
and
or
jl
(bad)
push
inc
gs
(bad)
jmp
shl
(bad)
dec
mov
mov
cmp
inc
rol
mov
ret
xor
stos
loopne
adc
cmp
and
push
(bad)
(bad)
(bad)
call
cdq
inc
and
shl
jbe
jo
je
mov
inc
mov
pop
icebp
call
pop
into
rcr
mov
dec
(bad)
and
or
(bad)
(bad)
dec
enter
mov
int3
add
rcr
fwait
lods
inc
mov
jg
push
mov
in
mov
std
sub
or
test
fld
fisubr
movs
daa
std
dec
clc
lods
cwde
sub
nop
add
mov
push
in
jmp
(bad)
xchg
stos
push
cmps
mov
or
jp
call
test
(bad)
(bad)
dec
mov
mov
mov
pop
inc
xor
adc
loope
cmps
mov
cdq
clc
adc
call
call
movs
dec
loopne
add
movs
sub
push
mov
nop
sub
dec
jbe
mov
nop
mov
mov
push
sub
hlt
push
inc
dec
aad
sub
push
movs
add
mov
int
popf
jbe
ror
fs
xchg
stc
xor
loopne
and
(bad)
mov
stos
jg
bound
shr
daa
ret
ds
addr16
push
(bad)
fist
xchg
clc
mov
and
(bad)
call
pop
mov
xchg
nop
dec
loopne
(bad)
ds
and
ds
sub
mov
cmp
sub
call
mov
test
retf
sbb
mov
cmc
(bad)
jmp
sub
jecxz
sub
xchg
and
shr
jb
test
cld
cmps
scas
dec
xor
pop
scas
add
sub
(bad)
(bad)
(bad)
call
retf
sbb
pusha
push
fwait
xchg
call
shr
jno
cmp
sub
(bad)
(bad)
(bad)
jmp
(bad)
shl
loope
popa
(bad)
nop
test
pop
mov
lds
sbb
inc
outs
stos
cld
dec
mov
loopne
cmp
xchg
push
lods
push
pop
inc
mov
js
shl
(bad)
outs
or
lahf
(bad)
(bad)
jg
loopne
inc
xchg
dec
pop
cmp
xor
hlt
test
hlt
aam
lock
pop
push
(bad)
movs
mov
ss
es
dec
push
aaa
xchg
xchg
mov
mov
add
cli
mov
push
cld
pop
arpl
adc
daa
bound
(bad)
(bad)
inc
xor
pop
or
pop
and
std
test
fsubr
mov
jg
jmp
outs
or
jbe
pusha
mov
push
dec
aas
sub
and
sar
dec
dec
adc
jbe
pop
(bad)
lods
lds
mov
loope
ss
sbb
mov
jo
mov
push
in
leave
loope
cmp
push
mov
call
push
(bad)
aam
int
jne
xchg
jae
loopne
mov
mov
std
(bad)
call
pop
push
sbb
fsub
ret
pushf
push
mov
sbb
xor
(bad)
fcomip
repz
or
sub
popa
loope
xchg
mov
mov
push
push
call
repnz
xchg
jmp
push
xchg
inc
scas
dec
cmp
call
mov
sbb
mov
(bad)
mov
out
jo
push
(bad)
sub
imul
out
add
(bad)
(bad)
call
mov
adc
cli
test
sub
pop
mov
lock
(bad)
js
test
mov
add
pop
std
dec
jno
inc
movs
xor
or
adc
(bad)
stc
jne
jge
inc
mov
jp
aad
sbb
(bad)
cmps
fcmovbe
(bad)
adc
mov
shr
arpl
retf
mov
or
(bad)
(bad)
(bad)
call
and
cmp
cmps
sub
inc
adc
mov
mov
lea
stos
inc
icebp
(bad)
call
loope
addr16
in
jmpw
and
inc
pop
add
dec
and
cmp
jno
(bad)
jmp
test
and
or
cli
push
stc
mov
call
inc
(bad)
(bad)
jmp
xor
xchg
push
ret
fwait
addr16
movs
dec
leave
mov
adc
(bad)
jg
push
inc
pop
jmp
jo
sbb
cwde
mov
test
lock
jmp
add
in
cmp
out
ins
pop
sub
cmp
cmps
(bad)
mov
retf
cmp
and
adc
iret
ret
ror
loope
(bad)
cmp
mov
(bad)
cwde
repnz
xchg
jl
mov
add
loop
pop
ins
fld
leave
sub
mov
xlat
jb
pushf
inc
mov
outs
cli
call
dec
sub
dec
adc
and
sbb
sbb
and
dec
out
mov
call
or
outs
test
cmp
lods
retf
jl
jmp
outs
cli
call
dec
add
xor
xor
ror
test
(bad)
mov
jmp
mov
rcr
popf
cmp
mov
(bad)
(bad)
(bad)
in
je
push
jle
std
cs
mov
lea
lods
xor
movs
mov
cmps
gs
in
(bad)
(bad)
(bad)
(bad)
aas
jle
jmp
adc
inc
jb
ja
int3
js
push
mov
pop
pop
dec
jmp
(bad)
jmp
les
push
pop
or
and
inc
sub
sub
jb
fdiv
push
(bad)
inc
xor
aaa
dec
dec
jecxz
and
cwde
xor
push
xchg
sbb
loopne
(bad)
call
cwde
imul
aas
xor
add
leave
or
xchg
jne
(bad)
push
nop
(bad)
(bad)
(bad)
mov
js
test
rcl
shl
jns
mov
add
sub
(bad)
inc
stos
xor
mov
cmp
icebp
pop
std
call
add
jb
(bad)
mov
retf
int3
jbe
mov
mov
jbe
jmp
(bad)
retf
inc
cwde
xchg
push
loopne
pop
(bad)
bound
mov
(bad)
call
dec
inc
jg
fwait
cmp
dec
sub
retf
add
lea
xlat
mov
ins
sub
(bad)
(bad)
(bad)
(bad)
in
add
and
dec
shl
or
sbb
call
movs
loop
movs
inc
(bad)
(bad)
(bad)
jmp
and
(bad)
mov
fs
sbb
push
mov
fcomp
fidivr
dec
fs
add
call
jno
sti
xor
mov
in
dec
pop
nop
retf
inc
movs
or
cmp
jmp
imul
or
in
repz
(bad)
jg
jmp
retf
cmc
jae
mov
retf
fs
daa
fiadd
cmp
mov
call
loopne
fcomp
ja
jne
(bad)
fstp
rcr
call
(bad)
call
add
or
inc
xchg
mov
popa
scas
clc
(bad)
out
add
pop
lods
dec
enter
cli
call
neg
(bad)
(bad)
(bad)
mov
in
and
fisttp
push
aaa
call
mov
dec
sub
scas
(bad)
(bad)
call
(bad)
lds
fmul
(bad)
mov
test
xchg
mov
sar
cld
(bad)
call
inc
push
jg
adc
out
pop
xchg
inc
push
jbe
xchg
pop
shr
clc
(bad)
jmp
sub
dec
cmp
push
mov
repnz
push
bound
call
sar
mov
jnp
add
mov
pop
mov
inc
xor
(bad)
fdivr
(bad)
jnp
mov
pop
out
fisub
pop
pop
mov
sub
idiv
stc
pushf
not
pop
inc
sbb
jmp
(bad)
inc
fdivr
jae
cmp
ret
std
(bad)
sbb
mov
xchg
ud0
(bad)
call
jmp
icebp
pop
pop
nop
mov
sub
nop
cmp
cli
sbb
fdivp
fdivr
pop
push
clc
mov
clc
int3
lods
sti
(bad)
mov
div
sub
xor
mov
sub
lahf
(bad)
rcr
jmp
jg
xchg
jns
or
and
jg
lahf
push
(bad)
pop
xor
adc
add
pushf
(bad)
(bad)
inc
sbb
fcom
pop
popf
dec
sahf
call
mov
(bad)
(bad)
jmp
lods
and
jge
cwde
clc
addr16
adc
loop
daa
int3
das
sbb
popf
daa
out
rcl
jmp
and
addr16
int3
fwait
aas
(bad)
fist
pop
outs
mov
(bad)
(bad)
dec
lods
out
in
cmp
mov
cmp
cs
dec
aam
bound
cld
das
sar
xor
push
int
sbb
inc
cmp
xchg
add
test
or
(bad)
(bad)
(bad)
call
push
jecxz
sub
xor
adc
out
stos
(bad)
(bad)
(bad)
jg
or
outs
pop
fcmovbe
pop
repz
mov
js
push
or
call
mov
ins
lds
ja
inc
jg
ss
lea
rcl
cld
(bad)
(bad)
push
push
ret
(bad)
jne
fwait
int
nop
fdiv
aad
inc
cmp
pop
xchg
dec
bound
jb
(bad)
call
xor
xlat
out
shl
popa
lahf
xchg
pop
adc
popf
push
mov
loopne
shr
mov
sub
inc
outs
ja
jnp
push
cmp
cld
mov
hlt
push
jno
rol
ret
or
addr16
(bad)
(bad)
call
add
mov
arpl
mov
outs
out
ins
test
cmp
jg
sbb
pop
(bad)
ret
cmp
push
xchg
fmul
cmc
out
mov
inc
push
(bad)
(bad)
(bad)
(bad)
mov
lods
jo
mov
scas
shl
cmpxchg
cmp
iret
test
(bad)
push
or
call
mov
arpl
and
hlt
(bad)
(bad)
(bad)
jmp
pop
movs
outs
pop
jmp
lds
mov
fs
sahf
test
lock
test
not
(bad)
(bad)
(bad)
in
dec
pop
inc
jne
add
xor
int
or
jmp
xchg
mov
movs
xchg
clc
fwait
push
lods
std
(bad)
(bad)
mov
sar
mov
jp
bound
mov
(bad)
xchg
add
(bad)
(bad)
(bad)
jmp
fbld
data16
fcom
xor
out
bound
add
push
mov
test
adc
mov
data16
(bad)
mov
sub
add
(bad)
xor
jo
cmp
mov
or
(bad)
(bad)
jmp
push
lock
out
outs
call
mov
mov
test
cmp
ror
nop
int
push
std
jmp
popa
test
fwait
jbe
pop
outs
out
push
push
cld
imul
mov
or
ret
das
mov
jl
shl
mov
push
out
jo
cmp
inc
stos
(bad)
loop
mov
dec
loop
cmps
inc
(bad)
mov
jo
jecxz
fild
in
lahf
jbe
sub
sub
(bad)
(bad)
(bad)
jmp
pop
jnp
inc
(bad)
mov
mov
xor
stos
ret
call
and
sub
or
shr
scas
adc
(bad)
cmps
in
(bad)
push
xor
stc
mov
mov
xor
jg
iret
mov
popa
jmp
pop
add
and
(bad)
jmp
mov
gs
mov
jnp
repnz
mov
(bad)
xor
mov
push
stos
pop
dec
(bad)
dec
popa
mov
jmp
(bad)
jns
push
std
(bad)
(bad)
(bad)
mov
sbb
addr16
les
xor
push
push
jecxz
and
(bad)
jmp
jo
sbb
and
sbb
cdq
xor
mov
imul
jnp
cli
(bad)
(bad)
(bad)
(bad)
fistp
imul
xchg
(bad)
xor
retf
neg
not
xchg
ret
push
jmp
(bad)
jl
cmp
out
test
mov
les
xchg
cmps
push
mov
cld
(bad)
inc
fwait
pop
loop
mov
jbe
rol
pop
mov
mov
inc
mov
dec
dec
push
and
sahf
push
ja
(bad)
(bad)
fmul
mov
leave
jge
inc
add
jmp
int
iret
test
lods
je
mov
push
adc
jg
cmp
add
ins
sub
jnp
mov
in
jg
mov
inc
xor
scas
fisubr
mov
(bad)
jmp
xchg
aaa
movs
push
out
push
int3
xor
psrlq
fild
jns
dec
shl
add
fnsave
fstp
push
call
dec
js
sti
pop
inc
mov
repz
adc
sahf
neg
(bad)
(bad)
dec
fimul
add
retf
test
mov
(bad)
(bad)
push
mov
sbb
sub
(bad)
mov
lahf
fstp
aaa
jno
je
inc
mov
xor
fcomp
retf
call
mov
mov
stos
sub
jle
mov
or
xor
sahf
adc
loopne
aaa
arpl
mov
or
inc
or
sbb
mov
push
push
fld
jmp
out
enter
dec
mov
push
mov
(bad)
js
clc
sub
push
inc
mov
(bad)
jg
repnz
inc
aaa
mov
out
ins
push
popa
scas
sbb
(bad)
(bad)
call
dec
int
fs
dec
mov
daa
pop
fnstcw
leave
add
pop
jbe
push
fnstcw
cli
sbb
xor
or
std
fidiv
mov
sti
and
pop
push
imul
stos
push
xchg
mov
mov
cmp
pop
dec
jecxz
pop
push
outs
fsubp
mov
ss
(bad)
(bad)
call
ins
lea
(bad)
mov
ret
es
push
jle
xchg
leave
mov
(bad)
mov
aad
popa
mov
pop
mov
push
xchg
popf
out
mov
mov
dec
pop
pop
lahf
jne
cli
fisub
(bad)
in
ds
inc
call
leave
not
inc
and
inc
jb
out
in
(bad)
and
cmp
pop
and
fisttp
push
push
aad
add
mov
jmp
fldcw
and
fwait
dec
push
hlt
out
mov
(bad)
(bad)
(bad)
mov
push
aam
mov
aas
cmp
push
sbb
mov
dec
fstp
addr16
scas
pop
lock
hlt
jbe
imul
icebp
push
fucomi
jp
push
add
int
ret
mov
sar
fst
jo
jle
jb
daa
pop
(bad)
(bad)
jmp
jo
setns
and
leave
xchg
fist
movs
pushf
xchg
(bad)
(bad)
in
mov
scas
out
or
gs
jmp
and
jno
fs
repz
inc
mov
out
retf
mov
pop
call
mov
sub
in
mov
cmp
(bad)
test
jle
dec
mov
sub
push
repz
cdq
loop
ret
and
(bad)
(bad)
mov
push
push
loopne
add
sbb
mov
out
sti
or
(bad)
(bad)
cmp
test
mov
fbstp
pavgw
scas
js
aaa
jl
(bad)
(bad)
(bad)
jmp
dec
mov
pop
inc
sbb
lahf
or
cmp
aas
fdivr
fnsave
loop
(bad)
cld
push
mov
fidiv
or
mov
push
ja
popa
adc
(bad)
(bad)
fidiv
jecxz
mov
imul
push
jle
mov
xlat
cmp
stos
push
(bad)
(bad)
mov
push
in
pop
mov
fdivr
ins
stos
mov
lods
loopne
(bad)
or
or
in
mov
stos
sbb
jge
fmul
(bad)
(bad)
lock
das
adc
(bad)
mov
cmp
sar
into
add
inc
ins
sbb
adc
mov
je
aaa
in
clc
(bad)
jp
icebp
jl
into
jne
xchg
cmp
or
(bad)
call
jcxz
inc
rcl
mov
pushf
test
inc
or
mov
xchg
xchg
xor
dec
sub
jo
push
test
pop
push
(bad)
(bad)
(bad)
call
sub
dec
push
outs
dec
stos
inc
mov
pop
les
test
les
(bad)
(bad)
cmp
inc
xchg
add
mov
xchg
dec
out
cmp
(bad)
(bad)
call
adc
sbb
sahf
(bad)
adc
das
(bad)
(bad)
call
shl
(bad)
xlat
mov
dec
mov
cmp
xor
xchg
lods
adc
dec
ja
clc
(bad)
(bad)
dec
cmp
push
mov
into
mov
ins
jge
cmp
js
pop
outs
add
mov
push
leave
jbe
scas
idiv
jmp
imul
jecxz
pusha
mov
push
or
xchg
adc
out
retf
stos
push
cmp
inc
mov
jg
mov
push
nop
push
fwait
sbb
xor
loope
push
cmp
call
jg
push
shl
lock
mov
ret
xchg
retf
ret
ins
outs
(bad)
adc
xchg
jmp
(bad)
call
add
push
push
inc
or
jmp
pop
sbb
or
leave
daa
outs
clc
(bad)
pop
ins
dec
jl
mov
jle
fisubr
lds
push
shl
inc
imul
add
adc
out
imul
daa
or
sub
pop
int
dec
pushf
xor
or
cmc
out
mov
dec
or
nop
push
loope
loop
dec
mov
mov
push
int3
subps
stos
add
test
test
aad
(bad)
cdq
aaa
cmp
(bad)
(bad)
inc
jle
adc
cmp
pushf
mov
jo
mov
cdq
dec
mov
xchg
retf
(bad)
dec
sbb
loopne
inc
aad
and
mov
ror
fdiv
clc
xchg
mov
pop
mov
push
or
jge
dec
cmp
jecxz
or
push
clc
call
ret
dec
or
mov
(bad)
jmp
cmps
int3
dec
in
adc
lods
push
outs
mov
stos
fdiv
add
lock
es
fsubr
(bad)
xchg
cmp
cmp
(bad)
fistp
xor
sbb
sbb
jns
into
xchg
ret
or
dec
xlat
aaa
pushw
pop
ins
les
(bad)
(bad)
(bad)
call
sbb
sbb
cmp
push
mov
aam
cmp
movs
lds
mov
sub
movs
add
push
retf
or
dec
jge
call
(bad)
jg
adc
cli
mov
mov
xchg
loop
ds
daa
or
aaa
pop
clc
mov
int3
xchg
test
xor
xchg
lahf
hlt
dec
movs
sub
inc
rcl
mov
cld
(bad)
jmp
(bad)
in
inc
pop
sub
(bad)
push
fcomp
push
js
mov
pop
out
adc
dec
sbb
lock
xor
mov
and
push
jmp
adc
sbb
stos
int3
(bad)
(bad)
(bad)
jmp
(bad)
sbb
xchg
sti
xor
(bad)
out
cdq
sbb
pop
test
div
mov
cmp
(bad)
mov
dec
xchg
ret
xor
scas
in
in
test
cmp
mov
sar
(bad)
jmp
cwde
imul
inc
push
xchg
aaa
or
icebp
push
push
push
mov
jge
push
add
xchg
push
push
lahf
aaa
loope
xchg
xchg
std
inc
jno
mov
xor
cmc
xchg
cs
inc
dec
add
fimul
shr
jne
aad
or
cmp
cmps
jae
push
mov
push
fidiv
ret
add
jmp
xor
mov
xchg
ret
sahf
shr
popa
test
and
adc
movs
(bad)
stos
loopne
and
fimul
int3
or
sti
sahf
pop
sbb
(bad)
(bad)
inc
movs
pop
sbb
loopne
pop
sub
popa
(bad)
push
xchg
and
mov
sbb
push
cmp
mov
(bad)
jmp
add
dec
or
xchg
add
push
arpl
lahf
retf
cmp
pop
dec
and
adc
and
mov
xlat
xor
push
cld
mov
sub
ins
fdivr
call
mov
cmovo
clc
mov
clc
popf
loop
dec
push
in
jmp
(bad)
inc
outs
cmp
dec
sar
mov
(bad)
pop
pop
movs
push
(bad)
dec
packssdw
xor
aas
mov
cs
or
loope
cmp
(bad)
jmp
(bad)
cmp
imul
sub
in
jbe
(bad)
adc
push
out
add
imul
xchg
data16
jmp
xor
test
call
jbe
inc
push
cmps
mov
jg
xlat
xchg
or
xchg
test
add
mov
sub
ja
call
sbb
daa
push
mov
repz
inc
out
mov
(bad)
(bad)
(bad)
(bad)
mov
fcomp
push
adc
jle
call
cwde
lods
push
popa
xchg
xchg
xor
(bad)
jg
xchg
int3
outs
lds
jl
stc
cwde
scas
clc
mov
ficomp
daa
cmp
mov
(bad)
inc
xor
xor
push
sub
sti
xchg
jbe
scas
push
xchg
pop
push
rol
fist
mov
push
(bad)
aad
jb
cmp
mov
add
addr16
stos
in
loope
pop
loopne
pushf
pushf
mov
shl
add
dec
push
test
mov
loope
xchg
push
or
(bad)
dec
(bad)
retf
(bad)
pop
push
adc
add
push
push
push
sub
sub
sub
sub
das
mov
sbb
pop
xchg
inc
ja
cmc
fwait
dec
xor
mov
or
mov
(bad)
jmp
xchg
push
ret
movs
jb
jae
pop
cs
ja
pop
(bad)
(bad)
sbb
add
(bad)
inc
mov
mov
stc
xor
mov
fnstenv
(bad)
leave
push
sub
cmc
sbb
(bad)
(bad)
(bad)
inc
adc
jl
cld
push
arpl
xchg
sbb
push
dec
loopne
jge
aas
jns
pop
mov
cmp
outs
cmp
(bad)
(bad)
(bad)
call
js
icebp
jge
pop
mov
das
jecxz
jne
loop
mov
xchg
sbb
xchg
lods
lods
cmp
nop
dec
and
or
test
adc
mov
mov
jmp
shr
add
out
mov
push
and
or
(bad)
mov
in
sbb
sub
bound
popa
loopne
stc
adc
push
push
jl
ds
add
adc
jo
push
scas
push
lock
sub
ret
fcomip
leave
dec
cmp
lock
inc
mov
jle
xchg
adc
inc
(bad)
fstp
push
movs
mov
dec
stos
jmp
sbb
into
sbb
add
(bad)
dec
(bad)
jge
shl
mov
sbb
ret
mov
inc
add
mov
and
iret
inc
jmp
pop
stos
add
mov
loopne
cli
mov
(bad)
aas
cli
inc
clc
lds
push
xor
dec
dec
xor
pop
les
(bad)
(bad)
call
(bad)
cmp
imul
jge
dec
mov
je
stos
inc
pop
hlt
(bad)
call
pop
cs
inc
or
and
push
je
adc
sbb
sbb
jmp
shl
jl
mov
lods
or
push
loop
push
out
in
(bad)
fcomip
(bad)
mov
add
sbb
or
leave
or
arpl
push
sbb
(bad)
(bad)
inc
retf
and
imul
jnp
cmc
xchg
movs
mov
jne
clc
(bad)
(bad)
jmp
jne
cmp
scas
pop
aad
loope
sbb
jno
xor
and
push
clc
icebp
(bad)
inc
ja
lahf
rol
dec
add
(bad)
retf
xchg
int3
push
js
and
(bad)
(bad)
fbld
sub
add
dec
icebp
gs
cwde
dec
cwde
xchg
xchg
jecxz
push
fldenv
mov
jecxz
or
call
mov
sar
stos
dec
fisubr
add
and
or
stos
mov
(bad)
(bad)
cmp
mov
loope
sbb
inc
pop
or
adc
movs
pop
mov
push
jmp
bound
int
pop
sub
or
jmp
lea
lahf
ret
test
xchg
cmp
loop
fs
inc
(bad)
(bad)
(bad)
call
xchg
or
push
and
xchg
xchg
add
mov
int3
dec
test
sbb
(bad)
(bad)
(bad)
jmp
mov
stos
imul
daa
loop
mov
mov
cmp
lock
pop
adc
test
pop
dec
ss
pop
sub
loopne
loopne
mov
mov
jmp
out
cs
inc
sbb
mov
jl
out
call
(bad)
jg
jmp
mov
retf
repnz
shl
mov
cmp
cmc
jecxz
jb
enter
dec
inc
into
mov
in
mov
mov
sbb
dec
dec
mov
test
pop
push
lea
ins
stc
test
movs
(bad)
(bad)
(bad)
inc
data16
sar
mov
xchg
sub
mov
inc
in
adc
cwde
sub
cli
push
cld
aad
pop
lods
jp
ds
add
into
sub
or
xchg
(bad)
(bad)
(bad)
jmp
scas
test
add
repz
mov
push
xor
cs
pop
sub
call
push
stos
xchg
test
sbb
idiv
enter
or
arpl
loop
ins
loop
movs
rcl
test
xor
retf
fisubr
and
sbb
mov
mov
inc
mov
aam
stos
fild
pushf
mov
repnz
push
mov
jmp
mov
xor
add
jne
ficomp
dec
sbb
(bad)
call
cmp
mov
mov
pop
jo
nop
adc
inc
pop
in
out
out
cmp
(bad)
test
fmul
bound
std
jno
jae
(bad)
in
inc
sar
dec
mov
sub
int3
or
out
data16
mov
(bad)
(bad)
(bad)
(bad)
fild
mov
mov
or
int3
movs
out
movs
add
dec
aam
mov
scas
mov
xrelease
gs
je
dec
push
inc
pushf
mov
inc
js
(bad)
inc
cmp
ret
push
enter
dec
pusha
ret
or
(bad)
(bad)
(bad)
push
mov
fiadd
shl
shl
jmp
inc
mov
inc
xchg
or
icebp
test
iret
push
int3
jmp
popf
and
jnp
dec
xchg
shr
cli
jb
mov
dec
cdq
pop
(bad)
in
(bad)
mov
ins
mov
jp
dec
pop
in
push
inc
in
out
(bad)
sub
(bad)
(bad)
call
add
iret
into
sub
mov
adc
inc
dec
addr16
(bad)
(bad)
mov
cs
xchg
inc
or
sub
dec
adc
mov
mov
arpl
scas
push
in
adc
retf
or
adc
test
int
(bad)
(bad)
dec
in
pop
loope
or
mov
and
sub
in
imul
(bad)
(bad)
jmp
xchg
aam
ins
and
cmp
sbb
mov
aas
(bad)
enter
pop
loopne
dec
(bad)
sub
data16
sbb
imul
jg
jg
xor
lods
dec
pop
dec
inc
sub
icebp
ds
(bad)
call
cld
adc
sbb
xchg
or
xchg
mov
or
pusha
outs
(bad)
(bad)
jg
mov
inc
mov
mov
jl
or
stos
test
(bad)
(bad)
mov
pop
lods
mov
add
stos
fild
jo
lahf
mov
ret
fild
pushf
push
xchg
popa
(bad)
(bad)
mov
push
out
das
ss
jb
fstp
add
xor
jmp
fdivr
out
cli
clc
lds
mov
push
and
xor
add
jl
xchg
or
clc
mov
cs
cmc
xchg
mov
add
and
mov
adc
xchg
and
mov
sar
add
jno
into
add
and
(bad)
(bad)
(bad)
jg
cmc
xor
or
pop
pop
int3
pop
aam
sub
(bad)
sub
div
jne
xchg
inc
xor
(bad)
(bad)
call
lock
xor
out
xor
jae
or
cmp
sub
(bad)
(bad)
(bad)
call
dec
sbb
ss
repnz
dec
add
pop
push
adc
jle
mov
int
xor
xor
lods
rcl
sub
or
and
jecxz
call
jecxz
push
mov
sbb
gs
(bad)
jmp
test
mov
push
lods
xchg
inc
mov
push
call
xor
push
jmp
push
pop
movs
xchg
or
fbld
int3
retf
scas
mov
cmp
dec
loop
cs
adc
mov
jbe
adc
add
(bad)
(bad)
inc
mov
lods
mov
aam
lea
sub
and
jne
lds
push
lock
push
das
dec
sahf
js
xchg
retf
leave
ud0
xor
mov
rcl
add
lods
out
loop
sbb
(bad)
(bad)
(bad)
jmp
movs
mov
inc
shl
sub
int3
jp
ss
adc
ja
jg
(bad)
cmps
mov
mov
adc
xchg
movs
stos
(bad)
(bad)
(bad)
jmp
jae
mov
adc
push
xchg
jmp
add
push
loopne
sub
mov
je
fmul
push
mov
sub
pop
pop
pop
and
(bad)
cmp
inc
add
pop
shr
dec
rcl
arpl
jp
mov
out
mov
pop
scas
and
clc
and
jmp
dec
outs
aam
pop
jns
xor
mov
lahf
mov
(bad)
(bad)
jmp
sub
pop
dec
add
imul
xlat
ret
into
jp
call
loopne
dec
adc
adc
fwait
test
inc
or
call
push
mov
jmp
into
mov
push
in
out
xchg
add
pushf
movs
cld
mov
mov
jg
push
retf
mov
shl
es
arpl
push
add
test
(bad)
(bad)
jmp
daa
aas
aas
je
adc
and
fisttp
dec
int3
(bad)
shl
(bad)
pop
jle
fs
sbb
(bad)
(bad)
(bad)
(bad)
mov
jmp
sub
xchg
test
repz
(bad)
(bad)
(bad)
(bad)
mov
jp
pop
jno
std
pop
daa
lea
push
mov
xor
aaa
ss
(bad)
(bad)
inc
push
mov
mov
jmp
adc
cmp
dec
mov
clc
xor
mov
(bad)
fcomi
inc
push
aaa
xor
stos
bound
scas
retf
pop
fmul
push
(bad)
(bad)
(bad)
dec
test
add
ror
adc
jg
push
nop
jne
adc
and
bound
cmp
retf
retf
xchg
mov
sbb
mov
pop
(bad)
(bad)
(bad)
jmp
push
pusha
aam
sahf
mov
test
sti
and
call
pop
femms
push
(bad)
(bad)
(bad)
inc
out
fist
xchg
bound
retf
xchg
out
jno
sbb
and
out
mov
clc
push
sti
(bad)
(bad)
(bad)
call
push
icebp
mov
sub
push
dec
push
mov
out
add
arpl
hlt
inc
xor
cmps
sbb
(bad)
push
or
out
xor
xor
pop
das
pushf
sbb
cli
cmp
xor
int
or
stc
int3
lds
xchg
inc
fwait
mov
clc
loopne
in
push
das
clc
(bad)
dec
call
mov
push
sbb
xchg
ret
test
(bad)
(bad)
jmp
es
mov
mov
adc
fstp
add
mov
(bad)
(bad)
cmp
pop
fcmovbe
popf
mov
std
xchg
and
ret
inc
jl
outs
or
mov
jmp
jmp
sub
rol
mov
push
adc
inc
cmp
adc
mov
mov
push
xchg
shl
scas
xchg
push
pop
xchg
cld
pop
pop
stc
mov
and
cdq
mov
into
jnp
shr
cmp
(bad)
loope
call
cmps
shr
jge
adc
ja
(bad)
(bad)
jg
or
pushf
call
sub
xchg
cmp
xlat
aam
inc
aaa
jg
cld
inc
pushf
fwait
and
loop
mov
je
call
or
clc
(bad)
jmp
fwait
scas
rol
ins
call
push
sahf
cmps
mov
push
test
(bad)
jg
lods
inc
ins
arpl
xchg
push
cmp
inc
stos
mov
outs
push
mov
dec
and
outs
jno
cld
out
push
hlt
mov
jmp
bound
mov
(bad)
(bad)
push
push
or
ret
xor
sti
pop
mov
call
dec
out
jge
lock
dec
jg
inc
sub
movs
(bad)
(bad)
(bad)
call
mov
push
loope
call
mov
inc
dec
dec
mov
pop
mov
pop
(bad)
(bad)
(bad)
dec
into
lds
mov
pop
inc
das
in
daa
mov
fnstenv
cmp
add
das
clc
aam
cmp
xchg
pop
pop
inc
xchg
test
(bad)
(bad)
inc
pushf
popf
daa
aaa
pushf
(bad)
push
in
adc
jbe
mov
mov
xchg
inc
mov
add
fwait
adc
fld
stos
test
aam
cmps
mov
scas
sbb
loop
(bad)
jmp
mov
mov
cmc
push
ret
cmp
scas
pop
fisubr
call
fwait
push
pop
loop
jecxz
adc
gs
cli
or
xor
ret
mov
les
(bad)
fisttp
jae
cmp
call
pushw
lahf
out
cli
xor
sbb
test
jne
cmp
sub
retf
adc
inc
push
and
hlt
fist
mov
retf
xchg
push
push
rol
lahf
cmp
fnsave
xor
adc
push
clc
stc
test
jg
(bad)
(bad)
jmp
dec
inc
push
xor
inc
es
ds
sbb
pop
add
mov
(bad)
(bad)
in
xchg
adc
and
test
xor
test
xor
ret
xor
push
adc
jg
jbe
dec
js
stos
xor
jbe
loope
aad
data16
loopne
pop
shl
xchg
ins
jmp
jl
clc
das
sar
(bad)
adc
pop
outs
mov
repz
inc
stc
js
sub
jo
mov
cld
mov
lock
jmp
int3
cmp
inc
movs
(bad)
fsub
std
(bad)
dec
pusha
sbb
xchg
scas
js
mov
mov
dec
or
(bad)
(bad)
(bad)
(bad)
in
sub
mov
mov
sub
cmps
retf
and
out
into
inc
mov
test
and
(bad)
jg
ds
dec
mov
jo
cmp
and
jle
cwde
mov
cs
(bad)
dec
inc
and
ret
cmp
retf
cmc
jbe
mov
xor
jmp
xchg
jbe
xchg
stos
push
mov
xchg
mov
(bad)
mov
and
xor
jmp
mov
std
mov
addr16
sub
pop
int3
add
fdivr
sub
mov
dec
scas
daa
sti
sub
sub
stos
add
(bad)
jmp
adc
mov
cmp
movs
add
and
mov
test
jmp
mov
pushf
mov
cmc
xlat
dec
pusha
xchg
push
imul
(bad)
(bad)
out
clc
sub
or
push
push
push
jae
fldcw
jb
aad
mov
(bad)
(bad)
(bad)
(bad)
call
imul
mov
cdq
xor
dec
xchg
outs
(bad)
clc
cwde
ffree
xchg
sub
int3
in
sub
and
(bad)
(bad)
(bad)
jmp
xlat
lds
std
adc
enter
or
jmp
stos
mov
cmps
mov
jmp
cs
fld
xor
call
mov
adc
lods
xlat
pop
adc
movs
push
lds
(bad)
(bad)
(bad)
jmp
and
rep
mov
(bad)
into
sbb
mov
out
adc
sbb
sbb
dec
adc
call
inc
sbb
aaa
cdq
iret
pop
mov
into
cmp
(bad)
jmp
pop
dec
xor
cmp
clc
jle
add
movs
arpl
pop
pop
xchg
xchg
inc
dec
jbe
dec
data16
(bad)
jmp
cmp
push
push
dec
sub
mov
xor
in
push
clc
or
clc
(bad)
(bad)
push
cld
lods
into
(bad)
jmp
in
lea
jo
xor
fwait
popa
sub
es
push
cmp
mov
pop
xor
lock
daa
int
enter
push
dec
sbb
cmp
mov
xchg
js
arpl
adc
jp
mov
cdq
(bad)
(bad)
(bad)
jmp
jmp
xchg
jp
jmp
mov
sbb
call
and
ins
paddd
cmp
leave
ja
fadd
and
jbe
(bad)
(bad)
(bad)
(bad)
fiadd
aaa
jb
bound
sub
jmp
ins
or
popf
pop
dec
loopne
(bad)
(bad)
cmp
fistp
cli
std
ins
mov
inc
test
ins
jmp
mov
cmp
call
ret
pop
dec
fimul
and
and
inc
jl
jae
jno
call
(bad)
xchg
imul
jg
sbb
pop
js
jb
(bad)
(bad)
jmp
dec
pusha
mov
and
mov
xor
pop
mov
xor
jbe
mov
mov
mov
xor
mov
sub
dec
or
xchg
lock
movs
stc
add
dec
mov
test
dec
xchg
in
xchg
arpl
push
cld
(bad)
(bad)
dec
pop
fwait
sahf
jno
mov
mov
push
or
popf
or
shr
(bad)
jmp
scas
call
popf
cld
jl
jmp
xor
push
(bad)
arpl
pop
mov
sar
(bad)
popf
std
xor
(bad)
fld
cmps
and
jb
mov
push
call
repz
push
push
icebp
frstor
(bad)
(bad)
jg
and
xchg
pop
dec
push
jg
dec
std
push
(bad)
jg
(bad)
mov
push
sub
xor
lods
sbb
hlt
sbb
mov
imul
xor
jecxz
(bad)
pop
icebp
outs
push
dec
aaa
cmc
mov
clc
mov
mov
clc
in
(bad)
fild
pop
aas
cli
imul
leave
jg
outs
lea
stos
pop
dec
aas
and
xlat
add
ss
(bad)
gs
neg
jmp
and
or
adc
lahf
dec
sbb
jo
sahf
mov
out
and
(bad)
pop
or
retf
fdivr
add
cld
push
add
jmp
jp
ror
or
jg
pop
mov
in
cld
and
out
daa
iret
outs
dec
popf
scas
mov
outs
jp
(bad)
mov
cmp
sbb
retf
repnz
ror
pop
rcr
das
ret
std
js
sub
jnp
mov
jmp
clc
(bad)
sahf
ja
(bad)
push
adc
dec
fisub
test
aas
loope
std
or
jae
xchg
in
ss
cmps
pop
xchg
pop
ret
(bad)
mov
shr
addr16
(bad)
call
scas
mov
int
cmps
xor
hlt
sar
jg
jp
(bad)
dec
(bad)
ds
aas
pop
pop
jne
push
dec
mov
neg
jecxz
jg
xchg
fwait
cmp
xlat
out
pop
jmp
cli
shl
cmovnp
in
mov
sbb
clc
aas
jmp
sti
dec
mov
inc
inc
out
xlat
call
out
clc
jae
jecxz
iret
mov
dec
cmc
xchg
dec
pop
push
push
data16
dec
(bad)
(bad)
jmp
mov
repnz
repz
mov
or
pop
mov
add
dec
xlat
sub
rcl
nop
cmp
hlt
xchg
scas
mul
leave
jbe
(bad)
(bad)
mov
lock
clc
jne
add
mov
xchg
mov
sub
(bad)
(bad)
jmp
hlt
imul
xchg
(bad)
dec
rcr
or
lods
imul
in
into
mov
(bad)
(bad)
jmp
jnp
cmps
mov
(bad)
mov
call
mov
push
and
std
(bad)
(bad)
jmp
cmp
das
dec
iret
repz
stos
lods
and
push
mov
cmp
lock
(bad)
(bad)
mov
scas
fdivr
push
aas
push
ret
scas
or
lea
adc
les
(bad)
(bad)
(bad)
call
add
xchg
retf
mov
xor
cli
lods
cld
jne
(bad)
(bad)
(bad)
(bad)
out
out
(bad)
cmps
dec
call
cld
sub
rcl
jl
imul
lds
(bad)
(bad)
(bad)
jmp
push
push
dec
lds
rol
fprem1
shl
pop
jle
cld
aaa
mov
adc
sahf
sbb
push
in
dec
es
shl
lods
sbb
push
xor
or
cs
push
int
aam
mov
std
cmc
xor
stos
inc
sar
mov
mov
aas
mov
pop
(bad)
(bad)
(bad)
call
pop
rol
and
(bad)
mov
aad
mov
lea
xor
call
(bad)
jmp
mov
sbb
leave
xlat
jg
mov
gs
(bad)
(bad)
(bad)
push
sub
imul
cdq
fwait
pop
inc
scas
dec
popa
sar
(bad)
(bad)
jmp
push
or
sahf
das
(bad)
fxch
mov
xor
mov
addr16
retf
nop
(bad)
(bad)
(bad)
(bad)
(bad)
loop
xchg
jo
push
repz
retf
push
sbb
(bad)
jg
call
sbb
pop
push
ja
movs
dec
out
(bad)
(bad)
pop
out
call
out
pop
(bad)
(bad)
(bad)
call
lods
nop
push
or
div
cs
cld
mov
scas
inc
ja
std
call
push
inc
fs
jmp
push
sbb
out
scas
mov
push
stos
inc
out
outs
xchg
push
push
add
push
cwde
mov
(bad)
jmp
jnp
jnp
and
mov
push
sbb
sti
(bad)
(bad)
jg
push
mov
inc
jbe
jae
aam
xlat
cli
mov
mov
jb
(bad)
(bad)
jg
sbb
jl
jae
xor
sbb
mov
xor
ret
and
jb
mov
(bad)
(bad)
(bad)
out
mov
adc
xchg
pop
sbb
out
sbb
push
call
outs
out
cmps
out
(bad)
(bad)
(bad)
mov
test
in
xor
ja
ja
or
arpl
jge
sbb
or
mov
std
std
xor
rcr
mov
or
arpl
(bad)
sar
mov
nop
or
mov
(bad)
(bad)
call
aad
push
cmp
or
or
push
imul
ret
sbb
cld
cli
je
dec
int3
push
jle
pop
lock
fisub
xor
pop
nop
icebp
outs
jge
sbb
cmp
cmps
sahf
dec
call
pop
jmp
(bad)
cmps
dec
stos
or
das
xor
std
cmp
hlt
lock
(bad)
push
call
test
into
cli
movs
pushf
int3
loopne
je
cmp
ret
jg
inc
in
xchg
dec
popf
or
push
mov
fs
and
inc
out
mov
gs
(bad)
jnp
xchg
(bad)
(bad)
jmp
mov
sub
dec
sub
(bad)
pop
adc
cmps
mov
push
cs
in
fsubr
out
push
stos
int
xchg
mov
jl
ins
inc
(bad)
(bad)
(bad)
call
pop
xchg
xchg
jmp
inc
sbb
jle
lods
pop
test
repz
sub
push
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
pop
mov
and
repnz
stc
fadd
sub
jne
(bad)
mov
loopne
xor
cmp
ja
std
stc
lahf
cmp
inc
sahf
adc
cmps
mov
sahf
mov
jne
add
jo
pop
addr16
into
xchg
ja
movs
jg
pusha
cld
aaa
cld
inc
xor
aas
xor
and
shl
pop
das
js
mov
out
push
xchg
lea
dec
lock
pop
cwde
ror
in
(bad)
push
call
aam
push
aam
(bad)
mov
ds
scas
or
out
push
stos
jbe
sbb
loopne
movs
hlt
in
or
xchg
rol
mov
call
and
mov
mov
xor
enter
or
add
mov
mov
sub
(bad)
(bad)
(bad)
(bad)
jns
fbld
pop
xchg
cld
and
test
mov
aam
push
scas
mov
(bad)
(bad)
call
inc
jle
sbb
ret
jl
lock
inc
dec
xor
inc
sub
jns
shr
jg
call
cld
inc
(bad)
xchg
dec
pop
inc
mov
in
pop
fnstenv
js
dec
push
(bad)
(bad)
jecxz
pushf
stc
(bad)
sub
xchg
lods
and
les
test
(bad)
in
jnp
xlat
mov
(bad)
or
lds
pop
mov
(bad)
pop
(bad)
(bad)
(bad)
inc
in
adc
mov
mov
es
push
inc
jne
xchg
(bad)
test
sub
cmps
mov
adc
dec
add
popa
aam
or
loop
mov
cmp
(bad)
(bad)
dec
inc
sub
ret
dec
dec
dec
call
rcr
cdq
dec
inc
ins
push
enter
(bad)
dec
mov
mov
es
push
ja
cmp
jge
xchg
mov
(bad)
(bad)
call
shr
push
sbb
int3
and
sub
call
mov
cwde
sub
(bad)
(bad)
fisttp
aad
lods
inc
mov
lods
rcl
push
and
stos
jmp
push
hlt
(bad)
(bad)
jmp
or
pop
adc
bound
mov
and
and
push
(bad)
(bad)
call
(bad)
call
jb
xor
cdq
mov
test
push
xor
aaa
cld
(bad)
cmp
inc
or
test
gs
daa
cdq
mov
(bad)
(bad)
(bad)
call
dec
jmp
push
bound
push
sub
and
repz
sbb
mov
add
dec
fld
add
mov
iret
outs
xchg
(bad)
out
xor
(bad)
(bad)
clc
jecxz
pushf
dec
movs
adc
add
ins
sbb
imul
mov
test
jae
xor
jg
mov
mov
mov
mov
sar
jecxz
adc
sbb
push
stos
xor
iret
xor
sub
inc
and
mov
(bad)
call
xchg
dec
stos
mov
call
loopne
(bad)
push
add
(bad)
(bad)
(bad)
mov
inc
in
fcomp
and
clc
ret
mov
bound
pop
push
push
xchg
nop
mov
jmp
or
or
call
ins
mov
(bad)
test
mov
ret
pop
sar
lock
xor
(bad)
jg
sti
and
add
inc
jo
sub
sar
push
mov
adc
(bad)
(bad)
jmp
hlt
or
and
loope
inc
(bad)
and
test
rcl
adc
push
in
pushf
cli
push
lods
pushf
cmp
imul
sub
test
or
call
jno
and
(bad)
or
ins
adc
stc
xchg
sahf
sar
test
std
dec
(bad)
aaa
stos
jl
in
mov
and
push
dec
cdq
inc
fnsave
(bad)
jmp
test
retf
add
mov
push
mov
adc
pop
push
xchg
rcr
mov
cmps
push
(bad)
(bad)
(bad)
(bad)
call
(bad)
fs
sbb
test
aas
mov
inc
ds
popf
lods
cmp
mov
jp
call
xchg
adc
add
inc
pop
mov
rcl
inc
into
dec
mov
add
push
push
and
or
shl
mov
mov
mov
add
gs
pop
sahf
pusha
adc
iret
inc
push
hlt
movs
mov
xor
in
movs
cmp
(bad)
jmp
stc
mov
arpl
and
adc
and
loope
ja
ins
adc
or
call
imul
stc
adc
es
cwde
jb
dec
push
and
push
test
jmp
xor
daa
inc
in
retf
add
mov
inc
mov
pop
test
dec
movs
xchg
call
dec
int
add
sbb
mov
enter
(bad)
(bad)
(bad)
call
add
or
ja
fcom
pop
xlat
push
or
fstp
jp
push
inc
shl
arpl
loopne
xchg
inc
sbb
dec
dec
mov
dec
fs
mov
mov
fdiv
aam
movs
pop
arpl
sub
jecxz
sar
xlat
popf
pushf
add
cmp
daa
(bad)
or
shl
sub
(bad)
(bad)
(bad)
jg
add
pop
stos
or
dec
add
aad
ds
push
and
outs
ror
not
(bad)
(bad)
inc
mov
repnz
fist
inc
movs
push
or
int
pusha
mov
gs
jnp
or
ss
(bad)
(bad)
(bad)
js
jb
xor
inc
mov
mov
enter
(bad)
sub
lds
mov
jg
cmc
loope
pop
fstp
dec
add
dec
add
cld
in
(bad)
(bad)
(bad)
dec
xchg
mov
pop
ds
(bad)
sub
xor
into
adc
retf
cld
dec
dec
call
cwde
xor
pop
cmp
loope
(bad)
dec
adc
push
in
stos
addr16
push
inc
aad
mov
xchg
or
jg
call
and
push
add
rcl
call
(bad)
mov
push
and
scas
pop
aaa
out
mov
test
(bad)
dec
test
mov
jg
mov
in
loope
inc
jo
(bad)
sar
sar
aas
movs
sub
pop
push
jmp
fldenv
dec
cld
adc
pushf
retf
push
sbb
jg
pop
cmc
loope
bnd
stos
sbb
mov
lahf
mov
cmp
(bad)
jmp
loope
pop
lods
xor
in
xor
out
hlt
sub
test
mov
(bad)
(bad)
push
pushf
gs
sbb
(bad)
dec
jp
cmp
xchg
out
mov
leave
sub
retf
ds
outs
add
je
rcr
cmps
fistp
imul
push
(bad)
(bad)
(bad)
mov
adc
jl
rcl
(bad)
out
js
adc
jne
mov
jne
mov
cmp
mov
jge
jp
pop
(bad)
mov
adc
xchg
inc
ret
inc
cmp
jb
and
dec
movs
cmp
mov
cmp
sbb
xchg
inc
je
cli
fidivr
popf
cmp
or
(bad)
and
(bad)
push
test
push
cli
addr16
dec
push
xor
cli
int
jecxz
popa
popf
jmp
sar
ficom
and
ins
dec
dec
ss
sub
(bad)
(bad)
call
inc
adc
dec
xlat
scas
lods
ins
(bad)
fcmovb
les
adc
scas
cmp
cli
(bad)
jmp
bound
mov
cmps
jne
ins
bound
cwde
mov
fidivr
(bad)
jmp
cmp
xlat
jmp
fucom
bound
mov
mov
xchg
rcr
ja
or
dec
(bad)
(bad)
(bad)
(bad)
cmp
mov
sbb
inc
test
clc
lahf
ins
movsx
sub
lahf
das
sar
cmp
inc
sub
aas
mov
in
add
or
dec
pushf
inc
adc
(bad)
(bad)
in
inc
cmps
xchg
sbb
sub
add
out
sub
sbb
and
(bad)
push
pop
std
sbb
sbb
adc
popw
mov
pop
mov
(bad)
(bad)
(bad)
dec
lods
mov
paddusw
(bad)
loop
test
and
pop
pop
push
xor
in
jp
(bad)
(bad)
(bad)
dec
fcomp
adc
push
enter
mov
fcom
jb
clc
popa
mov
mov
pop
jl
imul
push
sub
loopne
sbb
lea
adc
pop
lds
fist
cmp
(bad)
jg
(bad)
jbe
imul
repnz
push
xor
(bad)
mov
inc
pushf
add
xchg
pop
into
jo
sub
pushf
dec
mov
adc
cmps
mov
jecxz
fstp
ror
shl
mov
cld
cmp
push
repz
ror
test
ins
loopne
rsqrtps
fmulp
add
cwde
out
test
ret
mov
pop
pop
push
in
ins
in
pop
mov
fcomip
mov
icebp
outs
les
push
mov
jl
mov
mov
in
jne
and
fadd
xor
mov
jns
or
sub
ret
inc
push
(bad)
and
jne
shl
nop
add
xor
jo
push
adc
jns
std
(bad)
jmp
fistp
movs
and
call
ficomp
(bad)
mov
icebp
sub
push
shl
sub
cmp
icebp
(bad)
(bad)
mov
push
cld
rcl
mov
xor
inc
and
xchg
push
inc
xor
jl
(bad)
in
mov
push
jmp
add
iret
cdq
mov
and
loopne
ret
push
test
push
mov
pop
call
mov
dec
mov
and
cvttps2pi
(bad)
call
ret
inc
xrelease
mov
nop
adc
rcl
(bad)
(bad)
dec
mov
add
aam
outs
fisttp
mov
popf
mov
call
jl
clc
pop
nop
jo
cmp
cmp
mov
pushf
cmp
fwait
(bad)
(bad)
jmp
iret
retf
push
sbb
loopne
jge
ins
out
jmp
ret
(bad)
(bad)
(bad)
(bad)
fistp
or
jbe
(bad)
repnz
cmp
xchg
xor
xchg
pop
and
nop
inc
fxch
mov
je
jle
jae
push
lahf
adc
xor
cli
(bad)
jmp
add
inc
into
or
push
stos
dec
or
push
inc
push
int
fild
(bad)
(bad)
(bad)
jmp
mov
lock
inc
sub
stos
pop
pop
jg
ins
pusha
retf
push
int3
into
inc
and
(bad)
(bad)
(bad)
jmp
pusha
test
dec
mov
or
jne
jge
jp
mov
retf
add
xchg
and
pusha
cli
shr
popf
lds
(bad)
call
add
dec
pop
or
add
jnp
sbb
mov
in
retf
(bad)
fistp
clc
push
and
loope
in
ss
xor
int3
jp
xchg
push
and
(bad)
(bad)
(bad)
jmp
push
sbb
cmc
push
inc
test
mov
test
push
mov
mov
mov
outs
cs
mov
js
mov
(bad)
movs
pop
stc
mov
pop
adc
push
jg
(bad)
push
cli
mov
scas
dec
sub
popf
jl
cmp
dec
(bad)
(bad)
(bad)
(bad)
inc
fild
mov
sub
push
cs
push
sbb
fwait
inc
in
aaa
sub
pop
retf
jmp
(bad)
cld
arpl
add
cvtps2pi
sub
mov
add
or
test
sub
pop
jmp
fild
fcmove
ret
hlt
mov
jb
pop
fisubr
nop
mov
cld
call
inc
and
cmp
jl
fwait
dec
pop
jmp
ret
(bad)
inc
dec
push
(bad)
aam
shl
out
push
test
imul
inc
xor
inc
movs
sbb
pop
fxch
movs
rcl
sub
(bad)
jmp
mov
pusha
ss
cld
(bad)
(bad)
jmp
outs
dec
add
icebp
mov
push
sbb
dec
dec
xor
add
xor
(bad)
fmul
xchg
or
imul
mov
scas
dec
es
sahf
call
sbb
rcl
dec
jp
mov
jbe
jmp
and
dec
xlat
jg
test
jmp
call
mov
and
xchg
jmp
sbb
push
cli
(bad)
fisub
and
in
jb
jns
mov
jecxz
(bad)
(bad)
(bad)
(bad)
out
sar
in
xchg
sub
jmp
xor
mov
xchg
call
(bad)
(bad)
inc
shr
popf
push
add
ret
adc
pop
jmp
mov
imul
sub
sbb
fldcw
xlat
jp
cmp
mov
jg
jbe
(bad)
fcomip
mov
push
cdq
push
(bad)
out
push
loope
fcomp
(bad)
ftst
xchg
test
jmp
mov
push
aam
inc
fs
out
gs
mov
fcom
push
fdivr
add
(bad)
(bad)
cmp
mov
pop
mov
repnz
je
and
xchg
push
pop
retf
sub
adc
(bad)
(bad)
(bad)
call
dec
gs
sub
out
xchg
lahf
push
and
sar
cmp
sbb
pop
fwait
(bad)
(bad)
(bad)
(bad)
cmp
dec
sbb
popa
adc
or
imul
jl
dec
stos
mov
aad
push
icebp
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
cmps
mov
popf
enter
push
aam
sbb
mov
dec
dec
dec
mov
jg
pop
cld
sbb
jmp
jmp
push
mov
hlt
ror
(bad)
(bad)
(bad)
inc
aam
scas
xchg
mov
push
push
fsub
mov
mov
loope
cmps
xor
(bad)
(bad)
inc
int
ret
mov
(bad)
jmp
cli
aaa
mov
add
ret
out
idiv
ins
mov
jmp
cmp
and
jl
inc
jle
iret
arpl
les
jae
clc
out
(bad)
(bad)
(bad)
(bad)
lds
pop
fld
mov
add
js
out
movs
dec
sub
fwait
pop
sub
inc
push
push
xor
cmc
pop
into
xor
lds
push
aas
call
(bad)
call
xor
inc
push
add
fwait
outs
lods
fild
ins
pop
jnp
test
or
scas
clc
jg
lahf
in
mov
inc
popf
fcom
cmp
dec
jmp
xor
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jbe
je
or
je
and
out
mov
mov
inc
ss
out
sar
ja
xor
mov
cmc
adc
xlat
lock
in
(bad)
dec
mov
cmps
in
jp
cmps
xchg
and
adc
aam
dec
sbb
pop
loope
inc
scas
mov
ja
ins
call
or
sti
aaa
rcl
fistp
xor
(bad)
(bad)
cmp
sbb
inc
int
or
push
scas
mov
fucom
outs
cli
jg
shl
push
addr16
lds
push
mul
cmps
dec
(bad)
(bad)
jmp
jb
dec
in
jmp
in
int3
push
stc
clc
jns
sbb
mov
mov
sti
jp
(bad)
(bad)
dec
js
mov
inc
pop
ficomp
sbb
cmc
add
push
stos
fisttp
inc
dec
sub
mov
pop
cld
add
push
out
mov
ins
xor
fld
int
sub
push
mov
sbb
(bad)
dec
jae
iret
push
out
into
sub
jge
out
and
js
or
cli
jp
sti
pop
jnp
aas
fst
out
aam
xor
aaa
jne
(bad)
call
sbb
fist
add
es
(bad)
mov
fcmovb
xchg
jl
dec
adc
inc
inc
add
cmc
jmp
mov
std
ficom
pusha
sbb
and
(bad)
(bad)
jg
popf
mov
aaa
mov
jmp
xchg
mov
dec
dec
push
repnz
into
fcomip
cmp
call
jle
dec
in
or
fs
cmp
lods
movs
push
(bad)
aaa
fdivr
enter
cli
loopne
loopne
out
(bad)
call
or
jo
pop
mov
cwde
dec
push
test
cmps
aas
jnp
mov
xchg
or
xor
clc
(bad)
push
inc
mov
adc
mov
fst
jmp
(bad)
call
pop
in
dec
scas
or
cmp
mov
jmp
mov
(bad)
(bad)
(bad)
push
movs
xchg
add
sub
mov
mov
shl
aam
test
(bad)
jmp
or
inc
cs
inc
push
mov
mov
(bad)
(bad)
jg
lock
dec
stos
mov
dec
ss
aam
jbe
(bad)
push
dec
imul
inc
pop
shr
mov
test
(bad)
dec
inc
dec
sub
jns
pop
add
push
pop
jecxz
imul
in
(bad)
(bad)
mov
stos
pop
jno
sahf
jns
add
sub
fsubr
xchg
inc
(bad)
(bad)
(bad)
jmp
dec
mov
or
fidiv
or
sub
test
adc
sbb
mov
and
sub
call
and
mov
mov
xchg
js
adc
stos
(bad)
call
pusha
outs
sub
aas
fwait
cdq
out
lea
fs
sub
test
inc
cmps
(bad)
out
xchg
lock
inc
nop
(bad)
movs
adc
adc
hlt
inc
(bad)
(bad)
jmp
loope
inc
fidiv
adc
lods
pop
test
or
mov
(bad)
(bad)
dec
lods
push
sbb
dec
jbe
ins
mov
imul
and
cmc
ret
xchg
ret
add
(bad)
(bad)
call
dec
mov
sbb
les
outs
je
xor
pop
mov
push
scas
adc
cli
les
cmc
jb
iret
or
(bad)
sub
leave
jle
cwde
jge
arpl
push
call
sbb
test
and
mov
lea
cld
(bad)
(bad)
call
inc
retf
mov
fld
mov
jle
sbb
aad
lods
inc
or
and
jmp
push
test
or
(bad)
and
jle
les
(bad)
(bad)
out
nop
pop
inc
adc
iret
cmps
xchg
adc
cmc
xchg
sub
push
das
(bad)
test
sbb
stos
fistp
jb
stos
adc
inc
cdq
(bad)
fist
push
pop
lods
inc
xchg
sub
sub
(bad)
sbb
nop
add
cmp
(bad)
(bad)
(bad)
call
mov
movs
adc
test
sub
rcl
or
xchg
fld
xor
(bad)
movs
sbb
(bad)
(bad)
inc
repz
sub
mov
sub
jmp
sub
xor
lock
xor
shr
jb
enter
not
mov
test
(bad)
or
jnp
retf
(bad)
(bad)
(bad)
cmp
sub
xchg
adc
inc
ds
add
call
sbb
mov
lock
ret
out
sub
test
adc
mov
and
aad
ret
jp
jae
and
pop
sbb
sub
lock
jmp
into
xor
aad
sbb
lock
lods
cmps
push
inc
push
std
mov
mov
push
and
test
stos
sub
into
repz
lock
mov
mov
dec
cmp
mov
call
scas
pop
or
dec
or
and
in
fsubr
pop
gs
(bad)
call
imul
std
push
dec
lea
sbb
mov
not
fwait
jbe
mov
lock
leave
and
dec
scas
cmps
in
lahf
cmp
(bad)
jg
movs
test
mov
xor
arpl
lods
sub
lods
imul
shl
fs
xor
(bad)
(bad)
out
clc
mwaitx
inc
movs
nop
push
mov
inc
sub
or
(bad)
(bad)
(bad)
push
ret
or
icebp
cmp
sub
push
add
xor
xchg
jmp
jmp
lods
ret
scas
mov
ret
cmp
je
mov
sahf
call
adc
inc
mov
cmp
sub
adc
sbb
sub
(bad)
call
js
xchg
popf
sar
inc
pop
pop
add
or
out
mov
sbb
xor
dec
mov
fld
xchg
std
inc
inc
sti
hlt
(bad)
(bad)
call
rcr
arpl
mov
cmps
add
loop
mov
fdiv
nop
mov
rcl
test
std
mul
mov
out
cli
lods
test
cmp
(bad)
xor
test
or
cmp
xchg
and
aad
jmp
push
dec
std
test
das
jne
xor
and
enter
out
(bad)
std
xchg
mov
xor
in
sahf
push
(bad)
mov
movs
fnstsw
jge
jne
ds
sub
aaa
std
(bad)
jmp
push
pop
in
adc
add
xchg
mov
(bad)
(bad)
jmp
test
in
cld
sub
xor
stc
inc
and
nop
inc
adc
inc
inc
(bad)
(bad)
jmp
sets
int
movs
ja
push
mov
call
jge
jo
daa
stos
push
dec
mov
ror
and
cmp
loope
add
adc
sbb
sub
xor
das
mov
imul
mov
jg
outs
mov
xlat
and
push
mov
sub
cmp
jg
jmp
sahf
mov
scas
gs
cld
push
dec
cmc
fistp
mov
ja
jg
cmp
sbb
jp
ror
ss
ficom
mov
(bad)
(bad)
(bad)
push
jmp
adc
mov
xor
jnp
mov
pusha
jmp
mov
call
mov
idiv
and
cli
adc
dec
into
shl
scas
ins
mov
dec
lock
(bad)
shl
call
aad
xchg
(bad)
(bad)
call
jg
aas
or
cmovae
or
cs
(bad)
(bad)
out
xchg
out
cli
sub
sbb
es
div
or
xchg
dec
loop
dec
add
hlt
push
daa
sti
xchg
cmps
mov
adc
jnp
(bad)
mov
push
inc
int3
fbld
xchg
mov
jp
sbb
sar
(bad)
fcomip
in
mov
sbb
cmps
push
lock
mov
imul
and
add
icebp
(bad)
inc
mov
add
loop
pop
idiv
shr
out
icebp
sar
(bad)
(bad)
(bad)
fisubr
add
xor
sti
push
fstp
or
cmps
xchg
fisttp
sub
xor
and
shl
das
(bad)
call
mov
cmps
pop
loopne
push
loop
hlt
(bad)
(bad)
(bad)
mov
es
les
jmp
dec
jmp
or
mov
jmp
mov
pop
(bad)
(bad)
(bad)
jp
cmp
int3
dec
test
cmp
and
cmps
fld
push
lds
das
fcom
jmp
call
dec
cmp
pop
lahf
ds
cli
and
(bad)
call
rcl
adc
jmp
in
cmp
loope
xchg
mov
mov
jmp
imul
fwait
push
sbb
xchg
ss
jp
adc
(bad)
(bad)
call
imul
mov
pop
jmp
sbb
adc
jecxz
and
imul
cmps
popf
loope
inc
outs
aam
sub
add
(bad)
(bad)
jg
loopne
shl
sub
jge
aam
xor
rcr
or
les
sbb
mov
jmp
pop
jo
stos
jecxz
mov
test
sbb
or
push
das
outs
push
repz
aas
and
std
aaa
cld
jmp
ins
fs
repnz
cmp
xchg
sub
(bad)
push
rcl
cmp
movs
xor
jns
mov
dec
stos
jge
repnz
or
jp
(bad)
(bad)
out
jb
cs
mov
inc
in
rcl
stos
xor
or
nop
jg
add
hlt
push
add
mov
(bad)
jg
dec
adc
xor
dec
ret
mov
into
pushf
loop
(bad)
jb
inc
adc
jmp
cmp
sub
push
push
mov
mov
(bad)
(bad)
(bad)
call
mov
and
int
mov
sub
jae
mov
dec
inc
pop
cmp
mov
inc
std
sbb
sub
(bad)
popa
cmc
xchg
or
adc
(bad)
(bad)
push
mov
iret
pop
out
jecxz
pop
(bad)
jl
xlat
or
pushf
fidivr
les
addr16
push
inc
cmp
(bad)
(bad)
(bad)
jmp
addr16
imul
aam
or
(bad)
mov
adc
push
js
add
retf
xchg
in
fwait
(bad)
(bad)
dec
xchg
cmp
or
fbstp
and
and
xchg
sbb
sbb
fcomip
fstp
je
sub
lea
fadd
xchg
push
mov
mov
inc
adc
pop
aad
or
sub
loopne
fistp
ret
push
cld
arpl
cmp
lods
pop
and
push
dec
adc
(bad)
movs
(bad)
fnsave
(bad)
nop
int3
into
add
stos
jo
xchg
and
loop
(bad)
(bad)
call
in
jl
pop
fstp
cdq
jns
or
mov
addr16
xor
cmc
dec
jbe
adc
dec
ja
fucom
mov
adc
div
aaa
mov
push
cli
shr
jne
xchg
sub
call
sahf
call
iret
out
xchg
adc
icebp
test
(bad)
(bad)
(bad)
jmp
or
jmp
jp
and
jmp
fisttp
(bad)
call
fmul
(bad)
test
adc
(bad)
pop
in
adc
retf
shl
pop
popf
jge
cld
(bad)
inc
and
int
repnz
sub
inc
mov
test
jmp
mov
push
aam
inc
fs
in
mov
out
ds
xchg
xor
pop
mov
cmp
(bad)
(bad)
jnp
ins
push
in
and
sub
jae
push
pop
repz
pop
and
xchg
sub
push
je
(bad)
(bad)
(bad)
call
mov
repz
pop
cs
leave
fsubr
or
pop
(bad)
(bad)
(bad)
dec
aam
xchg
call
in
or
or
push
mov
xor
cmp
xchg
fadd
sbb
hlt
mov
inc
ror
pusha
mov
sbb
lods
cmps
xor
in
dec
cmp
sti
jne
sbb
mov
(bad)
(bad)
inc
jecxz
(bad)
xor
mov
cmps
mov
dec
pop
stos
fild
push
cmp
gs
mov
cld
(bad)
call
js
and
in
stos
dec
std
mov
outs
jp
ins
mov
fild
xlat
or
cs
add
rcr
(bad)
jmp
leave
cs
inc
xor
je
cmp
neg
popa
mov
or
pop
call
(bad)
cmp
push
sbb
add
xchg
pop
test
outs
scas
cmps
leave
movs
or
(bad)
outs
inc
mov
jae
sti
ins
jmp
lock
sub
push
enter
dec
jecxz
jp
or
call
enter
fisttp
(bad)
shl
mov
pop
pushf
outs
jge
not
adc
xchg
add
mov
mov
push
cmps
xor
mov
ins
mov
jecxz
dec
sbb
out
push
(bad)
sti
out
cmp
sbb
and
mov
imul
cmp
clc
(bad)
inc
idiv
outs
imul
push
pop
(bad)
pop
fadd
mov
(bad)
mov
inc
int3
sub
add
pop
dec
mov
das
mov
loopne
je
dec
out
cmp
push
(bad)
cld
lods
fiadd
xor
ins
jge
xchg
js
add
scas
rcr
jge
int
mov
add
or
xchg
scas
sub
xor
push
movzx
cmc
daa
fwait
mov
mov
outs
pusha
sahf
movs
shl
jmp
push
adc
adc
(bad)
(bad)
jg
rcr
lods
xchg
xlat
xor
xchg
sub
sbb
test
(bad)
(bad)
fbld
lahf
add
dec
pusha
aas
aaa
icebp
cmp
imul
or
loopne
(bad)
(bad)
(bad)
inc
xchg
dec
ror
sbb
mov
pushf
dec
xor
dec
enter
or
jnp
cmp
clc
(bad)
(bad)
mov
call
pop
test
xor
ret
shl
xchg
xor
scas
cmp
cmp
(bad)
cmp
(bad)
inc
cli
sub
push
movs
jl
push
call
jns
add
dec
call
xchg
lock
fiadd
mov
loop
(bad)
(bad)
(bad)
push
cmp
sub
xchg
mov
(bad)
retf
inc
push
jecxz
out
pusha
push
mov
test
aam
call
or
frstor
mov
mov
push
ss
(bad)
(bad)
(bad)
call
xor
hlt
dec
call
arpl
mov
add
cmc
call
inc
ins
cld
loopne
scas
jmp
jns
lock
push
sbb
or
mov
pop
mov
push
data16
mov
adc
aaa
movs
or
cmps
ins
add
sti
(bad)
(bad)
fild
add
ficomp
in
inc
add
aad
fdivr
ins
mov
test
(bad)
mov
cmp
jle
sub
fisubr
imul
aam
cmp
ds
dec
std
call
inc
mov
test
cmps
idiv
fadd
jmp
(bad)
jmp
dec
loopne
ss
(bad)
les
jae
pop
pusha
xor
sbb
aad
cli
jg
(bad)
call
fadd
push
ins
mov
push
and
dec
hlt
std
push
and
(bad)
(bad)
mov
bound
cli
aaa
add
dec
fwait
jle
push
idiv
(bad)
(bad)
call
mov
cs
fdiv
mov
sahf
std
lods
inc
sbb
(bad)
sti
test
mov
(bad)
jmp
add
mov
dec
mov
aaa
das
bound
push
int3
jne
mov
je
cmp
ret
cmp
(bad)
jnp
call
repz
push
rol
loop
sar
scas
inc
sar
push
loope
mov
(bad)
(bad)
(bad)
sti
mov
sbb
das
sahf
push
je
test
mov
(bad)
pop
int3
push
inc
clc
inc
stos
out
outs
aam
push
in
into
add
mov
fcomip
add
mov
cs
clc
ret
test
cmps
scas
mov
(bad)
jmp
in
mov
fcomi
inc
dec
stos
hlt
cdq
int
shr
sahf
push
ins
(bad)
(bad)
call
fist
das
les
pop
stc
aad
mov
(bad)
xchg
out
xchg
sbb
lock
(bad)
(bad)
call
test
push
out
ret
les
(bad)
mov
jecxz
push
xlat
call
cmp
(bad)
sub
hlt
ret
repnz
sbb
adc
sub
mov
(bad)
call
add
sbb
add
pusha
nop
loop
inc
(bad)
(bad)
(bad)
(bad)
mov
add
mov
and
pop
mov
and
push
sbb
(bad)
(bad)
(bad)
mov
movs
cmps
pop
sbb
sti
cmp
stos
cmp
xlat
xchg
jecxz
dec
inc
xor
pop
dec
or
(bad)
jg
jns
test
xchg
sub
dec
push
aam
dec
imul
iret
(bad)
add
jg
jge
jle
imul
lock
ret
into
test
sub
add
(bad)
(bad)
inc
out
pop
(bad)
lods
inc
cmp
sub
cmp
add
dec
retf
jmp
pop
push
jae
sub
adc
cmp
addr16
adc
(bad)
call
mov
cmp
xchg
aas
mov
das
fisttp
imul
mov
cmp
js
or
(bad)
inc
xchg
das
cwde
out
in
jae
push
popa
cmps
push
les
dec
lahf
(bad)
(bad)
(bad)
jmp
mov
sbb
fimul
or
or
pop
test
dec
or
adc
xchg
(bad)
jmp
push
cs
jp
push
cdq
jne
and
(bad)
push
pop
push
or
rol
jmp
pop
xchg
enter
and
std
sahf
pop
or
pushf
nop
adc
inc
mov
(bad)
(bad)
inc
les
in
jne
adc
mov
daa
cmp
in
xchg
and
les
inc
(bad)
(bad)
(bad)
call
cmp
sub
adc
inc
xor
sub
mov
cwde
add
cmps
mov
loopne
(bad)
fld
test
pop
add
xchg
cmp
jecxz
fld
mov
and
(bad)
fcomip
call
daa
inc
cli
xor
pusha
jl
mov
adc
mov
push
(bad)
(bad)
(bad)
call
les
aam
jb
push
xchg
or
stos
cmp
dec
mov
inc
sub
(bad)
(bad)
inc
cmp
pop
cmp
test
arpl
xchg
retf
iret
out
(bad)
(bad)
(bad)
call
xchg
mov
mov
add
cmp
dec
hlt
push
scas
jmp
sar
(bad)
mov
xchg
arpl
mov
dec
inc
jmp
(bad)
xor
test
jmp
inc
push
fisubr
adc
nop
dec
push
ror
cwde
add
push
or
pop
or
or
sbb
push
cld
add
dec
fsubr
push
or
adc
sti
test
jmp
clc
call
fs
inc
cmp
mov
cmps
ja
push
(bad)
imul
pushw
lods
sbb
cs
mov
(bad)
jmp
ds
jmp
mov
sub
xor
addr16
jb
(bad)
(bad)
inc
add
ins
pop
aad
dec
mov
retf
lds
jmp
pop
pop
(bad)
(bad)
(bad)
inc
mov
mov
cmp
lea
inc
adc
and
xor
(bad)
xlat
pop
and
sub
xchg
mov
aad
push
mov
test
lds
leave
ret
push
sub
loopne
add
and
sub
pop
(bad)
(bad)
(bad)
dec
sbb
dec
popf
ret
fwait
xor
dec
jo
js
cmp
sub
jo
js
pop
mov
(bad)
inc
cli
xor
shl
adc
push
mov
mov
or
dec
idiv
inc
adc
adc
(bad)
xor
push
mov
retf
mov
adc
add
rcl
add
jl
in
inc
mov
mov
repnz
outs
(bad)
jmp
jb
xchg
test
bound
xchg
sahf
fsubrp
ret
jge
mov
cmc
test
cli
into
push
cli
jmp
shl
scas
addr16
test
jmp
daa
sbb
je
inc
hlt
scas
pop
pop
loopne
scas
ficom
adc
or
out
sahf
ror
sub
(bad)
mov
hlt
pushf
jp
(bad)
aad
dec
jnp
stc
adc
xchg
push
push
sar
(bad)
jmp
mov
mov
mov
rcl
mov
jl
cmc
xchg
rcr
cld
push
dec
mov
push
xchg
sbb
fisttp
add
test
jl
cmp
dec
adc
push
popa
data16
xchg
pop
arpl
(bad)
(bad)
call
and
mov
and
and
les
es
mov
popf
lahf
sar
(bad)
jg
inc
inc
push
mov
add
inc
or
fwait
cwde
sbb
shl
dec
push
shr
mov
(bad)
(bad)
(bad)
(bad)
cmp
ret
jb
xor
ror
xlat
push
adc
mov
retf
adc
sub
cmp
adc
nop
mov
das
inc
xchg
jmp
add
xchg
dec
shr
jmp
(bad)
(bad)
(bad)
push
adc
jbe
enter
and
movs
ja
movs
dec
sub
nop
sub
test
(bad)
(bad)
(bad)
push
xor
jmp
mov
xchg
popa
stos
call
jo
cmp
sbb
(bad)
(bad)
call
fs
push
pop
fist
retf
pop
call
stc
cmps
push
pusha
call
(bad)
jmp
bound
stc
fidivr
in
in
retf
inc
lock
mov
lods
cli
jmp
pop
xor
and
jg
push
xor
mov
pop
(bad)
jmp
cli
rep
imul
cmps
or
cld
mov
cmp
nop
or
dec
adc
jmp
xor
int
inc
aad
add
add
cdq
mov
(bad)
(bad)
scas
mov
cld
(bad)
cmp
adc
ins
push
xchg
pop
lock
mov
adc
pusha
jmp
jmp
scas
call
pop
test
mov
int
fs
fst
mov
push
fdivr
(bad)
(bad)
jmp
test
and
mov
mov
jb
movs
ss
lods
test
sbb
fwait
mov
mov
in
je
push
pusha
xchg
push
mov
test
ja
mov
mov
inc
shr
dec
fistp
xor
mov
add
in
fwait
(bad)
call
jbe
cmp
ficomp
mov
or
ds
(bad)
(bad)
(bad)
(bad)
jle
(bad)
jmp
inc
or
ins
mov
mov
push
adc
sti
(bad)
int
(bad)
(bad)
(bad)
(bad)
(bad)
stos
inc
dec
bound
jo
cmp
sub
ficom
and
hlt
das
push
sub
(bad)
call
sub
pop
leave
sbb
je
push
fistp
jae
ss
mov
ja
mov
dec
imul
add
fistp
inc
mov
cmp
cli
js
ret
inc
outs
js
call
shl
mov
or
imul
jmp
nop
imul
test
emms
mov
les
sub
cdq
hlt
rcr
out
sub
and
(bad)
(bad)
(bad)
jmp
movs
mov
cmp
jle
imul
pop
das
ja
adc
xchg
xchg
imul
push
jge
push
dec
push
xchg
mov
dec
js
push
fbld
jg
push
rcl
jnp
and
push
push
xchg
out
jle
(bad)
(bad)
inc
ja
push
jnp
inc
jne
fidivr
div
fdiv
dec
fistp
mov
mov
(bad)
mov
aad
and
cmp
int
push
dec
cmps
mov
out
(bad)
fst
pushf
dec
sub
xchg
sti
aas
inc
mov
(bad)
ds
add
pop
add
inc
inc
outs
push
xor
test
sub
jno
call
cmps
fcmovnu
int
mov
lea
jecxz
loope
test
jmp
add
mov
cmps
data16
pop
mov
or
nop
iret
dec
cmp
(bad)
push
push
jmp
imul
out
das
add
pop
adc
push
jecxz
pop
mov
fdiv
cli
loope
xor
sub
jmp
outs
inc
cmc
popf
push
fsub
(bad)
xor
ret
xlat
sub
cmp
dec
push
test
lea
and
stos
(bad)
(bad)
cmp
dec
repnz
push
pop
inc
pop
stos
cmps
push
dec
jmp
mov
test
push
(bad)
(bad)
(bad)
inc
xchg
sub
fcom
xchg
cmp
mov
or
jecxz
(bad)
mov
jp
adc
pop
popa
cmp
add
popa
inc
dec
sub
jp
lea
(bad)
cwde
mov
dec
sub
shr
nop
cmp
xor
dec
stos
movd
(bad)
(bad)
dec
mov
mov
retf
mov
mov
or
(bad)
and
cmp
mov
shr
stos
xchg
movs
xchg
int
out
jl
mov
das
test
jmp
ins
sbb
repz
(bad)
(bad)
(bad)
mov
xchg
sub
add
sub
mov
int
push
hlt
push
mov
(bad)
(bad)
(bad)
(bad)
jnp
test
arpl
dec
ret
mov
ds
ins
imul
mov
popf
or
(bad)
(bad)
jmp
lods
nop
jmp
cmps
sub
fmulp
stos
inc
pop
js
mov
loopne
jmp
xor
add
call
ins
nop
test
cmps
sbb
(bad)
(bad)
inc
or
inc
pusha
push
pusha
xor
repnz
push
dec
mov
aam
cmps
in
jecxz
pop
popa
int3
(bad)
(bad)
(bad)
dec
mov
test
xchg
xchg
and
aam
(bad)
shl
mov
js
in
call
jb
popf
cmp
jno
sbb
mov
int
push
cmp
sub
popa
(bad)
arpl
xlat
or
clc
inc
jge
nop
pop
lods
ror
data16
ret
(bad)
(bad)
inc
jp
or
xor
push
sub
call
fdivr
out
in
(bad)
(bad)
push
je
sbb
int
xchg
retf
push
add
inc
cmp
adc
pop
mov
retf
inc
jne
data16
mov
cwde
cmps
xchg
loopne
(bad)
dec
push
add
outs
add
jns
push
dec
sub
dec
xchg
lods
mov
fs
bound
jmp
or
add
jl
movs
outs
movs
fs
aaa
cld
(bad)
inc
out
inc
push
pop
sub
lds
push
mov
mov
leave
ss
lods
loope
(bad)
call
adc
mov
mov
pop
rcr
push
xchg
test
dec
jb
(bad)
(bad)
mov
ins
pop
(bad)
xchg
aam
aaa
adc
iret
or
jne
sar
xchg
icebp
(bad)
(bad)
call
sub
jl
ret
push
sub
and
inc
xchg
or
je
ins
dec
mov
(bad)
repz
(bad)
mov
jge
out
lods
pusha
imul
cwde
popa
dec
sub
int3
in
out
pusha
xor
test
xchg
or
(bad)
(bad)
(bad)
call
lds
frstor
inc
jecxz
(bad)
aam
cmps
cdq
xor
cmp
jb
repz
cmps
ror
add
pop
loopne
add
mov
test
test
and
(bad)
(bad)
out
(bad)
mov
mov
jne
loop
dec
dec
mov
sti
fsubr
loopne
mov
into
mov
lods
jns
mov
scas
aam
mov
outs
pop
(bad)
(bad)
(bad)
push
ret
mov
lahf
mov
xchg
into
iret
xchg
and
in
cli
ds
stc
sahf
loopne
out
out
xchg
test
(bad)
(bad)
jg
cli
leave
fdivr
retf
push
cld
mov
test
pop
movs
xlat
ret
lods
and
scas
(bad)
(bad)
dec
imul
(bad)
js
mov
(bad)
sub
lea
ror
mov
das
jnp
out
mov
scas
pop
lock
mov
cmp
outs
cmp
(bad)
(bad)
(bad)
dec
mov
repz
inc
mov
test
mov
popf
(bad)
mov
mov
(bad)
(bad)
(bad)
push
dec
lea
imul
cdq
jmp
xchg
dec
dec
idiv
in
mov
dec
cmp
ss
fidivr
imul
pop
mov
stos
daa
jmp
or
ins
adc
scas
push
gs
xchg
(bad)
std
push
xor
or
pusha
lods
dec
dec
pop
fsub
xchg
pop
es
mov
cmp
push
dec
loop
jg
mov
mov
cmp
xor
out
cwde
xchg
pop
movs
xor
jg
in
dec
fimul
test
and
movs
outs
dec
(bad)
ss
mov
mov
fiadd
int3
mov
mov
mov
(bad)
outs
push
jo
xor
jne
sub
sub
dec
mov
sub
std
emms
sar
fsub
stos
mov
push
jge
push
xchg
test
jmp
jbe
pop
repnz
repnz
or
(bad)
(bad)
out
stos
scas
sbb
fdiv
std
repz
test
(bad)
(bad)
push
scas
adc
cmp
setns
mov
(bad)
sti
aad
pushf
aas
add
pop
xor
(bad)
(bad)
(bad)
fstp
ret
imul
jmp
(bad)
mov
in
xchg
sub
mov
cmp
sub
(bad)
inc
jbe
fdiv
outs
mov
ret
addr16
or
sbb
jmp
outs
hlt
shr
jbe
jne
pop
(bad)
push
mov
or
movs
test
call
mov
mov
data16
mov
cmp
xchg
push
(bad)
xor
(bad)
(bad)
push
xchg
mov
mov
jnp
and
aaa
push
lock
fst
test
cmp
call
(bad)
(bad)
(bad)
dec
pop
scas
leave
ds
fwait
inc
mov
push
mov
inc
mov
into
push
jg
dec
xlat
mov
(bad)
(bad)
push
loope
arpl
mul
in
fdecstp
dec
push
lods
mov
mov
xchg
xor
imul
int3
and
hlt
xchg
ret
pop
dec
imul
cmps
cmp
lock
repnz
ja
ja
(bad)
(bad)
dec
popa
pop
mov
scas
mov
out
jns
test
push
loope
icebp
scas
sbb
add
pop
xchg
sbb
out
xchg
(bad)
(bad)
(bad)
inc
daa
xor
adc
psrld
xchg
ss
cmp
pop
sub
imul
das
dec
call
ins
dec
mov
shl
xor
xchg
mov
(bad)
bound
jmp
std
dec
xchg
pop
hlt
or
mov
fldlg2
push
sub
stos
shr
retf
(bad)
cmp
push
inc
popf
or
push
xor
xchg
push
scas
xor
sbb
(bad)
(bad)
call
jne
out
inc
adc
add
sbb
push
mov
cmp
or
call
lock
call
or
sub
mov
movs
(bad)
call
cmp
js
or
pop
jns
out
mov
nop
adc
lock
les
scas
add
pop
mov
jp
push
sub
nop
and
int3
inc
(bad)
sbb
adc
bound
adc
dec
ss
call
push
addr16
pop
or
movs
mov
cmps
int
mov
xor
fistp
add
inc
adc
sub
repnz
in
jge
mov
out
call
cdq
add
mov
mov
enter
in
scas
cli
(bad)
(bad)
fcom
xchg
repz
and
jmp
cwde
mov
cld
cmp
clc
(bad)
(bad)
dec
or
sbb
xor
adc
or
das
dec
mov
push
adc
bound
test
(bad)
fcomip
stos
mov
jae
int
dec
and
imul
sahf
frstor
sbb
(bad)
(bad)
push
test
cmp
stos
pop
cmp
or
mov
iret
popf
mov
(bad)
(bad)
jmp
(bad)
pusha
or
(bad)
imul
mov
xchg
xchg
sub
xlat
(bad)
(bad)
call
cmp
fstp
iret
fs
neg
sbb
icebp
pop
(bad)
std
stos
(bad)
jg
xchg
xchg
xor
mov
repnz
fnsave
leave
jno
lds
(bad)
push
xor
sub
jle
mov
dec
loope
cld
loope
inc
push
int3
inc
sub
dec
mov
cmps
popa
outs
mov
mov
mov
inc
test
push
add
xchg
pop
jmp
jmp
push
mov
test
fcomp
int
fisttp
mov
pop
mov
(bad)
jmp
lea
cdq
outs
mov
jne
(bad)
bound
dec
mov
ss
sahf
push
cmc
adc
(bad)
(bad)
jmp
or
cmp
ret
or
mov
xor
(bad)
dec
cld
mov
repnz
jno
mov
jmp
fcom
dec
ret
dec
cmp
(bad)
(bad)
(bad)
jmp
and
cmp
imul
neg
mov
mov
into
fiadd
jbe
cwde
mov
pop
xchg
ins
push
std
cmps
dec
fisub
in
sub
pop
push
mov
bound
in
popf
(bad)
(bad)
(bad)
inc
fisubr
mov
jbe
ficomp
and
mov
or
ss
sbb
fidiv
jne
mov
(bad)
jl
adc
sbb
push
cmp
cli
loop
jnp
sar
(bad)
fdivp
or
mov
mov
cmp
shr
fwait
lea
js
(bad)
(bad)
fcomip
inc
xor
adc
sub
das
sbb
or
xchg
sub
and
(bad)
(bad)
push
mov
ds
pcmpeqd
or
addr16
cmp
mov
jmp
mov
push
xchg
sub
push
sbb
lods
imul
pop
retf
pop
call
cmp
mov
xchg
sbb
push
xor
fdivr
(bad)
(bad)
push
xchg
mov
inc
pop
jl
cmp
pop
(bad)
data16
mov
mov
test
jg
inc
or
mov
sub
imul
or
retf
mov
(bad)
(bad)
(bad)
jg
sti
pop
leave
popf
adc
and
mov
push
xor
test
jbe
sbb
mov
ss
inc
das
shl
in
mov
ja
or
push
or
adc
inc
aam
jecxz
aad
addr16
mov
mov
mov
(bad)
dec
xchg
aaa
adc
inc
les
ds
sbb
cli
(bad)
(bad)
(bad)
push
jo
sub
fs
dec
mov
xchg
adc
xchg
jmp
xchg
clc
lock
pop
cld
(bad)
call
inc
ins
retf
pop
pop
int
and
xchg
pop
xchg
xchg
mov
ret
xchg
or
and
call
dec
les
cmp
fcmovb
mov
mov
test
pop
icebp
lods
or
sbb
cmp
jo
sbb
and
rol
das
sar
adc
mov
fcomp
and
add
xchg
xchg
nop
sbb
pop
push
dec
or
call
sub
sar
jbe
cwde
xchg
xchg
xchg
and
push
daa
mov
pop
mov
icebp
cmps
aad
adc
add
add
or
add
dec
sar
shl
pop
adc
out
es
sub
retf
pushf
inc
(bad)
(bad)
mov
mov
push
mov
mov
es
ins
cdq
add
lea
push
jo
mov
retf
xchg
xchg
and
inc
ins
leave
jmp
jle
jo
mov
es
dec
icebp
into
sbb
repnz
mov
dec
push
fcom
fwait
sub
(bad)
push
push
scas
ins
pop
jle
rcl
not
repz
fbld
adc
jns
test
aaa
pusha
out
cmps
out
outs
xor
mov
xchg
ins
fwait
ss
dec
sahf
stos
xor
(bad)
jmp
pop
cmp
and
adc
add
jb
push
cmp
fcomp
sub
sbb
and
shl
mov
sub
test
inc
shl
jg
loopne
(bad)
xchg
pusha
(bad)
jle
icebp
inc
in
pop
es
sbb
(bad)
(bad)
(bad)
(bad)
mov
out
push
shl
jmp
(bad)
ficomp
ret
gs
(bad)
gs
repnz
cmp
(bad)
cmp
(bad)
mov
ret
mov
out
jne
jle
ins
sbb
pop
cmps
loopne
(bad)
(bad)
call
xchg
cmp
mov
sbb
lds
outs
sub
cmovbe
(bad)
call
in
dec
xchg
mov
addr16
ins
mov
ins
sahf
aam
ins
jge
scas
add
div
push
mov
(bad)
(bad)
jmp
mov
mov
push
add
fnstsw
pop
jp
pop
sbb
lea
xchg
call
adc
out
leave
retf
mov
sbb
movs
arpl
call
test
out
repz
out
jle
xchg
mov
fs
fcomip
call
push
sar
lahf
push
cmp
push
movs
dec
sahf
adc
outs
clc
(bad)
jmp
mov
lea
loope
sub
icebp
mov
lea
imul
xchg
or
retf
test
ds
mov
cmp
inc
lds
mov
dec
lahf
sbb
popa
clc
das
clc
(bad)
push
(bad)
jle
ins
adc
bound
pop
adc
sub
mov
pushf
xchg
(bad)
(bad)
(bad)
call
dec
inc
mov
sbb
mov
xchg
sbb
mov
(bad)
fdivrp
jmp
add
push
dec
mov
sbb
int
sub
fldenv
cdq
lods
xchg
cmp
cdq
xor
push
cld
call
adc
mov
es
aad
aad
push
cmp
mov
fimul
call
(bad)
inc
fdecstp
in
addr16
jns
ss
xchg
imul
stc
xor
xchg
cdq
imul
mov
push
les
and
(bad)
hlt
xchg
frstor
cmp
icebp
shl
cmp
fwait
cmp
inc
add
xchg
scas
cs
xchg
ret
dec
aas
retf
cli
(bad)
jmp
loopne
aas
pushf
(bad)
jle
lea
mov
pop
out
out
(bad)
cwde
shl
loop
(bad)
(bad)
jmp
or
mov
xor
clc
push
jb
stc
xchg
imul
mov
idiv
mov
jg
xchg
adc
std
loop
adc
or
in
dec
popf
pop
jo
dec
loope
push
pop
(bad)
(bad)
(bad)
push
or
and
or
push
pop
mov
shl
in
loopne
xchg
cld
dec
daa
inc
sbb
call
dec
pop
push
jmp
xor
jle
int
fidiv
mov
jne
(bad)
xor
dec
mov
push
rol
retf
popa
mov
movs
sub
ja
shl
and
add
jg
retf
jmp
pop
sahf
out
aas
push
jmp
stc
cmp
fisttp
test
and
(bad)
call
xchg
jp
adc
cmp
pop
mov
pop
sbb
jecxz
mov
and
fdivrp
(bad)
push
pop
jge
cmp
loopne
or
not
pop
jo
je
xchg
cmps
jnp
sar
or
mov
cwde
sub
test
retf
adc
out
jge
(bad)
(bad)
(bad)
dec
cmp
jnp
push
push
sbb
or
jp
mov
jle
mov
fcomip
sub
jg
in
xchg
pusha
xor
push
xchg
(bad)
call
sbb
jp
fild
push
adc
in
scas
or
fdivr
(bad)
(bad)
(bad)
std
dec
int3
std
dec
jmp
sahf
sbb
push
lahf
or
loope
sbb
clc
xor
mov
cmp
sbb
mov
pop
mov
ins
fucomp
scas
dec
jmp
xor
jns
into
sub
cmps
stos
jae
push
sar
(bad)
(bad)
dec
push
ins
push
std
std
cmp
sub
xor
cmp
xor
test
dec
mov
mov
and
or
ins
push
inc
add
stos
pop
sub
dec
movs
ins
lods
mov
mov
inc
stos
(bad)
(bad)
(bad)
fcom
pop
mov
outs
inc
add
call
pop
or
scas
fsubr
(bad)
push
(bad)
nop
inc
add
xor
mov
mov
enter
mov
sbb
(bad)
fdiv
sub
push
inc
sbb
jbe
jmp
pop
popf
cmc
call
in
and
ret
dec
ret
xor
dec
rcl
jge
push
push
(bad)
mov
sub
bound
inc
add
ror
imul
(bad)
jg
mov
add
cmp
and
(bad)
dec
push
and
push
in
scas
fnstsw
pop
mov
lahf
test
push
jmp
loope
mov
test
neg
mov
(bad)
sti
pop
pop
sbb
adc
mov
mov
(bad)
jmp
pop
add
pop
or
out
push
xchg
jle
repz
sbb
cmps
(bad)
(bad)
(bad)
call
fist
xchg
out
jmp
fdiv
jae
clc
rcl
nop
cwde
test
push
mov
(bad)
(bad)
call
movs
mov
addr16
adc
sub
push
cmp
mov
imul
in
xchg
and
lahf
imul
not
mov
dec
push
xor
into
fwait
nop
popf
add
jmp
mov
iret
xchg
dec
and
loopne
(bad)
jmp
idiv
dec
sbb
sti
pop
clc
add
scas
jne
ror
cmp
inc
addr16
(bad)
(bad)
jmp
mov
in
mov
xchg
and
data16
push
jg
stos
cli
dec
cmc
push
jbe
pop
pop
jbe
dec
mov
push
jns
jge
out
(bad)
popf
aas
sub
movs
mov
xchg
pop
ins
mov
jne
stos
ficom
mov
cmp
ds
loope
sub
aas
xchg
out
icebp
pop
(bad)
(bad)
fcomip
xchg
adc
fs
imul
adc
shl
and
(bad)
(bad)
jmp
jg
mov
pop
cmp
(bad)
aad
aad
idiv
clc
(bad)
push
sub
and
cmp
inc
cs
adc
add
ja
cmp
(bad)
(bad)
(bad)
(bad)
jge
adc
fst
test
mov
xchg
sub
sub
push
push
dec
push
push
pop
lods
int
xchg
inc
(bad)
(bad)
(bad)
(bad)
jmp
fnstenv
cmc
imul
ror
mov
into
daa
push
ds
adc
out
or
(bad)
(bad)
cmp
push
rol
mov
jae
mov
inc
jnp
sub
mov
mov
and
adc
xchg
push
sbb
outs
cmp
push
cmp
inc
ret
enter
(bad)
push
or
ret
inc
ja
sub
clc
fs
dec
cld
(bad)
(bad)
mov
cmp
fmul
js
jne
mov
inc
dec
shl
es
(bad)
call
add
inc
mov
mov
push
(bad)
cmp
cs
lahf
ret
cld
(bad)
(bad)
inc
les
mov
cmp
cwde
cli
mov
push
sub
push
pushf
mov
test
popa
sub
jmp
adc
adc
ret
inc
mov
lods
cmps
imul
and
test
leave
or
scas
es
jl
push
and
ror
aaa
les
push
jne
cmp
cmps
mov
test
pop
(bad)
(bad)
call
jo
push
fsub
add
jmp
push
mov
shl
xchg
rol
cmp
leave
xor
push
call
or
or
loopne
add
sbb
sbb
(bad)
(bad)
(bad)
(bad)
cmp
and
cmp
cmp
and
pusha
adc
push
bound
push
(bad)
(bad)
(bad)
jmp
xchg
pop
data16
movs
xor
cld
add
loopne
into
rcr
data16
push
jmp
and
xchg
push
cmp
push
vpaddd
dec
push
jb
xor
adc
out
clc
dec
or
pop
inc
test
xchg
cmps
pop
pop
jecxz
pop
xor
push
lock
xor
lds
or
dec
enter
cmp
(bad)
(bad)
jmp
ja
and
jmp
add
mov
repnz
jae
test
add
(bad)
(bad)
call
pop
retf
(bad)
pusha
inc
repz
cmp
sbb
(bad)
(bad)
(bad)
cmp
push
test
adc
(bad)
dec
push
cmp
out
lock
and
adc
mov
stos
xchg
pop
add
int
inc
out
fs
inc
in
inc
test
jmp
das
cmp
dec
push
push
call
lock
fadd
push
cld
jmp
and
aaa
pushf
cmp
push
movs
jmp
lds
sbb
mov
adc
inc
bound
mov
leave
jb
shl
mov
sub
push
jecxz
ss
add
leave
jo
mov
shl
mov
loope
push
(bad)
(bad)
call
or
xchg
dec
mov
jns
mov
jne
or
out
jle
in
icebp
mov
(bad)
(bad)
dec
adc
out
dec
iret
push
jo
xor
dec
mov
push
adc
inc
sub
(bad)
call
push
rol
xlat
and
cmp
(bad)
jo
sub
mov
(bad)
(bad)
jg
(bad)
and
push
dec
daa
stos
mov
mov
enter
dec
mov
call
(bad)
cmp
cdq
imul
dec
mov
cmps
or
neg
mov
(bad)
lock
(bad)
inc
out
push
shr
lods
xchg
out
add
adc
dec
jmp
loopne
xor
(bad)
(bad)
(bad)
inc
enter
pop
and
js
ins
pop
push
push
and
sub
mov
cdq
inc
mov
mov
mov
lods
and
inc
lock
sub
xlat
push
scas
and
push
xor
(bad)
(bad)
inc
sub
(bad)
adc
xor
mov
repnz
(bad)
(bad)
(bad)
call
adc
push
xchg
cmps
arpl
sbb
mov
push
cmp
cmp
push
sbb
(bad)
call
nop
push
mov
shl
adc
mov
mov
cdq
cli
(bad)
aad
push
mov
push
neg
push
dec
cmp
mov
xor
mov
stc
adc
addr16
(bad)
(bad)
(bad)
jmp
movs
sub
add
inc
cmc
mov
xor
or
out
jbe
test
lods
xor
or
jg
(bad)
jmp
cli
inc
scas
pop
push
jmp
xor
ret
push
mov
cmps
call
(bad)
(bad)
call
dec
adc
test
je
imul
(bad)
in
pop
add
pushf
push
jns
mov
sub
scas
(bad)
jmp
mov
aas
xchg
sub
add
les
pop
loopne
xchg
and
dec
mov
stos
js
and
push
push
add
(bad)
jmp
xor
mov
pop
xchg
cmps
jg
cmps
ins
pop
xchg
dec
push
jae
push
adc
scas
mov
ja
(bad)
inc
push
lods
dec
addr16
in
push
imul
iret
retf
push
push
inc
cmp
or
sahf
ret
(bad)
std
out
dec
xor
mov
test
int3
xchg
add
call
or
lods
(bad)
in
and
mov
inc
pop
xchg
test
dec
test
jns
jg
mov
fmul
cmp
push
dec
(bad)
(bad)
fcomip
inc
and
mov
retf
and
fs
and
push
dec
adc
mov
dec
(bad)
(bad)
call
sub
push
inc
and
loope
pop
out
shl
cmp
(bad)
(bad)
jle
jge
lods
jmp
popf
(bad)
(bad)
scas
push
in
in
ret
(bad)
cmp
and
mov
(bad)
(bad)
inc
jno
pop
xlat
ins
pop
jnp
sub
or
xchg
call
(bad)
(bad)
jmp
jmp
inc
stos
pusha
jae
pop
mov
inc
mov
jp
xchg
jmp
push
hlt
adc
push
(bad)
test
(bad)
(bad)
fnsave
adc
je
adc
pop
cmps
mov
dec
mov
ds
mov
jmp
call
inc
movs
dec
ds
jl
fucomp
lea
ret
into
xor
aad
(bad)
(bad)
(bad)
dec
ja
fsub
sub
imul
mov
aad
rcr
cmp
push
mov
rcl
push
inc
ja
(bad)
(bad)
(bad)
inc
dec
and
push
fsub
(bad)
out
cli
cmc
out
stos
sbb
mov
and
(bad)
(bad)
call
xchg
mov
mov
mov
add
mov
iret
adc
call
inc
ja
inc
mov
clc
xchg
mov
(bad)
(bad)
(bad)
call
add
(bad)
sti
cmp
cmp
and
test
icebp
stos
test
mov
(bad)
(bad)
dec
jge
mov
ds
jnp
bound
push
mov
(bad)
dec
mov
scas
(bad)
mov
lahf
vmread
test
dec
cmps
sub
xchg
stos
push
dec
(bad)
(bad)
(bad)
dec
jmp
xchg
sub
sti
inc
and
(bad)
and
or
dec
or
mov
(bad)
(bad)
(bad)
push
push
push
mov
call
jg
pop
pop
(bad)
ret
ss
test
popa
clc
(bad)
(bad)
call
lea
pop
loope
sub
push
mov
and
popf
add
xor
lock
xor
aad
fcom
and
dec
jmp
sti
(bad)
jg
add
clc
repz
fisttp
outs
or
(bad)
(bad)
(bad)
call
xor
or
adc
add
cmps
sbb
and
xchg
fild
pop
inc
push
cld
sub
or
inc
ins
jno
cmp
add
(bad)
dec
adc
pop
dec
push
mov
push
sbb
(bad)
mov
xchg
fdiv
jecxz
inc
ja
mov
cmp
(bad)
(bad)
push
clc
jnp
jmp
inc
int3
sbb
int3
int
sbb
jle
ins
cmps
jp
mov
dec
fcomip
(bad)
call
ds
out
sahf
sbb
push
sbb
popa
or
in
mov
bound
hlt
cld
jmp
stc
repz
sub
cmp
mov
lods
sbb
out
repnz
cmp
(bad)
(bad)
fcomip
mov
movs
add
mov
mov
jp
mov
mov
(bad)
(bad)
jmp
jns
inc
add
sub
push
sub
xlat
jg
mov
sub
dec
js
test
sbb
xchg
outs
pushf
adc
test
cmp
clc
gs
sti
jo
cld
(bad)
inc
(bad)
fldenv
dec
popf
(bad)
js
dec
mov
add
lock
dec
jmp
adc
push
sahf
lods
scas
dec
aaa
mov
sar
sahf
jae
adc
jmp
jg
stc
aam
mov
arpl
mov
(bad)
(bad)
call
mov
leave
fcmovnb
ficomp
int
and
add
push
mov
sbb
sbb
mov
sub
mov
mov
repz
inc
loope
sbb
xchg
xchg
aas
and
(bad)
call
mov
icebp
mov
or
out
in
dec
pop
jl
pop
jecxz
push
sub
(bad)
(bad)
(bad)
jmp
call
inc
push
jp
xchg
or
push
jp
call
add
mov
jnp
loop
adc
(bad)
mov
inc
ss
int
sub
ret
mov
ret
push
jg
push
stos
pop
or
lahf
cmp
lds
fucomp
(bad)
(bad)
(bad)
jmp
in
cmp
mov
imul
mov
bound
push
rcr
cmp
mov
stos
or
outs
sbb
fcom
aam
out
xor
mov
or
add
out
jbe
idiv
(bad)
(bad)
inc
inc
iret
jnp
xor
or
xor
xchg
push
aam
push
or
push
mov
mov
call
push
jno
iret
sub
in
(bad)
xchg
mov
ja
call
xchg
(bad)
jg
sub
mov
push
xor
xchg
mov
dec
aad
push
push
stos
xchg
pop
std
call
aad
repnz
add
or
mov
jno
(bad)
(bad)
cmp
fwait
xchg
lods
mov
xor
gs
push
cmp
sub
add
adc
cmps
or
addr16
jg
push
ret
and
jmp
idiv
out
sbb
mov
push
popf
aam
adc
xchg
and
and
(bad)
(bad)
fistp
sub
or
push
sbb
popa
mov
mov
fst
in
(bad)
(bad)
inc
retf
mov
and
lods
cmps
push
mov
push
push
rep
outs
dec
fxtract
pusha
std
(bad)
(bad)
call
mov
loope
repnz
inc
sub
jae
xchg
mov
jmp
inc
pop
fdiv
push
jecxz
ror
loop
adc
jmp
pop
add
push
iret
fstp
scas
dec
addr16
idiv
(bad)
jmp
or
pushf
xchg
int3
lods
mov
outs
cmc
sbb
mov
pop
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
outs
scas
inc
cmp
pop
sbb
inc
mov
enter
push
pop
cmp
(bad)
(bad)
out
clc
pop
add
pop
out
clc
inc
(bad)
rcl
test
retf
cdq
adc
arpl
je
(bad)
(bad)
jmp
and
push
nop
sbb
xchg
push
out
out
push
out
not
ss
pop
ret
pop
mov
or
mov
push
(bad)
fsubr
cld
mov
movs
outs
(bad)
(bad)
(bad)
jmp
add
hlt
je
add
cmps
xchg
jae
dec
sub
pop
add
sar
(bad)
jmp
cmp
jl
out
add
enter
lods
sbb
shr
(bad)
(bad)
(bad)
(bad)
jns
sub
or
loope
push
into
push
loope
(bad)
lahf
jnp
int3
pop
sub
nop
cmps
pop
out
aaa
repnz
mov
popf
sbb
cmp
jle
add
push
mov
(bad)
cli
sti
cld
clc
lds
icebp
cmps
mov
scas
pushf
ret
and
cs
and
(bad)
jmp
dec
inc
ret
(bad)
jp
or
pop
push
fdiv
xchg
(bad)
(bad)
dec
or
retf
jnp
das
pop
int
call
imul
(bad)
(bad)
(bad)
fnstsw
gs
stc
cmp
sbb
ins
sbb
mov
and
pop
jle
jae
or
(bad)
(bad)
(bad)
call
push
stos
(bad)
sti
cmp
pushf
jp
in
xchg
pushf
pushf
ret
test
scas
add
xor
sbb
out
sbb
cmps
jbe
lds
dec
cmp
in
int
imul
(bad)
push
(bad)
js
(bad)
(bad)
(bad)
jmp
or
xchg
xchg
dec
pop
sub
out
fild
gs
lods
pop
push
jne
not
fnstsw
jge
(bad)
(bad)
push
push
xor
shr
movs
cdq
xchg
mov
mov
bound
call
inc
add
fwait
les
mov
(bad)
(bad)
(bad)
jmp
(bad)
addr16
inc
xchg
lds
dec
mov
jbe
xchg
(bad)
sub
dec
mov
imul
clc
(bad)
jmp
das
push
adc
or
dec
lock
aaa
xchg
xor
(bad)
cld
(bad)
fsubr
and
stc
sub
js
mov
xor
xchg
(bad)
push
pushf
sub
jle
rcl
div
dec
dec
cmp
fnsave
sbb
test
jmp
(bad)
dec
icebp
retf
mov
retf
aaa
xchg
je
(bad)
(bad)
(bad)
dec
dec
ficomp
cmp
inc
fwait
push
lods
(bad)
pop
mov
jmp
adc
(bad)
(bad)
(bad)
jmp
push
mov
pop
mov
je
xlat
ins
mov
ins
fnstenv
(bad)
(bad)
(bad)
dec
popf
push
shl
je
repnz
shl
lock
or
cmp
outs
cmp
out
sbb
icebp
xor
bound
clc
inc
inc
mov
out
cli
(bad)
(bad)
js
lock
pushf
das
jbe
xchg
shr
and
mov
outs
clc
(bad)
call
out
mov
adc
mov
jae
mov
mov
std
pop
(bad)
(bad)
mov
fstp
inc
fnstenv
dec
aad
test
loope
sar
sub
pop
xor
jg
les
std
sub
ins
(bad)
mov
xlat
mov
mov
out
mov
and
and
(bad)
call
mov
or
inc
or
in
in
sbb
(bad)
(bad)
jmp
sahf
pop
pop
(bad)
fcomp
into
push
bnd
xor
sub
xor
das
dec
(bad)
(bad)
(bad)
(bad)
cmp
xlat
xchg
sahf
add
ret
xchg
int
sub
and
ret
mov
out
outs
pop
shr
(bad)
(bad)
(bad)
call
retf
cmc
in
mov
mov
mov
lahf
mov
mov
out
mov
fnstcw
sbb
shl
fstp
stos
mov
jmp
mov
inc
out
sahf
mov
mov
dec
(bad)
inc
xchg
push
shl
cmps
int3
(bad)
jge
push
out
dec
cmps
shl
(bad)
push
mov
daa
icebp
cmps
shl
retf
push
mov
and
ins
xchg
(bad)
(bad)
dec
lods
mov
cmp
sub
mov
pop
clc
adc
(bad)
(bad)
jmp
lock
lock
push
and
jne
repz
cmps
mov
aaa
mov
cmp
outs
clc
rcr
call
ficom
add
(bad)
(bad)
(bad)
call
ret
mov
jecxz
fcom
in
jmp
xchg
sub
add
mov
(bad)
(bad)
(bad)
inc
call
jbe
repz
div
imul
aas
mov
into
(bad)
(bad)
(bad)
push
out
mov
scas
push
shl
inc
dec
jno
jg
pop
fsub
lea
ret
cmp
sbb
test
stos
scas
or
(bad)
jno
test
push
(bad)
(bad)
(bad)
jmp
(bad)
xor
jb
and
lea
pop
pop
bound
dec
jo
ret
push
sbb
ja
retf
xchg
mov
mov
movs
mov
and
ins
fwait
cmp
stos
adc
pop
xchg
sub
dec
add
push
out
cwde
aas
popa
(bad)
mov
mov
xchg
dec
cmp
in
repnz
(bad)
(bad)
mov
dec
dec
inc
lods
push
xor
push
add
sbb
cmp
adc
fwait
iret
adc
mov
cmp
inc
sar
or
arpl
cmps
in
scas
gs
pop
jle
mov
jmp
push
dec
sbb
stc
mov
mov
nop
cmps
cmps
mov
scas
clc
dec
into
dec
retf
adc
fsubrp
jecxz
rcr
push
jbe
jo
dec
xor
vxorpd
push
test
daa
and
addr16
jmp
dec
push
pop
and
das
sub
mov
pop
ss
stc
fistp
pop
arpl
int
mov
sar
fist
gs
sahf
test
imul
jg
xchg
sub
test
pop
cld
and
aam
push
lds
repnz
mov
jl
out
dec
arpl
(bad)
jmp
dec
bound
cs
or
add
lock
int3
inc
call
in
sub
in
xchg
aas
push
stos
mov
clc
(bad)
(bad)
push
jns
adc
movs
pop
pop
idiv
jbe
ins
fistp
je
repnz
mov
pop
in
(bad)
(bad)
mov
test
retf
and
movs
add
mov
xchg
add
or
inc
into
fcomp
jle
lea
inc
fbstp
lahf
daa
bound
mov
aam
mov
cs
mov
lods
adc
retf
sbb
sub
(bad)
int
inc
adc
adc
test
out
outs
mov
(bad)
(bad)
jmp
stos
mov
push
popf
mov
dec
inc
inc
jmp
inc
aad
(bad)
(bad)
call
(bad)
movs
cmp
push
sbb
ss
adc
mov
pop
inc
mov
jmp
add
cs
inc
xor
cwde
jp
mov
ret
or
pop
pop
adc
cwde
(bad)
call
cld
mov
out
test
mov
jno
push
fidiv
pop
pop
outs
dec
mov
(bad)
(bad)
call
out
in
xchg
mov
mov
pop
in
(bad)
mov
stos
int3
cdq
shr
(bad)
(bad)
(bad)
in
push
(bad)
and
imul
mov
inc
movs
mov
aaa
outs
cmps
fcmovu
pop
jmp
call
lds
sub
push
and
lods
jb
adc
imul
jge
aam
(bad)
(bad)
(bad)
call
test
pop
mov
fstp
xchg
mov
or
iret
mov
push
std
jg
dec
jecxz
cmp
repz
pop
xchg
xchg
fcom
mov
xor
je
(bad)
test
fwait
(bad)
scas
jle
gs
cmps
es
sub
mov
cmp
sbb
(bad)
(bad)
inc
js
data16
ins
repz
in
shr
aad
jmp
cmp
test
xchg
iret
mov
xor
outs
daa
mov
push
out
pop
mov
xchg
dec
cmp
imul
mov
pop
gs
addr16
jbe
cdq
cmc
(bad)
(bad)
push
cmp
add
xor
xchg
xchg
push
xchg
aad
push
inc
and
jmp
sub
(bad)
call
loop
push
xchg
xchg
push
jno
cld
or
xor
mov
sti
mov
adc
and
(bad)
(bad)
call
movs
xchg
call
out
call
addr16
aam
fild
fbstp
retf
cmp
cmc
jmp
cmps
add
jp
dec
pop
jo
ins
movs
inc
lea
sbb
stos
(bad)
call
vmovaps
fldcw
movs
int3
sub
movs
std
push
cli
(bad)
(bad)
(bad)
dec
test
clc
in
jl
stos
dec
jecxz
cmp
punpckhdq
sub
cmps
pop
inc
in
stos
stos
xchg
mov
jmp
mov
adc
pusha
cmps
gs
pusha
push
mov
popa
jmp
in
lahf
pushf
nop
(bad)
(bad)
(bad)
(bad)
mov
mov
cwde
mov
cmp
jnp
push
xor
cwde
push
enter
sbb
outs
cli
(bad)
dec
mov
sti
aad
fsubr
mov
pop
xchg
and
out
xor
outs
(bad)
call
das
jmp
cli
mov
mov
outs
ins
mov
scas
pop
(bad)
fcomip
(bad)
mov
in
and
sub
ret
jmp
xchg
push
ror
and
fdivr
(bad)
(bad)
dec
clc
pop
xchg
and
pop
fcom
jbe
ret
stc
ret
shl
vrsqrtps
clc
(bad)
jmp
div
inc
jnp
adc
xchg
loopne
idiv
mov
pusha
call
(bad)
(bad)
push
xchg
(bad)
xchg
or
and
test
(bad)
(bad)
lods
mov
in
dec
xchg
xor
aas
imul
outs
call
not
enter
cdq
sahf
je
out
repnz
xchg
sub
pop
add
(bad)
call
test
xor
(bad)
call
mov
aaa
shl
lahf
arpl
test
or
sahf
int3
fwait
(bad)
dec
jo
xchg
inc
dec
xchg
xor
mov
test
and
pop
popa
(bad)
(bad)
out
cli
push
imul
adc
icebp
inc
test
cmp
out
ret
fmul
call
xchg
repz
fbstp
adc
rcl
test
pusha
pop
dec
xor
(bad)
(bad)
inc
jmp
pop
xor
in
enter
inc
pop
mov
push
push
out
dec
(bad)
(bad)
(bad)
mov
shr
add
xchg
outs
(bad)
push
iret
gs
push
lods
sbb
fbld
repz
add
push
sub
scas
int
movs
cs
jns
icebp
out
sub
mov
mov
jne
pop
in
mov
jmp
loop
sti
cmp
lods
and
mov
(bad)
(bad)
inc
and
adc
mov
lahf
repnz
loope
or
mov
jmp
outs
add
dec
lock
lahf
add
loopne
xlat
xchg
pusha
mov
loopne
xchg
(bad)
(bad)
(bad)
push
adc
dec
loope
daa
cmp
cmp
out
mov
cmp
mov
(bad)
(bad)
stc
in
mov
ins
mov
fidiv
scas
fist
(bad)
fild
lea
mov
mov
inc
cmps
jl
(bad)
(bad)
jg
pop
adc
mov
dec
dec
sti
mov
shl
push
retf
fild
jnp
pop
jbe
out
int3
fdivr
jb
ss
xor
(bad)
push
push
push
mov
inc
cmc
and
mov
cmc
xchg
out
or
adc
fisttp
inc
pop
mov
fild
lods
adc
(bad)
(bad)
push
mov
sub
nop
bound
shr
push
cwde
xor
cmps
(bad)
(bad)
(bad)
(bad)
fst
mov
hlt
lea
aam
(bad)
mov
and
pop
lods
sbb
(bad)
push
cld
jne
sbb
mov
jae
and
movs
or
push
add
sbb
(bad)
(bad)
(bad)
inc
mov
hlt
push
fs
dec
aaa
scas
outs
in
sbb
mov
lods
fwait
adc
mov
fwait
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
addr16
shl
sub
dec
loopne
adc
setne
mov
dec
sbb
cmp
loop
nop
add
adc
jmp
mov
imul
(bad)
dec
int3
sub
fbstp
stc
and
xor
jecxz
dec
shl
jp
hlt
test
out
(bad)
(bad)
call
imul
xchg
out
retf
pop
sar
xchg
sar
cmp
mov
or
palignr
neg
test
(bad)
(bad)
dec
dec
std
fs
jl
push
nop
retf
jmp
jecxz
xor
adc
test
inc
(bad)
dec
lock
jnp
test
mov
inc
jle
mov
pop
xor
push
mov
(bad)
inc
fidiv
lahf
mov
cs
sbb
push
mov
loopne
loopne
cwde
jecxz
es
iret
pop
pusha
cmps
sbb
fs
call
pop
push
or
pcmpeqw
int3
jle
stos
push
aam
mov
sbb
push
push
sub
outs
stos
xchg
jp
cs
fisttp
sahf
in
bound
out
cmp
(bad)
(bad)
jmp
cwde
push
or
out
sub
mov
(bad)
stc
scas
popf
pusha
(bad)
push
cmp
add
pusha
xchg
jle
bound
sbb
arpl
mov
cmp
push
sbb
(bad)
(bad)
jle
or
cwde
in
mov
or
int3
loopne
mov
or
pop
hlt
add
movs
imul
push
data16
cmc
(bad)
jmp
pop
push
aam
dec
jmp
xchg
jnp
sbb
push
popf
(bad)
cli
mov
call
mov
out
shl
rcl
adc
push
inc
push
or
(bad)
loop
fstp
retf
sbb
fwait
sahf
sub
push
mov
out
pushf
movs
out
enter
in
xchg
mov
(bad)
dec
neg
out
dec
outs
jmp
sbb
int
sub
sahf
inc
mov
popf
inc
push
(bad)
(bad)
(bad)
call
jmp
les
pop
movs
aam
dec
cli
int
push
pop
stos
jno
sbb
(bad)
mov
loopne
test
inc
cld
dec
mov
push
in
aad
cmc
test
(bad)
in
outs
mov
enter
mul
(bad)
(bad)
inc
mov
xchg
inc
les
bound
inc
ja
xor
add
(bad)
mov
or
sbb
les
or
sahf
pop
mov
pop
jmp
into
fbstp
clc
lods
(bad)
xchg
mov
lock
dec
push
inc
imul
call
pop
push
mov
inc
push
in
sub
pop
xor
and
adc
fsubr
in
xchg
jl
cld
and
in
pop
mov
loope
mov
jg
(bad)
(bad)
mov
test
adc
loop
pusha
sub
or
(bad)
(bad)
(bad)
dec
inc
mov
push
adc
jb
mov
xchg
dec
add
imul
cmp
or
or
sar
xor
into
daa
test
cmp
std
sbb
imul
lds
js
cli
mov
das
pushf
inc
(bad)
(bad)
(bad)
jmp
mov
cmp
pop
or
shl
cmps
xchg
sbb
mov
ror
push
dec
mov
bound
movs
cli
mov
xchg
aam
inc
dec
ins
jae
xchg
or
pop
pop
jae
in
ins
mov
pop
out
aaa
mov
jmp
xchg
scas
mov
arpl
mov
pop
aaa
and
les
and
push
push
and
cmps
xchg
in
repz
mov
xchg
pop
jne
dec
dec
pop
push
(bad)
(bad)
(bad)
mov
jmp
movs
dec
mov
mov
and
mov
retf
hlt
xchg
stos
shr
(bad)
(bad)
(bad)
mov
adc
repz
dec
mul
mov
iret
into
jno
xor
jbe
data16
jg
jg
aam
cmp
into
pop
mov
fist
xor
ds
mov
(bad)
(bad)
(bad)
cmp
retf
mov
push
in
inc
sbb
mov
or
and
or
and
add
cmps
(bad)
sbb
out
cmovge
jmp
bound
mov
sar
(bad)
(bad)
push
jmp
mov
das
aas
sub
jns
or
pop
sub
(bad)
test
xor
aad
inc
movs
jnp
les
push
mov
push
fwait
mov
inc
dec
jbe
mov
rcl
pop
xor
hlt
(bad)
ret
ror
sub
pop
inc
scas
cmps
popf
in
dec
in
iret
(bad)
(bad)
(bad)
mov
or
cs
imul
and
ins
mov
shrd
cmc
xlat
lods
xchg
adc
(bad)
(bad)
call
jge
mov
jbe
fild
or
fistp
aam
pusha
test
xor
jmp
in
xchg
jbe
xor
mov
adc
mov
jno
sbb
mov
cld
call
mov
dec
pop
pushaw
(bad)
loope
fdiv
div
mov
pop
pushf
fwait
mov
inc
std
in
ds
jge
fcos
(bad)
(bad)
jmp
add
mov
xchg
pop
cmps
mov
inc
or
fdivr
adc
arpl
das
or
(bad)
(bad)
call
push
cmps
movs
fdiv
mov
ja
call
xchg
imul
push
mov
ret
(bad)
jmp
jecxz
dec
xchg
inc
dec
add
dec
pop
scas
out
pop
jle
jmp
test
js
fsubp
ret
jg
push
mov
hlt
xchg
(bad)
(bad)
(bad)
push
out
lea
std
mov
or
pop
xchg
fsubr
or
jle
bound
or
call
xchg
(bad)
(bad)
(bad)
call
jge
jbe
lds
push
nop
mov
xchg
mov
sbb
push
xchg
add
(bad)
cmp
add
add
inc
stos
js
aam
shl
mov
add
mov
dec
push
neg
sahf
mov
ins
sbb
push
xchg
idiv
lds
sbb
jbe
cld
(bad)
dec
mov
rcr
xor
lock
cmp
(bad)
lods
sub
inc
stc
ss
dec
enter
pushf
cmps
das
loope
push
jno
(bad)
push
std
shr
mov
mov
mov
xchg
xor
aaa
xor
call
(bad)
(bad)
jg
mov
pop
inc
pop
pop
add
lds
pop
ss
enter
sub
jg
nop
push
sub
xor
movs
jno
test
sub
data16
xchg
scas
or
int3
xchg
(bad)
(bad)
(bad)
(bad)
call
scas
push
xchg
mov
dec
ret
add
in
dec
inc
pop
mov
adc
dec
(bad)
xor
(bad)
(bad)
fcomip
adc
push
rcl
or
add
mov
loopne
test
dec
lods
stos
mov
xchg
sbb
movd
jle
dec
ja
push
(bad)
(bad)
(bad)
jmp
and
stos
push
pop
mov
js
or
out
cmp
lods
mov
(bad)
(bad)
(bad)
mov
add
inc
sbb
aam
adc
sbb
in
mov
stos
call
and
add
enter
std
gs
outs
test
stos
add
sbb
cmp
jmp
out
jne
pushf
pop
xor
adc
mov
push
jmp
mov
pop
dec
push
xor
popa
out
inc
(bad)
push
jb
(bad)
(bad)
jmp
cdq
popa
rcl
push
popf
cmp
sbb
(bad)
mov
push
jns
push
add
(bad)
(bad)
fcomip
sub
pusha
mov
movs
call
stos
adc
inc
lss
or
(bad)
(bad)
inc
jne
add
jge
shr
leave
leave
push
add
and
inc
push
movs
cmps
data16
cmps
scas
mov
mov
cs
cmp
fbld
cmp
(bad)
(bad)
jmp
xor
popf
push
pusha
retf
test
(bad)
mov
sti
aam
das
sub
mov
jmp
dec
xor
sub
dec
movs
cmps
xor
mov
(bad)
(bad)
(bad)
inc
push
sub
cmp
inc
dec
sti
inc
mov
push
add
mov
ret
(bad)
(bad)
dec
push
push
aad
lahf
mov
cmp
dec
mov
sbb
jmp
cmp
dec
jle
es
lock
or
cmp
retf
xor
rcl
xchg
(bad)
adc
mov
inc
test
movs
(bad)
push
dec
jo
cmp
jmp
pop
cmp
out
fild
mov
push
test
pusha
cmp
(bad)
(bad)
jmp
out
and
fs
push
inc
addr16
mov
add
retf
fld
inc
sbb
mov
mov
push
jmp
dec
loopne
lods
(bad)
(bad)
call
out
je
in
xor
cmps
xor
das
cmp
test
ror
mov
fld
in
(bad)
mov
push
popf
cmp
xor
fs
(bad)
inc
leave
aaa
sub
mov
cs
les
or
loopne
xor
sbb
pushf
scas
sub
dec
fadd
dec
fucomp
mov
jmp
stos
in
xlat
(bad)
(bad)
(bad)
call
and
jno
cwde
sbb
shl
out
mov
dec
mov
mov
ja
push
aam
mov
jb
movs
sub
icebp
and
jno
movs
movs
dec
and
jmp
mov
jmp
dec
jns
in
or
popf
lahf
pusha
cmp
mov
scas
js
dec
scas
ret
inc
mov
add
aad
and
dec
dec
imul
mov
clc
jmp
xchg
enter
test
adc
rcl
outs
mov
lahf
into
add
(bad)
(bad)
call
push
shr
sar
push
and
inc
outs
xchg
sub
dec
push
ds
call
pop
push
dec
je
jmp
call
sub
pusha
xor
xchg
jmp
dec
push
pop
cmc
(bad)
call
inc
lahf
jg
or
mov
addr16
push
retf
fld1
mov
(bad)
(bad)
(bad)
jmp
imul
push
in
mov
arpl
sar
bound
fidiv
popa
sub
jg
push
lods
jmp
push
(bad)
jle
push
int
xor
jmp
push
mov
fadd
ret
dec
add
(bad)
(bad)
jmp
push
inc
shr
cmp
dec
xchg
iret
mov
ins
iret
sar
enter
inc
adc
xchg
sbb
push
std
(bad)
push
xchg
jno
or
or
push
pushf
loope
aam
cmc
xchg
pop
cld
call
daa
jmp
sbb
inc
lea
mov
push
xchg
test
or
mov
(bad)
mov
adc
mov
loope
in
xchg
jmp
and
lds
mov
sub
mov
add
mov
mov
xchg
test
test
out
jl
inc
mov
(bad)
jg
adc
xchg
gs
adc
add
push
sbb
ja
add
pop
loopne
push
loope
xor
ins
and
addr16
jmp
lds
dec
pop
dec
sub
repz
dec
inc
mov
add
xchg
push
(bad)
call
sar
icebp
mov
vandnps
add
fld
sbb
js
call
add
test
or
out
outs
and
(bad)
(bad)
(bad)
jmp
imul
jg
sbb
sbb
xor
push
das
or
sub
(bad)
lea
dec
mov
rol
mov
sub
pushf
retf
mov
jmp
mov
adc
repz
aas
sub
jbe
jb
dec
adc
movs
aaa
jae
xchg
cmp
(bad)
(bad)
(bad)
cmp
push
xchg
repnz
dec
popa
sub
in
ret
dec
nop
sbb
leave
xchg
movs
cmc
push
sbb
push
mov
movs
test
cmp
sub
std
push
push
adc
cli
leave
(bad)
(bad)
(bad)
jmp
retf
fs
retf
shld
xchg
cmps
jp
scas
mov
push
sub
(bad)
pop
lods
(bad)
(bad)
(bad)
(bad)
(bad)
fiadd
in
sbb
ins
sub
push
scas
pop
imul
xor
pop
sgdtd
mov
(bad)
(bad)
(bad)
dec
add
sahf
in
cmc
ja
or
push
cmp
add
jnp
mov
(bad)
fdiv
or
jb
movs
repnz
ret
push
jbe
or
stos
dec
addr16
sbb
jp
dec
xchg
jge
sbb
imul
add
loopne
aaa
(bad)
(bad)
(bad)
inc
or
stos
mov
jl
add
jmp
or
sahf
setle
(bad)
(bad)
call
mov
icebp
mov
inc
sub
cmp
out
aaa
sbb
daa
push
sbb
imul
loope
jnp
xor
mov
push
into
xor
gs
div
mov
std
sub
sbb
test
call
cli
xor
mov
mov
pop
dec
fwait
xchg
push
jge
xor
fcmovne
(bad)
(bad)
(bad)
dec
out
test
dec
sub
aam
lea
adc
stos
mov
or
test
(bad)
(bad)
(bad)
mov
inc
xchg
dec
js
es
mov
sbb
shl
pop
xor
test
dec
mov
jbe
jmp
out
test
inc
es
fnstcw
(bad)
(bad)
(bad)
(bad)
mov
sbb
repz
inc
cmps
enter
mov
fidivr
data16
fwait
push
sbb
(bad)
(bad)
jmp
in
stc
imul
(bad)
add
ds
imul
xor
inc
mov
jmp
jbe
xchg
into
jmp
sub
cs
rcr
lods
pop
jl
loopne
js
(bad)
(bad)
(bad)
jmp
sub
pushf
fadd
nop
xchg
jg
sub
mov
xchg
inc
mov
lock
test
jg
call
out
sub
inc
cwde
push
inc
fisubr
mov
int3
xor
(bad)
(bad)
(bad)
(bad)
cmp
movs
mov
aaa
inc
jo
xor
mov
xchg
in
jl
sbb
mov
lods
xor
(bad)
(bad)
(bad)
dec
and
call
sub
gs
sbb
idiv
(bad)
cld
sbb
push
push
inc
or
xor
pushf
or
and
mov
outs
or
idiv
cdq
xor
out
push
cmc
(bad)
in
cdq
pop
in
and
test
xor
jbe
xchg
push
sub
fnstcw
(bad)
(bad)
dec
jp
push
and
(bad)
xchg
lea
shl
jmp
xchg
sbb
js
(bad)
fdiv
(bad)
mov
(bad)
clc
shl
sbb
pop
hlt
les
mov
iret
ja
jl
(bad)
jmp
sbb
push
jbe
sbb
ftst
sub
xor
add
(bad)
push
js
(bad)
leave
mov
push
dec
(bad)
(bad)
jmp
ja
clc
mov
mov
test
push
loop
sbb
mov
(bad)
dec
out
pop
or
ins
test
push
inc
shr
es
jbe
(bad)
(bad)
mov
sbb
das
cmp
int
cmps
and
(bad)
and
daa
pop
imul
(bad)
(bad)
jmp
mov
mov
fnop
ror
loop
fisubr
xchg
cmp
(bad)
(bad)
(bad)
jmp
(bad)
repnz
inc
mov
stc
push
jns
loope
push
pop
jmp
std
xchg
mov
(bad)
jmp
xchg
mov
inc
ins
popf
imul
jno
aaa
push
cld
(bad)
(bad)
mov
mov
nop
xchg
push
jns
adc
mov
jb
xor
xchg
(bad)
cmp
and
ja
and
push
jecxz
iret
xchg
ja
inc
cmps
sbb
stos
mov
(bad)
(bad)
(bad)
call
loop
rol
adc
test
stos
sbb
dec
adc
push
jb
jno
stc
hlt
retf
sbb
(bad)
(bad)
(bad)
mov
xchg
aaa
and
xchg
xor
fadd
fldcw
test
and
push
fdivr
(bad)
(bad)
jmp
hlt
pop
inc
push
inc
sub
pop
retf
pop
out
fild
(bad)
or
(bad)
not
lds
(bad)
(bad)
(bad)
cmp
loop
or
in
mov
sub
jns
iret
es
xor
call
mov
out
pop
ss
cmp
out
and
cli
rcl
pop
sub
and
mov
imul
push
scas
pop
add
mov
cmps
xchg
setae
and
ss
xlat
in
or
outs
adc
jnp
enter
(bad)
(bad)
(bad)
call
repnz
fistp
into
dec
xor
xor
daa
and
ins
adc
outs
addr16
jg
(bad)
imul
xchg
(bad)
cmc
imul
mov
(bad)
in
call
dec
and
fstp
pop
lods
mov
xchg
push
fnstsw
mov
(bad)
mov
mov
pop
xchg
mov
dec
fcom
fs
sub
ja
mov
mov
inc
icebp
dec
psubsw
or
imul
pop
add
pop
sub
and
test
stos
mov
repnz
(bad)
sbb
(bad)
(bad)
push
xchg
gs
jl
arpl
fnstsw
aaa
push
cmp
mov
pushf
dec
cmp
inc
sbb
(bad)
call
xor
das
and
dec
inc
sahf
popf
adc
mov
daa
jecxz
cli
(bad)
dec
out
pop
sub
and
lods
sub
ret
or
pop
sar
(bad)
(bad)
push
push
std
sbb
inc
jecxz
dec
jle
sbb
stc
aaa
outs
dec
dec
mov
(bad)
push
or
outs
leave
cmp
push
xchg
ds
dec
sub
sbb
push
mov
dec
inc
clc
dec
pop
and
mov
and
shr
push
add
cmc
dec
add
(bad)
(bad)
(bad)
inc
fidiv
xlat
movs
jo
push
and
inc
enter
cmp
jno
sbb
icebp
xchg
leave
retf
mov
(bad)
(bad)
call
xchg
sbb
icebp
outs
cld
adc
stc
in
les
push
shl
aaa
xchg
leave
les
pop
jb
xchg
cmp
in
and
ins
(bad)
(bad)
mov
inc
imul
ins
dec
(bad)
xor
jge
bound
sar
cmp
test
dec
enter
xchg
pop
pop
pop
add
enter
add
test
or
push
xchg
add
(bad)
call
jle
mov
addr16
mul
jae
sbb
push
jnp
xchg
mov
jg
push
mov
test
push
sub
or
ja
sti
mov
adc
mov
scas
mov
(bad)
(bad)
push
fistp
push
ja
sti
call
and
int
pop
out
push
mov
dec
sbb
(bad)
(bad)
(bad)
(bad)
jle
pop
cmp
mov
mov
movs
cmp
jmp
sbb
jle
mov
pop
mov
(bad)
test
push
push
sub
jnp
mov
mov
adc
xor
and
jge
retf
push
rcr
jo
inc
repnz
sub
cmps
test
mov
push
cld
push
push
xor
jno
add
sub
fisttp
push
mov
mov
cli
jmp
lahf
push
retf
mov
sahf
call
not
jg
hlt
call
or
jecxz
mul
push
(bad)
(bad)
(bad)
jmp
outs
fs
mov
mov
sub
push
aam
cmps
mov
pop
or
and
jmp
jo
push
cs
xor
push
loope
aam
inc
push
mov
jp
xor
sub
inc
cld
cmp
ret
jmp
push
icebp
adc
(bad)
push
sbb
dec
in
add
jae
ficomp
test
adc
inc
pop
push
sbb
(bad)
(bad)
(bad)
dec
add
stos
jle
mov
push
inc
lods
or
jecxz
into
xor
xor
dec
jle
rcl
mul
inc
inc
cmp
adc
dec
jns
xchg
jmp
enter
(bad)
(bad)
push
fiadd
fisubr
jge
push
pop
popf
mov
inc
pop
je
xchg
jg
test
je
sbb
cmp
push
cmp
push
jge
sbb
adc
jg
or
ins
mov
lea
mov
mov
cmp
cld
aaa
std
mov
icebp
jb
sub
cmps
cmps
pop
jns
in
aaa
or
(bad)
inc
clc
je
cmc
inc
inc
bound
inc
mov
pop
xor
out
add
xor
mov
mov
cli
sub
shl
stos
sub
or
int3
lods
aad
add
xor
add
lds
ficomp
(bad)
aad
pop
mov
pop
es
(bad)
(bad)
in
mov
mov
cmp
int3
mov
pusha
sbb
(bad)
(bad)
(bad)
call
repz
imul
mov
jns
cmp
sub
in
fadd
(bad)
(bad)
(bad)
inc
or
movs
xor
mov
pop
sbb
nop
xchg
pop
jmp
push
(bad)
(bad)
(bad)
push
dec
out
imul
imul
mov
loope
mov
add
(bad)
(bad)
call
int3
adc
mov
push
out
jecxz
(bad)
lock
div
xchg
shl
cli
cli
sahf
(bad)
push
and
int
(bad)
sub
inc
jo
(bad)
mov
dec
jns
push
or
jmp
into
je
cdq
mov
xchg
sub
out
mov
xor
or
loopne
mov
(bad)
(bad)
(bad)
push
mov
in
add
mov
imul
(bad)
(bad)
(bad)
dec
mov
pop
cs
sub
ja
or
ja
pop
add
jmp
(bad)
fidiv
int
(bad)
or
push
and
call
ds
fisttp
ror
cld
stos
or
add
cmp
mov
clc
(bad)
out
mov
in
pop
popf
into
lods
cmc
sbb
nop
sbb
(bad)
mov
repz
repnz
sub
push
outs
sbb
inc
inc
je
xchg
sub
mov
(bad)
(bad)
(bad)
inc
retf
ins
push
pop
shl
xor
dec
mov
mov
xchg
fisttp
(bad)
(bad)
(bad)
fnsave
jns
nop
push
mov
push
sbb
inc
call
sahf
sbb
mov
jo
in
fwait
adc
sub
mov
(bad)
scas
jmp
jg
test
sbb
mov
adc
and
mov
jnp
(bad)
(bad)
(bad)
inc
fidivr
sub
ins
xchg
or
into
jno
mov
sbb
sub
in
pop
scas
fdiv
cmc
sbb
(bad)
(bad)
call
sub
pushf
bound
not
icebp
data16
jp
pop
adc
sbb
(bad)
push
xchg
mov
xor
sbb
scas
adc
pop
aaa
jp
or
stc
mov
jae
(bad)
(bad)
dec
imul
mov
mov
mov
inc
das
add
pop
dec
repz
mov
leave
leave
fnstcw
movs
stos
add
(bad)
inc
xor
mov
stos
(bad)
mov
dec
test
sbb
(bad)
(bad)
(bad)
mov
repnz
imul
daa
jnp
pop
fisub
pop
fxtract
arpl
movs
dec
xchg
mov
fcomp
add
(bad)
popa
mov
pop
adc
leave
sub
fist
(bad)
jp
and
sbb
mov
xchg
and
rol
sub
(bad)
(bad)
(bad)
inc
cmp
cdq
push
sbb
jl
aaa
js
rol
jp
inc
cmc
jp
jae
in
call
sub
clc
push
es
cs
dec
inc
dec
retf
sbb
xchg
mov
inc
xchg
jmp
std
mov
(bad)
xchg
aam
or
mov
sar
add
in
push
fs
cdq
bound
xchg
test
idiv
aas
(bad)
(bad)
(bad)
jmp
data16
jmp
in
in
pop
fcom
fxch
pop
xchg
popa
cmp
jae
or
pop
ins
(bad)
jg
hlt
(bad)
mov
sar
xchg
rol
data16
(bad)
(bad)
jmp
stc
cmp
lahf
xchg
loop
pop
ret
out
sub
sbb
nop
jle
clc
aas
inc
push
inc
sub
leave
fisttp
mov
int
fcom
xchg
push
(bad)
(bad)
jg
mov
(bad)
fdivrp
sub
rcr
xchg
fdiv
adc
or
dec
mov
(bad)
(bad)
call
dec
jno
(bad)
imul
dec
xchg
push
das
sbb
fisubr
(bad)
(bad)
(bad)
(bad)
jns
or
mov
mov
in
lahf
lds
(bad)
in
add
test
mov
test
pop
shr
sub
xchg
adc
cmps
mov
adc
fwait
bswap
jo
arpl
fidiv
xchg
ret
mov
test
mov
fist
mov
mov
(bad)
jno
das
ret
jae
icebp
or
mov
pop
(bad)
(bad)
fcomip
jle
jecxz
add
dec
pop
jo
ret
mov
ins
pop
ficomp
popf
mov
(bad)
(bad)
(bad)
call
add
xor
ror
popf
and
jne
data16
int3
push
das
daa
mov
call
pushf
sahf
xchg
addr16
in
jge
mov
dec
jmp
dec
mov
les
jbe
sub
pop
adc
xchg
ins
xchg
jns
movs
lods
test
push
cmp
mov
(bad)
dec
ror
cmps
jl
and
out
cdq
leave
fwait
xchg
jecxz
xchg
sub
cmp
aad
inc
mov
mov
push
jle
sti
mov
lahf
cwde
in
or
pop
lock
dec
jmp
jg
(bad)
push
shr
mov
nop
mov
pop
mov
sub
adc
(bad)
(bad)
call
jns
add
shr
jge
sar
out
dec
push
mov
test
jp
push
adc
les
(bad)
aad
bound
dec
test
(bad)
(bad)
(bad)
inc
(bad)
mov
repz
ret
es
dec
rcl
add
xchg
xor
cmp
cwde
(bad)
adc
or
cmp
mov
mov
jo
cwde
pop
sbb
js
and
sub
push
push
int3
mov
push
dec
sub
cmc
test
mov
inc
adc
daa
mov
adc
jl
pop
std
(bad)
stc
mov
retf
mov
fwait
ss
jb
dec
xchg
jl
xor
retf
(bad)
(bad)
(bad)
(bad)
inc
nop
inc
add
arpl
scas
mov
xor
xlat
es
fadd
or
(bad)
dec
jns
jno
pushf
xor
cmp
dec
push
imul
popf
iret
jns
pop
ja
fistp
fwait
(bad)
(bad)
call
aad
adc
and
inc
sub
popf
ja
mul
repnz
sub
adc
ds
(bad)
(bad)
push
sub
out
fs
cmp
stos
enter
(bad)
(bad)
fcomip
mov
jle
sahf
dec
xlat
mov
ins
ss
scas
mov
aad
jnp
outs
in
imul
ss
jg
call
(bad)
or
out
sub
mov
xchg
mov
pop
rcl
push
or
stos
mov
sbb
cdq
mov
das
jnp
jmp
aas
xchg
aad
jp
sbb
call
enter
jle
popf
pushf
xchg
mov
icebp
mov
and
call
xchg
mov
cmp
dec
(bad)
enter
push
lea
pop
gs
xor
cmps
(bad)
jmp
sub
fcos
(bad)
(bad)
(bad)
cmp
stos
aad
fsubr
std
mov
imul
daa
gs
das
mov
fwait
xor
push
inc
dec
mov
movs
xor
push
cmp
sahf
push
xchg
lea
add
push
dec
leave
(bad)
(bad)
(bad)
push
dec
ins
jmp
or
sbb
cmp
int3
and
xor
and
(bad)
js
dec
sbb
adc
xchg
gs
icebp
cmp
push
mov
out
(bad)
(bad)
(bad)
(bad)
cld
dec
jo
push
cld
sar
call
mov
mov
mov
pop
sahf
es
xlat
(bad)
(bad)
(bad)
inc
jbe
int3
pop
fldcw
shr
dec
push
(bad)
and
mov
ss
(bad)
movs
in
xor
push
xchg
push
loopne
not
mov
jno
push
dec
stc
push
xchg
cmc
push
mov
aaa
outs
jmp
xchg
imul
shl
jge
pop
(bad)
jmp
clc
jns
jl
fwait
in
sbb
(bad)
lock
dec
jecxz
(bad)
mov
inc
pushf
aas
mov
pop
adc
mov
cmp
xor
adc
mov
xor
mov
pop
jmp
xor
xchg
mov
jmp
leave
pop
sub
ret
mov
mov
jle
mov
lea
es
xchg
cmp
outs
cli
(bad)
(bad)
(bad)
push
fsubr
mov
dec
aaa
mov
mov
adc
sbb
hlt
outs
cmc
lahf
push
jbe
rcr
xchg
cli
outs
sub
fidiv
mov
xlat
pushf
add
shl
(bad)
adc
hlt
xchg
rol
movs
dec
jno
xchg
push
movs
jae
out
jl
(bad)
mov
(bad)
(bad)
inc
jl
lds
popa
mov
xchg
js
or
daa
mov
in
adc
or
mov
(bad)
(bad)
push
test
sahf
mov
sub
cli
mov
xchg
xor
mov
aaa
std
iret
mov
push
out
out
or
ror
jbe
data16
dec
rcr
cmp
int
das
clc
xor
xor
rol
mov
stos
inc
push
mov
inc
xor
sbb
mov
rcr
pop
mov
ins
mov
mov
ins
int
mov
and
mov
(bad)
(bad)
call
ss
sti
pusha
mov
dec
lods
dec
and
js
push
inc
xchg
pop
es
repnz
inc
(bad)
fild
jmp
call
push
cmp
cs
fcomip
(bad)
push
push
scas
or
push
sub
mov
mov
sub
icebp
(bad)
(bad)
(bad)
(bad)
call
and
in
push
mov
xchg
dec
ficom
ins
jbe
(bad)
test
(bad)
mov
jmp
in
xor
test
fiadd
addr16
mov
push
(bad)
call
leave
sbb
int
mov
xchg
arpl
sbb
sbb
sub
clc
in
(bad)
mov
out
gs
mov
retf
int3
shl
inc
into
popa
or
retf
cwde
idiv
or
(bad)
call
sti
popa
sti
int
dec
int
push
repz
xchg
lea
outs
cli
jo
loop
fldcw
(bad)
(bad)
(bad)
call
sub
out
pusha
sbb
mov
es
jecxz
push
(bad)
sbb
loop
adc
popa
jbe
jmp
xchg
or
or
jl
leave
enter
xchg
dec
(bad)
test
dec
(bad)
(bad)
(bad)
call
cmp
js
inc
xor
inc
pushf
push
sbb
call
ins
lods
fcomp
jnp
ja
(bad)
(bad)
push
retfw
inc
int3
xchg
ins
stos
fst
xchg
int
aad
xlat
bound
dec
sub
jge
sar
mov
ja
jp
cmp
(bad)
jg
pop
fucomi
fimul
mov
xchg
addr16
adc
fst
retf
(bad)
(bad)
call
call
push
or
sahf
adc
lock
pop
loop
cli
loop
mov
loop
cld
(bad)
ja
adc
xor
lahf
cld
sbb
(bad)
out
jns
mov
std
leave
xor
adc
(bad)
(bad)
jmp
sahf
cwde
xor
addr16
mov
mov
in
jmp
(bad)
(bad)
(bad)
dec
fsubr
stos
push
enter
jmp
sub
adc
int3
fwait
push
pushf
cdq
dec
dec
call
mov
xor
cmp
imul
call
fbstp
jbe
aam
mov
pop
aad
xchg
ss
dec
xchg
gs
mov
(bad)
mov
mov
outs
jg
pop
pop
jmp
iret
push
push
les
sbb
(bad)
(bad)
jmp
loop
adc
or
cmp
ret
jo
icebp
add
mov
mov
inc
jmp
dec
dec
(bad)
div
dec
dec
(bad)
pushf
adc
jge
mov
stc
sti
xchg
(bad)
(bad)
mov
push
lods
scas
jbe
mov
dec
outs
retf
sbb
retf
mov
sbb
mov
sbb
fisttp
(bad)
jmp
dec
mov
dec
xchg
push
sub
push
jmp
outs
in
in
xchg
fs
mov
fistp
mov
xchg
ss
mov
mov
ror
pop
inc
imul
(bad)
call
je
fs
(bad)
loopne
mov
dec
dec
arpl
push
sub
jno
test
cs
scas
pop
pop
push
inc
mov
jno
pop
aaa
xchg
lods
cli
out
or
idiv
nop
gs
mul
push
outs
(bad)
jmp
xor
pop
les
mov
daa
ins
fdivr
(bad)
push
push
retf
(bad)
imul
sub
es
xor
and
addr16
xchg
test
int
leave
xchg
lea
add
mov
sub
fisttp
scas
(bad)
mov
scas
push
xchg
jmp
in
dec
shr
or
add
repnz
push
push
inc
push
push
push
lock
sbb
(bad)
(bad)
jmp
sub
sub
lds
ret
les
repz
jmp
test
int
sbb
outs
dec
lock
add
add
cmps
jae
xchg
shr
and
or
pop
add
neg
mov
int
adc
data16
(bad)
(bad)
inc
addr16
fstp
jnp
mov
bound
and
xchg
fs
adc
sar
retf
cmp
cmps
out
out
pushf
leave
mov
fnstcw
hlt
(bad)
cmp
mov
xor
push
clc
xchg
sub
mov
scas
into
mov
int
imul
icebp
out
(bad)
(bad)
jmp
(bad)
cmp
add
xchg
cli
dec
(bad)
push
sti
inc
test
cld
in
jno
pop
or
jmp
(bad)
dec
fst
xchg
and
mov
loope
cmp
lods
fst
push
mov
fist
(bad)
(bad)
dec
add
stc
jne
scas
ins
jle
out
sbb
jb
pop
mov
sub
scas
cli
mov
movs
inc
nop
cmp
adc
test
mov
(bad)
(bad)
mov
xor
mul
mov
xor
ja
cmp
loope
xor
mov
stos
(bad)
(bad)
(bad)
push
sbb
test
cmps
add
mov
std
and
dec
retf
in
xchg
mov
jmp
(bad)
inc
lock
lods
ret
leave
or
jmp
jecxz
mov
mov
aad
lock
mov
push
loop
push
clc
(bad)
pop
fistp
push
add
std
inc
push
jmp
jo
jecxz
sbb
(bad)
cs
sbb
jmp
stos
rcr
popf
(bad)
(bad)
call
test
mov
pusha
stc
xlat
mov
jo
add
int
popa
fmulp
mov
std
push
xchg
(bad)
(bad)
jge
add
ss
sbb
repnz
lds
cmps
(bad)
call
les
pop
test
loope
in
and
call
cld
jno
clc
mov
in
sbb
push
mov
pop
sbb
popf
xchg
stos
mov
call
push
push
mov
(bad)
and
adc
cli
les
jecxz
push
cmp
jmp
fild
int3
loope
imul
ficom
ficomp
rcl
out
(bad)
(bad)
(bad)
call
xchg
and
mov
jmp
(bad)
test
push
sub
inc
mov
jmp
clc
test
cdq
repnz
fiadd
leave
sub
cmps
(bad)
(bad)
jg
mov
popf
sbb
gs
in
lds
push
ret
fucomp
(bad)
(bad)
(bad)
(bad)
mov
jne
test
imul
xchg
loope
sbb
xor
cs
test
(bad)
(bad)
(bad)
call
or
adc
dec
dec
sub
scas
scas
push
movs
xor
add
cli
(bad)
(bad)
dec
and
jp
jg
mov
lock
mov
lahf
aaa
cmps
sub
outs
jp
pop
xor
mov
cdq
fmul
dec
push
clc
pop
and
(bad)
jg
call
push
(bad)
ss
dec
pop
nop
adc
loopne
jnp
sub
cmp
(bad)
(bad)
jmp
cmp
and
fnstcw
xchg
test
sub
mov
(bad)
ja
rol
(bad)
(bad)
fbld
pushf
call
xor
push
jb
inc
(bad)
(bad)
and
dec
lods
sub
test
cs
xchg
mov
ss
stos
dec
mov
push
xchg
aad
or
sub
xchg
and
jmp
fcomip
jmp
pop
std
cmp
arpl
pop
cmp
icebp
inc
loop
push
mov
adc
jmp
shl
ins
cwde
push
pusha
mov
dec
pop
fisubr
mov
push
mov
pop
jecxz
sbb
je
loop
push
or
test
popf
jmp
out
dec
or
mov
jbe
jmp
sbb
xchg
mov
pop
popf
ins
sbb
test
inc
xchg
retf
(bad)
fcmovbe
loop
sbb
lock
ins
mov
or
fild
cmp
js
aam
aam
cmp
jl
inc
pop
pushf
xchg
iret
(bad)
(bad)
(bad)
jmp
mov
mov
dec
test
jle
mov
cmp
mov
ja
shl
jle
push
call
jp
(bad)
inc
or
jmp
xchg
jge
push
(bad)
(bad)
(bad)
jg
stos
loopne
shr
fsubr
inc
out
cmp
jl
dec
out
mov
ja
mov
add
(bad)
jmp
pop
add
out
retf
jp
cmp
and
loope
test
aam
add
jne
xor
sti
fdiv
jmp
cli
mov
scas
push
mov
fadd
adc
(bad)
(bad)
mov
call
dec
jp
sar
add
inc
adc
push
call
jmp
std
jne
enter
xor
rcr
jmp
and
add
(bad)
clc
xlat
iret
test
sti
pop
mov
out
fmul
or
mov
pop
push
jne
sub
inc
(bad)
(bad)
jmp
ror
mov
ret
scas
cmc
bound
cs
movs
clc
mov
test
mov
test
sub
(bad)
bound
ins
add
(bad)
(bad)
jge
fldenv
cmp
fisttp
push
pop
sub
inc
in
sub
(bad)
(bad)
(bad)
push
jmp
add
icebp
push
out
and
add
sbb
test
scas
cmp
(bad)
(bad)
(bad)
call
mov
xlat
xor
sub
push
sbb
imul
lea
mov
call
sub
jp
dec
push
inc
xchg
xchg
add
mov
pop
push
push
loop
std
fdivr
(bad)
(bad)
push
jns
(bad)
fs
jle
xor
nop
imul
(bad)
out
(bad)
cli
fadd
cmp
enter
aas
jne
pop
xlat
bound
cli
jg
int3
cmps
xor
mov
xor
pop
pop
sub
pop
xchg
add
mov
in
sub
and
aad
(bad)
(bad)
call
and
add
jo
mov
fld
adc
retf
loope
inc
call
(bad)
jl
mov
push
js
sbb
(bad)
popa
out
fisttp
stos
out
jnp
(bad)
(bad)
(bad)
(bad)
std
fwait
cmp
retf
jno
mov
pop
fst
fs
aaa
cmp
push
(bad)
(bad)
(bad)
push
scas
push
leave
xor
cmp
int
mov
jle
ins
dec
cmc
push
clc
xor
xor
cmp
(bad)
jmp
pop
pop
lock
jbe
xchg
retf
mov
popa
push
adc
adc
xor
inc
sar
cmp
cmp
adc
fiadd
shl
(bad)
mov
call
lods
xor
sbb
xor
xor
(bad)
fild
mov
jbe
inc
push
retf
into
push
mov
push
addr16
loope
(bad)
mov
(bad)
fwait
rcr
mov
not
ror
outs
mov
pop
loope
int3
in
mov
push
sub
jg
sub
(bad)
(bad)
call
dec
add
jle
pop
inc
bound
(bad)
push
cdq
ror
push
mov
lock
sbb
(bad)
(bad)
in
inc
sub
mov
xor
retf
int3
add
push
ins
mov
fsubr
cmp
jo
psllq
ins
js
push
call
or
stos
xchg
retf
sbb
sbb
into
add
inc
gs
dec
mov
pop
add
stos
pop
cmp
(bad)
(bad)
call
mov
mov
sbb
test
or
int
and
mov
mov
movs
(bad)
(bad)
(bad)
(bad)
mov
test
gs
or
aaa
sbb
pop
jno
xchg
and
(bad)
mov
imul
mov
lods
bound
pushf
sbb
rcl
push
std
les
pop
pop
fdivr
(bad)
(bad)
call
cmps
sbb
jle
out
pop
jmp
aam
dec
push
fdivr
iret
cs
pop
xchg
cmp
sbb
cmps
(bad)
jmp
dec
into
jecxz
push
pop
out
jg
pop
push
pop
jmp
(bad)
add
(bad)
dec
or
jecxz
popa
retf
mov
jl
(bad)
mov
push
jl
cwde
(bad)
(bad)
(bad)
push
xchg
pop
adc
push
mov
or
int
sub
cmp
mov
inc
(bad)
(bad)
dec
icebp
mov
mov
push
mov
mov
rcl
jge
sbb
loopne
fcomip
ror
adc
or
pop
push
inc
test
sub
(bad)
(bad)
call
cmps
push
(bad)
xchg
leave
jne
dec
das
stc
aam
mov
mov
pusha
or
(bad)
call
movs
push
dec
es
test
xchg
pop
ss
jmp
dec
stos
test
bound
fld
cmps
and
pop
lahf
add
iret
push
(bad)
(bad)
mov
dec
adc
push
mov
nop
dec
xor
popa
xchg
jle
test
xchg
call
mov
mov
movs
push
test
mov
add
test
lods
inc
add
lods
ret
rcl
imul
adc
das
clc
call
movs
pop
push
sbb
pushf
push
xchg
push
inc
enter
jp
fdiv
fwait
sbb
(bad)
(bad)
(bad)
cmp
inc
outs
cmps
movs
movs
ret
adc
cmps
mov
loop
xor
cmp
or
in
(bad)
(bad)
(bad)
dec
adc
in
jp
dec
out
aam
mov
test
data16
pop
ret
xor
pop
or
push
(bad)
(bad)
dec
imul
inc
or
mov
xor
sub
pop
cmp
fstp
cmps
inc
test
add
push
dec
enter
jle
jmp
pop
mov
test
loope
rcl
rol
and
mov
es
mov
rol
nop
in
mov
mov
loop
jb
(bad)
(bad)
(bad)
call
push
push
push
repz
cli
movs
mov
iret
fidiv
rol
xor
inc
xchg
sub
jne
(bad)
(bad)
fcomip
movs
cmp
nop
out
stos
pop
outs
test
outs
dec
in
(bad)
pop
bound
(bad)
jmp
std
mov
test
mov
mov
test
mov
dec
test
(bad)
dec
stos
ins
sub
jge
adc
sbb
dec
pop
retf
mov
mov
jbe
(bad)
lds
inc
es
cmps
add
fadd
dec
(bad)
push
mov
(bad)
(bad)
push
addr16
stos
test
jmp
cdq
mov
das
or
mov
sbb
sub
imul
inc
xor
(bad)
outs
nop
inc
fsub
jmp
dec
cmp
(bad)
(bad)
(bad)
dec
or
cwde
xchg
jne
push
dec
inc
cmp
out
repnz
shl
xor
inc
inc
and
inc
scas
imul
add
adc
mov
lods
xor
(bad)
jg
and
pop
adc
cmp
(bad)
(bad)
call
jne
ret
mov
mov
popf
mov
pop
xor
je
call
mov
sub
xchg
adc
test
sub
jne
(bad)
mov
adc
out
scas
inc
call
(bad)
mov
test
ja
(bad)
(bad)
call
xchg
sbb
xlat
fidiv
out
pop
jl
aad
loope
sub
adc
(bad)
(bad)
mov
push
mov
push
dec
add
pop
and
scas
cmc
mov
or
icebp
and
frstor
scas
fmul
mov
push
pop
sub
es
test
(bad)
(bad)
inc
es
dec
pop
and
jle
adc
push
pop
aad
dec
pop
(bad)
(bad)
(bad)
push
jmp
mov
iret
fstp
or
mov
stos
sbb
sub
xchg
pop
mov
clc
mov
sub
push
adc
mov
xor
pop
das
push
shl
mov
rol
(bad)
call
aad
mov
fistp
sub
xchg
repz
mov
call
ror
out
xor
add
retf
sub
(bad)
(bad)
inc
xor
push
cmps
call
or
xchg
xlat
sub
in
ret
pop
and
out
push
inc
xchg
sub
xchg
and
in
(bad)
(bad)
call
sub
push
cmp
scas
fldenv
add
lahf
lods
call
pop
(bad)
(bad)
(bad)
jmp
fdivr
lahf
cld
in
hlt
icebp
mov
shl
jo
cmp
sbb
inc
(bad)
(bad)
(bad)
push
dec
(bad)
sti
call
dec
clc
retf
push
xor
ret
add
mov
(bad)
(bad)
(bad)
call
mov
push
fstp
push
push
addr16
jb
imul
sti
popa
jbe
scas
cli
(bad)
(bad)
fcmovnb
es
inc
hlt
fucomi
cmc
sbb
sub
xlat
jecxz
or
jbe
mov
call
aam
jmp
jbe
fistp
(bad)
pop
mov
xchg
add
(bad)
(bad)
mov
cmc
fcmovb
xor
in
jae
retf
ja
aas
push
fcom
sbb
int
(bad)
(bad)
(bad)
jmp
test
loope
pusha
cmc
push
mov
push
dec
gs
cs
fistp
inc
(bad)
in
(bad)
jg
jg
dec
jg
adc
idiv
aas
lea
aam
(bad)
adc
mov
mov
fild
call
pop
bound
clc
call
dec
in
or
loope
psubd
xor
sub
cli
fwait
jae
das
cmps
(bad)
fild
push
(bad)
pushf
cld
and
icebp
(bad)
adc
cmp
jnp
inc
sar
jle
xchg
cmp
sub
xchg
(bad)
(bad)
mov
sbb
icebp
jp
and
mov
adc
(bad)
jmp
sub
pop
mov
mov
cmp
jle
add
popa
in
das
(bad)
(bad)
(bad)
inc
cmp
jb
int
xchg
cwde
shr
add
rcl
mov
(bad)
(bad)
call
scas
cmp
enter
pop
arpl
add
(bad)
dec
push
test
add
mov
(bad)
(bad)
jmp
(bad)
sbb
je
push
cmp
es
in
das
inc
pushf
leave
adc
leave
push
es
mov
das
cli
inc
xor
dec
shl
and
adc
shl
adc
inc
mov
lods
hlt
(bad)
(bad)
(bad)
clc
imul
cwde
sbb
xlat
int
jmp
jne
retf
pop
pop
je
outs
call
(bad)
inc
mov
ret
inc
push
mov
and
jb
push
adc
rol
(bad)
inc
sbb
cmp
out
mul
sbb
add
(bad)
sbb
inc
add
icebp
out
xchg
je
loop
call
pop
sar
(bad)
(bad)
jmp
in
js
xor
mov
jbe
das
mov
sbb
mov
fdivr
(bad)
(bad)
call
les
call
jp
movs
test
repz
and
inc
mov
pushf
mov
push
adc
pop
and
sbb
mov
add
cwde
add
fimul
arpl
mov
mov
sub
retf
mov
adc
sbb
sar
jb
inc
sbb
xchg
fldcw
mov
ret
add
jecxz
and
ins
mov
mov
xlat
lock
(bad)
(bad)
(bad)
push
je
jecxz
(bad)
xchg
cmp
aam
enter
add
and
nop
xchg
and
add
fwait
(bad)
(bad)
(bad)
call
jo
push
(bad)
xor
jb
shl
mov
test
xlat
ret
sti
repnz
loop
adc
js
xor
xchg
sub
pushf
(bad)
adc
retf
cdq
call
(bad)
fs
sub
out
out
dec
ds
ins
mov
gs
dec
jbe
movs
addr16
lock
call
and
jle
mov
sbb
mov
stos
shl
imul
sbb
frstor
sbb
mov
nop
enter
cmp
aaa
loope
fdiv
(bad)
(bad)
xchg
pusha
hlt
jge
fwait
push
fdivr
lods
mov
mov
out
jge
clc
inc
not
lods
sbb
daa
test
(bad)
push
pop
repnz
xchg
out
sbb
mov
mov
add
fnstsw
mov
pop
xchg
jbe
mov
jl
stos
xchg
call
or
pop
fs
popa
ret
out
push
xor
mov
push
xchg
mov
(bad)
jmp
leave
push
jmp
inc
scas
or
push
xor
jnp
pop
fstp
int
(bad)
(bad)
push
int3
mov
mov
push
(bad)
dec
jnp
jle
jmp
jl
clc
pop
mov
stos
(bad)
(bad)
(bad)
(bad)
(bad)
js
jl
mov
mov
lea
jae
and
adc
push
das
int
mov
(bad)
(bad)
(bad)
call
mov
jb
lods
test
ins
fst
jp
sub
jecxz
int
(bad)
(bad)
(bad)
dec
ret
cmp
cli
shl
scas
mov
stos
jmp
mov
addr16
out
popf
cmp
or
(bad)
(bad)
inc
and
jle
dec
mov
test
test
pop
fnstsw
fcos
(bad)
(bad)
jmp
push
out
rcl
ret
daa
mov
push
mov
in
push
ds
ficom
push
(bad)
(bad)
(bad)
out
cli
jmp
sub
sub
movs
imul
add
pop
sbb
jmp
movs
test
retf
sahf
xor
(bad)
(bad)
jmp
popf
cli
clc
jmp
ret
in
and
cld
mov
mov
adc
pop
out
gs
(bad)
(bad)
jmp
loope
daa
add
test
arpl
adc
ja
rol
sbb
pop
cmp
hlt
add
cmp
jp
or
sub
pop
push
mov
jmp
shl
push
not
clc
xlat
xchg
inc
in
in
dec
idiv
jmp
cli
pop
lock
push
in
jo
aam
fmul
call
sub
(bad)
(bad)
jmp
je
mov
fcomi
movs
sub
jge
shl
cmc
call
dec
mov
push
fadd
adc
xchg
and
bound
push
call
loopne
sub
mov
sbb
bound
in
scas
call
inc
pop
mov
fst
pop
das
sub
inc
mov
into
sub
test
(bad)
jmp
or
popa
iret
jecxz
or
inc
push
mov
inc
mov
clc
fistp
lea
mov
cmp
clc
inc
xchg
push
loope
sahf
call
scas
gs
sar
(bad)
addr16
fild
or
test
es
cmps
in
(bad)
(bad)
jmp
lock
pusha
adc
mov
push
add
xor
sub
stos
(bad)
(bad)
fdivr
out
(bad)
(bad)
leave
jp
xlat
dec
or
ja
xchg
leave
pop
mov
inc
and
fst
popf
dec
dec
cdq
je
stc
push
xchg
adc
in
in
movs
xor
scas
mov
push
(bad)
loope
pop
cld
inc
push
or
mov
xor
retf
(bad)
fidivr
jmp
call
out
mov
mov
leave
and
cmp
jb
mov
retf
sub
mov
or
imul
sbb
and
pop
mov
test
or
add
cmp
jbe
push
sahf
cmp
arpl
dec
nop
pop
xchg
and
mov
xor
mov
int3
in
jmp
cli
inc
pop
(bad)
(bad)
call
or
mov
ss
jmp
sub
push
mov
ins
(bad)
mov
outs
clc
adc
out
stos
pop
jmp
jg
movs
popa
xchg
nop
nop
inc
add
inc
adc
push
rcl
fldcw
pop
outs
fxch
push
test
out
pop
(bad)
aam
adc
mov
clc
(bad)
jg
into
rol
mov
pop
test
mov
repz
dec
xor
mov
ins
int
fisttp
cmp
adc
xchg
add
inc
mov
leave
movs
cs
or
adc
clc
(bad)
jmp
in
add
cmps
push
xchg
(bad)
mov
ins
(bad)
sub
xlat
fnsave
pop
imul
push
shl
xchg
jecxz
repz
test
add
jg
(bad)
push
pop
dec
push
adc
in
pop
in
sbb
jle
jns
mov
fcomp
or
fs
ds
jge
shl
icebp
(bad)
push
mov
pop
sbb
(bad)
xchg
add
push
(bad)
(bad)
mov
pop
retf
out
jp
pop
jmp
loope
repnz
jmp
inc
adc
mov
xor
inc
(bad)
pop
xchg
fcomp
cmp
(bad)
iret
inc
add
push
sub
ror
scas
sar
(bad)
(bad)
(bad)
out
add
xchg
dec
pop
inc
cmove
dec
aad
out
in
xchg
popa
(bad)
(bad)
(bad)
push
jg
test
jne
popa
(bad)
or
rol
sbb
(bad)
jmp
scas
cmc
fistp
cli
mov
mov
add
mov
add
(bad)
(bad)
push
aam
jmp
addr16
fsub
in
xchg
push
bound
test
icebp
(bad)
(bad)
(bad)
call
fisttp
leave
arpl
cmp
ficom
xchg
jb
xchg
pop
js
adc
(bad)
(bad)
dec
inc
repz
cmp
int
(bad)
sub
mov
jmp
fcos
(bad)
(bad)
push
scas
pop
dec
xchg
sub
jp
movs
inc
adc
ins
dec
mov
imul
xchg
ins
jge
lea
dec
mov
mov
cmp
ins
icebp
(bad)
(bad)
(bad)
call
push
loope
and
jno
add
arpl
push
jl
mov
mov
ror
ret
xchg
adc
in
es
ret
and
cld
(bad)
push
icebp
pop
div
mov
cmp
adc
outs
imul
int
(bad)
(bad)
(bad)
jmp
mov
cdq
addr16
inc
dec
es
sub
stos
sub
adc
rcr
outs
out
int
dec
test
push
bnd
in
fcom
shl
pop
mov
dec
lock
call
mov
repnz
outs
sub
(bad)
(bad)
(bad)
call
cmp
mov
pop
mov
(bad)
dec
mov
cmp
int3
sbb
(bad)
jmp
loop
cli
mov
icebp
xor
jae
pop
push
(bad)
(bad)
jmp
mov
dec
into
and
shr
sub
jns
jb
mov
pusha
int3
dec
xchg
sub
int3
js
mov
ret
mov
and
xchg
ins
test
push
fmul
mov
push
bound
mov
or
xor
xchg
mov
mov
mov
(bad)
(bad)
(bad)
jmp
sar
pusha
mov
cdq
bound
cmp
mov
dec
cdq
sub
xor
clc
scas
clc
cs
movs
arpl
pusha
sub
add
push
jbe
(bad)
(bad)
jmp
pop
push
ret
jecxz
mov
fucom
in
pusha
mov
xchg
clc
cwde
addr16
sbb
(bad)
jnp
cmp
retf
das
cmp
push
xor
fsub
ja
cmp
add
or
(bad)
(bad)
(bad)
(bad)
jg
(bad)
push
das
sahf
mov
push
or
cmp
popa
adc
cdq
sar
jo
sub
xlat
xchg
sahf
clc
nop
(bad)
(bad)
dec
(bad)
retf
(bad)
adc
xchg
mov
js
test
(bad)
(bad)
(bad)
mov
push
ins
xor
jecxz
mov
mov
xor
inc
scas
mov
push
(bad)
inc
aam
out
test
xchg
mov
loop
inc
pop
mov
mov
out
push
sbb
adc
call
and
mov
sub
out
mov
arpl
cmp
out
lea
loopne
scas
xor
mov
mov
add
add
popa
dec
(bad)
(bad)
(bad)
inc
mov
or
inc
arpl
push
or
mov
xor
jb
fidivr
sbb
(bad)
(bad)
(bad)
(bad)
fdivr
es
lock
dec
cmp
clc
dec
mov
push
pushf
cwde
xchg
pop
fs
or
mov
xor
jmp
out
outs
retf
pop
lock
outs
adc
mov
mov
cld
jp
repnz
jae
out
mov
(bad)
(bad)
(bad)
dec
addr16
xlat
div
nop
push
inc
xor
les
mov
push
lea
cmp
loop
jmp
pop
add
cmp
clc
(bad)
ins
push
mov
adc
bound
sub
xchg
mov
jg
dec
ds
xor
cli
push
inc
dec
lea
sbb
(bad)
inc
sub
mov
mov
mov
jne
fldenv
out
in
loopne
pop
jb
mov
(bad)
call
push
cli
cli
rcr
pop
fldenv
je
push
jb
pop
fst
xor
cmp
(bad)
jmp
loopne
xchg
cli
or
jl
(bad)
push
test
stc
inc
and
sub
jmp
sahf
xor
mov
inc
inc
sub
mov
pop
push
add
jl
lea
mov
scas
test
jne
aad
pop
xlat
gs
add
lods
inc
cmp
loope
(bad)
dec
loope
xor
int
mov
jmp
packssdw
fdiv
inc
push
(bad)
(bad)
fild
jle
sti
xchg
outs
push
test
cmovge
inc
fcom
aam
(bad)
(bad)
(bad)
std
sub
mov
mov
sbb
jae
xchg
cld
push
sbb
mov
dec
mov
jg
mov
hlt
add
stc
retf
push
mov
inc
cwde
sahf
out
lods
(bad)
je
xor
jns
mul
fcomip
(bad)
dec
data16
pop
ficom
movs
adc
jbe
ret
xchg
dec
aad
(bad)
(bad)
(bad)
mov
test
mov
xchg
je
addr16
cli
out
mov
jo
imul
mov
cld
push
es
int
or
test
imul
fs
or
inc
call
ja
nop
inc
pop
jo
adc
pop
mov
mov
outs
mov
ja
sbb
dec
xor
or
test
ss
(bad)
sti
out
mov
cmp
idiv
sub
jmp
(bad)
push
movs
sub
loopne
pop
mov
and
mov
jb
adc
mov
inc
jae
cmp
mov
mov
retf
(bad)
mov
xlat
jo
loope
mov
sbb
adc
cmc
jg
mov
adc
arpl
shl
(bad)
mov
aad
mov
adc
sti
and
call
lahf
hlt
jne
(bad)
fld
loope
fist
and
(bad)
call
mov
imul
cmp
(bad)
xchg
dec
inc
gs
lods
push
dec
xchg
fstp
lahf
mov
jge
(bad)
(bad)
(bad)
dec
mov
pop
mov
js
mov
popa
or
xor
adc
jmp
stos
jo
dec
lods
imul
and
faddp
adc
or
call
fiadd
adc
mov
jmp
je
jp
pop
ja
(bad)
jmp
xor
int3
pop
outs
jne
add
fisub
cld
mov
inc
push
(bad)
(bad)
(bad)
jmp
ins
and
sahf
adc
sub
loope
jg
call
(bad)
jg
jmp
shl
cmp
arpl
push
cli
jbe
test
xchg
dec
or
inc
jae
ficomp
ficomp
push
popa
scas
cmp
mov
into
(bad)
inc
sub
push
aas
adc
mov
fcmovnbe
jmp
cli
(bad)
mov
mov
pop
mov
adc
adc
cld
sbb
sub
(bad)
(bad)
(bad)
jmp
pop
push
xchg
movs
ss
shl
rcl
les
ja
(bad)
xor
outs
add
mov
(bad)
(bad)
fld
sbb
ret
enter
test
jo
cdq
xor
mov
adc
jle
sbb
xor
pop
and
push
inc
mov
inc
lock
imul
inc
sbb
sahf
ss
mov
(bad)
(bad)
inc
and
test
mov
rcl
stos
lods
sbb
(bad)
(bad)
(bad)
call
jmp
rcl
cmp
into
or
pop
xor
test
movs
sub
push
adc
pop
test
push
fs
je
daa
or
pop
mov
cli
xchg
dec
jle
push
dec
(bad)
(bad)
mov
repz
shr
test
sbb
add
movs
xor
and
mov
fwait
arpl
pop
adc
aas
or
xor
outs
sub
push
pop
add
fwait
inc
mov
cdq
lea
rcl
adc
mov
cmp
dec
jae
xchg
sub
inc
lea
fcomip
(bad)
(bad)
out
pop
sbb
mov
inc
sub
ret
xchg
or
out
call
scas
cli
add
adc
fldcw
mov
mov
ror
mov
pop
clc
jmp
mov
add
test
loop
xor
out
pop
(bad)
(bad)
inc
or
lods
push
sub
ror
xchg
add
jno
(bad)
(bad)
call
cmps
(bad)
iret
xchg
push
dec
add
loopne
mov
bound
jns
mov
cli
das
xor
dec
iret
mov
inc
(bad)
dec
retf
cdq
sub
clc
out
cli
out
retf
jmp
cmp
pop
mov
lock
(bad)
jne
test
cmc
mov
sahf
push
or
inc
imul
fwait
xor
or
and
pop
pop
cmc
inc
xchg
xchg
inc
push
out
push
test
xchg
inc
jmp
call
adc
shl
lods
sbb
xor
xor
inc
inc
iret
movzx
(bad)
(bad)
(bad)
cmp
push
push
fisubr
retf
(bad)
pusha
sub
in
sahf
xor
cdq
(bad)
(bad)
(bad)
call
enter
xor
in
push
xchg
xchg
and
pop
push
adc
xor
adc
mov
call
dec
cwde
and
mov
dec
out
adc
add
nop
inc
mov
(bad)
jmp
adc
fadd
mov
xchg
dec
jae
add
jecxz
mov
sub
pop
clc
(bad)
call
je
dec
sub
call
rcl
fimul
test
ja
imul
or
pop
(bad)
inc
pushf
in
fadd
cwde
mov
or
jnp
fst
dec
scas
xchg
sub
push
jnp
push
adc
fs
adc
(bad)
(bad)
call
daa
xchg
xchg
sbb
cmps
pusha
push
and
hlt
out
in
sbb
(bad)
call
pop
jb
ja
jnp
rcr
popa
(bad)
in
sub
xchg
sub
sub
and
add
imul
(bad)
jmp
lods
inc
adc
sahf
jo
push
daa
(bad)
dec
sbb
fs
push
add
mov
dec
dec
int3
inc
pushf
stos
pop
pushf
or
push
cmp
aam
ins
adc
and
add
(bad)
(bad)
jmp
outs
js
lods
or
aad
sbb
mov
xor
int3
sub
or
pop
(bad)
(bad)
in
call
xchg
inc
test
or
js
das
lods
imul
adc
mov
dec
or
push
cmp
adc
mov
out
push
xchg
mov
xor
(bad)
(bad)
(bad)
call
push
fild
jo
(bad)
movs
clc
pop
mul
repnz
push
jmp
and
push
xchg
enter
(bad)
jmp
and
bound
push
(bad)
into
int3
inc
cwde
jge
mov
scas
fiadd
push
leave
cli
into
loopne
ja
push
dec
nop
cwde
sar
jl
cmp
into
clc
jmp
adc
and
xchg
call
xor
(bad)
inc
daa
push
pop
lock
jbe
inc
and
and
jae
xchg
adc
call
mov
pusha
lds
mov
sahf
repnz
adc
xor
pop
and
dec
pusha
mov
(bad)
in
push
dec
mov
sub
pop
and
les
js
loop
leave
cmp
clc
(bad)
(bad)
call
inc
out
mov
imul
inc
iret
dec
jl
xchg
add
or
add
add
sbb
test
xchg
or
sub
and
idiv
push
pop
or
push
and
(bad)
sar
jle
(bad)
fsubrp
sahf
test
fucomip
movs
xor
(bad)
(bad)
inc
lea
push
cs
inc
xor
test
dec
test
outs
inc
sbb
cmp
push
(bad)
(bad)
(bad)
call
cmp
jecxz
scas
(bad)
add
pop
aam
sub
test
inc
and
aad
cld
and
addr16
mov
sbb
add
dec
and
xor
jp
and
les
add
mov
pusha
push
(bad)
(bad)
(bad)
inc
mov
leave
lods
ds
adc
jne
ret
sub
cmp
inc
les
add
mov
(bad)
call
add
mov
movs
push
dec
sahf
icebp
ja
lods
jns
out
xchg
(bad)
push
adc
loop
call
cmp
data16
repnz
inc
inc
mov
ds
pushf
sub
cmp
les
(bad)
jmp
test
push
and
pop
dec
gs
call
sub
push
outs
aam
jmp
(bad)
sti
pop
movs
fucomip
push
int
mov
lds
jl
lahf
(bad)
xor
test
stc
(bad)
(bad)
call
mov
cmp
push
pop
dec
jmp
rcl
dec
inc
movs
aad
idiv
dec
outs
fidiv
jo
sub
enter
and
out
out
xchg
inc
cld
add
jle
mov
ds
cmp
int3
mov
pop
lock
call
call
fisttp
fcmovb
ja
lock
ds
jmp
or
inc
test
jne
lods
je
out
out
push
outs
dec
dec
adc
xor
sti
sbb
lods
jle
(bad)
mov
pop
das
test
rol
push
pop
mov
add
sbb
add
(bad)
(bad)
(bad)
jmp
inc
fwait
jae
movs
dec
sub
dec
movs
mov
push
ins
aaa
mov
popa
inc
int3
pop
sbb
mov
pop
or
in
push
xchg
aam
daa
je
push
(bad)
xchg
popf
cmp
mov
(bad)
(bad)
(bad)
jmp
cmps
es
sub
imul
lahf
cmps
mov
push
in
popa
idiv
xor
push
in
(bad)
(bad)
(bad)
dec
clc
xchg
sti
push
std
pop
mov
out
(bad)
shl
sbb
in
pop
cli
push
icebp
movs
cdq
push
std
sub
(bad)
mov
cmp
jp
call
dec
gs
int
sti
in
cmp
(bad)
push
imul
sub
jge
fcomp
sbb
inc
(bad)
test
aad
std
jmp
mov
or
out
add
sub
(bad)
fist
popa
mov
fwait
mov
jb
mov
(bad)
call
xchg
lahf
jne
call
bound
jo
test
xchg
cmp
lds
adc
push
test
stc
in
aad
sub
mov
call
cli
shl
jmp
js
mov
inc
xor
push
(bad)
(bad)
call
ds
pop
ja
fisttp
pop
rcl
out
mov
dec
pop
mov
aam
cmps
and
imul
sbb
push
jp
xor
mov
mov
sbb
(bad)
pusha
stos
push
fadd
push
movs
and
dec
lock
add
pop
mov
cmp
ins
jmp
ficom
rcr
ds
sub
push
add
es
sub
cdq
clc
(bad)
(bad)
call
shl
dec
out
jno
sbb
neg
mov
(bad)
(bad)
mov
ins
mov
mov
mov
xlat
popf
arpl
gs
out
sub
dec
paddsw
jae
jge
pusha
mov
dec
gs
aaa
and
sahf
not
(bad)
mov
fdivr
jge
pop
cmp
xchg
xor
xchg
adc
adc
inc
fdivp
ret
push
pop
inc
jne
cs
test
mov
mov
cmp
popf
cld
sbb
jg
jmp
in
(bad)
cmps
test
push
mov
add
push
dec
pop
sub
push
aaa
(bad)
(bad)
jmp
sub
push
sbb
xor
jecxz
inc
nop
jg
js
mov
xchg
or
(bad)
and
js
je
and
fbstp
xor
repz
stos
call
xchg
repnz
xchg
popf
or
dec
xchg
dec
push
daa
das
(bad)
(bad)
(bad)
call
je
push
test
jmp
or
xor
test
cmp
test
(bad)
jmp
(bad)
cmps
sbb
loopne
clc
std
sbb
inc
push
dec
xchg
jg
ficomp
call
mov
aaa
movs
mov
push
jnp
ret
mov
(bad)
(bad)
(bad)
push
add
addr16
aas
cld
fistp
out
aas
(bad)
mov
push
jbe
rcl
stos
imul
sar
dec
xor
mov
clc
jl
scas
add
fistp
(bad)
(bad)
call
adc
dec
xchg
inc
mov
lods
pop
xchg
dec
retf
mov
xor
(bad)
(bad)
(bad)
inc
cs
call
(bad)
mov
dec
and
xchg
xlat
or
cmp
adc
and
(bad)
(bad)
inc
mov
nop
jp
mov
cli
mov
push
cmp
jmp
jecxz
pop
jecxz
dec
adc
por
(bad)
(bad)
cmc
shl
or
adc
clc
movs
repnz
push
out
adc
test
clc
neg
sar
call
jge
sub
dec
mov
cmps
mov
pop
mov
icebp
in
mov
mov
cmp
or
dec
mov
test
push
adc
fistp
push
cmc
mov
sub
mov
push
jo
jle
aam
dec
ins
ds
mov
inc
nop
(bad)
outs
call
daa
and
xchg
push
cmp
(bad)
(bad)
(bad)
inc
push
int
imul
mov
pop
dec
push
push
enter
mov
popa
or
push
dec
call
movs
dec
xchg
inc
imul
and
stos
cmc
jmp
(bad)
(bad)
(bad)
js
cmps
sbb
stos
fwait
mov
push
sbb
mov
push
out
jno
cmp
ja
(bad)
(bad)
(bad)
inc
cmp
sbb
cmp
jle
mov
ret
jp
add
movs
imul
movs
(bad)
dec
jmp
jge
dec
cmp
mov
retf
sub
(bad)
(bad)
(bad)
dec
mov
outs
push
call
jle
jp
fwait
sti
pop
sbb
ins
aad
push
inc
sbb
cmps
jg
(bad)
call
adc
mov
mov
xchg
inc
mov
scas
cli
inc
bound
mov
cli
push
jnp
mov
dec
adc
adc
jmp
jae
lock
pop
stos
fimul
aas
dec
jp
(bad)
(bad)
call
(bad)
iret
ins
jl
clc
inc
enter
in
push
mov
sbb
aas
pushf
cmp
jmp
and
sbb
dec
add
sub
ss
in
or
imul
mov
inc
push
pop
retf
mov
(bad)
fs
pop
adc
fs
sbb
mov
sub
ds
repnz
(bad)
(bad)
inc
mov
jmp
cmp
xchg
or
repnz
xchg
jns
jge
ficomp
and
(bad)
(bad)
mov
mov
sahf
push
movs
movs
xor
(bad)
(bad)
popf
xchg
(bad)
xchg
inc
dec
mov
jmp
shr
imul
and
cmp
push
inc
cli
stos
and
inc
outs
ror
and
out
mov
(bad)
jmp
sbb
mov
pop
xor
xchg
dec
pop
pop
mov
inc
jo
xchg
retf
(bad)
inc
adc
lods
mov
(bad)
pop
ror
rol
mov
(bad)
inc
pushf
or
pop
ret
cmp
and
xchg
or
add
sub
sbb
(bad)
(bad)
inc
jno
jbe
add
rcl
(bad)
xor
sub
jne
(bad)
(bad)
call
mov
xchg
mov
adc
sahf
les
cwde
mov
dec
ins
dec
sub
rcl
mov
aaa
imul
or
bnd
mov
(bad)
out
sbb
cli
fdivr
jno
cmps
jge
(bad)
and
(bad)
jmp
sub
adc
rol
cmp
retf
daa
xor
stos
push
cmp
(bad)
(bad)
dec
cmp
aam
xchg
cs
ds
and
xchg
and
xor
adc
(bad)
(bad)
call
daa
xor
xchg
retf
loope
inc
adc
pop
push
pushf
pop
int
aaa
adc
(bad)
inc
outs
ficomp
sub
push
test
mov
sub
push
lods
clc
sub
push
xor
xor
or
jmp
aad
cmps
(bad)
(bad)
(bad)
jmp
test
sub
dec
ficom
js
ret
or
pusha
dec
pop
xor
gs
inc
je
or
xor
mov
pop
push
inc
push
stos
and
mov
xchg
dec
lahf
cmp
jge
int3
(bad)
(bad)
(bad)
(bad)
dec
xor
pop
into
jnp
pop
add
adc
and
inc
adc
inc
mov
jmp
mov
test
cmp
jns
xor
dec
mov
jl
jecxz
(bad)
(bad)
call
cmp
sbb
lods
inc
jg
mov
scas
inc
sub
jbe
or
adc
ins
outs
fdivr
cmps
call
(bad)
(bad)
(bad)
call
pmaxsw
std
nop
in
xchg
cmc
jg
fcmovu
jg
mov
cmp
fldenv
outs
jmp
xchg
cmps
loop
retf
fidiv
adc
mov
clc
rol
inc
lea
out
pushf
adc
pusha
int3
sbb
aam
push
adc
fcomip
mov
pop
xor
add
popf
mov
xor
dec
sub
push
inc
jmp
mov
in
mov
adc
pop
lods
fwait
leave
push
pop
push
and
pop
out
inc
stc
xor
test
xlat
call
jmp
and
pop
jo
and
cmps
clc
movs
les
dec
xchg
cmc
fimul
add
adc
xor
mov
mov
jb
mov
jno
sub
(bad)
mov
cwde
mov
mov
pop
pop
iret
xor
lods
jno
data16
pushf
(bad)
(bad)
btr
lahf
adc
jne
fild
pop
jp
popf
jmp
mov
jge
adc
push
gs
dec
fimul
cmps
aaa
outs
fld
add
stos
or
jge
jmp
(bad)
jnp
push
test
pop
(bad)
in
fdivr
repz
mov
cmp
push
adc
addr16
pop
(bad)
(bad)
(bad)
call
mov
inc
sbb
les
nop
mov
sbb
cmp
aaa
mov
pop
out
outs
inc
xor
jecxz
mov
fnsave
(bad)
cmp
pop
not
aam
cdq
inc
int3
int3
pop
fidivr
sub
xchg
mov
cmp
inc
pop
push
ins
lea
test
adc
mov
stos
(bad)
dec
mov
pop
xchg
cs
sub
jp
fwait
in
iret
xchg
cmp
loop
inc
xchg
cdq
(bad)
(bad)
dec
pop
outs
jp
lahf
popa
outs
(bad)
in
pop
cli
outs
in
jge
fidiv
push
fisubr
push
mov
imul
mov
es
sub
push
adc
je
(bad)
(bad)
(bad)
push
lock
aaa
loopne
iret
(bad)
lods
or
fist
pop
inc
sahf
loope
aas
rcr
jg
inc
jae
repz
das
ret
leave
fbstp
test
out
(bad)
(bad)
(bad)
jmp
into
dec
mov
and
mov
mov
ss
(bad)
cmp
fcmovnb
fs
adc
(bad)
push
dec
fadd
rcr
cdq
sub
in
(bad)
jmp
push
out
and
adc
mov
sbb
mov
outs
mov
mov
std
xchg
pusha
cwde
retf
out
xchg
ins
mov
or
adc
(bad)
jmp
test
xchg
gs
xchg
dec
push
mov
out
cmp
sbb
jl
outs
mov
pop
jbe
add
adc
mov
fst
adc
cld
(bad)
call
addr16
rcl
int3
pop
jmp
jp
jb
dec
(bad)
sar
(bad)
jmp
in
push
in
xor
retf
idiv
outs
clc
out
adc
inc
imul
fidivr
loopne
(bad)
(bad)
jle
push
cdq
adc
jbe
ja
ins
sub
mov
sub
sub
add
xchg
xlat
(bad)
(bad)
(bad)
mov
sbb
mov
cmp
das
addr16
(bad)
fdivr
imul
cld
(bad)
(bad)
fnsave
xor
dec
cmp
loopne
inc
mov
sub
and
cmp
cmps
and
lock
in
ret
fimul
loop
jns
outs
and
call
jbe
loop
or
imul
fcomip
call
inc
fwait
adc
pop
idiv
sti
xchg
pop
imul
adc
(bad)
jmp
clc
push
shl
mov
es
repnz
leave
push
dec
cdq
addr16
(bad)
(bad)
push
inc
clc
xchg
in
push
xchg
out
out
movs
int3
xchg
aas
fs
cmovne
sub
aaa
loop
or
int
mov
ins
test
dec
pushf
call
jg
outs
std
adc
rcl
(bad)
ds
call
loopne
ja
cmp
(bad)
(bad)
(bad)
jmp
in
test
in
pop
pop
fcom
int
les
jecxz
or
mov
or
jb
mov
mov
(bad)
jmp
pop
mov
cs
mov
sti
(bad)
pop
cmps
out
gs
xor
lahf
aaa
adc
xlat
(bad)
(bad)
call
cdq
outs
mov
push
stc
outs
es
outs
fld
mov
(bad)
imul
fcomp
push
(bad)
jg
movs
cdq
push
gs
push
imul
stos
fwait
sub
shl
sbb
outs
pop
aaa
fwait
call
mov
outs
xchg
icebp
ins
scas
inc
jnp
jle
fidiv
(bad)
dec
inc
shl
repz
mov
mov
pop
in
xchg
(bad)
(bad)
jmp
jmp
and
jmp
minps
mov
lock
(bad)
(bad)
(bad)
jmp
jecxz
aaa
test
(bad)
mov
lock
sbb
(bad)
repnz
hlt
push
or
mov
inc
js
in
movs
mov
xor
push
loopne
rcr
mov
mov
mov
mov
fnstsw
in
(bad)
fbstp
jmp
xchg
cs
(bad)
imul
jmp
sbb
popa
and
mov
adc
jp
(bad)
jnp
add
jmp
popf
pusha
xchg
mov
sbb
in
mov
(bad)
jg
jne
int
jb
dec
pop
iret
dec
mov
xchg
test
jmp
hlt
je
or
mov
icebp
push
(bad)
(bad)
(bad)
inc
dec
loope
bound
and
bound
push
cmp
cmp
push
arpl
pop
mov
test
xchg
xor
lea
mov
(bad)
(bad)
(bad)
push
ins
jbe
xchg
outs
lahf
addr16
mov
fst
dec
or
movs
je
iret
mov
(bad)
(bad)
(bad)
push
adc
mov
cmp
inc
mov
ins
aad
nop
les
je
sub
jle
(bad)
(bad)
call
sar
mov
and
cwde
push
push
xor
ret
push
loopne
clc
xchg
mov
lock
(bad)
(bad)
fcomp
sub
dec
idiv
mov
out
fst
jmp
mov
lds
or
das
xchg
inc
ret
pusha
fisttp
fnstenv
lock
mov
mov
(bad)
fiadd
add
adc
push
cs
sub
movs
adc
sub
cmc
adc
(bad)
call
mov
pop
dec
sti
inc
imul
outs
jbe
(bad)
push
popf
imul
mov
push
pop
(bad)
xchg
ror
addr16
in
add
push
dec
push
(bad)
jg
jmp
loopne
sbb
ins
pop
xchg
test
loope
aas
loop
sbb
(bad)
jmp
(bad)
fcom
lock
jnp
cs
das
lods
dec
mov
adc
scas
dec
mov
(bad)
sti
out
push
xor
sbb
icebp
xchg
cmp
in
mov
mov
mov
das
sar
mov
test
push
imul
push
xchg
ins
xor
mov
inc
fstp
fwait
repnz
fsubr
and
pop
std
imul
out
js
ins
jp
cs
fcomp
outs
ins
fnstcw
ret
gs
out
clc
mov
enter
neg
hlt
dec
ret
xor
(bad)
mov
sub
mov
ret
pop
js
fwait
mov
and
scas
or
ins
jne
(bad)
(bad)
inc
dec
mov
jbe
popf
xchg
cdq
cmp
lahf
fwait
mov
mov
mov
jo
pusha
pop
jb
(bad)
(bad)
(bad)
call
inc
(bad)
popa
ret
mov
repnz
mov
ins
fmulp
ss
in
fnsave
mov
push
int
mov
shr
dec
stos
push
enter
(bad)
push
pop
arpl
bound
data16
inc
inc
cwde
jecxz
inc
ins
outs
ja
sub
pop
mov
(bad)
(bad)
dec
fcmovnbe
lods
push
jge
mov
sbb
inc
popf
test
push
lods
sbb
call
ror
dec
mov
sub
arpl
(bad)
jmp
(bad)
(bad)
(bad)
push
add
adc
sbb
xor
clc
jae
fist
div
cmp
mov
(bad)
jmp
(bad)
jmp
call
and
jno
xor
imul
dec
out
stos
push
mov
lock
(bad)
(bad)
mov
ja
rcl
shr
stos
cmp
iret
pop
loopne
call
movs
retf
fstp
push
mov
out
ins
call
clc
in
xchg
out
out
scas
shl
lock
(bad)
(bad)
in
jbe
fdecstp
jns
ss
ss
dec
mov
cmp
dec
test
add
mov
jmp
xchg
adc
adc
mov
lds
loopne
fwait
adc
ja
mov
(bad)
(bad)
(bad)
call
jno
cmp
mov
ja
lds
cwde
ja
dec
les
cmp
jmp
sub
xlat
cmp
mov
sbb
(bad)
aaa
mov
mov
retf
push
iret
hlt
mov
adc
fld
ss
pop
retf
dec
push
int
cmp
(bad)
inc
adc
inc
push
jns
and
or
out
cmps
rcr
sub
test
mov
cli
xor
xchg
pop
movs
mov
popa
xchg
mov
xchg
idiv
imul
inc
movs
fldenv
xchg
sub
cdq
call
push
push
stos
lods
sbb
repnz
(bad)
(bad)
(bad)
mov
stc
aas
jo
test
lods
repz
mov
mov
idiv
(bad)
(bad)
call
xor
and
mov
ins
jecxz
rcl
mov
adc
loopne
call
xor
mov
sar
dec
imul
(bad)
(bad)
jmp
sti
sub
iret
ds
imul
mov
call
pop
jbe
push
adc
sub
adc
dec
mov
lods
mov
adc
clc
(bad)
or
lods
xor
(bad)
call
mov
xor
push
rol
xchg
xor
jo
(bad)
(bad)
inc
stos
js
jno
pop
sub
fadd
sar
data16
lahf
or
(bad)
(bad)
call
icebp
mov
bound
pop
test
stos
adc
sbb
sub
pop
(bad)
mov
jmp
push
jae
and
mov
xor
ins
jge
mov
(bad)
call
or
leave
push
(bad)
mov
fs
mov
cmp
int3
shr
addr16
mov
adc
sub
outs
mov
jge
fiadd
(bad)
(bad)
(bad)
cmp
mov
iret
(bad)
sub
int
fcom
mov
(bad)
push
inc
cmps
and
xchg
(bad)
les
jb
aad
cmc
fst
push
leave
les
sbb
(bad)
(bad)
(bad)
push
xchg
mov
adc
cmp
cmp
inc
loope
pop
cli
push
add
ficomp
enter
(bad)
(bad)
fild
xor
ds
push
out
imul
retf
(bad)
mov
and
sar
repnz
je
outs
jb
(bad)
test
pop
(bad)
fisttp
mov
push
fs
mov
push
aad
icebp
das
clc
cwde
test
stos
mov
push
dec
gs
pop
(bad)
push
mov
sub
(bad)
(bad)
(bad)
dec
push
add
retf
std
pop
ja
and
mov
popf
addr16
jmp
fnstenv
in
push
mov
(bad)
(bad)
call
fcom
xchg
and
(bad)
xchg
cmp
xchg
inc
test
or
mov
mov
(bad)
(bad)
jg
clc
push
ss
daa
adc
push
or
xchg
xor
into
pextrw
js
cli
mov
(bad)
(bad)
(bad)
call
jmp
jmp
in
fistp
loope
sti
pop
xor
pushf
cdq
lea
lds
(bad)
mov
fldenv
bound
fsubrp
fistp
ins
or
cmp
mov
mov
lea
jge
jmp
jl
ins
jmp
mov
and
shl
adc
dec
fstp
mov
mov
cs
call
xchg
call
es
bound
stos
icebp
push
cmps
das
lods
sub
cmp
push
popa
xor
dec
cmp
leave
xchg
or
adc
mov
pop
(bad)
mov
pop
mov
call
and
add
cmp
in
int3
push
ret
cs
mov
(bad)
(bad)
(bad)
call
nop
sub
and
sbb
mov
sub
xor
mov
cs
sub
test
clc
ret
sti
fs
mov
dec
mov
inc
pushf
ja
mov
push
cmp
(bad)
(bad)
(bad)
call
dec
(bad)
int3
dec
push
fbld
sti
sub
call
and
inc
jle
lahf
in
movs
shl
aaa
std
daa
loope
mov
and
stos
push
ins
ins
aas
(bad)
inc
cli
xchg
enter
push
in
push
xchg
clc
(bad)
addr16
jmp
(bad)
(bad)
(bad)
dec
add
retf
in
add
mov
add
in
leave
leave
sub
outs
push
push
add
push
scas
fwait
mov
iret
into
push
(bad)
call
sbb
jmp
sbb
leave
push
jmp
xor
pmullw
(bad)
(bad)
jmp
xchg
outs
cmp
(bad)
cld
(bad)
mov
loopne
xchg
nop
xor
cwde
stos
mov
(bad)
(bad)
call
das
jbe
xchg
cwde
cmp
cld
movs
adc
ins
leave
ins
gs
sub
jg
icebp
pop
pop
jge
cli
pop
jo
or
xchg
(bad)
cmps
ret
cmps
int
pop
pop
cmp
inc
and
inc
out
outs
dec
neg
aaa
jno
mov
mov
pop
mov
jecxz
and
cdq
loopne
bnd
je
xlat
fwait
jecxz
das
clc
jmp
add
bound
leave
out
stc
lds
nop
out
mov
pop
sar
jg
call
push
test
dec
xchg
aam
retf
dec
or
stos
ret
repz
sub
(bad)
(bad)
(bad)
cmp
push
ret
rcl
mul
lahf
out
cmps
pop
mov
sub
fiadd
jecxz
(bad)
(bad)
dec
or
data16
call
hlt
ds
mov
cli
imul
mov
and
dec
sub
jnp
(bad)
(bad)
mov
add
ins
rcr
(bad)
xlat
xchg
sbb
pop
mov
(bad)
call
cld
leave
or
sti
jg
imul
aaa
sub
aas
mov
push
es
(bad)
(bad)
(bad)
clc
xlat
out
outs
mov
(bad)
call
inc
xlat
pop
pop
jmp
or
(bad)
ins
cmp
push
mov
outs
jp
cdq
and
xchg
daa
cmp
(bad)
(bad)
jg
xchg
retf
out
push
nop
loop
dec
mov
add
inc
xor
mov
xor
(bad)
clc
cwde
(bad)
jnp
jmp
dec
xor
cmps
cld
jge
in
jp
pop
aaa
out
mov
push
jge
sar
(bad)
(bad)
ficomp
mov
jecxz
in
adc
retf
cdq
adc
in
cmc
rcl
test
clc
(bad)
(bad)
jg
jno
imul
mov
xchg
adc
fld
lock
mov
int3
xor
popf
mov
mov
movs
jne
mov
push
lods
(bad)
(bad)
jg
lahf
jbe
mov
hlt
jnp
add
cli
call
xor
fdivr
into
mov
outs
clc
add
adc
sub
xor
lea
jmp
aaa
(bad)
(bad)
jg
jbe
movs
ins
nop
je
jmp
jl
pop
mov
pop
xchg
loop
pop
cmp
jl
idiv
xchg
push
mov
jge
std
cmps
inc
fidivr
repz
in
idiv
dec
ds
xor
ret
jge
xchg
lods
pop
sub
(bad)
dec
ins
xor
rcr
mov
jb
push
jbe
lock
les
(bad)
dec
ja
ret
xchg
aas
jne
xor
iret
loopne
(bad)
aas
clc
scas
cmp
ds
(bad)
scas
dec
ds
xchg
icebp
jmp
cmp
out
mov
sbb
mov
repnz
sar
(bad)
fs
cli
aas
cmp
cli
pop
sub
loopne
es
inc
adc
(bad)
scas
into
or
sub
and
or
adc
(bad)
mov
(bad)
mov
inc
out
mov
in
sbb
and
jg
(bad)
mov
mov
ss
cdq
cmp
scas
aas
inc
int3
pop
jecxz
mov
(bad)
jg
mov
sahf
cmp
sub
add
(bad)
mov
xchg
add
cmp
out
push
mov
movs
aad
(bad)
(bad)
jg
hlt
jle
xor
fistp
xchg
fnstsw
mov
dec
sar
mov
inc
and
lock
mov
retf
pop
shl
and
cld
std
je
(bad)
call
loopne
outs
mov
xchg
cmp
repz
mov
inc
add
in
push
(bad)
(bad)
mov
and
in
shr
jl
shr
out
dec
repz
mov
loopne
dec
in
xor
mov
fwait
rcr
mov
jle
hlt
sub
push
(bad)
fwait
enter
add
jl
(bad)
(bad)
jmp
xchg
inc
xlat
dec
lahf
out
sbb
push
jg
mov
push
data16
inc
mov
push
xor
call
loope
mov
idiv
push
jb
mov
(bad)
jmp
ja
cwde
or
sar
mov
aas
jecxz
movs
js
iret
pop
cld
pop
mov
adc
adc
out
ss
call
add
aaa
repz
je
xor
sub
pop
imul
sub
inc
push
push
clc
data16
xchg
pop
clc
(bad)
out
push
shl
fidivr
push
jbe
ret
clc
mov
pxor
mov
cld
aas
je
xor
das
push
xlat
dec
fstp
mov
pop
into
stc
jge
xchg
inc
mov
(bad)
(bad)
fild
cld
rcr
fstp
lahf
push
cwde
mov
data16
(bad)
(bad)
push
cmps
cmp
cmp
test
sahf
add
hlt
shl
xchg
rcl
ret
pop
xchg
jl
(bad)
(bad)
(bad)
sti
cmp
mov
jecxz
xlat
adc
and
xchg
outs
(bad)
(bad)
(bad)
jmp
fcmovnb
fld
inc
int3
mov
rcl
sti
and
pop
mov
arpl
push
(bad)
sahf
fild
fdivr
(bad)
(bad)
dec
aas
daa
pop
xchg
out
jbe
test
icebp
popa
sub
pop
aad
xor
movs
cmp
or
pop
(bad)
(bad)
(bad)
call
aad
jae
mov
movs
mov
mov
int
adc
mov
sub
jp
mov
mov
cli
push
jb
push
cs
cmp
call
or
(bad)
inc
repz
lds
dec
pop
and
pop
xor
(bad)
(bad)
(bad)
out
mov
das
cmp
dec
loopne
sub
adc
inc
(bad)
inc
inc
in
rcl
xchg
mov
cmp
(bad)
jmp
mov
movs
push
sub
mov
and
adc
xchg
cli
cdq
fstp
(bad)
(bad)
push
pop
std
bound
les
mov
jp
push
lock
or
(bad)
call
and
inc
pop
test
nop
pop
inc
sub
add
(bad)
(bad)
(bad)
inc
cmp
fist
inc
sbb
jmp
and
xchg
push
mov
(bad)
jmp
movs
test
xchg
sbb
popf
cmp
mov
movs
pop
push
xchg
movs
sbb
cmp
(bad)
(bad)
push
mov
clc
fs
ds
and
dec
dec
jecxz
cmp
cmp
inc
dec
dec
scas
gs
(bad)
(bad)
call
pop
xchg
in
out
ins
cwde
or
dec
out
outs
sahf
xor
dec
cmp
(bad)
jg
je
(bad)
(bad)
mov
dec
or
or
xchg
lods
cmp
cli
stos
das
cwde
cmp
and
(bad)
(bad)
inc
inc
in
(bad)
pop
push
mov
stos
stos
jecxz
iret
retf
xor
xlat
mov
(bad)
(bad)
(bad)
call
adc
jnp
lods
mov
sar
ror
sbb
pop
sbb
pop
rol
push
sub
pop
push
dec
outs
and
shl
or
mov
(bad)
(bad)
(bad)
jmp
aad
adc
fistp
inc
add
into
xor
fld
cs
pop
icebp
dec
out
nop
(bad)
(bad)
jg
mov
xlat
fst
and
inc
inc
pop
rcl
and
or
cli
inc
pop
inc
(bad)
(bad)
(bad)
jmp
aas
mov
(bad)
sbb
push
cmps
pop
pop
push
fidiv
jl
and
sub
sub
cwde
mov
xchg
xchg
ror
bound
sub
cwde
and
xchg
sbb
xor
push
(bad)
call
jl
mov
test
in
sbb
and
jae
js
pop
sub
sbb
(bad)
(bad)
dec
sahf
aad
mov
sub
pushf
fisub
sub
sahf
mov
iret
xchg
(bad)
(bad)
(bad)
call
mov
mov
inc
mov
pop
sub
dec
push
sub
push
adc
jge
dec
mov
xchg
jge
adc
movs
mov
loop
sbb
cmp
ins
push
mov
push
pop
jmp
push
test
scas
xchg
mov
jno
inc
and
ret
push
xchg
jg
jmp
into
inc
cmp
inc
mov
aaa
sub
jp
mov
mov
(bad)
(bad)
push
xor
fnsave
stos
ds
pusha
icebp
leave
xlat
xor
or
lods
out
(bad)
(bad)
(bad)
call
aam
adc
test
dec
(bad)
dec
out
push
mov
jb
lods
inc
dec
adc
pop
(bad)
(bad)
mov
fcom
scas
add
push
dec
xchg
arpl
dec
js
or
(bad)
(bad)
call
inc
and
and
pop
xor
mov
mov
cmps
mov
scas
mov
fs
enter
jmp
mov
dec
and
(bad)
(bad)
dec
adc
sub
out
int3
sub
mov
lock
xor
test
adc
sbb
(bad)
mov
and
inc
in
xor
rcl
(bad)
(bad)
inc
ins
shl
xchg
sbb
lods
pop
pop
bound
fdivr
push
iret
aas
and
mov
shl
(bad)
call
aaa
out
js
adc
rcl
pop
push
ror
cmp
lods
(bad)
jg
mov
(bad)
mov
loop
cli
mov
mov
movs
inc
mov
aam
mov
stos
and
and
(bad)
jg
jg
test
jno
ret
mov
xchg
pusha
les
mov
sub
jge
(bad)
(bad)
(bad)
jg
sbb
imul
pop
pop
inc
cmp
dec
mov
test
(bad)
ds
inc
mov
sub
in
xchg
out
(bad)
pusha
scas
icebp
jb
enter
pop
ds
inc
adc
adc
jle
sahf
cmp
xchg
dec
jo
les
xchg
cli
(bad)
push
movs
adc
stos
mov
and
into
lock
xchg
jl
loope
inc
lahf
ja
and
push
inc
sbb
mov
stos
(bad)
(bad)
push
movs
daa
mov
inc
pop
sub
outs
addr16
push
int3
sub
inc
cmp
js
pop
gs
push
add
sbb
out
push
xchg
test
inc
test
(bad)
(bad)
call
mov
or
jmp
std
sub
cmp
add
rcr
(bad)
(bad)
(bad)
push
int
lahf
jbe
cmp
arpl
mov
jmp
or
popa
addr16
(bad)
call
cld
sar
bound
inc
pushf
(bad)
jo
pop
mov
inc
or
(bad)
inc
xchg
stos
mov
in
adc
jg
adc
jae
jo
repz
(bad)
(bad)
jmp
sub
(bad)
fisub
loope
push
add
push
push
or
dec
mov
rcr
pop
push
idiv
(bad)
jmp
inc
movs
pop
pushf
cmc
fadd
push
dec
jmp
lods
cmp
bound
mov
(bad)
out
cmp
(bad)
pop
cmp
jl
jae
lods
addr16
cmp
(bad)
(bad)
(bad)
mov
mov
pop
(bad)
cdq
inc
mov
outs
jns
sbb
and
outs
pop
xchg
outs
mov
mov
(bad)
jo
push
jno
ds
adc
xchg
mov
cmps
push
pop
addr16
cmp
cmp
(bad)
jmp
xchg
sbb
ja
mov
fs
rcl
mov
mov
jbe
fist
fst
xlat
ins
pop
mov
div
ds
enter
cmps
push
out
fldz
out
xchg
hlt
imul
pusha
jp
jbe
repz
(bad)
call
addr16
or
popf
pop
aam
test
add
dec
sub
(bad)
(bad)
fistp
fisttp
push
nop
dec
mov
in
cmc
in
pusha
movs
lock
push
cld
mov
push
(bad)
(bad)
fcomip
das
scas
ficom
retf
ds
mov
in
xor
shr
or
(bad)
jmp
adc
fld
pop
jbe
pop
aas
mov
rol
pop
fisub
jmp
in
dec
shl
outs
lods
jecxz
rol
sti
sbb
into
dec
xorps
mov
cdq
iret
push
push
fmul
add
(bad)
and
(bad)
(bad)
call
mov
imul
add
pop
mov
(bad)
daa
lock
fdivr
rcl
ss
scas
leave
jmp
cmovp
leave
mov
les
(bad)
(bad)
jmp
out
sub
mov
and
xchg
inc
pop
(bad)
call
mov
xchg
ds
dec
dec
mov
loope
mov
retf
(bad)
shl
or
sub
(bad)
dec
push
retf
idiv
xchg
(bad)
(bad)
(bad)
push
pop
and
movs
imul
xor
retf
push
cs
push
(bad)
cmps
popa
(bad)
mov
aaa
xor
push
call
dec
lahf
fld
mov
jl
std
loope
or
cmp
inc
jno
test
add
cmps
add
jle
(bad)
jae
sbb
(bad)
call
loopne
mov
(bad)
(bad)
mov
xor
pop
sub
mov
cmps
jg
mov
fisub
pop
or
and
xchg
arpl
(bad)
(bad)
inc
movs
mov
push
jmp
outs
jo
imul
loopne
dec
ret
fsub
outs
sub
(bad)
(bad)
push
dec
in
test
rol
cs
retf
into
dec
(bad)
gs
jecxz
and
test
push
jmp
mov
add
and
dec
jno
adc
loop
cwde
xchg
les
pop
xor
xchg
mov
cmps
xchg
(bad)
call
ret
les
jo
in
(bad)
xor
pop
iret
pop
push
imul
mov
jno
push
push
fisubr
sub
mov
(bad)
(bad)
(bad)
(bad)
fst
outs
mov
push
adc
mov
pop
mov
dec
test
sub
call
push
sbb
popf
mov
pop
dec
mov
add
and
ret
pop
pop
jl
call
js
(bad)
jg
ror
mov
mov
xor
dec
sub
in
cmps
(bad)
in
(bad)
(bad)
mov
pop
sbb
add
mov
cmc
cmps
in
or
pop
mov
sahf
rcr
inc
fldcw
and
aad
push
fistp
fimul
dec
fmul
icebp
mov
out
in
add
clc
xchg
mov
fmul
xchg
inc
cdq
ret
(bad)
(bad)
(bad)
(bad)
cld
aaa
mov
xchg
xchg
pop
mov
inc
and
mov
movs
outs
cdq
pop
mov
cmp
(bad)
(bad)
(bad)
mov
jbe
ins
and
dec
jne
xchg
xor
mov
xor
xchg
(bad)
(bad)
(bad)
(bad)
jmp
loopne
adc
stos
mov
sbb
mov
dec
dec
push
in
jo
push
sub
gs
(bad)
(bad)
(bad)
cmp
sub
jp
imul
not
xchg
jbe
dec
fistp
(bad)
push
inc
adc
dec
jl
jno
loope
ror
out
jo
int3
les
cmp
into
bound
adc
call
clc
fnsave
xchg
jo
lds
adc
fistp
or
and
das
sar
mov
arpl
jb
cmp
jno
lock
push
cmp
push
lahf
(bad)
(bad)
(bad)
jmp
leavew
cwde
outs
or
scas
push
out
(bad)
daa
scas
xor
mov
fucomip
(bad)
(bad)
inc
mov
add
out
mov
retf
loop
cwde
shr
push
xor
retf
(bad)
(bad)
(bad)
mov
push
out
mov
inc
jne
int
sbb
sub
movs
add
push
push
jmp
or
jnp
jp
ss
fild
add
mov
icebp
sub
sahf
repnz
dec
mov
xchg
(bad)
(bad)
(bad)
inc
cwde
repz
pop
jecxz
add
cmp
stos
mov
dec
dec
dec
rol
popa
(bad)
(bad)
(bad)
jmp
jl
pop
dec
jne
test
jp
xrelease
mov
in
out
xor
adc
(bad)
(bad)
(bad)
fist
push
push
push
popa
jge
or
mov
ret
popa
jns
jns
loope
es
inc
cld
dec
nop
fidiv
mov
popa
sbb
out
cmp
cmp
cmp
xor
(bad)
(bad)
(bad)
call
sbb
inc
sub
popa
pop
shl
cmp
lods
nop
ins
fild
push
jmp
and
xor
hlt
mov
push
sbb
in
cmps
sbb
cmp
adc
loopne
jmp
cmp
loope
repz
cs
loop
movs
cs
inc
mov
(bad)
sub
movs
test
adc
xchg
sbb
jge
and
(bad)
jmp
jmp
inc
rcr
data16
shr
ret
(bad)
(bad)
push
(bad)
ds
(bad)
retf
enter
xchg
cmc
sub
mov
inc
outs
add
mov
mov
jno
add
stos
push
sub
pushf
sub
and
aaa
ret
iret
sbb
out
not
(bad)
(bad)
(bad)
(bad)
mov
jecxz
jne
scas
cli
jmp
xchg
inc
add
daa
dec
jge
push
or
(bad)
(bad)
(bad)
jmp
stos
mov
dec
scas
mov
movs
cmp
jl
aas
cmp
adc
lock
or
(bad)
(bad)
(bad)
dec
xlat
jnp
sbb
mov
retf
sub
mov
test
lds
or
jmp
mov
cmp
push
sbb
cmp
popa
ret
mov
xchg
add
ds
mov
mov
(bad)
(bad)
stc
test
es
push
test
jnp
or
dec
retf
or
push
mov
sub
(bad)
(bad)
call
add
fsub
push
or
mov
retf
cmps
out
push
pop
sbb
(bad)
call
inc
sbb
push
sbb
aaa
ret
int3
in
lods
jp
sbb
(bad)
jmp
div
jae
(bad)
dec
cld
lahf
jl
shr
inc
rol
(bad)
(bad)
(bad)
(bad)
std
arpl
sub
cmp
popa
pushf
add
jge
dec
inc
sub
mov
sbb
ins
jl
(bad)
inc
adc
pushf
jmp
jb
aas
xchg
(bad)
mov
cmp
mov
cmp
(bad)
(bad)
jmp
imul
pop
loope
and
pop
leave
into
mov
int3
push
pushf
movs
ret
add
inc
scas
aam
add
(bad)
(bad)
inc
outs
sbb
js
in
mov
(bad)
sahf
inc
into
xor
sahf
dec
xchg
jo
xor
(bad)
(bad)
call
mov
mov
pop
push
ficom
fld
out
add
inc
std
(bad)
(bad)
push
jns
(bad)
nop
ins
ss
ss
stos
sbb
repz
(bad)
(bad)
(bad)
mov
push
lods
mov
jmp
cmps
pop
xor
fnsave
iret
(bad)
call
loop
lock
fadd
pop
out
into
inc
out
add
(bad)
(bad)
(bad)
inc
adc
jns
int
or
cmps
xchg
lods
inc
jnp
shl
cwde
xchg
(bad)
mov
(bad)
in
(bad)
call
loop
cmp
push
cmp
xchg
cmp
or
inc
dec
sbb
push
test
les
cdq
mov
cli
(bad)
call
push
enter
stos
enter
cmp
and
xor
in
and
add
inc
(bad)
(bad)
(bad)
push
pop
push
int
sub
loop
in
pop
and
jl
(bad)
and
sar
imul
push
add
adc
(bad)
(bad)
jmp
jge
xchg
call
movs
mov
add
dec
dec
inc
sub
(bad)
(bad)
(bad)
call
stos
add
out
pop
or
(bad)
fstp
repnz
scas
aaa
pop
xor
call
mov
(bad)
mov
inc
lea
cmc
add
es
es
aaa
std
jmp
push
xchg
pop
mov
movs
ins
sub
call
int
cmp
popa
lods
outs
loopne
jmp
dec
or
popa
int3
movs
in
adc
call
(bad)
dec
pusha
xor
lods
and
push
sti
fcom
xchg
icebp
out
psubw
pop
cwde
(bad)
(bad)
(bad)
dec
jne
loopne
stos
retf
int3
shr
push
arpl
fsubr
sbb
int
(bad)
(bad)
(bad)
jmp
mov
xor
cs
pushf
mov
xor
mov
mov
or
pop
outs
clc
(bad)
(bad)
call
cmp
scas
add
(bad)
iret
int
mov
jmp
je
and
cld
(bad)
jmp
shl
adc
cmp
xchg
mov
sub
xor
add
or
in
cwde
dec
fwait
xchg
or
(bad)
push
jecxz
sbb
xor
sub
mov
push
xor
test
dec
adc
add
das
sar
daa
movs
stos
xlat
cmps
cmp
addr16
rcl
arpl
(bad)
(bad)
call
pop
btc
retf
and
adc
xchg
pushf
test
dec
pushf
test
jmp
(bad)
push
sbb
mov
or
fmul
(bad)
ins
sbb
sbb
pusha
movs
mov
cmp
or
pop
jno
jl
jns
adc
popf
in
lahf
inc
bound
(bad)
(bad)
(bad)
(bad)
jl
inc
pop
(bad)
mov
rol
outs
shl
psadbw
jbe
sub
js
shr
jne
inc
push
push
(bad)
push
mov
adc
jo
mov
bnd
shl
or
lea
in
fstp
mov
lock
fwait
mov
lds
mov
repz
mov
scas
nop
pop
and
jecxz
and
ins
das
mov
xchg
les
cdq
nop
pop
sti
mov
(bad)
(bad)
jmp
and
sahf
inc
lock
into
sbb
add
cwde
inc
(bad)
mul
pop
div
imul
pusha
in
mov
shl
jle
fdiv
xchg
mov
fisubr
jmp
mov
mov
push
xchg
xchg
lods
(bad)
(bad)
jmp
fwait
je
or
fs
arpl
test
jb
daa
jns
(bad)
(bad)
(bad)
mov
mov
in
pop
dec
pop
lea
fwait
repnz
pop
push
cmp
(bad)
jg
popf
sub
mov
outs
and
scas
repz
fwait
sub
xlat
js
rcr
add
pop
dec
outs
add
(bad)
das
mov
aaa
sbb
sub
test
push
adc
lds
cdq
(bad)
(bad)
(bad)
call
ret
pushaw
inc
adc
sub
mov
mov
pop
movs
fst
dec
clc
fldenv
(bad)
in
(bad)
(bad)
fst
repnz
arpl
inc
xchg
sbb
dec
sar
out
pop
or
sub
fs
(bad)
(bad)
(bad)
(bad)
mov
in
ss
(bad)
loop
fs
in
call
jno
rcl
(bad)
(bad)
call
gs
mov
pop
mov
jg
enter
retf
pop
mov
pop
cmp
(bad)
(bad)
call
jae
jmp
mul
sbb
xchg
enter
aaa
push
adc
or
mov
and
jg
xor
(bad)
mov
(bad)
(bad)
(bad)
push
mov
scas
arpl
stos
jae
adc
inc
push
inc
aaa
mov
xor
xor
mov
call
jecxz
mov
push
rcl
xchg
movs
pop
dec
push
test
imul
jmp
(bad)
cmp
mov
push
(bad)
(bad)
cmp
outs
(bad)
pop
xlat
inc
or
sbb
test
push
push
jo
dec
adc
cmps
scas
(bad)
(bad)
jmp
cmp
ret
cmp
mov
push
xor
fidivr
mov
pop
cmp
movs
int3
push
mov
mov
mov
adc
shl
sar
sub
mov
mov
xchg
fwait
pop
jmp
push
(bad)
in
gs
dec
pop
inc
out
ja
call
push
inc
dec
mov
pop
test
mov
out
sub
(bad)
outs
shr
popf
scas
mov
ins
(bad)
xchg
leave
sub
hlt
mov
(bad)
inc
push
lds
call
push
ret
loop
sbb
test
mov
(bad)
push
jbe
add
and
icebp
arpl
and
neg
(bad)
push
and
scas
sbb
sub
hlt
xchg
(bad)
daa
sub
lods
xlat
in
jae
outs
clc
push
push
aad
dec
fidiv
inc
push
push
scas
jp
mov
lods
loop
inc
es
mov
out
dec
mov
cmps
pop
retf
sub
(bad)
(bad)
mov
packsswb
call
xchg
ss
ficom
fdivr
or
lods
test
(bad)
jmp
fwait
shl
dec
mov
xor
sub
push
cdq
neg
ins
and
(bad)
(bad)
jg
outs
inc
dec
push
ror
ds
repnz
sbb
call
std
(bad)
nop
loope
jge
inc
mov
ds
sbb
jae
xchg
aam
mov
and
xchg
sbb
rol
or
les
loope
pop
mov
xchg
repnz
imul
push
cmps
jns
pop
dec
mov
idiv
clc
outs
out
mov
mov
in
cmp
push
iret
movs
dec
and
pop
xchg
outs
nop
dec
and
mov
dec
inc
inc
mov
dec
mov
xchg
jae
ja
push
cmps
fldenv
cmp
push
push
pusha
push
imul
(bad)
out
hlt
inc
retf
mov
jnp
movs
sub
sbb
xlat
inc
xchg
jbe
xor
inc
mov
(bad)
push
loop
pop
nop
dec
cmp
lds
in
mov
(bad)
sbb
movs
mov
cwde
push
push
xor
call
es
mov
or
sti
(bad)
(bad)
jmp
repnz
(bad)
in
sbb
int
mov
ins
lea
push
(bad)
(bad)
(bad)
jg
imul
lds
mov
es
mov
ja
je
mov
pop
inc
popa
fcmovnu
lods
aaa
mov
mov
jnp
enter
(bad)
fild
bound
shl
dec
pop
adc
(bad)
jo
xor
fdivr
mov
les
loop
loop
adc
out
clc
jns
lock
(bad)
(bad)
(bad)
push
mov
dec
pop
mov
and
test
sub
pop
cwde
pop
psraw
xchg
les
pop
jl
mov
test
jp
inc
mov
xchg
int
push
(bad)
fdiv
xchg
popa
ins
sbb
sbb
aaa
outs
enter
iret
ret
sbb
pop
mov
std
push
mov
call
(bad)
call
pop
jmp
rol
fdiv
addr16
pop
js
jle
out
ds
stos
(bad)
call
push
stos
in
ss
test
cmps
push
es
retf
inc
dec
dec
imul
stc
dec
dec
mov
arpl
adc
cs
push
pushf
inc
js
enter
shl
int
je
dec
retf
into
dec
pop
cld
push
mov
out
cli
inc
out
fwait
mov
pop
mov
cmp
pusha
enter
or
xchg
test
(bad)
(bad)
(bad)
cmp
ins
jmp
mov
fild
and
mov
mov
or
mov
and
shl
ret
test
or
stos
out
inc
jmp
fidiv
call
dec
aam
out
or
popf
xor
mov
mov
(bad)
(bad)
(bad)
js
and
dec
jp
dec
pop
jmp
add
repnz
mov
js
push
mov
call
pop
out
enter
in
mov
out
stos
retf
mov
inc
dec
sbb
sti
ret
xchg
xchg
xchg
inc
xchg
xor
or
dec
jg
(bad)
call
dec
scas
pusha
in
je
movs
int
sub
adc
adc
das
int3
sub
(bad)
dec
test
test
stos
adc
pop
in
mov
out
xor
dec
mov
mov
retf
inc
dec
cwde
(bad)
(bad)
(bad)
out
push
jle
leave
mov
leave
es
add
xlat
int
and
adc
aam
jecxz
pop
jae
and
jmp
push
or
(bad)
int3
iret
dec
int
or
movs
mov
dec
jo
mov
push
in
sub
pop
loope
int
mov
xchg
and
into
cwde
inc
cli
dec
(bad)
jmp
mov
mov
and
shl
xor
retf
xchg
iret
and
into
lahf
imul
das
fldcw
es
shr
js
pusha
fwait
(bad)
jmp
inc
(bad)
(bad)
jmp
call
cmp
cmps
movs
mov
fisttp
cmp
jmp
add
sub
inc
inc
lods
cmp
push
sbb
jo
push
cld
call
lods
out
lahf
mov
or
ss
in
or
mov
cmp
daa
int3
imul
movs
pop
sub
jae
aas
push
(bad)
(bad)
call
stos
push
xchg
dec
mov
gs
ins
xchg
dec
cmps
xor
(bad)
ins
test
or
test
(bad)
(bad)
push
lahf
outs
cmp
loope
aaa
(bad)
fbstp
mov
shl
jle
pop
dec
ja
in
(bad)
(bad)
mov
into
pop
jmp
mov
pop
inc
push
inc
call
jmp
cmp
or
xchg
xchg
mov
je
enter
dec
jl
std
or
dec
adc
rcr
xor
xchg
xchg
je
dec
lea
(bad)
(bad)
(bad)
inc
fistp
pop
lods
ss
mov
cmp
(bad)
retf
xor
fwait
jl
and
add
(bad)
fcomip
call
add
dec
or
das
stos
pop
repnz
or
fucomp
jbe
xlat
je
loope
call
lds
push
scas
sbb
jle
in
nop
test
outs
test
jmp
les
push
or
mov
inc
icebp
mov
xchg
ins
mov
mov
fldcw
(bad)
(bad)
push
push
cmps
sub
pop
xlat
xchg
movs
scas
mov
stos
enter
xor
jecxz
or
(bad)
call
sub
fs
and
and
inc
call
jb
(bad)
(bad)
call
test
mov
es
sub
inc
stc
fistp
loope
sbb
lock
mov
(bad)
(bad)
fist
or
cmp
or
cmp
loope
clc
es
mov
(bad)
push
retf
cmps
jmp
test
adc
or
pop
dec
push
fucomip
fidivr
call
sar
out
or
push
cmps
retf
fs
ins
mov
jnp
cdq
cmp
sub
std
call
pop
dec
mov
push
aam
push
cld
(bad)
fdivr
fmulp
ds
std
mov
push
fidiv
aaa
std
(bad)
(bad)
mov
test
es
test
bound
scas
adc
das
mov
jmp
popf
mov
stc
inc
inc
lea
out
pop
(bad)
out
sbb
(bad)
jmp
pop
enter
sub
and
xchg
out
iret
iret
pop
jmp
addr16
adc
(bad)
call
arpl
push
push
or
push
mov
dec
dec
(bad)
jmp
mov
dec
scas
inc
rcr
ficom
dec
es
cdq
sub
call
stos
pusha
or
and
fwait
xlat
aas
ror
(bad)
mov
mov
jbe
inc
lods
push
lods
xchg
daa
js
push
stos
push
aad
xor
and
(bad)
(bad)
mov
es
retf
and
push
ret
lds
shr
sahf
loope
xchg
dec
mov
(bad)
(bad)
(bad)
cmp
lahf
sbb
pop
xor
xchg
repz
in
sbb
lods
cld
mov
and
call
jmp
mov
and
cdq
xchg
(bad)
(bad)
call
jbe
inc
lods
in
hlt
movs
cmp
movs
pop
not
fwait
sub
(bad)
(bad)
(bad)
jmp
test
les
or
cmc
adc
arpl
dec
mov
(bad)
in
(bad)
jmp
dec
mov
mov
xchg
imul
jb
push
or
add
in
inc
jmp
sbb
xchg
mov
inc
xchg
sub
or
sub
sbb
lahf
adc
fldl2t
cld
hlt
jnp
mov
out
(bad)
(bad)
out
(bad)
fs
int
mov
aam
adc
ds
retf
push
mov
jne
jmp
mov
pop
(bad)
xor
(bad)
in
inc
xchg
rol
pop
jmp
cmps
loop
lahf
cmp
dec
inc
cmp
fadd
push
mov
cmp
jo
(bad)
test
sbb
dec
mov
test
pop
out
clc
(bad)
(bad)
in
jnp
pop
aaa
xor
inc
enter
and
(bad)
(bad)
mov
call
xorps
xchg
enter
loop
cld
shl
jg
dec
repnz
adc
jnp
xor
(bad)
(bad)
(bad)
push
mov
aam
imul
shl
ret
scas
inc
dec
pop
call
(bad)
call
daa
mov
loope
rol
call
sti
ins
mov
pop
mov
retf
mov
mov
aas
cmp
call
(bad)
(bad)
jg
lea
jge
sbb
and
push
or
imul
arpl
aas
pop
lea
mov
shl
mov
pop
mov
xchg
(bad)
jg
mov
jo
push
mov
jmp
(bad)
(bad)
(bad)
out
cli
or
aaa
jle
sub
cmc
div
xor
into
sbb
jl
int
ins
test
mov
cli
cmc
fisub
loop
cmps
mov
fistp
fwait
or
scas
pop
mov
les
mov
adc
mov
movs
imul
out
mov
shl
inc
call
stos
push
test
aam
(bad)
jg
outs
mov
(bad)
push
pop
lods
mov
jge
pop
jo
jecxz
mov
xor
mov
(bad)
(bad)
out
push
sub
lods
ja
or
out
out
sbb
pop
aas
mov
xlat
nop
(bad)
(bad)
(bad)
call
mov
inc
out
mov
stc
into
inc
popf
popa
push
jmp
ret
push
xor
xlat
push
inc
cld
jp
rol
mov
dec
xchg
sbb
out
out
cmp
in
test
in
call
fwait
test
mov
loopne
mov
xchg
pop
mov
inc
dec
ins
sbb
pop
cmc
xor
(bad)
(bad)
call
out
movs
mov
daa
push
mov
in
jmp
mov
popa
inc
(bad)
std
in
out
ss
(bad)
jmp
sbb
add
shr
xchg
ror
fld
imul
hlt
mov
outs
(bad)
mov
xchg
adc
xchg
push
icebp
mov
dec
or
xchg
mov
nop
(bad)
loop
(bad)
dec
mov
imul
xor
jne
adc
ds
and
test
(bad)
(bad)
(bad)
cmp
xor
out
lods
popf
loopne
or
mov
mov
push
or
fild
(bad)
(bad)
jmp
mov
push
dec
inc
bnd
ins
sbb
ja
push
ret
out
xchg
jae
jge
lds
jnp
push
sar
push
adc
out
pop
jno
jp
(bad)
(bad)
(bad)
jg
add
or
inc
pop
mov
cmp
(bad)
xlat
popa
fnsave
xchg
scas
das
fs
jmp
(bad)
inc
out
fbld
mov
mov
repnz
call
cld
push
mov
push
ret
ret
adc
stos
rol
jmp
sbb
sbb
jecxz
ret
stos
sbb
cmps
push
xlat
dec
cli
fisubr
stos
lods
pop
rol
test
(bad)
(bad)
(bad)
jmp
(bad)
cli
shr
jmp
(bad)
sbb
js
push
mov
jl
mov
cmps
pop
push
aad
inc
add
(bad)
fnsave
sub
jmp
repz
loop
sub
xor
jmp
cmp
or
(bad)
(bad)
(bad)
out
rep
sub
fcom
(bad)
popf
jnp
retf
mov
out
jge
ret
mov
bound
inc
jecxz
cmps
retf
in
repnz
jmp
(bad)
pop
add
out
mov
pop
pop
or
ss
cs
(bad)
call
cwde
mov
rol
jmp
bound
clc
stos
(bad)
(bad)
(bad)
(bad)
cld
ror
mov
mov
push
retf
inc
icebp
ins
pop
stc
cmp
ror
dec
icebp
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
add
movs
sub
mov
push
movs
pop
xchg
jmp
pop
mov
add
sbb
lds
aad
jae
out
mov
movs
mov
or
aaa
std
(bad)
push
dec
inc
add
lock
push
pusha
jae
out
cs
das
cwde
or
push
push
pushf
push
jecxz
imul
sub
inc
cmps
mov
mov
sar
(bad)
inc
adc
out
sub
and
ror
stos
jmp
or
(bad)
(bad)
(bad)
jg
cmp
push
push
movs
add
dec
add
and
adc
loop
and
ret
std
push
adc
or
adc
xor
xchg
(bad)
(bad)
push
sub
and
jmp
inc
cmp
rol
(bad)
jmp
movs
cdq
mov
mov
rcr
jmp
aam
mov
(bad)
(bad)
dec
jmp
jmp
call
or
(bad)
enter
inc
or
mov
fisttp
shr
dec
inc
inc
cmp
pop
adc
mov
aas
pop
(bad)
call
dec
inc
popa
mov
rcl
jmp
cmc
test
jnp
dec
(bad)
(bad)
in
(bad)
call
iret
xor
dec
arpl
and
and
and
pop
aam
call
cld
sbb
push
out
add
iret
fistp
mov
sub
push
xchg
mov
mov
imul
xor
mov
mov
xlat
sub
aaa
dec
rcr
push
imul
(bad)
(bad)
call
inc
rol
xor
push
lahf
lods
lods
inc
(bad)
adc
mov
push
(bad)
(bad)
(bad)
inc
pop
pop
and
sub
aaa
bound
movs
int3
and
xchg
inc
sbb
and
(bad)
(bad)
call
add
movs
inc
mov
mov
pop
adc
dec
sub
sbb
hlt
inc
dec
(bad)
(bad)
jg
in
adc
push
pop
lods
push
adc
mov
je
in
test
stc
adc
(bad)
(bad)
(bad)
dec
fsubp
adc
out
xchg
sub
and
and
fld
jmp
jle
retf
pop
pop
jb
(bad)
(bad)
(bad)
push
mov
jne
push
loopne
and
in
dec
push
pop
int3
repnz
(bad)
(bad)
(bad)
jmp
test
jo
les
xchg
mov
xor
shl
test
call
sbb
mov
sbb
(bad)
shl
and
cmp
in
xor
push
cmp
mov
scas
push
std
pop
cmc
jl
iret
dec
dec
push
mov
sub
xor
mov
adc
inc
xor
test
ret
cmp
stos
adc
push
test
(bad)
(bad)
(bad)
push
mov
imul
stc
adc
jge
cli
mov
outs
xchg
(bad)
fcomip
inc
mov
lds
test
cs
dec
popa
les
mov
(bad)
call
shl
ins
dec
jmp
and
mov
sar
(bad)
ret
push
add
sbb
dec
shr
in
gs
adc
inc
out
and
repnz
mov
mov
sbb
mov
or
jne
aam
shr
dec
fs
adc
(bad)
inc
add
(bad)
jmp
and
into
sub
cmp
fwait
ret
adc
(bad)
call
mov
jnp
xlat
sub
sbb
stos
sbb
cwde
enter
mov
pop
cld
push
and
or
jge
fnstcw
jg
jg
adc
xchg
sub
call
mov
sub
(bad)
xor
and
pop
cdq
xchg
dec
mov
cmp
adc
(bad)
push
movs
fild
movs
cs
inc
add
jno
rcr
cmp
retf
aam
add
push
(bad)
(bad)
push
out
push
bound
in
leave
fadd
dec
jmp
(bad)
(bad)
dec
inc
jle
jb
jbe
and
add
sbb
push
popf
or
sar
(bad)
(bad)
jmp
icebp
xor
imul
sbb
push
dec
pop
push
hlt
adc
movs
or
call
xchg
dec
pop
stos
jno
add
push
rcr
adc
test
test
push
inc
mov
add
lods
mov
add
jne
sub
or
(bad)
xchg
popa
inc
sar
ins
(bad)
(bad)
call
sbb
adc
stos
push
mov
mov
dec
jnp
xlat
sub
cmp
inc
(bad)
(bad)
(bad)
jmp
sub
jae
push
xor
cdq
add
jl
or
jle
retf
fst
dec
outs
pop
lock
jg
(bad)
call
pop
scas
inc
mov
inc
or
ror
adc
xor
adc
lock
mov
dec
aam
xchg
mov
xchg
jb
jg
and
mov
or
(bad)
mov
mov
jmp
mov
test
lock
xor
or
repnz
aam
stos
cmp
mov
jge
xor
call
sub
jmp
loope
mov
jp
enter
(bad)
(bad)
jmp
and
or
mov
adc
repnz
dec
sub
or
fisub
(bad)
jmp
dec
sbb
cmps
or
pop
js
pop
push
scas
mov
pop
push
mov
in
cli
sbb
cld
movs
(bad)
inc
cmp
out
add
add
call
cld
(bad)
sti
loop
push
cmp
push
outs
popa
mov
aam
jecxz
in
mov
loop
(bad)
inc
jo
popf
jge
in
sbb
xchg
mov
pop
leave
pop
je
jnp
ret
sbb
icebp
mov
add
daa
push
and
(bad)
dec
mov
lea
xor
or
loop
rcr
mov
jg
std
(bad)
call
sti
jmp
clc
dec
or
scas
sahf
call
ins
pop
xchg
inc
(bad)
(bad)
(bad)
call
pop
xor
cmp
mov
add
in
int3
jl
mov
mov
in
sbb
(bad)
(bad)
(bad)
jmp
shr
jmp
and
xchg
mov
jmp
mov
or
pop
(bad)
jg
jmp
adc
fisttp
jle
xor
(bad)
dec
in
test
cmps
(bad)
(bad)
(bad)
(bad)
fild
xor
xchg
xor
fstp
movs
ja
sub
ret
xchg
mov
icebp
outs
pop
xchg
cmp
(bad)
mov
rol
stos
jle
push
js
lea
int3
jno
cmp
push
cmps
ja
popa
loop
call
mov
loop
jae
(bad)
(bad)
jmp
(bad)
or
xchg
out
ins
pop
addr16
jp
push
sbb
xor
push
(bad)
(bad)
(bad)
out
add
jmp
push
sub
fdiv
add
and
stos
cmp
retf
(bad)
push
cmp
aaa
cmp
xchg
imul
mov
movs
sub
(bad)
(bad)
(bad)
mov
data16
sbb
(bad)
out
mov
push
aad
mov
dec
xchg
xor
(bad)
(bad)
fcomip
pop
push
jbe
cmp
lods
mov
pop
sub
test
and
adc
mov
xor
xchg
cmp
sub
sub
imul
(bad)
(bad)
jmp
(bad)
(bad)
retf
cmp
cmp
movs
out
dec
mov
mov
jnp
or
(bad)
(bad)
push
sbb
xchg
adc
inc
ins
inc
out
cmp
inc
div
jmp
pop
(bad)
mov
(bad)
cmp
popa
dec
pop
cmp
pop
into
push
dec
sub
mov
movs
xor
(bad)
imul
fcomp
jbe
stos
out
mov
js
jmp
mov
and
xchg
push
dec
and
(bad)
(bad)
std
mov
adc
and
cwde
rcl
pop
xor
mov
fcomp
inc
lds
cld
xor
in
call
push
call
xor
rcl
jge
mov
xchg
pusha
push
lock
add
or
lahf
outs
lea
scas
mov
jmp
inc
aam
jbe
out
xchg
test
sti
cmp
jmp
jns
adc
stos
mov
(bad)
cmp
mov
push
movs
cmp
not
icebp
push
arpl
mov
(bad)
jmp
cmps
ins
(bad)
jmp
jle
xchg
inc
mov
jnp
sbb
hlt
ror
adc
sbb
(bad)
(bad)
jmp
and
dec
jecxz
les
xchg
add
call
and
(bad)
(bad)
cmp
pushf
arpl
mov
scas
clc
push
fwait
shl
or
arpl
(bad)
(bad)
dec
gs
sbb
pop
push
fisttp
cmps
lods
mov
jl
sub
adc
clc
stos
cmp
mov
(bad)
pop
cmp
nop
jmp
mov
scas
dec
bound
push
jl
arpl
push
xchg
into
lahf
or
cmps
movs
popf
inc
or
adc
int3
(bad)
(bad)
(bad)
(bad)
cli
fwait
dec
or
sbb
int3
loop
mov
mov
aaa
push
repnz
mov
sbb
or
(bad)
dec
cld
sbb
sub
push
adc
xchg
rcr
ja
addr16
jp
cwde
(bad)
(bad)
(bad)
call
icebp
out
xchg
sub
dec
xchg
mov
pushf
push
push
(bad)
shl
pop
dec
out
add
mov
inc
mov
dec
enter
mov
add
(bad)
mov
out
mov
adc
(bad)
(bad)
dec
(bad)
push
push
sbb
and
sbb
lock
cli
in
mov
xor
or
push
(bad)
(bad)
(bad)
inc
test
mov
push
jle
mov
pop
ds
out
ins
gs
dec
retf
(bad)
dec
dec
jecxz
leave
(bad)
cdq
cs
and
mov
(bad)
jmp
and
add
popf
mov
sub
pop
xchg
and
(bad)
mov
cmovbe
in
sbb
les
inc
jnp
dec
or
fstp
jbe
adc
add
lock
ins
clc
ins
ret
int
mov
jl
jae
jge
pusha
or
std
fild
loopne
shr
sbb
mov
je
add
ret
(bad)
(bad)
call
dec
test
sbb
xor
mov
loopne
imul
xchg
fbld
pop
xchg
fiadd
scas
sbb
mov
ins
mov
(bad)
jmp
sbb
add
into
push
add
inc
inc
hlt
sub
push
daa
cs
jecxz
sbb
(bad)
push
sahf
mov
sub
(bad)
dec
imul
sbb
push
outs
push
adc
mov
dec
fcomip
add
mov
inc
sub
sub
jb
mov
push
inc
push
or
(bad)
(bad)
(bad)
dec
into
and
pop
xor
inc
into
out
cdq
push
arpl
jno
push
cmc
lds
sbb
outs
xor
fsub
add
mov
inc
fcmovne
test
(bad)
(bad)
stc
(bad)
xor
and
push
repz
jmp
mov
data16
sub
outs
inc
(bad)
(bad)
(bad)
jmp
and
mov
mov
aaa
fs
les
cmc
(bad)
or
dec
rep
pop
jecxz
jne
jbe
int
dec
lock
stc
xor
mov
or
xchg
inc
dec
mov
push
nop
clc
push
pop
lahf
dec
and
adc
push
jne
sbb
(bad)
(bad)
mov
movs
sar
lods
mov
cmp
xchg
mov
cmp
das
cli
dec
add
mov
xchg
scas
stc
dec
mov
movs
test
pop
scas
xor
jnp
shr
(bad)
(bad)
call
in
movs
pop
and
int3
mov
sbb
into
sub
scas
mov
push
jmp
cmp
xlat
jmp
xlat
ja
cld
cld
inc
inc
or
xor
add
push
icebp
(bad)
(bad)
jmp
jmp
add
out
out
jb
pop
inc
jbe
into
sub
aaa
cwde
clc
pop
mov
loop
inc
sub
adc
sbb
repz
sub
jg
and
aam
outs
fstp
hlt
(bad)
(bad)
cmp
out
test
xchg
pop
push
sub
out
jnp
mov
inc
xchg
dec
aad
outs
or
jle
jbe
jns
cli
(bad)
(bad)
out
stos
inc
popf
adc
sub
inc
push
test
and
sub
jmp
xchg
jne
stc
out
js
dec
mov
or
and
add
call
inc
ins
mov
lods
(bad)
test
push
lods
js
scas
jo
xor
ins
mov
(bad)
out
scas
push
jbe
sub
loopne
mov
jmp
adc
and
cmps
(bad)
jg
jmp
retf
dec
dec
xor
jecxz
fstp
jmp
leave
ins
pop
repz
(bad)
(bad)
(bad)
jl
shl
xchg
inc
adc
cmp
adc
xor
shl
sar
mov
mov
mov
mov
pop
frstor
jo
out
pop
mov
loope
or
push
int3
mov
xchg
retfw
dec
sub
fisub
jmp
or
data16
ds
pop
push
out
loope
adc
adc
test
adc
adc
or
idiv
pop
push
div
xchg
ret
push
jl
fmul
add
mov
sbb
out
clc
inc
cmp
je
sbb
(bad)
(bad)
inc
mov
cld
sar
dec
mov
xor
cmps
pop
lahf
sbb
(bad)
jmp
gs
jge
aaa
mov
pop
das
add
aaa
pushf
and
sar
(bad)
dec
mov
je
test
fdiv
scas
xchg
(bad)
(bad)
call
in
cmp
mov
push
pop
fsub
cmp
push
movs
or
pop
fwait
sbb
mov
js
and
sbb
repnz
in
(bad)
or
sbb
(bad)
mov
shl
add
out
sub
into
xchg
add
mov
push
scas
nop
(bad)
fdiv
out
adc
adc
jmp
call
mov
into
mov
or
mov
sub
xchg
loope
add
mov
fsubr
sbb
mov
push
mov
sar
pop
int3
sti
jge
jnp
pop
sbb
icebp
not
xor
xchg
movs
and
(bad)
(bad)
push
xchg
lods
lods
and
xor
arpl
pop
inc
pop
call
(bad)
int
test
push
inc
and
mov
pop
jmp
mov
ins
add
jmp
and
outs
jno
mov
(bad)
(bad)
(bad)
(bad)
fisttp
xor
in
cli
int
jae
push
jno
push
mov
sub
push
inc
cmc
xchg
cs
(bad)
(bad)
inc
xor
xchg
out
dec
(bad)
pop
xor
fcom
pop
dec
enter
clc
(bad)
(bad)
(bad)
dec
fsubr
or
sbb
arpl
ror
int
push
push
sbb
adc
jns
mov
fs
icebp
shl
in
les
hlt
dec
faddp
fistp
add
arpl
lods
loopne
or
sar
mov
into
sahf
loopne
(bad)
(bad)
dec
mov
dec
mov
mov
mov
shl
push
and
mov
push
(bad)
(bad)
(bad)
push
jmp
cs
fcmovnb
jnp
add
mov
ret
mov
lock
(bad)
jmp
mov
xchg
push
jl
mov
gs
retf
or
int
stos
xor
(bad)
call
cmp
mov
in
out
ins
test
aam
mov
push
dec
(bad)
div
xchg
dec
(bad)
out
mov
inc
and
int
je
mov
fcomip
jbe
nop
mov
lock
jmp
fisttp
mov
movq
hlt
(bad)
out
or
sub
ja
scas
jae
add
cmc
xchg
fs
imul
(bad)
push
push
mov
dec
mov
xchg
adc
cmp
dec
cli
mov
push
outs
xlat
inc
inc
xlat
xchg
pushf
(bad)
(bad)
call
sti
lds
out
scas
mov
xor
cmp
adc
ret
sub
aaa
int
sbb
(bad)
(bad)
(bad)
(bad)
call
not
(bad)
mov
rcr
loope
inc
cwde
rol
sub
push
(bad)
(bad)
(bad)
call
jo
mov
adc
dec
(bad)
pop
jbe
mov
ins
xor
jp
xor
lock
jmp
arpl
mov
fadd
push
sbb
sbb
int3
pop
ret
pop
das
js
(bad)
(bad)
inc
mov
xchg
mov
sub
das
sub
pop
imul
(bad)
(bad)
cmp
test
sub
add
push
imul
mov
mov
lods
stos
push
xchg
(bad)
(bad)
(bad)
dec
and
out
push
push
and
jp
pop
(bad)
leave
add
cmp
mov
out
ins
fisttp
(bad)
jg
(bad)
ficom
cdq
nop
xchg
xchg
sub
jmp
(bad)
(bad)
dec
(bad)
(bad)
mov
push
xor
sbb
push
and
(bad)
(bad)
fcmovnb
cdq
sbb
cmp
dec
push
xlat
push
jb
sbb
and
in
ficomp
(bad)
(bad)
push
jg
pop
sub
dec
mov
sub
xchg
rcr
fs
call
mov
das
cli
hlt
(bad)
popa
(bad)
mov
and
cmp
ficom
mov
(bad)
(bad)
dec
adc
data16
out
jl
fbld
cmp
movs
jmp
dec
retf
pop
in
das
aas
(bad)
(bad)
(bad)
mov
xor
rcl
les
test
xor
push
sbb
jmp
iret
xchg
cmp
fs
inc
cdq
sub
inc
les
lods
xchg
add
pop
(bad)
(bad)
(bad)
push
fisubr
mov
addr16
gs
cmps
cs
cmps
int
dec
xchg
cmp
stos
xchg
xor
test
pop
dec
and
arpl
jg
jmp
push
inc
jno
retf
sahf
dec
(bad)
(bad)
(bad)
push
icebp
jo
out
xchg
inc
mov
fwait
stos
dec
cmp
xor
bound
xchg
cmp
lods
sub
xor
test
loope
dec
out
dec
push
pusha
mov
mov
out
push
imul
stc
mov
jg
push
into
data16
dec
and
inc
mov
inc
arpl
shr
mov
bound
pop
xor
mov
into
mov
(bad)
adc
fdecstp
jo
in
or
movs
pop
shl
aam
adc
(bad)
(bad)
(bad)
(bad)
js
mov
lock
sbb
(bad)
dec
ret
jno
enter
stc
xchg
jp
ja
out
(bad)
(bad)
(bad)
(bad)
jp
mov
cmp
out
mov
lahf
call
push
fs
inc
ds
aaa
sar
xor
inc
jbe
repz
mul
mov
sub
push
inc
add
jg
(bad)
mov
(bad)
(bad)
call
mov
lods
repnz
in
cdq
or
adc
xchg
adc
xchg
pop
es
call
fwait
into
ret
dec
push
adc
pop
mov
(bad)
call
in
hlt
or
xchg
cmp
imul
mov
mov
(bad)
(bad)
(bad)
in
imul
iret
icebp
into
cmp
les
adc
clc
lea
clc
mov
pop
outs
sbb
vmovddup
mov
fmul
int
bound
or
inc
jbe
jle
mov
test
inc
pusha
cli
(bad)
(bad)
(bad)
(bad)
cmp
lea
fs
addr16
lods
test
push
adc
les
inc
xchg
call
xchg
mov
mov
xchg
lahf
outs
fidiv
mov
retf
mov
es
stos
sbb
(bad)
inc
jl
inc
pop
out
pop
or
mov
mov
stc
out
mov
out
cli
dec
inc
dec
(bad)
out
and
fisttp
repz
gs
or
(bad)
(bad)
inc
cmp
loope
xchg
in
int3
dec
fcmovbe
dec
mov
push
icebp
(bad)
jmp
mov
repz
sbb
mov
daa
movs
std
int3
and
(bad)
dec
adc
fisub
cmps
inc
inc
lods
sbb
rcl
jbe
movs
adc
std
movs
adc
dec
in
add
sub
fnsave
mov
(bad)
cmp
sub
(bad)
(bad)
(bad)
call
test
leave
int
ficom
push
xchg
adc
xor
and
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
inc
cmps
mov
xor
mov
rol
inc
xchg
dec
push
mov
call
xchg
(bad)
push
and
imul
cmp
or
(bad)
(bad)
jmp
xchg
xor
shr
gs
mov
xchg
push
dec
cwde
mov
inc
add
mov
repnz
loop
jns
pop
aaa
(bad)
mov
sub
jno
(bad)
(bad)
(bad)
(bad)
inc
repnz
xor
imul
sbb
xchg
in
inc
scas
jb
(bad)
inc
fs
aaa
mov
sub
xor
fwait
push
inc
xchg
cld
lock
adc
mov
cli
mov
inc
jmp
cmps
in
imul
adc
test
push
test
leave
inc
mov
or
or
(bad)
push
(bad)
pop
pusha
lods
jne
cmp
les
jle
ret
ja
add
popf
xchg
jmp
xor
shl
out
les
outs
stc
jmp
stos
adc
jg
mov
sub
aad
mov
push
iret
sub
dec
in
dec
sub
push
jae
arpl
pop
rcr
sub
fisubr
push
std
dec
mov
in
popa
in
retf
(bad)
in
bnd
push
mov
inc
(bad)
jmp
movs
jb
cmp
imul
ror
and
test
mov
scas
scas
inc
or
(bad)
les
mov
std
(bad)
and
xchg
into
(bad)
(bad)
push
adc
out
jecxz
test
imul
scas
(bad)
out
not
lahf
or
(bad)
(bad)
inc
lea
ror
cmp
test
inc
test
cs
dec
xchg
int
cli
push
adc
(bad)
(bad)
push
xchg
push
pop
cli
mov
scas
jbe
pop
imul
add
pushf
push
pop
loope
(bad)
(bad)
cld
not
mov
xchg
pushf
jmp
popf
stos
mov
loop
xchg
or
icebp
dec
loopne
sub
and
sbb
jb
fwait
shl
push
(bad)
call
sti
push
inc
arpl
xchg
jl
stc
push
mov
pop
sub
rcl
sar
pop
pop
pop
(bad)
(bad)
mov
or
loop
sbb
or
and
or
xchg
pop
(bad)
(bad)
(bad)
(bad)
mov
pusha
movs
stos
movs
xchg
je
fisubr
push
cmc
rol
test
pop
cmp
push
cmp
imul
(bad)
inc
stc
invd
fisubr
sbb
add
cs
pop
mov
or
add
jge
arpl
and
push
loopne
(bad)
inc
jo
in
adc
ror
test
pushf
add
inc
and
(bad)
(bad)
call
stos
xchg
scas
out
pop
push
ret
out
rol
mov
dec
fmulp
xor
(bad)
inc
xlat
cdq
popa
inc
push
lds
push
push
leave
push
shl
ins
mov
(bad)
mov
shl
mov
mov
inc
psubw
cmp
js
inc
inc
or
cdq
popf
mov
jns
jns
(bad)
(bad)
(bad)
jg
fs
aad
pusha
nop
imul
daa
mov
adc
mov
pop
into
ds
movs
sub
or
jmp
adc
adc
adc
push
(bad)
shl
das
nop
lock
mov
push
add
shr
adc
test
(bad)
dec
mov
inc
and
outs
dec
cmps
lods
out
inc
fldln2
dec
clc
and
jne
cmp
(bad)
(bad)
(bad)
jmp
or
lods
pop
test
shl
test
movs
jno
lods
shl
adc
dec
stos
sbb
rol
call
inc
dec
call
sbb
jg
cmp
sar
mov
xor
(bad)
(bad)
(bad)
inc
jo
mov
sbb
dec
movs
xor
addr16
mov
pop
push
mov
ret
sub
jg
fld
xor
dec
int3
mov
xchg
push
inc
mov
add
pop
pop
cmp
popf
stos
adc
adc
jne
push
aam
shl
jg
(bad)
jmp
sbb
pop
cmp
cwde
call
enter
into
bound
(bad)
push
dec
inc
add
or
jne
sub
dec
aad
jb
loope
jae
jmp
shl
push
lods
ds
lds
rol
push
sub
push
push
(bad)
out
push
inc
jmp
cli
xchg
popa
push
mov
lods
loopne
mov
lods
push
loopne
push
(bad)
(bad)
call
sub
mov
in
cmps
adc
sbb
test
dec
push
push
mov
(bad)
dec
jb
dec
cwde
fwait
into
out
je
loop
mov
push
push
sahf
pop
(bad)
(bad)
out
movs
mov
dec
jl
push
je
dec
pusha
inc
cmp
cli
dec
dec
out
cmp
dec
jge
sub
push
ret
mov
adc
movs
cs
(bad)
(bad)
call
in
jnp
dec
adc
and
sti
xor
xchg
stos
jmp
in
rcl
cs
mov
(bad)
push
pop
adc
sub
and
jmp
stos
(bad)
(bad)
dec
push
push
sub
retf
mov
dec
inc
bound
inc
aaa
cdq
out
mov
push
loop
iret
or
mov
cmp
sub
repz
and
push
sbb
(bad)
(bad)
jg
cmp
inc
imul
inc
stos
idiv
or
xchg
(bad)
(bad)
(bad)
mov
mov
call
mov
pushf
ret
shl
pop
popa
inc
mov
jmp
call
cmp
sbb
repnz
push
dec
cmc
adc
jge
imul
(bad)
(bad)
dec
call
mov
inc
mov
dec
pop
out
dec
out
outs
xor
(bad)
(bad)
(bad)
jl
jo
ds
jo
jecxz
mov
pushf
stos
mov
add
movs
dec
aam
(bad)
jmp
cli
ins
fldcw
mov
jle
rol
mov
lea
lock
(bad)
(bad)
(bad)
push
xchg
adc
add
test
(bad)
sti
xor
mov
(bad)
(bad)
(bad)
jmp
pop
mov
lods
push
mov
dec
ret
(bad)
push
inc
lea
je
sub
jmp
(bad)
call
push
ret
cmps
test
add
push
inc
push
xchg
pop
mov
mov
cld
jns
out
fs
adc
push
movs
or
add
(bad)
(bad)
xor
jmp
test
dec
push
mov
lods
ret
scas
daa
sub
and
cmc
(bad)
(bad)
inc
cmp
(bad)
lahf
mov
push
push
fmul
cwde
test
add
jo
fld
(bad)
(bad)
jmp
push
outs
xor
push
jae
std
push
xchg
(bad)
mov
sbb
dec
inc
inc
lods
(bad)
(bad)
(bad)
inc
or
into
ficom
mov
sub
ret
xchg
dec
mov
clc
mov
dec
inc
and
(bad)
push
add
xor
push
and
rol
ins
in
sbb
add
fidivr
(bad)
call
std
jl
repnz
push
mov
sbb
xor
lea
dec
add
(bad)
(bad)
jmp
nop
jg
xchg
mov
fnstenv
sub
jmp
test
jmp
jo
aad
dec
jns
or
(bad)
repnz
retf
or
sbb
dec
retf
es
cmps
dec
cdq
pop
fldenv
hlt
stos
jmp
sbb
adc
mov
adc
(bad)
jmp
adc
bound
sbb
sub
mov
mov
dec
cld
dec
mov
push
outs
pop
enter
(bad)
call
stc
fisubr
ret
sbb
(bad)
sbb
mov
pop
pop
fdiv
(bad)
call
inc
xor
movs
pushf
aam
fisttp
ins
mov
pop
sti
arpl
pop
fsubr
(bad)
(bad)
(bad)
dec
into
xor
push
dec
mov
loope
addr16
ss
jbe
pop
or
repz
jl
sbb
(bad)
(bad)
dec
clc
jns
dec
and
dec
xchg
cli
lods
or
out
jg
adc
out
lods
push
pop
lock
jmp
add
jmp
repnz
xchg
pusha
clc
(bad)
(bad)
jg
je
adc
sahf
fisttp
and
in
fdivr
not
mov
fidivr
jge
stos
(bad)
(bad)
(bad)
inc
rol
mov
dec
cmps
mov
clc
ja
xor
lea
xor
(bad)
call
mov
(bad)
pushf
cmp
fcmovnbe
loop
and
or
cmp
out
in
push
(bad)
(bad)
(bad)
jmp
test
out
cmc
mov
add
mov
loopne
cld
xor
xchg
or
xchg
jae
inc
aad
test
mov
inc
pop
je
(bad)
push
stos
xlat
push
(bad)
(bad)
jg
ins
xlat
adc
ficomp
test
xchg
mov
lahf
(bad)
(bad)
(bad)
inc
out
out
mov
das
fsub
fist
inc
sub
sub
push
das
inc
cmps
(bad)
and
rcl
std
sub
jg
in
fist
cmp
sub
addr16
jnp
shr
pop
xchg
out
(bad)
(bad)
(bad)
(bad)
jmp
loop
test
pop
inc
jo
nop
jp
pop
(bad)
dec
dec
std
in
mov
sbb
cmp
adc
add
mov
jmp
rol
aam
aas
pop
mov
xor
push
pop
mov
add
(bad)
(bad)
dec
sub
scas
push
fsubr
dec
add
(bad)
(bad)
mov
fdiv
das
jle
mov
mov
push
lods
sbb
out
jns
or
dec
fimul
stos
icebp
loope
(bad)
call
sbb
xchg
inc
xor
das
mov
inc
pushf
out
scas
dec
mov
(bad)
(bad)
ffreep
rcr
cmp
adc
out
std
push
loopne
pop
jle
adc
in
lea
call
repnz
pop
cmp
call
les
out
out
(bad)
int
(bad)
(bad)
(bad)
push
je
cmp
jmp
data16
and
mov
xor
mov
test
jp
out
or
or
add
(bad)
(bad)
jmp
pusha
imul
dec
pop
(bad)
mov
loope
sub
pop
add
jnp
jmp
(bad)
(bad)
push
jl
rcl
push
dec
mov
jo
pop
mov
cmp
stc
jbe
or
dec
ret
(bad)
(bad)
(bad)
jnp
pop
sub
imul
rol
sti
ja
jno
stc
lods
pop
js
jns
inc
dec
mov
or
(bad)
jg
sbb
mov
(bad)
cmp
fdiv
repz
jge
push
rcr
(bad)
(bad)
(bad)
(bad)
std
outs
inc
shr
jecxz
push
mov
ins
push
jecxz
pop
shr
arpl
xlat
mov
idiv
jb
inc
xchg
test
jle
push
retf
loope
lds
jae
dec
imul
fs
repz
jg
or
adc
inc
aas
loope
xor
dec
(bad)
out
fstp
iret
ror
stos
lods
push
loopne
cmp
call
cmp
repnz
dec
outs
movs
into
loope
into
sbb
cmc
ins
cmp
pop
pop
loope
sbb
retf
(bad)
(bad)
call
sbb
fstp
leave
out
adc
loop
add
xchg
pop
fidivr
cmp
pusha
add
push
cmps
(bad)
(bad)
(bad)
mov
xchg
xor
push
dec
xchg
push
mov
fucomp
data16
hlt
cmp
inc
cmp
dec
pop
aam
inc
lock
cmp
add
mov
dec
push
xchg
dec
xchg
push
or
(bad)
push
mov
outs
scas
mov
and
cmc
dec
icebp
pop
mov
(bad)
jmp
jmp
jnp
popa
and
push
ds
pop
ja
inc
push
adc
fs
push
(bad)
jg
(bad)
bound
cwde
pushf
lods
push
cmps
clc
xchg
mov
push
(bad)
pop
push
(bad)
(bad)
(bad)
call
sbb
xor
and
stc
arpl
push
adc
sub
mov
jmp
lods
push
xchg
ins
fld
jne
dec
cmps
pop
push
mov
(bad)
lods
or
call
aad
sub
sbb
test
aaa
cmp
ds
dec
test
push
nop
movs
pop
dec
cld
(bad)
(bad)
dec
int3
or
sar
or
int3
loope
mov
imul
xchg
pop
div
ret
(bad)
push
push
stc
push
or
xor
mov
clc
call
xchg
push
int
and
out
push
sub
mov
je
loopne
cmp
(bad)
(bad)
jmp
jbe
call
out
ins
sub
add
ds
(bad)
loop
and
sub
mov
(bad)
jmp
adc
push
out
nop
(bad)
mov
ss
or
out
jb
fcom
call
inc
jle
test
enter
dec
sbb
inc
mov
aad
(bad)
inc
and
ins
sub
push
jmp
(bad)
fs
imul
(bad)
(bad)
jg
adc
outs
vxorpd
mov
sub
inc
fstp
push
xchg
sbb
nop
call
(bad)
(bad)
inc
into
cdq
mov
pushf
mov
leave
stos
fs
jae
jle
mov
(bad)
out
stc
rcl
retf
(bad)
(bad)
(bad)
jmp
adc
add
mov
add
test
test
loop
addr16
cmp
mov
mov
(bad)
jmp
mov
xor
cmp
jb
mov
push
retf
and
(bad)
(bad)
(bad)
(bad)
dec
cs
dec
inc
pop
or
ss
cld
jae
or
add
jb
mov
pop
lahf
xchg
jecxz
cmp
ret
pop
cwde
(bad)
xor
cwde
inc
cdq
mov
out
push
inc
jbe
mov
jno
(bad)
(bad)
call
mul
shl
jp
sti
mov
je
xchg
popf
pop
cmp
in
cmp
addr16
(bad)
dec
test
inc
dec
retf
retf
mov
adc
pop
fcomp
pop
nop
ret
iret
call
sub
scas
inc
pop
(bad)
mov
cmovae
xlat
data16
repnz
mov
adc
inc
(bad)
(bad)
(bad)
(bad)
std
fs
iret
inc
movs
xlat
xchg
xchg
fistp
fwait
mov
adc
cli
lds
popf
mov
cmp
call
loop
mov
ret
xchg
inc
(bad)
or
pop
ja
cld
into
jno
(bad)
(bad)
inc
and
aas
mov
nop
ret
jnp
mov
jg
movs
cmp
(bad)
xchg
mov
(bad)
mov
popa
cli
(bad)
int3
(bad)
out
rcr
jmp
(bad)
in
push
test
sbb
nop
cmp
mov
inc
add
push
and
std
adc
or
inc
and
mov
repnz
(bad)
(bad)
in
jne
xor
mov
mov
leave
jmp
fadd
(bad)
neg
(bad)
(bad)
(bad)
push
ror
and
stos
cmps
dec
fwait
ret
pop
sub
push
sahf
enter
ins
dec
pop
in
cld
mov
mov
(bad)
mov
cwde
fdivrp
mov
and
inc
sub
outs
push
sub
(bad)
(bad)
call
(bad)
adc
(bad)
adc
imul
sti
out
loop
clc
push
std
cli
clc
push
dec
xchg
jle
sbb
mov
(bad)
cs
(bad)
fist
mov
fstp
sbb
stos
or
(bad)
jg
jmp
mov
mov
push
push
sub
aam
(bad)
(bad)
(bad)
jmp
adc
ja
cmp
dec
jb
mov
dec
dec
bound
mov
test
(bad)
(bad)
(bad)
jge
outs
imul
jl
idiv
repnz
test
xchg
jmp
pop
pushf
das
jle
push
rol
mov
jmp
jecxz
mov
pop
repz
adc
cs
and
cmp
(bad)
call
fsubr
call
fisttp
or
iret
pop
pop
shl
cwde
xlat
fcmovnb
stc
adc
jg
jmp
xchg
jns
ds
push
icebp
ss
lea
ds
cwde
xchg
mov
(bad)
mov
ret
das
sbb
cld
cmp
clc
cmp
jge
pop
dec
jmp
fxch
sar
pusha
cmp
and
xor
in
retf
(bad)
(bad)
mov
adc
inc
ret
mov
shl
and
(bad)
adc
jmp
(bad)
mov
dec
xor
inc
xchg
or
outs
xchg
dec
int3
sub
mov
test
and
mov
mov
sbb
xor
and
sub
retf
dec
cdq
ror
ret
and
aad
add
xchg
fisttp
movs
cdq
xor
and
(bad)
(bad)
(bad)
jmp
rol
or
test
or
test
pop
and
ins
iret
sti
push
(bad)
(bad)
cmp
xor
loop
jmp
outs
fwait
and
mov
push
pushfw
cmp
aas
aas
aaa
repz
fsubr
and
push
sar
call
(bad)
es
scas
nop
cmc
gs
mov
push
fucomp
icebp
cdq
das
rcr
test
mov
loop
in
mov
ret
das
xchg
adc
mov
xchg
out
xor
(bad)
(bad)
(bad)
jmp
fisttp
or
in
js
jle
or
cmp
retf
and
xchg
and
cli
inc
inc
push
or
xor
pop
in
sub
jbe
and
sub
pop
pop
(bad)
(bad)
(bad)
push
gs
cs
xor
movs
sub
push
push
push
cmp
inc
ror
jnp
mov
(bad)
(bad)
call
jo
pop
inc
loop
retf
jae
fsubr
loope
and
mov
outs
pop
mov
(bad)
(bad)
call
loope
ret
fmul
mov
add
jmp
dec
ror
or
call
push
dec
inc
shr
xchg
mov
aam
int3
jns
push
cmp
lahf
retf
mov
cmps
sahf
icebp
test
loopne
cld
(bad)
dec
dec
pop
aaa
sbb
loope
xor
push
add
adc
inc
neg
iret
jnp
push
fdivr
jmp
or
bound
xor
cmp
rcl
sbb
push
fs
push
stos
jg
(bad)
dec
dec
mov
add
fld
mov
add
sub
xor
(bad)
(bad)
call
dec
xchg
sub
fild
adc
pushf
jae
sti
lea
loop
add
jne
shr
(bad)
(bad)
(bad)
fisttp
pushf
push
cdq
sub
or
(bad)
int3
aas
xchg
xor
scas
imul
xchg
pushf
mov
(bad)
(bad)
call
or
and
inc
imul
xor
push
paddq
(bad)
(bad)
(bad)
inc
(bad)
iret
sbb
retf
and
sub
push
xlat
mov
movs
fistp
pop
mov
(bad)
(bad)
(bad)
dec
ffree
mov
pusha
(bad)
sub
icebp
stos
push
lock
in
shr
jle
pusha
in
sub
(bad)
(bad)
push
adc
js
cli
mov
mov
inc
sub
and
sub
inc
sahf
xchg
cmp
rcr
sub
sahf
pop
call
jmp
stos
scas
adc
(bad)
(bad)
jmp
cli
into
les
jno
pop
mov
(bad)
and
jecxz
lahf
mov
jg
(bad)
fsubr
mov
cs
bound
jle
rol
mov
leave
pop
jb
js
(bad)
add
mov
push
xchg
push
fld
mov
retf
(bad)
(bad)
(bad)
(bad)
cmp
and
mov
jns
xchg
cs
push
push
adc
push
loopne
or
sbb
(bad)
(bad)
fnstenv
into
xchg
xor
pop
das
jne
add
push
mov
jo
push
test
add
add
jg
push
arpl
push
fist
imul
not
dec
in
or
push
jnp
push
aad
es
fst
clc
jbe
dec
pop
adc
ror
ret
jmp
popa
pop
sbb
push
push
sbb
js
stos
pop
lock
dec
cmp
adc
arpl
in
lds
xchg
shr
cli
(bad)
(bad)
js
ret
test
mov
aas
mov
and
mov
dec
dec
cmp
(bad)
nop
mov
add
fs
out
int
(bad)
(bad)
(bad)
dec
popf
test
mov
gs
lods
and
ins
adc
or
inc
add
daa
xor
jmp
inc
jb
xor
mov
xor
in
push
icebp
pop
sub
popf
data16
inc
push
mov
movs
(bad)
(bad)
(bad)
push
xor
outs
mov
cmp
iret
retf
mov
aad
pop
jnp
mov
sti
std
(bad)
(bad)
(bad)
push
pop
bound
and
out
lods
adc
adc
pop
xchg
mov
aaa
cld
(bad)
(bad)
stc
pushf
mov
imul
sbb
add
pushf
xor
inc
sti
or
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
call
je
push
sub
sub
and
inc
xchg
jmp
mov
pop
movs
popf
lahf
mov
or
and
push
rcl
xor
(bad)
(bad)
(bad)
call
mov
mov
dec
lods
jne
js
pop
or
sub
sub
mov
std
pop
in
sar
scas
push
rcr
jle
repnz
mov
inc
push
fsub
(bad)
(bad)
push
adc
lahf
mov
cmp
cmps
jecxz
jmp
and
in
(bad)
retf
mov
cmp
jmp
stos
jmp
das
repnz
movs
mov
and
fiadd
lea
mov
icebp
(bad)
(bad)
push
pop
rcr
leave
mov
pop
mov
addr16
mov
jne
push
pop
jge
aam
(bad)
jmp
add
sub
outs
pop
push
call
jmp
mov
jmp
pop
jae
leave
mov
ins
sti
sub
test
xor
dec
(bad)
(bad)
(bad)
(bad)
cmp
mov
xor
inc
scas
and
ret
lea
xor
imul
or
lods
(bad)
jg
dec
add
mov
icebp
nop
mov
and
test
mov
(bad)
(bad)
fcomip
rcl
sub
mov
inc
es
sahf
xchg
es
mov
push
xor
movs
sub
xchg
and
or
call
sub
push
sbb
shl
fwait
inc
sahf
push
push
push
std
jmp
pop
rcl
mov
inc
(bad)
jl
xor
mov
rcr
push
mov
dec
dec
ret
sub
jge
stos
pop
dec
and
pop
push
mov
mov
bound
lahf
pop
repz
(bad)
jg
dec
push
cmps
or
cmp
mov
hlt
cmp
fdiv
jmp
inc
jge
xlat
mov
sub
div
sahf
aad
in
iret
inc
(bad)
in
jg
lahf
mov
repz
fild
ret
cmp
test
dec
jg
fs
sar
and
retf
div
ret
pushf
(bad)
xlat
std
retf
pop
xchg
or
into
(bad)
jmp
mov
add
mov
adc
adc
adc
xor
mov
out
fsub
(bad)
mov
out
leave
mov
dec
in
push
sti
je
repz
mov
lods
cdq
int
jg
mov
(bad)
(bad)
(bad)
push
ins
cmp
fcom
mul
mov
test
clc
popa
stc
stc
push
pop
add
jmp
inc
push
jecxz
mov
jecxz
inc
bound
xor
push
or
les
arpl
inc
pop
and
push
and
outs
mov
xor
xor
dec
sbb
add
inc
add
call
int
dec
popf
push
fwait
xor
hlt
(bad)
(bad)
call
xchg
xor
xchg
mov
mov
mov
mov
test
(bad)
cs
mov
mov
retf
call
aam
cmp
(bad)
sub
in
(bad)
jg
arpl
les
and
stos
out
mov
int
fnstsw
cs
adc
mov
call
test
inc
fldenv
xchg
in
mov
sar
mov
(bad)
jmp
enter
data16
call
fldcw
imul
data16
jp
enter
jmp
(bad)
push
push
ret
inc
and
inc
push
fistp
and
xchg
cmp
mov
(bad)
cmp
repnz
xor
cwde
stc
jecxz
xchg
bound
in
sbb
arpl
inc
retf
push
pop
imul
and
add
jne
push
sbb
out
(bad)
sbb
push
adc
jb
or
test
jbe
dec
xchg
data16
xchg
inc
test
or
push
push
lock
outs
dec
jmp
jmp
jp
sub
inc
ins
mov
lock
add
push
xlat
cdq
sub
xor
sub
push
pop
jb
dec
push
in
lock
cli
aam
mov
clc
icebp
mov
not
mov
dec
dec
hlt
mov
lods
leave
int
pop
pusha
fisubr
or
mov
cmp
dec
and
add
sbb
cdq
push
dec
std
mov
push
test
inc
pop
and
repz
shl
out
mov
sbb
repnz
(bad)
(bad)
(bad)
jns
movs
imul
fsubr
inc
daa
jmp
loopne
retf
push
jnp
nop
xchg
(bad)
add
push
cli
(bad)
(bad)
mov
js
mov
pusha
dec
cdq
xor
mov
ficom
(bad)
(bad)
jmp
retf
outs
xchg
scas
lea
xchg
andnps
sahf
xchg
cmps
dec
cdq
scas
jp
icebp
mul
sub
ja
(bad)
(bad)
(bad)
inc
pop
jns
cmp
cmp
jmp
data16
pop
inc
push
(bad)
repz
sub
push
aam
xchg
jle
sbb
enter
cmp
jns
in
mov
cmc
jb
(bad)
(bad)
jmp
dec
push
fwait
dec
xor
mov
jno
jg
repz
jne
pop
outs
dec
(bad)
imul
out
(bad)
or
dec
test
call
mov
and
and
push
mov
scas
ud0
(bad)
dec
push
jbe
scas
shr
jnp
adc
js
sbb
inc
dec
lods
cmc
imul
(bad)
(bad)
dec
(bad)
cmp
jle
pop
scas
mov
gs
nop
and
jb
in
dec
lea
push
jge
mov
sbb
(bad)
(bad)
out
sbb
xor
iret
sahf
pop
mov
(bad)
(bad)
retf
pop
loope
and
jl
clc
jl
clc
jg
(bad)
stc
push
adc
pushf
sahf
push
mov
sbb
cmovo
(bad)
push
sbb
cli
stos
(bad)
xchg
sbb
and
cmps
push
push
imul
test
(bad)
(bad)
(bad)
mov
stos
jns
test
retf
xlat
ss
jmp
xor
sar
add
adc
sbb
icebp
mov
dec
scas
aam
mov
int
inc
xor
(bad)
hlt
mov
ret
push
arpl
in
(bad)
(bad)
(bad)
(bad)
cmp
jmp
lea
scas
mov
ficomp
lods
out
or
and
les
rcl
scas
dec
(bad)
(bad)
jmp
jp
jne
pop
jo
mov
outs
imul
mov
add
mov
pushf
xor
fistp
cmc
retf
ror
mov
mov
jae
xor
test
clc
(bad)
jmp
aam
adc
js
pop
lods
mov
cmp
(bad)
push
int3
mov
daa
repnz
ret
cmp
and
mov
mov
mov
adc
add
fidiv
call
mov
popa
jne
js
js
add
leave
or
or
xor
(bad)
(bad)
jmp
push
sbb
stos
xor
push
or
popf
int
xor
push
push
inc
xor
cwde
jl
cmp
push
adc
test
imul
push
call
dec
shl
popf
mov
jge
jmp
scas
fst
push
or
push
in
jecxz
xor
push
(bad)
rcr
(bad)
jmp
sbb
xchg
add
add
mov
les
(bad)
(bad)
(bad)
call
fidivr
mov
mov
sub
shl
mov
mov
and
je
out
mov
(bad)
dec
fisub
jno
push
daa
call
xor
xor
jl
(bad)
(bad)
call
xlat
mov
les
xchg
jl
rcl
jp
(bad)
nop
fdiv
jns
inc
push
loope
mov
out
xchg
jmp
shl
dec
push
adc
sub
call
movs
sub
in
xchg
cmc
lahf
push
or
je
pop
jmp
dec
fwait
xchg
cmc
push
sbb
mov
mov
mov
movs
pop
sub
sahf
xchg
dec
pop
leave
sub
cli
push
sbb
outs
test
xor
dec
push
gs
mov
and
inc
xor
jmp
pop
or
test
(bad)
(bad)
(bad)
dec
in
jne
mov
push
push
adc
xchg
or
mov
push
mov
sbb
sub
jle
nop
mov
jo
inc
push
bound
jne
in
aam
out
push
mov
mov
(bad)
cmp
cmp
xor
bound
adc
sbb
pop
hlt
inc
and
push
xchg
(bad)
(bad)
(bad)
jg
jmp
jnp
pushf
clc
push
jno
or
pusha
push
adc
cmp
cmps
(bad)
inc
test
xchg
adc
sbb
push
dec
sbb
push
mul
(bad)
(bad)
(bad)
fcomp
fidiv
nop
push
jmp
push
and
cmp
retf
inc
xchg
adc
pop
arpl
jns
cwde
test
pop
stos
push
pop
mov
push
add
push
movs
fwait
mov
addr16
test
(bad)
(bad)
cmp
sub
or
push
stos
sbb
push
mov
(bad)
adc
mov
inc
dec
sub
sub
or
pop
out
and
dec
jmp
sahf
adc
movs
xor
(bad)
call
cmp
enter
stos
pop
xor
and
(bad)
(bad)
(bad)
(bad)
out
push
shl
cmp
mov
(bad)
mov
sub
lock
ret
ds
pop
bound
and
and
mov
and
push
dec
or
iretw
movs
pop
jmp
je
adc
(bad)
call
pop
lahf
xchg
test
xor
jbe
adc
cli
inc
jp
jl
ja
dec
in
loope
or
ss
cmp
loopne
and
jp
jb
pushf
jne
pushf
bound
mov
out
test
inc
xchg
movs
xchg
pop
sub
hlt
xchg
push
fadd
jnp
(bad)
(bad)
jmp
mov
leave
lds
jmp
xchg
xchg
push
sbb
mov
cmps
(bad)
(bad)
(bad)
jmp
push
push
ror
das
je
sub
or
shl
jecxz
aad
xchg
les
cwde
jle
push
scas
adc
mov
bound
sub
push
xchg
or
ins
mov
stos
imul
shr
mov
push
jns
or
fwait
push
enter
loope
icebp
xchg
ficom
inc
test
movs
ret
(bad)
dec
inc
xor
push
and
inc
stos
fcmovbe
xchg
add
stos
loope
jae
xacquire
outs
xchg
movs
ficomp
(bad)
call
loop
jmp
xor
retf
add
add
xchg
in
cli
dec
sub
(bad)
(bad)
call
jae
sub
jo
cmp
nop
cld
mov
cmp
dec
stos
sub
xor
lods
jge
sub
jno
and
(bad)
(bad)
jmp
fst
jns
or
jae
push
jns
retf
popa
jmp
mov
(bad)
dec
les
xchg
push
cmc
inc
outs
stos
je
or
push
cmp
icebp
inc
call
cmp
push
retf
or
(bad)
fcomip
push
inc
test
adc
shl
lock
sbb
fwait
(bad)
(bad)
inc
lds
xchg
adc
mov
aaa
xchg
ud2
aam
and
js
outs
(bad)
(bad)
dec
(bad)
std
add
scas
and
xchg
mov
andps
call
ficom
out
rcr
aas
xchg
pop
add
imul
(bad)
jmp
pushf
or
in
cmp
add
push
mov
clc
call
add
(bad)
(bad)
(bad)
dec
mov
loopne
outs
out
inc
jno
movs
jmp
jecxz
popa
xchg
rcl
mov
xchg
mov
repz
or
xor
ret
add
mov
(bad)
(bad)
jmp
dec
mov
mov
mov
in
adc
dec
jo
cmp
js
cmps
test
(bad)
jg
icebp
test
pushf
jmp
out
pop
jne
(bad)
push
and
(bad)
jmp
pusha
inc
fldz
mov
xor
add
mov
mov
pusha
xchg
loopne
test
xchg
jmp
sbb
inc
out
pop
push
(bad)
(bad)
fdivr
pop
mov
inc
(bad)
inc
iret
ret
loope
push
(bad)
xchg
(bad)
dec
mov
pop
inc
jle
(bad)
(bad)
(bad)
(bad)
cmp
push
xor
clc
out
neg
std
fsub
fcomp
pop
into
fidivr
sbb
stos
in
in
mov
loope
dec
imul
div
ins
cmp
dec
hlt
cmps
mov
(bad)
jmp
xor
push
sbb
imul
adc
pop
call
sbb
push
cmp
sub
cli
pop
sar
dec
rcl
xor
cmp
test
mov
pushf
test
sbb
loope
clc
mov
(bad)
(bad)
call
les
sbb
loop
aad
mov
(bad)
mov
sar
mov
sbb
cmc
mov
(bad)
(bad)
(bad)
jmp
icebp
adc
fstp
aad
jae
out
push
inc
arpl
cld
and
ds
cmp
bound
call
jbe
lods
divps
outs
adc
mov
fmul
mov
jnp
pop
mov
call
jg
cmovae
in
repz
popf
pop
mov
(bad)
jb
jp
mov
dec
out
mov
data16
push
pxor
cmp
jmp
(bad)
(bad)
(bad)
inc
pop
test
out
loop
adc
jmp
push
out
xlat
xor
imul
push
sti
fcomip
push
scas
mov
std
sti
test
add
(bad)
jg
mov
lea
mov
mov
mov
sbb
(bad)
call
(bad)
scas
adc
push
mov
mov
xchg
out
das
mov
pop
cmc
jmp
or
call
ret
push
adc
mov
loopne
cld
mov
xlat
movs
ja
fcmovbe
cmp
xor
pop
and
in
jno
retf
aas
je
nop
sub
repz
shl
scas
js
retf
mov
arpl
(bad)
(bad)
(bad)
call
pushf
stc
push
inc
loop
lds
pop
je
popa
mov
push
outs
inc
int3
repnz
jl
push
mov
out
scas
test
mov
pop
xchg
pop
inc
xor
(bad)
loope
dec
lock
sub
jnp
sbb
test
lods
sub
nop
xlat
pop
pop
lods
mov
(bad)
(bad)
(bad)
dec
das
push
call
mov
jp
ins
inc
push
push
xor
sbb
mov
(bad)
mov
nop
cmp
push
jmp
xchg
cmp
js
scas
sbb
test
jnp
push
scas
fbld
pusha
and
aas
mov
arpl
adc
mov
push
add
cmp
(bad)
(bad)
push
(bad)
fwait
in
jne
and
inc
mov
mov
cmp
pop
idiv
hlt
mov
lods
retf
aad
(bad)
(bad)
inc
adc
out
mov
out
js
ds
jle
jmp
in
mov
pop
ret
pop
jmp
popa
jge
pop
mov
dec
mov
(bad)
call
out
or
push
mov
les
not
int3
mov
inc
imul
adc
and
inc
xlat
dec
lea
call
mov
rcl
xor
pushf
std
(bad)
(bad)
jmp
jmp
pushf
mov
jae
cmp
jbe
stc
mov
mov
rcr
mov
(bad)
(bad)
mov
and
sub
dec
dec
ins
add
and
stos
sbb
dec
stos
(bad)
(bad)
jmp
lods
inc
mov
cld
jle
(bad)
sub
les
call
ins
cld
div
daa
xchg
enter
xor
xor
and
pop
cld
(bad)
dec
inc
inc
push
jmp
cdq
push
shl
popa
loope
jno
lods
mov
into
pop
mov
(bad)
jg
mov
pop
lock
push
adc
xchg
xchg
mov
xor
fdiv
jmp
mov
inc
push
ja
gs
rcr
dec
push
ret
mov
mov
xor
inc
mov
jmp
dec
pop
fadd
xchg
shl
repnz
inc
push
cwde
repz
sbb
fadd
pusha
xchg
and
mov
push
add
pusha
jmp
movs
jae
data16
(bad)
push
(bad)
adc
fidivr
ja
addr16
test
mov
dec
(bad)
mov
ret
arpl
jmp
fmul
push
hlt
shl
dec
or
dec
ret
pop
xor
leave
fcom
(bad)
(bad)
(bad)
out
push
fild
cmps
mov
rcl
push
xor
push
mov
fdiv
mov
popf
(bad)
(bad)
(bad)
jmp
push
stc
jp
repz
into
cmp
ror
loope
fwait
mov
sbb
dec
neg
adc
sar
(bad)
inc
dec
nop
cmp
ret
jp
call
push
aad
cs
cmp
(bad)
(bad)
jg
xchg
mov
push
adc
push
les
in
mov
add
dec
test
call
mov
mov
movs
mov
mov
in
movs
jb
mov
ds
mov
pop
push
jp
or
lods
rcr
jb
mov
cmps
jns
jl
pop
cmc
(bad)
push
xlat
cdq
sub
jbe
add
mov
rol
push
cmp
inc
(bad)
push
sub
(bad)
mov
push
push
push
add
aad
xchg
aam
dec
aad
xchg
xchg
(bad)
jg
enter
addr16
cmc
pushf
or
mov
mov
push
dec
(bad)
cmp
dec
adc
add
mov
enter
out
lods
aaa
jge
(bad)
jmp
out
or
and
inc
and
pusha
hlt
mov
hlt
mov
fisttp
out
xchg
dec
test
pop
push
retf
fsub
mov
jecxz
add
loopne
add
jl
and
out
add
xor
(bad)
mov
(bad)
in
mov
aam
shl
sbb
bnd
out
adc
jg
sub
clc
ss
clc
jg
lock
inc
jecxz
add
inc
mov
adc
ja
mov
add
cmp
popa
xchg
mov
clc
sub
jmp
stos
std
popa
retf
and
mov
hlt
xchg
cld
mov
xlat
imul
std
inc
not
mov
jg
xor
xchg
stc
sbb
ss
(bad)
(bad)
inc
dec
and
test
(bad)
sbb
outs
push
pop
test
jnp
ins
(bad)
(bad)
(bad)
dec
jp
pop
pop
jnp
leave
sbb
(bad)
std
mov
sbb
ud0
push
jmp
dec
jecxz
imul
stos
call
call
(bad)
(bad)
(bad)
dec
mov
adc
inc
sub
pop
and
imul
jp
pop
sub
pusha
dec
pop
shl
(bad)
dec
push
adc
js
push
mov
jle
mov
std
shl
fisttp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
and
mov
into
xchg
shl
jb
or
push
(bad)
(bad)
push
sbb
arpl
pushf
xor
call
aam
shr
add
pop
imul
cmp
js
or
push
lahf
vcvttsd2si
push
and
mov
shl
xchg
adc
inc
daa
mov
stc
dec
in
enter
sub
dec
ror
push
ins
(bad)
(bad)
(bad)
jmp
loop
sub
dec
shl
movs
push
ret
mov
pop
or
fcom
retf
call
sub
add
dec
rol
xor
sub
(bad)
(bad)
dec
cmp
enter
xor
es
mov
mov
mov
cwde
imul
and
xor
jg
inc
lods
adc
jae
stos
aas
inc
sub
sub
(bad)
(bad)
(bad)
mov
(bad)
ja
pop
in
mov
loope
aaa
jae
test
push
je
adc
cmp
inc
popf
sbb
in
imul
pushaw
inc
xchg
in
push
test
test
pop
loopne
cmps
mov
mov
xchg
jne
sub
(bad)
jl
ret
int
xchg
cs
test
(bad)
call
sahf
je
mov
or
ret
das
jg
popa
outs
push
loope
sahf
pop
adc
jno
jg
(bad)
out
cmp
cdq
push
fmul
and
icebp
and
dec
inc
call
dec
inc
xchg
xchg
push
adc
popa
push
rcl
fisub
mov
and
test
(bad)
(bad)
(bad)
call
(bad)
retf
xchg
and
push
adc
mov
pop
add
fstp
inc
add
mov
imul
cld
(bad)
mov
popf
leave
test
add
cmps
and
pusha
sub
xchg
(bad)
(bad)
call
jl
adc
rol
sub
push
push
lds
jmp
call
call
adc
(bad)
out
stos
mov
xor
push
popf
(bad)
(bad)
(bad)
(bad)
mov
out
retf
mov
loope
loopne
cmp
cmp
adc
sub
xchg
int
cmp
jb
mov
inc
aam
(bad)
(bad)
jmp
sub
dec
adc
xchg
lods
test
cmc
xchg
and
test
push
fmul
(bad)
(bad)
call
cmp
adc
xor
cmc
ret
fadd
mov
adc
jae
test
int
push
(bad)
(bad)
(bad)
jmp
mov
or
cwde
mov
inc
mov
mov
adc
adc
xor
inc
sub
(bad)
jg
xlat
ds
dec
push
push
pushf
jne
fs
push
adc
push
movs
xchg
or
push
loopne
mov
sub
loope
in
(bad)
(bad)
inc
(bad)
sbb
stc
out
and
inc
mov
stc
xchg
lea
les
pop
jns
fidiv
dec
dec
(bad)
(bad)
(bad)
call
enter
inc
ret
inc
dec
push
hlt
cdq
idiv
inc
xor
adc
mov
cmp
call
(bad)
(bad)
push
jb
popa
mov
mov
xchg
xchg
iret
add
jns
cmp
jp
retf
push
into
dec
loope
mov
fiadd
xor
push
test
push
pop
xor
into
adc
mov
jmp
cwde
mov
mov
adc
retf
pop
in
or
push
lods
jmp
xor
jmp
out
int
mov
and
mov
lea
xor
cmp
call
inc
push
xchg
add
adc
cmp
in
(bad)
fcmovb
movs
xchg
mov
aas
ins
addr16
jb
xor
(bad)
(bad)
(bad)
push
mov
loop
aam
push
rcr
dec
aaa
fsub
jecxz
mov
mov
cmp
cmp
in
pop
(bad)
in
push
repnz
pop
mov
(bad)
cmc
(bad)
(bad)
jmp
js
sub
into
adc
shl
dec
sbb
sub
call
and
mov
mov
rcl
cmp
outs
cmp
cmp
(bad)
push
mov
dec
stos
or
pop
dec
hlt
aam
dec
cmps
movs
cmp
(bad)
outs
hlt
and
cmps
imul
pop
(bad)
inc
sub
imul
ss
push
ror
pop
(bad)
call
dec
ins
push
outs
sub
test
pop
fs
push
fstp
and
mov
jno
(bad)
(bad)
mov
lock
adc
lock
push
js
mov
mov
adc
cdq
push
cwde
into
enter
les
data16
pop
mov
fwait
dec
retf
xchg
idiv
(bad)
jmp
pop
xchg
cmp
aad
xchg
push
jmp
xor
mov
mov
sbb
dec
dec
and
sub
je
inc
dec
mov
mov
push
and
in
mov
call
mov
add
fsubp
loope
adc
adc
bound
repnz
cmps
(bad)
(bad)
out
cli
lock
hlt
repnz
cmc
mov
xor
and
out
and
(bad)
dec
push
pusha
xchg
scas
jmp
pop
push
retf
mov
jo
adc
dec
dec
cmc
push
jae
(bad)
(bad)
(bad)
(bad)
cld
jecxz
enter
cmp
hlt
xchg
mov
ror
lahf
push
push
call
(bad)
(bad)
(bad)
call
cmc
call
mov
retf
inc
sub
inc
mov
(bad)
(bad)
fcomip
ins
retf
pop
repz
dec
push
jae
pop
pusha
stc
mov
inc
jl
repnz
cmp
jmp
dec
mov
mov
cs
sub
arpl
mov
pop
hlt
pushf
or
das
jmp
not
sub
push
(bad)
(bad)
(bad)
push
and
out
les
hlt
inc
jmp
push
mov
fcomi
inc
(bad)
(bad)
(bad)
call
loope
pop
push
mov
push
popf
jb
adc
ins
call
jbe
loop
dec
lahf
cmc
dec
sar
int3
iret
dec
jnp
jbe
out
pop
or
in
lods
sub
(bad)
(bad)
call
fld
leave
mov
dec
inc
inc
ins
adc
test
ror
and
xchg
mov
das
cli
inc
jno
jg
out
jg
mov
sbb
ss
(bad)
(bad)
(bad)
out
mov
cmp
mov
rcr
lods
pop
xchg
sbb
mov
xchg
popf
retf
fmul
iret
sub
cli
and
(bad)
push
jb
xor
xor
shl
mov
fisub
jge
fistp
push
xchg
mov
push
mov
cmp
adc
loop
adc
into
cwde
xchg
and
mov
dec
arpl
pop
(bad)
mov
(bad)
(bad)
call
dec
ss
fwait
popa
fdiv
mov
jmp
mov
jmp
(bad)
dec
stos
xlat
dec
pop
or
sti
and
dec
fst
mov
xchg
jmp
clc
call
push
test
daa
rol
or
inc
(bad)
jmp
fwait
jl
push
push
(bad)
(bad)
(bad)
jmp
es
lahf
cmp
imul
adc
enter
fldenv
mov
pop
mov
push
fs
lods
jb
push
rcl
in
inc
inc
movs
xor
push
pusha
sub
push
and
pop
push
push
add
inc
cs
add
mov
test
loopne
inc
mov
out
cli
call
jo
shld
pushf
cdq
inc
sub
inc
in
mov
and
(bad)
dec
mov
xchg
jne
dec
scas
dec
jmp
mov
(bad)
(bad)
jg
dec
popf
sub
dec
lds
ret
jno
enter
mov
jns
call
movs
push
mov
stos
jmp
push
pop
cdq
jns
cli
das
clc
jmp
mov
cwde
int
addr16
mov
pop
jnp
jecxz
or
sbb
mov
inc
fwait
fs
and
(bad)
jg
sbb
and
sbb
jo
pop
jecxz
popf
stc
cld
adc
jmp
shr
mov
jmp
mov
cdq
and
popa
mov
(bad)
(bad)
call
cs
xchg
xchg
dec
adc
xchg
xlat
xchg
pop
(bad)
push
jno
scas
cmp
add
mov
dec
aad
(bad)
(bad)
inc
data16
(bad)
pop
out
cmp
js
test
adc
retf
(bad)
(bad)
(bad)
call
adc
adc
cld
cli
dec
xchg
mov
dec
fnstcw
sbb
cmp
(bad)
cdq
not
jb
(bad)
(bad)
push
nop
xchg
xchg
adc
mov
in
imul
sub
in
fwait
(bad)
(bad)
(bad)
push
fsub
fnstsw
mov
cmps
dec
dec
sub
(bad)
dec
lods
jnp
popf
cmp
(bad)
and
ret
jmp
xor
add
repz
mov
int3
jle
out
sub
fcmovnu
inc
(bad)
fs
test
jl
test
mov
(bad)
(bad)
mov
mov
adc
lods
dec
repnz
pop
sbb
mov
push
(bad)
jmp
das
clc
jmp
sub
enter
cmp
cli
xlat
pusha
cli
pop
fdivr
js
(bad)
jmp
cmp
adc
inc
je
(bad)
mov
jb
fiadd
shl
sub
and
push
mov
pop
ret
jmp
(bad)
and
and
cmp
(bad)
(bad)
(bad)
fbstp
retf
push
outs
loop
nop
(bad)
aas
or
push
retf
push
and
xor
sbb
inc
or
mov
rcr
(bad)
mov
in
cmps
pop
lods
or
xchg
mov
dec
jp
jle
cli
pop
std
pop
ins
dec
rcr
out
imul
in
mov
sub
shr
xor
retf
mov
lods
(bad)
mov
add
sub
(bad)
jg
xor
outs
in
in
jb
ss
mov
add
fwait
sbb
xchg
dec
lds
outs
cli
lds
sbb
push
dec
ret
xor
adc
aaa
inc
xchg
cli
jg
dec
popw
adc
fwait
retf
(bad)
retf
retf
shl
in
cmp
cmc
(bad)
out
jmp
add
and
cld
loop
(bad)
(bad)
(bad)
jg
(bad)
jne
push
neg
lods
sub
mov
mov
mov
sub
(bad)
(bad)
(bad)
jmp
ret
arpl
or
or
push
js
sub
dec
xlat
fnstenv
mov
frstor
(bad)
jg
shl
out
shr
lods
lods
cmp
(bad)
(bad)
jl
and
xchg
mov
jmp
pop
pop
add
inc
lds
jg
pop
outs
mov
pop
inc
cs
in
(bad)
dec
sub
add
jae
in
test
fld
fdiv
(bad)
jmp
or
push
cmp
jns
xchg
test
jg
clc
inc
dec
sub
(bad)
cs
and
and
mov
push
pop
sbb
hlt
(bad)
(bad)
(bad)
jmp
mov
sbb
pop
loope
aam
cmps
js
jmp
clc
or
(bad)
(bad)
call
inc
mov
ret
scas
dec
icebp
mov
cmps
out
out
and
mov
push
mov
(bad)
push
repz
in
dec
aas
daa
pop
xchg
add
inc
arpl
fldenv
psubsw
pop
mov
(bad)
(bad)
call
sar
or
arpl
cmp
mov
push
movs
cmp
pop
add
jno
adc
inc
int
pop
or
or
xchg
and
(bad)
enter
add
dec
(bad)
(bad)
(bad)
(bad)
mov
(bad)
sub
cmps
mov
mov
pop
push
sbb
call
das
clc
jmp
iret
cmp
dec
jne
push
mov
gs
adc
pop
mov
inc
mov
je
push
fwait
xchg
push
mov
and
(bad)
mov
pusha
sub
mov
push
and
mov
dec
pop
(bad)
(bad)
(bad)
jmp
pop
nop
stos
adc
(bad)
mov
test
xlat
mov
xor
sbb
(bad)
(bad)
call
repnz
dec
adc
push
inc
or
jbe
lea
mov
or
add
(bad)
jmp
jp
test
mov
or
leave
mov
enter
inc
adc
pop
mov
inc
push
jae
ret
xor
inc
and
cmp
ret
xor
dec
sbb
fs
std
push
jmp
mov
pop
and
sbb
and
out
inc
jo
test
lods
stos
jno
jns
clc
mov
mov
pusha
sbb
or
outs
mov
adc
clc
mov
and
cs
xor
pop
ds
and
(bad)
cmp
inc
cli
stos
cmc
mov
lods
lock
inc
push
cmp
enter
pop
cmc
(bad)
jmp
sub
(bad)
mov
retf
xchg
(bad)
mov
sub
cli
push
(bad)
inc
in
jbe
lea
mov
or
push
adc
xor
mov
pop
cmp
(bad)
call
sub
outs
cmp
js
xor
adc
scas
rol
(bad)
(bad)
(bad)
push
out
cmp
btr
jmp
fs
adc
mov
push
xchg
popf
sub
(bad)
(bad)
call
or
or
push
in
mov
pop
pop
mov
cs
fbld
lea
(bad)
(bad)
(bad)
inc
movs
and
and
addr16
dec
sbb
push
push
cmps
mov
int
mov
(bad)
(bad)
(bad)
jmp
xor
add
xor
hlt
sar
add
ss
popa
push
and
or
in
dec
(bad)
(bad)
(bad)
push
jl
jne
test
fdiv
mov
fidiv
(bad)
jns
xchg
sbb
push
inc
mov
arpl
and
rep
leave
xchg
aam
inc
adc
(bad)
jg
adc
(bad)
leave
inc
in
in
add
inc
(bad)
jmp
xor
jp
mov
mov
loope
(bad)
(bad)
(bad)
jmp
icebp
adc
mov
add
scas
xor
sbb
pop
lds
aaa
cld
(bad)
push
mov
push
push
dec
dec
jnp
cmps
mov
xchg
inc
xchg
retf
adc
test
(bad)
(bad)
(bad)
jmp
xor
ins
(bad)
push
cli
ret
push
jns
jmp
js
nop
add
xchg
frstor
sbb
(bad)
(bad)
(bad)
dec
call
inc
test
and
lahf
bound
aam
stos
push
xchg
(bad)
push
retf
movs
jmp
sar
mov
addr16
mov
call
std
(bad)
jmp
stos
mov
(bad)
loopne
push
xor
ror
jge
pusha
cmc
sbb
(bad)
(bad)
(bad)
out
xchg
adc
xchg
nop
pushf
enter
xchg
xchg
pop
repz
pusha
sub
popf
sahf
mov
lea
je
jge
push
add
dec
lea
sub
add
jmp
lock
sub
xor
inc
sbb
mov
mov
call
sbb
sub
les
pop
cwde
test
sub
pop
pushf
ret
sbb
jnp
or
adc
pop
test
jp
sub
(bad)
(bad)
jmp
pop
xor
inc
jl
(bad)
push
adc
push
jle
lock
loopne
fst
stc
(bad)
pop
jg
loop
and
mov
mov
sub
fdivr
mov
nop
pop
adc
lahf
sub
jnp
and
mov
jmp
cli
inc
add
into
adc
repnz
adc
xor
mov
and
(bad)
jmp
test
clc
popf
pop
pushf
mov
cmp
xor
jae
ret
(bad)
call
in
xchg
xchg
or
and
jns
dec
xor
loopne
(bad)
jg
mov
cmps
or
inc
cmp
push
push
sbb
add
lods
in
ud0
sub
into
xchg
sub
xor
or
xchg
push
push
push
sbb
xchg
imul
(bad)
(bad)
(bad)
call
lea
sbb
add
scas
push
mov
psraw
in
aam
mov
push
pop
mov
(bad)
call
sub
add
outs
outs
mov
sub
pop
mov
mov
mov
pop
and
mov
inc
push
jb
dec
xor
push
add
push
or
lea
shrd
mov
ja
mov
stos
pusha
clc
popa
mov
test
mov
push
mov
ret
add
dec
push
dec
mov
out
std
(bad)
inc
or
xor
hlt
pop
outs
mov
mov
xor
(bad)
(bad)
inc
fistp
dec
hlt
out
xchg
ins
xor
push
mov
and
(bad)
(bad)
fbld
retf
in
gs
in
pop
stos
sub
push
leave
and
mov
push
fidiv
inc
jl
sub
dec
and
mov
repz
or
fs
pop
and
add
jmp
ins
(bad)
jl
repz
sub
pop
outs
or
mov
xacquire
lahf
add
lods
sub
ja
cmp
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
sti
lock
jo
in
call
sbb
mov
xchg
xor
dec
ret
cmc
pop
(bad)
call
inc
dec
out
inc
imul
cmps
mov
fwait
(bad)
(bad)
(bad)
int
mov
xor
ja
sahf
mov
pop
mov
int3
push
inc
ja
(bad)
call
xchg
test
ror
push
retf
mov
fild
dec
xor
std
add
stos
xchg
loopne
sub
lds
inc
dec
mov
jmp
mov
sbb
(bad)
mov
jecxz
mov
xchg
inc
sbb
jbe
pop
ss
dec
mov
loope
into
(bad)
(bad)
(bad)
dec
call
pop
in
adc
addr16
into
adc
jp
jbe
cli
push
aad
dec
pop
mov
or
add
hlt
cmp
xchg
pop
jo
sub
(bad)
(bad)
dec
iret
mov
shl
ficomp
jmp
mov
in
sar
(bad)
(bad)
call
popa
push
dec
mov
sub
call
mov
mov
aas
or
jecxz
sbb
mov
shl
add
jl
dec
dec
imul
mov
adc
scas
(bad)
(bad)
(bad)
inc
adc
inc
jg
mov
or
mov
or
mov
inc
jmp
(bad)
dec
add
stc
icebp
jecxz
add
push
rol
(bad)
leave
push
cli
(bad)
(bad)
call
rcl
les
outs
clc
jb
movs
jb
and
hlt
push
push
lea
jmp
(bad)
jmp
mov
sbb
out
movs
loop
into
cmp
push
push
or
hlt
out
(bad)
mov
pop
xlat
push
pop
lods
cmp
xor
neg
sbb
push
loope
(bad)
(bad)
mov
pusha
gs
mov
repz
sbb
pop
inc
dec
(bad)
sar
mov
scas
inc
test
push
cmp
fnstsw
adc
jbe
adc
mov
(bad)
inc
jmp
ins
push
pop
sbb
in
jae
mov
(bad)
(bad)
(bad)
jg
dec
data16
cmc
mov
sub
push
sbb
sub
add
daa
(bad)
(bad)
(bad)
dec
cdq
test
and
sbb
or
xchg
imul
(bad)
(bad)
inc
gs
cmp
inc
or
push
aas
out
aaa
pop
mov
stos
xor
bound
cmp
(bad)
(bad)
(bad)
(bad)
jmp
shr
retf
ss
and
test
add
xor
dec
mov
cmps
add
sbb
jle
mov
mov
hlt
pop
stos
(bad)
(bad)
(bad)
call
js
repnz
jmp
movzx
push
int
and
fsin
aaa
call
push
jg
cmp
fadd
(bad)
imul
ficomp
(bad)
aam
not
push
test
(bad)
fnstsw
ins
ss
mov
sub
fcomi
sbb
mov
sub
out
sahf
pop
inc
(bad)
mov
(bad)
jmp
xlat
fidiv
fidivr
test
les
mov
xchg
stos
adc
scas
mov
pop
add
xchg
xchg
adc
fwait
cmp
fwait
mov
test
lods
jmp
jp
mov
push
(bad)
(bad)
cmp
pushf
pop
dec
xor
cmps
mov
mov
dec
(bad)
(bad)
(bad)
(bad)
call
in
in
shl
fcom
popf
lods
retf
int
mov
cdq
lea
call
(bad)
call
sub
lock
out
xchg
mov
ret
add
sahf
pop
(bad)
adc
inc
add
xlat
inc
out
ds
adc
push
es
inc
cli
movs
mov
push
inc
inc
shl
shl
int
inc
cmp
and
mov
fisttp
or
sub
add
jg
(bad)
jle
stc
dec
stc
je
fwait
retf
mov
sbb
loope
xor
pop
sti
mov
call
cmp
mov
cmp
cli
cli
mov
(bad)
fstp
(bad)
cld
popf
lahf
lahf
lock
(bad)
ds
inc
int3
xchg
mov
inc
adc
mov
loope
or
out
pop
inc
mov
cmp
fsubr
ja
mov
mov
repz
leave
(bad)
stc
pop
push
sub
mov
ror
inc
(bad)
(bad)
(bad)
jmp
or
pop
push
test
sbb
retf
add
test
push
add
js
mov
(bad)
(bad)
push
sbb
rol
push
xor
sub
sub
clc
ret
jbe
nop
push
(bad)
(bad)
(bad)
call
in
mov
mov
xchg
pop
and
xor
rol
dec
fisttp
out
jmp
(bad)
jmp
xchg
imul
sub
pushf
adc
push
or
call
xor
jne
mov
sub
xor
mov
shr
mov
(bad)
jmp
xlat
sub
dec
icebp
pushf
ret
add
push
jp
and
addr16
in
xchg
inc
test
lods
mov
sar
data16
mov
xor
sbb
pushf
pop
sub
stc
push
mov
pop
icebp
icebp
mov
add
mov
(bad)
xchg
or
push
cmp
out
(bad)
rcr
(bad)
(bad)
jmp
push
pop
ds
sbb
lods
mov
mov
out
in
adc
inc
jecxz
push
test
cli
gs
(bad)
jmp
and
or
mov
jbe
jmp
ins
cmp
pop
mov
(bad)
jg
dec
out
sbb
pop
icebp
sbb
sub
add
mov
inc
(bad)
(bad)
(bad)
dec
and
in
dec
nop
scas
rol
push
test
in
xor
and
in
pop
imul
ins
(bad)
(bad)
(bad)
jmp
out
xchg
div
bound
test
sub
mov
stos
push
adc
mov
push
push
xchg
dec
add
cmps
ds
push
(bad)
sbb
xor
call
adc
inc
pop
ins
xor
push
inc
adc
dec
call
jmp
jno
cmp
out
inc
ret
push
aam
stc
jp
xchg
outs
xor
jmp
(bad)
(bad)
(bad)
out
imul
daa
sub
jmp
pushf
add
push
cwde
out
pop
sbb
ins
lock
sbb
(bad)
(bad)
(bad)
dec
mov
in
inc
mov
push
call
jne
inc
mov
adc
sub
push
cwde
pop
loopne
jmp
out
mov
mov
sub
xor
push
(bad)
je
cmp
daa
cmc
(bad)
mov
sub
mov
cs
test
bound
(bad)
jg
dec
sub
xchg
push
les
fwait
jb
or
mov
jg
jg
cmp
mov
into
pusha
push
jmp
push
cmp
jl
(bad)
dec
adc
inc
and
push
stos
add
mov
jb
add
(bad)
(bad)
(bad)
inc
sub
push
mov
push
nop
sahf
test
jl
push
(bad)
cdq
js
xchg
mov
and
(bad)
(bad)
(bad)
jmp
xlat
ret
jae
iret
int3
adc
rcr
shr
mov
and
mov
xchg
inc
popa
pop
leave
(bad)
cmps
sbb
movs
pop
dec
repnz
xor
retf
enter
js
(bad)
(bad)
push
jns
cwde
repz
push
rol
in
aaa
pop
pop
js
hlt
pop
mov
clc
xor
xor
mov
mov
ret
sub
(bad)
jmp
sub
mov
cmc
jns
xor
add
dec
push
mov
mov
(bad)
(bad)
jmp
daa
int3
lds
int3
call
xor
fidivr
mov
ss
pop
(bad)
in
sar
rcr
push
stc
pop
cmps
test
out
cmp
push
cmc
(bad)
dec
pop
sub
or
adc
cmp
lds
sbb
cmp
fild
mov
test
mov
loope
and
(bad)
jg
push
cmp
or
mov
stc
test
or
mov
(bad)
(bad)
(bad)
sti
adc
cmp
jne
push
jp
or
bound
xchg
int3
push
in
push
fnstsw
jae
(bad)
(bad)
(bad)
call
outs
es
imul
movs
and
inc
cwde
sub
(bad)
in
retf
pop
in
inc
adc
add
shr
movs
and
xchg
inc
and
sub
push
jecxz
faddp
arpl
cwde
xchg
xchg
jb
popf
hlt
mov
push
mov
(bad)
(bad)
out
cli
dec
add
or
ins
add
popf
loope
cs
inc
ja
jo
pop
mov
scas
aaa
std
push
sub
cmc
xchg
fstp
dec
stos
cwde
aaa
cld
(bad)
jmp
and
sbb
adc
js
cmc
jp
mov
in
mov
sub
jmp
iretw
xchg
ss
in
adc
fimul
push
retf
(bad)
(bad)
jmp
cmp
in
fdiv
xlat
dec
mov
mov
xchg
leave
mov
mov
test
(bad)
dec
aam
retf
pop
cs
sar
arpl
mov
bound
xor
pop
icebp
call
mov
sahf
dec
xor
add
leave
fbstp
(bad)
sbb
push
push
cmp
mov
hlt
cli
push
ficom
fldcw
je
push
(bad)
(bad)
(bad)
(bad)
ds
mov
movs
push
or
pusha
pop
push
sbb
cmp
xor
ror
(bad)
(bad)
(bad)
call
cld
mov
cli
dec
sahf
loope
in
loope
lds
out
sbb
mov
(bad)
(bad)
(bad)
call
mov
jmp
pop
and
cwde
nop
pushf
mov
pop
repz
out
adc
clc
(bad)
jmp
rcl
and
and
fnstenv
sti
push
retf
(bad)
(bad)
push
js
cdq
ror
cmp
jmp
sub
(bad)
popf
mov
ja
outs
sahf
repnz
(bad)
(bad)
(bad)
(bad)
call
sub
adc
repz
ret
xor
(bad)
push
(bad)
loope
push
fstp
ret
sub
jle
xlat
push
adc
dec
pop
js
pop
and
fsubr
bound
data16
ror
aaa
jge
movs
sub
jbe
or
mov
jmp
(bad)
jmp
mov
imul
gs
jbe
iret
xchg
outs
cmp
or
sub
inc
leave
and
les
(bad)
push
sbb
(bad)
mov
ins
mov
xor
test
xor
pop
inc
sub
loope
xchg
xchg
mov
mov
cmp
and
add
sbb
out
(bad)
repz
sub
imul
sbb
dec
(bad)
clc
xor
cmp
repz
ds
and
(bad)
(bad)
(bad)
(bad)
jns
mov
dec
clc
idiv
cwde
sub
ror
xor
jle
push
je
mov
mov
(bad)
(bad)
inc
pop
mov
or
imul
jg
iret
cli
dec
push
in
ins
fcomip
(bad)
(bad)
cli
inc
nop
imul
mov
outs
mov
dec
(bad)
push
icebp
ret
add
retf
add
dec
rol
pop
outs
(bad)
(bad)
(bad)
(bad)
jl
xor
inc
imul
leave
fild
xor
in
pop
imul
mov
retf
add
mov
fwait
push
outs
ins
mov
inc
fcomp
shr
clc
push
push
and
add
call
retf
jo
push
mov
fistp
(bad)
(bad)
(bad)
jmp
fnstenv
imul
retf
test
xchg
imul
sub
jmp
(bad)
sub
out
cmp
adc
pop
adc
std
dec
sti
enter
(bad)
mov
xor
jo
(bad)
fcomip
mov
in
in
mov
mov
fcom
mul
ds
lock
repnz
repz
jl
addr16
sti
push
(bad)
movs
mov
out
aam
push
fcomp
clc
cmc
arpl
into
mov
mov
jmp
movs
(bad)
loope
xor
ret
fsubr
add
cmps
out
or
int
jg
fmulp
in
shr
(bad)
(bad)
dec
sar
loopne
loop
out
test
addr16
add
adc
jmp
mov
pop
das
outs
and
hlt
int
mov
movs
mov
aad
jecxz
mov
(bad)
xchg
hlt
shl
add
inc
int3
std
idiv
into
or
(bad)
call
ror
lods
iret
in
and
pushf
sub
push
mov
sti
jne
aas
fbld
jb
mov
pop
cmp
stos
push
mov
dec
sti
(bad)
(bad)
(bad)
mov
xchg
lahf
and
shl
mov
sbb
sahf
popf
(bad)
(bad)
(bad)
push
std
and
jbe
icebp
mov
movs
shl
mov
mov
cmps
(bad)
cmc
aam
jno
pop
cld
pop
lock
xchg
call
arpl
bound
fimul
(bad)
mov
and
repz
mov
fld
(bad)
(bad)
(bad)
(bad)
out
xor
imul
cmp
cmp
retf
sbb
mov
xchg
scas
jg
hlt
dec
(bad)
cld
outs
xchg
cwde
and
in
scas
mov
cmp
mov
(bad)
jmp
sbb
push
adc
lea
(bad)
fstp
adc
std
mov
movs
nop
sub
jg
cmc
out
ror
dec
xchg
ror
dec
dec
sbb
inc
cmps
mov
sbb
scas
mov
pop
add
cmps
pop
in
call
sbb
int3
mov
fwait
cmps
jmp
sbb
push
(bad)
xor
(bad)
in
lods
inc
test
jg
mov
loope
and
mov
xchg
(bad)
(bad)
dec
dec
cs
movs
jp
inc
mov
pop
mov
out
push
scas
imul
(bad)
(bad)
(bad)
dec
pop
sub
cmp
(bad)
push
jmp
add
ja
inc
xchg
ret
or
sbb
mov
sub
aam
jecxz
xor
sbb
scas
mov
scas
cli
(bad)
jg
mov
cmc
mov
push
lea
sub
fbld
and
(bad)
jmp
clc
sbb
xchg
or
cmp
ins
bound
ja
pushf
inc
in
dec
in
lock
call
or
mov
cmp
mov
pop
out
(bad)
movs
bound
pop
hlt
push
repz
es
mov
push
pushf
stos
dec
stos
add
clc
(bad)
(bad)
inc
and
jae
aam
xchg
jl
pop
jae
mov
outs
pushf
das
jecxz
call
mov
mov
dec
sub
mov
(bad)
(bad)
(bad)
call
call
sub
repnz
xor
and
dec
mov
add
jmp
adc
jno
icebp
data16
jl
or
(bad)
call
pop
jl
in
stos
cmc
xlat
in
sbb
add
jbe
(bad)
icebp
test
(bad)
mov
inc
cmps
mov
lods
adc
lock
push
mov
mov
push
jg
cmc
(bad)
mov
(bad)
(bad)
jmp
sbb
retw
(bad)
mov
adc
jns
ja
mov
(bad)
out
stos
(bad)
(bad)
(bad)
call
jle
xchg
stos
sub
push
pop
dec
jp
cli
ss
add
adc
(bad)
fcomip
jp
pusha
je
jmp
into
adc
sbb
ret
push
ficomp
jnp
stos
mov
popa
inc
xor
cs
mov
int
(bad)
cmp
test
in
pop
mov
rcl
pop
test
inc
cmps
jle
pop
call
(bad)
(bad)
(bad)
(bad)
mov
int3
xchg
add
pop
cli
cdq
retf
pop
fwait
mov
dec
cmp
bound
mov
(bad)
(bad)
jmp
pusha
pusha
dec
sub
jmp
and
imul
inc
(bad)
(bad)
(bad)
jg
jbe
inc
aas
call
push
push
repnz
loop
push
cmp
mov
mov
pop
loopne
in
pushf
mov
imul
sub
inc
and
add
sub
mov
mov
xor
sub
cmp
jb
jae
call
push
fwait
(bad)
(bad)
push
pop
mov
sbb
dec
mov
pushf
mov
mov
adc
(bad)
(bad)
jmp
stos
push
pop
push
mov
xchg
sahf
pusha
popa
out
pop
pusha
add
imul
cwde
lds
and
dec
mov
into
mov
ret
(bad)
(bad)
call
mov
sahf
mov
pop
add
mov
xchg
retf
mov
idiv
adc
mov
push
(bad)
and
sub
popa
(bad)
(bad)
(bad)
jmp
out
sbb
push
int3
test
movs
movs
cmc
pop
mov
and
mov
call
sub
mov
addr16
mov
push
push
xlat
xchg
into
xor
scas
mov
call
push
push
sbb
dec
mov
jp
ret
pop
and
xor
inc
retf
cmps
(bad)
(bad)
(bad)
jmp
aam
pop
or
or
lock
sub
add
or
fisubr
mov
(bad)
jg
call
and
or
bound
loope
cli
push
inc
or
mov
call
push
les
adc
(bad)
outs
and
add
cmc
pop
adc
jecxz
adc
movs
sahf
push
xchg
pop
xchg
and
ins
stc
dec
test
(bad)
stos
test
mov
cmps
pusha
das
mov
mov
xchg
rcl
sub
cli
fistp
cmp
jg
mov
lods
mov
xchg
pop
dec
out
sti
inc
mov
xlat
pop
xlat
sub
inc
imul
(bad)
(bad)
(bad)
jg
jmp
(bad)
clc
repnz
(bad)
xchg
popa
cmp
adc
jnp
push
xor
or
dec
out
call
push
push
cs
ins
xor
xchg
or
mov
add
jne
and
cld
les
jns
cmp
cmp
mov
shl
or
mov
ja
ja
call
xchg
adc
rol
test
icebp
inc
sbb
(bad)
(bad)
(bad)
push
adc
and
inc
sub
scas
jecxz
dec
sbb
fild
movs
push
mov
adc
(bad)
(bad)
inc
pushf
pop
sahf
gs
jne
call
mov
xchg
dec
xchg
dec
sub
adc
mov
dec
inc
xor
xchg
in
ins
add
xchg
ja
push
xor
mov
js
fidivr
(bad)
push
imul
xchg
cmp
cmp
jae
sbb
jmp
(bad)
(bad)
dec
repnz
fsubrp
cmp
push
jp
mov
scas
lea
jl
push
or
(bad)
(bad)
dec
sub
pop
add
xchg
pop
inc
dec
push
dec
jo
add
pop
cmp
and
inc
(bad)
(bad)
(bad)
(bad)
mov
cmc
dec
dec
jp
into
test
aad
mov
mov
mov
inc
pop
inc
gs
or
(bad)
jmp
dec
add
xchg
ror
push
stos
fwait
sub
es
pop
jg
(bad)
push
pusha
imul
aad
es
das
mov
push
add
(bad)
(bad)
(bad)
jmp
popa
movs
push
jmp
pop
sti
and
int
loopne
test
inc
pop
mov
lea
(bad)
(bad)
jmp
adc
daa
jmp
inc
dec
jmp
adc
(bad)
(bad)
jmp
fnstenv
fwait
shr
out
shl
(bad)
mov
(bad)
in
or
out
add
mov
test
mov
imul
and
movs
xor
(bad)
(bad)
push
fld
clc
jns
dec
mov
and
stos
mov
add
push
test
cli
aas
mov
mov
(bad)
(bad)
(bad)
jg
push
imul
add
dec
gs
or
lds
test
and
(bad)
push
inc
add
jb
sahf
mov
stos
inc
add
push
cli
(bad)
(bad)
(bad)
mov
xor
jo
inc
repz
lods
pop
pushf
mov
add
jg
sbb
(bad)
call
jmp
movs
inc
jb
inc
jmp
in
cmps
jl
or
or
add
jg
(bad)
mov
push
fwait
mov
sbb
jno
test
imul
fst
dec
inc
test
bound
test
push
add
add
data16
jmp
cmc
(bad)
(bad)
call
std
push
inc
ins
aam
outs
jle
pop
inc
in
scas
cmp
or
xlat
mov
push
or
or
rcl
popf
or
hlt
fiadd
(bad)
(bad)
(bad)
dec
adc
in
jb
xor
dec
pop
(bad)
fidiv
add
cwde
arpl
movs
repnz
add
pop
jle
jl
pop
fld
ret
and
xchg
test
and
inc
jp
hlt
add
(bad)
(bad)
(bad)
jmp
adc
add
add
imul
sahf
pop
loopne
rol
(bad)
aas
mov
mov
es
cdq
ficom
dec
call
adc
ret
xchg
(bad)
(bad)
(bad)
call
retf
dec
mov
scas
fcmove
je
mov
popa
dec
sbb
jecxz
in
sbb
push
inc
(bad)
call
mov
xor
jae
jl
sbb
out
int
xchg
fwait
jmp
cli
mov
sub
xchg
inc
mov
jmp
test
call
(bad)
mov
jmp
xor
(bad)
fnstenv
sbb
cmps
cmp
(bad)
call
ficomp
shr
mov
and
loope
sahf
sbb
adc
cmp
jae
shl
(bad)
(bad)
(bad)
call
xchg
stc
test
or
fild
pop
mov
ja
mov
jecxz
mov
(bad)
(bad)
push
in
push
jno
push
push
outs
cmp
and
mov
dec
lea
lahf
ja
iret
cmp
push
inc
push
inc
loope
push
push
out
pop
mov
jge
cmp
add
das
xlat
mov
(bad)
fdiv
popf
std
(bad)
je
aam
xor
cmp
jb
pop
pop
out
pop
(bad)
mov
jle
clc
(bad)
(bad)
inc
or
sub
pop
movs
xchg
jl
adc
dec
cmp
retf
iret
adc
dec
dec
mov
jg
jmp
out
scas
lods
pop
mov
dec
pop
fwait
push
loope
mov
repnz
pop
mov
and
outs
cli
jmp
daa
sahf
sub
retf
or
popa
push
out
or
or
(bad)
(bad)
dec
shl
shl
pop
and
and
sub
mov
cli
(bad)
inc
cmp
in
sub
xchg
dec
(bad)
(bad)
(bad)
mov
jns
test
dec
ret
add
dec
iret
push
add
pop
das
adc
mov
(bad)
fidiv
das
or
cmp
test
xor
sahf
(bad)
(bad)
(bad)
push
les
mov
cli
test
aaa
bound
nop
xor
ret
xchg
inc
test
leave
test
(bad)
(bad)
(bad)
(bad)
out
jge
xor
mov
jae
ins
lea
sub
aam
dec
xchg
je
jg
adc
mov
add
sub
inc
hlt
dec
clc
sub
jbe
pop
lods
push
jnp
repnz
lahf
jns
(bad)
(bad)
dec
push
mov
push
inc
gs
pop
dec
pop
mov
stos
ins
shl
(bad)
inc
pop
cmp
xor
jae
jge
jge
xor
pop
int3
hlt
fucomp
js
into
xchg
mov
scas
(bad)
(bad)
(bad)
jmp
(bad)
mov
fwait
mov
mov
mov
jnp
fisub
loop
out
jecxz
jns
add
mov
xchg
ror
fdivr
pop
mov
mov
and
(bad)
(bad)
call
xchg
jmp
jno
xor
int
mov
(bad)
pop
push
adc
out
and
iret
int
aaa
dec
aam
(bad)
(bad)
jmp
lahf
call
int
int
shl
sbb
xchg
into
fs
movs
inc
mov
fnstsw
(bad)
(bad)
dec
xlat
mov
mov
jmp
pushf
xchg
movs
ret
hlt
jae
dec
in
mov
(bad)
(bad)
dec
cmp
aas
dec
jg
fbld
rcr
mov
leave
xchg
scas
mov
push
xchg
ins
test
int3
movs
and
mov
lods
sbb
adc
jecxz
daa
sar
loopne
aas
jo
in
loop
(bad)
(bad)
call
stos
adc
loop
inc
cli
mov
popa
fwait
test
jb
mov
xchg
jmp
(bad)
fisub
xor
in
and
adc
int
retf
pusha
iret
fnstsw
mov
in
pop
pushf
(bad)
mov
retf
dec
cdq
dec
rcr
sub
dec
fst
adc
movs
jg
jnp
(bad)
(bad)
inc
call
mov
and
or
mov
dec
dec
shl
stos
in
es
(bad)
(bad)
dec
sub
mov
ror
pop
xchg
arpl
push
xchg
bound
call
(bad)
dec
mov
mov
pop
push
in
cmp
xchg
in
int
out
dec
fist
(bad)
(bad)
(bad)
jmp
into
dec
out
or
mov
xor
xor
push
push
push
rcl
popa
and
nop
icebp
push
mov
push
mov
mov
sub
shl
inc
xlat
(bad)
(bad)
(bad)
(bad)
ds
sahf
iret
addr16
fwait
retf
fwait
bound
and
or
mov
cmp
addr16
mov
(bad)
(bad)
(bad)
call
mov
mov
ss
mov
gs
jb
xchg
and
lods
inc
lods
push
sahf
test
jle
(bad)
(bad)
(bad)
cmp
jle
push
sub
dec
idiv
pop
rol
xor
les
xor
clc
(bad)
(bad)
(bad)
inc
add
repz
jmp
cmp
ss
sahf
pop
jecxz
xlat
das
xor
add
das
cmp
mov
mov
ficomp
mov
pop
fld
rcr
leave
adc
xor
popf
(bad)
push
cld
mov
inc
mov
jl
inc
pusha
mov
cmp
rcr
loope
mov
(bad)
in
(bad)
(bad)
mov
mov
xchg
pop
movs
adc
popa
rcl
int3
(bad)
out
clc
adc
stos
pop
and
loop
ins
dec
(bad)
xor
pop
std
(bad)
push
neg
ror
std
jecxz
ficom
pop
fwait
repnz
cdq
jmp
jno
mov
adc
int
sub
call
sub
(bad)
(bad)
(bad)
mov
enter
icebp
ins
sti
dec
ficomp
cmps
cmp
mov
jae
popf
jmp
fisttp
mov
xchg
sub
jecxz
fist
push
jno
stos
jg
arpl
mov
mov
jnp
loope
push
cmp
pop
repz
jmp
cli
or
xor
inc
fisttp
inc
sti
xchg
mov
mov
sti
xor
(bad)
(bad)
(bad)
jmp
call
xchg
data16
sub
xor
sbb
push
test
mov
mov
cld
inc
ror
retf
ins
cdq
(bad)
cmp
xor
ins
(bad)
(bad)
jmp
ds
and
mov
push
cmps
dec
pop
xlat
or
xchg
mov
inc
jmp
(bad)
inc
retf
jns
lock
loopne
push
inc
data16
jbe
fsub
cmp
adc
and
mov
into
stos
push
push
xor
jne
(bad)
nop
mov
dec
jge
push
push
bound
(bad)
(bad)
(bad)
dec
iret
in
cld
fcomp
mov
fimul
pusha
mov
dec
adc
inc
fstp
(bad)
(bad)
(bad)
jmp
dec
cmc
movs
stos
xchg
scas
(bad)
cmovne
jbe
movs
jge
xchg
mov
test
mov
lds
aas
jb
pop
push
xchg
(bad)
mov
add
fwait
jmp
sbb
ja
jmp
cli
lea
sbb
adc
hlt
(bad)
scas
mov
adc
(bad)
(bad)
call
rcr
mov
out
mov
ror
mov
leave
jp
popa
fiadd
movs
cmp
loop
clc
mov
(bad)
(bad)
(bad)
(bad)
imul
pop
cmps
mov
in
ja
shl
cmp
stc
movs
aaa
popa
ret
sbb
sbb
(bad)
(bad)
inc
aaa
lea
rcr
push
das
sbb
ins
sahf
sbb
call
jmp
adc
push
mov
pop
push
xor
popf
inc
pop
mov
jno
or
lods
dec
jne
xchg
not
idiv
(bad)
(bad)
push
mov
ret
lods
lahf
or
mov
ins
popa
push
push
pop
cli
popf
mov
dec
push
(bad)
(bad)
(bad)
(bad)
sti
inc
sub
scas
cmp
or
jo
rcr
xchg
push
and
out
aam
adc
dec
in
jp
(bad)
(bad)
inc
mov
(bad)
xchg
test
icebp
aam
call
jmp
adc
push
daa
mov
jmp
arpl
xchg
xor
adc
jae
dec
ds
sub
jne
std
std
ja
cmp
movs
aas
add
in
dec
std
xlat
sbb
cmp
(bad)
(bad)
mov
in
jg
fidiv
xor
fwait
jg
mov
pop
stos
inc
mov
mov
hlt
int
cmp
mov
mov
out
scas
cs
sbb
sub
xor
inc
inc
or
pop
fistp
push
fist
leave
mov
(bad)
call
pop
ss
fistp
scas
scas
xor
bound
stc
ret
(bad)
dec
jecxz
bound
add
mov
sub
les
sbb
add
push
ficom
sub
xchg
inc
cli
push
mov
jmp
(bad)
out
cmp
call
(bad)
push
cmp
sbb
daa
adc
and
mov
inc
sbb
(bad)
(bad)
(bad)
cmp
ja
inc
add
sbb
mov
dec
das
je
xchg
sbb
cmp
rol
out
scas
cli
push
push
(bad)
leave
or
xchg
mov
ins
pop
cwde
call
add
jbe
push
xchg
pop
fsub
cwde
in
mov
xchg
(bad)
(bad)
(bad)
call
out
cmps
fst
xchg
lds
pushf
mov
dec
addr16
and
mov
in
(bad)
(bad)
(bad)
(bad)
push
rcl
dec
xlat
mov
fistp
sub
push
rol
andps
mov
out
(bad)
jb
inc
loop
clc
(bad)
fcmovb
and
cmps
xchg
gs
ja
adc
push
lahf
ss
(bad)
(bad)
push
pop
push
sub
fld
rol
js
(bad)
cmp
dec
ror
sub
sub
retf
mov
loopne
hlt
mov
xor
(bad)
(bad)
(bad)
jp
add
jns
(bad)
jb
out
jo
data16
icebp
retf
outs
jmp
xchg
data16
xchg
(bad)
(bad)
(bad)
call
dec
pop
addr16
outs
leave
mov
fdiv
mov
jcxz
lahf
test
ins
fdiv
(bad)
jmp
lods
cmp
scas
mov
ja
pop
xchg
jo
les
push
dec
sbb
test
dec
ins
(bad)
jmp
sahf
shl
xor
mov
or
mov
retf
adc
scas
add
ret
in
push
pop
sub
cmps
push
or
sub
adc
add
call
dec
mov
cmp
pop
push
cmc
mov
push
repnz
dec
lock
mov
(bad)
and
push
push
punpcklwd
and
sub
aam
imul
(bad)
jmp
xchg
ins
jmp
in
mov
xor
mov
loopne
xlat
jecxz
sbb
jecxz
jno
aad
sbb
push
xchg
add
dec
loopne
(bad)
(bad)
(bad)
inc
inc
dec
mov
ins
fadd
dec
dec
in
test
dec
mov
rol
(bad)
(bad)
(bad)
inc
out
jecxz
outs
ins
inc
and
movzx
dec
add
or
pop
inc
shr
(bad)
jg
fwait
jge
jge
xor
ja
pop
arpl
ss
movs
(bad)
(bad)
(bad)
jmp
into
adc
mov
aad
ins
das
mov
je
pop
iret
pusha
lods
mov
int
leave
cmovg
hlt
addr16
sar
dec
mov
push
cmp
std
cmps
in
retf
dec
out
xor
(bad)
(bad)
push
xchg
push
jno
stos
push
xor
and
mov
fcom
call
je
jbe
add
or
mov
xchg
jge
pop
std
scas
ja
lock
adc
adc
(bad)
(bad)
(bad)
jge
icebp
cld
pop
jp
dec
inc
cmps
outs
dec
mov
(bad)
cli
fisub
xchg
ret
cmps
push
mov
push
out
pop
adc
call
and
and
shl
jl
repz
sub
das
inc
jg
aad
jle
jbe
sbb
sbb
lahf
movs
fmul
pusha
ins
push
cmps
cmps
inc
cdq
mov
cld
pop
loopne
jmp
(bad)
imul
or
loope
xor
mov
popf
pop
pop
push
loopne
(bad)
(bad)
push
pop
pop
mov
cdq
dec
jmp
scas
or
fidiv
xor
fs
test
(bad)
(bad)
(bad)
call
add
shr
ret
aaa
fcom
jecxz
dec
pop
push
mov
in
dec
scas
fld
jnp
mov
sub
mov
mov
mov
or
ins
fwait
mov
mov
(bad)
(bad)
(bad)
call
(bad)
aaa
addr16
ds
cdq
cs
push
pop
mov
pop
mov
fmul
rol
(bad)
(bad)
call
xchg
mov
mov
test
dec
arpl
sbb
loop
fist
das
adc
xchg
out
sub
(bad)
sbb
jne
(bad)
div
add
cwde
inc
mov
jle
loop
xchg
(bad)
(bad)
(bad)
call
fwait
movs
xor
sahf
adc
inc
lea
jmp
mov
cmp
or
pop
(bad)
jg
inc
add
gs
mov
push
push
es
jnp
cmps
jbe
and
scas
movs
dec
cli
adc
shl
and
imul
bound
cld
sbb
and
rol
push
outs
(bad)
sbb
dec
push
adc
imul
es
iret
bound
jno
pop
xor
out
cdq
push
dec
pop
(bad)
repz
inc
inc
pop
adc
(bad)
(bad)
jg
imul
inc
int
lock
outs
rcl
pusha
push
cli
gs
mov
jge
(bad)
cmp
cli
scas
jmp
idiv
fnsave
(bad)
not
jbe
mov
(bad)
(bad)
mov
(bad)
hlt
leave
in
sar
or
cmc
pop
sbb
mov
pop
clc
(bad)
(bad)
(bad)
jmp
ret
call
loopne
sub
jge
dec
sti
jbe
and
sub
push
(bad)
aam
dec
pop
aaa
mov
gs
xchg
mov
(bad)
push
lock
repnz
js
jl
jns
pushf
and
dec
aam
sub
push
scas
arpl
(bad)
(bad)
(bad)
jmp
push
push
dec
mov
pop
inc
(bad)
or
jle
mov
and
sbb
xchg
in
(bad)
fild
pop
xchg
add
push
int3
fsub
push
or
(bad)
inc
out
pop
repz
into
ss
xchg
mov
(bad)
(bad)
jg
mov
out
out
and
loope
add
clc
dec
inc
or
sti
push
out
mov
fistp
(bad)
jmp
ror
sti
cmp
cmp
fistp
fdivr
pop
test
stos
out
out
jmp
xor
aas
xor
or
xor
push
(bad)
(bad)
(bad)
call
fwait
test
mov
mov
mov
inc
outs
xchg
mov
mov
mov
and
jno
(bad)
mov
lahf
icebp
je
pop
ja
cli
mov
adc
xchg
lods
push
into
iret
call
outs
clc
(bad)
jmp
ja
jle
mov
jmp
lods
je
pop
enter
daa
retf
mov
stc
and
(bad)
(bad)
jmp
aas
rcl
mov
sub
fwait
push
xchg
xor
dec
mov
(bad)
jg
call
jg
xor
jo
sbb
fdiv
int3
je
and
call
inc
sub
adc
push
test
ja
jge
fadd
mov
mov
arpl
ds
and
inc
ins
sar
push
stc
push
mov
test
add
ror
jo
jmp
lods
in
mov
xchg
loope
(bad)
push
in
lahf
outs
xlat
sbb
cmp
pop
mov
outs
mov
(bad)
cld
(bad)
push
xchg
sti
jns
mov
push
mov
retf
test
dec
cmp
jo
addr16
sahf
and
(bad)
push
inc
fsub
or
dec
jle
imul
sub
(bad)
call
lock
jg
xchg
(bad)
icebp
inc
nop
daa
push
add
sbb
nop
jnp
mov
jb
sub
(bad)
(bad)
call
xor
cmp
les
movs
mov
xor
adc
mov
adc
(bad)
jmp
ds
test
hlt
pop
aas
or
jmp
std
loope
xor
(bad)
jo
add
mov
add
pop
out
sbb
sub
(bad)
(bad)
(bad)
push
adc
adc
retf
cld
jecxz
je
(bad)
dec
jmp
hlt
lods
popf
hlt
std
cdq
lods
(bad)
(bad)
(bad)
(bad)
jmp
aas
cmp
and
stos
jecxz
test
xor
in
jge
(bad)
dec
loope
(bad)
pop
rcr
cmps
mov
mov
in
scas
btr
jbe
iret
je
and
popa
iret
inc
fisttp
xor
or
(bad)
popf
add
outs
(bad)
fbld
aad
cmp
icebp
mov
xor
pop
test
dec
cmps
mov
cwde
lds
in
mov
mov
cli
pop
std
xchg
loope
test
(bad)
call
retf
iret
sahf
enter
call
(bad)
ins
fwait
jg
cmp
or
(bad)
pop
daa
or
stos
repz
cmp
adc
(bad)
(bad)
(bad)
call
loope
cli
aas
in
pop
rcr
push
and
mov
fmul
push
pop
scas
add
(bad)
call
sbb
xchg
adc
btr
fbld
stos
mov
ins
(bad)
dec
pushf
(bad)
jmp
jmp
stc
imul
(bad)
(bad)
call
cwde
cwde
mov
cli
mov
iret
lods
(bad)
loopne
clc
(bad)
enter
pop
inc
fdivr
icebp
mov
mov
(bad)
(bad)
(bad)
dec
dec
xlat
jne
jg
or
cmps
lods
xchg
or
pop
jns
into
test
les
push
ja
mov
cmp
in
out
sar
ja
or
pop
cmp
lahf
iret
out
pop
sbb
(bad)
scas
mov
(bad)
les
shl
scas
and
pop
adc
ficomp
in
pop
sub
mov
pop
aas
mov
dec
xchg
test
imul
scas
jmp
cld
or
and
dec
popf
pop
fiadd
(bad)
sbb
jmp
(bad)
(bad)
push
push
xlat
mov
aas
stc
sbb
mov
pop
pushf
ss
jbe
int
jmp
dec
jmp
iret
outs
neg
call
push
popa
in
sbb
ins
jge
or
(bad)
jmp
push
(bad)
rol
in
mov
js
sub
enter
outs
stos
test
or
xor
jmp
fwait
cmc
mov
cwde
or
(bad)
mov
sbb
xor
or
sbb
jp
stc
out
cli
(bad)
call
cmp
dec
push
iret
push
movs
push
cmp
in
pop
inc
and
xor
pop
pop
and
(bad)
call
stc
mov
mov
xor
cld
aad
repnz
in
add
cwde
jne
dec
(bad)
jns
sahf
sbb
fmul
in
sbb
cli
(bad)
mov
ds
sub
or
jg
sahf
test
addr16
iret
sub
rol
pop
pop
aam
jg
pop
dec
jg
mov
inc
cmps
and
jmp
fstp
push
adc
xchg
mov
add
(bad)
mov
push
pop
aad
cld
ror
mov
sbb
jg
or
test
push
mov
lock
gs
cmp
retf
fild
mov
jnp
in
call
lds
or
into
add
dec
es
outs
out
pushf
cs
ficomp
std
shl
pop
shl
or
sbb
test
int3
jae
into
push
ret
sahf
arpl
fbstp
hlt
test
mov
or
stos
psubw
mov
jmp
mov
inc
loop
mov
xchg
call
cli
pusha
cdq
cmps
loop
xor
es
clc
ret
and
loop
jge
clc
das
clc
fdivr
ret
push
pop
xchg
dec
daa
jg
sbb
mov
call
mov
test
jb
enter
adc
repz
sub
pop
(bad)
(bad)
jg
inc
lahf
out
sub
sar
jnp
pop
dec
in
sub
xor
in
fisttp
cmps
push
sub
(bad)
(bad)
(bad)
jmp
neg
fistp
mov
add
test
sub
shl
inc
dec
jp
mov
inc
aas
cmp
ror
sbb
sub
xchg
rol
sahf
jo
sbb
(bad)
jmp
add
push
sbb
cld
and
test
dec
or
iret
fld
mov
inc
dec
stos
cmp
daa
sahf
pop
jbe
leave
(bad)
pop
jne
sbb
jle
mov
cmp
ja
imul
dec
jp
cmp
sbb
repz
(bad)
fbld
out
mov
jmp
std
sub
xchg
retf
mov
inc
(bad)
fsubr
fadd
retf
jmp
test
ret
mov
dec
cmps
cwde
ja
push
push
mov
dec
popf
ret
xor
push
std
xor
div
je
inc
jg
mov
ss
jmp
call
std
call
mov
stos
and
xor
dec
xor
ret
fwait
(bad)
(bad)
jmp
gs
movs
mov
(bad)
fistp
in
cmps
retf
(bad)
(bad)
jmp
cmp
loope
mov
adc
or
fisttp
pop
dec
add
sub
pop
(bad)
(bad)
(bad)
(bad)
ficomp
data16
dec
push
xchg
push
push
cmps
add
adc
push
clc
mov
jg
jle
movs
mov
or
dec
inc
jnp
movs
xchg
adc
and
add
xchg
imul
add
(bad)
inc
(bad)
aaa
ret
cmp
pop
dec
sub
out
(bad)
(bad)
call
aad
cmp
test
xchg
mov
mov
cmp
mov
mov
(bad)
(bad)
inc
cmp
push
sbb
sbb
sbb
dec
mov
rol
push
mov
(bad)
mov
ret
and
push
movs
pop
in
das
or
pop
je
add
scas
xor
(bad)
dec
jo
ret
dec
mov
adc
out
popf
sub
pop
inc
cli
xor
mov
(bad)
mov
jo
iret
aaa
data16
dec
movs
xchg
jns
std
addr16
(bad)
(bad)
(bad)
jg
jbe
cwde
rcl
test
nop
aas
stos
or
mov
push
cmp
or
push
adc
icebp
retf
jmp
sub
jge
sbb
pop
cmp
call
cld
call
and
int3
mov
repnz
jnp
push
mov
(bad)
call
rcl
loope
mov
mov
mov
mov
mov
cmp
push
pusha
(bad)
(bad)
(bad)
inc
retf
inc
retf
fwait
push
mov
pop
xchg
outs
addr16
sub
cmp
(bad)
lods
pop
lods
inc
jmp
ret
fst
mov
add
adc
dec
push
xchg
pop
add
pop
(bad)
(bad)
(bad)
push
cwde
mov
sbb
(bad)
out
pop
test
in
push
adc
fild
push
outs
clc
(bad)
call
aam
sub
mov
adc
int3
add
scas
(bad)
(bad)
push
imul
xor
and
out
sub
cwde
in
test
in
test
inc
retf
pop
fs
(bad)
jmp
inc
or
xchg
and
mov
mov
xchg
ror
daa
test
push
pop
loopne
fstp
inc
inc
push
je
iret
adc
loope
repnz
xchg
into
popa
mov
dec
push
jno
jl
adc
adc
sbb
jle
out
(bad)
jg
dec
mov
cmp
test
movs
mov
pushf
(bad)
(bad)
(bad)
call
xor
push
push
test
add
push
adc
mov
and
mov
jmp
rcl
sub
repnz
or
xor
jmp
shr
push
cmp
add
(bad)
(bad)
inc
arpl
jno
pop
xor
jecxz
int
icebp
pusha
mov
cli
and
test
(bad)
(bad)
mov
test
jne
lds
rol
xlat
mov
(bad)
mov
and
loopne
(bad)
(bad)
jg
inc
xlat
pop
mov
int
sub
xchg
scas
pusha
cmps
mov
stos
je
xchg
pop
(bad)
jmp
ret
(bad)
arpl
das
sub
xlat
add
or
sbb
xor
fcomip
pusha
mov
mov
xor
(bad)
(bad)
jmp
and
add
js
js
pop
sub
sahf
lea
jno
(bad)
(bad)
(bad)
(bad)
fldcw
in
fild
push
push
sub
jle
adc
dec
cmp
ins
xchg
test
jmp
lods
les
push
xchg
jp
test
ds
mov
loope
lock
and
and
(bad)
mov
xchg
push
scas
(bad)
es
int3
xor
or
xchg
call
sub
popa
fs
jne
(bad)
into
adc
icebp
movs
ds
cmp
fwait
(bad)
jmp
push
movs
retf
daa
push
and
dec
add
cmps
inc
jmp
mov
test
add
int
ja
call
sbb
push
test
pusha
retf
pop
jmp
cdq
imul
(bad)
out
es
dec
inc
cmps
push
push
xor
xor
add
sub
pushf
mov
pop
push
jmp
push
bound
xchg
lds
jo
inc
or
ja
test
(bad)
(bad)
inc
aam
mov
mov
(bad)
test
xchg
js
imul
push
and
jae
sbb
(bad)
(bad)
(bad)
inc
pop
push
inc
arpl
dec
xor
and
dec
dec
and
adc
or
push
push
xchg
mov
or
(bad)
(bad)
(bad)
push
js
ror
mov
push
in
jl
xchg
pop
xchg
outs
mov
xlat
adc
push
push
mov
lods
and
push
inc
or
inc
outs
shr
dec
and
dec
xor
test
cmp
(bad)
fcomip
inc
into
call
add
dec
loop
jle
sbb
jb
test
(bad)
jg
inc
cmp
dec
sub
pop
ss
shr
push
sbb
out
(bad)
(bad)
call
sahf
adc
mov
push
jmp
test
test
call
(bad)
(bad)
inc
sahf
pushf
mov
js
add
cmp
inc
xchg
jmp
mov
inc
inc
sbb
popa
push
or
outs
push
or
xchg
cmp
pop
push
retf
mov
(bad)
fist
sub
and
inc
aam
fs
dec
cmp
push
movs
sbb
push
push
(bad)
(bad)
(bad)
call
aad
dec
mov
daa
rcl
fstp
push
xchg
mov
pop
sbb
cs
push
add
jae
mov
lahf
and
xchg
mov
push
push
sbb
in
iret
movs
stos
loop
push
add
mov
sbb
imul
push
pop
fucomp
ja
(bad)
mov
(bad)
in
add
mov
xchg
out
pop
mov
jle
std
push
(bad)
(bad)
dec
imul
sbb
outs
sbb
add
pop
ret
cmps
ja
cwde
push
xor
(bad)
(bad)
call
out
mov
add
popa
call
push
xor
push
push
lods
test
stos
jp
ds
(bad)
dec
ss
imul
cwde
movups
hlt
test
fld
ds
(bad)
in
call
scas
ja
jo
push
cmc
xor
icebp
xchg
ret
fwait
cmp
push
pop
in
mov
(bad)
(bad)
mov
and
pop
cmp
mov
mov
call
pop
das
dec
test
rol
mov
out
mov
movs
fidivr
(bad)
(bad)
jnp
retf
iret
ins
xor
pop
fbstp
sub
call
push
add
movs
xor
mov
mov
jp
xor
push
dec
ins
movs
sub
retf
(bad)
(bad)
jg
xchg
pusha
cwde
lea
xor
out
or
scas
ret
mov
and
mov
(bad)
(bad)
push
pop
inc
jmp
fbld
mov
repz
xchg
jle
mov
jmp
mov
das
xor
into
(bad)
(bad)
(bad)
dec
cmps
xchg
jecxz
mov
lahf
pop
mov
out
shl
out
iret
sbb
inc
pusha
clc
sub
(bad)
(bad)
jmp
test
bnd
push
loop
cmc
xlat
test
cmp
adc
ret
(bad)
xor
push
clc
(bad)
(bad)
jmp
cs
cmp
add
leave
and
mov
stos
fisubr
loope
or
ins
jb
(bad)
jae
(bad)
inc
ds
fdivr
add
and
fld
pop
loope
leave
aas
nop
inc
xchg
pusha
fiadd
(bad)
adc
ds
retf
outs
fstp
mov
fld
test
out
clc
call
imul
pushf
cmp
fdivr
sub
sbb
mov
(bad)
(bad)
(bad)
(bad)
jmp
out
es
repz
in
jg
add
adc
shl
out
ret
pop
mov
(bad)
(bad)
(bad)
jmp
jno
in
sub
gs
movs
ret
mov
sbb
and
push
dec
xchg
sub
pop
sbb
outs
movs
mov
dec
push
mov
das
(bad)
cli
mov
jbe
sbb
sti
push
js
mov
clc
(bad)
push
jbe
pop
call
in
sti
pop
jp
dec
fild
push
hlt
inc
call
pop
cmp
clc
mov
or
mov
inc
jno
mov
leave
xchg
push
mov
(bad)
inc
fimul
ret
in
mov
les
mov
jmp
lds
lock
gs
inc
jo
int3
fbstp
cli
and
jb
dec
pop
ja
loop
(bad)
(bad)
(bad)
jmp
xchg
fwait
sub
into
push
pop
imul
mov
ins
in
in
cld
push
data16
call
cs
aad
in
(bad)
(bad)
(bad)
call
nop
push
in
dec
add
leave
pop
xchg
out
mov
mov
dec
sbb
in
mov
or
std
(bad)
push
inc
iret
cmp
jne
hlt
xchg
push
mov
imul
or
rol
lock
test
clc
mov
(bad)
mov
push
int3
sbb
xchg
stos
inc
sbb
jl
(bad)
daa
loopne
sbb
pop
cld
sti
mov
pop
ret
or
xchg
jmp
outs
or
adc
(bad)
(bad)
(bad)
jmp
test
(bad)
sub
mov
pushf
les
(bad)
fstp
push
add
inc
fisttp
pop
xor
(bad)
(bad)
(bad)
fistp
cmps
int3
push
sbb
in
fcmovnb
imul
ret
test
movs
retf
fistp
jmp
cli
movs
and
jne
push
or
(bad)
(bad)
(bad)
dec
bound
xchg
ins
sbb
inc
repnz
push
add
sub
int
add
(bad)
mov
inc
mov
stc
jp
out
cmp
loope
pop
fs
adc
mov
sbb
mov
fnstenv
int3
sub
mov
out
jecxz
and
add
test
(bad)
(bad)
dec
repz
iret
xor
mov
sbb
mov
pop
fcmovnu
mov
mov
popf
outs
xchg
cdq
jecxz
hlt
outs
mov
pop
std
and
or
cmp
vpmulhuw
(bad)
(bad)
(bad)
in
ins
(bad)
fnstsw
jbe
fstp
jp
(bad)
mov
mov
das
cmp
into
(bad)
(bad)
(bad)
push
cmp
sub
movs
inc
inc
stos
dec
and
sub
push
push
and
dec
jmp
call
rcr
push
jno
je
stc
xor
stos
js
sti
(bad)
(bad)
(bad)
dec
xchg
popa
xor
adc
xor
pusha
stos
loop
cmp
and
repnz
(bad)
adc
or
enter
(bad)
(bad)
jmp
dec
repnz
fwait
test
sar
std
pop
(bad)
mov
in
(bad)
(bad)
dec
(bad)
sub
push
xchg
imul
or
mov
(bad)
(bad)
call
sar
(bad)
xor
mov
gs
fnstenv
push
jp
imul
out
fild
mov
sar
jnp
daa
push
(bad)
shl
cmp
js
mov
(bad)
(bad)
mov
jmp
pusha
sbb
imul
test
sbb
(bad)
(bad)
pop
pop
xor
cmps
call
cmp
sbb
(bad)
mov
mov
leave
ins
sbb
pop
cmp
std
dec
pop
mov
xchg
(bad)
(bad)
(bad)
call
jmp
ja
in
out
pop
stos
lahf
or
and
jmp
aaa
lea
xchg
(bad)
out
js
dec
(bad)
(bad)
(bad)
call
and
test
cmc
jge
lods
cdq
movs
sbb
movs
loope
pop
xchg
push
mov
push
hlt
pusha
(bad)
(bad)
(bad)
(bad)
cli
push
sti
std
mov
shr
cmp
out
jl
imul
mov
(bad)
jmp
(bad)
je
(bad)
fmul
pop
scas
je
cmp
and
push
push
mov
jg
ror
dec
aad
sbb
(bad)
call
lea
adc
adc
stc
retf
inc
mov
fwait
adc
sbb
lock
jmp
lds
adc
ins
mov
aaa
in
jb
(bad)
(bad)
(bad)
(bad)
jle
ds
rcl
jno
lds
jns
add
fucom
sbb
mov
mov
fcomip
jg
fcomp
pop
data16
adc
add
(bad)
(bad)
(bad)
mov
adc
sbb
fwait
dec
mov
sahf
xchg
movs
cmp
xchg
ins
adc
les
(bad)
xor
pop
stos
xlat
(bad)
jp
(bad)
(bad)
(bad)
jmp
(bad)
sbb
xor
mov
xor
cli
pop
pop
sub
add
mov
(bad)
lds
(bad)
cmc
aam
and
test
mov
jbe
stos
std
retf
repnz
jle
(bad)
(bad)
(bad)
call
or
or
loope
push
jnp
xchg
inc
jno
popa
pop
cdq
inc
ja
mov
add
dec
xchg
mov
mov
mov
and
in
cmp
lds
jl
jb
sub
or
sub
push
std
(bad)
cmp
test
lods
movs
push
popf
push
mov
test
(bad)
jmp
ins
test
sbb
cmps
mov
xchg
push
dec
loope
jmp
and
adc
outs
mov
jo
(bad)
(bad)
(bad)
push
cmc
jno
into
mov
sub
retf
add
pusha
push
arpl
xor
sbb
(bad)
(bad)
call
stos
movs
cmp
sbb
outs
push
shl
bound
jns
aam
(bad)
(bad)
(bad)
jmp
in
fwait
sbb
and
in
push
loope
push
cwde
in
jae
cmp
push
or
in
and
(bad)
call
pop
cdq
rcl
inc
retf
shr
out
popa
rcl
loope
mov
dec
imul
ds
mov
mov
push
cmc
mov
leave
and
push
stc
into
repnz
mov
pop
sti
fild
mov
out
sbb
push
push
pop
(bad)
(bad)
(bad)
jg
in
out
aad
cmp
jle
adc
sbb
mov
or
push
xor
inc
cmp
(bad)
call
mov
repnz
in
repnz
test
out
frstor
rol
stc
sub
lods
dec
(bad)
call
pop
mov
mov
add
(bad)
xor
mov
(bad)
(bad)
jmp
rol
pop
test
and
pop
mov
(bad)
(bad)
(bad)
fdivr
(bad)
retf
jae
shl
iret
sub
ret
in
push
cmps
shl
push
cld
(bad)
dec
leave
jne
fnstsw
out
jl
xchg
jge
retf
repz
and
(bad)
call
sub
jecxz
push
movs
inc
jo
jb
rol
add
or
(bad)
(bad)
dec
ins
fwait
push
add
xlat
cmp
repnz
cmp
arpl
fdivr
and
(bad)
jmp
or
mov
dec
retf
leave
inc
gs
xchg
adc
and
sub
(bad)
jmp
iret
mov
mov
cmp
push
xor
mov
outs
mov
sub
and
(bad)
(bad)
(bad)
call
nop
mov
jp
push
repz
jno
add
push
seta
movs
adc
(bad)
inc
jl
aad
das
fimul
sbb
iret
es
pcmpgtb
aaa
cmps
jmp
adc
and
add
(bad)
(bad)
jmp
lods
xchg
sbb
sahf
repz
aad
je
inc
inc
pop
cmp
xchg
aaa
cmps
ja
fistp
dec
ret
call
adc
fbstp
pop
rcr
jnp
or
cmp
push
(bad)
dec
shl
and
stc
sbb
push
mov
in
call
clc
ins
fldl2t
js
dec
push
mov
push
in
mov
cmp
push
(bad)
(bad)
(bad)
call
enter
aaa
ja
dec
ficom
push
xlat
sub
dec
dec
dec
ret
outs
rcr
dec
xor
and
(bad)
jmp
or
add
inc
inc
fs
push
fsub
and
dec
pop
test
loopne
shl
jmp
enter
cmp
int3
ficom
dec
pop
(bad)
mov
or
mov
cwde
call
icebp
icebp
scas
sub
inc
(bad)
mov
outs
mov
push
and
xor
jnp
dec
fsub
or
in
clc
dec
inc
pop
inc
shl
mov
or
xchg
aaa
cld
(bad)
jmp
jb
icebp
(bad)
out
xchg
aad
sti
imul
imul
push
mov
adc
(bad)
fcomip
adc
adc
cmps
add
pushf
cmc
(bad)
(bad)
stc
repnz
jge
and
inc
cmp
jno
mov
jo
adc
inc
pop
jmp
(bad)
jne
les
and
push
add
sar
call
sub
shr
xchg
jne
loopne
stos
pop
mov
leave
lahf
(bad)
(bad)
(bad)
jmp
add
cmps
and
or
ret
int3
fild
fdiv
dec
jbe
fwait
mov
f2xm1
(bad)
(bad)
(bad)
in
jb
push
sub
and
fisubr
mov
add
dec
fisttp
pop
(bad)
mov
cs
cli
jmp
aad
sar
sub
clc
sahf
dec
pop
(bad)
fidiv
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
or
jg
lods
test
imul
pop
sbb
fadd
out
in
push
jl
loop
dec
jnp
(bad)
jg
(bad)
fbstp
jmp
dec
ret
xor
sbb
cmp
(bad)
dec
ret
test
sbb
push
push
adc
push
dec
adc
gs
inc
sahf
iret
(bad)
(bad)
fcomip
and
cmp
test
or
mov
cdq
imul
call
xor
aam
sbb
popa
nop
add
sbb
dec
mov
push
cmps
sbb
(bad)
(bad)
fistp
stc
mov
out
jnp
jmp
out
popa
stc
movs
mov
(bad)
(bad)
(bad)
in
popa
jbe
mov
aaa
adc
ret
pop
dec
push
jno
imul
outs
mov
mov
in
cld
jg
fmulp
jb
int
aam
call
in
idiv
pop
lock
mov
xlat
ror
xchg
xchg
lods
pop
and
adc
pop
mov
mov
adc
push
sub
dec
mov
cmp
cmp
push
fnstsw
icebp
xor
rcr
mov
std
mov
repz
out
mov
std
(bad)
call
mov
adc
aaa
mov
fucomp
jns
loop
(bad)
call
int3
in
iret
data16
mov
xchg
xchg
mov
adc
or
or
sub
clc
(bad)
dec
push
push
and
pop
arpl
test
iret
push
cmps
sar
aaa
mov
stc
rcl
xlat
cmps
sub
add
and
clc
out
icebp
mov
push
fld
add
sbb
adc
cld
jmp
xchg
pusha
jns
setbe
push
or
(bad)
call
inc
icebp
shl
fcmovb
mov
and
stos
and
test
mov
cli
(bad)
fild
jnp
rcr
push
cmp
fcomi
(bad)
jp
outs
fnstsw
lock
ins
sahf
adc
fild
ss
stc
(bad)
(bad)
(bad)
push
fcom
xchg
cmp
sub
push
repnz
aaa
or
fst
inc
ror
cmc
aas
(bad)
paddq
push
jge
xlat
fldenv
mov
aas
pusha
jg
pop
cmp
jmp
cmps
fstp
js
dec
or
pop
xor
push
jg
jp
xchg
cmp
mov
iret
fs
dec
sub
adc
push
imul
ret
(bad)
jmp
push
cmp
adc
scas
jae
nop
loope
dec
cmp
out
int3
cmp
jns
movs
test
(bad)
(bad)
inc
scas
fstp
sar
pop
jge
repz
adc
adc
(bad)
ss
mov
(bad)
call
rcl
out
cmovns
mov
shr
loop
cmc
mov
sub
push
inc
(bad)
dec
scas
cmpxchg8b
or
mov
jp
lock
(bad)
(bad)
mov
mov
sti
cmp
fisubr
lods
xor
js
idiv
enter
jg
xchg
pop
or
lods
sahf
je
int
pop
cmp
(bad)
cmc
jge
popa
(bad)
(bad)
(bad)
call
add
lea
adc
push
jne
mov
dec
xchg
fistp
out
fild
inc
xchg
cmp
(bad)
(bad)
(bad)
ds
(bad)
add
sub
lds
aaa
lods
lods
and
lahf
or
icebp
and
scas
lods
pop
or
loope
(bad)
(bad)
(bad)
fmul
(bad)
sbb
pop
aad
(bad)
mov
ret
add
loopne
xchg
sbb
scas
sti
jg
sub
xchg
mov
jecxz
push
out
mov
ret
mov
(bad)
(bad)
push
mov
jge
test
outs
bound
and
aas
into
and
not
(bad)
call
repz
aad
xchg
xlat
cmc
jle
invd
aam
imul
aam
(bad)
jg
repz
fsubp
cli
jnp
std
xchg
and
(bad)
out
cmp
sti
shl
(bad)
(bad)
(bad)
cmp
aad
pop
(bad)
les
lahf
mov
clc
cld
aas
jge
pop
sahf
inc
call
in
ror
imul
mov
test
repnz
push
mov
sbb
cwde
(bad)
(bad)
(bad)
jmp
(bad)
sub
clc
mov
ja
(bad)
cmp
xor
daa
push
jbe
or
fsubr
shl
push
or
jb
xlat
or
(bad)
call
pop
xchg
sub
retf
push
out
xor
aas
xchg
push
gs
aaa
(bad)
push
push
inc
sahf
nop
cmp
dec
pop
test
xor
addr16
push
cdq
push
sub
dec
inc
push
inc
mov
xchg
xchg
inc
cmp
daa
in
repnz
outs
out
outs
call
push
xchg
arpl
pop
(bad)
aad
cli
fld
push
xchg
xchg
std
xor
cmp
std
mov
and
in
into
das
cmp
sbb
fisttp
add
outs
fild
sbb
or
mov
fcom
sbb
mov
xor
retf
mov
pusha
mov
les
es
(bad)
(bad)
push
pop
out
mov
jge
(bad)
into
fwait
jmp
sub
gs
clc
push
retf
xchg
xchg
(bad)
out
cli
push
jb
mov
test
cld
sbb
dec
fnstenv
ins
dec
(bad)
(bad)
(bad)
(bad)
mov
fst
out
leave
sbb
cmc
inc
js
pop
fidivr
mov
out
ins
imul
jmp
and
into
mov
ret
mov
in
cmps
(bad)
call
push
(bad)
(bad)
(bad)
jmp
and
or
jp
jne
and
iret
iret
sbb
cld
jo
(bad)
add
jecxz
ret
mov
jmp
pop
in
jge
jns
(bad)
push
lods
add
(bad)
jmp
fstp
not
out
jge
ins
rcr
sub
pop
inc
rcr
mov
mov
push
jle
fdivr
mov
xchg
outs
push
call
mov
cmp
cmp
pop
ds
(bad)
(bad)
call
aaa
fidivr
xor
cmp
aaa
(bad)
in
pop
pop
es
out
dec
pop
sahf
dec
push
cmp
(bad)
dec
xchg
rcl
adc
in
jecxz
(bad)
xor
push
xchg
ins
out
inc
mov
mov
mov
movs
xchg
pop
enter
cmp
mov
scas
clc
jle
mov
cmp
jge
stos
stc
push
add
sbb
test
cmc
jmp
mov
ja
lock
xchg
mov
xor
(bad)
push
int
ds
fadd
lea
inc
or
pop
inc
xor
jg
xchg
and
movs
push
mov
call
mov
mul
(bad)
mov
(bad)
jp
out
xor
out
in
daa
std
outs
sub
test
stos
test
mov
int3
cli
mov
and
mov
pop
cld
push
xor
fild
jns
sbb
dec
(bad)
call
call
lods
push
adc
or
bound
push
in
xchg
pop
pop
sub
and
(bad)
(bad)
(bad)
(bad)
dec
jbe
push
xor
adc
or
call
lahf
lods
cmps
mov
(bad)
(bad)
jmp
lock
pop
lods
mov
jae
popa
push
add
mov
xor
pop
cdq
xchg
hlt
(bad)
(bad)
(bad)
inc
pop
xor
hlt
add
inc
push
adc
and
mov
stc
or
adc
(bad)
(bad)
jmp
pop
scas
pop
sbb
pushf
and
adc
sub
stos
inc
cmp
(bad)
mov
out
ins
jne
dec
loope
imul
ret
sub
(bad)
(bad)
out
push
clc
shr
(bad)
repz
test
and
adc
xor
test
adc
int3
ss
inc
ficom
ret
jmp
es
or
push
jmp
jbe
(bad)
(bad)
(bad)
jmp
addr16
pop
dec
dec
xchg
enter
dec
push
jo
xchg
add
stos
fisubr
sbb
pop
movs
popa
ret
mov
test
xchg
pop
cli
ror
(bad)
(bad)
(bad)
mov
inc
test
cmp
sbb
add
mov
dec
pop
xchg
imul
nop
das
cmp
sbb
jmp
or
ror
call
adc
mov
je
out
cli
je
adc
leave
dec
mov
fs
enter
dec
push
aam
xchg
jmp
ret
push
lods
ficomp
loope
mov
(bad)
(bad)
(bad)
aas
xor
and
or
sbb
and
cmp
fbstp
pop
push
mov
and
xor
dec
push
(bad)
aam
push
test
cld
scas
js
std
sub
repz
adc
push
mov
pop
mov
(bad)
(bad)
jmp
sub
inc
pop
(bad)
into
shr
int
fidivr
push
inc
add
xchg
(bad)
(bad)
(bad)
jmp
test
mov
mov
and
lds
enter
sahf
push
mov
cmp
push
scas
clc
(bad)
dec
call
aad
sub
xchg
arpl
push
(bad)
dec
inc
push
mov
arpl
xchg
enter
mov
(bad)
(bad)
(bad)
jnp
mov
inc
adc
addr16
fcom
mov
and
bound
pop
popa
out
(bad)
(bad)
call
aad
add
xor
(bad)
jge
and
adc
jbe
pop
bound
add
outs
inc
xchg
or
(bad)
(bad)
jmp
test
pop
sub
scas
cmp
or
fsubr
aam
(bad)
fcomip
loopne
mov
cmp
les
xor
adc
push
push
push
(bad)
(bad)
call
ret
movs
daa
inc
add
mov
add
or
mov
nop
loope
xchg
jmp
sbb
mov
lods
inc
mov
sbb
cs
xchg
dec
sub
stos
(bad)
(bad)
push
leave
push
pop
sbb
push
mov
test
(bad)
ins
jo
jge
in
push
xchg
(bad)
jg
(bad)
mov
push
aam
test
or
popf
fs
dec
push
bound
adc
or
test
add
inc
sbb
pop
inc
jp
movs
(bad)
mov
mov
(bad)
jg
aad
or
inc
sub
and
movs
mov
inc
(bad)
in
in
(bad)
(bad)
(bad)
(bad)
call
jmp
mov
lds
arpl
into
pop
mov
in
(bad)
(bad)
(bad)
call
nop
std
add
in
xchg
xchg
cmc
push
mov
push
dec
dec
fld
mov
xor
(bad)
jmp
(bad)
mov
dec
mov
test
xor
mov
mov
outs
(bad)
(bad)
(bad)
dec
mov
push
and
cmc
jno
fdiv
daa
adc
xchg
xor
sub
xor
gs
fcomip
call
call
adc
dec
jmp
pop
pop
in
loope
shl
shl
adc
cwde
mov
hlt
add
fst
xor
mov
inc
add
(bad)
inc
xor
fldcw
retf
add
pop
(bad)
(bad)
(bad)
out
jle
pushf
add
rcl
inc
test
lods
add
xchg
jle
dec
data16
inc
sub
(bad)
(bad)
push
mov
nop
movs
cli
bound
sbb
push
dec
(bad)
cmp
rcl
xchg
jecxz
sub
(bad)
(bad)
call
les
sbb
adc
sahf
push
push
push
pushf
(bad)
popf
cmp
(bad)
(bad)
jmp
or
sub
sub
cmp
js
cdq
mov
add
call
push
rcr
data16
or
push
dec
sub
pusha
inc
push
push
test
mov
(bad)
(bad)
(bad)
jmp
int3
mov
xor
pushf
mov
lea
or
xor
mov
sti
es
(bad)
(bad)
jmp
movs
sub
or
mov
mov
lock
and
(bad)
pop
call
jmp
int3
mov
xlat
sbb
sbb
les
sub
call
dec
dec
shl
dec
movs
add
iret
jo
mov
(bad)
(bad)
jg
push
dec
test
(bad)
arpl
mov
test
jmp
xor
push
lods
inc
and
or
(bad)
(bad)
dec
jno
addr16
mov
xchg
sti
mov
xchg
enter
(bad)
(bad)
sbb
and
add
(bad)
(bad)
inc
mov
xchg
add
(bad)
iret
outs
nop
or
cld
jns
add
scas
jmp
and
stc
ret
call
jne
adc
rcr
jmp
ins
mov
sti
(bad)
mov
mul
jp
inc
adc
(bad)
sub
ss
ins
(bad)
sahf
mov
mov
idiv
into
(bad)
(bad)
(bad)
dec
pop
popa
mov
jnp
cs
push
out
aam
movs
inc
jne
clc
fsubr
adc
ret
popf
xor
(bad)
(bad)
call
inc
fld1
std
fstp
stos
popf
ins
mov
inc
add
test
mov
pop
std
inc
jno
or
(bad)
inc
aas
popa
jle
adc
mov
push
jno
(bad)
sub
(bad)
(bad)
(bad)
ffreep
iret
mov
push
test
and
inc
jae
add
and
cmp
pushf
jl
mov
jmp
jmp
data16
and
jns
ja
out
mov
call
je
in
ror
shl
(bad)
(bad)
(bad)
(bad)
(bad)
das
push
jmp
aam
or
fdivrp
mov
mov
sbb
pop
popf
mov
cmp
(bad)
(bad)
mov
adc
lods
xor
or
fcmovnbe
push
mov
push
fild
dec
(bad)
jmp
(bad)
ds
outs
loop
mov
aaa
cli
aam
(bad)
cli
fdiv
ds
cld
dec
add
fidivr
pop
mov
rcl
xchg
aad
(bad)
(bad)
call
push
test
addr16
jne
xor
(bad)
push
and
(bad)
(bad)
(bad)
call
sbb
jmp
pop
push
mov
push
sub
(bad)
outs
mov
cli
dec
mov
fistp
ficomp
jnp
push
lds
cdq
repnz
jmp
sar
pop
lock
mov
mov
lods
cdq
rcl
(bad)
(bad)
jge
cwde
sbb
loop
std
pop
cld
pop
div
xchg
xchg
sub
imul
jmp
pop
xchg
cmp
push
adc
push
jbe
sub
push
xor
adc
inc
inc
loope
mov
retf
js
cwde
xchg
cwde
dec
stos
pop
hlt
fild
inc
jns
call
jo
jo
(bad)
(bad)
jmp
push
mov
movs
movs
imul
jno
mov
mov
push
ds
fild
call
mov
xor
ins
push
dec
call
or
leave
xchg
xor
cmps
lods
sub
fstp
arpl
fsub
pop
adc
adc
ja
inc
rcr
dec
pop
sbb
clc
cmp
sub
(bad)
out
jb
out
retf
popa
mov
nop
cmp
sub
int
(bad)
push
iret
fld
xor
mov
jmp
xchg
jmp
cmovs
inc
out
neg
pop
out
les
outs
into
ss
cmp
mov
daa
and
dec
dec
(bad)
(bad)
mov
fs
mov
popf
mov
inc
popa
dec
fisttp
cli
iret
fdiv
call
loopne
sub
jae
lods
mov
ss
pop
inc
ss
fmul
(bad)
cmps
jns
dec
cs
sbb
stos
hlt
(bad)
xchg
in
and
(bad)
out
cmp
push
mov
mov
out
mov
dec
ret
in
mov
daa
and
les
pop
aaa
cld
(bad)
dec
or
and
dec
retf
fcmovne
mul
(bad)
in
inc
(bad)
xor
imul
dec
and
mov
dec
addps
ins
mov
mov
ins
ins
popf
xor
mov
cdq
das
cli
(bad)
fstp
in
shl
lods
dec
sahf
mov
dec
push
jge
loope
mov
push
inc
and
push
inc
clc
jp
(bad)
scas
loope
dec
dec
imul
add
pop
sub
pop
adc
fwait
leave
js
(bad)
outs
sbb
in
(bad)
(bad)
(bad)
jmp
push
sbb
add
add
sub
fild
sbb
push
xchg
loop
test
mov
stos
sti
sub
pop
mov
cmp
(bad)
jg
sub
aaa
mov
hlt
(bad)
push
lahf
shl
xchg
cmp
int3
cmps
push
test
mov
(bad)
call
ss
mov
hlt
(bad)
jne
pop
pop
shl
addr16
ret
lock
dec
xor
pop
sbb
(bad)
(bad)
(bad)
push
pop
jg
aad
test
movd
aaa
ds
add
test
mov
push
mov
sbb
push
(bad)
(bad)
(bad)
inc
repz
mov
mov
push
add
mov
inc
pop
mov
cmps
mov
test
call
jle
xchg
shr
call
jmp
daa
xchg
sub
cmc
cld
cmp
(bad)
cmp
dec
mov
inc
ss
imul
fld
jae
push
inc
jle
(bad)
(bad)
(bad)
ds
mov
xor
test
xchg
icebp
mov
mov
push
sbb
lea
and
(bad)
(bad)
call
dec
nop
cmp
push
mov
mov
push
ins
mov
xchg
ss
mov
aad
loop
push
data16
push
repz
(bad)
call
jb
xchg
dec
fwait
sub
mov
inc
push
mov
bnd
pop
xor
das
sub
pop
clc
(bad)
(bad)
(bad)
jmp
mov
xchg
js
ret
pop
repz
push
in
(bad)
(bad)
(bad)
inc
fwait
out
pushf
test
mov
or
(bad)
cli
mov
(bad)
fimul
inc
xchg
neg
sar
mov
sbb
push
mov
aad
xchg
fwait
cmp
call
push
pop
fisub
sbb
fcomi
shl
hlt
(bad)
test
popa
mov
mov
std
(bad)
(bad)
jmp
mov
add
xchg
stos
lods
cs
mov
arpl
mov
icebp
and
sub
retf
push
adc
js
add
imul
aaa
push
sbb
(bad)
dec
out
mov
mov
fcomp
push
ret
mov
call
fbstp
into
cdq
stos
pushf
adc
scas
imul
cs
(bad)
(bad)
jge
test
push
pop
movs
mov
in
(bad)
cmp
pop
lock
pop
xchg
pusha
mov
dec
dec
push
inc
inc
cmp
jp
lds
push
dec
hlt
pop
nop
outs
sbb
push
xchg
xchg
or
out
adc
stos
icebp
pop
add
mov
rol
popf
mov
inc
out
sub
push
movs
pusha
push
(bad)
jmp
(bad)
(bad)
(bad)
dec
and
dec
cdq
push
sbb
pop
loope
pop
and
sbb
aam
push
in
lea
pop
jmp
sub
aas
inc
mov
imul
sub
dec
(bad)
(bad)
(bad)
(bad)
cmp
cwde
xchg
pop
stos
xchg
jae
loopne
pop
repnz
mov
ficomp
inc
add
std
cmps
xor
das
scas
adc
call
(bad)
mov
pop
cmps
fsub
pop
inc
dec
add
(bad)
(bad)
(bad)
(bad)
fimul
icebp
inc
(bad)
popa
pop
jnp
div
mov
add
and
mov
in
addr16
jmp
push
dec
xlat
loop
mov
sahf
dec
and
in
lods
sub
ds
jmp
clc
fwait
pop
mov
lods
sub
hlt
icebp
out
mov
shl
pop
pop
jge
(bad)
(bad)
jmp
not
jmp
jcxz
adc
pop
dec
lods
cmp
mov
test
jp
(bad)
fild
xchg
push
sub
pop
add
fsubr
call
(bad)
(bad)
(bad)
jmp
ins
pop
test
dec
pop
cmp
popa
adc
and
add
imul
pop
or
rcl
push
(bad)
(bad)
(bad)
clc
push
cmp
(bad)
sub
mov
rcr
scas
stos
loope
lds
lock
(bad)
push
xor
dec
lods
mov
cs
sbb
adc
push
jecxz
cli
ss
jmp
sbb
mov
call
sbb
sti
lea
lahf
test
sbb
push
mov
pop
outs
push
retf
cwde
aas
lock
jmp
cli
loope
iret
sar
push
sbb
jmp
inc
push
push
imul
(bad)
(bad)
inc
cmp
xor
and
(bad)
adc
sbb
in
sbb
call
or
(bad)
inc
jo
(bad)
(bad)
jg
call
mov
or
ins
cmp
(bad)
bound
xchg
dec
daa
addr16
(bad)
(bad)
(bad)
mov
hlt
mov
call
arpl
ds
js
pop
jbe
ret
lods
dec
xor
cmp
or
mov
mov
push
lea
js
mov
fwait
mov
push
adc
(bad)
(bad)
jmp
and
movs
push
test
push
loop
pop
lahf
mov
test
sbb
outs
(bad)
(bad)
push
add
(bad)
pop
repz
ss
jne
sub
(bad)
cmp
das
jp
cmp
add
xchg
inc
dec
inc
out
movs
adc
(bad)
(bad)
call
add
lods
nop
push
add
pop
mov
lea
cmp
pop
jo
xor
and
scas
pop
les
test
(bad)
jg
sbb
test
jo
or
pop
ret
inc
aad
call
(bad)
push
pop
xor
stos
out
(bad)
outs
mov
shr
(bad)
sub
fcomip
jmp
scas
fdivr
push
mov
gs
bound
add
(bad)
(bad)
(bad)
dec
sub
sub
mov
mov
sub
retf
dec
loop
cmps
sbb
(bad)
(bad)
dec
or
out
mov
adc
jbe
push
lds
add
in
mov
cwde
add
pop
loopne
push
and
mov
outs
sub
cli
(bad)
(bad)
fldcw
call
das
fwait
and
repz
imul
movs
cmp
add
(bad)
dec
adc
push
shl
mov
out
sahf
fdivr
inc
aas
pop
and
mov
add
aam
mov
dec
mov
(bad)
jmp
in
jns
aas
loope
or
jl
jecxz
jl
push
repz
cmp
call
cmps
xchg
push
pop
mov
xchg
loope
fwait
enter
scas
mov
aas
pop
inc
(bad)
(bad)
jg
push
add
aaa
sub
(bad)
pop
test
mov
repnz
mov
(bad)
out
inc
jbe
enter
(bad)
ins
imul
mov
or
lods
repnz
sub
(bad)
(bad)
jmp
jo
push
ds
movs
outs
xor
jmp
leave
cdq
repnz
jbe
std
mov
clc
and
and
test
(bad)
push
jbe
mov
push
xor
into
push
lds
das
pop
ror
push
lock
push
add
(bad)
(bad)
call
push
movs
inc
mov
fnstenv
sbb
pop
dec
mov
cmc
cld
(bad)
(bad)
jmp
scas
lods
(bad)
jae
pop
cs
lods
outs
or
js
or
movs
cmp
dec
push
jb
(bad)
(bad)
push
(bad)
jmp
pop
sub
cmp
add
ret
cmp
js
cdq
mov
pop
(bad)
(bad)
(bad)
ds
pop
loopne
xor
sub
test
das
loope
push
dec
ror
(bad)
(bad)
call
inc
dec
in
ds
pop
jnp
call
inc
push
(bad)
jecxz
call
and
ja
adc
aam
sbb
xor
std
xchg
in
cmps
dec
ins
jne
shl
scas
mov
fild
xchg
xlat
in
mov
(bad)
(bad)
cmp
cmp
add
push
pop
mov
aam
in
or
neg
popf
cmp
mov
cdq
pop
jle
pop
push
cmps
mov
xor
scas
fldenv
je
rol
jne
sub
dec
mov
xchg
test
add
fucomp
out
add
pop
xchg
cmp
push
mov
adc
push
rcr
sahf
lea
jmp
neg
inc
mov
aad
inc
jns
(bad)
cmp
or
inc
aaa
fisub
push
inc
cld
and
push
push
sti
sbb
mov
ins
jmp
fnstenv
frstor
cld
imul
pop
std
jne
out
(bad)
loope
jb
pop
pmaxsw
iret
test
es
sbb
(bad)
(bad)
dec
mov
jle
jnp
xlat
jecxz
inc
sub
jmp
xchg
jmp
loopne
leave
ds
(bad)
dec
clc
aad
repz
lock
inc
js
push
lahf
cmp
es
push
(bad)
(bad)
(bad)
(bad)
cld
fstp
pop
div
sbb
fst
mov
inc
loop
(bad)
lock
loope
dec
and
add
or
mov
ss
(bad)
(bad)
mov
and
aam
xchg
xchg
ins
sub
retf
and
jge
aad
and
lods
mov
clc
in
fs
add
dec
jmp
addr16
lahf
or
jmp
mov
inc
test
cmps
aad
jno
pop
xor
loop
jge
(bad)
(bad)
inc
sub
sub
or
mov
add
mov
jle
mov
ins
shl
imul
outs
aam
lods
xor
test
(bad)
(bad)
(bad)
mov
pop
push
xchg
push
sbb
imul
aas
sub
inc
xor
in
xor
daa
inc
mov
xor
sbb
mov
push
adc
(bad)
jmp
sub
sbb
movs
test
(bad)
(bad)
call
das
sahf
adc
push
cwde
xchg
(bad)
(bad)
loopne
xchg
test
fnstcw
and
nop
clc
(bad)
dec
xor
jmp
pop
imul
movs
dec
jns
(bad)
(bad)
mov
es
lea
xor
hlt
aam
imul
cwde
test
push
push
test
into
into
sar
(bad)
push
cmp
cdq
cwde
retf
sub
pop
and
test
outs
loope
aad
push
cmp
lahf
cmp
(bad)
xor
clc
mov
ror
out
mov
sub
dec
aam
xchg
(bad)
(bad)
(bad)
call
mov
aad
inc
adc
adc
push
in
push
jb
mov
mov
sbb
call
repnz
enter
xchg
jb
cmps
ins
sbb
add
xor
in
inc
lahf
mov
(bad)
(bad)
(bad)
push
nop
lock
in
aas
clc
pop
bound
in
loope
or
dec
mov
dec
cmc
dec
(bad)
mov
lds
or
pushf
fwait
jl
jmp
popa
mov
xor
pop
ret
mov
loopne
pop
in
dec
mov
jae
ss
push
adc
scas
inc
scas
int
push
mov
clc
jmp
adc
test
mov
test
call
add
ds
or
adc
sub
add
push
jns
fcomip
mov
mov
mov
xchg
(bad)
push
pop
mov
dec
jnp
cs
(bad)
(bad)
call
jnp
cmps
bound
(bad)
jmp
adc
xor
out
ret
(bad)
out
and
fld
dec
(bad)
fsubr
ret
dec
and
mov
xor
les
lods
jg
(bad)
(bad)
fucomip
(bad)
push
hlt
add
mov
(bad)
sub
aas
xchg
xchg
push
pop
mov
ja
test
out
imul
cmp
xchg
pop
jae
imul
dec
outs
leave
cmc
inc
enter
mov
mov
and
aam
cmp
adc
aad
ja
aad
sbb
add
adc
and
xchg
jb
mov
(bad)
inc
push
call
jae
(bad)
iret
sbb
adc
mov
jae
movs
dec
jmp
(bad)
(bad)
jmp
test
fisub
cdq
lahf
or
test
shr
ret
add
fdivp
lds
sbb
dec
dec
cmp
int
scas
mov
push
pop
and
iret
xchg
cmp
add
pop
outs
push
icebp
(bad)
jmp
pop
loope
inc
adc
or
push
cli
jno
(bad)
(bad)
jmp
neg
mov
xchg
je
inc
or
add
push
dec
lock
out
sub
iret
in
push
jmp
and
daa
jno
stos
retf
movs
lods
add
cmp
(bad)
mov
call
aas
jae
mov
inc
jecxz
not
pop
xor
jecxz
loope
mov
stos
test
(bad)
out
clc
inc
out
or
je
and
imul
add
inc
push
enter
mov
sbb
rol
fcmove
pop
jge
and
(bad)
mov
inc
test
xchg
dec
add
aam
jge
fdivr
(bad)
(bad)
mov
or
dec
imul
jo
mov
ds
call
adc
sti
jmp
in
int3
fild
cwde
push
mov
movs
imul
fwait
sbb
adc
(bad)
fcomip
pop
pop
push
outs
les
repnz
mov
pop
cs
mov
call
(bad)
jmp
(bad)
adc
xchg
lock
sbb
inc
xchg
int3
xchg
out
dec
das
push
cwde
inc
dec
cdq
mov
(bad)
(bad)
(bad)
dec
dec
jnp
and
jmp
mov
bound
popf
out
push
adc
(bad)
mov
cmp
adc
or
out
pop
sub
cmp
in
sbb
(bad)
(bad)
inc
mov
sub
data16
clc
adc
sbb
inc
test
push
fld
mov
jg
gs
into
and
addr16
fiadd
scas
sahf
stos
(bad)
add
vpavgb
inc
adc
adc
and
(bad)
(bad)
dec
dec
jae
sub
ret
inc
pop
lea
dec
rcl
pop
and
imul
push
mov
lock
(bad)
(bad)
inc
push
xor
push
cmp
mov
es
ret
test
adc
(bad)
jmp
adc
cwde
(bad)
fsubr
nop
dec
lods
pop
clc
imul
xchg
les
cs
(bad)
(bad)
(bad)
dec
xor
or
dec
dec
push
imul
jb
rcl
push
mov
(bad)
mov
test
push
stc
lods
leave
add
pop
dec
push
shl
(bad)
(bad)
(bad)
jmp
es
adc
adc
lods
and
enter
call
popa
add
mov
dec
icebp
(bad)
in
inc
xor
mov
pop
js
cdq
cmp
shl
in
(bad)
call
mov
pop
in
ds
and
cmp
(bad)
(bad)
(bad)
mov
mov
jl
and
je
xor
push
test
ja
test
(bad)
(bad)
call
dec
xor
out
(bad)
add
fisub
mov
add
mov
aaa
dec
and
arpl
(bad)
(bad)
dec
dec
fild
cwde
push
or
daa
mov
and
popa
xchg
sbb
mov
sub
call
push
out
add
scas
sub
push
cmc
jb
stc
iret
test
mov
lea
les
and
adc
xor
xor
repnz
push
aad
maxps
(bad)
push
test
and
ret
mov
or
pusha
aad
or
jbe
cmps
(bad)
(bad)
(bad)
jmp
test
nop
out
jae
push
sub
test
or
inc
addr16
dec
daa
(bad)
push
sub
ret
(bad)
push
jbe
dec
loopne
bound
jmp
aas
pop
push
dec
leave
dec
pop
retf
dec
scas
es
mov
push
(bad)
(bad)
(bad)
call
mov
cmp
mov
xchg
repnz
pop
lods
pop
sbb
sub
clc
out
(bad)
call
dec
movs
add
fwait
mov
out
add
enter
add
cmps
sub
(bad)
(bad)
(bad)
call
popa
int3
sub
dec
push
mov
fild
mov
cmp
xchg
out
clc
(bad)
jmp
je
dec
(bad)
push
data16
fs
dec
adc
call
pop
loopne
inc
fwait
inc
xchg
stos
popf
int
mov
xlat
adc
(bad)
(bad)
(bad)
inc
neg
add
stos
cmps
cmp
test
pop
adc
fisub
leave
addr16
dec
inc
push
call
jnp
push
(bad)
fst
sbb
xor
mov
mov
sbb
iret
inc
and
(bad)
(bad)
(bad)
jmp
sub
inc
int3
xchg
adc
fldcw
popf
mov
xchg
sub
add
je
(bad)
(bad)
inc
xchg
js
push
pop
iret
pop
inc
loop
xor
test
cmp
xchg
call
push
mov
dec
aas
pushf
push
scas
inc
mov
inc
stos
lods
cmc
sbb
dec
cmp
xor
hlt
cmp
les
sub
test
mov
push
jo
(bad)
jmp
jo
add
mov
push
xchg
aad
scas
pop
cmp
(bad)
(bad)
(bad)
mov
adc
lea
(bad)
test
adc
sbb
push
cmc
xor
(bad)
(bad)
(bad)
jmp
sub
pop
cmps
xrstors
rcr
sub
repz
mov
adc
pushf
jecxz
jne
pop
xchg
push
ror
dec
cmp
xlat
sub
das
cli
inc
adc
and
rcr
mov
and
sbb
(bad)
call
ins
out
es
jp
sub
sbb
mov
cdq
inc
xor
cmc
mov
(bad)
(bad)
(bad)
jmp
or
das
rol
jle
cmp
push
pop
xchg
jge
imul
in
int
mov
call
jg
call
loope
and
scas
cmp
xchg
fdivr
imul
bound
lock
and
sub
ja
mov
stos
aad
push
les
jnp
inc
(bad)
(bad)
(bad)
fbstp
sbb
out
sbb
sub
aaa
xor
pusha
movs
xchg
aas
pop
(bad)
jg
test
or
sbb
das
pop
jmp
cli
dec
xchg
add
dec
mov
inc
cmp
mov
xchg
mov
call
or
sub
test
jnp
mov
mov
cmp
sub
jmp
sbb
xchg
sub
in
sub
and
dec
mov
jmp
or
and
jbe
jae
shl
pop
stos
inc
int3
jnp
mov
push
es
cmp
sbb
enter
ficomp
sbb
fs
adc
mov
and
call
sbb
inc
(bad)
mov
pop
push
xchg
mov
inc
mov
gs
test
js
xor
cmp
outs
cmps
mov
pop
cmp
mov
cld
out
xchg
in
cmp
jmp
add
lock
sbb
sbb
adc
pop
not
scas
scas
jecxz
(bad)
mov
lock
pop
sub
cmp
lock
cmp
(bad)
(bad)
fild
bound
cwde
mov
cmp
fucom
nop
hlt
test
mov
cmp
das
mov
jmp
das
or
jp
jge
cmps
dec
fnstcw
cmp
ror
push
sti
cmp
(bad)
(bad)
call
ins
pop
hlt
xchg
(bad)
sbb
(bad)
ins
cmps
xchg
adc
dec
dec
push
sbb
repz
test
(bad)
inc
out
aam
xlat
(bad)
iret
rcr
jmp
out
(bad)
(bad)
(bad)
inc
jmp
push
xchg
xlat
outs
cli
(bad)
lods
sub
sti
pop
mov
lds
sbb
(bad)
(bad)
inc
add
ins
pop
lahf
fdivr
jp
pop
fnstcw
fist
dec
icebp
dec
in
jmp
ds
(bad)
(bad)
(bad)
jmp
or
ds
mov
mov
cmovne
sub
dec
xor
mov
jp
shl
imul
fld
stos
push
inc
and
mov
mov
jne
scas
cli
(bad)
stc
inc
jo
clc
rcl
cs
or
out
mov
inc
sub
(bad)
push
mov
outs
or
cmps
outs
mov
and
mov
pop
std
mov
(bad)
dec
ja
cmp
mov
daa
test
push
stos
push
push
leave
or
and
push
or
dec
mov
sub
pop
push
icebp
retf
sbb
mov
sti
addr16
les
or
jmp
mov
mov
icebp
mov
mov
or
aaa
adc
sbb
xlat
cmp
or
(bad)
push
sahf
xchg
xchg
adc
mov
sbb
in
fwait
dec
test
or
(bad)
(bad)
call
cmps
loopne
scas
mov
mov
mov
fstp
stos
into
mov
and
inc
cdq
stos
(bad)
(bad)
jmp
pop
lods
les
adc
sbb
movs
jle
outs
mov
fcom
pop
mov
(bad)
(bad)
(bad)
(bad)
(bad)
leave
push
xchg
mov
dec
xchg
mul
into
xchg
dec
aad
push
push
cld
jl
jmp
(bad)
js
outs
xor
dec
into
int
dec
leave
or
iret
dec
int3
inc
xchg
xchg
xchg
xchg
adc
(bad)
jb
outs
cmp
inc
dec
repz
xchg
inc
and
or
sub
(bad)
(bad)
call
enter
cmps
int
dec
mov
test
add
mov
fwait
push
call
fwait
ins
mov
xchg
data16
shr
mov
push
xlat
xor
(bad)
mov
(bad)
(bad)
(bad)
(bad)
call
addr16
ja
aad
ror
cdq
jle
jecxz
dec
pop
xor
pop
mov
rcr
or
sti
(bad)
call
fdiv
and
add
ja
cli
cwde
push
gs
shr
push
(bad)
(bad)
(bad)
fild
hlt
jge
je
jb
cmps
aad
xchg
mov
mov
sub
mov
xchg
jmp
sti
cld
(bad)
call
pop
repnz
cmps
stos
aas
movs
lods
mov
and
jp
xchg
mov
ss
inc
ins
ins
movs
adc
fxam
and
cli
popa
push
dec
jecxz
dec
retf
aad
dec
lds
(bad)
(bad)
(bad)
call
jle
ja
into
jno
push
cli
aas
aaa
ret
jp
jnp
in
jbe
add
aaa
(bad)
(bad)
(bad)
call
push
psrad
pop
push
or
cmc
ret
loope
xchg
(bad)
sti
stos
cmp
(bad)
(bad)
(bad)
call
adc
mov
out
mov
pop
push
mov
ror
push
outs
jmp
sbb
push
pop
out
call
mov
add
call
cli
dec
xchg
jl
ret
push
mov
(bad)
dec
cmovp
mov
pop
fsub
jbe
sub
(bad)
(bad)
call
(bad)
jns
jecxz
dec
or
aaa
mov
js
mov
pop
icebp
push
loopne
(bad)
push
jmp
xchg
mov
xor
out
mov
(bad)
(bad)
jg
leave
pop
scas
pop
and
push
xchg
push
adc
shr
dec
(bad)
dec
jbe
scas
push
scas
dec
dec
es
inc
mov
pop
(bad)
(bad)
(bad)
jmp
jle
outs
mov
out
push
loop
retf
pop
out
outs
and
gs
mov
xchg
or
lods
jb
in
clc
call
jmp
push
adc
add
js
loopne
cld
stc
in
lock
(bad)
(bad)
sti
mov
lea
xor
imul
inc
xchg
xchg
xchg
xchg
adc
pushw
(bad)
fcomip
pop
and
xor
mov
push
mov
mov
pop
stos
and
shl
jmp
fs
popf
cmp
dec
xchg
test
push
and
test
dec
stos
jno
(bad)
(bad)
dec
xchg
data16
cdq
sar
xchg
stos
fs
push
pop
sub
inc
sbb
test
cmp
gs
(bad)
(bad)
jmp
daa
jecxz
mov
fnsave
jmp
sbb
dec
icebp
dec
jnp
inc
mov
retf
dec
call
xchg
push
pop
frstor
movs
dec
and
sar
mov
(bad)
in
test
sar
pusha
in
cdq
jmp
xchg
mov
mov
inc
mov
ror
repz
cli
cmps
clc
sub
push
mov
div
(bad)
jp
fild
jge
gs
stos
sub
daa
lods
add
push
pop
(bad)
(bad)
(bad)
jmp
mov
hlt
icebp
xchg
xlat
fcomi
stos
loope
push
pop
mov
loope
pop
sub
jne
lock
dec
pop
test
mov
out
add
(bad)
ins
mov
mov
clc
outs
mov
inc
inc
xor
mov
jmp
cmps
out
movs
inc
cmps
inc
(bad)
in
(bad)
(bad)
(bad)
push
inc
mov
outs
retf
and
inc
mov
pushf
scas
mov
jg
dec
jg
int
sar
(bad)
(bad)
cmp
stc
mov
stos
outs
in
xor
scas
in
jnp
add
and
pop
cmp
xor
lock
imul
aam
dec
or
jo
(bad)
(bad)
jmp
mov
fld
push
adc
out
fld
fisttp
jae
aad
daa
cmps
jno
scas
(bad)
(bad)
push
push
imul
pop
xor
fidiv
xor
push
ja
fnsave
push
cmp
pop
inc
hlt
cmps
mov
mov
push
out
ret
les
faddp
jg
(bad)
movs
lea
mov
imul
(bad)
(bad)
(bad)
fst
aas
or
mov
pop
cmp
ds
(bad)
(bad)
jmp
imul
push
dec
add
stc
inc
push
inc
xor
stc
inc
(bad)
(bad)
(bad)
jg
pop
lock
fwait
jle
arpl
sub
xlat
mov
stos
jbe
push
sahf
mov
xor
imul
(bad)
dec
pop
gs
inc
aam
push
inc
xchg
stos
add
iret
pop
out
or
lods
sti
dec
dec
(bad)
(bad)
(bad)
jmp
inc
jae
pop
dec
stos
sub
xchg
lahf
or
mov
int3
out
xchg
bound
cmp
xchg
inc
cld
dec
dec
cdq
icebp
test
cmp
adc
cli
inc
mov
out
sbb
(bad)
(bad)
(bad)
call
mov
push
mov
ins
jge
fiadd
loope
mov
(bad)
(bad)
(bad)
jg
mov
ins
call
daa
cmp
jecxz
cwde
push
jmp
shl
mov
call
clc
dec
xor
sbb
hlt
popa
outs
ficom
(bad)
(bad)
(bad)
mov
mov
jge
jnp
call
dec
add
pop
xchg
inc
nop
jnp
add
cmp
test
fisubr
ret
rol
clc
idiv
retf
(bad)
(bad)
(bad)
call
int3
add
fist
xchg
jne
add
sti
xor
pop
mov
sbb
mov
xchg
push
scas
leave
ret
(bad)
(bad)
(bad)
(bad)
sti
mov
int3
les
sbb
add
push
jmp
mov
test
push
(bad)
(bad)
jmp
rol
inc
dec
mov
mov
leave
icebp
lock
dec
jae
test
aam
sub
(bad)
(bad)
fisubr
pop
cmps
push
cmp
jmp
shl
fwait
or
bound
mov
push
movs
sub
xor
jb
inc
push
sbb
mov
dec
mov
loop
xchg
and
imul
or
out
jecxz
or
mov
dec
inc
test
dec
mov
es
in
imul
inc
sub
lods
dec
arpl
mov
addr16
scas
push
jns
jae
inc
nop
movs
cld
push
ins
jecxz
mov
jbe
sti
movs
push
xchg
inc
out
sar
(bad)
(bad)
push
add
xor
xchg
pop
push
test
mov
xor
clc
push
pop
cmp
mov
sbb
xor
add
repnz
pop
rsqrtps
out
(bad)
cmp
xchg
jp
(bad)
(bad)
jmp
push
push
sbb
test
retf
aas
jno
mov
or
out
and
fisub
pop
jge
jecxz
lods
fisttp
mov
add
(bad)
(bad)
(bad)
push
test
fdivr
jno
mov
mov
stos
xchg
out
dec
aad
cmp
(bad)
call
mov
xor
add
push
jb
cmp
arpl
mov
or
test
int3
cmps
push
and
(bad)
jmp
cmc
cmc
ret
gs
jmp
fdivr
(bad)
scas
inc
fstp
hlt
or
fucomi
popf
aad
or
popf
call
pop
repz
xchg
sbb
(bad)
dec
fwait
and
mov
mov
imul
or
xchg
out
mov
(bad)
push
retf
adc
shl
ds
lahf
xor
les
pop
bound
and
sub
out
das
sbb
pusha
mov
in
in
xor
xchg
scas
mov
adc
and
xor
adc
(bad)
fild
aas
sti
mov
lahf
dec
cmp
or
clc
ds
dec
and
fcom
push
and
inc
lods
and
(bad)
(bad)
mov
in
fdiv
mov
cli
cld
sti
jecxz
ja
mov
mov
stos
and
das
enter
inc
stos
mov
icebp
cmps
jne
sbb
call
std
in
mov
ins
daa
sub
push
nop
dec
adc
mov
sbb
inc
jmp
in
dec
or
pop
fimul
sar
mov
sbb
(bad)
(bad)
jmp
dec
push
and
lods
and
inc
imul
mov
ficomp
jmp
and
js
int
mov
xchg
daa
pop
imul
std
sbb
ss
mov
cmp
loopne
out
aaa
mov
scas
test
bound
mov
fcomip
xor
leave
push
cmc
ficom
xor
(bad)
(bad)
mov
bound
mov
mov
jmp
loope
popa
inc
(bad)
(bad)
(bad)
call
and
inc
xor
test
xor
(bad)
(bad)
push
retf
inc
inc
imul
aaa
clc
mov
xor
pop
push
lea
or
loopne
add
jl
icebp
mov
pushf
and
ja
popa
jl
push
popa
jo
sbb
in
pop
(bad)
xchg
(bad)
call
(bad)
xchg
xor
xchg
sbb
sahf
and
xchg
es
inc
ret
dec
cmp
inc
inc
jp
dec
push
(bad)
(bad)
(bad)
jmp
cmc
out
and
mov
inc
push
movs
int
sub
movs
retf
jg
(bad)
sbb
push
and
loopne
inc
xlat
es
rcr
xlat
(bad)
enter
aas
sub
(bad)
fcomip
jg
js
jb
retf
jno
loope
sub
xchg
mov
in
js
(bad)
(bad)
(bad)
jmp
bound
popa
dec
and
xchg
lods
dec
pop
mov
jecxz
pop
push
push
push
movs
icebp
iret
or
(bad)
jmp
(bad)
stos
sbb
pop
jns
jl
mov
cs
cs
push
(bad)
(bad)
(bad)
mov
mov
mov
in
mov
loope
jl
xchg
scas
clc
or
(bad)
call
add
call
push
repnz
dec
cmp
scas
xchg
sbb
push
rcr
push
inc
movs
jle
mov
pushf
rep
dec
cmc
jmp
mov
aaa
test
xchg
ret
pop
aas
(bad)
or
pushf
imul
ret
add
(bad)
(bad)
push
loop
fwait
cmp
lahf
int
cmp
enter
popa
xchg
jl
dec
loopne
dec
xchg
dec
jecxz
call
test
and
enter
dec
iret
pop
sbb
out
or
mov
(bad)
mov
push
pop
push
test
push
adc
jmp
and
pop
aas
pop
icebp
(bad)
dec
add
mov
push
pop
jmp
seta
xchg
mov
clc
popa
jp
or
stos
mov
cwde
neg
pop
fdivr
inc
adc
outs
aas
fwait
int
rol
pop
mov
inc
(bad)
(bad)
(bad)
mov
or
xor
mul
push
fld
out
test
js
lds
push
sub
sbb
(bad)
jge
(bad)
test
push
loopne
call
inc
mov
(bad)
jmp
loope
es
cmp
cmps
dec
les
js
mov
ds
fist
(bad)
(bad)
(bad)
call
and
xchg
add
(bad)
push
or
in
push
adc
mov
mov
sbb
or
push
ins
or
or
adc
push
pop
mov
xor
std
(bad)
inc
and
pop
sbb
dec
ret
sbb
mov
jle
call
cld
dec
adc
xor
cmp
mov
sbb
nop
mov
mov
mov
xor
jb
jge
fistp
arpl
pop
data16
jecxz
jl
(bad)
(bad)
push
repnz
pushf
popa
test
pop
pop
and
pop
icebp
outs
sbb
jge
es
loope
or
(bad)
mov
adc
push
and
adc
mov
leave
xchg
(bad)
(bad)
call
mov
cwde
and
dec
shl
mov
cmp
out
gs
inc
adc
dec
push
pusha
cld
inc
jo
out
lea
push
xchg
jge
mov
test
dec
popa
pop
push
mov
shl
dec
or
pop
call
or
into
repz
sbb
(bad)
call
outs
dec
pop
les
jg
shl
push
int
rcl
pushw
call
inc
call
xor
mov
sbb
xchg
sub
pop
sub
dec
leave
inc
fcomip
(bad)
push
rcr
xchg
call
sbb
jmp
icebp
(bad)
dec
sahf
and
adc
xchg
out
shl
ds
cmp
fldenv
aad
jmp
std
(bad)
mov
loopne
mov
dec
mov
aam
rcr
push
daa
or
inc
(bad)
lahf
mov
dec
loope
sbb
(bad)
(bad)
(bad)
jnp
or
mov
mov
sbb
or
cmps
in
out
push
loop
out
sar
(bad)
call
outs
out
and
pop
rcr
pop
ror
and
ds
(bad)
jg
in
in
sub
cli
inc
mov
cwde
outs
sahf
mov
push
aam
(bad)
call
call
mov
pop
pop
xchg
xchg
fcomp
repnz
jg
mov
movs
add
fdivr
cld
rcr
loopne
(bad)
(bad)
(bad)
fsubr
ret
cwde
(bad)
out
or
push
sbb
xor
and
jo
sub
sar
ja
fstp
cmp
test
cmps
dec
jle
imul
pop
in
mov
in
dec
icebp
(bad)
(bad)
dec
add
in
pop
jne
inc
movs
daa
clc
inc
xchg
mov
add
das
and
inc
movs
jecxz
jge
outs
jecxz
clc
stc
into
jnp
cmp
pop
popf
lahf
xchg
xchg
mov
ins
ret
(bad)
(bad)
(bad)
(bad)
jg
mov
jns
std
cmp
sub
div
aad
ror
sub
jg
imul
imul
sar
lea
and
lock
sbb
in
js
(bad)
call
mov
and
outs
into
adc
imul
int3
jecxz
(bad)
(bad)
push
and
mov
icebp
push
punpcklwd
jmp
jp
gs
leave
es
out
clc
(bad)
inc
mov
xchg
imul
outs
mov
mov
test
sub
(bad)
dec
xchg
stc
inc
ror
(bad)
and
mov
pop
test
pop
inc
scas
data16
(bad)
(bad)
out
stos
lods
cmp
imul
dec
movs
cdq
mov
gs
mov
push
std
call
cmps
stos
std
sahf
into
add
mov
leave
mov
pusha
sbb
(bad)
mov
ins
sbb
cli
(bad)
clc
out
sbb
icebp
lods
not
outs
ins
(bad)
mov
and
je
in
and
mov
and
(bad)
(bad)
push
adc
into
das
in
jge
fidivr
cmp
imul
sti
aas
imul
popf
mov
jmp
fdiv
mov
adc
mov
adc
pop
dec
inc
cmp
(bad)
call
xchg
jmp
jns
push
ror
adc
mov
push
rcl
cmc
call
mov
mov
ss
inc
hlt
(bad)
(bad)
call
or
dec
cdq
cs
out
cmp
fwait
mov
mov
dec
cmp
pop
sti
loop
jg
popf
xchg
mov
std
xchg
out
jnp
(bad)
or
(bad)
(bad)
(bad)
jmp
dec
jge
inc
aas
pop
adc
js
lods
add
xor
mov
movs
dec
mov
jg
jmp
xlat
mov
or
pop
int
mov
mov
retf
pop
lock
sub
xchg
dec
jo
(bad)
mov
and
jg
and
pusha
pop
aas
das
jg
push
nop
(bad)
jg
pop
scas
arpl
push
aaa
push
idiv
mov
jns
les
xchg
scas
js
addr16
adc
(bad)
cmps
scas
and
cmp
adc
pusha
ret
pop
shl
(bad)
cli
popf
jb
aam
nop
xor
cmp
jp
dec
pushf
or
call
adc
jo
fs
es
ret
out
aaa
fcomip
(bad)
inc
lock
xor
enter
loopne
lds
cmps
(bad)
xlat
xchg
(bad)
sub
(bad)
jg
out
push
lods
jb
cmp
int3
pop
(bad)
inc
(bad)
push
dec
das
shl
dec
and
pusha
inc
nop
mov
xor
pusha
imul
xchg
scas
nop
and
or
(bad)
(bad)
inc
pop
jmp
jl
xchg
sub
int3
dec
jbe
add
(bad)
fcomip
push
jmp
shl
out
ret
mov
xor
loop
cmp
xchg
shrd
jmp
fcmovnu
idiv
sbb
cmps
mov
fild
fild
(bad)
mov
sbb
(bad)
cmc
mov
icebp
mov
or
fstp
(bad)
(bad)
(bad)
dec
sar
ret
inc
mov
and
imul
mov
enter
(bad)
in
loope
int
pop
adc
inc
jmp
(bad)
xchg
mov
stos
xchg
(bad)
call
cmp
mov
icebp
out
push
ret
mov
das
lock
inc
adc
clc
push
(bad)
xor
data16
jno
loop
aaa
hlt
lock
loope
or
push
imul
sub
(bad)
cmp
aad
inc
xchg
push
imul
mov
(bad)
(bad)
jmp
jp
hlt
test
loope
xchg
and
sub
cmp
pushf
imul
hlt
dec
adc
push
daa
push
(bad)
(bad)
loopne
sbb
cmps
and
repnz
(bad)
(bad)
(bad)
call
mov
dec
xor
mov
jo
outs
sbb
xchg
mov
mov
cmc
lock
cmp
push
push
repnz
clc
inc
jb
mov
mov
call
imul
or
mov
xor
and
scas
imul
push
leave
jne
cli
inc
push
mov
jge
fwait
mov
sub
pusha
push
pop
sbb
retf
(bad)
(bad)
(bad)
dec
daa
sub
pop
xor
sub
ret
mov
shr
add
push
adc
ds
(bad)
(bad)
jmp
inc
adc
xchg
shl
lahf
je
mov
dec
jo
imul
sub
ficom
adc
(bad)
(bad)
(bad)
cmp
(bad)
aam
fbstp
push
add
fild
test
mov
fnsave
jmp
xchg
inc
adc
test
or
rcl
shl
int
inc
(bad)
(bad)
(bad)
jmp
dec
jnp
inc
dec
aaa
mov
mov
dec
xor
adc
cmp
(bad)
(bad)
(bad)
inc
dec
push
xchg
mov
or
pop
and
xchg
hlt
test
xor
sub
stc
stos
fidivr
in
push
(bad)
call
cs
sbb
ss
xchg
push
call
ror
pop
rcr
(bad)
(bad)
call
jl
bound
cmps
inc
cwde
in
jl
stc
push
mov
out
mov
(bad)
(bad)
(bad)
inc
sbb
out
cmp
loope
pop
push
xor
(bad)
call
scas
mov
(bad)
(bad)
push
jle
in
fcmovb
add
sub
sub
sbb
aad
cmp
sti
(bad)
push
lahf
pop
js
aas
addr16
dec
fisub
jmp
xor
test
das
cwde
cmp
mov
mov
(bad)
test
mov
shr
cmps
xchg
(bad)
(bad)
in
fwait
xor
movs
jo
out
iret
shl
add
scas
push
pop
jl
push
xor
call
cmp
ret
iret
scas
pop
in
push
rcl
jg
or
adc
call
jno
sub
dec
dec
adc
jno
dec
and
xchg
xor
sub
inc
pusha
(bad)
call
cld
pop
sub
in
ins
mov
xlat
cs
cli
(bad)
fist
(bad)
(bad)
(bad)
(bad)
jmp
popf
test
sub
xor
dec
xchg
mov
xchg
test
mov
mov
push
sbb
xlat
xor
add
aad
xor
mov
pop
or
mov
test
sub
popa
or
cmp
and
ret
test
or
xchg
inc
ja
push
cld
(bad)
jmp
in
dec
test
pop
neg
inc
lods
out
cmp
ds
mov
cli
jmp
clc
pop
and
sbb
push
jl
and
shl
adc
and
mov
repz
jp
cmp
cs
mov
in
xor
add
in
sub
jmp
pusha
add
leave
cdq
mov
sub
jne
xor
xchg
jae
add
mov
(bad)
(bad)
(bad)
jmp
push
nop
test
inc
fbstp
out
out
add
int3
aam
mov
out
add
jp
sar
in
movs
xlat
push
add
or
or
in
jge
adc
or
mov
repz
(bad)
mov
inc
and
into
push
push
ds
pop
adc
mov
mov
hlt
inc
mov
cmps
xor
xor
sub
xor
(bad)
(bad)
(bad)
call
add
sbb
xchg
mov
test
sbb
dec
dec
or
jmp
call
mov
pop
repz
jo
ror
into
xchg
sub
mov
(bad)
(bad)
dec
xor
shl
loope
loope
cmc
mov
pop
(bad)
aam
sub
outs
repnz
pushf
jae
inc
sbb
or
fist
or
pop
sub
jb
ret
sub
jg
jmp
sahf
jmp
and
fucomp
inc
and
(bad)
(bad)
(bad)
inc
arpl
sbb
mov
xchg
xchg
and
mov
push
arpl
and
in
jb
mov
or
(bad)
call
fcomp
cli
xchg
jb
test
jo
nop
(bad)
(bad)
(bad)
inc
cdq
int
je
scas
iret
mov
xchg
cdq
mov
mov
jecxz
and
in
mov
in
xor
dec
sub
add
leave
cs
sub
jmp
iret
cmp
fdivr
cmp
add
xor
dec
(bad)
(bad)
(bad)
(bad)
jmp
push
or
add
test
mov
call
dec
popa
loop
and
sbb
xchg
add
(bad)
cmp
xchg
mov
push
(bad)
cmp
pop
(bad)
sbb
add
sub
mov
(bad)
(bad)
(bad)
call
xchg
mov
enter
xchg
adc
mov
pop
shl
clc
jno
(bad)
(bad)
(bad)
in
test
scas
mov
xchg
or
add
ret
sub
pop
test
jmp
call
mov
cmp
icebp
in
add
imul
sub
imul
dec
pop
or
retf
pmaddwd
push
jo
cmp
jo
sar
and
call
call
ror
inc
adc
and
xchg
pop
cmp
inc
dec
in
leave
(bad)
(bad)
(bad)
(bad)
cli
ror
sub
retf
xchg
(bad)
sbb
in
dec
movs
(bad)
push
jecxz
repz
mov
dec
inc
xchg
(bad)
(bad)
(bad)
dec
in
push
in
push
ins
adc
(bad)
fs
ficomp
sub
loop
inc
fisubr
push
cld
inc
jge
dec
inc
int3
mov
inc
dec
call
cmps
(bad)
(bad)
(bad)
call
ret
add
rcl
push
iret
push
jo
dec
adc
fwait
popa
fisttp
icebp
cmp
arpl
mov
mov
(bad)
fcomip
(bad)
cmp
inc
sub
ins
mov
imul
xor
fwait
mov
scas
or
inc
add
jnp
sub
scas
xor
push
xor
push
mov
jo
(bad)
jno
(bad)
fcomip
call
mov
xor
(bad)
xchg
clc
out
sbb
add
scas
(bad)
dec
or
mov
pop
dec
jb
movs
cwde
adc
jmp
add
ret
sar
mov
shr
mov
movs
iret
addr16
add
fisub
add
inc
imul
xlat
push
cwde
cli
mov
call
push
loopne
outs
cmp
(bad)
mov
inc
xchg
pop
shl
sub
jne
lods
sbb
adc
inc
cld
(bad)
jmp
pop
add
mov
call
xchg
cdq
sub
fwait
repnz
call
ret
sub
jae
adc
xchg
ftst
pop
pop
add
rcr
retf
sbb
cmp
mov
xchg
mov
xchg
inc
hlt
add
adc
loope
push
clc
inc
ja
lods
ds
lods
mov
pop
mov
mov
push
and
out
(bad)
(bad)
(bad)
push
shl
xor
std
(bad)
(bad)
jmp
cs
jmp
or
inc
ud0
dec
data16
(bad)
pop
loope
fucomp
mov
repz
lahf
cmp
loop
mov
cmp
pop
lods
cmp
(bad)
call
pop
mov
into
xor
cdq
mov
adc
or
sbb
mov
mov
(bad)
(bad)
push
inc
div
jns
push
dec
call
imul
push
gs
cmovg
and
jb
mov
call
fs
xchg
or
xchg
cmp
fmul
ja
cmps
jle
or
(bad)
(bad)
inc
push
je
or
mov
pusha
cli
jns
lods
mov
das
xlat
ret
mov
inc
mov
(bad)
(bad)
inc
clc
push
mov
inc
loopne
mov
in
or
xlat
int
repnz
dec
inc
fs
xchg
call
cdq
mov
push
sbb
sbb
(bad)
cmp
into
or
inc
lahf
cs
mov
dec
mov
jae
sbb
(bad)
and
pop
or
popf
dec
jg
jmp
aaa
cmp
xchg
pop
das
pop
push
xchg
in
pushf
cld
std
lock
dec
(bad)
call
aas
add
jp
jge
cmps
cli
cmp
or
idiv
call
in
retf
mov
out
cmp
mov
sbb
ja
scas
test
adc
ror
call
inc
out
popf
call
sbb
jp
add
fs
inc
(bad)
mov
adc
cmc
std
mov
hlt
sbb
leave
mov
test
jl
cdq
(bad)
(bad)
(bad)
call
pop
mov
mov
jo
jg
fnstsw
pop
jns
adc
mov
jmp
pop
ror
(bad)
retf
in
bnd
and
(bad)
(bad)
(bad)
jmp
enter
mov
es
test
xchg
and
or
jl
repz
push
push
dec
shl
push
xchg
push
gs
cmp
mov
dec
loope
jmp
cdq
addr16
(bad)
(bad)
(bad)
(bad)
repz
cs
and
lea
pop
sbb
aas
ins
arpl
pushf
and
pop
loopne
add
js
(bad)
(bad)
jmp
or
sub
call
loop
and
mov
icebp
int3
fwait
mov
push
cwde
lahf
(bad)
(bad)
jmp
test
out
ins
fidiv
shl
jmp
jnp
aas
dec
dec
outs
cmps
pop
xchg
lock
clc
hlt
mov
pop
pop
cmp
jmp
or
movs
push
fwait
ds
out
add
(bad)
clc
mov
mov
jmp
enter
(bad)
inc
pop
cmp
jp
cmps
pop
sahf
push
out
mov
cwde
sti
jl
inc
xchg
popa
dec
cmp
icebp
nop
mov
shl
(bad)
(bad)
(bad)
mov
xlat
hlt
js
cs
ds
in
ds
cmp
(bad)
das
clc
outs
xchg
cmp
xchg
add
mov
fdiv
sti
(bad)
(bad)
jnp
dec
pop
jnp
pop
pcmpgtb
aad
push
loopne
or
(bad)
ret
adc
neg
xor
pop
icebp
stc
test
aam
mov
xchg
pop
lods
out
je
pop
add
in
jmp
mov
ret
mov
pop
adc
sub
(bad)
mov
ja
movs
stos
addr16
push
pop
shr
inc
enter
mov
sub
shl
(bad)
(bad)
jmp
xchg
arpl
into
fucomip
(bad)
ja
popa
fdiv
lods
xchg
mov
in
push
arpl
(bad)
(bad)
jg
movs
movs
push
and
lock
das
int
stos
dec
mul
mov
sub
(bad)
(bad)
(bad)
jmp
mov
cwde
jo
scas
or
shr
imul
aas
test
(bad)
(bad)
inc
ins
pop
jmp
push
je
inc
arpl
imul
call
in
(bad)
(bad)
(bad)
push
retf
and
shl
cmp
mov
add
jg
pop
add
mov
mov
pavgb
adc
jno
sub
push
xor
call
push
pop
(bad)
(bad)
inc
jmp
pop
jno
xchg
sub
push
jle
(bad)
pop
mov
lea
cmp
xor
xchg
enter
push
(bad)
(bad)
call
jne
inc
fnstcw
lahf
inc
mov
or
in
cmp
in
pop
test
hlt
call
aam
xchg
and
(bad)
push
out
out
push
aas
jge
and
dec
sub
add
add
push
ror
sbb
jp
mov
xchg
jnp
cmps
inc
jge
(bad)
jmp
je
aas
cmp
or
test
cmp
mov
(bad)
jmp
mov
mov
popf
pushf
bound
fwait
pop
packuswb
mov
mov
clc
add
sub
loopne
mov
mov
pop
arpl
jge
sbb
in
(bad)
(bad)
(bad)
mov
fwait
push
fdiv
adc
mov
scas
ins
iret
fistp
cmp
push
(bad)
(bad)
(bad)
dec
dec
inc
in
adc
je
shr
push
xchg
adc
shl
cmps
(bad)
(bad)
jmp
or
mov
lock
(bad)
ja
mov
sti
jns
adc
mov
aaa
cld
(bad)
call
push
fstp
imul
mov
rol
loope
push
xorps
jmp
cmps
(bad)
mov
sahf
add
jne
sbb
idiv
and
je
jno
adc
mov
neg
jmp
adc
cmps
mov
in
dec
mov
mov
loope
pop
ins
pop
mov
cmps
in
(bad)
(bad)
push
adc
lahf
add
ret
xor
adc
in
shl
mov
cmc
add
(bad)
(bad)
(bad)
push
add
or
dec
gs
add
xchg
imul
pop
xchg
mov
(bad)
(bad)
(bad)
push
jl
into
add
rcr
sub
jmp
xor
and
mov
out
in
js
(bad)
in
mov
sub
dec
ror
ss
movs
test
add
fistp
mov
(bad)
push
inc
jecxz
sbb
pop
mov
jmp
(bad)
or
cmps
xchg
movs
add
test
in
cmp
pop
pop
pop
mov
(bad)
xor
ficomp
fcomp
(bad)
(bad)
(bad)
push
aam
xor
pop
(bad)
cdq
bound
bound
dec
push
gs
push
push
ins
shl
(bad)
out
push
leave
fidivr
jae
pop
adc
retf
xchg
adc
sub
cld
push
jno
mov
std
(bad)
dec
sub
and
dec
cdq
stc
imul
pmaxsw
xor
pop
(bad)
(bad)
(bad)
inc
xlat
push
xchg
add
sti
ficom
out
jmp
mov
retf
int3
dec
popa
stc
dec
(bad)
(bad)
(bad)
(bad)
cmp
hlt
test
dec
inc
mov
loope
xchg
xchg
aaa
sbb
push
dec
inc
push
popf
mov
pushf
xchg
pop
cmp
(bad)
(bad)
push
xchg
jo
in
out
pop
shl
cdq
sti
scas
mov
push
mov
mov
add
(bad)
(bad)
fistp
and
lods
push
dec
jmp
cmp
das
enter
cmp
(bad)
(bad)
call
aam
sbb
ror
mov
leave
sbb
repnz
and
or
cmps
fwait
test
sbb
mov
clc
fs
cmp
(bad)
(bad)
(bad)
fmul
push
mov
inc
(bad)
rol
push
out
xlat
push
cmp
fwait
push
aam
xchg
je
pop
mov
(bad)
(bad)
inc
mov
inc
jo
fxch
mov
out
sub
jmp
test
inc
ret
in
ret
aaa
inc
(bad)
(bad)
push
mov
jno
sbb
adc
pop
in
fs
sbb
xor
xchg
mov
(bad)
(bad)
(bad)
call
mov
jmp
sub
cmp
mov
xchg
mov
mov
(bad)
(bad)
(bad)
call
stc
mov
jp
iret
mov
xor
stc
sahf
(bad)
jbe
repz
pop
retf
inc
std
call
in
ror
imul
sub
dec
or
imul
mov
mov
loope
cdq
loop
mov
daa
jae
loop
inc
cs
(bad)
(bad)
cmp
aam
in
idiv
mov
retf
add
and
aad
sbb
push
out
add
(bad)
(bad)
dec
cmp
or
inc
fistp
out
fistp
ret
mov
(bad)
(bad)
dec
dec
test
xlat
lods
xor
data16
jmp
cdq
xchg
icebp
jl
xchg
jbe
repz
pop
hlt
adc
imul
sbb
adc
or
mov
adc
(bad)
mov
push
out
push
leave
fldenv
std
mov
sub
jmp
cwde
xchg
adc
mov
adc
imul
(bad)
(bad)
jmp
mov
lock
clc
mov
push
movs
xchg
mov
lods
xchg
mov
cmp
jb
(bad)
(bad)
(bad)
mov
pop
mov
pop
in
xor
mov
jno
sbb
inc
cwde
xchg
mov
ins
(bad)
(bad)
(bad)
call
in
cmp
mov
retf
pop
in
scas
test
pop
and
hlt
xlat
sbb
imul
(bad)
(bad)
(bad)
(bad)
jmp
shl
inc
jns
xchg
cmps
outs
fs
sub
and
pop
or
icebp
das
adc
and
jb
and
aaa
mov
mov
mov
mov
inc
je
aam
or
aam
lods
xor
xchg
les
push
inc
inc
ret
mov
mul
sub
(bad)
push
iret
push
pop
push
add
cmp
out
in
std
or
and
fldcw
lea
aaa
std
(bad)
inc
dec
push
inc
dec
aaa
inc
lods
sbb
pop
xchg
out
xchg
hlt
in
rcr
das
mov
(bad)
(bad)
inc
adc
fist
das
leave
mov
test
inc
sahf
cmp
cmp
or
test
xor
lock
jl
mov
xor
inc
xchg
push
jne
aaa
cld
(bad)
(bad)
fnsave
add
fwait
or
cmp
and
and
dec
hlt
(bad)
(bad)
jmp
jne
outs
mov
mov
xchg
jno
xchg
mov
ret
and
xchg
les
jl
(bad)
call
jge
cdq
enter
cdq
xchg
in
jb
ja
mov
inc
call
test
(bad)
(bad)
(bad)
cmp
mov
push
cmp
mov
push
xchg
dec
sbb
data16
stos
(bad)
push
jge
xor
cli
inc
retf
mov
cmc
push
or
add
push
mov
fcomp
inc
mov
adc
fst
shl
inc
jge
push
outs
outs
outs
push
in
(bad)
outs
fs
xlat
stos
sub
(bad)
jg
aam
push
cwde
jge
scas
cli
jmp
movs
add
gs
(bad)
icebp
mov
inc
ret
mov
out
or
jg
in
adc
add
jle
sbb
nop
out
push
(bad)
xchg
push
and
lock
stc
inc
bound
xor
fs
cmc
rol
lahf
dec
push
dec
fld
dec
call
cld
call
push
or
push
add
xchg
fisub
dec
adc
cli
clc
and
and
cli
mov
push
ja
int3
mov
clc
movs
mov
repnz
sub
outs
jbe
mov
and
ret
dec
pop
mov
jg
dec
push
adc
or
inc
or
inc
pop
scas
outs
(bad)
(bad)
(bad)
call
pop
push
jbe
cmp
popa
movs
pop
push
ficomp
mov
fistp
(bad)
scas
mov
(bad)
(bad)
mov
sub
shr
push
jp
or
(bad)
mov
cmps
jne
cmc
ret
adc
neg
ss
xor
pop
pop
ins
lods
pop
mov
std
fidivr
(bad)
movs
(bad)
(bad)
push
sbb
out
mov
xchg
xchg
data16
retf
pop
sub
cmp
pop
dec
and
jo
stos
lea
cmp
(bad)
dec
inc
outs
mov
les
call
add
sub
stc
cmp
aad
add
daa
rcl
lahf
call
push
out
xchg
pusha
clc
sub
ficomp
lahf
das
cli
mov
mov
dec
push
mov
cdq
mov
dec
imul
inc
push
pusha
mov
pop
xchg
dec
call
aaa
ret
xchg
xor
push
push
dec
lods
pushf
adc
sbb
push
cmps
push
(bad)
(bad)
(bad)
call
bound
test
and
fadd
ins
cmp
mov
int3
pop
(bad)
ja
hlt
(bad)
mov
fwait
dec
xor
or
ret
loope
dec
cmp
cmps
outs
or
stos
call
mov
mov
loop
(bad)
(bad)
jg
pusha
jns
adc
mov
jns
ret
push
jbe
in
movs
cmps
mov
cmp
movs
aam
ficomp
in
xchg
(bad)
(bad)
(bad)
jmp
sbb
cmp
leave
(bad)
and
cmp
jo
xchg
in
mov
mov
das
shr
push
in
adc
adc
inc
enter
test
(bad)
inc
dec
and
(bad)
cwde
(bad)
push
aaa
pushf
jecxz
in
jle
inc
bound
adc
(bad)
(bad)
call
add
movs
push
jg
das
sub
sub
sub
xchg
xchg
jg
mov
mov
shl
xchg
cli
xor
push
scas
add
push
mov
sbb
jo
retf
(bad)
(bad)
push
fisubr
sub
bound
bound
movs
movs
mov
mov
fidivr
add
call
int3
movs
push
mov
into
sbb
repnz
cmc
mov
pusha
stc
sar
(bad)
(bad)
call
rcr
pop
jp
sbb
iret
fxam
mov
xchg
mov
loopne
sbb
es
rcr
inc
adc
(bad)
(bad)
(bad)
call
in
mov
push
mov
push
adc
bound
enter
(bad)
inc
push
mov
cmp
mov
jmp
fst
pushf
int
jae
(bad)
(bad)
jmp
dec
das
jne
jae
sti
sub
jmp
dec
ret
push
push
xchg
xchg
cmp
or
(bad)
call
xchg
(bad)
xchg
in
push
cmp
cwde
mov
jmp
mov
mov
(bad)
(bad)
call
mov
ins
sbb
mov
sbb
scas
pop
and
push
sti
cwde
cmc
cmp
rcl
int
(bad)
push
scas
sbb
pop
leave
sete
loopne
rcr
pop
mov
pushf
sbb
jecxz
mov
adc
(bad)
inc
xor
mov
xchg
xchg
mov
mov
xchg
or
add
inc
xlat
adc
outs
adc
or
xchg
les
popf
sub
push
mov
fdivr
(bad)
jmp
sub
inc
in
aas
ss
xchg
ins
inc
fsubr
mov
push
(bad)
or
cdq
lahf
cdq
xchg
test
je
xchg
xor
outs
repnz
dec
cmps
mov
and
cli
aad
mov
jle
dec
sub
cmp
(bad)
(bad)
inc
sar
cmp
jne
pop
(bad)
dec
sub
sbb
and
mov
(bad)
(bad)
push
mov
mov
mov
out
sar
clc
ret
rcl
aaa
jecxz
in
gs
mov
ds
(bad)
(bad)
call
cli
lods
clc
sbb
and
std
nop
pop
popf
mov
xchg
xchg
add
stos
loope
xor
icebp
data16
nop
loop
ret
std
sbb
adc
enter
rcl
jo
and
scas
cmp
movs
cmp
sbb
stos
(bad)
(bad)
call
mov
leave
inc
and
dec
mov
xor
xchg
fnstenv
sahf
shl
sub
inc
aam
cmp
xchg
adc
mov
lods
mov
mov
das
(bad)
jmp
sub
pusha
mov
out
xchg
sbb
dec
dec
retf
push
xchg
xchg
js
fwait
(bad)
jmp
(bad)
aaa
(bad)
xlat
adc
mov
cs
sahf
lea
loop
out
jbe
(bad)
(bad)
(bad)
dec
adc
(bad)
cmp
dec
in
inc
cwde
mov
ret
adc
(bad)
mov
ins
mov
test
adc
push
xchg
dec
xchg
adc
push
dec
and
gs
(bad)
call
push
jbe
ss
cmp
rcr
ins
mov
fbld
pusha
vmaxsd
jb
sub
dec
inc
js
sub
(bad)
call
push
sbb
and
cmp
jno
jno
std
cmp
mov
fstp
(bad)
mov
mov
fdivp
(bad)
cli
inc
add
not
mov
cli
sar
xor
(bad)
(bad)
jmp
sub
shl
push
dec
icebp
mov
adc
(bad)
(bad)
cld
jl
pop
cld
and
in
jmp
sbb
sbb
bound
add
clc
(bad)
(bad)
jmp
retf
les
out
adc
loop
xchg
aaa
lods
xchg
fld
das
sar
nop
jb
sub
test
lods
push
mov
xor
(bad)
fcomip
mov
loop
sbb
je
ret
ret
adc
jp
retf
mov
xor
test
(bad)
(bad)
(bad)
jg
push
mov
xchg
test
inc
and
jb
int3
or
add
bound
jg
or
dec
(bad)
sub
test
cmc
aad
jle
in
lods
push
push
pop
adc
push
ret
fisttp
(bad)
(bad)
(bad)
(bad)
call
xchg
out
mov
mov
hlt
mov
jecxz
lock
shl
mov
(bad)
jmp
clc
loope
sbb
or
adc
int3
cmp
mov
neg
(bad)
fsub
mov
popa
jp
dec
cmps
pop
mov
rcr
jbe
cdq
mov
mov
push
bound
push
inc
cmp
dec
jmp
jbe
cmp
push
(bad)
scas
not
inc
lock
mov
mov
stos
jmp
test
scas
mov
mov
adc
in
pop
in
pop
shl
sub
dec
cmp
add
jecxz
outs
sub
inc
pusha
cmc
xchg
repz
int3
(bad)
(bad)
call
ins
cdq
add
push
jns
sub
pop
not
(bad)
in
push
neg
stos
add
js
and
call
int
mov
test
popf
out
fisubr
imul
fwait
mov
cs
mov
pop
pop
push
push
les
mov
retf
scas
sbb
dec
push
pop
push
gs
sub
shr
dec
dec
movs
ror
add
stos
adc
imul
xchg
lods
ds
xchg
xor
adc
call
mov
(bad)
int
xor
stc
and
jo
sar
mov
les
std
(bad)
dec
pop
dec
mov
icebp
pop
ja
or
mov
mov
imul
inc
icebp
scas
cmp
retf
jmp
jp
jp
sbb
xchg
stos
pushf
call
(bad)
(bad)
(bad)
call
mov
mov
test
adc
inc
adc
popa
frstpm(287
loope
rcr
sahf
ficomp
jg
push
movs
cmps
out
sub
mov
jg
or
push
jmp
push
mov
movs
aad
jo
cmps
mov
mov
(bad)
mov
mov
retf
push
push
iret
add
stos
movs
addr16
movs
dec
push
loopne
das
cli
add
lahf
daa
repz
sub
lock
add
sbb
test
(bad)
(bad)
mov
mov
and
stos
mov
jno
fnstcw
scas
xor
arpl
xchg
(bad)
(bad)
jmp
js
mov
lock
(bad)
sub
lods
fcom
ret
pop
pushf
and
push
movs
pop
sbb
jmp
jo
and
sahf
xlat
sub
mov
jg
cwde
(bad)
pop
inc
pop
ret
adc
adc
(bad)
xchg
xchg
stos
int
mov
(bad)
(bad)
push
dec
and
pop
dec
or
rcl
in
loopne
ret
imul
push
xlat
jb
jns
(bad)
(bad)
jmp
pop
fst
xchg
arpl
inc
stos
mov
int3
fnsave
int3
adc
nop
out
inc
test
(bad)
(bad)
(bad)
jmp
daa
xor
arpl
xchg
pop
(bad)
xor
fcom
and
jle
mov
xchg
mov
(bad)
cmp
in
pushf
mov
push
push
adc
pop
into
mov
mov
inc
add
pop
ud0
hlt
call
stos
add
adc
pop
and
xlat
add
mov
mov
add
popa
push
sub
fldenv
inc
inc
(bad)
mov
inc
popa
js
cmc
mov
ret
cld
movs
inc
add
cmp
(bad)
(bad)
(bad)
jmp
cli
inc
js
dec
push
int
jno
bound
mov
mov
push
push
xor
push
sar
dec
jmp
mov
adc
push
fsub
and
movs
je
(bad)
(bad)
mov
dec
add
or
add
loop
pop
mov
call
ins
add
dec
add
into
xchg
mov
arpl
mov
dec
mov
call
sbb
xor
enter
inc
mov
mov
int3
sahf
fistp
push
mov
add
(bad)
(bad)
(bad)
call
mov
movs
or
pop
jae
and
push
retf
mov
test
mov
sub
call
xchg
or
cwde
les
jmp
daa
xchg
adc
pushf
call
(bad)
(bad)
cmp
jp
(bad)
stc
jl
gs
cmp
mov
push
mov
sub
fwait
push
std
sbb
bound
loopne
push
xor
xchg
dec
inc
push
shr
(bad)
(bad)
(bad)
(bad)
jmp
rcr
adc
mov
mov
xchg
xchg
jmp
dec
jae
jg
(bad)
test
dec
shl
or
xchg
dec
mov
(bad)
(bad)
(bad)
mov
push
lock
jo
cmp
scas
pop
push
cmp
sub
mov
sub
jne
sub
push
retf
inc
ins
inc
cmc
in
fstp
cmp
(bad)
(bad)
inc
push
add
loope
mov
xchg
inc
dec
shr
out
dec
sti
inc
test
push
xor
xchg
adc
inc
push
or
sub
push
mov
lock
adc
and
dec
(bad)
(bad)
jmp
retf
adc
or
jb
sub
rol
dec
jae
adc
(bad)
(bad)
(bad)
call
out
mov
jecxz
push
inc
xor
movs
xor
fwait
or
jb
sbb
mov
mov
sbb
cmps
push
je
mov
push
push
out
rcl
ret
in
jno
mov
clc
mov
xchg
dec
loope
mov
sub
pop
int3
rcl
out
cli
pop
std
xlat
aad
inc
call
clc
or
addr16
(bad)
(bad)
dec
cmc
shl
mov
sbb
cmp
mov
nop
inc
jo
add
jnp
out
ret
pushf
push
call
dec
shl
mov
jo
mov
retf
pop
jo
ins
leave
out
(bad)
(bad)
(bad)
jmp
mov
shr
je
div
addr16
stos
sbb
js
dec
push
out
jnp
dec
dec
cdq
cmp
(bad)
clc
push
add
xor
xor
add
cdq
fwait
push
adc
aam
imul
jne
(bad)
jmp
pop
adc
cdq
sar
xor
adc
loop
out
xchg
sub
push
mov
into
dec
nop
mov
jno
cmp
sbb
daa
cmp
je
out
je
adc
cmc
(bad)
(bad)
(bad)
call
in
int
push
cmp
fcom
dec
cwde
inc
ror
adc
and
inc
bound
std
(bad)
inc
outs
lods
int3
xor
jmp
rcl
ss
aad
aad
jnp
test
or
(bad)
(bad)
call
push
inc
cmp
fidivr
mov
pop
push
push
dec
cmp
dec
sub
xchg
idiv
inc
mov
cmc
dec
jne
rol
mov
sub
cmp
mov
(bad)
fbstp
mov
adc
add
dec
dec
push
mov
dec
(bad)
(bad)
(bad)
jmp
cmp
lahf
mov
cdq
xchg
push
sub
dec
sub
bound
ss
(bad)
(bad)
ds
mov
sbb
jae
lock
mov
pop
push
repz
adc
add
(bad)
(bad)
inc
lea
adc
stos
popf
mov
xchg
pop
jge
sar
int
mov
in
xchg
ds
jle
ret
sub
nop
sbb
call
mov
adc
stc
inc
pop
pop
stos
add
mov
mov
(bad)
cld
stos
(bad)
(bad)
inc
in
(bad)
fbld
mov
lahf
pop
jbe
in
ins
retf
push
sub
inc
sbb
mov
lods
ja
mov
(bad)
(bad)
call
cmp
ss
push
shr
xchg
push
test
or
mov
(bad)
jmp
pop
mov
pop
das
mov
push
ja
mov
test
daa
xlat
cli
outs
sbb
sar
jl
mov
push
jmp
out
cmc
jp
inc
cmp
inc
fdiv
loope
(bad)
inc
(bad)
sub
fiadd
pop
pop
pop
mov
xor
pop
sbb
push
cmp
(bad)
mov
push
mov
in
daa
(bad)
retf
fadd
lods
cmps
fnstsw
loop
aaa
mov
mov
xchg
nop
rcr
push
add
inc
mov
outs
cli
push
js
adc
imul
repz
sbb
(bad)
cmp
aaa
mov
(bad)
mov
sbb
out
fisubr
adc
sbb
repnz
add
xlat
cmps
js
popf
aaa
imul
loope
(bad)
inc
aaa
out
iret
fldlg2
(bad)
sbb
and
or
push
or
stos
test
sahf
popa
pop
add
test
xchg
xchg
xchg
add
jmp
push
dec
jle
jae
rcr
in
(bad)
push
int3
jnp
pop
out
(bad)
(bad)
jg
fwait
mov
imul
jnp
mov
ret
cmps
or
jno
ret
aaa
mov
sbb
xchg
mov
rol
sbb
mov
mov
mov
test
xor
je
xchg
mov
cmp
jecxz
test
sub
(bad)
(bad)
push
jecxz
out
jp
mov
loope
fisttp
add
sub
hlt
rcl
test
fstp
(bad)
(bad)
mov
je
xor
xchg
xor
dec
in
test
mov
add
retf
sbb
sub
sti
cmp
cmp
jne
push
loope
xchg
adc
call
lods
pop
push
mov
outs
push
sti
mov
and
ins
inc
mov
sbb
shr
jmp
jmp
or
loop
ja
sub
in
adc
enter
pop
jnp
out
clc
call
scas
xor
jmp
les
add
add
shl
(bad)
fbld
inc
push
js
shl
mov
jmp
(bad)
pop
ja
clc
dec
or
and
push
xor
xchg
inc
sbb
mov
div
xchg
sub
cmps
scas
(bad)
push
in
xchg
stos
stos
cli
adc
pop
div
in
test
mov
arpl
(bad)
jg
inc
add
mov
pop
xor
adc
cmc
pushf
jbe
jp
or
test
pop
sub
(bad)
neg
movs
and
xchg
sub
(bad)
(bad)
aas
push
test
jle
push
in
je
xchg
mov
int3
fistp
adc
int
(bad)
(bad)
(bad)
push
add
daa
adc
ja
fdivr
iret
or
pop
add
mov
pop
cmp
ds
lods
cmp
out
jnp
xadd
(bad)
(bad)
ds
addr16
cli
pop
daa
(bad)
fwait
jns
ret
icebp
loop
jne
outs
mov
std
(bad)
(bad)
jmp
es
sub
in
call
ins
xchg
mov
sahf
sbb
mov
das
xor
cmp
dec
inc
movs
push
jns
adc
ficomp
dec
jmp
pop
xlat
jecxz
popa
(bad)
(bad)
(bad)
dec
movs
stos
rol
aas
xor
retf
aas
and
imul
(bad)
dec
bswap
jle
jno
lods
mov
cmp
sbb
push
pop
rcr
fs
rcl
(bad)
jg
and
or
mov
out
sub
cmp
in
adc
sbb
jmp
push
dec
(bad)
clc
imul
sbb
dec
fwait
cdq
and
data16
call
dec
dec
bound
mov
dec
jnp
push
repnz
jmp
loope
mov
fwait
scas
mov
mov
sub
test
iret
sbb
outs
xchg
jg
dec
fs
das
mov
(bad)
(bad)
(bad)
dec
ja
and
jno
pop
sahf
pop
fwait
call
ret
cmp
lds
pop
stos
inc
lock
push
neg
jo
jbe
div
pop
sbb
cdq
xor
call
into
xchg
mov
sub
sub
stc
xor
(bad)
dec
leave
jmp
xchg
inc
lds
mov
mov
(bad)
push
pop
setno
ror
outs
xor
int
and
loop
imul
mov
(bad)
call
sbb
inc
or
cdq
xchg
fild
cdq
test
push
adc
in
lea
ins
cdq
jmp
cmp
pushf
push
jp
mov
into
and
(bad)
inc
les
jo
popf
pop
push
xor
frstpm(287
fabs
aas
psubb
ret
shl
and
(bad)
(bad)
jmp
pop
pop
mov
repnz
nop
inc
mov
movs
adc
daa
cmp
inc
inc
les
dec
inc
(bad)
(bad)
(bad)
(bad)
std
icebp
add
add
rcr
(bad)
fstp
fwait
xor
xor
and
fs
(bad)
(bad)
push
cmp
je
sti
xchg
gs
iret
push
movs
fst
gs
inc
inc
inc
add
mov
(bad)
(bad)
jmp
retf
cmp
leave
or
int3
add
push
push
dec
cmp
call
fcom
(bad)
(bad)
(bad)
call
stos
sbb
lods
xor
jp
nop
pop
xchg
adc
sahf
xchg
sbb
outs
(bad)
pusha
cmps
arpl
push
jno
test
add
push
pop
fisub
jl
pop
mov
(bad)
jg
call
call
jmp
cmps
adc
and
mov
(bad)
iret
ja
inc
cmp
sbb
pop
nop
adc
test
sti
and
movs
push
add
test
call
(bad)
fcmovbe
cs
ds
ror
scas
jmpw
ins
sbb
(bad)
(bad)
jmp
jbe
aad
pop
call
or
mov
push
push
inc
fcomp
ret
shl
mov
jo
xor
std
les
cmp
sti
(bad)
(bad)
call
cmps
rcl
or
or
gs
mov
or
lea
sub
(bad)
fcomi
psrlq
(bad)
in
mov
(bad)
rcr
leave
push
es
inc
aas
cdq
push
call
sar
enter
jg
pop
lods
xchg
cmps
into
ret
or
das
sub
sub
aaa
dec
xchg
fnstcw
jle
cmp
xchg
leave
jae
stc
dec
jo
adc
pushf
dec
jo
shl
pop
xchg
xor
aas
push
dec
pop
clc
aaa
std
iret
jg
jb
cdq
xchg
xchg
(bad)
cmp
add
dec
cdq
or
push
sub
push
out
(bad)
jp
hlt
mov
fwait
(bad)
jg
xor
daa
pop
in
ss
mov
xchg
(bad)
(bad)
in
inc
aam
jnp
test
push
fdivr
test
in
ret
jb
mov
xor
lods
(bad)
aas
aaa
hlt
pop
sbb
jl
loop
cmp
call
jbe
pop
pop
cld
(bad)
(bad)
xlat
movs
cmp
inc
shr
xchg
inc
(bad)
(bad)
(bad)
dec
pushf
cdq
in
or
mov
adc
lahf
mov
int
fnstsw
mov
daa
cmps
cdq
ss
(bad)
(bad)
dec
cs
dec
sub
in
pop
jle
xchg
repnz
into
(bad)
scas
and
sub
fcomip
pop
push
test
or
fcomp
mov
adc
jo
pusha
fmul
(bad)
(bad)
push
sbb
ins
in
iret
adc
call
push
int
leave
les
gs
(bad)
(bad)
call
jae
push
jmp
rol
shl
out
sub
adc
jl
(bad)
(bad)
(bad)
push
cmp
mov
push
mov
nop
test
movs
xlat
ret
lods
sbb
les
xchg
loop
(bad)
(bad)
(bad)
out
sbb
inc
xchg
je
sar
inc
push
dec
out
dec
test
jns
(bad)
(bad)
dec
inc
cli
js
adc
and
jge
call
push
pusha
sbb
(bad)
(bad)
jge
cli
xchg
addr16
dec
xchg
dec
les
ds
cmp
shl
movs
in
and
add
pop
sahf
push
je
add
adc
cli
fld
inc
(bad)
(bad)
(bad)
dec
pop
nop
mov
xor
mov
out
mov
mov
dec
push
(bad)
iret
(bad)
(bad)
fist
outs
sub
push
mov
mov
(bad)
loope
shl
call
icebp
push
jmp
sbb
mov
test
out
jg
or
(bad)
push
inc
pushf
inc
lahf
mov
jecxz
repz
loopne
out
setl
addr16
idiv
stos
pop
cmp
jl
cmp
mov
ret
out
std
jg
in
sbb
mov
adc
and
fucomp
std
push
cs
stc
rol
std
neg
fwait
mov
pop
jnp
push
mov
push
inc
xchg
pop
int3
call
add
out
push
xor
(bad)
(bad)
jmp
or
js
jg
cwde
lock
aaa
mul
test
jg
ret
jo
inc
jbe
clc
idiv
mov
push
xchg
out
adc
and
in
aam
mov
add
int3
and
add
cmps
pop
xor
pop
scas
inc
imul
pop
loopne
or
into
xchg
mov
cmps
(bad)
das
clc
mov
jns
setne
in
pop
scas
push
push
xchg
enter
push
add
mov
daa
(bad)
(bad)
(bad)
call
aas
arpl
xlat
dec
push
adc
push
fstp
jmp
push
call
push
add
adc
bts
pusha
arpl
xchg
xor
(bad)
(bad)
call
dec
mov
popa
cmp
push
lock
fild
push
mov
add
mov
cwde
lds
leave
(bad)
adc
mov
sti
ja
jp
les
mov
push
inc
or
dec
add
mov
mov
in
test
mov
xlat
mov
bound
xorps
mov
hlt
fnstcw
movs
inc
nop
inc
jl
popa
iret
stos
call
xchg
loope
neg
xchg
cld
dec
(bad)
jmp
(bad)
jno
lahf
sub
dec
lock
pop
fs
and
sub
call
pop
aam
push
cmp
sub
xor
outs
sub
or
mov
mov
jne
jnp
and
shr
scas
mov
mov
(bad)
(bad)
cmp
lods
cmp
ja
cld
xor
dec
sar
mov
or
(bad)
(bad)
push
mov
outs
aaa
jl
call
sub
mov
xchg
scas
call
dec
mov
jmp
cmc
xor
fcmove
sub
(bad)
mov
mov
cli
(bad)
jbe
fld
push
pop
int
(bad)
push
pop
dec
jl
sub
jecxz
out
(bad)
jge
scas
into
(bad)
mov
inc
or
(bad)
(bad)
jmp
push
mov
xchg
sti
fimul
fstp
inc
inc
mov
jge
shr
neg
arpl
sahf
mov
mov
jnp
retf
push
movs
(bad)
(bad)
in
push
jecxz
test
jl
rcl
dec
push
sti
cmp
daa
in
mov
cmp
out
(bad)
(bad)
push
test
xchg
in
mov
lds
sub
out
mov
arpl
pusha
mov
jns
nop
add
(bad)
jmp
es
retf
loop
jp
mov
fbstp
cmp
call
push
stc
and
xchg
mov
push
cmp
cmps
enter
xor
imul
(bad)
push
iret
cmp
sub
pop
retf
mov
dec
fwait
mov
xor
push
lea
out
xlat
mov
loop
outs
(bad)
cmps
std
and
frstor
imul
shl
movs
mov
mov
inc
(bad)
xchg
(bad)
xchg
repz
cld
push
jg
mov
push
mov
jecxz
ins
adc
xchg
div
mov
cmp
(bad)
jg
iret
dec
in
shr
pop
loop
cmp
icebp
out
cmp
pop
jmp
hlt
push
add
movs
sbb
outs
rcr
mov
ficom
jb
outs
in
add
outs
(bad)
(bad)
call
paddusw
idiv
std
mov
pop
ret
xor
xchg
leave
jmp
jmp
add
sbb
scas
and
sbb
das
jns
(bad)
(bad)
(bad)
mov
icebp
and
(bad)
pop
test
mov
call
mov
jmp
test
jp
(bad)
(bad)
dec
jp
and
movs
in
and
pop
add
jb
adc
out
in
dec
movs
fidiv
(bad)
push
(bad)
inc
cmp
ficom
sbb
add
in
jl
std
jmp
(bad)
(bad)
out
pop
ret
or
fsubr
dec
inc
in
(bad)
leave
xchg
or
cmp
dec
sub
push
retf
(bad)
dec
sub
leave
push
pop
and
loopne
dec
cmc
ja
imul
loop
mov
sub
lock
(bad)
inc
sahf
outs
int
mov
fsubrp
sbb
adc
jle
ret
cdq
sahf
mov
xchg
sub
pop
(bad)
mov
cmp
mov
(bad)
(bad)
fucomip
fcmovbe
dec
cmp
mov
xor
lock
outs
pop
push
js
arpl
call
repnz
mov
or
jne
aas
mov
ds
push
mov
out
push
xchg
ins
xchg
lea
push
iret
sub
cmp
jae
mov
push
lock
in
sub
(bad)
(bad)
(bad)
mov
cmp
jns
mov
and
mov
mov
(bad)
jnp
(bad)
(bad)
(bad)
inc
div
push
push
in
push
imul
sub
fld
jnp
gs
int
pop
(bad)
xlat
lods
loopne
sar
lods
popf
in
inc
add
xor
in
adc
(bad)
jg
cmp
cli
dec
bound
stc
stc
in
and
loope
(bad)
(bad)
fninit
out
sub
imul
shl
mov
fdivr
(bad)
(bad)
jmp
inc
pop
pop
mov
ret
das
cwde
add
rcl
ja
mov
inc
and
xchg
or
getsec
iret
iret
jg
mov
rcl
ja
pop
inc
dec
test
jg
(bad)
sub
sbb
test
aas
pop
xor
pop
aam
push
adc
(bad)
(bad)
clc
cmc
repz
push
jno
mov
pop
in
xchg
or
inc
(bad)
dec
movs
pop
es
mov
mov
jmp
jmp
pop
sbb
(bad)
(bad)
call
outs
(bad)
mov
pop
bound
jmp
xchg
push
daa
and
nop
and
push
mov
adc
lods
push
xchg
(bad)
frstor
bound
daa
(bad)
(bad)
push
scas
test
sub
repnz
mov
sub
into
or
(bad)
(bad)
(bad)
(bad)
in
push
fld
stos
sub
dec
scas
scas
jb
scas
test
xchg
(bad)
out
push
xor
inc
sbb
adc
repnz
xchg
test
stc
jae
add
sub
jmp
(bad)
adc
or
inc
mov
mov
mov
push
rcl
bound
mov
cmps
mov
cmp
pop
and
inc
pop
(bad)
(bad)
(bad)
fucomip
sahf
mov
sub
or
imul
cmp
sbb
inc
outs
cmp
push
stc
test
iret
imul
bnd
lods
out
push
adc
pop
adc
std
(bad)
call
inc
sub
add
ins
mov
pop
stos
xlat
out
cli
jb
add
mov
inc
and
icebp
push
cmp
lods
or
sbb
lods
dec
pop
adc
cmps
pusha
out
sub
call
inc
push
jne
mov
cmp
(bad)
pop
mov
add
sbb
(bad)
dec
test
mov
enter
test
(bad)
pop
shr
sub
(bad)
(bad)
(bad)
push
loopne
out
jb
mov
mov
and
popf
and
push
xor
retf
and
mov
(bad)
(bad)
push
and
and
add
inc
cmp
not
gs
push
ins
(bad)
adc
(bad)
out
clc
push
xchg
xor
jno
pop
sub
jl
scas
cmp
loopne
(bad)
(bad)
out
nop
icebp
xor
cwde
push
ficom
xor
data16
dec
push
stos
and
mov
fwait
dec
icebp
mov
mov
(bad)
(bad)
jg
inc
int
push
xchg
repnz
daa
and
jnp
xlat
mov
dec
loope
xor
xor
(bad)
(bad)
call
xchg
cwde
or
lfs
inc
and
dec
pop
jmp
lods
xchg
dec
dec
retf
add
jp
leave
cmc
pop
(bad)
(bad)
(bad)
call
cwde
mov
or
ret
aad
pop
sbb
and
retf
add
fisub
(bad)
push
std
lds
cwde
mov
pop
(bad)
or
dec
fs
popa
mov
push
mov
aad
(bad)
(bad)
(bad)
mov
(bad)
outs
scas
cmp
adc
xchg
add
in
jnp
pop
(bad)
stos
(bad)
(bad)
mov
mov
fst
mov
push
mov
or
dec
sbb
(bad)
(bad)
(bad)
in
push
stc
push
cmp
fwait
sub
mov
or
mov
add
xor
sub
outs
sbb
mov
xchg
pop
jbe
and
inc
fcmovnu
jl
in
mov
xchg
push
pop
dec
or
loopne
inc
pop
hlt
(bad)
call
cmps
dec
ins
xchg
inc
sbb
xor
cmp
xor
or
(bad)
(bad)
in
iret
sub
dec
loope
mov
xor
jne
test
stos
add
(bad)
fcmovu
sbb
stos
push
imul
loopne
setl
rol
mov
add
or
and
cmc
push
adc
fs
sub
out
jno
mov
and
add
inc
(bad)
mov
or
dec
fs
cli
mov
push
std
outs
push
loop
(bad)
(bad)
inc
ds
(bad)
adc
xor
cmps
or
and
add
mov
xor
push
cld
(bad)
jmp
xchg
cld
push
(bad)
xchg
jb
test
inc
inc
pop
add
push
ja
pop
inc
ror
mov
pop
lock
dec
stos
xchg
enter
or
adc
pop
xchg
inc
inc
jns
adc
adc
test
mov
adc
lods
inc
stos
and
stos
inc
xor
dec
in
sbb
test
jmp
int
(bad)
mov
or
js
xor
loopne
call
adc
stos
clc
jmp
sub
dec
inc
xor
fadd
mov
rcr
sub
out
(bad)
(bad)
inc
mov
ds
mov
test
mov
outs
(bad)
(bad)
(bad)
(bad)
jmp
mov
scas
cdq
mov
inc
push
jne
sbb
push
pop
sbb
cs
sub
(bad)
(bad)
(bad)
jmp
rol
rol
cli
mov
mov
add
into
xor
aas
pop
cwde
lahf
stos
cmps
pushf
mov
call
or
mov
nop
ins
mov
mov
sbb
cmp
jecxz
popa
and
jo
sub
dec
push
les
jmp
clc
push
pop
(bad)
ins
fild
xor
sahf
fmul
je
inc
enter
jecxz
sub
xchg
mov
jecxz
push
jb
mov
inc
sub
inc
mov
inc
inc
mov
and
nop
and
jl
outs
cmp
pop
cmp
ja
inc
or
ret
jmp
test
push
push
push
mov
fild
and
das
sub
adc
(bad)
mov
dec
fs
and
iret
out
inc
jl
stc
cmps
in
mov
(bad)
xchg
xchg
out
(bad)
xlat
and
ins
and
or
into
sbb
ds
repz
int
mov
repnz
scas
call
(bad)
mov
outs
ds
mov
or
iret
outs
push
hlt
(bad)
jg
(bad)
(bad)
jbe
push
scas
imul
(bad)
out
and
test
push
mov
sbb
cmp
lock
mov
mov
xor
out
pop
fucomip
mov
int
push
in
fisttp
or
mov
retf
int3
pop
sti
push
clc
sub
shr
jo
(bad)
call
mov
call
push
ins
cmp
push
dec
outs
adc
aaa
jb
fmul
add
dec
jne
frstor
repnz
(bad)
out
ret
cmp
mov
push
jns
(bad)
(bad)
call
not
retf
jbe
shl
xor
cmc
ficomp
jmp
xor
fisttp
mov
mov
and
add
pop
ins
stc
nop
int
leave
jecxz
(bad)
(bad)
(bad)
dec
dec
ret
jle
push
xor
mov
cld
pop
jnp
movs
sub
test
add
loopne
dec
xchg
mov
add
inc
inc
mov
xor
sub
cs
jp
adc
fcomip
ret
cld
pop
cli
shl
pusha
fcos
(bad)
jmp
or
cs
jl
sbb
add
sbb
jns
pop
mov
cmc
cli
mov
(bad)
jmp
and
mov
shl
mov
or
push
push
cmc
cmp
aas
in
mov
cli
(bad)
(bad)
inc
xchg
push
mov
jg
add
pushf
mov
nop
fwait
sar
(bad)
out
push
push
adc
out
xlat
pop
pop
lods
lock
push
push
outs
jae
mov
fwait
mov
in
mov
or
pop
sbb
mov
mov
repz
mov
in
mov
mov
mov
js
add
imul
stos
xchg
fcomp
(bad)
(bad)
(bad)
push
cmc
(bad)
rcr
cld
sub
xchg
jno
test
sbb
mov
(bad)
call
sbb
hlt
ins
call
movs
mov
sahf
ds
sbb
nop
popf
sbb
mov
jmp
add
repz
mov
stos
xor
js
dec
call
loop
push
fcomi
aaa
mov
pop
(bad)
retf
stos
stc
sar
fisub
(bad)
or
clc
les
or
lock
(bad)
call
mov
push
in
jl
dec
pop
inc
cdq
xchg
out
or
cmc
call
(bad)
(bad)
mov
out
gs
hlt
cmps
and
inc
retf
pusha
out
sub
cld
cmp
hlt
mov
mov
das
nop
(bad)
out
xor
outs
stos
dec
jge
push
sbb
outs
pop
icebp
(bad)
call
xchg
outs
sbb
(bad)
fistp
inc
neg
inc
ret
mov
(bad)
push
or
ja
jle
sbb
bound
leave
mov
inc
dec
dec
pop
scas
sbb
arpl
cld
(bad)
(bad)
jnp
xlat
shl
jge
xchg
sbb
inc
dec
ror
cmp
sub
fdivr
(bad)
dec
mov
fnstsw
cmp
push
sbb
out
mov
xchg
push
movs
sbb
xchg
imul
retf
js
xor
(bad)
and
(bad)
popa
(bad)
or
sbb
ffreep
ss
cmps
sbb
mov
das
pop
scas
dec
pop
and
cmp
cmp
mov
and
push
push
adc
sahf
shr
push
push
or
mov
and
sar
cmp
loope
(bad)
push
and
bound
push
idiv
push
out
pop
int3
pop
dec
jmp
test
js
mov
jmp
push
jp
(bad)
jne
js
pop
mov
sti
idiv
or
test
pop
test
mov
fidivr
les
dec
push
dec
hlt
adc
jnp
mov
aad
push
rol
data16
(bad)
(bad)
inc
out
in
sbb
aad
gs
into
adc
xor
add
(bad)
inc
pop
adc
mov
cs
fidiv
jge
cmps
inc
and
icebp
adc
fimul
mov
imul
clc
cmps
mov
sub
push
dec
(bad)
fstp
add
inc
rcl
out
rcl
jbe
jo
cmp
clc
fdivr
std
je
xchg
lock
(bad)
call
jl
test
pop
bnd
ss
test
mov
cmp
(bad)
mov
jp
lahf
or
in
popf
dec
add
cmc
test
mov
dec
test
xchg
push
jl
sar
(bad)
rcl
jp
in
(bad)
sub
fincstp
push
fisttp
sub
scas
out
pop
jecxz
dec
cmp
ins
fdiv
jmp
(bad)
mov
out
add
mov
test
das
clc
jmp
inc
fistp
push
mov
xchg
rcl
(bad)
push
dec
cld
mov
mov
dec
repnz
loope
imul
push
jmp
or
adc
outs
mov
cmp
(bad)
(bad)
cmp
movs
xchg
push
xchg
retf
movs
fwait
or
jae
pop
or
out
xlat
xchg
pop
xor
add
sbb
arpl
in
(bad)
xchg
adc
xchg
sbb
push
popf
pop
mov
(bad)
leave
(bad)
(bad)
mov
jmp
(bad)
push
rcr
jle
and
pop
xchg
sbb
xchg
outs
(bad)
(bad)
(bad)
call
jo
adc
jo
std
cmp
or
jmp
out
jl
repnz
cdq
xchg
cmp
push
xchg
mov
or
(bad)
inc
inc
fbstp
sub
adc
xor
mov
enter
inc
jmp
mov
and
lods
xchg
hlt
mov
pop
aam
call
inc
icebp
dec
pop
xor
xor
daa
pop
inc
xchg
mov
inc
or
or
cld
(bad)
(bad)
jmp
cmp
call
or
daa
sub
cwde
adc
add
aad
call
xchg
aas
test
mov
and
push
xor
ret
cli
(bad)
(bad)
call
out
(bad)
fdivp
movs
mov
ror
cmp
add
ret
popf
dec
dec
fistp
adc
dec
fmul
cmp
and
xor
outs
dec
adc
inc
add
test
pop
cmp
push
and
popa
adc
xor
lds
(bad)
mov
cwde
cmp
ds
mov
jb
in
repnz
hlt
popf
jmp
cli
call
mov
(bad)
push
addr16
dec
stos
outs
add
data16
das
mov
(bad)
mov
js
mov
xlat
add
movs
repz
outs
daa
js
mov
stc
mov
sbb
(bad)
(bad)
push
ds
mov
outs
jns
adc
(bad)
scas
cmp
mov
adc
or
(bad)
jmp
and
rol
xchg
jle
fisub
(bad)
jmp
(bad)
(bad)
(bad)
call
xchg
mov
(bad)
fisubr
leave
jmp
test
adc
xor
(bad)
mov
jb
cmp
loopne
retf
cmps
sub
or
mov
mov
loop
push
sub
mov
adc
(bad)
(bad)
(bad)
dec
mov
cs
jp
aad
dec
mov
sub
cwde
iret
cmovno
movs
mov
adc
sar
jmp
xchg
retf
retf
mov
fnstcw
popa
cwde
or
scas
inc
fcomi
idiv
mov
call
in
pop
mov
movs
shl
shl
dec
xor
sbb
(bad)
fld
dec
add
outs
mov
ds
aam
cdq
adc
add
pop
in
jbe
inc
add
(bad)
call
mov
into
cmp
mov
xor
dec
call
sbb
shr
push
add
fisttp
(bad)
(bad)
mov
push
mov
dec
xchg
cmp
adc
mov
fild
daa
imul
(bad)
(bad)
out
test
and
aaa
pop
push
pusha
xchg
out
ret
fisttp
retf
arpl
(bad)
(bad)
inc
scas
inc
in
xchg
xchg
mov
add
loope
sbb
pusha
out
test
mov
pop
inc
sub
xor
and
rol
xchg
lock
stos
push
data16
lahf
mov
lahf
xor
jb
lods
push
test
addr16
cld
js
(bad)
(bad)
(bad)
dec
jp
fisttp
fs
mov
(bad)
imul
mov
int
sub
mov
lea
aad
adc
outs
sub
jl
sar
push
das
mov
cwde
mov
std
int
jbe
mov
ja
pop
call
pop
push
adc
sub
out
push
mov
push
shl
sbb
(bad)
(bad)
jg
popa
inc
into
sub
stc
pop
mov
mov
xchg
lds
in
stc
(bad)
pop
add
leave
cwde
sbb
shl
or
bnd
fwait
jmp
out
(bad)
shl
(bad)
call
test
cwde
xchg
aam
mov
(bad)
fwait
sahf
dec
mov
es
adc
loop
pop
mov
(bad)
mov
xchg
xor
mov
(bad)
inc
jbe
add
scas
outs
lods
mov
(bad)
into
hlt
sub
jmp
lock
mov
pop
aaa
jp
mov
pop
ins
add
(bad)
jmp
or
popf
push
mov
pop
cwde
dec
pop
cmp
jge
rcr
jbe
jmp
outs
mov
push
sub
sbb
pop
movs
push
mov
mov
pusha
lds
(bad)
dec
fisubr
clc
(bad)
push
cli
sbb
sub
add
mov
rcl
mov
cs
xchg
mov
and
sbb
or
jno
(bad)
jg
adc
dec
bound
inc
popa
cs
cmp
add
(bad)
(bad)
jmp
add
jmp
(bad)
pop
mov
fdivr
out
(bad)
(bad)
(bad)
fisttp
ss
je
movs
cwde
xor
pop
je
icebp
loope
add
adc
pop
clc
jle
daa
inc
loopne
(bad)
jg
mov
jnp
mov
push
and
cmc
cmc
add
fisttp
(bad)
(bad)
fisttp
dec
pop
jmp
or
lods
xor
cmps
adc
inc
cmp
mov
idiv
inc
sbb
sbb
mov
jno
adc
jne
pop
call
adc
and
aam
das
mov
xchg
repz
bound
lahf
pop
outs
(bad)
(bad)
(bad)
(bad)
(bad)
addr16
cdq
mov
into
stos
test
sahf
cmp
or
out
outs
jmp
aam
jg
call
xchg
js
push
sub
ret
jo
sub
sbb
out
pop
(bad)
sti
in
out
add
xchg
or
pop
mov
ret
(bad)
(bad)
(bad)
(bad)
test
movs
ret
daa
jb
paddusb
arpl
xchg
dec
popa
cmp
push
pushf
aad
jecxz
(bad)
(bad)
mov
and
push
arpl
add
mov
inc
push
ret
(bad)
(bad)
mov
push
adc
jmp
push
fsubr
add
(bad)
mov
mov
cld
(bad)
jg
fisttp
mov
jge
pop
xor
fdivr
inc
adc
sbb
stos
push
mov
icebp
aas
imul
loope
inc
daa
ret
(bad)
mov
dec
pop
mov
icebp
push
es
adc
repz
or
dec
test
cld
scas
sub
cmp
inc
not
loop
fnstenv
(bad)
dec
repnz
push
mov
adc
dec
inc
nop
cmps
cmp
out
ds
add
(bad)
retf
mov
push
pop
jge
stos
push
lock
movs
jl
push
xchg
loope
(bad)
push
sbb
xchg
pop
mov
xchg
das
pop
out
in
push
jmp
sub
(bad)
(bad)
mov
xor
(bad)
xchg
rcr
js
cmp
rcr
(bad)
out
cli
call
pop
sti
lea
cld
bound
retf
pop
jo
in
data16
push
sbb
pusha
pop
cli
mov
inc
inc
pop
adc
js
pusha
dec
out
data16
pop
jmp
clc
(bad)
cmp
mov
cmps
fsubr
cmp
ret
sbb
and
(bad)
(bad)
(bad)
xchg
pop
int3
jg
scas
sub
push
pop
sbb
cmp
movs
shl
push
cwde
dec
out
out
sub
loop
out
dec
mul
call
mov
xor
rcr
mov
xchg
push
daa
int
mov
sub
jno
fistp
fst
mov
mov
or
(bad)
mov
(bad)
jo
mov
cdq
loopne
ret
(bad)
in
push
sub
into
imul
les
mov
add
fstp
mov
fdivr
icebp
(bad)
mov
inc
jp
gs
aas
js
test
jmp
dec
or
cmp
(bad)
(bad)
push
fwait
lea
mov
jno
sbb
cmp
and
cmp
(bad)
(bad)
(bad)
jmp
jne
xor
and
fisub
stos
(bad)
shr
pop
outs
mov
(bad)
iret
dec
push
(bad)
(bad)
(bad)
(bad)
mov
xlat
cmps
mov
inc
div
call
ds
js
adc
movs
mov
(bad)
(bad)
jmp
psubq
in
std
(bad)
in
aaa
rcl
lods
jnp
ins
ds
xor
jmp
pop
or
int
pushf
arpl
outs
inc
mov
fist
call
lock
inc
sti
js
lds
mov
dec
sub
push
dec
jnp
aaa
lods
(bad)
(bad)
sub
push
addr16
inc
shl
call
sub
xor
or
mul
or
xor
jmp
inc
mov
popa
scas
pop
xchg
pushf
push
dec
push
and
jg
jmp
shl
adc
xchg
xchg
(bad)
cld
adc
test
add
lock
mov
inc
push
(bad)
imul
mov
popw
std
(bad)
(bad)
jle
or
pop
and
inc
icebp
aad
scas
call
jns
mov
(bad)
(bad)
fst
dec
lock
pop
ins
inc
mov
mov
mov
xor
mov
fcom
repz
(bad)
sbb
jbe
dec
push
fcmovnu
popa
lods
inc
aad
icebp
out
dec
(bad)
dec
hlt
pop
sti
popf
aas
dec
in
pop
push
aas
pop
sbb
ss
mov
cmp
dec
mov
neg
sbb
mov
pop
out
sahf
jg
pop
cld
add
push
daa
fisttp
data16
jo
cld
(bad)
jmp
jnp
xchg
adc
adc
(bad)
mov
xchg
hlt
sbb
pop
xchg
lds
call
xchg
pop
jb
fadd
(bad)
(bad)
(bad)
jmp
sub
xchg
cmps
outs
add
push
jns
inc
call
jmp
(bad)
(bad)
jmp
push
popa
not
dec
pop
imul
cmp
dec
jmp
mov
and
jmp
ror
inc
inc
jecxz
ja
adc
(bad)
(bad)
push
jecxz
retf
jns
es
pop
aaa
sti
push
mul
xchg
loope
movq
adc
mov
(bad)
(bad)
call
rcr
sub
ja
int
(bad)
imul
pop
std
push
mov
mov
jge
sub
(bad)
(bad)
mov
mov
jne
int
mov
clc
or
dec
mov
loope
call
mov
pop
adc
adc
test
arpl
xchg
sti
packuswb
sbb
ret
jecxz
or
ds
out
jno
xchg
ret
(bad)
(bad)
inc
(bad)
push
mov
sbb
sbb
xchg
add
in
iret
(bad)
sbb
(bad)
(bad)
jmp
xchg
into
(bad)
mov
or
ror
pop
lahf
jg
pop
or
(bad)
(bad)
(bad)
jle
es
xor
call
pop
lods
mov
sbb
add
(bad)
call
mov
dec
jg
pop
mov
xlat
mov
(bad)
(bad)
jmp
repz
adc
pop
xchg
adc
jl
mov
movs
dec
gs
call
loop
repz
or
mov
mov
add
(bad)
(bad)
(bad)
jmp
mov
mov
test
(bad)
xor
ret
repnz
xchg
pop
popa
clc
dec
sub
mov
xchg
les
clc
cmp
inc
mov
cdq
mov
test
cli
es
lods
xor
(bad)
(bad)
inc
mov
mov
push
stc
add
into
xor
pop
and
xor
(bad)
(bad)
(bad)
inc
clc
popa
sbb
pop
jge
aam
rol
mov
xor
push
mov
(bad)
(bad)
mov
or
pusha
xor
push
ins
imul
aas
mov
(bad)
pop
jo
push
push
(bad)
(bad)
(bad)
call
or
test
jg
and
test
or
jb
out
daa
jmp
enter
out
and
mov
inc
xor
scas
stos
inc
sub
xor
(bad)
(bad)
(bad)
fistp
shl
cs
repnz
xchg
and
push
test
and
ret
(bad)
call
xchg
or
push
mov
movs
pop
ins
sbb
call
(bad)
(bad)
(bad)
mov
lea
cdq
add
xor
xchg
shl
cli
sub
push
in
mov
mov
(bad)
(bad)
(bad)
jmp
mov
sub
icebp
mov
mov
in
mov
popf
dec
add
sub
(bad)
(bad)
inc
and
test
and
mov
ret
xchg
lds
cli
out
cli
(bad)
(bad)
fld
stos
and
test
(bad)
repnz
ret
(bad)
(bad)
dec
pop
jno
mov
pop
and
int3
pop
xchg
popa
pushf
xor
cmc
retf
std
(bad)
(bad)
call
out
sar
mov
data16
mov
je
mov
or
call
push
mov
movs
sbb
inc
and
jp
xchg
dec
call
cld
aaa
std
(bad)
mov
jecxz
jle
outs
mov
test
fisub
jmp
(bad)
(bad)
inc
mov
cmp
push
and
and
test
inc
(bad)
popa
push
jmp
rcl
sar
xor
fsubrp
daa
sub
cmps
cmp
jo
or
jmp
or
cmp
cld
outs
xor
and
xchg
xchg
sbb
or
je
(bad)
(bad)
(bad)
inc
and
out
ins
daa
push
stos
sub
cmps
pusha
fdivr
in
les
mov
push
add
adc
lahf
sbb
(bad)
(bad)
(bad)
jmp
jae
cmp
xchg
and
test
(bad)
sbb
call
test
adc
bound
fcmovnb
xchg
bound
dec
push
adc
xlat
pushf
mov
(bad)
(bad)
(bad)
jmp
push
in
mov
adc
push
adc
mov
and
xchg
call
jp
push
scas
ss
(bad)
das
pushf
or
(bad)
(bad)
lods
add
jb
jg
(bad)
jg
inc
sub
push
lds
and
in
popf
push
popf
mov
ins
jae
outs
xchg
lods
aaa
jl
mov
mov
jmp
jmp
call
xor
add
lods
jns
fcomp
(bad)
jg
icebp
add
ins
enter
add
test
retf
mov
js
aad
push
test
sbb
shr
dec
jmp
(bad)
(bad)
jmp
sub
mov
loop
and
pop
mov
push
loope
les
sub
sub
test
call
jbe
add
xchg
or
cmps
sub
out
pop
xor
push
mov
jns
aam
jns
jb
cmps
mov
pop
cdq
and
(bad)
(bad)
push
ret
test
jbe
sbb
stos
lock
inc
inc
inc
scas
movs
loopne
mov
pop
hlt
jmp
jecxz
jle
xor
lock
pusha
in
sbb
(bad)
(bad)
jmp
ins
inc
jle
push
inc
xchg
test
fld
sub
inc
fiadd
adc
(bad)
(bad)
(bad)
pop
bound
imul
cmp
test
mov
dec
bound
xchg
push
test
(bad)
call
or
ss
xor
inc
xchg
mov
adc
adc
je
(bad)
(bad)
(bad)
call
inc
add
and
pop
lods
test
jl
mov
xchg
xor
mov
or
mov
ret
retf
prefetcht2
mov
hlt
xchg
sbb
fbld
(bad)
(bad)
call
ss
(bad)
fld
adc
push
cld
js
jg
or
push
push
push
(bad)
shl
dec
jmp
mov
xor
mov
icebp
cmps
sbb
inc
imul
dec
repnz
into
loopne
ds
and
cwde
(bad)
(bad)
(bad)
push
shl
cs
pop
bound
xchg
xor
mov
or
dec
fidivr
call
xor
xor
fist
pop
mov
mov
stc
sbb
dec
(bad)
mov
(bad)
(bad)
(bad)
push
ret
jge
lahf
test
int
aam
mov
xchg
sub
xchg
mov
push
fs
(bad)
push
cld
call
aas
fmul
rol
addr16
pop
test
push
push
add
addr16
ja
(bad)
(bad)
(bad)
(bad)
mov
dec
push
mov
jp
jle
imul
popa
and
and
inc
inc
jnp
mov
pusha
repz
sbb
jmp
sub
xchg
int3
jmp
test
ins
sub
jp
movs
mov
ss
fcomip
(bad)
jmp
mov
popa
or
cmp
inc
lock
aas
pusha
pop
fistp
inc
(bad)
(bad)
(bad)
jmp
and
popa
pop
xrelease
xchg
aam
mov
ret
cmp
ret
popf
(bad)
jmp
xchg
jge
and
out
fstp
mov
cmps
mov
call
cld
gs
nop
jno
cmp
movs
call
add
out
call
pop
or
mov
push
imul
(bad)
call
fcom
in
pop
mov
call
repz
mov
jg
mov
fisub
push
fwait
sub
lock
stos
(bad)
(bad)
call
add
mov
(bad)
(bad)
pop
dec
or
das
dec
cmp
and
in
or
(bad)
(bad)
call
movlps
mov
cmp
mov
fs
push
xor
mov
(bad)
(bad)
push
ds
dec
enter
pop
fs
(bad)
push
sub
inc
bound
mov
xchg
adc
push
mov
dec
ds
jecxz
inc
sar
(bad)
scas
jl
(bad)
(bad)
(bad)
dec
stos
dec
jno
push
les
mov
sub
sbb
or
dec
or
outs
pop
xor
(bad)
fdiv
sar
popa
pop
sbb
popa
mov
cmp
push
cmp
lods
(bad)
cmp
cs
leave
sub
xchg
loopne
iret
mov
dec
mov
(bad)
or
pop
adc
fsub
push
outs
add
mov
aas
pop
push
jmp
cmc
retf
mov
or
xor
mov
fmul
(bad)
jg
scas
(bad)
jae
pop
jae
retf
aas
mov
loop
inc
cld
cli
jbe
popf
and
outs
mov
mov
fimul
icebp
ja
or
push
sahf
rcr
loopne
shl
(bad)
inc
mov
mov
stc
es
cdq
mov
dec
dec
sbb
(bad)
(bad)
call
rol
fucom
popw
imul
xchg
loopne
mov
rcl
jmp
ins
ja
and
(bad)
mov
adc
adc
sti
or
(bad)
(bad)
jg
adc
pushf
push
ds
mov
cwde
(bad)
(bad)
stc
mov
adc
test
pop
mov
fisttp
fld
cs
xor
iret
jl
xchg
jo
dec
pop
loope
push
xchg
(bad)
(bad)
inc
mov
mov
xchg
out
fcmovnbe
push
dec
jne
add
setno
hlt
jp
(bad)
(bad)
(bad)
in
shl
sub
sub
mul
xchg
test
push
jg
xchg
push
sub
cld
(bad)
jg
push
in
sbb
push
je
mov
and
push
dec
mov
lock
sti
(bad)
aam
jmp
adc
(bad)
call
scas
sbb
ret
sbb
jecxz
ficomp
ret
add
pop
cmp
bound
out
out
iret
sbb
cmp
jmp
stc
jns
jns
(bad)
(bad)
push
(bad)
jnp
(bad)
mov
add
pop
sbb
test
and
comiss
(bad)
out
loope
push
push
stos
(bad)
(bad)
(bad)
(bad)
cmp
mov
pusha
cmc
(bad)
push
dec
add
repnz
repnz
jle
push
sbb
clc
(bad)
out
loop
imul
arpl
pop
pushf
aaa
adc
xor
cmp
inc
or
(bad)
(bad)
call
sbb
daa
in
cmp
sbb
pop
and
retf
fdiv
sbb
cwde
mov
jg
not
adc
adc
stos
push
test
pop
scas
pop
mov
(bad)
dec
lock
adc
pop
cwde
int
imul
sar
psubb
in
(bad)
cli
sub
mov
(bad)
data16
sub
xor
lahf
sbb
adc
cdq
mov
ret
mov
sub
ret
mov
mov
(bad)
in
push
out
es
call
sar
push
mov
cdq
(bad)
dec
jns
js
shr
sbb
jmp
loope
mov
mov
pushf
(bad)
(bad)
(bad)
dec
jl
mov
inc
adc
sub
into
and
aad
test
lods
(bad)
(bad)
(bad)
(bad)
call
cmp
into
jne
icebp
fldcw
inc
push
test
fwait
push
das
pop
adc
(bad)
in
push
ror
add
ja
out
mov
fs
inc
lock
loop
fld
(bad)
(bad)
(bad)
out
js
push
or
push
add
aas
ja
icebp
mov
mov
and
and
test
jg
call
mov
addr16
mov
push
js
add
jne
push
mov
sub
movs
adc
loope
xchg
hlt
out
xchg
mov
mov
mov
(bad)
dec
jecxz
out
jnp
push
and
bound
into
and
adc
inc
push
xor
lods
cmp
mov
cmps
xchg
xchg
jo
mov
inc
inc
aam
outs
adc
lahf
mov
push
adc
dec
cs
(bad)
(bad)
call
clc
sbb
push
xchg
jge
ins
lds
ficom
scas
(bad)
mov
mov
mov
cmp
(bad)
(bad)
(bad)
dec
repnz
sub
cmp
data16
loopne
adc
jae
adc
mov
jnp
(bad)
(bad)
(bad)
(bad)
cmp
or
shl
mov
shl
mov
clc
inc
cli
inc
(bad)
(bad)
(bad)
(bad)
fnstcw
data16
mov
jmp
dec
je
loopne
call
fistp
add
cs
inc
dec
adc
int3
inc
push
jecxz
in
aas
cmp
mov
outs
jno
mov
push
lock
loop
add
(bad)
(bad)
dec
lahf
ret
dec
test
adc
push
jnp
push
adc
enter
rol
mov
cld
(bad)
dec
shr
shr
pusha
hlt
mov
cmp
and
pop
add
jl
sti
(bad)
dec
add
call
in
std
adc
(bad)
(bad)
(bad)
dec
add
jne
lea
or
push
cs
adc
xor
cwde
mov
(bad)
(bad)
(bad)
call
fist
outs
(bad)
fstp
packuswb
or
push
retf
dec
or
mov
iret
(bad)
(bad)
jg
ss
jp
sbb
mov
jae
pushf
(bad)
fldenv
mov
cmp
lea
cmp
ret
dec
pop
dec
adc
int3
sbb
add
push
aaa
(bad)
(bad)
jmp
hlt
imul
inc
push
mov
sti
push
and
dec
outs
cli
call
mov
outs
xchg
in
push
cmps
loopne
adc
sub
fdivrp
(bad)
(bad)
push
push
xchg
into
mov
mov
cdq
xchg
add
lods
shl
add
scas
int
imul
or
mov
fidivr
call
shl
push
cmp
es
enter
outs
test
ins
ror
loop
push
add
xchg
jne
movs
xchg
mov
retf
loopne
clc
(bad)
(bad)
fdivr
aas
pop
loope
sub
das
jp
inc
xchg
mov
mov
sti
mov
push
stos
sbb
cdq
mov
add
jl
add
into
inc
es
repz
fdivp
inc
mov
imul
adc
movs
inc
or
pushf
ja
ret
or
cmp
call
(bad)
call
fld
addr16
bound
xchg
and
icebp
jo
jbe
retf
or
scas
jns
or
stos
add
xor
sub
dec
mov
jmp
(bad)
call
jl
fucomip
mov
imul
(bad)
int
cmps
dec
dec
adc
add
pop
dec
add
popa
fwait
push
jne
int3
pop
dec
shl
pop
mov
(bad)
(bad)
(bad)
inc
das
fiadd
sub
aas
dec
jl
xchg
(bad)
jbe
xlat
xchg
enter
and
xor
dec
(bad)
(bad)
(bad)
(bad)
fcom
bound
jle
mov
ds
in
test
bound
outs
jg
cmp
push
dec
or
push
adc
cmc
fdivp
icebp
(bad)
sar
(bad)
(bad)
call
out
(bad)
jmp
mov
(bad)
xchg
(bad)
jo
cmp
mov
lock
vcmpsd
push
mov
pop
invd
and
cmp
pop
cmp
xor
push
jnp
fbstp
add
xor
and
fisubr
(bad)
(bad)
push
xlat
sub
test
test
ins
iret
add
test
xchg
lock
(bad)
mov
dec
ret
iret
mov
pop
jp
jle
out
addr16
outs
sti
cmc
call
jns
lods
out
jno
out
(bad)
ficomp
in
or
(bad)
(bad)
inc
adc
jo
enter
ret
pop
jmp
sub
rol
hlt
rcr
push
mov
mov
in
pop
shr
cld
in
adc
ins
(bad)
loope
lock
(bad)
mov
popa
out
test
(bad)
(bad)
(bad)
call
ds
movs
mov
aad
movs
push
jmp
out
aas
cmp
and
dec
sar
xchg
out
(bad)
(bad)
call
fnstcw
fdivr
rcr
enter
mov
mov
cmp
cmps
lods
mov
dec
mov
(bad)
(bad)
call
cmp
xchg
inc
out
mov
movs
xchg
or
mov
dec
pop
int3
imul
add
out
(bad)
icebp
jbe
or
inc
repnz
and
push
mov
fs
mov
ja
jmp
sbb
popa
inc
out
neg
pop
push
push
cmp
jmp
xchg
jge
in
cmc
pop
and
shr
fwait
jmp
in
cwde
sbb
pushf
cmps
hlt
cmp
xchg
ds
jb
jecxz
neg
popa
xchg
or
(bad)
call
and
outs
sbb
lahf
in
mov
aad
lds
and
into
push
daa
xchg
das
clc
(bad)
mov
ret
scas
push
cmp
jmp
dec
add
lods
jae
iret
xchg
dec
add
das
push
je
jae
cmp
pop
retf
pushf
idiv
sar
fild
add
(bad)
(bad)
pop
pop
xchg
das
stos
sti
std
fistp
push
xor
js
(bad)
(bad)
(bad)
(bad)
cmp
adc
clc
adc
cld
cld
mov
xlat
mov
mov
popf
shr
xchg
(bad)
fcomip
ret
xchg
inc
lock
dec
cld
xor
sar
jge
xchg
lds
(bad)
dec
mov
rol
xlat
pop
push
mov
xor
mov
or
(bad)
(bad)
inc
stos
mov
pop
lock
xchg
popa
mov
shl
add
in
mov
gs
scas
mov
jg
mov
ds
clc
sar
push
pop
sti
(bad)
mov
(bad)
push
mov
dec
or
hlt
mov
(bad)
pop
cmps
cmps
add
mov
ins
pop
mov
fwait
mov
ins
(bad)
mov
add
call
mov
inc
inc
xchg
sub
dec
or
test
jno
sbb
jp
lea
ret
and
jecxz
int3
out
dec
adc
add
mov
sbb
inc
les
xchg
xlat
outs
push
pop
ins
in
or
cmp
mov
popf
pop
mov
icebp
dec
std
dec
jmp
sbb
or
icebp
test
or
into
lds
xor
push
sahf
div
sub
(bad)
(bad)
(bad)
dec
(bad)
les
xchg
sbb
adc
cli
sti
mov
outs
mov
in
cmp
out
mov
(bad)
(bad)
call
retf
in
mov
shr
das
iret
mov
cmps
jae
jmp
jnp
xor
jge
scas
pop
adc
(bad)
(bad)
dec
addr16
pop
jns
mov
push
lea
push
jle
imul
sti
mov
(bad)
(bad)
(bad)
in
loop
test
into
xchg
cmps
inc
bound
popa
stos
(bad)
adc
and
mov
imul
pop
das
(bad)
(bad)
(bad)
(bad)
ds
pusha
xor
outs
sbb
or
rol
or
jnp
test
call
call
clc
mov
and
in
fsubr
xchg
jo
mov
je
scas
clc
(bad)
jmp
dec
push
pop
pop
loopne
sub
cmp
xlat
aad
popa
ror
iret
sbb
mov
push
cmp
adc
mov
pop
addr16
jnp
sbb
jo
(bad)
jg
mov
adc
adc
xchg
jg
inc
movs
lods
popa
in
idiv
rol
lock
retf
(bad)
push
pop
cmc
cld
pop
dec
jmp
dec
jo
out
clc
scas
mov
sahf
mov
rol
popa
(bad)
(bad)
(bad)
mov
adc
xchg
fstp
jecxz
popa
(bad)
mov
cwde
or
ds
xor
cwde
call
add
jmp
xchg
sub
hlt
jge
pop
cmc
aam
sbb
jg
cld
(bad)
jl
push
or
jno
jb
jle
movs
rol
mov
(bad)
(bad)
(bad)
jmp
movs
adc
lea
cmp
in
push
js
in
cmp
mov
sub
(bad)
(bad)
call
shl
les
mov
push
fwait
shl
mov
stc
mov
scas
and
pusha
sub
ja
sub
imul
ret
in
push
in
xchg
pushf
cmps
sub
dec
shl
xor
jge
fcom
leave
dec
fwait
(bad)
cld
lahf
adc
test
xor
(bad)
(bad)
push
xor
sub
aam
push
mov
enter
call
(bad)
jmp
push
pushf
push
push
adc
mov
jo
mov
(bad)
(bad)
(bad)
fimul
xchg
adc
int3
cmp
sbb
cwde
dec
dec
sbb
sub
or
pop
cmp
jge
dec
mov
(bad)
(bad)
jmp
adc
push
scas
or
enter
or
cmps
and
or
push
adc
dec
mov
ins
(bad)
cli
je
sub
call
inc
call
mov
aam
cwde
push
into
daa
out
fwait
sub
and
cmps
jbe
int
je
loop
inc
adc
jns
xchg
xchg
lock
call
xchg
sub
sbb
aam
bound
test
lock
(bad)
jmp
dec
or
fild
(bad)
repz
cmp
popa
jo
rol
sub
adc
jmp
push
bound
repnz
jbe
push
xor
or
(bad)
(bad)
(bad)
(bad)
inc
stos
fidiv
cwde
push
inc
data16
mov
mov
sbb
jno
scas
xor
cli
inc
out
xchg
sbb
call
imul
jmp
iret
mov
pusha
nop
sub
shl
test
jb
sbb
(bad)
(bad)
inc
add
push
mov
test
add
retf
repz
(bad)
shr
cdq
cli
(bad)
(bad)
dec
push
arpl
sbb
sub
cmp
mov
mov
mov
(bad)
push
fcomip
outs
cmp
fstp
call
jle
push
xor
sub
push
(bad)
call
xor
sub
jbe
mov
movs
add
ins
and
dec
sub
inc
lgs
(bad)
(bad)
jmp
jl
mov
or
inc
popa
sub
gs
xor
inc
sbb
add
mov
(bad)
cmp
push
dec
cli
lods
sub
adc
or
cmp
dec
inc
dec
outs
pop
psrad
cmps
repnz
call
mov
rcl
ret
sbb
or
stc
add
lahf
sbb
lds
in
mov
mov
retf
push
xchg
lahf
ret
dec
jns
dec
sahf
and
imul
cmp
call
add
or
push
jecxz
dec
cli
cmove
jecxz
mov
mov
jbe
jo
int
icebp
jle
mov
sub
call
mov
ds
aam
or
mov
lock
stos
out
push
mov
or
call
sbb
mov
retf
add
stos
cmp
(bad)
(bad)
dec
(bad)
jge
retf
or
aam
ds
add
int
jp
lock
inc
les
push
(bad)
(bad)
(bad)
(bad)
mov
test
(bad)
jmp
push
mov
pusha
les
retf
cwde
aad
sbb
pop
push
idiv
xor
(bad)
(bad)
jmp
adc
jb
cmp
jp
jne
dec
mov
inc
push
shl
out
(bad)
or
lock
pop
fcom
push
mov
sbb
cli
(bad)
call
mov
rcl
test
int3
clc
xchg
out
mov
cmp
push
(bad)
(bad)
(bad)
mov
pop
sub
mov
push
fwait
imul
xor
cdq
jmp
and
cmp
xor
add
mov
je
lea
out
(bad)
(bad)
(bad)
jmp
push
(bad)
clc
push
js
(bad)
cmp
lds
dec
and
lea
xchg
aam
int
mov
leave
hlt
(bad)
push
add
cli
pushf
imul
in
in
dec
and
cmp
test
je
mov
dec
mov
xor
call
xchg
sar
(bad)
push
test
push
das
cmps
adc
inc
jo
movs
add
xor
dec
ja
xor
mov
xchg
add
stc
rcr
dec
es
(bad)
(bad)
(bad)
jg
cmp
daa
retf
pop
leave
pop
mov
mov
mov
ins
rol
mov
cld
repz
add
movs
or
imul
mov
lahf
mov
ret
aas
cmp
mov
cmps
cmp
mov
lock
(bad)
jmp
push
ins
jns
jge
enter
xchg
fistp
jmp
(bad)
mov
cmovle
dec
adc
sub
imul
out
push
(bad)
(bad)
jmp
iret
xchg
sub
jne
xchg
push
jmp
dec
ror
mov
dec
data16
jg
(bad)
mov
and
(bad)
sbb
(bad)
scas
pop
mov
(bad)
(bad)
(bad)
jmp
jne
mov
cmc
cmps
or
adc
mov
or
push
ins
hlt
mov
shl
(bad)
(bad)
mov
(bad)
sub
cmc
ins
pop
mov
cmps
mov
jnp
test
es
dec
(bad)
call
mov
clc
sbb
xchg
in
loopne
jno
or
(bad)
fcomip
jae
mov
out
fcmove
push
adc
les
test
jbe
loopne
jg
sbb
test
jns
add
or
in
(bad)
(bad)
(bad)
mov
push
adc
xor
xor
ffreep
enter
lock
(bad)
(bad)
(bad)
(bad)
mov
adc
dec
mov
(bad)
shr
aad
push
ss
jno
sahf
fidivr
push
call
adc
pop
mov
(bad)
xor
mov
lea
adc
mov
jg
(bad)
mov
daa
popf
iret
inc
mov
mov
jmp
ret
sub
adc
xchg
jmp
jl
int3
movs
xchg
imul
ss
(bad)
(bad)
jg
mov
add
mov
push
sqrtps
clc
jmp
mov
lock
xchg
call
(bad)
jmp
les
pop
(bad)
popf
jbe
mov
mov
pop
xchg
(bad)
(bad)
(bad)
inc
xor
mov
les
or
out
and
xchg
(bad)
(bad)
(bad)
inc
push
inc
mov
xor
mov
push
sbb
xor
cmp
daa
(bad)
(bad)
(bad)
inc
add
rol
out
xor
inc
sub
mov
pushf
es
mov
(bad)
jmp
test
mov
fcmove
cmc
fisttp
sub
es
into
(bad)
(bad)
(bad)
jmp
push
and
lea
inc
add
out
push
jb
mov
mov
dec
and
and
cmps
mov
(bad)
(bad)
call
push
sbb
cmp
mov
fcom
shr
sbb
push
loopne
(bad)
(bad)
(bad)
(bad)
sti
sahf
sub
stos
xor
sahf
adc
cmp
mov
add
mov
xor
dec
shl
mov
scas
mov
jmp
les
mov
cmps
in
test
je
mov
add
or
and
(bad)
cmp
stc
lock
std
call
lahf
das
es
sub
(bad)
(bad)
dec
iret
retf
loopne
xor
sbb
(bad)
ret
cvtps2pd
sub
mov
loopne
movs
lahf
push
int3
mov
mov
jp
fisttp
repz
mov
dec
pop
push
pusha
or
clc
loope
daa
shl
or
call
addr16
add
inc
and
mov
call
cmps
jge
(bad)
(bad)
jmp
or
mov
jne
mov
xlat
mov
pop
sbb
lock
inc
mov
(bad)
(bad)
inc
xchg
push
pop
int3
jae
pushf
inc
into
mov
xchg
ss
pop
sbb
mov
repz
data16
(bad)
(bad)
fcomip
mov
or
arpl
popf
pusha
mov
icebp
cmps
outs
rol
inc
test
(bad)
(bad)
(bad)
clc
jmp
xor
xchg
add
jl
mov
add
sub
push
jp
dec
lods
cli
adc
(bad)
fcomip
jmp
daa
rol
test
sub
(bad)
div
scas
push
dec
mov
in
jg
mov
test
addr16
cld
mov
js
xor
jge
movs
test
call
or
iret
xor
scas
std
ins
js
jb
jmp
data16
dec
loop
into
adc
(bad)
(bad)
dec
add
int
sahf
(bad)
mov
add
sti
and
das
ret
add
in
in
and
push
jo
jno
call
inc
mov
in
clc
fistp
pop
ror
mov
dec
aas
mov
mov
rcr
xchg
pop
push
mov
stc
cmp
(bad)
(bad)
(bad)
call
loope
push
ja
lods
jne
test
outs
lds
jne
inc
pop
loop
sbb
(bad)
(bad)
inc
ja
and
loope
fyl2xp1
test
or
pusha
out
xor
mov
inc
sub
pop
adc
and
lea
inc
jmp
jbe
xchg
js
pop
inc
stc
mov
(bad)
(bad)
(bad)
mov
loope
push
(bad)
(bad)
dec
jns
mov
(bad)
out
xchg
mov
xor
(bad)
jg
(bad)
jmp
xchg
das
mov
aad
push
dec
adc
adc
ins
sti
mov
scas
clc
sub
outs
mov
mov
test
sub
scas
(bad)
(bad)
jg
or
pop
adc
mov
sub
loopne
retf
cwde
les
lds
mov
call
sub
mov
mov
jno
sub
fldenv
inc
xchg
jns
fwait
(bad)
(bad)
(bad)
inc
mov
inc
and
mov
int3
jecxz
sar
push
imul
sbb
(bad)
(bad)
dec
daa
xchg
cmp
pusha
inc
or
(bad)
fistp
(bad)
(bad)
push
adc
push
imul
rcr
cmp
dec
jle
fild
daa
aas
cmp
fisub
push
popa
inc
mov
mov
dec
enter
xchg
push
push
adc
xchg
xchg
(bad)
enter
in
fld
add
lods
jb
dec
xchg
xchg
adc
and
gs
jbe
xchg
mov
(bad)
dec
fcom
retf
push
fwait
sbb
add
and
mov
out
sti
inc
sahf
sbb
mov
scas
rcr
dec
xchg
adc
or
dec
push
inc
adc
loopne
inc
push
push
test
call
out
push
in
push
adc
aas
xor
out
in
ins
or
mov
shr
(bad)
inc
mov
ret
mov
call
into
mov
dec
fwait
movs
jge
cmps
and
mov
ins
or
(bad)
jmp
lea
inc
out
in
repnz
pushf
push
mov
jmp
shl
fwait
xchg
add
mov
xchg
mov
das
sub
dec
into
inc
je
dec
(bad)
(bad)
push
repz
inc
xchg
sub
pop
or
mov
addr16
call
out
jle
lds
rol
das
push
xchg
sub
int
pop
mov
(bad)
(bad)
inc
in
aam
jbe
movs
pop
and
popf
sub
mov
int3
mov
cmp
jmp
sahf
stos
xchg
xchg
jne
mov
jmp
out
dec
cmp
lods
inc
mov
cwde
out
jle
enter
cdq
mov
or
dec
and
push
mov
retf
cmp
retf
ss
(bad)
(bad)
push
rcl
outs
sbb
jbe
scas
popa
pushf
xchg
movs
xchg
sub
cmp
shl
xchg
cli
inc
repnz
(bad)
mov
or
add
dec
cmp
xchg
cdq
fdiv
pop
xor
ret
outs
test
jp
fwait
mov
push
inc
test
jl
jge
pusha
(bad)
jmp
cli
out
retf
add
cmps
pop
cwde
mov
or
pop
nop
repnz
jb
and
std
jmp
mov
sub
fcmovnb
out
pop
fidiv
(bad)
(bad)
(bad)
mov
xchg
daa
mov
stc
shl
je
dec
xchg
or
sbb
jb
jg
cmp
(bad)
(bad)
(bad)
dec
jb
mov
(bad)
es
and
ret
sub
jb
xor
data16
fld
aaa
std
(bad)
(bad)
cli
pop
fidiv
xchg
mov
and
scas
sub
xchg
clc
jecxz
fstp
test
cli
(bad)
(bad)
jmp
cmps
in
sbb
shl
std
into
arpl
pop
xchg
test
imul
adc
push
fcmovbe
push
(bad)
es
in
fs
cdq
xor
outs
xchg
(bad)
cmps
cmp
dec
scas
rcl
stos
pop
iret
pop
loop
adc
and
leave
add
lea
(bad)
repnz
jmp
call
mov
push
sbb
ret
ins
retf
movs
cmc
inc
mov
adc
hlt
push
pusha
les
jecxz
push
and
(bad)
(bad)
(bad)
jg
pop
sbb
aam
out
push
sbb
ja
(bad)
or
push
pop
mov
(bad)
(bad)
fxch
ret
or
add
mov
mov
jmp
cmc
adc
inc
fnstenv
dec
dec
sti
dec
aad
xchg
stos
movs
sub
xchg
push
enter
cmp
loope
(bad)
(bad)
(bad)
call
add
stos
aas
popf
out
std
in
and
lock
loop
fidiv
jmp
popa
std
lea
push
daa
sbb
mov
cld
retf
xlat
cld
popa
nop
loop
aas
(bad)
std
(bad)
fild
xchg
rcr
fnstcw
data16
jns
xor
test
xor
mov
xor
push
sbb
stos
aas
(bad)
div
call
sbb
aas
push
pop
dec
repz
dec
icebp
(bad)
(bad)
(bad)
mov
(bad)
fcomip
sar
sbb
pop
aas
arpl
popf
pop
fbld
pop
popa
aas
int3
mov
clc
call
(bad)
sub
jecxz
jg
inc
hlt
addr16
pusha
or
xchg
in
ret
call
jg
mov
mov
jle
test
mov
(bad)
fld
xchg
cmps
clc
faddp
pop
cld
inc
lock
out
push
sti
push
pop
mov
xchg
test
pop
mov
aad
cli
pop
pop
mov
adc
sar
mov
scas
mov
(bad)
mov
std
and
jecxz
inc
or
xchg
pop
add
jmp
call
int
je
popf
mov
(bad)
pop
(bad)
sbb
mov
inc
(bad)
(bad)
(bad)
dec
cli
clc
cmc
inc
dec
pushf
add
enter
lods
pop
daa
add
into
push
adc
or
fcom
ret
call
jne
int3
pop
cdq
pop
adc
(bad)
mov
cmp
mov
movs
imul
jb
idiv
push
adc
mov
inc
inc
pop
jnp
fsub
and
adc
xor
sahf
std
sub
push
cmp
xchg
sub
mov
(bad)
cmp
aad
pop
in
inc
mov
mov
xor
xor
das
clc
cli
loopne
daa
adc
add
xchg
sti
mov
(bad)
(bad)
mov
je
inc
loope
cdq
push
push
xchg
dec
cmc
les
jbe
mov
(bad)
(bad)
(bad)
jg
test
mov
addr16
cmp
xor
stos
adc
std
ins
test
jecxz
xor
adc
arpl
adc
or
adc
pop
ins
(bad)
push
cmp
dec
mov
cdq
add
test
gs
(bad)
(bad)
jmp
loop
ins
loopne
or
mov
cmp
push
push
mov
mov
(bad)
(bad)
(bad)
push
adc
popa
out
call
rol
and
cmp
div
(bad)
(bad)
(bad)
call
loope
mov
push
mov
jae
adc
inc
inc
inc
int3
mov
mov
(bad)
(bad)
jmp
sub
std
adc
sbb
das
mov
dec
mov
loope
sub
push
(bad)
(bad)
(bad)
inc
rol
cmp
and
dec
add
cmc
pop
push
add
push
pushf
push
ret
pop
das
or
dec
imul
adc
inc
shr
(bad)
(bad)
out
cli
sub
push
push
movs
sahf
jmp
push
call
cmp
cmps
push
pop
xchg
jnp
hlt
(bad)
(bad)
jg
adc
enter
adc
adc
pusha
les
sahf
into
and
call
inc
cmp
xchg
adc
pop
xor
mov
and
(bad)
(bad)
jmp
and
mov
mov
adc
push
mov
mov
mov
adc
dec
dec
push
je
and
cdq
loop
mov
loopne
lock
and
call
pop
shr
mov
retf
fwait
jns
adc
out
(bad)
(bad)
(bad)
call
push
pop
mov
data16
leave
mov
inc
xchg
loope
loope
lahf
cmp
imul
out
(bad)
(bad)
(bad)
push
cmp
test
add
inc
xchg
push
adc
stos
cmp
dec
(bad)
dec
jle
jmp
jmp
sub
cmp
int3
rcl
cmc
xlat
clc
(bad)
(bad)
inc
pop
jmp
leave
mov
mov
jbe
cmps
lods
sub
pushf
into
cmp
dec
stos
outs
hlt
(bad)
mov
call
xchg
ror
push
push
sub
pop
cmp
(bad)
(bad)
(bad)
ffreep
fst
pop
inc
mov
ins
in
movs
cwde
int
jge
jge
leave
mov
push
xor
stos
push
dec
js
(bad)
(bad)
dec
outs
add
cmc
xor
push
lock
jns
clc
vxorpd
ja
ret
mov
scas
inc
loopne
(bad)
(bad)
dec
xor
outs
fimul
(bad)
sbb
loop
xor
lods
jb
cmp
add
scas
mov
fdivr
adc
add
(bad)
hlt
sti
lods
jle
cmc
jmp
sahf
cmp
cmps
pcmpgtd
cwde
jmp
jmp
or
lods
fdivr
ds
out
outs
ins
inc
stos
push
sbb
pop
pop
jnp
loope
jge
add
stc
test
and
or
movs
imul
pusha
and
jecxz
pop
mov
mul
or
jnp
push
out
cli
(bad)
(bad)
sti
into
xchg
push
push
push
adc
adc
xchg
pop
mov
call
jp
lock
(bad)
jmp
sbb
xchg
mov
inc
or
xlat
jecxz
sub
mov
mov
dec
(bad)
ficomp
mov
sbb
out
dec
mov
and
mov
movs
mov
(bad)
(bad)
(bad)
(bad)
fcomp
ins
ins
push
sub
loopne
loop
int
jmp
dec
jge
retf
pop
inc
inc
icebp
(bad)
push
sub
shl
jge
loope
jle
shl
push
popf
jne
sar
pop
inc
loopne
fst
inc
xlat
dec
sub
mov
(bad)
(bad)
call
pop
outs
mov
mov
pop
les
push
cmp
cli
sbb
scas
cmc
mov
mov
inc
fadd
or
pop
ja
aam
scas
scas
shl
mov
iret
sub
dec
dec
xor
int
(bad)
(bad)
inc
cmp
scas
push
mov
pop
mov
jl
arpl
pusha
dec
inc
cld
jmp
imul
xchg
inc
xor
std
sti
jp
jge
int3
es
into
pop
(bad)
(bad)
(bad)
call
jnp
ret
adc
cmp
xor
test
inc
cdq
retf
adc
out
iret
mov
cmc
mov
je
add
js
jnp
mov
repz
in
sub
mov
mov
fild
test
pushf
xor
vmovmskps
pop
int3
call
(bad)
jmp
xchg
mov
and
int
sbb
and
ins
sub
(bad)
push
jbe
movs
gs
jecxz
add
test
cmp
jne
push
mov
sbb
mov
loopne
jnp
cmps
(bad)
mov
push
mov
mov
stc
popa
movs
test
(bad)
(bad)
jmp
xchg
cdq
(bad)
cdq
gs
push
mov
jmp
push
inc
adc
mov
xor
mov
movs
push
js
cld
mov
dec
mov
jb
movs
imul
ss
(bad)
out
inc
mov
add
sahf
inc
mov
mov
push
lock
dec
add
add
int
cmps
add
pop
cli
add
dec
jmp
cmc
xchg
pop
les
scas
(bad)
xchg
mov
push
test
cmp
or
jle
aad
push
add
lods
inc
xchg
pop
ret
(bad)
repz
dec
ja
bound
jae
pop
jno
je
or
bound
call
sub
aad
sub
sbb
sar
shl
add
mov
mov
add
xor
clc
sahf
xor
ret
movs
inc
(bad)
(bad)
(bad)
dec
adc
shl
jecxz
adc
cmp
fs
(bad)
cmp
adc
jp
(bad)
(bad)
dec
test
pushf
pop
in
bound
add
pushf
adc
mov
in
dec
std
sbb
data16
pushf
dec
sti
jmp
xlat
mov
adc
(bad)
inc
add
adc
ins
xor
movs
sub
push
movs
and
stos
cmp
das
push
inc
mov
movs
fld
and
ja
(bad)
jl
and
dec
push
clc
inc
shr
retf
mov
call
sbb
loopne
inc
push
push
stos
(bad)
or
cli
or
outs
push
mov
js
cwde
mov
icebp
jg
test
jl
test
call
and
push
icebp
mov
jno
push
mov
(bad)
(bad)
call
hlt
popf
sub
xor
sahf
push
cdq
mov
sahf
stos
add
adc
rol
xchg
mov
call
push
(bad)
(bad)
(bad)
(bad)
js
mov
sbb
adc
add
jne
adc
inc
and
test
clc
dec
pop
xchg
popf
adc
mov
in
and
test
hlt
and
dec
and
movs
inc
or
inc
test
xchg
(bad)
(bad)
inc
or
mov
nop
inc
and
lea
xor
add
nop
xchg
aaa
pushf
push
nop
ret
mov
mov
ss
test
in
sub
adc
shr
and
push
mov
nop
xor
(bad)
cmps
sbb
xor
(bad)
shl
inc
(bad)
(bad)
dec
xlat
jbe
shr
xor
mov
addr16
mov
inc
cmc
jae
(bad)
(bad)
(bad)
call
sbb
mov
add
sar
push
push
dec
sti
lea
aas
imul
sub
pop
cmc
(bad)
jmp
mov
aad
sbb
mov
push
push
pop
inc
adc
push
sbb
push
loopne
das
adc
mov
stos
sbb
and
cld
(bad)
(bad)
jmp
add
fdivr
hlt
jge
mov
lods
push
push
sahf
mov
or
xchg
(bad)
call
sub
jmp
dec
scas
in
mov
xchg
dec
enter
(bad)
dec
repnz
cli
push
sahf
rcl
int
cmp
(bad)
(bad)
jmp
dec
pop
push
push
pop
cs
fwait
jl
icebp
int3
out
push
sub
jbe
push
fcom
(bad)
inc
test
jl
cmp
imul
xchg
push
push
rcr
not
push
ins
nop
daa
add
jmp
loopne
xchg
loop
mov
test
jne
or
push
(bad)
(bad)
(bad)
cmp
jnp
or
nop
mov
jns
dec
push
push
pop
sub
or
es
and
cmc
call
mov
in
rcr
sub
dec
mov
(bad)
(bad)
(bad)
out
int
push
iret
imul
push
data16
rcr
mov
and
sbb
or
test
(bad)
fcmovnbe
fsubrp
push
fidiv
inc
mov
cmc
(bad)
(bad)
call
jmp
adc
cs
cmp
sub
sbb
iret
popf
pop
xor
(bad)
jg
inc
(bad)
dec
xor
scas
add
mov
(bad)
(bad)
call
aad
mov
fild
pop
sbb
push
(bad)
mov
lahf
lea
sbb
dec
mov
call
popa
clc
aam
mov
sub
(bad)
mov
and
pop
pop
mov
fs
add
rcr
mov
scas
xlat
movs
mov
pop
cmp
aad
cmp
xor
pop
mov
sti
lods
aam
iret
dec
sbb
mov
pop
xchg
fisttp
mov
cli
ja
dec
retf
(bad)
or
and
jmp
in
push
jno
dec
in
pop
cmps
xlat
(bad)
(bad)
(bad)
out
jle
cmps
aad
jns
repnz
xlat
jno
mov
cwde
(bad)
loope
xor
cmp
ins
fisubr
(bad)
dec
lea
jecxz
retf
inc
fistp
add
inc
push
mov
mov
xchg
pop
enter
fild
cmps
scas
mov
sub
pop
out
pop
pop
mov
cmc
inc
(bad)
out
out
jmp
gs
add
(bad)
fisttp
cmp
jo
jp
push
data16
cmp
jp
les
sbb
stos
call
fisttp
pop
bound
mov
(bad)
jg
(bad)
jmp
adc
aam
fist
sbb
arpl
shr
and
iret
add
fxch
cld
mov
jmp
mov
(bad)
pop
push
loop
imul
sub
push
fiadd
sbb
iret
in
loopne
mov
aad
(bad)
inc
ss
iret
inc
shr
js
push
adc
and
int
(bad)
call
adc
mov
inc
adc
jp
popa
xor
rol
loop
jecxz
(bad)
(bad)
(bad)
dec
and
jmp
fimul
sbb
sbb
xchg
fcmovnu
add
ja
fild
sbb
mov
in
jmp
not
mov
push
jne
fwait
(bad)
(bad)
jmp
xor
enter
les
xchg
sub
js
fcomp
fcomip
mov
(bad)
mov
ins
or
mov
jmp
(bad)
jmp
add
push
mov
shl
(bad)
cmp
fwait
cmp
cmp
clc
mov
int3
dec
(bad)
dec
fdiv
inc
mov
test
(bad)
(bad)
(bad)
push
jbe
or
and
bound
mov
sbb
mov
mov
adc
sub
dec
push
test
cmp
push
shl
stos
jmp
repnz
cs
mov
popa
lods
or
call
inc
pop
cmp
loope
test
push
(bad)
(bad)
(bad)
call
cli
repz
mov
mov
add
xor
in
pushf
in
(bad)
(bad)
(bad)
inc
mov
scas
mov
xchg
add
mov
jo
jno
ja
test
cmps
fidivr
mov
(bad)
(bad)
(bad)
(bad)
sbb
mov
jl
ret
push
clc
mov
ficom
xlat
(bad)
mov
leave
mov
rcr
xchg
out
xchg
xor
(bad)
jmp
lods
jg
loopne
cli
mov
sbb
test
ret
adc
into
adc
pop
jno
pop
(bad)
(bad)
(bad)
jmp
sar
js
cmp
out
mov
or
movq
fmul
in
jmp
arpl
cmps
mov
jmp
pop
xchg
movs
add
fimul
rcr
je
sbb
adc
idiv
(bad)
(bad)
dec
int
sahf
enter
call
pop
and
enter
sti
std
fist
cld
(bad)
(bad)
call
and
bound
(bad)
and
fild
inc
test
je
movs
and
in
(bad)
and
ja
test
pop
popf
pop
pusha
je
jmp
movs
cmps
(bad)
(bad)
fistp
out
inc
in
aas
lods
cmp
scas
mov
push
lods
int
call
mov
jmp
mov
sub
pop
fiadd
and
es
jne
gs
(bad)
(bad)
(bad)
jmp
jmp
pusha
push
inc
adc
jecxz
push
or
xlat
inc
pop
inc
jmp
dec
cmp
fs
(bad)
(bad)
(bad)
(bad)
dec
xor
mov
cli
imul
add
(bad)
retf
pop
adc
mov
inc
adc
clc
ins
mov
cmp
lds
movs
sbb
xchg
jl
(bad)
call
into
push
xor
dec
in
add
in
cld
std
jp
inc
retf
mov
fcomip
jmp
cmp
xchg
dec
pushf
stos
pop
xchg
ret
inc
lods
xchg
sbb
sbb
popa
js
cmps
mov
ss
pop
jae
dec
jo
cmp
call
shr
mov
cmp
xor
or
lock
jns
mov
jp
and
cmps
pop
ja
ins
nop
leave
bound
jge
out
mov
sti
push
adc
jmp
dec
aam
fstp
lods
fwait
push
pop
xor
dec
hlt
int3
mov
sahf
sbb
(bad)
lahf
div
and
inc
and
mov
call
ror
mov
rcl
cmp
mov
jmp
xor
iret
std
(bad)
(bad)
dec
pop
xchg
push
cwde
out
sti
sub
pushf
mov
bound
xor
stos
jmp
add
and
or
(bad)
(bad)
jmp
(bad)
cwde
sahf
call
pop
aas
ins
mov
stos
jne
and
hlt
loope
sub
cmp
(bad)
jmp
gs
xchg
sub
rol
add
stos
popf
mov
pop
aaa
mov
dec
xchg
mov
mov
sbb
ret
imul
mov
or
push
jge
mov
ret
xor
(bad)
pop
mov
or
(bad)
(bad)
push
mov
or
daa
ds
mov
pop
stos
sub
out
(bad)
loope
fnstsw
mov
shl
shr
pop
enter
xchg
jp
inc
push
(bad)
inc
cmp
(bad)
psrld
hlt
retf
push
lods
imul
dec
mov
sub
jl
jecxz
leave
jbe
mov
xlat
xchg
inc
ret
das
pop
or
sub
inc
iret
pop
aaa
movs
dec
xor
ret
and
xchg
mov
mov
hlt
jmp
push
mov
and
and
in
call
(bad)
(bad)
dec
mov
mov
cmp
sar
mov
sub
cmp
iret
mov
(bad)
(bad)
(bad)
push
jbe
lahf
cmp
repz
je
movs
inc
lds
sub
and
lock
(bad)
(bad)
(bad)
mov
pop
xor
mov
fwait
push
into
stos
xor
push
xchg
cs
dec
push
adc
cs
aas
push
in
and
push
fnstsw
lods
mov
xchg
test
push
inc
(bad)
push
sub
jo
cmps
sub
mov
dec
(bad)
in
dec
(bad)
idiv
mov
xchg
jns
ss
mov
outs
mov
or
and
pushf
(bad)
(bad)
(bad)
dec
pushf
inc
push
dec
cdq
mov
fnsave
int
jg
sub
ffreep
or
neg
cmc
cli
retf
iret
and
xor
test
sbb
or
jmp
jmp
xor
and
imul
cdq
icebp
ret
in
shl
jmp
or
dec
or
sub
jb
repnz
call
jge
sub
movs
sub
aam
mov
fisubr
dec
pop
out
(bad)
(bad)
dec
pop
aam
stos
mov
test
xor
mov
addr16
mov
pop
movs
sub
ret
push
(bad)
into
fadd
ds
test
mov
push
nop
and
les
les
call
mov
push
call
outs
cmp
mov
sbb
out
jne
mov
aad
mov
xchg
jle
(bad)
(bad)
push
out
ret
repnz
lods
and
hlt
nop
retf
push
xchg
outs
leave
aas
(bad)
(bad)
(bad)
dec
mov
add
cmps
mov
jmp
pop
data16
xchg
movs
mov
enter
call
ret
xchg
jno
cmp
mov
dec
mov
fs
les
or
fcomip
(bad)
mov
cmp
scas
in
sbb
add
and
dec
jmp
mov
push
cmps
or
add
xchg
mov
fwait
retf
ret
xchg
(bad)
(bad)
out
fcomp
daa
mov
dec
push
sbb
inc
cs
iret
pop
(bad)
fistp
(bad)
cmp
addr16
and
add
sbb
rol
xchg
das
and
(bad)
jmp
pop
bound
(bad)
xlat
mov
adc
mov
sbb
push
cmp
xchg
fmul
mov
xchg
call
and
and
mov
mov
fcomip
(bad)
(bad)
(bad)
arpl
shl
cdq
mov
xchg
sub
test
push
in
cs
push
xchg
les
sbb
push
cmp
int3
jecxz
and
movs
cmp
mov
push
cmp
xor
dec
aam
ins
inc
add
(bad)
jmp
adc
fist
pop
xor
cdq
push
and
mov
das
or
(bad)
call
cld
cmc
les
fstp
dec
ss
stc
sbb
push
push
inc
lods
jb
sub
(bad)
(bad)
push
jmp
sbb
push
pusha
add
add
or
add
jg
into
fcom
fmul
add
add
fistp
and
jmp
inc
adc
xchg
and
pop
push
pop
push
adc
inc
int3
retf
sar
sub
cwde
test
cmp
cmp
mov
lods
(bad)
(bad)
jmp
call
in
add
mov
dec
mov
inc
xchg
dec
mov
adc
movs
test
fldcw
lahf
aaa
push
(bad)
(bad)
push
movs
stos
stos
and
inc
(bad)
repnz
dec
aaa
out
sahf
pop
(bad)
sbb
js
in
inc
loopne
xor
lods
inc
jne
(bad)
stos
xchg
pop
out
add
(bad)
mov
push
out
mov
dec
pop
dec
enter
stos
xchg
cmc
sbb
iret
outs
dec
int3
push
mov
push
fwait
inc
call
push
push
adc
arpl
fwait
mov
jmp
add
push
scas
ins
retf
fld
mov
jge
leave
gs
adc
(bad)
(bad)
jmp
mov
dec
aas
dec
xchg
sbb
adc
push
sbb
cmc
mov
push
(bad)
xor
(bad)
inc
dec
loope
pop
ja
mov
pop
(bad)
sahf
lds
jae
inc
ffreep
sar
push
xor
bound
push
inc
pushf
sub
xchg
inc
(bad)
(bad)
(bad)
mov
mov
fdecstp
gs
sub
xchg
imul
fs
xchg
cwd
xor
jne
out
hlt
stos
sar
add
sub
xchg
in
rcl
sbb
leave
mov
lea
mov
test
(bad)
fist
pop
push
xchg
mov
mov
out
xchg
sub
sbb
fs
xchg
ret
outs
dec
test
clc
jg
ja
ds
cmp
js
adc
ficomp
or
xor
(bad)
dec
fimul
out
test
mov
mov
cmc
mov
clc
ja
or
pop
clc
xchg
sub
(bad)
push
fsubr
cmps
rcl
adc
cmp
jge
or
cmp
(bad)
(bad)
push
cmp
cmp
ss
inc
into
inc
fwait
xor
and
mov
or
(bad)
xchg
gs
(bad)
(bad)
push
jg
mov
xor
movs
repnz
adc
sbb
xchg
push
stos
mov
dec
dec
pop
mov
xchg
fld
xchg
dec
jmp
push
push
test
(bad)
call
mov
sub
sbb
int
mov
sub
xor
add
scas
rol
xchg
push
and
sbb
in
adc
fadd
shl
mov
loope
cmp
loop
dec
mov
jmp
pop
pusha
inc
(bad)
jmp
cmps
lock
sbb
kmovw
repz
cmc
pop
(bad)
(bad)
(bad)
push
dec
xlat
dec
jle
out
das
test
push
sti
aad
in
es
in
inc
ja
(bad)
in
fistp
(bad)
(bad)
(bad)
jp
jns
mov
add
daa
xor
push
push
cli
pop
test
clc
jbe
call
lds
mov
cmps
aaa
jle
adc
pop
adc
rcl
iret
call
cmc
mov
dec
adc
and
adc
mov
mov
ficom
sahf
push
and
(bad)
(bad)
call
cmp
icebp
in
(bad)
mov
rol
cli
mov
imul
aad
cmp
jecxz
aaa
inc
arpl
inc
sahf
mov
loopne
pop
pop
add
(bad)
inc
adc
jno
mov
(bad)
mov
mov
push
popf
out
xchg
cmp
adc
(bad)
jmp
and
and
mov
mov
xor
dec
cwde
push
(bad)
(bad)
fcomi
fsubr
jl
xchg
and
dec
and
idiv
retf
es
cmp
(bad)
(bad)
call
pop
lea
mov
xchg
stc
sbb
neg
mov
mov
jbe
jmp
in
mov
imul
xchg
out
(bad)
mov
xor
nop
test
pop
push
cmp
sub
xchg
fld
mov
push
or
jno
in
xor
ror
ja
xlat
fld
pop
add
dec
call
rcl
bound
add
xchg
mov
mov
adc
stos
data16
scas
push
sbb
loop
icebp
(bad)
aaa
(bad)
(bad)
(bad)
inc
sbb
sub
adc
xor
adc
fs
jbe
test
cmc
sub
call
mov
out
neg
adc
mov
cs
(bad)
(bad)
(bad)
fistp
pusha
arpl
cmp
xor
in
imul
add
les
mov
jmp
cli
inc
cmp
or
cmp
cmp
jmp
test
jne
(bad)
push
cld
xchg
call
mov
sub
sahf
push
out
pop
dec
mov
pop
cmc
inc
cmp
jge
das
mov
popa
in
into
jne
sub
clc
(bad)
icebp
ins
lds
cdq
sub
mov
loop
gs
loop
mov
scas
push
pop
lock
cmp
popa
dec
retf
inc
xchg
push
sub
fisubr
(bad)
(bad)
jmp
test
cwde
xor
popa
inc
scas
pop
shl
add
add
int3
test
(bad)
(bad)
(bad)
push
cmp
lds
aaa
or
mov
xchg
cld
mov
jnp
jbe
icebp
and
(bad)
(bad)
call
xchg
out
mov
jb
xor
popf
lock
pop
or
adc
pop
(bad)
(bad)
call
dec
jmp
fs
dec
inc
hlt
mov
loope
xlat
jmp
pop
(bad)
(bad)
(bad)
inc
test
fwait
and
mov
(bad)
ja
jle
jo
pop
sbb
push
les
nop
cmps
(bad)
(bad)
(bad)
inc
int
mov
inc
cs
dec
adc
cmps
loope
ret
push
pop
sbb
leave
xchg
cdq
in
std
(bad)
(bad)
dec
jns
dec
mov
or
lods
mov
dec
call
test
mov
xor
mov
fcomp
mov
loope
adc
jns
hlt
call
dec
inc
xor
adc
cmp
js
sub
add
(bad)
(bad)
(bad)
fistp
xor
lods
and
xchg
xchg
add
mov
ror
mov
add
push
xor
mov
add
push
or
dec
lods
inc
ds
(bad)
(bad)
push
ds
call
jne
(bad)
clc
cwde
sub
out
fiadd
mov
idiv
mov
push
sbb
cli
(bad)
repz
stc
clc
or
mov
push
js
(bad)
(bad)
call
cs
sub
fsub
or
not
mov
dec
cmp
cli
cmps
or
(bad)
mov
(bad)
mov
ja
push
sti
or
xor
mov
and
int3
xor
mov
call
gs
adc
inc
cmc
pop
sub
push
cmp
sub
push
scas
(bad)
push
pop
cld
inc
mov
inc
(bad)
aas
es
popa
enter
inc
pop
pop
gs
cmps
in
mov
lock
shr
push
inc
dec
aas
sub
std
(bad)
int
sbb
(bad)
(bad)
(bad)
out
xor
jmp
and
div
(bad)
lea
xlat
fcmovnu
adc
cmps
push
jle
push
ret
ret
dec
(bad)
(bad)
(bad)
jmp
int3
and
test
fsub
jnp
iret
mov
xchg
outs
mov
mov
mov
jmp
out
jecxz
lods
and
movs
inc
cmc
ds
jmp
pop
lahf
push
adc
(bad)
(bad)
(bad)
(bad)
fstp
inc
test
fs
xor
neg
pop
cmp
push
dec
aas
ret
xchg
sub
xlat
adc
mov
pushf
dec
ret
ret
push
xchg
xor
add
mov
sub
lock
or
idiv
repnz
aad
stos
pop
(bad)
(bad)
(bad)
out
add
mov
ret
fcomip
mov
movs
aaa
jno
loop
in
mov
sub
jmp
adc
pop
out
cmp
jno
jge
xor
xor
test
push
mov
call
mov
mov
imul
(bad)
(bad)
(bad)
mov
inc
adc
(bad)
fstp
(bad)
jmp
jno
cmps
iret
sbb
push
push
loope
ret
mov
adc
daa
push
das
jo
jmp
arpl
adc
into
pop
mov
(bad)
(bad)
(bad)
jmp
setnp
sbb
dec
push
mov
out
jb
cmps
mov
adc
ja
pop
mov
cli
lahf
or
xchg
jecxz
and
xor
jg
mov
pop
cmp
push
sahf
sub
pop
fcmovnbe
xor
push
outs
fwait
sti
mov
pop
pop
jp
add
push
add
in
scas
add
movs
jle
(bad)
jmp
adc
xchg
mov
rcr
mov
fsubr
inc
pop
hlt
xchg
rol
retf
dec
add
(bad)
(bad)
(bad)
dec
sub
inc
sbb
push
icebp
cli
ret
xchg
(bad)
es
cmp
jmp
data16
fcomip
fisubr
xchg
call
xlat
push
out
xchg
jmp
shl
ja
sahf
test
xor
lea
(bad)
call
ins
scas
lods
add
jmp
pop
and
sahf
arpl
(bad)
adc
sub
mov
push
pusha
imul
lods
sbb
push
mov
aad
fdiv
sti
inc
adc
outs
je
xchg
cmp
imul
iret
inc
hlt
call
js
push
xlat
mov
rol
dec
xor
int3
cli
xchg
(bad)
inc
xchg
push
xor
pushf
lock
out
sbb
(bad)
sar
mov
mov
ja
call
xor
js
sbb
cmps
push
push
movs
mov
fwait
inc
pop
int3
dec
jbe
int
vmovapd
jmp
cmc
(bad)
outs
pusha
adc
(bad)
jg
xchg
frstor
jno
(bad)
mov
test
push
adc
mov
inc
dec
add
sub
add
adc
jne
movs
loope
(bad)
(bad)
(bad)
mov
les
rcl
movs
movs
and
cmp
add
fisttp
imul
xchg
sbb
(bad)
(bad)
mov
push
jl
push
adc
jge
clc
mov
mov
cli
ds
ss
mov
pop
and
(bad)
sbb
idiv
fwait
pop
cmc
add
cld
pop
mov
adc
pop
test
ror
(bad)
(bad)
(bad)
mov
or
out
leave
call
xor
xor
movs
mov
add
sbb
jne
ja
call
dec
inc
push
mov
jmp
cmp
inc
cmp
addr16
sub
dec
push
or
(bad)
(bad)
in
inc
mov
cdq
xchg
xor
inc
repnz
pop
loopne
jno
jl
jo
nop
mov
adc
push
pop
int
mov
ss
ror
xchg
ret
popa
mov
into
push
dec
(bad)
call
std
lea
scas
and
in
mov
inc
(bad)
cwde
lahf
lods
sar
(bad)
push
ss
push
add
mov
xchg
fisubr
movs
xor
je
push
cmps
mov
pop
or
push
push
sbb
mov
imul
call
fst
(bad)
call
call
stos
xchg
ja
rcl
fcmovnu
dec
pop
push
in
mov
or
lds
dec
or
scas
push
mov
push
push
dec
addr16
mov
(bad)
add
movs
jmp
inc
and
(bad)
(bad)
jmp
mov
jl
xor
(bad)
and
add
mov
aad
jmp
xchg
(bad)
(bad)
(bad)
push
sub
fidivr
ja
xchg
jo
mov
movs
jg
sbb
push
dec
push
test
(bad)
dec
fldlg2
mov
add
inc
cs
or
(bad)
in
(bad)
jmp
dec
data16
cmp
stos
dec
adc
fld
dec
sbb
(bad)
(bad)
call
ret
popf
fsub
mov
gs
rcl
cmp
push
pop
add
xchg
fidiv
lock
lahf
xchg
and
in
inc
or
pop
push
call
out
jne
aam
mov
lods
inc
inc
cmovle
cmp
cmp
out
outs
(bad)
call
add
jne
and
movs
pop
data16
pop
pop
push
and
xchg
repnz
clc
(bad)
(bad)
mov
cmp
out
je
lods
je
xor
add
fwait
mov
mov
enter
movs
and
(bad)
fstp
cdq
cli
push
xor
sbb
test
enter
mov
lods
pop
push
inc
add
cmp
push
sub
jbe
push
xchg
push
(bad)
out
ret
(bad)
or
xchg
test
pop
inc
(bad)
(bad)
(bad)
jmp
jp
sbb
xchg
outs
call
iret
int
aas
imul
ds
(bad)
(bad)
(bad)
inc
fwait
pop
cmc
cmp
cmps
mov
repnz
std
fdivr
dec
(bad)
fisttp
add
inc
cli
sub
pop
and
repz
out
inc
into
adc
xor
(bad)
(bad)
push
and
push
xchg
push
mov
inc
adc
mov
push
fucomip
lods
mov
sub
int3
pop
pop
mov
(bad)
jl
cmp
xor
sub
(bad)
shr
stos
(bad)
adc
shr
jl
shr
cmp
inc
xchg
push
mov
ss
sub
jmp
mov
cli
adc
jmp
sub
pop
int
jmp
xchg
xchg
mov
loop
push
(bad)
(bad)
(bad)
jmp
cmp
call
test
cmp
mov
(bad)
cld
dec
cmp
adc
fmul
(bad)
dec
ss
jno
out
clc
mov
imul
jmp
(bad)
mov
add
and
mov
repnz
ds
dec
and
(bad)
(bad)
jmp
mov
push
int3
sbb
jo
stc
xlat
inc
test
scas
sbb
sar
lea
mov
(bad)
(bad)
jg
jecxz
lods
jl
mov
mov
jg
jne
jno
iret
jecxz
call
bound
dec
or
(bad)
jg
jno
push
iret
mov
cwde
call
push
pop
imul
xchg
dec
outs
or
outs
clc
(bad)
dec
add
fimul
dec
add
bound
scas
jl
push
cmp
jmp
(bad)
(bad)
(bad)
push
call
xchg
push
enter
ror
scas
mov
fs
xor
mov
into
adc
jmp
iret
or
pop
mov
mov
mov
mov
sbb
push
(bad)
aaa
cld
call
and
inc
not
and
xor
xchg
lods
cmp
mov
xchg
mov
jl
ret
popa
lods
es
cmps
or
(bad)
(bad)
call
mov
movs
mov
imul
sti
mov
les
ds
js
jl
mov
(bad)
(bad)
(bad)
clc
mov
pop
inc
mov
jns
jecxz
ins
jl
imul
test
mov
pop
les
add
(bad)
jmp
mov
sbb
sub
out
mov
test
jmp
xor
cs
and
popf
mov
ins
adc
adc
ins
cdq
sub
or
cmp
(bad)
cmp
xchg
push
test
xchg
lahf
retf
mov
dec
cwde
jmp
adc
ret
mov
mov
fdivr
or
lock
pusha
jmp
inc
(bad)
mov
pop
test
pop
xchg
(bad)
xor
xchg
out
ret
sub
push
sbb
dec
dec
add
mov
sbb
stos
iret
and
cmp
mov
add
leave
dec
push
jmp
sub
dec
fnstenv
pop
aad
and
pop
scas
into
ds
stc
xor
sti
fisttp
jns
lock
push
loop
dec
xlat
jne
out
or
mov
or
inc
xor
xchg
cdq
dec
mov
cmp
pop
adc
(bad)
(bad)
inc
xchg
dec
movs
mov
fadd
push
mov
int3
mov
aam
pusha
sbb
xor
cmc
scas
add
pop
loopne
stos
pop
pusha
sbb
out
fsubr
sub
push
(bad)
(bad)
inc
jbe
data16
ret
fst
xor
jbe
push
aad
popf
jl
push
or
(bad)
cmp
sbb
add
retf
add
out
mov
inc
sbb
(bad)
call
loope
hlt
mov
and
scas
(bad)
fistp
test
push
jmp
(bad)
push
lds
retf
out
daa
cdq
shr
les
push
(bad)
(bad)
fcomip
push
or
and
loopne
jmp
mov
movs
in
mov
jmp
imul
leave
lods
push
data16
imul
xchg
repnz
(bad)
(bad)
call
scas
scas
mov
call
or
fsubr
inc
fst
pop
mov
jg
push
mov
fwait
add
cmp
mov
fbld
cli
pop
pop
pop
iret
mov
jae
push
mov
in
repz
or
jmp
fild
repnz
(bad)
jg
jmp
and
and
dec
add
xchg
jmp
outs
aas
fs
push
pop
or
lods
adc
push
sbb
dec
sub
(bad)
(bad)
call
sub
pop
ret
nop
loope
jbe
into
call
ret
out
cmovb
(bad)
in
(bad)
jmp
add
fwait
movs
lahf
adc
sub
jecxz
xchg
loop
mov
cmc
out
mov
(bad)
(bad)
inc
xchg
clc
inc
mov
push
out
ret
sub
sti
aaa
pop
aad
mov
in
cmp
cs
aas
das
fild
in
fst
dec
fadd
mov
(bad)
push
sbb
test
sti
and
xchg
push
call
add
cld
mov
xchg
ror
aam
test
movs
das
inc
loope
(bad)
mov
jb
mov
mov
mov
push
pushf
sbb
add
dec
outs
lods
jmp
mov
xchg
cmp
pop
add
call
movs
(bad)
(bad)
(bad)
jmp
or
sub
push
xchg
pop
xor
jp
mov
push
ss
scas
call
jg
(bad)
(bad)
jns
arpl
jns
out
into
in
sub
call
adc
adc
(bad)
(bad)
fcomip
sub
inc
ds
sbb
shr
sbb
jnp
iret
cmp
(bad)
jmp
cmps
jnp
push
shl
loop
push
or
pop
mov
arpl
fimul
outs
cdq
scas
sub
mov
(bad)
(bad)
jmp
pop
ds
pop
cmp
repz
sub
add
or
jg
sbb
cmp
jmp
mov
lea
cmps
sahf
enter
(bad)
fdiv
mov
stos
push
stc
imul
(bad)
(bad)
js
fdiv
xchg
pop
cdq
ret
sar
pop
cmp
iret
dec
add
cmp
add
(bad)
(bad)
(bad)
dec
jae
ja
pop
daa
into
add
sub
mov
lods
pop
xchg
(bad)
xchg
in
ss
lock
(bad)
call
lea
cmp
test
jmp
loope
push
(bad)
(bad)
jg
jl
mov
or
es
orps
aaa
push
push
nop
(bad)
sbb
jmp
and
sbb
mov
mov
pop
in
les
(bad)
jmp
(bad)
popa
stos
mov
push
jmp
jmp
pusha
mov
gs
add
jns
add
pop
hlt
xlat
gs
in
popf
jp
adc
pop
pop
push
scas
push
jle
out
(bad)
jmp
xor
jae
movs
fsubr
push
std
pop
inc
cli
jnp
sti
or
into
push
jne
imul
(bad)
(bad)
(bad)
jmp
pop
cmp
mov
push
jmp
mov
pop
mov
pop
js
icebp
cmc
imul
and
in
pop
clc
jmp
sbb
fsubr
add
shr
loop
mov
(bad)
(bad)
(bad)
jmp
xchg
fcomp
lea
jmp
mov
pop
cmp
out
cmp
push
(bad)
(bad)
(bad)
dec
(bad)
adc
int3
push
jne
inc
mov
xchg
inc
test
int3
or
cmp
jns
movs
sub
xchg
xor
jmp
xchg
adc
xchg
jne
fsub
ds
push
inc
cmp
(bad)
(bad)
jmp
stos
jle
cld
popf
cld
stos
popa
fst
es
test
sbb
rcr
jmp
mov
or
jns
ja
dec
xchg
ins
repz
adc
(bad)
popf
and
jge
mov
cdq
mov
xorps
and
arpl
aad
(bad)
(bad)
(bad)
inc
push
push
jns
and
stos
arpl
xor
mov
and
push
and
(bad)
ror
mov
scas
cli
pop
loopne
sahf
add
ja
and
jge
out
and
(bad)
dec
ret
mov
pop
ja
gs
movs
out
sbb
enter
lock
mov
mov
sar
(bad)
jmp
jmp
pop
cmp
xor
mov
dec
sub
loope
jmp
test
repz
aas
fcomp
push
xor
mov
mov
xchg
cmc
push
(bad)
(bad)
dec
push
cmc
ret
xlat
add
ja
aad
data16
pop
iret
and
dec
adc
(bad)
(bad)
(bad)
call
outs
std
sbb
int
jo
cs
ss
ins
leave
sub
enter
jmp
inc
clc
(bad)
fnstsw
clc
int
ficom
pop
retf
repz
ja
cmp
jmp
ret
sbb
je
rol
test
out
xor
jg
out
xchg
sbb
jnp
pushf
mov
inc
fnsave
loopne
mov
test
les
xchg
ret
ja
(bad)
(bad)
(bad)
jmp
jnp
jmp
mov
dec
outs
fild
xchg
inc
mov
mov
jmp
(bad)
jmp
and
push
or
xor
mov
in
fwait
imul
pop
loop
push
(bad)
stos
(bad)
jg
pop
push
pop
mov
test
sub
movs
jp
xor
lods
sub
dec
loope
(bad)
das
clc
lods
add
xchg
inc
add
sub
push
xchg
jne
push
push
ds
or
pop
sub
cs
or
call
xchg
ret
jmp
xchg
pop
jp
lds
and
retf
jl
(bad)
cmp
push
add
fdivr
or
inc
sub
add
push
call
mov
push
jbe
mov
push
scas
gs
or
leave
scas
clc
stos
fwait
call
pop
and
mov
retf
(bad)
(bad)
push
sub
mov
mov
cli
mov
popa
js
gs
icebp
cmps
xchg
(bad)
(bad)
call
mov
loop
cld
xor
(bad)
jp
fwait
xchg
mov
(bad)
fidiv
imul
(bad)
(bad)
(bad)
cmp
mov
ins
bound
push
inc
scas
and
inc
ins
mov
pop
adc
push
mov
test
out
inc
mov
mov
aam
cli
jmp
in
and
jo
mov
fbstp
enter
ret
(bad)
inc
dec
pop
mov
or
mov
push
xlat
or
das
add
cmps
out
cmp
mov
in
add
sub
xchg
sub
pop
dec
dec
(bad)
(bad)
(bad)
push
je
fmul
push
(bad)
les
iret
xor
lods
shr
mov
sub
jge
std
(bad)
(bad)
mov
fist
das
or
cmp
cwde
(bad)
or
xlat
jb
fbstp
(bad)
(bad)
push
dec
mov
xlat
sub
test
outs
mov
rcl
adc
jp
dec
push
(bad)
(bad)
(bad)
(bad)
jmp
add
sar
mov
test
lock
movs
cmc
and
xchg
adc
cdq
(bad)
mov
shr
sbb
sahf
mov
adc
push
popa
push
daa
inc
out
je
sub
dec
dec
xchg
outs
popf
rcl
mov
aam
dec
dec
pushf
or
add
inc
cld
je
pop
jecxz
rcr
cmp
int3
mov
mov
pop
aaa
jge
jmp
lods
inc
jae
cmps
(bad)
xor
xor
jmp
(bad)
inc
daa
jnp
mov
in
jp
jae
xchg
mov
sbb
xor
fs
gs
and
or
inc
add
pop
jbe
xor
pop
sub
(bad)
(bad)
call
sub
mov
in
rcl
sub
test
add
imul
leave
in
rcr
out
add
cli
push
adc
xlat
mov
call
(bad)
out
jo
adc
cmps
in
mov
or
(bad)
fist
cmc
aas
pop
stc
xchg
lods
adc
retf
(bad)
mov
dec
rcr
inc
in
scas
iret
push
iret
jmp
aas
lahf
outs
cmp
jl
ret
mul
mov
pop
enter
(bad)
(bad)
(bad)
jmp
sahf
enter
xor
mov
sbb
(bad)
pop
push
mov
adc
(bad)
(bad)
(bad)
call
jbe
dec
dec
jg
and
push
aas
pop
jg
icebp
outs
and
adc
(bad)
loope
and
(bad)
call
pusha
jp
ins
mov
fs
sbb
xor
loopne
push
cld
in
std
(bad)
call
push
call
add
inc
push
inc
xchg
sahf
jae
xchg
int3
int3
mov
(bad)
inc
in
cmps
mov
movs
nop
pop
(bad)
sbb
addr16
loop
jb
cmp
pushf
(bad)
(bad)
push
lahf
dec
std
push
imul
(bad)
jmp
jle
jl
pop
mov
xlat
or
lods
cmp
xchg
gs
xlat
push
or
dec
jnp
leave
mov
pop
clc
sbb
jmp
dec
scas
sahf
call
sbb
(bad)
xchg
sahf
push
pusha
inc
pop
pushf
adc
xchg
inc
mov
adc
mov
fmul
sub
jmp
int3
stc
bound
mov
bound
inc
dec
and
inc
cmp
cmp
(bad)
(bad)
(bad)
dec
xor
jmp
(bad)
loopne
pushf
mov
xchg
bound
sub
mov
jge
mov
stc
add
loope
dec
sub
pop
sub
sub
sub
(bad)
(bad)
jmp
cmp
cmp
addr16
sti
and
jl
pop
xchg
test
inc
mov
call
push
int3
jae
fidivr
xchg
fwait
inc
mov
out
pop
dec
(bad)
or
push
out
mov
dec
scas
mov
dec
out
in
sbb
sub
repz
(bad)
(bad)
(bad)
fld
fsub
cwde
pop
in
jbe
js
add
jg
push
cmps
and
inc
jmp
mov
out
jmp
jbe
lock
in
sbb
pop
xchg
cmc
fdivr
aad
sub
test
adc
xlat
push
rcr
mov
jno
pop
mov
shl
ja
ja
out
mov
pop
icebp
push
repz
fs
xchg
imul
mov
adc
fcomip
xchg
in
(bad)
call
or
js
mov
aam
lahf
push
retf
xlat
out
add
(bad)
(bad)
(bad)
in
jge
pushf
pusha
adc
dec
sbb
mov
fcom
dec
push
mov
push
push
jecxz
push
test
mov
call
cld
nop
xchg
jae
div
jmp
lds
and
stos
es
(bad)
jg
retf
(bad)
les
cmp
iret
aaa
jecxz
(bad)
mov
(bad)
in
repz
arpl
jmp
ins
sub
jne
inc
cmp
(bad)
(bad)
(bad)
jmp
ja
mov
pop
mov
shl
inc
retf
cmc
cmps
test
aaa
rol
sbb
mov
or
xchg
pop
aad
cmp
call
(bad)
jg
cld
ror
loope
fdiv
jp
hlt
dec
jmp
jge
dec
movs
aas
addr16
jmp
sar
add
cmp
mov
lds
adc
fidivr
cmp
add
adc
mov
mov
mov
popf
xor
test
int3
cld
(bad)
(bad)
call
or
imul
jmp
jbe
iret
cmp
pushf
cmp
push
out
fs
fs
inc
aad
(bad)
push
pop
loopne
je
sub
pop
sub
xor
test
pop
bswap
(bad)
mov
lea
push
mov
add
ret
(bad)
jbe
lods
or
cmps
jl
enter
(bad)
(bad)
(bad)
(bad)
jmp
sahf
jo
mov
pushf
pshufw
fwait
xor
arpl
(bad)
cwde
jns
inc
push
xor
jae
add
scas
addr16
in
jg
xchg
clc
inc
loopne
xchg
jecxz
sub
xor
ret
int
push
ret
(bad)
(bad)
jmp
ss
jl
inc
sbb
leave
repz
mov
xlat
pop
cmp
(bad)
cmp
js
iret
mov
pop
add
icebp
icebp
test
or
push
adc
daa
xlat
xchg
jbe
aas
mov
mov
pop
es
mov
es
push
push
arpl
(bad)
(bad)
(bad)
call
add
adc
inc
jle
gs
nop
dec
inc
cwde
adc
int
jl
dec
sub
xchg
into
adc
into
ds
ins
pop
cwde
pop
push
in
and
test
xor
hlt
pop
mov
or
popf
pop
hlt
(bad)
(bad)
cmp
in
inc
push
out
int3
lea
or
inc
dec
fidiv
push
xchg
(bad)
(bad)
push
jne
pop
mov
sahf
adc
sub
xor
int3
cld
push
xchg
jp
(bad)
(bad)
inc
pop
fwait
xchg
fucom
cmc
jmp
call
sbb
inc
add
pop
sub
ret
push
ins
mov
inc
lods
sbb
cmp
shl
pop
lods
xor
icebp
and
(bad)
xor
adc
mov
mov
test
sbb
or
(bad)
inc
mov
cmp
and
mov
sub
retf
mov
lock
(bad)
adc
sub
loopne
(bad)
(bad)
inc
hlt
mov
in
(bad)
sar
mov
mov
sub
lahf
jae
retf
cs
(bad)
dec
and
xor
and
mov
test
xchg
pop
stos
or
(bad)
call
jno
adc
pop
pushf
(bad)
pop
push
mov
lds
ret
jae
outs
aad
pop
das
aam
aaa
std
push
into
dec
mov
dec
pop
cmp
sub
(bad)
call
xchg
adc
or
mov
out
test
iret
hlt
xchg
push
retf
push
dec
clc
push
mov
aaa
xor
xchg
push
hlt
push
pop
test
inc
cmp
sbb
xchg
cmp
(bad)
(bad)
(bad)
jmp
cmps
pop
cmp
sub
inc
aad
shl
stos
add
or
pop
inc
push
jo
cld
jge
mov
pop
sub
(bad)
(bad)
(bad)
inc
mov
test
pop
mov
popa
adc
pop
push
or
into
pop
stos
adc
(bad)
(bad)
push
jge
fxch
call
loopne
dec
in
mov
xchg
xchg
jne
fist
mov
pop
(bad)
(bad)
(bad)
call
mov
repz
adc
inc
test
movs
xchg
imul
mov
clc
add
jne
push
push
out
icebp
lock
sar
jg
(bad)
jmp
iret
xchg
inc
sub
call
ins
rol
sub
mov
mov
cs
int
lea
out
xchg
or
dec
jecxz
scas
xchg
mov
xor
hlt
jno
movs
jae
(bad)
dec
pop
pop
xor
stos
imul
cmp
(bad)
(bad)
(bad)
call
nop
dec
adc
das
(bad)
sub
push
inc
retf
sub
mov
cmps
jb
xchg
imul
pop
mov
mov
(bad)
icebp
xchg
les
fst
(bad)
(bad)
jmp
xor
cmc
mov
popf
sub
das
mov
pushf
out
jmp
adc
out
mov
ror
or
das
clc
call
mov
fcomp
aas
aaa
lods
or
or
cmp
(bad)
aam
(bad)
inc
cld
stc
xor
adc
mov
sub
xchg
(bad)
neg
(bad)
jp
xor
in
or
and
pop
(bad)
sar
lahf
mov
push
(bad)
(bad)
(bad)
inc
cmp
adc
dec
mov
pop
jle
out
aam
mov
push
mov
jmp
scas
clc
pop
mov
icebp
mov
aad
addr16
jl
mov
mov
cwde
(bad)
(bad)
fcomip
sbb
push
fs
jno
adc
mov
cmp
in
dec
or
inc
jg
(bad)
dec
jo
inc
push
and
call
sti
pusha
add
mov
adc
xchg
add
scas
pop
lock
inc
cmc
jbe
loope
xchg
nop
pcmpgtd
sub
call
(bad)
push
sahf
hlt
retf
pop
cmc
jmp
cmp
sbb
(bad)
xchg
cmp
mov
loopne
xor
jo
xchg
sub
jle
pop
mov
add
mov
sub
jg
inc
inc
or
dec
out
and
xchg
addr16
mov
cmps
xchg
mov
(bad)
(bad)
(bad)
call
outs
aas
ins
nop
sbb
ret
inc
inc
jle
sbb
and
jp
pop
hlt
jmp
mov
ja
push
loope
movs
sub
cmp
xchg
(bad)
(bad)
(bad)
jmp
xor
inc
mov
stos
out
sub
fidivr
lods
mov
mov
add
cmp
sbb
mov
mov
jle
std
pop
push
aas
rol
pop
out
fdivr
(bad)
mov
(bad)
aam
cmp
dec
ss
aas
call
jo
imul
(bad)
inc
fild
xchg
cmp
fcomp
jmp
push
outs
imul
pop
xchg
mov
jbe
mov
std
push
xchg
dec
add
stos
fisttp
jl
inc
cld
or
lods
neg
dec
ffree
mov
sar
cmp
cmp
xor
scas
or
stos
outs
lock
add
cmps
sbb
jnp
or
aad
ja
add
sti
xor
test
sub
dec
pop
adc
cmp
or
(bad)
(bad)
js
jle
push
call
jo
scas
test
outs
fld
jae
(bad)
popf
jne
push
jnp
mov
(bad)
(bad)
(bad)
(bad)
jl
xor
pop
(bad)
out
aam
lods
arpl
in
sti
fidiv
or
xor
mov
(bad)
fadd
mov
scas
jp
cmp
and
sar
jmp
xor
lahf
iret
mov
adc
jbe
mov
pusha
pop
xchg
jg
and
pop
(bad)
(bad)
mov
in
sbb
loopne
jnp
ror
sahf
xor
push
inc
loope
(bad)
(bad)
(bad)
(bad)
mov
pop
cmp
out
aas
out
push
jp
push
xlat
fisttp
bound
test
lock
inc
xchg
test
push
in
cmp
fndisi(8087
(bad)
and
or
jo
xor
mov
int
jnp
xor
fcomip
push
cmp
out
cmp
adc
addr16
fs
mov
(bad)
(bad)
push
nop
fimul
test
bound
movs
imul
cld
daa
lods
fst
sar
mov
inc
xchg
cmp
scas
fbld
cmp
pop
xchg
mov
jns
xor
retf
(bad)
(bad)
(bad)
jmp
mov
mov
inc
cwde
popf
mov
movs
dec
int3
sub
cmp
je
(bad)
iret
xor
(bad)
(bad)
dec
cmp
push
ret
fcmovnu
inc
movs
or
dec
mov
sub
xor
(bad)
call
shl
and
lods
cmp
pop
or
mov
jne
stos
repz
das
cdq
(bad)
lahf
cld
(bad)
(bad)
push
add
out
sar
addr16
sahf
jne
ss
pushf
shl
aam
jecxz
ja
fstp
(bad)
(bad)
call
cmp
arpl
dec
pop
push
imul
inc
add
push
ins
(bad)
(bad)
(bad)
dec
in
test
pop
sub
ins
mov
xchg
and
das
mov
lods
popa
inc
pop
(bad)
or
test
(bad)
(bad)
(bad)
aas
sbb
pop
cmp
enter
mov
jmp
(bad)
(bad)
(bad)
push
and
test
jbe
ss
dec
and
retf
xchg
sar
xor
(bad)
jmp
vunpcklpd
push
call
outs
cmc
jge
(bad)
popf
std
jbe
inc
(bad)
(bad)
(bad)
push
mov
out
push
inc
or
dec
pop
mov
sbb
jo
int
sbb
mov
jmp
sub
sti
mov
sqrtps
call
loopne
fdivr
repz
imul
sub
lods
hlt
fnstsw
(bad)
(bad)
push
push
mov
lods
adc
mov
add
inc
fcom
or
mul
mov
xchg
es
stos
add
neg
fstp
ds
dec
stos
int3
cli
repnz
sbb
(bad)
(bad)
(bad)
(bad)
ficom
or
ret
mov
add
adc
sub
jbe
mov
enter
(bad)
jl
sub
daa
push
adc
aaa
adc
les
pop
dec
aad
movs
sub
cmp
(bad)
(bad)
call
sbb
xor
mov
xchg
pop
call
inc
out
in
dec
ds
(bad)
jmp
xor
inc
fld
xor
fadd
inc
cmp
iret
test
dec
(bad)
jmp
outs
movs
ficomp
clc
cmp
mov
adc
dec
add
jmp
mov
mov
ins
push
sbb
ror
sbb
add
pop
push
cdq
std
jp
sar
(bad)
call
inc
repz
jl
stc
inc
loop
push
pop
jo
and
xor
stc
mov
call
(bad)
jmp
movs
dec
(bad)
iret
stos
and
cmp
cmp
icebp
mov
stos
(bad)
call
cli
push
data16
arpl
clc
adc
adc
into
adc
(bad)
jmp
out
mov
ret
mov
fstp
das
dec
jne
(bad)
(bad)
inc
add
pandn
jne
dec
push
xchg
sub
mov
ins
jle
mov
pop
repnz
fdivr
dec
aaa
sbb
test
data16
add
mov
in
and
inc
sar
ja
mov
add
in
fnstenv
iret
popf
mov
jg
(bad)
dec
dec
inc
push
je
add
into
fnsave
cli
inc
cwde
out
dec
loope
(bad)
(bad)
(bad)
call
mov
clc
or
push
loope
aas
test
sbb
mov
xchg
ins
popf
icebp
adc
retf
fdiv
xchg
out
test
or
int3
dec
retf
pop
or
dec
dec
or
(bad)
inc
mov
sub
rcl
jb
(bad)
(bad)
mov
ja
push
enter
sub
push
cdq
mov
xor
ss
cdq
daa
movs
pop
xchg
jo
jmp
jecxz
dec
retf
mov
fwait
in
(bad)
cmp
loop
mov
add
ret
dec
pop
loopne
(bad)
aas
xor
cdq
pop
in
xchg
test
cmp
mov
(bad)
(bad)
(bad)
dec
icebp
pusha
retf
es
sbb
jl
movs
pushf
mov
push
scas
cli
daa
hlt
cmpxchg
outs
iret
mov
(bad)
(bad)
dec
shl
sbb
ja
test
xor
inc
sbb
(bad)
(bad)
jmp
and
je
jbe
push
add
and
or
mov
mov
adc
ror
jge
shl
fbld
sar
xchg
mov
retfw
fsubr
inc
mov
idiv
sbb
sub
test
sti
aas
std
fwait
inc
inc
in
push
test
rol
loop
in
movs
jo
mov
add
lods
jnp
imul
and
call
and
ins
and
pop
aaa
loop
mov
cmc
jl
jge
repnz
xchg
ds
js
call
fild
pop
adc
xor
test
mov
mov
sbb
jp
or
pop
mov
and
pusha
rcr
mov
rol
push
ss
mov
cld
dec
push
push
fs
add
sub
sbb
(bad)
jmp
mov
mov
and
xchg
les
das
sbb
jl
adc
add
std
(bad)
dec
addr16
fucomp
scas
xchg
cs
(bad)
iret
(bad)
sbb
dec
and
push
jns
or
(bad)
(bad)
jmp
mov
push
lds
sbb
arpl
dec
jns
mov
aaa
cld
outs
sub
jge
mov
jne
fstp
inc
js
stc
lock
(bad)
jmp
mov
cmps
movs
call
std
dec
lock
sub
cmp
rcr
sub
add
scas
pop
and
outs
int3
mov
jbe
or
inc
(bad)
(bad)
inc
xor
adc
xlat
jge
mov
ss
adc
jnp
jbe
sbb
cs
or
mov
popa
mul
mov
jno
inc
loope
inc
sub
fsubp
aas
and
xor
inc
lods
ret
sub
jmp
movs
(bad)
push
int
jnp
(bad)
mov
or
test
cmp
jg
(bad)
push
mov
in
jmp
or
imul
dec
loopne
xchg
cmc
pop
fstp
call
fistp
es
psrad
cld
jb
push
pushf
xor
fwait
dec
inc
mov
and
inc
xchg
xchg
imul
out
push
mov
aas
lea
jg
and
ja
fbstp
jge
div
hlt
pusha
std
mov
xchg
fidiv
jns
jns
cmovge
test
std
test
mov
mov
sbb
xchg
cli
aas
cmp
gs
in
lahf
sar
jl
cld
ins
fdivr
stc
pop
sti
jmp
mov
inc
jl
stos
dec
sbb
mov
out
dec
loopne
(bad)
dec
mov
outs
in
aam
(bad)
enter
std
lea
xchg
dec
(bad)
(bad)
call
out
pop
mov
adc
cmc
(bad)
pop
or
sbb
mul
(bad)
sti
jecxz
lock
std
(bad)
fcom
cmps
stc
inc
adc
sar
mov
and
jecxz
repnz
rep
pop
(bad)
(bad)
aas
inc
pop
jle
jle
ins
pop
leave
sub
sar
mov
test
arpl
in
aas
inc
out
in
mov
pop
ficom
(bad)
fwait
sti
or
mov
mov
mov
mov
mov
xchg
clc
and
hlt
lds
enter
mov
fnstenv
mov
mov
add
jne
jmp
test
fistp
das
out
push
cmp
jno
fdiv
mov
xor
int
dec
push
les
lock
(bad)
call
sub
and
js
loop
sub
xchg
mov
leave
movs
inc
in
data16
dec
fdivr
(bad)
dec
movs
cwde
add
jnp
shl
pop
cld
and
into
pop
shl
xor
ins
sub
sbb
mov
loopne
pop
pop
xor
test
or
popf
pop
cmp
xor
add
jge
lock
(bad)
xchg
inc
retf
in
ret
ds
daa
(bad)
(bad)
(bad)
mov
pop
loopne
pop
mov
out
fistp
out
fsub
call
fidiv
in
rcr
test
inc
out
push
(bad)
push
inc
pushf
push
xor
loopne
fistp
pushf
or
aad
add
or
pushf
loope
ja
(bad)
ds
movs
mov
inc
cld
in
ret
into
jno
cli
push
mov
pop
mov
mov
(bad)
dec
retf
(bad)
scas
outs
push
jg
scas
cmps
(bad)
rcl
fcomi
jns
ret
jbe
adc
xchg
fild
jmp
push
pop
sar
shl
iret
out
ret
test
(bad)
dec
pop
sbb
aaa
mov
loop
call
shl
pop
xchg
jle
push
je
imul
sub
lahf
inc
push
aaa
xor
sub
call
mov
aad
push
sar
push
outs
aad
test
mov
mov
(bad)
(bad)
(bad)
jmp
mov
sti
sub
xchg
ficomp
push
dec
pusha
cs
push
mov
aad
(bad)
(bad)
fcmovnu
push
nop
xchg
cmp
dec
or
call
jecxz
fidivr
imul
mov
popa
aad
xor
xchg
jmp
adc
neg
cmp
pop
and
inc
ds
cmp
or
stos
jb
fwait
hlt
xlat
dec
adc
sbb
out
xor
ret
push
dec
loope
std
(bad)
(bad)
jmp
pop
daa
or
retf
out
test
jge
cli
inc
or
ds
xchg
push
sbb
(bad)
(bad)
call
sti
adc
inc
jno
shl
jae
stos
aad
test
rcr
fwait
sar
out
pop
lock
dec
mov
les
inc
js
inc
fstp
ss
cmc
fiadd
(bad)
mov
daa
arpl
add
add
jp
sbb
ficomp
jle
adc
in
fcomip
fwait
and
sub
jnp
pushf
and
xchg
inc
cld
xor
inc
(bad)
dec
pop
cdq
dec
add
jo
gs
xchg
xchg
sub
push
out
das
pop
pop
xor
daa
mov
add
pop
pop
repz
jecxz
push
mov
stos
pop
shl
pop
sar
(bad)
(bad)
call
cs
inc
das
mov
(bad)
xor
cmp
jnp
or
mov
jb
pusha
inc
aas
pop
icebp
dec
xchg
les
dec
je
cld
loop
cmp
sahf
add
adc
lock
(bad)
fild
rcr
aam
push
or
sbb
call
pop
(bad)
(bad)
(bad)
int3
xor
inc
pop
imul
hlt
arpl
jno
nop
clc
in
(bad)
(bad)
(bad)
js
into
and
dec
jmp
ins
jnp
xchg
clc
jb
inc
mov
(bad)
jg
xchg
sbb
adc
shr
sbb
das
mov
ret
enter
(bad)
(bad)
(bad)
jmp
icebp
in
test
adc
cmp
mov
sbb
sub
xlat
fwait
(bad)
(bad)
dec
mov
loop
ins
fabs
add
ss
push
movs
jne
daa
inc
(bad)
(bad)
jmp
out
scas
scas
(bad)
jo
mov
sbb
out
ret
iret
mov
cmp
xor
imul
inc
push
or
lds
push
pop
loope
bound
rcl
cmp
dec
movs
push
mov
mov
xchg
hlt
nop
stc
aas
jl
pop
fcomip
(bad)
jg
aaa
xchg
cmc
pop
pop
daa
push
pop
mov
shl
or
xchg
(bad)
(bad)
inc
jle
movs
push
enter
push
ja
jge
pop
push
pop
aam
aad
popf
retf
movs
(bad)
adc
(bad)
(bad)
cld
pop
sub
bound
add
push
mov
inc
test
loope
ret
mov
pusha
test
test
pop
repnz
cli
dec
ds
lods
cmp
and
pushf
pushf
in
xor
(bad)
(bad)
(bad)
(bad)
jmp
clc
repz
inc
dec
popf
jg
add
aaa
fdiv
rcl
jp
sbb
daa
dec
pop
mov
cli
retf
(bad)
push
sub
icebp
outs
mov
(bad)
adc
inc
xchg
cmps
inc
ins
pop
(bad)
(bad)
(bad)
call
sbb
ins
push
push
sub
mov
aad
pop
xchg
(bad)
inc
mov
jbe
nop
rcl
std
dec
inc
or
mov
mov
or
or
outs
add
(bad)
jmp
ss
xchg
and
lods
and
cwde
retf
stos
stos
enter
dec
and
nop
add
inc
and
adc
sub
ret
(bad)
jl
(bad)
mov
fs
inc
inc
ret
dec
lds
pushf
stc
push
sub
jnp
adc
(bad)
(bad)
jmp
adc
add
sub
or
cmp
jmp
rcl
(bad)
(bad)
jg
mov
sub
xor
cmp
les
lds
push
xchg
xchg
sbb
cld
(bad)
(bad)
(bad)
mov
and
xor
fmul
aad
inc
shl
cmps
xor
call
or
and
addr16
or
(bad)
(bad)
(bad)
dec
hlt
push
mov
(bad)
pop
stc
mov
sub
div
clc
(bad)
and
and
cld
call
sbb
ret
mov
mov
in
adc
adc
or
in
rol
(bad)
call
push
mov
pop
mov
sbb
cwde
mov
push
test
js
cmps
fldenv
cwde
mov
inc
or
test
rol
pop
(bad)
(bad)
(bad)
call
pop
mov
xchg
popa
push
(bad)
add
mov
adc
adc
(bad)
sbb
or
mov
bound
movs
push
(bad)
mov
sub
push
jmp
cmc
imul
dec
inc
xor
(bad)
(bad)
(bad)
dec
push
repz
dec
push
add
cmp
xlat
adc
xchg
mov
cdq
sub
and
(bad)
(bad)
cmp
sub
dec
fcomp
ds
aas
xor
dec
adc
cmp
dec
mov
push
cwde
test
xchg
cmps
push
int3
(bad)
push
mov
and
xchg
cmp
int
sbb
inc
mov
imul
hlt
dec
sbb
hlt
das
pop
inc
cmps
mov
(bad)
jmp
lds
jmp
adc
push
cdq
into
pop
mov
data16
cmp
(bad)
(bad)
push
mov
jbe
adc
sub
idiv
out
xor
bound
(bad)
mov
sub
or
mov
addr16
cmps
hlt
imul
sbb
push
mov
dec
xlat
sahf
sbb
pusha
push
data16
ds
push
jle
jb
outs
push
in
pop
xor
(bad)
(bad)
jmp
mov
lods
push
lea
cmp
rcl
(bad)
sub
xchg
jno
sbb
test
fwait
(bad)
(bad)
jg
xchg
push
(bad)
ror
sub
push
cmp
test
push
sbb
adc
and
rcl
mov
idiv
jno
jp
jne
adc
scas
cmp
out
mov
ret
sub
js
or
adc
lock
test
jmp
sub
push
xchg
jecxz
enter
(bad)
out
or
dec
add
mov
mov
imul
mov
(bad)
scas
aaa
adc
ret
int
cwde
xchg
pop
and
xchg
push
cli
push
cli
aaa
lods
fidivr
call
out
pop
pop
test
mov
xor
pop
or
adc
pop
xchg
pop
dec
xchg
mov
das
jg
(bad)
push
(bad)
jo
pushf
int
div
xor
inc
mov
sub
(bad)
(bad)
inc
bound
cmp
jl
mov
mov
sub
push
and
mov
dec
pop
push
lock
(bad)
jmp
das
cld
sahf
std
in
jmp
hlt
retf
mov
(bad)
sbb
test
pop
xchg
fdiv
cmp
(bad)
(bad)
call
mov
mov
push
cli
jnp
xchg
dec
cld
mov
(bad)
cmp
mov
fidiv
sub
fstp
mov
mov
cmp
xchg
ficom
out
je
(bad)
(bad)
push
sub
test
test
jle
jecxz
sbb
sbb
es
inc
lds
mov
fstp
adc
(bad)
cwde
ja
mov
fimul
inc
out
lods
call
fld
mov
clc
lahf
(bad)
push
mov
push
addr16
fdivrp
dec
inc
dec
sub
arpl
push
inc
and
shl
(bad)
(bad)
dec
mov
or
mov
data16
out
sbb
mov
jmp
jmp
dec
arpl
mov
inc
jae
inc
sub
(bad)
(bad)
call
sub
movs
jb
out
mov
(bad)
cmc
cmps
test
mov
(bad)
(bad)
mov
fcomp
movs
dec
fistp
out
mov
jge
jns
ds
call
call
sahf
cmp
popa
dec
jle
mov
rep
xor
(bad)
repz
lahf
or
or
call
ins
jns
cwde
test
(bad)
adc
stmxcsr
call
pop
les
lock
int3
aad
aad
fdiv
fdiv
ret
dec
adc
mov
call
fwait
sbb
outs
loopne
push
and
cdq
and
xor
sub
mov
sbb
(bad)
inc
mov
lds
pop
push
jge
push
cmp
rol
and
sub
mov
jmp
(bad)
jl
pop
jns
aaa
or
jo
ja
xchg
or
gs
pop
xor
(bad)
retf
fisub
(bad)
dec
dec
xchg
add
or
sbb
sub
xchg
lahf
push
push
loop
xchg
or
xchg
xchg
std
(bad)
(bad)
(bad)
jg
aas
je
xchg
ret
in
cdq
cmp
loope
sub
inc
daa
mov
mov
cmp
and
lock
xchg
mov
data16
xchg
(bad)
(bad)
fisttp
inc
mov
and
jmp
dec
scas
fidiv
adc
mov
mov
inc
(bad)
sti
test
loopne
jg
dec
aam
dec
ins
mov
push
(bad)
mov
js
idiv
cmp
inc
(bad)
inc
pop
mov
push
adc
retf
mov
in
pop
mov
outs
(bad)
jmp
js
loop
imul
xchg
cs
dec
clc
mov
fild
scas
pop
rcl
jmp
xchg
int
iret
inc
scas
(bad)
call
retf
jge
clc
imul
xchg
inc
mov
mov
(bad)
(bad)
dec
adc
outs
sbb
lods
cmp
fwait
push
(bad)
(bad)
and
mov
(bad)
(bad)
call
adc
push
mov
scas
xchg
aad
rcl
jl
fist
add
push
aam
into
dec
mov
jg
push
loopne
out
shr
mov
clc
ss
jmp
aaa
std
(bad)
inc
xchg
cmps
jo
add
or
add
cmp
add
(bad)
call
inc
leave
pop
dec
inc
mov
mov
imul
(bad)
(bad)
(bad)
push
sbb
test
in
add
hlt
icebp
popa
dec
or
test
xor
imul
ret
(bad)
inc
jne
(bad)
push
fnstsw
leave
push
retf
fwait
dec
or
sti
ja
(bad)
retf
das
loop
jge
clc
(bad)
(bad)
push
pop
test
(bad)
dec
retf
xor
push
mov
out
add
pop
mov
(bad)
mov
loop
movs
push
mov
rol
mov
or
push
sahf
imul
cmp
fwait
xor
jle
(bad)
pop
fs
mov
xor
sar
mov
cwde
scas
stos
icebp
in
pop
ins
bound
mov
mov
inc
mov
jg
and
add
jle
imul
or
(bad)
mov
pushf
enter
sbb
rcr
jg
xor
fs
shr
out
add
cli
mov
lods
cmp
add
repz
(bad)
(bad)
push
cmp
lods
cmp
scas
ins
repnz
ins
test
sub
add
sbb
sub
out
hlt
(bad)
inc
(bad)
out
sar
jbe
and
sbb
mov
cdq
leave
sub
out
clc
dec
cmc
pushf
cmp
call
xor
(bad)
jg
jmp
sub
xchg
add
dec
out
xor
jg
popf
les
stc
loope
call
jmp
ja
and
inc
imul
push
addr16
sbb
sar
(bad)
(bad)
call
cmp
in
ds
jo
test
ins
xor
out
inc
arpl
xor
inc
mov
inc
add
sbb
cmp
add
add
stos
(bad)
jg
test
xor
xchg
cmp
mov
jb
bound
(bad)
(bad)
dec
push
aam
sbb
aad
mov
xor
ins
jne
jge
push
dec
movs
or
push
fmul
mov
pop
imul
sar
and
jbe
lods
sub
loop
icebp
jp
cmp
ja
(bad)
(bad)
call
add
lahf
lahf
sbb
mov
int
jle
mov
sti
js
mov
jmp
(bad)
fisttp
nop
xchg
jge
push
das
fcomp
jle
lea
inc
mov
(bad)
jmp
ins
movs
cmp
int3
out
pop
cs
pushf
(bad)
dec
mov
int
lea
push
lahf
pop
in
mov
(bad)
(bad)
call
mov
mov
or
repnz
stos
ins
push
pushf
or
pop
ret
push
mov
out
ins
xor
in
mov
mov
scas
xchg
adc
icebp
push
rcr
pop
(bad)
sti
and
in
sub
cld
imul
and
frstor
push
push
fcom
and
mov
add
jg
cli
ins
inc
das
out
test
imul
xchg
int3
pop
lock
mov
cwde
ret
mov
add
stc
sub
inc
sar
fwait
test
in
mov
leave
mov
ret
dec
cmps
das
cmp
call
scas
push
dec
push
cli
jns
dec
sbb
push
sbb
cmp
(bad)
(bad)
(bad)
jge
jnp
mov
sub
pop
push
fsubr
neg
mov
pop
lahf
and
jmp
enter
cmps
hlt
dec
mov
int
outs
jnp
popf
cmp
push
add
inc
(bad)
mov
push
mov
sub
ror
and
and
(bad)
(bad)
cmp
in
cwde
std
(bad)
ds
or
sub
lea
mov
in
push
mov
or
push
pop
mov
clc
call
ret
mov
das
xchg
inc
mov
jns
fcmovnbe
fcomp
xlat
test
pop
jmp
or
rcl
dec
sti
jnp
pop
ror
ret
shl
jmp
je
sahf
pop
lahf
sbb
sbb
add
add
add
cmp
loopne
inc
and
jg
call
sbb
mov
ins
xor
jp
(bad)
(bad)
jg
mov
or
std
lock
inc
sbb
and
fidivr
cmovg
sahf
push
or
(bad)
(bad)
jmp
xchg
sbb
shr
(bad)
scas
adc
pop
imul
jbe
(bad)
(bad)
push
(bad)
in
std
ins
dec
gs
adc
stc
jecxz
xor
aaa
jno
add
(bad)
fbld
mov
mov
lods
into
cli
cld
inc
dec
hlt
cmps
mov
(bad)
ds
pop
les
je
scas
pushf
push
lods
jmp
(bad)
fnstcw
in
in
mov
test
pop
mov
or
fadd
(bad)
(bad)
push
inc
or
pop
punpcklwd
xchg
jp
test
pop
pop
mov
mov
jg
(bad)
(bad)
(bad)
jmp
pop
imul
pop
icebp
mov
fcomi
aas
inc
(bad)
test
pop
jecxz
mov
(bad)
call
fcom
inc
cmc
push
mov
loope
push
push
pusha
pop
jl
fnstenv
ds
push
shl
addr16
adc
sbb
pop
pop
test
lods
cs
mov
adc
(bad)
(bad)
jmp
adc
std
imul
pop
or
add
cmps
lods
push
loopne
fmulp
cld
(bad)
(bad)
dec
sahf
jno
xchg
cwde
push
xor
out
and
dec
sbb
or
pop
mov
push
push
cld
call
loope
ret
shr
jae
out
not
push
jmp
call
call
xor
mov
pop
(bad)
push
ins
inc
xor
push
ret
or
jne
sub
scas
out
or
add
xor
jmp
fnstsw
adc
sbb
(bad)
outs
loop
ds
mov
(bad)
jl
pop
add
mov
out
sub
pop
jg
imul
mov
xchg
nop
cmp
push
cmp
(bad)
fld
(bad)
jle
add
ror
xor
sbb
or
inc
push
call
(bad)
mov
(bad)
dec
ret
adc
stos
(bad)
lods
add
call
aaa
push
mov
dec
cmp
ret
fst
pop
leave
fadd
dec
out
ins
fdiv
outs
inc
push
sbb
call
scas
mov
stos
out
shr
or
jmp
movs
mov
(bad)
(bad)
dec
stos
inc
cmps
push
jge
jl
adc
sbb
sahf
cli
outs
jecxz
xchg
add
push
jmp
(bad)
(bad)
call
cli
jge
(bad)
lds
cmc
test
mov
mov
enter
repnz
adc
sti
cmp
clc
out
or
mov
or
cmp
jns
stc
push
and
jmp
mov
mov
cmp
int3
imul
adc
out
adc
and
(bad)
(bad)
fcomip
or
add
(bad)
fnstcw
push
dec
divps
jmp
inc
call
mov
faddp
sub
inc
cmp
adc
fistp
fwait
adc
imul
xchg
jb
mov
icebp
lock
add
arpl
mov
je
cmp
sahf
rcl
dec
cmps
add
(bad)
(bad)
mov
and
rol
mov
jp
leave
mov
loope
clc
gs
(bad)
(bad)
fcomip
pop
ins
sbb
test
in
js
inc
in
inc
pusha
test
adc
sub
push
push
aad
(bad)
(bad)
(bad)
(bad)
jmp
call
popa
lahf
xchg
sahf
mov
mov
and
adc
adc
jno
ja
call
push
out
shr
push
xchg
mov
cli
cs
movs
fdivr
jmp
imul
jmp
(bad)
xchg
arpl
lods
pusha
inc
push
and
(bad)
(bad)
fild
mov
movs
or
inc
test
mov
or
mov
mov
imul
(bad)
(bad)
inc
push
pop
sub
(bad)
add
mov
enter
adc
(bad)
(bad)
dec
les
rcl
mov
and
adc
inc
bound
pusha
add
push
(bad)
(bad)
fcomip
xchg
sub
pop
shr
jo
sub
dec
and
mov
cmp
lahf
sub
mov
push
out
pop
fs
ret
jmp
cwde
mov
pop
xchg
xor
xor
sete
inc
sub
add
(bad)
(bad)
push
sub
jmp
and
push
add
cmp
ins
les
shr
(bad)
dec
(bad)
(bad)
inc
leave
or
pusha
mov
clc
xor
inc
scas
int3
scas
pop
sub
jnp
pop
xor
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
cmc
popf
(bad)
dec
sti
xor
arpl
stos
(bad)
push
inc
movs
shl
sahf
sbb
push
movs
mov
cmc
push
pop
cmp
sub
nop
test
jns
cmp
ja
cdq
scas
(bad)
(bad)
(bad)
inc
jbe
sbb
mov
(bad)
sti
and
mov
add
mov
pop
xchg
fiadd
jmp
mov
push
mov
mov
aaa
jl
(bad)
(bad)
out
clc
push
push
mov
dec
jge
jl
mov
in
loop
add
movs
push
inc
xchg
call
out
pushf
test
dec
dec
inc
mov
in
push
stos
push
cmp
ds
cs
(bad)
adc
iret
xchg
stos
(bad)
adc
mov
(bad)
add
stos
adc
leave
bound
(bad)
sbb
jg
push
pusha
pushf
pop
sahf
mov
(bad)
jmp
mov
pop
sbb
imul
cmps
jge
pop
lock
(bad)
jge
(bad)
cs
mov
addr16
jp
(bad)
aad
fdiv
gs
(bad)
jmp
les
dec
std
push
push
shr
inc
mov
lods
pushf
pop
jo
push
call
jb
fld
mov
out
ss
sub
sub
add
adc
aad
or
mov
xchg
aam
fdiv
cwde
cmc
jmp
(bad)
js
leave
lahf
push
outs
fcom
movs
add
daa
mov
cmp
test
xor
(bad)
in
(bad)
(bad)
dec
rcr
test
adc
cmp
cmp
mov
push
mov
or
(bad)
call
add
popa
(bad)
mov
sub
call
adc
fidiv
and
sbb
iret
pop
xor
jmp
sar
shr
mov
push
adc
jmp
call
jmp
jmp
cli
mov
ret
mov
dec
pusha
imul
(bad)
jmp
(bad)
adc
mov
pop
shrd
inc
mov
mov
(bad)
(bad)
(bad)
jg
jge
push
retf
int
xchg
inc
or
popf
mov
adc
mov
mov
xchg
(bad)
(bad)
(bad)
call
int
sub
ret
cld
(bad)
in
movs
gs
jo
sub
pop
xchg
pushf
(bad)
fnstcw
popf
loopne
push
xlat
(bad)
in
(bad)
(bad)
jnp
sar
dec
pop
adc
out
ret
add
mov
lods
mov
(bad)
out
mov
std
and
push
in
loopne
lock
sub
inc
push
xchg
out
movs
lods
mov
add
push
dec
jo
mov
out
out
out
popa
into
loop
loope
(bad)
(bad)
inc
outs
pop
cmp
or
cmp
jle
jo
cmp
cld
cdq
push
fiadd
(bad)
call
cmps
sbb
cli
mov
ss
test
idiv
jbe
jle
xor
loope
(bad)
call
ret
fistp
mov
push
(bad)
fwait
xchg
div
int
dec
std
(bad)
(bad)
mov
dec
daa
lahf
mov
dec
outs
jbe
mov
hlt
imul
add
pop
push
dec
in
fcomip
call
rcl
mov
cmp
out
mov
call
sbb
loopne
out
loopne
(bad)
(bad)
inc
xchg
loopne
pop
std
dec
aaa
js
icebp
lods
scas
sub
pushf
jnp
and
cs
(bad)
dec
jnp
bound
shl
out
add
fld
daa
push
pop
cmp
(bad)
push
stos
(bad)
sbb
(bad)
sahf
jnp
inc
popa
pop
stos
cwde
test
adc
or
push
call
loopne
dec
cdq
xor
xchg
aas
cs
test
fdivrp
out
mov
in
jmp
add
pushf
jo
cmp
lods
jge
mov
lock
push
mov
loope
inc
lods
sub
push
fldl2e
jmp
fbld
je
stc
out
mov
mov
(bad)
(bad)
dec
sub
cmps
mov
push
in
(bad)
(bad)
mov
into
(bad)
mov
sbb
(bad)
cld
out
cli
(bad)
jge
sub
js
lods
inc
ja
out
cmp
inc
div
call
scas
mov
loope
gs
clc
jnp
retf
ret
or
jp
popa
icebp
(bad)
fcomip
call
jmp
std
pop
sahf
mov
pop
cmp
add
(bad)
(bad)
call
shl
test
mov
or
adc
retf
mov
dec
or
fld
(bad)
(bad)
(bad)
push
mov
jo
mov
mov
mov
xor
push
pop
lock
(bad)
(bad)
cmp
adc
inc
adc
mov
pop
pop
xchg
add
fldz
mov
jmp
test
in
inc
xchg
stos
mov
(bad)
(bad)
jg
cmc
scas
(bad)
jbe
mov
je
mov
push
sbb
arpl
and
xor
jge
retf
pop
not
(bad)
mov
loop
cmp
hlt
data16
js
out
popf
ret
jne
call
data16
sbb
je
xlat
xor
sti
push
bound
shl
mov
lock
pop
ret
mov
pop
inc
push
loope
jg
fist
pop
in
imul
(bad)
(bad)
dec
ret
adc
cmp
mov
adc
ds
(bad)
(bad)
(bad)
jmp
xor
out
xor
or
jno
sub
lock
jecxz
xor
pop
jl
(bad)
jmp
test
stos
lahf
dec
push
inc
pop
jle
xchg
out
fcmovb
sar
cwde
xlat
cdq
cmps
add
pop
push
dec
push
lahf
popw
push
xor
mov
dec
and
(bad)
inc
or
pop
and
dec
sub
inc
rcl
add
lods
push
(bad)
(bad)
(bad)
call
cmp
dec
(bad)
mov
jg
sub
sub
call
inc
retf
scas
adc
clc
pushf
mov
ja
or
push
loopne
(bad)
(bad)
(bad)
inc
dec
addr16
call
dec
sub
inc
scas
mov
call
cmp
addr16
inc
inc
aad
imul
and
jecxz
and
mov
sub
imul
xor
fiadd
popf
xchg
loopne
call
fidiv
iret
stos
jb
cmp
xor
pop
test
(bad)
call
adc
mov
ret
mov
test
stc
mov
sahf
push
fdivr
adc
(bad)
(bad)
(bad)
mov
iret
push
test
arpl
fstp
daa
pop
xchg
sti
data16
dec
and
mov
cld
cmc
inc
leave
loopne
xchg
ret
sbb
inc
push
aaa
pop
fdivr
mov
bound
mov
pop
and
add
jmp
add
mov
jns
test
sbb
xchg
repnz
inc
leave
(bad)
(bad)
(bad)
inc
int
scas
or
push
mov
mov
(bad)
fwait
or
xchg
(bad)
jbe
lods
xchg
sbb
jne
into
inc
repnz
xchg
in
dec
sbb
(bad)
(bad)
call
test
daa
mov
imul
push
add
fist
sub
cwde
add
lods
(bad)
(bad)
jmp
ins
ins
mov
adc
in
imul
repz
(bad)
(bad)
(bad)
jmp
ins
inc
arpl
sbb
pop
js
adc
jne
mov
pop
inc
sti
push
jmp
movs
aam
fdivr
mov
arpl
gs
sbb
and
dec
pop
xchg
cmp
inc
mov
jmp
shl
inc
xchg
dec
test
mov
std
(bad)
dec
jge
(bad)
jmp
(bad)
mov
ror
sub
xchg
pop
dec
jnp
cmp
scas
jo
mov
(bad)
(bad)
(bad)
push
iret
lahf
mov
and
sub
lds
lock
rcl
and
icebp
clc
inc
mov
and
and
ins
ja
lods
ja
mov
jmp
inc
lea
or
jno
imul
call
loopne
arpl
loopne
ja
jmp
stc
imul
mov
dec
ss
push
stc
and
lea
(bad)
fwait
xchg
call
(bad)
(bad)
(bad)
call
mov
xchg
sbb
adc
or
dec
inc
dec
cmp
mov
data16
jbe
xchg
pop
std
(bad)
(bad)
jmp
test
xchg
shl
mov
retf
and
xchg
push
xchg
mov
push
cli
pop
lahf
(bad)
ja
popf
and
retf
ret
cmps
loope
outs
mov
(bad)
(bad)
(bad)
(bad)
lods
neg
mov
dec
vmaxss
arpl
fstp
xchg
mov
(bad)
(bad)
(bad)
fcmovnu
dec
dec
sub
clc
aad
or
jb
iret
hlt
push
cli
mov
out
daa
in
daa
hlt
in
(bad)
push
sar
js
ds
jg
add
jmp
dec
test
jmp
lahf
jmp
cmp
xadd
mov
js
inc
mov
mov
pop
xor
lock
aas
ror
jg
sub
push
inc
addr16
pop
(bad)
das
cmc
sub
mov
test
xchg
(bad)
(bad)
call
out
mov
push
push
in
and
aas
movs
xchg
cli
icebp
fwait
arpl
or
jle
sti
(bad)
jmp
std
or
or
xlat
or
call
adc
stos
ja
add
out
ret
in
loope
lea
mov
mov
jl
(bad)
pop
dec
test
add
ret
push
cmps
(bad)
fwait
add
mov
(bad)
loopne
jb
pop
xchg
xchg
jecxz
jo
dec
scas
cli
nop
out
mov
call
sbb
push
pop
bound
jp
xor
cmps
cli
dec
jg
loope
xchg
scas
rcr
loopne
sub
rcr
sub
movs
pusha
data16
xchg
cli
lock
(bad)
popf
push
aaa
int
mov
push
pop
sbb
xchg
sbb
sahf
or
jge
inc
call
jg
inc
xchg
push
pop
push
jg
xchg
xchg
ins
retf
addr16
(bad)
jmp
and
nop
dec
and
pop
mov
xor
and
cs
(bad)
(bad)
(bad)
mov
push
fstp
lahf
sahf
mov
adc
jl
test
sub
sub
(bad)
cs
scas
movs
(bad)
jnp
ins
xor
in
cmp
(bad)
cmc
mov
cld
jp
(bad)
fidivr
ret
outs
scas
std
(bad)
hlt
(bad)
pushf
dec
ins
dec
mov
sbb
(bad)
(bad)
push
jmp
fstp
cmp
fidiv
out
mov
or
mov
jmp
scas
pop
inc
push
lock
ror
jmp
push
sbb
cld
cmp
jle
dec
es
(bad)
(bad)
(bad)
fild
and
shl
add
pop
xor
movs
xor
dec
sahf
jno
arpl
push
sbb
retf
xchg
and
add
xor
pop
(bad)
dec
push
xchg
test
push
mov
neg
ins
movs
push
(bad)
mov
mov
call
test
xor
push
enter
push
jns
xchg
mov
sbb
out
jnp
and
lahf
in
into
(bad)
(bad)
(bad)
(bad)
jl
fdiv
jge
movs
xchg
add
or
xchg
sar
mov
(bad)
(bad)
jns
jl
push
xchg
out
lock
xor
fimul
cmp
in
sbb
imul
call
jne
cmp
iret
call
jmp
in
jecxz
cmps
lods
retf
mov
pop
mov
shl
sar
pop
cmc
(bad)
(bad)
mov
push
mov
fistp
out
jno
mov
aam
je
(bad)
(bad)
push
add
cmps
xchg
and
xchg
inc
mov
out
fld
cmp
ins
dec
jbe
(bad)
(bad)
(bad)
cld
sbb
repz
cmps
xchg
ds
bound
sqrtps
cmps
sub
outs
in
sti
jne
pop
(bad)
out
cli
inc
cmp
sub
adc
ins
scas
xor
jmp
pop
jmp
(bad)
xor
movs
je
std
mov
cmc
lea
cmp
add
mov
jmp
jp
sahf
nop
not
lods
mov
and
scas
std
jge
imul
jg
inc
jecxz
push
out
pop
test
dec
sti
imul
and
lods
lock
(bad)
call
xchg
push
push
ins
push
fcmovbe
fisubr
lods
inc
maskmovq
idiv
ret
mov
mov
mov
icebp
add
mov
enter
js
pop
clc
adc
test
pop
jmp
jnp
add
sbb
shl
daa
stos
or
jle
mov
(bad)
inc
(bad)
xchg
ds
cld
loop
push
ficom
pop
push
jecxz
das
sub
test
xchg
jmp
lock
ret
ja
ficomp
pop
push
cmp
stc
das
pushf
push
jno
jecxz
and
(bad)
call
push
mov
cmc
fst
enter
imul
adc
dec
sbb
sahf
mov
xor
(bad)
jmp
dec
(bad)
or
scas
xchg
jmp
lock
dec
test
(bad)
jmp
ffreep
(bad)
cmp
cli
fild
push
ins
test
mov
out
cli
sbb
jle
push
dec
std
jnp
inc
mov
jmp
push
out
(bad)
cmp
(bad)
call
ret
dec
inc
mov
adc
es
jmp
ret
push
div
imul
and
jnp
fnstcw
jmp
(bad)
(bad)
lock
(bad)
cmp
jne
test
cmp
popf
out
mov
out
xor
cmc
xor
add
nop
(bad)
fsub
sub
mov
sub
jnp
(bad)
(bad)
inc
or
adc
test
in
xlat
jle
fst
mov
push
(bad)
fist
push
jecxz
or
(bad)
(bad)
(bad)
(bad)
(bad)
cld
inc
adc
pop
in
inc
mov
pmulhw
mov
sbb
or
mov
sbb
lock
dec
mov
jle
clc
or
test
add
enter
(bad)
(bad)
call
push
icebp
add
aad
fs
fdivr
and
call
and
sbb
into
xchg
cwde
nop
adc
ficom
mov
(bad)
(bad)
(bad)
mov
int3
push
ds
je
xchg
outs
popa
xchg
pop
or
jb
aas
(bad)
(bad)
(bad)
fbld
cdq
add
(bad)
into
sub
mov
cmp
mov
xchg
inc
and
dec
and
adc
shl
popf
cmp
xchg
mov
(bad)
(bad)
jmp
sti
ins
and
popf
jmp
ret
pop
movs
into
pop
inc
xor
(bad)
(bad)
mov
(bad)
xor
cdq
fisttp
aam
mov
clc
cwde
cmp
(bad)
(bad)
(bad)
inc
jae
shl
xor
mov
in
int
add
ins
gs
pusha
movs
stos
das
(bad)
(bad)
(bad)
jmp
pusha
sahf
int
pop
adc
xor
pop
xlat
xchg
nop
xchg
mov
mov
aad
mov
mov
cmp
jnp
outs
cmp
and
imul
(bad)
jmp
into
pop
mov
pop
sbb
in
add
jmp
xchg
xlat
adc
dec
inc
sub
adc
popa
fwait
dec
(bad)
mul
pop
outs
dec
dec
test
adc
retf
sub
mov
test
mov
dec
xchg
and
(bad)
(bad)
out
cli
push
mov
retf
xchg
mov
daa
fmul
sub
push
pop
call
(bad)
dec
jecxz
xchg
push
adc
cs
lds
loop
(bad)
arpl
cwde
sub
pop
cld
jmp
sbb
scas
mov
inc
jno
add
pop
mov
push
cli
dec
fs
dec
rcl
jne
add
mov
pusha
sub
(bad)
(bad)
inc
and
sub
sbb
sub
int
push
push
rcr
push
scas
jmp
cmc
repz
mov
or
mov
xchg
jl
inc
cmp
test
dec
adc
(bad)
push
jp
mul
scas
loop
icebp
dec
sbb
mov
cs
jl
pop
and
(bad)
(bad)
jmp
stos
push
arpl
mov
scas
or
inc
push
sbb
out
pop
mov
cs
sbb
jle
fistp
ins
sub
pop
pop
mov
push
repz
adc
inc
(bad)
(bad)
(bad)
call
and
mov
adc
push
dec
mov
inc
out
arpl
outs
imul
(bad)
fnsave
lods
in
sbb
scas
mov
add
(bad)
jg
or
dec
pop
push
mov
jge
sub
xor
not
xchg
fs
(bad)
(bad)
jg
adc
sbb
jge
pop
sbb
out
cmp
(bad)
xchg
(bad)
call
jp
cwde
push
and
inc
cli
lds
loope
cmp
push
nop
add
inc
add
std
(bad)
(bad)
call
sbb
fdiv
pop
sbb
add
scas
cs
pop
adc
push
inc
pop
repz
mov
mov
int3
pop
sti
std
fs
pop
and
(bad)
push
cld
xchg
aad
aaa
ror
shl
add
sub
lods
push
pop
pop
out
mov
cmp
loope
xchg
or
repz
jmp
xor
push
mov
jmp
cmp
rcr
xor
(bad)
(bad)
dec
mov
mov
jge
fcomp
(bad)
(bad)
mov
call
ja
test
jl
arpl
int3
js
sbb
and
xchg
adc
inc
pop
sbb
pop
pop
stc
jae
movs
jnp
cmp
mov
push
push
inc
push
jmp
jp
test
xchg
retf
or
add
mov
cmp
mov
xchg
pop
hlt
xchg
and
xor
mov
(bad)
(bad)
sti
neg
push
loopne
mov
and
mov
arpl
(bad)
(bad)
(bad)
fild
lods
aam
mov
jge
in
xor
cmps
js
popa
enter
(bad)
mov
push
(bad)
(bad)
(bad)
(bad)
dec
dec
jno
aam
gs
xchg
dec
ss
out
xor
paddusw
(bad)
(bad)
(bad)
jmp
adc
mov
aad
fidivr
lahf
cmp
(bad)
ficomp
les
add
loope
(bad)
(bad)
(bad)
(bad)
fisub
lds
not
and
fld
(bad)
out
mov
bound
(bad)
(bad)
jg
dec
and
lock
retf
inc
xchg
jb
push
xchg
jecxz
hlt
jl
adc
(bad)
xor
(bad)
inc
xchg
mov
ret
imul
xchg
lahf
in
xor
mov
dec
mov
cli
inc
or
fiadd
fistp
and
call
pop
cld
(bad)
call
stc
dec
jle
mov
push
test
and
xlat
or
enter
repz
and
mov
in
retf
popa
das
xor
icebp
push
adc
stc
xlat
add
dec
xchg
dec
mov
clc
repz
ret
adc
jecxz
ror
pop
in
dec
test
dec
inc
scas
dec
retf
addr16
fcmovnb
test
movs
stos
movs
or
cmp
mov
je
cld
out
repz
push
retf
call
pop
aam
repz
or
push
outs
rol
js
lods
mov
cmp
mov
inc
mov
sbb
scas
add
jmp
sub
retf
nop
cmp
mov
fidivr
push
(bad)
jg
fst
stos
xor
fcomi
inc
call
cld
jl
out
mov
xchg
mov
xchg
(bad)
call
cld
ja
jns
retf
aas
dec
mul
jns
(bad)
mov
sahf
in
mov
(bad)
(bad)
(bad)
out
sti
mov
retf
fwait
out
std
frndint
pop
data16
ror
xchg
aas
push
dec
jne
(bad)
(bad)
call
or
stos
hlt
mov
pop
sub
pusha
aas
jbe
push
stos
pushf
(bad)
cwde
adc
push
jg
jge
mov
xchg
shl
dec
les
sub
dec
or
mov
(bad)
js
sub
cwde
adc
jg
xchg
jle
sbb
call
(bad)
es
lahf
xchg
call
repz
cs
xchg
ins
aam
push
shr
fistp
add
mov
add
adc
(bad)
sub
ja
(bad)
mov
mov
lods
cmps
add
into
mov
add
cmps
clc
(bad)
les
(bad)
sbb
je
(bad)
(bad)
push
add
outs
cmps
lahf
mov
cld
adc
push
pop
into
cmp
loope
pop
idiv
(bad)
mov
jge
inc
jns
mov
retf
cdq
out
dec
xchg
push
push
retf
movs
jg
jo
push
cld
push
not
dec
adc
out
test
rol
jae
(bad)
push
fsubr
ja
imul
scas
push
hlt
pop
xor
(bad)
(bad)
dec
mov
mov
mov
daa
and
xor
sub
(bad)
(bad)
jg
dec
xchg
(bad)
xchg
shl
xor
fimul
and
mov
repz
sar
xchg
icebp
cld
and
pop
bound
jae
ins
jg
out
outs
sub
cs
hlt
xchg
jmp
imul
xlat
rcl
scas
sahf
int
or
mov
pop
call
cmp
sub
jg
loopne
inc
(bad)
(bad)
jg
add
pop
mov
idiv
sub
out
mul
adc
jmp
(bad)
clc
test
daa
retf
shl
loop
icebp
add
pop
call
jmp
jo
repnz
mov
and
into
(bad)
fbld
out
and
and
mov
sbb
mov
fsubr
mov
repz
push
adc
or
clc
jge
in
movs
jp
or
enter
(bad)
call
test
dec
push
add
inc
mov
dec
xor
adc
jne
dec
sahf
xor
repnz
jl
sub
cmp
sub
inc
daa
pop
mov
mov
fisttp
pop
cmps
cmp
in
jbe
dec
mov
das
xchg
shl
call
ds
push
jmp
repnz
cmp
(bad)
js
inc
je
push
(bad)
js
movs
jb
sar
mov
(bad)
fld
popa
div
ins
or
je
xchg
cdq
xor
add
mov
loopne
mov
dec
push
sti
mov
mov
sbb
push
pop
cli
mov
ret
hlt
push
inc
scas
fs
push
stos
iret
jmp
inc
retf
or
(bad)
pop
add
in
inc
out
clc
(bad)
(bad)
clc
and
cmps
vcvttpd2dq
call
xchg
cmp
pop
(bad)
inc
inc
push
sbb
adc
xor
cmovle
xchg
das
dec
cmps
stos
xor
loope
(bad)
mov
mov
xor
imul
int3
xchg
sti
mov
mov
sub
(bad)
(bad)
(bad)
inc
mov
dec
aas
sub
xor
addr16
(bad)
call
jg
cmp
(bad)
(bad)
call
jl
js
cmc
(bad)
pop
add
jne
cld
enter
(bad)
stos
retf
test
inc
nop
retf
ins
cld
jecxz
mov
stc
dec
jae
dec
out
(bad)
loop
add
add
stos
int3
mov
cdq
cdq
cli
adc
sar
jmp
mov
cmp
(bad)
fild
stos
jne
rcr
mov
push
sbb
scas
pushf
js
addr16
mov
lods
out
outs
sub
enter
int
xor
(bad)
(bad)
mov
or
adc
and
push
stc
dec
jne
pop
pushf
push
cmp
test
ret
push
iret
mov
xchg
jns
iret
retf
lahf
into
std
and
jne
cmps
in
stc
dec
mov
(bad)
mov
sub
sbb
cli
fsubr
fsubr
lds
xchg
repz
(bad)
adc
ret
loope
mov
(bad)
(bad)
(bad)
inc
mov
lods
xor
push
daa
out
fcmove
lods
jp
stc
xor
push
inc
outs
sub
bound
add
jmp
adc
repnz
mov
pushf
push
je
retf
mov
std
(bad)
dec
push
fidiv
pop
aad
mov
int3
pop
xlat
mov
test
lods
jg
call
call
xchg
in
pusha
aam
ror
add
fldcw
vpackssdw
ret
cwde
iret
cmp
push
sub
int
ds
movd
repz
sub
out
add
cs
jb
mov
aas
jo
popa
xor
fldln2
inc
(bad)
jmp
(bad)
mov
and
cmp
mov
(bad)
jg
sbb
int3
push
(bad)
sbb
jnp
add
pop
xchg
dec
sub
and
(bad)
(bad)
(bad)
dec
aam
sub
popa
sbb
fwait
popf
cdq
(bad)
iret
or
iret
sbb
cmps
sub
pop
aad
loopne
(bad)
(bad)
(bad)
clc
mov
inc
pop
mov
nop
imul
movs
mov
lods
pushf
jne
push
cdq
or
adc
push
cld
(bad)
(bad)
jmp
data16
mov
pop
inc
arpl
cs
xor
pop
mov
add
idiv
jg
sub
sub
lds
dec
in
clc
(bad)
(bad)
inc
in
xchg
mov
xchg
xchg
pusha
jns
imul
gs
stos
mov
sbb
(bad)
ss
inc
call
or
(bad)
(bad)
push
adc
je
dec
(bad)
fcmovnbe
jp
xor
jp
push
mov
jns
or
adc
xor
xor
push
jb
jmp
mov
retf
fimul
mov
cmp
lea
ins
aas
lds
mov
mov
daa
mov
cmp
jnp
cmp
mov
movs
leave
add
hlt
mov
dec
out
add
sub
mov
inc
sar
shl
std
add
icebp
enter
adc
stos
push
cld
icebp
pop
xor
repnz
add
mov
(bad)
(bad)
jg
jns
or
stc
stc
jo
push
test
jg
fstp
icebp
test
xchg
call
(bad)
jmp
dec
daa
cmp
jae
test
mov
icebp
call
add
jmp
dec
(bad)
out
fwait
das
fnstcw
fidiv
nop
cdq
mov
psllw
pop
lock
(bad)
(bad)
call
push
iret
(bad)
(bad)
jg
(bad)
or
int
mov
push
loopne
(bad)
(bad)
fild
push
scas
mov
aaa
mov
das
xchg
out
fnstenv
(bad)
xchg
in
ret
fcomip
xor
xchg
xchg
cmc
sbb
cli
aad
retf
outs
(bad)
pusha
mov
jmp
pop
xchg
scas
in
repz
cdq
es
(bad)
jg
xlat
inc
mov
mov
dec
cmove
and
pop
loopne
push
pop
adc
ret
xchg
xchg
ins
mov
retf
add
(bad)
(bad)
inc
sti
dec
retf
sar
iret
sti
stc
pop
mov
sti
daa
fcmovnu
jecxz
pushf
jp
jl
adc
retf
mov
imul
out
clc
inc
xchg
adc
in
gs
push
add
(bad)
(bad)
jmp
mov
ss
cmc
jbe
xlat
aam
movs
(bad)
(bad)
(bad)
call
cmp
cmp
jl
pop
es
and
or
les
inc
cmp
lea
xchg
mov
pop
rcl
push
and
ins
call
dec
jg
(bad)
(bad)
dec
dec
pop
adc
and
xchg
and
out
retf
cld
jne
mov
loopne
dec
std
pusha
cmp
rol
sbb
nop
(bad)
(bad)
(bad)
inc
rol
and
pushf
std
inc
or
sti
fist
sti
sub
or
inc
das
(bad)
imul
cli
call
and
adc
dec
pop
repz
mov
(bad)
(bad)
jmp
mov
(bad)
pop
int3
jnp
cmp
sbb
xchg
xchg
xchg
test
dec
lods
jge
mov
push
xchg
push
inc
inc
adc
mov
and
sub
(bad)
jg
xchg
sub
rol
and
add
lock
aaa
outs
mov
mov
neg
addr16
(bad)
(bad)
(bad)
push
push
fwait
cmp
int3
cmp
out
mov
aas
sbb
mov
and
fwait
mov
jp
(bad)
(bad)
(bad)
xchg
sub
jmp
movs
in
push
mov
arpl
cld
sbb
mov
int3
cmps
es
rcl
sbb
scas
out
sbb
push
(bad)
ins
inc
jb
pop
pop
hlt
std
pop
xlat
jnp
cwde
sbb
mov
(bad)
in
int
inc
cmp
mov
pop
paddusb
call
outs
out
jae
sti
and
test
(bad)
(bad)
(bad)
call
and
(bad)
cld
pop
jae
push
shl
pop
jmp
sar
out
ficomp
mov
(bad)
jg
idiv
cli
adc
add
pop
imul
xchg
adc
mov
inc
adc
inc
shr
mov
repz
aas
retf
xor
cli
clc
and
clc
(bad)
(bad)
mov
push
and
movups
inc
mov
cmp
(bad)
(bad)
(bad)
mov
push
ds
sti
popf
jge
push
inc
in
stos
loope
push
jg
jle
sbb
cmp
(bad)
mov
xchg
pop
push
adc
cmp
inc
sti
jmp
call
fbld
sti
sahf
or
cld
mov
aam
inc
mov
cmp
push
jae
movlps
or
and
ficom
mov
or
(bad)
push
xor
dec
inc
lahf
repz
call
mov
stc
stos
ja
loopne
sti
(bad)
mov
repz
retf
mul
hlt
mov
repz
sbb
jmpw
inc
pop
test
addr16
popa
bound
add
mov
stc
mov
lahf
(bad)
xchg
popf
push
(bad)
hlt
push
pop
mov
into
jle
(bad)
mov
(bad)
call
scas
rcl
inc
xor
sbb
nop
js
mov
adc
sub
mov
sti
mov
es
mov
lods
or
push
pop
test
sub
stc
(bad)
push
addr16
xlat
cli
xchg
adc
xor
or
jge
ret
outs
std
mov
aas
pop
inc
(bad)
ja
mov
fsub
mov
pusha
in
iret
jmp
mov
aas
lahf
sbb
push
icebp
sub
cld
loop
scas
scas
(bad)
mov
(bad)
fst
jae
ficomp
jmp
loope
pop
aas
clc
or
mov
(bad)
xor
outs
and
loopne
jecxz
dec
out
or
cld
outs
mov
cmps
int3
cmp
mov
lock
xor
mov
xor
fdiv
clc
shl
fisttp
mov
movs
cs
pop
out
(bad)
mov
or
les
push
mov
mov
adc
mov
adc
sbb
lods
inc
sti
in
dec
(bad)
sub
ret
(bad)
(bad)
call
dec
pop
jmp
and
push
or
int3
adc
std
idiv
sbb
pop
retf
psubw
outs
cmps
icebp
clc
inc
fst
std
(bad)
dec
or
dec
iret
loope
sbb
dec
cmc
rol
xchg
gs
(bad)
(bad)
jmp
sbb
pop
aas
out
mov
aas
pop
aas
add
(bad)
mov
rcl
pushf
push
pop
cli
mov
inc
sub
push
push
cmp
adc
clc
mov
(bad)
cmc
mov
cli
aas
fld
(bad)
(bad)
inc
sbb
dec
mov
inc
call
fiadd
jg
ss
cmc
hlt
idiv
outs
pop
dec
push
mov
es
inc
test
shl
sti
das
jmp
stos
int3
xor
aaa
sbb
cmps
and
jbe
(bad)
ret
mov
aas
pop
inc
aas
scas
adc
setne
cmp
push
es
push
push
(bad)
icebp
and
call
fsubp
inc
jmp
or
fidiv
fbstp
pop
jne
pop
out
jae
bound
sub
sub
std
out
pusha
sbb
cmp
dec
jg
ficomp
jbe
mov
add
out
sti
add
aaa
cld
or
das
not
stos
cmc
and
jecxz
adc
cmp
fwait
(bad)
fsubr
and
jno
mov
xor
mov
mov
out
pop
(bad)
(bad)
jmp
cld
add
imul
mov
daa
loop
lods
ins
imul
imul
mov
inc
outs
lock
xchg
div
inc
js
mov
lahf
js
scas
stos
(bad)
jmp
dec
out
jecxz
dec
loop
jae
xor
into
and
jmp
shl
mov
jg
scas
ds
and
push
retf
stos
std
jne
inc
jo
je
(bad)
(bad)
push
test
add
bound
adc
leave
push
push
cs
add
fisubr
sbb
popf
push
int3
xor
mov
push
outs
sub
in
xchg
sub
(bad)
or
enter
mov
call
movs
movs
and
add
movs
jns
enter
xchg
ja
jg
jo
imul
add
call
dec
jb
mov
mov
fsubr
ins
inc
in
push
ret
(bad)
(bad)
push
dec
or
ret
ja
sbb
pop
loopne
sbb
xlat
xchg
(bad)
jl
mov
aam
(bad)
dec
scas
jle
pushf
cdq
std
repz
sub
ret
and
aam
(bad)
(bad)
(bad)
mov
sbb
stos
inc
out
sub
fwait
ret
in
repnz
outs
fdivrp
push
mov
xor
(bad)
dec
sub
ins
xor
push
xchg
sbb
pusha
popa
mov
(bad)
push
jl
mov
movs
daa
ror
xor
sbb
neg
(bad)
(bad)
(bad)
(bad)
jnp
out
sbb
mov
repnz
movs
xchg
hlt
sahf
push
add
mov
pop
lock
call
into
cli
xchg
xor
xor
ja
bswap
and
cmp
js
(bad)
(bad)
(bad)
inc
jg
or
dec
cmp
adc
in
pop
pop
mov
in
add
sub
pop
jmp
(bad)
cmp
mov
into
js
stos
aam
pop
mov
dec
push
pop
xor
(bad)
sbb
das
repnz
push
add
jp
sahf
pop
aam
dec
adc
cmps
lods
lea
das
jmp
mov
xor
(bad)
call
push
lahf
xchg
mov
stos
add
lahf
repnz
data16
adc
jmp
mov
add
iret
xchg
mov
icebp
push
xchg
xchg
cmp
mov
sub
idiv
cmp
fist
(bad)
inc
push
adc
cmps
push
scas
icebp
pop
lock
hlt
lock
rol
pop
in
nop
inc
dec
outs
movs
(bad)
jg
movs
jmp
lds
test
dec
push
pop
inc
mov
jp
cmp
(bad)
mov
jbe
push
inc
(bad)
push
and
sub
pop
jp
adc
xchg
rcl
jne
rol
mov
idiv
cmps
(bad)
(bad)
(bad)
jg
push
out
xchg
shr
dec
(bad)
sbb
jne
xor
in
aam
pop
mov
sar
(bad)
(bad)
mov
popa
imul
mov
fst
sar
mov
(bad)
neg
icebp
(bad)
(bad)
mov
lock
jo
fstp
ds
dec
xchg
fist
jg
sub
cwde
jns
popf
xor
jp
lock
pop
push
(bad)
(bad)
(bad)
dec
rcr
shl
xchg
mov
dec
aas
jbe
adc
mov
add
inc
std
loop
ss
jge
jbe
in
push
jae
lock
(bad)
(bad)
jle
inc
int3
cmp
clc
mov
xchg
pop
cmp
jne
cld
psubb
ret
int3
in
or
mov
push
call
xor
push
mov
scas
int
mov
mov
xor
ret
hlt
add
jl
jl
shl
ret
mov
iret
popf
and
stc
dec
sub
adc
pop
mov
pop
call
push
mov
xor
idiv
icebp
cmp
adc
outs
jbe
call
aas
xchg
mov
xor
in
vshufps
hlt
faddp
(bad)
(bad)
in
(bad)
jmp
fcomp
sub
rol
push
aas
mov
jg
(bad)
(bad)
(bad)
push
cmp
push
addr16
fild
push
mov
cmc
push
mul
gs
fwait
mul
cmp
clc
shl
call
out
push
stos
loope
pusha
dec
xor
mul
pushfw
ret
mul
mov
jl
lods
std
pop
push
or
aad
push
repz
in
shl
rcr
pop
inc
call
in
iret
les
sub
stos
inc
outs
shl
xor
dec
aaa
push
push
mov
add
test
into
loop
rcl
call
in
clc
push
(bad)
mov
cmps
cli
sub
(bad)
(bad)
(bad)
jg
ret
into
push
mov
xchg
cld
cmps
mov
stos
adc
xor
(bad)
xchg
adc
hlt
cs
xor
les
inc
push
push
sub
lock
in
sbb
or
adc
xor
fsubr
fimul
xchg
mov
pop
xchg
inc
cld
call
(bad)
jmp
pop
mov
pop
into
cwde
pop
mov
add
pop
fwait
aad
fdiv
pop
icebp
(bad)
dec
sbb
mov
cmp
cmp
jg
retf
fsub
dec
mov
(bad)
mov
xchg
sar
sub
dec
inc
cmc
push
out
lock
out
xchg
mov
std
(bad)
mov
je
push
adc
cdq
lds
or
mov
push
pop
out
leave
mov
mov
mov
ficomp
jno
jg
aad
cmp
push
lock
loop
push
(bad)
mov
out
pop
cmp
pushf
inc
ret
push
sub
jmp
(bad)
mov
mov
das
lahf
sahf
inc
movs
inc
retf
jbe
add
mov
mov
daa
jl
rcr
cmp
lods
mov
les
arpl
bound
or
push
jl
mul
pop
ret
mov
les
cmp
push
add
sub
add
call
stos
push
dec
xor
mov
fld
sbb
nop
fmulp
pop
cmp
int3
loop
xchg
add
inc
movs
mov
sub
das
(bad)
call
clc
and
push
mov
xchg
int
inc
inc
loop
cmc
mov
call
xor
cli
(bad)
(bad)
call
adc
stc
dec
xor
inc
sub
js
inc
cmp
adc
int3
push
call
push
and
aam
add
or
xchg
cli
(bad)
cmp
lahf
cli
fs
cdq
cmp
jne
mov
pop
stos
push
into
repnz
(bad)
jb
pop
ret
cld
(bad)
mov
xchg
pop
retf
cvttps2pi
sub
nop
inc
pop
popa
and
push
cli
ins
sahf
fstp
loope
cmp
test
sbb
push
in
stc
inc
sbb
(bad)
jg
call
add
add
ins
ja
test
dec
test
pop
sub
sub
out
pusha
(bad)
jg
xor
mov
and
loope
adc
(bad)
jmp
sar
out
push
xchg
pop
xor
out
mov
ror
xchg
cwde
push
popf
shr
xchg
stc
in
(bad)
(bad)
jmp
sub
mov
or
xchg
js
cmc
pop
xor
jle
repz
shr
jmp
in
lidtd
dec
fwait
push
xchg
adc
mov
(bad)
inc
sub
fidiv
cld
sar
inc
xchg
jae
push
pushf
call
xchg
call
push
push
sbb
add
gs
mov
add
mov
(bad)
(bad)
(bad)
mov
outs
jne
int3
jmp
jne
sub
jle
pop
test
adc
mov
push
out
add
(bad)
cmp
movs
add
adc
(bad)
call
dec
dec
cmps
push
adc
sbb
and
cmc
ins
jmp
jmp
xchg
(bad)
(bad)
(bad)
jmp
and
jge
fs
push
aam
cwde
mov
and
aad
push
jp
inc
les
or
(bad)
inc
sub
dec
dec
or
scas
test
mov
ret
jmp
inc
aam
sbb
xchg
push
js
(bad)
pop
pop
shl
xor
(bad)
call
xchg
sbb
jmp
repz
sar
(bad)
(bad)
jg
jmp
cmps
sahf
test
push
dec
sub
bound
add
pop
ja
in
pop
and
(bad)
(bad)
call
loopne
mov
fsub
push
sub
out
aad
ret
bound
mov
cmps
push
mov
stos
cwde
or
adc
mov
push
pop
push
sbb
jle
sbb
or
inc
xor
jp
cli
adc
jb
(bad)
cmp
rcr
sbb
or
and
(bad)
(bad)
(bad)
jmp
xchg
push
aad
jb
push
hlt
(bad)
pop
sbb
push
test
(bad)
and
data16
loope
(bad)
push
jmp
addr16
(bad)
lea
(bad)
or
inc
dec
cmps
xor
adc
(bad)
(bad)
call
xchg
sub
mov
mov
inc
xlat
push
xchg
and
jmp
mov
cmp
test
cmp
jge
or
or
mov
sbb
(bad)
(bad)
jmp
mov
out
imul
lahf
jns
xchg
sub
sub
shl
aaa
fld
(bad)
(bad)
(bad)
(bad)
fisttp
cmp
out
in
mov
stos
inc
addr16
out
test
mov
(bad)
(bad)
jg
sbb
push
call
sub
dec
sub
gs
jbe
pop
cld
inc
ret
xor
in
cmc
mov
or
mov
push
mov
sbb
(bad)
(bad)
(bad)
cli
jbe
cmp
sbb
and
and
jecxz
dec
jbe
(bad)
(bad)
push
cmp
popf
(bad)
cmps
dec
jmp
cmp
jmp
xchg
mov
pop
sub
repz
inc
jne
pop
mov
call
jp
out
cdq
xchg
push
mov
(bad)
jmp
xor
xor
data16
dec
jno
or
xor
sub
ds
push
lock
jbe
jne
aad
(bad)
(bad)
(bad)
jl
loope
push
ins
jns
inc
and
and
cld
fdiv
jecxz
test
adc
out
cmc
sti
stos
(bad)
(bad)
jg
xor
dec
out
ins
push
daa
rol
mov
mov
repnz
and
push
scas
into
xor
(bad)
(bad)
(bad)
in
add
ja
push
mov
clc
ret
dec
pop
addr16
ss
push
cld
sbb
jnp
je
dec
adc
jl
ficomp
cmc
data16
repz
jns
cmp
repz
(bad)
jmp
adc
(bad)
mov
lods
xor
push
scas
fs
imul
inc
mov
(bad)
(bad)
call
or
pop
cmp
pop
call
fild
pusha
outs
mov
jmp
(bad)
(bad)
push
pop
xor
add
shr
xor
dec
ins
push
lea
mov
add
mov
and
ins
cmp
push
mov
xor
(bad)
(bad)
fcomip
popa
pop
cmp
jecxz
mov
or
hlt
sub
xor
popf
ds
(bad)
(bad)
(bad)
dec
lea
cmp
(bad)
push
xor
sub
div
clc
in
pop
shl
(bad)
jg
jmp
sti
jp
fild
mov
mov
push
je
jno
gs
mov
call
inc
popa
inc
lods
inc
and
push
mov
or
and
jg
jae
call
retf
pushf
mov
mov
scas
(bad)
fs
xor
fild
call
not
movs
fcomip
(bad)
call
pushf
dec
mov
(bad)
or
cdq
push
jge
bound
mov
(bad)
(bad)
inc
out
lahf
pushf
mov
hlt
push
ret
cli
outs
stos
fldenv
iret
push
in
adc
push
movs
adc
mov
jnp
stos
imul
test
dec
daa
sub
dec
movs
ins
mov
(bad)
(bad)
(bad)
fnstsw
mov
fisubr
lods
cmp
push
popf
xor
(bad)
(bad)
inc
mov
mov
data16
or
mov
lods
push
es
pop
push
(bad)
(bad)
inc
pop
pushf
ror
imul
and
out
and
fistp
sub
inc
icebp
outs
(bad)
dec
adc
sub
fldcw
mov
add
pop
jnp
(bad)
(bad)
(bad)
fild
mov
sbb
movs
xchg
mov
push
fs
dec
in
mov
xchg
dec
xchg
xor
test
xor
lock
jl
cmp
cmp
jmp
ds
ja
mov
dec
mov
cld
in
xchg
and
sbb
push
call
cld
mov
xchg
mov
mov
sbb
mov
std
push
push
push
lea
mov
jp
jb
out
(bad)
call
mov
leave
fwait
jmp
and
ja
(bad)
cmps
or
sbb
(bad)
(bad)
push
pop
xor
add
add
in
sar
call
add
test
or
lahf
outs
test
(bad)
lahf
addr16
jp
lahf
call
fsubrp
jbe
(bad)
(bad)
jmp
jg
add
mov
lods
xor
outs
sub
or
icebp
pusha
mov
(bad)
jle
mov
ins
inc
sbb
push
cwde
mov
mov
out
mov
sub
push
xchg
pop
icebp
cmp
psllw
jg
sti
add
mov
les
or
push
(bad)
(bad)
(bad)
call
adc
shl
mov
je
dec
mov
sub
(bad)
(bad)
jmp
loopne
shr
out
nop
add
das
in
repnz
mov
or
nop
test
cwde
add
in
(bad)
(bad)
(bad)
mov
or
btc
push
sbb
loop
cmp
mov
jp
inc
ret
call
xchg
mov
pop
iret
sahf
push
inc
push
sub
sub
(bad)
jmp
push
adc
cmp
sbb
lea
pusha
clc
mov
aas
loopne
cmp
gs
out
hlt
pop
scas
cli
adc
(bad)
adc
cli
in
xor
das
and
fbld
mov
mov
pop
addr16
(bad)
dec
jnp
xchg
adc
aam
inc
adc
into
or
cmp
pop
movs
daa
add
(bad)
(bad)
call
test
mov
dec
mov
dec
dec
inc
adc
scas
push
dec
pop
sub
out
sub
out
stos
mov
pusha
adc
mov
cmp
xor
aad
lock
dec
pushf
es
mov
cmps
dec
test
(bad)
call
shl
call
addr16
sub
or
adc
das
clc
sbb
ja
loope
inc
cmp
pop
xlat
ret
(bad)
(bad)
(bad)
dec
mov
or
das
mov
push
fimul
shl
js
jns
loop
call
cld
inc
pop
in
repz
cmps
hlt
rol
mov
sub
jmp
push
ins
add
add
cmc
ja
adc
add
jmp
imul
adc
jg
dec
xchg
std
stos
out
cmps
repz
popa
fisttp
and
(bad)
push
or
add
jge
push
out
(bad)
mov
xlat
dec
cmp
repnz
inc
sub
aam
add
not
and
sub
jg
(bad)
(bad)
(bad)
(bad)
inc
movs
xchg
and
ins
scas
ss
or
call
or
mov
daa
add
(bad)
jmp
push
or
xchg
lds
cmc
pop
xlat
sub
(bad)
(bad)
(bad)
dec
setns
mov
ret
movs
mov
sbb
add
mov
inc
ss
(bad)
inc
adc
outs
or
xor
(bad)
(bad)
jmp
push
mov
cmp
retf
mov
dec
add
cmp
lea
xor
shl
loope
stc
lods
sbb
(bad)
aad
ins
pop
jmp
adc
sar
loop
sahf
push
imul
test
out
cmps
lods
int
lods
cld
stc
repz
adc
(bad)
inc
sbb
xchg
js
(bad)
mov
sti
test
inc
xchg
push
mov
jmp
aaa
int3
rcr
add
or
lods
stos
add
xor
(bad)
call
rcr
lods
dec
mov
jecxz
xchg
add
and
and
cmp
jmp
sbb
pop
mov
xor
jecxz
and
std
push
out
cli
pop
lock
scas
xchg
sub
stos
cmps
fwait
neg
call
dec
xchg
xchg
lods
cmc
xor
inc
xchg
adc
push
(bad)
xor
mov
out
push
mov
xchg
dec
daa
push
ja
jecxz
add
dec
(bad)
sub
xchg
or
pop
jmp
fisttp
fdivr
(bad)
mov
dec
adc
push
or
test
and
cmc
sub
pop
loop
inc
xor
(bad)
(bad)
jmp
sbb
or
mov
movs
ins
fisub
xchg
(bad)
dec
push
or
icebp
push
dec
fld
(bad)
push
push
enter
clc
cmp
and
pop
cmp
lods
xor
mov
cli
inc
add
(bad)
(bad)
inc
out
scas
js
adc
sub
add
jl
cmp
add
(bad)
mov
dec
(bad)
(bad)
in
mov
xchg
and
add
movs
inc
sbb
sbb
sar
jge
sti
mov
ja
cld
(bad)
dec
xor
xor
mov
push
outs
test
dec
pop
icebp
pushw
push
cmps
call
lods
xor
fs
push
jge
xchg
das
jmp
call
ja
inc
xchg
jmp
test
xchg
xchg
fstp
fist
fcos
sbb
stos
adc
pushf
xor
lds
stos
or
rcr
(bad)
(bad)
(bad)
call
mov
ss
imul
sbb
inc
or
inc
es
inc
fiadd
fsubr
add
scas
jmp
rol
adc
sbb
jp
repz
cmp
dec
(bad)
pop
cld
int
cmp
sbb
fsubr
jno
add
xlat
(bad)
(bad)
(bad)
jmp
pop
adc
add
test
or
cmp
std
add
mov
lahf
jns
jnp
dec
(bad)
(bad)
(bad)
push
daa
test
or
cmp
stos
fsubr
out
add
stc
(bad)
mov
cwde
xor
push
dec
mov
mov
(bad)
jns
(bad)
(bad)
(bad)
clc
rol
xor
fxch
sub
and
xor
dec
jne
mov
neg
ret
test
(bad)
(bad)
call
add
ins
rcr
mov
loopne
or
xchg
mov
popf
ret
mov
dec
fcomip
sub
and
xor
adc
inc
push
xchg
xor
int3
je
mov
cli
(bad)
xchg
push
push
mov
nop
dec
pop
sbb
sbb
pop
mov
stos
shl
jmp
pushf
xor
dec
push
ins
jge
fbld
inc
call
call
enter
aam
hlt
fld
fs
test
mov
(bad)
jmp
lods
into
call
xchg
jb
inc
add
popa
bound
arpl
and
(bad)
jg
dec
in
into
push
aad
mov
sbb
or
or
jl
sub
or
xchg
imul
dec
push
into
jo
jnp
call
jb
les
pop
jl
xchg
cmp
mov
hlt
add
sbb
pop
cld
dec
clc
(bad)
and
sti
js
movs
adc
out
and
sti
cli
ds
mov
stc
jge
hlt
fist
mov
add
in
adc
aam
dec
(bad)
(bad)
push
mov
adc
and
hlt
out
cmps
(bad)
cmp
push
dec
inc
int3
(bad)
jg
(bad)
jmp
mov
call
adc
in
dec
out
icebp
out
clc
(bad)
(bad)
jmp
pusha
xchg
xor
fild
mov
loopne
jmp
dec
pop
ficomp
ss
lea
sbb
xchg
(bad)
(bad)
(bad)
dec
xchg
stos
xor
sahf
or
pop
jne
push
in
test
inc
push
fwait
mov
cs
std
cmps
mov
(bad)
xlat
and
push
fsubr
hlt
or
(bad)
(bad)
jg
xor
dec
xchg
das
fs
mov
mov
shl
(bad)
(bad)
dec
out
div
pop
pop
sbb
pop
sbb
xchg
push
xchg
or
imul
add
(bad)
cmp
mov
push
enter
test
or
mov
or
shl
push
inc
mov
bound
cmps
jp
and
pop
push
aas
es
pop
fwait
push
in
or
jmp
ja
(bad)
(bad)
jmp
stc
shr
scas
inc
or
pusha
aas
sub
sti
or
cmps
mov
inc
cmp
add
in
lock
push
xchg
dec
lods
cmps
jbe
fwait
pop
aaa
mov
and
loope
icebp
mov
mov
(bad)
(bad)
jmp
or
cs
rol
(bad)
mov
cmp
jl
push
pop
fist
ds
fst
call
cmp
imul
sbb
gs
xor
fwait
adc
jo
xlat
scas
cmp
(bad)
call
cli
and
shr
lock
cld
xor
jne
scas
arpl
in
(bad)
(bad)
(bad)
push
xor
inc
pop
add
sbb
sti
call
mov
push
xor
popf
fdivr
push
push
(bad)
(bad)
(bad)
jmp
add
xor
iret
pop
xor
ja
cmp
cld
stc
test
pop
mov
lock
(bad)
outs
and
sub
push
fcmovbe
mov
mov
mov
cmp
(bad)
inc
lods
iret
loop
pop
inc
jg
and
pusha
and
xchg
push
inc
popf
fild
(bad)
(bad)
(bad)
(bad)
mov
push
dec
xchg
mov
ffree
cs
add
test
push
(bad)
(bad)
(bad)
call
cmovs
test
sub
not
jmp
lods
aad
into
lods
pop
push
in
add
lods
loope
add
cmp
sub
jb
and
adc
cwde
xchg
or
nop
stos
pop
jo
(bad)
jmp
into
mov
sbb
bound
sahf
push
retf
ds
cwde
idiv
(bad)
mov
mov
bound
dec
shr
xor
cmp
popf
sbb
inc
sar
(bad)
(bad)
inc
jns
test
mov
dec
outs
out
movs
movs
inc
add
out
loopne
test
jmp
outs
pop
cs
jnp
out
jl
cmp
int
sbb
add
mov
nop
aad
(bad)
(bad)
(bad)
jmp
int
push
adc
and
xor
aas
(bad)
sbb
and
and
pop
int
pushf
sbb
shl
mov
ds
adc
cwde
in
mov
(bad)
(bad)
dec
rcr
nop
in
les
movs
fisttp
fs
in
sub
cmp
nop
mov
(bad)
(bad)
jg
mov
(bad)
cs
das
retf
mov
jmp
cmp
in
mov
inc
and
jmp
and
adc
retf
push
int3
ins
inc
std
pop
mov
bound
push
sub
(bad)
mov
inc
or
popf
sub
ret
inc
dec
sub
repnz
add
(bad)
(bad)
call
cwde
push
sub
jge
and
pop
mov
lahf
add
inc
inc
xchg
test
(bad)
(bad)
jmp
leave
xchg
cmp
inc
lods
xchg
add
push
xchg
adc
pop
adc
push
stos
into
pushf
xor
xchg
pop
mov
push
fcomp
push
mov
or
mov
lods
fisub
adc
inc
out
fist
cmp
jle
push
imul
mov
in
mov
(bad)
inc
xchg
icebp
jae
add
ret
cdq
popa
xchg
add
add
(bad)
jmp
or
outs
and
or
xchg
jge
adc
sbb
mov
(bad)
push
sub
mov
sub
xchg
dec
rol
cmp
xchg
inc
xor
(bad)
out
and
adc
js
and
sbb
mov
xlat
(bad)
(bad)
(bad)
call
dec
or
push
xchg
sub
mov
aaa
movs
rcl
or
add
aaa
aad
retw
pop
sar
aaa
add
push
rcr
pop
or
(bad)
(bad)
(bad)
jg
fs
sbb
fldcw
sub
scas
mov
test
call
and
call
pop
(bad)
(bad)
(bad)
call
mov
xchg
xlat
iret
or
xor
into
dec
stc
push
add
mov
scas
(bad)
(bad)
(bad)
dec
push
inc
or
push
mov
xchg
pop
push
outs
lea
sbb
retf
add
fisttp
xor
jae
outs
mov
mov
xor
lahf
cdq
ffree
movs
mov
(bad)
jmp
rcl
jg
adc
call
or
data16
(bad)
(bad)
jmp
sub
adc
or
enter
xchg
mov
loop
lahf
popf
jo
or
js
ror
xchg
loop
xchg
je
dec
(bad)
je
xchg
mov
or
std
movs
and
jecxz
push
mov
and
mov
push
outs
(bad)
dec
mov
dec
mov
inc
leave
stos
sahf
cmp
adc
inc
mov
xor
(bad)
(bad)
push
add
and
jb
dec
push
mov
add
or
mov
push
mov
stos
cmp
push
test
mov
push
inc
sub
(bad)
push
cld
adc
inc
xchg
and
mov
dec
adc
add
sub
or
(bad)
(bad)
push
cmps
fs
mov
add
push
add
inc
(bad)
inc
xchg
or
jmp
sbb
test
sub
or
cmp
push
adc
shl
sbb
inc
gs
cmp
jns
inc
jno
cmp
ret
add
test
cmp
sbb
push
mov
xor
sbb
inc
adc
xor
popf
mov
sbb
adc
(bad)
(bad)
(bad)
(bad)
push
enter
mov
dec
in
cmp
fadd
xchg
mov
or
(bad)
mov
mov
push
add
movs
sub
mov
sub
shl
and
push
out
(bad)
(bad)
fild
mov
pop
push
inc
adc
add
mov
add
scas
nop
retf
(bad)
std
xchg
xlat
ficom
(bad)
(bad)
dec
mov
movs
and
xor
movs
aaa
out
or
xchg
mov
cld
call
ret
retf
dec
push
inc
out
cmps
jecxz
xor
mov
call
outs
or
mov
ins
movs
mov
add
ret
xchg
jg
mov
out
push
(bad)
push
mov
sbb
inc
movs
clc
ja
jmp
retf
xor
rcr
cmc
push
mov
mov
and
mov
mov
dec
ret
mov
push
xchg
pop
mov
int
in
loop
push
mov
call
outs
data16
mov
and
test
cld
mov
sbb
mov
call
push
xchg
je
mov
leave
mov
jmp
data16
repz
ins
inc
mov
sub
(bad)
fild
popa
and
mov
xchg
sbb
or
shr
mov
out
fsin
push
fdiv
push
iret
mov
repz
push
cmp
repz
mov
or
push
dec
inc
jns
mov
push
mov
icebp
out
inc
je
inc
cmp
inc
loop
(bad)
out
dec
fs
pushf
or
jb
xchg
jp
(bad)
(bad)
dec
sub
pop
call
in
repz
ror
mov
call
fistp
jnp
push
loop
cmps
mov
sbb
int
cmp
jle
inc
cld
jg
sahf
fcomp
cmp
ins
add
mov
(bad)
mov
jmp
cmp
aam
div
sbb
lods
and
gs
call
jnp
loope
sti
mov
mov
inc
in
mov
(bad)
(bad)
push
loope
and
mov
bound
mov
retf
mov
(bad)
repnz
loopne
(bad)
(bad)
(bad)
push
jmp
mov
or
repz
jg
pop
xchg
pop
in
inc
push
stos
pusha
cld
(bad)
out
xor
mov
sbb
(bad)
(bad)
(bad)
jmp
cmp
fisttp
sub
enter
cmp
xchg
cmp
cmc
jmp
test
(bad)
(bad)
jmp
dec
sbb
xchg
sahf
out
dec
popa
mov
sti
hlt
push
xor
sbb
jmp
mov
(bad)
fisttp
jmp
push
xlat
sbb
inc
in
fdivr
xchg
(bad)
cmp
add
mov
data16
bound
sub
je
(bad)
(bad)
(bad)
cmps
push
adc
std
rol
or
dec
out
hlt
and
dec
and
mov
push
ins
cld
pop
je
xchg
cmps
mov
test
pusha
fisttp
lea
(bad)
call
stos
cmp
jmp
mov
sub
in
(bad)
fild
test
sub
sub
sbb
sbb
or
(bad)
inc
test
and
sub
les
xchg
sbb
push
push
vpavgb
dec
dec
or
mov
in
(bad)
inc
sbb
jmp
test
fdiv
mov
movs
(bad)
(bad)
(bad)
call
push
ror
cmp
je
mov
and
inc
push
stos
aam
xor
int3
xor
add
lock
(bad)
push
jo
jmp
scas
mov
imul
cmp
pop
(bad)
aam
loope
stc
mov
(bad)
(bad)
(bad)
xchg
or
push
dec
cmp
jmp
dec
sbb
or
in
cdq
into
(bad)
(bad)
out
mov
neg
sub
stos
jmp
inc
imul
(bad)
(bad)
(bad)
(bad)
in
gs
jp
movs
outs
jo
shl
mov
loopne
data16
cli
outs
cmc
(bad)
mov
(bad)
jmp
pop
iret
je
jecxz
imul
mov
and
cli
jmp
(bad)
jmp
ret
sbb
idiv
in
or
or
hlt
mov
(bad)
(bad)
(bad)
push
fld
aas
mov
adc
mov
nop
inc
jno
sub
sub
ins
sub
dec
clc
call
(bad)
cmp
(bad)
into
xor
sub
cli
ret
jp
add
fcom
(bad)
(bad)
(bad)
cld
sub
mov
iret
pop
ins
and
mov
sbb
push
aaa
lock
mov
sbb
dec
adc
xchg
retf
enter
cdq
lea
push
pop
div
fsqrt
add
sub
sbb
cmp
(bad)
(bad)
(bad)
mov
pop
call
repnz
xchg
dec
fxch
ins
aam
(bad)
mov
mov
(bad)
(bad)
call
movs
or
xchg
inc
dec
sbb
jle
sub
lods
aaa
push
sbb
cs
sti
pusha
jecxz
js
cli
ja
sti
xor
rcl
inc
bound
lea
dec
lock
(bad)
adc
mov
scas
call
(bad)
dec
ret
loope
sbb
sub
mov
les
in
jmp
(bad)
mov
mov
push
pop
movs
cmp
mov
cmc
cmp
ds
and
out
call
mov
mov
call
cli
sahf
mov
pop
out
adc
xor
adc
sti
adc
(bad)
mov
xchg
out
xchg
pop
adc
mov
lods
mov
leave
hlt
mov
(bad)
inc
int3
add
xchg
adc
add
adc
add
mov
pop
fld
mov
movs
(bad)
xor
les
jg
daa
and
loop
(bad)
imul
dec
pop
jae
hlt
xchg
sub
(bad)
dec
mov
in
repnz
sbb
test
retf
add
aaa
push
bound
gs
(bad)
(bad)
(bad)
(bad)
jl
shl
or
test
push
into
inc
jp
xlat
(bad)
movs
adc
jmp
pop
jg
jle
pusha
cld
in
fidiv
or
push
push
and
call
cld
inc
mov
xchg
rcr
ret
jmp
inc
lods
cdq
setp
inc
into
sbb
(bad)
(bad)
(bad)
(bad)
mov
scas
ins
jns
(bad)
popf
sub
push
test
ror
add
mov
sbb
cmp
cmp
add
and
(bad)
and
sub
adc
(bad)
jmp
fcom
shl
nop
std
addr16
xchg
cmp
jo
mov
das
clc
(bad)
dec
cli
adc
movs
xor
(bad)
mov
stos
push
ins
sub
sub
ror
dec
dec
outs
dec
adc
mov
or
les
cli
mov
mov
or
mov
(bad)
jmp
inc
sbb
mov
jg
dec
push
mov
or
(bad)
jmp
cmp
or
arpl
xor
fbld
add
push
push
mov
stos
sub
inc
pop
sbb
and
inc
movs
mov
add
sbb
cwde
xchg
mov
cld
dec
mov
cdq
mov
xchg
xchg
aam
out
pop
loopne
jmp
pusha
jge
out
add
adc
sub
aam
mov
(bad)
(bad)
push
cmc
cli
test
pop
inc
sub
or
pusha
ins
inc
or
mov
(bad)
(bad)
call
out
jmp
daa
mov
xchg
in
cmp
xchg
hlt
test
adc
(bad)
addr16
(bad)
(bad)
jmp
out
and
jp
imul
and
push
test
scas
(bad)
(bad)
(bad)
call
or
sbb
push
sub
pop
ret
ret
sub
ins
cmc
mov
(bad)
inc
repz
es
mov
mov
xor
xor
inc
add
jno
(bad)
jg
call
les
xor
ss
out
dec
jbe
and
clc
jmp
imul
hlt
and
out
stos
ja
das
pusha
or
add
popf
enter
fdiv
lds
and
push
or
mov
pop
and
sbb
js
add
adc
loope
xchg
add
sbb
jg
(bad)
sbb
and
(bad)
add
aad
sti
rcr
hlt
(bad)
mov
or
pop
dec
test
out
mov
dec
in
mov
in
dec
xor
jo
retf
push
sbb
stos
mov
test
test
dec
(bad)
fild
shr
fdiv
jb
inc
push
inc
xor
movs
je
mov
cmc
cmp
ds
jo
xor
pop
cmp
sbb
pop
imul
loope
stc
xor
scas
lods
lods
repnz
mov
xchg
ins
fisubr
jb
adc
xor
dec
mov
(bad)
or
(bad)
shl
sbb
xor
cmp
mov
push
mov
jg
popf
ins
sti
je
jns
sub
mov
mov
adc
(bad)
out
cmp
dec
movs
pop
sti
enter
mov
bound
ret
mov
or
dec
xor
sbb
mov
sub
(bad)
sub
fwait
sub
inc
repnz
enter
(bad)
dec
stos
jns
push
sbb
sti
mov
adc
jb
mov
(bad)
inc
push
xchg
aaa
and
pop
jmp
int3
stos
cmps
pop
cmp
aas
jmp
sbb
in
popf
fcomp
movs
jp
in
shl
(bad)
or
adc
xchg
xchg
(bad)
jmp
cmps
imul
cs
xor
mov
test
outs
jge
and
stos
out
jo
or
jge
push
xlat
pop
jae
mov
es
(bad)
(bad)
dec
mov
push
xor
in
jge
aam
lods
jmp
inc
mov
push
and
(bad)
call
push
jmp
xor
pop
popf
xchg
dec
push
and
test
sbb
push
cld
outs
inc
dec
es
or
loop
xor
pop
cmp
jp
(bad)
push
add
hlt
scas
inc
mov
and
into
or
inc
push
mov
(bad)
(bad)
(bad)
call
ins
fidivr
fistp
adc
mov
out
or
jmp
sahf
and
std
es
xor
adc
les
push
scas
xchg
pop
jecxz
xor
pop
mov
movs
add
and
test
sbb
mov
repz
(bad)
(bad)
inc
retf
inc
ds
inc
inc
(bad)
cmps
cmc
fadd
movs
jns
pop
stos
fisubr
fist
inc
mov
data16
jg
call
add
loope
out
mov
adc
mov
inc
sub
pop
cdq
cmc
sbb
adc
(bad)
cmp
mov
push
stos
idiv
cli
aas
movs
(bad)
(bad)
(bad)
jmp
jge
adc
cmps
popf
in
mov
sahf
ds
ds
push
inc
test
jmp
(bad)
(bad)
cmp
shl
and
or
loopne
stc
mov
mov
(bad)
(bad)
mov
loope
arpl
or
dec
add
inc
cmp
sti
pop
sbb
(bad)
fcomip
jge
lea
add
bound
leave
psubsw
mov
lods
into
sub
(bad)
(bad)
(bad)
cmp
push
imul
into
pop
sub
repnz
outs
(bad)
adc
dec
test
mul
mov
test
lock
ret
xor
push
adc
ds
stos
(bad)
(bad)
(bad)
(bad)
cmp
dec
mov
fist
push
push
xor
sub
test
add
jae
iret
cli
pop
add
xchg
jae
push
lea
std
(bad)
jmp
iret
(bad)
ins
fmulp
ds
out
dec
push
scas
xrelease
mov
mov
mov
mov
sub
jns
mov
outs
mov
shl
mov
das
sub
std
pop
mov
mov
xor
inc
xor
mov
(bad)
(bad)
(bad)
push
in
mov
xor
lds
(bad)
jae
call
js
dec
les
movs
push
scas
sbb
fdivr
or
inc
out
push
icebp
xor
enter
and
(bad)
(bad)
call
add
aam
data16
out
sbb
jbe
push
fidiv
mov
aad
es
fmulp
loope
(bad)
jmp
xor
xor
jno
sub
jne
test
xor
sbb
or
repz
add
and
dec
sub
or
jg
dec
xchg
xor
je
lea
sbb
push
aad
add
jge
(bad)
(bad)
jg
and
push
jmp
pop
push
arpl
dec
sbb
cmp
push
mov
mov
test
push
movs
gs
or
loopne
into
stos
xlat
aaa
out
iret
dec
outs
imul
cmp
pop
lea
inc
pop
outs
mov
and
js
cmp
pop
mov
pusha
mov
cmps
and
jmp
and
mov
call
cmps
mov
push
push
or
les
dec
into
xchg
loopne
into
xor
mov
das
cli
pop
pop
pause
loope
jl
xlat
loope
into
mov
or
(bad)
call
mov
fsubr
or
mul
or
sbb
add
fld
mov
xchg
in
bound
jge
mov
lea
cmp
push
jmp
push
sbb
cmp
(bad)
pop
ins
jl
or
(bad)
(bad)
jg
pop
popa
jae
xchg
or
dec
ins
mov
scas
pop
mov
cmp
out
jo
loop
(bad)
push
mov
mov
push
pop
fsub
shr
sahf
dec
dec
inc
cld
inc
mov
inc
sbb
gs
loopne
push
(bad)
(bad)
(bad)
fist
out
push
leave
jbe
add
mov
mov
stos
fstp
mov
pop
(bad)
(bad)
(bad)
push
jnp
push
in
sbb
dec
inc
inc
in
jg
inc
sti
jne
pop
or
sti
push
jbe
adc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
cmps
(bad)
push
xor
imul
pop
push
sub
mov
inc
add
jecxz
pushf
mov
inc
cli
retf
or
dec
pop
rcr
xchg
mov
jge
and
or
(bad)
inc
and
adc
cmp
dec
in
sub
xchg
mov
mov
sbb
xor
push
sub
or
sub
add
mov
mov
jb
adc
cs
mov
popa
xchg
push
mov
jae
jp
adc
fs
(bad)
(bad)
call
dec
daa
add
xchg
mov
std
out
xor
xchg
add
cmp
xchg
mov
gs
xchg
adc
dec
cmp
nop
sub
pop
mov
js
pop
sahf
mov
sar
(bad)
inc
xchg
movs
push
lods
(bad)
repz
pop
mov
or
or
mov
or
jg
call
jge
(bad)
adc
movs
cmp
push
mov
pop
mov
(bad)
push
or
push
cdq
and
retf
cmp
cmc
imul
pop
aas
adc
(bad)
(bad)
(bad)
cmp
sub
inc
mov
cmp
test
les
push
scas
(bad)
rcr
xchg
nop
outs
nop
jne
cmc
mov
movs
addr16
test
push
add
(bad)
(bad)
(bad)
call
pop
cmps
(bad)
push
inc
outs
jmp
sbb
and
push
dec
sbb
mov
mov
outs
out
inc
mov
test
(bad)
dec
mov
cdq
pop
and
jmp
daa
lods
loopne
mov
movs
(bad)
mov
and
sub
cmp
mov
rcl
dec
xor
in
push
push
or
add
ja
(bad)
cmp
and
movs
dec
(bad)
(bad)
(bad)
inc
sub
push
jp
mov
push
dec
sub
mov
jmp
(bad)
push
xchg
cmps
pop
dec
(bad)
(bad)
(bad)
aas
push
mov
xchg
aaa
das
cmp
push
arpl
dec
or
fwait
(bad)
push
cld
sbb
das
bound
adc
push
xor
pop
adc
inc
ins
fdivrp
or
cwde
movs
loope
xor
sub
test
(bad)
(bad)
(bad)
(bad)
mov
daa
push
sahf
adc
push
dec
add
inc
dec
cli
movs
inc
xchg
cli
sbb
(bad)
jmp
cli
mov
jne
pop
or
movs
mov
mov
and
sub
cwde
mov
lds
popa
clc
and
repnz
aam
inc
sbb
(bad)
pop
and
cli
inc
push
mov
push
inc
sub
mov
or
in
sbb
iret
dec
mov
jmp
and
jno
retf
and
xchg
push
cmp
xor
stos
mov
or
call
xchg
(bad)
(bad)
(bad)
jmp
xchg
dec
mov
sub
sbb
stos
(bad)
mov
sbb
iret
in
mov
add
add
dec
fcomip
call
mov
xchg
xor
sub
mov
dec
(bad)
(bad)
(bad)
(bad)
fisub
xchg
aam
ret
sub
and
pop
and
lods
push
in
sbb
or
enter
jmp
aad
push
mov
cli
shr
aam
fwait
mov
retf
pop
(bad)
(bad)
(bad)
inc
xor
cmp
call
vpsubb
rol
iret
dec
mov
jmp
jb
mov
sti
lahf
mov
and
sahf
inc
imul
push
mov
mov
mov
mov
fdivr
mov
xlat
push
in
mov
cmps
pop
mov
imul
(bad)
(bad)
(bad)
jge
cld
fadd
jmp
sbb
push
test
loopne
(bad)
(bad)
(bad)
(bad)
cmp
fisttp
inc
aad
xor
xlat
stos
sar
cwde
mov
add
(bad)
(bad)
dec
mov
push
jae
shr
rcr
sbb
icebp
iret
or
in
iret
ror
inc
dec
jne
pop
ins
std
fcomip
jmp
jl
mov
aad
(bad)
mov
mov
xor
add
idiv
mov
pop
push
add
cmc
push
sub
movs
push
cli
ds
adc
lods
dec
jle
jo
js
adc
sbb
cmp
push
cld
jmp
shl
pop
and
add
add
add
sbb
test
add
xor
fcom
inc
(bad)
cmps
aam
in
jmp
call
mov
(bad)
jns
adc
test
sbb
jo
sub
mov
cdq
and
cmps
in
push
jmp
pop
jge
prefetch
push
jbe
ret
mov
(bad)
outs
clc
push
loopne
rcr
popf
mov
mov
dec
push
jne
in
fist
mov
ins
loopne
jg
sahf
adc
xchg
cmp
(bad)
sbb
adc
jne
(bad)
(bad)
(bad)
jmp
mov
fdivr
sbb
or
mov
aas
sub
jmp
(bad)
(bad)
(bad)
fnstcw
mov
ret
push
lds
fwait
(bad)
imul
(bad)
es
leave
jle
jmp
jb
(bad)
(bad)
(bad)
fild
sbb
retf
into
jl
dec
sbb
call
(bad)
pop
and
pusha
stc
adc
cmps
fwait
aam
pop
mov
inc
inc
inc
mov
outs
test
mov
xchg
in
jmp
add
jle
mov
fild
loopne
out
push
cmps
push
cli
stos
shl
sub
xchg
lock
std
or
and
out
and
pop
adc
out
push
aaa
adc
outs
fs
arpl
inc
pusha
movs
sub
shr
aam
push
mov
data16
enter
loopne
in
and
(bad)
(bad)
(bad)
mov
cmp
push
fcomp
stos
loopne
daa
ss
mov
mov
int3
inc
mov
xor
fwait
scas
clc
(bad)
(bad)
jmp
jns
or
(bad)
cvtps2pi
dec
xor
mov
lahf
pop
(bad)
(bad)
inc
pop
ret
inc
add
iret
jmp
scas
out
cmps
ret
pop
xchg
pop
(bad)
mov
in
shl
popf
popa
xchg
mov
inc
in
push
pop
push
std
sbb
pop
sbb
dec
imul
xor
mov
add
add
push
push
xchg
(bad)
(bad)
(bad)
(bad)
stc
mul
xchg
call
mov
jmp
cs
lea
mov
test
ret
(bad)
(bad)
push
cmps
mov
sbb
push
les
into
aaa
xchg
jno
fisttp
je
push
cld
adc
cmp
(bad)
(bad)
jg
outs
into
add
mov
xchg
mov
mov
pop
add
dec
cmps
or
(bad)
jmp
and
pop
xchg
jnp
inc
mov
add
xchg
cmps
push
pop
ja
shr
(bad)
(bad)
push
and
mov
jne
mov
push
add
fwait
xchg
movs
mov
retf
(bad)
(bad)
jmp
sub
xor
pop
fwait
mov
lahf
mov
push
test
cmp
mov
outs
loop
jno
popa
ret
cmp
sti
inc
test
dec
in
mov
cmp
(bad)
(bad)
lods
inc
mov
or
mov
fisub
mov
xchg
ja
dec
out
ficom
(bad)
(bad)
(bad)
jmp
std
icebp
xchg
dec
shl
das
push
dec
fmulp
sbb
xor
jmp
mov
(bad)
call
(bad)
in
in
sub
(bad)
xor
xor
mov
(bad)
call
fist
dec
lock
repz
cmp
(bad)
and
int3
cmc
std
ins
call
clc
call
imul
les
pop
cdq
xor
ficomp
(bad)
call
xchg
repnz
xchg
icebp
dec
push
add
mov
adc
(bad)
(bad)
jmp
cwde
jmp
mov
aas
ds
and
and
into
loop
sub
out
mov
jl
xor
jmp
cmp
(bad)
(bad)
(bad)
mov
cmp
xchg
test
movs
pop
mov
cmps
frstor
and
and
fsubr
push
fiadd
push
sbb
and
fst
cmc
jge
mul
inc
loope
adc
push
loopne
pop
lods
mov
(bad)
jmp
cmps
mov
hlt
xor
nop
rcr
clc
call
inc
xchg
mov
inc
xor
lahf
data16
les
lock
sub
fcomip
jg
into
dec
(bad)
and
pop
movs
aaa
mov
mov
add
out
(bad)
(bad)
(bad)
inc
sbb
das
jnp
mov
push
inc
sub
dec
dec
or
jmp
adc
pop
(bad)
call
cld
into
int
sbb
rcr
leave
or
enter
les
movs
mov
icebp
(bad)
(bad)
(bad)
(bad)
in
idiv
mov
jmp
mov
jbe
dec
adc
add
fsubr
push
adc
out
leave
test
jno
jne
dec
je
dec
into
sbb
add
(bad)
(bad)
dec
mov
sbb
pop
popf
jb
sbb
push
sbb
rep
dec
icebp
(bad)
inc
xor
(bad)
(bad)
push
xor
sbb
xor
mov
ins
in
mov
rcr
jge
jb
pusha
add
(bad)
(bad)
fst
sbb
jecxz
and
in
bound
cmps
jbe
inc
stos
(bad)
(bad)
push
mov
shl
das
or
ror
loope
stos
sbb
(bad)
push
fdivr
mov
and
xchg
xlat
popf
out
fdivr
push
cmp
(bad)
cmps
mov
cld
mov
bsf
sbb
cmp
dec
(bad)
(bad)
(bad)
(bad)
cmp
xchg
repnz
push
inc
add
popf
std
or
push
mov
push
pop
add
jle
and
lods
or
sub
adc
call
into
push
(bad)
(bad)
sahf
cmp
mov
aam
aad
push
mov
or
jp
ja
sub
mov
mov
jg
push
ins
sub
mov
stc
retf
push
cmps
and
aam
ss
push
mov
stos
retf
(bad)
push
test
or
imul
mov
mov
or
(bad)
movs
mov
into
push
(bad)
(bad)
inc
xor
push
scas
mov
arpl
bound
push
pushf
xor
(bad)
into
rol
popf
inc
sbb
std
shl
push
pusha
cwde
outs
xlat
mul
dec
call
(bad)
(bad)
dec
cmc
nop
aaa
fadd
jns
bound
les
rcl
(bad)
(bad)
(bad)
aas
out
adc
mov
and
adc
xor
movs
sar
jmp
int3
ins
inc
adc
in
aam
adc
xlat
push
retf
inc
xor
inc
pushf
cmc
addr16
or
(bad)
cli
loop
test
dec
cmps
cmc
lea
inc
stos
rcr
dec
shl
les
sub
pop
cld
mov
mov
inc
jno
sub
ds
div
or
(bad)
call
prefetcht2
adc
adc
push
or
mov
lods
shr
sub
iret
pusha
adc
ret
cmp
push
and
sar
jg
and
cmps
outs
jge
test
sub
inc
cmp
stc
jns
push
cmp
adc
cli
jg
jno
mov
add
push
in
scas
mov
mov
mov
or
xchg
lods
jnp
imul
adc
and
xchg
shr
pop
repz
das
jmp
(bad)
push
inc
loope
mov
mov
dec
pop
pop
jbe
jbe
dec
inc
int3
out
dec
xchg
jbe
ja
pop
inc
xchg
inc
adc
xor
push
xchg
adc
ja
test
aaa
mov
cdq
test
sbb
xchg
sbb
mul
xchg
das
xor
jbe
add
xor
pushf
test
call
sbb
and
adc
shl
(bad)
mov
mov
ins
rol
jmp
fnstsw
ins
scas
loopne
sti
jl
outs
and
sbb
push
mov
mov
push
movs
pop
gs
pushf
scas
into
in
fiadd
ds
(bad)
(bad)
jmp
cmps
mov
stos
lahf
daa
out
add
loopne
adc
push
and
jb
cmc
movs
(bad)
(bad)
(bad)
(bad)
cmc
or
cs
ret
sar
push
imul
cmp
int
xchg
cli
inc
push
sub
sbb
cld
(bad)
(bad)
std
(bad)
and
data16
adc
aam
adc
out
mov
cmp
xchg
mov
inc
imul
(bad)
dec
test
bound
je
xor
sbb
dec
jnp
mov
mov
or
icebp
inc
sbb
mov
sbb
jmp
js
inc
inc
mov
(bad)
push
test
add
(bad)
(bad)
(bad)
mov
popf
int
mov
jp
jnp
adc
ret
outs
xchg
dec
jp
faddp
(bad)
call
pop
ins
jnp
xchg
shr
adc
xchg
push
pop
xchg
cdq
es
call
cmps
mov
jl
xlat
repz
and
mov
jmp
(bad)
(bad)
dec
sbb
iret
mov
mov
mov
xchg
sbb
stos
fmul
add
in
xor
int3
pop
sub
mov
inc
and
std
stos
loopne
in
jno
adc
xor
stc
xor
(bad)
cli
ins
int3
hlt
mov
sub
int3
adc
test
adc
popa
mov
(bad)
(bad)
jmp
push
hlt
mov
out
dec
mov
xor
in
bound
test
mov
in
sar
(bad)
jp
not
das
or
sub
nop
call
pop
xchg
mov
sbb
xor
mov
les
xchg
push
adc
add
cmp
(bad)
jmp
push
jno
je
mov
test
mov
(bad)
inc
hlt
mov
mov
push
inc
fcom
lods
jns
out
inc
mov
loopne
out
inc
push
and
(bad)
fsubp
pop
fimul
jg
int
icebp
(bad)
jmp
adc
imul
sbb
retf
imul
jge
pushf
jmp
lock
push
(bad)
(bad)
(bad)
(bad)
jo
cdq
mov
adc
das
inc
dec
jno
lds
sbb
and
or
jne
cmp
inc
push
icebp
push
cmp
pop
mov
int3
or
adc
cmp
(bad)
jmp
cmp
sub
mov
mov
push
mov
xor
(bad)
scas
dec
adc
adc
(bad)
(bad)
(bad)
call
fstp
sbb
fmulp
jno
ret
sbb
jb
call
jg
(bad)
call
test
rol
xor
(bad)
lods
inc
mov
shl
cdq
fsub
(bad)
(bad)
jmp
call
cli
pop
call
mov
(bad)
lock
repz
test
cmp
(bad)
(bad)
(bad)
push
inc
cmp
add
pop
and
shl
pop
jnp
cmp
ret
test
dec
and
(bad)
(bad)
jg
push
in
rcr
jle
sar
ret
pop
scas
pcmpeqb
into
lods
lahf
mov
mov
push
gs
jg
loope
and
mov
xor
(bad)
adc
(bad)
(bad)
call
aam
push
jl
test
test
cs
aam
outs
pusha
sub
stc
(bad)
pop
pop
(bad)
(bad)
(bad)
push
or
push
xchg
xchg
add
into
and
es
iret
inc
sbb
adc
call
jmp
dec
in
xor
(bad)
fmul
scas
jmp
movs
mov
out
push
pop
add
jecxz
cld
arpl
push
dec
pusha
adc
int3
out
nop
cs
(bad)
(bad)
(bad)
(bad)
jge
mov
mov
pop
cmp
into
mov
lds
and
pushf
sti
dec
ins
jmp
mov
or
or
shr
fist
sbb
adc
and
imul
js
or
ror
(bad)
(bad)
dec
retf
jmp
test
fcom
add
(bad)
pop
adc
fs
add
(bad)
call
or
repz
or
cld
std
or
imul
fcos
(bad)
fcomip
and
pop
mov
and
call
inc
dec
sbb
push
dec
mov
rcr
pop
pop
xor
jecxz
imul
dec
mov
mov
xchg
adc
and
(bad)
(bad)
mov
mov
cmc
xor
jb
iret
sbb
sub
xchg
nop
dec
mov
jae
adc
cdq
jl
int3
xor
xchg
adc
xor
add
ret
push
(bad)
(bad)
(bad)
(bad)
jmp
fist
push
sub
xchg
xor
cmp
xchg
push
inc
fsub
movs
mov
xor
cmp
inc
sar
(bad)
call
jo
fs
dec
fdiv
retf
dec
jne
push
mov
lods
cwde
repnz
jno
nop
mov
mov
jle
pop
mov
sbb
fwait
or
fimul
mov
(bad)
(bad)
(bad)
dec
push
(bad)
xchg
test
add
dec
dec
or
sub
dec
hlt
stos
mov
cli
(bad)
jmp
jno
fcomp
or
nop
stc
in
xchg
cmp
out
xor
(bad)
dec
mov
int
dec
sbb
mov
mov
cmp
lods
sub
iret
(bad)
jmp
pop
cld
popa
mov
pop
ror
or
add
add
push
lods
inc
imul
push
cmp
(bad)
jmp
pop
mov
xor
mov
sub
push
out
loope
xchg
cmp
call
inc
or
pop
xor
inc
mov
sub
clc
outs
pop
stc
cmps
mov
jno
sub
daa
adc
(bad)
dec
inc
inc
dec
pop
popf
mov
xchg
call
pop
ror
sbb
pop
pop
push
das
(bad)
(bad)
(bad)
inc
lods
cmp
mov
inc
jmp
mov
xor
or
out
(bad)
(bad)
(bad)
jmp
add
imul
push
stos
lds
pusha
fdivr
imul
inc
push
gs
inc
leave
in
jbe
inc
fist
(bad)
iret
pop
adc
dec
xchg
into
push
daa
mov
movs
sub
xor
sbb
xlat
mov
cmps
xchg
das
mov
mov
or
aas
push
and
and
xchg
inc
cdq
mov
mov
xor
sub
sbb
sbb
int3
xchg
cli
retf
(bad)
(bad)
push
imul
int3
cli
mov
pusha
std
lods
sub
lds
or
rcl
mov
inc
in
xchg
mov
xchg
jns
(bad)
(bad)
inc
leave
jbe
nop
sub
test
or
call
cdq
(bad)
(bad)
(bad)
inc
es
jo
jae
inc
cmp
and
or
outs
push
jp
sub
loopne
jne
mov
data16
pop
dec
adc
cmp
and
or
fcomip
(bad)
jmp
or
push
jge
dec
shr
xchg
repz
(bad)
call
leave
outs
mov
js
jmp
cmps
pop
sbb
jmp
pop
(bad)
(bad)
jmp
cdq
sub
adc
mov
dec
push
int3
fiadd
imul
pusha
mov
mov
jge
xor
sub
jbe
xor
sub
(bad)
inc
cmps
sub
add
hlt
dec
mov
mov
adc
add
dec
(bad)
pop
addr16
cld
repnz
scas
cli
jmp
push
sub
adc
xor
jns
movs
jp
xor
pop
lods
xor
push
jb
enter
inc
inc
mov
adc
xchg
push
adc
adc
bound
add
sub
(bad)
(bad)
push
fst
jne
mov
push
sub
stc
js
xor
fist
sbb
adc
mov
call
dec
jle
add
xchg
xchg
mov
inc
repnz
push
jne
les
pop
sar
(bad)
(bad)
push
out
add
and
mov
xor
mov
mov
push
je
jg
cdq
pop
lock
fwait
aaa
mov
bnd
ja
lds
stos
dec
push
push
pop
fisubr
add
(bad)
jmp
mov
stos
fiadd
call
mov
push
cwde
adc
scas
pusha
out
xchg
mov
(bad)
(bad)
fcomip
sub
cdq
test
add
test
pop
jge
aam
(bad)
(bad)
jmp
jmp
xchg
xchg
and
fld
adc
arpl
dec
jg
mov
adc
js
(bad)
(bad)
(bad)
cmp
bound
out
mov
dec
div
dec
mov
sub
leave
mov
dec
pop
push
sub
push
rcr
xchg
adc
mov
rol
mov
(bad)
popa
out
aam
jbe
stos
pushaw
fucomp
pop
push
scas
xchg
jle
retf
into
jg
and
aaa
movs
loopne
neg
sbb
imul
xchg
pop
cmp
out
test
mov
mov
(bad)
(bad)
dec
ins
pushf
adc
in
lock
adc
adc
xor
mov
(bad)
(bad)
inc
cmc
push
sahf
lods
push
push
mov
add
sub
jo
xchg
(bad)
(bad)
(bad)
jmp
mov
mov
cli
or
add
iret
mov
out
push
fadd
push
xchg
fcomip
(bad)
call
dec
jb
stos
sti
pop
jg
not
push
inc
lahf
or
mov
(bad)
(bad)
call
mov
xchg
mov
scas
shr
adc
ja
(bad)
(bad)
jmp
jnp
jecxz
jecxz
pop
nop
imul
cmp
xor
sub
nop
aam
(bad)
jmp
popf
je
xchg
cmp
cmp
pop
fidiv
adc
(bad)
adc
retf
mov
cmp
cmp
(bad)
and
mov
sbb
idiv
(bad)
(bad)
jmp
retf
out
aas
or
xor
imul
mov
pop
bound
push
(bad)
(bad)
(bad)
dec
push
adc
mov
fnstcw
punpckhwd
sub
inc
cmps
fldcw
daa
retf
call
(bad)
(bad)
in
fcomip
sub
clc
popa
sbb
in
in
cmp
js
push
int
bound
push
fs
call
add
outs
and
paddw
dec
es
mov
inc
mov
or
test
add
loope
xchg
stos
fld
(bad)
(bad)
fcomip
or
clc
(bad)
cmps
or
jmp
out
jecxz
lods
dec
repnz
in
(bad)
jg
dec
and
pushf
mov
mov
xor
add
in
fstp
mov
or
mov
push
xchg
rcl
aam
(bad)
std
dec
sahf
fsub
inc
outs
and
cmp
mov
icebp
jg
cmp
out
fmulp
in
sub
cmps
ret
stos
hlt
cmp
pop
(bad)
fild
pop
leave
mov
in
repnz
push
in
adc
jp
mov
push
(bad)
aas
outs
(bad)
(bad)
(bad)
(bad)
jmp
dec
mov
rcl
std
fs
std
test
push
das
stc
ins
movs
xor
dec
xchg
xchg
inc
call
(bad)
(bad)
(bad)
jns
sub
out
xchg
xor
test
aaa
(bad)
lahf
jmp
jbe
repnz
xchg
std
add
(bad)
(bad)
mov
jp
fstp
ss
cmc
movs
jg
ja
outs
(bad)
clc
sti
dec
stc
popa
xor
loope
sbb
jp
fcmove
xchg
faddp
test
cli
iret
out
clc
outs
adc
in
and
std
push
call
call
das
cld
fnsave
scas
out
add
cmp
jle
mov
frndint
lahf
push
xor
loop
mov
imul
repnz
cld
cmp
icebp
cli
movs
jmp
mov
pushf
clc
sbb
call
xchg
in
je
pop
or
(bad)
sti
push
push
dec
arpl
jmp
mov
xchg
(bad)
std
ja
fcomp
fwait
ja
xlat
cmp
(bad)
(bad)
inc
push
cdq
jg
les
add
loope
or
jmp
loopne
mov
jmp
mov
gs
loope
push
mov
mov
or
sbb
movs
clc
aam
sub
mov
mov
retf
mov
cmps
jbe
int3
int
(bad)
(bad)
(bad)
push
call
jge
add
sub
jno
pop
push
cli
outs
sar
iret
pop
icebp
jmp
xchg
std
sbb
daa
fnstsw
jbe
pop
ret
imul
(bad)
(bad)
(bad)
jmp
les
jg
out
add
cmp
xor
data16
outs
sbb
add
cwde
pop
idiv
fxch
(bad)
push
xchg
xor
cmps
les
add
dec
or
and
test
jmp
mov
cmp
ins
test
xchg
std
imul
cmps
repz
sbb
pop
loopne
call
sbb
out
xchg
mov
lods
imul
mov
hlt
push
or
adc
adc
(bad)
(bad)
jmp
fisub
push
jae
jne
or
push
jge
inc
sbb
dec
cmp
mov
(bad)
mov
sti
jle
ja
cmp
jmp
rol
push
icebp
scas
hlt
jg
pop
mov
push
and
ret
inc
pop
loop
js
cmc
pop
jae
fcomip
pop
(bad)
clc
(bad)
in
fistp
stc
mov
cli
cmp
pusha
std
(bad)
mov
fwait
ror
mov
push
adc
out
cmp
out
fdivrp
or
fstp
test
sub
gs
jmp
call
push
dec
ror
nop
test
mov
cld
cmp
neg
jo
xor
stc
std
call
out
cmp
aas
sti
addr16
jecxz
in
pop
sbb
leave
ss
pop
mov
sbb
pop
clc
outs
inc
lahf
jecxz
pusha
dec
mov
fild
ja
enter
ins
mov
out
jp
scas
cld
(bad)
call
rol
sub
lea
(bad)
mov
sti
lods
lock
fadd
(bad)
(bad)
jg
or
in
xchg
cli
and
loopne
fidiv
pop
mov
test
jmp
mov
xchg
xor
jl
cmp
mov
jmp
stc
mov
lock
shl
push
ret
mov
fdivr
(bad)
outs
dec
xchg
lea
adc
ja
std
xor
jecxz
fidiv
out
jno
mov
repnz
imul
pop
mov
enter
lods
dec
xor
data16
scas
repz
pop
push
(bad)
aas
mov
mov
iret
mov
aad
cmp
(bad)
std
mov
mov
in
sahf
push
pusha
mov
jno
mov
mov
mov
aas
out
add
xchg
cmp
(bad)
dec
xchg
xor
popf
push
inc
(bad)
shr
fucomp
mov
dec
pop
fidivr
std
lock
xchg
inc
mov
push
in
mov
(bad)
(bad)
mov
sbb
in
(bad)
repz
ins
lods
jle
pop
(bad)
(bad)
clc
mov
(bad)
fistp
pop
sti
stos
mov
aas
std
mov
ret
pop
xchg
dec
sysret
sti
jg
int3
sbb
icebp
inc
add
mov
(bad)
adc
sub
out
ss
mov
ret
loop
fwait
into
jns
in
loop
leave
pop
xchg
xchg
dec
retf
adc
cmc
pop
jns
mov
push
mov
push
sbb
jmp
mov
add
(bad)
(bad)
cmp
jle
(bad)
aam
std
adc
fs
mov
jnp
outs
mov
cld
fidivr
lahf
cmc
jns
in
jo
call
ror
sahf
sbb
jp
push
mov
sub
inc
jg
mov
out
sub
fdivr
or
out
and
aas
inc
mov
sbb
fisubr
jmp
cmp
pop
jmp
out
imul
(bad)
sar
hlt
mov
cli
(bad)
repz
mov
pusha
mov
ins
call
sbb
jecxz
lea
push
mov
mov
mov
push
test
xchg
adc
jg
addr16
rol
loopne
int3
shl
cmp
(bad)
(bad)
(bad)
(bad)
cli
gs
js
out
push
loope
pop
mov
xor
loope
jmp
and
repz
xchg
push
mov
mov
mov
das
xchg
dec
or
adc
cld
rcr
aad
shr
je
out
mov
push
(bad)
fcomip
outs
repnz
fdivr
retf
rcr
std
outs
sbb
inc
inc
xchg
xchg
shl
push
fbstp
aaa
push
idiv
das
or
repz
lods
xor
fistp
cli
(bad)
fdiv
(bad)
push
loope
daa
clc
ja
push
outs
pushf
outs
call
int
pop
mov
dec
shr
hlt
addr16
xor
push
xor
sti
xchg
xor
dec
popa
jge
and
neg
mov
xchg
into
mov
inc
mov
bound
xor
sbb
sbb
dec
xchg
mov
cmp
or
cli
fwait
outs
and
jno
pop
rol
mov
jp
pop
(bad)
cdq
data16
(bad)
jg
xor
ret
adc
mov
jp
or
xlat
xor
scas
sbb
cmc
pusha
mov
lock
test
pop
call
inc
aas
jmp
movs
pop
loopne
in
mov
mov
pop
xchg
aad
mov
fcomip
cmp
movs
pop
pop
fstp
sbb
fld
jnp
in
mov
jns
jg
pop
pop
mov
ins
sar
jb
(bad)
dec
mov
jo
and
shl
cmps
scas
(bad)
(bad)
(bad)
(bad)
mov
sub
rol
xchg
push
jo
adc
xchg
inc
arpl
xor
mov
mov
mov
mov
sub
ins
mov
test
mov
dec
push
pop
(bad)
(bad)
(bad)
(bad)
ds
hlt
popa
mov
adc
cmp
jbe
mov
call
xchg
cmp
cdq
push
(bad)
mov
es
(bad)
(bad)
(bad)
call
fnstenv
shr
(bad)
js
outs
ds
add
shr
lahf
retf
push
push
data16
sbb
and
sahf
dec
pop
sbb
sbb
lds
mov
in
mov
shr
jmp
cwde
call
xchg
cli
push
add
dec
and
sbb
(bad)
(bad)
inc
mov
in
std
jmp
stc
xchg
mov
pop
xchg
ss
mov
and
sub
dec
jmp
je
xchg
mov
sbb
outs
fdiv
or
fisttp
dec
mov
cli
ins
lock
(bad)
push
cs
test
aaa
test
in
ret
lock
mov
into
mov
mov
mov
idiv
shl
xchg
aas
jmp
into
aas
or
dec
adc
mov
pmulhuw
(bad)
(bad)
(bad)
jmp
mov
adc
cmp
ret
push
sbb
cli
cmp
fcomp
xchg
mov
pop
aad
mov
and
xchg
dec
test
sti
xchg
rol
shl
outs
sahf
scas
add
push
mov
mov
mov
add
ficomp
inc
jmp
out
scas
hlt
add
and
iret
(bad)
jmp
add
mov
inc
adc
push
stc
out
and
push
cld
jg
inc
mov
mov
ins
sub
adc
mov
mov
mov
retf
pop
or
mov
add
sbb
push
in
push
xlat
pop
pop
std
cmps
mov
inc
sar
popf
(bad)
push
(bad)
jle
iret
dec
pop
loop
add
jl
cld
lahf
fcomp
cmps
out
ret
jg
sahf
es
cld
xor
loop
mov
std
imul
push
cmps
inc
cmc
jno
lock
cmp
in
mov
(bad)
(bad)
fcomip
clc
mov
push
inc
inc
jle
icebp
sub
push
pop
add
jge
in
cmp
das
clc
retf
hlt
call
jp
pop
cli
cmp
shl
shl
xchg
aam
aas
add
int
or
das
pushf
jmp
scas
loopne
(bad)
xchg
out
sub
lahf
shr
lock
(bad)
stos
daa
not
inc
bound
popf
iret
clc
mov
es
hlt
add
into
dec
lds
das
dec
call
pop
(bad)
mov
push
out
fcomip
lods
test
mov
push
scas
push
into
outs
mov
(bad)
(bad)
inc
pop
test
sub
mov
iret
aaa
add
out
push
in
cmp
hlt
repnz
jmp
jle
test
stos
cmp
lahf
mov
jns
iret
mov
adc
add
jno
mov
aad
fidiv
adc
jmp
stos
hlt
cmp
call
dec
push
inc
sbb
push
lahf
mov
xor
mov
shl
loopne
sti
pop
mov
dec
paddusw
pop
stc
push
(bad)
in
push
loopne
jg
inc
les
cmp
adc
cmp
mov
xlat
std
in
push
ja
push
aam
outs
js
(bad)
sahf
pop
cmc
push
inc
jne
movs
pop
test
fldenv
idiv
pop
ins
clc
add
std
repz
jg
push
mov
xlat
push
cmp
add
(bad)
push
mov
cmps
xchg
std
push
pop
mov
mov
(bad)
out
cmps
cmp
inc
or
push
cld
jno
rol
stc
fwait
mov
lods
div
or
(bad)
clc
fcom
jno
inc
(bad)
(bad)
loopne
dec
pop
ret
mov
adc
xchg
cmc
movs
repz
mov
mov
je
jne
stos
fisttp
jle
into
fidiv
call
test
pop
or
jg
jle
sbb
mov
fnstsw
aaa
cld
push
cli
jns
aad
mov
sti
sub
mov
adc
fmul
popa
mov
ret
int
(bad)
icebp
lds
mov
push
fadd
pop
mov
clc
pop
out
add
out
jecxz
jl
aaa
pause
xchg
out
cmp
fadd
int3
out
loop
mov
loopne
daa
push
adc
jl
push
mov
aaa
hlt
(bad)
loopne
outs
loopne
sti
clc
fwait
cmp
xor
into
(bad)
mov
inc
dec
out
mov
mov
mov
es
icebp
aas
js
fstp
jo
or
enter
mov
sub
pop
aad
scas
mov
clc
(bad)
sar
xchg
test
shl
sbb
dec
sbb
lahf
into
or
add
sub
(bad)
cmp
and
jl
and
repz
fadd
sbb
pusha
stc
add
adc
std
mov
mov
outs
out
sti
cwde
popa
aas
loop
inc
(bad)
fwait
lahf
push
mov
outs
and
cmc
mov
add
stc
sbb
mov
aas
clc
dec
enter
clc
add
test
dec
pusha
jae
loope
dec
icebp
das
jp
aas
fsubp
xor
pop
stos
cmp
(bad)
jg
idiv
adc
scas
in
shl
jg
clc
xchg
iret
push
jg
pop
cmp
rol
xchg
ss
addr16
fbstp
fnstenv
icebp
sub
lahf
mov
(bad)
int
push
mov
jg
fadd
dec
les
pop
std
sub
sar
jg
das
cli
retf
(bad)
push
movs
push
outs
(bad)
xchg
dec
fsubr
cld
cmp
std
das
out
movups
(bad)
hlt
cmovl
push
fidivr
not
push
pop
lock
(bad)
(bad)
jmp
jbe
lock
loope
jmp
fimul
lea
aas
adc
out
cli
shl
sbb
dec
lahf
mov
nop
inc
out
inc
cld
mov
fucomp
aas
mov
pop
(bad)
sbb
pusha
jl
mov
fwait
(bad)
call
adc
push
jge
jbe
iret
neg
dec
pop
loopne
idiv
fs
and
mov
std
sbb
jmp
cli
scas
mov
fs
bound
clc
and
pop
push
or
sub
in
sub
dec
aas
fst
pop
mov
pop
push
mov
shl
dec
xlat
dec
out
pop
cld
aaa
push
and
ss
imul
outs
js
js
pusha
fidivr
nop
or
mov
ret
push
sti
gs
push
adc
sub
cli
pop
sti
lods
ret
push
and
push
cli
inc
test
(bad)
cmc
sbb
ja
pusha
jecxz
(bad)
xor
pop
inc
sbb
test
loop
and
jl
out
(bad)
out
fwait
mov
scas
hlt
mov
fnstsw
in
cmp
push
jg
pop
jae
not
enter
pop
xchg
dec
(bad)
(bad)
clc
mov
inc
push
sar
int
mov
pop
std
popf
cmps
stos
popf
(bad)
scas
movs
leave
pop
mov
stc
imul
ins
inc
scas
hlt
sbb
je
dec
cli
or
xchg
jno
ret
bound
or
ss
les
movs
dec
shl
push
or
(bad)
push
and
icebp
call
xor
lds
inc
call
dec
adc
sbb
sti
pop
xchg
pop
push
inc
mov
ja
dec
stos
mov
nop
dec
cmps
xchg
xor
(bad)
out
mov
xchg
iret
mov
(bad)
(bad)
(bad)
jmp
test
into
xchg
xchg
test
cmp
cmp
sub
push
sbb
mov
adc
dec
mov
imul
inc
enter
jb
add
(bad)
push
imul
jno
sbb
bound
xchg
mov
test
test
nop
loop
push
bound
inc
xchg
mov
mov
cmp
add
(bad)
(bad)
call
mov
shl
ficom
cdq
jae
data16
sub
(bad)
call
cld
or
mov
mov
scas
cmps
ffreep
push
jge
sbb
lods
mov
cmp
jne
(bad)
(bad)
inc
push
retf
ins
call
push
ret
repnz
sbb
daa
aad
mov
jne
mov
and
pop
mov
stos
cmp
fwait
lock
(bad)
(bad)
mov
cli
push
lahf
jmp
out
icebp
pop
cmp
(bad)
aas
icebp
xor
aas
popa
pop
in
(bad)
sub
mov
in
pop
mov
cmp
int
ja
dec
test
mov
stc
out
hlt
(bad)
(bad)
inc
jg
neg
or
dec
pop
mov
or
(bad)
sbb
outs
aaa
repz
cmc
call
cld
pop
pop
xchg
mov
ins
fcomip
test
cmp
jb
push
mov
sbb
mov
(bad)
mov
leave
(bad)
mov
dec
push
add
inc
mov
cvttps2pi
into
sub
int3
sahf
jmp
call
(bad)
(bad)
mov
mov
das
shl
scas
jbe
sar
jmp
pop
pop
jmp
lahf
sbb
lods
mov
aas
jae
in
std
cmp
jge
mov
ret
pop
xor
jp
nop
adc
and
adc
mov
fdivr
xor
pop
lods
shr
mov
(bad)
lock
(bad)
jmp
iret
(bad)
call
sbb
mov
leave
rol
add
mov
jg
idiv
int
jmp
in
dec
cmp
in
lock
cmp
inc
bound
(bad)
std
fnstcw
fisttp
and
sbb
cmp
inc
jmp
std
js
call
ret
or
mov
in
(bad)
mov
in
pop
inc
cmp
hlt
cwde
pop
not
movs
test
push
sar
sar
repnz
ror
icebp
jae
adc
outs
pavgb
in
stc
jbe
add
xchg
std
dec
lahf
or
daa
rcr
mov
jg
add
fistp
clc
cwde
lahf
out
outs
rcr
mov
jmp
(bad)
fsub
mov
scas
jmp
ds
cs
mov
xchg
mov
jbe
add
lock
loope
sahf
icebp
xchg
in
jmp
jo
fimul
mov
nop
push
nop
sar
jge
(bad)
mov
addr16
push
xchg
sub
push
mov
cmp
shl
stc
cmps
mov
sbb
sub
pop
jmp
cmp
les
repnz
call
in
aas
shr
mov
clc
cli
in
adc
aas
pop
popa
sti
fwait
imul
sub
pop
add
pop
mov
mov
shr
push
mov
aas
imul
jmp
push
fcomp
outs
fadd
jmp
jl
and
mov
xchg
in
or
call
pop
add
shl
mov
fnstenv
imul
ret
inc
lods
stos
pop
mov
lahf
dec
pop
(bad)
jmp
mov
in
sbb
adc
retf
add
pop
jno
mov
mov
sti
ss
cwde
lods
fwait
sub
fstp
int3
inc
jb
cmp
(bad)
dec
loop
mov
retf
fstp
mov
dec
xchg
push
push
push
arpl
or
cmp
cld
scas
clc
mov
mul
jg
inc
gs
into
mov
mov
pop
out
stc
out
popa
cmp
jg
cs
aad
mov
sub
mov
(bad)
clc
sbb
ret
pop
aam
cdq
lock
pop
mov
and
scas
es
or
dec
iret
ins
xchg
mov
js
dec
mov
mov
xchg
out
fistp
inc
sar
push
cld
add
sbb
test
mov
call
(bad)
shl
sti
in
pop
out
leave
aam
sub
lahf
hlt
sub
es
cwde
xor
icebp
pop
cmc
mov
cmp
mov
xlat
out
mov
pushf
aaa
sub
and
fs
aas
cli
das
jbe
aas
repnz
cld
cmps
sub
(bad)
jmp
add
aaa
into
pop
push
aad
std
cmps
jle
lock
push
ins
(bad)
cmc
pop
stc
push
stc
ret
and
dec
pop
call
pop
out
(bad)
stos
push
mov
cmp
div
(bad)
loope
jmp
loope
add
aas
jmp
out
xor
shr
lahf
(bad)
mov
fdivr
(bad)
(bad)
dec
std
dec
cmc
adc
mov
in
aam
jnp
mov
dec
adc
mov
add
mov
and
scas
clc
cmp
mov
outs
mov
nop
iret
dec
repnz
shl
cld
sub
push
ficom
stc
dec
(bad)
(bad)
(bad)
jg
test
sbb
xor
lahf
jno
sub
std
adc
add
cmp
mov
dec
xlat
mov
in
mov
add
shl
xor
ja
jmp
xchg
in
ss
pop
leave
pop
add
sub
dec
add
inc
jg
jmp
sar
fisub
push
aaa
loopne
mov
popf
jmp
(bad)
mov
inc
pop
in
and
dec
aaa
out
xor
movs
and
js
inc
xchg
ins
std
add
pop
loopne
(bad)
out
jo
shl
pop
std
sbb
cmps
or
adc
push
mov
cmps
clc
(bad)
dec
or
int3
inc
ss
mov
push
xlat
lods
dec
mov
in
inc
shl
cmc
je
xchg
xlat
sbb
pop
pop
adc
call
(bad)
(bad)
dec
push
adc
sti
lea
xchg
jmp
mov
int
nop
in
(bad)
(bad)
(bad)
push
fcmovnu
aas
jl
in
jg
loop
adc
xor
push
mov
pushf
cmp
paddusb
call
setg
loop
aas
jg
xor
addr16
mov
lea
jg
push
xor
pop
mov
es
(bad)
mov
or
(bad)
in
or
push
ror
push
scas
in
imul
ror
xchg
hlt
jmp
sbb
pop
repnz
mov
bound
std
int
bound
pop
mov
ret
clc
(bad)
call
push
jmp
shl
jecxz
imul
ss
mov
mov
or
adc
repz
and
push
mov
jmp
pop
add
add
ds
mov
jnp
pop
mov
jb
xchg
std
mov
(bad)
xchg
les
(bad)
sbb
ja
call
lds
call
out
ds
xchg
fmul
cld
iret
mov
scas
xchg
lahf
fdiv
dec
ror
push
leave
jg
jle
div
(bad)
sbb
pop
ds
sub
sbb
sbb
leave
ja
ret
pop
jp
imul
call
adc
mov
add
lods
dec
ins
push
imul
cli
(bad)
jmp
ret
inc
adc
std
repz
mov
bound
in
(bad)
(bad)
(bad)
ficomp
sub
retf
jbe
push
sbb
in
mov
scas
cmp
test
mov
mov
jmp
dec
mov
push
mov
je
into
fstp
test
fnstenv
push
jl
leave
rcl
or
shl
pop
pop
(bad)
(bad)
mov
(bad)
push
in
out
scas
rcr
fstp
xchg
fs
data16
mov
call
(bad)
fisubr
or
dec
sahf
movs
ficom
push
movs
sbb
push
push
popa
imul
add
(bad)
(bad)
jmp
add
push
sub
mov
movs
push
add
pop
cmp
test
push
push
loope
ins
rol
xor
loope
pusha
xor
mov
pop
dec
mov
mov
cmp
jo
clc
lahf
jae
xchg
mov
push
(bad)
imul
sbb
dec
test
(bad)
(bad)
jmp
sbb
mov
xor
pop
add
xor
fst
push
mov
mov
mov
lea
imul
(bad)
inc
mov
add
stos
ins
imul
cmp
jg
cmc
clc
mov
sub
xchg
das
mov
push
(bad)
call
inc
sub
jle
cwde
mov
pop
lea
rcl
ds
cmp
sbb
dec
(bad)
(bad)
(bad)
dec
xchg
adc
je
sbb
xor
sub
jl
mov
fdiv
add
(bad)
in
or
int3
int
mov
rcl
iret
out
sbb
dec
mov
or
(bad)
(bad)
jmp
or
add
dec
adc
xchg
sub
sbb
loop
in
mov
(bad)
(bad)
call
jp
or
lahf
call
dec
cmp
sahf
push
daa
and
and
cmc
mov
mov
(bad)
mov
or
stos
stos
mov
arpl
jecxz
mov
cwde
lods
cmp
(bad)
call
or
ret
push
jo
xor
fwait
push
jae
inc
sub
push
stos
(bad)
(bad)
(bad)
inc
pop
iret
adc
retf
add
in
sahf
pop
(bad)
hlt
mov
pop
and
int3
(bad)
inc
pop
mov
cwde
add
pop
mov
push
mov
das
add
sbb
push
and
popf
push
fcomp
outs
ins
enter
jns
(bad)
(bad)
call
cdq
jo
gs
cmps
xor
scas
jecxz
ins
ret
dec
mov
test
fucomi
add
retf
(bad)
(bad)
in
inc
mov
in
push
mov
int3
cmps
sub
out
dec
jo
inc
(bad)
cmc
or
mov
mov
(bad)
push
std
movs
mov
pop
cmp
lea
sub
jecxz
(bad)
call
add
push
push
mov
out
inc
pusha
adc
std
aam
in
mov
(bad)
(bad)
call
pop
stos
call
movs
fimul
fidivr
cmp
retf
(bad)
(bad)
(bad)
jmp
lods
inc
je
cmp
in
push
cdq
push
mov
sbb
mov
pushf
mov
(bad)
(bad)
(bad)
call
in
mov
or
mov
sub
iret
adc
aaa
pushf
fsub
adc
or
mov
add
jno
xor
xor
icebp
movs
mov
xchg
(bad)
(bad)
jg
loopne
xchg
xor
dec
mov
cmp
sbb
iret
mov
ret
(bad)
mov
jns
ret
out
rol
jae
sub
or
outs
sahf
xlat
jg
cli
(bad)
call
icebp
repz
xor
cdq
add
mov
cmps
sbb
jo
pop
adc
test
les
(bad)
arpl
xchg
data16
pop
xor
push
nop
stos
or
xchg
sbb
dec
sbb
lds
sahf
pusha
dec
test
mov
int3
gs
(bad)
mov
add
nop
retf
push
cmp
js
sub
fild
xchg
cmc
(bad)
(bad)
(bad)
ds
mov
test
jne
hlt
out
shl
jecxz
cmp
(bad)
call
adc
add
dec
jnp
and
add
cmp
xlat
ja
mov
push
cmp
cmc
push
std
(bad)
mov
int3
xchg
test
sub
sub
add
(bad)
call
test
push
inc
cmp
sbb
add
or
fist
jnp
and
sub
add
xchg
sbb
or
xchg
iret
fdiv
fistp
(bad)
dec
scas
leave
rcr
push
pop
sbb
imul
xor
std
movs
jmp
cmc
pop
idiv
lock
outs
gs
(bad)
call
dec
cmps
mov
out
imul
pop
in
pop
mov
(bad)
jmp
bound
(bad)
mov
jae
push
(bad)
mov
imul
pop
dec
loope
dec
mov
pop
outs
pop
mov
(bad)
dec
inc
push
rcl
je
mov
sti
sub
jl
lea
(bad)
fdivrp
xlat
mov
in
cli
(bad)
xor
xchg
jmp
adc
sti
mov
dec
(bad)
push
retf
int
cmp
lds
mov
or
das
clc
inc
add
sub
fsubr
(bad)
jmp
adc
ret
add
cld
pop
mov
popa
sti
jne
inc
movs
daa
xor
add
mov
dec
cmp
test
(bad)
(bad)
(bad)
mov
leave
mov
icebp
imul
imul
inc
jge
push
loop
dec
dec
fcos
(bad)
(bad)
jmp
fwait
pop
jp
cmp
test
inc
xor
pop
(bad)
ins
jl
sahf
push
pop
push
or
(bad)
(bad)
(bad)
jmp
sub
mov
scas
pushf
add
(bad)
repnz
cmp
ret
cmp
xchg
and
not
pop
pop
cli
add
fcmovu
add
ins
hlt
pop
aaa
push
ror
pand
(bad)
mov
aas
cmp
adc
jno
and
adc
sub
xor
imul
jle
adc
xlat
hlt
jle
(bad)
lds
(bad)
call
push
pushf
jnp
and
inc
jns
movs
in
push
pop
cli
add
push
imul
push
fdivr
(bad)
dec
in
cld
xor
jecxz
popa
jg
les
(bad)
enter
ins
jne
add
mov
pop
clc
clc
repnz
cli
sbb
out
stc
mov
jbe
(bad)
(bad)
jmp
iret
lock
jbe
add
pop
mov
movs
mov
std
xlat
jmp
or
clc
inc
adc
loop
repnz
loope
jg
(bad)
jmp
dec
mov
cli
call
jecxz
mov
or
mov
xchg
push
or
adc
add
add
mov
jmp
(bad)
jmp
push
mov
nop
mov
pop
in
push
lds
arpl
mov
(bad)
call
and
arpl
(bad)
jno
(bad)
clc
jno
lahf
inc
dec
lahf
out
adc
or
push
sbb
sub
pop
in
sub
sti
rcr
iret
(bad)
jg
sbb
adc
retf
mov
xchg
cmp
xchg
jmp
cld
(bad)
(bad)
call
call
inc
gs
mov
in
add
lods
cmps
jae
aam
test
(bad)
inc
sahf
test
cmp
mov
xchg
cmp
sub
ja
das
pop
(bad)
jmp
sbb
add
pop
cli
aad
std
loop
repnz
lock
mov
scas
iret
fistp
mov
and
push
aas
mov
cmp
push
shl
dec
push
jl
mov
pop
call
jg
(bad)
mov
js
or
add
(bad)
(bad)
mov
sti
xor
pop
inc
dec
data16
lahf
and
pop
test
pop
cmc
pop
bound
cmp
(bad)
pop
xor
mov
jge
xor
mov
(bad)
(bad)
fist
movq
outs
cli
pop
aam
fyl2xp1
out
mov
pop
fmul
(bad)
mov
xor
adc
pop
push
dec
mov
bound
repnz
jg
(bad)
mov
and
sub
jns
jmp
or
sub
(bad)
mov
and
repz
fcomip
outs
mov
push
lds
(bad)
dec
cld
jae
and
cmp
test
inc
(bad)
ds
leave
mov
(bad)
(bad)
(bad)
(bad)
sti
cmp
dec
or
add
sar
jp
jle
and
(bad)
cwde
add
xor
mov
push
cdq
ja
add
mov
xchg
or
pop
pop
inc
or
pusha
movs
inc
inc
dec
and
out
ja
push
(bad)
dec
cmps
jmp
pop
aam
pop
(bad)
daa
sub
jae
inc
mov
jl
in
shl
add
(bad)
(bad)
jmp
cmp
or
pop
outs
dec
call
sbb
iret
cmp
push
std
(bad)
jge
xor
fst
pop
pusha
sbb
hlt
mov
lods
adc
repnz
dec
jg
(bad)
dec
pop
mov
cmc
call
sub
cmps
jne
into
mov
xor
(bad)
(bad)
(bad)
dec
jae
and
adc
hlt
or
stos
mov
dec
test
movs
add
pop
push
movs
imul
and
inc
push
sahf
fistp
inc
mov
sub
pop
add
or
je
inc
inc
(bad)
(bad)
(bad)
jmp
inc
add
push
nop
push
xchg
xchg
mov
and
ins
pop
stos
fisttp
es
rcl
ss
(bad)
push
xor
xor
push
shr
movs
hlt
adc
in
push
mov
or
(bad)
(bad)
(bad)
jmp
inc
add
repz
nop
loope
adc
xor
inc
sub
repz
push
or
call
xchg
and
shl
pusha
jo
out
inc
test
push
rol
sbb
mov
xchg
scas
and
inc
xchg
push
jge
cmp
cli
dec
leave
and
aaa
cld
(bad)
call
in
ins
js
cmp
cs
jle
(bad)
(bad)
and
inc
xchg
lock
(bad)
dec
mov
xor
cmp
pushf
(bad)
aam
dec
aaa
stos
fidiv
out
(bad)
(bad)
dec
cmp
push
add
adc
adc
loopne
in
push
mov
xchg
mov
clc
adc
jns
fistp
pop
xchg
jo
adc
inc
inc
leave
mov
cmp
idiv
call
leave
outs
sbb
ss
sbb
cmps
fild
inc
adc
cmp
dec
xor
(bad)
(bad)
cmp
movs
dec
push
mov
sub
xchg
stc
dec
cwde
stos
dec
xor
fnstenv
inc
movs
(bad)
(bad)
(bad)
(bad)
jmp
aam
mov
jno
cwde
or
pop
cmp
mov
and
dec
mov
dec
gs
add
(bad)
push
shr
shr
cmp
rcr
cmp
mov
(bad)
(bad)
(bad)
jg
xchg
jns
enter
rcl
adc
jl
or
push
xlat
(bad)
aaa
mov
sub
call
loope
push
cmps
lea
and
test
bound
jge
test
adc
ficomp
jg
dec
std
mov
push
add
sub
mov
int
sbb
retf
cdq
xchg
(bad)
(bad)
(bad)
mov
pop
pop
or
pusha
mov
das
fst
mov
jge
jge
(bad)
mov
call
mov
fwait
pop
dec
pop
ror
jmp
xor
pusha
mov
cwde
xchg
cmp
(bad)
inc
xor
add
stos
adc
cmps
mov
inc
pusha
add
hlt
mov
jmp
ja
(bad)
(bad)
(bad)
call
pop
out
jb
jno
ret
fwait
jbe
push
jle
cmp
dec
xchg
adc
imul
cmp
cmp
(bad)
jmp
bsr
add
add
out
aad
or
mov
loopne
dec
iret
jp
xor
js
pop
(bad)
(bad)
(bad)
push
repz
and
dec
sar
xchg
push
xchg
xor
and
fild
pushf
sahf
jmp
aad
loopne
mov
ret
popf
dec
or
xor
js
jl
sub
jmp
(bad)
jg
inc
push
neg
mov
(bad)
out
mov
cli
dec
pop
push
mov
pop
cmps
shr
in
(bad)
(bad)
(bad)
inc
lahf
pop
mov
pop
ins
call
out
pop
and
sub
pop
stc
ss
shl
push
jne
(bad)
out
fnstcw
pop
jmp
push
out
sahf
fisub
pause
(bad)
push
enter
mov
ja
fmul
stos
mov
inc
in
cli
sbb
int3
dec
push
test
fld
mov
(bad)
dec
ds
mov
ret
mov
iret
test
(bad)
or
cmp
fbstp
pop
mov
rcr
jb
and
xor
(bad)
call
push
ins
cmp
loope
dec
ds
daa
sti
sar
mov
add
pop
cmp
or
pop
stos
inc
and
mov
ja
mov
push
sbb
(bad)
(bad)
(bad)
dec
lods
retf
(bad)
cmp
jg
scas
into
loopne
sbb
xor
hlt
stos
jle
(bad)
jg
loop
(bad)
popa
add
ret
loopne
in
repz
repz
test
mov
std
lods
mov
add
hlt
(bad)
loope
mov
and
jg
fisub
inc
(bad)
xor
mov
(bad)
(bad)
(bad)
mov
pop
fisttp
push
fdivr
daa
in
std
mov
mov
fcmovbe
xchg
pop
xor
inc
mov
dec
(bad)
cdq
push
je
in
push
ret
repz
std
pop
fsub
push
adc
sbb
sub
cmps
loope
dec
ja
push
mov
(bad)
(bad)
jge
jmp
xchg
jp
aad
inc
fnsave
test
mov
push
cmp
pop
loopne
into
cmp
sbb
sar
and
lock
vcmpsd
mov
in
fdivrp
loope
sbb
jge
adc
not
mov
(bad)
(bad)
out
out
bound
clc
or
mov
imul
out
outs
jmp
loope
mov
jmp
dec
sub
js
jae
(bad)
xchg
nop
dec
inc
js
jg
pop
mov
js
loopne
aas
fisubr
adc
jle
cmp
xchg
mov
neg
pop
(bad)
(bad)
(bad)
jg
and
cmps
cmp
push
rol
aaa
test
ins
ss
mov
(bad)
push
jno
nop
mov
inc
add
rcr
push
in
mov
movs
mov
fstp
std
jno
jno
mov
pusha
push
inc
jmp
jl
fcmovnu
std
or
in
scas
(bad)
frstor
sbb
out
(bad)
xchg
aas
or
mov
jnp
(bad)
push
(bad)
jo
xlat
inc
mov
es
push
inc
xor
push
and
call
mov
mov
mov
mov
pop
adc
pop
(bad)
pop
cmp
std
ja
lock
inc
pop
jle
not
sbb
xchg
and
xchg
das
dec
pop
movs
cmps
pop
mov
cli
les
gs
(bad)
(bad)
(bad)
jmp
aaa
fs
lahf
cmp
lods
cdq
push
data16
leave
sbb
test
aam
div
jbe
test
scas
clc
(bad)
cli
fdivr
xchg
(bad)
ds
hlt
sar
push
jg
ffreep
pop
jg
or
jle
jge
mov
(bad)
(bad)
push
pop
cli
push
fwait
clc
stc
sbb
pop
inc
ficomp
enter
xchg
lahf
jmp
add
(bad)
jmp
fcmovnu
inc
aas
shl
js
xor
cli
jg
sub
jg
shl
jmp
movs
fnstcw
cmp
xor
xlat
sub
inc
stc
add
std
dec
push
jne
std
popf
and
xchg
test
mov
aas
movs
pop
jg
enter
(bad)
(bad)
call
sbb
or
and
dec
bound
inc
xchg
(bad)
(bad)
(bad)
dec
imul
and
xor
jp
sub
xchg
mov
lods
test
push
or
inc
mov
push
dec
push
leave
lods
push
aaa
daa
sar
(bad)
dec
sub
dec
jge
mov
mov
adc
pusha
mov
adc
dec
jo
sub
push
adc
(bad)
call
ins
arpl
xchg
popf
pop
ror
cmc
inc
inc
stc
inc
(bad)
lahf
pop
pop
xor
aam
jns
call
test
stc
jecxz
inc
inc
mov
lock
cmp
sbb
and
(bad)
call
dec
sar
mov
mov
lahf
stc
ins
mov
std
mov
fucomip
(bad)
(bad)
jmp
pop
aas
loopne
(bad)
mov
push
sub
pop
xchg
pop
(bad)
(bad)
(bad)
push
stos
xor
xor
stos
jmp
inc
cmps
mov
ds
cmc
inc
push
push
(bad)
call
out
xlat
fidivr
adc
xchg
stos
mov
das
mov
cmp
cmc
idiv
vprotd
(bad)
cmp
idiv
push
retf
and
mov
jg
push
fbstp
dec
les
push
nop
sbb
ret
retf
imul
mov
xchg
and
xor
rcr
or
js
jmp
repz
add
scas
fsubr
push
lds
push
(bad)
(bad)
adc
arpl
inc
mov
cmp
and
inc
sti
std
push
jmp
and
jecxz
shl
loope
ret
lods
sbb
data16
sub
push
cdq
xchg
call
add
adc
(bad)
(bad)
call
push
mov
xor
cmp
out
mov
popa
(bad)
xor
push
inc
retf
sbb
xor
(bad)
cli
ins
inc
and
inc
adc
cmp
(bad)
(bad)
jg
fmul
je
jmp
dec
cmp
inc
mov
icebp
icebp
inc
in
mov
jb
cmp
icebp
add
push
sbb
mov
mov
(bad)
mov
(bad)
(bad)
inc
lahf
mov
js
(bad)
xchg
pop
add
ror
std
cmc
lock
rcl
outs
ss
mov
xchg
cmovbe
sar
inc
cs
mov
dec
cmp
icebp
pushf
cld
jae
mov
(bad)
mov
cwde
in
call
add
add
test
xchg
mov
int
jne
mov
(bad)
(bad)
(bad)
jmp
cmp
pop
sub
not
xchg
retf
aaa
or
dec
out
mov
leave
mov
(bad)
(bad)
(bad)
inc
dec
imul
cdq
dec
mov
hlt
in
fst
pop
lods
mov
inc
xchg
push
aam
loope
das
sar
lods
fbld
fidivr
dec
sub
pusha
and
(bad)
(bad)
mov
push
out
jge
dec
xchg
adc
push
pop
inc
shr
stos
sub
loopne
aad
push
loopne
jg
mov
mov
xchg
push
push
sbb
int3
and
and
and
inc
sub
shl
jne
mov
adc
and
(bad)
(bad)
call
test
fst
(bad)
push
jne
push
call
xor
cmp
les
lahf
sub
(bad)
(bad)
push
cmp
adc
leave
push
sub
add
cmps
nop
out
test
jb
popa
scas
test
inc
add
pop
mov
mov
test
lods
(bad)
(bad)
(bad)
(bad)
jmp
dec
(bad)
inc
inc
adc
sbb
fadd
jae
(bad)
xor
and
loop
push
cld
sbb
fs
pop
or
xor
sbb
loop
or
push
(bad)
call
mov
int3
push
cmp
(bad)
out
scas
inc
mov
(bad)
(bad)
(bad)
jmp
daa
repnz
pushf
mov
xchg
mov
inc
stos
push
inc
add
add
stc
(bad)
(bad)
dec
pop
add
jmp
mov
mov
add
dec
ins
leave
sub
(bad)
dec
iret
pop
cmp
mov
clc
arpl
push
and
add
(bad)
(bad)
(bad)
inc
cdq
push
test
mov
pop
mov
addr16
pop
mov
push
retf
out
(bad)
(bad)
(bad)
fxch
rcl
stos
mov
out
pusha
mov
iret
popf
dec
(bad)
test
sub
sbb
mov
mov
add
sahf
mov
mov
(bad)
xor
jg
and
rcl
inc
sub
cwde
inc
dec
push
xor
xchg
aam
out
jge
(bad)
(bad)
call
jp
jo
xchg
push
dec
xchg
mov
(bad)
sbb
enter
mov
cmp
or
mov
or
push
aad
ins
mov
inc
sub
lods
push
(bad)
(bad)
jmp
les
sbb
mov
jns
mov
enter
jb
or
push
xchg
cs
or
(bad)
(bad)
dec
or
push
aam
mov
clc
test
mov
jle
ja
push
push
xchg
mov
fdivr
aad
sar
jmp
add
or
leave
ret
xor
adc
ret
test
jmp
push
jmp
ins
cmp
sti
mov
call
or
test
call
shr
scas
pop
mov
jge
push
fs
ret
xchg
lds
fs
xor
ret
(bad)
(bad)
(bad)
jmp
mov
jne
jecxz
int
ds
jp
repnz
jp
pop
fstp
cld
(bad)
jmp
fprem
icebp
in
add
inc
or
ret
jge
fld
(bad)
call
shr
sbb
mov
mov
pusha
jae
cmc
stos
aad
test
jnp
mov
jecxz
(bad)
(bad)
mov
pop
stos
push
ret
outs
adc
sub
add
adc
(bad)
(bad)
(bad)
push
aas
data16
loopne
enter
and
cmp
ror
push
xlat
mov
push
push
int
test
xor
mov
or
test
leave
inc
pop
addr16
movs
push
xor
fdivr
(bad)
dec
sub
cdq
call
mov
out
inc
retf
mov
push
inc
(bad)
(bad)
(bad)
inc
out
cdq
(bad)
dec
mov
pop
push
scas
dec
xor
pusha
or
(bad)
(bad)
fld
data16
or
sbb
mov
stc
pop
jns
mov
(bad)
fcomip
loope
xor
push
data16
push
test
scas
sti
add
adc
lds
cld
(bad)
(bad)
inc
dec
jge
fnstenv
inc
fstp
pop
nop
scas
cli
ficomp
stos
cmp
rol
out
cli
les
lods
cld
(bad)
jmp
inc
add
sar
out
sbb
(bad)
jbe
movs
mov
cwde
push
icebp
std
(bad)
(bad)
(bad)
js
rcl
mov
xlat
cmc
pop
cmp
push
jg
xor
xor
fidivr
(bad)
(bad)
call
into
jae
inc
test
dec
xlat
cli
ja
fcmovb
add
ss
(bad)
mov
(bad)
(bad)
(bad)
dec
sub
mov
psraw
pop
pop
jno
sub
scas
mov
out
leave
jmp
xstore-rng
cmps
inc
mov
sub
jl
out
jbe
fistp
dec
add
(bad)
(bad)
call
jne
outs
loop
lock
bound
in
movs
ins
inc
mov
and
js
test
(bad)
(bad)
(bad)
fdiv
mov
test
jb
cmp
adc
dec
dec
sahf
fadd
call
cli
mov
adc
mov
jge
popa
or
cmp
(bad)
lea
xor
pop
sbb
(bad)
dec
(bad)
cmp
xchg
ds
cmps
mov
mov
pop
pushf
es
cwde
(bad)
jmp
sub
ret
lea
stos
inc
pop
stc
test
ret
outs
or
loope
fcomip
(bad)
call
mov
lds
movs
fisttp
adc
shl
(bad)
(bad)
(bad)
call
fidiv
hlt
lods
push
and
mov
adc
test
mov
enter
les
(bad)
(bad)
(bad)
std
out
jno
pop
and
jae
out
mov
and
adc
and
pop
dec
aaa
cmp
(bad)
dec
dec
int3
(bad)
push
inc
int3
ins
jge
outs
fcmovnbe
out
mov
push
push
and
push
dec
cwde
and
sub
adc
(bad)
(bad)
dec
sti
sub
push
mov
out
jle
in
cmp
in
jne
es
mov
aaa
cld
aad
call
push
mov
push
je
mov
arpl
(bad)
cmp
repz
adc
retf
dec
cdq
sub
rcr
lds
(bad)
push
pop
scas
cli
(bad)
call
fwait
mov
movs
js
jae
push
arpl
ficom
js
das
xchg
adc
add
xchg
mov
or
cmp
(bad)
(bad)
(bad)
jmp
ret
cdq
push
xchg
and
jmp
je
inc
dec
dec
movs
(bad)
jmp
(bad)
(bad)
cli
pop
fild
cmp
pop
fwait
sub
shr
sub
pop
iret
dec
or
add
(bad)
(bad)
mov
stos
xchg
imul
fistp
sub
adc
dec
and
test
sub
(bad)
(bad)
(bad)
dec
test
(bad)
pop
adc
push
add
xor
sub
sub
push
mov
fwait
sub
(bad)
(bad)
dec
fwait
xor
test
jae
sub
pop
scas
and
pop
stos
jae
jmp
add
out
cmps
inc
test
sbb
bound
test
shl
mov
push
test
call
mov
xchg
icebp
popf
mov
jmp
xor
jge
out
mov
loopne
idiv
mov
dec
and
cld
(bad)
xchg
(bad)
aam
inc
pushf
xchg
mov
sub
inc
sar
call
push
in
call
test
inc
pop
cwde
jb
ss
shl
mov
fst
inc
out
pop
or
inc
cmc
xor
or
fst
push
test
sahf
xor
test
(bad)
(bad)
jmp
jbe
fidiv
dec
loop
jecxz
stc
push
cmp
aaa
movsx
sbb
add
push
mov
imul
xlat
test
repz
fwait
out
inc
pop
inc
sub
or
int
xor
(bad)
jmp
inc
fistp
ss
jo
loope
scas
sub
ss
leave
pop
fstp
(bad)
dec
xchg
(bad)
inc
sub
mov
push
leave
jmp
and
cld
stc
les
mov
(bad)
(bad)
jmp
mov
fistp
fist
lods
push
pop
mov
fcom
es
mov
push
fld
sar
(bad)
dec
push
jnp
xchg
or
gs
dec
mov
add
stos
fadd
mov
test
jl
(bad)
(bad)
jg
iret
xchg
jae
fcmovnu
or
mov
scas
xor
ficomp
mov
lock
jmp
push
je
(bad)
jle
or
xor
pop
mov
pop
in
(bad)
mov
movs
enter
jmp
jbe
fwait
push
enter
(bad)
(bad)
call
jbe
mov
and
inc
scas
and
sub
add
add
(bad)
(bad)
(bad)
push
(bad)
jle
data16
and
lahf
dec
mov
addr16
ins
shl
jnp
push
or
call
shr
xchg
mov
call
(bad)
jmp
sub
lock
dec
or
xor
aaa
lds
cmp
js
ja
dec
cld
(bad)
(bad)
jmp
repz
xchg
inc
cdq
sub
xor
dec
mov
inc
pop
mov
lock
sbb
dec
fdiv
pop
pop
retf
movs
sub
adc
push
(bad)
dec
jge
in
jmp
push
rcl
adc
and
lds
push
xchg
imul
cs
mov
outs
fidivr
add
sub
(bad)
call
jae
jge
push
fwait
dec
lahf
xor
repnz
aam
push
jo
movs
cmps
test
push
jge
(bad)
(bad)
(bad)
dec
and
or
rol
arpl
pop
inc
xor
into
push
mov
xchg
movd
rcl
(bad)
(bad)
(bad)
cmp
xor
sub
cmp
push
dec
movs
(bad)
push
push
popa
xor
(bad)
(bad)
call
movs
inc
sbb
fwait
jb
sbb
fstp
push
lds
pop
out
ja
push
xor
cmc
(bad)
(bad)
call
dec
cwde
lods
retf
sub
pop
data16
cmp
imul
xchg
je
outs
ins
out
and
(bad)
fisttp
(bad)
arpl
push
imul
es
mov
adc
ds
sub
adc
xchg
xchg
ins
(bad)
(bad)
(bad)
(bad)
clc
mov
cmps
call
jle
(bad)
mov
ret
mov
xor
(bad)
(bad)
call
push
pop
jae
inc
mov
xor
in
adc
ficom
or
dec
jo
ds
(bad)
(bad)
jg
or
sbb
outs
mov
dec
fwait
sub
xlat
xchg
addr16
test
fwait
mov
mov
out
sbb
mov
gs
jnp
push
(bad)
(bad)
mov
jbe
xchg
gs
sub
mov
inc
mov
pop
(bad)
(bad)
(bad)
jmp
fs
mov
add
mov
dec
jmp
sbb
jle
pop
fldcw
push
fstp
les
(bad)
(bad)
clc
cmp
push
aam
ret
xlat
mov
adc
loopne
mov
fldpi
or
(bad)
(bad)
(bad)
inc
js
in
add
je
clc
pop
or
iret
into
push
enter
xchg
cmp
jnp
sub
and
xchg
pop
push
lock
(bad)
jg
cmp
in
or
mov
mov
ds
xlat
mov
inc
imul
scas
jg
inc
pusha
and
pusha
jle
adc
mov
fist
fcmovnb
data16
(bad)
(bad)
(bad)
cmp
adc
lock
mov
xor
mov
mov
mov
(bad)
(bad)
jmp
xor
popf
lea
cmp
in
icebp
mov
call
cmc
dec
(bad)
(bad)
(bad)
jmp
mov
pop
add
(bad)
and
(bad)
ins
jge
idiv
pop
fstp
(bad)
gs
fisub
in
ret
(bad)
jmp
sti
fcmovnu
aas
sti
out
mov
test
xor
sub
(bad)
cmps
sti
lods
hlt
pop
test
dec
mov
lods
inc
cmp
(bad)
addr16
mov
sbb
(bad)
xlat
iret
xchg
inc
aas
ret
lock
jnp
cld
(bad)
(bad)
(bad)
mov
out
scas
fnstcw
int3
and
movs
outs
mov
imul
pop
(bad)
(bad)
call
mov
pusha
inc
dec
xor
popf
jmp
inc
hlt
ins
sbb
jnp
clc
out
cli
sbb
sub
and
dec
retf
mov
fwait
dec
sti
dec
pop
aas
ror
(bad)
ficom
xor
lods
test
jb
xor
(bad)
(bad)
(bad)
mov
es
add
arpl
shr
xor
(bad)
adc
mov
fcmovbe
dec
js
div
(bad)
fld
cmps
mov
ror
std
xchg
pop
jnp
shr
clc
push
mov
(bad)
stc
test
dec
scas
jbe
pop
(bad)
(bad)
(bad)
jmp
adc
out
mov
rcr
dec
mov
cli
and
jg
es
in
sbb
pop
in
mov
mov
(bad)
mov
fadd
stc
mov
cmp
push
pop
jg
pop
adc
adc
mov
(bad)
(bad)
cmp
inc
out
mov
repz
mov
(bad)
jmp
mov
mov
(bad)
hlt
mov
mov
sub
call
mov
or
jmp
jo
xchg
in
popf
inc
ins
aad
cmp
mov
adc
mov
sub
hlt
(bad)
(bad)
jge
clc
rcr
cli
add
cli
add
movs
push
lea
adc
lea
(bad)
jmp
loop
sub
pop
ss
mov
movs
push
pop
movs
scas
mov
shr
pop
aam
(bad)
(bad)
(bad)
in
jle
div
nop
addr16
jno
(bad)
xchg
ss
mov
jecxz
dec
loope
arpl
jle
bound
and
rol
fdiv
ins
leave
cmp
adc
and
scas
clc
dec
retf
and
inc
mov
xor
xor
outs
dec
hlt
popa
mov
movs
lods
out
dec
clc
(bad)
(bad)
in
stc
xor
lds
inc
pop
xchg
bound
and
call
mov
mov
ja
jbe
mov
ins
ds
(bad)
(bad)
(bad)
(bad)
leave
push
movs
pop
mov
and
inc
fmul
sub
repz
std
adc
mov
pop
add
clc
repz
xor
pop
mov
adc
bound
enter
cs
repnz
(bad)
dec
lahf
in
and
cmp
cdq
inc
jno
mov
enter
mov
clc
inc
js
sti
fld
ins
pop
jbe
sahf
pop
mov
push
sti
sbb
(bad)
push
pop
test
inc
dec
cmc
mov
jnp
mov
sbb
(bad)
(bad)
(bad)
jmp
fs
leave
adc
xor
inc
cmps
xchg
xor
js
and
aam
adc
out
or
xchg
rcl
(bad)
xor
jne
call
mov
lods
std
std
sub
out
cmp
fild
sub
lahf
outs
jg
in
scas
test
shl
or
(bad)
call
pop
inc
add
fild
and
icebp
and
dec
adc
mov
fadd
lgdtd
pop
sub
mov
push
(bad)
sbb
sbb
or
cs
int3
jnp
mov
mov
cli
dec
inc
iret
ins
push
and
add
and
(bad)
dec
push
and
(bad)
or
xor
shr
mov
sub
movs
nop
or
lds
cmp
sbb
fcomp
push
std
(bad)
jmp
mov
adc
and
sahf
sbb
lock
in
pop
adc
(bad)
(bad)
jmp
inc
push
add
stos
daa
push
pop
scas
mov
pop
mov
mov
xchg
call
sub
pushf
pop
int3
leave
dec
ret
and
xchg
adc
inc
les
sub
sahf
shr
gs
jne
ret
cmp
stos
pop
push
fld
lahf
ins
test
pop
lods
push
pop
shr
push
data16
(bad)
(bad)
dec
push
loop
xor
nop
xchg
cs
and
push
ds
fucomi
out
jo
repz
(bad)
call
cld
inc
aad
fdiv
test
jle
cli
push
loope
dec
sub
(bad)
(bad)
(bad)
call
lods
gs
or
push
fwait
gs
push
stos
and
jae
repz
push
test
push
aas
(bad)
(bad)
(bad)
(bad)
fisub
ins
ss
mov
cdq
data16
push
dec
fst
push
movs
xchg
lock
lods
jp
icebp
lods
imul
adc
pushf
inc
xchg
xchg
push
cmp
jmp
(bad)
(bad)
call
sbb
jle
xchg
test
lods
fdivr
ins
mov
jns
cmps
pop
clc
mov
nop
push
push
or
(bad)
jmp
and
pop
loopne
dec
dec
sti
lea
mov
stos
test
(bad)
dec
inc
mov
push
xchg
mov
dec
and
hlt
(bad)
(bad)
push
dec
mov
scas
push
adc
or
cmps
lock
adc
(bad)
or
(bad)
(bad)
inc
leave
retf
sub
pop
sbb
dec
in
mov
sub
inc
movs
mov
xlat
popf
loope
(bad)
(bad)
call
cmp
es
ja
cmp
iret
and
inc
dec
mov
add
mov
(bad)
(bad)
push
addr16
ficomp
push
stos
adc
iret
nop
xlat
lahf
fld
xlat
fsubrp
and
jns
ret
or
movs
(bad)
(bad)
(bad)
jmp
test
xor
out
scas
mov
or
stc
scas
gs
(bad)
(bad)
jmp
push
cmp
push
xor
push
mov
push
nop
cmp
and
or
aaa
fdivr
add
dec
test
and
xchg
(bad)
(bad)
(bad)
jg
inc
movs
sub
loop
fdiv
jge
pusha
das
rsm
jmp
jl
cs
loope
popa
adc
jno
mov
mov
pop
icebp
mov
sub
or
mov
add
stos
je
mov
(bad)
loop
cmp
jge
jge
int
sti
test
sti
inc
mov
call
push
xor
push
inc
test
jno
jl
push
xor
(bad)
jmp
fst
aad
(bad)
(bad)
ds
mov
nop
int3
mov
mov
xor
jg
dec
cmp
scas
les
pop
aad
jae
xlat
mov
sbb
addr16
(bad)
(bad)
jmp
(bad)
fnstenv
adc
xchg
push
inc
aas
pushf
vsubss
or
lds
movs
inc
lock
cmps
les
mov
movs
(bad)
(bad)
(bad)
jmp
push
sbb
bound
adc
mov
and
or
icebp
cmp
inc
std
shr
popa
inc
jae
dec
mov
cs
test
frstor
mov
loopne
call
andps
jo
popf
lods
or
xchg
loope
sub
(bad)
(bad)
jmp
pop
xor
mov
jne
call
dec
(bad)
(bad)
(bad)
jmp
(bad)
pop
icebp
stos
inc
stos
icebp
dec
sub
ins
cmp
mov
jge
stos
sbb
adc
jb
(bad)
(bad)
push
xchg
mov
or
into
add
jno
or
test
out
pop
mul
fidivr
in
and
or
lahf
cmps
out
popf
sub
cwde
cmp
test
(bad)
(bad)
call
sbb
mov
mov
retf
adc
in
jge
push
pop
(bad)
push
inc
dec
(bad)
mov
pop
(bad)
cmp
daa
scas
mov
xor
ins
sbb
mov
push
push
test
or
das
pop
aaa
scas
pop
popf
(bad)
jg
push
push
add
out
retf
or
cmp
add
xor
sbb
(bad)
(bad)
push
xchg
(bad)
retf
add
sub
mov
mov
jmp
(bad)
mov
idiv
push
js
xchg
jp
pop
mov
pop
in
xor
dec
lock
ja
pushf
or
or
push
mov
popf
imul
shl
(bad)
inc
test
mov
aad
mov
popa
or
std
push
mov
jb
(bad)
jg
jmp
push
sbb
mov
jae
shl
lds
je
fwait
es
fist
(bad)
(bad)
(bad)
call
mov
or
aad
ret
test
out
int
sbb
cmp
xchg
or
dec
jg
int3
mov
nop
jge
retf
xchg
in
test
lea
jns
dec
and
out
fstp
rcr
ss
(bad)
(bad)
jg
aaa
mov
xor
imul
jns
sub
pop
fcmovnb
shl
retf
inc
cmp
add
loope
jp
enter
pop
xchg
jmp
(bad)
(bad)
jmp
aam
or
jecxz
or
stos
in
stc
xchg
ja
mov
xlat
mov
in
(bad)
(bad)
call
add
test
jbe
out
xor
cmp
xor
hlt
pop
push
lock
(bad)
dec
adc
sbb
jns
ja
and
hlt
icebp
cli
jmp
xchg
ins
xchg
(bad)
adc
xor
rcl
push
push
movs
dec
add
ds
xlat
ret
sub
mov
(bad)
mov
ja
mov
(bad)
in
jle
aas
dec
cmps
cs
mov
mov
(bad)
(bad)
push
enter
cmp
outs
cmp
sub
(bad)
ds
and
(bad)
stos
(bad)
retf
shr
and
inc
mov
lahf
pop
(bad)
(bad)
(bad)
push
je
stos
fdivr
je
pop
jb
leave
cmps
ret
ss
jno
jmp
mov
int3
pop
inc
sti
fstp
(bad)
inc
mov
pop
ror
cld
loop
mov
xchg
ror
outs
ins
push
(bad)
mov
add
xchg
push
stos
jo
test
jns
sti
mov
inc
popa
lock
imul
fld
cld
fisttp
(bad)
(bad)
(bad)
aas
or
jg
push
mov
outs
cmp
sti
data16
inc
aas
add
popf
ss
adc
xchg
ficom
dec
div
retf
icebp
(bad)
fwait
xchg
ror
mov
sbb
mov
test
mov
scas
in
push
adc
retf
adc
loope
add
push
(bad)
push
iret
xor
out
jg
fbld
pop
outs
or
(bad)
(bad)
mov
cli
aaa
mov
aad
inc
fdiv
inc
lods
mov
fisttp
movs
ss
mov
icebp
jne
sbb
loop
xchg
data16
(bad)
(bad)
call
jp
push
mov
addr16
fwait
pop
retf
ins
mov
sbb
push
out
xchg
sub
(bad)
inc
sar
outs
sar
addr16
lock
inc
jmp
push
pop
xchg
xor
(bad)
push
adc
and
bound
lds
push
fcmovb
dec
rcl
mov
xor
cmp
(bad)
(bad)
call
fmul
mov
lea
jbe
xchg
mov
mov
cmc
cli
inc
xchg
(bad)
(bad)
inc
outs
scas
imul
jo
daa
rcl
ss
into
xchg
imul
(bad)
push
dec
inc
fnstenv
push
stos
dec
cmp
mov
mov
inc
daa
mov
add
fadd
js
inc
cli
mov
(bad)
inc
lock
pop
cmp
in
les
mov
and
sbb
scas
sub
push
sahf
addr16
inc
mov
fcomp
cmp
ins
sti
and
mov
mov
fs
stos
inc
xchg
jbe
sbb
push
fistp
(bad)
jmp
int3
mov
mov
inc
rcr
jge
outs
ins
inc
es
mov
int
fs
(bad)
(bad)
call
cmp
jbe
jbe
cmp
xor
inc
push
fwait
push
leave
ja
cmp
xlat
(bad)
(bad)
mov
pop
inc
adc
jo
pop
mov
out
(bad)
cmp
adc
add
js
mov
das
iret
sahf
in
sub
xchg
mov
mov
xor
push
std
sbb
inc
fwait
xchg
dec
fldenv
mov
addr16
fsubr
xchg
aam
inc
xchg
xlat
(bad)
mov
shr
mov
movs
dec
push
shl
sbb
jp
xchg
cdq
xchg
adc
inc
sbb
dec
cld
(bad)
(bad)
(bad)
fidiv
test
iret
hlt
scas
ins
fistp
dec
(bad)
int3
xchg
ins
ficomp
lahf
outs
pop
idiv
jg
add
push
or
mov
lahf
movs
lahf
(bad)
(bad)
jmp
loopne
call
dec
xor
xor
jl
mov
pop
out
pop
mov
ret
jae
(bad)
(bad)
inc
push
adc
rcl
pushf
lds
retf
les
and
loopne
(bad)
(bad)
(bad)
dec
jne
je
int3
adc
dec
fstp
pop
jbe
cmc
ins
lods
mov
call
lds
outs
nop
scas
mov
hlt
les
push
and
test
or
fdivrp
(bad)
icebp
pop
movs
pop
inc
or
jae
lods
jb
mov
xor
cld
pop
jmp
cs
int
aad
lds
or
mov
push
daa
int3
sub
inc
cmp
jg
icebp
xor
(bad)
(bad)
inc
fs
and
ja
pop
mov
xchg
mov
mov
(bad)
(bad)
call
push
or
xor
fimul
gs
xchg
shr
fcomip
cdq
push
adc
inc
inc
or
cmp
mov
(bad)
(bad)
call
ins
mov
leave
and
push
stos
jl
(bad)
xchg
cwde
xchg
je
fwait
dec
(bad)
pop
jmp
test
popa
push
stos
(bad)
jg
lock
and
scas
sbb
jnp
mov
(bad)
(bad)
(bad)
(bad)
dec
or
sub
xchg
jns
cmp
addr16
mov
mov
int
cwde
adc
(bad)
jns
sub
jb
dec
outs
repz
fidiv
jg
fldenv
hlt
neg
jp
leave
repnz
je
(bad)
(bad)
(bad)
inc
push
retf
dec
std
pop
mov
cmp
lock
mov
sbb
pop
sub
ins
lods
cmp
jnp
mov
cli
data16
sub
inc
or
(bad)
inc
adc
imul
or
xchg
ja
clc
iret
and
add
mov
jne
rcr
(bad)
(bad)
call
or
retf
mov
imul
out
popf
mov
test
aas
ja
xchg
push
jae
fcomip
push
xor
jns
add
rcl
jnp
push
mov
fnstcw
call
fisub
enter
in
push
mov
les
sub
out
adc
clc
(bad)
call
cmp
shl
in
pop
xchg
(bad)
arpl
mov
(bad)
mov
int
ins
push
cmps
enter
push
fs
movs
int3
xchg
(bad)
(bad)
mov
jmp
xchg
cmp
ds
mov
call
out
or
and
and
and
cwde
pop
push
jge
repnz
jmp
mov
ja
xor
xchg
ret
dec
mov
call
push
jnp
(bad)
mov
ss
lods
cmp
push
lods
push
jne
jo
mov
bswap
and
add
(bad)
(bad)
jmp
(bad)
jp
fnstsw
cmp
(bad)
mov
add
fimul
sub
cmp
jmp
inc
ins
mov
repz
cmp
pop
xor
cmps
je
push
in
push
dec
(bad)
(bad)
(bad)
push
jle
mov
icebp
mov
retf
push
repnz
sub
mov
scas
sbb
push
add
cli
dec
jl
fcom
dec
adc
and
and
push
jae
and
sbb
das
adc
or
push
mov
jnp
cmps
fst
gs
mov
(bad)
(bad)
inc
xchg
or
sbb
arpl
mov
retf
dec
(bad)
fdecstp
jge
mov
push
(bad)
(bad)
call
push
xchg
mov
lods
shr
dec
jne
push
jo
xchg
pop
daa
stos
and
ds
js
xor
shl
and
mov
pop
neg
fcomip
dec
xchg
ret
js
jno
sbb
cmp
mov
jp
pop
sub
and
lock
aas
inc
shl
imul
into
cli
dec
dec
xchg
mov
fwait
mov
add
jns
push
fs
mov
je
arpl
mov
cmps
call
mov
xor
pop
ins
mov
jnp
dec
mov
xchg
call
push
cs
mov
sar
pop
fist
lea
jb
loop
or
push
lds
inc
or
mov
add
lds
jbe
jb
push
dec
popf
movs
cmc
jl
(bad)
jg
jmp
pushf
push
inc
les
adc
adc
xlat
lahf
aaa
imul
push
ins
sbb
iret
outs
ficom
mov
les
nop
movs
sub
xchg
ja
(bad)
inc
sub
inc
or
pop
inc
pop
test
mov
in
mov
mov
or
mov
dec
mov
or
cmps
dec
sub
ds
shl
std
mov
mov
je
dec
inc
(bad)
les
ja
sub
es
ja
inc
mov
cld
xchg
sbb
and
rol
sub
xchg
ja
call
test
pop
movs
in
jnp
jo
mov
lock
mov
mov
push
imul
ins
pop
lds
and
mov
(bad)
(bad)
jg
fptan
fs
mov
cli
pop
dec
push
movs
push
mov
and
dec
jg
jg
outs
mov
jbe
(bad)
jmp
xchg
jle
xchg
jbe
mov
mov
gs
scas
stos
icebp
jns
pop
out
cmps
leave
inc
movs
pop
xchg
mov
ja
inc
loop
dec
add
retf
cmps
test
jmp
jne
sub
loopne
push
scas
ins
gs
jb
and
ja
pusha
in
pop
(bad)
adc
(bad)
dec
jnp
cs
outs
pop
pop
and
cmp
or
pop
push
(bad)
(bad)
(bad)
jmp
bound
cmp
dec
ret
fnstcw
jbe
fwait
gs
and
inc
cmps
jmp
fdivrp
outs
push
hlt
out
pop
mov
push
ins
mov
cld
call
popf
(bad)
sub
xor
push
fdiv
ins
stc
je
dec
jmp
xchg
push
dec
inc
cmps
clc
xchg
mov
(bad)
(bad)
fistp
int
push
icebp
xchg
lahf
cdq
ret
sbb
or
mov
ret
cld
and
call
pop
clc
push
arpl
mov
and
inc
mov
xor
test
sar
pop
dec
adc
mov
mov
mov
fdivr
(bad)
(bad)
jg
sub
and
sub
cs
mov
mov
or
fidiv
(bad)
(bad)
jg
lods
sahf
xlat
gs
pop
neg
push
cmps
aam
dec
mov
in
test
mov
mov
sbb
mov
pop
dec
mov
clc
sbb
lock
cmp
arpl
push
cld
pusha
sbb
xchg
sub
js
xchg
mov
outs
(bad)
dec
rcr
loope
pop
jg
test
pop
lea
aas
bound
(bad)
(bad)
fild
retf
inc
daa
in
cdq
jg
xchg
outs
dec
sti
and
(bad)
(bad)
(bad)
jmp
jb
push
shl
das
xchg
sub
outs
stos
into
pop
(bad)
add
xlat
mov
(bad)
(bad)
(bad)
jg
(bad)
loopne
nop
inc
ins
cmp
adc
(bad)
mov
es
and
push
inc
inc
sahf
pusha
cld
(bad)
jmp
jno
mov
sub
ret
sar
cld
mov
jbe
sti
push
mov
sbb
sahf
jbe
pop
enter
inc
cld
cs
aaa
or
div
dec
cmp
cmp
push
sbb
(bad)
call
and
sar
iret
enter
rcl
int
jbe
mov
jle
call
lock
push
out
call
xor
(bad)
dec
into
fbstp
test
je
jg
mov
(bad)
(bad)
(bad)
push
mov
sub
sub
mov
test
jno
dec
mov
out
cdq
call
jmp
iret
push
cmc
pop
out
ss
xor
xor
scas
mov
xchg
sub
jmp
lahf
sahf
dec
jo
sbb
jge
lahf
stc
mov
ret
in
pop
mov
jmp
jmp
jo
(bad)
das
std
int3
mov
ds
ds
fimul
(bad)
stos
mov
cli
add
cld
fsub
xor
or
stos
ja
cmp
push
push
icebp
jle
sar
xchg
jg
mov
(bad)
pop
data16
xchg
hlt
(bad)
inc
inc
xchg
shl
loopne
hlt
fcomip
out
packssdw
std
ds
dec
push
cmps
jg
dec
movs
pop
mov
jecxz
das
movs
(bad)
jg
pop
jl
std
rcr
inc
fild
pop
inc
(bad)
out
mov
or
push
pop
outs
out
(bad)
das
call
pop
add
xbegin
(bad)
outs
out
mov
repnz
cmps
repz
frstor
pop
test
(bad)
aad
fwait
js
dec
fs
xor
test
int
std
sbb
and
inc
jmp
xchg
jge
pop
jle
cmps
mov
jecxz
jmp
(bad)
pop
mov
out
jbe
push
nop
mov
icebp
in
xchg
out
cdq
(bad)
jmp
scas
test
or
clc
das
ror
pushf
xlat
or
dec
lods
lds
loop
rcr
xor
in
dec
dec
iret
fbstp
int3
xchg
mov
mov
add
dec
dec
dec
fstp
mov
adc
push
xor
mov
or
popa
fcomp
(bad)
(bad)
push
retf
inc
fldenv
popf
je
push
xor
cld
ror
mov
aaa
jmp
in
outs
es
imul
sub
push
inc
rol
mov
fs
mov
mov
mov
jecxz
pop
(bad)
mov
ja
mov
xchg
xchg
mov
pop
sub
mov
cld
in
loop
lods
les
and
sub
lahf
jge
(bad)
push
mov
int
loope
out
fisub
mov
popf
dec
jmp
sbb
outs
out
clc
mov
or
(bad)
(bad)
(bad)
(bad)
fst
retf
mov
dec
mov
pusha
nop
xchg
idiv
mov
dec
or
pop
punpckhbw
loopne
mov
out
mov
cld
(bad)
(bad)
call
lods
mov
hlt
imul
vprotd
(bad)
cmp
cmc
sbb
mov
(bad)
jg
out
leave
jmp
fcmovnu
and
sbb
daa
scas
fld
cmps
icebp
(bad)
(bad)
out
pop
xor
pop
jno
loope
jecxz
xor
sub
test
jo
(bad)
out
xchg
push
and
jne
mov
sar
cli
fild
and
jo
ins
in
jno
inc
ret
(bad)
fist
push
ret
fs
loopne
shl
test
push
pop
mov
(bad)
lock
ss
fcom
(bad)
(bad)
(bad)
push
ins
cmc
and
inc
mov
dec
movs
stos
pop
and
pusha
mov
test
push
sub
std
pop
or
adc
enter
mov
in
cld
pop
(bad)
pop
in
call
cmp
enter
out
add
xor
mov
ins
es
fcmovb
xor
(bad)
(bad)
(bad)
call
jbe
add
xor
mov
xchg
ror
sti
lahf
(bad)
mov
push
std
les
adc
ss
fs
arpl
shr
dec
cmps
push
xchg
push
mov
in
sar
(bad)
(bad)
(bad)
inc
and
add
cld
adc
mov
push
ja
pop
xor
inc
(bad)
(bad)
mov
dec
ficomp
das
pop
ret
and
mov
in
addr16
push
and
xchg
(bad)
(bad)
(bad)
call
in
inc
in
fisubr
hlt
pop
ja
dec
call
xchg
pop
in
ins
jle
mov
(bad)
(bad)
cmp
dec
fsubr
jmp
add
cli
inc
aam
xchg
jp
aas
sub
jle
mov
movs
call
add
or
xchg
hlt
loop
xlat
jb
add
pop
jnp
pop
idiv
loope
inc
bound
push
repz
(bad)
xchg
inc
repz
inc
dec
test
cs
cmps
enter
pop
cmp
and
mov
pop
xor
sar
(bad)
push
repnz
inc
and
rol
arpl
add
mov
xchg
mov
(bad)
(bad)
call
sub
bound
add
leave
cmp
mov
(bad)
int3
sub
(bad)
out
cli
movs
hlt
test
or
push
jo
popa
(bad)
xchg
call
push
xchg
mov
push
jmp
and
movd
in
and
cdq
test
(bad)
(bad)
(bad)
jmp
dec
fst
ror
retf
cmp
shr
xchg
ss
rcl
inc
shr
and
inc
cmp
sbb
or
sbb
mov
mov
in
mov
jmp
int3
push
and
push
adc
push
das
pusha
test
frstor
mov
(bad)
(bad)
dec
fs
jg
not
sub
pop
mov
int
ds
pop
in
(bad)
(bad)
(bad)
jmp
fstp
popa
adc
ins
mov
int3
fnstsw
lods
jmp
dec
jp
sub
sub
or
or
idiv
test
mov
cwde
mov
cdq
iret
pushf
scas
pop
mov
scas
(bad)
(bad)
(bad)
(bad)
stc
inc
or
fwait
xchg
in
in
push
out
push
test
xor
test
adc
sub
pop
out
shr
std
(bad)
(bad)
call
xor
es
jmp
dec
pop
add
pop
leave
dec
and
cmps
adc
pop
loop
mov
aad
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
addr16
(bad)
and
movs
inc
mov
mov
ret
(bad)
out
add
xchg
int3
pop
mov
cmp
repz
divps
jbe
jmp
xrelease
xor
mov
out
cwde
push
fimul
pop
cmp
mov
push
mov
shl
(bad)
dec
es
xchg
pop
mov
xor
sub
aaa
aad
sti
shr
mov
outs
xchg
addr16
(bad)
(bad)
(bad)
add
pop
loop
xchg
sub
jne
and
inc
arpl
ffreep
pushf
push
(bad)
(bad)
(bad)
(bad)
cmp
es
ret
mov
movs
outs
sti
movs
push
xor
outs
sbb
mov
push
rcl
mov
pop
aaa
pushf
in
popf
fbld
call
movs
loopne
or
data16
jae
mov
mov
(bad)
jmp
push
stos
sub
xchg
je
test
xchg
test
mov
mov
dec
sbb
cmp
ins
or
(bad)
(bad)
dec
enter
pop
lods
dec
xchg
fwait
pop
or
cs
pushf
xchg
mov
call
xchg
aam
or
ror
fsubr
out
aaa
cld
(bad)
jmp
pop
mov
ficomp
stos
lock
mov
(bad)
(bad)
(bad)
call
cmp
push
rol
mov
sub
xchg
cmps
daa
jp
jbe
jg
fstp
pusha
xchg
(bad)
(bad)
(bad)
jmp
cwde
es
pop
sub
fst
jl
les
aaa
inc
jp
popf
psrld
push
rcl
adc
add
push
leave
test
push
adc
dec
es
xchg
cmps
and
clc
fwait
push
pop
xchg
cs
pop
icebp
call
scas
lods
das
jge
test
cmp
cmps
sub
adc
and
mov
(bad)
(bad)
(bad)
jmp
(bad)
add
mov
add
stos
sub
mov
cmp
fwait
pop
iret
mov
mov
xchg
push
cmc
(bad)
(bad)
call
push
inc
pop
push
jno
inc
adc
dec
xchg
imul
(bad)
call
xchg
cmp
xor
mov
sbb
sbb
mov
push
adc
(bad)
push
mov
test
and
and
inc
push
xor
mov
adc
invd
ret
clc
sti
sub
(bad)
idiv
call
xchg
mov
pop
test
test
fs
sti
ins
inc
or
(bad)
(bad)
(bad)
mov
mov
inc
or
xchg
sbb
inc
jns
ds
in
out
dec
mov
xor
add
push
(bad)
jp
sbb
setno
mov
ucomiss
dec
xchg
xor
jo
fs
cmp
fidiv
imul
dec
add
xor
retf
enter
jecxz
and
cmp
mov
(bad)
(bad)
jmp
and
mov
mov
sbb
cmps
fld
jae
sub
je
out
xchg
xchg
mov
pop
data16
push
push
xchg
lods
mov
push
in
call
hlt
mov
fist
in
into
(bad)
adc
or
jg
(bad)
jmp
mov
add
pop
xchg
xchg
pop
mov
movs
(bad)
(bad)
(bad)
push
fistp
jecxz
sub
xchg
repz
stc
push
aad
(bad)
(bad)
jge
leave
sub
xor
aad
adc
(bad)
(bad)
inc
mov
int
cmp
outs
xor
fist
xchg
scas
push
inc
jno
ins
xchg
movs
(bad)
(bad)
(bad)
dec
xchg
inc
daa
mov
or
dec
mov
popf
sub
mov
pop
mov
(bad)
(bad)
(bad)
dec
lahf
imul
retf
fs
pushf
mov
pop
pop
loop
adc
ja
cld
dec
in
and
pop
retf
les
fstp
cmp
into
sub
js
(bad)
(bad)
call
movs
mov
jecxz
ret
inc
out
sub
pop
aad
or
or
jge
pop
loopne
mov
aaa
mov
mov
fist
xor
(bad)
(bad)
call
in
int3
adc
shr
pop
movs
es
adc
movs
inc
enter
push
imul
push
cmps
call
sbb
jl
cmp
mov
dec
dec
lods
dec
pop
out
call
call
test
cwde
sahf
xchg
push
aaa
pop
fwait
lods
(bad)
fdivp
out
jno
push
inc
iret
das
(bad)
(bad)
(bad)
dec
mov
jmp
sti
(bad)
mov
or
daa
sbb
in
jl
push
mov
stc
push
out
clc
ss
dec
pop
icebp
ins
mov
add
cwde
pop
mov
icebp
aad
(bad)
cli
fsub
sbb
call
clc
(bad)
call
rcl
or
leave
dec
dec
inc
cmp
mov
int3
dec
mov
xor
inc
mul
shr
mov
jb
dec
mov
loop
je
(bad)
(bad)
(bad)
js
mov
dec
test
push
mov
mov
gs
xor
call
loopne
jle
sub
lea
in
push
dec
pause
enter
idiv
(bad)
jmp
in
mov
inc
fcom
fwait
xor
retf
cmp
test
mov
add
scas
(bad)
jmp
add
cdq
add
xor
lods
jp
in
imul
ja
clc
jmp
pop
jae
adc
mov
clc
mov
call
call
enter
cli
aam
sbb
or
jecxz
cdq
rol
push
add
(bad)
(bad)
js
sub
mov
push
add
mov
(bad)
(bad)
call
push
mov
imul
test
scas
js
aas
pop
mov
test
(bad)
(bad)
(bad)
push
movs
pop
jecxz
adc
sub
xchg
test
test
push
xchg
stos
jg
xchg
rcl
jmp
xchg
daa
pop
or
outs
cmp
sbb
lods
outs
push
xchg
pop
ins
test
(bad)
(bad)
dec
dec
mov
sbb
jmp
jb
cmps
mov
push
add
je
lock
fadd
xor
fadd
dec
adc
ret
sbb
sub
popa
ret
push
call
aad
and
jmp
repnz
loope
adc
jb
mov
cwde
(bad)
inc
leave
push
adc
inc
mov
retfw
dec
sar
mov
push
scas
mov
add
sbb
daa
inc
clc
out
mov
push
jae
test
adc
mov
add
std
push
mov
addr16
cs
icebp
jg
movs
xchg
movs
pop
or
(bad)
(bad)
(bad)
jmp
add
dec
dec
xlat
push
out
cwde
movs
push
pop
sub
adc
(bad)
(bad)
(bad)
(bad)
aas
fldcw
scas
outs
aas
cmp
and
pop
pusha
jmp
addr16
mov
(bad)
(bad)
call
push
ja
xchg
or
popa
lahf
inc
test
sbb
inc
inc
pop
stos
fwait
(bad)
mov
rol
int3
push
lds
push
gs
enter
rcl
(bad)
(bad)
jmp
push
cmp
mov
shl
and
(bad)
(bad)
(bad)
call
pop
push
sub
cmps
pop
mov
lods
jle
jmp
imul
mov
adc
cmp
and
daa
inc
loope
mov
push
mov
ret
repz
xchg
pop
daa
push
(bad)
inc
adc
fiadd
pop
xchg
je
test
(bad)
popf
fcomip
(bad)
inc
vphaddbw
imul
inc
jl
or
pusha
xchg
jb
(bad)
(bad)
(bad)
inc
cld
jmp
fst
sbb
pusha
adc
or
adc
inc
idiv
(bad)
(bad)
(bad)
call
int3
ja
pop
xor
xchg
sub
inc
in
add
sub
(bad)
(bad)
in
shl
xchg
xor
imul
imul
frstor
push
add
(bad)
(bad)
(bad)
dec
arpl
std
pop
xor
out
dec
aam
and
fwait
dec
rcl
pop
fild
and
test
cmp
cmp
ret
in
(bad)
es
cmp
gs
add
xlat
sar
jg
mov
sahf
cdq
ror
mov
add
mov
mov
(bad)
inc
aad
xor
iret
jg
imul
cmp
pop
loopne
pop
xchg
js
mov
cld
xchg
sbb
cmp
(bad)
(bad)
dec
pop
in
push
and
repnz
repnz
or
cmp
loope
or
ds
xchg
ins
hlt
(bad)
mov
cmps
fisub
jmp
sub
fsave
sbb
out
jmp
sar
std
clc
inc
xchg
js
xor
lds
mov
movs
mov
xchg
(bad)
(bad)
(bad)
dec
mov
aaa
test
sti
jmp
jbe
pop
fmul
cmp
ds
dec
dec
adc
sbb
popf
dec
in
idiv
cmp
jmp
mov
dec
mov
(bad)
mov
arpl
test
add
mov
sahf
stos
cmp
mov
inc
xor
(bad)
(bad)
jmp
and
jmp
dec
pop
mov
(bad)
xor
ds
cmp
jmp
call
out
mov
pop
cmc
xor
add
cmps
xchg
or
jecxz
mov
sahf
inc
(bad)
(bad)
call
iret
(bad)
(bad)
int
ss
mov
rol
cld
xor
inc
and
adc
and
cmp
std
jmp
retf
outs
xchg
mov
nop
pop
loope
sub
hlt
fcomip
pop
push
jb
(bad)
sbb
mov
jge
sub
(bad)
(bad)
(bad)
fucomip
aam
push
sub
mov
mov
sbb
cmps
mov
addr16
push
cld
(bad)
(bad)
call
out
pop
cmp
cmp
test
xchg
push
xchg
lock
in
xchg
inc
sub
(bad)
(bad)
mov
sub
mov
imul
fs
(bad)
(bad)
stc
inc
push
inc
mov
sub
dec
retf
dec
and
int3
pop
retf
sti
sbb
(bad)
(bad)
dec
fwait
jo
cmc
inc
push
inc
or
mov
add
into
or
std
cmp
(bad)
call
(bad)
mov
jo
adc
ja
fidiv
fnstenv
mov
or
adc
popa
sub
jo
xchg
push
mul
retf
sahf
jbe
inc
jg
and
sub
(bad)
(bad)
(bad)
jmp
mov
mov
ss
call
pop
rcr
mov
(bad)
fidiv
shl
(bad)
(bad)
(bad)
(bad)
jg
mov
add
adc
(bad)
and
sbb
jp
aaa
movs
(bad)
aam
mov
outs
(bad)
(bad)
jle
mov
(bad)
icebp
outs
cli
es
mov
test
pop
push
pushf
test
aad
inc
fidivr
ss
(bad)
(bad)
(bad)
jmp
les
es
adc
xchg
mov
dec
xlat
adc
(bad)
(bad)
call
mov
repnz
inc
pop
xchg
int
fnsave
out
fstp
retf
mov
int3
inc
and
outs
jno
in
neg
call
jmp
pushf
mov
scas
retf
xchg
xor
cmova
adc
adc
mov
(bad)
(bad)
push
fisttp
fbstp
mov
lods
test
push
add
test
call
jne
jmp
sub
sbb
fld
mov
lock
or
rcr
(bad)
jmp
ret
xlat
dec
adc
jmp
out
stc
sbb
xor
mov
mov
jb
in
lahf
addr16
(bad)
jns
in
mov
dec
iret
xchg
mov
sbb
inc
jge
gs
sbb
into
xchg
mov
mov
cld
(bad)
call
cwde
and
add
(bad)
cmps
dec
and
jle
mov
push
adc
mov
jnp
js
add
fidiv
rcr
or
mov
mov
sub
jmp
mov
ins
adc
pop
aad
outs
lods
xor
test
(bad)
(bad)
(bad)
push
into
pop
pop
xchg
add
cmp
in
fxam
sub
adc
scas
sub
imul
enter
movs
es
dec
test
cmps
imul
pop
(bad)
push
push
xchg
dec
mov
mov
xor
pop
cmps
dec
sahf
add
inc
sahf
pop
int3
fcomi
(bad)
(bad)
(bad)
(bad)
cmp
cmc
pusha
and
mov
ins
mov
aas
loopne
mov
lahf
cmp
fs
ja
(bad)
jg
mov
inc
cwde
xchg
stos
ins
cmps
push
xchg
and
or
ror
mov
cmp
adc
sub
mov
cmp
sbb
popa
jns
or
test
cmp
ret
jl
xchg
jl
retf
jo
jae
cmp
inc
std
mov
ja
xor
out
mov
dec
dec
les
cld
(bad)
(bad)
dec
sub
aad
imul
xchg
(bad)
outs
fimul
not
iret
push
(bad)
jge
retf
dec
lods
and
xchg
in
(bad)
jmp
outs
sti
fucomi
out
jl
mov
lea
(bad)
inc
mov
xlat
outs
mov
ficom
push
mov
fldenv
ja
jmp
movs
mov
sbb
add
jns
xchg
(bad)
(bad)
call
test
cmp
ret
cmp
test
cmp
(bad)
(bad)
call
xor
and
(bad)
test
(bad)
lods
jbe
not
inc
mov
mov
adc
(bad)
dec
je
das
pusha
cld
and
mov
rol
fnstenv
mov
cmc
call
dec
cmps
ss
jl
or
push
nop
or
xchg
jae
inc
adc
call
scas
sbb
(bad)
sub
test
jae
ret
xchg
lea
jno
mov
cmp
rol
adc
test
lock
bound
arpl
mov
fdivr
lds
mov
sbb
imul
int
mov
sub
retf
push
and
jnp
jmp
push
jmp
(bad)
scas
retf
test
imul
sahf
pop
push
cmp
sti
pop
inc
leave
(bad)
(bad)
(bad)
push
add
in
push
mov
test
lds
cwde
push
mov
push
(bad)
imul
jg
retf
dec
dec
fidiv
pushf
popa
sub
loope
xor
push
loope
addr16
jmp
jmp
pop
outs
data16
push
ins
fwait
mov
fdiv
cmp
add
inc
fild
ins
aad
mov
cmp
rol
push
ficomp
shl
mov
mov
push
lea
aam
mov
stos
je
inc
in
or
sbb
int3
cdq
xor
xchg
and
(bad)
(bad)
jmp
xchg
fadd
(bad)
jno
cmp
cld
xor
ja
adc
setne
push
mov
sahf
push
int
or
inc
sbb
(bad)
jp
mov
cmp
(bad)
out
xchg
call
dec
mov
push
cmp
bound
dec
fcomp
or
fstp
jns
add
sti
gs
push
es
(bad)
cli
sub
lods
push
cld
(bad)
call
dec
dec
fldcw
mov
leave
and
mov
scas
jmp
(bad)
pop
cld
inc
out
fnstcw
inc
outs
pop
aaa
inc
js
lods
push
pop
idiv
push
push
dec
jmp
retf
sub
gs
push
and
int3
dec
or
call
fdivr
push
mov
xchg
jo
ficomp
mov
stc
movs
les
fist
jmp
in
mov
inc
aam
lock
jg
inc
push
gs
cmc
sub
pop
cmp
neg
movs
fadd
jge
outs
dec
push
in
cld
inc
push
cs
push
fwait
mov
int3
mov
sub
sub
inc
mov
je
pop
dec
test
ss
out
or
cld
(bad)
(bad)
(bad)
jp
scas
add
ror
repnz
les
push
adc
out
or
push
daa
mov
call
and
mov
icebp
jns
adc
adc
(bad)
mov
push
adc
cwde
in
or
(bad)
(bad)
jmp
dec
mov
cmps
jmp
popf
fdivr
in
stos
dec
stos
jb
idiv
mov
mov
pop
fisub
es
push
(bad)
push
aam
and
sti
pop
cld
(bad)
(bad)
cmp
mov
sbb
pop
daa
fld
sbb
sbb
scas
(bad)
(bad)
push
push
push
xchg
sub
nop
dec
mov
cwde
imul
sub
dec
sbb
rcr
rcr
mov
jb
pop
mov
rcl
outs
or
(bad)
(bad)
(bad)
ficomp
mov
xor
xchg
sub
sub
(bad)
mov
lahf
mov
test
xchg
daa
addr16
or
jmp
cmp
retf
pop
aad
sbb
fiadd
mov
xchg
xor
rol
xchg
nop
outs
xchg
xor
fisttp
fs
fmul
test
(bad)
call
xchg
mov
cmp
mov
fs
(bad)
(bad)
call
adc
sub
add
push
and
pop
adc
clc
mov
add
push
aaa
push
adc
dec
sub
out
mov
inc
(bad)
or
pusha
or
mov
xchg
inc
xchg
mov
(bad)
(bad)
jns
dec
into
inc
dec
mov
push
and
sub
cdq
push
fwait
outs
repz
(bad)
fild
mov
xchg
xor
iret
push
fist
fst
sar
(bad)
out
cli
int3
dec
outs
mov
xor
mov
pop
fidivr
shr
jg
mov
out
(bad)
stc
sti
sub
ins
std
mov
mov
cmp
xor
les
mov
enter
ds
(bad)
(bad)
mov
xchg
stc
and
pop
xchg
xchg
retf
jnp
arpl
jnp
out
and
js
(bad)
jg
(bad)
jnp
js
in
adc
add
pushf
cmp
movs
shl
stos
mov
xor
sbb
push
sub
mov
(bad)
lock
(bad)
(bad)
(bad)
(bad)
mov
cmps
retf
sub
dec
mov
dec
mov
aas
scas
xor
xchg
cdq
movs
and
push
inc
cmp
pop
jecxz
jge
mov
or
pop
jb
in
dec
push
out
outs
stos
ss
pop
sub
push
fs
pop
icebp
(bad)
(bad)
push
in
stos
or
xchg
mov
fldcw
popf
or
inc
stos
xchg
inc
nop
lods
out
add
(bad)
call
cli
and
or
test
push
adc
shl
mov
fisttp
mov
gs
lahf
pushf
push
and
(bad)
(bad)
call
mov
fsub
and
shl
psllq
rcr
add
fdivr
clc
or
test
push
sbb
call
sub
cmps
fstp
ret
mov
or
das
mov
sub
sti
inc
cmp
(bad)
pop
inc
sahf
mov
push
mov
jecxz
cwde
(bad)
imul
dec
and
dec
push
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
out
jge
icebp
cld
dec
div
push
xor
jmp
jp
enter
jecxz
and
pop
xor
sar
mov
jge
mov
daa
adc
add
push
stos
add
and
retf
das
mov
cmp
xchg
lods
das
jmp
std
(bad)
stc
les
sub
int3
ret
iret
fcomp
loop
adc
push
arpl
sub
cmp
jbe
(bad)
(bad)
jmp
pop
mov
int
(bad)
hlt
div
call
pusha
adc
ss
push
ss
(bad)
call
repz
xchg
or
test
cmc
cmp
(bad)
push
ds
(bad)
dec
jo
mov
call
push
push
fild
(bad)
sbb
shl
ror
out
adc
add
(bad)
(bad)
aas
and
(bad)
out
(bad)
cmp
std
retf
mov
jg
cmp
enter
cli
and
dec
adc
imul
jle
lahf
loop
push
mov
mov
call
call
sahf
popf
(bad)
jb
mov
cmp
mov
lock
mov
dec
ins
clc
(bad)
push
out
sub
(bad)
and
imul
(bad)
(bad)
push
fisub
mov
jbe
fcom
adc
(bad)
(bad)
(bad)
push
movs
pop
inc
in
and
mov
sub
xchg
movs
sahf
lods
loope
dec
in
ins
mov
jb
(bad)
(bad)
mov
or
jle
fstp
movs
fidivr
pop
lods
test
call
loopne
cmp
and
(bad)
test
xchg
push
hlt
jmp
pusha
ret
mov
xor
js
xor
cwde
xchg
test
xchg
jp
mov
loope
rol
int3
dec
cmp
outs
pushf
stos
add
and
or
loope
or
into
in
sar
xor
int
sbb
in
scas
aaa
jp
pop
sub
jnp
mov
pop
daa
sub
data16
retf
sbb
sbb
(bad)
call
mov
push
adc
(bad)
mov
lods
leave
push
in
pop
mov
jmp
fs
(bad)
lods
ss
jge
cmps
lahf
js
stos
into
cdq
mov
enter
sub
(bad)
(bad)
call
dec
loop
push
mov
push
xor
sbb
mov
jo
push
cmp
push
jb
mov
pop
or
(bad)
mov
scas
and
ss
xchg
or
pop
cmp
mov
and
(bad)
(bad)
(bad)
push
xchg
mov
mov
sbb
fadd
xor
ret
adc
mov
nop
stos
adc
cwde
test
fistp
stos
cmp
sbb
aaa
shl
test
call
ss
ins
or
and
sti
stos
mov
sub
mov
in
jge
jmp
inc
(bad)
push
or
push
xor
sub
sbb
(bad)
push
movs
scas
jnp
(bad)
(bad)
call
xor
int3
jnp
out
mov
nop
mov
mov
fwait
push
or
(bad)
(bad)
jmp
adc
(bad)
fwait
and
in
mov
mov
into
mov
cdq
popa
push
mov
into
dec
gs
xchg
(bad)
(bad)
(bad)
jmp
add
pop
xor
ins
push
mov
scas
or
or
mov
popf
mov
mov
mov
xchg
mov
retf
fidivr
dec
sbb
cmp
(bad)
(bad)
fisttp
(bad)
int3
adc
out
adc
jns
and
enter
jmp
loopne
pop
(bad)
(bad)
(bad)
push
sub
jge
test
xlat
jp
mov
in
fs
mov
rcr
lods
movs
jp
fwait
test
or
jnp
addr16
ds
lods
(bad)
(bad)
(bad)
mov
shl
(bad)
lock
ins
call
movs
mov
(bad)
sub
shl
cld
fwait
push
imul
stos
inc
out
fbstp
xchg
int
jge
jae
jmp
rcl
lock
cmp
(bad)
xchg
xchg
std
test
mov
pop
mov
fcomp
leave
(bad)
(bad)
jmp
jmp
setl
sub
(bad)
(bad)
dec
and
movs
dec
popa
outs
popf
mov
out
out
pop
and
(bad)
(bad)
jmp
lds
jge
cmp
adc
and
test
cld
mov
add
shr
dec
ja
inc
sti
inc
shl
idiv
fs
gs
addr16
mov
pop
hlt
adc
ins
mov
inc
hlt
test
push
lahf
arpl
repnz
xlat
(bad)
(bad)
(bad)
(bad)
mov
ret
sbb
ret
add
and
fsubr
cmp
rcl
(bad)
call
lock
xchg
jno
mov
xor
xor
movs
and
push
(bad)
(bad)
fist
nop
dec
inc
pop
repz
sub
fimul
or
retf
mov
(bad)
fist
test
mov
xchg
shl
bnd
(bad)
(bad)
jmp
push
movs
xchg
pop
aaa
mov
inc
shl
ja
adc
call
push
idiv
dec
adc
lahf
jge
cdq
adc
(bad)
(bad)
mov
xchg
cdq
sub
pop
popa
mov
add
jl
bound
push
inc
xchg
ret
(bad)
dec
call
xchg
xor
cld
stc
ja
loopne
inc
(bad)
jg
sbb
sub
pop
loop
jl
sub
iret
push
pop
sub
add
sub
fsincos
pop
sub
cmps
icebp
inc
xchg
icebp
(bad)
out
cli
mov
mov
into
xchg
ja
dec
xchg
mov
adc
ins
dec
mov
(bad)
(bad)
push
ror
shr
retf
sbb
jbe
cdq
xchg
test
daa
sar
(bad)
jmp
mov
test
xchg
pop
(bad)
aaa
loop
cmpxchg
push
clc
stc
mov
xor
daa
lds
push
cmp
call
mov
pop
xor
popa
push
ja
ja
imul
inc
jmp
sbb
mov
arpl
cmp
fstp
mov
push
ficom
out
xor
add
popf
add
pop
gs
retf
sub
(bad)
(bad)
jmp
sub
ins
ins
or
and
push
(bad)
or
jmp
iret
mov
cmps
ret
sub
sub
stos
pop
xchg
dec
xchg
push
or
fwait
ret
(bad)
(bad)
(bad)
(bad)
call
mov
iret
or
add
setno
inc
cmp
add
push
pop
icebp
(bad)
inc
test
mov
adc
pop
stos
jg
call
movs
loop
inc
mov
pop
loop
outs
(bad)
mov
call
mov
popa
nop
sub
mov
xor
outs
pop
jb
call
pop
loop
mov
jo
ins
in
mov
icebp
outs
mov
fild
ins
and
fs
(bad)
jmp
bound
scas
movs
xor
push
loopne
dec
jae
sbb
inc
ficom
lock
sbb
xchg
xchg
(bad)
sar
shl
es
sub
retf
(bad)
push
(bad)
(bad)
(bad)
inc
ja
sub
mov
sbb
test
push
adc
push
mov
retf
xor
movs
jbe
(bad)
(bad)
(bad)
jmp
das
rcl
fwait
push
aam
faddp
es
cmp
fs
dec
fs
mov
fs
push
aam
aad
add
jmp
push
rcl
jge
daa
arpl
aas
mov
sub
push
in
jg
ins
test
sar
fisubr
xchg
fldcw
into
mov
out
mov
rcr
movs
ins
(bad)
jg
mov
push
sbb
outs
cmp
icebp
jmp
les
jl
mov
(bad)
(bad)
(bad)
(bad)
jmp
loopne
aam
ins
inc
jecxz
fild
mov
mov
sbb
push
fist
cmp
ja
(bad)
push
jecxz
neg
add
inc
mov
push
xor
push
sbb
(bad)
(bad)
(bad)
mov
movs
sbb
sbb
mov
jp
mov
lods
inc
cld
xor
xchg
push
sbb
repnz
pop
jb
dec
adc
mov
clc
pop
(bad)
mov
xor
ret
(bad)
fild
mov
outs
jae
stc
inc
loopne
neg
loope
adc
pop
xchg
ins
arpl
(bad)
(bad)
mov
sub
mov
loope
(bad)
fsubr
push
push
sahf
xchg
or
fcomip
call
int
out
cmc
xlat
fnstsw
pop
inc
inc
(bad)
fidiv
in
inc
xchg
movs
int3
dec
adc
les
adc
aaa
fwait
pusha
popf
mov
xlat
popa
(bad)
(bad)
(bad)
(bad)
(bad)
movs
mov
out
les
mov
leave
cdq
sub
sbb
push
daa
push
mov
pop
sub
jle
mov
or
gs
(bad)
(bad)
in
sti
cmp
xchg
std
add
or
xchg
xchg
jecxz
ja
out
(bad)
imul
sbb
jg
jmp
jns
pop
pop
xor
sub
pop
ds
fdivp
out
test
call
xchg
xor
inc
mov
sub
xchg
adc
push
adc
cmp
ret
call
push
ins
popf
(bad)
mov
pop
xchg
pop
lods
mov
out
cs
std
(bad)
jg
in
nop
das
push
adc
inc
inc
into
hlt
pop
lods
sbb
imul
pop
or
fwait
int3
lods
movs
inc
leave
pushf
mov
sbb
dec
xor
jge
out
clc
jmp
lods
push
aaa
movs
push
add
or
clc
and
repnz
mov
jg
popa
push
mov
ds
mov
ret
iret
fstp
ret
ss
ds
jecxz
inc
ja
test
mov
movs
xor
mov
push
retf
mov
call
stos
pushf
test
pop
mov
inc
scas
pop
xchg
sar
jmp
mov
rcl
adc
cwde
xor
mov
inc
cld
jmp
add
xor
sub
push
mov
stos
jmp
xchg
jmp
clc
mov
in
inc
in
rcr
das
call
dec
push
xchg
(bad)
(bad)
call
mov
ins
fprem
loop
test
sbb
cld
mov
add
out
adc
(bad)
push
mov
adc
sahf
ret
inc
push
dec
push
mov
mov
das
push
je
inc
aaa
dec
dec
push
(bad)
(bad)
(bad)
dec
sti
push
rsm
or
jge
in
pop
cmp
jns
add
stos
xor
dec
or
imul
dec
cmps
ror
sbb
call
ret
pop
enter
push
sbb
pop
and
mov
arpl
inc
push
iret
adc
pop
inc
std
sub
leave
sub
jbe
or
rol
cmp
push
xchg
add
(bad)
(bad)
call
xor
lods
jae
sbb
mov
mov
sti
and
loop
sub
ret
dec
sub
pop
cwde
add
enter
fstp
fst
add
mov
std
pop
or
fwait
push
mov
nop
dec
mov
cwde
ins
push
fild
fsub
sub
xchg
sbb
dec
ja
(bad)
(bad)
(bad)
js
jns
mov
test
scas
xor
addr16
les
push
call
add
into
add
clc
(bad)
call
cwde
jno
inc
xchg
(bad)
(bad)
jmp
sbb
dec
pop
rol
adc
push
es
push
jecxz
xor
out
test
int3
(bad)
(bad)
(bad)
dec
aam
jmp
or
push
sbb
lods
jnp
mov
mov
inc
loop
das
push
xchg
mov
and
sub
(bad)
(bad)
mov
or
int3
xor
dec
dec
jo
and
jmp
pop
shl
push
popf
call
add
mov
outs
clc
fcomip
xlat
push
adc
mov
imul
or
(bad)
push
ret
into
nop
inc
pop
pusha
mov
dec
jmp
jmp
out
xchg
call
call
add
or
sub
mov
and
and
xchg
(bad)
(bad)
inc
retf
jbe
sbb
mov
frstor
rcr
dec
cmc
(bad)
(bad)
jmp
push
pushf
xchg
popa
adc
hlt
ins
retf
test
adc
sar
call
scas
pusha
xchg
add
inc
mov
xchg
mov
(bad)
(bad)
(bad)
dec
fistp
dec
enter
enter
add
cmp
dec
cli
pop
and
outs
stos
stc
pop
sar
cmp
(bad)
(bad)
push
or
mov
xor
jno
sbb
lea
das
pop
rcr
loope
adc
(bad)
(bad)
inc
push
or
push
mov
cmps
sub
call
pop
push
ins
mov
ds
(bad)
(bad)
(bad)
cmp
gs
setl
test
ret
sbb
mov
fstp
pop
sahf
sub
or
(bad)
jmp
cmp
movs
imul
fldlg2
icebp
mov
leave
add
fild
ror
push
mov
pop
mov
loop
or
retf
inc
imul
lahf
mov
push
test
iret
out
xacquire
pop
ror
mov
jg
and
jb
(bad)
mov
not
dec
fwait
jle
sbb
shl
(bad)
xchg
jo
(bad)
(bad)
inc
neg
mov
ds
inc
jmp
pop
cs
push
xor
and
icebp
(bad)
(bad)
(bad)
(bad)
jmp
mov
xchg
cmp
shl
sub
push
fs
mov
mov
ja
cmc
and
das
cmp
cmp
jmp
loope
pop
jmp
hlt
dec
xchg
loopne
retf
inc
leave
inc
sbb
pop
pop
mov
(bad)
(bad)
(bad)
jmp
inc
mov
push
cmp
bound
outs
sti
dec
shl
sbb
rcr
(bad)
(bad)
(bad)
jmp
and
and
adc
jge
cmps
xlat
push
adc
mov
mov
pop
jb
test
fisubr
pop
adc
jecxz
jb
imul
and
and
dec
in
call
(bad)
jnp
push
fcomp
ret
adc
in
lods
(bad)
nop
movs
mov
out
in
out
(bad)
fcomip
pop
icebp
add
sub
pand
idiv
jg
(bad)
dec
xchg
mov
int
add
dec
(bad)
or
or
sbb
mov
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
fisub
and
js
lods
dec
loope
dec
xchg
xchg
pusha
aas
gs
mov
cmp
inc
nop
mov
adc
sub
les
push
(bad)
(bad)
inc
xor
mov
int
pop
push
xchg
sub
and
fldcw
(bad)
(bad)
out
shl
add
jno
jle
sbb
sub
(bad)
(bad)
(bad)
push
popf
sub
out
mov
fisttp
out
mov
das
enter
inc
cs
push
outs
cli
(bad)
dec
pop
xchg
cmp
dec
add
jbe
sbb
retf
jmp
cld
imul
call
pop
(bad)
xor
sbb
and
sbb
gs
xchg
cs
cld
ja
sbb
call
int3
stc
add
and
mov
push
or
pop
inc
stos
data16
retf
dec
lss
inc
pop
pushf
dec
or
mov
das
cmp
(bad)
pop
mov
mov
mov
push
dec
dec
add
push
cmp
test
stos
mov
shl
(bad)
(bad)
(bad)
fadd
push
or
dec
cmc
inc
jae
ja
push
dec
add
icebp
mov
retf
std
rol
xchg
mov
mov
pop
repz
lods
adc
stc
(bad)
(bad)
jmp
aaa
jae
pusha
push
cmps
stos
test
out
lahf
dec
add
jmp
pop
xlat
mov
mov
(bad)
(bad)
(bad)
push
jp
sub
loop
mov
add
push
pop
sub
xor
(bad)
icebp
jbe
dec
jecxz
(bad)
call
cmps
mov
inc
cmps
(bad)
(bad)
sbb
add
hlt
mov
push
daa
xor
(bad)
pop
or
add
pushf
fcmovnu
pop
rcr
add
jne
(bad)
(bad)
(bad)
inc
jmp
mov
pop
lea
aaa
das
push
push
cmp
movs
fmul
jns
jno
dec
(bad)
lea
sbb
call
pop
shl
mov
inc
mov
call
(bad)
cmp
push
and
xlat
es
pop
xor
mov
inc
rcl
ret
call
sar
cmps
ins
imul
fdiv
jl
adc
int3
popf
out
and
xchg
sub
xor
das
add
dec
mov
xchg
push
sub
out
clc
mov
or
test
mov
call
inc
ds
inc
addr16
sbb
loope
xor
dec
and
(bad)
(bad)
call
inc
push
hlt
add
inc
and
jmp
dec
jmp
add
loope
mov
sub
cmp
xchg
xchg
call
fld
fmul
retf
(bad)
call
push
sub
(bad)
in
ss
(bad)
xor
(bad)
(bad)
call
das
add
cmp
movs
es
fwait
cmp
gs
cwde
mov
mov
push
jmp
(bad)
fcomip
jmp
retf
cmp
push
lods
push
cdq
imul
dec
(bad)
(bad)
(bad)
(bad)
cwde
push
mov
or
unpckhps
hlt
cs
adc
and
mov
adc
fidiv
pop
stc
dec
(bad)
(bad)
mov
loopne
outs
sar
inc
and
aam
shr
cmc
xlat
mov
mov
bound
mov
jl
inc
out
loope
push
push
or
repz
mov
pop
cmc
(bad)
jmp
shl
mov
mov
ds
in
sub
(bad)
(bad)
dec
jae
dec
cs
jecxz
mov
xchg
(bad)
push
clc
leave
sti
(bad)
dec
sbb
loopne
into
push
inc
outs
test
(bad)
call
scas
(bad)
call
xchg
inc
jl
clc
pop
jg
cmp
not
lock
(bad)
(bad)
inc
cwde
clc
sub
jle
xchg
add
adc
or
icebp
jg
inc
push
push
sbb
imul
cwde
movs
dec
inc
imul
mov
and
(bad)
call
outs
add
push
mov
scas
push
pop
test
shl
in
mov
or
mov
test
or
mov
add
sbb
mov
and
in
xchg
mov
dec
jmp
dec
inc
les
sbb
(bad)
mov
lods
repz
jmp
dec
add
or
dec
call
int
mov
jb
cmp
outs
pop
inc
(bad)
push
int
hlt
ret
mov
imul
jge
clc
jg
cmp
mov
and
cdq
xchg
cwde
in
mov
mov
or
es
outs
(bad)
cmp
mov
xor
push
mov
(bad)
(bad)
push
mov
xchg
jle
aam
inc
in
cld
mov
cmps
repnz
cs
(bad)
mov
int3
pop
pop
rcr
int
xor
es
in
adc
(bad)
call
bound
cdq
jne
sbb
push
push
inc
test
pusha
daa
loop
(bad)
aas
push
and
inc
sub
out
push
pusha
inc
xchg
cmp
(bad)
call
fsubr
push
ds
adc
sub
pop
sub
(bad)
(bad)
mov
mov
or
sub
cs
je
mov
pop
test
push
or
push
js
adc
add
loop
fnstenv
adc
outs
stos
dec
jae
xor
jp
cmp
jle
push
pop
je
dec
add
stc
or
stc
pop
pop
rep
push
loopne
shr
pop
xchg
dec
push
mov
mov
icebp
fidiv
xor
mov
cmp
aad
(bad)
dec
pushw
int
aaa
sti
rcr
(bad)
cmps
(bad)
(bad)
jmp
add
int3
or
jno
fldenv
mov
cmp
xor
inc
in
iret
loope
cmovge
sub
out
jno
pushf
loopne
cli
(bad)
stos
or
jbe
(bad)
jo
in
lds
lds
(bad)
fistp
jg
dec
jle
jle
mov
xchg
inc
sar
mov
fsubr
pop
jl
xchg
mov
jae
pop
pop
pop
jle
(bad)
jmp
stos
or
ja
ds
dec
mov
repnz
or
mov
jnp
jo
add
xor
adc
int3
add
or
je
pop
cmp
mov
sub
jp
test
lods
push
(bad)
ins
imul
and
sbb
(bad)
data16
mov
sti
cmp
adc
pusha
inc
icebp
xchg
xor
jns
call
clc
sub
stos
ret
mov
call
clc
(bad)
(bad)
jmp
inc
int
sar
sahf
ss
gs
out
arpl
add
or
(bad)
in
xchg
in
pushf
mov
ins
push
mov
sbb
stos
mov
mov
(bad)
(bad)
call
test
jl
enter
push
mov
xor
(bad)
jb
mov
rcr
call
push
in
mov
mov
push
lds
push
mov
push
cmp
hlt
(bad)
push
out
mov
stos
out
inc
push
add
add
shl
outs
pop
dec
(bad)
(bad)
(bad)
(bad)
fadd
and
or
mov
aad
fmul
xchg
cmp
xchg
out
push
stos
mov
shl
scas
aad
and
ror
mov
(bad)
scas
push
sbb
adc
xor
shl
(bad)
(bad)
(bad)
dec
xchg
mov
sbb
adc
mov
push
fsubr
loop
std
nop
test
pop
jmp
and
inc
mov
jg
je
pop
scas
cmp
(bad)
scas
jmp
mov
jg
pop
mov
xor
icebp
add
push
jle
xchg
dec
fimul
test
add
(bad)
jmp
xor
inc
ins
inc
add
jae
fadd
enter
aam
pop
icebp
stc
(bad)
fild
and
xchg
pop
aam
jmp
aas
rep
mov
inc
push
and
mov
push
(bad)
fwait
mov
or
fsub
mov
xchg
test
(bad)
(bad)
(bad)
inc
inc
xchg
dec
xchg
jge
jb
push
scas
outs
test
xor
sbb
or
movs
shl
std
(bad)
(bad)
in
add
sbb
mov
or
mov
int3
(bad)
(bad)
(bad)
jmp
cwde
push
shr
div
xchg
xchg
jge
int3
mov
ds
add
or
xor
jno
(bad)
(bad)
(bad)
dec
jbe
adc
mov
lods
mov
(bad)
jo
(bad)
(bad)
(bad)
jmp
inc
loope
xchg
adc
pop
cs
(bad)
add
lods
ficomp
jae
mov
xchg
xor
(bad)
push
add
test
hlt
push
inc
pop
data16
lds
pop
xor
cmp
mov
fs
inc
mov
xchg
mov
(bad)
pop
daa
data16
mov
or
scas
ficom
(bad)
call
adc
jle
iret
lea
clc
lds
xchg
mov
fst
push
and
(bad)
inc
nop
scas
stos
xor
mov
pop
aas
dec
pop
add
xor
add
fcmovb
xor
ret
movs
add
push
sbb
fcom
mov
sbb
(bad)
inc
mov
movs
and
popa
nop
aas
and
movs
out
jae
ins
cmp
mov
aam
push
sbb
inc
sar
(bad)
dec
mov
loop
les
sbb
movs
sub
scas
leave
jge
dec
ins
(bad)
(bad)
(bad)
inc
push
rcl
push
push
add
pushf
dec
cmp
in
jb
xor
sub
mov
(bad)
(bad)
(bad)
jmp
inc
inc
inc
sbb
(bad)
repz
movs
cli
pop
gs
jae
add
adc
retf
ret
mov
mov
dec
ret
pop
cmp
(bad)
(bad)
jg
jmp
scas
shl
popf
mov
and
mov
ss
(bad)
(bad)
(bad)
js
test
mov
add
push
xchg
(bad)
ins
push
or
cwde
push
(bad)
inc
out
cwde
push
stos
lds
jge
or
sbb
mov
jno
push
jno
xor
jg
xchg
push
jae
jmp
jmp
cli
and
sub
(bad)
jg
shl
test
push
jo
mov
inc
or
std
cmp
pop
cld
leave
jp
pop
dec
hlt
pop
loope
inc
cmp
add
fld
sub
(bad)
(bad)
call
and
lods
or
pop
test
and
loop
fistp
mov
adc
movs
(bad)
(bad)
(bad)
call
(bad)
and
lods
sub
sbb
fiadd
int
inc
cmp
xor
gs
dec
cmp
shl
xchg
(bad)
push
adc
rol
scas
xor
push
push
or
xor
cmp
cmps
sbb
jo
jl
(bad)
(bad)
(bad)
dec
(bad)
mov
inc
mov
inc
je
loop
cmps
rcr
xchg
retf
lahf
je
daa
aad
(bad)
(bad)
(bad)
cmp
int
push
mov
mov
ins
jmp
iret
mov
in
mov
inc
mov
inc
aaa
pop
sbb
jmp
cli
pop
imul
or
cwde
adc
cmps
ja
out
add
cmp
add
mov
xchg
ficom
fsubr
call
pushf
sbb
mov
loope
out
push
std
sahf
outs
mov
fld
push
pop
jno
sub
push
scas
dec
hlt
(bad)
(bad)
call
pop
sbb
sub
xchg
pop
loop
jmp
dec
lock
xchg
shr
sbb
or
(bad)
mov
xchg
popf
call
arpl
mov
fs
sbb
(bad)
(bad)
call
mov
mov
ds
fbld
pop
mov
mov
retf
(bad)
mov
inc
jae
out
out
lock
lahf
jnp
out
test
cmp
and
js
movs
imul
call
push
cwde
inc
mov
call
mov
add
or
pop
adc
jl
pop
xchg
mov
(bad)
call
or
loopne
imul
lods
out
mov
(bad)
imul
mov
(bad)
(bad)
fnstsw
out
repnz
leave
ins
xchg
pop
ficom
jne
xchg
stos
lock
movs
push
adc
(bad)
(bad)
(bad)
dec
pushf
lds
outs
xchg
jmp
sbb
pop
add
repnz
jmp
push
mov
movs
fpatan
cmp
and
jae
(bad)
lea
push
ds
cwde
les
inc
jb
ins
dec
cmp
fs
push
adc
xchg
mov
pop
xchg
xchg
bound
setnp
adc
fdivr
and
jg
push
jle
xchg
out
push
fld
add
sub
(bad)
neg
fs
cs
out
fist
fs
lahf
rol
icebp
in
jmp
stos
jmp
add
ret
retf
cld
add
cmps
test
adc
clc
(bad)
(bad)
mov
(bad)
fbstp
scas
call
rcl
pop
test
pop
fnstsw
jmp
mov
sub
es
fs
ds
hlt
mov
dec
push
pop
xor
int3
xlat
add
jmp
adc
sbb
(bad)
(bad)
jl
mov
fcomp
dec
cmp
(bad)
(bad)
(bad)
mov
ins
pusha
rcl
imul
pop
xchg
cmp
aaa
movs
mov
aam
jle
sar
dec
adc
sbb
push
stos
pop
cmps
jg
ss
pop
and
cmp
(bad)
(bad)
(bad)
(bad)
fld
cdq
jge
cli
and
inc
nop
adc
js
adc
sub
push
hlt
pop
aam
add
(bad)
jmp
add
cld
sahf
and
adc
(bad)
fadd
pop
sub
dec
mov
sti
mov
(bad)
(bad)
call
pop
mov
inc
mov
popa
jl
das
push
icebp
sahf
xor
lea
mov
retf
stos
bound
test
xchg
test
in
inc
jbe
ins
jmp
scas
cs
mov
mov
aad
add
in
in
mov
adc
dec
mov
cmc
adc
int3
(bad)
call
(bad)
(bad)
fstp
jmp
fiadd
xchg
mov
jbe
adc
jnp
data16
push
inc
mov
std
(bad)
(bad)
(bad)
jmp
mov
in
loope
das
mov
dec
jno
dec
and
xchg
jmp
clc
push
mov
outs
call
nop
pop
call
cmp
(bad)
jbe
(bad)
push
cld
les
push
adc
jne
scas
enter
push
std
xchg
int3
mov
xchg
or
mov
jmp
and
or
ins
mov
retf
or
leave
cs
mov
leave
jg
(bad)
call
push
movs
sbb
pop
out
ds
mov
dec
shl
sbb
(bad)
(bad)
jmp
cmps
pop
mov
mov
fldcw
jp
fld
and
es
jmp
or
(bad)
(bad)
(bad)
aas
ins
dec
lock
add
ja
dec
sbb
dec
jo
jmp
xor
mov
into
popa
aad
fcomp
jae
fnstsw
test
jl
and
push
jmp
std
jecxz
cmp
xchg
fwait
dec
shr
icebp
inc
push
int
add
jle
jl
dec
xlat
or
push
fs
(bad)
(bad)
(bad)
call
mov
add
or
retf
push
sahf
loopne
ins
sbb
mov
jmp
sub
fucompp
scas
dec
lods
xchg
mov
in
fstp
shl
(bad)
fild
mov
xchg
xor
ds
sub
jns
dec
(bad)
(bad)
(bad)
fild
or
loopne
cmp
clc
mov
add
sbb
dec
sub
call
add
adc
cmps
pop
mov
cmc
in
push
js
nop
xchg
mov
(bad)
jmp
aaa
test
lds
test
jbe
mov
pusha
lods
dec
mov
(bad)
dec
dec
mov
sub
fs
pop
cmp
aas
test
(bad)
(bad)
inc
cmp
ds
in
in
int
outs
aad
(bad)
mov
das
dec
fnstenv
ss
(bad)
dec
lods
neg
test
dec
aam
out
push
fwait
jbe
(bad)
(bad)
(bad)
call
daa
jo
jnp
xchg
sbb
jecxz
add
(bad)
ja
or
into
out
ret
lock
pop
sbb
mov
xor
daa
or
enter
lods
dec
fucomp
or
loope
inc
add
sbb
(bad)
fs
mov
fisttp
iret
dec
(bad)
jmp
xor
fs
hlt
dec
xchg
(bad)
loopne
jl
add
sbb
jmp
dec
std
mov
cmp
imul
rcr
(bad)
sti
es
jmp
imul
mov
jmp
(bad)
(bad)
jmp
test
dec
cmc
out
dec
push
(bad)
aam
xchg
stos
cmp
jecxz
xlat
mov
(bad)
mov
push
mov
repz
test
out
mov
push
inc
sub
jg
mov
mov
call
ja
dec
add
fbstp
and
lea
push
out
mov
scas
fs
outs
mov
sti
(bad)
(bad)
(bad)
(bad)
ds
sahf
mov
sub
test
test
inc
sub
xlat
or
xor
(bad)
push
call
fdiv
push
bound
div
in
das
cli
(bad)
jmp
sub
mov
cmps
adc
dec
sub
movs
ror
mov
jmp
jb
out
add
pop
les
cmp
js
sti
xchg
push
bound
add
and
or
nop
fist
std
(bad)
and
mov
add
(bad)
jmp
adc
sub
test
mov
add
xchg
(bad)
fwait
xchg
ja
retf
call
mov
cmp
push
mov
in
xor
repz
xchg
mov
gs
or
jl
dec
pop
cmps
add
sub
xchg
shl
mov
ja
sar
fcmovnu
jmp
fnsave
ins
int
pop
ss
cmp
push
(bad)
(bad)
(bad)
dec
arpl
dec
mov
cld
popf
pushf
into
sbb
in
and
mov
xor
das
fdivr
(bad)
(bad)
jmp
(bad)
fdivr
cdq
jmp
fcomp
cmp
xor
lods
cmp
(bad)
jg
pop
xchg
push
into
les
movs
and
xchg
xchg
or
test
cmp
outs
clc
(bad)
jmp
daa
sbb
retf
push
push
fwait
jne
fs
fwait
sbb
leave
mov
(bad)
(bad)
jg
mov
shl
iret
outs
mov
cmp
(bad)
fmulp
sti
xchg
mov
sub
fdivr
imul
cs
test
mov
mov
lea
bound
(bad)
(bad)
call
outs
ss
sbb
dec
jmp
rcr
jl
rcl
call
mov
sbb
mov
loop
sub
cs
out
mov
shl
(bad)
(bad)
jns
and
(bad)
fwait
inc
xor
test
mov
(bad)
(bad)
fild
xchg
ins
ins
stc
adc
addr16
inc
test
fs
dec
jmp
neg
xor
ret
idiv
(bad)
dec
mov
hlt
sub
stc
jnp
mov
xor
in
push
test
push
fcmovbe
sub
add
mov
shl
mov
ds
lock
mov
or
and
(bad)
mov
inc
popa
(bad)
jmp
outs
js
adc
or
xor
and
aas
xchg
(bad)
clc
retf
xchg
push
in
cs
xor
icebp
cs
mov
dec
scas
or
mov
clc
pop
(bad)
dec
cli
and
rcr
push
ret
outs
fnstsw
jg
jmp
mov
xchg
arpl
cs
call
ror
jmp
jecxz
ins
(bad)
mov
and
pop
mov
(bad)
loop
dec
in
pop
mov
mov
adc
and
movs
in
push
retf
call
es
mov
mov
and
mov
and
out
and
arpl
fcom
pop
sbb
das
(bad)
(bad)
jg
push
jno
in
pop
clc
out
cld
loope
pop
aaa
in
push
sbb
in
out
sti
xchg
not
xchg
mov
xchg
mov
jp
fstp
push
addr16
out
jl
fcom
mov
outs
fcmovu
aad
mov
mov
mov
mov
jb
in
or
movs
sub
loop
mov
and
repnz
daa
add
mov
mov
sbb
(bad)
(bad)
push
fisubr
mov
jg
ins
pop
movs
mov
pop
in
push
int
mov
mov
cdq
pusha
mov
(bad)
mov
lahf
ins
nop
mov
gs
mov
jmp
or
(bad)
(bad)
(bad)
push
sub
aaa
les
xor
or
mov
fld
mov
bound
icebp
cmp
jb
or
sub
pop
aaa
xor
xchg
cdq
mov
rcl
sar
inc
push
mov
fcom
mov
fst
(bad)
call
stos
ins
popf
xchg
test
xchg
cdq
repnz
cmp
cdq
stos
xchg
repnz
enter
imul
or
mov
rcl
ja
js
mov
sti
push
xlat
mov
loopne
push
sub
pop
(bad)
retf
jmp
(bad)
(bad)
(bad)
dec
xchg
cmps
pop
aas
sub
loopne
fsubr
mov
jne
sub
(bad)
push
fcom
cs
test
xchg
jmp
pop
adc
ret
cwde
pop
push
xor
(bad)
(bad)
(bad)
call
xchg
dec
cli
mov
push
pop
popa
ja
lods
les
les
(bad)
(bad)
inc
test
ficom
cdq
(bad)
stos
mov
inc
inc
and
add
(bad)
(bad)
inc
or
dec
adc
xchg
fidivr
mov
fcmovu
mov
sub
mov
in
xchg
or
inc
scas
bound
dec
sbb
les
add
(bad)
(bad)
(bad)
jmp
sub
jnp
push
adc
bound
js
jl
retf
push
jnp
jecxz
cwde
addr16
pop
cld
cmps
in
(bad)
jmp
test
mov
nop
les
jae
and
call
in
fwait
xchg
repz
xchg
mov
cmps
icebp
push
btr
outs
ins
sub
jns
jnp
mov
sub
cmp
cmps
js
and
ja
inc
in
inc
fldcw
(bad)
(bad)
jmp
stos
add
(bad)
cmp
into
inc
ror
mov
push
push
(bad)
std
scas
sub
push
fwait
push
in
inc
rcl
pop
(bad)
(bad)
(bad)
jmp
or
jp
enter
pop
pusha
fnstsw
jge
push
inc
dec
jns
jo
inc
adc
hlt
(bad)
(bad)
call
jnp
mov
or
adc
push
cmp
ins
loope
and
and
mov
idiv
call
xor
lds
push
mov
int3
pop
neg
fidivr
and
(bad)
(bad)
(bad)
push
es
in
xchg
mov
xchg
xor
inc
fisttp
dec
dec
pop
stos
push
jp
loop
int3
jne
ja
popf
out
std
jg
push
inc
sbb
aas
fs
cld
dec
ficomp
mov
adc
(bad)
(bad)
call
xchg
ins
test
ss
or
xor
arpl
dec
push
stc
(bad)
(bad)
(bad)
inc
fcom
mov
loop
xor
dec
aas
fst
xchg
imul
adc
and
sbb
cld
lds
xor
outs
add
dec
enter
xchg
pop
mov
push
sbb
cmps
jnp
(bad)
(bad)
mov
fadd
pop
jbe
aam
adc
cli
sbb
sub
test
cmps
cmp
loopne
(bad)
jmp
xchg
idiv
retf
inc
jnp
js
sub
movs
ins
int
xor
(bad)
dec
sub
fld
cs
jne
dec
xchg
xor
mov
sar
(bad)
(bad)
mov
cmps
sbb
rcr
pop
sbb
dec
cs
lock
rcl
add
dec
xchg
pop
hlt
inc
mov
dec
mov
sub
iret
ficomp
ds
into
xchg
popa
fstp
(bad)
inc
movs
sub
jne
xlat
rcr
enter
cdq
mov
cmp
cmc
dec
out
lea
push
(bad)
(bad)
aaa
(bad)
outs
fisub
pop
arpl
jecxz
int
ins
in
inc
xlat
mov
mov
(bad)
(bad)
cmp
pop
dec
ss
dec
mov
push
mov
or
jno
jo
sub
lods
rol
push
jl
out
mov
jmp
dec
dec
add
retf
(bad)
sti
cdq
ret
mov
test
sub
push
out
(bad)
jb
lods
pop
dec
push
fistp
add
cmc
mov
std
out
mov
(bad)
call
xchg
pop
cdq
pop
xchg
std
xchg
xchg
(bad)
(bad)
shl
int
nop
sbb
sbb
push
pop
mov
push
or
jl
push
jmp
pop
ja
inc
aam
mov
sahf
out
cmp
cwde
sbb
test
int
add
dec
out
out
mov
jne
fisub
add
push
jne
xlat
stc
or
not
fnstsw
gs
jl
push
or
es
cmp
pop
sahf
out
lea
push
shl
(bad)
(bad)
jg
das
xor
jo
(bad)
sub
fcom
xchg
vmovntps
add
(bad)
jg
bound
mov
fdiv
cwde
fwait
or
jl
pop
ret
cmp
mov
pushf
call
sub
pushf
movs
sbb
mov
das
clc
call
ins
mov
mov
sahf
stc
dec
hlt
retf
cmp
iret
xchg
mov
repz
mov
(bad)
(bad)
mov
adc
stos
pop
adc
cmps
pop
and
jne
lds
dec
sub
mov
pop
pushf
outs
jno
jge
xlat
mov
retf
ins
loop
(bad)
dec
adc
mov
dec
or
rcl
push
out
adc
stos
(bad)
dec
sbb
xor
adc
into
cmp
mov
jg
inc
mov
in
call
out
ja
sbb
loop
mov
(bad)
push
xchg
pop
push
mov
mov
dec
push
fdiv
push
outs
(bad)
(bad)
inc
std
sbb
stc
jmp
or
mov
push
(bad)
mov
jp
(bad)
fistp
fisubr
mov
icebp
ins
push
pop
adc
(bad)
(bad)
(bad)
jmp
imul
xor
xchg
sub
xchg
cmc
xchg
addr16
aam
cmc
inc
sub
(bad)
(bad)
call
ret
mov
mov
jno
sub
das
xor
mov
std
xor
push
bound
adc
sbb
add
mov
jns
arpl
push
pop
stos
out
fisub
jbe
icebp
retf
fwait
mov
mov
hlt
(bad)
mov
enter
(bad)
pusha
gs
(bad)
push
sub
movs
and
outs
xor
(bad)
aad
or
in
out
xor
cmp
hlt
cmp
or
(bad)
jmp
push
xor
daa
push
(bad)
stc
adc
mov
inc
xchg
xchg
pop
mov
push
(bad)
jmp
fdivp
pop
into
sbb
call
sahf
sub
idiv
push
and
xlat
int3
rol
sub
sbb
das
push
xor
test
neg
(bad)
push
sti
aaa
ja
sbb
xchg
test
push
dec
je
adc
call
lods
pop
stos
sbb
jbe
pop
pop
ss
fdiv
add
int
mov
(bad)
mov
dec
inc
ror
add
(bad)
push
pop
pop
test
pop
push
cmp
ud0
(bad)
jmp
bound
iret
mov
(bad)
sub
push
addr16
fdivr
test
dec
dec
es
jle
sub
(bad)
(bad)
(bad)
mov
pop
jmp
int3
cs
retf
xchg
dec
div
mov
arpl
add
stos
jmp
(bad)
dec
cmp
fnsave
fiadd
dec
dec
sar
cmp
data16
(bad)
call
retf
cdq
sub
test
out
stos
push
out
int
adc
cmp
add
arpl
sahf
dec
mov
cdq
imul
das
jp
(bad)
mov
xor
js
scas
nop
dec
and
pop
cs
out
mov
(bad)
inc
and
ror
into
lea
bound
dec
enter
enter
repz
and
dec
mov
push
repz
jbe
jmp
fisttp
out
pop
xchg
lahf
jl
stos
push
pop
in
dec
shl
xchg
(bad)
dec
inc
push
repnz
out
push
loopne
int
xchg
ins
ss
(bad)
(bad)
(bad)
fldenv
js
sbb
cmc
add
mov
adc
movs
pop
xchg
cmp
xor
jae
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
add
lock
push
mov
mov
bound
(bad)
(bad)
jmp
loop
adc
push
pop
or
stos
xchg
sub
mov
pushf
sbb
ins
sub
mov
sar
mov
rep
sub
adc
movs
sbb
xor
sbb
(bad)
mov
in
xchg
das
push
add
jne
sbb
push
loop
sbb
(bad)
mov
lea
sbb
ins
pop
adc
popf
inc
and
adc
pop
out
scas
pop
repnz
dec
add
push
add
(bad)
(bad)
(bad)
push
outs
dec
(bad)
cmp
or
(bad)
jae
and
test
sub
(bad)
(bad)
(bad)
jns
fwait
stc
in
jg
cmp
aad
sti
pop
jmp
or
sbb
in
jg
jg
mov
xor
mov
sbb
sub
xchg
sti
inc
push
in
mov
ins
(bad)
(bad)
(bad)
dec
dec
inc
push
gs
es
add
sub
push
cmp
dec
mov
inc
fcom
lods
push
xor
sar
mov
(bad)
call
inc
push
or
push
sbb
arpl
add
inc
mov
(bad)
(bad)
mov
je
pop
mov
pop
push
into
dec
fst
ret
mov
(bad)
(bad)
dec
ret
mov
out
call
dec
and
mov
xchg
fld
pop
ss
out
clc
aad
(bad)
movs
dec
push
es
lahf
adc
push
jmp
(bad)
call
sbb
fidivr
adc
(bad)
out
sbb
outs
repnz
pop
inc
mov
sbb
(bad)
pop
sti
fsub
loope
(bad)
jmp
jne
iret
xchg
(bad)
dec
aad
cwde
in
or
mov
xor
imul
call
mov
pushf
sub
aas
mov
add
lds
scas
dec
cmp
(bad)
(bad)
call
lahf
adc
mov
repz
je
call
and
retf
sbb
push
cwde
jmp
push
mov
xlat
mov
(bad)
outs
fcomp
jg
and
lods
mov
sub
jecxz
icebp
(bad)
jmp
sbb
shl
ss
fcmovnu
(bad)
icebp
std
(bad)
call
fist
push
mov
fs
cmp
lods
push
shr
pop
ja
call
xchg
jge
or
mov
clc
sub
fcomp
sar
std
push
int3
cmc
fnsave
mov
aaa
sahf
push
adc
sti
xchg
clc
mov
frstor
fdivp
or
fdivr
xor
stos
xor
mov
mov
fisubr
lahf
push
jae
aad
jmp
shl
xchg
and
cmc
daa
dec
push
xchg
mov
stos
fdivr
inc
fwait
sar
imul
push
icebp
outs
not
fwait
ds
xchg
push
outs
clc
add
xchg
pop
and
sbb
pop
inc
adc
(bad)
(bad)
(bad)
call
pusha
movs
pusha
mov
loope
iret
daa
je
mov
adc
ds
(bad)
(bad)
dec
aam
aas
mov
sti
sbb
call
push
adc
mov
inc
mov
int3
in
jne
(bad)
adc
test
cmps
aas
jns
dec
mov
mov
ret
lods
mov
or
addr16
shr
(bad)
cmps
and
(bad)
call
(bad)
loope
pop
xlat
cmp
add
mov
xchg
and
(bad)
call
iret
mov
jge
jnp
mov
scas
addr16
scas
data16
stc
xchg
sbb
mov
leave
xor
or
(bad)
mov
pop
mov
push
dec
add
add
mov
test
mov
(bad)
push
aas
mov
sbb
repz
out
out
xchg
aaa
jl
in
call
xchg
mov
jl
aad
dec
inc
xchg
out
(bad)
(bad)
(bad)
(bad)
mov
and
sti
daa
loop
inc
fmul
rcl
mov
ins
fldpi
(bad)
(bad)
(bad)
call
call
or
dec
sub
imul
(bad)
(bad)
(bad)
call
jbe
fcom
data16
mov
mov
push
jne
jmp
aad
inc
hlt
cdq
cli
(bad)
(bad)
dec
cs
aad
(bad)
js
sub
jecxz
stos
add
dec
in
cdq
clc
mov
test
(bad)
(bad)
jmp
pop
inc
mov
sub
data16
icebp
enter
adc
bound
xchg
add
fmul
(bad)
(bad)
pop
(bad)
sub
pause
mov
push
test
xor
(bad)
jg
call
aam
sbb
out
outs
rcr
cmp
xchg
fs
adc
repz
mov
pop
std
call
mov
fimul
stos
inc
dec
xchg
sub
sub
(bad)
sbb
(bad)
inc
pop
or
sar
ficom
mov
adc
cli
jg
push
sub
push
(bad)
aad
lds
xor
fwait
and
jmp
pop
outs
dec
rcl
mov
dec
idiv
(bad)
(bad)
jmp
mov
fidivr
das
je
fcom
popa
cwde
mov
gs
cmps
mov
shl
dec
shl
out
or
shl
dec
dec
inc
sahf
xchg
dec
sahf
test
add
nop
mov
and
call
mov
or
dec
mov
pushf
mov
xchg
xor
xor
clc
(bad)
jmp
push
jns
inc
add
fwait
sub
in
adc
cld
call
sub
shr
daa
or
and
gs
lock
jmp
aam
add
clc
ja
jmp
dec
or
adc
(bad)
dec
xor
sub
out
push
out
retf
pop
jb
xchg
pop
jl
shl
mov
push
push
mov
sub
push
retf
fwait
(bad)
(bad)
push
lods
xchg
jns
cmp
ficom
lods
cmp
je
shl
(bad)
(bad)
jmp
xor
push
pusha
sbb
(bad)
sbb
imul
(bad)
fsubr
int
fwait
(bad)
ficom
mov
jb
repnz
imul
fwait
push
cmc
push
inc
cdq
outs
mov
aaa
xchg
cmps
or
mov
mov
inc
xchg
ret
adc
(bad)
(bad)
jmp
dec
bound
or
inc
jae
xchg
adc
retf
dec
int
inc
sub
ret
mov
cdq
pop
in
sbb
or
jg
jecxz
fcmovne
imul
mov
pop
fild
push
sbb
shl
(bad)
(bad)
(bad)
push
sahf
inc
and
cdq
jmp
push
dec
dec
in
sti
xchg
mov
addr16
(bad)
mov
fdiv
dec
push
aaa
imul
bound
retf
xor
and
dec
leave
dec
sar
sub
daa
jns
or
adc
sub
(bad)
(bad)
(bad)
jmp
mov
and
mov
mov
movs
shl
push
cmp
(bad)
(bad)
jmp
popf
cmps
movs
xchg
out
sti
push
pop
mov
cdq
dec
dec
int
and
cmp
dec
(bad)
(bad)
mov
and
push
rcl
pop
sbb
xchg
int
popf
arpl
int
mov
(bad)
(bad)
dec
and
rcl
xor
daa
stos
retf
jmp
mov
fadd
cli
ret
(bad)
(bad)
mov
xchg
sub
cmp
adc
jp
shr
push
mov
fld
repz
mov
loope
push
int3
sub
or
push
int3
push
movs
lods
(bad)
(bad)
jg
jnp
mov
das
call
(bad)
mov
cs
gs
in
(bad)
(bad)
jmp
xor
cmp
retf
pusha
jle
jmp
sahf
xchg
retf
cmp
mov
pop
cmc
mov
adc
push
fdiv
arpl
(bad)
mov
retf
jle
stc
fwait
adc
int3
inc
cmp
in
stc
(bad)
cmp
cli
(bad)
jmp
add
mov
leave
sub
inc
push
test
clc
je
pop
xchg
outs
fwait
or
push
sub
pushf
sub
mov
lock
jmp
xor
cli
jmp
test
sbb
jmp
test
fldenv
sti
sar
ins
retf
and
xchg
push
fidiv
scas
jge
mov
mov
xchg
sub
jno
jnp
jecxz
out
mov
call
(bad)
(bad)
(bad)
jl
sub
mov
jae
xchg
or
ja
in
je
push
loope
pop
push
sub
call
push
imul
and
xor
and
fistp
js
icebp
(bad)
dec
dec
ins
mov
lods
push
lea
retf
dec
adc
dec
cld
test
sahf
mov
(bad)
(bad)
fild
movs
jmp
call
sar
int3
fist
or
sub
xchg
and
mov
or
cmp
pushf
repz
(bad)
(bad)
jmp
arpl
sub
(bad)
fs
or
pop
sbb
xchg
jl
into
cld
mov
call
and
pop
mov
cdq
mov
add
cmps
adc
jns
push
jno
inc
pop
push
sub
shl
dec
adc
jge
xchg
es
addr16
cmp
or
dec
or
xchg
adc
push
mov
pop
pop
(bad)
jg
jmp
pop
movs
cmp
popf
pop
ins
mov
mov
sub
mov
stos
dec
iret
push
push
sahf
inc
mov
in
mov
push
jae
loope
dec
sti
(bad)
icebp
mov
add
mov
xchg
pop
sti
je
cwde
xor
and
(bad)
(bad)
(bad)
fisubr
das
xor
or
test
rcr
sbb
outs
shl
(bad)
in
xchg
ins
jae
or
and
lahf
push
imul
dec
mov
sbb
mov
ins
lea
iret
push
fistp
and
jmp
mov
cmp
adc
xor
stos
ss
(bad)
(bad)
(bad)
in
in
mov
(bad)
jno
cmps
sbb
mov
jae
mov
sub
(bad)
(bad)
dec
sahf
out
cwde
mov
lock
pop
sbb
retf
(bad)
lea
es
push
aam
add
jmp
lods
fdiv
inc
ror
xchg
cdq
ss
fwait
cmp
xor
sub
repnz
(bad)
(bad)
call
push
ja
jnp
mov
in
jnp
jmp
call
call
iret
data16
mov
cmps
push
push
test
jg
in
mov
lock
jmp
jnp
pushf
aaa
xor
fld
cld
dec
mov
adc
mov
jo
lds
push
xchg
add
inc
(bad)
js
mov
test
mov
js
mov
aam
mov
(bad)
(bad)
(bad)
jmp
mov
sub
(bad)
aas
popa
ins
sti
sbb
aad
xchg
ds
jge
dec
scas
pop
sar
(bad)
push
add
fwait
test
out
gs
inc
vhsubpd
mov
outs
(bad)
push
mov
xlat
gs
fist
(bad)
push
pusha
arpl
call
hlt
jae
test
jge
mov
dec
mov
mov
scas
pop
pusha
dec
jae
mov
mov
pushf
dec
cwde
(bad)
fs
(bad)
mov
ins
dec
es
sub
push
xchg
inc
gs
in
xchg
xor
or
jne
dec
lock
psrld
outs
inc
fld1
test
ss
retf
hlt
(bad)
(bad)
(bad)
jmp
daa
push
xchg
cmp
clc
addr16
xor
das
sti
pop
out
ret
fs
ror
dec
fmul
cli
(bad)
call
cmp
imul
out
add
jo
push
pop
cmps
jg
js
mov
or
jmp
mov
cwde
(bad)
mov
addr16
popa
mov
pop
xor
fcomp
es
adc
test
(bad)
(bad)
push
and
pop
mov
out
push
jmp
sub
jnp
cmp
pop
hlt
js
mov
test
cs
(bad)
jg
adc
push
sti
std
push
sbb
or
jmp
cdq
loopne
(bad)
push
dec
sahf
mov
dec
dec
stc
xchg
leave
mov
inc
mov
shr
repnz
ror
loop
pop
or
loope
movs
or
push
mov
cmc
idiv
(bad)
mov
inc
ret
or
sbb
mov
dec
dec
sbb
adc
sar
(bad)
jmp
dec
adc
jne
aas
inc
test
pop
lahf
js
hlt
aad
pop
int
mov
mov
push
(bad)
(bad)
jmp
movs
and
mov
pop
sbb
xchg
mov
mov
dec
daa
rcl
xchg
cmp
stos
imul
(bad)
(bad)
(bad)
push
adc
xchg
cmp
xor
lock
loop
cmp
inc
mov
mov
pop
cmc
dec
pusha
or
pop
mov
(bad)
mov
and
test
sbb
(bad)
mov
(bad)
(bad)
(bad)
dec
xchg
adc
nop
push
inc
mov
push
and
out
mov
push
mov
movs
test
jmp
and
pop
and
mov
xchg
std
sbb
scas
cli
dec
shr
mov
xor
pop
sub
nop
or
outs
cli
pop
cmc
mov
fsub
add
stos
mov
mov
sub
(bad)
(bad)
inc
xchg
dec
loop
shl
add
fst
aam
push
xchg
mov
pop
dec
cwde
sahf
mov
lock
shl
sub
(bad)
fld
(bad)
imul
mov
sahf
fcomp
fsubr
std
popa
or
push
xor
(bad)
(bad)
inc
loop
xor
outs
jmp
neg
sub
mov
retf
rcr
xchg
ja
int
mov
mov
sub
mov
or
xor
pop
mov
sbb
or
cmc
les
push
or
(bad)
(bad)
(bad)
in
push
arpl
mov
push
pop
icebp
mov
pop
jmp
repz
jp
cmp
cld
out
mov
cmp
mov
retf
ins
pop
out
adc
pop
(bad)
(bad)
inc
(bad)
ficomp
popa
loope
retf
mov
sar
jb
std
(bad)
dec
jbe
icebp
enter
aam
imul
stos
mov
mov
fisttp
dec
out
ins
jg
ins
xlat
sub
push
jg
aaa
enter
sar
dec
cs
cli
psubsb
mov
div
cld
stos
je
(bad)
(bad)
(bad)
jmp
repnz
lock
dec
push
cmps
lods
mov
sar
loopne
inc
push
push
sti
cmp
(bad)
ds
dec
(bad)
(bad)
jg
jl
sub
inc
sbb
ds
adc
shl
call
mov
inc
mov
mov
or
and
call
sub
shl
inc
mov
popa
out
test
mov
mov
jb
mov
idiv
mov
jmp
xor
jo
mov
or
fstp
int
jo
pop
hlt
pop
gs
inc
or
and
test
jle
scas
jmp
mov
test
adc
daa
add
aas
clc
fucomip
(bad)
bound
xor
stos
in
popf
xor
dec
mov
fild
sahf
jecxz
or
adc
pop
in
leave
xlat
add
out
jnp
loopne
sti
fbstp
test
test
rcl
leave
cmp
jmp
inc
pop
dec
sbb
ds
ret
sbb
or
jg
ins
sahf
clc
pop
sub
lock
mov
(bad)
jg
rcr
jmp
lea
cmp
xor
sar
(bad)
fld
push
push
jbe
iret
lea
arpl
mov
(bad)
(bad)
push
jg
test
movs
aaa
sub
stos
dec
fidiv
icebp
shl
lahf
inc
fld
(bad)
mov
inc
mov
(bad)
test
fisttp
loope
adc
xchg
je
out
cmp
fsub
outs
enter
adc
inc
mov
push
mov
jle
movs
sub
(bad)
call
sbb
loop
sar
inc
cmp
jne
lods
jb
rcl
cmp
jmp
xor
imul
or
sbb
sub
sub
nop
dec
sub
mov
sar
(bad)
(bad)
(bad)
cmp
(bad)
shr
mov
js
and
mov
test
dec
jo
dec
sar
push
js
xchg
jecxz
mov
sub
sub
out
idiv
jg
jmp
lock
mov
loop
cmp
jns
jns
lods
and
cmps
(bad)
(bad)
(bad)
call
test
add
jmp
push
inc
retf
scas
sbb
aad
jmp
sbb
(bad)
(bad)
push
mov
mov
inc
xchg
adc
xchg
inc
fs
mov
mov
cli
mov
jmp
lds
ror
sub
cli
pop
inc
inc
int3
(bad)
(bad)
(bad)
dec
push
xor
push
cmc
cmp
xor
repnz
or
mov
jl
jp
mov
(bad)
mov
lods
inc
pop
test
je
sbb
push
cwde
int3
retf
(bad)
(bad)
inc
out
ror
fs
jl
pop
xchg
test
mov
ret
lds
ror
int
push
sub
hlt
hlt
or
fcomip
xchg
push
sbb
fs
cli
mov
cld
pusha
push
mov
(bad)
call
les
retf
adc
dec
(bad)
dec
loope
mov
pop
mov
fsub
jmp
(bad)
jmp
push
pop
sub
and
or
dec
or
sub
repz
sub
sub
cmp
mov
mov
outs
out
jg
test
jl
outs
cmp
and
dec
sub
in
pop
pop
jmp
dec
jns
and
nop
leave
or
add
lock
clc
jmp
push
(bad)
mov
push
mov
mov
push
idiv
(bad)
dec
shl
xor
mov
das
or
addr16
push
scas
clc
sub
in
cwde
mov
pop
xchg
js
dec
in
sbb
push
das
loop
(bad)
(bad)
(bad)
jmp
aad
xchg
dec
(bad)
mov
fcmovb
dec
mov
mov
adc
pop
xor
leave
fwait
mov
(bad)
(bad)
(bad)
push
dec
add
add
(bad)
rcr
sub
int3
out
bound
das
cli
inc
xchg
or
movs
adc
nop
loopne
pushf
sub
test
or
xchg
mov
loop
mov
xchg
cwde
mov
dec
push
sub
test
push
jmp
mov
push
push
pop
jecxz
pop
or
add
xchg
das
mov
lahf
xchg
pusha
xlat
inc
jmp
loop
rcl
(bad)
(bad)
(bad)
(bad)
stc
inc
push
push
aas
push
and
jmp
mov
aaa
and
jecxz
out
jnp
(bad)
fbld
mov
pop
mov
add
stos
mov
push
mov
sar
push
inc
xchg
pop
in
adc
inc
loopne
je
sahf
sahf
loope
jb
(bad)
les
adc
call
cld
dec
mov
bound
lock
mov
and
(bad)
jl
dec
and
dec
arpl
xchg
fbld
sbb
xlat
pop
out
scas
(bad)
(bad)
(bad)
(bad)
jmp
add
imul
xor
adc
mov
push
ja
sahf
jl
(bad)
adc
(bad)
(bad)
inc
inc
and
sub
jmp
inc
mov
xchg
mov
aam
add
push
out
jge
cwde
push
cmp
or
(bad)
(bad)
(bad)
fs
scas
imul
push
sub
push
call
jne
(bad)
(bad)
jmp
popa
(bad)
push
ret
cmp
mov
sub
test
dec
aad
in
sub
inc
jg
test
in
loop
inc
movs
cmp
repnz
mov
pop
(bad)
jo
xor
(bad)
(bad)
jmp
lods
jne
pop
fld
fcomp
enter
leave
idiv
in
fucomip
leave
dec
(bad)
(bad)
(bad)
push
sti
es
mov
lea
push
xchg
inc
repnz
ins
sub
lock
call
pop
les
aas
loope
ret
inc
aaa
pop
retf
mov
xor
(bad)
(bad)
(bad)
jmp
aad
rcr
fadd
cmps
push
aad
xchg
cmps
sub
in
subps
sub
das
push
adc
(bad)
dec
mov
jl
inc
scas
fsub
fwait
add
inc
sbb
stc
cmps
mov
jb
(bad)
(bad)
jmp
aaa
es
push
mov
mov
pop
or
(bad)
fmul
mov
nop
sbb
mov
(bad)
(bad)
(bad)
(bad)
dec
add
ins
cmp
and
pmullw
fist
adc
js
(bad)
call
cld
ficom
into
fcmovne
(bad)
mov
cmp
outs
or
jmp
and
fisttp
(bad)
dec
aas
das
mov
sahf
mov
cs
mov
add
mov
(bad)
scas
xchg
or
sti
arpl
add
push
fcomip
push
inc
or
push
jp
ja
aad
cmp
js
dec
ror
adc
and
push
dec
pop
pop
push
fadd
push
call
icebp
cmp
(bad)
jmp
gs
lods
push
add
out
push
mov
int3
cmp
iret
sbb
fimul
lahf
fwait
(bad)
jg
dec
std
fst
push
jne
dec
imul
repz
jbe
and
out
mov
xchg
mov
pop
cdq
inc
fs
les
pushf
stos
clc
jae
(bad)
(bad)
dec
xchg
xchg
sub
test
xchg
es
mov
dec
pop
sbb
inc
vcvtsi2sd
(bad)
(bad)
dec
push
cmps
aas
mov
lds
pop
or
js
ret
sub
cmps
clc
push
and
dec
test
(bad)
cmc
rcr
cmps
xchg
outs
aam
dec
fidiv
cmps
iret
hlt
jno
inc
cmc
pop
xlat
scas
stos
(bad)
(bad)
inc
fprem
cmp
fstp
fisttp
pushf
adc
shl
aam
sbb
lock
(bad)
or
mov
(bad)
(bad)
inc
retf
loope
adc
jb
aaa
xchg
test
sbb
out
dec
and
aas
sub
out
mov
out
sbb
outs
test
dec
dec
mov
or
in
cdq
lea
dec
xor
repz
push
int3
cld
dec
mov
inc
lahf
push
xchg
pop
push
ins
nop
mov
(bad)
(bad)
mov
ins
sub
dec
mov
and
xchg
cmps
cmp
fisubr
mov
test
jmp
fdivrp
rcr
popf
mov
jl
pop
mov
int
mov
dec
push
fst
pop
push
push
jne
mov
aaa
cld
or
xor
das
lods
inc
add
mov
loopne
pop
jo
mov
test
add
mov
icebp
(bad)
cdq
inc
(bad)
clc
pop
test
dec
mov
(bad)
(bad)
call
and
enter
and
(bad)
in
adc
jno
int3
leave
ret
cld
(bad)
(bad)
dec
imul
jns
sbb
test
mov
(bad)
xor
lods
and
inc
ret
pop
dec
addr16
dec
test
dec
or
call
ret
mov
sbb
jo
ins
in
xchg
mov
mov
dec
sbb
int3
jmp
mov
jg
scas
jb
movs
cmps
pop
shr
stos
jl
and
cmp
mov
(bad)
(bad)
call
mov
mov
or
inc
cli
dec
xchg
mov
and
daa
xor
(bad)
jmp
pop
inc
test
sub
mov
int
cs
pop
push
int
or
sub
das
clc
(bad)
dec
mov
loop
(bad)
cmp
out
pop
jmp
sahf
or
mov
(bad)
(bad)
jmp
cwde
cs
in
movs
cs
stos
in
and
or
mov
or
mov
pop
repz
(bad)
(bad)
jmp
dec
fcomp
adc
fstp
dec
adc
xchg
mov
ret
(bad)
(bad)
out
or
mov
jnp
ja
lods
int3
mov
aas
ret
dec
fmul
call
jl
or
int
add
xchg
add
retf
mov
xor
pop
data16
cmps
sub
(bad)
jmp
aam
mov
xchg
inc
add
sub
rcl
jg
test
mov
iret
push
fcomp
sti
cmp
fidiv
push
sar
(bad)
(bad)
inc
or
call
cli
bound
sti
sub
jg
call
mov
push
pop
fild
mov
jg
call
lahf
jge
fstp
jg
ds
ret
cmp
shl
fisubr
(bad)
(bad)
call
shl
jge
daa
icebp
lock
pusha
ja
dec
aam
jns
lds
and
cmc
ficomp
popf
ret
(bad)
gs
or
xchg
outs
aas
mov
rcr
fldlg2
int
(bad)
(bad)
(bad)
clc
(bad)
ins
pop
sbb
rcl
hlt
loope
out
aad
scas
fstp
push
fcmovnbe
push
(bad)
(bad)
(bad)
call
rcl
sbb
(bad)
xchg
iret
push
data16
movs
les
les
rcl
(bad)
inc
fadd
sbb
aas
jp
add
movs
retf
jle
xlat
ins
int3
jb
jle
add
sbb
pop
mov
dec
mov
push
fwait
xor
pusha
fidivr
push
and
aaa
std
dec
sub
daa
sbb
mov
imul
dec
mov
jns
xor
out
mov
(bad)
cmps
dec
fnstsw
arpl
mov
pop
inc
icebp
movs
mov
(bad)
(bad)
call
push
leave
shl
push
nop
push
or
loope
cmp
jl
xchg
sahf
je
fcomip
(bad)
dec
mov
loop
enter
test
xor
lods
sbb
adc
mul
(bad)
(bad)
(bad)
(bad)
mov
mov
push
push
fwait
repz
sbb
(bad)
into
cli
test
dec
mov
shr
sub
(bad)
(bad)
inc
ins
pusha
cmp
sbb
push
jmp
mov
nop
aam
lahf
loope
(bad)
jg
and
sbb
or
and
(bad)
idiv
mov
adc
xchg
loop
out
mov
ds
repz
jo
fisub
jmp
sub
ja
in
div
and
aas
jb
jge
cmc
jp
fist
call
(bad)
(bad)
dec
adc
sbb
jp
hlt
(bad)
jmp
jecxz
outs
in
mov
aad
mov
(bad)
(bad)
jle
ins
inc
push
push
hlt
js
aam
xchg
pop
inc
pop
dec
cdq
mov
(bad)
(bad)
(bad)
fcomip
stc
pop
and
cli
adc
mov
addr16
int
mov
mov
out
xchg
mov
add
jmp
cs
push
xor
enter
lahf
loop
(bad)
dec
(bad)
mov
cmps
dec
mov
push
cdq
xchg
pushf
add
shr
inc
sbb
push
fidivr
sub
int
aad
es
outs
(bad)
(bad)
(bad)
push
pop
lds
out
or
sub
test
lds
push
iret
xacquire
fadd
retf
js
xor
cmp
xor
sti
add
jmp
clc
or
jb
retf
inc
cli
add
cmp
cli
fisttp
(bad)
(bad)
push
cmp
xor
or
pop
cmp
or
cmp
(bad)
loope
xor
test
out
pop
mov
sar
jg
(bad)
jmp
in
xor
in
cmp
add
push
adc
or
ror
sub
fwait
stos
sub
mov
dec
out
in
shl
fdivr
(bad)
inc
jb
mov
mov
inc
hlt
int3
jmp
and
scas
adc
push
out
mov
xchg
in
push
ins
icebp
mov
out
data16
push
(bad)
inc
push
shl
int3
stos
fs
push
jmp
mov
lods
test
dec
sub
dec
call
or
imul
jo
(bad)
(bad)
(bad)
dec
add
jl
mov
push
test
sub
cld
inc
(bad)
push
push
xor
cmp
(bad)
out
cli
into
retf
xchg
mov
pushf
fmul
mov
bound
idiv
fbstp
pop
fs
test
mov
sub
clc
das
clc
call
lea
push
inc
es
aam
loop
sub
outs
jle
push
jbe
shl
in
ins
xchg
imul
(bad)
inc
xor
push
fst
push
xor
call
rcl
ja
(bad)
(bad)
fsubr
sbb
cwde
stos
add
cmp
icebp
loopne
(bad)
inc
bound
lea
stos
xchg
push
fnstenv
pop
ficomp
xor
add
mov
loope
pop
jl
pop
jb
mov
test
cmp
cmc
(bad)
push
pop
lods
fwait
sub
mov
int3
push
cdq
jae
mov
call
cdq
test
xchg
push
push
sub
stos
xchg
jmp
pop
xor
in
jp
(bad)
out
es
fsubrp
mov
cmp
imul
(bad)
call
retfw
fcomp
int
out
int
jne
retf
ins
popf
ins
inc
test
je
add
jg
mov
inc
pop
iret
js
jae
cs
xor
(bad)
mov
mov
dec
jns
cld
cmp
xor
xchg
add
sub
push
cmps
das
sbb
das
cli
adc
mov
mov
push
push
pop
inc
dec
movs
dec
hlt
movs
mov
aas
inc
mov
std
push
retf
xchg
das
sub
int
fwait
hlt
lock
(bad)
mov
cmp
dec
mov
pop
(bad)
ins
mov
jle
xchg
ss
jmp
push
call
je
fldcw
fwait
xlat
push
push
(bad)
(bad)
jmp
sub
or
xor
out
mov
jo
hlt
sub
pop
(bad)
call
jmp
call
jb
and
lds
stos
into
imul
(bad)
cmp
and
xchg
add
iret
clc
mov
adc
lock
std
(bad)
jle
(bad)
call
mov
ds
sub
sbb
fwait
xor
(bad)
jmp
sub
(bad)
ss
jbe
or
sub
pop
push
test
inc
mov
jno
out
in
outs
dec
fild
outs
xchg
cld
pop
push
rcr
pop
out
sub
xchg
and
jnp
hlt
(bad)
dec
inc
pop
imul
pop
ins
repz
imul
mov
pop
mov
inc
sbb
(bad)
(bad)
call
ds
pop
lock
inc
fwait
inc
aaa
mov
or
push
mov
aas
loopne
rcl
icebp
ret
(bad)
(bad)
jmp
clc
imul
sti
(bad)
sar
imul
mov
(bad)
(bad)
jle
add
push
test
not
and
mov
dec
or
retf
(bad)
push
ror
inc
sub
and
rcl
push
jmp
dec
mov
jg
(bad)
inc
fcmovu
arpl
add
test
div
aad
jne
jmp
sahf
xor
aam
aas
push
lods
add
or
jmp
jno
ret
clc
stos
adc
retf
xchg
mov
sbb
adc
outs
test
loopne
pop
mov
gs
call
jg
or
and
inc
rcr
pop
clc
int
call
xchg
outs
xchg
sahf
(bad)
(bad)
(bad)
push
in
xor
cs
xor
test
sub
int
sahf
fwait
jbe
fidiv
xchg
ss
(bad)
jmp
jae
xor
mov
test
(bad)
mov
ss
aaa
cld
fcomip
jmp
jno
push
jecxz
or
popf
retf
cmp
cdq
cmps
lock
(bad)
inc
sbb
push
push
in
mov
pop
out
pushf
xor
pop
fisubr
push
(bad)
(bad)
(bad)
call
je
jbe
mov
outs
retf
aas
pop
in
xchg
fist
fdiv
out
mov
retf
hlt
pop
sbb
(bad)
mov
out
inc
push
call
add
aad
ins
and
inc
(bad)
dec
arpl
addr16
ins
fisubr
sahf
pop
xchg
pop
inc
jmp
mov
(bad)
(bad)
(bad)
inc
and
jns
xchg
shl
test
loop
or
sahf
dec
inc
shl
or
xchg
dec
lds
(bad)
(bad)
(bad)
(bad)
sti
sbb
int3
push
jmp
sti
arpl
sbb
sahf
sub
pusha
mov
jno
xor
adc
dec
pop
lahf
jb
mov
xchg
popf
scas
mov
xor
push
inc
pop
les
jmp
add
mov
mov
xchg
(bad)
repz
sub
jmp
xchg
mov
cmp
iret
inc
xchg
mov
fisubr
ret
fcomp
nop
dec
push
aad
(bad)
fbld
nop
and
(bad)
adc
bound
cmp
jmp
xchg
and
stc
enter
clc
push
xchg
sub
arpl
(bad)
xlat
(bad)
(bad)
(bad)
(bad)
fmul
mov
(bad)
fimul
dec
fistp
leave
fnstenv
pop
es
xchg
mov
or
cdq
and
jns
xchg
xor
sar
cmp
push
adc
aad
(bad)
(bad)
(bad)
inc
loopne
jo
lds
push
jp
mov
adc
xor
(bad)
(bad)
(bad)
jg
jns
and
adc
movs
test
add
mov
pop
mov
jns
xlat
(bad)
(bad)
cmp
lods
stos
mov
std
xchg
popf
and
fcmovnbe
retf
inc
(bad)
(bad)
(bad)
jg
dec
jnp
xchg
jp
cwde
out
xchg
mov
mov
mul
into
(bad)
inc
jl
cmps
shr
lock
cli
and
hlt
mov
inc
fldcw
stos
mov
(bad)
(bad)
out
and
xchg
push
aas
jmp
sub
mov
push
(bad)
(bad)
(bad)
(bad)
(bad)
shl
(bad)
xor
mov
or
xchg
ins
dec
ins
cmp
mov
mov
push
push
sahf
fisttp
(bad)
jmp
inc
and
push
or
in
(bad)
jl
mov
(bad)
(bad)
(bad)
(bad)
jg
int3
jecxz
sbb
sbb
(bad)
push
sti
pop
cli
sub
jo
push
mov
outs
call
inc
fstp
mov
lock
lahf
and
dec
add
jns
jne
ja
push
ret
mov
add
je
fucomp
mov
and
xchg
cmp
test
(bad)
(bad)
(bad)
inc
jmp
inc
xchg
lahf
mov
stos
dec
fbstp
jbe
push
sbb
lods
(bad)
mov
sti
push
retf
push
(bad)
push
leave
imul
(bad)
mov
jmp
call
xor
fwait
outs
mov
shl
gs
inc
test
ret
outs
jmp
push
cmc
dec
xchg
pusha
fld
fsubr
xchg
call
loopne
das
jns
(bad)
(bad)
xchg
mov
sbb
mov
mov
jmp
sar
xor
lods
or
sub
push
je
pop
add
cmp
jno
jb
sar
xor
xchg
test
mov
stos
cmc
xor
dec
lds
(bad)
(bad)
ficom
mov
fist
mov
cdq
mov
mov
ret
add
ret
and
cmp
xor
(bad)
rcr
mov
(bad)
fidiv
data16
or
cli
(bad)
call
sbb
inc
mov
gs
jge
inc
arpl
mov
iret
inc
jnp
es
pop
mov
xchg
sub
add
idiv
push
xchg
imul
dec
jg
pop
add
mov
inc
push
fisub
mov
xchg
repz
add
(bad)
cmp
sahf
mov
je
inc
cli
inc
bnd
pop
(bad)
(bad)
mov
and
std
xchg
jmp
jg
ror
fcos
(bad)
(bad)
(bad)
cmp
cmp
pop
push
jae
sbb
mov
ret
sub
pushf
aad
cld
(bad)
(bad)
jmp
mov
inc
dec
prefetch
or
(bad)
dec
movs
xor
ins
push
mov
repnz
and
iret
cli
cmp
push
and
inc
mov
inc
movs
test
call
jmp
icebp
push
jo
dec
mov
data16
cld
xchg
cdq
cmc
fistp
addr16
pop
jb
je
int3
cmp
push
cmps
pop
mov
leave
daa
cmp
dec
shl
and
aas
ss
into
leave
int
mov
retf
int3
xchg
mov
in
int
(bad)
jg
push
or
inc
mov
push
mov
push
jmp
int3
jmp
jmp
pop
and
out
mov
out
std
mov
mov
(bad)
push
sahf
aam
jbe
fcom
mov
mov
dec
xchg
hlt
aas
inc
xchg
mov
(bad)
(bad)
dec
sub
xchg
push
or
daa
adc
xor
xchg
ret
(bad)
(bad)
(bad)
(bad)
stc
mov
mov
repnz
mov
out
das
daa
and
jecxz
rol
push
push
pop
cwde
(bad)
fucomi
jmp
pop
shl
es
fs
gs
sub
xchg
xor
clc
sbb
push
test
xor
push
in
push
out
push
hlt
mov
and
fstp
aaa
ins
in
pop
cdq
das
jae
jbe
cs
fcomip
cmp
popf
mov
mov
les
enter
or
std
(bad)
inc
jp
xor
mov
mov
ds
xor
ret
inc
pop
hlt
pop
mov
inc
fs
adc
mov
xchg
call
(bad)
(bad)
push
in
add
cmc
mov
sub
in
jmp
sar
mov
(bad)
(bad)
(bad)
dec
dec
popa
mov
add
jmp
aaa
mov
inc
fidivr
ja
retf
mov
dec
(bad)
(bad)
jg
in
rcr
bound
mov
ins
ds
js
fst
enter
bound
call
clc
lea
mov
ficom
cmp
popf
(bad)
(bad)
inc
or
inc
sbb
and
add
das
(bad)
shr
retf
outs
sub
sub
movs
inc
cld
push
sbb
aaa
xor
push
shl
(bad)
(bad)
call
xchg
xor
push
not
mov
fisub
movs
sbb
push
xor
mov
stos
test
pop
(bad)
jmp
lea
leave
or
mov
mov
cmp
shl
dec
mov
pop
push
stos
sbb
inc
add
xchg
inc
nop
add
adc
idiv
retf
aaa
sub
and
and
nop
sbb
and
jg
dec
adc
xor
inc
js
lds
mov
das
outs
clc
call
jbe
pop
inc
jg
lods
fadd
jg
ins
scas
shl
(bad)
cli
scas
movs
(bad)
push
fld
inc
sti
repnz
in
stos
jmp
call
scas
dec
fist
mov
in
pop
cli
add
jg
xor
scas
add
(bad)
call
ror
jl
and
out
xor
jecxz
adc
xchg
scas
inc
lds
mov
ret
push
cmp
jmp
icebp
dec
ret
xchg
sub
daa
dec
xchg
fimul
push
out
loop
aad
or
stos
fs
sti
sub
outs
(bad)
(bad)
(bad)
mov
cli
retf
and
popa
js
jecxz
cmp
mov
mov
in
lahf
(bad)
(bad)
(bad)
call
xchg
mov
imul
icebp
in
mov
xchg
das
sbb
cmp
jnp
mov
xchg
push
jmp
jbe
enter
retfw
dec
data16
pop
imul
les
cdq
sahf
mov
(bad)
(bad)
push
jl
mov
push
repnz
sbb
call
cmp
leave
pop
(bad)
(bad)
(bad)
out
bound
jle
sbb
leave
sub
push
xor
inc
cmp
(bad)
(bad)
jl
dec
or
mov
sbb
sub
cmp
xchg
(bad)
(bad)
(bad)
inc
jne
and
test
mov
test
mov
xor
call
rcl
sbb
lahf
push
stos
add
cmps
clc
cmp
cmps
pop
xchg
add
push
scas
jo
sub
sbb
(bad)
(bad)
jg
inc
aas
invd
lahf
pushf
popa
cli
lods
outs
cdq
and
cmps
lahf
mov
in
in
aas
jnp
cmp
test
lock
(bad)
jmp
mov
add
xor
or
(bad)
(bad)
jmp
div
ins
out
ffreep
int
scas
cld
int
int
das
push
in
pop
inc
data16
sahf
pop
outs
(bad)
(bad)
dec
das
mov
cdq
je
jmp
push
(bad)
fbstp
loop
shr
add
(bad)
(bad)
(bad)
push
mov
xchg
iret
loopne
ret
clc
arpl
adc
sbb
(bad)
xchg
mov
loop
jns
jnp
not
jno
dec
mov
mov
push
(bad)
(bad)
(bad)
jmp
int3
inc
repz
out
and
sahf
jnp
fmul
push
pushf
ins
mov
inc
fidiv
fcomip
cmps
jmp
ins
std
mov
lds
rcl
dec
xchg
push
iret
pop
(bad)
(bad)
(bad)
call
and
jne
idiv
stos
aad
(bad)
lea
mov
out
div
fist
push
sti
and
stos
push
outs
mov
movs
xchg
cwde
ret
arpl
pop
push
jmp
mov
(bad)
(bad)
(bad)
mov
jbe
mov
retf
(bad)
and
shl
das
aaa
and
sub
ret
cdq
(bad)
jmp
inc
sbb
xchg
or
cmp
icebp
(bad)
jmp
stos
call
xor
jns
dec
sbb
sbb
popa
and
mov
inc
pop
out
mov
lods
rol
dec
or
test
and
xchg
(bad)
ret
(bad)
jmp
repnz
mov
sbb
jge
not
jp
mov
dec
data16
sti
sbb
lods
icebp
pop
push
sbb
test
pushf
xchg
(bad)
test
movs
pop
mov
jmp
jo
nop
xchg
or
jp
retf
loop
dec
adc
mov
(bad)
jmp
jno
mov
arpl
idiv
test
(bad)
cmp
imul
ins
push
stos
xchg
add
add
scas
clc
std
(bad)
call
dec
mov
imul
jecxz
sub
lea
mov
std
mov
push
dec
mov
test
in
cdq
movs
add
and
in
(bad)
jmp
pop
mov
into
adc
jbe
push
pop
shl
inc
das
(bad)
(bad)
(bad)
jmp
call
repnz
or
xor
cmp
call
jge
ins
(bad)
mov
push
sar
xor
movs
ficomp
mov
stos
pop
mov
cmc
pop
jmp
loopne
test
aaa
push
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
sahf
dec
mov
sahf
jp
aaa
mov
fdivp
pop
cmp
push
pop
jnp
(bad)
(bad)
jmp
mov
cmp
adc
pop
xor
(bad)
outs
cwde
cmp
jmp
sbb
in
jae
test
cli
fs
push
add
mov
add
(bad)
jmp
push
movs
pop
fucomi
hlt
dec
jbe
outs
jg
lods
mov
lods
test
xchg
dec
push
jne
icebp
(bad)
(bad)
fcom
cmp
and
add
xor
jb
xor
inc
adc
(bad)
(bad)
(bad)
jmp
fist
push
mov
sub
aas
xchg
mov
rol
call
test
cmp
rol
or
(bad)
(bad)
(bad)
fdivp
fcom
popa
ins
dec
daa
inc
cmp
ret
xchg
ficomp
mov
cld
inc
pusha
xor
imul
scas
xor
push
add
rcl
in
mov
push
mov
xchg
xor
push
xchg
dec
push
shl
lods
and
push
inc
int
cli
das
sar
inc
xchg
sub
ret
out
mov
fnstsw
mov
add
xchg
ins
fwait
dec
fidivr
mov
fs
(bad)
fwait
loopne
(bad)
(bad)
jp
lods
mov
mov
sub
jae
or
movs
movs
mov
sbb
(bad)
and
(bad)
icebp
mov
repnz
pushf
sub
adc
out
mov
(bad)
(bad)
(bad)
(bad)
fistp
call
mov
xchg
out
cmps
adc
lods
dec
pop
dec
push
sbb
inc
dec
cmc
add
jg
cmp
enterw
add
icebp
(bad)
(bad)
mov
sbb
inc
dec
retf
and
dec
or
xchg
dec
mov
pop
aas
das
mov
jmp
rcr
mov
mov
ins
retf
ss
pop
(bad)
fistp
dec
dec
xor
xchg
xchg
int
dec
mov
and
mov
jmp
jno
jb
(bad)
xor
inc
adc
and
repnz
aam
cld
(bad)
fild
fcmovnb
imul
pop
dec
dec
jl
xlat
inc
std
push
cwde
cmps
shl
xchg
fwait
neg
loop
or
fwait
cmp
mov
std
out
mov
mov
fidivr
xor
push
jno
cmps
movs
nop
ins
loopne
adc
jae
mov
call
(bad)
cmp
push
add
pop
lock
and
adc
jae
in
(bad)
(bad)
(bad)
call
out
pop
adc
repnz
je
jns
out
iret
xor
mov
xchg
cmp
inc
add
push
(bad)
(bad)
(bad)
jmp
adc
pop
mov
cdq
call
jb
ss
mov
(bad)
(bad)
(bad)
jmp
lock
mov
sub
cdq
jbe
mov
ins
retf
mov
sub
das
mov
cmp
or
pop
fsin
mov
das
std
gs
mov
lock
(bad)
jl
clc
into
(bad)
push
rcr
jg
out
jg
sbb
out
stos
in
mov
in
mov
lods
arpl
icebp
(bad)
xlat
fstp
cmp
sub
(bad)
(bad)
(bad)
mov
sbb
aas
lea
ror
std
dec
cmp
outs
in
jge
(bad)
and
adc
aas
movs
add
sub
stos
rep
jl
jle
sbb
(bad)
dec
mov
out
cmp
sar
jl
cld
imul
retf
ret
hlt
outs
jg
jmp
movs
mov
mov
mov
sub
and
(bad)
inc
mov
lock
fwait
pop
gs
les
(bad)
scas
inc
aas
fld
in
cmp
outs
push
and
jg
cmp
add
aam
or
or
jne
stos
ret
mov
int3
sub
hlt
cmp
jmp
outs
sar
mov
iret
popa
sub
stc
lea
std
xor
sti
dec
addr16
std
dec
jg
pop
cmp
adc
aas
loop
xchg
cmp
or
and
shl
dec
shl
jb
cmc
(bad)
mov
sub
mov
mov
inc
das
inc
pop
cli
xchg
mov
shl
pop
sti
pop
je
ja
(bad)
jg
out
pop
std
pop
arpl
mov
(bad)
cli
retf
retf
pop
aas
mov
add
sbb
pop
retf
jg
(bad)
sub
lods
or
cmp
cwde
lahf
dec
addr16
scas
out
or
fsubr
add
mov
jg
mov
mov
xchg
std
fbstp
cli
mov
into
fcom
inc
(bad)
std
add
mov
test
nop
dec
outs
icebp
adc
push
sbb
and
sbb
hlt
push
in
(bad)
mov
or
mov
push
push
(bad)
aad
fsub
mov
rcr
pop
retf
cmp
addr16
(bad)
and
clc
pop
inc
xor
add
arpl
jecxz
ins
jg
sub
dec
sbb
sbb
pop
jb
adc
ss
jbe
pop
arpl
lea
cmp
(bad)
mov
xor
push
or
jmp
mov
jg
mov
rdmsr
cmp
lock
(bad)
popa
jae
push
or
sbb
stc
inc
cld
pop
das
aas
repz
sti
ret
mov
or
icebp
add
int
inc
mov
(bad)
outs
call
inc
shl
cmc
data16
dec
out
push
fcomp
xor
(bad)
sbb
shl
inc
lock
pop
aas
jmp
(bad)
inc
outs
repz
inc
xchg
idiv
(bad)
pop
jmp
dec
pop
js
sub
(bad)
xor
dec
(bad)
(bad)
inc
das
cmp
hlt
dec
aas
icebp
jg
mov
sbb
(bad)
aas
mov
fmul
jg
xchg
ds
retf
(bad)
dec
lock
cmp
fimul
push
mov
lock
mov
sti
cmps
scas
hlt
push
out
mov
sub
test
ret
push
sub
loope
dec
sub
dec
pop
jle
pop
les
cli
push
inc
in
ja
or
cmp
mov
xor
jmp
retf
call
dec
pop
sbb
std
ja
retf
(bad)
sbb
aad
not
les
jae
cwde
push
adc
cdq
fidiv
ds
stos
(bad)
jns
or
adc
pop
mov
es
push
mov
mov
aaa
loopne
shl
jge
cli
imul
add
sbb
xchg
stos
hlt
scas
pop
shl
push
sar
scas
aam
jmp
int3
pop
in
jmp
mov
test
sub
mov
jl
dec
add
mov
xchg
cld
(bad)
(bad)
dec
nop
enter
loope
aaa
pop
sbb
dec
push
cmp
inc
xchg
mov
or
dec
mov
xor
sbb
cmp
xchg
jne
shr
(bad)
(bad)
(bad)
call
pop
mov
cmps
sbb
push
mov
test
mov
stc
sub
test
(bad)
(bad)
call
stos
mov
nop
mov
push
sub
ins
stc
mov
sahf
stos
add
xor
(bad)
jnp
pop
mov
(bad)
xor
int
scas
lods
pop
sub
dec
add
int3
xchg
pop
cmps
mov
(bad)
cmp
lods
popf
ficomp
fld
mov
or
retf
(bad)
or
fcmovb
(bad)
jmp
sub
stos
and
sbb
xchg
jp
push
or
dec
adc
mov
xchg
xchg
push
in
inc
dec
push
in
and
sahf
and
adc
mov
xor
pop
push
out
add
sbb
test
ret
mov
inc
lds
lods
das
clc
(bad)
jmp
sub
dec
inc
xor
mov
mov
rcr
push
xchg
mov
cmp
sub
mov
xchg
(bad)
sub
push
dec
shl
lds
xchg
test
call
push
add
movs
lea
jmp
(bad)
(bad)
jg
lahf
jg
sbb
jmp
cmc
jl
shl
push
or
push
inc
adc
test
cli
mov
dec
sbb
xchg
dec
test
inc
das
jne
add
cmp
cmp
mov
aam
pop
(bad)
(bad)
(bad)
dec
and
enter
or
test
test
shl
xchg
xchg
repz
pushf
nop
inc
push
ins
(bad)
(bad)
(bad)
push
(bad)
xor
outs
xor
and
xlat
push
and
jns
jbe
gs
dec
pop
push
mov
(bad)
(bad)
(bad)
jmp
aaa
xor
shr
adc
fbstp
add
dec
push
rcl
popf
and
(bad)
inc
retf
stc
mov
fld
sub
mov
(bad)
call
lahf
repz
xchg
into
add
xchg
push
int3
fadd
inc
jae
mov
add
xchg
loop
xchg
push
in
call
add
retf
inc
cmp
push
(bad)
(bad)
(bad)
(bad)
inc
inc
popa
shl
pusha
jae
addr16
jb
push
mov
(bad)
or
mov
(bad)
(bad)
(bad)
dec
lds
pusha
add
push
jp
mov
ret
dec
inc
lods
xchg
add
pusha
retf
jmp
shl
idiv
stos
lock
push
cmp
xor
mov
pop
or
and
test
fdiv
jbe
dec
rcr
mov
add
hlt
ja
(bad)
jg
xor
test
movs
push
imul
movs
rcl
cld
(bad)
(bad)
fadd
pop
xor
imul
imul
sub
mov
(bad)
(bad)
(bad)
push
sbb
xchg
push
clc
arpl
out
jno
test
mov
pushf
cmc
jmp
mov
(bad)
jmp
popa
repz
sbb
adc
lods
movs
ins
imul
dec
(bad)
fcmove
pop
xor
fild
jp
xchg
movs
je
mov
in
mov
(bad)
(bad)
dec
cld
lock
or
jecxz
cmp
or
sbb
push
push
(bad)
test
ja
inc
(bad)
(bad)
(bad)
jmp
ins
popa
stos
ficomp
aas
or
cli
rcl
sub
ins
pop
cli
cwde
ss
push
xor
xlat
aaa
daa
fsub
repnz
mov
sub
sbb
mov
sub
pop
ins
imul
cwde
cmp
xor
ds
xchg
clc
fcomip
jmp
fs
ds
push
mov
or
pop
and
mov
outs
dec
xor
(bad)
das
arpl
sbb
(bad)
pop
jbe
test
test
push
inc
fs
popf
idiv
dec
fisubr
lds
and
out
push
int3
loop
pop
lock
call
inc
ins
les
pop
jecxz
jmp
loope
ins
xchg
clc
pop
cmp
or
push
nop
ficom
(bad)
mov
loope
sub
jne
repnz
sbb
ja
test
dec
iret
add
or
xchg
lock
sbb
(bad)
(bad)
jmp
cmp
or
mov
cmp
jb
punpckhqdq
pop
xchg
sbb
daa
movs
int3
push
call
sub
cmp
in
idiv
(bad)
(bad)
jmp
retf
push
cmp
dec
leave
xchg
sbb
dec
pop
xchg
ins
nop
inc
add
das
adc
xchg
(bad)
(bad)
(bad)
(bad)
jmp
sti
mov
repnz
push
inc
inc
inc
in
xlat
and
xor
pop
fcom
(bad)
(bad)
(bad)
inc
sti
(bad)
ins
sub
mov
sbb
retf
sbb
fidiv
mov
push
mov
test
pop
pusha
jne
lods
jmp
xchg
mov
mov
std
bound
(bad)
adc
xchg
test
mov
adc
push
arpl
ins
call
dec
pop
div
bound
jmp
dec
frstor
call
gs
xchg
(bad)
(bad)
(bad)
jmp
leave
cs
xchg
adc
xchg
and
fwait
sub
into
int
loop
int
aas
retf
test
pushf
xor
test
(bad)
(bad)
dec
cdq
inc
add
sbb
sub
push
inc
adc
(bad)
add
fwait
addr16
push
sub
jg
jo
push
dec
mov
mov
test
jmp
and
xchg
adc
and
inc
mov
cmps
(bad)
(bad)
call
or
inc
sub
and
aad
mov
inc
adc
(bad)
(bad)
(bad)
std
jne
inc
mov
in
add
inc
push
push
or
fiadd
fisttp
xor
(bad)
(bad)
(bad)
call
pop
push
xchg
fwait
push
pop
cs
add
in
loopne
mov
ret
sbb
push
sbb
(bad)
(bad)
(bad)
jmp
call
int3
mov
or
dec
rol
cmp
sbb
cmps
into
(bad)
fstp
leave
mov
or
ja
retf
fnsetpm(287
(bad)
sbb
mov
(bad)
(bad)
inc
aaa
test
xor
and
mov
xchg
pop
rol
movs
scas
add
xchg
shr
(bad)
cli
(bad)
aas
movs
pop
enter
adc
fst
xor
mov
and
xchg
jno
repz
(bad)
sub
(bad)
call
(bad)
cmp
and
jmp
(bad)
ja
push
sar
inc
sbb
dec
test
dec
mov
cmp
(bad)
loop
pop
ret
jmp
fcomip
(bad)
stc
bound
scas
and
pop
mov
fldenv
pop
int
shl
pop
push
and
adc
push
cmp
(bad)
jbe
inc
push
in
movs
(bad)
fdecstp
inc
(bad)
(bad)
(bad)
call
movs
dec
mov
nop
movs
cmp
cmp
push
jl
daa
repnz
inc
push
shl
(bad)
(bad)
jmp
or
sar
mov
inc
popa
pop
(bad)
ss
dec
aas
int3
sbb
(bad)
jmp
and
(bad)
(bad)
(bad)
fisttp
mov
jnp
xor
adc
or
push
in
(bad)
ror
das
cli
pop
sbb
jmp
fdiv
and
retf
imul
(bad)
mov
mov
repz
xchg
in
add
scas
stc
dec
jl
(bad)
(bad)
dec
leave
popa
fidivr
dec
dec
dec
jbe
adc
adc
fcmove
dec
adc
(bad)
jmp
cs
add
jb
jo
pop
retf
sub
xor
test
das
clc
shl
mov
(bad)
(bad)
fwait
xor
(bad)
xchg
movs
mov
(bad)
(bad)
jg
fs
cld
mov
cli
mov
add
cmp
loope
loope
popf
and
lods
mov
or
dec
sub
jg
mov
adc
cmp
pop
shl
out
or
fs
mov
dec
aad
(bad)
jg
dec
repz
dec
neg
rcl
dec
das
add
aad
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jns
jno
sbb
xchg
mov
(bad)
xchg
mov
repz
arpl
mov
sub
lock
(bad)
(bad)
fucomp
mov
add
and
adc
xchg
mov
mov
ficomp
nop
mov
es
pop
(bad)
mov
sbb
ret
mov
push
addr16
test
jns
sub
aad
and
(bad)
push
scas
mov
ficom
pop
pop
loope
mov
or
(bad)
fild
out
add
xlat
pop
or
jle
mov
push
mov
leave
mov
xor
movs
(bad)
in
(bad)
(bad)
(bad)
cmp
dec
pushf
fwait
mov
jb
out
pop
xlat
popa
add
and
adc
(bad)
sbb
and
(bad)
jg
call
fcom
arpl
mov
cwde
cdq
sbb
sub
adc
or
(bad)
dec
mov
sar
jp
push
out
mov
ins
and
idiv
(bad)
(bad)
push
(bad)
scas
shl
or
mov
nop
mov
push
sub
add
arpl
fwait
mov
push
pop
or
jl
les
dec
xchg
mov
xchg
(bad)
jns
jae
xlat
dec
sbb
or
mov
xchg
aad
pop
jb
(bad)
jmp
lds
repz
sub
sub
cmps
push
movs
data16
pop
xchg
mov
(bad)
mov
outs
push
ins
sti
dec
int3
test
push
data16
sub
data16
cdq
dec
(bad)
mov
and
push
daa
push
jmp
mov
adc
fcomp
(bad)
(bad)
(bad)
jmp
fnstsw
xor
(bad)
pop
push
(bad)
xor
dec
mov
push
icebp
das
clc
(bad)
(bad)
mov
pop
das
fild
sahf
sub
loop
inc
aas
jbe
xchg
das
inc
xchg
(bad)
push
(bad)
(bad)
(bad)
dec
push
(bad)
mov
sbb
and
xchg
mul
adc
cld
stos
sub
daa
mov
neg
dec
mov
dec
popf
mov
mov
ss
das
dec
cli
pop
xchg
es
pop
daa
mov
ja
frstor
(bad)
jg
pop
xor
sbb
lock
mul
or
cs
mov
test
jns
xchg
loop
pop
xchg
mov
iret
mov
push
arpl
dec
mov
add
xor
bound
ins
push
jne
jae
adc
(bad)
fcomip
push
fwait
loop
inc
sbb
jb
(bad)
adc
jle
xor
sub
sub
(bad)
(bad)
(bad)
fucom
sub
retf
push
and
push
or
jno
push
jmp
ins
jbe
inc
rcl
add
repz
and
(bad)
(bad)
jmp
pop
sub
retf
(bad)
and
in
sub
fs
ss
daa
fidiv
shl
adc
data16
mov
leave
lahf
pusha
adc
mov
push
push
and
(bad)
(bad)
dec
cmc
push
nop
push
mov
(bad)
scas
or
out
bound
adc
cdq
movs
enter
icebp
xchg
mov
inc
loop
inc
pushf
dec
movs
loope
lods
rcl
aad
ss
shl
sbb
movs
jg
fistp
and
sbb
data16
jmp
xor
mov
cld
inc
push
push
ins
mov
fs
or
(bad)
push
inc
into
ficom
test
xchg
xor
dec
and
adc
sbb
ss
repnz
xchg
callw
repnz
pop
xchg
inc
cwde
mov
add
jne
sbb
inc
xor
mov
dec
and
or
jo
xchg
adc
jmp
or
mov
sub
sub
pop
retf
imul
movs
add
lods
sti
mov
out
(bad)
mov
and
fcomp
in
fxam
pop
sub
mov
dec
les
fdivrp
(bad)
(bad)
dec
nop
xchg
fistp
or
sbb
adc
loope
(bad)
push
lahf
dec
fnstsw
call
(bad)
(bad)
call
push
jns
jmp
ja
vhaddps
not
nop
mov
call
add
jge
add
dec
mov
cli
push
xchg
cmp
lahf
(bad)
(bad)
(bad)
mov
dec
mov
int3
movs
dec
push
pop
mov
mov
sahf
rcr
aad
dec
dec
dec
and
int
and
gs
hlt
xor
jg
movs
and
imul
sub
xor
sahf
stc
mov
bound
or
mov
in
xlat
jl
sbb
xor
cmp
(bad)
(bad)
inc
jmp
dec
psrad
adc
pop
jae
in
dec
push
push
or
sti
das
jp
jmp
(bad)
lods
fnsave
hlt
cdq
mov
aam
(bad)
pop
lock
sub
ja
sbb
sar
cmp
sbb
xchg
jmp
nop
push
cli
inc
push
mov
jbe
(bad)
fild
cs
adc
ret
out
movs
sub
mov
jmp
jl
(bad)
pushf
inc
movs
adc
sbb
(bad)
pop
and
xlat
adc
sti
jecxz
inc
rcr
sar
(bad)
call
sbb
jle
sub
mov
ficomp
push
pop
mul
jae
shl
das
sar
dec
into
lock
xor
cli
fcomip
mov
fstp
js
cmps
into
lahf
push
jae
sub
jmp
cmp
mov
add
call
xor
(bad)
dec
aaa
pop
ins
jp
fisttp
aaa
or
mov
leave
mov
in
(bad)
fcomip
cmp
call
cld
push
and
fst
mov
hlt
mov
(bad)
push
cld
jbe
fnstenv
retf
and
mov
sbb
mov
ins
pusha
outs
ss
add
(bad)
push
popa
imul
int
outs
jne
sbb
test
mov
(bad)
push
outs
imul
call
call
adc
push
retf
(bad)
(bad)
jmp
mov
push
xchg
shl
into
xchg
call
pop
popf
adc
sub
lods
movs
xchg
mov
(bad)
fld
mov
lods
mov
inc
aam
mov
cld
jno
ss
mov
(bad)
jmp
fnsave
fist
sub
into
inc
les
dec
and
sbb
inc
ret
cli
stos
or
push
inc
loop
(bad)
(bad)
mov
jb
sahf
ret
inc
push
ins
xor
adc
(bad)
inc
mov
pushf
pop
push
into
cmps
bound
movs
lea
mov
sahf
(bad)
(bad)
(bad)
fcmovnu
pop
fimul
test
in
mov
xor
je
xchg
es
mov
or
ret
(bad)
cmp
mov
jno
outs
jb
ficom
ins
xchg
shr
dec
dec
in
mov
outs
mov
inc
push
and
ror
cmp
ret
inc
cwde
movs
sub
inc
push
or
xor
mov
bound
(bad)
(bad)
inc
(bad)
mov
or
add
sub
popa
pop
xchg
inc
push
(bad)
(bad)
(bad)
(bad)
fcom
or
sub
dec
movs
out
jnp
dec
push
push
retf
xchg
inc
xor
sub
pop
push
cmps
jmp
mov
xlat
outs
cwde
cdq
mov
mov
inc
xchg
add
(bad)
(bad)
(bad)
jg
adc
retf
inc
inc
aas
pop
mov
mov
outs
lods
cmp
mov
ficomp
inc
push
(bad)
mov
stos
sahf
mov
jmp
cli
inc
mov
bound
and
out
xor
sub
sbb
pop
push
ret
rcl
cwde
jae
(bad)
call
jmp
inc
or
cld
sbb
iret
int
outs
outs
loope
(bad)
div
(bad)
(bad)
jmp
sbb
mov
scas
jns
fnsave
adc
ret
mov
jnp
mov
xchg
test
push
xchg
call
fcom
dec
movs
gs
mov
xchg
push
(bad)
(bad)
jmp
movs
leave
adc
ror
adc
mov
fdiv
xchg
push
cmps
mov
xchg
push
sbb
ins
stos
(bad)
jmp
push
push
add
les
push
nop
sub
cld
(bad)
jmp
outs
cs
in
cmp
popa
xchg
mov
jno
clc
pop
or
sbb
aad
push
and
outs
xor
inc
(bad)
(bad)
(bad)
call
sbb
retf
fwait
push
xor
imul
and
push
mov
stc
xor
mov
sar
pusha
(bad)
fs
lods
call
add
aas
(bad)
arpl
(bad)
push
cld
stos
and
cmp
mov
(bad)
stos
call
mov
fsubr
fstp
bound
add
call
(bad)
pushf
pop
mov
or
loop
inc
dec
mov
push
das
sar
call
sbb
les
pop
adc
jmp
(bad)
dec
pop
popf
out
fcmovnb
or
inc
push
cmp
out
div
test
shr
mov
(bad)
(bad)
(bad)
daa
pop
and
enter
scas
test
xor
es
or
adc
(bad)
mov
cmps
int
ins
sub
lds
pop
out
cli
das
adc
xchg
fs
out
jp
adc
nop
rcl
(bad)
(bad)
(bad)
dec
mov
int3
arpl
add
and
daa
xchg
mov
aaa
(bad)
cmc
out
cld
(bad)
(bad)
call
pop
adc
push
and
sbb
mov
into
dec
cmp
dec
mov
das
clc
scas
ja
cmp
ficomp
movs
push
sbb
lods
call
adc
push
mov
sahf
js
sbb
(bad)
(bad)
bound
mov
dec
mov
mov
enter
push
into
mov
push
dec
(bad)
(bad)
(bad)
push
fwait
push
js
fsubr
sbb
mov
in
xchg
and
icebp
(bad)
sub
movs
clc
(bad)
(bad)
(bad)
dec
fidivr
ss
pop
sbb
arpl
dec
pop
xchg
ins
jmp
fdivp
mov
call
(bad)
dec
mov
sar
sub
mov
jge
sub
movs
mov
or
mov
mov
(bad)
push
jl
bound
xchg
push
je
dec
movs
enter
xchg
dec
jmp
rol
xchg
cmps
dec
xlat
mov
movs
lock
ficomp
mov
xchg
mov
jg
and
inc
fst
push
gs
in
add
(bad)
(bad)
jg
sub
mov
mov
inc
add
ins
movs
add
add
push
mov
test
xchg
movs
(bad)
(bad)
(bad)
jmp
mov
mov
xchg
sbb
mov
test
xchg
add
push
mov
push
xchg
inc
mov
jg
inc
and
add
jbe
dec
or
cli
out
mov
adc
inc
or
mov
mov
(bad)
jns
jg
jne
retf
jmp
add
data16
test
cmp
dec
sahf
jl
mov
fwait
inc
aas
xchg
push
stc
jnp
(bad)
(bad)
inc
cmp
cwde
shr
add
adc
jl
outs
je
(bad)
lea
stc
add
ret
inc
push
js
add
scas
inc
mov
or
jmp
cmp
not
(bad)
(bad)
(bad)
dec
push
mov
xchg
movs
pusha
fwait
popf
fbld
inc
adc
push
inc
mov
hlt
xor
aad
daa
(bad)
(bad)
(bad)
(bad)
in
fsub
(bad)
nop
jg
mov
jg
lds
cld
and
jne
mov
cwde
(bad)
mov
stos
nop
push
sbb
ret
sbb
(bad)
mov
jmp
scas
jl
add
inc
add
cmps
pop
lds
adc
(bad)
(bad)
push
daa
xor
pop
add
dec
enter
icebp
cld
(bad)
data16
add
fwait
daa
imul
sbb
lea
shl
jne
(bad)
nop
inc
inc
rol
sar
(bad)
inc
hlt
xchg
retf
clc
stos
(bad)
xchg
(bad)
mov
xor
test
lods
(bad)
(bad)
jg
mov
xchg
xchg
mov
push
loopne
push
cmp
xchg
cli
push
or
das
cmp
shl
dec
pop
dec
loopne
dec
int3
iret
sbb
and
cmp
es
push
xchg
mov
imul
ins
mov
imul
outs
std
sbb
jb
outs
(bad)
mov
(bad)
mov
xchg
pusha
ficom
in
add
(bad)
push
dec
and
stos
and
lahf
mov
xor
(bad)
(bad)
fist
mov
mov
push
pop
enter
sub
pop
push
outs
mov
(bad)
out
sbb
xchg
imul
sbb
mov
stc
and
dec
call
arpl
and
test
fbstp
popa
push
xchg
iret
cli
sub
jmp
pop
enter
dec
jp
dec
pop
and
push
js
fwait
add
aad
(bad)
(bad)
mov
inc
mov
add
push
stos
cmps
ror
(bad)
addr16
(bad)
(bad)
inc
in
inc
pop
lods
pop
xor
cmp
mov
sbb
pop
mov
ret
bnd
int3
pop
xlat
cs
ret
pop
push
(bad)
call
sub
mov
gs
mov
bound
adc
inc
add
push
fiadd
sar
movs
adc
ss
jbe
mov
(bad)
(bad)
dec
mov
stos
gs
lock
pushf
and
call
test
nop
not
jmp
cdq
dec
(bad)
inc
dec
and
mov
fidiv
lods
stos
push
mov
leave
add
mov
dec
lea
sub
js
sbb
enter
ret
mov
enter
(bad)
dec
dec
fnsave
xor
mov
scas
pop
retf
cmp
mov
cwde
mov
sbb
mov
push
int3
in
jg
dec
cmp
sub
popf
imul
jp
pop
pop
mov
call
adc
cmp
(bad)
mov
shl
das
add
sub
sbb
int
sbb
adc
gs
(bad)
(bad)
jmp
stos
mov
les
sub
int3
cmps
jbe
mov
movs
fisub
(bad)
(bad)
inc
dec
int3
in
in
bound
adc
cmp
ror
shl
retf
sbb
jmp
shl
ins
xchg
cli
sub
sub
sub
dec
xor
cmp
(bad)
(bad)
(bad)
(bad)
ficom
and
fistp
fisubr
or
and
cmp
loop
das
(bad)
call
loop
jle
adc
popa
clc
mov
push
shl
outs
and
and
push
inc
dec
mov
loop
push
aad
xor
sub
mov
(bad)
(bad)
(bad)
mov
ss
shl
pop
sahf
fcom
xlat
ss
hlt
mov
in
mov
(bad)
(bad)
jmp
mov
jmp
xchg
(bad)
lock
cmp
cmp
xlat
mov
dec
fwait
cmp
les
xchg
imul
mov
ds
in
lahf
inc
mov
les
add
lods
(bad)
sbb
mov
call
ja
in
and
fld
cmp
pop
dec
(bad)
push
jp
mov
push
clc
mov
push
pop
stos
adc
leave
test
leave
push
cld
push
std
jbe
sar
dec
jle
test
dec
sahf
xchg
dec
or
lods
xchg
cmp
jmp
and
lods
jb
retf
mov
pop
gs
sub
out
ins
push
(bad)
(bad)
(bad)
dec
stos
pop
out
mov
cmp
sbb
outs
out
les
mov
fdecstp
mov
xchg
popf
cdq
dec
(bad)
(bad)
push
ins
ror
add
call
dec
cwde
adc
ret
mov
pushf
mov
or
jbe
dec
push
loope
mov
ret
aaa
add
clc
test
mov
pop
pop
cmp
aaa
add
into
es
pop
call
dec
xchg
mov
scas
mov
fdivr
(bad)
(bad)
call
imul
cmc
and
pop
mov
adc
sbb
addr16
popa
fstp
test
jge
lea
add
(bad)
(bad)
dec
ret
cmps
pop
cdq
inc
out
mov
add
int
adc
out
mov
sbb
cld
jecxz
jp
(bad)
(bad)
(bad)
call
sti
nop
ret
mov
in
mov
js
jmp
add
xchg
mov
dec
cmp
push
test
xchg
xor
mov
push
pop
ret
ds
stc
adc
retf
bound
(bad)
call
test
pop
lods
fs
cs
adc
(bad)
aaa
fld
cmps
rcr
repnz
ss
mov
movs
(bad)
(bad)
(bad)
cmp
pop
or
je
mov
(bad)
out
pop
push
cmc
leave
pop
lds
shl
(bad)
(bad)
inc
ds
shl
jmp
loopne
stc
in
pop
bound
dec
cmp
repz
(bad)
(bad)
push
add
sti
pop
aaa
jae
idiv
cs
mov
clc
leave
cmp
aas
dec
dec
mov
cli
fwait
call
mov
aad
out
xlat
cmc
cdq
(bad)
mov
outs
ins
and
jg
int3
ficom
or
mov
sub
(bad)
jmp
xchg
xor
(bad)
ss
cld
gs
pop
jbe
xchg
ret
nop
jecxz
aaa
cmc
shl
out
fwait
cmps
dec
(bad)
(bad)
call
loope
adc
pop
fidiv
icebp
shl
cld
xchg
call
pop
inc
push
(bad)
fcomip
call
mov
sbb
inc
je
ss
int3
mov
ss
repz
mov
(bad)
(bad)
jmp
push
add
dec
adc
gs
fidiv
fcomp
ds
leave
dec
fild
pushf
jle
dec
int
daa
imul
ret
fsub
dec
add
jecxz
sub
test
bound
cmp
mov
inc
lea
and
mov
pop
in
mov
nop
xchg
xor
(bad)
(bad)
push
fst
or
js
push
xchg
push
jne
sub
stos
xor
fdivr
pop
lods
or
push
adc
pop
addr16
pop
icebp
(bad)
call
xchg
dec
add
lds
lods
push
(bad)
sar
sub
aas
(bad)
jp
jae
(bad)
(bad)
(bad)
dec
mov
(bad)
pop
out
ror
rol
test
mov
(bad)
(bad)
(bad)
ds
push
sub
jns
dec
mov
xor
mov
fdivr
cmp
mov
mov
(bad)
(bad)
call
aad
(bad)
fwait
xor
loope
and
fs
cmc
xchg
ja
pop
pop
dec
bound
xchg
hlt
fdiv
fist
outs
test
clc
(bad)
(bad)
inc
mov
pop
jp
ja
adc
cmp
mov
adc
adc
call
xchg
jle
test
out
push
stos
mov
cmp
bound
and
or
stos
add
out
add
dec
push
(bad)
(bad)
lods
stos
ins
dec
xchg
ja
pop
fs
(bad)
jg
dec
mov
fidivr
adc
movs
rcr
stos
fldcw
jmp
jnp
adc
dec
jge
scas
popa
ins
push
frstor
fld
mov
(bad)
fidivr
pop
cdq
jmp
push
hlt
push
scas
xchg
mov
cmp
popa
sbb
mov
icebp
pop
jecxz
into
loopne
(bad)
inc
and
out
js
pop
sbb
pop
push
stc
jne
(bad)
(bad)
mov
jmp
xchg
daa
repz
loopne
out
pop
outs
add
or
mov
mov
and
scas
(bad)
(bad)
call
cmp
popf
mov
jnp
push
cmps
pop
scas
call
scas
jge
ins
push
(bad)
push
std
movs
iret
dec
inc
inc
sti
int3
pop
push
mov
cmc
ret
loop
push
int
pop
sar
jne
pop
out
pushf
(bad)
(bad)
(bad)
(bad)
sti
add
fwait
hlt
stc
fstp
and
push
mov
stos
and
fwait
dec
mov
pusha
lods
mov
jmp
cmp
es
xor
aaa
inc
lock
les
in
mov
pusha
into
int
pop
inc
or
mov
jmp
stos
sub
retf
sub
mov
mov
cwde
nop
popa
call
(bad)
movs
dec
inc
aaa
mov
push
retf
dec
push
mov
(bad)
(bad)
(bad)
jmp
aad
ins
push
sub
pop
xchg
jl
xchg
jg
xchg
cmps
icebp
data16
jnp
rcr
repnz
std
sahf
lods
(bad)
(bad)
(bad)
call
ins
cdq
xchg
add
sti
aas
(bad)
fsub
bound
mov
shl
dec
pop
retf
(bad)
inc
sbb
adc
fcom
dec
mov
fsubp
mov
loope
int
mov
stos
push
xor
int
dec
dec
enter
bound
sub
ror
jno
(bad)
(bad)
inc
dec
pop
imul
cdq
mov
adc
sti
cmp
pushf
mov
pop
dec
daa
retf
and
inc
push
adc
repnz
xchg
fstp
jno
xchg
mov
enter
fisttp
sub
mov
mov
and
movs
inc
dec
inc
stos
(bad)
(bad)
dec
clc
pushf
and
sbb
enter
push
jl
int
inc
(bad)
xor
(bad)
jmp
lock
xchg
jb
xor
or
mov
dec
mov
idiv
(bad)
dec
mov
daa
ja
data16
pop
fdecstp
push
dec
cdq
push
add
push
(bad)
(bad)
push
ror
inc
aam
dec
or
outs
push
cli
ins
in
call
push
inc
jo
(bad)
imul
mov
inc
mov
or
cmc
test
(bad)
(bad)
(bad)
(bad)
dec
repnz
bswap
pop
jae
cwde
xchg
ret
ret
neg
das
add
cdq
frstor
jp
repnz
push
cld
call
push
sub
fcmovnb
outs
aaa
outs
xor
test
stc
adc
pop
es
(bad)
(bad)
(bad)
(bad)
fldenv
lahf
cmps
pop
or
dec
ds
retf
rcr
xor
push
inc
lods
jno
dec
(bad)
(bad)
jmp
add
pop
jl
into
xchg
mov
jg
int
nop
add
aam
jmp
(bad)
(bad)
(bad)
(bad)
std
outs
call
retf
xor
popa
stos
cmovae
stc
mov
mov
push
call
sbb
stc
mov
push
ret
adc
imul
mov
(bad)
sub
xchg
ud0
(bad)
call
pop
gs
adc
loopne
mov
ja
cmp
inc
cmp
jle
inc
shr
clc
stos
pop
sar
(bad)
(bad)
(bad)
cld
push
outs
adc
sub
test
sub
mov
(bad)
cdq
popf
push
(bad)
dec
(bad)
int3
cs
mov
and
scas
pop
sub
(bad)
(bad)
jmp
stos
popa
inc
dec
in
gs
lods
inc
inc
adc
mov
retf
loop
call
jle
stos
retf
fs
push
adc
xlat
sub
pop
out
ins
idiv
(bad)
(bad)
(bad)
inc
pop
outs
in
cmp
in
test
xchg
pop
stc
dec
call
or
push
mov
inc
outs
call
adc
mov
(bad)
(bad)
dec
dec
inc
mov
(bad)
(bad)
mov
iret
dec
retf
pop
rcl
sub
test
or
loopne
je
add
cmp
sbb
cmp
bound
xchg
lea
inc
retf
xor
ds
dec
xor
jb
xor
pop
sub
inc
and
aam
daa
test
dec
(bad)
adc
mov
stos
xchg
cmps
repnz
jbe
fs
cmps
dec
gs
popf
sub
sub
jmp
mov
stos
scas
mov
js
pop
scas
xchg
cmp
outs
(bad)
(bad)
(bad)
call
xchg
dec
ficomp
jp
jge
in
dec
rdtsc
mov
repnz
mov
call
inc
leave
fiadd
fiadd
and
gs
mov
loop
mov
loopne
stc
adc
sbb
mov
addr16
and
adc
mov
(bad)
mul
cmp
inc
cwde
ds
outs
pushf
int
inc
rol
xchg
test
(bad)
jmp
bound
pop
js
mov
retf
inc
test
push
pop
and
xor
shl
clc
call
(bad)
nop
and
inc
dec
mov
xor
mov
lds
shl
mov
xor
adc
xchg
mov
xchg
mov
scas
(bad)
dec
and
xor
pop
daa
(bad)
retf
mov
out
xchg
imul
jmp
clc
sub
inc
les
push
sub
or
fadd
retf
jge
(bad)
(bad)
jmp
icebp
adc
push
mov
nop
mov
push
dec
dec
(bad)
jg
push
dec
addr16
mov
movs
push
cld
(bad)
jmp
lds
(bad)
mov
xchg
repz
xchg
fmul
or
sti
outs
outs
xchg
or
pop
adc
(bad)
(bad)
(bad)
push
mov
sbb
mov
jge
jg
gs
cwde
jmp
popa
bound
lock
(bad)
dec
icebp
xchg
les
das
pop
popf
loope
nop
out
cmps
test
sbb
icebp
adc
int3
jae
test
hlt
call
inc
lds
mov
xor
jnp
in
push
sub
push
popa
sbb
(bad)
push
add
mov
pop
ret
or
mov
inc
push
pusha
cld
mov
push
div
push
hlt
scas
movs
loope
icebp
or
fwait
movs
and
(bad)
(bad)
jg
push
push
xor
in
jno
push
xor
sahf
mov
mov
rol
icebp
fcomip
push
bound
mov
bound
scas
je
and
mov
addr16
xchg
push
test
in
repz
stos
jne
ds
dec
xor
push
test
xlat
and
dec
jmp
(bad)
jmp
dec
mov
push
dec
push
es
push
xchg
inc
mov
adc
shr
stc
imul
mov
dec
out
je
mov
jg
lods
mov
rcr
add
lahf
pop
push
xchg
adc
jmp
jno
mov
icebp
(bad)
(bad)
dec
in
mov
outs
jl
fwait
loope
or
fwait
rol
std
cmp
lock
jg
xor
data16
mov
and
(bad)
cs
cmp
dec
cmp
xchg
pop
jmp
fbld
or
push
sub
mov
and
or
mov
mov
mov
fbstp
int
idiv
cli
push
stos
push
ficom
push
cmp
out
add
(bad)
jle
lods
retf
repz
std
push
inc
dec
inc
cdq
cld
popa
mov
jo
imul
(bad)
dec
jb
cmc
iret
test
ss
and
dec
pop
push
addr16
dec
pop
shl
mov
call
lock
mov
push
lds
push
or
shl
dec
cld
(bad)
(bad)
push
cli
xor
xlat
data16
inc
cld
lahf
dec
ret
add
mov
in
in
icebp
call
dec
arpl
ins
mov
shl
inc
cmp
push
aas
clc
dec
cmp
ret
out
mov
fs
addr16
xor
(bad)
(bad)
inc
inc
pushf
neg
daa
or
in
popa
imul
out
mov
mov
mul
xor
and
(bad)
(bad)
(bad)
dec
cld
icebp
bound
les
ret
sub
pop
xor
das
xchg
and
xchg
(bad)
dec
call
mov
ins
popf
cmps
aas
jmp
(bad)
imul
test
(bad)
call
sbb
xor
imul
cmc
test
xchg
sbb
mov
(bad)
lock
(bad)
jns
les
in
lea
mov
mov
pop
xchg
(bad)
(bad)
jmp
sub
ja
dec
test
add
(bad)
mul
in
aad
lods
nop
(bad)
(bad)
mov
add
mov
out
push
mov
inc
jle
(bad)
push
aas
icebp
shl
imul
ficomp
mov
in
push
rep
dec
xchg
sar
in
jmp
mov
sub
int
push
push
or
clc
xlat
(bad)
aas
test
hlt
std
fstp
mov
push
pusha
and
outs
adc
inc
push
jl
mov
sbb
div
jae
add
mov
ja
push
push
push
push
adc
ins
mov
dec
jmp
mov
inc
aad
xchg
mov
and
fs
xlat
dec
add
and
(bad)
(bad)
jg
pop
xlat
std
push
add
ja
mov
jg
adc
adc
std
loope
mov
imul
in
aas
push
les
cmp
aad
inc
(bad)
(bad)
(bad)
inc
test
push
push
nop
shl
cmp
pop
mov
cwde
mov
inc
or
(bad)
jmp
ds
sub
outs
pop
push
jnp
out
mov
mov
add
(bad)
(bad)
jmp
retf
dec
mov
mov
add
(bad)
inc
sbb
cmps
sbb
sbb
icebp
mov
cli
les
jmp
loope
in
ror
out
fs
mov
dec
fwait
cwde
pop
popa
pushw
retf
(bad)
(bad)
(bad)
inc
leave
or
addr16
imul
dec
fld
pusha
add
xor
rcr
xchg
adc
cwde
sub
int
xchg
out
pop
and
inc
lods
shr
xchg
sahf
sbb
dec
add
inc
push
pop
repnz
sub
fmulp
aam
and
iret
data16
pop
(bad)
(bad)
(bad)
(bad)
push
pop
dec
aam
and
sbb
mov
cs
add
adc
xor
pop
lock
and
or
call
mov
dec
in
lods
dec
(bad)
(bad)
(bad)
push
adc
mov
jmp
jmp
int3
mov
add
mov
rol
(bad)
(bad)
jmp
enter
pop
cwde
sbb
lahf
xor
push
test
loope
dec
inc
xchg
xchg
xor
(bad)
(bad)
push
add
fstp
adc
and
and
pusha
xchg
xor
(bad)
(bad)
out
or
ret
xor
mov
outs
mov
(bad)
sbb
(bad)
push
mov
test
and
add
ret
dec
and
(bad)
call
mov
mov
das
push
repz
inc
sub
movs
or
pushf
(bad)
(bad)
(bad)
call
xchg
cmp
sub
scas
xchg
push
xchg
add
popw
jo
das
jno
(bad)
(bad)
push
sub
mov
pop
dec
enter
or
sub
inc
hlt
mov
dec
jp
(bad)
(bad)
inc
in
push
jns
mov
and
mov
lock
xor
mov
in
sti
inc
xchg
(bad)
(bad)
(bad)
jmp
sub
sub
loop
or
stos
inc
jo
ja
mov
(bad)
(bad)
(bad)
mov
adc
call
test
movs
sub
add
cmc
cdq
mov
(bad)
(bad)
fild
mov
movs
cmps
lods
adc
or
xchg
or
(bad)
jg
call
stos
mov
cmc
adc
pushf
rol
mov
push
popa
scas
(bad)
or
mov
lods
adc
test
xlat
mov
mov
xchg
adc
xor
(bad)
ja
xlat
jmp
xor
pop
push
sbb
out
lea
mov
push
push
push
pop
(bad)
(bad)
(bad)
jmp
stos
pop
lods
in
fisttp
and
aaa
test
jle
jmp
jmp
and
adc
lods
or
jno
out
test
and
or
xlat
aam
out
mov
cmps
sbb
(bad)
dec
bound
jae
mov
fimul
dec
or
dec
cmps
repnz
(bad)
(bad)
dec
and
lea
cmp
std
(bad)
std
(bad)
inc
cmc
mov
(bad)
sahf
out
sbb
xlat
iret
push
sbb
shr
cmp
imul
push
(bad)
(bad)
mov
or
in
dec
hlt
pop
sbb
add
imul
mov
rcl
inc
add
(bad)
(bad)
(bad)
inc
or
jbe
es
cmps
xchg
or
das
aaa
push
xor
pop
imul
clc
call
mov
xchg
mov
push
mov
mov
das
ja
(bad)
(bad)
(bad)
jg
mov
push
ret
xchg
popa
out
mov
popf
(bad)
(bad)
shr
mov
div
(bad)
(bad)
jmp
fsub
push
scas
push
shl
cdq
int3
rcr
inc
xchg
test
ror
jnp
adc
in
cli
sub
(bad)
jmp
imul
sub
pop
inc
xor
sti
adc
xor
or
xor
or
sub
mov
mov
sti
mov
sub
int3
jg
fs
in
(bad)
(bad)
push
js
dec
pop
jns
and
push
sub
ss
popa
aam
shr
(bad)
(bad)
(bad)
push
xchg
mov
add
stos
imul
inc
data16
adc
dec
int3
jmp
(bad)
(bad)
cmp
test
mov
sbb
adc
shr
dec
aam
scas
push
and
retf
xor
pushf
call
inc
jo
push
and
int3
dec
cmp
cmp
push
lods
inc
fnstcw
or
(bad)
mov
int3
test
sub
add
sbb
sub
aad
shr
or
and
add
(bad)
(bad)
call
lods
call
addr16
lahf
mov
xchg
mov
or
mov
adc
dec
pusha
cwde
(bad)
(bad)
mov
push
test
push
or
push
and
mov
and
dec
mov
nop
push
(bad)
call
movs
ret
and
cmps
inc
sar
ror
push
cmp
push
call
fstp
inc
es
sub
pop
dec
sti
mov
jmp
movs
aad
(bad)
(bad)
(bad)
jmp
shl
bound
push
xchg
fst
retf
dec
add
adc
mov
xchg
cmc
(bad)
(bad)
(bad)
inc
add
inc
push
mov
lea
cmc
sar
cmp
out
add
xchg
sbb
scas
cmc
call
(bad)
in
rcr
mov
xchg
or
fidivr
xchg
pop
adc
(bad)
(bad)
(bad)
jmp
cmp
fs
pop
add
rol
mov
ror
push
sub
jmp
xor
cld
sbb
hlt
fild
movs
sub
sub
pop
push
(bad)
(bad)
(bad)
call
out
add
and
dec
jns
dec
push
xor
das
scas
je
xor
(bad)
(bad)
inc
in
cmp
repz
adc
pop
loop
mov
rcl
adc
sub
push
or
mov
cld
sbb
pop
pop
and
call
or
ret
jg
mov
fild
inc
outs
dec
ror
add
mov
ret
dec
ror
jnp
fadd
fisttp
add
mov
stos
dec
addr16
add
mov
ja
(bad)
dec
push
cmps
cmp
mov
jecxz
fsubr
push
add
aaa
mov
push
movs
push
jl
and
pop
push
xchg
and
inc
(bad)
call
jae
ftst
mov
jp
in
or
movs
jno
jmp
(bad)
(bad)
dec
icebp
pop
or
fwait
pushf
pop
adc
inc
mov
adc
movs
sar
and
push
pop
ins
or
(bad)
(bad)
jmp
mov
mov
mov
inc
and
dec
das
sub
inc
mov
test
xchg
shr
adc
mov
cmp
dec
add
dec
cwde
adc
(bad)
(bad)
(bad)
(bad)
jmp
cdq
test
dec
dec
or
and
repz
jl
repz
add
sub
add
stos
inc
dec
icebp
out
(bad)
(bad)
(bad)
(bad)
cmp
aam
xchg
loopne
sub
imul
popf
or
cmp
mov
(bad)
jg
cwde
xor
outs
out
mov
jle
mov
sbb
mov
ror
(bad)
(bad)
(bad)
call
std
cmp
or
mov
pop
lock
imul
and
stc
out
mov
inc
and
loope
(bad)
mov
sbb
and
outs
jl
xor
mov
mov
mov
call
popa
or
inc
inc
xchg
mov
fcomip
inc
(bad)
leave
popf
fisubr
sub
movs
test
popf
adc
dec
(bad)
pop
or
(bad)
push
movs
jo
xchg
push
xor
rcl
push
push
ins
pop
mov
adc
mov
mov
jmp
xchg
fmul
(bad)
call
(bad)
sahf
daa
fcomp
bound
adc
int3
sub
xlat
jle
sti
or
cld
mov
cmc
cmp
enter
ret
dec
adc
mov
popa
addr16
call
dec
fdiv
(bad)
push
inc
mov
sbb
or
xlat
les
ds
pop
mov
adc
cwde
mov
pusha
ret
hlt
jmp
(bad)
(bad)
shr
bound
mov
out
out
mov
gs
loop
adc
mov
sar
call
data16
test
lahf
inc
ret
sti
sub
(bad)
call
js
jecxz
inc
enter
ins
cmp
ror
(bad)
(bad)
(bad)
inc
adc
mov
gs
and
ret
jbe
loop
mov
sbb
pusha
(bad)
(bad)
(bad)
push
mov
jecxz
xor
adc
int3
inc
mov
ret
cmp
sbb
and
es
push
adc
add
dec
cld
loop
jne
mov
xchg
pop
inc
push
(bad)
fbld
out
(bad)
jp
shr
push
sbb
(bad)
(bad)
push
push
cmp
or
push
cmc
jnp
mov
in
emms
test
fidivr
outs
ins
pop
lahf
imul
in
xchg
(bad)
(bad)
jmp
adc
mov
test
pop
mov
push
ss
mov
clc
(bad)
(bad)
jmp
(bad)
into
sub
fisttp
pop
shl
aas
push
shl
cmp
fwait
pop
lock
sbb
dec
pop
fcomp
mov
movs
cmp
and
scas
clc
(bad)
in
and
mov
js
xor
mov
cmp
lahf
es
(bad)
jmp
push
jb
mov
pop
out
in
leave
mov
call
jmp
not
or
mov
test
rol
or
push
mov
dec
cmp
mov
stos
mov
movs
sub
imul
test
cmp
adc
cwde
lock
stc
mov
adc
mov
inc
(bad)
fcom
pop
or
and
pusha
(bad)
retf
inc
pushf
jmp
lods
xchg
and
push
gs
into
add
mov
jns
imul
or
fdivr
lea
movs
gs
int3
cs
pop
outs
xor
dec
rcl
push
xor
pop
cmp
(bad)
push
sbb
call
leave
push
cdq
pop
(bad)
out
mov
pop
cdq
push
cmps
(bad)
pop
into
es
xchg
cmp
popf
sub
hlt
(bad)
mov
cwde
sbb
js
lods
mov
imul
xor
inc
(bad)
(bad)
dec
dec
xchg
rcl
fcomp
xor
sub
and
pop
cmc
(bad)
jmp
mov
xlat
or
pop
aad
scas
enter
mov
loope
adc
jmp
inc
and
and
push
lods
inc
inc
and
rcr
mov
inc
mov
shl
dec
cdq
push
(bad)
(bad)
call
es
arpl
fstp
jmp
(bad)
dec
push
cmp
cmps
test
mov
mov
nop
nop
push
(bad)
dec
mov
and
inc
push
shr
add
or
aam
inc
push
or
add
lods
inc
dec
or
inc
adc
or
sub
loope
and
fidivr
sub
enter
mov
(bad)
in
scas
jo
js
xor
and
es
nop
or
(bad)
(bad)
(bad)
cmp
inc
push
popa
push
ret
mov
loop
xor
push
adc
test
test
int3
mov
inc
pop
fimul
loope
pop
outs
loope
mov
dec
xor
jge
(bad)
(bad)
(bad)
call
fst
add
scas
inc
push
pop
sub
jno
jmp
(bad)
sahf
and
adc
repz
test
sar
inc
push
je
dec
mov
mov
xchg
pusha
xchg
mov
mov
dec
lock
sub
(bad)
std
and
sub
and
loopne
retf
fisubr
ins
dec
(bad)
(bad)
(bad)
mov
ins
iret
cdq
imul
(bad)
stos
sub
push
push
sar
adc
test
push
xor
dec
loop
inc
inc
add
(bad)
into
cmp
repz
mov
fistp
ins
push
out
xchg
(bad)
sub
int
jnp
dec
jns
adc
xlat
pop
mov
(bad)
(bad)
mov
or
mov
in
mov
cdq
add
dec
push
aam
(bad)
mov
sub
sbb
sar
in
mov
imul
call
mov
fidiv
iret
fisub
and
mov
xor
(bad)
(bad)
call
lea
sbb
retf
cld
das
sar
rcl
loop
inc
mov
add
or
rol
repz
cmp
scas
mov
shl
test
retf
daa
call
jmp
cmp
stos
jmp
ret
jnp
mov
mov
stos
das
(bad)
lock
xchg
outs
inc
rcr
pop
xchg
mov
aas
xchg
cdq
push
sub
in
mov
cs
push
cmps
cmp
mov
cli
dec
dec
(bad)
push
mov
add
fsubr
add
call
sub
shl
adc
enter
mov
mov
pop
mov
push
xor
inc
(bad)
xor
add
inc
xor
repz
mov
(bad)
enter
xchg
xchg
(bad)
call
call
ins
jae
dec
pop
inc
outs
cdq
call
repnz
sbb
(bad)
(bad)
call
lea
ficom
lds
shl
movs
or
xor
sbb
xchg
adc
(bad)
(bad)
(bad)
inc
xor
cmp
out
fst
cmp
movs
retf
add
popf
es
cmp
(bad)
(bad)
call
adc
dec
fs
fwait
sbb
inc
push
call
ror
ss
les
adc
and
or
(bad)
call
sub
xchg
ins
and
or
jle
dec
mov
outs
lock
es
je
xor
adc
int3
test
rcl
outs
mov
sub
sbb
xchg
or
push
dec
dec
sbb
mov
inc
pop
jo
push
fld
or
and
sub
or
(bad)
(bad)
(bad)
(bad)
fstp
dec
jb
xor
mov
pop
and
xor
dec
mov
and
add
dec
inc
sub
add
xchg
sbb
adc
bound
sbb
or
dec
mov
inc
xchg
stos
pop
in
mov
into
nop
mov
mov
push
mov
fwait
pushf
push
xchg
sbb
or
retf
(bad)
fadd
out
addr16
inc
cmp
es
inc
fcmovu
(bad)
(bad)
push
sub
mov
inc
test
hlt
out
fimul
add
cs
jmp
or
dec
inc
sub
test
mov
push
mov
xor
stos
mov
dec
lock
jmp
sbb
xchg
test
xchg
sub
(bad)
(bad)
jg
mov
add
dec
push
dec
sbb
jb
dec
push
inc
test
push
test
push
lds
shr
mov
inc
sub
(bad)
call
pop
sub
xchg
adc
in
sub
xchg
sar
gs
ins
jp
test
fsubr
sub
dec
mov
push
popf
mov
mov
cmp
mov
push
jmp
mov
retf
xor
scas
adc
cmp
ret
dec
mov
sub
and
push
sub
(bad)
(bad)
jmp
mov
rol
pop
pop
push
ss
in
fnstcw
lods
cwde
lea
(bad)
(bad)
jg
or
sub
bound
daa
inc
test
fmul
jnp
shr
lock
(bad)
jmp
push
adc
sub
lods
jb
(bad)
fnstcw
lods
sub
(bad)
(bad)
call
sub
mov
push
mov
pop
retf
inc
xchg
adc
sub
mov
add
pop
mov
and
mov
imul
rol
icebp
mov
mov
xchg
sbb
mov
mov
dec
xor
hlt
push
and
cmp
xlat
or
inc
xchg
and
fcmove
adc
cwde
rcl
xchg
xchg
inc
ss
jmp
or
adc
(bad)
mov
ret
push
scas
or
sub
sbb
jmp
dec
xchg
xchg
or
mov
or
pop
sub
mov
dec
inc
mov
outs
cli
dec
dec
inc
lea
push
or
dec
stc
ss
pop
xor
(bad)
(bad)
jg
dec
xchg
addr16
xor
xchg
dec
push
test
sub
adc
pop
pop
ja
mov
loope
in
xchg
movs
sub
(bad)
(bad)
(bad)
push
pop
fbstp
test
push
sbb
mov
and
pusha
dec
(bad)
jb
mov
inc
push
pop
push
cmp
addr16
xor
in
fwait
sbb
push
xchg
ss
leave
mov
in
xchg
ins
test
(bad)
(bad)
jmp
adc
sub
mov
mov
test
fwait
inc
rcr
(bad)
sti
sbb
inc
jne
cmp
shl
jl
test
cmps
les
jle
jl
daa
pslld
(bad)
jg
loop
lahf
mov
xor
sti
inc
outs
lock
(bad)
call
rcl
stc
in
rcl
daa
icebp
inc
and
sbb
(bad)
(bad)
call
adc
push
clc
(bad)
outs
jg
mov
ins
ins
(bad)
mov
pop
mov
fistp
fstp
jb
in
pop
out
push
lock
call
pop
inc
inc
loop
add
js
inc
out
jno
mov
jae
jge
or
ds
adc
sub
xchg
mov
pop
xchg
cmps
xor
aam
das
(bad)
dec
js
push
iret
jae
and
sbb
shl
push
or
movs
dec
sbb
(bad)
cmp
jg
(bad)
xchg
push
fnstenv
cdq
add
loop
(bad)
in
(bad)
push
fndisi(8087
popa
adc
fs
mov
push
mov
jae
xchg
mov
fist
sbb
idiv
(bad)
jg
lea
sbb
cmp
xor
mov
and
mov
cmp
and
add
popa
inc
(bad)
sbb
jo
rol
jno
(bad)
lea
and
dec
loop
lea
and
mov
or
mov
shr
pop
adc
test
dec
scas
jp
call
nop
in
push
inc
or
mov
xchg
in
xor
(bad)
(bad)
(bad)
(bad)
mov
aam
movs
sub
xchg
inc
enter
push
and
xchg
adc
or
inc
(bad)
(bad)
(bad)
call
out
or
and
aaa
into
sub
loop
adc
ret
jo
repz
pop
cmp
loope
push
stc
fisttp
sub
cdq
ja
(bad)
(bad)
mov
or
dec
and
mov
dec
sub
adc
inc
fs
(bad)
call
ins
push
movs
into
mov
test
add
and
pop
loopne
or
jne
fcomip
stos
inc
jo
test
xchg
cmp
pop
lock
jo
mov
adc
das
mov
aas
pop
cmp
xchg
cmp
out
cmps
jle
gs
add
jmp
out
mov
aad
adc
sub
movs
test
mov
ret
mov
pop
xchg
sub
sub
gs
jle
xchg
sbb
xchg
repz
loopne
aam
enter
and
and
mov
call
pop
xchg
jp
mov
mov
es
push
push
jle
fisttp
pop
cwde
mov
jno
iret
and
xchg
(bad)
call
std
push
jle
pop
mov
pop
xchg
sub
mov
lds
push
in
mov
stc
mov
cmp
sbb
out
mov
and
(bad)
jmp
int3
inc
or
loopne
mov
retf
mov
jg
or
mov
leave
sub
gs
cdq
and
(bad)
dec
les
(bad)
(bad)
sti
dec
shl
ret
pop
and
(bad)
jg
(bad)
in
sub
pop
cmp
mov
mov
jo
test
adc
movs
cli
mov
(bad)
inc
fist
repz
ins
or
mov
movs
mov
push
inc
enterw
mov
imul
imul
and
pop
cmp
nop
push
push
sbb
sbb
jle
(bad)
rol
mov
jns
pop
mov
(bad)
(bad)
(bad)
jmp
out
and
sahf
sub
jbe
sar
pop
jp
sbb
xor
cmc
repz
outs
xor
fst
add
pop
in
movs
jns
stos
sub
mov
ins
jle
test
fsubr
(bad)
std
xchg
mov
idiv
sbb
mov
fild
xor
jne
frstor
fist
imul
xchg
mov
(bad)
fwait
and
test
(bad)
mov
add
mov
pop
icebp
or
pop
mov
js
jbe
jge
mov
(bad)
dec
popf
arpl
sbb
retf
jmp
xor
rol
retf
pop
jo
leave
into
aaa
adc
(bad)
(bad)
std
js
fisubr
pop
xchg
ds
les
ja
(bad)
lock
ffree
ret
clc
xor
fyl2xp1
fwait
(bad)
(bad)
(bad)
jmp
pop
xor
inc
mov
jae
mov
add
and
mov
jns
loopne
mov
ja
(bad)
(bad)
push
iret
mov
aaa
jae
stos
gs
out
(bad)
jbe
movs
(bad)
add
push
cdq
jg
(bad)
push
rsqrtps
mov
add
xlat
adc
out
(bad)
mov
stos
push
outs
(bad)
(bad)
(bad)
call
inc
xlat
fst
lds
shr
bound
lods
jae
ins
call
inc
in
in
(bad)
(bad)
call
add
jmp
sbb
mul
jp
call
lods
add
or
(bad)
mov
jge
sub
loopne
sub
loop
mov
inc
jae
add
imul
sbb
inc
add
mov
shl
fs
mov
mov
(bad)
(bad)
push
ror
ins
rcl
je
pop
and
add
fnstsw
mov
jbe
mov
shl
addr16
adc
add
call
push
cmc
dec
xchg
and
jg
sbb
or
arpl
in
les
(bad)
clc
arpl
outs
xor
push
inc
xor
rcr
push
mov
(bad)
cmp
mov
push
outs
mov
adc
xchg
cmp
aam
mov
(bad)
(bad)
(bad)
jmp
inc
scas
int
ss
fs
push
outs
or
rcl
mov
stc
xchg
test
mov
mov
push
and
(bad)
fdiv
ja
std
and
ss
mov
jle
es
push
les
in
or
hlt
(bad)
(bad)
mov
add
retf
xchg
es
dec
scas
jp
and
mov
inc
mov
ret
repz
out
xchg
in
or
xor
jg
mov
mov
(bad)
(bad)
(bad)
jg
push
push
xor
and
jb
push
and
mov
in
movs
cmps
test
neg
or
(bad)
(bad)
(bad)
mov
push
inc
in
mov
fiadd
jne
cdq
ds
movs
dec
scas
cli
(bad)
dec
mov
push
out
cmps
mov
std
pop
pop
pop
in
adc
nop
movs
leave
jg
(bad)
call
std
xchg
mov
dec
jge
dec
jo
and
inc
lods
fcom
sub
(bad)
(bad)
(bad)
push
cmp
dec
jecxz
ds
jmp
dec
jo
xchg
jl
mov
(bad)
add
(bad)
(bad)
jmp
jne
aaa
retf
shr
dec
stos
into
bound
(bad)
call
pop
xchg
ja
add
jg
call
clc
xchg
jmp
jbe
cmc
pop
div
shl
ins
fs
(bad)
(bad)
call
test
pop
jmp
jne
cmp
jle
jbe
in
jmp
out
icebp
(bad)
(bad)
call
outs
in
jnp
ss
dec
leave
fwait
es
push
pop
sti
jmp
jg
push
or
adc
mov
ins
mov
icebp
xchg
and
fwait
fwait
jg
pop
cmc
add
outs
sbb
mov
push
jno
(bad)
(bad)
jmp
movs
loope
mov
sbb
cmp
dec
fmul
stos
retf
test
mov
jnp
mov
mov
lds
push
dec
fist
pop
inc
call
fwait
rcr
adc
(bad)
cmps
outs
(bad)
(bad)
jmp
dec
mov
ins
mov
jae
fnstenv
push
enter
mov
fist
call
into
(bad)
dec
(bad)
xor
inc
shl
call
std
je
xchg
cmps
mov
push
jb
rcr
mov
jae
js
(bad)
(bad)
(bad)
cmp
add
jo
push
mov
xchg
les
adc
aad
outs
sbb
(bad)
mov
retf
popa
les
out
scas
dec
push
popa
inc
xor
or
mov
icebp
scas
cli
mov
inc
stos
ins
xor
fcomp
inc
(bad)
(bad)
(bad)
out
xchg
xor
(bad)
mov
mov
cwde
movs
int3
sub
jle
xchg
jmp
cmp
call
mov
sti
or
es
(bad)
aaa
jns
dec
(bad)
fistp
cmp
push
inc
(bad)
mov
shr
dec
dec
or
mov
cmps
mov
mov
mov
jge
popf
mov
add
add
mov
in
mov
dec
or
mov
movs
sbb
call
(bad)
jl
sbb
int
(bad)
sbb
lods
pop
loope
adc
inc
mov
mov
xchg
dec
sub
shl
loop
mov
xchg
cmps
lods
pop
cmp
rcr
pop
mov
dec
sbb
fisubr
das
push
mov
dec
dec
add
cli
jecxz
pop
out
neg
mov
shl
push
jae
out
or
xchg
mov
jmp
test
mov
sub
cmp
sbb
scas
xchg
aas
mov
mov
sub
dec
pop
(bad)
retf
pop
jmp
dec
mov
rol
jl
push
std
mov
xchg
dec
es
mov
lock
cmp
aaa
adc
(bad)
jmp
adc
lock
adc
in
fsubr
loope
imul
test
adc
pop
nop
loope
test
jb
and
scas
add
sub
(bad)
(bad)
(bad)
jmp
cli
dec
popf
(bad)
mul
xchg
cmps
dec
inc
lock
out
pop
and
inc
cmp
enter
(bad)
call
xchg
cmp
jae
xor
lods
es
sub
mov
(bad)
(bad)
(bad)
dec
mov
xchg
hlt
pushf
std
fnstcw
aaa
jbe
jb
ja
jecxz
int3
inc
xchg
sahf
nop
popf
test
pop
outs
(bad)
push
cld
dec
push
data16
in
adc
pop
cmp
aas
mov
cdq
sar
dec
repz
inc
aam
mov
sbb
mul
sub
pop
icebp
vsqrtss
and
mov
stos
retf
(bad)
(bad)
dec
gs
shl
(bad)
dec
pop
cmp
sbb
mov
pop
pop
(bad)
(bad)
dec
test
push
adc
mov
push
and
cmc
fist
inc
mov
call
sub
push
xchg
les
jno
test
sbb
cmps
aas
xor
test
sar
fstp
retf
jns
cmps
push
std
lods
ja
fsubr
xor
lahf
lock
not
mov
push
mov
loop
jg
xchg
jmp
icebp
sbb
loop
cli
(bad)
(bad)
(bad)
inc
jbe
dec
push
pop
rcl
inc
push
aad
mov
inc
cmp
loop
cdq
ret
add
leave
add
mov
imul
(bad)
jmp
vcmppd
push
add
pusha
adc
mov
cmp
xlat
(bad)
out
xchg
jl
pop
test
mov
mov
(bad)
imul
inc
or
inc
mov
xchg
or
outs
push
jg
mov
inc
scas
mov
mul
sub
jmp
scas
fdiv
cmp
mov
shl
(bad)
(bad)
(bad)
call
ror
push
and
add
int3
push
jp
sbb
scas
sub
or
sub
(bad)
das
sbb
sbb
shl
(bad)
xchg
aam
ror
push
jo
ds
cmp
(bad)
jg
or
mov
push
xor
xchg
jo
loopne
cmp
fsub
pop
in
sub
(bad)
(bad)
(bad)
jmp
repnz
xor
pop
xchg
xor
jl
adc
and
push
jmp
or
(bad)
(bad)
call
(bad)
movs
pop
cmp
push
pushf
ds
jg
and
push
dec
and
and
jae
imul
movs
mov
leave
dec
retf
adc
cmp
ins
mov
push
sbb
(bad)
call
std
inc
ins
outs
push
leave
test
push
mov
xor
xor
(bad)
jmp
push
xor
or
es
gs
adc
inc
jno
cmp
sbb
cmp
sbb
stos
xlat
(bad)
mov
push
mov
das
xchg
imul
(bad)
(bad)
jg
call
or
xor
jl
add
dec
mov
sub
add
out
adc
push
pop
bound
jge
push
push
(bad)
aad
jne
imul
mov
xchg
push
inc
push
bound
xor
mov
or
mov
(bad)
call
add
and
push
adc
in
dec
xchg
(bad)
int3
pop
movs
loop
dec
and
xchg
(bad)
(bad)
(bad)
call
mov
add
jp
loope
bound
xchg
mov
lods
sub
add
mov
pop
adc
jmp
push
popa
push
add
cs
pop
arpl
mov
(bad)
scas
xor
out
sahf
jecxz
(bad)
jmp
pop
test
xor
mov
sub
ret
push
jl
dec
xchg
dec
sub
xchg
add
mov
dec
(bad)
(bad)
(bad)
mov
ins
(bad)
stos
jae
pop
sub
add
mov
cmps
into
mov
pop
pusha
stos
cs
sub
(bad)
(bad)
jmp
push
add
jno
pop
shl
in
ss
mov
xchg
push
jne
div
cld
movs
call
sbb
pusha
leave
stc
sti
xor
(bad)
fistp
in
ficomp
add
jne
lds
mov
add
push
or
(bad)
mov
(bad)
sub
push
push
call
std
mov
jle
and
int3
in
adc
dec
mov
inc
pushf
push
dec
xor
jne
jo
and
test
add
jge
std
jl
mov
jl
add
sub
push
cmc
cmp
jb
cmps
aas
(bad)
(bad)
jg
imul
cmp
mov
jmp
mov
pop
adc
add
add
push
mov
pop
popa
mov
inc
retf
(bad)
push
cld
dec
mov
xchg
push
lds
ds
cli
sub
lods
in
xor
ins
(bad)
(bad)
jg
pop
mov
cmp
xchg
aad
mov
jb
jle
icebp
movs
ins
xchg
xor
ror
out
inc
(bad)
(bad)
(bad)
inc
sbb
and
pop
aad
in
and
mov
fiadd
sbb
(bad)
dec
fidivr
repz
sub
jecxz
adc
inc
nop
sbb
cmp
test
or
(bad)
(bad)
(bad)
jmp
push
test
push
bound
(bad)
xor
push
lods
mov
cdq
stos
xor
(bad)
inc
pop
(bad)
inc
jle
add
add
pop
not
mov
and
xchg
(bad)
(bad)
(bad)
dec
jg
popf
dec
inc
(bad)
scas
push
inc
icebp
ins
cmps
cwde
retf
cmps
mov
fs
(bad)
(bad)
(bad)
push
addr16
inc
mul
test
int3
push
pop
mul
retf
pop
mov
mov
enter
sbb
cli
xchg
test
sub
xchg
ret
test
stos
dec
outs
and
into
adc
xor
(bad)
push
aaa
test
xor
rcl
aad
mov
jno
dec
and
sar
(bad)
call
inc
mov
jae
adc
fst
fnsave
icebp
inc
out
sbb
jg
ja
mov
cs
mov
and
jns
inc
mov
jmp
test
jbe
call
clc
shl
mov
cdq
test
iret
push
sbb
(bad)
jmp
push
push
test
pusha
cmp
scas
jg
xchg
das
(bad)
and
mov
(bad)
(bad)
call
cs
aam
(bad)
movs
mov
les
fsubr
dec
inc
xchg
(bad)
dec
clc
(bad)
jg
cld
cli
or
lods
add
ins
jae
test
add
xchg
gs
in
rcl
and
inc
sar
in
(bad)
jmp
xchg
dec
dec
sub
add
fcom
lods
(bad)
lock
imul
adc
xchg
push
mov
xor
or
cs
test
pop
test
pusha
(bad)
(bad)
(bad)
jg
fwait
jo
mov
std
pop
stc
stc
adc
fld
(bad)
xor
add
push
cmc
add
rcr
call
dec
mov
and
push
adc
mov
and
fisub
loopne
xor
rcr
scas
nop
lods
cmp
sub
inc
outs
test
call
repz
jmp
dec
fnsave
cmps
scas
or
mov
xor
std
(bad)
(bad)
call
sub
cmp
out
add
ins
mov
pop
xchg
sub
out
cld
mov
mov
clc
mov
bound
adc
cmc
mov
sbb
add
ja
lock
adc
jmp
cmps
jo
(bad)
fmul
mov
push
sbb
cmp
push
sbb
xor
inc
push
les
mov
out
out
in
(bad)
mov
mov
lock
popa
mov
jns
xor
shl
jmp
adc
mov
mov
xor
stc
sub
(bad)
(bad)
call
mov
jno
inc
xchg
sub
call
inc
repnz
xchg
add
jmp
pop
and
xchg
xchg
pop
jbe
shr
test
aam
xor
jmp
sbb
xor
dec
mov
sub
and
(bad)
call
mov
pop
mov
in
sub
mov
cmp
test
pop
push
movs
sub
test
(bad)
jmp
adc
sbb
loop
push
jg
jmp
pop
jb
scas
inc
push
mov
scas
xchg
in
mov
(bad)
imul
push
add
dec
sbb
les
mov
gs
cmps
repnz
and
(bad)
(bad)
jmp
idiv
outs
sahf
or
dec
mov
arpl
mov
mov
mov
ja
jmp
cmc
lahf
xchg
jge
fimul
push
fmul
dec
(bad)
jg
mov
pop
push
mov
inc
jo
xchg
lods
push
int
mov
pop
jne
call
sbb
loope
jle
test
or
call
dec
add
ins
cld
leave
pop
jmp
mul
and
out
fistp
fbld
lahf
std
jne
std
aam
cmp
(bad)
inc
jecxz
popa
jno
jns
ret
dec
mov
icebp
(bad)
cmp
test
mov
pop
sar
(bad)
jmp
mov
cmp
dec
add
movs
jns
or
movs
sub
add
(bad)
call
imul
movs
fmul
out
(bad)
(bad)
(bad)
inc
nop
or
int3
inc
pop
pushw
ret
mov
lods
sahf
(bad)
call
aas
enter
(bad)
(bad)
fcomip
fild
mov
xlat
jmp
call
loopne
(bad)
dec
lock
pop
repnz
mov
mov
(bad)
rol
test
dec
pop
inc
or
xor
xchg
mov
xchg
(bad)
(bad)
(bad)
fistp
pusha
inc
pop
adc
shl
movs
push
mov
rol
or
adc
lea
mov
push
lods
test
in
ins
xchg
gs
sahf
out
push
int
pop
ja
call
gs
in
jnp
(bad)
in
jp
push
out
(bad)
loopne
(bad)
(bad)
inc
es
and
test
inc
adc
dec
pop
sub
(bad)
(bad)
dec
mov
push
jno
hlt
dec
inc
mov
imul
xchg
xchg
popa
inc
les
scas
dec
cli
(bad)
(bad)
(bad)
in
push
pop
mov
bound
mov
iret
leave
inc
lahf
mov
adc
pop
call
(bad)
mov
lahf
data16
shl
push
(bad)
mov
(bad)
(bad)
dec
mov
stos
jge
aad
inc
jmp
scas
cmps
(bad)
jne
imul
fdiv
(bad)
(bad)
jmp
push
repnz
cld
gs
push
cmp
imul
mov
push
aas
sbb
xor
retf
add
dec
retf
stos
cs
xor
jecxz
rol
mov
adc
js
les
mov
cwde
(bad)
and
inc
repz
into
push
jmp
(bad)
adc
je
mov
stc
push
dec
das
sub
adc
mov
rol
push
mov
push
pop
inc
imul
push
stos
fnstenv
scas
pop
mov
sbb
adc
mov
and
(bad)
dec
sbb
(bad)
lods
sti
jmp
ins
pop
lods
sbb
mov
dec
ss
(bad)
(bad)
(bad)
jp
dec
xchg
cmp
and
data16
sub
je
out
mov
cmp
out
cmp
mov
lock
sbb
ret
pushf
dec
mov
jl
(bad)
(bad)
dec
(bad)
loope
pop
jge
or
repz
mov
cmps
push
add
cli
jmp
pop
leave
adc
iret
(bad)
shl
mov
(bad)
in
inc
call
jle
mov
xchg
and
dec
movs
aam
mov
popa
sbb
(bad)
(bad)
(bad)
(bad)
std
ins
jmp
stos
outs
mov
in
sub
mov
in
xor
(bad)
pusha
fsub
(bad)
jmp
cli
push
leave
push
adc
rol
sub
xchg
sub
push
lahf
dec
(bad)
out
aaa
icebp
outs
or
std
inc
pop
pop
push
ret
pop
(bad)
mov
adc
dec
shl
pop
mov
(bad)
(bad)
call
fidivr
xor
retf
cmps
loopne
or
loop
call
ds
mov
(bad)
(bad)
(bad)
out
out
xchg
ins
or
in
cdq
sub
ins
mov
and
lahf
ins
mov
popf
cmp
test
add
sar
push
jne
outs
popa
je
movs
cdq
mov
fucomi
mov
mov
(bad)
jmp
(bad)
mov
das
gs
scas
ds
fnstenv
cmp
cs
dec
xchg
inc
xchg
and
call
pop
call
push
push
adc
repz
dec
or
scas
sub
pop
inc
mov
ss
lds
pop
loop
sub
xchg
cwde
rol
(bad)
(bad)
(bad)
jmp
icebp
sub
add
adc
aam
rcl
adc
ror
and
retf
(bad)
enter
jmp
(bad)
sti
push
in
movs
dec
mov
popf
lahf
mov
jnp
ret
ins
pushf
mov
xlat
sub
(bad)
(bad)
dec
and
dec
or
aad
pusha
ins
lea
pop
lods
ss
neg
jmp
(bad)
(bad)
jmp
(bad)
ds
ss
sti
pop
ins
adc
push
test
sub
rcl
les
dec
sub
popa
sbb
mov
mov
mov
repnz
(bad)
(bad)
(bad)
dec
popa
sub
mov
stc
lahf
int3
and
cmp
jno
adc
(bad)
jg
jmp
push
aad
pop
mov
int3
adc
fwait
dec
movs
ss
jae
shl
(bad)
(bad)
(bad)
call
(bad)
push
std
cli
lock
xchg
mov
fidiv
xchg
call
shl
pop
(bad)
(bad)
(bad)
jmp
xor
nop
and
mov
or
or
add
call
cmps
mov
leave
data16
pop
mov
push
je
(bad)
(bad)
call
or
outs
out
push
add
sub
es
in
add
dec
jmp
dec
fwait
(bad)
push
sub
xor
push
adc
pop
sbb
aaa
mov
inc
in
and
loop
sbb
pop
mov
mov
aaa
sbb
and
sub
fs
cwde
mov
retf
jge
int3
inc
int
ins
imul
shl
push
rcl
mov
jae
fst
mov
inc
icebp
mov
mov
gs
mov
fwait
(bad)
(bad)
(bad)
(bad)
mov
out
fnstenv
int
dec
rcl
in
xchg
xor
mov
and
xchg
jno
(bad)
(bad)
inc
and
pop
stos
in
loopne
push
mov
(bad)
adc
icebp
add
test
mov
mov
aam
push
ret
mov
fnstsw
cmps
pop
jbe
std
popf
jle
(bad)
jmp
push
dec
jg
in
cmc
out
jb
and
dec
and
add
mov
fst
fild
inc
jne
pop
es
mov
imul
(bad)
jg
inc
push
imul
nop
jne
addr16
xor
mov
(bad)
(bad)
(bad)
jmp
push
lea
repz
pop
jno
xchg
push
mov
xor
(bad)
mov
cmps
mov
jp
inc
mov
add
std
call
xlat
mov
jmp
into
mov
mov
jle
fld1
inc
sti
mov
lods
xor
(bad)
(bad)
(bad)
(bad)
cmp
sub
sub
mov
das
sar
fidiv
mov
stos
mov
ss
push
in
ins
scas
(bad)
(bad)
(bad)
push
jne
movs
dec
lock
movs
fmul
sub
cmps
repnz
lea
mov
jo
clc
mov
xor
mov
scas
cmp
test
xchg
fwait
xchg
mov
(bad)
jmp
xor
xor
sbb
sbb
aaa
scas
(bad)
push
lahf
gs
fs
xchg
xchg
jmp
pop
mov
add
sub
pop
ins
push
(bad)
(bad)
inc
jl
(bad)
aam
int
jge
imul
sbb
aam
(bad)
(bad)
(bad)
inc
inc
das
add
repnz
push
adc
dec
stos
or
xor
fsubr
loope
cmc
(bad)
jmp
sahf
push
sub
leave
fsubr
jbe
adc
xor
mov
jb
(bad)
cmps
mov
(bad)
push
iret
outs
pop
jo
push
mov
add
fistp
sahf
rol
jmp
jle
mov
add
int
xchg
jl
xchg
data16
(bad)
(bad)
call
mov
mov
ins
(bad)
aaa
jp
repz
sub
add
loop
pop
loop
js
and
mov
cmp
ret
or
cld
shl
mov
in
fwait
push
inc
dec
pop
adc
jmp
and
push
xor
movs
and
out
(bad)
(bad)
call
sbb
mov
mov
xchg
outs
popf
sti
and
sub
inc
mov
(bad)
(bad)
(bad)
fxch
in
mov
pop
push
jl
outs
jg
and
out
and
jbe
fist
test
(bad)
(bad)
(bad)
(bad)
mov
push
mov
fs
mov
imul
ret
jp
(bad)
call
sbb
sbb
fisttp
(bad)
xchg
icebp
push
xor
pop
cmc
cld
mov
imul
inc
(bad)
inc
mov
stc
repz
shl
das
dec
jl
lds
out
add
push
adc
mov
out
sbb
js
test
cdq
mov
in
(bad)
(bad)
(bad)
push
cmps
fs
pop
cmps
and
xor
mov
movs
pop
lods
mov
and
dec
adc
mov
xchg
jmp
mov
mov
fistp
ficomp
inc
push
(bad)
(bad)
jmp
push
xchg
pop
addr16
jne
fisub
repnz
jne
and
or
sbb
jg
mov
fnstenv
xchg
add
(bad)
(bad)
jmp
jle
dec
add
fisttp
cmc
ja
clc
test
out
test
xor
xor
xlat
loopne
cmp
je
push
sub
sub
rcl
jns
mov
xchg
jg
aaa
cld
pushf
jns
ret
aam
in
ins
(bad)
fsub
mov
push
popa
mov
push
mov
sbb
mov
(bad)
push
push
out
data16
sahf
mov
push
mov
jge
pop
cmp
adc
xchg
test
cmp
outs
push
call
fcomp
(bad)
fnstsw
aaa
ja
pop
fwait
jbe
jb
mov
call
sub
(bad)
mov
ins
adc
pop
push
aam
shl
sub
push
mov
jg
sbb
jmp
jae
mov
or
icebp
inc
loopne
(bad)
(bad)
jmp
xchg
pop
pop
cdq
aaa
in
repz
fbstp
ja
xchg
mov
jns
int
adc
rcl
xchg
jmp
xor
das
rdtsc
jl
mov
sti
push
fldcw
sbb
lods
test
fwait
mov
mov
(bad)
(bad)
inc
test
daa
shl
cs
es
call
popa
sbb
jmp
adc
pop
(bad)
jb
punpckhbw
fild
fisubr
iret
(bad)
(bad)
call
inc
fisub
xlat
ss
xlat
ds
shr
mov
push
(bad)
jg
call
or
das
cmp
cmps
adc
mov
(bad)
sub
mov
test
and
pop
repz
push
and
test
dec
dec
inc
dec
daa
adc
enter
mov
es
scas
pop
xor
lods
ss
shr
loopne
jmp
retf
dec
es
sahf
jmp
adc
xor
hlt
lea
(bad)
call
xchg
and
ins
(bad)
iret
sub
popa
dec
movs
in
rol
(bad)
(bad)
mov
stos
xor
dec
loope
cmps
clc
pop
je
jle
push
cmp
daa
gs
(bad)
(bad)
(bad)
(bad)
cld
push
aaa
daa
les
cld
stos
dec
sbb
mov
sub
test
push
icebp
mov
ja
(bad)
call
adc
leave
fisubr
inc
popf
(bad)
popf
imul
mov
popf
lods
(bad)
(bad)
(bad)
inc
les
stos
mov
xor
ja
(bad)
imul
jg
mov
hlt
pop
cmp
jo
gs
rcl
leave
sbb
loope
(bad)
(bad)
(bad)
fbstp
add
(bad)
xlat
adc
or
loop
jb
push
add
sbb
dec
fst
adc
pop
jo
and
gs
inc
lods
ins
cmp
dec
ins
std
sahf
push
data16
addr16
fwait
xor
cdq
cmp
call
ins
scas
pop
cmp
rep
out
(bad)
jnp
jl
ins
call
adc
cmp
inc
mov
in
(bad)
call
dec
adc
fwait
out
mov
jo
mov
jecxz
cmp
in
mov
out
call
nop
and
sbb
adc
add
ss
test
rol
xchg
(bad)
(bad)
mov
pop
sub
xor
dec
repnz
mov
das
aaa
lods
sbb
dec
(bad)
(bad)
fcomip
fcmovu
(bad)
outs
and
lods
jnp
jae
out
fxch
mov
movs
fcmovbe
data16
adc
jmp
(bad)
cmp
and
cld
lahf
dec
sub
add
sbb
xor
sbb
(bad)
(bad)
(bad)
aas
or
addr16
sbb
addr16
pop
add
fnsave
jb
adc
lods
mov
sahf
mov
fs
mov
pop
push
retf
icebp
(bad)
inc
shl
inc
push
inc
mov
test
(bad)
(bad)
out
push
sbb
xchg
(bad)
in
push
fwait
or
xchg
imul
inc
jmp
xor
paddd
fdivr
xchg
movs
ins
in
(bad)
jg
aad
fstp
xchg
sub
aam
shl
push
inc
bound
inc
cmps
int
mov
fwait
aam
(bad)
(bad)
jmp
inc
or
cmp
mov
sub
pop
clc
xchg
sbb
fwait
(bad)
jg
dec
fist
mov
adc
cs
jp
out
lahf
nop
pop
pop
adc
mov
cmp
mov
dec
lds
rcr
sbb
add
ins
sti
push
(bad)
pop
push
bound
fnstenv
mov
(bad)
(bad)
(bad)
jl
hlt
test
hlt
adc
sub
mov
mov
dec
jge
mov
aad
sub
(bad)
call
pushf
sbb
mov
ins
jmp
les
dec
mov
xchg
jmp
adc
jb
cs
xchg
adc
cmp
pop
cmp
pop
pop
pop
loop
ffreep
jnp
(bad)
(bad)
inc
fmul
shl
mov
jecxz
fnsave
jle
ret
xor
mov
sar
push
xchg
adc
adc
sub
pop
jbe
(bad)
mov
into
xchg
mov
call
mov
xchg
popa
xchg
cdq
xchg
ins
push
(bad)
loope
xor
dec
lods
ror
call
dec
shl
div
outs
cmp
jnp
icebp
sub
jmp
mov
dec
inc
leave
push
sub
daa
data16
loop
sub
jae
fs
aaa
xchg
je
test
pop
(bad)
sbb
popa
scas
and
xchg
xchg
pop
xchg
xchg
loope
and
add
jmp
add
mov
popf
in
dec
fidivr
out
call
and
xchg
mov
adc
mov
sub
shl
lds
in
cmp
(bad)
fistp
mov
ins
pop
xor
xchg
daa
fld
and
jl
hlt
cli
(bad)
(bad)
jmp
es
sub
sbb
imul
fidivr
mov
dec
xchg
and
fnstenv
enter
cdq
mov
jae
add
and
push
push
mov
cmp
push
mov
loope
stos
scas
sbb
cmps
pop
(bad)
fbstp
mov
icebp
aam
xlat
or
stmxcsr
test
in
cld
(bad)
(bad)
mov
cmp
push
mov
sub
cdq
mov
(bad)
out
idiv
scas
cli
pop
add
mov
sbb
scas
push
push
xchg
or
clc
call
movs
outs
(bad)
neg
push
ins
fwait
inc
xchg
outs
sbb
outs
pushf
(bad)
dec
je
and
fs
dec
aad
push
(bad)
call
(bad)
fstp
loope
xlat
push
sbb
pop
bound
mov
jmp
jmp
punpcklwd
retf
dec
ret
fucomi
jp
xor
xor
test
into
jecxz
xchg
bound
adc
dec
pop
jge
mov
add
out
mov
push
dec
xor
mov
add
in
push
jg
into
sahf
fwait
xor
popf
and
sub
jne
xchg
lock
call
mov
pop
(bad)
in
jnp
mov
(bad)
jp
(bad)
sar
outs
fstp
fbstp
mov
ss
and
pop
ins
popf
and
xlat
push
xor
xor
jmp
mov
fistp
mov
test
push
(bad)
ja
(bad)
(bad)
call
das
or
cmp
icebp
mov
adc
retf
retf
xor
outs
cdq
adc
cwde
mov
pop
dec
dec
jbe
les
mov
mov
(bad)
sbb
xchg
neg
mov
dec
mov
mov
pop
and
cdq
rcl
cs
xor
hlt
push
dec
sti
call
in
stos
call
call
nop
xchg
gs
mov
ja
fwait
inc
ja
aad
dec
in
neg
inc
ins
dec
into
(bad)
ins
retf
sub
mov
aad
dec
pop
xchg
and
or
ins
dec
mov
in
sar
icebp
in
lods
ret
je
or
arpl
fsub
dec
bound
cld
cmp
stos
push
movs
jl
xor
mov
imul
xlat
(bad)
inc
push
sbb
jmp
jbe
movs
sti
cmp
into
rcr
popa
fld
mov
fwait
imul
scas
pusha
cli
and
push
leave
mov
push
adc
mov
imul
outs
adc
ins
pop
adc
out
push
mov
xchg
sub
or
outs
xor
(bad)
fisttp
mov
xchg
and
leave
inc
dec
mov
mov
jmp
dec
mov
stc
pop
inc
pop
icebp
loope
dec
loop
xor
aam
(bad)
jg
(bad)
nop
test
pop
sbb
fs
and
and
pusha
scas
xor
ss
fdiv
(bad)
call
mov
xor
mov
in
xchg
mov
cld
call
data16
lds
in
std
xor
jbe
in
imul
xchg
mov
adc
dec
xchg
imul
mov
cld
sbb
jo
je
mov
jmp
add
xchg
scas
mov
adc
(bad)
(bad)
call
mov
cmp
loope
push
pop
repnz
push
mov
adc
hlt
jnp
sub
es
cmp
(bad)
(bad)
(bad)
inc
mov
inc
loop
adc
adc
sbb
(bad)
push
push
jp
lods
push
mov
ja
add
pop
jl
mov
mov
stc
jge
(bad)
cmp
push
(bad)
(bad)
mov
mov
jae
mov
xchg
jb
sub
outs
cdq
je
(bad)
(bad)
(bad)
jmp
sahf
fadd
addr16
mov
fdivr
and
sbb
sub
pop
cmp
les
inc
add
cmp
hlt
in
imul
cld
sbb
rcr
push
inc
fwait
aaa
(bad)
ds
cmp
loopne
sub
(bad)
loop
fs
(bad)
xchg
mov
fisub
mov
and
call
pushf
pop
clc
jmp
ret
test
(bad)
jg
pcmpgtb
inc
fst
test
xor
push
jnp
inc
(bad)
(bad)
(bad)
jmp
xchg
and
dec
out
xchg
gs
lds
in
outs
mov
loopne
arpl
push
in
jmp
(bad)
cmp
nop
mov
lods
aam
push
or
push
pop
push
push
inc
movs
dec
and
fldenv
hlt
mov
mov
(bad)
jnp
test
fs
add
push
sub
addr16
(bad)
(bad)
mov
ret
es
call
and
dec
mov
(bad)
ja
mov
dec
(bad)
cmp
jae
pop
xchg
and
or
iret
push
or
outs
sub
std
(bad)
dec
outs
lock
pop
dec
pop
shl
sub
ja
enter
cld
(bad)
inc
mov
gs
mov
sub
jbe
or
movs
xchg
cmp
ja
lods
stos
dec
movs
xor
popf
xor
cmp
(bad)
(bad)
jmp
or
push
sbb
mov
ret
xor
(bad)
gs
jb
sbb
add
or
sub
sbb
(bad)
(bad)
mov
cld
imul
xchg
sti
sbb
push
mov
push
std
(bad)
call
movs
cmps
hlt
push
push
out
jno
(bad)
mov
movs
idiv
xlat
mov
icebp
in
ret
inc
imul
shl
mov
(bad)
(bad)
(bad)
inc
xchg
mov
dec
mov
leave
xchg
xchg
sub
xchg
int3
(bad)
adc
mov
(bad)
jg
xchg
ds
(bad)
(bad)
add
dec
in
imul
imul
fisttp
(bad)
(bad)
(bad)
mov
cmp
xor
repnz
dec
div
je
xchg
cdq
mov
xchg
cmp
(bad)
(bad)
fmul
xchg
out
and
test
test
inc
xor
pop
popa
out
mov
fcmovb
mov
ins
or
jo
into
cli
sbb
sub
adc
frstor
push
(bad)
(bad)
inc
ret
or
adc
test
and
fldcw
mov
sub
(bad)
(bad)
call
or
sahf
push
pop
dec
pop
jae
pusha
add
loope
mov
ret
pop
sub
sub
outs
pushf
pop
les
scas
cmc
xchg
(bad)
xchg
mov
jecxz
(bad)
fcomip
jg
in
mov
mov
and
add
ds
lock
inc
(bad)
jge
ins
sbb
xlat
cld
jns
fs
int
popa
fiadd
push
cmc
outs
xor
retf
jbe
mov
sbb
push
lods
jb
fdiv
inc
and
fimul
movs
sub
(bad)
(bad)
(bad)
call
xchg
jge
cli
fnstcw
push
bound
jbe
outs
push
ja
(bad)
mov
mov
dec
(bad)
xchg
pusha
fcos
mov
push
neg
stos
inc
mov
out
fwait
xor
(bad)
(bad)
inc
and
fstp
pushf
sub
pop
push
mov
mov
cmp
mov
push
(bad)
in
pushf
mov
lds
gs
mov
into
loop
mov
mov
lock
inc
xor
mov
add
sub
sahf
mov
in
mov
jae
pop
ja
push
std
mov
aam
cmps
int3
cmp
les
dec
jbe
jmp
and
mov
xchg
jmp
(bad)
(bad)
(bad)
ds
test
pop
out
push
out
mov
xor
imul
mov
pop
jmp
(bad)
(bad)
jmp
daa
sub
je
mov
xchg
xchg
sbb
or
ja
div
(bad)
(bad)
(bad)
call
xor
xchg
push
aaa
mov
test
pop
loope
sub
adc
(bad)
mov
lock
(bad)
(bad)
jmp
mov
mov
in
sbb
mov
fimul
mov
add
cli
call
mov
std
xchg
mov
(bad)
(bad)
jmp
rcr
in
inc
fstp
cwde
ins
add
rcr
and
pop
aad
(bad)
jmp
mov
shl
(bad)
jmp
lds
mov
shr
lds
ins
xchg
mov
mov
cs
ror
test
leave
inc
nop
cmp
jmp
inc
cli
mov
jnp
or
ds
xchg
ins
sub
jl
loop
xor
enter
(bad)
(bad)
call
movs
movs
mov
and
pop
adc
push
in
(bad)
std
(bad)
shl
out
or
pop
push
adc
(bad)
(bad)
jmp
and
(bad)
cli
cwde
mov
and
jp
out
cmc
mov
fist
ja
ins
mov
(bad)
(bad)
(bad)
(bad)
jl
xchg
inc
jl
mov
cmp
fnstsw
call
or
stc
xchg
int3
(bad)
inc
dec
std
push
outs
push
out
pop
and
cmps
push
mov
call
adc
mov
scas
lods
jbe
jb
dec
cwde
add
cld
pushf
jl
(bad)
(bad)
jmp
sbb
jo
mov
jg
loop
cmp
dec
fst
(bad)
call
mov
loopne
fstp
and
loop
pop
inc
cs
out
pop
sub
loop
or
cmp
bound
add
inc
mov
dec
lea
jl
and
(bad)
(bad)
(bad)
jmp
enter
call
les
mov
and
cmovnp
push
jmp
jbe
pop
hlt
jmp
or
fnstcw
fldenv
cdq
shl
(bad)
(bad)
(bad)
(bad)
mov
mov
pop
sbb
fdiv
(bad)
pop
jl
push
std
test
jl
cmp
(bad)
(bad)
inc
jno
xchg
gs
cmp
cmps
pop
or
(bad)
sbb
je
pusha
sub
jle
adc
cld
outs
xor
xchg
fdivr
dec
outs
jmp
mov
pop
sar
mov
inc
sub
popa
cmc
dec
mov
(bad)
push
loopne
mov
in
push
jge
mov
sbb
lods
pop
inc
dec
fst
retf
xchg
pop
call
std
mov
mov
xchg
cdq
mov
addr16
daa
movs
sub
xchg
jp
(bad)
(bad)
(bad)
jl
ds
ins
jmp
retf
mov
mov
out
pop
aaa
call
icebp
jno
mov
pop
sub
sub
inc
fwait
rcl
addr16
and
fs
push
aam
sahf
hlt
imul
(bad)
(bad)
out
ucomiss
sbb
(bad)
dec
add
sbb
push
dec
mov
mov
(bad)
call
sub
sbb
ret
adc
das
mov
retf
cmps
loop
mov
jle
inc
loop
(bad)
mov
pusha
retf
ret
mov
pop
ins
pop
xchg
test
(bad)
(bad)
push
lods
mov
jmp
sbb
fwait
push
mov
push
adc
push
lea
cs
add
call
push
xchg
das
call
dec
movs
sub
inc
xchg
lock
jmp
inc
jb
popf
lea
jnp
mov
sbb
ret
or
adc
jg
add
movs
or
and
cmp
retf
mov
xor
(bad)
(bad)
(bad)
jmp
icebp
xor
dec
call
lds
push
dec
outs
call
jp
nop
gs
scas
(bad)
(bad)
(bad)
call
pop
dec
dec
jecxz
cmovle
cmps
outs
outs
cmp
or
sar
adc
(bad)
fcomip
fmul
mov
ds
ss
ins
fstp
dec
inc
mov
jmp
test
movs
xchg
sbb
(bad)
jmp
jmp
jns
out
sbb
loope
mov
and
ret
or
mov
std
xchg
imul
(bad)
sahf
xchg
pop
push
adc
cmps
sub
clc
add
sub
les
inc
add
lds
stc
cmp
sub
mov
sub
(bad)
(bad)
(bad)
(bad)
inc
fist
push
sbb
jb
add
cld
xchg
xchg
mov
push
std
add
(bad)
call
jne
dec
sar
out
imul
mov
das
mov
fcmovnbe
mov
(bad)
sti
cwde
xor
arpl
frstor
out
mov
mov
xor
shl
push
in
push
jmp
and
(bad)
call
adc
sub
push
(bad)
mov
movs
sub
mov
sbb
add
mov
punpckhwd
lods
pop
adc
fdecstp
imul
push
mov
mov
(bad)
call
dec
fnstcw
mov
bound
pusha
mov
aaa
xchg
inc
pop
scas
outs
cmp
mov
fs
push
mov
adc
ret
and
scas
pop
aas
mov
dec
mov
call
out
pop
sar
(bad)
jmp
dec
cwde
js
icebp
and
pop
sub
push
or
jp
fnstsw
out
movs
lea
daa
imul
dec
inc
jle
xor
mov
test
push
push
xchg
inc
icebp
je
test
(bad)
(bad)
(bad)
call
pusha
fucomip
cmc
mov
cs
dec
test
fldenv
fs
sahf
mov
(bad)
push
rcr
xchg
push
pop
and
call
iret
push
out
mov
xchg
jb
mov
hlt
pop
dec
imul
pushf
cwde
mov
mov
push
and
adc
out
mov
fist
adc
xor
aaa
cld
dec
push
add
mov
mov
add
out
and
or
stc
outs
push
xor
ret
jecxz
mov
out
push
jg
arpl
sar
(bad)
(bad)
std
(bad)
ins
push
aas
fcomp
sub
sbb
in
xchg
js
(bad)
push
stos
loope
inc
cmp
jmp
jp
(bad)
push
data16
and
out
pop
sbb
mov
xchg
jmp
pop
push
scas
cmp
add
call
fcmovnbe
dec
pop
cmp
ficom
or
mov
outs
retf
xchg
es
add
jg
(bad)
jmp
jb
lahf
imul
dec
cwde
inc
pop
dec
aas
inc
out
shl
(bad)
(bad)
(bad)
(bad)
in
jns
and
call
xchg
xchg
gs
stos
int
aaa
xchg
push
test
(bad)
(bad)
dec
out
ins
pop
mov
pop
xchg
cmc
div
es
test
dec
mov
xor
movs
mov
(bad)
(bad)
call
or
cmp
or
push
add
jns
push
push
scas
retf
mov
jne
fsub
adc
mov
inc
leave
imul
mov
mov
(bad)
(bad)
(bad)
(bad)
fidiv
cmp
aaa
movs
mov
xchg
adc
test
mov
add
shl
inc
sbb
sti
and
das
scas
ja
mov
das
xor
xor
out
(bad)
jg
hlt
push
and
or
lea
mov
push
sub
(bad)
call
sbb
loope
cmp
push
lock
(bad)
mov
fisubr
mov
call
call
into
out
push
push
in
fild
or
xchg
aas
fnstsw
fsub
add
scas
das
mov
repz
jmp
and
and
shr
sub
xor
(bad)
push
lahf
test
sub
in
not
dec
lods
cmc
jmp
fld
cmp
in
(bad)
(bad)
(bad)
jmp
inc
pop
inc
jno
ss
shl
mov
nop
out
test
pop
or
pop
pusha
push
push
std
(bad)
dec
je
test
pusha
push
mov
js
or
outs
scas
adc
inc
test
dec
push
imul
jl
dec
outs
call
iret
cmps
(bad)
(bad)
call
enter
sub
xchg
dec
cwde
inc
in
mov
gs
gs
and
mov
xor
sub
jne
jo
cmp
pop
scas
mov
jo
lahf
add
jo
pop
lock
call
inc
xchg
ret
dec
xor
daa
xor
test
cli
test
mov
(bad)
(bad)
dec
jo
xor
icebp
aaa
xchg
(bad)
add
xchg
mov
clc
sbb
mov
shl
fwait
mov
pop
into
xor
movs
adc
(bad)
inc
xor
push
jbe
push
add
push
lods
cmp
push
mov
jbe
add
repz
push
scas
or
(bad)
(bad)
jmp
aad
pop
push
xor
xchg
jns
rcl
cmp
pop
ds
in
push
imul
cmp
and
xchg
rcr
(bad)
ins
jo
retf
mov
test
loop
and
(bad)
(bad)
(bad)
jmp
movs
jo
nop
push
xchg
sub
pop
dec
retf
icebp
inc
sbb
cmp
add
(bad)
(bad)
(bad)
push
adc
xlat
push
push
xor
add
imul
cmp
jae
cdq
xchg
inc
inc
(bad)
(bad)
(bad)
jmp
sbb
and
push
or
sub
enter
jo
inc
test
(bad)
mov
popf
push
cmp
ror
push
dec
retf
ret
cmp
add
(bad)
(bad)
(bad)
dec
dec
aas
xchg
pop
xor
ss
gs
sahf
mov
scas
sbb
movs
sbb
inc
shr
(bad)
inc
mov
leave
pop
cmp
stos
loopne
push
ins
lods
mov
inc
jge
lods
inc
fcomp
ret
mov
push
push
adc
jge
mov
dec
xchg
(bad)
pop
adc
stos
nop
mov
(bad)
scas
xchg
push
ins
xor
(bad)
(bad)
push
push
add
mov
fst
icebp
into
sub
sbb
push
test
test
or
(bad)
mov
mov
jb
test
or
xchg
pop
and
ja
(bad)
(bad)
inc
test
jbe
jmp
push
adc
mov
dec
adc
bound
std
cmp
mov
inc
sub
ss
dec
cdq
jne
(bad)
mov
inc
jns
mov
sub
mov
mov
and
(bad)
(bad)
(bad)
jmp
lahf
pop
xor
mov
dec
iret
adc
enter
dec
mov
xor
adc
inc
(bad)
call
pop
and
out
push
mov
and
test
aas
push
jl
(bad)
dec
sbb
mov
cli
fwait
stos
shl
mov
out
addr16
(bad)
(bad)
inc
fidivr
mov
dec
cmp
out
jbe
getsec
stos
loope
and
(bad)
(bad)
jg
xor
or
sub
push
xchg
jmp
fld
push
retf
enter
push
call
stos
jp
rcl
sbb
repnz
ins
imul
call
ret
ret
popa
movs
popa
sub
dec
daa
out
cmc
xlat
push
rol
aad
bound
arpl
iret
or
pusha
call
dec
or
dec
aad
cs
icebp
rol
sub
pop
test
jge
(bad)
(bad)
(bad)
jmp
cmc
cwde
xchg
xor
aad
pop
xor
(bad)
ror
push
call
pop
mov
aad
and
mov
add
or
sbb
(bad)
in
dec
mov
mov
rol
adc
in
imul
popa
in
daa
pop
and
inc
add
jbe
fsubr
mov
push
(bad)
(bad)
(bad)
dec
push
iret
mov
sbb
xchg
adc
ret
inc
adc
(bad)
sbb
xchg
pop
cmp
push
mov
pop
aad
je
arpl
frstor
cwde
cmps
xor
in
movs
mov
(bad)
jmp
xchg
xchg
mov
adc
mov
cli
(bad)
(bad)
jmp
rol
jg
mov
call
xor
sbb
(bad)
(bad)
jmp
pop
add
aad
(bad)
cwde
(bad)
popf
icebp
shl
popf
pushf
pop
retf
in
mov
test
(bad)
call
or
out
mov
out
imul
mov
repnz
repnz
cs
mov
jnp
jle
cmp
(bad)
mov
xchg
cmp
pusha
xchg
fs
sbb
mov
(bad)
jmp
jecxz
fwait
imul
mov
add
push
push
js
mov
adc
mov
rcr
(bad)
(bad)
(bad)
(bad)
jg
xchg
xchg
jno
cld
push
adc
push
jmp
and
jb
ret
js
adc
adc
enter
(bad)
jge
daa
push
and
(bad)
mov
ins
cmp
(bad)
(bad)
jmp
cmp
pushf
xor
out
or
and
xchg
mov
sub
adc
xor
nop
dec
inc
mov
dec
jmp
sub
cmp
ins
(bad)
call
or
movs
xchg
sub
andps
dec
(bad)
(bad)
dec
fidiv
mov
mov
test
or
inc
ja
cld
call
dec
retf
adc
pop
xchg
fldcw
(bad)
jmp
test
mov
jmp
mul
js
add
fist
sub
int
jecxz
cmps
mov
jo
mov
(bad)
(bad)
(bad)
(bad)
jmp
pop
xchg
dec
jae
test
in
rcl
push
dec
cwde
retf
inc
adc
dec
xchg
jg
adc
jb
retf
es
push
dec
push
xchg
push
cmovp
jbe
mov
(bad)
jmp
loope
aam
dec
xchg
shl
sahf
jp
sub
xchg
iret
mov
daa
bnd
(bad)
(bad)
(bad)
mov
scas
sub
(bad)
sti
jecxz
sub
stos
fwait
fwait
nop
(bad)
jp
lahf
xor
(bad)
(bad)
(bad)
in
pop
ror
test
mov
push
outs
adc
out
adc
retf
sbb
push
test
jbe
ret
jp
push
je
xor
iret
test
(bad)
(bad)
(bad)
inc
fdiv
retf
or
sbb
xchg
and
cwde
test
or
ja
fistp
dec
(bad)
(bad)
(bad)
jmp
sub
inc
ja
dec
pop
mov
fnsave
imul
inc
xor
cdq
jecxz
outs
cli
dec
add
cwde
mov
test
mov
adc
(bad)
jno
(bad)
(bad)
(bad)
mov
xor
aad
ja
adc
outs
xchg
xor
mov
dec
test
mov
xchg
pop
pop
adc
pop
cld
xchg
pop
mov
pop
push
jmp
les
popf
xchg
jg
lock
bound
std
stos
int3
repz
movs
push
add
call
cs
push
ret
jnp
mov
push
dec
xchg
xor
or
push
xchg
into
xor
sbb
bound
mov
bound
movs
mov
jns
pop
mov
pop
push
push
sub
dec
(bad)
(bad)
(bad)
jmp
cmp
mov
fld
pushf
call
pop
mov
mov
adc
hlt
inc
icebp
call
sub
pusha
jge
add
into
shl
ret
push
xchg
add
call
mov
mul
in
mov
shr
mov
jmp
aas
sbb
push
retf
jle
ret
ins
push
(bad)
inc
sbb
cs
or
outs
xchg
add
loope
retf
(bad)
fbld
and
dec
jmp
inc
lods
loop
cmc
aam
and
arpl
add
jmp
mov
mov
clc
loope
pop
nop
bound
into
jo
pop
mov
dec
xor
lock
(bad)
(bad)
jmp
scas
je
push
ret
mov
sbb
push
pop
mov
push
inc
push
ds
std
(bad)
(bad)
mov
int
movs
enter
adc
fiadd
std
add
jecxz
mov
hlt
lods
jmp
mov
sub
repz
push
aas
(bad)
(bad)
push
pusha
pop
mov
(bad)
in
xchg
or
(bad)
sub
mov
push
(bad)
(bad)
(bad)
(bad)
mov
or
mov
xchg
add
push
int3
cmp
and
pop
or
add
inc
jmp
cmp
cmps
enter
nop
test
push
movs
test
jle
gs
(bad)
cmp
in
mov
dec
mov
dec
stos
retf
cmp
(bad)
(bad)
call
popf
sub
xor
push
or
jecxz
cwde
mov
loope
and
jb
mov
cld
(bad)
push
xchg
xlat
push
sub
ja
cld
cmp
fdiv
jns
jb
cmp
push
hlt
es
(bad)
(bad)
(bad)
push
push
and
mov
mov
(bad)
jmp
iret
mov
adc
imul
xor
mov
call
mov
sysret
sar
ins
mov
jbe
ret
xchg
ds
aad
inc
leave
std
sub
(bad)
push
cmps
fwait
ins
popf
es
popf
ror
push
xchg
xchg
add
and
jno
daa
cmp
(bad)
fnstcw
xchg
out
xchg
das
cmp
ja
fidiv
push
mov
pop
pop
hlt
jns
and
outs
(bad)
mov
fisttp
sbb
pushf
xor
mov
dec
cmc
mov
(bad)
(bad)
(bad)
push
out
(bad)
lock
outs
fdiv
inc
cmp
in
xor
daa
shl
jmp
inc
mov
pop
js
mov
test
(bad)
(bad)
(bad)
fistp
adc
(bad)
addr16
sbb
and
jb
and
rcl
movs
cmc
jne
(bad)
(bad)
(bad)
call
loop
pop
push
shl
cs
and
push
xchg
push
and
test
sub
(bad)
jmp
fst
call
dec
mov
stc
sbb
and
fidiv
loop
fdivr
ds
dec
ss
pop
adc
(bad)
(bad)
out
pop
pop
iret
pop
pop
dec
mov
ffreep
cmps
jp
mov
arpl
out
mov
(bad)
fnstsw
jnp
leave
fnsave
pushf
(bad)
pop
xor
in
and
and
xor
in
arpl
add
(bad)
(bad)
jmp
inc
out
inc
out
and
and
inc
cmps
dec
call
push
ror
mov
or
idiv
cmp
pop
stos
push
pop
lods
enter
mov
push
(bad)
jb
jl
(bad)
mov
xchg
dec
leave
mov
mov
into
or
(bad)
(bad)
dec
retf
jnp
neg
mov
outs
sbb
mov
arpl
and
les
cmps
sub
jmp
(bad)
stos
sub
arpl
(bad)
lds
and
(bad)
(bad)
push
imul
loope
sub
mov
rol
ins
outs
dec
(bad)
iret
mov
mov
dec
add
or
cs
xchg
es
in
(bad)
(bad)
(bad)
(bad)
jg
push
lds
out
loope
mov
dec
cli
xor
icebp
and
mov
(bad)
dec
push
rcl
jl
xchg
sahf
push
inc
dec
sub
xor
xchg
mov
push
fistp
shr
pop
ret
imul
ds
(bad)
(bad)
push
outs
into
fist
inc
mov
push
outs
mov
adc
adc
stos
dec
or
aaa
dec
adc
sub
pop
pop
test
and
loop
retf
ret
(bad)
call
mov
(bad)
popf
pop
in
or
dec
(bad)
call
aas
cmc
push
(bad)
(bad)
int3
outs
ret
push
(bad)
xor
out
mov
(bad)
inc
xchg
jne
and
pop
ins
ror
and
push
repnz
push
dec
cmp
jg
cmp
and
and
pop
sub
je
movs
pop
jp
pop
gs
in
pop
into
sub
js
hlt
mov
or
cld
aam
fcom
push
push
fiadd
sub
add
inc
clc
sti
sahf
ds
sub
dec
pop
jg
push
jge
mov
daa
nop
add
(bad)
(bad)
mov
xchg
mov
cmp
js
je
mov
push
dec
jo
sbb
(bad)
call
mov
ret
mov
addr16
fdiv
and
les
pop
stos
inc
cli
push
dec
ficom
inc
imul
(bad)
mov
mov
scas
popf
mov
mov
std
(bad)
bound
leave
mov
(bad)
(bad)
call
xor
mov
jge
gs
xor
sbb
add
bound
(bad)
(bad)
out
clc
fcomp
cmp
xchg
popf
ficomp
stos
mov
mov
out
inc
div
push
inc
push
cmp
(bad)
push
add
xor
idiv
(bad)
ds
cwde
xchg
pusha
imul
cmp
ins
jnp
arpl
push
xchg
push
sbb
loope
sub
(bad)
push
repz
jmp
(bad)
(bad)
mov
pushf
lods
add
lds
ins
lods
mov
xchg
mov
ins
test
mov
sar
pop
ins
adc
push
xchg
push
aam
call
pop
mov
lods
dec
add
cmp
jae
div
(bad)
jle
dec
mov
mov
xlat
push
(bad)
(bad)
jmp
and
pusha
xchg
xor
jl
test
ins
movs
push
fs
dec
ret
(bad)
out
cli
retf
cmp
ins
das
jp
clc
fdivp
loope
sub
stos
and
jg
mov
adc
loope
adc
lds
dec
inc
cdq
mov
data16
sahf
xchg
enter
mov
sbb
popa
mov
push
in
das
push
pop
ins
sbb
pop
fcmovnu
test
scas
push
jb
retf
arpl
push
sar
xchg
cmp
sbb
jae
and
sbb
xchg
mov
pop
std
push
mov
fidivr
sti
test
mov
imul
jge
inc
int
call
sub
dec
cdq
sub
xchg
xlat
or
(bad)
(bad)
mov
loope
jg
ds
rcl
jmp
inc
mov
pop
test
movs
scas
sti
into
stc
les
ins
in
jl
enter
and
(bad)
call
dec
fst
outs
fstp
icebp
daa
out
test
cwde
in
(bad)
mov
mov
fstp
jo
dec
(bad)
call
loopne
mov
clc
ins
sbb
lea
sub
push
xchg
cdq
adc
pop
or
jae
mov
int3
push
jmp
scas
repnz
aad
pop
xchg
(bad)
fucomi
gs
test
push
call
(bad)
cmps
sar
cs
iret
(bad)
hlt
push
mov
and
sub
cmp
adc
(bad)
jmp
or
mov
pop
clc
mov
mov
mov
leave
pop
aaa
test
(bad)
(bad)
call
scas
add
or
and
cdq
or
mov
sbb
sar
dec
shr
fisubr
push
jns
dec
mov
(bad)
dec
test
(bad)
mov
fwait
imul
imul
test
ins
jbe
or
pop
std
sub
sub
pop
xchg
xchg
jp
frstor
loope
jbe
(bad)
(bad)
call
test
scas
scas
and
stos
sbb
xor
mov
pop
xlat
test
xchg
push
out
or
(bad)
(bad)
call
icebp
dec
shr
int3
push
daa
aaa
sub
push
pop
pop
jns
push
aam
cmp
int3
mov
jbe
in
pop
enter
loop
xor
scas
(bad)
jg
(bad)
fidiv
sbb
imul
xor
xchg
jne
rol
and
mov
or
lods
pop
icebp
(bad)
jmp
imul
dec
icebp
in
movs
stos
frstor
pusha
outs
mov
xor
(bad)
(bad)
push
iret
popfw
gs
cmc
push
adc
fist
adc
xor
jo
fcomp
(bad)
push
(bad)
repnz
xchg
cld
sub
pop
add
xor
xchg
jmp
hlt
fwait
int3
popa
cwde
(bad)
dec
mov
ret
add
mov
(bad)
fdivr
data16
sbb
mov
jp
mov
jbe
jecxz
lea
fldcw
ins
add
xchg
das
gs
xchg
dec
(bad)
(bad)
mov
dec
gs
fnstenv
pop
sar
mov
cs
sub
std
xor
(bad)
(bad)
push
xchg
hlt
mov
jmp
jnp
loop
lods
ins
mov
das
adc
jae
call
adc
stos
adc
push
push
sbb
and
mov
xchg
and
dec
loop
movs
sub
into
ds
outs
cmc
(bad)
(bad)
dec
sbb
fwait
movs
cwde
adc
test
xchg
push
in
test
fistp
pop
xor
cmp
cli
xor
stc
push
push
test
(bad)
push
mov
cmp
push
adc
shl
xor
jp
pop
jp
cmp
mov
call
sbb
adc
or
nop
inc
inc
mov
enter
jmp
sar
stc
jmp
push
fs
push
mov
jecxz
sahf
jno
in
jae
jge
(bad)
mov
retf
mov
(bad)
inc
sti
xor
pushf
call
scas
loopne
pop
dec
popa
enter
jp
mov
js
add
and
xor
cmp
and
(bad)
scas
and
adc
pop
in
lea
or
shl
xor
xchg
mov
rcr
sub
in
cs
std
xchg
push
mov
sar
push
rcr
xor
mov
outs
sub
sub
rcr
fs
cld
jno
adc
(bad)
(bad)
jmp
mov
inc
sub
test
push
mov
mov
test
lock
(bad)
(bad)
jmp
mov
lods
loope
adc
retf
mov
cwde
sub
pop
ja
sbb
movs
les
(bad)
call
cmp
cs
and
ins
cmp
std
(bad)
mov
lods
mov
sub
cmp
sbb
mov
ins
inc
icebp
mov
stos
sub
(bad)
(bad)
call
inc
jg
sbb
mov
xchg
(bad)
out
in
xchg
ins
stos
inc
out
(bad)
ins
outs
jno
mov
pop
in
(bad)
(bad)
(bad)
in
loope
loope
add
fs
neg
arpl
pop
pushf
sub
scas
adc
cmc
(bad)
call
stc
xchg
push
jo
mov
mov
cmp
xchg
clc
dec
push
xor
xchg
cli
inc
mov
xchg
outs
in
and
(bad)
(bad)
jmp
mov
push
push
pop
dec
mov
fnsave
sub
xlat
sub
sti
ins
in
(bad)
outs
xchg
sar
(bad)
call
xchg
imul
sub
mov
cmp
pop
push
xchg
cmps
ins
xor
inc
sub
call
(bad)
and
int
call
sti
scas
add
cmp
cmp
jmp
lock
hlt
enter
adc
iret
fmul
xor
fcom
in
mov
jae
mov
loopne
cdq
js
mov
movs
sub
outs
std
fwait
outs
in
cmp
gs
(bad)
inc
shl
outs
xchg
mov
push
dec
test
inc
fstp
das
push
cld
outs
push
fs
sbb
adc
aaa
dec
jnp
push
add
jbe
ficomp
jnp
push
js
pop
inc
dec
mov
jmp
pop
data16
call
in
xchg
shr
(bad)
int
adc
and
out
cmp
mov
cmp
jmp
and
cmp
fisub
bound
lds
(bad)
sbb
cmp
push
adc
mov
mov
call
(bad)
mov
aam
test
(bad)
shl
(bad)
pop
dec
nop
sub
cld
(bad)
(bad)
call
push
cmp
outs
fidiv
leave
mov
mov
lods
push
and
hlt
ss
es
mov
aad
sub
mov
jl
dec
loopne
inc
clc
ss
cmp
repz
ret
(bad)
cdq
push
jg
(bad)
fistp
adc
cli
cmp
inc
sbb
fstp
(bad)
jmp
outs
dec
rcr
retf
dec
jle
push
sub
sub
dec
inc
push
and
sub
clc
(bad)
jmp
ins
mov
jge
fstp
ins
in
mov
sbb
gs
call
pop
(bad)
jmp
jo
ja
jne
inc
xchg
inc
xchg
(bad)
(bad)
(bad)
jmp
mov
(bad)
cmp
cli
scas
hlt
mov
cmp
mov
call
cld
inc
pop
(bad)
mov
pusha
cmp
jl
push
pusha
fist
out
clc
mov
(bad)
out
xchg
cmp
dec
test
adc
jmp
or
push
cmp
aam
mov
fisubr
(bad)
(bad)
jmp
sub
xchg
mov
mov
std
and
fstp
mov
cwde
outs
test
in
(bad)
call
inc
dec
cli
dec
xchg
in
xchg
movs
pop
aas
push
mov
adc
call
or
mov
or
ja
or
sti
scas
and
out
ja
adc
jo
ja
(bad)
dec
cmc
sbb
push
mov
call
fisub
inc
popf
test
ins
jbe
pop
icebp
dec
mov
sub
xlat
ds
or
jmp
test
push
add
and
xor
or
push
cmp
bound
loop
mov
imul
ds
fs
retf
pop
hlt
(bad)
(bad)
dec
inc
and
add
out
adc
pop
dec
scas
pusha
fistp
adc
mov
jmp
rcr
adc
out
fwait
mov
inc
stc
mov
adc
push
pop
cs
pop
fdiv
jne
push
rep
lods
movs
xor
pop
sub
(bad)
dec
mov
push
mov
out
push
shl
mov
or
or
or
(bad)
(bad)
push
data16
fstp
mov
mov
jle
movs
mov
mov
sar
or
mov
out
repnz
outs
push
bound
xor
(bad)
(bad)
push
aaa
out
add
xchg
lock
mov
mov
pop
(bad)
adc
in
cwde
ret
std
test
push
lock
(bad)
cmp
xor
xchg
adc
xchg
daa
ins
xchg
fidivr
fcmovnu
xor
ds
call
or
add
sbb
stc
push
pop
xchg
and
jmp
xchg
(bad)
jmp
cmps
(bad)
fld
icebp
dec
mov
adc
jb
xchg
loope
sub
jg
push
(bad)
push
pusha
iret
or
fs
pop
and
(bad)
xchg
in
jmp
retf
mov
jecxz
and
out
xchg
fdivr
(bad)
(bad)
push
test
stos
out
xchg
pop
jmp
(bad)
pop
arpl
stc
mov
out
out
fwait
not
cs
(bad)
(bad)
(bad)
call
and
mov
mov
call
push
push
mov
(bad)
fist
or
stos
push
xlat
enter
mov
outs
aaa
(bad)
call
popa
retf
dec
xchg
adc
fnstcw
cmp
pop
lods
mov
(bad)
inc
aad
js
fcomp
mov
rol
pop
and
daa
addr16
(bad)
(bad)
(bad)
call
popa
int3
pop
ja
fisttp
mov
xchg
sbb
push
push
imul
(bad)
(bad)
dec
in
sub
cmps
mov
imul
xchg
jmp
rol
std
(bad)
cmp
(bad)
pop
(bad)
(bad)
(bad)
(bad)
mov
sub
push
cmp
imul
movs
les
or
(bad)
adc
aaa
test
shr
lods
in
ds
mov
mov
mov
mov
clc
jmp
inc
pop
or
adc
push
test
mov
(bad)
(bad)
mov
arpl
dec
xchg
sub
add
xlat
and
or
mov
pusha
pop
in
idiv
(bad)
(bad)
dec
shl
pop
ins
mov
nop
jmp
pushf
dec
xor
(bad)
jb
push
(bad)
(bad)
(bad)
jmp
fwait
jmp
out
mov
sbb
adc
mov
cmps
mov
jg
test
pop
pop
sbb
jl
mov
push
clc
mov
icebp
nop
call
std
xor
fsubr
and
push
outs
movs
lods
xchg
std
pop
add
push
jbe
shl
in
jmp
pop
mov
and
dec
mov
dec
addr16
push
jns
aas
xchg
push
adc
ja
jbe
add
push
xchg
mov
es
(bad)
mov
sbb
(bad)
(bad)
(bad)
push
out
test
push
nop
fldenvw
and
sub
adc
adc
movs
(bad)
(bad)
mov
retf
fidivr
jg
iret
jno
into
and
(bad)
(bad)
push
mov
data16
movs
icebp
xor
jb
popf
repz
fbstp
imul
dec
jb
(bad)
(bad)
push
test
push
mov
ss
imul
cdq
jnp
data16
popa
(bad)
jge
dec
pop
ins
imul
xchg
push
cs
and
(bad)
(bad)
jmp
xchg
cmp
addr16
ins
fdivr
push
xchg
clc
pop
jle
fisubr
sti
aad
cmps
(bad)
mov
fwait
xor
jmp
ret
bound
sub
dec
call
dec
pop
pop
dec
(bad)
(bad)
(bad)
jmp
cmp
in
and
xchg
sbb
(bad)
outs
add
fstp
lock
sahf
cld
sbb
adc
xchg
push
(bad)
(bad)
test
int3
cmp
xchg
pop
jp
outs
or
in
xchg
add
mov
push
add
test
int
ins
mov
div
sar
mov
out
scas
(bad)
rcl
fwait
sub
(bad)
call
or
mov
push
cmps
(bad)
add
mov
jbe
jecxz
fsubr
loop
adc
(bad)
fist
js
pop
pop
jbe
rcl
outs
mov
(bad)
(bad)
(bad)
inc
lds
int
xchg
int3
call
xchg
mov
and
sbb
adc
jl
(bad)
(bad)
(bad)
inc
neg
lods
dec
jl
or
mov
jmp
fbstp
pop
add
cmp
and
inc
ss
xlat
jl
int
(bad)
(bad)
(bad)
(bad)
stos
lea
popa
adc
adc
jbe
lods
sti
and
mov
cmp
and
mov
cmp
ret
mov
neg
retf
jmp
ficom
adc
(bad)
dec
mov
not
mov
in
sti
daa
imul
(bad)
jmp
and
xchg
into
addr16
dec
mov
ficom
aaa
adc
(bad)
(bad)
dec
sub
xlat
sub
mov
lds
dec
sbb
popf
leave
jbe
ret
fwait
(bad)
xchg
cli
cmps
mov
call
pusha
pop
int3
xor
dec
xchg
scas
into
xor
pop
mov
imul
pop
or
cmp
jmp
adc
pop
xchg
fnstenv
loope
pop
dec
fidivr
add
mov
pop
mov
out
pop
pop
xor
test
mov
call
(bad)
dec
cld
fwait
cmp
push
vcmpsd
dec
inc
leave
inc
iret
lahf
gs
nop
out
xchg
jmp
(bad)
call
and
push
cdq
inc
push
mov
loope
inc
inc
fnstcw
jecxz
and
fild
adc
idiv
push
jle
push
adc
leave
jp
idiv
or
pop
mov
mov
gs
popa
sbb
mov
lea
mov
xchg
bound
cmp
in
mov
movs
(bad)
mov
cdq
push
fisub
dec
call
aad
pop
xor
mov
sbb
hlt
test
dec
sbb
xchg
cmps
retf
in
out
mov
xchg
cmps
cs
sti
sbb
dec
ja
sbb
retf
inc
loop
loope
in
fsub
push
out
xchg
mov
(bad)
(bad)
jg
sub
xor
out
and
sbb
mov
call
in
in
adc
ret
pop
adc
js
sub
cmp
mov
ins
je
in
cld
bound
pop
(bad)
(bad)
(bad)
(bad)
in
dec
pushf
test
mov
sub
inc
stos
gs
es
mov
aaa
jnp
in
xor
lahf
jp
outs
(bad)
call
dec
cdq
and
mov
rcr
cmp
test
mov
cmp
push
(bad)
jmp
cmp
aam
inc
repnz
repz
mov
or
stc
pop
sub
mov
push
sub
mov
test
add
add
sbb
repz
jge
icebp
inc
mov
cli
and
out
fisubr
out
stos
pop
sahf
jg
scas
idiv
in
test
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
inc
jb
movs
adc
call
xor
push
or
imul
mov
(bad)
mov
je
sbb
dec
mov
adc
aad
ins
ficom
or
sar
(bad)
(bad)
jp
dec
mov
in
out
out
out
adc
rcl
sbb
inc
idiv
std
mov
mov
outs
(bad)
call
mov
(bad)
cmc
adc
adc
pop
mov
(bad)
(bad)
push
inc
iret
cs
jno
cdq
iret
jne
scas
ds
mov
mov
(bad)
cmp
aam
fistp
pusha
mov
ins
and
xor
or
(bad)
(bad)
(bad)
(bad)
jmp
stc
loope
xchg
inc
arpl
xor
xor
inc
xchg
(bad)
dec
xchg
mov
fld
sahf
jmp
inc
and
jecxz
adc
inc
test
add
rcr
push
clc
xchg
jle
lock
mov
xor
clc
js
cld
cmp
pop
push
adc
sti
xchg
push
and
cmp
xchg
icebp
push
xor
pop
or
mov
add
test
pop
ret
ret
(bad)
in
das
lock
std
icebp
stc
inc
aaa
jge
inc
cwde
inc
pop
pop
inc
ja
ud2
sub
mov
ret
cmp
cmc
and
mov
cmp
call
sbb
mov
jo
test
int3
and
inc
inc
shr
(bad)
dec
jmp
loopne
sbb
sahf
cmp
test
mov
out
mov
(bad)
jg
loope
xor
leave
cmp
(bad)
stc
pop
in
int3
(bad)
jg
xchg
jno
(bad)
icebp
popf
icebp
(bad)
(bad)
jmp
sbb
dec
fldenv
inc
dec
inc
in
sub
cmp
or
push
repz
or
pop
in
dec
or
fsubr
icebp
ror
pop
test
(bad)
(bad)
call
lock
cmc
icebp
retf
cmp
xchg
fcmovnb
pop
push
inc
repnz
xchg
jge
xor
(bad)
(bad)
(bad)
dec
xor
cmp
push
push
out
shl
sbb
cmp
cmp
adc
cs
(bad)
(bad)
(bad)
sti
jle
inc
arpl
mov
ror
add
xchg
and
stc
(bad)
(bad)
jg
ss
and
loop
pop
std
pop
pop
ror
jb
xchg
std
mov
adc
jle
push
int3
les
fwait
out
mov
(bad)
(bad)
inc
sub
or
xlat
mov
push
xor
sub
in
push
movs
push
iret
pop
cmp
das
sar
xchg
sub
inc
jl
mov
jne
(bad)
inc
adc
mov
movs
add
xchg
jmp
xor
(bad)
dec
add
cmp
inc
or
test
push
mov
mov
sub
adc
call
call
lock
out
popf
and
call
jg
push
push
(bad)
xor
mov
inc
movs
repnz
or
cmps
sub
pop
sub
and
adc
sub
sbb
mov
dec
fisttp
sub
or
fcom
scas
xor
adc
and
jmp
dec
sbb
fisub
add
push
cld
add
addr16
(bad)
(bad)
(bad)
inc
and
adc
add
jae
(bad)
and
push
imul
push
sbb
add
(bad)
push
adc
mov
xchg
ret
sahf
aaa
dec
inc
sub
(bad)
out
push
(bad)
(bad)
(bad)
jmp
cmp
mov
cmp
jmp
imul
inc
cmc
mov
mov
mov
(bad)
(bad)
(bad)
mov
das
push
pop
sti
(bad)
adc
sbb
push
pop
test
out
push
mov
add
call
scas
push
(bad)
dec
mov
push
aam
stos
sub
(bad)
push
ins
pop
fisub
add
mov
call
adc
push
pop
loopne
(bad)
call
and
adc
mov
inc
pop
fadd
cs
adc
stos
xchg
push
(bad)
(bad)
(bad)
mov
mov
fldenv
adc
dec
jno
(bad)
xchg
or
and
test
(bad)
(bad)
jmp
pop
test
es
mov
adc
cs
mov
pop
ja
(bad)
call
mov
aam
push
sahf
jp
ret
and
sub
add
clc
(bad)
inc
cs
inc
inc
test
leave
imul
in
daa
dec
and
loopne
xchg
adc
sub
cmp
repnz
add
adc
sti
pop
std
pop
rol
jg
std
call
xor
add
mov
mov
mov
cmp
fistp
mov
aam
mov
int3
add
bound
cmc
shl
jmp
mov
sbb
repz
fld
cmps
or
and
fwait
pop
mov
sub
outs
push
sub
(bad)
(bad)
cmp
add
add
push
aad
jmp
cwde
pop
mov
js
xchg
(bad)
adc
xchg
in
int3
call
stos
mov
gs
dec
cmps
cmp
(bad)
(bad)
(bad)
call
cmp
dec
jmp
sbb
stos
lods
cmc
pop
sbb
mov
add
(bad)
inc
loope
mov
je
(bad)
popf
xchg
xor
push
xor
shr
xor
bound
dec
mov
jp
jg
(bad)
mov
jno
push
jle
jo
stos
das
rol
sub
mov
(bad)
aaa
push
clc
ss
and
xchg
xor
sbb
(bad)
(bad)
(bad)
ds
sbb
add
sub
push
cli
push
in
shl
scas
dec
pop
jns
xor
(bad)
(bad)
cmp
ffree
mov
je
cmp
lds
dec
int3
inc
mov
(bad)
(bad)
fbld
ja
mov
int
jmp
adc
cmps
int
aas
(bad)
dec
sar
jmp
clc
inc
mov
pusha
add
je
xor
and
xor
stos
aad
(bad)
(bad)
(bad)
(bad)
(bad)
js
enter
test
loope
cmp
mov
add
clc
push
je
cmp
mov
mov
inc
push
ret
or
sbb
sub
mov
jmp
(bad)
(bad)
(bad)
push
retf
jne
sbb
retf
out
scas
mov
(bad)
fisubr
nop
outs
xchg
cs
(bad)
jmp
ficomp
mov
(bad)
push
pop
xor
lods
jge
(bad)
mov
lds
call
cmp
or
shl
in
imul
dec
mov
(bad)
sar
imul
lds
out
xor
push
add
(bad)
xchg
icebp
push
cmp
(bad)
(bad)
(bad)
fadd
cmp
push
in
dec
bound
cdq
sub
scas
shl
and
ds
shl
add
pop
pop
mov
js
add
sbb
pop
pop
cmc
pop
out
es
shl
inc
gs
jo
cmp
push
dec
lods
(bad)
jmp
out
inc
ins
leave
push
xchg
stos
add
test
xor
pop
rol
(bad)
(bad)
jmp
in
cs
pop
pushf
shl
xadd
pop
sar
sar
(bad)
(bad)
mov
mov
pusha
inc
and
mov
and
or
(bad)
inc
fst
lods
mov
add
jecxz
inc
mov
fist
(bad)
(bad)
inc
jle
push
in
ds
ja
(bad)
(bad)
lock
mov
sub
cmp
mov
or
jmp
inc
sub
(bad)
(bad)
call
or
xor
xchg
inc
push
test
fidiv
scas
into
mov
(bad)
test
sub
push
setno
jle
ja
ror
(bad)
call
jmp
fwait
enter
iret
mul
lock
mov
sub
(bad)
inc
or
(bad)
push
sbb
test
lahf
das
jbe
in
popf
lahf
push
movs
pop
(bad)
(bad)
(bad)
in
push
xchg
test
leave
retf
push
cmp
cmp
repnz
xchg
mov
addr16
(bad)
(bad)
(bad)
push
sahf
(bad)
ja
out
test
sbb
mov
mov
stos
in
(bad)
(bad)
mov
push
ret
jne
into
inc
inc
fild
mov
(bad)
fwait
scas
clc
(bad)
call
test
leave
push
loopne
jecxz
sub
daa
and
mov
rol
std
jmp
cdq
or
adc
stos
(bad)
(bad)
(bad)
call
(bad)
sub
push
rcl
mov
aad
xchg
xchg
sub
int3
mov
(bad)
(bad)
call
call
aaa
xchg
out
push
push
mov
stc
pop
test
mov
ret
(bad)
(bad)
(bad)
jmp
lea
or
repnz
icebp
sub
adc
ret
push
mov
(bad)
push
fsubr
imul
sar
(bad)
call
mov
jge
sbb
dec
(bad)
dec
popa
in
dec
dec
xchg
mov
jle
mov
push
test
es
jmp
push
jp
and
je
mov
push
jecxz
pop
imul
mov
out
adc
outs
not
adc
xlat
push
std
aaa
daa
(bad)
jg
mov
xchg
add
mov
dec
shr
push
jecxz
mov
(bad)
(bad)
jmp
sub
leave
int3
push
add
sbb
xchg
mov
pop
cmc
jg
cld
xor
cwde
mov
(bad)
cwde
pop
mov
push
xchg
(bad)
(bad)
(bad)
dec
retf
jbe
pop
xor
mov
pop
data16
lods
dec
xchg
mov
pop
jp
scas
popf
add
dec
xor
inc
xchg
movs
dec
cdq
jne
and
pop
sti
fidivr
inc
(bad)
(bad)
call
in
xchg
bound
dec
in
aaa
push
add
out
les
leave
or
loope
jne
mov
(bad)
inc
into
push
sub
mov
(bad)
pushf
jae
mov
or
cmp
adc
cwde
movs
(bad)
dec
icebp
and
test
scas
and
mov
cmp
aam
(bad)
pop
(bad)
aam
adc
std
icebp
xor
movs
sbb
pop
xchg
jge
adc
push
ret
jp
pop
loope
sbb
ss
out
imul
(bad)
fcmovnb
push
add
inc
ret
(bad)
(bad)
(bad)
jmp
into
cdq
aad
repz
movs
shl
out
(bad)
not
sti
jnp
inc
lea
sub
fwait
or
xor
ror
cmp
pop
in
adc
dec
xor
(bad)
(bad)
(bad)
jmp
scas
push
jmp
retf
xchg
or
xor
push
mov
(bad)
jg
push
sub
stos
inc
inc
fistp
xchg
mov
jb
neg
push
(bad)
(bad)
jmp
mov
rol
push
push
cmp
ins
and
outs
sub
cmp
daa
lock
(bad)
loope
fnsave
push
sbb
test
outs
cs
jmp
sbb
loop
mov
loope
aam
sahf
imul
dec
ds
and
hlt
(bad)
(bad)
cmp
bound
cdq
cld
dec
sbb
nop
out
fwait
dec
xlat
xchg
(bad)
(bad)
(bad)
jg
dec
mov
inc
ins
push
pmulhuw
adc
xchg
leave
das
add
in
cmp
xor
retf
(bad)
(bad)
call
dec
mov
dec
mov
xchg
xlat
and
jge
add
inc
imul
fcomip
inc
sbb
in
fidiv
push
outs
lahf
adc
fcom
arpl
jnp
pushf
push
sbb
repz
jns
in
adc
and
xor
adc
in
inc
xchg
or
int
mov
adc
imul
ss
scas
jne
aam
(bad)
(bad)
jmp
sub
sbb
add
xchg
jge
mov
cmp
cs
fxch
pop
sub
xor
jb
idiv
inc
push
xchg
pop
aam
in
movs
and
and
cmp
mov
(bad)
fdiv
lea
out
push
call
and
jecxz
mov
mov
pop
fsub
fsub
adc
xor
pop
sub
add
popa
fbstp
aas
imul
mov
std
or
call
mov
arpl
jecxz
xchg
(bad)
(bad)
(bad)
push
add
pop
mov
fist
jmp
ficom
xchg
fwait
shl
sub
push
pushf
inc
(bad)
(bad)
(bad)
jg
(bad)
cs
test
daa
test
and
dec
and
xchg
enter
add
(bad)
dec
xchg
cmp
xchg
mov
and
inc
sbb
cmp
pop
cmp
push
mov
jmp
jg
stos
(bad)
(bad)
inc
loop
ret
js
(bad)
iret
(bad)
mov
adc
ret
dec
xchg
mov
fs
inc
dec
outs
mov
sahf
xlat
mov
(bad)
(bad)
(bad)
call
cmps
movaps
cwde
xchg
adc
jns
(bad)
jecxz
xor
mov
pop
je
test
cld
imul
mov
(bad)
dec
(bad)
out
cli
jmp
cmp
lds
stos
js
bound
pop
out
daa
push
(bad)
sbb
imul
out
jg
jnp
sub
cmp
or
push
mov
jb
das
cli
outs
mov
cs
jb
out
addr16
sbb
(bad)
in
or
daa
xor
and
or
(bad)
jns
lods
shl
fisubr
xor
(bad)
pop
pop
sub
or
ins
imul
jge
arpl
sti
and
jg
lock
or
or
ss
xor
call
daa
arpl
mov
fsub
adc
mov
push
pop
int
push
cs
(bad)
dec
sub
div
fst
mov
into
test
aad
mov
std
dec
addr16
jmp
test
jns
cmps
retf
(bad)
jmp
xor
and
scas
retf
push
aas
lods
mov
(bad)
(bad)
(bad)
call
rcl
std
das
out
lahf
cmp
xor
xor
cdq
(bad)
cmp
sti
(bad)
and
mov
neg
add
sub
test
(bad)
push
sahf
xchg
mov
or
sub
mov
pusha
mov
ss
dec
stc
jbe
test
xchg
xor
inc
xor
cmc
and
outs
das
clc
or
retf
fcom
test
mov
pop
ins
mov
fwait
(bad)
fldenv
jae
call
call
ds
jp
inc
retf
push
pop
sbb
mov
out
repz
jl
inc
jae
imul
mov
popa
in
ror
adc
inc
bound
clc
xchg
push
sub
(bad)
je
lock
pop
ret
les
dec
int3
sar
dec
mov
fs
mov
ins
sub
or
add
pop
addr16
loopne
(bad)
dec
sub
icebp
out
loope
rcr
sub
(bad)
call
mov
mov
mov
ret
mov
movs
adc
scas
enter
pop
xor
(bad)
(bad)
(bad)
jmp
inc
pop
jne
pop
pop
into
jle
xor
pop
adc
add
test
mov
and
lahf
daa
xchg
outs
(bad)
ja
jae
clc
or
in
(bad)
(bad)
jmp
outs
mov
sti
fcmovnu
jge
jg
mul
stc
or
jne
jecxz
ret
add
(bad)
adc
cli
call
dec
mov
ds
sbb
inc
or
(bad)
(bad)
(bad)
push
repz
cmp
add
in
add
sbb
add
xchg
fimul
and
sti
inc
fsubr
or
push
lahf
popa
adc
push
sbb
xchg
pop
cmp
pusha
mov
inc
repz
shl
lock
push
or
ja
out
(bad)
or
mov
xor
mov
int3
ror
mov
(bad)
out
add
xchg
cdq
inc
or
pop
test
xchg
or
(bad)
(bad)
jle
fsubr
cmps
shr
test
ret
ret
dec
cmp
(bad)
push
mov
fisub
or
and
movs
test
jmp
dec
int
inc
repnz
adc
or
inc
std
(bad)
(bad)
dec
int3
ret
or
inc
pop
xchg
cwde
test
(bad)
ret
imul
jmp
adc
dec
push
(bad)
xchg
scas
stos
mov
movs
jmp
fnstenv
data16
iret
and
sub
in
ss
push
mov
sub
popf
das
cmp
(bad)
(bad)
(bad)
(bad)
jmp
arpl
out
cs
fdiv
ja
int3
xor
(bad)
(bad)
mov
xor
bound
out
or
xchg
xor
imul
push
adc
dec
jo
sahf
sub
les
ins
cmps
xlat
inc
dec
or
sub
imul
(bad)
(bad)
(bad)
jle
mov
cs
dec
and
popa
ficomp
mov
push
int
sti
xor
(bad)
jmp
es
lods
sub
add
cmp
sub
mov
vmovaps
jo
jae
aad
cmp
ds
pop
out
mov
fstp
inc
lock
jle
push
cmp
pop
jge
shl
inc
fs
fild
cli
(bad)
cmp
in
test
pop
out
stos
(bad)
call
mov
lahf
cld
in
xchg
ret
sub
add
popf
xor
dec
aas
movs
sub
mov
(bad)
cmp
push
rcl
xor
fild
(bad)
(bad)
cmp
inc
jmp
mov
adc
cmps
out
cmp
jp
in
xchg
pushf
pushf
(bad)
xor
jb
inc
cmc
pop
test
xchg
mov
ja
pushf
sahf
xor
mov
(bad)
call
popa
lds
and
mov
pop
cmp
xchg
mov
gs
fistp
(bad)
out
cli
int
sub
ds
movs
imul
test
pop
in
push
sub
imul
(bad)
(bad)
call
bound
push
xlat
cs
enter
dec
js
sbb
dec
pop
or
(bad)
xor
in
into
and
idiv
(bad)
jmp
jno
psubd
push
addr16
(bad)
sahf
sub
pop
test
(bad)
(bad)
jmp
scas
loope
jmp
ss
jecxz
mov
in
cli
sar
dec
jle
out
das
idiv
(bad)
mov
idiv
jb
sbb
push
push
jle
push
add
ins
cmp
inc
(bad)
push
jae
xchg
scas
xor
adc
loopne
inc
xor
jbe
(bad)
(bad)
fist
ret
les
xchg
xor
sbb
inc
xor
mov
pop
(bad)
(bad)
inc
fild
jle
outs
rcr
sar
imul
std
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
bound
sub
or
inc
outs
push
xor
outs
ficom
out
hlt
mov
push
lea
not
sti
jmp
push
(bad)
clc
cmp
pop
mov
jmp
jg
inc
cmp
addr16
push
cmp
idiv
inc
call
inc
scas
test
jno
lahf
dec
pop
dec
jmp
ss
pop
adc
(bad)
(bad)
call
lahf
mov
inc
iret
call
int3
aas
jmp
aas
ret
fisttp
(bad)
or
(bad)
cs
dec
inc
out
pop
scas
test
(bad)
sti
inc
ffree
jb
icebp
jae
mov
std
jbe
clc
push
jg
mov
stos
push
adc
jle
ss
cmp
or
ja
cmp
sub
in
fadd
(bad)
out
rcl
mov
pop
cmc
fcomp
loope
movs
outs
into
call
jg
dec
ffreep
int3
push
pop
cld
and
pop
sbb
loope
mov
jg
call
pop
jmp
cmp
cmp
adc
cli
leave
mov
push
(bad)
pop
gs
jns
adc
test
imul
test
bound
mov
xlat
cli
mov
xor
jb
sbb
jmp
sub
(bad)
mov
scas
inc
and
push
cmps
test
call
cli
inc
sar
xor
(bad)
adc
imul
je
or
fwait
std
sbb
cld
mov
les
jg
dec
std
stos
mov
jg
sub
jge
rcr
jne
cli
in
loop
push
call
lds
pop
inc
xor
test
call
xlat
pusha
cs
sti
push
jne
ins
aas
rcl
cmp
mov
mov
cmp
sub
aas
fbld
mov
pop
push
jg
shl
scas
jmp
mov
movs
les
loop
ins
imul
mov
adc
push
aas
mov
mov
mov
shl
lods
inc
dec
cmc
test
xlat
add
sbb
in
push
mov
(bad)
lods
xchg
retf
ins
xor
iret
xchg
js
(bad)
push
jmp
xor
not
pop
jae
hlt
(bad)
test
jmp
outs
cli
adc
sbb
test
arpl
sub
sbb
(bad)
(bad)
(bad)
jmp
test
mov
sub
sub
add
add
arpl
hlt
les
(bad)
call
stos
leave
sub
adc
int3
bnd
mov
punpckhwd
xor
mov
mov
(bad)
(bad)
dec
pop
cmp
stc
sub
data16
pushf
dec
lods
nop
mov
loope
mov
ss
cmp
sub
mov
add
out
dec
pop
mov
(bad)
(bad)
(bad)
call
in
shrd
pop
xchg
in
pop
push
sub
and
retf
xor
(bad)
(bad)
jmp
lods
push
test
iret
xchg
sbb
jmp
xchg
(bad)
push
in
xchg
lock
in
jns
(bad)
adc
mov
inc
xor
(bad)
(bad)
(bad)
dec
xor
ret
shr
stos
outs
test
js
imul
jo
cmps
call
pushf
data16
ins
mov
cmp
add
push
into
(bad)
(bad)
(bad)
call
inc
or
retf
or
xor
jo
sahf
cld
pop
add
dec
bound
(bad)
aad
movs
loop
jle
les
add
and
cmp
xchg
(bad)
(bad)
(bad)
dec
xchg
dec
dec
ret
sub
pop
aaa
xchg
sub
test
(bad)
and
mov
(bad)
(bad)
jmp
scas
stos
dec
sub
(bad)
xlat
mov
jle
or
dec
aam
jnp
test
retf
pop
(bad)
(bad)
inc
scas
jl
cmp
adc
and
nop
cmps
jne
mov
dec
(bad)
(bad)
mov
mov
cmp
lds
call
adc
adc
add
(bad)
(bad)
(bad)
call
jo
or
mov
enter
xor
xchg
push
sub
push
push
xchg
mov
sar
dec
fcom
lea
and
inc
inc
sbb
cmps
and
push
inc
(bad)
(bad)
(bad)
dec
dec
mov
mov
fs
adc
inc
jp
test
(bad)
(bad)
(bad)
(bad)
jle
mov
and
mov
loop
pop
sub
bound
inc
xor
adc
pop
stos
outs
dec
and
pop
mov
out
adc
cld
lock
push
dec
adc
(bad)
push
pop
(bad)
(bad)
(bad)
dec
in
and
popa
mov
movs
addr16
dec
rol
cs
fs
jmp
(bad)
(bad)
(bad)
jmp
pop
push
call
mov
dec
dec
add
push
in
jo
mov
imul
push
jns
cmp
das
repz
dec
mov
ins
or
addr16
push
cs
lods
(bad)
(bad)
(bad)
dec
add
xchg
jp
mov
jno
lds
xchg
call
cwde
xchg
pop
cmp
push
cld
(bad)
inc
stos
jp
repz
sti
jle
jmp
fadd
push
cwde
push
cmp
pop
(bad)
(bad)
jmp
out
and
lds
xchg
das
fisub
push
jp
iret
push
hlt
mov
sub
retf
daa
int
(bad)
(bad)
dec
inc
outs
fidiv
mov
stc
mov
(bad)
mov
push
pop
cmp
mov
scas
idiv
(bad)
(bad)
retf
add
jg
and
(bad)
and
adc
sbb
leave
sbb
xor
(bad)
(bad)
mov
push
mov
adc
xor
or
mov
das
cli
jg
jns
xchg
add
inc
pusha
out
test
add
push
std
(bad)
(bad)
(bad)
dec
icebp
repz
pop
cmp
cwde
mov
fild
ins
imul
(bad)
(bad)
(bad)
inc
popf
cs
push
and
xor
and
mov
mov
sbb
mov
mov
push
adc
(bad)
dec
into
sbb
movs
mov
out
movs
cmp
sbb
(bad)
mov
or
fistp
sbb
sub
(bad)
(bad)
call
xchg
adc
ds
aam
or
imul
outs
clc
(bad)
(bad)
ds
mov
jb
xchg
xchg
xor
test
mov
clc
(bad)
inc
inc
leave
jl
pop
int3
push
(bad)
imul
(bad)
mov
jno
hlt
repz
cdq
and
adc
or
(bad)
(bad)
jg
movs
lods
adc
sbb
xor
out
pusha
fstp
dec
xchg
sti
in
sub
inc
sahf
jl
or
shr
inc
ret
movs
xor
xchg
pop
pop
cs
popf
and
cmp
jge
not
fcmovu
fdivr
inc
in
jmp
(bad)
std
cwde
(bad)
(bad)
(bad)
fist
dec
xchg
fdiv
stos
in
cmc
dec
jle
push
not
out
fwait
add
imul
mov
sbb
adc
cmc
dec
test
cmps
sbb
mov
sub
sahf
test
xchg
mov
jb
aaa
xor
pop
xchg
xor
(bad)
inc
ror
outs
push
ins
enter
cdq
xchg
dec
(bad)
cmp
ja
adc
mov
imul
inc
scas
push
std
mov
sbb
cmp
(bad)
(bad)
mov
jne
call
dec
push
in
pop
cmp
mov
in
or
xor
jg
(bad)
jmp
mov
inc
sbb
jno
(bad)
(bad)
sahf
int3
pop
pop
pop
mov
call
aas
mov
mov
lods
cdq
imul
xor
cmp
out
movs
movs
or
push
cmp
pop
ret
in
inc
push
jno
arpl
pop
outs
(bad)
jmp
mov
in
xor
not
loope
dec
xchg
xchg
ret
and
sbb
(bad)
mov
lods
mov
push
push
dec
hlt
pop
cmp
jmp
jmp
fs
pop
inc
fwait
sub
push
add
test
push
mov
or
out
pop
lods
aas
(bad)
ficomp
(bad)
(bad)
(bad)
push
jno
pop
rcl
mov
inc
push
jmp
sbb
movs
call
adc
push
xchg
fist
or
add
or
sbb
sub
js
cmp
pop
jle
and
mov
leave
cmp
cmp
in
jnp
clc
mov
mov
into
fdiv
jg
(bad)
call
jle
push
out
cmps
adc
sub
data16
and
push
mov
lds
jg
(bad)
dec
test
mov
pop
mov
pop
push
sbb
shl
(bad)
call
mov
(bad)
leave
ffree
popfw
sub
fld
jne
push
fs
jne
shl
sbb
push
sbb
cmp
pop
shld
(bad)
mov
int3
rcr
add
cmp
out
pop
mov
jmp
xor
(bad)
(bad)
jmp
xor
xor
lods
jnp
dec
cld
mov
into
scas
mov
mov
(bad)
fild
(bad)
test
popa
mov
push
imul
(bad)
(bad)
push
jae
leave
(bad)
xlat
xor
sub
lahf
test
js
cld
push
jne
pop
xchg
mov
loope
data16
mov
fcmovnu
pop
and
jp
or
or
cmps
and
inc
xchg
pop
jo
test
dec
cmp
jmp
add
stc
aad
push
icebp
int3
sub
pop
inc
mov
(bad)
(bad)
(bad)
jmp
mov
cdq
mov
mov
in
aas
dec
lock
sbb
cmps
out
or
pop
cmc
leave
jb
out
inc
push
pop
pop
retf
mov
xchg
or
cld
(bad)
(bad)
call
push
fstp
xor
test
ins
in
repnz
pop
mov
adc
(bad)
adc
pop
loopne
loop
push
int
test
adc
loopne
rcr
std
(bad)
(bad)
ffree
mov
push
and
outs
shl
mov
clc
(bad)
call
mov
xchg
sub
outs
dec
imul
push
xor
cmp
dec
shl
and
idiv
out
add
push
aaa
fs
dec
retf
sti
fisubr
ret
and
and
adc
cmc
(bad)
call
sub
fld
xor
sub
pop
pop
rol
mov
sti
mov
mov
ins
and
in
mov
mov
in
xchg
xor
jg
shr
imul
sub
int3
jl
bnd
rcl
mov
push
mov
in
adc
(bad)
jg
cmp
xchg
dec
or
adc
push
(bad)
(bad)
dec
cmp
leave
inc
test
repnz
inc
rol
push
ja
mov
and
int
push
and
movs
inc
pop
xchg
jns
and
or
inc
shl
(bad)
call
or
inc
ffreep
clc
je
stc
push
rol
jle
div
mov
data16
(bad)
jg
or
sub
or
outs
ja
scas
jl
popa
inc
jecxz
out
(bad)
(bad)
(bad)
(bad)
jmp
ret
jecxz
mov
push
mov
jo
or
jo
cli
xor
lds
xlat
je
(bad)
(bad)
(bad)
(bad)
(bad)
movs
in
cmp
in
mov
fisttp
repnz
and
mov
cmps
and
(bad)
mov
jmp
imul
fsubr
data16
addr16
clc
call
xor
cdq
xor
xor
mov
dec
jecxz
(bad)
jmp
jne
jbe
repz
pop
mov
mov
(bad)
mov
pop
cli
xor
inc
jo
dec
adc
ins
or
and
jp
rcr
push
inc
repz
(bad)
(bad)
(bad)
mov
sub
pop
push
test
movs
movs
gs
scas
fst
aaa
inc
(bad)
(bad)
(bad)
call
and
jb
pop
adc
lods
adc
movs
add
jns
inc
mov
jge
fldcw
pushf
addr16
cmp
lods
sub
sub
and
adc
jne
dec
fnstcw
lds
or
mov
cmp
cdq
retf
fisub
push
push
daa
lock
fcomip
sub
icebp
cmp
xchg
fidiv
xchg
cmp
sbb
xchg
sbb
pop
jmp
fwait
xchg
jp
int3
loope
(bad)
(bad)
(bad)
call
push
pushf
and
push
cdq
adc
xor
movs
ret
or
and
xor
shl
fidiv
enter
sub
outs
adc
sub
sbb
cmp
cmps
sbb
out
in
jge
shr
(bad)
(bad)
inc
mov
shr
mov
fbstp
add
je
jle
leave
jnp
sub
(bad)
(bad)
push
outs
frstor
or
ins
mov
aas
mov
ficom
movs
dec
movs
inc
outs
mov
stos
fistp
mov
jmp
icebp
fistp
jg
xor
mov
jbe
std
(bad)
repz
xor
stos
sbb
dec
mov
dec
push
dec
dec
retf
ja
(bad)
inc
mov
mov
enter
aad
ss
mov
outs
int3
(bad)
(bad)
fcomip
dec
stos
mov
xor
rol
movs
and
mov
in
xor
sar
(bad)
(bad)
fisubr
cmp
mov
xchg
js
ins
shr
fsubr
ds
lahf
data16
mov
pop
call
push
cld
pusha
push
jne
cmp
cmp
inc
out
mov
push
test
icebp
adc
(bad)
inc
adc
add
mov
icebp
movntq
jns
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
fs
mov
and
imul
cwde
dec
pusha
mov
(bad)
jmp
xchg
and
pushf
ret
aaa
fidiv
(bad)
fidivr
sar
test
mov
out
(bad)
(bad)
(bad)
out
les
push
ins
loop
dec
jl
fist
push
xor
cmc
xchg
jo
popa
scas
sub
mov
(bad)
(bad)
(bad)
call
jbe
test
xchg
jno
jecxz
mov
mov
mov
fist
adc
out
jecxz
inc
xor
popa
sub
retf
mov
lods
inc
dec
cmp
mov
enter
(bad)
inc
mov
mov
scas
sbb
std
sbb
mov
pop
jbe
fwait
arpl
mov
inc
mov
add
data16
jns
fisttp
test
push
movs
pop
sbb
sub
and
movs
push
and
push
and
or
cmc
popa
in
not
cmp
mov
cli
(bad)
ficomp
xchg
inc
push
lahf
ds
aas
cli
or
pop
jg
jnp
(bad)
(bad)
(bad)
cmp
xchg
into
cmp
inc
xor
cmp
fdiv
neg
arpl
xchg
mov
(bad)
(bad)
(bad)
call
sub
mov
push
jmp
sub
mov
pop
mov
push
mov
(bad)
(bad)
dec
adc
push
push
cld
push
ret
movs
nop
pop
xchg
clc
dec
sbb
jecxz
mov
pop
(bad)
jmp
ds
ds
(bad)
jmp
out
loope
fbstp
mov
std
xchg
stc
stc
inc
aad
jge
jno
and
adc
sbb
push
push
loopne
push
or
test
enter
push
(bad)
fbld
(bad)
repnz
cmp
dec
(bad)
ins
out
mul
repz
mov
sub
add
icebp
fwait
(bad)
adc
inc
sub
jp
(bad)
mov
add
(bad)
call
and
div
pushf
mov
iret
retf
ja
sti
int
lods
aas
adc
cld
and
jecxz
(bad)
(bad)
call
sub
cmp
pop
jp
mov
xchg
mov
xchg
retf
test
adc
inc
aad
call
popf
sbb
(bad)
vaddps
jl
cmp
(bad)
(bad)
(bad)
dec
cmp
jnp
push
xor
jmp
pop
sbb
jmp
jl
mov
retf
inc
mov
push
mov
inc
call
pop
jbe
movs
ins
fldcw
inc
xchg
ins
push
cli
xchg
mov
jg
dec
ds
aas
and
(bad)
dec
cmps
lea
mov
int3
jmp
pop
leave
cwde
cmc
imul
(bad)
(bad)
mov
jg
push
neg
out
pop
mov
(bad)
out
stos
clc
(bad)
std
cdq
inc
popf
shr
fstp
enter
mov
fimul
lock
jle
into
sbb
mov
paddsb
icebp
idiv
(bad)
call
(bad)
gs
xchg
pop
loop
xlat
push
aas
(bad)
jbe
jecxz
ja
std
dec
nop
mov
(bad)
not
sti
fnsave
std
in
mov
pop
ficom
ret
(bad)
sbb
and
clc
mov
mov
sub
jne
hlt
sti
enter
jle
mov
loopne
addr16
xchg
cmp
push
fs
xor
xor
(bad)
(bad)
(bad)
mov
mov
shr
push
pop
out
jo
jne
jl
lahf
cdq
push
cdq
clc
sub
test
(bad)
sub
sbb
(bad)
dec
adc
(bad)
push
jno
push
pop
ja
sbb
dec
cmc
push
jmp
(bad)
addr16
fidiv
sbb
popf
mov
out
(bad)
in
call
xchg
mov
inc
inc
cld
push
jne
cdq
fnstcw
dec
icebp
dec
out
add
mov
loop
cwde
clc
or
sbb
or
clc
scas
popa
loop
adc
mov
cmp
retf
out
paddd
cli
mov
mov
ds
(bad)
lods
fs
adc
fiadd
stos
shr
cmp
movlhps
mov
jecxz
dec
ss
aas
aad
test
(bad)
xlat
pop
pop
loop
clc
outs
(bad)
hlt
jns
lds
hlt
xchg
fild
rcl
or
ds
daa
clc
movs
(bad)
xchg
loopne
(bad)
(bad)
fst
sbb
jg
push
push
stc
popf
(bad)
mov
mov
or
std
sbb
stos
pop
ins
lahf
push
push
or
pop
icebp
push
aad
add
or
mov
mov
ror
aas
inc
dec
sbb
mov
enter
cdq
fdivr
cmp
loop
dec
out
xor
mov
adc
jecxz
mov
leave
inc
loopne
(bad)
sbb
cmp
imul
adc
inc
loope
xor
popa
stos
(bad)
mov
shl
pushf
mov
outs
sub
stos
cwde
jle
inc
inc
push
pop
and
sbb
sbb
(bad)
xchg
shr
scas
in
sub
pusha
cmp
sbb
cdq
mov
xchg
inc
jp
daa
cmc
in
mov
jg
daa
cmc
and
pop
data16
lock
call
ins
retf
(bad)
out
mov
inc
ficomp
inc
push
push
shr
retf
test
push
xchg
sbb
out
in
scas
out
lock
jmp
arpl
pop
sub
sbb
lods
push
mov
mov
test
in
add
push
fisttp
(bad)
(bad)
(bad)
dec
cmp
rcr
fst
je
cmp
out
cmp
and
pop
sbb
cmps
sub
out
(bad)
(bad)
(bad)
mov
cli
aaa
ficom
adc
push
das
arpl
in
(bad)
(bad)
(bad)
(bad)
fild
jmp
movs
pusha
in
sub
xchg
push
xchg
call
xor
iret
or
xchg
(bad)
push
test
lea
movs
loopne
fbstp
(bad)
ret
push
(bad)
(bad)
(bad)
(bad)
cld
rol
mov
aam
xor
mov
cmps
mov
sub
cld
mov
adc
neg
call
in
adc
nop
scas
cmp
int
mov
ret
aad
and
push
ja
(bad)
(bad)
jmp
in
inc
or
push
cwde
cmp
push
sub
(bad)
retf
not
(bad)
jg
aam
and
out
data16
add
retf
stos
pushf
(bad)
(bad)
mov
(bad)
lods
je
iret
jecxz
cmp
sub
sbb
add
stos
(bad)
push
push
call
nop
add
jbe
and
or
or
mov
sub
(bad)
(bad)
(bad)
cli
int
mov
movs
loope
or
push
sar
ins
fwait
call
stos
jl
pop
xor
in
mov
(bad)
(bad)
dec
xor
sub
xor
aad
push
or
add
sbb
push
(bad)
(bad)
(bad)
call
mov
inc
aad
scas
pop
bound
int3
icebp
mov
test
mov
cmp
(bad)
(bad)
(bad)
call
dec
mov
stos
loopne
pop
jae
push
sub
ja
adc
pop
scas
sbb
xchg
cdq
daa
das
add
jmp
jle
mov
(bad)
retf
pushf
scas
aas
out
cwde
jae
sub
(bad)
dec
jo
lahf
inc
pop
push
sub
sbb
das
inc
orps
clc
cmp
add
(bad)
(bad)
(bad)
jmp
test
jne
inc
xchg
fcom
loopne
into
pop
or
stos
sub
push
sti
xor
call
(bad)
(bad)
(bad)
jmp
or
fcomp
inc
inc
and
xchg
push
js
lods
outs
fs
(bad)
(bad)
cmp
xor
mov
or
inc
mov
sbb
cmp
(bad)
inc
xchg
sub
xor
cmp
ds
xor
les
movs
cmp
pusha
push
(bad)
call
stc
in
and
mov
jns
mov
dec
dec
pop
xchg
push
add
je
(bad)
(bad)
call
cmp
mov
push
jno
cwde
arpl
push
and
(bad)
(bad)
jmp
inc
push
mov
cmp
fidivr
or
data16
(bad)
(bad)
call
icebp
aas
je
cmp
shl
in
mov
xchg
push
bound
aam
(bad)
(bad)
(bad)
inc
dec
data16
cmp
xchg
inc
data16
fwait
int
pop
hlt
gs
leave
jge
jmp
push
xchg
add
(bad)
call
push
mov
push
xchg
mov
inc
cmp
inc
mov
and
scas
lods
shl
add
mov
pop
nop
std
ja
ins
mov
les
in
(bad)
(bad)
fbstp
int3
stos
movs
adc
retf
cmc
sahf
mov
mov
cmp
(bad)
(bad)
jg
ror
xchg
add
or
cmp
push
out
repnz
outs
cmp
ins
dec
cdq
mov
or
(bad)
(bad)
call
push
jg
cmp
jnp
mov
inc
and
xchg
lahf
sbb
sub
(bad)
(bad)
(bad)
dec
push
std
adc
pop
push
out
cmp
mov
jo
rcr
inc
arpl
cmps
sbb
(bad)
dec
or
adc
mov
cmps
repz
mov
ror
jae
repz
push
mov
inc
add
(bad)
call
ret
xlat
fdiv
inc
inc
xchg
arpl
leave
ret
out
lock
(bad)
(bad)
mov
popf
enter
or
sbb
imul
fist
bound
cld
(bad)
inc
mov
push
dec
into
pop
sub
test
jmp
xlat
sub
(bad)
jmp
jb
or
inc
pop
jmp
jmp
(bad)
je
ret
mov
popf
cmp
(bad)
jmp
(bad)
adc
sbb
sub
rol
adc
xchg
aam
inc
cmp
call
clc
movs
stc
retf
inc
fst
jl
pop
adc
stc
xchg
adc
inc
jl
sahf
mov
f2xm1
add
dec
lock
clc
rcl
rol
push
jl
nop
ret
sar
mov
jge
(bad)
(bad)
inc
jmp
movs
sub
gs
add
in
cmp
adc
mov
push
cmp
(bad)
call
mov
jnp
repz
sbb
out
daa
inc
sub
sub
neg
hlt
neg
loopne
add
lock
inc
add
in
icebp
pop
fst
cmps
test
(bad)
(bad)
(bad)
push
dec
add
push
rcl
pop
or
and
add
test
scas
(bad)
(bad)
(bad)
dec
daa
movs
jge
xchg
(bad)
push
rol
dec
fs
daa
sub
jge
in
out
mov
lods
hlt
(bad)
(bad)
inc
xchg
xor
sbb
dec
sub
sub
mov
in
loopne
loop
fbstp
pop
pop
jno
scas
jmp
mov
(bad)
(bad)
call
jge
in
jbe
xchg
shl
inc
xchg
jae
mov
in
das
scas
sbb
pop
(bad)
(bad)
(bad)
jmp
enter
out
js
sub
lea
mov
stos
ins
push
adc
stc
dec
ja
cwde
(bad)
leave
mov
mov
mov
sbb
mov
and
adc
(bad)
(bad)
(bad)
inc
lock
mov
push
js
and
icebp
inc
call
inc
ja
loopne
cli
jmp
jmpw
mov
sbb
retf
pop
or
and
(bad)
jmp
ret
or
mov
inc
ss
mov
add
sub
dec
xchg
add
dec
add
(bad)
(bad)
call
cmp
idiv
mov
push
std
pop
jne
cmp
xchg
sub
jmp
mov
aam
add
push
adc
mov
(bad)
(bad)
jmp
ja
retf
aad
(bad)
in
pop
stos
sbb
jmp
cs
sar
mov
repz
jmp
push
arpl
rcl
mov
jp
push
(bad)
cmp
push
psraw
inc
aas
fbld
add
int3
lahf
ror
add
lock
(bad)
jmp
dec
mov
dec
push
sub
fnstcw
into
adc
inc
push
push
or
add
sub
in
mov
(bad)
dec
lods
and
jno
shl
mov
jbe
cld
dec
loope
(bad)
(bad)
call
test
(bad)
jne
xchg
mov
mov
xchg
or
hlt
nop
sti
sbb
test
(bad)
(bad)
(bad)
dec
cwde
nop
jge
mov
mov
stos
popf
sub
repnz
or
movs
jns
cdq
(bad)
int3
or
(bad)
push
dec
inc
addr16
jecxz
jge
loopne
adc
pop
adc
jl
add
cdq
test
les
(bad)
sbb
enter
ret
jae
mov
and
xchg
in
(bad)
mov
inc
inc
jmp
adc
aaa
push
xchg
je
(bad)
(bad)
(bad)
jmp
scas
into
cmp
fbstp
out
cdq
gs
mov
arpl
scas
imul
jle
(bad)
dec
js
jo
not
pop
and
adc
inc
aaa
(bad)
iret
daa
mov
(bad)
inc
inc
cmp
sbb
adc
push
push
(bad)
(bad)
jg
retf
mov
fwait
test
repnz
adc
mov
mov
retf
(bad)
mov
xor
retf
cmp
es
add
scas
aaa
xchg
(bad)
(bad)
(bad)
jmp
jae
aas
sbb
mov
mov
jp
or
push
mov
or
sub
daa
addr16
jmp
int3
adc
(bad)
stos
loop
out
(bad)
cmp
les
hlt
call
(bad)
jmp
push
pushf
jecxz
mov
js
stos
mov
test
icebp
ret
(bad)
mov
xchg
inc
push
cmp
xchg
pusha
or
and
dec
xchg
jo
(bad)
(bad)
call
stc
sub
clc
xor
sub
mov
sub
and
cdq
push
inc
in
(bad)
(bad)
(bad)
jmp
fild
jecxz
in
repnz
inc
xlat
clc
or
pop
push
fnsave
lahf
(bad)
xchg
mov
or
(bad)
(bad)
(bad)
(bad)
fst
bound
or
cwde
imul
push
or
xchg
sbb
in
ret
in
cmps
dec
(bad)
jmp
or
xor
inc
jl
jno
out
mov
aas
add
add
lahf
call
sar
mov
enter
push
test
scas
add
rcl
pop
add
mov
sub
icebp
(bad)
push
and
inc
(bad)
xlat
lods
cmp
lock
cmp
aas
std
sub
pop
or
sar
mov
jg
xchg
lods
mov
sub
leave
and
add
idiv
(bad)
(bad)
(bad)
(bad)
frstor
jecxz
inc
dec
cmc
mov
jecxz
or
inc
sbb
in
dec
jmp
jp
(bad)
(bad)
dec
adc
jmp
outs
out
push
cmp
clc
ja
stos
inc
mov
cli
(bad)
push
inc
ins
mov
iret
(bad)
icebp
out
jge
out
outs
ja
in
call
cmc
sbb
pushf
dec
xor
add
pop
and
push
dec
mov
cmp
fs
(bad)
mov
push
addr16
cdq
aaa
fsub
repz
loop
push
and
adc
adc
idiv
mov
and
dec
mov
daa
ins
in
push
cmc
jle
aas
lahf
lock
div
jno
cld
or
(bad)
(bad)
(bad)
fld
gs
or
out
xchg
jb
adc
call
(bad)
jg
(bad)
jg
mov
pmaxub
mov
aad
retf
sbb
icebp
loop
int
mov
leave
sub
(bad)
(bad)
call
cmps
movs
scas
jns
push
push
push
ss
jbe
sbb
loope
les
xchg
inc
in
(bad)
mov
inc
test
or
call
or
ror
sar
sub
pop
stc
ins
mov
das
loope
(bad)
(bad)
jmp
jnp
cld
and
pop
jbe
jno
outs
imul
mov
push
cld
call
xor
jp
rcl
aam
mov
ret
into
mov
cmp
jg
(bad)
in
inc
inc
pushf
ja
or
cmp
mul
cmp
fistp
ret
inc
inc
(bad)
jge
ss
push
mov
jno
sub
cld
test
mov
push
sahf
enter
mov
inc
ud0
cld
or
jae
jge
sbb
adc
call
or
mov
les
and
lods
fsub
and
cmp
psubsb
div
das
dec
lahf
icebp
outs
mov
test
fdiv
jbe
push
jo
pop
inc
sub
jl
mov
xor
jge
(bad)
(bad)
dec
jle
sub
nop
out
movs
mov
test
cmp
gs
(bad)
(bad)
(bad)
jg
fidiv
and
cmp
cli
shr
mov
js
xchg
dec
(bad)
(bad)
(bad)
call
adc
push
cmp
mov
push
pop
stos
aad
push
add
jae
loop
pop
mov
das
rcl
aam
jo
test
xor
dec
pop
add
test
(bad)
(bad)
jmp
cmp
cmp
sub
call
push
or
add
mov
pop
fnsave
push
xor
(bad)
(bad)
push
test
jbe
ror
adc
jae
shr
in
jmp
sub
inc
xchg
cmps
outs
add
sub
fsubr
adc
mov
sbb
pop
ret
(bad)
jmp
adc
add
cmp
das
add
jmp
sub
movs
pusha
(bad)
(bad)
(bad)
call
xchg
xchg
arpl
mov
loope
mov
imul
fsub
inc
test
movs
dec
cld
stos
sbb
cmps
dec
push
iret
aad
and
or
push
call
and
ss
xchg
popf
or
sbb
test
and
push
push
sub
xchg
inc
dec
(bad)
(bad)
fild
add
fistp
pop
pop
sub
push
and
int
(bad)
(bad)
call
shl
add
jp
loopne
cmp
cmp
lahf
or
push
inc
dec
stos
mov
add
inc
sub
sbb
xchg
inc
ds
addr16
sbb
test
pop
lea
test
(bad)
(bad)
(bad)
(bad)
mov
xchg
sbb
push
cmps
sbb
push
addr16
fnstsw
ror
mov
xchg
pop
mov
inc
jnp
out
imul
shl
sub
jge
mov
inc
lea
and
jmp
pop
mov
pop
add
in
and
push
adc
push
into
mov
xchg
(bad)
(bad)
(bad)
call
aam
cdq
cdq
pop
and
(bad)
adc
mov
cs
mov
or
xchg
jo
(bad)
(bad)
(bad)
dec
fimul
and
rol
loop
pop
mov
in
jo
ret
(bad)
(bad)
call
lods
lahf
fs
test
xor
movs
and
and
pop
nop
sub
in
enter
(bad)
(bad)
inc
shl
jle
inc
scas
call
arpl
(bad)
(bad)
jmp
cmp
(bad)
movs
nop
aam
fiadd
or
in
addr16
jmp
jmp
jns
cwde
addr16
jle
xchg
sub
add
or
fnstcw
mov
sbb
lods
cmp
jb
js
(bad)
lods
(bad)
call
push
cmp
xor
sbb
(bad)
(bad)
test
sub
fild
mov
pop
add
mov
xchg
or
and
lock
fs
gs
(bad)
mov
adc
sub
dec
or
lds
dec
mov
mov
mov
(bad)
(bad)
push
(bad)
fisttp
pop
aam
or
aaa
mov
add
adc
scas
js
fucomi
fnstsw
(bad)
add
(bad)
jmp
in
jl
jbe
loop
sbb
(bad)
push
adc
xor
or
(bad)
mov
rol
std
lea
sbb
sub
mov
or
es
(bad)
(bad)
call
dec
rol
push
sub
rol
hlt
aas
add
lods
jne
je
xchg
mov
push
sbb
lahf
(bad)
(bad)
(bad)
jmp
jne
pop
cmp
rcl
jnp
jnp
jns
or
(bad)
xor
enter
(bad)
(bad)
(bad)
inc
icebp
inc
dec
sbb
adc
(bad)
xor
nop
mov
leave
mov
push
or
call
sbb
jp
lods
xchg
xchg
(bad)
mov
int
jp
add
(bad)
out
clc
fld
enter
dec
cmp
inc
inc
les
fcos
call
xchg
push
cmp
inc
jo
push
retf
sbb
lahf
xchg
pop
adc
push
sbb
(bad)
(bad)
(bad)
dec
es
aad
xchg
xor
hlt
mov
pop
fstp
push
(bad)
mov
dec
outs
in
mov
outs
mov
(bad)
(bad)
(bad)
call
mov
jmp
(bad)
inc
mov
lds
pop
inc
xor
(bad)
jmp
xor
inc
mov
daa
add
js
mov
push
jmp
(bad)
(bad)
(bad)
inc
sbb
sub
icebp
mov
push
or
and
add
xchg
fwait
adc
xor
(bad)
(bad)
jmp
jb
ins
push
mov
mov
mov
shr
dec
dec
sub
pop
jmp
das
rcr
lock
into
adc
in
dec
test
(bad)
dec
mov
sahf
data16
mov
cld
mov
jmp
(bad)
jg
out
ds
aam
cmps
cmp
stos
fmul
xchg
jo
jb
ja
mov
xor
push
loope
sbb
mov
in
sbb
(bad)
(bad)
(bad)
call
sub
movmskps
sub
push
das
add
mov
xor
lods
jnp
lods
push
sti
(bad)
jg
call
dec
sub
nop
rcl
sbb
mov
mov
(bad)
inc
and
pop
inc
mov
push
aam
cmp
push
add
(bad)
(bad)
out
push
jb
call
imul
xchg
mov
test
rcr
pop
pop
xor
(bad)
(bad)
dec
jecxz
arpl
mov
jb
imul
inc
or
aam
sub
jmp
daa
xlat
inc
dec
imul
adc
adc
and
mov
(bad)
call
xchg
cmp
xchg
jmp
cld
lahf
adc
xor
sbb
(bad)
jmp
pop
les
xchg
mov
sub
mov
hlt
or
mov
xchg
fdivrp
(bad)
inc
adc
mov
sub
aas
addr16
in
mov
push
mov
mov
mov
jmp
enter
cli
jnp
fldenv
sbb
retf
jmp
jae
sub
(bad)
rcl
scas
leave
push
scas
dec
cmp
add
push
mov
cmps
push
mov
clc
inc
rcr
not
data16
mov
enter
pushf
cli
mov
dec
push
mov
cs
sub
call
jo
sbb
mov
sub
jmp
xchg
ins
(bad)
cli
mov
call
cs
mov
in
cmp
jmp
dec
push
(bad)
ins
add
lods
mov
jmp
push
lahf
stos
inc
test
aad
loope
jmp
rol
adc
stos
test
shl
sub
call
(bad)
jmp
out
mov
xchg
aam
jle
add
sbb
hlt
aad
outs
xchg
mov
clc
lds
inc
fimul
mov
adc
xchg
popf
push
leave
cbw
in
sub
adc
pop
xlat
(bad)
push
aaa
add
xchg
mov
(bad)
cmp
mov
ins
fldl2e
popa
xor
(bad)
(bad)
(bad)
jg
retf
fwait
mov
call
aas
loop
adc
pop
dec
cld
sub
add
add
(bad)
inc
scas
aaa
xor
push
out
push
sbb
test
adc
pop
pop
push
nop
cli
ss
cmps
test
in
(bad)
push
aas
rcr
cmps
bound
scas
jne
push
cmp
lea
or
sub
mov
jmp
test
mov
sahf
cs
leave
aam
call
jmp
xchg
ins
dec
cwde
mov
jne
xchg
adc
fstp
arpl
(bad)
cli
ins
bnd
xchg
test
ret
push
lock
pop
dec
cs
leave
ret
push
sub
popa
lods
cmp
cmps
cdq
mov
(bad)
(bad)
jmp
lahf
test
xchg
sti
sub
outs
inc
clc
call
sahf
fild
test
(bad)
(bad)
(bad)
cmp
mov
arpl
mov
cdq
(bad)
mov
jge
add
mov
movs
pop
mov
sbb
(bad)
(bad)
(bad)
mov
or
xor
lahf
loope
fstp
mov
in
inc
mov
ror
stc
and
cmc
(bad)
(bad)
(bad)
inc
jmp
add
push
dec
lods
cmp
aam
cli
mov
lahf
mov
sub
dec
cmp
ins
ss
retf
sbb
jne
jmp
(bad)
(bad)
lahf
and
cmps
adc
xlat
mov
(bad)
(bad)
dec
in
aas
jmp
add
out
(bad)
hlt
int
psubusw
sbb
dec
dec
hlt
(bad)
push
jg
clc
(bad)
pop
xchg
xor
inc
lock
mov
pop
mov
jnp
xchg
test
(bad)
(bad)
out
(bad)
pop
jle
pop
pop
sbb
vshufpd
sub
add
xchg
xlat
in
mov
jno
jmp
(bad)
dec
jmp
pop
mov
jne
sub
sbb
xor
std
xchg
inc
xor
mov
mov
scas
mov
adc
push
xchg
shl
outs
or
js
fcomp
out
cwde
(bad)
repnz
sbb
int3
dec
sub
or
iret
pop
js
icebp
test
fcomp
mov
loopne
(bad)
dec
pop
sbb
sub
sbb
cmp
test
fwait
hlt
(bad)
call
jp
mov
in
xor
inc
pop
xchg
push
repnz
fldenv
sahf
cmp
push
push
push
or
or
movs
cs
sti
sbb
(bad)
jmp
dec
rcr
ss
mov
mov
xor
movs
sub
inc
xchg
push
push
mov
scas
clc
dec
pop
bound
ror
mov
jmp
(bad)
(bad)
cmp
pushf
loop
test
in
sub
pop
outs
cmp
imul
int3
xor
adc
call
into
aaa
cmps
sub
mov
mov
mov
sahf
gs
cmp
imul
dec
les
push
ins
mov
popa
push
sar
(bad)
(bad)
mov
fldenv
js
es
pop
lock
test
leave
jecxz
(bad)
(bad)
dec
or
pop
retf
rcl
xchg
fwait
test
xchg
dec
in
shl
pushf
mov
cmps
(bad)
jmp
mov
mov
aam
pushf
mov
cwde
sub
loop
sub
cld
out
std
cmc
(bad)
(bad)
(bad)
mov
jbe
dec
dec
rcl
imul
mov
jno
dec
lock
call
adc
xchg
ficomp
in
(bad)
in
or
ins
push
ss
std
or
adc
leave
cmp
arpl
push
je
(bad)
(bad)
push
nop
ss
ror
mov
add
rol
aas
test
mov
(bad)
(bad)
call
push
stc
push
les
lock
xchg
loopne
sub
cmp
scas
or
mov
(bad)
(bad)
(bad)
jmp
sbb
fdiv
lock
fld
cld
lahf
mov
push
into
les
xor
stc
in
push
push
pop
fs
fisub
fisttp
push
mov
mov
sub
xchg
movs
je
xchg
sub
int
or
(bad)
(bad)
jg
xchg
dec
mov
mov
(bad)
arpl
fldenv
(bad)
jg
call
xchg
aaa
ins
pop
mov
sti
push
lods
mov
jmp
dec
push
adc
nop
es
(bad)
call
mov
dec
icebp
ret
push
pop
out
sub
ja
icebp
out
xchg
mov
sub
sbb
mov
sbb
pop
cli
(bad)
fild
sbb
inc
rcr
jnp
jns
pop
vcvtsi2ss
aaa
or
mov
shr
pop
es
in
(bad)
cmp
in
jg
jmp
xchg
outs
call
sbb
dec
or
push
inc
in
popf
mov
mov
cdq
push
(bad)
shl
scas
and
daa
add
jge
inc
and
push
and
xchg
cmp
adc
sbb
imul
cld
xor
je
jecxz
std
cwde
cld
out
and
aas
(bad)
(bad)
(bad)
(bad)
jmp
mov
sbb
push
mov
xchg
inc
scas
mov
fndisi(8087
in
mov
bnd
sti
aad
in
data16
inc
(bad)
(bad)
jg
mov
lods
sub
hlt
sub
fstp
loop
sub
mov
(bad)
push
mov
jns
push
data16
outs
repz
mov
and
pop
and
xchg
stos
ja
or
sbb
cmp
cmps
xor
rcl
es
loopne
mov
pop
or
sti
cld
js
rcr
shl
div
(bad)
(bad)
jmp
dec
movs
adc
add
jne
loop
nop
in
scas
(bad)
fnstsw
mov
mov
xchg
(bad)
(bad)
inc
int
pop
add
mov
ja
fcomip
(bad)
ins
(bad)
push
push
pop
mov
(bad)
out
clc
jg
(bad)
push
je
inc
js
mov
cli
inc
jp
and
cmp
ja
iret
jl
(bad)
lock
std
mov
inc
xchg
ins
sub
sti
mov
(bad)
call
inc
push
xor
mov
leave
mov
pop
(bad)
(bad)
jg
test
bound
mov
sub
lock
mov
js
xchg
(bad)
push
in
sbb
out
cmp
ret
pop
sbb
add
jl
mov
xor
aam
jbe
mov
repz
(bad)
into
adc
add
push
inc
lock
lea
inc
bound
push
fld
int
je
(bad)
xor
mov
xchg
sbb
jl
mov
mov
popf
test
add
pop
inc
add
inc
xor
loopne
inc
push
icebp
mov
clc
aaa
adc
mov
cmp
mov
dec
lods
out
out
fistp
jmp
pop
or
mov
dec
(bad)
mov
pop
std
les
adc
adc
xchg
mov
sub
cmc
in
pop
aad
sar
mov
pop
add
outs
lea
mov
(bad)
(bad)
(bad)
jg
push
xor
mov
sbb
mov
cmp
add
sbb
(bad)
push
aaa
stos
inc
int
cmp
mov
jnp
daa
lea
jecxz
cdq
sub
or
shl
inc
add
xor
ja
push
or
dec
push
mov
sahf
(bad)
(bad)
(bad)
call
arpl
mov
xor
mov
push
enter
jae
int3
add
repz
sar
(bad)
(bad)
jmp
gs
xor
mov
mov
sub
adc
rcr
xlat
push
add
mov
xchg
stc
add
adc
(bad)
out
clc
jmp
cwde
inc
mov
das
push
fcom
jle
pop
push
cmp
lea
or
(bad)
(bad)
push
sbb
int
jb
adc
or
add
mov
shr
call
dec
mov
dec
cmc
stos
ret
cwde
stc
sub
jne
add
hlt
or
(bad)
(bad)
(bad)
inc
stos
f2xm1
test
mov
adc
mov
jg
jmp
dec
icebp
ins
(bad)
call
lods
(bad)
xlat
push
push
(bad)
and
scas
bound
cwde
loope
icebp
mov
(bad)
(bad)
jmp
pop
or
nop
jns
adc
xchg
cs
(bad)
and
ss
sbb
(bad)
(bad)
(bad)
jmp
leave
push
(bad)
xchg
repz
mov
mov
xor
test
xor
push
xchg
(bad)
(bad)
(bad)
jle
inc
add
sub
popf
dec
sbb
cmp
push
xchg
pop
and
fcomip
call
push
into
or
xor
pop
sbb
retf
(bad)
dec
pop
movs
add
rcl
add
jns
mov
inc
dec
mov
or
(bad)
dec
jmp
test
add
jmp
xor
and
std
(bad)
(bad)
inc
mov
sub
retf
sahf
cmp
sub
loope
out
arpl
add
clc
(bad)
push
test
test
or
xchg
adc
icebp
(bad)
mov
xor
movs
dec
test
pushf
pop
cmp
mov
dec
int3
sub
inc
and
pop
femms
sbb
jnp
pop
dec
cld
(bad)
(bad)
call
cli
mov
popa
fdivp
xchg
add
sbb
bound
retf
nop
inc
inc
jg
call
cli
mov
ja
dec
pop
cmp
in
xchg
pop
pop
sbb
cmp
nop
add
push
push
mov
push
dec
dec
and
pop
push
lahf
ja
mov
dec
jo
int
push
cmp
lahf
fwait
cmp
mov
inc
mov
mov
mov
fld
mov
retf
xchg
xor
int3
int
xor
or
mov
mov
test
mov
mov
aad
xor
ret
mov
imul
pop
les
std
inc
(bad)
(bad)
jmp
shr
add
nop
mov
xchg
clc
cmps
(bad)
(bad)
dec
and
push
ror
jno
push
aas
sbb
jb
mov
(bad)
(bad)
(bad)
call
lea
and
jge
hlt
jmp
pop
jmp
mov
cmp
(bad)
jg
inc
retf
push
inc
push
std
das
dec
mov
ret
hlt
pop
and
popa
(bad)
push
iret
(bad)
(bad)
mov
pop
mov
dec
inc
fwait
xor
pop
ror
int
cmp
dec
jp
or
(bad)
jmp
(bad)
and
jl
and
push
daa
push
or
fcmovnu
scas
cmp
jg
push
pop
dec
hlt
pop
(bad)
(bad)
(bad)
push
shl
shl
add
jno
and
push
rcr
aas
pop
cmps
xor
add
aaa
or
hlt
ins
or
xchg
fmulp
xchg
sbb
ds
adc
sub
cli
pushw
mov
mov
jae
inc
adc
inc
xor
cld
in
int3
pop
inc
in
shr
push
(bad)
dec
adc
(bad)
(bad)
inc
cld
imul
inc
pop
or
push
sar
push
or
fidiv
nop
pushf
mov
call
cmp
test
or
lds
rcl
gs
xor
inc
xchg
scas
ins
sub
xchg
or
mov
sbb
mov
(bad)
jg
and
into
stos
cs
xchg
cmp
jmp
inc
repz
popf
(bad)
(bad)
(bad)
jmp
xchg
retf
int3
and
sbb
dec
mov
loop
scas
imul
pop
mov
dec
(bad)
(bad)
(bad)
jmp
add
adc
mov
pushw
fiadd
add
sbb
push
(bad)
(bad)
(bad)
call
lds
xchg
out
push
or
jp
cmc
pop
jl
xchg
pop
xlat
pop
jmp
add
popa
push
or
jmp
jmp
retf
leave
dec
mov
outs
test
xchg
or
push
inc
add
fdivr
(bad)
(bad)
jmp
pusha
int
push
retf
lds
inc
stos
cmp
gs
xor
xor
(bad)
push
(bad)
push
daa
ss
cmps
adc
inc
(bad)
mov
sub
and
dec
outs
(bad)
(bad)
(bad)
push
xor
rcl
push
adc
pop
mov
or
mov
mov
xchg
mov
xchg
jnp
aam
(bad)
jmp
(bad)
mov
movs
je
sbb
ds
call
or
hlt
fs
out
cli
(bad)
out
bound
clc
push
adc
mov
rol
and
clc
(bad)
(bad)
(bad)
push
xchg
(bad)
or
clc
imul
shr
js
fidiv
jo
aas
mov
push
push
test
xchg
retf
(bad)
stos
inc
rcl
xor
jns
push
(bad)
fwait
inc
ins
dec
xchg
cmp
(bad)
jg
or
sub
retf
jo
adc
lea
xlat
movs
aaa
hlt
(bad)
jg
lods
in
mov
and
cmp
jle
cmp
(bad)
jg
jo
sar
and
cdq
push
in
aam
inc
jns
jae
push
popa
or
and
test
aad
xor
inc
sub
cmp
xchg
addr16
push
mov
inc
dec
xor
jmp
jb
mov
sbb
cmp
dec
mov
(bad)
(bad)
call
add
inc
popa
sub
cdq
jmp
sub
repnz
and
mov
call
xchg
cs
scas
push
jle
dec
pop
adc
call
imul
sub
adc
push
fs
xchg
outs
dec
xchg
jo
cdq
das
jmp
inc
xchg
fistp
je
movs
and
xchg
frstor
cmc
test
xchg
add
outs
xchg
cmps
add
pop
pop
mov
(bad)
cld
les
mov
dec
je
icebp
mov
js
stc
(bad)
inc
sub
adc
jg
ror
imul
fwait
jne
mov
pop
mov
cli
inc
call
in
adc
ficom
(bad)
dec
push
sar
(bad)
jne
test
adc
pop
shr
lahf
sub
(bad)
(bad)
dec
mov
add
and
call
stc
stos
(bad)
ds
mov
out
add
dec
ror
mov
pop
jb
pop
and
int3
retf
lods
(bad)
(bad)
dec
ret
sub
jae
mov
jg
fdivr
ds
and
(bad)
(bad)
call
jbe
out
cs
mov
test
mov
pop
mov
pop
pop
jne
or
and
push
into
cmp
leave
sbb
pop
sub
inc
mov
cmp
fidiv
dec
or
(bad)
(bad)
(bad)
in
mov
dec
arpl
dec
ja
sahf
mov
xlat
jmp
aaa
dec
sub
cwde
repnz
cmc
pop
in
dec
adc
(bad)
(bad)
inc
dec
gs
or
and
sub
and
adc
ret
sbb
push
mov
pop
loop
ret
mov
sti
sub
adc
mov
lahf
lahf
or
inc
cld
or
call
dec
sub
out
pop
les
(bad)
retf
(bad)
mov
mov
cdq
and
(bad)
push
mov
(bad)
fistp
add
dec
fist
stos
ins
inc
aad
pop
fdivr
xor
movs
mov
out
mov
xor
xor
pushw
xchg
jbe
and
jp
jle
fist
(bad)
(bad)
mov
ret
movs
or
xor
ja
aam
mov
out
(bad)
jl
sar
call
and
cmp
push
int3
mov
popa
lds
std
(bad)
(bad)
push
push
outs
lods
dec
ins
inc
xchg
or
fild
sub
call
fisttp
(bad)
mov
mov
push
call
fld1
dec
sti
stos
mov
mov
loope
sbb
div
add
scas
(bad)
fisttp
push
fwait
bound
hlt
imul
shl
das
adc
(bad)
(bad)
(bad)
jmp
xlat
mov
pop
push
push
xor
aad
icebp
lods
ret
les
mov
fst
icebp
iret
call
dec
cmps
in
cdq
pop
into
call
fistp
jmp
adc
and
sub
sbb
mov
nop
xchg
enter
(bad)
jmp
(bad)
and
mov
ss
xor
xor
push
aad
xor
jnp
mov
mov
(bad)
mov
or
sub
fidivr
imul
xchg
xchg
rcr
iret
mov
in
jecxz
(bad)
push
lock
ss
cmp
mov
jge
(bad)
call
xlat
ins
jb
ins
fnstenv
xor
not
or
icebp
add
jo
sbb
pop
sar
call
loop
ror
mov
loopne
(bad)
(bad)
(bad)
inc
xor
mov
mov
out
push
xchg
push
stos
in
popa
fst
xchg
movs
in
xchg
lods
mov
sub
cld
imul
repz
push
jmp
lds
or
jmp
(bad)
(bad)
push
xor
pop
lods
push
mov
mov
or
test
sbb
and
call
cld
(bad)
cli
inc
fcmovnu
sub
mov
ficom
sub
xor
jbe
mov
pop
(bad)
ins
pop
bound
fs
or
out
jne
and
sti
jecxz
icebp
xchg
push
and
(bad)
(bad)
(bad)
mov
push
xor
pop
jge
adc
ror
mov
inc
and
popf
(bad)
fcomip
(bad)
mov
stos
outs
or
mov
pop
arpl
imul
dec
(bad)
ja
fsubr
sub
daa
inc
dec
fimul
hlt
cmp
pusha
(bad)
mov
pop
add
gs
mov
cmp
cli
pop
fdivr
(bad)
(bad)
jmp
ss
fidiv
cmp
ins
stos
gs
rcr
adc
leave
mov
push
stos
outs
dec
and
dec
xchg
cvtps2pd
jae
dec
dec
shl
push
(bad)
inc
xchg
fild
mov
aas
sub
inc
mov
push
adc
(bad)
(bad)
dec
test
sub
push
ds
push
and
ds
cld
sub
(bad)
jmp
pop
test
ret
cld
aas
xor
jmp
sahf
push
xchg
fwait
test
jbe
pop
lahf
daa
mov
nop
inc
push
jl
fild
js
xchg
cmc
jge
push
out
mov
aad
imul
and
je
popf
es
xchg
cld
stc
pop
frstor
xor
pop
sub
mov
mov
jle
iret
jp
call
(bad)
call
retf
int
shl
outs
inc
out
outs
jbe
xchg
data16
(bad)
jge
outs
add
and
push
pusha
cli
dec
test
mov
(bad)
(bad)
push
xlat
mov
push
pusha
dec
call
cmps
adc
xor
pop
and
adc
mov
scas
(bad)
jmp
out
inc
push
jns
mov
lea
into
pop
pop
xchg
out
gs
mov
mov
push
ss
xchg
jb
push
shr
xlat
push
mov
xchg
ins
inc
(bad)
(bad)
(bad)
push
inc
fxtract
movs
dec
mov
lds
addr16
cmc
es
mov
mov
mov
mov
ins
lods
pop
jbe
sti
(bad)
mov
xlat
jnp
mov
xchg
push
fs
fbld
xlat
jmp
adc
aam
out
gs
sub
xor
retf
jp
jl
aam
adc
jmp
loope
push
pop
(bad)
(bad)
(bad)
dec
dec
fisubr
in
popa
int3
dec
outs
repz
add
jae
mov
sbb
push
leave
cld
(bad)
(bad)
(bad)
jmp
mov
aad
faddp
xor
mov
jg
fwait
push
test
aas
arpl
sub
imul
call
adc
ror
sub
sbb
fwait
scas
lods
out
fdiv
dec
repz
ins
jbe
outs
pop
repnz
(bad)
(bad)
(bad)
cli
jbe
sub
scas
xor
inc
add
cli
push
addr16
mov
pop
jmp
push
clc
(bad)
jnp
popf
(bad)
or
in
in
sbb
sub
mov
int
retf
(bad)
push
retf
jg
dec
cwde
cld
cmp
xchg
jp
repz
fchs
push
sub
add
sub
jle
ins
scas
pop
mov
je
sub
idiv
xchg
out
das
and
and
scas
(bad)
jmp
mov
xchg
xchg
les
cwde
ins
mov
pop
cmps
add
mov
pushf
adc
xchg
std
(bad)
(bad)
inc
xor
ins
sti
aaa
shl
xchg
push
push
fwait
pop
scas
inc
cwde
test
mov
addr16
(bad)
call
and
pop
ds
push
and
jl
or
xor
hlt
(bad)
mov
jno
test
mov
ret
xchg
pop
(bad)
lds
stc
(bad)
mov
or
cmc
sbb
jbe
hlt
mov
mov
jns
(bad)
(bad)
(bad)
cmp
shr
and
pxor
bound
movs
test
mov
push
ret
pop
xchg
mov
fld
inc
push
hlt
ss
pushf
xor
stos
inc
(bad)
(bad)
(bad)
dec
pop
popf
adc
fcmovnbe
nop
dec
pop
pop
repz
cmc
xchg
xchg
and
cmp
ja
(bad)
sub
fdivrp
ja
push
or
not
or
push
int
mov
cmps
xor
std
dec
bsf
iret
dec
pop
lock
(bad)
out
sub
into
retf
mov
aam
(bad)
(bad)
(bad)
out
or
and
(bad)
std
mov
retf
dec
sub
push
dec
push
mov
fld
jb
imul
(bad)
(bad)
jmp
pop
sub
mov
mov
aaa
pop
inc
dec
and
adc
movs
dec
jp
(bad)
pop
data16
arpl
(bad)
(bad)
fbstp
not
fcomp
(bad)
shr
mov
hlt
jnp
sti
jne
fnstsw
lds
enter
(bad)
jmp
(bad)
inc
xor
fmul
sar
jnp
icebp
push
or
or
(bad)
(bad)
mov
and
dec
dec
inc
adc
enter
mov
pop
xchg
(bad)
call
ret
out
pushf
xchg
ins
or
fdiv
cdq
inc
sbb
mov
data16
(bad)
(bad)
dec
dec
int
inc
mov
ss
std
(bad)
in
fstp
jmp
xchg
sub
aaa
xchg
push
sahf
mov
jo
push
ds
(bad)
call
fdiv
iret
mov
lahf
ucomiss
(bad)
adc
xor
inc
mov
and
test
test
and
jns
add
add
jg
adc
(bad)
nop
cmp
into
cmp
(bad)
cmp
jmp
adc
sbb
pop
ss
arpl
sub
call
lods
xchg
dec
cli
loope
stos
pop
lods
push
mov
mov
mov
mov
cmp
scas
xchg
bound
mov
(bad)
(bad)
dec
aaa
sub
(bad)
hlt
ja
push
add
rcl
loope
mov
scas
sti
repz
imul
(bad)
dec
xor
mov
xor
hlt
fwait
adc
daa
add
mov
(bad)
jg
jmp
mov
push
mov
dec
mov
jbe
cdq
xor
jge
mov
cs
std
(bad)
dec
push
movs
loopne
push
nop
mov
in
das
adc
sti
pop
ins
jmp
shl
aam
mov
mov
ror
xchg
jb
data16
mov
fxch
dec
sub
pushf
in
sar
cld
(bad)
push
xchg
pop
sbb
push
lods
in
jp
lods
xor
imul
gs
(bad)
(bad)
jmp
jl
pop
inc
or
adc
mov
xchg
mov
shl
imul
mov
sub
mov
outs
or
and
fsubr
je
(bad)
cdq
cmps
mov
xchg
sub
mov
(bad)
inc
sbb
mov
mov
fwait
ins
mov
sub
xchg
data16
(bad)
(bad)
jmp
hlt
xchg
push
mov
add
rcl
jecxz
pop
mov
cmp
scas
data16
mov
out
mov
inc
jo
repz
arpl
and
cs
ja
jmp
push
pop
or
jg
pop
xchg
repnz
cmp
mov
(bad)
(bad)
(bad)
call
add
pushf
xor
cdq
mov
jmp
push
fwait
add
fwait
cs
call
inc
outs
outs
cmps
and
int
int
mov
mov
adc
mov
pop
popf
mov
inc
aad
rcr
in
retf
inc
test
add
call
rcl
lds
xor
jmp
fdiv
mov
inc
das
mov
add
cdq
and
inc
xor
or
fwait
(bad)
push
jp
adc
pushf
adc
pop
std
shl
jb
jns
(bad)
jmp
sbb
ins
sar
push
mov
sub
(bad)
pop
cmp
inc
fimul
push
xor
xchg
xchg
fild
lock
push
movs
inc
scas
or
lahf
mov
scas
push
xor
mov
call
mov
mov
into
(bad)
sbb
rol
icebp
daa
add
clc
xor
jle
dec
mov
or
jl
arpl
xor
jns
xchg
das
xchg
(bad)
(bad)
(bad)
call
out
xchg
and
retf
dec
dec
retf
in
scas
mov
out
dec
dec
inc
inc
or
ins
mov
(bad)
call
dec
xor
jbe
data16
mov
fdecstp
mov
into
mov
(bad)
cli
dec
adc
aaa
movs
loopne
xchg
push
mov
cld
(bad)
ficomp
aas
inc
mov
xlat
sbb
cmp
mov
cli
das
and
popf
das
mov
rcr
and
(bad)
(bad)
mov
test
mov
test
pop
push
int3
dec
clc
aaa
inc
(bad)
(bad)
mov
retf
mov
and
aaa
push
push
push
cmp
popa
test
adc
(bad)
(bad)
jmp
inc
adc
mov
sbb
xchg
cmp
retf
pop
hlt
retf
and
dec
push
rcl
inc
push
mov
push
sbb
mov
movs
int
and
mov
aam
(bad)
(bad)
(bad)
jmp
je
add
cmc
aam
xchg
cmc
sar
rcr
stc
mov
ret
(bad)
(bad)
(bad)
call
js
push
or
mov
xor
cwde
cwde
adc
cmps
scas
stc
cdq
lods
inc
cdq
pop
stos
mov
ret
xchg
pop
fs
(bad)
(bad)
dec
pop
push
lahf
pushf
dec
retf
xchg
sub
add
ins
ficomp
int
sbb
(bad)
inc
aad
push
pop
retf
pop
xchg
jb
cmp
dec
addr16
mov
aaa
mov
(bad)
(bad)
(bad)
(bad)
cmp
adc
cmp
imul
fst
(bad)
push
movs
ins
jns
js
(bad)
(bad)
(bad)
push
test
jno
dec
in
and
fist
icebp
pop
(bad)
mov
jnp
(bad)
(bad)
dec
push
int3
dec
sbb
fcmovne
add
mov
push
lods
cmp
int3
inc
cld
movs
movs
push
call
loop
add
movs
sbb
or
pushf
push
sar
std
mov
imul
jmp
cmc
arpl
neg
(bad)
(bad)
jmp
pop
ins
mov
outs
push
popf
xchg
mov
iret
mov
xor
sar
dec
dec
bound
mov
push
nop
add
add
pop
or
shl
push
cli
inc
xchg
sbb
(bad)
call
daa
icebp
pop
or
adc
mov
out
aad
inc
xchg
inc
cld
imul
sbb
(bad)
(bad)
(bad)
cmp
(bad)
repz
mov
and
dec
adc
out
push
xlat
cmp
arpl
in
(bad)
(bad)
jmp
mov
call
ror
dec
scas
cmps
inc
cmp
mov
std
jbe
ja
outs
pop
or
jmp
push
cli
cmp
cmp
(bad)
dec
js
push
dec
test
mov
mov
jecxz
scas
add
mov
mov
jmp
(bad)
(bad)
dec
dec
or
mov
shr
dec
push
lea
jmp
pop
in
mov
push
ja
inc
mov
xchg
xchg
push
jl
int
cwde
adc
fxtract
(bad)
(bad)
mov
test
fwait
mov
jmp
mov
xor
test
xchg
in
xor
pop
xchg
movs
and
jmp
add
cwde
(bad)
call
dec
mov
mov
fnsave
arpl
sbb
or
dec
rcl
cmp
mov
mov
mov
and
push
ds
(bad)
(bad)
(bad)
call
and
adc
jns
push
push
loope
movs
cmps
into
dec
mov
sbb
pop
repnz
(bad)
(bad)
(bad)
call
pop
push
sbb
dec
nop
daa
je
jp
test
scas
adc
(bad)
mov
leave
jmp
fst
popf
jbe
dec
or
dec
add
xchg
jo
jb
jg
loope
ret
fiadd
or
jp
out
loopne
mov
jno
(bad)
(bad)
cmp
adc
cld
mov
pop
push
xchg
jbe
shl
(bad)
jg
mov
std
in
cdq
dec
fidiv
sub
jbe
mov
(bad)
(bad)
(bad)
jmp
mov
xchg
dec
ret
cwde
(bad)
push
std
add
dec
mov
mov
iret
outs
mov
mov
fs
cdq
cmp
mov
je
cmps
pusha
push
or
rcl
lods
shl
stos
pop
cmp
cmp
or
leave
sbb
inc
(bad)
(bad)
fisttp
sub
enter
dec
sub
fstp
jmp
sub
mov
fwait
loopne
or
outs
xor
js
push
jecxz
(bad)
(bad)
(bad)
jmp
test
adc
mov
inc
sub
pop
sahf
addr16
shl
movs
icebp
and
jne
(bad)
(bad)
(bad)
call
xchg
xor
in
mov
sbb
xchg
cmp
jle
mov
fnstsw
mov
lea
addr16
or
(bad)
push
imul
(bad)
pop
lock
movs
cmp
int
jno
xor
out
ins
xchg
push
pop
mov
mov
mov
dec
sub
push
pop
test
mov
nop
in
adc
fnstsw
mov
shl
icebp
in
xchg
in
push
daa
mov
and
fistp
jl
adc
pop
lock
call
dec
inc
mov
mov
div
jb
adc
movs
cwde
cmp
(bad)
dec
scas
cmp
push
cmp
or
scas
or
je
jb
or
adc
(bad)
(bad)
push
mov
mov
lahf
es
adc
sub
jne
push
add
xlat
or
push
inc
cmp
loopne
test
jg
(bad)
jbe
cdq
jmp
scas
fs
outs
(bad)
(bad)
(bad)
jg
dec
push
xchg
ja
outs
daa
cwde
jo
sbb
mov
outs
in
outs
mov
pop
add
jae
jp
clc
mov
pushf
or
or
jecxz
loope
(bad)
sbb
mov
and
and
retf
scas
adc
loope
push
push
sbb
mov
cmps
dec
inc
sahf
(bad)
push
gs
(bad)
jecxz
mov
scas
loop
add
cs
je
cmp
pop
xchg
iret
xor
ins
push
mov
shr
daa
mov
call
inc
add
aad
push
dec
dec
xor
pop
xchg
sbb
(bad)
out
clc
dec
dec
out
(bad)
in
lods
xor
into
scas
adc
(bad)
les
(bad)
(bad)
dec
dec
push
cdq
sbb
or
push
int
mov
int3
and
dec
retf
dec
test
add
(bad)
push
cmp
and
or
sar
inc
jne
pop
xchg
adc
(bad)
(bad)
(bad)
(bad)
dec
ss
mov
ins
dec
pop
xchg
test
scas
adc
ficomp
mov
ins
xor
dec
ins
cmp
dec
xchg
bound
call
cwd
not
and
movs
pop
cmp
ins
mov
(bad)
push
mov
ret
fcomp
mov
push
push
(bad)
(bad)
(bad)
dec
sbb
push
inc
or
retf
mov
enter
mov
cli
(bad)
inc
shl
and
sbb
stc
in
jmp
nop
mov
mov
pop
dec
test
push
sub
adc
cli
(bad)
(bad)
(bad)
call
add
sbb
int3
mov
jno
push
aam
addr16
fwait
in
(bad)
fiadd
push
daa
(bad)
(bad)
(bad)
call
push
cmp
ret
add
add
adc
enter
push
add
adc
adc
dec
dec
outs
repnz
sbb
sbb
stos
popf
pop
(bad)
(bad)
(bad)
dec
stos
xor
bound
xchg
push
xchg
xor
pushf
int3
xor
inc
(bad)
aam
(bad)
(bad)
(bad)
(bad)
ffreep
shr
pop
idiv
jb
inc
jp
sub
movs
mov
xor
test
push
xchg
test
(bad)
(bad)
(bad)
push
inc
or
mov
inc
mov
or
xchg
adc
fisubr
daa
and
cmps
dec
je
movs
lds
and
jmp
inc
pusha
stc
add
cmp
popa
(bad)
rcl
js
les
inc
sbb
add
arpl
rol
push
xor
imul
test
dec
shl
outs
inc
ja
pop
stos
sub
pop
(bad)
(bad)
(bad)
(bad)
mov
xlat
retf
stos
loopne
and
mov
rol
(bad)
xchg
dec
inc
cwde
cmp
add
sub
adc
add
addr16
(bad)
push
out
scas
xor
mov
dec
pop
mov
push
push
cdq
iret
fadd
call
dec
pop
xor
xchg
(bad)
dec
sub
cld
(bad)
jmp
dec
cmp
mov
pop
pop
xchg
xchg
xchg
vmovd
xchg
(bad)
(bad)
push
cmp
push
addr16
fs
repz
ss
rcl
sbb
cli
std
push
or
cs
cmc
or
mov
push
push
cmc
xchg
jno
(bad)
call
xchg
inc
adc
mov
xor
lods
xor
push
push
adc
add
(bad)
(bad)
(bad)
jge
pop
call
jge
rol
cmp
xor
jno
mov
inc
inc
sbb
nop
push
test
(bad)
call
cld
mov
sbb
jecxz
xchg
add
xchg
dec
call
(bad)
mov
lea
shr
dec
inc
push
pop
mov
jl
(bad)
(bad)
jmp
dec
call
mov
mov
jle
stc
jbe
test
scas
(bad)
(bad)
call
(bad)
dec
jg
push
add
sub
sbb
fidivr
sbb
and
iret
fisub
pop
(bad)
(bad)
(bad)
call
pushw
and
mov
dec
push
gs
add
out
div
(bad)
push
std
push
je
inc
inc
jo
mov
cmc
lea
sti
mov
cli
lea
fnstcw
or
(bad)
(bad)
jmp
stc
lds
adc
mov
mov
mov
cmps
lahf
xor
mov
(bad)
jns
jns
bound
jbe
out
(bad)
outs
aam
or
loopne
rep
popa
sub
sar
(bad)
(bad)
jg
xchg
out
sub
pop
dec
out
push
inc
fnstsw
jns
(bad)
mov
mov
mov
inc
ja
sti
jecxz
push
int
aam
ins
xor
push
jle
add
(bad)
jmp
add
movs
imul
ds
mov
fdivr
push
push
call
out
int3
js
jecxz
(bad)
call
and
ret
adc
clc
fldcw
loope
push
cmps
sub
cmp
out
scas
mov
push
mov
(bad)
sub
loopne
das
mov
and
in
mov
rcl
(bad)
(bad)
(bad)
mov
pop
push
sti
pop
xchg
sbb
les
pusha
out
mov
call
aaa
std
call
repnz
pop
push
aam
and
sbb
xor
js
test
push
cwde
sub
xchg
pop
call
mov
leave
and
add
push
(bad)
(bad)
dec
mov
stos
pop
dec
pop
sbb
sub
adc
icebp
repz
mov
xchg
and
dec
sub
lahf
mov
and
(bad)
(bad)
(bad)
jmp
and
push
mov
and
dec
mov
bound
push
add
mov
mov
inc
push
add
ret
sbb
clc
lock
(bad)
(bad)
call
sub
or
loope
retf
jo
push
into
(bad)
dec
jecxz
sti
xchg
xor
stos
adc
test
(bad)
call
pop
dec
mov
mov
aas
aas
jmp
mov
(bad)
(bad)
call
(bad)
mov
xchg
xor
aad
mov
mov
mov
or
test
adc
(bad)
(bad)
pop
pop
add
movs
and
in
bound
inc
stos
popa
jl
sub
mov
inc
lods
and
stos
sub
inc
enter
sbb
push
jno
call
mov
popa
pop
mov
aas
mov
xor
(bad)
jmp
push
data16
les
imul
and
inc
add
jns
arpl
(bad)
(bad)
js
rol
mov
mov
push
sbb
fisttp
mov
mov
add
push
sub
xchg
sub
mov
adc
inc
outs
mov
(bad)
call
jb
jge
dec
sbb
cwde
add
and
in
sub
mov
cmps
mov
sbb
xchg
adc
inc
xchg
mov
(bad)
(bad)
in
leave
test
jge
test
std
adc
adc
rol
xor
dec
cmp
mov
inc
(bad)
(bad)
(bad)
dec
inc
aad
mov
push
push
dec
push
jb
inc
fiadd
retf
cmps
call
dec
jmp
jo
xchg
mov
pop
sub
inc
cli
dec
fild
inc
xor
push
cdq
and
dec
(bad)
(bad)
(bad)
(bad)
(bad)
cli
adc
nop
loop
sbb
sbb
push
sbb
adc
cli
mov
adc
scas
push
add
or
(bad)
(bad)
inc
mov
lods
pop
sahf
xor
int3
dec
add
aam
fist
(bad)
lods
cwde
ss
sub
loope
jl
je
dec
mov
xchg
xchg
mov
push
sub
(bad)
jmp
and
inc
ins
stos
xchg
adc
adc
push
mov
jmp
sub
cmp
pop
xchg
or
push
inc
xchg
jmp
mov
jno
imul
adc
xor
mov
mov
sbb
lock
sbb
xchg
mov
call
sbb
and
and
jb
and
or
mov
icebp
(bad)
(bad)
jge
mov
jae
cmp
idiv
loop
sbb
and
mov
pop
(bad)
(bad)
(bad)
push
inc
jecxz
pop
out
xchg
call
popf
push
and
mov
and
pop
(bad)
(bad)
inc
into
call
lods
mov
lea
and
sti
loopne
enter
(bad)
(bad)
aas
(bad)
pop
add
mov
mov
and
inc
jmp
les
push
mov
(bad)
(bad)
dec
ret
sbb
mov
sub
sub
jle
punpckldq
out
mov
dec
push
(bad)
iret
cmp
pop
out
sbb
cmp
clc
lea
dec
pop
mov
push
(bad)
dec
sub
dec
ror
cmps
bound
mov
call
cmps
xchg
xlat
sub
xchg
sub
dec
fldcw
xchg
mov
add
(bad)
(bad)
(bad)
dec
in
mov
mov
pop
dec
loopne
hlt
stos
xchg
mov
outs
or
jne
dec
addr16
(bad)
(bad)
(bad)
inc
ds
mov
lahf
push
shr
gs
inc
js
sub
pop
mov
cmps
mov
inc
sub
pop
sub
lock
shl
int3
dec
(bad)
(bad)
(bad)
(bad)
mov
outs
push
retf
popa
lods
xor
fstp
push
jo
and
cdq
(bad)
adc
mov
jmp
inc
addr16
dec
jb
gs
adc
lods
rol
sbb
(bad)
(bad)
inc
dec
xchg
and
cli
dec
ret
data16
jae
call
aas
cmp
add
ret
inc
dec
and
test
dec
shr
pop
loope
mov
inc
fistp
hlt
jl
and
pop
push
jecxz
repz
cmp
jl
add
rol
call
cmp
mov
pop
mov
(bad)
(bad)
jg
inc
(bad)
retf
cwde
sub
enter
(bad)
popf
out
outs
inc
mov
sbb
jge
clc
aas
xchg
dec
movs
aas
(bad)
(bad)
(bad)
push
(bad)
iret
not
idiv
pop
(bad)
sbb
jg
jge
or
retf
jmp
(bad)
push
std
(bad)
(bad)
(bad)
call
test
cdq
rcl
in
mov
inc
(bad)
mov
push
mov
std
xchg
fwait
stos
mov
icebp
push
cmp
call
adc
les
out
dec
mov
(bad)
call
(bad)
pop
cld
lahf
and
mov
pop
retf
add
(bad)
push
repz
xor
(bad)
call
sti
lods
in
mov
fxch
call
(bad)
jg
pop
out
jg
jg
fwait
inc
mov
lock
(bad)
aad
jge
cmp
loopne
and
mov
idiv
push
std
push
inc
gs
push
js
addr16
and
pop
pusha
(bad)
(bad)
(bad)
push
in
repnz
adc
fisttp
add
test
jecxz
mov
add
(bad)
(bad)
fbld
adc
jle
in
and
jb
jb
pop
mov
and
popa
repz
mov
sub
int
jno
dec
int
inc
cld
call
xchg
inc
jg
aas
push
jae
mov
fild
add
jl
inc
mov
push
cld
addr16
dec
ja
adc
int
repnz
mov
stos
(bad)
pop
push
(bad)
outs
adc
inc
fdiv
outs
leave
add
ss
pop
hlt
adc
(bad)
(bad)
jg
fisttp
pop
int3
les
push
out
jo
adc
imul
(bad)
jmp
sbb
xchg
jbe
loopne
cmps
pop
clc
call
adc
sub
(bad)
(bad)
(bad)
dec
out
add
pop
addr16
sub
out
in
rol
xor
inc
jb
or
jae
(bad)
(bad)
jmp
mul
and
add
gs
pushf
das
xchg
inc
cld
cld
mov
inc
jg
shr
sbb
xchg
dec
pop
mov
push
in
sti
mov
pop
stc
jmp
(bad)
sbb
std
retf
jg
jecxz
push
mov
pop
pop
nop
sahf
call
outs
cmp
(bad)
dec
push
xor
sub
cmp
xor
outs
push
cmp
sbb
sbb
xchg
ret
pop
pop
stos
inc
dec
cld
call
xchg
ds
leave
adc
push
in
loope
or
mov
(bad)
jmp
ds
xchg
je
dec
xchg
pop
popf
addr16
mov
xchg
(bad)
fldenv
push
push
fnstenv
sbb
xchg
loop
adc
sub
add
dec
scas
adc
dec
inc
mov
mov
jle
div
jb
test
push
cdq
dec
fiadd
xchg
(bad)
mov
pop
aas
xor
sub
(bad)
(bad)
push
xor
retf
out
push
xchg
pusha
test
dec
(bad)
(bad)
adc
rol
or
loop
int
push
loop
xor
xchg
(bad)
(bad)
(bad)
dec
mov
mov
push
mov
shr
pusha
cwde
test
push
and
xor
pop
adc
cmps
dec
jecxz
sub
dec
movs
into
nop
mov
mov
fs
stc
loopne
adc
mul
(bad)
push
and
cmp
dec
pop
mov
cmps
es
mov
xor
jmp
ins
sub
adc
(bad)
call
pop
es
pop
and
adc
mov
sti
jmp
aad
mov
fild
mov
es
sbb
addr16
sub
in
(bad)
(bad)
mov
sbb
cmp
dec
pop
rcl
mov
aas
adc
repz
hlt
(bad)
fistp
adc
in
mov
aad
aaa
(bad)
sbb
cmps
cmps
bound
dec
loope
adc
and
xchg
cmps
pop
dec
bound
leave
mov
call
mov
sub
inc
xchg
int3
mov
cmp
inc
add
xchg
jo
(bad)
(bad)
(bad)
inc
pop
jbe
mov
rcr
adc
sub
cmp
es
push
sbb
arpl
pop
lock
mov
out
jb
mov
jbe
repz
mov
addr16
(bad)
(bad)
inc
scas
outs
or
mov
sbb
and
in
data16
cmc
mov
mov
test
or
pop
lock
pop
sahf
jge
js
es
call
add
out
xor
mov
addr16
jnp
popf
push
sub
(bad)
mov
es
push
rcr
push
inc
sbb
xchg
jno
loop
dec
scas
adc
scas
mov
push
mov
xchg
mov
mov
in
aad
sbb
pop
pop
mov
popf
(bad)
(bad)
(bad)
call
and
inc
jo
push
mov
push
popf
rcr
jbe
xchg
adc
mov
(bad)
(bad)
jmp
lods
lods
hlt
jns
xchg
adc
dec
and
sbb
aad
sub
ret
cmp
pop
cmc
mov
mov
cli
adc
mov
dec
mov
lahf
fdivp
addr16
and
mov
movs
leave
daa
mov
loop
mov
mov
adc
(bad)
jbe
pop
aaa
ins
lods
jecxz
fst
xchg
jmp
rcl
and
fwait
pushf
in
adc
or
fnstcw
test
stos
fs
cs
push
lods
or
dec
fld
cmps
dec
test
push
sar
jmp
add
cmp
dec
gs
jo
mov
cmp
add
inc
inc
es
inc
sub
cdq
sub
aad
mov
outs
bound
cmp
mov
xor
shl
xchg
je
jnp
push
or
inc
sub
inc
jecxz
push
retf
sub
sbb
sar
mov
push
test
dec
bnd
pop
ja
cmp
(bad)
jg
outs
or
mov
mov
lods
push
or
fimul
dec
push
mov
ret
mov
(bad)
push
cmc
sbb
pop
mov
fwait
loope
xchg
sbb
jae
sbb
pop
(bad)
dec
lock
and
ss
out
mov
(bad)
xchg
jne
scas
loop
push
ja
mov
push
or
dec
sti
mov
cmp
out
out
aas
call
inc
jae
iret
dec
fcom
jnp
push
repz
out
mov
(bad)
dec
xchg
inc
iret
fdiv
mov
lods
aaa
jae
add
imul
dec
std
std
xor
sub
add
jg
call
call
xchg
push
call
fucom
mov
or
dec
in
imul
add
movs
dec
cwde
push
(bad)
(bad)
(bad)
(bad)
stc
pop
and
(bad)
shl
clc
mov
mov
xor
xchg
xchg
adc
call
and
fbld
and
mov
xor
sbb
dec
jmp
mov
and
(bad)
sub
shl
(bad)
cmp
dec
pop
inc
xchg
adc
cwde
mov
push
sbb
mov
ret
ins
stos
push
mov
test
in
retf
xchg
sub
pop
push
call
shl
pop
jp
call
mov
mov
test
jmp
cmp
(bad)
call
mov
lea
in
add
adc
and
and
adc
and
(bad)
(bad)
(bad)
out
adc
jle
into
fisttp
scas
or
mov
fs
(bad)
(bad)
inc
pop
dec
in
xchg
push
add
lock
movs
and
mov
dec
adc
in
in
imul
not
(bad)
gs
in
push
jb
mov
movs
into
xchg
fsubr
pop
daa
movs
pop
mov
add
mov
loopne
in
sub
mov
scas
xor
cmp
sahf
jp
(bad)
mov
pop
fcom
jmp
push
arpl
fstp
ins
loop
jmp
pop
cwde
loopne
(bad)
jmp
adc
cmp
mov
xchg
pop
cmp
xchg
cld
sbb
mov
push
imul
in
sbb
cmp
je
fwait
scas
call
cmps
mov
(bad)
stc
call
clc
jbe
daa
fcom
sbb
mov
in
repnz
cli
mov
retf
jmp
int
pusha
call
clc
(bad)
mov
stos
xor
hlt
inc
cmps
and
cmp
sub
adc
(bad)
out
sbb
cld
mov
push
cmp
jecxz
std
fstp
mov
push
cld
jg
loope
dec
jge
retf
inc
popa
jmp
sahf
dec
pushf
int3
dec
js
dec
xchg
(bad)
(bad)
jmp
sbb
jns
scas
or
rol
data16
xchg
xchg
dec
adc
retf
inc
dec
rcr
sbb
retf
mov
(bad)
(bad)
jmp
mov
adc
out
dec
lds
repz
inc
sub
icebp
push
or
mov
mov
fbld
rcr
retf
mov
or
dec
call
mov
inc
jno
es
call
loop
or
mov
mov
adc
fwait
mov
sub
push
(bad)
(bad)
(bad)
jmp
stc
mov
push
or
xor
fist
and
in
mov
(bad)
icebp
mov
(bad)
push
jmp
mov
sub
push
scas
fisub
ss
std
adc
add
mov
movs
add
and
push
sbb
jg
shl
pop
adc
xchg
fs
stc
imul
jmp
push
test
dec
je
mov
pop
(bad)
(bad)
dec
adc
cmps
(bad)
cwde
dec
(bad)
mov
jecxz
xchg
lods
shl
inc
xchg
dec
(bad)
in
sar
add
retf
rcr
nop
xchg
daa
popa
outs
push
lds
in
jmp
(bad)
push
std
dec
(bad)
pop
bound
pop
and
inc
stos
cs
dec
arpl
dec
test
mov
ficom
pushf
push
(bad)
push
or
add
or
inc
ins
pop
pushf
outs
loop
(bad)
je
and
stc
or
or
jo
ret
xchg
iret
aas
xor
ret
inc
mov
mov
jmp
xchg
mov
mov
sahf
fwait
(bad)
jns
cmps
outs
push
icebp
jg
jg
int3
sbb
inc
call
mov
data16
push
cmp
das
sub
cmp
mov
pop
xchg
int3
xchg
xchg
jle
lock
or
push
xor
xchg
(bad)
inc
jmp
cmps
lods
inc
push
movs
mov
(bad)
(bad)
(bad)
call
retf
pop
xchg
mov
rcr
cmp
(bad)
test
mov
out
xor
rcl
out
es
call
cld
sbb
(bad)
repz
icebp
add
sti
ret
(bad)
(bad)
(bad)
inc
xchg
mov
fidivr
out
push
(bad)
cmp
push
add
fidiv
(bad)
(bad)
(bad)
jmp
sbb
frstor
dec
cdq
ss
rcl
bound
push
(bad)
scas
enter
dec
jmp
mov
test
lods
retf
lahf
hlt
lods
popf
daa
fisub
neg
(bad)
mov
mov
retf
push
sub
push
adc
mov
mov
xchg
jne
sub
(bad)
out
sbb
push
xchg
pop
sub
xor
or
aaa
std
sbb
push
outs
pop
sbb
mov
dec
lock
mov
push
(bad)
dec
add
or
push
arpl
push
jmp
cmc
(bad)
(bad)
(bad)
call
add
sbb
les
cmp
nop
fstp
mov
pop
push
dec
mov
(bad)
(bad)
(bad)
fld
cmps
push
pop
pop
inc
dec
jae
jp
pusha
dec
jno
mov
jb
sahf
inc
outs
pop
inc
clc
mov
cdq
mov
stos
in
retf
gs
dec
in
push
jbe
ret
or
(bad)
fnstcw
fcom
pop
je
vmovaps
push
inc
rcl
loope
out
jmp
ins
or
push
test
call
and
xchg
xor
test
(bad)
popa
cmp
dec
xchg
outs
mov
adc
(bad)
mov
cmp
rcl
mov
dec
and
jb
(bad)
mov
pop
inc
sar
in
std
inc
ja
scas
stos
(bad)
loop
xor
jmp
cli
(bad)
dec
(bad)
icebp
mov
push
js
dec
out
jle
xchg
xchg
pop
pop
cdq
inc
aaa
dec
xchg
(bad)
(bad)
cmp
loopne
jns
mov
arpl
xor
sbb
mov
test
test
clc
jmp
pop
in
xchg
sub
out
push
cmp
push
(bad)
(bad)
(bad)
push
push
inc
lods
nop
jmp
mul
jmp
mov
xor
shr
mov
(bad)
pop
icebp
dec
jmp
aas
pusha
(bad)
sub
out
jo
pop
cli
(bad)
aas
xor
inc
cmp
inc
cmp
cmp
shl
ins
mov
cmp
cdq
aas
call
out
stc
pop
out
push
icebp
in
pop
adc
jb
std
jmp
std
int3
cwde
stc
in
jne
(bad)
(bad)
jmp
in
xchg
ss
inc
outs
aam
or
sbb
or
rcr
cdq
test
jno
xchg
(bad)
(bad)
(bad)
(bad)
cmp
push
pop
jecxz
xchg
dec
push
pop
(bad)
mov
cmc
data16
push
iret
dec
arpl
or
(bad)
cmp
mov
(bad)
(bad)
(bad)
inc
pop
and
inc
jmp
or
(bad)
sbb
cmc
rol
call
std
dec
inc
xor
mov
pop
and
and
sbb
add
pop
(bad)
(bad)
dec
inc
xchg
xchg
jae
sbb
xor
lods
jmp
xchg
(bad)
pop
(bad)
mov
test
adc
in
add
mov
mov
mov
and
(bad)
(bad)
dec
pop
jmp
outs
test
out
movs
pop
test
mov
mov
inc
jge
dec
push
jnp
(bad)
(bad)
(bad)
inc
sbb
frstor
mov
lds
pop
es
add
(bad)
(bad)
(bad)
jmp
jne
pop
cmp
das
mov
sbb
and
add
inc
add
and
(bad)
(bad)
jmp
xor
push
repnz
sub
or
jmp
int3
xor
ins
stos
dec
rol
(bad)
xchg
push
add
sub
add
scas
sub
rol
adc
sbb
sub
(bad)
(bad)
jmp
mov
mov
mov
je
mov
(bad)
test
and
(bad)
adc
mov
test
cld
mov
loopne
mov
mov
mov
push
adc
sbb
stos
(bad)
jmp
push
leave
test
and
mov
mov
pop
test
movs
hlt
int3
shl
scas
arpl
xor
mov
scas
loop
ins
inc
cmp
mov
and
imul
loopne
add
cmp
popf
cdq
and
mov
pop
call
(bad)
aaa
jae
popa
cdq
mov
jae
add
inc
sub
aam
adc
sub
iret
xchg
(bad)
(bad)
fcomip
mov
xchg
stos
adc
add
out
in
call
add
pop
mov
(bad)
jmp
xor
push
sub
cdq
or
or
xchg
pop
sub
mov
ds
imul
(bad)
(bad)
jmp
adc
std
dec
xor
jmp
fisttp
pop
jnp
je
adc
dec
mov
(bad)
(bad)
jmp
push
add
push
mov
jecxz
cmps
jmp
cmp
sbb
add
mul
inc
mov
inc
test
sbb
and
movs
(bad)
test
(bad)
(bad)
cmp
dec
xor
jbe
movs
and
(bad)
stos
pop
(bad)
iret
fcomp
mov
lds
test
and
ret
sub
cmp
mov
adc
lods
test
mov
into
lea
(bad)
(bad)
call
jmp
out
jo
ret
xor
push
fadd
hlt
les
cmc
pop
mov
cli
div
(bad)
mov
test
ret
mov
sub
push
mov
test
enter
(bad)
jmp
lahf
test
cdq
je
test
test
mov
sbb
sar
and
(bad)
(bad)
(bad)
jmp
dec
jbe
imul
addr16
cmp
rol
ficomp
inc
sub
idiv
(bad)
(bad)
jmp
pop
in
mul
jno
shl
mov
and
pop
cmc
xchg
jb
dec
sub
(bad)
(bad)
(bad)
(bad)
cmp
inc
lea
bswap
mov
sbb
daa
pop
cmp
nop
xchg
add
inc
sbb
call
xchg
(bad)
jecxz
jne
or
mov
push
pop
test
cmp
jg
jb
mov
mov
hlt
xlat
fisttp
adc
(bad)
dec
sti
lahf
sub
int
(bad)
(bad)
(bad)
(bad)
in
pop
xchg
xchg
sbb
jmp
inc
jp
lahf
das
adc
lods
(bad)
(bad)
(bad)
inc
inc
call
nop
push
pop
mov
xchg
mov
pop
popa
imul
jo
mov
fsub
icebp
(bad)
(bad)
(bad)
jmp
xor
push
xor
xor
test
mov
dec
sub
into
in
cmps
xchg
imul
loop
(bad)
(bad)
(bad)
in
inc
add
test
push
movs
inc
scas
sti
ja
mov
out
pop
xor
(bad)
(bad)
(bad)
inc
sub
shl
scas
cmc
ror
imul
fcom
inc
cld
and
icebp
add
cmp
(bad)
jg
loopne
adc
mov
sub
sub
das
stos
mov
mov
sub
pushf
and
rcl
sub
push
adc
jmp
ds
dec
pop
pop
dec
mov
mov
mov
popf
adc
int3
imul
stos
inc
sbb
cli
sub
(bad)
or
(bad)
push
leave
cmps
test
and
in
xlat
jbe
dec
test
(bad)
(bad)
jmp
jmp
and
or
shl
push
mov
pop
cmp
(bad)
jmp
es
or
inc
mov
shr
sbb
mov
jmp
cmp
fs
lea
movs
shr
(bad)
ins
mov
dec
scas
xor
inc
jne
pop
sbb
sbb
shr
lds
dec
push
das
es
les
ror
pop
pop
mov
(bad)
(bad)
inc
sbb
jnp
push
test
or
dec
iret
xchg
fnstenv
les
fwait
mov
ror
mov
jo
xor
sub
sbb
hlt
ds
clc
xor
bnd
sar
mov
dec
push
leave
pop
xchg
jae
push
add
out
jg
fidivr
(bad)
jg
jp
dec
mov
ret
in
(bad)
push
or
pop
adc
test
or
(bad)
(bad)
call
out
jmp
inc
jb
push
mov
loop
dec
pop
mov
and
aas
cmp
(bad)
call
sub
fcom
mov
iret
or
mov
inc
loop
(bad)
(bad)
inc
pusha
cmps
add
sub
sbb
int
xor
inc
retf
and
(bad)
(bad)
(bad)
call
mov
xchg
iret
xchg
jno
inc
into
gs
sub
push
dec
dec
sti
xlat
xchg
pop
call
imul
cld
(bad)
call
loopne
retf
push
in
jb
daa
mov
loope
daa
sub
stc
test
(bad)
jg
(bad)
mov
and
ja
cwde
fwait
push
fmul
ret
add
call
cld
scas
push
jo
dec
mov
ftst
std
push
pop
xlat
mov
out
(bad)
(bad)
(bad)
jmp
xchg
cmp
sub
retf
or
xor
lods
fisttp
outs
dec
mov
addr16
in
and
push
(bad)
(bad)
call
retf
movs
call
sbb
xchg
jmp
iret
inc
lds
imul
loop
xor
pop
mov
sbb
add
out
retf
inc
in
adc
mov
push
and
xlat
call
cdq
push
lahf
aaa
fwait
inc
push
add
sbb
cld
(bad)
push
int3
mov
fs
jnp
fs
lods
mov
cmp
std
or
sub
arpl
fimul
shr
hlt
add
(bad)
(bad)
jmp
xchg
int3
mov
(bad)
mov
pop
aam
and
xchg
xchg
push
jg
(bad)
jg
lods
push
mov
sub
stc
cmp
xchg
xchg
or
ret
(bad)
(bad)
(bad)
dec
and
ss
push
scas
ror
fld
xchg
push
push
ret
(bad)
(bad)
inc
inc
cmps
fcomp
test
sub
cmp
pop
(bad)
push
cmp
jecxz
xor
inc
xchg
loop
iret
xlat
test
and
out
sbb
test
(bad)
aaa
dec
clc
adc
and
push
adc
sbb
das
aaa
sar
(bad)
(bad)
(bad)
adc
xchg
aaa
ins
fnstcw
test
lods
sbb
adc
out
stos
add
inc
adc
jmp
(bad)
jmp
test
ins
movs
dec
cwde
xchg
mov
inc
inc
add
xchg
scas
lock
(bad)
(bad)
(bad)
jmp
stc
push
lock
loop
neg
mov
xchg
in
scas
cli
(bad)
jg
imul
icebp
loope
in
(bad)
cwde
adc
xchg
outs
or
(bad)
(bad)
mov
pop
fsubr
mov
mov
mov
sbb
mov
(bad)
(bad)
(bad)
jmp
and
add
in
xchg
cmps
dec
mov
adc
jbe
sar
call
sbb
jecxz
jmp
and
out
sbb
popf
inc
add
and
outs
pushf
jmp
jecxz
add
inc
add
repz
std
pop
cld
add
enter
loopne
xchg
or
sahf
cmps
shr
push
jl
in
lea
js
mov
movs
or
daa
cwde
jno
push
retf
pop
das
cs
clc
and
pop
mov
lea
outs
cli
pop
sbb
jmp
pop
fidiv
sti
call
pusha
(bad)
sbb
mov
div
(bad)
jg
mov
rol
mov
push
or
cmc
popa
pop
cmps
mov
sbb
(bad)
push
xor
(bad)
sub
out
mov
stos
xor
xor
outs
shr
loopne
fimul
movs
xchg
das
jmp
jo
add
lds
(bad)
(bad)
(bad)
jmp
loope
mov
inc
lahf
fstp
clc
jge
inc
mov
repnz
loope
std
rcr
sti
push
(bad)
cs
lods
pop
call
or
push
jp
xchg
jg
inc
repnz
mov
scas
(bad)
out
test
aad
repz
sti
(bad)
jg
dec
and
fwait
jle
jle
clc
mov
lds
sbb
sub
cmp
xchg
dec
cmp
push
adc
clc
outs
dec
ja
mov
pop
add
push
add
pop
mov
mov
fdivr
(bad)
(bad)
jmp
cmp
ret
sub
test
and
add
mov
ds
loope
mov
jb
add
test
dec
or
(bad)
jmp
inc
push
call
mov
adc
push
(bad)
int
mov
add
add
stos
(bad)
jmp
icebp
aad
push
fidivr
dec
dec
adc
xchg
test
popf
(bad)
pushf
lods
cli
je
outs
rol
clc
inc
call
in
mov
nop
xchg
loope
(bad)
call
cmp
sbb
pusha
clc
jg
cmp
fwait
and
mov
jbe
inc
xor
inc
fs
adc
shl
pop
(bad)
cmps
cmp
lock
(bad)
fist
clc
and
jle
jp
out
dec
neg
cmp
cmc
lea
cmp
test
enter
call
xor
(bad)
jae
sbb
mov
stc
jmp
ret
(bad)
inc
xor
xor
push
les
pop
das
(bad)
mov
xor
shl
sbb
aaa
std
call
or
repz
js
outs
jmp
pop
jne
dec
dec
pop
sbb
std
pop
sub
addr16
adc
dec
leave
fidiv
mov
mov
(bad)
call
cmp
fmul
and
std
call
push
ror
clc
(bad)
jmp
fsub
les
push
xor
add
(bad)
call
out
enter
bound
mov
or
cld
xchg
(bad)
(bad)
(bad)
jmp
out
dec
clts
cmp
push
sbb
test
fcmove
sbb
(bad)
jg
xor
movs
bnd
pop
cmc
push
scas
ins
xchg
test
pop
sbb
mov
push
push
movs
imul
dec
xchg
sti
(bad)
(bad)
jmp
pop
mov
in
mov
das
sub
cmp
xchg
jmp
jg
xchg
cmp
stos
push
das
js
daa
xchg
aad
rcl
dec
outs
mov
and
shl
(bad)
aaa
cld
test
cmp
lds
lods
clc
sub
inc
cld
adc
std
dec
push
jmp
and
push
fcomp
loopne
or
or
fild
push
push
and
call
(bad)
outs
into
add
jo
and
xchg
mov
push
or
push
(bad)
(bad)
(bad)
jmp
jns
mov
repnz
jg
dec
pop
add
mov
pop
xchg
(bad)
(bad)
(bad)
push
inc
test
xchg
or
jmp
inc
pop
pop
push
inc
mov
push
and
(bad)
(bad)
mov
and
and
fist
dec
push
sbb
(bad)
(bad)
(bad)
call
adc
mov
rol
cmps
xchg
xor
js
mov
in
aaa
inc
dec
cli
call
cld
and
pop
jl
jae
loopne
push
arpl
adc
cmp
dec
cmp
jns
(bad)
(bad)
mov
imul
push
sub
mov
mov
(bad)
adc
mov
jns
(bad)
(bad)
push
mov
jmp
or
cmp
mov
ret
or
xchg
dec
push
rcl
(bad)
jmp
jnp
mov
jae
loope
into
lahf
cmp
fdivr
(bad)
(bad)
mov
sub
jl
jno
mov
adc
movs
and
aaa
xor
es
jmp
mov
mov
cmp
dec
std
fisubr
add
cmp
cld
fst
out
sbb
fld
scas
sbb
(bad)
(bad)
(bad)
dec
retf
push
enter
(bad)
test
xor
popf
adc
xor
or
dec
inc
adc
mov
xor
mov
push
gs
(bad)
(bad)
jmp
mov
xor
sbb
push
xor
push
mov
(bad)
call
cmp
mov
mov
dec
sub
mov
(bad)
(bad)
(bad)
call
cmp
sbb
inc
sti
js
mov
shr
loop
in
xchg
cmp
xchg
cmp
(bad)
(bad)
pop
(bad)
aad
mov
es
hlt
lock
xchg
push
sti
xchg
out
clc
inc
mov
ret
jbe
xchg
(bad)
(bad)
dec
mov
cli
cmp
cmps
sub
mov
and
and
or
out
push
add
repnz
shl
retf
xchg
sbb
inc
es
mov
(bad)
(bad)
call
cmp
mov
push
add
mov
pop
sbb
cwde
jbe
sbb
dec
sub
mov
cs
(bad)
(bad)
jmp
fsubr
popa
or
inc
push
adc
push
mov
movs
aaa
in
mov
push
in
mov
fwait
jns
fcom
(bad)
jmp
push
scas
aam
xor
jbe
ins
call
fs
jbe
retf
icebp
stos
inc
in
imul
and
cmp
sti
add
pop
cld
sbb
jl
xor
cwde
(bad)
loopne
jmp
jl
cld
(bad)
jmp
outs
(bad)
fild
je
xchg
push
pop
mov
ins
inc
sub
jno
fwait
inc
cld
inc
scas
out
test
xor
retf
mov
arpl
mov
cs
jge
imul
mov
stc
popa
fbld
xor
(bad)
(bad)
call
lods
cmps
jge
mov
xchg
cmps
jg
retf
inc
icebp
lock
stc
in
adc
not
xlat
push
jmp
inc
cld
inc
jns
cdq
xor
or
dec
and
add
(bad)
(bad)
call
mov
mov
das
movs
inc
cwde
pop
movs
and
xor
cdq
jg
adc
(bad)
dec
(bad)
jno
mov
mov
lods
imul
adc
aad
adc
ds
leave
mov
inc
cmps
sub
push
sub
pop
std
add
adc
lea
push
sbb
xchg
lea
pusha
fist
add
jmp
pop
iret
adc
push
mov
or
call
in
int3
aas
das
or
dec
and
(bad)
pop
jb
inc
(bad)
cmp
and
xchg
(bad)
(bad)
call
je
imul
add
fisub
mov
dec
aad
pop
adc
out
mov
les
call
xchg
sbb
mov
aas
adc
sub
test
es
mov
scas
aad
test
ret
arpl
popf
mov
sar
sub
(bad)
jg
pop
scas
out
outs
clc
in
retf
mov
adc
xchg
jb
or
jno
sbb
(bad)
push
ins
arpl
popa
and
rol
retf
sbb
out
xchg
das
outs
add
pop
dec
loope
cdq
test
xchg
iret
pop
sar
(bad)
(bad)
jg
inc
adc
dec
xchg
fnsave
les
cld
out
cmp
pop
lods
inc
jnp
inc
int
(bad)
(bad)
jg
xchg
test
or
or
dec
enter
les
push
gs
sbb
pop
cmc
cmps
das
push
xor
jne
sbb
test
(bad)
(bad)
inc
dec
adc
adc
jmp
int3
adc
stc
shl
(bad)
pop
push
add
loopne
jmp
push
fadd
pop
mov
sub
cmc
pop
jb
xchg
jge
jae
mov
sub
lods
sbb
mov
or
sub
pop
imul
cwde
test
push
mov
or
jne
mov
out
inc
mov
call
dec
lock
mov
shr
push
adc
mov
adc
and
cmp
mov
(bad)
(bad)
mov
xor
pop
pushf
(bad)
mov
stos
xor
outs
stos
dec
xchg
jmp
xchg
gs
out
cld
jmp
scas
call
push
ror
outs
(bad)
(bad)
(bad)
stc
int3
inc
adc
push
dec
dec
(bad)
call
out
mov
push
shr
(bad)
(bad)
call
pop
mov
xor
mov
imul
mov
fstp
dec
and
movs
(bad)
jmp
ror
(bad)
mov
fisubr
inc
ins
xlat
aad
jmp
mov
call
jecxz
adc
pop
in
xor
mov
mov
inc
push
mov
or
xor
les
(bad)
(bad)
dec
mov
push
push
sub
in
loopne
sbb
adc
and
movs
aad
jmp
cld
push
movs
inc
ins
and
mov
int
enter
or
cmp
and
(bad)
call
outs
mov
push
gs
mov
sub
mov
push
cmps
and
(bad)
(bad)
(bad)
call
push
outs
pop
cwde
scas
stos
outs
mov
adc
test
loope
loopne
std
addr16
call
xchg
setbe
xchg
sbb
out
lock
xchg
shr
inc
int
(bad)
(bad)
(bad)
call
mov
ror
cmp
es
adc
inc
mov
xchg
inc
loop
(bad)
(bad)
call
into
xchg
outs
loopne
xchg
iret
sub
jns
xchg
aas
mov
dec
mov
pop
xchg
sub
cmp
jg
mov
mov
mov
imul
(bad)
(bad)
jmp
int
jp
pop
mov
retf
cwde
xchg
(bad)
xchg
les
shl
dec
call
pop
and
mov
sbb
mov
mov
into
adc
(bad)
(bad)
jmp
data16
pop
push
outs
mov
or
test
leave
or
(bad)
loop
stos
mov
scas
icebp
(bad)
aas
push
mov
add
dec
inc
mov
cmc
popf
jmp
jge
mov
cmp
cmp
sar
jge
add
push
cmp
aam
ins
inc
and
sbb
push
fist
inc
mov
out
jmp
test
fadd
les
and
in
mov
inc
stc
dec
adc
int3
mov
cmp
jg
dec
loope
push
mov
jle
dec
cld
adc
pop
idiv
sar
sar
(bad)
(bad)
std
mov
push
mov
dec
push
mov
dec
xchg
movs
test
mov
lahf
push
mov
(bad)
call
sbb
jmp
loop
loop
fadd
and
push
addr16
sub
outs
pop
mov
(bad)
(bad)
(bad)
jmp
fs
aaa
mov
rcr
or
repz
in
ds
jnp
mov
(bad)
std
xchg
xor
mov
(bad)
sbb
fmul
mov
sub
sbb
(bad)
call
cmp
sub
and
add
(bad)
jg
lahf
sub
push
jg
lahf
dec
(bad)
into
dec
cli
and
js
inc
push
pop
jecxz
sbb
(bad)
(bad)
cld
aam
add
loope
mov
cmp
push
(bad)
sbb
mov
adc
push
cmp
fldcw
push
(bad)
xlat
inc
pop
outs
cmp
(bad)
(bad)
(bad)
push
call
pop
mov
mov
call
(bad)
ins
rcr
(bad)
call
ret
out
test
repnz
pop
nop
(bad)
imul
mov
(bad)
(bad)
(bad)
(bad)
js
out
and
adc
pop
sub
dec
or
mov
or
fcmovnbe
int3
out
mov
call
call
sbb
cmp
(bad)
fimul
(bad)
push
pop
icebp
(bad)
mov
xchg
(bad)
arpl
call
fisub
scas
push
cld
or
pop
pop
pop
repz
(bad)
(bad)
inc
and
dec
fnstsw
sub
xchg
mov
mov
outs
into
icebp
xor
fst
(bad)
cld
out
sbb
and
jp
mov
sub
cmp
mov
retf
scas
add
mov
mov
sub
dec
into
xchg
repz
dec
(bad)
(bad)
jmp
clc
int
cmc
xchg
daa
sti
pop
sub
aas
ret
mov
jno
cmps
jno
nop
(bad)
(bad)
(bad)
(bad)
jg
dec
test
loopne
mov
xor
cs
cwde
add
xchg
shl
push
adc
(bad)
jmp
retf
cs
sub
nop
xchg
daa
inc
xchg
scas
or
push
nop
scas
xchg
mul
(bad)
(bad)
call
jmp
(bad)
sub
bound
and
shr
mov
adc
retf
std
(bad)
(bad)
dec
inc
or
cmp
test
jne
xchg
(bad)
mov
lds
and
(bad)
xor
(bad)
(bad)
push
or
stc
or
test
inc
jle
aad
xchg
pop
push
test
xchg
cmps
sub
addr16
push
sub
(bad)
mov
into
xor
mov
or
inc
cmp
xor
out
(bad)
(bad)
(bad)
mov
test
or
cmps
mov
xor
sub
add
xor
or
xchg
out
jne
(bad)
mov
jne
inc
sti
push
mov
out
es
(bad)
call
push
and
std
xchg
pop
hlt
dec
dec
push
adc
retf
adc
dec
push
cs
xor
dec
jne
and
cmp
xor
vcvtsi2ss
jnp
(bad)
(bad)
(bad)
(bad)
mov
out
adc
push
mov
mov
imul
and
aad
pop
sbb
(bad)
(bad)
inc
lds
adc
repz
mov
or
inc
in
adc
xor
mov
inc
or
mov
mul
mov
pop
es
jg
jmp
jg
into
push
ja
mov
xor
sub
sbb
repnz
adc
stc
(bad)
(bad)
(bad)
push
push
pop
cdq
hlt
outs
inc
cmp
sub
dec
push
adc
popa
add
(bad)
(bad)
call
ret
mov
loopne
mov
mov
adc
or
add
(bad)
(bad)
inc
das
jmp
xchg
mov
adc
std
mov
test
iret
add
(bad)
(bad)
push
rcl
adc
and
in
add
inc
test
loope
and
mov
(bad)
(bad)
jg
xchg
or
in
rol
jp
and
push
out
mov
adc
ret
(bad)
(bad)
(bad)
call
cmp
sbb
sub
ficom
xor
push
mov
mov
test
mov
or
(bad)
(bad)
jmp
jecxz
add
add
cs
dec
stos
movs
test
or
(bad)
(bad)
jmp
and
cmp
xor
mov
mov
shl
test
int3
or
jg
inc
adc
dec
xor
mov
push
in
inc
nop
dec
inc
aaa
pop
aam
jl
ds
(bad)
(bad)
inc
add
dec
add
dec
xchg
xor
dec
sar
inc
xor
mov
dec
(bad)
inc
(bad)
(bad)
cmp
push
xor
mov
and
xor
xchg
clc
adc
mov
push
push
inc
pop
xlat
mov
or
jo
rcl
pop
icebp
(bad)
dec
test
cmps
lea
mov
xchg
push
repnz
push
out
sub
mov
(bad)
dec
inc
or
add
loope
pop
movs
jecxz
addr16
xor
add
ins
(bad)
(bad)
(bad)
cmp
shr
add
fwait
xchg
xor
std
(bad)
sub
loopne
cld
(bad)
adc
(bad)
(bad)
(bad)
(bad)
jge
lahf
sub
je
stos
ins
div
movs
pop
inc
xor
movs
mov
ficomp
out
or
cwde
repnz
sub
js
xchg
call
adc
push
sbb
sub
call
shl
cmc
jmp
add
ins
and
and
data16
inc
(bad)
(bad)
(bad)
inc
sbb
scas
pusha
jne
jne
cs
mov
ins
pop
or
jmp
sbb
sahf
sub
(bad)
(bad)
fild
or
jns
cmp
mov
cmp
mov
shl
push
mov
xchg
jno
test
mov
sub
inc
(bad)
(bad)
(bad)
(bad)
out
aad
ins
sbb
fdiv
rcl
sbb
je
mov
mov
push
xchg
pusha
dec
push
mov
pop
out
pop
cmc
(bad)
jmp
popf
mov
imul
sub
jp
xchg
inc
mov
(bad)
inc
dec
cmp
imul
cmp
fbld
icebp
retf
inc
enter
ja
popa
mov
sahf
jmp
add
data16
(bad)
(bad)
jmp
push
sub
mov
aad
adc
in
jmp
xchg
or
mov
cmp
fsub
adc
(bad)
(bad)
(bad)
jmp
push
cli
pop
aas
movs
mov
jne
xor
sbb
nop
jns
out
xor
or
test
jmp
je
mov
jne
adc
int3
add
jmp
ja
outs
loope
(bad)
call
(bad)
mov
xor
sub
cmp
movs
add
(bad)
jg
mov
push
sbb
fcomp
pusha
add
dec
test
jmp
add
mov
jns
jmp
inc
aad
(bad)
(bad)
jmp
or
in
sub
ins
xor
scas
repz
mov
js
push
sti
(bad)
(bad)
out
cli
dec
mov
sub
ret
test
sbb
xchg
loopne
(bad)
(bad)
(bad)
jmp
scas
inc
inc
mov
ret
add
and
jmp
loopne
or
(bad)
(bad)
(bad)
jmp
test
sbb
fiadd
xor
bound
mov
sbb
mov
(bad)
(bad)
fbld
push
cmp
in
lea
fbstp
out
inc
ret
mov
(bad)
(bad)
(bad)
mov
out
sub
pop
subps
div
gs
das
jae
xchg
xlat
movs
push
xchg
xchg
mov
fisttp
std
jmp
add
(bad)
fmul
sub
cmc
dec
pop
(bad)
(bad)
(bad)
dec
jmp
shr
sub
out
dec
shr
dec
cmp
push
movs
xlat
jmp
inc
out
retf
jg
(bad)
call
fidivr
js
xor
cld
cmp
mov
dec
(bad)
(bad)
(bad)
(bad)
cmp
popa
cs
sub
sub
lods
mov
fucomi
jnp
pop
mov
mov
lock
mov
mov
bound
mov
cs
stos
sar
loop
mov
(bad)
(bad)
jmp
dec
xor
lods
xor
lahf
xor
jecxz
dec
push
inc
movs
sub
xor
lods
inc
sub
push
jnp
(bad)
(bad)
(bad)
(bad)
jnp
lods
push
(bad)
push
in
jb
push
sub
gs
dec
cmps
and
data16
mov
(bad)
(bad)
(bad)
jmp
loop
imul
mov
and
push
fsubr
jne
(bad)
mov
mov
scas
jg
(bad)
push
mov
lods
mov
push
mov
jge
pop
inc
xor
(bad)
(bad)
mov
call
push
nop
dec
pop
lea
imul
jl
push
(bad)
(bad)
(bad)
jmp
sub
mov
ret
or
xor
adc
mov
call
sbb
mov
in
and
mov
xor
adc
cmc
mov
jge
mov
(bad)
(bad)
(bad)
fimul
ss
leave
add
sub
push
retf
cmp
icebp
(bad)
pop
mov
(bad)
(bad)
(bad)
call
inc
std
ret
mov
fxch
ret
div
sbb
into
pop
pop
cwde
and
push
(bad)
(bad)
(bad)
inc
mov
pop
inc
push
sbb
outs
nop
mov
(bad)
add
jmp
(bad)
fdivr
pop
mov
jae
cs
xor
and
(bad)
(bad)
push
jns
jo
and
fadd
jmp
jb
test
cmp
jmp
mov
adc
push
rol
mov
adc
(bad)
(bad)
jmp
call
pop
push
test
stos
add
xchg
mov
movs
jmp
jle
mov
adc
pop
mov
xor
(bad)
(bad)
jmp
mov
dec
push
int3
pop
repz
nop
jnp
movs
jo
jns
enter
inc
inc
xchg
and
ret
sbb
(bad)
(bad)
jmp
test
shl
rcl
call
xor
dec
ret
aaa
repnz
and
(bad)
mov
mov
mov
inc
fisubr
inc
in
(bad)
(bad)
aaa
xchg
mov
lock
pop
(bad)
jmp
jp
jl
cmp
xchg
les
xchg
fistp
inc
cld
or
jmp
xor
push
retf
xchg
sbb
and
push
cld
xchg
clc
push
mov
inc
sbb
into
movs
sbb
fldcw
inc
aam
dec
sahf
cs
sahf
mov
(bad)
(bad)
(bad)
fistp
movs
pop
and
mov
adc
movs
std
push
int3
(bad)
cmp
cs
and
xchg
push
(bad)
rcl
stc
sahf
xchg
test
xor
lods
pop
and
push
adc
and
ja
jmp
in
add
add
or
add
mov
adc
(bad)
(bad)
fild
xor
or
adc
adc
je
inc
push
sbb
icebp
gs
(bad)
(bad)
(bad)
call
cmp
xchg
ins
mov
sub
mov
fstp
ss
mov
lock
paddb
lds
pusha
xlat
and
mov
(bad)
(bad)
jmp
(bad)
mov
fstp
mov
mov
xchg
lahf
not
aas
pop
pop
cmp
cmp
push
in
iret
in
mov
lock
adc
xchg
lock
jg
retf
mov
enter
mul
sub
mov
(bad)
sbb
or
lahf
cli
in
std
cmc
pop
(bad)
iret
loop
(bad)
inc
(bad)
vmptrst
repnz
dec
std
adc
fcmovb
lods
jle
mov
adc
jle
(bad)
clc
inc
loope
loopne
sub
(bad)
daa
(bad)
mov
ja
arpl
jne
clc
scas
cmc
xchg
icebp
xor
int3
(bad)
push
aas
inc
pop
or
add
cmc
lock
clc
leave
dec
sti
jmp
jnp
(bad)
jbe
repnz
cli
sub
inc
clc
add
pop
mov
scas
dec
jg
pop
cld
pop
ins
sar
xor
fs
cld
jnp
aas
xchg
(bad)
rcl
xadd
cld
jmp
cs
lods
dec
std
jb
(bad)
cli
(bad)
loop
addr16
pop
jmp
jecxz
stc
jg
(bad)
call
loopne
sub
call
jp
repz
add
push
pop
data16
jmp
add
cmps
add
inc
mov
push
and
xchg
mov
(bad)
(bad)
(bad)
jmp
ins
sub
push
imul
out
loope
push
fstp
in
dec
xchg
pop
ror
mov
add
inc
jnp
mov
imul
into
xchg
sub
xchg
jbe
(bad)
jg
ret
jae
nop
adc
scas
xor
mov
mov
repz
(bad)
jmp
inc
hlt
xlat
test
push
jmp
push
jmp
jecxz
(bad)
inc
mov
(bad)
jg
add
ret
pop
xchg
(bad)
stc
or
div
fild
(bad)
dec
(bad)
jnp
lea
jnp
pusha
push
ja
cmp
lods
mov
lahf
add
fstp
mov
jmp
xchg
xor
pop
leave
cwde
xor
fst
adc
jnp
jne
dec
push
add
adc
pop
jae
daa
loope
push
pop
cli
and
xchg
cdq
enter
(bad)
mov
jg
xor
push
sar
pop
cli
ret
out
ss
(bad)
(bad)
(bad)
call
pop
mov
xchg
sub
xchg
retf
cld
cmp
sahf
jg
sar
div
jns
shl
pop
cmc
(bad)
cmp
arpl
mov
fucomip
sbb
mov
call
retf
(bad)
pop
fidivr
pop
movs
repnz
addr16
(bad)
fidiv
mov
std
fisttp
std
das
xchg
pop
test
ja
cmp
loopne
(bad)
jg
cmps
jg
in
je
cmc
sub
lahf
loop
jmp
ret
mov
xor
clc
inc
mov
pop
pusha
push
aas
dec
(bad)
inc
and
sbb
sbb
pop
sub
or
out
idiv
mov
inc
stos
dec
adc
jmp
in
aas
lds
sar
inc
and
aas
sbb
jns
dec
cmp
enter
sar
add
out
xchg
sub
jmp
outs
(bad)
jmp
or
lock
xchg
and
adc
std
(bad)
jg
cmps
call
cmc
add
fs
cmp
test
and
xchg
and
in
(bad)
mov
in
push
retf
pop
iret
xchg
or
mov
inc
out
std
mov
push
loop
add
sbb
pop
mov
std
dec
shr
ret
ins
mov
aas
std
push
jns
(bad)
out
(bad)
out
cmps
mov
lds
xor
xchg
pop
add
(bad)
(bad)
(bad)
push
pop
repnz
or
mov
inc
jbe
addr16
repz
dec
xor
fbstp
pushf
in
out
jnp
(bad)
(bad)
push
add
repnz
loope
cmc
dec
inc
adc
lds
loope
loop
ss
cmc
lahf
(bad)
(bad)
(bad)
mov
mov
call
sar
les
jg
and
(bad)
mov
jmp
push
jl
ins
scas
test
mov
push
mov
xchg
pop
adc
dec
and
mov
pop
aaa
(bad)
adc
scas
test
(bad)
(bad)
(bad)
(bad)
call
xchg
mov
aas
iret
shl
sbb
and
into
popa
les
cs
out
shr
(bad)
(bad)
dec
lods
fs
fmul
xor
cli
shl
sub
cmps
and
loop
jmp
test
mov
dec
xchg
int
ficomp
sahf
cmp
mov
out
jae
mov
aas
cmps
in
mov
movs
fld
fisub
xchg
movs
(bad)
dec
and
or
mov
pop
rcl
(bad)
inc
loop
cmp
sbb
lahf
cmp
sbb
inc
clc
mov
or
mov
and
mov
ficomp
xchg
mov
(bad)
dec
aam
scas
mov
hlt
xor
rcl
mov
das
mov
std
pop
cmps
jmp
pop
hlt
push
call
fs
push
jle
shr
inc
jge
pop
cld
(bad)
(bad)
mov
into
sar
xor
cli
jo
mov
pop
mov
jmp
push
out
xor
(bad)
(bad)
(bad)
jg
inc
ins
jo
cmp
pop
pop
sub
div
xchg
pop
(bad)
(bad)
fcomip
jmp
retf
and
push
and
adc
sub
xchg
pop
movs
jns
inc
mov
(bad)
call
hlt
cli
shl
sahf
scas
mov
es
js
movs
stos
or
(bad)
cmp
out
sub
daa
addr16
xchg
into
xor
dec
cli
aas
(bad)
(bad)
jmp
(bad)
pop
inc
ret
idiv
mov
push
arpl
inc
fsubr
mov
xchg
stos
sub
mov
jmp
mov
mov
(bad)
in
inc
sub
xor
push
xchg
jmp
shl
push
nop
mov
mov
mov
enter
jno
xor
(bad)
(bad)
inc
dec
xor
push
in
and
or
(bad)
retf
out
mov
fwait
into
(bad)
(bad)
(bad)
push
mov
scas
in
xchg
test
js
and
inc
dec
add
jecxz
int
lds
sub
push
xchg
mov
and
sub
in
jbe
(bad)
(bad)
dec
mov
pop
sti
inc
in
adc
cmp
lods
xchg
pop
idiv
(bad)
(bad)
(bad)
fisttp
(bad)
fs
test
jbe
cmp
mov
mov
test
pop
mov
jne
xor
sbb
mov
sub
mov
(bad)
jmp
or
mov
popf
sar
mov
sub
cmps
shl
(bad)
out
inc
mov
cs
pop
or
arpl
in
push
int3
mov
mov
loope
aad
fucomp
lods
fwait
jne
(bad)
(bad)
mov
push
jnp
xchg
addr16
mov
and
sub
cdq
push
mov
xor
sbb
(bad)
(bad)
(bad)
jmp
pop
xchg
cmps
and
cmp
jge
mov
lods
jnp
mov
mov
mov
in
or
ins
xchg
inc
cmps
push
adc
xchg
addr16
stos
ss
cs
xor
(bad)
jmp
fninit
mov
ret
jno
mov
test
sub
push
js
(bad)
(bad)
(bad)
push
jne
sub
or
shl
pop
nop
scas
or
jp
xor
mov
call
xor
push
imul
mov
retf
sti
and
aas
std
push
inc
mov
ss
push
daa
loopne
popf
imul
js
mov
nop
sub
fbstp
jne
or
fnsave
outs
(bad)
int3
push
lods
mov
call
pop
in
xchg
cmp
cmp
mov
xchg
inc
imul
or
das
xor
call
lds
add
pop
cmp
sbb
fcom
jp
enter
(bad)
fist
icebp
cs
or
adc
adc
(bad)
js
mov
pop
sub
lock
test
fld
imul
in
fist
pop
jmp
lock
div
imul
xor
pusha
movs
(bad)
jmp
pop
push
add
mov
fcmovnu
xchg
mov
mul
mov
call
lods
jbe
dec
outs
dec
nop
mov
and
daa
lods
xchg
pop
dec
xchg
push
arpl
(bad)
(bad)
(bad)
out
pop
in
dec
scas
test
cmp
jbe
dec
stc
mov
loopne
out
ret
fmul
push
cld
dec
stos
xchg
inc
popf
fild
sbb
inc
jmp
fs
jb
into
inc
aad
cmp
dec
(bad)
cdq
(bad)
xchg
xor
xchg
pop
out
sub
mov
sti
inc
or
fild
pop
std
dec
xor
fs
pop
aad
push
sahf
push
jae
fiadd
popf
sub
(bad)
(bad)
(bad)
pop
pop
(bad)
mov
xor
fld
mov
sub
dec
stos
dec
mov
mov
(bad)
(bad)
(bad)
push
push
and
cs
mov
bound
repz
repnz
sar
fdivr
jne
pop
(bad)
(bad)
dec
push
out
aas
loope
xor
lock
pshufw
daa
lds
cmp
sbb
sub
xchg
nop
and
jecxz
pop
xor
mov
push
leave
push
fcomip
call
cdq
test
add
loop
(bad)
fstp
out
pop
mov
(bad)
(bad)
(bad)
call
cmp
sbb
(bad)
movs
pushf
mov
dec
push
xor
mov
repnz
nop
pop
cmc
jmp
out
outs
out
(bad)
lods
test
sbb
call
arpl
cmps
jmp
mov
xchg
in
adc
xchg
sub
xchg
jmp
nop
dec
adc
inc
les
dec
mov
shl
vcomisd
icebp
sub
jl
retf
dec
inc
xchg
fwait
push
mov
pop
lods
aad
aas
add
(bad)
push
jl
nop
arpl
push
jl
int3
adc
test
or
cwde
mov
(bad)
jmp
in
pop
xlat
arpl
mov
dec
and
and
mov
adc
sbb
mov
xchg
fcomip
(bad)
jmp
ins
cdq
mov
and
sbb
mov
inc
sbb
imul
(bad)
call
pop
in
xchg
imul
ds
mov
imul
adc
jl
scas
lods
iret
inc
pop
cmp
out
clc
and
loope
mov
lea
ja
inc
mov
mov
repz
sub
mov
(bad)
call
add
into
retf
mov
mov
push
loop
hlt
ins
mov
imul
(bad)
(bad)
jmp
fistp
push
jb
cwde
mov
mov
sub
or
out
dec
xchg
xor
addr16
add
(bad)
mov
xor
call
jle
mov
stos
js
push
mov
(bad)
call
sti
adc
or
fisubr
inc
out
xchg
hlt
retf
inc
xchg
dec
cdq
sub
add
sbb
push
jp
movs
dec
dec
hlt
nop
movs
push
mov
icebp
mov
and
push
iret
jl
push
adc
lods
and
jg
sub
movs
pusha
sub
arpl
xchg
test
in
xor
lods
push
(bad)
add
xchg
xor
dec
inc
mov
push
jno
(bad)
jmp
call
(bad)
pop
jno
inc
sbb
(bad)
jmp
in
dec
sub
pop
(bad)
mov
out
pop
fild
hlt
mov
jnp
push
pop
inc
xchg
int
fld
fisttp
adc
repnz
fwait
mov
(bad)
dec
jo
iret
outs
fnstenv
mov
and
mov
dec
sahf
fs
cld
inc
dec
dec
sub
fwait
push
(bad)
aaa
test
nop
inc
loopne
mov
lock
dec
inc
inc
sbb
mov
(bad)
push
mov
mov
(bad)
inc
ret
add
add
xchg
jp
rcr
mov
add
movs
or
(bad)
(bad)
dec
dec
sbb
add
jae
or
pusha
inc
xor
inc
(bad)
(bad)
(bad)
mov
xchg
push
mov
jp
adc
arpl
pop
push
lahf
add
adc
push
call
out
fdiv
adc
sar
jb
into
cmp
call
(bad)
fstp
hlt
mov
adc
cdq
pop
leave
mov
add
adc
mov
or
xor
test
movs
and
mov
add
sbb
jb
pop
ror
clc
sti
repz
cwde
and
(bad)
(bad)
dec
sub
les
add
push
push
cmc
xchg
inc
popa
lds
popa
sub
sub
pop
dec
inc
jnp
lods
aad
(bad)
(bad)
jmp
lahf
scas
fsubr
fdiv
retf
jmp
xor
pop
adc
aad
inc
or
ins
fwait
add
(bad)
(bad)
stc
lods
cmp
sahf
(bad)
jmp
fs
push
movs
xor
inc
xor
mov
(bad)
(bad)
(bad)
mov
pop
push
push
clc
xor
pop
pop
adc
push
push
cs
faddp
test
add
ds
(bad)
(bad)
call
pop
sub
xor
mov
jb
inc
push
push
inc
stos
dec
jmp
add
dec
push
test
in
(bad)
(bad)
out
clc
pop
fcmovnu
in
test
pop
cmps
bound
leave
movs
dec
fs
sbb
out
and
(bad)
(bad)
inc
into
mov
out
adc
add
sub
or
pop
pushf
ret
(bad)
(bad)
inc
bound
rol
mov
xchg
mov
dec
inc
(bad)
xchg
xchg
(bad)
(bad)
(bad)
call
or
or
xchg
addr16
(bad)
mov
push
inc
stos
pop
mov
push
(bad)
(bad)
(bad)
inc
cmps
pop
inc
mov
push
push
or
push
mov
sub
dec
arpl
fs
push
mov
xchg
fidivr
ss
(bad)
(bad)
(bad)
inc
push
hlt
jno
jmp
cmp
mov
rol
or
or
in
retf
imul
(bad)
(bad)
(bad)
call
daa
fldcw
xor
pushf
mov
dec
mov
or
push
scas
pop
inc
xchg
clc
(bad)
dec
xchg
lahf
push
enter
es
cwde
sub
xchg
lods
jne
mov
pop
sahf
dec
sub
or
add
fisub
xchg
popa
dec
sar
(bad)
inc
fidivr
add
sub
adc
pop
arpl
adc
cmp
push
fcom
mov
mov
(bad)
call
arpl
bound
sbb
in
push
xchg
ret
cmps
sub
mov
(bad)
dec
or
dec
pop
fsub
or
stos
data16
xor
outs
js
mov
jl
dec
xchg
jle
jmp
mov
das
sar
jne
mov
sbb
in
push
sub
rcl
cmp
fwait
div
out
mov
add
jb
(bad)
adc
pop
(bad)
(bad)
(bad)
mov
and
in
(bad)
push
stos
fisub
out
into
sbb
cmp
inc
jo
orps
(bad)
mov
call
adc
div
sahf
jns
xchg
or
(bad)
loope
in
push
out
imul
(bad)
(bad)
mov
ins
div
lock
out
mov
push
cs
xor
(bad)
(bad)
call
dec
sub
cli
adc
or
std
outs
push
aad
push
adc
xor
inc
inc
cwde
(bad)
(bad)
(bad)
call
(bad)
xchg
ins
or
adc
inc
adc
xchg
inc
xor
mov
jnp
(bad)
(bad)
dec
daa
sbb
scas
scas
js
inc
adc
pslld
test
cmc
(bad)
push
loopne
and
fidivr
xor
in
and
xchg
mov
popf
pop
ins
jmp
lods
nop
xor
out
retf
(bad)
fucomip
dec
jge
xchg
(bad)
jne
test
and
and
pusha
aam
out
pop
(bad)
cmp
sbb
mov
popa
in
scas
jmp
retf
into
adc
enter
push
sub
sub
jb
call
cli
mov
inc
jno
es
sub
stc
das
mov
fiadd
jmp
push
retf
retf
push
pop
sahf
cmp
jp
xchg
fdivr
fnstenv
hlt
(bad)
inc
xor
fiadd
lods
pop
sbb
(bad)
(bad)
inc
je
xor
and
shl
xor
loope
sar
mov
lock
fcmovnbe
mov
fidiv
mov
call
jmp
mov
sub
and
test
in
push
sbb
jmp
inc
cs
rep
mov
push
clc
and
dec
or
idiv
lea
inc
add
xor
or
jg
call
cmp
into
cmp
xor
les
mov
imul
sub
(bad)
(bad)
dec
xchg
loope
out
push
inc
and
jge
ret
dec
es
in
(bad)
xchg
(bad)
(bad)
push
mov
dec
bound
jbe
nop
in
mov
out
jb
popf
or
inc
jl
ins
lods
jmp
(bad)
fild
cld
cdq
and
ror
dec
out
(bad)
sub
(bad)
(bad)
jg
jo
xor
in
call
loopne
popa
in
adc
mov
test
(bad)
call
cmp
test
pop
pop
cmp
sbb
iret
fwait
dec
dec
pop
cmc
mov
repnz
jmp
scas
jle
add
in
sbb
daa
inc
sbb
fld
(bad)
jae
scas
jmp
out
push
icebp
ds
mov
pop
and
(bad)
(bad)
call
and
ret
and
fwait
pcmpgtd
and
push
je
push
les
inc
idiv
(bad)
jmp
push
fsubr
repnz
(bad)
jmp
xor
repnz
mov
retf
out
jnp
push
and
dec
nop
xchg
adc
arpl
sub
(bad)
(bad)
jmp
and
or
add
int3
ss
push
xchg
inc
inc
sahf
push
inc
and
call
sub
push
(bad)
retf
mov
dec
(bad)
inc
gs
push
hlt
xchg
sub
xor
push
mov
imul
popa
push
sbb
sbb
aaa
mov
movs
test
int3
dec
cs
pop
mov
(bad)
pop
jmp
stos
jae
pop
loopne
push
lea
clc
sub
sub
or
push
push
imul
(bad)
jmp
push
out
fcmovnb
push
xchg
cmp
rcr
in
pop
xchg
out
sbb
sar
pusha
loope
(bad)
or
lock
push
repz
mov
nop
adc
(bad)
(bad)
jmp
mov
adc
inc
xchg
stc
cs
cmp
xchg
xchg
lea
(bad)
(bad)
mov
dec
gs
fimul
cdq
xor
push
push
lods
les
fst
mov
in
test
cs
fcmovnbe
pop
adc
retf
pushf
jno
push
jg
fnsave
pop
mov
jecxz
mov
pop
clc
(bad)
in
(bad)
xchg
and
js
jnp
add
ds
fst
sub
(bad)
(bad)
dec
enter
sbb
add
dec
iret
cwde
add
adc
dec
fsincos
pop
lds
pop
lods
cmp
add
(bad)
(bad)
jg
sub
out
pop
enter
mov
jns
(bad)
mov
mov
or
loopne
push
mov
(bad)
(bad)
(bad)
push
jno
aam
push
fbld
(bad)
adc
pop
pop
jmp
mov
mov
inc
mov
(bad)
out
cmp
cmps
iret
neg
xor
outs
inc
add
mov
jmp
ret
dec
icebp
fistp
or
add
stos
into
(bad)
call
inc
test
adc
dec
cmp
inc
inc
adc
sub
or
pop
sbb
(bad)
dec
push
sahf
mov
test
pop
outs
in
cmp
jmp
(bad)
push
sub
aaa
dec
lock
xchg
ret
es
jae
cli
in
retf
mov
(bad)
(bad)
(bad)
call
fdivr
push
popa
retf
dec
mov
mov
loopne
popf
push
push
pushf
and
push
pop
out
(bad)
(bad)
fld
or
sbb
lods
mov
or
sub
rcl
xchg
repnz
(bad)
(bad)
call
(bad)
cmp
mov
sbb
mov
or
and
and
adc
and
dec
mov
aaa
lods
(bad)
xor
scas
stos
(bad)
call
mov
mov
lods
out
push
dec
aas
fs
adc
cwde
inc
xor
inc
(bad)
(bad)
inc
lds
iret
ds
mov
cmps
jnp
adc
mov
mov
push
sub
and
dec
les
(bad)
(bad)
(bad)
dec
adc
jbe
lea
xchg
or
cli
(bad)
fimul
(bad)
(bad)
(bad)
dec
in
push
mov
nop
mov
adc
adc
pop
loope
or
xchg
mov
(bad)
(bad)
cmp
lods
popa
dec
xlat
(bad)
mov
dec
mov
mov
mov
call
push
mov
enter
add
sbb
(bad)
jmp
loop
pop
xlat
jl
xlat
cmp
js
(bad)
or
es
(bad)
fcomip
adc
in
stos
dec
push
lds
inc
jmp
pop
movs
mov
cwde
xchg
and
(bad)
(bad)
fidiv
pop
gs
(bad)
dec
mov
and
xchg
ret
mov
call
jp
mov
and
int3
arpl
jecxz
(bad)
ds
stc
ins
mov
pop
mov
inc
xlat
out
mov
hlt
sub
mov
jnp
aam
aam
or
mov
cmpps
mov
sub
imul
(bad)
(bad)
(bad)
(bad)
mov
(bad)
mov
cmp
aas
fild
loopne
cmp
jo
xor
(bad)
(bad)
inc
pushf
push
retf
mov
xor
fdivr
mov
test
idiv
jmp
dec
es
jo
mov
clc
dec
xor
mov
mov
lahf
not
dec
(bad)
(bad)
jg
dec
idiv
jecxz
and
into
aaa
jg
call
jbe
aad
aas
push
add
jge
jno
lock
push
lahf
popf
test
(bad)
(bad)
dec
iret
inc
femms
pop
adc
and
cmp
mov
leave
push
or
cmp
(bad)
push
push
mov
aas
xor
scas
outs
outs
and
push
adc
nop
mov
(bad)
jmp
cmp
xlat
rcl
int
movs
sub
xor
ss
outs
adc
sub
xchg
(bad)
(bad)
(bad)
jmp
imul
dec
add
loop
adc
scas
lods
mov
inc
mov
(bad)
(bad)
dec
dec
dec
pusha
test
nop
xor
(bad)
xlat
aad
mov
das
jge
pop
mov
adc
(bad)
mov
sbb
(bad)
in
icebp
sbb
jae
and
xchg
sahf
mov
push
mov
dec
int
pop
and
dec
das
repnz
call
push
leave
adc
xchg
push
into
xchg
ins
cdq
adc
dec
stos
lods
jb
lea
and
or
(bad)
addr16
cmp
jecxz
or
loope
xchg
ins
mov
sar
stc
pop
adc
(bad)
(bad)
fbstp
outs
aad
loop
adc
adc
jbe
stos
push
xlat
jge
pop
call
mov
sub
(bad)
outs
daa
jmp
xor
jbe
icebp
and
mov
addr16
std
pop
ffree
(bad)
ins
in
stc
inc
imul
dec
imul
jmp
xor
jae
fdiv
sbb
or
fdivrp
pop
aas
mov
mov
sub
jle
or
js
cld
test
sub
jecxz
outs
jg
sub
int
jg
(bad)
nop
pop
mov
jb
cmps
pushf
and
imul
sbb
jno
out
mov
(bad)
fcomip
loopne
shl
fstp
mov
(bad)
cld
arpl
outs
add
in
std
das
js
mov
xchg
inc
mov
mov
push
adc
and
dec
clc
(bad)
mov
sub
push
xchg
loop
sub
mov
mov
retf
hlt
(bad)
jmp
pushf
in
pop
xchg
mov
pop
ins
push
(bad)
dec
cmps
sar
jg
in
pop
inc
lods
pusha
es
int3
nop
mov
movs
dec
pop
es
call
adc
call
aaa
imul
frstor
(bad)
push
cmp
shl
shl
es
gs
nop
mov
mov
mov
movs
movs
enter
sahf
(bad)
ja
(bad)
mov
pop
loopne
(bad)
aad
js
pop
int3
jns
aas
and
xor
(bad)
jb
mov
in
sub
mov
mov
cmp
xchg
push
add
pop
(bad)
(bad)
mov
jb
sbb
cwde
aaa
stos
rcl
jmp
mov
dec
jmp
(bad)
dec
pop
lea
mov
mov
or
(bad)
dec
cdq
jge
jge
je
mov
push
cmps
mov
jnp
sti
out
pop
in
pop
push
and
mov
in
ja
arpl
fcomp
ret
imul
sub
(bad)
add
cdq
rcr
xchg
jl
add
mov
out
fst
(bad)
(bad)
(bad)
pop
mov
loopne
aam
ins
inc
repnz
jmp
pop
inc
cld
pop
mov
xchg
es
loop
pop
adc
mov
push
in
sbb
stc
popf
xchg
ret
mov
xchg
clc
(bad)
psraw
aad
xor
int
ins
js
icebp
sar
jmp
ret
xor
xor
dec
(bad)
out
mov
xchg
mov
(bad)
(bad)
mov
(bad)
xchg
outs
xchg
bound
jmp
pop
lods
adc
push
ds
push
(bad)
jle
sbb
outs
jmp
(bad)
(bad)
call
inc
fidiv
dec
xchg
mov
pop
aad
sub
mov
xchg
xor
(bad)
hlt
mov
pusha
adc
test
mov
inc
push
das
inc
add
push
lods
cmp
(bad)
mov
dec
push
not
fcom
jae
mul
mov
mov
outs
sbb
sar
loop
and
cs
cwde
jb
(bad)
call
inc
in
repnz
nop
mov
(bad)
jae
xor
push
or
into
idiv
fwait
mov
jae
mov
lahf
xor
cmp
sti
pop
inc
pop
lock
fldenv
scas
mov
(bad)
dec
sbb
(bad)
jg
dec
sahf
dec
shl
gs
dec
fwait
cmp
jmp
pop
aad
xor
dec
ret
mov
ss
fst
popa
mov
lods
nop
sub
(bad)
(bad)
call
dec
cmp
inc
ins
adc
retf
cmps
fimul
das
cmp
pop
icebp
call
sub
jno
scas
cmps
or
(bad)
sub
icebp
inc
xor
js
test
cmp
xchg
sbb
gs
fist
dec
xchg
jp
pop
adc
add
sub
mov
int
je
fbstp
sahf
pop
jge
call
sub
shl
inc
fdivp
in
dec
xchg
movs
(bad)
sbb
xor
(bad)
cmp
div
cmp
xlat
mov
dec
vpsubq
fwait
(bad)
(bad)
jmp
pop
sub
and
jbe
cmc
int3
xor
retf
and
xchg
pop
jmp
sar
push
std
jnp
mov
(bad)
ret
mov
call
mov
dec
jg
dec
mov
jbe
shl
fild
mov
add
ja
pop
ret
inc
mov
inc
int
jge
pop
daa
add
xchg
and
out
add
jmp
or
adc
adc
shr
pop
cmp
out
mov
(bad)
(bad)
dec
pop
test
lods
int3
aam
into
pop
pop
pop
mov
adc
loope
and
das
sbb
and
lods
lods
dec
repz
sub
xchg
or
lods
mov
popf
and
mov
push
retf
cmc
(bad)
mov
sahf
ret
out
add
mov
mov
mov
cmp
xchg
xchg
rol
mov
jmp
test
(bad)
(bad)
fstp
push
ins
pop
jbe
mov
aaa
fwait
jl
mov
ss
mov
inc
push
dec
jp
(bad)
(bad)
jmp
dec
mov
jmp
dec
pop
dec
shl
push
in
jl
lods
inc
in
lds
aaa
pop
cmc
(bad)
call
dec
ret
mov
xchg
sahf
xchg
mov
fwait
mov
sbb
leave
cli
(bad)
(bad)
call
jge
jno
imul
sub
xor
cmp
ins
mov
outs
data16
rcr
shl
mov
mov
mov
mov
test
jns
xchg
(bad)
inc
ins
pop
pop
jmp
movs
jge
mov
lea
pop
mov
(bad)
(bad)
cmp
and
fisub
lahf
data16
in
repnz
xchg
nop
jae
jmp
shl
loopne
add
and
sub
pop
inc
pushf
(bad)
(bad)
(bad)
(bad)
jmp
aaa
add
mov
dec
adc
xor
pop
jo
mov
(bad)
(bad)
(bad)
jmp
xchg
push
cwde
int3
xchg
shr
adc
mov
xchg
mov
push
pusha
cli
sub
imul
aaa
xchg
pop
pop
js
(bad)
(bad)
push
outs
sub
mov
xor
shl
mov
loop
mov
mov
(bad)
(bad)
(bad)
sti
xchg
xor
in
imul
mov
dec
pushf
and
add
dec
out
cmp
(bad)
fild
hlt
mov
nop
fstp
movs
jg
frstor
mov
or
(bad)
gs
(bad)
(bad)
dec
cwde
and
mov
call
mov
(bad)
aad
sbb
fwait
nop
mov
in
mov
mov
arpl
test
(bad)
(bad)
jg
sub
aas
push
outs
mov
lds
dec
mov
mov
fistp
jb
jl
(bad)
mov
dec
push
and
pop
cmp
loopne
cld
ins
les
jmp
xor
mov
jecxz
pop
aaa
ret
dec
in
in
int3
out
push
call
(bad)
(bad)
dec
arpl
icebp
xchg
das
push
or
loop
cdq
cdq
test
mov
push
push
fistp
data16
imul
push
rcl
ins
fnstcw
and
out
pop
push
mov
pop
(bad)
(bad)
(bad)
call
ss
push
dec
pop
inc
mov
js
jne
sub
ss
fst
out
adc
pusha
inc
lods
(bad)
sti
dec
dec
cdq
push
jbe
mov
jl
stos
fwait
push
cmps
or
xchg
mov
adc
lahf
(bad)
(bad)
(bad)
fld
dec
fdiv
mov
and
aaa
mov
js
jo
fmul
or
mov
ud0
(bad)
(bad)
cmp
jns
iret
dec
sbb
aaa
or
or
sahf
and
inc
mov
idiv
pop
adc
adc
inc
jb
shl
pop
sub
lods
push
(bad)
fldln2
cmc
aaa
fdiv
mov
into
shl
and
(bad)
call
scas
shl
add
call
pop
mov
dec
pop
mov
std
mov
xor
jnp
ret
xor
out
ins
lea
je
(bad)
(bad)
(bad)
mov
std
test
mov
imul
daa
test
inc
hlt
movs
mov
push
repz
(bad)
mov
fisttp
dec
jge
repnz
mov
adc
add
(bad)
(bad)
(bad)
push
loope
and
and
(bad)
adc
or
sahf
xchg
pop
xlat
jnp
(bad)
(bad)
(bad)
cmp
sbb
loop
out
test
adc
mov
jae
sub
xchg
call
(bad)
(bad)
inc
xchg
out
dec
push
ins
mov
out
dec
fild
imul
cmp
mov
adc
cld
jmp
retf
fwait
push
mov
bnd
xor
or
mov
dec
fcomip
scas
mov
or
aaa
xor
mov
ds
call
(bad)
(bad)
(bad)
push
std
scas
ins
ficomp
mov
out
nop
fwait
inc
mov
and
out
add
fdiv
int3
dec
lds
adc
mov
sbb
sub
ret
in
sub
xor
cwde
(bad)
dec
lock
int3
loope
push
loop
or
outs
cmp
and
mov
gs
xor
pop
pop
jmp
neg
pop
ror
in
and
dec
xchg
cld
sbb
cld
(bad)
push
stos
cdq
mov
inc
jl
mov
sbb
int3
cwde
mov
(bad)
dec
pop
ret
fadd
movs
xchg
push
jmp
cmp
(bad)
sbb
xchg
push
and
int3
sbb
(bad)
jmp
mov
cmp
addr16
data16
push
jecxz
jo
push
imul
jmp
into
mov
jns
cmps
pop
clc
mov
mov
mov
loopne
dec
in
sar
fcomip
adc
add
nop
cwde
imul
push
pop
sbb
inc
or
inc
mov
cli
int3
sub
(bad)
dec
outs
inc
neg
enter
(bad)
sub
xchg
pop
push
jecxz
jmp
js
inc
pop
(bad)
dec
mov
les
pop
push
adc
inc
mov
sub
and
(bad)
inc
fld
stos
jne
pop
outs
aaa
xlat
(bad)
adc
test
cmp
fs
dec
inc
cld
wrmsr
or
cmp
jbe
and
dec
jecxz
xchg
(bad)
(bad)
call
jge
add
mov
sub
sbb
dec
add
mov
(bad)
(bad)
(bad)
dec
push
adc
dec
xchg
ret
bound
aad
add
inc
add
in
(bad)
(bad)
(bad)
inc
or
inc
jmp
ins
pushf
ficomp
sahf
xor
js
mov
sbb
inc
and
jmp
icebp
dec
or
sub
ret
(bad)
mov
js
pop
mov
ret
inc
dec
jns
outs
mov
es
mov
jecxz
adc
pushf
stos
test
inc
and
(bad)
mov
and
mov
xchg
cmc
dec
mov
test
mov
push
xchg
jmp
or
add
pop
mov
out
scas
mov
mov
ret
cli
xor
mov
(bad)
(bad)
jmp
rcl
ds
cmp
pop
mov
clc
sbb
adc
or
(bad)
(bad)
jmp
sbb
and
test
sub
dec
inc
je
test
aam
into
ficomp
aaa
std
(bad)
jmp
push
mov
sub
and
call
sar
inc
jns
call
mov
mov
cmps
dec
and
(bad)
jmp
clc
pop
cli
mov
out
pop
mov
sub
mov
and
(bad)
jmp
int3
mov
push
jne
inc
mov
fisubr
and
int
lds
aam
(bad)
cmp
and
cmp
stos
lock
retf
mov
jno
into
(bad)
(bad)
(bad)
inc
push
sbb
ret
or
adc
push
or
aam
pop
dec
add
(bad)
movs
pop
sub
(bad)
(bad)
push
stos
imul
dec
pop
mov
(bad)
dec
(bad)
jg
xchg
push
pop
mov
lock
jecxz
mov
push
fptan
or
mov
sbb
loop
aam
mov
repnz
test
call
jl
sar
aaa
dec
add
stos
adc
call
loopne
pusha
stos
push
sub
mov
fcmovb
jae
push
inc
sub
(bad)
inc
ins
lea
xchg
jle
pcmpeqw
js
or
cmp
xor
push
adc
(bad)
(bad)
jmp
dec
ret
push
adc
imul
loop
mov
jbe
dec
ds
pop
jo
sub
or
mov
mov
xchg
mov
(bad)
(bad)
mov
mov
cli
mov
cmc
xlat
xchg
pop
div
fdiv
test
ja
fsub
pop
icebp
imul
retf
pushf
ins
xor
(bad)
(bad)
dec
and
daa
mov
popa
inc
fstp
imul
fdivr
(bad)
(bad)
jmp
bound
add
retf
inc
ror
cmps
mov
jns
pushf
adc
push
(bad)
(bad)
(bad)
(bad)
mov
pop
pop
pop
ficomp
lahf
mov
pop
out
cmc
scas
fucomp
mov
jae
mov
ret
(bad)
(bad)
(bad)
call
add
fisttp
add
push
cdq
icebp
lds
sbb
xchg
xlat
push
sar
inc
test
inc
inc
sub
mov
pop
(bad)
sahf
in
(bad)
(bad)
(bad)
call
(bad)
dec
cmp
xchg
add
iret
inc
sub
sbb
mov
(bad)
(bad)
inc
ins
and
jecxz
inc
dec
cdq
loope
push
dec
pushf
mov
hlt
mov
cmp
mov
inc
(bad)
mov
(bad)
out
rep
mov
inc
or
inc
aas
sub
(bad)
stos
inc
jbe
(bad)
(bad)
(bad)
dec
push
ret
pop
adc
cmp
cmp
xchg
sub
xchg
add
stos
outs
test
lea
and
xrelease
xor
(bad)
(bad)
jmp
mov
push
test
cmp
fcomip
sub
cmc
jmp
or
jp
(bad)
(bad)
(bad)
(bad)
cmp
xor
test
jmp
popa
rcr
out
test
sbb
and
jmp
cmps
push
push
call
mov
adc
push
xlat
repnz
aaa
outs
(bad)
call
mov
xor
dec
cmc
push
or
imul
aad
(bad)
(bad)
call
mov
inc
outs
mov
test
xor
hlt
ret
lods
sbb
add
sub
dec
sbb
mov
call
push
xlat
fadd
push
test
data16
push
sub
iret
mov
mov
(bad)
mov
mov
(bad)
(bad)
(bad)
mov
xor
inc
and
add
mov
popa
dec
ins
rcl
(bad)
jmp
lahf
push
cmp
xchg
jno
xor
test
loope
dec
shl
mov
call
push
out
fcom
inc
push
iret
jmp
push
rcr
lods
nop
cmp
mov
push
nop
jbe
daa
fcmovnb
and
outs
xchg
nop
or
loop
(bad)
(bad)
(bad)
jmp
xchg
push
popw
push
clc
outs
or
dec
bound
xchg
(bad)
jns
adc
and
cmp
(bad)
push
mov
sub
or
add
and
jecxz
push
and
repnz
mov
shr
(bad)
dec
dec
bound
scas
cdq
stc
sub
repz
mov
jmp
(bad)
pop
adc
dec
iret
push
sub
int3
dec
pop
mov
add
jmp
pop
cmp
dec
loope
jb
sbb
sub
mov
imul
push
xor
repz
aad
xchg
xlat
or
fiadd
mov
push
mov
xlat
cmp
adc
or
hlt
retf
push
mov
dec
pop
adc
call
mov
cdq
test
imul
and
xchg
stos
mov
or
or
mov
or
adc
cld
js
push
xor
stc
xor
add
lods
add
inc
jge
in
pop
scas
mov
pop
shl
test
ret
cmp
push
(bad)
ficom
cmp
not
mov
sbb
lods
xchg
xchg
imul
cli
pop
into
nop
dec
push
xchg
inc
sub
(bad)
(bad)
(bad)
push
fdiv
lods
xchg
loope
sbb
ds
inc
mov
xchg
xchg
retf
call
pop
icebp
scas
mov
sbb
jno
int3
pop
mov
xor
out
cli
(bad)
call
out
loopne
dec
jns
pop
rol
retf
sub
dec
xor
sbb
pop
es
push
mov
xor
mov
leave
fdivr
ins
cmps
int
add
cld
clc
adc
(bad)
(bad)
call
js
push
movs
pop
pushf
movs
cmp
adc
push
lods
(bad)
add
loope
repnz
mov
(bad)
jg
add
sbb
in
popf
xchg
sub
adc
or
sar
dec
dec
inc
push
lods
push
sub
jnp
in
xchg
call
(bad)
jmp
xor
mov
pusha
xchg
ror
mov
mov
pop
adc
(bad)
(bad)
mov
inc
in
ret
ret
mov
into
pop
pop
lock
sbb
dec
call
(bad)
cmp
inc
mov
mov
dec
jns
sub
mov
pop
icebp
(bad)
dec
xchg
adc
sar
lods
lock
loope
fs
arpl
pop
xchg
cs
mov
(bad)
push
cld
jns
mov
adc
pusha
in
dec
loopne
ins
mov
jge
outs
and
mov
jmp
jge
nop
cld
retf
(bad)
movs
in
fsubr
sti
xchg
xchg
sbb
and
iret
movs
mov
sbb
ret
inc
push
cmp
push
(bad)
(bad)
(bad)
call
cmp
add
mov
sbb
xor
jmp
and
push
dec
mov
sbb
jmp
dec
push
dec
mov
inc
nop
fcmovb
xchg
imul
(bad)
(bad)
(bad)
call
sub
pop
push
mov
add
add
mov
xchg
sbb
xchg
inc
test
scas
inc
inc
stos
xchg
nop
(bad)
dec
fist
sbb
mov
es
lock
jg
pop
mov
fbstp
add
es
shl
dec
ds
hlt
shl
scas
(bad)
(bad)
out
xchg
stos
xchg
push
pop
imul
data16
cmp
ret
mov
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
test
rep
pusha
adc
add
mov
add
pusha
mov
(bad)
(bad)
push
movs
into
fcmovu
dec
imul
mov
push
xchg
arpl
(bad)
(bad)
(bad)
ffreep
hlt
mov
pop
push
mov
repnz
mov
lahf
mov
mov
sbb
hlt
jo
pusha
(bad)
xor
mov
pop
add
les
mov
(bad)
(bad)
out
and
push
icebp
int3
cld
les
rol
sbb
ss
(bad)
(bad)
inc
mov
mov
xchg
test
es
test
dec
and
jp
in
enter
(bad)
(bad)
jmp
cdq
push
ret
outs
dec
(bad)
leave
mov
aad
cli
xor
test
mov
and
(bad)
dec
jb
push
xchg
sub
pop
jns
cwde
scas
icebp
xchg
mov
fmul
mov
(bad)
fild
adc
push
clc
dec
add
test
fwait
(bad)
inc
cld
pushf
iret
repz
ret
and
rcl
push
adc
mov
ins
cdq
cs
clc
call
push
mov
jbe
push
mov
fwait
pop
sub
xor
(bad)
(bad)
inc
shr
ret
sti
in
mov
pushf
lea
jne
gs
clc
(bad)
(bad)
call
jb
int3
or
imul
jmp
cmp
mov
es
sti
inc
outs
leave
fld
sbb
les
xchg
loope
pop
icebp
inc
jg
xchg
in
push
cmc
cmp
cwde
adc
ret
inc
adc
xchg
xlat
cli
(bad)
(bad)
push
gs
push
dec
popf
sub
xor
jb
repz
jg
mov
jns
call
jle
jns
dec
mov
push
jnp
sahf
aad
mov
pop
sar
call
cmp
stos
adc
ds
mov
dec
jg
enter
dec
jmp
loop
stos
pushf
cmc
ds
(bad)
cmc
(bad)
fdivr
sahf
cmps
jl
and
jl
pop
jns
add
(bad)
mov
xchg
out
out
push
je
lock
stc
push
stos
jmp
jge
(bad)
(bad)
jg
hlt
out
mov
jns
std
xchg
or
add
scas
movsx
sbb
mov
(bad)
(bad)
(bad)
jmp
cdq
and
idiv
pop
cwde
adc
in
in
jno
dec
dec
push
and
into
test
jb
inc
adc
mov
xor
mov
(bad)
inc
nop
in
cmps
sbb
in
or
jg
(bad)
scas
cli
mov
cwde
jmp
inc
or
mov
stc
adc
ja
cmp
xor
cld
xor
mul
xor
push
cmp
(bad)
mov
mov
stos
pop
and
inc
or
cmp
add
dec
jne
lock
push
loop
leave
or
pushf
leave
cld
(bad)
(bad)
push
and
pop
cld
fisub
mov
sub
in
test
add
stos
call
push
movs
dec
fisttp
shl
test
jmp
cli
mov
test
or
in
push
xor
in
mov
(bad)
(bad)
(bad)
inc
xchg
xchg
dec
jns
in
std
jp
dec
fst
or
cwde
mov
int3
inc
inc
push
mov
clc
jmp
repz
xchg
jbe
into
mov
xchg
mov
sbb
dec
xor
cli
(bad)
(bad)
(bad)
out
add
sub
pop
aaa
xchg
push
stos
inc
ins
fdivr
jmp
fcmovnbe
xchg
fnstenv
test
imul
test
mov
mov
div
dec
mov
enter
(bad)
jmp
cmp
loope
int
les
cmp
(bad)
(bad)
(bad)
dec
outs
outs
sbb
sub
in
xchg
fimul
pop
cmp
adc
mov
xor
(bad)
(bad)
(bad)
jg
retf
imul
into
adc
call
aad
xor
mov
fstp
mov
push
shl
mov
pop
shr
enter
mov
es
aad
cmps
jg
jmp
push
sub
rol
ficomp
fcmovu
sti
jg
in
dec
(bad)
(bad)
(bad)
jle
out
pop
in
pop
mov
jl
sar
cmp
or
xchg
mov
dec
mov
(bad)
(bad)
dec
pop
shl
xor
scas
mov
popa
mov
sbb
sti
sub
sbb
(bad)
jle
xchg
idiv
(bad)
jmp
mov
(bad)
loop
shl
mov
push
fist
out
mov
adc
ds
idiv
jmp
dec
data16
and
ins
jge
cld
push
cli
xchg
jbe
(bad)
(bad)
call
gs
ds
xchg
fstp
shl
jb
mov
imul
retf
cld
inc
cmp
(bad)
(bad)
jmp
(bad)
mov
mov
xor
gs
fs
sbb
iret
inc
ror
inc
mov
(bad)
(bad)
mov
(bad)
ins
jmp
pop
out
xor
daa
ss
pusha
out
fdivrp
dec
adc
jbe
scas
lea
push
and
sbb
dec
mov
push
loope
add
pop
dec
mov
inc
cdq
(bad)
(bad)
call
mov
daa
push
sbb
mov
int3
bound
mov
(bad)
sbb
sbb
int
(bad)
rcl
out
outs
mov
(bad)
fdiv
jge
lds
ds
clc
jns
in
push
jg
std
int
push
adc
mov
pushf
cld
(bad)
(bad)
call
inc
out
std
int
(bad)
loop
fucomip
cdq
mov
fbld
ins
lods
lock
fistp
pop
ret
xchg
sti
mov
jg
fwait
mov
(bad)
(bad)
fbld
pop
jg
and
sub
pop
and
call
(bad)
loop
mov
mov
(bad)
(bad)
dec
mov
(bad)
mov
and
xor
mov
in
jmp
popa
push
jmp
test
(bad)
call
enter
cli
hlt
push
leave
mov
jle
dec
pop
mov
(bad)
(bad)
(bad)
jg
sub
inc
(bad)
push
imul
fnstenv
sbb
jnp
jecxz
and
and
call
push
in
add
pop
iret
xchg
add
(bad)
(bad)
(bad)
cli
(bad)
and
push
dec
ja
dec
and
fs
loope
mov
fdiv
cs
js
ret
sbb
xchg
call
in
jle
dec
cwde
ja
scas
mov
pop
push
mov
fisubr
hlt
and
push
test
(bad)
(bad)
cmp
inc
push
add
jae
pusha
mov
cmp
push
inc
jae
adc
(bad)
mov
or
add
or
rol
and
call
sub
ss
dec
dec
je
or
repz
and
test
jnp
cdq
fld
mov
jg
inc
push
lock
mov
and
lea
mov
fidiv
je
sbb
push
std
pop
mov
pusha
sub
sub
jle
jae
dec
ds
or
aad
add
or
fmulp
cmp
mov
imul
or
mov
pop
jl
repnz
adc
pop
pop
sub
loope
(bad)
scas
hlt
mov
jo
div
jp
lods
mov
adc
(bad)
(bad)
dec
adc
test
test
out
mov
fild
stc
jae
mov
or
adc
out
adc
mov
sbb
not
push
xlat
int
(bad)
(bad)
sub
and
rcr
aad
(bad)
push
fdivr
inc
pop
mov
iret
dec
fldcw
ins
sbb
cdq
(bad)
das
fadd
push
jb
and
jmp
xchg
outs
into
xchg
cwde
adc
sar
enter
(bad)
(bad)
jmp
out
hlt
sub
movs
sbb
repz
ins
mov
sbb
aas
fidiv
lock
xchg
jmp
cli
jmp
imul
and
aas
pop
(bad)
clc
out
cmp
ja
cdq
push
loopne
or
mov
jmp
mov
(bad)
nop
fiadd
inc
sub
pusha
jp
mov
imul
idiv
(bad)
(bad)
jmp
mov
pop
cwde
arpl
push
adc
or
push
call
xchg
sub
stos
jbe
cli
pop
and
inc
fidivr
out
mov
(bad)
(bad)
jmp
mov
jns
or
push
push
bound
cmp
adc
cmp
daa
das
clc
(bad)
(bad)
cli
fstp
jle
jbe
pop
push
in
cmps
push
jns
xchg
xor
retf
(bad)
(bad)
(bad)
(bad)
mov
push
sbb
adc
mov
or
xchg
add
xor
popa
sub
gs
xchg
(bad)
(bad)
out
cli
push
push
sub
sub
cmp
das
and
popf
ds
xlat
adc
data16
mov
mov
mov
sub
(bad)
(bad)
jmp
ret
cmp
cmp
and
jnp
rol
sub
(bad)
fcomip
(bad)
stc
inc
cmp
jo
enter
dec
scas
sbb
pop
dec
dec
sub
(bad)
inc
xchg
sub
pop
jae
popf
xlat
push
or
in
add
xchg
xor
call
in
retf
stos
cmps
mov
push
sub
or
add
stos
and
mov
(bad)
(bad)
(bad)
mov
(bad)
ror
jmp
stos
push
add
ja
and
jmp
push
(bad)
(bad)
jmp
nop
pop
xlat
lea
sub
pusha
and
nop
xchg
aad
xlat
mov
out
in
dec
sbb
clc
(bad)
(bad)
dec
jno
jns
pop
jae
push
fld
cmps
repz
add
ret
and
jmp
hlt
push
mov
or
cmp
add
xor
push
inc
xor
mov
push
fistp
push
xor
sbb
sub
fcom
mov
cwde
in
(bad)
pushf
movs
and
test
mov
imul
xchg
call
scas
(bad)
dec
cmp
scas
jle
jns
popa
movs
shl
fs
mov
jle
push
ins
xchg
(bad)
inc
mov
inc
inc
lods
xor
mov
xchg
cmp
nop
and
lods
pop
addr16
fwait
push
mov
sub
jmp
out
(bad)
pop
xor
test
fcmovnbe
mov
(bad)
fistp
pop
stos
xchg
adc
dec
pusha
push
jbe
mov
cdq
push
cmc
add
push
outs
stos
(bad)
(bad)
push
or
push
mov
stos
test
fst
xor
imul
(bad)
inc
or
dec
push
mov
aad
nop
pop
jmp
adc
sbb
add
(bad)
(bad)
(bad)
jmp
add
cmp
dec
aam
test
les
dec
test
mov
pop
cmc
(bad)
push
cmp
inc
inc
jnp
pop
nop
popf
inc
and
mov
enter
(bad)
(bad)
jg
inc
push
and
xchg
xchg
ffreep
cmp
popf
in
cmc
icebp
push
cld
(bad)
jmp
rol
fwait
into
inc
and
cmp
cmp
pop
or
add
add
push
div
xor
push
imul
fdivr
(bad)
(bad)
(bad)
cli
mov
fstp
and
pop
mov
push
out
cmps
push
cs
out
outs
pop
add
and
pop
fcomp
icebp
(bad)
(bad)
(bad)
inc
xchg
cmps
jb
xor
stos
push
and
sbb
ja
or
test
call
(bad)
xlat
pop
sbb
(bad)
inc
repnz
sub
dec
jne
jne
ja
ins
stos
pushf
cmp
inc
sub
(bad)
(bad)
jmp
jle
out
sti
or
mov
inc
out
jl
add
inc
ins
dec
xor
aaa
std
call
cmp
stos
mov
pop
fisttp
pop
sbb
inc
popa
leave
or
mov
pop
cld
(bad)
push
mov
out
cld
jle
xor
call
test
stos
push
jmp
pop
cld
(bad)
call
movs
mov
(bad)
xor
add
popf
aaa
adc
fdiv
(bad)
call
xrelease
mov
push
ficomp
loope
jae
into
or
lods
stos
dec
aad
in
addr16
add
push
lods
xchg
ins
push
jle
icebp
js
and
(bad)
(bad)
inc
sub
add
mov
jmp
push
call
sti
popf
bound
aaa
sub
stos
pop
and
movs
push
int
jmp
sub
(bad)
(bad)
mov
inc
aaa
pop
jge
mov
test
push
sti
mov
ds
add
and
pop
ja
mov
jb
pop
mov
dec
bound
test
imul
adc
dec
cmp
push
(bad)
(bad)
dec
push
sub
xchg
push
mov
cmp
sbb
int
xchg
enter
(bad)
(bad)
(bad)
jmp
aad
iret
push
mov
adc
test
dec
adc
push
inc
cmp
(bad)
pusha
or
(bad)
(bad)
ds
mov
out
addr16
mov
ja
push
mov
dec
and
adc
mov
(bad)
and
xor
xchg
call
jge
test
adc
fst
and
jnp
jle
jg
icebp
bound
add
jbe
test
pop
into
adc
(bad)
(bad)
(bad)
push
and
add
scas
int3
jl
arpl
xchg
dec
fisttp
movs
cwde
dec
jg
(bad)
push
out
lods
test
sar
ss
jl
cmc
jmp
sar
push
mov
(bad)
(bad)
inc
popa
jae
daa
mov
and
push
cli
or
sbb
aam
outs
add
cmp
jmp
mov
cmp
fnstsw
es
fldcw
nop
adc
(bad)
(bad)
jg
inc
and
mov
pop
or
mov
dec
stos
(bad)
inc
xchg
cmps
push
push
dec
das
sbb
dec
mov
adc
popa
(bad)
(bad)
(bad)
(bad)
(bad)
fs
arpl
mov
retf
ins
(bad)
xchg
data16
push
xor
(bad)
or
ja
fisubr
cmps
push
push
xchg
sub
pop
adc
adc
sbb
mov
(bad)
mov
movs
xchg
call
(bad)
jmp
retf
popa
dec
in
mov
mov
jp
clc
xlat
or
mov
(bad)
(bad)
(bad)
inc
mov
jno
pop
push
mov
and
and
push
movs
or
adc
mov
push
add
movs
dec
pop
adc
push
aad
out
mov
scas
call
(bad)
(bad)
(bad)
jg
push
jns
(bad)
jbe
push
sbb
sub
add
dec
inc
mov
xchg
inc
cdq
bound
gs
or
jmp
inc
xor
mov
dec
pop
mov
nop
leave
push
scas
sub
ds
rcr
retf
pushf
push
stos
movs
cmp
retf
adc
out
pop
mov
mov
je
(bad)
(bad)
jmp
xchg
sbb
jnp
jl
stos
ja
shl
xlat
lods
lods
int
aad
and
(bad)
(bad)
jmp
xchg
imul
adc
aad
aaa
or
inc
mov
mov
jmp
dec
outs
into
cmps
dec
jne
pop
push
xor
jae
pop
mov
(bad)
(bad)
push
(bad)
movs
mov
inc
xchg
ret
push
cmp
xchg
ret
push
stos
fnstcw
(bad)
and
pop
inc
shr
inc
xchg
loope
pop
jge
inc
and
sti
fwait
jb
pop
repz
pop
std
arpl
push
daa
cmc
std
(bad)
dec
adc
jmp
xor
imul
push
imul
sahf
test
std
mov
cmp
sub
ror
dec
and
and
push
leave
retf
sbb
dec
pop
sub
jno
and
xor
push
adc
jbe
les
data16
(bad)
(bad)
jmp
lods
(bad)
retf
dec
sbb
(bad)
fist
mov
cmp
rcl
sbb
jmp
sar
lock
mov
mov
inc
movs
cs
fld
test
mov
and
daa
clc
sahf
aam
fwait
aaa
dec
mov
mov
sbb
aad
fbld
inc
(bad)
(bad)
push
fnstcw
jne
js
jb
cli
stos
ret
inc
test
push
std
bnd
popf
in
shl
mov
fcomip
mov
arpl
lahf
out
xchg
cli
ins
scas
daa
push
xlat
mov
push
jg
loope
xchg
push
cmps
and
lea
pop
mov
mov
cmp
jmp
out
cli
sbb
loop
push
stos
jg
dec
jmp
ja
cmp
jp
arpl
cmp
xchg
test
mov
fistp
mov
pop
fcom
add
xchg
push
sbb
addr16
ficomp
adc
(bad)
(bad)
jmp
mov
shl
adc
rcr
scas
jbe
stc
xor
(bad)
(bad)
jg
push
add
outs
clc
cmp
addr16
imul
out
push
push
hlt
and
jg
cld
fiadd
xlat
dec
sub
pop
aaa
sbb
jmp
fst
mov
sar
jmp
aam
or
jbe
inc
inc
ret
aam
cmp
in
and
shl
sar
(bad)
push
cld
lahf
and
and
sub
imul
mov
sub
rcr
or
fs
arpl
out
ret
pop
and
(bad)
(bad)
sti
cmp
sub
rcl
loopne
sub
inc
sbb
and
test
fcomi
push
xchg
fsub
jmp
mov
add
dec
push
fs
icebp
cmp
add
mov
test
push
(bad)
(bad)
(bad)
call
xchg
bound
dec
xor
nop
ret
cmp
mov
movs
adc
dec
jbe
xor
(bad)
(bad)
inc
xchg
xchg
dec
push
loopne
ds
mov
sub
shr
pushf
(bad)
fstp
stos
arpl
sti
sub
shl
inc
push
fild
push
xchg
popa
mov
(bad)
call
mov
sbb
ds
or
xor
aam
(bad)
mov
push
in
test
cld
fisttp
sub
jmp
xor
cli
scas
lods
push
push
cmp
inc
aaa
popa
cmp
shl
shl
out
sbb
mov
sub
stos
loop
(bad)
dec
and
ins
pop
push
enter
inc
inc
sub
ins
aam
jbe
(bad)
(bad)
fild
repz
imul
mov
loope
(bad)
(bad)
(bad)
inc
and
xchg
and
pop
sub
push
ret
adc
out
cmp
test
jg
cmp
pusha
fld
cwde
jmp
sub
(bad)
call
in
cld
mov
mov
das
(bad)
inc
std
mov
mov
adc
push
mov
test
mov
popf
fsub
dec
push
mov
sbb
test
retf
lods
pop
nop
retf
xchg
(bad)
(bad)
(bad)
jmp
xor
push
xlat
test
mov
jno
adc
dec
rol
pusha
sbb
ret
push
cmp
je
stos
push
mov
dec
xor
jno
call
xchg
push
xchg
or
push
mov
sbb
pop
repz
cld
(bad)
(bad)
jmp
aad
jg
push
out
sti
call
jnp
push
mov
fcmovnb
and
icebp
(bad)
jmp
jmp
mov
(bad)
lahf
(bad)
mov
into
jnp
mov
mov
mov
xor
jg
out
stc
rcl
mov
cmp
adc
(bad)
(bad)
inc
cmp
clc
cmc
fdivr
fld
inc
add
fild
cwde
add
sti
outs
jo
cmp
xor
mov
jo
xor
mov
mov
div
jae
(bad)
into
push
jbe
iret
jne
xor
(bad)
jp
scas
movs
mov
div
movs
cmps
mov
sub
add
inc
jnp
cli
(bad)
(bad)
sti
mov
imul
mov
sbb
bound
jae
lock
push
test
shr
rep
std
(bad)
fistp
push
inc
push
inc
fdivrp
cmp
jbe
test
ins
ins
loope
lods
data16
or
movs
and
pop
xchg
jns
addr16
xchg
out
sub
je
xor
ret
int
or
fdiv
jbe
mov
jmp
fcom
test
icebp
push
xor
cmp
scas
sbb
cld
inc
mov
sub
cmp
adc
mov
lahf
mov
shr
lods
cdq
sub
(bad)
(bad)
call
mov
sbb
aaa
or
mov
adc
(bad)
fisub
xchg
sub
(bad)
(bad)
(bad)
(bad)
cli
add
not
clc
cmp
rol
mov
sti
push
jns
cmp
dec
push
clc
inc
and
push
adc
dec
mov
test
mov
or
pop
push
dec
and
das
(bad)
(bad)
(bad)
inc
fld
call
jmp
cmp
les
icebp
and
(bad)
(bad)
call
(bad)
sub
inc
jmp
lods
dec
pop
add
add
sbb
(bad)
out
lock
movs
sbb
xchg
push
jmp
jecxz
and
inc
push
sub
mov
pop
jmp
push
adc
inc
and
xor
(bad)
(bad)
(bad)
inc
retf
pop
sub
dec
push
js
xchg
sbb
loop
ds
mov
or
es
(bad)
(bad)
jmp
push
shr
mov
mov
push
shr
jmp
jp
mov
(bad)
adc
mov
mov
(bad)
(bad)
(bad)
call
movs
call
jb
in
adc
jge
push
add
and
sbb
push
(bad)
(bad)
mov
cmc
dec
add
cdq
mov
xor
ret
or
pop
push
aam
mov
ja
(bad)
(bad)
inc
xchg
sbb
sbb
inc
out
cli
xor
test
jmp
sar
push
daa
mov
cmp
adc
(bad)
es
(bad)
(bad)
(bad)
mov
cmp
cmps
and
movs
sbb
test
or
push
leave
push
(bad)
(bad)
(bad)
(bad)
in
xchg
and
cmp
loopne
fs
xchg
mov
push
mov
pop
push
or
or
test
retf
or
or
dec
adc
push
xor
cld
pop
mov
int3
scas
jmp
inc
sbb
jo
dec
dec
in
dec
int3
call
(bad)
cmp
sub
mov
fisubr
dec
push
mov
(bad)
(bad)
inc
pusha
int
ja
push
jno
nop
es
cmc
shl
mov
mov
cmp
(bad)
(bad)
fisubr
and
xor
repnz
cmp
mov
push
cmp
(bad)
(bad)
std
push
lock
enter
movs
add
pop
add
shl
pop
push
pop
lds
es
popa
sar
call
pop
sbb
ret
push
or
and
in
and
sub
popa
(bad)
mov
sub
ret
add
jo
jle
sbb
inc
inc
mov
cs
nop
(bad)
(bad)
(bad)
mov
add
inc
mov
xlat
dec
or
mov
test
dec
jp
(bad)
(bad)
inc
inc
pop
in
push
adc
in
add
push
dec
mov
jne
daa
ror
or
rcl
mov
(bad)
push
push
rcl
xchg
xor
jle
and
out
test
retf
aaa
std
(bad)
inc
pop
xor
les
push
sbb
and
adc
xchg
pop
jmp
cli
(bad)
jmp
(bad)
retf
pop
jecxz
es
cmp
or
(bad)
stos
pushf
das
push
jl
mov
out
pop
sub
(bad)
(bad)
call
popa
inc
push
sub
pop
pop
ss
jmp
mov
fistp
xor
call
ror
jmp
test
lock
out
inc
push
inc
sub
push
fnstcw
mov
xor
(bad)
(bad)
call
ret
mov
or
jae
sti
(bad)
xchg
scas
(bad)
div
test
js
pushfw
(bad)
(bad)
(bad)
jmp
adc
rcl
add
(bad)
xchg
into
nop
movs
ret
add
push
std
outs
jmp
(bad)
in
mov
mov
push
fcom
mov
bound
gs
sub
cmc
test
jle
(bad)
fcomip
(bad)
(bad)
imul
sti
cmp
scas
sub
cmp
out
cmc
(bad)
mov
retf
inc
int3
inc
rcl
data16
not
aad
cmp
and
inc
(bad)
mov
xchg
dec
dec
xchg
sbb
adc
clc
rcr
add
(bad)
jg
test
leave
push
call
push
test
imul
repnz
dec
or
mov
rol
in
out
or
(bad)
(bad)
call
mov
push
enter
cmp
mov
les
cmp
cmp
movs
shl
in
(bad)
(bad)
inc
push
xchg
add
xchg
std
push
push
aaa
add
rcl
pop
aas
je
fcomip
call
pop
js
mov
popf
jmp
push
pop
std
je
stc
push
cs
pop
std
(bad)
jmp
mov
in
das
fadd
ja
out
jmp
push
(bad)
inc
mov
paddq
sub
popa
mov
dec
inc
arpl
int
jno
mov
sub
call
fsubr
cmp
dec
ins
scas
into
sub
(bad)
(bad)
(bad)
call
movs
xor
lods
fist
outs
je
loopne
sub
push
out
or
gs
mov
(bad)
inc
pop
mov
mov
sbb
shl
cmps
jnp
cwde
cdq
jmp
(bad)
(bad)
jg
mov
add
or
pop
xor
add
(bad)
push
std
dec
sbb
dec
int3
adc
cmps
mov
jb
and
test
mov
sub
inc
lods
push
(bad)
jmp
mov
xchg
or
mov
cmp
out
push
test
adc
fcomip
(bad)
dec
dec
loopne
mov
cwde
inc
retf
daa
xchg
push
add
push
sbb
iret
or
(bad)
(bad)
dec
sar
rcl
call
pop
in
xor
cmp
jne
jmp
pusha
xchg
(bad)
(bad)
mov
dec
aad
jae
das
(bad)
into
cwde
movs
fisub
dec
push
jp
rcl
addr16
loope
or
xchg
and
push
es
out
jnp
out
xchg
xchg
mov
call
jns
sar
data16
xor
hlt
(bad)
(bad)
(bad)
jg
pushf
retf
int
shl
jno
and
add
dec
pop
in
in
mov
fs
sub
and
call
mov
aaa
mov
adc
inc
ins
xor
loopne
or
sbb
add
ficomp
xchg
adc
repnz
jg
inc
mov
mov
inc
or
enter
inc
inc
jb
push
push
cmc
add
add
pop
imul
scas
jo
fisub
push
test
pop
mov
jmp
cli
outs
inc
repnz
hlt
adc
push
push
outs
and
call
jecxz
push
lods
ss
(bad)
jmp
(bad)
rol
lahf
jg
cmc
xchg
loop
cwde
sub
inc
(bad)
(bad)
(bad)
inc
xor
adc
and
mov
test
not
mov
xor
(bad)
(bad)
inc
cli
movs
popa
pop
pop
mov
xor
pop
shl
fild
scas
sub
(bad)
(bad)
call
jl
cmp
push
push
xchg
sub
xor
mov
sbb
xchg
dec
in
mov
pop
out
pop
mov
add
cld
pop
pop
loope
test
add
xor
aam
(bad)
xor
and
lahf
enter
mov
sub
mov
in
add
push
jge
cwde
pop
and
jmp
jo
(bad)
(bad)
call
add
into
ret
add
sbb
stos
loope
sbb
(bad)
mov
xchg
inc
je
pop
jmp
mov
cdq
rcl
retf
inc
(bad)
adc
rol
(bad)
(bad)
jmp
sub
xchg
leave
repnz
jo
repnz
mov
test
jg
cs
cmp
aam
ret
loope
ret
mov
pop
pusha
and
(bad)
(bad)
mov
mov
jmp
ss
or
xchg
stos
jne
pop
ins
ja
mov
jg
ins
mov
sub
dec
dec
repnz
push
(bad)
sub
cwde
and
xor
jmp
js
xchg
xchg
call
mov
fcomip
mov
adc
repnz
sbb
and
mov
push
xor
(bad)
jg
in
movs
jle
mov
jb
mov
(bad)
mov
in
inc
sub
retf
std
and
loop
sbb
pop
clc
std
(bad)
fbld
xchg
cli
dec
clc
shl
retf
dec
cli
in
(bad)
fild
mov
in
sub
xchg
icebp
icebp
and
mov
addr16
push
(bad)
(bad)
push
enter
cli
ins
pop
push
ficom
pop
mov
adc
pop
mov
cmp
mov
aaa
outs
inc
lock
js
sub
cmp
(bad)
(bad)
(bad)
(bad)
mov
sub
push
mov
and
push
mov
ja
imul
dec
out
jae
stc
jg
imul
pop
lock
(bad)
(bad)
(bad)
inc
and
shr
xchg
jne
les
scas
inc
movs
sub
add
jp
add
(bad)
(bad)
(bad)
(bad)
(bad)
jl
out
je
and
fisttp
mov
dec
adc
jecxz
(bad)
stc
aas
mov
sub
and
loope
inc
pop
out
xchg
data16
inc
call
dec
jg
mov
retf
call
mov
arpl
rol
fwait
sti
sub
in
jno
mov
push
mov
add
scas
xor
scas
loop
push
std
je
jnp
jecxz
jmp
clc
inc
jb
repz
inc
dec
frstor
sbb
xchg
pop
(bad)
loope
mov
stos
call
(bad)
mov
enter
shl
pop
cmc
mov
sub
sbb
xor
pop
xchg
or
push
or
add
sti
push
cmp
(bad)
shl
sbb
adc
adc
bound
cmp
sub
pop
daa
pslld
jmp
inc
clc
(bad)
(bad)
inc
xor
lds
inc
aas
sbb
xor
inc
or
out
mov
xor
outs
fsubr
push
aas
xchg
fidivr
sbb
dec
jno
(bad)
(bad)
(bad)
push
pop
mov
test
adc
jbe
(bad)
push
xor
inc
hlt
(bad)
inc
cld
popf
and
sbb
add
jbe
mov
dec
inc
scas
pop
sub
out
cli
(bad)
cmp
or
daa
sbb
xor
pusha
xor
clc
(bad)
inc
sbb
aad
and
jecxz
mov
loope
fild
call
fcom
or
pop
hlt
jae
js
call
xchg
rol
cmp
jecxz
imul
cwde
bound
cld
mov
(bad)
jmp
(bad)
call
xchg
lock
sbb
ret
pushf
sub
loope
(bad)
pop
jo
(bad)
(bad)
(bad)
cld
pop
scas
xor
scas
adc
add
push
test
push
mov
mov
(bad)
(bad)
(bad)
jmp
pop
xor
lahf
movs
test
lods
outs
dec
iret
fstp
add
mov
sti
(bad)
(bad)
(bad)
inc
dec
mov
sbb
and
push
mov
push
xor
jbe
cmp
in
pop
(bad)
(bad)
(bad)
(bad)
(bad)
mov
rcr
in
lahf
and
imul
clc
ret
std
sti
xor
pushf
cdq
xchg
ret
xchg
adc
(bad)
(bad)
inc
retf
add
ja
fdivr
fdivr
loope
xor
icebp
fwait
or
push
std
inc
xabort
sbb
loope
pop
mov
pop
xlat
je
in
and
cld
cmp
jmp
call
cmc
pop
mov
pop
push
jecxz
push
push
mov
mov
ins
(bad)
in
fimul
icebp
ins
or
(bad)
(bad)
jmp
cmp
cmp
addr16
shl
jmp
push
jle
xchg
cmp
push
mov
mov
aam
test
xchg
mov
push
call
(bad)
(bad)
jmp
in
lods
(bad)
jecxz
in
fisttp
sub
ins
mov
mov
not
int3
(bad)
mov
xchg
cmp
push
nop
xchg
movs
cmc
sbb
xchg
fmulp
push
add
loop
jecxz
mov
loope
repnz
pop
dec
cmp
mov
adc
(bad)
outs
adc
in
pop
jp
adc
dec
arpl
xor
test
xor
mov
fldcw
jne
or
mov
sbb
cs
mov
add
(bad)
(bad)
(bad)
jns
xor
jg
ficom
stos
pusha
xchg
mov
xchg
cdq
pop
addr16
sub
adc
fidiv
mov
dec
cwde
mov
icebp
(bad)
(bad)
call
pushf
xchg
test
(bad)
mov
dec
jg
and
ins
pop
pop
fist
(bad)
call
push
push
ss
call
mov
push
push
cs
pop
(bad)
(bad)
(bad)
call
push
mov
nop
bswap
test
sbb
dec
sbb
cdq
or
sub
(bad)
(bad)
(bad)
jmp
rcl
dec
and
and
popa
das
sahf
adc
cli
adc
xor
(bad)
push
mov
xor
lods
push
add
push
sbb
retf
mov
or
ror
ds
cwde
mov
out
sbb
(bad)
fdivr
mov
fsub
lock
fs
(bad)
(bad)
(bad)
mov
cmp
xchg
xor
mov
das
(bad)
pop
push
or
mov
(bad)
(bad)
jg
xchg
dec
idiv
pop
shl
xchg
imul
movs
cmps
and
sbb
(bad)
(bad)
mov
sub
mov
xchg
mov
sti
xor
idiv
retf
sub
push
or
call
sub
adc
inc
movs
jbe
iret
ja
jmp
sbb
mov
popf
lods
cmp
add
pop
(bad)
(bad)
fcomip
ins
stos
push
add
dec
xchg
cs
fcmovnb
adc
cmps
cmp
cmps
(bad)
(bad)
(bad)
inc
fmul
mov
sahf
ret
sbb
mov
jecxz
push
adc
mov
pop
clc
pop
mov
dec
sbb
into
mov
xor
(bad)
dec
pop
push
and
fcmovu
sbb
push
outs
pop
aaa
sahf
push
rcr
scas
(bad)
pop
mov
stos
pop
cmp
in
sub
hlt
jmp
sar
cmps
(bad)
jg
ja
inc
mov
scas
shl
out
outs
cmps
call
dec
je
in
int
call
(bad)
out
fwait
mov
mov
iret
sub
fimul
(bad)
push
aaa
mov
sub
inc
fldenv
add
out
mov
call
or
dec
push
aas
sub
xor
pop
mov
sub
mov
(bad)
jg
mov
(bad)
inc
rcr
icebp
sar
ret
pop
jmp
fcomip
(bad)
fisttp
les
xchg
xor
cmp
scas
arpl
cld
mov
xor
data16
ret
push
adc
stos
jno
in
iret
das
cdq
jmp
(bad)
(bad)
(bad)
call
dec
sub
ja
addr16
fcmovnu
pop
ins
fldlg2
push
ins
mov
std
mov
pop
aaa
data16
idiv
push
sub
movs
retf
mov
lods
jbe
dec
inc
push
loop
pop
rol
loope
adc
pop
push
mov
mul
out
cmc
mov
push
jle
ret
mov
mov
xor
cmps
pop
lods
mov
sub
pop
lock
push
mov
rcl
retf
add
leave
mov
cmp
std
rol
cmp
pop
lock
call
ret
pop
ret
or
dec
mov
lds
clc
xchg
sbb
lds
xlat
(bad)
call
cdq
sub
xchg
mov
pop
jg
icebp
cs
jmp
call
cmp
(bad)
ja
jl
fwait
ret
mov
sbb
(bad)
jg
cmc
mov
push
into
cmp
xor
inc
mov
cmc
je
push
rcr
test
pusha
dec
jo
std
sub
fmul
ja
(bad)
(bad)
(bad)
jg
sub
mov
mov
fld
cdq
jnp
(bad)
movs
ins
add
mov
(bad)
(bad)
jmp
pop
jp
mov
sbb
xor
movs
jns
adc
or
(bad)
(bad)
mov
mov
int3
out
mov
jp
cld
and
hlt
xchg
xchg
inc
(bad)
jg
test
out
mov
jb
mov
mov
push
sbb
or
imul
sbb
add
dec
ins
mov
sub
mov
xor
cmps
fwait
add
idiv
(bad)
(bad)
(bad)
jmp
jge
je
out
add
movs
ffree
cmp
popf
xchg
aaa
imul
shr
ins
gs
(bad)
(bad)
call
lea
stos
aad
(bad)
jl
retf
ret
into
mov
mov
call
(bad)
xor
jg
imul
jo
adc
pop
add
push
les
jg
dec
pop
jg
scas
cld
push
out
fwait
scas
dec
retf
(bad)
lock
dec
fild
(bad)
inc
jmp
xor
into
inc
mov
adc
mov
call
fmulp
dec
fistp
aaa
stos
push
sbb
mov
ins
ins
shr
xchg
fdecstp
clc
adc
(bad)
mov
sub
fwait
es
adc
and
lea
(bad)
out
clc
jmp
hlt
push
mov
daa
outs
ss
push
lea
mov
(bad)
mov
pop
xchg
sbb
dec
fptan
fs
sahf
mov
(bad)
(bad)
call
sub
mov
pop
cli
dec
lock
je
(bad)
retf
fcomp
(bad)
out
(bad)
(bad)
(bad)
jg
loope
or
sbb
data16
repz
mov
cdq
adc
(bad)
dec
mov
push
fisttp
adc
inc
mov
ficomp
mov
dec
fidiv
(bad)
mov
dec
jl
fcom
add
dec
(bad)
jmp
hlt
retf
and
cmp
in
sub
shl
inc
leave
fiadd
xor
(bad)
call
inc
inc
es
inc
cmc
xchg
sub
push
lods
jns
(bad)
cmp
dec
loop
mov
ret
(bad)
in
jg
pop
mov
loope
add
add
sub
adc
(bad)
aaa
(bad)
sbb
jne
sbb
les
jbe
(bad)
(bad)
inc
mov
mov
mov
imul
repnz
stc
pop
test
push
or
(bad)
jmp
shl
rcr
mov
hlt
outs
xchg
ret
leave
jl
(bad)
push
outs
mov
(bad)
ss
jns
nop
or
dec
(bad)
aaa
int3
popf
and
sub
jmp
fisub
fs
movs
xor
inc
mov
jmp
outs
shld
push
mov
mov
push
sub
retf
and
cmp
mov
jge
adc
push
and
aad
push
push
ja
lock
xchg
(bad)
ss
sbb
xabort
xchg
(bad)
(bad)
(bad)
jg
pop
adc
adc
and
adc
out
pop
xor
xor
sbb
jno
add
sub
xor
aaa
push
fistp
jmp
jb
cdq
sbb
into
(bad)
hlt
xchg
mov
aaa
in
xchg
addr16
test
fnsave
out
mov
ss
(bad)
(bad)
(bad)
cmp
mov
stos
fcom
push
retf
push
cs
dec
mov
mov
inc
hlt
jno
mov
sbb
mov
gs
icebp
fistp
data16
or
sbb
dec
mov
dec
adc
loopne
jmp
icebp
(bad)
(bad)
jmp
sub
push
ret
loopne
jnp
push
test
pop
stc
scas
inc
out
stc
ret
movs
rol
mov
pop
cmps
mov
jb
and
xchg
repnz
mov
add
(bad)
(bad)
(bad)
call
adc
mov
cmp
mov
jmp
xchg
push
dec
movs
leave
and
out
rcl
(bad)
(bad)
jmp
aam
inc
mov
sub
div
call
dec
test
(bad)
call
sub
and
sub
aaa
dec
ins
pop
dec
ins
pushf
stos
xor
aad
dec
mov
xchg
das
cmps
push
sahf
into
movs
outs
leave
xchg
adc
aad
inc
pop
dec
add
loopne
(bad)
jg
lock
push
mov
repnz
add
sbb
aad
jbe
(bad)
call
ins
daa
xor
mov
pop
jecxz
lea
cmp
jo
sub
pop
add
js
sahf
fwait
xchg
or
mov
das
add
inc
jmp
push
in
stos
das
movs
or
(bad)
jnp
arpl
aad
pop
shl
pop
loopne
lahf
fs
push
not
jb
inc
push
cdq
push
and
mov
cli
inc
gs
push
cs
fistp
mov
test
(bad)
clc
cmp
jge
inc
scas
aad
add
xchg
dec
ss
(bad)
(bad)
jmp
out
cdq
sub
sub
push
test
adc
dec
jne
adc
aad
mov
call
fild
loop
movd
cld
(bad)
pop
push
jnp
adc
adc
dec
jno
add
(bad)
inc
loopne
adc
or
bound
aaa
in
fnstcw
mov
and
dec
imul
es
and
out
fstp
das
jns
mov
lods
lods
mov
pop
xchg
gs
inc
fadd
hlt
ficom
or
gs
test
xchg
data16
stos
inc
cld
hlt
mov
jge
(bad)
enter
fdivr
adc
mov
xchg
ins
fistp
cmp
arpl
bound
push
int
adc
fisttp
call
icebp
push
and
ds
test
scas
ror
push
mov
pop
icebp
dec
pop
icebp
mov
cmp
pop
sbb
jmp
fcomip
(bad)
mov
in
lods
mov
dec
mov
pusha
cld
(bad)
mov
ret
lock
std
mov
daa
imul
(bad)
mov
push
inc
and
push
sub
pop
xor
dec
push
arpl
sub
cli
(bad)
push
adc
mov
movs
mov
xchg
stos
call
mov
jnp
idiv
(bad)
(bad)
call
sub
or
jno
mov
xchg
mov
(bad)
call
mov
jno
mov
repz
xchg
inc
inc
(bad)
(bad)
(bad)
call
jmp
add
sbb
retf
in
jb
in
and
xchg
dec
jo
test
dec
(bad)
(bad)
(bad)
call
aas
pop
dec
ror
aas
push
call
push
push
sbb
pop
pop
xchg
stos
jmp
jmp
xor
adc
and
mov
and
gs
xor
or
call
push
jp
icebp
movs
jns
bound
inc
dec
jge
xchg
inc
cld
cwde
cmps
(bad)
pop
xchg
mov
repnz
xchg
or
cld
(bad)
(bad)
out
sahf
sbb
dec
aam
xor
je
push
dec
mov
push
cmps
adc
sub
or
call
mov
jne
push
das
fcmovne
lea
push
push
inc
pop
fdivr
xor
repnz
cmc
sbb
and
lahf
stos
jge
xchg
push
push
clc
sbb
jg
xchg
xchg
lahf
fidiv
sub
mov
and
in
imul
(bad)
mov
mov
ins
mov
adc
inc
dec
and
outs
retf
sbb
(bad)
jmp
out
cdq
(bad)
mov
sub
cdq
js
fs
in
sbb
mov
inc
adc
aad
cwde
ror
sbb
add
xor
sub
xchg
mov
mov
movs
inc
sub
(bad)
fcomip
cmp
dec
cs
loopne
(bad)
popf
xchg
dec
sub
jbe
xchg
fdecstp
gs
jmp
pop
adc
and
ja
pop
leave
xchg
jmp
lea
xor
pop
pushf
and
int3
test
jno
jle
(bad)
(bad)
in
(bad)
cmp
(bad)
adc
test
pop
scas
stos
mov
mov
jmp
(bad)
(bad)
(bad)
push
push
loope
add
sahf
inc
bound
dec
pop
xchg
or
cmp
mov
mov
cdq
mov
adc
cdq
je
jp
mov
push
clc
add
ins
adc
stos
ds
dec
cli
out
clc
call
into
test
add
pop
call
jecxz
push
retf
or
xchg
(bad)
(bad)
(bad)
out
out
aad
arpl
mov
push
test
xchg
ins
call
sub
dec
adc
idiv
mov
inc
shl
and
push
stos
jl
sahf
imul
sbb
(bad)
(bad)
call
mov
sbb
dec
hlt
test
or
inc
pop
xchg
jns
adc
sub
(bad)
(bad)
(bad)
(bad)
mov
cmp
clc
cmps
mov
jl
lods
sub
movs
movs
add
sub
(bad)
(bad)
(bad)
(bad)
mov
fldenv
xchg
pop
popf
out
retf
and
push
sub
jecxz
(bad)
call
out
(bad)
jnp
xchg
cmp
xor
push
stc
xchg
sbb
(bad)
(bad)
(bad)
(bad)
call
xor
pop
stos
shr
cmp
jns
push
and
xor
push
or
(bad)
dec
pop
cmp
(bad)
pop
sbb
lock
mov
jae
jo
xchg
call
dec
mov
dec
retf
dec
fsubrp
rol
sub
xchg
push
and
mov
jmp
mov
test
cmps
xchg
sub
pop
arpl
mov
je
and
push
ss
cli
ret
pop
fild
cmp
rcr
push
shl
mov
sbb
dec
push
xor
add
mov
movs
xor
jne
test
cmp
out
cs
mov
out
dec
push
dec
jle
es
jle
rol
sbb
enter
inc
adc
(bad)
(bad)
(bad)
mov
or
scas
cmc
mov
xor
les
and
jns
loope
and
(bad)
dec
sbb
jbe
and
add
xchg
mov
add
enter
retf
adc
out
test
cmp
call
call
outs
ret
cmp
pop
loope
pop
dec
push
aas
out
mov
mov
(bad)
dec
xor
shl
popa
int3
adc
xchg
or
pop
(bad)
(bad)
(bad)
push
int3
or
dec
je
lds
inc
lea
mov
xor
(bad)
(bad)
call
mov
jl
cmp
add
mov
movs
cmp
iret
xchg
pop
loope
iret
mov
pop
hlt
inc
push
adc
or
dec
jp
(bad)
(bad)
inc
dec
(bad)
dec
in
xor
mov
push
pop
dec
push
out
cmp
or
mov
mov
jmp
sub
cmps
mov
mov
mov
inc
xor
in
stc
(bad)
(bad)
call
sbb
cmp
sub
cmp
pushf
enter
mov
push
scas
out
test
shr
jmp
call
mov
dec
mov
and
pop
(bad)
dec
out
cli
(bad)
jmp
inc
jns
ret
adc
adc
add
rcl
sub
push
clc
mov
dec
cli
fstp
inc
scas
lods
out
ja
mov
ficom
sub
inc
push
(bad)
jmp
mov
dec
cs
or
call
cmp
into
push
outs
pop
data16
sub
sbb
push
scas
push
out
pop
ja
jnp
sti
inc
push
retf
jmp
(bad)
(bad)
(bad)
jmp
call
ret
leave
in
pop
sbb
inc
movs
pop
and
cli
fcom
cli
(bad)
(bad)
(bad)
aas
es
or
dec
jecxz
pop
mov
or
pop
adc
fld
repnz
test
adc
(bad)
jmp
rol
retf
or
hlt
pop
fcom
mov
xor
jne
pop
and
cmp
dec
cmp
dec
xchg
fs
and
xchg
shl
or
lods
fs
inc
push
popf
inc
cs
xor
lds
out
test
inc
or
jp
mov
dec
jno
dec
and
jmp
(bad)
jmp
test
cmp
or
adc
and
stos
mov
pop
cmp
call
sbb
dec
bound
sub
inc
dec
add
imul
aaa
iret
movs
or
inc
jae
fcomip
(bad)
adc
ss
retf
inc
iret
lock
sbb
dec
scas
test
(bad)
(bad)
(bad)
jmp
in
arpl
xor
jne
outs
aam
ins
dec
push
inc
adc
inc
xchg
mov
enter
push
jns
inc
adc
cs
mov
pop
(bad)
dec
mov
push
xor
test
(bad)
(bad)
inc
mov
dec
cmp
(bad)
mov
push
push
adc
pop
aad
imul
dec
cmps
stos
leave
pop
mov
sub
aam
or
hlt
ds
or
call
scas
call
jecxz
neg
movs
and
mov
ja
aaa
push
xchg
dec
cmp
ins
pop
loop
jne
out
push
cmps
jb
xor
push
jecxz
and
add
ja
adc
and
sbb
(bad)
mov
ss
dec
mov
das
push
shl
mov
pusha
fwait
icebp
push
cmps
sub
(bad)
(bad)
cld
iret
je
push
push
scas
ja
mov
jg
aam
fwait
daa
stos
iret
mov
(bad)
(bad)
(bad)
call
aaa
sub
push
cmp
test
aas
mov
arpl
mov
into
adc
setp
(bad)
(bad)
call
and
mov
mov
cli
push
xchg
dec
addr16
cld
daa
jns
aam
(bad)
mov
ror
or
std
std
jmp
in
in
call
fndisi(8087
mov
sbb
or
(bad)
cmp
std
in
cmps
(bad)
(bad)
(bad)
jmp
mov
das
dec
aaa
mov
mov
lock
sti
repz
in
add
int
(bad)
(bad)
call
add
mov
rcl
fldenv
sub
or
popf
cli
mov
xchg
add
das
adc
test
jmp
aam
je
bound
xchg
cmps
lods
pushf
out
sub
jg
cld
addr16
enter
cmps
jle
clc
sti
lock
(bad)
(bad)
mov
mov
inc
jmp
jge
add
jno
mov
adc
add
sub
call
pop
adc
cld
mov
(bad)
jp
mov
addr16
(bad)
(bad)
push
movs
mov
inc
pop
int3
cmp
mov
lds
stos
daa
arpl
dec
sub
cmp
(bad)
mov
xor
iret
cmp
in
mov
fsubr
cs
(bad)
(bad)
jmp
shl
push
pop
fst
jge
mov
mov
js
sahf
dec
mov
(bad)
(bad)
(bad)
jmp
mov
retf
cmp
mov
inc
mov
(bad)
and
push
inc
aad
or
mov
push
mov
out
enter
jmp
xor
(bad)
jmp
fdivr
cmp
cwde
pop
pop
jg
jmp
in
mov
(bad)
jmp
sbb
or
hlt
stos
jle
mul
out
ret
cmp
idiv
push
retf
das
clc
cmp
test
mov
clc
stc
mov
repz
(bad)
(bad)
(bad)
out
mov
pushf
bound
(bad)
pop
xchg
ins
pusha
lods
sbb
xchg
out
jo
repz
(bad)
cmp
das
jno
mov
dec
inc
xchg
fwait
mov
sbb
(bad)
(bad)
mov
rcr
loopne
sub
pop
(bad)
jnp
bound
jecxz
call
adc
adc
mov
jmp
pop
push
icebp
sar
(bad)
inc
js
and
mov
xchg
mov
and
ins
xchg
mov
test
sub
dec
push
fld
into
xchg
cs
pop
mov
nop
dec
jo
adc
and
(bad)
(bad)
fild
mov
xchg
mov
(bad)
and
jno
cmc
push
sbb
and
cdq
push
outs
cld
(bad)
jg
xor
cli
xchg
or
sbb
div
push
shl
jge
push
rcr
(bad)
(bad)
call
fcomp
fdiv
sbb
cmc
cmps
or
ss
int3
sub
dec
popf
jecxz
pop
fistp
into
xchg
push
jge
dec
jmp
movs
cld
shl
jmp
dec
mov
or
ret
lods
fiadd
inc
jnp
(bad)
(bad)
inc
retf
jg
lock
push
xor
adc
cld
sbb
pop
(bad)
mov
(bad)
(bad)
mov
pop
add
pop
(bad)
out
adc
mov
jb
push
mov
call
push
dec
imul
fst
mov
xchg
cli
jp
mov
(bad)
(bad)
(bad)
dec
fidivr
sub
ins
loope
fstp
ins
jnp
scas
and
and
fldl2e
mov
(bad)
(bad)
push
stos
movs
dec
adc
add
cmps
pop
jno
mov
mov
pop
in
in
cmp
std
(bad)
(bad)
(bad)
fisttp
mov
lea
fwait
ss
imul
cwde
popf
(bad)
(bad)
(bad)
mov
in
xchg
dec
shl
loope
adc
mov
cmp
scas
dec
(bad)
jle
(bad)
(bad)
push
pop
dec
or
pushf
lea
push
or
mov
xor
stos
sbb
adc
adc
ret
inc
(bad)
mov
in
push
fsubr
(bad)
gs
push
mov
dec
dec
push
cmp
cwde
movs
mov
push
(bad)
push
jae
lahf
and
xor
push
(bad)
jmp
scas
fild
pop
es
nop
fwait
xchg
movs
xlat
cmp
push
mov
jbe
jo
imul
pop
ret
xor
dec
dec
leave
dec
int
sar
outs
leave
xchg
mov
jg
dec
mov
in
and
pop
xor
js
out
ret
das
clc
(bad)
(bad)
ror
adc
cmp
out
iret
xor
push
(bad)
call
and
stos
push
sub
shr
xchg
sbb
dec
shr
neg
stos
push
test
shl
sub
cmp
or
jmp
(bad)
inc
jno
retf
mov
or
or
ret
popa
mov
jnp
(bad)
(bad)
call
cmp
cmp
inc
(bad)
fsub
clc
mov
call
inc
add
xchg
imul
push
push
adc
pop
mov
ins
sbb
(bad)
jmp
loopne
ins
mov
push
and
cmp
mov
std
call
push
popf
sub
test
push
add
mov
(bad)
call
xor
jle
nop
aam
popf
xchg
push
outs
xchg
mov
ins
retf
inc
mov
push
cld
cmp
sub
cli
pop
push
xchg
dec
inc
nop
xchg
push
mov
jne
mov
push
or
out
jp
jns
or
call
sbb
cs
push
jmp
sub
push
and
(bad)
sar
in
leave
(bad)
(bad)
(bad)
inc
mov
mov
cmps
jmp
stos
or
and
jne
sbb
sbb
je
data16
sti
jbe
(bad)
(bad)
push
int
jmp
stos
shl
fs
fnstenv
(bad)
mov
xchg
int3
pushf
push
cld
daa
dec
leave
mov
jae
lods
out
jge
addr16
inc
ficom
xchg
dec
idiv
push
cld
call
mov
jg
xchg
outs
mov
push
cmps
pop
loope
jp
push
and
push
and
fcomip
(bad)
dec
jle
jecxz
xchg
push
sub
outs
movsx
test
jo
xchg
inc
jmp
(bad)
jmp
pop
push
cli
pop
lahf
adc
in
int
mov
fdivp
mov
lods
shr
add
jl
out
xchg
(bad)
(bad)
(bad)
call
call
jbe
ja
mov
imul
(bad)
jbe
fidivr
sar
out
(bad)
(bad)
jmp
inc
mov
mov
addr16
mov
dec
push
and
dec
push
jp
dec
mov
or
jne
jbe
hlt
jecxz
mov
popa
jl
(bad)
(bad)
(bad)
(bad)
fild
lods
fwait
outs
out
gs
sbb
mov
xchg
jne
movs
pop
ins
popa
dec
push
and
(bad)
(bad)
inc
or
mov
mov
repnz
iret
lahf
outs
cmp
mov
dec
xchg
je
(bad)
(bad)
(bad)
jmp
cli
ret
pop
xchg
mov
mov
loop
and
pop
daa
mov
fwait
loope
add
cmps
push
out
(bad)
fcomip
cmps
imul
js
jl
inc
mov
push
mov
mov
fisubr
xor
xchg
in
div
(bad)
mov
outs
mov
push
rcr
sbb
fldcw
(bad)
(bad)
(bad)
jmp
and
jmp
stos
jle
jp
cmc
jp
mov
pop
(bad)
pop
mov
(bad)
fdiv
(bad)
cmp
fstp
or
sbb
(bad)
(bad)
inc
icebp
sub
sub
or
add
jnp
mov
(bad)
outs
clc
dec
ja
lods
inc
push
out
aad
neg
ja
(bad)
(bad)
(bad)
jg
in
fs
sbb
pusha
fs
inc
(bad)
sahf
and
popf
imul
fmul
loop
mov
dec
(bad)
and
cld
or
data16
ins
leave
mov
xchg
rcr
or
push
cmp
rol
idiv
out
jbe
or
adc
(bad)
(bad)
dec
loop
arpl
pop
sbb
mov
mov
jne
cmps
and
sar
mov
mov
(bad)
or
test
pop
out
dec
call
outs
sub
stos
repnz
imul
sub
pop
jo
(bad)
(bad)
jg
jp
mov
cmps
sub
inc
xchg
fiadd
imul
fnstsw
ss
push
aaa
or
xlat
push
shl
sahf
pop
movs
movs
dec
mov
dec
(bad)
(bad)
(bad)
call
pop
stos
and
mov
je
jmp
push
cmp
cmp
popf
icebp
fucom
outs
in
scas
cmp
pop
mov
xchg
imul
mov
(bad)
jo
cwde
dec
gs
(bad)
(bad)
inc
lock
inc
sub
mov
icebp
xchg
lock
das
outs
daa
push
push
cmps
in
sar
jae
loopne
jecxz
(bad)
fmul
jns
jmp
scas
cmp
mov
or
push
or
int
jne
cmc
mov
push
dec
sub
add
mov
or
in
xchg
mov
scas
fs
icebp
imul
adc
mov
mov
inc
dec
call
xchg
jg
(bad)
call
xchg
jl
leave
xor
cmp
data16
(bad)
mov
jne
and
(bad)
dec
push
rcl
imul
mov
loopne
(bad)
push
movs
pusha
hlt
mov
test
loop
jns
lock
cmp
idiv
(bad)
jmp
dec
inc
loope
lods
jp
aaa
xchg
dec
out
cdq
ds
mov
push
loope
jg
lock
add
(bad)
(bad)
aad
xchg
stc
pushf
dec
add
pop
pop
xor
dec
sbb
jns
mov
repz
mov
xchg
xor
les
imul
ins
mov
into
(bad)
(bad)
(bad)
(bad)
jmp
lea
mov
pop
lods
mov
(bad)
retfw
cdq
bound
es
cdq
mov
dec
pushf
cmp
jp
in
inc
mov
push
jmp
jge
lea
out
call
ja
(bad)
(bad)
(bad)
jg
(bad)
mov
rcl
pop
les
dec
stc
and
inc
and
pusha
cld
push
add
hlt
clc
fxam
pop
jns
mov
loope
push
mov
inc
fstp
fdivr
rcr
ja
lock
lods
push
jns
repnz
in
jge
sub
(bad)
cli
mov
add
stos
cwde
cwde
dec
test
loope
lea
ret
push
lods
mov
(bad)
mov
jecxz
and
(bad)
hlt
retf
shl
push
lods
push
je
idiv
cmp
and
dec
aam
inc
test
arpl
pop
push
inc
std
fdiv
outs
arpl
fdivr
(bad)
mov
sbb
in
mov
xchg
jb
fisttp
push
stos
ins
retf
inc
cmc
scas
ret
mov
push
aam
xchg
js
dec
or
(bad)
aas
pop
mov
push
(bad)
(bad)
call
nop
mov
loopne
jo
out
mov
arpl
mov
gs
(bad)
cmp
and
sar
cmp
(bad)
dec
loop
sbb
cmp
gs
pop
test
gs
(bad)
(bad)
fld
push
js
or
add
adc
aad
pop
(bad)
out
ret
(bad)
(bad)
jmp
dec
in
xchg
and
jle
stos
xor
and
push
add
(bad)
(bad)
(bad)
inc
xlat
nop
in
dec
jl
xchg
mov
xchg
ret
dec
push
in
adc
mov
retf
sub
test
inc
inc
je
add
mov
xchg
in
add
xchg
and
call
sbb
loop
xchg
dec
mov
push
cmp
adc
lock
ja
js
movsx
inc
dec
push
sahf
push
push
mov
(bad)
(bad)
jmp
push
sbb
adc
int3
into
jmp
vmread
xor
cmp
sbb
jmp
lahf
push
fcomip
(bad)
inc
jo
cmp
vaddps
push
mov
ud0
(bad)
dec
cmp
pop
je
pusha
sbb
and
add
push
cwde
xchg
sub
mov
dec
(bad)
(bad)
(bad)
(bad)
mov
daa
adc
and
xor
or
stc
push
fst
jg
(bad)
jmp
stos
fiadd
dec
jae
sti
retf
cmp
dec
or
cs
lahf
push
dec
jmp
jmp
mov
inc
adc
xchg
(bad)
(bad)
call
xchg
fnstcw
inc
jns
lahf
dec
stos
xchg
pop
sub
dec
jb
mov
mov
scas
js
call
dec
aad
imul
test
jmp
clc
push
sub
mov
sub
movs
fisub
test
push
(bad)
(bad)
(bad)
out
sbb
push
outs
jmp
adc
xchg
jb
sbb
sub
call
xchg
inc
push
push
dec
test
dec
cmp
adc
into
cmp
mov
(bad)
(bad)
(bad)
jmp
adc
pop
sbb
pushf
in
enter
in
adc
daa
nop
xor
mov
call
cmp
mov
inc
xchg
cmc
adc
pop
push
push
imul
add
mov
dec
mov
ret
or
pushf
lods
push
cmp
cmp
pop
(bad)
(bad)
jmp
cdq
cwde
aam
outs
xchg
dec
push
sub
(bad)
sar
ret
jmp
loop
dec
or
inc
repz
fldcw
inc
sub
inc
call
inc
aam
mov
icebp
jge
retf
mov
scas
sahf
(bad)
and
push
(bad)
jmp
adc
adc
inc
pop
shl
rcl
and
adc
fdiv
fistp
add
add
and
pop
dec
push
or
pushf
lock
(bad)
call
mov
jo
xchg
pop
push
movs
and
lea
leave
cmp
dec
dec
adc
jmp
xchg
cmp
imul
test
jp
mov
out
sbb
rcl
call
xchg
cmp
mov
stos
push
imul
jg
pop
jg
dec
scas
mov
push
cdq
mov
push
fbld
add
inc
pop
mov
fwait
or
sbb
jp
cmps
cmc
push
(bad)
scas
(bad)
xchg
push
loop
data16
(bad)
(bad)
(bad)
call
pushf
pop
popa
icebp
sbb
mov
xchg
cmc
ds
pop
add
loope
test
(bad)
(bad)
(bad)
(bad)
jo
inc
sbb
xchg
jp
xor
mov
aad
ja
push
inc
dec
mov
(bad)
(bad)
(bad)
push
stos
push
pop
push
das
aam
dec
mov
mov
ds
adc
mov
xchg
add
cdq
hlt
call
std
jmp
xlat
lods
test
mov
adc
div
retf
(bad)
(bad)
push
icebp
xor
shl
mov
out
pop
mov
sbb
inc
mov
fsub
(bad)
(bad)
(bad)
(bad)
fwait
sbb
pop
sub
fisttp
cmc
into
mov
lods
sbb
xchg
jg
(bad)
(bad)
cmp
push
cmp
jne
int
lods
mov
aas
jg
outs
test
xchg
dec
mov
into
movs
rcl
xor
sub
in
(bad)
call
pop
mov
xor
lea
mov
inc
cmp
(bad)
(bad)
jmp
ret
add
loop
adc
xchg
dec
sbb
jne
std
leave
mov
push
retf
es
or
jmp
mov
(bad)
les
cmp
bound
hlt
ja
pop
std
(bad)
dec
iret
inc
add
push
jl
(bad)
jo
mov
(bad)
(bad)
(bad)
jmp
(bad)
sahf
mov
push
ror
or
push
cld
in
cmp
add
inc
sar
and
(bad)
(bad)
jmp
cmps
xor
loope
repnz
push
or
cmp
xchg
pop
mov
fild
xchg
(bad)
(bad)
dec
cld
sub
rol
push
mov
rol
mov
(bad)
test
scas
pop
mov
ss
mov
in
inc
pop
sub
jno
sub
adc
inc
or
es
push
push
imul
hlt
mov
cmps
test
push
clc
jb
xor
fcom
and
stos
lods
clc
(bad)
jmp
xor
xchg
adc
scas
pop
mov
and
pop
call
lock
je
pop
(bad)
jmp
add
fimul
popa
pop
ret
inc
and
(bad)
call
jp
add
lea
loop
adc
loope
jecxz
inc
mov
loop
push
mov
(bad)
jmp
call
and
(bad)
adc
ins
in
or
jmp
ins
stc
mov
leave
mov
pop
cmc
(bad)
call
mov
fild
jno
int
in
(bad)
aaa
shl
(bad)
(bad)
jmp
xchg
and
and
pop
mov
cdq
jbe
shl
pushf
movs
mov
aas
pop
xor
xchg
scas
call
shl
sub
mov
jmp
mov
mov
retf
daa
sub
in
mov
pop
sub
xor
dec
out
sbb
fsubr
mov
movs
jae
(bad)
call
aaa
bound
adc
(bad)
mov
mov
ins
xchg
cdq
add
loopne
pop
jns
mov
sbb
add
dec
adc
repz
push
fsubr
out
mov
(bad)
call
fnstenv
ds
out
mov
scas
cmp
add
in
adc
xor
push
mov
xchg
push
pop
(bad)
(bad)
dec
xor
(bad)
(bad)
(bad)
jmp
xor
pop
nop
add
push
jne
mov
dec
sbb
dec
sub
(bad)
(bad)
call
push
sub
inc
xchg
mov
sub
movs
outs
mov
xor
jo
mov
(bad)
inc
xchg
(bad)
int
leave
and
in
jns
push
xor
dec
(bad)
fldcw
jbe
pop
(bad)
(bad)
(bad)
(bad)
jg
xchg
push
dec
out
ficom
int
test
call
ret
sti
mov
call
sar
dec
add
mov
cmc
jmp
aam
ins
dec
pusha
bnd
push
xor
(bad)
(bad)
(bad)
(bad)
cld
fisub
aad
xchg
mov
in
mov
jg
pop
(bad)
nop
and
xlat
in
and
aaa
push
inc
ret
icebp
int3
or
push
clc
aas
arpl
jle
movs
sbb
push
jmp
outs
jno
push
or
push
loopne
sbb
mov
cwde
call
(bad)
fidiv
cmp
test
cmp
add
(bad)
call
adc
mov
cs
pop
into
(bad)
xchg
mov
jmp
mov
mov
pop
in
shr
xor
xor
or
inc
clc
call
ds
sbb
mov
xchg
cmps
retf
fldcw
mov
sub
repnz
fstp
(bad)
(bad)
(bad)
jmp
dec
sbb
jo
outs
sbb
mul
pop
jno
xchg
jnp
jne
clc
pop
(bad)
add
cmp
jnp
sub
push
add
push
aas
out
aam
addr16
loop
out
inc
xchg
push
mov
mov
jae
ret
xor
sti
and
ja
jae
clc
jmp
mul
std
mov
enter
aad
std
(bad)
mov
fcomp
dec
mov
(bad)
(bad)
(bad)
(bad)
outs
pop
xlat
jb
jmp
aad
sti
inc
out
outs
repnz
std
sub
hlt
imul
fidivr
pop
cld
push
pop
pop
xlat
les
xchg
dec
mov
mov
dec
jg
mov
fwait
outs
add
(bad)
(bad)
mov
jg
scas
aam
imul
cmps
adc
aas
cli
(bad)
fcomip
jmp
jmp
std
fcomp
loop
sub
icebp
outs
lahf
jp
mov
adc
call
jnp
xchg
ins
lahf
jmp
(bad)
std
push
push
ins
clc
pop
cld
jg
icebp
das
ffree
ret
das
mul
adc
pop
jg
(bad)
lahf
mov
lock
jg
jb
pop
aad
sti
mov
sbb
aaa
xchg
std
adc
and
int
call
cmp
stc
xchg
loop
ja
scas
in
std
cmp
jg
fbstp
push
rcl
shl
loop
sbb
xchg
daa
add
jmp
repz
xlat
fldenv
outs
stos
jmp
jp
push
adc
das
pop
lahf
cld
inc
xor
pop
sbb
retf
call
test
(bad)
sub
mov
xchg
(bad)
call
xchg
mov
adc
in
ret
inc
lods
mov
jmp
in
ds
(bad)
(bad)
push
pop
fistp
ror
ins
sahf
leave
stos
(bad)
scas
retf
inc
aas
xchg
repz
retf
std
sbb
inc
(bad)
ffree
ret
cmp
xor
in
adc
jne
pop
cld
(bad)
mov
jmp
retf
(bad)
dec
ror
xlat
std
fistp
mov
and
(bad)
sub
dec
sub
loope
std
mov
aas
lds
pop
inc
or
pop
icebp
fiadd
mov
out
push
sbb
adc
cld
push
jl
mov
mov
fisubr
in
xchg
pop
cs
push
(bad)
in
dec
inc
aas
loop
out
inc
xchg
test
cmps
sbb
xchg
sti
(bad)
push
prefetch
sti
push
js
mov
ja
stc
repz
fmul
or
xchg
fstp
bound
cmps
pusha
inc
pop
xchg
aas
scas
shr
ret
pop
mul
les
sub
mul
push
push
or
(bad)
(bad)
pop
mov
hlt
stos
(bad)
stos
sbb
jbe
repnz
call
mov
sub
(bad)
hlt
fcmove
xchg
aad
ficomp
push
sti
inc
outs
ja
xchg
std
xor
cld
adc
mov
sbb
addr16
in
in
aaa
std
test
dec
fiadd
jnp
xchg
in
scas
jmp
(bad)
push
retf
cld
push
mov
icebp
aas
or
out
fucom
mov
mov
pop
leave
clc
in
xor
retf
mov
ds
pop
hlt
gs
in
ficomp
mov
lea
push
outs
fistp
cmp
and
pop
push
mov
cmp
inc
sbb
pop
imul
retf
stos
aaa
cld
dec
xor
ins
(bad)
out
std
pop
pop
(bad)
and
push
xchg
(bad)
or
sar
and
add
and
dec
push
xlat
fneni(8087
idiv
jl
sti
jg
push
dec
xchg
ins
pop
shr
push
mov
adc
pop
mov
icebp
pandn
mov
cmps
cmps
sahf
idiv
jae
cli
fisttp
jle
pop
rcl
arpl
loopne
loope
push
push
clc
xor
scas
mov
sub
jg
(bad)
in
(bad)
jl
pop
pop
aaa
cli
xor
imul
call
jae
loop
call
fdivr
jge
lahf
in
add
and
push
lods
call
mov
pop
jl
cdq
push
dec
jo
ds
and
push
mov
pushf
pop
fisttp
dec
mov
ret
rol
and
in
and
test
jmp
fadd
push
inc
mov
(bad)
call
in
add
mov
push
push
hlt
into
int3
jg
(bad)
(bad)
(bad)
fmul
xchg
enter
xchg
xor
mov
adc
push
jmp
inc
cld
cmp
addr16
aam
rol
sbb
cmps
jmp
adc
(bad)
out
mov
ins
sbb
fwait
mov
(bad)
dec
lahf
mov
push
mov
(bad)
dec
push
rcl
push
test
and
lock
movs
mov
sub
jle
(bad)
jmp
fldcw
dec
inc
rol
int3
push
hlt
int
mov
movs
sub
jmp
in
xchg
rcl
retf
add
xor
mov
movs
inc
xor
(bad)
jmp
xor
mov
je
pop
mov
lods
pop
xchg
add
xchg
pop
jle
cmc
ins
bound
call
jmp
(bad)
movs
pop
and
cmp
dec
(bad)
jno
cli
(bad)
(bad)
call
popa
pop
retf
fdivr
push
cmps
movs
popa
cmps
add
fs
test
mov
fs
(bad)
mov
sub
stos
push
jmp
shl
(bad)
(bad)
jmp
pop
shl
gs
loopne
fiadd
jmp
hlt
fwait
mov
jg
in
cmp
int
(bad)
(bad)
aas
pop
out
lods
push
fdiv
xor
push
xlat
or
push
imul
pop
adc
outs
pop
popf
push
std
inc
mov
jae
mov
mov
(bad)
(bad)
jmp
call
and
adc
mov
pushf
lea
sti
mov
and
or
jmp
xchg
test
mov
retf
jmp
loopne
(bad)
(bad)
mov
and
add
hlt
test
daa
sti
mov
pop
stos
pop
loope
(bad)
(bad)
(bad)
mov
sti
cmp
dec
dec
in
retf
mov
shr
lea
jle
sbb
(bad)
in
dec
pop
jecxz
(bad)
mov
jo
xor
inc
xchg
daa
pop
xchg
movs
in
cmp
mov
imul
out
scas
jb
fnstsw
jp
cmp
(bad)
mov
pop
out
inc
fcomip
outs
(bad)
mov
mov
inc
and
sar
mov
mov
sar
(bad)
inc
cmp
fdivr
cld
xchg
imul
enter
sbb
mov
cmps
pop
push
mov
imul
push
jecxz
fidivr
jg
mov
xor
lock
(bad)
ins
fdivrp
call
cli
push
(bad)
push
lahf
fadd
push
ins
add
cmp
mov
clc
(bad)
std
mov
(bad)
(bad)
aam
aas
shl
mov
push
sbb
div
jmp
cmps
and
dec
add
loope
xchg
fucomip
cld
push
outs
(bad)
aas
cld
jmp
fist
pop
call
push
or
mov
mov
ret
(bad)
std
ret
mov
push
lahf
rcl
test
pop
mov
out
jg
mov
pop
mov
leave
push
nop
jg
pop
std
cmp
inc
(bad)
dec
inc
or
rcl
(bad)
cmp
jne
in
leave
dec
sub
and
enter
movs
pop
icebp
(bad)
outs
push
fisubr
hlt
bound
arpl
jg
(bad)
sbb
push
push
xor
dec
mov
lahf
add
mov
mov
jg
pop
xor
inc
(bad)
(bad)
mul
call
sub
jg
inc
in
(bad)
jg
dec
mov
sar
cmp
pop
hlt
mov
test
xor
hlt
arpl
jg
ret
xchg
pop
(bad)
fdivr
mov
cli
cmp
aas
js
mov
sub
push
mov
inc
xor
leave
std
mov
in
je
sbb
jae
(bad)
(bad)
(bad)
(bad)
fidiv
test
int3
xchg
std
ins
aas
fmul
mov
cli
lahf
sbb
aas
test
(bad)
lock
jnp
mov
(bad)
addr16
jbe
dec
rol
nop
add
cld
out
mov
ja
lahf
hlt
rcr
loope
(bad)
jmp
lods
mov
sub
repz
xor
loope
hlt
sub
fwait
pop
jg
repz
xor
and
clc
(bad)
dec
fimul
pop
inc
(bad)
pop
in
(bad)
nop
pop
std
fcomip
jnp
in
jmp
mov
jg
das
cli
fcomp
cmc
notrack
outs
lods
jo
sbb
cld
cmp
out
ja
addr16
mov
xchg
adc
xchg
std
mov
jnp
jne
push
mov
pop
mov
stc
repnz
addr16
and
cli
inc
sahf
pop
or
lods
push
push
push
sbb
imul
(bad)
push
add
sbb
scas
xor
es
gs
in
fdiv
rol
cmps
pop
cld
add
(bad)
jg
ror
lock
out
mov
mov
cld
xlat
arpl
out
fcomip
pop
(bad)
jnp
lods
aas
(bad)
sti
add
xor
jmp
mov
mov
push
shr
shl
(bad)
mov
rcr
pop
hlt
xchg
daa
jne
dec
icebp
dec
(bad)
out
ret
cmp
(bad)
(bad)
inc
mov
inc
pop
mov
mov
mov
inc
cwde
(bad)
int3
and
mov
daa
mov
adc
mov
mov
cmc
ror
(bad)
mov
dec
hlt
cmp
cmps
jg
sub
sbb
loop
jecxz
cmp
jge
clc
cli
sub
fdivr
fadd
pop
(bad)
imul
mov
aas
neg
fucomip
aas
pop
xchg
sbb
div
pop
cmc
and
fld
addr16
int3
inc
pop
into
jo
dec
fcomi
push
es
sub
inc
pop
cli
sahf
(bad)
(bad)
cli
mov
xor
in
in
pop
add
mov
(bad)
push
(bad)
inc
mov
mov
not
jl
(bad)
mov
outs
mov
pop
loope
stos
std
mov
fcomp
sar
fcomp
pop
(bad)
inc
aas
add
pop
loop
and
(bad)
jne
stos
call
jno
sti
ins
ret
sbb
fucomp
idiv
lgs
rol
aam
aas
or
mov
ror
(bad)
out
sbb
pop
not
xchg
mov
jg
jg
(bad)
fwait
js
dec
mov
mov
das
out
idiv
xlat
add
scas
std
(bad)
sahf
push
pop
fdivr
or
clc
cdq
adc
mov
arpl
into
pop
call
sub
xlat
sbb
not
jno
jmp
or
retf
fcmovnu
mov
das
cmp
iret
in
dec
cli
and
mov
xchg
jmp
adc
add
rcl
(bad)
mov
add
mov
xor
(bad)
(bad)
mov
sub
cmc
loope
xbegin
dec
xchg
pop
pop
(bad)
mov
add
(bad)
cli
sub
sbb
add
fld
mov
pusha
pop
(bad)
loop
cs
jp
das
icebp
in
sub
clc
out
movs
std
ret
or
sub
mov
icebp
mov
fisttp
cld
add
not
jb
bound
movs
jmp
clc
cmp
jbe
fwait
inc
cli
xor
and
mov
adc
cmp
mov
lds
sub
push
mov
(bad)
jge
mov
mov
cmp
pop
sub
(bad)
fdivr
jbe
jg
arpl
hlt
xor
ds
pushf
push
xor
mov
int3
mov
out
fldcw
call
outs
fucom
not
cmp
pop
loopne
das
shl
sbb
test
cdq
clc
and
push
clc
jmp
fist
inc
aam
adc
push
pop
cld
mov
jae
xchg
mov
push
int3
dec
sub
dec
mov
popa
push
adc
add
stc
cs
pop
push
mov
push
dec
outs
or
or
(bad)
(bad)
(bad)
inc
into
cmp
fwait
shl
lods
xor
sub
cdq
lock
xlat
mov
mov
(bad)
in
jle
fstp
mov
sub
fdiv
bound
lods
lahf
adc
jmp
jmp
push
sbb
shr
xchg
hlt
inc
jge
clc
in
and
xor
std
pop
ret
cmps
out
dec
xchg
repz
(bad)
(bad)
call
and
in
mov
mov
pop
call
xchg
push
mov
inc
in
enter
(bad)
call
lods
add
and
add
in
push
fidivr
(bad)
call
outs
test
mov
inc
(bad)
mov
and
stos
pop
cmps
sar
dec
inc
add
scas
cli
jne
test
inc
movs
scas
jno
mul
in
fnsave
and
(bad)
push
aas
shr
jecxz
inc
mov
inc
(bad)
mov
mov
push
dec
cmp
jp
push
retf
icebp
nop
(bad)
and
mov
call
(bad)
(bad)
jg
xchg
cli
and
mov
repnz
sti
pop
cmp
es
and
nop
clc
jns
call
(bad)
loope
in
sbb
pop
loope
xchg
idiv
int
lods
pop
dec
(bad)
aas
push
mov
xchg
pop
retf
sbb
mov
mov
stc
mov
pop
pop
hlt
daa
hlt
cmp
xor
mov
or
inc
jg
push
mov
and
push
mov
jecxz
rcr
je
mov
or
sub
jp
clc
add
xchg
mov
jl
(bad)
jnp
cmp
jnp
adc
(bad)
push
stos
fst
jle
xchg
gs
xchg
je
clc
push
arpl
call
cld
in
aad
or
dec
cmps
in
dec
loop
inc
mov
inc
xor
(bad)
mov
push
iret
jmp
(bad)
scas
iret
fild
fmul
cld
pop
iret
fcomi
das
sar
dec
cs
(bad)
lock
pop
cli
jg
or
pushf
dec
pop
mov
loopne
(bad)
(bad)
cld
jp
jle
push
jle
cwde
iret
loope
paddsw
lock
(bad)
outs
clc
aas
sbb
loop
pushf
hlt
(bad)
repz
lahf
ret
pop
adc
adc
push
mov
jmp
(bad)
jg
pusha
mov
cmp
mov
mov
jno
and
jmp
repz
stos
(bad)
popf
pop
mov
repz
(bad)
push
inc
inc
cwde
inc
or
push
inc
cmps
lock
clc
xchg
inc
(bad)
cwde
jg
adc
sahf
(bad)
rcr
sbb
fs
in
or
icebp
jmp
repnz
lahf
loop
jmp
sub
call
sbb
fs
push
pop
shl
mov
(bad)
inc
cld
sub
xor
xchg
pop
dec
pop
lds
sbb
test
ds
pop
enter
sub
call
loope
dec
pop
cmc
mov
aas
or
mov
jg
cmp
jge
outs
pop
jo
jmp
sbb
call
mov
dec
(bad)
es
ret
inc
std
push
ror
icebp
inc
mov
add
daa
clc
(bad)
stc
mov
hlt
sar
aas
inc
lahf
jecxz
mov
push
or
aas
das
pop
dec
and
pop
fcmovb
inc
(bad)
cld
push
inc
clc
je
jmp
iret
clc
js
sar
(bad)
mov
cli
adc
adc
in
rol
std
pop
mov
call
mov
call
(bad)
gs
std
icebp
cs
inc
loope
mov
sbb
push
add
loope
(bad)
(bad)
(bad)
ffreep
dec
scas
in
mov
clc
ins
sub
clc
imul
cmp
mov
ins
pop
and
popf
lock
sub
xor
jmp
scas
div
call
pop
rcr
cmps
test
pop
cld
out
pop
icebp
repnz
clc
jae
std
scas
call
(bad)
loop
jmp
mov
xchg
push
je
jecxz
xchg
xlat
dec
test
inc
xchg
pop
in
jns
(bad)
dec
sbb
(bad)
(bad)
fistp
cld
sub
das
mov
jle
cmps
xchg
jl
std
pop
mov
std
sub
imul
ret
call
(bad)
inc
fsubr
(bad)
xor
jge
adc
xchg
pop
in
ins
out
clc
pop
jg
ss
call
stos
push
enter
mov
sahf
aam
jg
jb
(bad)
(bad)
(bad)
aas
fcmove
fistp
(bad)
pop
hlt
sti
sti
lods
pop
mov
(bad)
sub
jle
and
outs
fdiv
loop
cli
pop
mov
xlat
jg
jnp
and
cld
aaa
cld
mov
push
sub
arpl
xchg
add
shl
in
fiadd
sbb
cld
imul
xor
xor
xor
cmp
dec
lahf
ror
cld
pop
mov
outs
sti
jbe
sbb
lea
cli
xor
hlt
outs
dec
icebp
xchg
jne
ja
cmp
mov
outs
(bad)
sbb
jbe
xchg
xchg
aas
or
pop
inc
(bad)
xchg
jge
xor
cmp
(bad)
(bad)
call
inc
push
inc
add
dec
mov
test
pusha
sbb
outs
xor
aaa
sar
(bad)
(bad)
inc
hlt
dec
adc
fwait
imul
inc
repz
mov
das
jmp
cmp
ins
xchg
push
in
xchg
push
jmp
and
jnp
cwde
icebp
fsub
push
shr
and
imul
(bad)
(bad)
mov
scas
push
or
rol
inc
or
mov
retf
sti
push
mov
(bad)
jmp
dec
push
hlt
pop
xlat
jmp
sub
lods
stc
add
xchg
lds
adc
sar
(bad)
(bad)
call
scas
test
scas
xchg
jae
mov
sbb
into
and
sub
scas
jl
(bad)
(bad)
call
push
js
mov
mov
movs
or
and
push
out
mov
movs
cmp
add
(bad)
call
cs
or
and
dec
or
mov
jmp
adc
sbb
mov
mov
and
fwait
xchg
das
(bad)
mov
dec
mov
scas
push
hlt
stos
js
fidivr
mov
jb
jmp
imul
daa
sbb
(bad)
(bad)
(bad)
call
cmp
adc
push
cwde
adc
aad
stos
lods
in
xchg
(bad)
(bad)
(bad)
inc
or
not
dec
aad
stos
cmp
or
sub
push
dec
cmp
adc
(bad)
call
or
hlt
mov
retf
push
pusha
xor
mov
cld
clc
clc
jg
cmc
dec
jne
push
mov
jl
pusha
push
push
mov
sbb
sti
(bad)
(bad)
(bad)
jmp
cwde
adc
sub
sbb
(bad)
sbb
xor
push
pop
imul
(bad)
(bad)
dec
push
push
scas
lods
cld
int3
jno
repz
dec
je
dec
in
add
stos
cdq
imul
out
enter
hlt
(bad)
(bad)
(bad)
dec
data16
rol
add
shl
out
adc
or
sbb
nop
or
test
lea
(bad)
or
mov
sbb
xlat
arpl
xlat
sub
jmp
sub
scas
dec
test
mul
out
test
repz
loop
dec
jne
(bad)
(bad)
(bad)
inc
retf
dec
inc
test
push
adc
mov
or
adc
sbb
mov
xchg
xchg
test
add
xchg
jne
movs
pusha
xchg
mov
jo
in
lods
or
in
and
test
jno
adc
or
(bad)
(bad)
jmp
sub
push
lods
sahf
push
pop
xchg
sbb
xchg
sbb
xor
sub
fist
cs
(bad)
(bad)
push
test
xchg
jp
mov
inc
adc
jo
fldcw
adc
sub
loope
(bad)
(bad)
(bad)
call
and
shr
mov
test
xchg
or
dec
pop
test
inc
sar
(bad)
sbb
(bad)
aam
jp
sar
popa
repnz
sub
xor
adc
pop
mov
sbb
out
mov
into
ja
pushaw
mov
push
scas
call
call
loope
dec
mov
mov
cs
or
or
sbb
cmps
push
inc
(bad)
in
call
push
int3
movs
pusha
adc
outs
mov
imul
mov
xchg
gs
shl
arpl
(bad)
push
(bad)
dec
adc
(bad)
(bad)
(bad)
dec
pop
xor
sar
mov
push
adc
mov
not
cdq
mov
xor
jb
inc
pusha
call
pop
dec
mov
mov
xchg
mov
fdiv
popa
adc
push
lock
add
bound
or
add
lock
cwde
add
(bad)
(bad)
(bad)
jp
xchg
pop
jns
pop
add
sbb
jecxz
rcr
jb
jne
hlt
cmp
(bad)
mov
add
push
or
sbb
add
(bad)
(bad)
(bad)
jmp
test
inc
adc
in
pop
cdq
gs
mov
mov
fild
xrelease
add
(bad)
call
push
push
mov
mov
pop
mov
adc
aam
cs
(bad)
(bad)
mov
int3
jl
pop
shl
and
inc
mov
int
cli
pop
cs
pop
push
(bad)
cmp
mov
push
jo
mov
jae
mov
pop
xchg
jae
push
pop
jge
(bad)
mov
push
lds
cmps
add
xor
(bad)
(bad)
(bad)
(bad)
mov
push
adc
hlt
mov
out
mov
cmps
or
pop
cld
or
stos
lods
or
add
jp
xchg
call
xchg
xor
sub
test
test
pop
mov
in
sub
fcomip
call
pop
pushf
push
fstp
cmp
mov
mov
(bad)
(bad)
(bad)
call
(bad)
stos
rol
loop
gs
sahf
(bad)
push
or
daa
stos
add
jmp
addr16
(bad)
(bad)
inc
xchg
movs
sbb
sti
jmp
inc
scas
arpl
sahf
xor
fadd
(bad)
(bad)
(bad)
push
sub
loopne
push
jmp
imul
xor
mov
jecxz
je
mov
mov
popa
dec
mov
push
lock
mov
cmp
cmps
jge
push
fadd
dec
(bad)
pop
rcl
sub
adc
inc
xchg
inc
out
mov
call
push
sar
stos
sbb
imul
jbe
push
jg
lock
test
pop
sbb
inc
mov
(bad)
push
lea
dec
or
pop
cmp
xchg
cmp
cmps
cmpps
pop
jp
cmp
xlat
(bad)
fcomip
dec
cmp
mov
imul
push
jge
jmp
(bad)
(bad)
jg
and
mov
and
sub
ins
sub
cmovno
cmps
adc
rol
popa
pop
adc
jo
sti
mov
xor
gs
loope
and
popf
xor
aam
cmp
ja
(bad)
sbb
(bad)
(bad)
dec
or
cmp
shl
fld
and
xlat
jb
and
dec
jns
out
in
inc
push
xchg
or
(bad)
(bad)
(bad)
dec
mov
cmc
cmp
xchg
xlat
ins
out
push
test
jecxz
(bad)
(bad)
dec
seta
popf
sbb
popa
cwde
iret
iret
mov
enter
sub
push
(bad)
call
add
cmp
mov
and
jp
sub
(bad)
(bad)
(bad)
(bad)
cmp
int
fldcw
mov
div
idiv
ja
sbb
xchg
adc
sar
and
mov
jp
inc
jp
aad
mov
cmovp
pop
jg
and
(bad)
(bad)
(bad)
jg
and
icebp
loopne
popa
cmp
cmp
hlt
fcomp
shl
fmulp
mov
popf
jae
hlt
mov
ret
push
dec
dec
jo
jae
or
push
mov
mov
jle
cmp
loopne
mov
(bad)
ret
shl
les
add
je
ss
(bad)
(bad)
(bad)
call
fcmove
(bad)
ret
mov
clc
adc
cmp
xor
or
cwde
ins
je
(bad)
(bad)
push
dec
cmps
jnp
lahf
iret
call
out
fidiv
leave
push
sbb
int3
or
inc
sbb
cmps
lods
fdiv
imul
cs
cmp
repnz
jb
shr
add
call
mov
jae
into
mov
xor
stos
shl
cld
fcomip
mov
xchg
int
fiadd
(bad)
(bad)
jmp
lock
sbb
cwde
and
daa
and
dec
pop
repnz
je
lods
pop
clc
scas
test
mov
xchg
call
sti
xor
xchg
xchg
dec
push
ret
retf
xchg
dec
mov
dec
(bad)
(bad)
jg
jmp
inc
push
enter
sahf
dec
and
sbb
and
out
jmp
inc
sub
cmp
cmp
movs
sub
xor
lock
int3
adc
mov
in
xor
mov
xchg
not
mov
mov
lahf
out
jle
fld
dec
xor
cmp
cs
jmp
jo
cmps
mov
movs
enter
pop
jae
mov
or
(bad)
(bad)
(bad)
dec
sbb
push
cmps
test
int3
mov
ret
hlt
adc
mov
sti
lods
inc
das
(bad)
(bad)
(bad)
call
fs
cwde
gs
bound
mov
pop
shl
inc
vmovaps
inc
call
jmp
ret
aad
jb
sub
xor
mov
lods
push
arpl
mov
push
pop
out
add
movs
js
push
(bad)
jmp
les
(bad)
(bad)
(bad)
inc
test
inc
push
cmp
cmp
adc
xor
clc
ja
cmc
(bad)
rol
dec
dec
add
push
hlt
push
jmp
sub
(bad)
(bad)
mov
aas
(bad)
push
dec
retf
pop
retf
push
mov
cmp
mov
sub
(bad)
(bad)
(bad)
(bad)
jl
mov
scas
mov
cdq
repnz
and
pop
xchg
scas
push
sbb
push
mov
inc
call
in
push
cld
jne
inc
jmp
mov
and
mov
(bad)
(bad)
(bad)
jmp
aad
leave
sub
les
cdq
sahf
and
xor
dec
stos
or
xor
ret
ret
aam
out
addr16
sbb
mov
(bad)
jmp
jp
add
lods
pop
dec
ja
popf
fsub
pop
scas
lds
shl
push
(bad)
(bad)
(bad)
inc
jae
js
xchg
lods
xor
icebp
cmps
pop
ja
sub
add
js
fnsave
inc
(bad)
(bad)
(bad)
(bad)
cmp
scas
std
sbb
xchg
in
js
dec
je
cli
std
fst
sub
add
jp
(bad)
(bad)
stc
inc
pop
(bad)
lahf
es
sbb
dec
cmps
cli
xor
lods
or
jmp
scas
(bad)
and
aam
test
idiv
movs
sbb
mov
fwait
sub
push
cld
call
cmp
mov
loope
sbb
shl
out
(bad)
lods
push
loopne
scas
cli
(bad)
call
fld
mov
mov
fucomip
jmp
(bad)
fstp
pushf
mov
(bad)
(bad)
(bad)
jge
sti
ja
xor
sub
push
xchg
ins
dec
scas
add
arpl
(bad)
jne
xchg
cmp
test
(bad)
(bad)
cmp
repz
in
inc
pop
or
xchg
push
pusha
pcmpeqw
lock
push
fidiv
out
lods
and
sbb
dec
std
outs
fcomip
jmp
fbstp
test
scas
dec
std
mov
(bad)
call
mov
push
xchg
jmp
repz
ins
into
jp
jge
in
jmp
(bad)
dec
pop
arpl
sbb
jge
scas
call
pop
int
repz
test
pop
or
call
pop
adc
sub
jmp
or
xlat
(bad)
dec
adc
push
idiv
cmps
fist
sub
ret
(bad)
(bad)
(bad)
jg
or
jnp
shl
popa
dec
add
enter
icebp
repz
jge
movs
test
cmp
pop
pop
hlt
(bad)
call
xor
pop
fld
aas
cs
call
mov
in
adc
(bad)
(bad)
inc
cmp
or
jno
mov
js
nop
std
aam
and
add
lock
ins
cmp
xor
or
repz
mov
add
push
mov
(bad)
push
push
(bad)
(bad)
in
aas
sbb
std
faddp
jle
adc
sahf
cmp
clc
inc
aam
(bad)
(bad)
(bad)
cld
int3
aaa
icebp
pop
mov
adc
xor
hlt
in
and
aad
ret
push
push
xchg
push
neg
cmc
(bad)
(bad)
push
ins
inc
add
add
mov
mov
jne
lods
mov
mov
xor
cmp
outs
or
and
dec
idiv
(bad)
(bad)
call
sahf
mov
push
sahf
jl
(bad)
adc
leave
test
push
add
jecxz
outs
fld
(bad)
(bad)
mov
and
das
cmps
fs
jge
mov
sbb
cmp
(bad)
(bad)
(bad)
call
sbb
test
ja
jp
leave
out
cmc
imul
(bad)
(bad)
repz
inc
popa
cs
push
loopne
(bad)
jnp
test
fwait
call
xor
or
(bad)
daa
push
(bad)
jg
ficom
and
and
ficomp
int
mov
pushf
lahf
call
adc
or
loope
sbb
loope
sbb
pushw
(bad)
mov
jg
cmp
loop
outs
cmp
and
cmp
pop
xor
popa
cdq
jmp
pushf
inc
(bad)
(bad)
(bad)
call
fisubr
test
loope
push
clc
loope
cli
cwde
cs
fs
fimul
cmps
xchg
sbb
or
(bad)
lock
dec
xor
(bad)
(bad)
(bad)
push
xchg
xchg
xchg
or
mov
iret
pop
and
bound
dec
xchg
push
xor
sar
add
ffree
test
test
adc
ret
mov
cld
jmp
shl
into
shr
dec
test
jnp
bnd
lock
sub
test
(bad)
je
dec
xlat
(bad)
call
jg
or
lods
inc
sbb
push
aas
cmp
sbb
loop
hlt
lods
jg
(bad)
(bad)
fstp
ret
popf
cdq
xchg
nop
pushf
fwait
xchg
mov
cdq
xchg
mov
add
es
jp
xor
adc
and
xor
push
xchg
sub
je
dec
call
push
movs
test
or
sbb
jno
mov
(bad)
cdq
shl
int3
xchg
addr16
ss
test
lahf
xor
aam
cld
(bad)
call
cmp
jmp
inc
and
icebp
in
out
sub
xchg
(bad)
(bad)
call
out
shl
dec
fidiv
in
scas
dec
dec
cmp
popa
sub
push
sub
and
bound
(bad)
call
sbb
enter
stc
sub
dec
jmp
xchg
pop
rcr
sub
push
icebp
and
push
dec
cwde
stos
xor
xchg
int
adc
push
jl
push
push
call
mov
cli
idiv
sti
lods
xchg
xor
xchg
fs
inc
inc
inc
inc
push
paddsw
lds
sbb
iret
xchg
repz
fs
inc
mov
jbe
xor
lods
mov
push
mov
mov
(bad)
or
and
or
xor
(bad)
(bad)
(bad)
jle
pop
xlat
sub
jg
cmp
enter
dec
and
test
or
push
mov
arpl
(bad)
(bad)
(bad)
call
mov
mov
or
mov
sbb
ror
adc
(bad)
(bad)
jmp
mov
jb
and
pop
in
aas
imul
push
push
mov
(bad)
jmp
dec
pop
leave
test
sub
adc
jb
xchg
lahf
push
push
sbb
fist
dec
push
cmps
jg
out
clc
inc
mov
mov
xchg
aam
js
out
ss
pusha
cld
inc
mov
(bad)
sbb
call
stc
adc
mov
xchg
inc
dec
stos
dec
adc
lods
test
call
ds
push
dec
pop
mov
stos
dec
(bad)
(bad)
(bad)
inc
icebp
ret
xchg
pop
fdiv
test
mov
and
in
push
lds
jb
(bad)
jg
push
mov
dec
mov
out
retf
in
ja
sub
dec
loope
fnsave
aaa
rol
shl
pop
sub
loop
(bad)
dec
test
rol
push
sar
aas
inc
rcr
leave
jmp
jne
jp
(bad)
(bad)
(bad)
fist
nop
mov
(bad)
xor
mov
shl
pop
daa
mov
outs
leave
sub
(bad)
(bad)
push
scas
test
jo
pop
and
mov
xchg
aam
lock
xchg
(bad)
(bad)
push
dec
xlat
mov
pop
test
mov
mov
(bad)
mov
scas
(bad)
(bad)
(bad)
call
cmp
inc
sbb
scas
pop
dec
xor
jno
fdivr
cld
fidiv
repnz
(bad)
(bad)
(bad)
call
pop
test
leave
sub
sub
cdq
mov
xor
or
(bad)
(bad)
jmp
sbb
inc
push
push
inc
sub
adc
ins
mov
(bad)
lds
xchg
(bad)
dec
jae
or
inc
xchg
xor
cmc
dec
fwait
(bad)
call
std
xor
xchg
aaa
mov
sub
add
ins
outs
lods
or
int3
mov
les
pushf
dec
fisubr
push
mov
jmp
or
sbb
adc
push
pop
adc
cmps
and
fsubr
pop
sbb
ins
mov
fwait
jmp
movs
test
nop
inc
jp
(bad)
mov
fld
mov
cdq
(bad)
in
lahf
push
dec
push
scas
es
jmp
(bad)
dec
dec
in
xchg
(bad)
xchg
pop
xor
fucomi
clc
jp
mov
cmp
mov
jne
xor
mov
pop
xchg
xchg
out
mov
adc
mov
in
dec
inc
or
sub
sbb
movs
adc
fidivr
movs
inc
loopne
jb
and
dec
and
push
adc
inc
stc
mov
and
dec
push
es
and
sub
cld
(bad)
cld
or
mov
sahf
add
sbb
adc
in
ds
sar
(bad)
jmp
xor
fs
dec
(bad)
bound
adc
inc
sub
imul
inc
mov
outs
mov
dec
ins
or
jb
pop
push
ins
pop
test
or
pop
xor
mov
shr
inc
outs
dec
nop
cdq
pop
xchg
xchg
xchg
sbb
hlt
dec
dec
push
push
(bad)
xchg
mov
mov
in
ret
icebp
jg
call
arpl
dec
dec
push
popa
inc
or
mov
mov
and
mov
pop
push
mov
test
push
dec
in
push
imul
stos
inc
(bad)
(bad)
(bad)
jmp
(bad)
xor
pop
dec
aam
inc
cmc
push
clc
not
aas
sbb
ja
shl
hlt
mov
(bad)
(bad)
(bad)
fdivr
(bad)
cmp
test
xchg
push
inc
inc
jb
adc
xchg
pop
pop
push
(bad)
jmp
aad
xchg
mov
and
leave
repnz
pop
es
inc
mov
pop
dec
loop
push
fst
pop
mov
add
jmp
xchg
or
cmp
inc
jmp
cmp
sub
repnz
(bad)
(bad)
(bad)
call
ins
fbstp
sti
push
call
mov
sub
jge
mov
jecxz
(bad)
(bad)
(bad)
mov
loopne
dec
mov
adc
sub
fimul
aam
out
(bad)
call
add
cmc
js
(bad)
cmp
xchg
ss
xchg
cmp
scas
mov
jg
xchg
sub
xor
xchg
fcomp
(bad)
pop
push
or
xchg
sar
(bad)
(bad)
jmp
shl
test
shr
std
push
nop
xchg
jg
cwde
mov
cmp
push
dec
dec
push
movs
lods
inc
and
movs
sub
sub
xchg
aam
add
imul
(bad)
jmp
add
lea
inc
mov
shl
cmp
cmp
call
mov
stos
push
xchg
mov
xor
(bad)
(bad)
call
shl
scas
imul
adc
out
cdq
lahf
inc
pop
rcr
repz
(bad)
(bad)
out
clc
cmp
jb
mov
sub
push
cmps
mov
jbe
(bad)
mov
inc
(bad)
(bad)
(bad)
(bad)
mov
movs
mov
or
sbb
aam
stos
idiv
xor
(bad)
jle
ja
iret
jns
in
out
sti
(bad)
dec
sbb
and
inc
mov
jmp
adc
retf
sub
stos
push
popf
data16
cs
mov
or
jmp
add
mov
in
jbe
jmp
retf
leave
mov
dec
mov
movs
xchg
retf
push
fstp
jle
data16
push
lock
scas
jg
dec
(bad)
push
(bad)
(bad)
mov
movs
add
cmp
or
(bad)
outs
(bad)
mov
test
ds
(bad)
(bad)
(bad)
(bad)
cmp
sub
inc
push
popf
test
je
rol
mov
dec
xor
icebp
adc
(bad)
dec
gs
jmp
push
in
fbstp
jg
jns
mov
ja
pop
and
mov
jle
(bad)
(bad)
jg
std
mov
aaa
lods
sub
sub
leave
(bad)
mov
mov
xor
test
ret
(bad)
(bad)
jmp
cwde
mov
or
out
pushf
lahf
pop
mov
push
rcl
ss
(bad)
(bad)
jg
sbb
out
pop
xchg
movs
je
inc
add
lods
pop
ja
jo
jmp
push
mov
xchg
shr
xchg
add
test
cmp
(bad)
(bad)
inc
(bad)
add
jns
ret
hlt
lods
push
or
inc
pop
loopne
call
imul
out
push
movs
nop
fst
or
xor
push
std
inc
fnstsw
daa
xor
cmps
dec
sbb
(bad)
fld
or
clc
lds
inc
add
or
enter
cmp
test
xor
pop
rol
mov
and
daa
inc
sbb
push
inc
je
(bad)
(bad)
call
sub
sub
pop
dec
inc
mov
adc
dec
push
test
call
mov
push
repnz
push
pop
(bad)
fwait
mov
inc
ret
(bad)
(bad)
call
cdq
adc
or
adc
data16
int3
es
iret
call
xchg
(bad)
(bad)
(bad)
inc
cmps
fldcw
retf
aaa
stos
ja
fild
out
mov
dec
cdq
jmp
ja
das
add
sub
jno
inc
push
or
lds
(bad)
pop
movs
int3
les
(bad)
inc
inc
retf
mov
lock
mov
mov
xchg
call
clc
dec
je
lock
cld
xor
mov
(bad)
dec
inc
inc
(bad)
jp
push
dec
sbb
dec
pop
ins
cmp
call
pop
add
xor
xchg
and
and
ffree
xchg
fxch
mov
(bad)
dec
call
hlt
adc
je
shl
outs
cdq
mov
push
or
jmp
jae
movs
es
sub
xchg
lds
pop
pushf
dec
mov
(bad)
jmp
dec
push
and
int3
sbb
jmp
push
or
stc
pop
repz
imul
clc
add
pop
mov
mov
adc
cmp
test
(bad)
push
push
aam
gs
sbb
sbb
mov
cmp
lods
push
dec
xor
jmp
lds
loop
and
mov
call
sub
and
push
sub
xor
lods
sub
pop
jmp
pop
fwait
(bad)
fst
nop
mov
push
jmp
mov
rcl
dec
ds
or
dec
xchg
xor
call
jle
jmp
push
sbb
mov
dec
push
push
xchg
daa
push
in
push
push
(bad)
(bad)
(bad)
call
adc
xchg
sub
and
pop
jbe
jmp
or
mov
repz
xchg
fimul
push
das
xor
cmp
cmp
ss
xchg
sub
mov
add
pop
mov
mov
les
sub
scas
pop
or
pop
hlt
dec
adc
dec
sub
cs
cmp
cmp
call
loopne
push
cmp
sbb
push
int
(bad)
call
(bad)
(bad)
push
out
mov
lahf
mov
das
mov
jnp
jmp
push
mov
in
dec
lock
dec
aad
mov
clc
push
add
push
(bad)
pop
(bad)
(bad)
out
out
fiadd
and
push
sbb
xchg
adc
add
(bad)
call
ds
inc
repz
aaa
xchg
outs
sbb
ret
or
(bad)
(bad)
(bad)
cmp
xchg
dec
push
inc
lea
test
adc
pop
in
or
jle
fs
clc
je
fwait
push
pushf
fdivr
jbe
test
add
(bad)
call
sbb
xchg
dec
dec
pop
lock
pop
call
int3
in
outs
add
call
ins
pop
cdq
and
inc
xlat
xchg
in
mov
jl
fnstcw
jb
sub
(bad)
dec
push
cs
andps
test
and
mov
inc
jmp
dec
inc
clc
sti
loop
(bad)
inc
xor
cwde
mul
sbb
movntps
aam
mov
cli
clc
pop
hlt
call
add
out
in
xchg
cld
or
jo
push
or
(bad)
(bad)
inc
mov
ret
sbb
add
pop
push
repz
ret
(bad)
(bad)
(bad)
inc
out
inc
sar
xchg
data16
stc
(bad)
sbb
ins
test
les
xor
jmp
imul
ror
cmps
outs
dec
adc
rcr
hlt
fdivrp
(bad)
jmp
ins
mov
fisttp
push
(bad)
sub
inc
gs
sub
fadd
fnstsw
arpl
aam
mov
and
jae
lock
ss
push
out
rcr
mov
mov
cmp
push
push
lods
or
mov
cmp
das
clc
(bad)
push
mov
cmp
xor
and
jo
push
fwait
push
cmp
(bad)
(bad)
call
sbb
in
jno
push
lods
inc
mov
sbb
movs
inc
lods
adc
sub
mov
inc
adc
(bad)
cmp
cmps
(bad)
dec
scas
mov
mov
(bad)
mov
retf
push
(bad)
(bad)
(bad)
jmp
pop
inc
jge
push
rcr
test
int
inc
in
sar
cld
sub
pop
mov
pop
(bad)
in
(bad)
(bad)
mov
xor
push
in
shr
sar
jge
(bad)
nop
int3
xchg
push
std
push
cmp
inc
test
cmp
cmp
test
fwait
mov
cmps
jmp
sbb
push
push
mov
ror
pop
adc
xchg
xor
sbb
call
add
adc
(bad)
cmps
cmps
sbb
dec
loop
int3
mov
stos
(bad)
(bad)
(bad)
push
push
std
imul
icebp
ret
icebp
adc
clc
(bad)
sbb
adc
adc
mov
iret
adc
enter
mov
inc
sub
and
xor
(bad)
call
sub
in
pop
aas
ins
bound
xor
pop
xor
or
and
(bad)
(bad)
dec
jb
popf
ds
sahf
push
inc
add
add
repz
cdq
repnz
adc
inc
jmp
(bad)
jmp
mov
pop
retf
adc
ret
mov
call
pop
sahf
lods
fidiv
(bad)
(bad)
push
pushf
jge
mov
or
pushf
sti
add
sar
nop
sub
pop
repz
scas
test
jmp
push
jle
repnz
add
cmc
jp
push
popf
(bad)
pop
sbb
dec
cmp
(bad)
xlat
out
xor
fmul
dec
jnp
pop
cmp
ret
(bad)
(bad)
(bad)
jmp
aaa
mov
pop
cld
fwait
mov
(bad)
jmp
mov
ret
adc
call
jmp
mov
mov
jecxz
lock
inc
adc
les
pop
fistp
mov
dec
(bad)
jbe
add
popa
(bad)
adc
adc
sar
jmp
cmp
out
outs
mov
rcl
adc
mov
jmp
mov
(bad)
push
test
ins
cmp
fbld
fadd
ss
stos
sbb
(bad)
(bad)
(bad)
call
mov
sbb
jae
daa
mov
xchg
jne
sub
push
(bad)
scas
sbb
adc
xor
(bad)
(bad)
inc
scas
mov
aad
shl
cmps
dec
adc
jae
test
push
push
jle
adc
dec
xor
fcomip
inc
ret
les
sub
push
mov
js
(bad)
xor
sub
push
xchg
mov
enter
movs
cli
mov
add
adc
mov
cdq
xchg
scas
mov
jo
(bad)
(bad)
(bad)
fidivr
in
out
jg
mov
mov
sub
stc
mov
retf
xchg
outs
clc
(bad)
inc
daa
sub
and
call
add
cmp
js
(bad)
(bad)
dec
nop
mov
nop
ins
jmp
dec
in
cmc
sub
dec
hlt
cmps
test
xchg
and
call
add
test
out
bound
cmps
lock
(bad)
mov
mov
push
dec
inc
mov
popf
jmp
jo
bound
and
rol
out
(bad)
mov
and
inc
jecxz
xchg
jno
or
hlt
inc
dec
mov
clc
jmp
xchg
mov
stos
(bad)
call
xchg
dec
stos
xor
ret
xor
pusha
dec
pop
mov
jmp
push
gs
or
push
dec
pusha
sbb
shl
inc
add
(bad)
(bad)
(bad)
dec
hlt
test
cmps
int3
int3
sti
jb
ja
cmps
shl
mov
xchg
pop
pop
ret
fs
(bad)
(bad)
(bad)
(bad)
dec
shr
mov
aam
lea
(bad)
xchg
rcr
arpl
into
add
cmps
fisttp
or
push
fsubr
mov
push
push
push
mov
icebp
mov
lock
xor
cmp
out
jge
(bad)
(bad)
jmp
sahf
sti
push
xor
in
iret
and
lods
fisttp
sbb
ins
(bad)
(bad)
out
cli
sub
xor
scas
cs
sub
pop
call
test
cld
call
pushf
mov
pop
cdq
jne
sbb
call
dec
call
clc
push
cmp
inc
test
aas
data16
sub
mov
aaa
std
jmp
push
adc
mov
pop
push
or
fisttp
jge
push
(bad)
(bad)
(bad)
call
loope
or
pop
xor
cmp
dec
jle
std
cmp
in
jg
mov
ja
push
je
test
scas
jge
jmp
dec
mov
je
inc
push
xchg
(bad)
call
inc
adc
xlat
jno
xor
out
movs
movs
cmp
xchg
es
ds
add
call
push
rol
mov
aam
adc
adc
ins
aad
(bad)
call
adc
xlat
ins
mov
cmp
adc
xor
js
das
and
jnp
adc
or
clc
(bad)
jge
fcomp
jl
mov
ja
lea
mov
(bad)
jmp
mov
push
push
push
mov
in
and
add
adc
popa
inc
dec
push
mov
(bad)
(bad)
call
xchg
stos
imul
cmp
mov
and
mov
jle
ins
push
jmp
in
cmp
jl
clc
stc
retf
ja
xchg
cmp
cmp
scas
lahf
cmp
xchg
lahf
pop
daa
(bad)
cmps
pop
mov
sub
retf
mov
mov
ds
ja
imul
neg
push
iret
mov
repz
je
aas
or
clc
cmp
fwait
push
push
retf
xchg
jae
fidiv
imul
pop
jg
outs
add
jb
xor
je
mov
divps
out
cli
call
test
cmc
scas
jp
or
mov
sub
pop
pop
mov
(bad)
(bad)
js
pop
test
sub
xor
in
clc
cmps
cli
(bad)
(bad)
call
ret
iret
mov
mov
sub
sbb
and
lods
sbb
stos
inc
loop
shr
sub
mov
ret
or
ret
push
jae
call
push
lock
mov
dec
inc
adc
dec
(bad)
inc
push
pusha
(bad)
lea
adc
cmp
(bad)
cdq
xchg
mov
int
or
mov
adc
pop
mov
mov
dec
dec
(bad)
jg
inc
rcl
dec
mov
adc
js
sub
(bad)
and
test
fwait
rcr
or
(bad)
(bad)
jmp
fdivr
mov
div
(bad)
jg
adc
movs
fidivr
shl
push
arpl
stc
jecxz
push
(bad)
(bad)
(bad)
jmp
jg
fnstcw
pop
pop
mov
fidivr
test
xchg
repz
xchg
pop
mov
je
fdivr
inc
aaa
sub
arpl
mov
sub
in
lea
dec
cmps
loopne
xor
(bad)
(bad)
(bad)
dec
mov
lods
fild
jmp
jmp
pushf
inc
repz
jl
(bad)
stos
popa
add
push
out
xchg
jle
clc
ficomp
add
(bad)
jmp
sub
ins
mov
popf
xchg
cld
and
xor
dec
mov
dec
pop
xor
pop
ja
pop
cmp
sbb
adc
ss
xor
push
mov
lds
mov
push
xchg
sub
imul
test
daa
add
(bad)
imul
(bad)
(bad)
(bad)
call
push
lods
xchg
pop
shl
pop
and
(bad)
sub
cmp
push
(bad)
jmp
cli
pop
fisttp
lds
jns
xor
xlat
ret
fdivp
idiv
(bad)
(bad)
(bad)
stc
repnz
ds
loopne
in
into
(bad)
cmp
int
mov
loope
fs
(bad)
jg
pop
push
xchg
xor
mov
std
sti
aaa
jle
sub
jg
push
outs
repz
pop
rcl
(bad)
std
dec
outs
fcom
lods
lods
mov
mov
inc
xor
ret
cmp
and
pop
add
cmp
fstp
(bad)
fld
rcr
xchg
cdq
xor
push
xor
test
push
adc
mov
(bad)
(bad)
(bad)
inc
dec
fidivr
pop
add
jle
ret
pop
mov
or
loope
and
js
and
(bad)
(bad)
(bad)
call
loop
sub
int
mov
cmp
xchg
ret
neg
sub
sub
(bad)
(bad)
dec
mov
(bad)
fldenv
fld
xchg
je
dec
dec
call
adc
sahf
mov
iret
xlat
and
(bad)
(bad)
dec
out
pop
idiv
pop
mov
jne
imul
mov
mov
adc
(bad)
(bad)
mov
cmp
push
sbb
adc
jge
push
sub
inc
lock
mov
daa
in
cmps
dec
mov
jbe
xchg
jl
or
(bad)
push
cmps
jle
loop
and
pop
pop
gs
ss
mov
pushf
push
dec
and
push
imul
and
jp
sbb
xchg
xchg
call
std
lds
inc
shrd
push
jge
bound
sbb
daa
test
and
mov
push
scas
shl
cli
dec
adc
xchg
pop
gs
pop
push
(bad)
(bad)
(bad)
push
pop
mov
xor
(bad)
cdq
jo
cmp
sub
fwait
ss
fcom
jbe
(bad)
(bad)
(bad)
call
fwait
jp
pop
sub
dec
xchg
mov
ja
mov
fist
xchg
outs
fsubr
sub
(bad)
dec
enter
or
(bad)
sub
mov
mov
sub
(bad)
cmp
sbb
jo
dec
(bad)
call
(bad)
(bad)
mov
lods
mov
push
jns
imul
jbe
adc
popa
sub
cmp
jae
sbb
or
popa
fisttp
cmp
fbstp
and
push
sub
pop
in
mov
(bad)
call
movs
cmps
bound
pusha
dec
fmul
dec
fucomip
cmp
adc
movs
pop
iretw
mov
adc
(bad)
mov
mov
xchg
cmp
pusha
pop
xchg
dec
dec
add
pusha
pushf
mov
adc
(bad)
(bad)
fisttp
aas
ins
mov
sbb
stc
popa
pushf
je
cmp
ds
jle
(bad)
(bad)
push
sub
xchg
imul
jns
cmp
jns
xor
popf
loopne
fcomip
(bad)
push
xchg
les
or
sub
pushf
sbb
call
inc
cmp
popa
dec
sub
mov
stos
outs
or
(bad)
(bad)
call
fisttp
dec
xchg
shr
stos
arpl
fstp
mov
inc
je
cmp
(bad)
fcomip
mov
pop
ins
push
push
push
pop
je
loopne
jns
int3
xor
add
mov
cli
shl
sar
out
mov
push
and
fwait
(bad)
jae
push
repnz
(bad)
(bad)
fldenv
cmp
mov
push
or
stc
sbb
jecxz
pop
and
inc
call
adc
(bad)
aad
fst
ss
dec
call
in
push
xchg
jle
ja
inc
ficomp
out
fisttp
aad
in
sbb
enter
mov
in
mov
(bad)
push
jb
xchg
in
cwde
out
push
mov
xor
aaa
test
(bad)
sbb
(bad)
jmp
and
inc
or
or
sbb
xchg
test
rcr
jp
push
jmp
das
adc
xor
pop
cmp
jno
dec
xor
push
xor
pop
(bad)
(bad)
(bad)
dec
ret
mov
jg
icebp
shl
pmullw
outs
jne
icebp
pushf
mov
push
outs
mov
mov
push
adc
aam
repnz
fwait
(bad)
lahf
xchg
in
mov
cld
xchg
lock
loope
(bad)
jg
and
cmp
repnz
jge
and
repnz
push
mov
(bad)
(bad)
(bad)
fild
or
jns
mov
mov
ins
fnstenv
mov
shl
(bad)
(bad)
(bad)
cmp
ss
adc
pop
sub
sbb
adc
int3
sti
inc
loopne
mov
mov
out
sub
and
ins
jnp
mov
cs
rol
cmp
nop
js
push
loop
out
outs
cld
xor
pop
cld
mov
sahf
inc
loop
pop
js
int
mov
pushf
popa
mov
mov
sbb
sar
idiv
jmp
adc
scas
jnp
ret
fidivr
push
inc
pop
(bad)
jmp
lahf
inc
mov
dec
xchg
retf
dec
jo
xchg
inc
adc
inc
push
sub
jmp
fdivr
push
sub
rcr
jge
cmp
push
push
mov
sub
(bad)
push
xlat
fninit
outs
fstp
push
sbb
aad
dec
mul
jp
(bad)
inc
test
and
inc
(bad)
dec
imul
retf
stos
xor
int3
arpl
js
mov
mov
mov
test
fld
dec
outs
pop
sub
jmp
inc
add
(bad)
(bad)
inc
adc
mov
add
sub
bound
push
movs
movs
inc
add
mov
(bad)
mov
and
mov
inc
fstp
mov
jns
pop
mov
(bad)
dec
adc
sub
es
mov
jno
xchg
out
mov
dec
gs
dec
dec
into
sbb
das
xchg
test
push
jns
sti
adc
in
or
gs
xchg
addr16
mov
or
mov
inc
fs
daa
adc
out
ficom
mov
cmp
imul
dec
xchg
push
les
mov
cs
inc
or
pushf
xchg
movs
mov
repnz
sbb
icebp
inc
sbb
sbb
and
int3
inc
xor
adc
xor
mov
pop
push
out
add
(bad)
adc
pop
jno
sub
pop
mov
(bad)
jg
out
dec
push
jbe
into
dec
in
int3
movs
fld
xor
das
jp
(bad)
(bad)
inc
sbb
mov
outs
es
cwde
fwait
dec
sub
jmp
inc
sub
stos
outs
jp
std
(bad)
push
lods
or
dec
and
sahf
stos
jb
push
ds
push
mov
(bad)
call
mov
iret
popa
das
icebp
out
icebp
mov
ja
or
fmul
(bad)
dec
sub
(bad)
dec
pop
repz
les
repnz
cmp
dec
ja
push
jp
xchg
jg
(bad)
inc
in
xor
inc
xor
ss
int3
retf
inc
dec
mov
(bad)
(bad)
out
or
push
fld
dec
out
inc
rcl
and
push
jmp
mov
jmp
ja
imul
ja
addr16
mov
xchg
gs
lds
xchg
jb
pop
and
das
push
push
lds
fs
stos
xchg
xchg
mov
(bad)
inc
sub
repz
sti
loope
rol
out
(bad)
(bad)
push
outs
jmp
and
sbb
inc
mov
scas
sub
adc
(bad)
mov
retf
(bad)
mov
or
push
mov
cmps
js
dec
mov
movs
call
mov
(bad)
jmp
cmps
iret
xor
xchg
push
adc
or
(bad)
jmp
sbb
inc
in
inc
jne
push
and
movs
dec
xchg
cmp
(bad)
dec
mov
mov
push
and
ficomp
pusha
out
dec
icebp
mov
mov
call
hlt
mov
pop
mov
jecxz
dec
add
repnz
cmp
frstor
push
ficomp
dec
fstp
lods
pop
mov
jg
jne
sub
inc
xchg
mov
cld
inc
shl
lods
sub
mov
xor
mov
call
fwait
sahf
and
pop
xchg
and
pop
fs
(bad)
(bad)
mov
pushf
test
lods
int
push
jl
aaa
jp
add
ror
jmp
mov
push
je
cwde
and
adc
(bad)
call
adc
jge
add
(bad)
outs
dec
lds
jo
mov
(bad)
(bad)
jmp
xor
pop
iret
arpl
mov
fwait
cdq
loop
das
ret
ins
pushf
in
mov
fdivr
pop
jmp
clc
jmp
xchg
inc
add
cmp
cmps
retf
(bad)
(bad)
push
mov
addr16
cmps
das
call
retf
cli
add
mov
push
(bad)
call
push
push
jecxz
icebp
shr
sbb
mov
fs
mov
(bad)
(bad)
(bad)
(bad)
cmp
and
push
in
fs
push
mov
(bad)
and
mov
in
and
cli
bound
popa
cli
scas
jbe
repz
cmp
fs
call
(bad)
(bad)
(bad)
push
cmps
and
and
adc
icebp
xchg
add
dec
sub
imul
xchg
cmps
fcmovbe
in
pop
call
jmp
push
or
scas
add
sti
jl
and
shl
sbb
scas
clc
push
retf
push
cmps
pop
cwde
push
test
(bad)
push
cmp
movs
mov
imul
rcl
test
and
sbb
sar
mov
in
or
iret
dec
in
mov
(bad)
mov
das
pop
js
pop
(bad)
(bad)
call
sub
pop
imul
xchg
or
jno
(bad)
jg
ja
cmp
xor
ja
call
jno
pusha
aaa
mov
clc
out
sti
dec
pop
pop
and
cmp
ja
dec
scas
cmp
push
jo
(bad)
mov
mov
sub
aad
mov
jl
xor
(bad)
jmp
lds
push
sbb
cmp
ss
pop
xchg
sahf
mov
ja
(bad)
jg
and
sbb
push
call
lods
push
adc
jmp
jmp
add
inc
push
push
arpl
sahf
push
mov
ins
add
push
sub
in
cmc
inc
pop
fld
and
sub
stos
nop
xchg
and
jbe
push
(bad)
jg
(bad)
int3
jne
mov
daa
inc
int3
mov
(bad)
aaa
scas
sub
lods
(bad)
arpl
adc
(bad)
push
xlat
add
dec
sub
movs
push
xor
or
movs
and
jbe
call
cmp
out
push
imul
movs
mov
sbb
cwde
ret
add
cwde
(bad)
(bad)
(bad)
call
sub
xchg
sbb
ret
lds
aaa
movs
fisubr
xor
test
cli
and
cli
scas
mov
cwde
(bad)
(bad)
(bad)
call
and
and
gs
push
inc
adc
push
pusha
sub
mov
(bad)
(bad)
(bad)
jmp
fcom
mov
xchg
xchg
mov
push
mov
je
xor
or
mov
sub
and
hlt
lea
dec
dec
stos
sbb
mov
cdq
mov
jno
(bad)
(bad)
(bad)
(bad)
jmp
daa
mov
mov
push
sub
push
leave
lock
push
cmp
retf
cwde
(bad)
(bad)
(bad)
(bad)
cli
sub
jle
sbb
call
lods
sub
jl
pop
jne
push
(bad)
(bad)
(bad)
push
xor
mov
(bad)
lock
add
movs
and
jnp
xchg
jg
adc
call
mov
push
stc
cmp
push
mov
xchg
orps
fcmovb
mov
cmps
cmp
mov
pusha
ret
push
sub
mov
push
or
stc
adc
imul
pop
stos
in
add
lods
test
mov
and
cwde
movs
mov
adc
nop
(bad)
cwde
xchg
push
movs
and
in
push
xchg
mov
ret
add
frstor
push
and
adc
(bad)
cmps
stos
bsf
lds
call
call
retf
sar
push
aaa
cmp
xchg
fsub
inc
xchg
test
mov
out
mov
(bad)
call
sbb
pop
lods
pop
call
push
push
in
out
push
sbb
(bad)
call
pop
add
movs
fcomip
jae
pop
ja
arpl
jno
sub
in
(bad)
call
add
cmps
and
mov
dec
mov
push
add
push
loopne
(bad)
(bad)
(bad)
(bad)
fidivr
imul
ret
(bad)
sbb
push
adc
dec
and
xor
(bad)
(bad)
dec
fisubr
and
push
mov
lods
sti
inc
(bad)
shr
shl
fs
mov
movs
dec
mov
fwait
xchg
push
fdivp
icebp
fnstenv
sub
xor
(bad)
(bad)
(bad)
mov
scas
fld
inc
jl
(bad)
(bad)
retf
test
sub
shl
cmps
push
(bad)
pop
sbb
(bad)
(bad)
(bad)
fstp
push
lods
(bad)
or
xchg
int3
int3
adc
stos
push
lea
push
jge
mov
es
(bad)
jg
mov
mov
cmps
inc
inc
lods
jle
xor
xor
xchg
sub
call
mov
cmp
loope
lods
fsub
ds
and
jmp
sub
jl
pop
sbb
pushf
cs
div
iret
outs
sbb
(bad)
inc
add
(bad)
(bad)
push
dec
xor
mov
mov
std
imul
cmp
test
enter
movs
clc
(bad)
(bad)
push
sbb
mov
add
dec
arpl
jb
mov
jge
jge
cmps
lock
jg
scas
sbb
and
ficom
inc
add
sahf
add
in
xchg
jg
cmc
(bad)
cmp
sub
adc
fisubr
out
jle
rol
add
and
cmp
mov
mov
pushf
dec
movs
daa
popf
ins
aam
adc
dec
push
xchg
(bad)
(bad)
(bad)
push
cmp
cld
inc
jl
int3
arpl
xchg
sbb
push
(bad)
fwait
(bad)
push
dec
mov
push
fisubr
or
sbb
stc
pop
(bad)
lods
or
(bad)
(bad)
(bad)
call
jg
(bad)
enter
in
mov
sti
loope
adc
sar
sahf
lock
cmps
mov
(bad)
(bad)
push
lahf
mov
(bad)
mov
xor
(bad)
lds
mov
jmp
stc
inc
fstp
xor
jne
repz
mov
jb
jp
(bad)
scas
mov
data16
push
jae
push
cmp
je
addr16
(bad)
fisttp
imul
ret
inc
and
in
rep
adc
xor
cs
mov
pop
sar
(bad)
jmp
pop
cmps
mul
mov
dec
mov
fmul
out
dec
jge
or
mov
jno
imul
jg
pop
dec
push
icebp
int
(bad)
jge
inc
sbb
add
add
movs
jmp
add
shl
fiadd
jg
mov
dec
and
push
test
test
(bad)
(bad)
push
mov
and
scas
push
push
icebp
cmps
ins
ss
push
cli
dec
int3
pop
cdq
mov
(bad)
call
mov
repnz
and
xor
mov
inc
mov
jne
in
call
sbb
mov
jmp
call
(bad)
(bad)
(bad)
(bad)
cmp
adc
push
pusha
jmp
cmps
ja
call
ret
inc
jnp
inc
xchg
cmp
sbb
xlat
aaa
jecxz
xor
jbe
lods
dec
sbb
xlat
cdq
call
(bad)
(bad)
sti
retf
or
xor
fisubr
or
out
xor
jb
mov
cdq
or
push
mov
push
xor
scas
add
jge
mov
enter
or
jmp
pop
mov
fcomp
repz
xchg
bound
xor
inc
jbe
sub
push
jns
jmp
(bad)
jp
cmc
xor
aad
in
adc
xor
jle
and
mov
inc
(bad)
(bad)
(bad)
jmp
nop
imul
mov
xchg
xchg
cmp
inc
rcl
popa
rol
pop
dec
into
pop
push
cld
int
mov
div
xor
jmp
sar
in
and
xchg
(bad)
sbb
mov
cmp
sbb
jp
pop
aas
(bad)
(bad)
(bad)
(bad)
mov
imul
rcr
jns
jp
add
jne
or
mov
sbb
add
dec
(bad)
(bad)
(bad)
push
gs
xchg
adc
cmps
mov
push
inc
ficomp
ss
inc
movs
mov
shl
ret
mov
(bad)
fstp
sbb
cld
and
enter
sub
mov
icebp
(bad)
jg
jb
add
(bad)
push
push
mov
pop
ins
add
cmps
out
test
mov
fistp
dec
in
push
adc
jo
cmp
imul
loope
test
add
xchg
lods
aaa
(bad)
(bad)
(bad)
call
jp
int3
sub
xchg
in
rcl
sub
lods
int
clc
inc
push
xchg
jmp
pop
(bad)
call
dec
pmulhuw
fdivr
out
sahf
adc
ror
mov
(bad)
dec
(bad)
dec
lock
lods
arpl
pop
popa
std
adc
xchg
push
cmp
(bad)
(bad)
(bad)
aas
mov
jp
inc
or
pop
and
jl
push
enter
in
fidivr
lds
mov
sbb
stos
sbb
cmp
mov
push
mov
(bad)
mov
jno
fsubr
scas
mov
xor
std
mov
lods
mov
cmp
(bad)
dec
inc
in
sbb
pop
pop
adc
imul
sti
jmp
retf
mov
gs
(bad)
sahf
mov
imul
pop
sbb
cmp
mov
jmp
call
aas
sub
dec
jecxz
xchg
add
int
jmp
mov
and
gs
popf
mov
xchg
mov
(bad)
(bad)
dec
aam
sub
mov
mov
mov
mov
or
pop
loope
cmp
dec
push
cld
dec
aad
xchg
push
sti
call
nop
jns
add
add
mov
(bad)
(bad)
(bad)
in
mov
lds
inc
fisubr
xor
and
xor
ds
(bad)
(bad)
dec
dec
push
mov
push
sub
lds
push
mov
shr
std
adc
dec
fdivp
adc
bound
xor
ja
jge
test
retf
(bad)
idiv
sub
call
or
inc
leave
into
push
ins
inc
ds
out
or
(bad)
(bad)
(bad)
mov
dec
mov
mov
je
xchg
popa
mov
xchg
dec
cmc
adc
addr16
pop
std
dec
jp
cmp
sbb
sbb
cs
add
movs
aad
aam
inc
movs
fadd
or
xor
(bad)
mov
and
aad
push
inc
arpl
mov
or
jne
cmp
inc
addr16
mov
movs
fldcw
arpl
mov
xchg
jmp
inc
rcl
(bad)
scas
jecxz
scas
jbe
jnp
mov
(bad)
(bad)
(bad)
or
or
inc
arpl
mov
cmc
repz
aam
sbb
scas
cmps
mov
adc
or
jmp
mov
out
mov
cmp
mov
mov
mov
jp
mov
fdiv
ret
xor
push
push
mov
rcr
in
fld
sar
(bad)
(bad)
inc
aas
pop
aaa
rol
enter
(bad)
call
jl
mov
pop
outs
jle
pop
out
sbb
jle
inc
xor
push
test
aaa
ja
in
add
adc
cmp
push
pop
mov
(bad)
push
pop
jne
adc
jbe
mov
dec
fisubr
adc
dec
sbb
(bad)
adc
pop
bndstx
dec
dec
sbb
pop
scas
test
call
inc
adc
rcl
les
(bad)
(bad)
fcomip
cmp
xchg
js
retf
fcmovnu
lahf
mov
inc
xor
out
push
dec
ja
loope
pop
cmc
(bad)
clc
pop
sbb
retf
xor
jecxz
xchg
movs
fidivr
in
scas
sub
mov
cmp
cli
(bad)
jmp
push
dec
in
shr
addr16
js
(bad)
(bad)
(bad)
dec
outs
mov
push
aad
outs
pop
jp
shl
and
pop
retf
mov
movs
in
in
(bad)
call
push
add
(bad)
aaa
jnp
jge
cmc
xchg
cld
add
lods
add
sbb
adc
xor
rol
stos
rcl
and
mov
mov
jge
rol
gs
inc
aaa
adc
cs
push
fisttp
push
(bad)
dec
jns
mov
or
fiadd
sbb
push
adc
(bad)
(bad)
xor
(bad)
fadd
div
pop
pop
retf
bswap
test
pop
xor
(bad)
(bad)
inc
dec
push
mov
jle
and
shr
sti
(bad)
mov
push
push
cmps
push
jl
daa
pop
xlat
mov
mov
fldenv
mov
repz
leave
dec
sbb
jge
jge
mov
dec
lds
cmp
cmp
sbb
jecxz
nop
(bad)
popf
fdivp
or
into
div
ss
dec
(bad)
(bad)
push
cmp
pop
ja
xchg
add
dec
mov
(bad)
cmp
mov
fist
fild
mov
push
cmp
test
push
sbb
sbb
ds
lods
sub
sbb
dec
push
int3
mov
inc
dec
les
pop
cmp
mov
test
sub
add
xchg
or
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
repz
cmp
pop
pop
pop
add
movs
(bad)
push
gs
scas
push
mov
out
dec
jb
(bad)
(bad)
call
push
nop
mul
jg
pop
fwait
(bad)
xchg
fistp
fidiv
jle
jns
mov
aaa
inc
(bad)
(bad)
(bad)
jmp
mov
clc
xchg
mov
adc
push
dec
mov
xchg
test
sub
sub
(bad)
(bad)
jmp
cmp
sbb
daa
mov
adc
(bad)
test
push
shl
inc
into
icebp
(bad)
(bad)
(bad)
cmp
es
and
gs
scas
pop
mov
sahf
ds
jae
cmc
std
mov
ds
(bad)
call
add
sub
std
lods
mov
pop
ja
sar
data16
jp
fcomip
(bad)
jmp
pop
into
ficom
xor
mov
cmp
out
fisub
(bad)
inc
ins
dec
or
or
and
mov
sar
jecxz
cmps
test
sub
sbb
arpl
pop
mov
jns
cwde
xchg
mov
add
(bad)
(bad)
inc
clc
jmp
xor
jne
cmps
mov
xor
jb
pop
pushf
sbb
das
or
push
pushf
xchg
je
cmp
hlt
pop
jo
jno
std
(bad)
dec
int
rol
xor
gs
sbb
inc
(bad)
jg
jmp
dec
nop
mov
dec
jo
jo
das
pusha
(bad)
xchg
imul
sbb
jl
(bad)
(bad)
(bad)
push
js
mov
sub
jnp
sub
push
sub
cmp
ja
std
loop
jno
mov
and
fwait
jmp
jb
(bad)
mov
xchg
mov
(bad)
(bad)
(bad)
call
mov
add
loopne
daa
pop
cmp
test
xchg
add
call
(bad)
call
shl
push
cwde
mov
movs
scas
sbb
mov
sbb
or
jmp
add
aam
ret
lods
push
xchg
mov
sbb
xchg
inc
mov
jg
das
scas
js
mov
mov
leave
loope
add
jl
or
(bad)
fstp
mov
ret
addr16
xchg
icebp
not
or
sub
les
(bad)
mov
push
ficomp
jp
or
out
das
or
adc
pop
loopne
jne
jl
mov
das
idiv
(bad)
jmp
xchg
inc
push
or
stc
mov
jp
adc
sub
idiv
jg
push
iret
in
ret
lahf
dec
xchg
mov
popf
xor
mov
jno
fstp
jo
(bad)
xor
push
jb
xor
pop
loopne
in
push
in
(bad)
out
jp
mov
push
inc
(bad)
ret
push
js
lods
sbb
cs
mov
cmp
inc
jns
imul
adc
push
pop
loope
jge
(bad)
mov
cmps
cld
sub
(bad)
js
loopne
(bad)
aas
fsubr
imul
(bad)
(bad)
(bad)
(bad)
(bad)
fmulp
pop
cmp
bound
xchg
and
fst
in
popf
mov
jb
rol
adc
jbe
(bad)
(bad)
jmp
sbb
(bad)
sbb
jbe
xor
mov
ja
pop
add
xor
(bad)
jmp
jb
cmp
mov
sbb
shr
adc
in
scas
sbb
ud0
(bad)
call
lds
outs
xchg
test
sbb
movs
nop
inc
loop
hlt
sbb
aas
nop
retf
call
(bad)
mov
clc
cmp
add
jo
movs
loop
fldenv
push
cld
sbb
(bad)
call
movs
mov
jb
inc
xor
jb
pop
sub
pop
aam
test
daa
fcom
retf
(bad)
inc
xchg
adc
cmp
inc
fcom
mov
aaa
xchg
push
mov
movs
xchg
mov
cmc
(bad)
fistp
dec
cmp
push
dec
cmp
xor
or
outs
call
(bad)
(bad)
in
idiv
(bad)
out
test
mov
mov
and
mov
sbb
daa
jecxz
xor
jmp
jmp
jle
lock
retf
xchg
pop
jno
(bad)
(bad)
inc
and
push
aad
mov
fbld
dec
sub
sti
ins
mov
icebp
in
mov
js
(bad)
(bad)
(bad)
in
jmp
(bad)
pop
ror
bound
arpl
sbb
push
call
cmp
stc
aas
jno
ret
push
jo
scas
fild
fcomp
jne
fcmovbe
hlt
xchg
(bad)
mov
cwde
pcmpeqd
cmp
data16
mov
inc
lock
xor
not
(bad)
jmp
add
jp
jnp
push
dec
ret
mov
pop
and
add
xchg
fild
inc
and
or
pop
hlt
iret
enter
stos
push
setg
push
rcl
(bad)
push
jnp
inc
fimul
fs
movs
sti
retf
ds
or
xchg
(bad)
(bad)
dec
clc
neg
cmp
add
movs
adc
mov
stos
dec
into
daa
ja
clc
dec
mov
fst
test
dec
mov
inc
adc
(bad)
inc
push
inc
lods
sbb
push
enter
shl
mul
fdivr
(bad)
jmp
or
pop
cmc
outs
icebp
pop
sub
cmp
push
inc
xchg
sbb
mov
(bad)
mov
into
mov
push
xor
xchg
jbe
stc
std
cld
(bad)
out
ds
(bad)
(bad)
(bad)
call
ds
sbb
xchg
xor
xchg
dec
aad
adc
les
popf
and
lock
cmp
jo
ins
jbe
and
push
add
pushf
inc
ret
out
and
call
cmp
dec
ficomp
sbb
inc
aad
fwait
movsx
mov
adc
mov
adc
imul
rol
pop
xor
dec
les
xor
repz
fild
sub
(bad)
dec
mov
pushf
inc
push
sbb
test
les
(bad)
jle
ja
fbstp
iret
movs
clc
(bad)
fcomip
cmps
std
scas
ja
xchg
in
iret
mov
scas
jp
push
cli
pop
fdivr
push
cmp
int
mov
jo
push
jp
pop
shl
push
bound
adc
iret
or
jmp
aad
lods
mov
rcr
jbe
adc
jmp
cmp
sub
call
iret
fsincos
pop
xchg
lock
(bad)
(bad)
fbld
addr16
adc
sbb
rcr
gs
mov
(bad)
fcomip
push
xor
pusha
xchg
and
mov
rol
call
(bad)
(bad)
dec
dec
push
inc
mov
xor
push
lods
adc
xchg
add
add
adc
mov
inc
jmp
aas
in
xor
cmp
jb
mov
test
mov
push
(bad)
(bad)
(bad)
jmp
mov
pop
jle
xor
cmp
das
imul
xor
js
hlt
test
cmp
cli
mov
jbe
push
pop
mov
push
(bad)
(bad)
dec
jmp
data16
repz
(bad)
xor
pop
cmp
(bad)
dec
pop
adc
cmp
or
arpl
add
and
pop
add
pop
cld
fmul
(bad)
out
(bad)
(bad)
(bad)
call
fidivr
jb
jmp
test
inc
inc
dec
ss
adc
sbb
iret
adc
(bad)
(bad)
inc
and
or
push
inc
pop
outs
cwde
rcl
dec
(bad)
jmp
or
dec
push
add
inc
mov
jmp
pop
push
lahf
(bad)
(bad)
(bad)
(bad)
cmovp
test
dec
push
push
xchg
push
movs
mov
sub
fisttp
(bad)
xor
sbb
stc
xchg
fisub
dec
js
push
int
xlat
xor
rcl
xchg
pushf
into
(bad)
(bad)
jg
add
mov
movs
inc
imul
adc
xchg
cmovs
or
mov
(bad)
(bad)
(bad)
call
test
push
adc
sub
out
jg
push
add
or
dec
sahf
mov
xor
mov
mov
sahf
call
xchg
je
xor
(bad)
mov
mov
mov
cmp
push
ins
jecxz
cli
movs
pop
gs
ja
call
pop
cmp
mov
js
jge
repnz
movs
(bad)
(bad)
(bad)
push
fisub
push
xchg
xchg
push
fisub
xchg
bound
pop
add
sbb
arpl
idiv
jmp
test
fs
add
adc
(bad)
(bad)
(bad)
call
cmp
test
ins
daa
stos
mov
cmp
mov
mov
stos
add
imul
sbb
or
popa
inc
dec
push
shl
or
or
mov
add
test
add
daa
pop
push
cmc
in
adc
or
jp
mov
xchg
(bad)
jmp
(bad)
sahf
(bad)
(bad)
ret
jo
in
sub
test
(bad)
(bad)
jmp
data16
xchg
les
lods
push
pop
div
sar
ss
ret
(bad)
out
cli
mov
adc
sbb
ficom
sbb
fwait
(bad)
(bad)
jg
rcr
scas
mov
into
es
mov
inc
in
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
fld
xchg
xlat
xchg
fisubr
int
mov
mov
xchg
loopne
xchg
mov
call
inc
ja
or
shl
jecxz
inc
test
repnz
lea
cmp
daa
(bad)
jmp
sub
fbld
add
lock
pop
pop
cmp
mov
mov
das
clc
call
pop
and
dec
mov
mov
(bad)
popa
(bad)
in
pop
or
enter
(bad)
(bad)
push
cmps
pop
jecxz
mov
push
mov
xchg
mov
mov
mov
ret
lock
ins
out
adc
(bad)
cdq
sub
leave
lods
pop
gs
aas
(bad)
push
mov
sub
sbb
lock
mov
inc
sbb
and
adc
sti
push
(bad)
test
push
into
test
(bad)
jmp
mov
int3
push
and
lods
xor
adc
pop
dec
cmc
mov
outs
dec
jg
retf
sbb
add
jl
pop
cmp
pop
cmc
(bad)
inc
movs
dec
mov
es
mov
jmp
clc
gs
cs
pop
mov
push
std
pop
pusha
push
imul
push
pop
dec
jmp
xor
jmp
test
jb
(bad)
fist
xchg
or
sub
add
adc
fdivr
(bad)
out
clc
jmp
repz
jae
es
lock
add
jmp
sar
fmul
jbe
push
and
sub
or
cwde
mov
or
sub
(bad)
call
sahf
sub
xchg
(bad)
push
inc
or
in
mov
cmc
add
cmps
or
push
(bad)
(bad)
(bad)
dec
sahf
test
leave
and
cmp
loop
leave
push
imul
ret
xchg
sbb
(bad)
(bad)
(bad)
jp
dec
daa
outs
adc
pop
cmc
mov
mov
popw
lock
or
scas
call
bound
aaa
lahf
popa
sub
mov
jb
pop
cmps
aam
(bad)
call
mov
stc
mov
test
cmps
xchg
(bad)
(bad)
(bad)
(bad)
mov
jo
xor
adc
pop
mov
and
not
fidivr
mov
mov
popf
push
xor
fldcw
adc
data16
mov
or
add
mov
dec
and
pusha
inc
xchg
cmp
call
loopne
cld
mov
psubsw
cmc
add
ds
shr
pop
stc
dec
adc
das
mov
xor
ja
dec
mov
xchg
fwait
(bad)
(bad)
(bad)
push
adc
mov
js
cmp
or
pop
jo
adc
(bad)
(bad)
push
adc
pusha
pop
xchg
mov
cld
arpl
xor
mov
mov
imul
(bad)
(bad)
(bad)
xchg
bnd
fucom
adc
loope
div
adc
inc
addr16
jae
adc
mov
mov
add
ins
sub
pushf
xchg
jecxz
push
xchg
cmp
fld
fidiv
std
dec
call
jns
cmp
stc
inc
in
adc
popa
into
loope
leave
mov
(bad)
(bad)
(bad)
mov
xor
mov
in
sti
inc
pop
sbb
mov
lea
int3
(bad)
mov
js
sbb
mov
icebp
adc
daa
int3
pop
pop
inc
(bad)
jmp
sahf
ret
sub
fild
push
mov
fisttp
inc
xchg
fild
(bad)
(bad)
jmp
sti
cdq
push
sbb
test
and
xchg
inc
(bad)
jg
mov
pop
jo
ret
cmp
push
stos
mov
mov
(bad)
adc
ss
clc
mov
fsubr
sahf
mov
imul
das
in
lahf
mov
mov
sbb
lods
out
inc
pop
out
(bad)
(bad)
push
push
not
xchg
(bad)
icebp
xor
outs
out
fsub
fwait
cmp
pop
jp
stos
fdivr
(bad)
scas
clc
(bad)
sbb
test
jl
mov
push
aaa
sti
aas
or
push
scas
idiv
mov
lock
jle
sbb
cli
call
xchg
sbb
(bad)
(bad)
(bad)
fisttp
mov
xchg
cmp
test
mov
xor
fist
bound
jbe
(bad)
(bad)
jmp
test
(bad)
xchg
push
push
mov
adc
xor
(bad)
jmp
jbe
pop
pop
mul
jle
xchg
cmp
out
dec
mov
es
(bad)
(bad)
call
push
xchg
in
stc
jmp
ins
cmp
(bad)
fild
xchg
scas
enter
sub
(bad)
(bad)
call
push
(bad)
loopne
xor
xor
movs
add
push
pop
shl
sbb
pop
pop
jmp
push
inc
mov
ss
imul
js
jg
dec
jl
in
loope
pushf
je
(bad)
call
cld
xor
xor
jle
and
mov
(bad)
mov
loop
adc
(bad)
(bad)
call
push
addr16
and
(bad)
fdivr
cdq
std
sub
cmp
shl
add
test
sub
out
test
je
adc
mov
scas
ret
call
call
ins
loopne
fisttp
das
fdiv
inc
loope
call
popa
pop
in
(bad)
(bad)
(bad)
fcmovnu
and
iret
sub
pop
mov
add
push
aam
clc
inc
push
stc
push
cmps
stos
lock
cmc
rcr
loopne
arpl
jp
(bad)
retf
outs
fsubrp
pop
mov
dec
sub
mul
xchg
jmp
and
mov
sahf
and
push
mov
sbb
jg
test
int3
or
shl
mov
(bad)
fnstsw
fistp
push
(bad)
test
jb
fild
adc
mov
cld
lock
ds
mov
lock
es
test
mov
out
ret
icebp
jp
(bad)
test
in
clc
dec
jp
scas
cld
cmp
push
scas
push
in
(bad)
(bad)
(bad)
dec
xlat
idiv
jae
push
ror
gs
or
lock
or
(bad)
dec
push
mov
imul
(bad)
dec
dec
call
pop
jle
mov
lock
hlt
sbb
(bad)
dec
or
sti
inc
cmc
(bad)
mov
and
lock
adc
pop
(bad)
xchg
in
cmp
add
mov
xlat
mov
inc
scas
xchg
dec
daa
(bad)
mov
mov
and
ret
jbe
mov
push
pop
mov
(bad)
call
loopne
fcomi
iret
adc
outs
mov
cmc
rcr
aad
add
call
loop
jmp
push
out
call
push
(bad)
jg
test
out
jmp
mov
aad
jo
loope
mov
sbb
gs
lock
popf
pusha
lds
mov
out
test
cmp
cmp
mov
jg
outs
loopne
mov
in
jb
dec
call
test
std
mov
push
into
fdivr
jmp
aas
je
mov
repnz
ficomp
scas
sbb
dec
jno
(bad)
cli
call
sbb
std
(bad)
call
or
pop
jle
test
cmp
pop
sbb
mov
(bad)
push
pop
mov
imul
mov
jne
fistp
mov
(bad)
sar
mov
js
pop
fdiv
mov
out
pushf
hlt
sbb
sbb
xchg
sti
cmp
jmp
(bad)
push
fst
pop
or
fld
fwait
in
inc
mov
loopne
sub
mov
sub
ficom
cld
idiv
dec
shl
(bad)
sahf
xor
scas
sbb
pop
pop
cld
pop
mov
lods
cld
(bad)
(bad)
(bad)
(bad)
jmp
clc
lahf
jecxz
push
cli
fstp
xor
cmp
(bad)
mov
ja
js
(bad)
jg
fs
test
icebp
xor
cli
sbb
inc
fdiv
xor
call
in
dec
jmp
out
cmp
imul
fcmovu
jg
mov
xor
mov
jle
mov
mov
repnz
movs
cli
shl
lea
daa
std
dec
outs
retf
xchg
jo
mov
fisubr
mov
int
call
dec
ret
popf
hlt
pop
ss
aas
cld
push
xlat
std
js
dec
outs
jo
lea
xor
or
jo
sub
or
ret
push
jae
adc
ret
retf
mov
jg
ja
push
dec
pop
add
in
das
(bad)
xchg
fsubr
pop
add
or
cmp
sbb
scas
sti
pusha
sar
pop
add
sbb
(bad)
(bad)
stc
add
stc
repnz
(bad)
lods
adc
or
inc
inc
pusha
jg
mov
add
lock
mov
aam
jg
stos
cmp
xchg
ret
push
push
cld
das
push
lods
aas
sbb
out
jl
aas
mov
loopne
inc
test
repnz
fidivr
aas
enter
(bad)
call
inc
or
enter
mov
stc
mov
das
ja
test
mov
movs
inc
xchg
aas
(bad)
fcmovnb
sahf
(bad)
push
sbb
jg
push
aas
mov
push
xor
ret
in
jnp
mov
(bad)
(bad)
mov
mov
jle
fimul
adc
push
in
sub
loopne
addr16
out
gs
leave
jmp
adc
icebp
fsincos
inc
mov
mov
sahf
adc
push
pop
fimul
stos
in
cmp
(bad)
jmp
push
cmps
bnd
push
(bad)
xchg
dec
adc
(bad)
adc
ret
dec
cmps
movs
pusha
(bad)
(bad)
out
add
sti
inc
cmc
fcmovne
je
or
inc
push
ret
data16
hlt
cmp
pop
and
int
xchg
loopne
rol
in
push
mov
in
stc
ins
lds
retf
aas
push
int3
or
pop
loop
mov
add
mov
aas
imul
daa
cld
push
or
mov
mov
xchg
sbb
clc
pop
push
test
clc
push
cli
or
ja
xor
fidivr
scas
repnz
and
(bad)
(bad)
(bad)
jg
and
sbb
cmps
cmp
data16
scas
pop
push
adc
inc
popa
inc
mov
mov
mov
and
pop
ss
sti
(bad)
dec
movs
dec
push
das
and
call
dec
sub
imul
out
test
(bad)
(bad)
(bad)
jg
fwait
push
in
stos
add
imul
sub
inc
cmc
adc
(bad)
jmp
mov
bound
push
test
push
ret
pop
jl
mov
cmp
push
clc
cmps
cmp
imul
test
test
scas
ret
(bad)
jg
pop
mov
cmps
mov
sti
dec
repnz
sahf
xor
inc
mov
(bad)
sti
lock
push
cld
(bad)
(bad)
push
xor
fnstsw
xchg
test
leave
jno
mov
nop
in
jecxz
(bad)
jmp
out
jno
mov
popa
mov
out
push
inc
cmps
mov
jmp
imul
pusha
inc
jge
xchg
sti
aas
dec
(bad)
(bad)
(bad)
(bad)
(bad)
imul
adc
retf
js
sar
sub
xor
mov
xchg
mov
or
cmp
(bad)
retf
scas
test
xor
push
js
cmp
dec
jl
sub
nop
cdq
fwait
pushf
jecxz
sar
adc
push
popa
or
sub
stos
pop
lock
retf
(bad)
(bad)
mov
stc
(bad)
xchg
mov
out
and
scas
jge
add
shl
jb
push
pushf
sbb
add
pop
(bad)
in
adc
movs
add
cld
repnz
retf
jb
mov
or
not
cli
xor
dec
dec
pop
and
mov
inc
cwde
xchg
sar
xchg
call
cwde
mov
xchg
(bad)
(bad)
(bad)
inc
mov
stc
je
pop
sti
les
mov
leave
cmp
lods
jo
jecxz
and
and
adc
push
jmp
mov
pop
xor
imul
retf
inc
sub
and
mov
add
(bad)
(bad)
inc
pop
in
push
not
jecxz
sbb
cmc
mov
aam
jge
mov
push
cmp
scas
cmp
jge
pop
addr16
cmps
dec
hlt
ins
or
lods
inc
lock
sahf
scas
in
(bad)
(bad)
(bad)
jmp
lock
(bad)
sbb
mov
mov
dec
adc
rcr
cmp
aaa
test
outs
call
(bad)
push
mov
outs
popa
outs
adc
stc
(bad)
push
jmp
jge
pop
outs
dec
jmp
iret
pop
or
(bad)
dec
mov
push
test
clc
cmp
push
and
jmp
xor
(bad)
inc
push
movs
jp
(bad)
jb
pop
push
push
cli
stos
jle
inc
cmps
ds
(bad)
pop
cld
(bad)
call
xchg
mov
(bad)
xor
cmp
iret
not
fs
mov
movs
dec
jbe
movs
mov
cdq
mov
xchg
xor
std
(bad)
jmp
xor
push
mov
adc
(bad)
movs
pop
cmps
sub
out
sub
jmp
cmps
jmp
sub
sahf
mov
mov
mov
das
xchg
mov
(bad)
mov
cmp
retf
sbb
or
jmp
ss
rcl
xor
mov
cmp
mov
xchg
dec
out
aad
ins
dec
push
sub
(bad)
jmp
jb
test
sbb
mov
fwait
xchg
fcom
jnp
repnz
(bad)
(bad)
inc
mov
lock
sub
sbb
mov
cmp
cmp
push
mov
out
fild
int3
add
cdq
movs
cmc
sti
jo
sbb
cmp
push
xor
mov
mov
dec
out
mov
push
enter
pop
sub
test
sub
(bad)
(bad)
jmp
push
push
xor
xchg
jmp
clc
inc
xchg
imul
dec
mov
enter
(bad)
(bad)
call
gs
in
retf
xor
vpmaddwd
imul
dec
inc
(bad)
(bad)
(bad)
(bad)
fld
popf
and
test
rcl
dec
mov
adc
ret
jmp
(bad)
call
sub
fndisi(8087
push
cli
cld
sbb
cmp
outs
jmp
mov
push
or
movs
xchg
and
mov
out
and
dec
jecxz
outs
jnp
loopne
push
fwait
dec
(bad)
xlat
fwait
(bad)
dec
push
in
jns
inc
enter
and
test
push
xchg
(bad)
dec
in
cwde
mov
pusha
in
push
scas
sbb
lods
fcmove
out
dec
stos
aam
(bad)
(bad)
fbld
test
fwait
inc
gs
(bad)
iret
daa
retf
cmps
retf
dec
pop
mov
neg
dec
jo
sbb
sbb
aaa
leave
jecxz
aad
push
bound
adc
icebp
mov
(bad)
dec
cwde
xor
pop
xor
ins
mov
inc
mov
mov
xchg
and
cmp
lea
xor
xor
sub
(bad)
(bad)
(bad)
sar
ss
cmps
test
ja
aam
push
inc
shl
(bad)
(bad)
jmp
clc
pop
xchg
push
in
outs
push
dec
jl
cdq
cmp
mov
retf
es
fmul
(bad)
fist
sti
inc
dec
mov
dec
test
mov
inc
out
fld
movs
inc
(bad)
(bad)
(bad)
jmp
xor
mov
dec
push
bound
sub
call
(bad)
(bad)
jmp
ins
mov
lds
loope
rcl
icebp
call
bound
mov
xor
aaa
inc
ret
dec
shl
add
or
imul
div
fcomip
add
push
xchg
in
sbb
inc
mov
sbb
push
jmp
test
lock
adc
xor
mov
dec
push
adc
cli
idiv
idiv
leave
(bad)
cmp
sub
(bad)
pop
scas
aaa
icebp
(bad)
(bad)
(bad)
jnp
shl
pop
test
xchg
ds
jecxz
jmp
iret
fs
aad
jg
dec
fild
popf
lahf
xchg
xchg
xlat
xchg
or
shl
xlat
test
jmp
int3
call
jbe
mov
call
(bad)
call
(bad)
pushf
(bad)
dec
imul
or
jecxz
rol
aam
mov
into
xchg
xlat
(bad)
(bad)
(bad)
push
or
jae
push
adc
and
push
and
and
push
ret
(bad)
(bad)
cmp
int
out
movs
mov
bound
sahf
sbb
retf
(bad)
(bad)
(bad)
fistp
push
sbb
pushf
cdq
push
xlat
push
push
ret
xlat
hlt
in
fnsave
jno
sbb
cmp
sub
mov
sti
push
jl
gs
in
add
imul
stos
movs
inc
pusha
mov
stos
cmp
(bad)
(bad)
(bad)
(bad)
mov
lock
push
sub
mov
add
lea
cmp
or
(bad)
dec
push
fwait
adc
in
in
sti
aaa
gs
xchg
repz
retf
or
or
jmp
loopne
(bad)
cmp
test
jg
cli
pop
std
dec
jbe
push
pop
pop
mov
jno
push
aas
je
xchg
adc
(bad)
call
rol
mov
int
and
scas
push
ins
mov
xor
in
(bad)
(bad)
(bad)
dec
push
or
xor
in
mov
pop
adc
pop
int
stos
jne
(bad)
(bad)
jmp
jecxz
and
mov
lods
cwde
inc
push
out
int3
push
pusha
sbb
(bad)
(bad)
mov
ss
inc
cdq
in
stos
icebp
cmp
dec
xor
arpl
jl
add
add
(bad)
mov
mov
(bad)
cmc
fwait
jle
cli
nop
mov
xchg
pslld
fstp
fstp
xchg
lahf
test
iret
push
add
(bad)
(bad)
fadd
pop
in
mov
push
push
clc
pop
push
jl
adc
(bad)
jmp
out
cmp
neg
or
or
sbb
mov
imul
pop
pop
or
neg
loope
lods
inc
xchg
aam
add
std
ret
leave
jl
cmp
(bad)
call
mov
cmp
jmp
push
loopne
push
jle
test
(bad)
(bad)
(bad)
fmulp
jmp
xor
jl
jecxz
mov
cmp
mov
outs
xor
movs
mov
aas
outs
clc
(bad)
jmp
xchg
test
mov
cmp
adc
icebp
scas
inc
mov
mov
(bad)
(bad)
(bad)
fsubr
movs
loop
and
aas
mov
mov
daa
mov
jmp
(bad)
(bad)
(bad)
cli
std
lods
pop
aam
mov
jno
and
jge
mov
add
inc
or
jmp
(bad)
cmp
jmp
push
js
int
pushf
inc
pop
xchg
and
cld
add
das
pop
retf
sti
(bad)
(bad)
(bad)
jmp
aam
push
and
retf
lods
xchg
jns
loope
aad
xchg
cmps
loopne
out
nop
jnp
pop
push
cmps
neg
jmp
pop
mov
ja
pop
mov
in
mov
sahf
lea
xchg
pop
icebp
(bad)
push
cli
fdivr
and
cvtps2pi
pop
(bad)
mov
mov
dec
sub
(bad)
(bad)
jg
inc
sub
jecxz
mov
sar
jle
jl
jge
mov
inc
gs
inc
ror
(bad)
sti
mov
cli
imul
cld
bound
outs
mov
adc
ins
cmps
sub
(bad)
(bad)
jmp
pop
mov
push
sar
inc
test
ret
cdq
sti
mov
idiv
je
shr
mov
dec
sub
push
inc
jp
mov
hlt
jge
(bad)
(bad)
(bad)
push
imul
mov
popa
out
sti
cmp
sti
fwait
aad
test
shl
lock
(bad)
(bad)
dec
dec
jl
fdivr
mov
aam
xor
ret
pop
xor
sub
add
hlt
mov
vunpcklps
(bad)
(bad)
(bad)
mov
ficomp
or
aad
xchg
mov
adc
(bad)
jmp
cmps
sar
pop
into
mov
sar
(bad)
jmp
mov
scas
les
out
test
jne
pop
imul
mov
out
popa
bound
push
cmc
jg
sbb
mov
sub
iret
(bad)
(bad)
(bad)
mov
cld
or
cmp
(bad)
rep
dec
push
nop
cli
or
(bad)
jmp
retf
mov
mov
movs
mov
mov
popf
icebp
out
push
sub
movs
jge
xchg
or
xchg
push
stos
inc
add
out
ficomp
push
adc
sub
dec
daa
push
sbb
mov
das
mov
arpl
dec
cmps
ss
lds
mov
(bad)
(bad)
(bad)
push
or
mov
das
adc
test
in
mov
sub
aad
pop
sbb
inc
xor
call
sub
pusha
mov
mov
test
push
adc
(bad)
(bad)
jmp
cwde
sub
cli
cwde
inc
inc
ret
aad
int3
jns
sbb
shr
pop
jp
fisttp
(bad)
dec
push
sbb
std
call
cmps
fsub
add
mov
(bad)
(bad)
call
sub
adc
fcomp
adc
icebp
scas
sahf
ret
popf
jo
adc
pop
mov
(bad)
(bad)
(bad)
jmp
nop
pop
mov
mov
and
cdq
push
jmp
push
(bad)
jg
jmp
dec
aad
setno
retf
push
cmp
mov
rcl
mov
(bad)
(bad)
(bad)
inc
sub
xchg
lock
dec
leave
int
lahf
inc
adc
mov
in
mov
(bad)
(bad)
push
adc
jge
aaa
test
jg
sub
les
xor
(bad)
jg
sbb
pop
xchg
sub
xchg
int
ins
leave
dec
je
pop
loope
(bad)
(bad)
call
loop
(bad)
jno
imul
dec
mov
fst
push
fisttp
adc
fst
dec
(bad)
fild
inc
les
sub
aas
(bad)
cli
(bad)
(bad)
inc
dec
xlat
shr
(bad)
(bad)
(bad)
call
xchg
sub
sbb
dec
xor
daa
xlat
sbb
jne
data16
mov
mov
mov
lods
test
(bad)
pop
pop
pop
inc
outs
scas
ins
je
xor
(bad)
mov
sub
push
jg
imul
imul
and
dec
cmc
push
mov
fcomi
imul
xchg
add
(bad)
fs
and
movs
sbb
sub
(bad)
(bad)
(bad)
jg
xlat
sbb
inc
xchg
dec
sbb
cmp
cdq
and
cmp
cs
popa
push
jae
(bad)
mov
mov
jp
jl
sbb
pushf
inc
fidivr
add
dec
jo
pop
xchg
dec
cmp
inc
test
cwde
xor
xchg
cmc
dec
in
xor
(bad)
jmp
arpl
and
xchg
push
mov
jno
mov
sub
repnz
mov
out
jmp
fnstcw
movs
xlat
adc
pop
arpl
(bad)
adc
jl
push
(bad)
inc
stos
scas
outs
or
out
mov
cwde
(bad)
(bad)
(bad)
call
movs
pushf
jmp
retf
pop
cmp
mov
push
push
add
out
(bad)
(bad)
call
and
and
je
sbb
outs
ins
jbe
xor
lock
sbb
imul
mov
push
(bad)
(bad)
(bad)
inc
into
push
sbb
xor
stc
dec
scas
inc
and
cmps
sbb
pop
(bad)
(bad)
(bad)
jmp
and
aam
xchg
(bad)
inc
test
lods
int3
fucom
fiadd
inc
jl
imul
inc
adc
ficomp
xchg
sahf
scas
dec
pop
mov
fs
(bad)
(bad)
(bad)
(bad)
clc
mov
sub
xchg
xor
or
hlt
cmp
jne
add
jbe
xlat
aas
cmp
sub
(bad)
(bad)
inc
add
xchg
into
adc
loopne
les
aaa
jbe
mov
(bad)
push
sar
(bad)
(bad)
(bad)
jmp
mov
or
xchg
cli
nop
add
in
mov
je
pop
mov
in
inc
cmp
int3
mov
es
or
inc
dec
in
(bad)
mov
push
(bad)
call
das
sbb
push
(bad)
mov
aad
inc
sbb
mov
dec
push
icebp
retf
jg
call
cmps
push
cwde
mov
test
push
ja
(bad)
and
(bad)
push
adc
lods
lods
sbb
inc
inc
xor
and
cmp
mov
jbe
lods
xor
(bad)
(bad)
jmp
dec
xor
xchg
repnz
xor
jae
and
jmp
cmp
xchg
inc
call
sub
cmps
and
inc
retf
mov
out
cmps
push
clc
jnp
cmps
cmps
mov
das
sar
std
das
xlat
pop
out
imul
cli
sbb
xchg
scas
jg
je
fsub
jg
(bad)
(bad)
push
pop
mov
and
out
nop
pop
jge
sub
mov
test
cli
(bad)
(bad)
jmp
cmp
(bad)
mov
ror
std
out
push
aad
and
xchg
adc
(bad)
push
mov
je
mov
enter
(bad)
(bad)
dec
les
inc
sub
shl
pusha
neg
in
xor
(bad)
(bad)
mov
mov
fnstcw
push
push
out
jp
mov
(bad)
(bad)
(bad)
dec
inc
sbb
(bad)
in
push
pop
pop
add
lods
mov
(bad)
ins
push
xchg
xchg
pop
sub
data16
xor
jo
rcr
(bad)
(bad)
(bad)
push
dec
imul
icebp
scas
je
int
push
add
sahf
cmp
outs
and
sbb
cmp
or
out
mov
jb
sahf
loopne
imul
mov
mov
iret
sbb
cmp
popf
rcl
(bad)
(bad)
push
cmc
mov
push
push
jl
fnstenv
icebp
stc
inc
in
sahf
push
cdq
dec
hlt
jg
xchg
int3
(bad)
(bad)
(bad)
jmp
out
dec
sub
inc
sub
jp
pop
(bad)
stc
fadd
and
movs
retf
push
(bad)
(bad)
(bad)
jmp
stc
ja
push
retf
pusha
jmp
inc
push
and
cdq
rcl
jmp
adc
clc
(bad)
(bad)
inc
ds
jo
mov
and
jge
fs
mov
sbb
f2xm1
xor
cmp
movs
mov
movs
and
ret
sbb
into
or
mov
(bad)
(bad)
call
retf
pop
test
sbb
xchg
cs
imul
mov
(bad)
(bad)
(bad)
call
cmp
arpl
or
not
cmp
outs
dec
(bad)
clc
push
popa
out
mov
dec
jle
(bad)
(bad)
(bad)
cli
mov
outs
or
shl
in
enter
mov
mov
lods
jmp
call
xchg
out
outs
in
adc
loope
push
xor
out
call
ds
dec
sub
movs
(bad)
(bad)
(bad)
push
div
xor
mov
add
sbb
adc
icebp
and
sub
add
lods
clc
(bad)
jmp
mov
jg
das
cmp
fimul
(bad)
push
outs
or
sbb
loope
adc
mov
push
inc
push
mov
mov
or
(bad)
(bad)
(bad)
(bad)
mov
cmp
fwait
aad
push
out
or
cmp
sub
xor
out
cmp
(bad)
imul
and
aaa
dec
rcl
xor
(bad)
das
push
ret
jmp
(bad)
(bad)
jmp
mov
out
ins
add
call
mov
mov
clc
mov
xchg
jecxz
(bad)
jmp
fwait
movs
in
(bad)
pop
jmp
outs
dec
xchg
xor
hlt
popf
mov
mov
push
adc
or
or
(bad)
(bad)
(bad)
call
or
(bad)
or
mov
inc
mov
sub
adc
loope
popa
je
mov
lea
fwait
adc
jo
inc
mov
clc
or
fild
sar
or
and
ror
adc
outs
mov
xchg
push
mov
cmp
fild
xchg
sub
call
dec
inc
ror
jnp
mov
mov
test
mov
lods
lock
es
bound
dec
sar
addr16
das
mov
jle
xchg
retf
push
and
(bad)
popf
ds
(bad)
(bad)
(bad)
jmp
(bad)
sbb
(bad)
mov
stc
sbb
out
(bad)
xlat
pop
rcl
sub
xchg
mov
stc
repz
or
push
rol
fdivr
(bad)
fbld
clc
xor
jbe
ds
gs
xchg
cmp
out
(bad)
(bad)
(bad)
dec
add
jb
sub
aas
inc
arpl
jecxz
sub
xor
xchg
in
retf
(bad)
(bad)
push
out
push
or
cld
mov
push
aaa
movs
mov
aam
push
(bad)
xor
mov
xor
cmps
sub
sub
mov
and
jmp
(bad)
(bad)
(bad)
inc
xchg
push
sahf
cmp
jp
in
fucomp
mov
or
push
xchg
pop
or
pmaxub
jne
jge
(bad)
(bad)
dec
push
cs
fmul
arpl
jo
add
push
jecxz
xchg
pop
xchg
iret
dec
(bad)
(bad)
(bad)
call
out
stos
xlat
into
jl
pop
xchg
pushf
cmp
push
adc
inc
dec
adc
arpl
gs
outs
js
dec
es
and
xchg
sub
xor
rol
inc
rol
(bad)
(bad)
jmp
in
je
repnz
repnz
push
and
das
add
aad
sub
or
jbe
aad
clc
(bad)
(bad)
mov
cmp
xchg
gs
int3
test
pop
out
push
sahf
clc
outs
int
pop
pop
jg
(bad)
(bad)
jp
mov
add
mov
stos
jmp
test
and
adc
(bad)
(bad)
(bad)
call
cmp
daa
gs
add
and
cmp
stos
sub
test
xchg
sub
leave
daa
lods
(bad)
test
(bad)
call
mov
push
into
add
aas
cmp
test
imul
(bad)
(bad)
dec
mov
(bad)
loope
(bad)
shl
imul
push
pop
lahf
outs
adc
cmc
mov
sbb
and
out
test
ror
dec
mov
imul
inc
adc
(bad)
dec
push
mov
cmc
out
(bad)
stc
ret
test
push
jno
(bad)
(bad)
(bad)
jg
outs
retf
fimul
outs
fcmovnu
jnp
jp
leave
scas
lods
mov
test
add
(bad)
(bad)
(bad)
(bad)
in
ret
and
mov
jge
ficom
jl
out
movs
and
or
fwait
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
enter
data16
xor
test
xor
shl
frstor
add
jg
dec
retf
mov
into
push
loopne
xchg
(bad)
call
xchg
mov
(bad)
(bad)
inc
cmp
ret
pop
pop
mov
loope
rol
add
xchg
pop
or
dec
in
les
adc
aad
pop
hlt
(bad)
cmp
aaa
(bad)
in
outs
push
jmp
sub
mov
jmp
bnd
mov
adc
gs
sahf
xchg
sub
dec
dec
test
movs
sub
in
dec
adc
cli
(bad)
(bad)
mov
leave
das
(bad)
fs
mov
clc
jae
cmp
lock
clc
int3
aaa
pop
and
or
js
fdiv
xchg
adc
(bad)
(bad)
call
dec
dec
enter
xor
xchg
daa
jmp
pop
dec
cmp
inc
aam
adc
or
jmp
inc
push
call
pop
xchg
sub
inc
popf
(bad)
(bad)
in
mov
fst
out
mov
xor
xor
add
dec
add
call
dec
mov
sub
stos
jmp
mov
add
inc
(bad)
stos
add
and
add
call
call
push
neg
pusha
test
call
and
fidivr
rcl
js
(bad)
(bad)
push
imul
aad
in
sub
push
push
jecxz
jne
xchg
rol
stos
mov
pop
jle
jl
(bad)
(bad)
(bad)
cmp
jmp
mov
add
enter
cmp
cmp
pop
mov
adc
push
fsubp
ja
(bad)
push
mov
enter
rcr
fldcw
stos
mov
pop
ds
into
sub
(bad)
(bad)
push
repz
xor
out
or
dec
ja
and
repz
push
pop
(bad)
jg
mov
inc
xchg
xor
ror
add
leave
sbb
pop
mov
(bad)
(bad)
(bad)
push
popf
call
dec
sub
stos
out
add
push
mov
fwait
sub
lods
pop
push
add
push
(bad)
cmp
inc
push
mov
jle
xor
inc
out
jecxz
(bad)
(bad)
(bad)
jmp
xchg
les
jg
cmp
out
xchg
in
cmp
das
push
dec
mov
fdivr
call
cli
cmp
sub
out
dec
rcl
inc
call
(bad)
(bad)
jmp
test
xchg
dec
nop
push
push
clc
jne
add
imul
sbb
and
(bad)
(bad)
(bad)
call
pushf
in
test
add
in
(bad)
outs
xor
mov
mov
mov
and
(bad)
(bad)
inc
push
popa
popf
mov
mov
mov
inc
nop
mov
or
xchg
ret
fstp
ins
(bad)
sbb
sahf
lods
movs
adc
or
test
xchg
cmp
dec
sub
cmc
(bad)
(bad)
out
cld
lods
icebp
loopne
cmps
xchg
mov
cwde
ficomp
out
loopne
pop
push
pop
(bad)
(bad)
fist
fxch
sub
sar
stos
xchg
test
mov
gs
(bad)
jmp
pop
dec
push
xchg
(bad)
jle
mov
lock
xchg
aam
mov
aaa
mov
cmps
es
cmp
lods
call
cli
jne
imul
ret
pushf
push
adc
pop
shl
xlat
(bad)
dec
cld
sahf
adc
inc
pop
(bad)
mov
ret
iret
mov
jmp
mov
popa
addr16
and
xchg
mov
push
test
(bad)
shr
cs
retf
(bad)
repnz
(bad)
(bad)
call
sub
pop
or
bswap
jl
sub
cwde
mov
mov
and
cmp
mov
and
pop
out
sub
push
mov
sar
(bad)
(bad)
jmp
cwde
inc
pop
das
mov
xor
popa
xchg
and
mov
dec
(bad)
(bad)
(bad)
call
in
shl
stos
je
mov
or
loope
sub
(bad)
call
int3
inc
jle
retf
and
lods
imul
mov
lock
(bad)
(bad)
imul
adc
ret
jbe
in
in
test
aam
sub
xchg
(bad)
pop
enter
(bad)
call
and
pop
cdq
ja
inc
fimul
xor
outs
mov
(bad)
jmp
pop
mov
not
je
and
sub
int
push
and
(bad)
push
scas
imul
leave
mov
sub
and
popa
sub
add
cmp
(bad)
push
pop
fild
mov
out
dec
dec
jp
mov
ds
mov
push
mov
(bad)
(bad)
jns
icebp
scas
mov
xlat
addr16
(bad)
sbb
movs
js
std
jp
stc
inc
fcomi
(bad)
(bad)
(bad)
call
leave
fmul
push
push
int3
loop
cdq
(bad)
cmp
jecxz
jno
and
sbb
add
(bad)
cld
(bad)
jg
call
into
jno
scas
imul
ror
sbb
cwde
mov
mov
(bad)
(bad)
(bad)
jmp
js
mov
dec
jg
xor
adc
push
mov
ret
pusha
xchg
inc
cmps
dec
in
jg
(bad)
jg
xor
jbe
push
or
loopne
sub
adc
xchg
mov
xor
inc
cdq
adc
adc
(bad)
(bad)
dec
ds
xchg
sbb
push
pop
or
pop
call
jmp
fbld
lea
pop
popf
bnd
inc
(bad)
nop
push
aas
sub
or
std
mov
mov
lahf
inc
fnstcw
xabort
rcl
jnp
shl
out
popf
stos
and
das
cwde
cmp
sbb
or
jmp
push
divps
clc
mov
jl
jno
imul
stc
(bad)
(bad)
(bad)
(bad)
fimul
call
mov
pop
jb
push
mov
add
shl
and
call
mul
shl
xchg
bound
dec
sahf
cdq
jae
dec
mov
or
dec
bound
xchg
push
adc
(bad)
(bad)
mov
popf
mov
sub
push
jmp
mov
adc
sub
(bad)
(bad)
call
test
inc
daa
push
mov
cmp
mov
int
ja
sbb
jne
mov
mov
(bad)
(bad)
mov
mov
in
in
jo
into
pop
mov
loop
sub
and
lock
(bad)
(bad)
(bad)
cld
ja
icebp
mov
(bad)
inc
fwait
cs
mov
cdq
hlt
cdq
stos
push
nop
cdq
xlat
and
scas
test
js
jg
test
adc
mov
ror
stos
arpl
add
movs
call
fwait
dec
dec
dec
cli
lods
pop
jmp
pop
cmps
fisttp
loope
jmp
fcomi
fmul
cmp
mov
pusha
mov
xor
imul
and
mov
inc
mov
sub
ret
ss
or
sub
(bad)
(bad)
call
add
xchg
test
adc
pop
sub
lods
and
jno
(bad)
(bad)
(bad)
jmp
xor
cmp
jecxz
scas
cs
popa
mov
or
mov
loopne
(bad)
clc
mov
xor
(bad)
(bad)
inc
jns
fld
cdq
dec
cdq
inc
xor
out
and
cwde
nop
in
stc
enter
outs
and
clc
pop
cmc
dec
mov
inc
fidiv
arpl
int
dec
in
(bad)
(bad)
cmp
inc
adc
jmp
push
jne
add
sti
pop
jmp
retf
cmp
popf
(bad)
(bad)
(bad)
push
in
mov
(bad)
ins
pop
xchg
jb
cs
sahf
mov
movs
xchg
pop
call
test
mov
inc
std
leave
push
push
sti
test
out
fcom
fiadd
inc
push
fwait
pop
fnstcw
add
adc
fidiv
inc
loop
push
inc
push
pop
adc
(bad)
rcl
(bad)
(bad)
call
xchg
fdivr
push
in
pop
xor
mov
ficom
adc
xor
(bad)
(bad)
(bad)
call
(bad)
adc
xchg
adc
fsub
fld
xchg
xor
inc
inc
pop
test
scas
mov
call
jp
in
mov
xor
pop
(bad)
push
enter
ins
sti
mov
cmp
cli
inc
aad
call
sbb
cmps
xor
pop
xor
repnz
je
pop
push
neg
(bad)
jmp
or
inc
sub
pop
mov
xchg
outs
(bad)
(bad)
(bad)
jmp
ins
fidiv
test
pop
retf
push
sub
xor
or
add
xchg
xor
sbb
adc
ja
lds
mov
retf
inc
in
mov
fptan
mov
clc
push
mov
push
sub
rol
cmp
loopne
jmp
lods
jg
mov
pusha
fwait
rcl
hlt
jecxz
sahf
out
and
(bad)
(bad)
(bad)
jmp
xor
fist
push
das
cmp
enter
sbb
push
(bad)
(bad)
(bad)
(bad)
mov
jnp
iret
and
add
xchg
addr16
cmp
cs
rol
(bad)
call
(bad)
movs
add
xor
adc
data16
jle
mov
not
iret
cli
rcr
bound
(bad)
(bad)
sti
inc
inc
adc
cdq
test
(bad)
test
inc
(bad)
movs
cmp
ja
adc
cmp
mov
pop
mov
mov
sbb
call
cld
adc
push
push
data16
adc
dec
sub
loopne
push
adc
mov
call
jmp
pop
(bad)
cmp
jp
lods
(bad)
mov
dec
cmp
je
(bad)
(bad)
dec
xchg
lahf
or
scas
int3
pop
adc
ret
dec
fisubr
mov
pandn
(bad)
(bad)
inc
mov
mov
cmp
sub
xchg
scas
cmp
inc
push
cld
dec
outs
mov
mov
ins
fld
pusha
mov
inc
inc
mov
inc
shr
mov
(bad)
(bad)
dec
test
fidivr
les
pop
shl
push
es
loop
xchg
ins
fucomp
dec
shl
xchg
pop
mov
call
pop
pop
stos
rol
and
xor
jg
call
les
test
fdivr
add
retf
repz
adc
loop
mov
idiv
loope
(bad)
loop
fst
and
dec
outs
and
loopne
scas
test
mov
stc
adc
xlat
mov
mov
mov
aas
inc
addr16
push
retf
xor
cmp
xchg
xor
or
sahf
hlt
mov
cmp
mov
fdiv
jbe
(bad)
mov
pop
and
mov
mov
imul
jbe
(bad)
(bad)
push
int3
arpl
(bad)
sahf
jp
sbb
pop
cmp
fcomp
jle
not
xchg
mov
js
aaa
je
(bad)
icebp
inc
test
xchg
sbb
mov
pop
daa
adc
mov
push
mov
nop
sbb
lds
(bad)
(bad)
(bad)
(bad)
fst
lods
xor
mov
mov
push
push
jne
arpl
mov
cmp
hlt
(bad)
(bad)
jmp
mov
sbb
xchg
mov
or
std
mov
test
imul
sbb
xchg
pop
enter
pop
cwde
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
xlat
bound
adc
sub
loope
and
adc
std
int3
fdivrp
push
xchg
jmp
pusha
cdq
cmp
dec
dec
push
cmps
bound
icebp
(bad)
(bad)
call
pop
mov
mov
push
int
outs
popf
sub
test
movs
stos
sub
(bad)
jmp
call
retf
dec
jmp
dec
repz
add
pop
and
(bad)
call
int
push
or
mov
les
push
call
push
dec
mov
push
cmp
cli
push
fimul
mov
mov
(bad)
push
mov
xchg
test
adc
daa
clc
mov
je
cwde
(bad)
inc
dec
mov
imul
mov
xor
cmp
inc
add
inc
adc
fisubr
out
stos
mov
mov
xchg
icebp
jmp
add
scas
ret
fld
mov
(bad)
(bad)
dec
retf
outs
cmp
(bad)
mov
xlat
mov
cmps
push
bswap
int3
popa
jnp
jmp
cli
in
mov
xor
xor
dec
test
retf
(bad)
(bad)
mov
sub
cli
(bad)
fcmovnu
jnp
gs
xchg
lods
inc
ins
mov
xchg
cmp
mov
ficom
movs
push
xchg
jo
mov
add
fs
jle
dec
dec
mov
push
mov
(bad)
call
or
adc
xor
mov
mov
push
enter
pop
and
xlat
(bad)
(bad)
call
(bad)
stc
clc
cmp
cmp
jns
loopne
xchg
cwde
xchg
(bad)
jmp
xchg
mov
cli
das
push
and
out
vpslld
adc
out
call
retf
stos
fisubr
cmps
ins
push
arpl
sbb
mov
mov
call
loop
inc
or
test
ror
xchg
pushf
or
(bad)
lea
xlat
xor
xlat
sti
fdivrp
(bad)
(bad)
dec
sub
daa
sub
cmp
lods
push
shr
mov
cmp
ins
ficomp
pop
lock
sbb
add
retf
and
jns
(bad)
(bad)
push
pop
or
xchg
scas
or
inc
dec
arpl
or
sti
rol
loope
cld
(bad)
ficom
gs
stos
pop
inc
lds
sbb
mov
cmp
xchg
push
dec
cmps
and
or
lods
add
sbb
and
bound
push
stos
loope
sar
push
pop
mov
pop
(bad)
mov
dec
cli
cmc
les
arpl
jo
adc
xchg
(bad)
jmp
mov
mov
or
pushf
dec
aas
xor
cdq
sbb
(bad)
push
aad
imul
push
int
sub
aas
jmp
ds
(bad)
(bad)
call
cdq
stc
or
mov
pop
sbb
inc
jge
ins
dec
fidiv
ss
scas
sub
(bad)
(bad)
call
fdecstp
mov
pop
leave
add
leave
popf
adc
xchg
addr16
inc
ins
in
sub
adc
cmc
(bad)
jmp
scas
or
mov
jge
js
xchg
mov
dec
xor
dec
dec
adc
pop
repnz
hlt
push
retf
sub
mov
loop
and
inc
adc
sbb
data16
fwait
outs
ins
sbb
ins
jae
xor
sub
(bad)
(bad)
jmp
and
cmps
hlt
push
push
les
pop
cwde
jecxz
cmps
arpl
std
mov
dec
mov
sub
push
xchg
push
and
int3
test
and
pop
and
(bad)
(bad)
inc
dec
sbb
adc
jbe
pop
add
and
sub
push
push
sbb
push
and
(bad)
(bad)
(bad)
(bad)
aas
push
xchg
mov
cmp
adc
(bad)
mov
dec
sub
mov
sar
sbb
(bad)
call
sub
repnz
pushf
cli
pop
aas
stc
mov
call
dec
mul
(bad)
adc
fiadd
ret
rcr
or
int3
jb
lods
aas
jmp
inc
inc
push
in
push
ss
rol
jb
xor
xchg
jle
fwait
(bad)
(bad)
(bad)
inc
cmc
in
mov
mov
in
mov
xor
movs
inc
inc
shr
pop
fld
sub
and
mov
movs
ror
(bad)
fcomip
(bad)
jmp
push
xor
test
add
sub
(bad)
(bad)
push
pop
push
push
test
cmps
pop
pop
mov
add
sbb
push
jge
icebp
sbb
(bad)
call
sub
xor
inc
and
cwde
cmp
push
jo
sbb
pop
ficom
add
xlat
out
or
bound
adc
cmps
push
dec
mov
fs
mov
lods
movs
xchg
sbb
popf
stos
cmps
mov
addr16
or
(bad)
(bad)
inc
sahf
xor
repnz
ss
dec
cmc
and
pop
and
and
mov
inc
lea
or
sub
or
xor
push
std
(bad)
mov
rcl
lds
fs
add
jae
dec
call
cld
jmp
mov
stos
les
hlt
mov
ins
aam
(bad)
pop
mov
loopne
mov
(bad)
(bad)
(bad)
call
xlat
pushf
xchg
or
jmp
mov
pop
mov
rcr
xchg
xchg
out
out
push
(bad)
cs
add
fidivr
mov
dec
sbb
adc
lods
out
lds
sbb
inc
jno
and
sub
test
pop
imul
test
add
(bad)
(bad)
(bad)
(bad)
jg
in
dec
(bad)
xor
and
pop
lods
inc
jl
mov
inc
out
xchg
inc
mov
outs
mov
mov
popf
cdq
dec
mov
std
cli
ret
(bad)
sbb
jns
and
lea
inc
out
(bad)
dec
movs
fs
adc
repnz
inc
mov
test
inc
pop
cmp
bound
adc
sbb
aas
in
div
cmp
cli
(bad)
push
push
movs
lods
lods
jbe
adc
adc
mov
imul
cmp
loope
(bad)
(bad)
call
dec
jno
push
scas
retf
push
jb
inc
inc
xchg
lods
inc
mov
call
loope
cld
sub
xor
in
outs
mov
inc
(bad)
enter
lock
or
aam
fdiv
loop
sub
adc
push
cld
(bad)
(bad)
mov
inc
and
inc
pop
(bad)
dec
gs
add
add
stos
pop
mov
(bad)
call
jbe
sbb
adc
mov
cmps
xor
les
nop
sub
(bad)
(bad)
dec
mov
imul
in
dec
cmp
ret
jo
mov
mov
(bad)
(bad)
(bad)
jmp
int
lahf
ds
cli
movs
movs
jge
imul
mov
fsub
call
jmp
xlat
dec
jl
div
adc
sub
pop
pop
adc
xchg
(bad)
(bad)
(bad)
call
push
push
pop
push
int3
popf
push
pop
int
cld
and
mov
sub
mov
(bad)
(bad)
mov
and
push
pop
daa
rsqrtps
out
rcl
(bad)
inc
stos
xchg
outs
mov
adc
push
push
mov
push
(bad)
and
(bad)
push
jo
xor
sti
clc
lds
dec
data16
xor
popf
cmp
push
pop
mov
fiadd
retf
ret
jp
jg
cmp
hlt
sub
(bad)
sub
(bad)
(bad)
call
popf
cmp
cmps
sahf
cmp
mov
cmp
shl
push
popf
shr
push
cmp
sar
xor
mov
call
push
adc
xchg
inc
cmp
(bad)
(bad)
(bad)
fild
jmp
fistp
cmps
push
sbb
rcl
out
sahf
out
jb
xchg
mov
jb
cmp
(bad)
call
jp
stos
outs
cmps
dec
inc
outs
xor
jg
scas
test
dec
test
push
lds
(bad)
(bad)
(bad)
(bad)
fimul
sub
or
fwait
jmp
in
es
xchg
sub
jge
mov
shl
cmp
mov
jnp
sub
into
add
ror
(bad)
(bad)
jmp
dec
imul
sahf
outs
in
ret
xchg
enter
pop
add
dec
dec
xor
jmp
div
pop
jbe
std
fs
and
mov
shl
dec
jb
scas
mov
cmp
xor
sbb
pop
(bad)
mov
data16
(bad)
jmp
nop
pop
jno
jmp
movs
mov
nop
imul
sub
pop
cmc
or
mov
(bad)
(bad)
and
pop
aam
add
(bad)
(bad)
mov
pcmpgtw
xchg
imul
cs
cs
(bad)
(bad)
(bad)
call
pop
jge
pop
push
clc
jb
sbb
and
add
dec
sbb
push
stc
mov
(bad)
(bad)
push
lods
pop
jno
and
cmps
cmp
xchg
iret
mov
cmps
mov
pop
jmp
push
(bad)
test
je
rol
mov
test
sar
(bad)
jmp
fiadd
enter
fnsave
scas
loopne
push
sbb
js
out
push
sub
dec
xlat
fldenv
test
popf
pop
das
test
sbb
cmp
hlt
jle
lahf
xor
cmp
imul
xor
(bad)
(bad)
(bad)
(bad)
jl
in
jecxz
xor
pop
outs
pop
je
popa
push
xchg
retf
dec
ja
sub
dec
mov
cmps
(bad)
jmp
xrelease
mov
xchg
jge
enter
loopne
mov
(bad)
(bad)
(bad)
push
sub
mov
test
xchg
fmul
dec
sbb
and
pop
ja
pop
dec
repz
dec
(bad)
nop
or
imul
inc
addr16
xor
and
arpl
(bad)
(bad)
(bad)
(bad)
cmp
dec
sahf
xor
adc
aam
hlt
jp
push
(bad)
out
out
dec
add
or
movs
(bad)
(bad)
(bad)
push
fisubr
popa
jmp
stc
ret
jecxz
into
jle
pop
int3
cld
dec
cdq
mov
inc
(bad)
(bad)
(bad)
dec
mov
call
sub
shl
xchg
sbb
aad
ds
cwde
xchg
cwde
mov
lock
call
sbb
dec
out
mov
loop
ucomiss
dec
push
(bad)
(bad)
dec
xor
cmp
pop
fdivr
dec
push
call
dec
out
(bad)
mov
(bad)
(bad)
(bad)
(bad)
dec
fwait
jge
aaa
dec
dec
(bad)
out
pop
ror
xor
mov
push
push
push
(bad)
(bad)
(bad)
call
xor
jp
mov
pushf
mov
jns
adc
add
dec
mov
sub
lock
sub
and
push
retf
mov
das
cli
sahf
ror
(bad)
aaa
shl
mov
(bad)
stc
sbb
jl
dec
sub
popf
(bad)
push
in
test
inc
daa
cmc
ror
jmp
outs
pop
out
mov
call
mov
adc
imul
imul
mov
xor
push
bound
or
pop
rol
push
aad
movs
les
out
ret
jecxz
mov
inc
sbb
retf
mov
(bad)
inc
fs
mov
mov
cmp
ret
sahf
int
mov
call
pop
push
push
mov
adc
cmps
into
mov
imul
inc
(bad)
jmp
je
adc
in
in
and
xlat
lock
scas
sbb
lods
pusha
fisttp
inc
(bad)
(bad)
jmp
lock
daa
jo
fwait
pop
arpl
(bad)
fisttp
ds
test
jo
aad
(bad)
push
retf
adc
div
ins
mov
retf
call
sar
pop
lods
fsubr
mov
push
jo
add
pushf
in
(bad)
(bad)
(bad)
inc
dec
mov
ss
xor
ds
das
sub
or
xrelease
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
fucomi
jge
push
(bad)
xlat
push
in
cmp
jl
add
push
ret
cmp
add
aas
(bad)
(bad)
(bad)
(bad)
js
xchg
arpl
sub
ds
jmp
mov
out
test
(bad)
(bad)
(bad)
jmp
mov
js
cmp
shl
jle
pop
jg
rol
out
popa
leave
mov
call
jp
adc
stos
sbb
cmps
sub
ret
(bad)
inc
xlat
pop
fldl2t
mov
fisubr
xchg
pop
lods
add
(bad)
call
test
push
lea
lods
(bad)
fcmovnu
(bad)
rol
out
mov
sbb
jg
icebp
call
mov
inc
inc
cmps
movs
clc
mov
push
jp
push
clc
(bad)
(bad)
(bad)
cmp
(bad)
cmp
jns
or
mov
cwde
xchg
mov
(bad)
jmp
icebp
ds
repz
mov
xlat
adc
xor
addr16
in
sar
cmp
lods
jp
(bad)
(bad)
call
pop
and
jmp
fisttp
clc
add
rcr
loope
push
dec
lods
sbb
(bad)
(bad)
inc
push
add
sbb
push
mov
cld
jecxz
mov
sti
xchg
push
jbe
sahf
scas
imul
(bad)
out
xor
push
scas
daa
les
lahf
cmp
out
push
test
(bad)
push
jecxz
(bad)
(bad)
(bad)
(bad)
in
imul
jnp
push
loopne
call
in
daa
mov
sbb
pop
sbb
lock
cmp
mov
push
nop
adc
sub
fdivr
jmp
pop
mov
test
pop
(bad)
mov
scas
xchg
lods
push
lods
fdivrp
out
fcmovb
push
jle
(bad)
pop
lahf
cmp
pop
inc
lea
js
std
(bad)
pop
and
enter
jmp
(bad)
mov
lods
jno
pop
out
xchg
or
call
cwde
test
aam
mov
scas
(bad)
(bad)
(bad)
dec
add
jnp
mov
daa
cdq
mov
mov
shr
leave
hlt
mov
add
ror
iret
xchg
add
(bad)
mov
xor
sbb
mov
cmp
(bad)
dec
fmul
fwait
repz
pop
cmps
ficomp
leave
mov
(bad)
lock
rcl
sahf
sar
cmp
push
je
mov
neg
ds
sbb
xor
adc
mov
jmp
daa
xor
retf
jbe
add
cli
xchg
ins
mov
(bad)
mov
mov
movs
repnz
int3
xor
in
(bad)
mov
push
push
mov
cmp
push
mov
push
add
push
mov
ds
scas
sbb
stos
outs
dec
inc
call
cli
pop
push
or
scas
outs
clc
dec
(bad)
cmp
sbb
mov
pop
sbb
sub
jl
aam
sahf
not
leave
cmp
(bad)
mov
and
jp
popw
xchg
lods
sub
dec
dec
adc
jo
jnp
mov
and
and
ins
xor
std
outs
imul
icebp
cmp
push
call
mov
sub
retf
mov
xor
jmp
sbb
outs
fisubr
and
mov
cmp
popa
fs
(bad)
call
pop
sub
out
rcl
mov
ret
mov
into
or
(bad)
jmp
sub
lods
mov
mov
movs
ins
mov
rcl
arpl
jg
dec
and
jp
and
lods
mov
fldcw
into
repz
call
fidiv
mov
mov
jecxz
adc
les
pusha
pop
cmps
or
outs
call
sar
call
loope
outs
pop
mov
xchg
in
inc
outs
(bad)
(bad)
(bad)
call
test
(bad)
loopne
lea
push
jl
cld
mov
fisubr
cmp
into
cmp
mov
jmp
push
test
std
mov
and
std
or
add
(bad)
(bad)
in
je
lods
jo
push
sbb
cs
xchg
jbe
scas
inc
rcr
lea
les
std
icebp
fwait
stc
(bad)
jg
mov
push
push
or
xor
int3
jmp
mov
mov
aas
ss
add
imul
add
enter
neg
mov
dec
cdq
loope
inc
pushf
into
push
cmc
repz
mov
mov
retf
gs
(bad)
(bad)
call
mov
loope
cmps
hlt
lds
cmps
(bad)
loope
cmp
inc
lock
cld
aas
xor
(bad)
(bad)
inc
xchg
aad
test
out
icebp
xor
pop
ds
pop
cmc
(bad)
call
rcl
and
pop
xlat
xchg
and
jmp
add
jp
sete
(bad)
(bad)
jmp
mov
repnz
jbe
les
stos
shr
dec
push
out
jbe
rcl
call
call
(bad)
mov
pop
xchg
je
je
push
ins
mov
jmp
sub
add
pop
loopne
movs
and
and
jbe
(bad)
sub
xor
iret
mov
(bad)
(bad)
(bad)
call
mov
inc
cdq
stos
and
pop
inc
push
push
sub
mov
fnstsw
mov
dec
mov
call
cwde
cwde
xchg
lea
jnp
cmp
test
idiv
dec
push
push
sar
loop
pop
push
retf
xchg
sbb
push
(bad)
lea
(bad)
retf
jae
push
adc
addr16
aas
hlt
ins
mov
(bad)
(bad)
inc
ins
mov
ss
xor
mov
jmp
in
push
add
cs
mov
adc
sbb
shr
stos
dec
jb
xlat
mov
ja
push
cmp
push
fcmovbe
pop
mov
js
inc
ret
dec
sahf
xchg
(bad)
(bad)
(bad)
call
or
in
xchg
sub
(bad)
pop
dec
sub
sbb
call
and
(bad)
(bad)
(bad)
inc
or
mov
call
adc
cmp
mov
cmps
mov
pop
cld
jmp
mov
gs
dec
stc
sub
dec
xchg
xor
mulps
and
(bad)
(bad)
(bad)
jmp
ret
add
pop
pop
dec
loope
test
cmp
cmp
sub
(bad)
(bad)
dec
sub
pushf
mov
or
inc
mov
bound
bound
cmp
pop
hlt
(bad)
push
mov
cmps
push
(bad)
cdq
outs
and
es
lock
(bad)
call
shr
cmp
(bad)
fwait
jne
jnp
addr16
xchg
mov
xchg
lods
cmp
jg
out
or
repnz
and
mov
mov
(bad)
mov
enter
dec
(bad)
div
xor
jno
stos
mov
iret
inc
jnp
pop
mov
(bad)
jmp
jecxz
call
lods
pop
dec
(bad)
fild
ja
xor
dec
test
sub
xor
(bad)
(bad)
call
rcr
ins
dec
lahf
imul
stos
enter
dec
fst
push
jns
jne
sub
mov
xor
test
cmps
mov
xor
mov
(bad)
jmp
(bad)
adc
mov
push
nop
sahf
test
push
adc
adc
aas
sbb
out
mov
ja
loopne
push
cld
fwait
mov
jmp
aam
cmps
(bad)
mov
les
ds
(bad)
mov
inc
aas
jge
out
xchg
mov
(bad)
jns
push
xor
push
sbb
jg
or
cli
jns
mov
bound
loope
inc
xchg
inc
mov
(bad)
(bad)
(bad)
jmp
add
fisttp
sub
into
cdq
push
test
push
xor
movs
ret
sbb
int
das
sbb
iret
mov
sub
ins
stos
push
mov
jmp
mov
add
test
lods
xchg
in
adc
popa
sahf
sbb
imul
clc
push
sbb
in
sbb
aaa
(bad)
(bad)
(bad)
jmp
push
nop
cmp
inc
(bad)
out
clc
xchg
dec
imul
inc
adc
fcomip
pop
ja
xlat
ror
pop
mov
xchg
addr16
xchg
daa
and
shr
mov
and
movs
add
jnp
jnp
cmp
jl
gs
aad
(bad)
call
adc
jo
shr
movs
test
xchg
ret
pop
xor
movs
adc
(bad)
(bad)
jg
retf
nop
push
adc
test
hlt
push
or
sbb
mov
aaa
dec
adc
pop
inc
dec
pop
int3
lds
popa
pusha
rcl
(bad)
call
mov
and
fld
adc
mov
fdiv
arpl
(bad)
jg
les
jnp
out
mov
popf
jecxz
fst
push
loope
xchg
jmp
out
or
mov
push
stc
xchg
(bad)
(bad)
(bad)
inc
xlat
in
pop
pop
and
mov
call
stc
mov
push
hlt
test
jnp
(bad)
(bad)
(bad)
jmp
test
ss
scas
shl
lds
stos
cmp
(bad)
(bad)
push
dec
pop
sub
mov
nop
lods
fwait
pusha
mov
jbe
stos
ficom
stos
ret
push
cs
jnp
retf
xor
fidiv
cmps
(bad)
pushf
arpl
call
inc
sbb
or
int3
xchg
aaa
cmp
out
jns
sbb
cmp
(bad)
push
push
push
or
dec
rcl
sub
mov
les
fwait
(bad)
(bad)
(bad)
push
inc
mov
xor
lods
xor
mov
mov
inc
xchg
(bad)
(bad)
(bad)
jmp
mov
test
cmps
pop
adc
pop
and
jl
push
push
push
bound
jl
mov
das
rcr
(bad)
mov
sbb
mov
sub
mov
cmps
inc
or
push
or
(bad)
fstp
dec
lods
push
or
xchg
mov
(bad)
(bad)
(bad)
call
test
jbe
dec
fs
repnz
push
mov
add
adc
cmps
xor
in
sub
(bad)
(bad)
fnstcw
dec
int
ins
push
and
adc
scas
sub
imul
adc
arpl
icebp
sbb
pop
fcomp
xor
addr16
and
outs
ins
(bad)
loop
sub
icebp
scas
cwde
push
xchg
es
pop
hlt
(bad)
(bad)
js
mov
rcl
mov
or
or
xor
(bad)
inc
fidiv
lods
sub
adc
nop
dec
int
mov
push
sub
mov
(bad)
cmp
jmp
xor
push
xor
test
dec
and
xchg
aas
and
(bad)
es
ss
sbb
mov
sti
pop
ficom
(bad)
(bad)
(bad)
out
jmp
dec
sub
retf
and
xchg
add
push
aad
mov
imul
lea
movs
mov
mov
xchg
mov
adc
pop
or
sub
xlat
(bad)
jmp
push
push
sbb
mov
into
aad
mov
popf
scas
imul
jae
(bad)
(bad)
(bad)
call
inc
push
nop
pop
mov
loop
add
movs
mov
mov
jbe
(bad)
(bad)
(bad)
jg
cmp
fsubr
les
sub
mov
addr16
adc
(bad)
inc
test
ja
adc
fst
pop
lahf
out
inc
dec
movs
aam
repz
stos
fwait
(bad)
jmp
jmp
inc
popa
pop
sub
xchg
mov
mov
(bad)
dec
adc
cmps
retf
pop
cwde
sahf
mov
push
icebp
mov
mov
sar
push
addr16
in
xchg
repz
mov
aam
sub
imul
call
(bad)
(bad)
jmp
adc
and
push
inc
cmp
cmp
xor
test
and
ret
sub
(bad)
(bad)
(bad)
call
lods
loopne
(bad)
ins
fisub
fs
jo
clc
cmp
dec
inc
mov
bound
(bad)
mov
in
fcmovbe
mov
adc
shr
aas
dec
push
mov
int
mov
cwde
mov
(bad)
(bad)
jmp
xor
dec
pop
sub
mov
js
lahf
mov
pop
shl
(bad)
call
mov
push
iret
xchg
xor
inc
jle
xchg
and
test
(bad)
(bad)
(bad)
call
pop
mov
push
outs
(bad)
mov
inc
add
add
adc
sbb
jae
scas
int3
(bad)
call
push
jl
stos
dec
jl
dec
js
xchg
xchg
out
adc
inc
call
push
jno
dec
mov
scas
xor
out
std
xor
dec
ret
dec
cmp
test
push
fs
push
inc
xor
jmp
ja
stos
cmp
push
out
cdq
(bad)
(bad)
fcomip
ss
dec
sub
mov
dec
sub
sub
mov
rol
clc
jge
loope
popf
and
cmps
mov
(bad)
inc
cld
mov
leave
mov
hlt
sbb
jmp
imul
push
pop
cld
(bad)
jmp
adc
cwde
mov
push
fsincos
mov
mov
push
fwait
(bad)
(bad)
(bad)
call
xor
cs
dec
jmp
lods
out
fs
inc
je
fcmovnu
pusha
fidiv
or
xor
sub
nop
in
inc
nop
and
(bad)
enter
fadd
(bad)
(bad)
(bad)
jmp
sub
jle
stos
shl
cwde
mov
xor
sub
mov
(bad)
(bad)
dec
add
add
shl
lods
jbe
adc
retf
mov
and
cli
retf
cmp
in
arpl
pop
push
pop
push
ins
stos
imul
inc
sbb
fidivr
(bad)
(bad)
(bad)
mov
push
inc
push
call
bound
inc
retf
xlat
mov
call
adc
inc
(bad)
adc
les
inc
jge
in
out
cmp
stos
jecxz
(bad)
(bad)
(bad)
dec
test
pop
push
sar
fcom
xchg
repz
mov
ss
pop
dec
push
(bad)
jmp
inc
cmp
pop
push
test
mov
(bad)
sti
dec
jae
cs
(bad)
(bad)
inc
dec
push
sub
xor
add
xchg
arpl
scas
mov
jle
stos
(bad)
(bad)
dec
dec
in
jl
add
jbe
jmp
cli
ror
sub
mov
(bad)
(bad)
inc
lds
icebp
jae
add
push
dec
test
dec
sub
shld
push
les
adc
aaa
pushf
xrelease
inc
test
(bad)
inc
push
stos
aam
inc
nop
inc
jne
dec
add
adc
retf
mov
out
push
imul
(bad)
out
sbb
cmp
icebp
div
inc
add
pop
stos
pop
ins
popf
and
jecxz
mov
lea
fcomip
(bad)
jmp
sbb
mov
cmp
les
fimul
and
fadd
xchg
push
adc
stc
xor
sub
ins
mov
out
mov
ret
dec
dec
mov
mov
xchg
mov
xor
shr
xchg
adc
adc
cmp
xchg
inc
xchg
(bad)
(bad)
(bad)
(bad)
call
and
and
ins
jge
adc
cmp
add
in
xlat
or
push
inc
cdq
rcl
push
sub
loopne
dec
lock
mov
xchg
gs
jae
(bad)
mov
dec
int
lahf
push
push
sub
pop
push
inc
test
mov
inc
xchg
sub
xchg
std
push
mov
in
jp
(bad)
(bad)
(bad)
jmp
add
enter
inc
in
int
mov
out
pop
jmp
stos
jg
movsx
scas
xor
sub
(bad)
(bad)
jmp
inc
dec
inc
sub
inc
push
cmp
mov
xor
aad
xor
(bad)
(bad)
(bad)
dec
or
pop
outs
cdq
jns
or
jge
push
hlt
ds
imul
sahf
pop
scas
jne
xor
mov
(bad)
(bad)
inc
mov
sub
mov
inc
inc
xchg
cli
cmp
add
idiv
inc
sbb
cmp
stos
(bad)
jmp
cli
scas
jae
xor
sub
pop
adc
call
sbb
cmps
sub
(bad)
jmp
jae
mov
xor
inc
cmp
cmp
fisub
sbb
jp
(bad)
(bad)
inc
les
dec
inc
adc
inc
ja
mov
xchg
push
pushf
stc
inc
cmp
(bad)
(bad)
(bad)
call
pop
jge
jp
adc
lahf
and
and
push
mov
ret
mov
ret
(bad)
mov
inc
xchg
retf
popa
sub
ficomp
mov
(bad)
jg
(bad)
call
push
outs
scas
cmp
jge
and
push
vmulss
arpl
sub
cmps
xor
(bad)
(bad)
call
pop
out
test
dec
int3
aam
pop
in
rol
xchg
stos
jo
repz
pop
sti
call
clc
inc
xchg
xchg
xor
sub
pop
push
lods
jae
mov
sub
or
(bad)
(bad)
jnp
push
scas
ins
aas
adc
sbb
adc
loop
ss
sub
mov
push
sub
cli
(bad)
(bad)
(bad)
jmp
idiv
int
jg
xor
jo
jo
mov
and
shr
pop
fcos
(bad)
(bad)
dec
push
test
mov
(bad)
sbb
add
mov
xor
out
div
inc
ss
(bad)
(bad)
call
out
jge
cld
sub
adc
and
sbb
and
fdivrp
(bad)
inc
shl
in
adc
inc
loop
stos
ins
(bad)
stos
cmc
(bad)
(bad)
(bad)
inc
out
adc
out
dec
movs
xor
cmp
sub
addr16
ins
sbb
push
(bad)
(bad)
call
idiv
aad
pop
icebp
jp
and
adc
mov
out
out
(bad)
(bad)
(bad)
push
cmp
das
jmp
sahf
adc
push
mov
emms
dec
not
outs
ins
xchg
(bad)
(bad)
jmp
ror
inc
adc
loop
cmp
clc
ret
leave
push
sub
ds
cmps
dec
pop
(bad)
call
mov
adc
hlt
adc
retf
jp
das
mov
scas
fwait
pop
or
xlat
(bad)
(bad)
(bad)
call
jl
sub
sub
dec
in
cmp
jecxz
in
cmps
mov
or
(bad)
in
dec
cli
sbb
pop
and
adc
dec
mov
clc
pushf
jmp
mov
enter
jbe
push
mov
xchg
xchg
jle
mov
in
(bad)
push
dec
lods
and
movs
and
xchg
jno
push
cmp
loopne
das
clc
mov
sub
mov
sbb
mov
or
jg
aaa
push
(bad)
(bad)
(bad)
(bad)
fisubr
add
cmp
dec
cmp
pop
mov
jno
ds
pop
retf
cmps
and
add
add
lds
or
sbb
adc
ja
dec
(bad)
(bad)
(bad)
dec
ret
jp
fsubp
dec
jbe
pop
aaa
or
xchg
mov
jmp
stos
ins
shr
fld
adc
sbb
xchg
outs
sbb
(bad)
(bad)
(bad)
(bad)
in
ret
in
adc
in
inc
sbb
pop
lods
loope
fs
pop
inc
sbb
test
(bad)
(bad)
inc
push
jl
xor
sub
lds
adc
mov
rcl
add
rol
xchg
call
inc
add
pop
dec
bound
into
mov
movs
enter
jecxz
add
sti
(bad)
(bad)
call
jp
sti
pop
into
inc
cmp
jle
dec
jbe
xchg
pop
adc
adc
dec
inc
xchg
scas
ss
(bad)
(bad)
jg
ins
lods
ins
adc
cmps
jmp
mov
push
mov
xor
outs
repnz
or
jmp
or
push
jge
mov
inc
in
mov
in
(bad)
(bad)
(bad)
(bad)
stc
or
(bad)
daa
(bad)
enter
jg
inc
push
inc
and
sbb
jno
(bad)
(bad)
call
jo
les
add
mov
lahf
mov
fidivr
dec
mov
adc
(bad)
(bad)
(bad)
dec
mov
pop
mov
sub
add
jmp
pop
pusha
hlt
push
cmc
and
(bad)
(bad)
(bad)
push
xchg
xchg
loopne
cdq
repz
ret
inc
sahf
fsub
dec
pusha
ror
push
fdiv
or
mov
clc
(bad)
call
(bad)
out
fwait
pop
xor
inc
scas
movs
or
rol
sahf
mov
(bad)
(bad)
(bad)
(bad)
fldcw
inc
jno
cmp
in
mov
into
mov
aam
sub
sbb
repz
in
imul
(bad)
pop
call
push
mov
cli
movs
and
int3
lahf
inc
fwait
push
pop
jo
lods
(bad)
(bad)
(bad)
jmp
fdiv
dec
mov
daa
pop
loope
lock
lds
fwait
jl
cmc
fs
mov
popa
fistp
push
call
out
loopne
cmp
test
or
inc
ja
(bad)
(bad)
jmp
ret
mov
outs
push
leave
test
loop
lahf
xor
das
arpl
jg
call
push
retf
pop
sub
add
or
xchg
mov
cwde
add
mov
inc
mov
shl
sub
jge
call
sti
dec
addr16
daa
pop
aad
or
add
hlt
vphaddbq
retf
or
(bad)
push
(bad)
jmp
adc
aas
fcomip
scas
jl
sub
(bad)
(bad)
jmp
xchg
inc
add
sub
mov
inc
test
or
xor
pop
and
push
and
pop
loopne
call
test
rcl
xchg
mov
loope
and
shr
or
add
test
cmps
sub
pop
mov
xlat
data16
sub
mov
cdq
mov
int3
inc
mov
push
mov
sbb
push
push
jl
(bad)
dec
and
add
sub
add
lods
xchg
stos
dec
idiv
shr
sub
dec
push
add
adc
(bad)
mov
fstp
adc
pop
jbe
sub
les
sbb
inc
(bad)
(bad)
fcomip
xchg
test
pop
outs
clc
mov
mov
xor
and
sbb
and
call
or
(bad)
imul
lea
xchg
cs
imul
popa
fmul
pop
dec
xor
add
push
outs
sub
sbb
(bad)
mov
cmps
sbb
bound
in
cdq
push
movs
movs
(bad)
dec
(bad)
out
movs
xchg
cmp
test
xchg
xchg
xchg
and
loop
mov
movs
(bad)
push
cld
mov
jo
mov
or
push
pop
fisttp
pop
icebp
shl
mov
js
les
fwait
cmp
in
(bad)
sub
sub
jg
(bad)
fstp
xor
xchg
xlat
fstp
adc
cwde
fisttp
lock
(bad)
std
ss
sub
sbb
mov
mov
adc
js
sbb
cmp
pop
clc
add
mov
das
mov
daa
xor
or
xor
(bad)
(bad)
jg
(bad)
addr16
pop
jg
enter
fidiv
in
test
sar
jl
in
inc
or
mov
fld
mov
(bad)
(bad)
call
out
dec
mov
jnp
out
jp
mov
jbe
mov
pop
(bad)
jo
scas
iret
xchg
sub
scas
pop
add
pop
(bad)
jg
or
in
push
or
and
dec
inc
push
push
(bad)
(bad)
inc
(bad)
in
mov
jge
xor
call
in
mov
adc
es
lods
and
dec
xor
jmp
out
addr16
mov
xchg
cmp
pop
nop
ret
(bad)
jg
ret
mov
std
leave
(bad)
adc
(bad)
jg
push
ds
mov
mov
pop
inc
call
or
into
xchg
(bad)
(bad)
call
xchg
int3
mov
push
(bad)
aas
dec
push
jg
add
aad
(bad)
cmps
xlat
jp
adc
jecxz
pop
inc
cwde
outs
mov
(bad)
(bad)
(bad)
mov
rcl
mov
std
out
adc
adc
test
gs
(bad)
call
les
jbe
pop
retf
call
shl
(bad)
(bad)
out
adc
mov
and
ret
in
xor
jae
inc
jg
add
mov
push
cmp
shl
push
xor
(bad)
inc
mov
stos
add
stos
cmc
mov
jl
mov
xchg
mov
clc
push
sbb
mov
jne
scas
push
dec
(bad)
(bad)
dec
jns
test
mov
cld
int
outs
pop
xchg
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
cmps
xor
aaa
add
rol
bound
mov
sahf
xchg
(bad)
(bad)
(bad)
jmp
lahf
inc
xchg
call
in
jp
push
lods
ror
cmp
push
xchg
push
sahf
test
test
scas
cdq
sar
pop
retf
outs
mov
das
sub
icebp
dec
das
push
jecxz
xor
outs
dec
(bad)
(bad)
(bad)
push
stos
mov
mov
idiv
mov
and
push
das
jne
mov
popf
mov
(bad)
jmp
sbb
test
ror
dec
les
mov
push
test
mov
push
fwait
mov
int3
mov
mov
fdivr
inc
sub
sahf
ja
dec
dec
(bad)
(bad)
(bad)
jmp
call
jbe
ret
shl
xor
stos
(bad)
mov
rcl
outs
cmc
cld
stc
adc
mov
call
hlt
(bad)
mov
int3
stos
mov
repz
aas
push
and
stos
or
enter
dec
pop
(bad)
(bad)
(bad)
call
fcomp
jne
pop
cwde
mov
test
ja
jne
dec
jo
sbb
clc
mov
sbb
mov
sbb
pop
(bad)
or
loop
aaa
jle
cmp
daa
sub
jbe
mov
cli
(bad)
(bad)
dec
adc
sbb
icebp
outs
jnp
dec
pop
xor
mov
shl
cs
add
mov
dec
and
lea
aad
aad
mov
mov
or
cmp
fs
or
pop
pop
sti
fwait
cmps
iret
ins
push
add
repnz
pop
aas
(bad)
(bad)
(bad)
call
fadd
or
aad
test
pusha
xor
cmp
jecxz
push
xchg
je
mov
cmps
daa
push
ds
push
inc
and
fnsave
and
and
inc
cmps
xchg
(bad)
inc
cld
ficom
hlt
sub
dec
push
add
cmps
inc
jo
xchg
outs
ins
dec
(bad)
(bad)
(bad)
inc
and
or
xor
add
jne
cmps
cmc
clc
icebp
mov
xchg
lods
pop
xor
(bad)
jg
out
inc
es
pop
stos
push
fld
inc
jmp
bound
in
mov
sub
(bad)
dec
mov
lock
or
das
mov
mov
xor
xchg
xchg
(bad)
fild
mov
jl
out
movs
(bad)
les
es
outs
js
dec
mov
push
cwde
sbb
iret
inc
push
add
popa
call
jl
sbb
xchg
sub
or
push
ret
add
out
in
(bad)
out
sbb
mov
(bad)
(bad)
dec
sti
ret
clc
ret
sbb
imul
dec
gs
pushf
in
icebp
jae
mov
sbb
adc
(bad)
(bad)
jmp
xlat
(bad)
sub
ret
cdq
mov
dec
jle
xchg
(bad)
jg
(bad)
in
out
pcmpeqd
dec
lds
icebp
xchg
mov
xchg
cmp
(bad)
push
adc
pop
pop
add
adc
out
ds
mov
(bad)
(bad)
cmp
(bad)
cmp
jbe
mov
xchg
fist
cmp
fcom
(bad)
(bad)
jmp
jae
aaa
int3
cmp
mov
xchg
mov
cdq
mov
xor
push
sbb
or
mov
dec
iret
push
xchg
sub
and
or
cli
jecxz
cmp
push
cwde
adc
sub
and
icebp
inc
sub
jmp
xchg
adc
(bad)
inc
neg
ret
inc
sbb
xchg
and
sbb
mov
and
sub
in
loopne
push
shr
sub
mov
call
add
inc
aam
adc
cmp
push
fdiv
(bad)
jmp
sti
sbb
(bad)
jmp
push
push
sahf
jo
mov
cmp
inc
sbb
inc
push
repz
sbb
out
jp
loope
cmc
jae
pop
dec
sar
(bad)
(bad)
(bad)
inc
lods
sub
aad
push
mov
mov
movs
pop
adc
push
ret
cmp
lea
(bad)
(bad)
call
vunpcklps
pusha
js
out
mov
pop
add
cmc
fidivr
outs
cmp
inc
mov
jecxz
xor
outs
cs
cmp
pop
jl
test
adc
clc
mov
and
dec
cli
lock
xor
xchg
movs
sub
jg
inc
pushf
xor
test
(bad)
and
rol
mov
mov
push
cmc
(bad)
(bad)
push
addr16
repz
and
fnstcw
or
ret
mov
pop
(bad)
(bad)
call
xor
mov
call
push
adc
sahf
lds
test
dec
loope
retf
(bad)
(bad)
(bad)
mov
pop
repz
mov
rol
ret
push
push
mov
xor
cli
mov
push
sub
mov
or
xchg
cmps
push
pop
jmp
popf
mov
(bad)
(bad)
(bad)
mov
dec
sub
bnd
cmp
pop
xchg
scas
test
(bad)
inc
sbb
(bad)
push
cmp
out
nop
pushf
pop
jmp
jecxz
shr
jmp
shl
(bad)
(bad)
(bad)
(bad)
dec
inc
inc
cmp
inc
mov
sub
test
imul
stos
test
dec
(bad)
(bad)
(bad)
call
jp
test
xchg
loop
adc
mov
dec
xchg
stc
jecxz
cwde
rol
(bad)
repz
sub
mov
and
xchg
(bad)
fwait
mov
(bad)
(bad)
(bad)
cmp
sbb
xchg
hlt
movs
xchg
fst
dec
nop
xchg
cdq
xor
cmp
mov
adc
retf
or
sub
(bad)
(bad)
jmp
(bad)
cwde
cmp
shl
dec
add
dec
add
fisttp
(bad)
(bad)
(bad)
(bad)
mov
(bad)
mov
mov
(bad)
std
nop
lea
call
cmc
loope
retf
loop
fcomip
call
sahf
add
rcl
push
in
mov
popa
jbe
or
test
in
aam
(bad)
mov
cwde
movs
sub
adc
(bad)
jmp
jecxz
cwde
jle
cwde
push
push
sar
and
and
(bad)
sub
xor
fistp
mov
into
shl
sti
sti
(bad)
jmp
mov
cli
sti
imul
mov
xchg
adc
movs
or
inc
int
mov
sbb
call
push
mov
arpl
mov
das
cli
jmp
mov
popf
jmp
adc
push
aad
and
popa
(bad)
(bad)
(bad)
(bad)
(bad)
sti
push
in
dec
pop
and
cmc
outs
popa
xchg
stos
ret
pop
shl
test
cmps
mov
movs
out
pop
test
mov
or
aad
aam
cli
in
nop
imul
jno
push
repnz
mov
(bad)
(bad)
(bad)
push
das
jns
mov
cmp
cmp
jge
cs
fwait
xchg
jbe
push
(bad)
(bad)
(bad)
call
cmc
loopne
bound
sub
addr16
push
jae
inc
dec
dec
push
les
mov
cdq
aas
sbb
inc
(bad)
dec
sub
les
dec
pop
repz
jecxz
xor
loop
(bad)
(bad)
jg
(bad)
mov
les
sbb
mov
sbb
adc
inc
lea
jmp
(bad)
jmp
fistp
bswap
pop
jno
sub
imul
pop
cmp
or
adc
retf
sbb
sahf
call
xor
scas
test
add
push
test
retf
adc
sub
inc
(bad)
(bad)
call
sti
xchg
push
inc
mov
jmp
xor
arpl
jecxz
jge
fwait
loop
(bad)
(bad)
(bad)
call
mov
add
pop
ja
pushf
mov
jo
sub
cmp
int
or
pop
push
(bad)
(bad)
jmp
xchg
imul
xchg
cmp
or
add
sbb
inc
das
sbb
sahf
add
leave
test
push
dec
or
mov
mov
(bad)
call
xchg
fcomp
push
and
dec
mov
and
mov
xor
bound
call
ja
pop
inc
jae
popa
int
xor
stos
push
ret
mov
pop
scas
push
pusha
jg
(bad)
(bad)
push
popf
inc
and
or
bound
sbb
mov
cmp
mov
stos
in
lahf
push
jb
addr16
das
(bad)
(bad)
(bad)
(bad)
mov
imul
mov
lock
icebp
inc
or
cmp
cmp
icebp
pop
add
dec
push
adc
or
sub
scas
xchg
pop
adc
cmp
jo
iret
mov
(bad)
(bad)
(bad)
inc
xchg
clc
inc
jecxz
xor
mov
sub
je
pop
cmps
xor
jg
scas
loop
dec
sbb
call
loopne
inc
outs
xchg
scas
sbb
loope
loope
in
shl
loop
(bad)
(bad)
call
das
aad
ja
int3
arpl
mov
and
les
es
jmp
mov
test
(bad)
(bad)
(bad)
inc
xchg
inc
aaa
mov
(bad)
jnp
sub
add
ret
xchg
push
cwde
dec
dec
jne
or
add
call
push
cmp
xchg
in
fild
rsm
dec
cwde
loop
cld
jg
out
inc
push
xor
clc
push
push
dec
call
xor
mov
pop
xor
(bad)
dec
gs
cld
repz
xchg
(bad)
cmp
or
pop
cmp
sub
div
cld
(bad)
(bad)
fistp
and
jnp
and
in
jmp
je
int3
xor
out
mov
(bad)
inc
xchg
ret
add
rcr
lahf
gs
call
push
ja
jo
(bad)
(bad)
(bad)
(bad)
aaa
pop
add
push
mov
jmp
jo
iret
and
or
add
call
jl
jne
(bad)
dec
inc
adc
sbb
mov
lea
shr
(bad)
(bad)
jg
mov
mov
retf
sbb
stc
out
push
add
clc
or
adc
(bad)
(bad)
(bad)
(bad)
jmp
mov
daa
pusha
pusha
fdiv
repnz
das
in
(bad)
pop
hlt
ds
aaa
mov
or
dec
repz
lock
(bad)
(bad)
jnp
mov
ja
(bad)
(bad)
xchg
fyl2x
cli
sub
xchg
(bad)
adc
(bad)
(bad)
call
fsubr
arpl
xchg
sbb
add
ret
mov
xchg
lods
jmp
jmp
and
(bad)
(bad)
dec
in
imul
jmp
js
stos
hlt
pop
jle
mov
or
jle
jge
jg
cmc
jle
ins
inc
push
mov
xchg
mov
mov
sub
lods
push
dec
cmp
pop
fidivr
xchg
xor
add
dec
pusha
aad
jo
inc
pop
mov
ja
sbb
fwait
mov
mov
nop
(bad)
(bad)
(bad)
call
fldenv
cli
sub
test
mov
add
lahf
ins
mov
int
mov
mov
cmp
(bad)
jmp
daa
(bad)
jmp
into
mov
adc
xchg
push
nop
pop
icebp
cmps
sbb
xor
cmc
sub
into
mov
pop
push
mov
sbb
(bad)
(bad)
call
or
cld
jecxz
icebp
push
sar
sub
jle
fsubrp
inc
jg
cs
in
test
cmc
push
push
sbb
push
cs
(bad)
call
inc
clc
xchg
repnz
aas
pop
in
gs
stos
scas
lock
in
jae
(bad)
mov
test
xor
jmp
mov
(bad)
(bad)
cmp
jne
jp
dec
cwde
jmp
pop
out
push
ret
ss
sub
fwait
sub
ds
xchg
xchg
idiv
fcmovne
mov
jne
jle
aam
clc
jae
into
add
sar
sti
ds
loope
cmp
mov
jg
sar
push
jnp
out
xchg
outs
sbb
jmp
cli
(bad)
cmp
retf
sti
fdivr
jle
xchg
push
clc
jns
sbb
push
push
lods
cmp
jmp
(bad)
(bad)
jmp
loope
xchg
imul
cmp
dec
out
dec
dec
inc
(bad)
jnp
ss
add
push
fcomp
nop
xchg
and
shr
dec
xor
(bad)
jge
and
not
adc
out
pop
xchg
popf
mov
rcl
mov
fild
loopne
out
ins
loop
jp
push
sub
sahf
(bad)
dec
cld
seta
ja
test
mov
push
cmp
(bad)
call
stc
xchg
push
xor
mov
or
or
adc
popf
inc
popf
inc
inc
test
fwait
jb
jmp
sahf
(bad)
(bad)
(bad)
jmp
add
into
jns
arpl
adc
cmp
sub
xchg
dec
shl
and
(bad)
(bad)
(bad)
push
les
int3
add
mov
popf
sti
inc
mov
sbb
push
fld
ins
das
push
mov
(bad)
std
ret
mov
(bad)
aas
pop
mov
push
xchg
inc
dec
rcl
(bad)
(bad)
(bad)
(bad)
call
inc
inc
pop
shl
aam
shld
fwait
popa
push
and
push
test
outs
dec
pop
ss
(bad)
(bad)
jg
call
mov
arpl
mov
mov
push
and
in
push
test
inc
xor
(bad)
and
mov
fst
or
xchg
jb
sub
outs
movs
and
mov
aam
pusha
sbb
or
(bad)
call
inc
in
inc
pusha
lahf
loop
movs
out
scas
pop
inc
adc
mov
shl
bound
sti
(bad)
(bad)
cmp
iret
xchg
out
mov
popa
sub
in
cwde
pusha
xchg
cmp
fwait
dec
jmp
pusha
out
or
(bad)
outs
xchg
adc
pop
add
(bad)
(bad)
(bad)
mov
dec
into
xor
dec
xchg
icebp
inc
cmp
adc
fs
inc
inc
in
(bad)
(bad)
dec
and
pop
push
das
jge
inc
and
xchg
stos
pushf
jb
fwait
imul
fdivr
inc
jmp
mov
sub
push
clc
jecxz
ds
leave
add
test
xor
push
or
push
scas
test
movs
mov
and
loope
es
push
test
mov
aas
adc
pop
push
cdq
inc
clc
(bad)
(bad)
dec
movs
or
push
add
rol
ins
iret
cmps
ret
imul
shl
push
repz
lea
nop
jmp
cs
pushf
btc
sub
les
(bad)
(bad)
(bad)
jmp
js
push
push
aaa
mov
jp
pop
pop
dec
pop
int3
xchg
bswap
add
cmps
pushf
and
cli
scas
inc
pop
mov
shl
pop
mov
jmp
fisubr
dec
push
push
push
retf
cmps
dec
push
cmps
rcl
aam
jle
add
call
push
icebp
cmp
je
repz
mov
adc
xchg
xor
add
adc
mov
adc
ds
dec
cmp
ret
out
loop
push
sar
rcl
enter
mov
cs
leave
out
push
shl
in
lods
jge
fisubr
inc
or
and
jl
imul
or
cmp
(bad)
(bad)
call
les
add
retf
sub
pop
sub
sub
shl
cmc
sar
(bad)
(bad)
(bad)
mov
pop
movs
mov
sbb
mov
arpl
push
call
(bad)
(bad)
(bad)
call
pop
arpl
cmp
(bad)
fdiv
int3
cmp
rcl
mov
pop
cmps
test
pop
ins
inc
mov
ret
ret
pop
fimul
sub
mov
jbe
cmp
(bad)
mov
rcr
imul
in
jne
sbb
jne
or
pop
imul
mov
jmp
dec
test
(bad)
xchg
or
dec
inc
stc
push
div
xchg
cld
in
cld
das
shl
aas
enter
fwait
div
aam
adc
ja
jmp
add
and
pushf
push
sbb
mov
mov
in
jmp
sets
clc
sbb
push
dec
ret
cmps
fs
add
(bad)
(bad)
(bad)
inc
add
push
jb
retf
pop
ror
nop
(bad)
mov
push
aaa
add
out
cmp
or
or
ins
inc
retf
fild
bound
push
inc
aaa
inc
test
push
dec
cli
mov
mov
test
in
(bad)
inc
pop
sbb
mov
cmps
scas
xchg
lea
pop
sbb
mov
call
arpl
test
(bad)
jo
xchg
in
mov
inc
(bad)
out
popa
(bad)
(bad)
(bad)
inc
adc
or
push
retf
pop
call
add
ret
inc
(bad)
(bad)
(bad)
jmp
mov
xor
xlat
addr16
sub
repz
push
push
inc
fs
sbb
imul
(bad)
jmp
aaa
mov
jae
adc
pop
idiv
pop
es
xchg
das
mov
(bad)
(bad)
(bad)
jmp
adc
push
cmp
sub
sti
(bad)
mov
sub
enter
mov
cmp
(bad)
(bad)
(bad)
in
lods
(bad)
daa
pushf
jge
push
mov
(bad)
pop
repz
mov
ds
(bad)
jg
jle
mov
sub
sub
push
jne
retf
scas
cli
(bad)
dec
mov
nop
nop
(bad)
mov
xor
scas
jge
stc
pop
sbb
mov
sbb
out
enter
(bad)
call
add
cmp
push
ja
jno
pusha
ins
imul
repnz
bound
sbb
popa
mov
or
(bad)
jmp
movs
cmp
add
xchg
or
jbe
push
add
sub
jmp
mov
lods
mov
mov
jbe
fisttp
xor
pop
mov
cmc
xor
and
leave
xchg
(bad)
(bad)
dec
inc
xchg
cmp
mov
hlt
loope
(bad)
mov
mov
mov
cmp
(bad)
(bad)
(bad)
call
test
rol
jnp
hlt
inc
pop
out
repnz
dec
inc
add
movs
pop
jg
(bad)
inc
xor
mov
lods
out
into
vpmaxub
mov
into
xchg
dec
inc
and
jns
pop
icebp
(bad)
dec
cmp
in
repnz
adc
sbb
and
sub
jae
movs
xor
(bad)
jmp
xor
or
(bad)
loope
fdivr
je
push
xchg
add
jmp
pop
lods
(bad)
inc
jno
ds
aaa
cmp
test
enter
adc
cmp
stos
sar
mov
or
push
mov
(bad)
fmulp
sbb
lods
fdiv
(bad)
dec
lock
cld
(bad)
adc
xlat
daa
xchg
push
push
adc
xchg
push
pop
das
xchg
cmp
bound
and
push
mov
(bad)
(bad)
(bad)
cli
(bad)
xchg
jmp
std
and
sbb
cwde
jp
mov
mov
leave
(bad)
sub
(bad)
(bad)
(bad)
cmp
bnd
mov
(bad)
xor
dec
xor
mov
mov
mov
pop
mov
(bad)
mov
mov
jb
dec
mov
mov
mov
test
dec
int3
xchg
and
or
and
mov
sub
imul
(bad)
(bad)
(bad)
push
jnp
dec
cmp
into
pushf
adc
test
aad
cmp
rcr
push
pop
sub
pop
retf
retf
(bad)
(bad)
call
jb
add
rol
dec
xchg
cmps
(bad)
dec
ficom
shl
test
fcomip
lea
(bad)
jl
xchg
arpl
sub
mov
into
push
test
call
jg
dec
and
mov
jp
jge
outs
push
mov
pop
sbb
(bad)
(bad)
call
ds
jne
pop
mov
inc
scas
xor
in
mov
fcom
imul
retf
or
cmp
std
std
or
xchg
adc
pop
or
push
mov
dec
test
jne
loope
sbb
cld
in
jg
sbb
mov
hlt
sar
(bad)
push
sub
ins
push
ds
xchg
scas
fsubrp
pop
sahf
xchg
fwait
adc
scas
mov
inc
repnz
in
mov
xor
js
les
test
and
(bad)
inc
pop
(bad)
or
sub
mov
sbb
aaa
or
xlat
xchg
hlt
jne
(bad)
(bad)
call
fisttp
inc
je
mov
push
movs
call
dec
pushf
fucomi
call
jmp
test
(bad)
(bad)
(bad)
jmp
mov
or
(bad)
and
xlat
pop
sub
cdq
push
xor
shl
cmp
(bad)
call
(bad)
cmp
adc
lds
js
jno
(bad)
jmp
(bad)
imul
cmp
(bad)
mov
push
adc
adc
fcomi
push
(bad)
(bad)
(bad)
dec
pop
ss
aam
movs
add
cmp
mov
daa
mov
xchg
lods
in
popf
aaa
cld
(bad)
(bad)
mov
out
out
push
retf
outs
aad
add
ins
dec
adc
pop
push
fwait
(bad)
(bad)
(bad)
call
shl
pop
lods
stos
push
mov
ins
fidiv
(bad)
xor
retf
or
out
xchg
dec
(bad)
or
jns
fsub
les
cwde
fwait
fwait
pop
test
rcr
into
scas
or
sub
lahf
cmp
(bad)
in
shr
les
mov
dec
or
or
jmp
sub
aaa
fwait
jns
das
shl
clc
int3
(bad)
(bad)
jmp
mov
xchg
mov
arpl
inc
ficomp
mov
push
sub
(bad)
inc
xor
test
icebp
pop
adc
mov
jo
ror
sar
jmp
shl
call
ds
pushf
lds
lods
out
daa
fsub
fidiv
(bad)
(bad)
call
cmp
into
bound
and
fdiv
xchg
adc
pop
cmps
pop
push
int
shl
(bad)
jg
xchg
or
push
xchg
and
sub
stos
inc
fld
mov
jp
fsubr
fsincos
adc
imul
or
push
mov
mov
push
out
dec
fisttp
mov
sub
sbb
mov
jge
test
mov
mov
test
(bad)
(bad)
call
loope
pop
jl
sar
cmp
fidiv
out
jae
xchg
test
dec
and
das
clc
jmp
jl
clc
sub
mov
int
int
xor
cmps
and
call
cld
pop
push
xchg
xchg
fld
gs
xchg
arpl
int
and
inc
pop
out
mov
jmp
in
cmp
mov
aas
rcr
fidivr
mov
(bad)
(bad)
(bad)
call
imul
rcl
lea
adc
and
loope
idiv
iret
test
xchg
out
cdq
pushf
inc
(bad)
push
jae
pop
jl
adc
fwait
xchg
outs
cli
(bad)
mov
jecxz
push
xor
mov
push
das
imul
(bad)
(bad)
(bad)
(bad)
in
and
cdq
mov
ds
push
mov
inc
loop
jbe
test
jecxz
and
in
dec
fpatan
inc
movs
stos
(bad)
clc
(bad)
(bad)
jmp
stos
sbb
repnz
lea
das
push
mov
cmps
rcl
jmp
xor
pusha
pop
(bad)
fnstenv
lea
mov
push
enter
cs
push
push
fwait
and
fstp
(bad)
aam
mov
(bad)
(bad)
push
mov
daa
mov
out
enter
out
jmp
cdq
popf
xchg
inc
cmps
push
outs
bound
(bad)
inc
cdq
repz
adc
mov
cmp
arpl
loop
push
ret
stos
mov
mov
dec
mov
sub
ror
cmp
outs
enter
fwait
cmp
(bad)
jmp
cmp
and
dec
call
ins
fldenv
data16
leave
add
(bad)
(bad)
jmp
jo
push
jne
jbe
sbb
xlat
jae
or
pusha
mov
adc
or
lahf
(bad)
std
jle
and
add
adc
pusha
mov
retf
push
(bad)
(bad)
(bad)
mov
cld
aaa
fldenv
inc
loop
push
retf
das
mov
dec
adc
add
mov
mov
(bad)
lds
rcr
(bad)
call
jle
outs
imul
cmp
xchg
jnp
(bad)
jg
mov
adc
jo
xchg
cli
in
clc
add
cld
aad
pop
(bad)
(bad)
(bad)
(bad)
call
fidivr
sti
imul
mov
push
hlt
sub
loopne
sbb
iret
jecxz
mov
pop
aas
sbb
(bad)
(bad)
(bad)
jmp
xchg
les
rol
and
aad
scas
bound
es
inc
fxch
nop
into
push
std
(bad)
jmp
adc
xor
mov
mov
add
jmp
out
in
loope
dec
hlt
repnz
sub
jae
pusha
in
mov
add
cli
in
inc
(bad)
lahf
cmp
dec
dec
xor
ret
push
cmps
test
jo
inc
cmps
in
add
push
add
xchg
aas
cmp
ss
cld
dec
sti
xor
pushf
je
mov
push
pop
or
fistp
inc
xchg
inc
ret
leave
les
push
dec
dec
jae
adc
xchg
dec
adc
and
das
mov
and
inc
ds
cmp
xor
dec
jmp
out
mov
out
lock
push
fistp
out
int3
(bad)
(bad)
mov
pop
lods
les
clc
xchg
mov
cmps
shl
inc
inc
sub
and
call
pop
je
jmp
cmps
test
bt
xchg
mov
jge
ins
inc
pop
adc
daa
popf
fdiv
retf
jbe
mov
jmp
sahf
xor
imul
or
push
push
out
movs
pop
sub
aam
stos
pushf
cli
(bad)
(bad)
(bad)
(bad)
call
xor
adc
je
mov
(bad)
push
stc
arpl
mov
xor
xchg
or
pop
sahf
in
and
(bad)
(bad)
(bad)
call
les
das
xor
cmps
repnz
out
cwde
repz
push
(bad)
(bad)
jmp
mov
sub
test
dec
push
mov
pop
push
out
lea
(bad)
(bad)
call
dec
mov
add
dec
enter
xchg
xchg
xchg
xchg
mov
test
(bad)
(bad)
(bad)
cmp
retf
mov
js
dec
xor
add
xchg
scas
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
pop
call
fdiv
jecxz
xchg
out
sub
sub
gs
or
and
or
push
pushf
out
xor
sti
(bad)
loopne
icebp
mov
iret
(bad)
(bad)
mov
in
out
inc
sbb
mov
(bad)
sbb
ds
fild
fcomip
(bad)
jmp
ret
push
cdq
mov
jnp
les
scas
dec
std
in
lock
(bad)
(bad)
(bad)
jmp
mov
outs
pop
dec
jp
sub
loope
sub
dec
and
xchg
mov
call
data16
js
retf
fnstcw
pop
pop
(bad)
jg
dec
sub
popa
in
enter
xadd
mov
pop
push
in
xchg
mov
call
jne
ja
int
data16
inc
in
xchg
xchg
stc
mov
ins
dec
xor
ja
inc
xchg
(bad)
(bad)
(bad)
push
repz
adc
test
sbb
sub
push
pushf
mov
cmps
leave
mov
(bad)
mov
ss
cwde
dec
out
inc
pop
sub
js
sar
push
sbb
nop
mov
cs
sbb
std
push
jmp
or
sub
and
add
(bad)
call
sti
dec
mov
cmp
rcr
mov
sub
push
add
mul
retf
mov
xchg
dec
xchg
adc
xchg
push
loop
(bad)
(bad)
(bad)
jmp
push
push
cdq
cmp
adc
enter
inc
mov
adc
jne
push
aam
cmp
and
(bad)
push
leave
sbb
dec
add
(bad)
jb
das
push
jmp
sbb
pop
jecxz
lock
stc
jecxz
xor
lods
pop
fstp
mov
ja
nop
(bad)
(bad)
(bad)
(bad)
stc
jo
xor
inc
sub
call
aam
xor
sbb
int
cli
jmp
inc
mov
push
cmp
adc
pop
mov
mov
dec
(bad)
clc
inc
mov
(bad)
dec
adc
rcl
sub
pop
mov
mov
xchg
rcl
sbb
jno
(bad)
push
and
adc
ret
mov
aam
push
xchg
lea
jb
ret
pop
and
inc
sub
xor
mov
jno
dec
mov
repnz
es
out
test
pop
jl
lods
jnp
sub
ret
(bad)
(bad)
(bad)
dec
and
mov
adc
push
pop
xor
cmps
jmp
bound
in
add
mul
scas
jnp
push
mov
push
out
daa
cs
sub
fsub
arpl
inc
xchg
test
adc
mov
add
(bad)
call
push
add
inc
in
mov
dec
push
pop
inc
dec
push
retf
fmul
push
push
hlt
(bad)
(bad)
jmp
jae
pop
shl
xlat
cmp
ja
fnsave
aad
cmp
push
das
ins
adc
inc
cmp
mov
dec
inc
mov
and
lds
pusha
dec
cwde
or
(bad)
(bad)
inc
xor
scas
daa
xor
pop
call
repnz
sub
ret
(bad)
jg
or
or
jns
sub
jb
add
and
adc
push
(bad)
(bad)
inc
and
test
add
dec
pop
xchg
cmp
xchg
iret
mov
cmp
mov
(bad)
(bad)
call
mov
xchg
and
adc
cli
std
(bad)
stos
daa
lds
rol
ja
adc
aad
(bad)
(bad)
call
imul
je
add
fsubr
out
jl
scas
cmp
sbb
cmp
ins
ret
retf
(bad)
or
cmp
mov
sti
push
aam
enter
fst
mov
adc
xchg
mov
xor
cmps
mov
mul
in
mov
scas
icebp
jmp
paddd
call
(bad)
mov
out
(bad)
jmp
clc
pushf
bound
test
push
mov
ret
lea
xchg
mov
pop
adc
xor
bound
bound
(bad)
inc
sub
sub
xchg
or
pop
or
clc
xor
mov
popa
inc
cmp
jmp
(bad)
push
outs
or
mov
daa
in
fldcw
(bad)
(bad)
(bad)
call
movs
xchg
add
mov
popa
dec
inc
and
add
dec
lods
cmp
mov
inc
xchg
add
adc
dec
xor
pop
icebp
cmps
push
loopne
adc
out
push
xlat
loope
add
or
repnz
(bad)
push
cld
fs
stc
mov
repz
cld
lds
movs
outs
xor
and
jl
xor
push
std
sub
xchg
in
and
xor
sbb
adc
mov
xchg
ins
pop
pop
ficomp
loope
push
bound
je
add
jl
(bad)
(bad)
(bad)
fbstp
xor
xchg
ja
leave
cwde
test
xor
adc
adc
pusha
mov
jmp
xchg
mov
movs
sub
inc
push
xchg
lds
add
cli
cwde
movs
icebp
call
inc
xchg
jbe
xor
lea
xchg
xlat
movs
cmp
scas
(bad)
(bad)
(bad)
fisubr
jae
jl
cmp
in
mov
repz
jnp
scas
or
fstp
(bad)
(bad)
cli
add
aad
jp
lods
movs
into
push
add
fbld
retf
push
inc
pushf
test
jmp
push
lods
bound
ja
dec
cmc
xlat
push
mov
mov
lea
mov
(bad)
(bad)
dec
fnsave
inc
repnz
out
jne
pop
lahf
sbb
inc
xchg
pop
pop
dec
push
test
mov
sub
jmp
add
mov
jmp
xor
mov
rcl
adc
cdq
xchg
cmc
fld
repnz
sub
or
call
or
jmp
jne
jns
dec
adc
(bad)
(bad)
(bad)
jns
out
add
aas
push
adc
sub
pop
test
xchg
cmp
xor
(bad)
push
mov
loope
xchg
or
rol
mov
pop
push
jmp
ins
push
fisub
inc
cs
xor
aam
or
stos
aas
(bad)
(bad)
(bad)
(bad)
fld
scas
inc
aas
icebp
addr16
jg
in
cmc
int3
xchg
xor
test
xor
xor
xor
scas
out
(bad)
(bad)
lds
shr
adc
test
fstp
mov
call
and
ja
stos
in
sbb
lods
xor
mov
ror
cmc
(bad)
(bad)
jmp
and
into
(bad)
push
inc
add
push
mov
inc
cld
rcr
sbb
fistp
push
cdq
imul
lods
and
call
nop
pop
xchg
pushf
in
inc
dec
xchg
in
cmp
(bad)
(bad)
(bad)
dec
and
push
jl
sub
adc
pop
inc
xor
sti
mov
(bad)
(bad)
(bad)
(bad)
ds
call
ret
pop
outs
call
sbb
push
xor
or
and
and
(bad)
(bad)
dec
dec
add
and
push
xchg
mov
ror
rcl
punpcklbw
sbb
push
in
(bad)
(bad)
jmp
sub
xchg
jmp
adc
or
add
pop
mov
dec
jno
(bad)
(bad)
(bad)
(bad)
call
or
rcl
add
mov
(bad)
popa
xor
in
push
jb
aam
push
sti
inc
cmps
dec
(bad)
(bad)
mov
test
pop
jle
sub
cmp
xchg
sub
movs
dec
call
sbb
jmp
shl
adc
adc
dec
add
lock
inc
dec
and
aam
(bad)
push
(bad)
(bad)
(bad)
imul
xor
cmp
repz
out
(bad)
sbb
or
pop
lods
jmp
jge
ds
mov
xor
push
xchg
aaa
mov
fdecstp
(bad)
sbb
ret
aaa
addr16
mov
das
gs
(bad)
(bad)
(bad)
(bad)
jmp
cs
push
out
mov
xchg
ror
fdivr
mov
jo
data16
push
js
adc
(bad)
call
repnz
dec
mov
imul
push
lods
ror
push
and
ins
xchg
dec
inc
mov
dec
jnp
or
sub
mov
jp
mov
arpl
inc
sub
ret
call
mov
adc
xor
push
out
out
jg
(bad)
(bad)
(bad)
push
mov
ffree
adc
adc
fucomp
and
mov
adc
ret
adc
add
mov
xchg
jp
mov
fdivr
mov
xor
call
and
sub
xor
lods
mov
dec
push
hlt
jae
push
or
sub
dec
dec
pop
inc
xchg
js
(bad)
(bad)
(bad)
(bad)
cmp
inc
and
sub
mov
sub
sbb
jl
fst
pop
push
sbb
(bad)
(bad)
push
bndldx
push
test
dec
ds
dec
loop
xlat
in
iret
pop
(bad)
push
inc
mov
cmps
(bad)
fld
mov
mov
out
sbb
xor
cwde
popa
test
inc
cmp
push
cmps
bound
or
push
push
xor
push
(bad)
inc
jbe
aam
popa
ret
mov
ins
jl
inc
in
push
es
ficomp
stos
fs
(bad)
call
push
push
enter
iret
dec
xchg
xor
xchg
es
es
cmps
dec
push
mov
mov
(bad)
call
movs
adc
inc
cmps
fs
fnstcw
std
xlat
aas
sub
mov
add
sahf
xchg
push
xchg
jae
mov
or
or
xchg
jae
lds
mov
(bad)
call
je
repnz
test
xor
pop
ins
pop
dec
push
xchg
pop
cmp
data16
cld
(bad)
jmp
jmp
lahf
sub
push
push
cmp
aaa
(bad)
jmp
fmul
stos
pop
(bad)
push
mov
mov
repz
in
pushf
repnz
ret
in
sbb
lock
push
rol
es
sbb
icebp
jmp
out
in
cld
(bad)
(bad)
call
mov
sbb
xchg
xchg
arpl
ds
clc
pop
fs
jno
(bad)
(bad)
inc
push
loope
pop
dec
adc
daa
shl
icebp
mov
or
jo
into
or
xchg
push
dec
and
fsub
popa
xor
and
scas
clc
dec
pop
adc
sub
stc
retf
or
inc
sub
mov
(bad)
(bad)
(bad)
call
lds
xor
in
pop
lea
jns
sub
inc
mov
mov
(bad)
fcmovbe
adc
cld
loope
jb
adc
popf
into
hlt
sbb
jg
(bad)
xchg
push
stc
shl
fist
dec
xchg
rcr
fisttp
out
ja
repnz
mov
sbb
jg
mov
retf
jecxz
jns
movs
out
lods
mul
outs
lock
lds
(bad)
dec
mul
xchg
(bad)
xor
add
lods
jns
inc
inc
es
adc
jns
dec
push
push
push
mov
xchg
je
jg
cmp
repz
add
push
(bad)
jmp
cs
jmp
jge
mov
mov
je
jmp
add
mov
fisub
push
fcos
inc
or
push
rol
add
add
jecxz
sahf
mov
and
cld
movs
mov
mov
add
(bad)
(bad)
jg
pushf
mov
xchg
inc
shr
cmp
mov
add
es
nop
push
or
cld
jg
out
pop
xor
jecxz
in
and
add
and
(bad)
(bad)
(bad)
inc
push
dec
mov
stos
push
add
out
inc
mov
add
(bad)
(bad)
(bad)
jmp
retf
ror
bound
xor
cld
retf
dec
daa
rol
mov
jb
ret
pop
cmp
sbb
jl
or
dec
push
or
fist
xor
cdq
gs
jp
(bad)
(bad)
jmp
or
mov
shr
stos
mov
sub
lahf
jg
out
xor
(bad)
inc
pushf
je
sbb
inc
nop
out
ror
and
xor
dec
pop
js
sahf
loope
(bad)
(bad)
jmp
inc
sar
xor
popa
pushf
sbb
jno
mov
push
pop
cmp
jbe
leave
push
inc
(bad)
(bad)
(bad)
dec
inc
pop
sub
or
imul
sbb
jecxz
add
int3
mov
std
pop
pop
daa
mov
jmp
stos
movs
and
and
sbb
jge
pop
scas
xchg
dec
push
ins
loop
call
jecxz
or
call
mov
xchg
cmp
sahf
(bad)
dec
sbb
push
dec
xor
sub
leave
and
or
or
mov
(bad)
jmp
pop
jns
daa
test
and
retf
pushaw
ret
in
mov
adc
mov
jmp
jmp
cwde
ins
movs
neg
xchg
mov
inc
xchg
or
pop
sbb
mov
jmp
shl
cmp
jo
iret
mov
rcl
adc
sub
data16
(bad)
jg
or
xlat
mov
jl
jns
lods
popa
test
sub
(bad)
(bad)
(bad)
jmp
push
push
and
in
pop
push
inc
cwde
test
xchg
mov
mov
(bad)
(bad)
inc
mov
dec
(bad)
jmp
add
daa
out
rol
dec
sbb
and
(bad)
(bad)
jmp
adc
scas
aam
and
xchg
stc
in
adc
cmc
push
test
cmc
ret
dec
(bad)
repnz
xchg
or
pusha
xchg
sub
jecxz
push
sbb
cli
imul
outs
(bad)
(bad)
mov
dec
jle
and
mov
push
sbb
jp
(bad)
(bad)
call
mov
out
(bad)
or
(bad)
lds
mov
sti
das
inc
daa
cdq
and
out
xchg
mov
std
out
pop
out
mov
scas
pop
fwait
pop
xchg
push
je
inc
and
mov
daa
push
push
loope
(bad)
(bad)
(bad)
jmp
shr
sub
rol
lds
dec
adc
push
cmp
loope
sbb
(bad)
(bad)
inc
cmps
loope
xor
cmp
inc
nop
add
imul
rcl
ret
cmp
(bad)
(bad)
mov
cmp
ror
call
or
or
fnsave
mov
inc
mov
aas
ds
xlat
adc
push
int3
call
test
mov
movs
sahf
add
pop
out
cmp
(bad)
push
inc
jg
mov
and
add
mov
mov
xor
(bad)
jmp
jo
fcomp
scas
stos
fdiv
cmps
fs
xchg
pushf
and
xchg
imul
(bad)
mov
dec
jo
pop
aaa
loope
test
jl
mov
pusha
mov
push
fwait
scas
jne
jmp
(bad)
push
stc
ret
cmp
sub
add
out
sub
mov
(bad)
out
clc
pusha
add
repz
xchg
in
pop
inc
inc
dec
(bad)
(bad)
jmp
fstp
inc
aad
lds
add
fs
and
aas
xchg
cld
(bad)
call
retf
push
jne
cmp
jge
push
mov
jbe
cwde
aaa
xchg
(bad)
(bad)
dec
adc
mov
(bad)
xor
xlat
mov
out
jl
test
add
(bad)
call
adc
sub
xchg
mulps
mov
jmp
push
dec
imul
in
jmp
loope
scas
inc
inc
inc
ror
push
push
mov
cwde
add
xor
shl
dec
cmps
sub
sbb
cmp
adc
inc
cli
(bad)
(bad)
jmp
cmp
or
push
xor
iret
xchg
ret
cmps
sbb
mov
jp
jg
test
add
(bad)
shl
or
sub
mov
dec
cmp
and
and
mov
fdivrp
in
mov
jns
sbb
cmc
inc
add
(bad)
(bad)
jmp
sub
mov
dec
jno
popf
stos
xor
stc
pop
and
adc
mov
mov
push
jbe
push
xor
xchg
sbb
inc
push
xor
dec
data16
je
fxtract
dec
push
inc
xor
out
adc
in
jmp
fdivr
pop
sbb
mov
xchg
sbb
adc
into
add
fdiv
pop
jle
inc
xor
std
mov
sbb
pop
sbb
adc
aaa
ret
mov
inc
stc
scas
loop
(bad)
mov
jmp
inc
gs
xchg
sbb
push
addr16
(bad)
(bad)
(bad)
mov
rcl
int3
ins
les
mov
mov
fiadd
movs
test
arpl
fst
ss
leave
xchg
xchg
in
xor
push
add
mov
inc
ficom
mov
or
inc
dec
fist
cli
icebp
arpl
cmp
(bad)
(bad)
(bad)
jle
cmp
push
mov
jno
int
fiadd
push
jne
addr16
cmp
pop
(bad)
push
dec
ror
and
bound
push
test
popa
enter
adc
or
imul
push
inc
arpl
aam
js
repz
stos
imul
xor
mov
ficomp
xchg
ret
xchg
mov
xchg
pushf
mov
inc
mov
(bad)
inc
push
aad
mov
sub
add
repz
sbb
das
pusha
sbb
(bad)
mov
gs
cmp
test
mov
(bad)
(bad)
dec
(bad)
pop
sub
movs
aam
test
sub
ret
sub
(bad)
fild
jecxz
imul
imul
push
lds
leave
inc
(bad)
mov
dec
or
call
fist
sub
outs
mov
and
push
add
(bad)
(bad)
(bad)
(bad)
mov
cmps
mov
arpl
scas
add
dec
loop
les
(bad)
(bad)
sub
inc
loopne
jae
outs
sbb
and
mov
push
test
and
add
xor
pop
outs
inc
std
mov
inc
xlat
pop
bound
test
lahf
mov
jg
and
(bad)
jns
mov
pop
dec
mov
fcmovnbe
lods
cs
aad
adc
or
xchg
fs
xor
xchg
data16
fwait
cmp
mov
jmp
gs
ins
jno
add
and
loope
lock
jp
cli
imul
call
js
jp
pop
pop
sbb
cmp
dec
push
das
int3
test
(bad)
(bad)
push
mov
adc
ret
or
jecxz
movs
ficom
dec
mov
pop
cmps
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
lds
mov
aaa
jp
mov
lds
aaa
sahf
xlat
outs
(bad)
(bad)
(bad)
dec
ja
int3
mov
rcl
dec
xchg
cdq
jbe
jne
mov
mov
ret
loopne
rol
aas
jae
xchg
xlat
dec
cmp
sbb
shr
call
cld
jmp
ja
xor
or
inc
pop
fwait
out
bound
xlat
sti
jbe
(bad)
(bad)
inc
sub
mov
popa
lods
sbb
mov
fcomp
mov
or
das
cli
call
das
mov
jbe
push
rcr
pop
leave
js
mov
in
leave
imul
push
jne
in
pusha
jbe
and
(bad)
inc
sbb
push
fcomp
jle
je
repnz
xor
lods
jge
pop
hlt
xchg
(bad)
(bad)
(bad)
inc
lods
jno
fstp
dec
ret
fnstsw
dec
int3
push
mov
dec
rcl
pop
stos
mov
(bad)
(bad)
push
pop
ret
mov
cmp
xchg
xchg
add
test
adc
in
jns
(bad)
(bad)
jmp
enter
jns
loopne
scas
jbe
lock
inc
aaa
ja
mov
movs
scas
cmc
(bad)
(bad)
(bad)
push
repz
pop
push
hlt
or
test
mov
xor
push
retf
and
jae
or
(bad)
(bad)
(bad)
push
mov
dec
push
xor
dec
pop
(bad)
mov
jle
aas
push
popa
dec
in
and
mov
(bad)
fstp
push
jecxz
pop
cmps
xor
(bad)
mov
ret
data16
pop
mov
pop
out
or
push
(bad)
(bad)
(bad)
call
mov
fimul
mov
or
mov
inc
icebp
data16
cli
dec
dec
and
in
and
and
movs
cmp
and
adc
das
push
aas
psllw
and
es
inc
retf
pop
xchg
(bad)
cmp
call
mov
dec
std
xchg
push
mov
pop
mov
mov
(bad)
call
and
outs
adc
retf
mov
dec
clc
or
or
outs
inc
cdq
xchg
or
sahf
bound
sub
clc
mov
and
add
(bad)
jle
hlt
bound
sti
ins
iret
cmp
dec
clc
or
pcmpgtb
adc
test
xchg
dec
test
jo
add
jl
sub
outs
scas
(bad)
out
hlt
jmp
or
push
jne
lock
out
(bad)
inc
cmp
test
clc
ret
shl
popf
pusha
mov
pop
call
jl
call
pop
mov
test
inc
add
ret
mov
(bad)
(bad)
(bad)
cmp
pop
mov
dec
daa
xor
cmp
cmp
rcr
pop
out
inc
popf
jg
inc
jecxz
xchg
ins
stos
fstp
popa
outs
sbb
mov
xchg
aaa
push
and
xchg
int3
(bad)
xor
das
clc
icebp
jmp
cld
sub
fs
xor
push
out
pop
adc
sub
xor
test
(bad)
push
mov
mov
xor
xor
mov
mov
jge
idiv
rep
(bad)
(bad)
(bad)
call
test
and
(bad)
adc
idiv
xchg
scas
cmp
xchg
ret
or
das
cli
(bad)
push
or
shr
cmp
inc
pusha
add
lea
es
push
inc
sub
sub
sbb
fstp
and
push
or
(bad)
mov
call
stos
scas
rcr
ja
sbb
imul
push
jl
jle
(bad)
lds
sbb
loop
mov
mov
(bad)
(bad)
(bad)
call
gs
jmp
(bad)
in
pop
aas
je
dec
dec
fs
push
sar
add
cmp
dec
adc
xchg
sbb
adc
(bad)
lods
cs
fist
jnp
cmp
dec
xlat
ins
or
jnp
(bad)
adc
(bad)
jmp
xchg
push
jae
jp
cli
lock
(bad)
(bad)
jnp
mov
out
adc
jl
hlt
mov
sub
pop
in
xor
inc
push
sar
(bad)
(bad)
fist
push
fcmovnb
push
cmps
iret
fsubp
je
lods
mov
les
adc
pop
adc
(bad)
jmp
icebp
xchg
nop
mov
mov
jg
neg
mov
stos
mov
mov
lea
mov
(bad)
int3
sbb
(bad)
(bad)
(bad)
push
in
pusha
cmp
pop
ret
jecxz
ror
clc
dec
je
out
fdivr
cmp
call
clc
mov
or
stos
ret
mov
stos
fwait
inc
loope
(bad)
call
sbb
ror
push
out
sub
icebp
xchg
push
adc
add
cli
js
and
push
pop
dec
push
sub
movs
mov
call
push
dec
test
pop
pop
mov
out
adc
xchg
stc
jns
cli
int3
pop
dec
daa
test
aam
dec
shr
jle
xchg
jb
xor
inc
scas
call
(bad)
in
sbb
ds
or
loop
popf
lods
aaa
pop
test
(bad)
out
cli
sbb
xchg
xchg
scas
pop
push
fs
mov
shr
(bad)
(bad)
(bad)
cli
dec
js
lods
xchg
lds
test
(bad)
ret
mov
mov
test
mov
push
sbb
mov
add
add
xlat
jno
adc
les
and
mov
or
sbb
xchg
imul
adc
ss
mov
xor
(bad)
mov
out
int
fbstp
push
sub
in
mov
(bad)
jmp
push
fwait
test
push
frstor
push
fst
(bad)
sbb
xchg
dec
jg
pop
ud0
(bad)
(bad)
cmp
push
jp
movs
mov
pop
cld
push
cmps
fwait
or
cli
stos
lock
pop
in
sbb
fist
jnp
(bad)
xor
ret
add
push
add
retf
mov
lea
(bad)
xchg
and
(bad)
push
xchg
pop
clc
fs
in
cmps
jns
arpl
repnz
mov
mov
and
scas
in
jle
mov
test
and
dec
ficomp
mov
inc
inc
cmp
jno
jmp
mov
mov
call
mov
std
jp
(bad)
(bad)
mov
cwde
test
mov
adc
sti
sub
nop
sbb
js
and
dec
and
dec
inc
(bad)
imul
add
(bad)
out
mov
fisttp
mov
dec
popf
addr16
lock
repz
test
mov
(bad)
(bad)
(bad)
jnp
into
loop
cmc
push
add
ds
jns
es
mov
cli
fwait
pop
das
out
mov
mov
cmps
(bad)
mov
mov
test
mov
movs
sbb
outs
imul
aaa
outs
push
cmp
push
call
push
mov
punpckhdq
std
pop
in
add
or
add
xor
dec
push
xor
ret
shl
les
mov
(bad)
jg
movs
lahf
ret
(bad)
mov
push
leave
jl
xor
mov
nop
fcom
std
(bad)
call
mov
cmp
mov
dec
test
mov
adc
call
jge
loop
cmp
int3
dec
inc
(bad)
call
call
retf
das
les
mov
iret
or
enter
(bad)
push
xor
rcl
dec
aad
stc
int3
(bad)
(bad)
(bad)
call
pop
pop
cmp
out
sbb
(bad)
mov
cmp
fild
adc
scas
stos
sub
cdq
aam
(bad)
call
les
adc
fimul
data16
jmp
mov
jnp
mov
jmp
call
shr
dec
pop
push
mov
(bad)
jmp
mov
cmp
inc
stc
idiv
cmps
xor
call
jbe
in
sub
mov
xor
loop
(bad)
popf
(bad)
popa
pop
pop
(bad)
call
icebp
mov
sbb
pop
push
out
(bad)
jg
inc
jmp
cli
in
(bad)
cs
in
sub
movs
nop
xor
icebp
retf
mov
(bad)
mov
cmovg
and
popf
je
pop
dec
xchg
in
add
push
test
xor
pop
add
push
icebp
xchg
repz
(bad)
mov
test
jle
mov
push
pop
dec
inc
pop
inc
add
pop
outs
int3
lods
adc
(bad)
jmp
add
outs
fidiv
ret
mov
jge
fst
outs
pop
mov
out
(bad)
(bad)
call
movs
stos
lea
mov
jmp
dec
add
cmp
or
(bad)
mov
ins
inc
dec
ja
push
or
into
jne
xor
lea
push
(bad)
(bad)
(bad)
call
dec
dec
daa
clc
in
call
movzx
xchg
inc
test
psubb
xchg
(bad)
jmp
or
sbb
movs
jae
pushf
clc
sub
in
into
call
cld
(bad)
js
fld
dec
out
jle
xchg
cmp
in
cmp
leave
pop
mov
rol
jge
outs
jle
adc
dec
xor
ins
jae
in
iret
push
sub
addr16
(bad)
dec
dec
arpl
and
fcom
adc
mov
push
scas
cli
(bad)
fsubr
push
out
pop
(bad)
enter
adc
xchg
push
sub
xchg
push
fsubr
add
sub
cli
lods
xchg
test
inc
jae
icebp
(bad)
(bad)
cmp
xchg
(bad)
jbe
jbe
cmp
and
lahf
jae
fstp
mov
push
xchg
ror
nop
sub
jmp
call
in
jg
xchg
clc
arpl
movs
dec
movs
jle
(bad)
mov
(bad)
mov
sub
cld
(bad)
std
push
data16
push
int3
(bad)
sub
in
fdivrp
push
outs
push
(bad)
popf
popa
cmp
jg
(bad)
pop
sbb
mov
movs
cmps
adc
jo
cmc
mov
pop
(bad)
(bad)
(bad)
(bad)
fadd
out
retf
scas
add
test
lds
test
push
outs
push
(bad)
(bad)
(bad)
call
ret
stos
leave
cmp
icebp
fwait
cdq
sbb
pop
push
cld
sti
js
mov
ins
imul
(bad)
dec
ss
mov
sti
inc
adc
bound
push
pushf
add
xchg
pop
cmc
sbb
rol
xchg
mov
xchg
in
cli
push
(bad)
adc
inc
sahf
(bad)
xor
int
(bad)
mov
jle
push
es
popf
out
pop
and
sub
or
sahf
inc
push
add
inc
(bad)
(bad)
jmp
movs
retf
mov
sub
loope
call
das
inc
adc
(bad)
call
clc
and
stos
add
mov
jo
cmps
(bad)
call
in
jno
cmp
repz
lahf
ror
push
test
or
mov
dec
cmp
adc
mov
dec
loop
scas
sbb
aad
push
out
mov
xor
(bad)
(bad)
(bad)
push
outs
pop
shl
mov
lods
into
cmp
xor
imul
in
mov
(bad)
(bad)
call
and
bound
mov
cmp
inc
int
adc
jns
cmps
call
(bad)
(bad)
(bad)
jmp
and
adc
dec
xor
mov
std
lock
xchg
(bad)
mov
xlat
cmp
mov
(bad)
(bad)
fcomip
sbb
int3
or
cmp
add
retf
adc
dec
fwait
shl
mov
scas
push
lods
pop
cmc
push
push
cmc
cmp
cmc
(bad)
pushf
cmp
mov
mov
hlt
mov
lock
or
pop
pop
and
(bad)
pop
(bad)
(bad)
(bad)
call
pop
mov
xchg
fnstcw
adc
rcl
mov
xor
jmp
adc
mov
inc
movs
adc
jmp
jnp
pushf
dec
outs
push
pop
scas
adc
jae
dec
scas
clc
(bad)
push
loop
push
push
mov
fwait
fs
mov
ss
xchg
jb
ret
arpl
sub
imul
sub
and
push
jno
in
mov
sbb
(bad)
(bad)
(bad)
(bad)
in
sub
retf
pop
(bad)
mov
adc
mov
xchg
in
mov
pop
adc
xchg
(bad)
inc
inc
bound
sbb
popf
mov
fnstenv
inc
jne
ins
lahf
push
imul
cmps
dec
cdq
pop
and
popf
jne
(bad)
(bad)
inc
push
mov
push
cmp
dec
xchg
sar
jbe
jmp
(bad)
call
jns
pop
ret
addr16
and
dec
and
pusha
movs
cmp
jo
push
push
cld
mov
push
enter
and
test
sar
dec
pop
xchg
pusha
(bad)
push
xchg
pop
push
int
out
cmp
and
pop
dec
pop
xchg
ds
adc
(bad)
(bad)
(bad)
(bad)
push
outs
or
outs
adc
lds
popa
mov
mov
adc
adc
(bad)
(bad)
jmp
xor
lds
and
inc
cs
jmp
push
mov
mov
hlt
xchg
adc
(bad)
(bad)
jmp
arpl
cmps
fprem
mov
loope
cmps
xor
dec
std
out
push
cwde
adc
and
shr
stos
cmp
(bad)
call
sub
xor
fild
cld
pop
pop
sbb
and
sbb
in
scas
jg
(bad)
(bad)
(bad)
jmp
sbb
push
stos
add
or
push
mov
xor
dec
pushf
mov
jmp
neg
and
xor
iret
push
leave
mov
add
dec
(bad)
in
mov
xor
pop
es
data16
(bad)
jns
and
leave
mov
int3
ins
adc
xchg
(bad)
jmp
or
test
lea
sbb
pop
ss
dec
mov
fwait
call
lods
call
(bad)
outs
xchg
xchg
cdq
push
outs
mov
jno
mov
mov
or
retf
loopne
imul
out
pusha
adc
jecxz
add
xchg
xlat
(bad)
(bad)
(bad)
out
sub
mov
inc
mov
mov
sub
mov
mov
sbb
fs
(bad)
(bad)
jmp
mov
mov
lock
test
cld
fsub
out
loopne
rcl
jmp
repz
out
jns
mov
inc
lds
sub
(bad)
(bad)
(bad)
dec
test
sti
and
repz
adc
jle
xchg
sub
fidivr
cwde
mov
(bad)
call
xor
nop
dec
push
xor
pop
mov
pop
push
mov
xchg
addr16
push
xor
push
dec
xchg
shl
enter
dec
dec
movs
dec
pop
sahf
cmps
sub
(bad)
(bad)
call
js
add
mov
ret
mov
out
adc
mov
xor
sbb
push
std
dec
out
mov
loope
dec
pop
imul
mov
push
sub
in
jnp
shl
mov
mov
mov
cmps
pop
pushf
mov
jne
das
clc
jmp
add
dec
xor
or
sbb
jmp
push
lods
rcl
fild
pop
loopne
and
xchg
cdq
test
popa
es
push
ret
movs
cmps
mov
imul
(bad)
push
nop
cli
aam
(bad)
jmp
shl
push
rol
mov
fsub
inc
(bad)
(bad)
jg
loope
test
xchg
xlat
pop
scas
pop
fwait
outs
mov
adc
add
cwde
push
lods
jecxz
(bad)
(bad)
push
push
idiv
gs
xchg
xchg
or
lock
(bad)
(bad)
cmp
je
movs
xor
fild
xchg
fwait
pop
push
mov
jge
movs
mov
xor
push
xchg
xchg
jp
retf
loope
sub
(bad)
(bad)
in
jb
xchg
in
push
cmc
int
xor
cmps
dec
sub
sub
ret
cld
(bad)
(bad)
(bad)
jp
rcr
mov
cdq
lea
xlat
iret
iret
cmp
into
inc
sahf
loope
xchg
add
lsl
sub
(bad)
or
aaa
mov
sar
repz
std
loope
jmp
jnp
push
jnp
cdq
das
(bad)
shl
cmp
enter
(bad)
(bad)
(bad)
stc
inc
jecxz
sub
cdq
mov
(bad)
push
cld
xchg
xchg
lds
xor
in
(bad)
(bad)
(bad)
(bad)
mov
out
gs
dec
jmp
cmps
push
mov
jle
(bad)
fmul
(bad)
xchg
mov
(bad)
(bad)
call
idiv
pop
sub
pop
es
movs
sub
mov
pop
(bad)
(bad)
(bad)
jmp
add
mov
imul
pop
mov
sub
jl
ins
mov
pop
dec
xchg
adc
and
cmp
hlt
or
inc
xchg
push
adc
push
shl
shl
call
fdivr
ds
loop
or
ins
jno
mov
mov
loop
(bad)
jmp
movs
iret
lds
ja
mov
loope
clc
inc
lds
push
pusha
jns
jge
mov
nop
ret
shr
push
dec
cdq
xor
add
(bad)
mov
test
mov
aam
ins
lods
aas
fld
jle
cmps
(bad)
call
cmps
ins
popf
fwait
ss
fistp
out
mov
sub
bound
call
fmul
xor
inc
adc
std
cmp
(bad)
aaa
and
scas
iret
fidiv
mov
adc
xchg
xor
outs
ins
jns
jns
inc
jp
popfw
stc
jge
xor
jg
int
movs
pop
int3
aad
popf
or
inc
sbb
jmp
mov
dec
adc
das
jp
int3
dec
jnp
iret
aas
mov
pop
(bad)
(bad)
(bad)
(bad)
cmp
fstp
sar
jnp
(bad)
jo
div
cld
sbb
repz
and
nop
fwait
adc
ficomp
sub
stos
(bad)
(bad)
jmp
xor
push
gs
adc
mov
mov
cmc
(bad)
call
aas
xor
sub
mov
test
loopne
pop
and
cld
out
jl
mov
leave
pop
or
pop
and
mov
fbld
cli
xor
es
mov
mov
aaa
jmp
sub
(bad)
sbb
fwait
jae
stos
fiadd
fs
cmp
xchg
stos
(bad)
(bad)
(bad)
call
xchg
xchg
xchg
inc
shr
js
xchg
pop
push
push
call
cmp
adc
mov
call
inc
or
stos
mov
js
cmp
pusha
je
cs
cmp
push
xlat
push
pop
and
jb
sub
in
adc
loopne
jmp
sub
mov
scas
ret
dec
(bad)
push
mov
adc
jp
fstp
inc
cld
dec
fisttp
xor
push
adc
add
(bad)
jmp
sti
add
mov
js
mov
sub
pop
out
jmp
mov
jmp
jmp
hlt
mov
jne
pusha
xchg
jns
mov
mov
aas
clc
loope
mov
jp
loopne
mov
and
imul
test
pusha
ret
(bad)
(bad)
dec
xchg
ds
pop
jmp
and
or
repz
push
test
jmp
inc
fistp
mov
stos
sub
(bad)
(bad)
jns
push
dec
mov
pop
mov
aad
adc
loopne
retf
shl
xor
add
push
dec
inc
inc
test
dec
mov
adc
mov
(bad)
les
and
in
nop
nop
(bad)
(bad)
(bad)
jmp
ret
int
ins
fcmovb
pop
cmp
push
loopne
pop
pop
fidivr
adc
sub
and
xor
(bad)
(bad)
dec
(bad)
jmp
in
or
inc
rcr
mov
mov
addr16
pop
lea
jmp
cmp
xchg
adc
pop
jnp
jb
call
call
or
test
xchg
push
cmp
or
push
xchg
sub
test
clc
(bad)
jmp
dec
jae
sbb
(bad)
aam
repz
inc
dec
push
xor
(bad)
jmp
shl
repnz
mov
rol
jmp
push
xor
sub
shl
push
or
dec
mov
jmp
jmp
cli
fmul
mov
mov
push
sbb
(bad)
(bad)
jg
mov
adc
mov
sub
sahf
into
mov
push
adc
(bad)
jmp
pop
ins
mov
mov
pop
stos
sbb
pop
mov
mov
scas
or
(bad)
(bad)
(bad)
jle
dec
daa
push
ret
push
in
mov
push
gs
dec
jno
xchg
xchg
xor
adc
sub
(bad)
mov
sbb
adc
mov
add
gs
jmp
clc
pop
dec
xor
cmp
sbb
dec
and
lock
(bad)
mov
adc
and
cli
movs
add
bound
retf
gs
push
(bad)
(bad)
cmp
cmps
and
ret
cli
dec
sbb
popf
and
fs
jmp
inc
mov
adc
aas
cmc
inc
loopne
mov
mov
fbld
jecxz
cmp
sar
icebp
repz
das
dec
cmp
dec
add
idiv
out
test
js
mov
mov
call
ret
mov
jge
ror
sub
add
mov
add
(bad)
(bad)
inc
inc
adc
add
aad
sub
(bad)
jmp
mov
(bad)
(bad)
(bad)
dec
pushw
(bad)
jno
pop
popa
aad
lea
mov
push
pop
mov
ds
inc
out
pop
les
icebp
jo
jecxz
push
bound
and
mov
cmp
jecxz
or
(bad)
push
push
mov
repz
das
push
ficomp
jns
(bad)
nop
mov
es
jmp
jp
shl
jae
pushf
lods
add
adc
push
lods
popa
add
xor
(bad)
(bad)
(bad)
ds
idiv
cmp
(bad)
ja
sbb
sbb
adc
inc
cwde
and
push
pop
xchg
mov
(bad)
(bad)
(bad)
imul
mov
push
mov
clc
mov
jo
add
mov
(bad)
(bad)
(bad)
(bad)
clc
xchg
cmps
mov
outs
repz
cmps
mov
cmp
push
jmp
cli
scas
cmc
jl
lock
push
(bad)
(bad)
call
or
cs
mov
dec
pop
mov
push
mov
add
inc
and
lock
mov
jle
(bad)
mov
and
lea
loop
mov
xor
test
rcr
(bad)
dec
inc
pop
stos
xchg
add
(bad)
outs
jbe
pop
not
lods
std
mov
(bad)
(bad)
inc
or
cld
push
ret
xchg
dec
inc
mov
rcl
mov
sub
(bad)
(bad)
(bad)
cld
cwde
cmps
outs
data16
push
or
push
jmp
dec
ja
jp
or
pop
sbb
int
xchg
(bad)
(bad)
(bad)
jmp
sub
inc
xor
and
gs
jp
or
xor
mov
adc
or
ss
(bad)
(bad)
(bad)
jmp
push
out
sahf
js
push
add
(bad)
fistp
repnz
push
(bad)
mov
add
clc
ds
push
ret
gs
xor
or
sar
(bad)
(bad)
dec
push
fs
pop
mov
and
jmp
retf
mov
push
add
(bad)
(bad)
(bad)
(bad)
mov
cwde
leave
jl
push
cmp
pop
jg
and
call
das
or
mov
jmp
(bad)
(bad)
in
mov
sbb
cmp
sbb
pop
jmp
push
test
clc
mov
ret
sbb
(bad)
jmp
(bad)
push
sbb
fistp
mov
scas
mov
adc
cmps
adc
or
(bad)
(bad)
jmp
xchg
jo
push
inc
adc
push
lods
mov
das
mov
lahf
fisttp
push
movs
sbb
cmp
(bad)
(bad)
(bad)
call
xchg
leave
mov
imul
stos
cmp
dec
or
ds
pop
neg
(bad)
aas
sub
pop
xchg
and
adc
in
mov
and
arpl
mov
inc
call
push
fcmovu
stc
adc
gs
ins
lods
pop
sbb
ins
pop
push
popf
int3
add
movs
push
jmp
sbb
ins
(bad)
dec
mov
adc
ds
clc
ficom
push
push
xchg
sbb
adc
test
xor
adc
cmc
ja
test
(bad)
push
adc
pop
jge
mov
stos
je
nop
mov
and
pop
ins
add
(bad)
(bad)
(bad)
push
loope
jbe
retf
mov
sbb
pop
fadd
mov
rol
inc
dec
in
addr16
(bad)
(bad)
jmp
shl
push
jmp
dec
xor
mov
xor
cmp
clc
inc
(bad)
(bad)
(bad)
jmp
pop
cmps
or
mov
mov
rcl
je
fdiv
(bad)
(bad)
(bad)
dec
mov
pop
mov
fbld
inc
pushf
test
pushf
sbb
jl
mov
xchg
loopne
(bad)
jmp
sahf
lock
push
out
add
jecxz
xchg
stos
iret
movs
push
(bad)
pop
rcr
push
jg
sub
mov
mov
imul
es
loop
push
sub
jae
sub
xchg
(bad)
(bad)
push
daa
push
popf
sub
out
in
push
pusha
jnp
or
cld
repz
scas
cmp
idiv
(bad)
(bad)
(bad)
jmp
xor
push
add
and
ins
mov
rcr
ins
pop
fwait
mov
lock
push
call
sbb
das
push
push
out
dec
call
jge
(bad)
fadd
and
loop
sbb
pop
xor
data16
test
not
lods
xor
mov
aad
pop
inc
push
xor
mov
sub
stos
pop
fmul
icebp
adc
and
out
pop
inc
sbb
push
mov
mov
in
adc
(bad)
(bad)
jmp
mov
dec
(bad)
xchg
je
mov
pop
inc
fdivr
lods
lock
int3
push
and
mov
pop
mov
(bad)
(bad)
inc
ins
test
xchg
mov
mov
pop
out
push
dec
cmp
xor
(bad)
(bad)
(bad)
jmp
ret
or
ficom
and
call
xchg
and
jle
repnz
mov
(bad)
(bad)
push
xchg
icebp
inc
or
mov
and
pop
imul
jnp
inc
adc
ja
int
clc
(bad)
(bad)
fst
add
xor
daa
sub
jl
adc
pop
mov
add
pop
pushf
dec
fnstcw
out
push
or
sbb
iret
sbb
push
jl
xchg
aas
rol
jmp
mov
jb
add
mov
ds
xchg
jle
movs
fidiv
or
(bad)
dec
pop
xchg
stos
movs
dec
sub
test
mov
jmp
aaa
mov
in
les
aaa
(bad)
(bad)
(bad)
inc
out
inc
lds
push
jecxz
ret
(bad)
cmp
xchg
shl
xor
jmp
pop
adc
mov
mov
adc
adc
mov
(bad)
push
mov
arpl
sub
sub
gs
bound
push
mov
xor
(bad)
(bad)
inc
lds
jns
lods
cmps
imul
mov
cs
xchg
xlat
jbe
mov
jg
(bad)
gs
ins
jmp
add
pop
pusha
add
(bad)
call
imul
dec
pop
xchg
push
mov
sub
inc
mov
xlat
or
stc
mov
(bad)
(bad)
(bad)
dec
test
bound
mov
mov
cmps
push
cmp
into
xchg
cmp
push
ins
mov
(bad)
(bad)
(bad)
fisttp
retf
sahf
mov
and
lods
fwait
ins
in
pop
push
enter
retf
ins
cdq
sub
data16
ins
ja
clc
jmp
gs
jbe
fs
sub
push
pop
jecxz
outs
das
sub
aas
loope
call
dec
pop
mov
movs
sbb
adc
out
jb
dec
ret
adc
movs
outs
mov
hlt
mov
xor
test
ror
mov
(bad)
(bad)
push
mov
test
dec
mov
fwait
retf
es
fldcw
jne
mov
or
dec
(bad)
(bad)
(bad)
push
std
cmp
fdivr
ds
lods
cmp
xor
imul
dec
mov
data16
(bad)
rcr
(bad)
jmp
mov
leave
outs
mov
pop
in
and
mov
xchg
rol
jl
mov
push
in
or
jnp
div
mov
dec
(bad)
call
mov
in
xor
jmp
int3
dec
mov
cwde
cdq
mov
xchg
and
test
cmp
mov
mov
aam
jmp
pop
test
stos
cdq
dec
dec
inc
push
push
adc
inc
cmp
mov
(bad)
jnp
(bad)
ins
fimul
jmp
fnsave
ficom
repz
ins
loop
(bad)
(bad)
(bad)
push
cmc
aam
test
push
test
arpl
js
les
int3
pop
jae
or
loope
sahf
mov
(bad)
jg
gs
push
jle
mov
movs
add
xchg
div
cmp
push
(bad)
(bad)
(bad)
mov
les
push
mov
inc
mov
fsubr
dec
xor
imul
call
aaa
je
sbb
jmp
and
cs
(bad)
inc
jne
jbe
sub
push
jp
dec
bound
xchg
push
push
rol
dec
ror
fist
jecxz
fidiv
imul
pop
(bad)
(bad)
mov
in
gs
dec
dec
sub
cmp
and
adc
test
(bad)
(bad)
call
add
or
push
add
xor
cmp
ins
mov
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
sti
push
stos
push
dec
pop
xchg
mov
push
pop
inc
xor
cmc
adc
add
stos
xor
or
xchg
xlat
call
inc
lods
sbb
sbb
adc
jns
push
and
in
in
add
mov
test
popa
pushf
cmp
push
int3
ret
sbb
mov
test
sbb
jl
mov
add
jo
ja
and
bound
or
mov
(bad)
(bad)
(bad)
jmp
add
inc
push
and
rcr
jmp
jno
push
loope
and
inc
into
mov
inc
fist
xchg
cli
inc
(bad)
in
pop
jno
mov
(bad)
mov
cs
mov
sub
cmp
and
(bad)
jmp
dec
jne
test
cmp
neg
aam
sbb
jno
cmps
or
push
ss
sub
xchg
(bad)
call
xchg
pop
aam
sar
pop
mov
push
cmp
loop
imul
aaa
sub
pop
inc
mov
int
retf
inc
inc
pop
movs
mov
inc
cmp
sbb
(bad)
dec
mov
jge
sub
pop
add
ds
mov
popa
iret
mov
aaa
cli
dec
sub
js
mov
sub
inc
mov
je
je
jecxz
inc
xchg
cmp
pusha
sub
ret
cmp
sub
xor
push
cmps
(bad)
(bad)
(bad)
(bad)
aas
fisttp
out
adc
jle
add
fldenv
outs
jmp
cld
jns
pusha
call
retf
push
cld
call
mov
loope
lds
cmps
retf
clc
inc
jl
cdq
test
hlt
push
fdivr
jp
add
sbb
sub
pushf
(bad)
outs
(bad)
(bad)
call
imul
icebp
adc
xor
das
sti
out
xchg
xchg
jmp
(bad)
retf
in
dec
push
loopne
(bad)
dec
test
aam
js
jle
mov
test
push
iret
push
sbb
(bad)
test
(bad)
(bad)
mov
lock
ret
ror
stc
mov
imul
je
push
les
add
inc
clc
(bad)
std
ror
(bad)
jp
xor
cmovg
sti
push
jle
in
mov
sbb
jb
cs
mov
and
loop
and
scas
lahf
outs
repz
imul
fdivr
jmp
dec
jl
or
jo
dec
repnz
pop
pop
iret
js
adc
xlat
retf
(bad)
(bad)
(bad)
(bad)
cli
inc
push
out
pop
int
xor
(bad)
imul
xchg
loopne
jb
mov
ds
pop
loopne
(bad)
(bad)
push
cmc
outs
pushf
inc
stos
lds
hlt
imul
jo
mov
mov
xchg
dec
(bad)
sub
or
mov
(bad)
cld
(bad)
dec
in
mov
fcom
and
mov
xchg
cli
(bad)
(bad)
fild
jp
clc
jae
push
jg
sbb
lea
adc
jne
movs
xchg
test
icebp
push
and
cmp
pop
lds
hlt
inc
lahf
xor
das
fbld
inc
icebp
add
stc
inc
jge
dec
shl
(bad)
(bad)
(bad)
push
dec
movs
xor
mov
cmp
push
mov
adc
(bad)
sbb
sub
(bad)
(bad)
call
in
call
jnp
cmp
leave
(bad)
sub
mov
fimul
stc
cli
add
lea
dec
pop
or
xchg
inc
loope
scas
mov
jle
test
lods
cmp
mov
inc
(bad)
or
(bad)
(bad)
jmp
adc
cmp
cld
loopne
ss
frstor
ins
pop
adc
sub
sbb
jle
(bad)
(bad)
mov
pop
loope
repz
or
arpl
test
retf
pop
mov
and
cs
das
repnz
fsub
mov
stos
addr16
jmp
sbb
lahf
loopne
loopne
xor
ss
das
clc
aaa
cmps
and
mov
popf
push
(bad)
movs
arpl
push
das
adc
adc
clc
push
das
int3
inc
int3
inc
push
push
lea
sar
cmps
push
sbb
call
cmp
push
xchg
jno
nop
ret
and
test
cmp
(bad)
(bad)
cmp
faddp
jecxz
mov
mov
mov
jo
loope
dec
clc
(bad)
(bad)
sub
test
test
xor
outs
or
(bad)
int3
lock
outs
sbb
jno
ins
lock
cli
(bad)
cmp
push
(bad)
bound
push
push
adc
pop
push
dec
(bad)
(bad)
(bad)
(bad)
jg
or
popa
xchg
jecxz
jecxz
push
xchg
sub
xor
repz
cmp
add
or
int
add
fadd
(bad)
fcomip
mov
stos
mov
call
jge
mov
adc
mov
(bad)
push
pop
push
xor
int3
inc
(bad)
sbb
or
call
mov
push
xor
ror
enter
(bad)
(bad)
jg
push
fwait
repz
hlt
les
lods
addr16
fdiv
mov
jg
cmps
dec
call
sbb
or
movs
repnz
in
mov
dec
lea
and
fisub
call
cmc
push
js
cmp
xor
fcmovnb
xor
mov
loope
icebp
mov
cmp
jnp
pop
pop
lea
(bad)
(bad)
inc
lods
lahf
xchg
dec
inc
inc
lods
and
(bad)
es
sbb
das
cli
mov
test
stc
sbb
cmp
stos
fnstsw
mov
sbb
clc
ja
(bad)
call
inc
fist
and
(bad)
mov
outs
pop
cmps
pop
mov
and
ins
adc
mov
push
mov
add
jmp
mov
mov
movs
movs
fstp
jle
jmp
xor
aam
xor
bound
mov
mov
lods
push
fcomp
cmp
sti
inc
mov
outs
clc
jmp
mov
int3
pop
sbb
movs
sbb
movs
addr16
cmp
add
jl
push
sbb
(bad)
jmp
dec
pop
imul
push
aas
and
(bad)
pusha
jle
and
pop
into
mov
int
bound
inc
dec
fild
in
ja
push
in
inc
pushf
inc
cs
(bad)
push
mov
xor
test
xchg
(bad)
stos
add
(bad)
les
call
inc
sbb
lahf
mov
cmps
mov
xlat
fist
sar
outs
clc
jmp
jmp
push
cmps
inc
mov
fisub
lea
pop
(bad)
(bad)
call
and
lods
xor
cmc
lea
jns
inc
pop
inc
and
dec
inc
pushf
cmp
jmp
mov
sbb
push
jl
in
aaa
lahf
push
ficomp
inc
mov
mov
mov
cmps
movq
int
leave
and
adc
and
loop
repnz
jle
fdivr
inc
je
inc
mov
cmp
test
shr
mov
call
sub
aas
into
jb
mov
xor
and
push
mov
pop
or
pop
cmp
fst
adc
and
jns
cmovp
pop
aam
dec
es
push
cwde
call
cli
aad
test
pop
inc
pusha
movs
pop
test
btr
ins
and
(bad)
(bad)
(bad)
jmp
fldcw
fiadd
mov
(bad)
and
mov
jp
aad
bound
(bad)
(bad)
(bad)
sti
and
inc
dec
sbb
push
cmp
pushf
and
inc
or
xchg
xor
push
push
(bad)
(bad)
(bad)
call
mov
inc
jbe
arpl
mov
jbe
mov
pushf
dec
dec
xchg
or
lds
sbb
pop
push
inc
xchg
arpl
cmp
sub
(bad)
(bad)
ds
jmp
pop
add
in
mov
dec
sub
jge
(bad)
(bad)
jmp
or
or
add
sahf
enter
mov
shr
(bad)
xor
das
clc
(bad)
inc
push
cmp
pop
shl
push
lods
adc
dec
(bad)
(bad)
(bad)
push
repnz
out
das
sub
cmp
sub
push
inc
enter
lock
xchg
aam
cdq
fnstsw
out
cli
push
mov
sub
jg
test
xchg
sbb
cwde
cld
sub
(bad)
outs
(bad)
mov
push
pop
and
idiv
mov
(bad)
xor
sahf
retf
jns
clc
pop
test
sub
push
pop
(bad)
(bad)
mov
enter
dec
inc
test
push
push
test
aad
(bad)
(bad)
dec
pop
mov
cwde
stos
repz
pop
(bad)
shl
xchg
popf
aaa
and
sub
movs
movs
push
sbb
inc
push
push
dec
xchg
(bad)
jg
in
inc
call
xor
cmp
or
sub
(bad)
(bad)
(bad)
(bad)
cmp
xchg
push
and
popf
sub
or
jmp
imul
(bad)
call
add
fstp
jmp
das
pushf
and
arpl
adc
jl
mov
sub
(bad)
(bad)
xchg
cwde
xor
pop
test
sub
lock
fiadd
sub
push
sbb
(bad)
jmp
or
and
adc
cmp
and
leave
pop
es
int3
inc
add
dec
push
test
and
cdq
das
mov
pop
xor
lea
inc
data16
push
push
jmp
mov
mov
imul
loop
test
lds
call
in
test
push
sub
sub
cdq
jnp
mov
cld
jmp
and
or
data16
ins
in
xchg
mov
push
xchg
push
call
ja
mov
pop
in
inc
stos
inc
mov
jecxz
dec
iret
dec
fidiv
(bad)
(bad)
call
add
aaa
js
int
xor
cmps
arpl
int3
lds
and
int3
cs
stos
cld
mov
push
fcomi
dec
xchg
sub
cdq
dec
mov
inc
jbe
leave
and
imul
xor
xlat
ss
out
cld
(bad)
(bad)
(bad)
(bad)
jb
push
adc
or
cmp
in
test
test
cmp
pop
loopne
(bad)
aaa
dec
jae
cmp
and
stos
xor
fsubr
sbb
pop
hlt
pop
dec
lods
adc
cs
mov
and
dec
(bad)
(bad)
(bad)
call
cwde
push
jecxz
mov
push
aad
mov
nop
inc
aad
dec
int3
test
sub
(bad)
(bad)
(bad)
jmp
inc
bound
dec
cmp
and
or
mov
push
nop
and
sbb
ds
js
ror
add
dec
adc
(bad)
(bad)
(bad)
push
mov
icebp
or
pop
xchg
clc
push
mov
cs
jg
or
cmp
sbb
stos
xor
xor
inc
dec
mov
cmp
push
mov
and
and
nop
int
rcl
cld
(bad)
(bad)
call
je
out
mov
jmp
ja
inc
ret
stos
in
sbb
adc
(bad)
call
push
xchg
jge
and
sbb
and
push
or
dec
mov
inc
cdq
ret
xchg
inc
push
scas
and
outs
xchg
daa
add
mov
cmp
rcl
(bad)
(bad)
(bad)
(bad)
cmp
out
xor
test
cld
jnp
lahf
addr16
loope
movs
sub
mov
sbb
mov
push
les
inc
(bad)
(bad)
inc
and
push
fiadd
or
in
shl
movs
mov
jb
inc
retf
(bad)
mov
jb
dec
mov
test
pop
dec
jmp
(bad)
inc
iret
push
out
repnz
xor
sub
xchg
das
or
pop
cmp
aas
iret
repz
icebp
sbb
add
call
pushf
cmp
jg
adc
mov
lea
aaa
mov
leave
fstp
mov
ja
add
add
popf
call
mov
mov
xor
adc
xor
or
popf
and
sbb
jmp
pop
mov
jecxz
jne
xchg
sbb
mov
in
mov
xchg
retf
ds
imul
(bad)
call
ror
cwde
test
call
jae
into
pop
pop
xchg
loop
cs
and
inc
outs
(bad)
mov
push
xlat
xchg
dec
or
or
jmp
mov
sbb
stos
mov
dec
mov
or
addr16
and
(bad)
(bad)
jmp
pop
imul
pop
push
stos
dec
in
sub
push
push
(bad)
(bad)
(bad)
dec
cmc
popa
sbb
out
jg
cwde
xchg
in
push
arpl
dec
enter
inc
mov
jbe
sbb
aaa
sbb
mov
sub
push
shr
mov
inc
inc
push
jmp
xor
jle
add
dec
or
daa
dec
(bad)
(bad)
push
push
xchg
sub
adc
xchg
and
repz
push
dec
call
(bad)
xchg
xchg
test
pop
ror
sbb
push
xor
mov
(bad)
(bad)
std
ficom
les
int
iret
popf
push
movs
xlat
mov
jmp
inc
add
jmp
jnp
and
jecxz
pop
cmp
dec
or
sub
mov
jmp
adc
cli
push
cmps
mov
ins
out
cwde
pop
div
pop
outs
std
in
retf
out
enter
(bad)
push
xor
lea
pop
seta
jmp
hlt
jo
mov
mov
les
(bad)
(bad)
jmp
enter
fdiv
add
aam
stos
push
jl
gs
cmp
(bad)
(bad)
(bad)
jg
push
dec
cwde
dec
mov
aas
out
test
popa
nop
mov
jns
mov
hlt
out
jns
jne
mov
(bad)
(bad)
fistp
fwait
push
das
jecxz
test
scas
mov
call
xchg
inc
mov
lods
mov
movs
(bad)
(bad)
(bad)
jmp
aam
xchg
xchg
dec
push
push
fs
and
mov
push
(bad)
inc
mov
popf
xchg
scas
sbb
retf
adc
or
jnp
add
std
push
aas
pop
(bad)
test
(bad)
call
mov
js
inc
fidiv
fist
xchg
jne
sub
pop
(bad)
pop
(bad)
(bad)
(bad)
(bad)
jmp
mov
sub
xor
cmps
add
paddb
push
xchg
(bad)
(bad)
jmp
mov
or
xchg
cmp
repnz
pop
pop
lds
(bad)
push
push
cwde
xchg
xor
xor
push
adc
mov
mov
(bad)
jg
xchg
fdiv
mov
inc
outs
je
scas
mov
mov
test
push
pop
and
sbb
add
jecxz
pop
and
out
test
mov
loop
inc
mov
fisubr
adc
(bad)
call
fst
gs
pop
jae
jno
sbb
(bad)
(bad)
(bad)
mov
push
xchg
jmp
mov
and
ds
ins
sbb
into
mov
call
pop
stos
sbb
lahf
or
xchg
sub
push
mov
cmps
cdq
sbb
out
inc
or
push
dec
push
mov
xchg
mov
mov
mov
ins
mov
(bad)
cwde
sub
mov
adc
ror
xor
ret
mov
or
add
retf
jmp
push
mov
or
nop
xor
mov
dec
cmp
out
adc
xchg
xchg
mov
xor
cmps
mov
sbb
cli
inc
mov
imul
mov
adc
leave
(bad)
(bad)
(bad)
inc
sbb
jmp
dec
inc
imul
jb
adc
pusha
ret
mov
inc
jno
(bad)
sar
inc
cmps
sub
pop
sub
adc
xor
pop
pop
pop
or
out
clc
pop
jno
jae
mov
xchg
test
(bad)
(bad)
jmp
cli
dec
(bad)
test
jo
push
sbb
imul
in
xor
(bad)
push
std
or
add
cmp
and
sub
leave
and
shl
into
ud1
xor
push
inc
cmp
xchg
test
push
cmps
cmc
adc
(bad)
jg
call
retf
ret
cs
pusha
cmps
jo
jo
sar
clc
clc
jns
call
or
sub
cmp
mov
in
push
jmp
sub
lock
stos
dec
enter
sub
jge
push
stos
(bad)
dec
shl
dec
aam
fidiv
and
data16
sbb
and
lds
fnstenv
push
and
sub
popf
dec
xor
dec
inc
(bad)
(bad)
(bad)
(bad)
call
cmp
jo
push
mov
stos
cmp
ins
fstp
cmp
inc
jns
jmp
outs
hlt
stos
aam
dec
xchg
dec
daa
sbb
repnz
das
test
jmp
icebp
test
sub
sbb
clc
jp
dec
sbb
fwait
mov
jae
(bad)
(bad)
(bad)
dec
dec
inc
mov
mov
jecxz
mov
stc
(bad)
mov
pop
and
cmc
pop
jbe
cmp
(bad)
jmp
pop
in
ss
xchg
stos
lock
mov
cmc
lods
xor
push
or
xchg
sub
sbb
push
inc
call
dec
fwait
dec
push
mov
(bad)
scas
outs
pushf
es
aam
sub
cdq
vcvtsi2sd
movs
je
pop
cmp
jbe
fsubr
xor
ja
fnstsw
(bad)
shl
push
out
pop
(bad)
(bad)
call
data16
fadd
popf
mov
jl
dec
inc
call
xchg
cmp
test
inc
daa
sbb
lahf
mov
lahf
js
in
pop
pusha
pop
cmc
jmp
inc
pop
test
out
jb
das
mov
(bad)
(bad)
(bad)
mov
sub
(bad)
sbb
dec
jge
mov
dec
ds
lahf
fs
mov
(bad)
dec
sbb
pop
mov
mov
push
add
aas
pushf
jae
call
xor
(bad)
mov
movs
sub
cld
(bad)
(bad)
jmp
dec
xchg
add
pop
xchg
fldcw
jmp
mov
add
imul
pop
mov
(bad)
mov
xchg
push
push
(bad)
sbb
mov
push
cmps
(bad)
jg
outs
pushw
mov
(bad)
(bad)
push
enter
sub
ret
stos
mov
(bad)
in
mov
cli
ins
aam
pop
push
int
push
jae
in
stos
push
dec
sub
sahf
daa
xchg
adc
jb
cdq
xchg
xchg
push
pushf
mov
ret
jae
jg
adc
dec
jb
(bad)
(bad)
push
mov
sbb
push
sbb
jbe
aad
cmp
fld
fwait
leave
ins
mov
dec
stos
xchg
adc
mov
(bad)
jbe
xchg
stos
and
pop
popa
mov
(bad)
inc
inc
mov
add
loope
icebp
ret
leave
mov
mov
daa
ins
jp
adc
daa
call
mov
(bad)
dec
inc
imul
push
mov
pop
inc
add
into
cmp
mov
loopne
sbb
inc
fstp
bound
and
adc
jno
ins
(bad)
(bad)
(bad)
call
xor
faddp
test
retf
(bad)
movs
inc
xchg
or
add
pop
scas
jo
dec
inc
push
xor
or
mov
jmp
inc
xchg
pop
mov
mov
mov
cmp
stc
movs
bound
(bad)
(bad)
jg
mov
mov
(bad)
inc
lea
retf
test
add
repz
(bad)
(bad)
(bad)
(bad)
cmp
mov
jbe
sbb
ja
call
imul
stc
jp
lods
or
(bad)
(bad)
push
cmps
cmp
xchg
int
js
nop
nop
jle
int
or
mov
call
jp
xor
fcomip
(bad)
jnp
stc
push
jbe
xchg
sub
mov
mov
sub
push
mov
neg
mov
movs
cmps
js
or
(bad)
(bad)
jmp
nop
and
scas
sub
retf
xor
push
sub
int
or
cli
inc
dec
fucomi
cli
(bad)
arpl
cmc
cs
pop
mov
(bad)
cld
mov
dec
inc
std
sti
xchg
push
or
(bad)
(bad)
inc
pop
out
xchg
push
inc
dec
dec
not
(bad)
lahf
fsub
inc
sbb
sti
les
sub
jns
mov
ds
jo
into
mov
and
cmp
push
sub
retf
cmp
push
leave
fcomip
jmp
cdq
retf
sub
push
imul
xor
call
ret
jp
sahf
in
in
mov
imul
sub
and
add
push
hlt
fldln2
sub
adc
jg
jmp
ret
sahf
mov
loop
inc
(bad)
(bad)
(bad)
(bad)
jns
push
neg
iret
cmp
lds
pop
xchg
mov
mov
bound
call
inc
cmp
sub
xchg
ss
cmp
rcl
(bad)
es
mov
cmp
fwait
cld
or
je
jae
lds
dec
scas
jecxz
push
mov
(bad)
jo
vpcomd
sbb
mov
loope
std
(bad)
mov
jns
mov
mov
das
ret
push
jne
les
push
shl
(bad)
(bad)
(bad)
inc
push
jle
call
pop
jns
repz
jae
pop
or
push
test
sub
in
stc
jns
pop
push
(bad)
push
xor
jmp
xchg
test
outs
stos
cli
scas
je
add
sbb
fdivr
idiv
(bad)
(bad)
(bad)
fistp
(bad)
fidivr
ss
pop
lods
(bad)
ret
fnstenv
je
inc
test
arpl
hlt
mov
shl
xor
loope
or
out
push
or
push
test
mov
mov
dec
fist
scas
pop
mov
js
cmc
mov
mov
(bad)
(bad)
(bad)
(bad)
cld
jecxz
je
cld
fbstp
mov
int3
cwde
xor
pushf
jg
sub
ins
dec
sbb
(bad)
(bad)
(bad)
dec
dec
mov
cmp
xor
cwde
mov
inc
aam
jge
cdq
add
cli
cmp
popf
out
cmp
(bad)
(bad)
(bad)
fld1
xlat
jnp
fwait
pop
imul
lahf
mov
fstp
or
retf
ss
fwait
push
xchg
xchg
fs
xchg
cdq
mov
sub
leave
sub
test
(bad)
(bad)
jl
mov
ror
add
in
iret
sub
pop
cld
mov
and
call
sub
mov
adc
jnp
test
xor
dec
cli
leave
(bad)
(bad)
jg
xor
pop
sbb
rcl
mov
test
test
mov
dec
or
mov
js
push
dec
cmp
push
pop
popf
inc
cld
call
into
imul
scas
retf
cmp
cmp
sbb
imul
push
mov
and
and
xor
or
push
add
and
das
rcl
xchg
ret
xchg
sub
out
xor
pop
sub
fisttp
pop
lods
ss
or
int
rcl
dec
sub
xchg
xchg
es
pushf
fst
jmp
pop
aam
xor
adc
xor
sub
or
jle
movs
add
stos
pop
push
lahf
mov
and
inc
jmp
pop
out
sbb
or
dec
test
sub
imul
xchg
cs
mov
pusha
mov
mov
lods
sub
mov
fstp
push
dec
ret
inc
xchg
mov
shl
aaa
cld
jmp
pop
push
rcr
lods
neg
push
inc
xchg
bound
sahf
test
push
ror
idiv
push
jbe
mov
xchg
inc
or
jbe
fwait
xchg
rcl
call
das
std
mov
(bad)
(bad)
(bad)
call
sbb
mov
cmp
test
mov
sbb
pop
or
mov
push
sbb
je
dec
stos
mov
add
push
lock
(bad)
xlat
and
(bad)
mov
dec
repnz
adc
sbb
sbb
push
sub
cmp
push
adc
mov
and
(bad)
xor
push
jbe
adc
fldcw
cdq
ja
aaa
sub
xchg
repnz
ror
mov
(bad)
mov
jne
sbb
pusha
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
arpl
pop
jle
and
xchg
xor
es
pop
adc
jge
push
adc
(bad)
(bad)
(bad)
inc
cdq
sub
sub
test
push
jmp
and
test
(bad)
(bad)
(bad)
dec
sbb
xchg
shl
xchg
cs
push
sar
pusha
je
mov
cdq
imul
xor
xchg
sub
xchg
push
sbb
xchg
push
push
nop
je
or
stos
mov
add
and
pop
icebp
mov
adc
push
sahf
hlt
xchg
pop
loopne
pop
ds
call
push
(bad)
imul
aas
inc
ins
adc
jp
(bad)
(bad)
(bad)
jg
xor
sub
fld
mov
push
and
pop
and
xchg
iret
inc
dec
outs
(bad)
(bad)
out
clc
sti
or
rcr
adc
aam
mov
gs
in
mov
push
int3
pop
ja
jecxz
arpl
retf
push
imul
mov
sub
jb
add
and
mov
cmps
push
jno
loopne
dec
fadd
or
and
scas
jmp
iret
mov
jl
int3
(bad)
jns
mov
in
push
inc
push
mov
(bad)
(bad)
dec
dec
cmp
adc
clc
(bad)
dec
dec
out
sub
and
and
and
out
fimul
jne
movs
mov
add
inc
inc
adc
sbb
std
xor
dec
dec
scas
cmp
mov
mov
sub
test
scas
mov
shr
(bad)
(bad)
(bad)
jmp
dec
test
mov
xor
jmp
push
shl
sbb
add
dec
jmp
out
(bad)
test
adc
cs
(bad)
(bad)
(bad)
pop
push
sbb
into
pop
pushf
neg
cmp
mov
or
les
addr16
repnz
fbld
into
jnp
pusha
and
push
pop
stc
dec
cmp
push
adc
mov
std
push
mov
rcr
xor
adc
fidiv
cld
call
loope
scas
jg
and
jnp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sbb
push
pop
xor
mov
mov
adc
rol
and
hlt
stc
ror
(bad)
mov
inc
lods
js
dec
sbb
xchg
std
inc
add
pop
stos
sub
pop
mov
jbe
cdq
in
sub
or
jb
stc
inc
add
cmps
jne
add
dec
sbb
mov
test
hlt
test
jge
lds
add
inc
mov
(bad)
jg
dec
pushf
aam
cmp
mov
pop
int
ret
xchg
sub
sbb
jg
pop
push
adc
sbb
push
xchg
and
loopne
and
sub
mov
(bad)
inc
ins
mov
sbb
or
arpl
pop
mov
mov
pop
mov
repnz
sbb
dec
imul
jb
mov
int
xchg
jmp
test
inc
or
out
ret
les
outs
movs
mov
xor
pop
std
pusha
fmulp
xor
sbb
jmp
leave
add
inc
sbb
sbb
mov
jmp
(bad)
jns
icebp
push
(bad)
jg
inc
sub
loopne
in
pmullw
jbe
mov
pop
xchg
push
xor
push
and
call
push
sbb
fbstp
daa
scas
sahf
stos
adc
sub
and
mov
int3
(bad)
jmp
shl
ds
aam
dec
mov
and
sub
mov
(bad)
dec
sbb
arpl
int3
je
pop
fldenv
pop
mov
sub
push
cwde
fs
mov
lds
dec
jmp
add
in
mov
(bad)
cmp
lods
push
push
pusha
add
mov
(bad)
(bad)
fild
(bad)
cwde
pop
movs
or
dec
and
ss
(bad)
(bad)
dec
mov
or
mov
hlt
repz
out
inc
pop
sahf
pop
inc
gs
push
hlt
push
jmp
and
fcomip
dec
(bad)
cli
mov
imul
je
fsubr
xchg
fist
fmul
cmc
push
jnp
in
sbb
adc
out
jmp
es
test
into
adc
test
mov
test
cld
or
test
stos
dec
(bad)
jg
lock
cmps
push
push
jge
mov
and
cmp
jmp
je
(bad)
(bad)
(bad)
inc
stos
(bad)
push
cld
(bad)
cmp
sbb
retf
and
into
iret
push
inc
push
aad
inc
mov
pop
repz
(bad)
fcomip
push
jnp
div
cmp
cdq
test
sbb
inc
mov
(bad)
mov
sti
ficomp
inc
xchg
or
push
push
cmps
scas
cmps
ja
je
repz
add
xor
mov
xchg
sub
gs
cli
(bad)
(bad)
(bad)
jg
test
imul
push
out
jb
mov
nop
mov
int3
out
add
jg
(bad)
push
dec
sub
loopne
loop
into
sbb
pusha
ret
(bad)
(bad)
(bad)
dec
cmp
mov
xor
iret
(bad)
or
xchg
xchg
pop
cwde
dec
pop
jmp
xchg
jae
jg
inc
and
jno
sub
(bad)
(bad)
dec
xor
cmp
adc
xchg
sub
jle
popf
not
adc
pop
pop
scas
scas
(bad)
fistp
loop
push
in
pop
enter
sbb
or
(bad)
mov
mov
jp
not
int
lds
out
mov
iret
sbb
or
mov
xchg
xchg
sbb
sub
jnp
mov
jmp
inc
xchg
cwde
pop
sub
adc
inc
test
add
in
push
pop
cwde
push
lds
add
je
pop
(bad)
sar
xor
ja
sub
inc
or
cs
sbb
addr16
inc
add
(bad)
dec
mov
sub
jne
popa
fwait
mov
add
les
ins
pop
(bad)
push
push
(bad)
jmp
cmp
jmp
in
pop
sub
test
(bad)
(bad)
dec
loope
xchg
cmps
popf
popa
add
jge
loopne
dec
xchg
push
sbb
sub
dec
sub
retf
nop
cmp
(bad)
call
adc
jg
mov
cmp
jp
sbb
add
jno
jne
(bad)
fcomip
mov
and
and
sub
not
jmp
ja
(bad)
inc
ins
lds
mov
jbe
xchg
and
xor
adc
and
outs
(bad)
inc
lods
minps
imul
popa
jns
push
inc
push
lea
or
ja
xchg
and
inc
xchg
movs
jmp
fsubr
ja
stc
in
test
push
(bad)
(bad)
(bad)
call
aad
jno
sahf
sbb
gs
mov
aad
and
aaa
repnz
cmps
movs
in
xor
dec
or
mov
jo
mov
nop
push
cmp
dec
pusha
ds
mov
(bad)
sbb
dec
xor
(bad)
(bad)
inc
mov
xor
mov
pop
and
xchg
pop
in
(bad)
mov
out
mov
push
jo
dec
push
rcl
(bad)
(bad)
push
inc
pusha
pusha
jo
cmp
in
test
xchg
or
push
cdq
in
aas
cmp
(bad)
(bad)
(bad)
dec
dec
push
mov
cmps
bound
mov
repz
adc
out
sbb
aad
mov
(bad)
(bad)
(bad)
call
dec
inc
pop
pusha
test
add
inc
dec
rol
popf
jp
sahf
inc
adc
sbb
push
aas
aaa
pop
xlat
fstp
cld
mov
and
inc
push
mov
pop
hlt
aaa
lock
call
dec
sub
xchg
into
pop
shl
fldcw
jmp
(bad)
fdiv
xor
pop
aaa
scas
bound
aaa
in
jmp
dec
push
push
in
in
repnz
sbb
pop
retf
iret
lahf
les
cld
lahf
mov
(bad)
(bad)
(bad)
(bad)
jmp
ret
fadd
(bad)
mov
jl
scas
cmp
or
jle
pop
test
(bad)
(bad)
(bad)
jmp
ds
sbb
mov
retf
mov
adc
call
jmp
jp
dec
sbb
mov
mov
rol
adc
hlt
clc
out
(bad)
(bad)
(bad)
push
outs
addr16
or
xchg
ja
call
jb
jle
bound
ss
(bad)
(bad)
(bad)
jnp
in
movs
dec
jg
mov
pop
(bad)
leave
mov
add
lock
jle
shl
(bad)
jmp
adc
jno
push
and
jg
or
jecxz
(bad)
(bad)
jae
sbb
rep
popa
mov
mov
(bad)
ficomp
(bad)
(bad)
call
mov
jne
dec
dec
or
push
mov
test
stc
(bad)
(bad)
(bad)
(bad)
js
or
fst
sti
sbb
std
xchg
ds
and
add
mov
push
(bad)
push
clc
fild
sar
mov
mov
mov
test
pusha
(bad)
call
loope
jg
es
loop
(bad)
iret
mov
movs
dec
or
mov
mov
(bad)
(bad)
dec
and
mov
push
and
adc
xchg
xchg
test
push
iret
xchg
stc
dec
test
push
imul
das
add
imul
retf
jmp
xlat
xchg
dec
dec
sbb
sbb
lods
fwait
push
fldenv
cld
(bad)
inc
addr16
jbe
and
cmps
cmp
pop
clc
sbb
arpl
(bad)
(bad)
(bad)
fisttp
fcmovnu
ins
outs
(bad)
(bad)
pop
mov
shl
mov
and
jg
cmps
cli
xor
ret
jmp
sar
les
fdiv
lock
clc
mov
out
pop
ins
loopne
mov
mov
mov
(bad)
mov
cdq
pop
gs
les
lods
popf
mov
test
(bad)
(bad)
inc
(bad)
fld
xchg
push
or
out
ret
pop
pop
(bad)
dec
fwait
stc
xor
fcomip
(bad)
dec
outs
pusha
into
fld
and
mov
out
rol
dec
dec
cmp
icebp
mov
daa
rep
in
(bad)
pop
adc
je
retf
sub
inc
dec
aaa
(bad)
mov
test
pop
and
jo
loop
and
mov
mov
mov
sbb
aas
outs
(bad)
frstor
cs
push
mov
cmp
adc
jmp
sar
(bad)
(bad)
(bad)
jns
push
icebp
pop
jns
cmps
sbb
fisubr
sub
(bad)
push
pop
popa
icebp
(bad)
addr16
add
or
jmp
add
dec
ja
stc
sbb
mov
adc
into
inc
retfw
dec
jns
xchg
or
hlt
mov
mov
(bad)
(bad)
(bad)
dec
and
xchg
icebp
ret
sub
mov
xchg
jmp
mov
or
retf
pop
xchg
pop
pop
sub
je
(bad)
(bad)
call
inc
xor
stos
int
or
lods
retf
push
imul
stos
iret
fst
cld
(bad)
(bad)
jmp
pop
xchg
loopne
add
call
ss
test
sub
dec
xchg
adc
pop
inc
pop
jmp
(bad)
(bad)
(bad)
(bad)
out
sar
mov
jmp
mov
mov
dec
sar
sbb
push
push
xchg
push
sub
pop
jo
jmp
ds
cmc
cmps
js
inc
stos
push
pop
or
adc
xchg
addr16
or
ret
xchg
inc
mov
mov
repnz
(bad)
(bad)
mov
xchg
xor
mov
stos
pop
pop
clc
jmp
pop
jmp
adc
sbb
fdivp
xor
dec
int3
mov
cmps
cwde
retf
and
push
loopne
test
movs
(bad)
(bad)
jmp
mov
xor
ffreep
aaa
inc
lds
pop
push
pop
push
clc
iret
mov
ret
movs
add
jmp
sub
popf
mov
xlat
jg
add
pop
dec
pop
(bad)
(bad)
push
sahf
xchg
cdq
push
add
xchg
sub
aaa
sub
push
lods
imul
shr
dec
ins
mov
(bad)
(bad)
mov
fcom
nop
aam
test
movs
xor
clc
add
clc
xor
push
(bad)
dec
push
mov
cld
push
nop
xor
sbb
pop
xor
add
inc
sbb
(bad)
dec
mov
fwait
push
(bad)
add
pop
inc
cld
push
call
(bad)
(bad)
(bad)
(bad)
jp
mov
popa
push
xchg
adc
mov
xchg
add
sbb
add
push
dec
add
(bad)
(bad)
inc
bts
idiv
xor
push
push
bound
dec
ins
xchg
push
pop
sub
(bad)
call
and
mov
loope
pop
nop
inc
push
in
retf
nop
adc
dec
retf
(bad)
or
add
retf
and
sar
cli
cmp
mov
dec
pushf
sbb
sahf
(bad)
(bad)
jmp
jo
push
rcl
loop
fisttp
cwde
repnz
adc
fs
or
(bad)
(bad)
(bad)
call
and
xchg
arpl
rcl
stc
test
adc
cmps
xor
les
(bad)
(bad)
(bad)
push
into
and
mov
push
jmp
hlt
inc
xchg
sub
mov
sub
push
dec
mov
push
(bad)
(bad)
(bad)
call
out
inc
cli
das
push
sub
cmp
mov
jo
jne
or
int3
jns
inc
imul
add
or
nop
dec
test
test
jmp
out
lock
push
push
and
or
lods
add
mov
inc
mov
mov
cs
(bad)
(bad)
dec
mov
test
sahf
inc
xor
xchg
mov
out
es
(bad)
jg
test
mov
stos
dec
dec
sub
jmp
push
and
(bad)
(bad)
inc
push
push
les
and
sbb
cmp
adc
jne
mov
fadd
sub
(bad)
(bad)
call
jmp
scas
rcl
mov
out
out
shl
test
jmp
xchg
inc
and
stos
lock
xchg
pop
mov
mov
mov
mov
mov
push
push
sub
(bad)
(bad)
(bad)
(bad)
jl
xor
add
fisubr
shl
pop
and
inc
push
add
pop
mov
xor
jmp
imul
pop
pop
push
scas
pop
fild
(bad)
outs
aam
in
and
dec
adc
scas
inc
sbb
cmp
fimul
sar
(bad)
(bad)
call
or
and
inc
add
pop
cmp
lods
test
and
or
call
(bad)
shl
sahf
mov
mov
jns
std
xchg
xchg
jg
call
loop
inc
(bad)
sbb
sbb
sbb
test
or
jl
push
dec
adc
out
mov
ficomp
pop
push
bound
das
outs
(bad)
(bad)
jmp
out
(bad)
jecxz
xchg
adc
inc
jne
adc
leave
rcr
(bad)
popa
push
mov
inc
inc
retf
mov
out
ds
or
jecxz
sub
out
call
loopne
ds
mov
test
lea
cmp
or
test
int
push
stc
xchg
(bad)
(bad)
(bad)
jmp
adc
push
sar
cmp
pop
aaa
test
sub
neg
cmp
sub
jmp
inc
pop
(bad)
in
jbe
mov
nop
adc
fcomp
cmc
das
outs
mov
js
dec
call
(bad)
(bad)
(bad)
jmp
ja
repz
adc
sub
jmp
jmp
sbb
xor
not
(bad)
(bad)
inc
rcl
fdivr
sbb
mov
loop
shl
fld
push
(bad)
jg
sbb
pop
pop
pusha
scas
imul
or
jns
push
outs
cli
(bad)
call
inc
add
lahf
into
push
pushf
sub
cmp
dec
hlt
ins
lea
gs
adc
hlt
(bad)
ror
push
cs
mov
mov
enter
mov
aas
dec
jmp
in
mov
shr
arpl
mov
lods
mov
push
cmp
in
push
adc
mov
sbb
ins
pop
inc
nop
int3
xlat
push
lds
cmp
cmps
or
sahf
pop
std
push
repz
inc
mov
sbb
pop
and
xor
(bad)
(bad)
(bad)
out
push
mov
xor
ins
xor
(bad)
int
imul
jae
sti
mov
mov
cmp
xor
aad
retf
aas
pop
push
add
cmp
(bad)
(bad)
jg
add
cmc
mov
sbb
popa
jmp
(bad)
(bad)
cmp
inc
or
scas
pop
lea
stos
frstor
jae
or
popf
jns
jmp
es
fsub
sub
in
xchg
cmp
dec
and
fistp
jecxz
lea
push
adc
stos
push
mov
or
xchg
addr16
repnz
call
std
push
int3
cmp
or
out
cmps
sbb
(bad)
ss
cs
call
shl
jb
mov
sbb
mov
int3
xchg
inc
jmp
push
xor
jnp
or
mov
adc
add
ds
(bad)
(bad)
dec
mov
push
loope
push
xor
fcom
pop
ficom
xchg
xchg
mov
lods
add
call
test
aaa
sbb
fsub
retf
add
or
mov
mov
cli
push
lods
jp
sbb
(bad)
(bad)
(bad)
call
lahf
les
sub
(bad)
xchg
leave
nop
xchg
mov
jmp
jb
xor
push
(bad)
(bad)
(bad)
jmp
rcl
push
dec
push
lods
mov
ficom
dec
cmps
pop
jo
dec
lods
(bad)
fild
jae
xchg
(bad)
mov
je
mov
and
mov
clc
(bad)
push
add
(bad)
ja
dec
adc
lds
push
shl
and
(bad)
in
pop
cmp
dec
add
xor
push
pop
push
mov
and
fisub
and
(bad)
(bad)
(bad)
call
push
mov
xchg
data16
xchg
mov
lahf
call
jle
fwait
jge
xchg
lods
or
mov
xlat
mov
outs
cmp
xor
aaa
retf
ins
ins
fisttp
pushf
ins
call
and
in
adc
in
inc
retf
dec
xchg
jae
(bad)
(bad)
(bad)
jmp
pop
cmp
or
(bad)
push
das
add
mov
les
fsub
adc
sbb
ja
aas
or
loopne
mov
mov
aam
mov
lds
(bad)
(bad)
(bad)
jmp
mov
jecxz
loopne
fst
add
inc
cmp
adc
test
pop
or
fcmovb
push
dec
(bad)
(bad)
mov
adc
cmps
stos
ret
pusha
cwde
xchg
jbe
cmps
or
(bad)
(bad)
(bad)
(bad)
stc
inc
inc
les
pusha
hlt
imul
mov
xlat
mov
lahf
movs
mov
gs
cmp
(bad)
(bad)
(bad)
neg
pop
sub
sub
nop
daa
in
pop
sbb
adc
rol
movs
or
inc
sbb
scas
ret
lds
(bad)
push
out
jns
pop
fisttp
xchg
outs
imul
test
mov
mov
stos
bound
mov
jp
xor
mov
ins
xchg
sbb
jl
(bad)
(bad)
jmp
xor
fs
stos
cwde
mov
pop
inc
es
push
sbb
add
test
mov
mov
pop
ss
in
(bad)
(bad)
(bad)
(bad)
mov
mov
or
xchg
fs
mov
fild
shr
push
pop
push
pop
sar
(bad)
call
inc
adc
daa
(bad)
sub
cld
dec
loop
or
mov
dec
(bad)
(bad)
(bad)
call
mov
mov
aad
jge
pop
sbb
loope
inc
cmp
in
lds
sbb
cmp
jmp
mov
jmp
sub
inc
loopne
push
fs
iret
(bad)
(bad)
(bad)
inc
leave
outs
mov
mov
mov
push
jnp
cwde
sub
xor
xchg
cs
stos
jecxz
xor
rcl
into
xor
test
push
neg
mov
jp
fistp
outs
mov
adc
cmp
mov
shr
sub
mov
pop
es
(bad)
(bad)
dec
pop
ins
sbb
adc
jecxz
pop
mov
hlt
push
xchg
xchg
sub
sbb
jno
pop
clc
fcomip
push
xchg
outs
les
mov
cwde
pop
fwait
adc
loope
sahf
loop
(bad)
mov
popf
lds
mov
mov
push
adc
pop
pop
ret
(bad)
(bad)
inc
xchg
gs
mov
cwde
sbb
xchg
ja
sbb
retf
mov
fistp
mov
pushf
(bad)
call
movs
or
imul
cmc
mov
mov
(bad)
push
fsubrp
cli
fdivrp
dec
out
inc
pop
sub
push
ins
and
in
dec
(bad)
sbb
mov
(bad)
(bad)
(bad)
(bad)
in
cmp
ins
fild
jge
movs
fidiv
add
aam
imul
(bad)
sbb
dec
cld
push
adc
xor
push
shl
(bad)
aas
mov
movs
movs
aad
cmps
in
xor
xchg
(bad)
adc
outs
mov
sbb
(bad)
(bad)
dec
cmps
out
pop
dec
xchg
lea
ja
inc
dec
(bad)
push
and
pop
pop
sub
push
dec
mov
(bad)
(bad)
(bad)
jmp
mov
mov
xchg
dec
fwait
xor
stos
cmc
sar
int3
dec
imul
fidivr
(bad)
(bad)
dec
mov
js
iret
gs
mov
jns
cdq
sub
gs
(bad)
mov
jbe
mov
pop
loope
mov
dec
popf
ss
mov
or
add
push
test
jecxz
or
imul
xchg
(bad)
(bad)
(bad)
push
cmp
jnp
xchg
mov
jle
aaa
add
xor
(bad)
pop
dec
lock
xchg
cmp
(bad)
fst
push
pop
jecxz
sbb
rcl
gs
mov
pop
test
(bad)
(bad)
call
fld1
cli
sub
pop
les
push
je
or
sub
add
shl
jnp
(bad)
call
fstp
cmps
leave
mov
mov
in
cmp
(bad)
cmp
inc
addr16
dec
idiv
dec
jb
xor
aad
and
mov
pusha
xchg
sbb
cli
mov
push
popf
mov
mov
aaa
scas
push
arpl
push
adc
cmc
mov
imul
loope
push
and
out
(bad)
(bad)
call
les
imul
xchg
cmp
adc
mov
(bad)
jmp
pop
cmps
jmp
nop
xchg
dec
cmp
push
jmp
stos
pop
ins
push
(bad)
(bad)
(bad)
jg
in
adc
(bad)
lods
rcr
cdq
xor
mov
jmp
bound
(bad)
jmp
or
lods
sub
sub
dec
mov
jmp
les
cs
adc
adc
push
sbb
mov
push
cs
mov
scas
(bad)
(bad)
jmp
push
and
xor
retf
xchg
mov
cmp
mov
mov
mov
(bad)
cmp
fdiv
fnstcw
dec
test
and
mov
(bad)
(bad)
in
popf
mov
ins
or
jbe
(bad)
ficomp
xor
mov
pop
cmp
shr
std
and
mov
aam
xchg
xchg
mov
adc
gs
out
shr
push
mov
push
(bad)
cli
loope
push
fs
(bad)
or
imul
dec
fsub
cli
test
dec
test
adc
hlt
mov
loopne
loop
idiv
mov
mov
mov
pop
and
pop
lods
dec
mov
int
ins
push
dec
mov
pop
and
sub
dec
popf
cmp
dec
idiv
or
call
in
or
(bad)
(bad)
cmp
mov
fidivr
les
dec
shl
xchg
cmp
lds
out
clc
(bad)
(bad)
dec
push
sub
ins
mov
jb
cs
or
mov
ret
out
xor
sub
(bad)
(bad)
inc
jo
outs
mov
(bad)
aaa
aam
push
ret
pop
int
das
jg
(bad)
(bad)
(bad)
fstp
push
js
jecxz
data16
fcmovnbe
xor
and
sub
cmp
(bad)
(bad)
(bad)
jmp
in
fwait
xor
mov
lods
repnz
push
mov
(bad)
mov
and
mov
add
add
neg
hlt
ins
jg
(bad)
dec
mov
adc
retf
ja
jb
imul
icebp
into
mov
in
jnp
cmps
rol
scas
cli
push
movs
sub
movs
sbb
aad
je
sbb
xor
cmc
(bad)
(bad)
jg
cs
sar
aaa
xlat
adc
iret
or
sub
jmp
test
outs
test
int
(bad)
call
inc
scas
mov
jne
sar
adc
cmp
mov
xchg
pop
cmp
cmc
(bad)
call
pop
add
or
push
lock
and
xchg
cmp
imul
(bad)
(bad)
jmp
aad
jns
and
push
sub
cmps
push
and
dec
pop
inc
scas
inc
xor
mov
(bad)
push
hlt
push
popf
int3
mov
fstp
mov
stos
mov
mov
popf
mov
mov
xchg
ins
inc
retf
std
(bad)
jmp
mov
xchg
es
imul
in
push
fdiv
dec
mov
pop
sti
loop
pop
jecxz
sbb
pop
idiv
scas
(bad)
(bad)
out
or
cld
pop
push
es
xchg
xchg
xchg
stc
in
ds
fnsave
repnz
iret
(bad)
(bad)
(bad)
inc
cwde
(bad)
inc
push
jl
sub
(bad)
jge
cmp
cli
inc
mov
test
(bad)
(bad)
call
movs
fbld
sub
jnp
push
sub
aad
lods
sahf
nop
mov
inc
clc
(bad)
jg
pop
data16
outs
out
cli
cmps
popa
and
mov
in
mov
movs
mov
jg
adc
mov
movs
jbe
dec
jns
(bad)
(bad)
(bad)
dec
jp
xchg
xchg
inc
add
sbb
jo
seta
pushf
xor
xor
out
ret
(bad)
jg
(bad)
cmp
sbb
in
sub
jns
xchg
cmp
test
and
jmp
clc
call
(bad)
(bad)
call
sbb
ja
mov
or
pop
xchg
mov
(bad)
call
add
ret
lahf
js
adc
mov
call
mov
fincstp
ins
push
fwait
jbe
rcr
xchg
shr
les
jmp
mov
stos
or
bound
fidiv
iret
dec
xor
movs
add
in
xchg
cld
inc
ret
sbb
das
clc
push
outs
jle
lock
jmp
mov
adc
lock
(bad)
call
push
and
aaa
lods
std
xchg
pushf
mov
cli
sbb
dec
dec
retf
inc
sub
(bad)
call
push
fwait
outs
outs
(bad)
stc
mov
xchg
test
ss
fimul
mov
cmps
inc
pop
or
aaa
aam
(bad)
(bad)
jg
clc
inc
in
pop
and
lock
dec
ret
lock
sbb
das
jbe
sub
or
mov
das
cli
(bad)
in
or
shr
mov
bound
out
dec
mov
xchg
and
pop
loopne
inc
push
push
mov
(bad)
sahf
bound
std
jg
mul
cmp
(bad)
push
and
mov
jno
(bad)
and
jmp
inc
and
repz
adc
inc
add
loope
(bad)
(bad)
push
mov
enter
rcr
dec
daa
mov
or
dec
aas
test
dec
in
jecxz
mov
aas
mov
and
xlat
adc
xor
out
add
cld
(bad)
outs
or
rol
fidivr
(bad)
pop
jmp
dec
(bad)
(bad)
(bad)
mov
jp
js
mov
out
(bad)
push
pop
xor
fld
sbb
cmps
xor
pop
push
jne
jbe
add
(bad)
sbb
fidiv
mov
(bad)
(bad)
(bad)
mov
movs
dec
ss
in
inc
push
shr
cmp
adc
inc
movs
and
std
xor
pop
pop
pop
dec
push
iret
and
loope
or
lea
push
jmp
mov
rcr
push
and
and
pop
hlt
inc
sub
push
bound
iret
inc
lods
pop
bound
fcom
mov
imul
xor
jnp
nop
jne
mov
mov
sub
movs
repz
(bad)
(bad)
mov
test
stos
and
push
push
hlt
pop
test
mov
icebp
jecxz
jmp
int3
pushf
rol
xchg
(bad)
in
sbb
push
sti
mov
mov
jbe
jne
dec
xor
mov
cld
stos
jle
test
jp
mov
mov
fadd
fld
cmps
stos
mov
outs
ror
(bad)
(bad)
(bad)
push
adc
sti
imul
out
adc
js
xchg
push
sar
dec
clc
xlat
or
xchg
add
mov
(bad)
(bad)
(bad)
dec
loopne
xor
jb
add
stos
popf
ret
rcpps
ss
lds
add
clc
mov
or
in
in
cld
push
aam
sub
inc
repz
jecxz
add
mov
or
push
cli
push
push
(bad)
(bad)
jmp
jmp
lods
and
push
(bad)
popa
cwde
adc
push
jmp
(bad)
dec
push
adc
xor
dec
inc
in
rcl
pop
int3
push
jg
fwait
mov
clc
(bad)
(bad)
(bad)
call
scas
ret
pop
push
or
ss
je
cmp
cmp
cmp
pushf
(bad)
mov
call
sub
cmp
sub
call
les
jp
(bad)
cli
fstp
sbb
(bad)
(bad)
inc
lods
mov
sbb
xlat
cwde
lea
test
cmp
push
xchg
sbb
jmp
adc
rcl
in
out
jb
cmp
fadd
xor
sub
ins
or
mov
call
push
push
rcr
inc
mov
(bad)
outs
mov
sti
les
cli
js
adc
rol
frstor
(bad)
(bad)
nop
aad
lods
jge
retf
mov
and
mov
movs
leave
cmp
mov
push
imul
pop
jmp
(bad)
(bad)
call
inc
(bad)
sar
pusha
mov
add
jle
stos
aas
lods
shr
add
ret
fsubr
(bad)
(bad)
(bad)
inc
mov
retf
add
out
jae
retf
xchg
mov
mov
les
mov
hlt
jmp
dec
add
push
ror
add
mov
in
test
inc
xor
int
push
(bad)
(bad)
(bad)
call
sbb
cmps
dec
adc
cmp
out
fs
sbb
sbb
sbb
(bad)
cmp
in
cld
movs
cmp
xchg
test
lds
xchg
leave
icebp
mov
pop
cmps
jg
mov
mov
fisubr
and
jg
push
jae
retf
jmp
test
sub
pop
push
add
mov
call
ds
xor
(bad)
(bad)
(bad)
mov
retf
cmp
test
lods
repz
sbb
mov
xchg
mov
cmp
(bad)
push
sbb
push
imul
add
sbb
jl
or
pop
pop
xchg
(bad)
(bad)
(bad)
dec
fld
mov
in
ret
dec
dec
int
add
mov
adc
test
das
add
jmp
sub
outs
test
xlat
fist
xchg
xor
(bad)
cs
(bad)
(bad)
(bad)
jg
call
lods
push
adc
fld
adc
shr
mov
mov
idiv
test
js
xchg
push
fidivr
push
clc
js
push
cmp
lds
mov
lea
(bad)
(bad)
(bad)
call
pop
xor
cmp
and
push
mov
fnstenv
jecxz
xor
push
xchg
inc
cmc
scas
nop
pop
mov
push
add
out
sbb
into
add
test
jne
shl
pop
das
or
jmp
sub
xlat
sub
push
dec
xor
fs
stc
xchg
fisubr
aam
(bad)
(bad)
call
mov
jmp
xlat
(bad)
cdq
push
and
xchg
jmp
jne
jbe
cmps
mov
mov
cmp
dec
push
inc
fwait
les
fwait
push
inc
cdq
(bad)
(bad)
jmp
ja
sbb
xlat
xor
shr
mov
aam
sub
out
or
sbb
cmps
dec
add
movs
xlat
inc
sub
(bad)
dec
mov
fst
pushf
lods
or
xchg
push
add
ins
sbb
jae
data16
sub
(bad)
(bad)
(bad)
jl
jle
and
push
popa
push
pop
fistp
jmp
stos
push
mov
shl
aas
es
(bad)
(bad)
(bad)
jmp
rcl
mov
aas
cmp
sub
pop
cmps
ja
js
mov
add
(bad)
dec
sbb
and
xchg
dec
jle
cli
add
out
std
sub
pop
jmp
xchg
jl
retf
loope
xchg
jg
push
cmovl
pop
outs
sbb
cmp
aas
jl
push
out
lock
mov
pop
inc
cwde
hlt
lock
jl
bound
xchg
push
mov
(bad)
(bad)
(bad)
inc
add
pop
ret
loop
cmp
add
pop
cli
mov
nop
sbb
(bad)
inc
div
(bad)
mov
fadd
jl
or
scas
aas
sub
dec
mov
test
call
loope
jnp
sub
mov
pop
or
(bad)
(bad)
(bad)
dec
cli
(bad)
mov
stos
jnp
adc
push
sbb
cmp
mov
imul
mov
mov
jbe
movs
(bad)
hlt
test
push
mov
call
icebp
mov
outs
mov
push
xchg
cdq
sub
dec
cmp
adc
mov
(bad)
sti
hlt
std
push
and
dec
(bad)
jg
sub
aaa
std
jg
or
adc
mov
movs
cmp
inc
stc
add
(bad)
inc
sub
lock
(bad)
inc
mov
lahf
mov
daa
lock
ins
inc
mov
or
(bad)
jmp
inc
loope
sbb
pop
retf
ds
xlat
test
cmp
jecxz
stc
idiv
mov
fsub
jne
sbb
lock
adc
movs
and
mov
add
pop
(bad)
(bad)
(bad)
dec
test
lahf
movsx
sub
mov
mov
and
das
sbb
mov
std
(bad)
(bad)
jmp
sub
fst
and
cmp
lea
dec
arpl
rol
(bad)
jg
pop
repnz
lahf
push
sbb
lea
sub
je
sbb
(bad)
jmp
popa
lock
lods
das
cdq
aaa
bound
mov
test
cmps
mov
or
scas
mov
push
xchg
xor
ret
loope
int
add
push
sar
loopne
(bad)
(bad)
jmp
(bad)
jecxz
in
movs
push
mov
sub
inc
mov
xor
mov
add
(bad)
mov
mov
out
cmp
icebp
ja
mov
jne
sub
adc
push
(bad)
call
scas
(bad)
jmp
cmp
movs
sbb
inc
inc
sbb
je
push
stos
push
adc
les
xchg
bound
test
ins
lods
movs
shr
add
mov
lea
dec
(bad)
(bad)
(bad)
(bad)
jmp
xchg
sub
enter
sub
and
xor
jns
test
(bad)
(bad)
dec
into
mov
inc
mov
jne
pushf
call
mov
mov
clc
repz
ins
inc
push
(bad)
dec
(bad)
mov
push
stos
loopne
cmp
mov
or
test
push
push
jns
or
dec
push
push
dec
push
add
repnz
(bad)
call
dec
loope
mov
ror
out
test
lods
inc
add
xchg
xor
inc
inc
push
(bad)
fcomp
(bad)
(bad)
call
sub
pop
mov
inc
and
push
xor
test
imul
ss
push
test
pop
and
xchg
fwait
sub
rcl
adc
ja
mov
cmp
in
push
sub
inc
repnz
push
xor
sbb
aad
sbb
mov
inc
sub
shl
mov
hlt
(bad)
call
pop
(bad)
fwait
cs
jge
test
mov
int3
pushf
pop
das
sahf
and
jns
dec
call
icebp
push
ins
dec
jns
push
cmps
daa
and
bound
and
sar
xor
mov
sahf
push
sub
inc
xchg
inc
adc
aas
(bad)
(bad)
jmp
mov
sub
stos
pop
jmp
mov
in
adc
mov
jo
inc
dec
movs
sub
cmp
jae
inc
or
shr
loop
xor
inc
(bad)
xchg
lods
sbb
and
rcl
test
pop
inc
push
adc
jb
inc
(bad)
(bad)
(bad)
inc
(bad)
sub
scas
test
sbb
fnstcw
mov
push
jp
aam
mov
mov
adc
mov
popf
dec
push
cld
lods
retf
mov
mov
jns
mov
mov
cmp
(bad)
dec
int3
push
adc
les
dec
pop
xor
jb
sub
(bad)
(bad)
dec
jae
retf
push
cmp
pop
fucomi
adc
push
pushf
mov
push
push
les
add
sbb
cwde
add
mov
rcr
bound
(bad)
(bad)
(bad)
jmp
sbb
(bad)
adc
(bad)
mov
xchg
(bad)
fs
in
cmp
mov
jmp
dec
(bad)
call
sbb
mov
jl
fist
push
jl
scas
and
(bad)
jae
mov
cmp
add
mov
jo
es
cwde
sbb
scas
xor
xor
mov
sbb
sub
push
push
fwait
push
mov
(bad)
push
std
pop
iret
sbb
gs
mov
jo
ret
nop
call
mov
xchg
push
cld
(bad)
push
or
mov
retf
mov
sbb
repz
mov
pmullw
cmp
cmps
(bad)
(bad)
(bad)
call
inc
pop
mov
das
xchg
cli
xchg
dec
push
adc
outs
fsub
mov
add
cli
mov
stc
mov
jbe
add
(bad)
call
sub
or
xor
out
dec
cli
out
ret
or
(bad)
(bad)
call
int
add
inc
test
and
or
dec
adc
push
fisubr
call
mov
lods
jle
jae
xor
push
lods
jo
xchg
xchg
add
inc
xchg
movs
dec
out
mov
push
jae
(bad)
pop
jns
jp
(bad)
es
aad
xor
lea
cmp
(bad)
(bad)
call
jmp
iret
call
dec
jno
data16
or
(bad)
(bad)
call
(bad)
pop
and
(bad)
test
pop
adc
mov
(bad)
xor
jp
jg
outs
jp
mov
shl
jecxz
inc
xor
inc
jne
pop
test
cmp
(bad)
dec
outs
loop
aaa
mov
ror
pop
sub
icebp
mov
(bad)
(bad)
jmp
and
fwait
jo
sti
aas
add
mov
or
cmp
sbb
inc
jmp
call
bound
out
fldpi
rcl
xchg
fcom
scas
adc
popf
push
jg
adc
in
lock
pop
scas
fisub
mov
push
pop
lds
sbb
lods
aam
fstp
iret
dec
addr16
icebp
pusha
dec
ds
rcr
mov
xchg
jge
retf
(bad)
(bad)
(bad)
jmp
mov
add
adc
pop
mov
cli
jl
out
inc
dec
(bad)
xchg
pop
jno
out
inc
dec
cs
mov
iret
cmp
pop
jg
(bad)
inc
and
lods
adc
divps
mov
fdiv
into
cwde
jl
aaa
cld
(bad)
call
fidivr
ret
mov
and
mov
xor
cmp
inc
(bad)
retf
icebp
test
nop
leave
iret
pop
push
fdivp
popf
sahf
cmp
test
fs
call
ret
and
pop
cs
jno
push
inc
mov
stos
ins
inc
sub
(bad)
(bad)
(bad)
(bad)
jg
push
call
ins
mov
jmp
mov
lds
outs
das
xor
call
sbb
jne
mov
sub
sbb
(bad)
push
fabs
dec
dec
add
cmps
sahf
jns
ds
cmp
inc
xchg
out
xor
(bad)
out
cli
(bad)
jl
pop
jno
ret
jg
into
fimul
icebp
mov
push
push
add
cmps
pop
(bad)
call
adc
jmp
frstor
in
jno
cbw
inc
sbb
cmp
arpl
clc
jg
adc
inc
dec
loope
ret
(bad)
out
test
sub
stos
mov
mov
es
in
(bad)
(bad)
(bad)
cli
test
fidivr
dec
mov
or
mov
or
jbe
ins
ret
jl
es
lahf
cdq
(bad)
(bad)
(bad)
dec
dec
jae
mov
fidiv
mov
cwde
(bad)
mov
nop
xchg
lock
(bad)
call
dec
shl
adc
jno
mov
aaa
xchg
adc
test
ins
push
(bad)
(bad)
call
hlt
mov
jmp
and
dec
fidivr
pop
sub
out
sti
(bad)
(bad)
call
dec
pop
cmp
cmp
xchg
scas
add
(bad)
sub
inc
mov
clc
loopne
(bad)
jg
gs
push
jnp
and
mov
cmc
outs
add
adc
(bad)
call
mov
and
cmp
xchg
iret
imul
push
(bad)
(bad)
imul
push
pop
inc
add
gs
in
test
adc
retf
(bad)
(bad)
(bad)
call
sub
pop
push
or
jmp
ja
ins
loope
adc
hlt
scas
xor
inc
in
loope
aaa
movs
sbb
xor
das
rcr
cmp
inc
fistp
lods
push
mov
dec
add
mov
jmp
data16
xchg
loop
(bad)
push
das
cwde
mov
fnstsw
clc
add
aad
and
scas
clc
(bad)
push
jmp
repz
loop
xor
addr16
cdq
es
sub
std
(bad)
mov
sub
cdq
arpl
das
xlat
les
call
(bad)
(bad)
(bad)
fidivr
xchg
fimul
cmc
outs
popf
mov
xchg
mov
stos
dec
xchg
dec
fwait
(bad)
(bad)
(bad)
call
aas
inc
and
pop
xor
call
dec
add
inc
adc
cld
dec
mov
xchg
(bad)
(bad)
call
popa
pop
cmp
loope
repz
movs
scas
fcmovnbe
push
pop
cwde
mov
cmps
(bad)
(bad)
(bad)
(bad)
jmp
fs
iret
lds
inc
push
xchg
ins
jbe
mov
mov
bound
push
into
(bad)
(bad)
out
clc
mov
push
jle
inc
adc
inc
xor
bound
sahf
in
(bad)
call
cli
xor
xchg
imul
mov
out
xchg
imul
mov
(bad)
(bad)
push
sub
ficom
iret
sub
mov
xchg
jmp
ss
sub
mov
dec
nop
out
pop
std
(bad)
cmp
lds
loop
add
pop
fadd
js
xchg
mov
fwait
(bad)
call
jp
icebp
les
or
ret
jle
cld
minps
xlat
mov
sub
or
(bad)
call
dec
mov
xor
xor
inc
scas
retf
dec
mov
pop
std
(bad)
call
fcmovbe
hlt
xor
data16
xor
cmps
movs
adc
dec
es
(bad)
push
aam
(bad)
fcomip
sar
(bad)
fnsave
dec
lds
fwait
push
jmp
dec
neg
idiv
pop
jl
iret
fwait
mov
jge
or
xchg
imul
stos
sbb
xor
mov
cdq
pop
dec
outs
cmp
and
call
(bad)
scas
pop
jo
xchg
and
icebp
dec
adc
mov
or
int
jg
aas
or
xor
and
push
jg
aaa
bnd
pop
std
call
movs
xchg
test
pop
repnz
test
adc
test
or
mov
mov
push
push
popa
mov
loop
in
movs
cmp
(bad)
(bad)
(bad)
cmp
push
jb
inc
xchg
jnp
mov
scas
mov
mov
sti
dec
mov
(bad)
(bad)
(bad)
(bad)
in
mov
cmp
lea
movs
dec
cli
inc
jp
gs
xchg
adc
dec
xchg
(bad)
inc
push
inc
sub
dec
sub
mov
repz
lock
or
xor
lock
(bad)
dec
repnz
mov
jp
sub
xchg
adc
stos
test
mov
mov
or
push
mov
gs
jne
outs
rcl
fisubr
sti
cmp
pop
xchg
gs
popf
push
loopne
outs
rol
cmc
call
in
push
or
mov
fnstenv
in
inc
lock
(bad)
dec
xchg
test
pop
inc
stos
mov
mov
scas
outs
(bad)
xor
(bad)
fbstp
aas
xchg
sbb
cmp
(bad)
cmp
xchg
mov
adc
mov
or
aaa
cld
(bad)
mov
add
les
jge
xor
sti
cmp
aaa
mov
push
lock
(bad)
push
push
jl
fwait
int
xchg
or
push
xchg
outs
fnstenv
xchg
ins
mov
xchg
(bad)
call
push
int
or
jmp
mov
or
dec
addr16
pusha
arpl
push
cld
push
outs
out
outs
(bad)
in
outs
sahf
fidiv
inc
push
mov
fcomp
in
in
test
dec
fwait
ins
push
(bad)
(bad)
(bad)
dec
fwait
xor
cmp
inc
pop
shl
pop
jg
loopne
add
(bad)
(bad)
(bad)
inc
jecxz
add
push
das
dec
js
dec
pop
dec
stc
rcl
cmc
(bad)
jnp
inc
mov
push
jmp
icebp
popf
push
out
jno
xchg
adc
rcl
xchg
mov
cli
push
mov
lods
push
dec
vandnps
push
dec
cs
les
shr
inc
(bad)
(bad)
(bad)
dec
dec
jno
mov
(bad)
jmp
sub
fdivr
repnz
dec
imul
push
addr16
sbb
mov
pop
or
rcl
mov
stc
cs
les
push
loope
ror
cmps
and
cli
(bad)
(bad)
push
mov
sub
out
sar
sbb
test
pushf
and
fldenv
loope
jmp
clc
jo
(bad)
xchg
jecxz
scas
ins
dec
inc
gs
fdiv
rcl
adc
jno
(bad)
mov
mov
add
or
push
icebp
retf
sar
(bad)
(bad)
(bad)
fisttp
in
mov
cdq
push
aaa
scas
shl
dec
cli
cmovge
sub
cs
mov
adc
(bad)
(bad)
jmp
cs
or
and
dec
xchg
ss
sub
mov
stc
int
(bad)
(bad)
jmp
js
bound
xchg
jb
aaa
mov
xchg
jecxz
fsub
outs
in
mov
mov
add
jmp
ins
repnz
xor
xchg
pop
lods
mov
ss
add
adc
mov
(bad)
push
ja
jp
ja
push
jmp
ins
popf
addr16
mov
mov
xchg
cmp
ins
aad
push
add
fisubr
sub
in
mov
(bad)
mov
inc
dec
loop
ja
imul
out
jo
push
lock
mov
lock
std
in
ret
sti
jmp
ficomp
repnz
fdiv
call
sar
in
jecxz
mov
dec
mov
mov
xchg
loop
push
sub
add
stos
lds
pop
mov
or
fisub
(bad)
mov
es
shl
hlt
jae
sub
jge
mov
stos
sbb
ret
xchg
mov
push
std
mov
sbb
mov
pop
lods
neg
or
mov
jmp
scas
movs
ds
mov
aas
call
push
mov
stos
or
movs
inc
fdivr
test
sub
jo
std
aaa
std
call
into
icebp
inc
sbb
ds
rcl
sub
lock
pop
mov
(bad)
(bad)
(bad)
mov
or
xor
es
mov
movs
fs
retf
mov
test
mov
int3
sbb
(bad)
js
xor
(bad)
mov
push
fcom
(bad)
jmp
sbb
and
jp
cmp
xlat
fsubr
mov
(bad)
mov
mov
mov
add
int3
jp
dec
ret
fdivr
sub
push
push
dec
jbe
jbe
(bad)
leave
repnz
push
xchg
cmp
mov
sbb
sar
jecxz
iret
psrad
lock
pop
xor
ret
adc
(bad)
call
cmp
icebp
mov
inc
add
aam
les
push
xor
add
xchg
ins
fidiv
jae
scas
inc
call
mov
adc
push
(bad)
push
fisttp
fstp
imul
(bad)
jge
ins
mov
mov
sbb
sub
mov
dec
popf
adc
push
sbb
pushf
in
cmps
pop
and
mov
(bad)
(bad)
inc
popa
int3
outs
daa
sub
inc
js
in
shl
jl
ss
je
push
xor
(bad)
jg
popa
or
xor
ins
xchg
fs
mov
push
je
stc
xchg
jne
sub
je
jecxz
dec
stos
icebp
leave
mov
pop
xchg
shl
rcr
stos
fdivp
dec
test
fild
and
push
(bad)
(bad)
push
add
mov
and
push
dec
loopne
jbe
aas
fwait
loopne
sbb
inc
fist
out
dec
das
into
jo
aaa
cld
(bad)
call
bound
cmp
cs
out
mov
mov
jmp
xchg
lahf
mov
xlat
jne
adc
fldpi
mov
cmp
(bad)
(bad)
(bad)
dec
or
stos
inc
les
mov
xchg
ins
push
adc
stos
dec
mov
jmp
jp
(bad)
(bad)
call
test
pop
movs
ja
jmp
sbb
imul
dec
out
sub
dec
and
(bad)
(bad)
fistp
packssdw
sbb
push
dec
dec
and
retf
lock
sbb
pop
(bad)
stc
push
jnp
push
test
cmp
mov
dec
loop
mov
out
pushf
sbb
sub
mov
jmp
(bad)
(bad)
(bad)
out
adc
sbb
xor
out
cmp
repz
fld
shl
(bad)
(bad)
(bad)
jmp
xor
mov
xchg
mov
mov
mov
(bad)
aad
sub
pop
and
push
(bad)
mov
pop
pop
mov
cmp
outs
stos
je
push
jmp
in
retf
pop
icebp
(bad)
(bad)
(bad)
popf
outs
fidiv
xchg
and
mov
ins
(bad)
stos
jge
fbstp
int
mov
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
lods
int3
je
pop
ja
fdivr
xchg
enter
sbb
mov
dec
std
test
fmul
loopne
adc
(bad)
(bad)
(bad)
(bad)
(bad)
mov
and
pop
push
or
les
bnd
add
out
jp
scas
fwait
cli
cdq
in
jecxz
sub
clc
xchg
sub
inc
sar
push
js
aas
mov
xchg
inc
mov
xchg
xchg
lock
clc
dec
pusha
add
aam
stos
mov
sahf
mov
mov
cli
pushf
loop
or
(bad)
(bad)
dec
and
inc
out
inc
test
inc
adc
push
push
mov
data16
(bad)
(bad)
call
jp
adc
cmp
ss
stos
adc
mov
cmc
rol
lods
inc
adc
(bad)
push
call
or
inc
and
jb
inc
(bad)
and
out
fisubr
pushf
cmp
ret
cld
call
xchg
movs
xor
or
mov
clc
test
push
pop
cmc
dec
(bad)
(bad)
(bad)
in
add
cwde
xor
out
int3
push
inc
add
mov
(bad)
inc
es
fwait
inc
cmp
sbb
inc
dec
sub
rol
(bad)
(bad)
(bad)
call
jae
lahf
ins
xor
sub
cmps
mov
inc
xchg
mov
sti
stos
cmp
xchg
(bad)
(bad)
(bad)
jmp
loope
rcr
or
mov
xchg
push
shl
cdq
dec
or
(bad)
(bad)
jge
push
(bad)
jae
in
bound
push
movs
lods
nop
or
inc
outs
in
mov
and
pop
(bad)
(bad)
jmp
call
(bad)
or
aas
cmp
xchg
mov
adc
sbb
pop
(bad)
(bad)
dec
and
mov
xor
mov
in
push
popa
dec
iret
jge
inc
inc
lea
addr16
int3
ret
cmp
mov
push
scas
xor
call
xchg
dec
xor
mov
dec
fmul
out
cmp
adc
(bad)
(bad)
call
out
and
mov
in
mov
lods
loopne
or
cwde
pusha
cmc
jg
mov
call
xchg
(bad)
mov
into
adc
cmc
mov
push
(bad)
(bad)
(bad)
dec
jp
mov
sti
out
movs
sub
rcl
shl
dec
mov
pop
in
sub
or
(bad)
mov
pop
sub
mov
lods
adc
xchg
sbb
mov
inc
adc
scas
mov
int3
sbb
cmp
scas
test
test
(bad)
call
push
call
pop
pop
fwait
call
(bad)
fistp
jo
enter
(bad)
(bad)
call
loop
mov
fwait
pop
stos
sbb
stos
push
cmc
add
cmp
out
stc
call
(bad)
(bad)
(bad)
call
lea
sub
adc
or
jg
inc
loope
or
retf
sti
(bad)
push
(bad)
(bad)
(bad)
dec
loope
adc
add
adc
retf
cmps
pop
pop
xchg
scas
jnp
cli
mov
test
jb
ds
(bad)
(bad)
(bad)
jmp
lods
repz
ror
pop
inc
cmp
mov
push
xchg
xchg
enter
sti
push
loop
pop
sti
scas
pop
or
(bad)
(bad)
es
cmp
popa
fcom
inc
icebp
push
repnz
cmc
lea
hlt
outs
clc
outs
and
xchg
mov
adc
push
pop
lds
or
jmp
pop
aas
sub
or
(bad)
adc
(bad)
(bad)
(bad)
push
adc
mov
js
outs
cmp
adc
test
lea
mov
cld
rol
mov
pop
popf
lock
(bad)
mov
stc
in
lea
mov
in
(bad)
inc
mov
sar
dec
hlt
jbe
ja
fnstcw
sbb
push
inc
or
(bad)
(bad)
(bad)
call
shr
jne
xchg
retf
pop
adc
push
test
cmp
repz
sbb
mov
lahf
pop
sub
(bad)
(bad)
push
(bad)
xchg
or
or
sub
mov
ret
push
(bad)
mov
jns
adc
xchg
sub
shr
sub
jge
dec
mov
dec
loop
fst
imul
retf
and
in
adc
stos
xor
xchg
retf
inc
ins
add
iret
adc
je
(bad)
pushf
adc
add
jg
js
fwait
imul
or
adc
test
(bad)
(bad)
jmp
pop
mov
std
(bad)
rep
jns
or
xor
or
(bad)
(bad)
(bad)
push
mov
out
dec
cmps
pop
cmp
nop
and
adc
sbb
test
adc
push
xchg
mov
push
dec
imul
cdq
xchg
movs
loope
pop
and
arpl
mov
movs
(bad)
push
test
sar
dec
sub
sbb
leave
mov
adc
inc
into
dec
test
xchg
nop
pop
or
pusha
xchg
movs
(bad)
(bad)
(bad)
push
push
adc
sbb
popa
(bad)
or
sub
jecxz
stc
mov
repz
and
aam
test
mov
movs
es
inc
push
xchg
cmp
fnstcw
mov
(bad)
(bad)
(bad)
push
xor
dec
in
xchg
jp
test
(bad)
mov
jg
push
adc
adc
sbb
add
in
(bad)
(bad)
(bad)
jmp
adc
pushf
rcr
gs
out
ret
xchg
scas
ins
push
test
(bad)
(bad)
push
iret
loope
mov
je
and
inc
enter
push
stos
shl
mov
mov
pop
(bad)
(bad)
(bad)
jmp
jle
cmp
or
mov
arpl
xchg
sub
repz
stos
addr16
(bad)
(bad)
dec
xor
ja
jp
add
loopne
imul
inc
dec
xchg
xchg
inc
in
loope
push
iret
mov
enter
outs
scas
mov
bnd
adc
out
shl
inc
imul
xchg
(bad)
(bad)
jmp
out
nop
or
test
out
jmp
test
ret
adc
ret
push
sub
sbb
jae
lahf
lahf
jl
push
popf
mov
jmp
int3
jns
adc
enter
sub
fistp
and
push
(bad)
dec
add
jl
sar
std
mov
add
push
fbstp
(bad)
(bad)
(bad)
push
idiv
cmp
out
ds
cli
sub
mov
inc
xchg
cdq
out
out
pop
push
adc
adc
adc
dec
lock
rol
sub
fisttp
jmp
addr16
in
mov
jnp
dec
out
sbb
dec
xor
(bad)
dec
aam
or
sti
mov
push
push
hlt
in
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
ja
jae
mov
ds
push
ror
test
pop
sbb
mov
mov
(bad)
(bad)
(bad)
call
bts
(bad)
je
xchg
mov
jl
dec
jge
mov
mov
dec
cmp
adc
adc
pop
pop
data16
sbb
cmp
inc
mov
(bad)
(bad)
dec
push
aaa
lock
cmps
out
push
cmp
adc
int
in
out
cwde
stos
call
(bad)
(bad)
(bad)
inc
and
sti
cmp
jle
jmp
mov
in
push
clc
into
jae
std
int3
mov
sub
or
and
(bad)
pop
pushf
nop
xchg
dec
push
jmp
enter
ror
js
in
(bad)
(bad)
(bad)
jl
inc
in
mov
(bad)
aad
pop
pop
mov
lods
mov
and
sub
pusha
jg
(bad)
(bad)
cli
lods
fsub
and
fbld
jo
mov
mov
push
cmc
and
je
ret
jg
ret
cli
(bad)
push
clc
in
push
xor
dec
rcl
lahf
int3
inc
and
mov
out
push
movs
mov
addr16
mov
pushf
xor
cmp
dec
xlat
(bad)
(bad)
jmp
stos
push
cmp
sbb
int3
movs
sub
mov
pop
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
inc
inc
arpl
mov
popa
mov
jmp
in
je
aaa
sbb
dec
addr16
mov
test
or
cld
mov
add
push
add
(bad)
(bad)
jmp
leave
das
lea
loope
pop
inc
cvtps2pi
mov
shl
(bad)
(bad)
call
sbb
pushf
mov
push
inc
pop
stc
popf
push
ins
in
inc
jne
and
mov
jg
inc
jbe
sbb
xchg
jne
inc
lds
mov
jae
daa
and
push
ret
lds
leave
pop
pusha
push
lahf
movs
push
mov
and
sub
aam
data16
adc
lods
inc
or
ret
pop
loope
lods
sbb
xor
sub
add
mov
mov
int
dec
out
sbb
(bad)
(bad)
call
pop
call
gs
gs
outs
lods
outs
jmp
cmp
xchg
inc
into
(bad)
(bad)
(bad)
inc
dec
pop
int
dec
sub
hlt
retf
repz
sub
cmp
loope
cmp
push
aam
fisubr
mov
dec
add
mov
or
lods
xor
inc
jns
inc
arpl
pop
pushf
lds
jecxz
dec
sub
xchg
loope
ja
mov
ja
ret
in
cwde
mov
aas
pop
sub
or
sub
test
push
(bad)
(bad)
inc
shl
jne
(bad)
std
pop
mov
mov
adc
jecxz
bound
add
jg
inc
ret
out
(bad)
int3
nop
movs
and
imul
(bad)
(bad)
(bad)
dec
fldcw
bound
xor
cmps
xchg
clc
neg
or
adc
mov
or
cmp
jle
mov
call
push
cmp
xor
dec
out
in
aaa
or
or
push
(bad)
sar
jmp
jb
push
adc
test
or
loopne
movs
aaa
jne
cmps
or
and
xor
scas
pop
in
inc
rcl
lea
(bad)
imul
jmp
push
adc
inc
in
loope
adc
jmp
jbe
inc
shl
xor
sti
(bad)
mov
out
ja
fiadd
retf
cmps
sbb
leave
lock
mov
(bad)
(bad)
dec
stos
adc
mov
stos
arpl
mov
pushf
and
mov
jecxz
(bad)
(bad)
inc
rol
sbb
outs
dec
cmc
stos
mov
or
add
mov
(bad)
lahf
jmp
mov
fsubr
dec
call
fsubr
adc
repnz
dec
jo
out
xor
xchg
sbb
push
(bad)
xor
push
dec
ins
cli
fdiv
pop
mov
cmps
lahf
pushf
and
sub
into
les
(bad)
mov
add
adc
loop
jnp
sub
(bad)
(bad)
call
in
js
jae
inc
and
arpl
sbb
sub
or
dec
ins
inc
push
out
cli
(bad)
(bad)
mov
out
shr
rcr
dec
sbb
cmp
xor
jae
mov
nop
jmp
shl
or
fldcw
loope
lods
sub
iret
mov
stos
xchg
push
cs
(bad)
(bad)
inc
mov
sub
dec
fstp
shr
inc
inc
pop
fwait
push
enter
adc
bound
(bad)
(bad)
jmp
sbb
hlt
mov
jno
cmp
cld
and
jl
int3
shl
mov
(bad)
(bad)
(bad)
(bad)
std
pop
pop
jnp
xor
ins
mov
iret
push
sbb
clc
pop
(bad)
sbb
mov
call
pop
stos
sub
or
mov
in
fwait
pop
mul
(bad)
push
cld
fst
hlt
(bad)
fcom
inc
xor
cmc
retf
push
(bad)
(bad)
call
idiv
mov
ret
sub
in
lods
xchg
clc
ss
fs
sar
or
or
or
mov
mov
retf
mul
in
das
sar
fwait
retf
sub
sub
jae
mov
sub
add
das
mov
pop
retf
jp
(bad)
(bad)
call
jae
pop
push
push
addr16
pop
cmps
retf
and
les
inc
mov
push
jnp
(bad)
jg
cmp
pop
adc
mov
jne
cmps
jbe
lahf
adc
ins
jmp
xor
stc
mov
fidivr
xor
push
push
fwait
sub
sub
icebp
inc
pop
push
loop
xchg
mov
mov
push
jb
imul
test
xor
imul
(bad)
(bad)
(bad)
dec
sub
sar
jns
xor
daa
sub
push
cmp
sub
out
fstp
dec
icebp
out
scas
adc
fdivp
out
(bad)
cdq
jb
sub
test
das
cli
(bad)
jmp
sub
imul
fbstp
push
mov
dec
or
sbb
inc
lock
clc
sti
jb
in
fistp
and
(bad)
fsub
(bad)
call
out
not
stos
adc
hlt
push
cmps
ret
in
dec
jo
(bad)
jg
mov
xchg
cdq
mov
sub
inc
add
cdq
push
mov
(bad)
jmp
push
jge
dec
jmp
pop
aam
jmp
inc
mov
retf
test
cld
(bad)
jmp
inc
fldenv
fwait
and
adc
movs
cmp
data16
cmp
pop
xor
(bad)
(bad)
jg
retf
(bad)
xor
jno
arpl
xchg
fs
shr
sahf
xor
clc
(bad)
dec
jb
fisttp
pop
xor
push
push
and
sbb
loopne
clc
(bad)
(bad)
inc
push
sbb
retf
lds
dec
mov
loop
out
pushf
outs
sub
mov
dec
out
mov
adc
into
xchg
and
(bad)
jmp
sbb
mov
outs
or
cld
in
ret
or
(bad)
(bad)
jmp
add
aad
lock
jb
sub
adc
adc
xchg
test
mov
dec
je
sub
(bad)
(bad)
(bad)
(bad)
call
mov
jns
inc
dec
xor
pop
addr16
je
mov
cmp
jno
(bad)
(bad)
(bad)
push
in
mov
cmp
mov
inc
test
xchg
(bad)
jmp
fwait
push
mov
xchg
xor
dec
or
push
movs
retf
cld
call
push
popf
push
loopne
and
jbe
sbb
lea
or
lods
les
mov
(bad)
(bad)
jmp
inc
cdq
jmp
or
mov
test
push
cmps
sbb
(bad)
mov
addr16
call
repz
or
lahf
cmp
imul
(bad)
(bad)
jmp
or
les
add
(bad)
jnp
xlat
scas
xchg
out
fwait
add
xchg
ins
jecxz
adc
pop
das
sar
jmp
loope
mov
mov
nop
icebp
(bad)
call
aam
in
cmp
cmc
push
jno
outs
jnp
and
sti
out
pushf
into
adc
(bad)
jge
loope
add
mov
cs
adc
pushf
ja
mov
xor
cmp
and
jns
or
(bad)
iret
fs
jmp
and
call
je
jnp
sti
ins
inc
lock
(bad)
(bad)
pop
jecxz
mov
jl
jge
mov
loopne
cmp
imul
mov
mov
mov
(bad)
(bad)
(bad)
call
xchg
mov
imul
(bad)
stos
pop
or
pop
std
mov
mov
mov
add
movs
and
pop
into
enter
fcmovb
jle
jle
adc
jnp
(bad)
(bad)
aas
dec
pop
mov
mov
jmp
xor
aam
or
(bad)
clc
(bad)
jo
jmp
and
sub
or
adc
(bad)
ficomp
(bad)
(bad)
jmp
xlat
push
cmp
pop
cmp
dec
fwait
mov
daa
xor
test
(bad)
(bad)
call
adc
jo
outs
scas
or
(bad)
push
pop
cmp
test
cld
(bad)
dec
cmp
mov
cmp
scas
cmp
aaa
sahf
cmp
pop
(bad)
(bad)
jmp
icebp
stos
retf
jle
jo
push
dec
(bad)
imul
loop
jmp
pop
adc
jno
and
cmps
inc
pop
popf
pop
xchg
ror
add
rcl
adc
(bad)
(bad)
mov
adc
push
mov
mov
(bad)
loopne
enter
push
xchg
xlat
xchg
clc
out
mov
aaa
cld
call
dec
imul
inc
mov
pop
adc
lock
dec
(bad)
call
push
shl
inc
dec
dec
retf
adc
mov
adc
dec
clc
inc
mov
sar
out
sub
xchg
adc
stos
jp
sub
(bad)
(bad)
(bad)
call
div
les
jmp
xchg
add
sahf
cdq
jl
mov
(bad)
fcomip
(bad)
dec
xchg
leave
outs
aas
adc
xchg
xchg
sub
mov
cwde
shl
jne
(bad)
(bad)
(bad)
jg
mov
repnz
jl
jp
and
jb
dec
jecxz
mov
lds
nop
(bad)
xor
(bad)
(bad)
jmp
clc
ja
jo
mov
sbb
mov
dec
ds
mov
std
aaa
pop
xor
mov
sub
(bad)
(bad)
call
scas
sub
mov
xchg
ss
mov
xor
shr
xchg
sbb
shl
stc
cmp
and
mov
ret
push
jle
xchg
jle
pop
cld
stos
dec
inc
int3
dec
out
inc
push
mov
rcr
ret
pushf
adc
lock
gs
pop
push
lock
adc
mov
jg
sbb
bound
dec
and
xchg
ret
mov
pop
and
sahf
push
bound
sti
paddd
(bad)
cmc
pop
loop
sbb
movs
xchg
std
push
adc
push
xor
test
(bad)
fadd
fcos
(bad)
push
pop
mov
fld
xchg
mov
sbb
scas
clc
jg
push
sbb
int3
fcmovbe
imul
nop
push
bound
jmp
sub
and
dec
add
scas
out
inc
pop
jmp
sub
cdq
pop
adc
pop
jmp
inc
lea
(bad)
and
adc
lock
adc
mov
mov
call
cmps
cdq
lods
sbb
inc
out
push
mov
jg
(bad)
mov
mov
push
rol
data16
dec
(bad)
xor
iret
xchg
mov
cdq
jg
push
in
std
push
js
fidiv
push
imul
je
xor
pop
std
scas
push
clc
pop
stc
xor
dec
int
sbb
inc
cmps
(bad)
repz
xchg
scas
mov
add
pop
cmc
lock
iret
popf
bound
inc
mov
inc
dec
cli
lods
jno
cmps
call
(bad)
dec
xor
js
jge
push
or
(bad)
ds
pmulhuw
inc
scas
icebp
sbb
outs
into
jbe
or
cld
daa
outs
push
sar
sbb
push
loope
(bad)
(bad)
mov
xchg
lds
lea
test
movs
cmc
mov
mov
es
leave
fiadd
mov
ins
add
xchg
(bad)
adc
xchg
in
and
lock
repnz
jle
mov
mov
stos
mov
scas
in
fild
push
push
cmp
jg
or
ret
mov
scas
leave
jns
pop
(bad)
(bad)
mov
(bad)
cmc
and
sbb
(bad)
cli
lds
dec
pop
test
dec
and
push
and
mov
cmp
clc
jg
inc
movs
jo
pop
cmp
add
cmp
pop
jg
test
mov
stos
or
es
clc
mov
cs
mov
aam
(bad)
imul
jl
fmul
shl
shr
add
push
fist
pop
arpl
call
call
mov
jae
jmp
jnp
mov
and
es
push
ds
out
xchg
loop
call
movs
loopne
xor
adc
icebp
mov
add
push
sub
and
mov
mov
inc
cmp
lds
bound
pop
jns
inc
add
mov
ficomp
xchg
inc
sar
in
fild
sub
data16
ds
push
das
clc
pop
jge
scas
stos
add
pushf
pop
es
push
fcmovu
sbb
sub
aaa
cld
lock
(bad)
xor
mov
movs
push
fisttp
data16
adc
cld
xchg
lahf
pushf
sub
cmp
ret
dec
ret
and
ficomp
(bad)
(bad)
(bad)
mov
mov
xchg
lds
icebp
add
call
and
int3
dec
push
xor
or
fldenv
cmp
out
xchg
daa
leave
add
xor
xlat
push
sbb
(bad)
call
inc
adc
ret
mov
mov
adc
or
into
jecxz
pushf
inc
xor
std
dec
or
(bad)
inc
and
fld
leave
add
jae
inc
and
or
(bad)
(bad)
inc
mov
test
cs
fsubp
lahf
sahf
mov
in
scas
mov
leave
jns
inc
xchg
pushf
jmp
call
push
jbe
outs
sbb
repnz
sub
dec
push
dec
int3
adc
(bad)
(bad)
(bad)
(bad)
fimul
addr16
repnz
xchg
shl
movs
push
adc
xchg
xchg
cwde
adc
sbb
mov
push
sub
dec
aad
ror
add
pop
call
les
mov
sti
int3
in
ja
xor
(bad)
fdiv
test
sub
cmp
inc
dec
inc
dec
(bad)
(bad)
(bad)
jmp
nop
or
movs
add
inc
xchg
leave
(bad)
push
mov
dec
pop
xchg
push
jmp
pop
xchg
dec
cmps
fcomip
(bad)
jmp
push
(bad)
stos
fistp
jecxz
add
aad
xchg
inc
xor
push
cwde
mov
mov
push
and
test
aam
fimul
and
xchg
aad
nop
inc
mov
(bad)
(bad)
mov
and
sub
jnp
retf
adc
mov
(bad)
(bad)
(bad)
inc
mov
dec
test
movs
jnp
or
jno
inc
(bad)
add
fadd
(bad)
(bad)
(bad)
(bad)
fsubp
jae
add
sbb
or
push
dec
stc
mov
dec
js
or
dec
stos
popf
xchg
pusha
mov
jg
call
inc
cmp
ins
test
jbe
loopne
stos
fwait
sub
sub
sar
daa
aas
or
xlat
(bad)
call
out
jbe
xor
cmp
bound
sbb
int
(bad)
(bad)
jmp
push
mul
aad
out
or
ret
mov
jbe
cmp
mov
out
popf
mov
test
mov
sahf
fcmovu
push
and
jnp
enter
(bad)
mov
cmc
jmp
jg
iret
jle
aaa
repz
and
ud2
call
mov
mov
(bad)
jmp
mov
aas
aaa
fwait
dec
mov
(bad)
push
dec
jg
push
pop
cs
imul
into
ds
dec
jnp
mov
inc
shr
mov
cmp
loop
mov
jmp
psllq
push
pop
aas
movs
test
and
fidivr
push
leave
data16
rcl
lods
jle
jno
lods
cmp
nop
xchg
fwait
xlat
xor
push
clc
lods
mov
fld
addr16
ss
imul
repnz
mov
and
(bad)
(bad)
jg
pop
or
and
fucomip
dec
clc
fnstenv
add
cmp
push
pop
shr
sbb
pop
lock
jmp
call
xlat
cld
pop
(bad)
sub
aad
lahf
leave
daa
test
call
inc
scas
mov
jmp
(bad)
imul
jno
inc
inc
ret
push
inc
clc
(bad)
iret
std
(bad)
jmp
sbb
ss
stc
scas
mov
ret
(bad)
fcomip
std
pop
cmp
xchg
popa
ins
outs
stos
loop
adc
aaa
pushf
adc
mov
mov
(bad)
enter
ins
jge
fidivr
add
(bad)
sbb
xchg
pop
popa
or
adc
fild
stos
dec
sbb
test
mov
and
out
clc
sti
loopne
mov
inc
nop
fwait
push
test
lahf
loope
(bad)
(bad)
fcomi
adc
in
jle
stos
aas
repz
push
(bad)
aaa
dec
(bad)
arpl
or
dec
aas
ret
mov
jg
loope
stos
sbb
pop
movs
sub
mov
(bad)
push
das
cmp
aas
(bad)
jmp
(bad)
call
mov
ins
mov
jg
lods
mov
sbb
into
imul
aas
clc
push
sahf
fstp
popf
push
mov
mov
sbb
and
xor
push
mov
fwait
jbe
lea
(bad)
fistp
ja
ret
cld
call
das
ss
jmp
popa
sbb
cmps
jg
jmp
inc
lods
mov
clc
jmp
popf
fidivr
adc
jmp
loop
jg
addr16
fcmovu
dec
hlt
mov
(bad)
ins
gs
(bad)
icebp
dec
xchg
(bad)
std
adc
aas
inc
push
sahf
ret
cld
fstp
xchg
mov
jmp
aas
mov
xchg
(bad)
mov
sahf
lds
popf
fxch
adc
inc
inc
iret
icebp
lods
out
pop
or
(bad)
outs
lea
push
push
loope
hlt
cmp
mov
jbe
jg
rcl
pop
cmp
xchg
cmc
cli
loope
scas
clc
mov
cs
repz
mov
fcom
xchg
sbb
int
je
pop
inc
and
lods
jb
pop
(bad)
cld
mov
xor
or
les
iret
cld
xchg
ja
paddusb
(bad)
(bad)
call
mov
or
repnz
jl
sbb
addr16
jg
push
cdq
pushf
shl
and
or
xchg
pop
cld
arpl
ds
fwait
shr
adc
out
(bad)
(bad)
pop
stos
lock
sub
clc
cmps
ret
das
ror
fdivr
in
inc
xlat
(bad)
test
pop
push
pop
repnz
cli
or
das
jp
arpl
jns
cmc
outs
into
idiv
call
jl
mov
inc
iret
nop
into
mov
in
jg
nop
aas
hlt
popf
xchg
hlt
push
icebp
mov
add
mov
ds
mov
(bad)
aas
repnz
retf
mov
adc
cld
gs
cmps
lock
out
(bad)
daa
cmp
jecxz
cmp
out
lock
inc
or
pop
(bad)
push
retw
aad
outs
jno
sub
loope
sahf
test
scas
xchg
jg
mov
mov
stc
lds
jmp
mov
rcl
sub
je
inc
cmps
mov
sti
dec
nop
stos
push
lahf
pop
pop
in
(bad)
dec
pushf
addr16
test
jl
retf
lds
fwait
icebp
in
(bad)
call
cmc
lahf
stc
and
outs
sub
and
pop
xor
inc
adc
pop
mov
push
mov
xor
cmps
add
or
lods
es
pop
push
pop
lods
sbb
jns
into
push
xor
mov
bound
(bad)
outs
fist
mov
idiv
fcmovnu
iret
call
js
fwait
int
mov
inc
mul
int
pop
icebp
cmp
cli
sub
dec
(bad)
pop
adc
fstp
(bad)
sar
test
rol
jg
pop
fstp
xchg
xor
fldcw
pop
daa
hlt
adc
xor
mov
in
repz
cdq
jg
stc
call
int3
jg
ret
add
(bad)
pop
icebp
dec
pop
imul
mov
jo
in
pop
mov
sti
inc
popa
pop
and
cmp
ins
mov
adc
xor
(bad)
push
cmc
pop
inc
sbb
xchg
dec
call
stos
sbb
jp
mov
dec
movs
std
enter
out
(bad)
(bad)
(bad)
(bad)
in
sub
adc
int
jge
in
mov
pop
or
and
sahf
(bad)
aam
(bad)
(bad)
(bad)
mov
fcomi
jno
stos
sub
fld
inc
retf
retf
mov
ins
push
mov
call
mov
mov
pop
mov
or
scas
adc
(bad)
(bad)
(bad)
jmp
test
addr16
and
fst
mov
nop
add
ror
mov
inc
dec
mov
ret
(bad)
jmp
mov
cs
ja
or
aam
mov
jnp
xchg
mov
(bad)
mov
fwait
enter
and
out
sub
adc
add
push
nop
(bad)
(bad)
(bad)
call
jo
pop
jge
sbb
mov
adc
(bad)
cmp
(bad)
or
jmp
scas
add
js
push
sub
lods
test
and
push
fs
(bad)
(bad)
(bad)
jp
sbb
xor
pop
loop
mov
sub
cmp
imul
add
(bad)
(bad)
inc
data16
int
xor
adc
or
addr16
out
sbb
das
enter
cmp
(bad)
(bad)
(bad)
jmp
mov
or
add
push
inc
mov
mov
sub
or
loope
aam
sub
xchg
push
jge
mov
mov
cmp
aad
pop
mov
(bad)
(bad)
push
jmp
sbb
mov
out
jecxz
sbb
js
sub
(bad)
(bad)
(bad)
inc
or
cmp
dec
jo
add
rcr
fimul
mov
and
aam
or
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
sbb
xchg
lods
or
movs
out
mov
dec
inc
jns
pop
mov
(bad)
(bad)
(bad)
dec
mov
adc
adc
loope
lods
sub
adc
jo
push
or
sub
adc
mov
movs
xor
fwait
inc
movs
aad
xor
push
jae
push
or
sbb
sbb
(bad)
(bad)
inc
pop
pop
sbb
xchg
and
ins
cmp
cld
je
xor
cwde
lock
adc
ror
clc
(bad)
(bad)
jmp
mov
arpl
movs
add
sbb
cmp
lea
adc
fst
(bad)
jmp
mov
test
adc
cmp
lods
rcl
sbb
ror
(bad)
inc
push
or
test
adc
lods
push
repz
xchg
jl
inc
lds
mov
push
pop
arpl
sbb
xchg
pop
inc
mov
and
cmp
inc
xor
add
(bad)
(bad)
jmp
movs
mov
je
(bad)
test
call
pop
pop
movs
mov
test
(bad)
push
pop
fmul
test
mov
and
dec
dec
dec
leave
adc
push
inc
inc
xlat
das
aad
cmp
adc
dec
les
mov
test
imul
push
push
push
adc
jnp
xchg
xor
(bad)
(bad)
dec
repnz
cmp
dec
push
test
jmp
in
or
mov
jp
xchg
mov
rcl
push
jl
inc
cli
(bad)
(bad)
call
mov
lahf
sbb
cld
rcr
loopne
js
cmp
fdiv
cld
addr16
call
xor
sub
inc
loop
stos
xchg
cmp
push
(bad)
(bad)
(bad)
call
xor
ficom
xchg
adc
or
cdq
dec
aad
popf
(bad)
sbb
pop
scas
shl
or
ffree
and
mov
mov
jno
(bad)
(bad)
call
imul
inc
adc
lock
mov
cmp
call
jge
jge
pop
sahf
outs
inc
cwde
mov
mov
push
xchg
(bad)
(bad)
(bad)
jmp
pop
iret
sub
(bad)
fmul
xlat
fcmovnb
or
in
pop
es
mov
std
(bad)
dec
nop
adc
and
test
or
in
(bad)
push
push
xchg
test
mov
inc
outs
mov
ret
imul
and
cmps
popa
mov
add
out
xor
xchg
(bad)
(bad)
clc
push
inc
xor
test
cwde
mov
push
pushf
pop
dec
adc
push
sbb
test
pop
sbb
(bad)
(bad)
jmp
and
outs
mov
mov
mov
add
or
ficom
fcomip
(bad)
jmp
jnp
xor
gs
cmps
pop
jo
sti
jb
jp
sbb
xor
and
dec
(bad)
(bad)
(bad)
jmp
imul
lods
lods
xor
add
dec
inc
jae
inc
leave
(bad)
stc
ficom
(bad)
(bad)
push
int3
inc
pop
xchg
xchg
mov
push
push
movs
test
dec
push
je
cmp
ret
add
push
ficom
leave
pop
add
and
push
inc
jecxz
rol
dec
ds
mov
adc
test
xor
jmp
retf
pushf
mov
bound
(bad)
(bad)
(bad)
mov
adc
or
inc
retf
es
sbb
cwde
dec
int3
js
pop
dec
jns
mov
push
(bad)
(bad)
call
ins
lea
xchg
(bad)
jb
cdq
and
cmc
stos
ins
xchg
dec
inc
(bad)
fdiv
jmp
test
arpl
xchg
mov
lods
sbb
pop
dec
addr16
(bad)
(bad)
(bad)
jl
imul
stc
push
popa
sub
dec
mov
in
les
(bad)
call
gs
shr
mov
pop
mov
mov
add
(bad)
(bad)
(bad)
call
(bad)
sbb
rcl
dec
mov
addr16
movs
rcr
mov
inc
sub
pop
and
xchg
jge
push
aaa
in
les
wrmsr
lea
mov
pop
into
loop
(bad)
or
(bad)
dec
cmp
mov
push
test
int
stc
fucomi
mov
inc
popf
data16
(bad)
jmp
loop
mov
mov
(bad)
pop
sub
cdq
push
add
ja
(bad)
(bad)
dec
dec
rol
mov
lea
je
push
into
push
mov
test
gs
pop
test
jl
pop
dec
mov
mov
movs
inc
inc
adc
jmp
xchg
jbe
bound
mov
and
push
movs
fisttp
outs
mov
jbe
shl
or
sub
pop
rcl
mov
(bad)
fcmovu
(bad)
inc
retf
(bad)
jg
cmp
xchg
movs
jbe
ja
dec
push
bound
inc
lahf
xchg
inc
adc
lds
mov
jmp
and
add
mov
or
push
sar
das
cmp
dec
sub
sub
adc
dec
inc
xchg
(bad)
xchg
adc
fcomp
jmp
cli
xchg
(bad)
(bad)
(bad)
inc
pushf
and
mov
jbe
sbb
fiadd
xchg
cs
adc
sub
mov
(bad)
adc
pop
(bad)
cwde
pop
enter
dec
or
push
outs
mov
pop
dec
push
ja
mov
(bad)
(bad)
(bad)
call
out
jno
xchg
fs
push
je
retf
cli
sbb
js
xchg
mov
movs
jecxz
adc
(bad)
(bad)
push
out
dec
adc
mov
jne
rcl
rcr
dec
fidiv
pop
leave
sbb
repnz
cs
jge
(bad)
(bad)
inc
inc
stos
lods
mov
out
fcomi
das
shl
mov
imul
popf
(bad)
(bad)
jg
sub
sbb
in
sub
jns
mov
xor
ins
jmp
or
(bad)
(bad)
call
not
jns
and
push
gs
ret
and
in
hlt
gs
je
ja
jmp
inc
test
mov
ss
fptan
scas
(bad)
sub
jmp
xchg
inc
mov
pop
add
ins
lahf
(bad)
inc
dec
add
adc
jmp
and
ds
cmp
loop
or
and
jl
(bad)
(bad)
push
movs
clc
push
stos
stos
inc
mov
int3
fcom
mov
or
push
fimul
test
pusha
dec
sahf
ror
rcr
sbb
pop
in
sbb
dec
std
jmp
fsubr
mov
aad
jp
xchg
stos
je
jl
cs
(bad)
(bad)
(bad)
out
out
out
int
jnp
cmp
ins
pushf
mov
push
pop
and
lods
daa
in
mov
jnp
mov
mov
adc
ficomp
fidiv
cmp
les
jne
(bad)
(bad)
(bad)
jg
dec
dec
xlat
xor
or
push
jle
or
iret
push
xor
xor
dec
mov
(bad)
call
jmp
cmp
push
mov
add
loop
mov
mov
call
dec
gs
out
xchg
int3
shl
inc
cmp
mov
out
sbb
(bad)
(bad)
(bad)
call
xor
icebp
js
ror
shr
pop
pop
pushf
ret
das
bswap
xor
pop
cmps
(bad)
(bad)
jmp
mov
(bad)
rcr
pop
and
inc
mov
(bad)
push
fdivr
sbb
(bad)
(bad)
push
cmp
add
rol
cs
cmp
test
(bad)
cmp
pop
sbb
push
ja
push
inc
cmp
or
mov
stos
jmp
mov
test
rcr
sub
(bad)
call
stc
mov
ins
ins
mov
rcr
mov
add
cli
test
(bad)
(bad)
(bad)
(bad)
fstp
xchg
mov
repnz
or
push
nop
push
adc
xchg
cdq
push
scas
jp
(bad)
(bad)
leave
mov
cwde
(bad)
pop
icebp
pop
test
out
enter
push
int3
jnp
xor
(bad)
call
gs
mov
mov
cwde
ret
adc
sub
add
les
(bad)
(bad)
inc
test
mov
and
sub
jo
lds
inc
mov
pop
adc
inc
lods
or
jmp
xchg
bound
(bad)
jmp
push
ret
mov
rcr
mov
shl
xor
pop
xor
popf
jecxz
(bad)
(bad)
(bad)
(bad)
jns
and
cs
pusha
adc
pop
(bad)
call
out
sbb
fld
(bad)
(bad)
fisttp
dec
add
jle
and
sbb
xchg
fnstenv
mov
(bad)
(bad)
(bad)
jmp
aaa
sub
and
pop
ror
movs
or
cmp
test
jle
loope
adc
cmp
js
ins
inc
lds
(bad)
mov
pop
addr16
outs
sti
adc
mov
(bad)
push
(bad)
or
mov
mov
jle
(bad)
stos
out
mov
movs
add
jl
mov
mov
(bad)
(bad)
inc
mov
inc
imul
mov
and
or
retf
sbb
mov
cmp
jmp
inc
fst
std
xchg
icebp
mov
iret
cmps
rcl
(bad)
fmul
jl
(bad)
(bad)
jmp
adc
aad
ret
ret
mov
or
call
sbb
test
call
pushf
xchg
sub
mov
xor
in
xchg
(bad)
(bad)
jmp
and
mov
(bad)
cs
jae
push
pushf
loopne
scas
inc
popf
xchg
xor
call
into
adc
dec
sbb
ja
sub
(bad)
mov
push
scas
(bad)
dec
xchg
cmp
pushf
(bad)
(bad)
(bad)
jmp
in
(bad)
retf
lahf
test
cli
xchg
jne
adc
jae
xchg
mov
jne
add
stc
lahf
jg
call
int3
(bad)
int3
into
int3
lds
repnz
xor
push
push
(bad)
jg
inc
popf
xchg
gs
ror
loop
outs
fnstcw
mov
pusha
fdivr
(bad)
(bad)
call
loopne
pop
loope
or
jo
fbstp
xchg
or
int
inc
out
or
not
cdq
(bad)
mov
and
aam
mov
adc
lods
or
(bad)
(bad)
call
and
and
test
or
inc
mov
test
retf
cmove
sbb
(bad)
inc
or
sbb
sub
lock
add
fld
push
in
and
sar
push
adc
daa
pop
sahf
cmps
mov
mov
adc
adc
inc
cld
dec
(bad)
call
push
xlat
dec
adc
stos
jmp
sbb
cmp
(bad)
(bad)
call
stos
cmp
pop
into
lods
add
or
sub
cmp
pushf
jne
out
out
adc
(bad)
push
push
xchg
xchg
xchg
cmp
add
aad
fwait
mov
ror
(bad)
(bad)
inc
sub
xchg
xchg
rcl
aam
call
add
push
(bad)
push
sub
hlt
xor
jno
test
xchg
mov
push
sbb
jge
jo
jb
jmp
xchg
push
scas
add
call
cdq
cdq
sub
pop
dec
in
xor
retf
pop
pop
(bad)
(bad)
in
push
stc
scas
cmc
dec
imul
jmp
ret
stos
xchg
test
push
in
(bad)
dec
mov
stos
enter
adc
push
sbb
inc
or
into
shr
call
mov
mov
dec
sub
dec
jno
jmp
sahf
(bad)
call
dec
mov
adc
dec
int3
inc
aam
push
shl
gs
movs
adc
adc
movs
int
je
xor
jb
retf
dec
and
inc
inc
pop
shrd
shl
xor
out
push
xchg
hlt
inc
mov
push
cmp
push
lock
push
mov
dec
jb
cmp
(bad)
(bad)
jmp
sbb
jp
inc
jne
sbb
cmp
fwait
dec
push
push
call
dec
mov
xor
rcr
add
pop
fisttp
cmc
push
enter
aaa
ss
in
bound
(bad)
(bad)
jg
bound
call
mov
push
or
add
rcr
je
and
inc
cli
call
push
add
xor
inc
loope
push
push
loope
(bad)
(bad)
dec
jns
cmp
xchg
add
mov
and
jp
push
mov
adc
mov
cmc
add
push
(bad)
mov
sbb
push
call
ds
jmp
das
xor
es
mov
and
pop
push
stos
nop
mov
out
jne
xchg
loope
(bad)
dec
xchg
xor
cmp
and
jns
cwde
push
xchg
mov
data16
adc
test
(bad)
call
mov
mov
in
mov
jno
rcr
fwait
xchg
jg
mov
xor
pushf
popa
adc
(bad)
out
les
push
dec
int3
int
cwde
repnz
outs
fdiv
aaa
jl
pop
cmp
(bad)
(bad)
(bad)
jmp
mov
and
sbb
push
sub
fdiv
mov
dec
push
hlt
(bad)
(bad)
fistp
rol
adc
into
es
xor
sub
and
add
call
cmps
icebp
sahf
int
mov
push
ins
mov
lds
lods
add
push
push
or
(bad)
mov
push
sub
movs
jmp
jb
imul
push
add
(bad)
(bad)
dec
retf
into
xor
dec
imul
push
or
jno
push
push
pusha
dec
stc
pushf
outs
lds
mov
add
mov
xor
xor
pop
mov
popa
ret
and
adc
dec
test
ss
add
xchg
loopne
(bad)
(bad)
jmp
push
dec
popf
pop
adc
dec
stos
xchg
in
xchg
fbld
pop
ins
lods
iret
(bad)
fild
shr
loope
cs
popfw
sar
sbb
push
sub
(bad)
(bad)
(bad)
dec
or
pop
sbb
lock
cmp
mov
xchg
scas
pop
inc
int
cmc
idiv
jecxz
(bad)
dec
(bad)
jo
cmps
jo
add
mov
movs
je
add
mov
retf
aas
mov
popf
ret
loope
add
mov
fidivr
push
ret
adc
ret
push
dec
pop
xor
inc
dec
jae
(bad)
dec
inc
(bad)
cmp
sti
and
xchg
and
adc
push
imul
pop
sti
(bad)
(bad)
out
rcr
outs
sbb
lods
popa
loope
sbb
adc
(bad)
mov
ss
mov
in
test
mov
sar
jle
pusha
rep
gs
cmp
jle
adc
fisttp
jecxz
push
sar
xchg
sbb
lahf
sub
mov
out
push
(bad)
jg
(bad)
cmp
sub
push
push
icebp
ds
sub
add
in
ret
sbb
js
inc
sti
call
loope
movs
mov
sbb
push
jge
mov
and
(bad)
(bad)
(bad)
inc
xchg
pop
jmp
pop
sub
lahf
cmp
jbe
and
or
push
jmp
jle
add
rcr
add
aaa
dec
loope
(bad)
(bad)
call
scas
sub
pop
xchg
inc
movs
dec
lock
aam
rcr
pop
aam
mov
or
out
retf
(bad)
(bad)
push
punpcklwd
add
pop
sub
cmp
cmp
xchg
sahf
dec
jmp
sub
movs
std
or
mov
rcr
mov
jp
daa
call
(bad)
(bad)
in
cdq
xor
sete
loopne
fbstp
jg
into
mov
arpl
out
mov
xor
(bad)
(bad)
call
mov
imul
inc
xor
stos
nop
push
xor
sahf
jne
pop
mov
jmp
push
adc
xchg
jle
adc
mov
movs
add
xchg
mov
(bad)
mov
mov
out
int3
cmps
shr
mov
out
xchg
pop
repz
or
(bad)
(bad)
(bad)
push
nop
or
leave
push
loop
fs
and
in
pop
sub
test
loopne
outs
push
jmp
add
fidiv
mov
mov
sahf
mov
xchg
aaa
xchg
pop
sub
xor
loopne
push
push
sti
(bad)
push
dec
inc
xchg
fadd
sub
(bad)
inc
or
lock
jge
stc
int
and
inc
push
adc
lds
adc
rcl
(bad)
(bad)
dec
(bad)
pop
loope
aam
call
push
hlt
sbb
pop
pop
or
(bad)
(bad)
inc
pushf
enter
fcmovne
mov
pop
shl
dec
push
inc
popf
and
pop
cmp
(bad)
(bad)
call
pop
icebp
push
mov
mov
jns
mov
cwde
fisubr
dec
pop
jmp
mov
adc
add
xchg
sub
mov
es
imul
imul
or
push
pop
xor
adc
dec
pop
ror
mov
js
push
call
xchg
or
push
gs
dec
push
dec
xor
pushf
and
(bad)
call
inc
xchg
pop
imul
mov
fs
or
ret
xor
inc
mov
fwait
in
dec
cmps
push
dec
test
adc
xchg
mov
in
jne
scas
movs
sti
jecxz
inc
icebp
ror
xchg
push
push
jne
mov
shl
(bad)
mov
push
push
sahf
int3
inc
test
cmp
sub
or
cmc
pop
aam
(bad)
(bad)
(bad)
call
dec
push
mov
pop
loop
push
push
mov
adc
mov
xchg
sub
jmp
cmp
mov
xor
adc
adc
lds
test
fisttp
push
add
jne
and
ins
or
lgs
dec
jb
ins
add
(bad)
(bad)
jmp
jno
les
in
push
fadd
jge
pusha
mov
movs
add
mov
(bad)
call
pop
pop
mov
das
xrelease
stos
sub
sub
sub
stc
(bad)
dec
dec
call
aam
and
iret
mov
jg
inc
push
mov
(bad)
call
cld
add
dec
call
scas
mov
ror
jns
mov
inc
pusha
inc
inc
jp
(bad)
(bad)
jmp
sbb
xchg
pop
sub
(bad)
mov
fisttp
shl
into
dec
test
(bad)
jmp
sar
aaa
fild
mov
pop
aad
mov
(bad)
(bad)
(bad)
(bad)
jmp
shr
mov
inc
cwde
sbb
push
sahf
xchg
icebp
cmc
mov
in
inc
push
mov
in
imul
(bad)
(bad)
fisttp
sub
ja
push
scas
xchg
aad
cld
mov
dec
sub
dec
sbb
pop
lea
(bad)
dec
(bad)
ja
lds
int
jno
push
int
ins
lahf
imul
(bad)
clc
add
mov
jbe
lods
popa
adc
into
fstp
test
(bad)
push
idiv
shl
adc
mov
push
ret
dec
sbb
shr
inc
in
icebp
(bad)
(bad)
call
push
add
mov
add
fsub
xor
sbb
mov
push
mov
xchg
sub
into
fbld
fdiv
out
sbb
out
out
mov
out
(bad)
(bad)
inc
jl
iret
fcmovnb
sbb
jmp
mov
cmp
jmp
ins
ds
fld
clc
outs
clc
dec
mov
sar
inc
jnp
and
pop
sbb
jmp
inc
pop
cmc
push
sbb
adc
call
pop
xor
(bad)
inc
lods
mov
cmp
xor
jno
addr16
xor
pop
repnz
mov
push
(bad)
(bad)
(bad)
push
cmps
scas
fsubr
loopne
jo
xchg
xchg
push
push
je
lods
rcr
mov
into
scas
in
pop
cmp
in
push
cld
jmp
add
xor
inc
sub
sub
repnz
inc
jmp
retf
mov
(bad)
jmp
clc
xchg
xor
and
dec
mov
jne
xchg
or
jg
test
push
imul
dec
aam
movs
pop
inc
xchg
js
push
(bad)
call
adc
xor
sub
fwait
inc
adc
jecxz
(bad)
(bad)
(bad)
(bad)
fsubr
dec
stc
test
or
add
or
inc
inc
pop
inc
(bad)
(bad)
inc
adc
sbb
into
xchg
mov
mov
int3
sub
dec
pop
(bad)
call
mov
mov
aas
mov
jo
pop
lods
mov
pop
sar
call
mov
xchg
adc
fs
loope
repnz
(bad)
jg
nop
gs
fyl2xp1
stos
(bad)
cmp
cdq
inc
aad
or
aam
ret
or
out
xchg
adc
adc
(bad)
mov
(bad)
fsincos
and
mov
movs
pop
cs
or
pop
add
push
dec
clc
fidiv
jg
ss
inc
mov
es
fwait
imul
outs
lods
loop
sub
sub
sbb
div
mov
xor
jno
stos
dec
xchg
xchg
retf
add
cld
scas
mov
loop
push
es
(bad)
(bad)
jmp
div
mov
movs
push
gs
cmp
mov
mov
mov
aaa
inc
jmp
clc
call
jae
in
push
cmps
addr16
aas
adc
cmps
int
ins
jb
daa
dec
sub
jmp
arpl
test
sbb
jecxz
xor
xor
inc
push
mov
(bad)
(bad)
(bad)
jl
aaa
xor
mov
sub
and
jecxz
mov
repnz
fwait
(bad)
(bad)
(bad)
cmp
or
push
or
ja
shr
imul
cmp
(bad)
(bad)
push
sbb
add
ja
(bad)
fidiv
push
data16
(bad)
addr16
(bad)
jmp
cli
mov
jp
xchg
mov
test
xchg
fld
fwait
inc
adc
xor
push
std
jmp
xor
gs
jno
imul
mov
in
xchg
leave
int3
(bad)
(bad)
(bad)
dec
leave
int
mov
dec
cld
adc
cmps
movs
mov
xchg
repz
cmp
div
xchg
mov
in
leave
ror
add
dec
movs
movs
cdq
push
add
fnsave
(bad)
(bad)
jmp
(bad)
push
pop
repnz
push
jmp
imul
sub
nop
xchg
outs
(bad)
(bad)
(bad)
(bad)
inc
stos
icebp
sbb
mov
test
and
out
ret
xchg
cmp
adc
(bad)
(bad)
fcomip
jp
add
dec
cmps
adc
daa
mov
lods
inc
mov
mov
clc
(bad)
call
jo
add
(bad)
fs
fnstsw
test
xchg
(bad)
(bad)
mov
nop
test
popf
mov
sbb
in
jnp
gs
(bad)
(bad)
call
xchg
cs
pushf
std
arpl
mov
sti
pusha
fld
gs
pop
mov
cmp
jnp
aad
cli
(bad)
cmp
test
jo
push
mov
retf
add
jg
dec
inc
mov
cdq
dec
adc
xor
adc
mov
mov
pop
popa
in
xor
jle
mov
pop
idiv
(bad)
call
adc
adc
ficom
fcom
mov
push
(bad)
(bad)
(bad)
call
jle
cli
leave
bnd
fwait
test
loop
sub
loope
enter
sbb
add
jmp
lea
out
rcr
add
dec
(bad)
(bad)
(bad)
(bad)
cli
sub
ret
pop
dec
jbe
mov
push
push
xchg
fs
mov
ret
and
hlt
mov
ret
jg
sub
mov
rcr
jnp
fmul
xchg
(bad)
(bad)
inc
or
push
dec
add
stc
inc
das
out
push
jecxz
sub
adc
(bad)
(bad)
push
sub
aam
jmp
loop
xor
adc
arpl
lea
mov
call
pusha
inc
das
fcmovb
call
fdivr
cmovs
ss
fwait
addr16
out
dec
adc
pop
xchg
sub
movs
dec
sbb
cmps
xchg
aam
(bad)
int
push
(bad)
(bad)
(bad)
call
xchg
hlt
mov
and
mov
mov
popa
push
jl
retf
xchg
fsub
out
(bad)
(bad)
push
rcr
mov
or
xchg
pop
mov
dec
adc
mov
(bad)
mov
or
push
and
hlt
in
cdq
fs
or
rol
(bad)
dec
sub
sbb
cmp
data16
test
push
push
es
mov
and
(bad)
out
and
les
ja
cmp
xor
(bad)
(bad)
jnp
data16
jle
adc
cmps
cmp
gs
lds
ret
ja
pop
loope
icebp
sti
outs
xor
shl
mov
pop
out
dec
jae
(bad)
(bad)
push
retf
aad
int3
inc
pop
test
leave
fpatan
outs
int
outs
dec
mov
inc
cmps
pop
cmc
dec
xchg
pop
stc
(bad)
(bad)
(bad)
call
lock
sub
sbb
loop
mov
adc
jnp
imul
(bad)
(bad)
(bad)
push
jp
cs
test
nop
cmps
and
and
movs
add
popa
and
scas
movs
pop
lock
dec
xor
mov
and
retf
cs
int3
aam
inc
daa
add
aas
sbb
fadd
(bad)
jmp
cmp
outs
pop
jmp
(bad)
xchg
es
das
or
cs
xchg
(bad)
(bad)
(bad)
dec
inc
cld
jno
fisub
stos
lea
arpl
mov
push
mov
mov
(bad)
(bad)
dec
(bad)
lock
shr
(bad)
std
icebp
dec
(bad)
mov
jns
fwait
pop
je
(bad)
(bad)
mov
pop
xchg
jmp
and
sar
aam
or
(bad)
jmp
out
idiv
inc
pop
pop
and
(bad)
(bad)
(bad)
push
faddp
fs
int3
sahf
mov
jl
mov
mov
add
xor
cmp
(bad)
(bad)
call
call
or
push
add
stc
(bad)
pushf
arpl
xchg
xlat
in
mov
mov
popf
pusha
mov
das
daa
pop
ins
sbb
iret
sbb
or
pop
pusha
mov
pop
pop
and
add
inc
mov
(bad)
(bad)
call
add
pop
sub
sub
add
mov
into
out
or
scas
mov
inc
into
jb
adc
adc
dec
fdiv
std
(bad)
jmp
adc
and
faddp
lea
adc
or
sub
mov
(bad)
(bad)
dec
(bad)
fs
sti
ins
loope
dec
mov
(bad)
ret
js
jns
sti
bound
loop
addr16
sub
test
jmp
pop
call
and
in
(bad)
call
test
ss
pop
mov
mov
mov
cli
scas
(bad)
jmp
and
inc
popf
hlt
dec
rcl
push
push
pop
sbb
mov
ds
mov
mov
neg
ret
mov
dec
pop
(bad)
(bad)
call
les
xchg
scas
mov
push
or
xchg
xchg
or
dec
and
adc
jle
test
sub
mov
or
int
sahf
jge
(bad)
(bad)
call
fistp
mov
fwait
lea
xchg
xchg
mov
test
ds
mov
(bad)
jg
movs
mov
fnstsw
mov
adc
mov
xor
jg
mov
and
(bad)
jmp
loopne
dec
inc
clc
mov
adc
imul
cmp
jb
aad
fldenv
or
dec
loopne
leave
jmp
pop
fldcw
xor
imul
fadd
push
fwait
mov
cmp
ror
(bad)
(bad)
(bad)
push
adc
shl
loopne
sub
bound
ret
mov
(bad)
or
jmp
cli
mov
mov
mov
pushf
mov
cli
adc
mov
ret
imul
(bad)
jmp
pop
mov
(bad)
out
or
dec
aas
sub
xchg
movs
pop
xchg
cmp
adc
(bad)
jg
das
inc
inc
icebp
es
push
shr
cld
jmp
mov
cld
add
add
push
cld
ror
stos
add
(bad)
(bad)
dec
inc
push
cdq
inc
mov
inc
repz
cmc
cmp
cmps
mov
xchg
jbe
push
(bad)
(bad)
call
inc
inc
or
sbb
add
inc
mov
popf
pop
or
inc
shl
scas
enter
scas
cli
(bad)
call
pop
rol
aam
and
and
(bad)
(bad)
(bad)
(bad)
jmp
and
push
aad
inc
and
dec
adc
test
imul
and
push
pop
icebp
in
popw
pop
lock
rol
repnz
jl
ja
test
xchg
mov
dec
sbb
std
xchg
push
dec
stos
dec
and
out
loope
push
mov
rcl
std
jmp
mov
dec
inc
or
mov
or
sub
icebp
jg
inc
into
dec
lds
movs
dec
bound
jmp
jae
test
dec
cld
(bad)
call
les
sbb
imul
sbb
or
jb
jecxz
enter
sbb
outs
aad
fwait
dec
stos
cwde
js
aaa
(bad)
pushf
dec
and
les
(bad)
(bad)
(bad)
jg
pop
adc
cmp
or
ds
xor
int3
retf
mov
or
mov
inc
dec
retf
(bad)
fisubr
rcr
repnz
(bad)
in
ret
(bad)
call
shl
dec
es
and
push
out
mov
in
mov
loop
(bad)
(bad)
fild
call
adc
or
test
popf
mov
sub
(bad)
call
in
adc
fst
xlat
push
bnd
and
sub
and
mov
jo
or
pop
cdq
sub
mov
sub
(bad)
js
jge
pop
cld
call
movs
jno
adc
int3
leave
xchg
jb
mov
loop
je
mov
cli
(bad)
out
ds
dec
cld
fs
int3
jmp
nop
or
xchg
xor
add
das
dec
pop
jns
mov
arpl
loop
xor
jne
leave
js
mov
(bad)
(bad)
out
add
xchg
cmp
sbb
add
pushf
mov
nop
aam
idiv
(bad)
jg
imul
pop
or
lods
sahf
pop
xchg
lds
loope
push
dec
or
dec
adc
(bad)
(bad)
dec
push
cmp
adc
dec
sub
inc
cmp
push
or
popf
mov
jb
jno
adc
pop
lock
jecxz
fmul
or
shl
mov
and
sub
(bad)
(bad)
jmp
ret
push
out
jno
cmp
dec
dec
push
xchg
mov
test
adc
mov
inc
cld
inc
lea
push
arpl
pop
(bad)
(bad)
(bad)
jg
xlat
repnz
jle
call
dec
dec
lds
cmp
les
mov
adc
sub
mov
push
aam
cmp
test
retf
sub
push
cmp
pop
(bad)
(bad)
(bad)
call
push
mov
retf
adc
sub
loope
cmp
out
mov
test
and
(bad)
jg
jmp
inc
dec
dec
rol
test
loopne
shl
scas
(bad)
(bad)
(bad)
jmp
and
es
out
pushf
cmp
xor
jmp
leave
sbb
mov
hlt
pop
fnstenv
cld
(bad)
call
ss
and
rep
mov
sub
push
pusha
dec
cdq
jns
mov
dec
loope
clc
(bad)
(bad)
jmp
loope
shl
js
out
sub
and
es
adc
dec
cld
out
lock
xchg
mov
mov
inc
(bad)
(bad)
(bad)
jmp
jecxz
or
or
(bad)
aaa
rcl
outs
fild
adc
inc
lds
pop
out
ret
int3
sub
(bad)
inc
js
adc
hlt
mov
test
mov
xchg
call
cmp
inc
jnp
loopne
das
pushf
sar
mov
test
(bad)
(bad)
(bad)
jmp
and
call
jnp
pop
xor
popf
in
bound
and
ja
jcxz
(bad)
(bad)
cmp
mov
and
das
adc
xchg
hlt
cmps
adc
sub
adc
dec
loopne
data16
cmp
xchg
pop
cmp
xchg
add
mov
mov
aam
inc
shr
dec
mov
int3
mov
jl
cmp
push
test
int3
iret
fist
or
scas
pop
aaa
daa
das
jmp
sar
jne
data16
or
dec
leave
add
clc
jo
sub
or
call
or
repz
mov
stc
out
cmc
push
out
js
in
fcomip
call
daa
adc
mov
sub
out
push
and
das
cli
(bad)
xor
out
add
xchg
dec
pop
sbb
clc
xchg
jae
(bad)
(bad)
(bad)
push
pop
inc
call
cmp
sub
cmps
lock
sbb
fisub
std
inc
(bad)
inc
dec
dec
xchg
mov
dec
dec
add
lea
rcr
or
(bad)
fbld
adc
push
jecxz
mov
fsubrp
retf
je
sub
dec
cmc
fcomip
xor
dec
mov
pop
sti
xor
ret
mov
and
xor
adc
mov
leave
inc
mov
fdivr
(bad)
(bad)
dec
cmp
mov
popa
jmp
ret
out
mov
inc
dec
mov
cwde
hlt
dec
nop
int
push
addr16
inc
movs
sub
dec
inc
lds
arpl
mov
pop
mov
aaa
dec
data16
xchg
ret
sbb
push
push
add
inc
and
hlt
push
or
cmp
mov
(bad)
inc
cld
xchg
jnp
fcomip
push
and
xchg
jp
(bad)
(bad)
jmp
mov
inc
sti
mov
pop
mov
aaa
fs
fcomp
imul
cdq
xchg
jg
idiv
mov
dec
mov
mov
imul
xchg
mov
jmp
stc
stc
mov
pop
jl
sub
dec
dec
(bad)
mov
push
pop
push
pop
pop
adc
icebp
out
adc
adc
scas
and
add
pop
in
(bad)
(bad)
(bad)
inc
sbb
(bad)
repz
pop
add
aas
clc
fnstsw
xchg
fcomp
sbb
jns
adc
push
pop
loope
call
ret
adc
scas
in
or
jnp
add
sar
das
clc
lock
adc
jo
and
test
(bad)
ffreep
jle
dec
jns
jns
loopne
sahf
dec
cwde
iret
adc
clc
jg
icebp
push
push
sub
loope
icebp
jle
(bad)
(bad)
(bad)
call
and
mov
out
sti
sahf
cli
shl
adc
repnz
cwde
jp
cli
mov
(bad)
(bad)
fistp
inc
pop
movs
enter
sub
inc
inc
out
jge
mov
jmp
(bad)
(bad)
(bad)
dec
add
sahf
xchg
sbb
adc
xchg
sbb
mov
xchg
cmp
dec
iret
push
loop
sahf
bnd
xlat
mov
adc
popf
fnsave
lods
pop
sbb
or
call
dec
inc
sub
dec
dec
nop
xchg
push
cld
dec
jno
xor
ud0
(bad)
call
outs
cwde
repz
pop
or
in
cmp
pushf
mov
cs
jmp
pop
cld
push
fcmovnu
xchg
xor
mov
inc
repnz
dec
loop
das
iretw
xor
cld
(bad)
(bad)
mov
enter
loopne
fdivr
adc
sbb
shr
(bad)
(bad)
dec
add
je
xchg
pushf
fsubr
cmp
xchg
mov
bound
not
(bad)
(bad)
push
sbb
cdq
cmps
push
(bad)
in
test
inc
pop
arpl
xor
or
test
jns
push
aam
push
add
mov
dec
(bad)
(bad)
(bad)
dec
mov
xchg
push
aad
arpl
ret
xor
sub
jbe
in
push
mov
enter
(bad)
call
retf
cwde
or
rol
mov
mov
es
aad
outs
cmp
shl
jmp
inc
xor
xchg
or
push
push
xor
jns
in
and
jmp
(bad)
mov
dec
hlt
gs
push
jmp
pop
lock
out
out
les
jp
(bad)
mov
jmp
push
pushf
arpl
aad
sti
lods
in
inc
(bad)
inc
int
jg
(bad)
jmp
cmc
xor
push
push
lock
daa
xlat
enter
mov
mov
cwde
mov
les
(bad)
(bad)
mov
dec
adc
adc
or
ret
(bad)
bound
adc
xchg
lock
(bad)
(bad)
push
fadd
out
outs
push
sahf
mov
adc
mov
les
inc
test
outs
call
in
inc
and
pop
inc
push
or
in
sbb
(bad)
adc
pop
pop
into
push
fsub
mov
push
and
repz
or
sub
mov
(bad)
data16
mov
mov
inc
and
fisubr
dec
jmp
pusha
xchg
hlt
and
add
jg
shl
jl
test
(bad)
mov
imul
(bad)
call
mov
mov
int3
pop
lock
mov
ja
xor
push
xor
out
mov
(bad)
inc
jbe
sub
scas
out
stc
add
jns
cmps
sbb
ficom
(bad)
(bad)
jmp
div
mov
outs
ds
ror
(bad)
sbb
icebp
popa
cwde
(bad)
jmp
xchg
sbb
or
(bad)
jb
mov
cmps
rcl
push
fistp
sub
pop
ret
scas
in
mov
(bad)
test
and
mov
jmp
inc
push
adc
inc
xor
(bad)
(bad)
(bad)
dec
push
ins
call
mov
loopne
fldenv
jmp
xchg
neg
test
mov
out
(bad)
dec
inc
retf
out
outs
ret
sub
mov
retf
std
outs
and
mov
sbb
cld
and
xchg
popa
xchg
call
adc
test
xor
xchg
push
mov
sbb
test
pusha
sbb
(bad)
push
movs
fisttp
push
add
ficomp
sub
or
call
sub
push
retf
push
test
push
inc
mov
sbb
fbld
push
fisttp
stos
jmp
test
or
and
dec
dec
mov
or
or
xor
sub
ror
jp
push
push
jle
mov
add
(bad)
(bad)
(bad)
(bad)
jp
push
dec
(bad)
icebp
mov
mov
test
add
adc
nop
bswap
push
push
xor
pusha
test
(bad)
mov
lahf
sub
mov
stos
int
cld
fidiv
push
sub
inc
rcr
sahf
xor
sub
and
cmp
shl
lods
fwait
(bad)
(bad)
(bad)
call
add
sub
push
in
cmp
mov
push
movs
inc
pop
xor
mov
data16
(bad)
(bad)
(bad)
out
and
inc
cmp
pop
call
pop
out
js
movs
push
add
jp
es
outs
sbb
call
jae
aam
mov
cdq
push
stc
and
into
cmp
cmp
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
sub
fistp
int
in
xor
mov
push
(bad)
mov
adc
(bad)
stc
nop
push
mov
sub
cmp
leave
push
push
mov
jne
dec
or
sahf
stos
dec
cmc
dec
aaa
cld
(bad)
inc
test
sbb
shl
(bad)
inc
or
jle
rcl
inc
jecxz
and
bound
dec
adc
pop
ins
sub
daa
lods
cmp
cli
mov
(bad)
(bad)
dec
inc
in
adc
sub
mov
jno
pop
adc
(bad)
(bad)
inc
inc
lods
cwde
daa
and
mov
sub
sub
cmp
repz
arpl
(bad)
(bad)
(bad)
inc
pop
retf
aam
add
jmp
test
adc
test
and
jns
(bad)
(bad)
(bad)
in
js
nop
aam
lods
add
mov
daa
out
lods
jbe
and
push
jmp
test
scas
mov
mov
stos
sbb
js
xor
mov
je
pop
pop
hlt
pop
cmp
xlat
inc
cs
out
out
push
popf
push
scas
ret
iret
cld
(bad)
(bad)
push
or
xor
repz
mov
sbb
hlt
mov
(bad)
(bad)
push
pop
pop
clc
add
fsubr
icebp
sub
sub
cmp
jnp
or
xchg
or
sub
retf
fsubrp
shr
jo
into
es
or
mov
xor
(bad)
(bad)
(bad)
(bad)
call
sahf
repz
(bad)
clc
stc
xlat
mov
jg
mov
das
xchg
jge
fadd
jne
hlt
daa
(bad)
(bad)
jmp
mov
push
sar
xor
leave
add
or
pop
jne
hlt
data16
(bad)
(bad)
(bad)
inc
adc
mov
addr16
xchg
dec
cmps
sub
or
in
fild
rcl
cwde
lock
jne
pop
inc
cmp
movs
push
clc
jns
fwait
in
(bad)
(bad)
(bad)
(bad)
fldcw
mov
mov
xchg
and
hlt
hlt
push
xchg
push
in
iret
out
cmp
ja
(bad)
(bad)
(bad)
call
adc
(bad)
int
out
imul
and
push
movs
sbb
loope
mov
(bad)
dec
adc
xor
mov
out
xlat
test
arpl
pop
std
(bad)
jmp
aam
pop
and
call
mov
pop
add
push
mul
(bad)
cmp
out
add
sub
arpl
sbb
ss
mov
stos
out
mov
adc
sub
(bad)
(bad)
call
aaa
xor
sub
ret
xchg
inc
inc
inc
int3
sub
icebp
adc
cwde
xchg
push
movs
les
inc
and
and
cwde
idiv
(bad)
(bad)
fild
lods
add
xchg
pop
cmp
sbb
or
inc
lahf
stos
scas
pop
mov
cmps
mov
or
rcr
and
ds
icebp
bound
dec
fnstsw
retf
imul
int3
xor
xor
jnp
ja
fistp
imul
hlt
inc
sbb
mov
(bad)
stc
mov
shr
pusha
jns
ja
pop
(bad)
fwait
mov
sbb
or
dec
mov
movs
test
dec
mov
pop
pop
(bad)
(bad)
(bad)
call
and
mov
pop
jle
fwait
mov
in
jnp
imul
sub
xchg
cmp
add
xchg
xor
pop
cmp
mov
outs
adc
sub
jo
pop
sbb
out
xor
inc
mov
xor
push
sbb
popf
dec
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
push
adc
push
repnz
and
push
repz
adc
and
pop
xchg
(bad)
inc
ins
xchg
mov
ss
scas
arpl
gs
stos
dec
push
push
lods
repz
or
or
push
(bad)
(bad)
push
mov
sahf
xchg
mov
ins
sub
ins
mov
cs
(bad)
push
jb
push
movs
push
xchg
out
sub
arpl
les
mov
es
(bad)
fnstsw
cmp
xor
out
daa
les
hlt
mov
xchg
mov
js
(bad)
sbb
jno
jno
push
adc
push
and
dec
adc
repnz
sbb
mov
sar
sub
(bad)
push
es
iret
les
sub
movs
adc
xor
mov
fisttp
mov
callw
xlat
ss
and
pusha
dec
mov
loope
leave
loope
cwde
mov
xchg
mov
ret
cld
daa
pop
in
(bad)
out
clc
call
outs
and
dec
bound
sti
cmps
clc
push
or
into
int
test
push
outs
(bad)
(bad)
inc
dec
into
dec
ret
cmp
fdiv
hlt
in
cmp
dec
int3
out
add
ror
sbb
jae
cs
les
jne
stc
or
fiadd
mov
(bad)
(bad)
inc
xor
push
mov
in
sbb
ins
retf
adc
mov
in
movs
adc
inc
gs
pop
cld
(bad)
(bad)
jmp
movs
scas
sbb
in
jne
fmul
ret
push
and
jnp
mov
mov
sub
aaa
mov
and
inc
lea
jne
cwde
or
xchg
xchg
adc
cld
(bad)
and
cmp
outs
stc
js
pop
sbb
shr
lods
ss
lods
jae
(bad)
call
imul
shr
xor
sbb
jb
rcr
mov
mov
gs
inc
clc
(bad)
(bad)
call
sub
(bad)
push
fsubrp
inc
pop
mov
cmp
mov
ret
scas
and
fwait
adc
(bad)
(bad)
jmp
loop
jae
je
mov
js
sub
outs
adc
dec
dec
xor
sbb
jb
(bad)
mov
mov
mov
movs
inc
inc
xchg
cs
mov
jbe
std
fidiv
outs
call
fistp
lds
dec
or
loop
sbb
(bad)
(bad)
jmp
mov
mov
gs
inc
xchg
nop
lods
sbb
(bad)
(bad)
mov
(bad)
sbb
cmp
and
adc
xor
push
call
add
push
(bad)
(bad)
(bad)
jmp
inc
imul
or
loopne
pop
inc
sub
adc
das
jns
add
outs
fcos
call
pop
xor
dec
bnd
pop
pop
mov
mov
jo
ins
int
mov
mov
(bad)
dec
inc
retf
adc
pusha
xchg
xchg
jmp
xchg
inc
test
cmps
mov
push
dec
ss
(bad)
(bad)
(bad)
mov
cmp
push
aaa
mov
sbb
cwde
xchg
or
aaa
out
sbb
vmovsd
(bad)
jmp
std
pushf
mov
(bad)
pop
out
stc
mov
pop
mov
pusha
mov
aaa
cld
jmp
bound
cmc
fstp
sub
inc
aam
mov
mov
dec
mov
xchg
data16
jmp
(bad)
dec
xchg
fwait
adc
loop
aam
hlt
push
and
leave
mov
je
cld
scas
(bad)
jmp
sub
ror
lds
cmps
loope
cmc
cmc
(bad)
cmp
sbb
push
push
es
xor
mov
xor
daa
(bad)
sahf
repz
loopne
add
(bad)
fnstenv
retf
dec
(bad)
(bad)
(bad)
call
pop
xchg
xor
and
idiv
jmp
mov
fs
fs
xchg
fcomip
(bad)
jmp
pop
jmp
sub
js
jae
xor
in
repz
out
das
push
sub
(bad)
xchg
sbb
adc
pop
xor
inc
jb
cmp
xor
xor
and
mov
call
ss
sub
or
ins
adc
push
mov
bound
pop
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
dec
sahf
out
je
mov
sub
loope
xor
mov
inc
out
fdiv
ins
cmp
data16
sbb
cdq
sti
mov
scas
sahf
int
(bad)
mov
pop
sub
dec
pushf
adc
popf
adc
mov
cmp
(bad)
pop
xchg
(bad)
(bad)
(bad)
dec
xor
cmps
pop
repnz
add
lods
xchg
ins
fxch
pop
into
xchg
gs
pop
mov
out
mov
mov
lods
mov
(bad)
jg
pushf
in
leave
jbe
mov
repnz
xor
or
cmps
lock
loop
or
fcom
dec
cmp
faddp
stc
inc
adc
int
cmp
push
(bad)
(bad)
call
sahf
inc
repz
outs
xchg
mov
ins
xchg
int3
ins
dec
inc
xchg
mov
(bad)
(bad)
(bad)
call
lods
movs
sbb
xchg
pusha
cld
imul
jge
stos
aad
popa
push
shl
dec
inc
inc
cld
push
cmp
movs
mov
mov
xchg
popa
stc
xchg
(bad)
pop
push
jae
idiv
(bad)
dec
xor
push
dec
popf
fwait
or
add
xchg
and
push
in
jecxz
(bad)
call
shl
fild
or
mov
imul
mov
xor
mov
sti
loop
outs
bound
add
xchg
pop
data16
xor
stc
rcl
bound
and
adc
ja
fcmovb
pop
xchg
push
jmp
add
jns
bound
fcomp
(bad)
call
cld
mov
imul
ret
push
or
push
jmp
xor
jb
dec
mov
movs
jae
test
ret
jmp
sub
jmp
out
add
cdq
cmp
sbb
gs
jbe
or
dec
mov
xchg
cs
fst
inc
movs
adc
cmp
movs
mov
(bad)
jmp
mov
ds
and
mov
loope
jne
inc
mov
(bad)
(bad)
push
cmps
xor
cdq
fwait
mov
cwde
xchg
ret
ret
sub
dec
int3
retf
fdivp
and
in
and
dec
mov
mov
cmp
in
mov
mov
add
jge
xor
pop
jno
or
adc
out
out
cmp
outs
mov
cs
fdivr
(bad)
(bad)
(bad)
sti
jbe
ins
fwait
inc
ss
cdq
and
ror
mov
xchg
dec
mov
test
(bad)
(bad)
(bad)
push
sub
mov
je
gs
lock
xor
(bad)
or
in
popa
clc
mov
push
cdq
push
xchg
cs
mov
adc
xchg
pop
enter
les
mov
mov
daa
call
dec
mov
(bad)
call
push
cmp
sar
sub
sbb
pop
mov
js
(bad)
jmp
cli
xor
jno
ins
(bad)
pop
xor
mov
cld
(bad)
jmp
jl
clc
sar
movs
jo
pop
mov
mov
call
(bad)
mov
adc
in
cmps
mov
adc
add
imul
call
push
mov
ss
dec
xchg
aad
je
fs
(bad)
(bad)
(bad)
call
jo
sahf
add
or
in
in
in
adc
mov
sub
pop
jg
(bad)
jmp
pop
dec
xchg
xor
xchg
pushf
sub
push
movs
jmp
mov
outs
xor
push
mov
(bad)
loopne
mov
(bad)
xor
(bad)
(bad)
(bad)
inc
lock
(bad)
js
mov
mov
or
or
js
(bad)
(bad)
(bad)
cmp
push
movs
sahf
mov
add
push
xchg
pop
fsub
mov
loop
jge
jnp
loopne
(bad)
sti
rcr
inc
jmp
test
daa
in
movs
into
push
scas
(bad)
dec
dec
mov
(bad)
jmp
pop
inc
ret
stos
fwait
xchg
cwde
test
sbb
xchg
xchg
cs
xlat
xchg
sub
(bad)
jg
jno
sbb
adc
sbb
xor
and
idiv
es
(bad)
jmp
in
int3
xchg
or
adc
int
mov
or
fiadd
aaa
(bad)
(bad)
(bad)
push
out
in
or
in
push
push
sub
mov
lods
jno
(bad)
sbb
sar
(bad)
push
fwait
adc
ficom
mov
xor
shl
mov
sbb
(bad)
(bad)
(bad)
dec
pop
(bad)
popf
xor
repz
(bad)
ficomp
cwde
ret
repnz
mov
call
add
call
xchg
mov
or
outs
aaa
add
imul
and
mov
or
pop
(bad)
cmp
fs
adc
cmp
call
and
xlat
(bad)
dec
cmp
int3
(bad)
fidiv
sub
enter
sbb
jg
iret
xlat
inc
adc
rcr
cmp
test
cmp
fdivrp
(bad)
(bad)
push
adc
ja
pop
push
or
repz
icebp
dec
popf
retf
(bad)
pushw
cmp
(bad)
(bad)
mov
mov
mov
call
mov
retf
jns
sti
sub
cmp
(bad)
jmp
xor
sub
jge
mov
mov
ins
lods
retf
and
push
test
xchg
push
js
loop
dec
pop
cmp
iretw
and
pop
inc
sub
loopne
movs
je
pop
gs
aaa
das
xchg
mov
pop
push
lods
imul
outs
fdivr
(bad)
(bad)
jg
aaa
icebp
xchg
lds
mov
(bad)
cmp
imul
inc
in
(bad)
mov
jne
and
fs
scas
inc
jp
imul
retf
loop
(bad)
(bad)
std
sub
hlt
jg
fdiv
mov
jne
mov
fnstcw
call
jge
jecxz
fbstp
sub
sub
out
pop
pusha
fcom
push
add
(bad)
mov
(bad)
mov
sbb
adc
jmp
add
fistp
adc
pop
js
retf
jl
fisubr
cmp
push
mov
mov
nop
mov
dec
cld
push
dec
icebp
cwde
dec
sub
pop
rcr
and
test
(bad)
jle
mov
push
inc
or
mov
aam
call
dec
rol
add
dec
xchg
or
or
dec
inc
sub
aam
nop
cs
mul
xchg
or
sar
das
shl
cmp
and
mov
push
and
add
(bad)
jg
add
sub
cld
mov
inc
pop
cmp
out
cmps
push
dec
jge
fs
dec
lock
shl
(bad)
sahf
adc
test
push
add
jo
in
push
dec
out
cli
(bad)
(bad)
jmp
cmp
in
push
lahf
call
push
ret
cmp
jg
mov
data16
mov
mov
jno
pop
xchg
stos
sbb
mov
(bad)
(bad)
(bad)
jmp
pushf
xchg
sub
out
movs
sbb
pop
sbb
mov
in
mov
inc
test
je
dec
xor
cmp
int3
dec
mov
push
mov
(bad)
(bad)
jl
repnz
stc
jae
cmp
mov
cmp
les
xor
(bad)
dec
or
repz
mov
or
out
mov
mov
(bad)
(bad)
jle
xchg
ret
aaa
or
popa
or
imul
lods
cld
mov
mov
(bad)
(bad)
jl
jl
fs
cmp
mov
pop
ret
mov
popa
sti
xchg
add
mov
xor
loop
cmc
mov
(bad)
(bad)
(bad)
call
cwde
sbb
imul
pushf
ret
mov
push
cld
imul
cmc
mov
pop
ja
hlt
jg
(bad)
push
mov
push
in
repnz
cld
movs
mov
aad
loop
(bad)
(bad)
jmp
fwait
mov
loop
xor
adc
xlat
sbb
cmp
es
retf
sti
mov
jmp
add
std
mov
and
in
sub
(bad)
(bad)
(bad)
(bad)
dec
data16
ret
push
aaa
clc
cwde
stc
test
mov
jg
cmp
fst
jmp
mov
lahf
imul
jecxz
inc
xor
inc
retf
clc
add
inc
or
xchg
cmc
(bad)
cmp
jno
leave
jle
(bad)
and
or
(bad)
call
js
xchg
ret
adc
repnz
mov
test
lea
mov
mov
neg
sub
jmp
into
das
pop
or
loop
inc
dec
hlt
retf
aad
mov
or
pop
(bad)
lock
(bad)
(bad)
(bad)
inc
mov
test
push
xchg
jo
loope
dec
push
(bad)
adc
ret
dec
and
inc
aas
std
ret
test
inc
sub
jg
pop
adc
les
test
repnz
(bad)
(bad)
jmp
ror
xor
push
adc
push
jle
push
push
or
ret
jmp
dec
icebp
xor
adc
jbe
std
dec
and
add
pop
into
xor
dec
and
dec
xor
xchg
push
sub
hlt
sar
out
xor
pop
(bad)
adc
adc
stos
(bad)
(bad)
dec
add
popa
or
les
icebp
lahf
or
fwait
xchg
scas
mov
(bad)
(bad)
fild
inc
sbb
test
xor
fild
in
add
ret
sub
std
(bad)
(bad)
push
or
push
(bad)
push
in
repz
dec
into
pusha
faddp
in
test
fidivr
pop
or
and
lock
push
jecxz
cs
xchg
outs
clc
(bad)
(bad)
jbe
jle
or
xchg
scas
push
xor
mov
push
bound
cld
call
inc
pushf
adc
inc
jno
mov
leave
adc
sbb
push
(bad)
(bad)
(bad)
push
test
push
sbb
xor
popw
xchg
add
loop
push
(bad)
jg
in
test
icebp
jmp
loopne
adc
das
xchg
add
das
add
cld
mov
jnp
mov
aad
ja
mov
sbb
jg
adc
jae
cmps
sub
adc
pushf
adc
or
push
ds
outs
adc
cmp
inc
loop
test
scas
xor
(bad)
out
(bad)
in
psubd
repz
clc
dec
imul
sub
xchg
cld
inc
push
pop
mov
pushf
(bad)
(bad)
(bad)
inc
div
les
dec
mov
push
mov
jp
retf
pop
sub
sbb
ins
dec
dec
loopne
repnz
repnz
ja
(bad)
jle
repnz
js
mov
jp
clc
scas
push
es
adc
mov
lds
mov
std
sar
repnz
pushf
sub
jl
lock
loopne
rcr
xchg
(bad)
and
inc
retf
jbe
dec
adc
or
das
imul
(bad)
jmp
adc
neg
or
pop
adc
or
movs
call
rcr
jns
ds
(bad)
fmul
push
lock
daa
(bad)
(bad)
dec
outs
int3
adc
test
in
(bad)
xchg
call
scas
jecxz
adc
(bad)
(bad)
jmp
add
add
mov
rcr
in
out
in
pop
bound
and
jnp
sbb
sbb
(bad)
(bad)
(bad)
push
outs
sbb
pop
jmp
mov
cmp
mov
loopne
cli
(bad)
call
lods
jno
inc
repnz
push
sbb
xchg
fbstp
out
mov
pop
mov
jmp
loope
adc
mov
adc
pop
sbb
mov
(bad)
fbstp
lock
ds
movs
aas
and
fcomp
mov
imul
scas
pushf
js
out
cmp
xchg
cwde
adc
test
mov
fs
iret
repz
int
push
inc
je
cmp
mov
pop
jbe
sti
test
dec
retf
sub
dec
loope
mov
mov
pop
stos
loopne
fwait
int
mov
inc
mov
retf
shl
mov
sub
(bad)
cmp
pop
or
add
shr
loop
or
dec
das
shl
test
fdiv
adc
out
or
add
les
rol
dec
lahf
mov
stos
(bad)
or
(bad)
(bad)
mov
cmc
xor
push
loop
bound
mov
cld
dec
or
xor
mov
(bad)
inc
das
pushf
cld
mov
in
out
xchg
(bad)
iret
pop
mov
fdivr
mov
push
outs
adc
jmp
sahf
int
mov
bnd
jbe
inc
xchg
stc
scas
out
jg
cmc
mov
sbb
loop
les
push
bswap
pop
xor
mov
xor
jg
jmp
call
mov
inc
xchg
mov
pop
or
cld
push
mov
cmp
call
push
or
mov
xchg
pop
mov
popw
xchg
call
(bad)
(bad)
(bad)
call
mov
sbb
aas
lahf
sbb
repz
dec
xchg
mov
xchg
(bad)
(bad)
(bad)
(bad)
mov
in
pop
cmp
in
(bad)
xchg
out
repnz
into
sbb
xor
add
mov
sbb
pop
movs
jns
out
xchg
mov
push
mov
icebp
(bad)
(bad)
call
in
mov
clc
jno
pop
and
stc
cdq
test
outs
adc
dec
and
xor
pop
test
add
nop
nop
sub
(bad)
(bad)
(bad)
(bad)
jl
(bad)
repz
mov
xchg
int
pop
pop
test
aam
jb
push
xchg
sbb
push
std
pop
std
inc
ret
and
lahf
xchg
pop
mov
fisttp
das
cli
(bad)
call
lea
repz
(bad)
not
push
scas
retf
xchg
(bad)
mov
and
leave
(bad)
jmp
movs
gs
(bad)
adc
mov
push
gs
cmp
inc
pop
jo
outs
(bad)
jg
jb
sub
pop
dec
outs
in
jo
rol
in
stos
and
sub
(bad)
(bad)
(bad)
fwait
xor
ret
rcr
loopne
retf
dec
rcr
fcom
rcr
(bad)
(bad)
mov
add
icebp
(bad)
fs
sub
sbb
aaa
test
sub
test
cmp
fcomip
dec
es
add
adc
xlat
sbb
adc
and
daa
mov
(bad)
(bad)
inc
imul
(bad)
lahf
jl
call
push
fcomp
or
dec
mov
(bad)
(bad)
(bad)
dec
dec
daa
pop
cmc
inc
push
jecxz
frstor
arpl
pusha
or
inc
sub
nop
jecxz
pop
cmp
loopne
inc
out
pop
adc
ror
and
mov
(bad)
sbb
int
movs
cmp
sub
sub
xchg
in
cmp
mov
push
adc
push
std
push
int3
cmps
das
cwde
sub
jp
or
loopne
out
in
test
jmp
in
(bad)
call
dec
jno
jl
dec
dec
adc
repz
popf
sub
fucomi
imul
(bad)
dec
call
jle
mov
and
retf
adc
xor
(bad)
(bad)
inc
call
cli
cmp
rcl
in
stos
ds
mov
mov
sbb
adc
ret
pop
push
jge
les
stos
clc
dec
jmp
jnp
push
xor
and
ret
jecxz
bound
adc
inc
idiv
push
stos
(bad)
jmp
adc
xchg
clc
shr
mov
push
push
in
jno
mov
xor
icebp
xor
(bad)
jg
sub
inc
jle
push
fwait
push
mov
cmps
call
(bad)
call
lock
ja
test
movs
inc
pop
mov
push
jmp
leave
loope
aam
(bad)
push
(bad)
ror
cmc
out
fstp
pushf
jmp
adc
call
dec
cdq
xor
jle
pop
(bad)
dec
push
mov
sti
sub
mov
cmps
jmp
pushf
loopne
shl
pop
xchg
(bad)
(bad)
mov
call
adc
bound
fs
mov
add
and
pop
hlt
fistp
xor
imul
movs
clc
fadd
xchg
(bad)
push
pop
mov
xchg
mov
or
js
dec
push
jg
dec
(bad)
fisub
nop
pminub
jp
inc
xchg
xchg
push
test
stc
inc
mov
loopne
(bad)
dec
test
ss
out
not
mov
jmp
jmp
push
cs
and
sbb
(bad)
call
pusha
xchg
aad
pusha
adc
adc
add
cwde
xchg
mov
(bad)
call
addr16
push
inc
les
dec
add
mov
xchg
push
mov
sub
sbb
(bad)
jmp
fldcw
cmps
sub
mov
pushf
pop
or
push
jp
(bad)
mov
xchg
cmps
inc
fwait
jecxz
(bad)
(bad)
(bad)
jmp
lock
dec
nop
xchg
cli
adc
or
aam
shl
xchg
daa
mov
addr16
adc
bound
das
loop
or
(bad)
(bad)
cmp
push
aad
cld
jo
ror
inc
int3
popa
xchg
adc
push
rol
and
stos
sahf
xchg
xor
mov
xchg
mov
and
xor
xorps
xchg
(bad)
call
ret
nop
rcl
inc
pop
pop
mov
mov
xor
aam
aam
outs
outs
mov
retf
(bad)
push
call
jne
in
stos
aas
fidiv
cmps
or
adc
fsub
loopne
repz
inc
scas
je
dec
add
pop
or
test
(bad)
(bad)
(bad)
call
inc
inc
in
(bad)
cs
mov
sub
movs
fwait
push
dec
push
sbb
mov
mov
add
jbe
shl
je
xor
(bad)
(bad)
inc
xor
xchg
add
sbb
pusha
jbe
pop
or
ret
xchg
jmp
cli
dec
test
js
repnz
or
sub
pop
sub
or
mov
imul
int3
push
sbb
push
inc
pusha
(bad)
(bad)
(bad)
jmp
mov
dec
enter
or
mov
sub
mov
adc
(bad)
(bad)
(bad)
(bad)
push
jge
mov
iret
cmp
daa
(bad)
add
stos
movs
jns
(bad)
(bad)
jmp
mov
dec
fst
add
pop
mov
dec
(bad)
jg
call
push
dec
or
adc
push
je
lods
pop
xchg
inc
jo
mov
scas
or
or
sub
mov
mov
sub
movs
test
sub
ja
in
mov
cld
outs
int3
lea
stos
jno
arpl
and
ss
scas
adc
call
shl
jae
mov
xlat
ret
test
adc
and
push
movs
mov
stc
inc
push
add
sbb
aam
push
jmp
aam
xchg
jle
mov
fcomip
(bad)
call
xor
sbb
mov
and
or
adc
call
xchg
add
shl
cmp
stc
mov
add
scas
cli
jmp
add
sbb
sbb
xor
pop
mov
pop
sbb
jne
call
lods
lahf
adc
sbb
push
push
popa
scas
or
(bad)
fcomip
jecxz
in
in
mov
mov
loope
mov
jg
(bad)
jl
mov
or
(bad)
(bad)
dec
push
mov
(bad)
adc
jmp
popf
jl
xchg
je
xor
mov
lods
and
and
dec
inc
loopne
in
inc
mov
cs
out
xor
xchg
iret
push
xchg
(bad)
inc
fld
shr
cmp
test
push
scas
xor
pop
adc
mov
xor
mov
(bad)
fcom
mov
jmp
(bad)
(bad)
call
xchg
jo
push
push
icebp
add
add
cwde
dec
(bad)
(bad)
(bad)
cmp
pop
popa
dec
adc
idiv
mov
rcl
(bad)
call
loopne
fcmovb
mov
leave
jo
xor
movs
mov
cmps
scas
(bad)
dec
shl
pop
sbb
loop
js
nop
xchg
and
retf
push
fdivr
adc
inc
jbe
pop
daa
push
out
mov
loope
cmp
(bad)
(bad)
jmp
jae
mov
sbb
or
or
loopne
sub
(bad)
dec
call
clc
(bad)
jmp
xchg
mov
jp
inc
ret
fwait
mov
jno
test
mov
(bad)
call
mov
jmp
jge
div
loop
aad
cmp
outs
or
cmps
mov
nop
movs
and
jmp
xchg
and
pop
dec
mov
xor
mov
(bad)
push
es
gs
movs
stos
sbb
out
or
in
pop
mov
mov
call
std
(bad)
sti
inc
movs
jae
adc
and
addr16
arpl
ins
in
mov
xchg
dec
std
(bad)
call
xchg
add
or
push
pusha
dec
arpl
lods
jp
(bad)
(bad)
call
daa
lahf
xchg
pushf
sahf
cmp
cmp
jle
(bad)
js
sbb
mov
cmp
clc
(bad)
out
cli
sbb
sar
enter
dec
inc
cmp
inc
or
cli
das
out
out
je
cdq
imul
mov
pushf
adc
mov
shl
imul
push
push
and
(bad)
(bad)
jmp
fwait
inc
loopne
shl
pop
mov
repnz
lods
jns
(bad)
ds
test
(bad)
dec
jle
pop
cmps
fsubr
cli
sbb
shl
mov
pop
jecxz
cmp
push
std
pop
mov
stos
in
ret
pop
icebp
sbb
test
push
ins
mov
(bad)
(bad)
call
movs
out
pop
jnp
adc
mov
fnsave
lds
sar
pop
loopne
adc
xchg
fwait
pop
xor
psrld
(bad)
push
aam
inc
call
(bad)
fsubr
pop
and
jmp
sub
jg
call
push
movs
scas
repnz
xchg
(bad)
imul
(bad)
(bad)
(bad)
call
lods
mov
sbb
push
xor
push
dec
out
mov
in
cmp
(bad)
(bad)
(bad)
dec
pop
xlat
in
lds
retf
or
les
cwde
addr16
push
cmp
cmps
and
xchg
(bad)
(bad)
test
adc
dec
call
out
js
dec
adc
xchg
test
cmc
(bad)
(bad)
jmp
dec
mov
std
cdq
mov
jge
shl
fs
mov
lahf
aas
movs
fwait
inc
loopne
sbb
enter
push
addr16
xchg
or
push
dec
jecxz
arpl
lock
(bad)
jge
into
jmp
mov
or
leave
and
dec
mov
int
and
(bad)
call
or
jecxz
dec
js
cmps
(bad)
fadd
jle
xchg
mov
cli
xchg
into
rcl
(bad)
(bad)
outs
call
ret
push
mov
enter
call
push
sub
and
cmp
aaa
jp
mov
(bad)
retf
loopne
sub
push
imul
xchg
pop
pop
(bad)
jmp
cmc
dec
int3
cmps
sbb
xor
pop
retf
jge
data16
pusha
and
(bad)
(bad)
jmp
addr16
xlat
and
mov
outs
xchg
mul
les
loope
(bad)
mov
or
mov
mov
(bad)
(bad)
call
xor
sahf
push
mov
ret
mov
aam
add
jmp
cmp
dec
xor
mov
(bad)
or
test
aaa
fwait
lds
sbb
daa
(bad)
(bad)
(bad)
dec
cli
sbb
add
movs
xchg
mov
push
das
js
scas
and
xchg
arpl
repz
push
loop
xor
mov
add
pop
loopne
icebp
mov
(bad)
(bad)
(bad)
push
adc
mov
loop
cmp
pusha
mov
es
inc
dec
xchg
jne
stos
(bad)
nop
(bad)
(bad)
mov
jle
in
bound
shr
sub
dec
int
push
mov
(bad)
(bad)
(bad)
(bad)
jmp
in
cmp
dec
fstp
push
iret
mov
jbe
dec
movs
es
lods
test
(bad)
(bad)
(bad)
push
push
mov
pop
cmp
gs
dec
push
mov
xchg
push
stc
dec
ret
inc
xchg
rol
(bad)
mov
and
(bad)
inc
push
or
mov
xlat
sahf
sbb
in
addr16
push
rcl
xlat
xor
gs
(bad)
(bad)
dec
pop
adc
aaa
or
and
and
int3
ja
cmp
ficom
hlt
cdq
(bad)
pop
(bad)
(bad)
push
daa
stos
xor
dec
pop
and
mov
fwait
dec
ret
xchg
jge
leave
adc
(bad)
(bad)
(bad)
mov
imul
sub
fistp
fiadd
dec
repnz
mov
push
jmp
mov
mov
mov
(bad)
mov
or
jne
aaa
test
jb
(bad)
(bad)
jg
dec
or
jecxz
leave
push
jbe
xor
mov
fisubr
xchg
or
test
cmps
mov
lods
ficomp
fs
mov
jbe
fidivr
dec
mov
sbb
adc
(bad)
(bad)
(bad)
push
and
sahf
cmp
fild
cmp
fnstenv
in
cmc
dec
or
(bad)
push
inc
shl
in
mov
enter
or
mov
dec
mov
imul
pop
sbb
imul
pushf
cld
sbb
dec
mov
push
mov
push
movs
xchg
adc
pop
cmp
cmps
xlat
mov
ins
push
fstp
mov
(bad)
(bad)
inc
xor
sub
aaa
mov
inc
cmp
or
mov
ror
daa
test
(bad)
(bad)
call
cwde
movs
push
es
sbb
in
jnp
mov
lods
cmp
xor
(bad)
push
mov
xchg
sbb
adc
push
cdq
push
daa
sub
xchg
adc
(bad)
(bad)
(bad)
call
daa
mov
push
or
std
out
leave
repnz
jnp
shr
push
fcomip
js
daa
and
(bad)
inc
mov
cmp
popf
(bad)
xchg
sub
and
add
sbb
xor
xchg
aaa
xchg
xchg
mov
add
imul
rol
(bad)
jmp
or
add
jno
retf
dec
inc
add
jecxz
mov
jg
ins
stos
cdq
cs
mov
xchg
push
data16
dec
jmp
mov
inc
add
add
mov
test
call
mov
lock
xor
push
sub
bound
in
(bad)
(bad)
mov
sub
sub
push
cmps
bound
fs
or
add
(bad)
(bad)
(bad)
dec
dec
cmp
ficomp
loop
ror
(bad)
sub
or
(bad)
(bad)
push
ins
push
pop
into
ds
sbb
pop
mov
arpl
xchg
lock
(bad)
(bad)
mov
mov
xor
outs
pop
adc
sub
jle
and
into
jae
jl
jmp
adc
lock
jg
ja
push
or
jmp
pushf
mov
sahf
push
iret
iret
mov
cmps
mov
jo
mov
mov
pop
jecxz
(bad)
(bad)
(bad)
call
mov
bound
inc
pop
fbld
test
retf
shl
mov
mov
mov
mov
push
outs
or
push
xchg
dec
mov
xlat
(bad)
loope
xchg
(bad)
mov
popa
push
bound
loope
loope
push
dec
lock
dec
fst
pushf
cmp
jbe
cmc
jmp
adc
rcl
mov
inc
scas
inc
and
sub
jbe
push
test
and
imul
out
push
les
(bad)
(bad)
mov
fisubr
(bad)
hlt
jmp
stc
repnz
mov
xchg
std
test
ins
mov
jmp
(bad)
(bad)
jmp
movs
shr
xchg
repnz
pop
mov
out
enter
cmps
loop
cld
(bad)
(bad)
(bad)
jmp
les
and
inc
sub
stos
in
ja
inc
cld
sbb
inc
dec
mov
inc
xor
movs
xor
or
push
scas
inc
dec
sub
push
mov
call
jg
out
shl
movs
fldenv
jmp
sub
gs
xchg
sub
iret
addr16
or
ss
xchg
sub
inc
inc
jp
stos
out
dec
(bad)
jmp
adc
push
in
cwde
repz
cmp
push
call
push
lock
(bad)
sbb
(bad)
push
std
fnsave
mov
imul
in
aam
sub
mov
mov
inc
mov
xchg
(bad)
push
in
sub
mov
adc
jb
push
cmp
cwde
nop
sbb
call
push
mov
mov
cmp
push
retf
mov
mov
lods
not
clc
(bad)
push
xchg
push
cs
scas
loopne
mov
inc
and
cmps
xor
aas
jae
sbb
(bad)
jmp
(bad)
xchg
out
ss
outs
mov
sti
popa
add
mov
or
pop
mov
(bad)
(bad)
scas
cld
mov
xor
daa
mov
jo
(bad)
(bad)
jg
retf
call
mov
adc
lds
mov
rol
sbb
(bad)
(bad)
dec
rcl
mov
cdq
and
je
dec
xlat
mov
xchg
mov
pop
mov
dec
loopne
pop
jmp
stos
test
loope
jno
mul
retf
jbe
data16
hlt
cmp
mov
dec
xor
es
call
xchg
xor
mov
push
fidivr
xor
(bad)
(bad)
(bad)
mov
and
sbb
dec
repz
ror
les
mov
call
gs
dec
fst
out
jl
daa
mov
push
or
inc
pushf
les
(bad)
(bad)
jmp
retf
inc
sbb
push
or
cmp
xor
or
imul
mov
call
cdq
mov
mov
retf
sub
xor
xchg
jge
mov
pop
mov
or
jg
(bad)
jmp
stos
pop
jmp
jecxz
xchg
scas
movs
pop
inc
in
mov
mov
push
mov
push
(bad)
(bad)
(bad)
dec
adc
push
cmp
in
jne
pop
xor
into
push
and
sar
xor
adc
sub
(bad)
(bad)
jmp
clc
xchg
test
xor
out
mov
test
and
(bad)
(bad)
(bad)
call
push
inc
inc
ds
inc
ins
inc
js
cmps
dec
xor
and
inc
inc
ret
mov
fdivr
fbld
sar
cdq
sub
cmp
fwait
rcl
xor
pop
pop
cmp
sbb
pop
or
loopne
pop
mov
(bad)
inc
mov
mov
mov
(bad)
(bad)
(bad)
mov
jnp
test
mov
mov
push
call
fld
add
dec
adc
jbe
push
xchg
fstp
mov
jmp
jnp
inc
and
mov
cld
push
data16
jg
test
jne
(bad)
(bad)
(bad)
jmp
mov
xchg
repnz
lea
ins
jge
pop
mov
pushf
popf
mov
cmp
(bad)
(bad)
dec
push
jbe
push
pop
mov
and
test
xchg
rol
inc
add
(bad)
mov
shl
(bad)
jno
add
mov
push
in
push
sub
dec
movs
movs
(bad)
(bad)
(bad)
call
dec
push
je
push
or
inc
mov
out
leave
push
leave
mov
cmc
(bad)
mov
add
test
loope
jle
jecxz
cwde
mov
inc
lods
inc
sub
cmp
sub
mov
mov
sbb
inc
cmp
or
(bad)
call
xor
sub
lods
dec
pusha
aam
pop
(bad)
jmp
cli
add
int3
rcr
push
movs
dec
mov
in
push
test
add
call
jle
cld
mov
xchg
retf
or
adc
push
pop
push
push
js
sbb
mov
(bad)
(bad)
(bad)
std
fisttp
cmps
add
clc
xchg
and
push
inc
adc
cwde
add
int3
pop
xor
mov
(bad)
cs
mov
and
sar
xchg
mov
in
sub
mov
(bad)
(bad)
mov
movs
mov
push
jg
dec
or
jg
(bad)
int3
dec
rcr
xor
or
(bad)
dec
lock
out
add
mov
jle
dec
(bad)
fistp
pop
imul
repz
stos
call
movs
aam
les
dec
in
stc
sub
repnz
jo
sbb
add
jno
adc
jno
sbb
jecxz
and
and
mov
mov
jo
mov
jmp
(bad)
inc
sub
mov
repnz
push
xor
push
mov
stos
push
mov
(bad)
mov
add
xor
xor
mov
(bad)
call
int3
lods
pop
push
and
xchg
ret
sub
xor
mov
push
sub
dec
pop
(bad)
(bad)
cmp
loope
push
sbb
pop
mov
cmp
jno
mov
js
ja
cmp
mov
cmps
out
popf
loop
and
sbb
hlt
mov
xchg
pop
sahf
xchg
and
add
(bad)
(bad)
dec
pop
xlat
mov
push
jcxz
adc
cwde
jb
adc
shr
iret
loope
pop
jne
jecxz
daa
pop
clc
call
xor
ret
cmp
jl
cs
clc
jb
(bad)
jg
pusha
pop
mov
out
ds
cld
loopne
hlt
xor
mov
jl
xchg
(bad)
(bad)
(bad)
call
pop
ins
dec
sub
dec
and
js
(bad)
sub
js
outs
or
shr
xchg
shl
pop
add
push
ja
jae
pop
mov
cmps
xor
and
xor
test
clc
call
cmps
pop
sub
and
cdq
inc
push
add
cmps
pop
pop
outs
or
push
into
(bad)
(bad)
(bad)
mov
and
mov
pop
out
jns
push
in
mov
loope
mov
(bad)
call
fs
and
cmp
ds
sbb
(bad)
(bad)
jmp
loopne
repnz
ret
add
mov
mov
in
mov
cmp
in
xchg
(bad)
fcom
and
sub
ja
mov
(bad)
(bad)
jg
mov
mov
and
test
data16
(bad)
jmp
or
pusha
into
or
cmps
cmovb
daa
iret
fcomp
leave
out
icebp
push
or
jl
(bad)
(bad)
(bad)
(bad)
pop
pushf
das
in
je
mov
jecxz
data16
cmovle
or
addr16
ror
shufps
pop
dec
(bad)
movs
push
leave
push
dec
push
cs
jb
aaa
lea
cld
pop
inc
pop
jecxz
cld
sahf
es
cmp
clc
call
retf
mov
and
inc
push
cmp
jo
or
inc
inc
daa
loopne
(bad)
(bad)
jmp
int
push
cmp
push
and
inc
jg
push
lea
push
xor
cmc
add
mov
jl
xor
or
mov
xchg
in
jns
adc
ret
mov
pushf
(bad)
(bad)
(bad)
inc
jno
iret
adc
les
lahf
xchg
mov
loope
push
inc
pop
mov
jmp
(bad)
loop
out
sub
outs
aad
jno
push
das
loopne
xchg
loope
out
bound
(bad)
cmp
dec
add
nop
fld
mov
sub
jae
repnz
les
ret
cmp
stos
mov
push
stos
clc
push
(bad)
(bad)
(bad)
jmp
outs
in
dec
aas
and
repnz
rcr
cmps
clc
add
xchg
or
in
retf
and
pop
and
in
pop
jmp
xchg
lea
push
jno
call
push
jp
fwait
mov
add
adc
mov
cld
ret
add
xchg
adc
icebp
pop
mov
jmp
scas
leave
cli
jmp
stos
mov
dec
or
aas
jp
mov
call
mov
das
jecxz
stos
retf
sbb
mov
xchg
loop
xchg
cwde
(bad)
(bad)
(bad)
mov
mov
sub
sti
mov
add
jo
(bad)
sbb
(bad)
ffreep
lahf
daa
sti
mov
jl
std
adc
mov
xchg
sub
dec
fmul
sub
bound
push
cs
pop
fmul
cld
adc
(bad)
(bad)
jmp
pop
fild
mov
jecxz
ja
xchg
push
das
loope
jmp
ja
ds
push
jne
xor
pop
or
jb
cmp
test
jo
hlt
or
stos
inc
dec
add
dec
lea
jg
(bad)
inc
mov
mov
into
bound
daa
sahf
push
jo
loopne
jnp
nop
xchg
lods
(bad)
les
mov
call
das
push
pop
lock
(bad)
(bad)
mov
fsub
and
lea
push
mov
sbb
(bad)
(bad)
jmp
sbb
js
repnz
into
adc
bnd
icebp
and
cmps
push
xchg
icebp
or
(bad)
(bad)
jmp
(bad)
in
cli
mov
adc
mov
mov
out
xor
loop
stos
jp
jmp
mov
cwde
ret
mov
lds
repnz
outs
mov
fisttp
(bad)
ret
(bad)
(bad)
(bad)
(bad)
mov
das
sbb
or
or
sbb
adc
stos
sbb
cld
cwde
add
push
mov
fild
das
cli
dec
popa
fstp
cs
jg
sbb
mov
xchg
dec
aaa
xchg
mov
dec
sub
jae
xchg
shl
push
and
mov
xchg
xchg
daa
cmp
sub
ins
pop
scas
(bad)
(bad)
(bad)
inc
cld
sbb
out
pop
inc
or
pushf
mov
loop
xchg
adc
xchg
pop
mov
inc
das
cli
(bad)
dec
adc
xlat
jo
nop
push
lds
mov
push
(bad)
in
retf
(bad)
jmp
mov
daa
shr
dec
popa
retf
xchg
call
icebp
push
ror
scas
nop
xchg
jle
push
jbe
xchg
mov
(bad)
jmp
outs
pushf
dec
je
inc
lock
ret
cmp
xor
idiv
popa
dec
lds
call
adc
lea
ror
in
sub
ret
jle
(bad)
(bad)
call
fcom
scas
daa
imul
adc
mov
mov
push
and
xchg
test
lods
lods
dec
loope
clc
dec
add
out
rcl
xor
push
(bad)
(bad)
jmp
loop
jno
xor
daa
add
bound
pop
(bad)
dec
push
and
jp
mov
(bad)
mov
in
loope
mov
icebp
mov
sbb
jl
(bad)
push
pusha
lock
neg
std
call
test
cdq
rcl
mov
dec
and
push
outs
dec
pop
outs
xor
(bad)
jmp
xchg
sub
in
and
mov
adc
pop
lods
int
(bad)
(bad)
jmp
fmul
mov
or
or
pushf
or
idiv
scas
push
lds
(bad)
jg
sbb
popf
icebp
lds
imul
(bad)
and
mov
(bad)
(bad)
mov
cmp
or
pop
mov
push
cmp
mov
xor
inc
or
sbb
loopne
and
push
rol
pop
(bad)
retf
inc
add
fsub
cwde
xchg
inc
das
das
int
inc
mov
jmp
push
jbe
std
popf
jne
lahf
nop
jbe
push
ins
inc
pop
into
(bad)
in
repnz
cwde
repnz
push
mov
mov
vpshuflw
stos
jle
idiv
adc
cmp
mov
cmps
(bad)
jmp
adc
dec
scas
popa
adc
popa
mov
repnz
jns
jmp
mov
adc
mov
xor
dec
(bad)
cld
(bad)
(bad)
(bad)
mov
mov
loop
mov
rcl
in
loope
sub
fwait
lahf
or
(bad)
dec
into
iret
into
inc
xchg
repz
test
mov
or
movs
jl
loope
or
invd
mov
leave
(bad)
(bad)
(bad)
inc
pop
or
push
sbb
out
xchg
cwde
mov
dec
or
fnstcw
mov
or
(bad)
dec
cli
mov
aaa
push
and
mov
test
pusha
dec
mov
inc
xor
or
loop
or
inc
sbb
jge
fsubr
ret
loope
(bad)
(bad)
call
das
fcom
pop
sbb
jb
nop
mov
adc
sahf
ss
mov
pop
ja
xchg
ins
test
push
retf
mov
cld
mov
jle
(bad)
(bad)
(bad)
dec
or
int3
mov
and
mov
pop
outs
inc
shl
outs
sbb
sub
fisub
xchg
shr
mov
lea
adc
pusha
pop
inc
test
dec
aas
mov
loopne
popa
(bad)
jg
adc
ds
add
jo
(bad)
(bad)
(bad)
call
add
test
pop
adc
dec
mov
push
adc
stos
jnp
inc
js
(bad)
jecxz
jge
call
shr
fistp
lock
cmps
sbb
(bad)
call
push
aas
push
rcl
pop
call
mov
mov
sub
sahf
mov
mov
test
sar
mov
aad
scas
pushf
dec
es
(bad)
mov
dec
or
sti
sub
add
loop
and
aaa
lds
xor
inc
or
add
sub
nop
add
(bad)
jmp
xchg
fild
jecxz
bound
in
(bad)
call
jle
div
add
or
adc
(bad)
dec
sbb
jbe
shl
into
sbb
xchg
jns
pop
cmp
sbb
aad
outs
cmps
call
push
in
ret
mov
in
shl
outs
fild
dec
pop
daa
int
pop
and
frstor
add
and
(bad)
(bad)
(bad)
inc
cmp
rol
adc
jmp
int
pusha
mov
jp
jnp
jg
pop
xor
(bad)
(bad)
repz
xchg
ds
fmul
cli
sti
mov
in
neg
mov
jnp
inc
xchg
cmc
dec
cmp
(bad)
(bad)
call
retf
icebp
icebp
xor
mov
stc
sti
mov
mov
pop
cs
jl
adc
inc
dec
xchg
mov
mov
pop
mov
std
(bad)
dec
and
push
inc
jge
enter
lods
test
push
inc
movs
sbb
mov
sbb
pop
push
loope
fistp
inc
dec
int3
movs
fst
xchg
inc
push
aad
outs
xor
(bad)
fbstp
push
mov
sti
fst
mov
jecxz
pop
jmp
clc
aaa
out
jl
and
jecxz
movs
push
xchg
pop
loop
(bad)
(bad)
(bad)
repnz
stc
leave
jno
mov
lds
push
inc
adc
push
xchg
(bad)
(bad)
fild
pusha
popf
cwde
or
pop
pusha
push
(bad)
scas
mov
inc
pop
xchg
jno
or
adc
(bad)
(bad)
(bad)
call
in
mov
pop
sub
inc
mov
add
pop
mov
mov
push
(bad)
dec
add
ss
dec
dec
js
(bad)
call
call
push
jle
cmc
sub
xor
push
lds
movs
cs
ja
clc
(bad)
mov
shl
movs
ins
test
(bad)
call
in
ret
daa
test
cmp
icebp
scas
aaa
sbb
or
jmp
mov
push
lahf
gs
(bad)
(bad)
call
push
icebp
mov
dec
sub
sub
out
cmps
das
enter
push
mov
cwde
shl
(bad)
fcomip
jmp
aam
inc
jo
(bad)
jmp
jno
imul
push
xlat
and
xchg
leave
adc
fldcw
push
pop
loop
lea
push
or
iret
jg
push
add
(bad)
call
pop
cmc
outs
sbb
sbb
xchg
add
in
mov
add
add
cli
mov
jmp
and
push
div
mov
or
pushf
xor
or
mov
(bad)
(bad)
in
call
aam
movs
stos
adc
(bad)
and
push
or
mov
in
push
mov
aas
push
scas
jno
(bad)
jg
jmp
xchg
out
mov
cmp
pop
xor
jns
pop
pushf
or
es
mov
addr16
repz
adc
(bad)
(bad)
(bad)
push
pop
dec
sub
add
ds
mul
add
push
in
mov
push
mov
jmp
jne
push
or
or
xchg
dec
dec
je
bound
loope
(bad)
(bad)
inc
sub
add
lods
fcmovnb
inc
xchg
and
cmp
cmp
arpl
cmp
jg
add
fs
push
cmc
imul
dec
jno
and
call
cwde
sbb
es
js
pop
bound
dec
mov
xlat
aaa
(bad)
retf
mov
push
cld
mov
xchg
nop
or
inc
pop
add
inc
in
mov
mov
jae
adc
xor
xor
mov
(bad)
(bad)
inc
mov
test
iret
push
cmp
outs
sub
xchg
push
xlat
xchg
ins
(bad)
(bad)
(bad)
jg
push
clc
call
and
ror
push
hlt
call
inc
inc
mov
pop
mov
(bad)
test
movs
push
(bad)
(bad)
mov
xchg
outs
cmp
sub
int3
loopne
das
inc
mov
inc
sbb
sti
iret
inc
sub
lods
imul
add
ret
sbb
aaa
js
test
mov
mov
jmp
int3
adc
das
push
fst
mov
test
or
(bad)
(bad)
(bad)
(bad)
inc
loopne
aad
cmp
loope
pop
push
adc
sar
dec
out
xor
jnp
leave
add
jg
ret
and
xchg
or
mov
mov
inc
arpl
fcmovu
jae
daa
xchg
push
add
mov
mov
(bad)
jg
cmc
mov
imul
dec
js
or
cmp
xchg
shr
push
(bad)
(bad)
push
inc
xor
mov
fs
rol
fisttp
fldcw
dec
sbb
sub
or
leave
aam
cs
pusha
pop
pop
and
sbb
mov
(bad)
(bad)
jmp
dec
push
popa
cmps
and
xchg
and
or
adc
gs
mov
(bad)
(bad)
inc
mov
out
xlat
push
jmp
enter
push
mov
in
jno
or
push
pop
lock
push
xchg
outs
push
sar
(bad)
(bad)
mov
dec
and
jnp
push
xchg
lgs
push
outs
call
(bad)
(bad)
call
xchg
pop
fcmovu
imul
add
mov
sub
call
iret
call
sbb
pop
mov
cld
aas
loop
or
aas
jns
(bad)
(bad)
(bad)
fidivr
sbb
inc
in
mov
int
xchg
test
ret
fsub
pop
add
jmp
push
dec
dec
sbb
jmp
mov
repnz
icebp
call
pop
adc
dec
push
mov
fwait
adc
and
lods
xchg
outs
mov
cli
(bad)
mov
iret
mov
stos
popf
and
jmp
movs
mov
sbb
stos
jo
retf
arpl
(bad)
(bad)
call
lds
xor
cmp
fild
mov
outs
xor
test
(bad)
push
adc
mov
aad
test
and
fdiv
jg
(bad)
jmp
fcmovnbe
mov
test
mov
in
aad
ins
stos
add
inc
jge
mov
mov
push
jge
jnp
push
mov
cmp
je
mov
(bad)
jmp
test
test
cmp
mov
or
xchg
push
push
loop
dec
(bad)
(bad)
(bad)
inc
cld
jns
js
mov
lock
cmp
into
ror
loope
or
dec
js
xchg
fild
jmp
xor
or
into
les
(bad)
jmp
pop
test
adc
mov
in
retf
ins
shr
pushf
int3
or
int3
(bad)
(bad)
(bad)
dec
add
push
push
xor
push
scas
fs
sub
inc
(bad)
jmp
jbe
fst
sbb
push
shl
and
popf
sub
inc
leave
mov
ficomp
inc
xchg
push
icebp
retf
fbld
(bad)
(bad)
(bad)
ds
inc
pop
pop
mov
ja
out
adc
jb
sahf
mov
out
mov
or
inc
adc
loop
jmp
and
sar
lea
imul
ins
push
je
icebp
jg
add
pusha
and
xchg
test
addr16
(bad)
(bad)
call
jae
mov
sub
es
vmovsldup
cwde
in
xor
adc
loope
fist
mov
mov
int
mov
(bad)
(bad)
(bad)
jg
or
mov
ins
or
xor
mov
sub
outs
test
(bad)
and
push
std
(bad)
mov
js
test
dec
push
or
lock
std
sbb
sbb
inc
xchg
sahf
adc
cwde
sbb
pop
popf
loop
inc
lea
std
mov
or
out
hlt
(bad)
(bad)
(bad)
inc
mov
xor
lds
jp
sub
cs
fs
in
cmp
out
stos
ins
scas
bound
sbb
pop
hlt
enter
movs
mov
or
and
jge
xchg
nop
adc
(bad)
(bad)
push
into
push
and
add
ret
dec
xor
jl
sub
pop
mov
in
es
out
(bad)
(bad)
call
ja
add
sub
data16
mov
adc
mov
inc
and
test
mov
mov
mov
fnstcw
loope
cdq
mov
or
call
mov
(bad)
fsub
ins
mov
cs
cmp
scas
movs
cld
mov
pop
nop
inc
in
push
call
adc
enter
jmp
pushf
gs
out
(bad)
(bad)
(bad)
stc
fisttp
pop
mov
jae
mov
popf
aad
mov
nop
pop
mov
outs
int
cmp
pop
(bad)
(bad)
(bad)
jmp
xor
mov
xchg
inc
lods
jbe
mov
sbb
or
push
cld
jmp
test
jns
leave
fwait
mov
data16
icebp
and
(bad)
(bad)
call
ds
sub
adc
push
push
les
(bad)
int3
adc
int
(bad)
(bad)
(bad)
jp
fdivr
jecxz
neg
shl
push
jbe
adc
mov
sahf
imul
mov
mov
out
daa
mov
add
push
icebp
imul
mov
push
mov
mov
jg
jo
cmp
inc
arpl
mov
ret
das
ins
sahf
fisub
fmul
mov
cdq
sub
add
mov
rcr
cmp
(bad)
dec
xchg
pop
or
(bad)
(bad)
(bad)
jmp
popa
mov
lea
push
mov
push
sbb
in
ja
or
in
xchg
lahf
fwait
or
jg
cmp
or
jae
cmps
das
sub
cmp
adc
test
sub
movs
scas
cld
xor
fdivr
ja
or
gs
sub
dec
test
(bad)
(bad)
(bad)
call
outs
sahf
movs
je
int
xor
mov
push
add
pop
jle
in
sbb
fidivr
jle
(bad)
(bad)
jmp
(bad)
xchg
es
retf
mov
xor
test
xchg
xchg
call
stc
push
pop
push
push
ds
push
mov
repnz
inc
(bad)
mov
aaa
les
or
or
jmp
mov
xchg
jecxz
les
ja
lock
addr16
div
mov
xlat
fbstp
mov
dec
dec
sti
gs
std
and
pop
jmp
call
hlt
xor
test
or
fmul
fcomp
sbb
fcomi
std
jg
cmc
mov
xchg
mov
(bad)
scas
jge
dec
cwde
(bad)
(bad)
(bad)
mov
test
dec
cmp
imul
out
xor
clc
push
inc
test
mov
(bad)
(bad)
inc
icebp
jne
jle
ret
or
lds
xchg
loope
add
loop
lods
call
aas
sub
mul
aaa
cld
mov
pop
test
jle
fidiv
sti
sbb
(bad)
(bad)
(bad)
call
int
push
mov
imul
sar
sub
sub
repz
fdivr
fstp
mov
(bad)
jmp
xor
iret
push
lods
retf
out
out
lods
dec
cwde
lods
xor
add
pop
inc
pusha
or
jns
mov
daa
inc
xchg
mov
mov
pop
sub
and
nop
out
sahf
add
pushf
inc
or
mov
(bad)
(bad)
(bad)
in
jb
hlt
outs
cli
outs
dec
repnz
lea
jo
sub
inc
dec
push
ja
cmp
(bad)
(bad)
inc
test
ins
in
lea
(bad)
mov
pop
cs
mov
call
int3
mov
pop
out
loope
cli
mov
mov
adc
mov
ins
test
inc
sub
push
xchg
mov
sub
aaa
popw
xor
and
sub
out
fcmovne
pop
retf
cwde
(bad)
(bad)
jg
in
mov
sbb
daa
xchg
in
out
xchg
xor
adc
xchg
and
(bad)
mov
xor
xchg
mov
js
and
push
mov
outs
inc
iret
inc
(bad)
(bad)
(bad)
dec
lods
xor
das
(bad)
aaa
sub
sub
sbb
in
or
test
dec
(bad)
(bad)
(bad)
dec
dec
push
adc
push
ficomp
add
and
retf
jge
call
mov
cmp
fcompp
mov
(bad)
(bad)
(bad)
jmp
shl
leave
std
sbb
repz
and
popf
push
inc
aaa
(bad)
idiv
(bad)
(bad)
push
jg
dec
pop
xchg
jae
jno
arpl
iret
aaa
inc
fcomp
nop
push
mov
xchg
or
sub
es
(bad)
(bad)
push
adc
jns
mov
aas
arpl
ins
jg
xchg
hlt
xor
sub
push
mov
int
outs
xchg
inc
push
popf
arpl
mov
add
dec
iret
dec
jmp
hlt
mov
xor
mov
inc
xor
mov
sbb
in
dec
jl
add
pushf
adc
sub
movs
add
adc
push
mov
and
call
push
xchg
mov
add
or
inc
nop
xchg
mov
int3
jg
or
ins
push
test
dec
mov
sbb
sar
dec
das
pop
add
arpl
in
sbb
lods
movs
pop
movs
cmp
call
cdq
dec
test
and
and
sub
push
shl
mov
(bad)
(bad)
cmp
mov
sub
in
mov
mul
lds
stos
xchg
mov
sub
popf
sar
outs
out
lahf
icebp
mov
(bad)
jae
inc
mov
adc
cli
and
outs
icebp
(bad)
fidiv
(bad)
(bad)
(bad)
push
aas
shl
sti
jno
bound
jno
pop
in
fsub
ror
push
test
inc
dec
jb
sub
in
(bad)
(bad)
cmp
test
movs
sub
cmp
adc
or
out
test
lods
mov
(bad)
(bad)
(bad)
jmp
mov
fwait
dec
jmp
mov
outs
enter
js
inc
sbb
pop
les
sbb
das
clc
(bad)
cmp
test
jns
and
mul
jl
dec
jmp
mov
movs
enter
push
arpl
add
lea
adc
dec
inc
pop
add
push
(bad)
dec
in
sub
dec
add
xchg
mov
push
iret
addr16
mov
fs
mov
sub
(bad)
adc
aaa
add
xor
mov
xchg
mov
push
add
jmp
sbb
jmp
clc
fnstsw
sub
lahf
add
and
sbb
dec
mov
inc
imul
lock
xchg
stos
mov
jg
ret
jb
push
jb
imul
dec
sub
hlt
mov
xlat
mov
(bad)
in
call
scas
rol
sti
dec
adc
in
clc
add
mov
jne
jg
inc
or
inc
cli
test
hlt
push
stos
jns
jge
js
(bad)
cld
scas
xchg
das
out
push
pop
sub
jmp
(bad)
(bad)
jmp
ds
(bad)
lods
cmp
cmp
mov
xchg
mov
and
imul
(bad)
(bad)
call
mov
sbb
sar
lods
repz
dec
and
jbe
(bad)
(bad)
jmp
dec
xchg
dec
(bad)
loope
retf
cli
dec
cmps
sbb
imul
call
in
(bad)
dec
aas
enter
loop
retf
out
ja
add
(bad)
(bad)
xor
test
test
nop
(bad)
xchg
add
sub
fwait
xchg
push
lds
(bad)
call
dec
mov
mov
inc
std
adc
loop
retf
xor
jo
jge
push
jg
(bad)
(bad)
call
cmc
jmp
adc
mov
jge
stos
icebp
jns
inc
pop
sub
xchg
cmp
push
(bad)
pop
push
sub
mov
or
cmc
cmp
mov
cld
(bad)
jg
fadd
sbb
mov
xchg
ss
pop
sti
and
xchg
test
push
cli
fneni(8087
lock
data16
jge
ror
lods
std
mov
out
cmc
jg
jmp
cdq
(bad)
rol
push
mov
pop
jbe
xor
push
ror
xchg
out
(bad)
fcomip
cmp
pushf
jo
jmp
mov
fadd
repnz
(bad)
aas
jmp
cmp
add
loopne
ds
das
clc
sub
xor
movs
jl
pop
sub
or
aas
outs
mov
adc
ja
jmp
adc
scas
arpl
test
push
push
cmp
imul
(bad)
mov
nop
int3
jnp
pusha
or
and
(bad)
in
push
test
fcom
dec
out
ja
cmp
pop
call
idiv
scas
loope
push
lods
ins
mov
test
mov
push
and
ja
cmp
aaa
repnz
cmp
adc
sbb
nop
inc
outs
inc
loop
sbb
adc
jmp
sub
cmps
xchg
adc
aas
mov
loopne
das
call
inc
and
cmp
push
push
jle
clc
dec
ins
daa
in
mov
(bad)
jmp
cmps
hlt
pop
jo
or
dec
(bad)
test
je
jno
cmp
cli
cdq
mov
push
cmp
push
ret
jl
sbb
ins
xor
xlat
jae
mov
(bad)
(bad)
in
inc
inc
paddd
rol
std
push
jl
sbb
fwait
mov
xchg
dec
xchg
add
sbb
scas
push
repz
xor
sbb
cld
pop
jns
push
xor
inc
(bad)
call
aad
stc
mov
fisttp
pop
in
scas
(bad)
movs
inc
ret
clc
mov
test
cmp
xor
(bad)
(bad)
jg
jg
add
pop
in
jb
inc
or
arpl
movs
ror
pusha
inc
adc
push
and
mov
xchg
stc
push
ror
js
test
shrd
mov
outs
dec
and
xor
add
pop
xor
cmc
cmp
add
xchg
ja
out
cmc
scas
sub
sar
call
push
scas
fidivr
xchg
jnp
loop
retf
mov
pop
dec
int3
dec
sub
in
imul
cmp
or
push
mov
scas
adc
mov
mov
test
dec
xchg
aad
xchg
ja
push
sub
cli
inc
jmp
in
cmp
cld
and
mov
ret
push
sbb
mov
jnp
inc
sbb
je
stc
push
lahf
push
adc
push
(bad)
add
cmp
sub
ror
in
or
fisttp
aaa
jecxz
mov
cmp
clc
(bad)
fistp
aas
out
pop
sub
ret
dec
sbb
jmp
adc
test
xchg
repnz
push
out
pop
(bad)
cmc
ret
and
loop
mov
pop
or
sub
xchg
rol
xchg
jmp
aaa
cs
ret
jge
test
push
cmp
call
xchg
mov
in
sbb
mov
sar
mov
mov
in
mov
xchg
mov
mov
out
fidiv
(bad)
jg
dec
hlt
push
pop
and
xchg
repnz
adc
add
ds
cmps
call
dec
or
cli
sub
fimul
adc
jbe
movs
fist
ficom
mov
and
cmps
sub
lock
xorps
clc
fwait
add
add
retf
inc
xchg
jg
sub
or
jg
mov
pushf
cmp
sbb
ds
sti
add
jo
jne
jg
sub
pop
scas
and
cmps
call
out
popf
inc
das
push
mov
xchg
hlt
imul
dec
leave
shl
or
pusha
mov
pop
or
and
outs
sahf
sbb
xchg
(bad)
(bad)
(bad)
jmp
mov
leave
push
push
sbb
das
mov
aam
jo
or
mov
retf
call
(bad)
(bad)
call
rcr
dec
dec
or
or
inc
call
ds
dec
dec
into
pop
mov
add
(bad)
cld
hlt
nop
leave
sub
mov
mov
aad
sbb
ret
sbb
pop
(bad)
(bad)
(bad)
call
add
movs
cmp
out
in
(bad)
mov
cwde
mov
pop
(bad)
jg
call
stos
mov
sub
mov
mov
ret
pop
pushf
(bad)
dec
clc
aad
mov
fs
and
mov
test
or
movs
ror
in
(bad)
mov
cwde
out
jmp
call
(bad)
(bad)
adc
int3
call
dec
lahf
cs
adc
stos
retf
ja
adc
and
stc
mov
(bad)
dec
pop
daa
aad
sub
cmp
sbb
cmp
cmp
popf
mov
lahf
fcomip
(bad)
(bad)
mov
mov
scas
loopne
stos
fimul
mov
or
xchg
sub
(bad)
jp
repz
nop
mov
jnp
mov
rcr
aaa
mov
jg
or
mov
sbb
les
cmp
adc
popf
stos
scas
lds
or
push
mov
in
inc
adc
shl
dec
sbb
mov
and
(bad)
out
mov
push
dec
cmp
lods
mov
lahf
inc
call
push
mov
and
call
and
pop
push
in
imul
and
aaa
out
xlat
jecxz
sub
aaa
ret
cwde
aaa
jp
add
pushf
imul
(bad)
(bad)
(bad)
call
sbb
movs
dec
ror
or
or
sub
invd
outs
adc
xchg
aam
push
jle
xor
(bad)
(bad)
(bad)
mov
add
mov
push
(bad)
mov
add
imul
inc
jecxz
jnp
inc
add
mov
mov
push
sti
(bad)
(bad)
jmp
mov
mov
xchg
jmp
xor
dec
leave
push
mov
(bad)
push
das
dec
popa
std
sbb
pop
addr16
mov
cmp
jg
ins
(bad)
mov
(bad)
(bad)
(bad)
ficomp
xchg
inc
cs
inc
jbe
loop
scas
sub
or
mov
and
xor
mov
push
ja
(bad)
(bad)
(bad)
jmp
cld
iret
dec
add
dec
cmp
xor
lahf
ins
jle
sub
movs
jne
inc
xchg
stos
push
or
(bad)
call
xor
add
xchg
call
sets
repz
push
pop
xor
dec
sbb
add
je
ret
gs
push
dec
stos
sub
mov
xchg
dec
jno
nop
call
inc
call
je
pop
jbe
or
data16
hlt
mov
xchg
(bad)
(bad)
call
shl
dec
add
mov
int3
inc
xlat
cmp
inc
pushf
xchg
and
sahf
push
add
cmovae
pop
push
lea
mov
mov
hlt
ins
jne
adc
loope
call
mov
xchg
lds
mov
popa
inc
xchg
(bad)
(bad)
dec
stos
inc
fsubr
out
popa
dec
xor
jno
inc
push
jb
xchg
dec
jae
(bad)
(bad)
(bad)
call
aaa
adc
loope
in
adc
rcl
repz
jp
(bad)
(bad)
jmp
lods
xchg
push
jl
mov
sbb
pop
mov
lds
lods
mov
(bad)
dec
in
sub
xor
movs
push
mov
inc
push
pop
push
mov
mov
and
mov
call
imul
fmul
cmp
les
adc
inc
test
nop
call
fwait
sbb
fs
in
iret
fisub
xchg
dec
adc
fs
push
dec
mov
out
das
adc
pop
and
sub
jmp
repz
or
mov
xchg
adc
xor
and
push
(bad)
(bad)
call
sbb
push
scas
ins
icebp
cmp
jecxz
out
gs
adc
int3
sub
(bad)
(bad)
(bad)
push
test
popf
pop
in
pop
imul
sbb
adc
aaa
push
xchg
test
mov
(bad)
(bad)
(bad)
call
cmp
add
rol
test
mov
push
add
xor
dec
jo
mov
push
ficom
sahf
aas
sub
inc
jmp
stos
aam
mov
jno
pushf
data16
les
mov
(bad)
dec
mov
sbb
ret
ja
les
fiadd
bound
sar
das
xchg
xor
push
mov
scas
test
push
rcl
cmp
mov
jmp
(bad)
sub
inc
pop
and
jg
and
push
fs
inc
sub
jo
(bad)
(bad)
inc
mov
xchg
xor
or
jne
mov
sbb
xchg
lods
or
mov
or
retf
(bad)
push
aas
pushf
sbb
push
jl
(bad)
(bad)
call
sub
xchg
int3
cmp
int
mov
sbb
jbe
push
retf
add
dec
pop
(bad)
(bad)
(bad)
dec
mov
dec
mov
and
jmp
scas
pop
popf
xor
sub
pop
in
mov
pop
mov
call
and
sahf
test
ins
(bad)
ds
adc
inc
jecxz
cmp
jmp
call
add
(bad)
xchg
test
cmp
sbb
mov
jge
(bad)
(bad)
call
jge
push
in
push
push
add
out
test
xchg
cwde
shl
(bad)
(bad)
in
jmp
cmc
sub
ret
cmp
imul
jmp
(bad)
(bad)
(bad)
inc
sbb
mov
aaa
mov
cld
fistp
jo
fsub
(bad)
(bad)
(bad)
(bad)
cmp
stc
ret
and
inc
dec
push
pop
aad
and
xor
push
test
aaa
xchg
sahf
sbb
(bad)
(bad)
(bad)
inc
stos
mov
dec
sti
and
loope
out
inc
loopne
ins
jne
in
push
scas
stos
lods
pop
xchg
jmp
(bad)
(bad)
push
pop
mov
add
in
jge
pushf
fcom
fbstp
and
(bad)
jbe
inc
aad
push
push
add
lods
inc
pushfw
pop
or
push
movs
push
pop
test
jmp
fwait
movs
fsub
xchg
adc
jecxz
xor
jno
mov
lahf
push
ror
(bad)
jmp
pop
jmp
dec
cmc
mov
inc
xchg
and
int
mov
ds
sti
(bad)
(bad)
jl
push
xchg
rcr
std
(bad)
push
mov
in
push
cmc
mov
mov
jle
call
inc
push
gs
or
ret
push
cmps
retf
sub
pop
stc
iret
test
(bad)
(bad)
(bad)
call
pop
cmp
push
mov
cvtdq2ps
xor
pop
fisttp
fdivr
jae
mov
xor
cmp
inc
mov
and
and
popa
sub
(bad)
(bad)
dec
test
mov
xchg
movs
pushf
mov
pop
repnz
sbb
bound
mov
shr
dec
(bad)
mov
sub
jl
xchg
stos
xchg
mov
scas
pop
or
dec
(bad)
add
mov
jecxz
dec
cld
mov
xlat
les
cwde
pop
adc
lock
hlt
pop
std
call
test
int3
xor
das
or
dec
arpl
jne
sar
mov
(bad)
fild
test
and
mov
movs
add
dec
stos
lock
les
cli
fnstsw
(bad)
(bad)
(bad)
(bad)
fst
mov
ficom
xor
dec
pop
scas
iretw
xchg
imul
gs
dec
mov
out
jg
test
loop
push
cmp
loope
fwait
sub
sub
(bad)
(bad)
jmp
xchg
dec
repnz
xor
mov
outs
jo
cwde
cmc
sbb
psignw
or
ja
cs
(bad)
(bad)
(bad)
jmp
fcomp
xchg
leave
(bad)
enter
jb
mov
mov
outs
fcom
jl
(bad)
dec
loopne
scas
and
and
rol
or
mov
cmp
lods
ins
fst
fdiv
lods
fwait
es
mov
sub
xchg
mov
scas
icebp
and
jno
(bad)
push
pop
push
shl
push
push
rcr
push
add
call
fcomip
(bad)
dec
(bad)
cmp
jno
or
mov
and
or
jo
xchg
idiv
(bad)
(bad)
dec
dec
call
stos
push
jb
into
mov
inc
pop
mov
cmp
(bad)
jmp
out
outs
imul
xchg
jmp
mov
and
xchg
and
(bad)
(bad)
push
sar
sbb
xchg
push
lods
cdq
mov
test
es
call
jmp
mov
dec
jmp
int3
leave
adc
pop
aaa
mov
in
(bad)
push
sbb
fucomi
add
(bad)
dec
repz
xchg
(bad)
in
jno
loop
xlat
or
and
inc
clc
dec
cmp
out
scas
or
(bad)
aam
sbb
(bad)
(bad)
(bad)
inc
and
xor
hlt
xor
or
mov
dec
les
cmp
fisubr
dec
xchg
call
cld
(bad)
cmp
mov
stos
inc
aam
and
cli
addr16
dec
push
icebp
das
push
sbb
mov
(bad)
jmp
fld
dec
pop
sub
movs
dec
xchg
sub
sub
push
daa
dec
sub
pop
fdivrp
(bad)
(bad)
(bad)
mov
mov
sub
rcr
(bad)
push
in
mov
out
js
cmp
inc
mov
inc
lahf
inc
fsubr
dec
ss
jecxz
inc
lahf
pushf
test
je
xchg
sar
aad
(bad)
call
scas
push
jl
ins
mov
pop
ins
imul
shr
dec
sbb
(bad)
(bad)
jg
push
jp
into
jo
out
ja
jge
pop
stos
call
addr16
xchg
xchg
sub
les
jmp
jmp
cld
xchg
scas
fwait
cmps
jnp
pop
inc
pandn
adc
(bad)
call
retf
cmp
call
outs
ja
dec
jp
dec
jp
mov
jmp
and
dec
stos
or
imul
xchg
mov
ins
test
loope
addr16
add
fst
mov
fs
cli
inc
ret
sub
ins
test
out
add
(bad)
(bad)
jmp
repz
xor
pop
pop
xor
cmp
(bad)
mov
out
test
out
xlat
(bad)
(bad)
(bad)
push
jmp
cdq
jnp
add
mov
inc
test
xchg
test
(bad)
(bad)
or
mov
ss
mov
xchg
aad
xor
cli
pop
hlt
pop
cmc
(bad)
jl
mov
(bad)
xchg
cdq
jbe
test
cmp
pop
clc
(bad)
(bad)
fistp
xchg
jl
stc
dec
cmp
mov
mov
sbb
(bad)
call
mov
sbb
nop
and
pop
dec
cli
mov
and
xor
push
push
push
add
pushf
scas
call
xor
iret
mov
xor
jmp
(bad)
jbe
xchg
push
cmp
retf
cmps
pop
scas
and
in
(bad)
out
cli
jecxz
mov
mov
sub
test
push
push
(bad)
pop
jecxz
sub
(bad)
dec
dec
jmp
inc
jg
(bad)
retf
mov
cmp
mov
add
push
sbb
jne
(bad)
(bad)
(bad)
jmp
xor
mov
movs
in
dec
mov
fild
push
fs
sub
call
movs
(bad)
mov
sub
jbe
push
mov
xchg
mov
fild
addr16
ja
call
xchg
pop
adc
or
in
push
js
cmp
(bad)
push
mov
sbb
mul
idiv
int3
fwait
push
inc
xchg
scas
(bad)
(bad)
(bad)
fistp
cmp
out
sbb
(bad)
(bad)
rcr
jno
push
or
xchg
xor
sti
xchg
in
mov
(bad)
(bad)
(bad)
(bad)
clc
xor
jae
xchg
inc
int3
(bad)
jl
repz
pusha
inc
mov
fnstsw
jb
rcl
daa
aam
(bad)
(bad)
(bad)
jmp
ss
xchg
clc
out
enter
dec
fist
cmps
hlt
stos
inc
xchg
dec
stos
inc
movs
dec
add
jmp
rcl
into
adc
pop
or
and
repnz
push
mov
fwait
cmp
fldcw
call
das
scas
pop
add
push
sub
sub
ss
xor
mov
(bad)
(bad)
dec
fist
leave
ret
cwde
mov
popf
xchg
lea
jae
mov
dec
pop
ins
out
cli
les
(bad)
push
push
scas
mov
sub
adc
cld
daa
sar
mov
push
lds
mov
inc
push
mov
cmp
xchg
shr
cmps
sub
sbb
cmp
popa
out
xchg
cs
aam
gs
ins
dec
(bad)
(bad)
(bad)
dec
and
cmc
inc
dec
retf
adc
adc
cmp
(bad)
bnd
or
push
loop
mov
inc
(bad)
and
inc
aad
add
popa
sub
pop
push
mov
cmp
push
or
and
int3
mov
inc
push
sbb
sti
in
std
repnz
cs
xchg
movs
enter
add
pop
call
mov
mov
mov
imul
(bad)
(bad)
fcomip
adc
pop
push
cmp
inc
iret
rcr
xor
add
xchg
jne
sbb
and
mov
sbb
sub
lds
jmp
inc
adc
mov
dec
inc
add
das
fwait
(bad)
dec
je
and
retf
or
jae
jmp
out
or
add
xchg
jbe
xchg
dec
gs
(bad)
inc
xchg
mov
xor
or
aaa
push
into
mov
fwait
dec
fmul
(bad)
(bad)
dec
mov
call
test
add
push
out
add
std
(bad)
(bad)
push
lock
or
cmp
test
clc
sub
out
fild
loopne
neg
adc
ret
mov
out
out
std
stos
push
sbb
mov
pusha
and
jp
ins
adc
sti
ins
(bad)
(bad)
jmp
(bad)
xor
pop
mov
lods
and
or
push
idiv
out
xor
mov
dec
icebp
mov
mov
lahf
in
std
mov
fbstp
jg
aad
loope
out
ins
jne
(bad)
(bad)
(bad)
call
stos
nop
sbb
hlt
jbe
call
sub
movs
adc
and
(bad)
dec
jmp
mov
cmp
in
mov
(bad)
(bad)
(bad)
mov
pop
call
fimul
sti
inc
movs
mov
sar
jp
mov
bound
icebp
(bad)
out
(bad)
and
xchg
scas
repnz
add
or
or
sbb
(bad)
mov
jmp
movlps
lahf
xchg
mov
lds
cmp
mov
fimul
mov
pop
mov
cmps
out
(bad)
(bad)
(bad)
mov
(bad)
cmp
cmp
mov
lahf
movs
mov
xchg
mov
push
mov
and
test
(bad)
in
ror
adc
cmc
mov
fbstp
mov
loop
mov
jmp
lods
(bad)
sti
inc
jnp
pop
aad
scas
push
and
sbb
scas
mov
push
mov
inc
xor
or
sar
and
xchg
mov
addr16
sbb
jo
mov
pusha
in
loop
clc
(bad)
(bad)
(bad)
jmp
add
sahf
(bad)
adc
push
mov
ret
and
and
pop
mov
xor
pop
push
out
and
jne
aaa
mov
repnz
ins
and
test
xchg
jmp
mov
lods
xchg
stos
scas
jno
sub
(bad)
mov
call
jnp
repz
or
call
jns
out
loop
push
ss
mov
inc
cmp
mov
(bad)
call
push
mov
jle
das
dec
iret
jl
inc
(bad)
push
and
fnstsw
jnp
sub
sub
dec
cli
sub
xor
jecxz
add
push
ss
mov
xchg
sbb
sti
inc
call
dec
lods
lock
(bad)
aas
and
aas
stos
push
bound
mov
adc
inc
clc
dec
imul
inc
pop
popf
ds
push
push
(bad)
push
fisub
pop
(bad)
or
bound
xlat
movs
pushf
pop
cwde
and
inc
and
std
mov
or
(bad)
(bad)
inc
dec
imul
pop
xchg
shr
add
cmp
(bad)
call
xchg
sbb
add
les
jecxz
fwait
mov
imul
xor
mov
mov
clc
(bad)
(bad)
mov
fwait
xchg
sbb
mov
adc
xlat
inc
addr16
int
jle
add
test
xchg
addr16
(bad)
call
or
sbb
aam
cli
jg
sub
rol
xor
dec
or
test
mov
jbe
out
push
and
(bad)
dec
pop
popa
pop
mov
stos
int
push
icebp
mov
mov
and
(bad)
(bad)
jmp
xchg
mov
test
inc
xor
adc
push
(bad)
hlt
mov
ror
inc
pop
ficomp
test
jae
cmp
xor
mov
stos
adc
call
mov
(bad)
lea
es
dec
ds
mov
xchg
adc
mov
test
data16
dec
push
xor
sbb
mov
and
int3
test
std
adc
jmp
cli
jmp
imul
jo
mov
in
jb
arpl
lahf
sub
mov
add
(bad)
(bad)
jmp
dec
mov
xor
lahf
ss
add
xchg
cmp
cmp
int3
xor
ret
add
scas
jp
xchg
cmp
enter
cmp
push
mov
dec
hlt
jae
push
and
or
(bad)
into
xchg
cmps
les
sub
or
(bad)
pop
add
pop
push
mov
push
mov
lods
pop
retf
std
(bad)
jmp
cld
in
jmp
ja
ss
pop
mov
pushf
mov
push
retf
jl
or
xchg
lods
jo
cmp
arpl
nop
jle
xor
jp
lock
dec
scas
in
addr16
xchg
inc
add
jb
add
push
xchg
cmp
(bad)
push
mov
es
stos
sbb
cs
mov
inc
adc
add
and
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
xor
and
retf
nop
adc
jge
fstp
(bad)
mov
jmp
sbb
das
push
jae
aam
xchg
push
mov
imul
ror
inc
outs
pop
loop
jns
idiv
jmp
push
cmp
sbb
xlat
or
fdivr
lgs
adc
adc
pushf
push
cmp
jb
push
outs
push
jbe
dec
or
cmp
add
add
(bad)
(bad)
(bad)
inc
cmp
push
mov
push
xor
jmp
mov
pop
push
daa
icebp
(bad)
(bad)
push
shr
enter
push
or
or
aaa
jbe
repz
jge
fwait
dec
lods
nop
bound
lods
rcl
mov
(bad)
(bad)
sub
cmc
inc
jae
js
or
adc
xchg
sar
(bad)
jmp
push
test
dec
dec
dec
push
jb
xor
inc
fwait
inc
sbb
push
pop
pop
test
(bad)
(bad)
call
mov
push
xor
or
jo
adc
loop
je
(bad)
(bad)
(bad)
push
mov
inc
jmp
int
mov
xchg
je
jae
sub
ret
std
(bad)
jmp
ret
jbe
jecxz
push
cld
ret
outs
arpl
pop
xchg
pop
inc
aam
hlt
push
aaa
std
inc
cmp
cwde
ret
loope
jmp
xor
(bad)
inc
sbb
(bad)
and
pusha
and
adc
sti
xor
cmc
cmp
xchg
(bad)
(bad)
(bad)
call
sub
sti
xor
push
cwde
mov
cmp
(bad)
xlat
jbe
inc
xchg
ds
(bad)
(bad)
push
xor
popa
pop
cmp
xchg
mov
aad
sar
push
push
sub
das
(bad)
fcomip
call
add
pop
or
and
cli
add
inc
xchg
jl
add
sub
pop
cld
ds
sub
sti
sti
mov
das
jne
je
out
cmp
dec
(bad)
(bad)
(bad)
(bad)
call
test
push
or
pop
sahf
mov
stos
les
add
aaa
mov
ret
adc
lahf
imul
cmp
mov
or
(bad)
(bad)
(bad)
inc
loope
jbe
or
inc
push
jno
dec
int3
push
(bad)
fild
push
aam
pop
dec
push
jbe
cmps
dec
or
jg
ins
test
out
or
or
push
shl
jmp
xchg
dec
xor
pop
xchg
aam
xor
add
std
(bad)
(bad)
inc
stos
cmc
in
(bad)
xchg
xor
and
pushw
call
mov
inc
loop
mov
clc
aaa
dec
cmps
jns
(bad)
mov
or
out
fcomp
mov
(bad)
pop
fsub
(bad)
push
les
aad
(bad)
stos
(bad)
or
and
add
jmp
cld
dec
loopne
repz
pop
jno
sti
mov
cwde
xchg
and
popa
in
pop
lea
dec
dec
or
(bad)
(bad)
jle
mov
out
pop
movs
iret
iret
inc
pop
cmp
push
cmovnp
popa
mov
sub
xchg
xchg
fwait
pop
mov
add
cdq
jae
mov
push
jns
mov
lods
xchg
mov
pop
ret
lea
dec
ror
aas
jns
(bad)
(bad)
jmp
cmps
cmp
(bad)
pushf
dec
mov
int
pop
jb
ret
outs
dec
xor
jmp
mov
(bad)
shl
adc
push
adc
(bad)
(bad)
call
and
mov
mov
fisttp
es
(bad)
call
test
push
or
cdq
clc
sahf
jns
outs
fistp
xlat
data16
(bad)
test
hlt
(bad)
(bad)
fiadd
push
xlat
inc
mov
movs
(bad)
push
dec
daa
out
xchg
loope
mov
in
dec
(bad)
xor
xor
mov
push
stos
pusha
dec
retf
retf
cs
shl
mov
or
loop
mov
and
xlat
adc
inc
lock
mul
sar
xor
sbb
jbe
xchg
adc
cmp
(bad)
jmp
clc
in
vcvtsi2sd
sub
cmp
mov
clc
stos
jbe
test
inc
int3
pop
push
jb
mov
sar
das
mov
retf
mov
mov
or
jno
bound
and
cld
outs
clc
jg
and
ss
or
inc
leave
add
retf
stos
sub
xchg
pop
xlat
pop
ret
inc
fwait
push
push
es
lods
xchg
push
xchg
xor
call
scas
and
test
push
and
aas
mov
ja
sub
push
mov
mov
(bad)
jmp
imul
out
jno
ror
arpl
bound
(bad)
(bad)
(bad)
jg
int
fidivr
leave
mov
iret
cwde
xchg
stos
int
leave
or
add
retf
sub
push
movs
pop
sub
push
mov
dec
and
fs
xchg
push
sub
aad
push
stos
sbb
outs
sub
(bad)
call
dec
sbb
fidiv
(bad)
cld
pop
in
ja
movs
(bad)
fcom
dec
enter
adc
(bad)
mov
stos
repz
mov
cmps
jmp
mov
(bad)
jmp
test
test
pop
data16
retf
outs
lock
or
loope
sti
sbb
jbe
cmp
test
mov
jb
outs
fdivrp
call
jbe
xchg
imul
push
stc
lods
adc
(bad)
push
aad
dec
sete
jns
mov
dec
arpl
(bad)
loopne
out
jg
pop
push
(bad)
loope
jg
idiv
mov
mov
aam
jo
sub
out
in
inc
ja
inc
pop
mov
(bad)
(bad)
jmp
dec
inc
mov
sbb
xor
jbe
cmp
sub
int3
xchg
(bad)
(bad)
(bad)
(bad)
js
inc
and
jo
pop
sbb
fcom
ins
push
lea
push
pop
pop
jb
(bad)
(bad)
dec
sub
jns
repnz
sub
das
mov
sbb
pop
(bad)
mov
or
push
fnsave
xchg
rol
mov
pop
mov
movs
out
mov
cwde
out
xor
push
call
es
bound
jns
icebp
(bad)
(bad)
sub
out
addr16
(bad)
jg
jmp
cmp
in
popf
sub
mov
dec
sahf
mov
test
add
and
(bad)
out
adc
jb
js
push
jmp
lods
mov
retf
or
(bad)
call
cdq
ja
ret
mov
lods
sub
rcl
mov
test
or
stc
mov
push
int3
inc
mov
(bad)
mov
and
and
and
sub
mov
ss
call
mov
js
out
lahf
aad
fwait
xchg
cmp
sub
(bad)
(bad)
call
push
jns
rcl
jbe
adc
pop
or
inc
stos
outs
das
cs
(bad)
(bad)
(bad)
jmp
xchg
repz
retf
dec
inc
(bad)
ds
pusha
inc
pop
jl
inc
xchg
int
push
retf
jmp
or
mov
inc
das
(bad)
push
loop
fistp
fidivr
(bad)
(bad)
mov
ss
push
call
arpl
dec
scas
xor
lods
(bad)
push
stos
pop
lods
mov
(bad)
(bad)
mov
or
mov
add
test
int3
je
push
lahf
sub
xchg
(bad)
call
cmp
clc
nop
xchg
cdq
mov
adc
imul
(bad)
jmp
(bad)
sbb
or
addr16
lods
imul
(bad)
(bad)
sbb
(bad)
(bad)
jmp
leave
es
aam
and
pop
loopne
jmp
lock
pop
xchg
jbe
movs
hlt
xchg
lods
test
(bad)
dec
sti
mov
jge
pop
in
pop
aam
sahf
pop
(bad)
call
shl
les
adc
aad
pop
xlat
lods
cld
std
out
inc
cli
(bad)
(bad)
call
loope
xchg
or
and
adc
or
mov
sbb
aaa
(bad)
mov
das
cmp
ss
gs
gs
jle
pop
mov
mov
inc
rol
push
push
movs
call
(bad)
fnstsw
shl
dec
push
sub
fs
mov
xor
(bad)
jmp
xchg
mov
jge
stc
mov
pop
mov
(bad)
(bad)
(bad)
fild
and
push
sbb
movs
dec
mov
lds
adc
test
(bad)
hlt
jne
jmp
push
pop
lods
adc
fisubr
dec
mov
add
mov
es
pop
in
xchg
push
pop
add
mov
call
dec
xor
xchg
out
pop
cmp
js
(bad)
outs
and
dec
in
(bad)
(bad)
js
(bad)
(bad)
(bad)
push
mov
in
loop
pop
jnp
inc
jle
(bad)
mov
add
ret
mov
mov
dec
rol
mov
lods
test
test
push
les
(bad)
jmp
movs
sub
mov
pop
pop
(bad)
mov
adc
out
(bad)
call
cmp
and
xchg
and
jl
pop
movs
pushf
je
adc
jmp
mov
inc
out
push
jp
add
jp
stos
and
adc
mov
xchg
mov
ss
inc
(bad)
or
and
in
jmp
clc
clc
rol
adc
cmp
jmp
xchg
(bad)
(bad)
fldcw
ins
jp
je
ins
test
push
jp
(bad)
mov
ret
push
push
push
rol
(bad)
mov
ret
mov
xor
mov
pop
mov
out
sti
mov
loope
scas
stc
and
dec
icebp
or
fldenv
stos
loopne
call
adc
or
sti
(bad)
(bad)
push
test
sbb
or
add
cmps
xchg
xor
jmp
(bad)
(bad)
jns
in
lea
movs
idiv
mov
idiv
inc
sbb
xchg
sar
xrelease
(bad)
(bad)
call
cld
and
sbb
ins
push
pushf
mov
nop
cwde
xchg
xchg
fwait
mov
fcomip
call
shl
mov
jo
jbe
dec
les
inc
adc
jmp
test
push
cld
jae
ins
jmp
xor
dec
mov
dec
mov
pop
fstp
in
or
mov
sahf
mov
lods
and
adc
inc
sub
jno
es
push
je
rol
push
push
ret
push
pop
sub
lock
test
(bad)
(bad)
(bad)
inc
mov
mov
sbb
mov
jmp
movs
popf
hlt
xchg
std
sbb
mov
sub
stos
ins
cmps
(bad)
(bad)
(bad)
jp
jecxz
mov
xchg
sbb
stc
jno
(bad)
ins
je
and
movs
mov
(bad)
push
pop
xchg
xchg
mov
xchg
mov
xlat
clc
pop
inc
or
in
fs
call
pop
mov
jb
adc
(bad)
mov
and
and
pop
xchg
(bad)
(bad)
inc
xor
into
outs
mov
ret
cmp
cmp
cmp
inc
fstp
daa
xlat
movs
xchg
fs
jmp
aam
xchg
jno
shr
movs
push
mov
jg
mov
std
(bad)
(bad)
fild
je
not
mov
out
jnp
repnz
fwait
aad
lahf
imul
(bad)
(bad)
mov
dec
mov
mov
adc
(bad)
cli
jge
jp
and
sti
fcmovbe
(bad)
(bad)
(bad)
(bad)
push
aam
pop
not
popa
iret
mov
push
stos
in
das
add
js
stos
outs
mov
sub
add
(bad)
(bad)
jmp
xacquire
or
lahf
jge
retf
cmc
ins
sti
mov
in
(bad)
mov
jno
(bad)
(bad)
(bad)
inc
push
dec
mov
fistp
jb
push
shl
fmul
outs
icebp
movs
std
movs
stos
je
(bad)
dec
lock
push
push
xchg
jecxz
clc
inc
jp
dec
jno
jbe
(bad)
retf
ins
jle
loope
dec
(bad)
inc
repnz
pop
push
xchg
lods
jne
repz
rcr
and
dec
mov
cmp
push
out
repz
data16
(bad)
je
mov
and
daa
cmps
dec
lea
rcr
fld
and
push
or
mov
jmp
movs
scas
idiv
call
mov
imul
inc
pop
ret
jg
mov
mov
push
mov
and
enter
scas
enter
cmp
(bad)
fild
arpl
adc
mov
out
aaa
lock
jmp
cld
xchg
jne
inc
aas
shr
stc
push
cdq
fstp
out
sbb
leave
lods
jnp
pop
push
lods
dec
(bad)
popf
mov
ss
sbb
icebp
fwait
mov
sub
cld
stos
inc
jp
movs
fs
loope
jmp
mov
inc
lea
add
push
js
lds
cmp
jg
(bad)
(bad)
mov
arpl
int
std
xor
in
aas
or
dec
mov
fwait
gs
fcomip
(bad)
(bad)
fld
jl
and
cmp
cmp
jl
sub
inc
(bad)
mov
es
mov
(bad)
not
clc
cmp
jb
loope
jmp
add
aaa
imul
call
sub
sbb
std
push
(bad)
inc
je
dec
mov
fld
ror
dec
int
out
ss
sti
mov
mov
mov
scas
xchg
call
mov
pop
cli
call
nop
(bad)
dec
jle
xchg
jmp
adc
xchg
out
mov
mov
(bad)
inc
ss
push
xor
mul
ins
lahf
in
pop
mov
(bad)
jmp
jmp
mov
leave
mov
lods
jg
and
ds
push
sbb
jle
jecxz
sar
(bad)
push
in
scas
fidivr
test
div
jle
pop
xchg
mov
inc
bound
mov
xchg
out
or
std
jo
sar
(bad)
(bad)
fucomi
in
aam
ss
call
sbb
dec
xchg
cli
xchg
jle
lahf
dec
jne
out
(bad)
(bad)
(bad)
jmp
in
call
xchg
ror
jb
jg
cmc
jmp
jmp
mov
mov
cmp
aas
aad
dec
cmp
jp
repnz
sub
in
and
movs
push
cld
push
cs
ror
jmp
outs
(bad)
cmps
mov
imul
cld
(bad)
jbe
add
jg
mov
movs
sub
sub
(bad)
xor
fwait
lahf
mov
dec
rcl
sti
push
outs
test
sti
imul
test
push
in
mov
fldln2
jge
(bad)
jmp
ret
stc
adc
es
rol
jno
hlt
aas
xor
jg
(bad)
cpuid
in
(bad)
cli
mov
stos
pop
ud0
jne
and
ja
pushf
pusha
cdq
clc
dec
cli
dec
dec
push
sub
(bad)
mov
push
xor
jne
sbb
(bad)
pop
scas
call
mov
fwait
call
(bad)
push
or
ret
adc
pop
test
(bad)
(bad)
jg
(bad)
sbb
dec
cmp
xchg
pop
jns
stc
mov
cmp
mov
add
(bad)
inc
hlt
xchg
mov
mov
sar
icebp
jg
dec
mov
cmp
adc
loop
mov
loopne
or
and
ins
cli
out
je
mov
ret
call
add
xchg
(bad)
(bad)
call
inc
xchg
adc
shr
jns
bound
int
hlt
dec
mov
popf
test
add
mov
inc
lods
jmp
inc
cmp
sahf
test
cmp
jne
jne
jmp
lea
cmc
push
sub
dec
mov
out
inc
scas
es
outs
ret
mov
push
ror
jbe
pop
mov
in
aaa
mov
pop
jo
cmp
push
sub
jno
cld
xor
sub
(bad)
(bad)
jmp
inc
(bad)
pop
in
repnz
mov
mov
push
in
in
adc
scas
xlat
pop
pushw
test
mov
out
jg
mov
push
popw
xchg
stc
mov
aas
clc
ret
pop
mov
test
add
xchg
(bad)
pop
mov
test
aad
dec
out
out
cmp
fisubr
hlt
xor
adc
fistp
lea
leave
in
sub
(bad)
mov
mov
popf
mov
cwde
sub
pop
pop
adc
cmp
(bad)
out
out
cli
inc
cmc
pop
rcr
jg
sti
(bad)
jg
ror
cmp
lods
outs
(bad)
xchg
pop
leave
(bad)
(bad)
(bad)
dec
out
iret
fsub
push
xor
sub
dec
dec
mov
mov
fist
lods
(bad)
(bad)
(bad)
(bad)
(bad)
stc
pop
imul
pop
jbe
pop
cld
pop
jne
and
xor
cwde
sbb
mov
push
xchg
mov
inc
or
jp
inc
outs
push
mov
loop
mov
retf
aaa
lods
mov
(bad)
(bad)
(bad)
(bad)
dec
or
std
fiadd
xor
jmp
into
jns
jo
pop
sub
(bad)
mov
push
scas
sbb
lea
mov
pop
mov
xor
(bad)
call
xchg
cld
inc
mov
pop
movs
lds
or
outs
int3
jns
mov
(bad)
(bad)
jmp
push
lahf
fcmovbe
fs
fdivr
mov
cld
daa
ja
test
les
sbb
xor
dec
aam
repnz
ficom
mov
jno
ins
ins
sub
jae
push
mov
test
or
xchg
xchg
clc
dec
jb
pop
loop
test
stos
ins
les
test
(bad)
(bad)
(bad)
jmp
sbb
mov
sti
jns
fdivrp
mov
jnp
adc
push
jbe
push
and
call
mov
sub
and
sub
and
and
jno
std
(bad)
(bad)
pop
sbb
test
(bad)
jmp
ins
les
or
test
sbb
jp
fimul
mov
pop
int
mov
inc
(bad)
(bad)
push
retf
xor
push
test
pushf
mov
das
dec
sub
inc
jl
mov
or
call
outs
and
cmc
rol
clc
xor
dec
fnsave
mov
push
jg
(bad)
ins
pop
es
jmp
jg
fidivr
sub
mov
mov
popa
cwde
movs
pop
xchg
ret
add
les
mov
cmps
test
push
scas
aas
xchg
pop
jno
test
or
test
and
(bad)
(bad)
mov
push
je
cmp
pop
jmp
dec
out
mov
sub
nop
(bad)
(bad)
(bad)
push
xchg
mov
icebp
xlat
mov
and
push
dec
enter
sub
pop
and
inc
xchg
or
(bad)
call
cld
jle
xchg
cwde
test
pop
xchg
test
add
imul
retf
jp
pop
ret
pop
sar
sbb
inc
dec
aam
ds
or
rcl
(bad)
dec
data16
lods
cli
sub
cmp
mov
push
outs
add
(bad)
fdivrp
jmp
xchg
je
repnz
jle
iret
cwde
je
retf
jnp
jl
sbb
adc
and
and
call
(bad)
call
and
leave
loope
popa
rcr
mov
pushf
push
daa
xchg
adc
(bad)
out
fld
dec
and
dec
or
lods
pop
out
xor
stos
enter
(bad)
mov
adc
jecxz
mov
dec
setge
rcl
popa
mov
pop
lock
lock
in
jg
xchg
mov
pushf
(bad)
pop
xor
sti
xor
ds
aaa
push
fld
cmp
and
mov
mov
sbb
dec
(bad)
adc
repnz
pushf
pop
dec
outs
sbb
add
cld
ds
sahf
mov
fld
(bad)
jmp
sahf
cmc
aas
repnz
scas
out
mov
cmps
lock
(bad)
mov
movs
idiv
xchg
jmp
(bad)
dec
inc
push
xchg
test
bound
push
movs
mov
sub
(bad)
inc
ror
sub
or
and
mov
dec
dec
aas
int
pop
lock
lock
mov
shl
xor
xchg
(bad)
(bad)
dec
ficomp
cmp
add
pop
sub
fs
mov
out
add
add
xchg
and
inc
fwait
ret
stos
sub
movs
dec
ret
dec
(bad)
(bad)
(bad)
push
mov
push
dec
and
xor
pop
mov
xchg
inc
jnp
(bad)
aas
scas
stc
mov
jnp
lods
xor
(bad)
(bad)
call
dec
push
out
push
shl
rol
and
fs
test
inc
call
cld
jmp
xchg
mov
jecxz
je
adc
cmc
ret
jp
dec
mov
(bad)
(bad)
(bad)
std
cwde
ds
fs
or
xor
sub
sub
adc
and
inc
retf
push
jne
(bad)
jmp
cli
push
ret
and
jae
popa
(bad)
imul
and
std
inc
push
(bad)
(bad)
(bad)
dec
outs
cmp
dec
je
and
push
test
in
mov
lock
cdq
dec
jo
push
push
push
(bad)
mov
xor
je
pushf
mov
inc
mov
inc
cmp
mov
pushf
push
shl
mov
pop
jb
pop
mov
jmp
ror
and
mov
inc
dec
into
ds
mov
push
call
adc
mov
sub
cmp
cmp
add
pushf
pop
(bad)
es
cli
mov
ret
mov
inc
stc
(bad)
(bad)
(bad)
call
iret
dec
and
mov
push
std
out
inc
repz
pop
pushf
test
out
(bad)
enter
cmc
(bad)
(bad)
std
pusha
cmps
adc
push
jp
scas
aaa
push
ret
jne
shl
(bad)
call
inc
inc
mov
add
sub
adc
xchg
das
sbb
dec
push
xor
pushf
jge
(bad)
(bad)
push
out
movs
or
inc
mov
loopne
push
pusha
and
fs
(bad)
mov
xchg
cmp
sub
mov
pop
shr
and
outs
(bad)
(bad)
(bad)
(bad)
jge
retf
inc
sbb
popa
adc
dec
inc
push
xchg
movs
add
or
pop
data16
(bad)
(bad)
jmp
add
dec
jg
cmp
dec
push
mov
dec
cli
int3
push
mov
scas
aaa
add
call
mov
pop
movs
sub
retf
dec
xor
(bad)
(bad)
dec
pop
pop
mov
xor
dec
test
clc
push
jbe
xlat
sbb
jmp
and
pop
lahf
xchg
xchg
xor
pop
or
cmp
(bad)
jmp
jecxz
and
push
xor
inc
daa
ja
ins
(bad)
lods
inc
(bad)
lods
jecxz
dec
jno
test
xchg
jmp
ret
call
shr
icebp
sub
dec
imul
dec
cmp
mov
and
(bad)
cmp
inc
and
jle
ds
sahf
cmp
xchg
mov
(bad)
(bad)
(bad)
fcmovb
shl
scas
xlat
ror
fld1
cmps
cmps
mov
test
inc
loop
cmp
(bad)
(bad)
(bad)
(bad)
fcmovb
rcl
mov
pop
ja
sti
xchg
movs
sub
xchg
repz
das
stos
je
loopne
mov
xchg
ret
js
and
add
sti
push
pop
or
push
inc
bound
test
cmp
enter
push
ja
repz
(bad)
(bad)
call
mov
dec
pop
mov
out
std
fistp
enter
jmp
inc
movs
inc
inc
push
popw
call
inc
push
mov
jge
or
or
aam
ret
add
or
push
cmp
push
(bad)
(bad)
dec
shl
dec
dec
add
mov
inc
les
std
mul
(bad)
(bad)
(bad)
call
ret
shl
icebp
xor
xchg
rcl
cmp
rcl
pop
dec
jg
mov
sbb
cmp
add
and
xchg
jbe
(bad)
(bad)
(bad)
cmp
jbe
adc
mov
test
lds
xor
(bad)
(bad)
(bad)
call
int3
sub
les
sbb
mov
jmp
stos
dec
mov
mov
cmp
push
(bad)
push
bnd
sub
aam
mov
jmp
inc
dec
je
fisttp
repnz
aam
jecxz
je
(bad)
(bad)
dec
add
dec
jge
idiv
in
clc
cmp
and
test
(bad)
mov
cli
inc
test
lods
sub
ret
adc
(bad)
(bad)
mov
test
dec
test
add
pop
imul
cdq
nop
call
and
mov
and
xchg
adc
(bad)
(bad)
(bad)
dec
add
pop
inc
bound
stos
loop
retf
pop
or
dec
into
ficom
push
push
xor
mov
xor
mov
push
and
and
daa
push
sub
add
(bad)
push
add
mov
xchg
jne
xor
pop
push
jl
fstp
repnz
mov
sub
add
mov
xchg
fnstenv
dec
dec
sub
call
mov
mov
push
cmp
mov
mov
imul
in
inc
data16
rol
(bad)
(bad)
ds
scas
ds
cmp
cmp
mov
pop
idiv
push
adc
(bad)
jg
stos
(bad)
sub
jbe
(bad)
fldcw
iret
xor
punpckhwd
sbb
jg
dec
inc
rcr
push
xchg
add
mov
lahf
dec
fist
(bad)
(bad)
(bad)
inc
cli
fstp
fdivr
jge
and
jmp
bound
xchg
push
dec
sbb
or
pop
aas
add
jmp
inc
leave
xor
add
(bad)
jmp
fisub
addr16
in
push
mov
ins
shl
sub
movs
adc
pop
into
stos
(bad)
(bad)
(bad)
dec
ret
mov
and
push
je
out
mov
xchg
jge
bound
(bad)
xchg
push
fwait
xchg
loopne
jmp
les
pop
rcl
mov
push
mov
(bad)
(bad)
(bad)
jmp
les
and
dec
test
inc
mov
(bad)
pop
ins
fistp
jmp
push
sti
cmp
cwde
fld
int3
dec
stos
retf
leave
or
arpl
(bad)
(bad)
jg
call
inc
in
adc
mov
daa
sbb
jae
jp
call
push
and
fwait
mov
movs
out
mov
or
mov
(bad)
(bad)
(bad)
inc
push
xchg
dec
int
jne
scas
mov
or
leave
pushf
push
jp
in
or
cmc
sbb
(bad)
mov
in
out
leave
push
dec
or
mov
cmp
aam
or
(bad)
(bad)
(bad)
cld
call
inc
call
cmp
xchg
popf
sahf
xchg
push
(bad)
popa
add
sub
(bad)
(bad)
push
adc
rcr
lea
nop
cdq
rcr
dec
jnp
clc
fist
std
(bad)
cmp
(bad)
fs
lea
xor
gs
cli
add
and
cli
call
dec
sti
xchg
retf
mov
or
loopne
stc
fstp
lock
sbb
retf
xor
jmp
aas
and
or
mov
lea
(bad)
out
cmp
pop
ret
les
xor
(bad)
(bad)
(bad)
(bad)
jnp
je
jnp
shl
dec
lods
or
retf
sub
mov
sub
(bad)
(bad)
mov
(bad)
(bad)
(bad)
in
lods
mov
ss
mov
clc
mov
iret
xchg
mov
xchg
cmp
mov
mov
test
jle
into
jl
jle
(bad)
(bad)
(bad)
jmp
mov
cmc
cmp
dec
icebp
mov
stc
xor
push
pop
inc
aad
add
mov
pop
mov
call
(bad)
call
adc
cmp
push
xor
dec
inc
(bad)
adc
jb
ja
(bad)
inc
jge
jp
fwait
jmp
in
(bad)
aaa
addr16
mov
int
or
(bad)
call
mov
sbb
(bad)
hlt
out
xor
retf
(bad)
ficomp
adc
mov
xor
or
(bad)
(bad)
(bad)
(bad)
jns
add
in
scas
or
adc
fisub
mov
adc
loope
(bad)
(bad)
(bad)
push
cmp
cmp
mov
pop
int3
pusha
loop
into
jmp
xchg
jp
inc
xlat
xor
in
mov
jmp
mov
sbb
xchg
aaa
jnp
sbb
movs
and
das
test
mov
sar
cs
sar
les
lds
in
rcr
sub
(bad)
(bad)
(bad)
jmp
cmc
scas
movs
pop
adc
repnz
mov
mov
jo
jae
imul
inc
(bad)
(bad)
(bad)
(bad)
cmp
fs
cdq
jnp
in
call
mov
or
or
or
dec
jb
cli
sub
(bad)
(bad)
push
dec
xchg
arpl
sbb
mov
mov
pop
inc
faddp
mov
(bad)
(bad)
push
pusha
adc
and
mov
es
(bad)
in
cmp
cmp
imul
imul
xchg
or
out
(bad)
fs
(bad)
call
xchg
scas
test
jno
stc
push
enter
dec
xchg
gs
sub
push
daa
out
das
or
int3
imul
xor
jle
sbb
sbb
and
and
ret
adc
(bad)
dec
adc
adc
xchg
or
data16
mov
hlt
mov
das
movs
sub
jecxz
nop
mov
inc
(bad)
aam
std
jl
add
push
push
push
(bad)
inc
(bad)
call
leave
sbb
cmp
sti
imul
mov
(bad)
(bad)
mov
inc
inc
adc
xchg
xor
popf
in
fcmovb
adc
jg
fdivr
jg
mov
je
or
daa
fdivr
movs
lds
lahf
pushf
jns
jae
movs
(bad)
push
(bad)
jg
ins
lods
sbb
mov
(bad)
cmps
js
outs
fnstsw
repnz
mov
(bad)
fucomip
scas
cmp
rcr
inc
sub
imul
mov
xor
pusha
sbb
(bad)
(bad)
call
sub
fnstcw
dec
stc
neg
int3
mov
jg
fdiv
cmps
or
(bad)
(bad)
dec
mov
jge
mov
mov
or
in
mov
mov
push
push
lea
sub
sbb
inc
sbb
nop
cmp
mov
mov
(bad)
not
shl
imul
add
push
int
je
(bad)
call
loop
enter
scas
dec
pop
pop
out
jnp
(bad)
into
test
push
ds
(bad)
(bad)
(bad)
fild
out
test
cld
mov
cmp
mov
arpl
cmp
jmp
xor
xor
(bad)
push
ja
ins
mov
(bad)
(bad)
das
cmp
test
xor
adc
and
mov
or
test
and
mov
(bad)
cwde
(bad)
es
mov
(bad)
(bad)
(bad)
call
mov
jecxz
loopne
xchg
adc
push
adc
jg
inc
cmp
push
jo
sbb
dec
pop
popa
or
add
and
push
call
fld
pop
(bad)
(bad)
(bad)
inc
mov
push
inc
mov
jecxz
mov
mov
cmps
(bad)
repz
in
sbb
stos
(bad)
(bad)
(bad)
jmp
rol
lods
scas
mov
fldenv
icebp
mov
sub
clc
les
sub
into
(bad)
(bad)
cli
lahf
aam
dec
sub
adc
dec
mov
outs
(bad)
icebp
scas
test
pop
(bad)
(bad)
(bad)
jg
jnp
cmp
pop
rcr
push
jmp
mov
cmp
mov
jecxz
push
(bad)
(bad)
(bad)
jmp
in
lods
push
stos
fbld
push
stos
inc
mov
pop
(bad)
xor
sti
aas
ins
xchg
sar
(bad)
(bad)
jmp
imul
push
xor
jp
xor
cld
push
int3
and
sbb
imul
(bad)
sbb
sbb
and
fimul
int3
cmp
(bad)
(bad)
mov
push
pop
inc
mov
retf
test
push
jnp
loopne
out
sub
mov
push
push
in
imul
add
(bad)
adc
mov
mov
xchg
test
push
shl
xchg
js
retf
cmp
jo
(bad)
(bad)
cdq
push
fcmovb
dec
sub
(bad)
(bad)
(bad)
mov
in
cmp
scas
retf
pop
add
cmc
jle
enter
jecxz
mov
(bad)
(bad)
inc
push
pop
fimul
pop
mov
(bad)
xor
repz
adc
out
xchg
jge
sbb
mov
shl
cmp
cmp
mov
icebp
cli
jle
push
das
fdivr
push
aaa
push
jmp
je
cmp
dec
adc
push
lods
sub
scas
pop
sbb
lods
daa
lods
inc
mov
push
fsubrp
jecxz
div
cmp
cmp
jo
xchg
iret
mov
out
push
push
mov
pop
cmps
outs
jg
lock
bound
ins
pop
cmps
sbb
dec
mov
cmp
loope
mov
(bad)
push
movs
leave
je
or
mov
fld
arpl
xor
mov
popa
jl
(bad)
(bad)
(bad)
(bad)
(bad)
stos
xchg
jnp
lods
xlat
test
loop
mov
aas
xchg
pop
xchg
call
dec
mov
test
(bad)
push
neg
sbb
(bad)
outs
fwait
mov
in
dec
and
dec
lahf
mov
(bad)
cmp
push
call
or
test
stos
sti
pop
aad
imul
cmps
mov
sbb
cwde
fild
arpl
push
cmps
and
add
call
cli
movs
inc
pop
jb
mov
pop
mov
cmp
cdq
inc
btc
fcomp
test
(bad)
(bad)
(bad)
jmp
cwde
scas
outs
fs
arpl
push
arpl
mov
push
push
add
push
loope
(bad)
(bad)
call
sub
aas
cmp
or
fsub
(bad)
sub
push
adc
xchg
test
int3
lods
(bad)
(bad)
(bad)
(bad)
jp
dec
fimul
pop
aad
fistp
inc
scas
mov
jg
push
xchg
test
cmp
call
jae
rcl
iret
scas
push
push
dec
sti
xor
adc
pop
aas
loop
fs
out
fsubp
ins
add
call
mov
lock
jp
fld
(bad)
and
jno
mov
out
push
pop
jl
loop
pop
cmc
jg
(bad)
hlt
cmc
clc
and
inc
inc
in
mov
sub
dec
inc
adc
and
dec
jg
sub
popa
add
rol
mov
(bad)
push
fidiv
and
sti
sti
mov
js
add
xchg
out
mov
fidiv
xchg
in
jbe
push
jmp
mov
cli
pop
sbb
pop
dec
loope
aas
dec
ss
dec
jg
cmps
(bad)
hlt
call
movs
xchg
std
aas
mov
and
jecxz
cmp
icebp
iret
int
outs
fcomi
(bad)
clc
scas
(bad)
dec
ins
pop
(bad)
(bad)
inc
mov
pusha
xchg
shl
enter
mov
cmp
fbstp
int3
mov
aam
out
mov
add
je
in
pavgw
std
inc
lds
fdivr
sbb
je
je
xor
fist
movs
inc
loop
mov
popa
dec
xchg
fnsave
repz
dec
(bad)
(bad)
(bad)
(bad)
fild
fadd
sbb
cmp
mov
(bad)
mov
push
cmp
in
call
(bad)
jmp
dec
push
xor
mov
and
(bad)
scas
push
inc
add
mov
outs
int3
std
(bad)
(bad)
push
test
imul
cwde
xchg
inc
push
adc
jns
(bad)
jmp
dec
lock
push
inc
push
or
pop
fistp
sub
and
call
int3
pop
cmp
sbb
sub
pop
std
ds
test
or
mov
(bad)
(bad)
jmp
mov
dec
adc
add
aaa
jno
jnp
daa
fcmovne
sbb
(bad)
(bad)
fldcw
loop
mov
or
ja
adc
adc
shl
jmp
mov
(bad)
or
test
dec
mov
loop
in
push
jecxz
sub
rcr
adc
push
push
lahf
inc
or
jmp
call
cli
arpl
mov
xchg
ja
cmp
iret
(bad)
(bad)
(bad)
call
bound
xor
and
xchg
mov
dec
int
scas
shr
(bad)
retf
mov
(bad)
mov
and
loopne
sbb
push
mov
and
and
(bad)
(bad)
call
shr
inc
push
add
mov
push
dec
cmp
in
dec
shl
(bad)
(bad)
clc
jbe
inc
loop
adc
outs
jle
add
sar
inc
int
push
cs
(bad)
call
dec
sub
adc
nop
aad
movs
or
jmp
adc
mov
mov
int3
mov
xor
xchg
cs
stos
retf
sbb
sbb
ror
sbb
jnp
aaa
push
sbb
mov
sbb
call
call
(bad)
xor
cwde
or
popf
inc
cli
mov
inc
inc
sub
aas
add
stos
repnz
pop
mov
inc
imul
cld
jmp
adc
inc
pop
mov
adc
jo
(bad)
sub
mov
(bad)
(bad)
(bad)
inc
fs
xor
jne
jb
push
jp
xor
dec
nop
mov
sbb
ss
adc
(bad)
jg
dec
daa
inc
jmp
and
push
imul
popa
(bad)
jg
jmp
inc
or
adc
das
or
aam
shl
dec
cmp
mov
jmp
dec
cmp
shl
in
into
scas
sbb
cmc
(bad)
mov
mov
xchg
in
mov
add
or
fisttp
ret
stos
inc
test
adc
pushf
jae
cmp
hlt
mov
aaa
cs
or
sbb
(bad)
call
cdq
mov
rcr
xor
sub
pusha
pop
ds
pop
in
dec
(bad)
(bad)
call
aas
xor
pushf
xchg
sar
inc
jmp
adc
xor
(bad)
jg
icebp
jmp
push
stos
fsub
inc
push
(bad)
(bad)
sbb
jns
(bad)
pop
push
scas
mov
movs
imul
in
inc
and
out
out
sahf
(bad)
(bad)
(bad)
call
stc
clc
inc
sbb
pop
pop
xchg
sbb
ins
xor
sub
add
jg
or
sub
push
repnz
add
stc
inc
xchg
mov
mov
and
out
dec
cmps
jae
imul
and
pop
pop
enter
jp
ret
sbb
mov
fistp
not
mov
sub
push
jno
rol
sahf
mov
pop
pop
adc
scas
aad
lahf
jne
(bad)
(bad)
(bad)
jmp
aas
sbb
lahf
lods
nop
mov
js
xor
pusha
test
dec
inc
and
(bad)
(bad)
(bad)
jmp
push
xor
pop
aas
popf
dec
outs
sahf
push
mov
dec
daa
adc
mov
adc
pop
mov
push
adc
cdq
(bad)
ds
fcom
push
pop
or
and
(bad)
call
cld
inc
jb
pop
aam
call
int
cmp
and
(bad)
(bad)
jmp
add
enter
and
cmp
test
push
iret
pop
mov
pop
stos
jmp
push
lahf
jb
add
(bad)
mov
scas
inc
jg
(bad)
fwait
xchg
in
lds
ret
xor
clc
xchg
(bad)
(bad)
mov
adc
inc
and
pop
outs
pop
ret
das
lods
nop
dec
xchg
jns
push
adc
pusha
jae
imul
mov
mov
cmp
clc
jl
sbb
jg
sti
leave
push
inc
jmp
cmp
jle
shr
out
fwait
out
fnclex
pop
and
mov
(bad)
jg
icebp
dec
sti
or
xor
or
dec
mov
pop
xor
inc
mov
sbb
sub
call
bound
push
xchg
fistp
pop
sub
sub
pushf
pop
(bad)
mov
push
outs
inc
mov
adc
and
mov
(bad)
dec
(bad)
hlt
xchg
xor
aas
jge
inc
pop
in
movs
cmp
xor
(bad)
call
sbb
dec
mov
hlt
jmp
mov
call
mov
call
(bad)
(bad)
(bad)
dec
popf
push
fidivr
pop
cmps
dec
jmp
retf
and
cmps
arpl
and
std
(bad)
(bad)
(bad)
dec
repnz
jno
push
arpl
popa
int3
sub
and
sub
sahf
xchg
stc
cmc
jb
xrelease
dec
xchg
xchg
sub
and
test
je
ficom
mov
jbe
stc
(bad)
mov
(bad)
(bad)
push
(bad)
lds
aam
mov
lds
mov
(bad)
in
xchg
in
push
(bad)
in
call
retf
xchg
mov
add
push
cmps
test
mov
imul
vcvtsi2ss
in
(bad)
mov
int3
popa
jl
add
fwait
fwait
mov
pop
cwde
fnstsw
loope
call
data16
xchg
xchg
inc
sbb
and
lods
(bad)
(bad)
(bad)
(bad)
cmp
in
cli
inc
fstp
shl
int3
sub
mov
inc
xchg
xchg
push
and
mov
outs
icebp
in
sbb
addr16
cli
cmp
push
test
mov
call
or
add
mov
rcr
fild
stos
push
fst
loop
rcl
cwde
xchg
adc
fwait
push
adc
(bad)
(bad)
jmp
fidivr
int
push
ja
push
sbb
gs
fnsave
aaa
xchg
and
pop
ror
add
(bad)
(bad)
jmp
xchg
fnstsw
cmp
imul
fs
repnz
aam
dec
mov
stos
loopne
(bad)
call
scas
dec
add
or
mov
(bad)
(bad)
(bad)
push
cmps
arpl
retf
inc
or
inc
inc
sub
dec
ficom
xor
aaa
push
fdivr
(bad)
(bad)
push
mov
mov
jb
repz
jns
rcr
addr16
mov
arpl
data16
push
jmp
in
push
xchg
stc
inc
test
pop
and
dec
in
(bad)
aad
(bad)
call
or
push
sbb
cmps
sub
mov
push
loope
mov
adc
ja
scas
js
xor
inc
into
add
stc
dec
jne
test
(bad)
(bad)
(bad)
call
jle
hlt
sar
xchg
sub
popa
mov
add
dec
xlat
mov
repnz
out
mov
aam
and
(bad)
inc
stos
(bad)
mov
and
ss
cmc
lods
or
(bad)
(bad)
(bad)
call
xchg
xchg
add
push
ret
loop
leave
cmps
in
sub
(bad)
loopne
xor
test
iret
xor
js
rcl
pop
fsub
(bad)
sbb
dec
mov
cs
adc
outs
int
ret
rol
jmp
inc
cmp
sbb
dec
fwait
cmps
cs
sbb
mov
fnstenv
sub
(bad)
jmp
push
xor
imul
lods
fsubp
mov
(bad)
stc
into
mov
or
push
ret
inc
add
(bad)
(bad)
push
pop
pop
repnz
cmp
sbb
pushf
dec
je
or
outs
add
mov
(bad)
dec
pop
idiv
fwait
(bad)
adc
dec
bound
and
cmp
push
sar
call
pushf
(bad)
mov
mov
leavew
dec
or
dec
mov
(bad)
push
jmp
ffree
mov
mov
mov
std
xor
(bad)
xor
push
cmps
retf
push
pop
std
(bad)
dec
(bad)
mov
adc
cwde
jg
mov
jecxz
out
pushf
push
push
arpl
(bad)
(bad)
dec
jecxz
loop
into
mov
xchg
xor
xchg
(bad)
jmp
and
or
and
movs
sbb
(bad)
cmp
push
iret
xchg
add
sbb
mov
(bad)
dec
mov
ss
(bad)
rcr
xchg
lods
mov
fstp
(bad)
scas
ins
mov
arpl
adc
xlat
jb
or
pushf
push
stc
adc
(bad)
(bad)
(bad)
(bad)
push
push
sub
sub
(bad)
xchg
sub
jp
fldcw
fmul
inc
hlt
(bad)
call
push
mov
cwde
mov
sub
dec
pop
xchg
(bad)
push
fsubr
push
push
pop
shl
sahf
or
cmps
pop
cmp
cmp
push
hlt
fisub
add
cmp
inc
ficom
popa
jmp
inc
std
pop
cmp
jb
xchg
mov
js
mov
(bad)
(bad)
inc
test
bound
ret
pushf
mov
sub
xchg
mov
mov
mov
movs
iret
inc
aas
dec
dec
mov
push
sub
shr
test
and
cld
and
jmp
lahf
mov
aad
ins
imul
test
mov
mov
(bad)
(bad)
dec
scas
pop
jo
or
aas
add
sbb
pop
iret
mov
js
xor
popa
sub
test
xor
adc
lock
sub
(bad)
(bad)
(bad)
jg
dec
xchg
pop
jge
call
in
dec
ficomp
xor
addr16
mov
sbb
adc
fwait
inc
(bad)
(bad)
jg
loop
push
popf
xchg
ins
std
test
jae
sbb
(bad)
mov
pop
mov
imul
jae
icebp
jmp
jle
cmp
out
aad
jmp
dec
aas
in
idiv
ins
mov
and
sbb
push
cs
xor
test
adc
pusha
jmp
dec
lods
adc
jecxz
(bad)
jne
or
lock
mov
or
or
mov
bound
xor
mov
push
mov
hlt
lahf
and
(bad)
call
scas
cmps
hlt
out
xlat
pop
js
movs
dec
ins
mov
sbb
cmp
cmc
out
lock
call
cdq
stos
popa
push
sbb
inc
dec
inc
popa
(bad)
(bad)
(bad)
jmp
jge
call
pusha
sbb
in
out
and
xchg
test
add
jno
scas
cli
jmp
mov
mov
stos
(bad)
outs
pop
mov
push
clc
(bad)
(bad)
jmp
retf
std
mov
push
mov
pop
pop
jbe
sbb
xlat
pop
int3
push
sti
dec
(bad)
das
(bad)
call
outs
jo
ins
outs
or
mov
loope
das
clc
das
clc
(bad)
(bad)
fisubr
fs
xor
std
aam
popa
and
ds
(bad)
jmp
(bad)
iret
adc
jmp
idiv
int3
pop
aad
or
sbb
out
(bad)
sahf
ins
(bad)
stos
iret
cmp
ret
cmp
jo
test
adc
aas
scas
jecxz
outs
icebp
(bad)
call
add
jle
mov
iret
adc
inc
dec
sbb
outs
lea
(bad)
fild
sbb
dec
push
out
cmps
cmp
in
(bad)
(bad)
cli
(bad)
(bad)
inc
jecxz
rol
dec
mov
jae
(bad)
mov
aas
sahf
das
sbb
sbb
add
mov
cmp
(bad)
(bad)
jmp
sar
dec
jno
adc
cmps
ds
cld
and
rol
scas
(bad)
jge
mov
sbb
cmps
mov
fiadd
addr16
scas
push
in
rcr
ja
inc
minps
sar
cmp
sahf
fcmovne
mov
xor
lods
push
out
lock
push
mov
and
in
out
lea
mov
sar
dec
(bad)
push
idiv
pop
test
push
das
cmps
push
(bad)
icebp
mov
jg
(bad)
(bad)
mov
jge
mov
xchg
call
sbb
xchg
inc
stos
fldcw
sbb
fild
push
stos
ret
movs
mov
(bad)
jge
call
imul
retf
xor
les
inc
jb
shl
sub
dec
cmc
adc
lock
loop
leave
add
mov
push
mov
adc
outs
pop
outs
mov
(bad)
(bad)
fistp
push
jns
jecxz
xchg
lods
pop
xor
xor
mov
xchg
mov
(bad)
(bad)
(bad)
push
je
neg
push
xor
or
gs
idiv
(bad)
sti
sub
retf
movq
(bad)
(bad)
(bad)
push
sbb
cmc
cli
in
or
xchg
push
push
mul
in
repnz
cmps
sbb
out
cli
ins
mov
sbb
shr
(bad)
(bad)
(bad)
cmp
in
dec
push
pop
mov
add
in
pop
xor
imul
sub
and
stos
jae
jmp
pop
jecxz
pop
dec
inc
movs
push
shl
mov
enter
in
imul
cld
loope
outs
cmp
dec
ret
cmp
push
mov
inc
cmp
fistp
sub
xchg
(bad)
(bad)
(bad)
push
mov
loopne
arpl
lods
mov
add
mov
mov
into
xor
loope
(bad)
(bad)
cmp
loope
les
daa
repz
or
cmps
sbb
in
push
xchg
jecxz
loopne
(bad)
cli
xor
ret
ss
mov
push
ds
(bad)
call
sbb
xlat
sar
mov
sub
or
mov
call
loop
or
mov
popa
jnp
retf
das
xor
cwde
repz
(bad)
(bad)
push
xor
fidivr
ds
gs
mov
(bad)
das
mov
dec
in
rcl
jp
cmp
(bad)
push
test
sbb
push
cmp
fwait
clc
xor
jge
stos
ja
ins
scas
mov
(bad)
jmp
jl
sbb
jo
cld
(bad)
push
xor
daa
leave
lea
rcl
jmp
cld
cmp
mov
hlt
(bad)
jg
pop
add
jae
sub
pushf
jp
out
push
cmc
cld
pop
les
shr
mov
cmps
jge
(bad)
dec
div
push
xor
(bad)
(bad)
mov
inc
(bad)
adc
cmps
mul
aas
cli
pop
cwde
clc
cmps
outs
cdq
jecxz
ss
mov
lock
xchg
pop
mov
shr
clc
shr
cmp
inc
rcr
xchg
mov
mul
test
push
mov
inc
(bad)
(bad)
call
outs
pop
repz
push
push
pop
lods
retf
pop
jg
pop
repz
bound
call
clc
hlt
mov
inc
cmp
mov
jmp
sub
dec
sub
pop
mov
cmp
push
add
cmps
xchg
(bad)
cmp
call
mov
push
xchg
fisub
sbb
inc
mov
xchg
cmp
and
nop
(bad)
(bad)
(bad)
inc
out
stos
movs
pushf
sbb
movs
ja
or
and
leave
and
(bad)
jg
push
mov
push
jg
cmc
dec
push
dec
xchg
mov
cmps
loopne
push
sbb
pop
movs
fcmovnb
mov
sti
(bad)
sti
jecxz
adc
mov
mov
fstp
scas
inc
loopne
push
fidivr
and
or
cwde
dec
adc
push
or
mov
jmp
loope
jmp
inc
ja
pop
call
cli
or
cmp
mov
mov
loop
mov
retf
and
lods
and
(bad)
rol
js
imul
retf
push
imul
pop
lods
bound
cwde
mov
mov
and
xchg
mov
xchg
fldenv
inc
mov
add
inc
stc
mov
pop
cmc
leave
outs
sti
mov
(bad)
fild
ins
xchg
(bad)
xor
and
shr
repnz
inc
cmps
add
cmp
lea
dec
jg
fdiv
(bad)
mov
aas
std
xor
sub
faddp
icebp
cs
repz
jg
pushf
fld
jbe
xchg
dec
inc
push
ficomp
fnstcw
out
(bad)
(bad)
cmp
jecxz
ins
cmp
pop
adc
mov
call
(bad)
(bad)
jmp
stos
cld
arpl
push
cli
mov
fistp
lea
mov
jg
fist
ret
aas
fsub
ret
mov
std
into
mov
jecxz
jae
mov
cmp
cmc
sahf
xchg
ret
cmp
(bad)
(bad)
push
neg
push
adc
fwait
ds
sbb
ins
push
mov
cmp
(bad)
(bad)
(bad)
(bad)
jp
out
inc
adc
sub
adc
imul
sub
(bad)
out
jp
fadd
mov
jne
dec
shl
jns
add
fstp
out
pop
mov
sub
sub
lahf
push
fidiv
loop
(bad)
call
les
loopne
loopne
nop
repz
cmp
or
add
iret
out
(bad)
(bad)
(bad)
mov
push
(bad)
icebp
in
mov
sbb
loopne
xchg
out
adc
pop
aaa
cmc
jl
add
xor
scas
cmp
push
std
mov
lods
cmp
ins
inc
pusha
imul
and
push
lods
xchg
sbb
xchg
das
fs
push
inc
rol
lea
add
jno
mov
xchg
je
stos
inc
sti
ds
jmp
out
cs
dec
shl
daa
mov
xchg
lods
in
pop
cmp
(bad)
call
je
xchg
sbb
dec
out
(bad)
adc
push
rol
inc
add
sub
imul
and
add
dec
(bad)
mov
or
scas
(bad)
(bad)
fcomip
push
xchg
das
mov
mov
add
sub
adc
(bad)
jmp
adc
jmp
les
pop
xchg
(bad)
(bad)
mov
(bad)
jmp
inc
sbb
lods
sub
and
or
gs
inc
pop
inc
sbb
push
aam
sbb
retf
fiadd
sbb
hlt
repz
call
adc
mov
xchg
es
movs
sub
mov
jbe
(bad)
(bad)
(bad)
inc
xchg
mov
pop
add
jb
jmp
push
sbb
xchg
(bad)
(bad)
jns
shl
inc
inc
pushf
inc
xchg
sub
jae
sub
cmp
dec
add
loopne
idiv
or
or
(bad)
(bad)
(bad)
out
outs
add
gs
xrelease
sub
or
xchg
adc
adc
dec
(bad)
(bad)
(bad)
call
(bad)
mov
call
ss
repz
mov
out
test
jb
xor
jb
or
call
add
(bad)
and
(bad)
cwde
jg
popf
xchg
sbb
retf
inc
fs
call
inc
push
pop
sub
inc
aad
das
adc
cdq
test
xchg
inc
in
xchg
or
call
and
mov
push
push
inc
fcomp
ins
nop
mov
sbb
xlat
cs
sbb
jmp
mov
fisub
(bad)
(bad)
(bad)
fcomi
xor
aad
sub
sub
ret
mov
(bad)
cmp
ss
js
or
repz
mov
push
or
mov
(bad)
jmp
mov
mov
aad
ror
mov
cs
fisubr
jl
je
imul
jg
(bad)
(bad)
fst
mov
int3
lds
add
adc
sub
adc
enter
add
mov
ss
pop
loopne
stos
std
(bad)
call
dec
out
jecxz
cmc
pop
xor
bound
mov
sti
stos
or
rol
pushf
repnz
(bad)
call
mov
mov
xchg
push
sahf
push
mov
rol
stos
add
and
ret
loopne
xchg
mov
call
aad
cmps
push
inc
fstp
push
inc
adc
lods
inc
push
jns
int3
inc
test
push
dec
adc
pop
dec
push
ja
call
lahf
xchg
lock
out
je
in
out
push
jecxz
cld
(bad)
(bad)
call
bound
pop
inc
cdq
cmp
stos
sub
add
scas
ret
ret
pop
inc
cwde
pusha
pop
cld
cmp
push
jb
push
loopne
xchg
and
add
cmp
mov
mov
inc
cmp
jb
(bad)
xlat
jle
ss
retf
mov
sbb
(bad)
(bad)
jmp
sar
mov
stos
fdivr
mov
stos
jle
fadd
or
ret
(bad)
mov
stos
imul
xchg
aaa
mov
mov
jp
movs
mov
jmp
js
push
fidiv
push
push
jmp
cmp
data16
(bad)
jg
mov
mov
cmp
fiadd
mov
call
shl
push
adc
mov
xor
inc
rsm
js
rol
fst
(bad)
(bad)
jmp
jp
mov
xchg
cmp
jmp
push
and
loop
or
ins
mov
jb
test
mov
ret
or
mov
(bad)
(bad)
dec
pushf
mov
sub
pushf
std
nop
jne
arpl
clc
cmp
mov
lock
(bad)
jmp
add
lahf
push
pop
call
sub
jecxz
lahf
in
(bad)
(bad)
out
add
pop
xor
stos
dec
int
xchg
ret
(bad)
jg
lock
ret
call
or
jbe
jbe
xor
add
pop
mov
test
pop
mov
lds
out
fcmove
stos
leave
fisttp
jns
(bad)
(bad)
jmp
or
add
and
and
stc
and
js
push
scas
and
mov
add
mov
(bad)
jmp
cs
mov
pop
xor
pop
movs
add
out
sar
xor
sar
dec
aas
ins
dec
or
cmps
xchg
xchg
ret
sar
jg
maxps
inc
sub
scas
inc
sub
and
inc
in
inc
adc
dec
(bad)
(bad)
jmp
ss
dec
fstp
pop
mov
jo
shl
fcmovb
xor
imul
(bad)
call
lock
dec
cmp
arpl
loopne
or
mov
iret
lock
push
cld
pop
sti
mov
call
sbb
aam
test
xchg
xor
(bad)
call
aas
movs
inc
add
movs
push
jmp
out
mov
dec
jmp
fdiv
dec
call
sub
pop
rol
outs
pop
ss
(bad)
(bad)
call
sar
es
shr
sbb
jecxz
test
jo
pop
loopne
and
(bad)
(bad)
call
or
fstp
cmp
pop
aas
sbb
scas
cmc
leave
shl
outs
xor
push
repz
mov
fucomip
mov
repz
addr16
mov
or
fild
push
movs
test
xlat
rol
pop
xchg
(bad)
(bad)
call
sub
ds
int
mov
xchg
cmp
dec
ins
adc
pop
mov
js
cld
inc
ds
xor
mov
and
mov
mov
out
xor
pop
xlat
adc
(bad)
(bad)
(bad)
in
mov
adc
repz
dec
retf
int
dec
int
sub
mov
stc
rcl
sbb
js
cmp
and
push
fimul
aam
inc
movs
lods
dec
call
cld
call
push
(bad)
jmp
xor
fldenv
mov
(bad)
(bad)
(bad)
push
(bad)
int3
xchg
aad
cs
mov
pop
movs
int
add
or
rol
(bad)
pop
fild
das
jg
and
or
mov
test
outs
mov
pusha
inc
xchg
jo
pop
and
int3
lods
fidivr
cmp
cmc
(bad)
fisttp
sub
dec
lods
lods
inc
or
jbe
mov
lea
jmp
int
ret
iret
cmp
cmps
scas
push
or
dec
push
(bad)
pop
loopne
jns
add
mov
das
addr16
and
dec
pop
xchg
xchg
jmp
adc
frstor
cmps
sbb
int
es
or
test
lods
mov
stos
in
(bad)
fdivr
(bad)
(bad)
mov
sub
dec
inc
ret
adc
les
mov
into
adc
lock
sbb
jno
fstp
xor
cld
pop
lock
(bad)
mov
cwde
es
push
xor
cmp
xor
in
sahf
xchg
retf
retf
mov
out
and
jmp
jbe
mov
ficom
sub
call
inc
stos
int
or
pop
mov
xchg
imul
sbb
nop
test
ja
in
outs
mov
dec
cmc
push
rcr
pusha
stc
sub
(bad)
(bad)
(bad)
dec
mov
imul
mov
retf
mov
div
into
lds
dec
xchg
push
adc
mov
cmp
cmp
push
in
inc
pop
ins
mov
pusha
or
cmp
fst
retf
mov
add
sahf
and
rcr
pop
lods
(bad)
(bad)
(bad)
dec
mov
push
pop
or
retf
dec
sbb
push
pop
jbe
gs
das
sbb
(bad)
(bad)
(bad)
push
xchg
std
adc
and
mov
xor
outs
cmp
cs
xchg
adc
loop
stos
sbb
call
sbb
or
inc
bound
cmp
inc
mov
fcomp
(bad)
(bad)
(bad)
call
shl
(bad)
xchg
test
dec
cmps
xor
call
or
(bad)
(bad)
jmp
push
push
xchg
sub
add
push
add
dec
outs
cmp
hlt
ins
sar
mov
mov
adc
fwait
vmovlps
and
mov
(bad)
jg
shl
xchg
inc
xchg
push
arpl
dec
jbe
or
(bad)
hlt
jae
data16
adc
gs
add
push
in
loope
mov
out
das
sbb
dec
shl
(bad)
(bad)
(bad)
(bad)
in
std
push
iret
push
mov
mov
and
cdq
and
jmp
aas
rol
iret
(bad)
(bad)
(bad)
(bad)
fdivrp
jnp
cmp
outs
retf
mov
pop
mov
js
xor
rcr
stos
cmp
stc
push
inc
in
call
out
jae
int3
mov
sub
sub
push
lea
pop
xchg
ss
push
sti
or
sbb
xchg
cmp
push
xor
(bad)
fild
add
xchg
push
adc
adc
mov
cli
inc
inc
cwde
add
popa
xchg
lock
mov
and
dec
pop
mov
movs
jae
pushf
cmp
(bad)
retf
xchg
gs
bound
lods
push
data16
or
add
dec
loop
std
jmp
sahf
or
mov
(bad)
(bad)
inc
xlat
lea
test
inc
and
scas
jmp
cwde
test
lock
rcpps
cmps
rcl
push
xchg
lods
pop
loopne
push
cmps
pop
test
repnz
inc
adc
xchg
and
call
jmp
fmul
push
les
mov
out
xchg
pop
or
dec
xor
add
mov
adc
add
ja
pop
daa
cs
adc
pushf
and
aas
clc
dec
aas
and
daa
xor
push
xor
sub
movs
cli
mov
jp
adc
cmp
ins
sbb
dec
and
movs
dec
jmp
jg
adc
shl
imul
inc
or
outs
je
(bad)
sti
xor
je
sub
mov
shr
cmp
sub
popf
bound
pop
xchg
mov
bnd
(bad)
jg
jno
lock
test
cli
call
rcr
test
pushf
sbb
cwde
jnp
into
jbe
call
adc
and
or
call
popa
ins
or
or
add
xor
xor
push
movs
daa
lods
jne
dec
jg
cli
pop
add
stc
inc
neg
mov
cmp
int
(bad)
(bad)
mov
dec
push
enter
push
xchg
lock
dec
cld
inc
aam
cmp
ds
stc
inc
into
cmp
(bad)
fild
jne
cld
cmp
push
ror
jnp
pop
loope
repnz
push
jae
push
aam
bound
iret
stos
clc
js
mov
neg
call
loope
(bad)
in
loop
push
aas
sub
sahf
and
jne
adc
(bad)
xchg
inc
jl
sbb
lds
or
test
stos
out
sub
addr16
adc
adc
test
push
sub
jmp
and
(bad)
(bad)
in
dec
clc
fwait
jb
cld
push
xchg
jo
add
cmps
fucomi
mov
jp
outs
(bad)
push
pop
pop
call
mov
dec
repz
pop
scas
jg
aas
ss
js
test
xchg
sub
(bad)
mov
cdq
daa
push
mov
push
loope
mov
test
inc
push
dec
sar
(bad)
(bad)
jmp
adc
cdq
pop
jbe
mov
or
ror
out
in
sbb
test
mov
(bad)
mov
inc
jp
fsub
in
or
(bad)
repz
in
dec
pushf
mov
inc
ror
pop
xor
sbb
rcr
pop
and
jae
push
jns
push
lock
mov
push
vprotq
fnstenv
(bad)
(bad)
(bad)
dec
xchg
dec
mov
jg
mov
sbb
jge
dec
stc
out
lahf
adc
(bad)
push
(bad)
js
es
adc
in
or
sahf
stos
jbe
cmp
sbb
push
stc
iret
sbb
(bad)
mov
dec
xlat
inc
jge
(bad)
adc
push
jg
mov
mov
ror
(bad)
jmp
vmwrite
push
xor
int
mov
xor
test
aad
(bad)
inc
pop
push
xchg
je
mov
test
in
aaa
aaa
cld
mov
retf
push
inc
loop
daa
(bad)
(bad)
ins
fld
inc
and
je
fcmove
jmp
cld
pop
sub
xchg
mov
outs
call
dec
add
jmp
sub
loope
pop
jbe
pop
push
dec
cld
push
pop
fstp
inc
pop
iret
int
sti
repnz
(bad)
(bad)
jmp
repnz
(bad)
cld
lods
addr16
scas
ret
scas
out
pop
add
xchg
lods
inc
jb
or
das
clc
push
add
js
out
outs
dec
lock
popw
(bad)
call
in
and
push
add
out
mov
aas
or
popf
xchg
fcom
push
(bad)
loop
xchg
(bad)
aas
pop
cdq
dec
add
lock
leave
inc
popf
mov
pop
jbe
jnp
jp
sbb
(bad)
(bad)
(bad)
dec
ds
ss
scas
adc
mov
sub
mov
rol
(bad)
(bad)
dec
lods
push
in
cmp
std
cmc
clc
fcomip
(bad)
dec
(bad)
sub
ror
icebp
mov
pop
iret
inc
inc
scas
(bad)
(bad)
(bad)
(bad)
cmp
xchg
cmps
out
shr
fnstsw
inc
sub
imul
sbb
std
hlt
(bad)
(bad)
(bad)
push
dec
push
mov
lds
mov
stos
sti
mov
inc
test
inc
int3
inc
mov
bound
adc
clc
aam
pop
inc
mov
jmp
ss
loope
ror
inc
jle
out
push
cmc
jne
pusha
nop
(bad)
(bad)
(bad)
call
mov
div
dec
pop
es
mov
cmp
imul
out
stos
mov
xor
mov
enter
call
pop
cwde
mov
jl
scas
xor
jmp
pop
cmp
fcomp
jmp
sbb
in
call
sahf
ins
dec
clc
rol
sar
xchg
mov
daa
dec
shl
lea
sbb
js
cmp
xchg
mov
(bad)
inc
mov
retf
cmps
fst
arpl
(bad)
das
push
jmp
mov
jle
inc
xor
ss
jb
shl
dec
(bad)
imul
icebp
pop
ja
mul
adc
jb
js
mov
nop
push
pop
arpl
(bad)
(bad)
ds
das
xchg
retf
ins
lea
and
pop
pop
push
pop
dec
jmp
out
es
(bad)
(bad)
(bad)
fmul
jno
mov
sbb
pop
rcr
imul
popa
dec
in
jg
aas
popf
(bad)
(bad)
(bad)
dec
cmc
pop
dec
mov
popa
mov
xor
jmp
test
stc
mov
xlat
cmps
inc
ins
pop
dec
nop
fnstcw
test
mov
scas
mov
(bad)
(bad)
(bad)
sti
push
ret
sbb
call
mov
ret
dec
(bad)
(bad)
jmp
jmp
jno
mov
xchg
stc
sbb
lock
in
cmps
jns
jg
not
std
fsubr
mov
test
(bad)
fild
(bad)
(bad)
pop
aas
iret
inc
mov
in
aas
rcr
in
jg
(bad)
mov
jo
sub
int3
movs
(bad)
out
mov
jmp
cmp
(bad)
(bad)
(bad)
jmp
outs
push
sar
xor
out
pusha
mov
jbe
jg
in
neg
mov
(bad)
out
xor
(bad)
fadd
pop
jno
push
pop
scas
sbb
push
mov
cmp
fisttp
sub
lock
(bad)
(bad)
call
add
sub
xor
sub
fldcw
pop
test
xchg
jne
cmps
mov
jmp
loopne
scas
cmps
(bad)
and
fisub
adc
pop
cmp
out
jle
(bad)
jg
mov
mov
outs
fist
ja
call
mov
repnz
in
(bad)
(bad)
mov
pop
cld
cmp
lahf
imul
fcmovnu
in
sub
push
mov
sahf
clc
in
or
sar
(bad)
inc
ds
adc
inc
or
dec
and
mov
adc
(bad)
call
cld
call
enter
lahf
sub
sar
sbb
data16
bound
inc
and
(bad)
(bad)
(bad)
call
int3
stos
cli
test
aad
adc
ret
push
sub
xchg
mov
mov
movs
hlt
fsub
xchg
(bad)
sbb
std
(bad)
stc
ja
aam
mov
(bad)
(bad)
(bad)
push
rcr
stos
fwait
sub
cs
xor
shl
push
test
jmp
call
clc
cmp
sahf
xchg
mov
fs
sbb
xor
pop
jmp
cwde
mov
ins
pop
cmp
es
jg
mov
cld
dec
pushf
retf
stos
inc
push
dec
cdq
xchg
adc
cmc
(bad)
jmp
inc
sub
lds
pop
(bad)
mov
test
xor
cld
(bad)
out
cli
cdq
mov
inc
aad
dec
sub
lds
repnz
and
scas
(bad)
(bad)
call
cmp
pop
jnp
ret
es
and
mov
in
xchg
test
and
dec
jle
inc
inc
(bad)
call
cld
dec
test
cld
cmp
mov
mov
push
pusha
inc
jo
in
mov
inc
(bad)
mov
sbb
ror
addr16
mov
std
adc
adc
retf
cmps
mov
inc
cmp
pop
pop
hlt
popa
cld
loope
dec
and
mov
jecxz
add
xchg
sbb
(bad)
(bad)
(bad)
(bad)
out
jge
mov
ror
pop
jecxz
arpl
out
xchg
imul
sub
push
xchg
or
movs
(bad)
(bad)
(bad)
dec
or
dec
jecxz
jmp
pop
pop
dec
cli
cmp
cmp
sar
test
jmpw
(bad)
jg
sbb
mov
and
test
call
dec
sar
(bad)
(bad)
(bad)
jmp
push
dec
add
sub
aam
pushf
sbb
(bad)
imul
xor
push
cmp
dec
dec
xchg
(bad)
sub
lods
cmp
jge
push
adc
or
(bad)
(bad)
jmp
xchg
push
sbb
fwait
sub
add
in
test
aaa
cbw
jg
repnz
sbb
adc
movs
xchg
rol
jmp
shl
call
mov
dec
(bad)
mov
(bad)
sub
mov
jmp
lods
sub
lods
out
sbb
fsub
call
imul
jbe
adc
aam
add
(bad)
pop
test
jmp
or
xor
scas
jmp
dec
out
jnp
xor
mov
mov
fwait
xor
shr
cmps
sti
sbb
dec
mov
push
inc
push
xchg
mov
(bad)
push
pop
ror
(bad)
pop
outs
rcr
mov
mov
into
ss
sub
shl
ins
mov
shl
call
pop
test
sub
jle
sub
ja
imul
shl
(bad)
fmul
(bad)
sub
scas
mov
dec
cmps
imul
xchg
dec
or
test
adc
jbe
jnp
(bad)
out
fbstp
shl
(bad)
jg
xchg
sub
jg
sub
sbb
or
cs
call
and
loop
mov
mov
jmp
ins
mov
arpl
addr16
add
dec
out
cli
dec
ins
xlat
dec
jns
cmps
outs
clc
mov
int
and
data16
rcr
fistp
mov
sub
(bad)
(bad)
(bad)
jg
lods
arpl
mov
push
push
popa
adc
out
xchg
add
(bad)
(bad)
(bad)
(bad)
fistp
inc
inc
jp
mov
mov
retf
ret
ss
out
mov
lea
push
fldenv
jbe
add
inc
test
movs
xchg
int3
xor
ins
sahf
int
aad
jmp
fwait
push
stc
int
push
add
mov
xor
(bad)
(bad)
jmp
mov
cli
pop
dec
xchg
dec
sahf
int3
pop
or
aaa
pop
adc
jmp
or
inc
hlt
ror
or
jmp
jp
cld
jecxz
movs
imul
in
sbb
(bad)
(bad)
call
push
icebp
adc
pop
jb
aas
inc
dec
scas
lock
or
add
pop
movs
cmp
movs
fwait
(bad)
(bad)
(bad)
inc
push
push
add
loope
lea
loope
xchg
sub
push
retf
add
inc
xchg
sub
(bad)
fcomip
call
add
out
cmp
adc
stos
movs
sub
sbb
(bad)
call
fisttp
or
push
push
dec
push
adc
or
in
xchg
xchg
movs
dec
mov
(bad)
(bad)
dec
push
pop
jb
mov
retf
cmc
pop
add
mov
mov
lods
ja
add
(bad)
(bad)
(bad)
jmp
xor
inc
add
and
cwde
xchg
test
retf
adc
shl
cmps
(bad)
sub
mov
pop
hlt
(bad)
call
mov
cmps
mov
pop
addr16
cmp
test
pop
ins
or
loope
(bad)
(bad)
jmp
and
inc
dec
iret
mov
jp
gs
cli
int3
pop
fstp
popa
cmp
aaa
xor
mov
sub
mov
fs
(bad)
(bad)
(bad)
fild
jmp
pop
sub
mov
das
jno
or
jmp
dec
aaa
pop
jp
fcomip
cmps
in
in
cmps
in
xchg
retf
lock
sub
cdq
jb
(bad)
(bad)
(bad)
jmp
rol
inc
and
or
jmp
dec
or
mov
sbb
push
inc
xchg
xchg
bound
add
mov
mov
js
mov
push
ret
hlt
(bad)
(bad)
(bad)
dec
jp
xor
aam
or
and
xchg
in
xor
pusha
jecxz
cmp
(bad)
jg
jmp
pushf
bound
jge
rcl
rcl
stc
test
aaa
ss
call
cld
pop
pop
scas
adc
jmp
test
xor
xchg
cmp
xor
jbe
mov
out
push
retf
ror
dec
or
int
inc
sti
(bad)
jmp
adc
fs
mov
xor
loopne
ret
jns
int3
cmps
sub
jmp
clc
dec
xor
fst
xchg
jno
pop
fs
into
add
jo
sti
jbe
loope
add
inc
in
mov
pop
test
dec
call
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
es
inc
xchg
je
pcmpgtb
pop
add
call
cwde
or
stc
add
add
pusha
pop
call
(bad)
ds
cld
xor
jmp
pop
or
ins
mov
ds
in
push
push
mov
repz
(bad)
(bad)
jmp
enter
mov
cli
jmp
push
stos
mov
cmp
nop
push
cmp
(bad)
(bad)
call
sub
imul
in
push
and
pop
retf
std
nop
xor
sub
pusha
sbb
(bad)
(bad)
(bad)
jp
fucomp
mov
pop
leave
pop
test
add
dec
jmp
lea
adc
(bad)
(bad)
(bad)
inc
xchg
jge
cmc
jne
jg
ss
int3
loope
(bad)
fdiv
repz
into
pop
dec
clc
bound
loope
(bad)
(bad)
(bad)
jmp
xchg
ins
call
xor
lods
cmovae
add
test
(bad)
(bad)
jmp
rol
rcl
adc
(bad)
(bad)
push
mov
jp
add
loop
nop
call
loope
sub
adc
hlt
pop
lea
jmp
jge
push
ins
(bad)
(bad)
(bad)
dec
mov
ss
scas
aaa
mov
cmp
pop
out
stos
test
ds
(bad)
jmp
mov
aas
popf
fidivr
mov
xor
sub
ins
pop
mov
push
test
fisttp
test
xor
sub
xchg
iret
pushf
pop
ret
ja
sbb
jno
adc
loopne
jmp
mov
cmc
sub
inc
sbb
mov
movs
jae
dec
ret
mov
mov
std
popa
or
add
mov
push
push
pop
rcl
pop
xchg
dec
mov
outs
(bad)
inc
fwait
inc
outs
dec
cli
inc
lahf
movs
dec
or
outs
xor
xchg
pop
add
dec
in
(bad)
(bad)
(bad)
inc
jmp
jmp
out
ds
pop
jae
push
mov
in
and
scas
sbb
dec
cmp
popa
loope
mov
fmul
cmp
push
xor
scas
mov
adc
jg
(bad)
jmp
in
(bad)
(bad)
mov
(bad)
mov
aas
imul
xchg
pop
lods
mov
xor
pop
outs
sar
jbe
push
fnstenv
out
adc
cld
lods
jmp
loopne
and
(bad)
xchg
jo
xchg
pop
mov
adc
xchg
cmps
and
cmp
movs
inc
add
aas
das
jp
vmovups
pop
in
(bad)
(bad)
jmp
xor
data16
mov
into
dec
into
adc
dec
lods
loope
fwait
mov
iret
shl
movs
(bad)
(bad)
(bad)
dec
xor
imul
mov
cmp
jbe
jb
mov
shr
int3
push
inc
and
(bad)
(bad)
(bad)
inc
cmp
inc
sti
(bad)
mov
lds
in
call
pop
mov
mov
ucomiss
(bad)
(bad)
(bad)
mov
mov
cmp
(bad)
mov
pop
sbb
lds
dec
loope
pop
(bad)
(bad)
(bad)
call
cli
loop
bound
inc
or
or
xchg
xchg
nop
sub
or
push
pusha
out
mov
inc
retf
(bad)
dec
jb
scas
sub
loope
ficomp
pop
mov
lock
pop
sti
push
push
pop
es
mov
pusha
push
in
inc
stos
gs
aam
xor
mov
clc
mov
xlat
mov
jmp
(bad)
icebp
add
cld
mov
stos
xor
adc
sbb
leave
mov
(bad)
(bad)
(bad)
fdiv
xchg
sub
mov
pop
sub
std
icebp
ret
jge
imul
jb
cmp
jl
or
scas
ds
jl
loope
add
jle
icebp
(bad)
(bad)
(bad)
push
or
test
pop
cmps
arpl
mov
sub
add
dec
adc
or
push
adc
xchg
sahf
(bad)
icebp
(bad)
call
iret
xor
xor
call
pop
je
fistp
bound
cs
jb
push
xchg
fwait
mov
push
mov
call
inc
jl
in
mov
dec
xor
push
xor
mov
lods
sub
(bad)
(bad)
call
imul
mov
xchg
ins
sub
ret
push
and
or
enter
mov
stos
dec
inc
leave
imul
mov
jb
test
(bad)
(bad)
(bad)
cmp
fnstenv
mov
sub
add
mov
xadd
ret
mov
xchg
ins
lds
(bad)
call
(bad)
push
repnz
or
cld
aam
ret
dec
popa
adc
adc
(bad)
jmp
sub
outs
out
ins
stos
leave
sub
or
jge
aas
pop
out
in
je
cmps
inc
sub
add
mov
mov
(bad)
(bad)
(bad)
fisttp
push
mov
mov
js
out
mov
popa
pop
stos
pushf
mov
mov
dec
retf
dec
nop
mov
es
pushf
stos
mov
adc
es
mov
cmp
dec
pop
js
adc
sub
inc
xchg
cmp
push
dec
sbb
call
cld
(bad)
fstp
inc
popf
mov
cmp
xlat
(bad)
call
mov
(bad)
(bad)
jmp
pop
retf
jecxz
sbb
in
ret
retf
push
es
out
aad
dec
ret
mov
inc
sub
add
(bad)
jg
dec
adc
scas
xchg
test
mov
cs
adc
fcos
add
icebp
lock
xchg
add
pop
jnp
dec
arpl
and
xor
(bad)
(bad)
(bad)
mov
das
xor
daa
jmp
dec
popa
xchg
mov
sub
pop
dec
ror
(bad)
adc
jge
pop
cmp
test
xchg
xor
mov
(bad)
mov
sub
ds
(bad)
aad
sub
xchg
jmp
rcl
out
cli
(bad)
jmp
fldcw
lods
in
outs
xor
xor
xor
in
mov
call
mov
test
xchg
mov
dec
fstp
pusha
fld
mov
daa
test
inc
pop
pushf
xchg
xchg
(bad)
(bad)
(bad)
(bad)
jmp
pop
jl
cmc
ins
mov
test
retf
je
mov
xchg
movs
(bad)
(bad)
(bad)
(bad)
js
and
das
xchg
xchg
test
and
fldenv
iret
adc
loopne
and
(bad)
(bad)
dec
adc
movs
mov
ins
test
int
popa
or
cmp
icebp
or
sub
add
test
int
mov
jmp
dec
clc
cmc
sbb
adc
pop
mov
stc
rol
cmp
cld
jo
(bad)
out
setle
xor
test
das
jo
xchg
sahf
outs
(bad)
jne
xchg
jmp
movs
jmp
push
(bad)
jmp
cmp
std
cdq
mov
cli
xchg
jg
cwde
aam
jbe
jmp
loopne
and
sbb
push
xor
mov
lock
(bad)
jg
add
sbb
push
aas
call
mov
or
xlat
jmp
sub
(bad)
(bad)
push
mov
pushf
fst
stos
adc
mov
mov
xor
cs
sbb
mov
or
cwde
(bad)
ret
jg
hlt
jmp
pusha
stc
pop
loop
push
push
sbb
stos
and
(bad)
call
mov
retf
inc
fsub
cmp
lock
cld
mov
pop
ret
out
mov
sbb
ret
push
push
(bad)
fild
pop
pop
sti
fnstcw
std
imul
xchg
mov
pop
mov
(bad)
jg
out
jae
fild
mov
aad
jne
aas
hlt
outs
arpl
stos
jne
scas
add
(bad)
(bad)
(bad)
push
repz
cmc
mov
pop
in
popa
xchg
stos
or
out
xchg
or
sub
call
out
mov
cli
cld
ja
mov
movs
test
mov
int3
sahf
mov
jmp
cdq
repz
into
xor
inc
outs
jnp
pop
push
ds
push
mov
pop
fisub
(bad)
(bad)
(bad)
js
aam
pop
daa
in
repz
cmp
push
pusha
add
sub
mov
jl
int
cmp
jno
out
in
mov
(bad)
mov
(bad)
cdq
daa
mov
sbb
stos
xor
mov
fcmovnbe
xchg
scas
sbb
loope
ja
(bad)
inc
fdivr
jb
stos
in
mov
pop
and
xchg
icebp
dec
outs
jmp
dec
push
mov
xlat
push
cmp
ds
xor
sar
jbe
sbb
inc
xor
xor
(bad)
(bad)
jmp
fcomip
sti
sub
fistp
sub
js
xor
xchg
jge
push
(bad)
(bad)
(bad)
(bad)
in
out
xchg
cmp
cmp
cmp
(bad)
pop
cmp
xor
clc
hlt
mov
fs
(bad)
(bad)
(bad)
(bad)
inc
test
xchg
and
or
pop
sysret
rcr
fdivr
xor
daa
or
iret
(bad)
(bad)
(bad)
dec
je
xchg
sbb
inc
or
mov
test
jae
mov
loope
mov
ins
jmp
inc
adc
xor
jmp
push
enter
adc
or
mov
or
loopne
ss
mov
out
mov
pop
icebp
(bad)
push
loope
xor
(bad)
push
pop
jmp
push
retf
icebp
fcom
cld
cmp
call
les
push
test
jp
jmp
dec
(bad)
(bad)
push
xchg
stc
repz
push
(bad)
(bad)
mov
rcl
sbb
sbb
outs
clc
cmp
sar
int3
es
mov
loopne
cmp
stc
(bad)
out
cli
sbb
jmp
loop
jns
call
jmp
(bad)
jmp
fisubr
add
adc
lods
bound
mov
retf
jno
(bad)
(bad)
jmp
shl
out
adc
out
into
jno
neg
loop
sbb
mov
pop
or
loop
dec
and
mov
pusha
idiv
adc
loopne
mov
(bad)
(bad)
jl
cmps
ss
out
inc
xor
fnstsw
sub
push
jmp
xlat
into
mov
out
call
rcr
sti
cmp
int3
add
push
adc
lea
fist
add
cmp
cmps
fs
pop
mov
test
cmp
mov
mov
call
xchg
aad
movs
das
call
test
paddsb
(bad)
(bad)
call
cmp
mov
mov
push
fsub
cmp
push
fld
fdivr
pop
mov
(bad)
(bad)
call
jne
sbb
aam
mov
sahf
cmp
xchg
and
mov
lds
fs
push
push
leave
jge
je
mov
aas
test
clc
(bad)
aam
dec
pop
mov
inc
cli
lds
(bad)
jmp
outs
cmp
iret
pop
xor
jbe
add
(bad)
sti
clc
inc
push
jecxz
pop
shr
clc
(bad)
ffreep
retf
loop
loopne
inc
loopne
(bad)
xchg
pop
dec
lahf
repnz
(bad)
mov
sub
leave
mov
aas
mov
(bad)
(bad)
(bad)
dec
mov
(bad)
mov
stc
bound
inc
jecxz
mov
and
cmc
mov
cli
leave
pop
test
mov
push
xlat
mov
fiadd
fcomp
std
adc
mov
js
data16
iret
sbb
in
test
xchg
mov
jno
xchg
stc
jns
ret
dec
jmp
outs
into
ficomp
jne
cld
inc
mov
clc
movs
(bad)
(bad)
(bad)
mov
ret
sbb
in
xchg
shr
mov
cs
cmp
pop
(bad)
fcomip
dec
or
mov
fsubr
dec
jmp
mov
or
hlt
push
(bad)
(bad)
(bad)
call
and
mov
sbb
cs
inc
inc
push
bound
push
inc
jp
pop
xor
jge
add
(bad)
(bad)
dec
add
inc
jge
sar
ins
xchg
movs
jg
fisub
fs
adc
jge
aad
lock
sbb
pop
ins
(bad)
repnz
(bad)
(bad)
fild
or
call
pushf
mov
inc
push
mov
call
inc
jge
mov
jge
fs
mov
adc
cwde
nop
or
pop
mov
test
loopne
loop
sar
test
or
fadd
or
mov
push
idiv
(bad)
push
data16
test
add
mov
cmp
jecxz
mov
bound
or
(bad)
(bad)
dec
or
dec
and
sub
adc
lods
adc
sub
or
ss
call
dec
rcl
xor
pop
lods
imul
or
rcr
fs
dec
xchg
pop
adc
mov
xchg
cmp
xchg
addr16
mov
mov
fld
cmp
cmp
mov
mov
inc
add
push
movs
mov
cmp
push
dec
js
stos
lock
call
call
lahf
xor
cmp
jle
xor
int3
xchg
adc
pop
inc
inc
pop
(bad)
(bad)
(bad)
inc
jg
out
dec
xchg
sbb
das
in
call
(bad)
je
(bad)
xchg
add
ror
jne
push
cld
inc
mov
dec
mov
imul
aad
ins
scas
sti
popf
mov
sahf
mov
jmp
idiv
test
movs
aaa
sti
push
xchg
in
ret
fdiv
ror
repnz
sar
stos
sub
xchg
inc
cld
test
aad
neg
jmp
and
dec
js
test
and
mov
cmc
jecxz
lahf
lahf
rcr
sub
mov
jp
(bad)
jg
jne
cld
(bad)
push
and
mov
and
jo
cld
outs
jg
add
xchg
mov
movs
int
dec
sbb
addr16
sbb
(bad)
(bad)
fbld
fwait
(bad)
je
fnsave
mov
jmp
fwait
aas
jmp
xor
je
stc
xor
(bad)
jge
sub
jle
sub
outs
sti
int
ja
sahf
xlat
xchg
mov
fdiv
call
sbb
test
add
in
and
fisubr
(bad)
cmc
sar
push
std
push
xor
(bad)
test
cmp
inc
test
pop
adc
scas
into
pop
test
test
and
jmp
hlt
popa
es
mov
jp
pop
call
pop
clc
sub
(bad)
(bad)
jmp
ret
mov
in
mov
les
into
inc
std
fs
(bad)
(bad)
push
movs
inc
push
arpl
call
test
mov
inc
dec
or
(bad)
(bad)
jmp
cli
adc
xchg
push
adc
test
or
retf
mov
mov
jmp
fwait
sbb
mov
sub
mov
movs
and
push
test
mov
push
push
sbb
push
imul
(bad)
(bad)
call
inc
push
stos
fldcw
dec
lahf
xor
loopne
inc
test
sub
sbb
pop
movs
pop
(bad)
pop
out
icebp
frstor
or
sbb
cmp
inc
mov
jne
sbb
idiv
jmp
clc
cmps
pop
push
(bad)
fcomp
jnp
out
cwde
retf
jp
fisub
(bad)
call
arpl
mov
popf
les
cli
into
jg
cdq
push
pop
hlt
(bad)
jmp
fdivr
jecxz
shl
pop
mov
push
xchg
in
or
push
pushf
inc
push
push
sar
(bad)
(bad)
fst
ins
stc
mov
mov
in
lock
adc
push
mov
retf
aas
out
(bad)
(bad)
jmp
mov
test
sub
push
xchg
mov
sub
jae
popf
(bad)
(bad)
(bad)
(bad)
call
mov
inc
mov
jecxz
stos
shl
mov
push
inc
lahf
mov
div
outs
(bad)
(bad)
dec
aam
and
dec
int3
ss
nop
sub
sub
int3
inc
movs
push
xchg
cmp
test
and
call
in
xchg
inc
xor
sub
pop
ja
mov
jae
mov
push
(bad)
sub
fs
addr16
(bad)
cmp
fisub
stos
cmp
ret
repnz
xchg
mov
daa
push
inc
call
and
(bad)
(bad)
aas
cmp
int
inc
or
movs
xor
mov
movs
nop
movs
ret
push
sub
cmp
cmp
mov
adc
push
das
push
mov
stc
ret
das
xchg
or
mov
jg
(bad)
call
adc
and
mov
call
enter
(bad)
call
cmp
xchg
xchg
int3
push
add
aam
adc
cmc
(bad)
(bad)
jmp
lds
xor
dec
cmp
dec
mov
aad
mov
pop
lods
cdq
mov
push
icebp
ret
sbb
dec
mov
outs
adc
cmp
clc
sbb
or
xchg
lods
shr
dec
or
popf
mov
ret
fistp
xchg
push
(bad)
cmc
jmp
pop
comiss
sub
outs
push
add
iret
push
loope
xchg
cmp
pop
inc
call
sub
(bad)
call
int3
dec
jo
sbb
mov
and
mov
dec
jecxz
push
push
push
mov
cmp
push
cwde
mov
adc
outs
clc
mov
mov
add
jmp
(bad)
(bad)
(bad)
cmp
cmc
adc
cmp
mov
into
sub
xchg
inc
test
(bad)
(bad)
(bad)
(bad)
cli
push
push
movs
cmp
shr
pop
(bad)
jae
mov
sub
cmp
xchg
push
(bad)
call
pop
xchg
or
mov
or
mov
stos
cmc
push
(bad)
(bad)
(bad)
fstp
mov
and
cmp
jmp
repz
mov
scas
mov
rcl
das
sbb
mov
(bad)
(bad)
call
adc
pop
or
adc
and
xchg
or
and
sbb
jmp
sub
fcmovb
inc
xor
pop
aad
fidiv
xchg
sbb
dec
jae
rcl
into
loop
dec
sbb
outs
mov
xchg
cmps
adc
inc
mov
(bad)
(bad)
(bad)
inc
mov
pop
icebp
int3
push
jmp
pop
mov
xchg
dec
add
sub
(bad)
(bad)
jmp
or
add
or
scas
and
daa
xchg
sbb
or
push
fsub
cmc
out
jg
les
cmp
xor
pop
or
and
pop
(bad)
call
loopne
push
jmp
pop
xor
mov
or
lods
cmp
(bad)
(bad)
jmp
cmps
test
cmp
xchg
and
jmp
push
push
sbb
push
mov
(bad)
(bad)
(bad)
out
xchg
call
fisub
(bad)
jge
popa
and
ja
inc
jnp
push
fadd
add
jmp
add
add
sbb
imul
xchg
jmp
xchg
(bad)
sub
dec
js
dec
(bad)
sub
call
pop
lea
js
sub
push
inc
sbb
out
mov
les
mov
in
mov
(bad)
call
adc
xor
dec
dec
js
ret
and
sub
mov
jmp
mov
(bad)
std
(bad)
(bad)
jmp
not
rol
mov
pusha
cli
add
out
jae
(bad)
(bad)
call
imul
mov
mov
jecxz
or
inc
cmp
mov
scas
hlt
push
stos
pop
jle
(bad)
neg
setl
in
lods
js
jne
sbb
xor
call
and
ins
pop
mov
ins
mov
int3
sub
scas
gs
sub
ret
jae
sub
dec
ja
inc
stos
rcr
adc
scas
push
xchg
and
jns
jecxz
(bad)
cmp
cwde
icebp
adc
inc
enter
jnp
test
aaa
mov
jmp
(bad)
dec
and
aad
xor
inc
fs
push
int3
adc
sbb
sbb
mov
scas
clc
jmp
ins
sub
dec
inc
in
adc
hlt
sub
push
in
push
pop
dec
cmp
in
(bad)
(bad)
(bad)
(bad)
jmp
popf
xchg
and
mov
aad
pop
ret
sbb
adc
push
lods
fistp
cmp
mov
mov
dec
fidivr
(bad)
lahf
les
data16
cli
mov
or
(bad)
jmp
scas
clc
rcl
mov
xor
gs
inc
xchg
xor
or
imul
(bad)
xchg
mov
jmp
ins
sti
sbb
add
movs
dec
xchg
scas
and
mov
inc
xchg
test
mov
mul
imul
jbe
ins
pop
retf
pop
sar
lds
(bad)
(bad)
call
call
das
xchg
into
xor
sbb
bound
pop
cmp
jae
repz
sti
pop
std
(bad)
fistp
mov
mov
dec
test
int3
dec
jle
jo
daa
mov
and
(bad)
jg
lods
mov
in
pop
out
sub
sub
in
(bad)
int3
jb
pop
stos
in
iret
inc
(bad)
(bad)
call
sub
push
into
dec
shl
dec
sub
in
sar
push
push
imul
jecxz
(bad)
jl
mov
or
push
dec
push
cld
dec
pop
pop
test
fiadd
and
inc
test
in
enter
(bad)
(bad)
(bad)
dec
mov
lahf
mov
ja
fmulp
and
xor
pop
inc
push
adc
pop
inc
clc
(bad)
(bad)
(bad)
sti
popa
adc
leave
cld
push
sar
les
lods
inc
jg
clc
add
sahf
jns
lock
enter
push
out
retf
test
mov
dec
pop
xor
in
std
aad
test
je
cwde
nop
loope
jbe
inc
pop
movs
je
in
and
add
(bad)
(bad)
(bad)
jmp
dec
pop
test
imul
in
pop
pop
pop
iret
addr16
lahf
movs
aaa
dec
test
mov
call
imul
cmps
jbe
or
mov
and
cmp
mov
(bad)
(bad)
push
or
add
and
push
or
movs
out
add
idiv
pop
aad
(bad)
(bad)
call
and
movs
hlt
inc
inc
mov
and
arpl
cmps
mov
inc
fild
or
fnstcw
ins
mov
(bad)
out
clc
push
mov
movs
lods
fldenv
sub
ss
es
int3
dec
stos
(bad)
ins
fdivr
(bad)
(bad)
dec
mov
leave
cli
sub
and
dec
xchg
sub
leave
mov
shr
pop
(bad)
(bad)
(bad)
jmp
push
adc
outs
and
pop
jnp
out
push
xchg
or
ins
push
dec
iret
adc
pop
retf
ret
dec
aaa
(bad)
sbb
sub
jg
and
mov
add
push
inc
movs
mov
ss
fistp
jmp
xlat
xor
xchg
aad
sub
xchg
into
aaa
neg
jnp
(bad)
cs
(bad)
(bad)
dec
and
push
cdq
repnz
lods
movs
cmps
aam
retf
shr
push
bound
mov
ss
pop
mov
jmp
in
and
cld
rcr
or
jecxz
in
in
cwde
movs
xor
(bad)
call
out
add
xor
add
les
repnz
cmp
push
out
fcos
(bad)
mov
test
jge
popa
mov
sbb
sub
(bad)
(bad)
(bad)
call
add
sub
add
popf
stos
jnp
cld
mov
adc
dec
(bad)
jmp
jnp
adc
pop
arpl
mov
pop
idiv
dec
mov
inc
or
(bad)
(bad)
call
jno
scas
sub
xchg
ror
pushw
mov
rcl
aad
lock
inc
inc
cs
inc
jl
dec
mov
(bad)
into
cmp
icebp
cmp
push
xor
ins
lock
jmp
jl
xchg
and
fiadd
mov
into
pop
mov
cmps
xor
(bad)
(bad)
(bad)
(bad)
fmul
jmp
sbb
mov
push
xchg
stos
pop
ins
mov
add
(bad)
(bad)
fcomip
push
and
bound
scas
add
mov
call
scas
jg
(bad)
push
out
cmps
pop
xchg
mov
in
jg
loop
pusha
(bad)
int3
mov
jmp
mov
sar
enter
sbb
jne
inc
es
call
xchg
or
lock
data16
push
or
and
lea
outs
sub
mov
push
dec
mov
dec
xchg
mov
fs
sbb
mov
in
lahf
xor
cli
push
(bad)
(bad)
(bad)
inc
dec
in
dec
inc
pop
dec
aam
sbb
push
push
and
outs
stc
pop
add
add
xor
adc
and
mov
adc
jns
mov
sub
int
xor
mov
sub
sbb
retf
(bad)
(bad)
(bad)
call
cmp
and
push
hlt
sbb
or
sub
je
fdecstp
push
rcr
inc
mov
(bad)
(bad)
jmp
lods
mov
push
mov
dec
cmps
fistp
sub
call
pop
pop
sub
push
and
loopne
sub
fisub
std
mov
push
xor
sub
xor
inc
out
and
(bad)
jg
xor
neg
mov
dec
out
mov
adc
(bad)
(bad)
(bad)
call
mov
fucomip
sub
clc
pop
xlat
arpl
xor
outs
repnz
lock
(bad)
(bad)
fbld
hlt
cdq
fild
(bad)
(bad)
stc
adc
out
xchg
pop
cmp
sti
dec
and
pop
cmc
fdivr
sti
(bad)
call
fwait
cld
mov
retf
jl
std
cmps
nop
jmp
cmp
fild
into
and
arpl
mov
mov
pop
dec
popf
mul
xchg
dec
out
stc
inc
das
xchg
pop
loopne
pop
(bad)
push
sti
sbb
fnstcw
inc
pop
ret
mov
aas
scas
(bad)
sar
inc
lock
aas
pop
xor
pop
enter
into
(bad)
(bad)
call
xor
rcl
xchg
dec
inc
xchg
cmp
jmp
push
out
aam
inc
adc
pop
mov
(bad)
(bad)
(bad)
jmp
mov
pop
popf
arpl
out
lock
mov
test
mov
retf
(bad)
(bad)
(bad)
call
mov
cmp
xor
or
popf
mov
ja
(bad)
dec
jo
or
call
iret
add
sub
jge
imul
jle
xlat
dec
sbb
sub
mov
ret
mov
pushf
jne
sbb
adc
xor
or
test
sbb
or
loop
dec
call
aaa
xor
lock
(bad)
repz
out
dec
mov
not
(bad)
jle
cmp
(bad)
aas
jne
mov
dec
neg
repnz
(bad)
dec
pushf
imul
arpl
pop
jp
out
aam
cli
loopne
add
(bad)
fstp
hlt
outs
pop
xchg
sub
int
inc
out
jno
sub
jl
cld
std
(bad)
(bad)
jmp
xor
loope
ror
stc
jecxz
push
inc
sbb
xchg
xchg
adc
jbe
add
mov
push
in
lods
imul
jge
out
pop
je
pop
(bad)
(bad)
(bad)
cmp
sar
xor
sub
xor
sub
pop
push
add
int3
inc
shr
inc
add
mov
dec
pushf
or
add
cld
out
xor
xor
call
(bad)
je
stc
jnp
arpl
cmc
(bad)
pop
hlt
(bad)
(bad)
in
pcmpgtb
(bad)
xchg
fisubr
fdiv
aas
in
cmp
clc
add
dec
pop
lods
mov
jo
leave
aas
fcmovnbe
jl
cs
(bad)
out
out
sti
xchg
mov
pop
pop
cwde
jg
(bad)
jmp
mov
loope
xchg
ror
xchg
leave
fisub
lods
loop
jp
popa
sbb
(bad)
(bad)
call
iret
mov
or
pop
xchg
push
mov
call
xchg
in
(bad)
(bad)
(bad)
dec
mov
pop
sti
push
cli
sti
lods
mov
retf
stc
gs
(bad)
out
js
cmp
addr16
inc
cld
outs
inc
cmp
(bad)
ja
mov
loopne
daa
dec
outs
ret
(bad)
or
outs
js
inc
inc
call
clc
(bad)
ins
push
out
clc
jmp
call
hlt
mov
js
mov
and
or
lahf
(bad)
call
(bad)
(bad)
aas
bound
xlat
(bad)
fist
sbb
cmp
push
test
(bad)
loopne
repnz
push
aaa
adc
jg
mov
popa
mov
stos
mov
out
popf
(bad)
into
popf
rcr
lock
push
or
pop
icebp
mov
push
ss
mov
jecxz
pushf
pop
(bad)
dec
cld
nop
dec
(bad)
call
out
sub
xchg
mov
in
(bad)
or
and
sbb
(bad)
call
mov
lock
data16
out
mov
push
repz
mov
(bad)
jmp
ins
or
cmp
pop
sub
test
xlat
addr16
clc
inc
inc
fnstenv
leave
aam
mov
outs
xor
jp
mov
aas
xchg
ins
jg
push
ja
clc
(bad)
mov
imul
outs
adc
or
pop
cmp
neg
sub
ins
dec
fcomp
fisttp
mov
(bad)
(bad)
inc
fisubr
jg
dec
in
and
jmp
ror
inc
scas
out
fwait
cmc
pop
daa
in
das
push
(bad)
(bad)
fstp
call
icebp
pop
repnz
add
or
je
sbb
jge
push
mov
scas
cmc
jl
xor
jno
sub
(bad)
sub
adc
jmp
mov
js
jae
not
mov
inc
ins
mov
repz
fdiv
mov
fs
inc
jg
(bad)
push
sbb
xchg
dec
add
stc
cmp
pop
push
mov
loop
(bad)
(bad)
(bad)
fild
dec
test
mov
fxch
jg
fiadd
push
and
cmps
pop
loopne
gs
mov
pop
hlt
jmp
push
std
dec
fisub
mov
sub
sub
in
(bad)
(bad)
mov
push
adc
mov
mov
movs
aam
scas
mov
into
sub
adc
(bad)
(bad)
call
div
cmps
lahf
dec
nop
iret
aad
stos
mov
adc
mov
mov
ja
(bad)
mov
call
mov
cmps
jb
xor
inc
cld
or
addr16
push
scas
lods
loope
mov
out
sbb
jle
lea
in
adc
push
push
dec
retf
scas
cmp
(bad)
(bad)
jg
jecxz
pop
data16
xchg
mov
jbe
inc
push
out
(bad)
dec
and
mov
into
and
add
pop
dec
cdq
and
dec
out
pop
jmp
push
mov
jmp
inc
outs
aaa
pop
push
mov
dec
fidiv
xchg
xor
pop
mov
cdq
adc
(bad)
fbld
cmc
add
mov
(bad)
call
push
movs
dec
cli
cmp
add
out
lods
je
mov
mov
icebp
bound
(bad)
(bad)
push
pushf
adc
mov
rcr
mov
mov
mov
add
call
icebp
lds
adc
scas
div
(bad)
fcomip
call
cmp
fmul
push
or
fstp
in
jmp
add
(bad)
(bad)
call
ja
dec
sbb
loope
test
std
fcomp
cmp
mov
lock
mov
xor
cmp
leave
sti
and
aad
in
(bad)
sar
std
lods
addr16
scas
pop
and
call
ds
ins
popf
sub
(bad)
pop
mov
pop
repnz
push
sbb
jg
not
mov
nop
sbb
mov
out
push
sar
jmp
aas
bnd
loope
gs
mov
in
shl
(bad)
(bad)
call
les
xor
cli
xchg
popf
outs
cld
aam
neg
sub
data16
(bad)
call
xchg
mov
idiv
ficom
xor
mov
xchg
data16
push
mov
popa
enter
dec
sbb
scas
out
(bad)
call
cmp
mov
pusha
jmp
into
cmps
ss
mov
jmp
and
nop
fs
xchg
push
cmp
adc
jg
dec
mov
cs
jge
mov
(bad)
jnp
jecxz
xchg
test
jae
ins
jbe
pop
xchg
jbe
mov
clc
(bad)
(bad)
(bad)
(bad)
mov
lods
inc
pop
pop
jecxz
clc
scas
in
mov
dec
test
sub
jnp
jl
and
(bad)
(bad)
(bad)
dec
push
icebp
test
fcmove
cwde
mov
inc
in
loope
inc
cmp
je
mov
mov
(bad)
(bad)
cmp
scas
inc
hlt
or
add
add
(bad)
clc
mov
push
rcr
cmp
arpl
cdq
shr
ja
xor
push
dec
shl
xor
(bad)
push
daa
fcomip
paddq
je
mov
rcr
loope
or
sar
jmp
dec
jg
xor
mov
cmp
stos
in
mov
inc
adc
bound
(bad)
(bad)
call
das
inc
fcmovu
cmp
std
es
mov
hlt
mov
iret
ror
cmp
dec
aas
clc
(bad)
imul
rcr
fcom
dec
inc
test
pop
adc
sbb
(bad)
(bad)
(bad)
(bad)
jmp
inc
inc
in
inc
cmp
push
mov
sub
sar
aaa
stc
iret
fnstenv
jg
and
mov
mov
or
outs
mov
stos
fistp
scas
and
(bad)
(bad)
jmp
cwde
in
retf
xchg
push
pop
(bad)
ror
test
iret
mov
(bad)
(bad)
jg
rcl
push
je
movs
in
mov
inc
push
cmp
enter
std
adc
inc
jp
(bad)
(bad)
(bad)
jmp
sbb
sbb
dec
dec
ret
retf
sar
pusha
dec
shl
(bad)
jl
shr
(bad)
(bad)
(bad)
call
sar
push
out
xchg
pusha
adc
add
mov
popa
jmp
mov
mov
leave
daa
adc
(bad)
(bad)
fcomip
div
nop
pop
(bad)
mov
fwait
jge
xor
iret
sub
pop
out
pop
xor
retf
pop
sub
retf
pusha
das
test
or
mov
(bad)
call
rol
ja
mov
or
mov
dec
loopne
jo
or
(bad)
jmp
jo
mov
mov
xchg
stc
lock
test
push
mov
fcmovne
std
xor
fistp
sub
inc
adc
fistp
fprem
cmp
dec
loop
sbb
movs
aas
std
int3
test
call
movs
sub
frstor
mov
data16
(bad)
(bad)
(bad)
(bad)
call
popa
inc
dec
inc
loope
xchg
fcmovbe
xchg
mov
xor
loop
jle
(bad)
(bad)
(bad)
(bad)
jmp
dec
push
and
ret
fisubr
shl
sbb
scas
pushf
sbb
push
icebp
add
or
sbb
movups
jb
sub
inc
(bad)
(bad)
(bad)
dec
ficomp
dec
mov
(bad)
out
dec
push
lods
lahf
mov
inc
mov
push
xor
add
inc
(bad)
(bad)
push
adc
inc
pop
push
push
push
push
mov
add
sub
(bad)
movs
adc
(bad)
jmp
sar
test
sahf
scas
movs
pop
jge
aad
das
pop
test
(bad)
inc
mov
mov
sub
int
or
cmc
fadd
xchg
stos
add
push
out
adc
(bad)
(bad)
jmp
faddp
out
lahf
mov
xlat
mov
mov
int
sbb
dec
imul
xor
(bad)
(bad)
cmp
fs
fsub
sbb
mov
mov
adc
xor
xor
(bad)
(bad)
call
mov
mov
je
jg
in
jno
mov
in
adc
mov
popf
mov
mov
(bad)
(bad)
fiadd
mov
add
dec
arpl
mov
push
cmp
mov
(bad)
mov
test
adc
call
add
jp
(bad)
(bad)
(bad)
inc
mov
sbb
xchg
dec
xchg
(bad)
jl
adc
sub
mov
mov
mov
loope
lods
sbb
in
int3
dec
adc
out
mov
pop
add
dec
inc
call
inc
or
loop
loopne
mov
loop
movs
xor
xchg
add
test
push
and
(bad)
(bad)
inc
scas
push
(bad)
(bad)
call
xor
cmp
mov
cs
(bad)
(bad)
jmp
pop
lods
ss
lea
or
xor
test
arpl
jecxz
out
jp
dec
pop
mov
fbld
popf
mov
sbb
(bad)
jmp
popa
sub
xor
scas
mov
push
(bad)
dec
mov
push
das
xchg
add
addr16
mov
cs
pop
mov
icebp
jg
call
popa
cs
cmp
jno
loop
jp
sbb
jecxz
(bad)
fisttp
pop
and
mov
sub
push
arpl
push
sbb
push
dec
jmp
add
add
adc
inc
aam
fbstp
mov
dec
movs
mov
adc
je
shl
xchg
(bad)
(bad)
(bad)
jmp
out
loope
mov
rol
inc
clc
xchg
and
sub
mov
pop
rol
jmp
(bad)
(bad)
mov
out
pop
mov
cmp
xchg
pop
push
mov
mov
push
push
cmp
fld
imul
vcvtps2ph
mov
idiv
(bad)
in
call
push
jo
ins
pop
jo
xor
mov
sbb
mov
adc
sbb
fistp
fcom
jmp
fcom
or
mov
arpl
mov
or
(bad)
(bad)
inc
ins
cmp
fdiv
jne
test
fdivrp
xor
mov
sbb
cmp
fdivr
les
cmp
dec
adc
add
sbb
int3
jbe
mov
(bad)
(bad)
(bad)
dec
pop
fbld
xchg
test
sub
sbb
icebp
xchg
test
lock
jmp
(bad)
(bad)
(bad)
fcomp
xor
int3
mov
lock
gs
cmc
and
mov
cmc
push
sti
jmp
inc
jg
(bad)
push
mov
lahf
sub
sar
pop
aam
stos
pushf
adc
xchg
mov
test
outs
into
add
cmp
sbb
pushf
jmp
lock
pop
scas
ret
sub
in
push
or
cmp
push
(bad)
(bad)
(bad)
push
mov
scas
sub
mov
or
push
std
sub
sub
or
xchg
hlt
(bad)
(bad)
(bad)
call
rcl
arpl
xor
ret
jmp
movs
pop
test
jmp
int
push
bound
(bad)
xchg
(bad)
(bad)
(bad)
call
jbe
je
push
lock
sbb
data16
cmp
das
lea
pop
or
or
ud0
(bad)
call
pop
(bad)
and
fidivr
in
xchg
(bad)
cmp
cwd
popf
mov
mov
(bad)
(bad)
(bad)
jmp
(bad)
xchg
dec
je
dec
addr16
dec
push
cmp
ret
dec
aad
mov
mov
(bad)
(bad)
jmp
xor
adc
aas
inc
fbld
cmps
xchg
xchg
ret
rcr
ret
cli
inc
(bad)
(bad)
(bad)
dec
mov
adc
xlat
sub
mov
xchg
mov
fidiv
inc
in
adc
(bad)
dec
out
clc
jo
cli
xor
adc
outs
movs
jnp
std
in
sti
push
test
(bad)
call
fsubr
in
cdq
and
and
xor
push
sub
mov
popa
(bad)
(bad)
(bad)
dec
jns
and
rcr
fiadd
iret
push
(bad)
sbb
stos
cmp
(bad)
ficom
dec
(bad)
dec
xchg
mov
fnsave
je
mov
mov
mov
jb
out
dec
jmp
imul
(bad)
(bad)
(bad)
(bad)
cmp
fwait
(bad)
int3
popa
mov
mov
or
fisubr
imul
(bad)
(bad)
call
add
addr16
imul
mov
cmp
mov
mov
xchg
jbe
(bad)
(bad)
jmp
ins
and
add
adc
xor
ja
stc
sbb
add
test
cwde
inc
in
and
outs
cs
adc
clc
fcomip
mov
ss
in
jns
mov
mov
(bad)
dec
mov
or
jb
leave
test
xchg
fistp
fst
(bad)
push
dec
xchg
mov
and
outs
loopne
add
mov
mov
jmp
out
xchg
and
mov
or
std
push
(bad)
inc
stc
jo
dec
sahf
daa
icebp
adc
icebp
(bad)
leave
ret
add
(bad)
(bad)
out
and
out
add
repz
mov
ret
ja
sub
movs
in
jge
jnp
in
pop
(bad)
(bad)
(bad)
inc
cmp
xor
cmp
pop
daa
mov
daa
dec
pushf
xchg
pop
nop
push
(bad)
(bad)
(bad)
call
push
xchg
inc
push
test
iret
sbb
xchg
mov
shr
mov
(bad)
(bad)
dec
pop
push
mov
jecxz
sbb
mov
outs
test
or
fmul
(bad)
(bad)
call
pop
add
jb
(bad)
xchg
dec
adc
push
and
stos
repnz
repz
mov
(bad)
(bad)
(bad)
inc
fwait
and
dec
cli
push
data16
sub
push
dec
push
mov
retf
sub
(bad)
dec
(bad)
mov
adc
call
into
fwait
cmp
adc
(bad)
call
and
repz
cmpunordps
mov
xchg
fcomip
mov
cmp
mov
(bad)
push
icebp
add
jb
adc
(bad)
cmc
sub
push
or
les
mov
stc
(bad)
mov
(bad)
(bad)
(bad)
call
sbb
pusha
fisubr
int
imul
mov
cli
dec
sub
aaa
jp
daa
and
dec
rcr
in
xchg
bound
in
dec
aam
sbb
jno
out
es
mov
fcomip
jmp
add
pushf
aam
pushf
xchg
repnz
jnp
sbb
lock
(bad)
(bad)
inc
loop
into
cmp
dec
(bad)
shr
xor
stos
and
jbe
jne
movs
gs
(bad)
(bad)
call
cli
inc
test
dec
data16
sar
push
dec
xchg
shr
add
jo
scas
fistp
add
adc
xchg
in
push
pop
sahf
call
(bad)
(bad)
(bad)
call
loop
cmp
std
mov
int
sbb
(bad)
adc
push
mov
add
mov
outs
outs
adc
mov
movs
jno
out
sahf
add
jmp
(bad)
scas
out
stos
push
pop
mov
dec
mov
sbb
and
adc
pop
icebp
rcr
and
imul
and
push
(bad)
(bad)
(bad)
mov
mov
scas
inc
fimul
loop
inc
xchg
leave
stos
shr
xor
jg
mov
mov
iret
fistp
inc
cmp
cld
cmps
lock
mov
sub
jnp
push
ja
in
dec
jb
and
sub
adc
dec
ret
xchg
test
pop
aaa
fs
mov
loope
dec
push
lss
dec
xor
jb
ds
(bad)
mov
fdiv
popf
mov
data16
loopne
fsub
jecxz
cmp
xor
xchg
push
cmp
test
pop
data16
adc
enter
adc
jo
mov
(bad)
mov
retf
xchg
sub
pusha
out
(bad)
jp
pop
mov
xor
(bad)
xchg
jp
into
ds
cld
sahf
fcomp
repnz
pop
sub
jg
clc
mov
and
cmc
inc
xor
int3
int3
lods
fisubr
sbb
je
(bad)
call
sbb
test
bound
mov
les
jns
(bad)
(bad)
(bad)
(bad)
std
call
gs
dec
cmp
out
mov
mov
mov
ins
mov
pop
icebp
call
add
sub
cmp
dec
push
hlt
mov
sbb
in
ret
jb
jbe
cdq
(bad)
(bad)
(bad)
inc
cwde
daa
mov
mov
stos
pop
fwait
inc
mov
loop
xor
mov
call
jecxz
sbb
jo
mov
sub
(bad)
mov
ins
fcmovbe
xchg
shl
jmp
dec
call
mov
call
xor
and
ja
inc
push
dec
movs
dec
xchg
mov
mov
test
pop
gs
jmp
mov
sahf
mov
cmp
adc
and
and
inc
push
jp
inc
out
xor
sbb
xlat
sbb
mov
movs
xchg
sbb
inc
dec
(bad)
mov
leave
fcomp
(bad)
call
movs
lods
lahf
mov
fistp
jmp
mov
xchg
nop
sbb
nop
mov
(bad)
push
inc
mov
aas
or
(bad)
(bad)
(bad)
jmp
inc
(bad)
(bad)
into
cmp
loope
mov
cs
clc
push
into
jl
mov
inc
ret
(bad)
(bad)
call
mov
int
push
repnz
xor
push
jecxz
mov
adc
adc
into
and
jmp
mov
retf
in
adc
sbb
js
xor
addr16
xchg
daa
and
mov
cmc
push
cmp
mov
fnstsw
(bad)
(bad)
jnp
fs
and
shr
adc
int
bound
mov
cmps
jnp
(bad)
(bad)
jmp
mov
pop
add
jg
jo
lds
sbb
pop
loop
repz
pop
jne
lds
cli
or
lock
push
stos
cwde
mov
fadd
aaa
mov
push
jecxz
adc
jns
and
addr16
movs
push
jp
dec
aam
push
mov
aaa
and
push
loope
inc
mov
mov
sbb
sbb
ins
retf
(bad)
(bad)
(bad)
dec
fcom
ss
in
std
adc
jns
xor
sub
push
pop
loope
cmp
rcr
fsub
out
mov
es
mov
faddp
loopne
mov
jmp
mov
sbb
cmp
out
mov
xchg
inc
cwde
xchg
xchg
or
mov
shl
out
jmp
or
or
dec
sub
sbb
(bad)
jmp
into
in
int
fnstsw
in
frstor
sbb
js
jbe
(bad)
(bad)
jmp
ss
pop
repnz
mov
mov
mov
jge
xchg
mul
xchg
mov
(bad)
jmp
jbe
pop
mov
mov
adc
adc
dec
jmp
inc
clc
mov
sbb
push
(bad)
(bad)
(bad)
jmp
adc
movs
sub
add
es
retf
mov
dec
arpl
pop
push
lahf
sub
push
mov
(bad)
(bad)
dec
fidiv
ds
dec
movs
sub
adc
cmps
call
pop
jp
sub
movups
call
aaa
dec
and
dec
pop
mov
mov
pusha
pop
in
xchg
jg
cmc
call
(bad)
jecxz
or
push
sub
fisttp
retf
ja
jg
mov
mov
int
cs
(bad)
jmp
inc
(bad)
dec
fwait
je
std
push
fs
pop
dec
push
pop
push
add
lahf
add
mov
scas
mov
jl
cmp
in
stc
loope
retf
fisttp
mov
mov
pop
pop
mov
fdiv
mov
pop
xchg
xlat
jecxz
ja
pop
ret
fild
(bad)
jmp
lods
loop
dec
in
ret
imul
xchg
mov
shl
das
loopne
push
hlt
(bad)
(bad)
jnp
mov
in
imul
je
lds
hlt
(bad)
push
das
add
fucomp
shl
jge
aaa
cld
xchg
xor
ds
inc
mov
and
jno
inc
adc
cld
(bad)
(bad)
inc
cdq
mov
scas
inc
xlat
inc
jp
(bad)
movs
bound
jbe
pop
test
pop
cmp
sub
call
mov
push
in
loopne
iret
lock
xor
repz
call
cmp
xchg
clc
xlat
cli
lds
cld
xchg
addr16
jecxz
cmp
mov
gs
(bad)
ficom
xchg
stos
aad
cmc
and
push
jmp
(bad)
call
repnz
sbb
adc
adc
movzx
test
jle
mov
cmp
gs
(bad)
(bad)
inc
mov
lds
scas
mov
inc
addr16
into
ds
dec
mov
or
push
inc
jno
sub
sar
stos
sbb
(bad)
cmp
jae
icebp
add
xor
inc
js
jp
loope
outs
mov
shl
jno
push
adc
add
arpl
into
push
mov
xlat
cmc
fcmovu
cvtdq2ps
fninit
call
ins
fwait
adc
sbb
xor
sbb
or
jmp
(bad)
mov
and
aam
xor
mov
mov
inc
leave
jge
(bad)
call
push
inc
jmp
pop
mov
sahf
jnp
mov
mov
(bad)
call
loopne
mov
sub
test
jo
retf
call
call
mov
in
(bad)
ds
jmp
mov
and
shr
jmp
in
mov
gs
cmc
stc
repz
inc
add
(bad)
jne
pop
movs
outs
out
add
nop
frstor
(bad)
(bad)
mov
sub
jg
adc
sbb
mov
aaa
(bad)
imul
(bad)
call
(bad)
mov
stos
arpl
jmp
push
inc
inc
scas
loope
int3
mov
neg
in
jmp
call
mov
sub
test
ins
pop
fdivr
mov
clc
cmc
outs
xchg
and
or
(bad)
push
cmps
xchg
div
std
mov
call
mov
mov
in
jnp
(bad)
(bad)
dec
sbb
hlt
dec
xchg
jecxz
jp
imul
enter
in
or
sahf
sti
jb
xchg
fwait
mov
(bad)
pop
stos
cmp
loopne
mov
pop
(bad)
(bad)
mov
mov
pushf
jbe
jb
jmp
mov
or
xchg
(bad)
(bad)
(bad)
jmp
rcl
push
mov
je
das
cmp
mov
mov
cdq
(bad)
(bad)
(bad)
call
int3
jge
in
stos
or
stc
xlat
inc
jecxz
les
cmp
int
out
fstp
push
idiv
outs
cld
das
sub
cmp
bnd
xor
mov
cdq
push
xchg
cdq
adc
cwde
adc
(bad)
call
xchg
imul
das
dec
arpl
fst
gs
mov
dec
mov
(bad)
(bad)
(bad)
jmp
inc
aam
push
push
jne
push
inc
sbb
and
cmps
lock
pop
xchg
mul
rcr
sti
scas
mov
sar
jmp
or
and
push
and
sub
cwde
xchg
nop
outs
pushf
inc
movs
inc
cmp
(bad)
jg
jo
sbb
lds
jle
push
cmp
cmp
in
outs
push
jecxz
(bad)
dec
ror
popf
mov
aam
mov
clc
cmp
std
sub
cli
cmp
jne
(bad)
jg
ss
psrlq
pop
sub
sbb
push
sahf
mov
movs
(bad)
(bad)
push
fisubr
std
jmp
cld
push
ficomp
fdivr
xchg
inc
(bad)
(bad)
(bad)
jg
clc
leave
loope
aas
loope
adc
jg
mov
scas
int
push
fbld
jg
cmp
dec
(bad)
in
leave
call
push
jmp
push
mov
adc
mov
in
sar
in
jecxz
xchg
dec
test
out
xor
in
mov
aas
fcom
jg
and
loope
inc
push
xchg
int
std
sbb
aas
idiv
arpl
inc
imul
xchg
sub
cld
(bad)
std
ja
in
std
cwde
sub
fwait
dec
test
sar
bound
sub
xchg
jo
into
mov
mov
mov
popa
and
hlt
(bad)
push
call
jge
outs
inc
cld
jmp
mov
imul
jbe
addr16
aas
(bad)
adc
(bad)
addr16
push
mov
mov
add
fneni(8087
push
sub
mov
pop
jmp
mov
mov
dec
std
dec
cld
fbstp
push
inc
sti
mov
scas
push
sti
jmp
in
cmp
(bad)
jg
pop
cld
aas
pop
pminub
repnz
add
mov
shl
clc
test
inc
out
adc
jnp
jnp
pusha
rol
adc
in
mov
fild
push
xchg
jns
pop
in
push
jmp
daa
and
fwait
cli
mov
(bad)
mov
loop
out
ror
push
jl
idiv
ins
or
sbb
push
xor
push
jmp
aas
loop
lahf
stos
out
unpckhps
jg
sbb
rcr
pop
sti
fistp
leave
(bad)
mov
imul
sbb
pop
mov
add
aad
icebp
xchg
ret
(bad)
test
jl
or
(bad)
jno
ror
scas
leave
or
out
xchg
cmp
pop
xchg
mov
sbb
mov
in
scas
cmc
imul
add
dec
shl
jmp
(bad)
aad
xchg
jg
inc
out
jb
stc
fild
jecxz
(bad)
loope
lahf
shr
or
inc
call
jmp
jbe
pandn
push
pop
cld
(bad)
(bad)
jnp
mov
mov
mov
or
rcr
adc
mov
loop
mov
and
cli
lock
lock
mov
bnd
dec
icebp
je
clc
int
add
ret
jmp
pop
mov
fsin
in
into
sbb
fs
retf
fmul
shl
xchg
dec
jp
mov
mov
jecxz
and
ds
pop
or
lock
push
(bad)
cwde
(bad)
xlat
mov
mov
popa
mov
push
ret
cld
call
movs
cmp
(bad)
mov
fcomp
(bad)
(bad)
in
scas
bound
stc
pop
mov
psadbw
hlt
xchg
push
pop
jns
aam
pop
aaa
fmul
jg
(bad)
(bad)
std
push
xor
fcomip
jle
aas
cs
xor
outs
out
stos
bound
add
cmp
inc
mov
sbb
(bad)
out
mul
push
loopne
xor
jmp
rcr
mov
jmp
pusha
cwde
and
das
cmc
loopne
and
jge
ficom
push
iret
fwait
ret
outs
jg
fcomi
imul
pop
(bad)
aas
nop
push
mov
dec
dec
hlt
aaa
and
rcl
sbb
lock
cmp
es
lock
in
jmp
popf
ret
in
push
sbb
pop
mov
adc
pop
loope
call
push
add
lahf
repnz
stos
push
add
hlt
cmp
pop
mov
sbb
(bad)
lock
(bad)
call
jne
(bad)
inc
in
(bad)
fadd
cld
cli
ret
mov
xchg
pextrw
std
bound
sbb
add
pop
stos
lods
jle
cmc
(bad)
mov
and
and
lods
dec
jge
mov
aam
dec
jle
ins
sbb
clc
(bad)
dec
jecxz
xchg
sbb
ja
sbb
push
(bad)
jg
pop
pop
std
sub
cmps
sbb
push
movs
call
lea
(bad)
mov
out
(bad)
or
or
pusha
loopne
xor
lock
jb
mov
mov
mov
jbe
out
pop
ja
jecxz
sti
push
cli
dec
(bad)
test
lods
xchg
ds
sbb
shl
push
or
lds
pop
aaa
add
sbb
call
(bad)
scas
mov
xchg
loop
xor
div
cdq
out
ret
xor
scas
jecxz
in
clc
dec
push
mov
ret
test
sti
mov
and
push
xor
sahf
loopne
jge
into
sub
stos
sub
imul
xor
and
ror
lahf
sbb
ins
xchg
lock
lahf
(bad)
aas
push
sub
push
aaa
dec
jb
in
and
icebp
inc
xchg
pop
and
into
out
mov
loope
(bad)
mov
fcom
jle
pop
loopne
mov
hlt
clc
sar
cli
std
inc
retf
lods
outs
sbb
sbb
test
not
fsub
in
(bad)
pop
dec
cld
jmp
mov
(bad)
ffreep
popf
pusha
les
cmp
aad
inc
dec
sub
xchg
aam
push
sub
les
out
(bad)
(bad)
cmp
rol
and
or
push
jne
inc
ret
push
stos
(bad)
jmp
xor
sbb
inc
ja
(bad)
call
or
pslld
sub
out
out
scas
mov
ret
fdivr
cld
pop
cld
mov
sbb
call
lahf
stc
lea
sti
fstp
xor
in
clc
ret
or
push
cmc
ins
cli
pusha
cmp
outs
dec
pop
mov
mov
xchg
cmc
mov
push
push
in
xor
sbb
cmp
sbb
fisttp
mov
mov
in
(bad)
adc
scas
pop
sar
std
sbb
push
jmp
dec
(bad)
(bad)
cmps
sbb
jo
mov
mov
cmp
cli
sahf
(bad)
fisttp
fcomp
jb
vpsubq
pop
lods
out
jl
psubusb
repnz
mov
bound
out
cmp
or
or
jp
push
cmc
out
cmps
in
mov
jae
lahf
fsubp
push
adc
ins
pop
sbb
inc
push
mov
(bad)
(bad)
(bad)
(bad)
mov
out
and
imul
loop
sbb
mov
push
das
das
sub
cld
(bad)
dec
(bad)
cdq
mov
xor
adc
add
mov
cmps
aaa
push
add
shl
ja
push
sahf
(bad)
(bad)
(bad)
jg
dec
sti
sbb
leave
xchg
es
cs
dec
aad
dec
push
adc
xchg
pop
mov
mov
(bad)
(bad)
call
ja
fbstp
ss
movs
cmp
stos
(bad)
ss
cdq
or
in
test
(bad)
cmp
call
pop
cmp
mov
xor
mov
push
dec
js
test
(bad)
(bad)
(bad)
call
pop
in
(bad)
cld
in
or
jp
push
nop
xchg
push
rol
cli
sti
xor
cdq
xchg
pop
call
(bad)
mov
push
and
mov
sbb
pushf
cwde
jo
mov
mov
pop
push
cli
xchg
in
shl
arpl
test
dec
sbb
push
cmp
pop
aaa
inc
loopne
inc
(bad)
(bad)
(bad)
call
xlat
bound
xchg
mov
je
bound
adc
lock
dec
jmp
adc
out
sti
sti
and
sbb
inc
inc
sub
cmps
mov
cli
jmp
xchg
push
mov
mov
je
pop
aad
xlat
cli
(bad)
(bad)
jmp
ficomp
add
mov
xchg
xchg
aaa
jno
pop
add
clc
repz
mov
mov
pop
xchg
or
inc
cdq
push
mov
cmc
addr16
fst
(bad)
(bad)
call
clc
stc
cmps
adc
sub
lods
rcl
in
shl
mov
mov
sub
(bad)
(bad)
push
adc
push
addr16
mov
mov
inc
sbb
push
loopne
pop
dec
(bad)
(bad)
(bad)
in
ds
push
sbb
xchg
and
dec
add
jb
stos
xchg
je
aad
adc
pop
push
mov
inc
fild
fisub
jecxz
int3
imul
mov
pop
xor
(bad)
(bad)
dec
and
sub
shl
push
xchg
xchg
inc
es
inc
rcl
movntq
out
adc
ja
(bad)
call
cmps
pop
outs
pop
sbb
adc
bound
dec
(bad)
(bad)
(bad)
dec
pop
sub
mov
lods
mov
cmp
push
(bad)
movs
xchg
sbb
(bad)
fs
mov
inc
jbe
mov
sar
nop
sub
arpl
cwde
data16
push
sbb
xor
call
(bad)
cmp
sbb
leave
jge
jno
movs
dec
cmp
jb
cmp
mov
aam
(bad)
call
xor
jl
int3
cwde
push
ins
xor
movs
test
jg
outs
(bad)
sub
adc
push
movs
(bad)
leave
ja
push
add
adc
inc
neg
call
lods
add
(bad)
cs
(bad)
jmp
xchg
add
sub
cs
xlat
and
mov
cmp
push
jmp
pop
xchg
out
mov
sub
mov
(bad)
call
dec
inc
add
or
jl
sbb
mov
xor
jae
jl
rep
(bad)
(bad)
inc
imul
jg
jns
xor
stos
and
and
cdq
add
pop
(bad)
dec
aaa
inc
or
rcl
cmc
(bad)
push
mov
cmc
dec
cdq
mov
push
xchg
push
out
aaa
data16
iret
sbb
cwde
mov
pop
or
dec
ja
jge
push
cmps
or
gs
push
fistp
ret
adc
mov
mov
mov
add
fidivr
xchg
adc
sbb
stos
jnp
jle
test
sub
stos
stos
jne
loopne
ret
or
pop
mov
pop
out
inc
mov
stos
jmp
mov
pop
jl
(bad)
(bad)
(bad)
push
mov
into
mov
les
(bad)
cli
add
jecxz
cmps
movs
lods
ja
clc
call
iret
mov
sub
and
out
pop
mov
xor
jl
hlt
mov
into
pop
xchg
lods
ds
push
jmp
xor
(bad)
bound
push
(bad)
(bad)
(bad)
call
mov
xor
mov
jg
or
jle
js
ins
jno
sub
jge
(bad)
jg
dec
int
out
xchg
or
xor
cli
in
je
dec
mov
or
pop
imul
(bad)
(bad)
(bad)
js
into
(bad)
out
jnp
jge
sub
add
cmp
movs
dec
push
and
(bad)
(bad)
inc
sahf
je
fs
inc
bound
dec
mov
xor
mov
shl
inc
pushf
mov
adc
loopne
popa
neg
ret
ret
movs
or
push
idiv
and
into
in
inc
ret
(bad)
(bad)
out
cli
dec
dec
mov
xchg
mov
in
(bad)
pop
or
push
scas
dec
xor
mov
dec
(bad)
fcomip
jmp
jbe
int
mov
sbb
cmp
ja
or
pop
cli
(bad)
(bad)
dec
icebp
je
nop
mov
push
mov
dec
sub
jb
popf
mov
push
and
(bad)
jmp
mov
dec
js
jns
lods
mov
inc
std
push
jle
sbb
jnp
mov
xchg
jecxz
outs
push
clc
xchg
rcr
lock
adc
xchg
mov
sti
mov
sub
and
dec
(bad)
dec
and
pop
mov
mov
sub
mov
mov
(bad)
push
(bad)
mov
pop
sbb
not
inc
sbb
loop
arpl
scas
repnz
test
sub
std
(bad)
(bad)
push
sub
push
cmp
jecxz
clc
sbb
retf
fidivr
push
jg
mov
imul
sub
in
imul
pop
xor
push
mov
test
aad
int
mov
(bad)
(bad)
call
stos
in
cdq
xor
rcl
inc
test
repz
test
mov
(bad)
mov
(bad)
(bad)
(bad)
jmp
xchg
dec
pop
jl
xor
mov
sub
jns
lock
push
repnz
add
jmp
icebp
mov
fstp
popa
mov
mov
call
mov
jecxz
or
sub
aad
(bad)
(bad)
(bad)
(bad)
mov
int
fcmovu
frstor
cmp
dec
cli
cs
mov
sub
test
je
in
ss
(bad)
(bad)
(bad)
inc
xchg
imul
xchg
cmp
pop
enter
mov
popf
mov
pop
in
(bad)
(bad)
(bad)
push
sub
int
jb
ss
call
adc
mov
sti
mov
(bad)
(bad)
jmp
push
push
(bad)
mov
loopne
aad
sub
jne
cmp
dec
out
out
les
leave
scas
cmp
xchg
out
mov
sub
push
dec
sub
movs
push
(bad)
(bad)
(bad)
dec
lahf
test
sub
(bad)
cli
and
fisttp
mov
mov
int3
fucomip
mov
push
pop
retf
(bad)
push
xor
cmp
xor
(bad)
xchg
jbe
in
jge
fistp
sti
shl
lahf
movs
pop
addr16
shr
add
jl
mov
(bad)
inc
jecxz
cmp
mov
addr16
dec
push
loope
ror
stc
(bad)
js
cld
xchg
outs
in
(bad)
(bad)
(bad)
inc
cld
mov
mov
out
adc
es
dec
shl
dec
mov
push
mov
mov
mov
lea
fst
std
mov
cwd
ss
aam
xor
xchg
and
outs
and
inc
push
inc
outs
test
nop
push
xor
mul
in
test
(bad)
(bad)
cmp
dec
dec
mov
test
repz
sub
add
xchg
(bad)
lods
sahf
pop
push
push
push
push
(bad)
(bad)
(bad)
(bad)
dec
sar
sbb
loope
out
or
and
ja
xlat
mov
aad
(bad)
(bad)
jmp
iret
(bad)
enter
jns
pop
push
outs
mov
xchg
movs
js
movs
and
and
push
retf
xchg
(bad)
(bad)
(bad)
push
dec
inc
fistp
std
and
sbb
enter
or
cmps
dec
cdq
gs
or
(bad)
xchg
mov
pop
and
scas
jge
ss
test
addr16
jge
cmc
(bad)
jmp
sub
sub
sbb
push
inc
mov
dec
rcl
push
mov
ds
loope
dec
(bad)
(bad)
(bad)
(bad)
jnp
fmul
int
sbb
mov
sub
push
in
or
cmps
add
(bad)
inc
aas
push
cmps
dec
jmp
out
cmp
stc
arpl
lods
repnz
lock
fwait
cmp
out
(bad)
mov
pop
xlat
mov
ja
and
ret
aaa
dec
mov
jns
mov
xchg
(bad)
(bad)
mov
jae
ficom
and
push
jae
loopne
mov
pusha
inc
push
mov
hlt
retf
call
out
ss
mov
lock
stc
repnz
mov
movs
idiv
(bad)
out
out
dec
sub
dec
xchg
adc
es
pop
cmp
(bad)
push
push
xchg
in
mov
jb
int3
cwde
xor
dec
mov
inc
push
jecxz
(bad)
(bad)
call
sbb
and
pop
jmp
call
icebp
(bad)
stos
sbb
mov
fnsave
sub
dec
imul
jbe
mov
mov
hlt
xchg
and
adc
loop
and
ds
out
pop
in
(bad)
mov
or
int
push
cdq
(bad)
imul
leave
mov
out
and
imul
sar
mov
push
(bad)
mov
stos
inc
in
xlat
(bad)
(bad)
jmp
popa
xchg
enterw
push
push
pusha
push
loop
pushf
cmps
inc
push
(bad)
(bad)
(bad)
jg
(bad)
sbb
ror
xchg
aam
popf
sbb
inc
add
add
inc
push
jne
(bad)
(bad)
(bad)
inc
loop
jg
mov
mov
and
imul
int
call
iret
xchg
mov
loop
repnz
xor
in
sub
(bad)
mov
sub
ss
es
outs
enter
sub
xor
inc
stos
(bad)
(bad)
call
and
mov
test
mov
movs
shr
out
and
dec
fcom
test
(bad)
(bad)
(bad)
(bad)
aad
clc
inc
jmp
ja
sub
ins
lods
out
dec
inc
cwde
call
mov
dec
inc
rcr
cdq
dec
dec
int
inc
mov
das
clc
(bad)
mov
adc
dec
cli
gs
scas
std
call
jg
(bad)
(bad)
(bad)
inc
pop
stc
rcr
xor
cwde
xchg
pop
int
mov
sti
add
pushf
jge
jno
jnp
fisub
(bad)
cmp
test
fadd
lahf
int
inc
cmp
cmp
dec
mov
jae
push
ins
inc
add
pop
mov
sar
(bad)
(bad)
inc
pop
jle
push
inc
push
push
movsx
in
adc
and
pushf
test
cmp
dec
(bad)
(bad)
(bad)
inc
std
outs
xor
and
or
outs
push
xlat
and
mov
push
push
pop
mov
cld
(bad)
inc
cmps
sbb
je
xchg
add
movs
dec
pushf
add
xchg
mov
and
(bad)
inc
data16
cmp
loopne
adc
jp
test
xor
mov
mov
mov
je
sub
mov
cwde
iret
or
sbb
add
clc
mov
(bad)
(bad)
inc
adc
bound
xor
movs
and
in
lods
push
int3
xchg
(bad)
jmp
inc
sub
test
jle
mov
loop
dec
or
movs
jbe
(bad)
fbld
ja
(bad)
clc
(bad)
(bad)
(bad)
jmp
fst
in
mov
stos
test
mov
bound
stos
out
stos
mov
push
push
xchg
xchg
xchg
mov
in
push
cld
sub
dec
repnz
fwait
sahf
adc
sub
adc
mov
adc
(bad)
out
jecxz
adc
dec
jbe
push
sar
(bad)
dec
pop
push
aam
jne
cmp
shl
pushf
mov
fbld
jg
xchg
es
xchg
inc
mov
iret
fimul
out
test
lods
iret
lods
sbb
(bad)
(bad)
jmp
mov
xchg
fsubr
repnz
mov
adc
adc
(bad)
call
pop
xchg
inc
mov
inc
or
out
sub
(bad)
jmp
jle
mov
pop
sub
and
cli
(bad)
(bad)
dec
aad
mov
push
imul
out
int3
mov
inc
and
dec
jmp
pop
inc
cwde
mov
pop
shl
pop
push
jns
or
call
int3
adc
pushf
or
cmp
mov
(bad)
call
mov
pusha
(bad)
mov
bound
xor
pusha
mov
cmp
adc
(bad)
loop
neg
sbb
scas
in
popf
mov
fisubr
(bad)
jmp
dec
dec
ss
mov
shr
or
jecxz
jbe
cwde
call
jmp
shl
mov
add
das
daa
pop
ins
push
sbb
mov
(bad)
jge
pop
arpl
test
(bad)
cs
sbb
lds
fiadd
jg
sti
hlt
inc
(bad)
fcmovne
ja
aas
fldcw
cmp
jecxz
ret
lock
jmp
cmp
int
cmp
xlat
dec
enter
push
mov
(bad)
(bad)
(bad)
(bad)
inc
outs
pop
or
or
mov
lea
mov
fiadd
popf
sub
jns
adc
cli
push
(bad)
fild
inc
adc
enter
cld
pop
cmp
cmps
cmp
mov
call
retf
mov
fstp
aas
repnz
in
pop
cwde
jnp
mov
mov
sbb
jns
movs
aam
(bad)
std
in
cmc
(bad)
pop
(bad)
(bad)
(bad)
dec
jp
add
pop
(bad)
movs
daa
pop
mov
pop
jb
jbe
iret
not
mov
mov
dec
in
jle
(bad)
je
push
aaa
repz
movd
stc
mov
std
jmp
jne
sbb
cmps
mov
lahf
xor
add
add
clc
mov
out
jbe
jmp
adc
adc
adc
mov
inc
mov
std
xchg
aad
mov
inc
jle
or
lods
xor
rcr
popa
mov
mov
stos
sti
jle
gs
mov
cmps
sbb
pop
aas
imul
adc
and
mov
mov
daa
or
mov
add
xchg
out
mov
sub
push
xchg
mov
jmp
aaa
ror
xchg
inc
lods
push
scas
call
sbb
jge
jp
int3
data16
jmp
fstp
fisttp
(bad)
(bad)
dec
mov
popa
inc
shl
lods
aas
push
iret
lahf
cmp
sub
std
(bad)
call
iret
pushf
inc
xchg
pop
imul
ins
pop
jl
(bad)
loope
cmp
call
and
xchg
sub
or
sahf
jmp
(bad)
(bad)
(bad)
call
mov
sub
and
pop
bound
inc
inc
(bad)
stos
neg
push
sti
ds
(bad)
(bad)
(bad)
mov
lahf
mov
shr
xchg
adc
sub
dec
xchg
push
out
ss
ror
(bad)
(bad)
push
push
inc
aad
xor
xor
ds
xchg
sar
pop
pop
jns
ins
add
std
push
shl
jnp
cmp
or
fucomi
clc
inc
jno
js
jno
mov
lock
xchg
ret
cmp
add
jmp
add
add
fwait
je
ja
call
cmp
fiadd
imul
(bad)
(bad)
jg
adc
scas
dec
imul
js
cmps
aam
sbb
repz
jns
test
pusha
sbb
lds
call
cmp
adc
sbb
retf
loop
xchg
mov
jmp
clc
jg
ins
hlt
pop
jnp
das
ficom
or
ret
imul
loope
std
aam
shr
in
cdq
dec
fdivp
pop
stos
repnz
jge
push
mov
aas
sub
or
sbb
(bad)
(bad)
push
pop
xchg
in
mov
outs
icebp
xor
(bad)
hlt
mov
push
sahf
addr16
mov
(bad)
(bad)
jmp
mov
in
jp
sub
jmp
retf
das
cli
jmp
dec
sbb
cmps
mov
and
loope
ins
jae
xchg
shl
call
(bad)
push
adc
sbb
mov
mov
pop
outs
jae
ret
mov
adc
(bad)
pop
mov
(bad)
jmp
dec
pop
mov
mov
and
popa
enter
push
(bad)
(bad)
jg
ins
into
or
and
mov
inc
cdq
or
mov
(bad)
(bad)
(bad)
jmp
xchg
adc
jb
out
(bad)
sbb
test
lahf
push
jge
cmp
(bad)
(bad)
(bad)
inc
pop
xchg
mov
(bad)
sbb
push
jecxz
adc
inc
push
call
shl
imul
icebp
dec
sbb
sub
jmp
xor
fldenv
sbb
(bad)
(bad)
(bad)
dec
cmp
adc
mov
shr
inc
(bad)
in
mov
outs
(bad)
aad
or
add
test
std
(bad)
(bad)
inc
jnp
ds
xlat
nop
dec
inc
dec
sub
mov
xor
add
std
fstp
(bad)
(bad)
mov
cs
cmp
(bad)
fld
bound
mov
(bad)
(bad)
jg
push
out
sbb
nop
pusha
repnz
sbb
lahf
scas
ja
dec
(bad)
add
dec
(bad)
(bad)
(bad)
jmp
sbb
repnz
mov
cmp
cwde
xlat
or
pop
mov
and
mov
hlt
imul
push
xchg
and
pop
sbb
add
push
in
outs
pop
mov
add
jge
(bad)
(bad)
(bad)
jg
adc
shl
dec
lods
push
fwait
push
jnp
mov
loopne
jmp
mov
sub
jecxz
cmp
and
lahf
mov
dec
stc
inc
xchg
sub
daa
adc
cmp
aas
dec
(bad)
and
ins
jmp
loop
jb
test
(bad)
dec
in
js
mov
call
sti
mov
ror
mov
(bad)
(bad)
(bad)
inc
lods
cmps
scas
outs
popa
int
mov
jns
ret
push
pusha
inc
dec
imul
call
(bad)
fst
push
mul
mov
pop
sub
pop
mov
mov
not
jb
and
xor
push
push
movs
cmp
mov
in
scas
xchg
add
dec
add
mov
retf
pop
mov
jg
xchg
mov
xchg
xchg
das
sar
sub
xchg
dec
xchg
xchg
std
push
mov
in
or
int
(bad)
(bad)
(bad)
push
and
xor
scas
(bad)
xor
add
stos
and
push
mov
fld
mov
test
inc
iret
call
aaa
aad
dec
pop
in
cwde
xor
cs
dec
xchg
int
and
adc
retf
push
fcom
inc
push
movs
movs
jno
addr16
mov
sub
lea
aas
pop
out
retf
pop
and
dec
xor
movs
and
push
pop
out
mov
xor
nop
push
ds
imul
pop
sbb
int3
and
ror
inc
aad
out
lock
adc
and
inc
add
(bad)
(bad)
mov
cmp
add
test
sbb
jns
cs
mov
jno
push
lods
arpl
mov
call
in
daa
repnz
dec
movs
sbb
add
shl
mov
(bad)
(bad)
(bad)
jg
or
xor
test
xlat
jae
sub
and
inc
and
dec
dec
lahf
push
(bad)
(bad)
inc
pop
add
jle
mov
and
and
sahf
sbb
vandnps
cmp
adc
sub
(bad)
(bad)
call
repz
and
enter
sbb
mov
sahf
icebp
lods
xchg
les
stos
xor
inc
sbb
scas
call
push
loop
sub
mov
push
add
push
std
das
cli
push
push
jbe
aas
(bad)
mov
xchg
scas
retf
mov
in
xor
lock
movs
pushf
sub
scas
mov
ror
mov
push
jle
(bad)
(bad)
(bad)
call
daa
mov
out
mov
push
loope
mov
adc
pop
mov
mov
(bad)
(bad)
jmp
xor
push
jne
jecxz
pop
sbb
cdq
dec
inc
inc
add
(bad)
jg
mov
mov
push
add
in
ret
push
(bad)
jmp
cmp
enter
sub
add
mov
sub
dec
push
mov
xor
dec
sub
(bad)
jl
stos
xor
imul
dec
sub
mov
js
ds
push
jg
push
(bad)
mov
dec
xlat
sub
jb
(bad)
retf
adc
shr
jmp
mov
imul
loop
outs
int3
dec
sbb
scas
pusha
and
repz
(bad)
(bad)
jmp
pop
jno
cwde
push
dec
sub
daa
add
or
adc
mov
xchg
add
add
(bad)
(bad)
inc
scas
lods
shl
mov
or
adc
ror
pop
mov
jbe
xor
fsubr
cli
(bad)
jg
mov
sub
cmp
push
adc
into
inc
dec
jmp
add
(bad)
(bad)
call
jp
rcl
std
or
xchg
push
es
or
xchg
(bad)
(bad)
jg
add
inc
les
movs
push
xchg
ja
push
push
pop
aad
or
mov
sub
push
iret
mov
mov
xchg
xchg
push
mov
lahf
sbb
add
jp
pop
(bad)
(bad)
call
not
mov
push
es
das
cmp
(bad)
push
push
and
jecxz
shl
xchg
cdq
cmp
sub
loope
xchg
xor
(bad)
(bad)
in
call
cmps
movs
pop
mov
aam
sub
pop
mov
je
std
push
std
mov
or
in
loop
pusha
cli
inc
call
test
add
add
push
push
scas
xchg
les
xor
push
xchg
sub
retf
cmps
fldenv
and
sar
call
pop
leave
xchg
push
sub
or
add
dec
push
xor
popa
push
dec
mov
cmp
(bad)
inc
fisttp
lock
jo
push
mov
fsubr
jl
inc
add
cli
(bad)
(bad)
(bad)
std
sbb
sub
adc
adc
sbb
ret
xor
dec
fisubr
les
push
mov
es
cmp
pop
sub
push
inc
inc
icebp
int3
imul
cdq
push
(bad)
(bad)
jmp
test
sub
push
cwde
push
pusha
xchg
call
daa
cmp
(bad)
(bad)
(bad)
dec
push
lahf
or
aam
stc
jno
cwde
das
cmp
pop
mov
xchg
out
mov
inc
repz
add
jg
loope
addr16
lods
push
adc
push
sbb
addr16
cmp
or
mov
inc
mov
aad
(bad)
inc
push
cmc
mov
(bad)
push
mov
shl
retf
mov
add
pop
(bad)
(bad)
(bad)
jmp
push
sbb
adc
sbb
mov
jg
movs
add
pop
cmps
lahf
je
(bad)
mov
ss
inc
dec
push
add
dec
fmul
push
hlt
or
repz
xchg
mov
sbb
stos
fs
in
mov
inc
int
ins
sbb
jmp
add
and
inc
and
xchg
cld
sub
je
(bad)
call
(bad)
(bad)
jmp
cmp
test
xchg
cmps
outs
pop
sub
sahf
fsubrp
fild
lea
popa
inc
xchg
(bad)
(bad)
cmp
pop
popa
adc
imul
(bad)
(bad)
(bad)
jmp
mov
pop
dec
push
inc
enter
bound
fs
(bad)
shl
dec
push
inc
or
lea
loop
popf
call
adc
pop
test
cmp
(bad)
(bad)
push
ror
pop
popf
inc
int3
push
mov
cdq
lds
nop
mov
bound
test
xchg
adc
inc
jmp
cli
movs
and
pop
pop
not
mov
scas
outs
mov
pop
(bad)
(bad)
(bad)
(bad)
mov
adc
retf
movs
test
addr16
xchg
jmp
(bad)
push
outs
setae
xchg
jmp
xchg
js
or
xor
retf
mov
loopne
add
jmp
mov
ja
push
ret
xor
arpl
jmp
nop
(bad)
(bad)
(bad)
dec
xchg
mov
push
retf
sub
mov
mov
cmp
nop
mov
movs
pop
test
sub
(bad)
(bad)
inc
mov
(bad)
std
push
jne
mov
cmps
push
sbb
add
daa
stos
fwait
mov
or
jmp
std
call
ret
test
dec
push
mov
push
cmps
jb
fwait
pop
or
(bad)
(bad)
(bad)
mov
mov
add
(bad)
xor
pop
ds
jecxz
xor
and
push
bound
call
xor
bound
xor
push
dec
xchg
les
vpcmpgtd
push
scas
clc
(bad)
call
sub
lds
add
ins
test
sbb
mov
inc
mov
adc
hlt
scas
xchg
in
xchg
and
test
cmc
(bad)
(bad)
(bad)
(bad)
call
push
sub
sbb
jp
int3
dec
sbb
shr
mov
in
scas
(bad)
(bad)
(bad)
inc
mov
sub
sbb
add
mov
push
cwde
sub
jb
adc
add
aad
inc
popf
push
jne
lea
push
dec
jo
cmp
ret
pop
adc
(bad)
inc
movs
mov
jno
rol
and
or
pop
xor
push
xchg
sbb
aaa
std
(bad)
out
inc
xor
inc
and
ins
call
xchg
(bad)
dec
adc
xchg
xchg
sub
or
ror
or
mov
adc
mov
pop
adc
mov
test
stos
dec
adc
inc
mov
mov
sub
sub
inc
test
cdq
nop
in
aaa
jmp
sub
push
call
push
sub
mov
mov
adc
cs
xor
mov
push
popa
adc
(bad)
(bad)
inc
add
outs
ja
jle
mov
xor
sbb
ins
sub
fcom
(bad)
(bad)
(bad)
jmp
fwait
add
in
bound
mov
or
dec
cs
dec
push
sbb
mov
mov
push
(bad)
call
and
dec
jmp
sbb
mov
mov
xor
push
mov
(bad)
cld
(bad)
jmp
(bad)
xor
gs
fdiv
sbb
fnstcw
jae
dec
data16
(bad)
(bad)
(bad)
(bad)
fnsave
sbb
add
inc
mov
mov
adc
dec
fwait
retf
push
ror
pavgw
(bad)
(bad)
call
and
ins
xor
adc
adc
retf
lahf
(bad)
mov
(bad)
(bad)
push
nop
and
inc
and
dec
ins
mov
test
into
sbb
dec
add
ja
(bad)
(bad)
(bad)
fnstsw
or
scas
xor
retf
inc
add
fild
int3
sbb
loopne
neg
loopne
cwde
mov
mov
mov
adc
or
dec
mov
lock
lods
rol
dec
add
sahf
(bad)
(bad)
(bad)
(bad)
jle
sahf
enter
or
cld
mov
xor
mov
imul
(bad)
jmp
pop
xchg
inc
pop
sti
call
sub
mov
lahf
pop
call
(bad)
(bad)
(bad)
(bad)
jl
icebp
imul
xchg
sbb
mov
jmp
pop
fcom
cmp
(bad)
(bad)
(bad)
std
arpl
or
popf
test
cmp
into
(bad)
xor
inc
ds
or
(bad)
sub
jo
loop
(bad)
jl
cs
cmp
xor
loopne
adc
imul
and
jns
int
leave
sub
(bad)
mov
mov
mov
fbld
xor
retf
adc
(bad)
(bad)
(bad)
dec
retf
loopne
xchg
mov
and
loope
cwde
and
retf
sub
pop
add
sbb
push
jnp
pop
dec
add
mov
cwde
cmps
inc
das
jg
push
aad
push
xchg
xchg
icebp
cmps
scas
test
dec
inc
xchg
xor
mov
sub
mov
or
adc
mov
mov
dec
add
jg
inc
or
xor
add
frstor
retf
(bad)
(bad)
inc
repz
adc
inc
cwde
adc
dec
stos
aaa
data16
aaa
std
scas
jg
sbb
es
test
mov
mov
test
(bad)
(bad)
inc
retf
aaa
add
mov
mov
sbb
cdq
xor
xchg
sbb
pop
cmp
not
adc
popa
nop
in
jno
mov
fld
jne
in
(bad)
(bad)
(bad)
loopne
jns
xor
(bad)
(bad)
fcomip
or
in
sbb
cmp
lock
cs
pop
jno
cli
fwait
cld
push
ret
aaa
std
(bad)
(bad)
js
in
mov
test
push
or
dec
ret
(bad)
(bad)
dec
dec
dec
xor
pop
pushf
inc
adc
xlat
test
fst
data16
or
(bad)
in
stos
nop
xchg
cmp
bound
sub
sub
push
push
mov
inc
xlat
mov
(bad)
(bad)
call
jp
xchg
jl
imul
out
aam
dec
or
pop
xchg
pop
sub
xchg
gs
fdivrp
(bad)
(bad)
jmp
pop
cmp
and
clc
mov
fwait
xchg
out
mov
cmp
(bad)
out
(bad)
(bad)
dec
mov
mov
jo
sbb
mov
push
jne
cmp
push
xor
xchg
push
sbb
(bad)
(bad)
(bad)
dec
xchg
outs
hlt
sti
or
daa
pop
cmps
pop
daa
dec
fnstenv
aam
push
test
inc
test
mov
jmp
jmp
pop
push
xor
xchg
and
mov
dec
pop
dec
mov
xchg
pop
dec
pop
fsubrp
(bad)
inc
stc
pop
inc
loope
icebp
(bad)
dec
std
inc
cmp
sub
or
adc
xor
daa
repz
cld
dec
mov
mov
jle
sar
cmp
mov
hlt
mov
sub
xchg
cmp
retf
push
dec
sub
fs
retf
mov
sti
inc
jmp
bound
xor
push
adc
push
and
adc
jmp
dec
inc
test
(bad)
(bad)
inc
mov
add
cmp
movs
pop
dec
mov
scas
pop
pusha
movs
dec
fimul
daa
mov
lods
xchg
dec
clc
jae
cmp
xor
jne
push
cdq
into
out
push
call
or
and
and
das
dec
lock
jmp
mov
das
clc
(bad)
dec
lods
mov
push
sub
inc
or
mov
(bad)
(bad)
jmp
test
addr16
fnsave
ficom
out
pop
or
shl
cdq
jae
outs
cmp
cmp
(bad)
(bad)
dec
sub
repz
push
push
and
and
inc
sbb
(bad)
(bad)
(bad)
fild
mov
and
push
xor
scas
mov
int
inc
adc
cmp
pusha
mov
jmp
mov
iret
mov
xor
retf
int3
add
(bad)
dec
loop
(bad)
sbb
test
or
mov
ret
push
sbb
push
xchg
(bad)
(bad)
(bad)
dec
pushf
or
pop
(bad)
test
cmp
sub
sbb
in
(bad)
push
push
scas
call
(bad)
fisttp
ret
aam
xchg
ret
arpl
xchg
mov
icebp
jl
jecxz
and
es
pop
add
les
pop
js
add
retf
js
aam
sbb
dec
cs
ficom
mov
ret
bound
jo
inc
ds
dec
test
(bad)
inc
cld
xchg
add
and
imul
icebp
sbb
sbb
mov
aaa
cld
(bad)
jmp
pop
or
fnstenv
adc
sbb
or
mov
popf
jl
xor
outs
outs
and
(bad)
stc
test
push
fisub
ja
outs
push
xchg
xchg
mov
mov
(bad)
(bad)
(bad)
dec
repnz
repz
sub
call
cld
push
(bad)
sar
cmps
(bad)
rcl
aad
(bad)
(bad)
(bad)
jmp
popf
repnz
std
jmp
jecxz
repnz
aad
jg
cdq
std
ss
imul
dec
xor
aas
sbb
xchg
imul
(bad)
(bad)
(bad)
push
adc
mov
or
push
lahf
in
jg
xor
jns
push
aas
ret
dec
(bad)
fwait
pop
inc
dec
fist
(bad)
aas
adc
mov
inc
lds
jbe
(bad)
in
(bad)
add
push
rol
adc
pop
shl
jb
cs
cmp
cld
(bad)
call
retf
neg
pop
iret
(bad)
jmp
loopne
mov
(bad)
(bad)
fild
sbb
mov
fcompp
repnz
and
mov
call
mov
fcom
xor
lea
ficomp
popf
lods
push
mov
xchg
inc
sbb
cmp
(bad)
push
sbb
jmp
mov
fild
add
(bad)
fcomp
cld
cmp
(bad)
and
sti
mov
in
dec
xor
dec
jnp
xor
call
pop
xor
xchg
xchg
adc
ja
push
and
sub
call
repz
mov
cld
mov
push
push
in
xchg
mov
cli
(bad)
call
std
loop
(bad)
ja
outs
fisttp
jbe
mov
stos
(bad)
(bad)
(bad)
(bad)
out
in
scas
(bad)
push
enter
xchg
mov
mov
push
retf
shr
loop
sub
lock
fdiv
push
pop
lea
(bad)
xor
dec
les
xor
(bad)
xchg
adc
dec
jnp
arpl
and
sti
sbb
(bad)
(bad)
call
sbb
lock
aad
mov
mov
cmc
pop
mov
mov
(bad)
jg
jmp
(bad)
jg
fisttp
pushf
loopne
jl
pop
mov
out
jg
xchg
and
add
in
pop
push
fbld
mov
ret
push
sub
mov
xchg
xor
call
call
ret
(bad)
jp
out
ds
cdq
pusha
repnz
jp
lock
aaa
cld
(bad)
call
mov
daa
or
inc
pusha
pop
sub
fidiv
adc
xchg
bound
pop
(bad)
(bad)
call
loopne
pushf
popa
cmp
add
fld
in
mov
ins
dec
dec
sar
sub
outs
jl
push
push
xor
jmp
scas
fdivrp
(bad)
(bad)
(bad)
jg
setg
and
fbstp
div
out
(bad)
xchg
jno
sbb
sub
push
cld
minps
push
fsubr
push
mov
pop
sub
(bad)
mov
or
ins
xor
pop
call
(bad)
(bad)
clc
cmp
fist
push
jmp
in
mov
lds
pop
clc
pcmpgtb
push
rcl
pop
inc
loopne
sub
out
push
and
cmp
mov
call
mov
jl
jmp
fimul
stos
adc
(bad)
(bad)
pop
mov
das
and
lahf
add
call
(bad)
sbb
dec
adc
sbb
sub
adc
test
(bad)
fisub
das
add
lahf
std
(bad)
sbb
sti
lods
out
xchg
aas
mov
pop
popf
aad
sahf
cmp
mov
(bad)
(bad)
fnstenv
pop
in
and
jmp
ja
mov
adc
dec
pop
pop
ja
sahf
movs
mov
adc
mov
jmp
mov
(bad)
cli
sub
(bad)
jmp
rcr
add
(bad)
mov
dec
cld
loope
lea
(bad)
(bad)
inc
icebp
movs
xchg
enter
pop
outs
(bad)
lods
jl
jg
fmul
inc
jg
fwait
lods
cmps
mov
mov
mov
cmc
xchg
adc
ins
imul
add
ltr
pop
aas
(bad)
(bad)
(bad)
(bad)
scas
call
sahf
cdq
data16
stc
loopne
jne
fucomi
in
and
ror
inc
xchg
push
or
pop
fs
call
push
shl
inc
retf
push
cld
(bad)
(bad)
(bad)
jmp
pop
cmps
sbb
and
int
inc
aaa
sbb
(bad)
fdivr
cmp
bound
das
sar
dec
lock
sbb
test
jae
mov
dec
cmp
add
in
adc
shl
arpl
or
fcomp
jnp
xchg
(bad)
(bad)
call
pop
jne
jmp
push
mov
lea
inc
ret
data16
push
loopne
out
not
(bad)
(bad)
(bad)
(bad)
mov
loop
jl
scas
js
or
push
jnp
jno
jb
pop
mov
adc
ja
fadd
mov
jnp
mul
ins
jl
mov
idiv
retf
(bad)
push
pusha
mov
rcl
mov
je
push
sbb
nop
in
pop
pop
in
cmp
icebp
(bad)
(bad)
jmp
mov
or
push
push
mov
sub
pop
mov
(bad)
(bad)
(bad)
fild
push
out
cmp
aam
jecxz
lock
ins
xor
mov
test
adc
(bad)
(bad)
push
ror
sbb
mov
arpl
test
enter
sub
jmp
(bad)
inc
and
ja
stc
mov
(bad)
mov
push
cmp
xor
(bad)
(bad)
call
rcr
mov
and
cs
enter
outs
push
lds
add
inc
or
mov
jbe
add
mov
loop
push
(bad)
jae
(bad)
call
lds
into
rcl
neg
sahf
mov
aaa
xor
dec
js
or
xrelease
and
push
retf
mov
stos
shl
add
adc
call
loopne
lahf
or
stc
ret
mov
stc
mov
in
push
pop
xor
pop
sub
(bad)
(bad)
jmp
sub
adc
jmp
adc
pop
data16
cmps
popa
shl
mov
sub
sub
in
pop
inc
fisttp
push
dec
movs
fwait
es
pop
xor
movs
sub
(bad)
(bad)
(bad)
dec
jno
stos
or
retf
in
xor
inc
jp
add
test
adc
sbb
push
jnp
or
stos
pop
aam
out
fidivr
clc
ja
adc
jnp
mov
outs
(bad)
(bad)
call
ins
sub
sbb
bound
lea
push
push
stos
pop
idiv
loop
addr16
(bad)
dec
nop
push
jmp
mov
push
inc
xor
sub
pop
stos
call
xchg
inc
add
pop
and
jecxz
push
cmp
in
add
dec
cld
fimul
mov
(bad)
push
pop
jp
mov
sahf
pop
add
repz
lea
dec
and
xor
inc
pop
inc
xchg
outs
outs
in
(bad)
pop
xchg
pop
or
mov
pushf
dec
sub
xor
(bad)
(bad)
(bad)
call
sbb
adc
mov
test
sbb
(bad)
pop
cmp
xor
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
push
dec
mov
add
dec
pushf
cdq
mov
pop
mov
and
pop
(bad)
(bad)
mov
test
cdq
loope
jecxz
mov
mov
dec
mov
dec
leave
movs
push
(bad)
out
cli
jae
dec
sbb
push
aas
je
pop
and
xor
adc
shl
in
adc
or
test
mov
(bad)
(bad)
(bad)
jg
aad
sbb
push
push
test
hlt
repz
adc
add
inc
dec
sti
and
(bad)
(bad)
mov
je
inc
test
dec
sar
fidivr
push
repnz
inc
inc
icebp
jle
push
jns
push
loop
push
dec
jb
test
mov
sbb
push
test
sub
into
and
lods
cmps
lds
popf
das
inc
fsubrp
adc
stos
(bad)
(bad)
jmp
ret
inc
cmp
movs
shl
call
movs
add
outs
std
pop
cmc
(bad)
call
icebp
sbb
xor
jmp
xchg
es
clc
(bad)
(bad)
jmp
rol
mov
iret
or
nop
sbb
jmpw
pushf
or
(bad)
jmp
xchg
cmp
icebp
xor
sub
dec
dec
mov
sar
dec
add
mov
mov
clc
mov
nop
retf
fwait
dec
mov
or
sub
mov
(bad)
jmp
aas
push
(bad)
pusha
xor
or
or
mov
test
not
pop
std
(bad)
(bad)
jmp
push
imul
sub
int
mov
xor
das
sbb
(bad)
(bad)
mov
aaa
jo
addr16
les
in
cmp
and
pop
push
cmps
push
pop
pop
hlt
(bad)
call
pop
or
std
gs
and
pushf
jno
inc
in
add
(bad)
push
add
fld
test
inc
xchg
adc
inc
cmp
mov
xchg
leave
fild
or
ja
sbb
sbb
pusha
hlt
cmp
or
push
ins
cli
aad
or
sub
out
mov
jbe
sub
mov
(bad)
(bad)
inc
call
pusha
loopne
mov
dec
bound
pop
push
les
scas
loopne
(bad)
(bad)
jmp
sub
xchg
or
in
mov
iret
test
xchg
or
aas
into
ins
cmc
test
outs
ret
or
and
and
mov
test
lods
pop
pop
jge
(bad)
(bad)
mov
jl
cwde
xchg
adc
add
cmp
mov
xor
ret
and
(bad)
jg
hlt
gs
and
pop
sub
xor
jle
xchg
call
je
int3
call
jmp
add
xchg
shl
ret
push
push
les
je
mov
(bad)
(bad)
(bad)
jmp
es
xchg
mov
cmp
inc
xchg
dec
add
mov
inc
mov
push
fisubr
(bad)
(bad)
dec
movs
and
mov
call
adc
in
mov
sub
adc
test
cmp
(bad)
dec
push
shl
popf
adc
(bad)
into
push
dec
out
test
(bad)
addr16
xchg
jmp
fs
rcl
nop
outs
cmp
cmp
pop
mov
mov
mov
jg
push
xchg
jno
pop
(bad)
mov
adc
bound
pop
repnz
or
fs
inc
dec
retf
retf
scas
push
inc
into
or
cld
scas
inc
dec
sub
pop
jg
lods
xchg
rcl
iret
inc
add
(bad)
push
jecxz
fwait
stos
push
les
(bad)
popf
popa
popf
mov
test
or
jmp
mov
mov
ret
scas
inc
(bad)
cli
(bad)
mov
add
sbb
popa
test
(bad)
jg
mov
mov
(bad)
or
jno
sbb
xchg
pusha
add
(bad)
jg
dec
inc
xor
mov
xor
jmp
idiv
mov
pop
icebp
das
clc
mov
cmc
jne
sbb
enter
push
mov
sub
adc
adc
dec
and
int
mov
pusha
push
jg
rol
mov
mov
int
int
dec
inc
mov
sbb
ds
mov
lds
(bad)
(bad)
call
adc
inc
inc
(bad)
call
push
ins
add
ss
in
out
cmps
arpl
call
mov
pop
jl
sub
(bad)
(bad)
(bad)
call
sbb
sub
retf
pop
not
lea
cld
push
retf
es
(bad)
call
stos
out
sbb
sbb
mov
dec
jb
dec
adc
(bad)
(bad)
(bad)
mov
mov
add
sub
or
jno
in
xor
mov
mov
(bad)
int3
or
(bad)
(bad)
(bad)
jmp
pop
popa
inc
inc
xchg
out
bound
shl
mov
xor
pushf
movs
add
inc
cs
xchg
pop
xor
(bad)
mov
xor
xor
mov
movs
inc
adc
inc
push
shr
push
leave
clc
(bad)
dec
ds
cmp
mov
pusha
or
adc
adc
pop
jo
fsubr
and
jns
mov
xchg
movs
lods
push
inc
lea
nop
mov
movs
retf
out
xor
rcl
mov
pushf
mov
adc
sub
adc
cmp
popa
dec
or
push
or
aad
arpl
xor
(bad)
(bad)
jmp
pop
cmp
out
and
call
cli
push
adc
in
(bad)
(bad)
(bad)
jmp
sub
sar
sbb
dec
jp
fnstcw
sub
sub
js
int3
inc
fwait
mov
aam
(bad)
(bad)
call
inc
int
outs
xor
adc
adc
cwde
stos
dec
inc
mov
and
inc
inc
or
cmps
test
mov
xchg
xor
push
in
repz
xor
mov
in
pop
or
jecxz
in
iret
call
std
aaa
rol
in
hlt
lea
xor
imul
loope
add
xor
cwde
mul
xlat
push
rsm
mov
icebp
jae
pop
(bad)
(bad)
(bad)
mov
inc
push
pop
mov
mov
and
fldcw
jmp
gs
pusha
mov
(bad)
inc
sbb
jns
fsubr
push
mov
loope
add
clc
retf
inc
xor
mov
loope
out
push
mov
fdivr
stos
pop
xor
mov
xlat
ds
rcl
xchg
(bad)
out
cli
inc
dec
jmp
mov
xchg
sub
jns
aas
sbb
(bad)
(bad)
call
jle
loopne
into
cmp
inc
pop
imul
push
pop
(bad)
sub
lock
xchg
sbb
mov
in
(bad)
dec
test
(bad)
xchg
test
pcmpgtw
adc
jnp
(bad)
(bad)
mov
adc
(bad)
ds
sbb
push
mov
xchg
cli
enter
popa
(bad)
jmp
lea
ret
sbb
clc
push
into
sbb
mov
mov
mov
scas
mov
xchg
push
dec
fdivr
mov
jb
push
popf
xor
(bad)
(bad)
(bad)
cmp
jb
xor
test
dec
sbb
enter
jnp
xor
inc
mov
(bad)
(bad)
fidivr
cmp
loope
xchg
test
pop
mov
bound
stos
inc
inc
(bad)
(bad)
(bad)
call
cmp
pop
xchg
ds
and
rcr
psrad
cmp
sbb
adc
js
mov
popa
dec
and
frstor
add
das
js
jmp
stos
pusha
mov
add
or
inc
mov
mov
mov
xor
gs
jle
fwait
push
jecxz
cli
lods
push
push
mov
js
or
int3
(bad)
push
dec
cwde
xchg
pop
loopne
(bad)
out
pop
mov
arpl
jge
nop
xchg
out
jp
aas
das
add
aaa
push
jp
sbb
sub
xor
pop
pop
mov
xchg
sbb
(bad)
(bad)
push
xor
push
int
jmp
fwait
pushf
jbe
mov
test
lock
jmp
adc
mov
sub
aad
sbb
mov
add
dec
cmp
imul
xor
jb
out
add
mov
push
mov
ja
push
sbb
fstp
xchg
int3
jg
jle
fcomi
dec
aam
sub
ds
dec
mov
into
(bad)
cmc
push
lock
(bad)
lock
mov
js
inc
mov
test
mov
add
je
es
jp
and
mov
sub
cmps
sbb
push
(bad)
jmp
mov
out
out
mov
sub
adc
and
sbb
add
ins
scas
retf
add
mov
jp
fs
out
out
(bad)
(bad)
jmp
cld
test
dec
iret
bound
imul
stos
push
in
cmovae
mov
cmp
test
jb
(bad)
jmp
and
jb
aaa
pop
cmp
mov
add
mov
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
into
pop
dec
in
or
cmc
fisubr
push
ret
or
mov
sub
pushf
(bad)
(bad)
(bad)
dec
(bad)
mov
push
and
pop
xchg
push
cmps
test
scas
xchg
call
mov
sbb
pop
repz
cwde
pop
dec
adc
and
nop
add
int3
int
aam
(bad)
(bad)
push
pop
rol
ss
retf
fild
pop
aaa
mov
mov
fnstenv
dec
cmp
jae
(bad)
(bad)
(bad)
inc
rol
jae
fimul
add
jae
and
jno
xlat
loope
lods
repnz
repnz
loop
(bad)
jg
(bad)
xchg
sub
cs
les
not
enter
xchg
fisttp
scas
xlat
push
cld
js
dec
push
xchg
aaa
enter
pop
daa
mov
mov
or
(bad)
(bad)
mov
add
cmps
mov
mov
sbb
mov
aaa
cmps
je
cs
out
xchg
(bad)
push
mov
push
push
and
in
(bad)
(bad)
push
es
sti
jno
ins
in
jbe
sub
test
stos
or
add
dec
es
and
icebp
sbb
inc
mov
pop
arpl
icebp
aaa
add
leave
loop
xor
(bad)
(bad)
(bad)
cmp
jns
inc
outs
or
pop
movs
aad
fst
aaa
lods
int
fst
jns
adc
scas
enter
sub
mov
pop
sahf
sbb
ins
adc
icebp
dec
outs
cs
pop
and
gs
push
(bad)
(bad)
(bad)
jmp
jne
cmp
pop
arpl
arpl
mov
stos
mov
inc
(bad)
(bad)
jg
in
jecxz
lods
xor
inc
repz
and
push
mov
xor
(bad)
(bad)
(bad)
push
lods
je
mov
sbb
out
hlt
(bad)
jbe
pop
pop
jl
bound
jne
add
(bad)
call
xchg
sub
lds
sub
(bad)
jg
jecxz
scas
ret
jnp
push
jno
in
hlt
jg
xor
fnstsw
cli
call
pop
mov
cwde
in
or
push
(bad)
jmp
inc
scas
scas
or
jp
loope
jbe
scas
lock
mov
pop
fdivr
(bad)
(bad)
dec
dec
retf
scas
dec
fwait
mov
fwait
cmps
xor
aad
mov
ins
loope
inc
pusha
std
cmc
(bad)
fucom
or
push
(bad)
psubw
mov
xor
jne
ficomp
mov
mov
lds
push
lods
test
xlat
xchg
pop
mov
stc
ds
(bad)
imul
inc
ins
ins
aas
std
lods
mov
jge
adc
cdq
enter
mov
dec
div
(bad)
(bad)
(bad)
call
lods
sbb
mov
neg
sub
sbb
aad
cmps
xor
into
dec
not
imul
sub
xor
cmps
jl
sar
add
sti
and
scas
push
ins
adc
movs
cli
clc
(bad)
inc
retf
aaa
dec
jl
mov
ins
iret
repnz
(bad)
push
mov
int
adc
into
sti
sar
aaa
or
xchg
xchg
pop
stc
push
push
out
pop
(bad)
mov
cmps
push
cld
aad
dec
lock
(bad)
xor
test
fstp
cs
xor
sub
gs
(bad)
dec
mov
mov
dec
and
xlat
movs
xchg
sub
jl
sti
jecxz
lods
push
(bad)
(bad)
dec
fdiv
daa
enter
mov
outs
stc
(bad)
pop
mov
ins
call
lock
cld
mov
repnz
cmp
fistp
xor
sub
mov
outs
adc
mov
div
dec
lock
popa
mov
out
shr
aas
cmp
in
bound
and
(bad)
(bad)
fcomip
(bad)
in
loop
out
sub
jnp
jb
dec
adc
pop
mov
mov
(bad)
(bad)
jmp
push
push
pop
pop
jns
xor
xchg
mov
das
das
or
push
jl
(bad)
(bad)
fistp
iret
pop
xchg
ins
bound
push
sar
xchg
mov
(bad)
(bad)
dec
push
inc
push
mov
sub
in
test
add
les
sti
inc
(bad)
(bad)
(bad)
(bad)
jge
and
jae
mov
test
xchg
mov
inc
push
rcr
cli
mov
mov
repz
(bad)
jg
icebp
test
ror
xchg
ret
mov
or
(bad)
(bad)
push
adc
or
or
iret
je
lds
sar
ins
imul
loope
(bad)
(bad)
(bad)
jmp
pop
cmp
push
mov
sbb
sahf
and
cli
clc
pop
mov
adc
jg
loop
sbb
mov
loop
ret
sbb
sbb
push
pop
adc
(bad)
call
sar
movs
pmaxsw
pop
lahf
(bad)
out
dec
jl
stos
(bad)
xchg
add
sahf
xlat
(bad)
(bad)
(bad)
call
and
pushf
dec
adc
inc
adc
lahf
pop
mov
sbb
scas
mov
mul
or
jne
sub
aas
inc
dec
sub
jnp
sub
fcom
pop
and
(bad)
jmp
jnp
ret
arpl
push
loopne
push
cmp
repnz
cld
inc
push
shl
xlat
or
(bad)
jo
movs
in
sar
psubb
lahf
repnz
in
test
add
(bad)
inc
sti
sub
jg
in
push
retf
clc
inc
inc
enter
popa
push
je
call
jbe
mov
inc
in
(bad)
jp
xchg
neg
(bad)
(bad)
out
lods
fwait
les
jmp
es
pop
mov
pop
xchg
mov
std
dec
shl
sub
(bad)
(bad)
out
cli
movs
outs
mov
push
les
mov
pushf
jp
pop
imul
jl
fidivr
lea
pop
(bad)
js
mov
sbb
inc
je
xor
cld
in
mov
scas
test
push
cld
imul
mov
mov
sbb
jo
push
jne
lock
outs
clc
inc
std
in
(bad)
mul
gs
popf
add
fidiv
scas
clc
jmp
ins
push
pop
adc
or
add
es
and
pop
lea
repz
jmp
clc
test
and
pop
inc
aad
push
pop
popa
mov
cmp
out
(bad)
(bad)
(bad)
jmp
or
repz
sbb
sub
retf
add
pop
adc
(bad)
mov
push
sbb
or
(bad)
call
mov
nop
dec
adc
test
test
ds
inc
push
push
fstp
add
pop
push
and
cmp
push
mov
push
dec
imul
leave
or
jp
push
jle
mov
mov
into
out
push
sbb
dec
adc
je
fsubr
(bad)
push
sahf
outs
mul
push
xchg
jbe
in
(bad)
inc
cld
out
cmp
in
push
stos
pushf
jmp
and
dec
mov
addr16
mov
dec
or
bound
jno
and
xchg
xchg
(bad)
(bad)
dec
xchg
mov
dec
xlat
in
ret
or
repz
push
jmp
xchg
jle
sbb
sti
mov
jmp
ins
fwait
out
mov
(bad)
stc
fdivr
push
pop
pop
nop
aad
mov
(bad)
(bad)
jp
movs
(bad)
(bad)
(bad)
push
and
jo
fld
jl
sbb
cmp
test
(bad)
(bad)
(bad)
jmp
lods
inc
cdq
and
sub
or
cmp
xchg
dec
xchg
xchg
xor
scas
mov
push
cmp
xchg
push
fucom
in
mov
inc
sbb
div
inc
and
xchg
xchg
adc
out
adc
inc
xchg
test
(bad)
(bad)
(bad)
jnp
fidivr
mov
nop
sbb
xchg
jmp
sub
dec
addr16
pop
xor
adc
add
data16
retf
pop
xchg
pop
mov
loope
(bad)
(bad)
dec
cmovno
inc
test
(bad)
push
mov
mov
xor
mov
mov
cld
(bad)
(bad)
inc
sbb
retf
stos
xor
xor
adc
xchg
fisttp
inc
sar
dec
lods
sub
dec
or
add
push
cmp
(bad)
(bad)
(bad)
jmp
xor
aas
add
push
inc
loope
add
dec
aam
cmps
fld
(bad)
(bad)
jmp
pushf
(bad)
sub
mov
pmullw
xchg
mov
loope
bnd
pop
cmp
pushf
test
ds
mov
mov
(bad)
(bad)
inc
je
test
mov
addr16
xchg
push
cmps
stc
lods
jge
jbe
jnp
stos
aam
(bad)
scas
ja
and
(bad)
cld
(bad)
push
or
nop
pop
lahf
inc
sub
or
push
ja
cs
aaa
adc
jg
pop
mov
cmps
sub
aad
mov
cmps
pop
jmp
fcomip
das
cli
ffree
aam
push
mov
pop
jmp
jo
sar
(bad)
(bad)
(bad)
push
mov
pop
and
hlt
jb
scas
jno
fnsave
dec
cs
jl
xor
lods
(bad)
(bad)
(bad)
call
and
movs
inc
(bad)
data16
(bad)
xor
or
(bad)
leave
test
jl
(bad)
(bad)
(bad)
dec
adc
cs
outs
pop
jl
test
test
pop
xchg
sub
iret
(bad)
(bad)
call
(bad)
addr16
jmp
mov
pushf
stos
xchg
mov
(bad)
(bad)
(bad)
call
adc
movs
jae
dec
jo
inc
retf
xchg
sub
in
pop
in
jmp
(bad)
dec
(bad)
mov
(bad)
(bad)
(bad)
(bad)
call
dec
and
xchg
inc
inc
sub
adc
vphaddudq
inc
leave
(bad)
pushf
iret
setl
cld
or
daa
fld
int3
dec
xchg
add
call
inc
push
xchg
inc
adc
pop
adc
jne
arpl
aas
push
into
dec
xchg
(bad)
mov
test
repz
and
mov
xchg
shr
(bad)
(bad)
fdiv
xchg
xchg
pop
xor
rcl
sbb
xor
add
mov
retf
pop
mov
pop
out
clc
and
cmp
dec
adc
dec
movs
or
adc
xor
fldenv
add
xchg
inc
rol
shr
xchg
(bad)
(bad)
jmp
adc
sub
inc
mov
inc
inc
inc
cmp
mov
cs
call
mov
(bad)
(bad)
call
inc
jp
mov
stos
bound
pop
inc
adc
ds
inc
mov
test
(bad)
(bad)
dec
cld
stos
shr
push
mov
inc
jbe
or
mov
add
pop
(bad)
(bad)
(bad)
dec
ror
adc
adc
dec
push
mov
cdq
add
lock
dec
hlt
ins
fsub
dec
jne
int3
mov
and
or
cli
scas
cli
adc
push
add
lods
mov
adc
(bad)
(bad)
(bad)
jp
loop
inc
pusha
fidivr
sbb
add
inc
add
rcr
mov
repz
test
mov
(bad)
cmp
ss
jl
inc
cmp
mov
push
sbb
in
hlt
jecxz
jns
inc
sub
mov
pop
dec
xchg
inc
mov
(bad)
(bad)
(bad)
push
ja
xchg
mov
push
(bad)
sbb
jo
jp
shl
loop
add
stos
pop
sub
cmp
mov
dec
sub
inc
(bad)
mov
rol
pop
add
or
cmp
in
lds
cdq
dec
pop
push
(bad)
(bad)
jmp
sar
and
ror
or
shl
fwait
sub
and
sbb
mov
(bad)
jmp
(bad)
xor
dec
and
lea
inc
cmp
add
cli
mov
dec
test
inc
sbb
movs
fwait
into
(bad)
mov
icebp
daa
(bad)
pop
sbb
mov
inc
mov
xchg
adc
add
push
xchg
xor
jge
ret
push
out
dec
sbb
push
rcl
or
loopne
sub
into
dec
rcl
movs
test
pop
ds
icebp
clc
pusha
test
(bad)
(bad)
mov
mov
mov
mov
out
aas
cmp
mov
lods
inc
push
xchg
retf
xchg
(bad)
(bad)
dec
js
sub
inc
sbb
push
pop
stc
push
arpl
aaa
mov
dec
push
sub
lods
aaa
sub
enter
inc
cwde
jmp
mov
(bad)
in
sub
and
in
and
jmp
lds
rol
and
dec
xor
sub
cmp
es
(bad)
(bad)
(bad)
cmp
or
mov
adc
and
arpl
adc
movs
outs
push
retf
jle
(bad)
(bad)
jmp
enter
stos
xor
push
lods
popf
xor
or
sub
sub
addr16
dec
repnz
inc
cld
lea
les
jae
xchg
and
xchg
adc
(bad)
push
cmc
jle
scas
(bad)
(bad)
dec
sub
adc
(bad)
ret
xor
xchg
mov
(bad)
leave
loope
pushf
(bad)
jmp
rol
ret
sub
sar
js
lahf
dec
adc
mov
lock
and
xor
pop
jp
dec
loopne
mov
cmp
inc
and
mov
or
adc
arpl
addr16
retf
aaa
jle
mov
jecxz
adc
mov
emms
or
je
(bad)
call
(bad)
fs
jp
sbb
and
and
pop
lds
test
fnsetpm(287
rcl
mov
call
or
in
mov
mov
enter
mov
(bad)
(bad)
call
dec
aaa
mov
dec
jno
inc
addr16
inc
pop
and
mov
xor
aaa
jl
push
(bad)
call
les
lds
mov
xchg
sbb
call
dec
fs
cli
sbb
popf
add
fs
(bad)
(bad)
mov
inc
in
nop
and
adc
sub
cld
leave
int3
cmp
pop
add
ins
repnz
(bad)
(bad)
(bad)
(bad)
js
pop
jae
ror
ja
lods
dec
outs
(bad)
mov
xchg
push
and
inc
inc
push
mov
inc
das
shl
xor
(bad)
(bad)
fild
xchg
add
adc
dec
ins
xchg
repz
out
int3
inc
icebp
(bad)
(bad)
and
(bad)
push
adc
cmp
mov
push
jo
mov
inc
or
fimul
push
mov
sbb
mov
sub
jne
(bad)
(bad)
push
add
pusha
xor
mov
ret
(bad)
fs
jae
push
ins
jmp
(bad)
(bad)
(bad)
call
repz
lods
scas
sbb
les
jg
push
or
sub
cmp
ds
pop
add
cmp
hlt
(bad)
(bad)
jmp
fidiv
push
das
in
cmps
jno
movs
add
into
mov
loop
imul
pop
push
cwde
dec
sub
test
pop
jmp
dec
sub
mov
div
cmps
sbb
adc
(bad)
jmp
mov
lds
iret
ror
pop
cmp
mov
lods
jmp
in
inc
mov
sub
data16
xor
fild
dec
jecxz
dec
add
jmp
nop
rcl
clc
jbe
push
sub
sbb
adc
mov
mov
rcl
(bad)
inc
test
fidiv
pop
xor
loop
scas
inc
push
sti
stos
fadd
mov
pop
test
cmps
stos
(bad)
iret
in
ss
mov
sub
or
cdq
mov
dec
fisttp
jmp
repz
rcr
fwait
mov
(bad)
mov
jmp
add
idiv
cmps
sub
sub
fistp
jbe
pop
loopne
imul
mov
lahf
cmp
mov
dec
jno
das
sar
cmp
retf
aam
or
mov
in
fcmovu
stc
stc
inc
jg
jmp
cdq
stos
ret
fist
test
and
mov
fnstcw
dec
inc
dec
xchg
loop
aas
pop
test
hlt
sub
push
ja
push
ss
(bad)
jg
adc
in
lds
xor
dec
jge
(bad)
(bad)
out
xchg
icebp
cmc
push
pop
adc
shr
mov
mov
jne
leave
jmp
cmc
(bad)
(bad)
jg
inc
or
push
fcomip
mov
pop
cmp
jmp
rcr
mov
(bad)
(bad)
call
mov
xchg
out
cmps
aam
adc
sub
retf
fadd
(bad)
hlt
test
punpckhbw
int
(bad)
dec
xor
fmul
push
adc
jb
lds
enter
(bad)
cmp
push
sti
xor
jmp
fs
and
popf
cmp
cmps
test
sub
push
mov
xor
mov
pop
popa
sub
sbb
adc
and
retf
in
in
test
mov
mov
ud0
(bad)
call
and
daa
lds
daa
mov
cmp
sub
(bad)
mov
mov
jecxz
ins
inc
jp
mov
xchg
dec
(bad)
pusha
iret
mov
imul
dec
push
add
add
jnp
pop
out
pusha
sub
arpl
cmp
(bad)
jmp
shr
sbb
jnp
or
into
ret
push
or
dec
sbb
cdq
xor
fldcw
call
push
mov
push
adc
mov
loopne
nop
mov
(bad)
(bad)
(bad)
jmp
xor
(bad)
mov
xor
inc
sbb
cmc
dec
(bad)
cdq
mov
cmp
jns
out
(bad)
(bad)
dec
cmp
mov
test
xor
adc
cdq
inc
push
std
cmp
movs
(bad)
(bad)
(bad)
push
retf
mov
ret
mov
iret
sbb
iret
pop
and
xor
shr
loope
push
inc
fucomp
dec
mov
cmps
movd
popa
push
(bad)
adc
dec
fimul
cmc
(bad)
inc
mov
add
fisubr
pop
pop
loopne
cmp
adc
std
cmp
mov
adc
cdq
ins
ins
(bad)
dec
jno
retf
clc
pop
aaa
jno
ret
and
pop
(bad)
(bad)
(bad)
push
hlt
jnp
or
inc
mov
mov
adc
es
mov
inc
call
mov
inc
das
push
jle
sub
mov
retf
sub
mov
(bad)
(bad)
call
dec
sub
test
loope
fmul
out
mov
xchg
aas
test
cld
ds
in
(bad)
lods
pop
(bad)
mov
out
jl
je
leave
jns
mov
mov
enter
fcom
push
sbb
pop
jp
(bad)
(bad)
jg
je
mov
adc
and
cdq
xchg
adc
lahf
ror
(bad)
mov
jbe
xlat
inc
movs
(bad)
push
std
dec
fidiv
shr
in
cmp
xchg
and
in
inc
add
ficomp
xchg
mov
mov
scas
int3
mov
in
adc
inc
ins
xchg
mov
call
rcr
loop
(bad)
pushf
cmp
jl
loope
xor
(bad)
(bad)
call
xchg
imul
(bad)
jp
mov
xor
and
(bad)
(bad)
(bad)
inc
pop
imul
leave
xor
and
adc
jmp
fnstenv
(bad)
(bad)
(bad)
call
push
stos
fs
aad
mov
dec
cmps
iret
cmp
into
aam
sbb
jmp
or
mov
cs
dec
shl
jo
xlat
(bad)
(bad)
call
lds
mov
(bad)
aaa
inc
adc
mov
pop
or
jg
dec
fisub
mov
and
dec
stc
cmc
loope
push
push
sub
pop
xor
xchg
sub
(bad)
(bad)
(bad)
dec
and
dec
push
fwait
jno
mov
mov
xchg
bound
retf
mov
lea
shl
aad
(bad)
(bad)
ftst
test
push
jno
mov
push
fisubr
(bad)
(bad)
(bad)
inc
fldcw
mov
shr
sub
in
sar
xor
pop
adc
sbb
(bad)
(bad)
inc
fnstenv
mov
and
xchg
xchg
xchg
xchg
sti
ror
mov
inc
(bad)
(bad)
(bad)
call
xor
push
adc
je
add
mov
mov
(bad)
push
add
retf
in
leave
data16
(bad)
(bad)
(bad)
push
mov
mov
enter
mov
pop
in
(bad)
ficom
loop
sub
add
(bad)
(bad)
out
sbb
xchg
mov
push
inc
sbb
jbe
jno
je
push
(bad)
(bad)
(bad)
dec
cwde
sub
and
in
push
jmp
cld
dec
call
adc
cmps
rcr
push
ins
jbe
jl
inc
scas
inc
xchg
fmul
aam
repnz
adc
mov
jmp
std
pop
ins
dec
jbe
inc
mov
mov
dec
retf
inc
movs
je
mov
jmp
(bad)
(bad)
jmp
(bad)
aad
mov
outs
fild
jno
add
imul
lock
out
stos
mov
(bad)
(bad)
call
or
pop
add
call
xchg
adc
fcmovne
loop
push
sub
lahf
sub
stos
pusha
and
push
lahf
leave
movs
pusha
dec
adc
stos
(bad)
(bad)
(bad)
mov
push
in
cmps
push
xchg
mov
int3
stos
repz
js
pop
(bad)
enter
xchg
fild
(bad)
js
or
jno
movs
pop
pop
stc
cmps
and
sti
pop
les
out
sbb
mov
xor
xchg
lahf
hlt
jg
bt
in
icebp
jmp
dec
push
int
call
(bad)
mov
inc
lahf
dec
enter
mov
jmp
pop
jns
imul
in
sub
(bad)
sti
(bad)
mov
icebp
jae
sar
sub
xor
(bad)
mov
aas
xchg
iret
(bad)
es
(bad)
(bad)
(bad)
inc
dec
loopne
pusha
enter
outs
(bad)
mov
std
push
cdq
cld
aas
daa
ds
std
pop
mov
call
cmc
cmc
scas
lock
outs
test
inc
hlt
imul
fldcw
dec
push
xor
cmps
cmc
mov
loope
daa
jecxz
lock
(bad)
stos
sub
pop
inc
addr16
fistp
jmp
pop
dec
push
hlt
sbb
(bad)
(bad)
mov
stc
pop
mov
xchg
mov
sti
arpl
xchg
(bad)
clc
jmp
push
cld
jmp
jge
loope
sar
jg
xor
sti
adc
mov
mov
add
mov
enter
in
div
vmovdqa
pop
in
loope
jo
mov
jmp
cmp
xor
arpl
movs
std
mov
clc
int
cmp
jae
jg
dec
out
dec
fdivr
push
ins
out
and
add
aas
lods
pop
shl
cmc
daa
xlat
mov
mov
mov
addr16
lock
cld
xor
or
xor
shl
(bad)
clc
mov
(bad)
jnp
mov
clc
jne
sti
and
pop
movs
movs
sbb
scas
xchg
ja
jge
and
hlt
sub
pop
xor
(bad)
mov
es
(bad)
(bad)
in
adc
mov
jmp
pop
test
retf
cld
cmp
push
inc
cld
push
xchg
dec
inc
mov
push
(bad)
(bad)
(bad)
cmp
sbb
mov
cli
inc
and
int
movs
inc
sti
inc
fstp
std
(bad)
(bad)
call
mov
sar
icebp
test
inc
lock
xchg
call
std
arpl
mov
and
adc
stos
cmp
sub
repz
stos
or
jmp
addr16
div
pusha
sbb
mov
jnp
call
bound
xor
adc
jbe
ret
(bad)
xchg
push
shl
fisttp
jmp
add
scas
aas
call
in
jg
inc
ins
xor
jnp
ret
cmp
ins
fidivr
jecxz
xor
in
fmul
shl
jecxz
cmp
outs
push
shl
dec
icebp
pop
cmp
(bad)
mov
add
mov
(bad)
(bad)
(bad)
fldcw
nop
jg
jns
mov
xlat
fisub
ins
test
scas
stos
fstp
icebp
bnd
(bad)
(bad)
mov
mov
jmp
sub
fdivr
out
aam
sbb
daa
jbe
mov
movs
fild
mov
into
mov
(bad)
(bad)
mov
fcmovnu
add
push
cmp
pop
pushf
jl
ins
loope
add
jecxz
dec
fist
test
imul
es
mov
adc
add
mov
add
ret
je
mov
inc
pop
(bad)
(bad)
(bad)
(bad)
clc
outs
pop
jle
fidiv
xor
fist
dec
loope
xor
sub
iret
and
js
xchg
(bad)
(bad)
(bad)
(bad)
fucom
and
sub
mov
mov
jmp
cwde
mov
dec
push
out
and
sub
lods
push
jg
push
test
xor
sbb
fnstenv
xlat
rcl
das
shl
cmc
test
pop
xor
ins
popf
mov
sbb
sub
lods
mov
inc
lods
push
cmp
movs
mov
push
dec
lahf
imul
push
clc
inc
mov
(bad)
in
test
and
push
test
bound
out
mov
cwde
push
fsub
cmp
repnz
xchg
jb
inc
aam
ret
(bad)
call
(bad)
iret
arpl
shr
fs
mov
(bad)
jmp
movs
inc
add
and
mov
push
retf
xor
jbe
mov
stos
push
test
mov
cmp
xchg
dec
sbb
mov
push
fisub
mov
movs
data16
jmp
ficom
xor
jae
push
cs
(bad)
(bad)
(bad)
dec
inc
test
sbb
mov
inc
xchg
dec
sahf
cdq
fs
push
dec
(bad)
(bad)
push
rcl
jl
mov
cs
mov
inc
cmc
or
(bad)
(bad)
call
fucom
dec
fdiv
mov
aad
ins
(bad)
aam
fldcw
jge
push
(bad)
aam
call
nop
xchg
movs
push
add
cmp
rcl
enter
mov
out
jbe
push
(bad)
adc
xor
fcomip
call
mov
(bad)
push
inc
sbb
push
jae
cwde
xchg
pushf
mov
adc
dec
add
add
dec
push
(bad)
dec
pop
and
ins
dec
mov
cdq
gs
pop
es
es
(bad)
in
xchg
mov
call
mov
imul
fadd
xchg
mov
mov
add
or
jg
(bad)
dec
call
xor
mov
scas
cmp
arpl
adc
cmp
dec
mov
xor
cmp
sub
xor
and
mov
mov
(bad)
(bad)
jmp
push
and
ror
push
sub
test
mov
hlt
(bad)
push
bound
jnp
nop
mov
inc
xchg
jge
jp
mov
sub
(bad)
(bad)
(bad)
call
fisttp
fistp
and
ret
mov
std
jecxz
out
xchg
ret
mov
pop
inc
dec
stc
in
into
adc
mov
stos
push
add
shl
adc
jg
dec
fcmovb
scas
js
gs
mov
push
mov
mov
mov
push
adc
ins
push
add
push
dec
adc
jne
jp
out
jnp
pop
call
mov
(bad)
imul
stos
call
xchg
sub
into
dec
mov
lods
loope
inc
mov
push
push
jecxz
jo
jmp
(bad)
sbb
fistp
and
stc
sub
clc
mov
xchg
dec
inc
stos
lock
(bad)
(bad)
jg
sbb
scas
and
xchg
test
ss
movs
ds
mov
in
sti
or
cmps
(bad)
push
or
dec
cmps
clc
add
test
enter
push
in
and
jbe
cdq
pop
and
dec
sub
jnp
mov
(bad)
(bad)
push
aaa
jne
cmp
mov
aad
mov
in
test
adc
mov
jmp
shl
dec
int3
add
and
gs
ins
mov
jmp
jp
cmps
fisub
fwait
and
sbb
scas
in
dec
adc
or
or
fist
and
inc
xchg
xchg
retf
movs
(bad)
(bad)
(bad)
(bad)
call
jo
push
xchg
push
dec
aaa
xchg
xor
cmp
xchg
mov
jno
and
jae
inc
(bad)
(bad)
(bad)
dec
dec
(bad)
stc
pop
xor
in
div
mov
nop
loope
pop
repz
dec
inc
lahf
cwde
nop
xchg
dec
out
cli
(bad)
jmp
jp
jb
sbb
sbb
adc
jl
repnz
xchg
in
mov
sahf
jmp
imul
ret
(bad)
retf
inc
sub
and
jbe
sar
(bad)
(bad)
call
rcr
push
sbb
push
cdq
push
mov
mov
sbb
aad
repnz
mov
(bad)
(bad)
dec
add
add
pop
popa
push
sar
pop
dec
xchg
int
jge
fst
mov
out
mov
ins
jmp
cld
imul
xchg
xchg
test
mov
test
cmps
ja
push
dec
les
ror
xchg
leave
mov
(bad)
(bad)
(bad)
cmp
inc
xchg
cmp
jae
xchg
fsub
sub
mov
adc
mov
scas
rol
jle
(bad)
(bad)
(bad)
call
mov
mov
shr
sbb
jmp
jns
stc
leave
and
push
sub
mov
fsubr
(bad)
(bad)
call
pushf
(bad)
imul
mov
dec
jecxz
mov
xchg
dec
in
test
scas
push
test
ret
sar
out
pop
push
std
(bad)
dec
pop
lock
xchg
call
adc
ss
(bad)
(bad)
dec
inc
dec
ins
mov
add
mov
call
xchg
xchg
enter
gs
and
fwait
push
call
pop
or
in
sub
stos
inc
rcr
push
pop
xor
jb
sub
(bad)
(bad)
jmp
dec
test
sub
and
mov
cmc
and
out
aam
cdq
dec
das
sahf
inc
xor
adc
mov
outs
(bad)
in
jae
je
add
xchg
jg
jg
test
inc
les
adc
mov
ficom
aad
into
inc
and
test
sub
(bad)
(bad)
(bad)
(bad)
mov
cmovs
ret
xchg
mov
in
ret
push
push
push
dec
(bad)
lods
repz
sahf
pushf
(bad)
(bad)
(bad)
inc
push
lea
add
xlat
or
retf
dec
lods
sub
rol
mov
(bad)
(bad)
dec
or
cdq
data16
mov
mov
sub
xchg
mov
fwait
ss
(bad)
(bad)
dec
inc
and
mov
sbb
(bad)
push
fstp
cmp
pusha
adc
xchg
imul
push
movs
dec
inc
dec
mov
cmp
add
mov
adc
ret
test
push
mov
inc
mov
mov
or
outs
cmc
xchg
ret
inc
shl
inc
mov
std
dec
xchg
test
out
gs
in
div
dec
xchg
fs
pop
cmps
into
pop
call
or
lea
add
jmp
mov
ror
xchg
es
jns
daa
add
push
stos
ret
pushf
mov
and
mov
mov
xor
loop
mov
cmp
out
mov
loope
or
xchg
xchg
mov
jae
int3
dec
retf
into
(bad)
xchg
cmps
lock
call
nop
xrelease
out
lods
push
adc
sub
(bad)
jmp
cld
mov
fnstenv
cwde
stos
push
in
mov
dec
dec
stc
push
data16
pop
xor
ror
(bad)
(bad)
jmp
mov
popa
sbb
dec
xchg
outs
ficomp
sub
ret
xchg
mov
xchg
sub
lahf
es
(bad)
(bad)
inc
pop
dec
inc
or
sub
js
fidivr
pop
in
adc
stc
mov
(bad)
(bad)
call
push
hlt
mov
mov
div
mov
mov
leave
inc
cwde
popf
xchg
mov
inc
je
addr16
and
adc
loop
adc
bound
cmp
(bad)
sub
(bad)
mov
into
xchg
data16
retf
ins
fimul
pop
dec
in
adc
idiv
dec
movs
cs
enter
pusha
dec
mov
jmp
mov
mov
push
pop
(bad)
call
mov
xchg
sub
je
lods
or
ror
sbb
jmp
(bad)
inc
pop
ja
xor
ja
cld
dec
ret
or
dec
mov
pop
imul
or
ror
lock
xchg
cs
mov
fidiv
cdq
mov
shl
pop
std
(bad)
jmp
and
(bad)
cmp
into
pop
mov
fnstenvw
sar
pop
inc
fldenv
pop
(bad)
movs
scas
xlat
ss
jmp
cmp
pushf
dec
inc
xor
jne
(bad)
inc
mov
shl
test
fwait
shl
and
(bad)
(bad)
dec
mov
mov
xchg
add
rcr
push
push
in
push
xchg
add
inc
cmp
jb
cmp
adc
jmp
call
or
repz
fnstcw
clc
mov
dec
cmp
pushf
dec
sub
rcr
push
mov
jnp
ins
(bad)
outs
fst
(bad)
call
or
int
mov
inc
pop
bound
scas
adc
and
aad
(bad)
(bad)
(bad)
jmp
iret
cdq
mov
data16
mov
jnp
xchg
jb
fstp
sbb
sti
sub
test
dec
mov
and
xlat
push
fdivr
mov
mov
push
mov
cli
(bad)
(bad)
mov
cmp
xchg
mov
lea
sub
sbb
arpl
leave
(bad)
(bad)
jmp
call
mov
shl
shl
jae
iret
mov
call
push
movs
xchg
ror
cmp
and
loop
aad
add
ficom
pop
sbb
fdiv
(bad)
call
inc
in
test
aad
xor
mov
movs
sbb
xchg
nop
retf
test
(bad)
(bad)
(bad)
jmp
bnd
jnp
sti
loop
int
pop
mov
pushf
mov
mov
dec
leave
inc
push
or
in
(bad)
(bad)
dec
ret
mov
mov
adc
iret
pop
ins
xor
fidiv
(bad)
(bad)
(bad)
jmp
cmps
ins
mov
dec
dec
sub
sub
inc
and
sub
ins
push
mov
lahf
addr16
gs
(bad)
call
stos
mov
pop
mov
daa
xor
sbb
adc
push
sbb
cmp
lods
icebp
out
xchg
pop
cli
(bad)
mov
add
pop
push
stos
je
(bad)
pop
sbb
clc
xchg
xchg
aad
stos
arpl
jp
(bad)
(bad)
jg
pop
scas
sti
mov
jnp
and
cmp
ret
fcmovnb
ins
(bad)
jmp
clc
(bad)
(bad)
push
cmps
pop
sbb
das
xor
jne
xor
xor
mov
(bad)
sbb
(bad)
mov
xchg
sbb
push
lea
(bad)
bound
jg
call
stc
ds
(bad)
push
stc
and
cwde
fwait
inc
sahf
fldenv
add
or
sti
xchg
pop
mov
(bad)
(bad)
in
cmp
cs
jp
pushf
sub
(bad)
push
imul
loope
cmp
aaa
add
(bad)
jmp
xchg
clc
pop
sahf
inc
jbe
push
pop
cmp
mov
ldmxcsr
fnsave
(bad)
sbb
add
(bad)
(bad)
(bad)
inc
lea
pusha
out
scas
sahf
imul
mov
fmul
icebp
(bad)
(bad)
dec
pop
cwde
jo
fmul
test
and
shl
(bad)
call
cld
stc
sbb
mov
mov
in
cmp
inc
ds
add
jbe
(bad)
inc
or
imul
inc
xchg
sbb
repz
(bad)
(bad)
inc
cmps
(bad)
dec
push
cdq
dec
sbb
xor
fyl2xp1
jecxz
xor
icebp
pop
or
scas
clc
mov
ins
rcl
int3
retf
mov
mov
(bad)
(bad)
call
(bad)
lods
push
or
jae
inc
(bad)
cli
xor
mov
pop
shl
inc
cmps
mov
(bad)
jmp
popf
fbstp
int3
sub
jl
xor
push
add
out
sub
retf
ins
test
out
rcl
fstp
fs
(bad)
(bad)
call
in
sub
out
mov
lods
mov
dec
cmp
sub
dec
sar
adc
and
pushf
and
cdq
or
(bad)
(bad)
call
push
mov
aam
mov
sub
into
pop
sbb
(bad)
(bad)
dec
cs
jae
cmps
mov
mov
je
jb
lods
jns
out
adc
pop
jmp
mov
xor
cmc
lods
inc
gs
dec
repz
sbb
cmp
(bad)
(bad)
mov
inc
popa
inc
icebp
(bad)
(bad)
fisttp
sbb
or
sar
js
imul
xchg
push
test
mov
cmc
movs
fwait
xor
mov
adc
call
(bad)
(bad)
(bad)
jmp
adc
hlt
mov
sbb
int3
pop
das
(bad)
add
sbb
test
mov
push
shl
(bad)
(bad)
mov
push
sub
scas
stc
(bad)
aam
mov
sub
out
add
cmp
(bad)
mov
push
pop
cmp
call
iret
sbb
(bad)
xchg
and
in
(bad)
dec
adc
aam
cs
movs
imul
jle
mov
mov
mov
icebp
(bad)
addr16
and
popa
mov
in
jbe
ja
pop
fmul
(bad)
(bad)
(bad)
jmp
inc
fwait
stos
dec
add
cmps
jbe
add
pop
xor
sbb
cmp
retf
cld
(bad)
(bad)
mov
arpl
cmc
cwde
add
mov
sbb
outs
in
sub
pop
mov
(bad)
(bad)
push
inc
test
push
dec
sub
leave
xor
mov
idiv
or
pop
ds
repnz
jmp
adc
test
(bad)
jg
sbb
add
clc
das
pushf
sbb
adc
push
cdq
call
ret
push
(bad)
(bad)
dec
ins
sbb
test
jecxz
mov
ret
or
dec
sub
push
fld
(bad)
dec
mov
(bad)
fdiv
dec
push
test
lods
pop
push
or
loopne
nop
inc
sub
(bad)
jg
nop
inc
cmp
mov
xchg
cmp
ror
push
mov
mov
jo
mov
fld
sub
fistp
fdivr
daa
addr16
fldenv
mov
movs
push
dec
mov
fsub
push
retf
jmp
icebp
retf
sub
mov
enter
(bad)
(bad)
(bad)
stos
sbb
mov
push
pusha
xchg
and
dec
bound
push
mov
mov
clc
(bad)
cmp
mov
sub
sub
sahf
test
lea
mov
pop
(bad)
(bad)
(bad)
call
jle
push
push
movlps
and
ja
mov
js
add
inc
les
mov
mov
inc
or
retf
or
fld
xor
push
loop
cli
mov
add
adc
test
push
sub
cmps
adc
push
add
cmp
(bad)
(bad)
(bad)
jmp
or
rcr
movs
out
les
call
pop
push
or
xchg
pop
and
loop
inc
cld
rol
mov
(bad)
push
pop
fwait
movs
sub
enter
mov
sub
cli
aad
mov
and
bound
jl
out
inc
push
jg
(bad)
jmp
popa
jmp
imul
mov
aad
adc
call
(bad)
jmp
fstp
mov
sbb
mov
into
adc
cmp
mov
inc
and
rol
cmp
dec
or
stos
test
daa
lods
xor
into
aad
aaa
cld
jmp
(bad)
mov
pop
test
push
(bad)
out
sbb
fsub
xor
push
jmp
push
dec
mov
and
outs
inc
mov
push
or
adc
and
add
jmp
jmp
xor
jb
xchg
adc
cmps
xor
fdivr
sub
inc
xchg
addr16
addr16
xor
jmp
call
push
inc
in
adc
or
add
inc
sbb
movs
ja
push
add
xlat
jl
cs
(bad)
(bad)
dec
mov
mov
cmc
retf
mov
mov
retf
mov
mov
(bad)
mov
imul
outs
push
data16
imul
repz
add
int3
rol
pop
sbb
xchg
enter
(bad)
(bad)
(bad)
call
adc
fdiv
adc
test
adc
jl
inc
addr16
mov
pop
lock
popf
sbb
sub
xor
sbb
sub
push
(bad)
clc
inc
sub
pop
(bad)
ficom
push
jns
sbb
dec
pop
test
push
stos
cmp
jb
(bad)
(bad)
inc
nop
adc
dec
jmp
inc
xlat
dec
cmp
pop
(bad)
lds
sub
(bad)
(bad)
(bad)
mov
mov
add
fisttp
inc
es
mov
xor
and
pop
lock
stos
inc
mov
fadd
lods
inc
addr16
pop
(bad)
(bad)
(bad)
mov
lods
test
gs
mov
cwde
xchg
cmp
fmulp
mov
pusha
in
hlt
sar
push
push
in
repz
jbe
cmp
std
std
mov
add
cwde
push
sub
push
sbb
or
xchg
xlat
mov
les
(bad)
(bad)
dec
iret
mov
(bad)
xchg
fidiv
scas
adc
dec
adc
and
rol
stos
(bad)
(bad)
(bad)
(bad)
out
xchg
movs
movs
and
xchg
out
test
xchg
loope
add
and
nop
and
inc
push
dec
test
add
int
mov
xchg
cmp
xor
(bad)
(bad)
(bad)
call
pop
pop
sbb
adc
adc
mov
jo
adc
pop
scas
int3
push
leave
cli
call
push
jbe
xor
mov
push
(bad)
(bad)
jmp
call
add
adc
fdivr
xor
dec
or
outs
ss
cwde
push
not
pop
mov
adc
dec
xor
(bad)
(bad)
mov
jmp
mov
xchg
inc
mov
push
cmp
dec
adc
ret
fidivr
sti
(bad)
sub
imul
cdq
push
mov
aas
push
jp
cli
lds
sbb
(bad)
jg
and
dec
sbb
mov
dec
xor
pusha
jno
rcl
(bad)
(bad)
dec
xchg
xchg
inc
sahf
jb
leave
jle
movs
ja
add
or
mov
out
adc
(bad)
(bad)
(bad)
(bad)
push
push
mov
aam
mov
sub
pop
sub
mov
or
add
dec
ins
ins
xor
jo
pushf
pop
jmp
ret
mov
iret
popa
push
or
xor
push
pushf
and
(bad)
mov
je
push
out
cmp
not
push
push
fsub
cld
inc
repz
out
retf
cmp
fild
mov
adc
jmp
add
push
jo
xchg
jmp
jne
inc
mov
or
cmp
(bad)
(bad)
jmp
mov
push
xor
daa
xor
xor
jnp
rcr
or
out
add
(bad)
call
stos
cdq
sbb
xchg
mov
rol
dec
enter
test
in
jge
ret
(bad)
call
scas
mov
jns
scas
pop
scas
in
in
and
mov
mov
(bad)
(bad)
push
stc
push
rcr
xchg
or
test
adc
gs
test
push
js
popf
pop
mov
addr16
push
rcr
je
(bad)
jg
fild
shr
and
ja
xor
in
mov
xchg
aam
xchg
call
aad
js
mov
jecxz
sbb
aaa
(bad)
dec
jge
neg
(bad)
(bad)
inc
cmps
call
test
mov
push
or
into
pop
aaa
repz
and
fisttp
sub
(bad)
in
jno
(bad)
aad
lahf
mov
jmp
aam
fcomip
and
out
outs
mov
and
push
aaa
or
(bad)
(bad)
dec
fwait
js
inc
mov
cmps
sbb
imul
adc
and
aaa
sub
jmp
xor
aad
imul
mov
push
adc
push
mov
(bad)
(bad)
push
jnp
sub
pop
(bad)
sub
retf
clc
pusha
cmp
ret
pop
cmp
ror
push
pop
(bad)
jle
jmp
adc
shl
jne
mov
push
push
and
(bad)
(bad)
call
(bad)
scas
mov
mov
sub
jo
and
mov
pop
adc
xor
dec
jmp
mov
(bad)
mov
adc
(bad)
(bad)
jmp
mov
mov
addr16
sahf
clc
dec
jb
lods
push
dec
push
out
sbb
push
retf
or
sub
(bad)
jmp
sar
stc
lods
dec
mov
jl
and
cmp
cmp
(bad)
call
add
movs
push
jmp
push
pop
or
inc
or
mov
cmc
(bad)
(bad)
(bad)
jmp
loop
sbb
cwde
jno
sub
jnp
xchg
cli
mov
or
(bad)
call
inc
xchg
push
and
nop
push
adc
test
mov
and
imul
push
sub
jo
push
(bad)
outs
or
adc
jp
cmc
add
(bad)
(bad)
(bad)
(bad)
ret
ret
into
adc
arpl
inc
pop
mov
cdq
out
icebp
mov
mov
rcr
(bad)
(bad)
call
retf
add
call
and
adc
jge
push
int3
jecxz
dec
clc
(bad)
(bad)
mov
fs
add
pusha
xchg
pop
or
sbb
(bad)
call
cmp
xor
int3
inc
jns
ins
pop
push
mov
(bad)
(bad)
mov
test
enter
je
dec
pop
push
xchg
mov
lods
dec
pop
aad
dec
fwait
cld
imul
(bad)
dec
je
inc
mov
adc
jbe
(bad)
mov
mov
pop
daa
push
std
xchg
pop
jmp
(bad)
cmp
aad
jb
(bad)
pop
push
sbb
mov
(bad)
das
mov
pop
sbb
adc
ret
(bad)
(bad)
fisttp
cld
jne
push
lahf
mov
outs
data16
popf
aaa
cmp
mov
(bad)
imul
and
mov
jmp
je
mov
lods
xchg
dec
lods
fld
(bad)
(bad)
fsin
xor
sub
pop
cmp
mov
enter
jmp
repnz
or
jnp
xlat
(bad)
ret
into
jb
in
(bad)
iret
mov
sub
leave
xlat
repz
(bad)
(bad)
dec
(bad)
xchg
imul
xchg
sbb
jb
inc
add
out
pushw
data16
jle
outs
(bad)
(bad)
(bad)
(bad)
jg
mov
shr
(bad)
in
pop
mul
(bad)
and
gs
and
enter
stos
(bad)
(bad)
call
xchg
ffreep
sub
call
stos
stc
cmps
int3
mov
(bad)
dec
imul
xor
sub
hlt
sbb
jb
loop
cmps
jae
or
dec
clc
inc
push
mov
mov
xchg
sub
jge
or
sbb
test
cs
and
(bad)
jmp
pop
int
not
aam
imul
add
hlt
(bad)
inc
jo
in
and
nop
outs
jmp
inc
adc
jmp
or
(bad)
(bad)
inc
xor
push
sbb
fdiv
mov
push
mov
xchg
test
push
in
bound
(bad)
(bad)
(bad)
fistp
js
xchg
mov
sub
pop
xor
mov
in
jns
xor
lods
jmp
sbb
dec
scas
mov
cmps
pop
push
clc
mov
dec
lea
call
(bad)
jmp
sbb
dec
jp
pop
ins
adc
lods
or
push
pop
retf
iret
mov
fwait
outs
out
(bad)
(bad)
(bad)
(bad)
in
sbb
cmp
data16
fldenv
es
pop
xor
inc
jo
mov
cmp
(bad)
inc
in
out
fxch
scas
dec
fistp
ins
mov
int
test
les
dec
mov
mov
adc
mov
lods
aas
jnp
xchg
mov
outs
das
outs
into
or
jbe
pop
repnz
(bad)
shr
inc
sbb
into
dec
push
jmp
sar
push
and
jle
in
fbstp
and
mov
inc
(bad)
shr
jg
push
pop
(bad)
jg
mov
(bad)
dec
xchg
(bad)
mov
mul
pop
sub
push
rcr
int
std
sub
(bad)
(bad)
(bad)
out
xchg
mov
bound
jmp
ds
outs
ret
aad
das
push
sub
into
push
xlat
in
in
out
neg
inc
dec
pop
cld
and
lods
sbb
retf
std
jmp
sar
jle
sub
ds
mov
(bad)
mul
sbb
xor
mov
(bad)
(bad)
(bad)
jle
out
(bad)
jno
jmp
frstor
add
xor
lahf
inc
sti
cmp
(bad)
(bad)
jmp
shl
clc
xor
lds
cld
mov
pop
int
in
cld
cmc
aam
lahf
imul
add
call
aad
cli
inc
aas
outs
xchg
sub
movs
sar
fisttp
aas
mov
aas
push
xor
xor
jne
mov
cld
(bad)
jg
cmp
dec
dec
out
in
push
xchg
xor
cli
push
mov
push
cwde
mov
lahf
call
jmp
pop
in
dec
je
out
les
mov
pop
fisub
jg
out
inc
adc
cmp
dec
lock
xor
test
(bad)
sar
sub
jle
cmp
cwde
test
int3
cmps
add
std
sbb
cmp
inc
push
xchg
mov
cli
cld
fisub
and
push
outs
das
clc
call
xchg
imul
sub
add
or
inc
cmp
(bad)
jg
test
in
shl
pop
ror
aam
dec
mov
enter
xchg
vphaddwd
and
les
or
cmp
outs
cli
lahf
fidiv
fidiv
std
cs
scas
jg
stos
cmc
mov
add
neg
jl
cmc
jae
jle
pop
stc
push
ret
xchg
lock
cld
aaa
jnp
fisub
xchg
imul
xchg
das
xchg
jg
jo
sbb
sbb
cmp
xchg
dec
in
(bad)
fcomip
jmp
xchg
xchg
cmc
inc
jb
mov
aaa
popf
jg
sti
lods
jge
fdiv
mov
fstp
iret
std
xor
test
ins
ss
mov
data16
das
clc
jmp
retf
repz
and
(bad)
mov
dec
aas
movs
fistp
int
js
call
clc
sub
mov
(bad)
cld
fcmovu
cwde
cmp
jg
fbld
out
mov
popa
pop
xlat
mov
ret
pop
cmp
jl
jnp
in
outs
fbld
jle
jecxz
add
out
(bad)
outs
sub
bound
cmps
lea
or
xchg
cli
mov
loope
fistp
inc
hlt
aaa
sti
jae
push
mov
faddp
push
(bad)
aad
and
lock
xor
sti
imul
scas
xor
mov
inc
test
call
xchg
pop
add
outs
cmc
cld
(bad)
sbb
xchg
cli
pop
in
xor
adc
(bad)
(bad)
jmp
(bad)
mov
lahf
addr16
stos
xchg
stc
mov
adc
das
mov
clc
imul
ja
fdivr
sbb
rol
(bad)
mov
ret
(bad)
cmp
push
arpl
dec
loop
cmp
sub
inc
es
call
out
(bad)
jo
out
retf
fsubr
int
cmp
or
fldcw
std
mov
jmp
lds
lahf
cmp
aaa
js
push
in
in
cmp
fisttp
(bad)
cmp
mov
das
arpl
idiv
std
(bad)
jmp
divps
pop
movs
dec
jecxz
inc
or
mov
outs
lahf
cld
clc
(bad)
inc
inc
push
xchg
mov
cmc
outs
jg
out
inc
loop
push
adc
cmp
dec
ss
pop
repnz
addr16
jg
mov
(bad)
ins
das
fmul
jp
jae
pop
mov
vmovshdup
xchg
call
jmp
xor
sub
xchg
call
jl
adc
dec
(bad)
ins
in
aas
(bad)
pop
call
or
dec
pop
aaa
movs
and
inc
push
outs
popf
out
and
sbb
sub
fild
int3
frstor
mov
movs
retf
jbe
adc
clc
mov
jmp
sub
cwde
(bad)
mov
jmp
cmps
xchg
mov
xchg
cmps
mov
stos
push
mov
cld
(bad)
dec
jbe
xor
test
(bad)
and
cmp
inc
pop
les
(bad)
(bad)
dec
(bad)
sbb
lea
xor
and
inc
stos
cmp
outs
dec
cwde
mov
clc
(bad)
jmp
scas
test
cmp
add
mov
movs
enter
aaa
push
es
xchg
mov
push
stos
sbb
dec
xchg
test
xor
xor
(bad)
inc
pop
mov
or
aad
ds
leave
icebp
ds
pop
cmp
sub
(bad)
mov
and
lods
push
out
cmovge
int3
sbb
ficom
pushf
mov
jb
shl
inc
repz
jno
ins
scas
push
popf
(bad)
(bad)
(bad)
mov
push
cdq
xchg
jae
cmp
xchg
jmp
out
fucom
enter
jg
scas
repnz
mov
in
jo
xchg
test
cld
(bad)
jg
cmp
ins
dec
aas
cmc
cmp
(bad)
popf
cli
dec
cmpxchg
std
popa
cli
jmp
or
jbe
mul
push
fld
mov
outs
jmp
jp
ins
test
js
mov
(bad)
(bad)
mov
inc
add
cld
popf
arpl
sbb
cmp
cmp
loope
mov
sar
(bad)
call
or
std
and
arpl
(bad)
repz
retf
pushf
jl
jg
jmp
adc
arpl
popa
sub
fbld
mov
ret
(bad)
call
pop
jle
mov
sbb
mov
push
add
arpl
cwde
call
push
inc
(bad)
(bad)
ins
jecxz
loope
sub
scas
jp
(bad)
(bad)
(bad)
dec
push
clc
xchg
mov
in
mov
adc
ins
xchg
mov
cmp
jg
clc
fidivr
jmp
rcl
(bad)
ja
mov
jmp
jns
mov
enter
int
or
dec
rol
mov
aad
rcl
jmp
push
jbe
and
movs
leave
inc
cwde
stos
cmp
sub
xor
cmps
stos
dec
push
jmp
pop
xor
dec
leave
inc
jmp
(bad)
xlat
gs
push
sub
es
(bad)
(bad)
jg
add
test
and
and
sar
jmp
imul
(bad)
(bad)
(bad)
call
mov
pop
or
push
jo
inc
xchg
xchg
xchg
in
ret
jbe
dec
das
into
adc
(bad)
(bad)
(bad)
call
push
sub
adc
jbe
stos
ins
ins
fwait
inc
retf
mov
cmp
fnstenv
imul
bound
(bad)
add
adc
fsubr
mov
cmps
inc
retf
add
ds
mov
jl
test
push
and
sub
bound
leave
loope
jecxz
popa
push
sbb
test
(bad)
(bad)
(bad)
cmp
mov
cmp
aaa
dec
in
popf
jmp
cmp
call
or
mov
mov
xchg
lea
xor
push
mov
jb
ins
jmp
fwait
push
call
mov
inc
(bad)
mov
leave
pushf
mov
push
icebp
(bad)
call
jmp
mov
mov
popf
aas
imul
int
std
mov
push
sbb
(bad)
fimul
cmps
pop
in
adc
test
cli
adc
cld
(bad)
(bad)
inc
retf
fcom
lods
xor
mov
scas
sbb
or
adc
inc
cld
test
adc
jo
loope
dec
pop
ja
out
lock
jbe
mov
pop
xor
cmp
and
push
rol
push
ins
and
(bad)
(bad)
(bad)
jmp
cmps
ins
xchg
cmps
into
dec
cmps
pop
push
mov
jae
and
sub
mov
inc
sbb
test
push
fimul
sub
(bad)
push
sbb
or
jmp
mov
cdq
xor
pop
pop
mov
or
push
data16
jmp
mov
loope
mov
push
or
dec
sar
(bad)
(bad)
push
xor
inc
sbb
addr16
cs
dec
xchg
dec
in
and
adc
inc
jb
dec
cmc
(bad)
(bad)
call
mov
mov
ins
mov
(bad)
add
mov
push
call
sbb
lock
mov
mov
imul
inc
sbb
pushf
stc
mov
shl
in
mov
mov
mul
mov
cdq
loop
or
mov
imul
pop
push
jle
dec
(bad)
(bad)
mov
fmulp
dec
push
mov
gs
adc
dec
xor
sar
fsubr
mov
jmp
je
shl
mov
lahf
outs
or
(bad)
das
clc
(bad)
call
popf
aad
mov
cmp
push
push
daa
les
std
add
(bad)
inc
sub
add
inc
test
mov
and
jmp
sub
jl
push
test
ins
in
dec
sar
(bad)
(bad)
(bad)
stc
pusha
sahf
or
aam
jae
int3
enter
in
ins
retf
call
push
daa
sub
(bad)
(bad)
push
imul
lahf
stos
inc
mov
sbb
jecxz
fisubr
mov
out
xchg
(bad)
(bad)
jmp
adc
(bad)
sub
icebp
mov
jbe
dec
retf
cwde
push
mov
mov
inc
cld
or
les
lods
(bad)
sti
sub
xchg
jb
xchg
add
pop
pop
mov
(bad)
(bad)
dec
push
push
add
xchg
mov
imul
cmp
xor
and
xor
(bad)
(bad)
call
adc
mov
test
adc
gs
and
fisttp
popa
retf
add
(bad)
dec
xor
jo
dec
dec
jle
loope
jmp
(bad)
mov
fist
call
inc
push
xchg
xchg
ins
fdiv
movs
add
and
inc
inc
pushf
das
sub
push
xchg
int3
mov
jnp
(bad)
(bad)
(bad)
dec
mov
rep
dec
dec
push
aaa
fs
inc
mov
add
nop
mov
sub
cmp
(bad)
add
(bad)
mov
adc
in
push
into
loop
imul
pop
hlt
(bad)
cmova
mov
sbb
jmp
in
daa
push
repz
bound
data16
mov
in
fwait
retf
dec
(bad)
in
adc
mov
lea
icebp
(bad)
push
enter
out
adc
xchg
(bad)
pop
add
lds
hlt
mov
cwd
mov
push
int
fsub
mov
shl
aam
call
stc
out
mov
fs
stos
push
pop
push
xchg
sub
call
sub
repnz
pushf
popa
jg
jnp
inc
jbe
or
scas
mov
(bad)
(bad)
jp
xchg
lea
in
dec
hlt
pop
push
ins
imul
xchg
test
or
cwde
test
aad
pop
xor
xchg
mov
mov
fldcw
mov
outs
dec
sub
push
es
pop
push
bound
ror
pop
pop
das
fs
jbe
(bad)
(bad)
push
cmps
jl
movs
retf
sub
push
sub
sub
imul
gs
(bad)
(bad)
jmp
movs
jns
gs
or
and
jmp
lods
cdq
aaa
(bad)
(bad)
(bad)
jmp
pop
ret
add
mov
xchg
js
cmp
cmps
jo
mov
(bad)
(bad)
(bad)
push
cwde
bound
adc
bound
sbb
xchg
neg
sbb
cmps
xor
dec
sub
push
not
pop
imul
stos
fs
push
inc
call
aaa
mov
nop
jecxz
push
dec
loope
mul
mov
aaa
jecxz
imul
jo
addr16
or
ss
stos
pop
pop
mov
cmps
mov
ins
pop
mov
xchg
hlt
imul
ficom
movs
(bad)
(bad)
(bad)
jmp
mov
ret
dec
sahf
inc
sbb
popa
mov
sbb
lock
std
(bad)
(bad)
cmp
mov
movs
(bad)
mov
scas
cmp
pop
or
mov
into
push
in
call
and
lea
jb
cmp
es
mov
movs
dec
push
int
jmp
call
in
es
stos
lds
dec
and
ds
sub
and
(bad)
mov
call
add
sbb
(bad)
retf
xchg
gs
mov
mov
pop
mov
sbb
fs
sti
(bad)
int
cwde
(bad)
call
nop
xchg
xchg
dec
jle
mov
lods
jecxz
mov
push
mov
fwait
jmp
fwait
cdq
clc
(bad)
push
scas
fcomp
xchg
sub
xlat
adc
(bad)
(bad)
push
in
pusha
pop
test
sub
vptestmw
jns
(bad)
cdq
(bad)
jmp
clc
mov
fwait
ins
fidiv
repz
push
aad
fs
jbe
push
addr16
scas
ss
aam
cs
add
or
pop
lahf
mov
cmp
mov
jle
mov
sbb
lds
test
imul
(bad)
(bad)
call
jmp
inc
mov
ja
rcl
dec
mov
mov
pushf
(bad)
popa
push
adc
(bad)
(bad)
(bad)
inc
outs
adc
out
xchg
mov
pop
mov
cmp
iret
add
dec
test
inc
je
push
in
add
mov
(bad)
dec
and
(bad)
in
adc
add
dec
mov
pop
sbb
or
(bad)
out
cli
push
xor
shl
adc
push
sub
or
(bad)
(bad)
sti
mov
inc
dec
jo
add
enter
stos
sar
cmp
in
and
in
pop
scas
ficomp
pop
push
sbb
bound
sub
daa
or
add
add
push
mov
sub
push
ins
movs
movs
push
movs
sub
push
addr16
(bad)
push
fstp
dec
fisttp
es
or
movs
call
(bad)
(bad)
(bad)
dec
dec
pop
cmp
loope
cwde
or
iret
sbb
cdq
sahf
mov
adc
rcr
cmc
(bad)
(bad)
dec
adc
and
push
(bad)
push
inc
clc
adc
fisttp
xlat
mov
jge
dec
out
and
cli
ror
cld
(bad)
(bad)
call
ret
nop
adc
cmc
inc
test
out
or
mov
xchg
or
push
fldcw
repnz
jns
sub
pop
mov
in
pop
sub
js
or
loop
and
(bad)
(bad)
inc
adc
xor
sbb
xchg
sub
jns
xlat
xor
inc
(bad)
(bad)
(bad)
jmp
jbe
xchg
rcl
xchg
movs
int3
test
jl
fild
jbe
jbe
mov
test
mov
leave
cli
jmp
(bad)
mov
mov
gs
xchg
dec
call
repnz
push
out
mov
pusha
cmp
retf
add
mov
outs
add
(bad)
inc
xlat
mov
lea
fimul
into
adc
in
xchg
ins
std
adc
scas
clc
mov
iret
pop
add
mov
bound
cmp
dec
xor
dec
cmp
adc
int3
xchg
jmp
mov
xor
mov
mov
(bad)
mov
test
call
mov
push
push
and
call
es
movs
mov
mov
(bad)
jmp
and
movs
sbb
and
or
sub
sbb
push
cmp
cmp
aad
jecxz
aaa
sub
(bad)
push
jmp
pop
cli
js
cmc
(bad)
mov
ret
dec
je
dec
dec
cli
pop
push
cmps
dec
push
popa
pop
jg
cli
out
mov
call
leave
lods
push
scas
mul
loope
sbb
jge
jge
adc
(bad)
inc
lahf
push
jg
fcomp
mov
test
aam
mov
repz
in
test
jae
mov
std
retf
ficomp
in
test
call
loope
pop
mov
fdivr
shr
xchg
(bad)
(bad)
inc
dec
test
pop
(bad)
(bad)
lods
cmp
iret
repz
jp
pop
cmp
push
and
mov
xor
(bad)
(bad)
push
inc
loope
lahf
ins
jne
out
aas
dec
jge
lods
arpl
repz
fwait
cmps
mov
shr
(bad)
(bad)
(bad)
fld
popa
in
loope
loopne
pop
loope
and
prefetch
mov
fld
das
retf
(bad)
mov
(bad)
jmp
push
clc
out
and
(bad)
mov
outs
je
cmp
in
icebp
fmulp
call
pop
cmc
sti
loope
into
ins
bound
fwait
push
sub
push
mov
call
dec
xchg
inc
aam
leave
ss
mov
sbb
lods
dec
enter
retf
jo
(bad)
(bad)
inc
mov
and
pop
lods
or
mov
jmp
das
ja
pop
lds
mov
cmp
add
stos
mov
pop
and
dec
xor
sbb
jne
daa
pop
(bad)
(bad)
(bad)
dec
iret
xchg
add
pop
mov
hlt
dec
mov
fwait
push
inc
pusha
pop
xchg
sar
(bad)
(bad)
call
(bad)
cmps
sbb
stc
sti
mov
xchg
sar
lods
sub
xor
(bad)
(bad)
jg
cmp
add
push
adc
popf
arpl
xor
and
(bad)
fcomip
push
cmps
xor
sti
ds
fwait
int3
cmp
out
sbb
push
fmul
(bad)
(bad)
(bad)
call
rcl
pop
cmp
push
stos
aad
fdivr
push
sub
(bad)
(bad)
(bad)
call
in
xor
xchg
stc
or
(bad)
hlt
push
inc
in
rol
rep
jo
cmp
fmul
sbb
sbb
jbe
mov
push
(bad)
call
shr
inc
xchg
sbb
sbb
inc
xor
push
cwde
mov
test
jg
hlt
dec
xor
xor
(bad)
xchg
(bad)
nop
ret
xor
(bad)
call
les
stc
ret
push
outs
push
and
retf
or
(bad)
mov
xchg
xchg
xchg
adc
sbb
inc
(bad)
fisttp
fcomp
inc
loopne
loopne
mov
sub
cmp
cmp
mov
or
les
into
popa
int3
sbb
lds
sbb
mov
inc
jae
(bad)
(bad)
inc
push
jp
mov
add
xlat
test
sub
retf
dec
xor
into
inc
rol
aas
dec
xor
sub
add
fsubr
popa
test
idiv
adc
(bad)
(bad)
(bad)
inc
dec
inc
je
dec
push
inc
pop
adc
sbb
shr
fbld
or
pop
cs
xchg
(bad)
(bad)
jg
cmp
sbb
cmp
out
repnz
mov
(bad)
(bad)
push
add
lds
cmp
mov
xor
sub
dec
pop
pop
cmp
mov
jae
mov
scas
cmp
test
dec
cs
mov
mov
sbb
std
(bad)
(bad)
push
cmps
cmp
jecxz
test
xor
push
movs
imul
out
mov
mov
test
add
add
or
pop
jmp
inc
cmp
inc
fdiv
mov
cmp
mov
call
cwde
stos
inc
or
xor
mov
and
fld
cmp
sub
movs
(bad)
(bad)
(bad)
(bad)
cli
arpl
cmp
push
xchg
jae
jne
sub
adc
rcr
(bad)
jo
xchg
in
lods
(bad)
(bad)
(bad)
jmp
repnz
or
mov
jb
mov
out
lods
ds
scas
mov
inc
popf
xor
in
test
std
sbb
inc
cmp
repz
sbb
push
mov
dec
pop
pop
icebp
jg
pusha
push
sbb
cwde
cmps
xchg
pop
mov
jbe
and
pop
lock
mov
xor
inc
sub
data16
push
add
pop
jge
into
adc
call
retf
(bad)
daa
aad
test
std
push
mov
out
xlat
xor
sbb
repz
sub
jmp
sub
leave
outs
ins
lds
fs
push
push
fcmovnb
sbb
(bad)
(bad)
jmp
std
sahf
add
out
ret
pop
bnd
daa
and
inc
mov
pop
mov
jp
inc
jge
adc
loop
std
pop
pop
mov
push
xchg
and
(bad)
cli
push
dec
lods
xor
imul
add
and
fs
(bad)
(bad)
(bad)
mov
sub
neg
and
mov
mov
bnd
or
(bad)
push
adc
dec
and
and
gs
outs
mov
aas
pusha
out
push
lahf
sbb
(bad)
(bad)
(bad)
call
inc
xchg
jmp
cmp
cwde
addr16
push
int3
cmp
mov
(bad)
(bad)
(bad)
jmp
test
mov
sar
shl
(bad)
in
loope
cli
mov
nop
loopne
mov
(bad)
call
retf
shr
fs
je
fnstcw
call
fnstsw
(bad)
(bad)
(bad)
mov
adc
adc
pop
ror
inc
jo
stos
or
adc
(bad)
and
(bad)
(bad)
(bad)
call
and
cli
fdiv
loope
inc
sbb
popa
adc
xor
xchg
pop
cdq
(bad)
(bad)
(bad)
dec
push
aam
push
mov
lods
imul
fwait
push
scas
cmp
pop
mov
stc
push
mov
out
push
ficomp
retf
(bad)
inc
xchg
mov
in
jno
aam
test
ror
lods
cwde
daa
adc
js
(bad)
(bad)
(bad)
call
mov
inc
inc
dec
add
push
mov
or
pop
jnp
les
test
std
stos
dec
cld
inc
jbe
mov
jmp
push
int
jb
call
jno
movs
out
sahf
daa
in
imul
xor
dec
jae
cmps
mov
(bad)
(bad)
cmp
sbb
addr16
stos
sub
xchg
cmc
mov
(bad)
dec
mov
(bad)
(bad)
call
iret
addr16
cmp
shl
adc
sbb
test
mov
(bad)
push
jae
dec
sbb
adc
xor
mov
sbb
inc
adc
adc
dec
dec
cli
and
nop
cmps
mov
jno
lahf
cmp
pusha
push
or
mov
xchg
jns
xchg
ja
cmp
and
jb
and
dec
mov
jmp
dec
inc
push
movs
test
scas
xchg
xchg
xchg
inc
lds
out
add
inc
xchg
xchg
test
mov
test
and
popa
mov
in
(bad)
(bad)
inc
(bad)
pop
sbb
or
icebp
rol
repz
xchg
test
(bad)
pop
sub
or
sub
sub
(bad)
(bad)
call
ds
or
inc
push
hlt
pop
cs
add
call
mov
data16
call
(bad)
call
push
sbb
(bad)
call
push
cmps
fdivr
add
jno
out
outs
cmp
pop
pop
gs
(bad)
(bad)
(bad)
jmp
cld
std
aam
enter
and
sub
sub
mov
add
(bad)
jg
shl
jbe
push
mov
mov
inc
dec
retf
dec
mov
out
cli
(bad)
jmp
fdivr
ror
sbb
cmp
loope
jmp
(bad)
(bad)
push
rcl
xchg
aad
xchg
aam
cli
call
call
cmps
dec
fidiv
call
repnz
nop
xor
dec
bound
aam
inc
sub
das
or
xchg
in
xchg
sbb
js
cmp
add
js
jmp
dec
(bad)
(bad)
(bad)
call
popf
xchg
sbb
or
dec
arpl
and
push
push
ror
cmps
jmp
(bad)
jmp
xchg
daa
sub
sub
mov
icebp
add
dec
jp
xchg
(bad)
jmp
rcl
push
imul
sbb
je
mov
and
pop
(bad)
jg
(bad)
jnp
xor
jne
mov
jmp
int
or
add
xchg
in
and
int
mov
dec
ret
sub
dec
inc
inc
push
add
dec
ins
dec
mov
mov
pop
fbstp
bound
les
push
push
cld
(bad)
inc
lods
movs
add
xor
add
sub
mov
add
fs
mov
inc
clc
push
loope
fild
adc
jb
cdq
cmp
(bad)
(bad)
inc
lods
pushf
scas
cwde
test
test
fld
icebp
jmp
mov
icebp
mov
lock
add
in
lea
inc
rcl
mov
push
mov
cmp
sub
frstor
movs
aaa
pop
xor
mov
(bad)
(bad)
inc
mov
sub
(bad)
sar
dec
inc
retf
test
jge
jge
inc
ins
sub
add
(bad)
(bad)
jg
shr
mov
xor
nop
test
cmc
push
xor
mov
(bad)
(bad)
mov
push
out
inc
push
xor
dec
and
mov
pushf
dec
xor
mov
inc
push
push
fnsave
adc
inc
and
mov
ins
aad
out
xchg
(bad)
(bad)
jmp
nop
push
cli
sbb
outs
push
mov
and
lahf
mov
out
jbe
cmp
fxtract
sar
(bad)
(bad)
(bad)
jmp
fdivr
imul
aad
pop
and
fwait
imul
xor
iret
loopne
add
sar
out
lods
test
(bad)
mov
push
into
pop
ins
pop
shl
retf
div
aam
push
mov
arpl
(bad)
(bad)
inc
jae
fld
inc
dec
(bad)
out
pop
mov
adc
add
mov
mov
mov
lods
cmp
mov
jnp
iret
mov
(bad)
(bad)
(bad)
dec
push
shl
push
jns
inc
pop
pop
xor
cli
and
mov
push
sbb
sbb
lock
sub
push
stc
and
fwait
ss
neg
div
movs
out
repz
dec
xchg
push
pop
(bad)
(bad)
(bad)
call
mov
push
xor
fisubr
scas
(bad)
stos
push
out
bound
sar
jg
adc
pop
push
stc
jnp
cmps
xor
inc
retf
scas
ja
rcr
ins
call
movs
cwde
std
pop
xchg
add
xor
sbb
add
push
xlat
pop
(bad)
(bad)
(bad)
inc
rcl
mov
fisubr
stos
cmp
scas
(bad)
popf
pop
jmp
sub
fsubr
(bad)
(bad)
call
int3
jns
out
sahf
xchg
pushf
xor
(bad)
mov
dec
push
push
hlt
mov
out
jecxz
(bad)
(bad)
(bad)
out
std
push
cs
mov
into
push
mov
or
(bad)
mov
sub
xchg
call
call
mov
sub
sub
mov
push
mov
gs
(bad)
(bad)
dec
fild
xor
or
or
inc
adc
pop
loopne
mov
rcl
sbb
sub
call
sub
cmp
(bad)
dec
jl
pop
cmps
xchg
cdq
int3
enter
inc
add
cli
pop
test
icebp
(bad)
(bad)
jmp
and
mov
cmp
push
dec
mov
cmps
rol
add
xlat
push
inc
push
jg
dec
mul
sbb
cmp
add
clc
(bad)
(bad)
push
xchg
mov
aam
js
iret
xchg
arpl
fild
ret
retf
xchg
enter
push
movs
aam
inc
cli
xchg
jmp
(bad)
call
ror
add
fwait
xchg
sub
or
jle
(bad)
(bad)
call
iret
dec
cmp
js
ret
pop
das
sub
je
cmp
xor
add
cs
ja
stos
(bad)
(bad)
ror
int
nop
cmp
pop
jmp
shl
xlat
mov
ss
retf
sar
gs
xchg
xchg
sub
rcl
in
ins
test
rcr
(bad)
(bad)
inc
or
push
hlt
inc
pop
add
je
push
xchg
inc
and
mov
pop
loopne
jns
xor
push
scas
aad
in
dec
loopne
fsub
dec
and
movs
(bad)
(bad)
(bad)
jmp
adc
sub
sub
fidivr
add
fwait
xlat
mov
or
mov
pop
add
mov
(bad)
(bad)
(bad)
stc
mov
leave
call
cmps
dec
push
lahf
daa
enter
and
add
(bad)
(bad)
call
popf
pop
or
push
cmp
and
lahf
push
sub
xor
cmp
fcmovb
cmp
into
icebp
lahf
xor
or
mov
aaa
rcr
jnp
adc
(bad)
inc
dec
jl
mov
inc
and
lods
inc
cmps
les
dec
xchg
in
jne
sbb
out
xchg
xor
addr16
call
sti
shl
rcl
cmp
xchg
sub
dec
pushf
adc
push
test
outs
or
inc
mov
xchg
xor
pop
jp
dec
ret
mov
push
add
push
mov
(bad)
(bad)
push
cmps
lea
add
xchg
and
lea
mov
sbb
(bad)
(bad)
fild
push
add
pop
jmp
cmp
call
jg
jg
add
or
xor
or
loopne
jmp
ror
xor
(bad)
inc
inc
mov
pop
mov
movs
adc
push
aas
jns
sub
rcr
mov
(bad)
(bad)
(bad)
jg
mov
test
adc
add
dec
adc
das
inc
add
cmp
(bad)
jmp
push
loope
ret
dec
js
cdq
inc
popa
cli
sub
mov
enter
xchg
(bad)
(bad)
dec
and
daa
sahf
mov
or
dec
mov
in
and
jge
shr
dec
out
mov
(bad)
(bad)
inc
add
lds
push
mov
iret
xchg
fild
pop
pop
push
iret
(bad)
(bad)
(bad)
push
add
cmp
les
push
dec
add
mov
(bad)
(bad)
(bad)
push
out
pop
mov
sbb
sti
add
cmp
cli
ins
mov
out
xor
(bad)
inc
sbb
nop
fdiv
xor
mov
cmp
or
out
xchg
fs
jg
sar
inc
push
adc
(bad)
push
or
jl
enter
stos
push
repz
add
(bad)
(bad)
call
jmp
push
std
sub
xchg
xor
jecxz
and
dec
jle
test
adc
loop
arpl
xchg
adc
mov
pop
pop
dec
stos
aaa
cld
jmp
pop
cmp
mov
fmul
in
sub
(bad)
(bad)
push
imul
cwde
sbb
cmp
cmc
mov
dec
or
inc
in
cmp
xchg
sar
(bad)
(bad)
call
and
cmps
scas
(bad)
xor
push
shl
add
xchg
cmp
(bad)
(bad)
jmp
addr16
pop
rcr
ja
(bad)
retf
jmp
adc
(bad)
fist
loopne
push
shr
in
mov
retf
or
ds
aaa
addr16
(bad)
(bad)
dec
pop
sar
iret
mov
fist
ins
xor
adc
push
movs
sbb
(bad)
(bad)
call
idiv
cmps
pop
jo
fiadd
sub
fcomp
lahf
inc
jg
jmp
test
sub
(bad)
cmp
dec
int3
arpl
pop
jg
pop
rcr
imul
test
call
fstp
push
(bad)
call
inc
jp
test
cld
mov
fbld
data16
add
or
lods
mov
ss
sub
adc
cmp
(bad)
(bad)
inc
loope
fisub
loopne
repz
cmp
icebp
mov
shl
jle
(bad)
(bad)
jmp
cmp
jo
std
fwait
xchg
aas
jmp
hlt
fwait
std
out
scas
test
(bad)
call
std
shr
adc
aam
fiadd
(bad)
scas
(bad)
pop
cmp
mov
test
test
test
jge
pop
scas
(bad)
int
xchg
inc
test
dec
mov
cmps
xchg
sbb
movs
inc
(bad)
(bad)
(bad)
jmp
jecxz
add
inc
adc
mov
retf
mov
mov
pop
ja
pop
(bad)
(bad)
(bad)
jmp
pushf
bound
in
(bad)
xor
xchg
es
pop
ret
cmp
cmp
(bad)
icebp
mov
loop
test
xor
ss
push
nop
dec
mov
jmp
jnp
push
sbb
imul
pop
mov
cmp
inc
fwait
jno
fcos
(bad)
(bad)
(bad)
fist
ret
mov
adc
popa
inc
shr
test
repz
xchg
cmps
(bad)
cmps
(bad)
mov
(bad)
(bad)
(bad)
push
aad
push
pop
not
pop
cmp
(bad)
(bad)
into
push
data16
mov
jb
push
pushf
pop
fcos
(bad)
(bad)
jmp
or
cmps
cdq
fst
sbb
das
push
bound
outs
into
adc
add
mov
mov
xor
in
or
and
rcl
aad
mov
dec
xor
(bad)
push
fwait
xor
dec
cwde
cdq
jae
sub
mov
(bad)
(bad)
call
dec
sub
add
push
dec
popa
pop
jmp
push
cdq
lods
push
ds
sti
and
jg
push
xor
dec
ja
pop
pushf
pop
sar
sub
es
add
and
(bad)
(bad)
(bad)
mov
(bad)
pop
mov
and
js
popf
and
pusha
aad
ss
stos
aaa
xor
sbb
mov
jnp
mov
inc
ret
inc
sub
jnp
rcl
lods
hlt
cld
jg
dec
pushf
mov
or
sbb
imul
(bad)
call
lods
imul
movs
push
jne
out
xor
cs
retf
dec
inc
out
or
or
loope
dec
and
imul
out
pop
mov
retf
pop
aam
inc
mov
imul
(bad)
(bad)
(bad)
call
and
add
xchg
test
nop
lods
jns
mov
or
into
sahf
pop
ins
dec
pop
push
xor
push
and
data16
test
xchg
aad
push
int3
or
xor
sub
fdivr
(bad)
call
(bad)
xor
adc
adc
retf
dec
dec
sub
ret
push
adc
shr
(bad)
jg
add
mov
push
jle
add
mov
(bad)
call
test
jb
xchg
mov
stos
push
add
push
mov
xchg
mov
dec
dec
(bad)
(bad)
fcomip
dec
rol
cmp
int3
fnstenv
test
in
xchg
mov
sar
jmp
icebp
je
mov
xchg
mov
and
push
add
aad
cld
xor
pop
fstp
hlt
mov
cs
cmp
sbb
or
push
es
pop
cld
jp
iret
pop
sbb
(bad)
or
ret
sub
xlat
mov
(bad)
push
test
dec
retf
or
test
mov
sub
push
out
mov
ret
jg
or
outs
mov
in
mov
int
xchg
adc
data16
cmp
sub
(bad)
(bad)
jmp
cmps
and
es
xchg
test
jl
mov
in
sub
and
fsub
(bad)
mov
gs
and
retf
push
mov
pop
inc
rcl
cmp
xchg
call
sub
pop
out
fldcw
xchg
imul
xchg
(bad)
(bad)
(bad)
call
add
cmp
jnp
cmp
loop
int
xlat
fucom
cmp
jae
shl
out
rcl
xlat
xor
inc
xchg
jmp
loopne
add
mov
in
repnz
in
mov
(bad)
(bad)
dec
dec
fnstenv
imul
sbb
out
mov
(bad)
mov
test
(bad)
cdq
mov
sbb
nop
shr
mov
cmp
(bad)
loope
(bad)
jmp
push
sub
scas
(bad)
adc
loope
or
push
push
xchg
mov
pop
inc
cs
fidiv
(bad)
sbb
jne
(bad)
(bad)
jmp
ret
(bad)
fdivr
outs
sub
loop
jmp
xor
jmp
fidivr
repz
icebp
mov
clc
aaa
cld
cmp
cmps
enter
and
loopne
lea
mov
scas
int
jmp
loopne
xlat
ret
jbe
out
daa
test
sub
inc
jge
jle
add
ins
fwait
test
daa
outs
pop
fstp
mov
push
icebp
(bad)
fcomip
dec
data16
pushf
lea
xor
repnz
jge
push
mov
inc
mov
jg
(bad)
lahf
xor
std
or
rcl
aas
lea
xchg
loope
(bad)
(bad)
(bad)
inc
jmp
add
pop
push
mov
retf
xchg
fcmovu
imul
inc
mov
push
lock
(bad)
inc
or
mov
(bad)
fldenv
jg
cwde
pshufw
movs
scas
pop
mov
dec
mov
push
and
xlat
dec
add
fmul
fcmovnu
sbb
push
inc
xor
(bad)
cmp
mov
rol
mov
popa
hlt
enter
jns
inc
jge
push
xchg
mov
or
(bad)
(bad)
(bad)
jle
lds
mov
cld
out
jle
sbb
scas
cli
xchg
ins
add
fdiv
fild
cld
(bad)
jmp
mov
inc
cmp
in
pop
wbinvd
cmp
and
scas
test
mov
aaa
cmp
push
scas
sub
into
(bad)
sbb
call
xor
stos
xlat
mov
sti
xor
mov
enter
mov
cmp
sbb
imul
stos
call
(bad)
(bad)
(bad)
(bad)
fistp
(bad)
mov
outs
sbb
xchg
push
repz
aam
adc
jmp
imul
(bad)
call
into
add
jmp
mov
arpl
adc
dec
add
int3
jbe
cmp
mov
add
arpl
int3
dec
mov
jne
xor
(bad)
inc
fild
xlat
push
pop
pop
movs
mov
mov
and
dec
scas
fs
adc
or
add
(bad)
(bad)
(bad)
out
pop
les
(bad)
fild
mov
jl
pop
xor
jmp
mov
xchg
push
inc
mov
inc
je
cmps
add
(bad)
cli
imul
(bad)
jg
outs
inc
inc
mov
stos
dec
ds
mov
les
lock
(bad)
(bad)
(bad)
inc
mov
xchg
push
and
nop
jnp
lahf
jae
mov
add
retf
gs
or
(bad)
cmp
mov
out
nop
push
push
int3
adc
xor
bound
and
(bad)
(bad)
(bad)
call
xor
sbb
inc
inc
cs
(bad)
shl
and
mov
retf
mov
mov
(bad)
hlt
push
cmc
pop
idiv
jg
push
ds
inc
ror
jmp
jle
fst
jp
xor
(bad)
(bad)
jmp
pop
ss
stc
push
jne
push
pop
xor
dec
cmp
jno
gs
inc
pop
sub
rcl
aam
mov
aas
pop
addr16
dec
dec
sub
(bad)
(bad)
(bad)
call
jb
or
fadd
(bad)
lea
mov
xor
add
inc
call
pop
xor
cmc
fild
pusha
sbb
aad
push
out
(bad)
iret
ins
(bad)
(bad)
(bad)
jmp
sbb
into
pushf
xor
or
push
shr
xchg
inc
jp
out
sub
pusha
sbb
inc
jp
(bad)
(bad)
(bad)
push
jl
icebp
push
cmps
push
pop
dec
sub
xchg
and
mov
sbb
cmp
sub
and
(bad)
(bad)
(bad)
jmp
(bad)
out
add
mov
jae
fst
mov
outs
stos
test
pop
shl
dec
test
(bad)
call
push
cmp
mov
xchg
bound
js
and
popf
repz
(bad)
(bad)
jmp
push
mov
add
shl
push
xor
sub
fwait
cmps
xchg
lahf
test
pop
(bad)
(bad)
(bad)
dec
fs
add
jbe
pop
sbb
and
popaw
(bad)
cmp
(bad)
(bad)
push
jns
xchg
enter
inc
mov
dec
lea
push
ins
mov
cmps
push
(bad)
(bad)
(bad)
(bad)
sti
cmp
xchg
(bad)
adc
xor
aad
test
xchg
rol
nop
pop
fwait
call
dec
and
popa
xor
nop
test
stos
loopne
es
adc
xchg
pop
icebp
(bad)
inc
xor
inc
xor
xchg
into
test
cmp
mov
and
sub
call
in
popa
jmp
cmp
or
outs
or
pusha
dec
cmp
push
movs
or
xchg
jmp
push
xchg
xchg
dec
ins
cmps
aam
arpl
into
pop
add
dec
test
sbb
fwait
lods
cli
sbb
(bad)
dec
inc
push
retf
dec
(bad)
dec
arpl
adc
dec
in
in
test
jno
add
pop
fs
(bad)
(bad)
(bad)
call
sbb
clc
in
adc
bound
mov
and
stos
test
dec
movs
pop
jge
mov
mov
pop
ins
xor
sbb
or
dec
cdq
retf
mov
lock
(bad)
dec
in
dec
push
push
cmps
jge
mov
(bad)
mov
dec
in
inc
aad
adc
(bad)
fistp
add
into
out
inc
outs
xor
dec
test
xchg
inc
push
mov
(bad)
(bad)
jmp
stos
jae
push
retf
int
sub
dec
sahf
in
ret
out
div
xchg
out
xor
(bad)
(bad)
call
sub
shl
cmp
adc
jge
leave
push
xchg
inc
stos
jmp
cmp
call
stc
test
adc
sbb
mov
push
cs
gs
(bad)
mov
mov
pop
mul
call
mov
ins
xor
jns
out
mov
lock
dec
push
movs
adc
sbb
xlat
cvtps2pi
xor
xchg
xchg
xor
(bad)
(bad)
jg
and
lods
pop
mov
inc
jmp
nop
outs
and
pop
(bad)
in
(bad)
(bad)
(bad)
inc
mov
dec
sub
jmp
xchg
retf
call
mov
and
jmp
or
dec
ds
lods
adc
push
add
pushf
test
std
jg
and
inc
repnz
movs
dec
hlt
or
xchg
sbb
leave
loop
(bad)
call
stos
or
xor
mov
sbb
pop
xchg
push
(bad)
(bad)
(bad)
mov
mov
sar
sbb
or
lds
daa
rol
and
cdq
inc
sbb
(bad)
(bad)
call
rol
retf
test
bound
movs
movs
mov
adc
scas
out
xlat
fdiv
int3
sbb
push
jns
push
dec
call
sbb
pusha
pusha
sbb
jo
sbb
test
mov
int
add
xchg
fstp
mov
dec
ja
ins
ss
(bad)
cmp
test
pop
xor
(bad)
jmp
pusha
pop
sbb
jnp
iret
push
mov
mov
jmp
mov
ret
xor
jmp
into
lods
xchg
push
and
popf
(bad)
push
ss
add
mov
(bad)
(bad)
(bad)
dec
js
fmul
mov
add
add
sub
pusha
fidiv
daa
cwde
push
ret
push
lods
outs
clc
(bad)
push
into
mov
mov
es
mov
and
xchg
(bad)
(bad)
inc
inc
push
pop
je
push
jp
mov
jbe
adc
mov
jmp
lea
adc
retf
pusha
cmps
or
es
add
retf
(bad)
(bad)
mov
pop
add
pop
push
sbb
xchg
mov
mov
(bad)
push
aaa
out
mov
je
adc
cmp
cmps
cmp
inc
xchg
(bad)
push
int3
clc
(bad)
jmp
shl
(bad)
cdq
xor
movs
movs
and
mov
inc
push
jnp
jo
aas
lods
(bad)
(bad)
jmp
lahf
fdiv
std
push
stos
popa
ja
nop
adc
xchg
jp
loope
xor
retf
push
add
cmp
dec
add
mov
mov
jbe
(bad)
pop
jb
xor
aad
push
dec
popa
dec
cmp
mov
dec
dec
dec
(bad)
(bad)
(bad)
push
stos
cdq
dec
(bad)
sub
push
dec
xor
cli
and
inc
mov
xchg
push
jge
pop
sar
adc
xlat
xchg
sar
icebp
jno
movs
jno
fs
jns
or
ins
jmp
sub
jl
or
repz
retf
mov
or
dec
(bad)
(bad)
(bad)
push
lods
xor
ret
in
fild
push
daa
ds
stos
cmp
cli
ret
push
push
mov
inc
stos
lods
(bad)
sti
dec
(bad)
jmp
push
ds
imul
inc
hlt
call
shl
add
lea
cli
aad
push
lock
push
inc
mov
xor
(bad)
(bad)
inc
jne
das
out
pop
test
mov
cmc
sbb
mov
(bad)
sub
cmps
(bad)
call
(bad)
cmp
mov
nop
xchg
paddq
pop
jae
mov
fcom
mov
jp
cmc
mov
push
shl
lahf
jge
cmp
jmp
jmp
mov
retf
sbb
sbb
dec
xor
(bad)
(bad)
(bad)
jmp
repz
mov
mov
cmp
xchg
lds
mov
sbb
(bad)
(bad)
jmp
aad
push
popf
add
and
sub
pop
push
sti
dec
aad
pop
scas
jmp
loope
arpl
adc
xor
jle
ficom
(bad)
mov
(bad)
(bad)
(bad)
(bad)
push
repz
mov
ror
test
lods
jnp
je
fucomi
loope
(bad)
(bad)
(bad)
out
xchg
in
push
mov
mov
jmp
imul
cs
stc
jnp
mov
dec
ud0
push
call
ficomp
loopne
ja
hlt
sbb
jge
dec
push
inc
inc
(bad)
(bad)
(bad)
push
ret
sysexit
retf
into
push
hlt
inc
push
xchg
or
inc
je
jnp
mov
mov
mov
(bad)
(bad)
clc
(bad)
cmc
aam
jne
cmp
jmp
outs
lea
fld
cmps
xor
cld
lds
data16
(bad)
lahf
retf
iret
mov
jne
mov
pop
mov
adc
scas
dec
mov
rol
enter
jge
clc
mov
push
call
push
(bad)
jg
call
sub
add
(bad)
outs
cmps
ins
cld
push
xor
mov
or
jne
inc
movs
pushf
xor
data16
pop
inc
mov
inc
jg
inc
inc
nop
clc
stc
repz
je
and
ret
test
bound
adc
jge
(bad)
jne
cld
sub
cli
arpl
ror
add
mov
push
sub
jmp
(bad)
(bad)
inc
(bad)
aam
cmp
mov
cmp
push
outs
js
lea
dec
(bad)
(bad)
(bad)
call
xlat
xor
sub
xchg
in
jecxz
jp
ror
mov
cmc
call
add
mov
inc
adc
mov
mov
lock
mov
pop
add
(bad)
adc
call
and
push
adc
xor
push
shl
int3
fnstsw
jle
cs
shl
scas
cli
(bad)
dec
sti
lahf
aad
aam
xor
add
idiv
lods
movs
or
jae
jecxz
sbb
mov
or
jne
scas
cmp
out
pop
(bad)
jp
test
(bad)
(bad)
(bad)
jmp
call
or
pop
ret
jmp
mov
and
xor
ds
or
(bad)
(bad)
(bad)
dec
xchg
in
ins
sbb
aam
cmp
xchg
fdivr
lds
rol
(bad)
(bad)
(bad)
dec
and
dec
imul
mov
jmp
jmp
lahf
xchg
outs
mov
sub
call
jmp
jge
pop
pusha
and
pop
bound
les
cli
or
sahf
test
stc
loope
mov
dec
in
cld
fcom
adc
sbb
jmp
in
inc
mov
idiv
pushf
cwde
and
daa
(bad)
jmp
mov
cli
pop
jnp
pop
cmp
and
ja
cmp
fucomp
movs
dec
mov
(bad)
(bad)
dec
(bad)
pop
lahf
ret
aad
push
and
stos
inc
in
cmp
add
(bad)
adc
bound
mov
jecxz
push
movs
call
out
xchg
int3
inc
jge
scas
dec
(bad)
cmp
(bad)
(bad)
fidivr
fbld
(bad)
clc
fwait
(bad)
sahf
fistp
jns
jnp
jo
scas
enter
dec
push
inc
ins
imul
jmp
push
out
ja
adc
(bad)
jb
sub
mov
into
fnstsw
dec
mov
inc
inc
xchg
test
ds
dec
sbb
inc
aam
popf
sub
(bad)
(bad)
(bad)
out
(bad)
or
shr
iret
xchg
je
(bad)
adc
cmp
(bad)
mov
(bad)
(bad)
(bad)
jmp
xchg
sub
push
add
cli
sbb
ja
repz
pop
ds
jg
out
(bad)
neg
(bad)
(bad)
(bad)
call
(bad)
stos
adc
push
js
(bad)
sbb
int3
aad
fdivr
mov
cld
(bad)
call
jle
lock
repnz
mov
inc
jne
adc
push
adc
sub
gs
(bad)
in
call
or
(bad)
stos
push
cmp
mov
icebp
mov
xor
call
imul
pop
popa
in
int3
xor
jg
call
stos
push
xchg
ds
aas
call
cmc
mov
mov
xchg
xchg
test
or
cmp
punpcklbw
push
add
(bad)
(bad)
jg
mov
or
cwde
jl
(bad)
cs
mov
push
das
pusha
loope
out
cli
(bad)
(bad)
aas
jg
enter
mov
mov
mov
lea
jb
fld
(bad)
(bad)
(bad)
jmp
add
jmp
addr16
mov
repnz
dec
push
push
xchg
inc
mov
xchg
cmp
out
test
sub
cwde
out
or
lods
enter
and
call
mov
inc
aas
scas
push
das
pop
loop
js
test
call
add
jo
jmp
fcmove
push
in
inc
mov
rcl
mov
call
xor
bound
jmp
imul
sbb
(bad)
inc
and
and
pop
stos
rcr
arpl
pop
jne
mov
(bad)
(bad)
(bad)
dec
sbb
dec
dec
cmp
add
cmp
sahf
jmp
int3
dec
sub
mov
iret
lea
(bad)
(bad)
(bad)
(bad)
jnp
pop
mov
xor
rol
fdiv
out
jge
ret
xlat
das
sub
repz
xchg
(bad)
(bad)
(bad)
(bad)
jmp
or
pop
jne
push
test
lods
jecxz
(bad)
rcr
fwait
(bad)
outs
nop
xchg
jg
inc
rcl
ins
sbb
mov
xor
xchg
(bad)
mov
stos
pop
lock
sbb
iret
or
sub
ds
mov
sahf
(bad)
mov
mov
and
jno
push
add
sbb
(bad)
(bad)
call
inc
sbb
test
je
lea
add
(bad)
(bad)
inc
daa
inc
loopne
je
retf
dec
pop
pop
inc
cmp
or
test
xchg
mov
push
ins
aaa
or
sti
jmp
(bad)
pop
sti
clc
inc
sti
xchg
ja
mov
in
clc
dec
mov
std
out
daa
aad
out
(bad)
fisttp
mov
cmp
ja
jns
jae
movs
jg
(bad)
jmp
and
test
imul
sbb
jmp
cmp
movs
xor
or
(bad)
mov
(bad)
sbb
dec
lea
sub
xchg
fbld
xchg
scas
out
xchg
inc
(bad)
jge
xor
(bad)
(bad)
mov
div
icebp
sub
or
mov
idiv
(bad)
(bad)
call
xchg
js
movs
add
movs
lahf
in
xchg
ret
fstp
div
cmps
stos
mov
pop
cmp
(bad)
jmp
dec
pop
fimul
dec
cmps
das
sbb
rcr
sar
mov
jmp
mov
push
pop
popf
cmp
mov
(bad)
(bad)
jmp
jg
aad
adc
lock
out
xor
xchg
mov
fcomip
sbb
jge
mov
les
lahf
imul
ret
gs
xchg
retf
(bad)
call
sub
iret
mov
mov
fs
(bad)
out
lock
xchg
inc
cmc
fwait
or
mov
(bad)
cmp
adc
xchg
push
clc
(bad)
(bad)
jmp
movs
cmp
les
jb
jecxz
dec
mov
enter
jecxz
mov
xor
mov
dec
sti
inc
test
jg
add
es
mov
stos
ja
cli
push
push
not
dec
add
inc
push
jmp
xchg
ss
loop
cmps
movs
retf
xor
repnz
pop
lds
iret
adc
and
pusha
mov
jmp
jle
pop
mov
adc
jp
jnp
cmp
and
hlt
xchg
ret
rcl
(bad)
(bad)
fidivr
fnsave
movs
mov
push
and
or
inc
mov
test
jo
add
mov
mov
fdiv
(bad)
(bad)
(bad)
dec
gs
test
movs
dec
cdq
daa
cmps
movs
mov
movs
xchg
dec
in
inc
inc
xchg
das
arpl
(bad)
(bad)
(bad)
mov
call
pop
ins
in
test
addr16
adc
aam
cli
mov
add
call
scas
adc
cwde
push
or
jecxz
sbb
adc
jmp
int
dec
fdiv
push
ja
icebp
jbe
sar
cmps
xchg
add
fidiv
or
push
xor
xchg
int
push
(bad)
fdiv
fs
mov
clc
mov
dec
pushf
mov
(bad)
(bad)
(bad)
(bad)
dec
dec
in
lea
popf
xchg
(bad)
(bad)
cmp
fsub
shl
jg
jmp
dec
xchg
sub
dec
inc
push
dec
push
push
jb
addr16
lds
xlat
test
jg
dec
pushf
xchg
(bad)
xchg
ins
pop
inc
lock
les
or
je
mov
jmp
inc
xchg
inc
jecxz
jno
test
mov
cwde
sbb
ss
jge
cdq
mov
ins
pusha
gs
popf
data16
jne
dec
xchg
dec
fld
(bad)
(bad)
push
mov
es
inc
push
outs
(bad)
cs
mov
jle
and
es
stos
dec
xlat
inc
sahf
or
xchg
xchg
sar
(bad)
(bad)
jmp
dec
xchg
sub
jecxz
scas
fcomp
cmp
arpl
adc
xor
in
in
fstp
out
cli
(bad)
call
sbb
xor
push
xchg
and
pop
add
rol
cmp
daa
or
test
mov
mov
dec
lock
push
ins
xchg
imul
xchg
sub
jmp
xchg
xor
and
es
fcmovu
mov
pop
jbe
mov
jge
mov
mov
ins
iret
mov
(bad)
inc
lahf
mov
es
cwde
mov
jp
and
and
mov
das
xchg
les
mov
cmp
push
and
jge
loop
adc
neg
jno
adc
inc
cmc
add
(bad)
push
test
in
fdiv
ret
sub
shl
icebp
fsub
ficom
fwait
sub
fwait
cmp
stos
cdq
sub
cs
xchg
mov
in
leave
push
push
jp
add
(bad)
push
fcom
dec
movs
es
xor
cmp
dec
jmp
lods
xor
test
out
leave
lahf
jg
inc
popa
jne
pusha
stos
fst
js
mov
seto
push
outs
sub
sbb
(bad)
and
dec
pop
(bad)
jnp
or
push
std
das
ficom
sti
sub
dec
inc
adc
int3
ret
xchg
inc
movs
(bad)
(bad)
mov
test
stos
ss
sub
pop
fsincos
ds
xchg
fucomi
gs
ror
cmps
stos
(bad)
(bad)
jg
into
lods
(bad)
jns
call
mov
inc
lea
and
cmps
ds
mov
popf
outs
outs
mov
out
repnz
push
into
and
into
cdq
or
mov
inc
ja
clc
pop
or
inc
mov
push
(bad)
ja
cmp
fld
(bad)
push
movs
mov
repz
and
mov
jo
sub
std
(bad)
jmp
adc
mov
shl
out
sub
jl
push
mov
(bad)
inc
push
nop
sar
mov
(bad)
aad
pop
pop
ins
pusha
mov
cmp
push
lahf
test
or
(bad)
jmp
dec
(bad)
pop
lock
add
(bad)
jecxz
in
out
xchg
fcomip
cmp
mov
xchg
enter
in
jnp
mov
sbb
(bad)
(bad)
in
and
mov
(bad)
hlt
dec
mov
mov
aas
fist
mov
ds
mov
popf
inc
mov
push
loop
(bad)
jo
jecxz
and
repz
mov
xor
movs
xchg
(bad)
and
add
stc
inc
jle
in
dec
or
sahf
leave
enter
sub
mov
(bad)
xor
aad
jmp
jg
test
and
mov
(bad)
mov
test
cmps
clc
or
leave
(bad)
sar
pop
or
mov
push
inc
jne
(bad)
push
daa
rcr
push
cld
mov
cmp
or
pop
sbb
push
int
loop
sbb
clc
gs
add
(bad)
(bad)
inc
sbb
popa
adc
out
push
pop
pop
je
cli
pop
pop
outs
xchg
sbb
rcl
xor
dec
or
(bad)
dec
scas
sub
jbe
retf
mov
aas
pushf
pop
popf
dec
hlt
addr16
sbb
mov
mov
out
int3
hlt
rcr
push
test
jns
dec
fs
clc
pop
aas
into
sbb
(bad)
(bad)
call
iret
push
mov
xor
mov
jecxz
enter
fadd
je
je
icebp
add
call
call
je
and
mov
mov
mov
pop
(bad)
call
add
mov
cli
(bad)
(bad)
(bad)
(bad)
push
loope
mov
repz
sbb
adc
test
sti
push
jmp
lods
loope
rol
adc
and
ret
gs
in
(bad)
(bad)
(bad)
jmp
xchg
jmp
jae
aaa
pushf
sti
repz
xchg
dec
stos
mov
ja
scas
cli
jmp
cmp
iret
sub
or
idiv
popa
ret
sbb
inc
inc
and
push
(bad)
(bad)
(bad)
dec
imul
xchg
inc
jle
fbld
outs
out
popa
(bad)
sbb
sbb
test
outs
or
inc
mov
ja
cdq
mov
xlat
jge
call
in
das
mov
xchg
add
or
enter
ret
out
mov
(bad)
pop
or
and
pop
push
call
loopne
js
icebp
xchg
pop
out
test
retf
hlt
test
cli
pop
repz
(bad)
sbb
dec
and
jge
mov
not
jmp
aaa
jmp
adc
dec
(bad)
cmc
mov
loopne
ret
iret
cmp
ss
inc
mov
mov
(bad)
(bad)
(bad)
call
fiadd
sbb
loop
cmc
jne
xchg
dec
xchg
pop
cli
pop
xor
jg
jmp
cmp
xchg
xchg
sbb
or
dec
xchg
jp
or
jg
(bad)
test
add
sar
sbb
jo
gs
and
call
xchg
inc
dec
sub
aas
inc
shr
fld
add
add
enter
shl
pop
icebp
outs
in
sbb
xchg
jae
test
sbb
fadd
lea
(bad)
call
ret
pop
cmp
push
mov
dec
jns
fdiv
lods
adc
inc
adc
add
cmc
(bad)
(bad)
(bad)
(bad)
jmp
pop
dec
xchg
out
mov
test
movs
push
push
mov
loopne
shl
dec
jmp
dec
call
push
dec
mul
mov
shl
mov
sub
adc
(bad)
call
fisttp
or
xchg
sub
inc
shl
arpl
jmp
jns
mov
ret
ss
jno
pushf
dec
(bad)
cmp
push
lock
sbb
xor
or
cmp
sub
cmp
jl
out
jge
adc
(bad)
(bad)
(bad)
call
sbb
xchg
shl
or
cwde
mov
ds
aam
xor
stos
outs
stc
aam
xchg
xchg
(bad)
(bad)
(bad)
dec
adc
retf
pop
push
ret
dec
inc
stos
lods
stc
add
adc
cmp
push
test
sbb
imul
hlt
fist
jge
add
push
int
shl
fldcw
inc
mov
out
xor
call
cld
cmp
pop
mov
pusha
jns
(bad)
(bad)
(bad)
call
add
xacquire
adc
or
scas
cmps
lea
cmc
movs
popf
dec
jmp
sbb
dec
mov
outs
inc
mov
dec
add
(bad)
push
inc
add
dec
retf
mov
push
push
or
fimul
js
push
jg
je
inc
inc
das
(bad)
call
sub
dec
sub
add
adc
xchg
mov
fld
dec
jl
(bad)
xor
inc
dec
mov
pop
xor
(bad)
(bad)
(bad)
call
sub
call
push
jbe
inc
push
dec
pop
cmps
cmp
(bad)
(bad)
(bad)
push
and
xor
sub
jbe
rcr
cli
jecxz
aad
lahf
ss
(bad)
(bad)
call
div
sbb
adc
aad
mov
arpl
inc
pop
dec
jae
in
(bad)
(bad)
(bad)
in
cmp
movs
sub
jo
dec
and
rol
js
mov
xlat
(bad)
(bad)
(bad)
dec
dec
out
cmp
push
sbb
dec
inc
packssdw
and
lods
retf
add
mov
loopne
dec
xor
push
push
and
fistp
ds
gs
xor
adc
(bad)
(bad)
jmp
mov
jns
ret
mov
popf
mov
pop
inc
sub
sbb
sub
mov
and
(bad)
or
cwde
and
jo
push
sbb
movs
(bad)
(bad)
push
cmp
hlt
xlat
mov
pop
mov
cmps
aaa
call
sbb
ds
adc
loope
and
and
dec
xor
les
xor
aam
pop
cld
out
clc
dec
cli
int3
in
rcr
sbb
pop
dec
pop
xchg
dec
loope
(bad)
in
(bad)
call
aaa
cmp
psubsw
push
dec
mov
mov
into
loope
sub
and
jmp
stos
jecxz
jnp
out
jne
test
loop
movs
fadd
cmp
icebp
mov
sub
mov
rol
sub
pop
mov
add
add
aad
and
fdiv
and
neg
adc
push
and
mov
inc
push
adc
arpl
jle
inc
xor
in
xor
(bad)
inc
test
dec
jl
push
(bad)
out
sub
in
rcl
mov
pop
mov
mov
data16
sub
dec
add
pop
push
aad
and
popf
jns
pushf
mov
pop
dec
(bad)
(bad)
(bad)
inc
ins
push
inc
js
in
dec
leave
mov
repnz
int3
mov
enter
sbb
jecxz
(bad)
(bad)
dec
pop
not
nop
xor
adc
pop
dec
out
mov
scas
xor
addr16
hlt
push
xchg
or
(bad)
(bad)
jmp
daa
fs
es
jge
mov
jecxz
stos
dec
jmp
and
pop
add
add
mov
popf
stos
addr16
(bad)
dec
inc
cmc
in
lock
sbb
cld
cwde
shl
jecxz
clc
lds
jno
adc
cli
(bad)
(bad)
inc
cmp
leave
xchg
lahf
xor
loopne
popa
and
fwait
in
into
inc
pop
sahf
jle
and
pushf
or
lock
js
(bad)
test
fsub
dec
add
inc
sbb
jle
adc
push
dec
cmp
pop
pushf
mov
fwait
push
loope
sbb
(bad)
push
pop
xchg
add
(bad)
jg
arpl
mov
xchg
daa
push
cli
sub
jb
xor
and
jmp
shr
and
inc
dec
mov
or
xchg
sbb
or
push
movs
jb
jb
xchg
(bad)
push
mov
sbb
(bad)
(bad)
(bad)
(bad)
jmp
lods
inc
xchg
xchg
fsub
inc
jae
push
fs
pop
cwde
stc
lock
inc
pop
mov
xlat
add
call
retf
or
nop
jae
int3
adc
sahf
fst
and
(bad)
call
push
or
and
inc
xor
pop
mov
push
jl
aas
popf
les
pop
adc
xchg
retf
test
and
retf
les
(bad)
jne
jnp
pop
nop
sbb
cmp
push
xchg
dec
jne
vpaddsw
enter
mov
(bad)
call
push
inc
xchg
xchg
mov
cmp
jp
cmp
mov
jp
(bad)
popa
loope
(bad)
(bad)
(bad)
(bad)
ds
rcr
and
xchg
cld
ror
push
mov
sub
(bad)
(bad)
jmp
dec
mov
xor
xchg
mov
(bad)
xor
pop
inc
sar
loopne
push
mov
inc
lea
mov
mov
call
xchg
inc
or
stos
mov
repz
mov
or
adc
(bad)
(bad)
call
dec
inc
push
mov
sbb
pop
outs
stos
mov
call
pop
mov
aam
push
mov
(bad)
(bad)
call
leave
mov
xchg
adc
scas
leave
xor
cli
mov
pop
sub
xchg
jmp
pop
(bad)
stos
(bad)
push
loope
ret
aam
mov
out
mov
cmp
or
(bad)
(bad)
(bad)
jg
scas
inc
dec
iret
push
movs
dec
jmp
pushf
popa
jbe
loope
(bad)
inc
cmp
sti
sub
jecxz
(bad)
(bad)
push
sbb
cmp
cmp
cs
jmp
cwde
(bad)
outs
test
scas
fistp
sub
inc
cld
jmp
add
xor
pop
pop
out
in
xor
call
aaa
jmp
imul
iret
add
ss
loop
mov
(bad)
(bad)
(bad)
jmp
jg
mov
inc
popa
ret
iret
fld
add
push
mov
aad
call
call
and
rcr
adc
cmp
mov
hlt
mov
fsubr
(bad)
call
push
pop
fidivr
or
and
mov
push
test
mov
jmp
jecxz
or
out
sbb
mov
inc
xchg
inc
inc
daa
jae
mov
mov
mov
iret
into
xor
iret
fwait
xor
mov
and
sbb
(bad)
(bad)
(bad)
jmp
out
jecxz
and
cmp
mov
sbb
clc
std
sbb
sti
cmp
stc
mov
(bad)
(bad)
(bad)
dec
inc
mov
sub
loop
inc
add
cmps
stos
push
iret
mov
lahf
cmp
cmp
jmp
(bad)
cmc
sahf
xchg
movs
or
cmps
xor
lods
or
mov
and
pop
ret
inc
inc
pop
pusha
call
xlat
adc
pop
int3
fild
push
xchg
aad
(bad)
mov
mov
pushf
fdivr
push
loop
dec
test
shl
call
sbb
(bad)
xchg
stos
pop
mov
pop
xor
pop
cli
scas
inc
add
idiv
or
clc
inc
jnp
test
dec
loopne
mov
mov
jecxz
(bad)
(bad)
call
fadd
stos
fimul
inc
xchg
cmps
scas
mov
or
std
(bad)
(bad)
(bad)
jmp
mov
xchg
mov
imul
xor
(bad)
or
jecxz
fs
(bad)
(bad)
inc
inc
loopne
push
jmp
mov
clc
xchg
fnstcw
aas
sub
inc
push
sbb
jge
in
jnp
jbe
cmp
(bad)
(bad)
(bad)
(bad)
cmp
outs
fnstenv
lock
fld
and
fcomp
ss
lahf
aas
ja
sub
loope
lods
inc
aad
jle
push
(bad)
les
ror
add
pop
data16
(bad)
out
cli
push
sahf
cmp
into
and
outs
cmp
inc
inc
aaa
mov
popf
mov
inc
(bad)
(bad)
(bad)
jmp
mov
inc
mov
aas
(bad)
scas
popf
test
jo
into
jle
mov
test
sub
lea
push
popa
inc
and
mov
not
xor
(bad)
(bad)
jl
movs
and
pusha
cmp
mov
cmp
pop
add
push
in
stos
ins
aad
ja
(bad)
(bad)
mov
jl
mov
fidiv
push
fist
sti
ja
dec
(bad)
(bad)
(bad)
dec
ret
lahf
jg
cld
xor
jns
test
test
inc
add
add
loopne
loop
jge
(bad)
lock
xchg
or
nop
fimul
ret
add
mov
add
or
(bad)
(bad)
cmp
mov
lods
xor
sub
or
test
repnz
cld
inc
or
jnp
int
lods
sbb
mov
fs
fst
inc
arpl
int
lock
jo
out
(bad)
(bad)
(bad)
jmp
or
jae
pusha
jbe
jbe
jo
enter
test
mov
int
and
pusha
push
pop
icebp
(bad)
(bad)
(bad)
jmp
jge
add
mov
cmps
fldenv
in
inc
push
stos
inc
retf
or
push
push
cli
mov
dec
sbb
sbb
cmp
dec
inc
sub
stos
push
(bad)
(bad)
(bad)
jmp
push
outs
jge
les
add
popa
out
inc
in
sbb
and
sub
push
mov
pop
sti
ds
sbb
inc
repnz
(bad)
(bad)
dec
jae
xor
movs
sub
imul
cld
clc
sbb
rcr
(bad)
(bad)
jmp
(bad)
sbb
imul
or
in
jns
push
or
je
pop
arpl
(bad)
dec
jb
lea
cmp
jp
jmp
in
enter
xchg
(bad)
call
add
hlt
push
mov
ds
xor
push
(bad)
(bad)
(bad)
jg
cmp
cli
les
bnd
cmp
mov
into
xor
(bad)
dec
inc
cmp
push
aam
jge
jge
inc
mov
(bad)
mov
(bad)
(bad)
(bad)
(bad)
call
dec
jg
sbb
in
push
scas
lods
cmp
(bad)
lahf
ds
es
bound
std
outs
popf
and
loop
mov
mov
scas
je
lods
inc
pop
test
mov
test
(bad)
(bad)
(bad)
call
add
lahf
inc
rol
cs
mov
lods
test
bound
pop
mov
out
clc
call
inc
imul
sub
push
push
push
or
jnp
cmp
xlat
xchg
and
jmp
fucomi
jo
mov
jmp
out
cli
(bad)
call
xchg
adc
sar
test
je
sbb
bound
or
jge
hlt
adc
in
popa
fiadd
push
cli
inc
mov
imul
xchg
inc
jmp
(bad)
mov
int3
add
(bad)
lods
inc
push
int
add
jbe
jg
mov
xchg
retf
rcl
rol
(bad)
(bad)
mov
repz
dec
cli
push
lahf
xchg
xor
dec
popa
cdq
push
xchg
adc
les
fwait
sar
and
xchg
pop
push
retf
ds
jmp
repnz
inc
add
push
cmp
pop
jg
adc
cmp
mov
je
add
outs
(bad)
(bad)
(bad)
push
into
sahf
gs
mov
sar
in
test
mov
(bad)
push
outs
sbb
in
or
shl
in
mov
xchg
call
adc
mov
out
outs
adc
push
(bad)
(bad)
(bad)
dec
push
rcr
push
cs
mov
xchg
imul
scas
dec
sbb
sbb
icebp
mov
or
push
jg
in
call
das
pushf
fild
push
sbb
pop
add
and
pop
inc
std
jg
or
mov
sub
js
jnp
in
outs
and
mov
dec
aaa
fsub
jp
pop
mov
pop
std
stos
dec
cld
jmp
jne
in
ins
xor
out
push
push
ins
ins
clc
(bad)
(bad)
(bad)
jmp
cmp
cmp
mov
push
out
jl
cli
add
(bad)
sbb
push
mov
adc
addr16
cmp
rcr
mov
call
neg
(bad)
std
out
data16
cmp
test
pop
aaa
jo
(bad)
(bad)
(bad)
mov
popf
jmp
pop
or
or
xor
fild
popa
ja
idiv
jmp
push
pop
dec
ins
mov
xor
into
adc
mov
mov
mov
mov
ins
sub
ss
push
bound
sbb
push
mov
sar
(bad)
jmp
jle
(bad)
adc
mov
out
mov
add
add
retf
cmp
(bad)
or
icebp
test
pop
sub
enter
(bad)
(bad)
(bad)
dec
movs
and
and
or
out
mov
xor
adc
xchg
xlat
mov
mov
push
aad
jp
retf
push
jbe
xlat
mov
fisttp
leave
pop
sbb
and
xor
mov
or
aam
xor
ins
dec
xchg
sub
xor
xchg
push
jmp
push
retf
or
mov
inc
mov
xchg
ins
int
mov
fwait
and
jmp
imul
dec
sub
sbb
stc
(bad)
(bad)
(bad)
inc
clc
inc
inc
dec
mov
jo
pushf
imul
xchg
ret
rcr
jle
mov
(bad)
(bad)
jmp
push
popa
pop
pop
mov
jbe
xlat
ins
mov
pop
into
jecxz
lods
push
push
mov
out
nop
push
scas
lds
mov
pop
lods
(bad)
(bad)
(bad)
call
lods
push
inc
sahf
je
retf
xchg
inc
and
inc
adc
sub
mov
fisttp
(bad)
dec
outs
mov
out
and
xchg
fs
ds
stos
jmp
inc
shl
pop
(bad)
sbb
cmp
inc
mov
xchg
data16
ret
cmp
dec
push
dec
xor
scas
jp
stc
adc
sbb
xor
(bad)
(bad)
(bad)
mov
sub
sub
push
xchg
scas
inc
ret
arpl
mov
cmps
cmps
loope
(bad)
(bad)
jmp
ror
xchg
mov
xchg
in
xor
ins
sub
arpl
pop
nop
mov
push
pop
push
ins
(bad)
(bad)
(bad)
call
push
call
cmp
push
popa
ins
arpl
(bad)
xlat
cmps
xor
outs
adc
mov
scas
sbb
(bad)
hlt
test
or
imul
push
jae
jmp
mov
(bad)
(bad)
inc
fistp
inc
adc
xor
ret
xchg
cmp
inc
mov
data16
xchg
ss
ret
ficom
mov
mov
(bad)
hlt
push
mov
cli
cwde
aam
xor
test
(bad)
inc
jnp
stos
js
jbe
pop
shl
mov
das
call
cmp
stos
mov
ins
mov
xchg
gs
cmp
or
rcl
mov
dec
call
push
sub
test
push
inc
(bad)
(bad)
(bad)
jmp
xchg
mov
rep
add
sbb
scas
adc
mov
loopne
xchg
inc
(bad)
mov
jnp
fmul
and
data16
xchg
arpl
outs
in
mov
fs
das
sar
dec
in
push
sbb
xchg
dec
push
inc
or
ds
mov
(bad)
(bad)
fxam
fisubr
dec
cld
lods
jmp
jbe
cmps
push
in
add
mov
jg
dec
jecxz
and
pop
sub
icebp
(bad)
loope
icebp
jp
dec
leave
pop
(bad)
push
or
in
(bad)
pushaw
pop
ja
or
enter
xlat
ins
mov
inc
daa
and
sbb
adc
addr16
in
arpl
lahf
inc
xchg
push
push
add
in
in
dec
xchg
es
das
xor
pop
xchg
cmps
mov
pop
fcmovu
xchg
or
(bad)
jg
ss
and
mov
adc
aaa
inc
adc
mov
xchg
je
(bad)
(bad)
(bad)
call
push
or
pop
sbb
or
in
push
and
std
mov
xchg
xchg
cmp
retf
(bad)
(bad)
(bad)
jmp
jle
and
imul
jo
cld
pushf
nop
out
dec
mov
adc
lods
add
jmp
ror
data16
(bad)
sub
dec
inc
xchg
push
test
(bad)
jmp
daa
aad
retf
es
rdmsr
mov
mov
dec
rcl
push
lods
sub
dec
xor
inc
scas
fisttp
cwde
pushf
clc
lods
inc
(bad)
(bad)
(bad)
push
lods
mov
jne
xchg
adc
mov
movs
mov
sub
adc
and
mov
(bad)
(bad)
(bad)
dec
add
inc
icebp
daa
push
dec
jno
cmp
inc
cmp
jns
add
(bad)
(bad)
dec
movs
xorps
sbb
dec
(bad)
sub
in
mov
xchg
ds
xor
inc
mov
pop
and
ins
sub
adc
or
xchg
call
cmc
jle
jge
clc
(bad)
(bad)
jl
xchg
and
or
daa
add
idiv
call
ds
int
fadd
add
jmp
sbb
out
(bad)
fs
adc
fist
lahf
in
push
mov
hlt
(bad)
(bad)
std
mov
jp
push
iret
pop
xor
lock
mov
jle
mov
adc
ins
sbb
jp
iret
push
enter
pop
clc
push
cmp
fstp
inc
stc
(bad)
(bad)
cmp
mov
mov
xor
mov
xor
sbb
mov
lea
das
sti
sub
ins
xchg
pop
jecxz
cmc
test
push
inc
stos
cld
xchg
aas
cmps
int3
(bad)
fild
mov
out
cs
dec
fdiv
leave
das
(bad)
dec
std
mov
sub
pusha
cld
inc
sar
inc
ins
out
test
and
call
and
int3
xor
into
push
test
xor
cmps
xchg
rcl
push
pop
in
cld
(bad)
(bad)
dec
lods
or
clc
and
dec
je
lds
ss
rcl
imul
(bad)
(bad)
push
(bad)
in
dec
cmp
jno
xchg
pop
lock
xchg
lods
cmp
jmp
out
dec
inc
and
sbb
mov
mov
inc
jne
mov
(bad)
(bad)
(bad)
push
movs
das
fwait
cdq
inc
mov
imul
cmc
push
imul
jo
shl
(bad)
call
push
mov
jno
sbb
xchg
pop
pop
mov
icebp
rol
mov
(bad)
jmp
mov
jg
jmp
mov
(bad)
(bad)
push
xor
fld
jle
push
leave
clc
fist
push
or
push
(bad)
sbb
dec
cmp
sar
adc
jae
cmps
mov
aad
fst
and
(bad)
(bad)
call
sbb
inc
in
xchg
retf
inc
sub
jo
rol
and
sbb
les
fisttp
cmp
les
jg
mov
mov
mov
dec
add
push
and
lds
(bad)
push
cmp
loope
je
inc
mov
aam
lds
movs
pop
nop
mov
ror
push
and
in
cmp
or
(bad)
mov
mov
xchg
push
(bad)
(bad)
(bad)
inc
push
mov
ds
scas
call
retf
add
or
adc
xor
sar
inc
(bad)
(bad)
(bad)
call
sbb
inc
ja
push
das
xchg
lds
cdq
or
clc
scas
mov
adc
pusha
lock
(bad)
inc
mov
pop
jmp
mov
cmp
icebp
jg
pop
(bad)
adc
retf
sub
jge
sar
fild
(bad)
lahf
das
push
sub
stos
sar
xor
mov
pop
iret
jecxz
pusha
iret
(bad)
jae
aaa
stos
mov
lahf
dec
shr
loope
(bad)
jmp
push
mov
cmp
outs
and
sub
sbb
mov
in
rcl
(bad)
(bad)
jg
dec
xchg
pop
cmps
dec
std
push
setg
inc
sub
cli
jo
push
mov
cmc
push
xlat
out
imul
cmp
push
cld
pop
(bad)
xor
xor
(bad)
(bad)
jmp
movs
mov
out
xlat
pop
sahf
mov
inc
dec
cs
shl
adc
(bad)
call
mov
push
lds
(bad)
push
fild
pop
adc
std
popf
popa
mov
push
push
mov
pop
xor
mov
jecxz
push
mov
scas
ret
sti
clc
fdiv
sbb
add
cs
retf
fistp
and
(bad)
(bad)
(bad)
call
bound
int
lahf
in
push
adc
out
sbb
in
test
mov
scas
pop
jmp
lock
jmp
jle
push
sub
push
jnp
cdq
cmc
(bad)
(bad)
jg
mov
idiv
ret
pop
pop
stos
out
cmp
pop
cmp
mov
dec
inc
cmp
call
or
iret
test
pop
fldenv
adc
(bad)
(bad)
call
or
cmp
adc
mov
scas
xor
and
les
popa
push
pop
mov
dec
jge
(bad)
(bad)
call
movs
dec
aad
xchg
daa
movs
mul
fwait
cmp
push
add
arpl
aaa
sbb
scas
ss
test
push
cmp
sbb
dec
lahf
dec
inc
jmp
cli
mov
adc
fnstsw
add
cmp
dec
lock
movs
int
repnz
push
pop
push
call
jo
mul
call
std
mov
jne
xor
popa
push
aaa
sub
(bad)
(bad)
dec
xchg
mov
push
cmp
mov
jmp
and
sbb
(bad)
jg
sbb
add
fidiv
jg
dec
cmp
outs
jle
sti
arpl
ret
jmp
(bad)
fidivr
(bad)
call
mov
lods
mov
sub
cmp
hlt
pop
push
ins
(bad)
xchg
cmp
push
dec
mov
fcomip
gs
sar
add
add
lds
(bad)
(bad)
dec
dec
and
fwait
das
add
mov
and
repz
scas
movs
inc
sub
loopne
(bad)
(bad)
jg
push
xor
cmp
add
(bad)
outs
not
in
cmp
jmp
or
(bad)
jg
mov
and
jae
adc
adc
lds
adc
and
test
(bad)
(bad)
jmp
popa
pushw
dec
fwait
repnz
xor
mov
cmp
adc
push
into
and
jbe
cmp
iret
(bad)
(bad)
(bad)
jmp
repnz
xlat
cdq
dec
mov
daa
fcmove
or
arpl
cmp
ret
adc
mov
test
dec
inc
add
and
arpl
xchg
hlt
outs
sti
or
mov
dec
and
fdiv
test
mov
cmp
shl
fwait
sub
push
(bad)
(bad)
(bad)
call
xor
daa
add
cwde
xlat
add
jno
mov
pop
mov
mov
xchg
(bad)
(bad)
(bad)
jmp
in
xor
dec
mov
adc
cwde
mov
in
int
cmp
mov
inc
cld
(bad)
fcmovb
test
cmc
push
aaa
mov
push
retf
aas
and
(bad)
dec
pusha
lock
out
xor
imul
mov
jno
pop
out
(bad)
ffree
popf
(bad)
(bad)
(bad)
push
push
aad
or
sbb
dec
push
mov
xchg
cli
mov
test
push
fs
in
repz
(bad)
(bad)
(bad)
call
pop
idiv
aad
adc
xchg
jb
cmp
aas
cmp
mov
test
outs
cmp
(bad)
(bad)
push
icebp
sub
mov
xor
adc
nop
xchg
push
ds
retf
and
call
(bad)
(bad)
(bad)
cmp
ss
popa
fist
dec
jbe
js
and
cmp
xchg
fcom
and
push
(bad)
(bad)
dec
jge
int3
ja
push
mov
cmp
push
mov
jmp
sub
imul
(bad)
push
mov
stos
and
or
sbb
mov
push
stos
cdq
stos
sub
xor
out
ret
pushf
push
xor
mov
out
(bad)
(bad)
(bad)
mov
movs
dec
mov
ins
jmp
push
sbb
dec
jne
ret
mov
jns
(bad)
(bad)
dec
adc
add
lods
jae
add
dec
dec
dec
jge
push
test
(bad)
(bad)
(bad)
(bad)
call
push
jb
rcr
pop
out
mov
fcomp
lods
scas
outs
xor
nop
jb
call
leave
sub
push
int3
adc
leave
and
pop
pop
sbb
cmp
(bad)
(bad)
jmp
es
dec
shr
(bad)
add
gs
scas
xchg
test
dec
pop
mov
in
inc
ins
retf
leave
or
dec
cli
mov
push
int3
rcr
fidivr
je
(bad)
(bad)
inc
adc
adc
test
push
xor
and
fnstcw
inc
cli
ffree
mov
dec
add
xchg
daa
(bad)
jnp
jbe
ins
pop
rol
push
jmp
dec
inc
mov
cwde
fs
addr16
sbb
cmp
mov
mov
movs
sbb
scas
dec
loopne
and
(bad)
les
push
(bad)
(bad)
(bad)
dec
pop
xor
int3
inc
and
cmps
jmp
mov
out
popa
mov
cmp
imul
movs
jmp
out
pop
lock
dec
data16
jbe
inc
jne
cs
push
mov
(bad)
(bad)
jnp
pop
adc
shl
shr
ins
jns
push
xor
test
(bad)
dec
in
retfw
jmp
mov
add
test
inc
add
cli
(bad)
(bad)
cmp
outs
xor
imul
or
xor
push
or
inc
xchg
in
push
ins
stos
int
(bad)
(bad)
jmp
xchg
adc
jp
bound
sbb
dec
mov
adc
(bad)
cmp
jmp
div
jmp
movs
push
jno
mov
fidiv
std
dec
scas
jecxz
or
movs
fwait
mov
iret
pop
fadd
xchg
(bad)
(bad)
inc
imul
mov
and
out
push
out
imul
pushf
add
jmp
push
sub
iret
adc
sub
push
outs
xor
sbb
or
adc
sar
cmp
pop
retf
dec
in
and
rcr
pop
(bad)
(bad)
(bad)
jmp
adc
cmps
mov
fs
xchg
retf
mov
int3
xchg
xchg
mov
outs
aam
sar
stos
(bad)
jmp
adc
jge
lock
(bad)
mov
mov
sbb
jp
lods
pop
loope
data16
(bad)
jmp
repnz
iret
ins
aaa
call
ja
dec
in
cmp
adc
mov
out
(bad)
(bad)
(bad)
cli
jle
pop
pop
out
sar
mov
mov
movsx
xchg
add
inc
call
xchg
push
xchg
cmp
sbb
sbb
mov
(bad)
mov
dec
adc
(bad)
(bad)
pop
sub
into
mov
(bad)
(bad)
inc
lds
adc
jmp
lock
in
xor
mov
sub
pop
jnp
mov
mov
mov
xchg
out
into
inc
mov
add
push
sub
stos
mov
push
add
lea
xor
mov
mov
inc
jnp
jae
jg
(bad)
call
ss
(bad)
jp
mov
dec
pusha
xor
xchg
or
movs
call
add
icebp
mov
cs
sar
or
mul
add
repnz
call
(bad)
(bad)
(bad)
call
sbb
mov
retf
aas
daa
in
outs
add
inc
lds
call
loope
(bad)
(bad)
(bad)
jmp
dec
fisubr
cmp
jb
push
xor
xrstor
sbb
aas
sbb
ret
cmp
pop
std
inc
ret
mov
push
mov
dec
inc
fsubr
(bad)
int3
nop
xor
pop
xor
sbb
inc
mov
adc
pushf
mov
pop
mov
imul
in
cmp
test
push
fwait
js
push
(bad)
(bad)
cmp
out
sbb
or
sub
push
das
jg
mov
movs
xchg
test
mov
(bad)
push
cmp
loop
in
loopne
adc
std
cmps
inc
rcr
movs
dec
push
cmp
hlt
ja
stos
(bad)
(bad)
(bad)
sti
je
inc
jne
ret
mov
repz
sub
inc
push
sbb
jp
and
(bad)
(bad)
(bad)
inc
jae
addr16
jle
fstp
cmps
stos
pop
dec
adc
fdivr
icebp
shr
or
push
call
int
sub
inc
xchg
mov
rcl
mov
imul
stos
out
jle
(bad)
(bad)
call
jge
imul
lods
add
mov
push
adc
xchg
cmp
inc
in
jmp
jmp
outs
jg
sbb
inc
out
jne
dec
sub
add
mov
jne
(bad)
(bad)
mov
pop
clc
sti
mov
fdiv
jnp
cmps
fidiv
mov
xchg
add
das
cli
pop
rol
in
fimul
pop
sbb
scas
xor
mov
(bad)
dec
int
sti
mov
mov
pop
iret
(bad)
and
repz
dec
lock
popa
sbb
mov
sub
std
pop
mov
xchg
pushf
xor
call
jecxz
lea
push
arpl
mov
xor
jge
mov
(bad)
(bad)
(bad)
call
aad
out
push
or
and
adc
jno
jecxz
in
int3
dec
push
jmp
push
mov
jge
sbb
jge
cdq
add
into
fidivr
jp
sti
test
pop
pop
pop
cwde
push
mov
outs
mov
sub
sub
lds
ret
aaa
loope
aam
lock
mov
out
inc
aaa
pop
(bad)
xchg
mov
(bad)
(bad)
call
adc
pop
xor
inc
cmp
sbb
cmps
xlat
pop
push
idiv
out
icebp
(bad)
(bad)
inc
popa
out
mov
mov
aad
jbe
rcl
mov
and
(bad)
(bad)
(bad)
fbstp
lahf
movs
sub
push
loope
lds
das
cmp
sub
(bad)
(bad)
(bad)
push
add
cmps
mov
lahf
mov
jl
xchg
or
dec
inc
xchg
test
cmc
jp
push
out
jmp
call
leave
jmp
jl
xor
dec
xchg
stos
aaa
pop
cmp
inc
cmp
ja
push
(bad)
dec
jo
mov
fild
cmove
jno
ret
retf
stos
jmp
(bad)
(bad)
jmp
cmp
adc
mov
(bad)
sbb
pop
movs
out
int3
jbe
(bad)
(bad)
(bad)
cmp
cmps
(bad)
sbb
cmp
das
pop
cmp
xor
inc
rcl
jno
(bad)
(bad)
(bad)
in
mov
div
xchg
push
frstor
retf
lods
xor
aaa
jle
fld
push
loopne
(bad)
(bad)
(bad)
mov
add
addr16
push
xchg
stos
scas
inc
mov
xchg
jmp
jp
mov
(bad)
(bad)
(bad)
fld
aam
xor
cmp
push
aad
mov
jge
push
test
(bad)
cmps
div
inc
je
pusha
adc
outs
mov
jae
arpl
ss
lea
xor
dec
(bad)
(bad)
(bad)
jg
jne
test
add
popf
repnz
imul
push
add
cmps
in
sbb
jmp
sub
push
or
mov
je
xchg
and
mov
fcom
jmp
sub
mov
fadd
pop
xor
stos
add
(bad)
inc
mov
push
inc
mov
mov
xor
and
push
xchg
bound
ret
inc
(bad)
(bad)
(bad)
push
mov
add
or
(bad)
mov
ret
mov
xlat
jae
pop
mov
push
mov
xor
(bad)
dec
loope
pop
push
cdq
dec
dec
scas
and
pop
ss
aas
imul
sahf
mov
xchg
(bad)
(bad)
push
dec
xchg
(bad)
gs
rcl
sub
jmp
iret
pop
das
add
vpavgb
lock
retf
cs
clc
test
idiv
mov
push
dec
jns
xor
lds
lods
cmp
sti
shr
iret
add
(bad)
call
mov
leave
add
sub
xlat
int
dec
xchg
mov
or
jg
int
fstp
fs
(bad)
(bad)
jnp
xor
adc
jmp
mov
sub
cmp
arpl
lods
(bad)
(bad)
(bad)
dec
cmc
fwait
repz
push
scas
pusha
out
(bad)
jg
sub
pop
adc
movs
fwait
in
cmps
out
aas
push
cmc
outs
outs
push
(bad)
(bad)
(bad)
push
jbe
ja
imul
out
or
popa
inc
mov
dec
cmps
sahf
xor
mov
push
mov
inc
int3
add
adc
pop
mov
pushf
dec
int3
jge
(bad)
(bad)
(bad)
mov
mov
scas
mov
xor
push
sbb
(bad)
imul
sbb
mov
(bad)
(bad)
(bad)
aas
outs
mov
push
(bad)
fsubr
shl
pusha
adc
fnstsw
loopne
inc
push
hlt
sbb
add
xlat
imul
aas
sbb
pop
or
jl
push
aad
mov
in
sbb
push
(bad)
stos
outs
cli
fnstcw
push
inc
hlt
sbb
call
cld
(bad)
in
xchg
xor
clc
xchg
out
mov
cwde
sbb
sbb
inc
jnp
ins
xchg
out
push
jl
mov
jmp
push
jmp
sti
cmp
or
test
push
call
imul
(bad)
popf
or
xchg
xor
daa
in
test
out
test
cmc
xor
ja
inc
adc
pop
aas
push
clc
mov
mov
cmp
call
xor
lea
xchg
xor
inc
push
inc
adc
(bad)
(bad)
push
mov
lods
stos
mov
mov
(bad)
jnp
sbb
cmp
pusha
mov
dec
out
retf
shl
ret
push
dec
sub
jbe
xchg
test
jmp
fild
retf
(bad)
(bad)
jmp
mov
fmul
cld
jl
cwde
push
bound
fadd
outs
imul
sub
mov
(bad)
adc
jg
outs
daa
jecxz
xor
adc
(bad)
(bad)
jmp
xchg
fwait
div
stc
jge
std
cdq
sahf
call
mov
fcomp
mov
lahf
ds
inc
sub
jl
mov
(bad)
(bad)
aas
(bad)
push
sbb
pop
ds
fsub
mov
and
lea
in
sar
fst
mov
add
ins
aad
shl
(bad)
dec
jg
xor
adc
jecxz
call
in
(bad)
stos
sbb
out
cli
pop
cmp
cmp
cmp
sub
aam
jnp
daa
jg
(bad)
inc
out
push
add
repz
mov
dec
gs
inc
pop
pop
cmp
imul
adc
(bad)
(bad)
inc
outs
loopne
popa
ins
shl
cmps
lods
dec
in
push
jae
sbb
jns
pusha
mov
iret
out
ds
(bad)
(bad)
inc
mov
adc
rcr
in
cmps
push
sbb
mov
ins
dec
ret
call
call
test
jo
mov
mov
mov
out
das
js
mov
nop
push
fidivr
cmp
ins
jmp
jne
(bad)
(bad)
call
pop
mov
jmp
fiadd
bound
enter
ffree
adc
push
and
cmc
pusha
fld
mov
(bad)
(bad)
(bad)
dec
jmp
mov
mov
sar
dec
inc
repz
out
mov
ins
mov
out
ds
leave
jmp
test
jae
(bad)
(bad)
call
(bad)
loop
dec
add
push
mov
pop
fmul
inc
mov
pusha
test
pop
add
cmc
cmp
pusha
sbb
add
sub
xor
sti
jle
sti
inc
(bad)
call
xor
and
pop
scas
inc
mov
xchg
movups
sub
cdq
jns
loopne
push
mov
shl
add
mov
xchg
jb
arpl
lods
fidiv
(bad)
cmp
mov
das
dec
pop
jnp
(bad)
es
and
dec
sahf
push
mov
pop
xchg
sar
(bad)
push
pop
je
jge
cmp
adc
xchg
fs
sar
movs
pop
movs
adc
arpl
out
repz
mov
sbb
sbb
pop
dec
dec
dec
push
mov
aad
and
mov
js
push
clc
(bad)
(bad)
mov
xchg
test
cli
cmc
neg
inc
mov
popa
mov
je
or
mov
aas
cmp
sub
mov
in
and
jmp
mov
push
and
inc
xchg
movs
xchg
lods
sbb
pop
push
cmps
mov
mov
sbb
addr16
mov
ret
imul
aas
jnp
lock
fstp
cmp
f2xm1
call
popf
xor
or
push
dec
cmp
mov
mov
dec
sub
pop
setle
inc
or
(bad)
and
jne
(bad)
popf
and
xchg
cmp
jmp
sub
aam
nop
pop
push
(bad)
iret
xchg
cmc
sbb
lock
xchg
nop
push
jmp
cld
add
or
mov
xchg
push
push
jno
mov
pop
sbb
cmp
(bad)
dec
or
xchg
add
jb
loop
inc
pop
(bad)
jns
xchg
or
adc
mov
scas
push
jl
(bad)
(bad)
jg
and
ror
sahf
pop
aas
cmp
xchg
add
dec
out
push
jl
pop
data16
jnp
(bad)
(bad)
call
cmps
pushf
sbb
push
cld
xor
test
inc
stos
rol
cmp
jg
(bad)
call
mov
sub
(bad)
gs
in
push
daa
sub
pop
xlat
(bad)
(bad)
push
pop
mov
cmp
test
add
jmp
sub
inc
and
or
xchg
inc
in
pusha
jle
je
clc
aad
in
mov
rcr
jmp
test
movs
gs
push
mov
add
mov
and
in
ja
jmp
xchg
out
xchg
add
sbb
jb
xor
pop
loope
ret
or
bts
not
mov
mov
cmp
arpl
test
gs
ds
scas
imul
push
gs
dec
dec
cmp
icebp
sbb
jl
shr
in
out
sub
xchg
(bad)
sbb
cmp
pop
mov
(bad)
(bad)
mov
sbb
or
shr
xlat
cmp
xlat
xchg
mov
mov
(bad)
jmp
gs
push
cld
sbb
out
mov
ret
mov
dec
inc
(bad)
lahf
and
call
imul
push
push
rol
dec
jae
inc
rcr
cli
fucomip
pop
aaa
scas
add
test
aaa
mov
jp
xchg
push
sbb
(bad)
call
mov
aaa
mov
and
loopne
int3
jae
inc
mov
or
(bad)
push
add
or
int
dec
mov
pop
mov
retf
xor
xchg
push
sub
(bad)
cmp
repnz
(bad)
call
fdiv
sti
jge
pop
in
adc
(bad)
(bad)
dec
adc
jne
add
pop
stos
push
push
sub
inc
lea
sbb
sub
(bad)
(bad)
(bad)
jmp
inc
push
cmp
adc
retf
repz
iret
xlat
ret
adc
push
movs
mov
(bad)
(bad)
mov
adc
lds
cmp
or
sti
xor
inc
sahf
loopne
mov
(bad)
(bad)
jg
and
data16
push
into
mov
test
cs
cdq
sbb
(bad)
test
dec
mov
and
les
(bad)
call
cli
mov
jle
jl
iret
mov
jo
push
mov
xor
xor
mov
xchg
dec
sbb
jne
scas
push
xor
ins
or
jne
jno
adc
loopne
sar
mov
xor
fwait
xor
push
push
inc
(bad)
leave
xchg
pushf
popf
stos
repz
(bad)
(bad)
call
push
push
shl
ret
test
test
fcomip
ins
adc
xor
and
clc
xchg
(bad)
sbb
add
(bad)
(bad)
(bad)
call
jo
jno
or
ins
in
adc
and
sbb
inc
pop
mov
xchg
stos
adc
hlt
dec
and
dec
cmps
mov
xchg
scas
js
retf
ficom
mov
(bad)
and
(bad)
(bad)
jmp
sbb
mov
in
add
popa
mov
addr16
xor
imul
mov
(bad)
(bad)
(bad)
push
jb
aad
push
loopne
jbe
fidivr
popf
lock
dec
push
inc
pop
scas
cmps
add
(bad)
cmp
(bad)
(bad)
push
and
adc
in
pushf
test
daa
data16
adc
test
push
xchg
jo
mov
mov
cmp
popa
(bad)
(bad)
out
xor
ja
cmp
push
in
push
or
push
adc
(bad)
(bad)
push
fwait
jmp
fld
cmc
aam
test
xor
adc
mov
fdivr
cwde
loopne
add
inc
mov
and
mov
(bad)
out
stos
cmp
and
ds
jne
pop
add
cmp
sbb
test
push
or
test
inc
rcr
xchg
les
push
(bad)
inc
mov
push
(bad)
(bad)
jmp
aam
lock
jbe
add
inc
sahf
nop
or
shl
out
cs
pushf
test
dec
ror
add
push
mov
enter
(bad)
(bad)
(bad)
push
lods
sub
adc
xor
dec
mov
adc
adc
mov
imul
push
add
(bad)
dec
sbb
dec
pop
repz
inc
mov
bound
adc
xchg
sbb
ret
adc
repnz
xchg
mov
rol
jecxz
sbb
(bad)
(bad)
(bad)
(bad)
in
(bad)
pop
out
stos
cmp
mov
sub
test
or
mov
in
test
retf
(bad)
(bad)
(bad)
jmp
pusha
inc
lahf
ins
dec
sub
dec
pop
mov
out
push
and
test
test
cli
test
daa
repnz
xlat
fwait
push
jmp
(bad)
xor
jl
mov
pop
sub
mov
lahf
jg
cs
(bad)
inc
(bad)
jmp
push
(bad)
sbb
pop
popa
pushf
icebp
cmp
sub
repz
jbe
sbb
rcl
xor
pusha
cmp
pop
jns
mov
and
loope
adc
int3
push
lods
mov
jmp
mov
(bad)
(bad)
jmp
jb
adc
sub
sub
jo
jo
jp
lods
out
and
push
aaa
mov
sub
and
jg
(bad)
iret
cs
cmp
stc
sti
loop
bound
pop
jb
inc
stos
sub
(bad)
jmp
pusha
imul
ror
cmp
call
jmp
(bad)
lods
imul
mov
mov
repz
iret
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sbb
les
push
mov
pop
dec
sti
add
push
clc
and
xor
mov
clc
mov
adc
sbb
xor
dec
jmp
hlt
mov
mov
jmp
nop
loop
push
or
inc
pop
mov
mov
mov
jo
enter
es
push
call
jg
cmps
js
mov
shl
jbe
adc
aam
call
jmp
mov
pop
ja
and
ret
jo
cdq
jae
xchg
js
inc
ret
hlt
cmp
inc
rcr
ins
lea
xchg
jl
sbb
inc
out
inc
jle
xlat
clc
movs
mov
(bad)
inc
movmskps
out
jl
int
adc
adc
jo
mov
outs
jmp
xor
and
mov
cmp
push
add
(bad)
dec
leave
mov
cs
fisttp
adc
cmp
pop
mov
in
hlt
jo
sbb
pop
(bad)
(bad)
(bad)
inc
fmul
jno
arpl
es
and
jge
call
outs
add
lods
inc
in
mov
jmp
or
inc
or
call
jge
repnz
call
inc
mov
xlat
xchg
pop
repz
inc
add
pushf
cmps
aas
inc
push
(bad)
sub
lock
test
jae
and
pop
call
push
(bad)
sbb
sbb
mov
mov
xchg
or
and
pop
jb
aas
pushf
fimul
or
aam
adc
mov
push
aas
jnp
lds
sbb
inc
and
push
cmc
leave
ret
sbb
loopne
sahf
fcomp
push
push
cmp
ret
div
(bad)
(bad)
(bad)
(bad)
out
ss
xor
add
xor
pop
adc
sahf
pushf
pop
mov
and
add
aam
imul
(bad)
(bad)
in
popa
and
lahf
ja
cwde
adc
xor
inc
or
add
outs
cli
out
cli
cmc
dec
call
les
in
jge
data16
fild
(bad)
mov
rep
test
push
pop
sbb
lods
or
sbb
jne
call
popf
(bad)
xor
cmc
mov
cdq
ret
popa
test
push
jp
(bad)
(bad)
inc
xor
retf
xor
mov
ror
cs
mov
fcomip
and
arpl
and
shr
pusha
adc
inc
mov
(bad)
(bad)
(bad)
push
rcr
pop
in
pop
fcom
mov
jns
loope
cmc
(bad)
loopne
inc
(bad)
(bad)
(bad)
call
scas
call
mov
mov
fdivr
push
xor
test
push
jg
ret
das
rol
test
pop
fisttp
enter
pop
repz
ins
call
mov
mov
push
(bad)
(bad)
aad
and
push
inc
mov
lea
pop
add
(bad)
(bad)
(bad)
out
mov
mov
sbb
repz
jo
push
in
iret
cs
dec
out
adc
add
jae
dec
(bad)
jle
mov
test
push
push
push
and
xlat
jp
sbb
test
fwait
ror
(bad)
(bad)
dec
shl
lds
add
cmp
(bad)
rcr
pop
sahf
jb
jno
and
sbb
add
outs
mov
dec
(bad)
jmp
shl
sbb
mov
dec
pop
sub
imul
aam
jp
fs
or
mov
adc
pop
cld
inc
adc
xor
cli
sti
pushf
sar
jecxz
(bad)
mov
xchg
xor
inc
adc
arpl
mov
add
or
pop
dec
lea
ffree
cld
pusha
and
sar
add
jo
push
repz
xor
adc
(bad)
out
sar
push
cmp
int
dec
or
sub
mov
ja
cmps
pop
add
mov
pcmpgtd
(bad)
mov
mov
sub
xchg
loop
push
leave
or
or
cli
jl
inc
sbb
inc
cmp
mov
das
pop
js
mov
rol
mov
mov
aam
idiv
adc
int3
loope
(bad)
(bad)
call
in
lahf
pushf
daa
aas
gs
adc
inc
retf
(bad)
xchg
std
(bad)
retf
jecxz
(bad)
jg
(bad)
adc
jo
(bad)
and
jbe
cmp
dec
loopne
scas
pop
xchg
cmp
dec
mov
loope
retf
push
rcl
icebp
out
out
push
adc
xor
icebp
fistp
(bad)
(bad)
mov
out
add
mov
cdq
stc
icebp
(bad)
mov
xchg
(bad)
jmp
mov
not
jae
(bad)
pop
stos
xchg
sbb
xor
scas
(bad)
adc
(bad)
(bad)
cld
pop
icebp
mov
out
mov
pushw
in
xchg
lods
cwde
sub
jg
pop
inc
push
pop
jbe
dec
mov
xor
add
scas
mov
std
inc
xlat
mov
jmp
pop
dec
xor
xchg
lock
or
movs
dec
mov
xchg
pushf
in
cmp
jg
adc
into
mov
add
mov
sub
add
cmp
imul
cmc
(bad)
int3
cli
hlt
clc
outs
jmp
repnz
xlat
adc
and
jp
jecxz
(bad)
(bad)
fnstcw
xchg
(bad)
call
jnp
test
push
dec
dec
hlt
pop
inc
mov
mov
fcmovb
push
pop
movs
and
sbb
test
adc
in
sti
push
xor
mov
mov
(bad)
inc
les
mov
scas
jo
out
sub
mov
cmp
dec
cmp
(bad)
(bad)
jmp
test
in
sbb
test
fisttp
ds
inc
mov
dec
(bad)
ja
ins
mov
mov
(bad)
repz
ja
cmp
add
adc
sbb
or
ret
mov
jmp
clc
aas
mov
stos
leave
and
iret
fstp
fnsave
imul
sub
mov
stc
cmp
pop
push
cmp
and
mov
std
mov
fwait
sbb
sub
(bad)
(bad)
(bad)
ds
jp
xchg
popa
jno
sub
jns
mov
jmp
mov
(bad)
and
adc
and
(bad)
xchg
out
sbb
jmp
jmp
push
pop
push
add
sub
jp
push
or
mov
sub
cld
gs
sub
bnd
retf
inc
jl
lods
retf
dec
cmp
xor
rcl
push
inc
std
(bad)
jg
jmp
hlt
pop
sub
arpl
mov
les
hlt
or
pop
out
xchg
scas
xchg
lea
push
call
mov
or
(bad)
jle
jge
add
sbb
xor
sti
mov
pop
jle
fs
and
lock
jmp
mov
loop
out
in
dec
pop
rcr
nop
jle
cmps
ret
test
(bad)
(bad)
dec
add
pop
and
fistp
les
clc
lods
stos
lods
or
(bad)
movs
gs
(bad)
call
iret
pop
sub
aas
pop
punpckhdq
mov
pop
jo
cmps
jmp
sub
(bad)
(bad)
jmp
mov
in
imul
adc
test
push
out
cmps
mov
inc
xor
cmc
dec
call
(bad)
push
sub
xor
xor
call
cld
in
stc
rcl
and
or
das
pop
mov
cmp
xor
add
(bad)
(bad)
(bad)
jmp
jmp
xor
sub
xlat
mov
mov
push
mov
xor
cmp
retf
ins
inc
sbb
jno
or
adc
out
sbb
scas
loopne
mov
sub
or
adc
or
daa
loopne
mov
add
les
retf
add
or
(bad)
mov
cmp
xor
loope
mov
scas
add
(bad)
(bad)
dec
addr16
lock
sub
ret
fwait
cmp
call
xchg
xlat
jecxz
xchg
fs
jne
ds
sar
push
and
inc
loop
bnd
mov
out
(bad)
outs
xor
mov
out
(bad)
(bad)
mov
nop
aas
int
jbe
mov
ret
jnp
in
inc
mov
les
(bad)
(bad)
dec
fild
in
mov
sahf
mov
out
push
mov
(bad)
mov
jb
aas
call
(bad)
cmps
xchg
lock
(bad)
(bad)
inc
xor
es
mov
fcmove
std
jecxz
int
sar
(bad)
(bad)
(bad)
jge
mov
or
xlat
clc
in
arpl
jbe
idiv
mov
test
inc
dec
inc
jnp
mov
jmp
mov
stos
mov
sbb
mov
jns
(bad)
sti
and
pop
cmp
dec
fsubr
xchg
mov
repnz
mov
stos
(bad)
(bad)
(bad)
jmp
mov
fsub
xchg
mov
mov
add
scas
movs
xchg
(bad)
(bad)
(bad)
(bad)
jp
(bad)
in
psrlw
enter
sub
bound
xchg
adc
lods
retf
inc
adc
mov
(bad)
(bad)
(bad)
inc
test
clc
push
clc
scas
movs
sub
or
mov
test
test
inc
(bad)
mov
pop
adc
sub
cwde
jmp
in
movs
imul
(bad)
call
ficomp
or
mov
or
sbb
pop
sti
jnp
mov
push
pop
jmp
mov
adc
sub
and
loope
(bad)
inc
and
(bad)
jae
push
ins
mov
ret
and
or
(bad)
(bad)
call
inc
pop
lods
mov
out
xor
out
jbe
adc
dec
imul
(bad)
(bad)
call
cwde
shl
or
jmp
xchg
pop
lods
lods
jnp
push
(bad)
(bad)
(bad)
dec
or
jge
mov
add
inc
jge
push
xor
(bad)
(bad)
(bad)
(bad)
sti
mov
aam
not
aad
jo
rcr
or
sahf
pop
pusha
xchg
adc
sbb
(bad)
jmp
out
mov
ror
push
pushf
and
fsubr
loop
mov
int
mov
adc
cwde
retf
xchg
mov
or
(bad)
jmp
mov
xor
xchg
add
jmp
dec
mov
pop
or
repz
(bad)
(bad)
(bad)
jmp
jb
ret
and
dec
cmp
mov
lods
cmp
add
jmp
(bad)
cmp
push
mov
out
into
push
or
das
mov
shr
cdq
mov
mov
mov
rcr
adc
xchg
shl
cmc
int3
add
daa
dec
jp
ins
mov
(bad)
(bad)
inc
adc
or
fbstp
repz
or
and
xor
loop
sar
(bad)
(bad)
jmp
inc
test
sbb
mov
pop
mov
popf
inc
sbb
jnp
push
inc
fstp
(bad)
inc
out
in
adc
repz
nop
idiv
enter
std
(bad)
(bad)
mov
push
adc
inc
xor
xor
cwde
xchg
icebp
sbb
das
mov
(bad)
(bad)
(bad)
mov
sub
mov
xor
push
ret
push
fbld
add
push
out
pop
cmp
rcl
daa
jecxz
and
push
pushf
aam
outs
repnz
jecxz
(bad)
(bad)
(bad)
call
pop
or
cmps
ret
mov
pushf
mov
in
add
in
int
icebp
test
mov
je
sahf
xchg
xlat
(bad)
(bad)
(bad)
push
cmp
clc
adc
mov
jno
pop
and
mov
adc
loope
(bad)
jmp
arpl
cmp
lds
outs
xchg
cld
call
push
fcomp
jmp
add
add
rol
and
(bad)
push
pusha
repz
mov
fsub
arpl
xor
movs
(bad)
clc
jecxz
pop
sahf
pop
xor
xchg
jle
call
jmp
xor
pop
imul
lock
out
cmc
pop
sahf
inc
lock
(bad)
jmp
lods
jl
ret
mov
xor
cdq
mov
ret
dec
pop
jp
(bad)
mov
lods
js
into
sbb
ss
daa
shl
test
cmp
xchg
and
(bad)
jmp
int3
fidivr
cmps
(bad)
(bad)
stos
jns
dec
enter
or
pop
jmp
(bad)
(bad)
jmp
xchg
hlt
inc
push
sub
popa
scas
add
sti
std
nop
and
cld
pop
push
mov
imul
or
xchg
cmps
sub
cld
or
mov
outs
in
mov
loopne
ds
jns
xor
call
call
mov
jmp
lods
fwait
mov
lds
(bad)
and
(bad)
(bad)
jmp
nop
out
cmps
das
adc
push
aad
add
add
mov
mov
(bad)
(bad)
call
ror
cmp
ss
add
jmp
cmc
mov
sub
and
xchg
xchg
mov
cmps
in
push
(bad)
jmp
addr16
mov
pop
shl
jmp
nop
inc
pop
loopne
inc
dec
add
(bad)
(bad)
push
push
push
sub
mov
aam
pop
mov
mov
scas
outs
xchg
inc
or
(bad)
(bad)
inc
and
xchg
into
adc
jecxz
ds
in
pop
xchg
test
add
push
push
xchg
xchg
movs
or
(bad)
(bad)
dec
cs
adc
dec
jmp
mov
adc
cmc
add
jb
sti
xchg
jne
pop
(bad)
(bad)
dec
loop
daa
iret
(bad)
adc
aad
push
nop
add
arpl
scas
cmps
outs
cli
mov
pop
(bad)
jmp
jno
shl
add
sbb
enter
push
and
movs
sub
or
(bad)
jmp
sbb
jp
test
shl
(bad)
(bad)
cmp
sbb
adc
mov
(bad)
fisubr
pop
ins
and
sub
or
sub
dec
sbb
sbb
mov
sbb
out
mov
test
mov
(bad)
call
(bad)
je
adc
xor
test
dec
inc
ss
test
xchg
hlt
je
mov
cmp
inc
dec
shl
jo
or
(bad)
out
cmp
push
push
adc
or
pop
scas
mov
push
pop
adc
cmp
sub
call
push
jne
jbe
dec
sbb
sbb
add
xor
pusha
int
ret
stos
(bad)
push
dec
mov
popf
add
ja
xchg
xor
pop
cmp
out
das
dec
adc
jg
popa
retf
fcomp
xor
cmp
fs
pop
mov
or
(bad)
cmp
addr16
dec
mov
adc
xor
je
sbb
jo
sbb
fcos
(bad)
(bad)
call
xor
cmp
jo
movs
and
and
push
test
imul
cmc
cmp
inc
hlt
retf
sahf
inc
push
pop
or
inc
xchg
xchg
and
xor
mov
(bad)
mov
cmps
push
cmp
mov
inc
daa
stos
dec
mov
(bad)
clc
sahf
int3
pop
push
jno
sbb
test
adc
out
les
and
mov
jg
inc
ds
mov
push
stos
arpl
inc
rcr
push
mov
test
inc
test
call
nop
and
sar
push
sbb
jne
jmp
cmp
push
xlat
(bad)
push
cdq
add
or
stos
mov
jae
(bad)
(bad)
(bad)
(bad)
sti
mov
ret
inc
sbb
sahf
adc
jno
dec
ds
jle
mov
(bad)
(bad)
(bad)
jmp
mov
or
mov
adc
jne
pop
loope
sbb
inc
aad
pop
out
push
hlt
cs
dec
test
push
dec
mov
test
mov
cld
dec
iret
mov
xchg
cmp
inc
pop
lods
push
(bad)
(bad)
(bad)
jmp
rol
push
pop
adc
push
mov
jmp
sub
push
adc
(bad)
(bad)
(bad)
(bad)
jg
sbb
sbb
test
outs
test
(bad)
aam
xchg
test
nop
gs
jg
(bad)
call
nop
dec
push
in
outs
jmp
daa
pop
pop
(bad)
cmp
test
adc
(bad)
out
mov
retf
movs
xchg
jae
adc
add
push
ins
jmp
loope
(bad)
(bad)
(bad)
(bad)
fld
addr16
and
cmps
mov
test
int3
dec
cmp
push
in
pop
pop
loopne
add
pushf
sub
push
jmp
(bad)
(bad)
fldcw
xor
rol
push
scas
ss
or
jl
xchg
xchg
add
adc
mov
push
mov
or
pop
mov
js
pop
(bad)
(bad)
(bad)
call
iret
add
jae
in
iret
test
push
xchg
stc
sbb
rcl
clc
fnstcw
jg
pop
(bad)
hlt
push
jbe
and
(bad)
adc
loope
aad
nop
push
xor
mov
std
fcomip
mov
int3
aam
iret
(bad)
retf
jl
pop
(bad)
sbb
sti
(bad)
(bad)
(bad)
dec
mov
jns
cmp
cld
cmp
and
mov
stos
hlt
cmc
pop
popa
push
cmp
(bad)
inc
mov
mov
add
(bad)
ror
push
lock
fiadd
arpl
pop
push
das
jl
push
mov
xchg
sbb
push
or
ret
test
adc
xchg
or
pop
cmp
out
popf
mov
(bad)
(bad)
call
jne
push
jne
(bad)
aad
sbb
lahf
lahf
mov
sahf
shr
and
fcmovnu
cmp
(bad)
inc
out
test
out
xchg
sub
hlt
inc
cmps
inc
outs
outs
jo
ins
dec
loopne
dec
mov
iret
dec
jo
sbb
cmova
dec
pop
jmp
jge
fxch
das
aas
jl
push
pop
jo
mov
push
pop
pop
int
in
push
xor
(bad)
jmp
or
adc
cmp
pusha
ficomp
adc
push
outs
fcomp
mov
(bad)
(bad)
in
call
push
mov
push
sub
xchg
xor
or
push
cmp
and
aad
mov
mov
daa
xchg
pusha
sahf
shr
xchg
inc
inc
fdiv
imul
mov
jmp
jne
leave
adc
ja
dec
and
pusha
xchg
sbb
jmp
call
jnp
mov
push
fst
sub
push
ja
in
xchg
fimul
mov
mov
jecxz
(bad)
inc
xlat
sub
pop
pop
lock
ret
pop
inc
es
enter
mov
das
cli
mov
mov
test
mov
xor
(bad)
(bad)
jmp
imul
adc
mov
and
pop
mov
rol
pop
cmc
dec
mov
movs
xchg
xor
sbb
jo
mov
push
jno
cmp
mov
inc
jle
sub
fdivr
fimul
(bad)
in
add
addr16
and
and
retf
sbb
addr16
shr
imul
cmp
jge
xchg
clc
(bad)
(bad)
call
(bad)
cmp
mov
pop
pop
fdivr
mov
jmp
std
sar
(bad)
dec
mov
mov
stos
pushf
into
inc
or
mov
push
cld
(bad)
fist
or
sahf
sub
test
sti
sahf
sbb
idiv
(bad)
(bad)
(bad)
out
popa
mov
pushf
mov
movs
add
dec
les
fcomp
(bad)
(bad)
push
xor
adc
test
mov
push
xchg
pop
mov
mov
pop
pop
sub
jae
mov
cmc
inc
outs
(bad)
(bad)
jmp
adc
cwde
mov
fbstp
cmp
fild
push
in
sbb
(bad)
(bad)
call
mov
test
add
add
pop
xor
repz
(bad)
(bad)
mov
pop
push
mov
mov
inc
and
cmp
loopne
push
jmp
ins
sbb
lock
sbb
(bad)
inc
sub
xchg
scas
jl
or
je
push
inc
pop
mov
sahf
scas
(bad)
(bad)
(bad)
inc
leave
js
(bad)
imul
(bad)
das
movs
imul
pushf
push
dec
jb
fnstcw
(bad)
(bad)
(bad)
call
aam
jl
mov
in
outs
cmp
adc
push
jecxz
mov
jnp
(bad)
(bad)
(bad)
(bad)
call
ret
cmp
sbb
(bad)
ficom
and
mov
shl
pop
jbe
movs
(bad)
call
scas
jle
iret
jl
xor
test
mov
add
retf
(bad)
call
rcl
(bad)
aam
or
pusha
shl
pusha
cmps
cmps
pop
popa
js
sbb
inc
adc
jbe
ja
out
push
in
aam
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
cmp
and
mov
xor
jno
cmc
mov
retf
(bad)
(bad)
(bad)
(bad)
dec
vunpckhps
xchg
cld
jbe
dec
pop
sub
popf
inc
rol
mov
push
loopne
(bad)
(bad)
dec
and
pop
cmp
fnstcw
cmps
mov
fild
lods
ins
nop
adc
(bad)
(bad)
call
dec
add
mov
xchg
pop
push
cmps
adc
or
and
call
sbb
ret
mov
inc
jnp
or
pop
xor
scas
mov
idiv
ins
and
jecxz
lahf
push
fsubrp
les
shr
jne
(bad)
(bad)
inc
scas
pop
pop
rol
fs
lods
pop
ds
jb
pop
jbe
mov
jg
mov
cld
push
pop
stos
push
xchg
mov
jp
stos
xchg
je
lods
(bad)
(bad)
mov
adc
dec
fidiv
lock
imul
ret
popa
dec
pop
(bad)
(bad)
(bad)
jmp
xor
int3
inc
mov
(bad)
and
or
repnz
daa
mov
out
sub
(bad)
(bad)
(bad)
jmp
mov
out
mov
out
push
or
cmc
add
jae
add
adc
(bad)
mov
mov
mov
sub
(bad)
shl
jnp
fs
pop
(bad)
(bad)
(bad)
dec
push
out
ja
jmp
les
xchg
pop
sbb
faddp
jo
mov
xchg
jmp
xor
out
fcomp
jns
loope
push
out
jns
pop
inc
xchg
sbb
(bad)
(bad)
call
inc
cmp
xchg
cmps
test
pusha
ret
fsubr
push
mov
std
jmp
mov
add
dec
mov
xor
(bad)
(bad)
(bad)
push
mov
push
sbb
xor
retf
push
xlat
pop
mov
jl
movs
pop
sbb
xor
cmps
or
jg
test
imul
retf
imul
js
(bad)
(bad)
(bad)
jmp
repnz
jmp
in
in
hlt
rol
dec
push
push
daa
in
daa
into
mov
loope
xchg
mov
(bad)
dec
mov
sbb
jl
mov
scas
or
sub
cli
ins
ficomp
out
(bad)
(bad)
mov
pop
and
jmp
imul
inc
nop
lock
push
push
fisub
ret
cmp
das
nop
adc
push
sub
jl
mov
cli
mov
rcr
push
ret
hlt
retf
cmp
adc
in
(bad)
inc
jne
out
cmp
pop
shl
in
push
(bad)
inc
pushf
in
cmp
(bad)
(bad)
dec
popf
std
int
ficom
pop
jp
mov
inc
fsub
mov
sub
pop
std
call
(bad)
shl
call
leave
push
call
fstp
(bad)
(bad)
(bad)
jmp
xchg
ds
adc
imul
(bad)
sub
add
clts
jbe
nop
aam
push
mov
inc
mov
outs
mov
adc
(bad)
cmp
push
adc
jne
fld
pop
sbb
cwde
rcr
(bad)
mov
dec
pop
stos
xor
push
es
out
cld
lods
mov
or
test
(bad)
pop
mov
shr
sbb
sub
mov
add
(bad)
scas
mov
rcl
sbb
sub
in
out
sti
call
je
popa
cld
(bad)
fstp
fistp
push
pop
aas
aaa
sti
sti
(bad)
(bad)
jmp
xor
or
pop
scas
aam
push
outs
adc
sub
mov
sub
sub
fcom
out
je
xchg
(bad)
(bad)
(bad)
(bad)
aas
ja
nop
mov
jle
jnp
push
sbb
and
dec
mov
test
mul
(bad)
(bad)
call
adc
adc
mov
popa
adc
inc
push
mov
(bad)
call
(bad)
out
add
retf
(bad)
imul
xchg
fwait
mov
cmp
jmp
jmp
add
push
aaa
mov
fist
fwait
scas
jbe
jp
mov
(bad)
(bad)
(bad)
jmp
dec
repnz
jge
mov
(bad)
sti
adc
pop
(bad)
jmp
dec
xor
(bad)
fisubr
sbb
mov
aaa
pop
adc
loop
xchg
inc
pop
xchg
mov
ret
pushf
and
clc
xchg
popa
inc
dec
icebp
(bad)
aad
lea
(bad)
(bad)
(bad)
dec
sbb
xchg
sub
(bad)
loop
pop
mov
sbb
and
xchg
jle
mov
jg
inc
mov
fnstenv
std
pop
gs
cmp
loope
xchg
std
call
cli
and
repnz
mov
repz
fidiv
inc
push
or
sti
or
(bad)
data16
jmp
sbb
mov
mov
mov
out
xor
out
xor
push
push
std
cmc
sti
lods
repz
inc
loope
(bad)
mov
out
or
push
leave
mov
std
pop
mov
fiadd
pop
push
mov
jb
inc
mov
or
stos
mov
dec
mov
dec
std
fisub
outs
mov
or
or
fptan
and
sahf
cmp
in
loopne
out
adc
aam
inc
clc
out
and
jmp
iret
std
das
fadd
lahf
xchg
pop
mov
sti
pop
add
(bad)
(bad)
aas
add
aaa
cmc
hlt
xor
mov
mov
ja
cmp
push
(bad)
push
mov
inc
mov
repz
jbe
sbb
addr16
fldcw
mov
stos
bnd
pop
hlt
(bad)
(bad)
cmp
sub
adc
dec
cmps
inc
xchg
imul
aaa
icebp
(bad)
(bad)
inc
ret
(bad)
mov
inc
mov
arpl
sbb
(bad)
fistp
mov
mov
push
sbb
pop
push
lods
jo
inc
mov
jmp
jl
cmp
(bad)
(bad)
dec
dec
adc
xor
jle
les
push
cli
in
jo
scas
ins
cmp
cli
inc
sar
cli
(bad)
jmp
sbb
xchg
shl
pop
lods
bound
fdiv
(bad)
(bad)
push
mov
imul
dec
les
stos
retf
cmp
jmp
jmp
push
lods
cmp
bound
das
fwait
mov
jne
movs
dec
adc
fild
cwde
jge
fcom
imul
shl
inc
out
add
sbb
inc
int3
sub
inc
ds
jg
mov
iret
enter
es
jns
rol
test
outs
frstor
pop
fmul
sbb
cld
jg
sahf
and
scas
ds
movs
jne
das
(bad)
pop
retf
fwait
(bad)
jmp
xchg
iret
lahf
mov
pop
mov
mov
xchg
mov
bound
(bad)
out
outs
push
xchg
aam
loopne
call
mov
sbb
push
cmp
xor
push
outs
jae
(bad)
(bad)
push
push
mov
adc
mov
pop
dec
push
mov
popa
(bad)
(bad)
out
clc
pop
jmp
mov
mov
sub
jbe
arpl
(bad)
jg
inc
dec
cwde
and
jl
inc
jmp
(bad)
hlt
rol
and
pcmpeqb
(bad)
(bad)
dec
adc
mov
fisttp
push
adc
fcomip
push
or
into
sbb
fcos
outs
mov
or
jp
and
inc
pushf
mov
jge
mov
cmp
outs
pusha
cli
pop
lock
sbb
sbb
int
push
xchg
push
loopne
aam
(bad)
(bad)
fcomip
add
imul
dec
sbb
xchg
mov
in
fcmovne
(bad)
(bad)
(bad)
(bad)
mov
mov
sahf
aas
adc
adc
pop
fsub
ss
sbb
mov
fdivr
hlt
(bad)
(bad)
(bad)
call
das
out
adc
sysret
div
shl
test
jmp
hlt
jmp
pop
sahf
(bad)
(bad)
(bad)
push
pop
repnz
xor
out
adc
xchg
scas
xchg
and
lea
lods
sti
(bad)
(bad)
jmp
test
push
loope
sbb
cmps
add
lahf
add
pop
int3
dec
jle
mov
ror
ins
int
mov
inc
mov
adc
je
(bad)
(bad)
(bad)
push
shl
sbb
mov
jl
loop
rol
stc
pop
(bad)
jmp
nop
test
inc
retf
xchg
and
test
lahf
or
push
cdq
jbe
das
mov
or
(bad)
inc
mov
xor
test
fimul
push
das
loop
(bad)
(bad)
(bad)
jmp
inc
sub
das
mov
fild
data16
push
jne
and
add
mov
(bad)
(bad)
jmp
cwde
push
pop
lods
pop
data16
ins
ins
and
jo
sub
test
add
sub
aas
pop
push
stc
arpl
(bad)
(bad)
dec
pop
(bad)
jbe
int3
mov
mov
sbb
xchg
rol
je
(bad)
call
pop
cmc
pop
test
or
or
lods
jp
cld
jecxz
movs
add
(bad)
(bad)
call
inc
dec
jns
cmp
aas
fdiv
xchg
add
pushf
xor
adc
(bad)
dec
rcl
(bad)
(bad)
inc
push
pop
test
push
adc
mov
jnp
(bad)
(bad)
(bad)
js
sahf
call
xor
in
and
in
dec
aam
jge
bound
mov
shl
jbe
stos
dec
test
stos
imul
shr
sub
movs
jg
adc
popa
inc
hlt
pop
call
ss
sub
into
lea
mov
dec
mov
jecxz
(bad)
(bad)
fbstp
sbb
test
bound
leave
neg
sub
test
jb
dec
das
ja
inc
(bad)
(bad)
jmp
js
(bad)
inc
rcl
hlt
and
je
jbe
fimul
scas
jae
add
les
in
rcr
lock
and
add
adc
(bad)
(bad)
call
mov
mov
sahf
mov
xor
and
retf
push
das
sahf
outs
cmps
sub
push
ret
or
push
rcl
and
push
(bad)
inc
lock
mov
cmps
or
mov
dec
pop
dec
and
sub
dec
icebp
cmps
mov
(bad)
sbb
sub
sub
sbb
add
mov
push
lds
xchg
mov
fdiv
mov
into
sub
adc
xor
(bad)
(bad)
(bad)
xchg
adc
test
and
dec
jae
add
jmp
sahf
(bad)
fistp
sbb
mov
and
les
push
xor
mov
(bad)
(bad)
(bad)
mov
lods
pusha
add
xchg
loopne
xchg
jns
push
div
lahf
cmp
in
rcl
dec
out
or
call
cmp
and
sub
xchg
lds
xchg
div
lods
into
push
nop
(bad)
(bad)
(bad)
dec
xchg
retf
cld
mov
(bad)
stc
idiv
idiv
out
inc
or
mov
mov
mov
(bad)
(bad)
jmp
mov
ret
nop
sbb
mov
or
outs
data16
jp
push
cld
mov
mov
mov
sbb
inc
sbb
inc
mov
xor
push
mov
stos
in
cmp
sub
scas
pop
(bad)
or
mov
inc
cs
icebp
outs
imul
ds
leave
jo
jns
call
test
sub
jmp
scas
call
dec
push
(bad)
(bad)
(bad)
jmp
sub
dec
add
sbb
push
adc
sbb
out
mov
lock
adc
adc
xchg
push
or
push
fistp
(bad)
(bad)
fcom
cmp
xor
sbb
pop
cmp
ret
mov
xchg
cmp
jmp
mov
cmps
rcl
popa
add
or
mov
jl
(bad)
dec
xor
xchg
ins
xor
jle
sub
call
mov
(bad)
(bad)
jge
push
inc
stos
xchg
cmps
mov
adc
out
xchg
add
push
xlat
jo
(bad)
(bad)
push
sub
jmp
add
je
ret
or
jae
(bad)
call
stos
out
cmp
sub
sub
iret
push
and
iret
adc
add
rcr
adc
sub
test
inc
add
repnz
ins
ret
or
call
inc
jmp
(bad)
pop
call
xor
dec
sub
enter
call
loopne
int3
jmp
test
sub
jmp
cmp
pop
mov
movs
add
(bad)
inc
into
add
retf
adc
cmp
xchg
xchg
aam
xor
cld
(bad)
inc
sub
push
rcr
movs
movs
(bad)
call
sub
mov
jae
arpl
cs
and
jl
js
bound
repnz
stc
scas
mov
or
adc
(bad)
sub
jb
push
push
cdq
(bad)
mov
push
out
nop
lock
dec
pushf
jmp
mov
sbb
ret
mov
(bad)
(bad)
call
cmc
sbb
test
sbb
sbb
jecxz
xchg
lods
xlat
xor
(bad)
(bad)
(bad)
call
adc
inc
fdivr
das
dec
inc
scas
fstp
fs
(bad)
loop
ret
jo
jmp
cmc
mov
mov
inc
mov
mov
outs
std
(bad)
nop
icebp
pop
loopne
inc
jl
ret
push
mov
mul
pop
icebp
xchg
mov
call
retf
push
out
js
mov
or
cmp
(bad)
jmp
jae
loop
cmc
sti
jmp
ss
call
cmp
ret
nop
jp
dec
cmc
xor
(bad)
(bad)
cmp
shr
mov
loop
daa
mov
mov
loope
push
ret
fst
(bad)
iret
fcomp
(bad)
(bad)
(bad)
push
cmp
mov
jmp
in
aad
je
pop
pop
dec
jp
jle
inc
in
add
(bad)
push
add
jge
fs
retf
cmps
mov
test
ffree
(bad)
(bad)
(bad)
jg
jmp
mov
popa
cld
icebp
xor
sbb
into
int
aam
mov
pop
iret
dec
xor
push
ret
leave
js
jbe
out
cmp
push
mov
inc
ins
movs
sub
pop
push
lahf
xchg
sahf
fmul
(bad)
(bad)
(bad)
(bad)
(bad)
jno
in
or
fwait
push
inc
clc
sub
lds
leave
retw
(bad)
mov
pop
lock
xchg
loop
ja
fucomi
jnp
outs
(bad)
call
cmp
jmp
test
sbb
bound
dec
lods
inc
pop
lahf
sbb
and
inc
adc
mov
shl
jle
adc
sahf
adc
(bad)
jmp
mov
clc
(bad)
(bad)
jmp
lds
mov
xchg
mov
call
cmp
sub
jmp
scas
or
and
fucom
sar
sub
and
inc
xor
popa
mov
lahf
inc
ficomp
(bad)
les
push
cmp
mov
xchg
dec
adc
das
add
(bad)
fld
neg
xchg
imul
mov
out
inc
jb
arpl
test
mov
xchg
jmp
cmp
or
js
mov
mov
call
stos
inc
sub
and
adc
out
sbb
inc
cmc
mov
inc
retf
(bad)
(bad)
(bad)
call
jl
test
jmp
push
xor
imul
(bad)
(bad)
(bad)
(bad)
jmp
add
test
shl
sub
push
inc
bound
jmp
sbb
les
mov
cmps
mov
and
lock
pushf
cli
xchg
xor
xchg
adc
(bad)
push
in
dec
add
hlt
imul
test
sbb
fwait
cvtps2pd
popa
cwde
shl
(bad)
(bad)
call
xor
int3
pop
pop
sbb
arpl
arpl
(bad)
(bad)
call
mov
xor
ds
xchg
lds
sbb
push
cld
pop
push
std
(bad)
(bad)
push
jno
fadd
mov
jl
cmp
retf
inc
dec
test
push
jnp
and
xchg
sar
pop
popa
test
test
sbb
in
mov
ins
mov
fidiv
clc
(bad)
(bad)
cmp
outs
mov
cld
mov
out
mov
add
xor
dec
inc
int
daa
(bad)
(bad)
(bad)
jmp
mov
jbe
pop
pop
outs
cli
imul
push
and
push
dec
outs
sub
push
(bad)
(bad)
(bad)
jmp
xlat
inc
cmps
jae
out
mov
out
add
mov
xchg
or
(bad)
(bad)
jmp
dec
cli
inc
int3
rol
jle
out
mov
aaa
outs
lahf
cmp
push
(bad)
mov
dec
inc
add
or
lea
mov
jns
iret
xchg
mov
sub
push
in
(bad)
(bad)
(bad)
dec
xchg
cmc
shr
data16
(bad)
(bad)
jmp
pusha
(bad)
(bad)
push
fisttp
fwait
xor
pop
push
and
(bad)
(bad)
jmp
lea
ds
enter
in
clc
inc
lods
push
int3
sti
mov
sbb
mov
daa
pop
shr
lods
xor
inc
mov
rcr
test
lock
mov
sub
mov
fild
push
push
stos
ja
adc
sar
ins
mov
mov
(bad)
dec
repz
aad
add
daa
or
adc
mov
xchg
mov
cmp
pop
xor
jmp
adc
mov
fdivr
cmp
call
loopne
repz
push
xchg
outs
lods
cmc
stos
pcmpeqw
stc
adc
sar
iret
mov
popa
stc
mov
sub
(bad)
(bad)
mov
fwait
pop
rol
jg
out
mov
inc
rcl
scas
sahf
add
jmp
fbld
pop
mov
pop
adc
data16
and
cmps
push
xor
mov
sbb
imul
dec
or
scas
mov
aad
push
cmp
out
enter
sahf
pop
mov
addr16
cmps
lea
out
inc
jbe
inc
fdivp
scas
jg
pop
shl
retf
ja
cmps
xchg
das
test
push
push
add
pop
adc
ds
pop
mov
jae
pop
ret
fnsave
(bad)
push
sbb
std
je
in
loop
xor
push
in
out
mov
loopne
shr
cld
fbstp
push
clc
call
or
(bad)
repnz
and
adc
dec
imul
dec
loopne
aas
adc
mov
nop
mov
pop
lods
imul
push
inc
sti
mov
outs
push
or
push
cld
out
fdivr
push
xchg
and
imul
push
and
mov
faddp
cmp
or
(bad)
in
jmp
mov
inc
xchg
(bad)
(bad)
(bad)
(bad)
out
addr16
test
or
pop
jbe
popa
mov
out
pusha
cmps
sahf
(bad)
ds
(bad)
jmp
add
cmp
pop
and
clc
jmp
mov
adc
dec
cmp
sar
aad
push
out
(bad)
aas
outs
outs
xchg
lock
push
cmp
daa
sbb
xchg
in
mov
push
pop
sti
cmps
test
jmp
fnstenv
pop
mov
push
std
test
sbb
sar
loopne
mov
mov
cmp
(bad)
(bad)
(bad)
mov
inc
cwde
es
cmp
fcomp
int
out
jnp
enter
pop
(bad)
(bad)
(bad)
jmp
cdq
mov
out
dec
push
pop
test
pop
inc
push
call
sbb
jmp
in
mov
dec
push
aaa
sub
cmp
sti
arpl
mov
hlt
idiv
sar
(bad)
(bad)
jmp
xchg
add
cmp
loop
ficomp
lea
mov
fwait
stos
mov
imul
(bad)
jg
push
stos
jmp
sbb
push
iret
push
jns
xchg
push
jge
push
fld
(bad)
jmp
mov
xor
cmp
push
inc
pushf
xor
jge
scas
(bad)
lahf
xor
push
push
ror
inc
pop
fs
sub
xor
pusha
lds
pop
std
dec
mov
sti
inc
mov
xor
setl
pop
fdivr
mov
(bad)
add
inc
sub
cmp
(bad)
(bad)
(bad)
jmp
out
(bad)
mov
mov
cld
imul
mov
cld
(bad)
(bad)
jmp
aad
clc
rcr
and
inc
nop
xchg
add
cli
(bad)
push
addr16
inc
inc
dec
retf
or
out
mov
jb
icebp
int3
add
xchg
push
(bad)
inc
ins
(bad)
in
mov
cs
mov
and
add
or
inc
cld
xlat
cs
push
retf
outs
faddp
cld
jg
mov
(bad)
push
dec
cdq
call
push
enter
inc
js
lods
jmp
jo
(bad)
(bad)
(bad)
cmp
aaa
and
inc
mov
in
sti
loop
lea
xor
fcmovnu
sub
inc
push
cld
dec
icebp
pop
rcl
dec
jle
mov
sub
not
js
(bad)
(bad)
push
lods
shr
int
in
retf
mov
jne
or
dec
pop
xor
pop
lods
jnp
clc
jg
cs
fbld
fst
push
in
mov
dec
gs
(bad)
(bad)
(bad)
(bad)
stc
jb
xchg
pop
xchg
ss
mov
cmp
test
retf
mov
loope
inc
jecxz
and
(bad)
dec
adc
enter
adc
stc
cmps
movs
retf
(bad)
(bad)
(bad)
call
xchg
outs
stc
imul
mov
mov
shl
dec
sub
out
pop
cwde
hlt
(bad)
(bad)
call
cmp
shr
jle
test
sub
icebp
sub
arpl
xchg
fwait
sti
(bad)
jg
ror
cmp
mov
jle
jo
and
(bad)
(bad)
(bad)
jg
daa
outs
jns
fsubrp
in
data16
aam
(bad)
out
mov
adc
js
je
cld
sbb
(bad)
(bad)
dec
test
jecxz
mov
je
mov
or
sub
aaa
cld
retf
push
lds
aad
xor
or
in
stos
and
cli
fcom
mov
(bad)
(bad)
(bad)
call
jne
mov
cmc
adc
push
cmp
xor
sti
test
jl
fwait
jecxz
or
(bad)
(bad)
jmp
cmp
test
inc
int
xor
xchg
sub
mov
xor
(bad)
(bad)
(bad)
call
data16
sub
mov
cmp
and
pop
jl
test
sbb
js
out
retf
cmc
add
out
mov
push
xor
push
sar
(bad)
(bad)
fbstp
mov
mov
mov
jle
cdq
jle
push
into
aaa
pop
cmp
jg
and
std
out
idiv
sbb
enter
jb
dec
pop
(bad)
(bad)
push
mov
(bad)
push
add
mov
add
mov
pop
push
(bad)
(bad)
dec
es
into
loopne
movs
sub
cmc
mov
aaa
pushf
xlat
mov
jge
movs
std
(bad)
(bad)
jmp
mov
lods
das
(bad)
add
leave
or
pop
xchg
stos
jnp
lea
(bad)
call
mov
sbb
sbb
ins
in
dec
imul
pop
and
out
mov
and
(bad)
(bad)
inc
or
mov
push
jns
ret
ins
adc
(bad)
pushf
jecxz
xchg
mov
inc
or
js
add
(bad)
jmp
or
cmp
ret
fsub
jmp
hlt
mov
push
pop
inc
(bad)
jp
pop
mov
(bad)
(bad)
mov
inc
cmp
lock
lahf
sbb
sub
jl
dec
call
ds
out
loop
mov
mov
mov
cmp
fnstsw
pop
mov
(bad)
scas
hlt
mov
sti
rcl
aas
jmp
(bad)
out
pop
cs
fld
add
jns
or
(bad)
jle
ds
je
cli
fisubr
push
int
fiadd
xor
(bad)
(bad)
call
mov
aas
in
iret
mul
ds
fdiv
xor
fxch
or
mov
inc
cmps
mov
(bad)
jmp
pop
jg
fwait
dec
mov
jp
cmp
(bad)
loope
(bad)
and
je
or
sbb
ja
sub
fwait
shl
push
jle
ret
sbb
jle
(bad)
and
aaa
mov
(bad)
pop
cmps
jmp
test
inc
push
pop
pop
push
popf
(bad)
push
cmps
cli
loopne
jne
dec
(bad)
cli
pop
rcl
(bad)
adc
nop
xor
in
push
test
sbb
shr
jns
push
fucom
mov
cmp
cmps
adc
and
(bad)
(bad)
call
dec
jb
jl
mov
dec
mov
lock
call
test
and
sar
jmp
xchg
xlat
jge
imul
mov
add
ss
dec
xor
je
into
sti
(bad)
(bad)
jmp
xchg
mov
cmp
mov
or
pop
out
test
xchg
clc
cli
cmp
jmp
sbb
xchg
mov
sbb
add
cmp
mov
xor
adc
xchg
outs
fsub
add
xchg
add
lods
add
jmp
push
adc
aam
or
cdq
lods
jne
jl
aam
das
rcr
icebp
(bad)
cmp
add
cmp
sahf
push
inc
jg
inc
shr
jmp
(bad)
(bad)
(bad)
jg
xor
or
push
or
mov
mov
and
leave
popf
cmp
call
(bad)
jmp
aad
push
shl
add
imul
int
repz
push
aas
mov
mov
add
out
fs
sbb
sbb
add
push
pushf
pop
(bad)
outs
mov
inc
test
fdivr
cmps
lods
imul
jns
jg
push
idiv
cmps
push
xlat
push
jae
inc
cmps
mov
and
mov
jne
retf
fidiv
movs
sub
adc
inc
push
popf
inc
stos
bound
adc
push
sar
(bad)
(bad)
call
out
ins
pop
push
lock
mov
or
mov
fwait
and
das
cli
or
ror
repnz
ret
loopne
loope
jl
add
(bad)
push
rol
mov
outs
dec
int
push
jp
dec
cmp
loop
jnp
jge
mov
(bad)
(bad)
jmp
loope
ds
dec
xor
data16
mov
sub
add
arpl
ret
(bad)
call
jmp
jmp
push
test
ds
sbb
push
adc
dec
fmul
mov
push
cmc
call
cmp
mov
or
(bad)
jecxz
jge
repz
push
or
stos
mov
shl
push
dec
jle
cmp
mov
(bad)
jmp
stos
sub
pusha
pop
push
dec
fstp
mov
enter
loopne
in
int
mov
(bad)
jmp
les
loope
xor
adc
jbe
frstor
inc
(bad)
(bad)
(bad)
mov
mov
int3
movs
nop
sub
idiv
dec
adc
mov
push
push
clc
jmp
xor
js
cmp
cmp
push
pop
jo
imul
bound
(bad)
dec
loope
mov
sar
mov
mov
pop
imul
(bad)
fild
loope
lahf
ja
test
add
and
mov
inc
fmulp
pop
iret
push
ficom
test
add
cmc
inc
adc
add
jmp
push
daa
xor
cli
cmp
test
jg
ficom
in
icebp
(bad)
(bad)
(bad)
(bad)
jmp
lahf
mov
pop
cmp
retf
jo
mov
pop
test
jae
out
imul
(bad)
jmp
gs
sbb
and
jae
scas
cmp
push
icebp
push
in
mov
(bad)
(bad)
(bad)
(bad)
out
pusha
aam
loopne
outs
xchg
sbb
cmp
pop
pop
ss
sahf
or
cdq
mov
pop
(bad)
(bad)
(bad)
inc
fwait
push
jmp
ficomp
or
loopne
rol
or
rol
push
in
iret
mov
fnstsw
(bad)
inc
pop
mov
xlat
outs
ins
ins
nop
mov
mov
sahf
test
(bad)
jmp
jecxz
shrd
cmc
or
or
or
dec
mov
icebp
push
or
ins
mov
call
outs
je
imul
mov
xor
and
xor
sub
mov
scas
jb
(bad)
(bad)
(bad)
call
mov
pusha
mov
xchg
xchg
xor
jne
mov
push
fbld
sahf
jle
ret
dec
movs
test
jmp
push
or
imul
sub
pushf
add
stos
stos
add
es
(bad)
(bad)
jg
xor
dec
mov
jno
mov
sar
cwde
xchg
xlat
push
(bad)
(bad)
(bad)
js
fist
xchg
mov
add
icebp
icebp
xor
inc
call
out
test
arpl
dec
(bad)
(bad)
jg
xchg
pop
mov
and
cmc
fs
aaa
sub
lods
xchg
lock
ds
mov
push
cld
(bad)
dec
call
push
pusha
les
push
or
ins
pop
pop
hlt
(bad)
(bad)
fld
bound
push
cmp
jbe
pop
xor
hlt
adc
imul
push
mov
push
cmp
scas
mov
push
adc
(bad)
(bad)
mov
ret
jle
shr
xchg
in
(bad)
jmp
popf
imul
push
xor
sub
jp
lods
sub
(bad)
(bad)
push
out
and
xchg
neg
mov
mov
lods
sub
jg
mov
dec
fs
mov
shl
push
push
add
jns
xlat
cs
(bad)
(bad)
call
xchg
dec
dec
gs
xchg
sti
xor
sub
xor
push
and
cmps
jle
xchg
(bad)
(bad)
call
xchg
mov
icebp
out
leave
xor
cmps
add
ret
pusha
pop
push
xchg
int
or
(bad)
aad
imul
and
push
test
ins
jle
mov
pop
xor
(bad)
(bad)
call
fiadd
xchg
jmp
sbb
hlt
mov
retf
inc
push
pop
mov
test
mov
push
adc
test
xor
jp
push
sub
and
movs
adc
pushf
sub
das
imul
push
jb
out
gs
xchg
aam
add
jle
hlt
into
pushf
test
cmps
push
enter
(bad)
inc
mov
fisubr
xor
xchg
cmovns
stos
aaa
aad
mov
cld
lahf
sub
cmp
(bad)
xor
test
pop
stos
dec
pop
enter
xchg
inc
sub
cmp
cs
cld
(bad)
(bad)
fnsave
mov
sbb
xchg
not
mov
loopne
push
sub
out
js
lock
push
add
or
jle
xchg
in
and
push
aas
(bad)
jmp
(bad)
mov
inc
jns
mov
push
mov
outs
adc
mov
int3
test
cmps
xchg
hlt
or
mov
scas
mov
push
loopne
je
cmp
inc
sahf
lock
cmps
(bad)
(bad)
(bad)
push
or
jb
mov
sbb
dec
shr
xchg
movs
ins
sbb
push
xlat
in
out
ret
je
outs
xchg
(bad)
pop
add
adc
daa
mov
and
nop
scas
mov
loopne
mov
imul
push
add
add
popa
call
(bad)
jmp
cmp
loope
xchg
je
adc
(bad)
cld
mov
fisttp
(bad)
(bad)
jmp
lahf
pushf
dec
popa
call
lods
je
fsub
cmp
add
dec
(bad)
(bad)
(bad)
inc
mov
int3
dec
in
xor
mov
inc
fisubr
sahf
lahf
pop
test
into
cmps
add
ret
sbb
loope
dec
xor
(bad)
jg
dec
pop
ja
sbb
and
jge
mov
(bad)
(bad)
(bad)
(bad)
jl
add
push
int3
sbb
sub
jmp
ror
out
xchg
cmps
call
add
inc
pusha
loopne
loopne
cmp
pcmpeqw
sub
ret
mov
hlt
hlt
inc
fild
mov
mov
or
dec
fadd
(bad)
(bad)
dec
push
aad
jp
call
cld
cld
loopne
dec
stc
cwde
jnp
pop
sbb
mov
scas
jmp
cli
inc
mov
out
adc
cmps
jbe
mov
mov
out
ret
hlt
inc
mov
and
movs
aaa
add
sti
mov
out
cli
jg
push
cmps
jmp
fdivr
out
mov
(bad)
(bad)
(bad)
cli
xchg
jl
mov
cmps
outs
loope
icebp
ret
sbb
(bad)
jmp
dec
mov
push
and
sti
pusha
mov
pushf
xor
inc
jae
idiv
cli
lea
jb
fild
pushf
popa
stc
ror
cmp
adc
dec
lock
(bad)
mov
repnz
sahf
push
inc
and
jne
fs
add
mov
test
movs
xchg
div
jp
jecxz
lock
mov
push
xchg
mov
mov
loop
call
mov
sub
xchg
ja
jae
(bad)
pop
loopne
sub
cmps
out
imul
idiv
sbb
xchg
cmp
(bad)
(bad)
(bad)
sti
comiss
cmc
cmps
scas
pop
mov
mov
shr
push
imul
(bad)
add
push
hlt
ja
loopne
mov
lods
aas
dec
mul
sub
ret
xor
(bad)
(bad)
dec
out
cmp
or
sbb
out
fcmovnb
in
inc
mov
pop
out
addr16
(bad)
(bad)
(bad)
call
xchg
xchg
out
mul
jg
pop
les
int3
cmp
cmp
addr16
std
lock
popa
cdq
cmp
(bad)
scas
dec
and
jmp
inc
bound
pminub
(bad)
inc
dec
dec
sub
(bad)
mov
outs
push
data16
imul
adc
ret
mov
mov
int3
(bad)
(bad)
(bad)
jmp
loope
test
pop
inc
jmp
mov
aas
and
rol
jmp
out
ins
inc
ins
push
lahf
jbe
fnsave
add
cmps
(bad)
(bad)
(bad)
jmp
sbb
out
lods
cmp
scas
dec
sbb
lahf
(bad)
bound
sub
retf
dec
(bad)
(bad)
(bad)
call
test
mov
movs
push
pop
xchg
adc
mov
into
mov
push
call
(bad)
(bad)
jg
mov
not
fcom
retf
loop
nop
sar
xor
xchg
xor
mov
push
rcr
aam
dec
jb
shl
mov
(bad)
aaa
xor
stc
les
clc
or
push
mov
repnz
clc
xchg
ror
pop
lock
gs
inc
inc
xchg
(bad)
sbb
int
jo
hlt
mov
(bad)
(bad)
jmp
adc
stos
ror
js
popa
(bad)
and
and
sub
jmp
add
jg
(bad)
(bad)
call
push
pop
cmp
sti
jl
es
pop
add
dec
ficomp
pop
adc
inc
or
(bad)
(bad)
(bad)
fldenv
push
cmp
mov
test
xor
sbb
adc
jne
aam
(bad)
push
std
mov
shr
iret
cmp
sub
ret
sub
test
(bad)
(bad)
(bad)
push
pop
fadd
sub
(bad)
lods
pop
(bad)
cli
xchg
xor
push
cmc
mov
(bad)
(bad)
(bad)
jmp
mov
pop
mov
inc
mov
(bad)
sub
push
xor
inc
std
(bad)
(bad)
dec
or
shr
push
adc
sbb
sub
fld
inc
daa
mov
push
popf
and
ret
(bad)
enter
les
aam
(bad)
(bad)
(bad)
(bad)
dec
or
test
call
add
(bad)
mov
addr16
add
jne
clc
(bad)
(bad)
jmp
sbb
popa
xor
cld
loope
sub
or
push
xchg
mov
dec
jns
mov
jb
(bad)
das
(bad)
jbe
pop
sbb
test
stc
lock
(bad)
call
cmc
push
js
das
movs
add
test
xor
ins
push
mov
ret
mov
cli
(bad)
dec
sbb
aad
sbb
call
xor
mov
pop
push
mov
cld
(bad)
mov
mov
dec
lods
lahf
push
jg
inc
push
sbb
cld
call
ja
cmc
out
fistp
pop
ror
pop
int
pop
push
stc
jno
xchg
(bad)
(bad)
jl
xor
je
fldcw
fisttp
push
cmp
int3
xor
icebp
dec
dec
sar
and
inc
sahf
std
sti
push
push
push
outs
or
cmp
stos
mov
mov
jle
cmps
mov
xlat
jnp
or
jno
stc
sar
scas
clc
mov
nop
xor
outs
pop
shl
std
xchg
mov
and
aaa
cld
(bad)
call
dec
in
mov
fstp
jmp
mov
cmp
mov
push
cmp
mov
jmp
js
sbb
(bad)
call
cld
and
cli
mov
call
dec
sub
pusha
ret
cs
imul
sub
sub
and
sti
(bad)
mov
and
cli
aaa
callw
imul
in
push
(bad)
(bad)
(bad)
(bad)
cmp
in
test
and
xor
in
or
(bad)
dec
add
rol
lds
mov
pop
inc
xchg
pusha
ffree
push
jmp
outs
ds
inc
add
mov
aaa
mov
(bad)
cmp
fbld
cmp
pusha
jbe
add
ins
cli
(bad)
(bad)
jmp
mov
pop
mov
sbb
scas
inc
hlt
stos
or
jo
loope
scas
xor
call
mov
loope
jl
mov
ja
fild
outs
ja
push
ror
cmp
jge
mov
(bad)
dec
mov
cld
sub
dec
js
push
jecxz
(bad)
fld
(bad)
mov
lea
cmp
fisub
add
cli
imul
int3
add
add
(bad)
call
sahf
ss
sbb
cli
adc
sbb
sub
xchg
movs
push
lea
clc
std
int
repz
add
ret
jbe
sub
add
mov
xor
jmp
(bad)
gs
shl
sti
fild
les
adc
iret
in
sub
sti
sub
(bad)
(bad)
(bad)
jg
sbb
pop
xor
imul
test
jo
xor
ins
sar
iret
mov
mov
jg
(bad)
not
jge
jo
inc
xchg
sar
sbb
cwde
enter
xor
(bad)
jg
mov
pop
ss
or
dec
xor
pushf
popa
test
pop
push
jp
sbb
das
mov
(bad)
in
or
jle
jge
cmp
adc
mov
mov
jecxz
adc
fidivr
sti
jecxz
and
jmp
jle
sar
aad
xchg
leave
mov
xchg
clc
sti
sub
jb
dec
mov
fcmovnb
add
in
out
clc
idiv
test
push
dec
sub
fld
push
(bad)
fcom
iret
pusha
sub
(bad)
pop
hlt
mov
or
popa
push
(bad)
call
xor
inc
and
or
ss
adc
mov
es
sahf
shr
retf
scas
clc
call
cmp
mov
imul
(bad)
(bad)
push
cmp
push
xchg
cmc
xchg
and
(bad)
aad
and
aaa
mov
(bad)
(bad)
jmp
out
mov
mov
jecxz
jmp
and
stc
xchg
jecxz
mov
sub
cli
dec
lea
xor
xchg
bound
sub
and
(bad)
(bad)
out
out
aad
mov
fstp
mov
shr
pop
cmps
call
push
jmp
hlt
pop
mov
ins
or
(bad)
cld
fiadd
ficomp
imul
mov
aad
jns
fdivrp
(bad)
(bad)
mov
call
cmp
test
push
push
pop
adc
aad
aaa
xor
sbb
(bad)
(bad)
call
pop
jae
mov
aas
ja
inc
push
and
inc
mov
dec
sbb
push
add
pause
in
iret
arpl
(bad)
(bad)
inc
xor
jg
aaa
xor
mov
xchg
sbb
test
lahf
movs
fnop
(bad)
inc
outs
pusha
jne
adc
mov
jno
dec
aad
mov
lock
shr
and
cmp
imul
push
hlt
sub
dec
jg
sar
daa
repnz
test
inc
js
shr
(bad)
out
(bad)
(bad)
(bad)
cmp
sub
(bad)
iret
ficom
call
push
adc
pop
adc
mov
sub
jmp
adc
mov
popf
xor
jne
(bad)
sti
loopne
fs
cli
pop
jle
mov
inc
jae
sub
and
pop
nop
dec
add
jl
(bad)
(bad)
(bad)
call
ss
in
iret
dec
shl
xchg
rcr
and
xchg
mov
inc
push
ins
push
ds
(bad)
(bad)
call
dec
ret
(bad)
sbb
cdq
(bad)
mov
dec
sub
jne
adc
test
jb
(bad)
(bad)
dec
jge
or
movs
mov
dec
gs
out
xchg
call
in
enter
(bad)
push
jp
fdiv
cmps
jge
add
gs
mov
movs
fisttp
pop
shr
scas
pop
sbb
push
dec
push
(bad)
(bad)
(bad)
call
and
ins
cmp
ja
push
mov
push
in
mov
(bad)
dec
into
push
sub
test
inc
mov
dec
(bad)
aad
jp
js
inc
xchg
jle
cmp
(bad)
(bad)
call
and
sub
imul
sbb
outs
icebp
xor
sti
test
(bad)
(bad)
call
stos
push
fdiv
ret
and
and
dec
mov
int
ds
add
inc
mov
(bad)
(bad)
push
ds
repz
pop
ret
push
in
and
iret
iret
je
test
daa
loop
ja
ins
dec
push
(bad)
(bad)
(bad)
call
ret
adc
dec
push
stos
movs
ins
inc
inc
xchg
mov
jne
or
mov
(bad)
jmp
adc
cmp
or
push
cmps
add
mov
mov
inc
retf
(bad)
int3
xchg
(bad)
fistp
pop
pop
ja
stc
inc
int
xor
mov
(bad)
loope
mov
dec
je
mov
scas
mov
retf
mov
(bad)
jg
xchg
aad
je
mov
jb
mov
jno
mov
and
(bad)
out
(bad)
jg
sbb
rcr
mov
dec
shl
(bad)
(bad)
call
pop
sub
sub
leave
adc
sahf
pop
(bad)
cmp
outs
and
call
imul
and
scas
cli
(bad)
jg
scas
pushf
ret
adc
cmps
(bad)
xor
in
dec
mov
bound
cmc
ja
outs
push
mov
repz
push
iret
test
or
and
push
jecxz
and
test
inc
int3
sbb
push
sahf
das
ins
das
(bad)
ud0
int
scas
mov
retf
cmp
std
cmp
push
fstp
xor
jmp
mov
cmp
loope
fcomip
(bad)
fist
pop
and
scas
stos
mov
int3
je
cmp
(bad)
mov
fnstcw
add
(bad)
inc
add
mov
test
test
xor
(bad)
mov
cld
out
jo
jnp
mov
add
hlt
mov
daa
(bad)
jno
retf
sbb
xchg
push
xchg
imul
fbstp
(bad)
mov
shl
out
adc
jge
mov
scas
inc
(bad)
push
(bad)
(bad)
(bad)
in
inc
add
sbb
or
cld
(bad)
popf
cmp
mov
mov
inc
data16
add
inc
(bad)
(bad)
(bad)
(bad)
mov
or
mov
pop
cmps
mov
sbb
sti
int3
pop
aas
sbb
(bad)
(bad)
jmp
test
cmp
mov
shl
add
sti
jmp
clc
or
cmp
aas
cmp
fst
mov
mov
cld
xchg
or
mov
cdq
enter
cmc
jno
pop
cmp
outs
(bad)
mov
push
xchg
stos
mov
addr16
push
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
in
mov
ret
stc
into
vmovd
rol
lods
sub
push
xchg
push
sar
(bad)
(bad)
(bad)
mov
stos
fsub
out
out
jl
int3
loope
pushf
sub
push
sub
aam
jp
cdq
sahf
(bad)
(bad)
(bad)
dec
rol
out
scas
int3
jbe
mov
std
out
shl
xor
mov
mov
xchg
mov
(bad)
pop
popa
shl
mov
sbb
std
cwde
dec
nop
add
sahf
mov
jle
adc
mov
jg
sub
sub
imul
pusha
dec
outs
movs
pop
sub
xchg
jmp
mov
lock
(bad)
(bad)
(bad)
dec
lock
mov
mov
xor
inc
sti
jg
xor
pop
jmp
(bad)
(bad)
(bad)
push
sar
hlt
ret
iret
mov
xchg
mov
push
add
mov
sbb
test
into
ret
push
jmp
(bad)
mov
mov
inc
jmp
dec
shr
mov
cld
and
ds
sub
aam
and
call
sub
jmp
dec
ins
popa
xor
cwde
push
(bad)
call
(bad)
jmp
setp
xchg
fld
push
daa
(bad)
stos
js
push
cwde
call
(bad)
inc
outs
pusha
les
stos
ja
cmp
push
cmp
add
mov
pusha
sub
xchg
mov
pusha
stc
sbb
sbb
inc
xor
jmp
inc
scas
(bad)
jl
movs
jecxz
pop
push
test
outs
fcmovb
mov
enter
pop
std
je
fidivr
jo
ret
ret
adc
add
push
shr
clc
jmp
bound
in
inc
xor
ficomp
(bad)
inc
frndint
rcl
inc
cli
fst
mov
jne
xor
dec
jge
out
xor
(bad)
(bad)
(bad)
scas
pop
dec
pop
push
aaa
adc
fsubr
jb
popa
inc
data16
ins
xchg
std
(bad)
(bad)
cmp
cmc
ja
mov
pop
push
arpl
(bad)
fistp
pop
shl
mov
adc
lods
inc
mov
mov
ret
arpl
push
adc
inc
rol
mov
mov
test
adc
lock
xor
cs
lods
pop
xchg
scas
jmp
push
add
lock
inc
dec
mov
rcr
call
nop
mov
gs
jge
jbe
dec
xchg
lods
inc
add
mov
inc
(bad)
inc
xlat
or
push
imul
or
mov
push
jecxz
rcl
aad
(bad)
fcomip
retf
out
xchg
int
lock
fisttp
in
adc
je
test
call
iret
sahf
push
adc
adc
stc
mov
lahf
inc
mov
lahf
or
inc
mov
in
mov
cs
mov
mov
cs
xchg
push
pop
sbb
mov
std
sbb
scas
call
mov
mov
test
xchg
cmps
cmp
jmp
pop
pusha
into
dec
imul
(bad)
jmp
mov
repnz
sbb
test
loop
out
mov
adc
(bad)
fstp
movs
xor
hlt
push
retf
(bad)
jg
jmp
dec
inc
cmp
clc
(bad)
push
out
jp
jns
out
adc
push
or
cli
sub
(bad)
(bad)
call
mov
and
cwde
test
sti
inc
add
cmp
fmul
mov
jg
(bad)
cmp
ror
rol
sbb
push
push
(bad)
inc
mov
jmp
sbb
push
mov
arpl
test
dec
mov
aam
pop
inc
rol
(bad)
(bad)
(bad)
mov
jns
shl
adc
and
xor
sbb
inc
inc
into
imul
jp
lahf
aam
rol
push
and
out
and
(bad)
(bad)
inc
pop
jmp
mov
fs
cld
outs
int
add
(bad)
dec
pop
adc
pusha
inc
push
sbb
lods
(bad)
out
in
mov
push
mov
push
dec
clc
cmp
in
inc
outs
sub
mov
pop
popa
push
arpl
(bad)
call
aam
xor
pop
adc
mov
mov
(bad)
call
je
pop
shl
or
hlt
sub
test
pusha
rcl
or
arpl
mov
(bad)
(bad)
dec
jno
test
mov
stos
xchg
gs
cmps
les
and
push
ret
cmps
xor
cmc
jle
shl
sbb
xchg
xchg
(bad)
(bad)
jmp
test
sub
xor
imul
(bad)
sub
add
sub
mov
inc
sbb
dec
pop
xchg
scas
inc
sub
je
push
int3
pusha
loop
in
out
(bad)
sbb
test
(bad)
dec
xchg
or
mov
xor
sar
movs
sar
out
loope
ds
(bad)
jg
jmp
mov
push
das
movs
inc
cwde
mov
ja
and
xchg
lea
mov
xor
(bad)
push
adc
js
jo
xchg
imul
sub
sbb
int3
fcomp
(bad)
dec
and
not
nop
jnp
mov
sahf
jae
jmp
push
neg
out
push
fwait
(bad)
(bad)
jmp
stos
and
nop
push
nop
xchg
in
or
sar
or
pushf
xor
(bad)
(bad)
(bad)
jle
sbb
mov
inc
call
mov
leave
aam
cli
mov
mov
leave
out
(bad)
(bad)
(bad)
push
mov
add
add
iret
(bad)
lea
sub
sub
xchg
(bad)
(bad)
mov
nop
mov
push
xor
jb
shl
stc
stos
(bad)
xor
test
int
neg
push
mov
mov
daa
cs
add
(bad)
(bad)
(bad)
mov
pushf
mov
test
test
call
mov
sbb
(bad)
inc
pop
imul
mov
push
stc
popf
sbb
inc
(bad)
push
addr16
js
and
inc
rcl
lahf
in
jp
sbb
lods
imul
loop
pop
cmp
and
push
jo
call
pop
inc
push
mov
(bad)
ficom
xor
shl
(bad)
call
dec
enter
push
push
stos
fwait
mov
(bad)
adc
cmp
pop
scas
cmp
xchg
or
sub
(bad)
push
inc
push
push
(bad)
jmp
jne
sbb
sar
or
mov
(bad)
jg
retf
ret
xchg
jmp
(bad)
cmp
xor
jne
jnp
jo
(bad)
(bad)
(bad)
push
je
fst
pushf
and
sub
div
mov
jge
sbb
imul
out
cli
ror
mov
adc
pop
push
rcl
inc
iret
xor
sub
jg
(bad)
call
fidivr
jmp
push
mov
jecxz
mov
mov
(bad)
(bad)
(bad)
dec
add
sar
aad
xor
xor
mov
and
cld
jp
jmp
(bad)
call
lods
xchg
daa
pop
sbb
xchg
jns
cmc
aad
inc
jne
hlt
mov
(bad)
(bad)
inc
lods
jae
sti
cmc
test
(bad)
fstp
or
push
and
and
pop
mov
jmp
(bad)
(bad)
jmp
mov
push
jecxz
mov
mov
movs
add
jecxz
push
retf
jnp
call
ja
ficom
and
adc
or
adc
cmp
fcmovu
dec
aaa
and
(bad)
fisttp
add
jle
call
mov
popf
push
mov
push
(bad)
(bad)
(bad)
jmp
stos
shr
sbb
inc
(bad)
xor
gs
xchg
mov
in
mul
(bad)
(bad)
(bad)
(bad)
mov
mov
dec
xor
int3
xchg
stos
mov
hlt
ins
lds
fistp
(bad)
jmp
jo
xchg
sub
mov
fist
js
xor
lock
dec
xchg
ins
cmc
xlat
fisttp
add
inc
pop
cmps
inc
jbe
adc
(bad)
mov
push
sar
outs
cli
(bad)
jg
jp
popa
xchg
jbe
outs
xor
lahf
addr16
test
int
lea
ss
(bad)
jmp
popa
mov
dec
cld
shl
(bad)
jnp
mov
sbb
loopne
xchg
(bad)
jmp
mov
int3
cmps
xor
add
outs
ja
loop
arpl
outs
jno
jae
cmps
cwde
cmp
(bad)
(bad)
ds
sub
imul
into
cmc
lock
sti
sub
add
cmc
push
cmp
(bad)
(bad)
(bad)
(bad)
mov
mov
jnp
cmc
fdivr
push
rol
sbb
push
cmps
aad
adc
loop
ja
std
bound
mov
pusha
(bad)
pop
pop
pcmpgtw
iret
aas
outs
nop
out
push
or
(bad)
(bad)
(bad)
jmp
out
iret
sbb
mov
or
xchg
sar
jbe
neg
stc
lods
sub
mov
mov
in
mov
bound
retf
pop
sub
mov
sar
out
imul
cwde
xchg
mov
xchg
gs
(bad)
(bad)
dec
popf
in
imul
add
pushf
xor
jp
push
fisttp
not
push
sub
or
cmp
into
add
inc
mov
ret
into
xor
jmp
mov
push
xor
dec
xchg
(bad)
call
xlat
pop
pusha
call
cmp
mov
fdiv
push
dec
ins
sub
inc
cld
mov
jb
fcmovnbe
test
pop
mov
or
pushf
popa
sbb
mov
add
(bad)
inc
cwde
mov
mov
in
inc
fst
xlat
imul
hlt
jle
inc
push
push
cmc
mov
push
mov
inc
ins
pop
xor
ja
(bad)
jg
loope
cli
sti
push
aas
mov
clc
loopne
arpl
(bad)
aas
jbe
pusha
sub
pop
rol
les
aas
cmp
lds
mov
ins
(bad)
inc
pushf
adc
ja
xor
inc
mov
push
test
lods
sub
mov
(bad)
(bad)
call
push
cmc
cwde
jns
adc
dec
ret
cmp
pop
xchg
movs
std
lahf
pusha
scas
jno
into
jmp
(bad)
mov
xor
jns
js
shl
adc
das
dec
lds
cmc
aam
pop
(bad)
(bad)
(bad)
call
idiv
xor
dec
add
mov
lock
and
(bad)
(bad)
(bad)
(bad)
jnp
xchg
pusha
stos
push
(bad)
fiadd
add
in
mov
inc
out
inc
in
data16
(bad)
jmp
and
dec
ds
lods
data16
dec
nop
rcr
inc
dec
fnsave
call
mov
jo
xchg
xor
push
mov
xor
dec
int3
sub
dec
pop
(bad)
(bad)
call
jbe
call
cmp
xchg
addr16
dec
mov
sahf
xor
les
xor
or
stos
fst
(bad)
add
inc
out
mov
mov
pop
push
ins
add
(bad)
inc
fsubr
cwde
push
stos
inc
or
mov
mov
daa
xor
(bad)
(bad)
push
fld
out
jge
int3
loop
mov
lock
lock
enter
xchg
push
adc
push
lea
add
icebp
jge
sar
cmovl
jecxz
cld
mov
fstp
jmp
mov
push
xchg
sbb
mov
ins
pop
mov
(bad)
out
jb
mov
(bad)
mov
pop
cmp
repz
(bad)
(bad)
in
jmp
ret
push
pop
mov
push
(bad)
aam
in
sub
mov
dec
and
cdq
(bad)
(bad)
mov
add
scas
jo
cmp
push
mov
push
iret
sub
pop
or
adc
loop
cmp
dec
scas
pop
mov
sti
cmp
retf
mov
inc
push
(bad)
call
std
fld
(bad)
mov
into
rcl
mov
cld
loope
test
jle
cmp
call
mov
xchg
jle
clc
push
pminsw
xor
sub
addr16
shr
lock
(bad)
mov
cdq
push
dec
mov
cmp
pop
sub
shl
jmp
add
jmp
jne
aam
out
jl
inc
scas
(bad)
dec
sbb
neg
push
ret
cmp
outs
jmp
mov
retf
scas
push
jne
xchg
(bad)
pinsrw
xchg
or
test
push
sub
jmp
sti
mov
pop
sub
sbb
mov
jl
jne
fbstp
(bad)
(bad)
(bad)
dec
push
jmp
jge
call
push
jno
lods
je
inc
sbb
cwde
(bad)
mov
push
(bad)
(bad)
(bad)
push
repnz
jmp
out
inc
frstor
inc
or
fidivr
(bad)
and
ja
cmp
add
pop
ins
dec
cmp
(bad)
inc
mov
shl
cli
jnp
clc
lods
add
mov
icebp
and
push
pop
cmc
clc
and
test
add
ret
fild
shl
cmps
fstp
dec
lock
(bad)
mov
out
ins
mov
add
sub
(bad)
pop
mov
sub
push
mov
jmp
pop
loopne
fcom
cwde
mov
aas
pop
mov
int3
lea
adc
sub
cmp
fstp
(bad)
outs
mov
ins
imul
ins
stos
loope
scas
(bad)
pop
imul
mov
ror
icebp
(bad)
jg
xchg
clc
ret
ja
jecxz
ficom
popa
mov
fistp
(bad)
(bad)
(bad)
fild
fstp
cld
js
xor
imul
sbb
(bad)
bound
(bad)
(bad)
(bad)
fisttp
cmp
dec
mul
pop
or
dec
sub
dec
sahf
pop
aaa
dec
rcl
inc
adc
or
and
pop
mov
call
ficomp
in
push
push
xchg
dec
pop
or
push
sbb
movs
pop
mul
pusha
stos
inc
test
ss
(bad)
fbstp
(bad)
fist
nop
adc
test
cdq
lock
(bad)
(bad)
(bad)
call
daa
out
int3
inc
push
neg
ret
xchg
sahf
les
mov
cs
inc
mov
aas
add
(bad)
in
mov
dec
idiv
int3
xor
movs
ret
test
(bad)
(bad)
(bad)
dec
xor
adc
retf
push
dec
loope
dec
shr
cmp
cmc
hlt
(bad)
(bad)
(bad)
jmp
ja
shl
(bad)
shr
mov
retf
xor
fwait
or
pop
jmp
pop
xor
jo
or
(bad)
call
xor
es
test
(bad)
call
pop
xor
adc
nop
or
ss
in
ins
jecxz
sbb
(bad)
(bad)
jmp
push
int
gs
movs
loope
mov
dec
in
pop
mov
fild
je
fisttp
(bad)
(bad)
dec
dec
sub
icebp
ins
fwait
xlat
mov
adc
scas
push
pushf
mov
inc
clc
add
(bad)
call
mov
fcomp
adc
idiv
push
jbe
add
rol
or
(bad)
dec
fdivp
call
(bad)
(bad)
fnstcw
fnstsw
in
mov
sub
push
lds
add
push
lods
jb
outs
div
push
int3
add
sub
sub
(bad)
(bad)
inc
stos
pop
mov
lock
arpl
clc
inc
jae
mov
(bad)
loop
and
mov
popf
cmp
push
push
inc
jle
dec
(bad)
fld
inc
adc
xor
sub
retf
jecxz
pop
rcr
cld
push
sbb
add
popa
imul
movs
stos
inc
imul
les
cli
clc
(bad)
(bad)
(bad)
jmp
arpl
xchg
(bad)
stos
ret
sbb
lea
jl
mov
shl
xchg
jg
lock
sub
cwde
enter
hlt
neg
mov
(bad)
(bad)
(bad)
inc
jp
out
(bad)
pop
mov
scas
xlat
pop
(bad)
shr
imul
imul
xchg
mov
mov
fcomip
(bad)
inc
mov
cmp
adc
test
fstp
cmps
pop
mov
inc
call
jb
xor
clc
loopne
(bad)
fisubr
and
(bad)
idiv
jg
inc
in
mov
or
jno
iretw
in
dec
cmc
cmp
(bad)
(bad)
dec
into
mov
(bad)
mov
rcl
ret
out
and
push
test
mov
shl
test
shr
inc
imul
scas
retf
clc
into
cmp
outs
adc
and
cwde
xchg
inc
cmps
xlat
jp
shr
lea
jmp
push
lock
lahf
repnz
jnp
pushf
jecxz
fild
jg
ds
(bad)
(bad)
(bad)
(bad)
jp
push
mov
shl
out
div
inc
jo
mov
mov
cmp
lds
popaw
(bad)
cmp
(bad)
jmp
xor
sbb
cdq
push
out
scas
xchg
in
mov
(bad)
(bad)
jmp
sub
sbb
sbb
in
pushf
call
push
popf
ficom
push
out
mov
(bad)
(bad)
(bad)
inc
iret
fs
push
into
jne
fld
ins
add
jne
push
mov
add
inc
(bad)
inc
enter
mov
inc
mov
push
mov
adc
(bad)
(bad)
mov
dec
dec
xchg
sub
pop
push
scas
cmp
das
or
cmps
aas
pxor
(bad)
(bad)
cmp
fsub
popa
mov
sub
add
dec
test
jo
fld
xlat
test
lods
(bad)
sar
or
push
movs
(bad)
(bad)
(bad)
jmp
adc
dec
jge
or
mov
inc
repnz
in
or
and
mov
mov
jb
ja
in
(bad)
(bad)
(bad)
(bad)
out
test
cmp
in
aam
aam
and
add
sahf
dec
ret
and
(bad)
(bad)
dec
pop
std
sahf
cmp
cwde
lock
in
lock
lea
jb
stos
in
or
xor
jecxz
jno
movs
movs
shl
xchg
push
jp
mov
(bad)
jmp
scas
fidiv
and
jge
cmp
push
mov
push
lods
xchg
ror
retf
pop
nop
movs
cmp
shl
pop
fisttp
cmp
cmps
das
ja
(bad)
(bad)
push
test
mov
push
jp
pusha
cmp
cli
mov
cld
call
cld
(bad)
jmp
mov
shr
inc
fwait
(bad)
pop
xor
out
jge
cmp
(bad)
(bad)
jmp
push
in
jmp
pushf
fnstcw
push
mov
je
push
in
js
xor
and
(bad)
call
dec
lea
mov
mov
xchg
push
add
lea
and
cmc
scas
daa
sbb
push
sti
lea
sbb
pusha
outs
in
popf
push
jnp
ret
jl
(bad)
jg
jmp
xchg
jle
and
dec
mov
xor
add
inc
adc
sub
(bad)
(bad)
(bad)
cli
push
mov
jp
mov
sar
adc
mov
push
stos
fbstp
sbb
xchg
sbb
mov
ins
sbb
lock
pushf
dec
mov
idiv
mov
repz
push
ins
(bad)
inc
xor
or
lahf
nop
aam
mov
mov
inc
mov
scas
cli
jmp
ds
pop
lds
pop
dec
or
dec
pop
fistp
(bad)
(bad)
(bad)
(bad)
jp
fdivr
inc
(bad)
in
jb
dec
lea
add
out
dec
dec
push
push
pop
pop
fdiv
and
(bad)
push
in
data16
les
push
stos
sub
imul
pop
(bad)
push
push
and
test
xor
(bad)
call
dec
lea
aaa
cmp
xor
jp
addr16
and
push
(bad)
(bad)
fisttp
adc
lds
(bad)
pop
xchg
sbb
adc
(bad)
(bad)
(bad)
call
xchg
push
(bad)
jno
ds
adc
cmc
sbb
or
mov
pop
lods
(bad)
jmp
pushf
and
push
hlt
ror
rol
cmp
nop
adc
repnz
aad
pop
hlt
fmulp
add
(bad)
(bad)
(bad)
dec
leave
mov
cld
mov
pop
add
sub
fmul
in
(bad)
(bad)
(bad)
push
mov
fdiv
int
pop
xchg
sub
retf
sar
daa
cdq
ret
lahf
sbb
fdivrp
(bad)
call
je
lahf
adc
jno
sbb
scas
jl
adc
mov
mov
clc
mov
mov
jae
xor
pop
cmp
xchg
movs
jecxz
lock
(bad)
call
shr
push
ficomp
push
lahf
pusha
mov
add
in
shl
cwde
(bad)
(bad)
dec
cmp
sbb
and
cmovl
lds
mov
rcr
xor
(bad)
(bad)
(bad)
dec
mov
cmps
sbb
inc
test
sbb
cs
and
adc
scas
cmp
test
(bad)
(bad)
push
dec
cmp
fs
dec
or
(bad)
(bad)
(bad)
(bad)
out
jae
dec
fld
lds
scas
imul
sbb
out
add
adc
adc
xor
test
push
cld
jmp
ret
movs
enter
sub
shl
popf
xor
cmp
std
and
cmp
out
xor
(bad)
(bad)
(bad)
(bad)
jmp
sub
enter
add
cmp
test
jae
out
or
jmp
xor
in
hlt
out
xor
cmp
push
sahf
mov
jmp
push
in
shl
push
(bad)
(bad)
(bad)
jmp
jbe
xor
xchg
or
sub
shl
out
mov
and
(bad)
xor
(bad)
(bad)
call
movs
call
push
fwait
imul
or
mov
retf
int
inc
hlt
add
nop
clc
fcomip
jmp
xor
xchg
mov
pop
out
outs
and
and
dec
mov
push
ins
fstp
cwde
data16
mov
sub
(bad)
(bad)
(bad)
call
(bad)
mov
lods
jns
jmp
fwait
sbb
sub
(bad)
shl
(bad)
fstp
sbb
sbb
xchg
clc
popa
pop
movs
mov
sub
xchg
mov
sbb
push
xor
and
shl
cld
push
push
lods
mov
jns
and
fs
ins
cmp
or
mov
test
inc
sub
jae
push
or
fcom
int3
adc
dec
out
bound
jnp
ss
std
call
or
test
pop
movs
cmp
mov
inc
jmp
mov
dec
imul
cmp
sub
cmp
fsub
(bad)
(bad)
(bad)
dec
and
inc
loopne
xchg
cdq
jmp
push
sub
gs
aad
js
pop
(bad)
(bad)
(bad)
dec
sub
dec
ror
out
das
dec
popf
inc
dec
dec
cmp
pop
xchg
sbb
(bad)
(bad)
(bad)
push
jle
loopne
fidivr
inc
rol
mov
jmp
test
pop
pop
xchg
(bad)
push
fwait
jbe
cli
ret
sub
aaa
jle
xchg
(bad)
(bad)
(bad)
push
jl
sbb
xchg
cmp
pop
xlat
scas
(bad)
fsubr
push
xor
dec
es
pop
sub
inc
jnp
cmp
jle
sbb
jmp
xchg
add
and
sahf
xchg
ja
(bad)
(bad)
(bad)
call
clc
jecxz
test
mov
data16
mov
sub
dec
adc
dec
push
mov
sub
fld
dec
push
rcr
inc
xchg
sahf
enter
adc
sbb
sub
sbb
enter
nop
(bad)
js
push
movs
(bad)
(bad)
(bad)
(bad)
mov
pusha
jb
jnp
popa
fstp
icebp
mov
sub
scas
mov
dec
and
mov
jg
call
xor
mov
mov
jmp
cmp
sbb
pop
sbb
xor
ds
iret
mov
push
and
iret
clc
(bad)
(bad)
dec
pop
mov
retf
xchg
jl
jnp
push
and
aas
(bad)
and
or
push
cdq
dec
mov
xor
enter
jo
and
pop
cld
fucomip
xor
(bad)
test
out
test
jmp
push
pop
xor
adc
call
ret
shl
cmps
rcr
mov
mov
out
pop
movs
xchg
mov
sahf
xor
(bad)
call
and
sub
sbb
mov
inc
mov
push
xor
(bad)
jmp
mov
mov
test
and
pop
lds
xor
ins
js
fdivr
or
dec
les
pop
xchg
pusha
ficomp
mov
xchg
pop
push
adc
fcmovnbe
leave
xor
test
adc
div
std
pop
jo
test
fcmovu
add
push
push
daa
push
xchg
cmp
sub
call
cmc
cli
out
test
loopne
pushf
ficom
(bad)
sbb
aaa
sbb
inc
fstp
rcr
imul
and
(bad)
(bad)
(bad)
aas
repz
jbe
rcr
ins
mov
xchg
mov
mov
mov
pushf
pop
(bad)
(bad)
jg
push
push
xlat
jno
mov
push
mov
mov
outs
push
xchg
ja
call
mov
out
aas
dec
xchg
gs
imul
inc
out
lods
jle
or
mov
push
xchg
cmc
add
fcmovbe
add
sti
and
xor
adc
call
movs
or
dec
pop
iret
xchg
push
call
lds
sbb
xor
xor
arpl
cld
(bad)
fst
push
mov
sub
(bad)
jne
sti
push
in
inc
shr
inc
dec
fs
mov
(bad)
js
scas
mov
pusha
loopne
out
(bad)
push
add
aas
(bad)
mov
test
mov
dec
jne
mov
lahf
push
addr16
mov
repz
dec
(bad)
in
in
mov
sub
mov
adc
hlt
cmc
push
mov
mov
jmp
popf
pop
push
sub
mov
inc
cmp
sbb
mov
fs
jmp
clc
sbb
ds
push
push
fsub
pop
outs
mov
mov
(bad)
(bad)
dec
in
sahf
xor
sub
popa
fbstp
adc
inc
loope
xchg
(bad)
inc
sbb
pop
cmp
adc
cmps
ss
add
jle
dec
(bad)
call
popa
pop
icebp
int3
ror
push
sbb
(bad)
(bad)
(bad)
(bad)
jmp
sub
xchg
xlat
sub
jl
fist
lods
in
test
sti
xchg
(bad)
rcl
xor
ds
std
push
ja
adc
cli
and
rol
xchg
dec
test
dec
ins
rcl
adc
(bad)
(bad)
(bad)
jg
mov
sbb
sbb
loope
cwde
lds
xor
movs
jmp
or
std
xchg
and
jns
mov
ret
jb
(bad)
(bad)
(bad)
inc
repz
push
stos
mov
sar
sbb
je
je
shr
cmps
and
(bad)
call
add
sub
out
dec
in
sub
(bad)
xchg
jmp
mov
mov
scas
sub
mov
and
sub
iret
dec
jmp
inc
mov
xchg
and
adc
or
(bad)
fcomip
call
cmp
push
mov
test
dec
pop
fs
mov
sahf
xchg
jmp
push
test
inc
xor
pop
fdivr
mov
push
xchg
ror
xor
repz
(bad)
push
cmp
and
sub
enter
dec
mov
int3
fist
jg
(bad)
(bad)
cmp
mov
mov
push
out
stc
inc
test
and
imul
jmp
cmc
jae
cmps
call
fld
jp
pop
mov
ret
xor
mov
test
(bad)
inc
neg
or
jl
jle
les
test
test
arpl
mov
int
icebp
call
and
cmc
in
jle
fcmovbe
inc
test
lds
sbb
(bad)
jg
push
or
bnd
push
loope
sub
push
jmp
fistp
out
mov
mov
push
mov
xor
aas
(bad)
(bad)
jmp
sbb
xchg
popa
inc
jbe
ror
push
pop
sti
outs
sub
sub
int3
ret
push
lds
jmp
lods
pop
xor
lock
lods
dec
push
imul
jo
adc
or
mov
(bad)
(bad)
push
xor
sub
movs
cmp
cmp
mov
(bad)
(bad)
inc
cs
in
movs
fs
or
xchg
call
pop
popa
repnz
(bad)
(bad)
(bad)
clc
mov
adc
adc
jp
into
mov
aam
ins
aaa
mov
stos
and
jmp
mov
icebp
add
sub
push
clc
jg
jmp
mov
in
jnp
xchg
cmps
and
ins
pop
(bad)
jl
push
int3
jnp
(bad)
(bad)
inc
mov
cmp
fdivr
pushf
sbb
cmps
mov
movs
bound
or
sbb
sub
and
sub
cmp
ins
fs
mov
icebp
mov
jns
jg
call
out
fwait
repz
mov
cmps
call
mov
ja
cmp
and
jnp
jmp
call
ror
jno
lds
push
popa
sar
adc
ret
scas
jo
mov
pushf
fistp
push
jg
and
imul
cld
sub
xor
adc
(bad)
push
pop
inc
addr16
mov
data16
out
fmul
dec
inc
in
mov
sbb
mov
movs
(bad)
mov
adc
add
dec
sti
ret
aaa
dec
push
mul
pop
cld
mov
into
sbb
sti
call
call
scas
aam
aad
mov
mov
pushf
sbb
out
es
in
mov
sub
ret
push
pop
(bad)
(bad)
dec
into
call
inc
xchg
push
push
adc
out
fistp
pop
outs
stos
mov
sub
(bad)
popa
push
(bad)
call
fiadd
or
xor
je
(bad)
mov
or
xor
add
(bad)
(bad)
(bad)
inc
push
mov
cmps
and
push
cmp
and
mov
das
sar
mov
cmp
pushf
mov
mov
inc
xchg
sbb
(bad)
(bad)
jmp
(bad)
(bad)
inc
and
out
jge
popa
in
lods
jnp
xlat
arpl
(bad)
fld
cmp
push
jg
and
cmp
cld
fist
sbb
mov
xor
mov
jecxz
(bad)
inc
xchg
lock
int
mul
jnp
test
mov
out
cli
(bad)
inc
jg
scas
push
mov
(bad)
push
mov
mov
cli
push
xchg
or
rcl
(bad)
movd
outs
jae
ja
or
mov
std
xchg
mov
outs
es
mov
(bad)
(bad)
in
mov
inc
lea
jg
push
xlat
scas
push
outs
in
xchg
lods
xor
push
call
imul
sub
sbb
dec
std
and
sbb
pop
in
pusha
ret
cmps
ja
mov
loope
pop
fdivr
out
fsubr
clc
inc
and
loop
ret
add
cdq
cli
rcr
mov
sti
xor
or
cmps
lahf
cmps
sbb
(bad)
(bad)
jg
mov
fldenv
pop
sar
adc
dec
ja
out
(bad)
and
xchg
stc
mov
push
into
sbb
xor
sbb
mov
sbb
xchg
xor
clc
ja
jnp
fwait
sub
out
clc
out
mov
mov
cld
pop
loope
mov
xor
das
mov
out
ins
mov
dec
adc
cmp
mov
xchg
sti
fwait
in
jmp
xlat
loope
mov
imul
cmp
mov
xor
jns
(bad)
test
dec
les
xor
fsub
std
(bad)
cld
or
pop
(bad)
push
sub
sbb
les
(bad)
push
(bad)
jbe
sbb
pushf
mov
imul
xor
xor
add
push
pop
pop
or
push
neg
jns
inc
rcr
push
mov
jecxz
(bad)
das
popa
clc
scas
mov
scas
dec
ret
ret
test
cli
aas
fwait
loop
fldcw
push
(bad)
(bad)
(bad)
(bad)
push
xchg
pop
dec
cmp
or
xchg
adc
cld
pop
rol
iret
mov
sbb
jl
jg
dec
popf
hlt
imul
xchg
cdq
or
xor
int3
add
or
das
push
pop
daa
ins
(bad)
pop
sbb
inc
(bad)
push
inc
aad
sub
test
movs
fisubr
into
cmps
sbb
and
das
adc
repnz
xchg
imul
(bad)
dec
push
lea
clc
rcl
jb
sbb
movs
push
(bad)
(bad)
jmp
lds
mov
mov
xchg
and
jl
or
fsub
or
cmc
outs
(bad)
(bad)
(bad)
jmp
rcl
into
cdq
sub
dec
stos
pop
mov
and
movs
clc
lahf
sub
(bad)
(bad)
dec
test
push
cmp
dec
push
retf
pop
adc
adc
leave
mov
(bad)
(bad)
(bad)
dec
mov
and
aam
fs
cmps
sbb
dec
inc
xchg
mov
repz
dec
stos
jle
scas
cli
call
mov
in
mov
popf
push
adc
xor
ror
jo
inc
cld
inc
shl
pop
jbe
xchg
lods
push
jnp
test
stos
pop
push
dec
dec
shl
scas
add
js
mov
loop
and
mov
sti
(bad)
(bad)
(bad)
(bad)
call
jg
ret
les
mov
cwde
inc
out
lahf
xchg
mov
dec
mov
sub
xchg
xchg
sub
(bad)
(bad)
dec
adc
xchg
stc
aad
push
shl
fdecstp
imul
add
jmp
(bad)
(bad)
jle
stos
jmp
push
push
sbb
lahf
fcmovne
ins
ficomp
stos
ins
mov
rol
dec
clc
dec
movs
jmp
test
sbb
and
push
mul
out
push
xor
cdq
jg
cmp
adc
scas
xchg
adc
push
mov
dec
icebp
ror
jmpw
sub
mov
mov
or
(bad)
mov
cli
xor
sbb
sub
sub
mov
pop
add
clc
cmc
pop
(bad)
clc
fidiv
and
dec
pop
sbb
stos
in
(bad)
(bad)
(bad)
(bad)
fcomip
(bad)
mov
push
pop
lahf
push
jmp
and
sub
out
scas
out
scas
fnstsw
push
fbld
pop
cld
mov
sbb
add
sahf
adc
(bad)
lahf
mov
test
jbe
mov
jge
mov
cmp
cmp
mov
cld
sbb
rcr
repnz
imul
or
ins
sub
ja
mov
or
mov
(bad)
(bad)
mov
xor
cmp
ds
fbld
lods
pop
sti
(bad)
(bad)
inc
push
(bad)
or
stos
sub
xlat
xlat
xchg
outs
fidiv
cmp
test
mov
(bad)
cli
int
inc
mov
(bad)
jecxz
ds
mov
bound
mov
push
jb
dec
mov
dec
jns
fisubr
xchg
scas
repnz
fsub
mov
mov
or
loopne
aad
out
dec
mov
neg
jno
push
jmp
lea
inc
aas
fst
(bad)
(bad)
(bad)
push
movs
int3
lods
sbb
adc
out
aad
push
iret
or
stc
push
(bad)
aaa
adc
test
popa
cld
push
or
popf
dec
add
or
pop
xchg
push
in
mov
(bad)
call
repz
push
enter
cmp
shl
inc
push
dec
aaa
sub
call
pop
in
and
arpl
ins
cdq
(bad)
lods
iret
push
in
xor
(bad)
(bad)
push
test
cmp
js
fdiv
xchg
arpl
xchg
loope
lods
retf
xchg
out
sub
(bad)
(bad)
inc
xchg
aad
fistp
pop
and
arpl
mov
repnz
jmp
aas
test
cmp
(bad)
(bad)
push
sub
sbb
movs
ins
arpl
push
sbb
xlat
das
or
push
cld
ret
xchg
cmp
(bad)
call
iret
xor
or
rol
pusha
jp
mov
fsub
js
dec
into
(bad)
(bad)
(bad)
inc
cwde
popa
adc
push
mov
hlt
jo
rcl
jmp
loopne
arpl
(bad)
and
xor
(bad)
movs
mov
fadd
push
in
push
call
sbb
jg
cmc
test
add
call
daa
mov
adc
enter
push
(bad)
(bad)
(bad)
(bad)
cli
lea
out
outs
aad
fadd
idiv
mov
addr16
rol
repz
sbb
xor
cmp
xor
and
(bad)
ror
and
(bad)
(bad)
dec
out
pop
dec
jge
fidiv
lods
nop
(bad)
xchg
out
or
ins
sbb
push
jno
shr
lock
inc
jb
stc
jne
add
(bad)
(bad)
(bad)
jle
mov
out
sti
shl
push
pop
retf
mov
pop
rcl
mov
cmp
jmp
xchg
and
retf
pusha
hlt
cmp
stc
lock
push
push
je
in
xchg
or
fild
push
xchg
out
cs
pop
jb
mov
(bad)
(bad)
push
dec
inc
or
xor
mov
lods
movs
mov
push
add
call
aad
stos
div
fwait
ret
mov
addr16
(bad)
(bad)
(bad)
call
in
jge
imul
inc
movs
arpl
mov
pop
jne
cdq
gs
out
out
(bad)
and
mov
test
jg
mov
inc
push
mov
std
and
pop
test
(bad)
inc
iret
mov
sbb
loop
mov
popa
mov
or
sbb
loope
sub
sbb
sub
(bad)
call
out
and
test
movs
rcl
mov
or
xchg
call
dec
nop
xchg
in
in
out
xchg
cmp
mov
push
aam
call
pop
in
push
lahf
mov
lahf
cmp
arpl
repnz
fist
test
fnstsw
(bad)
(bad)
(bad)
jmp
xchg
xlat
and
sub
sub
shl
ret
mov
xor
hlt
sbb
fcmovbe
(bad)
(bad)
(bad)
push
fidiv
fisubr
mov
mov
cld
mov
(bad)
(bad)
(bad)
(bad)
jle
push
mov
mov
sahf
lods
in
lock
add
mov
stos
jne
add
and
adc
jg
test
cmp
or
cmp
jmp
xchg
jle
arpl
pop
cmp
mov
pusha
sub
jae
(bad)
(bad)
jmp
mov
call
movs
inc
push
retf
or
xor
lea
bound
or
inc
sbb
cld
xor
stc
pop
(bad)
(bad)
(bad)
jmp
fist
push
mov
fdiv
fisttp
inc
loopne
mov
loope
bound
cmc
(bad)
(bad)
inc
jnp
aam
sub
clc
loope
out
sub
mov
mov
into
mov
(bad)
(bad)
call
pop
and
xor
rol
test
add
and
out
retf
mov
mov
push
ret
call
fwait
mov
(bad)
(bad)
(bad)
jmp
in
jno
pop
mov
jl
mov
add
sub
test
sub
inc
(bad)
(bad)
(bad)
(bad)
sti
xor
(bad)
mov
adc
adc
jl
imul
pop
cmp
hlt
(bad)
(bad)
(bad)
call
aam
imul
aad
int
pushf
mov
test
mov
push
ins
dec
mov
les
push
test
cli
(bad)
call
imul
mov
data16
cmp
xchg
(bad)
(bad)
(bad)
inc
jge
jb
or
in
mov
mov
mov
push
(bad)
jg
call
jecxz
xchg
xor
push
cmp
es
add
inc
aam
xchg
dec
mov
xor
lahf
shr
outs
cmp
jmp
retf
add
dec
aaa
and
(bad)
(bad)
inc
push
loope
test
adc
or
cmp
jne
into
xchg
add
subps
cmp
pop
clc
(bad)
fbld
inc
fstp
dec
dec
sub
cmps
pop
cmp
in
jle
mov
add
xlat
vmread
xchg
push
cmp
inc
call
xlat
repz
jl
call
int
sub
(bad)
(bad)
dec
push
movs
xchg
push
xor
(bad)
pop
mov
or
push
outs
push
cmp
pop
lahf
(bad)
(bad)
inc
inc
or
jne
stos
jo
jbe
cmp
or
sbb
fstp
(bad)
(bad)
(bad)
mov
aad
jbe
ja
pop
popa
sub
lods
sbb
scas
sub
inc
scas
test
ret
(bad)
(bad)
(bad)
inc
mov
xchg
dec
mov
lods
jmp
call
add
xchg
shr
xlat
xchg
(bad)
(bad)
jmp
rcr
pop
dec
and
in
sub
sub
(bad)
cmp
repz
cmp
pop
mov
call
cmp
sub
(bad)
repz
push
ins
dec
dec
mov
cld
rcr
dec
dec
inc
or
daa
mov
fiadd
adc
dec
(bad)
push
cmps
test
or
push
movs
pop
xor
and
test
(bad)
jg
daa
das
fst
add
(bad)
mov
stos
adc
pop
scas
pop
mov
dec
loopne
sub
sbb
(bad)
push
sbb
pop
dec
jmp
cmp
pop
iret
fstp
mov
pop
dec
sbb
push
rol
push
inc
(bad)
(bad)
(bad)
inc
sub
mov
xchg
sub
xor
daa
mov
adc
(bad)
(bad)
(bad)
(bad)
push
lea
movs
aaa
inc
inc
iret
int3
push
sub
adc
lea
pop
pop
sbb
fsub
push
pop
adc
(bad)
inc
jecxz
xor
push
dec
addr16
cmp
inc
sbb
call
sub
lds
push
add
lds
add
(bad)
jmp
xchg
ret
push
lods
inc
sbb
fisttp
mov
mov
sti
and
scas
jns
adc
mov
(bad)
fdivr
je
xor
popa
xchg
fmul
out
sbb
(bad)
(bad)
(bad)
(bad)
jmp
push
shl
and
cmp
adc
lea
add
out
sbb
jmp
stos
cmp
out
enter
call
ds
fdiv
(bad)
(bad)
(bad)
push
cmps
inc
xchg
je
les
jo
push
loop
call
xor
adc
ret
cld
dec
fsubr
jle
popa
mov
dec
enter
data16
sub
(bad)
push
jmp
test
push
cwde
data16
mov
in
pushf
ror
(bad)
jmp
pop
xchg
add
call
jbe
pop
out
cmps
fild
cld
ja
idiv
and
push
movs
pop
add
sub
xlat
xchg
adc
loope
jae
daa
fwait
sub
and
mov
lds
jb
ja
xchg
sub
xchg
xchg
(bad)
fcomip
jmp
push
in
mov
in
je
push
push
inc
test
push
aaa
(bad)
(bad)
(bad)
push
and
or
addr16
push
pop
ja
jle
imul
outs
(bad)
inc
(bad)
(bad)
(bad)
dec
cmp
pop
shl
and
enter
outs
loopne
mov
jp
sub
cmps
adc
ja
dec
xchg
jbe
and
and
pop
add
ins
imul
and
adc
sti
pop
aas
js
sbb
(bad)
(bad)
dec
std
push
add
in
(bad)
stc
and
aad
in
repz
jecxz
in
(bad)
(bad)
(bad)
call
xor
out
std
sub
mov
aam
ret
frstor
pop
mov
aas
cmp
jmp
add
lds
imul
add
dec
and
jg
cmc
jno
dec
or
inc
sbb
pop
idiv
jmp
jl
jnp
jmp
retf
fimul
and
jo
jns
push
mov
pop
pop
std
fisttp
movs
jbe
mov
mov
adc
into
pop
push
scas
mov
pop
sub
push
retf
and
test
xchg
pop
(bad)
(bad)
(bad)
inc
adc
pop
adc
xchg
inc
xor
xchg
dec
dec
pop
jae
mov
jmp
mov
sbb
cwde
sbb
(bad)
push
retf
cli
adc
mov
neg
jbe
xchg
xor
(bad)
(bad)
(bad)
call
fbld
(bad)
fistp
jge
jae
aaa
rcr
or
push
ins
jge
jmp
das
rol
sub
dec
jle
test
out
in
(bad)
(bad)
(bad)
dec
hlt
sbb
(bad)
dec
jmp
aad
mov
dec
pop
cwde
mov
cmps
cmp
push
test
mov
(bad)
mov
cld
loope
inc
cdq
mov
and
jp
cmps
mov
in
test
add
xchg
(bad)
(bad)
(bad)
call
mov
mov
mov
adc
mov
add
or
jne
dec
sub
scas
(bad)
(bad)
push
cmp
xchg
clc
(bad)
aad
pop
cwde
adc
mov
loope
and
(bad)
(bad)
(bad)
push
lock
add
and
mov
cwde
mov
jl
xchg
dec
inc
pop
dec
pop
mov
jo
push
push
and
aas
pop
push
sub
clc
xchg
and
sbb
and
adc
jmp
xchg
and
sbb
mov
enter
sbb
std
or
enter
(bad)
jmp
dec
or
aam
mov
ja
inc
bound
push
into
add
int
(bad)
(bad)
jg
mov
adc
pop
pop
mov
jo
sbb
xchg
add
in
(bad)
(bad)
call
rol
push
and
add
idiv
mov
push
sub
mov
clc
(bad)
(bad)
fidiv
mov
mov
dec
sub
repz
(bad)
(bad)
(bad)
(bad)
jge
int
inc
xor
pushf
xchg
jb
scas
cmc
data16
push
mov
ins
(bad)
jmp
rol
dec
mov
call
or
jp
(bad)
(bad)
(bad)
inc
ja
inc
(bad)
cmp
fmul
mov
pop
pop
cmp
in
loop
xchg
outs
shr
and
add
jne
lock
cmp
sahf
adc
fwait
pushf
imul
push
(bad)
(bad)
(bad)
inc
mov
rcl
jmp
(bad)
les
dec
cmc
popf
popf
inc
aaa
cmp
adc
(bad)
(bad)
call
mov
inc
xchg
xor
jg
dec
add
dec
cld
sar
stos
scas
ins
nop
out
sub
(bad)
(bad)
push
loop
scas
test
mov
in
mov
adc
jecxz
in
sbb
(bad)
dec
(bad)
xchg
int3
mov
xchg
pop
shl
inc
push
xchg
ja
cmp
fwait
inc
jmp
push
test
ret
dec
mov
mov
cmp
jae
not
mov
(bad)
dec
and
sub
cmp
sub
fs
les
or
pop
jnp
mov
cmp
sti
mov
pop
(bad)
aam
mov
in
not
(bad)
(bad)
(bad)
jmp
jmp
adc
push
adc
pop
mov
aad
les
mov
push
xchg
(bad)
(bad)
(bad)
(bad)
stc
cmp
clc
cmc
push
shl
push
xor
movs
xor
push
test
mov
ret
xchg
sbb
mov
test
(bad)
fcomip
mov
out
xor
push
xor
xchg
pop
ret
sbb
sub
jg
icebp
(bad)
hlt
cmc
jl
xlat
pop
repz
adc
fs
add
mov
call
pop
push
push
jmp
std
or
xchg
cmp
mov
jge
nop
dec
add
enter
int
retf
(bad)
(bad)
mov
jmp
jno
in
ret
cmps
adc
add
(bad)
(bad)
(bad)
jmp
jmp
daa
fisttp
jecxz
xchg
pop
push
stos
mov
mov
clc
mov
jg
cli
nop
push
fdivr
in
sbb
rcr
jb
sahf
imul
(bad)
(bad)
(bad)
jmp
add
push
scas
inc
mov
cmp
add
leave
pusha
outs
jne
mov
call
scas
mov
pop
aad
out
mov
lahf
jbe
(bad)
call
popa
mov
or
test
jo
mov
and
sbb
outs
pushf
and
add
(bad)
mov
mov
push
pop
xor
sbb
cmps
fadd
xchg
pop
clc
imul
and
popf
inc
and
stos
cmc
mov
mov
xor
cmp
dec
in
hlt
dec
pop
cmps
outs
jg
rcr
push
dec
in
sub
inc
mov
(bad)
mov
into
call
xor
iret
sahf
fadd
jecxz
jmp
adc
inc
das
pusha
and
out
mov
mov
cdq
retf
or
jmp
mov
cmps
jns
imul
mov
ja
sar
rcr
and
pop
sbb
add
rcr
add
sub
push
add
call
mov
pop
dec
je
sub
adc
mov
(bad)
(bad)
mov
bnd
je
scas
push
mov
jge
add
mov
lock
scas
add
xor
mov
cmp
or
bound
call
cli
stos
test
sbb
iret
add
mov
loop
(bad)
(bad)
(bad)
ds
das
psrlw
popa
sub
fisub
push
clc
loop
shl
enter
jnp
into
shl
jl
xchg
jmp
mov
pusha
pop
std
pop
fiadd
cdq
sub
mov
inc
dec
(bad)
call
mov
add
and
lods
mov
(bad)
hlt
mov
(bad)
(bad)
(bad)
aas
mov
adc
aas
or
imul
popf
push
fisub
inc
mov
jg
mov
inc
dec
mov
fistp
clc
inc
or
(bad)
(bad)
(bad)
call
add
pop
je
add
pop
(bad)
(bad)
and
xor
out
div
lods
nop
cmc
jo
adc
add
fs
jmp
(bad)
call
sbb
sbb
in
out
mov
cmps
mov
jmp
pushf
arpl
and
jmp
popf
std
or
and
call
sub
sub
mov
(bad)
mov
mov
das
pop
inc
(bad)
mov
retf
loopne
mov
scas
(bad)
jg
jnp
pop
or
mov
mov
pop
xor
jmp
retf
popf
(bad)
sbb
mov
lock
push
push
push
and
dec
ror
stos
mov
cmp
push
push
fnstcw
mov
outs
push
jne
jl
sub
mov
int
mov
(bad)
out
dec
dec
pop
imul
les
jp
cmp
(bad)
(bad)
dec
mov
(bad)
in
xchg
mov
jp
ret
and
movs
mov
dec
lahf
mov
mov
xchg
sahf
xor
sbb
push
cdq
test
adc
aaa
and
sahf
mov
jne
pop
push
(bad)
in
push
lods
mov
repnz
ror
mov
das
dec
mov
(bad)
inc
cld
xchg
xchg
leave
push
int3
add
inc
outs
mov
scas
aad
outs
lods
scas
je
leave
xchg
es
(bad)
(bad)
dec
ins
lahf
ror
mov
pop
ins
dec
inc
es
(bad)
nop
jmp
cmp
dec
add
mov
push
(bad)
(bad)
(bad)
inc
and
cmps
dec
pop
frstor
jns
sbb
fwait
or
(bad)
pop
(bad)
(bad)
mov
push
out
adc
or
push
dec
ret
adc
adc
loope
(bad)
call
inc
jbe
push
repnz
lea
aaa
or
jo
inc
push
push
xor
ins
mov
(bad)
(bad)
mov
push
cdq
gs
repz
push
test
aam
sub
fnstcw
data16
mov
(bad)
jmp
(bad)
in
or
in
cmp
push
sub
sub
cmps
cdq
ret
les
(bad)
(bad)
(bad)
dec
xlat
aad
jae
aaa
xchg
sti
push
add
xchg
xchg
test
in
adc
call
jns
cmp
mov
or
(bad)
push
sbb
jns
out
mov
aad
push
(bad)
(bad)
jmp
test
sub
imul
fimul
mov
push
add
(bad)
jmp
pop
test
xchg
push
mov
push
fcmovu
xchg
iret
cs
cmp
scas
mov
(bad)
mov
mov
jle
lds
adc
sbb
icebp
push
cmp
mov
(bad)
(bad)
(bad)
mov
cs
dec
hlt
cmps
(bad)
scas
loopne
inc
test
mul
out
lea
sub
(bad)
(bad)
jmp
sub
inc
gs
xor
fimul
les
cmp
add
mov
outs
dec
or
mov
pop
inc
cmp
ret
cmp
push
fsubp
xchg
(bad)
push
inc
nop
cmp
mov
jmp
cmps
pop
and
shr
hlt
std
(bad)
(bad)
jmp
ficom
xchg
adc
mov
pop
imul
ret
ret
repnz
retf
in
adc
(bad)
(bad)
call
cs
stos
lock
mov
cli
push
mov
xchg
std
fmul
mov
jle
cld
sbb
jnp
adc
not
fild
mov
(bad)
(bad)
out
or
xlat
popa
mov
mov
and
sbb
jl
sbb
mov
loop
(bad)
push
mov
js
js
jp
push
imul
popf
push
(bad)
ja
(bad)
(bad)
mov
mov
popa
inc
in
pushf
mov
sbb
mov
mov
shl
and
jle
outs
push
mov
call
lahf
sti
inc
pop
pop
aad
(bad)
(bad)
(bad)
cld
add
(bad)
in
fdivrp
mov
scas
retf
cmc
pushf
gs
fnstenv
inc
cmps
(bad)
std
fld
(bad)
call
adc
xchg
bnd
or
xor
jle
jle
(bad)
(bad)
(bad)
(bad)
jns
retf
leave
mov
outs
push
push
fld
cmp
add
or
inc
ficomp
fdivr
lea
(bad)
out
mov
sar
(bad)
xchg
daa
sub
jg
mov
jb
call
iret
add
in
push
clc
pop
or
sbb
out
movs
cmp
mov
push
(bad)
push
sbb
pop
rcl
test
dec
xor
out
lds
repz
mov
sbb
mov
test
mov
mov
(bad)
(bad)
(bad)
inc
sub
(bad)
cdq
arpl
test
sbb
fcmovb
fwait
sub
test
ins
push
cmps
(bad)
(bad)
push
push
sbb
cmp
(bad)
mov
push
and
aaa
ds
add
(bad)
(bad)
inc
fmul
cmp
xchg
jbe
popa
jp
sbb
xor
jno
(bad)
(bad)
(bad)
jmp
dec
inc
movs
jle
jne
sar
ss
jo
ds
nop
es
dec
outs
sahf
cmp
sub
jmp
sbb
fistp
call
stc
mov
sbb
out
addr16
(bad)
(bad)
call
cmps
push
daa
sbb
pop
sbb
retf
cmc
mov
push
pop
ror
adc
or
mov
mov
dec
test
in
add
cmp
setp
cmc
(bad)
(bad)
dec
mov
xchg
jl
mov
test
jb
xchg
cmp
xor
mov
fistp
js
loopne
xchg
rep
xchg
sbb
in
(bad)
(bad)
(bad)
(bad)
frstor
xor
test
xchg
add
cmp
sysexit
sbb
dec
and
loopne
mov
push
or
push
xchg
dec
inc
push
jp
icebp
mov
in
arpl
jecxz
push
jmp
dec
push
sbb
(bad)
jno
ins
imul
xchg
(bad)
inc
out
in
inc
jne
inc
or
mov
mov
aam
cmc
stos
out
in
mov
test
mov
jmp
shr
dec
push
cdq
ret
add
add
aad
mov
push
and
pop
inc
(bad)
(bad)
(bad)
jmp
adc
inc
pop
pop
das
ret
xchg
mov
dec
pop
sti
(bad)
adc
mov
stc
pop
(bad)
(bad)
jmp
mov
push
sbb
scas
mov
sub
adc
retf
(bad)
(bad)
call
call
imul
and
pop
test
xor
ret
mov
jmp
icebp
fbld
loope
leave
(bad)
push
cmc
or
test
adc
(bad)
call
xchg
inc
fs
es
mov
in
mov
mov
(bad)
or
(bad)
jmp
push
mov
sar
in
scas
clc
mov
retf
add
(bad)
pop
dec
dec
popf
cmp
and
push
icebp
(bad)
(bad)
jg
jmp
inc
dec
movs
dec
cmp
std
aas
addr16
adc
adc
jg
xchg
jae
cwde
inc
adc
jmp
sub
(bad)
(bad)
(bad)
out
fadd
daa
mov
mov
sub
bound
or
and
shr
(bad)
(bad)
dec
push
cmp
or
xchg
sar
jnp
inc
cmp
lds
(bad)
jmp
inc
loop
pop
popa
retf
iret
inc
std
adc
test
jge
(bad)
in
sub
jp
int3
cmp
jmp
aam
jecxz
add
leave
test
mov
push
bound
push
gs
(bad)
mov
mov
(bad)
dec
mov
jmp
inc
fcomp
pop
movs
mov
and
(bad)
(bad)
jnp
or
inc
je
hlt
pop
xchg
sbb
cmp
nop
sub
and
out
xchg
pop
sbb
clc
inc
inc
ins
xor
adc
and
jmp
inc
cmc
xor
(bad)
(bad)
call
mov
stos
and
sub
fdivr
mov
xor
cmc
rol
(bad)
call
cmp
das
pop
xchg
or
or
inc
sub
push
dec
push
hlt
(bad)
fld
(bad)
(bad)
fadd
push
adc
pop
push
hlt
cmp
xchg
xchg
jae
mov
(bad)
(bad)
dec
iret
add
test
cmp
and
sub
popf
xor
mov
mov
(bad)
call
(bad)
ja
push
jb
dec
out
pop
add
or
pop
add
mov
(bad)
cmp
(bad)
in
push
call
mov
sub
or
mov
jne
pop
fs
shl
xor
pop
pop
iret
pushf
add
sar
add
jmp
or
sub
mov
mov
inc
and
in
int3
sub
inc
pusha
call
(bad)
call
mov
leave
jmp
movs
nop
pop
sar
shl
mov
pushw
or
add
push
(bad)
movs
cmp
cmp
jge
mov
call
fimul
dec
ret
bound
pop
dec
inc
xchg
sysret
cmp
xor
lods
xor
push
int
(bad)
(bad)
(bad)
mov
retf
(bad)
aam
sub
pop
ss
jl
cmp
pop
cdq
dec
(bad)
(bad)
(bad)
dec
pop
push
pop
dec
sub
push
stc
scas
aam
fimul
out
icebp
test
adc
add
and
inc
stos
cmp
loope
fild
test
push
rcl
shl
dec
shl
sbb
mov
or
(bad)
fild
xchg
in
and
mov
lods
ja
dec
stos
out
sbb
(bad)
(bad)
push
mov
dec
ror
cmps
ins
bound
cmp
movs
sub
dec
(bad)
(bad)
push
ins
sbb
lods
push
inc
xchg
jo
jnp
sbb
xor
(bad)
(bad)
(bad)
jmp
jne
xchg
xchg
mov
pop
jae
add
mov
gs
jmp
xlat
mov
and
fs
cmp
(bad)
dec
enter
out
movs
xchg
jecxz
dec
fistp
sbb
lahf
pop
or
sub
(bad)
(bad)
jmp
addr16
jecxz
(bad)
sub
mov
add
shr
xchg
cli
les
sti
fcomp
xor
mov
(bad)
(bad)
jmp
jno
inc
or
sbb
pop
push
sbb
fdiv
out
lds
(bad)
jmp
sub
mov
mov
add
sub
fstp
(bad)
(bad)
in
loopne
sub
mov
mov
fcom
mov
adc
push
iret
inc
loope
out
in
(bad)
(bad)
(bad)
push
mov
inc
outs
dec
sbb
je
add
or
out
cmp
mov
push
mov
adc
adc
sbb
cmp
fst
(bad)
(bad)
(bad)
cmp
mov
sub
or
hlt
sbb
sbb
or
(bad)
(bad)
dec
pop
inc
sbb
movs
jbe
dec
es
retf
(bad)
adc
xor
jbe
mov
and
(bad)
(bad)
jmp
retf
push
sbb
sub
mov
fcom
into
cs
jmp
adc
pop
mov
out
sbb
fadd
lea
mov
inc
xchg
add
(bad)
(bad)
jmp
push
mov
mov
enter
sub
adc
add
inc
shl
loopne
(bad)
(bad)
dec
adc
mov
adc
retf
ficomp
adc
je
out
popa
dec
fstp
cmp
sbb
sub
test
(bad)
inc
and
rcr
mov
mov
dec
mov
sahf
retf
(bad)
(bad)
jg
ret
mov
fsub
sub
inc
test
sahf
xchg
pop
ins
cld
(bad)
(bad)
dec
popa
mov
pop
xor
inc
retf
pop
pop
and
push
xor
jbe
in
dec
sbb
push
ds
mov
ror
jae
or
scas
nop
data16
test
daa
data16
(bad)
(bad)
jmp
xchg
cmp
into
cmp
clc
gs
push
or
jae
jle
jnp
pop
adc
out
cmps
dec
icebp
sbb
(bad)
dec
ds
or
mov
mov
movs
jae
push
xchg
(bad)
or
(bad)
inc
fimul
mov
fst
mov
inc
inc
add
(bad)
(bad)
(bad)
fbld
dec
jmp
xor
lahf
das
cmp
push
scas
sub
cmp
sub
(bad)
(bad)
call
dec
dec
inc
out
cmps
mov
dec
add
inc
je
daa
add
xchg
jae
jmp
jmp
fnstcw
dec
jecxz
(bad)
mov
ret
(bad)
dec
xchg
fbstp
aad
lods
cmps
and
lahf
and
and
inc
sub
inc
sbb
mov
stos
pop
mov
xchg
cmp
loope
(bad)
(bad)
(bad)
mov
lea
inc
jnp
xor
lods
(bad)
cmp
lds
cmp
xor
add
fist
and
out
into
stos
push
cpuid
popf
mov
das
mov
scas
mov
sbb
fcmovu
jno
mov
(bad)
(bad)
(bad)
fstp
call
ins
xchg
idiv
mov
xor
(bad)
jl
sbb
(bad)
(bad)
jmp
jae
out
dec
cmovg
xchg
lock
cmp
or
ds
mov
out
idiv
test
fwait
inc
fsubr
push
call
jmp
sub
mov
rcr
movs
cmps
lock
(bad)
(bad)
dec
jo
popa
xchg
sbb
cmps
out
fwait
div
pop
jmp
sbb
jmp
jge
not
je
mov
clc
(bad)
(bad)
in
int
fistp
stos
lea
jg
(bad)
shr
aaa
int3
std
cmps
xchg
int3
out
outs
fld
repnz
mov
in
ds
fidivr
call
lods
jp
gs
ins
stos
jge
stos
std
pop
into
cdq
cmp
shl
call
cld
push
adc
xchg
mov
mov
xor
repz
(bad)
call
repz
mov
test
idiv
and
(bad)
inc
int
or
repnz
shr
shr
(bad)
(bad)
jmp
dec
jmp
je
test
mov
icebp
ins
adc
adc
mov
(bad)
pop
sbb
add
or
je
cli
mov
rol
aad
es
(bad)
(bad)
jmp
ret
imul
mov
push
aam
mov
fsub
(bad)
(bad)
(bad)
mov
mov
(bad)
not
cmc
movs
(bad)
aas
aas
fs
jo
test
outs
push
cmp
pop
(bad)
call
push
mov
call
inc
mov
push
(bad)
(bad)
(bad)
jmp
clc
cmp
mov
std
cmp
and
pushf
jo
cmc
(bad)
(bad)
inc
cmps
test
mov
int3
inc
sub
mov
outs
ins
sbb
push
jge
jnp
xchg
cli
sti
adc
jge
(bad)
(bad)
mov
mov
add
xor
test
popf
or
stc
mov
mov
scas
push
bound
pop
inc
push
es
xor
pop
push
and
jo
xor
cmp
inc
pop
adc
outs
test
fsubr
mov
mov
repz
(bad)
jg
call
jl
cmp
push
ins
cmp
je
int
adc
popf
dec
jns
cmp
(bad)
inc
int3
xchg
push
inc
js
cmp
push
push
mov
out
ret
cmc
(bad)
call
je
push
lods
push
xchg
inc
add
sub
xchg
push
xchg
mov
add
(bad)
jmp
iret
das
movs
sbb
xchg
push
rcl
or
jmp
xchg
cmc
fistp
scas
fidivr
(bad)
into
mov
(bad)
jg
scas
pusha
push
out
xor
popa
call
sar
cmp
xor
sbb
jmp
cli
jg
dec
into
push
sahf
hlt
les
push
cmps
add
cmp
push
inc
(bad)
es
pushf
xchg
(bad)
(bad)
(bad)
jmp
xchg
adc
popa
retf
adc
or
sbb
jnp
lea
cmp
(bad)
(bad)
(bad)
call
push
dec
(bad)
not
fsub
out
xchg
cmp
(bad)
xlat
data16
lods
add
outs
clc
cmp
xchg
cdq
xor
push
in
adc
xor
mov
sbb
dec
sbb
jg
mov
or
call
scas
inc
mov
in
mov
stos
int
(bad)
jg
push
clc
cmp
(bad)
cmc
sbb
ds
jnp
add
mov
das
(bad)
(bad)
call
repz
mov
mov
int3
into
loope
jp
add
movs
sbb
sbb
enter
jmp
sub
cmp
mov
or
aaa
cmp
pop
imul
into
adc
pop
int
add
mov
adc
and
jmp
(bad)
and
push
(bad)
mov
pop
out
pop
mov
retf
xor
lea
inc
stos
(bad)
(bad)
call
or
inc
sar
pop
std
neg
cmps
retf
cmp
outs
(bad)
(bad)
(bad)
jmp
hlt
add
sbb
iret
adc
fcomip
cmp
ja
mov
ss
inc
and
es
rcr
sbb
or
push
jne
mov
sub
add
xchg
inc
xchg
(bad)
dec
ins
rcl
add
lahf
push
loop
lock
pop
pop
sbb
dec
mov
push
shl
retf
xchg
(bad)
mov
mov
add
sbb
(bad)
(bad)
(bad)
push
sti
loope
sti
hlt
in
mov
scas
dec
push
ud1
push
icebp
push
imul
adc
dec
(bad)
(bad)
(bad)
jmp
aaa
xchg
mov
push
xchg
pusha
add
pop
sub
(bad)
(bad)
(bad)
jmp
mov
push
push
js
es
ins
dec
mov
pop
loope
pop
fdivr
sar
xor
stos
iret
mov
adc
mov
jmp
cmp
dec
scas
es
stos
cwde
push
pushf
and
(bad)
dec
pop
sub
or
jecxz
mov
ds
or
mov
cld
mov
cmp
push
mov
mov
(bad)
jl
inc
pop
pop
add
ds
fistp
daa
(bad)
fild
fsub
jg
cmp
jg
sti
call
in
fnstsw
stos
rcr
mov
fidivr
loope
mov
dec
mov
lods
jecxz
cmps
add
push
or
out
lods
inc
clc
(bad)
mov
mov
idiv
mov
dec
pop
ret
(bad)
(bad)
mov
fistp
(bad)
sti
pop
jae
movs
inc
inc
inc
(bad)
scas
mov
cli
sub
mov
push
je
jl
jo
ja
(bad)
(bad)
(bad)
jg
out
out
out
ds
and
inc
les
imul
frstor
dec
ja
(bad)
inc
adc
adc
loopne
cmps
not
jmp
out
mov
js
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
in
lea
iret
pop
ds
sub
sti
push
mov
in
sti
pop
mov
(bad)
jmp
cmp
repz
mov
sahf
jne
into
cmp
scas
outs
popf
sti
cld
ja
stos
cli
or
pop
adc
inc
dec
mov
mov
into
xor
out
xchg
es
mov
addr16
dec
shr
sbb
imul
test
(bad)
(bad)
(bad)
fldenv
and
ins
push
cmps
jle
in
loope
xor
sbb
mov
mov
(bad)
(bad)
(bad)
fstp
loope
cmp
(bad)
cmp
lea
push
(bad)
mov
stc
out
fldl2t
mov
xor
ret
mov
hlt
test
shl
retf
xchg
cmps
jb
push
(bad)
cld
push
push
(bad)
(bad)
(bad)
dec
scas
lds
xor
int
lock
jecxz
(bad)
rcr
bound
jmp
stos
mov
in
xor
in
test
xchg
push
fmulp
push
stos
ret
(bad)
(bad)
(bad)
call
sbb
idiv
cmps
dec
inc
mov
cmp
(bad)
(bad)
mov
cdq
and
pop
enter
test
cmp
adc
std
ds
outs
xchg
(bad)
jge
sti
and
sub
mov
cmp
dec
pop
addr16
sub
push
cmp
add
pop
in
mov
add
inc
mov
aas
inc
outs
(bad)
ja
mov
or
jno
jno
add
sete
outs
icebp
lock
(bad)
(bad)
mov
pop
out
mov
fst
mov
ds
std
mov
fdiv
sti
dec
push
inc
gs
aam
outs
mov
push
ret
cmc
sti
in
mov
push
inc
xchg
mov
js
xchg
pop
cmps
mov
dec
sbb
add
push
add
dec
loop
xchg
pop
bound
jg
(bad)
or
cli
movs
jecxz
lods
mov
fdiv
not
dec
cli
pop
lock
inc
push
push
ins
push
lock
sbb
sub
(bad)
(bad)
dec
sbb
mov
(bad)
push
clc
std
add
add
fstp
lock
(bad)
(bad)
jmp
enter
sahf
shr
imul
retf
aad
imul
sbb
mov
in
and
sbb
mov
leave
adc
cs
add
fnsave
mov
lahf
out
fistp
neg
jbe
mov
cmc
fucomp
mov
mov
sbb
jno
idiv
jb
movs
dec
xchg
pop
imul
mov
jp
std
mov
lahf
adc
movhlps
popa
in
(bad)
lods
mov
test
cld
sub
sbb
mov
in
pop
or
mov
rcr
xchg
cmp
in
(bad)
(bad)
call
aas
cmp
arpl
dec
js
push
mov
inc
test
minps
mul
(bad)
(bad)
(bad)
inc
loope
loopne
ja
add
(bad)
xlat
add
cmp
and
push
(bad)
(bad)
(bad)
inc
ds
adc
ss
test
js
mov
(bad)
xchg
mov
ret
call
sub
ror
push
xchg
jae
pop
aam
aad
das
mov
push
mov
mov
sub
(bad)
jmp
gs
adc
jae
bswap
xor
shr
push
mov
dec
call
or
xor
dec
dec
push
stos
adc
fild
(bad)
mov
ins
and
loop
mov
(bad)
(bad)
(bad)
jmp
jo
arpl
fdivr
lods
inc
ja
(bad)
and
pop
addr16
arpl
rcr
or
mov
(bad)
(bad)
jmp
ss
ja
xchg
in
jp
lods
test
push
adc
cwde
adc
and
test
scas
cli
(bad)
(bad)
dec
or
loop
rol
fistp
push
sbb
add
inc
push
pusha
inc
dec
(bad)
lods
add
hlt
fs
mov
repz
sub
or
xchg
add
or
(bad)
(bad)
(bad)
call
sub
cmp
adc
test
sahf
fistp
call
es
sti
push
sbb
pusha
fimul
(bad)
(bad)
jmp
in
sub
push
sub
inc
sar
xor
sub
add
cli
jg
push
call
in
lods
cmc
retf
retf
popa
shr
sub
ror
les
cmp
lock
push
je
cmp
push
adc
pop
aad
(bad)
(bad)
(bad)
call
loope
imul
push
retf
mov
cmp
outs
adc
cmp
mov
sbb
dec
xchg
xchg
test
jbe
gs
mov
out
div
inc
cmp
leave
test
pop
mov
popf
dec
imul
jmp
push
mov
pop
js
inc
inc
dec
sub
addr16
call
std
mov
ja
sar
xor
jo
push
sub
mov
xchg
imul
add
(bad)
(bad)
(bad)
jg
js
inc
movs
dec
jge
retf
push
ja
mov
mov
mov
mov
sbb
hlt
(bad)
cld
shl
mov
sbb
mov
call
call
ffree
(bad)
popf
(bad)
cmps
movs
ds
add
gs
cs
(bad)
jg
adc
jbe
sub
add
scas
jno
mov
pop
(bad)
out
mov
(bad)
call
ins
imul
mov
mov
iret
fcom
cmp
push
xlat
data16
sbb
mov
les
imul
(bad)
(bad)
(bad)
push
and
push
ins
sub
dec
push
dec
ja
dec
dec
movs
rcr
das
js
(bad)
pop
push
inc
(bad)
out
scas
ror
mov
add
mov
cmp
mov
int
ret
add
mov
(bad)
call
dec
mov
lea
mov
arpl
jno
xor
xchg
inc
(bad)
(bad)
(bad)
call
sbb
inc
and
inc
cmp
inc
lock
mov
out
push
cld
and
adc
aas
rcl
xchg
adc
(bad)
dec
mov
pop
xor
scas
popf
push
(bad)
sbb
scas
adc
pop
scas
pop
adc
fnstcw
mov
ffree
pop
jge
pop
ds
(bad)
(bad)
push
pop
jo
out
push
push
dec
push
imul
push
inc
jo
push
in
cmps
ss
(bad)
(bad)
(bad)
(bad)
inc
sar
cmp
loop
mov
add
mov
outs
jecxz
or
(bad)
mov
jmp
mov
push
cmps
xchg
cwde
cld
out
jno
inc
inc
inc
push
sub
test
fwait
(bad)
(bad)
(bad)
(bad)
jmp
inc
popf
ins
push
addr16
addr16
mov
sub
inc
add
push
push
(bad)
inc
sbb
dec
jnp
std
jp
or
jmp
imul
push
jecxz
or
lock
jmp
xchg
cmps
mov
int
xor
or
scas
pop
inc
clc
scas
cli
push
fisubr
lock
(bad)
fucomip
rcr
cmc
sbb
sbb
cmp
mov
scas
cmp
xchg
popa
out
clc
(bad)
mov
call
xchg
jmp
inc
into
(bad)
(bad)
(bad)
inc
iret
mov
inc
xor
adc
shl
xchg
aas
jnp
xchg
or
out
cli
(bad)
call
loopne
sbb
inc
int3
mov
rol
sar
jae
push
scas
xchg
(bad)
(bad)
(bad)
jmp
lods
stos
cmp
popa
int
rol
push
(bad)
and
sbb
sub
call
and
push
push
xor
fwait
cs
pop
or
mov
dec
aad
test
arpl
mov
(bad)
push
push
sub
xor
sbb
push
cld
(bad)
(bad)
(bad)
fst
dec
pop
int
add
xor
(bad)
mov
ficom
fldcw
mov
jo
jecxz
mov
lahf
cmp
dec
xor
pop
or
adc
and
and
repz
jo
movs
mov
(bad)
call
jmp
bt
adc
clc
(bad)
jg
shl
adc
mov
imul
lods
ss
(bad)
mov
(bad)
push
xor
jmp
pop
or
mov
(bad)
push
xor
out
stos
and
dec
xor
jge
pop
mov
call
(bad)
call
cwde
xchg
and
xor
xor
xchg
mov
xchg
adc
call
pop
hlt
call
xor
imul
sbb
fist
scas
(bad)
and
cmp
push
outs
cmp
push
dec
add
outs
(bad)
(bad)
(bad)
(bad)
jg
int3
push
or
cld
movs
jne
ja
xor
sub
dec
pusha
mov
loop
call
leave
pop
push
mov
and
mov
add
(bad)
call
out
mov
fs
mov
dec
mov
jne
nop
xchg
std
inc
inc
mov
retf
(bad)
(bad)
(bad)
call
adc
xchg
xchg
aam
cmp
sbb
in
popa
loope
jne
out
test
(bad)
(bad)
(bad)
in
or
fst
xor
call
int
pop
aam
test
(bad)
(bad)
jmp
or
push
pop
xchg
(bad)
adc
rol
mov
adc
inc
mov
lahf
jmp
test
cs
fstp
fld
aad
lahf
xor
loope
iret
fadd
sub
dec
xor
fwait
push
mov
push
popa
sub
jb
pop
test
(bad)
call
into
out
jp
loop
daa
sbb
cld
call
cmps
pop
or
(bad)
movs
movs
test
xchg
push
(bad)
cmp
push
mov
push
add
pushw
ds
lock
adc
cmp
sbb
sar
inc
mov
aas
fwait
lea
cmp
fbld
dec
inc
push
add
push
push
div
adc
(bad)
(bad)
(bad)
(bad)
cmp
cmp
aad
iret
in
mov
jl
loopne
test
popa
and
andnps
cld
(bad)
call
inc
aaa
xlat
push
ja
loopne
add
jp
dec
dec
jp
int
pop
jmp
xor
add
or
xchg
dec
popa
shl
mov
retf
sub
(bad)
(bad)
dec
jb
pop
cmp
cmps
jle
cmps
daa
pop
les
adc
push
dec
cmc
dec
mov
pop
sar
(bad)
(bad)
inc
mov
fwait
sub
dec
pop
pop
pop
cmp
and
sub
pop
mov
ss
(bad)
(bad)
jmp
or
pushf
sbb
pop
xor
sbb
or
jae
ds
test
cwde
or
test
mov
rcl
sti
in
sub
(bad)
mov
add
jae
dec
sub
add
adc
test
inc
inc
shl
(bad)
(bad)
dec
popa
and
jl
(bad)
sub
scas
fimul
cmovp
push
mov
(bad)
jmp
loopne
jmp
out
scas
push
je
lods
(bad)
xchg
test
xor
cmp
neg
aad
ret
jo
mov
sbb
pushf
pop
test
retf
inc
les
dec
jmp
inc
mov
cmps
mov
and
enter
adc
xor
and
(bad)
(bad)
out
fisttp
loope
jae
or
icebp
or
and
(bad)
(bad)
jg
mov
fdivr
mov
stos
adc
dec
push
inc
ja
xor
ror
sbb
dec
xor
adc
push
sub
ss
dec
stos
shrd
pop
mov
test
jmp
fcmovnbe
movs
dec
xchg
outs
lods
pop
dec
fdivr
int3
pop
cmp
mov
adc
(bad)
(bad)
inc
dec
mov
idiv
outs
(bad)
pop
and
xor
jnp
adc
jae
mov
(bad)
(bad)
mov
sbb
inc
add
shl
les
outs
mov
xor
xor
(bad)
(bad)
(bad)
clc
rcr
and
int3
mov
movs
and
jne
cli
in
ret
push
jmp
(bad)
fs
cmp
aad
adc
dec
shl
loopne
cmp
sti
aaa
mov
xchg
inc
sbb
(bad)
(bad)
inc
fisttp
adc
or
out
sti
mov
test
aam
cmps
movs
push
in
add
(bad)
sar
(bad)
(bad)
call
popf
mov
rcl
pop
or
mov
dec
mov
(bad)
(bad)
(bad)
(bad)
fbstp
idiv
in
ins
sti
jmp
or
pop
fst
inc
(bad)
push
test
dec
mov
jmp
stos
xchg
jnp
in
mov
int3
pop
mov
fcom
pop
xor
addr16
mov
(bad)
jmp
jg
pop
out
cmp
sbb
xor
jge
fistp
mov
(bad)
(bad)
call
mov
push
xchg
dec
movntps
outs
mov
pop
sbb
(bad)
cmps
pop
cmp
adc
(bad)
call
and
mov
jle
dec
aaa
lea
in
test
mov
push
push
push
cmp
xchg
retf
pop
xchg
ficomp
(bad)
(bad)
cli
stos
dec
mov
cmps
sbb
xchg
scas
lea
mov
mov
cmp
mov
push
mov
je
jmp
imul
mul
out
(bad)
(bad)
(bad)
inc
lea
fnstenv
imul
inc
or
lds
cmp
lahf
ds
(bad)
(bad)
call
sub
cmp
mov
pop
sti
xor
fcom
bound
es
mov
lea
inc
sbb
sub
push
xchg
add
and
inc
xor
(bad)
(bad)
jnp
ja
sub
sbb
adc
test
mov
stos
add
stos
mov
cmc
jg
movs
xchg
jge
jl
dec
adc
rol
mov
jmp
jo
imul
fild
outs
test
(bad)
(bad)
push
dec
mov
das
movs
push
ja
inc
push
mov
cmps
and
push
and
jmp
xor
imul
outs
xchg
push
push
xor
push
jg
je
ret
iret
and
xor
sar
(bad)
(bad)
inc
retf
sbb
adc
aam
(bad)
sahf
mov
lods
mov
ror
xchg
xchg
cmc
mov
(bad)
dec
(bad)
js
mov
dec
fldcw
jmp
mov
dec
push
outs
or
push
pop
call
in
shr
test
pop
mov
mov
pusha
inc
call
cld
sbb
and
rcr
sub
adc
xabort
(bad)
inc
adc
xchg
add
jl
loopne
sbb
mov
test
and
scas
fdivrp
(bad)
jmp
pop
mov
into
call
jno
cmp
shl
sub
or
push
adc
or
(bad)
call
or
jg
lea
push
push
fbstp
inc
pop
(bad)
(bad)
(bad)
jmp
inc
cmp
xor
mov
neg
sti
mov
jl
scas
push
call
(bad)
(bad)
(bad)
jmp
into
aaa
xor
jns
aas
fs
xor
inc
pop
mov
and
xchg
test
call
loope
retf
sub
in
cmc
imul
(bad)
call
xor
(bad)
or
(bad)
out
add
xchg
push
xor
fldenv
add
pop
retf
rol
(bad)
dec
rol
mov
fsubr
xor
ins
pop
popa
dec
inc
xchg
and
mov
sbb
aaa
loop
call
cmps
xchg
or
cmp
xor
sahf
lds
xchg
(bad)
call
push
in
add
les
cmc
pop
mov
(bad)
(bad)
jmp
out
push
mov
push
pop
xor
xchg
xor
or
mov
(bad)
(bad)
dec
repz
test
or
xor
push
push
adc
in
xor
cmc
(bad)
jg
call
fwait
adc
add
jnp
ret
cli
add
(bad)
push
js
cs
scas
(bad)
(bad)
(bad)
inc
scas
pop
inc
pop
pop
mov
mov
jmp
fcom
cs
mov
xor
push
lods
(bad)
(bad)
(bad)
call
and
call
in
(bad)
das
xor
sahf
je
fild
das
sar
push
(bad)
xor
xor
enter
dec
clc
push
js
cmp
or
add
aam
in
ins
adc
jmp
mov
dec
(bad)
(bad)
inc
xor
lock
pop
mov
jle
arpl
xor
jmp
lods
stos
lock
or
(bad)
sub
xor
and
xor
sbb
inc
es
push
xor
(bad)
outs
bswap
mov
inc
pop
push
in
aad
jne
xor
jp
mov
lahf
ja
sub
mov
stc
mov
aaa
jmp
sub
stos
mov
cmp
retf
(bad)
(bad)
dec
pop
inc
cli
mov
pusha
(bad)
aad
aam
jo
or
adc
call
jnp
sar
(bad)
(bad)
inc
push
sbb
fwait
int3
pop
rep
sub
out
adc
sbb
xchg
repnz
push
(bad)
(bad)
push
pop
mov
jnp
cwde
int
(bad)
xchg
xchg
adc
repz
test
lahf
xchg
or
(bad)
xor
push
mov
test
(bad)
(bad)
(bad)
jmp
or
imul
jns
inc
mov
sti
push
popf
fidivr
(bad)
(bad)
(bad)
out
outs
retf
push
jmp
sbb
add
cld
xlat
dec
arpl
fbld
pushf
outs
cld
and
call
mov
pop
lds
scas
dec
push
push
in
test
sbb
(bad)
sbb
(bad)
iret
aas
test
mov
jecxz
jmp
(bad)
in
fwait
(bad)
(bad)
(bad)
(bad)
mov
fwait
aad
mov
sbb
add
rep
arpl
aaa
ins
xor
pop
xor
push
push
(bad)
cld
das
cli
pop
push
cs
or
or
sbb
push
or
call
rcl
stc
inc
pop
jecxz
fsubp
mov
scas
fld
pop
jae
xor
pop
jg
mov
mov
xor
or
into
mov
push
xchg
push
ins
nop
adc
(bad)
xor
aas
jnp
std
(bad)
std
jmp
push
(bad)
(bad)
(bad)
jg
mov
pusha
push
retf
mov
mov
cwde
loopne
scas
mov
(bad)
fcmovne
push
mov
add
test
cli
dec
mov
je
(bad)
push
mov
fidiv
sub
pop
mov
(bad)
(bad)
(bad)
inc
fidiv
rol
neg
and
ror
xchg
sbb
jecxz
inc
xor
retf
imul
jmp
int
les
lea
or
cmp
dec
xchg
mov
mov
cmp
scas
aam
add
inc
dec
(bad)
(bad)
(bad)
(bad)
in
test
mov
mov
jge
sub
xor
add
ins
stos
(bad)
(bad)
jmp
fst
sub
cwde
mov
out
jmp
(bad)
(bad)
(bad)
(bad)
ds
stc
inc
arpl
or
outs
mov
push
lods
imul
sub
jg
icebp
jmp
stos
js
pop
add
mov
(bad)
loop
(bad)
(bad)
call
mov
push
outs
das
loope
adc
test
outs
push
ret
fld
push
pop
aaa
cld
(bad)
call
test
enter
cmps
adc
mov
lods
xchg
push
ret
(bad)
inc
ins
adc
adc
ds
fmul
cmp
clc
jns
sub
mov
ins
jg
retf
mov
xchg
loope
(bad)
add
call
(bad)
(bad)
mov
je
jmp
lods
cmps
div
(bad)
sahf
jae
test
mov
test
fsub
fdivr
into
sub
arpl
jle
push
std
dec
fimul
dec
cmp
xchg
sbb
mov
or
div
dec
adc
rol
jmp
(bad)
std
repnz
fcmovu
cmp
lds
sub
or
inc
sar
sbb
sar
(bad)
(bad)
dec
in
sub
mov
jecxz
cmp
dec
aam
xor
imul
add
in
out
pop
xchg
mov
addr16
nop
cmc
jecxz
pop
xchg
inc
jno
clc
iret
or
pop
fdiv
(bad)
mov
(bad)
mov
pop
scas
ficom
fwait
pop
stos
mov
adc
repz
jg
pop
adc
add
retf
xchg
jmp
fbld
inc
in
arpl
inc
pusha
inc
push
hlt
movs
sar
sub
outs
xchg
imul
test
push
or
push
movs
inc
mov
(bad)
(bad)
call
dec
sar
jge
test
sub
in
adc
or
mov
(bad)
jmp
inc
in
movs
xchg
mov
out
and
mov
push
jbe
idiv
or
call
inc
imul
ret
fcmovnb
push
ror
xchg
jae
inc
mov
(bad)
mov
mov
xchg
push
mov
es
add
cmp
push
(bad)
lock
scas
clc
mov
js
adc
rol
pop
fwait
inc
leave
cdq
push
popf
push
mov
push
icebp
mov
or
loope
jp
mov
push
add
xchg
mov
lods
and
(bad)
(bad)
call
xchg
push
and
jne
ror
push
es
loopne
cmp
dec
and
mov
mov
(bad)
inc
rol
push
add
cmp
sbb
call
aaa
pop
xchg
imul
(bad)
(bad)
jmp
dec
arpl
sbb
add
pop
mov
cmps
(bad)
lods
pop
enter
jmp
cmps
mov
xchg
psrlw
(bad)
(bad)
(bad)
call
and
push
jge
sbb
fsubr
or
repz
(bad)
(bad)
(bad)
push
lea
scas
stc
loope
push
dec
ins
sbb
dec
imul
inc
pop
cli
in
shr
std
pop
std
out
(bad)
and
jo
xor
mov
mov
call
dec
xlat
push
pop
push
imul
jmp
xchg
dec
push
ffreep
pop
cmp
sub
into
adc
cmc
ja
imul
repz
or
xchg
jmp
inc
add
or
movs
in
fwait
sub
mov
mov
mov
pop
add
mov
enter
mov
(bad)
scas
cli
(bad)
dec
lods
pusha
sub
mov
lock
jp
jge
fwait
pusha
lds
adc
(bad)
(bad)
jmp
add
outs
or
mov
out
repnz
inc
jb
add
adc
add
ss
dec
ud0
(bad)
call
(bad)
mov
in
xor
mov
icebp
jne
into
xor
cs
mov
jmp
dec
mov
repz
push
mov
push
jl
sbb
aas
pop
sbb
ins
sub
daa
cmp
and
push
jbe
add
bound
add
jg
pop
add
leave
fsubr
repz
call
pop
jae
pop
dec
bound
and
repnz
not
ret
loop
sti
cmp
(bad)
call
aad
pop
rol
ret
cmp
push
xchg
push
cmps
int3
xor
mov
xchg
(bad)
test
add
mov
fst
aam
inc
and
hlt
not
ret
push
fistp
mov
pop
pusha
cmp
(bad)
mov
add
add
stos
dec
gs
pusha
cmp
jmp
ror
sub
sub
retf
lahf
add
mov
or
dec
push
dec
dec
push
imul
and
or
(bad)
jmp
je
ss
bound
mov
jnp
push
sub
xor
(bad)
xor
(bad)
(bad)
jmp
jmp
xchg
dec
jle
bound
nop
fsubr
shl
xor
xor
pop
lock
inc
mov
jae
sbb
mov
(bad)
div
adc
gs
jmp
xchg
sbb
sub
std
xchg
cmps
add
push
pop
fs
rcr
and
aam
(bad)
add
(bad)
adc
sar
dec
cmp
call
cmp
lds
dec
int3
xor
cmp
neg
(bad)
iret
lahf
sbb
sbb
dec
cmp
inc
mov
jl
adc
int3
movs
ror
outs
scas
lods
ins
push
mov
out
out
jmp
(bad)
mov
scas
(bad)
push
adc
adc
adc
mov
inc
scas
mov
jp
in
inc
jle
rcr
fdivr
mov
jg
movs
xor
pushf
push
adc
mov
jnp
inc
xchg
out
(bad)
(bad)
cmp
cmp
mov
scas
mov
add
retf
(bad)
jmp
call
jmp
fdiv
mov
fxch
test
popa
(bad)
(bad)
(bad)
inc
pop
inc
movs
fs
add
add
shr
scas
push
push
shl
sub
jg
(bad)
pop
pand
(bad)
jmp
mov
ret
cmp
sbb
adc
jne
adc
fld
push
(bad)
(bad)
(bad)
jg
add
fimul
and
ja
dec
dec
lahf
or
adc
or
lahf
int
jns
jb
xchg
aaa
std
(bad)
inc
stos
inc
inc
push
les
icebp
jge
inc
xor
xlat
mov
dec
xchg
icebp
mov
dec
sub
cwde
cmp
jg
arpl
xor
fidivr
sahf
xchg
(bad)
adc
ja
add
mov
mov
xor
xchg
pop
adc
mov
clc
jmp
(bad)
(bad)
(bad)
jle
adc
and
shl
call
cmp
aas
jns
push
(bad)
(bad)
(bad)
(bad)
fisubr
fisubr
les
mov
and
call
pop
mov
nop
mov
add
scas
js
jns
mov
add
push
jo
out
add
(bad)
(bad)
(bad)
jp
imul
dec
pop
push
adc
inc
and
aam
stc
push
imul
retf
mov
in
data16
jnp
xchg
mov
fmulp
(bad)
into
aas
sub
stos
stos
adc
cmc
pop
(bad)
mov
inc
mov
repnz
jecxz
inc
int3
sahf
cmps
mov
cs
and
push
xor
aas
or
cmps
test
inc
push
lock
mov
stos
das
clc
enter
mov
mov
fadd
inc
out
push
xor
(bad)
(bad)
inc
aas
fs
mov
sbb
fstp
mov
inc
push
into
or
pop
hlt
jmp
sbb
sar
cmp
call
data16
in
(bad)
(bad)
(bad)
jmp
inc
pop
sbb
in
retf
xchg
rcl
mov
mov
(bad)
fidivr
mov
(bad)
(bad)
(bad)
dec
(bad)
adc
repnz
cmp
mov
repz
mov
jle
jbe
call
jmp
jmp
push
and
push
jno
clc
add
lods
sub
(bad)
(bad)
(bad)
jns
or
jb
or
test
jo
pop
sub
jb
and
sbb
cmp
xchg
(bad)
(bad)
jmp
xor
inc
cmp
sbb
adc
mov
adc
scas
mov
nop
(bad)
call
push
sub
loopne
repz
ds
cs
leave
mov
(bad)
lock
(bad)
push
xchg
sahf
shl
mov
test
daa
pop
and
sbb
or
sar
(bad)
fcomip
jp
nop
mov
add
cmp
sub
retf
mov
pop
jmp
(bad)
jg
sub
je
xchg
push
mov
pop
sub
dec
lds
mov
dec
pop
scas
ret
ret
mov
jbe
rcl
push
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
in
and
mov
mov
(bad)
(bad)
shl
dec
push
(bad)
jg
(bad)
cmp
aad
sbb
pop
adc
enter
mov
(bad)
(bad)
(bad)
push
in
sub
sub
movs
xchg
and
mov
lock
push
(bad)
fcomip
(bad)
jmp
dec
and
add
(bad)
lods
fwait
pop
mov
outs
sti
pop
jge
push
call
and
clc
(bad)
call
dec
mov
cmc
adc
pop
sbb
in
jle
mov
xor
sbb
adc
arpl
ror
or
lock
sbb
push
add
push
out
movs
xor
(bad)
(bad)
call
adc
in
(bad)
retf
xlat
and
add
push
aas
pop
mov
and
test
out
sar
jg
das
fisubr
or
mov
jl
inc
test
cmp
call
(bad)
(bad)
jmp
add
jl
rep
cmp
jbe
jnp
mul
push
imul
pushf
or
(bad)
das
data16
dec
repz
icebp
xchg
in
pop
scas
out
dec
fisubr
les
sub
(bad)
fnstsw
rcr
(bad)
or
(bad)
(bad)
(bad)
out
mov
imul
push
sub
rol
adc
fdiv
jae
in
(bad)
mov
loopne
add
leave
das
cdq
ret
mov
add
or
push
mov
pop
xchg
push
(bad)
jae
cmp
jg
adc
or
(bad)
mov
das
pop
sbb
inc
jmp
dec
dec
dec
(bad)
adc
inc
stos
jbe
ja
sti
ins
inc
stos
gs
xchg
in
mov
xchg
scas
ror
ss
imul
(bad)
call
test
gs
pop
arpl
cmp
sbb
cld
imul
push
cmp
(bad)
(bad)
(bad)
push
bound
inc
sbb
lods
mov
icebp
test
cmp
scas
mov
mov
out
mov
mov
retf
mov
inc
into
mov
jae
cli
(bad)
jmp
xor
xlat
or
fdivr
outs
mov
(bad)
(bad)
out
xor
mov
aaa
mul
out
ja
js
std
rol
jb
(bad)
(bad)
(bad)
push
(bad)
js
lods
pushf
loope
sbb
cmp
icebp
data16
push
add
ret
fild
dec
in
call
dec
jo
in
popa
xor
and
(bad)
outs
jo
push
sbb
pop
(bad)
(bad)
call
mov
dec
test
add
push
pop
(bad)
test
push
sbb
daa
out
cld
xchg
out
mov
dec
jecxz
mov
sub
ffreep
lock
(bad)
imul
(bad)
jg
mov
mov
adc
icebp
mov
outs
stos
fwait
jae
push
fdivr
(bad)
(bad)
(bad)
fdiv
pop
pop
popf
sub
jp
xchg
stos
mov
popa
push
push
cwde
pop
(bad)
test
out
(bad)
(bad)
(bad)
dec
dec
jns
dec
xor
call
repnz
sbb
push
xchg
xor
(bad)
cmp
jl
daa
popf
inc
and
sub
imul
addr16
sbb
push
aam
test
pop
leave
in
mov
bound
call
dec
pop
clc
nop
xor
ins
std
aas
pop
cmc
mov
idiv
lods
inc
and
or
pop
jne
mov
fnstenv
push
push
push
movs
mov
or
push
arpl
adc
xlat
mov
dec
cmp
jg
mov
inc
loopne
setl
push
xchg
pop
mov
dec
into
push
ins
(bad)
jg
inc
loop
push
pusha
pop
dec
loope
or
shl
mov
fwait
mov
inc
call
(bad)
mov
mov
fs
pop
bswap
cmp
jmp
ret
sbb
bound
mov
fld
xchg
inc
das
cmp
(bad)
(bad)
dec
hlt
out
lods
pop
jg
mov
adc
imul
xor
jne
xchg
cli
dec
in
mov
push
mov
mov
and
(bad)
or
xchg
push
xor
mov
out
xchg
test
in
push
loopne
(bad)
in
rcl
aad
inc
mov
dec
jmp
xor
push
mov
dec
test
aam
jne
sbb
(bad)
mov
mov
ins
jecxz
pushf
push
dec
add
mov
sub
ja
mov
pop
out
bound
add
jecxz
inc
sbb
jae
pop
scas
in
adc
mov
out
sbb
cmps
adc
je
out
push
and
scas
into
sbb
jmp
(bad)
(bad)
push
xor
stos
jae
cmp
mov
jge
and
cld
fist
mov
mov
loopne
ins
cmps
(bad)
mov
pop
ficom
adc
frstor
dec
loope
(bad)
cmp
and
lods
cmp
sbb
adc
mov
dec
out
fistp
mov
icebp
sbb
bound
(bad)
(bad)
fistp
fcomi
mov
cmp
adc
cwde
mov
xchg
and
std
push
mov
(bad)
(bad)
(bad)
jmp
push
shr
xchg
sub
imul
test
lods
jno
mov
sar
(bad)
(bad)
inc
sub
push
mov
adc
aad
sub
mov
jmp
mov
push
or
sti
mov
push
mov
loop
aad
imul
push
jno
rcr
nop
xchg
test
sbb
std
jg
push
push
stc
inc
fsubr
mov
rol
xor
dec
xlat
icebp
xchg
cmp
or
retf
(bad)
test
jns
mov
inc
lea
inc
inc
jge
fisttp
cld
loopne
(bad)
cld
outs
(bad)
(bad)
cmp
les
test
loope
xor
fs
jp
scas
cli
jg
test
jbe
push
xchg
in
lock
scas
mov
(bad)
(bad)
call
data16
push
mov
ret
pop
fist
sub
lods
(bad)
(bad)
(bad)
out
pushf
mov
cmp
inc
fld
gs
push
xchg
out
jmp
mov
pop
ja
sbb
ja
fst
(bad)
(bad)
mov
mov
cmps
ds
jmp
dec
iret
push
cmp
mov
sti
mov
fcomip
call
jae
mov
test
call
push
xchg
and
clc
(bad)
(bad)
jmp
inc
add
and
lods
hlt
rcr
scas
shl
pusha
and
sar
data16
std
(bad)
out
(bad)
outs
ins
sub
pop
shl
mov
mov
neg
inc
sub
push
mov
call
stos
pop
test
test
jmp
adc
repz
lea
(bad)
(bad)
call
jae
cmc
adc
aas
fcmovbe
iret
sbb
push
and
iret
lea
ja
psrlq
lock
(bad)
jg
ret
out
mov
pusha
push
fwait
or
nop
and
movs
jge
push
dec
push
sar
call
out
test
add
and
jne
pop
xchg
aas
sbb
ss
(bad)
(bad)
(bad)
jg
add
mov
pusha
xchg
nop
nop
inc
and
adc
punpckhdq
adc
(bad)
(bad)
(bad)
call
mov
aas
push
retf
sub
adc
pop
cmp
ror
fbld
mov
les
inc
loop
jnp
xchg
push
pushf
and
inc
not
jmp
mov
lock
stos
push
cmp
mov
cli
xlat
aas
outs
and
in
fcomip
(bad)
jmp
sub
cld
aad
arpl
pop
rcl
mov
mov
(bad)
call
test
out
dec
ss
mov
mov
lods
adc
movs
repz
ja
cmp
aam
xor
(bad)
out
test
ror
xor
pop
in
or
mov
(bad)
jmp
adc
push
(bad)
mov
nop
ret
jecxz
inc
cmp
(bad)
pusha
int
cmps
(bad)
jmp
int
xchg
xchg
mov
call
cdq
mov
repz
shl
(bad)
(bad)
(bad)
mov
ret
and
mov
adc
push
sbb
test
sub
xor
(bad)
jmp
xchg
cld
in
int3
or
test
pop
or
push
(bad)
fsubr
lods
jbe
imul
clc
(bad)
dec
jmp
add
inc
ret
stos
imul
(bad)
and
mov
cmp
mov
sbb
mov
(bad)
or
sar
loop
lahf
ds
sbb
adc
cmps
cld
out
sti
ret
(bad)
mov
cmp
jmp
or
sbb
cmp
(bad)
(bad)
mov
fdivr
jb
in
dec
cmp
lods
inc
xchg
mov
inc
sbb
and
(bad)
mov
inc
aam
fwait
mov
push
outs
pusha
cmps
ret
pop
push
jmp
stos
jmp
lock
sbb
mov
dec
in
rcl
call
sti
sub
jl
dec
add
mov
inc
and
jae
pop
icebp
add
sahf
sti
scas
xchg
mov
sbb
popf
(bad)
mov
cmc
jmp
fild
mov
(bad)
jg
out
push
xor
and
out
push
(bad)
(bad)
(bad)
(bad)
cmp
and
mov
(bad)
out
(bad)
shl
jle
sbb
arpl
inc
mov
(bad)
(bad)
push
or
sub
shl
inc
addr16
pop
inc
std
jecxz
mov
(bad)
jmp
inc
sub
sub
cmc
stos
movs
lea
stos
lahf
jge
mov
mov
outs
ins
adc
call
fst
ins
inc
mov
cmp
mov
xlat
xchg
sub
scas
inc
cmp
sub
adc
pop
bound
dec
dec
test
out
cli
mov
sahf
loopne
shl
add
push
inc
cld
(bad)
jg
test
cmps
and
int3
movs
or
xor
mov
clc
retf
and
(bad)
test
imul
(bad)
(bad)
mov
add
test
je
or
test
jl
jmp
(bad)
dec
shl
out
inc
add
test
mov
sbb
mov
pop
pop
mov
inc
push
pop
mov
lods
ins
iret
mov
mov
mov
adc
and
(bad)
(bad)
(bad)
dec
cmc
jle
in
(bad)
daa
fst
or
aas
xor
lock
add
aas
mov
hlt
mov
(bad)
(bad)
(bad)
jmp
jge
and
mov
adc
into
imul
jmp
push
mov
xchg
jmp
lds
stos
mov
ins
xchg
(bad)
sbb
mov
enter
add
add
pop
inc
loopne
fst
mov
cmps
(bad)
sub
mov
mov
outs
adc
(bad)
(bad)
mov
mov
inc
idiv
mov
das
jmp
push
stos
inc
pop
sti
sti
stos
pmaxub
adc
(bad)
(bad)
jmp
test
dec
mov
stc
cli
sbb
mov
jne
xchg
cld
cmp
outs
in
and
(bad)
call
mov
push
dec
mov
cs
popa
fisub
rcl
mov
pop
push
xor
fst
push
mov
inc
sub
lea
mov
or
sahf
int
and
(bad)
(bad)
call
and
pop
stos
push
popf
sbb
add
popa
dec
adc
jnp
mov
or
(bad)
jmp
setne
pop
jmp
sub
adc
cmp
mov
jb
and
daa
cdq
sbb
jge
push
sub
ret
xor
gs
mul
jns
mov
dec
add
push
lock
mov
cmps
stos
add
in
(bad)
jg
jmp
inc
cmp
shr
jmp
push
add
fnstsw
out
mov
inc
sub
xor
adc
lods
mov
inc
cs
mov
xor
sbb
or
xor
fisttp
sub
or
pop
mov
pop
sub
fs
(bad)
(bad)
(bad)
inc
xor
sahf
mov
ror
iret
sbb
mov
pop
mov
and
sbb
retf
call
jg
call
push
imul
ja
js
fcmovnbe
dec
data16
dec
shl
test
(bad)
lods
xchg
(bad)
(bad)
jg
inc
das
adc
push
or
in
push
pushf
repnz
mov
mov
jmp
movs
or
sub
and
inc
or
adc
scas
int3
adc
xor
pop
sub
inc
push
mov
(bad)
sti
inc
and
sub
and
mov
out
and
add
aad
cmp
mov
pop
xor
mov
scas
jecxz
dec
mov
pop
push
adc
mov
pop
add
dec
pop
ror
pusha
inc
or
pop
ins
cld
aas
jne
mov
push
fisttp
xor
call
cld
call
movs
or
ds
repz
push
jmp
test
data16
(bad)
(bad)
(bad)
cmp
ret
sbb
jbe
movs
fwait
sub
xchg
call
leave
mov
sub
or
inc
push
or
pop
les
push
mov
clc
ins
dec
adc
test
pop
aam
(bad)
call
rcl
push
mov
les
push
jmp
mov
int
fcomp
mov
cmps
adc
adc
pop
(bad)
mov
inc
jmp
outs
dec
jle
jae
jecxz
test
add
sub
(bad)
cmp
fistp
pop
test
cs
adc
xchg
lods
xchg
push
sbb
cld
push
add
fwait
das
xor
xchg
cmp
(bad)
jmp
dec
pop
bound
sbb
mov
imul
lods
scas
cli
(bad)
jmp
and
dec
stos
out
ds
or
stos
aaa
and
mov
(bad)
call
(bad)
xchg
pop
dec
cdq
mov
loop
mov
pop
jl
or
lds
sub
aaa
push
stos
loop
(bad)
mov
mov
inc
imul
jne
dec
lock
aas
sbb
mov
pcmpgtw
fld
push
(bad)
fcos
jmp
imul
pop
push
inc
jne
je
outs
or
jne
arpl
(bad)
(bad)
dec
je
jno
push
outs
jo
jbe
push
imul
imul
jmp
inc
popa
jo
imul
add
add
add
add
add
add
push
fdivr
dec
push
popa
bound
fs
mov
imul
(bad)
push
popa
jbe
repz
add
add
and
add
add
add
cmc
add
mov
icebp
jmp
test
sub
add
lock
add
imul
xchg
mov
or
push
jb
addr16
jae
inc
popa
jb
pop
pusha
xchg
ja
ins
outs
popa
fs
call
cli
adc
adc
lgdtd
pop
lds
add
xlat
int3
into
in
jmp
mov
fmul
enter
mov
or
dec
push
pop
push
bound
jb
std
ss
or
popa
addr16
add
fs
data16
popa
sbb
daa
dec
and
mov
mov
add
data16
imul
sbb
push
xchg
or
mov
push
adc
xchg
imul
data16
ins
add
repz
in
cmp
dec
and
add
push
pop
dec
loopne
outs
jp
outs
popa
bound
or
push
or
pop
scas
or
add
inc
xor
nop
popa
in
call
jb
push
gs
jo
adc
cmp
xlat
dec
arpl
jae
mov
std
or
imul
jne
push
je
ror
in
pop
adc
or
push
imul
je
cmp
add
pop
push
pop
add
inc
xchg
ins
inc
je
fadd
push
les
cmp
mov
mov
inc
push
cmove
in
das
cli
inc
inc
push
dec
push
pop
dec
inc
push
push
inc
push
or
xchg
jge
data16
outs
fs
push
gs
or
outs
sub
mov
dec
popa
out
push
jle
push
sub
push
dec
ins
fs
fsub
sbb
add
xchg
mov
mov
mov
popf
test
push
jo
push
arpl
fisub
push
sbb
dec
inc
pop
sti
push
add
dec
adc
ja
std
cmp
or
jae
add
xchg
add
sub
ror
loope
jo
ins
rol
cmp
add
adc
xor
dec
or
jae
pop
push
es
xor
jns
add
or
inc
and
addr16
inc
mov
or
dec
xor
jle
outs
imul
xchg
adc
inc
shl
rcr
add
add
or
add
push
or
sbb
adc
js
add
call
repz
rcl
or
imul
popf
shl
pop
retf
test
test
or
mov
sbb
add
add
sub
aas
rcl
mov
ds
add
scas
sub
adc
fist
ins
xor
pop
push
imul
fiadd
mov
adc
jb
repz
add
addr16
js
or
or
and
sbb
cmps
or
xor
bound
mov
popf
popf
pop
adc
call
mov
test
jmp
aaa
jae
test
sub
cwde
xor
push
and
or
lods
sub
adc
dec
scas
push
or
or
pop
push
adc
out
xor
add
les
xor
mov
cmp
adc
push
lock
bound
fisttp
in
or
dec
push
lods
rol
adc
shl
cmps
test
add
and
sub
not
mov
push
rol
mov
out
mov
jo
popa
mov
out
mov
jb
mov
mov
dec
mov
push
rcl
dec
aad
xor
or
ss
xor
xor
or
cdq
mov
imul
jae
in
call
aad
ror
mov
adc
add
inc
adc
inc
add
push
out
dec
inc
mov
out
sub
mov
or
ins
sbb
dec
lods
outs
adc
or
dec
lock
leave
add
iret
add
add
xchg
ret
or
jns
and
dec
outs
outs
int3
add
xor
push
or
push
adc
adc
sbb
mov
shl
adc
mov
mov
shr
xlat
scas
add
sub
fwait
daa
adc
jg
pushf
push
add
adc
movs
mov
xor
cld
mov
pop
sbb
pop
rcr
fs
popf
repz
mov
leave
idiv
and
cmp
push
add
xchg
retf
imul
ss
stos
je
push
mov
cmp
sub
call
jmp
sub
out
mov
neg
and
jae
jl
xlat
sbb
rcr
or
mov
xchg
jb
mov
ja
ror
in
jbe
xchg
cmp
add
push
mov
push
int
adc
aad
mov
xchg
mov
or
out
push
out
and
or
add
cs
mov
xor
and
pop
mov
ja
add
sbb
sub
or
movs
loopne
push
(bad)
cs
out
sub
jp
out
adc
jecxz
fiadd
iret
and
test
add
cmp
mov
cmp
mov
mov
xor
push
sbb
sti
retf
mov
pop
pop
jecxz
xchg
mov
retf
dec
adc
add
xchg
xchg
xor
mov
pop
mov
push
loop
xchg
and
test
test
ret
mov
out
mov
rol
das
hlt
sub
mov
push
and
or
mov
push
xchg
into
and
push
mov
pop
mov
or
sub
cmp
mov
(bad)
pop
sti
call
mov
add
mov
mov
push
ret
xor
mov
mov
fisttp
and
jge
or
adc
fnstenv
push
mov
dec
lea
lea
xor
pop
add
and
mov
mov
das
in
xor
sub
adc
pop
dec
and
mov
pop
out
loopne
xor
jns
pop
js
jno
and
mov
mov
mov
and
sbb
push
lds
add
mov
adc
loope
test
xor
fwait
dec
push
mov
pop
sub
mov
and
das
sub
push
mov
mov
fisttp
push
sti
jnp
mov
jns
xchg
inc
or
sbb
inc
cmp
or
stos
sahf
xchg
cmp
push
xor
mov
fadd
jge
sub
push
mov
std
jnp
ret
jno
mov
imul
pop
jnp
push
loopne
or
push
add
adc
loope
cs
add
push
das
out
xchg
rcl
das
xor
dec
popa
jns
imul
add
mov
sbb
sahf
adc
sub
mov
hlt
je
adc
pop
xor
lock
mov
add
in
push
push
mov
sub
mov
xor
dec
enter
aad
xchg
fild
jbe
test
xor
inc
test
aas
std
shl
push
adc
sbb
loopne
or
dec
mov
mov
test
mov
add
(bad)
mov
enter
dec
mov
mov
or
or
lahf
adc
cmc
icebp
xor
or
push
cs
or
sub
scas
jge
out
sbb
inc
(bad)
and
pop
out
stos
rol
add
jge
mov
(bad)
inc
lods
stos
cmp
adc
sub
mov
jbe
inc
push
xchg
jb
div
pop
and
je
sub
mov
push
cld
mov
xor
or
lods
mov
mov
scas
mov
cs
mov
test
sub
pop
inc
add
stos
or
cs
aad
aad
add
mov
sbb
lock
aaa
fld
jle
xor
xlat
mov
sub
add
add
add
push
mov
dec
xor
inc
pop
add
into
xor
pop
(bad)
fst
ret
fild
mov
xor
mov
mov
and
push
out
call
sub
movs
in
adc
add
dec
sbb
or
in
aad
in
mov
xchg
pop
rol
pusha
arpl
jle
sub
pop
sahf
xchg
mov
mov
outs
xlat
xchg
or
add
push
inc
(bad)
add
outs
data16
popa
jae
sub
add
sub
and
lods
mov
dec
js
xor
cli
push
and
call
cmp
xlat
lahf
pop
out
adc
outs
sub
mov
sbb
pusha
adc
sub
nop
inc
push
mov
jo
sub
in
xchg
mov
inc
dec
loope
pop
ss
mov
adc
sbb
repz
iret
jo
xor
inc
cs
cmp
cdq
clc
xor
ret
mov
sub
daa
int3
(bad)
loopne
push
sbb
cmp
dec
in
inc
push
push
push
pop
mov
mov
jo
or
ins
push
dec
inc
test
cmps
rcl
sub
mov
into
dec
or
loop
shl
test
sub
lea
dec
pop
add
bound
xor
inc
and
jno
mov
mov
jae
jno
or
xchg
stos
adc
pop
loopne
xchg
arpl
mov
adc
inc
cwde
scas
mov
dec
sti
cmp
jno
and
je
xor
or
adc
or
lea
pop
rcr
xchg
push
add
mov
in
jge
mov
and
inc
lods
rcr
and
push
xor
or
push
cmps
jbe
mov
jmp
jge
rcr
popa
shr
sbb
mov
ins
inc
arpl
icebp
movs
ficom
call
xchg
and
jmp
mov
jno
inc
sbb
push
jns
mov
pop
sbb
mov
adc
sub
cs
pop
adc
ja
mov
pop
push
ja
xchg
call
sub
xor
pop
dec
rcl
add
mov
in
mov
shr
mov
jno
rol
or
outs
xor
sbb
sbb
(bad)
push
adc
popf
cdq
sub
push
mov
inc
add
dec
movs
ror
or
mov
add
mov
aas
mov
sbb
add
sti
mov
push
push
jo
jnp
inc
cmp
adc
add
test
add
xor
adc
pop
daa
repz
hlt
pop
or
mov
stc
sub
mov
mov
adc
mov
jmp
jp
adc
retf
and
scas
imul
cmps
dec
pop
shl
rcr
cmp
rcr
gs
lods
nop
and
inc
hlt
sub
lods
cmp
in
xchg
scas
pushf
push
cmp
loop
adc
mov
sbb
push
sbb
std
lea
aas
xor
mov
lock
mov
mov
outs
adc
sub
mov
mov
shl
call
test
(bad)
shl
mov
daa
jne
adc
add
xchg
stc
mov
movs
(bad)
mov
add
call
leave
xchg
ret
popf
shl
add
inc
test
mov
mov
xchg
inc
sti
adc
jmp
xor
xchg
dec
adc
jle
movs
cmp
add
cmp
adc
cmp
jmp
cmp
ins
jg
push
mov
or
push
outs
rol
push
xchg
push
movs
fucom
push
call
and
adc
pop
add
and
or
sub
loopne
cmp
push
add
ror
cmp
sub
push
sub
js
mov
mov
lock
xor
push
mov
mov
pusha
sub
loopne
xchg
xor
jnp
xchg
push
adc
fcmovnb
test
test
in
lock
inc
sbb
sti
and
popa
loop
lds
mov
aas
mov
loopne
fstp
xor
loope
scas
mov
sub
shl
sbb
and
out
cmp
add
push
and
adc
dec
pop
lods
add
ins
sub
inc
retf
mov
add
dec
sbb
vpandn
add
rol
push
call
mov
pop
inc
aas
out
inc
or
daa
push
movs
xor
scas
out
fiadd
sub
mov
scas
ja
lds
mov
gs
jb
xor
mov
mov
movs
adc
cmp
mov
dec
mov
jne
(bad)
test
xchg
lods
std
adc
add
jg
mov
xchg
and
out
sbb
popa
loope
mov
movs
es
outs
adc
mov
sti
in
jle
sbb
pop
sub
mov
fild
or
push
addr16
fisttp
rol
popa
and
mov
js
test
dec
and
addr16
pop
dec
test
inc
test
sub
push
add
sti
and
xor
adc
pusha
or
push
pop
aam
xchg
mov
push
cmp
sbb
adc
sbb
xchg
jb
jnp
ret
mov
jo
dec
inc
inc
push
xchg
movs
and
mov
mov
test
cs
adc
inc
and
mov
and
sbb
add
pop
(bad)
test
pop
push
je
cmp
aaa
cmp
or
ja
es
rcr
add
dec
mov
bound
mov
add
mov
push
rol
mov
pop
mov
dec
sub
test
push
cdq
jp
xor
sub
sbb
out
sub
sub
pop
in
cmp
pop
adc
stos
fs
mov
lods
adc
push
mov
adc
add
add
mov
cmp
xchg
daa
mov
and
dec
sub
inc
or
mov
repnz
call
std
and
sub
mov
dec
xchg
or
loop
push
xchg
sbb
jecxz
pop
mov
inc
mov
sub
push
sbb
or
out
ror
sub
dec
mov
outs
shr
jmp
cmps
cmp
adc
sbb
cwde
pop
xor
mov
mov
call
sar
and
mov
sub
jp
loop
stos
jno
inc
or
fild
jne
push
and
cmp
xor
jecxz
mov
and
cmp
sub
add
dec
xchg
les
shl
sub
test
and
and
sub
and
pop
sti
std
mov
or
rcr
mov
and
sbb
(bad)
cli
cmps
pop
adc
dec
cmps
outs
xor
mov
adc
inc
gs
xchg
mov
(bad)
fnsave
adc
sbb
sahf
push
(bad)
shl
daa
mov
inc
xor
sbb
mov
adc
or
jmp
into
mov
mov
cmp
daa
icebp
push
xor
nop
inc
jne
mov
and
es
pop
enter
push
xor
cmp
adc
pop
nop
or
mov
test
test
retf
mov
inc
mov
ror
push
xchg
sbb
push
mov
xor
rol
lods
mov
jne
sar
xor
adc
les
jns
inc
and
cmp
mov
fild
pop
(bad)
rcr
push
mul
add
pop
inc
mov
sub
and
lds
jmp
mov
pop
adc
fdivr
mov
rol
sub
bound
and
pop
leave
xchg
and
xor
or
adc
mov
add
push
or
push
fist
push
sbb
adc
mov
gs
inc
mov
cmp
jno
loopne
lods
js
repz
mov
mov
das
mov
mov
sbb
inc
push
or
inc
pop
daa
mov
mov
xchg
in
add
fucom
movs
sbb
outs
xor
adc
xchg
xor
and
adc
mov
cdq
arpl
push
jns
(bad)
movs
add
jae
jge
pop
popa
sub
xor
test
inc
adc
mov
mul
and
pop
stos
test
ror
test
nop
loop
dec
or
sub
sub
push
or
add
add
lock
push
fld
test
arpl
add
(bad)
cmc
sar
sar
sbb
and
cdq
adc
fwait
push
ins
mov
dec
push
add
sub
adc
mov
add
imul
test
xor
cmp
or
aas
shl
jno
xchg
adc
test
inc
push
shl
out
sub
adc
add
xchg
ret
mov
outs
ins
(bad)
popf
std
mov
pushaw
add
mov
pop
sbb
pop
add
add
scas
test
aam
lahf
rol
adc
mov
xchg
cs
das
pop
mov
or
ret
inc
or
movs
ror
scas
mov
push
push
push
ret
push
mov
jecxz
mov
adc
mov
inc
inc
call
dec
test
or
xor
mov
ror
dec
das
mov
fs
mov
dec
int
mov
adc
mov
int
fdiv
add
das
sbb
test
call
and
add
lds
add
stos
pop
or
adc
icebp
es
xlat
xchg
adc
sbb
movs
mov
push
stos
inc
movs
pop
pop
retf
jne
arpl
popf
and
xchg
pop
or
adc
add
jno
jmp
out
stos
aam
sub
loope
sub
jmp
or
inc
mov
add
retf
jbe
loopne
mov
adc
shl
mov
add
test
imul
xchg
jmp
bound
leave
movs
adc
push
jno
pop
mov
sub
push
push
adc
mov
mov
stos
inc
or
dec
xor
iret
sbb
movs
rcr
jae
add
bound
pop
mov
sbb
mov
xchg
mov
xchg
mov
or
jnp
inc
sub
sbb
addr16
and
jae
jo
call
sbb
push
jb
arpl
sub
and
adc
pop
sbb
fwait
arpl
mov
mov
cmps
retf
mov
and
out
cdq
call
or
(bad)
mov
push
in
adc
cmp
je
add
adc
mov
mov
jecxz
shl
leave
mov
mov
out
sbb
ret
adc
sbb
call
sub
cld
push
sub
xor
jo
fs
movs
pop
mov
mov
xchg
xchg
jge
mov
push
mov
test
cmp
iret
push
sbb
shr
das
pushf
xor
cmp
es
inc
sub
ror
icebp
lock
mov
add
nop
loope
sbb
or
push
sbb
pop
aas
sub
mov
sub
(bad)
cmp
cmps
xor
ror
sub
stc
lock
es
mov
adc
(bad)
jl
pop
add
and
movs
fisttp
adc
sub
leave
rol
adc
add
or
in
sub
xchg
jo
dec
imul
ret
inc
repz
inc
fmul
add
daa
xchg
and
dec
and
sub
out
xchg
out
sbb
pop
jne
js
les
add
and
jo
inc
jnp
add
jmp
lods
aad
adc
cmp
inc
mov
shr
add
mov
xor
adc
or
rcl
inc
or
or
mov
push
inc
xor
pop
out
mov
add
fcmovnbe
repz
sub
and
imul
xor
mov
sbb
lea
push
adc
test
rcr
lock
movs
cmps
and
xchg
(bad)
test
dec
jno
add
sub
adc
les
cmps
stos
xor
sbb
and
mov
loope
sub
inc
xor
les
lds
adc
sbb
nop
sbb
sub
call
xor
and
iret
or
stos
pusha
push
dec
mov
cmp
sub
ret
dec
xchg
jne
add
pop
add
iret
add
daa
sbb
add
aaa
mov
pop
pop
das
add
mov
ret
xchg
xor
loope
inc
dec
sar
xchg
nop
call
add
add
lea
mov
dec
mov
imul
mov
jo
or
fs
push
dec
and
inc
sub
pop
jmp
xchg
movs
push
leave
jg
je
dec
or
xor
mov
adc
push
sub
daa
pop
push
cmp
sub
mov
jbe
xor
outs
lea
bound
aam
sar
fwait
sub
repz
adc
ds
mov
sub
sahf
lea
mov
fstp
test
ret
lahf
push
fs
mov
mov
adc
sub
mov
or
rcr
xor
adc
test
or
cmp
jmp
push
test
xchg
mov
cmp
push
sub
cmps
mov
or
xor
jge
mov
push
jmp
sar
and
push
inc
or
imul
mov
call
imul
inc
or
std
add
je
inc
cmp
sbb
jmp
add
xchg
inc
js
test
mov
stos
mov
push
adc
and
dec
add
bound
popa
rol
mov
xor
sbb
movs
cmp
loopne
enter
gs
cmp
and
sbb
sub
rol
mov
dec
lea
fst
push
loopne
sbb
sbb
add
das
mov
cmp
sar
push
and
adc
fild
push
shl
cmps
jecxz
rol
sub
jae
ror
cmc
ins
sub
aaa
rol
and
push
jmp
stos
push
sbb
cmp
xor
aad
shl
or
test
mov
mov
and
cmp
repz
retf
inc
dec
cmp
mov
(bad)
and
add
push
out
pop
sbb
and
cwde
mov
nop
pusha
lods
iret
xor
pop
sbb
add
xchg
sub
out
and
jge
sub
scas
jo
retf
mov
daa
nop
sti
rol
or
ror
shr
test
pop
inc
aas
sbb
pusha
inc
aad
pop
adc
or
leave
sub
js
push
repz
sub
int
sbb
mov
or
sub
mov
mov
jae
rcl
pop
mov
mov
loopne
push
sti
popa
sbb
add
mov
mov
sbb
cmc
inc
sub
sti
mov
push
jecxz
retf
mov
mov
jl
mov
repz
adc
sar
inc
(bad)
int
mov
adc
scas
movs
test
fld
push
push
xor
inc
and
sbb
sbb
and
or
jns
jne
sbb
mov
and
cmp
cmps
and
scas
push
or
dec
inc
inc
inc
(bad)
lahf
cmp
mov
cmp
push
icebp
cwde
dec
push
imul
pusha
dec
sbb
mov
adc
ror
dec
mov
xchg
pusha
mov
adc
or
dec
aad
jne
jbe
cmp
js
cmp
inc
jge
pop
pop
add
push
das
sub
lods
loopne
sub
and
inc
cmp
and
add
mov
ret
lds
push
fiadd
sub
mov
jne
je
cmp
inc
stc
xchg
das
xor
lea
pushf
cmp
les
pop
cmp
or
inc
push
cmps
jp
or
loopne
mov
xor
adc
test
push
out
xor
inc
clc
add
js
add
cmp
cmp
pusha
adc
inc
add
push
imul
mov
xor
test
sbb
test
mov
inc
sbb
xlat
std
push
imul
sub
lahf
das
ins
jb
add
loope
add
mov
cmp
add
or
dec
popf
sub
mov
sub
add
out
or
sbb
shl
inc
adc
or
or
das
add
int
add
(bad)
mov
xor
ret
mov
mov
ret
or
mov
adc
les
shl
mov
dec
push
xchg
sbb
inc
(bad)
add
movs
les
rcl
adc
(bad)
sbb
stos
mov
dec
shl
cli
sub
loope
outs
and
sub
mov
and
jne
sbb
in
mov
jns
aad
ror
mov
test
cmp
shr
xor
add
xor
xchg
sub
popa
jo
pop
xchg
or
clc
add
aad
push
sub
xor
and
and
xor
adc
lea
lock
dec
dec
jmp
icebp
mov
inc
icebp
ins
shl
mov
daa
shl
mov
stos
loop
or
mov
add
push
mov
in
jnp
add
arpl
inc
les
sbb
sub
mov
push
sub
scas
adc
lock
or
test
sub
add
mov
scas
add
adc
mov
adc
sti
pop
pop
cmp
adc
push
mov
inc
mov
adc
add
xchg
call
inc
cwde
movs
and
out
xchg
mov
or
outs
arpl
sbb
gs
jne
das
dec
aad
and
add
sub
out
shl
repnz
lahf
popa
mov
cmps
popa
jne
and
jb
mov
dec
and
mov
add
mov
pop
push
add
dec
mov
popf
jno
aas
sub
mov
stos
jecxz
push
jmp
mov
test
lods
ret
cmp
inc
rcr
cmp
aad
xor
popa
push
vmread
sub
cmp
add
inc
inc
mov
pusha
sub
sbb
arpl
lds
and
daa
nop
call
inc
pop
dec
arpl
test
push
mov
fld
add
push
xchg
sar
test
adc
or
adc
inc
jg
popa
push
or
lods
test
call
add
popf
sbb
add
cmp
xchg
ss
mov
dec
xchg
or
jae
sbb
or
in
dec
cmp
icebp
in
lds
jnp
lods
aad
test
adc
ins
pop
popf
mov
popa
adc
arpl
and
lahf
and
mov
add
jmp
adc
and
jmp
adc
xchg
jno
and
add
test
push
mov
add
repz
sub
pop
mov
test
push
pop
xor
pop
sub
push
xchg
sub
cmp
lods
je
adc
pop
mov
inc
mov
test
lahf
jbe
push
cmp
(bad)
leave
ret
test
adc
jno
jns
adc
xor
cmp
xor
dec
add
add
sub
inc
xlat
(bad)
dec
js
pop
mov
mov
xor
add
in
adc
rol
not
pop
cmps
cmp
test
and
xor
nop
and
pushf
shr
mov
ret
nop
dec
mov
push
sbb
mov
and
dec
xor
outs
mov
pop
add
sar
in
mov
dec
sub
xchg
xchg
or
and
adc
add
pop
inc
ins
gs
pop
or
dec
ss
(bad)
rol
shr
xor
xor
mov
daa
mov
popf
lods
fild
mov
jmp
mov
jecxz
cs
ret
add
mov
popa
shl
add
xor
shr
aad
mov
cmp
sub
les
mov
mov
aaa
cmps
pop
push
push
popa
call
mov
inc
popf
cmc
adc
and
clc
add
shl
cmps
mov
sub
add
jecxz
pop
jnp
and
dec
pop
sub
pop
jb
inc
sub
addr16
mov
mov
jge
adc
or
xchg
mov
sbb
ins
sahf
dec
je
sub
lock
mov
call
shr
and
xchg
sbb
sub
inc
lods
pop
pusha
mov
and
shr
inc
sbb
adc
fild
inc
pop
jmp
adc
push
shr
outs
(bad)
sbb
bound
sbb
ret
sub
jecxz
movs
popa
inc
retf
popf
loope
or
movs
mov
add
dec
popa
out
mov
imul
add
sbb
mov
add
push
shl
dec
dec
push
ja
jnp
cmps
call
cmp
loopne
lods
mov
pop
push
sahf
xchg
in
imul
mov
inc
mov
inc
jns
sbb
and
ja
(bad)
shl
je
sar
xor
fwait
sub
(bad)
test
pop
pop
xchg
cmps
xor
(bad)
aaa
lahf
add
andps
sub
shl
shl
xor
mov
push
inc
stos
sub
push
out
xchg
test
adc
xor
pop
sub
loope
mov
and
cmp
adc
adc
jge
clc
xchg
ret
mov
sub
sbb
mov
pusha
rol
pop
add
and
add
ret
jecxz
push
add
add
add
mov
test
sbb
and
sbb
test
test
test
xor
mov
mov
out
sub
or
xlat
icebp
lock
lods
sub
cmp
pop
int3
push
dec
fistp
jo
add
js
sub
mov
jmp
add
iret
lods
imul
and
arpl
pushf
and
add
mov
cmp
rol
and
push
inc
test
jns
xor
xlat
jmp
movs
adc
push
add
add
mov
ret
iret
xor
pop
lods
pop
mov
sub
call
or
xchg
adc
push
push
xchg
and
loopne
outs
jno
scas
mov
inc
pop
cmps
(bad)
movs
sub
add
fcmovb
and
test
mov
(bad)
jnp
or
loopne
xchg
cs
pop
or
inc
shl
adc
pop
jno
xchg
adc
add
popf
sbb
lahf
mov
mov
add
inc
mov
and
(bad)
xor
cwde
xor
imul
test
mov
and
test
xor
stc
cmp
inc
jmp
inc
out
call
sbb
push
push
inc
or
pop
lods
dec
or
sbb
pop
jno
jnp
xchg
sub
dec
mov
loope
fldcw
(bad)
jo
push
mov
hlt
push
into
and
mov
mov
scas
adc
xor
test
movs
cmp
push
xchg
dec
inc
scas
push
arpl
enter
or
into
inc
neg
mov
cmp
sbb
fstp
icebp
je
and
and
push
xor
out
aaa
xchg
cmp
jmp
jecxz
inc
inc
cmp
cmp
and
es
dec
sbb
popf
dec
mov
dec
je
mov
sbb
add
mov
aaa
xlat
into
js
pop
rcr
adc
lahf
inc
test
xchg
add
inc
sbb
sbb
pop
or
rcr
jae
in
or
add
dec
je
sub
push
inc
gs
test
cmp
lds
cmp
mov
pusha
push
adc
jle
dec
call
add
push
cmp
push
int
dec
adc
push
cmp
fldenv
out
mov
lods
arpl
sbb
adc
adc
lds
inc
sbb
test
cdq
or
push
adc
mov
sub
mov
xchg
sbb
push
popf
rcr
sub
or
shl
ror
jmp
push
add
mov
pop
ret
add
shl
bound
mov
ret
mov
push
mov
mov
xchg
mov
or
sub
or
add
adc
(bad)
mov
xor
add
xchg
mov
mov
and
fadd
rol
mov
jb
add
mov
pop
and
add
iret
inc
mov
test
lock
and
test
and
movs
sub
loope
lock
rcr
ror
pop
and
jae
adc
xor
add
test
adc
sbb
sti
add
mov
cmp
add
jo
inc
dec
fnstcw
or
movs
xor
mov
push
xchg
sub
addr16
mov
fisttp
loopne
mov
leave
shr
inc
shl
or
xor
pop
icebp
pop
adc
imul
push
test
pop
aad
shl
popa
add
cmp
mov
imul
and
push
cmp
rcl
fsubr
inc
xchg
jno
jo
xchg
mov
sub
aaa
mov
mov
xor
(bad)
rol
inc
inc
add
mov
int
mov
scas
add
add
xor
pushf
xor
push
ja
mov
pop
scas
inc
ret
mov
jnp
mov
pop
xor
setne
pop
add
adc
js
mov
inc
sub
inc
mov
test
mov
xchg
cmp
push
push
lea
int
and
adc
sbb
daa
xchg
pop
mov
and
jmp
pop
sbb
pop
int
pop
xor
push
and
xchg
xor
shr
push
jg
push
add
dec
or
adc
rcl
and
daa
mov
test
sar
inc
mov
fldenv
add
inc
xlat
cdq
dec
xchg
xchg
outs
rol
mov
lods
jbe
addr16
bound
add
nop
es
or
sbb
rcl
iret
push
sub
rol
rol
pop
jmp
(bad)
cmp
loope
adc
inc
nop
sub
dec
std
cmps
xor
pusha
xchg
aaa
adc
sbb
fistp
and
mov
push
pop
dec
sti
aaa
and
les
xchg
adc
gs
loop
ret
sti
xchg
add
rcl
pusha
and
adc
pop
mov
or
mov
lea
movs
adc
repz
(bad)
cmp
mov
scas
xor
popf
sub
add
call
xchg
movs
addr16
movs
jmp
sub
mov
clc
cmp
jmp
sbb
mov
mov
mov
xor
(bad)
adc
push
stos
push
sub
sub
movs
cmps
arpl
xlat
call
test
mov
dec
lods
sbb
(bad)
(bad)
retf
xor
loope
inc
sub
mov
int
js
push
add
in
sub
dec
mov
inc
mov
jnp
xlat
or
mov
std
xchg
xchg
and
mov
sbb
xchg
or
mov
mov
add
pop
inc
fdivr
scas
inc
adc
sub
outs
rol
lds
add
popa
cmp
shl
outs
add
xor
adc
xchg
jecxz
sbb
add
fwait
ret
inc
and
fist
cmp
sahf
gs
sbb
imul
popa
sub
or
or
xor
shl
movs
fist
pop
jno
xchg
dec
(bad)
add
xchg
mov
call
bound
rol
or
shl
push
adc
arpl
add
lock
adc
pop
int3
sub
and
mov
cs
ror
out
inc
add
mov
pop
mov
repz
add
sub
aad
xor
loopne
movs
sub
sub
and
inc
lea
cmp
push
and
mov
sub
xchg
push
xlat
xchg
push
and
stos
jns
(bad)
push
pop
(bad)
or
or
xchg
pop
adc
frstor
push
or
pop
push
lea
or
adc
mov
push
jo
sar
or
loopne
inc
and
pop
cmp
jge
sub
data16
xor
test
adc
pop
iret
push
ins
rol
push
add
sbb
sbb
mov
rol
aad
push
jne
retf
xchg
fucomip
inc
pushf
mov
cdq
add
jl
mov
or
or
lea
or
mov
or
add
scas
and
xor
or
add
pop
fcmovnbe
push
(bad)
and
push
popa
imul
adc
pop
adc
outs
xlat
fs
fnstcw
ret
add
test
std
shl
xchg
sar
fisub
cs
sbb
(bad)
mov
add
jo
mov
and
push
data16
pop
test
iret
inc
imul
xor
pop
mov
imul
retf
sbb
mov
jmp
push
lds
mov
jo
jne
push
inc
cmp
int
xor
xchg
ins
add
call
sbb
xor
xor
adc
pop
add
fisub
adc
cs
aas
and
add
sub
popa
push
std
ins
adc
mov
pop
cmp
adc
fwait
adc
cmp
push
adc
xchg
cmp
loope
and
or
push
xor
mov
sub
or
cmp
and
dec
inc
jne
and
test
ins
mov
cmp
pop
pop
pushf
mov
rcr
or
(bad)
mov
add
mov
adc
or
imul
adc
(bad)
sbb
popa
aam
retf
xchg
adc
movs
add
retf
mov
mov
inc
shl
and
cmp
stos
shl
imul
leave
mov
cmc
inc
bound
(bad)
or
cmp
cld
pop
jo
and
cmp
je
cmp
das
fs
popa
jae
imul
cs
je
popa
or
inc
ins
ins
and
lea
and
sub
rol
xor
cmp
pusha
add
xchg
ds
lods
push
adc
or
mov
loop
retf
adc
push
lea
iret
or
ja
aaa
cmp
add
dec
cs
ins
sub
mov
dec
fisttp
or
xor
in
stos
adc
rcl
pushf
call
pop
add
xchg
dec
data16
add
(bad)
push
adc
gs
cli
push
adc
pop
out
or
pop
adc
sbb
adc
fldcw
and
shr
xlat
mov
xchg
ror
xor
inc
push
or
jmp
and
xor
add
scas
inc
xor
xor
push
loope
retf
in
cmp
repz
and
mov
xchg
adc
pop
call
rol
out
mov
pop
cs
or
add
les
add
xchg
or
leave
xor
xchg
cmp
fwait
mov
push
and
pop
mov
jno
ret
ret
ror
xchg
nop
mov
jmp
test
inc
fwait
loope
outs
sahf
push
out
jae
xlat
cmp
sub
outs
mov
pop
sub
dec
add
pop
mov
movs
call
pop
movs
add
dec
push
sub
push
and
push
jge
pop
mov
push
outs
je
mov
or
loopne
jmp
mov
loop
jo
push
inc
dec
or
jbe
mov
movs
cmp
add
das
or
dec
cmp
les
pop
adc
add
push
test
movs
add
add
add
add
and
and
xchg
sbb
sti
mov
cmps
add
sub
add
movs
sub
mov
int
aad
add
fadd
xor
sbb
xchg
and
cmps
aad
add
movs
add
rol
repz
jbe
mov
mov
sbb
inc
mov
add
fwait
pop
and
sbb
cmps
cmc
xor
call
fldcw
adc
xor
mov
sbb
mov
cmp
mov
rcl
jbe
cmp
push
dec
sbb
or
sbb
sub
sbb
dec
xchg
sbb
lods
or
add
and
ret
cmp
imul
mov
sbb
fisubr
cmp
mov
dec
addr16
aaa
cmps
leave
inc
adc
sub
pop
sub
and
inc
adc
sub
and
(bad)
mov
cmp
adc
int3
inc
cmps
and
popa
and
cmps
rol
ins
mov
push
daa
cmp
and
sub
push
dec
cmp
add
pop
aaa
sbb
dec
pop
shl
dec
sbb
dec
or
aaa
and
cmps
xlat
inc
pop
add
pop
adc
sub
and
rol
sub
or
mov
pop
and
adc
sub
dec
mov
sbb
push
aaa
cmps
sub
dec
dec
aaa
mov
test
push
inc
sbb
adc
dec
aaa
pop
mov
dec
mov
dec
pusha
adc
dec
dec
adc
mov
fmul
or
push
dec
iret
inc
add
and
and
test
inc
add
mov
dec
push
nop
or
inc
dec
dec
push
and
push
dec
inc
nop
dec
and
sub
xor
and
test
dec
or
rcr
loopne
dec
inc
dec
adc
sub
popa
add
test
lods
or
or
adc
dec
and
inc
and
dec
popa
mov
dec
adc
dec
dec
dec
push
and
dec
popa
and
adc
mov
dec
push
test
fild
xor
adc
mov
cdq
inc
xor
and
dec
sbb
add
mov
shl
popa
or
daa
add
push
fsub
sub
add
push
add
and
or
mov
jge
xor
sbb
sub
jns
xor
inc
sbb
rcl
add
movs
lea
mov
add
sub
and
add
loopne
dec
push
stos
and
rcr
jne
adc
and
pop
scas
xchg
dec
daa
ret
add
xor
dec
push
push
pusha
pusha
add
and
and
add
dec
push
and
inc
jo
mov
add
push
pusha
daa
and
movs
dec
adc
ins
push
add
sub
dec
sub
push
or
sub
dec
push
add
pop
pusha
mov
sub
and
and
adc
add
sub
int
inc
or
dec
dec
pop
ins
mov
push
aaa
and
dec
and
mov
cmp
ss
cmps
and
mov
add
mov
dec
test
sub
add
or
dec
push
dec
mov
sub
inc
cmps
and
and
inc
adc
dec
fwait
daa
mov
mov
dec
shr
push
pop
dec
jo
add
dec
ins
dec
xor
movs
or
dec
push
pop
adc
dec
(bad)
dec
mov
push
and
dec
push
and
cmp
mov
dec
cmp
test
pusha
jg
movs
push
sbb
sbb
dec
cmp
add
jle
adc
dec
arpl
and
cmps
add
jno
dec
sbb
pusha
xor
add
imul
add
push
sbb
dec
lahf
mov
sbb
add
add
pop
sub
repz
xchg
mov
fidivr
cdq
jns
cmp
sbb
add
add
fcmovu
xor
test
add
lea
dec
dec
test
push
das
xchg
ins
inc
mov
dec
inc
dec
push
pusha
adc
mov
dec
jmp
mov
dec
add
dec
icebp
and
add
or
dec
push
rcr
cmp
imul
mov
inc
mov
add
dec
push
inc
xor
dec
sub
dec
ins
inc
add
add
adc
and
push
dec
mov
push
adc
sub
mov
dec
push
test
add
ins
push
nop
fdivr
dec
add
ins
sub
fsubr
or
movs
imul
add
bound
pusha
test
mov
add
mov
adc
ret
add
mov
dec
dec
add
dec
sub
add
pop
add
and
and
and
or
dec
and
loopne
add
or
inc
adc
test
and
dec
xchg
or
add
dec
add
dec
lea
mov
adc
jo
iret
dec
add
movs
jg
add
sbb
sbb
shl
jnp
add
push
dec
jns
add
dec
jns
shr
add
dec
dec
dec
add
and
adc
dec
dec
dec
add
test
dec
add
mov
shl
mov
pop
mov
dec
push
dec
dec
adc
or
rol
dec
arpl
adc
mov
mov
mov
add
or
inc
add
or
inc
add
or
shr
dec
dec
push
inc
sub
sub
mov
dec
dec
pusha
adc
add
inc
xor
or
dec
dec
inc
add
or
adc
add
and
dec
adc
sub
inc
dec
dec
inc
or
mov
dec
add
pop
inc
dec
dec
or
adc
and
mov
add
dec
and
inc
mov
dec
or
adc
dec
or
mov
add
push
add
dec
sub
xor
dec
add
dec
add
or
dec
dec
rol
dec
or
test
inc
dec
rcl
mov
push
mov
dec
adc
cmp
add
add
push
xor
dec
dec
add
sub
shl
xchg
cmps
dec
or
mov
dec
and
mov
add
fs
sbb
les
add
push
dec
movs
lds
inc
nop
dec
movs
movs
add
out
pop
sub
inc
push
pusha
or
arpl
inc
adc
movs
dec
xor
or
push
adc
loopne
pop
or
inc
inc
push
push
push
xor
xor
movs
push
mov
dec
inc
and
fbld
push
inc
inc
and
inc
dec
rol
mov
and
xor
push
xor
add
dec
jmp
add
and
arpl
ins
add
setge
fs
cmps
lds
push
pop
add
add
inc
movs
or
pop
xor
dec
mov
dec
and
push
xor
or
jo
imul
push
pusha
test
add
cld
sbb
push
add
cmps
xor
ret
pushf
add
and
push
pusha
push
inc
add
dec
scas
rol
add
xor
sub
push
dec
jo
push
pop
and
xchg
push
ds
mov
inc
ds
or
xor
add
add
sub
inc
out
mov
xchg
es
xor
sbb
dec
push
sbb
pop
cmps
xor
xor
push
xor
or
add
dec
fsub
inc
hlt
push
inc
push
sbb
and
dec
dec
push
xchg
push
and
dec
and
repnz
inc
mov
(bad)
jmp
dec
xchg
mov
and
inc
and
or
dec
test
and
fs
pop
shr
inc
xor
add
inc
mov
xor
dec
and
push
test
(bad)
shr
dec
scas
push
xor
ret
or
and
outs
dec
and
pusha
loopne
ror
inc
nop
dec
mov
push
and
xchg
inc
jmp
pop
xchg
pushf
dec
and
test
pusha
dec
and
push
dec
inc
mov
add
push
mov
dec
in
xor
dec
push
movs
inc
pop
add
xor
inc
and
adc
fmul
mov
push
mov
adc
arpl
adc
fs
add
dec
xor
test
push
dec
arpl
clc
pushf
jno
and
sub
push
dec
gs
and
pop
add
pop
movs
or
dec
xor
movs
mov
ins
arpl
mov
or
inc
add
adc
sar
dec
push
ins
fsub
dec
dec
push
and
stos
and
fsub
aas
push
add
and
inc
dec
push
aaa
sub
inc
dec
push
xor
add
ins
or
movs
add
add
dec
inc
mov
adc
xor
bound
mov
add
in
add
inc
push
aaa
fstp
stos
pusha
dec
add
mov
add
lea
or
rcl
adc
dec
add
add
dec
adc
dec
add
mov
add
add
je
call
push
jo
imul
or
mov
xor
cmp
pop
adc
add
int
or
stos
or
bound
add
jae
dec
mov
test
ins
push
add
adc
sbb
sbb
push
add
push
dec
dec
dec
and
jb
pop
push
fs
in
add
data16
test
push
add
mov
je
js
xor
inc
repz
pusha
je
mov
cdq
mov
sbb
add
popf
or
inc
gs
mov
mov
fs
mov
push
add
cwde
mov
jbe
add
daa
mov
add
mov
push
mov
mov
lds
or
jg
push
dec
add
push
ins
gs
push
imul
jb
mov
data16
inc
ins
ins
outs
arpl
ins
jae
jb
outs
push
addr16
iret
adc
jns
inc
push
jne
jb
sbb
push
push
outs
jb
popa
outs
arpl
push
je
xor
sbb
inc
gs
lock
lea
mov
gs
dec
outs
push
sbb
inc
jae
push
inc
ins
jo
std
cs
mov
dec
jae
mov
jnp
add
push
mov
popa
and
inc
gs
jne
je
dec
dec
lock
mov
aaa
push
jae
xor
add
xchg
mov
outs
dec
push
imul
sbb
xor
jae
jae
ins
jmp
pusha
je
jo
inc
push
daa
xor
sbb
ror
jb
mov
fisubr
inc
js
push
je
pop
jo
mov
sub
jb
inc
fs
pop
shl
outs
fs
or
inc
sbb
push
cwde
push
fldcw
adc
mov
mov
clc
ds
sbb
jb
pop
push
outs
push
dec
and
push
daa
nop
pop
xor
push
je
cmp
adc
imul
push
adc
das
daa
xchg
nop
rcr
neg
mov
popa
push
sbb
adc
sbb
and
inc
adc
int3
int3
mov
repnz
outs
imul
jbe
ret
dec
cmp
into
xor
push
and
jp
inc
jl
sub
cmp
inc
push
jae
pop
imul
pop
mov
iret
sbb
inc
dec
push
jns
ins
and
cmps
leave
ss
pop
mov
fstp
and
xchg
lods
dec
mov
jno
mov
mov
mov
out
sbb
push
inc
inc
popa
das
adc
sub
push
cmp
and
fist
push
jb
lock
mov
push
sub
shl
xchg
out
push
pop
mov
sbb
cmp
jb
bound
outs
data16
push
xchg
cmp
jne
xor
push
sub
ret
push
xchg
out
jbe
pop
xchg
lea
inc
ins
gs
arpl
mov
jg
imul
outs
adc
jbe
push
adc
ja
cmp
bound
addr16
pop
test
sbb
mov
nop
rol
mov
mov
sbb
xor
les
push
xchg
in
mov
xor
dec
jle
lods
test
gs
adc
sub
mov
adc
mov
or
sbb
dec
or
pop
sbb
ret
mov
and
and
rcr
pop
loop
rol
xor
aaa
mov
rcl
dec
fwait
sar
push
addr16
cmps
nop
push
addr16
jne
call
popa
push
pop
xor
push
sub
lods
push
dec
cmc
leave
mov
cmp
ja
sub
inc
and
jae
push
popa
mov
xchg
or
dec
jne
movs
add
pop
lahf
jno
xor
mov
scas
cwde
sbb
mov
push
mov
cmps
es
out
inc
retf
and
(bad)
adc
loope
jbe
sbb
enter
lods
push
jo
jo
fsub
and
add
fst
pop
and
sub
or
dec
xchg
ret
push
adc
adc
retf
cmp
cmp
cmp
xchg
or
clc
add
cs
pusha
das
sub
inc
pusha
inc
pop
aaa
test
xor
js
adc
ret
push
punpckldq
mov
scas
adc
outs
jnp
jb
(bad)
test
inc
push
jle
pop
popa
retf
xor
inc
mov
sbb
in
sbb
sbb
ss
mov
int
jo
dec
pop
and
pop
adc
push
mov
add
addr16
cs
lds
push
test
jns
fisubr
out
sbb
inc
pop
jae
push
sbb
(bad)
sbb
aaa
mov
into
loopne
inc
xor
or
add
and
cmps
add
jne
inc
arpl
xchg
fs
adc
pop
push
movs
sbb
inc
xlat
dec
shr
or
loopne
pop
mov
push
mov
(bad)
cmps
mov
and
imul
lods
xor
adc
sbb
inc
mov
xor
dec
mov
lea
addr16
ror
sbb
push
shl
ja
fdivrp
push
inc
es
sub
maxps
push
jbe
sub
sub
shr
sub
inc
or
push
add
dec
jbe
sbb
test
stc
inc
inc
addr16
xor
dec
inc
outs
xchg
inc
cmps
and
test
or
and
pop
pusha
scas
pop
inc
fsub
das
sub
jnp
adc
pop
xor
mov
and
inc
pusha
push
mov
xor
out
das
and
adc
bound
ins
ins
in
ja
and
or
cmp
mov
xchg
arpl
sbb
and
pusha
cmp
outs
jns
and
or
lahf
jl
push
shl
cld
fmul
dec
push
outs
dec
xlat
(bad)
sahf
sbb
std
scas
inc
dec
inc
push
sbb
inc
ins
mov
dec
add
pop
dec
or
or
mov
ja
mov
ror
in
pushf
sbb
xor
xor
push
imul
daa
jl
add
adc
mov
jle
inc
jb
out
shr
fist
push
add
push
mov
je
sbb
arpl
xor
and
ror
aas
in
mov
push
adc
arpl
ins
dec
push
lock
outs
stos
ret
jns
adc
adc
jp
aad
imul
push
outs
sbb
and
cmp
imul
sbb
popa
jae
and
sbb
in
cwde
mov
push
inc
push
jne
scas
inc
xor
push
arpl
or
pop
pushf
inc
enter
mov
xor
sub
jnp
fimul
cdq
push
push
scas
pop
xchg
loopne
push
push
outs
inc
outs
or
adc
gs
ins
xchg
dec
ret
(bad)
push
pop
inc
inc
cmp
gs
daa
inc
fs
cmp
ror
jne
mov
gs
nop
popa
jo
cmp
outs
sbb
mov
jge
lahf
outs
jae
test
pusha
adc
xor
and
jo
in
mov
sub
ret
adc
aam
sbb
outs
outs
out
sbb
mov
sub
retf
push
add
jno
in
jmp
das
sbb
sub
sbb
sub
fs
rol
sbb
push
call
int
inc
aad
dec
data16
xor
sub
jo
jecxz
pop
pop
pusha
xchg
jns
and
dec
daa
jnp
or
add
mov
sbb
inc
jb
mov
mov
mov
add
or
inc
cmp
dec
fdivr
ins
jo
popa
ins
dec
loop
or
(bad)
adc
dec
test
repz
xor
dec
push
push
outs
imul
and
ss
mov
mov
sbb
push
push
xchg
inc
jne
sbb
cvtpi2ps
push
dec
inc
push
push
push
pushf
adc
mov
adc
and
or
fiadd
mov
std
dec
sub
push
push
inc
push
js
out
sub
in
mov
popa
data16
jns
fcomp
je
ins
mov
sub
dec
dec
outs
fisubr
push
or
pop
in
loope
sub
popa
arpl
nop
ret
mov
push
clc
add
inc
sub
or
les
dec
fucom
(bad)
out
cdq
fiadd
out
ret
and
jnp
nop
mov
dec
(bad)
sbb
shl
xor
sbb
adc
jge
out
add
sahf
dec
repz
test
in
mov
das
sbb
in
mov
dec
shr
and
add
xchg
push
nop
dec
test
sbb
add
pop
add
xchg
add
push
lds
or
or
or
movs
test
pop
push
clc
enter
gs
push
ror
cld
ret
inc
jo
pop
arpl
pushf
inc
cs
cdq
sbb
in
aas
jae
adc
enter
mov
ins
outs
cmp
ror
fsubr
imul
jne
push
push
lock
dec
mov
sbb
pop
or
pop
std
mov
jmp
sbb
mov
inc
add
test
jp
shl
push
into
or
and
inc
sub
sbb
mov
inc
inc
sbb
xchg
or
sbb
adc
retf
pop
enter
xlat
pop
adc
std
dec
icebp
push
and
sbb
nop
cmp
sbb
sub
mov
inc
jmp
test
outs
les
cmp
ss
jne
push
add
popa
imul
push
(bad)
push
(bad)
mov
outs
pop
and
cmps
sbb
les
adc
jno
test
lea
jae
push
add
(bad)
jmp
jle
mov
push
bound
add
and
push
je
mov
int
push
sub
icebp
sbb
data16
dec
jae
sbb
xor
pop
pop
mov
adc
sbb
sbb
push
fisttp
rcl
jae
imul
test
(bad)
in
retf
sbb
or
loopne
xor
cmp
xor
mov
icebp
sbb
cmps
xor
pop
pop
dec
jae
in
adc
popa
and
and
cmp
cdq
jae
cmp
sub
cmp
adc
addr16
inc
mov
jbe
push
div
inc
push
enter
loope
arpl
sub
clc
inc
loopne
das
mov
and
data16
jae
inc
adc
jmp
sub
or
jmp
mov
jmp
fwait
movs
sbb
sahf
and
jge
out
pop
xchg
and
sbb
outs
mov
mov
jne
push
movs
inc
(bad)
and
inc
popa
movs
jmp
mov
and
inc
mov
push
mov
lahf
mov
call
cmc
pop
add
add
and
aam
sbb
pop
pusha
nop
out
xchg
push
mov
ret
les
inc
shr
das
or
movs
enter
mov
push
xchg
jg
push
inc
add
ins
addr16
push
mov
push
in
(bad)
jl
je
add
scas
xor
sub
xchg
and
sbb
inc
out
add
sbb
add
sbb
rol
lods
dec
adc
sbb
sbb
lea
mov
sbb
mov
sub
xor
popa
xchg
adc
or
jb
dec
sbb
ret
lea
ja
ins
je
sub
jns
mov
adc
adc
mov
sbb
xor
and
add
push
dec
and
fs
aaa
dec
cmp
arpl
outs
mov
movs
and
dec
mov
loopne
xchg
sbb
mov
out
sbb
add
jnp
dec
data16
sub
pop
and
and
xor
shl
fidivr
xor
movs
test
loope
or
adc
or
add
ds
jo
gs
jne
pop
xchg
fisub
pop
pop
dec
loope
dec
sar
pop
pop
popa
loope
add
dec
ins
and
ret
pop
cmp
push
jo
rol
xor
aad
xchg
cmps
repz
add
enter
sub
outs
dec
sbb
xor
inc
mov
mov
fld
sub
dec
xor
and
pop
int
or
and
push
jmp
cmps
cmp
xor
mov
mov
lock
and
outs
shl
push
push
in
xor
mov
sbb
sub
inc
mov
mov
rol
dec
inc
test
xor
xor
iret
and
inc
sti
outs
mov
push
inc
push
dec
add
add
jb
push
add
fsubrp
std
jg
add
(bad)
or
add
add
and
and
adc
adc
not
xor
sbb
add
jle
add
lgdtd
xor
(bad)
cmp
movups
fidivr
cmp
shl
or
lds
mov
sbb
fcmovu
fmul
adc
daa
clc
cmp
mov
cmp
and
jmp
add
pusha
imul
or
and
pop
pusha
push
fs
add
mov
int
mov
or
bound
adc
sbb
test
lock
rcr
mov
les
imul
dec
lahf
fs
adc
inc
or
outs
push
or
dec
je
jbe
fld
add
loop
nop
push
jb
cmps
mov
aad
test
bound
das
push
addr16
dec
push
push
dec
add
adc
das
popf
and
xchg
and
xchg
inc
add
add
add
add
add
inc
xchg
and
inc
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
inc
je
mov
cmp
