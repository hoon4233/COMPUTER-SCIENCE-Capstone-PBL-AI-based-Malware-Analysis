mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
and
sub
enter
stos
pop
dec
sub
pushf
ret
jecxz
dec
and
je
mov
push
add
cdq
jl
popf
push
adc
cmps
jecxz
movs
push
dec
xlat
sub
js
arpl
iret
and
pop
jb
daa
shl
cs
ja
movq
add
dec
dec
cli
mov
dec
lods
call
movs
add
out
adc
les
sbb
enter
dec
scas
xchg
cmp
cmp
out
or
int3
pushf
or
push
xchg
aad
ror
jmp
loopne
push
add
sub
or
jb
imul
scas
scas
push
into
adc
enter
push
push
sbb
ret
cmps
pop
(bad)
xchg
push
push
push
xor
add
mov
and
mov
cmc
bound
fist
std
add
mov
in
xor
or
push
sbb
adc
cmp
test
popa
or
ret
out
mov
cmp
sbb
xchg
call
pop
test
call
pushf
dec
and
(bad)
repnz
rcr
jb
xor
inc
lods
rcr
cmp
data16
ss
enter
int3
inc
pop
and
jne
stc
(bad)
(bad)
mov
xor
pop
inc
out
stos
mov
sar
outs
retf
sub
inc
cwde
inc
cmps
out
add
add
sub
xchg
and
or
dec
xlat
mov
bound
push
adc
fld
sbb
imul
popf
and
jge
dec
fcomip
push
push
cmps
push
sub
lea
add
mov
outs
daa
xchg
dec
sbb
lds
test
xor
jae
pop
inc
fmul
loopne
push
xchg
xor
jp
nop
(bad)
in
dec
jecxz
add
mov
jno
mov
push
xchg
mov
jno
sub
push
pop
outs
(bad)
sbb
push
hlt
mov
clc
jns
jnp
push
adc
mov
jns
mov
fld
xor
call
xchg
sbb
ds
adc
aaa
lods
clc
addr16
ret
int
inc
test
test
cld
xchg
mov
sbb
xchg
sbb
push
out
cld
adc
sub
dec
clc
rol
xchg
scas
cs
xchg
mov
and
jnp
jo
cmc
in
xor
ins
mov
into
outs
push
sub
fistp
cmps
cdq
out
mov
aam
xor
jg
fld
or
cld
lds
cwde
jp
outs
push
push
shl
in
push
stc
sbb
add
mov
out
sar
or
inc
imul
sbb
xchg
pop
ret
inc
push
xor
mov
mov
xor
cmp
mov
cmovnp
leave
xchg
je
into
mov
push
inc
sub
xchg
fcomi
retf
adc
push
in
lea
pop
and
pop
(bad)
dec
clc
add
sub
pop
in
mov
dec
(bad)
lea
imul
pop
dec
arpl
dec
xchg
sbb
cld
sub
mov
out
fiadd
loope
xchg
mov
fst
push
inc
push
fcmovnb
dec
cmp
add
and
push
mov
ror
jle
test
sar
mov
loop
mov
sbb
mov
push
sub
mov
repnz
mov
ss
jb
jo
lods
fbld
mov
xor
repz
mov
mov
inc
cmp
adc
pop
cmp
in
mov
jno
icebp
cmp
push
sbb
int3
cmps
in
mov
mov
outs
cmp
jecxz
pusha
xor
imul
nop
mov
lock
mov
push
jle
xchg
sbb
push
sub
pop
fst
iret
push
icebp
pop
stc
mov
in
retf
pop
out
mov
inc
jl
xor
jo
mov
and
ja
sbb
adc
pop
pop
add
leave
xor
addr16
and
pop
int3
xchg
sub
dec
push
xor
ret
test
xchg
xor
jns
push
(bad)
push
adc
jmp
ror
push
push
sbb
pop
jnp
call
mov
out
xor
ret
push
add
xchg
hlt
stos
stos
mov
cmc
imul
into
lea
xchg
dec
mov
jb
cmp
arpl
leave
push
cwde
ret
popa
retf
fwait
clc
inc
pop
mov
xchg
lock
jp
xchg
and
mov
inc
push
scas
mov
jmp
lods
int
or
iret
ins
loope
ja
add
add
pusha
inc
jl
or
call
outs
cmps
mov
ficom
fadd
sub
aam
cmp
test
cmps
jmp
pop
sbb
les
push
retf
clc
bound
inc
mov
pop
mov
shl
in
or
aam
scas
sub
mov
mov
or
shr
add
or
mov
outs
enter
bound
stos
ja
xchg
push
mov
push
aad
loope
jp
push
frstpm(287
add
push
stos
(bad)
push
aas
loop
dec
stc
cs
fidiv
adc
dec
pop
loopne
pop
sti
gs
cmp
dec
xor
cs
pop
jne
add
mov
arpl
pop
arpl
xchg
add
test
add
cmp
lock
jp
out
dec
mov
xchg
jmp
mov
jo
cwde
retf
out
out
retf
lahf
sub
out
inc
mov
scas
cdq
jl
jae
xor
adc
out
push
cli
and
mov
iret
test
or
sahf
lods
in
rcr
adc
inc
sub
pop
push
popf
ret
mov
ins
mov
shl
mov
(bad)
adc
sbb
jns
lods
ret
jmp
dec
and
sti
pop
aad
mov
pop
popf
subps
lahf
lds
sar
pop
movs
sub
adc
fiadd
into
iret
sub
sub
or
add
dec
sti
iret
push
lods
xchg
inc
dec
adc
sti
addr16
and
add
cmps
push
les
cmp
sbb
jmp
pop
jge
lds
repz
adc
cmp
pop
xchg
imul
add
call
nop
or
xor
data16
loope
inc
xor
jno
outs
inc
sti
xchg
mov
scas
fpatan
and
cmp
movs
jp
rcr
cmp
sbb
lods
jns
jg
sub
mov
scas
iret
mov
movs
xor
mov
das
icebp
cli
sub
sbb
lds
movs
pop
cmc
into
ss
mov
repnz
and
les
je
jbe
stc
aad
fs
outs
dec
push
push
mov
sbb
je
(bad)
mov
les
jns
push
int3
loopne
int3
xor
cmp
bound
and
jge
pop
cwd
jns
xchg
ins
js
clc
push
aaa
pop
push
mov
pop
sahf
pop
xor
dec
mov
cli
(bad)
sbb
xchg
mov
pop
fnstsw
or
out
mov
or
push
inc
cmp
test
sbb
xchg
mov
int3
pop
sar
lods
push
pusha
stos
(bad)
mov
int3
xchg
in
lahf
cmp
mov
imul
js
pop
retf
inc
or
and
mov
lds
gs
popa
ror
add
je
data16
rol
pop
pop
push
les
push
cmp
popa
pop
loope
movs
scas
in
jae
sbb
push
fmul
int3
cwde
lods
inc
push
cmp
jmp
or
addr16
add
pop
fadd
(bad)
loopne
mov
jne
ds
pushf
mov
jg
jns
shr
sbb
mov
or
lods
mov
cmp
add
mov
jmp
cmps
sbb
mov
and
(bad)
pop
aam
mov
repnz
lock
call
cwde
loope
rol
add
and
sbb
jne
jmp
add
sti
(bad)
adc
nop
adc
push
imul
and
and
mov
push
icebp
mov
ss
xlat
fst
sbb
cmp
movs
aas
jmp
into
mov
and
push
sbb
in
ret
pop
bound
and
jbe
(bad)
xchg
pop
aad
fs
ins
mov
ins
jo
jne
fild
fwait
adc
retf
stos
cmps
stos
ror
add
call
rol
dec
pop
ja
in
jle
dec
pop
push
mov
imul
push
lods
stc
imul
sbb
mov
xor
mov
mov
imul
and
mov
cmc
ret
mov
xchg
(bad)
bound
mov
push
adc
xor
pusha
adc
cmc
adc
lods
jl
dec
sar
and
adc
popf
and
xor
imul
imul
and
mov
jge
xchg
adc
mov
sub
scas
out
jle
popf
es
nop
pop
mov
jle
and
repnz
rol
mov
shl
lods
stos
cwde
cwde
in
or
fs
mov
cmc
movs
test
xor
fiadd
xor
or
rol
mov
and
shl
int
pop
add
gs
xchg
lahf
sub
dec
pop
fsubr
lods
les
loop
in
mov
int3
add
mov
cmp
add
jge
int
push
dec
popa
inc
fstp
inc
inc
dec
pushf
nop
inc
inc
scas
xor
jmp
js
jge
adc
outs
xchg
add
push
pop
iret
fs
inc
loop
repz
inc
mov
push
enter
popa
mov
arpl
fmul
adc
ficom
mov
and
mov
gs
shl
les
popa
sub
pop
push
sbb
popf
lods
call
ret
aam
(bad)
dec
inc
jecxz
cmp
xchg
cld
xchg
push
fsub
shl
pop
jecxz
mov
pop
xor
in
in
sbb
xchg
mov
(bad)
rcr
jb
les
or
out
add
push
daa
mov
lods
lods
aad
adc
jb
aam
(bad)
sahf
lds
lds
adc
cwde
add
xchg
jle
ret
data16
xchg
sub
and
xchg
mov
jo
mov
retf
dec
enter
mov
in
cmp
lods
xlat
pop
pop
mov
cdq
jns
push
pop
sahf
jmp
test
sbb
inc
imul
jne
cs
std
test
je
xchg
stos
retf
cmp
(bad)
iret
int3
fisubr
inc
mov
mov
jg
repz
jle
ret
idiv
pop
jle
(bad)
repz
xchg
leave
ja
cmc
popa
shr
inc
jnp
mov
hlt
scas
add
sbb
push
(bad)
int3
inc
fs
std
loope
pushf
shl
jp
dec
test
fwait
aam
pop
adc
loopne
out
push
jp
inc
or
and
cmp
jne
ds
out
rcl
push
leave
sbb
pop
mov
mov
sbb
scas
adc
pop
add
cmp
mov
cmp
and
sbb
add
mov
(bad)
xlat
fld
(bad)
cmp
movs
enter
fdivr
pop
cmp
cmps
test
push
scas
xchg
adc
mov
xchg
jbe
push
or
xor
mov
inc
fdivr
ficom
mov
das
movs
ins
(bad)
scas
mov
fldcw
imul
ret
add
xor
das
data16
xor
xchg
cdq
cmp
dec
cwde
adc
or
inc
cdq
in
data16
mov
iret
xchg
push
push
daa
jge
cmp
push
outs
xor
daa
outs
out
repz
mov
stos
xchg
sbb
lahf
mov
mov
in
mov
and
imul
adc
mov
push
inc
cli
in
leave
cmp
test
push
fldz
bound
nop
pop
enter
pop
jl
test
ror
xor
push
sti
pop
loope
fst
sbb
jnp
pop
cdq
xchg
movs
call
gs
jle
retf
xor
and
test
sbb
xchg
ins
pop
ja
adc
mov
fld
lods
xor
dec
sbb
adc
jae
std
outs
enter
push
cdq
jbe
retf
sub
inc
xchg
dec
xchg
ins
sbb
jg
inc
xchg
je
and
inc
arpl
int
jmp
inc
icebp
adc
push
inc
popf
inc
xchg
dec
mov
(bad)
push
push
inc
cmp
sahf
pop
dec
mov
pop
xchg
fcom
add
pop
sbb
pop
cmps
pop
shl
jno
xor
jg
pushf
les
pop
adc
xor
fidiv
je
mov
daa
(bad)
push
fmul
clc
pop
inc
pop
inc
loope
dec
pop
aad
dec
add
aam
dec
push
neg
xchg
js
push
pop
in
xchg
popa
xchg
ds
add
jmp
dec
push
retf
test
pop
sub
rol
cmp
mov
sar
fisubr
jbe
sub
mov
inc
xchg
neg
add
xor
loope
sbb
add
ss
jle
dec
sbb
ss
cmp
adc
mov
fwait
test
addr16
xor
sub
xor
int3
jno
pop
fsubr
ror
mov
cwde
mov
add
add
adc
xchg
call
jmp
adc
movs
retf
call
enter
fsub
adc
repz
mov
adc
sub
mov
mov
sub
repnz
test
inc
push
fild
stc
or
call
push
mov
mov
test
dec
stc
xchg
or
loopne
jne
push
cmp
arpl
inc
mov
call
sbb
test
adc
call
and
cmc
cdq
mov
js
xchg
adc
mov
lock
ror
mov
mov
inc
pop
or
mov
ins
mov
cmps
test
mov
fwait
mov
jmp
jno
int
jno
mov
aas
mov
and
cli
push
out
adc
inc
retf
add
sub
push
in
add
movs
xchg
lahf
cmps
sahf
sti
cli
sar
pop
inc
inc
es
and
loope
outs
xchg
pop
sub
inc
or
or
int3
loop
loopne
adc
inc
es
xchg
cdq
cmp
jge
adc
pop
addr16
dec
add
stos
sub
sub
adc
mov
cmp
mov
jp
gs
mov
in
add
sbb
mov
js
and
aas
mov
(bad)
dec
jmp
or
test
mov
jbe
iret
cmp
mov
imul
loopne
mov
add
out
das
arpl
and
mov
cmp
and
sbb
arpl
mov
(bad)
in
aam
jmp
sub
das
xchg
leave
and
jo
dec
out
sub
cmp
popf
cli
std
les
rcr
sti
movs
frstor
sbb
inc
fnstenvw
ret
(bad)
(bad)
mov
push
jmp
ins
sbb
push
cmp
inc
push
(bad)
cdq
dec
sub
push
sub
pop
sbb
and
retf
adc
mov
repz
xchg
mov
jg
push
jns
jns
cmp
lods
xlat
xchg
jg
xchg
iret
out
imul
inc
sub
out
mov
pusha
test
cmps
arpl
lock
add
dec
push
rol
ret
je
enter
repnz
retf
nop
push
psubb
dec
arpl
ret
stc
fwait
jmp
or
jmp
ja
xor
mov
inc
jg
jb
sbb
fstp
arpl
es
mov
cld
jo
js
cwde
fadd
dec
fild
mov
cmp
mov
gs
sub
cmp
dec
push
xchg
sahf
std
iret
and
fisttp
retf
push
imul
add
xor
into
xchg
les
add
mov
pop
lea
push
sbb
daa
std
adc
and
jnp
hlt
sti
jae
not
inc
jmp
ficomp
jmp
(bad)
enter
ins
push
cmp
loopne
out
inc
imul
cmp
sbb
cwde
and
cs
mov
aad
push
xor
rol
gs
jns
mov
and
and
popa
nop
cmp
sbb
pop
jbe
mov
loopne
fdivr
pusha
jo
mov
xor
mov
cmps
mov
loope
xor
stos
or
mov
jno
(bad)
ds
pop
in
imul
add
lods
outs
mov
mov
ja
and
std
mov
repnz
ins
or
mov
sub
enter
enter
push
xor
inc
sub
jbe
aam
(bad)
jbe
mov
or
lds
mov
jne
ror
adc
cmp
sbb
or
out
inc
mov
leave
loope
jne
jo
fmulp
imul
xchg
mov
pop
pop
int3
and
outs
test
je
shl
not
mov
and
ins
test
imul
inc
gs
add
fisttp
dec
lea
inc
add
sbb
and
push
or
pop
cli
aas
std
mov
sar
test
pop
gs
jle
out
push
sub
idiv
iret
(bad)
mov
fcmovb
and
fdivp
adc
(bad)
xor
dec
and
add
mov
jp
cdq
lods
repnz
inc
cmp
cmp
nop
jecxz
pop
inc
cmp
in
iret
mov
or
mov
adc
std
retf
fdivrp
cdq
outs
daa
test
or
out
adc
and
in
arpl
hlt
(bad)
sub
pop
xchg
shl
loope
or
mov
cdq
int
sbb
and
ret
jns
sbb
test
clc
ds
test
mov
data16
icebp
fist
out
jne
push
rcr
por
frstor
repnz
jg
repnz
xor
add
cs
out
push
shl
xlat
rcr
das
jmp
or
mov
js
inc
mov
cld
jp
dec
out
inc
in
adc
shr
push
or
xchg
add
sbb
jecxz
mov
xchg
sub
(bad)
(bad)
xor
jp
int3
fnstenv
lods
and
fninit
jbe
outs
call
or
popf
jb
aas
adc
push
xor
inc
or
mov
(bad)
pop
(bad)
gs
push
xchg
cmp
cmc
inc
xchg
jmp
in
mov
and
jecxz
mov
adc
mov
and
int
or
stos
fdiv
fistp
pushf
sub
sub
jno
add
cmp
inc
call
and
sub
dec
jno
mov
jo
cmp
int3
jo
or
fstp
retf
aaa
sbb
pop
pop
fdivr
pop
push
xor
loopne
pop
fwait
out
push
js
stos
dec
mov
test
popa
or
outs
loope
and
icebp
retf
mov
jo
(bad)
movs
bound
or
pop
pop
xchg
xchg
out
mov
ja
sub
lahf
sub
iret
or
scas
fadd
mov
sub
push
dec
test
push
pop
sub
jns
xchg
xchg
pop
gs
cmc
mov
and
jecxz
mov
in
aas
fsubr
loopne
fwait
inc
dec
jmp
sub
pop
(bad)
ja
push
mov
cmps
loope
pop
ss
test
test
fs
xchg
mov
push
retf
es
mov
adc
in
dec
repnz
xor
cmp
stc
push
movs
xor
push
(bad)
int3
ss
and
jle
rcl
or
cld
push
ror
aam
scas
mov
fcom
repnz
dec
int3
cld
push
mov
mov
test
js
mov
mov
sahf
push
int
pop
add
jp
pop
xor
jb
push
mov
add
dec
cmp
call
sti
push
xor
cwde
xor
cmp
mov
cmp
pop
sbb
(bad)
push
add
xor
adc
or
ja
lods
jp
test
push
jnp
test
mov
mov
pop
mov
pop
out
aas
aas
retf
jg
scas
je
loop
ret
popf
adc
cwde
addr16
xor
pop
inc
fiadd
cmc
xlat
into
jne
shl
inc
push
jne
int3
jne
cli
test
xchg
mov
mov
sub
int3
mov
gs
dec
mov
out
addr16
out
sbb
add
hlt
jo
dec
popf
xor
neg
sbb
push
push
test
push
(bad)
jnp
cmp
test
jns
aam
push
clc
es
mov
push
push
fiadd
call
in
lods
dec
pop
dec
xor
cmp
cmc
leave
sbb
repnz
mov
mov
fisttp
sub
stos
push
stos
jb
les
dec
(bad)
into
sub
mov
sbb
lahf
into
cmp
shl
stos
fsubr
jmp
pop
dec
fild
daa
cmp
pop
mov
inc
push
pop
daa
ss
cmp
pusha
push
jbe
test
xchg
xchg
fbstp
mov
lods
mov
mov
pop
ret
or
xchg
jae
dec
xor
push
or
xor
ret
adc
stc
test
mov
inc
int
movs
call
sub
movd
les
lock
dec
jecxz
pop
in
inc
dec
stos
cmps
fwait
fs
daa
sbb
pop
jmp
ins
nop
xchg
jae
rdpmc
or
sub
xchg
aam
sbb
jmp
les
add
out
or
ror
ror
push
rcr
fistp
sub
(bad)
daa
inc
loope
dec
daa
out
mov
pop
xor
dec
in
sub
cmp
int
sbb
mov
ror
push
test
jge
stos
xlat
xor
and
retf
jp
mov
lock
int
repnz
nop
retf
push
dec
mov
push
popa
jbe
push
jge
dec
mov
jnp
pop
int3
stc
test
inc
aam
or
lea
or
mov
inc
xchg
cmp
cmp
inc
or
loope
ds
pop
jbe
aaa
ins
xor
or
add
xor
or
push
enter
sti
jge
lea
dec
data16
retf
cmps
add
icebp
mov
adc
std
adc
sahf
pop
neg
pop
(bad)
fistp
outs
outs
js
cmps
loop
or
mov
sub
popa
xlat
sti
jnp
cmp
clc
sub
ror
arpl
fprem1
mov
icebp
or
sub
lds
push
sub
cmps
std
cmp
ins
stc
mov
adc
mov
neg
pop
push
lea
pop
jp
popf
cli
in
and
pushf
pop
fs
mov
les
cwde
cs
add
xlat
loopne
fwait
inc
or
jbe
sbb
(bad)
sahf
push
cmc
jmp
das
cld
mov
mov
or
adc
ror
nop
fbld
lods
jg
loope
test
xchg
loope
dec
cmp
fiadd
sub
pushf
sbb
shl
push
int
add
sub
(bad)
inc
mul
push
push
jo
and
sti
(bad)
fcom
push
pop
cmp
fisttp
test
mov
neg
fidivr
lods
addr16
pop
xchg
lods
mov
test
aas
dec
test
in
jle
adc
xor
js
loop
loopne
mov
imul
int3
(bad)
es
cmp
add
lods
call
sbb
dec
xlat
cmp
in
lahf
dec
out
pop
into
rcl
sub
add
cmc
jle
mov
std
dec
add
cmp
jmp
cld
add
and
xchg
mov
(bad)
xchg
mov
cmp
inc
pushf
je
loopne
retf
adc
dec
add
sbb
clc
mov
push
into
jb
in
add
cld
xor
rol
cmps
push
ins
std
push
retf
mov
js
outs
mov
xor
cmp
sahf
aaa
fidivr
imul
mul
cmp
adc
dec
cmps
and
mov
cli
icebp
sbb
shl
push
and
mov
xchg
xor
pmaxub
fild
test
push
ja
or
jmp
mov
les
shl
retf
out
mov
das
sti
mov
push
inc
pop
jne
xchg
push
fnstcw
dec
repz
loopne
xchg
fisub
mov
pop
mov
test
xlat
in
add
loop
push
adc
out
int3
mov
mov
ins
iret
xchg
add
mov
jb
cmp
jge
ret
mov
mov
cld
push
adc
out
mov
mov
clc
ficom
lods
rcl
mov
fdiv
or
jl
loope
adc
xchg
xlat
xadd
cwde
div
mov
sbb
pushf
das
icebp
(bad)
rol
sbb
adc
push
fld
mov
enter
out
mov
and
sub
inc
sub
cmp
not
cs
pop
adc
and
xor
in
pushf
icebp
lea
pop
in
clc
cdq
aaa
mov
mov
daa
out
mov
sub
sub
ror
test
fldenv
fnstsw
adc
pop
in
in
push
sar
shl
enter
adc
dec
or
out
sbb
push
xor
int3
cmp
repz
ds
add
and
popa
je
js
adc
push
sbb
in
mov
retf
cli
data16
es
mov
sbb
adc
ds
sub
dec
repnz
inc
inc
sti
push
xor
data16
sbb
dec
pop
mov
aas
sub
inc
mov
pushf
pusha
dec
clc
fisubr
(bad)
mov
xor
adc
stc
ins
cli
jne
push
icebp
(bad)
adc
mov
rcl
sbb
int3
and
repz
in
mov
push
jo
(bad)
push
sar
cmc
je
and
nop
jmp
pop
push
push
pop
stos
imul
mov
mov
enter
cmps
fstp
shr
mov
cli
xchg
xchg
dec
mov
stc
rcr
test
inc
sub
jb
dec
jmp
stos
xchg
cmps
pop
mov
fmul
aas
sub
xchg
push
(bad)
out
cld
les
xchg
in
scas
mov
sbb
inc
call
mov
add
stos
test
rcr
xlat
popf
lods
les
adc
das
loop
hlt
into
inc
mov
(bad)
fcomp
pop
mov
add
xchg
leave
outs
push
pop
pop
jo
inc
inc
inc
or
jns
retf
push
mov
outs
(bad)
inc
mov
lods
dec
aas
push
pop
pop
outs
sahf
fld
mov
inc
cmp
mov
lods
lods
adc
ja
and
mov
jns
fstp
mov
xchg
cmp
and
pushf
(bad)
lods
aam
cmc
gs
cld
jne
adc
les
cmp
sbb
loopne
xchg
xchg
(bad)
shl
shr
mov
mov
xlat
dec
std
pop
jb
xchg
popa
xchg
dec
and
sar
test
jp
cmps
or
cmp
fwait
popa
xchg
push
mov
xor
leave
xrelease
rcl
push
jno
(bad)
xchg
mov
iret
loop
cmp
or
movs
fsubr
xor
in
movs
movs
pusha
pop
ja
ss
fnstcw
push
shl
in
pop
fs
outs
push
push
sub
call
inc
xor
jg
into
ins
mov
in
rcr
cmp
sub
fsqrt
jo
adc
inc
push
ds
pop
arpl
bound
sbb
pop
jecxz
cmps
hlt
jg
data16
push
sbb
push
lea
rol
mov
cli
clc
ins
mov
mov
fisttp
lods
cmp
scas
imul
cmp
cli
ret
shl
int3
sub
cvtpi2ps
adc
test
inc
fnsave
idiv
aam
xor
movs
cli
ret
into
xor
pop
jae
xor
pop
xchg
pushf
outs
repnz
mov
xor
ins
popf
lock
sbb
cld
stos
arpl
cmp
loopne
inc
jbe
cmc
retf
inc
test
repz
loop
xchg
pop
sti
iret
das
fwait
xchg
and
inc
and
sub
stc
jb
mov
mov
cmp
fisubr
push
dec
mov
xchg
gs
stc
mov
(bad)
cmp
enter
in
call
inc
loopne
pop
cdq
mov
ins
cmc
pop
xchg
mov
loopne
aaa
hlt
xchg
stos
sbb
push
jge
lods
mov
shl
loop
inc
ret
and
nop
push
out
loopne
loopne
out
and
gs
dec
push
mov
iret
stc
and
push
fsubrp
sub
pop
pop
dec
call
mov
xchg
lea
jae
call
(bad)
clc
retf
fucomi
push
shl
dec
loop
inc
js
xchg
sbb
push
jmp
push
push
(bad)
ss
xor
mov
aam
mov
pop
popf
in
ss
push
(bad)
sti
lods
shr
sbb
and
inc
fldcw
add
imul
lods
xor
fadd
sub
stc
mov
int
pop
in
jb
pop
or
jb
or
daa
enter
(bad)
popf
fcom
pop
push
es
pop
xchg
mov
fs
xor
imul
in
adc
xchg
cmp
ins
pop
mov
std
adc
scas
jno
jno
cmp
sbb
dec
ss
mov
movs
and
jbe
and
xchg
cmp
mov
inc
and
shr
fs
xchg
cld
fs
push
mov
jae
dec
lods
cmp
xchg
pop
inc
retf
les
inc
stos
test
ficomp
mov
push
movs
nop
jo
sbb
lock
es
shl
mov
dec
mov
xchg
pushf
imul
sub
pushf
inc
push
hlt
mov
and
jge
xor
mov
ret
pop
repz
mov
jl
inc
inc
out
jb
dec
push
cmp
(bad)
pop
mov
adc
nop
push
sbb
dec
xor
push
add
out
push
les
idiv
adc
pop
adc
cmp
fdivr
clc
test
mov
repz
push
push
adc
fild
and
dec
lds
arpl
call
mov
repnz
mov
dec
outs
(bad)
std
scas
jo
pushf
hlt
gs
sbb
add
cmp
jae
clc
je
fsub
push
shr
in
cmp
add
outs
test
pop
into
dec
jae
or
mov
lods
pushf
daa
ret
repnz
push
jmp
loop
out
pop
fcmovu
loopne
cmps
div
mov
ror
call
pop
mov
xor
inc
mov
pop
es
and
pop
jge
jl
in
add
push
adc
jb
jg
cs
clc
retf
mov
daa
dec
(bad)
adc
sbb
sbb
mov
repnz
pop
leave
push
mov
daa
push
test
sub
fld
test
and
mov
test
outs
jl
cld
pushf
outs
cld
inc
int
cmp
cmp
out
mov
fnstcw
adc
fwait
push
cmp
scas
ss
sub
dec
fnstenv
lock
cmp
ss
inc
data16
xor
cld
aam
pop
retf
add
fild
sub
jb
jmp
gs
xor
stos
rol
adc
iret
xor
cmp
cmp
int
push
cmp
into
push
fstp
and
jnp
push
mov
push
or
cmps
bound
mov
adc
(bad)
xchg
ror
ss
rcl
rcr
add
or
bound
sub
inc
xchg
sbb
stos
mov
sbb
test
cmp
bound
pop
pop
inc
imul
or
xor
mov
jne
sub
(bad)
es
lods
fiadd
int3
imul
jmp
fs
icebp
fcomi
inc
add
mov
dec
dec
fucomp
out
rcr
add
push
repz
loopne
retf
mov
add
or
jno
cli
mov
xor
retf
sub
jp
sub
(bad)
sbb
(bad)
cld
outs
mov
dec
ja
lea
mov
inc
xchg
call
jb
push
dec
or
push
aam
mov
xchg
loope
lods
sub
outs
and
sbb
push
mov
out
dec
cmc
mov
push
fs
out
jg
ficom
push
fs
int
cmc
pop
test
jge
dec
pushf
and
sub
mov
in
jge
mov
or
arpl
jns
mov
inc
sbb
or
fild
mov
mov
or
ins
cmp
pop
adc
fs
stos
mov
add
sar
cmp
shl
ret
fistp
fsub
fidivr
ja
jo
inc
mov
mov
sbb
shl
arpl
jg
xlat
xchg
jg
inc
pop
js
adc
out
jae
jmp
push
enter
cld
stos
mov
stc
mov
inc
jmp
je
call
call
dec
ss
stc
mov
iret
sahf
inc
jmp
mov
inc
ret
in
pop
add
push
ret
fst
daa
pop
idiv
push
and
jp
dec
jo
ret
lahf
and
dec
sti
sub
ins
dec
xor
scas
cwde
jb
add
ds
push
mov
cmp
bound
fsub
cmp
xchg
jae
add
cmps
shl
ins
pop
sbb
cmp
xlat
adc
xor
ret
clc
test
bound
adc
mov
out
test
test
mov
ds
xchg
sub
cmc
jl
std
loope
out
lahf
jne
(bad)
push
cmp
mov
(bad)
or
dec
adc
and
daa
les
inc
outs
aaa
clc
or
minps
test
iret
aad
push
sahf
out
mov
dec
loop
movs
mov
xchg
out
dec
push
test
retf
mov
jmp
mov
int
ror
mov
cmp
inc
sub
push
jmp
cmp
mov
out
xchg
mov
gs
ins
or
mul
dec
ins
cmp
jb
fidiv
cs
push
mov
(bad)
stc
inc
pop
bsr
jmp
xchg
cmc
ret
push
inc
adc
cmp
shr
int
loop
enter
loopne
mov
xchg
aad
out
ror
mov
cmp
das
mov
aad
adc
scas
stc
movs
xor
xchg
mov
call
sub
xchg
adc
cmp
xchg
ds
xor
test
or
pushfw
in
test
scas
fstp
xor
rcr
mov
sub
cmps
popa
mov
xchg
mov
add
jnp
sbb
movs
mov
jmp
pop
xchg
add
xchg
cmp
push
mov
mov
mov
add
imul
(bad)
rcr
daa
fldenv
mov
mov
dec
cmp
stos
test
(bad)
fdiv
xchg
mov
dec
shl
(bad)
cmp
(bad)
outs
mov
sub
add
jno
ins
add
pushf
xchg
popa
mov
mul
dec
imul
ds
imul
shr
push
jb
outs
lahf
xor
je
and
push
dec
fs
jno
loope
int3
add
jae
inc
sub
jp
mov
jmp
sub
and
dec
cmp
out
jge
add
(bad)
mov
iret
movs
repz
aad
sbb
fxch
pop
fcom
cld
in
lds
push
jno
or
dec
xor
addr16
in
ins
pop
and
(bad)
in
sbb
cli
dec
cmp
sbb
jo
pop
in
in
xor
adc
adc
(bad)
call
push
pop
mov
out
pop
rcr
or
or
jmp
inc
mov
cmps
inc
jbe
imul
jb
mov
mov
mov
stos
lods
hlt
out
sbb
retf
cmp
push
add
cwde
pop
ficomp
cs
sar
cmp
mov
ins
cmc
adc
loopne
aad
cmp
mov
pop
jle
sahf
fs
in
lea
es
aam
adc
(bad)
mov
adc
push
lods
xor
cld
adc
or
xchg
cmps
dec
mov
sub
inc
call
push
in
in
les
enter
and
sub
pop
div
dec
dec
adc
and
push
stos
mov
or
(bad)
lods
sbb
sub
fwait
add
fcmovbe
call
das
es
shl
(bad)
cld
and
mov
xor
pop
dec
mov
or
loope
(bad)
stc
call
push
ss
xor
inc
pop
imul
add
push
ficom
scas
or
sbb
add
cmps
add
test
aas
jbe
mov
fs
push
dec
cmp
mov
xor
xor
in
lock
rcr
mov
cmps
sub
cli
cmp
inc
xor
cld
dec
stos
mov
xchg
sbb
std
add
ins
jae
call
sbb
mov
and
pop
or
cdq
and
rcl
retf
icebp
fistp
jmp
clc
les
pop
ins
lock
test
ror
cld
xor
test
adc
xor
das
jne
mov
les
ret
inc
imul
enter
rol
add
fistp
(bad)
mov
mov
mov
sbb
or
push
ds
imul
stos
xor
cmps
jb
xor
jbe
add
int
outs
sar
dec
test
sbb
mov
mov
ds
in
jge
es
popa
(bad)
jno
(bad)
aad
mov
es
or
cmp
popa
xor
and
in
call
mov
push
dec
test
repnz
pushf
xchg
and
aas
loopne
nop
shr
test
jecxz
lds
push
push
mov
aad
retf
and
dec
push
mov
pcmpeqw
pop
mov
and
jmp
das
jmp
cld
ins
xor
imul
jo
jp
lea
icebp
lahf
pushf
sub
dec
stos
sub
or
nop
fcomi
mov
pop
mov
in
leave
jle
sbb
loope
push
dec
xlat
sbb
dec
imul
jnp
icebp
jnp
aas
sbb
fsubr
mov
int
mov
inc
cmp
mov
push
addr16
add
cmp
add
das
push
ret
push
or
pushf
or
popf
jp
jae
cli
int3
or
inc
pop
pop
adc
(bad)
mov
mov
and
loopne
mov
jno
add
scas
fwait
push
dec
sbb
cmp
push
sar
cli
repnz
dec
and
sahf
imul
jne
push
inc
cmp
add
vpcmpgtb
rol
pop
retf
dec
test
jae
sub
jge
mov
pop
push
int
imul
addr16
imul
pop
jo
cdq
lea
push
adc
rcr
cmp
mov
(bad)
mov
(bad)
call
fisub
mov
xchg
cld
bound
(bad)
xchg
lock
push
jmp
jo
movs
sbb
adc
clc
test
cwde
test
push
xor
sbb
add
push
out
inc
lods
rcr
mov
jae
sbb
outs
xchg
pop
mov
sub
dec
mov
mov
popf
or
and
iret
inc
dec
shl
add
sub
dec
(bad)
hlt
je
xor
or
popf
loope
inc
scas
outs
inc
inc
int3
mov
add
mov
(bad)
add
mov
mov
mov
mov
addr16
sub
nop
das
pop
xchg
(bad)
mov
jns
and
mov
imul
mov
adc
js
mov
std
or
push
push
or
mov
jmp
test
(bad)
adc
scas
cs
pop
lea
add
pop
adc
leave
or
xor
jae
icebp
add
out
(bad)
mov
push
mov
sub
pop
or
or
daa
cmps
sub
jo
(bad)
or
aaa
dec
aas
ins
jb
das
es
(bad)
inc
or
ja
pop
inc
jmp
xchg
arpl
jae
movs
xchg
push
std
gs
xor
push
push
lods
jge
or
sub
or
je
jge
retf
jae
popa
or
sti
dec
push
fdivr
in
movaps
pusha
add
mov
lods
push
clc
ret
add
fild
bswap
jl
arpl
ss
xor
das
add
mov
(bad)
aam
push
popf
and
lea
inc
aam
rol
sbb
xlat
iret
jmp
and
sub
mov
pop
add
stc
mov
test
xchg
lods
add
sub
es
lahf
or
ror
cmc
nop
pop
int
(bad)
mov
jb
mov
mov
test
push
cmp
in
fisubr
aaa
mov
inc
(bad)
dec
icebp
dec
mov
movlps
aaa
or
mov
push
dec
push
cld
dec
fsub
sub
arpl
stc
test
adc
test
push
pop
outs
repnz
or
dec
rol
add
dec
mov
call
and
out
xor
and
xchg
jb
call
mov
cmovnp
pop
outs
xor
pop
mov
and
or
mov
sub
mov
inc
ins
push
test
xchg
pop
sbb
adc
sbb
in
test
mov
xchg
mov
loop
(bad)
jmp
sbb
sub
mov
mov
pop
sahf
and
jno
stos
fmul
(bad)
cmps
fist
inc
in
mov
dec
jb
xor
sub
dec
jne
nop
xchg
repnz
inc
ja
mov
sti
stos
sbb
mov
scas
jecxz
into
xchg
je
add
sub
je
popf
iret
cld
mov
hlt
pop
push
cli
(bad)
xor
xchg
movs
sub
in
jge
sub
sub
dec
sti
pop
cmc
cld
in
dec
dec
dec
xor
xor
jle
sbb
lahf
mov
push
rcr
fwait
ret
push
sbb
(bad)
ds
xchg
addr16
cmp
mov
repz
add
sub
int3
mov
aam
enter
cmp
jns
adc
xlat
adc
push
ret
jmp
mov
aad
push
in
fdiv
aad
scas
pop
cs
sub
(bad)
mov
dec
or
pop
dec
xchg
cmp
jnp
imul
cmp
jmp
xchg
imul
scas
addr16
mov
mov
adc
aaa
daa
clc
aam
cmp
lahf
mov
jae
pop
idiv
sbb
retf
inc
jg
fidivr
xlat
adc
enter
test
sbb
adc
ds
repz
xchg
mov
jo
push
bound
pop
sub
jle
sbb
rcr
push
jge
data16
dec
fcomp
inc
xor
sahf
inc
stos
xor
es
fidiv
cwde
in
addr16
jo
ror
imul
aas
inc
(bad)
in
xchg
lock
in
jno
mov
mov
adc
stos
in
dec
xor
xchg
add
sbb
add
je
sbb
sub
ficomp
inc
ror
std
push
mov
sahf
retf
shl
lea
pop
test
(bad)
rcr
inc
cmp
pop
fst
loop
ins
mov
(bad)
sub
inc
jg
xchg
repz
pop
jmp
and
(bad)
pushf
loop
sbb
cmp
sbb
and
push
stos
cmp
outs
add
xchg
cdq
adc
pop
push
ins
inc
stos
(bad)
fidiv
pop
or
lods
adc
cs
loope
xor
mov
cld
ror
mov
mov
mov
push
push
sub
daa
fnstsw
mov
push
rcl
shl
jbe
fdivrp
lock
xchg
sub
ficom
sub
mov
push
lahf
(bad)
and
jb
lahf
ret
jle
mov
leave
in
pop
aad
push
dec
ret
popa
jmp
enter
xchg
mov
gs
retf
dec
cmp
mov
test
sar
mov
test
mov
mov
xor
or
sub
repnz
cld
in
pop
sar
or
outs
fsubr
xchg
in
jmp
loopne
ss
shr
mov
movs
imul
cmps
sub
(bad)
mov
aad
mov
cmps
dec
push
(bad)
call
adc
cs
xor
xor
cmps
xor
pop
add
mulps
mov
cmps
push
cwde
dec
xor
ins
mov
into
and
mov
scas
xchg
or
push
sub
fdivr
inc
fdiv
lock
lock
xchg
dec
dec
cmc
(bad)
mov
inc
mov
dec
xlat
in
adc
sahf
data16
xchg
fisub
mov
sub
adc
adc
mov
jp
jae
push
lods
sbb
xor
enter
xchg
add
jmp
mov
or
into
(bad)
lea
dec
xchg
sub
repnz
sti
test
pop
jbe
or
lods
aam
pop
neg
clc
aad
add
fwait
pop
adc
jmp
sub
outs
fucomp
xchg
jmp
mov
mov
adc
xchg
mov
iret
mov
stos
jecxz
or
hlt
(bad)
leave
data16
and
mov
je
jl
loope
cdq
xor
jg
daa
xor
jmp
jg
mov
or
popf
rcl
ja
push
push
jns
gs
add
inc
adc
(bad)
xchg
xor
pop
dec
pop
xchg
push
and
push
repz
clc
xchg
mov
int3
jne
jns
scas
ins
cmp
mov
leave
dec
push
fcom
popf
sub
shl
xchg
adc
hlt
lea
and
mov
and
js
jg
jecxz
loopne
fsub
shr
and
jno
ins
xor
fmul
dec
push
add
adc
jecxz
repz
mov
ss
lock
retf
adc
ins
dec
(bad)
popa
fsubp
(bad)
mov
mov
inc
add
(bad)
daa
fsubrp
in
(bad)
jnp
adc
scas
inc
loop
inc
push
imul
jmp
loopne
aaa
out
cld
mov
out
inc
mov
add
lods
aad
mov
cmp
stos
mov
inc
lock
cld
push
and
jmp
call
outs
jae
int3
mov
outs
cdq
cmp
(bad)
jns
and
in
cld
leave
sbb
(bad)
shl
sti
mov
jne
or
cmp
sbb
lock
sub
neg
xchg
push
fisttp
stos
aaa
aas
sbb
ins
push
xor
js
lods
and
mov
(bad)
xchg
and
stos
aam
fucomi
test
jg
mov
adc
imul
fwait
pop
sub
rol
scas
(bad)
leave
enter
xchg
jmp
jmp
pop
xor
mov
call
sub
adc
mov
fstp
popf
dec
push
aaa
nop
ret
enter
mov
sub
(bad)
sub
sub
ins
xor
outs
dec
aaa
ss
es
enter
fwait
jnp
inc
cmp
pop
ins
mov
sub
lods
adc
jp
push
mov
(bad)
stc
xchg
inc
pop
call
clc
sbb
adc
test
mov
data16
adc
inc
or
xor
jns
xor
ja
jp
leave
lock
mov
pop
in
push
popa
adc
fild
sub
loop
fdiv
sbb
cmps
lea
out
cmp
fbstp
push
pop
repz
stos
cld
scas
not
mov
dec
or
add
jmp
pusha
in
bound
call
cld
xor
jb
pop
push
mov
loop
sbb
pusha
add
sahf
mov
gs
dec
xlat
arpl
inc
movs
jbe
mov
test
cmc
icebp
mov
mov
mov
ins
dec
push
cmp
add
add
fld
xchg
neg
xchg
pop
prefetch
iret
jae
iret
or
test
mov
iret
jge
(bad)
sbb
push
push
cwde
adc
icebp
outs
inc
mov
sbb
test
inc
pop
mov
out
xchg
pop
inc
jmp
pushf
jbe
stos
sbb
sub
push
mov
cmp
pop
xchg
bound
lds
(bad)
mov
or
loop
(bad)
aam
or
add
mov
and
add
pop
retf
(bad)
jl
imul
lds
mov
fild
into
sbb
fld
jle
jmp
push
cmp
jg
out
imul
or
out
pop
aam
mov
inc
jns
imul
push
pop
push
or
clc
jge
jmp
loopne
inc
push
dec
mov
adc
test
int
push
cli
dec
mov
dec
dec
mov
sub
and
push
stos
sti
fstp
sub
ja
sub
and
addr16
mov
pushf
jp
jns
inc
fistp
mov
push
jae
out
jae
inc
jb
jnp
test
mov
dec
add
mov
add
adc
stos
xor
sbb
add
and
int3
cmp
jle
dec
in
pushf
in
out
cld
lods
nop
lods
jp
loope
dec
cmp
fdiv
loop
int
loop
mov
(bad)
or
push
outs
mov
adc
cmps
call
in
shl
adc
in
int3
ficomp
ins
les
pusha
sub
jns
fdivr
into
lods
ror
scas
inc
jne
sbb
retf
mov
add
inc
xor
enter
sub
push
fstp
xchg
mov
shr
test
mov
mov
add
xor
jmp
ds
mov
in
pop
dec
pushf
cdq
and
dec
dec
add
iret
mov
fiadd
and
and
inc
adc
pop
cdq
dec
cmp
mov
cwde
add
cmps
mov
pshufw
inc
adc
mov
xlat
inc
mov
mov
jno
cmp
jns
sbb
imul
shr
pop
test
repz
dec
(bad)
(bad)
jp
jecxz
xor
fadd
xchg
or
stos
repnz
inc
xor
cmp
sbb
iret
fdiv
(bad)
cmps
jmp
jno
inc
(bad)
neg
test
(bad)
inc
inc
mov
in
dec
pushf
into
movs
test
xlat
or
dec
call
cmp
pop
xchg
push
mov
push
rcr
inc
scas
cdq
into
add
lock
or
out
sbb
mov
(bad)
(bad)
cmps
cmp
add
push
retf
mov
xchg
into
div
sbb
cmp
jge
dec
xor
xrelease
mov
ins
fbld
dec
fucom
xchg
adc
out
and
add
mov
aaa
add
cmps
mov
cdq
lods
in
leave
lea
outs
adc
aas
mov
dec
test
cmc
xchg
shl
pop
ret
dec
xlat
push
xchg
aam
nop
jae
int
cmc
sbb
xor
fdivr
inc
pop
dec
add
aam
imul
push
cmps
adc
jmp
mov
fwait
cmp
jne
or
stos
out
pop
jmp
out
jo
sub
inc
shr
mov
je
adc
sub
gs
cmp
hlt
inc
mov
or
and
pusha
jg
test
ret
out
mov
jmp
ror
jno
fiadd
add
out
dec
sahf
cmp
jl
dec
shl
sbb
scas
jge
scas
xchg
mul
ret
mov
cmp
inc
dec
mov
push
push
mov
sub
sbb
je
mov
mov
sbb
mov
xchg
and
dec
lea
sub
mov
int3
in
not
or
(bad)
mov
jns
sbb
call
cmp
and
dec
jbe
inc
mov
(bad)
or
inc
fstp
sahf
gs
pushf
cmps
and
je
loopne
sub
mov
or
stos
xor
cmp
imul
sar
sbb
aad
pop
inc
and
xchg
push
rcl
ffreep
call
fdivrp
xchg
push
xor
into
adc
fdiv
inc
inc
push
mov
sub
pop
retf
aad
xchg
gs
ins
cmp
fimul
push
mov
or
cs
dec
mov
loopne
mov
mov
push
inc
push
dec
out
scas
xor
sub
out
sub
cmp
mov
and
test
add
mov
sbb
jg
(bad)
xor
in
push
rol
cld
cmp
xor
loop
sar
sti
xor
out
xchg
cld
popa
mov
xor
das
ror
add
popa
xor
cld
push
imul
and
pop
mov
out
rcl
fsubr
sbb
and
bound
pop
xchg
cdq
pop
pop
outs
mov
fstp
leave
push
or
pop
call
xor
sbb
adc
add
push
inc
int
xchg
pop
js
xchg
jno
mov
sub
(bad)
fwait
stos
sbb
mov
imul
int
shl
out
rol
inc
jmp
add
jae
mov
leave
xchg
cmp
mov
add
fwait
(bad)
int
adc
in
and
mov
enter
mov
fs
pop
(bad)
inc
ret
and
and
or
inc
inc
dec
mov
push
mov
movs
mov
bound
mov
dec
std
or
in
aaa
ds
addr16
mov
lods
test
pop
xor
push
rcr
cdq
clc
inc
outs
sub
movs
cs
ins
inc
xor
push
(bad)
popa
out
sbb
inc
or
mov
rol
xor
shr
sbb
enter
(bad)
sar
cmc
push
cmp
jb
aad
mov
ds
stos
adc
iret
inc
fimul
bound
in
fldenv
pop
scas
push
adc
fsub
int
mov
dec
jmp
xchg
nop
pop
cmp
jl
push
and
pop
ins
lahf
in
outs
and
mov
repz
pop
outs
bound
mov
add
adc
inc
dec
mov
in
pusha
dec
popf
fwait
stos
cdq
mov
dec
(bad)
cmps
jbe
shl
lods
imul
idiv
ds
sbb
adc
push
shr
cli
xor
scas
into
call
loop
add
push
rcr
xchg
daa
sti
or
(bad)
pushf
outs
sbb
popf
push
pop
test
mov
lea
cmps
adc
les
outs
push
iret
(bad)
jo
add
mov
add
stos
xchg
rcl
fldcw
dec
add
in
out
and
cs
inc
adc
inc
inc
xchg
lods
lahf
cs
in
je
lea
in
or
jne
lods
or
(bad)
addr16
imul
imul
mov
test
xchg
jl
jbe
push
jl
xchg
(bad)
mov
cmp
mov
mov
sub
ja
pop
mov
jnp
adc
xor
push
mov
adc
mov
(bad)
xchg
dec
bound
jg
mov
and
cdq
scas
lock
stos
adc
sbb
(bad)
dec
pop
mov
aam
sbb
adc
mov
ret
xor
fld
sub
xchg
sbb
mov
mov
inc
(bad)
fild
bound
pushf
push
hlt
inc
cmp
call
xchg
outs
ret
int
xchg
adc
enter
stos
jmp
jp
aaa
mov
xchg
imul
rcl
sub
out
lods
jecxz
push
sahf
add
mov
mov
mov
scas
jle
and
mov
imul
push
js
mov
lahf
es
jns
fsubr
(bad)
mov
rcr
fsub
sub
add
lods
psllw
or
lock
ss
imul
cmps
leave
or
shr
int
popf
lds
cmp
repnz
inc
jb
xchg
push
xchg
dec
fimul
mov
mov
xchg
add
sub
jecxz
mov
xor
sti
push
pop
sbb
dec
mov
aaa
mov
dec
(bad)
xor
push
adc
out
sahf
and
loopne
pop
add
sub
sbb
xor
mov
loop
sub
push
jnp
repnz
or
lods
xchg
adc
loope
push
dec
mov
add
jecxz
addr16
jmp
in
inc
mov
push
(bad)
ss
(bad)
cmp
in
sub
cmc
pop
sub
mov
fwait
(bad)
mov
in
retf
stos
fstp
xor
jnp
cli
cmp
das
retf
scas
call
add
bound
mov
dec
ds
add
int
dec
cdq
ror
inc
push
loope
jo
push
push
adc
adc
fucomip
test
(bad)
test
mov
sub
shr
mov
mov
(bad)
xchg
add
push
popf
dec
inc
cmp
psllw
xor
ins
out
jge
and
mov
int
jns
rol
ret
or
adc
(bad)
js
mov
adc
inc
adc
push
cmps
mov
and
sbb
sahf
ret
jb
cmps
add
pop
mov
mov
inc
mov
push
sub
sub
popf
dec
into
(bad)
ins
push
fsubr
jl
mov
leave
bound
inc
cs
adc
int3
mov
pop
sub
mov
cmps
stos
xor
dec
(bad)
jle
jge
inc
pop
mov
sub
jge
jo
and
loop
dec
pop
jne
jns
stos
scas
nop
add
(bad)
int3
jns
loop
mov
movs
xor
test
les
cmp
xor
js
pop
mov
rcr
scas
popa
int3
inc
pop
ins
push
lods
fnstcw
fidivr
inc
je
loopne
inc
lea
inc
in
mov
jecxz
(bad)
cmp
ss
mov
push
mov
pop
les
pop
xchg
push
xchg
sbb
fild
push
jo
add
cmps
cmc
hlt
(bad)
es
push
stc
dec
aaa
add
mov
aas
out
adc
loop
stos
inc
imul
xor
add
outs
dec
mov
mov
(bad)
mov
repz
dec
nop
cmp
arpl
sbb
mov
and
movs
xchg
sbb
and
cld
pushf
call
xchg
fisubr
aad
adc
and
mov
shl
jmp
iret
push
adc
adc
out
std
js
popf
adc
stos
ret
fdivr
mov
fidivr
lods
pop
call
jmp
cli
das
call
add
mov
rcr
repz
ret
jge
inc
xchg
into
aaa
repz
das
(bad)
jl
xchg
jmp
ror
adc
sub
dec
push
sub
xchg
mov
pop
or
mov
add
adc
lods
outs
lea
cmp
dec
dec
push
push
jge
enter
enter
push
addr16
xchg
mov
rcl
lock
push
xor
rol
out
sub
enter
sbb
xor
pop
addr16
adc
neg
hlt
jb
icebp
xor
mov
dec
ins
dec
std
pop
pop
gs
pop
jns
ja
mov
or
add
test
jmp
and
in
idiv
sub
mov
div
sbb
and
mov
inc
push
or
sbb
lahf
dec
repz
add
add
fdiv
pop
adc
aas
into
sbb
push
loope
fimul
outs
push
adc
cmp
ret
hlt
mov
test
add
ds
sub
ss
sub
mov
fldcw
out
mov
ret
or
loopne
outs
dec
cmps
mov
lods
dec
dec
dec
pop
xor
in
shr
ror
xchg
xor
cmps
adc
cmps
jno
sub
pushf
shr
mov
popa
jle
test
imul
jmp
mov
xor
icebp
dec
cmp
bound
push
xor
mov
aas
lds
lods
hlt
mov
dec
(bad)
push
mov
cwde
shl
jo
call
fsubr
repz
stc
out
cld
xchg
adc
repnz
and
xor
push
pop
push
jmp
mov
lea
movs
xlat
mov
mov
cmp
enter
daa
push
cmp
(bad)
jge
mov
pop
loop
mov
mov
sub
pop
jecxz
xor
sbb
push
in
sub
xor
aam
jp
add
push
adc
ret
gs
loopne
xchg
sub
and
out
dec
mov
imul
sbb
mov
or
mov
scas
cmp
in
inc
les
mov
out
sbb
jl
pop
popa
or
rcl
xor
xchg
xchg
adc
test
cmps
adc
mov
xchg
add
div
lods
int
stc
ret
lods
scas
jge
push
ja
in
jmp
les
std
xchg
xor
jne
inc
je
(bad)
iret
stc
lahf
inc
stc
idiv
lds
popf
mov
inc
movs
xor
add
xchg
pop
xor
mov
xchg
jmp
jns
shr
daa
sbb
lahf
mov
fistp
popa
xor
cmps
inc
cwde
mov
push
pop
mov
loopne
push
and
mov
sbb
or
cmp
stos
xchg
adc
arpl
out
lock
mov
cmp
ins
pop
cmp
adc
repz
dec
adc
mov
imul
hlt
pop
or
mov
pop
xchg
push
xchg
jnp
es
(bad)
(bad)
loope
sub
aaa
add
iret
inc
mov
inc
mov
test
and
and
mov
repnz
iret
aaa
icebp
fcomp
adc
add
xchg
and
mov
loop
daa
scas
or
rcl
stos
mov
push
cdq
rol
lea
mov
cld
daa
jge
mov
mov
push
dec
ficomp
or
mov
imul
rol
mov
shl
pop
dec
test
sub
and
and
pusha
test
add
adc
or
xlat
stc
test
xchg
adc
push
mov
dec
sbb
jp
ins
and
and
cwde
mov
jle
aas
or
retf
sbb
mov
xchg
sbb
ja
xchg
gs
push
fwait
mov
cld
jnp
or
jge
dec
mov
or
repnz
mov
fisub
popa
ss
sbb
pop
inc
fwait
(bad)
nop
ss
jno
out
out
xor
in
jmp
retf
out
movs
or
jb
xor
out
xlat
xor
or
and
cmp
js
adc
aaa
xor
push
icebp
ret
adc
in
outs
sbb
mov
mov
(bad)
push
inc
mov
jb
dec
pop
fst
stos
sub
adc
xchg
in
xchg
ins
mov
push
mov
in
mov
sbb
jmp
fprem
mov
xchg
arpl
lods
dec
rcr
repnz
hlt
mov
cmp
sbb
sub
ins
push
enter
pop
jge
ds
pop
or
cmc
or
mov
nop
dec
xchg
data16
mul
sbb
dec
cmps
jns
cmps
cmp
jmp
sbb
pop
jo
cld
sbb
pop
jbe
xlat
pop
fcomp
add
repnz
push
mov
mov
retf
push
sub
inc
cmc
pop
add
scas
(bad)
sahf
push
cmps
lea
ins
dec
mov
test
mov
imul
cmp
jb
add
jne
and
jns
in
dec
jnp
hlt
dec
retf
xchg
test
cwde
rcl
ror
inc
xor
popf
ss
lea
hlt
pop
cld
mov
cmp
cwde
inc
pop
cmp
mov
push
popa
cld
scas
fld
inc
mov
aas
cmc
fdiv
shr
dec
jne
cwde
jp
shl
dec
dec
mov
mov
or
cwde
mov
push
mov
pop
cdq
jbe
add
or
nop
shl
dec
loopne
stos
out
dec
cmova
xchg
inc
ss
adc
inc
mov
(bad)
mov
cld
jb
test
xchg
out
mov
repnz
or
add
mov
push
add
shl
and
cs
das
out
leave
movs
xor
jge
test
dec
fwait
or
cmps
out
(bad)
xchg
dec
xchg
xchg
(bad)
retf
lods
hlt
xlat
int3
cmp
scas
dec
ror
aad
xor
fcom
cmps
pop
xlat
mov
mov
retf
pop
es
sub
mul
icebp
fxch
push
and
out
add
push
jmp
xchg
mov
sub
fild
dec
das
jae
cmps
push
dec
xchg
push
repnz
mov
pop
movs
or
dec
scas
or
mov
lahf
adc
cmp
cmp
int3
fadd
int3
or
mov
cmc
adc
popf
(bad)
not
into
pop
repnz
lock
pop
sub
ror
loope
mov
inc
addr16
and
int3
dec
cwde
mov
sahf
or
xchg
retf
cmp
mov
in
pop
or
xchg
dec
or
je
arpl
inc
xor
mov
or
mov
into
maxps
xor
je
xor
fdivr
arpl
cmp
(bad)
jmp
das
repnz
lea
sub
pop
push
ds
scas
aas
fisubr
test
imul
mov
cmp
pop
adc
mov
jge
pop
xor
lahf
cmp
neg
in
mov
fs
scas
pop
popa
or
sub
or
sbb
push
mov
inc
gs
sbb
mov
out
mov
jbe
dec
fcmove
scas
adc
xchg
ins
and
pop
mov
sti
gs
or
push
mov
or
push
aam
adc
pop
push
fs
mov
aaa
inc
dec
jne
pop
jp
cmc
jne
xor
js
gs
and
mov
mov
inc
mov
adc
mov
iret
dec
pop
sub
clc
add
xchg
dec
pop
sub
inc
jbe
loopne
jae
inc
sub
push
cmp
mov
jo
dec
xor
inc
mov
mov
pop
hlt
inc
paddusb
call
cdq
fadd
(bad)
lahf
sti
fbstp
sbb
xor
out
mov
mov
fmul
in
adc
dec
addr16
into
shl
loope
add
int
into
loope
cmp
jo
sbb
dec
outs
adc
fs
mov
je
cmps
loopne
imul
sub
mov
xor
fadd
popa
jl
adc
jp
mov
movups
out
(bad)
(bad)
jle
cld
cli
shr
and
fadd
arpl
enter
sahf
jmp
adc
daa
inc
adc
mov
mov
lods
addr16
push
jno
cmp
into
bound
jle
mov
dec
out
push
adc
mov
call
dec
test
cmps
inc
out
cmp
cmc
pop
sbb
mov
mov
pusha
(bad)
cmp
or
or
dec
repnz
dec
jb
add
in
pop
aam
pushf
test
addr16
imul
cmp
jecxz
fisttp
cdq
pop
jmp
sbb
cmps
pop
dec
test
iret
jmp
out
loope
sub
icebp
aam
and
xchg
jl
lds
dec
adc
shl
repnz
(bad)
jb
cmps
popf
inc
inc
psllq
aaa
aas
inc
mov
repz
mov
cmp
inc
imul
mov
test
sbb
data16
pop
fucom
add
inc
and
sub
push
fucomip
addr16
and
jbe
sar
stos
fidivr
es
movs
inc
add
mov
xor
and
mov
cmp
in
movs
cmps
mov
pop
push
movs
outs
hlt
push
mov
inc
loop
ss
jnp
add
or
test
push
pop
or
jl
das
rol
stc
out
icebp
lock
in
jne
stos
ds
xlat
fmul
dec
push
iret
in
mov
jle
and
dec
or
jns
cmps
pop
or
fsubrp
arpl
pop
jecxz
pop
into
mov
pop
jle
ja
leave
sbb
nop
xor
pushf
push
xor
ret
pop
shl
ins
push
and
aas
(bad)
or
clc
in
mov
sti
jnp
movs
mov
aam
fld
push
aas
add
add
outs
mov
out
cmp
scas
push
aaa
ins
sub
lods
out
rol
and
push
jmp
call
mov
pop
mov
call
test
dec
or
aam
dec
test
(bad)
call
jns
icebp
js
in
xor
int
jnp
(bad)
leave
test
aam
movs
inc
imul
aaa
imul
scas
sar
mov
xor
adc
mov
aam
push
sahf
test
push
gs
and
push
pop
ds
and
push
or
cli
fwait
cmp
pop
push
inc
std
pop
xchg
mov
xor
dec
and
mov
jmp
loopne
dec
or
in
pop
jmp
out
inc
or
adc
mov
mov
mov
inc
xchg
mov
loopne
dec
daa
dec
outs
push
push
es
or
or
je
sbb
or
add
rcr
gs
test
ins
syscall
xor
sbb
int
test
mov
retf
cmp
xor
xor
inc
xor
adc
cdq
sar
data16
or
sub
mov
mov
out
clc
les
nop
inc
enter
pushf
das
aam
cld
pop
push
hlt
push
pusha
push
das
nop
sbb
mov
outs
fstp
mov
and
inc
mov
dec
jno
mov
xor
(bad)
jp
or
xchg
shl
loopne
pop
mov
sar
loop
jnp
mov
movs
test
lea
mov
imul
retf
mov
std
xor
push
sub
jp
and
mov
xchg
sub
cmp
or
xchg
mov
mov
fnstenv
inc
into
sub
aam
pop
pushf
mov
and
(bad)
out
pushf
ret
inc
leave
retf
dec
dec
popa
das
into
cmc
pop
loope
out
retf
xchg
popa
lods
pop
repnz
pop
xor
imul
mov
ja
icebp
pop
dec
aaa
jb
cmps
dec
push
mov
inc
xor
cwde
stos
inc
jbe
adc
cli
sbb
pop
sub
jns
sub
inc
mov
or
cs
js
and
call
stc
dec
dec
dec
cmc
das
lahf
popa
mov
jbe
dec
cmp
mov
mov
std
fcmovbe
inc
mov
mov
in
mov
dec
retf
or
dec
sbb
jne
cmps
push
vucomiss
push
std
bound
pop
stos
or
cld
mov
stc
and
lds
sub
inc
(bad)
sub
shl
push
pusha
mov
pop
cmp
push
sub
sbb
jge
out
mov
(bad)
xchg
cs
pop
push
sbb
ds
jb
inc
pop
mov
dec
xchg
outs
inc
push
mov
sbb
loop
xlat
into
out
mov
fwait
movs
add
lock
pop
push
repnz
ror
lahf
push
xor
lahf
daa
cmp
(bad)
daa
dec
cmps
jl
stos
sub
popa
lods
jp
push
xor
add
jb
xor
sbb
movs
cli
pop
cwde
mov
shl
inc
or
xlat
leave
ret
sbb
cmp
push
not
hlt
loope
mov
pop
add
mov
xchg
pushf
mov
fs
sbb
fnstsw
enter
mov
mov
xlat
call
xchg
cmc
cwde
popa
sti
ins
ficom
cmp
fstp
mov
sbb
in
push
xchg
xor
mov
scas
cmps
xchg
js
xchg
mov
(bad)
mov
js
push
loope
cli
retf
add
add
stos
cmp
xor
ds
xor
adc
mov
lods
push
sbb
sahf
call
lock
fsub
fisttp
cwde
mov
cld
ret
gs
add
icebp
cmp
(bad)
jle
mov
xchg
mov
jne
ret
xchg
dec
addr16
out
mov
and
sub
repnz
mov
jl
pop
icebp
or
xor
sub
mov
jne
ja
cld
in
mov
ja
cwde
mov
sub
dec
add
ror
pop
shr
iret
add
gs
xchg
mov
sbb
sub
pop
push
adc
xor
xchg
jne
movs
mov
push
add
adc
sub
test
or
xchg
pop
popa
(bad)
push
out
xchg
xchg
mov
jmp
ins
mov
fstp
mov
mov
aam
and
ss
pop
cmc
fcmove
scas
add
pop
xor
mov
xor
mul
push
sbb
dec
je
mov
shr
loop
repz
sbb
or
adc
cmp
scas
lock
jmp
retf
push
add
(bad)
lock
(bad)
dec
and
call
mov
and
mov
push
sbb
repz
out
mov
xor
(bad)
fs
(bad)
cld
ins
ins
mov
dec
adc
jb
jmp
(bad)
ins
ds
outs
jmp
adc
dec
js
mov
outs
jmp
das
out
shr
and
shl
adc
pop
aam
out
mov
das
ins
ret
jb
les
repnz
js
lahf
inc
test
maxps
push
(bad)
imul
aaa
je
sti
sti
sub
pop
pusha
adc
push
ret
in
and
mov
popf
xchg
rol
xor
push
cmp
ret
faddp
push
push
ins
sbb
test
stos
or
push
nop
dec
mov
(bad)
adc
mov
in
jae
and
mov
outs
jae
fcomp
int3
adc
rcr
arpl
pop
or
out
int
sbb
xchg
sub
popa
or
mov
aaa
and
in
fld
jb
xchg
jmp
sbb
jecxz
xor
push
ss
mov
ins
inc
jmp
mov
ja
sub
xlat
mov
dec
dec
dec
xor
ss
out
imul
dec
adc
add
mov
pop
dec
sub
add
lea
sub
inc
pop
jae
dec
jmp
pop
repz
int3
dec
mov
xor
sbb
sahf
push
cli
mov
mov
jno
sbb
mov
gs
icebp
cmp
add
iret
dec
sar
cdq
fadd
xor
push
inc
out
mov
les
addr16
xchg
daa
cwde
mov
push
not
loop
or
add
jmp
push
push
jbe
bound
xor
jge
cs
(bad)
(bad)
repz
enter
(bad)
or
push
fiadd
sbb
and
sar
or
ins
adc
push
and
(bad)
mov
rol
push
mov
add
jns
hlt
repnz
or
int3
movs
xchg
pinsrw
call
and
mov
add
pop
mov
xor
imul
pushf
in
sbb
sbb
js
sahf
or
sbb
jle
arpl
sub
(bad)
ds
inc
sbb
sub
cmp
sbb
lods
stc
scas
xchg
aam
je
or
retf
xchg
leave
xchg
retf
stos
and
aam
in
test
sbb
rol
cmp
mov
dec
(bad)
push
jmp
(bad)
add
(bad)
call
xchg
push
repz
test
leave
sbb
and
mov
aas
(bad)
stos
sbb
mov
jecxz
mov
sub
int3
xor
or
mov
mov
dec
or
fld
jge
enter
pushf
(bad)
stos
cmps
not
sbb
cmp
dec
xchg
loopne
mov
mov
and
les
xchg
enter
mov
in
sub
pop
movs
daa
out
clc
cmp
mov
fwait
push
sar
xchg
inc
mov
(bad)
movs
enter
retf
pushf
out
add
in
xchg
ins
ficomp
stos
idiv
or
ins
out
jns
and
scas
jmp
sub
inc
jns
inc
nop
pop
mov
jmp
rcr
out
and
cmps
test
jle
sub
or
cmp
sub
lds
retf
add
cld
sub
xchg
jp
ficomp
(bad)
out
popf
repz
xchg
push
jg
adc
test
xor
retf
sbb
dec
sar
pop
pusha
sub
in
or
jne
mov
jle
inc
fs
dec
test
jg
test
ret
or
and
retf
or
adc
test
fwait
ins
adc
out
stos
mov
movs
xchg
std
and
jg
test
cmp
sub
bound
fnclex
cmp
out
xchg
mov
adc
sub
dec
cli
sti
retf
nop
fcomip
imul
sti
jle
dec
aam
in
mov
jp
inc
rcr
mov
mov
xor
ror
adc
dec
out
add
hlt
ja
test
leave
mov
lea
test
jle
pop
jb
fistp
mov
jl
sti
lea
sub
inc
xlat
xchg
sub
out
sub
jp
adc
or
cmp
dec
aas
aam
xor
aad
mov
inc
scas
js
xor
sbb
jmp
jne
push
out
pop
add
cmp
mov
shl
inc
pop
xchg
xchg
inc
inc
push
mov
cmp
inc
xchg
daa
push
or
mov
(bad)
popa
sub
cld
je
iret
stos
or
cwde
sahf
xor
jbe
sbb
push
pop
movzx
std
stc
or
mov
(bad)
fucomp
scas
inc
fwait
pushf
pusha
mov
mov
fisub
retf
clc
and
data16
xor
and
call
dec
std
push
cli
lock
addr16
jmp
loop
and
es
xor
movs
and
mov
out
cs
pop
push
adc
sub
cmc
push
lods
aaa
xchg
push
fisttp
xchg
rcr
pop
xchg
add
jmp
out
mov
stos
and
out
mov
in
(bad)
xlat
mov
ds
ins
mov
ret
inc
test
fild
add
jp
fdivr
cmps
lods
sub
adc
cs
jo
(bad)
push
sub
push
inc
rol
lods
addr16
cmp
and
out
add
push
push
jo
pop
mov
mov
cmp
les
mov
jno
inc
mov
imul
xor
add
test
daa
outs
mov
and
xor
xchg
adc
adc
jmp
adc
xchg
aam
loopne
xor
fidivr
ficomp
retf
pop
xchg
ret
popf
fsub
adc
sbb
sub
and
jmp
inc
pop
mov
xor
inc
mov
(bad)
jecxz
jb
add
sbb
hlt
mov
inc
sub
adc
icebp
shl
sub
rcr
or
add
fs
push
retf
jae
jns
mov
in
mov
inc
rcl
and
scas
fidivr
pop
fld
sub
fcom
sbb
mov
add
mov
pop
out
jp
jne
xchg
mov
xchg
inc
leave
mov
test
call
int
xor
nop
lods
outs
pop
out
gs
adc
pop
mov
mov
jle
jp
lds
call
js
or
xchg
pusha
fistp
inc
retf
imul
inc
adc
xor
sbb
fistp
out
scas
xchg
mov
sahf
aam
xchg
mov
out
mov
(bad)
cld
clc
mov
(bad)
cmp
repnz
push
or
cmps
popa
rcr
and
jne
mov
xor
test
(bad)
ret
cmc
(bad)
xchg
mov
push
fcomp
push
es
mov
popa
mov
imul
fwait
call
sbb
mov
dec
in
or
mov
cmp
lock
loopne
sahf
xchg
cmc
push
dec
or
addr16
adc
add
pop
add
sbb
fwait
mov
or
sbb
arpl
xchg
shr
inc
cmp
or
sub
iret
pusha
mov
lea
sahf
xlat
and
pop
push
les
xchg
cdq
shl
push
nop
or
dec
dec
ja
cmp
in
rol
cld
imul
push
ss
push
cwde
ret
jecxz
clc
stos
ds
out
jmp
or
mov
nop
xchg
cmp
cmc
xor
adc
hlt
cmc
mov
fistp
fwait
test
addr16
xchg
sub
pop
dec
and
xor
leave
cmps
rcr
add
(bad)
scas
fdivrp
out
sub
hlt
loope
add
adc
pusha
out
ret
hlt
dec
xor
std
sbb
pop
inc
dec
outs
cli
imul
dec
mov
inc
mov
inc
out
xor
sbb
pop
dec
rcr
cmps
shl
or
sar
(bad)
into
dec
dec
addr16
sub
jns
in
js
jl
add
mov
ffree
push
mov
dec
cmp
lock
ja
adc
xchg
ins
pop
call
mov
aad
pusha
jmp
dec
fcmovbe
ret
xchg
ja
aaa
sti
test
sbb
fcmovnb
pop
and
and
jae
stc
xchg
and
ins
xchg
xchg
jmp
fist
lock
push
push
ja
daa
les
mov
mov
ss
sbb
jno
(bad)
xor
inc
xor
scas
mov
(bad)
dec
sub
aam
hlt
hlt
push
loop
call
inc
pop
lock
push
pop
push
xor
shr
mov
push
push
mov
and
mov
ins
dec
mov
jb
outs
inc
jno
mov
xor
push
inc
enter
xchg
xchg
call
push
fnsave
sbb
pop
push
push
fbstp
push
xchg
pop
dec
push
cmc
stc
xor
push
pushf
xor
sub
call
rcr
or
push
dec
add
pop
arpl
out
mov
cmc
pushf
test
sub
jecxz
adc
call
es
adc
fcomi
push
ret
(bad)
adc
out
cmp
fs
es
push
mov
xor
es
cdq
inc
sti
mov
sbb
enter
mov
not
pushf
vpminub
outs
retf
push
push
inc
dec
enter
mov
and
fmul
dec
add
aaa
mov
mov
mov
call
jmp
das
mov
jle
in
lods
cmc
pop
add
add
lods
dec
sub
xchg
mov
jnp
cmp
cmp
jmp
pop
push
and
les
jnp
sahf
outs
lds
add
ror
add
leave
mov
ins
or
sbb
test
lods
mov
in
sar
cmps
pop
jns
cmc
popfw
dec
jge
in
inc
jbe
jnp
mov
xchg
movs
mov
pushf
(bad)
push
lahf
call
addr16
lods
mov
xchg
sub
aaa
lock
clc
dec
lea
out
push
scas
xchg
call
mov
add
je
mov
fcomp
add
xor
push
jb
jnp
dec
xor
pushf
retf
adc
int3
stos
pop
imul
push
mov
dec
pop
iret
sbb
movs
leave
call
and
pushf
inc
cmp
add
dec
and
push
sub
jle
cmp
sti
leave
add
mov
cld
jae
adc
pop
mov
enter
aas
jns
pusha
js
imul
pusha
movs
aas
sub
sbb
pop
push
aaa
sahf
test
je
out
dec
gs
lock
mov
push
je
test
aaa
fadd
pop
xor
jg
in
adc
lea
repnz
cmp
mov
cmp
cmp
xchg
adc
sub
stc
je
retf
cwde
cli
dec
sbb
(bad)
sub
icebp
or
out
fld
imul
in
pop
movs
jg
loop
mov
outs
dec
jl
mov
mov
push
enter
das
repnz
xor
lea
loopne
rcr
push
cmp
sub
jle
xchg
aad
fistp
icebp
test
pusha
jb
les
into
xchg
test
jb
ret
mov
int
fimul
pop
out
repnz
add
mov
stos
fsub
test
jecxz
sar
sti
push
xor
shr
mov
add
arpl
imul
fnsave
sbb
push
adc
pop
aam
mov
in
xor
lock
xor
cli
mov
inc
lods
shl
jne
pop
stos
jle
mov
pop
jmp
jns
jno
enter
push
or
aaa
inc
cli
out
lods
(bad)
arpl
scas
xchg
inc
lods
mov
jnp
pop
enter
leave
lea
inc
push
jo
mov
push
ds
repz
hlt
mov
adc
xor
ins
xor
and
and
pop
pop
mov
push
pop
pop
jmp
mov
icebp
xor
sbb
sti
clc
add
add
test
mov
cmp
cmp
push
sub
(bad)
push
cmp
adc
stc
mov
push
push
out
inc
xor
dec
fimul
inc
add
cli
or
(bad)
aam
shr
aaa
or
adc
daa
jae
loop
pop
cwde
popf
in
or
rcr
xchg
fnstcw
test
mov
(bad)
jmp
imul
add
xlat
xor
jbe
mov
sub
pushf
push
repnz
mov
cdq
or
outs
sti
movs
mov
xchg
mov
sub
xlat
call
hlt
mov
pop
test
xchg
mov
out
mov
jmp
sbb
retf
dec
rcl
or
mov
(bad)
dec
push
ror
shr
or
or
pop
dec
or
inc
xchg
imul
data16
fwait
push
ror
dec
mov
sub
add
fist
imul
cdq
(bad)
mov
into
inc
or
cmp
idiv
cwde
lahf
xor
push
pop
dec
pusha
es
(bad)
addr16
adc
push
idiv
(bad)
imul
xor
push
add
cmp
inc
inc
xor
ss
pop
dec
cmps
ins
ss
nop
cmp
iret
fist
mov
xchg
pop
mul
sub
sub
jl
in
jp
dec
int
adc
in
jmp
mov
mov
test
push
push
test
fnstenv
fsubr
dec
lea
push
xchg
in
mov
mov
push
cmc
mov
mov
daa
cmp
call
out
jnp
retf
test
loopne
adc
or
xor
pop
fsubr
mov
je
ss
jg
(bad)
jne
into
call
sahf
aam
jbe
mov
fst
loop
nop
dec
ror
pushf
shl
dec
and
jl
xchg
(bad)
dec
pusha
imul
xlat
cmp
sbb
xchg
(bad)
mov
(bad)
(bad)
mov
loop
mov
aam
jnp
and
call
xchg
lods
aam
pop
and
jbe
aaa
(bad)
xchg
mov
or
ds
shl
push
out
outs
aas
daa
movaps
dec
fcmovnu
(bad)
inc
inc
test
cmp
outs
shl
dec
inc
ja
pop
push
jmp
test
xor
mov
mov
enter
clc
add
xor
jmp
std
and
je
jb
(bad)
and
pcmpgtb
cmp
in
jmp
add
(bad)
dec
xchg
retf
ins
jo
out
(bad)
aam
pop
cmps
outs
and
hlt
dec
or
punpckldq
mov
and
dec
push
mov
cmp
enter
out
and
imul
and
es
pop
push
jle
shl
lock
mov
push
ja
sbb
outs
adc
adc
retf
test
fsubr
xlat
jle
icebp
inc
add
mov
out
fbld
cli
and
call
popf
inc
mov
inc
pop
xchg
sub
adc
(bad)
das
(bad)
(bad)
xchg
sub
les
imul
aad
dec
inc
jge
and
sub
fdiv
fstp
mov
pusha
jecxz
pop
dec
sbb
ja
repz
sub
fist
or
push
mov
pop
in
inc
fld
jne
div
mov
adc
xor
bswap
push
out
jne
mov
(bad)
jp
or
test
inc
mov
or
adc
cmp
fadd
xor
inc
(bad)
call
in
jge
scas
xchg
in
mov
div
or
jg
aad
jg
inc
shr
or
mov
ins
aas
mov
ret
aas
dec
fist
es
(bad)
iret
and
daa
jns
pop
and
push
jb
fnstenv
adc
add
dec
xor
xor
xchg
fs
cmp
jg
gs
pop
popa
jmp
cmp
cmp
popa
jb
imul
hlt
inc
and
retf
xchg
sub
pop
cmp
sbb
stos
sbb
pop
push
out
fld
xchg
fiadd
hlt
push
or
sti
inc
loop
test
js
jmp
and
in
jne
sbb
push
mov
xchg
inc
pop
mov
int
adc
rol
pop
adc
jb
jl
pop
mov
movs
mov
pop
and
mov
mov
dec
sub
fimul
mov
lahf
fld
push
pop
mov
sbb
jno
and
(bad)
cmp
retf
push
es
aam
cmp
pop
loope
ins
out
lods
sbb
sub
dec
dec
mov
mov
in
cmps
nop
test
call
cmp
xor
jle
mov
enter
mov
inc
mov
lods
push
in
sbb
out
mov
xchg
idiv
mov
inc
(bad)
mov
inc
gs
ret
in
push
mov
mov
add
add
ror
je
in
or
cs
cmp
jp
push
les
retf
mov
mov
mov
push
dec
sbb
sub
lods
inc
dec
enter
sub
mov
or
pop
stos
fdivr
call
sbb
in
jmp
outs
mov
outs
test
ret
(bad)
jmp
aas
mov
sub
push
xchg
inc
fist
mov
mov
push
sub
aad
(bad)
cmps
jge
jecxz
stc
mov
mov
fmul
pop
imul
pop
adc
pop
loop
paddb
lea
clc
in
cmp
jne
sub
mov
in
int
mov
mov
(bad)
xchg
push
sar
or
xchg
add
les
(bad)
mov
scas
pop
in
mov
retf
inc
ins
jl
add
pop
xor
inc
stos
in
inc
sub
gs
dec
add
mov
retf
push
fnstenv
sub
in
mov
mov
xchg
mov
call
push
xchg
and
and
push
xor
mov
ss
and
inc
fisttp
in
imul
dec
xchg
in
mov
or
xchg
pop
arpl
pop
fist
inc
dec
mov
add
inc
xor
cld
jmp
xlat
pop
jmp
push
dec
mov
iret
pop
pop
inc
clc
mov
mov
cmp
fistp
xchg
cmp
adc
cli
lods
sbb
pop
scas
add
loop
push
shr
out
popf
pop
add
cmp
add
sub
push
repnz
cmp
add
inc
inc
or
shr
pop
inc
inc
lahf
cmp
call
dec
mov
test
rcl
jecxz
jbe
fs
fsubr
(bad)
sahf
fwait
sbb
or
mov
out
push
pop
pop
enter
and
dec
enter
mov
enter
hlt
jbe
dec
stos
jmp
sub
in
mov
add
xchg
stc
jle
inc
aam
inc
ret
ror
div
mov
rol
pushf
inc
jg
sub
cs
call
sbb
or
mov
fidiv
loop
adc
out
ret
inc
xor
xchg
or
push
push
or
iret
test
sub
xchg
stos
retf
test
js
pop
std
xchg
ins
mov
jle
dec
test
jmp
push
cmps
repz
sbb
sub
adc
mov
sbb
or
inc
inc
xor
sahf
cld
pop
inc
std
xchg
mov
outs
cmp
xor
ret
cwde
int3
ret
xchg
sbb
cmp
inc
mov
xchg
out
cmp
sbb
xor
pop
cmp
shl
adc
or
(bad)
(bad)
cmp
push
jecxz
call
xchg
test
enter
inc
int3
fisubr
repz
call
stos
lds
push
adc
dec
mov
enter
imul
movs
inc
arpl
dec
cmp
leave
call
and
jp
outs
sub
out
xchg
(bad)
into
lahf
xchg
std
sti
stos
and
icebp
cwde
in
xchg
out
xchg
mov
inc
imul
mov
pop
xchg
push
int
dec
xor
hlt
sar
dec
repz
mov
popf
mov
sub
call
in
sbb
les
inc
cmp
lahf
sbb
adc
rcr
jp
in
dec
dec
ss
cmps
clc
fs
pop
inc
or
jnp
outs
cld
mov
fs
ret
mov
mov
pop
and
hlt
push
inc
dec
pop
add
push
lds
fs
mov
iret
or
mov
not
cmps
mov
xor
cwde
mov
cmp
nop
(bad)
lods
adc
mov
jmp
sbb
shl
div
push
out
ret
sahf
fsub
cmp
inc
adc
int
das
inc
xor
dec
mov
sbb
scas
jl
add
imul
in
cld
inc
lock
push
push
fcmovu
push
cdq
fadd
xchg
mov
adc
nop
sbb
sbb
adc
pop
pop
arpl
pop
jbe
daa
in
into
lahf
outs
sbb
int
sub
sahf
inc
mov
jno
cmp
nop
cdq
xor
push
mov
vmread
mov
cs
in
inc
lahf
jg
lds
in
inc
or
(bad)
setbe
daa
push
cmps
jae
call
aad
div
push
es
dec
push
cmp
fldcw
or
mov
inc
xchg
add
jmp
mov
shr
aas
pop
test
sbb
or
jecxz
aaa
mov
xor
dec
js
cmp
xchg
std
sbb
cs
stos
xchg
sub
(bad)
lods
dec
sub
retf
lds
cmp
sub
fidivr
cdq
cwde
mov
loopne
dec
push
adc
inc
xor
and
inc
outs
int3
pop
jge
mov
dec
imul
repz
xor
aaa
ror
(bad)
or
retf
pusha
enter
outs
nop
inc
int
jns
mov
sub
sub
xor
sar
jge
jnp
movs
push
test
test
mov
jns
cmp
pop
(bad)
or
sub
push
inc
sub
add
js
dec
pop
push
mov
sub
jle
mov
and
pusha
pop
loope
not
jg
inc
nop
push
dec
iret
pop
jmp
cmp
push
arpl
cwde
loopne
xlat
cmp
outs
fidiv
mov
adc
push
test
dec
ror
pushf
inc
loope
cdq
add
stc
and
push
mov
fs
shr
mov
cwde
cli
enter
sahf
mov
sbb
(bad)
repz
mov
js
push
jmp
loop
cli
mov
add
inc
in
data16
mov
test
and
xchg
adc
sub
pop
test
ftst
mov
or
scas
mov
fild
lods
cmp
xchg
je
btc
inc
pop
(bad)
sbb
xchg
xor
shl
in
mov
jo
std
xchg
test
pop
mov
pop
jmp
test
cld
mov
sub
jle
jmp
movs
ja
clc
mov
int3
xchg
ror
cs
icebp
(bad)
out
sub
stc
fstp
mov
stos
hlt
xchg
div
pop
inc
sbb
mov
in
mov
inc
(bad)
jge
in
push
in
test
xor
(bad)
adc
sub
xchg
in
lods
neg
inc
adc
in
test
and
sbb
cmp
pop
mov
(bad)
cld
cs
push
mov
rol
adc
daa
fild
mov
test
(bad)
ud1
push
iret
pusha
aad
into
and
adc
dec
es
dec
aas
sub
add
lea
sbb
ror
mov
call
sbb
mov
pushf
out
lods
sub
or
out
push
repnz
mov
adc
repz
xor
pop
leave
inc
arpl
add
fldcw
xor
and
outs
xchg
sbb
mov
outs
push
les
sbb
cmps
xchg
xchg
mov
data16
sub
aad
hlt
mov
imul
dec
repz
add
(bad)
jecxz
js
aad
hlt
mov
jmp
pop
out
and
and
bswap
jecxz
aad
mov
retf
je
fsubr
adc
sub
xchg
cmps
hlt
xchg
daa
icebp
test
and
mov
retf
pusha
or
ret
jge
or
cmps
inc
xchg
dec
inc
int
mov
iret
mov
xchg
xchg
fsubr
in
cmp
cdq
cmc
and
popf
jns
aam
ret
add
xor
and
mov
mov
pusha
retf
cmp
ror
xchg
out
ret
sahf
xchg
and
jl
mov
ja
jmp
cmp
pop
inc
lea
mov
mov
test
enter
sbb
mov
pop
adc
iret
out
sub
imul
mov
pop
cmp
fistp
or
fbld
fsub
xchg
sbb
push
cmc
fnstsw
sbb
inc
xor
sub
add
leave
jl
mov
mov
test
add
ret
mov
sbb
mov
and
inc
(bad)
mov
adc
push
cmp
mov
sahf
mov
jnp
test
mov
aam
xor
in
imul
(bad)
mov
out
cli
inc
loope
ins
sbb
(bad)
cmp
neg
aas
sbb
aam
mov
push
rcr
inc
jmp
pop
mov
cmp
dec
mov
mov
fwait
xchg
and
loopne
leave
pop
xchg
inc
mov
inc
xor
jecxz
dec
push
mov
loop
mov
push
sub
rcl
cs
or
cmp
xchg
xchg
ja
les
(bad)
jbe
scas
xor
inc
add
pop
jo
aaa
pop
js
xchg
push
dec
mov
loop
pop
arpl
sub
pop
gs
adc
xor
jge
fmul
adc
loopne
loopne
je
jo
arpl
sbb
cmp
hlt
and
cmp
dec
sbb
inc
ins
scas
jl
adc
rcl
(bad)
inc
mov
mov
push
jg
mov
mov
dec
es
loopne
aad
pop
push
mov
mov
jns
pusha
or
xor
scas
lock
sahf
pop
sub
jns
loope
stos
add
pop
das
pushf
popf
mov
xor
xchg
inc
xchg
jmp
imul
lea
push
jge
repnz
xor
push
push
int3
call
pop
mov
add
push
and
xchg
dec
mov
les
rol
clc
sub
mov
mov
ret
dec
addr16
imul
shl
movs
ja
pop
call
or
adc
cmps
and
retf
xchg
imul
int
popa
xor
clc
fistp
ret
fimul
push
xchg
sub
pop
sbb
sti
push
ins
jne
loopne
rol
ins
rcl
stos
xor
adc
test
fwait
sub
cmp
nop
xor
popf
test
inc
cmps
jmp
aaa
lock
retf
imul
movs
outs
and
cmps
pop
dec
dec
jecxz
xlat
xor
fnsave
add
mov
jo
in
mov
dec
aad
xchg
mov
data16
fistp
leave
mov
dec
movs
popf
fst
cmps
ins
xchg
sub
imul
(bad)
je
sub
push
stos
movs
mov
adc
add
push
push
mov
mov
addr16
(bad)
pushf
sbb
mov
rcr
dec
jg
dec
test
movs
stos
ja
loopne
repz
aas
(bad)
push
cmp
dec
shl
push
ds
add
hlt
xor
dec
xor
arpl
aam
inc
sub
pop
and
cmp
les
push
xor
ret
imul
mov
mov
shl
ret
pop
jecxz
pop
or
aas
add
pop
icebp
lahf
(bad)
pop
mov
sti
dec
jb
jb
inc
call
add
mov
and
outs
js
(bad)
jae
ret
pop
dec
cdq
out
push
jg
loopne
cmp
cmp
div
loopne
dec
adc
not
xchg
test
cld
ret
xchg
pop
jle
pusha
sti
push
push
popa
dec
push
xor
mov
push
lock
stos
ret
jbe
call
inc
ret
or
ins
retf
xchg
dec
xor
sub
push
aad
dec
jg
stos
ins
(bad)
and
fcomp
pushf
mul
sub
aaa
mov
fidiv
iret
(bad)
retf
pop
pop
xlat
cdq
cmp
xchg
into
sub
mov
adc
outs
aam
out
cli
ret
lock
or
sub
mov
test
push
daa
stc
push
out
mov
int
push
jmp
inc
jbe
dec
add
shl
pop
push
sub
inc
sub
fbstp
jne
cmp
push
out
daa
test
pop
or
jmp
jno
outs
mov
or
pusha
icebp
dec
int
dec
sbb
jl
ror
bound
mov
imul
loop
xor
int
movs
stc
repnz
xor
addr16
pop
mov
outs
lock
ret
dec
xchg
jmp
lahf
mov
ds
punpckhdq
icebp
popa
ds
call
add
push
pop
and
cdq
scas
jae
lods
ret
sub
jmp
test
nop
jnp
sub
xor
add
mov
and
dec
or
hlt
int3
sub
in
popf
pop
sub
test
aas
cmp
fsubr
fwait
xchg
les
push
jbe
and
and
sti
push
push
or
push
out
icebp
mov
xor
mov
inc
aaa
sbb
loopne
pushf
nop
ret
xchg
ret
ds
fisubr
push
jl
call
cmp
jmp
jmp
cmp
inc
mov
mov
stc
into
inc
xlat
in
jge
out
and
inc
dec
adc
jp
retf
jne
adc
cmp
retf
nop
rol
push
(bad)
outs
call
(bad)
aam
inc
movs
stos
mov
mov
ins
dec
add
xor
out
xchg
test
cmp
sub
mov
(bad)
scas
gs
icebp
out
pop
mov
xchg
arpl
clc
loopne
cmp
add
rcl
add
jge
(bad)
(bad)
je
jno
gs
jmp
mov
jne
add
rol
rcr
cmp
call
sbb
fs
in
sbb
xor
bound
cmps
scas
mov
xor
or
data16
jp
xlat
sbb
push
adc
mov
mov
mov
dec
idiv
xor
inc
cmp
mov
inc
xor
and
addr16
test
pop
movs
mov
in
out
fsubp
sub
dec
pop
cs
cmp
push
ret
ror
movs
sbb
dec
mov
inc
clc
mov
imul
shl
movs
std
pop
xor
jmp
mov
xor
int3
imul
loopne
ss
in
jg
in
cmp
dec
loopne
repnz
inc
jg
cld
mov
retf
adc
lahf
sub
lahf
xchg
gs
movs
repz
out
js
out
in
sub
pop
sub
mov
add
pop
pop
mov
push
ror
cld
pop
mov
cmp
cli
adc
inc
arpl
shr
(bad)
fisub
addr16
inc
jmp
mov
jmp
mov
les
dec
sub
test
in
ins
mov
sbb
sbb
aaa
in
ja
addr16
(bad)
sbb
xchg
dec
push
sub
mov
sub
jg
adc
out
inc
xor
loop
jo
push
dec
sbb
sub
push
inc
add
(bad)
push
push
mov
popa
sahf
outs
ss
test
mov
mov
cmp
sbb
sub
mov
adc
push
xor
scas
fs
mov
shl
cmp
xchg
cdq
js
jne
mov
fcom
xabort
daa
imul
dec
ds
cli
leave
jl
mov
nop
out
xchg
test
or
inc
jbe
test
(bad)
xchg
popa
mov
in
enter
scas
or
lahf
ret
sub
or
mov
cmc
xchg
mov
sub
push
retf
ins
mov
outs
imul
leave
es
mov
pushf
sub
aad
(bad)
call
sub
sub
jmp
mov
inc
cmp
leave
stc
mov
ds
mov
lea
mov
sar
dec
adc
shr
mov
mov
stos
jmp
add
add
push
dec
xlat
retf
jnp
lahf
pop
mov
int3
int3
jg
cli
inc
out
and
jb
sbb
movs
mov
push
pushf
sub
ja
jbe
ins
cdq
mov
aas
jmp
pushf
jmp
ret
pop
xchg
cwde
mov
int3
mov
shr
or
pop
jb
cmp
sub
cmp
icebp
mov
push
adc
sbb
add
mov
pop
sub
add
arpl
pop
mov
xor
push
and
fwait
adc
or
xchg
fild
sbb
shl
pop
sub
cwde
scas
sahf
gs
lods
cdq
int
pop
mov
pop
jae
leave
or
and
dec
shr
jae
jg
aad
outs
mov
or
push
retf
lods
cmp
sub
mov
enter
lahf
add
ins
cmp
push
std
imul
cmp
mul
mov
cmp
mov
mov
mov
and
sbb
cmp
lods
(bad)
test
cmc
enter
mov
add
xchg
and
enter
add
jbe
in
push
jp
test
cld
xchg
fsubr
sub
jecxz
pushf
icebp
inc
cmp
jno
push
jne
int
cmp
lea
adc
or
adc
test
pop
sub
aad
addr16
xchg
fwait
xlat
aam
or
xchg
xor
ins
add
(bad)
adc
div
mov
mov
dec
add
inc
mov
iret
repnz
mov
jmp
and
out
rcl
cmps
in
loopne
push
cmp
call
jno
(bad)
pop
js
loopne
mov
push
jecxz
xchg
add
jecxz
mov
gs
add
fcom
xor
fld
jmp
or
movs
(bad)
fidiv
stos
mov
(bad)
je
jg
sahf
or
into
xchg
sbb
and
dec
cmps
mov
ror
jns
pushf
(bad)
sbb
adc
push
adc
test
mov
pop
dec
inc
add
ins
in
inc
mov
and
xor
xchg
and
mov
mov
cwde
add
inc
pop
jne
lods
and
jb
or
push
sub
inc
aaa
sar
test
push
cmp
mov
fs
cmps
sub
sub
cli
push
into
gs
ja
repnz
pop
sahf
sbb
dec
jmp
push
ret
cmp
pop
cdq
jle
sub
xchg
repz
std
mov
rol
das
test
imul
and
adc
sub
mov
pop
clc
out
int3
mov
sbb
test
sub
rcl
pop
sub
inc
imul
hlt
push
pop
xor
jle
out
or
in
add
dec
pop
sti
push
lock
in
pop
iret
sub
ds
nop
cdq
fsub
ja
scas
out
(bad)
ror
inc
fcmovb
mov
int3
mov
cwde
daa
adc
add
mov
outs
push
iret
aas
(bad)
lahf
cli
dec
rcr
imul
(bad)
cmps
lds
cmps
call
and
cli
xor
into
xchg
push
fst
add
arpl
aaa
mov
mov
out
xchg
cdq
cmps
sbb
push
mov
out
cmp
add
fcmove
dec
sub
sub
in
xor
cmp
pop
cmps
adc
pusha
mov
out
ret
nop
sar
mov
aad
sub
sub
inc
outs
mov
adc
jmp
xchg
lea
pop
push
lock
rcr
movs
out
repz
loopne
inc
lods
mov
repnz
in
mov
mov
push
mov
jp
pop
cmp
movs
add
dec
pop
mov
mov
iret
ret
out
push
sar
sbb
rcl
pop
mov
mov
call
fprem
(bad)
sbb
mov
fsub
ret
and
push
dec
imul
xor
or
sbb
jl
les
mov
dec
test
xlat
fmul
retf
aas
movs
xchg
pop
ins
pushf
(bad)
pushf
movs
or
aam
inc
jnp
shr
imul
jmp
retf
rol
enter
or
xlat
inc
and
inc
out
inc
mov
mov
or
mov
and
xchg
aaa
stc
jb
loopne
popf
je
dec
retf
pop
push
push
mov
dec
repnz
jl
rol
add
ficom
jbe
mov
dec
xor
retf
mov
and
iret
xor
les
push
xor
or
fild
out
or
sub
dec
jge
call
push
cmps
std
fnstsw
mov
outs
inc
adc
mov
xlat
cmc
movs
lea
push
(bad)
mov
dec
add
ss
cld
adc
ja
sub
stos
test
cmp
push
ins
pop
jno
jb
xchg
test
push
adc
mov
push
int
ja
or
push
dec
hlt
pop
cmp
test
repnz
fimul
enter
in
pop
and
in
aaa
test
jns
fs
sti
inc
adc
icebp
gs
xor
ret
das
jge
mov
popf
mov
pusha
call
cmp
push
mov
cli
dec
sbb
mov
pop
nop
mov
mov
mov
(bad)
mov
and
push
adc
ja
mov
int
mul
outs
pop
pop
test
xor
cmp
mov
aam
iret
pop
xor
add
sar
adc
cmp
aaa
inc
pop
push
add
pop
or
xor
adc
(bad)
lods
push
stc
jnp
movs
gs
push
outs
fwait
outs
mov
and
movs
adc
push
leave
mov
das
nop
cmp
bound
add
inc
xchg
pop
xlat
adc
fiadd
sahf
sub
out
dec
std
rol
pushf
pop
xchg
retf
inc
aam
es
xchg
cmp
push
call
nop
aam
inc
ret
iret
jne
cdq
ret
cmp
sbb
dec
xchg
inc
push
stc
outs
aad
ret
enter
mov
adc
int3
arpl
mov
std
jmp
aas
out
mov
call
aaa
movs
sti
enter
jle
xchg
ret
mov
(bad)
enter
ins
idiv
add
mov
(bad)
in
xchg
movs
faddp
test
mov
ficomp
xor
clc
and
and
or
xlat
std
pop
pop
inc
xchg
jae
fidivr
sbb
jl
popa
cmp
push
leave
mov
addr16
dec
and
jbe
and
jge
xor
push
mov
retf
mov
or
xor
mov
mov
fdivr
jmp
push
lock
aad
rsqrtps
fnsave
mov
(bad)
lods
les
mov
je
cmps
and
jb
call
mov
pop
aaa
mov
mov
inc
xchg
jbe
stc
push
jbe
dec
mov
lahf
dec
lods
xchg
add
div
aas
arpl
(bad)
jb
das
ja
mov
xchg
rol
sub
cwde
in
sbb
jecxz
mov
sbb
add
push
test
dec
mov
sbb
outs
sub
std
test
shr
jecxz
or
call
fistp
pop
jg
sub
dec
lods
xchg
inc
ja
nop
lods
ins
aad
sbb
pop
push
pop
fcomp
not
jge
dec
inc
xchg
(bad)
icebp
dec
adc
cmp
arpl
jge
and
outs
jge
int
sub
or
repz
cld
cmp
xchg
pop
rcl
sti
sub
push
ja
in
mov
pop
mov
add
or
clc
xchg
ror
adc
or
test
mov
push
cmp
cld
cmp
inc
adc
inc
div
imul
stc
sub
aas
jb
lds
cmps
shl
cmp
mov
sar
repz
call
jb
cdq
or
mov
sbb
mov
mov
in
push
mov
lock
mov
out
pop
and
lock
sbb
mov
push
std
mov
movs
popa
or
das
fadd
jnp
mul
div
jbe
or
bswap
clc
cld
ds
and
adc
add
(bad)
fucomi
jnp
jg
or
cmps
sub
and
rcr
int
push
test
or
jno
(bad)
lods
ret
jp
mov
cld
xchg
cmp
sti
push
fsub
add
inc
test
or
xor
xchg
inc
lahf
cwde
popf
mov
imul
ins
xchg
xchg
call
push
retf
dec
aaa
sahf
test
cs
je
cmp
fcomi
pop
mov
mov
sti
dec
aaa
test
mov
adc
ins
in
mov
pop
push
inc
and
ss
xchg
clc
cmc
mov
xor
inc
push
or
aaa
movs
mov
popa
jle
in
sub
lahf
jne
inc
dec
fs
or
pop
jbe
mov
clc
mov
(bad)
repnz
and
loop
jo
sub
mov
push
aad
add
pop
ins
mov
out
mov
cwde
cmp
adc
(bad)
fsubr
clc
jle
or
imul
aaa
lods
mov
and
call
inc
mov
aam
rcr
out
fstp
scas
mov
popa
cmp
mov
xor
push
into
sub
(bad)
xlat
sbb
cmp
xor
rcl
fbstp
jnp
std
push
inc
sub
jge
ins
or
iret
xchg
rcr
(bad)
adc
in
mov
mov
cmp
mov
fsubp
inc
adc
out
movs
sbb
or
cmp
mov
sar
inc
mov
sbb
push
into
dec
mov
dec
mov
popa
popa
dec
in
mov
mov
pop
out
cmp
pop
mov
adc
cmp
test
out
sub
into
gs
pop
sbb
(bad)
ss
(bad)
jmp
jmp
ret
sub
popf
mov
push
sub
fldenv
sahf
rcl
(bad)
adc
add
sahf
shl
ss
dec
pop
pop
cmp
push
in
sub
and
ss
mov
shr
jecxz
mov
shl
cmp
cmps
imul
addr16
test
dec
jbe
fsubr
or
loop
jge
push
cmp
inc
das
xchg
int3
ds
jecxz
sbb
outs
stos
push
je
xlat
test
hlt
cmp
pushf
push
xchg
repnz
push
int3
or
xor
jbe
jle
(bad)
push
xor
or
ins
push
in
fimul
sti
and
inc
jl
jg
cwde
test
imul
adc
push
or
ret
xor
ss
pop
xchg
aad
test
xor
stos
retf
repz
arpl
mov
dec
nop
mov
pop
pop
add
inc
adc
push
add
push
mov
mov
dec
fstp
call
jp
jno
retf
test
push
jo
and
(bad)
movs
(bad)
mov
div
mov
xchg
fcmovnbe
mov
or
cwde
jge
lds
mov
aaa
mov
jecxz
ins
(bad)
rol
mov
or
aam
ds
(bad)
arpl
sbb
hlt
xchg
mov
jnp
sub
test
mov
lds
bound
add
xchg
mov
xlat
int
bound
push
dec
inc
pop
or
movs
repz
sub
jmp
sti
fldenv
jbe
retf
inc
addr16
adc
std
xor
sub
xchg
push
(bad)
mov
jb
loope
jmp
jmp
mov
dec
dec
pop
fnsave
idiv
nop
and
push
push
inc
(bad)
ret
cmp
cs
add
mov
push
push
fmul
movs
aaa
out
or
test
loope
pusha
inc
sbb
jge
aam
repnz
mov
sbb
and
inc
add
rcr
sub
(bad)
push
sbb
(bad)
mov
fprem
or
add
imul
xchg
or
and
add
imul
rol
test
mov
dec
cmp
push
dec
out
push
pop
aam
into
mov
pop
sbb
dec
jecxz
(bad)
mov
loopne
cdq
xchg
adc
cmps
repz
add
add
sub
mov
xchg
adc
cwde
dec
pop
dec
and
jb
dec
test
mov
push
test
xchg
xchg
dec
out
cwde
(bad)
inc
cmp
fucomp
(bad)
outs
rcr
sub
or
adc
push
cmp
or
jo
xor
sub
mov
jmp
out
in
pop
outs
jmp
jg
pop
cwde
push
aam
and
leave
xlat
dec
sub
call
mov
aas
xor
jle
fwait
xor
cdq
call
icebp
call
dec
pop
jno
stos
cwde
sub
sahf
aas
and
mov
daa
shl
aas
and
test
test
cwde
lods
push
leave
mov
jle
(bad)
and
xor
cli
dec
push
add
test
in
sbb
xchg
stos
in
jg
cs
ins
mov
sbb
lock
push
shr
in
mov
fwait
idiv
les
jle
push
mov
dec
into
xor
pushf
inc
xor
popa
add
aaa
fwait
jbe
and
xchg
jb
loop
lea
sbb
das
fst
xor
test
sbb
push
add
add
nop
push
movs
mov
push
aam
outs
in
icebp
pusha
scas
inc
lods
and
or
retf
imul
popf
sbb
ret
or
xor
mov
dec
scas
gs
dec
enter
dec
sub
int
xchg
cmp
jae
dec
sbb
mov
and
mov
push
fmul
inc
rol
aaa
nop
ja
xor
pop
xor
push
push
sub
test
shl
mov
(bad)
int
fwait
mov
call
or
mov
push
loopne
das
sar
mov
cli
jge
cmp
idiv
daa
ret
mov
xor
data16
sbb
sub
sti
ins
and
jae
dec
and
xchg
pusha
loopne
pop
xor
xor
adc
add
(bad)
neg
dec
dec
scas
or
pop
out
mov
imul
in
fsincos
mov
mov
mov
popa
rcr
cli
xor
repnz
xchg
push
mov
cmps
into
popf
loope
ins
push
leave
nop
int3
or
in
mov
movs
lds
mov
cli
aas
mov
call
adc
fs
loope
in
xchg
into
xchg
inc
inc
scas
test
jecxz
scas
mov
sub
adc
sahf
fs
fcom
sbb
mov
mov
mov
aaa
mov
mov
add
or
icebp
push
pop
sbb
push
outs
ror
push
fldcw
xchg
sbb
mov
pop
es
mov
out
movs
es
mov
cmp
cli
imul
cmp
bound
mov
das
xor
in
fadd
popf
test
fiadd
sbb
cmp
add
retf
ja
(bad)
cmp
jb
mov
fsub
fisubr
call
icebp
xchg
lea
(bad)
adc
loop
jmp
loop
scas
push
inc
pop
das
pushf
ja
js
sbb
cmp
pop
sbb
test
cli
xchg
test
div
shl
fisttp
fimul
xlat
(bad)
int3
dec
loope
movs
mov
mov
cwde
push
or
mov
sub
mov
(bad)
pop
scas
pop
lahf
aas
push
cli
ret
scas
in
sbb
dec
push
push
aaa
int3
xlat
fcom
jno
in
clc
movs
dec
mov
aaa
add
sbb
jbe
cmc
data16
pop
fcmovnb
in
xchg
and
mov
jno
push
loop
(bad)
in
push
sub
inc
fs
or
into
lods
in
jns
loopne
pop
pop
jne
mov
mov
arpl
ins
pop
stc
and
fsubr
xchg
cmp
out
in
in
leave
jo
mov
jnp
fisubr
pop
sbb
push
pop
lods
out
xchg
push
ret
loope
pop
iret
fisub
mov
outs
ins
fld
adc
sar
and
jl
cmova
fstp
fdiv
aaa
stc
cmp
jnp
es
xor
xchg
and
retf
stos
push
repnz
(bad)
clc
push
xchg
pop
jmp
pop
adc
mov
ret
jbe
sti
mov
cs
popf
xchg
stos
and
scas
mov
cs
inc
mov
or
or
mov
add
and
in
sbb
cmc
cmp
xchg
cmp
jmp
mov
sbb
mov
cmc
mov
jg
jmp
jbe
cmp
ret
sbb
leave
(bad)
pop
push
jg
mov
and
js
(bad)
cli
push
out
idiv
ret
xor
fst
cmps
and
add
call
aad
adc
push
or
loop
jle
xchg
xchg
push
(bad)
retf
cmp
pop
jp
inc
fdivr
mov
add
xchg
inc
scas
or
cmps
sub
cld
jno
repnz
cmc
adc
fimul
cwde
dec
imul
xchg
lock
and
jnp
out
pop
movs
cli
push
shr
cld
mov
pop
or
inc
test
add
xchg
idiv
imul
es
jns
xchg
fs
fild
aad
pushf
jb
fcomp
sti
setge
cmps
push
iret
out
mov
aas
test
mov
es
sub
jns
call
adc
mov
data16
sbb
xor
jp
cli
das
cmp
(bad)
xor
je
push
jno
and
out
int3
mov
ret
adc
pop
stc
jne
xor
mov
jecxz
xchg
movs
bound
cld
xchg
jp
inc
mov
in
call
popf
mov
xor
jmp
inc
and
push
ror
pop
inc
test
dec
fild
shl
push
addr16
idiv
mov
jno
push
imul
lea
mov
add
test
mov
inc
mov
jle
cld
mov
mov
mov
sub
mov
mov
jmp
xchg
mov
or
sub
mov
fnstsw
add
nop
movs
dec
xor
sub
out
inc
sar
jo
sbb
popf
or
cmp
mov
xchg
cs
(bad)
popa
and
outs
sub
jmp
push
daa
imul
cld
test
adc
test
ins
loopne
shr
pop
test
(bad)
mov
adc
test
xchg
aas
dec
mov
aad
in
jne
add
jmp
cmc
lods
iret
(bad)
stos
mov
adc
or
sbb
adc
push
fidivr
inc
retf
jne
es
(bad)
inc
mov
xchg
sbb
inc
push
lods
adc
in
and
mov
popf
(bad)
int3
push
aas
pusha
jge
adc
and
push
xchg
aas
sub
je
in
push
pop
daa
xchg
xor
mov
cmp
(bad)
in
scas
xor
mov
inc
out
sub
jg
adc
movs
pushf
adc
es
pop
inc
and
pop
dec
pusha
gs
pop
(bad)
dec
in
mov
jne
pop
sub
into
jle
or
mov
in
mov
pop
adc
addr16
sbb
pop
xchg
stc
test
and
popf
mov
es
xchg
mov
xchg
jns
xchg
lahf
cmp
push
or
enter
test
and
pop
mov
xor
add
adc
out
daa
adc
fcom
in
test
xchg
repnz
push
pop
jnp
or
adc
dec
or
mov
test
mov
test
call
push
mov
xchg
mov
iret
xor
xor
pop
sbb
adc
inc
outs
(bad)
(bad)
sbb
adc
push
cwde
test
push
(bad)
push
clc
sahf
mov
mov
pop
inc
mov
lods
ja
inc
cmp
pushf
and
pop
xchg
mov
loopne
test
shl
(bad)
sbb
lock
cmps
mov
cdq
scas
imul
imul
pop
idiv
xchg
fisub
mov
call
and
jmp
xor
jge
idiv
sbb
mov
pushf
push
inc
nop
mov
push
vrcpps
sti
mov
in
mov
jle
mov
lahf
push
mov
loopne
jge
stos
std
fisttp
mov
sbb
inc
jg
leave
fsub
dec
aaa
out
(bad)
sub
in
loopne
sub
mov
pop
mov
mov
test
addr16
mov
(bad)
rcr
fsubr
jmp
lds
loopne
in
inc
movs
les
out
dec
xor
dec
xor
sbb
neg
fsubr
dec
out
cmp
je
retf
push
and
data16
cmp
mov
xor
aam
or
mov
jp
push
lods
cmp
xor
retf
out
aam
jle
outs
mov
sbb
adc
or
inc
pop
mov
dec
fs
xchg
je
mov
sub
fst
inc
out
stos
loope
adc
inc
xor
rcr
jp
movs
adc
jge
fdivr
hlt
add
cdq
push
dec
pop
cmp
push
pop
jns
push
ror
push
aas
xor
mov
and
and
adc
fdivr
mov
xor
xor
leave
retf
call
mov
xor
jne
pop
lahf
sar
setno
popf
iret
sbb
(bad)
fisubr
sti
xchg
std
mov
xor
jp
sahf
(bad)
mov
les
xor
(bad)
clc
xor
fidivr
adc
jge
movs
push
fwait
or
ja
or
push
sub
xchg
or
cmp
daa
sbb
pop
mov
test
xlat
fimul
sub
push
loope
xchg
inc
mov
call
lahf
add
dec
cld
scas
push
scas
inc
(bad)
js
and
stos
dec
fidivr
and
adc
or
dec
xchg
adc
(bad)
test
adc
mov
or
jle
and
cld
jno
push
bnd
test
outs
jl
inc
(bad)
test
mov
repnz
cld
add
test
ins
out
call
cmps
mov
push
xor
imul
stos
movs
pop
sub
adc
and
sbb
push
push
lods
movs
mov
test
mov
jl
dec
add
sub
int3
mov
stos
push
jp
ja
push
loop
mov
fsub
inc
pop
mov
loopne
and
stos
or
jns
(bad)
lock
ins
gs
arpl
mov
jl
push
retf
sahf
cmc
and
loope
adc
pop
and
mov
aad
out
add
adc
jecxz
les
jg
mov
jmp
xchg
adc
(bad)
adc
in
jp
enter
daa
les
push
sub
and
idiv
cs
bound
in
pop
add
mov
xchg
aaa
stos
sqrtps
mov
jmp
stos
jo
sbb
xchg
addr16
mov
icebp
jno
fdivp
clc
and
outs
outs
or
ret
movs
enter
adc
push
loopne
pushf
mov
adc
out
(bad)
aam
out
adc
cmp
cld
pop
mov
cmp
outs
xchg
das
xchg
inc
(bad)
pop
push
hlt
inc
ja
nop
fisubr
push
loopne
pop
sbb
aam
inc
cmp
mov
push
rcr
out
push
add
push
jae
mov
fwait
xchg
ret
je
in
mov
dec
cmps
fsubr
inc
call
dec
lock
jp
rcr
fdivrp
dec
ds
xor
add
sar
dec
mov
or
sub
daa
out
sahf
dec
dec
push
push
adc
out
mov
xchg
cmp
dec
ror
int3
add
inc
push
cmp
ret
call
in
jp
pusha
call
mov
in
mov
dec
adc
jns
dec
jg
mov
sbb
jp
jae
in
inc
mov
and
hlt
ds
cld
pop
xchg
int3
mov
retf
repnz
inc
mov
xor
loopne
movs
fdivrp
ficomp
sti
add
lods
in
inc
mov
sub
or
mov
sub
dec
inc
add
xor
jmp
shr
(bad)
xchg
out
cmp
popf
push
jmp
xchg
sbb
or
sbb
loope
fcomp
and
mov
or
out
dec
mov
bound
fwait
mov
stc
push
ja
push
cmp
dec
int3
inc
mov
jmp
gs
shr
mov
arpl
or
cld
mov
cmp
xchg
stos
sbb
sar
cmp
test
jg
cmp
push
sbb
lods
mov
cli
cmps
jo
repz
jp
pop
bound
loope
push
jbe
fld
test
out
arpl
and
push
out
ss
test
push
dec
scas
push
push
dec
cmc
bound
push
aas
cmp
retf
mov
fidiv
cmp
pop
xchg
or
fist
adc
test
aaa
jl
iret
dec
int
mov
ds
and
outs
mov
push
jle
and
loope
xchg
leave
push
push
push
add
mov
xchg
mov
icebp
outs
cmp
cdq
xchg
sub
dec
jne
xchg
adc
stc
bound
xchg
ret
fistp
and
adc
pop
pop
adc
loop
add
mov
cmp
adc
cmp
xor
mov
ror
cmp
pop
ins
aaa
adc
(bad)
pop
stos
xchg
add
dec
out
sub
dec
adc
mov
pop
mov
xchg
lds
mov
inc
cld
(bad)
call
es
jecxz
dec
sbb
xor
ficom
fiadd
mov
jl
cwde
xchg
push
out
icebp
test
push
inc
lds
jbe
jge
sbb
and
fmul
imul
jl
jg
mov
jbe
shr
push
lods
xchg
movs
add
fidivr
pop
push
(bad)
call
pop
cwde
xor
and
(bad)
lds
dec
out
out
std
inc
out
and
es
dec
mov
sbb
ret
xor
(bad)
es
repz
in
(bad)
lds
and
or
jb
jbe
into
in
xchg
sbb
dec
test
pop
call
jae
mov
dec
push
xor
mov
or
xor
mov
jne
pop
and
pop
or
clc
fild
test
add
fsub
repz
dec
xor
aad
cmp
pop
movs
mov
dec
xor
iret
and
gs
xchg
mov
mov
pop
repnz
add
call
out
in
icebp
inc
ja
ja
mov
sbb
push
xor
scas
and
push
push
push
push
enter
gs
ds
ror
sub
popa
retf
fwait
adc
fbstp
pop
add
call
test
adc
xchg
je
shr
or
mov
(bad)
push
xchg
mov
ret
ins
outs
les
ficomp
js
or
and
fs
mov
popa
xchg
mov
lods
ss
dec
sbb
mov
imul
dec
pop
mov
adc
call
in
aad
mov
jns
mov
fs
(bad)
mov
push
rol
sub
cld
enter
or
jl
ror
push
cmps
bound
jo
fisubr
mov
psubw
cmp
and
pop
pop
loope
push
dec
pop
cwde
repz
call
aaa
pop
xchg
(bad)
movs
jmp
out
dec
rcl
push
hlt
and
or
aam
outs
aad
pop
sub
lahf
inc
movs
mov
dec
pop
pop
pop
sbb
lea
pushf
mov
cmp
or
jnp
mov
sbb
and
(bad)
rcl
std
cmp
pop
je
lahf
mov
dec
sub
jl
or
lea
aam
sahf
test
dec
sub
cmc
inc
adc
push
jns
into
rcl
rcr
mov
lods
sti
lea
mov
lock
outs
aad
movups
cmp
sub
cld
dec
cdq
pusha
ins
add
xchg
lahf
fidiv
inc
std
(bad)
mov
push
fld
lods
test
jne
cmps
mov
test
mov
and
sbb
sahf
out
push
test
sub
xor
movs
adc
push
and
jno
mov
pop
jmp
mov
loopne
or
jle
sub
cs
call
jmp
jl
pop
push
adc
inc
cwde
sbb
icebp
retf
mov
ja
dec
adc
xchg
dec
shr
pop
sbb
dec
fstp
shl
int3
mov
movs
test
xor
rcr
inc
inc
mov
pop
iret
or
and
mov
int3
push
add
pushf
xlat
xchg
shl
shl
mov
arpl
das
mov
mov
pop
and
cmp
mov
arpl
es
nop
jecxz
push
cmc
mov
jmp
fisttp
jnp
pop
or
or
cmp
mov
push
mov
out
lds
test
es
xchg
sub
movs
jns
sar
(bad)
sbb
sar
sub
pusha
stc
push
test
je
iret
jmp
(bad)
int
lahf
jo
popa
popf
sub
push
sub
add
adc
ins
lods
dec
hlt
lods
xchg
enter
mov
or
xchg
div
xchg
test
ja
js
jns
inc
dec
pop
mov
sub
(bad)
ret
xor
sub
pop
add
xor
mov
cs
pushf
(bad)
jg
and
out
pop
sahf
lods
push
enter
jp
dec
jmp
mov
repz
sbb
mov
test
xchg
out
inc
push
sahf
lds
ret
sub
data16
ss
outs
mov
retf
ds
cmp
sbb
call
inc
dec
ret
sub
push
shl
sar
loop
dec
sub
mov
mov
sub
in
and
repz
mov
shl
cwde
fsub
jae
jmp
test
lds
sbb
sub
aaa
sbb
pop
loopne
popa
daa
jmp
repnz
cmp
xchg
int3
pop
mov
retf
pop
sbb
push
mov
test
cmp
in
retf
xchg
stc
outs
or
ss
dec
inc
mov
pop
sbb
cmc
cmc
xor
sbb
sub
mov
(bad)
mov
mov
popf
and
test
add
cmps
adc
push
scas
dec
cmp
cld
sbb
xchg
sbb
shl
push
in
pop
rol
call
jp
mov
push
fist
mov
cmp
mov
inc
addr16
mov
fcomp
loop
or
pop
outs
mov
xchg
cs
pusha
ss
mov
and
mov
cli
or
xchg
push
sub
xchg
inc
inc
out
lods
jle
adc
stos
or
test
add
mov
xchg
retf
lds
mov
sbb
jbe
das
xor
mov
das
mov
fmul
jb
cdq
and
xor
ss
out
scas
loope
arpl
in
xlat
hlt
add
jecxz
inc
xchg
inc
push
jp
dec
stos
test
cmps
push
(bad)
cmp
in
fs
xor
dec
mov
inc
inc
xor
mov
sub
(bad)
test
rcl
xor
dec
adc
inc
or
pop
inc
lahf
in
pop
aas
and
adc
les
mov
jle
mov
jnp
pop
scas
or
int
or
ror
add
push
in
push
sub
aas
mov
daa
arpl
add
dec
cmp
scas
movs
imul
aam
inc
in
push
data16
jge
out
mov
loopne
or
ret
jg
mov
jp
xchg
test
push
add
adc
push
lds
mov
in
and
mov
mov
(bad)
cmp
cmps
das
mov
mov
aas
pop
push
dec
test
sbb
jbe
adc
jno
jle
jmp
test
cmp
mov
xchg
and
push
and
dec
cmp
mov
sub
(bad)
arpl
addr16
cmp
aas
stos
pop
xor
int
add
sub
fsubr
jp
add
adc
mov
pop
push
ja
inc
mov
fmulp
xor
push
popa
in
push
cmp
cmps
mov
jnp
adc
mov
inc
pop
inc
and
sbb
mov
add
sbb
cmps
(bad)
cs
jno
scas
mov
push
inc
sbb
xor
inc
mov
mov
pop
pop
mov
outs
xchg
xchg
inc
add
push
fidivr
jo
xor
jbe
aad
add
scas
and
jbe
push
jae
icebp
dec
jns
int3
aam
xor
mov
call
iret
out
and
add
cld
sbb
stos
and
ja
mov
(bad)
add
lds
jns
pop
enter
or
jle
sub
add
imul
mov
inc
mov
mov
push
xchg
cs
neg
adc
xchg
movs
icebp
test
sti
adc
iret
fisub
add
sbb
retf
pop
lods
aam
jne
call
pop
retf
mov
loopne
(bad)
sbb
mov
ret
cwde
movs
jnp
jl
jno
cmp
lods
sub
outs
mov
call
xchg
data16
sbb
xchg
pop
test
cmp
push
and
jmp
dec
mov
movs
fbld
js
sub
ss
lods
icebp
cmp
mov
fldenv
push
mov
not
pop
add
and
in
push
ret
jmp
call
adc
xchg
repnz
not
mov
mov
ret
mov
sti
mov
sub
sbb
pop
test
jb
scas
stos
ret
fisub
push
sub
pusha
dec
jbe
mov
xor
sbb
sub
pop
shr
imul
in
sbb
add
fsub
lods
icebp
sbb
adc
or
test
pushf
or
std
sub
hlt
xchg
dec
sti
rcr
inc
cs
mul
mov
sbb
jmp
ss
(bad)
sub
sub
cs
mov
pop
icebp
out
arpl
fistp
mov
icebp
movs
xchg
scas
ins
add
rcr
movs
adc
sub
ret
cmps
(bad)
les
adc
sbb
push
out
loop
adc
std
xchg
add
inc
test
mov
mov
movs
pop
imul
sbb
push
push
mov
aaa
xchg
or
and
popa
aam
xor
ror
inc
adc
fst
imul
rol
pop
add
sbb
xchg
mov
cmp
dec
hlt
rep
xor
test
fcom
xor
mov
mov
jecxz
pop
mov
js
loopne
xlat
xchg
es
add
push
out
rol
cmp
cmp
push
add
mov
cmp
js
lods
outs
pop
jmp
loopne
out
cmp
repz
ffree
inc
loop
movs
jns
adc
dec
les
cmp
mov
icebp
mov
xchg
fwait
pop
cmp
(bad)
push
sub
addr16
xchg
cmp
fnstcw
mov
xor
mov
push
cwde
xchg
sahf
mov
mov
add
fs
jmp
and
stos
jg
lods
sbb
pushf
in
sub
retf
sub
ret
iret
add
or
inc
or
adc
mov
xchg
loopne
pop
push
pop
arpl
ins
inc
test
dec
lods
xor
ror
in
retf
and
jns
cdq
lahf
push
aam
pop
in
shr
adc
jp
cli
xchg
xor
xchg
or
jecxz
sub
inc
cmps
dec
shr
lock
ja
push
sub
cli
mov
ret
dec
out
mov
pop
es
push
test
add
push
nop
stc
out
push
mov
mov
mov
sahf
mov
adc
icebp
inc
clc
(bad)
cld
xor
xchg
fcmovb
xchg
enter
dec
sahf
movs
dec
and
in
cs
cmp
das
pushf
pop
mov
lea
inc
mov
and
out
jo
loopne
in
and
mov
mov
cmc
fwait
imul
fdiv
hlt
xor
stc
xchg
and
cmps
jnp
ins
xor
cld
test
mov
popf
idiv
add
repnz
mov
push
cmp
sti
aaa
push
xor
mov
(bad)
xchg
push
(bad)
mov
aaa
add
cs
scas
mov
push
jmp
dec
inc
pop
mov
stc
movs
test
adc
movs
lods
rol
sub
jns
mov
jge
popa
cli
xchg
cmp
sub
stc
mov
cs
or
jmp
dec
(bad)
xchg
push
cdq
call
add
lock
dec
data16
in
jmp
cmp
fwait
jl
lock
sbb
xor
mov
out
xchg
in
mov
mov
ins
xchg
dec
sbb
out
iret
out
out
mov
inc
cmc
ja
sub
sbb
or
dec
daa
aas
mov
jmp
outs
xchg
mov
cmp
ret
arpl
sbb
(bad)
lahf
jle
xor
or
mov
mov
mov
inc
xchg
push
sti
inc
arpl
bound
lods
stos
pop
cmp
fwait
and
mov
jnp
in
and
push
push
in
add
push
dec
in
int
or
xchg
xchg
sbb
fimul
adc
scas
sub
jl
xor
xor
or
fisub
retf
pop
xor
pop
or
push
aaa
jb
mov
xor
inc
push
es
hlt
xchg
push
fiadd
jl
xchg
fst
aaa
mov
(bad)
or
ret
push
movs
imul
mul
sar
jo
nop
mov
pop
push
mov
cmps
add
jle
cmps
jge
mov
push
sub
or
mov
aas
int3
test
enter
outs
in
imul
loope
ins
in
mov
es
xor
repnz
sbb
push
mov
aas
test
sub
pusha
mov
sbb
test
nop
jae
test
dec
jmp
and
scas
pop
bound
sub
mov
xchg
adc
adc
xchg
pop
mov
inc
jb
jge
lock
lock
xchg
sbb
xchg
jne
test
sbb
jp
or
loop
jle
(bad)
shr
mov
adc
aad
daa
dec
jp
and
jnp
xlat
mov
sub
xchg
shl
in
mov
retf
mov
jl
test
push
sbb
dec
jo
inc
jmp
aaa
ror
mov
or
dec
mov
das
jl
outs
or
push
cmp
sbb
(bad)
xor
repz
test
imul
stc
sub
fdivr
adc
push
xlat
adc
cli
in
retf
ins
int
retf
push
les
cmp
scas
sub
pop
push
jb
pop
out
mov
fmul
imul
rcr
(bad)
xchg
dec
adc
and
add
inc
mov
cmp
jnp
push
jns
and
push
lds
outs
mov
xchg
pop
push
gs
ss
in
mov
(bad)
hlt
pop
jae
xor
push
fistp
rol
pop
pop
adc
and
push
out
add
call
sub
jno
mov
adc
clc
xor
sbb
push
push
cmp
adc
adc
sub
test
shr
lds
mov
mov
aam
mul
lahf
jns
sti
inc
xchg
sbb
add
enter
(bad)
cmp
and
setg
out
dec
nop
adc
dec
mov
ds
cmp
fisttp
aaa
out
ret
mov
cmp
xlat
dec
mov
pop
push
mov
and
fild
adc
stos
push
add
push
jnp
scas
call
push
shr
fild
inc
push
xchg
inc
imul
dec
in
adc
and
adc
push
retf
mov
(bad)
ficomp
arpl
pusha
inc
or
shl
ins
(bad)
sbb
in
shl
arpl
add
ror
jg
mov
sbb
xlat
mov
movs
sar
loop
sub
push
push
shr
aad
mov
adc
mov
push
lods
inc
cmps
push
(bad)
inc
dec
mov
push
arpl
movs
or
xor
sub
mov
and
mov
xor
jmp
mov
jle
add
loop
pop
lahf
ins
das
jns
icebp
jl
push
push
in
push
sbb
dec
sub
daa
mov
jne
and
xchg
in
sahf
(bad)
es
mov
popf
(bad)
mov
xor
loop
cwde
cli
loop
ins
icebp
(bad)
std
and
sbb
out
call
inc
sti
popf
mov
dec
jg
imul
mov
cwde
mov
jb
xchg
sub
(bad)
iret
iret
push
adc
dec
cwde
mov
adc
xchg
jo
fcom
mov
mov
mov
xor
pusha
push
call
sbb
es
fisub
clc
int3
hlt
jno
jo
ficomp
xchg
dec
fist
inc
xor
mov
mov
es
iret
add
mov
loopne
popf
int
cdq
cmp
out
loope
jne
cld
add
shl
shl
push
in
jg
xchg
pop
popa
(bad)
pusha
and
loopne
fdiv
pop
js
sbb
ret
or
xchg
arpl
lods
mov
lock
imul
loop
aam
cmc
add
adc
inc
icebp
imul
cwde
cmp
jnp
popf
jns
dec
or
mov
sar
movs
jecxz
mov
inc
movs
fsub
sar
dec
pop
push
add
sbb
gs
and
add
pop
cmp
xchg
call
push
dec
mov
or
pop
xchg
xlat
fs
sub
or
push
(bad)
hlt
(bad)
cmps
hlt
and
pushf
sahf
pop
mov
cwde
dec
jg
push
or
call
movs
jg
add
push
mov
or
aam
std
int
pop
xlat
mov
mov
cwde
cmc
icebp
mov
pushf
pop
mov
pusha
enter
in
lock
xchg
jnp
or
jb
pop
adc
xor
fs
pop
inc
and
xor
std
xchg
jnp
enter
add
inc
push
retf
or
pushf
cmp
ins
outs
fnsave
test
adc
adc
(bad)
popf
arpl
ins
cmp
gs
es
mov
sbb
jle
popa
cmp
sub
mov
dec
xchg
jno
inc
pusha
out
mov
or
pop
pop
cmp
leave
mov
dec
mov
fidivr
fmul
ds
xchg
cmp
test
add
mov
jmp
push
repnz
cdq
gs
test
adc
jo
cmc
fcomp
mov
inc
iret
or
xor
fdivr
retf
add
mov
push
push
and
int
sbb
scas
jno
cwde
lahf
inc
fdiv
jge
jb
pushf
mov
adc
gs
pop
retf
cmp
sub
rcr
mov
hlt
je
xor
fs
mul
mov
xor
inc
das
ficom
add
push
in
cmp
cmp
push
shr
mov
pop
aam
sbb
movs
ret
daa
inc
sub
mov
leave
call
pop
xchg
dec
xchg
scas
cmp
mov
retf
or
jns
nop
shl
pop
inc
clc
call
fiadd
addr16
mov
dec
push
es
mov
stc
nop
call
fsubr
sahf
dec
lahf
dec
ins
push
sub
push
rol
push
arpl
jecxz
es
repz
repz
dec
mov
xor
shr
mov
jo
mov
lock
and
cld
xchg
in
(bad)
or
add
movs
sti
out
in
mov
and
pushf
les
mov
push
shr
push
int
sub
jmp
sbb
xchg
inc
loopne
jge
pop
push
clc
mov
in
cmp
push
jno
xchg
push
push
xchg
jbe
mov
push
mov
and
daa
mov
dec
mov
sbb
ret
xchg
cmp
ja
jnp
sbb
shl
push
cmc
xchg
mov
sbb
ds
outs
sub
sbb
xchg
push
or
jo
mov
das
pop
fs
dec
pop
ss
push
jmp
mov
or
xchg
inc
push
push
mov
mov
jo
cmp
mov
repnz
mov
and
and
sub
lods
xchg
shl
out
mov
int3
mov
push
sar
(bad)
push
scas
test
aaa
push
mov
jg
hlt
fmul
ud2
xchg
xor
loope
jae
sbb
jbe
cmc
loope
retf
sub
iret
icebp
dec
pop
push
fld
rcl
xchg
(bad)
xchg
aam
push
loopne
popf
lahf
iret
mov
popa
repnz
fmul
xchg
into
shr
and
xchg
mov
xor
cwde
fstp
mov
inc
call
xor
test
call
test
xlat
push
out
mov
ins
(bad)
pop
xchg
cs
lods
pop
addr16
cmp
add
pop
inc
mov
cdq
xlat
stc
sbb
imul
and
mov
fcomp
scas
xor
cli
into
scas
dec
repnz
fsubr
pusha
pushf
pop
repz
outs
and
xchg
jl
mov
dec
ror
ins
cld
mov
rol
test
adc
int
sub
cwde
or
mov
int
and
jecxz
arpl
mov
and
sub
mov
jb
dec
(bad)
loop
das
push
jne
lods
cdq
das
mov
ss
mov
stos
outs
cmp
cwde
in
es
push
mov
(bad)
mov
sbb
cmp
mov
fs
sbb
add
retf
aam
int3
movs
inc
push
mov
fmul
mov
jmp
test
jp
fadd
(bad)
es
out
push
outs
js
shl
mov
push
push
fucom
leave
sub
pushf
mul
push
xchg
aam
cld
and
sti
ss
cmp
retf
pop
xchg
cmp
pop
sbb
push
cld
adc
in
fimul
xchg
jmp
retf
stos
je
mov
mov
add
mov
leave
movs
pop
dec
inc
pop
shr
sti
test
push
aad
sbb
shr
fwait
scas
pop
xor
xchg
(bad)
sbb
xor
stos
out
movs
mov
sbb
push
rcl
inc
(bad)
jg
test
sbb
daa
or
stos
inc
mov
adc
fdivr
sub
mov
cmp
dec
sbb
mov
test
adc
adc
int
ror
jno
push
movs
icebp
dec
adc
sahf
fisub
pop
scas
cmp
and
call
pop
and
mov
push
outs
call
xlat
loop
aaa
pop
out
(bad)
mov
jp
jo
popa
jo
push
and
rcr
and
dec
int
and
mov
dec
pusha
jp
cdq
add
jns
call
inc
mov
loopne
jo
xchg
push
aas
inc
dec
inc
pop
test
repnz
cmps
test
pusha
and
mov
aad
cmp
sahf
xor
pop
out
ret
pop
stos
arpl
pop
movs
stos
lds
ds
dec
xor
dec
iret
pop
jp
fcom
call
iret
xor
imul
cmp
pop
aam
(bad)
cld
sbb
sbb
adc
inc
pop
pop
mov
pop
jns
fistp
mov
mov
push
xor
jb
xlat
es
xor
push
(bad)
fist
push
and
xor
and
in
pop
idiv
dec
loop
pop
pop
inc
push
push
pop
ret
cmp
sub
sub
mov
and
xchg
mov
mov
add
ficom
ret
mov
gs
sahf
xlat
fcom
jne
frstor
pop
bnd
js
and
cmp
cli
cs
adc
sbb
pop
test
sbb
hlt
ins
das
add
jnp
push
sbb
xchg
xor
push
push
popf
pusha
lods
mov
jl
inc
and
or
aad
mov
cwde
mov
and
push
xchg
ins
add
cmc
adc
loope
clc
sub
jmp
les
xchg
jmp
es
loop
mov
xor
aam
lock
jle
inc
imul
and
jb
(bad)
js
cmp
push
stc
scas
pop
cld
movs
imul
sbb
test
cld
inc
std
mov
daa
movs
pop
ins
(bad)
fisttp
lods
inc
movs
jnp
ret
call
jne
push
shl
push
or
mov
hlt
aaa
xchg
lds
push
jg
es
call
adc
call
repnz
outs
or
adc
or
xor
outs
icebp
add
jmp
add
push
mov
pop
xchg
adc
sti
scas
mov
jmp
hlt
repz
push
leave
js
dec
scas
retf
jl
pop
outs
stos
ret
cmp
add
pop
loop
pusha
enter
sbb
sbb
popa
fs
mov
xor
call
sub
jne
pop
rcr
push
sbb
cdq
ins
pop
dec
sub
outs
mov
and
sbb
dec
add
es
bound
pop
ror
hlt
ret
fnsave
test
mov
jbe
daa
push
sub
(bad)
push
fisub
repnz
and
dec
mov
mov
jmp
jae
xor
aad
xchg
ret
jnp
sub
adc
out
fadd
sub
in
fiadd
pop
pop
in
sub
xchg
inc
aaa
mov
icebp
jecxz
dec
les
adc
out
xlat
pushf
call
jecxz
imul
das
push
jno
cld
add
sub
mov
lock
jl
popa
rol
fistp
add
dec
in
cmps
mov
xlat
mov
dec
fs
imul
lods
les
add
cmp
xchg
mov
cmp
adc
or
in
sub
xchg
call
retf
aaa
pop
xchg
xchg
repz
mov
or
mov
iret
push
jmp
sar
or
jl
mov
xor
sahf
out
add
loop
inc
sbb
shr
ja
leave
retf
push
ja
mov
hlt
sbb
and
push
jb
mov
test
out
dec
cmp
add
in
(bad)
or
xchg
jecxz
into
add
xor
mov
jns
inc
clc
adc
cmp
mov
sahf
out
mov
popf
in
fcomp
or
dec
retf
out
retf
push
fs
push
lahf
inc
mov
loope
es
sub
and
inc
les
xor
call
fdivr
sbb
mov
neg
popa
mov
pusha
fwait
stc
jmp
sub
xchg
outs
push
repz
jg
fsub
adc
fwait
in
jl
jne
std
mov
mov
aaa
in
add
out
mov
(bad)
ja
fidivr
mov
jg
leave
jo
sti
adc
lock
ss
pushf
jne
enter
fidivr
ins
xchg
gs
loopne
cmp
rcr
ss
or
clc
mov
xchg
(bad)
jmp
xlat
std
mov
push
cmp
push
sbb
cmp
and
(bad)
shr
mov
push
sub
inc
dec
fidiv
sub
mov
mov
lods
aam
cdq
xchg
mov
mov
inc
scas
movs
mov
repz
add
push
adc
(bad)
(bad)
cwde
xchg
lods
and
sbb
int3
(bad)
pop
jnp
cmps
and
or
push
out
mov
mov
lods
scas
xchg
sbb
mov
add
std
gs
fadd
int3
inc
aam
loope
sar
sub
inc
call
mov
inc
inc
pop
not
sbb
ja
fsub
dec
mov
sbb
imul
movs
rcr
daa
sbb
inc
or
call
stc
mov
sub
stos
xchg
std
push
push
pop
jbe
mov
push
inc
movs
and
xchg
cdq
jmp
cmp
sub
and
sbb
xor
push
addr16
arpl
neg
add
and
(bad)
push
and
xchg
test
jp
je
add
icebp
sahf
call
cmps
xchg
or
xchg
js
dec
fwait
mov
jmp
shl
sbb
mov
je
cmp
outs
xor
std
enter
sub
ret
clc
cmps
and
push
push
imul
sbb
push
pop
mov
push
or
cmp
xchg
push
and
and
or
cmp
sub
sub
add
cmp
sbb
jmp
rcl
mov
add
fist
stc
(bad)
add
lods
sbb
leave
daa
sub
neg
(bad)
loopne
cmp
iret
dec
jmp
ds
aaa
and
ror
adc
sub
xchg
dec
outs
mov
mov
cmc
icebp
out
in
pop
mov
test
(bad)
dec
pop
jp
jmp
scas
fsincos
push
adc
push
js
mov
push
add
push
cdq
mov
jmp
add
mov
imul
jp
(bad)
scas
sbb
sbb
imul
jae
sbb
in
cmc
and
mov
movs
mov
sub
add
inc
mov
jns
dec
xchg
jle
adc
push
dec
das
push
dec
dec
loope
and
(bad)
div
xor
mov
in
daa
xchg
push
sbb
pop
cmc
fwait
xchg
xchg
push
fistp
push
cmc
inc
addr16
stos
stos
out
jp
mov
hlt
xchg
outs
pushf
imul
xor
adc
xchg
jb
out
ret
inc
or
dec
lds
dec
xor
inc
lock
dec
inc
fucomip
or
xor
stc
stos
gs
js
inc
pop
push
pop
push
mov
aaa
das
push
ds
add
mov
scas
fwait
adc
call
(bad)
fisubr
push
mov
fmul
add
jae
outs
mov
call
xchg
arpl
push
jo
inc
inc
cmp
push
pop
cmp
daa
loope
popa
imul
sbb
mov
cmp
fwait
mov
mov
push
sahf
sbb
fisttp
loopne
fld
adc
dec
(bad)
jg
(bad)
imul
dec
cld
and
(bad)
cs
mov
mov
in
jbe
dec
into
dec
retf
fisttp
rcl
test
(bad)
out
push
fcom
xchg
push
adc
mov
shl
mov
adc
add
push
stos
cs
cwde
sbb
sbb
cmps
and
xchg
and
inc
xor
xchg
add
add
cli
clc
xchg
xor
rcl
and
jnp
mov
or
mov
lahf
retf
icebp
rcr
test
icebp
nop
ins
fbstp
aas
adc
add
adc
cmp
cwde
movs
jb
addr16
xor
lock
sbb
and
icebp
test
sub
pop
pop
mov
or
mov
imul
icebp
mov
inc
dec
test
jecxz
nop
retf
jno
fs
rcr
lahf
lea
aad
aam
sub
call
push
sti
and
xlat
(bad)
adc
fsub
add
and
or
xor
inc
fnsave
movs
imul
xor
inc
inc
pop
cmp
mov
cmp
jno
sahf
dec
mov
add
push
repnz
xchg
movs
cwde
and
aas
int3
jl
jbe
xor
add
mov
fisttp
ja
push
and
sub
jle
mov
sub
jnp
retf
add
(bad)
les
pusha
xor
or
sbb
cwde
cmp
jns
in
xor
xor
test
rcl
je
sub
aaa
pop
pusha
mov
jmp
call
data16
and
adc
(bad)
xor
dec
dec
ret
jno
jle
in
scas
je
mov
in
popa
in
mov
cld
xchg
mov
mov
inc
(bad)
neg
xchg
mov
fcom
adc
adc
mov
pop
adc
jno
jnp
mov
inc
inc
jnp
mov
mov
push
mov
xchg
retf
adc
cs
iret
pushf
hlt
fisttp
retf
rcl
sar
and
sbb
cmp
mov
ret
xor
push
jno
lahf
fwait
xor
(bad)
push
xor
xor
pushf
bsf
fist
push
pop
sbb
gs
pop
cmc
fdiv
mov
hlt
pusha
dec
push
xchg
mov
test
add
mov
nop
repz
sub
das
mov
(bad)
jno
sub
mov
sbb
lods
cmps
or
ficom
jae
adc
outs
je
and
xor
pop
pop
xlat
hlt
mov
cwde
call
leave
mov
outs
push
xchg
jne
jnp
and
outs
pop
dec
jmp
or
in
push
bnd
popf
cmps
mov
mov
or
popa
jne
hlt
jo
inc
lds
ds
inc
js
cmp
jl
jns
inc
jb
lock
cdq
jnp
scas
add
jae
push
jae
cmps
xchg
jl
mov
jp
xor
ror
or
int
mov
mov
iret
lock
not
adc
add
mov
or
scas
mov
fucomp
or
psadbw
mov
cmp
fwait
into
cli
aaa
adc
add
mov
cld
cli
push
(bad)
jnp
stc
(bad)
fimul
pop
cmp
fld
cmc
fmul
int3
outs
call
fsub
mov
inc
fist
(bad)
cmp
xchg
and
add
jp
cmp
or
sbb
daa
bnd
imul
mov
lahf
and
inc
pop
mov
cli
mov
jns
mov
cmp
pop
dec
movs
add
mov
ss
dec
xor
push
sub
push
xchg
arpl
sub
adc
aaa
pop
cmp
jns
test
ds
jns
test
in
xor
sub
clc
sbb
pop
add
cmp
push
jno
xchg
mov
xchg
mov
fs
mov
sbb
enter
sub
mov
xchg
imul
mov
shl
lahf
imul
nop
jecxz
sub
cmps
sahf
mov
add
scas
das
scas
pop
dec
jg
into
pop
jmp
scas
push
jl
pop
mov
xchg
inc
xchg
push
add
imul
outs
add
lds
add
lods
xchg
test
mov
or
pop
shl
inc
mov
aaa
mov
sub
sbb
mov
mov
mov
push
data16
ins
jbe
shr
dec
aaa
fadd
adc
cmp
pop
lods
mov
cmp
lods
jb
mov
ret
ds
test
mov
pop
cdq
and
lea
dec
test
add
popf
push
pushf
dec
shl
jg
popf
aam
out
pop
jb
dec
add
dec
pop
pop
ja
sbb
in
mov
xchg
daa
xchg
and
fld
popa
push
dec
loope
mov
pop
int3
xor
retf
mov
repnz
shl
out
dec
mov
mov
pop
lds
add
xlat
aad
pop
adc
inc
lods
or
sbb
push
jmp
sti
mov
push
add
movs
inc
loopne
pop
cmc
inc
xlat
ret
cwde
test
addr16
(bad)
bnd
dec
inc
push
fst
or
add
nop
pop
push
push
lea
iret
fwait
or
xchg
and
push
cmp
adc
dec
cs
scas
popa
ret
cwde
jge
pop
gs
or
fs
push
retf
je
mov
jbe
iret
cmc
mov
mov
jl
outs
scas
sub
add
xor
je
iret
cdq
popa
sub
cmps
xor
movs
jb
dec
enter
jbe
icebp
sub
mov
xor
in
movs
test
lods
ror
pop
outs
or
jle
dec
jg
cld
jb
push
loope
cmp
mov
cmp
mov
rcl
fdivr
and
sub
adc
shl
dec
daa
mov
hlt
jns
mov
cmp
cmp
idiv
or
dec
inc
add
es
fwait
jle
mov
dec
lods
add
or
mov
or
mov
mov
cmp
pop
fs
(bad)
push
je
mov
mov
inc
cmps
xchg
adc
jle
or
fiadd
and
push
add
mov
repz
js
inc
into
dec
pop
fwait
ret
rcl
ret
mov
inc
retf
adc
jg
and
mov
fstp
dec
xor
xor
adc
adc
int
int3
enter
je
cmc
jno
fwait
icebp
(bad)
push
xchg
pop
and
sbb
add
mov
push
movs
inc
and
lahf
dec
adc
ins
btc
mov
mov
cmc
jecxz
outs
mov
mov
jp
or
pop
or
and
push
cmc
cmps
int
popf
xchg
js
mov
mov
dec
(bad)
ds
adc
in
cli
ret
xchg
dec
out
cld
cwde
in
push
mul
ja
test
loope
pushf
addr16
jmp
or
popa
mov
in
or
(bad)
and
(bad)
pop
push
jmp
sub
stc
mov
sub
adc
push
mov
pop
mov
(bad)
ins
or
retf
jb
cmovge
sahf
mov
or
push
ds
clc
call
hlt
inc
xchg
cld
ficomp
ins
mov
add
ins
xchg
icebp
loope
push
aam
pop
dec
sar
push
mov
cmps
stos
fld
loop
fs
aaa
fwait
shl
xor
push
add
mov
jle
ret
and
or
mov
sahf
sub
cmp
adc
loopne
adc
retf
inc
xchg
clc
push
xchg
inc
xchg
fs
into
rcr
push
dec
in
sbb
je
pop
fimul
cld
(bad)
cmp
retf
stos
sub
mov
loope
pop
popa
cs
xor
lahf
mov
dec
sbb
mov
sti
scas
jl
pop
in
xor
xchg
cmp
xchg
mov
cmp
aaa
sti
lock
jg
(bad)
jb
leave
popf
mov
(bad)
scas
movs
mov
sub
dec
inc
pop
scas
jns
fmul
add
movs
aaa
jmp
icebp
cwde
pop
cmp
retf
jbe
in
push
dec
ins
out
cmc
jns
shl
mov
lds
push
iret
outs
jecxz
add
xchg
cdq
(bad)
ficomp
jmp
stc
xchg
cmp
inc
mov
int
mov
add
movs
call
shl
push
rcr
scas
ja
retf
push
repz
cmp
fs
fwait
adc
hlt
xor
push
pop
mov
and
push
pop
mov
dec
sbb
pop
push
div
inc
xchg
cs
cmps
test
dec
or
cwde
xchg
shr
aam
mov
jmp
lock
mov
pop
xchg
daa
push
jbe
mov
rol
sbb
rcl
push
and
(bad)
mov
out
test
push
push
pop
cmp
fst
push
xor
lods
sub
pop
sub
jle
outs
mov
test
adc
pusha
cmp
xchg
ins
sub
push
push
mov
nop
fs
mov
retf
sbb
adc
mov
adc
(bad)
adc
jo
and
ja
loopne
adc
push
(bad)
test
loopne
js
fld
mov
ret
dec
pop
xor
dec
leave
test
test
add
daa
call
lods
pop
dec
inc
(bad)
and
retf
push
ror
in
mov
xchg
dec
es
or
mov
out
inc
iret
xchg
clc
scas
loop
jmp
sub
cld
fld
xor
lahf
jns
mov
push
jp
das
cdq
mov
and
retf
fxch
xor
mov
xlat
repnz
push
out
daa
fnstcw
aad
push
sbb
(bad)
and
lahf
inc
mov
inc
mov
xchg
fstp
xor
xchg
cdq
ja
mov
or
hlt
fwait
jne
mov
cmps
xchg
mov
inc
adc
scas
add
mov
adc
or
xor
ror
mov
lock
add
xchg
cmovb
xor
retf
push
xlat
adc
fucomp
cs
mov
or
aas
stc
push
push
leave
inc
sub
outs
push
loope
pop
push
ret
retf
mov
xchg
mov
inc
pop
loopne
int
test
dec
or
int3
push
jne
fdivr
xchg
add
mov
or
shr
mov
jbe
call
push
(bad)
icebp
scas
aad
xor
clc
mov
xor
popa
mov
adc
inc
hlt
loopne
retf
out
and
sub
push
test
movs
cmp
jmp
imul
(bad)
into
adc
xchg
leave
fwait
nop
mov
sbb
out
cmp
push
xchg
mov
fs
shl
das
and
dec
pushf
sub
rcr
loop
test
cmp
mov
adc
cwde
xchg
es
sub
jecxz
push
jl
inc
jp
fist
push
nop
mov
pop
dec
ror
stos
push
(bad)
js
ds
ret
xchg
dec
mov
dec
pop
hlt
mov
shl
dec
mov
imul
call
jle
push
mov
xchg
cmp
cmp
arpl
sub
into
mov
fiadd
add
push
inc
ret
jmp
mov
lea
sbb
clc
popf
push
mov
xchg
or
inc
call
data16
es
stc
add
daa
pop
dec
push
sub
imul
cmp
push
sbb
imul
psllw
mov
js
shl
adc
movs
mov
scas
pop
pop
jmp
retf
mov
dec
mov
pop
in
lds
or
mov
outs
mov
jno
xor
cdq
aas
inc
or
das
movs
in
mov
mov
pusha
push
jecxz
fdivr
sbb
and
test
mov
add
push
int
inc
out
push
lods
(bad)
cmp
and
sub
ss
or
in
mov
mov
loopne
dec
add
mov
xchg
call
add
inc
jle
add
xor
repnz
lock
and
adc
clc
xchg
pushf
mov
sub
lods
cmp
inc
adc
mov
nop
xchg
mov
xchg
test
pop
mov
xor
mov
jecxz
inc
loope
stc
test
and
mov
adc
out
imul
ret
pop
je
jecxz
stc
xchg
es
loop
cs
xchg
xchg
rcr
rcl
or
mov
add
adc
push
xchg
push
mov
mov
mov
mov
mov
xor
ins
or
sub
sbb
and
fdiv
cwde
push
or
lea
cmp
cmp
inc
adc
bound
mov
mov
gs
xchg
xchg
add
xor
xchg
(bad)
xchg
sub
icebp
xor
or
rcr
bound
add
movs
adc
and
mov
sbb
cli
add
mov
int
cmp
cld
push
jle
in
syscall
pop
(bad)
addr16
and
pop
sbb
repnz
and
cmc
push
(bad)
lahf
iret
xor
movs
hlt
dec
pop
inc
aam
sti
in
mov
sbb
iret
in
lahf
mov
mov
test
out
out
pop
xchg
sub
stc
ret
rcl
sub
gs
test
ret
push
enter
or
(bad)
call
adc
cwde
push
stc
lds
cmp
xchg
and
xchg
xchg
sub
enter
cmp
jp
movs
lods
mov
cmps
pop
mov
arpl
mov
or
add
aaa
sar
repz
mov
jne
inc
leave
mov
add
iret
inc
rol
mov
or
cmps
and
inc
(bad)
outs
xchg
(bad)
int3
imul
sti
daa
nop
jae
jnp
jmp
cmp
adc
and
mov
out
mov
aaa
fwait
icebp
aam
ins
fsub
xchg
jmp
rcl
sbb
xchg
mov
and
ror
push
sbb
mov
xor
ins
rcl
cli
ja
push
add
iret
jg
dec
fidiv
add
push
xor
xchg
push
ja
lods
sbb
sahf
lods
or
popa
(bad)
jmp
sti
xor
movs
shl
xchg
inc
call
jp
sub
sbb
push
les
js
loope
sbb
xor
ss
gs
push
or
or
dec
out
aas
xor
outs
pop
pop
pop
retf
jo
leave
mov
in
pusha
jge
xor
fisubr
cmp
inc
and
sbb
fsubr
xchg
jp
or
xchg
pushf
ror
inc
sub
in
push
xor
pop
push
popa
pop
xchg
xchg
inc
test
xchg
dec
(bad)
jns
dec
retf
mov
loop
xchg
(bad)
jge
ret
sub
push
sub
lea
jns
shl
add
cmp
pop
adc
je
leave
mov
(bad)
ror
mov
int
mov
(bad)
lahf
adc
(bad)
mov
aad
sbb
sub
push
sar
fcmovu
aas
add
lods
add
push
inc
xchg
out
ret
aam
push
cmp
ins
retf
and
pop
jnp
lds
and
mov
and
mov
fs
jecxz
lds
or
sub
cmp
ret
push
mov
sbb
aam
hlt
repnz
lods
inc
retf
dec
popa
neg
cwde
pop
cmp
mov
add
dec
mov
dec
test
xchg
xchg
and
lea
jns
test
sbb
and
aad
call
cwde
pushf
inc
jnp
push
scas
out
cld
cmp
xlat
jmp
sub
int3
lods
mov
mov
push
stos
mov
(bad)
imul
mov
cld
aas
outs
pop
into
hlt
push
(bad)
int
inc
add
mov
lahf
dec
lods
fstp
cmp
jae
jecxz
iret
xor
sub
dec
shr
pop
sbb
sbb
ss
iret
or
jbe
and
or
cs
leave
jns
fadd
or
movs
push
sub
cld
loope
into
movs
dec
(bad)
jl
not
xor
mov
enter
adc
mov
xchg
retf
inc
cs
call
jae
das
mov
or
popf
les
adc
(bad)
xor
pop
inc
idiv
enter
xchg
and
in
in
loop
ds
xor
cmp
lahf
pop
pop
mov
pop
push
fcmovnbe
mov
cmp
dec
pop
cmps
sti
xchg
add
sub
pop
loope
mov
pop
pop
jnp
xor
mov
leave
push
les
jmp
ret
cwde
add
push
ds
dec
jmp
or
imul
adc
sbb
fs
xchg
adc
mov
lods
dec
clc
shl
and
ins
sbb
push
sbb
inc
jbe
push
sbb
sbb
cmps
pop
repnz
fadd
adc
int3
dec
lods
hlt
in
pop
stos
stos
push
inc
adc
fs
iret
cwde
fs
or
jno
xchg
inc
cmp
mov
cs
ss
aam
mov
ds
inc
int
test
sti
jo
push
sahf
ja
or
cli
adc
push
mov
(bad)
mov
push
jbe
push
xor
les
call
shl
iret
(bad)
pop
fisub
cwde
not
test
jb
mov
ja
jb
movs
rcr
push
popf
aad
scas
aaa
mov
jmp
mov
jbe
popf
pop
adc
adc
loop
sbb
mov
dec
xlat
inc
or
popf
cmp
outs
mov
shr
stos
cmp
cmp
rol
jge
mov
int
mov
jecxz
icebp
and
pop
and
xlat
aam
or
jp
lods
lea
fidiv
clc
call
call
add
xchg
icebp
and
xchg
jbe
and
and
inc
test
mov
in
pop
xchg
mov
inc
fbld
xchg
aam
or
and
cmp
adc
lds
(bad)
push
ss
cli
cdq
mov
pop
pop
sub
lods
sar
jge
(bad)
add
pop
cli
lea
inc
(bad)
inc
cs
jne
fimul
cmc
xlat
inc
pusha
shr
sbb
adc
xor
dec
gs
xchg
fidiv
xor
int
mov
sar
out
clc
push
enter
jns
sub
xor
add
sub
push
sub
mov
jmp
xchg
int
retf
add
fiadd
jne
pushf
xor
retf
adc
or
or
xor
xchg
cmp
cmovg
cmps
mov
mov
dec
mov
repz
daa
outs
mov
cmp
add
inc
xlat
stos
add
repnz
test
inc
popa
dec
xchg
push
dec
psubq
out
loope
movs
inc
mov
pop
jmp
scas
pop
jp
dec
out
scas
pop
fistp
sub
aas
inc
lahf
ficom
ds
mov
mov
mov
dec
imul
inc
aad
test
dec
sbb
sahf
jp
push
jmp
ds
fisub
cld
rcr
lea
shl
mov
add
xchg
fs
xchg
adc
mov
fsub
add
pop
jl
fs
add
push
icebp
sub
inc
shl
out
pusha
movs
jmp
push
dec
inc
and
lahf
pop
in
in
ins
sahf
not
sub
sub
stos
mov
ss
and
sbb
or
mov
xchg
les
add
and
(bad)
fimul
addr16
xor
inc
inc
inc
sub
xchg
jge
in
jp
stc
jnp
inc
out
mov
loop
mov
out
inc
and
mov
cmps
jbe
pop
mov
push
rol
fstp
les
movs
(bad)
imul
int3
mov
rcr
mov
push
retf
cmc
push
xor
mov
and
lea
xchg
dec
jmp
shl
push
and
out
jae
lahf
and
mov
jmp
cmp
cli
mov
repz
push
mov
add
sub
je
adc
imul
cmp
in
dec
cs
repnz
rol
retf
fsub
pop
outs
pop
mov
push
cmps
test
mov
pop
push
cmc
adc
call
inc
xlat
ret
push
fldcw
cdq
sbb
or
cmp
push
iret
rcl
pop
xor
push
push
inc
stos
lods
jo
push
jnp
jne
enter
ins
adc
or
cmps
pop
xchg
in
test
fstp
cmc
sub
push
dec
xchg
pop
paddd
adc
add
xchg
fisttp
pop
mov
xchg
clc
push
sub
aad
nop
and
cmp
inc
jmp
add
ret
cli
aas
cmp
retf
push
and
push
mov
xchg
mov
add
dec
add
in
jae
cmp
lock
cli
out
movs
push
mov
xor
add
xor
dec
(bad)
jne
and
mov
push
cmp
(bad)
cld
sar
in
aam
dec
imul
nop
xor
mov
jmp
shl
scas
jb
xor
add
pop
shr
xchg
mov
jne
sub
push
pop
call
lds
call
add
pop
int
xor
data16
mov
push
data16
lods
shl
mov
(bad)
fisubr
mov
xchg
ins
push
adc
inc
(bad)
int
sbb
lea
fistp
popf
jle
ror
idiv
enter
adc
addr16
inc
je
scas
fistp
sub
shl
lds
adc
push
test
shr
imul
mov
dec
(bad)
ficom
mov
push
mov
repnz
out
mov
and
daa
es
fdivr
in
fistp
or
pop
inc
mov
out
mov
ror
loop
fiadd
mov
imul
fwait
out
ds
hlt
les
push
xchg
mov
inc
clc
mov
dec
js
jmp
xchg
in
pop
sub
pushf
cmps
jl
xchg
into
inc
push
push
and
pop
push
pop
cmps
add
mov
mov
cmp
int
sti
ss
sbb
rcl
jmp
in
outs
loop
sub
push
mov
cmp
leave
cdq
sub
fild
inc
int3
mov
outs
idiv
push
push
cmp
sbb
outs
mov
pop
mov
mov
pop
dec
dec
arpl
inc
sbb
(bad)
out
jecxz
outs
mov
inc
mov
dec
fbstp
sbb
int3
push
xor
xchg
fst
(bad)
aam
xor
mov
das
xor
sub
bound
jge
cmp
bound
inc
sub
and
adc
test
imul
out
mov
aad
in
or
add
push
sbb
in
mov
xchg
or
fwait
pop
adc
out
or
mov
mov
daa
sub
xor
dec
addr16
pop
sbb
hlt
mov
xchg
hlt
or
fld
pop
pop
ret
mov
lahf
add
lods
mov
jae
call
push
push
adc
cmp
push
ins
fnstcw
imul
dec
jno
cmp
in
adc
push
lock
in
add
push
add
jmp
adc
push
jae
and
or
sti
mov
jno
mov
lea
ret
iret
mov
test
and
xchg
popf
sub
xor
lds
ss
icebp
push
adc
shl
xchg
scas
cs
xlat
sub
push
and
or
sub
xchg
bound
cdq
jl
push
cdq
mov
test
dec
mov
daa
aam
imul
mov
push
minps
push
leave
out
fisubr
dec
adc
stos
out
addr16
pusha
test
das
arpl
jmp
push
cmp
mov
or
addr16
dec
cmp
cmovae
mov
or
adc
test
in
(bad)
mov
cmps
mov
movs
or
dec
outs
or
shl
and
adc
sti
arpl
xor
xor
xchg
mov
or
aad
hlt
arpl
stc
or
in
sti
mov
jecxz
loopne
xchg
push
pusha
pop
fucomi
jmp
daa
xlat
push
ins
pop
imul
movs
jle
mov
or
or
sub
addr16
call
cmc
or
out
mov
adc
dec
or
daa
pop
push
sub
loopne
xchg
ret
cmc
and
add
inc
cmps
dec
push
inc
dec
call
ror
inc
inc
xchg
add
mov
sbb
(bad)
(bad)
mov
repz
sub
jp
clc
fbld
and
sub
push
imul
pop
rcr
jl
repnz
push
pop
movs
mov
cmps
daa
jns
dec
fstp
fcmovb
pop
push
dec
test
add
stc
cli
xor
or
shl
jne
adc
std
hlt
sti
out
imul
scas
fiadd
cwde
mov
jecxz
addr16
fwait
jae
cmp
sahf
push
and
pop
call
mov
aas
invd
pop
dec
ret
mov
(bad)
lods
add
sbb
push
rcr
pop
xchg
pop
mov
push
and
adc
cwde
ret
es
push
movs
mov
sub
cmp
in
or
stos
mov
cmp
cld
ss
jmp
inc
push
int
leave
stos
dec
jbe
sub
lock
pop
xor
es
ret
stos
pop
xchg
jl
mov
movs
or
aaa
add
std
js
jmp
jnp
addr16
pop
inc
adc
daa
outs
icebp
not
adc
mov
nop
jmp
adc
retf
aas
jl
xchg
retf
jmp
dec
(bad)
js
mov
sub
pop
gs
pop
or
xchg
call
rcl
lds
aas
lds
loop
xor
push
dec
jbe
or
adc
and
icebp
mov
or
retf
fidivr
sbb
sub
push
pop
shr
arpl
dec
int
add
xchg
xor
sub
sub
jecxz
daa
mov
push
cdq
es
xlat
aad
cmc
dec
aas
js
imul
pop
jp
fidiv
add
(bad)
ins
out
scas
stos
stc
xor
adc
mov
retf
enter
or
pop
test
xlat
xchg
inc
jae
test
(bad)
rcr
cld
outs
push
in
or
sbb
dec
fmul
xchg
mov
out
xor
mov
iret
ins
mov
sbb
pop
mov
lods
dec
lahf
xor
stc
ret
fldl2e
pop
xchg
test
adc
fbstp
ucomiss
scas
xor
cmp
inc
aaa
stc
add
mov
jb
mov
pop
sbb
(bad)
fdiv
push
push
lds
out
adc
adc
jno
mov
out
inc
adc
pop
xchg
clc
test
retf
mov
mov
xchg
sahf
lahf
push
sti
adc
lock
loope
addr16
add
adc
or
mov
cmps
cwde
outs
jecxz
mov
mov
fdiv
fsubr
imul
sub
in
pop
arpl
rcr
out
stos
arpl
imul
icebp
lods
add
ret
fmul
jge
int
and
add
xor
dec
mov
cli
ret
call
es
aas
and
xchg
mov
in
push
js
je
xor
fmulp
fidivr
xlat
inc
mov
sbb
out
add
push
test
jns
sbb
cmp
mov
jo
in
xchg
adc
mov
pusha
clc
jmp
iret
hlt
(bad)
mov
pushf
pop
stos
add
sub
add
mov
mov
jb
pop
(bad)
fisub
repz
dec
aaa
daa
jmp
sub
push
sbb
sar
jbe
mov
xchg
cmps
stc
jge
jbe
inc
jecxz
mov
cmp
dec
lods
dec
xchg
adc
adc
rol
call
fcomi
push
cmp
sub
imul
mov
sub
loopne
xor
dec
pusha
lea
cmp
xchg
and
and
or
add
dec
and
shr
or
and
(bad)
movs
push
fwait
sub
jmp
es
(bad)
pop
repz
jmp
sbb
pop
mov
rol
ins
stos
jecxz
data16
inc
adc
cs
inc
and
enter
shr
jae
pushf
lods
movs
cmp
fimul
inc
xchg
or
jo
ja
and
ins
add
jp
mov
mov
loopne
xor
cmp
pusha
popf
sahf
jmp
jns
dec
in
sub
pop
data16
inc
mov
outs
daa
mov
fs
(bad)
std
movs
sbb
lods
sbb
fbld
inc
(bad)
push
test
adc
inc
mov
repnz
pop
push
int3
jne
cmp
xchg
leave
daa
jl
mov
dec
or
je
pextrw
jmp
add
push
repz
cmp
nop
fwait
or
dec
mov
and
sti
and
pusha
sbb
push
nop
and
cmps
inc
fcmovnu
sub
test
outs
in
add
cmp
push
mov
and
stc
mov
mov
cwde
push
enter
outs
and
inc
pop
sbb
int3
imul
std
test
pop
inc
minps
jmp
imul
pop
ror
sahf
std
push
mov
mov
test
mov
push
mov
in
mov
stos
xor
retf
cdq
cmp
xchg
(bad)
loopne
test
rcl
cmps
xchg
test
cmp
ins
imul
inc
pop
xor
enter
imul
dec
jmp
adc
jo
daa
fcmove
hlt
scas
mov
push
mov
cmp
stos
dec
xchg
(bad)
(bad)
es
xchg
mov
adc
in
inc
adc
sub
push
mov
jno
test
mov
jno
and
sub
sbb
int3
test
sub
jns
mov
sbb
or
and
and
in
xor
inc
shl
adc
mov
movs
loope
cmp
mov
or
popf
dec
pop
shl
mov
popf
cmp
cmps
imul
inc
mov
inc
push
jle
bnd
pop
out
pop
and
mov
(bad)
daa
and
sbb
rol
dec
pushf
test
sub
loopne
xchg
in
mov
aaa
sbb
inc
push
aad
outs
rol
and
mov
add
mov
xchg
fwait
movs
fcom
fs
add
mov
sbb
repnz
push
mov
call
mov
adc
and
cs
jmp
dec
stos
xor
sub
xchg
jecxz
pop
faddp
aaa
cli
outs
jbe
add
leave
aaa
pop
fldpi
into
xor
lock
addr16
ror
mov
scas
sub
mov
mov
aam
pusha
and
cmovbe
int
and
sub
fstp
mov
xchg
and
fisub
mov
dec
add
sbb
sbb
mov
mov
scas
les
adc
pop
pop
push
sbb
test
sahf
jmp
retf
je
dec
xchg
fiadd
call
clc
les
fbld
inc
sub
data16
inc
dec
aas
push
sub
or
xor
xchg
cli
mov
in
jg
mov
inc
add
mov
(bad)
jl
fwait
enter
adc
sub
jge
(bad)
(bad)
jge
jg
int
dec
jle
(bad)
mov
femms
into
sar
imul
push
push
pusha
ds
dec
xlat
(bad)
add
pop
mov
fisubr
pop
in
xchg
pop
mov
inc
push
scas
sbb
test
and
fwait
mov
dec
popf
xor
mov
imul
xchg
icebp
mov
jns
pop
sahf
test
dec
dec
in
sbb
pop
adc
jbe
xchg
es
ror
popf
xchg
fnstsw
stos
mov
cmps
inc
mov
int
loopne
sub
push
enter
scas
push
adc
lods
pop
adc
fnstcw
std
inc
fimul
sti
ret
cmp
test
push
inc
dec
test
mov
jg
pop
sti
sahf
stc
sbb
in
into
push
mov
mov
stos
lock
cmp
push
in
fld
(bad)
loope
jecxz
jp
aam
push
aaa
add
add
and
ret
pop
std
lds
mov
ror
(bad)
scas
add
xchg
sbb
popf
cmp
sbb
sbb
scas
sbb
in
ficomp
icebp
pop
ins
jg
(bad)
mov
or
bound
(bad)
inc
bnd
aad
ror
pop
(bad)
out
pop
sub
or
mov
int
(bad)
or
cmp
(bad)
fucomi
add
push
push
dec
or
je
out
adc
add
sbb
adc
je
xchg
mov
fcomip
inc
xor
test
retf
mov
xchg
jmp
dec
sbb
jne
adc
add
push
mov
jne
hlt
stos
adc
sub
dec
xchg
pop
sbb
daa
mov
xor
retf
test
mov
dec
inc
fwait
sub
(bad)
dec
les
cwde
stc
ins
adc
pop
stos
mov
push
jg
dec
cdq
sbb
sbb
sbb
sti
adc
mov
sub
or
int3
retf
add
jp
mov
fptan
lds
popf
repz
stc
mov
call
cmps
outs
fdiv
(bad)
xor
cmp
sub
fild
pusha
jns
(bad)
jmp
add
xchg
or
test
ja
mov
hlt
add
cmp
lods
das
jns
push
aaa
(bad)
mov
add
add
inc
rcl
pushf
ret
lods
dec
add
push
pop
mov
mov
retf
mov
imul
push
outs
test
retf
mov
dec
stos
addr16
dec
ss
jmp
mov
in
cdq
jne
and
retf
cli
js
and
fdivr
ins
rcr
jno
xchg
dec
pusha
and
ret
and
int
dec
jo
dec
push
dec
or
push
xchg
mov
test
push
gs
push
pop
jmp
sub
cmc
push
mov
sub
add
xchg
lock
xchg
ja
enter
aas
sahf
sbb
pop
dec
cmps
icebp
stos
fldcw
add
(bad)
xor
inc
sub
mov
repz
(bad)
jne
int3
retf
test
retf
ja
out
push
add
ss
pusha
mov
cld
fdiv
add
sbb
bound
jb
inc
xor
fisttp
ret
cmp
les
ret
push
sbb
pop
adc
fcom
or
pop
jge
ret
ins
and
jne
pop
add
add
dec
jl
mov
loope
mov
clc
(bad)
rol
cmps
mov
scas
stos
fistp
(bad)
lock
inc
es
inc
push
pop
mov
add
call
sub
sub
push
loope
std
aad
in
hlt
(bad)
ret
ret
dec
add
loop
dec
add
sub
sbb
cmps
cmc
jmp
push
sbb
dec
outs
mov
and
xchg
enter
es
or
cdq
pop
cmp
pop
and
(bad)
jmp
pop
js
and
call
cmp
into
xor
call
cmp
lods
cmp
je
ins
clc
aas
xor
or
call
push
in
movs
adc
mov
mov
loope
xchg
(bad)
pop
(bad)
clc
xchg
sahf
addr16
pop
and
ret
jmp
test
shr
jmp
pop
call
push
cmp
pop
nop
mov
add
push
inc
nop
es
inc
inc
mov
adc
push
lock
cmp
mov
sbb
xchg
inc
push
aas
shl
or
push
mov
mov
mov
data16
lods
or
jbe
push
rol
mov
sbb
movs
pop
ins
sub
mov
inc
(bad)
fisttp
stc
cli
xchg
call
sub
ror
xor
pop
jb
inc
sub
and
inc
and
(bad)
fisubr
jnp
add
(bad)
jb
sub
nop
inc
ret
mov
test
shl
sub
mov
sbb
pop
cmps
sbb
xor
push
push
stos
pop
cmp
cmp
push
aas
add
inc
in
add
add
jb
add
add
mov
sub
fistp
jp
outs
mov
ds
inc
mov
cmp
xor
movaps
lock
sbb
mov
adc
jne
cdq
push
jmp
bound
or
fwait
sar
(bad)
jno
pop
pop
or
cmps
fnsave
rcr
sbb
fbstp
push
push
cmc
dec
mov
dec
mov
dec
xchg
jns
ret
outs
int3
pop
push
call
sub
outs
enter
xor
call
jg
jb
mov
mov
sti
pop
jmp
cld
int
sbb
dec
pop
movs
shl
mov
into
test
or
mov
mov
sub
mov
out
prefetchnta
jle
dec
aad
push
cdq
inc
pop
sub
xor
ror
mov
mov
sbb
cdq
push
inc
push
or
(bad)
loopne
xor
icebp
and
or
dec
test
sbb
jle
clc
dec
cmp
jg
test
aaa
and
test
sub
and
jae
inc
cmp
or
jbe
adc
pop
inc
xor
jns
fld
mov
jmp
movs
repz
xchg
mov
in
xchg
adc
mov
dec
pop
inc
dec
push
fidiv
enter
adc
cmp
dec
stos
aas
and
add
test
shr
add
lods
test
adc
icebp
cmp
cmp
cmp
sbb
add
xlat
pop
loop
cmp
in
mov
out
test
in
mov
aad
add
loopne
add
repz
and
xchg
add
mov
pop
mov
dec
rol
lea
cdq
inc
das
fcom
pushf
popa
push
jle
dec
fsubr
mov
fs
test
into
outs
xchg
mov
jb
cwde
add
in
clc
jl
mov
jmp
pop
adc
cmps
sbb
cmps
cld
jecxz
xchg
(bad)
mov
je
adc
hlt
test
out
xor
sub
enter
lods
add
imul
dec
jp
and
or
mov
mov
mov
imul
jg
mov
xchg
push
push
bound
add
addr16
xor
mov
out
loopne
dec
push
inc
sub
push
clc
adc
mov
dec
and
lea
jg
aaa
pop
pop
adc
pop
out
mov
pop
cs
lock
out
pop
scas
pop
lds
cmp
add
in
xor
jno
push
inc
xor
mov
or
fbld
lods
mov
push
push
sub
dec
out
push
lods
sti
cs
movs
dec
inc
in
adc
mov
out
jg
jge
pop
lock
popa
cmps
test
nop
jmp
and
pop
cdq
sti
test
jmp
lock
aad
mov
jle
mov
xor
pusha
mov
cmp
mov
(bad)
fdivp
jne
xchg
sbb
sbb
dec
dec
or
sbb
retf
in
pop
or
xchg
ja
fcom
or
push
cdq
neg
sub
sbb
xor
mov
inc
test
lea
(bad)
pop
push
lea
and
mov
jnp
mov
sub
cmp
dec
adc
jno
addr16
in
add
not
dec
ins
fwait
xor
mov
popa
arpl
jns
nop
push
idiv
stc
cmp
pop
add
cmp
mov
movs
push
xor
or
mov
(bad)
inc
pop
or
mov
not
sbb
movs
sub
cmps
jg
into
push
mov
test
(bad)
das
fcomp
add
add
jmp
das
push
call
rcr
or
push
xchg
shr
jle
movs
aaa
inc
dec
cmp
shl
push
cmp
imul
mov
repnz
or
jp
mov
and
xor
or
jne
ins
popa
or
xchg
jmp
adc
mov
pop
pop
lods
aad
mov
and
adc
mov
jb
fistp
bnd
cmp
sbb
pop
fs
mov
cli
jmp
(bad)
push
lock
inc
mov
aaa
ja
sbb
inc
mov
(bad)
js
repz
jg
stos
int3
imul
mov
pop
mov
(bad)
jo
stos
add
pop
outs
out
sbb
outs
jbe
mov
jae
xchg
dec
outs
push
int
push
stos
push
cmp
daa
dec
jge
cmps
fild
or
mov
and
enter
xor
add
mov
cli
int3
fadd
push
hlt
aam
jbe
out
mov
ins
sahf
sar
sahf
int3
icebp
ret
mov
loope
push
sub
jmp
dec
adc
sti
sub
xlat
mov
push
loope
imul
jmp
pushw
push
in
enter
dec
inc
aad
add
js
arpl
int3
ret
mov
xlat
pop
sar
push
test
loope
xor
xchg
icebp
les
pop
xor
jnp
sbb
pusha
sub
mov
fiadd
jecxz
jge
add
and
ret
adc
mov
sub
mov
dec
jno
daa
cwde
xchg
in
repz
imul
jl
xchg
cmp
inc
ror
retf
ret
ror
cld
cmp
push
pop
fdivr
mov
pop
cmp
sbb
cmc
jb
pop
clc
clc
sub
dec
lods
lock
add
or
jl
icebp
sub
xor
es
push
cmp
stos
xchg
adc
adc
iret
push
test
inc
int
out
cmp
scas
test
lods
sbb
out
dec
push
out
sbb
push
cmp
add
daa
iret
ficomp
loopne
adc
jne
movs
sbb
repz
jnp
shl
addr16
adc
mov
and
xchg
pop
jp
jnp
lods
sub
test
xor
test
jnp
ret
xor
xchg
lea
cs
xor
or
jle
cmps
fcomp
mov
jmp
jp
lahf
mov
jne
adc
cmp
push
mov
push
out
inc
xchg
sti
xchg
mov
ror
dec
mov
mov
cmp
out
mov
aas
ror
je
jle
mov
adc
push
push
shl
pop
inc
rcr
cmp
rcl
fild
add
sub
mov
cmp
xchg
inc
fwait
sub
sbb
push
sub
cwde
loope
test
mov
sbb
stc
dec
ds
test
mov
bound
inc
cld
pop
fcomp
adc
aam
xor
aaa
cmp
(bad)
pop
or
shl
pop
xchg
pop
in
sub
add
dec
push
cdq
xchg
add
movs
out
mov
sbb
outs
enter
fimul
(bad)
sar
mov
mov
aad
pop
jmp
sbb
(bad)
fdiv
and
enter
xchg
dec
sub
sti
cdq
mov
gs
add
mov
pop
bound
add
jecxz
mul
dec
xor
pop
inc
loopne
imul
sbb
fisubr
adc
inc
sub
ja
mov
pop
xchg
popa
jecxz
mov
mov
dec
ret
pop
cmp
loop
pop
pop
sub
and
sub
test
jg
outs
outs
rcl
jae
cld
call
cmp
push
loop
sub
add
inc
cmps
ins
jne
sbb
xchg
cli
xchg
mov
fs
or
sbb
(bad)
rol
sub
dec
ds
pusha
cmp
sbb
movs
leave
inc
jge
out
aam
fimul
mov
outs
push
dec
repnz
scas
iret
pushf
shl
dec
sbb
add
sbb
ins
stos
dec
je
les
mov
loopne
inc
xor
repnz
rcl
in
(bad)
pop
nop
bound
imul
mov
push
aad
and
ret
fmul
mov
imul
sbb
jg
adc
xchg
and
movs
loop
stos
xor
fiadd
mov
ins
jne
int3
adc
push
or
jae
or
pop
aad
mov
cmc
(bad)
cld
js
and
adc
pop
or
sbb
cmps
add
popf
xchg
loopne
imul
out
dec
and
fdivr
out
sbb
stos
add
or
push
adc
in
stos
retf
cmp
ss
dec
xchg
adc
or
hlt
sti
das
shl
scas
push
cmps
or
stos
adc
lahf
imul
push
sbb
scas
push
jmp
xchg
push
popa
mov
cmps
or
pop
es
(bad)
cmp
xor
je
in
add
cdq
in
mov
pop
or
test
add
cmps
imul
adc
cmp
ret
std
mov
dec
(bad)
xlat
fdivr
(bad)
adc
inc
jno
(bad)
mov
or
sub
int3
out
imul
loope
idiv
es
jmp
repz
push
xchg
lods
sub
adc
mov
lods
push
cli
out
lods
popf
mov
mov
adc
jbe
(bad)
mov
jb
jmp
jle
cmp
loop
imul
not
xor
or
mov
fistp
sbb
les
outs
pop
clc
imul
mov
xchg
mov
push
xor
xchg
jnp
sub
call
inc
pop
fs
pop
sar
pushf
xchg
and
ja
gs
mov
fs
enter
lods
or
and
call
lods
icebp
(bad)
ficom
(bad)
push
fcom
retf
dec
loop
call
lds
sbb
cld
cwde
adc
loopne
std
shr
jbe
icebp
jg
xchg
or
mov
mov
mov
mov
jns
scas
cdq
xchg
jmp
mov
pushf
call
adc
add
out
sbb
loop
in
inc
bnd
addr16
ins
outs
arpl
das
jmp
ds
fsubr
cmp
xchg
(bad)
out
and
inc
sar
in
movs
out
dec
outs
lods
cli
gs
sub
push
cmc
rcr
scas
adc
add
pand
shr
mov
loop
pop
shl
scas
mov
and
mov
call
in
(bad)
lock
mov
xchg
pop
mov
fwait
mov
clc
or
adc
fidivr
mov
pop
(bad)
jg
jne
in
aam
and
repnz
outs
add
or
cmps
push
je
push
fist
(bad)
pop
add
mov
sub
inc
js
scas
mov
adc
pop
fstp
out
dec
xor
loopne
imul
test
lods
ja
popf
es
pop
loop
inc
fldenv
shl
xor
dec
std
and
js
or
popf
inc
mov
xchg
sbb
mul
(bad)
ja
rcl
pop
js
in
imul
dec
dec
daa
outs
mov
imul
xchg
push
test
mov
pop
or
mov
jg
out
xlat
not
lods
fmul
add
add
or
jne
pop
mov
shl
jp
adc
push
inc
in
ror
cmp
jecxz
adc
out
aaa
mov
fnstenv
mov
and
xchg
push
(bad)
sub
pop
(bad)
cmp
fcomp
das
add
loopne
ins
pop
ins
jecxz
mov
repnz
int
sbb
ja
pop
(bad)
and
xchg
sar
mov
push
sar
mul
mov
data16
retf
xchg
loopne
push
loope
retf
mul
dec
jmp
dec
xor
ret
ss
mov
arpl
rcl
mov
arpl
pop
cmp
ret
lea
inc
repz
ins
push
add
aaa
sahf
add
je
inc
aaa
fild
popa
add
mov
repz
inc
xchg
std
jle
add
loopne
jb
jo
test
jns
stc
jnp
or
shl
adc
jecxz
and
popf
test
mov
popa
addr16
cmp
pop
jb
mov
imul
arpl
lock
dec
add
mov
lock
ret
sbb
lods
clc
arpl
jge
adc
stos
mov
sbb
cmc
jo
lahf
lock
jns
div
stos
mov
xlat
xchg
or
xchg
and
popa
pop
std
aas
cmp
(bad)
mov
cwde
outs
jge
cmp
test
xor
mov
jl
and
hlt
fs
pop
loop
shr
movs
jg
leave
cmp
push
push
arpl
add
inc
or
sti
stos
out
not
pop
jno
ret
and
mov
sub
cmp
lock
cdq
pop
mov
movs
jnp
rcl
or
fisttp
fwait
xor
inc
int
mov
fistp
xlat
mov
test
jbe
shl
lahf
nop
lea
mov
sub
jae
movs
push
sar
xchg
and
je
(bad)
and
or
xlat
mov
add
inc
shr
retf
mov
dec
aaa
data16
jns
push
mov
sbb
xchg
xchg
jmp
adc
jnp
(bad)
js
mov
out
sub
pop
pop
out
test
popa
inc
lea
mov
test
fdiv
or
cmp
inc
aad
jl
retf
inc
les
stos
scas
add
fdiv
jle
pop
inc
cdq
xchg
add
pushf
cmps
adc
mov
dec
lea
sub
not
jle
cmp
pop
cmps
sbb
cli
inc
dec
inc
daa
sub
dec
fwait
out
mov
and
mov
mov
aam
xor
mov
(bad)
mov
dec
outs
ret
out
pop
dec
and
(bad)
ret
addr16
sbb
inc
into
(bad)
loop
push
cdq
push
or
leave
loopne
push
mov
fcomp
ja
dec
fcom
mov
sbb
pop
scas
xchg
popf
and
or
or
mov
mov
out
in
and
inc
mov
jmp
ss
int3
ret
shr
mov
icebp
pop
daa
cmp
adc
mov
mov
int
(bad)
fnstenv
inc
mov
fiadd
imul
sub
add
std
pop
sahf
test
test
sbb
sub
sar
cmp
ins
jg
das
test
(bad)
lods
add
or
fiadd
test
mov
test
or
adc
imul
retf
loope
xlat
pop
lods
xchg
and
data16
out
dec
int
or
mov
pop
adc
jae
push
mov
cmp
or
mov
dec
inc
scas
cmc
scas
cmc
ds
mov
call
and
aaa
sub
mov
rol
mov
adc
add
xor
clc
and
adc
sbb
and
test
or
inc
shl
cmps
adc
fcom
xchg
or
mov
cmp
outs
or
cwde
mov
lds
adc
lds
cwde
lds
cwde
pusha
or
pusha
lods
ins
xchg
not
test
call
push
scas
sbb
popf
and
mov
inc
jmp
movs
es
or
scas
(bad)
arpl
int
pop
ss
cld
jg
push
aam
jle
rcl
jmp
xchg
xor
scas
cs
daa
sbb
aad
repz
add
xchg
repnz
push
adc
movs
xor
pop
stc
push
rol
shr
inc
and
int3
mov
jnp
adc
dec
sbb
dec
dec
inc
xor
sub
mov
(bad)
rcl
gs
mov
jmp
xor
xchg
mov
imul
repnz
fmulp
add
scas
add
inc
and
mov
push
clc
mov
sahf
pop
cs
jae
movs
stos
cmp
pop
shr
fmul
inc
push
and
fisttp
mov
cmps
xor
loope
add
jne
mov
out
jg
loopne
mov
mov
cmp
leave
ja
cwde
pop
ja
inc
sbb
sub
fisttp
mov
daa
mov
mov
mov
icebp
mov
jne
xchg
adc
jg
dec
lods
in
repz
and
or
xor
imul
div
cmps
icebp
xchg
cmp
arpl
shr
adc
stos
(bad)
pop
fimul
loope
(bad)
in
mov
loop
fdiv
movs
js
add
dec
fadd
nop
jno
cmp
ss
sbb
loop
shr
inc
mov
lea
loopne
dec
outs
test
test
(bad)
imul
sub
out
cld
daa
mov
dec
xlat
mov
mov
lea
scas
xchg
mov
stc
dec
cs
je
inc
cwde
add
sub
sar
jae
out
leave
xchg
mov
fwait
ds
or
mov
mov
aaa
jmp
xor
pusha
stos
js
mov
jbe
and
add
push
hlt
inc
or
jg
scas
pop
into
adc
inc
xor
xlat
xchg
stc
ds
adc
retf
test
inc
rcl
sub
push
aas
or
movs
ret
movs
or
imul
imul
jne
rcl
pop
lock
push
add
inc
pop
sti
mov
nop
cmp
stos
clc
pushf
mov
or
sti
push
(bad)
in
or
lods
out
dec
imul
daa
pushf
movs
shl
icebp
int3
mov
push
stos
inc
outs
sub
gs
sub
inc
popa
adc
fsubr
pop
rcr
lds
cmp
data16
pop
aas
cmc
fmul
es
lahf
test
or
push
jae
ficomp
inc
gs
int3
fsubr
jbe
fadd
jne
dec
cmp
je
mov
xchg
inc
neg
xor
imul
add
sub
xor
enter
or
ss
call
out
mov
ret
add
mov
xchg
fidiv
inc
jns
jno
loop
lea
dec
lds
cmps
push
push
loopne
xchg
(bad)
sbb
inc
push
cmc
sar
hlt
or
fs
add
sub
cmp
cmp
pop
cmp
(bad)
lahf
std
imul
fs
int3
xchg
(bad)
jmp
xlat
movs
or
iret
cli
ins
loope
ss
inc
sbb
mov
or
fs
ins
neg
sub
int3
dec
jp
retf
lods
pop
mov
in
jmp
ins
cwde
pusha
adc
ins
or
xor
xor
out
mov
mov
mov
ret
(bad)
lds
adc
adc
dec
dec
sub
push
sbb
bound
sti
push
jo
mov
call
adc
push
repz
stos
out
inc
adc
add
movs
sbb
and
sub
gs
lock
add
neg
and
lods
pop
les
pop
das
mov
or
adc
or
lahf
movs
in
repz
enter
jnp
sbb
scas
hlt
(bad)
fcom
sbb
fld
sbb
stc
adc
ror
lahf
pop
sahf
dec
push
mov
xchg
xor
or
push
inc
js
sbb
cmps
dec
popa
jg
addr16
arpl
jno
xchg
mov
movs
(bad)
sti
shl
repz
lods
sub
jo
jmp
outs
ja
sub
push
add
mov
loope
imul
addr16
(bad)
mov
in
add
ret
dec
mov
out
mov
jae
nop
cmp
out
retf
clc
int3
not
cmp
into
mov
not
adc
fimul
mul
adc
outs
and
aam
or
sbb
sbb
sub
inc
xchg
xchg
std
or
jp
cmc
sahf
cmps
fadd
inc
add
cmp
loopne
pop
or
xchg
addr16
(bad)
in
jp
push
cmp
pusha
iret
adc
dec
jbe
xchg
jg
popf
outs
fsubr
xchg
jmp
test
pushf
lea
sub
outs
jbe
push
stos
test
push
cmps
fild
adc
sbb
out
fwait
arpl
pop
mov
lods
inc
pusha
xor
call
xchg
aas
mov
daa
popa
loopne
daa
add
mov
popa
mov
and
retf
imul
pop
cmp
sbb
cld
jle
clc
mov
push
push
mov
xor
ins
fsub
out
inc
or
out
data16
mov
jle
mov
jnp
or
cmp
jecxz
cmp
test
icebp
(bad)
sub
test
fnsave
or
mov
pop
cli
jecxz
push
fst
inc
ret
xor
lahf
mov
imul
dec
or
call
(bad)
(bad)
jmp
(bad)
int3
fisubr
and
inc
fidiv
xor
jmp
(bad)
mov
fld
stos
mov
mov
out
ret
into
xor
mov
dec
fisttp
sbb
dec
je
shl
cli
jae
pushf
fs
or
push
lock
js
xchg
cmp
js
mov
xor
fs
sub
int3
vpor
test
jge
imul
int3
sub
pop
push
mov
push
sar
mov
xchg
aas
test
push
imul
jne
jnp
pop
dec
pop
sbb
adc
pop
outs
sbb
sub
push
inc
call
icebp
inc
cmc
mov
adc
(bad)
out
push
sahf
adc
adc
xchg
sub
pop
jbe
aam
xchg
jecxz
sbb
imul
mul
push
pop
sbb
enter
push
sti
cmps
out
cmp
add
add
push
sbb
cmp
mov
xor
add
(bad)
inc
cmp
sbb
jne
jo
loope
mov
push
add
inc
scas
mov
xchg
jae
mov
outs
int
xor
pop
and
xchg
and
sub
xlat
rcl
xchg
test
adc
dec
repnz
fisub
push
jl
fcom
lock
mov
shl
and
inc
mov
out
(bad)
ja
add
cld
xchg
sub
and
mov
mov
mov
mov
data16
adc
inc
test
cmp
movs
push
enter
imul
mov
adc
in
stos
or
cmps
repnz
neg
leave
mov
into
fld
bound
pop
sahf
xchg
sbb
mov
in
mov
movs
das
and
scas
dec
pop
repnz
loope
inc
push
cs
jg
push
ds
adc
in
inc
xor
push
pusha
stos
xchg
ins
fbstp
cmps
dec
mov
shl
cmp
clc
mov
stos
ja
aas
dec
imul
cmp
shr
cmp
data16
into
aam
icebp
(bad)
sar
and
enter
jno
jnp
lds
test
push
addr16
push
push
sub
jbe
retf
movs
in
imul
xchg
mov
daa
daa
or
test
popa
mov
sbb
jnp
imul
out
fild
jb
xlat
xchg
inc
inc
adc
dec
mov
popf
inc
xor
cvttps2pi
mov
cmp
push
cwde
scas
adc
dec
outs
xchg
stc
bswap
ss
cs
push
mov
pushf
ins
out
loopne
aaa
in
aaa
jnp
lea
cmp
sbb
push
pop
push
sbb
movs
test
jne
(bad)
mov
loopne
xor
xor
and
xchg
push
adc
inc
push
mov
std
jle
sub
and
(bad)
add
inc
dec
add
cmc
xchg
test
in
fdivr
sub
sub
xor
sub
div
push
push
into
push
and
cmp
jae
sbb
popf
das
dec
aad
xor
dec
data16
add
les
xchg
and
stc
sahf
mov
xchg
fdivr
and
ins
iret
xor
sti
ins
jb
fsubr
lahf
pop
xlat
test
int
mov
outs
jae
push
aaa
xor
ret
shl
movs
inc
repz
loopne
clc
frstor
clc
jo
repz
jp
and
stos
gs
mov
lock
xlat
(bad)
daa
mov
sub
mov
mov
shr
leave
js
mov
dec
repz
and
ins
dec
bound
in
sbb
leave
push
clc
mov
pusha
cmp
sub
sbb
adc
icebp
mov
sub
(bad)
mov
add
sbb
cmps
in
and
test
xchg
shl
stc
pop
in
mov
icebp
(bad)
xchg
mov
push
mov
cli
xchg
push
rcl
je
out
les
repz
pop
aam
lea
adc
in
jmp
test
sti
lods
cwde
adc
lds
fistp
jl
push
mov
mov
data16
mov
popa
dec
icebp
and
es
addr16
push
jns
retf
push
out
out
jne
add
ret
xor
jo
mov
call
mov
pusha
call
stc
and
add
sub
jns
dec
outs
cmps
adc
in
in
inc
ins
pop
dec
loopne
push
out
mov
pop
pop
clc
scas
pop
lods
rcl
cmp
dec
adc
sbb
ss
fld
inc
sub
in
add
jb
loop
stos
mov
mov
out
les
ins
mov
test
mov
(bad)
bound
in
jne
xor
push
rcr
add
nop
sub
sbb
jl
imul
mov
push
pop
scas
inc
push
call
in
add
icebp
adc
scas
add
push
test
rol
sub
popa
pop
dec
(bad)
add
cmp
(bad)
mov
rol
jp
cmps
jmp
and
inc
adc
aam
xchg
dec
or
hlt
fcom
and
push
in
mov
dec
arpl
les
out
jle
ror
sbb
test
cmp
xor
xchg
jge
push
xor
aas
sbb
hlt
sahf
es
cmp
xchg
es
pop
in
dec
mov
jnp
inc
push
call
push
inc
jp
ja
hlt
mov
call
(bad)
imul
jbe
lock
in
inc
popf
inc
in
add
stos
test
inc
lahf
jecxz
push
out
inc
dec
inc
aam
sar
pop
and
lahf
jle
in
dec
icebp
fxch
xor
inc
mov
or
adc
(bad)
int
imul
cmp
test
and
add
retf
jns
mov
sub
adc
jmp
jb
fcmovne
call
cmps
mov
mov
and
mov
into
repnz
cmp
xchg
push
out
pop
das
fwait
cmp
jmp
movs
test
stc
inc
out
test
imul
(bad)
mov
and
dec
push
cmp
sbb
shl
rol
push
(bad)
(bad)
jnp
adc
lea
sub
mov
outs
or
inc
jno
mov
into
dec
cmp
addr16
mov
pop
int3
pop
aad
fs
call
push
aad
push
push
ins
dec
sub
adc
outs
jnp
jne
(bad)
and
or
push
pop
and
sti
lds
adc
push
test
jmp
lods
inc
fldenv
or
xor
sti
mov
and
loop
pop
ins
add
jle
mov
mov
jmp
or
cmp
popf
xor
daa
sub
sbb
test
or
mov
push
pop
mov
xor
scas
pmulhuw
scas
sub
mov
mov
xchg
mov
daa
(bad)
push
xchg
(bad)
ins
jnp
push
or
or
loope
fnstenv
sub
jmp
or
push
fs
pop
mov
mov
es
dec
add
add
mov
ret
shl
and
xchg
mov
jae
iret
jecxz
or
imul
shl
mov
shl
ror
fimul
jae
pop
pop
inc
cmc
and
cmp
into
mov
push
pushf
cwde
shl
idiv
fwait
lea
add
mov
ror
push
xchg
iret
cdq
and
retf
jecxz
xor
retf
(bad)
dec
repz
cld
push
in
push
es
popa
cdq
sub
in
leave
loop
jle
mov
sbb
inc
lea
or
push
push
lar
inc
push
in
test
pusha
xchg
jnp
jbe
and
push
mov
cmps
pusha
pop
lods
push
add
xchg
dec
mov
cmp
dec
ins
mov
in
mov
sub
sub
int3
shr
jnp
cmc
inc
adc
or
sub
xlat
or
jg
mov
xor
scas
mov
dec
mov
jl
push
jmp
test
mov
sahf
mov
das
mov
mov
shr
xlat
fstp
mov
outs
jo
jb
add
out
inc
jo
pop
mov
sub
sbb
cmp
test
out
xchg
(bad)
pusha
fstp
xchg
js
jns
cwde
mov
or
sysret
pop
rcl
hlt
push
imul
or
out
cmp
jbe
fnstcw
sub
(bad)
pop
(bad)
cmc
retf
jl
sub
fnstenv
gs
(bad)
dec
add
(bad)
movs
lds
lahf
fwait
cmp
adc
adc
inc
or
inc
adc
push
jb
xchg
cmp
xor
repnz
add
and
loope
jno
xchg
mov
dec
jb
inc
mov
aas
sbb
cwde
mov
xchg
jmp
(bad)
neg
adc
inc
data16
rcl
sub
repnz
mov
jbe
sub
sbb
lods
icebp
cmp
inc
loope
jb
ds
test
mov
push
aaa
in
pop
test
xchg
mov
scas
gs
les
fsubr
pop
and
out
out
xlat
loopne
ins
retf
lock
rcr
lahf
mov
mov
in
sar
cmps
fsub
retf
mov
add
cmp
(bad)
jecxz
punpcklbw
mov
sahf
mov
xchg
sbb
xor
int
xor
cmc
mov
cmp
pop
dec
add
xchg
cmps
hlt
lock
pop
daa
cmps
je
add
rol
jns
pop
cdq
add
push
test
pushf
push
mov
push
mov
adc
lods
dec
pop
push
sbb
jb
sub
mov
pop
mov
pop
lods
sbb
inc
cmc
fwait
sub
into
jecxz
arpl
mov
mov
cmp
(bad)
pop
mov
and
sbb
out
xor
jge
popa
fwait
mov
sbb
out
push
loop
or
ins
pop
shl
outs
jnp
out
outs
(bad)
add
pop
add
popa
outs
retf
xchg
cmps
into
aam
jmp
icebp
loop
stos
fist
pop
sub
jecxz
adc
pop
mov
int
add
adc
in
mul
bound
jbe
mov
xchg
outs
scas
out
repnz
(bad)
imul
mov
sbb
xor
ins
stos
or
ja
fist
pushf
enter
or
sbb
js
sub
jp
push
je
mov
ss
into
mov
xor
loope
stos
xchg
dec
add
push
push
adc
push
(bad)
adc
inc
ds
and
jnp
sbb
ret
xchg
adc
cs
dec
mov
mov
cs
cmp
movs
out
inc
mov
jecxz
fucomp
mov
iret
jge
xchg
outs
sub
sti
in
call
or
pusha
mov
or
mov
inc
jb
lea
inc
out
inc
mov
addr16
inc
movhps
mov
sbb
ffree
pop
fisub
mov
push
mov
adc
adc
adc
cmovge
dec
inc
cmp
cmp
pushf
sub
add
jae
loop
sbb
xor
pop
pusha
adc
pop
inc
test
arpl
mov
ds
loop
add
xor
mov
pop
xchg
xor
and
test
ins
push
movs
cmps
jae
fld
pop
jno
ret
jmp
repnz
sub
fld
push
mov
loop
push
cmp
ret
mov
jg
popa
out
xchg
adc
adc
retf
cmp
adc
pop
arpl
mov
pop
jbe
aam
pop
test
pop
cmp
imul
fwait
sbb
jecxz
mov
push
movs
out
jb
inc
sub
or
gs
pop
mov
sbb
jns
ds
or
enter
pop
les
out
xor
fsubr
jb
sahf
call
addr16
in
sahf
xchg
shr
dec
hlt
lahf
fdiv
sub
fild
dec
mov
sub
arpl
or
fsubrp
inc
add
mov
or
icebp
cli
test
jge
fwait
(bad)
idiv
add
(bad)
sar
fcomp
jno
pop
sub
loopne
sub
in
mov
les
js
popa
or
push
adc
xor
(bad)
mov
sbb
ror
in
mov
test
and
pop
jp
sbb
add
out
pop
lods
cmp
add
js
adc
mov
dec
imul
xor
shl
pop
repnz
mov
mov
jmp
cmp
and
ss
sub
mov
retf
(bad)
adc
inc
mov
out
jp
add
and
jb
(bad)
gs
cmp
mov
imul
fsubr
test
inc
or
push
xchg
movs
add
frstor
or
into
jl
jmp
xor
push
pop
adc
and
aaa
xchg
cmc
jp
scas
mov
add
in
mov
xchg
add
jbe
sahf
mov
ja
and
adc
sub
cli
arpl
xchg
inc
repz
ret
bound
stos
mov
fistp
outs
lods
mov
jne
and
stos
jp
enter
repz
(bad)
stos
nop
xor
mov
sbb
loope
jmp
ins
popa
or
jbe
dec
adc
pop
shr
mov
call
xchg
add
fidiv
add
test
pop
mov
mov
sbb
xchg
aas
xchg
out
or
inc
daa
fcomi
test
ss
(bad)
push
or
push
inc
retf
add
out
add
cmp
fwait
pop
dec
or
out
daa
popa
bound
or
push
dec
inc
std
fcomp
mov
pop
inc
pop
fbld
mov
push
or
(bad)
and
iretw
mov
cmp
loope
and
pop
sbb
iret
mov
push
cmp
out
lahf
jnp
mov
sub
cwde
stos
call
mov
cmp
mov
jae
mov
or
shl
push
and
or
add
pop
jb
jns
pop
(bad)
imul
and
lahf
les
mov
push
enter
dec
mov
push
sub
inc
pusha
sbb
nop
fdiv
add
mov
rol
lahf
add
bound
es
ja
movs
push
dec
lahf
cmp
popf
or
idiv
cmp
pop
pop
loop
movs
int
shl
hlt
sbb
movs
fist
and
je
test
ret
mov
xchg
and
fsub
cmp
gs
pop
int
xchg
or
(bad)
mov
xchg
je
pop
hlt
test
add
stc
jnp
cld
dec
mov
sub
mov
bound
dec
popf
adc
mov
jno
scas
lds
jnp
shl
cmp
xor
mov
jns
sar
lea
lahf
mov
fild
inc
lods
sti
sub
dec
push
mov
retf
mov
inc
rcr
xlat
mov
sti
xchg
out
xchg
int
pop
(bad)
and
mov
aas
xor
dec
cmp
push
cmp
sub
nop
xchg
add
adc
mov
xchg
inc
sti
xor
mov
push
hlt
lahf
adc
dec
mov
fs
lods
xor
push
jb
clc
out
jge
cmp
pop
daa
dec
sar
push
cmc
xchg
push
push
(bad)
in
bound
sar
cmp
jle
(bad)
pop
(bad)
in
pop
pop
cmp
xor
mov
stc
data16
pop
mov
repnz
lea
ret
pop
or
lods
test
or
lea
frstor
sub
out
mov
out
(bad)
retf
jb
rcr
mov
icebp
xor
imul
xchg
movs
loope
in
out
xchg
dec
int3
imul
aam
add
jno
mov
fucom
sub
adc
push
push
into
pop
push
or
ins
mov
(bad)
sub
test
mov
rol
aam
dec
pop
xchg
aam
outs
popf
mov
adc
out
lds
sbb
not
pop
inc
adc
cdq
mov
cmp
adc
xor
push
out
les
and
icebp
mov
jmp
pop
push
push
sti
adc
dec
fistp
xor
movs
sahf
js
xor
xchg
into
adc
js
cdq
inc
sub
cwde
mov
mov
dec
mov
out
or
enter
jp
lods
push
movs
xchg
mov
fsubr
fist
js
leave
mov
push
adc
cmps
or
adc
out
cmp
adc
and
cmps
clc
(bad)
jb
sbb
mov
movs
(bad)
or
push
mov
and
jb
outs
cmp
xchg
push
jo
or
mov
clc
mov
fldenv
cli
mov
jnp
push
xor
fcom
cmp
(bad)
or
xchg
int
in
sbb
popa
xor
dec
movs
pop
xor
sbb
dec
and
les
repnz
mov
imul
xchg
pop
dec
and
jge
jnp
hlt
mov
cld
jns
hlt
push
cs
cli
repz
pop
stc
dec
aam
and
jae
jg
test
dec
(bad)
xlat
movs
jae
add
mov
add
outs
fadd
cmp
cwde
xchg
scas
jle
jl
ins
ins
call
cs
mov
cwde
movs
fist
repnz
popf
int
sub
inc
cmp
shl
mov
sbb
xchg
mov
cdq
gs
frstor
jno
add
gs
rcl
inc
adc
lea
sbb
fidivr
data16
inc
(bad)
xor
sar
jmp
test
dec
lahf
mov
es
inc
xchg
in
sub
mov
sub
addr16
cmp
adc
repz
and
jle
cmc
loop
pop
out
mov
ret
fnstcw
dec
jnp
sbb
jns
fst
add
lea
mov
fidiv
add
mov
ds
lea
cdq
sub
fidivr
jnp
pop
push
mov
adc
lahf
(bad)
pop
cmp
adc
dec
loop
outs
push
outs
ret
mov
mul
sub
pop
fucomip
(bad)
push
gs
js
sbb
or
xor
mov
jno
pop
stos
popa
aam
in
cli
outs
mov
pop
mov
xor
inc
movs
movs
push
push
jmp
jl
jo
cli
or
imul
js
iret
mov
jbe
jb
or
add
xor
rol
sub
push
hlt
sub
cmp
push
or
xchg
or
pop
test
push
stc
aad
cmp
push
dec
daa
xchg
(bad)
dec
mov
xor
sbb
lea
sbb
repnz
mov
(bad)
out
inc
inc
sahf
push
adc
out
in
test
enter
jb
jbe
adc
sub
mov
enter
sbb
cmp
popf
dec
cmp
lahf
xchg
mov
pop
sahf
es
sti
cld
jmp
mov
xor
cmps
xor
bound
(bad)
bound
scas
adc
xchg
mov
add
mov
or
add
inc
daa
lods
push
mov
xor
fs
push
cmc
inc
arpl
sub
mov
(bad)
jns
frstor
jo
inc
mov
sub
pop
scas
push
sbb
add
mov
dec
add
sbb
leave
in
inc
cmp
xor
div
nop
inc
add
push
(bad)
xor
push
mov
mov
test
cmp
xchg
je
inc
cmp
test
pop
sti
ret
das
das
or
xor
xchg
loop
(bad)
lock
inc
test
pop
add
sub
out
fidiv
clc
imul
stos
inc
xchg
xor
imul
cmps
fdivr
xchg
test
xchg
clc
pop
aas
dec
cmc
cmp
and
cmp
iret
dec
mov
push
dec
mov
in
xor
stc
adc
dec
mov
or
and
test
xchg
out
rcr
fsubr
loopne
cmp
xchg
mov
aam
ds
jp
movs
sti
add
push
add
enter
retf
stc
mov
popf
ins
test
imul
or
xchg
(bad)
cmp
xchg
cmp
xor
pop
and
pusha
int3
mov
stc
and
add
imul
movs
add
xchg
lahf
mov
pop
clc
je
lods
jmp
not
xlat
dec
ret
cmp
xor
cld
lods
jmp
add
in
fisub
fiadd
sub
fdiv
sub
test
movs
repnz
and
push
xchg
or
pushf
imul
mov
mov
inc
mov
inc
fmul
xchg
mov
cmps
int
fidiv
bound
adc
sahf
lea
xchg
add
adc
mov
shr
pop
lock
(bad)
movs
or
sub
mov
loopne
or
lods
(bad)
sbb
rcr
mov
dec
cdq
test
int3
inc
mov
or
clc
std
aad
push
mov
mov
rcr
mov
ficom
xor
(bad)
sar
cmp
sbb
imul
push
sub
sub
retf
gs
mov
sub
xchg
inc
and
in
(bad)
shl
mov
retf
pop
retf
xlat
and
int3
dec
popa
mov
mov
mov
retf
outs
lods
jns
push
cmp
outs
cmp
bound
xchg
jbe
fldenv
push
mov
sbb
fdiv
nop
pop
fild
pop
add
mov
in
scas
shl
cmp
stos
cmp
cld
xlat
repnz
mov
push
add
add
int3
and
fdiv
jo
inc
sub
dec
std
jge
jmp
cdq
fucom
das
nop
les
stc
lods
pop
fdivr
jmp
sbb
jle
loop
cmp
lock
(bad)
mov
dec
fs
jecxz
shl
xchg
mov
enter
lock
cmps
enter
lock
xchg
xor
into
jae
retf
stc
xor
push
(bad)
loopne
sub
add
adc
cmp
mov
out
jecxz
dec
and
sub
movs
loopne
and
or
ds
add
sbb
xchg
test
aam
inc
sub
cli
push
or
in
(bad)
fs
adc
(bad)
ins
pop
rcl
mov
sbb
jae
stos
dec
(bad)
push
jg
cmc
(bad)
je
cmp
cmps
fcomp
jne
cli
(bad)
enter
(bad)
(bad)
pop
psubsb
fstp
mov
dec
clc
xlat
pop
call
mov
test
pop
es
pushf
mov
add
jae
ror
cmp
push
lods
mov
stos
ins
jmp
cwde
dec
retf
loop
(bad)
dec
sbb
test
ins
jmp
or
sar
sbb
push
mov
dec
lahf
(bad)
test
loop
jno
dec
mov
cmp
adc
mov
push
pop
xlat
in
jp
push
sbb
fs
sbb
dec
call
push
dec
jge
xchg
dec
stos
mov
mov
lea
mov
ret
push
cli
out
test
cwde
pop
repnz
jb
pop
call
add
pop
and
or
or
stos
(bad)
arpl
mov
jl
je
cmp
stc
add
sub
or
xchg
and
pop
pop
dec
lock
std
ins
or
and
(bad)
hlt
and
cmp
push
cmp
pop
bound
mov
jg
call
loopne
and
jp
mov
aas
in
pop
loopne
out
bound
js
pop
cmps
mov
test
scas
hlt
mov
sar
xor
(bad)
imul
sbb
jbe
daa
or
ror
and
fisubr
jb
mov
or
xchg
data16
call
push
sbb
(bad)
in
sbb
fldenv
pop
(bad)
retf
mov
jg
je
xor
jne
popa
push
(bad)
mov
stos
dec
inc
push
mov
sti
mov
rcl
(bad)
outs
stos
push
dec
sub
mov
jl
mov
pop
call
sub
sub
jae
daa
les
xor
rol
mov
inc
and
xor
push
fsubrp
popf
(bad)
mov
cmp
gs
call
mov
stos
jl
fnsave
sub
in
push
jge
rol
cmps
(bad)
mov
jbe
aad
in
into
dec
in
mov
cmp
(bad)
adc
mov
lds
xchg
test
stc
pop
cmp
hlt
sub
pop
sti
add
in
mov
mov
shr
jmp
ds
xchg
or
movs
test
mov
sub
pop
ret
ss
mov
pop
call
jo
pop
xchg
fiadd
sub
mov
nop
adc
push
retf
in
sti
push
cmp
xchg
retf
push
mov
lods
xchg
push
sbb
pop
data16
pushf
and
and
mov
xchg
xchg
scas
inc
in
or
pusha
xor
cmp
jg
iret
push
lds
push
mov
test
cmp
jmp
jg
add
test
popf
daa
adc
outs
push
push
je
cmp
fldenv
es
hlt
aas
shl
push
shr
lahf
jae
add
movs
jmp
ss
adc
imul
(bad)
dec
call
dec
lock
xor
ins
fs
dec
ins
push
aad
adc
inc
std
cmp
repz
std
repz
ret
fnsave
int3
fist
add
cmp
cmp
add
fcmovne
cwde
mov
inc
xor
jle
popa
inc
stc
(bad)
aas
les
sbb
push
inc
nop
mov
lods
sbb
bound
push
cmp
xchg
sti
repnz
frstor
scas
out
xchg
pop
push
or
xchg
cmp
retf
mov
add
xor
xor
lahf
pop
pop
sahf
(bad)
ja
push
mul
xchg
and
popf
out
aas
cwde
mov
cli
sbb
push
inc
test
div
push
xchg
xor
xchg
xor
clc
adc
retf
ins
sbb
sbb
test
or
in
outs
ret
dec
adc
sar
adc
add
mov
popa
ror
loop
xchg
dec
jnp
cmps
repz
pop
and
faddp
dec
pop
sbb
jbe
push
stos
fwait
jge
mov
pop
dec
pushf
sysenter
or
dec
shr
(bad)
mov
cmps
adc
arpl
dec
in
ins
aam
pop
mov
sbb
push
mov
aaa
aaa
xchg
mov
or
adc
rcl
stos
(bad)
jmp
push
xchg
xlat
jnp
jmp
cmps
sbb
add
mov
xchg
lods
hlt
cwde
xchg
es
and
dec
xchg
outs
cmp
cwde
dec
inc
add
inc
sub
cmp
inc
or
add
ja
sub
imul
or
je
add
leave
gs
pop
mov
test
fld
push
mov
das
push
test
fstp
lahf
mov
dec
dec
dec
sub
dec
retf
sbb
xor
mov
outs
repnz
jb
mov
inc
sub
dec
movs
stos
inc
stos
xor
push
jns
pusha
inc
aas
pop
push
cmp
outs
mov
cmp
mov
call
inc
mov
and
rcr
pop
repz
and
(bad)
mov
rep
cs
sub
lods
mov
mov
adc
test
gs
pop
hlt
dec
jne
jns
cmps
gs
mov
pop
sti
xchg
mov
in
mov
pop
mov
ss
aas
iret
jo
idiv
fisttp
jg
hlt
jmp
xor
pop
dec
(bad)
je
mov
mov
mov
ret
std
push
or
pop
ja
sub
or
(bad)
push
dec
cdq
jbe
inc
push
ins
in
push
mov
pushf
lahf
das
mov
std
pop
mov
cwde
les
cs
mov
xor
cmp
mov
(bad)
and
mov
dec
or
or
into
push
popf
mov
add
mov
int3
dec
pushf
icebp
jl
jmp
dec
test
adc
loopne
sub
in
add
push
mov
pop
cli
in
shl
ins
sbb
xchg
iret
or
push
adc
aaa
jb
xlat
fucomi
dec
mov
ror
sub
scas
inc
int
leave
loopne
out
pusha
inc
and
adc
sub
lock
jle
cmp
js
leave
push
xchg
push
pushf
enter
(bad)
fidiv
mov
dec
xor
adc
ficom
xchg
and
(bad)
adc
jecxz
inc
jmp
aas
adc
xor
dec
mov
ror
mul
xor
lods
jbe
call
jo
mov
xchg
jne
jle
mov
test
xor
aas
movs
cld
lahf
sbb
fisubr
icebp
jno
xor
pop
mov
mov
pusha
(bad)
je
fisub
imul
sub
int3
and
test
outs
xor
mov
dec
jmp
fs
leave
cmp
mov
imul
xchg
cmp
xchg
pusha
nop
add
pop
repz
pushf
jle
inc
les
jmp
int3
pop
adc
add
or
mov
dec
pop
push
je
loop
mov
movs
iret
pop
js
push
out
push
add
pop
in
js
vpunpckhwd
jbe
ins
(bad)
retf
pop
stos
pop
bound
add
(bad)
aam
pop
aas
sub
mov
cmp
inc
xor
call
pop
stc
mov
fistp
pop
mul
jg
fcmove
cmps
leave
iret
in
addr16
lods
dec
xchg
mov
push
add
out
mov
jae
aaa
and
jmp
fs
cdq
fs
and
cs
add
int3
inc
outs
(bad)
pop
dec
lods
test
rcl
in
sbb
xchg
add
xchg
xchg
mov
addr16
or
sub
ja
and
push
cmp
enter
xor
push
(bad)
ffree
push
(bad)
ja
jl
add
scas
pop
dec
xchg
inc
sahf
sub
xchg
sub
pop
xchg
movs
add
imul
mov
inc
xchg
mov
xchg
cwde
sub
movs
mov
sub
sbb
scas
dec
popf
push
add
jae
jp
mov
icebp
dec
rol
xchg
pop
pop
pop
sar
jbe
cmps
push
sub
fstp
adc
pop
jl
sbb
ret
das
mov
lods
iret
sbb
cmp
popa
sbb
push
stc
pop
rcl
ja
imul
cmp
imul
jo
in
in
mov
adc
jno
(bad)
mov
xchg
fimul
and
shl
movs
repnz
rol
dec
cmp
scas
addr16
sub
fistp
bound
das
xchg
(bad)
mov
test
fbld
(bad)
dec
jg
mov
arpl
bound
(bad)
jae
push
mov
add
gs
jecxz
repnz
outs
in
adc
push
movs
jle
cmps
push
sar
imul
and
dec
push
scas
cli
adc
dec
dec
add
inc
das
ins
inc
test
cmp
pop
sub
pop
je
jle
call
iret
pop
rol
lds
adc
mov
nop
push
adc
sub
and
add
cmp
inc
mov
jg
dec
fs
das
js
lahf
pop
inc
pop
popf
add
push
dec
jb
adc
pop
add
popa
cmp
in
mov
aaa
cmp
aas
xchg
popa
jp
dec
xor
push
dec
jmp
lods
add
inc
clc
test
adc
jp
fidivr
cmps
adc
jg
push
addr16
inc
add
cmp
loop
mov
cmp
aaa
pop
rdpmc
add
sahf
rcr
sti
cli
leave
jecxz
cmp
(bad)
pop
xor
je
cli
cmp
add
retf
pop
dec
push
push
in
aam
hlt
jp
repnz
adc
mov
fnsave
test
dec
mov
ret
jne
jp
cmp
xchg
xor
nop
cmp
adc
mov
nop
fist
mov
adc
mov
mov
mov
scas
push
inc
fisttp
sub
adc
mov
jo
data16
mov
imul
sub
push
mov
xchg
mov
xor
xor
jb
fdivp
sub
shl
mov
pusha
das
outs
push
inc
xor
xor
(bad)
and
jae
imul
mov
mov
pop
repz
dec
jnp
ins
ret
lods
je
daa
sub
mov
(bad)
mov
daa
push
int
mov
pop
mov
pop
in
hlt
imul
out
into
in
jb
adc
hlt
hlt
test
and
inc
in
jle
in
ret
scas
sbb
sar
dec
adc
cmp
inc
loop
aas
cli
idiv
pusha
mov
inc
ret
es
jg
mov
ss
shl
cmp
dec
xor
daa
ror
or
retf
xchg
jmp
push
xor
scas
add
int
sub
push
test
ins
xchg
fadd
int
test
mov
int3
icebp
lds
pop
inc
(bad)
cwde
(bad)
jae
sbb
js
or
scas
jg
adc
aam
mov
adc
movs
not
sbb
jle
mov
mov
movs
repnz
add
jnp
nop
aam
mov
outs
and
mov
inc
xchg
nop
ret
aaa
add
bound
repz
mov
mov
mov
stos
lahf
(bad)
push
push
adc
ins
(bad)
push
mov
sub
push
(bad)
repnz
movs
inc
repz
pop
and
call
adc
cmp
mov
fld
or
aas
dec
mov
cmp
push
mov
(bad)
push
fadd
mov
jg
fnclex
sbb
xor
jno
pop
gs
lahf
sti
inc
xchg
and
fistp
fnstcw
sbb
xor
daa
pmulhuw
mov
inc
sbb
jno
jmp
inc
xchg
pop
mov
nop
mov
sub
cmp
add
pop
cmp
test
pusha
movs
les
inc
xchg
(bad)
data16
dec
sub
dec
xchg
push
push
ror
jae
mov
jnp
jg
inc
ja
dec
xchg
pop
xor
and
dec
pop
out
test
mov
in
pop
stos
pushf
jo
push
fild
jmp
scas
or
mov
xchg
push
push
in
inc
test
push
scas
aaa
sbb
dec
std
push
sbb
movs
mov
es
retf
add
fist
movs
dec
int3
adc
(bad)
fdiv
fnstsw
pushw
and
cwde
pop
mul
jge
cmp
fwait
in
jnp
lock
fs
movs
aas
pushf
scas
in
inc
pop
mov
sub
add
push
mov
xchg
sbb
cmps
push
out
mov
out
movs
cmp
dec
cmp
dec
aam
enter
xchg
out
jge
aaa
pop
fstp
nop
or
aad
push
ret
mov
add
fistp
daa
outs
inc
sahf
inc
mov
mov
ja
out
xchg
sbb
mov
inc
sub
xlat
jle
add
sub
xchg
mov
(bad)
fld
xchg
jno
add
loop
push
push
fstp
mov
lds
test
outs
call
jecxz
(bad)
xor
mov
loop
mov
jns
out
pop
pop
cmps
movs
push
ds
inc
out
push
sti
clc
clc
scas
mov
ficom
adc
cmp
jmp
dec
dec
mov
in
inc
bound
fnstsw
jnp
mov
stos
(bad)
and
dec
loopne
ins
xor
adc
xchg
adc
and
pusha
push
std
add
or
ins
sub
push
adc
(bad)
xor
loop
fnstenv
and
imul
xchg
into
dec
mov
in
mov
shl
and
shl
mov
adc
pop
dec
popf
cli
xor
arpl
and
test
mov
xchg
repnz
pop
sbb
stos
fldz
call
add
rcr
pop
(bad)
mov
aas
fmul
mov
ret
xchg
inc
sti
jne
lds
dec
out
mov
xor
jge
mov
in
fwait
cmc
cmps
pop
push
push
mov
mov
cmp
lahf
push
xor
mov
sbb
dec
sbb
jnp
sahf
jno
xlat
mov
mov
xchg
data16
div
aaa
sahf
push
xchg
int3
sub
jp
push
dec
cmp
jns
jne
push
imul
push
movs
outs
movs
mov
imul
adc
sbb
dec
outs
sbb
mov
xchg
jmp
leave
ins
fcomp
daa
push
out
sub
and
cmps
retf
mov
jmp
push
adc
xor
(bad)
xor
pop
shl
mov
les
xchg
mov
push
icebp
mov
mov
imul
jae
push
and
sar
sbb
xchg
shr
js
aam
js
hlt
shl
outs
push
pop
pop
jns
sub
sub
pop
pusha
sbb
ret
jmp
js
push
pop
jnp
adc
mov
sbb
xchg
or
jp
cwde
icebp
jmp
cmp
push
lods
sahf
ret
mov
pusha
fsubr
pop
das
mov
push
push
dec
cmp
jmp
fdivr
push
sub
or
popa
inc
and
lea
sbb
jb
jg
cmp
xor
cmp
out
and
and
out
maskmovq
div
cmps
and
mov
pop
mov
repnz
or
mov
add
sbb
add
dec
xlat
cs
idiv
loop
stos
scas
repz
pop
bound
addr16
pop
ins
repz
sbb
movs
fwait
icebp
ss
push
int3
ja
dec
pop
or
jo
imul
aam
cs
push
inc
shl
xor
mov
popa
xlat
mov
pop
ror
pushw
adc
mov
dec
out
in
ret
pop
mov
mov
std
dec
add
loopne
jns
test
mov
icebp
or
test
mov
fs
fist
push
je
addr16
lods
ret
pop
aad
adc
or
fild
lahf
(bad)
xchg
addr16
pop
sub
pop
jo
push
scas
pop
sbb
mov
jge
adc
xchg
xor
(bad)
lea
push
jae
push
inc
je
push
fisubr
retf
adc
mov
adc
mov
scas
mul
inc
sbb
aas
test
dec
outs
icebp
fcomp
aaa
pop
sahf
movs
adc
mov
mov
retf
pop
out
push
daa
adc
(bad)
mov
dec
dec
outs
les
mov
xor
inc
xchg
xchg
xchg
outs
mov
cmp
int
test
jne
add
rol
add
and
xor
test
mov
js
add
out
sbb
call
mov
push
sbb
add
jns
pop
popf
inc
sbb
outs
test
jmp
shl
adc
sbb
lea
fmul
mov
mov
loope
xor
daa
adc
mov
push
repnz
jb
dec
push
xor
out
out
mov
hlt
mov
in
push
or
pushf
adc
movs
stc
lods
or
test
icebp
mov
and
sar
imul
jne
call
call
gs
imul
repz
scas
sti
dec
pop
jecxz
jge
xlat
inc
dec
sub
cmps
add
xchg
push
repnz
(bad)
int
xchg
fdiv
outs
icebp
jmp
cld
push
nop
mov
mov
clc
aas
stos
mov
or
ret
fwait
ss
mov
jae
in
(bad)
mov
fs
retf
jns
push
mov
sbb
ja
scas
pop
or
js
mov
jo
out
jg
pop
fidiv
mov
pop
add
xor
or
in
cmp
cmc
aaa
pop
adc
lahf
test
aam
aaa
imul
pop
les
xchg
pop
(bad)
retf
rcl
xchg
pop
stc
dec
clc
xchg
cld
pop
lahf
xor
iret
adc
test
jge
dec
inc
pushf
sbb
mov
(bad)
xchg
push
bound
sbb
xchg
pop
cmc
sbb
sbb
sbb
ja
jae
les
loope
cmp
jmp
pop
cli
popf
retf
cmp
cmps
mov
jo
dec
sub
mov
sub
lahf
xchg
or
sub
mov
pop
in
cmp
cmp
cs
add
jp
ins
fdiv
jbe
repnz
jl
into
jns
scas
popf
retf
ins
out
fiadd
jae
cmp
mov
scas
(bad)
bound
push
je
xchg
stos
es
sti
sahf
add
push
retf
dec
(bad)
ins
imul
push
mov
mov
inc
das
in
fwait
out
mov
pop
xlat
stos
out
adc
push
fmul
sbb
cmps
dec
rol
adc
jmp
retf
or
xchg
xchg
mov
stos
push
sbb
sbb
int3
hlt
sub
not
xor
and
xchg
add
mov
test
xor
out
xor
mov
adc
jo
stos
addr16
fwait
cmp
pop
loopne
mov
ror
inc
loop
cmps
pop
sar
inc
dec
fsubp
xchg
loopne
pusha
lods
js
fs
movs
int3
out
mov
inc
rcr
idiv
and
cmc
mov
xchg
rcl
stos
lods
mov
inc
test
and
popa
jmp
jnp
jmp
stos
pop
push
xor
sbb
adc
out
xor
mov
push
scas
push
jo
jl
call
pop
jle
fisub
inc
mov
adc
data16
jge
adc
out
ds
in
sbb
sti
dec
mov
in
sbb
out
pop
arpl
xchg
mov
dec
sbb
adc
(bad)
xchg
jbe
cmps
je
outs
dec
call
xchg
xlat
mov
mov
out
add
sbb
inc
push
mov
xor
mov
pop
jmp
sub
mov
dec
dec
repnz
or
add
aad
xor
int3
adc
jge
xchg
jnp
shl
iret
mov
mov
repnz
js
sub
enter
lods
xor
sbb
clc
ret
call
or
inc
mov
xchg
je
mov
mov
cmp
fwait
sbb
mov
cmp
ret
push
and
enter
add
add
gs
dec
inc
sti
jmp
pop
mov
lds
jl
push
jne
mov
leave
mov
adc
inc
sub
push
out
sti
and
(bad)
mov
les
mov
out
or
fldenv
loope
fwait
rol
aas
out
outs
xchg
cwde
addr16
or
out
fwait
shr
ret
movlps
fisttp
cmp
xor
mov
or
ins
pop
loope
mov
mov
inc
sub
sbb
iret
mov
push
das
inc
or
pushf
mov
inc
pop
(bad)
js
dec
and
pop
pop
or
(bad)
imul
fisub
dec
stos
sar
jp
shl
xchg
adc
lds
(bad)
jns
scas
int3
lahf
cmps
adc
or
push
xchg
les
shl
rcr
test
outs
and
pop
mov
scas
pop
mov
lock
adc
test
rol
retf
ret
test
cld
cmps
jnp
fist
test
dec
cmp
lahf
pop
arpl
and
push
imul
sar
popa
xchg
push
add
(bad)
mov
(bad)
xor
cs
push
int
popa
in
mov
js
sti
lods
test
aad
cld
push
scas
mov
test
push
cmps
bound
jo
push
inc
sub
pop
cmp
cdq
rcl
(bad)
mov
out
icebp
xchg
push
mov
push
cmps
fucomp
inc
mov
je
repnz
and
mov
mov
mov
idiv
fadd
sti
and
repz
ds
les
div
fs
jmp
dec
mov
push
sub
mov
enter
call
dec
out
data16
cs
retf
scas
pop
mov
mov
jg
mov
loope
and
push
sub
push
lea
push
mov
(bad)
aaa
sub
loopne
int
jbe
out
dec
mov
inc
sub
pop
mov
call
dec
mov
push
xchg
(bad)
xor
shl
mov
mul
popf
inc
xlat
xor
add
fnsave
mov
(bad)
sub
mov
cmps
mov
dec
cmp
jg
cmp
and
fstp
retf
pop
(bad)
outs
pinsrw
out
xchg
aam
push
xor
out
das
push
jmp
adc
pop
xchg
jmp
and
dec
or
ret
cmp
lds
push
std
pop
pusha
xor
dec
adc
inc
retf
mov
mov
xor
shl
loope
lods
pop
push
jae
inc
repnz
fidivr
shl
cwde
rcl
sub
or
pop
int3
xor
(bad)
sbb
or
ja
into
jmp
cmp
repz
repnz
ret
mov
ins
and
psllq
cmp
mov
mov
adc
mov
jne
mov
inc
sahf
pushf
jl
xchg
mov
cmp
jecxz
jmp
dec
push
jno
out
test
dec
stc
xchg
xor
popa
mov
mov
sub
cmps
ja
shr
xor
xchg
cmp
push
or
hlt
stc
out
(bad)
sahf
dec
sub
test
data16
pop
test
mov
jae
push
cmp
mov
cdq
in
(bad)
cmps
xor
mov
ret
ds
std
jbe
dec
mov
in
push
call
cmps
and
mov
xlat
mov
jle
xchg
pop
fwait
pop
js
jae
xor
repz
dec
and
and
add
iret
sar
(bad)
xchg
jbe
jns
pop
and
jle
add
dec
or
aam
cmp
add
xor
or
and
push
cmp
inc
pushf
xchg
pop
(bad)
sub
xor
sub
push
sbb
rcl
loope
inc
inc
mov
push
loopne
movs
(bad)
inc
or
add
in
sub
push
pop
jns
fdiv
ret
mul
sub
dec
fild
cli
xchg
imul
add
(bad)
sbb
cmp
movs
test
les
cmps
movs
lea
movs
and
retf
(bad)
push
packsswb
mov
call
stos
jl
daa
jl
aam
push
push
jmp
mov
jge
sbb
jp
dec
push
mov
xchg
mov
sub
and
stc
push
xor
and
pop
out
push
scas
and
xor
mov
test
push
push
or
ret
ja
jmp
add
stc
in
and
jmp
dec
mov
out
jl
sbb
xchg
imul
jmp
push
test
and
sbb
inc
shr
out
mov
lock
fst
shr
int
xor
das
and
cmc
out
stc
xchg
retf
adc
pop
push
rcr
xchg
mov
(bad)
(bad)
cmp
pop
add
and
mov
or
dec
in
or
pop
dec
retf
xor
movs
xor
pop
push
sbb
jmp
push
sub
and
inc
mov
sub
stos
movs
mov
stos
ds
ret
pop
dec
test
scas
dec
or
pop
mov
dec
neg
push
test
test
sti
fnstenv
jle
dec
icebp
fsubrp
not
jle
sti
push
mul
dec
cmp
jmp
or
sar
jmp
shr
stc
out
jecxz
pusha
mov
mov
cmp
inc
in
pushf
std
sub
sbb
fmul
sub
nop
xor
aad
add
push
into
mov
int3
ds
in
sub
sar
or
cmps
das
dec
cmps
adc
test
and
fdiv
adc
ins
lods
stos
push
inc
mov
jb
jl
jno
xor
mov
mov
mov
and
dec
jb
loopne
repnz
retf
cdq
popf
je
retf
pop
and
es
jecxz
sbb
mov
push
lea
vmovd
cli
(bad)
pop
out
popf
push
int3
int3
loope
sbb
jb
mov
and
test
and
adc
mov
(bad)
and
(bad)
loop
xlat
xchg
test
sub
movs
lods
push
adc
arpl
std
sahf
mov
movs
cmp
stc
clc
xchg
pop
imul
inc
mov
xor
push
rcl
pushf
jmp
or
inc
push
sbb
das
fistp
call
inc
push
xor
mov
mov
test
iret
cld
mov
ins
jno
mov
fwait
adc
enter
ss
ds
pusha
je
ret
pop
or
sbb
pop
mov
nop
shl
mov
cmp
push
and
rcl
push
into
pop
cld
call
repz
inc
adc
fneni(8087
xor
xor
pop
mov
jle
and
fcmovnbe
repz
xchg
jecxz
xor
in
gs
ja
xchg
and
retf
ins
jno
pop
cmps
pop
jae
clc
cmp
or
pop
push
or
pop
(bad)
push
dec
adc
adc
sar
add
dec
das
push
jno
lods
neg
push
test
cld
mov
aam
movs
test
or
cmp
call
pop
and
call
pushf
imul
lds
imul
inc
shl
cmp
imul
jmp
call
test
in
or
jnp
ss
xchg
fs
push
pop
push
(bad)
cmp
(bad)
rcl
jg
fdiv
(bad)
jecxz
and
je
fs
stos
cli
xchg
xchg
pop
shr
sub
add
iret
or
jl
int
les
mov
xchg
call
pusha
sub
add
mov
fdivr
fdivr
lea
xor
xchg
mov
push
jmp
(bad)
daa
aaa
or
xchg
loope
sub
pushf
pop
dec
lahf
dec
scas
jl
add
push
or
sti
inc
push
fstp
mov
mov
pusha
inc
enter
stos
dec
mov
ficom
mov
stos
and
mov
aad
(bad)
sti
cmp
(bad)
ds
out
pop
pop
pop
mov
mov
call
dec
xchg
pop
mov
push
repnz
lods
out
and
mov
icebp
push
gs
mov
ss
ret
push
cmps
(bad)
int3
add
mov
pop
push
pusha
mov
xchg
sub
mov
adc
xchg
mov
out
cmp
movs
cmp
stos
and
pop
adc
fiadd
or
fcmove
fist
cmc
add
cmp
xor
call
shl
add
inc
out
(bad)
push
sub
hlt
sahf
sbb
mov
mov
inc
adc
pop
popf
ret
stc
add
inc
xchg
sbb
pop
loope
fld
out
mov
xchg
jnp
cld
lods
das
pushf
loop
cmp
push
xchg
jmp
ficom
or
adc
dec
stc
nop
popf
mov
out
jmp
and
or
add
mov
(bad)
mov
jo
dec
cmp
push
das
iret
and
sti
loope
ins
cld
call
bound
jo
push
cwde
lea
test
dec
call
rcl
les
js
xchg
mov
cmc
mov
ins
and
repnz
cmp
push
cld
lods
mov
loop
lods
shl
or
cmp
loopne
xor
mov
or
push
dec
in
jo
sbb
std
or
aas
retf
fwait
and
scas
mov
inc
repz
cmp
cdq
lods
push
xchg
in
mov
xchg
xchg
imul
add
or
push
or
push
xchg
jl
or
repnz
jmp
push
sub
xchg
xchg
xchg
pop
cs
iret
fsubr
xor
add
push
out
test
dec
ds
jnp
popf
sub
shr
ret
add
arpl
lea
adc
push
aam
pop
dec
scas
inc
sbb
xor
lods
dec
(bad)
cmp
repz
and
ins
(bad)
mov
fmul
es
and
push
lods
(bad)
outs
dec
call
(bad)
and
mov
daa
popf
cld
push
and
or
fwait
into
inc
jg
ficomp
sub
inc
cmps
sbb
mov
aam
ins
dec
xor
repz
push
ret
test
and
jl
pop
fdivrp
jne
mov
dec
aam
jns
jmp
xchg
push
mov
xchg
(bad)
xchg
and
popa
mov
mov
lahf
and
jo
data16
sbb
repz
add
dec
add
or
jl
pop
pushf
inc
mov
loope
xchg
add
jae
sahf
inc
cs
sub
clc
loope
dec
mov
jge
sub
ins
test
xor
mov
cmp
push
push
push
bound
inc
and
and
outs
mov
int
sbb
das
inc
sbb
jbe
cmps
xor
xchg
inc
jne
sbb
cmp
xchg
jae
jg
push
or
mov
cmp
arpl
fucomp
xor
jmp
jo
mov
push
clc
and
mov
mov
push
into
and
inc
sub
jb
or
hlt
xchg
and
mov
inc
pop
scas
lahf
retf
fsubrp
pop
pop
ret
xor
nop
push
push
(bad)
xchg
fmul
mov
sbb
or
fdivr
adc
ficomp
or
adc
sub
jns
dec
shr
sub
enter
int3
scas
popf
fcom
stc
(bad)
cmps
mov
sub
(bad)
test
or
mov
ror
cli
cmp
xchg
dec
loop
pushf
cld
cmp
loope
pop
cmps
jl
test
bound
popf
sti
daa
pop
fsub
jno
test
arpl
(bad)
mov
mov
push
mov
xor
and
ds
ins
sbb
dec
cmps
xchg
(bad)
sbb
je
sub
xlat
fisttp
jbe
repnz
test
(bad)
out
push
adc
xchg
hlt
sti
out
enter
xchg
cwde
mov
inc
push
push
cmp
cwde
xchg
fisttp
enter
push
xchg
mov
add
pop
inc
pop
adc
mov
add
mov
adc
adc
cs
in
add
neg
gs
mov
adc
maxps
or
adc
add
mov
push
or
test
movzx
jmp
call
and
fwait
aaa
adc
push
mov
pop
scas
adc
or
dec
imul
ins
ficom
xor
push
sbb
call
cmp
js
cmp
sub
ror
add
xchg
jmp
shl
dec
jno
xchg
std
fs
mov
sbb
lds
jmp
aad
test
xor
xchg
call
inc
(bad)
cmp
xor
or
jne
add
xchg
ins
sbb
jo
mov
jmp
xchg
sub
xchg
aas
xor
sbb
test
jl
jmp
jb
ja
mov
sub
hlt
pushf
pop
test
(bad)
jae
lahf
adc
inc
and
dec
pop
dec
lods
popa
push
add
cwde
dec
sub
inc
dec
imul
mov
add
fisttp
rcl
add
inc
pop
xor
popf
pop
sub
or
loope
push
inc
jmp
ds
adc
inc
clc
lea
jecxz
fmul
or
mov
test
jno
in
add
aam
xor
pop
pop
(bad)
ja
cmp
popf
add
push
movs
dec
dec
retf
popa
addr16
push
sbb
ret
leave
sub
add
xor
sbb
mov
xchg
dec
test
es
add
xchg
mov
loop
sbb
xchg
mov
outs
imul
fimul
cdq
push
and
scas
test
jmp
push
imul
aaa
aaa
das
mov
sbb
retf
dec
push
pop
add
pop
mov
daa
mov
mov
bound
push
mov
jg
push
jp
enter
in
jge
sub
dec
(bad)
push
(bad)
cmp
inc
dec
xor
add
sbb
stos
fcom
inc
test
fimul
sti
aad
mov
repz
xchg
movs
push
jl
aad
mov
dec
sub
or
scas
sbb
out
mov
loop
mov
pop
xor
fstp
jo
inc
mov
(bad)
push
push
into
ret
cmp
(bad)
shl
sbb
dec
push
dec
out
leave
test
jmp
jnp
lods
sub
nop
add
or
mov
push
xchg
sbb
push
jecxz
test
jnp
lods
jle
mov
adc
cmps
retf
adc
or
mov
xchg
rcr
mov
sbb
std
add
fisubr
dec
(bad)
jecxz
sbb
xchg
icebp
jne
cmp
mov
or
lea
shl
or
je
retf
ret
int
stos
mov
clc
cmps
ins
repnz
repz
xor
fs
fucomip
adc
sbb
push
addr16
pop
inc
aam
adc
mov
dec
xlat
dec
inc
and
movs
mov
adc
push
xchg
pushf
dec
into
push
adc
fsub
(bad)
xchg
std
lods
out
(bad)
(bad)
sub
and
imul
cld
inc
xor
push
vmread
sbb
mov
jge
mov
jo
fdivr
retf
js
ret
hlt
adc
shr
cs
cli
not
or
in
mov
enter
cmps
test
inc
fsubr
cmp
sub
cmp
clc
cmovno
pop
xchg
sbb
xor
push
jmp
xchg
test
mov
xlat
imul
adc
mov
stos
fs
mov
inc
jle
xor
pop
frstorw
lods
ret
popf
mov
mov
xlat
inc
out
or
rcr
push
or
sahf
pop
movs
sub
fs
mov
sbb
xchg
nop
mov
jecxz
scas
out
mov
loopne
jae
in
leave
dec
mov
das
mov
mov
add
mov
jge
inc
push
push
and
sub
lock
push
xchg
popa
push
test
js
(bad)
outs
std
pop
ds
cwde
ret
xchg
inc
pop
je
pushf
aas
inc
das
outs
(bad)
jl
hlt
icebp
cld
jae
xchg
dec
xor
lock
mov
add
dec
jno
out
shl
lods
adc
xchg
mov
jle
in
cs
push
or
or
cmp
push
mov
loopne
nop
fisttp
push
xor
push
test
jns
pop
iret
je
loope
jecxz
fadd
mov
pop
inc
push
or
or
aas
cmp
inc
mov
call
sub
mov
mov
push
push
adc
div
and
adc
and
idiv
stc
and
adc
xchg
xor
and
out
inc
aas
cmp
push
push
div
clc
mov
dec
mov
cld
aad
cdq
pop
cmp
ins
mov
sbb
cmp
iret
mov
test
jbe
jmp
pop
jge
das
es
into
or
mov
and
pusha
jmp
je
add
or
sahf
dec
xor
push
jmp
bnd
cld
pop
(bad)
jp
fidiv
rcl
xchg
daa
pop
ss
mov
in
cmp
mov
rcr
inc
das
pop
icebp
add
push
xchg
push
push
cmps
dec
inc
dec
cmp
cmp
dec
mov
outs
xchg
jmp
xchg
nop
shl
or
push
xor
dec
fisubr
or
(bad)
retf
(bad)
dec
jg
in
rol
repz
aas
dec
test
outs
mov
jecxz
test
test
ret
adc
push
mov
