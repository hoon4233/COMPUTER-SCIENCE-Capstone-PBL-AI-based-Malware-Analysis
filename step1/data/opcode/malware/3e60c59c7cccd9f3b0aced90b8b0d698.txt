sbb
add
jmp
pop
adc
jecxz
mov
push
test
pop
gs
dec
lock
and
jbe
iret
mov
push
pop
mov
ret
mov
pop
and
mov
adc
stos
mov
add
xchg
daa
mov
pop
mov
jl
retf
cwde
ret
ss
sahf
dec
ins
stos
daa
adc
push
mov
sub
push
pop
inc
adc
adc
jne
leave
cmp
xor
fisub
cmps
ins
lock
xor
mov
and
popa
jge
cmps
pop
add
(bad)
sub
fidivr
mov
lds
fnstsw
retf
dec
pushf
aad
nop
sti
sub
or
les
mov
cmp
fwait
push
das
adc
loop
ja
pop
inc
cld
mov
and
push
test
cmc
adc
inc
popf
sti
mov
mov
(bad)
jecxz
int
mov
sbb
in
cmp
mov
loopne
mov
push
sbb
mov
loop
cmps
stc
test
fsubr
xchg
xchg
dec
mul
das
ret
jae
push
xchg
lds
stos
dec
pusha
retf
shr
cmp
ins
mov
xchg
js
pusha
pop
push
push
add
movs
add
es
das
dec
jae
push
mov
mov
jne
ds
test
movaps
cdq
movs
mov
popa
add
inc
push
into
inc
mov
sub
outs
sub
scas
call
push
inc
je
sbb
lea
dec
fiadd
movs
mov
mov
icebp
dec
data16
dec
fcom
xchg
inc
ins
test
inc
push
xchg
xlat
fldenv
ret
add
fsubrp
jmp
aaa
sbb
or
inc
xor
aas
aad
mov
jo
aad
or
jno
pop
pusha
test
lds
retf
arpl
test
add
fdiv
aas
push
shl
(bad)
sti
(bad)
jmp
enter
adc
mov
mov
jg
pop
pusha
xchg
mov
pop
sub
sbb
clc
test
pop
sbb
jnp
stc
shr
dec
in
and
dec
mov
icebp
add
in
mov
mov
dec
push
scas
pop
call
scas
(bad)
mov
(bad)
imul
loopne
xchg
or
cli
add
cmp
xor
outs
xlat
test
jl
out
xor
jg
sub
mov
addr16
loop
ficomp
call
mov
add
mov
lods
and
outs
mov
test
add
add
add
inc
sub
fld
(bad)
xchg
xor
es
push
cmc
enter
enter
movs
scas
push
pop
stc
in
dec
lods
xchg
jp
jmp
arpl
popf
adc
cmp
mov
je
dec
mov
call
lea
mov
push
mov
imul
ins
fidiv
sahf
mov
jne
pop
(bad)
and
lahf
arpl
and
jg
(bad)
cli
(bad)
fstp
dec
adc
xor
jnp
inc
sub
mov
xor
fbstp
cmp
call
jecxz
arpl
xchg
cmps
jge
sub
lock
pop
and
xchg
xor
fdivr
cmp
pop
inc
fdivr
xor
cmp
icebp
les
cli
scas
shl
sbb
mov
dec
push
inc
cld
sub
loop
push
loope
sahf
dec
mov
pop
fbstp
fs
and
adc
mov
mov
pushf
pop
imul
pop
ret
adc
out
or
xchg
ja
shr
inc
push
nop
dec
mov
addr16
push
add
dec
bound
je
pop
(bad)
mov
add
mov
jns
xchg
inc
stos
nop
bound
inc
sbb
cmps
aad
outs
outs
retf
xchg
loopne
sbb
xor
xor
scas
mov
outs
push
stos
sub
in
sbb
dec
ds
pop
xchg
out
cs
test
push
push
or
rcl
popf
pushf
xor
jbe
div
dec
mov
outs
mov
sub
bound
xchg
je
mov
xor
and
arpl
lahf
imul
ds
outs
and
jmp
sbb
jmp
leave
adc
call
fcomi
xchg
push
jae
imul
imul
lea
or
push
fsubp
adc
out
ja
dec
inc
fcom
jo
jle
mov
je
dec
xchg
ret
mov
cmp
push
mov
jl
stos
gs
retf
aas
push
retf
lds
add
sahf
cmps
lahf
sbb
jmp
and
int3
ins
fsub
nop
xchg
fs
jmp
movs
mov
ins
sahf
jno
add
(bad)
add
outs
repz
call
mov
mov
js
mov
retf
or
push
das
mov
fcom
lahf
and
jecxz
out
lahf
ins
sub
and
push
call
mov
pop
int
movs
inc
mov
ror
pop
mov
add
pop
outs
call
int3
jne
push
lahf
push
retf
sub
int
mov
inc
mov
cmc
push
add
cwde
and
jmp
mov
int
push
sbb
cmp
inc
test
mov
and
rcr
mov
retf
add
out
cdq
mov
sub
mov
pop
sub
mov
jo
or
adc
xlat
dec
xchg
(bad)
xchg
imul
daa
or
clc
ret
pop
cmp
pop
pop
rcl
dec
inc
nop
loop
push
pop
arpl
leave
cwde
aad
fbld
jne
xchg
push
aad
shl
mov
fmul
in
mov
mov
sahf
jno
movs
mov
outs
stos
out
imul
neg
add
or
jecxz
fadd
inc
shr
xchg
fsubr
js
cmps
and
and
sbb
cmp
and
lock
outs
xor
and
shr
push
xor
xchg
pop
xchg
lea
cld
outs
fisttp
cmps
and
lock
adc
iret
stc
outs
add
xor
shl
fld
ret
adc
add
and
cmp
add
and
(bad)
mov
js
hlt
mov
push
clc
fbld
xchg
dec
pop
lahf
(bad)
mov
push
(bad)
aam
xor
icebp
leave
add
adc
cmp
mov
cmp
mov
push
cs
inc
fidiv
push
or
push
mov
xchg
les
adc
xchg
mov
ins
mov
pop
mov
or
xchg
mul
or
mov
pop
jg
movs
test
aam
lods
inc
mov
fdiv
and
test
lea
cmc
lock
adc
xor
add
mov
xor
(bad)
ds
int
sbb
(bad)
mov
sbb
mov
paddusb
lgdtd
push
push
mov
lds
movs
sub
sub
xor
imul
sub
jbe
or
sub
pop
pop
clc
mov
(bad)
movs
stc
sub
int
imul
cdq
sub
lods
sbb
popa
sub
imul
xor
ror
inc
xchg
int3
sahf
jle
hlt
push
dec
sub
leave
xchg
mov
mov
stos
jmp
cmp
inc
add
pop
mov
push
movs
add
and
popf
and
aam
in
sar
mov
ja
iret
cmps
push
fs
mov
jne
outs
cwde
pop
push
jg
mov
inc
sbb
(bad)
int3
xchg
sub
mov
or
aad
mov
push
(bad)
mov
pushf
cdq
daa
xchg
mov
mov
sar
mov
add
jp
xchg
dec
les
fcom
sub
or
xchg
push
sahf
jmp
mov
inc
mov
out
sub
cmp
push
dec
push
pop
rcr
pop
sbb
scas
neg
pop
push
outs
ja
adc
ror
inc
fnsave
int3
jg
push
sub
test
push
or
xor
adc
push
int3
mov
sti
add
mov
push
into
jmp
mov
cmp
sbb
daa
add
ins
xchg
ror
push
or
jo
inc
shl
xchg
lods
sub
add
jnp
adc
push
mov
ja
ins
push
les
add
and
inc
sbb
pop
mov
cwde
jl
xor
xor
rol
les
rcr
mov
pop
dec
mov
mov
jbe
pop
ins
sub
sub
lea
mov
sbb
in
vzeroall
and
scas
push
mov
mov
push
js
inc
jmp
popa
fcom
ficomp
adc
fdivr
inc
das
mov
cs
sub
mov
xor
sbb
mov
add
mov
and
xor
retf
sub
xchg
dec
mov
sub
iret
mov
pop
test
cli
sub
xchg
mov
iret
cpuid
sbb
sub
test
out
stc
sbb
cs
cmp
pop
mul
add
push
cmc
pusha
outs
pop
mov
xchg
push
inc
test
adc
jb
mov
sub
jle
test
pusha
sub
cmp
das
enter
cmps
mov
repz
int3
ja
xor
test
fs
mov
xchg
ins
sub
dec
ret
adc
adc
jmp
sbb
into
in
cmp
pop
(bad)
fwait
arpl
push
fisub
mov
nop
add
(bad)
int
add
inc
push
not
cmp
ins
int3
sti
aas
loope
lods
inc
inc
xchg
xchg
js
inc
xor
cmp
cwde
dec
sbb
cld
std
pop
or
jle
jmp
cmc
mul
cmps
in
lea
mov
sbb
cmps
push
push
addr16
xor
stos
out
xchg
loopne
pop
sub
add
jg
cmp
cwde
(bad)
(bad)
mov
inc
sbb
xor
jmp
push
jns
cmp
(bad)
cdq
adc
push
ja
pop
lods
sub
movs
inc
ds
jecxz
das
add
fwait
xlat
mov
or
mov
idiv
test
xchg
push
fcom
ret
ss
ss
inc
mov
dec
addr16
ret
jmp
jmp
dec
mov
scas
add
or
push
sbb
sub
push
shr
lods
das
call
or
mov
in
adc
dec
rol
cwde
adc
aad
jle
xchg
pushf
and
int
xor
fst
and
push
mov
mov
jne
pop
push
or
mov
jne
inc
loope
rol
lock
sub
sbb
sub
inc
pop
ins
stos
jbe
movs
xchg
fcmovu
cmp
in
jge
sar
scas
cld
jb
adc
idiv
jl
(bad)
arpl
jge
pushf
and
pushf
dec
inc
mov
outs
push
push
or
sbb
dec
cld
xchg
cmp
btr
mov
add
cmp
cli
mov
(bad)
lock
add
aaa
and
leave
mov
sbb
mov
jl
xchg
cli
inc
imul
cld
dec
mov
push
mov
ins
jge
xchg
xchg
lea
dec
push
dec
push
xor
daa
out
fistp
repz
sub
fidivr
cdq
sub
test
pop
outs
cmp
sbb
mov
jo
mov
adc
mov
out
ds
mov
push
mov
jl
imul
pop
xlat
sub
jo
rcr
xchg
cmp
adc
inc
mov
sbb
sub
stos
push
stos
lds
jmp
retf
xchg
xor
fucomi
scas
call
lods
jecxz
push
mov
es
movs
shl
rol
fnstenv
push
xchg
pop
or
mov
xchg
push
mov
aaa
mov
dec
loopne
inc
push
mov
aas
call
add
xor
add
nop
mov
xchg
jmp
mov
adc
rol
cwde
sub
pop
add
sbb
adc
sbb
stos
mov
(bad)
cmp
stos
pop
cdq
inc
test
inc
cmp
add
pop
icebp
mov
aam
arpl
and
sbb
ins
cmp
adc
(bad)
xchg
xor
mov
push
cli
lahf
call
jecxz
lock
pop
add
mov
mov
jecxz
out
jl
test
movs
sub
jge
or
bound
mov
sbb
loope
cs
bnd
lods
mov
(bad)
mov
gs
jecxz
retf
cmp
inc
fnstenv
push
jae
cmps
xor
sar
pop
je
cmp
retf
cmp
lock
aad
jae
cmp
jmp
cmps
mov
pushf
cmps
jbe
adc
cmp
push
inc
push
dec
outs
movs
xchg
das
arpl
mov
and
inc
mov
mov
mov
icebp
pop
jmp
lock
rcl
cmc
and
inc
mov
(bad)
hlt
movs
ror
or
mov
mov
or
push
jae
(bad)
and
or
xchg
lods
dec
and
test
call
fstp
push
xchg
dec
std
xchg
adc
fdiv
lods
leave
mov
fsubr
aam
das
ja
jg
mov
lods
xchg
in
popf
popf
xor
cdq
push
or
dec
sub
in
jl
sub
ins
xor
xchg
aam
mov
pusha
dec
fld
outs
(bad)
or
adc
dec
xchg
jmp
inc
mov
add
icebp
sbb
outs
push
fwait
sub
xchg
mov
cs
fisttp
inc
dec
push
adc
and
xchg
xchg
std
adc
xchg
mov
cbw
shl
dec
cmp
ds
lahf
or
jmp
(bad)
ss
push
push
sbb
aam
add
rol
aam
add
add
gs
lds
mov
add
sahf
rcl
(bad)
(bad)
sbb
xchg
pushf
mov
mov
adc
sti
xchg
and
es
icebp
mov
or
stos
push
or
data16
adc
dec
test
push
es
out
(bad)
jecxz
dec
(bad)
rol
mov
js
leave
dec
fsub
jo
cdq
test
out
mov
sub
dec
mov
cli
mov
sbb
inc
xor
cwde
aaa
cmp
gs
or
out
loop
outs
mov
retf
std
inc
cmp
jns
add
dec
and
mov
xchg
pop
loope
mov
ret
movs
mov
jecxz
out
or
scas
xchg
cmp
ret
and
dec
sub
in
pushf
pop
push
(bad)
cmp
mov
mov
ret
aad
sbb
dec
dec
les
adc
or
add
fucom
jle
fdivr
fwait
cmp
add
(bad)
push
jle
aad
ror
and
mov
mov
push
and
and
add
inc
sahf
push
pop
jne
xchg
fwait
test
and
ja
sbb
dec
sar
sub
or
xor
repnz
cmp
jne
aad
mov
fmul
mov
sbb
sbb
pop
push
inc
repz
or
pushf
jp
int
add
sub
stc
stc
in
xor
cmp
or
jns
dec
test
pop
movs
rcr
jne
sub
cmps
xor
pop
mov
or
cwde
call
test
add
adc
call
or
stos
or
add
jae
mov
sub
lock
and
pop
into
jae
xchg
or
stc
xor
jmp
aam
cmp
sbb
dec
stc
scas
sbb
pop
(bad)
call
mov
(bad)
cli
push
mov
adc
jae
mov
rcl
sub
repnz
repz
mov
test
mov
mov
mov
mov
xor
std
and
bnd
xchg
dec
fadd
xchg
sbb
out
jg
fdiv
xor
push
mov
test
cs
dec
fimul
and
mov
lods
sbb
enter
adc
or
sbb
test
push
push
xchg
add
sub
mov
sub
push
mov
pop
mov
mov
(bad)
cmc
inc
ficom
(bad)
or
or
repnz
push
mov
cmp
(bad)
js
out
mov
sbb
mov
xchg
fisttp
inc
pop
dec
inc
enter
outs
jne
push
retf
dec
or
hlt
adc
(bad)
or
pop
loope
cwde
sub
push
sbb
mov
aaa
inc
add
retf
cmp
repnz
mov
mov
push
sub
sub
jle
pop
xor
aaa
xor
or
aas
movs
ins
in
stos
cli
push
mov
imul
push
ds
popf
movs
fldcw
xor
jbe
inc
push
jb
icebp
daa
rcr
mov
push
ins
push
outs
xchg
xchg
pop
nop
inc
xor
icebp
inc
mov
fidiv
sub
aam
arpl
and
loope
imul
dec
leave
push
cld
cmp
adc
jmp
pop
inc
xchg
push
dec
cmp
fild
call
sahf
dec
cmp
xchg
mov
mov
test
dec
out
pop
jl
pop
push
out
cmp
xchg
in
mov
cmp
dec
pop
imul
inc
mov
scas
mov
push
add
dec
jecxz
sti
mov
out
(bad)
outs
sub
in
push
mov
in
lahf
mov
sbb
xchg
fisub
retf
adc
or
jns
lods
xor
imul
fndisi(8087
jnp
add
or
pop
or
fwait
je
inc
fbstp
js
adc
out
pushf
pop
fisubr
lahf
or
cdq
movs
test
sub
push
es
movs
sbb
sub
inc
or
cmp
aam
mov
push
sub
aaa
mov
retf
(bad)
div
jp
pop
pop
in
scas
xor
or
ret
adc
dec
push
or
bnd
leave
and
jne
jo
(bad)
mul
and
cmp
clc
adc
mov
adc
fs
adc
(bad)
jp
jle
adc
mov
lods
and
ins
stos
jmp
(bad)
gs
outs
fistp
mov
call
(bad)
out
mov
xchg
xor
cmps
xchg
ret
lock
outs
adc
cld
leave
mov
faddp
test
ins
jp
int
and
call
int3
pop
pop
sub
outs
mov
les
cmp
mov
mov
shl
fist
mov
arpl
out
inc
int
add
data16
inc
xchg
adc
mov
nop
les
and
shl
push
int3
stos
pushf
and
add
jae
xlat
cvttps2pi
scas
pop
loop
into
pop
js
add
enter
retf
mov
or
dec
mov
movs
pusha
jmp
adc
cmp
daa
mov
sbb
adc
push
adc
(bad)
pusha
in
mov
inc
jno
sub
mov
sub
jl
dec
jmp
or
daa
stos
and
aam
ret
pusha
mov
push
mov
out
cmp
mov
cmp
jg
and
cmp
clc
cmp
(bad)
push
dec
jl
adc
inc
push
jg
dec
and
and
movs
mov
push
add
push
repz
mov
popa
cwde
dec
idiv
std
fmul
out
movs
fisttp
jmp
mov
inc
nop
pop
pop
push
pop
mov
jo
sbb
test
mov
daa
lea
lods
inc
pop
cmp
push
inc
scas
rcl
test
into
test
out
test
mov
test
adc
out
popa
inc
int3
sub
retf
dec
fyl2xp1
pop
(bad)
sbb
dec
lock
and
pop
xchg
mov
pushf
xlat
popf
dec
lahf
jno
push
add
stos
jb
fmul
mov
int3
mov
data16
dec
lea
bts
xor
pushf
push
clc
shr
or
and
(bad)
jo
call
or
sti
and
pop
xchg
sbb
dec
jnp
cs
jbe
push
add
mov
and
and
scas
xchg
aas
fmul
mov
add
std
call
xor
add
dec
inc
not
xchg
push
(bad)
stos
sbb
sub
fdivr
enter
popf
int3
popa
and
int
sbb
jmp
xchg
xchg
xor
mov
imul
(bad)
sbb
jl
fiadd
xchg
mov
fiadd
jb
pop
out
push
inc
cld
stc
mov
ret
jae
jbe
jne
adc
dec
inc
retf
sahf
xchg
lods
femms
ror
scas
ja
and
movs
xlat
jmp
cdq
inc
(bad)
jg
mov
icebp
mov
ror
ja
adc
push
cmp
pop
bnd
add
inc
rcr
dec
into
pop
arpl
adc
mov
or
and
out
push
cdq
adc
sahf
inc
jmp
push
fist
or
imul
test
das
adc
mov
nop
jg
stc
cld
addr16
cmp
push
cmp
sub
xchg
inc
pop
in
mov
in
das
add
pop
fldcw
jmp
mov
fimul
xor
add
int
fwait
inc
sbb
lea
(bad)
jg
mov
pop
mov
pushf
cmp
jp
lock
rcr
jns
jmp
mov
pop
xchg
jbe
inc
jns
push
xor
mov
clc
pop
popf
ret
sbb
lods
movs
popf
rol
cs
and
mov
je
aas
imul
or
(bad)
xlat
and
in
adc
push
into
and
jae
js
or
ret
aas
jecxz
xchg
(bad)
dec
xor
retf
(bad)
sti
push
push
dec
and
mov
dec
std
xor
out
mov
inc
mov
dec
push
mov
movs
and
add
inc
or
int3
scas
mov
jb
out
bound
jns
mov
(bad)
shr
xchg
pop
mov
pop
call
jge
cli
fmul
mov
cmp
imul
inc
not
or
dec
ss
and
pop
pop
sar
mov
xor
add
pop
adc
ja
ins
lahf
adc
inc
jmp
inc
cs
xchg
mov
sbb
or
call
fbstp
mov
pop
add
stos
xor
and
sub
(bad)
and
jnp
adc
and
jge
jecxz
fs
cmp
pop
mov
push
push
add
rcl
adc
cmp
movs
jl
lahf
pop
xchg
or
mov
mov
scas
shl
sahf
daa
sub
xor
add
popa
dec
inc
fisttp
pop
in
neg
jge
pop
ficom
pop
push
mov
hlt
lahf
sar
fwait
std
fsubr
mov
mov
rol
cwde
jns
mov
sbb
bound
pop
pop
inc
cmp
push
ds
pop
aam
arpl
es
pop
cmc
sbb
imul
sbb
cwde
popf
loopne
int
jge
ins
adc
jl
xchg
inc
mov
call
jl
ds
adc
xor
cmp
push
add
xchg
jmp
push
movs
test
push
jae
ror
and
and
jae
xchg
xor
sub
cmp
fs
hlt
adc
adc
sub
dec
jg
cmp
out
mov
sar
xor
fnsave
sub
outs
mov
test
xor
cwde
fwait
cmp
je
xchg
dec
cwde
mov
daa
rcr
dec
cs
cld
lods
into
jp
dec
xchg
add
sbb
adc
cld
adc
jl
xchg
mov
es
mov
std
sbb
push
inc
pushf
pop
popa
xchg
sbb
sub
push
push
movs
loop
(bad)
nop
xchg
cld
or
sub
fwait
push
sar
mov
mov
mov
cmp
jmp
into
jl
mov
jmp
mov
adc
pushf
(bad)
jmp
cli
stos
aam
cmp
xchg
js
test
jp
push
adc
in
fcomp
xchg
sbb
dec
fild
arpl
addr16
movs
xor
jg
dec
mov
sti
dec
dec
lahf
mov
test
inc
push
aad
xchg
inc
aaa
mov
movs
jbe
clc
aas
repnz
add
adc
cmps
rcr
jge
mov
jmp
ss
xchg
jnp
inc
int
mov
es
push
jno
es
sub
jae
xor
sti
aad
popa
loop
mov
adc
push
sbb
dec
test
xlat
js
lea
into
inc
mov
add
push
dec
test
dec
test
or
jmp
dec
jecxz
test
or
rol
mov
cwde
shl
imul
dec
inc
imul
je
jne
in
out
xor
push
adc
xlat
mov
inc
mov
jp
test
int3
cmps
jns
lahf
in
jg
imul
in
ret
and
aam
xchg
pop
pop
ins
sar
stos
stos
movs
dec
movs
sub
mov
mov
inc
(bad)
aam
retf
dec
cmp
cmc
imul
pusha
aam
adc
jmp
outs
push
mov
fwait
sar
push
cld
and
push
rcr
cmps
cld
cmp
add
jmp
xchg
js
mov
xchg
adc
les
sti
inc
push
push
add
icebp
jnp
js
pop
retf
xchg
push
cmc
cmp
mov
in
call
pop
pop
sti
push
inc
and
clc
out
test
push
dec
loop
(bad)
in
push
stc
sbb
adc
enter
dec
or
sub
dec
pusha
add
pushf
das
outs
pop
mov
loopne
cmp
shl
mov
xor
mov
ins
les
(bad)
pop
es
and
and
arpl
pop
push
call
cld
mov
xchg
movq
push
cs
lods
mov
xchg
cmps
das
fdivr
xchg
add
push
inc
nop
loopne
sbb
pop
cmp
jecxz
mov
add
mov
int
jnp
add
mov
or
cld
movs
and
jo
pop
dec
imul
jae
or
in
adc
sub
sbb
jle
loop
mov
dec
dec
push
call
hlt
or
fs
and
hlt
push
aad
push
dec
out
mov
jg
xlat
mov
ss
imul
pop
adc
jmp
mov
scas
xchg
mov
ret
cmp
xchg
jle
pop
jns
call
push
dec
sbb
arpl
jno
xchg
xchg
cmp
fiadd
xor
or
inc
jo
sub
fst
inc
jno
mov
xor
inc
jmp
adc
xchg
push
adc
lods
push
push
sub
ins
xchg
(bad)
daa
retf
add
jge
in
ins
and
mov
arpl
add
mov
add
cmps
add
popa
mov
pop
vpsrlq
pop
jge
ret
call
popa
cmp
outs
mov
call
fst
retf
mov
mov
ss
pop
jl
jmp
mov
stos
cmp
add
into
add
jecxz
jge
sub
adc
ss
sbb
dec
sar
sub
inc
(bad)
sub
loope
adc
pop
fidivr
push
iret
hlt
jg
xor
fst
cld
fisub
cmp
and
mov
es
lea
mov
jge
jbe
inc
sbb
xchg
push
push
mov
fistp
sub
xchg
aaa
iret
jb
jmp
jnp
outs
push
inc
xor
cmp
movs
pop
sub
sti
mov
movs
xor
ja
je
jl
sub
stos
and
ret
sbb
adc
(bad)
push
push
pop
sbb
(bad)
fmul
cmps
jg
and
bound
mov
outs
addr16
int
icebp
or
jo
xchg
jge
ret
(bad)
inc
retfw
jb
into
add
xchg
das
fdiv
and
addr16
out
jecxz
repz
pop
cmp
pop
push
mov
lea
push
ja
add
dec
pop
or
mov
xor
push
xchg
pop
icebp
inc
out
daa
or
loope
(bad)
test
add
fucompp
in
ja
scas
les
rcl
sub
jns
pushf
daa
in
and
ss
xlat
mov
adc
jle
xor
shl
push
sub
mov
aad
sbb
retf
cdq
imul
enter
outs
mov
cwde
inc
frstor
inc
fsubr
push
shl
mov
rcl
loop
loop
add
imul
movs
js
pop
xchg
loopne
hlt
pop
xor
inc
outs
cmps
add
push
mov
aaa
(bad)
jmp
cwde
jbe
xchg
xor
inc
neg
jb
xor
arpl
les
sbb
and
shr
adc
mov
bnd
js
imul
dec
lods
bound
jle
sub
pop
(bad)
ss
and
xchg
dec
std
ja
adc
dec
pop
push
bound
leave
mov
repz
call
cwde
push
mov
cmp
jns
or
ja
mov
dec
pop
or
pop
sub
iret
pusha
into
movs
inc
das
nop
pushf
push
pusha
mov
(bad)
in
outs
fidiv
mov
ds
dec
or
sub
inc
xchg
rol
popf
dec
and
push
mov
lock
mov
ins
jnp
retf
leave
mov
aad
adc
ins
sbb
(bad)
bound
and
call
mov
fldcw
arpl
or
fwait
add
inc
ret
cmps
stos
or
mov
(bad)
(bad)
test
inc
mov
jae
and
data16
cdq
into
hlt
pop
and
int
js
cmp
in
jl
xor
wbinvd
dec
rol
cmps
out
scas
ret
in
push
rol
and
ss
xor
ret
movs
in
fld
fadd
hlt
sub
push
sbb
div
and
mov
enter
jo
pusha
stc
dec
sbb
(bad)
sbb
call
retf
push
aad
push
icebp
(bad)
mov
mov
adc
outs
and
rol
mov
jge
inc
in
add
jecxz
inc
aas
imul
inc
fwait
movs
mov
xchg
movs
gs
add
popa
imul
repz
xor
in
jg
fmul
(bad)
in
pushf
stos
fidivr
mov
mov
sbb
test
mov
cmps
mov
lods
fsin
sub
cmps
lock
push
xchg
(bad)
(bad)
jg
push
pop
pop
jl
adc
out
and
retf
mov
in
add
out
ret
arpl
retf
mov
cmp
adc
adc
xchg
clc
test
sbb
inc
inc
adc
sbb
sbb
fcmovbe
mov
pop
xor
pop
mov
pushf
retf
sbb
div
xor
popa
jae
jb
xchg
push
jg
cmps
ins
clc
and
jle
mov
add
mov
(bad)
pop
and
rcl
dec
pop
jnp
add
xchg
jge
jg
int
(bad)
mov
scas
sbb
jne
fcomp
fdiv
add
imul
rcr
add
pop
pop
movs
loopne
loope
cli
out
outs
cli
add
or
inc
pushf
mov
add
or
dec
mov
push
stos
rol
(bad)
neg
or
add
push
and
cdq
fstp
push
mov
inc
pop
dec
imul
rcr
push
sub
imul
repz
sub
add
test
mov
adc
arpl
gs
mov
fld
outs
inc
pop
in
xlat
jmp
inc
mov
mov
(bad)
mov
cmp
adc
scas
and
mov
imul
rcr
arpl
xor
cmp
mov
pop
idiv
cs
dec
(bad)
iret
int3
pop
push
or
mov
mov
xchg
xor
push
xlat
sub
mov
sub
into
or
mov
je
xor
scas
out
and
aas
test
dec
popa
movs
ss
mov
es
imul
cmp
sbb
jp
sbb
push
rcr
les
fcomp
mov
push
ins
pop
les
popa
cmps
into
pop
and
mov
dec
mov
xor
sbb
xchg
daa
xchg
in
cmp
inc
stos
mov
mov
es
pop
loop
xchg
push
loope
je
clc
push
jb
stos
cwde
dec
in
or
test
scas
inc
dec
or
cdq
dec
xor
jge
cmp
sbb
add
nop
xchg
out
cs
test
faddp
fmul
mov
dec
mov
push
jmp
pop
lea
out
dec
retf
jecxz
lods
cs
xchg
arpl
push
xor
jbe
icebp
retf
icebp
test
sbb
ror
mov
mov
push
test
mov
jle
mov
inc
add
xor
mov
pop
xchg
add
sub
stos
xlat
dec
test
sub
addr16
inc
sub
and
cld
xor
mov
cmc
aam
aas
xor
jmp
xchg
push
mov
xor
cmps
jmp
push
movs
fdiv
sbb
(bad)
pop
push
dec
lods
sub
pop
xlat
cmp
jle
push
push
push
jae
xchg
jbe
imul
(bad)
and
mov
gs
mov
repz
loop
lods
nop
push
andps
lods
ds
adc
hlt
imul
ss
mov
and
jle
test
push
int
out
jecxz
fisub
xor
or
xor
mov
mov
fs
xchg
push
mov
retf
xchg
jecxz
fwait
push
sahf
fwait
aaa
push
sub
dec
mov
push
mov
inc
sub
or
push
and
lea
inc
rcpps
cli
sbb
push
shld
xchg
popf
mov
mov
add
sbb
mov
cmp
cs
out
icebp
test
out
ret
adc
push
cmp
pop
out
(bad)
cmp
gs
pop
xor
iret
outs
aad
sbb
xlat
mov
add
mov
leave
xchg
mov
inc
cmp
icebp
pop
jmp
dec
push
leave
cmp
sub
add
mov
mov
ins
dec
aaa
popa
jl
jle
sbb
push
inc
or
jmp
inc
add
push
mov
pop
cld
mov
or
bound
in
jno
in
jne
mov
jb
in
(bad)
ret
add
icebp
rcl
(bad)
sub
push
dec
popf
(bad)
push
sti
push
inc
pop
out
sub
arpl
outs
lods
cmps
push
jge
retf
push
jmp
xchg
xchg
inc
mov
lds
jmp
adc
push
ss
aas
cmps
jmp
aas
test
rol
and
jns
sahf
jg
in
xor
test
jl
mov
and
xchg
sub
sar
jae
pop
fs
jbe
sub
push
jp
cmp
dec
loope
mov
mov
mov
ror
dec
(bad)
jb
fnstcw
(bad)
(bad)
add
or
inc
mov
hlt
fucomp
xchg
in
lds
sub
jnp
xor
es
leave
sti
cmp
add
out
add
and
jecxz
sti
lods
out
stc
xor
inc
aas
js
sbb
call
mov
ins
mov
pop
mov
inc
movs
sar
mov
sbb
cmc
fcomi
mov
sbb
ror
stos
pop
aaa
cmp
sub
pushf
xchg
sahf
lods
and
dec
shl
fimul
sub
es
push
xor
add
push
rcl
jge
pushf
fcom
outs
lahf
data16
daa
dec
pop
ins
xor
push
les
xchg
xchg
test
xchg
push
in
sbb
add
mov
xchg
lea
add
mov
or
pushf
push
push
dec
adc
cli
and
lea
cmc
push
rcl
pop
addr16
jae
cmc
jmp
pop
pop
add
repz
jmp
les
push
pop
inc
xchg
ins
fdivr
sbb
aas
sahf
sub
ins
fcomp
sub
jge
rol
dec
sbb
aam
mov
or
cmp
pop
dec
fdiv
inc
nop
(bad)
lock
enter
outs
jge
int3
rcl
shl
and
fprem1
out
adc
pop
pop
mov
pop
sub
mov
xchg
pop
cmp
xor
mov
sub
push
(bad)
xchg
sti
xor
push
adc
out
aam
add
std
push
xor
inc
inc
movs
dec
es
popf
pop
ins
(bad)
adc
ffree
pushf
sub
daa
jnp
cmps
fbstp
xchg
cwde
int3
sub
fdivp
ins
xor
test
fdiv
mov
scas
(bad)
mov
std
push
and
sti
xchg
cmp
cmp
inc
xchg
jmp
pusha
ja
in
pusha
mov
fidivr
fild
sub
jmp
cmps
xchg
add
(bad)
loope
cmp
repnz
sub
stc
cmp
int3
cmp
xor
scas
sbb
sbb
icebp
lea
jg
lds
or
xor
jecxz
pop
jecxz
cmp
cs
inc
jb
sub
aas
bound
xor
mul
and
dec
dec
push
adc
(bad)
ficom
ret
push
add
jnp
or
ret
xchg
sub
(bad)
aas
and
repnz
mov
sub
xor
sub
div
movs
idiv
pop
stc
nop
push
repz
retf
jp
and
scas
jbe
aas
mov
jno
lea
mov
outs
mov
xchg
mov
call
call
mov
adc
inc
or
mov
xor
jb
mov
cli
or
gs
or
mov
dec
adc
scas
mov
xchg
mov
mov
in
pop
pop
test
sbb
mov
dec
sub
shl
retf
push
leave
pop
cmp
je
popa
mov
loope
or
xchg
cdq
xchg
mov
mov
clc
dec
xchg
adc
rcl
(bad)
jg
cmp
js
xor
xlat
fmul
int
aad
cmc
mov
or
pop
int3
idiv
mov
mov
(bad)
xchg
and
shl
pop
adc
adc
(bad)
(bad)
dec
sar
aad
popf
jne
push
xor
inc
imul
or
xor
mov
push
jb
xchg
fst
out
mov
cwde
pop
cwde
or
retf
aaa
add
(bad)
cmc
inc
sahf
add
xor
cmp
repz
icebp
mov
mov
add
je
jb
loope
inc
and
add
repnz
sbb
mov
loope
arpl
out
in
ins
mov
mov
cmc
ins
das
jg
lods
rol
mov
xchg
out
pop
enter
mov
pop
adc
scas
xchg
jno
dec
and
enter
pop
or
jp
fwait
loopne
div
or
test
div
xchg
add
xlat
cs
or
daa
push
mov
into
cmc
loopne
cdq
pop
inc
nop
sub
sahf
jmp
sbb
xor
sbb
jmp
jl
xor
inc
rol
dec
xchg
xchg
cmp
jbe
out
cmps
and
in
mov
icebp
inc
(bad)
xor
(bad)
cmp
pushf
out
ja
stc
loop
sub
push
loope
rcr
sub
push
rol
scas
pop
and
test
mov
jnp
out
push
push
les
push
push
repz
out
adc
sub
loopne
mul
xor
pop
add
jmp
iret
or
jmp
mov
out
jl
outs
mov
lods
inc
call
repnz
xor
adc
xchg
repz
hlt
push
cmc
or
xor
nop
popa
cmc
sbb
mov
xor
in
sahf
cmp
adc
mov
rol
mov
mov
cmp
inc
mov
adc
movs
jb
sub
dec
stos
lahf
xchg
mov
addr16
cmp
call
xor
xchg
sbb
jmp
pushf
stos
outs
sahf
add
rol
jnp
sar
leave
arpl
jno
push
ror
ins
fsubr
pop
add
push
xor
(bad)
fisubr
sub
ret
loope
mov
mov
jnp
mov
pop
out
loope
dec
pop
cs
jbe
arpl
mov
sub
fwait
stc
push
dec
outs
aas
dec
jns
stos
std
test
dec
lods
or
dec
out
shr
movs
inc
adc
in
sbb
cmps
ins
sub
cld
or
jp
int3
push
fst
mov
dec
sbb
xor
pop
les
enter
and
(bad)
aam
or
or
jg
std
inc
(bad)
js
(bad)
cld
push
imul
adc
retf
fsub
cmp
repnz
jecxz
inc
pop
mov
mov
dec
pop
or
imul
ss
aad
std
xchg
int3
sti
mov
lds
adc
dec
inc
push
cmp
jp
sub
les
int
xchg
and
mov
clc
mov
inc
mov
mov
pop
xlat
daa
repnz
push
mov
mov
imul
ds
lea
dec
dec
jbe
ja
leave
xchg
cmps
adc
dec
mov
hlt
aad
push
sub
inc
push
or
sub
or
in
in
and
addr16
sbb
mov
jns
lahf
ins
iret
or
inc
retf
retf
jge
nop
out
mov
xor
fidivr
jmp
and
sahf
jae
fcom
bound
xlat
leave
mov
or
pop
pop
in
dec
or
mov
jl
inc
mov
jne
mov
jmp
test
pop
lods
outs
xchg
adc
cli
shr
xchg
lods
ret
aas
pushf
cli
mov
push
jmp
hlt
int
test
or
jno
hlt
aas
jne
xchg
inc
adc
fwait
jo
add
cwde
test
pop
repnz
xchg
xchg
cmps
push
inc
stos
push
sub
or
out
inc
js
into
dec
mov
cli
int3
out
cmp
aad
and
out
inc
pop
sub
gs
xlat
jl
pop
mov
retf
popa
or
cmp
mov
(bad)
fnstenv
js
xchg
cmp
jb
push
scas
xchg
mov
lahf
push
in
mov
mov
in
add
xlat
data16
lea
mov
sub
test
fisubr
cwde
mov
xchg
pusha
xlat
sub
add
cmp
push
and
inc
mov
sub
enter
in
outs
add
ret
les
(bad)
hlt
sub
xchg
push
dec
pop
nop
(bad)
jo
sub
push
loope
mov
sbb
xor
in
nop
es
xchg
mov
mov
icebp
rcl
inc
add
sar
jno
iret
aad
mov
je
xchg
ret
sub
pop
mov
sti
(bad)
push
and
adc
mov
dec
shl
xchg
bswap
sub
adc
popa
(bad)
jmp
mov
jmp
pop
pop
sbb
bound
push
inc
stos
mov
aas
sbb
add
ret
jp
ror
mov
mov
pop
fldenv
add
loop
nop
xchg
pop
test
mov
adc
out
int3
adc
mov
push
push
and
or
(bad)
outs
add
xor
pop
mov
int
pop
fst
or
in
aad
sub
pop
das
pop
mov
lea
xor
test
adc
inc
bound
dec
movs
int
and
out
xor
iret
vmread
hlt
dec
loopne
push
dec
mov
dec
cs
sub
ss
and
sbb
cwde
jg
jl
fmul
loopne
or
pop
xor
fst
jb
nop
pop
add
pop
add
cmps
movs
imul
pop
jge
jae
cmp
add
push
test
aaa
pop
sub
movs
inc
mov
jge
fdiv
xchg
lahf
dec
in
aam
sti
loope
repnz
in
sbb
ds
add
mov
popf
pop
push
pop
dec
mov
sub
sbb
rcr
cmp
outs
(bad)
outs
inc
inc
or
aam
lahf
movs
fdivr
xor
cld
imul
dec
xlat
inc
jb
sub
lock
cs
push
aaa
aad
(bad)
repz
push
enter
cwde
jle
lahf
dec
mov
pushf
push
pop
in
xchg
and
shl
sbb
push
mov
pop
pop
sbb
add
dec
stc
(bad)
scas
lock
sub
xchg
mov
sub
sbb
mov
mov
xchg
dec
loope
int3
ret
outs
push
push
fistp
push
ds
inc
inc
ja
sbb
ds
int3
or
out
cdq
push
arpl
mov
push
aam
xchg
cmp
jbe
pop
mov
inc
mov
xchg
lahf
xor
clc
fmul
bound
jecxz
ja
aad
lea
add
ds
imul
(bad)
lahf
jb
mov
mov
xchg
fcomp
xchg
inc
mov
ss
pop
inc
int
sub
inc
inc
repnz
movs
push
call
jmp
jo
stos
lahf
pop
sub
mov
loopne
adc
dec
aam
arpl
addr16
rol
xchg
fmul
adc
cmp
and
pop
add
ja
gs
in
xlat
test
cmc
jp
iret
pop
inc
xchg
inc
cmp
inc
(bad)
lahf
out
xor
mov
ins
mov
jo
jmp
ins
repnz
mov
xchg
push
jb
retf
scas
cwde
in
nop
dec
cmc
ret
popf
sbb
mov
inc
inc
inc
adc
lods
pop
cmp
popf
outs
repnz
add
mov
and
xchg
jecxz
in
push
sbb
inc
test
mov
in
(bad)
test
sar
(bad)
fidivr
jmp
or
outs
sbb
mov
ret
out
xchg
cmp
sar
dec
push
(bad)
cmp
jl
ret
(bad)
ror
mov
and
addr16
ror
xchg
ins
cmp
adc
jo
in
jb
xchg
cmp
push
(bad)
pop
cmc
jb
and
je
jge
xor
sbb
(bad)
lahf
stos
fs
ja
xchg
jmp
push
repz
js
pop
fisttp
mov
nop
inc
jg
in
mov
jp
stos
call
jle
mov
pop
int3
pop
adc
es
out
xchg
xchg
jecxz
push
inc
xchg
push
add
out
push
jbe
mov
(bad)
pop
xlat
jo
mov
arpl
popa
xchg
sahf
sub
fsub
mov
inc
push
cmp
fwait
scas
or
pop
aad
jbe
nop
(bad)
mov
call
int
pop
(bad)
(bad)
jne
dec
imul
mov
or
jo
inc
xchg
test
xor
xor
jge
jecxz
cmp
(bad)
sahf
out
bound
xchg
retf
lahf
out
adc
(bad)
loop
inc
or
push
xchg
lahf
jo
mov
mov
xchg
adc
pop
scas
pop
and
enter
push
mov
pop
xor
adc
loope
pop
test
popa
pop
stc
sub
test
test
push
gs
cmp
pushf
pop
scas
cmp
sbb
add
jle
add
cdq
rcl
push
fsubr
test
and
inc
or
or
shr
or
xlat
xchg
cmp
push
mov
adc
pop
fild
mov
mov
cli
inc
imul
and
add
retf
in
mov
int3
lahf
dec
xchg
sub
xlat
iret
cmps
int
cld
push
jno
push
cwde
add
stos
sub
jne
pop
movs
xor
fdivr
cdq
mov
outs
retf
sbb
xor
lods
sub
cmc
or
and
movs
stc
mov
xor
in
sbb
loop
jecxz
xchg
pop
loope
retf
push
xchg
and
pop
lds
into
mov
cmp
xlat
(bad)
stc
daa
call
inc
mov
fldenv
mov
out
inc
imul
xor
or
bound
lods
or
jge
in
jmp
sbb
inc
sub
scas
movs
push
fwait
sub
add
cmps
push
mov
mov
xchg
ins
inc
addr16
in
out
std
das
and
mov
cmp
cmp
aaa
arpl
jge
stos
(bad)
clc
lds
call
or
test
les
lods
jne
push
pop
mov
sub
or
test
jl
mov
xchg
cmp
xchg
inc
sbb
mov
test
ins
outs
sbb
rol
ret
sar
ja
and
jmp
add
jecxz
pop
xor
pop
fldenv
cmp
out
add
mov
lods
jle
addr16
pop
(bad)
mov
les
rol
sub
sahf
in
addr16
scas
mov
sbb
adc
test
mov
inc
push
fwait
and
push
movs
push
cmc
jp
pop
jne
or
call
bound
out
mov
jmp
leave
shl
sbb
push
addr16
pop
aaa
jnp
xlat
stos
imul
inc
mov
mov
(bad)
xor
sbb
inc
fst
int3
cmp
mov
dec
daa
ret
std
cmp
mov
lea
retf
fild
mov
jl
out
mov
clc
cmp
cmps
(bad)
scas
and
cdq
aaa
pop
sub
pop
mov
cli
in
push
dec
lock
imul
inc
dec
pushf
xchg
mov
dec
add
mov
inc
cwde
cmp
daa
dec
cmp
sti
stos
int3
adc
pop
jae
dec
aaa
xchg
ret
int3
push
sub
call
repnz
(bad)
lods
int3
or
rol
adc
movs
aaa
enter
mov
xchg
int3
aam
sar
inc
in
or
div
addr16
push
or
jle
out
sbb
or
and
mov
inc
inc
xchg
test
sub
sub
ja
aad
aad
fbstp
sub
pusha
pop
dec
push
cmps
xchg
arpl
xor
sub
icebp
mov
lds
sub
mov
fstp
mov
sti
aas
shr
call
jns
xor
or
sub
lds
aas
or
aas
lds
test
cmp
mov
pop
fidivr
mov
mul
arpl
mov
js
and
mov
jae
xor
(bad)
(bad)
mov
rcl
push
cmp
jl
sbb
out
loope
adc
lock
adc
mov
xchg
pop
push
or
call
sbb
sbb
cld
pushf
mov
call
pop
cmp
(bad)
shr
jmp
push
stos
aas
mov
sar
sbb
js
pop
aaa
xor
fcom
xor
xor
sti
lahf
mov
pop
(bad)
cwde
push
frstor
pushf
ficom
inc
push
xchg
xchg
(bad)
fs
cmp
lods
xor
test
lea
mov
jge
add
cdq
cmp
inc
or
dec
not
xor
rcl
mov
push
ja
cmps
dec
arpl
mov
mov
movs
jmp
test
add
dec
dec
nop
icebp
jne
push
xor
test
je
mov
and
ss
pop
out
jae
jae
call
cwde
inc
adc
sbb
leave
imul
jb
xchg
rol
lahf
sar
xor
(bad)
jmp
fst
(bad)
(bad)
stos
fistp
(bad)
adc
jmp
pop
xor
push
mov
ret
mov
aad
mov
aaa
add
movs
sahf
iret
(bad)
xchg
inc
lock
jecxz
pop
pop
ja
aad
sti
pushf
movs
movs
ds
mov
jmp
fistp
ja
or
xor
ja
test
mov
ins
cmp
pop
ror
rcr
pop
outs
cmp
loop
inc
add
xchg
dec
ret
clc
ins
push
pop
cmp
cmp
les
loopne
std
or
fiadd
push
scas
out
cdq
aad
mov
(bad)
out
cmp
pusha
jo
das
add
adc
sbb
or
test
xor
push
dec
push
mov
out
pop
jno
lea
adc
inc
imul
push
inc
or
das
mov
fist
iret
and
dec
hlt
pop
jge
fld
and
rdtsc
cmp
dec
(bad)
ins
int3
je
cwde
test
adc
mov
jp
inc
or
shr
push
mov
fdivr
push
mov
dec
sti
mov
ret
ss
adc
rcl
mov
and
mov
pop
imul
enter
fimul
fisubr
adc
adc
push
dec
or
cmps
push
loope
inc
mov
std
sub
jnp
add
(bad)
loope
fstp
mov
xor
cwde
mov
mov
(bad)
daa
sub
iret
xor
xchg
push
pop
jmp
add
daa
shl
cwde
mov
push
fistp
or
loopne
xor
(bad)
xor
mov
inc
lea
daa
mov
dec
adc
cmp
repnz
jb
sahf
bound
cmp
(bad)
jno
xor
mov
movntq
cmc
js
in
and
push
xchg
fsubr
in
sub
xor
ror
sbb
jp
sti
shl
mov
mov
aad
add
xor
push
and
push
addr16
push
popa
or
in
shl
jmp
xor
gs
call
mov
loope
add
jecxz
xchg
out
sbb
jnp
xchg
mov
gs
jbe
je
clc
jg
adc
stos
xor
xor
mov
jge
and
lahf
cs
pop
push
pop
push
sub
fstp
mov
leave
jo
cmp
adc
pop
adc
jle
and
xor
icebp
jg
loopne
je
mov
(bad)
and
mov
mov
mov
or
lods
inc
or
gs
mov
stos
mov
inc
rcl
and
xchg
movs
stc
fldcw
push
sbb
mov
(bad)
xchg
test
loopne
mov
push
loop
sub
and
out
icebp
(bad)
xchg
and
pop
xor
mov
icebp
stos
or
inc
fst
rcr
mov
cli
in
xchg
add
ret
test
cmp
and
loope
or
and
retf
scas
adc
in
fcmovnbe
inc
inc
and
call
das
pushf
mov
sbb
ds
cs
das
push
test
push
push
lds
dec
push
xchg
sbb
xchg
push
and
cld
outs
test
xor
ret
sub
mov
mov
fdiv
lock
cmp
inc
push
in
pusha
(bad)
sub
fild
imul
ja
sbb
in
out
cmp
sub
stos
pop
sbb
push
jbe
sub
push
dec
js
paddb
inc
sbb
mov
inc
mov
inc
jmp
in
sub
cld
xor
push
dec
sub
adc
je
adc
mov
adc
add
pop
inc
cwde
adc
and
adc
cmp
vpsllw
loopne
dec
cmp
in
mov
push
inc
lods
sbb
add
(bad)
or
jp
les
push
xchg
in
jbe
mov
stc
fldenv
popa
push
fwait
inc
and
and
mov
int3
add
repnz
gs
dec
lods
push
popa
or
mov
adc
(bad)
out
sub
pop
mov
jge
xor
pop
std
push
paddb
ds
bts
je
mov
or
add
xchg
and
xchg
lds
cmps
xchg
ins
mov
mov
inc
repz
push
js
jbe
sbb
daa
dec
inc
mov
inc
or
jns
mov
xor
jne
lods
icebp
and
int
pop
stc
add
arpl
inc
call
inc
aam
push
mov
shl
mov
leave
push
sub
push
cmp
imul
test
mov
icebp
test
ins
cmp
push
cdq
inc
dec
mov
aaa
mov
cdq
neg
imul
push
cmp
or
fwait
sbb
cmp
mov
ja
iret
push
retf
sbb
jo
stc
ficomp
ins
aaa
test
pop
(bad)
lock
cmp
jo
sbb
inc
aas
les
repnz
inc
mov
cmp
push
(bad)
enter
js
imul
ror
icebp
or
jl
retf
dec
lock
cmp
arpl
cmp
mov
pop
pop
inc
inc
push
popf
imul
popa
mov
push
xchg
push
jge
xchg
div
daa
scas
sub
aad
lods
jecxz
call
fs
sub
dec
cs
add
fwait
add
jne
test
cwde
lss
(bad)
jg
lea
dec
call
jl
out
push
sub
sbb
in
mov
clc
mov
mov
and
(bad)
cmp
or
xor
fild
loope
js
out
pop
test
outs
cli
cwde
rol
cs
mov
or
jp
test
mov
dec
cdq
loopne
cmp
push
xchg
inc
mov
popa
mov
es
nop
xor
jnp
movs
test
xchg
and
cmp
jb
push
pop
jmp
mov
jle
push
jo
mov
stos
lds
mov
add
jge
adc
inc
jge
les
rol
test
inc
adc
(bad)
mov
lods
and
aam
and
cmps
mov
add
jb
ror
or
fwait
jmp
push
or
enter
test
add
sub
cmps
cmp
retf
mov
shr
cmps
adc
push
ror
add
js
mov
sbb
mov
ror
pop
div
ret
aam
or
fld
mov
mov
dec
dec
push
popf
sbb
mov
mov
jecxz
xor
dec
enter
shl
dec
in
idiv
jb
inc
dec
aam
outs
in
add
in
shl
push
out
scas
stc
shl
jo
push
sub
shr
and
pop
push
dec
mov
in
out
shr
add
jl
sbb
mov
out
dec
xor
xor
pop
sbb
leave
mov
and
mov
fsub
outs
jle
adc
inc
mov
dec
inc
js
ins
sbb
dec
jge
xchg
xor
mov
inc
in
icebp
retf
add
cwde
xor
push
arpl
sbb
inc
mov
mov
into
or
xchg
push
sbb
inc
sbb
inc
sahf
adc
aaa
push
cmp
xlat
jmp
out
(bad)
lahf
(bad)
rcr
and
sti
pop
jne
mov
into
add
dec
cmp
fs
popfw
arpl
cs
or
addr16
xor
mov
adc
retf
movs
gs
dec
pop
sahf
in
movs
(bad)
and
mov
jbe
jg
call
test
jnp
xor
addr16
retf
add
(bad)
aam
jecxz
movs
mov
dec
and
outs
xchg
sub
cs
shr
hlt
mov
aam
cmps
lock
mov
pop
pop
xor
(bad)
jae
in
in
push
call
mov
dec
mov
jne
ret
xchg
push
jge
jbe
pcmpgtd
lahf
test
mov
adc
mov
outs
pop
addr16
inc
loope
stos
sbb
push
aam
adc
dec
xchg
lahf
inc
aas
std
add
test
(bad)
ss
fcomp
jle
ret
jae
add
(bad)
pop
push
sub
cmp
jl
imul
xchg
mov
or
adc
shl
shl
xchg
push
ds
push
fs
pop
into
(bad)
xchg
mov
cli
(bad)
movs
lods
popa
std
pop
mov
xchg
push
test
cmp
xchg
leave
cmps
movs
lods
fiadd
mov
mov
sub
and
call
test
or
sub
pop
push
sbb
inc
loopne
mov
sbb
aad
enter
pop
(bad)
stos
in
mov
(bad)
rol
(bad)
jl
in
ret
mov
cld
mov
pop
or
gs
ins
mov
sbb
sar
mov
stos
and
(bad)
popf
cmps
rol
icebp
mov
adc
lock
cmp
popa
mov
js
mov
aaa
push
xchg
adc
test
imul
cwde
mov
es
ins
outs
lock
add
push
xchg
pop
cmp
fcomp
add
and
cmc
jmp
(bad)
or
mov
sub
inc
jmp
jl
popa
outs
mov
loope
mov
dec
adc
(bad)
in
jae
les
data16
fbld
adc
clc
nop
out
jns
cli
retf
pop
pop
pop
push
mov
fld
imul
data16
out
dec
add
(bad)
stos
xor
popa
(bad)
cwde
mov
add
add
icebp
add
sub
cli
pop
cmp
mov
mov
jg
js
and
xadd
adc
push
inc
xor
sub
jge
inc
jecxz
fimul
and
mov
sti
cmp
nop
xchg
pop
cmp
dec
sbb
adc
add
xchg
mov
add
inc
fwait
je
pop
add
ins
sub
inc
idiv
sub
sbb
sbb
imul
test
shl
xor
call
cdq
sbb
pop
inc
xor
(bad)
out
xor
outs
lods
sahf
cmp
retf
cmp
out
(bad)
(bad)
mov
and
pushf
cmps
push
mov
rcl
repnz
jb
push
cli
rol
ins
enter
dec
mov
shl
sub
mov
cmp
jmp
push
pop
je
xchg
sahf
xchg
lock
cli
ret
and
jne
and
sub
xchg
push
push
and
mov
push
inc
mov
jae
cli
sub
test
and
mov
mov
out
mov
cmp
int3
loopne
mov
ins
ss
fimul
jle
jg
outs
add
jmp
out
retf
push
adc
js
ret
imul
cwde
rol
mov
hlt
dec
adc
mov
call
ret
ror
cmp
adc
mov
jno
cmp
jmp
adc
ret
int3
xchg
sbb
add
(bad)
cmp
ins
jne
cmps
jecxz
imul
xchg
inc
pop
clc
sub
push
mov
mov
inc
test
pop
dec
pop
imul
cli
ror
leave
cmp
mov
fld
jle
pop
mov
dec
cmp
fadd
add
mov
cmp
jmp
sbb
addr16
leave
es
xchg
push
mov
clc
aam
mov
scas
call
mov
adc
cmps
lahf
dec
mov
cmp
cmp
rcl
mov
jo
out
jle
jnp
jnp
bound
fucom
mov
jno
inc
call
pop
push
arpl
cmp
sbb
lods
pop
push
dec
jbe
pop
dec
push
or
mov
push
sahf
cli
sbb
push
out
jle
pop
sub
and
adc
repnz
clc
mov
mov
imul
mov
fist
mov
cld
xchg
test
push
mov
jle
fsub
mov
jo
out
and
xchg
je
stc
jns
inc
cdq
movs
xor
push
pop
adc
sub
add
cmp
add
outs
mov
push
rcr
push
retf
js
and
adc
inc
mov
push
xor
add
pop
pusha
data16
stos
dec
push
sbb
mov
cmp
jge
mov
adc
lock
in
cwde
nop
jmp
jne
loop
ficom
jg
xlat
mov
cmp
xchg
pop
push
lods
js
and
inc
cmps
gs
pop
(bad)
test
mov
add
jp
pusha
es
rol
inc
sub
in
stos
add
push
adc
inc
adc
mov
inc
push
sub
fcom
stos
test
adc
pushf
ins
fwait
xlat
adc
jg
std
ins
enter
inc
and
sbb
sti
out
pop
or
pop
inc
scas
int
loop
xchg
or
imul
aad
dec
fcmovu
xor
call
fsubp
xchg
sahf
ins
ret
xor
push
jl
cmp
loop
push
movs
mov
mov
sub
test
int
lods
jg
xor
mov
aam
movs
fld
(bad)
ja
lods
out
or
jns
stc
leave
push
and
cmp
and
ror
call
push
mov
test
xchg
sbb
cmp
(bad)
ror
scas
or
(bad)
push
popf
mov
inc
and
shr
inc
imul
scas
retf
cmp
and
mov
mov
out
std
dec
xor
pop
mov
xchg
fist
(bad)
mov
sub
test
sbb
mul
mov
enter
fld
fsubr
sub
ins
fnstenv
loopne
popf
sub
ror
pop
mov
dec
fnstenv
cmp
popa
rcr
mov
or
xor
and
adc
xor
xor
inc
mov
jp
mov
fs
shr
push
and
mov
es
shr
dec
adc
icebp
add
aaa
xchg
sub
lea
sub
(bad)
in
mov
sub
jl
add
loop
xchg
push
in
mov
push
jp
lds
xchg
popf
movlps
push
mov
test
push
(bad)
mov
adc
std
jnp
mov
cmp
retf
pop
mov
add
inc
mov
and
pop
dec
cld
les
pop
scas
leave
add
cld
sub
jae
pop
cmp
ins
sti
mov
mov
jp
or
jns
fld
pop
jp
add
jno
ror
sub
ss
mov
in
add
pusha
stos
outs
(bad)
cld
cmc
xchg
or
cmp
pop
imul
mov
cmp
in
dec
push
in
fst
sti
repz
cld
pushf
xchg
out
adc
imul
movs
dec
jle
xor
ret
stc
stos
dec
xor
leave
(bad)
and
xor
dec
push
arpl
js
push
out
mov
sahf
sub
push
out
aad
je
cdq
repz
retf
sbb
fwait
jbe
sub
ins
fistp
xchg
jno
and
dec
(bad)
cmp
mov
mov
jle
push
cld
in
mov
mov
jae
push
cmp
bound
xor
jnp
mov
fisubr
dec
test
xor
ins
mov
leave
std
loopne
xchg
xchg
sub
mov
pop
popf
(bad)
in
arpl
sub
in
(bad)
je
sbb
inc
dec
mov
rol
sub
(bad)
cld
dec
and
mov
(bad)
sbb
out
icebp
jnp
cmps
push
iret
add
mov
sti
cmp
into
cmps
dec
ret
mov
sahf
or
enter
ja
xchg
repnz
mov
or
inc
cmp
nop
aam
cmp
adc
push
pop
aaa
gs
dec
cmps
cs
daa
bnd
cmp
dec
fucomip
(bad)
and
sahf
es
cwde
sub
arpl
fcomp
movs
ss
or
lea
sub
cld
lods
or
sub
dec
jnp
dec
into
jle
imul
jae
mov
lea
jmp
icebp
daa
jmp
fmul
sbb
scas
sbb
cmp
push
in
add
loopne
push
push
fadd
enter
or
clc
mov
push
dec
lock
inc
fld
(bad)
in
call
lock
mov
(bad)
out
in
popa
aad
enter
xor
aas
xor
pop
mov
lods
call
jge
jns
das
daa
jno
sbb
out
add
dec
adc
fbld
jo
or
mov
std
cmc
pop
pop
lods
pop
pop
aaa
int
and
call
clc
sar
jle
repz
inc
or
add
call
sbb
or
cmps
inc
jmp
(bad)
pop
inc
inc
push
add
aam
setg
adc
jne
repz
jmp
adc
clc
std
aam
push
add
pop
fdivrp
movs
xor
ret
test
and
jp
push
mov
sbb
cdq
mov
out
push
jns
mov
inc
xchg
fsub
mov
popf
pop
int3
fiadd
cmp
push
idiv
rcl
rol
movntq
cmp
div
ret
adc
imul
fcomp
out
daa
sbb
add
inc
loope
ds
cli
inc
xor
(bad)
aam
loop
div
xchg
fcmove
jle
xor
pop
cmp
test
stos
ret
pop
out
movs
mov
das
mov
mov
jno
mov
pop
push
ja
add
imul
ins
hlt
(bad)
xor
jmp
(bad)
shl
rol
and
pop
add
push
push
cmps
or
inc
fcmovb
rol
mov
xor
je
std
rcl
out
xor
pop
cmps
xchg
push
fbstp
daa
ret
mov
lods
popa
sub
xor
push
shr
mov
adc
js
mov
out
daa
inc
add
cmp
pop
pop
ror
xchg
ja
mov
cwde
push
adc
adc
mov
jmp
xchg
pop
fwait
cmp
hlt
je
out
and
mov
add
mov
xchg
les
cmp
jae
pop
adc
inc
les
or
mov
es
frstor
sar
pop
dec
xchg
xor
xchg
dec
pop
lock
imul
retf
or
mov
mov
cmp
cmc
mov
sub
js
call
je
xor
and
int
cmc
jmp
ret
jg
in
sbb
sbb
xchg
imul
dec
add
fidiv
or
pop
arpl
and
mov
jae
mov
jge
lea
shl
fst
ret
(bad)
cdq
mov
sbb
dec
sub
dec
sub
repnz
and
sbb
or
pop
mov
test
jle
and
dec
inc
pop
push
mov
imul
jp
xor
push
not
in
jl
cld
mov
jp
cmp
setne
stc
jge
cld
aad
ror
add
jle
retf
jecxz
jmp
jl
and
jl
inc
inc
ja
pop
add
iret
es
inc
data16
jno
repz
add
test
push
call
cmp
pop
push
(bad)
mov
push
sbb
les
(bad)
inc
xor
and
xchg
clc
aad
aaa
pop
ret
fsubr
push
xor
sbb
sub
or
mov
ja
es
jbe
out
and
or
aaa
adc
xor
data16
(bad)
xlat
cmps
mov
mov
inc
jge
mov
push
inc
xor
xchg
push
lahf
and
jmp
fsincos
mov
jae
test
les
or
stc
aad
cmps
ja
scas
push
stc
cmp
cmp
xor
sbb
sbb
(bad)
inc
jg
std
mov
ret
mov
or
push
nop
xchg
mov
or
sub
dec
iret
imul
nop
mov
shl
and
ror
(bad)
xchg
mov
loopne
add
jecxz
(bad)
dec
adc
icebp
and
movs
bound
jno
mov
pop
add
scas
adc
vpcmpgtb
nop
lds
push
movs
inc
add
bound
push
mov
dec
push
sub
xor
push
shl
mov
pop
fwait
jmp
mov
mov
loopne
in
and
repz
fld
pop
dec
push
jae
icebp
cmp
pop
cmp
repnz
jmp
popa
adc
push
dec
mov
or
ret
aas
and
xchg
sbb
sti
or
pop
imul
lock
or
rol
retf
mov
ins
mov
pop
out
sar
daa
xchg
bnd
push
jl
or
or
stos
and
cmp
arpl
imul
adc
cmp
adc
(bad)
jo
movs
rcl
cmps
push
mov
in
ret
inc
test
xlat
dec
xchg
(bad)
int
dec
(bad)
iret
ret
shl
push
pop
fld
inc
in
jmp
stc
cmp
sub
xchg
fild
sub
in
sbb
in
cmps
popa
mov
mov
mov
jno
movs
xchg
xchg
aaa
arpl
lods
repz
cmps
push
aad
clc
inc
scas
dec
dec
into
mov
adc
sbb
mov
ret
mov
out
inc
popf
je
js
outs
in
pop
scas
or
sbb
lds
jnp
cmp
adc
cli
imul
ss
enter
sub
loop
cli
das
mov
push
inc
loop
mov
lods
hlt
cmps
cmp
xchg
popf
into
ror
add
or
xchg
and
bound
sub
jno
imul
popf
jno
push
pop
das
(bad)
mov
pop
add
retf
mov
jmp
adc
nop/reserved
jl
pusha
mul
ins
mov
cmps
mov
xchg
jo
jg
addr16
xor
mov
into
xchg
popf
cdq
xchg
inc
call
cmps
scas
adc
enter
pop
out
cmp
jno
in
mov
inc
sub
popa
cmps
cmp
adc
push
cli
gs
jne
test
xor
sbb
push
or
jmp
icebp
ja
loope
ins
mov
cdq
add
daa
or
pop
push
mov
(bad)
pop
mov
lods
sbb
cmp
sub
sahf
or
cwde
cwde
cmp
dec
jmp
push
cld
xor
inc
cmp
retf
sub
aaa
push
jb
shl
cmps
data16
pop
push
shl
or
dec
cmps
lods
xchg
cmps
div
das
mov
jbe
mov
movs
pop
mov
inc
mov
or
xor
popa
inc
mov
or
stc
adc
fsubrp
mov
adc
movs
xlat
dec
lea
cmps
loop
push
movs
add
sbb
mov
sar
outs
lea
bound
or
inc
or
shl
pop
xchg
lods
push
mov
data16
mov
popa
mov
or
repnz
mov
imul
adc
jmp
into
jbe
cmp
push
xlat
jecxz
sub
jp
test
movs
out
mov
out
repz
(bad)
adc
jmp
jns
cmc
(bad)
repnz
repz
ss
(bad)
fs
clc
ret
test
lods
gs
push
shr
mov
pop
fnstcw
cmp
sbb
movs
mov
dec
jge
add
push
test
push
and
je
sbb
inc
ja
fsub
aas
jmp
and
les
push
imul
popf
cmp
mov
and
add
mov
inc
pop
out
mov
jmp
aaa
mov
sub
dec
add
test
or
fwait
and
cmps
das
sbb
test
mov
cmc
outs
inc
ror
das
pop
in
rcl
or
and
aam
sub
mov
jmp
scas
add
(bad)
jne
out
jge
adc
pop
test
adc
jns
inc
stc
fbld
adc
or
and
push
shl
cdq
(bad)
daa
xchg
sbb
and
xor
and
jl
mov
clc
fsubr
xor
jo
repnz
lds
adc
jl
sub
sub
jl
inc
dec
adc
mov
rcr
dec
mov
adc
bound
push
call
dec
(bad)
lds
jno
sbb
xor
jg
sub
mov
ret
hlt
sbb
pop
cmp
sub
mov
test
mov
or
and
mov
stos
aaa
nop
fwait
pmuludq
xor
mov
inc
cmp
sub
jl
and
div
fcom
push
push
mov
std
retf
bound
out
inc
mov
retf
push
mov
xor
inc
add
mov
xor
dec
and
and
xor
inc
mov
sbb
cmps
cmps
pop
or
xchg
scas
push
(bad)
mov
fdiv
adc
push
jmp
inc
dec
fadd
push
push
mov
and
lock
add
aad
dec
jp
mov
sub
push
frstor
fdiv
add
xchg
in
in
pop
xor
or
jae
sub
sub
and
push
addr16
jecxz
gs
daa
push
int3
xchg
xlat
jmp
cdq
iret
lahf
mov
add
jg
mov
cdq
inc
add
pop
adc
mov
push
enter
jg
add
movs
call
ror
and
popa
mov
(bad)
xor
(bad)
jo
cmp
sub
mov
adc
int3
(bad)
mov
push
pop
jns
mov
stc
ds
cs
jl
sub
fld
pop
add
pop
rcl
test
dec
adc
into
pop
(bad)
fisttp
call
inc
icebp
dec
nop
out
adc
xor
ret
daa
push
mov
jmp
push
rcl
hlt
inc
jge
(bad)
sbb
or
enter
jo
lods
add
push
push
mov
push
cmc
lock
out
ror
mov
push
add
jo
ins
mov
(bad)
or
xchg
and
pop
into
mov
ret
dec
sahf
fiadd
push
inc
ins
add
fwait
ins
les
pop
(bad)
ror
ds
fsubp
cmp
enter
addr16
cmp
push
es
jge
lds
mov
mov
or
xchg
shl
pop
mov
push
sub
in
repnz
mov
pop
cmps
in
pop
add
cmp
xchg
leave
dec
push
mov
sbb
ins
mov
or
mov
push
adc
cld
bound
jle
ds
mov
mov
sub
inc
pop
pop
cmp
mov
push
xchg
dec
ds
xchg
jbe
les
or
cmp
je
out
cmp
stc
call
mov
mov
test
into
(bad)
sti
adc
test
addr16
or
cmc
sbb
movs
push
mov
gs
or
jg
test
push
sti
sar
xlat
adc
test
and
push
int
mov
adc
sub
push
mov
(bad)
xor
mov
sbb
and
inc
dec
call
and
jmp
lods
int
shl
cmps
clc
mov
push
dec
ins
fld
xor
aad
push
(bad)
in
pop
test
or
in
das
sbb
(bad)
adc
xlat
jb
lods
jmp
adc
popf
in
add
fcom
aaa
daa
js
or
cli
pop
movs
mov
ss
pop
ja
inc
scas
in
imul
fwait
ret
call
(bad)
shl
push
xor
fstp
(bad)
(bad)
sbb
mov
(bad)
pop
and
adc
inc
inc
cmp
inc
stos
dec
mov
in
loop
loop
pushf
outs
pop
mov
push
out
fdiv
jmp
cmp
test
fnstsw
push
sahf
in
jb
add
jmp
xchg
mov
test
pusha
int3
push
fsub
mov
aam
xor
dec
bswap
xchg
and
sbb
mov
sub
test
mov
pop
adc
xor
stc
or
dec
push
push
sbb
in
das
ret
cdq
push
lock
cmp
mov
or
inc
mov
inc
sbb
out
push
cld
out
mov
loope
sti
hlt
test
dec
enter
mov
and
icebp
retf
jno
push
or
stos
test
inc
(bad)
cld
es
sbb
push
jno
fstp
movs
inc
hlt
test
mov
into
push
lods
imul
in
shl
mov
sbb
in
mov
dec
rol
adc
pop
mov
aaa
or
fucomi
test
or
jb
push
mov
push
cwde
repz
adc
(bad)
mov
adc
repz
rol
loop
mov
dec
inc
xor
ds
mov
adc
(bad)
cwde
or
xchg
cmp
xor
mov
(bad)
push
sar
cmc
data16
add
cmp
cmp
sti
and
(bad)
leave
mov
adc
aas
repz
jns
push
mov
jge
and
mov
inc
push
push
push
(bad)
mov
xor
in
sub
repz
ds
mov
mov
xrelease
mov
cld
pusha
dec
dec
out
pop
xchg
sysret
in
mov
mov
dec
in
xor
xor
fcom
daa
xchg
rcr
adc
test
xor
bound
sub
add
add
je
mov
pop
in
mov
pand
xchg
xchg
pop
in
xchg
cmps
ret
neg
sahf
and
pop
icebp
adc
push
repnz
mov
imul
cmc
ins
or
jp
and
frstor
outs
and
pop
mov
add
mov
sbb
xchg
arpl
out
aas
and
mov
or
repnz
out
mov
mov
cdq
scas
aam
push
jl
mov
fdivr
cmc
mov
aam
push
int
push
aad
mov
fstp
or
test
(bad)
fisttp
or
push
mov
fdivr
cmp
sub
das
mov
sbb
vpunpckhbw
cmps
test
xlat
call
retf
call
repnz
jge
aad
sbb
repz
pop
dec
add
and
and
pop
pusha
(bad)
mov
iret
(bad)
ins
jmp
add
sub
push
ret
or
ror
stos
xchg
loop
cwde
mov
mov
outs
popa
aam
pop
dec
cwde
dec
jae
in
add
movs
mov
rcr
pop
scas
mov
dec
addr16
inc
push
pop
std
setl
loop
retf
arpl
cmc
and
add
sub
scas
jo
push
adc
call
arpl
dec
sbb
out
cmp
mov
mov
movs
pop
in
inc
mov
xchg
dec
adc
jbe
sub
outs
daa
scas
shr
repz
push
icebp
and
sbb
not
clc
fld
cmps
stos
pop
cmp
in
jno
pop
dec
xchg
or
push
out
xchg
icebp
push
cmp
pop
inc
jecxz
sti
and
or
in
xchg
pop
loop
add
mov
adc
mov
or
mov
jae
xchg
nop
mov
mov
cmps
sbb
stos
das
mov
jg
push
cmp
lds
cdq
int
cmp
add
(bad)
sub
add
mov
push
mov
dec
push
mov
jle
ret
cmps
xchg
out
retf
out
jp
cmp
adc
cmp
mov
mov
fdiv
out
div
stc
pop
call
xchg
retf
pop
sbb
sti
nop
add
mov
and
and
pushf
mov
movs
cmp
out
mov
in
out
mov
xchg
scas
in
pop
ja
call
cmp
xchg
sbb
packsswb
and
call
xchg
dec
inc
mov
pop
shl
push
ins
mov
jge
maskmovq
not
and
cmp
shl
sbb
xchg
sbb
ficom
and
and
into
inc
cdq
inc
push
pop
adc
repnz
xor
arpl
ja
js
fcmovnb
mov
sub
dec
xor
add
(bad)
sbb
scas
inc
idiv
dec
jmp
xor
retf
ret
xchg
mov
stos
xor
add
or
pushf
sub
or
mov
sbb
inc
jb
xchg
sbb
pop
movs
iret
add
sub
adc
(bad)
push
cmp
ds
and
xchg
cdq
push
inc
jb
loopne
out
repz
in
mov
cdq
(bad)
xchg
movs
jl
in
(bad)
cmp
cmp
loop
add
sub
scas
and
mov
call
sti
adc
fs
sub
cmps
cmp
movs
ja
cwde
and
sti
mov
jmp
and
in
sub
movs
(bad)
cs
and
xchg
xor
and
rcl
inc
cmp
loope
pop
add
sti
and
mov
cld
jmp
dec
ins
(bad)
lahf
fsubr
ja
in
lahf
mov
push
mov
mov
js
inc
fsubr
sub
in
lahf
adc
push
imul
mov
pop
add
scas
outs
outs
stos
mov
pop
pop
nop
push
(bad)
mov
scas
mov
mov
sbb
pop
loopne
ja
or
and
loop
or
push
out
in
and
pop
push
cmp
mov
jns
(bad)
div
jg
xor
or
dec
and
xchg
dec
sbb
jae
add
aaa
leave
sahf
xor
test
test
mov
sbb
adc
add
pop
fs
inc
jne
sub
fs
or
in
xchg
not
jnp
test
ret
icebp
and
inc
pop
in
test
scas
pusha
(bad)
outs
sub
push
dec
jnp
dec
test
xchg
mov
je
pop
mov
ret
out
sbb
inc
pop
jle
shl
aad
xor
push
push
mov
stos
popa
rcl
xor
lods
fsub
sbb
xor
je
sub
addr16
(bad)
je
(bad)
movs
mov
fadd
jmp
mov
push
dec
out
sub
adc
push
imul
jle
cld
cmp
fidivr
data16
popf
add
imul
push
push
cmp
enter
inc
cmp
test
mov
addr16
mul
dec
aas
pushf
in
pop
mov
jno
or
inc
sbb
in
cmp
stos
enter
fild
scas
push
sahf
pop
addr16
mov
cli
call
sub
adc
retf
jnp
xor
cmps
test
movs
pop
pop
dec
repz
ss
pop
mov
mov
je
out
fist
xchg
mov
push
inc
add
mov
nop
inc
addr16
stc
mov
fisub
and
int3
cmps
bound
push
and
mov
xor
sahf
sti
daa
imul
mov
mov
or
fdivrp
and
gs
or
adc
jae
mov
mov
mov
mov
pop
add
mov
pop
fwait
or
adc
jge
push
test
loop
inc
mov
xchg
jmp
lds
rol
xor
mov
mov
cs
call
mov
xchg
sub
int3
daa
jl
sbb
repnz
xchg
fadd
sti
xchg
not
cmp
xchg
(bad)
cmp
mov
ins
(bad)
xchg
fild
inc
inc
jg
jle
sbb
(bad)
or
mov
cmps
inc
dec
rol
jb
scas
repz
aas
in
test
ret
dec
jb
mov
inc
xor
mov
dec
mov
xor
jnp
xor
js
call
fwait
mov
test
mov
mov
shr
movups
out
push
movs
xchg
jp
and
imul
push
in
sahf
jmp
ss
sub
cmp
jl
sub
mov
loopne
inc
xchg
mov
pop
mov
(bad)
lahf
lods
add
mov
ffreep
or
mov
pop
lods
lods
or
push
retf
mov
sti
mov
fnsave
sbb
mov
and
aas
ss
es
xor
fsub
mov
cli
pusha
movs
or
mov
pushf
jle
add
mov
idiv
ret
das
les
push
jnp
push
or
jmp
xchg
pop
les
inc
xchg
xchg
div
pop
sahf
test
js
fdiv
mov
and
test
adc
sbb
sub
out
scas
nop
push
inc
outs
sbb
stos
popf
lahf
cmp
push
lods
push
cmp
mov
enter
outs
cmovle
retf
mov
clc
scas
les
jnp
arpl
dec
mov
popf
mov
aas
inc
inc
xor
mov
les
jl
or
lahf
add
neg
mov
out
or
in
xchg
adc
jmp
lea
sub
ficom
movs
sub
ror
ret
je
jne
into
cmp
je
test
lods
pop
xchg
es
mov
mov
pop
fwait
dec
arpl
dec
jl
das
fldenv
or
sbb
xchg
inc
xlat
ficomp
loop
pop
mov
adc
repz
xchg
popa
mov
mov
outs
mov
cmp
sub
mov
and
jmp
and
sbb
add
test
adc
daa
mov
dec
shl
dec
dec
(bad)
sbb
push
pop
xor
mov
test
rol
inc
mov
test
add
or
ss
push
ja
cmp
popf
pop
cmp
outs
cld
adc
and
out
stc
loop
stos
into
inc
mov
fcomp
mov
leave
cmp
aaa
nop
popf
lea
movs
call
mov
inc
fnstsw
xchg
mov
xor
out
and
jmp
cwde
imul
loope
pop
fwait
and
mov
jmp
ror
iret
stos
pop
pop
xor
scas
mov
(bad)
push
pusha
inc
cmp
gs
jp
jg
push
out
scas
out
loopne
aas
xchg
cmc
xlat
stos
xor
inc
in
add
inc
fwait
test
into
cmps
fdivr
mov
adc
cmp
retf
test
inc
mov
mov
fs
fist
lds
mov
shl
stc
xchg
sub
jmp
imul
shl
lds
sbb
xor
mov
xchg
dec
mov
cmp
pop
jo
pop
fimul
sub
jg
push
(bad)
(bad)
jae
mov
inc
sub
jl
cmp
xchg
xlat
cmp
dec
push
not
daa
dec
fbstp
in
or
adc
mov
dec
sub
in
cmp
inc
int3
xor
mov
xor
data16
pop
inc
jl
xchg
dec
adc
cmp
mov
push
sar
addr16
repnz
push
jge
stos
dec
mov
mov
xchg
and
stc
adc
ja
out
imul
add
sbb
ins
data16
test
outs
loopne
jnp
lock
into
sub
cwde
movs
lock
mov
mov
sub
and
movs
loope
in
inc
add
xchg
mov
pop
or
dec
sub
mov
cmp
fstp
push
adc
(bad)
mov
cmps
jno
sub
hlt
sahf
test
cmp
sub
lods
ins
rcr
popa
hlt
dec
nop
push
mov
dec
(bad)
stc
retf
call
hlt
fs
inc
mov
lock
sbb
leave
das
inc
mov
jae
dec
or
jge
les
jmp
sub
add
mov
inc
(bad)
sub
ret
out
or
and
pushf
ror
pop
or
jmp
cmp
cmp
std
adc
pop
inc
cs
push
pushf
loope
dec
ds
or
arpl
inc
or
cmps
jne
in
sbb
(bad)
fadd
or
jmp
jno
add
inc
cwde
enter
ror
cmp
dec
inc
add
adc
stos
pop
sbb
push
jns
push
sbb
nop
jge
cli
shl
mov
cmp
inc
pop
mov
xor
ds
nop
aas
mov
jge
mov
loope
imul
out
mov
sbb
push
mov
(bad)
dec
cwde
sub
cli
jbe
xchg
sahf
sbb
into
inc
or
mov
add
adc
js
loopne
cmp
aaa
adc
std
cli
add
lods
into
ds
fisttp
ror
add
int3
push
push
push
cli
sahf
mov
daa
mov
pop
mov
adc
jp
sti
call
sub
xchg
out
pop
lods
sub
imul
das
sahf
xchg
cdq
push
sub
jp
mov
sub
push
ds
movs
pop
mov
or
push
dec
sbb
test
fistp
shl
xchg
sub
(bad)
push
pop
pop
adc
retf
mov
mov
or
imul
or
retf
aad
scas
int
xchg
push
mov
jnp
stc
sub
adc
add
or
xchg
jb
adc
inc
in
xchg
push
mov
mov
pop
into
mov
xchg
int
and
xchg
fcmovnbe
pop
adc
mov
rcl
mov
xor
adc
es
pop
mov
sub
sub
in
dec
cmc
mov
dec
fs
xor
cwde
lea
jmp
aas
xor
out
mov
lods
stc
add
aad
pop
xchg
mov
mov
push
pop
sbb
shl
add
mov
pop
adc
std
jno
imul
test
xchg
pop
sbb
js
mov
jmp
dec
lods
popa
shr
and
ins
adc
loop
xchg
pop
sub
rcr
fs
neg
inc
cmp
pop
daa
inc
ins
sub
adc
sub
xchg
mov
out
dec
pop
in
push
xchg
sbb
ret
shl
sub
sub
in
icebp
and
mov
in
cld
inc
push
in
pop
loope
or
push
pop
aad
mov
mov
repz
jno
xchg
fs
mov
jp
add
cmp
(bad)
mov
sbb
push
faddp
mov
mov
fs
mov
leave
test
inc
sub
add
pop
or
add
pop
sbb
sub
inc
add
sbb
dec
mov
xchg
pop
mov
inc
jle
imul
jae
pushf
clc
jo
cdq
cmps
mov
sti
xor
aad
test
in
test
or
popf
mov
mov
cwde
(bad)
mov
push
fild
jo
or
dec
xor
adc
xchg
sbb
jbe
imul
xchg
xchg
shr
dec
mov
cmp
adc
jecxz
bound
jp
test
lods
mov
shl
je
out
mov
push
jne
loopne
gs
mov
adc
sub
xchg
mov
push
dec
iret
mov
adc
repz
jmp
push
mov
(bad)
enter
mov
mov
inc
je
(bad)
and
cld
imul
push
mov
gs
shl
adc
loopne
imul
leave
xchg
adc
and
mov
dec
leave
xor
push
pop
hlt
xchg
or
or
push
call
pop
xchg
mov
mov
adc
das
add
ror
add
cmp
jp
leave
daa
xchg
stc
cmp
dec
pusha
sbb
xchg
push
in
fidiv
ds
es
add
iret
fmul
imul
shl
test
pop
push
std
xchg
lods
or
jmp
test
mov
xchg
je
pop
jne
int
lods
nop
aaa
add
dec
(bad)
bound
fsub
adc
adc
sahf
in
(bad)
sub
cmp
iret
lods
sbb
adc
gs
rol
mov
cld
adc
mov
add
fadd
push
pushf
out
scas
bound
call
or
adc
cmp
clc
jl
adc
or
mov
cmp
mov
int
mov
sbb
cli
mov
mov
mov
pop
or
mov
or
mov
jbe
add
imul
imul
add
inc
and
ficom
add
es
dec
pop
mov
stos
add
std
mov
sub
sti
jno
pushf
sbb
cmp
pusha
es
inc
sar
inc
dec
movs
or
xor
pop
xor
shl
push
add
shl
in
loope
jmp
mov
icebp
inc
aad
adc
pop
outs
int
cmc
call
fcom
inc
stc
cmp
sbb
loope
pop
pop
movs
shl
seto
sbb
repz
mov
dec
mov
pop
(bad)
sbb
cs
push
or
cmps
adc
(bad)
dec
push
add
leave
mov
dec
lahf
push
pop
in
mov
pop
fnstsw
(bad)
sbb
add
push
jmp
inc
je
xchg
(bad)
nop
test
cwde
call
mov
sbb
repz
push
mov
into
jbe
ret
fmul
add
and
pop
mov
cs
add
out
cs
aam
cmp
test
and
aam
mov
out
out
push
mov
push
neg
inc
or
inc
call
inc
mov
push
and
mov
rcl
sti
out
push
dec
mov
nop
lds
pop
mov
adc
es
xchg
push
xor
jno
inc
mov
or
xor
sub
xor
les
fmul
jmp
in
xchg
cmps
hlt
ins
out
sbb
pop
addr16
lds
js
mov
and
outs
mov
xchg
popf
jmp
mov
mov
scas
hlt
(bad)
mov
or
addr16
ret
push
or
mov
push
sti
jmp
call
add
dec
jle
push
nop
jle
push
rcr
xchg
mov
mov
repnz
retf
inc
dec
sub
mov
fist
stos
cmp
jns
sbb
int3
mov
xor
movs
loope
(bad)
or
shl
xchg
jbe
imul
mov
jle
icebp
push
mov
push
mov
std
push
sahf
pop
cmp
cmc
mov
shr
repz
xor
sub
in
mov
xor
leave
jmp
outs
inc
and
ins
mov
rcr
scas
xchg
pop
xor
movs
mov
or
ret
lods
cmp
nop
mov
inc
rcl
mov
lahf
jno
(bad)
int
pop
movs
xchg
cmp
cmp
xor
xor
js
mov
sub
sbb
ret
adc
mov
(bad)
mov
leave
fild
ins
int3
pop
mov
push
jmp
mov
jl
xor
and
sahf
inc
and
test
add
and
xor
pop
push
pop
je
jle
push
xor
pop
cli
test
mov
popa
push
jl
test
repz
jmp
int
xchg
or
xor
pop
inc
jo
push
mov
movs
xor
ss
in
fs
pop
int3
out
enter
add
sbb
ins
daa
ret
sar
or
out
fdiv
mov
xchg
in
call
dec
popa
retf
in
stos
xchg
repz
inc
mov
or
test
inc
sbb
jg
cmp
enter
xor
enter
add
retf
dec
pop
xchg
test
rcl
ins
push
pop
jno
popf
mov
adc
call
loope
(bad)
imul
sub
push
data16
outs
push
dec
xchg
add
loope
mov
ss
fldcw
jmp
loope
ror
push
mov
out
jmp
lds
push
mov
push
push
es
xchg
mov
dec
jne
mov
jmp
mov
xor
test
int
imul
std
inc
xchg
xchg
jle
mov
mov
outs
mov
xlat
or
xor
ror
pushw
inc
jle
push
mov
cmp
imul
mov
push
or
push
aas
addr16
add
cmp
jae
fst
xor
lods
int3
fadd
setbe
lahf
int3
daa
cmp
and
leave
fdivr
les
xchg
(bad)
cli
mov
fwait
or
inc
or
mov
je
xor
das
inc
test
adc
call
mov
mov
std
(bad)
dec
mov
(bad)
mov
cwde
mov
add
mov
ins
lds
ret
jne
sub
cdq
pop
fs
add
push
loope
ret
cmp
lods
add
push
call
ins
jecxz
call
and
iret
adc
ins
pop
jnp
js
xchg
cmps
push
xchg
mov
imul
ja
mov
frndint
pop
ins
sbb
jnp
add
loope
mov
fs
rol
jno
dec
shr
data16
mov
ret
movd
xchg
cmp
loope
test
mov
leave
jecxz
mov
adc
div
dec
leave
sti
xor
repz
(bad)
push
push
sbb
jnp
sbb
nop
mov
mov
mov
iret
xchg
cmp
push
aam
pop
xchg
inc
stc
mov
aad
std
int
pop
pop
scas
mov
jge
adc
repnz
xor
dec
pop
test
xor
inc
leave
push
(bad)
ret
es
jmp
lahf
jmp
inc
sbb
mov
cmp
jecxz
out
add
or
fstp
pop
add
fdiv
mov
sub
mov
push
adc
pop
xchg
dec
mov
clc
dec
add
pop
or
xchg
dec
cmp
or
pop
push
test
sub
or
and
data16
and
pop
inc
push
sub
add
jb
int3
test
fwait
inc
imul
mov
mov
in
pushf
nop
pusha
adc
xor
pop
cmps
inc
outs
(bad)
nop
ficom
adc
jl
adc
xor
or
std
adc
mov
adc
adc
cmc
movs
retf
ret
inc
xchg
push
ficom
add
lea
push
data16
dec
xchg
push
cs
dec
cli
or
(bad)
xchg
adc
pop
lods
ret
ds
push
mov
in
mov
dec
or
jo
int
jge
int
adc
ror
mov
ss
(bad)
rol
mov
push
xor
aad
jnp
stos
cmp
loop
xchg
(bad)
popa
leave
dec
xor
out
add
push
adc
jle
mov
imul
inc
enter
in
or
out
push
dec
in
mov
dec
lods
loope
sbb
shl
dec
jne
shr
and
loope
lods
aaa
xlat
std
sahf
ins
dec
arpl
push
aaa
pop
sti
leave
popf
leave
inc
add
sbb
icebp
add
pop
mov
mov
repz
pushf
jns
pop
or
jbe
aaa
adc
dec
dec
arpl
pop
pop
in
addr16
addr16
jae
aad
sbb
(bad)
in
inc
jo
and
push
into
or
jecxz
add
xchg
mov
idiv
jns
xchg
clc
sub
dec
stos
xchg
stc
ss
into
adc
sbb
mov
mov
cmp
push
cmc
fcomip
sti
mov
(bad)
(bad)
push
sub
int
mov
inc
nop
mov
inc
cmc
dec
mov
movs
xor
out
dec
cmc
ds
push
jo
xchg
hlt
scas
std
and
addr16
cmp
ds
repnz
cmp
xchg
in
mov
push
cmp
sti
out
js
add
movups
mov
fs
pusha
into
mov
jmp
dec
std
or
nop
dec
aas
inc
(bad)
mov
add
into
jmp
loopne
ret
jmp
repz
sub
sub
retf
push
mov
cmovle
in
out
out
mov
ret
(bad)
imul
mov
mov
pop
daa
int3
or
movs
adc
loope
loopne
int
pusha
mov
add
add
and
xor
das
ror
jmp
dec
add
cs
push
ja
cmc
mov
dec
pop
arpl
fcom
inc
and
mov
jg
not
jno
mov
mov
jb
dec
popa
mov
push
mov
stos
push
pop
pop
(bad)
mov
xor
scas
fidiv
xchg
push
xor
jns
retf
add
lods
mov
pop
cmp
xchg
aas
mov
jo
aas
mov
dec
mov
ins
outs
pop
rol
and
enter
pop
inc
je
and
push
or
add
fucomi
ja
pop
pusha
hlt
push
mov
dec
mov
inc
jns
mov
jmp
sbb
pop
lods
stos
iret
and
xchg
jnp
jne
push
dec
and
add
rcl
adc
lds
mov
imul
repz
js
je
das
loop
rcr
imul
sub
mov
repz
add
mov
scas
pop
enter
shl
out
loope
pop
add
dec
pop
cmp
mov
outs
or
adc
sub
dec
(bad)
push
loopne
in
pop
jo
xlat
push
ffree
sub
sar
adc
sar
push
out
cli
js
cmp
stc
mov
mov
sub
xor
popf
or
dec
push
push
or
adc
xor
mov
xchg
jle
mov
adc
stos
mov
pusha
ins
xor
cmc
das
mov
or
ja
bound
mov
and
jmp
(bad)
or
clc
xor
jnp
push
(bad)
rcr
repz
fisub
sbb
and
mov
adc
add
cmp
pusha
push
popf
xchg
push
cmp
(bad)
jne
xor
jne
pop
and
(bad)
jmp
xor
xchg
add
stos
mov
cld
into
gs
inc
xor
jns
cmp
add
adc
or
mov
sbb
xchg
js
ret
and
das
mov
loop
cmps
pop
popa
or
inc
(bad)
enter
lds
imul
jmp
add
cmp
(bad)
mov
(bad)
inc
xlat
and
pop
aaa
push
add
clc
dec
gs
jp
mov
shl
dec
jb
ins
cmp
ja
mov
pop
std
xor
shr
sbb
ror
adc
shl
mov
sahf
adc
ins
test
xchg
adc
xor
sub
mov
(bad)
jno
push
rcl
icebp
inc
hlt
imul
xor
jl
dec
inc
jg
shl
fbld
iret
inc
or
(bad)
in
inc
test
addpd
jne
cwde
and
div
or
outs
cmpxchg
push
and
in
xchg
fcmovnu
jg
inc
pop
ins
call
sbb
inc
addr16
ins
mov
inc
xchg
adc
call
js
dec
sbb
into
xchg
cli
push
adc
arpl
pop
mov
jp
cmp
inc
sbb
jb
or
in
sub
sbb
push
loopne
mov
loope
adc
fisubr
jmp
ror
jo
call
dec
aaa
int3
xchg
sbb
loopne
xor
cwde
jae
push
in
not
and
outs
(bad)
js
sub
outs
mov
adc
or
add
xchg
cmp
aam
add
test
adc
les
mov
addr16
mov
mul
mov
(bad)
in
ret
and
jmp
mov
xchg
inc
test
(bad)
and
push
(bad)
ret
call
jb
ror
out
adc
adc
bound
inc
or
movs
icebp
cli
sbb
mov
xchg
add
cdq
leave
xchg
add
xor
jge
sbb
cwde
xor
mov
mov
push
data16
frstor
pop
das
jle
pop
iret
scas
add
push
xor
jae
sub
push
mov
dec
dec
test
loopne
xlat
loope
and
sub
push
sahf
mov
mov
icebp
cdq
cmc
inc
sbb
iret
loop
inc
push
jno
icebp
and
loopne
xchg
gs
add
pusha
push
xor
std
mov
scas
cmc
add
pop
daa
xchg
add
dec
fldenv
or
sbb
cli
inc
mov
rcr
and
retf
dec
jbe
pop
cmp
jb
addr16
mov
test
inc
stos
sbb
int3
dec
fdivr
test
pop
jnp
fcomp
xlat
push
and
rcl
sub
shl
jno
push
sbb
mov
mov
(bad)
pop
dec
and
enter
es
lods
pushf
cmp
xchg
ds
push
ret
xor
jge
(bad)
cld
fld
sbb
jp
mov
lock
or
xlat
dec
in
sub
loopne
mov
push
cdq
repnz
mov
outs
xchg
rcr
call
sbb
lods
and
in
push
rcr
cmp
add
pop
and
aam
lods
pop
pop
shl
cmps
packuswb
scas
ret
pop
mov
jne
sbb
or
adc
cmps
xchg
xlat
in
sub
cmps
sub
fmul
or
push
rol
ss
fmul
scas
cld
sub
pop
cmp
cmp
(bad)
xor
(bad)
mov
lock
mov
jmp
jmp
btc
cwde
inc
xor
pop
mov
in
push
push
es
mov
jbe
(bad)
in
les
mov
push
pop
jnp
js
daa
mov
repz
xchg
cli
mov
adc
dec
xchg
call
mov
out
ss
out
mov
fwait
das
lods
push
inc
mov
out
inc
rcl
xor
nop
push
xchg
sub
mov
pop
shl
es
ret
jmp
mov
dec
sbb
jge
out
loope
sbb
add
adc
imul
fimul
xor
ret
adc
xchg
pushf
stos
or
(bad)
stc
dec
lahf
dec
inc
push
sub
pop
test
mov
push
fwait
jno
enter
push
cmps
adc
mov
dec
sub
jl
je
inc
ret
pushf
sbb
mov
mov
mov
je
and
jb
ins
dec
sub
inc
ins
pop
add
jge
(bad)
sahf
in
cmp
add
(bad)
outs
xchg
fsub
mov
shl
push
outs
xchg
push
jmp
pop
inc
loopne
add
push
xrelease
inc
in
test
sub
mov
mov
pusha
sbb
(bad)
fldenv
popa
js
mov
inc
cmp
fimul
or
and
ror
jge
nop
push
push
(bad)
dec
inc
xchg
int
add
push
icebp
sub
or
and
mov
cmp
enter
arpl
mov
ins
push
inc
mov
xor
enter
sbb
mov
shr
clc
mov
int
and
inc
and
jmp
movs
and
shl
jae
or
and
inc
sar
or
fwait
push
scas
sbb
jmp
or
xor
jecxz
add
cmp
daa
push
mov
out
add
call
cmps
aas
outs
xor
sub
int3
mov
mov
and
add
leave
out
mov
mov
lahf
gs
mov
xchg
and
inc
dec
loope
sub
movs
fdiv
lods
sub
mov
aaa
nop
scas
adc
pop
(bad)
ss
fnsave
dec
mov
add
fild
fdivp
daa
lock
dec
(bad)
lods
push
cli
cdq
(bad)
test
xchg
mov
int3
xor
pusha
loope
pop
adc
sbb
mov
dec
xchg
inc
aas
test
adc
dec
jae
ss
jl
mov
jmp
pop
mov
inc
pop
stos
inc
or
test
mov
data16
call
popf
(bad)
bound
cmp
cmps
fsubr
pop
push
and
adc
out
xlat
add
ss
bound
xor
mov
mov
mov
sub
ds
sbb
and
cmps
clc
and
cmp
ins
adc
cmp
pushf
pop
xchg
xlat
xor
xor
call
movs
adc
cmp
cmp
fst
xchg
fistp
scas
push
pop
(bad)
push
fist
push
jge
mov
mul
sbb
mov
adc
dec
add
cwde
cli
pop
jle
enter
(bad)
jno
mov
sub
ror
pusha
imul
push
xor
neg
cmp
inc
inc
arpl
dec
imul
test
or
cdq
lods
sbb
mov
aam
imul
cmp
mov
and
sbb
dec
enter
mov
adc
mov
pop
mov
inc
sbb
dec
pop
lds
or
mov
retf
int
cmp
adc
outs
data16
retf
jae
sahf
lahf
adc
inc
jbe
bnd
jae
inc
mov
pop
fcomi
xchg
jb
mov
addr16
and
popa
jne
cmp
loope
test
stc
add
dec
stc
imul
add
loopne
cmp
cmps
adc
or
into
jle
loopne
and
xor
xlat
lods
cld
retf
lods
fdiv
jne
inc
or
ret
inc
fcomp
xchg
outs
xchg
add
scas
loopne
test
aad
xchg
outs
fwait
jns
inc
mov
add
scas
movs
out
aad
jge
xchg
pop
nop
dec
enter
dec
les
sub
xchg
rol
js
les
cdq
scas
xchg
sti
xchg
dec
cmp
xor
mov
cli
mov
cmps
adc
lea
and
dec
fistp
nop
inc
jle
(bad)
xor
xchg
loop
movs
and
mov
mov
adc
push
inc
sbb
in
mov
jge
ss
adc
in
fnstcw
dec
jg
add
fcom
(bad)
pop
mov
jmp
add
push
cmps
ror
fs
lds
call
mov
test
mov
hlt
or
fidiv
xchg
or
jg
push
dec
dec
ror
push
sbb
ret
jecxz
sbb
(bad)
push
sub
mov
jb
mov
push
jg
add
jmp
adc
movs
sub
mov
mov
xor
adc
dec
dec
pop
cmp
mov
xchg
icebp
popa
jo
out
(bad)
repnz
out
jns
add
in
sub
in
popf
jmp
xor
sub
pusha
jmp
fisubr
mov
int3
push
jne
rol
cmc
mov
int3
out
stc
pop
sbb
fisubr
shl
sub
ss
jge
xchg
jl
rol
push
or
ja
scas
inc
dec
xchg
test
add
jecxz
xor
xchg
cmp
dec
in
frstor
jle
clc
jge
inc
add
mul
jge
or
and
push
add
pop
std
aam
or
xchg
or
sub
mov
add
push
jmp
cli
dec
mov
imul
mov
add
and
les
inc
sub
mov
test
pop
rol
sub
lea
gs
repnz
imul
nop
push
pop
(bad)
jmp
fwait
je
and
or
mov
ret
or
stos
mov
inc
je
fmul
fild
sbb
jecxz
dec
push
mov
pop
push
(bad)
dec
jge
inc
adc
dec
jecxz
inc
mov
inc
fwait
xchg
push
test
cmp
test
leave
(bad)
lods
mov
dec
fisub
push
push
fsubr
mov
sbb
popf
or
inc
aam
push
xchg
loopne
cli
out
mov
scas
jmp
out
mov
sub
or
xchg
mov
orps
jae
popa
stos
fucomi
pop
push
cmp
test
aaa
xlat
outs
ret
mov
fst
js
dec
gs
sbb
cmc
ja
shr
or
sub
int
stos
js
sbb
pop
stos
sbb
jno
xchg
(bad)
popa
js
pusha
outs
and
xor
cmp
(bad)
and
jo
fiadd
in
sbb
xchg
je
xchg
mov
sti
cmps
pusha
pop
jae
push
inc
test
jp
dec
cmc
jnp
in
stos
test
pop
xchg
(bad)
movs
xor
inc
rol
ficom
xor
pusha
cmp
popf
xlat
int
mov
mov
aad
icebp
imul
sbb
mov
ins
fs
sar
arpl
add
mov
sub
or
cmp
lea
push
adc
std
mov
test
lea
mov
dec
mov
pop
mov
or
inc
aaa
mov
(bad)
xchg
pop
xchg
retf
cmp
in
cmp
xor
stc
jnp
add
add
mov
in
cmc
(bad)
movs
sbb
mov
pop
jge
and
scas
ret
loop
pop
scas
inc
call
test
jmp
into
pop
mov
mov
das
leave
xchg
(bad)
cmp
dec
pop
push
retf
mov
mov
ret
test
loopne
dec
je
xor
jp
ficom
or
mov
push
std
jno
movs
cmp
icebp
fs
push
lds
call
or
mov
mov
lods
aas
push
ja
dec
push
iret
imul
pop
movs
pop
pushf
pop
xor
xchg
cmp
sti
sbb
ins
push
push
sbb
stos
ins
out
int3
inc
fwait
aas
push
je
dec
popa
or
or
out
or
push
or
dec
mov
and
ja
sub
rcl
adc
les
loope
into
pop
dec
add
js
inc
adc
jne
push
in
call
in
jne
mov
xlat
adc
and
call
xchg
pop
loope
shr
push
loopne
inc
mov
cmp
xchg
lahf
cmps
inc
sbb
dec
pop
cdq
push
fild
add
or
dec
fcmove
inc
xor
cdq
jmp
popa
mov
stos
and
repnz
xor
sbb
xor
mov
sbb
ins
mov
test
adc
(bad)
jl
std
mov
mov
js
xchg
xchg
test
pop
cmp
leave
imul
stos
jnp
aaa
int3
cmps
cmp
push
push
sub
mov
out
push
pushf
xchg
dec
adc
nop
int3
inc
js
push
pop
sbb
jge
sbb
push
pop
jns
push
int
aam
sub
sub
pop
vmwrite
inc
inc
popa
push
push
adc
repnz
(bad)
into
mov
bound
mov
out
push
add
ss
or
xchg
push
pop
stos
xchg
xor
das
outs
sbb
mov
cmp
imul
in
and
pop
stos
call
pop
imul
pusha
pop
add
ret
imul
mov
jnp
shrd
cld
xchg
pop
add
xor
test
fadd
pusha
add
scas
(bad)
cmp
rcl
into
push
push
add
cmp
imul
mov
in
sub
gs
mul
mov
mov
ds
mov
jmp
xchg
xlat
mov
sbb
jmp
lods
cmp
shr
nop
or
movs
dec
adc
pop
xchg
adc
hlt
mov
or
adc
add
xchg
xlat
or
out
out
xchg
add
sar
lods
js
call
scas
movs
mov
dec
je
mov
data16
aaa
jb
fadd
data16
and
out
mov
ss
xchg
call
jge
lods
in
out
(bad)
mov
stc
mul
xchg
cld
sub
xlat
and
lods
or
jb
ror
mov
int
pop
xor
movs
fild
ror
mov
dec
xchg
inc
fdivrp
push
dec
push
xor
(bad)
pusha
sub
in
cmp
sbb
mov
push
in
fistp
in
shl
adc
cdq
retf
mov
retf
fs
fnstcw
dec
ins
xchg
icebp
je
pop
dec
sbb
xor
outs
push
scas
std
aad
cs
jbe
add
xor
dec
ror
dec
mov
push
popf
aad
inc
dec
push
and
xor
push
or
(bad)
js
adc
call
data16
pop
int
test
loope
icebp
push
test
les
mov
lea
sbb
dec
and
dec
xchg
jecxz
les
dec
and
test
lea
jl
push
mov
out
sub
call
push
sar
adc
xchg
out
cmp
out
call
enter
xor
test
jmp
pop
dec
test
pusha
es
xchg
mov
enter
mov
pop
ins
jle
call
int3
pushw
or
cmp
xchg
adc
pop
std
or
sub
xlat
aas
mov
popf
sbb
repnz
xchg
aam
adc
lods
xchg
xor
sbb
mov
aad
ficomp
jns
dec
stos
sbb
loopne
mov
mov
popa
fucomip
out
iret
cmp
pusha
js
loop
popf
int
and
daa
xchg
sub
or
mov
lock
mov
idiv
lea
mov
push
lods
lock
js
mov
fmul
mov
retf
jecxz
push
pop
inc
push
push
mov
sti
mov
neg
mov
pop
sbb
aad
jle
loope
push
add
jmp
pusha
mov
push
mov
dec
sbb
xor
mov
sub
adc
lea
ins
in
sub
(bad)
cmp
xchg
mov
inc
lea
(bad)
adc
jno
sar
mov
ret
xchg
mov
jg
bound
mov
dec
sahf
or
jbe
call
cld
or
fcomp
jmp
cmp
pop
push
mov
nop
pop
pop
outs
(bad)
cs
and
pop
push
or
and
pop
mov
xchg
xor
sub
lock
or
addr16
mov
(bad)
xor
cmp
(bad)
out
int3
clc
icebp
mov
add
sub
(bad)
icebp
jne
and
sti
je
ins
cmp
mov
dec
das
(bad)
pushf
xchg
sub
inc
sbb
or
stos
cs
cmc
clc
nop
in
arpl
call
sub
retf
ficomp
mov
ins
ror
push
in
in
jmp
(bad)
jmp
or
or
(bad)
fwait
movs
add
call
ds
push
adc
cmp
ret
(bad)
out
xchg
pusha
sahf
jo
cdq
repz
mov
mov
shl
mov
sbb
(bad)
jge
repnz
(bad)
aad
sahf
outs
(bad)
cmp
cmp
xchg
call
sbb
js
jge
cmc
jmp
or
retf
or
aad
test
fwait
cmc
imul
fimul
cmp
add
xlat
jo
adc
push
(bad)
jmp
pop
pop
sub
dec
vmovddup
int
adc
xchg
aas
xchg
jge
sbb
ret
mov
xor
int
arpl
int3
ret
nop
cmp
push
pop
inc
ficom
push
lods
in
push
test
jb
adc
pop
test
clc
loope
out
popf
scas
mov
inc
cdq
fnstcw
ss
repz
and
and
(bad)
fld
push
jg
mov
aam
cmp
arpl
cmp
fidiv
jo
mov
sub
sub
jb
inc
mov
into
xor
jnp
add
es
mov
sbb
loop
cdq
sbb
(bad)
xchg
sub
mov
fidivr
rcr
daa
(bad)
lods
xchg
clc
or
rol
mov
push
loop
jbe
push
push
rol
outs
jmp
ja
aad
aam
test
mov
xor
sub
mov
pop
cmp
cdq
mov
dec
push
pop
push
test
cmp
push
pusha
and
pop
pop
xchg
mov
adc
jmp
sub
fcmovu
add
nop
dec
inc
aad
int3
add
add
hlt
(bad)
xchg
cwde
adc
mov
xor
mov
adc
jmp
dec
push
push
clc
dec
mov
(bad)
and
mov
xchg
add
sub
sar
and
mov
sbb
mov
pop
inc
sub
inc
mov
pop
ror
inc
nop
inc
ja
mov
scas
add
sbb
clc
mov
adc
aaa
arpl
mov
mov
jp
xor
mov
pop
inc
ss
pop
pop
(bad)
call
aaa
mov
and
call
xlat
mov
(bad)
aas
push
inc
pop
gs
inc
std
movs
sahf
stc
mov
pop
inc
lahf
(bad)
dec
jb
sbb
(bad)
out
ret
inc
push
sub
scas
pop
ins
arpl
sahf
push
je
enter
and
mov
jne
and
cld
sub
add
cdq
addr16
mov
or
and
xchg
inc
jns
mov
aad
mov
dec
in
in
or
mov
adc
xor
and
stos
retfw
cmc
pop
ss
aam
scas
dec
shr
not
dec
jno
inc
fimul
int3
inc
(bad)
mov
cmp
fcmove
inc
ds
sub
mov
add
(bad)
ds
push
mov
push
and
out
mov
(bad)
(bad)
xchg
inc
fisttp
xor
call
test
push
or
aam
mov
in
cmp
add
repnz
ds
and
fbstp
ds
adc
(bad)
jno
fdiv
hlt
adc
fbld
or
push
ret
and
aam
jmp
repz
dec
cld
mov
iret
in
mov
(bad)
xor
aas
sbb
cmps
aad
mov
jle
add
sub
xchg
xchg
into
sbb
push
mov
jg
adc
rol
mov
fisttp
push
leave
dec
pusha
(bad)
sbb
imul
pop
jmp
push
dec
push
add
fidivr
loopne
mov
scas
xor
and
adc
sbb
aaa
xchg
dec
mov
sub
xor
mov
es
jbe
sbb
ss
jmp
and
or
lods
add
cmp
push
xchg
(bad)
aaa
leave
jecxz
adc
push
adc
sub
lea
addr16
mov
shl
outs
stc
test
cld
cmps
fwait
mov
dec
pop
test
dec
and
push
cld
int
sar
xor
jle
mov
out
movs
inc
add
retf
mov
jecxz
(bad)
xlat
aas
pop
xor
and
lods
adc
push
dec
push
inc
jns
mov
addr16
cmps
popf
xor
cli
cmp
imul
enter
enter
fsubr
sbb
mov
pop
and
jmp
addr16
iret
aas
lea
push
(bad)
sub
stos
sbb
inc
pop
jmp
inc
stc
scas
pop
and
pop
daa
and
inc
in
and
outs
mov
fs
cmp
push
xchg
lock
push
sub
mov
retf
inc
stos
bound
mov
rcr
loope
adc
ins
inc
sbb
adc
dec
xchg
pop
mov
pop
gs
sub
add
imul
and
mov
adc
or
push
push
daa
repnz
push
push
xlat
loopne
icebp
sbb
push
nop
inc
push
pop
xor
bound
xor
and
push
mov
sub
and
vxorps
pusha
(bad)
mov
push
cmc
cmp
jns
stc
jecxz
out
cmp
mov
add
jge
sub
loopne
or
subps
and
call
clc
bound
test
xchg
fld
cmp
mov
jmp
sub
pop
xchg
cmp
sahf
in
shl
dec
jmp
mov
dec
inc
movs
mov
hlt
sbb
ja
enter
add
outs
add
shl
dec
in
jae
jp
fst
in
jne
adc
or
xchg
pusha
pusha
mov
cmp
int
mov
push
data16
mov
ret
xchg
imul
xor
mov
ficomp
sub
cmp
mov
pop
mov
jb
jle
cmp
test
xchg
xchg
cmp
jle
cmp
iret
push
inc
cmovno
adc
pop
dec
rcl
sub
jmp
icebp
movs
add
add
pop
xchg
mov
out
dec
test
pop
or
js
jl
jne
cmp
nop
lea
dec
mov
sti
fs
xor
shr
adc
leave
and
adc
cmps
inc
push
test
inc
pop
add
push
mov
sub
fs
add
mov
out
mov
add
pop
or
dec
dec
mov
push
inc
inc
pop
lock
xchg
fist
add
cmp
mov
pop
add
mov
mov
jge
mov
pop
scas
and
mov
les
adc
stos
dec
sbb
daa
ds
mov
and
pusha
sbb
stc
xchg
mov
pushf
push
pop
mov
dec
xlat
outs
cmp
lds
add
or
cmp
cmp
ror
push
movs
in
mov
bound
xor
out
imul
inc
pop
test
xchg
sbb
daa
in
adc
jg
js
mov
jle
ins
out
fistp
outs
imul
and
bswap
xlat
in
inc
or
and
adc
call
and
mov
cmp
inc
sub
scas
in
or
dec
out
jmp
(bad)
cs
pop
ret
mov
loop
and
mov
mov
scas
mov
popa
(bad)
loopne
push
movs
outs
pop
imul
cli
sub
call
sti
int3
pop
xor
cld
mov
xor
adc
push
in
inc
addr16
iret
dec
xchg
mov
mov
dec
test
aam
sub
push
mov
jae
jmp
jns
add
push
retf
pop
(bad)
push
pop
adc
cmp
push
adc
sbb
call
pop
(bad)
sbb
adc
aad
test
push
pop
inc
int
ja
stos
cmp
neg
popa
pop
lea
gs
add
stos
cmp
lock
data16
(bad)
add
jnp
retf
push
jecxz
pop
or
mov
imul
jmp
dec
cmps
jl
cs
icebp
mov
adc
jo
mov
pusha
inc
cwde
das
mov
cli
xor
xchg
dec
sub
pushf
add
cmp
mov
cmp
data16
fnstsw
jl
mov
cld
sbb
and
loop
sbb
test
sub
mov
imul
inc
xchg
mov
mov
mov
push
int3
pop
jno
loopne
pop
sub
fsub
cmp
add
call
jmp
test
mov
arpl
push
btc
rol
add
sub
fdivr
mov
push
xor
pop
mov
ins
mov
(bad)
and
sahf
aad
add
stc
(bad)
mov
inc
xor
aam
iret
mov
push
mul
sub
pop
push
ins
fstp
shl
push
cmp
xlat
xor
xchg
ret
add
add
loope
inc
xor
jae
outs
pop
push
push
daa
and
mov
cmp
outs
scas
xor
inc
jo
fsubrp
nop
call
fwait
push
rol
xchg
dec
mov
lock
adc
fidivr
cdq
stos
int3
lods
mov
(bad)
je
aas
sar
pop
movs
xor
fdivp
xchg
(bad)
pop
rcr
aam
pop
push
movs
sahf
inc
inc
addr16
jl
test
test
into
xchg
jmp
jb
jmp
jecxz
ss
mov
jl
pop
(bad)
and
xchg
int
popf
xchg
push
fidivr
mov
pop
sbb
push
(bad)
in
add
les
jmp
or
bound
mov
inc
xor
scas
iret
mov
push
lods
je
mov
or
push
mov
sub
(bad)
jb
mov
imul
pop
sub
mov
xchg
jmp
pushf
xor
iret
push
icebp
inc
and
int3
rol
add
int3
mov
ds
mov
imul
mov
xchg
sbb
add
(bad)
cmp
xlat
and
into
cmp
jno
and
jmp
pop
outs
movs
nop
rcpps
adc
push
jmp
and
mov
xor
ffreep
mov
pop
mov
ret
adc
(bad)
aas
retf
sub
cmp
dec
imul
sbb
in
mov
add
jl
mov
lock
mov
and
push
xbegin
sbb
stos
fisubr
push
ss
pop
clc
jmp
hlt
(bad)
lods
jmp
pop
inc
pop
cmps
xor
(bad)
jmp
dec
sahf
fisubr
lahf
ret
das
pusha
pusha
sti
inc
retf
repz
jmp
sub
mov
out
jb
sub
xchg
cs
sub
mov
rcr
test
dec
nop
inc
lahf
jno
xchg
jmp
xor
out
jbe
nop
retf
pushf
out
sbb
or
test
icebp
and
scas
mov
mov
xor
clc
fcomp
(bad)
sahf
ja
aam
sub
arpl
jl
jnp
jb
fmul
lahf
inc
aam
mov
jmp
test
vmwrite
jae
rcl
sub
push
jmp
dec
scas
outs
rcl
or
push
mov
into
addr16
jae
xchg
sub
mov
jns
mov
mov
dec
aam
(bad)
js
inc
popa
xor
xor
sub
sahf
cmp
sar
call
dec
and
sub
and
aam
xchg
mov
xor
adc
test
pop
push
inc
loop
gs
je
xchg
cmp
lahf
jmp
cmp
jmp
ret
rcr
fwait
(bad)
call
push
in
lods
push
or
pop
movs
stc
mov
push
call
add
fwait
arpl
movs
rcr
sub
ror
jo
cmp
stos
arpl
and
dec
fnstcw
clc
loope
jp
mov
int3
retf
mov
xor
and
(bad)
rcr
adc
mov
dec
loopne
fist
(bad)
movs
mov
ja
fist
jbe
outs
mov
leave
or
mov
push
fisub
or
setb
and
inc
pushf
push
xor
outs
adc
adc
fwait
nop
std
pop
loope
aas
cmc
addr16
push
or
add
sbb
inc
cmp
aad
push
call
into
in
mov
loope
lahf
xlat
pop
pop
adc
add
sbb
ins
stc
inc
in
shl
aaa
mov
repnz
in
mov
xor
ja
call
mov
pop
cmps
nop
stc
fdivr
int3
cmp
addr16
pop
mov
movs
movs
cld
sbb
add
xchg
fild
cwde
rcr
aas
shr
icebp
loope
jbe
adc
(bad)
or
xchg
mov
sbb
(bad)
sbb
adc
inc
pop
std
jle
mov
movs
jnp
mov
pop
fs
dec
into
push
push
push
je
mul
mov
push
xchg
icebp
jb
mov
test
push
adc
xor
mov
call
inc
pusha
xor
dec
dec
(bad)
xchg
mov
hlt
das
test
sbb
jle
pusha
data16
clc
lods
sbb
sar
pusha
inc
es
jne
jns
nop
push
das
fistp
mov
repz
pop
adc
(bad)
xlat
sub
call
pop
mov
outs
jge
adc
push
mov
outs
jecxz
pop
nop
imul
stos
adc
xchg
dec
mov
in
scas
sub
sub
pop
cwde
pop
dec
leave
xor
add
mov
loop
push
or
adc
dec
add
out
and
mov
sbb
inc
push
sbb
jo
and
mov
add
popf
jae
gs
cmp
in
out
sub
dec
jno
sbb
inc
out
mov
adc
sbb
xchg
mov
pushf
ret
les
outs
icebp
inc
stos
adc
icebp
pop
addr16
sbb
test
cmp
push
push
hlt
inc
icebp
add
xchg
xor
mov
jns
jecxz
adc
test
imul
jne
shr
inc
les
pop
in
sub
les
mov
sub
pop
fidivr
cmps
mov
shr
jae
addr16
sbb
hlt
mov
bound
and
cmps
xchg
mov
push
dec
int3
push
cld
into
mov
clc
cmps
test
popa
inc
rcl
bound
in
push
gs
repnz
movs
cli
mov
jg
loopne
push
pop
mul
pop
jne
adc
adc
inc
ror
mov
dec
inc
xchg
jg
ficomp
cmp
out
fwait
js
add
retf
push
(bad)
dec
xor
add
in
xor
out
push
push
jns
mov
out
dec
cwde
mov
int3
sbb
out
sub
push
movs
jo
gs
adc
movs
clc
leave
add
cld
sub
retf
jae
sbb
and
xchg
hlt
sbb
shr
add
cmp
fdiv
stos
inc
inc
(bad)
clc
mov
les
out
push
inc
fsub
sub
push
cmps
mov
sbb
mov
cmps
sahf
movs
and
sti
inc
push
shr
scas
dec
sbb
sbb
xchg
inc
push
sbb
push
div
xchg
outs
arpl
in
pop
or
rol
scas
das
sub
lods
cs
sahf
xchg
adc
movs
pop
mov
xchg
les
retf
sub
leave
jno
ins
lods
fisttp
or
xchg
add
test
jno
mov
stc
xor
cmp
xchg
xchg
and
lds
leave
and
and
or
stc
mov
shl
fsub
repz
push
lock
(bad)
push
sti
in
fwait
mov
test
jmp
mov
or
aam
fadd
test
adc
ins
xchg
pop
or
jle
mov
jmp
lahf
or
xchg
mov
sbb
ror
js
popa
daa
pop
movs
pop
jle
xchg
fwait
adc
jecxz
scas
sahf
cmp
pop
aad
xchg
fwait
jno
adc
adc
gs
mov
jmp
rcl
dec
xchg
jp
mov
push
into
daa
fcmovbe
(bad)
push
in
daa
jg
int3
mov
fdiv
call
mov
sahf
jno
mov
mov
cmps
stos
jmp
push
mov
out
cmps
cmc
adc
das
sub
sub
lods
icebp
dec
and
pop
dec
loope
test
mov
sbb
jb
cmp
adc
add
push
adc
jns
xchg
aaa
or
mov
xchg
cs
loop
push
gs
or
aad
pop
lods
dec
out
mov
dec
pop
jecxz
(bad)
add
out
out
jmp
(bad)
(bad)
(bad)
mov
jl
fwait
xchg
jp
and
movs
xchg
inc
sahf
fdiv
test
xor
lock
lahf
std
mov
and
neg
xor
jae
das
(bad)
aam
lock
lods
pushf
add
into
retf
add
cdq
xchg
mov
loop
imul
pusha
dec
mov
lods
ss
rol
push
addr16
cmp
mov
add
sub
jno
mov
int
popf
sub
mov
push
push
not
jo
retf
sbb
pop
fst
dec
and
push
iret
add
shl
and
imul
dec
das
sub
mov
cmp
je
pop
mov
mov
pop
push
in
adc
addr16
or
or
in
jmp
sub
mov
leave
and
adc
cld
das
cmc
jecxz
in
out
sar
pop
sbb
into
pop
inc
xchg
pop
and
jae
fsub
jae
les
xor
mov
fwait
data16
sbb
rcl
cld
pusha
retf
cld
jno
pop
push
les
or
loop
cmp
xchg
imul
pop
xor
mov
not
lock
pop
ss
inc
daa
mov
push
shl
mov
outs
pop
int
mov
call
push
sbb
mov
dec
pop
rcr
adc
mov
sub
and
fcos
xchg
mov
test
or
adc
fcmovb
inc
adc
in
xchg
mov
push
and
sub
xchg
ror
jl
or
pop
arpl
iret
mov
xchg
sub
mov
jle
imul
add
cmp
xchg
xchg
mov
mov
setno
cmp
mov
mov
lahf
and
fstp
dec
scas
iret
rol
mov
sub
test
dec
shl
xchg
pop
push
cmp
ins
xor
pop
nop
in
sbb
cmp
shr
mov
sysret
inc
cmp
into
std
in
xchg
adc
ret
repnz
pop
icebp
mov
fsubr
nop
mov
stos
in
inc
leave
pop
mov
icebp
xchg
xor
sti
mov
sbb
cld
fsub
jo
fsub
outs
in
addr16
aaa
je
adc
push
popa
call
xchg
sub
add
cmp
dec
inc
retf
shl
push
loopne
mov
and
adc
jns
sti
xchg
imul
dec
sub
pop
inc
dec
(bad)
push
xchg
xor
jge
popa
mul
popa
mov
mov
push
sub
loopne
xchg
not
(bad)
lock
aam
push
xchg
daa
mov
cmc
out
sub
out
push
or
pop
dec
add
and
outs
ins
sub
mov
adc
ins
pusha
inc
adc
pop
daa
push
jp
cmp
retf
(bad)
push
add
enter
leave
and
xchg
xor
cmp
pop
pusha
xchg
repz
cmp
mov
xor
test
push
mov
inc
sbb
mov
in
mov
mov
in
out
int3
cmc
aad
add
pop
push
pop
ds
jnp
icebp
(bad)
out
(bad)
ja
sbb
sbb
mov
jns
gs
pusha
les
and
ficomp
(bad)
out
and
or
ret
les
jmp
add
mov
adc
xchg
jl
popf
or
fnstcw
sar
fsub
xchg
push
push
shl
imul
cmps
stos
push
repnz
push
mov
adc
mov
es
xchg
fstp
inc
mov
jg
xor
mov
mov
cwde
loope
dec
mov
pop
add
shl
fstp
repz
mov
retf
aad
lock
pop
ds
jmp
sbb
fwait
out
gs
and
and
shr
ja
pushf
fisttp
mov
fimul
inc
add
es
cmc
xchg
pop
int3
stc
adc
adc
sub
fneni(8087
cmp
clc
jb
or
mov
jmp
out
xchg
pop
pusha
pop
push
movs
pop
or
outs
push
cmps
or
ret
in
adc
pop
jnp
xchg
stos
and
repnz
lock
push
cmps
add
fnstcw
cli
adc
aaa
repnz
out
jmp
std
fimul
dec
stos
mov
or
sbb
(bad)
push
out
add
sbb
xchg
test
lds
cmp
push
stos
xchg
add
xchg
inc
mov
leave
sub
adc
(bad)
mov
dec
popf
retf
scas
push
mov
inc
xchg
pusha
xor
mov
and
(bad)
jl
jl
(bad)
popf
out
in
adc
cmp
xor
inc
push
dec
mov
mov
mov
adc
jo
test
dec
push
cdq
pop
idiv
cmp
xor
lds
mov
dec
loop
or
ja
test
xchg
xor
adc
out
mov
or
adc
dec
pop
mov
iret
int
(bad)
mov
stc
dec
mov
ror
jbe
pop
dec
add
lock
cmps
fdiv
mov
mov
aad
dec
pop
jmp
rcl
mov
pop
or
ss
retf
shl
push
push
pusha
jp
outs
jmp
in
shl
fmul
adc
sbb
dec
xchg
cmp
jg
sbb
jp
or
fsub
sub
out
fisub
and
xchg
jl
dec
pop
movs
xor
or
pop
push
xor
mov
(bad)
clc
pop
in
int
adc
mov
cs
dec
jle
cdq
pop
js
mov
cmp
movs
ror
cdq
push
retf
pop
in
ret
xor
cmp
(bad)
maskmovq
not
in
fs
les
sub
push
jo
test
popf
dec
ret
pop
sub
jle
fbld
scas
pushf
(bad)
mov
imul
(bad)
cmc
jg
or
fld
mov
js
sub
push
call
sbb
add
and
and
sub
fs
outs
out
fcomp
sar
inc
adc
lock
retf
adc
(bad)
loopne
(bad)
fcomp
mov
mov
jg
enter
or
fmul
fsub
dec
pop
jb
push
push
sbb
into
mov
xchg
add
cmp
ins
mov
mov
mov
cmp
fcomp
push
sbb
push
dec
sub
mov
ss
add
or
cdq
pop
not
imul
fist
or
sbb
pop
jle
xchg
mov
and
jecxz
sub
and
push
ja
add
and
fstp
xor
movs
or
mov
lock
sbb
fwait
stos
jle
call
sbb
int
xor
or
xlat
ja
popa
cmp
ins
and
xor
jmp
and
test
and
jl
push
add
aaa
pop
pop
xlat
xchg
add
xor
push
jecxz
out
les
sbb
inc
sti
lds
sbb
das
mov
and
push
in
je
outs
rol
inc
push
or
std
adc
cmp
mov
sub
std
repnz
ins
adc
push
aad
rcl
(bad)
cmp
jnp
mov
inc
fnstsw
add
loopne
(bad)
test
sub
pop
mov
dec
jmp
aas
dec
aas
ds
sbb
movs
mov
and
mov
outs
sahf
xor
loope
xchg
mov
sbb
jmp
cmps
fnstsw
idiv
mov
jo
cmp
test
mov
rcl
xor
dec
xor
nop
pop
and
jmp
mov
jo
(bad)
xchg
in
jne
imul
pushf
pop
scas
aad
jns
fcomp
retf
cmp
push
(bad)
fistp
mov
jne
and
or
and
test
out
pop
lahf
xor
mov
js
ret
jb
mov
loope
mov
mov
jp
fwait
mov
jo
repnz
inc
xor
mov
popa
outs
call
(bad)
in
stc
xor
mov
cmp
sar
icebp
add
inc
mov
mov
dec
lea
stc
sub
push
int
stos
out
aas
test
pushf
jnp
mov
scas
mov
xor
cmp
push
push
jae
dec
hlt
xchg
jge
lock
push
and
cdq
pushf
sub
push
xor
ret
jmp
nop
sahf
mov
lahf
outs
sub
popa
popf
das
jo
mov
call
cwde
mov
scas
adc
repz
lds
aas
cmp
hlt
jae
and
xor
jno
aas
mov
xchg
mov
in
mov
push
scas
jbe
jmp
pop
push
adc
xchg
jmp
mov
push
addr16
es
aam
cmps
std
cmp
cld
xchg
aad
lds
fs
pop
or
dec
pop
stos
aam
cmps
pop
aad
mov
sub
je
pop
dec
xchg
cmp
or
dec
fiadd
mov
cs
pusha
or
mov
sub
push
sub
cmc
ficomp
jle
ret
sbb
hlt
jmp
fnstcw
sub
lahf
outs
or
mov
ds
dec
sahf
out
jnp
or
cld
in
test
adc
mov
jo
sar
mov
or
jl
ins
call
cmp
ss
pop
push
out
dec
das
mov
fcom
loope
mov
dec
dec
jmp
fisub
push
xor
and
cmp
inc
xor
mov
icebp
into
in
lds
cdq
or
cmp
lea
xor
std
cmp
cmp
push
sar
inc
js
jecxz
movs
mov
gs
(bad)
xchg
movs
jbe
jle
(bad)
or
inc
test
rcl
push
stos
ret
(bad)
pop
in
dec
sbb
out
loopne
iret
or
mov
leave
cdq
mov
(bad)
aam
std
push
fisttp
aad
xor
adc
iret
out
pop
jno
xchg
pop
push
loope
mov
add
mov
mov
or
jmp
cld
fldenv
imul
ds
inc
sbb
ins
xchg
sub
int3
les
mov
xchg
iret
push
lods
cmc
mov
mov
shl
inc
mov
into
cli
lahf
dec
pop
cmp
shl
pop
rcr
bt
jne
int
dec
cwde
cli
adc
dec
neg
call
ins
push
add
in
mov
hlt
sbb
or
mov
push
mov
push
mov
(bad)
sbb
xchg
add
xor
je
out
jmp
xchg
dec
fwait
sub
loop
test
sub
in
mov
scas
dec
cmc
and
ffreep
mov
jmp
scas
xor
hlt
loope
icebp
sti
(bad)
int3
je
mov
mov
daa
outs
aad
xchg
sub
push
inc
scas
movs
pop
out
jmp
stos
cmp
xlat
or
sub
iret
sbb
inc
daa
xchg
mov
cmp
fldcw
mov
xor
push
sbb
(bad)
sbb
popf
fdiv
xchg
adc
jp
imul
adc
imul
pop
lock
pushf
mov
out
test
mov
adc
push
or
out
jmp
push
xor
dec
lods
call
pop
fdivr
fist
cwde
in
sbb
jo
jns
cmp
add
sub
dec
push
imul
sbb
lea
test
jae
inc
nop
hlt
jmp
movs
sbb
leave
add
outs
push
scas
mov
mov
or
(bad)
iret
into
dec
inc
inc
dec
iret
call
inc
inc
aaa
adc
repz
sbb
mov
push
push
les
nop
sub
push
dec
sahf
ins
inc
dec
cmp
mov
xor
xchg
jg
and
push
cmp
and
jae
les
faddp
fisub
and
mov
inc
xor
inc
pop
jl
push
jmp
mov
pop
sti
(bad)
dec
rcr
pop
scas
test
xchg
call
mov
movs
lea
cwde
jg
enter
push
nop
dec
push
push
push
jg
(bad)
int
inc
jbe
fwait
lock
cmp
repz
and
cmp
fwait
sbb
imul
sahf
mov
test
sub
icebp
lds
mov
(bad)
aam
cmp
xlat
push
xchg
nop
loope
jp
adc
rcr
jl
lock
push
sahf
sbb
mov
dec
cli
shr
mov
jle
ja
xchg
pop
retf
ins
mov
sub
mov
dec
outs
adc
cmp
xor
ret
mov
mov
sbb
inc
les
movs
mov
fistp
push
movs
enter
pop
jg
ds
dec
dec
sbb
or
sbb
fist
scas
clc
mov
je
xchg
push
shr
push
cmc
jns
fist
dec
inc
xor
mov
cdq
(bad)
pushf
jmp
sub
sub
fs
dec
rcl
(bad)
in
fiadd
inc
and
pop
je
xchg
mov
pushf
call
jecxz
loopne
scas
push
xchg
dec
(bad)
ds
cmc
adc
sub
test
aad
cmp
repnz
es
push
jne
rol
inc
outs
cmp
lea
cmps
xchg
call
nop
scas
push
xchg
scas
nop
rol
sti
xor
xchg
adc
cs
lock
test
aas
lds
cmc
cmp
add
test
neg
push
jns
ins
stos
xchg
add
ss
lods
retf
push
mov
pop
push
and
cs
mov
jle
pop
push
scas
push
sar
mov
jl
repnz
mov
retf
mov
retf
repnz
add
loop
xor
out
call
push
pop
(bad)
sbb
mov
cwde
and
add
imul
mov
(bad)
lock
push
lea
cmps
retf
out
mul
ficomp
jno
cmp
sub
xchg
pop
xchg
pop
aad
adc
rol
cmp
and
sub
mov
adc
add
jo
jmp
sbb
ins
or
fidivr
pop
pop
sub
sbb
movs
imul
cmc
cs
and
(bad)
push
xlat
lods
jo
retf
mov
push
jae
dec
fadd
ins
rol
xchg
or
scas
jb
jb
or
and
shl
sbb
cmp
mov
mov
sbb
push
out
push
push
ret
jb
dec
add
adc
xchg
mov
mov
ret
jmp
aad
inc
or
cmp
or
push
in
fist
lods
adc
cmps
or
inc
ror
retf
mov
stos
jl
shl
jns
sbb
xchg
push
jg
mov
jne
leave
mov
xor
std
lock
call
retf
pusha
add
mov
mov
cdq
lock
cwde
jno
lods
int
popf
push
cmp
jp
cmp
js
jnp
retf
gs
test
cs
pop
dec
xor
aad
jl
outs
aas
es
adc
push
fmul
into
enter
xchg
das
in
dec
mov
mov
outs
fidiv
icebp
add
inc
repnz
cmp
dec
lods
mov
jbe
imul
test
out
pop
hlt
dec
and
push
cs
ja
out
xor
retf
inc
(bad)
imul
sbb
mov
jl
xchg
iret
xor
push
iret
xchg
inc
jmp
pop
rcr
lods
xchg
xor
add
push
jno
xchg
ret
dec
fist
xor
add
lods
aad
fdiv
sbb
enter
inc
mov
cmps
jg
aas
sbb
call
(bad)
enter
sub
stos
scas
pop
add
jmp
fcomp
inc
outs
cmp
jnp
sbb
retf
cli
cmps
out
retf
mov
or
out
cs
xchg
jbe
dec
pop
mov
adc
rcl
xlat
jnp
pop
cld
inc
fmul
push
fadd
pop
in
dec
mov
int3
cwde
push
fcom
dec
sub
sbb
cli
daa
dec
in
pop
mov
vaddsd
mov
cmp
jmp
mov
jno
adc
pop
xor
shr
movs
ret
inc
jge
(bad)
xor
pop
xchg
pop
mov
pop
cs
in
fdivr
pop
push
xlat
dec
and
jb
popf
mov
push
or
mov
and
mov
aas
sub
jo
jns
scas
xchg
popf
add
adc
mov
mov
retf
sub
cmp
mov
lods
cmp
clc
clc
and
push
dec
out
add
jl
add
scas
js
push
dec
loope
adc
jnp
fisttp
pusha
push
mov
jge
sub
das
inc
mov
push
push
sbb
pop
fidiv
sbb
and
push
push
out
inc
cmps
or
loope
gs
or
sbb
fs
push
imul
scas
mov
fistp
in
cli
sbb
jecxz
cli
pusha
push
fwait
iret
aam
sbb
sbb
imul
mov
movaps
retf
mov
cs
iret
jae
ret
adc
retf
retf
cmc
arpl
sbb
mov
xlat
(bad)
popf
mov
je
inc
js
jae
int3
inc
xor
xchg
mov
clc
cwde
loope
push
xlat
iret
addr16
movs
add
pushf
mov
cli
push
sbb
mov
inc
daa
in
xor
mov
test
dec
loopne
nop
or
add
aaa
adc
mov
add
movs
out
lsl
inc
jle
data16
out
sub
call
popa
aad
push
stc
ret
adc
clc
or
and
outs
jg
je
scas
sahf
movs
or
shr
inc
dec
jae
sub
pop
xchg
xchg
xchg
push
ds
stos
cmc
scas
pop
sahf
out
jmp
test
xor
scas
push
fsubr
mov
out
lods
sub
shl
and
cld
call
xchg
scas
mov
mov
lods
xchg
cmc
fild
mov
fwait
jnp
repz
lea
dec
jecxz
cmp
xchg
mov
call
cmp
cmp
mov
je
mov
fs
loopne
fcom
or
jle
sub
lea
test
add
loope
cli
pop
jae
push
mov
imul
test
loop
cmp
nop
(bad)
ins
out
xor
xor
cmp
scas
jae
sbb
std
add
out
xchg
adc
mov
fmul
fimul
ins
call
fyl2xp1
stos
stc
mov
les
cmp
mov
aad
or
jecxz
ror
js
sub
mov
stos
mov
mov
rol
dec
iret
xchg
retf
fadd
mov
jmp
sbb
xchg
cmp
mov
call
xor
repnz
mov
add
add
vprotb
sbb
mov
pop
inc
jno
sub
jne
add
push
push
retf
ret
imul
pop
out
xor
movs
push
or
jns
std
ds
xor
das
cli
movs
or
fs
out
and
(bad)
xchg
stos
mov
mov
je
push
adc
sbb
mov
mov
jns
xor
bnd
arpl
cmps
sub
push
dec
jmp
push
sbb
dec
dec
sbb
loopne
(bad)
scas
das
cdq
into
push
cwde
bound
adc
inc
stc
push
xor
adc
imul
dec
test
pop
punpckhbw
mov
and
call
push
les
and
mov
imul
and
fistp
mov
xchg
cmp
test
sbb
iret
jo
scas
push
jp
mov
sub
mov
repz
lea
mov
push
cmp
cwde
jp
cmps
les
sub
test
retf
pop
loopne
mov
icebp
mov
and
lods
and
idiv
or
neg
xor
push
hlt
or
(bad)
mov
ins
jnp
xchg
sti
mov
repz
mov
mov
pop
bound
int3
(bad)
push
fbstp
or
jp
xchg
push
jns
dec
shl
out
inc
and
fcom
push
mov
mov
(bad)
jb
add
jne
adc
pop
push
push
push
addr16
or
mov
pop
fcom
mov
sar
jb
pushf
dec
jne
add
jl
xchg
cmp
stos
mov
daa
imul
or
clc
xor
sub
xchg
pop
stos
inc
shl
pop
ror
mov
fild
cmp
mov
ds
pop
in
xchg
int
(bad)
outs
push
(bad)
loop
aam
pushf
fisttp
fst
pop
mov
mov
sub
gs
test
in
jno
inc
mov
or
xchg
nop
imul
mov
mov
jl
sub
mov
adc
sar
mov
push
cmps
fstp
test
add
inc
stc
push
mov
test
shl
mov
fisttp
pop
add
retf
test
aad
sbb
push
ss
xchg
inc
push
js
mov
mov
test
dec
xchg
das
idiv
scas
dec
in
inc
loope
dec
pop
xor
cdq
ds
dec
retf
daa
add
or
jnp
inc
repnz
xchg
push
push
scas
dec
jnp
pop
xchg
lock
mov
sub
sti
movs
cmp
(bad)
jbe
dec
inc
mov
add
idiv
mov
stos
js
xchg
in
mov
fistp
add
stc
ins
xlat
inc
shr
cmps
push
push
xchg
sub
and
xchg
pop
xlat
fs
inc
js
xor
inc
xor
xlat
jmp
in
and
loope
dec
and
xchg
out
mov
dec
jns
jne
jmp
lea
or
and
pop
jns
scas
ds
in
daa
cmp
fldcw
and
lods
mov
fdivr
arpl
cs
xor
xchg
dec
(bad)
push
cmps
bnd
nop
lock
aaa
cmp
in
pop
pop
pop
push
xchg
pop
mov
popa
mov
adc
shl
jnp
inc
adc
and
mov
call
stos
loope
mov
pop
lahf
cmps
fcmovbe
int3
pop
in
jge
or
cmp
(bad)
sti
loop
or
or
sub
or
stos
ins
cmp
add
xor
je
jmp
mov
inc
test
add
les
es
je
and
dec
lock
push
fst
sub
xor
mov
(bad)
jno
loope
push
mov
std
jmp
jnp
xor
fwait
stc
xchg
bound
shl
jmp
out
scas
dec
shl
shr
(bad)
ins
sbb
dec
shl
sbb
mov
xor
mov
dec
add
push
test
test
add
dec
pop
ds
jmp
ficom
call
int
loopne
retf
push
stc
int
mov
test
adc
popa
mov
adc
push
push
dec
les
dec
push
adc
cld
xor
and
sub
inc
push
jmp
dec
adc
div
jmp
and
outs
dec
jo
fsub
jge
out
jae
pop
out
xor
loopne
sbb
cmp
inc
out
mov
push
loope
xchg
(bad)
fxch
(bad)
arpl
cmps
bound
das
inc
push
add
and
daa
sub
cmp
and
ins
jne
mov
jne
xchg
cmp
cmps
ret
xor
fadd
enter
pop
dec
fsub
and
sub
hlt
xchg
jle
arpl
adc
out
xor
pop
jecxz
push
jno
pusha
les
dec
rcl
xor
pop
(bad)
call
mov
mov
cmp
jne
and
loope
loop
jae
mov
adc
pushf
or
push
aam
cmc
mov
imul
cmc
inc
lahf
sbb
jb
retf
push
aas
cmp
xchg
sbb
stos
clc
pop
imul
daa
inc
scas
ins
and
fstp
sub
or
xchg
out
cld
mov
mov
bnd
out
stc
sbb
mov
in
mov
fld
clc
daa
mov
mov
pusha
pop
mov
jno
ret
push
test
push
add
push
cmp
mov
ja
add
dec
jmp
xchg
push
mov
inc
or
mov
mov
cmp
xor
inc
and
xchg
in
or
and
pop
xor
ror
rol
inc
mov
inc
sub
xlat
das
fiadd
adc
sbb
outs
or
or
jg
adc
jns
mov
nop
or
and
pushf
sti
adc
or
pop
div
pop
lahf
imul
xor
das
jo
shl
sub
mov
mov
cmp
mov
adc
dec
out
sar
push
xchg
xchg
pop
daa
cmp
cs
cmps
rcr
(bad)
xchg
cli
nop
jg
pop
ret
cmp
adc
xor
xchg
jecxz
dec
stc
retf
sahf
and
(bad)
(bad)
test
push
retf
pop
ror
(bad)
pop
xchg
js
and
mov
xor
int3
cld
jo
(bad)
pop
mov
pop
mov
aam
pop
pop
jne
movs
call
ja
pop
mov
inc
add
fld
add
sbb
std
(bad)
sti
and
xor
jb
jne
outs
mov
pop
push
add
push
inc
cmps
scas
or
ror
and
adc
xchg
out
shl
xchg
popa
loope
mov
movs
sub
das
(bad)
and
jb
test
out
test
sub
jbe
dec
sar
pusha
ss
push
ficom
rcr
xor
dec
inc
cwde
loop
nop
push
je
sar
xchg
sbb
sub
(bad)
sti
mov
push
sbb
mov
sbb
fwait
mov
dec
fcomi
sbb
shr
std
sbb
sub
(bad)
fcomp
not
adc
dec
cmp
jno
fisubr
and
sti
mov
push
fisttp
xor
pop
inc
pop
fs
push
test
aas
mov
jg
ins
sbb
push
in
nop
cld
inc
jmp
mov
push
ss
ret
mov
xor
clc
add
add
mov
aaa
ror
ins
jnp
mov
gs
mov
ins
adc
imul
pop
mov
inc
aad
or
test
movs
push
dec
xlat
shr
ds
sub
dec
pop
add
adc
out
fsub
leave
mov
add
adc
loope
xchg
lods
add
pop
push
loop
popa
mov
jmp
dec
push
mov
cmp
(bad)
and
stc
push
xchg
in
fdivr
jne
(bad)
or
aad
sub
jl
or
xchg
push
lds
push
jb
ror
inc
fs
mov
and
dec
popa
or
xchg
and
popf
push
inc
das
push
jmp
(bad)
jl
jbe
cmp
xchg
mov
or
pop
sbb
mov
push
adc
mov
sub
das
fdivp
push
nop
mov
ins
adc
pop
arpl
adc
jno
push
push
lahf
jmp
loopne
sub
sbb
sbb
and
jns
scas
in
mov
or
mov
mov
adc
adc
(bad)
xor
cmps
mov
in
adc
add
popa
adc
mov
fstp
cdq
jg
pop
fild
test
xor
jge
mov
pop
and
sub
inc
or
dec
add
lock
les
jbe
popa
fst
mov
cmp
jecxz
jo
jmp
loope
loop
mov
loope
nop
push
mov
fiadd
imul
ja
repz
or
push
test
inc
pop
xchg
lock
and
pop
mov
xchg
in
push
adc
unpckhps
jmp
(bad)
mov
imul
jecxz
xchg
or
cmps
adc
inc
and
in
int
push
adc
cmc
lea
test
sub
adc
pop
sub
mov
std
jle
fstp
das
add
mov
(bad)
hlt
sar
adc
push
xor
cmps
arpl
arpl
dec
aas
push
out
mov
and
inc
xchg
inc
stc
imul
sub
pop
or
pop
or
je
inc
fnstenv
and
jo
mov
inc
es
or
nop
(bad)
jno
call
push
add
es
sub
add
outs
mov
fisttp
call
(bad)
xor
and
imul
lock
pop
bndldx
xchg
(bad)
out
stos
outs
popf
adc
jns
in
(bad)
iret
lahf
or
out
cld
cmp
cs
mov
retf
mov
int
pop
rcr
je
lods
sbb
fst
inc
(bad)
scas
sbb
push
shl
xchg
adc
sbb
loop
clc
outs
aad
inc
and
sti
push
add
popa
pop
cmp
and
popf
sbb
and
retf
dec
mov
pop
lds
mov
mov
dec
pop
arpl
stc
imul
cmp
(bad)
push
and
add
pushf
popf
xchg
enter
mov
inc
sbb
popf
test
pushf
(bad)
in
push
retf
pop
outs
add
push
add
or
cmps
outs
scas
enter
or
retf
xchg
mov
daa
jp
in
imul
inc
jg
icebp
jns
and
call
aam
and
add
pop
dec
and
cmp
ja
dec
loope
inc
ror
imul
test
mov
jl
inc
stos
in
ror
mov
xor
imul
or
or
cwde
jle
and
sub
jl
xchg
mov
ror
les
sub
mov
call
mov
rcr
push
xor
pusha
or
push
int3
jl
cwde
xor
aaa
stos
xchg
pop
(bad)
pop
test
iret
(bad)
jmp
out
cmp
rcl
ret
sbb
or
jle
mov
mov
adc
push
les
pop
std
adc
fmul
stos
pushf
push
arpl
push
xor
mov
push
mov
addr16
and
test
mov
into
cdq
jp
(bad)
mov
pop
rcl
jne
cld
mov
lods
mov
jo
xchg
int
ds
push
dec
xchg
mov
or
movs
sbb
inc
test
and
mov
leave
jo
in
mov
popf
scas
and
dec
inc
xchg
les
jge
mov
push
cmps
(bad)
add
xor
int
js
xchg
enter
out
xchg
cli
inc
mov
mov
mov
add
test
test
lods
add
cmp
mov
sub
inc
pop
(bad)
pop
mov
cmps
js
cmp
dec
je
scas
sub
es
pop
adc
imul
jno
pop
or
sar
adc
mov
retf
xor
pop
hlt
xor
or
push
shl
in
cmp
in
(bad)
fstp
sar
jnp
fstp
ret
lock
(bad)
xor
popa
mov
ins
inc
push
adc
dec
cmp
add
dec
mov
mov
sbb
push
dec
xchg
fisttp
mov
stos
cmp
aaa
adc
jmp
je
push
and
imul
shl
add
xor
or
mov
or
mov
mov
xor
jno
push
mov
mov
shl
sub
inc
and
(bad)
xor
je
push
iret
or
dec
inc
imul
jo
cmp
or
ret
das
sub
icebp
add
xlat
out
xchg
cmp
adc
ret
fbstp
jae
cs
push
pop
(bad)
sbb
fnstenv
or
sub
out
push
test
push
loop
fnstsw
push
arpl
mov
push
lock
dec
pop
test
and
pop
(bad)
mov
mov
and
push
inc
and
int
imul
jge
in
push
mov
out
jbe
ds
stos
outs
iret
(bad)
pop
ror
add
(bad)
out
push
lods
adc
inc
test
inc
pop
sub
fstp
cld
outs
jns
fidiv
lods
pop
and
neg
and
jmp
adc
mov
dec
xlat
fs
cdq
add
mov
jl
xor
mov
mov
pushf
mov
fmul
fucom
cmp
mov
shl
inc
or
jmp
sub
jb
mov
aam
push
retf
jmp
popf
cmps
in
mov
jle
out
add
mov
xlat
mov
xor
out
push
lahf
adc
sbb
jnp
fldcw
mov
cwde
gs
dec
enter
in
sbb
xor
pop
sbb
out
pop
in
mov
inc
shl
ror
jo
inc
pop
sar
and
push
mov
jae
cmp
inc
xor
inc
loopne
cmps
stos
mov
mov
mov
retf
retf
dec
mov
mov
retf
push
dec
xor
fcom
push
iret
loope
push
and
inc
mov
adc
dec
fiadd
pop
inc
gs
add
pop
frndint
ret
jle
out
jp
jno
add
(bad)
jae
fcom
fidiv
lds
(bad)
push
cmp
cmp
or
fcom
xchg
adc
push
pop
daa
mov
pop
(bad)
mov
cld
jmp
js
mov
js
jne
cs
pop
dec
xchg
mov
pop
mov
mov
dec
mov
fld
jmp
jp
jle
pop
xchg
js
outs
out
sbb
lds
rol
sbb
cmps
call
stc
mov
imul
mov
ins
pop
jb
cld
push
div
adc
xchg
adc
retf
mov
test
scas
sbb
mov
sub
out
adc
pop
dec
adc
lods
add
out
jmp
dec
lahf
pop
push
add
outs
(bad)
rcr
out
sar
add
test
jbe
xlat
cmps
inc
cdq
fcmovb
fcmovnbe
ins
dec
sub
rol
cdq
js
fnstsw
push
shl
in
mov
lods
fbstp
mov
jnp
and
mov
xlat
inc
call
dec
fadd
clc
mov
mov
(bad)
stc
xchg
jne
es
out
(bad)
adc
cwde
pushf
ja
mov
and
imul
jmp
lods
ins
out
push
push
push
imul
push
adc
add
imul
or
sbb
shl
push
or
adc
sbb
xchg
ins
xchg
sub
dec
and
sub
xchg
xlat
(bad)
ja
inc
aas
pop
xchg
pop
jb
push
dec
jg
sbb
xor
and
push
(bad)
pusha
in
xchg
sub
mov
adc
mul
or
sub
lock
jns
lock
adc
(bad)
(bad)
mov
jae
int
mov
int
mov
arpl
mov
pop
fdiv
adc
sub
mov
jl
in
in
imul
jmp
sub
jmp
stc
mov
dec
fst
mov
nop
mov
aas
loopne
cwde
pop
aam
loop
enter
mov
hlt
inc
dec
outs
cli
loope
mov
push
mov
mov
(bad)
out
inc
sbb
cmp
jns
popf
cmp
repz
mov
mov
ja
movs
popa
test
cmp
in
mov
and
xchg
sbb
adc
push
and
daa
jbe
mov
test
mul
add
pop
inc
int
cmp
bound
pusha
add
mov
jl
push
mov
dec
add
or
dec
sub
cmp
dec
pop
lock
(bad)
iret
loop
ins
mov
loop
jmp
test
add
cmps
les
or
nop
or
jb
ret
adc
dec
sbb
inc
or
addr16
cmps
fmul
push
loop
cmp
cmp
sbb
xor
inc
std
mov
stc
mov
mov
pop
xchg
shr
sbb
inc
mov
out
or
cmp
retf
lahf
or
popf
add
and
jmp
push
(bad)
jle
lahf
and
fwait
mov
and
mov
adc
addr16
mov
mov
pusha
or
out
xor
in
sub
nop
or
out
xchg
jmp
outs
push
ret
mov
xlat
inc
cmp
aad
ss
mov
mov
xor
push
xor
das
sbb
in
rcl
scas
and
xchg
pop
leave
xchg
test
inc
clc
in
jecxz
addr16
pop
arpl
cmc
or
cmp
adc
sar
sti
push
into
je
inc
mov
das
dec
mov
mov
mov
ds
or
enter
xor
xor
daa
aam
out
test
sahf
inc
test
pop
cli
pop
hlt
sahf
add
in
inc
jae
lods
(bad)
int
push
daa
sti
jge
outs
and
jns
icebp
js
mov
jle
repz
push
xchg
adc
sbb
into
aam
or
mov
cdq
xchg
aam
loope
xor
(bad)
and
jo
sub
stos
jle
jns
pop
aaa
mov
mov
dec
jne
das
pop
mov
nop
addr16
stc
or
jp
sub
cli
and
or
sub
loope
and
lods
jo
dec
cmp
pop
mov
mov
ret
mov
fisubr
clc
sbb
nop
and
dec
in
or
adc
nop
popf
push
inc
call
xchg
cli
pop
jo
jno
mov
sbb
rcr
out
mov
pop
mov
lock
jl
inc
aam
call
lock
or
jl
push
(bad)
call
lahf
out
push
jle
sub
mov
and
xchg
loope
inc
ret
or
sub
xor
loop
(bad)
loopne
out
dec
xor
imul
rcr
inc
ja
pop
ror
and
xor
push
sti
jmp
dec
test
loopne
pushf
(bad)
fiadd
leave
add
sbb
sbb
dec
inc
lds
mov
js
ins
outs
dec
xchg
mov
jecxz
adc
in
jno
add
mov
in
xchg
sahf
(bad)
push
aas
popf
scas
shl
or
movs
loop
ds
mov
cli
sar
stc
jmp
push
out
cmps
out
pop
icebp
hlt
into
dec
scas
push
(bad)
fisub
sti
in
mov
lods
sbb
mov
lods
stc
hlt
push
jmp
xchg
scas
pop
or
adc
cmp
mov
push
adc
mov
dec
push
iret
loop
jnp
rcl
or
and
ror
push
data16
cmp
pushf
sbb
imul
dec
es
sub
mov
arpl
or
mov
test
pop
cmp
adc
mov
sbb
retf
jg
sbb
jne
pop
pop
std
mov
jno
shl
pushf
pop
xchg
or
mov
aas
xor
sub
xor
enter
fstp
jmp
xor
(bad)
out
jmp
cmp
fxam
xchg
sbb
icebp
pusha
dec
sbb
pop
out
push
pop
popa
ficomp
pop
pusha
xchg
outs
inc
adc
xchg
inc
fcmovbe
loop
adc
test
mov
xor
xchg
push
idiv
and
dec
mov
jle
xchg
sar
dec
stos
popa
push
repnz
stos
mov
shl
mov
imul
gs
das
nop
aaa
sub
mov
or
mov
cmp
inc
xor
mov
fcom
push
in
dec
aas
xchg
lds
gs
enter
cmp
inc
sub
mov
retf
xor
adc
push
cmps
les
cs
mov
xchg
and
out
sbb
pop
dec
adc
dec
pop
adc
dec
dec
jb
pop
ins
test
pop
(bad)
jecxz
in
xor
cmp
(bad)
cdq
mov
lea
mov
aam
and
stos
add
clc
mov
je
rcr
mov
lods
cmps
mul
ins
ds
inc
push
hlt
test
ret
push
or
fld
inc
pop
or
dec
jno
inc
pushf
aad
pop
gs
ret
jecxz
and
sbb
idiv
(bad)
cmp
xor
mov
ja
sub
loope
das
dec
jecxz
(bad)
and
ror
mov
lea
dec
loope
or
adc
mov
inc
(bad)
push
outs
xor
les
addr16
das
xchg
sub
sbb
or
inc
mov
fstsw
add
stos
inc
lods
mov
push
out
icebp
push
test
das
adc
push
xor
cdq
arpl
xor
pop
pop
(bad)
ds
push
(bad)
iret
shl
push
addr16
pushf
pusha
xchg
je
and
stc
pop
adc
rcl
mov
mov
pop
fisttp
push
fcmove
lahf
xor
xor
addr16
push
addr16
aam
loopne
fadd
inc
xchg
jp
ror
shl
jl
add
xchg
lahf
sub
popf
out
stos
sar
cmp
stc
dec
pusha
clc
xchg
lods
(bad)
popf
and
and
imul
adc
cdq
mov
mov
shl
jmp
inc
fwait
bound
call
add
jns
pop
dec
sub
dec
out
aam
sbb
rol
aas
add
leave
xchg
(bad)
mov
(bad)
jl
cld
xchg
leave
adc
fnsave
inc
retf
adc
dec
pop
cmc
mov
pop
jne
movs
dec
fisub
(bad)
mul
dec
push
sub
fmul
mov
out
inc
repz
daa
push
test
mov
pinsrw
sub
jno
jns
sub
adc
or
pop
cmp
(bad)
iret
ins
(bad)
fdivr
in
mov
xor
add
in
adc
and
xor
pop
daa
push
mov
sbb
sbb
sbb
rep
fild
jmp
leave
inc
push
mov
call
rol
adc
and
xchg
inc
fiadd
push
pop
jp
aaa
fiadd
call
rol
dec
sbb
jle
cld
retf
stos
push
pop
sbb
jae
shl
mov
bound
mov
adc
jp
enter
dec
sub
arpl
dec
push
sub
xor
fist
aad
imul
ret
mov
cmp
sub
push
jns
add
int
lods
dec
loopne
data16
mov
leave
mov
adc
sub
mov
lock
jmp
push
adc
pop
fwait
xor
add
fld
call
mov
xchg
adc
repnz
repz
cmp
sub
ins
fwait
out
je
jl
cli
rol
(bad)
pop
sahf
jne
inc
in
or
mov
add
das
fisubr
daa
shl
pop
pusha
push
popa
adc
cmp
inc
jp
jp
ret
fistp
into
inc
bnd
mul
pop
sub
(bad)
and
imul
jne
(bad)
xor
sub
and
movs
xor
fsubr
push
ja
xchg
mov
mov
jl
inc
xchg
(bad)
mov
push
cmps
or
jmp
lods
and
stc
out
add
mov
sub
stc
mov
mov
hlt
scas
pusha
ret
hlt
aas
(bad)
inc
dec
xor
in
push
les
loope
dec
popa
dec
and
int3
pop
mov
jo
test
or
mov
push
pop
xor
cld
jle
mov
cmp
pushf
jb
jecxz
inc
xor
xchg
mov
or
cmp
sbb
hlt
mov
xchg
lock
xchg
inc
aaa
xor
mov
xchg
(bad)
dec
mov
pop
fsubr
pop
mov
nop
and
lods
arpl
mov
call
pop
jmp
ss
pop
and
fsubrp
inc
mov
push
nop
xchg
mov
lods
cmp
dec
sbb
in
or
adc
stc
cli
je
xchg
inc
or
bnd
lahf
mov
fnstenv
pop
stc
inc
cmp
lock
fs
out
stc
xchg
imul
loopne
mov
jbe
dec
addr16
push
add
cmp
cmps
scas
xor
inc
out
xor
rol
iret
xor
jnp
dec
std
cmp
push
in
sbb
or
sahf
(bad)
(bad)
xchg
daa
jle
cmp
jo
ja
mov
sti
bound
iret
pop
inc
or
out
movs
jne
fwait
xchg
or
cmc
(bad)
clc
push
adc
mov
outs
xor
std
sbb
or
std
mov
inc
mov
and
cmp
mov
(bad)
and
dec
cmps
cmc
ret
and
sub
adc
out
lea
cmc
jbe
push
js
jns
je
popf
dec
nop
mov
loope
cmp
call
(bad)
out
fnstsw
xchg
out
test
push
xlat
jno
or
sti
popa
mov
imul
add
xchg
je
dec
cdq
dec
stc
and
fbld
idiv
cmc
fs
mov
popa
sub
mov
or
mov
mov
jo
mov
and
cld
adc
jg
stc
mov
xchg
inc
call
lods
stos
mov
fnstsw
inc
sbb
retf
push
int
(bad)
not
or
iret
mov
add
ins
lea
out
cmps
jns
mov
ss
fistp
mov
fld
xor
lahf
mov
add
out
inc
das
push
mov
ret
xchg
je
sub
scas
mov
sub
ss
inc
repnz
call
cmp
dec
mov
dec
jae
or
sbb
gs
or
pop
in
sbb
in
imul
ss
mov
test
clc
sub
mov
imul
leave
mov
push
pop
or
or
dec
loopne
mov
sub
xchg
mov
ficomp
loopne
shl
sub
push
push
popf
add
jl
mov
mov
or
(bad)
mov
dec
cs
lods
adc
enter
fdiv
mov
ret
repz
(bad)
cdq
xor
lock
ins
adc
xor
mov
je
mov
js
push
mov
sub
sbb
xchg
ds
mov
pusha
mov
out
imul
adc
xor
shl
aam
and
movs
sub
ins
pop
push
jmp
loope
rol
sub
and
cmp
mul
and
mov
and
pop
test
retf
ret
push
jb
fs
sti
push
pop
icebp
mov
sbb
cdq
test
ret
cdq
or
aad
jno
sub
or
sbb
fwait
sub
loop
pop
xchg
je
sub
lods
scas
jbe
mov
sbb
dec
pusha
test
push
bound
cmp
pop
push
adc
add
add
xchg
xor
repz
sbb
and
in
cli
push
out
jo
in
(bad)
loopne
lock
jnp
inc
push
xchg
retf
or
add
xor
or
retf
mov
add
mov
mov
mov
mov
mov
popf
ret
pop
pusha
xchg
daa
out
popf
sub
sbb
in
aaa
adc
popa
inc
and
and
mov
fmul
push
jbe
or
cmp
sub
cmps
xchg
push
push
ins
sub
dec
aam
mov
movs
sbb
sub
sub
push
sbb
sub
inc
pushf
jno
movs
jp
test
lea
or
sbb
add
js
(bad)
fcom
and
or
jno
add
rcr
and
mov
lods
xor
ret
adc
outs
ins
push
into
and
aad
adc
imul
ds
push
sbb
cmp
push
mov
enter
fild
xor
dec
cmp
and
mov
iret
mov
cli
into
and
hlt
push
xchg
push
rcl
inc
push
jmp
sub
popa
jmp
add
dec
test
jmp
mov
gs
xchg
ret
inc
ss
idiv
push
les
movs
or
mov
mov
lock
data16
sub
xchg
loop
stc
rcl
outs
mov
mov
sbb
sti
ror
ror
mov
xor
dec
lods
(bad)
add
xchg
and
jmp
lds
pop
(bad)
aam
enter
int3
mov
inc
das
ret
aam
test
push
xor
cmp
not
jg
sub
push
int3
dec
or
xor
adc
ss
mov
loop
xchg
test
mov
call
cmp
and
fcomp
add
ins
sahf
nop
and
call
or
sub
dec
daa
ret
fbstp
sbb
in
cld
fld
jecxz
cdq
inc
mov
ins
xor
inc
xchg
stos
or
ja
loope
inc
inc
addr16
xor
aas
push
cdq
out
jmp
test
test
xor
fwait
(bad)
sub
ins
repz
xchg
pop
jmp
cmps
jp
aad
sbb
in
push
arpl
push
push
ret
xchg
or
xchg
in
fidiv
sub
sub
dec
mov
sub
loopne
xor
push
cld
retf
lds
clc
js
in
sub
inc
inc
jecxz
push
and
fs
inc
(bad)
and
push
imul
adc
jle
xchg
inc
jp
dec
pop
daa
cs
jns
cli
lock
lds
sbb
and
bound
dec
xchg
cmp
out
mov
and
fcmovnb
jb
mov
sub
push
shl
xor
xchg
out
jno
fimul
inc
rcr
push
mov
push
aad
xchg
fnstenv
jp
clc
sub
inc
mov
jae
stos
mov
push
pop
or
xchg
scas
mov
sbb
ret
add
adc
pop
dec
inc
mov
sbb
jb
shl
ror
mov
call
mov
sub
mov
xchg
mov
mov
std
push
repz
xchg
xchg
icebp
dec
cmp
pusha
bound
sub
fucomp
cwde
or
(bad)
in
jmp
xchg
mov
shr
cdq
sbb
add
js
pusha
mov
xchg
iret
dec
call
dec
sbb
mov
or
movs
mov
xchg
inc
inc
idiv
push
xor
sub
cmp
adc
outs
test
test
aas
sub
add
cmps
push
mov
das
nop
push
push
cmp
jge
push
retf
inc
mov
mov
les
pop
clc
test
addr16
inc
lds
repnz
jb
scas
inc
nop
adc
push
fwait
add
dec
cli
mov
cmp
loop
call
bound
mov
scas
lods
call
ss
test
mov
idiv
aad
add
xor
jne
shl
scas
and
mov
pop
outs
(bad)
clc
iret
loope
les
mov
rcr
sbb
xchg
cdq
mov
adc
call
cdq
into
cmp
or
pop
add
js
xchg
sub
push
xor
push
and
xchg
jae
lahf
and
sub
mov
adc
out
dec
push
retf
push
lahf
add
push
mov
inc
sbb
in
jle
es
dec
js
push
sbb
addr16
pop
cmp
push
sbb
mov
loope
lock
cmp
ds
(bad)
pop
mov
addr16
push
pop
pushf
cld
cmp
rol
sub
jo
retf
fwait
push
and
inc
mov
inc
jnp
icebp
xchg
pop
add
mov
mov
mov
fldenv
mov
iret
lea
inc
mov
rcl
sbb
cld
into
xchg
hlt
scas
rcl
inc
aam
xor
out
aad
(bad)
xchg
cmp
mov
icebp
or
sbb
test
cmps
pop
mov
or
clc
and
ret
push
test
or
mov
push
pop
push
je
sub
std
sbb
adc
ja
xchg
or
popf
lahf
outs
jge
stos
into
or
push
pop
(bad)
popa
repnz
adc
(bad)
push
and
fwait
mov
in
and
enter
xchg
push
stc
(bad)
out
ins
jmp
(bad)
adc
mov
jp
or
fwait
ins
pop
es
xchg
sub
jbe
sti
call
fabs
adc
add
int3
xor
(bad)
stc
push
jnp
sub
push
cmps
fistp
inc
xchg
ss
push
xlat
clc
cmp
add
cdq
not
adc
jne
or
adc
mov
icebp
icebp
pusha
xor
sahf
push
fstp
adc
movs
ins
out
mov
test
fisttp
stos
cmp
add
and
dec
push
test
es
rcr
pop
mov
nop
ins
pop
ss
jae
mov
push
adc
jle
retf
ja
jne
mov
fs
arpl
adc
test
xchg
call
test
lahf
add
fucomp
xchg
jbe
mov
push
loopne
inc
jae
shr
cmp
icebp
add
sbb
dec
mov
repz
mov
dec
mov
out
add
xchg
xlat
int
add
sub
pop
mov
int3
sahf
cmps
xchg
dec
jno
and
dec
test
out
repnz
imul
cmps
sti
mov
jno
add
inc
sub
fld1
mov
or
dec
retf
rcl
dec
xor
push
lods
sti
pop
aad
mov
je
clc
inc
cs
push
push
jmp
stc
dec
push
dec
sub
sub
mov
mul
(bad)
cmp
mov
js
inc
xchg
cmps
push
in
and
push
rcr
jge
xchg
jle
jno
jno
dec
jmp
xchg
sub
popa
mov
sbb
mov
gs
push
int3
adc
test
cmovs
or
and
jmp
movs
xchg
imul
mov
std
push
cld
cmps
shl
add
sub
dec
dec
mov
popf
pop
sbb
xor
cmp
mov
ret
pop
pop
mov
mov
(bad)
sub
dec
push
jl
push
pop
pop
aad
mov
xchg
push
imul
jmp
cld
scas
ins
mov
sub
pop
push
jl
mov
pop
ret
(bad)
ficomp
or
cmp
xchg
add
imul
fs
jne
add
out
lahf
sub
cld
enter
lods
add
or
mov
and
jmp
lock
rcr
(bad)
push
push
(bad)
mov
fs
(bad)
cmp
out
retf
fs
imul
into
shl
pop
mov
pop
mov
into
popa
cmp
out
jne
xchg
(bad)
rcr
or
jmp
pop
pop
arpl
pushf
jns
repnz
sbb
scas
inc
jmp
xchg
(bad)
fbstp
loop
mov
xchg
loop
rcl
mov
and
mov
xchg
pop
dec
dec
mov
fwait
aad
movs
push
jl
fcom
push
popf
cdq
out
mov
inc
sbb
sub
movs
and
pop
inc
jne
leave
fcom
pop
addr16
dec
sub
mov
xchg
cmp
add
jnp
jns
inc
adc
or
in
sbb
xchg
loopne
adc
lea
dec
add
pop
jo
out
sbb
das
fwait
retf
push
inc
pusha
repnz
cs
pop
imul
data16
(bad)
(bad)
and
xor
fstp
fwait
in
add
in
out
mov
ja
mov
xchg
lods
test
add
add
dec
push
inc
cmps
(bad)
dec
rcl
sbb
pop
das
mov
dec
sbb
mov
xchg
cli
nop
lock
jle
int3
in
cmps
sub
clc
push
jno
jge
ss
or
add
les
xor
jb
mov
and
add
or
fcomp
xchg
mov
push
jmp
int
pop
lea
push
hlt
or
push
mov
push
push
jl
stos
or
xchg
in
(bad)
xor
mov
mov
cmp
xor
or
fldcw
mov
aas
cmp
jno
std
sub
test
dec
add
jge
test
dec
fiadd
fs
add
xchg
ins
in
sahf
add
(bad)
xchg
mov
cmp
xor
mov
sub
imul
repnz
lock
mov
sub
push
push
and
xlat
push
and
in
xchg
les
mov
xor
xchg
sub
pop
mov
mov
cmp
aam
call
icebp
call
in
(bad)
mov
push
in
xchg
add
iret
push
lods
mov
fld
(bad)
lods
or
mov
gs
add
ret
jno
stos
(bad)
jp
adc
jo
adc
dec
xor
mov
cmp
pop
adc
cmp
les
adc
fild
or
cmp
shl
mov
xor
call
leave
push
repnz
push
push
pop
or
mov
out
hlt
test
cld
dec
shr
(bad)
fstp
pop
imul
push
sub
sbb
and
mov
push
mov
data16
ss
pop
lock
loopne
dec
mov
adc
leave
add
int
(bad)
mov
or
dec
test
add
int
cli
movs
rcl
sub
mov
jno
repz
add
shl
cwde
mov
mov
mov
movs
sbb
clc
cmps
fcomp
cwde
and
bound
and
push
sahf
or
xchg
mov
pop
fistp
test
xchg
mov
and
lock
cmc
lods
adc
sbb
and
sti
shr
pop
retf
xor
xor
stos
pop
xchg
in
add
or
dec
fadd
lahf
mov
in
int
cmp
cmp
xchg
fs
mov
xchg
pop
ret
scas
xchg
cmp
sar
mov
jle
pop
dec
or
scas
(bad)
add
cmp
cli
out
pop
daa
mov
push
adc
push
add
sbb
movs
outs
pop
pop
sub
pop
cmp
pop
div
xchg
push
mov
sub
fsub
(bad)
aam
mov
cwde
mov
pop
movs
xchg
sbb
iret
sub
jo
pop
jmp
adc
movs
in
cmp
aad
push
jge
call
gs
jle
mov
push
aaa
nop
mov
adc
push
push
dec
mov
in
and
sub
js
outs
add
pop
mov
jbe
add
shl
jns
dec
pop
cwde
lahf
and
inc
and
or
cmp
fild
sub
fnstenv
mov
pop
push
fadd
sbb
(bad)
push
icebp
mov
add
dec
pop
pop
xchg
and
outs
xchg
les
test
inc
xchg
jge
cmp
mov
ja
pop
jmp
mov
pushf
add
(bad)
loopne
or
enter
ss
in
scas
xlat
mov
sahf
aam
stos
sbb
ret
cmps
pop
sub
jmp
leave
stos
push
in
ins
jl
or
(bad)
js
mov
push
jmp
dec
jbe
cmc
mov
test
stos
sub
stc
and
aad
dec
adc
outs
xor
ins
cli
xor
push
rcl
jbe
xor
pop
mov
mov
clc
in
jl
fdiv
mov
xchg
fnstcw
push
out
adc
pop
movsx
(bad)
pavgw
movs
fbstp
cmp
push
and
(bad)
rcl
add
aaa
xchg
push
push
jp
push
pop
pop
or
pop
push
sahf
and
sub
jne
mov
(bad)
(bad)
or
cs
rcl
ins
(bad)
pop
sbb
fcomi
data16
jg
mov
outs
jno
add
cli
xchg
sub
add
and
xor
push
adc
mov
imul
leave
jno
jnp
ds
pop
in
cwde
pop
xchg
push
cmp
je
lock
mov
xchg
mov
int
push
inc
loope
bound
pop
mov
add
sub
frstor
cdq
lods
push
jnp
xor
fsubr
xchg
cmp
test
into
cmps
xchg
test
add
leave
pop
dec
(bad)
cld
cdq
jae
loopne
shl
(bad)
push
aam
push
sti
loopne
sub
or
and
out
cmp
push
or
rcl
mov
popf
cmp
jne
add
and
(bad)
sub
jmp
xchg
mov
(bad)
fnsave
inc
or
jmp
retf
std
jp
lea
fcmovu
and
cmp
aad
push
adc
into
cmp
(bad)
in
mov
ror
loop
or
push
inc
push
stc
(bad)
in
xor
push
es
push
cmps
and
pop
out
dec
xchg
adc
scas
push
or
mov
xor
dec
cli
cli
cld
and
ins
(bad)
(bad)
cld
xor
or
mov
push
lds
jmp
pop
push
dec
mov
xchg
out
adc
sbb
sti
loopne
xchg
push
les
jg
ret
test
jno
ror
(bad)
dec
cmc
or
fdivr
push
lods
popa
not
push
cmp
adc
xor
mov
xchg
fs
jbe
mov
cmp
retf
inc
(bad)
pop
mov
xchg
movs
push
(bad)
and
out
sahf
sub
pop
dec
sbb
push
sbb
je
sbb
out
nop
ins
pusha
sbb
mov
movs
cmp
push
inc
fbstp
or
xchg
cmp
scas
sbb
test
or
and
test
sbb
scas
cmps
push
pop
dec
pop
mov
pop
adc
shl
scas
cdq
jmp
movs
adc
arpl
dec
mov
ficomp
gs
scas
dec
sub
pop
clc
mov
outs
fs
mov
loopne
mov
push
cmc
mov
(bad)
dec
test
add
mov
movs
mov
dec
sbb
repz
xchg
xor
mov
popf
std
(bad)
push
ins
(bad)
sub
and
mov
push
xchg
gs
sbb
mov
jge
fsqrt
push
mov
enter
in
shr
cmp
repz
xor
mov
mov
and
push
xor
jb
imul
and
test
adc
and
push
lahf
out
dec
mov
ror
inc
xchg
and
fsubr
add
pop
and
sbb
test
push
pop
push
scas
addr16
out
and
in
sbb
jmp
push
pop
stc
or
sbb
loop
push
pop
dec
sub
je
and
je
sub
out
mov
test
repnz
inc
dec
iret
inc
and
xchg
mul
xchg
das
mov
in
mov
ins
sbb
mov
or
mov
mov
enter
dec
pusha
dec
stos
dec
shl
out
fisttp
je
bnd
xchg
xchg
mov
retf
mov
and
out
jle
fwait
popa
ret
xor
pop
pop
pop
inc
cdq
out
mov
das
sahf
or
int3
cmp
xchg
fisubr
mov
in
and
sub
and
js
mov
and
ins
imul
jg
retf
je
call
int3
cmp
and
pop
lds
push
cwde
cmp
jl
and
adc
fs
and
push
bound
sahf
mov
lea
ja
(bad)
fcomp
jbe
rcl
mov
push
xchg
stos
mov
add
mov
pop
icebp
mov
leave
jnp
test
icebp
jae
cld
adc
xor
mov
dec
cmp
cdq
cs
repz
adc
jge
fidivr
cmp
fs
push
inc
mov
pop
push
into
pop
jp
mov
pop
jl
pop
add
(bad)
and
imul
jno
shl
mov
je
imul
mov
jo
(bad)
shl
mov
xchg
movs
mov
xor
mov
loop
xchg
es
mov
fsubr
xchg
jae
loop
lock
push
add
jns
inc
cld
xlat
mov
mov
mov
push
adc
inc
imul
mov
jg
dec
scas
mov
idiv
sahf
mov
cmps
dec
sar
aad
mov
add
xor
ins
clc
pop
outs
js
lock
sbb
and
imul
adc
pop
fld
lahf
mov
mov
shl
jno
inc
pop
and
pushf
fst
stos
mov
adc
jb
xor
or
and
mov
mov
sar
pminsw
pusha
cmp
sub
inc
mov
sbb
mov
movs
fnsavew
mov
fmulp
mov
cs
mov
add
repnz
lea
fdivr
pop
adc
mov
(bad)
push
jl
jg
pop
dec
icebp
in
outs
lods
xchg
jmp
rcr
retf
cmp
and
inc
bound
pop
enter
mov
jg
adc
scas
push
ret
pop
push
pop
into
pop
dec
not
xlat
inc
lock
mov
push
test
sar
imul
(bad)
dec
je
xchg
aas
and
in
ins
inc
sub
jo
leave
loopne
and
inc
pop
je
jl
mov
ret
xchg
mov
shl
pop
mov
cmp
inc
mov
fsubp
push
jmp
popa
xchg
cmps
jns
out
out
ins
jmp
jb
test
stos
inc
lock
adc
pop
cmp
aas
repz
(bad)
adc
sbb
in
retf
inc
push
adc
loopne
cld
mov
sbb
cs
out
rcr
xor
cdq
or
add
in
adc
xor
mov
mov
xchg
fs
fistp
mov
cld
leave
jecxz
adc
pop
push
sti
(bad)
in
mov
xlat
test
xlat
pushf
jb
push
loope
lods
fadd
or
test
js
sub
mov
fisttp
push
out
cmp
icebp
push
xor
sub
adc
mov
add
mov
inc
jb
ins
outs
mov
mov
mov
jl
add
mov
jmp
sub
and
xor
dec
xchg
xlat
inc
ret
xor
sbb
(bad)
adc
push
repnz
test
cmps
neg
mov
lahf
adc
shl
out
push
loope
adc
cmps
gs
shr
sbb
mov
or
aam
sbb
lahf
mov
sbb
cmp
nop
out
in
retf
dec
adc
dec
fidivr
pop
int3
fcmovu
aaa
dec
cmps
(bad)
daa
in
arpl
cmp
popf
inc
jmp
cdq
pop
mov
sub
out
push
loopne
adc
imul
cdq
dec
bound
(bad)
movs
outs
sbb
fwait
cmp
stos
xchg
dec
scas
push
jnp
cmp
pop
in
jp
cmp
jb
sub
das
or
xor
pop
in
(bad)
iret
xchg
sub
mov
sub
push
push
dec
(bad)
dec
push
adc
mov
pop
push
mov
xchg
stos
enter
mov
dec
pop
sub
mov
(bad)
stos
pusha
ret
jmp
pop
push
stos
jns
xchg
jmp
add
enter
sub
or
in
pusha
jge
xchg
out
pop
lock
xor
scas
push
or
dec
push
clc
aad
loope
mov
inc
stc
fimul
setp
aas
out
fbld
cdq
bound
jnp
out
imul
mov
pusha
sbb
sbb
mov
dec
push
add
mov
jle
pop
out
mov
adc
xor
dec
pop
push
cs
mov
xor
add
aas
xlat
(bad)
cld
ss
frstor
fldenv
mov
cdq
xor
fcomp
pop
mov
xchg
push
fiadd
mov
mov
pop
(bad)
lahf
ja
xor
out
loopne
pop
cmp
pop
out
cmp
iret
nop
cdq
outs
mov
(bad)
pop
dec
dec
addr16
push
js
sub
mov
dec
outs
ins
inc
addr16
int3
les
mov
dec
sbb
(bad)
or
test
lahf
push
push
adc
cmp
ds
dec
loope
push
cmp
pop
mov
cmp
cs
xor
mov
int
daa
inc
pusha
test
inc
cmps
fidiv
movs
sti
mov
xor
mov
mov
sbb
mov
pop
sti
test
jle
push
imul
or
add
sub
push
adc
dec
pop
pop
sbb
pop
out
das
lahf
outs
sub
scas
fstp
mov
mov
push
rol
fmul
repnz
repz
inc
jmp
and
and
xchg
ins
and
push
ffreep
hlt
les
mov
push
and
scas
dec
xchg
and
mov
mov
popa
inc
inc
iret
mov
jno
retf
stos
in
jo
mov
mov
int
sbb
icebp
cdq
pop
outs
(bad)
in
fisttp
arpl
(bad)
jmp
call
in
and
lea
push
and
ror
jmp
inc
xchg
out
movs
push
pop
ins
cs
aam
push
ins
mov
sub
in
movs
push
js
lods
sub
jg
xchg
add
mov
push
ret
test
mov
cmp
push
push
popa
cmp
scas
and
ret
jne
aam
in
cmp
xor
jmp
mov
sbb
lea
out
jge
adc
mov
lea
ret
sbb
pop
sysexit
fmul
lock
xor
aaa
ja
not
cwde
nop
xlat
je
call
xchg
mov
into
cmp
leave
jne
cs
dec
bound
jge
adc
ret
add
call
and
dec
fmul
iret
add
scas
jge
call
inc
cmp
cli
pop
and
ficom
mov
pop
mov
retf
jne
push
mov
cmp
out
sbb
(bad)
int3
mov
xchg
sbb
and
xchg
fcom
sahf
enter
dec
push
adc
aas
xchg
xchg
in
adc
cmps
sbb
mov
int3
in
xor
outs
movs
ja
pop
retf
out
push
je
mov
retf
jb
enter
and
dec
jmp
add
leave
add
cwde
push
xor
pop
mov
inc
out
push
call
and
jecxz
lock
adc
call
lea
and
mov
outs
popf
jb
js
enter
mov
mov
movs
jbe
jmp
loope
imul
fst
aam
div
(bad)
out
fwait
ss
sub
sub
mov
ficom
fdiv
clts
ins
dec
sbb
scas
cmps
clc
xchg
mov
(bad)
fnstcw
lds
and
in
jecxz
adc
jbe
icebp
popa
scas
cmps
iret
daa
jge
loopne
push
out
mov
mov
iret
inc
mov
push
xor
fimul
cmp
lds
lock
mov
rcr
mov
test
std
and
adc
(bad)
test
out
mov
pop
scas
imul
cld
test
ds
pop
rcr
ja
push
adc
xchg
adc
aas
call
and
mov
sbb
movs
sub
cmc
sub
sbb
mov
or
push
mov
daa
frstpm(287
mov
mov
pop
arpl
in
push
test
inc
mov
lods
inc
fild
fsubr
dec
mov
sti
xchg
movs
jmp
cs
fst
es
into
mov
xor
sbb
adc
movs
cmp
leave
xor
data16
sbb
popf
push
or
inc
scas
mov
lods
out
xchg
mov
jbe
jmp
(bad)
cdq
inc
iret
sub
mov
mov
imul
enter
addr16
nop
fbld
jo
push
xchg
mov
loop
or
xor
sar
clc
test
mov
mov
cli
sbb
ror
mov
out
or
xchg
inc
inc
popf
sbb
test
iret
jmp
gs
clc
push
sysexit
xchg
pop
daa
cmp
dec
fild
dec
lahf
test
stos
(bad)
lea
out
(bad)
sub
out
sub
dec
add
or
fistp
sbb
fsub
cmps
jb
sti
out
sub
aaa
jno
sar
jmp
sbb
jne
je
rcl
int
fsubp
mov
jle
(bad)
cli
pop
mov
lock
daa
imul
(bad)
adc
mov
aad
gs
popa
arpl
adc
adc
add
mov
xchg
jmp
add
jo
push
lods
lock
clc
xchg
mov
cmc
push
xor
imul
hlt
ins
mov
lods
imul
data16
js
shr
fdiv
cmp
loopne
inc
aaa
scas
cmp
je
lds
dec
inc
sti
je
jmp
(bad)
xchg
mov
push
push
cmc
adc
xchg
push
arpl
adc
dec
icebp
adc
ds
addr16
add
enter
loopne
push
(bad)
icebp
or
xchg
outs
int
es
sbb
and
add
and
jb
jae
adc
pop
dec
and
mov
aaa
(bad)
fadd
paddq
(bad)
mov
repz
sbb
call
repnz
je
(bad)
cmc
fisttp
adc
cmc
sub
cs
xchg
mov
pusha
or
sub
and
xchg
or
adc
xor
or
jne
rcr
(bad)
mov
stc
jne
xlat
xor
push
outs
or
push
scas
or
and
shl
lods
mov
push
push
call
repnz
jecxz
xor
fs
mov
imul
addr16
add
or
lahf
add
mov
sub
dec
and
xor
jp
cmp
adc
je
pusha
ficomp
xchg
sbb
dec
mov
mov
(bad)
or
cld
xor
xor
jg
ja
inc
hlt
enter
ds
dec
cmp
inc
clc
dec
push
lods
adc
fild
adc
pop
into
push
inc
mov
test
(bad)
lods
or
jnp
movs
cmp
dec
sahf
mov
mov
mov
leave
imul
enter
iret
mov
loop
fwait
sbb
cmc
push
jp
adc
and
into
movs
pop
inc
mov
xchg
pop
pop
test
ss
dec
inc
aam
dec
mov
sub
add
sbb
jecxz
int
add
xor
cmc
das
jns
or
inc
in
or
popf
inc
xchg
popa
sbb
aas
mov
out
or
mov
mov
jle
push
ins
fadd
call
aad
outs
nop
outs
(bad)
retw
icebp
nop
lea
test
lahf
movs
pop
sub
sub
cmp
jp
and
lods
mov
cmc
pop
adc
xor
xor
add
(bad)
or
sbb
sbb
jge
sbb
sar
fcmovbe
mov
stos
stc
pop
sahf
jmp
inc
jmp
jne
(bad)
hlt
mov
lods
xor
das
ror
dec
(bad)
and
popf
mov
jge
and
push
test
jle
hlt
lahf
add
lahf
xor
hlt
out
mov
jg
cmp
jo
dec
lahf
(bad)
mov
jle
mov
jns
pop
xor
les
imul
loopne
inc
sbb
or
dec
mov
adc
jecxz
nop
cmps
and
test
out
mov
sbb
in
ss
into
std
xchg
(bad)
popa
jp
push
jnp
dec
iret
neg
pop
test
mov
fsub
test
(bad)
int3
mov
in
lods
retf
fild
ror
mov
xchg
icebp
jg
cld
mov
int3
scas
mov
mov
mov
xor
adc
mov
dec
push
adc
mov
dec
sar
pop
mov
pop
and
mov
xchg
pop
sub
shl
std
pop
jp
pop
rcr
cmp
or
les
aaa
xor
sti
mov
push
mov
jecxz
mov
or
sahf
push
dec
sub
inc
cmp
pop
dec
pop
xor
int
iret
cmp
mov
shr
(bad)
jmp
(bad)
and
leave
xchg
add
lods
add
mov
add
pop
repz
aam
pop
jecxz
int3
inc
rcr
dec
jge
lods
cmp
and
jbe
xor
scas
pop
jmp
adc
mov
leave
inc
and
jae
je
lahf
inc
xchg
mov
ror
cmps
test
std
js
xor
pop
ror
jb
sub
jbe
retf
clc
xchg
add
stos
or
sub
or
xchg
in
lods
not
shl
sbb
or
retf
mov
adc
inc
les
jbe
xchg
aaa
and
push
(bad)
cmp
jecxz
add
push
cmc
sub
mov
mov
retf
mov
scas
pusha
sbb
adc
mov
out
inc
es
cmp
(bad)
jae
sub
push
out
lods
pop
xchg
int3
mov
test
adc
jne
cmp
mov
xor
xchg
loop
push
push
mov
imul
aam
sbb
push
mov
push
sbb
das
push
push
push
add
inc
cmp
shl
dec
mov
xchg
push
enter
mov
aas
call
pop
outs
pop
das
(bad)
repz
call
scas
mov
cmps
outs
aad
or
mov
adc
idiv
adc
or
adc
mov
cld
shl
dec
mov
sub
aaa
jno
adc
sub
add
nop
mov
std
dec
inc
xchg
sub
mov
push
test
ret
mov
das
push
shr
(bad)
push
imul
push
out
je
dec
inc
popf
inc
sbb
pop
out
(bad)
sbb
jbe
rcr
jl
pop
jecxz
out
mov
xor
add
dec
jae
mov
out
out
addr16
and
out
or
repz
shl
xchg
pop
jmp
pop
mov
aad
dec
dec
pop
jg
ror
xchg
xchg
pop
or
jmp
adc
pop
cmp
mov
inc
mov
cmc
jns
shr
dec
jmp
mov
mov
push
shr
pop
adc
je
lds
pcmpgtb
(bad)
xor
ins
push
mov
sar
sub
pop
sub
cdq
cmp
int3
popa
repnz
shl
xor
and
and
popf
mov
adc
aam
mov
xchg
(bad)
mov
arpl
in
out
jne
cs
cmp
jns
jb
mov
mov
dec
and
lea
out
scas
fcmovbe
cmp
idiv
fsub
aas
xchg
mov
mov
push
cmps
push
nop
mov
je
ror
and
outs
push
dec
dec
and
sbb
inc
std
mov
xor
jmp
test
xchg
mov
movs
test
shr
stos
push
aas
test
mov
out
jnp
outs
test
mov
xchg
jle
stc
mov
repnz
imul
inc
add
gs
add
aas
push
xchg
inc
and
movs
enter
mov
pop
cmp
and
jmp
mov
sub
lods
push
sub
sbb
adc
push
add
dec
loop
xor
add
lods
call
sub
pop
fmul
pop
jnp
jmp
mov
xchg
outs
xchg
fs
pusha
xchg
mov
and
xchg
cmp
dec
jo
or
fidiv
rcr
pop
out
je
jo
mov
mov
mov
js
dec
push
in
ret
xor
dec
sub
fs
shr
xor
mov
arpl
mov
in
mov
in
xor
sbb
xor
mov
mov
imul
add
ds
bnd
out
pop
stc
(bad)
imul
shr
sub
xlat
jmp
mov
in
xchg
pop
xchg
inc
stos
and
(bad)
and
mov
pusha
mov
jp
mov
outs
xchg
and
and
push
cli
and
stc
dec
movs
fucom
ret
mov
jl
arpl
push
cwde
fcos
js
repnz
or
or
sbb
push
(bad)
jns
sbb
xchg
or
sbb
xor
push
pop
inc
icebp
add
xor
lea
xor
push
jae
(bad)
popa
mov
aaa
cmp
enter
out
mov
loope
outs
lock
pop
leave
lods
xchg
jl
xchg
or
cld
retf
mov
scas
push
ins
jecxz
aaa
xor
push
or
jl
movs
je
or
jae
add
out
ret
inc
push
or
xor
jg
mov
jg
dec
xor
outs
xor
sub
aas
pop
sbb
mov
push
adc
adc
push
hlt
and
(bad)
in
fmul
inc
jmp
shl
sbb
push
pop
mov
and
inc
jecxz
dec
push
push
inc
cwde
jo
stc
fisttp
mov
adc
sar
pop
xchg
sar
sbb
xor
cmp
and
xchg
cmps
jl
and
xchg
xchg
push
stc
cmps
xlat
sbb
movs
bound
enter
(bad)
fadd
pop
test
cmp
jns
jns
popf
icebp
adc
aad
out
mov
inc
inc
xor
cmps
out
add
pop
int
xor
aad
in
das
dec
jno
mov
out
mov
add
sahf
sub
sub
and
ja
scas
or
push
mov
(bad)
mov
mov
pop
dec
push
adc
lds
jmp
cmp
cdq
sub
into
jl
(bad)
or
xchg
jno
(bad)
pop
xchg
push
(bad)
push
popf
loopne
ins
xor
test
adc
movs
bound
(bad)
in
xchg
clc
jle
push
ret
ds
clc
outs
das
adc
and
sub
jo
int3
sub
jmp
cmp
aaa
stc
repz
xor
mov
popa
sbb
pop
xchg
(bad)
ss
push
push
mov
test
jg
sbb
cmp
jae
adc
cmp
mov
cli
gs
jecxz
sahf
xor
scas
movs
push
loope
inc
enter
ja
push
lods
xor
cdq
push
and
and
jno
jb
stos
mov
enter
rcr
aam
in
xchg
fldcw
cdq
leave
pushf
jecxz
mov
mov
mov
adc
mov
mov
sub
ins
inc
ror
jge
out
pop
cmp
push
dec
lods
pushf
jns
sbb
test
ja
adc
mov
push
lods
xor
ret
jne
daa
push
xor
mov
xchg
cdq
pusha
icebp
inc
pop
jnp
ror
jg
popf
jae
dec
pop
jno
jae
cld
xor
inc
enter
enter
loopne
imul
jle
pop
test
repz
fs
jmp
sub
loopne
push
pop
sub
lods
pushf
ret
add
sub
lods
lds
call
in
lods
mov
lock
mov
retf
retf
inc
rol
xchg
push
into
(bad)
fsub
add
sti
lahf
adc
add
jg
cmp
je
jns
mov
jne
cmps
mov
clc
pusha
stos
cmp
mov
enter
adc
test
mov
mov
jmp
std
scas
mul
jmp
movs
mov
add
and
enter
or
and
ins
into
or
pop
jmp
xor
lahf
jle
adc
jp
xchg
out
xor
sub
idiv
addr16
iret
(bad)
and
pop
adc
loope
shl
mov
iret
pop
mov
sub
sbb
inc
cdq
push
cmp
push
imul
lahf
sub
add
inc
test
and
lock
daa
xor
mov
push
push
push
xor
aaa
retf
pusha
add
stos
repnz
aad
xchg
mov
ins
cs
inc
(bad)
and
cs
sub
lods
ins
fbstp
clc
add
cmps
popa
leave
mov
and
and
sbb
js
mov
jno
lock
mov
fisttp
xchg
(bad)
cmp
popf
iret
lods
(bad)
movs
daa
sbb
cmps
push
rcr
pop
fisub
enter
mov
mov
(bad)
cwde
shl
jecxz
sub
pop
xor
lock
jbe
aaa
stos
dec
or
push
dec
scas
mov
and
adc
shl
push
test
call
mov
mov
add
sub
iret
xchg
pop
sub
adc
dec
shl
dec
xchg
fidiv
inc
aaa
int
mov
mov
fisub
ret
mov
(bad)
pop
inc
sahf
mov
out
adc
inc
push
pop
popf
xor
jge
adc
in
xor
retf
(bad)
pop
adc
jmp
ds
dec
dec
loopne
(bad)
sub
repnz
push
(bad)
mov
(bad)
icebp
je
es
stos
cmps
je
je
dec
adc
pop
sub
adc
mov
or
xchg
xor
push
hlt
add
sti
cmp
push
jl
push
dec
or
xchg
lods
outs
inc
ds
add
in
mov
cmps
mov
add
mov
cmp
inc
jmp
in
iret
lea
leave
push
jo
scas
xor
and
cmp
inc
mov
jns
pop
stc
sub
fisttp
loope
pop
jmp
gs
cmp
imul
adc
add
outs
pop
push
loop
cmp
sub
jnp
or
jo
in
stos
adc
loop
mov
data16
xchg
lahf
in
jge
inc
outs
sbb
jp
in
mov
in
inc
outs
repnz
mov
ja
jmp
dec
ret
mov
sbb
jp
repz
out
and
jg
ss
loope
fs
movs
pop
push
dec
mov
sbb
jge
outs
addr16
jecxz
arpl
sbb
aaa
adc
pop
xor
std
sub
(bad)
xchg
push
dec
pop
add
shl
xor
pop
outs
cli
fisttp
mov
ret
sub
out
lea
cld
gs
mov
nop
ins
xor
mov
arpl
jno
adc
in
jbe
fbld
cmps
sub
push
int3
std
mov
sbb
inc
inc
xchg
cmp
add
addr16
pop
js
fsubr
mov
or
or
sub
push
jl
jns
mov
dec
scas
ds
call
sub
movs
xor
mov
dec
dec
sahf
(bad)
nop
sub
lock
stc
inc
shl
pop
fstp
or
cmp
mov
xor
push
(bad)
jb
inc
push
js
add
mov
jl
pop
fadd
fsubr
enter
xlat
fisub
pop
adc
cwde
mov
outs
mov
cmc
lea
mov
jp
jae
ss
out
in
inc
push
push
dec
movs
ja
dec
adc
ficom
dec
(bad)
push
stos
ret
int
lahf
mov
jmp
(bad)
dec
push
paddusw
and
fadd
call
sar
sahf
xchg
mov
cmps
imul
leave
jmp
je
in
rol
out
fadd
jge
mov
lods
dec
js
cmp
pop
retf
inc
xor
push
je
std
mov
cld
cmp
dec
inc
push
jecxz
jle
pop
lods
jmp
cmp
stos
cld
in
in
push
mov
push
popa
int3
pop
lods
ret
inc
pop
mov
loopne
mov
loopne
inc
(bad)
ins
push
popf
loope
out
push
aaa
push
adc
(bad)
cwde
mov
cmp
and
adc
scas
adc
sub
mov
cli
cmp
test
sahf
xchg
mov
jae
scas
push
pop
and
cmp
inc
ror
mov
pop
test
cmp
sbb
fwait
add
sub
jb
loop
xlat
arpl
push
or
pop
sub
inc
cdq
mov
idiv
pop
adc
push
(bad)
sti
jmp
outs
scas
popf
jae
(bad)
iret
push
ins
xor
xor
test
push
ficom
xor
xchg
fs
fsub
loopne
ins
neg
test
jecxz
add
xor
push
jb
loope
test
out
hlt
add
fild
stc
call
jne
inc
inc
sbb
sti
stos
fist
outs
xor
push
sub
sub
xchg
push
or
sub
cs
cwde
out
outs
mov
aaa
xchg
fsubr
mov
scas
cwde
dec
js
mov
jmp
dec
sub
dec
pop
jl
xor
push
inc
std
out
pop
jb
dec
lea
cmp
add
cli
xchg
ret
cmps
or
stos
test
push
cmpxchg
jmp
push
clc
cmps
fimul
cmp
inc
or
xchg
and
mov
nop
push
pushf
gs
jmp
inc
pop
in
je
sub
and
sub
jns
mov
out
xchg
(bad)
out
mov
or
or
gs
sbb
jno
push
scas
(bad)
fdivrp
push
add
(bad)
call
sub
scas
mov
hlt
(bad)
sbb
inc
xor
push
std
inc
and
inc
into
loopne
pop
cmp
jne
fstp
not
hlt
ret
pop
jmp
fiadd
lea
sub
mov
mov
inc
push
mov
gs
xchg
sbb
fild
xor
(bad)
scas
nop
sar
jecxz
xor
and
dec
outs
or
fistp
dec
mov
shl
pop
stos
add
and
lea
ror
stos
xor
push
dec
out
loop
jecxz
repz
fist
out
sub
adc
jb
scas
xor
xlat
aaa
clc
cmps
sub
pushf
test
mov
adc
sub
and
ror
xor
jp
mov
sub
sub
dec
cmps
sbb
in
not
and
fcom
xchg
scas
popf
loopne
repz
pusha
(bad)
lahf
pop
ftst
fidivr
data16
fcomi
int
sub
xor
scas
push
cmp
test
lahf
mov
or
(bad)
and
jb
stc
ins
test
jl
or
jle
movs
mov
dec
lds
fmul
popf
dec
test
les
and
sbb
adc
(bad)
mov
adc
sbb
xchg
and
into
(bad)
push
inc
jbe
lock
xchg
hlt
ret
imul
dec
call
mov
add
push
fcomp
outs
adc
test
and
(bad)
xor
or
icebp
int
inc
and
mov
inc
and
mov
pand
mov
ss
mov
or
mov
(bad)
cdq
cmp
std
icebp
ins
lods
cmps
ret
dec
mov
inc
(bad)
imul
mov
push
fmul
mov
xchg
out
lea
or
xor
in
sub
lods
sub
fs
push
iret
outs
add
pop
pusha
mov
movs
stos
push
or
push
scas
shr
dec
imul
or
addr16
push
mov
shl
jmp
cld
mov
sbb
ins
imul
(bad)
cli
test
scas
dec
jle
out
xchg
and
mov
scas
jmp
sub
dec
test
mov
mov
pop
sub
loop
cmp
and
shl
out
cmp
ja
int3
inc
pop
pop
jnp
idiv
jmp
pushf
scas
mov
pop
cmp
fdiv
mov
sbb
(bad)
cmp
inc
loope
sbb
int
cmp
mov
fisttp
inc
sbb
fadd
push
in
or
xor
mov
and
loop
cmp
sbb
xor
xor
xchg
scas
pop
dec
sbb
add
movs
dec
es
push
clc
sbb
mov
rol
sbb
adc
loope
sub
dec
push
mov
mov
imul
adc
mov
push
add
aaa
ins
and
jmp
data16
shl
adc
ss
xchg
add
pop
mov
push
or
xor
aas
stos
jle
ret
jmp
call
rcr
stc
adc
(bad)
cmc
fild
retf
dec
clc
daa
test
pop
mov
int3
shl
fst
mov
into
mov
and
jmp
lods
test
adc
ror
sbb
sbb
dec
ds
shl
push
ret
cwde
xchg
out
sahf
cmp
mov
ss
je
enter
cld
sub
sbb
sbb
add
call
out
ficom
cld
cli
ja
mov
cli
mov
adc
pop
fwait
pop
push
repz
test
retf
add
adc
and
xor
pop
adc
in
cmps
cmp
cmp
mov
fild
pusha
(bad)
(bad)
push
inc
pop
in
xor
out
fild
jne
loopne
sbb
inc
push
xor
test
mov
fnsave
add
mov
or
imul
fdivr
xchg
jae
dec
fsqrt
mov
add
sbb
inc
outs
enter
outs
int3
sahf
scas
or
adc
outs
fdiv
pop
cmp
test
scas
inc
fwait
and
shl
mov
jecxz
std
mov
rol
push
mov
test
lea
retf
cmp
rol
inc
mov
jecxz
daa
pop
dec
shl
xchg
std
add
jo
mov
inc
cmp
ins
mov
loopne
retf
pop
and
adc
push
call
mov
mov
adc
push
cli
lock
arpl
or
std
int3
sub
cmps
push
mov
imul
cmp
inc
cmps
jo
inc
(bad)
mov
mov
mov
push
jmp
sub
mov
pop
mov
mov
ret
push
xor
push
leave
lahf
and
and
test
xor
pop
clc
(bad)
sbb
xor
xchg
outs
es
xchg
sbb
xchg
call
add
cld
push
stc
arpl
add
or
gs
pop
pop
inc
test
sub
adc
xchg
fstp
fistp
inc
add
inc
push
mov
inc
push
call
pop
xchg
jb
push
cs
xchg
or
hlt
in
into
aas
mov
test
xchg
jb
cmp
das
or
push
sub
sbb
cmps
inc
neg
retf
test
jno
jge
call
pop
push
or
push
cwde
add
outs
test
aad
adc
enter
mov
imul
in
xor
repnz
(bad)
mov
ins
imul
rol
fimul
inc
push
movs
ret
cmp
adc
(bad)
out
aas
dec
sbb
(bad)
sbb
xor
push
bound
mov
call
(bad)
sub
inc
pushf
fwait
loopne
dec
inc
jne
daa
iret
jmp
pop
cmps
cmps
pop
jmp
mov
inc
adc
push
rcr
out
adc
ja
xor
js
or
dec
out
call
std
xchg
push
mov
cld
in
arpl
arpl
retf
mov
pop
popa
leave
fistp
or
cmps
stos
ss
lock
out
loope
call
push
add
arpl
lods
and
adc
popf
cmp
dec
arpl
mov
aaa
cmc
not
cli
stos
mov
jg
mov
xor
fcmovne
jmp
lods
ds
adc
mov
pop
aaa
test
jecxz
mov
pusha
hlt
push
adc
pop
or
xor
nop
jmp
stos
mov
or
jns
lods
xchg
dec
lods
neg
mov
addr16
retf
ins
dec
push
cmp
push
pop
mov
sbb
scas
std
pop
adc
stos
xchg
mov
xchg
adc
add
in
call
fild
(bad)
push
arpl
xlat
jmp
pop
push
mov
daa
jmp
or
mov
sub
cmp
fwait
or
in
add
add
or
test
jo
mov
call
ffreep
jnp
scas
push
repz
out
int3
mov
push
jmp
inc
push
out
ins
push
push
xor
mov
push
(bad)
pushf
arpl
ins
adc
add
loope
ja
ja
jne
jnp
addr16
dec
cwde
cli
pop
fidivr
ret
jae
inc
sub
popf
out
lods
jnp
sbb
push
out
xor
(bad)
mov
(bad)
sub
mov
loope
sar
jbe
js
xchg
outs
popa
scas
das
inc
outs
xor
mov
xchg
outs
leave
fwait
jns
add
dec
mov
shl
stos
pusha
les
shr
jae
sbb
mov
in
mov
aam
hlt
into
cmp
popf
mov
hlt
stos
xchg
sub
stc
and
call
retf
aas
xchg
cmps
inc
das
popf
rcl
les
cmc
mov
div
mov
cmps
push
aad
(bad)
imul
xor
add
lock
push
xchg
push
pop
inc
lods
outs
add
mov
xlat
or
push
out
loop
adc
das
push
cdq
sahf
add
add
and
dec
lods
out
push
mov
dec
sbb
ret
rcl
adc
adc
mov
les
mov
iret
mov
mov
mov
fs
mov
sahf
cmp
and
mov
je
xor
stos
mov
aad
arpl
popa
push
call
push
and
dec
rol
push
sahf
test
jp
xor
and
ficomp
loop
jmp
dec
sbb
mov
lea
xchg
add
cwde
dec
pop
push
sub
ins
sub
sub
cmp
mov
test
mov
outs
lds
or
sub
pop
pop
imul
jbe
into
cmp
mov
mov
sub
inc
mov
xchg
push
or
imul
or
sbb
shr
imul
xchg
xor
sbb
mov
pop
sub
test
add
fimul
push
aam
ins
adc
xchg
mov
rcl
js
jmp
jmp
icebp
fld
sbb
mov
pop
lods
test
pop
aam
add
stos
out
inc
arpl
in
clc
xchg
lahf
xor
je
sub
lods
int
pop
lods
rcr
or
(bad)
loop
adc
out
fwait
test
out
test
std
test
ror
out
aad
js
into
loopne
mov
imul
mov
sbb
enter
(bad)
retf
xlat
fld
sahf
mov
jmp
rol
int3
sbb
ins
fwait
inc
ds
mov
aas
pop
add
xchg
cmp
and
or
addr16
mov
sub
jmp
cdq
mov
push
mov
call
xor
inc
out
(bad)
or
push
push
xlat
ds
(bad)
sbb
mov
jle
dec
aad
shr
cmc
enter
inc
gs
dec
push
adc
data16
leave
aad
xchg
mov
std
cs
xor
mov
add
aam
loopne
sub
test
rcr
rcl
push
dec
stos
jno
add
lds
mov
jae
xor
sub
or
out
int3
ja
jnp
pop
xchg
aas
(bad)
pop
xor
fwait
aas
jnp
push
or
sub
jbe
inc
jp
push
mov
stos
adc
out
mov
pop
mov
and
xchg
sti
stos
mov
xor
in
loopne
movs
adc
add
(bad)
test
xor
retf
or
(bad)
jbe
dec
pusha
test
out
pop
cld
cmp
cmp
out
lods
stos
jmp
mov
add
in
cmp
sbb
retf
mov
jo
lea
mov
push
into
mov
push
in
test
imul
ins
ret
addr16
sbb
adc
add
dec
std
retf
xchg
push
adc
mov
cmp
xor
push
enter
mov
cmp
in
fadd
jge
inc
ss
mov
cwde
and
adc
std
mov
out
mov
fldenv
mov
mov
(bad)
dec
cli
or
in
push
adc
or
cmp
push
lods
(bad)
out
jg
mov
sub
mov
adc
das
and
and
out
sbb
mov
out
jnp
add
pop
test
pushf
dec
cwde
mov
fwait
adc
cmc
rcr
popf
outs
push
cmps
xor
mov
cmp
sbb
repnz
pop
ret
mov
jg
das
adc
iret
test
adc
push
repnz
aas
xchg
movs
mov
and
stos
pop
test
(bad)
add
mov
daa
adc
add
fimul
sbb
xchg
int
dec
cmp
inc
add
cmp
mov
adc
xchg
rcl
fwait
ja
jle
loope
retf
test
int3
and
inc
je
pop
push
inc
cld
or
movs
test
in
fcomp
enter
push
mov
dec
dec
and
mul
push
fwait
in
lock
aas
cld
mov
sub
sti
xchg
test
dec
mov
xor
xchg
movs
jne
in
fwait
sbb
dec
pop
inc
stc
or
or
jo
sbb
jne
jne
cmp
jbe
ficomp
sbb
aas
fbld
jl
dec
jecxz
mov
mov
imul
test
adc
mov
jb
test
lea
loopne
stos
lods
lahf
xor
out
cmp
call
adc
lea
popa
sti
or
sbb
shl
test
ds
das
mov
inc
mov
cs
push
mov
sbb
jno
imul
xchg
jnp
dec
pop
in
pxor
sbb
mov
mov
mov
and
cld
stc
cmp
pusha
jl
loopne
fnstcw
pop
out
sbb
sub
call
lods
sub
cmp
pmaddwd
cmps
jb
mov
aas
(bad)
adc
cmp
add
push
and
in
ja
cmp
sti
idiv
fidivr
push
cmp
scas
fldlg2
fisttp
mov
add
push
cmc
dec
jp
sbb
xchg
lea
out
arpl
mov
aam
jg
ins
pop
daa
adc
sbb
arpl
ins
adc
cmp
imul
pop
fistp
je
adc
mov
mov
sub
ror
xchg
pop
push
clc
sbb
mov
mov
or
ret
sub
mov
test
fsub
sub
mov
sahf
arpl
call
test
add
ret
stos
cmp
loope
in
jne
sbb
mov
dec
call
leave
sbb
mov
xor
cmp
add
sbb
ins
mov
aad
or
mov
arpl
push
jmp
adc
out
dec
sahf
sub
mov
mov
or
sbb
mov
jp
jnp
dec
jecxz
or
xchg
push
loope
retf
cli
inc
and
jb
pop
push
sbb
add
jmp
adc
mov
push
jnp
mov
stos
mov
fcmovu
into
loope
aad
cmp
sub
jmp
mov
(bad)
sbb
pop
sahf
jnp
adc
outs
jmp
out
adc
jns
xchg
shr
lods
and
jg
pop
lahf
pop
cmp
loopne
(bad)
mov
call
and
addr16
dec
xchg
enter
imul
mov
sbb
mov
movs
cmp
add
out
(bad)
dec
gs
cmc
(bad)
pop
out
sti
ret
sahf
data16
fst
fistp
mov
out
xor
mov
or
test
aas
aad
xor
sub
fmul
aas
xlat
pusha
adc
xor
sbb
jae
xor
int
rol
retf
aam
xchg
jae
push
pusha
inc
xor
push
shr
xchg
ins
cmp
sbb
in
jmp
mov
add
pop
daa
xor
repnz
pop
jmp
inc
inc
mov
push
xchg
loop
pushf
add
push
add
sahf
int
inc
movs
xchg
and
sub
in
ss
mov
mov
fwait
iret
dec
adc
or
jge
dec
add
mov
pop
cli
(bad)
fld
or
gs
pop
mov
xchg
(bad)
das
push
sub
pop
push
inc
dec
pop
xchg
std
stos
adc
add
test
jnp
pusha
push
ror
shl
jmp
push
ret
aaa
cmps
adc
push
sar
clc
mov
outs
hlt
dec
jns
rdpmc
sar
jb
stos
clc
shl
ss
push
in
data16
or
shl
or
xchg
pusha
movs
jmp
mov
cmp
xchg
add
inc
xchg
dec
inc
(bad)
xchg
sbb
shr
ins
mov
sbb
or
out
js
sbb
dec
pushf
xchg
cdq
mov
pop
adc
adc
cli
fwait
jnp
mov
in
ret
div
(bad)
retf
ret
inc
jmp
jp
inc
lods
jmp
inc
inc
test
popf
dec
mov
(bad)
fiadd
test
icebp
pop
xchg
jmp
jno
aam
pop
enter
ss
xor
dec
clc
test
xchg
out
sub
adc
rcl
in
push
or
xor
or
push
cmp
mov
dec
pushf
cld
cmp
scas
mov
push
inc
lea
std
ret
pop
mov
mov
add
jno
mov
test
stos
inc
mov
repz
ja
ins
xlat
push
or
xor
aaa
add
mov
push
lock
xchg
mov
pop
push
sar
pop
lods
xor
std
pop
inc
aad
add
fnstsw
cwde
adc
add
pushf
outs
test
push
sub
xchg
aas
mov
cmps
shl
mov
sub
inc
sahf
xor
imul
push
sbb
pop
dec
and
retf
jg
mov
stos
pop
mov
fisttp
fld
(bad)
aam
scas
push
fsub
mov
adc
jbe
bound
repnz
xor
lock
xor
ds
popf
add
push
imul
add
cld
pop
add
mov
inc
(bad)
add
push
xchg
sti
arpl
lea
or
mov
sbb
pop
sub
xor
das
test
push
push
or
call
stos
dec
or
aas
cmp
int3
jnp
xchg
inc
icebp
mov
jae
jecxz
repz
div
and
adc
outs
sbb
push
(bad)
sub
sbb
cdq
ror
mov
inc
test
std
cld
pop
cwde
pop
in
aam
cmc
push
or
jg
imul
neg
icebp
or
pop
pop
daa
cmps
lea
add
lea
out
sub
push
or
movs
pop
and
addr16
cmp
cmp
mov
xchg
aaa
mov
cmp
jmp
aas
pusha
and
mov
sub
add
mov
lods
inc
add
mov
inc
(bad)
outs
xor
xor
mov
xchg
xchg
jno
rcr
ins
jecxz
jmp
push
xchg
xchg
xchg
out
add
xchg
imul
std
stos
jne
jecxz
xor
add
movs
pop
dec
arpl
xchg
sbb
rol
adc
cmp
xor
xor
aaa
or
add
ror
and
xlat
xor
aad
fld
out
cmp
mov
inc
cs
jecxz
mov
cmp
mov
stos
ss
lds
aas
push
repnz
jns
(bad)
jp
inc
pop
(bad)
mov
xor
inc
mov
(bad)
lods
int
imul
and
clc
retf
or
add
adc
or
jb
adc
push
push
inc
ss
xor
ds
not
adc
addr16
dec
into
adc
into
js
adc
jge
add
and
mov
cmps
xor
mov
push
or
sti
shl
aam
cmp
or
lds
push
rcl
adc
mov
std
aas
ror
bswap
jmp
mov
xchg
(bad)
aam
sahf
add
xchg
xlat
cmp
(bad)
push
mov
scas
xor
xor
adc
xor
mov
ja
test
ret
adc
dec
xor
in
stc
std
fcmovu
lods
ins
fs
fstp
jp
mov
je
ins
adc
inc
(bad)
and
cmp
add
mov
dec
sub
add
in
jl
jp
pop
pop
dec
std
retf
mov
shl
jmp
dec
outs
inc
movs
fiadd
loopne
lock
sbb
int3
outs
fs
cld
sub
xlat
js
lds
mov
mov
push
fcomp
lods
mov
push
enter
sbb
rol
fmul
test
add
lods
xor
dec
fmul
aas
push
sbb
pop
and
into
js
sbb
adc
cmp
push
or
call
push
and
lods
loope
pop
lods
in
cwde
das
fwait
cmp
aad
jg
imul
repnz
scas
sbb
inc
mov
fwait
mov
cmp
loop
gs
in
jecxz
mov
pop
outs
popa
and
inc
xor
cmp
jns
ret
cmp
adc
mov
or
ins
mov
push
mov
arpl
stos
mov
(bad)
mov
sahf
stos
std
retf
xchg
inc
xchg
push
jno
xchg
lock
push
push
dec
adc
jmp
pop
(bad)
sub
mov
out
fs
lods
cmc
mov
jp
stos
icebp
movs
pusha
(bad)
scas
jbe
and
out
into
xor
or
lds
dec
add
in
xor
mov
push
or
mov
data16
mov
cmps
fwait
lods
out
popf
rcr
cmps
mov
arpl
jno
loop
pop
bndldx
jmp
mov
mov
fisttp
xor
enter
cmp
pop
dec
hlt
(bad)
sub
nop
push
xadd
ror
xchg
or
add
loopne
test
lahf
pushf
retf
cdq
ficom
push
stc
push
rcl
ds
out
mov
mov
push
jb
je
push
mov
push
jne
jle
or
mov
sub
pop
mov
cld
jnp
xor
scas
adc
sbb
(bad)
jo
or
stc
pop
aad
mov
loope
pop
push
cli
and
dec
jl
xchg
scas
xchg
ficomp
cmp
add
sub
or
ds
in
inc
not
int3
push
xlat
imul
pop
xor
shl
mov
not
or
(bad)
adc
loop
dec
mov
mov
adc
xchg
std
or
pop
outs
repnz
pop
in
inc
push
xchg
and
lock
lahf
(bad)
adc
xchg
clc
or
stos
mov
mov
sub
jecxz
inc
scas
push
mov
cmp
cmc
lea
out
cs
and
mov
outs
ror
out
fmul
sti
sbb
fild
inc
xor
push
jge
cmps
scas
jae
gs
mov
lahf
aad
inc
sub
sub
inc
sub
push
dec
adc
int
in
ins
push
popa
(bad)
jb
stos
inc
pop
cmp
out
mov
jmp
fmul
test
push
ins
(bad)
adc
jb
jle
push
retf
or
xchg
xchg
loop
outs
mov
imul
in
int
pop
push
stos
mov
lods
pop
neg
jb
sbb
jo
cmp
sub
mov
jae
mov
fisubr
into
ins
scas
add
aam
inc
adc
test
call
test
leave
mov
sbb
sbb
add
dec
cmp
cli
inc
rcl
ss
and
sar
loopne
daa
push
jl
out
stos
int
pop
loop
xchg
movs
mov
movs
es
pop
adc
out
mov
xor
and
push
add
lods
enter
xchg
pop
dec
jnp
stos
xchg
les
(bad)
lahf
aam
adc
push
cmp
in
jecxz
bound
ss
std
and
or
mov
rcl
repnz
or
aaa
pinsrw
cmp
lahf
outs
stc
ja
dec
push
movs
in
das
fisub
repnz
(bad)
cli
xchg
cli
cmps
add
sti
pop
retf
push
fimul
retf
test
inc
mov
icebp
movs
dec
outs
inc
in
and
pushf
popf
pop
mov
loop
addr16
jne
les
mov
jmp
xchg
popf
fnsave
xor
nop
in
stc
ds
nop
push
fild
mov
int3
cmp
jmp
rcr
jp
div
sbb
clc
mov
repnz
mov
in
pop
jae
mov
jecxz
pusha
mov
ja
int
icebp
rcl
clc
icebp
sbb
out
push
dec
sti
dec
inc
call
pop
enter
loopne
mov
lods
fdivr
stc
pusha
mov
in
cmp
dec
pop
mov
add
fsubr
repnz
ss
sti
repnz
int3
cmove
xor
add
mov
test
jbe
test
push
dec
mov
shl
popf
mov
ror
les
and
pop
arpl
dec
jecxz
mov
sahf
or
fld
sub
pushf
or
jno
shl
sub
lods
add
cwde
xchg
movs
add
imul
xchg
in
xchg
leave
add
pop
or
pop
cmp
cli
rcr
scas
out
(bad)
dec
test
test
stc
xchg
mov
and
dec
jb
sbb
or
inc
xor
or
xor
jp
sbb
jb
pop
pushf
loope
push
(bad)
pop
loope
and
icebp
aaa
xor
repz
pop
test
repnz
xchg
outs
sbb
lds
jmp
pop
add
fimul
cmp
push
outs
psubb
xchg
jb
sub
fnsave
dec
push
add
push
or
push
fld
call
ret
jp
dec
mov
sub
or
lods
popf
add
or
or
push
js
inc
mul
add
sub
dec
test
sbb
push
xor
pop
xor
les
test
xor
xchg
movs
jae
inc
mov
xchg
pop
lea
jge
jge
inc
imul
adc
lea
inc
pop
add
mov
retf
dec
xor
cmp
adc
out
je
das
cwde
pop
inc
nop
out
push
and
mov
sub
cld
push
jp
xchg
dec
push
cs
dec
inc
dec
inc
mov
mov
adc
add
jae
cmp
mov
inc
or
std
arpl
ret
call
jmp
mov
mov
cli
push
(bad)
call
jnp
pop
inc
xlat
pop
aad
and
xchg
inc
lods
push
lods
sbb
and
and
mov
call
mov
jbe
push
in
adc
dec
bound
mov
jo
ins
fadd
shl
dec
movs
mov
jmp
mov
shl
ja
js
mov
fisttp
mov
mov
mov
adc
inc
push
in
mov
rcr
mov
fs
imul
in
jnp
call
jl
ins
aaa
in
add
fsubr
mov
shl
cld
mov
js
outs
sbb
pop
das
sar
push
jae
push
jmp
bound
std
daa
loope
int3
sub
popa
(bad)
out
add
out
pop
push
daa
dec
out
fiadd
mov
mov
adc
cwde
div
sbb
aam
call
sbb
out
sub
loope
cmp
adc
(bad)
in
xchg
push
jo
xor
pop
sar
sbb
je
and
xlat
xchg
pop
cmps
(bad)
rcr
and
cld
xor
scas
inc
or
mov
test
stc
cli
loopne
cdq
loopne
out
mov
ret
sbb
adc
dec
out
pop
pop
mov
jge
sub
mov
sar
daa
jbe
out
aad
fnstenv
into
daa
outs
or
mov
adc
fmul
cmps
in
fiadd
mov
add
int3
fist
ret
std
jge
retf
push
ficom
jmp
ror
mov
data16
jns
pop
adc
mov
pop
xor
jae
shl
fcomp
das
and
retf
not
fsincos
sbb
jg
jbe
add
xchg
jb
enter
push
jmp
ja
dec
cmp
add
adc
ficom
out
cmp
mov
sbb
dec
adc
mov
shl
or
mov
hlt
cmps
mov
add
mov
das
xlat
sahf
pop
ret
iret
xchg
sahf
push
jmp
jnp
dec
pop
jmp
sbb
jns
adc
cmps
pop
cmp
mov
xor
sbb
cld
stos
in
xchg
fsubr
and
movs
idiv
cmp
dec
add
sub
call
out
jmp
(bad)
mov
mov
jno
pop
xor
cmp
or
jg
test
lds
push
jns
in
cmps
xor
xchg
mov
mov
mov
sub
mov
leave
addr16
jmp
mov
or
add
cwde
or
call
mov
scas
movs
dec
inc
sahf
mov
xor
cmp
mov
jne
fidivr
xchg
scas
cwde
cmps
bound
jmp
xor
rol
es
add
pop
push
push
dec
daa
cld
mov
bound
mov
adc
jle
hlt
or
adc
mov
(bad)
add
sub
mov
loopne
sbb
nop
xor
sbb
dec
jp
scas
or
mov
mov
mov
push
das
retw
mov
imul
xchg
sbb
in
adc
cmp
push
out
aad
jmp
pop
add
mov
pop
gs
xor
aad
mov
out
clc
(bad)
xor
ins
mov
xchg
loope
fst
ret
jmp
jb
dec
inc
adc
xor
int3
neg
inc
jbe
mov
push
clc
xchg
scas
cli
rcr
icebp
push
push
xchg
fwait
mov
arpl
sub
retf
test
inc
jo
push
mov
dec
xor
outs
dec
add
retf
xlat
imul
sbb
jmp
aaa
xor
pop
bound
(bad)
fsubr
mov
in
mov
out
fsub
mov
xchg
loope
adc
dec
stc
jl
das
out
call
clc
nop
das
aaa
jle
cmp
shl
(bad)
pop
add
sbb
mov
test
and
ds
lahf
and
mov
adc
nop
ret
push
xor
out
icebp
xchg
fsubr
pop
loope
jns
cld
push
pop
not
push
and
ror
retf
in
ror
pop
sbb
push
jbe
xor
hlt
in
cmp
inc
inc
leave
hlt
test
inc
call
sub
ficomp
mov
popa
adc
in
jnp
dec
imul
dec
pop
or
mov
(bad)
call
dec
inc
xor
jecxz
lds
dec
test
movs
mov
mov
jle
sbb
bound
or
xchg
xlat
mov
nop
push
scas
and
lods
sbb
loop
and
adc
idiv
inc
jmp
pop
mov
cmps
leave
fisttp
ror
stos
sbb
dec
test
jb
test
and
push
int
sbb
add
iret
adc
stos
dec
mov
(bad)
jo
cmps
pop
jg
cmps
repz
inc
mov
adc
fstp
cmps
in
mov
sbb
add
mov
adc
je
sbb
dec
ret
test
lock
push
loopne
les
xor
in
xchg
cli
sbb
in
mov
shr
pusha
dec
(bad)
in
xchg
loopne
loope
(bad)
sti
mov
pop
jecxz
or
mov
sti
cmp
in
sub
int
mov
add
pop
aas
and
loope
leave
pop
mov
cmovno
add
push
retf
push
jg
mov
scas
int
pop
jl
dec
fs
pushf
repz
aas
jbe
clc
out
push
cmp
call
enter
pushf
or
pop
jmp
add
dec
and
sahf
mov
aaa
enter
sub
into
dec
js
icebp
imul
fld
daa
push
es
(bad)
mov
int
in
out
cwde
and
pinsrw
(bad)
dec
dec
xor
sar
push
aas
or
fidiv
aam
arpl
stos
mov
ficomp
cdq
aaa
lods
mov
jmp
repnz
mov
pop
in
or
mov
jmp
retf
sar
inc
ret
xchg
push
out
inc
adc
ret
fidiv
lock
xor
inc
inc
and
xlat
jo
popf
outs
adc
rcr
mov
xor
push
icebp
and
sbb
test
jbe
(bad)
mov
xchg
and
xchg
arpl
add
sub
inc
in
mov
loope
jmp
mov
outs
jp
retf
mov
jno
cmc
push
fdivr
cmp
jnp
push
ins
nop
push
mov
dec
xor
repnz
mov
mov
ja
mov
xor
jbe
push
(bad)
pop
adc
imul
aam
data16
retf
jmp
xor
data16
mov
jmp
xor
cwde
mov
mov
ins
push
and
leave
in
(bad)
pop
mov
cmp
mov
sbb
shl
je
int3
ins
push
jecxz
adc
loop
xor
adc
dec
inc
cmps
mov
or
mov
cmps
mov
stos
sub
ins
cmp
pop
out
jbe
push
mov
add
or
neg
mov
leave
xor
push
je
ss
ret
sti
jmp
sub
lods
xor
aaa
inc
cmp
pop
xchg
test
in
(bad)
int3
jne
rcl
aaa
gs
lea
jmp
int
mov
gs
xchg
stc
sbb
xchg
pop
xchg
dec
cmp
cwde
and
push
xchg
inc
test
icebp
lods
sahf
test
aam
cmp
test
repnz
push
repz
adc
sub
inc
cmp
and
adc
sbb
pop
in
sbb
push
loopne
or
xor
pop
out
mov
cmps
mov
movs
and
add
xchg
pop
fst
inc
sbb
dec
sbb
xchg
add
pop
fucomi
cmp
lods
xchg
and
adc
mov
inc
add
adc
outs
pop
pop
fadd
xchg
push
sub
push
ror
gs
sbb
test
sbb
(bad)
mov
jno
hlt
mov
addr16
mov
imul
cs
inc
repz
adc
inc
cs
mov
or
in
add
cmp
fild
mov
sub
ins
xchg
test
pop
ror
test
dec
imul
sbb
push
mov
cdq
out
dec
call
into
loope
les
inc
cmp
xor
mov
push
push
dec
mov
outs
mov
xor
in
xor
cmps
bnd
push
aad
icebp
shl
xor
pop
rol
mov
mov
jno
test
inc
add
mov
pop
mov
hlt
push
lea
jg
push
xchg
ror
add
mov
out
call
int
mov
xchg
mov
xlat
aaa
sbb
int3
dec
icebp
ja
sub
enter
cmp
call
jle
add
in
xor
loop
mov
mov
dec
(bad)
xor
out
inc
hlt
div
adc
dec
dec
or
cwde
mov
wbinvd
int3
jae
sbb
sbb
fsub
jae
lock
cld
jmp
jbe
xor
aad
jle
jno
xchg
cmp
(bad)
call
and
xor
fadd
test
mov
jle
movs
sub
push
xor
fld
mov
(bad)
xchg
sub
lds
cmp
xchg
mov
movs
in
adc
sbb
sti
push
cmp
jle
ss
jb
fcom
jb
mov
in
mov
pop
call
push
(bad)
jno
inc
ins
std
fld
and
inc
mov
aad
xlat
aaa
test
and
loop
mov
hlt
aaa
js
adc
sub
(bad)
mov
(bad)
mov
mov
scas
dec
mov
imul
inc
sub
push
and
mov
sub
call
jb
pop
sbb
mov
sbb
rcr
out
or
hlt
mov
bound
or
cmc
inc
sti
movs
mov
bound
jno
mov
int
xchg
mov
cld
cs
movzx
jo
sub
push
add
and
ja
add
mov
push
add
mov
pop
pop
add
dec
mov
pop
rcr
add
mov
adc
ja
pop
xchg
cli
cli
sar
call
inc
imul
mov
or
jecxz
and
aaa
mul
or
fsubrp
lahf
imul
outs
sbb
inc
jb
shl
push
(bad)
movs
sub
loop
arpl
or
mov
xor
pusha
add
fdivr
mov
push
test
jnp
pop
jnp
cmp
adc
movs
mov
and
jecxz
mov
push
jmp
xchg
push
jb
and
fstp
cli
jp
push
leave
scas
and
jmp
not
mov
aad
test
aad
and
xor
rol
mov
jg
or
pop
arpl
mov
push
push
xchg
stos
popf
dec
adc
pop
push
in
jmp
fisttp
cmps
and
sub
push
jo
into
mov
cwde
fbstp
nop
mov
jmp
call
adc
dec
push
mov
add
jns
jb
inc
clc
or
jns
test
pop
add
xor
aad
add
aad
lahf
xchg
cmc
push
dec
fs
pop
or
add
sbb
xchg
mov
addr16
lds
push
cmc
aam
fadd
sbb
mov
(bad)
cmps
inc
add
aaa
mov
sbb
rcl
mov
or
dec
mov
or
je
outs
test
jns
xchg
xor
and
sub
jmp
imul
int3
push
out
jp
inc
cwde
ss
int
bound
mov
outs
clc
scas
test
aad
arpl
cdq
shr
xchg
call
pusha
stos
fmul
or
bt
inc
pop
fwait
push
inc
(bad)
cvtdq2ps
sub
(bad)
adc
xchg
test
aad
mov
push
mov
stc
in
mov
out
outs
pop
lods
xchg
add
test
xchg
es
leave
mov
cdq
mov
push
dec
pop
mov
xor
(bad)
xchg
fisub
push
xor
stos
lods
adc
sub
retf
jg
adc
mov
in
push
xchg
outs
push
jnp
inc
adc
movs
jo
cmp
addr16
xor
ror
(bad)
fidiv
adc
pop
sbb
add
pop
cmp
jp
xchg
(bad)
add
sub
xor
imul
push
xchg
jmp
push
xor
gs
xchg
call
sub
pop
ror
test
retf
popa
xchg
sbb
add
je
mov
adc
enter
daa
dec
movs
inc
ja
add
aad
ss
xor
pop
lods
test
jmp
repnz
hlt
mov
mov
outs
scas
mov
rcr
scas
mov
add
fdivr
pop
aas
aad
pushf
and
dec
and
sub
and
inc
mov
stos
adc
test
inc
mov
sti
xchg
push
xchg
shl
adc
ins
bnd
std
mov
cdq
mov
or
ficomp
cmp
push
or
push
in
mov
jns
add
mul
movs
xchg
and
daa
xor
inc
lea
shr
sub
push
jno
pop
cld
and
dec
sub
pop
cmp
lods
sub
push
jnp
call
pop
mov
lahf
push
mov
out
sbb
push
aam
mov
xchg
retf
movs
movs
inc
mov
and
inc
mov
scas
xchg
push
fnsave
and
mov
jne
(bad)
lock
nop
cmpxchg
fsubr
mov
pop
test
push
add
pushf
jl
jae
imul
xor
cmps
and
cmp
jno
dec
jle
push
xor
jnp
and
jp
inc
cdq
out
push
imul
pop
sub
mov
inc
int3
dec
jae
cmps
xchg
push
mov
push
repz
mov
loope
mov
int3
pop
mov
out
dec
sahf
(bad)
jne
movs
adc
mov
scas
pop
and
add
adc
xor
inc
loope
cmp
push
cld
xor
shl
or
push
loopne
ins
jbe
loopne
mov
fidivr
cmc
xchg
je
and
in
mov
add
in
add
inc
pop
sub
pop
dec
adc
fsubr
inc
push
adc
and
ret
test
and
sbb
pop
sbb
test
movs
and
mov
aaa
in
dec
ret
adc
enter
pushf
cmp
ror
cmp
mov
pop
add
test
xor
ins
and
cmp
adc
or
adc
retf
or
mov
adc
jne
shl
xor
xchg
movs
xor
test
xchg
jns
adc
ins
mov
jmp
mov
sbb
pop
xchg
popa
cmp
les
xor
add
(bad)
sub
loop
xor
popa
adc
in
push
mov
je
scas
jp
add
fwait
lods
inc
sub
(bad)
int3
data16
mov
push
imul
xchg
sbb
sub
int3
mov
es
push
add
sbb
cld
ret
mov
test
cdq
fnstsw
sbb
mov
hlt
push
push
nop
cld
sbb
jb
mov
retf
clc
lods
fucomip
aas
or
repnz
iret
aaa
loopne
call
inc
adc
jnp
sbb
pop
fcmovnu
repz
and
call
mov
pop
call
fmul
out
fwait
dec
loope
pop
jl
in
cdq
mov
out
cld
and
sub
mov
xchg
out
mov
and
mov
hlt
adc
push
xchg
iret
cmp
xchg
lods
cld
cli
mov
and
cwde
jle
cs
dec
sub
pop
xor
jg
xor
pop
outs
jbe
mov
jns
jl
ret
sub
jno
nop
mov
out
scas
dec
mov
out
xchg
xor
jg
inc
mov
or
fsubrp
cmp
mul
or
or
dec
pop
adc
mov
push
pop
cmp
mov
scas
out
lods
ins
xor
mov
retf
pop
aad
jnp
das
jne
sbb
setg
nop
mul
les
outs
mov
push
pop
pop
jl
imul
push
jno
or
out
push
jb
lea
cmps
lods
fnstsw
jae
xor
fst
ficom
inc
xchg
sbb
ins
mov
retf
mov
(bad)
clc
aaa
sub
popf
ss
mov
test
aam
add
addr16
in
out
test
xor
adc
icebp
out
test
or
shl
js
sbb
outs
out
or
daa
clc
lds
jmp
jne
imul
sahf
lock
call
cwde
(bad)
enter
mov
pop
popa
mov
mov
out
inc
hlt
movs
push
cmp
call
xlat
jecxz
inc
retf
xor
xchg
retf
ret
xor
sbb
scas
je
add
and
inc
loopne
cli
les
test
sub
xor
mov
jae
jno
sbb
sar
xor
mov
int3
and
xchg
inc
and
dec
mov
inc
nop
int3
push
push
pop
cdq
sbb
fs
jmp
mov
xchg
imul
arpl
add
scas
std
and
loop
sub
sbb
inc
popa
jmp
pushf
sbb
pop
adc
movs
xlat
nop
push
jne
pusha
jl
arpl
test
and
cmp
dec
cs
repnz
cmp
loope
xchg
loope
and
mov
mov
fwait
xlat
int
pop
mov
rcl
aaa
sbb
popa
xor
jmp
and
neg
jp
add
sbb
mov
cwde
adc
pop
lods
or
sub
mov
xlat
mov
dec
push
add
loopne
or
mov
mov
push
cs
inc
adc
rcr
sbb
mov
jle
adc
gs
cld
ds
push
ror
xchg
(bad)
jbe
movs
xchg
fst
loopne
pop
int3
sbb
cmc
lahf
mov
mov
das
cmp
es
add
ret
bound
pop
adc
sahf
sbb
les
cmp
rol
push
cmp
gs
add
lods
add
sbb
mov
jecxz
retf
cmps
je
call
inc
stos
cld
lock
out
or
mov
xchg
call
rol
or
dec
jmp
stos
jge
fsub
sbb
sub
inc
stos
lea
or
pop
cmp
imul
mov
test
nop
xor
jmp
adc
adc
frstor
push
xchg
repnz
and
idiv
jp
stc
js
xchg
xlat
sub
dec
loopne
dec
test
mov
xchg
out
retfw
push
or
lds
mov
inc
ret
rcr
jae
mov
push
jmp
loope
mov
stos
lods
mov
div
mov
call
pop
int
sub
mov
inc
loope
test
inc
outs
add
lock
test
sub
push
adc
shl
cmp
pop
imul
cs
or
or
(bad)
pop
ds
enter
jmp
jne
pushf
mov
fsubr
(bad)
or
mov
mov
mov
jge
xor
ror
push
sub
jo
jl
cmc
cwde
inc
std
push
sbb
xchg
aad
cmp
hlt
jmp
xlat
fwait
mov
pop
adc
test
or
lea
das
add
jle
jno
lds
out
cmp
jns
xor
lahf
push
je
ret
add
retf
mov
in
pop
pop
pop
or
push
xchg
cwde
bound
ds
es
pop
aam
aas
(bad)
setge
cli
pop
mov
push
loopne
jmp
rcl
stos
sbb
retf
add
jae
cmc
jno
xor
ins
xlat
mov
add
adc
sahf
adc
or
test
test
in
mov
mov
mov
ins
lods
popa
add
leave
fimul
push
or
mov
imul
mov
push
push
leave
enter
scas
icebp
pop
cmp
sti
jp
fadd
jecxz
xor
test
imul
imul
or
mov
enter
neg
push
test
xchg
jmp
lods
xchg
mov
aaa
call
and
xchg
inc
dec
fsub
sbb
repnz
shl
fs
mov
clc
mov
mov
add
sbb
ja
icebp
repz
push
inc
mov
pop
dec
push
pop
shl
sub
les
mov
cmp
mov
pop
cmps
inc
mov
dec
in
inc
push
or
leave
sar
imul
jae
mov
sahf
or
mov
(bad)
mov
add
xchg
(bad)
aas
xor
pop
fnstcw
xor
add
dec
(bad)
enter
jg
test
or
pop
ret
push
fisubr
or
inc
enter
shl
xor
je
sbb
or
out
sbb
adc
fwait
ss
(bad)
jb
(bad)
mov
std
jmp
push
mov
je
lods
mov
icebp
dec
xor
and
sub
shl
test
xor
push
sbb
dec
cmp
(bad)
add
int3
into
pop
mov
adc
icebp
test
popf
iret
(bad)
mov
push
cmp
jbe
push
xor
sub
jbe
sbb
(bad)
fst
sub
or
xor
in
jge
(bad)
repnz
popf
or
adc
out
fsubr
mov
adc
ins
and
dec
movs
cmp
add
fisubr
push
push
lods
xchg
mov
xor
enter
xchg
push
inc
dec
sar
xchg
(bad)
popf
cld
jp
jb
in
adc
cmc
push
retf
push
jmp
add
dec
imul
and
or
adc
loopne
icebp
push
sbb
ficom
jae
and
jge
sub
sbb
xor
fs
lods
jmp
pop
sti
sub
jnp
xor
and
xor
inc
mov
xlat
pop
pop
movs
ret
jmp
lds
fcomp
push
sbb
(bad)
cmc
jae
dec
and
mov
ins
(bad)
clc
ds
cs
ja
(bad)
xor
and
in
popf
int
pop
cld
inc
or
dec
sub
aaa
data16
cmp
fwait
or
or
cmc
jmp
sbb
scas
test
addr16
mov
xchg
mov
and
call
out
sbb
(bad)
popa
fisub
pop
sbb
sub
pusha
ja
push
xchg
xchg
aad
or
js
xchg
call
mov
add
xchg
test
xor
addr16
loope
loopne
bsf
mov
lea
nop
adc
pop
pop
push
popf
fsub
ins
mov
cs
cmps
scas
push
dec
lods
mov
xchg
jge
fisttp
mov
mov
xchg
adc
ins
leave
xchg
mov
mov
std
mov
cdq
sub
adc
int
pop
test
push
add
sbb
mov
repz
jmp
mov
rcl
mov
push
(bad)
jno
fcmovnb
dec
adc
mov
xlat
in
pop
movs
in
cmp
fld
xchg
cmps
add
and
push
push
pusha
jne
call
or
je
cmp
push
xor
icebp
push
test
push
data16
cmp
push
add
inc
xchg
pop
or
imul
inc
adc
mov
pop
xor
rol
mov
adc
and
xor
leave
leave
mov
fstp
cmp
ret
rcr
mov
sub
mov
mov
repnz
mov
pop
or
add
gs
addr16
mov
push
inc
pop
or
mov
lea
aas
stos
mov
mov
mov
arpl
out
push
jne
dec
mov
sub
jle
bound
and
pop
scas
pop
adc
gs
icebp
retf
pop
std
add
xor
cmp
ins
mov
icebp
cld
lock
inc
jae
add
out
xchg
cdq
sub
and
cmp
xchg
adc
lods
sti
leave
xchg
xchg
xchg
sub
xor
or
mov
loopne
xchg
fild
outs
test
and
arpl
(bad)
bound
cmp
fwait
mov
adc
loop
xlat
sbb
push
jnp
jnp
(bad)
sbb
and
push
daa
ins
jno
test
inc
fsincos
mov
dec
int
std
sub
mov
je
out
ror
ins
lock
retf
cmp
leave
adc
lds
in
xchg
pop
add
and
test
int3
xchg
fcmovb
pusha
pop
dec
sub
lods
gs
inc
rol
and
pop
out
call
dec
xchg
jg
mov
jne
mov
lea
xlat
(bad)
or
jnp
and
cmp
sub
inc
or
fist
add
pop
dec
push
mov
mov
mov
and
inc
(bad)
out
ret
popf
cli
xchg
push
or
pop
cmp
add
adc
mov
push
mov
jns
cmp
das
inc
(bad)
sbb
push
out
popa
in
pop
jno
push
xor
dec
mov
(bad)
sbb
jae
mov
fidivr
arpl
cmp
inc
or
adc
dec
fist
xchg
loop
lahf
xor
cmc
stos
mov
push
repnz
ss
sbb
sub
ffree
loopne
aam
pushf
iret
(bad)
pop
movs
push
push
add
repnz
ins
cmp
xor
mov
das
adc
aad
dec
test
and
adc
out
mov
movs
push
sar
mov
call
rol
and
les
out
sbb
call
das
jp
cdq
imul
mov
sbb
sub
mov
das
in
and
jno
adc
mov
mov
xor
nop
sub
bound
imul
cld
push
ins
dec
ins
scas
push
js
sub
ss
or
ss
add
mov
pushf
sbb
xchg
test
sub
mov
sbb
popa
out
mov
mov
inc
sub
add
push
xchg
dec
clc
jmp
arpl
jl
test
shl
xor
(bad)
call
shl
xor
pop
cmp
iret
inc
ret
cmp
and
(bad)
ror
adc
dec
jmp
imul
retf
and
(bad)
in
bound
stc
shl
sub
fldcw
in
push
outs
mov
scas
jno
mov
fldenv
mov
adc
bound
push
mov
shr
xchg
push
pop
arpl
and
mov
mov
sbb
jle
ret
out
mov
repz
sub
xlat
aas
push
mov
hlt
jmp
jns
in
jno
or
cdq
repnz
pop
es
dec
aaa
js
mov
mov
xor
ror
fnstcw
ins
sub
xor
sbb
lock
lods
xor
mov
mov
jmp
ss
jl
stos
(bad)
adc
cs
xlat
push
xor
xlat
xchg
adc
pop
out
fisttp
(bad)
mov
jmp
loope
sbb
idiv
js
mov
mov
mov
out
in
ret
fcom
mov
test
and
adc
dec
sub
push
jg
les
mov
loop
cmp
pop
call
sub
cmps
push
mov
push
jl
and
lock
and
and
mov
ret
leave
(bad)
pop
jg
mov
popa
dec
fstp
xor
or
pop
lods
mov
dec
add
cmps
out
aad
enter
dec
jns
pop
stos
cmp
jg
and
jmp
ins
fwait
mov
sub
jl
test
arpl
adc
mov
and
mov
mov
mov
and
arpl
mov
mov
sbb
in
popa
xchg
int
jge
out
js
jno
cli
mov
inc
(bad)
scas
test
pusha
idiv
enter
call
push
movs
jmp
cmp
aam
test
loope
fidiv
mov
sub
inc
(bad)
jmp
inc
pop
mov
imul
(bad)
retf
test
fwait
cmps
inc
push
cmp
rcl
das
sub
cwde
fnstcw
sbb
xor
imul
pop
mov
mov
cmp
jg
in
mul
dec
xor
cld
jb
aas
out
dec
retf
add
mov
fcomp
xchg
fimul
out
pop
out
push
(bad)
stc
push
rol
neg
mov
xchg
out
jnp
and
add
aam
shl
loope
mul
mov
cmp
daa
arpl
imul
call
xchg
data16
pop
call
xor
call
add
jge
inc
(bad)
sar
xchg
mov
ins
adc
cmp
rcr
ffreep
mov
cmp
adc
fisttp
(bad)
and
mov
add
stc
mov
mov
ins
and
pop
retf
pop
enter
imul
out
pusha
dec
mov
ret
mov
ins
dec
fs
test
test
xlat
mov
or
mov
pusha
push
lock
loope
mov
repz
out
inc
iret
mov
pop
inc
adc
or
sahf
test
test
xchg
ror
jg
dec
js
mov
out
imul
aaa
xchg
outs
inc
ja
pop
push
push
push
cmp
adc
pop
xlat
fnsave
adc
in
mov
cmps
inc
hlt
ins
stc
sub
inc
into
stos
or
not
les
inc
jmp
repnz
push
mov
jp
shl
fcom
mov
lea
mov
ret
sbb
cmp
cmps
and
push
clc
loop
push
popf
add
retf
leave
lahf
push
sub
push
mov
pop
inc
inc
test
cmps
adc
mov
(bad)
sbb
lock
lods
pop
adc
mov
dec
xor
dec
xor
hlt
mov
int3
or
dec
pop
sbb
jle
ret
fdiv
mov
arpl
dec
call
shr
add
cdq
and
popa
sahf
mov
jle
mov
xchg
mov
retf
adc
push
mov
fisttp
aad
adc
lahf
cmp
inc
sahf
fisttp
clc
mov
jmp
cmp
sbb
cmp
or
into
test
adc
xchg
fsubr
jmp
jns
(bad)
imul
jo
xchg
cmp
out
push
mov
shl
rcl
ror
jno
imul
sub
cmp
(bad)
inc
mov
xor
dec
imul
mov
rol
imul
mov
lahf
aas
inc
imul
fwait
and
jnp
or
or
stos
adc
in
call
mov
retf
ins
mov
mov
cmp
mov
mov
ins
fisttp
dec
sub
push
jge
xchg
lods
into
aam
imul
inc
push
pushf
rcl
xchg
xor
mov
or
rcr
imul
jno
mov
test
sub
push
test
pusha
(bad)
lock
mov
jno
fstp
sub
cmp
mov
adc
sbb
js
jns
push
shl
pop
cmp
outs
adc
add
aas
addr16
repnz
jae
shl
arpl
cmps
rol
stc
jns
mov
clc
add
cli
add
lods
arpl
push
lods
or
aas
jl
addr16
out
mov
cld
cmp
push
je
nop
dec
jp
pop
push
call
ret
xchg
pop
aad
shr
shr
(bad)
sar
dec
push
xchg
outs
stc
cmp
and
and
cwde
push
pusha
or
push
sbb
(bad)
pop
jnp
inc
in
fcmovb
mov
mov
mov
out
cwde
push
adc
loop
xchg
out
(bad)
mov
sbb
add
call
js
hlt
push
leave
mov
arpl
mov
popf
and
push
fsubr
or
icebp
nop
test
fst
es
(bad)
jmp
std
ins
mov
pop
jp
pop
into
mov
je
rol
movs
add
out
inc
adc
lock
retf
outs
lock
inc
popf
or
not
cmps
inc
pmaxub
shr
mov
inc
outs
loop
mov
into
test
jo
adc
or
mov
addr16
in
mov
mov
cdq
fld
adc
xchg
xchg
mov
dec
retf
int
data16
inc
push
mov
inc
dec
adc
mov
push
xor
push
cmp
adc
sahf
fs
add
clc
nop
movs
fcomp
mov
loope
mov
pcmpgtb
fbld
sahf
fld
add
test
stc
cmp
mov
mov
jbe
movs
test
inc
lea
dec
jmp
mov
and
mov
xchg
pop
and
push
(bad)
jns
mov
xor
hlt
jne
in
adc
jnp
lods
xchg
cld
adc
cmp
add
cmps
dec
inc
scas
stc
add
pop
xchg
add
into
xor
mov
xchg
push
inc
xor
pop
xor
mov
cmps
xchg
jb
dec
inc
mov
xor
push
pop
fimul
(bad)
xor
fbld
mov
xor
retf
pop
mov
sahf
in
dec
movs
shld
add
mov
mov
jle
ret
jmp
or
mov
inc
imul
pop
mov
push
jmp
jl
sub
or
stos
adc
xlat
sub
fwait
stos
xchg
cmp
mov
les
gs
sbb
loop
or
jl
shl
mov
test
add
aaa
mov
mov
(bad)
stos
outs
mov
jl
sbb
mov
aaa
stos
cmp
add
cmp
mov
out
sar
add
pop
outs
mov
fadd
in
clc
enter
test
xchg
dec
cmp
jmp
repz
icebp
add
pop
dec
icebp
push
std
int
or
addr16
fidivr
jl
push
into
jae
cmp
xchg
jno
clc
ins
xor
cdq
aaa
mov
nop
xor
sub
xlat
jb
pop
repnz
icebp
mov
cmp
imul
aad
in
leave
mov
cmc
cmp
mov
xchg
mov
xor
pop
inc
sbb
or
fisub
xchg
fcom
xchg
adc
jmp
jp
inc
or
mov
adc
div
mov
fst
mov
frstor
cmp
fcmovne
push
fdiv
in
pop
shl
fst
jg
dec
into
lahf
add
aaa
xor
icebp
cmps
aaa
inc
jmp
ret
inc
aad
and
imul
movs
lods
jmp
jp
fs
and
push
daa
movs
cld
sti
and
push
in
addr16
cmps
bound
dec
push
jae
enter
enter
jmp
mov
adc
and
cmp
jg
scas
shl
or
std
(bad)
xchg
je
retf
jecxz
lds
mov
fild
lods
sbb
xor
mov
in
sbb
cmp
adc
mov
xchg
cmp
test
sahf
pop
xchg
adc
mov
mov
fs
(bad)
stos
loope
mov
sbb
outs
pusha
mov
inc
fsub
pushf
add
das
call
test
std
xor
test
and
in
mov
sbb
aad
fild
sbb
mov
jno
arpl
or
xor
xchg
data16
(bad)
jns
push
enter
xchg
cs
ficomp
int
xchg
push
adc
out
cmp
or
shl
sub
mov
jl
in
push
jmp
pushf
mov
jno
or
push
inc
jmp
jp
ds
inc
clc
ja
vpaddsb
pop
repz
mov
leave
loop
cs
mov
dec
(bad)
push
loope
mov
mov
lods
lock
pushfw
sbb
loop
in
int
mov
mov
call
mov
sbb
arpl
jns
mov
inc
xor
jae
mov
mov
xchg
xchg
fild
leave
add
dec
mov
outs
and
mov
imul
inc
imul
sub
mov
jb
and
jbe
cmp
xchg
retf
xchg
add
(bad)
sub
popa
in
ss
jge
add
jo
retf
in
xor
gs
sub
imul
inc
or
sub
and
rcl
test
jp
pop
mov
dec
and
js
enter
lods
les
mov
in
push
push
inc
ret
into
ins
inc
add
rol
sbb
mov
dec
xchg
or
enter
enter
ret
mov
xlat
xchg
mov
sbb
ds
ins
cld
jle
mov
or
add
push
cmps
std
push
mov
mov
test
xor
and
(bad)
and
mov
sub
jle
mov
lock
adc
push
pop
and
je
inc
xchg
adc
xor
jae
xlat
test
pop
push
cmps
add
jno
lock
int
pop
xchg
push
into
and
in
inc
and
movs
pop
jb
dec
jo
xchg
lods
jmp
repz
jle
test
call
xchg
fidiv
scas
push
rol
push
inc
cmp
dec
mov
sets
or
cs
call
adc
ds
ret
sub
pop
mov
pop
fucomp
push
inc
es
pop
add
jecxz
sub
ja
inc
dec
paddsb
das
(bad)
(bad)
xor
jecxz
pop
pop
pop
test
popf
adc
sub
mov
mov
or
mov
xchg
ror
jmp
add
jl
adc
ins
mov
xchg
cmp
in
pop
push
and
imul
mov
ret
fwait
pop
mov
push
push
retf
daa
adc
outs
(bad)
in
inc
xchg
jno
xchg
sbb
dec
add
test
push
and
xor
fxch
dec
mov
fst
push
les
pop
ficom
sub
inc
cmps
mov
adc
pop
es
or
xchg
(bad)
push
leave
adc
and
jne
cmps
stc
jg
iret
xor
push
mov
cwde
jmp
add
push
push
push
dec
jp
fild
cmp
xchg
inc
jmp
add
test
(bad)
icebp
popf
add
shl
adc
cmp
xchg
sub
shr
dec
cmps
ins
call
xchg
dec
push
sub
pop
pop
xor
adc
stos
cmp
fdivr
push
cvtdq2ps
cmp
xchg
sbb
xor
(bad)
pop
jne
mov
fisttp
outs
and
inc
je
mov
adc
cmps
lods
xor
(bad)
or
or
(bad)
clc
std
in
sbb
sub
call
fsubrp
shl
mov
icebp
loop
fincstp
out
test
pop
shr
aad
in
outs
jmp
mov
sub
pop
loopne
(bad)
jge
(bad)
adc
mov
imul
xor
push
mov
push
rcr
test
adc
std
jg
test
pop
test
out
scas
enter
into
add
int
mov
sbb
mov
jl
cwde
pop
mov
cli
push
xor
jmp
test
xlat
pop
xor
sbb
mov
xchg
add
ja
int
rcr
out
les
pop
(bad)
mov
ds
cwde
mov
in
lods
sbb
mul
cmc
xor
cmps
outs
loop
xor
popa
mov
xchg
je
push
imul
data16
xlat
add
dec
cwde
lods
(bad)
jmp
test
stc
mov
rol
mov
add
(bad)
and
inc
mul
les
ja
in
adc
sahf
add
(bad)
dec
xor
div
mov
sbb
fidiv
adc
shl
fst
in
sub
mov
gs
arpl
xchg
ret
and
icebp
or
jnp
ss
nop
and
xchg
jle
mov
ror
dec
mov
mov
daa
jb
call
movs
lea
ds
imul
div
fdiv
lock
mov
mov
jb
push
mov
pop
dec
push
push
mov
shl
fild
movs
cmp
jae
mov
mov
in
cs
push
cdq
and
sbb
test
jecxz
push
(bad)
adc
or
add
or
stos
(bad)
adc
cld
mov
jnp
cmc
push
mov
sub
int
mov
mov
push
sub
push
nop
xchg
lea
cmp
cbw
call
out
clc
push
inc
aas
les
pop
stos
aas
ins
jb
fnsave
lods
or
call
ss
adc
jecxz
mov
fdivr
cmp
add
and
cmp
scas
mov
das
pushf
dec
cmps
pop
cmc
or
shl
cli
loopne
cmp
xor
mov
test
pop
ficomp
inc
aas
lock
ins
dec
lds
ud2
shl
jno
test
jo
rol
jg
and
data16
push
sar
and
jns
xor
iret
pusha
cdq
sub
jno
scas
mov
rcr
jnp
or
(bad)
(bad)
xchg
fisttp
add
mov
hlt
mov
xchg
add
aaa
scas
add
mov
fs
jae
arpl
cmp
pop
(bad)
out
xchg
cld
xor
out
pop
fmul
pop
add
xor
dec
scas
mov
and
retf
jp
push
adc
cs
jmp
cmp
jne
je
xor
push
rcl
push
ret
ins
cli
aad
mov
es
ins
jae
xor
adc
sbb
sar
les
pop
push
stos
xor
mov
jmp
push
shl
push
xchg
in
mov
add
and
hlt
jmp
jne
fisub
pop
xor
sbb
sbb
das
daa
add
rcl
xchg
movs
leave
in
pop
xchg
mov
clc
xchg
(bad)
es
push
push
mov
pushf
iret
mov
imul
dec
cmps
fld
push
sbb
jb
stos
and
jne
jns
popf
popa
aam
sbb
add
xlat
inc
jge
cmp
cmp
imul
std
pop
pop
popf
add
xchg
aas
or
push
push
ret
add
imul
jne
pop
inc
(bad)
aaa
fidivr
pop
mov
(bad)
mov
out
sbb
mov
es
pop
sbb
sbb
stos
or
pop
aad
xchg
lods
mov
(bad)
nop
retf
mov
dec
add
ds
idiv
mov
std
icebp
pop
xchg
outs
mov
mov
mov
sub
dec
call
jp
add
pop
retf
bswap
cmp
out
push
daa
pop
lock
xchg
addr16
adc
aam
addr16
stos
ficom
pusha
jmp
or
das
pop
xchg
lock
or
xor
pop
pop
mov
mov
jl
and
or
mov
in
jle
mov
lea
push
cmp
mul
sub
je
test
and
mov
call
mov
out
cmp
mov
add
gs
loop
lock
and
mov
retf
fcom
mov
mov
lock
add
stos
mov
outs
mov
push
enter
cmp
pop
stc
sbb
push
out
stc
and
sar
test
xchg
jmp
jne
fldenv
ret
aaa
ror
and
pushf
pusha
xchg
stc
sbb
(bad)
repz
inc
mov
dec
outs
inc
inc
ins
rcl
js
inc
(bad)
inc
movs
push
aad
push
sbb
mov
stc
mov
cmp
iret
mov
(bad)
push
cmps
dec
rcl
out
sub
cdq
dec
out
inc
add
add
pop
adc
pop
dec
or
fmul
repnz
lahf
cmp
(bad)
(bad)
icebp
pop
outs
int3
jo
ret
lds
jne
inc
loope
sub
in
dec
or
cmps
lods
and
adc
data16
jbe
jl
mov
xchg
popa
dec
sub
inc
inc
cmp
jae
ret
cmp
call
dec
mov
push
xchg
sbb
stc
sbb
ins
jg
or
jge
sub
or
repnz
mov
cmps
shl
in
adc
xor
out
(bad)
rol
repz
xor
pop
xor
retf
pushf
dec
mov
cmp
dec
lea
xchg
add
test
out
inc
(bad)
sbb
push
lods
fnstenv
in
xor
add
repz
cmp
rcr
inc
sbb
inc
movs
lahf
out
sbb
scas
gs
daa
aas
jmp
cmp
add
and
sbb
push
js
pop
sbb
(bad)
push
jmp
pop
rcl
dec
cmc
div
xchg
mov
jbe
and
xor
or
pop
mov
(bad)
enter
cmc
aam
push
inc
cld
add
dec
push
inc
fistp
scas
stos
mov
mov
bound
in
pushf
xor
xor
and
mov
mov
(bad)
fst
ss
das
xor
sbb
fwait
dec
popa
mov
repnz
xchg
call
mov
inc
cmp
(bad)
cld
adc
mov
cmp
or
mov
pop
loop
sub
push
mov
mov
ins
loop
adc
stos
hlt
jbe
dec
xor
test
xor
dec
push
movs
dec
add
add
adc
sub
fidivr
dec
pushf
cmc
xor
add
(bad)
jp
jecxz
stos
inc
inc
push
xor
ror
fisttp
cmp
or
mov
aam
retf
pop
jne
imul
test
sub
push
jmp
ja
push
jge
pop
cmp
sub
pop
cmp
test
push
sbb
dec
shl
shl
iret
cmp
pop
in
fist
cmp
push
loope
or
outs
out
push
shl
test
mov
mov
sbb
mov
mov
addr16
jge
lds
jge
dec
xor
mov
xchg
data16
pop
pusha
push
in
sar
imul
push
xor
adc
shl
out
or
(bad)
fbld
imul
xchg
mov
retf
pop
gs
jbe
and
xchg
scas
pop
inc
jns
je
cmc
inc
pop
movs
xor
outs
imul
fidivr
leave
mov
(bad)
test
jae
dec
ins
dec
fadd
or
(bad)
rol
ja
sar
or
in
or
and
retf
sub
inc
xchg
cmp
push
cmp
xchg
call
shl
mov
or
fwait
sub
fidiv
xchg
mov
cmc
fidiv
retf
fistp
mov
jno
mov
addr16
(bad)
lahf
pop
lods
xchg
jle
push
outs
mov
ret
xor
mov
sub
nop
repz
xchg
out
das
gs
leave
loope
dec
mov
add
push
scas
rcr
push
mov
mov
mov
in
mov
jmp
mov
push
cmc
jle
dec
loope
xchg
jecxz
call
or
mov
aaa
push
nop
xchg
std
cmp
xor
call
pusha
cdq
addr16
loop
push
mov
(bad)
pop
(bad)
fbld
repz
add
ss
not
push
leave
js
fbld
jmp
xchg
fldenv
mov
cmp
jnp
add
cmp
scas
aad
jge
jl
fadd
push
mov
into
into
js
fbld
push
mov
inc
mov
std
cmp
jmp
fld
in
in
xchg
or
sti
adc
retf
lahf
loop
ds
sbb
jae
mov
(bad)
movs
fcomp
sub
cmp
inc
sbb
or
inc
add
dec
push
ja
mov
arpl
shl
ss
xor
cmp
cld
in
fwait
sbb
xchg
cmps
xor
xor
sbb
fdiv
pop
inc
sub
push
neg
lock
jo
xchg
xor
add
jb
push
call
lea
dec
inc
dec
test
shr
add
add
xor
gs
fsub
mov
cmc
les
gs
xor
outs
sub
adc
sub
loope
stc
retf
(bad)
shr
and
lds
inc
cmc
test
call
and
push
arpl
cmp
outs
sbb
div
into
out
pushf
in
jmp
enter
fidivr
dec
arpl
in
movs
push
lahf
pop
sbb
xchg
push
retf
sub
dec
inc
in
xor
adc
add
dec
ins
lock
fsubr
enter
fs
mov
dec
cli
pop
jge
jb
inc
xchg
sbb
sub
push
and
mov
sbb
and
sahf
ins
dec
test
outs
imul
push
sbb
jns
int3
dec
daa
inc
stos
sbb
mov
in
rcr
pop
les
add
cmp
test
imul
movs
pop
inc
rol
in
jle
ds
xor
cmp
xchg
cmp
cmp
cmp
in
aad
or
xor
rol
out
jae
mov
dec
pop
cmp
mov
test
dec
or
leave
add
iret
shr
push
lock
and
out
push
ins
fmulp
hlt
ret
ins
or
pop
dec
adc
xor
loope
cmps
sar
cmp
mov
ret
retf
bound
pop
or
cmp
int3
mov
jle
sub
and
push
and
out
sbb
cmps
enter
pop
stos
aad
lea
hlt
sti
and
and
sub
ja
pop
aam
sbb
inc
push
jo
mov
pop
cmp
lds
dec
dec
lahf
into
pop
outs
push
adc
jnp
push
leave
pop
pop
xchg
pop
(bad)
adc
push
je
mov
xchg
rcl
xor
or
sub
arpl
js
xor
test
dec
pop
pop
outs
push
or
cmp
(bad)
aaa
sbb
jmp
rol
nop
cmps
and
mov
mov
dec
popf
iret
pop
mov
es
jb
repnz
pop
xchg
pop
add
push
mov
in
or
aad
repnz
lods
loope
push
xchg
xor
adc
sbb
jl
xchg
adc
in
(bad)
test
sbb
inc
arpl
pop
xlat
mov
movs
out
and
mov
fdivr
out
cmp
mov
adc
cwde
arpl
sahf
mov
ror
pop
sub
aam
mov
cwde
(bad)
inc
(bad)
test
outs
fcom
rcr
push
xchg
mov
test
add
adc
push
std
sbb
add
(bad)
mov
outs
cmp
cmc
cdq
push
(bad)
fist
dec
lock
loopne
push
xor
imul
sub
sbb
and
mov
or
mov
pop
in
in
ss
cmp
jne
pop
adc
pop
movs
repnz
dec
lds
jnp
aaa
shl
aam
and
mov
push
adc
inc
in
aas
aas
int3
call
sub
pop
or
xlat
lock
jp
ret
jge
pop
adc
out
xor
xchg
mov
in
mov
es
xchg
pop
pop
imul
aas
(bad)
adc
and
mov
ror
dec
retf
scas
adc
lods
into
repnz
cmps
mov
xor
mov
cmp
sub
or
or
mov
ins
jle
retf
inc
adc
subps
lods
hlt
test
pop
adc
add
sar
pop
shl
pop
push
dec
popa
and
dec
and
ins
cmp
mov
inc
jb
gs
add
mov
ss
push
ds
mov
call
adc
ja
xchg
pop
jg
mov
(bad)
pop
jg
sti
aas
xchg
mov
test
dec
sub
mov
mov
mov
shl
pushf
fdivr
(bad)
cmp
ds
pop
adc
lock
mov
xlat
mov
clc
call
sbb
inc
dec
mov
adc
add
push
fistp
push
std
xor
dec
jle
inc
add
xor
or
jbe
shl
adc
push
mov
mov
pop
dec
ins
inc
lods
in
fsub
cmps
ficom
in
or
push
ror
and
dec
jb
jb
jmp
mov
cwde
ficom
xchg
imul
mov
(bad)
push
mov
cmc
jb
push
cmps
int3
loopne
ins
out
inc
pop
in
dec
jo
ds
inc
aad
xor
fisubr
mov
movs
(bad)
call
sbb
das
fstp
data16
ss
sub
ror
fsubr
addr16
loop
popf
fs
out
mov
pop
or
rcr
add
push
cmp
ret
and
imul
(bad)
push
rcr
jl
fsub
mov
stc
outs
jae
adc
xchg
lods
xor
gs
leave
pop
sub
dec
hlt
repnz
fs
pop
int3
jmp
popa
sbb
outs
or
sub
cs
call
pop
xchg
sahf
xor
xor
or
jns
nop
ret
test
cmp
cmps
pop
cli
jl
cs
js
fwait
mov
rcr
sti
je
cmp
sbb
iret
or
(bad)
and
ror
loop
pop
push
inc
xor
sbb
addr16
rcr
ret
push
and
xchg
xor
adc
data16
sub
xchg
ins
xchg
es
pusha
sub
mov
mov
fiadd
xor
adc
test
xchg
mov
adc
ficom
and
push
retf
dec
out
iret
(bad)
jne
push
ret
stc
mov
(bad)
in
std
jo
outs
jne
sbb
call
mov
xor
cdq
fadd
out
das
jmp
pusha
out
push
jno
loope
aas
jno
mov
inc
js
in
mov
cmp
ds
xrelease
xchg
xlat
test
xchg
std
mov
xor
mov
fs
mov
(bad)
(bad)
add
fldenv
or
adc
xor
sub
jnp
xchg
js
mov
pop
mov
sbb
jp
ficomp
mov
es
pop
jle
or
ins
icebp
jnp
lahf
xchg
jle
and
push
jp
cs
les
sti
mov
gs
dec
ds
or
sub
dec
ja
inc
imul
xchg
add
add
adc
dec
out
shl
out
pushf
push
call
in
cmp
inc
inc
push
mov
je
nop
pop
add
pop
xchg
sti
setbe
loope
stos
out
jmp
cmp
ins
mov
mov
sbb
(bad)
inc
pop
dec
xor
push
inc
jns
outs
adc
fimul
jo
sub
cmc
adc
cmc
arpl
fist
inc
prefetchw
cli
mov
mov
mov
cmp
sti
std
movs
xchg
rdtsc
das
inc
and
xchg
mov
mov
ret
sbb
sbb
jne
scas
push
or
push
mov
mov
int3
xchg
xchg
dec
cli
adc
cld
and
fisttp
push
out
das
inc
data16
(bad)
sub
pop
push
jp
cs
jo
push
sub
xchg
add
mov
and
int3
mov
scas
js
outs
shr
int3
(bad)
mov
popf
mov
adc
imul
loop
adc
push
adc
test
add
push
scas
stos
stc
xchg
adc
dec
iret
or
mov
mov
test
xor
dec
je
push
outs
mov
add
pop
adc
aas
fnstenv
jecxz
pop
sbb
(bad)
push
mov
(bad)
dec
sbb
push
sub
call
test
fild
addr16
cs
mov
outs
int3
clc
mov
jmp
sbb
jle
mov
sbb
pop
jae
rol
and
xchg
popa
int3
imul
lods
mov
daa
sahf
pop
jno
mov
stos
add
aaa
cmc
sub
cmps
popf
cdq
data16
sar
jne
xchg
pop
pushf
fidivr
es
add
call
idiv
fcomp
push
enter
dec
and
aad
pop
bound
sbb
ret
add
call
bound
dec
sub
xchg
pop
pop
jb
ds
cmp
fsubr
sub
mov
lahf
mov
lahf
fst
cmc
in
daa
leave
retf
hlt
cmc
and
mov
adc
nop
add
add
stc
sbb
mov
add
fdivr
in
iret
xchg
xchg
mov
sbb
cdq
and
std
retf
push
popa
jno
jns
loopne
mov
cwde
xchg
sar
mov
lds
jnp
sbb
pop
push
movs
sar
sbb
lea
out
and
cld
and
lods
xchg
(bad)
jb
popf
cmp
add
jbe
ror
pop
dec
cmps
jb
pop
xor
fld
out
mov
nop
sub
add
mov
pop
mov
ret
xchg
and
dec
clc
adc
rcl
test
xchg
ret
aad
daa
inc
nop
out
jp
fdiv
in
lods
ins
ins
mov
in
(bad)
ins
or
lea
in
or
outs
test
jb
nop
ins
xchg
and
push
ficom
and
adc
push
inc
dec
mov
add
inc
mov
push
sbb
inc
cli
push
aam
jecxz
ret
lds
repnz
ror
dec
ficom
outs
in
outs
fcomp
xor
js
imul
in
(bad)
xlat
pop
dec
jno
mov
enter
inc
sbb
sbb
data16
popa
popa
mov
pop
mov
inc
hlt
enter
inc
(bad)
out
pop
adc
or
push
scas
fwait
pop
in
test
popa
popf
imul
push
in
push
inc
imul
and
test
data16
call
cmp
xchg
ja
xchg
loopne
dec
cmc
fldcw
push
dec
cld
stos
fcom
rcr
mov
xchg
add
or
jmp
iret
pop
fidiv
imul
popf
ds
adc
aaa
mov
mov
ret
loop
xor
cmc
int
add
sub
ins
mov
sub
mov
push
shl
cmp
aaa
dec
adc
inc
xchg
pusha
dec
in
pop
gs
outs
movs
gs
aam
xchg
ds
in
sub
pop
jecxz
stos
push
into
ficomp
push
aas
cdq
inc
dec
mov
(bad)
pop
imul
xchg
pop
pop
pop
inc
adc
mov
(bad)
data16
loopne
mov
lock
out
mov
mov
jns
pop
fimul
push
add
jno
jle
mov
cmp
jmp
fs
sub
jle
repnz
and
int
or
dec
retf
push
div
mov
jl
sbb
std
cmp
push
inc
ds
dec
jmp
imul
inc
cmp
fcom
mov
callw
sub
dec
aam
sti
in
cld
cmp
jns
pushf
push
cmp
jl
add
stc
gs
call
mov
push
xchg
ins
inc
xchg
sub
push
jmp
inc
cmc
or
pop
xor
ins
ins
fild
mov
xchg
push
je
lods
retf
(bad)
sti
xchg
xlat
and
imul
pop
jge
loop
cdq
ret
outs
sbb
mov
xor
or
in
mov
(bad)
and
in
mov
xchg
add
and
fs
cdq
inc
or
movs
or
push
dec
cs
pop
out
mov
inc
dec
add
jle
jg
in
xor
les
retf
rcl
adc
movs
enter
jmp
jge
mov
popf
xchg
inc
pop
das
daa
out
mov
cmp
cmps
add
xchg
inc
movs
sar
js
mov
daa
pop
popf
xchg
pop
loopne
jne
iret
and
jbe
mov
mov
push
cli
cmp
arpl
cmp
movs
cmp
xchg
add
out
cld
(bad)
and
pop
std
sbb
pushf
add
cmc
mov
scas
mov
(bad)
aad
enter
jo
push
adc
cmp
push
imul
pop
cmp
popa
fnstsw
mov
scas
xor
mov
and
and
sbb
ror
jo
and
push
div
push
outs
sbb
imul
call
sbb
fdivr
mov
dec
popf
mov
push
jae
fld
lea
jecxz
mov
aam
dec
(bad)
lods
aam
sbb
dec
xchg
outs
lods
retf
(bad)
pop
cmp
dec
inc
adc
and
adc
sub
int
dec
pop
jl
into
xor
sub
sub
call
ins
rol
(bad)
dec
sub
cmp
inc
retf
mov
jmp
cmc
xchg
and
pusha
cld
js
or
cmp
mov
xchg
popf
(bad)
loop
mov
or
xchg
add
(bad)
jmp
or
mov
and
in
mov
in
jmp
jge
or
add
ret
rcl
ins
xchg
push
test
mov
push
and
fistp
loop
clc
xor
or
xchg
aaa
das
into
push
cs
dec
adc
mov
pop
scas
adc
arpl
dec
or
popf
sbb
push
sbb
loop
sub
jns
out
shr
fistp
xlat
push
and
scas
outs
in
cmp
cmp
mov
mov
fcomp
and
add
stos
xor
mov
dec
and
out
loope
in
or
dec
cmp
push
pop
inc
xchg
vorps
in
jg
cmc
cmp
std
xchg
pop
jmp
mov
jae
xchg
pusha
jb
adc
fwait
jmp
pushf
mov
xchg
inc
test
cmps
xchg
aam
xchg
sub
ret
pop
or
loope
xor
fild
mov
enter
js
gs
daa
xor
lds
into
push
and
shr
push
adc
pop
xlat
pushf
add
push
mov
mov
mov
mov
pushf
jno
jns
retf
adc
add
ja
push
jo
or
test
pop
jl
imul
aad
sbb
dec
lods
aam
dec
fnstsw
scas
jns
scas
xchg
or
pushf
push
(bad)
call
data16
scas
jl
xor
push
and
cmp
cs
or
fnstcw
int3
repnz
mov
adc
xchg
add
fwait
mov
scas
repnz
in
xor
mov
xor
rol
jbe
and
popf
imul
js
stos
add
movs
xor
cmp
inc
cli
or
xor
inc
jo
inc
dec
jae
iret
(bad)
lock
pop
jnp
add
adc
xor
jns
inc
or
dec
xchg
mov
cmp
lock
fcom
cmp
inc
mov
add
sahf
sbb
cmc
or
(bad)
and
arpl
das
jb
xor
sub
inc
push
sbb
(bad)
mov
ficomp
sub
leave
aad
jne
xchg
push
repnz
test
call
pop
sbb
aam
dec
mov
or
call
stos
mov
(bad)
xor
jns
mul
add
jle
mov
in
addr16
mov
shl
cmp
mov
or
xor
push
mov
arpl
add
adc
jl
pop
jle
pop
sub
sbb
repz
pop
lock
mov
push
jecxz
inc
and
mov
adc
add
js
xor
lods
scas
dec
xchg
adc
push
sub
xchg
push
movzx
mov
out
jmp
push
loop
cmp
in
mov
inc
sub
xor
push
stos
xor
push
in
and
mov
mov
pop
xor
int3
mov
ror
mov
loopne
sahf
sbb
cmp
pop
xchg
sbb
mov
jmp
cmp
jne
xchg
jmp
(bad)
mov
xor
xor
dec
stc
xchg
rol
cdq
push
xchg
in
jecxz
jbe
and
imul
das
enter
aam
stc
ins
push
int3
jecxz
sbb
sbb
mov
imul
jle
aaa
aas
mov
mov
mov
pop
(bad)
cmp
mov
inc
or
adc
sti
jo
mov
fcomp
mov
test
sub
mov
call
in
into
xchg
mov
mov
cdq
mov
mov
sbb
mov
jb
cmp
xchg
mov
mov
dec
cmp
add
nop
int
loop
adc
and
and
repnz
jge
int3
cmp
mov
sahf
xchg
in
push
cwde
repnz
xor
sti
repz
sahf
fsub
lahf
mov
retf
jae
adc
add
mov
test
jnp
push
mov
add
xor
test
aad
movs
mov
outs
cmp
push
lods
jle
xor
adc
cmp
add
in
or
fist
in
lea
js
cmps
mov
mov
or
shl
cmp
aaa
into
adc
bswap
xchg
call
pop
dec
ins
adc
sbb
popf
sahf
lods
xor
out
ret
mov
mov
mov
bound
fadd
jae
or
pop
mov
cmp
test
jge
add
mov
pop
imul
aaa
xchg
xor
or
(bad)
mov
adc
jae
movs
dec
pop
adc
and
mov
(bad)
aas
jnp
sub
cmp
das
push
add
jno
sbb
mov
and
mov
push
test
xchg
cld
test
jg
and
out
loope
cs
sahf
jmp
mov
jle
dec
cmp
push
cmp
hlt
call
stos
repz
pusha
nop
jae
adc
jl
jno
mov
mov
xchg
leave
jnp
iret
mov
lods
retf
sub
out
sbb
mov
lock
sar
mov
inc
jmp
fwait
retf
mov
pop
sbb
xchg
push
sub
outs
pop
xor
pop
mov
or
xchg
call
repz
inc
lock
and
inc
das
jo
push
add
out
pop
out
sub
jae
inc
mov
call
daa
adc
cmps
(bad)
xchg
jbe
retf
ss
fucomip
jge
lods
aad
call
mov
lds
xor
fsubr
out
mov
aam
retf
clc
(bad)
fst
ret
mov
xchg
mov
fild
sbb
sbb
jp
mov
mov
aam
jle
outs
fs
mov
ret
(bad)
mov
mov
ins
(bad)
pop
(bad)
out
dec
xchg
ins
push
dec
push
pop
mov
clc
mov
mov
push
sub
or
xor
pushf
or
out
cld
(bad)
and
inc
xchg
adc
pop
inc
aam
test
gs
sti
dec
cmps
lods
xchg
dec
cmp
and
inc
dec
dec
dec
(bad)
in
inc
xlat
pusha
sbb
or
dec
lods
mov
out
xor
add
push
out
cmp
push
or
mov
les
mov
mov
rol
retf
or
add
test
sub
cmp
test
mov
push
and
xchg
(bad)
(bad)
mov
add
aad
dec
mov
xchg
xchg
ret
dec
xchg
nop
mov
fs
dec
js
mov
mov
push
out
lea
pop
xor
popa
mov
add
xor
test
jnp
dec
(bad)
mov
jp
sub
retf
je
cmps
popf
das
cmp
push
ret
enter
mov
je
bnd
movs
mov
shl
mov
into
mov
adc
retf
mov
adc
das
test
test
jp
test
(bad)
fwait
nop
mov
mov
out
sbb
jae
ret
loop
xchg
pop
dec
jbe
add
xor
out
repnz
jns
xchg
fsub
mov
cmp
std
jae
dec
or
push
inc
cmps
(bad)
std
adc
dec
hlt
xlat
lock
mov
int
push
pop
xchg
div
inc
ins
adc
stc
sbb
inc
int
loop
rcr
outs
xor
jnp
nop
ret
enter
cmp
repz
imul
aad
mov
mov
add
test
out
out
xchg
push
repnz
add
ror
xchg
jo
data16
push
in
add
fbstp
xor
mov
mov
xchg
dec
mov
jnp
shl
enter
(bad)
mov
cmp
sahf
sub
pop
mov
pop
std
cmp
arpl
xor
fwait
(bad)
mov
pop
push
xlat
mov
adc
dec
ss
jns
and
jno
or
fistp
out
sbb
sub
(bad)
(bad)
mov
loope
iret
cmc
out
xchg
inc
add
cmp
add
mov
out
pop
bnd
and
mov
(bad)
sub
sbb
dec
leave
inc
adc
in
(bad)
cdq
dec
xlat
lea
add
repnz
pop
std
dec
and
xchg
adc
pop
ret
sbb
(bad)
cli
jb
xchg
jl
jbe
pop
jmp
stos
cdq
mov
mov
test
nop
cmp
add
mov
mov
mov
hlt
(bad)
and
arpl
push
inc
in
sub
jo
rcr
xchg
cld
xor
push
push
cmp
dec
les
adc
je
(bad)
mov
mov
shr
mov
push
(bad)
neg
push
lods
jae
or
cs
ja
inc
ja
or
push
pop
adc
hlt
mov
cmp
xchg
add
sbb
(bad)
jnp
enter
scas
inc
mov
fs
jl
je
ins
mov
pop
pop
fwait
sub
outs
dec
inc
and
mov
out
adc
cwde
cmc
fimul
fistp
xchg
out
dec
xchg
jnp
rcl
adc
fwait
ret
dec
fs
fidiv
inc
mov
clc
mov
aaa
call
or
imul
shr
jmp
test
mov
dec
jne
pop
sbb
inc
cmp
rcr
sbb
movs
ja
dec
xlat
hlt
and
push
dec
jl
xchg
es
sbb
and
mov
jnp
mov
mov
xor
arpl
mov
mov
aas
ss
out
jmp
imul
pop
ins
xlat
dec
pusha
xchg
dec
ds
repnz
je
(bad)
mov
cmp
mov
jne
jmp
mov
rcl
push
xchg
fdivrp
arpl
pop
sub
in
push
sub
sbb
call
aam
xchg
std
pop
ja
sbb
sub
cmp
cmp
pop
loope
push
mov
mov
stos
inc
adc
push
lods
call
in
arpl
xchg
xchg
pushf
sub
dec
add
retf
(bad)
lock
in
pop
sbb
adc
push
loope
sbb
shr
retf
inc
add
pop
adc
and
pop
sub
mov
adc
jl
div
xchg
test
sahf
mov
js
adc
mov
xchg
inc
sub
push
mov
mov
push
sub
and
je
(bad)
ss
mov
sub
push
or
bound
jns
(bad)
out
test
and
mov
ja
loope
cs
cmp
xchg
call
lds
xchg
ret
sub
jp
jae
in
leave
pop
mov
and
mov
mov
jg
(bad)
int3
push
push
mov
out
(bad)
and
ret
mov
js
inc
xor
sub
dec
aad
ret
out
cwde
sub
sub
adc
std
enter
mov
add
mov
loope
test
int
mov
fstp
cmp
out
adc
mov
icebp
fcomp
or
arpl
dec
inc
fidivr
push
dec
cmps
jmp
push
mov
adc
xor
arpl
mov
fdivr
cmps
arpl
lahf
or
js
outs
lahf
cmp
imul
or
xchg
push
scas
sub
imul
push
xchg
adc
push
adc
dec
mov
stc
not
xor
aam
ffree
adc
fcmovb
add
xchg
dec
jne
aas
and
enter
sbb
xor
aas
add
enter
fdivr
cmc
mov
fdiv
fbstp
xor
mov
push
scas
or
(bad)
fimul
mov
movs
add
fistp
push
and
cmp
test
fnstsw
push
out
add
sub
jp
jge
dec
and
xchg
mov
sub
jnp
xchg
lahf
retf
sub
in
es
jns
add
fsubr
shl
push
push
ins
and
ins
es
aas
int
xchg
jb
push
cmp
fnsetpm(287
mov
sub
(bad)
mov
jmp
ror
push
xor
pop
aaa
in
aad
and
rcl
jg
cmp
mov
sub
and
mov
aad
and
retf
mov
(bad)
mov
xor
jae
xchg
jno
add
scas
dec
cmp
aam
movs
dec
mov
inc
(bad)
jmp
push
pop
inc
cmps
stos
test
or
or
lock
data16
dec
retf
and
add
or
adc
enter
mov
pop
push
fsubr
loop
mov
mov
outs
sahf
mov
mov
inc
push
in
cmp
mov
sbb
mov
mov
xor
out
ss
xor
or
jmp
lahf
mov
push
loop
xor
jl
jno
sbb
shl
jl
xor
fist
push
push
pop
int3
add
fs
mov
inc
in
stc
out
stc
call
ret
pop
dec
stc
and
push
fstp
bound
fist
clc
dec
and
pusha
dec
cdq
popa
movs
cwde
imul
ficom
loopne
dec
add
sub
push
pop
retf
repnz
add
mov
aam
inc
mov
ja
xor
inc
fimul
arpl
or
(bad)
cs
mov
out
outs
lods
daa
xlat
aaa
cmp
pop
ficom
xchg
test
clc
scas
sub
cmp
and
sti
pop
mov
sub
jg
repz
dec
lds
adc
pop
mov
jmp
lock
(bad)
mov
bound
xchg
push
stos
add
arpl
pop
icebp
xchg
adc
shr
push
sahf
cmp
dec
push
adc
shl
ss
iret
cmp
stc
in
ins
inc
push
add
or
sbb
cmp
fbstp
adc
std
xlat
ds
popf
sbb
loope
imul
repz
push
and
lds
inc
cwde
jmp
and
mov
pop
shl
and
mov
push
mov
push
adc
cmc
lods
mov
pop
pop
call
mov
pop
bnd
push
jbe
xchg
cmp
mov
dec
lods
dec
mov
jno
adc
repnz
fcmovnb
je
xchg
pop
stc
dec
mov
lock
cmp
mov
dec
int
mov
push
retf
xchg
retf
mov
cdq
imul
pop
pop
imul
cmps
aas
adc
jecxz
cs
pushf
mov
lea
xchg
into
xchg
pop
push
test
add
test
sbb
mov
mov
outs
lods
dec
dec
xchg
dec
cmp
lods
bound
push
or
or
sbb
rcl
ret
call
jmp
sub
call
fnsave
jle
cmp
cs
mov
pop
adc
(bad)
cmps
(bad)
int3
mov
dec
pop
fsubr
(bad)
push
push
xchg
mov
(bad)
jnp
cmp
call
repnz
xchg
push
push
mov
xchg
and
sbb
bound
push
out
push
lahf
add
leave
push
cmp
(bad)
cmp
arpl
mov
push
outs
mov
sub
and
mov
adc
jg
mov
add
adc
or
and
inc
and
(bad)
mov
mov
xchg
adc
add
ret
adc
mov
sub
pop
add
cld
ficomp
adc
mov
bound
lods
dec
test
cwde
jmp
arpl
loope
rol
pop
sub
pop
imul
and
cmc
add
cld
cmp
sub
pop
or
outs
iret
stos
mov
stos
dec
dec
ror
ins
aad
xor
sahf
mov
xchg
(bad)
fwait
inc
push
jne
fsub
popa
addr16
repz
iret
in
repnz
sbb
movs
jl
xor
fist
xor
pop
and
fsub
jmp
cmp
clc
aad
add
cwde
(bad)
lea
imul
pop
cmc
aaa
fisttp
inc
sub
ret
adc
jae
call
out
(bad)
ror
rcl
cmp
cmp
stc
fnsave
xor
xchg
scas
iret
inc
fild
(bad)
das
pop
adc
cs
and
push
mov
xor
or
or
cmp
in
(bad)
inc
pop
mov
(bad)
or
retf
(bad)
dec
leave
jb
rol
outs
fild
cmp
ds
cmps
out
loope
in
or
jmp
loop
(bad)
test
loopne
fistp
push
xor
sahf
pop
push
add
scas
jo
mov
ds
lods
and
lods
dec
(bad)
push
imul
(bad)
arpl
inc
test
scas
imul
mov
mov
mov
(bad)
pop
dec
(bad)
fucomp
mov
in
retf
movs
pop
lahf
pushf
xor
mov
dec
push
dec
add
xchg
mov
pop
repz
sub
ins
test
cld
xor
push
mov
and
mov
jge
push
mov
push
bound
mov
and
cli
push
leave
mov
scas
ja
mov
pop
jne
jge
cmps
imul
sub
sub
fdivr
jb
adc
rol
xchg
jbe
loop
nop
xor
shl
mov
fdiv
dec
sub
sub
es
imul
rcl
jno
jle
mov
(bad)
popa
mov
call
int
stos
ret
enterw
sbb
cmp
in
jmp
push
lods
out
push
push
cmps
mov
js
stos
retf
xchg
mov
iret
sub
inc
shl
add
add
iret
pop
stos
push
into
loope
stos
fistp
add
fs
sub
add
and
clc
sbb
mov
sub
mov
dec
fadd
jl
push
das
push
das
jne
jmp
xchg
ins
add
popf
add
adc
jl
fcom
cmp
aas
sahf
sar
lods
inc
push
jae
add
mov
push
mov
mov
mov
pop
jmp
nop
mov
mov
sub
out
sub
cmp
pushf
push
or
icebp
dec
and
fmul
fidivr
or
xor
cwde
(bad)
out
fisubr
mov
or
and
and
fisttp
mov
xchg
pop
lahf
mov
cmps
sub
dec
inc
into
or
(bad)
mov
xchg
xchg
inc
xchg
outs
add
mov
cwde
xlat
aad
mov
and
mov
std
test
pop
fstp
xchg
ins
popa
mov
inc
sbb
xor
outs
push
mov
les
fist
or
fwait
pop
pusha
push
icebp
mov
call
pop
jno
xor
or
adc
or
dec
loope
sbb
loope
aas
popf
adc
fisub
pop
iret
cmp
jecxz
test
imul
stos
dec
jp
sub
mov
ins
xchg
or
not
xchg
cmp
loop
out
cs
xor
mov
cmp
fisub
imul
xchg
pop
add
jns
out
push
pop
call
jne
pop
in
outs
lahf
in
lock
jmp
mov
aam
lahf
loope
lods
mov
cmp
sbb
in
loopne
inc
popa
and
xor
mov
int3
bound
mov
dec
mov
(bad)
imul
outs
iret
push
test
nop
bound
out
sbb
mov
mov
icebp
mov
call
pop
icebp
mov
sub
es
cmp
jmp
ret
jg
repz
xor
in
inc
mov
adc
bound
jge
push
sbb
movs
hlt
mov
mov
add
sub
dec
scas
pop
sti
cmp
loopne
fisttp
adc
jo
xchg
jne
dec
jae
bound
push
dec
sub
mov
push
clc
or
dec
push
pop
add
rcr
out
ins
and
enter
push
sub
xchg
mov
leave
arpl
cmp
xor
mov
lahf
out
cmps
into
add
(bad)
dec
adc
outs
push
sub
loopne
call
mov
dec
cmp
sbb
xor
jb
pop
push
(bad)
mov
mov
das
test
push
hlt
dec
jne
mov
or
stc
daa
ds
xor
cmp
sbb
out
inc
jmp
(bad)
mov
test
sub
lahf
fldcw
adc
sbb
test
fist
or
xor
outs
xchg
stos
rcl
mov
fidiv
cmp
xlat
xor
mov
ret
mov
fidivr
sbb
inc
pop
stos
lahf
outs
xor
andps
aam
xchg
loopne
dec
call
add
sbb
mov
or
sbb
movs
(bad)
push
pushf
sub
retf
cmps
push
retf
jne
adc
cmp
loopne
das
and
mov
popf
es
and
and
add
sbb
mov
out
cmp
inc
sbb
les
jnp
or
pop
cmps
aam
or
sub
xchg
shr
(bad)
push
ins
xchg
sti
in
xor
push
inc
adc
in
ror
mov
adc
out
out
rcr
gs
jmp
push
xchg
test
aam
int3
cs
aas
lods
pop
mov
rcl
or
cmps
ds
fadd
add
in
adc
jae
inc
push
call
mov
mov
lahf
fs
and
stc
mov
xchg
dec
and
loopne
dec
mov
sbb
les
retf
inc
and
mov
repnz
shl
add
adc
cmps
movs
test
retf
mov
test
shr
imul
out
inc
sub
mov
call
loope
push
fisub
pusha
aad
iret
add
fld
arpl
mov
pop
cmps
mov
dec
mov
sub
pop
mov
outs
out
stos
sub
scas
add
sub
or
(bad)
fdiv
inc
xor
stos
or
imul
shr
bound
push
inc
icebp
or
into
push
sbb
fild
sbb
mov
jle
mov
test
test
and
pop
xchg
xchg
sahf
jecxz
pop
pop
sub
scas
jne
out
es
fmul
sbb
ds
or
xor
sbb
movs
mov
sbb
mov
std
shl
inc
xor
push
rcr
imul
ret
sub
ret
das
cmp
adc
jge
pusha
(bad)
xor
jl
shl
push
mov
pop
jae
(bad)
pop
lods
dec
pop
xchg
lods
mov
aas
xor
dec
xor
ja
mov
sub
out
stos
jl
dec
lea
jmp
sbb
aam
xlat
out
outs
or
cmp
add
lods
aad
pop
mov
jae
xchg
xor
das
loope
and
dec
into
popf
jp
mov
outs
hlt
add
mov
mov
cmp
loopne
jp
in
inc
push
aaa
add
mov
sub
adc
fcom
push
add
jb
int3
ins
addr16
push
dec
test
out
in
push
mov
sbb
mov
in
sbb
ret
pop
lds
lods
xchg
cmp
jb
imul
in
cs
into
mov
and
outs
mov
push
arpl
push
add
inc
pop
jl
push
in
mov
fidiv
jae
aas
mov
jae
iret
(bad)
stc
dec
sar
das
std
adc
inc
sbb
and
call
mov
xchg
inc
shl
and
mov
pop
sahf
jns
inc
sub
mov
(bad)
scas
pushf
call
and
cmps
enter
add
dec
fs
cmp
movs
xchg
add
hlt
xor
popa
mov
dec
cs
sbb
leave
movs
or
lahf
push
(bad)
fild
push
enter
or
shl
adc
lahf
cmp
scas
jmp
retf
and
mov
xor
xchg
stc
mov
out
jbe
cmp
out
call
ror
sbb
mov
dec
cld
push
sbb
and
cld
or
and
in
and
scas
pop
call
xchg
dec
jge
mov
inc
push
(bad)
sbb
repz
mov
fbstp
xor
mov
sbb
or
jae
cmp
inc
dec
and
sbb
cmp
outs
cdq
jg
das
aaa
aaa
add
repz
push
in
mov
jl
xchg
lea
out
push
data16
dec
and
sub
sbb
push
mov
mov
in
dec
fcom
aaa
in
add
mov
mov
and
sub
fnstsw
dec
jg
inc
retf
push
mov
push
inc
daa
test
mov
add
inc
jo
icebp
mov
cld
adc
inc
dec
xor
ret
sbb
fsub
adc
cmc
cmp
cwde
sbb
xor
bound
jecxz
dec
loopne
cld
push
icebp
jmp
jo
loope
outs
pop
leave
xchg
rcr
mov
hlt
mov
out
test
(bad)
mov
pop
push
xchg
adc
icebp
push
xor
mov
sub
dec
push
int3
popa
(bad)
mov
int3
lea
sub
xchg
xchg
jl
mov
fidivr
out
out
xor
inc
test
xor
sub
stc
push
pop
shl
ds
sub
call
pop
in
adc
adc
fimul
(bad)
cdq
mov
(bad)
pop
mov
mov
xchg
push
pop
ret
push
popa
(bad)
aad
int
xchg
xor
jb
in
js
nop
pop
push
cli
xor
sti
jg
and
sbb
mov
retf
dec
ja
jg
shr
dec
cmp
in
stos
arpl
cmp
adc
out
mov
xor
shr
sub
sub
enter
mov
jno
cwde
lods
mov
push
jae
add
sar
ret
jae
loope
imul
and
movs
xchg
xor
adc
push
mov
xor
and
sbb
lea
xor
and
cmps
adc
loope
push
mov
add
int
pop
adc
push
imul
fucomp
sub
lds
imul
jecxz
lods
xlat
iret
add
cli
adc
cmps
mov
pop
es
fild
add
mov
push
les
scas
xchg
mov
scas
ficomp
inc
test
cld
jecxz
jmp
aad
orps
call
sahf
hlt
xor
sbb
sahf
fwait
cmp
inc
cmp
lods
xor
inc
cmps
jno
(bad)
push
pop
data16
adc
mov
ins
push
out
data16
mov
leave
loopne
xor
sbb
mov
ret
stos
or
sti
jge
mov
push
pusha
push
mov
test
stos
sti
clc
cmp
ja
pop
sbb
adc
adc
xchg
popf
jp
aam
mov
and
cmps
dec
shl
rcr
addr16
mov
jecxz
xchg
add
jmp
addr16
out
sbb
daa
movs
dec
add
xor
pop
rol
outs
stos
push
fnstenv
out
xchg
jle
loop
test
mov
jmp
test
jne
in
and
jecxz
or
sbb
pop
(bad)
sti
shl
fistp
sbb
and
xchg
pop
mov
fsubp
daa
rsqrtps
daa
dec
test
xchg
je
mov
stos
adc
push
shl
mov
xchg
enter
lds
jns
stc
xchg
repnz
sbb
or
add
mov
mov
cmp
xor
into
add
in
(bad)
retf
adc
pop
mov
std
div
mov
or
dec
cwde
(bad)
fwait
sub
dec
and
or
and
(bad)
loop
retf
jge
outs
mov
inc
fcom
sbb
add
loopne
cdq
cmp
xchg
cmp
in
mov
clc
mov
and
dec
or
sbb
mov
dec
cli
aas
jnp
mov
in
mov
int
sti
call
mov
inc
xlat
cwde
retf
push
push
and
inc
retf
out
out
pop
adc
add
jnp
xor
sub
jbe
scas
call
push
stos
jp
mov
xor
fsubr
sahf
jmp
lds
imul
dec
mov
mov
adc
sbb
and
movs
imul
js
cld
mov
and
in
mov
cmc
inc
sub
push
xchg
cmp
pusha
sbb
mov
mov
push
in
mov
ins
scas
dec
ror
mov
adc
sub
cmp
mov
scas
dec
xor
call
repnz
inc
call
lar
jnp
ficom
repz
push
movs
jmp
cmp
cmp
add
sub
lock
mov
mov
iret
add
and
int
inc
repnz
lock
inc
icebp
push
scas
mov
push
jo
js
xchg
out
fnstsw
xor
in
ficom
fmul
sbb
dec
jnp
add
(bad)
mov
push
mov
test
mov
mov
inc
dec
inc
popf
(bad)
shr
leave
clc
call
retf
gs
fsubr
lea
icebp
cmps
and
sbb
push
add
call
in
cli
xchg
ins
(bad)
push
fnsave
mov
outs
xor
jp
das
and
lahf
mov
stos
fcomp
mov
stos
addr16
xchg
cmp
mov
lahf
movs
pop
lods
aam
add
and
fdivr
imul
sbb
jno
loope
and
out
mov
jmp
sub
mov
not
jnp
(bad)
adc
mov
add
pop
(bad)
loop
call
cmp
mov
jmp
fbld
shr
inc
retf
scas
loopne
add
inc
setp
push
xor
ins
mov
fbstp
sub
pop
xor
fwait
mov
ret
pop
bound
sbb
not
push
icebp
xchg
and
cmp
push
(bad)
and
mov
adc
ins
add
imul
(bad)
cmp
mov
ret
aas
mov
loop
xchg
pop
lods
(bad)
cmp
jecxz
pop
popf
xchg
push
adc
data16
pop
cmp
fcom
ds
ss
test
std
shr
int
sub
push
cmc
xchg
jae
jae
xchg
pop
push
mov
fld
sbb
adc
ffree
pop
fstp
out
popa
push
idiv
mov
push
scas
cli
and
adc
ja
mov
movs
mov
das
sbb
dec
xchg
int3
xor
pop
aas
imul
sbb
into
mov
sub
arpl
fdivr
scas
sbb
cmp
or
cmp
mov
fsubr
fild
adc
pop
in
adc
xchg
push
loopne
mov
jae
sahf
mov
je
sub
aaa
outs
cld
xor
ret
xchg
popf
ret
aaa
pop
retf
pop
stos
push
cmp
bound
dec
test
and
addr16
and
shl
nop
jno
mov
mov
adc
loopne
cmps
sub
mov
idiv
pusha
push
sub
and
sub
shr
adc
pop
rol
pushw
std
cld
mov
jnp
fst
adc
inc
pop
cdq
inc
jge
or
push
adc
jge
jns
retf
dec
pop
ss
add
dec
cmc
not
test
aad
mov
(bad)
cmp
jl
or
scas
sub
ins
test
pop
outs
add
test
cwde
bound
ins
arpl
fstp
push
dec
xchg
aam
add
jmp
pop
pop
sahf
xchg
mov
lds
test
push
jne
adc
xlat
retf
aas
bound
retf
ret
xchg
leave
ss
shr
mov
call
retf
xor
aam
es
sub
dec
fcom
sub
dec
pusha
mov
jnp
mov
add
stc
addr16
sahf
mov
popf
pop
repz
jle
scas
lock
fsubrp
daa
mov
into
sti
cdq
jmp
out
sbb
jl
(bad)
cmc
and
sub
jge
in
xor
test
push
cdq
stos
fistp
shr
cmp
fs
inc
rol
and
rol
ins
in
push
cmp
(bad)
aas
xor
addr16
fucomp
xchg
(bad)
push
inc
cmps
daa
mov
ss
fucomip
or
jle
dec
dec
loop
int3
arpl
jg
push
popa
out
adc
xor
hlt
push
into
inc
add
(bad)
fcmove
stos
pop
inc
jle
(bad)
ficomp
cdq
or
leave
mov
dec
lea
dec
jnp
and
fdiv
mov
cs
or
ror
push
ins
xchg
fsubr
iret
jge
popa
shl
mov
and
mov
mov
ret
xchg
ja
(bad)
add
push
or
fwait
cmps
inc
retf
push
gs
leave
out
movs
push
(bad)
fsincos
sbb
cmps
pop
mov
jge
rcl
xchg
pop
out
jbe
sub
xchg
push
and
clc
mov
ins
iret
je
pop
or
pop
lahf
and
push
cmps
out
ins
cmp
sbb
mov
sbb
dec
xor
push
or
das
pop
int
inc
test
retf
sub
lds
sbb
adc
fdivr
and
jae
stos
(bad)
rol
enter
dec
adc
mov
mov
jb
hlt
jmp
arpl
push
call
mov
out
out
or
aad
xor
xor
scas
mov
sbb
mov
xchg
xchg
adc
stc
jns
jno
mov
nop
sti
xor
sbb
lods
push
and
adc
stc
ficomp
cmp
push
lods
jne
inc
push
std
or
je
sahf
dec
xchg
or
shl
outs
sub
test
test
or
sub
xor
push
mov
imul
lahf
push
(bad)
cs
retf
push
jmp
cmp
out
mov
pop
sbb
addr16
adc
adc
pusha
dec
and
loop
fstp
push
pop
lea
pop
sahf
adc
enter
dec
das
clc
fs
outs
loopne
add
int
rol
add
jb
imul
mov
les
mov
or
scas
lea
jle
jp
sub
fisttp
jge
mov
imul
rcr
cmp
bound
xor
mov
inc
pop
push
sbb
mov
fidiv
dec
inc
xchg
sahf
or
leave
dec
ins
pxor
sbb
mov
popf
sbb
test
xchg
sub
mov
push
or
nop
std
pop
lods
xor
xchg
out
cwde
mov
out
scas
pop
je
rcr
jo
ret
and
push
call
out
sbb
mov
inc
test
adc
jo
xchg
stc
enter
das
rcr
xchg
into
in
and
sub
sub
sbb
(bad)
mov
lods
sub
out
test
push
loopne
in
lods
cmp
sbb
sub
pop
dec
out
jg
xchg
add
adc
push
inc
enter
pop
or
sbb
in
add
xlat
and
adc
dec
xor
add
cdq
data16
cs
fcom
shl
popf
retf
jnp
adc
loopne
sub
pop
inc
repnz
or
and
push
ins
adc
bound
sbb
mov
mov
scas
jnp
jp
inc
pop
add
push
or
fnstcw
aad
retf
inc
sbb
add
stc
sbb
mov
mov
les
fldcw
push
pop
outs
leave
mov
dec
or
or
mov
xchg
das
imul
es
adc
call
(bad)
jmp
push
lods
push
sub
scas
jb
ror
out
inc
or
push
dec
inc
inc
aam
jle
cs
retf
fdiv
in
add
xchg
push
ror
pop
movs
xor
add
jns
xchg
ror
jae
(bad)
arpl
xor
pop
cli
mov
loopne
dec
das
inc
shl
cli
cdq
dec
or
mov
xor
loop
sbb
loop
sahf
xor
(bad)
call
adc
imul
rep
jo
adc
arpl
cli
mov
push
jge
(bad)
sahf
loopne
dec
xchg
mov
mov
addr16
jmp
pop
mov
push
inc
jbe
xchg
mov
test
dec
lock
or
and
ins
add
push
adc
iret
mov
addr16
ss
mov
test
xor
bound
das
jg
inc
dec
adc
rcl
jge
and
out
psubw
imul
dec
dec
mov
cmp
adc
jl
mov
jne
add
and
add
and
or
lock
jno
xchg
es
in
push
(bad)
daa
pushf
in
lods
sub
or
push
dec
cdq
cmp
mov
sub
mov
or
lods
add
xchg
xlat
out
dec
and
jo
out
jns
or
test
enter
cld
pop
int
pop
jo
jne
pop
out
fcmovnbe
mov
call
jbe
jbe
fidiv
sbb
and
and
mov
gs
and
test
outs
and
cmc
in
dec
sub
adc
les
daa
jle
mov
(bad)
fisttp
shr
mov
cmp
nop
fcmovnb
jno
pusha
mov
addr16
xchg
or
daa
sbb
call
push
cwde
jbe
addr16
dec
jns
add
and
mov
out
inc
(bad)
popa
jg
mov
jno
dec
ins
sbb
jns
fisub
je
bound
pusha
sar
jae
xchg
sub
jae
div
jbe
sub
dec
dec
push
cli
fsubr
popa
sub
sbb
ret
ss
jmp
inc
add
out
mov
xchg
dec
int3
jecxz
cmp
fwait
mov
mov
mov
popa
dec
mov
icebp
mov
add
(bad)
cdq
iret
fdiv
xchg
mov
pop
out
xchg
aad
mov
inc
mov
fwait
mov
lods
and
dec
fs
mov
mov
add
and
mov
cmp
cmp
pop
test
fistp
ins
push
sbb
movs
inc
rol
test
bound
cmp
leave
xchg
mov
jmp
and
cs
dec
or
es
mov
jmp
aas
aaa
fisttp
pop
adc
jmp
xchg
out
push
imul
stos
movs
lods
and
xchg
mov
loope
ret
mov
aam
cmp
bound
arpl
jl
sbb
repnz
data16
jns
xchg
shl
inc
and
dec
jb
pop
pushf
xor
and
cmp
push
xchg
mov
pushf
rcr
outs
dec
pop
test
add
std
xchg
mov
outs
mov
std
retf
add
das
xchg
push
cs
pop
adc
xor
repz
jmp
pop
cwde
pusha
call
aam
(bad)
xchg
lods
sahf
repnz
js
mov
xor
inc
idiv
or
cmp
mov
lock
xor
jp
xchg
push
iret
in
repnz
das
sbb
cli
lods
jb
out
rcr
std
cmp
(bad)
and
loope
adc
mov
sti
sub
cld
xlat
xor
add
jo
mov
gs
(bad)
fstp
bound
(bad)
loop
or
popa
push
setnp
sub
cmp
pop
aaa
mov
add
ret
jecxz
fdiv
inc
ret
scas
jae
fldcw
out
cdq
pusha
xchg
mov
ins
mov
or
add
pop
pop
cwde
sbb
lods
stc
cs
sub
ret
adc
gs
mov
add
xchg
jb
or
dec
mov
inc
fimul
and
dec
cmp
inc
adc
js
pushf
sbb
jnp
inc
cmp
dec
xchg
test
(bad)
call
pop
sub
test
ja
pop
lods
pop
imul
enter
xchg
out
leave
loope
mov
cmp
lahf
xchg
stos
pop
les
dec
add
xchg
pusha
popa
(bad)
loopne
push
fidivr
xchg
jbe
scas
aaa
fwait
xor
xor
sahf
and
ds
or
lock
cld
pop
test
sbb
cli
test
mov
call
shl
cmp
outs
loope
fisub
test
popf
mov
jmp
rcr
sbb
dec
ficomp
lods
icebp
adc
add
mov
repnz
test
iret
sub
pop
inc
xchg
or
sub
rcl
(bad)
stos
(bad)
je
and
mov
into
or
pop
inc
test
fdivr
lods
ret
fstp
mov
lds
adc
push
or
xor
aaa
push
pusha
call
repnz
xchg
pop
enter
push
or
adc
sbb
outs
dec
loop
jns
mov
inc
cmp
stos
fstp
in
les
test
data16
jo
adc
cmps
mov
loope
jae
and
fnstenv
fs
push
push
test
jg
jmp
fs
cdq
mov
(bad)
inc
jg
cmp
adc
xor
pop
xchg
jmp
mov
cmps
xchg
emms
rcl
mov
ss
jmp
xorps
in
push
mov
push
arpl
stos
mov
mov
push
jae
mov
dec
ret
sbb
sar
in
aad
(bad)
jmp
mov
leave
repz
repz
push
mov
(bad)
pop
jo
jp
cmp
loop
fdiv
fadd
pop
movs
mov
das
(bad)
stc
(bad)
loope
inc
xor
popf
je
lods
sub
je
and
imul
adc
and
sbb
pop
sti
shl
dec
out
inc
push
mov
loop
lods
shr
mov
add
lahf
and
mov
sahf
cld
jae
push
dec
aam
mov
js
js
test
pop
fwait
mov
jno
cmp
sbb
and
push
cmp
js
out
push
stc
mov
repnz
vrsqrtss
mul
test
ss
fstp
add
sub
mov
rcl
or
and
jle
sbb
mov
sbb
push
inc
inc
outs
das
xchg
xlat
leave
lock
scas
cmp
xor
xchg
mov
loop
or
test
mov
xor
sbb
int
ds
ror
mov
xchg
push
mov
(bad)
and
dec
inc
sub
sti
sti
retf
js
(bad)
mov
lahf
jnp
pop
jmp
arpl
add
or
test
push
mov
mov
enter
jno
sbb
dec
pop
cwde
sub
cmp
out
jno
(bad)
stos
mov
xchg
mov
mov
into
jmp
movs
ins
sub
retf
ret
out
lahf
(bad)
(bad)
push
mov
xchg
frstor
mov
inc
sub
outs
(bad)
movs
inc
push
mov
sbb
lods
mov
inc
mov
and
scas
inc
pop
push
xchg
nop
hlt
shr
bound
rcl
lods
adc
loop
ins
mov
fs
or
push
and
aam
scas
pop
retf
mov
stc
leave
inc
xchg
inc
inc
movs
xor
cli
xchg
ret
sbb
inc
pop
jno
int
mov
or
mov
popa
mov
cmp
outs
jl
pop
pop
popa
leave
(bad)
outs
jne
daa
push
loope
mov
(bad)
fdivr
xchg
ss
xchg
mov
mov
dec
arpl
or
iret
and
iret
mov
xchg
ja
shl
scas
or
mov
sbb
mov
cmp
(bad)
loopne
pop
pop
xchg
fcmovbe
cmp
stos
inc
sub
sti
inc
jne
shl
sbb
out
mov
mov
leave
dec
mov
mov
sbb
jb
cmps
outs
pop
ror
jecxz
call
loope
rcl
pop
xchg
in
pop
addr16
pop
cmps
enter
stc
dec
xchg
push
imul
push
xlat
enter
clc
lods
dec
push
push
jp
mov
ins
xor
cmp
out
inc
cmps
mov
inc
inc
adc
int3
pop
ficomp
(bad)
xchg
ss
mov
inc
pop
xchg
mov
clc
ja
div
imul
cmp
inc
icebp
popa
out
adc
test
int
dec
out
sbb
pop
xchg
mov
scas
sbb
or
add
or
shl
nop
inc
repnz
push
pop
mov
push
fdiv
cmp
mov
aam
dec
lods
repnz
dec
mov
xchg
aaa
sbb
faddp
sub
cmps
out
pop
inc
mov
clc
xchg
(bad)
xor
jl
add
(bad)
push
adc
mov
mov
je
aaa
pushf
ror
(bad)
inc
(bad)
cld
jecxz
adc
or
push
push
clc
es
fadd
fadd
jecxz
test
mov
mov
int3
lahf
call
sahf
push
aam
inc
icebp
sub
mov
mov
jmp
sub
xlat
push
cli
dec
jl
shl
dec
pop
dec
mov
push
in
nop
sub
jno
cmps
push
sbb
neg
cmp
or
aaa
stos
jne
inc
xor
xor
out
neg
fld
imul
add
cs
mov
sti
arpl
lods
mov
jno
mov
bound
sbb
stos
mov
xchg
adc
ficomp
es
add
nop
lahf
aam
stc
push
jne
call
imul
jns
(bad)
fsub
mov
jl
std
stc
popf
test
cmp
fwait
repz
mov
cmp
sbb
in
adc
lock
mov
fidiv
popf
iret
retf
stc
add
sub
out
gs
add
sbb
imul
xchg
movs
stc
dec
xchg
retf
imul
push
imul
ins
test
push
and
jns
inc
(bad)
cli
inc
test
popf
cmp
(bad)
les
les
test
arpl
arpl
imul
jne
xlat
jnp
aam
inc
rcr
sar
movs
and
inc
xchg
shl
jae
mov
sbb
push
mov
cmp
das
jmp
or
nop
cli
ret
sbb
loopne
push
dec
lea
lods
aaa
mov
popf
adc
jg
add
pop
adc
dec
add
mov
pop
add
data16
add
cmovb
push
rcl
mov
mov
fsub
movs
out
jecxz
int3
fcmovnbe
hlt
(bad)
dec
loopne
push
gs
into
pop
mov
mov
gs
fbld
dec
mov
ds
retf
aaa
popa
jno
ins
lods
in
das
xor
dec
ins
out
sub
xchg
add
(bad)
repnz
and
lods
sub
sbb
jmp
and
movzx
cmp
(bad)
pop
int3
cmp
fcomp
adc
xor
inc
repnz
shr
xchg
push
pop
cwde
and
adc
adc
sbb
ds
jno
ins
pop
sbb
(bad)
jmp
pusha
fs
cmp
cmps
jl
inc
push
sbb
adc
movs
pop
ficomp
sbb
xor
popa
xchg
sbb
sbb
push
sbb
push
(bad)
fcom
and
in
xlat
and
scas
dec
daa
inc
jecxz
(bad)
out
mov
mov
adc
sar
pusha
into
(bad)
fst
retf
pop
lea
jecxz
cmp
pop
cmc
jns
sub
and
mov
mov
and
mov
clc
scas
(bad)
cmps
leave
sbb
pushf
push
cwde
test
dec
xor
pop
dec
sbb
xor
aaa
mov
popf
sbb
inc
in
(bad)
stos
cmp
in
fwait
jne
clc
sbb
or
adc
(bad)
pop
mov
in
adc
push
test
loope
js
mov
out
cmp
and
pop
(bad)
cmp
imul
pop
mov
adc
cmp
call
push
adc
cmp
jns
mov
out
adc
pusha
rcr
or
xchg
xor
inc
mov
movs
test
mov
mov
pusha
fs
and
aam
sbb
rcr
or
and
cmps
out
in
out
call
repnz
shl
pop
cmp
(bad)
es
scas
xor
cwde
jne
jge
test
push
push
and
pop
enter
fld
ret
sti
test
loope
lods
pop
mov
mov
mov
jge
jb
cmp
mov
adc
mov
aas
cmps
or
pop
lea
mov
cmp
and
(bad)
sbb
fucomp
xor
cmp
xchg
xchg
and
pop
fs
inc
cmp
mov
sub
shl
mov
mov
scas
add
(bad)
(bad)
retf
in
mov
sub
fisub
das
and
push
push
pop
out
fcmovnb
ror
fistp
mov
add
pop
pushf
push
retf
ins
and
pop
inc
daa
rcr
xor
xor
jno
int3
sahf
pop
cmp
ret
mov
stos
in
fimul
xchg
cwde
jmp
jne
stos
ror
retf
std
fild
outs
repz
adc
xlat
mov
jns
xlat
add
test
imul
jb
mov
jo
cmp
test
inc
test
loope
test
movs
cmp
movs
add
and
pop
stos
sub
jae
enter
jecxz
jo
pop
pop
cmp
loope
add
(bad)
ret
push
mov
mov
push
xor
js
fsubrp
xchg
or
(bad)
mov
mov
les
push
(bad)
test
cmovo
or
add
shr
div
and
neg
imul
in
or
jmp
pusha
adc
jecxz
aad
scas
fdiv
jo
ja
inc
in
pop
jo
rcl
mov
les
jb
add
push
xchg
jmp
cmps
push
es
mov
lock
mov
jo
push
xchg
jle
iret
sbb
push
sti
test
fisttp
out
cmp
sub
jno
push
add
stos
push
jns
rol
sbb
push
sub
stos
or
out
jnp
cmp
in
sbb
cs
push
inc
push
aam
out
retf
push
jnp
mov
ins
dec
dec
movsx
out
jp
xor
repz
and
sbb
fcomp
dec
mov
mov
sar
fwait
xor
test
and
imul
inc
pushf
les
mov
jb
xor
fidiv
mov
mov
icebp
pop
push
rcr
inc
jge
shl
mov
pop
cmp
and
inc
fisubr
jg
in
popa
cdq
mov
add
pop
jle
dec
sub
mov
mov
aad
hlt
xchg
push
rcr
mov
imul
dec
loop
jle
rcl
push
jmp
inc
xchg
in
fstp
add
in
lods
cli
imul
cmc
jp
lds
pop
mov
mov
psubq
into
mov
shl
mov
or
mov
cli
push
not
inc
lods
sbb
adc
(bad)
(bad)
jno
jmp
mov
mov
cld
fmul
clc
clc
(bad)
movs
mov
ins
cmp
add
push
adc
cmp
test
test
retf
aas
in
or
lods
mov
neg
or
scas
sub
mov
sbb
dec
sub
sub
xor
imul
push
cmp
sbb
push
fist
das
mov
sbb
or
add
jmp
mov
pop
mov
adc
test
(bad)
mov
cld
sub
xor
sbb
cmp
and
dec
call
sbb
push
mov
sub
aam
retf
js
xor
sbb
or
and
fisttp
aaa
xchg
mov
in
xor
popa
jmp
mov
fimul
and
fidivr
iret
xchg
nop
xchg
cs
pop
inc
push
adc
jb
fadd
adc
test
xor
or
dec
cmp
mov
or
sub
test
fdivr
xor
test
cmp
and
and
retf
imul
jecxz
out
shr
cs
or
std
mov
scas
in
add
movs
mov
mov
in
push
pop
stos
int3
xor
jl
in
and
cmp
adc
popa
dec
mov
pop
call
cs
xchg
pop
and
popf
lods
cdq
xchg
sbb
out
daa
push
inc
mov
xchg
dec
mov
cmp
pusha
adc
gs
shl
ret
mov
and
fld
les
icebp
xchg
in
mov
adc
sti
imul
out
push
(bad)
xchg
into
cdq
mov
lock
inc
test
inc
icebp
cmp
mov
(bad)
icebp
(bad)
mov
sub
dec
jg
add
jl
pushf
jnp
cli
sbb
mov
and
shr
arpl
data16
add
mov
push
xchg
popa
adc
cmp
push
shl
dec
xor
mov
cmp
adc
div
mov
mov
or
sbb
(bad)
lea
rcl
mov
lock
jg
imul
fucomi
gs
retf
stos
sahf
mov
idiv
repnz
sbb
jae
adc
xchg
test
mov
inc
pop
maxps
dec
repnz
push
mov
mov
push
sub
or
adc
mov
push
dec
jbe
xchg
arpl
sbb
(bad)
or
adc
cwde
imul
push
jb
jbe
(bad)
sbb
push
push
xlat
and
pop
or
pop
popf
stos
pop
retf
xchg
(bad)
pop
xchg
mov
div
sbb
inc
dec
sbb
cmps
aam
int
jmp
sbb
sbb
add
movs
xor
mov
fsubr
test
xchg
adc
inc
push
sub
inc
cld
aaa
enter
xchg
jecxz
xchg
dec
(bad)
data16
retf
cmp
iret
add
mov
sbb
and
mov
push
cmp
stos
dec
in
jecxz
call
xor
sub
push
add
xor
cmp
cmp
loop
jbe
push
je
dec
jnp
fisttp
jl
movs
push
xor
sub
aaa
mov
out
ficom
mov
lsl
cdq
aad
loopne
stos
push
push
test
ficomp
cs
retf
push
mov
mov
mov
and
in
outs
addr16
jl
mov
sti
in
dec
jge
sti
dec
stos
push
loopne
xchg
je
mov
add
sahf
jmp
pop
ja
sbb
sub
xor
pop
cdq
add
movs
adc
sub
outs
das
repnz
call
int
leave
inc
je
loope
retf
out
fdivr
xchg
pusha
xchg
rol
sbb
dec
inc
mov
ror
(bad)
inc
into
in
(bad)
cld
push
jge
dec
or
inc
mov
data16
pop
xor
and
dec
pop
stc
push
test
fs
sbb
mov
jmp
stc
cmp
mov
cmps
enter
pop
jae
mov
push
xchg
into
xor
mov
rol
sub
outs
ffreep
inc
xchg
or
cmp
shl
mov
push
scas
rcl
or
aad
mov
pop
mov
inc
mov
mov
cmc
add
(bad)
pop
fxch
jp
repnz
das
sbb
(bad)
fst
add
mov
and
dec
cmp
out
pop
or
and
inc
nop
call
sub
or
mov
imul
ds
jmp
inc
rcl
push
sti
cmp
pop
das
(bad)
pop
out
push
cwde
lods
sub
mov
jnp
loope
cdq
mov
pop
sub
mov
repnz
jle
xchg
fsub
mov
push
pop
cdq
stos
jmp
dec
push
aaa
or
and
in
push
popf
push
sub
test
loopne
add
mov
mov
aaa
test
enter
mov
and
in
test
cmp
xor
push
ss
int3
aam
and
dec
mov
lahf
lods
lahf
lea
xor
int
scas
jl
repz
inc
mov
int
(bad)
mov
cmps
es
frstor
mov
jle
and
xchg
test
dec
sbb
pop
jge
daa
out
add
xor
in
aas
addr16
and
cdq
jp
or
push
jb
xor
jbe
sub
lds
lea
push
jo
call
mov
push
jp
pop
or
xor
push
jg
call
and
clc
(bad)
mov
sahf
sub
dec
xchg
aas
pop
vmovsldup
add
push
cmps
je
jnp
jle
or
lock
or
cmp
mov
es
retf
mov
jmp
push
lods
mov
sbb
test
rol
imul
js
ja
lock
retf
mov
neg
jecxz
int3
dec
mov
xor
or
shr
ret
push
mov
outs
mov
add
stos
pushf
inc
js
or
sub
pop
inc
sub
mov
outs
in
inc
test
(bad)
ret
ror
leave
jnp
mov
cmp
nop
and
mov
lahf
daa
mov
lds
adc
sub
and
shl
lods
pop
pop
sti
pop
mov
(bad)
lahf
sub
xchg
rcl
rcl
cmps
push
clc
dec
aaa
test
sbb
fld
cli
shl
out
int
rcl
in
rol
xchg
loopne
out
sahf
fld
add
movs
jmp
aaa
ins
cmp
lock
retf
fsub
pushf
and
mov
inc
cmp
mov
imul
xor
out
(bad)
sub
and
mov
sahf
and
sahf
ret
jmp
icebp
lods
pop
ret
mov
add
scas
or
pusha
test
fistp
push
in
mov
dec
loopne
and
mov
test
lahf
fs
in
xchg
jl
inc
mov
pop
push
mov
rol
lahf
dec
cmp
cmp
and
shl
or
in
js
jno
mov
loop
mov
cmp
mov
fs
faddp
pop
sbb
xchg
mov
xor
push
xchg
leave
std
add
lahf
lahf
pop
sub
outs
adc
xchg
jg
jbe
repnz
adc
adc
jbe
push
lods
lea
addr16
cwde
enter
push
(bad)
mov
jge
cdq
out
mov
mov
and
pusha
and
ss
jecxz
ret
push
rcl
adc
bound
cld
cmp
inc
imul
xor
hlt
inc
sub
popa
and
push
add
stos
int
jbe
push
xor
call
dec
(bad)
or
jp
sbb
xor
sbb
xor
ins
add
jb
aad
(bad)
fmul
pop
add
(bad)
push
(bad)
xor
mov
stos
not
aaa
outs
js
or
dec
bswap
inc
sbb
pop
sub
sub
lds
(bad)
dec
mov
rol
out
ret
out
jae
add
retf
ret
sub
ins
fisubr
pop
add
cli
sbb
scas
sub
push
xchg
(bad)
leave
bound
enter
push
mov
cmp
imul
out
outs
and
inc
dec
sahf
cdq
fld
clc
add
mov
mov
addr16
xchg
xchg
idiv
sub
inc
and
cmp
adc
imul
scas
aad
jae
pop
retf
jae
icebp
adc
sbb
outs
out
xor
or
rcl
mov
mov
ins
push
xchg
xchg
mov
lea
loop
pushf
neg
sub
stc
imul
or
mul
add
xchg
mov
arpl
cs
cmp
and
in
out
mov
dec
fnstenv
jnp
hlt
sbb
push
jl
add
mov
mov
cmp
(bad)
sub
aaa
(bad)
iret
sub
cmps
jmp
push
loope
push
dec
add
adc
jecxz
out
jge
sub
fld
jb
sbb
pop
fwait
(bad)
push
jae
or
mov
in
cmc
leave
or
jge
push
imul
jl
inc
pop
ins
lea
or
ins
imul
xchg
mov
push
test
mov
clc
jne
jns
call
rol
dec
arpl
inc
out
mov
jns
mov
sbb
add
ds
retf
xchg
pop
rcl
cmps
loopne
call
mov
mov
int3
mov
mov
jmp
out
mov
shr
mov
mov
push
cwde
xchg
loope
iret
cmp
xchg
stos
pop
ins
stos
les
sbb
mov
jg
in
repz
in
je
xlat
int3
(bad)
popa
inc
mov
stc
push
mov
idiv
sbb
push
pop
or
aad
xchg
in
xor
add
bound
or
and
shl
test
sbb
jo
stc
adc
mov
pop
cmp
add
and
mov
cmp
push
sub
xchg
int3
and
mov
mov
mov
jo
test
mov
add
call
adc
adc
xchg
sub
out
mov
mov
dec
cmp
adc
aad
test
mov
adc
scas
in
push
rcr
mov
mov
mov
pop
xor
outs
mov
dec
and
leave
add
jmp
clc
jmp
int3
mov
adc
es
xchg
(bad)
stc
mov
lds
push
clc
inc
fs
adc
adc
xchg
lds
xor
mov
jl
test
fwait
sahf
mov
fmul
jmp
loope
div
cld
cmps
mov
inc
out
sbb
jno
das
push
adc
(bad)
xor
jmp
in
pop
mov
mov
xchg
stc
xchg
fld
cmp
pop
sbb
test
mov
push
sahf
add
cmps
and
and
pusha
data16
inc
push
and
jb
mov
jns
mov
hlt
add
push
pop
mov
cli
xchg
adc
jg
jmp
cmp
sbb
push
xor
push
xchg
lidtd
nop
sbb
pushf
sbb
jmp
and
outs
push
popf
push
enter
xor
jmp
jno
cdq
and
stc
lock
scas
gs
dec
add
sbb
dec
aam
inc
sub
in
pop
adc
cdq
mov
xchg
jl
out
jae
sub
lea
or
outs
push
imul
shr
xchg
sar
or
dec
lahf
icebp
mov
stos
dec
dec
gs
jg
cmp
lea
add
push
dec
repz
stc
push
es
repz
cld
jno
aaa
or
push
adc
xchg
sub
jmp
cmp
fstp
fwait
in
xor
rcr
mov
mov
and
das
inc
or
push
js
inc
test
cli
jge
in
push
sbb
or
or
cmp
fst
dec
stos
jno
inc
lds
push
ret
sti
stc
adc
int3
aas
sbb
sbb
ins
popf
inc
ja
ret
call
retf
(bad)
fnstsw
xor
(bad)
xor
mov
pop
jno
fcom
inc
cwde
cs
inc
and
add
jns
aad
idiv
repz
inc
mov
aaa
in
push
cmp
mov
add
add
push
test
dec
and
fsub
pop
xor
fs
mov
xchg
adc
pop
pop
(bad)
and
mov
(bad)
inc
add
sub
add
sar
jbe
pop
cmp
xchg
sbb
retf
call
xchg
push
sti
in
jle
cmc
add
pop
pop
sbb
popf
pop
pop
ss
ins
jne
shl
cmp
dec
pop
push
fs
test
mov
inc
loopne
push
fdiv
lock
ds
dec
inc
call
dec
adc
retf
inc
push
nop
test
add
pop
test
xchg
lea
sbb
add
and
cmp
and
data16
push
xchg
mov
std
and
adc
stc
shr
mov
or
adc
sub
loope
mov
ins
xor
idiv
sahf
ret
cmc
rcr
push
pop
mov
in
idiv
int3
lahf
out
inc
sbb
and
dec
outs
push
add
aad
rcr
in
mov
dec
lock
out
dec
mov
mov
fadd
in
repnz
fidivr
ficom
je
int
xor
popa
pushf
repnz
ror
addr16
mov
pusha
mov
push
das
dec
mov
jl
mov
cmp
mov
in
imul
dec
xor
mov
xor
shl
mov
jmp
xchg
cmp
inc
adc
in
in
dec
fist
push
pop
xor
das
addr16
adc
out
xchg
(bad)
out
xchg
shl
cmp
popf
push
mov
or
inc
arpl
aam
push
xchg
sub
mov
sub
test
cmp
test
lahf
push
push
mov
fstp
jle
xor
into
mov
and
push
retf
pop
(bad)
in
(bad)
mov
adc
or
pop
inc
setb
test
sub
jl
dec
inc
ins
jb
js
dec
fist
or
push
out
cmps
jg
nop
ret
retf
jp
pop
push
aad
(bad)
imul
lds
into
mov
xor
fist
sbb
(bad)
into
cmp
xchg
dec
lods
(bad)
xchg
cs
test
xor
sbb
cmps
sbb
int
mov
shr
sbb
mov
test
(bad)
inc
mov
push
ss
mov
bound
test
jnp
mov
inc
jne
inc
mov
and
addr16
aad
enter
or
sbb
or
pushf
in
ret
cmps
mov
(bad)
jmp
cmps
xchg
out
mov
fdivr
sbb
and
mov
sub
stos
stos
or
push
cmp
xchg
imul
in
mov
mov
push
jbe
dec
(bad)
shr
jbe
cmp
xchg
fist
(bad)
in
fs
shr
push
xor
mov
sbb
bnd
loopne
scas
lock
mov
xor
xor
push
cld
or
(bad)
cmp
clc
push
and
jmp
mov
push
push
test
cmc
mov
(bad)
push
es
sbb
mov
cmp
xchg
sub
xor
lahf
cmp
mov
or
test
shr
sub
arpl
(bad)
das
dec
retf
hlt
xor
arpl
imul
xor
dec
mov
cmp
sub
mov
stc
mov
and
and
ins
dec
xchg
into
push
xlat
or
loopne
push
call
mov
push
mov
mov
sub
inc
adc
retf
xchg
sbb
jae
inc
add
pushf
shl
outs
pop
dec
pop
stos
xchg
inc
sub
pop
and
push
or
cmp
xchg
in
cs
sbb
lahf
fwait
out
cwde
pop
push
clc
les
in
sbb
fisttp
and
push
mov
push
iret
enter
jb
mov
cmp
or
ss
pop
(bad)
repz
cmp
outs
mov
das
push
movntps
or
in
(bad)
movs
std
fst
and
add
push
lahf
or
add
adc
mov
ins
addr16
xchg
or
cmp
daa
movs
mov
or
imul
pop
loope
or
in
aaa
push
jmp
mov
fs
bound
ins
jmp
push
cmp
push
pusha
jno
out
psubusb
fnstcw
push
imul
arpl
or
dec
adc
loope
cmps
cmps
sbb
sti
ficom
add
(bad)
sub
mov
loop
jmp
push
enter
dec
sub
mov
lea
mov
gs
(bad)
sbb
adc
pop
js
cmp
and
mov
leave
xor
inc
(bad)
aad
dec
cmp
pop
dec
mov
(bad)
inc
cwde
sub
mov
stos
fst
sbb
sbb
scas
lea
and
test
fs
cmps
mov
test
cmps
pop
imul
stos
pushf
dec
(bad)
inc
test
aas
inc
fnstenv
outs
jb
cdq
and
fld
fdivr
neg
xchg
push
mov
mov
pop
pop
imul
pop
mov
into
repnz
outs
mov
test
icebp
in
std
imul
jns
pusha
pop
and
nop
cwde
repz
sub
les
imul
add
sbb
push
xchg
sbb
gs
adc
xchg
xchg
enter
test
xor
and
fdivr
jbe
pop
ss
in
ss
(bad)
and
jge
xor
xchg
outs
(bad)
mov
push
lds
cmps
sbb
int3
aaa
mov
sub
out
aam
loopne
fisttp
xor
cmp
dec
or
dec
cdq
hlt
icebp
jne
push
mov
leave
sbb
in
sbb
push
fisubr
jge
movs
movs
or
cmc
mov
mov
adc
mov
push
test
iret
mov
sub
dec
push
fiadd
push
mov
bound
xchg
and
xchg
xor
test
test
cwde
aam
daa
std
ins
push
ja
fstp
and
aad
mov
sbb
in
mov
(bad)
or
push
mov
sbb
jg
clc
and
loopne
inc
sub
add
xlat
push
or
sar
cmp
(bad)
cmp
push
push
and
and
jmp
loopne
sub
sub
lea
dec
cld
fwait
call
inc
rcl
out
adc
jge
jae
jb
leave
enter
xchg
call
imul
fmul
lods
xor
test
std
aas
daa
mov
lea
xchg
mov
out
mov
nop
mov
(bad)
push
mov
clc
inc
push
xchg
dec
mov
mov
ret
sub
mov
and
dec
sbb
bound
test
add
pushf
sbb
mov
jne
push
pusha
xchg
scas
sbb
jno
jbe
sti
mov
xchg
movs
retf
sbb
in
iret
jo
or
mov
test
sbb
xchg
les
dec
sub
das
add
and
mov
inc
mov
dec
dec
and
adc
inc
cmps
cmp
cmp
das
call
mul
sahf
mov
mov
es
ror
lods
adc
out
in
movs
std
and
push
fstp
cmp
jne
popa
fidiv
xor
add
mov
cmp
inc
ss
xchg
adc
fwait
xchg
sub
mov
cld
aad
mov
push
int3
xor
xor
out
jg
sti
jmp
fcmovne
int
cdq
push
inc
sahf
pop
test
rol
pop
clc
hlt
(bad)
ds
sti
sbb
or
mov
inc
(bad)
cmps
leave
call
test
cmps
mov
pop
stos
jbe
loope
lods
mov
es
add
fmul
pop
in
in
retf
in
daa
adc
ja
ins
movs
or
cs
sbb
and
xchg
ss
ficomp
jns
push
imul
add
jmp
or
(bad)
hlt
adc
add
push
sub
aaa
pop
pop
bound
dec
(bad)
inc
push
fstp
add
cmp
fcomp
enter
fdivr
mov
(bad)
pop
jecxz
xchg
popf
stos
mov
sbb
outs
jecxz
sbb
lldt
sbb
sahf
jmp
pop
int
jns
mov
mov
adc
sbb
add
cmp
xlat
retf
fimul
in
pushf
cdq
pop
(bad)
lock
inc
push
mov
clc
test
pop
ret
mov
mov
inc
xchg
mov
ja
sbb
ja
mov
loope
(bad)
add
mov
rcl
ins
stc
mov
aas
dec
push
mov
inc
sbb
mov
push
imul
jmp
repz
cld
or
xchg
ds
arpl
jmp
ins
or
ret
xchg
aad
push
retf
mov
xchg
sti
jp
icebp
mov
sub
dec
mov
add
adc
dec
lds
cmp
daa
lds
mov
lods
push
(bad)
ss
hlt
mov
mov
mov
loopne
cmp
test
cs
sbb
je
jbe
mov
call
retf
push
pop
mov
call
inc
push
cmp
mov
shr
mov
xchg
das
out
and
clc
lea
push
inc
pop
enter
out
and
and
dec
ds
fidiv
test
xor
and
(bad)
rep
cdq
adc
jp
ficom
std
fisub
bound
xor
outs
mov
data16
cmp
inc
push
adc
mov
xor
mov
jno
or
sti
fimul
sbb
jns
test
mov
mov
fscale
fsub
or
retf
xor
rcl
dec
mov
lds
mov
ins
sahf
fld
sar
leave
mov
mov
aad
cmps
jge
fcmovnb
(bad)
mov
jmp
arpl
inc
push
(bad)
mov
lock
scas
sub
(bad)
xlat
bnd
xchg
or
(bad)
cmp
push
add
xchg
cmps
inc
int
sub
outs
in
call
cmps
mov
xor
outs
out
cld
push
xchg
inc
imul
stos
aaa
xchg
jb
cmp
pop
add
and
rcr
or
xor
leave
jmp
retf
add
add
push
dec
hlt
mov
test
xchg
push
icebp
out
das
clc
in
inc
movs
out
pushw
std
xchg
push
aas
mov
push
pop
(bad)
push
mov
inc
inc
enter
jae
push
mov
shl
xchg
loop
xchg
int3
mov
inc
jmp
mov
xor
(bad)
ss
test
icebp
loopne
pop
fild
(bad)
xor
je
stos
pop
push
add
inc
outs
pop
and
stc
xchg
push
mov
int3
and
inc
pop
jo
mov
shr
push
mov
scas
or
imul
sub
adc
push
jg
dec
mov
add
test
mov
outs
pop
jne
xor
ins
sbb
and
add
retf
cmp
push
push
pop
and
xchg
shl
pop
cmp
mov
(bad)
div
aaa
es
fisttp
cmc
sub
jmp
test
mov
fadd
ins
push
clc
add
lds
aaa
repnz
ja
fs
xor
sub
sub
nop
xor
jl
cdq
cmp
xchg
sbb
sar
jb
sbb
and
push
aam
outs
mov
daa
fwait
dec
movs
sbb
rcr
aaa
idiv
shl
or
sbb
cmp
mov
rcl
jne
jne
cmps
repz
test
adc
lahf
in
adc
inc
sbb
ins
mov
int3
add
hlt
int
adc
xchg
fs
rcr
out
in
jmp
and
cdq
xchg
adc
std
inc
xchg
(bad)
retf
push
jg
out
fisub
jl
pop
cli
xchg
add
(bad)
iret
out
xor
or
lds
xor
dec
ror
mov
cmp
retf
shl
retf
lods
movs
test
daa
clc
es
mov
scas
lahf
fwait
mov
jno
push
icebp
and
cs
fwait
retf
aad
sbb
cmc
push
jle
add
inc
in
mov
loop
sub
cwde
aam
lahf
icebp
test
in
mov
or
dec
bound
xchg
in
sbb
mov
jb
mov
and
inc
sbb
cmps
xor
int3
psrad
lods
ins
iret
push
ret
clc
jge
inc
push
jns
inc
ffreep
dec
add
je
ins
in
int
repz
push
cwde
jle
dec
lods
mov
jecxz
scas
dec
ss
xchg
(bad)
mov
dec
scas
lahf
fnstcw
pop
icebp
movs
adc
arpl
mov
xor
add
cmc
std
into
cmps
cmp
jp
aaa
mov
pop
shr
fimul
xchg
in
mov
mov
add
dec
clc
ss
test
jne
pop
sti
daa
xor
dec
cmp
in
add
stc
pop
mov
pop
aas
out
ins
jmp
jne
stos
loope
push
pop
cmc
mov
sub
adc
imul
or
outs
popf
ss
arpl
sub
lds
mov
mov
sub
fiadd
mov
outs
or
scas
in
repz
adc
fsubr
data16
jg
pop
ins
inc
mov
jmp
(bad)
aas
mov
out
add
xchg
sub
fs
stos
mov
mov
dec
retf
repz
bound
push
adc
pop
inc
xor
or
fmul
pop
jmp
dec
push
cmc
int
sahf
call
mov
inc
ins
fldcw
aas
or
adc
out
test
scas
mov
push
inc
cmp
test
pusha
pop
cmp
sbb
imul
(bad)
sar
push
fdivr
or
xor
dec
cmc
fld
cmp
xchg
mov
data16
call
test
fwait
cmp
xor
cmp
inc
xchg
or
outs
mov
push
leave
inc
push
xchg
or
idiv
jno
imul
mov
sub
push
leave
adc
outs
leave
ret
(bad)
jmp
sbb
scas
push
loopne
call
mov
scas
ds
push
adc
movs
out
and
inc
shl
ror
add
push
js
adc
dec
shl
mov
arpl
xchg
jecxz
popa
pop
xlat
loop
and
push
lods
stos
das
mov
ret
dec
(bad)
jb
lods
push
push
sub
or
mov
jecxz
sub
adc
push
cmp
in
iret
repnz
ret
scas
add
xor
adc
fnstenv
dec
test
push
dec
mov
sahf
lods
sub
jbe
loopne
into
lahf
add
inc
and
popa
stos
mov
ret
pop
outs
push
das
mov
inc
sbb
lods
push
into
mov
jg
jne
mov
push
adc
in
mov
ins
or
push
push
xchg
cmp
outs
bnd
pop
repz
or
xchg
arpl
push
dec
pop
in
shl
mov
sub
daa
mov
mov
push
sbb
xchg
in
retf
ins
mov
push
into
mov
lds
inc
dec
mov
dec
sub
in
xchg
add
repnz
sbb
stos
mov
pop
add
jns
add
add
jns
or
jmp
inc
inc
cld
movs
adc
push
cmps
out
ins
dec
ja
cmp
add
xlat
push
cwde
pop
or
leave
push
repz
inc
arpl
dec
movs
jnp
mov
mov
sub
aad
jo
jo
cmp
icebp
xor
pop
inc
retf
dec
push
jo
dec
cli
mov
int
push
fisttp
(bad)
sar
ret
jg
sbb
mov
cli
add
inc
mul
jmp
or
scas
popa
(bad)
pop
pop
fcom
jae
cmp
push
jg
movs
ss
bound
iret
xlat
cmp
out
cmps
and
xor
scas
mov
fs
fidivr
je
inc
or
cdq
ins
lahf
sbb
mov
add
ds
cmp
imul
mov
push
or
in
in
xchg
imul
enter
int3
stc
shr
cs
xor
mov
test
cmps
lds
push
jnp
xchg
xchg
sub
shr
(bad)
fucomp
pop
add
pop
idiv
mov
es
dec
inc
mov
(bad)
adc
mov
rcl
push
mov
loopne
in
push
sti
loop
fst
adc
test
jle
scas
cmp
test
or
les
rcr
or
cmp
bound
ds
call
and
sti
pop
or
lods
mov
push
lods
scas
or
push
push
push
in
jmp
std
outs
xor
fnstcw
push
aas
push
or
sub
lods
cmp
and
movs
(bad)
in
icebp
cs
cmp
xchg
fmul
(bad)
shl
jbe
imul
pop
cmp
dec
and
mov
cld
pop
and
mov
add
dec
dec
fmulp
lods
sub
(bad)
syscall
mov
into
sbb
push
mov
(bad)
clc
push
inc
lock
jp
enter
inc
pusha
gs
dec
pop
adc
mov
pop
pop
sar
stc
aaa
or
mov
dec
jae
xor
push
test
sbb
dec
jmp
retf
mov
mov
dec
(bad)
push
or
mov
dec
xor
stc
test
std
sar
and
cmps
idiv
fdiv
stc
push
push
xor
sahf
js
jg
addr16
int3
push
and
pop
(bad)
mov
push
jge
ror
pop
mov
xlat
push
mov
push
pushf
cmp
xchg
pop
adc
sub
packssdw
fstp
and
das
(bad)
std
xchg
or
les
mov
pop
sbb
jb
mov
sub
iret
mov
fldenv
clc
pop
loope
enter
dec
inc
xor
sbb
sub
dec
repz
jne
xor
mov
jmp
aas
fisttp
clc
inc
dec
and
adc
call
inc
jns
mov
(bad)
loopne
inc
and
add
aaa
inc
js
cmp
jl
mov
lea
sbb
dec
cmp
jae
push
out
scas
xchg
xchg
sub
mov
xor
dec
arpl
push
mov
or
test
loop
mov
iret
lods
ja
pop
pop
and
shl
hlt
jns
and
xchg
xchg
daa
cs
ins
jbe
cs
ds
add
pusha
test
push
bound
xor
or
mov
out
retf
sbb
dec
pop
xor
jp
push
pusha
or
cwde
add
ds
in
fnstcw
shr
inc
mov
lahf
lods
les
xor
ss
out
cdq
pop
dec
popa
push
arpl
mov
xchg
retf
pushf
or
out
push
mov
jmp
inc
cdq
push
fdiv
xchg
dec
into
not
retf
call
pop
dec
pushf
pushf
mov
dec
fwait
dec
ss
mov
in
jns
fmul
cmp
mov
div
and
xchg
sti
jbe
ss
ds
inc
mov
rcl
(bad)
std
fidiv
iret
std
mov
leave
lods
je
dec
dec
movntq
out
cmp
push
iret
mov
sbb
sub
xor
lea
jne
out
mov
dec
inc
or
push
ror
ja
cmc
les
retf
sti
sbb
adc
or
fistp
call
mov
icebp
xchg
test
xchg
cmp
adc
mov
retf
cmp
cwde
ret
test
cdq
push
jbe
repnz
jns
rcpps
pop
call
mov
add
fwait
sbb
mov
mov
push
mov
xor
rcl
pop
(bad)
sbb
xor
fidivr
mov
jnp
cwde
sub
out
push
inc
sahf
ror
xchg
imul
xchg
test
popf
sub
push
cs
sbb
fisubr
xor
les
push
lahf
pop
sub
arpl
xchg
addr16
retf
sub
jp
(bad)
in
popf
dec
in
into
xchg
mov
cli
push
aaa
cmp
sub
and
outs
xor
test
xor
mov
data16
icebp
aad
pop
pop
dec
jg
sbb
xor
dec
cmp
daa
clc
sbb
mov
cwde
mov
xor
cmp
jp
sbb
call
adc
pop
ret
bound
ja
sbb
sub
arpl
cmp
jns
xor
xor
loopne
xchg
mov
cmp
test
mov
mov
inc
int
inc
pop
dec
and
ins
sub
cmp
dec
call
mov
test
dec
test
lds
repnz
jo
mov
pop
mov
movs
xchg
mov
addr16
push
push
cmp
sbb
xor
(bad)
sbb
mov
repz
and
jbe
mov
in
in
mov
push
fidiv
inc
push
int3
outs
popf
(bad)
mov
inc
cmp
sar
push
lea
shr
mov
cmp
(bad)
xchg
inc
sbb
pop
fldenv
hlt
push
cmp
mov
out
aam
mov
mov
or
cmp
push
cmp
jmp
add
outs
rcr
mov
mov
mov
push
not
xchg
sbb
sbb
lds
jle
sar
cmp
mov
scas
mov
inc
daa
jecxz
sbb
fmul
or
jle
aad
jo
adc
scas
aad
int3
mov
popf
lock
push
sub
adc
add
cmc
xor
xor
push
pop
push
clc
fcom
fmul
mov
and
iret
jns
xchg
jp
hlt
push
shr
das
cmp
nop
cmp
test
push
(bad)
inc
stos
xor
jbe
pop
cmp
shr
loop
add
xchg
and
xor
jne
or
xchg
add
xchg
mov
jno
mov
adc
jae
into
sahf
jmp
xchg
aam
test
xchg
cld
cld
lds
add
and
pop
push
loopne
push
inc
add
sbb
push
fwait
add
je
add
push
das
sti
sbb
add
or
clc
mov
jle
cmps
dec
cld
in
sbb
pop
bnd
adc
sub
lea
push
cld
aam
cmp
pop
adc
adc
jne
pusha
bound
or
sub
xor
mov
xchg
push
xchg
fstp
gs
shl
imul
push
sub
jno
pop
xchg
and
mov
xor
xlat
(bad)
int3
dec
xor
and
fild
adc
out
lea
mov
mov
ds
or
push
div
jecxz
clc
xchg
jno
xchg
push
dec
or
(bad)
sbb
stos
rol
and
mov
rcr
or
mov
xor
or
fild
dec
repnz
mov
sbb
call
ds
mov
mov
adc
pop
inc
and
test
mov
scas
leave
jno
mov
pop
fidivr
xchg
cmp
sub
scas
rcl
and
xor
sbb
push
xchg
std
jno
(bad)
mov
fild
fs
loope
push
loope
scas
cli
push
les
les
dec
mov
dec
mov
ret
mov
es
or
xor
pop
and
sbb
fnsave
in
retf
sub
lods
xchg
icebp
pop
dec
scas
push
pop
xchg
or
add
push
test
shl
xor
sbb
ror
jmp
aaa
xchg
sbb
xchg
in
es
in
mov
test
repz
jge
fidiv
xor
loop
push
lods
jmp
xchg
xlat
add
fdivr
xor
jp
(bad)
add
pop
xor
dec
or
jl
add
daa
fcom
push
ss
xchg
aas
fdivr
ds
pop
(bad)
push
hlt
js
xor
sbb
lods
mov
mov
nop
rcl
lahf
loop
dec
test
jle
stc
mov
mov
xchg
sbb
icebp
nop
stos
bound
jp
jnp
neg
enter
push
in
fadd
push
psubusb
jmp
push
out
xor
cmp
jg
push
test
lahf
pop
jle
cmp
pop
shr
iret
pop
sahf
jg
mov
mov
dec
push
addr16
cs
push
xchg
(bad)
jns
dec
(bad)
sti
(bad)
lea
add
sub
ins
pop
sub
bound
int3
pop
cmp
fsubp
mov
je
hlt
sub
sub
out
xor
push
ins
push
ror
cmps
ret
jno
popa
sub
out
outs
cmp
rol
leave
xchg
outs
jns
fst
or
xchg
cmp
cmp
add
or
jmp
adc
jbe
dec
pop
and
adc
cmc
mov
mov
or
push
lods
repz
stc
and
std
hlt
jecxz
ror
xchg
outs
push
pop
jge
xchg
add
mov
inc
push
test
jb
cmp
jmp
xchg
lock
in
sub
cmp
mov
jmp
inc
fistp
inc
cmp
div
icebp
cwde
repnz
in
mov
pushf
jo
and
aaa
push
(bad)
push
mov
xor
lahf
das
pushf
push
sub
mov
pop
ror
xchg
cmp
dec
call
mov
mov
aam
push
mov
div
rcl
jns
inc
cmps
dec
inc
mov
push
or
lds
and
icebp
inc
and
push
popf
jmp
cmps
movs
outs
out
enter
xor
mov
pop
cwde
(bad)
das
cmp
outs
dec
jmp
clc
(bad)
icebp
fcomi
mov
cmp
leave
adc
push
fimul
lea
inc
ins
push
test
test
sbb
xchg
jmp
cdq
cmp
movs
aas
and
pop
std
out
loopne
jb
mov
arpl
imul
jmp
movs
jae
aaa
sbb
int
cwde
stos
sahf
and
pushf
pop
ins
jmp
adc
sahf
outs
xor
rcr
cli
and
jmp
or
dec
mov
in
pop
rcr
sub
xchg
xchg
mov
pop
fidivr
les
mov
pop
inc
push
out
(bad)
in
sub
pushf
sub
pushf
pop
jbe
sar
fs
cmp
dec
xlat
mov
inc
jp
ret
(bad)
aad
dec
and
push
out
mov
cmp
fld
jge
test
inc
test
loopne
daa
(bad)
scas
cli
aaa
mov
ja
mov
and
push
(bad)
fsubr
ins
lea
or
xchg
xchg
cmps
and
in
retf
in
sbb
cld
je
gs
and
cs
or
and
mov
popf
test
mov
mov
dec
pop
mov
into
add
stc
and
or
(bad)
jno
dec
pop
mov
pop
inc
jg
or
arpl
mov
cld
inc
je
js
mov
enter
inc
loop
mov
dec
cmp
sub
ds
and
xor
pop
dec
cld
test
ja
adc
cmp
pushf
shl
test
pop
lods
jnp
xor
mov
cmp
jns
inc
in
les
pop
inc
dec
iret
rsqrtps
push
sub
dec
xor
lods
stos
jmp
sub
sbb
popa
fst
jmp
adc
jns
icebp
xlat
gs
ficom
add
cmp
hlt
and
fimul
cmp
push
into
push
sub
jp
jmp
cmps
cmp
pop
test
into
inc
out
adc
movs
mov
cmp
out
lea
jmp
jns
pop
sub
jne
pop
cmps
mov
jb
sub
sub
inc
mov
jl
fcomp
jnp
lahf
push
fsubr
es
ror
ror
cwde
cmp
push
ret
stos
xchg
push
fdivr
dec
sub
jne
movs
jmp
cmp
cmp
pop
mov
fnstenv
add
inc
(bad)
dec
push
and
xchg
sar
leave
sub
sahf
fnstsw
dec
movs
imul
jb
mov
mov
ss
dec
into
and
xor
mov
(bad)
in
daa
dec
cmp
xchg
sahf
das
loopne
les
in
popf
sub
add
fisttp
xchg
xchg
mov
mov
pop
mov
pop
mov
mov
popa
mov
addr16
mov
pop
out
xchg
cmps
repz
xor
fadd
jp
jl
enter
ds
cmp
add
in
and
int
sbb
sbb
pop
les
sbb
add
xchg
sbb
outs
iret
mov
adc
or
jge
cwde
cmp
fstp
jmp
sub
in
mov
fs
dec
ror
(bad)
push
dec
test
mov
mov
loope
in
mov
jl
sbb
mov
lds
scas
outs
mov
dec
pop
(bad)
enter
push
mov
cmps
retf
scas
jg
push
xor
mov
xchg
adc
mov
arpl
push
sbb
inc
mov
or
ins
stos
or
imul
xor
lock
inc
sub
aad
cld
and
pop
leave
inc
pop
push
dec
add
ds
dec
dec
inc
xchg
(bad)
(bad)
ja
add
mov
icebp
mov
dec
es
mov
push
rol
pushf
call
ins
xor
adc
mov
shr
(bad)
push
fnstsw
(bad)
xor
inc
and
arpl
and
ins
pop
arpl
test
xchg
adc
mov
ins
aad
aad
std
mov
sar
pusha
pusha
and
mov
mov
jbe
add
sbb
xor
aam
push
es
sar
dec
mov
ret
mov
jg
xchg
stos
and
sub
scas
pop
xchg
lods
push
sti
mov
pop
mov
mov
cli
and
inc
dec
aas
sbb
mov
shl
lea
add
mov
add
inc
idiv
loope
rcr
cdq
mov
(bad)
stc
lahf
mov
mov
mov
rcr
rcr
(bad)
mov
inc
jae
inc
sbb
(bad)
aaa
push
mov
inc
test
xor
ss
in
cld
scas
and
xchg
pop
hlt
xchg
push
push
in
nop
mov
xor
outs
fcmovu
cmp
push
sub
xchg
mov
lock
call
movs
leave
sbb
add
mov
or
adc
sub
cmp
xor
xchg
enter
or
mov
rol
xchg
mov
or
in
inc
mov
in
and
int3
mov
mov
pusha
xchg
iret
jecxz
mov
out
and
call
cmps
inc
shl
loop
test
cs
(bad)
jg
es
inc
fwait
cli
inc
je
movs
mov
aad
sar
pop
mov
ss
icebp
inc
fisubr
outs
jno
scas
in
mov
dec
jmp
mov
aas
int
iret
cli
xlat
in
push
data16
xor
daa
mov
fwait
mov
add
lods
mov
das
dec
pop
adc
(bad)
pusha
iret
sar
add
pusha
xchg
or
pusha
jecxz
inc
lods
mov
jp
jge
pop
(bad)
mov
mov
pop
lahf
xor
pop
or
jp
cdq
and
pop
xor
lds
adc
xor
retf
sub
adc
fisub
cwde
ret
ds
sub
push
cld
adc
xchg
sub
jae
fsub
sbb
mov
or
jmp
xchg
movs
out
pop
push
aam
add
outs
pop
js
loop
xchg
mov
and
sub
dec
lea
in
cmc
dec
push
cmp
out
movs
push
(bad)
lea
imul
adc
(bad)
faddp
inc
jge
add
pop
xchg
pop
jmp
shl
call
add
adc
cmp
test
out
jle
jb
rcl
dec
in
jb
xchg
push
stc
mov
(bad)
nop
retf
je
add
out
push
dec
mov
aad
mov
sbb
push
shl
movs
dec
pop
dec
mov
mov
icebp
push
cmps
retf
jns
mov
std
jns
mov
jecxz
lods
jno
push
mov
out
stos
push
iret
and
inc
inc
dec
pop
ss
cs
aad
dec
adc
cmp
jae
std
fwait
xchg
sub
movs
push
sbb
cmps
push
lods
fisttp
out
ins
mov
xor
pop
aas
jp
(bad)
cmp
push
xchg
xor
mov
pop
jo
mov
fidivr
(bad)
sub
and
cs
mov
or
push
sbb
adc
mov
xchg
test
int3
not
cmp
aad
add
and
repz
retf
mov
imul
ss
sub
jb
xor
daa
xchg
pop
jo
inc
push
cmps
neg
rcr
inc
int3
mov
dec
jmp
fs
xchg
push
push
adc
lock
shl
(bad)
nop
dec
shl
sbb
cmp
call
lds
push
mov
ret
adc
nop
cdq
inc
sub
loope
fs
cli
sub
cmp
or
xor
ss
mov
mov
stos
push
inc
ss
ds
add
cdq
adc
fsubr
cmp
out
ret
push
imul
xchg
int
add
pop
ins
push
lods
mov
cmp
xchg
cmp
stos
mov
add
mov
inc
cmp
enter
pop
sbb
das
int
adc
mov
jb
pusha
sub
jmp
(bad)
or
stos
pop
lods
rol
call
xchg
sub
movs
xor
xchg
jo
retf
(bad)
mov
neg
inc
push
push
(bad)
cwde
out
test
mov
mov
jle
shl
repz
mov
scas
lods
push
add
pop
outs
scas
cs
and
(bad)
or
inc
push
push
scas
out
repz
mov
idiv
popf
mov
adc
in
aaa
pop
cld
xchg
cwde
cmc
jmp
jmp
imul
lock
pop
pop
mov
(bad)
mov
xchg
xchg
nop
repnz
ins
dec
mov
sbb
test
mov
jo
pop
pop
cmp
fs
jmp
or
fs
mov
cli
push
fild
pop
out
and
dec
stc
rcr
imul
pop
imul
inc
iret
pop
pop
xor
and
xor
inc
xchg
jne
bound
cwde
call
and
jb
pop
cmps
push
sub
hlt
mov
int3
xchg
mov
push
add
jbe
fsubp
js
out
fdivr
adc
test
mov
mov
(bad)
in
out
mov
xlat
pop
rcr
mov
lock
mov
inc
pop
jmp
add
sar
cmps
push
mov
ror
push
repnz
cmp
mov
mov
leave
ror
push
popa
pop
mov
lea
mov
cmp
mov
xchg
cmp
fidivr
mov
hlt
ror
ja
ins
add
push
ss
sbb
(bad)
stc
push
loope
shr
movs
pop
dec
jl
sbb
movs
dec
aad
mov
addr16
lds
sub
or
jmp
shl
mov
in
fsubr
pop
push
sbb
add
outs
jnp
push
push
push
and
nop
jge
mov
dec
jmp
pop
and
fld
and
mov
rol
mov
(bad)
addr16
sbb
dec
xchg
adc
imul
cmps
mov
movs
movs
mov
cwde
fs
rcr
in
mov
sbb
jle
xlat
sbb
mov
cmp
and
push
mov
sub
cmp
ins
cmp
mov
in
stos
pop
daa
xchg
or
pop
out
and
or
ins
pop
movs
mov
dec
inc
jecxz
pushf
push
(bad)
movs
xchg
pop
fld
cli
and
int
fcomi
test
and
arpl
(bad)
call
shr
add
call
inc
xlat
shr
std
ja
mov
adc
out
xchg
dec
dec
xor
(bad)
xchg
test
retf
dec
xchg
lock
push
adc
pop
adc
sbb
inc
xchg
xchg
imul
dec
mov
sbb
mov
sub
or
add
jmp
mov
push
pop
mov
and
push
arpl
data16
dec
cmp
in
cmps
push
inc
adc
lock
sub
sahf
loopne
push
std
adc
pop
or
push
jo
cmp
retf
cmp
mov
call
and
je
and
inc
shl
scas
leave
movs
or
xchg
cmc
add
mov
repz
mov
aam
push
icebp
add
jle
clc
sbb
xor
cmp
sub
shl
test
ja
daa
fcomp
cmp
sbb
jae
fisubr
xchg
mov
xchg
push
push
mov
xor
mov
mov
shl
mov
rcl
and
sub
idiv
or
ins
jne
pop
popa
jle
push
push
cmps
inc
daa
jno
ins
inc
cmp
ror
and
and
mov
shl
test
imul
push
inc
outs
cdq
mov
and
int3
outs
or
in
pusha
mov
or
lods
rol
lock
pop
pop
iret
dec
xor
enter
xchg
(bad)
int3
js
mov
imul
cmp
jmp
sub
jne
arpl
xor
jl
ins
test
je
(bad)
jnp
jp
add
movs
or
std
jnp
and
adc
push
pop
mov
in
or
pop
push
test
sahf
out
jp
sbb
or
inc
inc
je
gs
loope
push
rep
xchg
or
imul
inc
sti
out
push
adc
add
push
outs
inc
lock
dec
pushf
push
dec
cmp
push
fisttp
paddusw
lds
push
mov
out
jg
pop
push
push
dec
loopne
jl
jno
mov
push
lea
and
or
or
ds
mov
sti
out
xchg
pop
sbb
and
jns
or
cmp
or
push
fst
inc
fdiv
popf
dec
add
sbb
mov
ret
jle
movs
cwde
add
ret
imul
shl
jae
sbb
xchg
pop
xlat
adc
push
or
lahf
cmc
in
mov
lahf
sar
arpl
stos
sbb
daa
int
cmp
add
stos
inc
push
dec
mov
mov
imul
dec
int3
dec
mov
in
daa
rcr
pusha
mov
rol
daa
mov
push
lahf
cmps
jb
pop
les
xchg
cmp
mov
(bad)
mov
loopne
push
jnp
adc
add
(bad)
cmps
std
mov
xchg
cwde
outs
stos
ins
xchg
push
jmp
nop
mov
in
sbb
dec
aam
mov
add
mov
jns
(bad)
or
outs
xor
push
sbb
out
das
add
(bad)
xchg
shl
stos
jg
pop
iret
ror
pop
jmp
std
das
(bad)
imul
mov
test
sbb
aad
jmp
shl
fld
jmp
popa
sahf
push
sub
call
cmp
(bad)
call
ror
pusha
push
fdivr
popa
hlt
xor
mov
xor
add
sub
xchg
jmp
lock
sbb
pushf
mov
inc
sahf
mov
mov
outs
sub
mov
jns
or
or
fcomp
clc
test
outs
mov
nop
retf
addr16
call
mul
hlt
inc
inc
cmp
loop
mov
fadd
mov
adc
xchg
mov
addr16
mov
ins
into
loopne
in
ins
addr16
and
dec
ins
test
(bad)
shl
jne
into
jne
pop
lock
lahf
lds
imul
rcr
movs
pop
and
dec
sub
test
icebp
or
(bad)
pop
bnd
not
into
paddw
in
out
and
mov
xchg
push
cmps
xchg
xchg
dec
(bad)
stos
adc
addr16
sti
mov
xchg
add
cmps
push
add
push
shr
rol
or
or
dec
fisubr
dec
mov
(bad)
and
jo
scas
repnz
daa
adc
push
leave
jl
test
movs
int
push
sbb
mov
int
shl
jae
(bad)
pop
call
lods
dec
test
and
(bad)
data16
(bad)
movs
jnp
mov
pop
push
fbld
xor
mov
mov
inc
xor
idiv
cmp
fimul
mov
jmp
lds
jle
push
test
push
bound
call
or
sub
adc
scas
pop
or
fmul
cmc
(bad)
rcr
sbb
retf
les
fs
jo
(bad)
pop
rcl
jns
out
clc
or
ds
mov
mov
jbe
cmp
cmp
mov
mov
dec
(bad)
popf
lahf
mov
movs
outs
ss
sub
aaa
add
mov
out
adc
aad
dec
outs
or
xchg
out
pop
mov
fist
lock
daa
pop
lods
icebp
mov
rcr
hlt
loope
inc
call
xor
(bad)
int
fidiv
push
push
and
call
pop
mov
(bad)
aam
pop
mov
adc
push
xor
xchg
cmp
mov
pop
push
push
lods
mov
push
call
call
loope
add
addr16
inc
inc
bound
cmps
leave
sub
jnp
inc
adc
or
inc
xchg
xor
int3
xor
mov
test
xor
mov
jecxz
shl
sbb
sub
icebp
ins
pop
add
leave
or
inc
adc
clc
js
pop
jo
lods
sub
push
adc
mov
pop
push
arpl
cmp
fdiv
pop
inc
ds
pop
pop
add
fcomip
fild
fxch
xchg
dec
inc
jl
mov
(bad)
mov
jle
(bad)
cmp
ret
and
xor
clc
mov
ds
and
pop
ret
jle
cli
push
fwait
ds
xchg
lds
add
mov
jo
and
dec
call
mov
mov
mov
jno
out
sbb
xchg
pop
mov
(bad)
inc
jecxz
dec
stos
cmp
jle
or
and
push
pusha
mov
sbb
sub
cld
mov
pop
int3
in
xor
bound
jmp
xchg
jge
add
jno
mov
clc
lock
mov
push
shl
mov
xchg
rcl
movs
enter
adc
ret
push
cs
sbb
xor
or
or
test
xlat
imul
cdq
mov
mov
inc
dec
xchg
or
xchg
(bad)
and
lods
dec
ins
sub
outs
idiv
stc
stos
imul
test
icebp
sub
sbb
neg
sti
cmc
push
outs
xlat
or
jae
pusha
fwait
mov
or
mov
cs
repnz
adc
call
(bad)
xchg
gs
cwde
fwait
not
or
or
js
and
(bad)
in
cmp
out
add
out
popf
loop
ss
jno
(bad)
jne
xchg
lahf
jae
lea
arpl
daa
mov
add
adc
in
push
jl
pop
mov
rol
adc
mov
stos
and
or
inc
cmp
fadd
ror
dec
and
add
js
(bad)
pop
aas
cmp
push
pop
cdq
or
cmps
push
enter
retf
add
mov
sbb
loop
outs
stc
sahf
movs
shr
popa
cmp
inc
inc
repnz
les
mov
mov
xchg
or
add
inc
adc
mov
ins
push
sub
iret
fdivr
xor
mov
or
cmp
enter
push
xchg
pop
and
xlat
jnp
xor
div
js
movs
sbb
nop
inc
mov
pop
sbb
call
(bad)
jae
test
bound
mov
and
cmovbe
int3
mov
jmp
push
jmp
out
jnp
push
out
mov
gs
cmp
lock
mov
sar
shr
cmp
daa
push
popf
xchg
test
cmp
sahf
hlt
lods
lods
push
sub
add
sbb
inc
or
movs
scas
sub
(bad)
call
mov
or
push
and
pop
sub
mov
sbb
jecxz
pushf
out
dec
adc
(bad)
mov
push
(bad)
test
fcmove
arpl
or
sbb
mov
pop
cld
dec
push
jne
mov
daa
mov
cld
mov
and
lods
lock
pop
outs
mov
movs
cmp
in
push
scas
sbb
mov
stos
aam
inc
dec
(bad)
stc
mov
jmp
pop
loop
xchg
add
inc
pop
cmp
xor
call
cmp
dec
mov
mov
das
stc
loope
lods
mov
stos
jecxz
xchg
stos
mov
cmps
jl
jmp
dec
ja
cmp
test
xor
or
cli
lods
loop
or
test
inc
stc
xchg
inc
in
push
loopne
loopne
dec
xor
pop
xchg
mov
or
sub
lea
mov
in
vphaddbq
xlat
retf
pop
test
loope
sbb
push
push
xor
xchg
pop
push
enter
xchg
sbb
pusha
aaa
gs
push
bound
(bad)
fs
shr
mov
cmps
(bad)
pop
pushf
sub
and
scas
mov
fstp
neg
or
les
test
(bad)
pop
sub
dec
aas
adc
rol
pop
adc
cli
gs
in
or
xor
pop
mov
gs
pop
arpl
mov
adc
ja
sbb
and
jmp
adc
push
aad
lea
cmp
frstor
ins
xor
(bad)
movs
or
cmc
sbb
ror
mov
push
add
cdq
mov
cmp
test
push
sar
push
sub
cmc
stos
fstp
popf
cmp
pop
cwde
repnz
lods
or
sub
in
mov
scas
int
daa
ret
xlat
out
and
and
fidivr
mov
clc
xor
mov
push
es
push
xor
xchg
pop
pop
add
or
test
adc
sub
imul
call
mov
cmp
out
pop
jne
jmp
pop
ins
adc
jnp
lock
js
sub
int3
mov
cmp
dec
lea
shl
jmp
mov
or
rcr
dec
(bad)
data16
jb
test
and
mov
push
jbe
aas
arpl
icebp
call
fcmovbe
xor
sbb
ds
jmp
push
jl
add
arpl
push
sub
stos
push
adc
clc
mov
adc
cmp
xchg
pop
sbb
dec
dec
fimul
inc
pop
mov
or
clc
inc
jge
bound
pop
adc
sbb
(bad)
mov
outs
lahf
je
imul
mov
(bad)
ss
xchg
leave
push
lock
adc
iret
(bad)
push
add
shl
add
dec
lock
sub
jg
je
mov
(bad)
es
pusha
jl
into
jno
dec
inc
cmps
cmp
mov
daa
cmp
xchg
xchg
mov
mov
mov
shl
nop
mov
sub
in
cmp
jae
add
loopne
dec
mov
or
arpl
xor
pavgw
gs
sbb
(bad)
push
sub
in
sub
js
mov
push
sbb
sub
jb
fimul
and
xchg
test
aad
out
in
push
movs
jmp
aaa
(bad)
jae
fs
adc
popa
mov
popf
adc
(bad)
arpl
test
mov
pop
jns
xor
mov
and
and
push
pop
push
les
outs
or
inc
test
add
jp
imul
inc
aaa
out
add
mov
sbb
push
fld
call
xchg
jecxz
test
push
(bad)
mov
shl
test
cmps
pop
adc
hlt
cli
sbb
dec
rcr
pop
retf
out
inc
movhlps
sub
or
fwait
ds
cmp
mov
add
(bad)
cmp
push
hlt
xchg
sbb
jae
jnp
push
pop
xor
mov
or
mov
sbb
inc
sbb
fcom
ins
xor
sbb
push
xchg
pop
(bad)
movs
adc
xor
jge
adc
call
clc
test
js
stc
adc
movs
fldenv
mov
and
sbb
sbb
pop
mul
or
stc
ss
sti
test
fadd
pusha
sbb
sti
push
push
outs
xchg
icebp
fs
adc
ss
faddp
out
lock
int3
pmaxub
xchg
add
mov
mov
int3
iret
(bad)
scas
mov
loop
scas
in
in
adc
xchg
retf
into
ficomp
pop
mov
ret
sbb
mov
test
pop
mov
jg
pusha
pop
sahf
sar
aam
xchg
sub
cmc
pusha
xchg
push
fs
pop
cld
cmp
psllq
ja
neg
xlat
xchg
(bad)
cmp
cmp
sub
aam
aam
pop
inc
mov
xlat
inc
jp
mov
xor
inc
jge
int
call
(bad)
push
gs
inc
pushf
scas
cs
mov
cmp
pop
mov
int
push
test
fcmovu
add
daa
xor
or
clc
jmp
mov
jns
loop
nop
dec
outs
outs
adc
icebp
or
inc
dec
pop
pusha
ss
outs
add
cmps
dec
xor
movs
retf
mov
xor
mov
mov
test
push
dec
fsub
pop
mov
repz
imul
ror
push
clc
scas
test
loop
out
cld
push
je
idiv
jmp
mov
push
mov
add
loopne
mov
cmps
pushf
lods
mov
lods
adc
mov
fs
or
adc
sbb
jns
data16
cmp
repz
add
(bad)
mov
mul
ja
fld
inc
or
mov
cmc
call
adc
div
pop
and
gs
mov
xchg
jmp
pop
popf
sbb
or
pop
es
cmp
les
(bad)
and
psubb
dec
xchg
sbb
enter
mov
hlt
enter
jo
lods
pop
pop
add
cwde
add
xchg
xor
cld
push
inc
mov
xor
mov
push
inc
cwde
xor
sub
ror
fcomp
add
js
call
jge
push
rcl
call
repz
rcl
push
mov
mov
aad
repz
aad
gs
jecxz
(bad)
or
mov
shl
mov
jle
dec
pop
or
int3
mov
jnp
mov
mov
pop
xor
xor
xchg
inc
xor
js
mov
or
inc
jae
in
icebp
cmp
or
adc
push
sub
jo
(bad)
mov
gs
jp
jmp
jmp
add
out
(bad)
pop
pop
push
mov
push
push
sbb
xor
mov
ins
fild
mov
cwde
pop
xchg
dec
ins
fstp
sub
xor
retw
call
pusha
mov
xchg
mov
adc
mov
mov
mov
xchg
(bad)
out
jne
mov
lock
cmps
adc
lock
cwde
xor
out
mov
(bad)
cld
xchg
loopne
int3
pop
adc
stos
add
adc
add
jle
mov
js
add
mov
into
sti
mov
imul
xchg
cmp
mov
data16
and
mov
ins
fsub
and
push
push
xchg
frstor
jo
addr16
mov
add
inc
js
pop
push
(bad)
(bad)
adc
nop
(bad)
loop
dec
ja
cli
int3
cmp
mov
sti
sub
inc
xor
sar
jp
lds
les
push
inc
test
xor
fidiv
adc
push
jo
ja
sub
imul
push
dec
retf
mov
imul
or
xchg
sub
hlt
iret
jbe
sti
in
adc
dec
movs
inc
push
jecxz
fisubr
pop
sbb
test
out
ret
pop
shr
sub
loopne
add
cmp
retf
hlt
push
enter
or
inc
mov
mov
jbe
bound
add
fiadd
mov
or
test
jo
fsub
pushf
outs
addr16
jns
(bad)
sbb
mov
fwait
push
sbb
cmp
loope
xor
cmp
int
test
inc
inc
loop
ficomp
xor
pop
rcl
leave
inc
fadd
add
xor
aaa
test
xchg
push
clc
retf
aas
gs
in
xchg
fidivr
mov
mov
stos
sbb
inc
xor
in
aam
jno
in
cmp
jbe
inc
and
movs
popf
jns
cmp
stos
add
push
mov
ss
inc
clc
in
adc
sbb
push
pop
fsub
popa
xlat
sbb
jno
and
shr
mov
mov
ret
sub
imul
sub
das
sub
sub
lods
movs
mov
popf
push
mov
test
fsubp
ret
call
rol
dec
push
leave
rol
inc
mov
int
fistp
or
pop
cmp
or
mov
mov
push
inc
xor
lock
aaa
outs
sub
pop
fisub
inc
rcl
pusha
jg
test
nop
inc
xor
pop
fdivrp
xchg
pop
mov
pop
xor
or
frstor
ss
inc
sbb
xchg
icebp
push
std
mov
enter
leave
enter
stc
retf
int3
mov
xchg
cmp
cmp
mov
loope
and
pop
dec
test
je
rcr
xor
mov
mov
xchg
movs
adc
movs
mov
enter
push
inc
out
push
pop
inc
cwde
cmp
xchg
and
lods
mov
adc
frstor
retf
cmp
pop
sbb
aas
movs
xchg
jecxz
addr16
mov
mov
add
enter
fs
jp
push
pop
add
dec
push
scas
and
cld
xchg
iret
js
mov
xchg
outs
mov
xchg
pop
cmp
sahf
xor
inc
or
adc
rcl
add
add
enter
out
pop
je
mov
inc
and
int3
out
rcl
retf
pop
ds
cld
mov
adc
sbb
xor
xchg
stc
(bad)
adc
sbb
xchg
pop
push
xor
daa
cmp
or
add
fild
jecxz
push
mov
mov
xor
mov
and
xchg
into
test
push
lods
fimul
or
jae
mov
cli
xchg
and
pop
lea
sar
inc
mov
xchg
mov
sub
adc
jnp
mov
in
test
lods
call
repz
enter
jo
lock
fst
inc
jp
and
repz
and
mov
sub
fucomi
xlat
xor
nop
loopne
movs
sbb
jno
jle
xor
xor
push
add
and
cmp
arpl
add
pop
dec
je
xchg
jno
or
xor
adc
xor
iret
or
mov
call
hlt
into
xchg
stos
add
and
pop
out
sbb
dec
push
and
mov
or
sbb
cdq
rol
dec
ror
nop
xchg
stos
cmps
ret
les
mul
or
mov
mov
in
and
ss
and
ss
test
mov
cmp
xchg
mov
lea
lea
mov
push
mov
mov
ror
or
cs
pop
les
movs
mov
and
jbe
dec
sub
pop
sub
loopne
xchg
movs
test
in
push
int
je
inc
std
fadd
cld
sub
das
cmc
sub
das
mov
arpl
xchg
pop
push
imul
xlat
clc
mov
cmps
adc
fdiv
jmp
stos
psllq
ss
push
test
and
or
add
mul
pop
icebp
sub
jg
cmc
movs
pop
retf
push
(bad)
mov
jns
hlt
and
mov
and
rcr
mov
xor
repnz
push
dec
pop
or
dec
cmc
mov
mov
fs
pop
mov
mov
push
arpl
mov
add
mov
cmp
jno
daa
pusha
dec
sub
jle
sbb
test
shr
pop
in
cmps
add
and
jne
cli
add
sbb
lods
mov
xor
sbb
int
bound
push
pushf
(bad)
mov
sti
cmpxchg
jb
and
pop
sub
dec
mov
movs
push
out
sbb
jae
pop
push
aaa
xchg
popf
sub
mov
fidiv
aam
cli
call
inc
pop
in
cdq
cmp
xchg
ret
sbb
leave
push
in
cmp
cld
and
cmp
in
pop
(bad)
stos
lahf
sbb
hlt
push
call
ja
xchg
push
push
lds
fbld
cmp
sub
ins
and
adc
(bad)
ds
and
in
mov
and
out
jnp
cmp
mul
pop
ss
data16
lock
mov
shl
mov
push
jmp
dec
retf
rcr
fild
jne
mov
rcr
sub
inc
stos
sbb
out
scas
ins
mov
out
adc
adc
dec
fist
test
xchg
scas
dec
stos
xor
mov
jns
sub
push
pop
mov
retf
fstp
mov
popf
mov
push
push
xor
xchg
inc
inc
rol
mov
dec
pop
xchg
retf
fsub
sar
test
fwait
movs
stos
cmp
adc
cmp
mov
or
and
pop
pop
(bad)
int3
mov
outs
fcomp
pop
xchg
clc
sbb
sbb
adc
retf
or
call
jge
je
sti
dec
dec
cvtsd2si
stos
cld
dec
pop
addr16
mov
and
mov
ins
jg
ds
add
sub
jns
ret
test
int
mov
stc
dec
stos
neg
rol
data16
mov
lahf
sbb
pop
cmc
loope
cmp
xchg
sub
addr16
sbb
jae
or
sbb
sub
mov
add
and
jo
cmp
sbb
xchg
shl
mov
inc
scas
mov
jno
dec
fistp
fstp
and
hlt
and
adc
pop
xchg
xchg
pop
mov
ins
aad
call
pop
imul
lods
pop
push
lea
call
sub
inc
xor
or
fs
mov
inc
xor
dec
dec
mov
jae
sar
repz
or
push
mov
mov
sbb
imul
pop
pop
shr
and
sar
mov
mov
mov
or
lea
fisttp
push
movs
mov
xlat
cmp
js
in
sti
xor
test
dec
inc
dec
mul
fidivr
cwde
imul
pop
mov
cmp
lds
xchg
cmp
mov
xchg
xlat
je
fidiv
pop
sub
inc
push
out
ins
stos
jecxz
and
pushf
and
(bad)
outs
rol
sbb
push
loop
dec
dec
fcomp
sbb
adc
mov
in
in
fisttp
jnp
push
pop
push
cmp
mov
xlat
pop
jg
bound
cmp
xchg
fdivr
pop
test
rol
rol
sbb
mov
aas
push
inc
push
scas
mov
sub
stos
test
repz
sub
test
pusha
cmp
xor
jb
pop
loop
sub
sub
inc
xchg
lods
push
pop
pop
imul
test
in
inc
pop
mov
lock
xor
out
dec
in
(bad)
mov
loop
or
aam
cmp
test
shl
mov
not
pop
sbb
(bad)
ins
mov
test
in
loope
stos
pop
cmp
mov
and
stos
xor
pop
shl
test
rol
lods
push
jns
push
push
hlt
out
or
inc
sbb
xor
mov
or
inc
int
mov
xor
xchg
mov
icebp
cwde
inc
in
outs
sub
mov
lahf
mov
stos
rcl
sub
or
and
js
sbb
sub
sbb
cmp
jns
cmp
scas
mov
shl
nop
fisttp
xchg
jmp
push
xor
mov
in
dec
ja
push
mov
ins
mov
(bad)
movs
es
int3
pop
xchg
stos
(bad)
jne
(bad)
stos
mul
or
and
push
cmp
(bad)
fst
mov
rol
mov
cld
push
shr
inc
xor
pop
push
shl
imul
(bad)
shl
mov
and
mov
into
and
in
aad
cmp
inc
arpl
xlat
mov
das
(bad)
xchg
out
ins
adc
in
mov
jb
ds
push
retf
add
push
js
sub
mov
push
repnz
out
mov
cmp
ud1
cmp
mov
and
aas
mov
xchg
pop
in
dec
jmp
(bad)
push
test
ror
push
mov
mov
shr
xor
iret
(bad)
jb
test
fs
adc
sub
inc
pop
cmp
jmp
enter
xor
pop
repnz
jns
mov
sar
data16
dec
mov
and
add
fwait
push
scas
ror
sub
xlat
retf
faddp
mov
add
push
out
cmps
mov
add
add
(bad)
pop
jp
test
xor
xchg
loopne
ret
jb
jmp
mov
retf
(bad)
pop
sub
jae
sbb
xchg
dec
jp
in
enter
test
(bad)
imul
movs
in
mov
or
sbb
ret
loop
fimul
sub
popa
dec
mov
dec
(bad)
mov
div
cmps
xor
fisttp
ins
add
imul
add
dec
push
sbb
jne
dec
btr
call
int3
pusha
mov
jno
popf
add
sbb
sbb
sbb
jns
dec
arpl
ficom
call
inc
xor
in
dec
jne
and
popa
rol
push
loope
rcl
inc
xchg
ins
in
xor
xchg
aam
jmp
mov
ja
jmp
mov
push
push
pop
movs
sbb
adc
mov
shl
lea
fs
cmp
out
xchg
xor
mov
add
test
and
sbb
mov
and
jmp
aad
jge
dec
pop
ins
pop
sub
rol
adc
or
and
jp
cmp
add
add
push
mov
imul
mov
sbb
mov
(bad)
in
mov
inc
jnp
inc
cmp
in
aam
bound
pop
or
dec
xchg
push
cwde
aam
add
xor
cld
pop
pop
xchg
add
adc
out
push
or
cmp
arpl
adc
push
cmp
retf
fs
(bad)
mov
sub
cmp
sbb
xor
int
jo
xchg
int
fldcw
and
fnstenv
push
mov
es
add
(bad)
push
mov
xchg
mov
jbe
dec
xchg
xlat
and
sub
cli
and
test
paddsb
retf
pop
into
stos
(bad)
int3
adc
pushf
sti
cmp
or
clc
jnp
xchg
mov
lods
xchg
and
jns
inc
out
mov
jns
or
mov
sub
pusha
sti
pop
inc
push
sar
sar
test
in
into
das
test
cmps
jns
std
ins
mov
xor
pop
mov
or
or
xchg
int3
ret
dec
push
js
sbb
fistp
jge
cmp
bound
mov
jle
cwde
fadd
fild
sbb
adc
repnz
leave
sub
stos
clc
(bad)
adc
push
mov
ret
or
stos
xchg
fadd
pop
xchg
mov
push
leave
loope
fsub
test
jne
mov
(bad)
mov
loope
or
outs
test
std
mov
std
imul
pushf
jmp
add
dec
mov
sti
jmp
jae
stos
cld
mov
inc
or
pop
aas
jae
mov
lock
pop
add
pop
cwde
scas
sbb
cmp
lock
mov
loop
add
rcr
sub
jno
jae
icebp
fld
add
and
and
test
pop
sub
lock
in
sbb
mov
xchg
gs
jo
sti
jp
popa
test
inc
and
fwait
cmps
sbb
fnstcw
or
jmp
push
sub
cdq
iret
adc
and
and
cmps
jg
mov
test
inc
inc
in
aam
fucomip
push
ret
xor
rol
or
pop
daa
idiv
inc
lea
xor
(bad)
fldcw
xchg
in
mov
push
dec
call
inc
jge
test
xchg
push
fiadd
(bad)
inc
imul
dec
pop
inc
adc
hlt
sbb
or
pop
push
mov
(bad)
mov
pop
cmp
sbb
cld
ret
into
cmp
fwait
sub
out
and
mov
xor
mov
pop
xor
lods
mov
ret
adc
mov
mov
mov
pop
(bad)
mov
(bad)
das
pushf
jle
sub
jecxz
mov
mov
cdq
and
outs
or
jmp
bswap
dec
add
mov
pop
jmp
cmp
push
push
sbb
push
data16
and
mov
mov
dec
mov
or
nop
push
mov
(bad)
and
loop
push
jg
repz
push
aas
leave
or
and
movs
push
mov
add
gs
cmp
jno
ret
call
lds
dec
pop
inc
ret
ss
ins
aaa
pop
js
sub
sbb
xlat
in
sub
call
adc
cmp
into
jg
xchg
jg
cld
mov
inc
mov
and
adc
imul
sbb
test
int
mov
daa
retf
dec
call
pop
jb
out
(bad)
shr
xchg
jle
das
inc
xchg
fidivr
mov
movs
pop
cli
shl
sbb
dec
data16
push
jo
retf
adc
call
cmp
mov
popa
jge
mov
ret
inc
fisubr
or
adc
add
cmp
rol
movs
mov
or
pop
fs
mov
lock
pop
jae
test
cld
movs
sbb
pop
repz
mul
outs
fs
pop
fucomip
mov
out
fwait
adc
lea
dec
dec
jge
xlat
test
int3
ret
std
mov
cs
jno
xor
dec
xor
fwait
mov
rcl
xor
outs
repnz
mov
dec
xor
pop
mov
push
add
fistp
jb
cs
in
test
mov
repnz
xchg
pop
cmp
ins
push
mov
iret
fsubp
repnz
push
cmc
retf
fadd
in
outs
jno
add
rol
xchg
push
fwait
cmp
mov
mov
jns
xor
leave
dec
lods
mov
push
inc
repnz
ret
mov
or
(bad)
hlt
loopne
movs
(bad)
sti
imul
or
rcr
shr
adc
xchg
xchg
dec
cmps
and
push
mov
mov
inc
jmp
and
jne
(bad)
xchg
xchg
dec
sub
jmp
jmp
or
mov
push
ja
stos
inc
push
xchg
xor
das
rcl
pushf
dec
or
(bad)
sbb
sub
dec
pop
and
es
aas
(bad)
sbb
or
call
xchg
adc
fstp
nop
sahf
lock
xchg
adc
scas
sbb
xchg
pop
in
sets
inc
call
sub
fs
int
(bad)
(bad)
mov
sub
xchg
sub
rcl
add
pop
pop
(bad)
fsub
push
lods
pop
lds
js
or
movs
into
xor
xor
popf
dec
xor
or
sub
xchg
and
icebp
and
xchg
dec
sub
js
ror
add
xchg
std
sbb
cmp
xchg
addr16
pop
adc
push
aas
into
fs
push
sbb
aas
and
out
ror
int3
add
and
test
in
mov
inc
inc
retf
xchg
xor
call
stos
adc
sub
cmp
dec
mov
and
xchg
pop
outs
push
push
mov
outs
mov
aam
movs
adc
(bad)
rcr
push
pop
adc
fcmovnu
inc
jb
(bad)
pop
int
jne
jp
xchg
(bad)
in
repnz
ds
push
or
loop
int
stos
int
mov
ficomp
adc
(bad)
call
push
lds
leave
dec
jecxz
ins
xor
push
add
aaa
test
jl
adc
vaddps
test
sti
inc
cmp
or
pop
in
mov
pop
int
mov
xor
mov
and
inc
inc
jae
push
mov
jg
mov
xor
pop
mov
das
pusha
jo
pop
(bad)
lods
adc
xor
je
div
sub
adc
call
xor
push
pop
mov
int
sbb
sbb
call
pop
fsubr
add
test
setg
popa
add
lahf
addr16
inc
lahf
mov
add
popa
outs
or
push
xchg
(bad)
pop
pop
pop
xchg
imul
in
rcl
dec
into
push
pop
lock
pop
cdq
lds
push
inc
in
mov
sahf
jg
or
in
adc
add
pop
retf
add
and
pop
sub
push
ins
stos
fadd
push
mov
test
lods
enter
scas
push
shld
cwde
add
sub
cmp
pop
movs
std
lods
and
int
sbb
adc
test
jns
pop
popf
mov
fist
xor
or
aas
mov
pop
inc
cmp
bnd
imul
(bad)
rcr
jmp
retf
add
call
ins
jecxz
lods
into
xlat
mov
cdq
and
fdivr
jb
sub
push
xchg
idiv
xchg
popa
inc
arpl
sub
adc
div
inc
sbb
scas
mov
jmp
push
fwait
sbb
imul
aad
pop
pop
leave
cmp
sub
or
fs
std
sub
jg
jo
dec
push
sbb
jmp
dec
popf
jb
pop
test
or
out
sub
inc
aas
adc
sub
mov
xchg
push
lahf
es
js
int3
push
cmp
xchg
xor
in
in
pop
ins
outs
push
js
mov
popa
or
call
not
sbb
outs
jns
push
push
dec
js
pop
cwde
sub
and
sub
shl
vaddpd
fdivp
push
mov
add
xor
(bad)
fucomp
jbe
xchg
push
adc
and
out
mov
cmp
mov
ds
mov
test
inc
jmp
arpl
mov
adc
cmps
push
into
imul
push
popa
jle
and
inc
test
jo
int3
sti
rcr
out
fucomp
jmp
add
cmc
mov
loopne
fidivr
xor
mov
push
mov
mov
sbb
inc
test
mov
pop
jnp
push
rcl
add
iret
in
cwde
add
ins
repnz
iret
push
cmp
or
addr16
dec
pusha
ds
out
push
lock
stos
push
loop
sahf
retf
in
aaa
ret
xor
ret
pop
xor
cli
in
xchg
out
sbb
xor
add
enter
jge
(bad)
in
adc
mov
(bad)
popa
cmp
jo
mov
add
sbb
rcr
cwde
xchg
in
xchg
lock
mov
aam
lahf
sub
shr
xchg
popf
push
pusha
imul
mov
ss
xchg
pop
sar
push
dec
xor
popf
add
stos
mov
out
fcomp
push
movs
repz
call
jae
sar
frstor
movs
lahf
scas
mov
imul
pop
mov
pop
fcomp
jle
popf
push
and
xlat
stc
mov
jo
out
scas
test
xchg
std
jae
xchg
ret
hlt
or
addr16
push
pop
xchg
std
adc
dec
pop
out
add
ret
out
jmp
repnz
imul
pop
lods
fwait
adc
jnp
movs
inc
sbb
add
mov
rol
sbb
push
popf
outs
shr
xor
cmp
pop
adc
xor
rol
mov
pop
mov
pop
xor
xor
bound
xor
scas
or
push
sti
lock
push
(bad)
stc
call
and
add
test
movs
retf
xchg
cld
es
stc
adc
cmp
out
or
cwde
xor
les
test
imul
mov
mov
aaa
ins
push
xchg
and
mov
les
adc
mov
push
mov
clc
daa
cmp
xchg
mov
mov
stc
xor
push
lea
daa
dec
(bad)
and
cmps
retf
inc
inc
adc
sub
inc
jge
mov
fidiv
mov
jnp
ror
lds
popa
je
inc
test
pop
add
lock
aad
cmps
fidivr
in
shl
mov
mov
rol
or
in
in
push
jg
rcr
mov
mov
lods
imul
push
out
inc
call
cmps
cmp
stos
loopne
int3
fmul
test
adc
iret
iret
mov
bound
sub
fadd
fmul
adc
xlat
or
jg
push
jg
iret
pop
dec
sahf
pop
sub
and
imul
xor
and
dec
and
mov
daa
shl
xchg
mov
xchg
and
test
fisttp
adc
pushf
push
adc
sbb
sub
sahf
or
pop
inc
xor
fwait
loope
ds
pushfw
mov
gs
or
or
in
or
cmp
rol
cmps
imul
pop
shr
mov
xchg
(bad)
sbb
test
(bad)
push
stos
ja
push
loop
loope
stos
cmp
mov
xchg
jnp
mov
in
dec
ds
jo
jne
call
or
pop
call
sub
cmp
aas
clc
enter
cld
sbb
fidiv
sbb
cmps
pop
mov
or
or
or
imul
movs
ins
lahf
xor
xchg
(bad)
dec
sbb
int
in
popa
lahf
popa
mov
jns
pop
adc
pop
pop
mov
call
bound
std
scas
ins
xor
mov
dec
pop
fiadd
cdq
xchg
dec
fdivr
push
push
xor
jne
lods
pop
inc
xor
sbb
daa
lea
cmp
mov
or
cdq
(bad)
mov
jmp
les
out
sub
test
loop
in
pop
imul
xchg
call
cwde
scas
imul
scas
hlt
popa
cmp
pop
loope
add
mov
xchg
leave
inc
jp
call
aad
xchg
cmc
mov
cmp
sub
daa
dec
imul
outs
jle
jp
dec
dec
xor
add
dec
mov
rcl
mov
fwait
adc
ins
fidivr
int3
jmp
(bad)
movs
sahf
sub
mov
outs
mov
inc
aad
sbb
cmc
dec
stos
fimul
daa
push
(bad)
xchg
mov
jg
ss
lea
out
push
dec
pop
pop
jecxz
mov
inc
int
xor
dec
jae
and
inc
sti
mov
xchg
imul
inc
das
inc
pop
aam
clc
test
dec
dec
pop
pop
mov
jp
scas
sub
adc
jle
pop
int
jne
mov
sbb
push
out
mov
mov
out
mov
push
push
mov
int3
xchg
or
push
and
stos
daa
pop
(bad)
cli
iret
jg
ss
add
inc
mov
inc
xor
pushf
mov
jmp
lock
and
into
outs
cs
in
sub
and
jo
gs
mov
push
jmp
data16
xchg
jge
pop
cwde
mov
cs
jl
fcom
and
ret
mov
jns
mov
aaa
add
pop
mov
mov
xchg
jo
sub
in
popa
jno
shl
xchg
ror
loop
xor
in
push
icebp
ret
outs
sbb
jp
fwait
sti
mov
xchg
sar
mov
sub
jmp
xchg
pop
neg
mov
repnz
ins
dec
and
pushf
lahf
push
test
aas
jl
test
dec
and
jo
scas
jo
cmc
mov
cmp
xchg
retf
ins
mov
cmp
push
outs
iret
push
fisub
(bad)
cmp
std
inc
and
mov
jns
jb
pop
pop
call
mov
nop
pop
fld
cmp
dec
arpl
shl
inc
dec
out
mov
fistp
dec
mov
out
jmp
sub
int
mov
retf
jmp
mov
ja
cmc
test
and
push
fcmovnbe
or
inc
stos
xor
aam
out
ins
das
rcl
scas
clc
test
inc
xor
pop
xchg
das
xchg
xor
add
xor
sub
sbb
push
hlt
stos
js
cmps
cmc
mov
stos
imul
sbb
aam
xchg
push
add
jne
xchg
dec
add
test
mov
in
inc
cli
test
out
dec
mov
mov
or
cwde
cdq
rol
leave
push
pop
push
jl
and
mov
in
jmp
pop
push
gs
xchg
push
fist
in
xchg
pop
push
bound
dec
adc
dec
pop
scas
adc
mov
popa
fiadd
xor
fild
inc
mov
mov
pop
adc
fdivp
dec
mov
int
stos
mov
es
mov
call
(bad)
ja
aam
loopne
(bad)
xor
xor
adc
mov
aaa
xchg
daa
call
push
aaa
dec
stos
inc
std
cld
sub
mov
int
add
mov
mov
sbb
cwde
pop
lods
jmp
rol
out
push
inc
pop
or
xor
jecxz
cmc
mov
call
cwde
data16
in
jb
or
fild
mov
mov
inc
push
sbb
ins
or
cld
test
das
sti
inc
adc
aas
sbb
sub
and
arpl
mov
test
mov
push
in
mov
sub
xchg
adc
mov
outs
jb
cs
mov
sub
push
cmp
test
fsubr
shl
xchg
retf
sbb
xchg
les
mov
mov
out
jb
stos
jne
and
int3
jmp
and
push
loope
loope
out
sbb
fild
xchg
data16
(bad)
pop
scas
xchg
iret
in
push
push
les
push
push
pop
jns
cmp
xor
cmp
adc
pop
jl
jmp
jbe
cmps
sub
or
fs
xor
or
jmp
les
int3
cmp
jmp
out
xchg
scas
jmp
push
int3
mov
into
mov
lahf
(bad)
sub
jno
sbb
adc
test
jmp
mov
sti
mov
sub
imul
sub
push
adc
aaa
test
sti
(bad)
movs
mov
adc
mov
(bad)
push
mov
fcom
aad
fucomp
add
and
cwde
inc
call
or
(bad)
pop
pop
sti
cmp
cmps
scas
popf
push
cmp
call
lods
xor
adc
mov
call
jmp
std
clc
inc
cmp
xchg
sub
retf
daa
mov
jecxz
add
js
add
mov
adc
push
aad
jg
cmps
jle
cld
test
loop
cmps
loopne
xor
and
in
adc
pop
stc
sub
or
popa
jmp
shr
repnz
popa
jecxz
and
shl
adc
ins
push
in
std
xchg
pushf
outs
idiv
cmp
adc
adc
popa
retf
dec
pop
mov
jge
retf
push
xchg
or
loopne
xlat
loope
hlt
js
inc
jno
fldenv
jp
scas
mov
cmps
lahf
mov
mov
mov
mov
cmp
shl
div
push
xchg
je
bound
or
retf
das
lock
or
fucom
push
push
mov
ss
jmp
mov
push
loope
retf
mov
sub
inc
push
addr16
cmc
popa
push
mov
das
jnp
mov
(bad)
out
pop
push
retf
jbe
cmps
mov
daa
sbb
push
push
mov
out
adc
jo
fcmovne
jge
in
into
les
and
iret
cmps
mov
and
jp
push
push
dec
cmp
lea
mov
leave
bound
shl
or
inc
ret
dec
sbb
dec
add
enter
in
push
and
jge
inc
(bad)
out
xchg
and
xor
xchg
int
pop
cmp
jecxz
pop
xor
cmp
xor
test
jecxz
push
int3
mov
(bad)
movs
rcl
mov
and
mov
lods
outs
xor
push
ja
scas
fcom
adc
test
stos
mov
or
jnp
popa
ja
jge
sub
mov
cdq
add
and
(bad)
iret
sbb
adc
mov
ror
mov
adc
jg
push
aad
jle
repz
das
xchg
(bad)
fidivr
ret
push
loopne
sbb
(bad)
jns
pop
mov
(bad)
fldcw
test
lea
cmp
out
std
jecxz
lock
mov
(bad)
xlat
push
test
pop
adc
loopne
jg
mov
and
push
xchg
shr
(bad)
imul
inc
cmps
dec
mov
and
iret
and
jg
pop
mov
ja
adc
push
inc
dec
and
clc
dec
lock
ja
xchg
cmp
test
(bad)
cli
cmp
test
int
adc
rcr
loope
repnz
out
gs
add
mov
mov
mov
inc
test
push
popf
cs
push
inc
or
add
xor
jecxz
push
test
xchg
mov
aaa
pushf
cs
aad
int3
(bad)
cmp
jp
stos
mov
cmp
test
or
dec
int3
mov
ins
cmp
xchg
in
xchg
mov
(bad)
fwait
cmp
push
pop
scas
jmp
jg
clc
sub
mov
movs
inc
retf
fldcw
daa
and
xchg
add
fisub
and
pop
adc
test
into
xchg
push
xchg
fmul
dec
icebp
fidiv
pushf
pop
fmul
add
xor
scas
dec
push
pop
das
jge
arpl
pop
sbb
sahf
ja
push
or
mov
imul
das
cmp
mov
fwait
dec
mov
test
jne
push
cli
popf
(bad)
cwde
or
sbb
neg
push
fldcw
xchg
mov
xchg
pop
push
pop
sbb
xor
or
or
into
scas
lahf
pop
fdiv
mov
out
cli
movs
sti
dec
jbe
je
lahf
mov
jne
and
jnp
cld
ja
cs
dec
inc
cmp
mov
pop
mov
dec
mov
cmc
jo
xor
inc
xchg
cmp
dec
pop
xchg
cmp
jecxz
shl
cwde
jbe
add
push
mov
(bad)
sar
pushw
xor
xor
test
or
add
xor
sub
mov
and
cmps
scas
mov
int
aam
push
popf
mov
adc
mov
xchg
and
fsub
and
ins
sub
mov
mov
pop
mov
cmp
js
mov
dec
ins
call
fnstsw
mov
lock
xchg
xchg
dec
movs
jl
xor
neg
sbb
push
sti
mov
mov
xor
pop
inc
adc
stos
mov
fwait
dec
shl
(bad)
stos
movs
(bad)
and
int
xchg
mov
addr16
push
mov
pop
or
enter
ror
in
adc
jnp
mov
test
jmp
js
sub
mov
push
sbb
jle
sub
fst
(bad)
aam
stos
test
jmp
pop
adc
dec
dec
push
(bad)
push
sar
inc
call
imul
mov
pop
fldenv
and
fstp
mov
outs
out
(bad)
jmp
jle
mov
data16
mov
call
mov
push
movs
ja
mov
push
push
dec
sbb
dec
push
movs
lock
lods
das
mov
fimul
cmp
mov
push
ds
sbb
pusha
in
loopne
mov
out
mov
dec
popf
mov
rol
ret
fdecstp
ins
mov
call
dec
push
cmps
fs
jle
jns
popa
add
xchg
iret
cmp
in
in
das
sti
dec
out
cwde
or
push
outs
adc
je
(bad)
mov
jae
dec
ins
dec
stos
xchg
adc
ja
mov
and
push
add
pushf
shl
jnp
sub
or
or
imul
and
icebp
jp
mov
jno
mov
mov
dec
sub
push
xchg
test
ds
cs
es
inc
fcomp
mov
iret
jns
aaa
popa
and
sub
cli
test
cwde
dec
fwait
int3
inc
dec
and
je
retf
dec
das
lock
jno
pop
xor
dec
(bad)
cld
and
repz
dec
aad
ror
(bad)
lods
(bad)
(bad)
jmp
push
pop
xor
mov
cmp
outs
int3
xchg
cdq
inc
enter
cmc
jl
imul
mov
mov
mov
aas
in
mov
stos
add
or
ins
dec
arpl
fdiv
jle
sahf
cld
dec
pusha
push
cmp
sbb
(bad)
test
lods
loop
imul
dec
in
loopne
out
lea
mov
(bad)
jge
add
in
sbb
jmp
xchg
adc
jnp
test
aas
mov
mov
sti
sub
or
or
sbb
sbb
jp
jae
test
dec
fmul
mov
adc
mov
or
rcr
adc
sbb
clc
jp
xchg
add
out
(bad)
les
stc
idiv
jmp
jge
jl
fld
and
scas
ret
push
cmp
cmps
ins
lods
xor
inc
stos
lods
inc
xor
cmp
inc
jae
add
in
inc
daa
mov
xor
mov
sub
sub
or
xchg
aam
mov
jmp
mov
adc
pop
adc
cwde
mov
jp
add
mov
pop
mov
add
and
sbb
aad
mov
jb
adc
mov
mov
adc
mov
xchg
xor
icebp
pushfw
push
(bad)
out
outs
faddp
inc
jbe
lea
add
inc
arpl
enterw
fs
jno
push
pop
repnz
sbb
mov
(bad)
xor
loope
popf
scas
dec
or
pop
sub
xchg
outs
test
jns
rcl
pop
bound
outs
inc
(bad)
push
sbb
outs
mov
xor
rcl
adc
dec
xor
fistp
sub
sbb
cmp
out
inc
mov
cmc
push
jno
inc
jns
fisubr
or
add
fstp
(bad)
mov
xchg
int3
out
mov
scas
(bad)
xor
aam
or
das
cmp
aaa
add
dec
mov
xor
and
jo
push
leave
or
scas
nop
or
xor
hlt
leave
or
inc
shl
gs
pushf
ds
mov
jnp
dec
inc
test
mov
xchg
test
loope
test
hlt
xchg
aam
popf
aad
nop
or
cdq
movs
je
inc
jecxz
push
ret
inc
xor
fisub
dec
cdq
stos
retf
mov
dec
jmp
pop
mov
inc
mov
dec
rol
rcl
loopne
mov
mov
out
mov
add
loop
sub
loopne
mov
sbb
pop
mov
in
int
idiv
inc
sbb
jge
dec
or
cmp
xchg
enter
pop
cmp
ins
mov
cmp
push
mov
imul
push
and
jmp
xlat
pop
popa
mov
sbb
mov
lods
mov
sbb
pop
test
dec
in
stos
aas
std
test
outs
in
movs
leave
inc
fadd
mov
add
or
mov
or
ds
loopne
test
mov
xor
daa
add
(bad)
push
sub
lods
mov
jns
nop
cmps
imul
jg
fst
sub
ffree
sbb
lahf
(bad)
cmp
dec
mov
cmp
enter
and
jge
mov
xchg
sbb
and
loopne
xchg
shl
jno
(bad)
stc
xchg
fisub
mov
push
inc
cmp
sbb
fidiv
pop
lock
mov
mov
shr
and
sahf
pop
fldcw
mov
call
and
and
test
mov
test
retf
aaa
xor
mov
mov
sbb
jecxz
outs
and
push
jmp
mov
add
mov
cmp
rcr
xchg
int3
inc
call
loop
mov
aas
or
push
cmp
out
mov
pop
xchg
aas
adc
push
cld
pop
(bad)
xlat
jle
xchg
int
mov
mov
nop
data16
fadd
xor
imul
push
cdq
cdq
inc
push
loope
dec
add
int3
cmp
out
pushf
rol
cdq
ret
aaa
sub
int
hlt
ret
mov
aas
cmp
or
shl
dec
call
and
adc
adc
add
push
or
gs
fisttp
cmc
xchg
add
loopne
call
adc
imul
pop
outs
stos
cmp
icebp
stos
xchg
adc
sub
out
daa
mov
ins
call
test
jmp
xchg
pop
mov
and
add
jno
dec
or
inc
fwait
imul
int3
xchg
movs
(bad)
or
adc
lahf
sbb
adc
mov
xchg
jo
into
mov
push
int
push
push
lahf
cwde
pop
add
mov
lods
jb
daa
out
cmp
dec
rcr
(bad)
retf
mov
and
(bad)
out
mov
jne
(bad)
jmp
scas
popa
shl
pop
mov
push
sub
dec
xchg
popaw
inc
popf
fisub
retf
call
out
cmp
mov
sbb
push
jmp
sbb
es
fsubr
rol
leave
mov
es
pop
bound
daa
iret
in
cmp
push
sti
ins
sbb
xchg
pop
sub
xchg
nop
ss
push
add
jnp
imul
nop
xchg
push
xchg
ins
jp
aas
xor
dec
xlat
and
dec
push
cmps
rcl
jbe
lahf
jp
cdq
ins
mov
mov
jnp
jle
sbb
stos
push
pushf
out
neg
scas
pop
sbb
push
push
and
mov
ins
push
push
push
jl
pop
dec
std
mov
les
adc
sbb
cmps
stc
mov
jo
sub
push
mov
inc
or
mov
outs
sti
test
mov
pop
mov
push
jns
and
ja
iret
(bad)
jno
mov
pop
adc
arpl
rcr
in
xlat
lods
dec
mov
iret
inc
cwde
sub
les
imul
or
stos
rcr
mov
addr16
in
xor
mov
jmp
and
push
repz
retf
jg
movs
sub
add
or
fiadd
lods
fistp
inc
push
pop
retf
push
cmc
shr
adc
jmp
lahf
xlat
mov
mov
cmc
out
shl
dec
fadd
push
(bad)
rcl
push
mov
adc
mov
mov
mov
mov
or
(bad)
js
cmp
test
jmp
xchg
test
mov
ins
cmp
nop
pop
adc
retf
(bad)
fisttp
fwait
out
cmp
push
into
bound
xlat
jae
rcr
inc
popf
data16
pop
nop
in
div
clc
inc
xchg
data16
imul
sbb
ret
test
je
push
push
add
cmp
adc
mov
xchg
adc
jle
mov
push
or
jge
jmp
pop
and
aas
push
fsubr
xchg
jbe
cld
push
lock
xor
sbb
xchg
adc
fisttp
jg
jne
rol
retf
inc
imul
dec
jne
rcl
xor
hlt
cmps
movs
pushf
sub
fdiv
inc
ja
or
jmp
adc
outs
ins
fcmove
and
xchg
mov
adc
test
mov
inc
sbb
iret
mov
push
test
push
push
daa
dec
jle
lods
jae
les
repnz
push
arpl
(bad)
and
or
scas
jne
mov
push
icebp
lods
adc
addr16
mov
jmp
mov
dec
mov
mov
or
push
movs
inc
adc
fs
add
dec
mov
cmp
or
mov
out
rcl
pop
push
out
enter
dec
fidivr
jg
not
push
iret
outs
ja
adc
outs
test
outs
in
jno
rcl
or
(bad)
ja
inc
push
pusha
sbb
xor
je
pop
inc
lods
pusha
cmp
bound
(bad)
imul
and
cmp
ror
adc
stos
mov
ror
cmp
jp
shl
ja
mov
sbb
enter
enter
loop
mov
push
add
(bad)
push
inc
or
loope
and
in
not
mov
or
(bad)
outs
push
in
cmp
out
sub
mov
inc
pop
inc
pusha
retf
push
dec
adc
sub
xor
into
dec
or
idiv
xor
call
cmps
outs
stc
push
mov
lss
push
lahf
lock
mov
push
loopne
(bad)
out
rol
adc
inc
sbb
adc
cwde
scas
dec
hlt
fcmove
push
adc
popf
mov
sbb
neg
(bad)
sub
jo
inc
mov
inc
and
aas
nop
sbb
xor
cmps
imul
int3
xchg
mov
pop
push
das
pop
push
xchg
(bad)
outs
(bad)
ficom
leave
(bad)
push
mov
xor
and
mov
jle
aad
lock
aad
arpl
mov
mov
mov
adc
bound
fld
pop
fadd
jge
push
mov
(bad)
or
mov
adc
in
mov
mov
dec
add
pop
adc
sbb
dec
fadd
push
cmc
xchg
test
rcl
xorps
xchg
shl
dec
gs
sub
repz
xor
repz
push
sbb
test
lock
fwait
inc
sub
xchg
int3
out
xor
xor
add
or
pusha
sahf
imul
mov
push
pop
arpl
inc
add
mov
retf
rcl
sbb
ja
das
cmps
rol
sub
jnp
nop
jnp
sub
mov
lds
stc
sbb
jbe
cli
adc
and
adc
fdiv
mov
(bad)
cdq
dec
mov
add
cld
sub
pop
stos
jo
int
mov
lahf
xchg
adc
nop
dec
int
adc
inc
sub
lods
jo
(bad)
cld
xlat
stos
xlat
outs
loope
es
das
repnz
shl
fcmovu
fwait
pop
dec
push
mov
dec
dec
mov
enter
mov
add
inc
imul
movs
pop
jno
mov
push
in
or
fsub
mov
adc
iret
inc
add
jl
ins
xchg
sbb
mov
push
dec
idiv
ds
dec
jle
fisubr
cmp
mov
jmp
xchg
es
dec
scas
(bad)
std
push
push
fild
mov
xor
add
fdiv
psllq
sbb
cld
dec
add
push
test
arpl
dec
popa
inc
jb
jecxz
mov
aam
xor
pop
ins
jno
cld
icebp
jbe
int3
push
into
jbe
ja
mov
(bad)
fdivr
imul
rcr
push
cmp
mov
(bad)
idiv
imul
pop
ins
jo
out
lea
int
imul
in
sar
jge
retf
mov
jp
cmp
adc
ror
(bad)
(bad)
int3
test
popf
dec
test
mov
daa
popa
cmp
rcr
push
out
jecxz
cmc
sub
pop
pop
jmp
into
and
jle
xlat
clc
repz
gs
xchg
mov
push
or
fidiv
xchg
clc
mov
pop
sbb
mov
mov
and
leave
add
mov
add
call
daa
mov
aam
fbstp
mov
cmp
shl
cmp
test
or
mov
dec
sbb
dec
jns
lods
sub
aam
leave
icebp
adc
xor
(bad)
lds
int
loop
enter
out
mov
bound
aaa
or
mov
(bad)
mov
sbb
xchg
inc
sti
xchg
fwait
mov
or
mov
aam
out
xchg
out
pop
xchg
and
cmp
pop
pslld
and
(bad)
(bad)
mov
mov
ret
mov
pop
xor
mov
xchg
mov
sahf
and
mov
shl
and
into
sub
dec
pop
sbb
jecxz
push
dec
popa
test
or
mov
popf
sub
pop
cli
pop
ins
push
add
jecxz
jle
pop
dec
push
out
(bad)
sub
mov
push
inc
xor
sbb
mov
add
repnz
add
jmp
add
sti
movs
je
lock
mov
sub
mov
mov
int
add
lea
pop
aad
nop
fistp
inc
std
xchg
add
ins
repnz
jo
pop
ins
mov
pop
or
out
mov
adc
js
mov
mov
or
lods
jnp
je
fadd
rol
xchg
lods
enter
sub
xchg
xchg
dec
cwde
mov
fstp
js
(bad)
jmp
dec
cmp
mov
imul
mov
popf
jae
pop
mov
mov
js
fdiv
mov
inc
nop
les
xchg
ret
adc
outs
xor
dec
stos
loope
cmps
mov
mov
pop
jbe
mov
scas
call
repz
fidivr
lds
test
retf
scas
push
jmp
pop
test
add
je
retf
fdivr
xchg
sub
cmovs
xor
dec
popf
rol
shl
lahf
scas
add
hlt
pop
and
mov
inc
sbb
add
xor
pop
cmp
inc
xor
stc
aas
adc
bswap
mov
aam
loop
nop
fldenv
xchg
dec
xchg
icebp
and
or
xor
daa
test
call
repz
adc
sub
jne
(bad)
rcpps
jno
adc
stos
mov
mov
dec
inc
fnstcw
lock
into
xchg
xor
lods
sbb
pop
jnp
lds
out
test
test
and
sar
cmp
fsub
mov
(bad)
pop
sti
add
inc
mov
jl
mov
retf
loopne
adc
adc
mov
jne
pop
pop
(bad)
cmp
fsubr
pop
mov
sti
add
in
jl
push
xlat
jnp
retf
cs
add
rcr
out
and
mov
sub
mov
scas
inc
jnp
repnz
icebp
in
movsx
jns
sub
movs
ret
or
nop
test
jo
inc
in
scas
xor
sub
jnp
sar
into
test
sub
pop
push
pushf
jne
adc
or
test
retf
je
add
jecxz
popf
mov
out
mov
xor
shr
fistp
inc
in
mov
das
data16
cmps
jae
pop
xchg
stos
xchg
scas
push
out
(bad)
sbb
rcr
jb
sbb
pop
sysexit
mov
sub
pop
fild
push
mov
or
lea
pop
lea
xchg
push
jp
jle
data16
push
pop
fsub
push
xchg
sbb
mov
scas
xor
stc
dec
mov
adc
cmp
pushf
stos
pop
pusha
mov
int3
mov
fdiv
add
test
nop
(bad)
lock
(bad)
mov
lods
popa
sbb
jo
cmp
jg
not
ffree
imul
add
pop
sbb
cmp
dec
inc
scas
mov
or
or
scas
xor
jns
mov
lds
loopne
push
dec
out
movs
and
jb
or
inc
mov
icebp
cmp
inc
fimul
jmp
and
mov
sahf
or
in
xchg
xchg
pop
mov
mov
pushf
test
or
int
inc
jp
sub
pop
cmp
icebp
bound
mov
pop
ja
pushf
test
rcr
jl
add
loop
xchg
test
pop
popf
inc
cwde
add
add
and
cs
mov
clc
hlt
add
fnstsw
loop
movs
movs
sub
lock
jb
mov
lods
fwait
sti
test
and
pop
mov
inc
jge
fsub
icebp
xor
stc
mov
stc
imul
inc
adc
aas
scas
into
push
ja
pop
out
(bad)
call
adc
push
clc
sbb
and
fnsave
arpl
scas
inc
xchg
repz
xchg
xchg
push
dec
push
xlat
or
sub
adc
xchg
or
addr16
adc
jmp
push
dec
push
dec
aad
jmp
retf
aam
mul
pop
and
retf
aas
xor
daa
push
std
std
dec
out
jo
aad
(bad)
xchg
mov
icebp
popa
xor
popa
repnz
cmp
pop
dec
xchg
loop
pop
loop
ror
sbb
mov
pusha
xor
ss
int
add
outs
and
mov
pop
jo
mov
iret
cdq
push
adc
xchg
mul
rol
adc
jmp
data16
and
lahf
sbb
cmp
(bad)
xchg
ss
mov
inc
xor
retf
mov
pushf
test
mov
adc
fucomip
sbb
fstp
adc
mov
inc
xchg
or
hlt
fst
int3
movs
jl
mov
movs
mov
jns
and
mov
mov
shl
add
std
mov
mov
cli
push
das
idiv
ret
std
and
mov
pop
pop
(bad)
gs
jmp
or
pushf
and
or
das
cmp
test
mov
xor
jno
jg
out
sti
xchg
push
mov
repz
lods
xchg
and
lock
sbb
adc
(bad)
mov
in
aad
mov
adc
dec
or
call
push
pop
cwde
into
mov
add
dec
int
sbb
(bad)
pop
and
out
push
ret
pop
jnp
jl
ds
mov
adc
cdq
ins
xchg
icebp
icebp
repz
jns
movs
loope
retf
arpl
sub
lds
mov
adc
repnz
std
or
pop
in
fadd
xor
mov
popa
ret
add
add
lock
mov
lods
mov
push
movs
sub
clc
inc
cld
mov
test
movs
mov
lods
clc
mov
ins
xor
jne
cmp
inc
jp
push
push
adc
fiadd
aaa
mov
ins
mov
fld
push
mov
stos
add
out
or
inc
out
(bad)
xlat
fisubr
add
push
push
mov
or
movs
pop
and
inc
enter
adc
mov
movs
sar
mov
xchg
enter
pop
add
pop
jne
inc
aaa
leave
mov
cli
push
fs
mov
add
push
cmp
(bad)
jge
pop
enter
addr16
ja
push
and
imul
data16
push
clc
xor
shl
iret
(bad)
arpl
xchg
test
hlt
out
(bad)
fs
mov
rol
mov
cmp
(bad)
arpl
ret
aad
repz
mov
scas
inc
mov
pop
ins
xor
cmp
xchg
or
push
jbe
and
dec
test
rcr
shl
xchg
arpl
lods
clc
jle
pop
dec
mov
jmp
rcr
inc
sub
aam
test
and
dec
sub
int
jo
(bad)
out
jp
fst
mov
inc
add
ins
cs
jg
sbb
imul
sub
(bad)
mov
sbb
pusha
imul
outs
jns
xchg
jle
loop
adc
xchg
les
cmps
comiss
sub
and
adc
xor
inc
and
mov
mov
pop
test
xor
outs
jp
jmp
pop
movs
in
pop
call
test
mov
add
out
addr16
mov
push
ja
or
fisubr
xchg
push
(bad)
aas
stc
mov
jl
iret
mov
push
sbb
jb
mov
sbb
and
cmp
hsubpd
sbb
call
xor
jle
sbb
fcom
mov
pushf
push
push
call
mov
mov
cmp
add
outs
or
jl
outs
pop
dec
or
es
push
or
(bad)
ins
aaa
xor
or
adc
pop
mov
adc
imul
or
xchg
adc
ss
mul
arpl
jo
nop
add
retf
push
or
bound
test
and
dec
pushf
rcr
test
rcr
retf
addr16
jmp
cmp
xchg
lods
dec
jmp
std
stc
sbb
cmp
xor
lds
inc
(bad)
arpl
jns
inc
add
or
mov
stos
push
add
jae
or
ret
fbstp
gs
and
ins
iret
ds
mov
retf
outs
pop
dec
mov
shl
ret
aas
fisubr
pop
jmp
pop
aas
out
pop
jmp
push
jmp
jbe
fbld
mov
and
sbb
push
or
shl
mov
jns
test
mov
xor
push
sti
(bad)
retf
dec
movs
cmps
aad
and
pop
xor
lds
cmps
sub
push
jmp
or
xchg
hlt
mov
call
repnz
js
push
jge
ret
lods
repz
push
mov
push
inc
mov
daa
movs
pop
mov
out
sub
ds
not
xor
xor
ret
pop
xor
lods
mov
push
push
inc
jae
or
leave
cmp
add
inc
add
add
jae
sti
sub
dec
dec
push
or
movs
out
jbe
repz
scas
mov
mov
mov
in
sbb
jnp
lock
jbe
enter
push
imul
mov
jmp
sbb
inc
mov
cmps
enter
mov
pop
adc
sub
rol
je
cmps
mov
and
pop
je
pop
sub
in
fimul
xor
out
movs
jmp
mov
test
adc
out
mov
scas
pop
mov
test
pop
mov
out
jne
mov
cmp
mov
lds
ficomp
mov
std
cs
push
cmp
cmp
pop
mov
scas
rol
and
nop
push
sub
retf
mov
aam
add
sbb
and
dec
ins
or
or
lds
push
cmc
in
xchg
xlat
(bad)
mov
sub
mov
sbb
or
or
xchg
out
dec
js
cmp
dec
xlat
rcr
mov
inc
add
mov
and
mov
and
pop
cmps
sbb
jns
xor
dec
aam
mov
mov
fs
adc
repz
cmps
mov
jb
push
lods
push
jb
add
cli
popa
xor
fisubr
or
jl
jae
neg
adc
clc
in
and
stos
push
or
popa
dec
cmp
adc
and
aaa
mov
(bad)
adc
mov
jmp
adc
in
push
dec
addr16
in
je
ror
and
xchg
cmp
sub
jo
jae
cmp
in
sub
jo
inc
idiv
mov
xchg
mov
xchg
ins
rcr
adc
stos
in
lods
mov
lock
div
(bad)
mov
push
movs
mov
(bad)
xlat
fiadd
mov
fwait
or
in
cmp
sahf
jns
xchg
pop
and
sbb
push
sbb
push
int
aas
mov
xlat
cwde
(bad)
pop
pop
mov
jno
(bad)
out
(bad)
out
jmp
mov
repz
inc
pop
pop
pop
push
clc
xchg
fist
inc
add
in
xor
and
or
sbb
push
dec
pop
out
adc
mov
dec
scas
loopne
push
inc
outs
test
into
in
(bad)
jmp
out
stc
dec
pop
add
in
add
fdivr
fwait
int
inc
mov
ror
mov
inc
mov
xchg
adc
dec
outs
jmp
repz
add
mov
clc
outs
ds
(bad)
xchg
ja
push
test
rcl
add
cmp
stc
je
loopne
mov
xchg
cmps
mov
push
out
mov
mov
add
cmps
mov
mov
cmps
xchg
sbb
push
popa
icebp
push
stos
stos
mov
cmp
inc
mov
sub
mov
add
cmp
add
rcr
(bad)
mov
cmc
lods
mov
dec
fdiv
icebp
adc
int3
fdiv
push
or
outs
or
(bad)
dec
popf
(bad)
mov
mov
and
stos
jne
push
fdivr
jbe
jnp
jmp
mov
sbb
dec
sub
lea
stos
mov
and
jb
jnp
es
fsub
push
or
test
cdq
scas
es
ficomp
jnp
push
nop
retf
(bad)
mov
ja
inc
pop
leave
xchg
add
daa
into
jmp
shl
or
push
test
sub
in
pusha
mov
sbb
shl
movs
fist
or
cld
pop
(bad)
cmps
mov
mov
mov
repnz
jecxz
jno
xchg
inc
clc
push
add
dec
cmps
dec
adc
or
lds
(bad)
mov
pop
dec
jmp
mov
pop
ds
xchg
mov
idiv
sbb
mov
clc
inc
add
mov
mov
test
gs
fist
gs
dec
jae
inc
inc
adc
inc
subps
mov
cmp
adc
jno
add
in
or
dec
stos
or
retf
pop
pop
icebp
dec
cld
add
fwait
lock
push
inc
cmps
pop
add
int
(bad)
jmp
sub
mov
sbb
adc
(bad)
pusha
sbb
jge
mov
mov
cmp
or
cmp
repz
outs
xor
xor
popf
cmp
or
jle
cmp
lds
xlat
push
xor
into
dec
push
mov
add
sbb
dec
pop
pop
jl
xlat
adc
(bad)
repnz
scas
loopne
scas
cli
add
popf
mov
jmp
mov
xchg
lock
add
pushf
cmps
loopne
lahf
icebp
ret
sbb
out
bound
fs
inc
ins
add
xor
xchg
dec
xchg
hlt
xchg
or
in
cld
mov
pushf
xor
add
push
out
jp
nop
jle
div
cmp
push
cli
popf
adc
sbb
jp
xor
ins
test
pop
arpl
imul
out
aaa
mov
ins
inc
jmp
retf
jo
push
in
mov
ror
pop
inc
adc
inc
jb
jmp
mov
xchg
push
jne
xlat
rol
call
scas
loop
push
imul
mov
ret
int3
rcr
pop
adc
sub
xor
add
cwde
mov
hlt
clc
arpl
int3
jne
in
fild
aad
in
mov
push
inc
sbb
rol
dec
cmp
loopne
outs
sub
lock
sbb
xor
mov
add
jl
fs
(bad)
je
pop
pop
push
test
adc
aas
in
pusha
mov
hlt
sub
ins
push
push
mov
iret
scas
and
push
push
and
jno
pop
jno
daa
xor
xor
sub
in
jmp
mov
cdq
xor
mov
fbld
repz
pop
push
sub
inc
test
enter
fisub
dec
or
ss
cld
(bad)
sti
mov
cmps
mov
mov
and
ins
cmp
sbb
not
pop
push
daa
cmp
xchg
mov
sbb
pop
or
pop
inc
inc
push
push
cmp
mov
mov
ins
add
xor
jae
int3
dec
cmp
xchg
jmp
push
cmp
adc
push
jb
jg
inc
leave
mov
mov
xchg
sub
imul
test
cld
rcl
sbb
sub
nop
mov
pushf
xchg
rcl
push
xchg
mov
out
lods
ja
out
mov
mov
fnsave
jns
sub
sbb
and
pop
dec
std
jb
mov
movs
mov
adc
das
aam
mov
inc
and
(bad)
sbb
js
out
js
mov
push
sbb
xor
bound
inc
xchg
into
sar
mov
shr
into
(bad)
lock
cs
mov
mov
inc
(bad)
addr16
xor
cli
fnstcw
es
lods
shl
cwde
jno
(bad)
jmp
iret
fistp
xor
pop
mov
or
retf
dec
repnz
mov
test
pop
push
aas
jp
mov
mov
out
retf
adc
dec
adc
sbb
or
or
(bad)
and
or
into
mov
aad
sub
mov
and
adc
xchg
adc
ds
jge
xchg
pop
outs
test
mov
push
mov
test
stc
pop
and
cwde
iret
adc
sub
cmp
mov
jle
jns
cmps
push
xchg
inc
xor
cmp
xlat
sbb
jno
sbb
xor
push
cmps
lods
or
push
sub
and
mov
inc
pop
std
stos
(bad)
arpl
and
addr16
mov
and
mov
lods
cmp
jno
ret
xor
iret
lea
adc
mov
jae
sti
js
and
test
xlat
out
outs
shl
les
mov
mov
push
pop
adc
and
(bad)
adc
loopne
or
jns
cmp
movs
xchg
js
(bad)
mov
or
sub
push
lea
shr
sti
hlt
xor
scas
pop
pop
mov
test
push
ins
enter
add
add
jmp
cmc
mov
inc
xchg
pop
adc
sbb
jb
cmp
pop
fwait
mov
jge
mov
daa
enter
xor
mov
test
push
push
adc
or
jge
fdivr
mov
xor
aad
mov
in
or
bswap
pop
jbe
shr
mov
les
imul
mov
call
jns
adc
scas
es
loop
in
jle
mov
adc
leave
pop
sub
cmp
in
xchg
mov
retf
hlt
fsub
dec
mov
call
adc
pop
add
or
hlt
cmp
inc
push
sub
mov
and
cmp
add
sbb
mov
and
xor
loop
sub
iret
cwde
shl
movs
push
adc
cmp
sbb
js
stos
fsubp
sbb
idiv
sbb
push
mov
(bad)
scas
or
xchg
add
inc
jbe
hlt
popa
sub
sbb
sbb
fwait
mov
jg
retf
adc
xor
add
out
lea
hlt
in
jmp
inc
jno
adc
pop
add
pandn
and
test
lock
mov
inc
and
inc
iret
dec
je
or
mov
loope
adc
push
aaa
out
pop
xchg
pop
(bad)
adc
inc
pop
out
scas
mov
mov
jmp
mov
dec
lea
ror
sub
dec
mov
inc
inc
or
or
sbb
arpl
int
jno
cs
xor
scas
jo
xlat
push
cmp
push
adc
mul
jns
pop
and
cmp
fld
pop
outs
cmp
mov
xor
cmp
es
gs
cld
fdiv
jge
xor
or
push
mov
cmp
loope
or
loop
lods
mov
jb
mov
dec
int
into
mov
ins
jge
test
sbb
adc
cmp
mov
int
mov
sub
outs
mov
sub
push
clc
loope
jo
dec
and
fcomp
inc
jae
loope
mov
fstp
sbb
cmp
mov
call
popa
pop
or
add
cli
fcom
inc
outs
mov
(bad)
daa
outs
adc
in
or
cmp
ret
call
jo
arpl
pop
stc
sub
fsub
push
xor
push
test
loope
push
add
sub
and
sub
rcr
mov
(bad)
retf
gs
mov
clc
std
xchg
cli
adc
cld
lods
addr16
in
out
jg
ins
inc
and
xor
mov
(bad)
xor
lahf
adc
repz
ret
mov
fisubr
in
cmp
mov
jle
(bad)
cmp
out
retf
les
lds
lahf
add
out
loopne
(bad)
jge
fcomp
das
add
lods
rcr
cli
add
les
fistp
cmp
mov
jl
fbstp
fmul
(bad)
outs
(bad)
sub
push
cmp
adc
add
inc
sar
push
in
enter
fistp
(bad)
icebp
or
pextrw
cli
mov
cwde
push
fcom
test
mov
dec
clc
dec
mov
dec
les
inc
push
push
cmp
mov
mov
pop
jmp
mov
arpl
pop
jecxz
cld
add
xor
jle
sub
test
push
push
mov
sbb
stos
push
jcxz
xchg
inc
xor
mov
dec
stc
or
lahf
sub
mov
mov
or
lods
enter
adc
cmp
gs
push
pop
cmp
pop
mov
pop
(bad)
xchg
test
test
loopne
push
jmp
or
xor
dec
lods
push
adc
jge
rcr
loope
outs
or
push
mov
inc
sub
inc
outs
mov
adc
fcomp
lea
xchg
jge
aaa
pop
dec
or
xor
inc
add
pop
push
loop
std
and
shr
pop
shl
dec
movs
or
push
pop
jno
mov
push
mov
call
hlt
rcl
lods
mov
mov
push
mov
pop
dec
and
nop
cmp
outs
icebp
ds
shl
inc
jg
ret
pop
fisttp
icebp
and
adc
jae
(bad)
xchg
sub
rcr
enter
lods
mov
pmullw
rcl
sar
hlt
add
jae
je
sub
dec
arpl
aad
inc
add
dec
or
inc
xchg
stc
scas
iret
ficomp
inc
jno
inc
data16
mov
push
xor
fcmovnb
xor
xchg
mov
cmp
fsubr
aad
sahf
adc
mov
call
dec
rol
stos
xchg
mov
cmp
jbe
daa
rcl
jg
lods
jl
add
sbb
imul
adc
jno
pop
and
aad
pop
xchg
sbb
push
(bad)
sub
fwait
jo
mov
cdq
mov
adc
popw
cs
push
push
jge
mov
push
(bad)
aad
out
mov
aaa
mov
mov
js
cmp
sbb
sub
sbb
pop
or
pop
dec
jmp
stc
fbld
sub
jecxz
std
stos
xchg
and
and
repz
in
cwde
xor
cmp
push
cmp
test
xor
aas
jmp
jl
or
clc
ins
pop
test
test
ins
sar
(bad)
lods
pushf
mov
rol
inc
call
adc
ss
int3
jp
add
push
xor
fst
xchg
and
mov
inc
hlt
movs
ret
xor
das
inc
pop
retf
cmp
mov
sub
dec
adc
clc
mov
movs
jne
adc
cmps
arpl
aaa
push
jp
fistp
mov
push
int
scas
pop
pop
dec
mov
push
shl
pop
jnp
mov
in
mov
jae
movs
cmp
lea
xchg
retf
outs
jle
or
test
mov
test
fisubr
pop
mov
or
jne
pop
xor
das
adc
push
cmp
in
popf
cli
arpl
in
sbb
jp
les
aad
push
jne
or
das
add
icebp
and
(bad)
ror
cmps
cmps
xchg
mov
pushf
sbb
adc
call
shr
imul
jo
mov
nop
mov
data16
fisubr
mov
cld
dec
xor
lods
shr
sub
fbld
jp
jns
leave
xchg
in
cli
push
pop
setp
jno
ret
pushf
test
push
aam
sti
mov
xchg
cmps
pop
xor
fucom
jge
push
push
shl
popa
ror
or
adc
repz
fucomi
or
adc
mov
aas
jne
les
mov
fwait
shl
mov
icebp
stos
xchg
mov
inc
jmp
xor
jg
push
push
mov
fldenv
lods
jbe
add
gs
or
push
push
rcl
or
xchg
push
push
call
jmp
mov
xchg
add
xor
aad
push
cmps
jns
sub
cdq
retf
add
mov
les
push
and
adc
ins
push
xor
push
xchg
push
sahf
pop
jecxz
jle
sub
cdq
das
xor
out
sar
inc
lods
scas
iret
sub
cmp
nop
mov
cmp
fs
dec
(bad)
bnd
xchg
fdiv
push
mov
cli
fisubr
jp
or
lahf
add
outs
jp
retf
stc
test
push
fdivr
add
pop
pushf
add
xor
jg
ds
xor
(bad)
ja
sbb
popa
xor
mov
iret
inc
data16
movs
ins
add
mov
cld
xor
dec
repz
add
and
xor
xchg
inc
mov
popf
in
or
jg
sti
test
je
shl
gs
mov
pop
mov
xor
inc
push
fstp
mov
xchg
aaa
push
call
mov
(bad)
pushw
jmp
mov
in
ret
aas
xchg
jns
jg
inc
fst
rsm
(bad)
push
xchg
clc
iret
xor
and
xor
aad
jle
add
adc
lds
inc
cmp
push
jp
arpl
mov
mov
cli
push
or
int
icebp
mov
std
fistp
or
int3
sub
mov
clc
push
out
ret
js
lods
ins
push
xchg
add
inc
mov
xchg
adc
mov
adc
jl
out
pop
xor
arpl
cdq
mov
ficom
(bad)
jmp
out
aas
cmp
jns
fld
cwde
xchg
xor
(bad)
cmps
xor
jl
mov
cmp
mov
and
cmp
out
mov
std
inc
jae
daa
bound
xor
mov
inc
arpl
js
push
add
and
cmp
pop
sbb
jecxz
cdq
pop
es
jns
ja
mov
sbb
retf
enter
sub
dec
fiadd
mov
in
cdq
(bad)
retf
out
jo
cmp
mov
inc
dec
arpl
xlat
mov
pushf
aas
add
das
add
sub
jmp
fs
mov
(bad)
sbb
push
cs
inc
xor
clc
xchg
push
sti
sub
jmp
fdivr
loop
clc
lea
sub
sar
mov
adc
pop
sub
mov
cmps
xor
dec
or
cmp
test
jmp
push
loop
mov
pushf
and
retf
mov
push
xchg
push
mov
push
cmp
mov
mov
push
inc
xchg
pop
into
popf
sub
out
mov
popa
jle
adc
cmp
and
jo
add
mov
add
cs
pusha
out
pusha
loop
mov
call
jmp
imul
fwait
loopne
adc
ins
(bad)
cdq
arpl
aaa
mov
test
sar
or
jmp
test
and
cmc
sbb
push
xchg
sbb
mov
push
xchg
ret
pop
sbb
add
jmp
xchg
xor
xchg
mov
push
mov
jg
cmps
pop
inc
sti
fimul
dec
cwde
in
sbb
scas
sar
inc
cdq
addr16
mov
pushf
into
jl
fwait
dec
adc
xchg
shl
push
ftst
dec
xchg
out
sub
jp
inc
inc
out
fisubr
into
mov
adc
std
push
sbb
popf
cmp
jo
inc
push
in
js
sub
push
mov
or
push
sub
push
les
xchg
rcl
xchg
ficom
push
js
ret
push
mov
xor
push
outs
cs
out
fs
rol
sti
push
and
mov
in
jecxz
mov
pusha
outs
push
dec
push
sbb
addr16
int3
mov
iret
cmp
js
jno
(bad)
pop
and
xchg
sbb
lock
add
loope
enter
(bad)
lods
dec
sti
pop
les
js
cmp
pop
int3
jno
or
and
out
add
sub
mov
mov
xchg
mov
inc
popf
mov
jae
xor
mov
xchg
mov
lds
sub
cmps
or
stos
mov
out
and
lock
mov
shl
mov
popa
pop
arpl
jecxz
cmps
rol
sti
test
inc
xchg
or
jnp
lods
mov
xchg
and
jae
pop
cmps
push
xor
call
add
inc
jge
cmp
je
or
rcr
cdq
pop
aam
bound
mov
fst
addr16
stc
js
fbld
sub
mov
push
(bad)
stos
bound
add
pop
push
and
fiadd
fsub
ror
dec
mov
xchg
jmp
cmc
call
sbb
or
or
adc
fist
inc
inc
add
dec
dec
outs
dec
leave
cmp
pop
inc
arpl
and
xor
pop
cmp
test
lock
add
int
out
mov
test
jmp
into
test
xchg
xchg
push
loop
sbb
loop
(bad)
cmp
xor
test
dec
enter
movs
aas
mov
sub
sub
mov
jns
mov
shr
pop
outs
jnp
mov
mov
and
les
cld
gs
jnp
and
movs
add
call
jnp
jne
fwait
cld
xchg
jb
or
jno
in
mov
mov
test
into
std
into
inc
push
(bad)
into
cmp
(bad)
adc
sub
pop
push
pop
pusha
jmp
jmp
push
data16
jnp
cmc
cmp
popf
bound
xchg
sub
neg
xor
jge
out
(bad)
adc
sbb
adc
xchg
mov
jecxz
push
test
loope
in
push
mov
sub
mov
in
mov
xchg
sar
cmp
fs
shl
pop
(bad)
cmp
sbb
adc
lods
adc
lock
sbb
cmp
jmp
cmp
or
mov
pop
mov
hlt
gs
mov
test
sbb
mov
sub
mov
lock
or
pop
add
xor
mov
dec
(bad)
and
neg
ficom
mov
pop
shl
mov
fisubr
rep
les
ins
outs
call
xor
rol
cmps
test
js
call
jb
mov
lahf
dec
and
push
loopne
dec
dec
stos
sti
jns
dec
adc
mov
outs
mov
movs
in
xchg
cmp
push
mov
sar
cwde
sub
test
push
dec
jno
mov
bound
sub
mov
add
xchg
inc
enter
nop
pop
ins
jno
pusha
or
mov
sti
std
and
test
pop
lods
mov
inc
xor
shl
(bad)
pop
rol
pop
and
or
pmulhw
or
or
(bad)
jmp
sbb
pop
jae
jo
inc
xor
test
jo
pop
cmps
pop
repz
mov
inc
ret
jp
scas
dec
ss
xchg
ficom
pop
mov
or
mov
icebp
lods
pop
mov
dec
jnp
pop
test
xchg
inc
and
jno
jnp
mov
cmp
xchg
data16
sub
fisubr
xchg
or
adc
and
jg
retf
shl
push
shr
adc
imul
xor
imul
not
in
nop
(bad)
jns
push
je
retf
mov
retf
sub
int3
push
add
pushf
jg
movs
mov
sub
ins
sbb
sub
jnp
sahf
out
rcr
popa
scas
or
pusha
push
sbb
mov
stc
pusha
mov
inc
bound
icebp
and
shl
test
cmp
gs
cmp
xrelease
adc
jl
pop
lods
lods
dec
je
loop
and
mov
popf
and
add
push
sub
jp
stos
sbb
stc
in
int3
cmp
xor
push
int3
push
and
inc
jmp
pop
sbb
pushf
sub
fld
jmp
sub
enter
lds
adc
adc
das
scas
pop
or
stos
inc
mov
push
icebp
inc
fistp
fidivr
div
mov
fistp
cmp
pop
pop
and
sbb
sbb
out
mov
mov
lock
ret
and
and
fidivr
retf
mov
(bad)
dec
inc
pop
je
lods
icebp
or
mov
push
jmp
in
push
in
std
pusha
sbb
ficom
inc
adc
sub
mov
lahf
sar
and
mov
add
stos
cli
push
ret
rcl
dec
xor
cmp
sub
push
add
cmp
jg
bound
sub
mov
mov
push
push
jmp
rcr
call
jmp
inc
adc
xchg
jmp
cwde
pop
in
jp
sub
xor
mov
ds
push
pop
cwde
inc
push
jno
data16
jb
add
and
push
dec
arpl
jmp
xchg
dec
sub
mov
mov
repnz
mov
cmp
stos
divps
in
(bad)
mov
in
mov
pop
loop
and
inc
stc
enter
comiss
lods
mov
add
je
mov
mul
int3
fstp
xchg
sar
outs
cmp
adc
cwde
mov
imul
jl
popa
mov
sti
fdiv
dec
inc
sbb
test
pop
add
jbe
pop
cmp
xor
mov
add
pushf
jne
js
(bad)
dec
xchg
and
mov
icebp
or
xor
and
mov
push
loop
sti
dec
mov
push
test
inc
xchg
mov
sbb
ret
dec
sbb
into
push
or
cli
sub
and
mov
push
add
test
pusha
fwait
(bad)
rcr
push
mov
push
in
mov
or
jg
idiv
xor
sbb
inc
push
or
shr
loope
das
jmp
rcr
jge
mov
setae
push
int
and
sbb
aaa
(bad)
stc
inc
mov
mov
icebp
dec
mov
and
cmp
in
leave
push
xlat
fnsave
mov
jmp
push
rcl
add
leave
shr
out
and
jns
add
fwait
mov
xor
add
pusha
lds
call
add
sbb
ins
fadd
(bad)
mov
dec
inc
mov
lods
push
sbb
sub
in
dec
inc
(bad)
fsub
(bad)
lods
xor
ds
cdq
mov
mov
mov
jg
adc
movs
dec
dec
cli
sahf
jmp
stos
into
mov
pushf
xchg
mov
out
jp
test
scas
fsub
inc
adc
ror
shr
dec
retf
dec
sub
jnp
cmp
sub
sti
push
lea
arpl
mov
inc
popa
cmp
imul
neg
mov
js
mov
mov
pushf
loop
push
cmps
mov
retf
rol
neg
cs
lock
test
enter
(bad)
mov
or
jb
fsub
mov
stc
imul
fwait
push
fwait
lods
mov
jnp
inc
xor
movs
push
jbe
enter
sbb
rcl
push
jg
dec
call
push
fld
sbb
cmp
pop
jg
mov
daa
(bad)
sbb
ds
xchg
pop
pop
pop
and
call
mov
cwde
jne
aaa
adc
ds
add
out
fs
inc
nop
fadd
cmps
sbb
arpl
aaa
push
mov
mov
fs
push
add
popa
inc
outs
sbb
test
adc
xor
mov
lock
fsub
mov
or
out
xor
je
test
mov
in
lods
(bad)
rol
xor
xchg
ins
push
mov
ja
push
add
or
fucomp
push
call
mov
out
xor
sub
test
repnz
int
ds
mov
sub
or
mov
lds
in
or
mov
outs
mov
fsub
jl
mov
push
push
not
mov
sbb
cmp
add
(bad)
xchg
das
dec
sar
jl
xlat
stc
dec
jo
push
adc
rcr
dec
pop
shl
mov
imul
inc
jg
mov
(bad)
stos
sub
xchg
stc
cmp
add
jg
push
mov
mov
xchg
das
or
dec
pop
pushf
test
cmp
int3
pusha
or
jg
jns
out
push
push
pop
push
mov
mov
push
adc
arpl
pop
fsub
xchg
movs
push
xor
and
sbb
call
dec
and
js
adc
data16
or
xchg
xchg
shl
popf
mov
popa
sub
nop
test
inc
daa
pusha
mov
dec
mov
ss
sub
js
inc
mov
es
add
aam
sbb
and
ins
div
sar
jmp
daa
gs
mov
pop
into
sub
mov
outs
cmp
sbb
sbb
call
or
mov
dec
call
inc
xchg
nop
std
add
sti
sbb
loop
addr16
mov
push
lock
xchg
or
fidivr
pop
push
inc
(bad)
xor
push
xor
sub
ret
jo
lods
push
and
xchg
lahf
test
jmp
xchg
cli
dec
nop
fcmovb
or
sub
xor
pop
xchg
sbb
xor
pop
push
in
cmp
xchg
cld
xchg
pop
inc
(bad)
sub
adc
adc
push
adc
dec
dec
inc
stos
and
or
shl
pop
test
add
jbe
sbb
xchg
loope
lahf
aad
jno
cdq
jbe
imul
or
mov
mov
call
inc
lahf
jmp
in
(bad)
or
out
rcr
pop
lods
out
xchg
nop
dec
or
and
sbb
rcr
loope
xchg
lock
sub
mov
mov
icebp
and
test
aaa
push
out
rcl
(bad)
call
aam
mov
int
xchg
and
jg
fs
mov
add
sbb
inc
imul
or
jns
cmp
xchg
xchg
rol
and
shl
fsub
iret
inc
xchg
xor
pop
mov
(bad)
(bad)
push
outs
add
inc
sbb
inc
sbb
dec
fsubr
push
loop
xor
xor
shl
test
in
xor
push
std
shr
pusha
stos
popf
repz
mov
push
and
mov
fs
pusha
pop
mov
enter
sub
mov
movs
jmp
je
mov
ret
pop
imul
xor
mov
push
sub
imul
jle
mov
mov
cdq
(bad)
push
cs
sub
push
jg
ss
jo
mov
bound
push
imul
cld
leave
cmps
or
pop
cmps
mov
mov
cmps
adc
aas
test
cs
jp
dec
xchg
mov
retf
add
std
icebp
aad
mov
mov
add
mov
inc
xchg
pop
push
cli
pop
mov
jnp
cwde
pop
xchg
inc
pop
and
gs
add
fbld
mov
stos
popf
sbb
enter
pop
mov
in
cmp
mov
stc
(bad)
pop
inc
dec
pop
les
xchg
repnz
jne
dec
pop
mov
mov
add
aad
stc
jl
lahf
xor
inc
or
push
ret
fld
xor
jb
sub
mov
adc
cmp
and
and
(bad)
jmp
inc
add
inc
mov
fidivr
popf
ror
repz
cmp
jnp
ror
mov
sub
pop
ja
out
adc
xchg
call
(bad)
pop
xor
inc
call
mov
sbb
cmps
adc
push
mov
pop
jecxz
rcl
mov
dec
push
cmps
mov
je
push
jns
add
sbb
out
rcr
pop
cmp
mov
sbb
mov
(bad)
xor
and
imul
ret
fmulp
emms
ds
cdq
dec
dec
mov
dec
(bad)
push
mov
add
(bad)
fwait
inc
push
jne
jge
call
mov
fdiv
sub
popa
push
ins
(bad)
stos
fwait
stos
fs
or
mov
or
out
mov
in
sbb
mov
adc
push
inc
adc
outs
pop
cli
mov
dec
mov
lea
sub
movs
ror
pop
ss
pop
cmp
dec
or
pop
(bad)
ret
mov
movs
push
mov
cs
aad
cmps
pop
and
(bad)
jmp
lods
cmp
or
sti
sub
inc
(bad)
and
mov
pop
pop
add
jo
js
test
adc
scas
adc
dec
cmp
dec
lea
rcr
jo
rol
addr16
mov
mov
loope
fcomip
arpl
scas
sti
adc
aas
call
pop
adc
div
mov
test
shr
jmp
or
sub
(bad)
pop
xchg
pop
dec
pusha
pusha
jg
push
mov
loopne
sub
(bad)
jns
movs
jl
idiv
push
mov
xor
mov
arpl
add
ja
jnp
dec
cmp
imul
(bad)
das
cdq
add
mov
into
xor
sbb
inc
and
sbb
les
push
jae
mov
sub
shr
in
jge
push
cmp
mov
jge
cdq
les
es
xchg
stos
sbb
push
pusha
std
out
aas
sbb
xchg
push
test
cmp
add
sub
retf
cmps
sbb
or
imul
retf
push
(bad)
push
xchg
add
or
xchg
lea
jo
xor
ficomp
cmps
push
pop
xchg
aas
sub
addr16
adc
in
stc
and
push
into
or
in
ficomp
fistp
aas
mov
in
out
mov
jne
pop
cmp
out
push
addr16
cld
inc
dec
cli
pop
ds
xor
out
popa
call
cli
push
rcl
mov
dec
mov
rol
scas
ret
mov
sub
xor
fmul
(bad)
repz
mov
inc
cmp
sub
sbb
out
scas
retf
fldenv
inc
es
mov
pop
xor
pop
xchg
outs
test
enter
lahf
test
or
and
std
or
and
or
mov
rcl
iret
sub
dec
cmc
repz
dec
jmp
jno
mov
and
stos
stc
add
mov
xchg
and
inc
push
inc
leave
in
cmp
pop
inc
rcr
repnz
fst
xchg
cmp
scas
(bad)
lds
out
aas
lahf
push
(bad)
dec
xchg
rcl
dec
add
out
push
sub
cmp
adc
inc
data16
repz
retf
jb
outs
int
jmp
mov
xor
xchg
cmp
push
adc
retf
mov
jno
jp
movs
fcomi
xor
pop
cmp
xor
and
das
mov
(bad)
icebp
psrlq
lock
sti
call
repnz
xchg
cmp
imul
jbe
lods
cs
sbb
push
sbb
shl
sbb
adc
mov
mov
xchg
loop
ins
fdivr
xchg
jne
js
adc
mov
ins
mov
dec
jmp
or
mov
ins
out
or
inc
test
xchg
adc
or
jne
and
xchg
out
mov
ror
mov
jecxz
xor
sbb
xchg
mov
pop
push
pop
test
test
sub
or
stos
aad
sbb
add
mov
push
jmp
aad
shr
adc
push
sub
mov
outs
xchg
cmp
fdivr
repz
cmp
sbb
push
std
xor
mov
popf
out
in
fmul
cdq
xchg
out
sti
dec
inc
mov
fistp
push
aas
mov
test
xor
popfw
pop
adc
div
jmp
jmp
nop
xchg
ins
(bad)
jle
mov
or
call
in
(bad)
mov
cs
fucomi
cmp
inc
jns
in
imul
push
push
dec
mov
popa
pop
mov
xchg
mov
add
test
inc
mov
add
sti
inc
pop
inc
hlt
cmp
retf
jae
add
imul
cmp
cmp
mov
ja
cld
ins
jecxz
xchg
aas
cwde
inc
popa
pop
and
sub
xor
aam
stos
lahf
pop
fwait
jecxz
or
pop
jns
push
pop
mov
test
je
mov
jb
jmp
mov
dec
or
push
jae
fldpi
jo
or
sub
sub
mov
or
or
push
xor
or
sub
int3
leave
cli
mov
dec
lock
out
cmp
int
add
mov
or
sbb
loop
clc
and
push
outs
push
into
jne
push
mov
cli
into
cmp
iret
sbb
fs
test
fwait
jbe
jo
pop
retf
aas
xchg
data16
je
pop
fisub
cmp
ror
aam
ror
dec
mov
and
pop
push
ja
xchg
mov
sub
inc
nop
inc
ja
mov
into
xchg
jge
repz
jp
cmp
pop
dec
popf
dec
das
adc
push
mov
or
arpl
sbb
mov
inc
sub
fisubr
aas
mov
xchg
out
inc
jmp
imul
pop
out
aas
or
or
mov
jl
xor
or
rol
cmp
xor
inc
jo
add
mov
nop
mov
push
test
ds
add
inc
xchg
push
pop
dec
shr
mov
xor
cli
inc
jbe
adc
test
pop
sahf
and
test
cmp
ret
and
rcr
jmp
cmp
repnz
pop
mov
std
ja
cmps
push
loop
pop
pushf
into
push
push
aaa
inc
add
rcr
outs
int
adc
test
js
popf
(bad)
inc
retf
imul
je
fwait
hlt
lahf
mov
imul
mov
imul
imul
inc
test
xchg
shr
sub
mov
stos
mov
adc
push
xchg
loope
lahf
loop
(bad)
sbb
addr16
and
and
push
int3
scas
jle
hlt
pop
out
mov
xchg
stc
add
push
jecxz
outs
push
add
test
mov
mov
or
movs
add
outs
push
test
in
sbb
fwait
enter
(bad)
test
adc
jl
dec
inc
mov
fadd
sbb
(bad)
aaa
sbb
(bad)
iret
and
ds
mov
jp
ja
mov
call
cmp
cdq
pop
jmp
and
inc
jp
cmp
das
xchg
and
mov
pop
mov
add
js
aas
ss
movs
push
xchg
xchg
cdq
push
push
cmp
inc
ja
add
ret
ins
dec
mov
mov
cmps
inc
pop
mov
ds
push
lods
test
cmps
aam
in
ss
sub
jns
retf
push
or
dec
cli
add
call
or
mov
out
lock
(bad)
movs
sbb
jecxz
in
cmp
mov
push
xchg
push
in
and
xchg
pop
mov
jno
add
in
movs
jge
(bad)
jmp
out
std
push
jnp
sub
xchg
addr16
ins
lea
or
fisttp
and
(bad)
ja
pop
sbb
ret
rcl
(bad)
xor
mov
ficom
daa
cld
and
xor
int3
jg
lahf
xor
ja
or
add
cdq
xchg
cmp
add
popf
adc
outs
xchg
xor
jbe
mov
xor
or
(bad)
push
lods
sub
and
hlt
ins
test
mov
shl
loope
nop
arpl
dec
dec
pop
xor
mov
out
loop
or
xlat
xchg
ins
in
cmc
dec
sbb
xchg
jns
jb
jg
popa
loop
mov
or
stos
(bad)
ficomp
cmp
mov
mov
je
nop
or
add
sbb
inc
jp
or
push
mov
ret
cmp
mov
ss
inc
jnp
imul
lock
paddb
xor
xchg
dec
mov
mov
cmp
fild
gs
adc
dec
jo
push
ja
movs
mov
mov
push
test
hlt
jmp
in
mov
mov
sbb
add
ins
jecxz
std
sub
jp
out
jle
popa
rol
inc
addr16
pushf
daa
in
xchg
push
(bad)
adc
loopne
cli
and
mov
mov
(bad)
xor
push
mov
add
adc
scas
sti
adc
(bad)
test
cli
adc
add
mov
mov
or
lods
outs
aad
hlt
and
popa
addr16
and
adc
scas
mov
inc
cmp
ds
mov
fidiv
les
icebp
enter
leave
fdiv
and
mov
xchg
push
sub
cmp
je
(bad)
cld
push
aam
and
neg
push
mov
scas
int3
(bad)
mov
scas
in
mov
popa
mov
cmp
movs
mov
mov
push
sub
ds
cmps
and
pop
ds
arpl
jnp
ja
stos
add
retf
mov
jne
push
das
fisttp
mov
jg
adc
xor
out
pop
mov
push
sbb
cs
pavgb
and
fcom
sahf
inc
cmp
in
loopne
sbb
sahf
mov
sar
and
and
xor
shl
popf
outs
jo
push
sbb
xchg
bsr
inc
adc
ins
add
fdiv
les
push
push
and
ja
jle
(bad)
pop
sti
imul
ret
call
(bad)
dec
xchg
pop
jns
jno
ins
shr
mov
jo
jae
or
cmc
call
inc
mov
in
cli
ss
xlat
pop
leave
jae
jmp
retf
retf
fwait
add
push
dec
imul
mov
int3
add
push
mov
daa
ds
sub
movs
and
int
retf
loopne
enter
or
adc
out
pop
loop
add
lock
scas
stos
xor
adc
xor
cmps
xchg
rcl
fwait
mov
jecxz
mov
jb
pop
(bad)
js
leave
cmp
dec
test
dec
(bad)
dec
or
lods
xchg
add
inc
pop
mov
call
call
fdiv
fstp
push
cld
mov
ins
into
(bad)
(bad)
cmps
jl
lods
aad
bound
jge
mov
mov
mov
mov
mov
loop
inc
loope
cmps
jno
(bad)
dec
pusha
mov
xchg
add
push
test
call
sti
mov
enter
adc
out
pop
jb
mov
out
stc
ror
pop
jmp
dec
mov
and
sbb
shl
es
outs
outs
dec
add
inc
out
mov
xchg
adc
fdivrp
mov
scas
push
fwait
mov
(bad)
xor
jns
stos
shr
mov
and
adc
out
jne
push
int3
mov
fincstp
dec
test
dec
pop
mov
js
mov
mov
jbe
ja
pop
not
lods
out
dec
rcl
mov
mov
out
xchg
add
int3
jecxz
inc
and
adc
xor
cmp
test
lahf
in
xchg
gs
jg
and
jae
mov
sbb
shl
xchg
cmp
shl
addr16
mov
mov
and
popf
pop
neg
daa
test
imul
mov
mov
scas
xchg
sub
data16
fwait
imul
dec
inc
add
clc
ins
fstp
lds
mov
xor
retf
pop
inc
nop
movs
aam
fsub
xor
cmp
pop
inc
test
in
xchg
inc
pop
pop
add
sub
bound
dec
(bad)
dec
mov
mov
push
cmp
and
jl
push
sub
xor
xor
daa
mov
cmps
imul
xor
mov
mov
pop
or
aad
adc
scas
scas
adc
(bad)
lods
dec
fisubr
ds
enter
mov
mov
and
shl
sub
ret
into
dec
fwait
cmp
xor
mov
xrelease
push
stos
daa
add
ja
arpl
mov
push
pop
(bad)
xchg
inc
ss
inc
fnsave
loopne
xor
pop
stos
and
pop
es
sbb
xlat
ror
repnz
jmp
adc
mov
scas
mov
cli
add
ror
lds
out
ret
mov
dec
inc
inc
(bad)
(bad)
mov
xchg
mov
pop
data16
cmovs
aas
popf
loopne
mov
sub
dec
push
call
inc
mov
and
test
arpl
lods
jg
ret
psubb
mov
pop
lds
shr
rcr
sub
popa
mov
push
aam
xor
cmp
jbe
sbb
jge
xor
sub
pusha
callw
gs
jge
sub
lock
icebp
(bad)
or
mov
mov
cmp
cmc
(bad)
ins
push
sti
nop
pop
cmp
jne
or
adc
sbb
(bad)
sub
mov
sbb
mov
iret
lahf
jle
mov
out
fwait
xor
repnz
outs
xlat
movs
dec
dec
cmps
outs
xlat
adc
jne
jl
jg
cmp
dec
(bad)
xchg
push
loop
jo
pop
xchg
jmp
test
jo
xor
popa
stos
sub
outs
mov
push
xchg
sbb
jno
rcr
or
icebp
sub
lods
in
sti
pop
jge
sbb
mov
xchg
not
mov
sbb
xchg
out
adc
repnz
enter
mov
jbe
ins
stc
jle
aas
xchg
mov
cmp
mov
sbb
jg
sbb
mov
and
push
movs
xchg
jno
mov
jle
enter
mov
dec
mov
fistp
pop
jg
pop
lods
test
push
mov
fmul
nop
iret
mov
cmp
cwde
sahf
retf
fsubr
addr16
pop
dec
jb
push
cli
xor
gs
xchg
mov
pop
jns
and
jnp
aad
jmp
outs
push
xor
popa
jg
push
fadd
fmul
jae
mov
jp
add
or
in
retf
popf
xchg
add
lods
addr16
and
loope
push
xor
adc
jp
in
sub
stc
call
xchg
pop
inc
mov
sbb
or
retf
add
scas
fld
in
lods
pop
shr
das
inc
(bad)
in
cmp
shl
dec
jecxz
daa
gs
cli
pop
es
inc
(bad)
dec
fs
adc
inc
je
sbb
js
pushf
cmp
lds
retf
out
xchg
cmps
pop
pop
dec
loopne
inc
jg
push
outs
mov
jnp
das
pushf
ja
sub
push
mov
jb
cmp
ret
es
std
and
cmp
sub
pop
cmp
mov
xor
pushw
into
call
cmp
test
inc
sub
mov
ret
in
and
arpl
and
mov
gs
xchg
mov
popf
into
or
in
sbb
pop
daa
sahf
or
mov
mov
pop
cmp
aas
fsub
into
repnz
enter
add
jg
iret
and
aad
es
in
inc
and
jp
mov
and
mov
push
pop
test
mov
arpl
arpl
mov
lea
stos
mov
mov
scas
aaa
stos
das
inc
loopne
sub
loopne
push
sti
(bad)
ins
add
xchg
xor
cs
nop
lds
fadd
popf
cmp
mov
jl
test
in
sti
push
mov
cli
shl
sub
sub
adc
fiadd
or
je
daa
in
sub
test
int
sbb
cmp
shr
xchg
mov
jnp
repnz
mov
test
xor
inc
repnz
nop
ret
jb
lods
dec
pop
inc
test
jbe
loopne
imul
cmps
pop
(bad)
adc
daa
jmp
adc
mov
cmp
bound
lds
ins
js
jno
add
and
call
jno
iret
fcomp
cli
scas
outs
sub
imul
test
sub
(bad)
adc
dec
repz
jle
mov
jae
sbb
out
pusha
fnsave
push
hlt
rcl
sbb
aam
rcr
fcomp
pop
jmp
push
movs
dec
mov
mov
rcr
fist
out
jle
mov
adc
loop
adc
loop
sbb
stos
rcl
hlt
inc
mov
sbb
std
adc
bound
add
mov
xchg
push
mov
push
xchg
inc
out
xlat
pop
adc
(bad)
inc
mov
add
adc
jbe
div
scas
rcr
jmp
xor
xchg
mov
out
push
jmp
add
stos
pop
pop
fstp
daa
mov
adc
inc
pusha
mov
jae
in
cmc
push
inc
in
sub
sbb
xor
pop
inc
(bad)
xor
mov
dec
cmp
movs
inc
inc
aam
cdq
movs
jle
dec
xchg
mov
and
stos
adc
idiv
mov
add
cdq
(bad)
adc
or
aas
jmp
dec
jg
sub
ret
mov
mov
(bad)
mov
iret
inc
arpl
icebp
stos
push
icebp
fs
dec
pop
add
push
push
push
(bad)
imul
and
push
sub
int3
or
popf
pop
sti
cmp
push
push
int
(bad)
jbe
shl
cmp
jno
mov
hlt
and
ins
cmp
dec
data16
fadd
cmc
aas
or
imul
add
dec
pop
lods
pop
aam
xchg
lds
and
jbe
out
call
imul
je
xor
daa
cmps
ja
push
sbb
inc
or
mov
dec
in
bound
fwait
mov
test
cmps
test
pop
mov
mov
push
fcomp
call
add
push
push
xchg
ds
repnz
inc
adc
mul
xchg
or
not
pop
out
adc
push
cld
cmp
clc
adc
xchg
adc
idiv
loop
jns
sub
test
pand
pop
imul
lock
aaa
jge
cmp
es
dec
cmp
push
loope
pusha
jb
pop
sti
cdq
inc
xor
in
or
inc
bound
mov
pop
mov
push
and
lods
push
mov
bound
push
sbb
ss
sbb
sub
push
outs
les
out
cli
nop
mov
inc
jne
push
and
mov
mov
push
test
and
inc
mov
jb
retf
xstore-rng
cmps
(bad)
not
mov
fwait
fs
and
rol
jmp
xor
xor
aad
adc
adc
push
fistp
mov
outs
push
fcom
xlat
sub
mov
stos
sub
inc
pop
adc
cli
sbb
hlt
js
data16
test
out
lea
int3
sub
out
add
add
ds
inc
mov
cmp
jnp
sti
out
and
jo
mov
mov
dec
js
nop
dec
test
arpl
imul
dec
cli
xlat
cli
jl
mov
sar
or
xor
mov
in
inc
rcr
lea
stc
icebp
xor
xchg
sti
pop
retf
sub
(bad)
mov
xchg
or
and
inc
retf
mov
lahf
jns
pop
cmp
cmp
imul
in
pushf
add
test
mov
cld
push
dec
(bad)
clc
lods
mov
iret
into
or
inc
dec
int3
pop
mov
mov
jmp
in
xchg
mov
push
cdq
push
push
nop
mov
jmp
mov
xlat
ret
repz
push
xor
cmp
mov
shl
dec
jb
retf
cmp
(bad)
fild
xor
mov
pushf
mov
push
je
lds
gs
iret
pop
push
cmps
or
mov
fcmovne
jae
mov
push
push
test
inc
mov
or
cmc
mov
lds
push
(bad)
call
mov
pop
push
or
cdq
addr16
loopne
cwde
push
or
push
sub
sahf
imul
push
xor
xor
xchg
pushf
add
fistp
mov
aaa
dec
arpl
jno
icebp
jbe
rcr
inc
cmp
and
pop
and
nop
test
inc
sub
outs
fucom
fwait
stos
and
xor
or
data16
mov
push
and
pushw
ds
fstp
xchg
mov
mov
cmp
push
sbb
fcom
push
xor
repnz
xchg
lahf
(bad)
idiv
(bad)
cdq
fldcw
add
cmp
xor
iret
sti
adc
push
rcr
pushf
push
call
mov
repz
jle
mov
fwait
jg
inc
jnp
mov
sbb
retf
fist
pop
sub
push
enter
add
and
xchg
sub
das
inc
push
xor
fs
cs
iret
adc
into
les
ja
movs
dec
mov
and
or
or
out
outs
fcom
cld
push
add
shr
dec
push
xor
jne
and
add
or
inc
inc
pop
mov
int3
daa
xor
jp
(bad)
push
loop
(bad)
scas
call
and
mov
js
in
mov
(bad)
or
mov
cmps
jbe
loope
sbb
add
ret
cmp
jne
push
iret
fnstsw
test
mov
call
pop
enter
jns
cmc
pop
loope
pop
cdq
push
mov
fistp
and
stc
add
push
test
popf
(bad)
in
and
in
lods
mov
imul
movs
std
(bad)
and
or
loop
ins
mov
mov
inc
push
into
adc
xor
add
outs
cwde
mov
push
test
xor
repnz
ret
sub
adc
jmp
inc
fucomi
aas
movs
and
ins
out
lock
in
retf
into
mov
jmp
orps
adc
test
gs
idiv
sahf
xor
test
push
xor
mov
xchg
int
iret
sbb
xchg
(bad)
cwde
arpl
bound
mov
pop
push
inc
xor
cli
dec
xchg
clc
mov
cmp
push
mov
push
in
lds
in
adc
cmps
jecxz
(bad)
lods
bound
sbb
inc
mov
call
push
test
aad
aaa
jbe
aas
and
pop
or
aas
call
jb
inc
pop
or
xchg
push
lods
xlat
add
inc
inc
sbb
pusha
mov
mov
mov
inc
lea
loope
fdiv
fwait
pextrw
add
inc
and
bound
inc
xor
rcl
sbb
imul
bound
and
addr16
mov
cwde
(bad)
ret
addr16
inc
dec
in
fcom
pop
dec
loop
stos
jnp
adc
mov
cs
fiadd
retf
sub
push
dec
push
pop
dec
cmp
push
call
sub
xchg
in
ss
lods
mov
sahf
xchg
lods
les
bndldx
jl
jnp
mov
lea
daa
jbe
ja
mov
inc
mov
cwde
push
inc
xor
test
sbb
test
nop
jb
sub
add
jecxz
fst
cld
push
mov
jp
lods
or
jns
mul
mov
test
popa
retf
out
xor
arpl
and
lods
aaa
jb
adc
jg
push
pop
xchg
loope
ja
mov
jmp
xor
arpl
push
sub
out
cmps
inc
arpl
dec
sbb
pop
xchg
fstp
mov
or
or
jnp
ficom
xchg
adc
movd
loope
imul
jo
jge
das
mov
or
cmp
mov
dec
movs
cmps
popf
cmp
or
xor
jne
and
push
iret
clc
ss
hlt
stos
and
movs
cli
mov
fmul
mov
pusha
pop
add
jmp
mov
movhps
and
mov
sti
loopne
test
jmp
mov
mov
mov
test
push
loopne
aas
movs
xchg
scas
into
pop
call
dec
loope
xor
mov
jl
mov
sbb
call
les
mov
out
jns
data16
sub
stos
push
shl
jge
xor
cmp
sbb
sbb
cmps
sahf
add
xchg
es
pop
outs
pop
popa
and
enter
imul
push
pop
ins
xchg
jl
and
sub
jne
sahf
test
push
jmp
fisttp
gs
jmp
(bad)
pusha
adc
sti
(bad)
mov
(bad)
das
cwde
and
mov
add
movs
xchg
popa
xor
jo
shr
mov
fs
and
cmp
cmc
movs
fild
arpl
push
sub
lock
scas
inc
lods
movs
pop
sbb
movs
(bad)
cmp
jle
lea
xchg
add
adc
xchg
xchg
enter
add
out
imul
adc
inc
pop
loopne
lahf
jne
xor
test
(bad)
outs
pop
push
sbb
pop
jmp
fs
xchg
out
test
xor
sbb
int
data16
std
sub
add
dec
(bad)
mov
rol
dec
push
js
stc
xchg
adc
aaa
cmps
or
das
jg
cmp
mov
xchg
rcr
and
mov
push
or
jecxz
adc
xchg
ins
dec
xor
cmp
mov
xchg
push
mov
sar
repnz
push
arpl
add
xchg
imul
aam
inc
push
mov
add
mov
cdq
nop
cld
rol
push
pop
push
cdq
push
sti
mov
in
mov
test
cs
mov
add
fisub
pushf
daa
cmps
stos
and
or
inc
cmp
adc
xchg
ins
rcr
test
mov
jns
cmp
(bad)
rol
mov
pop
icebp
fnstsw
fsubr
add
aad
cmp
xlat
pop
adc
cmp
mov
mov
jb
mov
or
inc
fsubr
jecxz
add
and
retf
scas
inc
fwait
cdq
xor
iret
add
les
scas
shr
shl
xchg
cli
and
sub
sbb
ret
stos
sti
outs
lods
pop
movs
sub
mov
and
push
or
add
cmp
or
xor
dec
das
popa
repnz
push
push
pop
adc
push
sahf
out
in
mov
dec
and
cmp
ds
inc
stos
cld
and
dec
add
sbb
and
jmp
dec
lods
jg
xor
les
(bad)
push
mov
sti
js
xchg
push
call
imul
jne
(bad)
out
inc
jl
add
in
xchg
div
sar
aam
dec
sahf
and
jns
mov
js
jns
adc
cmp
push
daa
fmul
bnd
and
or
add
pop
jg
jp
mov
dec
repnz
test
test
in
sub
fs
out
arpl
push
sbb
imul
adc
mov
stos
ja
xchg
sub
inc
and
loope
loop
xor
cwde
adc
out
mov
or
push
scas
jae
push
cmps
mov
int3
fcmovne
ficomp
add
xchg
loop
fsubr
frstor
pushf
ror
mov
(bad)
icebp
sub
push
and
mov
mov
stos
ficom
mov
jge
fadd
test
push
(bad)
adc
data16
xchg
adc
mov
hlt
div
pop
push
sub
repnz
sbb
and
and
mov
js
test
dec
clc
jecxz
cmp
(bad)
into
neg
mov
arpl
stos
pop
pop
fldcw
pop
inc
or
(bad)
cmp
cmp
inc
(bad)
inc
sahf
mov
xor
lods
ins
in
jge
jo
cmp
inc
loope
and
mov
lea
les
popf
and
fiadd
aas
arpl
xchg
jecxz
lea
add
cdq
sbb
sub
push
and
xor
push
pop
cs
ins
jne
add
inc
jp
push
jae
fs
retf
fstp
je
jge
je
or
lods
jno
aas
cmps
fisttp
retf
adc
mov
shr
sti
add
sub
ins
dec
movs
mov
ds
xchg
and
dec
or
dec
movs
leave
pop
xchg
adc
cmc
fsubp
fldpi
jp
sbb
dec
mov
push
cmp
mov
xchg
mov
(bad)
fisub
push
push
push
nop
test
rol
sti
(bad)
and
jmp
setns
addr16
jne
jne
scas
fisttp
arpl
jmp
push
js
xchg
adc
sub
mov
xor
arpl
push
jmp
fcom
push
shr
mov
mov
fistp
sub
cld
xor
jmp
scas
loop
inc
out
les
out
xlat
scas
lahf
inc
pusha
push
call
pop
jb
mov
enter
pop
enter
xchg
push
popf
adc
sbb
push
mov
ror
add
inc
cdq
xor
inc
dec
stos
movs
fsub
pop
shl
sbb
jmp
xor
xchg
loope
dec
xchg
pop
fdivr
or
xchg
dec
pop
inc
mov
test
inc
fs
(bad)
call
or
mov
dec
adc
outs
xchg
std
bound
pushf
addr16
jp
scas
cli
mov
xor
mov
stos
fisttp
mov
mov
fxch
mov
mov
fs
fcomip
punpcklwd
dec
push
(bad)
out
or
xchg
inc
loope
scas
sub
push
inc
and
jo
cli
mov
je
scas
jne
test
jmp
mov
pop
mov
repz
and
pop
loope
les
mov
xor
mov
jae
mov
push
call
ss
mov
arpl
mov
add
into
std
or
(bad)
fidiv
imul
push
push
fmul
daa
sbb
or
jecxz
cmp
xor
pop
adc
mov
lods
mov
dec
mov
dec
mov
and
retf
xchg
(bad)
shl
lods
sbb
ffreep
movs
(bad)
(bad)
mov
mov
fld
sbb
xchg
cmp
stc
dec
push
sub
or
push
xor
(bad)
dec
push
scas
in
das
test
sub
cwde
inc
int3
fidiv
jl
mov
call
lods
xor
sub
out
sub
sub
xor
lock
push
mov
enter
push
cmp
sbb
push
push
dec
mov
outs
stos
or
jbe
sub
jmp
dec
pop
dec
repz
mov
dec
pop
inc
add
ret
aas
loope
stc
pop
and
pusha
add
loope
aas
inc
pop
fs
test
imul
pop
jbe
popa
pop
inc
adc
(bad)
inc
mov
mov
packssdw
repz
in
jae
stos
xor
ret
nop
jns
nop
or
sub
adc
(bad)
repnz
sbb
ss
jne
mov
cmp
push
mov
inc
sbb
pop
push
and
cmc
adc
call
jae
mov
rcr
fisttp
sub
lock
push
xor
retf
loope
(bad)
(bad)
cmp
test
add
gs
mov
adc
adc
xlat
jle
sub
in
loope
push
in
sub
sbb
repz
mov
pop
add
(bad)
mov
ret
mov
adc
(bad)
xchg
xchg
jge
jl
enter
shl
cwde
pop
jge
loope
cmc
repnz
sub
xor
repz
and
(bad)
and
aam
mov
mov
push
push
dec
loop
mov
mov
cmps
pushf
pop
xchg
call
xchg
push
jp
in
pop
push
(bad)
stos
hlt
icebp
mov
(bad)
imul
add
popf
loope
sahf
frstor
dec
in
sahf
outs
imul
xchg
add
sbb
mov
jge
out
std
dec
push
movs
add
loop
mov
or
mov
ret
imul
inc
sub
mov
inc
mov
xlat
add
popa
mov
into
xor
mov
adc
popa
mov
inc
(bad)
mov
sub
dec
push
data16
in
out
add
cmps
scas
sbb
inc
cmps
xchg
add
sahf
push
and
push
mov
pop
retf
push
push
(bad)
xlat
jmp
bound
mov
cmp
pusha
mov
mov
jb
jns
or
cmp
aaa
fcomp
mov
cmps
addr16
inc
stos
fisubr
into
push
cmp
leave
or
pop
xor
stos
cs
cdq
sbb
add
pusha
xchg
pop
xor
xor
popa
dec
push
fsub
jb
pop
and
adc
mov
fcmovnu
lahf
je
jmp
sub
iret
sub
cmps
movs
mov
aad
xchg
fwait
jl
cmc
sbb
push
cmc
inc
popa
inc
pop
ins
cmc
pusha
test
mov
lock
sub
je
jb
stos
pop
jecxz
shl
test
scas
pop
jl
mov
fdiv
repz
pop
mov
jp
sub
jge
ror
xchg
dec
mov
out
mov
pop
out
movs
or
ret
and
inc
ds
fs
push
cmp
pop
pop
push
add
inc
xchg
mov
call
jmp
lods
(bad)
fcomp
loope
sub
aas
pusha
ret
sbb
movs
sub
xchg
fisub
mov
add
adc
pusha
adc
ja
ins
loopne
or
hlt
mov
pop
cmp
add
ror
in
cli
dec
dec
ret
retf
shl
dec
fidiv
or
mov
test
xchg
or
nop
rcl
xchg
lds
sbb
sar
inc
cld
xor
dec
push
fnstcw
and
bound
inc
pop
xchg
leave
rol
pop
test
jl
inc
fisub
jge
dec
and
xor
push
(bad)
pop
jecxz
sub
add
faddp
sti
scas
pusha
xor
xor
sti
clc
out
inc
imul
dec
inc
test
jmp
and
clc
xor
push
sub
leave
pop
test
mov
dec
repz
xchg
out
es
int
xor
sub
pop
pop
(bad)
inc
add
add
jmp
cmc
and
push
shl
mov
xlat
mov
dec
mov
and
ret
and
and
mov
mov
int3
loope
pop
sbb
push
mov
xchg
sbb
cs
les
mov
dec
sub
or
loop
lds
stos
ffreep
mov
adc
and
cld
fist
and
cmp
sahf
stc
adc
enter
(bad)
lods
ja
xor
mov
push
xchg
test
cdq
(bad)
out
dec
cld
jns
xchg
popa
sbb
sbb
dec
sub
outs
aam
add
mov
leave
ss
movs
mov
xor
jbe
xor
xor
mov
shl
not
cmp
inc
sbb
mov
xor
shl
rcl
xchg
loope
inc
out
inc
dec
aad
ja
aad
mov
ret
and
push
add
bound
inc
stos
ss
xor
cmp
pop
imul
and
push
outs
xor
sbb
in
xchg
mov
inc
push
mov
aam
xchg
or
cmp
imul
pop
sbb
ss
outs
out
dec
or
fsub
call
rcr
add
or
cmc
sar
pop
adc
(bad)
dec
sar
movs
fiadd
adc
pop
test
clc
in
pop
cmps
xchg
retf
jno
lea
xor
mov
repz
push
and
lahf
cmp
add
xor
mov
add
test
jne
cmp
fwait
sar
mov
ret
xor
mov
sub
sbb
xor
mov
or
repz
int3
add
lds
sub
pop
mov
inc
mov
mov
xchg
xor
push
(bad)
stos
int3
add
cmp
rol
ja
out
jno
jne
mov
xchg
xchg
leave
xor
jns
(bad)
(bad)
dec
mov
xchg
sbb
pop
fdivrp
push
xchg
dec
cwde
sub
dec
add
xchg
xor
jo
repnz
pop
pop
out
xor
xor
in
ins
outs
sahf
jp
mov
and
fnsave
sbb
int3
mov
xor
mov
inc
enter
imul
sahf
mov
push
cmc
das
pop
mov
dec
xlat
ss
ds
or
push
jg
jb
xchg
jmp
inc
pop
ins
xor
mov
test
jmp
inc
pop
inc
mov
mov
sahf
pushf
outs
push
mov
in
stos
movs
mov
clc
adc
and
aam
call
cmps
in
jne
daa
rcr
movs
sti
xchg
jp
mov
push
jp
loop
sub
pop
jg
xchg
repnz
xchg
xchg
(bad)
sahf
mov
cs
push
retf
cmp
dec
js
mov
pop
cmp
xchg
outs
loopne
scas
sub
jle
call
push
mov
ret
xchg
inc
mov
rol
popf
inc
repnz
vcvttps2dq
int
lods
or
outs
push
inc
test
imul
aas
test
push
push
pop
sbb
hlt
stos
xchg
out
fadd
cmps
mov
cdq
sub
cmp
xchg
dec
cmp
ret
add
sbb
pop
push
cmp
dec
daa
inc
jmp
ja
int
lods
in
sbb
lds
icebp
mov
push
sub
shr
sbb
pop
out
lea
and
call
les
and
fs
xor
xchg
push
xchg
dec
jno
scas
clc
retf
push
in
idiv
adc
sbb
shl
fisub
sbb
pop
sbb
ds
push
fwait
xor
cli
loop
mov
dec
lea
fxch
sbb
in
test
xor
outs
repnz
dec
addr16
enter
xlat
retf
stos
aad
je
jg
cs
bnd
jp
or
lods
jne
mul
push
jl
push
cwde
mov
mov
jmp
xchg
movs
mov
fnsave
push
pop
add
xor
pop
mov
push
into
enter
cs
or
mov
aad
inc
outs
sub
enter
xchg
jmp
xor
aas
add
hlt
stos
push
pop
loope
xlat
fcom
mov
push
dec
push
call
out
dec
rcr
mov
and
jmp
ins
xchg
push
mov
dec
dec
push
std
in
jmp
or
push
mov
sub
outs
cmps
out
popa
mov
jge
addr16
dec
push
popf
push
push
inc
das
lock
out
ins
mov
fs
jg
fmul
clc
fmul
jbe
xchg
je
push
mov
aaa
(bad)
push
das
jp
sub
sbb
mov
add
adc
pop
adc
sbb
fcom
mov
popf
jg
xor
xchg
out
xchg
rol
or
add
shl
xchg
add
std
and
jne
mov
fst
jl
lds
dec
and
inc
ins
sahf
xor
pusha
jmp
hlt
arpl
retf
(bad)
mov
sub
aaa
xchg
sub
movs
mov
(bad)
fmul
inc
or
mov
xor
out
push
mov
cmps
fidiv
ja
outs
addr16
sahf
aad
arpl
cdq
repz
jnp
sub
add
xchg
outs
push
jo
mov
or
das
scas
sti
out
ja
cmps
cmp
(bad)
jge
jp
(bad)
jmp
ds
std
add
imul
movs
add
fs
mov
add
pop
jmp
pushf
ror
mov
or
jnp
cmp
in
mov
call
or
xor
hlt
rol
push
repz
fisttp
jnp
mov
scas
and
test
aas
je
pop
aaa
(bad)
sub
ficomp
xlat
jb
imul
js
inc
mov
outs
cwde
cli
scas
std
fisubr
fsub
sub
pop
ja
jmp
push
aam
cmp
xchg
fdiv
jb
int3
shl
fsubr
mov
les
xlat
in
inc
mov
dec
jo
xchg
push
mov
or
fwait
aaa
xchg
jle
stos
cmc
dec
popa
in
mov
add
sti
xor
adc
push
cmp
out
(bad)
in
(bad)
mov
cmp
adc
outs
inc
aam
iret
pusha
stos
(bad)
and
out
cmp
inc
cdq
retf
and
pop
pop
xchg
mov
sbb
xchg
call
jl
dec
jne
pop
mov
mov
mov
retf
out
movs
adc
imul
inc
out
mov
iret
xlat
adc
daa
xor
pop
push
imul
inc
sbb
xchg
add
out
and
mov
jno
mov
shl
scas
call
(bad)
dec
mov
fbld
sbb
aaa
lods
inc
bnd
and
ret
movs
ja
push
xor
mov
ror
or
cs
sbb
ret
sub
fmul
jmp
jle
pop
lods
xor
cmp
adc
retf
shl
push
or
or
ss
adc
cwde
neg
pop
jl
jle
add
fstp
mov
dec
mov
pop
fs
dec
mov
(bad)
repz
inc
stc
fimul
(bad)
leave
sbb
cmp
dec
pop
push
ror
pop
int3
fnstcw
xchg
push
rol
push
jecxz
xor
arpl
xchg
sub
lea
sbb
lds
and
dec
lock
enter
push
dec
push
sub
inc
xchg
retf
push
sbb
cmps
or
and
in
xor
scas
int
pushf
pop
loop
mov
push
fist
movs
dec
clc
add
push
(bad)
data16
out
aas
mov
(bad)
stc
mov
push
in
repz
test
xor
or
xchg
repnz
sar
loope
sbb
mov
xchg
mov
lods
or
sbb
cmp
fwait
adc
sbb
push
inc
push
leave
cmps
mov
(bad)
fsub
or
test
xchg
push
call
ja
xchg
scas
(bad)
mov
push
push
fnstenv
ret
mov
ror
dec
movs
mov
mov
adc
mov
push
push
rcl
push
cdq
sub
pop
rcl
lods
(bad)
mov
loop
jb
je
adc
dec
adc
dec
xchg
les
loop
inc
in
sti
in
cdq
push
ficom
sub
pop
mov
add
xor
cmps
add
mov
movs
fxch
adc
sbb
inc
adc
pushf
imul
xor
jle
jne
bound
jnp
iret
sbb
loope
cmp
jmp
into
(bad)
mov
cmp
xsha256
cmps
(bad)
mov
retf
sbb
adc
movs
sub
je
loop
push
loop
mov
scas
xor
mov
nop
out
fdivr
jg
or
jmp
add
add
jne
repz
stos
sbb
dec
cmp
in
jbe
pop
leave
retf
sbb
pause
outs
inc
lahf
add
daa
mov
imul
and
xchg
fcom
adc
cmc
sbb
mov
cmp
cmps
loope
push
mov
sub
stos
dec
ret
pop
xchg
(bad)
mov
add
lods
stos
jb
outs
aaa
mov
jl
mov
dec
cmp
inc
enter
push
or
aam
sbb
mov
ds
push
std
loop
mov
xchg
cmp
adc
retf
mov
in
and
push
(bad)
int3
mov
pop
retf
xor
and
adc
pop
sysenter
cmp
jno
cmps
dec
add
inc
sub
adc
shr
pop
out
pop
in
cmp
fstp
iret
nop
push
arpl
adc
inc
mov
sahf
xor
test
icebp
and
cmp
stos
out
cmp
test
or
bound
aam
lock
mov
push
jg
in
cmc
fwait
shr
ret
cdq
push
cmp
mov
add
popa
stos
sub
call
call
scas
jp
ja
push
xor
push
xor
icebp
sbb
cmp
mov
cwde
aas
push
pop
push
call
in
mov
xor
loopne
mov
dec
ins
gs
mov
sub
stos
hlt
dec
cmp
and
aad
jno
int3
or
cmps
retf
mov
xor
stos
enter
mov
jmp
rcl
jp
retfw
outs
cwde
jmp
movs
(bad)
mov
push
ins
inc
mov
out
cmps
adc
ds
mov
adc
mov
mov
popa
shl
(bad)
mov
or
or
jecxz
fidiv
cmps
jne
mov
push
push
mov
sub
inc
aad
sub
aaa
or
rcl
mov
(bad)
in
int3
int3
loop
mov
inc
jbe
mov
call
pop
dec
jmp
pop
pop
iret
arpl
sub
lods
mov
lods
jnp
cmps
xchg
jl
das
rcpps
nop
xchg
movs
cmp
cmp
jge
cmp
loope
xchg
les
push
jbe
xor
jp
and
add
ins
ss
pop
xchg
(bad)
jo
xchg
mov
add
cmc
dec
cmp
mov
pop
xor
test
adc
pushf
mov
or
clc
das
loop
sub
and
lock
pop
mov
xchg
(bad)
and
xchg
adc
push
jg
test
test
aam
pop
push
test
stc
not
pop
or
or
ss
pop
sbb
cmp
ret
adc
xchg
sbb
add
jb
retf
mov
mov
nop
lods
push
mov
repz
loop
dec
jl
clc
enter
xor
inc
xchg
aam
and
test
xor
mov
xchg
fnstcw
nop
push
scas
and
hlt
popa
dec
test
jns
pop
cmp
out
push
pop
aaa
imul
or
jmp
movs
inc
rol
sahf
(bad)
push
sub
push
cmps
fs
push
sbb
jns
gs
mov
mov
cdq
(bad)
sbb
cdq
call
push
xlat
or
cs
retf
cmc
xor
retf
pop
pop
(bad)
(bad)
fldenv
jle
mov
lahf
xchg
push
outs
mov
jl
dec
test
jne
jbe
out
mov
fldcw
sbb
sub
mov
fsubr
push
aad
fdivr
loope
cmp
inc
daa
mov
les
pushf
in
jle
test
frstpm(287
push
and
cmp
fwait
mov
inc
inc
sbb
xchg
push
xchg
repnz
xor
inc
int
ja
clc
and
add
xlat
out
mov
pop
test
jb
inc
movs
mov
hlt
aam
adc
aam
fldenv
adc
loop
cli
xor
pop
in
and
inc
push
mov
adc
mov
int3
dec
js
or
dec
cmps
mov
lahf
dec
pop
repz
xor
sub
mov
and
cmps
fnstsw
push
adc
sub
lods
cs
push
sub
(bad)
sbb
scas
push
data16
mov
aam
mov
in
sbb
dec
add
xchg
movs
and
(bad)
(bad)
jp
push
aas
push
addr16
cmp
adc
add
es
sahf
sub
pop
cmp
call
ds
pop
push
call
pop
sub
loopne
rcl
out
xchg
lods
fs
pop
jmp
adc
out
pop
sub
std
xor
data16
inc
retf
popf
loop
aam
mov
fild
stos
sub
pop
pop
and
jns
jnp
cmp
shl
xchg
xchg
nop
sub
adc
jo
ja
out
jle
ret
mov
int3
add
jnp
jg
fcom
adc
xchg
(bad)
xchg
cmp
(bad)
aam
pop
fwait
retf
fisubr
sub
clc
add
jae
push
mov
push
cmps
jl
push
xor
xchg
or
(bad)
mov
push
mov
dec
ret
sbb
xor
cmp
rcr
adc
mov
fnstcw
movs
jnp
gs
push
enter
out
push
cdq
or
jns
jge
adc
psrlw
sbb
push
mov
sub
jmp
scas
gs
gs
add
movs
push
arpl
inc
sbb
adc
repz
and
fistp
adc
push
mov
mov
dec
dec
mov
dec
sub
mov
add
ds
sbb
(bad)
push
add
in
stc
mov
xchg
leave
push
(bad)
mov
push
xor
push
and
loopne
shl
sub
clc
or
lea
adc
mov
inc
bound
xor
out
jl
ins
cmp
adc
sub
lods
stc
cdq
hlt
adc
test
sub
add
mov
out
lods
(bad)
stos
push
xlat
retf
adc
xor
adc
or
cmp
ins
addr16
imul
jo
ds
in
push
nop
push
mov
and
test
mov
lods
pop
cmps
pop
inc
mov
jnp
pop
sar
fwait
mov
dec
mov
pop
push
fisttp
jmp
stos
mov
sbb
adc
outs
shr
push
ror
scas
stc
inc
rol
dec
or
and
xchg
and
xchg
add
and
adc
sar
fsubr
addr16
stos
inc
aad
jmp
mov
xchg
mov
or
sbb
xor
push
xchg
mov
push
jl
mov
sbb
ja
jmp
pop
es
(bad)
in
mov
inc
retf
nop
enter
je
std
xchg
loope
ret
jge
mov
push
add
retf
inc
dec
fisttp
cmps
push
mov
add
scas
sti
fst
dec
sub
or
cmp
xor
jns
rol
pop
adc
iret
push
xchg
retf
fwait
inc
je
push
xor
xchg
jno
ss
lahf
cwde
popa
adc
and
sub
dec
push
sub
jmp
dec
inc
push
push
cmps
push
js
arpl
sub
retf
mov
dec
movs
pop
mov
std
xchg
sub
out
icebp
sbb
pop
jns
mov
xor
(bad)
xor
pop
inc
sub
es
pop
and
cmc
test
cmp
loope
cmc
xor
dec
ficom
push
pop
out
lock
jle
xlat
int
xor
mov
inc
xor
popa
push
pop
push
outs
xchg
or
sahf
daa
test
adc
push
out
out
push
stos
or
out
test
push
lock
test
mov
sbb
enter
xor
jno
fs
adc
mov
mov
add
or
bound
adc
adc
adc
push
fidiv
rol
pushf
sar
push
mov
add
rcr
push
fld
mov
sub
inc
lea
xor
fstp
outs
add
lods
or
fisub
adc
jecxz
(bad)
xchg
and
rcl
(bad)
test
jg
sub
mov
mov
pop
cdq
dec
jo
cld
mov
xor
test
mul
lods
(bad)
xor
inc
inc
push
out
mov
data16
sbb
in
xlat
cmp
das
call
test
pop
push
or
faddp
and
inc
cmp
std
cmps
add
out
push
cmp
mov
jle
pop
xchg
dec
mov
aam
fld
push
hlt
fs
lea
(bad)
xchg
sbb
lahf
out
loop
loopne
pop
scas
aaa
dec
cmps
add
ror
adc
push
cmp
shr
cdq
icebp
into
in
test
and
outs
cmps
ja
xor
scas
arpl
cdq
outs
mov
arpl
xchg
add
push
xor
lea
inc
xchg
mov
adc
adc
popf
push
mov
bound
sbb
repnz
fldenv
mov
cmp
lea
js
and
aaa
cmps
cmc
add
(bad)
dec
mov
mov
jno
push
mov
mov
xor
test
and
cmp
inc
(bad)
neg
pop
jno
adc
(bad)
adc
or
fld
or
sub
loop
jge
xor
dec
(bad)
pop
retf
mov
out
in
std
sbb
movntps
mov
addr16
and
and
sub
scas
int
sahf
sar
jg
mov
cmp
mov
pusha
cmps
stos
test
shr
scas
bound
push
stos
pop
(bad)
mov
stos
jmp
mov
test
or
mov
scas
mov
jle
sub
push
sbb
test
and
in
data16
test
or
cld
test
push
mov
pusha
sahf
movs
loopne
jmp
lahf
rcl
loopne
sub
xchg
push
or
adc
jg
nop
ret
pop
xor
jnp
push
mov
jmp
in
mov
test
or
pop
pop
sub
aas
mov
repnz
add
inc
sub
xchg
xchg
jl
rcl
xor
add
rcl
jae
nop
sahf
(bad)
cmc
mov
retf
fild
ret
mov
addr16
push
aaa
cmc
mov
or
enter
call
xchg
(bad)
mov
and
cmp
call
movs
and
mov
mov
mov
fs
xchg
les
ins
sbb
les
lods
inc
imul
(bad)
cdq
pusha
cmp
div
inc
lahf
pop
inc
daa
add
fisubr
jne
jl
fs
cmps
mov
push
inc
xchg
das
mov
loopne
aad
xchg
xor
loopne
pop
jno
add
cdq
jno
dec
stos
or
add
mov
mov
push
lea
jmp
mov
jns
and
mov
jl
pop
imul
cmp
fistp
sbb
test
mov
cs
adc
add
mov
scas
stc
js
mov
lds
push
pop
dec
xchg
shr
in
jp
mov
push
mov
in
retf
bound
mov
fisub
sbb
adc
ret
pushf
push
jp
adc
pop
ss
fldcw
ds
mov
and
cmp
push
mov
mov
gs
out
outs
lea
xor
test
dec
int
dec
es
mov
or
or
mov
cld
mov
test
leave
xchg
mov
ss
sbb
push
jae
sub
mov
gs
inc
xchg
adc
repz
cmc
adc
push
mov
movs
mov
sub
push
mov
xor
adc
inc
xchg
retf
in
div
sub
dec
cwde
repnz
and
idiv
ins
lods
arpl
sahf
add
hlt
dec
shl
shr
cmp
push
jmp
xchg
lock
push
add
test
stos
add
lock
dec
cmp
imul
sbb
xor
test
ja
mov
or
sub
xchg
mov
inc
mov
mov
stos
inc
and
push
or
(bad)
cmove
jae
js
popa
or
dec
mov
or
mul
movs
cmp
sbb
out
mov
fwait
call
xchg
iret
(bad)
jmp
out
fdivp
mov
daa
into
repnz
or
and
leave
xchg
dec
inc
push
sbb
mov
retf
sbb
push
fidiv
or
sbb
xchg
(bad)
cmc
sbb
(bad)
retf
mov
mov
outs
daa
adc
inc
out
jne
pop
mov
jge
xor
and
ins
jl
inc
mov
dec
lods
xor
pop
xor
lods
mov
out
and
and
imul
mov
mov
jg
cld
push
into
mov
les
bound
popa
in
xlat
rcr
aad
add
jb
mov
(bad)
jns
jg
outs
mov
sar
fs
out
jmp
mov
sbb
or
push
test
sar
or
in
cmps
cmp
imul
imul
cmp
sbb
sbb
jo
pushf
adc
pop
bts
push
jmp
dec
pusha
sbb
and
in
loope
push
sbb
pop
xchg
cmps
ins
xor
sub
fld
inc
fldenv
sahf
mov
jl
xor
sbb
jge
shl
add
imul
xlat
fadd
lds
jnp
or
sbb
pop
push
repnz
xor
imul
xchg
jno
out
cli
popf
or
test
out
sbb
mov
push
imul
lss
rol
inc
xchg
push
cmp
test
adc
adc
popa
mov
out
jge
inc
leave
sbb
jecxz
add
imul
repnz
dec
jne
push
push
pop
inc
ror
xor
xchg
pop
cdq
mul
and
pop
pop
loopne
jne
(bad)
int3
fcomip
sub
mov
xchg
pop
jecxz
and
mov
or
or
sbb
inc
in
mov
sahf
test
jle
add
sub
daa
scas
pop
adc
fsub
test
std
movs
in
cli
enter
xchg
ficomp
fisttp
shl
retf
inc
xor
out
inc
scas
mov
cmp
jnp
fisubr
and
inc
push
ins
fcom
lods
adc
xchg
ss
not
inc
pop
adc
movs
adc
stos
push
push
mov
stos
pop
pop
in
rcl
popa
jg
cmc
mov
sbb
rcl
mov
jbe
adc
fstp
hlt
cmp
cdq
call
out
dec
adc
sub
adc
fimul
pop
ins
das
mov
stos
sub
pop
xchg
cmp
mov
add
fisub
popa
pushf
push
cwde
mov
cmp
cmp
mov
or
loope
(bad)
fnstcw
pop
fcom
sbb
pop
adc
in
and
cmp
popf
add
adc
arpl
call
lods
pop
cmps
jle
ins
sbb
mov
arpl
and
nop
jmp
retf
push
bound
movs
pop
fisubr
mov
clc
je
adc
add
cmc
jns
cld
aam
shr
adc
loop
mov
fisttp
lock
lods
or
lods
jbe
jbe
in
jnp
xor
addr16
and
push
iret
mov
lahf
mov
out
outs
popf
stc
pop
pop
pusha
pop
push
(bad)
push
mov
mov
mov
ins
bound
pop
jmp
pop
sbb
retf
jmp
ins
scas
les
sbb
arpl
jne
pusha
push
xor
mov
bound
nop
out
pop
mov
jge
sub
pop
adc
adc
cs
inc
or
(bad)
inc
jbe
mov
xchg
lods
jne
jnp
rol
cmc
fwait
ins
push
int3
mov
add
xor
sub
ins
cmp
jecxz
inc
push
adc
scas
pusha
into
mov
or
(bad)
test
mov
add
xor
inc
add
call
je
stos
jnp
and
pushf
add
xor
push
into
dec
out
mov
or
clc
dec
add
mov
mov
pop
cs
adc
ja
nop
mov
test
rcl
dec
dec
and
enter
mov
es
fucomip
cld
dec
pop
dec
leave
push
ficomp
mov
pop
call
shl
pop
cld
xor
fldenv
mov
inc
add
in
mov
mov
sbb
ror
dec
int3
movzx
fdiv
cmp
dec
(bad)
(bad)
mov
es
shl
ins
hlt
(bad)
add
cmp
xacquire
shr
lea
push
xchg
std
and
mov
stos
mov
repnz
xchg
loope
mov
sub
lds
(bad)
inc
push
popf
inc
cmp
add
push
mov
and
xchg
fld
push
call
xor
sub
and
inc
in
cld
pusha
dec
sub
jmp
shl
pop
inc
cmps
xor
or
adc
mov
fs
ret
jbe
push
inc
pop
retf
jp
mov
stos
shl
jns
pop
sbb
test
shr
jnp
pop
addr16
inc
cs
in
dec
adc
popf
sub
adc
dec
push
popa
mov
mov
leave
bound
iret
int3
outs
and
inc
test
inc
stc
pop
cli
sbb
sbb
nop
jmp
sbb
push
fsubr
push
dec
xchg
clc
xchg
cmp
mov
xchg
nop
fdiv
std
sar
jl
retf
(bad)
mov
(bad)
and
xor
and
out
retf
xor
mov
mov
push
ficomp
repz
or
stc
pop
jg
inc
jno
sbb
imul
jbe
fsubp
cld
xor
cld
imul
sbb
inc
jne
jb
dec
push
jnp
jbe
jno
pop
mov
mov
pop
add
(bad)
into
cmp
jne
loop
pop
jl
lea
mov
jl
adc
(bad)
test
outs
daa
inc
fwait
add
jbe
int
cmps
push
sub
mov
cdq
jns
jg
scas
mov
mov
pusha
lahf
imul
sbb
inc
push
popf
aas
dec
test
(bad)
dec
outs
pushf
cmp
into
xchg
adc
inc
push
cwde
sbb
pop
mov
outs
sbb
xchg
mov
test
cmp
call
stos
mov
jo
fcomp
sub
es
or
mov
ins
push
hlt
pop
xchg
mov
imul
inc
or
mov
pop
inc
mov
icebp
jmp
jp
push
jne
jns
and
mov
or
and
fs
jp
cwde
mul
cwde
fist
pop
push
jg
pusha
shl
mov
and
cmp
dec
push
xchg
sub
arpl
xchg
jns
cdq
or
je
fld
lahf
pop
(bad)
jle
cmp
xlat
add
cmp
cmp
fbld
jp
add
inc
fisubr
dec
lods
ins
les
cmp
test
mov
pop
test
stos
push
dec
aam
cli
and
shl
pop
mov
mov
je
jo
or
(bad)
and
es
retf
movs
mov
cmps
add
pop
ds
fwait
add
sti
call
stc
repz
sub
sbb
jbe
mov
push
push
mov
lods
test
fisubr
fisttp
mov
ss
cli
imul
jle
xor
std
push
xchg
push
add
daa
retf
or
sti
loope
push
test
test
mov
gs
add
mov
push
inc
lods
call
jns
push
(bad)
jns
sub
fadd
add
ins
arpl
xor
xor
je
lea
mov
fidiv
mov
sbb
jo
add
cmps
sub
sbb
iret
jg
xor
cli
sbb
mov
pop
jno
das
jle
in
add
or
push
adc
cmp
push
mov
gs
mov
xchg
jnp
fsubr
xchg
mov
cli
add
dec
int
pop
stos
(bad)
std
jl
call
test
shl
dec
lock
test
dec
sub
ins
js
push
add
jno
popf
pushf
test
jge
out
mov
mov
sbb
or
loopne
and
daa
cdq
aaa
push
inc
in
dec
ret
cdq
loop
mov
inc
cmp
int
stos
shl
inc
dec
mov
movs
fiadd
and
rcl
leave
dec
mov
pop
sub
inc
sbb
nop
jmp
ror
mov
mov
(bad)
sub
aam
aaa
and
mov
fcom
mov
xor
(bad)
xlat
push
mov
imul
or
retf
mov
add
(bad)
mov
mov
cmp
pop
aas
pop
test
mov
test
mov
out
(bad)
and
sbb
or
pop
shl
stc
aas
or
mov
cli
js
retf
jne
into
lods
mov
add
retf
xchg
add
sub
pop
adc
rcl
and
ja
fdivr
or
call
call
push
scas
or
xchg
sbb
ficom
jb
pop
loopne
dec
ss
leave
inc
(bad)
pop
fisttp
in
cmp
hlt
or
and
sbb
(bad)
push
dec
inc
jp
stos
cld
jg
mov
ss
push
jo
inc
push
in
jno
adc
add
and
sub
and
jmp
shl
aas
hlt
sub
aas
mov
sub
add
aad
mov
sbb
sub
js
dec
dec
xchg
xchg
mov
ja
dec
or
leave
aad
lds
jg
(bad)
cli
or
pusha
popf
fstp
adc
sub
pop
mov
or
jl
into
dec
fs
jno
nop
push
mov
fimul
mov
popa
aam
std
mov
xor
loop
pop
add
(bad)
fnstenv
ret
push
rcr
inc
stc
movs
out
movs
push
(bad)
(bad)
xor
mov
ds
and
pop
push
dec
jmp
bnd
xlat
push
add
cmp
nop
adc
inc
inc
fnstsw
popf
jg
or
cmc
inc
jg
adc
fisubr
in
or
cmp
pop
out
xchg
lahf
(bad)
cld
mov
or
sub
pop
(bad)
pop
dec
xor
bnd
test
or
outs
inc
dec
or
sar
xchg
pop
add
(bad)
dec
push
enter
ins
mov
fcmovnu
or
push
bound
stos
icebp
fwait
xor
push
shr
test
retf
movs
enter
cwde
(bad)
and
test
pusha
cli
push
into
xchg
aas
jp
mov
ret
pop
xor
lahf
stos
dec
dec
sar
into
outs
(bad)
fld
in
lock
ret
and
push
add
pop
pop
push
mov
into
sti
pop
(bad)
dec
and
xchg
add
cmps
jp
jbe
shr
lods
scas
int
dec
je
mov
nop
xchg
(bad)
call
fiadd
aad
push
test
hlt
cmp
push
sub
adc
cmps
popa
add
jo
mov
and
sbb
and
pop
test
test
xlat
test
retf
mov
sbb
lea
dec
push
adc
(bad)
adc
jbe
mov
jl
xchg
push
cdq
and
lea
div
jbe
sub
enter
loope
ficomp
jae
fisubr
fninit
push
add
sbb
lods
jne
push
test
mov
inc
xchg
inc
pop
je
mov
ins
jnp
adc
jb
shl
mov
call
in
fdivr
mov
in
adc
jge
mov
add
ja
sbb
mov
ss
push
add
(bad)
ret
dec
pop
sbb
stos
pusha
sub
mov
inc
push
mov
adc
(bad)
xchg
xchg
aad
cmp
retf
lds
repz
jo
mov
in
mov
cld
aaa
jb
dec
lea
cwde
cmp
bound
test
add
stos
and
leave
fwait
and
enter
push
rcr
mov
ins
and
test
xor
jp
sar
fs
mov
lods
adc
shr
rol
aad
xor
int
nop
xor
imul
mov
jp
in
dec
cmp
mov
adc
adc
cs
xchg
push
sahf
and
push
cwde
stos
bound
pop
xchg
repnz
in
mov
push
pop
cmp
and
adc
scas
mov
cmps
aas
lods
cmp
cmp
sub
ds
popa
aam
fisttp
call
outs
add
xchg
sbb
mov
dec
mov
sub
scas
aam
sub
cmp
mov
int3
sti
cmp
and
in
mov
jb
das
aaa
or
out
jno
or
mov
scas
and
or
push
dec
cmp
int
pop
popa
aaa
dec
clc
(bad)
mov
jle
bound
mov
sti
xchg
cmp
jp
push
mov
sbb
outs
mov
cmp
jle
mov
and
outs
push
cmc
daa
es
add
pop
popa
dec
xchg
and
mov
push
shl
sub
push
movntq
pop
mov
inc
pop
(bad)
sub
inc
cmp
jne
sbb
xor
xor
ficom
imul
ret
aaa
jbe
jno
mov
imul
mov
shl
lock
pop
pop
ins
adc
call
ds
(bad)
out
sub
in
mov
lahf
into
jb
pop
into
sahf
imul
pop
ret
jmp
ins
mov
xor
or
out
fsub
int3
pop
jbe
movs
jge
fs
mov
add
gs
cli
gs
nop
mov
(bad)
mov
cmc
xchg
int
dec
pop
fld
shr
pop
mov
cli
sbb
arpl
jmp
jb
add
movs
(bad)
xlat
mov
add
adc
shr
hlt
bnd
sbb
dec
rcl
(bad)
jmp
inc
adc
jae
adc
cli
hlt
xchg
inc
in
cmp
std
loopne
ja
inc
jmp
test
rcr
je
in
jg
sub
push
cwde
sar
xchg
daa
stc
jb
sbb
repnz
xor
xor
(bad)
dec
dec
std
push
(bad)
cmps
mov
imul
jecxz
push
sbb
popf
into
std
adc
or
pop
mov
rep
fwait
dec
xor
and
inc
sbb
jmp
and
cmp
in
cwde
jb
mov
idiv
adc
or
jge
xchg
retf
popa
retf
mov
push
inc
mov
test
push
or
dec
and
xchg
test
cmp
xlat
and
jecxz
fisubr
les
pusha
jae
cmp
lds
aad
ss
ins
int3
dec
fiadd
psubsw
adc
test
retf
dec
fs
push
and
xor
sub
mov
pop
mov
in
fmul
ins
pop
dec
dec
jle
jbe
mov
sub
std
scas
clc
cmps
sbb
and
hlt
inc
aam
fnstcw
pop
shl
xlat
xchg
in
push
jg
shr
cmp
jae
push
add
fidiv
ja
dec
sub
iret
(bad)
xor
mov
jle
ins
mov
je
and
xlat
xchg
pop
imul
mov
add
fsubp
xchg
dec
mov
jmp
jno
jbe
sbb
cmp
cdq
fs
sbb
mov
push
mov
xor
loop
cmp
xchg
fbstp
sub
nop
mov
out
pusha
imul
and
dec
pop
cmp
xchg
jae
pop
cmp
push
cmps
mov
lods
sub
popa
pop
lods
inc
arpl
sub
aad
xchg
push
inc
sub
jns
outs
mov
data16
lock
in
xchg
mov
xor
ins
mov
ror
dec
and
jnp
and
or
repnz
fndisi(8087
dec
dec
mov
ss
jo
lods
and
sbb
sub
jecxz
push
loopne
daa
or
pop
and
loop
sub
test
cld
addr16
and
mov
int3
cmps
mov
pop
test
add
adc
mov
sbb
scas
and
jno
call
push
ins
push
ret
sbb
int
or
movs
stos
jno
push
stc
idiv
fidiv
sar
mov
add
pop
xor
xor
inc
inc
mov
sbb
push
pop
out
cmp
dec
in
test
and
not
xor
mov
adc
cli
retf
sbb
pop
rol
pop
ins
fstp
hlt
hlt
adc
sub
mov
ss
(bad)
into
or
jge
rcl
jg
das
push
xor
sahf
popf
xor
fild
dec
je
rcr
dec
and
out
xor
cmp
shr
mov
inc
movs
sbb
(bad)
out
xchg
cmc
xor
mov
xor
cmp
fldcw
fsub
sub
arpl
int
rol
xor
mov
inc
hlt
ja
dec
fstp
mov
jbe
movs
retf
mov
push
push
(bad)
aam
sub
and
mov
add
and
cmp
add
push
in
daa
xor
mov
push
movs
adc
inc
addr16
sub
or
aam
pop
nop
xchg
mov
fcmovbe
ds
xchg
mov
and
imul
retf
mul
sub
or
or
mov
jmp
shl
ins
mov
inc
movs
and
popa
movs
mov
add
jno
loope
xlat
loop
cmp
mov
je
cmp
popa
sbb
fcom
pop
fnstcw
icebp
lods
mov
xchg
pop
aas
fidivr
xchg
add
fsub
fist
cmp
imul
rcr
and
xchg
cmps
jnp
sub
sub
les
outs
add
mov
and
cmp
push
jmp
mov
xchg
imul
stos
ret
xchg
js
movs
mov
rcr
pop
jmp
sub
push
iret
add
loop
push
cmp
add
lods
adc
mov
xchg
jecxz
icebp
test
mov
sahf
pushf
dec
sbb
adc
cmp
mov
repnz
pop
ret
ror
push
std
data16
inc
xor
ds
mov
and
mov
pop
out
call
imul
dec
and
repnz
or
into
dec
(bad)
dec
cld
fld
stc
outs
fild
or
sahf
stc
(bad)
cmp
mov
clc
fnsave
pop
xlat
push
ror
cmps
sub
xor
mov
inc
mul
inc
sub
adc
aam
ret
mov
jl
mov
hlt
imul
stos
out
in
pop
push
push
sub
mov
test
js
sub
cdq
jecxz
leave
push
mov
mov
in
sub
sub
loope
inc
mov
int
pop
aad
or
iret
push
jecxz
(bad)
mov
xchg
xor
cmp
out
jnp
adc
sbb
sub
fild
add
mov
adc
pop
lea
mov
mov
mov
jge
lahf
out
aaa
mov
je
int3
ins
and
retf
dec
lods
xor
in
das
outs
bound
sub
jmp
test
js
cdq
test
jle
push
das
mov
or
sub
(bad)
push
hlt
rol
aaa
xchg
stos
dec
iret
stos
adc
(bad)
repnz
sahf
and
push
mov
jbe
and
mov
add
jmp
mov
fcom
inc
test
xchg
mov
cmp
mov
or
adc
out
lock
push
push
push
das
mov
sbb
jge
call
and
pop
test
adc
sar
cwde
jo
(bad)
cld
data16
xlat
leave
adc
and
imul
dec
fidiv
xchg
aaa
xchg
and
cmp
mov
in
loopne
rcl
or
js
sbb
pop
xchg
jae
js
sub
jo
repz
mov
out
lods
jbe
xchg
sub
mov
dec
xchg
sbb
lock
pop
sbb
mov
pushf
lahf
movs
mov
loope
std
add
not
sub
add
cs
mov
mov
jae
out
addr16
adc
lock
movs
call
pop
test
sbb
std
sbb
pop
call
jns
add
xor
nop
add
and
mov
int3
aad
cli
not
jp
mov
mov
mov
stos
mov
dec
shl
(bad)
data16
push
sbb
in
sub
cmps
sub
mov
push
mov
and
repz
jge
in
into
or
inc
out
xor
mov
in
xor
inc
push
out
sahf
push
das
mov
add
movs
push
(bad)
dec
in
push
(bad)
adc
lods
xor
(bad)
je
das
push
sub
ret
aas
bound
in
push
mov
mov
ss
or
out
push
or
dec
dec
cli
mov
test
out
xchg
cmp
jnp
das
scas
and
outs
js
pop
cdq
div
mov
ins
addr16
push
fmul
dec
and
cmp
sub
fimul
push
ret
mov
dec
add
add
test
sbb
cld
inc
inc
inc
aam
aam
not
xchg
push
xchg
fistp
dec
std
retf
test
push
push
xor
std
test
push
sub
adc
cmps
addr16
imul
push
lds
fldcw
fsub
pop
sahf
cmp
xor
adc
add
pop
xor
fs
pop
jbe
call
(bad)
and
in
call
push
inc
cmps
cmp
stos
push
aam
add
call
mov
outs
xor
retf
and
in
sti
inc
inc
push
std
pop
div
inc
out
cmc
scas
inc
mov
stos
ss
popf
test
stos
mov
mov
(bad)
dec
sbb
dec
shl
mov
int3
bound
xor
jg
in
mov
pop
in
jae
sar
popf
push
push
dec
gs
pop
inc
and
cmp
call
or
push
xchg
or
fcomi
in
xchg
fst
mov
mov
jmp
mov
call
ds
hlt
push
outs
cwde
xchg
inc
jne
xchg
lock
sub
dec
test
push
or
int
mov
sub
xchg
in
inc
mov
jp
cwde
mov
(bad)
int
jae
lds
dec
out
cmp
push
mov
arpl
dec
out
mov
cli
and
push
stos
xor
imul
out
fadd
loopne
mov
jne
(bad)
lods
mov
test
fld
jge
dec
inc
inc
xor
mov
mov
addr16
xchg
dec
jp
test
or
fidivr
lock
leave
dec
outs
fadd
outs
push
test
rol
pop
inc
lods
test
loopne
xchg
mov
cdq
jg
dec
jp
rcr
or
and
stos
sti
clc
adc
ja
popa
in
or
test
addr16
fsub
dec
jae
loope
mov
mov
mov
mov
sbb
loop
fst
out
xchg
icebp
cmp
rcr
je
(bad)
jne
dec
mov
cmp
cdq
dec
clc
sbb
pop
aaa
jl
mov
fdiv
mov
sub
mov
mov
sbb
fnstcw
pop
into
cld
shl
xor
(bad)
hlt
push
xchg
mov
arpl
in
inc
dec
lea
rcr
xor
scas
add
add
call
sbb
adc
pop
add
movs
cmp
sub
xchg
xor
inc
int
xor
jnp
movs
cmp
jecxz
mov
or
sbb
nop
sub
or
jb
xor
jp
repz
addr16
adc
sbb
push
mov
mov
mov
out
in
adc
movs
aad
or
fdivr
or
loop
pop
add
pushf
xor
dec
xchg
and
pop
inc
test
test
sbb
jl
loopne
sbb
jg
inc
or
inc
sbb
xchg
jns
sahf
lods
dec
imul
test
pop
test
shr
mov
movs
dec
push
cmp
inc
cmp
(bad)
fnstsw
inc
addr16
iret
loop
lods
mov
xchg
adc
movs
test
inc
adc
ret
loop
jae
cmp
cdq
jge
sbb
cs
test
scas
or
int
add
sbb
iret
test
unpckhps
daa
and
mov
mov
imul
jnp
ret
add
jle
test
mov
imul
fwait
and
xor
xlat
add
and
adc
or
adc
(bad)
add
adc
(bad)
mov
and
or
call
arpl
add
jg
gs
mov
sub
popf
mov
or
(bad)
jns
and
and
ror
pop
bound
xor
fwait
bound
or
fsubr
stos
es
stc
sub
adc
out
arpl
clc
and
add
pushf
xchg
xor
hlt
ret
call
aad
add
nop
mov
imul
call
push
mov
(bad)
push
inc
imul
gs
call
adc
jle
xchg
sub
mov
cwde
cdq
sub
aas
mov
fwait
jg
cmps
ds
fdiv
inc
jl
jno
mov
push
jae
push
dec
loope
shl
retf
dec
mov
cmps
test
in
jns
loopne
cld
in
fcom
out
stos
push
xor
jb
outs
fsubr
pop
js
push
(bad)
leave
lods
mov
out
std
movs
xchg
jbe
ins
jnp
mov
push
ss
loope
xchg
in
push
push
es
dec
ins
loop
cmp
in
sub
add
rcr
inc
retf
hlt
push
popf
mov
inc
inc
jp
jne
dec
sahf
or
cmps
and
inc
cwde
movs
faddp
pop
add
jle
inc
xor
and
lods
adc
cmp
lods
adc
adc
add
stos
jecxz
jl
test
or
mov
xchg
and
adc
inc
ss
xor
movs
loope
sub
imul
nop
fnstsw
push
add
loop
es
jge
jp
retf
js
daa
mov
adc
jmp
hlt
aad
mov
clc
addr16
cmp
push
xchg
adc
rcl
xchg
mov
jmp
mov
adc
or
(bad)
mov
xchg
std
lahf
shr
fst
mov
xor
repnz
sar
dec
adc
xchg
sbb
call
sub
jne
adc
stos
inc
mov
iret
out
mov
sbb
mov
je
mov
daa
xor
jp
cld
sbb
xchg
cmp
ds
nop
dec
lahf
adc
pop
inc
sar
ins
pop
adc
xor
out
sub
in
mov
mov
and
stos
mov
stos
mov
pop
xchg
imul
xchg
scas
mov
xor
retf
fadd
ret
jo
aad
inc
das
sbb
sub
ds
dec
adc
push
out
inc
mov
fld
int
mov
sti
cmps
or
cdq
fcom
arpl
push
dec
int3
cs
or
cld
pop
out
mov
and
test
sbb
sar
xchg
fisttp
and
popf
stc
adc
gs
or
jmp
loope
jl
les
pop
xor
jecxz
test
jg
scas
cmps
xchg
mov
adc
or
inc
out
jle
scas
xor
movs
fiadd
push
bound
cli
xchg
adc
mov
push
add
jle
outs
add
or
inc
xchg
push
push
mov
in
fsub
pop
jg
xchg
mov
sbb
dec
dec
or
pushf
pop
mov
aas
leave
aad
lea
ins
std
out
mov
xchg
repz
test
push
sub
mov
xor
pop
outs
mov
movs
inc
or
jo
lods
jle
xchg
mov
inc
push
test
test
stos
into
ss
dec
cmp
gs
aad
arpl
mov
stos
push
push
xchg
push
cmp
dec
cli
jns
jae
ja
cmp
jo
bnd
jecxz
mov
adc
cmps
test
imul
hlt
jb
mov
pop
lea
or
loope
sti
adc
mov
mov
pop
dec
fmul
dec
mov
jmp
das
sahf
mov
add
adc
(bad)
daa
push
fcom
mov
cmps
popa
bound
arpl
(bad)
enter
data16
xor
inc
retf
xchg
jae
(bad)
sub
mov
mov
inc
xor
sub
adc
sub
inc
(bad)
adc
cli
jo
cmps
repnz
not
test
push
in
or
test
pop
stos
sub
pop
cli
(bad)
sub
leave
push
push
xchg
mov
inc
fdivr
lahf
lods
clc
(bad)
dec
lea
push
test
mov
cmp
fnstenv
and
jb
mov
pop
push
cli
scas
push
out
jmp
lahf
scas
jecxz
aad
out
mov
mov
xor
adc
mov
cmp
loop
mov
add
mov
jecxz
mov
les
pop
xchg
or
out
dec
cmp
jnp
mov
mov
fcom
jmp
retf
jbe
mov
add
or
push
jae
pop
adc
and
add
retf
loop
call
aas
cmp
pop
mov
rcl
outs
jo
jge
dec
xor
les
or
inc
mov
retf
pop
mov
shr
and
mov
cmp
push
idiv
daa
fnstcw
fmulp
or
pop
fdivp
mov
test
hlt
xlat
pop
mov
jl
dec
mov
mov
jnp
xchg
cmp
aas
fcmovb
dec
sub
sub
sub
jae
xchg
imul
loope
(bad)
mov
cdq
mov
mov
ins
mov
pushf
sub
iret
jle
cmp
jge
rcr
iret
or
mov
das
lods
lods
mov
nop
mov
sahf
pop
dec
loope
in
jns
repnz
jnp
jo
out
retf
rol
cmp
shl
fimul
mov
push
clc
xchg
scas
frstor
add
movs
das
stc
cdq
xchg
fldenv
push
sub
cmc
cmps
std
mov
pop
or
jmp
aam
push
into
and
xlat
div
mov
add
xor
jecxz
icebp
dec
add
fdivr
mov
fnstsw
call
jo
sub
xchg
xchg
jo
daa
cmp
push
jg
test
push
in
or
movs
jns
es
mov
leave
xor
or
and
fcom
jns
mov
dec
call
mov
mov
lea
in
icebp
pop
arpl
popa
repnz
es
xor
and
cmp
clc
ret
dec
push
into
popa
mov
cmp
adc
aaa
test
mov
push
mov
in
(bad)
jb
jmp
and
stos
in
stc
call
mov
lods
jle
mov
ficom
(bad)
sar
or
pop
stc
repnz
pop
add
xor
int3
mov
mov
xchg
push
imul
es
scas
mov
je
bound
out
test
sbb
je
cdq
push
pop
sbb
jb
jns
addr16
inc
mov
mov
ja
movs
jle
pop
call
cs
dec
pop
pop
enter
xor
aad
dec
adc
adc
push
retf
and
mov
dec
repz
lods
push
adc
dec
inc
pop
adc
xchg
nop
lds
pop
cdq
fsubr
mov
enter
sahf
test
jmp
aad
rol
stos
(bad)
push
or
cmp
iret
mov
rcl
inc
ds
push
add
repnz
or
cmp
add
sti
iret
repnz
(bad)
dec
cmps
pop
fistp
test
add
and
daa
(bad)
(bad)
outs
dec
loop
int
in
mov
inc
call
xchg
xor
dec
idiv
push
dec
std
or
xor
shr
lea
inc
pop
push
js
push
or
inc
adc
jmp
inc
in
xchg
(bad)
not
jnp
sbb
(bad)
arpl
push
or
shl
jmp
mov
add
fistp
xlat
aas
mov
or
movs
cmp
(bad)
jg
cmp
ss
ret
lods
push
fist
cmp
lods
shr
adc
rcr
sub
pop
inc
or
ret
sbb
(bad)
mov
hlt
add
xchg
xchg
sbb
js
add
sub
jp
shr
scas
in
js
push
rcr
mov
xor
sbb
dec
lea
xchg
js
test
mov
xor
dec
into
xchg
jg
pop
mov
pusha
(bad)
cmps
ins
aas
inc
mov
ins
ja
loop
mov
push
inc
ret
(bad)
sar
movs
sbb
shl
cmc
(bad)
rcr
loopne
(bad)
jmp
aas
lahf
outs
ds
push
xor
xor
shr
mov
xlat
cwde
aam
mov
xchg
int
imul
and
aad
push
push
and
lds
and
pop
mov
enter
mov
jmp
jp
adc
cs
or
fsubr
mul
mov
les
mov
iret
jae
or
out
aad
outs
bound
push
stos
call
jmp
retf
ret
(bad)
gs
cli
jno
imul
or
(bad)
lock
sub
add
in
add
lea
out
sub
popf
or
push
mov
push
pop
pop
mov
ja
mov
and
test
sar
nop
jb
mov
dec
and
pop
cld
js
xor
out
(bad)
inc
xchg
loope
or
cmp
clc
or
fisttp
push
cmp
xlat
dec
jmp
and
sbb
xor
mov
or
cmps
nop
arpl
fstp
xlat
jle
jmp
pop
sbb
js
and
movs
pop
repz
sti
stos
inc
mov
sub
imul
cld
sub
cmc
or
cmp
pop
push
cs
add
cmp
aas
sub
daa
xor
xchg
and
cmp
and
sub
test
cmps
out
addr16
pushf
pop
push
cdq
cmp
out
jae
pop
mov
mov
xor
or
jns
in
jb
xchg
lea
and
pusha
sar
fstp
test
xchg
retf
lods
addr16
xor
in
out
mov
dec
jb
inc
cmp
cdq
fdivr
(bad)
imul
inc
jp
jmp
rcr
sbb
adc
cmp
imul
test
out
dec
gs
or
dec
pop
stos
sbb
dec
cmps
stos
addr16
pop
push
inc
cmp
sbb
ins
and
mov
fs
out
cld
and
dec
mov
cmc
inc
pushw
int3
into
inc
outs
pop
xchg
cmps
mov
ja
or
mov
add
pop
xor
push
sbb
outs
retf
loop
popa
dec
push
jmp
push
or
mov
pushf
nop
mov
adc
mov
jg
jb
sub
idiv
rol
mov
xchg
pop
inc
or
adc
jo
cwde
(bad)
sub
xchg
xor
sub
cmp
mov
mov
je
fsubr
dec
xchg
adc
mov
pusha
inc
inc
sub
in
xor
mov
das
test
mov
mov
dec
fdiv
xchg
sbb
pop
aaa
lods
sbb
add
dec
sahf
mov
or
das
xchg
ror
in
sbb
je
lea
adc
hlt
loopne
lea
adc
lock
mov
push
dec
daa
shr
fsubr
jmp
es
stos
xor
(bad)
in
popf
hlt
cmc
repz
das
jb
adc
inc
outs
push
loope
mov
jb
add
push
stos
lods
xor
xchg
mov
sub
push
push
ror
add
add
sub
or
mov
add
outs
(bad)
or
jne
adc
mov
fwait
jmp
push
enter
hlt
clc
and
inc
dec
adc
lods
xor
mov
aaa
fistp
fisub
and
out
dec
fs
outs
and
outs
pop
hlt
nop
movs
je
mov
das
idiv
fs
cmps
push
lds
cmp
fcmovnu
sub
jmp
ins
jmp
leave
lods
bound
cld
mov
push
je
add
mov
lock
movs
sbb
rcl
mov
mov
fwait
xchg
mov
fcom
mov
add
jle
push
fisub
or
pop
push
push
arpl
pushf
sbb
dec
cwde
not
fnstsw
xor
mov
push
xchg
ror
rcr
cmc
leave
push
cmp
ror
les
push
retf
jnp
inc
mov
dec
dec
dec
test
setae
jmp
cmc
xor
mov
jo
push
mov
jne
clc
dec
xor
and
les
scas
cmps
aam
out
sbb
jle
lock
rol
mov
iret
inc
xchg
into
xchg
xchg
cmp
cdq
scas
aaa
jge
sbb
jne
mov
jecxz
nop
icebp
sbb
mov
bound
xchg
clc
push
or
std
push
je
repz
pop
pop
adc
mov
(bad)
cmp
lods
mov
jae
in
outs
sbb
pop
(bad)
enter
mov
mov
xor
mov
in
inc
push
inc
pop
sahf
cmp
xor
fld
adc
ins
std
jne
cmps
or
sub
jp
pop
push
in
pusha
es
iret
add
mov
test
cmp
jb
xchg
push
ds
rol
ins
cwde
int
mov
mov
mov
push
cmc
(bad)
cld
inc
nop
xchg
shr
cli
mov
mov
xor
cmp
fstp
mov
cli
aad
in
xchg
fisttp
cdq
push
ret
fs
pop
lods
into
inc
dec
inc
pop
mov
imul
mov
add
ror
(bad)
lahf
dec
je
sbb
jb
lock
push
dec
(bad)
add
jle
mov
push
arpl
adc
jno
(bad)
sbb
mov
rcr
test
ja
mov
out
xor
add
loopne
cs
std
cmp
adc
lods
(bad)
adc
xor
ins
and
pop
rcl
scas
mov
btc
adc
jmp
mov
movs
cmp
pop
pop
xor
jmp
jns
outs
xor
retf
jmp
std
dec
mov
clc
repz
and
movs
sbb
ds
jne
push
cmp
ror
jmp
(bad)
jmp
ficom
es
clc
scas
xchg
bound
je
mov
mov
inc
jno
gs
adc
sahf
xchg
cmps
push
and
or
bound
loopne
mov
dec
mov
cli
movs
adc
scas
inc
cmps
loopne
aad
out
inc
popf
mov
cli
test
inc
jmp
sub
mov
in
sbb
mov
dec
out
inc
push
ss
add
ds
imul
out
clc
sub
push
(bad)
xchg
sub
jg
pop
cmp
xchg
cmp
icebp
sbb
pop
lods
push
dec
add
shl
xchg
inc
sahf
jae
cs
fbld
clc
mov
ins
sbb
adc
cmp
in
xor
add
sar
outs
repz
(bad)
pop
xchg
dec
or
mov
or
adc
cmp
lods
push
cmp
inc
cld
fidiv
mul
xchg
push
pop
sub
xor
enter
cli
sbb
xor
sar
aas
pusha
cmp
push
je
adc
test
lods
pushf
add
mov
cli
dec
fistp
imul
das
outs
pop
fdiv
mov
mov
sbb
mov
mov
lock
mov
cwde
xchg
arpl
mov
cmps
inc
adc
dec
dec
out
stos
out
add
mov
lea
dec
ds
out
adc
fst
jo
jle
aaa
sbb
call
xor
fsubrp
test
push
cmps
stos
sub
jg
clc
xor
cdq
sahf
mov
(bad)
add
nop
mov
std
pop
dec
mov
nop
cmp
outs
mov
ins
fwait
jmp
lock
xchg
in
movntps
or
push
push
pop
mov
je
call
into
retf
add
mov
mov
std
cmp
repnz
mov
das
mov
js
push
fidivr
into
xchg
pop
mov
test
ins
leave
add
cwde
dec
test
lods
inc
aam
mov
jo
sbb
leave
outs
rcl
mov
ss
fxam
mov
or
pop
ret
ins
ror
js
outs
adc
adc
adc
movs
bound
jo
jnp
sbb
add
mov
push
xchg
xchg
or
mov
jg
mov
inc
test
push
fadd
test
and
into
add
cmps
mov
les
dec
stc
aas
aad
das
das
sbb
pop
xor
cmp
lock
mov
ds
pop
movs
test
jle
aas
pop
pop
xor
mov
loope
fisubr
push
jp
sbb
cld
pop
add
add
data16
shl
rcl
jle
or
add
pop
mov
jle
jb
jge
pusha
add
js
push
imul
neg
test
ins
mov
cli
adc
xchg
rcr
lods
hlt
shr
call
xchg
nop
test
fyl2x
or
jmp
pop
fdiv
jg
loopne
dec
(bad)
out
cli
dec
movs
mov
(bad)
imul
inc
pop
mov
retf
xchg
push
retf
ins
jbe
jecxz
and
cmp
sbb
add
ja
into
arpl
mov
(bad)
aam
push
adc
add
pop
pop
retf
js
mov
push
cmps
inc
(bad)
mov
or
pop
jp
mov
in
adc
retf
mov
retf
or
cmp
add
cs
add
in
stos
cmp
inc
cmp
jge
fs
push
push
sub
mov
inc
jp
in
mov
mov
iret
cs
lock
ja
inc
(bad)
call
int
sbb
fdivr
fwait
or
in
or
scas
adc
mov
inc
ret
sbb
in
fist
fld
jo
xor
mov
push
sbb
push
pushf
outs
imul
arpl
mov
ja
cmp
inc
rol
sub
and
movs
adc
cmp
cld
shl
xchg
jg
push
repz
mov
adc
fistp
mov
jmp
and
and
adc
call
loop
das
nop
std
cld
add
enter
jmp
xchg
scas
fst
mov
ins
jg
(bad)
pushf
xor
xor
test
cdq
(bad)
repnz
add
adc
xchg
sti
not
mov
mov
push
popf
daa
mov
(bad)
ins
es
mov
dec
int
cmps
or
clc
and
mov
xchg
data16
daa
call
sbb
pop
popf
jns
(bad)
xchg
xchg
inc
jmp
cmp
ins
xchg
jmp
lea
out
inc
xor
jmp
call
movs
js
scas
jge
jbe
stos
xchg
aam
mov
mov
scas
aaa
jmp
dec
or
xor
xor
mov
pusha
lods
push
pop
fmul
adc
ret
fnstcw
js
(bad)
cmp
mov
sbb
and
lds
ins
test
and
lea
jl
push
mov
mov
and
ja
jb
in
jp
inc
ret
cdq
cmp
pushf
cmp
xchg
mov
push
inc
or
jp
test
xor
and
out
pop
inc
jbe
inc
mov
out
es
jge
fxch
mov
jnp
cs
add
fcom
xchg
sub
xor
xchg
scas
xor
dec
cli
(bad)
cwde
cmc
jbe
mov
cmp
cli
cmp
in
(bad)
rol
icebp
xor
jmp
push
mov
push
adc
fistp
sub
std
dec
(bad)
loope
mov
push
jmp
jmp
aad
adc
shr
xchg
out
jbe
push
fild
test
mov
call
mov
jg
pop
pop
fstp
fistp
cdq
lahf
jbe
mov
fcomi
(bad)
jp
adc
add
mov
sbb
daa
push
mov
jno
data16
cmps
imul
je
sbb
cdq
dec
mov
cmp
xor
or
mov
inc
mov
mov
pop
mov
xchg
cdq
jno
repnz
stos
test
xchg
add
add
cld
repz
scas
aam
mov
mov
les
int3
addr16
dec
les
pop
jecxz
xor
or
and
jmp
mov
cmp
call
mov
sbb
(bad)
bound
out
lea
es
clc
je
scas
mov
idiv
or
out
enter
data16
pushf
xchg
mov
mov
cmp
ins
pop
inc
and
xor
jno
outs
sub
cmp
ins
fnsave
daa
lds
mov
shl
add
jmp
cmp
stos
out
(bad)
and
mov
loope
mov
rcl
xchg
movs
(bad)
ins
icebp
inc
mov
mov
ins
push
and
or
dec
pop
push
or
jl
out
(bad)
mul
hlt
or
xor
sub
pushf
in
(bad)
mov
add
xchg
punpckhwd
add
push
lds
jns
aad
xor
stc
xor
rcr
push
bound
inc
cmp
loope
mov
dec
repnz
mov
add
retf
ins
dec
add
cmps
sahf
sbb
cdq
adc
xchg
jb
cmp
mov
adc
jne
mov
mov
pop
lea
sub
fdiv
cmp
pushf
sbb
scas
mov
dec
sub
sete
iret
js
pop
cmps
ds
pop
jge
push
push
jle
aaa
xchg
adc
mov
jmp
aam
mov
jns
ror
jo
ja
sub
sub
sbb
loopne
sar
and
xchg
stos
(bad)
and
jb
lds
cmps
je
sbb
ins
into
es
gs
mov
adc
mov
bound
mov
and
repz
push
jmp
ret
xchg
daa
sahf
rol
out
loopne
or
and
shl
and
shl
loope
inc
dec
add
adc
jns
in
push
xchg
jl
je
pop
dec
push
cmp
mov
cmps
fsubr
and
push
jb
mov
xor
xchg
jnp
mov
stc
test
int
inc
enter
(bad)
aaa
mov
pop
push
pop
scas
stc
or
add
sbb
in
push
jecxz
push
adc
push
jmp
(bad)
sub
sub
jmp
repz
cmp
repz
jmp
mov
psrld
daa
ins
ins
mov
ja
jp
mov
push
mov
jo
jl
iret
cmp
or
in
std
push
lods
imul
cwde
shr
das
add
push
mov
sub
in
mov
fcmovnbe
dec
jle
(bad)
in
outs
add
retf
icebp
fist
sub
push
or
(bad)
xlat
icebp
cmps
xlat
in
adc
dec
neg
enter
jb
push
jmp
clc
loop
xor
or
jle
mov
in
inc
(bad)
dec
mov
and
xor
mov
sbb
dec
pop
idiv
shl
cmc
dec
hlt
add
cmc
jecxz
mov
ret
test
xor
ins
adc
loopne
add
repz
adc
push
cmp
cli
cmp
repz
mov
and
ret
jnp
inc
or
lds
lock
adc
sbb
and
ficomp
adc
aad
jl
iret
(bad)
mov
in
mov
hlt
cmp
dec
jae
out
loope
dec
rol
xchg
xor
sub
push
sbb
cmp
jl
adc
jae
mov
sub
es
bound
pop
out
jecxz
addr16
mov
jl
das
adc
push
sub
sbb
xchg
loopne
fwait
push
loop
into
jmp
adc
jno
mov
pop
mov
sub
mov
ds
mov
xchg
sti
or
bnd
movs
sar
xchg
(bad)
jo
mov
cdq
dec
pop
mov
dec
add
clc
cmps
xor
nop
xor
bound
lock
aad
jo
dec
cmp
dec
in
push
ret
push
push
mov
leave
(bad)
jge
mov
sbb
mov
pop
jl
and
call
cmp
and
cli
je
loop
xchg
push
xor
cmps
mov
ror
mov
test
adc
pop
fdivr
(bad)
jne
outs
lds
addr16
push
int3
mov
jle
call
ins
inc
(bad)
or
mov
scas
arpl
inc
sar
fcos
out
sub
and
pop
dec
jns
jnp
xor
imul
and
mov
retf
jl
out
call
jl
cmps
stos
dec
and
mov
sar
push
sahf
shl
repz
xchg
xchg
push
pop
das
sti
add
(bad)
repnz
and
dec
mov
jg
shr
into
repnz
xchg
cmp
pop
dec
inc
(bad)
fsubr
fidivr
aad
cmp
push
mov
sti
jmp
sub
pop
nop
sbb
bound
repz
mov
push
shr
push
cdq
fnstenv
iret
hlt
inc
mov
push
sti
(bad)
movs
mov
enter
adc
dec
pop
rol
aas
les
add
push
or
inc
push
ret
push
or
cmp
aas
push
xchg
dec
ins
adc
sub
cmp
jae
add
into
ror
mov
sbb
jmp
or
bound
es
jg
pop
rcr
xchg
adc
dec
aaa
sbb
int
call
sbb
aaa
xor
dec
sub
ins
sbb
add
cmps
and
in
test
sbb
out
or
add
inc
push
out
scas
sub
dec
push
push
mov
ss
stc
int
dec
stc
dec
xchg
and
cli
or
retf
lock
bound
in
pop
in
inc
sahf
push
and
mov
sahf
jnp
pop
pushf
in
or
mov
fstp
pop
arpl
mov
cmp
mov
ds
xor
mov
mov
shl
mov
dec
cmp
mov
jno
jle
and
add
call
jo
dec
inc
sub
movs
rcl
xchg
xchg
lds
mov
sub
pop
mov
or
aas
xchg
pop
cmp
xchg
rcl
sub
mov
out
push
shl
push
(bad)
fcomp
jge
sbb
movs
inc
mov
not
xor
pop
mov
retf
test
add
dec
pop
leave
fbstp
les
xor
cmp
repnz
mov
cmp
daa
test
pop
(bad)
xchg
ds
mov
retf
xchg
adc
mov
cmps
scas
nop
or
retf
sar
std
jmp
loope
fwait
and
mov
(bad)
sbb
inc
ins
mov
call
jns
pusha
retf
enter
dec
inc
es
jae
aam
imul
push
loop
xchg
cmp
pop
(bad)
inc
cmp
fucom
inc
inc
add
sbb
stos
sahf
mov
inc
xchg
les
mov
mov
test
idiv
retf
mov
dec
mov
popf
mov
test
call
lea
dec
push
or
imul
xchg
mov
arpl
push
sub
or
aaa
test
imul
mov
imul
clc
enter
(bad)
adc
fild
sub
mov
pop
mov
mov
in
xor
outs
cmp
pop
xchg
fisttp
mov
xchg
std
jp
js
inc
pop
push
les
fwait
enter
clc
pop
icebp
gs
inc
mov
jmp
mov
mov
or
hlt
into
call
aad
add
mov
push
adc
xchg
out
pop
out
xor
xchg
ror
add
mov
int3
jbe
jne
or
sub
cmps
inc
repz
je
pop
leave
int3
jne
enter
mov
push
(bad)
jmp
loop
xchg
add
cdq
cwde
arpl
aaa
fwait
retf
mov
push
inc
and
icebp
idiv
fs
(bad)
pop
aam
mov
jmp
js
sahf
and
in
aas
das
jbe
lock
sahf
sbb
mov
sbb
sahf
outs
ins
inc
jns
mov
outs
retf
ins
out
mov
mov
cwde
mov
jmp
adc
(bad)
imul
out
dec
(bad)
jb
repz
lds
jp
mov
push
mov
mov
or
test
sub
movs
gs
out
inc
lahf
(bad)
dec
fs
stos
in
shl
sub
cwde
(bad)
pop
(bad)
jnp
test
push
mov
fs
lahf
les
xchg
popa
add
mov
dec
mov
xor
call
push
cmp
mov
adc
mov
pusha
(bad)
stc
xor
clc
in
jne
adc
push
mov
sub
dec
xlat
or
adc
add
outs
enter
adc
cli
scas
iret
retf
mov
jns
dec
jmp
imul
pop
call
push
push
sahf
in
inc
mov
push
sti
push
push
and
loopne
sbb
xchg
not
ret
lods
sahf
inc
inc
mov
adc
xor
push
dec
push
int
stos
add
dec
fwait
dec
mov
aaa
clc
or
hlt
aad
push
adc
ror
xchg
xor
(bad)
popa
or
add
int
das
loopne
adc
out
out
js
addr16
cmp
movs
jp
(bad)
mov
iret
cli
pop
xor
scas
mov
popa
int3
sbb
aam
dec
out
scas
and
fild
adc
pushf
jns
outs
leave
adc
test
loopne
fwait
sahf
cdq
jno
inc
lock
cld
inc
fist
sahf
push
ins
mov
mov
mov
mov
paddsb
push
dec
mov
cli
push
fwait
add
and
mov
xor
and
mov
les
pop
mov
jmp
retfw
ror
jnp
loopne
repz
cmp
mov
out
pop
push
mov
je
cwde
pusha
(bad)
lds
(bad)
jmp
mov
mov
add
repz
sub
lds
es
out
out
adc
add
add
int
js
dec
adc
xchg
mov
arpl
push
sbb
sub
cmp
iret
pop
sbb
lods
adc
dec
push
call
mov
out
mov
pop
(bad)
cmp
scas
sub
xchg
aam
mov
pop
cmp
add
fcomip
and
mov
push
(bad)
sahf
pushf
mov
inc
inc
imul
mov
aad
jne
inc
sub
sbb
xor
ins
lock
fsubr
and
inc
ret
ins
mov
jno
fcomp
pop
fstp
rcr
test
cmp
add
jno
jecxz
dec
add
fld
outs
out
xor
loopne
xchg
test
inc
bound
jmp
sbb
mov
jle
mov
adc
cmp
xor
mov
fst
and
test
sbb
je
call
repz
cli
or
jno
push
shl
ror
dec
fnstsw
sahf
mov
cli
lods
pop
jg
les
pop
ja
ins
xor
fsub
loop
imul
cli
pop
pop
std
mov
push
pop
add
pushf
jl
jge
jne
or
frstor
mov
and
imul
dec
loop
jbe
ficom
popf
pop
and
push
mov
mov
sar
int3
mov
push
fwait
fs
stos
add
sub
adc
ror
xor
xchg
out
sub
ins
in
mov
fs
daa
inc
sbb
xchg
popa
cli
inc
mov
movs
xor
dec
add
shr
repz
push
mov
cmovno
scas
sub
(bad)
jmp
outs
jmp
hlt
nop
inc
or
and
jnp
mov
sahf
lahf
or
aam
and
popf
mov
into
fidiv
xchg
out
out
fs
int
or
jae
imul
push
cdq
jp
rcr
pop
sbb
js
xor
retf
orps
and
inc
inc
(bad)
xchg
xchg
jnp
pop
sbb
ret
add
xor
adc
cmp
xchg
mov
nop
jp
gs
jmp
mov
movs
push
mov
popf
inc
pop
xor
push
xchg
sub
inc
cld
xchg
fisubr
sbb
xchg
adc
mov
in
loope
mov
sub
frstor
lock
push
push
xlat
mov
mov
and
sub
and
loop
pop
dec
cmps
lock
adc
mov
in
sub
call
sbb
mov
scas
mov
mov
sub
clc
(bad)
cdq
mov
in
jl
out
cs
inc
cdq
mov
lock
call
sbb
sbb
adc
jl
test
(bad)
mov
cdq
or
jecxz
scas
int
out
sub
inc
retf
add
add
xor
mov
retf
mov
adc
sahf
loopne
dec
movs
and
es
mov
mov
cmc
push
adc
push
lock
daa
cmps
mov
imul
adc
lods
scas
mov
cmp
dec
push
cmovg
in
jle
xor
mov
pushf
call
sub
test
pop
jnp
aam
arpl
dec
out
jmp
add
imul
scas
mov
lods
imul
sbb
xor
sub
and
inc
inc
add
push
retf
xor
jno
pop
mul
push
mov
frstor
cwde
jge
bound
loope
fucomip
jmp
pop
push
jb
mov
xor
ja
add
sbb
push
ss
aaa
fld
mov
pop
mov
dec
and
jmp
int
xchg
cs
stos
mov
stos
imul
push
retf
add
xchg
inc
retf
mov
or
fcomip
adc
sub
(bad)
rcr
xchg
lods
ss
dec
loopne
mov
cwde
jnp
sub
adc
stos
ins
lds
push
icebp
repz
xor
mov
inc
jo
mov
rcl
je
lock
mov
stos
push
xchg
cmp
sbb
cdq
mov
mov
mov
jno
xor
(bad)
fwait
leave
jae
inc
jo
xor
xchg
and
jp
aaa
fistp
dec
dec
xchg
jp
jmp
test
add
mov
mov
call
stc
cmovl
shl
fnsave
es
retf
inc
sbb
mov
cmps
test
loopne
stos
jl
xor
imul
outs
adc
xor
icebp
data16
or
call
ja
push
enter
push
lods
mov
retf
mov
sub
xchg
lahf
xor
and
dec
data16
push
xchg
cmp
jl
daa
mov
push
aas
cmp
jle
inc
ror
mov
mov
jnp
and
sbb
addr16
ret
mov
sub
or
fstp
pop
sahf
dec
sbb
leave
pop
sbb
cmps
and
sti
fs
xor
inc
shr
outs
aam
inc
or
lods
stos
ret
cmp
ret
xor
pop
pop
imul
jg
jne
push
add
out
stos
sbb
sbb
or
pop
popf
(bad)
je
mov
push
add
inc
and
lahf
pop
fs
outs
and
pusha
shl
test
add
in
jbe
stos
and
add
mov
jmp
mov
jecxz
jp
jne
inc
sbb
mov
(bad)
cld
xchg
push
and
pop
jbe
(bad)
aas
mov
xchg
mov
sub
xchg
pushf
or
lock
jmp
or
data16
jae
sbb
mov
jb
jecxz
mov
fsub
cmp
imul
cmps
dec
add
push
dec
xchg
ds
sbb
dec
fild
and
in
sub
inc
std
aad
inc
mov
mul
pop
pop
xchg
cld
test
inc
mov
add
fdiv
add
pop
retf
ins
cmc
inc
and
fsubr
mov
out
shr
sbb
push
jno
psubq
push
xor
mov
test
adc
push
add
dec
test
sbb
mov
xor
jb
fist
xor
jmp
xchg
sbb
ficom
push
pushf
or
cmp
lahf
mov
mov
call
add
fnstcw
out
in
dec
mov
(bad)
adc
push
or
cmp
xchg
sub
push
ret
adc
je
out
repz
inc
call
jo
das
pop
jmp
inc
mov
cmps
outs
addr16
movs
wrmsr
outs
mov
cmp
push
sub
(bad)
addr16
inc
fbld
xchg
or
cmc
(bad)
add
mov
cmp
and
neg
movs
inc
cmps
ror
es
adc
(bad)
sub
cdq
inc
jns
retf
imul
or
out
xor
jbe
mov
xor
add
test
(bad)
daa
or
mov
or
out
push
hlt
dec
jbe
push
je
dec
mov
mov
adc
add
jmp
test
or
es
and
push
add
jg
dec
dec
bound
xor
cmp
cmp
mov
sub
or
mov
or
dec
inc
cdq
xchg
mov
push
and
mov
mov
fst
pop
fcomp
sub
cmp
push
je
and
sub
stos
std
addr16
daa
loope
cld
test
mov
cmps
push
mov
dec
retf
fild
mov
rcr
jecxz
sbb
loopne
push
or
lahf
adc
repz
jmp
inc
ja
pop
adc
mov
jge
dec
imul
add
mov
cmps
stos
and
mov
pop
pop
in
into
rcl
jae
xchg
and
inc
test
sbb
nop
pop
add
call
jb
ret
out
xchg
pop
aam
mov
lods
add
rcl
push
mov
push
test
test
cmp
add
shr
test
data16
xchg
inc
js
shl
xchg
inc
xchg
mov
and
inc
scas
shl
movs
aaa
xor
retf
jle
imul
push
inc
mov
and
xchg
loop
repz
fisub
out
xor
ret
mov
out
test
mov
mov
or
adc
lock
fistp
(bad)
fstp
and
test
sbb
mov
je
test
mov
adc
sub
inc
jecxz
pop
mov
or
pop
xchg
cmp
into
or
pop
mov
outs
dec
dec
imul
cwde
(bad)
jecxz
jo
push
fwait
xlat
push
fptan
outs
xchg
dec
sub
enter
loop
(bad)
outs
test
sub
pop
jae
fst
xchg
xchg
dec
sub
jecxz
jl
jle
jne
jmp
xchg
out
jge
out
ret
jnp
cld
int3
fdivr
in
fnstsw
jmp
mov
mov
add
sahf
(bad)
(bad)
dec
xor
leave
xor
in
sub
icebp
ds
cli
jmp
ret
jo
data16
mov
ja
(bad)
adc
inc
dec
dec
retf
and
pop
(bad)
jne
pop
into
push
pop
push
popf
xchg
fild
sbb
pop
inc
pop
call
mov
pop
ror
sbb
out
aaa
cmp
popf
imul
adc
mov
lods
inc
mov
sbb
in
data16
jle
cmp
jl
mul
(bad)
pop
jo
pop
push
(bad)
stos
xchg
aam
jecxz
(bad)
inc
les
dec
stc
xlat
rcl
popa
aas
in
xchg
jns
fnstcw
outs
sub
mov
enter
dec
mov
xor
fld
or
int
xchg
or
push
sub
cli
adc
lahf
pop
push
icebp
ret
dec
stc
add
dec
push
mov
rdtsc
mov
sub
hlt
imul
aas
lds
inc
std
bound
add
in
push
out
push
cmp
out
ret
ret
dec
arpl
jnp
mov
mov
fidiv
push
daa
mov
aaa
clc
cli
and
cwde
arpl
fs
jg
and
scas
push
push
je
mov
sbb
push
inc
inc
cmc
xchg
aaa
shr
xchg
pusha
jb
loope
js
mov
jg
inc
sub
mov
push
or
xchg
inc
and
add
(bad)
(bad)
jnp
out
dec
sub
add
and
xor
mov
xchg
xor
add
push
pop
mov
cmp
lods
repnz
lds
dec
or
mov
je
lods
xchg
fistp
mov
lahf
push
jno
add
xor
and
mov
out
push
std
mov
inc
cwde
aaa
lock
cmp
(bad)
xor
ret
mov
sbb
inc
pop
cli
fwait
bound
inc
inc
inc
ins
(bad)
and
mov
mov
cmps
and
mov
stc
call
cmp
add
mov
mov
(bad)
mov
fist
mov
popf
stos
mov
xor
push
pop
leave
push
dec
inc
cdq
push
sbb
xchg
mov
mov
mov
cwde
aas
cmp
jne
and
pop
lahf
mov
out
mov
or
stos
es
cld
or
or
adc
and
cmp
xchg
pop
cdq
push
jg
cmps
mov
sbb
mov
or
aam
das
inc
ror
ret
push
in
popf
cld
es
ret
jmp
lea
sahf
mov
pushf
mov
add
out
or
mov
(bad)
xor
add
mov
pop
inc
sahf
fnsave
push
add
xchg
and
imul
push
popf
imul
xor
jl
movs
ret
aaa
xchg
mov
fistp
jo
sti
repz
pop
pop
jg
repz
iret
mov
or
pop
test
jno
add
push
lock
std
ror
add
sar
aam
or
add
adc
lods
xchg
es
push
dec
cdq
mov
mov
cs
mov
dec
and
outs
mov
inc
sbb
call
or
out
xor
mov
push
push
adc
cmp
dec
fimul
addr16
sahf
cmp
icebp
sbb
lahf
jae
jle
popf
lods
mov
test
dec
cmps
fld
fidivr
fmulp
popf
jno
test
and
mov
(bad)
sbb
sub
test
int3
test
mov
jmp
inc
sub
jg
movs
dec
repz
shl
and
sar
push
stos
popa
cmp
inc
call
fisub
lods
lds
xchg
and
fcomp
cdq
push
in
push
iret
push
ror
aaa
adc
mov
dec
not
ret
cmp
dec
popa
push
sub
repz
das
(bad)
cs
jle
mov
xor
cmc
cmp
aad
out
in
out
int3
xchg
xor
or
mov
sbb
imul
xchg
sbb
cmp
mov
sbb
jmp
js
ret
mov
rcr
outs
dec
(bad)
xchg
jmp
loopne
xchg
in
push
dec
dec
sbb
gs
out
push
add
sbb
and
out
call
and
cwde
xchg
pop
mov
or
push
mov
mov
adc
inc
imul
cmp
or
(bad)
cmp
xchg
push
movs
mov
push
cmps
(bad)
not
pop
mov
add
xchg
mov
pop
jl
iret
call
dec
mov
xor
xchg
fmul
cs
stos
mov
push
daa
stos
sbb
push
mov
ja
jle
adc
mov
fmul
test
retf
adc
sbb
cmp
cld
rcl
jle
aaa
mov
sub
rcr
mov
div
xor
xor
or
sub
add
inc
sahf
mov
les
mov
in
mov
add
test
mov
cwde
in
push
arpl
mov
ins
test
out
leave
or
cmps
mov
sqrtps
test
fs
sub
xchg
rcl
mov
adc
jmp
or
mov
jmp
pop
sub
lods
jo
push
push
push
not
push
sub
cmps
in
adc
pushf
imul
sbb
into
or
jbe
movs
jo
adc
mov
out
push
push
add
ret
sahf
mov
daa
jb
push
jmp
xor
push
daa
mov
ret
cmps
aad
cmc
aas
adc
into
sub
(bad)
jmp
pop
sbb
setns
mov
les
mov
inc
cli
push
inc
fwait
lods
aam
or
lds
aad
pop
sbb
sub
or
pusha
mov
loop
pop
jb
mov
pop
xor
xchg
and
push
cmp
jb
mov
rcr
push
(bad)
adc
imul
sub
pop
cdq
sbb
loopne
mov
jno
sbb
outs
pushf
mov
mov
jo
in
xchg
sbb
rcl
jge
cli
lock
inc
lods
dec
mov
or
sub
scas
mov
imul
add
hlt
inc
mov
aas
mov
pop
adc
push
aas
mov
xor
xchg
and
dec
add
sbb
xchg
test
out
test
loope
mov
jmp
and
lods
pop
xchg
pop
test
jbe
sbb
fdivr
adc
popf
lods
add
shr
jg
icebp
mov
rcl
cmp
push
mov
add
jl
sahf
push
push
mov
inc
adc
shr
test
sbb
pop
loop
in
ret
scas
aaa
or
lods
clc
adc
ret
movs
int
cmp
ins
(bad)
xor
ds
mov
imul
(bad)
int3
dec
adc
imul
ins
leave
xchg
scas
xchg
pop
xchg
fldenv
cwde
or
cli
cmp
sbb
inc
jp
jae
pop
fnstenv
sbb
ret
lahf
iret
loop
fidivr
jp
in
pop
xchg
xchg
push
xchg
mov
mov
mov
mov
push
mov
lods
daa
sbb
sbb
out
inc
mov
out
fstp
call
inc
xor
jge
adc
xor
ror
jbe
xchg
ror
movs
push
jmp
mov
pop
inc
or
xchg
add
dec
jo
enter
xor
jbe
aas
call
mov
mov
fs
cwde
push
stc
cs
mov
cmp
add
push
mov
jno
xchg
stc
popf
push
mov
dec
sub
iret
sti
fs
add
lea
inc
stos
fdiv
adc
call
sub
inc
add
fdivp
ss
jg
(bad)
jmp
push
or
or
mov
test
call
pushf
dec
inc
jbe
call
ds
mov
sbb
add
xchg
push
or
xor
inc
(bad)
sti
cwde
int
mov
scas
xor
sub
leave
pop
sbb
sbb
adc
push
push
(bad)
sahf
sub
aad
xchg
inc
fnstenv
push
rol
xor
and
jns
cwde
aas
lds
cld
and
jae
sbb
icebp
fbld
inc
pop
fsubr
(bad)
fisubr
stc
fprem
sbb
cmc
jge
test
cmp
dec
stos
mov
add
add
cmc
dec
mov
sub
in
cmp
sbb
pop
cmp
aam
js
mov
imul
add
jle
inc
cs
mov
mov
push
mov
mov
dec
mov
cdq
mov
mov
inc
stos
mov
mov
mov
popa
pop
mov
retf
out
sbb
mov
shl
cmp
push
xor
add
push
test
ret
stos
push
add
clc
fmul
mov
adc
add
mov
test
lds
icebp
and
ret
int
inc
push
add
sbb
cmp
xchg
mov
ins
cmp
gs
in
mov
or
push
inc
push
pop
cmp
mov
in
push
cmps
out
adc
xor
cmp
adc
sbb
data16
js
out
xchg
add
dec
(bad)
lock
mov
adc
outs
push
xchg
sbb
retf
cmp
adc
adc
(bad)
cwde
stos
xchg
es
jb
mov
inc
sub
cli
dec
lea
lods
mov
jmp
mov
add
in
cmp
out
dec
adc
test
int
ret
push
daa
xor
in
dec
jl
pminub
push
sbb
fistp
mov
jmp
sbb
in
in
pop
xor
pop
mov
push
pop
mov
inc
pop
(bad)
add
mov
or
mov
call
int
jl
pusha
jle
lods
imul
jge
jmp
add
xor
mov
fcom
mov
test
fsub
push
lods
cld
pop
sbb
mov
call
mov
push
xor
xchg
shl
sar
rcr
add
fs
dec
mov
jnp
add
xor
lds
xchg
sbb
or
aas
adc
in
and
jns
aad
sbb
mov
sub
mov
push
add
in
cmps
cmp
sbb
leave
jg
fsubr
popa
call
icebp
jae
test
pop
out
mov
adc
pop
mov
nop
pop
mov
ja
sub
push
mov
mov
inc
sti
lock
shl
lea
clc
cmp
xor
sbb
mov
mov
out
mov
loop
(bad)
mov
lea
xchg
sbb
push
ret
cmc
imul
sub
repz
in
mov
sub
cmps
xor
xlat
cmp
call
jb
(bad)
inc
out
sar
push
jecxz
push
sbb
loopne
and
shr
sub
fwait
and
or
adc
scas
out
cs
cmc
mov
daa
dec
push
and
mov
dec
sub
in
dec
test
add
retf
push
test
xchg
in
xchg
jne
mov
lahf
loope
jle
or
scas
(bad)
cli
cwde
lea
imul
cmps
pushf
sbb
add
xor
sub
pop
mov
jno
cmps
imul
mov
out
sub
jge
cli
sbb
or
dec
mov
and
les
sbb
jae
loopne
loop
mov
add
retf
xor
xchg
and
mov
or
adc
imul
adc
int
sbb
dec
sub
pop
xchg
bound
test
jle
pop
lahf
je
adc
movs
jecxz
pop
fdivr
das
fist
xchg
aad
pop
fcomp
ds
lds
inc
lahf
mov
cmp
sub
iret
and
xchg
adc
add
pop
pop
jmp
icebp
jae
mov
mov
fst
push
movs
retf
fisubr
dec
pushf
int3
dec
sub
aad
ret
inc
jns
ja
mov
stos
shr
push
or
mov
ins
fcomp
push
js
int
mov
add
jns
inc
inc
or
cmp
mov
mov
(bad)
mov
repz
jbe
sar
push
fcom
dec
test
test
jns
push
aad
push
jl
dec
cmp
inc
cwde
shr
cwde
ins
and
add
loop
adc
mov
loopne
xor
in
dec
test
neg
pop
rcr
jne
dec
xor
push
xlat
mov
mov
pop
inc
jle
fisub
xchg
mov
pop
and
(bad)
scas
jmp
cwde
xor
inc
test
xor
out
add
sub
ret
test
and
lods
adc
into
enter
loopne
fiadd
xchg
loopne
jbe
out
dec
in
mov
mov
lods
push
jmp
rcr
or
icebp
jns
mov
fmulp
lea
add
xor
fiadd
xor
xchg
push
sbb
lods
ss
ret
mov
loope
fadd
adc
mov
not
jle
ins
out
stos
mov
fistp
mov
dec
movs
mov
pop
mov
dec
mov
test
sub
cmp
pusha
daa
mov
(bad)
adc
dec
mov
or
dec
popf
xor
inc
arpl
sti
sub
cmp
jns
iret
cmps
xchg
cmps
cmps
xchg
outs
xlat
pop
jecxz
ds
enter
stos
add
mov
jns
jecxz
movs
dec
dec
mov
sub
mov
(bad)
cmps
adc
in
pop
xor
push
xor
faddp
lahf
adc
das
add
rcr
and
jge
pop
jo
scas
mov
outs
ror
mov
inc
dec
bound
cld
mov
out
push
xor
test
fstp
push
lahf
aas
dec
repz
out
movs
cmp
or
movs
adc
push
je
and
xchg
dec
idiv
mov
jge
inc
into
add
jne
hlt
cld
pop
inc
pop
(bad)
dec
dec
mov
sbb
test
cmp
loopne
sub
push
add
jge
retf
pop
retf
(bad)
out
es
mov
(bad)
idiv
mov
gs
scas
sub
and
pop
xchg
(bad)
repnz
add
pop
scas
scas
or
fsubrp
dec
cmp
dec
cmc
mov
add
js
lods
call
test
sti
rcl
add
mov
and
mov
ja
ins
add
fsub
js
popf
mov
and
add
mov
jns
xchg
test
sbb
stos
xor
out
mov
push
sbb
and
push
adc
pop
ja
cmp
push
xchg
push
sti
xchg
int3
or
dec
or
or
outs
scas
cmps
mov
jo
cmc
jmp
shl
fisub
jne
and
in
fs
ret
rcl
ror
mov
dec
xor
mov
inc
pop
push
jb
stos
je
jge
push
ds
dec
clc
mov
rcr
jno
jo
daa
jp
or
xor
dec
das
popa
mov
in
sub
jb
shl
push
xor
inc
mov
mov
call
xor
cmp
mov
sub
mov
lea
inc
sbb
cs
movs
call
push
js
or
movs
mov
fwait
leave
inc
dec
mov
xchg
sbb
push
adc
dec
cmp
(bad)
and
add
cmp
push
mov
jle
adc
into
pushf
push
and
ror
out
mov
add
add
mov
jb
add
in
into
call
ins
dec
outs
or
in
jmp
pusha
push
movs
sbb
in
fwait
sub
mov
call
mov
mov
sbb
fld
adc
les
fstp
stos
mov
clc
xlat
mov
js
int
push
and
sti
in
or
out
mov
fwait
mov
jnp
dec
sbb
push
mov
jmp
push
add
clc
sub
or
mov
inc
cmps
inc
push
sbb
mov
inc
syscall
(bad)
push
mov
out
cmp
or
mov
or
mov
pop
mov
(bad)
in
jae
in
ins
ret
cmp
loope
into
jmp
sbb
fcomp
push
push
jnp
int
ss
cdq
dec
int
out
dec
jo
xor
push
push
push
mov
inc
xor
(bad)
mov
stc
adc
xor
int
jno
shr
xlat
cmps
dec
aaa
aaa
jmp
adc
loope
test
push
xchg
rcr
ret
popa
out
mov
into
call
out
outs
pop
push
and
fs
cs
rcl
pop
leave
movs
jp
pop
dec
jb
adc
fist
ror
rol
bound
add
sahf
repz
fist
push
adc
repz
cmps
ss
or
xor
sbb
add
repnz
test
popa
test
jne
adc
inc
or
(bad)
je
(bad)
push
imul
js
dec
xchg
mov
mov
inc
rcr
fbld
inc
cld
leave
cmps
fdiv
add
sbb
shl
adc
scas
sbb
cs
loopne
pop
cmp
sub
push
sbb
inc
dec
ret
add
loop
pop
or
arpl
out
sbb
(bad)
lahf
into
lock
ins
movs
or
(bad)
sub
out
pop
dec
imul
je
shl
push
push
mov
sub
dec
inc
fwait
pop
xor
and
and
aas
pop
lods
(bad)
cmp
xor
jp
cwde
daa
popf
or
jl
adc
fidiv
out
mov
(bad)
fist
stc
out
mov
cwde
fs
cmp
mov
sub
jae
test
sub
adc
dec
and
xchg
fwait
mov
jne
xlat
adc
jge
pop
jbe
push
int3
aaa
loop
jbe
pop
in
adc
daa
std
jns
and
(bad)
in
aad
jo
fwait
xchg
sbb
mov
mov
sbb
sub
rcr
push
inc
push
add
fsub
aaa
pop
xchg
retf
aas
cmp
xchg
jp
fcomp
sbb
mov
ficomp
arpl
dec
sub
jbe
xchg
push
out
mov
arpl
inc
test
addr16
inc
std
xchg
imul
mov
dec
fisubr
inc
inc
or
mov
cli
mov
inc
(bad)
out
dec
fdivr
fsub
dec
stos
add
daa
fdivr
push
fwait
lock
stos
fnstsw
shr
int
ret
ja
or
dec
dec
cmp
pop
add
xor
sahf
inc
retf
pop
mov
dec
out
fiadd
or
mov
pop
cmp
cwde
retf
or
in
fldlg2
outs
std
loop
call
add
imul
inc
xor
and
mov
sbb
adc
sub
fistp
loop
and
or
call
out
and
movs
mov
loopne
retf
jle
or
mov
jo
test
or
daa
xor
nop
jne
mov
cmp
mov
push
cwde
icebp
add
mov
(bad)
js
push
cdq
out
mov
inc
jecxz
pop
jb
loop
xor
aaa
xchg
stc
or
imul
push
jnp
setl
mov
jno
push
imul
adc
xchg
inc
rol
data16
mov
xchg
out
mov
and
sbb
test
(bad)
(bad)
out
sub
jmp
mov
leave
(bad)
lock
outs
out
pop
lahf
push
adc
in
div
dec
leave
shr
jp
jl
fadd
nop
aam
xor
mov
lea
cmp
outs
and
mov
out
mov
jmp
or
cdq
or
test
rcr
mov
mov
sbb
add
(bad)
loopne
out
std
pop
sahf
adc
jecxz
aam
(bad)
push
mov
and
mov
rcl
arpl
out
pusha
out
push
repnz
sub
xchg
sub
mov
call
or
ss
std
xchg
cmc
cli
test
clc
and
in
cdq
cmp
nop
icebp
icebp
pop
jg
popf
cmp
shr
mov
sub
in
stos
retf
std
repnz
rep
popf
cs
retf
int3
rcl
clc
call
fmulp
dec
in
(bad)
mov
sub
(bad)
test
psrlq
mov
lods
rcl
pop
js
stos
out
sub
aaa
rcr
arpl
cmp
call
and
popa
sbb
mov
idiv
fdiv
lods
(bad)
add
pop
movs
dec
push
xchg
movs
ins
or
mov
push
mov
daa
adc
push
mov
call
inc
aaa
mov
lods
repz
and
inc
jbe
push
mov
push
pop
xor
aad
adc
fisubr
jl
pop
push
imul
adc
out
jno
scas
or
lods
nop
push
pop
inc
daa
arpl
mov
xchg
stos
out
sbb
inc
push
mov
icebp
cs
xor
sbb
jno
insertq
jns
jne
movs
enter
xchg
xchg
cmp
pop
push
icebp
out
push
cwde
outs
leave
loopne
sub
push
jl
mov
ret
adc
push
and
adc
mov
add
dec
mov
dec
mov
pop
iret
pusha
mov
out
in
leave
dec
cmp
movs
out
mov
nop
cmp
sbb
jg
push
xchg
or
lods
dec
and
dec
or
aad
push
push
out
movs
ins
loop
jno
xchg
xchg
sbb
imul
sar
jae
pushf
(bad)
sar
mov
adc
ror
arpl
adc
loope
add
mov
lods
popa
push
sub
in
addr16
imul
add
cwde
xchg
inc
ja
adc
sbb
dec
stos
adc
pusha
pop
pop
push
popf
pop
fidivr
mov
pop
sahf
aaa
ins
(bad)
popa
and
sub
mov
dec
(bad)
lds
sub
cmp
push
iret
mov
jge
sar
in
adc
mov
adc
add
pop
jmp
(bad)
push
sar
inc
in
add
push
cli
mov
push
sahf
repnz
call
fidivr
test
jecxz
aas
fstp
clc
jle
rol
jg
adc
cmp
sub
jne
xchg
and
dec
xchg
ins
jae
fsubr
cmp
mov
cmp
dec
xor
in
jno
imul
mov
mov
and
jo
xlat
jmp
jle
leavew
or
inc
xchg
jb
sbb
or
jb
xor
xchg
int
test
pop
stos
in
(bad)
jecxz
dec
xor
mov
xor
mov
mov
(bad)
cmps
mov
mov
jbe
or
(bad)
cld
pop
and
into
mov
(bad)
lock
mov
fidiv
cli
adc
ins
mov
in
pop
cmp
inc
cmc
mov
daa
shr
sbb
imul
sar
inc
dec
retf
shl
or
shr
mov
inc
outs
jl
(bad)
jg
inc
gs
inc
fwait
mov
jb
push
out
and
movs
dec
mov
push
add
pop
xor
mov
inc
add
int
push
or
mov
inc
adc
pop
test
mov
push
mov
mov
fsubr
mov
fdivp
and
push
sub
push
out
push
out
(bad)
popa
cmp
pop
std
gs
loopne
pop
and
ja
icebp
xor
gs
push
sub
push
stc
arpl
mov
and
xchg
outs
stos
jle
outs
clc
jne
inc
xchg
jmp
cmps
leave
outs
sub
cli
gs
mov
jge
into
xchg
cmp
push
popa
bnd
jecxz
icebp
addr16
js
mov
push
dec
out
jne
xor
div
sti
scas
popa
outs
and
or
fadd
int3
lods
imul
nop
test
adc
jle
sub
ror
push
mov
or
push
icebp
mov
pusha
in
stc
cld
cli
add
push
(bad)
or
inc
(bad)
fstp
pop
stos
push
mov
or
ja
or
cmp
mov
mul
fisttp
call
xchg
cdq
push
bound
retf
mov
sbb
jmp
rcl
xchg
pop
mov
ja
pusha
mov
lock
or
dec
fcomp
cmp
ds
push
xchg
adc
mov
shl
sahf
ret
shr
aad
jle
sub
inc
test
push
xchg
stos
lods
sbb
sbb
imul
mov
jecxz
and
add
push
outs
arpl
adc
push
adc
pop
fs
int
mov
ja
cmp
repnz
pop
mov
dec
mov
leave
pop
lock
icebp
loopne
rcr
sbb
inc
jo
mov
cmp
xor
call
lods
xor
ins
push
jle
mov
and
adc
jne
mov
je
out
scas
int3
cmp
add
popf
jno
clc
pop
fadd
retf
(bad)
lods
shl
daa
or
ffree
pusha
sbb
mov
sbb
xchg
xor
(bad)
mov
iret
lods
xchg
ret
add
or
in
sub
mov
adc
mov
(bad)
outs
dec
cmp
(bad)
sahf
or
fild
std
(bad)
jl
out
add
and
fld
call
data16
fsub
stos
imul
push
outs
fcom
push
mov
xor
stos
mov
xor
jge
cmp
cmp
shl
mov
outs
nop
push
or
cmp
or
xchg
dec
stos
cs
add
push
fwait
mov
xchg
add
sub
or
and
jl
jle
test
jns
dec
sub
xchg
mov
push
fisttp
into
scas
fst
cs
enter
mov
je
jns
xor
lds
jg
sub
ds
retf
or
mov
or
sub
jecxz
dec
loop
leave
popa
stc
add
js
dec
test
pop
add
mov
ss
mov
xchg
dec
push
or
adc
cwde
adc
ret
mov
in
add
sbb
add
js
sub
jge
mov
lahf
inc
dec
mov
xchg
call
push
push
mov
or
push
inc
pop
mov
dec
cmp
cli
cmp
shl
xor
cmc
aad
sar
mov
pop
in
pop
test
or
sub
test
outs
cli
dec
fimul
xor
inc
mov
push
and
adc
add
push
sti
shl
xor
cmp
stos
mov
pop
sbb
(bad)
aaa
mov
fldl2t
and
jae
push
shr
loop
sbb
jg
inc
in
movs
stos
mov
sbb
leave
test
in
adc
cmps
mov
jge
or
or
cmps
add
out
pop
mov
jle
in
retf
test
push
adc
sub
mov
(bad)
fistp
mov
shl
cdq
xchg
clc
dec
aad
xchg
movs
jle
popf
in
lahf
cwde
aam
jne
mov
retf
cli
push
push
int3
adc
aas
and
daa
repz
push
icebp
inc
xchg
lds
pop
shr
push
leave
xchg
pop
xchg
or
lods
mov
pop
mov
scas
jno
dec
(bad)
pop
outs
jmp
jmp
loope
std
add
fisttp
jbe
das
in
pop
clc
stos
pop
or
cmp
xchg
pop
jp
pop
enter
data16
std
xor
push
dec
pop
jo
mov
in
add
or
push
in
test
fiadd
sub
sbb
inc
xor
inc
and
sar
or
into
fiadd
sub
jae
and
push
xchg
(bad)
test
mov
add
pushf
fmul
or
inc
and
jl
cmp
xor
and
push
adc
mov
sbb
or
popa
aam
jns
mov
ins
test
mov
scas
xor
xor
mov
mov
test
fsub
pop
pop
iret
add
sbb
sub
cmp
sub
pop
push
jae
mov
jg
jno
jo
rcr
addr16
jb
push
repz
sbb
sbb
pop
mov
push
xchg
pop
ss
mov
or
xchg
(bad)
test
xchg
jo
ret
leave
inc
mov
retf
pop
adc
xchg
imul
xor
xchg
inc
mov
jb
into
and
mov
pop
stos
movs
inc
xchg
mov
(bad)
call
out
lods
pop
jl
popf
xor
cmp
mov
retf
mov
cmp
push
ror
popw
cmp
in
outs
cmp
mov
lds
pop
in
test
xchg
or
bound
adc
pushf
pusha
scas
addr16
mov
xchg
push
popf
sbb
fisttp
arpl
jp
mov
jmp
push
popa
imul
je
jb
popf
aas
ds
cmps
xchg
repz
xor
xchg
pop
int3
imul
sub
jmp
cmp
push
xchg
add
addps
mov
dec
push
cli
sbb
push
sti
adc
movs
stos
sahf
popf
cmp
fild
pop
(bad)
mov
adc
jecxz
add
or
(bad)
outs
pop
sub
add
into
mov
mov
sub
xchg
push
inc
jp
jo
leave
sbb
xor
mov
pop
add
xor
icebp
jge
leave
cmp
cmp
leave
jb
jbe
mov
inc
or
mov
(bad)
pop
add
repnz
call
aas
pusha
ffreep
sbb
push
sbb
in
popa
jle
pusha
pop
movs
cdq
test
or
loopne
mov
lock
mov
or
sbb
push
in
dec
sbb
mov
pop
inc
push
sbb
test
cmp
jge
pop
lahf
call
in
pusha
dec
push
xchg
cmp
cmp
cld
test
xchg
test
sbb
les
adc
mov
add
out
and
into
ret
xor
lods
stos
(bad)
sbb
stos
mov
cdq
fbld
xor
xchg
test
int
fimul
je
mov
je
push
mov
sbb
xchg
or
mov
sub
(bad)
cld
xor
xor
jmp
(bad)
mov
repz
and
out
inc
xor
jnp
lock
arpl
pop
loop
push
(bad)
pop
ja
xchg
cmp
cmc
inc
mov
pop
and
in
adc
fimul
fstp
cmp
hlt
jae
test
adc
das
dec
push
out
jbe
cld
(bad)
and
jne
or
outs
bnd
sub
pop
stos
mov
jo
sub
test
push
stc
cld
ins
mov
pusha
fcomip
aaa
add
inc
stos
push
inc
mov
call
mov
mov
jl
sbb
cdq
mov
stos
push
mov
push
adc
adc
enter
cmp
add
jae
push
stos
rol
jle
push
mov
sub
push
iret
ja
fwait
movs
aad
mov
mov
hlt
hlt
dec
mov
push
pop
cmp
push
scas
adc
rcl
loope
mov
jbe
sub
add
repnz
mov
xor
xor
cdq
push
jmp
jmp
out
je
int3
push
in
sar
and
jne
test
jns
sub
jp
mov
ror
ror
inc
inc
xchg
sbb
sahf
lock
data16
in
dec
stos
mov
imul
mov
data16
in
retf
and
inc
push
xchg
jnp
icebp
and
ret
(bad)
aas
inc
and
or
sbb
sbb
pop
or
dec
adc
in
sar
lods
(bad)
pop
aam
or
test
int
mov
std
stos
sub
test
push
and
leave
pop
xchg
jmp
or
shr
retf
push
xor
adc
jne
mov
je
ret
dec
or
pop
out
xor
rcr
sahf
vfnmsub231ss
rcr
popa
ret
lods
push
(bad)
js
in
jbe
pop
and
dec
rcr
sub
push
mov
and
ret
xor
ins
push
outs
sub
xor
sub
cdq
sbb
test
xchg
and
jge
pop
dec
add
aaa
sbb
mov
and
cmp
pop
imul
inc
dec
pop
sbb
ja
out
inc
xor
xchg
sbb
push
dec
scas
int
lds
lods
mov
cli
cmp
and
dec
mov
loopne
add
enter
sub
in
out
sbb
lds
neg
push
cmp
xchg
push
adc
mov
mov
xor
mov
(bad)
fs
shl
inc
shl
iretw
sysexit
jnp
sar
mov
loope
sub
mov
add
xchg
inc
and
fst
push
lock
sbb
sub
mov
xlat
dec
daa
mov
mov
leave
out
repz
xor
xchg
xchg
xchg
inc
popf
sub
sbb
cmp
mov
mov
sub
fs
inc
jg
pusha
pop
add
xor
mov
fiadd
and
cmp
retf
jle
or
jae
jp
sbb
rcl
xor
outs
cmp
mov
mov
retf
cmp
pop
pop
in
mov
push
mov
dec
ja
test
ret
sub
mov
push
mov
push
clc
imul
stc
dec
out
fs
pushf
push
mov
mov
cmc
inc
or
jno
sbb
jb
ret
cmp
cmps
pop
pop
adc
and
lea
mov
ret
imul
cdq
(bad)
cmp
popa
aas
push
push
ds
repz
pop
scas
fdivr
push
pop
cmp
in
clc
mov
adc
in
gs
adc
xchg
pop
and
pop
xchg
xchg
adc
mov
jp
pop
loop
in
xor
clc
in
add
addr16
retf
mov
xlat
sub
js
dec
pop
bound
shl
js
in
mov
call
add
sub
ja
fs
out
mov
jl
iret
addr16
call
in
pop
addr16
sbb
(bad)
fstp
push
jb
jecxz
adc
or
jge
xchg
jg
cmp
inc
adc
das
int3
push
push
jmp
iret
mov
neg
sub
int3
inc
nop
mov
lods
or
sub
push
or
sub
sahf
adc
fdiv
mov
sbb
cmp
out
push
test
repnz
xor
push
dec
into
push
fs
stc
rol
push
test
call
mov
jb
stos
shl
or
sub
pop
lock
sbb
icebp
pop
xor
imul
(bad)
mov
(bad)
mov
pop
cli
xchg
xor
lods
mov
pop
mov
sub
stc
pop
loop
mov
xchg
daa
(bad)
fst
cmp
mov
xor
mov
mov
xchg
cmc
sti
das
sub
aas
and
mov
cld
dec
test
fwait
sti
mov
int3
(bad)
dec
imul
jg
movs
cmp
xchg
and
sub
or
mov
int3
adc
adc
xchg
les
sub
mov
pop
test
sbb
dec
inc
repz
add
out
cmp
fsub
(bad)
jno
cdq
int
sub
inc
fstp
push
push
xlat
xor
push
jg
ins
test
(bad)
mov
mov
je
inc
mov
jp
jle
jno
sub
sbb
xor
add
xor
movs
lock
jo
jae
jg
pop
aad
cmps
mov
rcr
or
cwde
lock
inc
bound
outs
xlat
cmps
(bad)
das
in
sbb
pop
mov
mov
inc
and
mov
out
test
fld
(bad)
xor
push
out
mov
movs
sbb
mov
sbb
inc
push
ins
jbe
dec
fldenv
inc
mov
lea
movs
adc
inc
out
data16
push
cdq
movs
mov
push
and
xor
sbb
rcl
popa
iret
shl
sub
xchg
mov
and
add
test
mov
pop
arpl
mov
ins
dec
inc
add
popf
out
sbb
add
inc
mov
xchg
inc
repnz
jmp
retf
ins
repz
popa
mov
ja
fmul
test
mov
scas
mov
ret
mov
data16
loope
sbb
pop
and
popa
mov
and
inc
mov
sub
ds
leave
jle
dec
mov
inc
popf
aam
or
adc
in
adc
push
les
mov
mov
mov
pop
fbstp
adc
cmp
sqrtps
mov
jge
out
or
jbe
retf
lds
dec
mov
pusha
sub
push
xchg
cmp
adc
fdivr
pop
push
jae
cwde
in
mov
mov
jo
(bad)
in
mov
mov
add
sub
mov
lahf
pop
test
icebp
lds
ins
mov
das
int
xor
mov
add
cmp
shl
sar
mov
mov
cmp
add
jecxz
and
sbb
jmp
pusha
stc
xor
stos
mov
popf
daa
mov
xor
xor
jo
pop
out
mul
cwde
mov
mov
sbb
repnz
sbb
add
sbb
adc
jns
daa
jno
data16
sub
push
mov
push
cmp
retf
stos
cmp
pusha
das
stos
mov
push
mov
pop
(bad)
cld
sbb
xor
or
daa
cs
mov
cmp
addr16
adc
inc
dec
mov
mov
mov
aam
div
push
stc
(bad)
aam
mov
ja
add
jmp
(bad)
or
ror
les
repz
fsubr
bt
movs
pop
std
adc
cdq
mov
sub
sahf
jne
call
std
jae
sbb
mov
inc
adc
repz
(bad)
outs
lahf
cmc
sub
sub
test
add
cmps
sahf
mov
cmps
movs
ds
fisubr
sbb
cmps
and
aas
pusha
ds
jnp
add
fidivr
push
cdq
scas
adc
or
sbb
je
repnz
aas
jecxz
pop
retf
ror
dec
into
ds
mov
cmc
push
adc
xchg
inc
mov
mov
mov
ins
sub
pop
push
add
fs
xchg
xchg
adc
and
mov
xor
mov
or
adc
pop
inc
imul
int
shl
xchg
(bad)
out
ror
lahf
pushf
(bad)
shl
push
xchg
and
into
jbe
mov
push
dec
cmps
out
sub
fnsave
xor
ret
cmps
mov
fisub
icebp
aaa
adc
xor
sti
and
mov
jp
add
cmps
(bad)
aaa
rol
jl
stc
adc
ror
jge
hlt
push
ins
out
fst
adc
addr16
sub
or
shl
inc
sbb
adc
es
push
lds
sbb
nop
aaa
push
retf
push
pusha
pop
ja
outs
dec
and
mov
arpl
out
mov
fwait
adc
pop
add
mov
sub
push
mov
lock
or
fstp
adc
mov
call
xchg
add
adc
rol
into
mov
or
jbe
into
jb
hlt
test
adc
mov
(bad)
cdq
(bad)
push
sbb
adc
inc
stc
push
aas
(bad)
adc
retf
out
cld
jmp
push
es
fdivr
push
add
cli
add
mov
fs
out
adc
sub
leave
jmp
push
pop
lds
sub
xchg
push
sub
xor
icebp
pop
neg
pop
push
inc
mov
idiv
popa
pop
cmp
pop
or
jb
retf
call
(bad)
push
aas
cdq
fwait
test
out
popa
add
mov
cdq
mov
clc
mov
cmp
(bad)
pop
mov
add
and
and
inc
jb
rcr
fcomp
fs
imul
mov
xor
jno
xchg
rol
fnstenv
jl
dec
sbb
pop
dec
cwde
xchg
pop
dec
repz
fadd
and
jecxz
cmp
loopne
cmp
adc
icebp
scas
jne
push
jl
add
pusha
dec
push
sbb
mov
mov
mov
cmp
(bad)
and
mov
mov
push
or
add
repz
enter
ret
call
movs
in
(bad)
jl
pop
sbb
add
loop
dec
(bad)
mov
movs
shl
shr
jmp
mov
into
inc
stos
js
andnps
jmp
adc
mov
inc
sub
cmp
out
shrd
sub
mov
push
xor
ss
ret
dec
comiss
push
lea
mov
mov
push
aaa
in
push
sub
dec
sub
popf
mov
aas
in
inc
or
fisttp
or
xor
sub
push
xlat
fucomip
lods
push
add
stc
cdq
mov
fdiv
jo
push
mov
pause
call
xchg
and
ss
pop
and
xor
stos
inc
inc
clc
jge
sbb
sbb
jmp
xchg
pop
jb
jle
mov
outs
push
cmp
test
pop
inc
lods
out
mov
push
leave
jmp
sbb
push
inc
dec
and
adc
mov
dec
mov
loop
out
(bad)
aaa
out
rcr
or
xor
sub
fldln2
push
rol
xchg
test
add
sbb
adc
pop
pop
into
sbb
adc
addr16
ror
shr
test
cmc
fist
pushf
hlt
es
cmp
out
std
inc
sub
cmp
outs
js
dec
(bad)
or
push
push
dec
imul
push
mov
pop
lods
in
mov
and
fisub
xor
mov
jmp
call
dec
imul
adc
sbb
pop
into
(bad)
push
jnp
fsubr
repnz
js
addr16
shr
pop
jb
mov
push
out
cmp
or
jecxz
scas
test
pushf
xchg
pop
jmp
call
gs
fbstp
xor
test
jmp
push
sbb
inc
out
mov
aam
test
les
(bad)
fild
cs
lds
stos
je
gs
inc
out
cmps
jle
and
in
cs
scas
(bad)
stc
adc
ins
cmp
pushf
dec
popf
push
test
jne
pop
xchg
(bad)
aad
pop
imul
cmps
jns
push
cli
xchg
adc
mov
mov
or
sub
nop
les
inc
pusha
outs
rcl
mov
pushf
xchg
sbb
or
ficomp
lods
lock
or
add
out
stos
in
xor
xor
sbb
xor
les
fwait
loope
ins
mov
out
mov
pushf
shr
lea
lock
test
enter
cmp
cmp
movs
inc
nop
jecxz
xor
arpl
sub
adc
pop
xchg
mov
jnp
adc
xor
mov
sahf
mov
stc
xor
lds
adc
rcl
pop
ds
ror
dec
push
call
out
dec
jae
sub
fisttp
add
mov
rcl
mov
loopne
adc
ins
mov
and
add
or
cdq
ins
js
adc
ins
and
add
sub
sahf
test
sub
dec
add
push
push
js
sar
push
mov
cs
add
test
xor
outs
lea
les
movs
jb
out
mov
mov
add
aad
je
outs
or
or
fmul
dec
test
retf
dec
sub
mov
fdivr
mov
std
fwait
push
in
pop
outs
jb
push
sub
xor
sub
movs
adc
bound
ret
fdiv
icebp
sbb
and
or
push
ins
mov
push
in
dec
repnz
sbb
jle
leave
push
retf
xchg
push
out
adc
fnstcw
loope
jmp
out
pop
je
ret
jmp
repnz
stc
pop
bound
and
and
(bad)
idiv
mov
mov
cmp
jl
into
call
fcomp
popf
enter
adc
cs
xor
push
dec
dec
ret
mov
int3
retf
fimul
jmp
pop
movs
std
xchg
test
or
ret
ror
adc
jo
hlt
aad
imul
mov
cli
(bad)
mov
xchg
test
push
(bad)
jbe
push
outs
aas
hlt
or
out
mov
(bad)
out
div
fsubr
and
adc
mov
in
xchg
sub
das
mov
jns
aas
and
pop
add
push
cmp
xchg
xchg
rcl
inc
add
imul
or
ins
or
inc
clc
ret
add
out
push
add
sbb
cdq
dec
xlat
fmul
repnz
imul
stos
sub
(bad)
or
push
(bad)
mov
dec
aam
cmp
cli
or
pusha
pop
loope
mov
mov
ret
mov
ja
sub
pop
or
(bad)
cld
pop
out
shl
mov
ret
(bad)
xchg
stos
rcl
and
cmp
int
ss
mov
(bad)
ret
mov
mov
mov
mov
mov
inc
sub
push
jecxz
pop
push
or
cmp
mov
je
jecxz
pop
cmp
mov
int3
stc
cmp
sub
jae
jg
fisub
jnp
(bad)
mov
sub
pop
jns
(bad)
push
mov
out
mov
dec
push
call
sti
adc
adc
in
xchg
dec
sub
mov
(bad)
and
push
in
mov
enter
push
lds
cld
cmp
test
sub
mov
aas
add
adc
mov
popa
jb
les
dec
add
mov
cmp
les
xchg
push
in
jmp
pop
push
or
test
mov
imul
ret
push
or
retf
jmp
popa
pop
retf
mov
in
inc
pop
cmps
and
mov
or
(bad)
xchg
in
or
ins
pop
xor
push
push
es
push
mov
ds
addr16
xchg
sbb
xor
adc
es
loop
and
je
aad
or
mov
add
(bad)
mov
inc
sub
push
(bad)
lods
push
outs
pop
xchg
shr
xor
lods
imul
hlt
cmp
lea
fs
pop
jno
or
jmp
test
cdq
into
loope
test
ins
mov
out
xlat
push
fstp
push
push
dec
inc
iret
aas
and
push
sti
sub
imul
ror
add
add
imul
out
inc
sub
push
push
pushf
dec
icebp
data16
mov
jg
or
sbb
add
(bad)
stos
fldcw
pop
mov
sbb
(bad)
cmp
ins
call
js
mov
aas
mov
retf
push
popa
rcr
ret
push
xor
xchg
lock
dec
jbe
cmp
or
cld
pusha
out
outs
(bad)
hlt
test
in
sbb
or
xor
cwde
or
rcl
xchg
xchg
jle
sub
cwde
mov
mov
popa
icebp
adc
jle
add
push
dec
sub
dec
or
mov
ret
sbb
(bad)
aas
into
sub
aas
add
or
xchg
adc
mov
sti
xchg
sub
(bad)
or
pop
inc
aaa
ss
dec
movs
mov
adc
cmc
jmp
inc
stc
shr
aam
mov
push
xchg
aad
jl
push
or
out
(bad)
sub
sbb
lock
mov
leave
pop
(bad)
mov
cmps
mov
push
sbb
bnd
sti
jb
fld
cli
xchg
clc
hlt
shl
inc
icebp
jmp
jl
ss
or
cmp
adc
add
call
fbld
pop
adc
ins
lods
out
(bad)
fdiv
mov
(bad)
(bad)
ins
mov
push
scas
das
push
pop
lds
lea
cmp
fiadd
in
scas
sub
inc
dec
icebp
mov
jp
in
lods
cmp
ins
out
push
cs
sar
sub
in
lods
pop
dec
cmps
jo
adc
ja
sub
adc
int
mul
cmp
adc
cwde
sbb
sub
popa
jmp
sub
and
out
adc
mov
xor
retf
jnp
mov
inc
lods
fcmovb
outs
mov
jne
bound
push
daa
fldenv
push
pop
sub
scas
(bad)
jnp
mov
sbb
test
lds
dec
and
dec
cld
mov
and
ja
xchg
and
cmp
push
push
sub
inc
pop
jae
sub
push
or
iret
fimul
outs
dec
stc
cld
ins
dec
mov
inc
popw
mov
sti
xchg
lods
add
fmul
lods
inc
cld
xchg
jae
add
cmp
and
mov
jge
jg
add
fcom
scas
cdq
test
aaa
fmul
or
rol
cmp
xchg
adc
add
fistp
inc
stos
(bad)
inc
(bad)
fldcw
mov
adc
sub
rol
jmp
pop
dec
iret
cmp
push
push
das
in
mov
in
aaa
push
or
push
add
inc
sbb
jo
in
xchg
jmp
sub
cli
mov
dec
int3
pop
cmp
pop
and
(bad)
dec
or
loopne
jg
add
inc
add
popa
jmp
sti
sub
adc
mov
stos
dec
and
imul
xor
ret
lea
retf
cmp
xchg
lea
mov
xchg
dec
rol
cmp
mov
pop
mov
mov
imul
cwde
or
xor
nop
adc
in
or
mov
fsub
pop
test
shl
jg
mov
pop
retf
add
push
stos
adc
dec
outs
or
aas
sub
ins
push
add
add
sar
cmp
push
adc
jae
adc
cmc
mov
push
push
xor
lea
push
fnstsw
lods
in
mov
xchg
or
and
bswap
cld
gs
rcr
or
int3
mov
jno
pop
sbb
add
mov
in
adc
retf
xchg
shl
and
das
test
sbb
sbb
add
call
and
mov
ficom
sar
xchg
aas
push
dec
les
dec
jne
push
jg
jp
pop
mov
or
xor
inc
or
aaa
movs
lea
aaa
and
rol
and
mov
nop
mov
iret
or
mov
jmp
mov
out
dec
in
pop
pop
test
pop
jmp
add
sti
(bad)
cmps
mov
or
je
lea
(bad)
paddq
mov
inc
pop
adc
iret
pop
call
push
add
mov
inc
in
xchg
or
push
data16
jnp
dec
sbb
jae
xchg
aaa
and
das
shl
arpl
xchg
popf
xchg
xchg
fild
rol
pop
imul
lods
xchg
test
jnp
stc
ror
(bad)
cmp
push
inc
jns
push
out
fnsave
fcom
outs
pushf
xor
add
mov
adc
sub
xlat
loop
mov
push
idiv
adc
test
adc
mov
sub
in
or
sub
adc
sub
stos
leave
sub
adc
mov
dec
sahf
dec
adc
lea
test
movntq
push
(bad)
pop
ja
fs
and
sahf
pop
jb
std
scas
addr16
ss
ja
stos
pop
inc
loope
cmp
xor
je
adc
leave
and
inc
xor
dec
aaa
mov
dec
push
in
pusha
inc
pop
out
lock
cdq
add
push
jl
xor
push
cmps
jnp
and
fcmovne
mov
cmp
fdivr
mov
ror
xor
daa
sahf
mov
js
fcomi
gs
cmps
inc
adc
(bad)
and
fwait
push
sbb
outs
(bad)
cmp
div
sbb
ins
(bad)
cli
out
push
adc
xor
test
cmp
test
daa
inc
push
sahf
lahf
inc
adc
nop
mov
dec
cmp
pop
dec
pop
inc
add
mov
adc
dec
inc
and
xchg
call
cwde
push
jmp
xor
add
repnz
(bad)
retf
push
(bad)
bound
jg
cmps
xlat
mov
mov
xchg
shl
fistp
leave
xor
dec
mov
inc
scas
fwait
cmp
mov
lds
in
jmp
pop
sbb
leave
pop
dec
or
cmc
lahf
xchg
or
outs
mov
jns
push
dec
out
addr16
pop
in
or
rcr
dec
(bad)
stos
scas
inc
sbb
xchg
fadd
mov
movs
cli
out
rcl
fimul
push
sbb
lea
fld
pop
outs
ror
or
in
icebp
push
fwait
lods
inc
imul
and
push
pushf
inc
jb
jecxz
leave
add
cmp
xchg
jns
repz
xlat
mov
pushf
pop
or
rol
hlt
loope
pop
and
aad
in
mov
xchg
out
outs
cwde
push
stc
jmp
popa
popa
xchg
(bad)
outs
rcl
mov
sub
or
mov
icebp
sahf
in
ja
push
retf
cmp
mov
xchg
xchg
mov
push
jp
or
or
in
push
add
stos
xor
mov
lahf
and
xchg
jns
and
jb
dec
xchg
or
mov
nop
and
das
jg
sub
leave
jecxz
cmp
dec
mov
jo
rcl
pop
xchg
fdiv
ret
sub
add
movs
xchg
in
pop
lea
push
pop
cdq
cli
xor
mov
fistp
imul
mov
into
cmp
xor
jo
sbb
gs
icebp
jge
imul
push
push
hlt
cmp
test
push
fst
scas
push
into
sti
sar
gs
mov
fadd
ficomp
jmp
fstp
push
aaa
movs
imul
inc
fld
retf
int
in
xlat
jnp
aas
fdecstp
aaa
push
push
push
jb
jns
data16
(bad)
shl
inc
xchg
outs
jo
inc
hlt
inc
repnz
xchg
scas
paddsb
imul
mov
pop
cdq
into
push
ret
sub
in
stos
mov
xor
pop
or
outs
pop
lahf
into
ror
add
cwde
cli
mov
cmc
fwait
leave
ror
xlat
push
or
push
or
mov
jbe
and
daa
int3
lods
mov
mov
lahf
stos
fld
add
xor
mov
xor
test
add
sub
cld
nop
cmp
push
push
sub
nop
fs
cwde
leave
adc
add
or
or
xchg
in
enter
dec
movs
xlat
std
mov
sub
lock
test
test
sbb
cld
shl
test
(bad)
movs
jmp
mov
fistp
mov
mov
(bad)
mov
add
mov
cld
stc
cdq
int
cmp
enter
dec
sbb
jmp
cmc
js
mov
cdq
clc
int
mov
dec
lds
stc
inc
dec
mov
outs
loopne
xchg
jl
mov
jnp
cli
mov
aaa
xor
pop
sbb
lahf
or
inc
or
mov
jb
out
test
out
or
call
outs
in
dec
test
(bad)
(bad)
pusha
scas
sbb
inc
js
frstor
call
push
xchg
xor
or
push
lods
xor
pop
or
push
cwde
ins
cmp
mov
jb
sar
and
out
inc
pop
pop
in
add
xchg
lods
sub
sub
aad
xor
aaa
rol
jmp
es
pop
fwait
pop
adc
sbb
push
cmp
inc
xor
mov
sahf
fwait
push
or
xchg
xor
jl
cmp
ret
cmc
das
outs
pusha
sbb
out
jb
add
stos
(bad)
out
ror
push
outs
push
cmp
mov
inc
inc
(bad)
mov
inc
pop
xor
push
sub
fisttp
std
xchg
push
or
popa
rcr
int3
and
sbb
repnz
or
sbb
lods
cwde
mov
pop
cmps
fsubr
cld
outs
mov
fidiv
sar
xchg
imul
xchg
stc
dec
add
cmp
xor
mov
or
cmps
sbb
test
sti
cmp
popaw
push
les
mov
aaa
mov
ins
in
fimul
mov
repnz
and
dec
xchg
adc
fsubr
jmp
jae
adc
mov
movs
push
mov
mov
les
jae
js
pushf
jmp
popa
test
xchg
nop
and
cmp
jo
cli
jp
idiv
jb
bnd
rol
push
aaa
pop
cmps
lods
inc
push
xor
cmp
popf
dec
dec
das
xchg
xchg
xchg
retf
bound
aam
sub
div
dec
pop
jg
or
pop
lods
jns
clc
mov
out
cli
mov
test
jmp
cmp
xchg
or
jo
scas
fisttp
sub
popa
aas
mov
pop
jb
adc
cmp
add
bound
or
stos
stos
push
movs
mov
dec
inc
sbb
mov
vaddsubpd
jbe
gs
pop
cli
jns
mul
or
stos
test
loope
and
mov
or
div
xor
sbb
inc
int3
rcr
xor
pusha
jge
xor
jb
push
mov
movs
test
cld
sbb
xor
int
sahf
test
in
repz
add
loopne
(bad)
push
push
and
mov
push
dec
push
cmps
stos
add
sbb
movs
mov
jo
popf
into
mov
inc
mov
xor
inc
mov
fnstsw
mov
mov
ret
xor
pop
pop
(bad)
push
mov
sub
or
repnz
pop
dec
or
retf
sbb
mov
nop
add
loopne
or
call
mov
jno
dec
sub
sar
xor
ror
(bad)
clc
push
loop
xchg
fmul
fimul
rol
lods
inc
mov
pop
xlat
jns
sbb
int
mov
ss
sti
or
pop
fldenv
xrelease
push
icebp
mov
xor
mov
popf
cmp
sbb
sbb
mov
not
icebp
jo
mov
xchg
cmp
aad
test
adc
cmc
out
push
inc
leave
ss
dec
nop
in
std
test
push
sub
into
or
stos
jns
femms
mov
data16
cmp
inc
cmp
aas
fadd
loope
jge
call
(bad)
jl
out
mov
pop
int
xchg
loopne
stos
mov
jecxz
std
xchg
cmc
adc
ret
scas
push
loope
(bad)
(bad)
scas
js
mov
and
cli
adc
cmps
lods
jo
imul
fdiv
mov
jecxz
jnp
icebp
ret
sub
push
(bad)
pop
dec
std
xchg
push
popf
jmp
std
mov
popf
cmp
enter
sub
test
push
pushf
fst
retf
mov
push
cmps
in
mov
movs
sub
sub
jg
ficomp
gs
inc
out
stc
clc
leave
das
dec
xchg
mov
int3
(bad)
(bad)
aas
outs
icebp
or
int
leave
test
cld
cmp
idiv
or
arpl
call
jne
pop
dec
sti
mov
and
sbb
out
js
xor
retf
mov
jb
jno
stos
(bad)
jge
out
(bad)
clc
fidivr
cmps
mov
jmp
sub
(bad)
imul
add
scas
push
inc
dec
adc
sub
sbb
inc
cld
pop
int
and
jge
push
stc
mov
inc
xor
int3
and
test
int
enter
jae
loope
fisub
mov
or
clc
jge
adc
repz
xor
mov
jmp
or
fdiv
int3
pop
cmps
cmps
mov
add
push
xchg
mov
mov
dec
in
xchg
sub
(bad)
(bad)
(bad)
adc
xor
aad
daa
ds
push
sub
jge
outs
push
jmp
mov
pop
mov
mov
push
sbb
xchg
into
inc
cdq
mov
(bad)
ins
ficomp
aaa
test
(bad)
cmp
test
sbb
lods
rcl
cmps
mov
cmp
pop
bound
mov
xchg
sub
cwde
in
cmp
sti
cmp
cdq
fwait
mov
aaa
outs
jo
in
call
or
mov
ds
or
daa
in
jmp
into
test
(bad)
mov
cmp
jge
cmp
jae
and
xor
jb
adc
cdq
pop
add
arpl
adc
fadd
scas
jge
xchg
mov
push
shl
jge
lods
jmp
or
pop
jb
and
int3
frstor
ret
icebp
scas
rol
rol
shl
cmp
mov
loopne
dec
aam
(bad)
fnstcw
mov
add
cmp
fisub
dec
xchg
aaa
addr16
adc
jge
mov
mov
xchg
sti
pop
test
js
xchg
sbb
test
movs
call
xor
aaa
or
ins
loop
ins
push
(bad)
in
adc
and
test
mov
test
mov
int
scas
iret
mov
inc
push
fisttp
and
sbb
jbe
dec
xchg
fistp
sub
dec
add
and
add
add
out
and
test
movs
ror
mov
retf
mov
fstp
push
leave
mov
std
shl
fstp
addr16
cdq
sti
mov
fs
mov
add
and
aad
js
fild
jecxz
test
ret
retf
js
inc
push
rcr
cmp
mov
sbb
cs
pop
rcl
adc
ret
push
add
fstp
fidivr
or
sbb
xchg
adc
sub
fstp
pop
cli
int3
jo
fsub
push
xor
cld
bound
(bad)
mov
loopne
pop
repnz
lods
dec
pop
fs
enter
cwde
push
scas
stos
mov
adc
test
add
imul
jmp
leave
into
and
xor
out
loope
sar
or
or
cmps
int
fs
jmp
adc
imul
or
cmp
cdq
xchg
jae
pop
icebp
xchg
and
pushf
cmc
ret
jge
stc
or
pop
imul
pop
les
retf
adc
call
movs
cmc
mov
(bad)
aad
ret
add
push
or
je
jge
or
cmps
xor
addr16
loop
mov
push
les
jecxz
xchg
cmps
fnstsw
sti
sbb
xchg
adc
and
cmp
xchg
pushf
sbb
lods
js
cmps
jmp
fidivr
jle
stos
fild
je
push
fidivr
add
push
int3
push
push
or
pushf
dec
call
dec
movs
rcl
jne
ins
and
call
leave
and
ja
push
pop
pop
(bad)
mov
scas
imul
pop
lods
daa
and
idiv
gs
xchg
dec
stos
jns
xor
pop
lock
jp
outs
xor
jno
lock
mov
hlt
cmps
inc
enter
or
outs
jge
or
dec
or
jns
cmp
mov
fneni(8087
mov
repz
dec
retf
mov
push
mov
rcr
and
or
scas
xchg
or
stc
retf
mov
dec
loope
pop
and
cmp
enter
mov
xor
ror
(bad)
cmp
rcr
pop
(bad)
jmp
add
repnz
into
cli
call
mov
mov
dec
cmp
test
lods
sbb
shl
popf
mov
lds
cdq
and
(bad)
out
inc
jl
je
inc
mov
add
ja
lahf
add
push
add
or
outs
adc
mov
jbe
int3
mov
push
int
outs
call
ds
mov
mov
scas
(bad)
jl
dec
pop
mov
(bad)
xchg
sub
cli
pop
jnp
fs
sbb
or
sbb
or
iret
retf
mov
rcr
(bad)
aad
adc
lods
dec
pusha
cwde
out
xchg
cmp
and
pop
jb
inc
xor
xchg
in
arpl
dec
inc
retf
xor
out
scas
mul
adc
push
je
jg
cwde
add
lahf
or
stos
into
push
dec
dec
aas
fdivp
inc
push
scas
dec
and
ss
imul
shr
sbb
aad
xchg
iret
lea
pop
xchg
sbb
cwde
xor
sub
out
xchg
dec
add
sbb
(bad)
clc
ins
popf
push
adc
push
das
push
mov
into
je
jne
rcr
add
adc
fadd
fisub
push
and
bnd
aad
mov
(bad)
ss
bound
mov
jecxz
mov
mov
hlt
adc
jge
sbb
push
ja
sar
cld
or
add
ja
stc
jge
or
hlt
jmp
repz
mov
and
jns
push
ins
cmp
data16
mov
xchg
sub
movs
and
mov
shr
xor
inc
jns
hlt
xchg
cmp
mul
shl
std
and
retf
sbb
cmp
sub
(bad)
enter
dec
cmp
retf
xor
jmp
scas
xlat
mov
test
scas
mov
lods
dec
pop
ror
retf
sub
xchg
cmps
arpl
add
mov
cmps
mov
call
movs
add
in
stos
jns
ror
adc
stos
out
loope
push
xor
stos
shl
leave
shl
or
mov
jmp
(bad)
and
pop
mov
icebp
add
int
sti
cld
add
xchg
sbb
idiv
sahf
call
dec
mov
in
imul
sub
ficomp
push
inc
movs
inc
cmps
test
or
cmp
and
dec
inc
mov
pusha
clc
dec
pop
adc
mov
mov
in
ins
std
fcmovnu
int
rcr
test
inc
jo
push
(bad)
xor
fbstp
loop
jno
(bad)
push
outs
js
ds
xor
or
shl
mov
or
aam
jge
pushf
call
mov
fnstsw
add
pop
jns
push
push
mov
out
lods
pop
adc
lock
and
lds
call
sub
xchg
dec
test
jmp
cmps
(bad)
dec
xlat
xchg
ins
iret
xchg
push
mov
retf
sub
cmp
mov
adc
fwait
out
leave
movs
adc
mov
dec
pop
mov
fs
sub
mov
dec
adc
ffreep
in
cmps
add
enter
sub
ja
sub
loop
inc
bound
inc
jbe
and
and
mov
mov
dec
ja
push
inc
fs
inc
sub
sti
or
push
cld
pop
push
xchg
sbb
je
mov
imul
adc
add
scas
mov
adc
adc
aam
fst
xor
mov
out
test
mov
jp
mov
mov
push
(bad)
rol
je
scas
nop
jp
cwde
inc
(bad)
imul
mov
xchg
dec
xor
mov
iret
or
or
shl
pushf
push
mov
jns
(bad)
pop
xor
xor
xchg
into
jmp
cmps
icebp
add
dec
or
cld
xlat
adc
daa
push
xor
push
jle
pop
inc
sbb
jb
add
xchg
and
pop
ret
repz
cmps
jg
(bad)
sbb
add
mov
in
adc
enter
xlat
xor
in
loope
leave
push
add
jbe
jbe
mov
(bad)
push
aas
push
fmul
xor
or
das
inc
cmp
or
(bad)
sub
push
dec
or
in
iret
or
stos
shl
add
inc
mov
pusha
movs
mov
fisub
dec
push
shl
repz
movs
sbb
test
sub
fcmovnu
into
sbb
jp
and
ds
mov
push
inc
sbb
push
and
inc
inc
inc
mov
mov
dec
rol
xchg
add
arpl
inc
pop
jno
cmove
sub
arpl
(bad)
imul
test
push
mov
push
outs
and
dec
test
ja
js
(bad)
stos
sub
lods
and
out
push
loopne
sub
pop
xchg
out
std
and
mov
mov
sub
fdiv
sbb
sbb
mov
mov
xlat
mov
shl
fucomp
test
push
out
xchg
jb
pop
lods
xor
sbb
mov
mov
push
lahf
and
add
cmp
pushf
rcl
push
add
mov
cdq
xlat
clc
adc
in
inc
pop
and
ins
pop
sbb
mov
scas
mov
pop
jae
xlat
mov
mov
nop
adc
retf
gs
dec
inc
sahf
ret
icebp
pop
sub
cmp
dec
inc
xor
or
push
add
and
and
mov
mov
outs
jmp
fwait
dec
ret
lds
fisub
mov
or
inc
ins
repnz
je
call
mov
and
inc
int
loope
ins
pushf
addr16
sbb
and
or
jnp
pusha
mov
out
mov
adc
(bad)
(bad)
fs
repnz
dec
fmul
loop
and
enter
or
fistp
dec
shl
(bad)
jnp
mov
sub
pop
adc
jecxz
pusha
das
mov
ret
pop
push
dec
add
into
ds
push
sar
ret
mov
pop
push
int
cmps
(bad)
xor
rcl
cs
inc
push
cmp
mov
sbb
stc
jae
inc
retf
pop
or
ds
ja
sub
pop
add
or
out
(bad)
lahf
push
pop
pop
je
xlat
daa
ins
sbb
rcl
sbb
into
imul
retf
jne
enter
push
idiv
jl
adc
scas
pop
sub
shl
add
pop
adc
xor
push
mov
or
pop
cmp
in
(bad)
xchg
daa
pushf
push
sti
sub
cdq
mov
ins
sbb
in
mov
and
ins
xor
fld
xor
clc
repnz
sbb
xor
fdivr
jnp
pop
dec
retf
repz
jnp
and
and
jecxz
sbb
mov
call
rcl
stos
ret
xchg
call
sbb
adc
xor
fstp
sbb
sub
inc
(bad)
mov
dec
daa
xchg
jno
inc
aad
retf
adc
sub
cwde
dec
pop
sti
inc
xchg
push
add
mov
cmp
adc
push
arpl
push
es
xor
push
shl
jae
xchg
inc
jnp
sbb
or
cmp
imul
push
lock
fmul
add
mov
jns
pop
mov
or
scas
xor
jne
call
xor
adc
ds
sbb
and
sbb
inc
(bad)
idiv
push
dec
loope
jmp
imul
jmp
(bad)
cld
mov
sbb
ror
push
jge
pop
push
lock
mov
xchg
ror
adc
sbb
jg
push
jo
sub
adc
mov
daa
pop
adc
jmp
or
xor
lods
ss
mov
and
(bad)
pop
imul
dec
test
pop
ins
pop
ret
lds
inc
ret
mov
xchg
sub
shl
pop
es
mov
sub
xor
or
or
sbb
iret
cwde
daa
push
scas
call
jecxz
lods
push
int3
mov
pop
scas
fsubrp
hlt
and
in
mov
addr16
or
jmp
cmp
push
mov
das
push
scas
cmp
cmps
add
cmc
sbb
aaa
jne
xchg
in
popa
pop
fisubr
daa
push
cwde
inc
fnstenv
js
dec
xchg
push
mov
jne
pop
cmp
ret
scas
jno
in
adc
push
mov
mov
sbb
ret
test
outs
jg
mov
loop
cmc
xor
stos
(bad)
vshufps
and
jns
sub
movs
cmps
sbb
outs
push
add
xor
dec
mov
jmp
call
leave
cli
outs
inc
and
imul
jae
inc
fs
pop
repnz
fimul
sbb
jmp
call
pop
(bad)
xchg
cmp
and
push
shl
div
sub
inc
iret
clc
mov
andps
adc
(bad)
idiv
ret
sub
jg
xlat
inc
(bad)
test
jl
nop
je
mov
in
mov
mov
push
stc
jle
inc
lock
test
sti
mov
pop
lahf
lea
xor
inc
loopne
imul
stos
shr
lds
retf
mov
sbb
in
add
mov
pop
dec
mov
dec
jmp
and
fwait
lahf
(bad)
int
test
call
dec
in
push
outs
pop
jnp
aaa
pop
repnz
fsub
mov
dec
paddw
adc
sbb
fmul
adc
(bad)
xor
(bad)
cdq
jge
sub
inc
mov
fstp
(bad)
mov
add
ins
push
sbb
pop
and
push
je
into
neg
xor
pushf
pop
cmp
pop
iret
cmp
nop
(bad)
gs
dec
push
sar
scas
cmp
and
jns
cmc
fistp
inc
dec
and
aas
inc
test
(bad)
out
xor
xchg
mov
lds
outs
cmp
in
inc
and
dec
dec
movs
rcl
xchg
mov
and
mov
sub
sbb
fsubr
pop
test
ins
frstor
aas
sar
lock
ror
dec
lea
mov
or
leave
in
test
inc
cmps
push
jo
push
jb
fimul
pop
fs
mov
mov
add
shl
push
retf
test
or
dec
push
pop
scas
(bad)
ins
cs
push
sub
mov
cmp
rol
pop
shl
sti
add
mov
mov
shr
mov
nop
mov
sub
push
dec
mov
jecxz
int3
mov
pop
push
and
in
sub
mov
addr16
xchg
lahf
stc
(bad)
gs
not
inc
mov
cmps
scas
xchg
pop
dec
add
cmps
(bad)
jecxz
or
xchg
lds
stc
and
pop
jp
xor
aaa
mov
shl
out
cld
jne
and
or
cld
rcr
inc
ja
and
xchg
xchg
(bad)
inc
xchg
div
cmove
push
mov
lds
call
jo
add
mov
rcr
into
jno
lods
mov
pop
mov
sub
xor
lds
cmp
sub
sbb
icebp
xchg
call
xchg
es
inc
(bad)
xchg
bound
inc
mov
or
sahf
(bad)
lahf
inc
xchg
adc
aaa
push
sbb
lahf
repnz
mov
jbe
xor
cwde
aaa
sar
icebp
xchg
mov
inc
stos
jb
outs
jo
pop
mov
xor
aad
sub
add
add
fidivr
clc
icebp
arpl
cwde
mov
mov
cs
mov
inc
adc
xlat
or
pop
adc
jp
xor
ror
aas
cld
push
push
addr16
icebp
jb
sbb
sbb
cli
stc
mov
xchg
lock
xor
mov
cmps
sti
mov
sub
fld
sbb
xor
aad
inc
sbb
mov
stos
jge
(bad)
ins
add
xchg
xlat
cmps
ror
xchg
push
(bad)
ret
sahf
lods
pop
arpl
pushf
mov
push
and
or
icebp
ror
pop
inc
adc
or
sbb
xor
scas
popf
fld
jecxz
sub
leave
push
movs
jno
sub
inc
pop
in
and
jmp
xchg
push
or
or
dec
pusha
sar
jmp
sbb
in
pop
(bad)
sub
jl
or
cmps
adc
outs
pop
mov
daa
mov
pop
push
and
clc
(bad)
cmps
inc
and
mov
bound
and
call
cmp
push
daa
idiv
loope
mov
inc
addr16
sub
scas
or
push
daa
(bad)
leave
jno
inc
sub
dec
adc
sbb
paddq
jns
sbb
mov
or
(bad)
fimul
xor
loop
imul
fcmovnbe
pop
push
pop
or
movs
das
cs
sbb
ins
sbb
xchg
cld
push
mov
pop
adc
test
mov
or
fidiv
call
sub
jg
jb
lock
mov
xchg
repnz
inc
retf
(bad)
cmp
je
jecxz
nop
inc
cmc
cmp
cs
xchg
xor
hlt
add
clc
iret
jecxz
test
adc
popf
cmp
imul
popa
and
call
cmc
sbb
cmp
popa
shl
addr16
(bad)
xchg
mov
push
xor
xchg
dec
and
push
clc
leave
pop
adc
in
mov
movsx
mov
ins
jno
inc
imul
jnp
add
or
and
mov
cmp
in
dec
or
sub
call
mov
lock
xor
test
out
and
fcomp
scas
mov
movs
and
cld
sbb
mov
sub
(bad)
les
sbb
out
stc
fwait
add
ins
jb
mul
xor
pop
push
jo
cmp
pop
call
test
mov
pop
mov
popa
pop
or
pop
push
ins
jno
cli
jns
rcl
repnz
mov
stos
lock
ss
fwait
call
loop
mov
cli
mov
gs
int3
dec
aad
scas
cmp
div
and
mov
dec
jbe
es
ret
jbe
and
inc
in
jp
sub
loopne
mov
lods
ja
mov
mov
jae
push
xor
jb
int3
clc
and
das
fsubr
shr
test
add
shr
fs
or
fcom
jno
fmul
cmp
fild
outs
icebp
push
adc
pop
shl
movs
sbb
cwde
xchg
dec
push
sub
and
jmp
cmp
std
jbe
loope
xchg
aaa
aam
popa
int
cmps
cmp
mov
adc
and
pop
cmp
inc
xchg
imul
and
enter
mov
sub
inc
sbb
dec
gs
xchg
lock
mov
or
ja
jo
jp
mov
or
push
mov
in
xchg
pop
adc
(bad)
(bad)
jmp
out
push
mov
inc
out
cli
scas
or
dec
pushf
test
es
mov
xchg
add
push
ins
xchg
xchg
or
inc
aad
push
cmps
or
cdq
push
jle
lock
jecxz
jmp
and
fbstp
imul
pop
icebp
shl
ja
inc
lods
fnsave
ja
jne
fistp
ret
out
std
in
arpl
scas
das
inc
lea
cli
(bad)
fcmovnb
mov
push
jne
inc
popf
gs
cmp
xor
nop
mov
mov
sub
push
mov
inc
push
(bad)
retf
dec
adc
and
lods
fcmovnb
cwde
xchg
cmp
fisub
xchg
xor
call
aad
inc
aaa
test
inc
add
ins
test
pop
stc
sub
cli
mov
mov
in
or
jmp
push
(bad)
aam
jnp
cmp
jae
push
mov
cmp
mov
outs
dec
mov
dec
lock
mov
pop
push
mov
popf
xor
dec
lahf
push
sub
lods
mov
gs
push
scas
or
dec
sub
jmp
ins
and
sub
int
stc
add
in
add
in
gs
sbb
jmp
sbb
cmps
lea
jl
mov
xor
xchg
xor
xor
mov
in
push
mov
push
stos
cmp
sbb
test
ins
cmp
jle
jg
and
dec
jae
stc
popa
sbb
mov
test
push
cwde
or
pusha
push
lds
(bad)
xor
js
cmps
scas
test
add
icebp
sub
out
pusha
jmp
mov
rcl
inc
fmul
xchg
inc
es
mov
sub
in
mov
repz
les
mov
dec
test
(bad)
loopne
cmc
adc
daa
push
test
leave
or
sbb
arpl
les
inc
sub
dec
and
inc
adc
loope
cmc
and
cmc
dec
pop
(bad)
lods
in
inc
add
and
scas
push
mov
shr
ja
out
scas
cmp
out
loopne
lods
inc
sub
inc
out
add
scas
repnz
std
imul
cli
sbb
push
dec
inc
fs
outs
add
inc
fdivr
imul
lahf
dec
cmc
xor
or
ret
lds
(bad)
inc
adc
xor
fistp
jno
inc
cmp
cmp
sahf
movs
xor
movs
push
retf
loop
fcom
in
mov
adc
sub
xchg
dec
dec
jg
(bad)
loope
movs
push
jp
mov
fwait
(bad)
leave
jg
jmp
stc
mov
mov
adc
or
cmp
push
xchg
jbe
xor
sub
pop
test
xchg
jae
cmp
sub
aad
loopne
gs
or
push
movs
and
mov
inc
fst
jns
cwde
jno
ret
iret
and
add
sbb
cmps
xchg
cwde
stos
jp
fmul
iret
jp
aad
fwait
and
jle
adc
push
mov
and
mov
or
mov
inc
xchg
pop
aam
push
cs
jl
push
cmp
jb
cdq
cld
sbb
push
shl
pop
xchg
std
pop
inc
aaa
add
test
fnsave
push
push
retf
rol
loope
mov
jmp
mov
mov
call
xchg
xchg
cdq
jp
fxch
call
ins
jnp
frstor
(bad)
mov
ja
inc
movs
dec
cdq
test
daa
jo
jne
push
mov
rol
add
int3
rcr
or
jno
pop
mov
js
shl
push
jmp
test
jb
(bad)
mov
pop
aas
inc
je
jns
pop
push
adc
jne
int
pop
xchg
fsub
les
scas
aad
sbb
stos
test
add
mov
(bad)
outs
shl
push
fs
fisub
lds
ret
pop
leave
aad
mov
fwait
mov
xor
imul
shl
lods
mov
retf
clc
push
(bad)
mov
lock
sbb
sbb
and
xchg
cmp
je
mov
outs
outs
mov
or
in
fsub
jle
inc
mov
sub
mov
fbld
xchg
push
leave
in
adc
dec
add
and
cmps
mov
gs
mov
fiadd
cmc
into
repnz
jl
cmp
cmp
retf
cli
pop
(bad)
and
jb
dec
mov
(bad)
jne
adc
retf
lock
mov
sub
movs
add
les
or
jae
ror
inc
lahf
fwait
sahf
cld
sub
loope
inc
fisub
xchg
pop
mov
sbb
cmp
jns
xor
sbb
mov
test
in
and
mov
or
pop
jge
jg
(bad)
cmp
and
push
out
pushf
and
inc
dec
jnp
xchg
and
mov
ds
pushf
dec
stc
fisub
cmp
(bad)
xchg
mov
jg
(bad)
mov
jge
daa
mov
sbb
out
ins
daa
pop
mov
enter
mov
daa
es
mov
call
sahf
imul
test
int
das
popa
retf
cwde
jae
inc
lods
mov
push
sbb
sub
cmp
fwait
and
(bad)
push
sub
pop
cmp
mov
mov
call
mov
mov
mov
call
adc
test
xor
outs
lock
jno
inc
mov
dec
inc
inc
shr
add
in
adc
jne
out
jno
(bad)
mov
push
popf
push
xchg
dec
jp
imul
xchg
movs
inc
dec
stos
xor
dec
outs
mov
in
xlat
or
inc
pop
add
fisub
mov
(bad)
sahf
imul
ds
popa
mov
pushf
push
xchg
call
cmp
fnsave
es
lahf
push
out
ss
mov
call
and
pop
inc
xor
movs
dec
push
pushf
jmp
fimul
lods
popf
sub
lock
mov
rol
sub
test
(bad)
add
sahf
mov
les
stos
pop
mov
pop
mov
and
rcl
xchg
ja
jl
cmc
repnz
mov
push
xchg
jmp
xor
lea
fnstsw
sub
pushf
push
lds
sbb
mov
iret
pop
mov
shl
int
adc
pop
mov
xchg
push
and
jmp
es
loope
pop
xchg
stos
es
jl
mov
mov
rol
dec
test
sbb
(bad)
repnz
leave
fwait
xchg
stc
addr16
(bad)
repnz
fmul
ret
sbb
ins
fcomp
daa
and
cmp
sbb
sbb
jns
cld
push
mov
mov
jmp
mov
xchg
js
ja
jo
shl
out
and
mov
xchg
sub
pop
jg
inc
fistp
leave
xor
(bad)
push
nop
mov
into
xchg
sub
add
(bad)
scas
jae
aas
scas
outs
sub
and
int3
cmp
aad
or
call
dec
(bad)
mov
rcl
mov
idiv
lock
call
aas
or
hlt
inc
or
add
rcl
sbb
fdiv
daa
jp
ror
adc
mov
push
or
mov
lods
aas
or
or
out
or
mov
sub
jle
pushf
push
hlt
gs
jno
adc
(bad)
mov
nop
pop
sahf
aad
movs
or
sub
int3
jae
xlat
fs
xor
ja
shl
enter
repnz
fdiv
adc
retf
jmp
not
mov
fstp
sbb
push
lahf
int3
imul
cwde
clc
jnp
lahf
push
lds
sbb
push
jmp
xor
pop
adc
pop
mov
add
adc
push
adc
push
jb
cwde
nop
(bad)
jl
jmp
lahf
ret
xchg
mov
out
push
sbb
out
(bad)
xor
inc
dec
xchg
mov
test
xchg
mov
xchg
jg
pop
jmp
cmc
jb
data16
mov
adc
push
push
in
pop
leave
xchg
jae
mov
mov
mov
pop
(bad)
cmp
js
sbb
cmc
mov
xchg
jecxz
adc
dec
ret
dec
push
mov
cmp
xchg
xchg
out
fadd
jmp
cmp
lods
push
mov
fdiv
arpl
inc
pop
les
scas
repz
lock
jl
gs
pop
add
mov
cmp
jo
fdiv
int
rcl
pushf
out
fimul
int3
adc
cdq
jno
add
and
push
push
adc
pop
js
nop
(bad)
push
cdq
mov
popa
mov
pop
push
sbb
lahf
rol
mov
mov
mov
popa
cmp
(bad)
xor
(bad)
loopne
leave
movs
rol
outs
outs
stos
repnz
mov
dec
fdiv
clc
push
push
imul
in
cmp
popa
call
push
fbstp
cdq
jle
and
cmp
fld
(bad)
cmp
mov
(bad)
and
adc
dec
mov
movs
enter
cld
xchg
sti
(bad)
mov
movs
cmp
and
pop
jecxz
daa
shl
lods
sub
mov
call
scas
call
push
push
xchg
cmp
scas
or
sub
mov
pop
int3
jp
aas
cld
ins
(bad)
jmp
retf
jo
aad
lods
inc
jbe
lahf
lahf
adc
or
jae
das
out
retf
push
out
or
into
outs
into
(bad)
bts
clc
sbb
call
sub
mov
add
and
pop
cmp
push
(bad)
hlt
pop
outs
fdiv
in
nop
pusha
and
jge
xor
mov
cvtdq2ps
push
mov
or
int
dec
push
mov
fcom
or
stc
inc
jmp
test
rcr
xchg
stc
aaa
int
sub
or
add
pmullw
out
iret
mov
sbb
in
jmp
sub
inc
inc
pop
outs
pop
mov
stos
imul
push
xlat
mov
cmp
dec
cmps
add
mov
gs
pushf
rol
push
mov
and
and
outs
in
(bad)
ins
jge
retf
lock
in
xchg
ret
sbb
mov
fwait
xchg
mov
xor
jmp
xchg
lock
mov
adc
retf
jmp
add
xor
arpl
dec
out
loopne
xchg
bound
enter
pop
cmps
popa
jnp
scas
dec
fwait
bsr
into
xchg
into
mov
cmps
mov
mov
mov
pop
and
xor
mov
inc
fs
icebp
jne
stos
popa
and
lea
push
arpl
test
mov
std
pop
aas
(bad)
lods
enter
iret
and
in
xchg
loop
inc
inc
xchg
dec
sbb
xor
imul
and
sahf
add
out
push
sub
xchg
ss
sbb
mov
adc
xor
xchg
push
lahf
(bad)
lods
add
popa
call
inc
(bad)
sub
sbb
shr
fnstsw
mov
scas
xchg
ins
xchg
js
retf
aaa
cmp
mov
sbb
scas
test
adc
dec
sbb
std
push
or
ret
push
sbb
dec
mov
(bad)
(bad)
ficomp
pushf
xchg
adc
push
fmulp
nop
scas
pop
(bad)
(bad)
and
in
or
cmp
shl
jbe
xor
(bad)
les
mov
bound
inc
fdiv
(bad)
mov
jno
mov
add
in
test
inc
aaa
jecxz
sub
(bad)
lds
in
ret
scas
enter
lea
test
aaa
fs
lods
inc
cli
add
dec
in
pop
test
jle
nop
or
dec
outs
dec
imul
jo
icebp
pop
aas
addr16
add
scas
movs
mov
xchg
pusha
mov
xor
jbe
rcl
cmp
sub
movs
sbb
lock
cmps
xlat
fst
dec
dec
adc
movs
enter
scas
arpl
mov
addr16
sub
test
xchg
sbb
sbb
cwde
mov
shr
or
test
mov
push
aad
or
sub
js
stos
xchg
or
pop
jb
inc
test
lods
mov
retf
call
cwde
test
(bad)
popa
shl
(bad)
loop
push
push
add
mov
hlt
test
mov
jg
lea
test
push
sub
pushf
lahf
fptan
jno
mov
ret
xchg
test
and
(bad)
(bad)
pop
adc
push
dec
rol
cwde
out
pop
(bad)
and
les
lods
les
push
jl
outs
cmp
add
xor
loop
xchg
dec
stos
or
call
dec
or
jae
enter
cmps
mov
push
aaa
mov
sbb
ins
stos
jmp
(bad)
fimul
in
ja
xchg
call
leave
jecxz
call
mov
xchg
fld
int
aam
push
mov
cld
aad
in
(bad)
aas
cmp
or
dec
clc
inc
daa
pusha
or
into
xor
ret
jecxz
outs
test
es
sub
xor
push
push
cmps
sub
mov
pop
inc
out
xor
xor
adc
push
dec
add
jle
retf
inc
imul
sbb
dec
fidivr
add
repnz
mov
jns
fs
cmp
and
jnp
outs
aam
lahf
and
test
ss
cmp
xor
mov
sub
cmp
(bad)
addr16
cmp
sub
pop
or
xchg
mov
pusha
xor
jne
jmp
aam
inc
mov
pop
xchg
xchg
jno
mov
push
pop
mov
jle
xor
cli
shr
in
mov
lods
cmp
ins
sub
mov
xchg
pop
shl
fbstp
loope
retf
or
jno
xor
mov
out
or
xchg
out
fisubr
ret
outs
or
add
jno
dec
rcl
scas
pusha
mov
call
mov
push
xor
fcom
mov
in
xchg
sbb
das
push
aad
mov
mov
dec
sbb
loop
xor
nop
mov
add
lods
adc
jmp
push
pop
jecxz
push
mov
and
(bad)
das
fcom
test
jl
cli
cmp
jae
aas
pop
inc
sub
outs
inc
and
lea
xor
push
and
xor
mov
iret
pop
dec
or
fcomp
call
pushf
push
lods
dec
jecxz
jno
inc
nop
inc
dec
cmp
ret
pusha
stos
jns
pop
(bad)
cmp
sub
sub
sti
lods
mov
mov
aaa
pop
les
cli
xor
inc
cld
loopne
fcomip
fwait
ret
enter
mov
cmp
daa
xchg
add
imul
xor
outs
call
pop
add
jge
xchg
adc
hlt
loop
scas
adc
jecxz
cmp
xor
push
add
sbb
sub
aad
inc
js
popa
mov
xchg
push
test
(bad)
push
fmul
or
nop
adc
mov
dec
add
sub
and
test
mov
xchg
(bad)
das
jg
push
loope
cmp
out
aas
mov
fst
and
add
cmp
sub
mov
inc
pop
mov
cmp
lock
and
and
idiv
ret
rol
sbb
xchg
pop
jns
aad
pop
test
jns
mov
push
ret
cmps
jmp
scas
adc
jae
ds
cmp
or
pop
sub
jbe
pop
cwde
sahf
and
sbb
adc
shl
push
mov
adc
and
ins
push
jge
add
popa
das
and
sahf
cdq
pop
mov
inc
nop
out
in
test
mov
mov
inc
repnz
xor
mov
mov
int
mov
scas
add
int
inc
out
cmps
jmp
dec
test
sbb
inc
in
inc
test
dec
imul
test
lods
mov
mov
call
les
or
and
sti
aad
mov
mov
cmp
push
dec
in
mov
jne
jbe
leave
pop
push
mov
fsubr
cs
fld
enter
std
push
push
out
dec
pop
fsubr
repz
test
xchg
add
int3
xor
mov
retf
xor
push
mov
iret
push
iret
push
jecxz
repnz
lea
scas
sahf
sbb
add
push
mov
adc
mov
mov
cs
loope
icebp
dec
outs
les
les
dec
ja
push
call
xchg
aam
pop
(bad)
jle
dec
ror
or
arpl
sub
pop
xchg
addr16
pop
je
cmp
ins
inc
in
mov
gs
pushf
pop
or
fmul
sti
shr
jmp
sbb
inc
call
inc
leave
adc
cmps
aas
sub
or
push
jb
out
lahf
aaa
scas
mov
je
cli
or
inc
and
es
cmp
cmps
cmp
add
dec
loopne
push
jns
push
jb
movs
repnz
and
mov
std
pusha
cmpps
mov
push
sbb
ds
adc
xor
je
iret
mov
xchg
or
dec
aas
and
mov
scas
div
pop
push
jo
push
push
fiadd
das
out
jge
test
mov
sbb
xor
xchg
mov
mul
enter
or
in
jne
mov
in
fldcw
inc
or
adc
sbb
loop
push
mov
push
or
out
xchg
ficomp
int3
sbb
cmp
add
pushf
jo
ins
xchg
psubb
cmp
fsub
and
sahf
jns
xor
push
jge
test
jp
xor
jmp
pop
test
in
mov
outs
movs
pusha
push
mov
cs
add
test
inc
mov
or
mov
xchg
add
jno
push
data16
xchg
loop
mov
repz
adc
jmp
mov
(bad)
mov
shl
add
out
fnstsw
not
fstp
and
and
sbb
mov
bound
pop
xchg
cmc
pop
sahf
xor
jb
mov
sbb
(bad)
pop
out
xchg
icebp
movs
out
push
loop
mov
jne
xchg
pop
mov
jmp
push
jno
fs
jmp
dec
cmp
cdq
sub
mov
ja
cmp
nop
and
xor
fcmovu
out
or
in
movs
mov
loope
sub
fstp
jmp
push
xor
inc
enter
and
or
mov
xchg
repz
out
fmul
out
test
(bad)
in
xchg
test
test
mov
xchg
jno
outs
cmc
or
jb
push
cmp
mov
in
ins
sub
jbe
sbb
pop
aam
movs
test
and
repz
std
pushf
shr
xchg
mov
jmp
fbld
cs
loop
xchg
ret
imul
std
(bad)
sub
xor
stc
cdq
cmp
jg
(bad)
pcmpgtb
inc
rcl
jne
idiv
sahf
sbb
in
pushf
imul
push
mov
mov
jecxz
loopne
pop
repz
cmps
xchg
test
push
scas
dec
enter
gs
sar
imul
or
inc
addr16
pop
cs
mov
aam
mov
les
sbb
stos
push
xchg
cmps
sub
push
lods
scas
rol
or
stc
je
mov
pop
popf
pop
inc
fcom
sbb
jp
lods
(bad)
rol
hlt
cli
dec
cmp
xchg
cmps
jle
mov
test
xor
mov
fild
shr
mov
adc
inc
sahf
aad
jbe
stos
mov
(bad)
xor
leave
or
mov
fdivp
adc
cmp
inc
inc
push
inc
popa
add
hlt
movs
xchg
adc
cli
in
bound
xchg
pop
cdq
dec
push
mov
inc
cmp
pop
popf
pextrw
push
fs
call
mov
out
test
mov
aas
rol
ss
or
lahf
adc
cwde
mov
mov
nop
outs
shl
and
addr16
rcl
hlt
out
jo
retf
lods
xchg
inc
sbb
xchg
pop
inc
test
push
sub
ret
addr16
xor
shl
cwde
and
ficom
cmp
inc
adc
sti
sbb
jno
jb
pop
pop
fisub
mul
ret
imul
fwait
das
adc
adc
dec
sub
test
ds
js
int
mov
mov
sub
xchg
mov
ja
mov
push
inc
mov
inc
push
adc
call
fidiv
mov
xchg
and
dec
push
cs
xchg
or
xor
adc
ret
jbe
cwde
out
int3
mov
stos
out
xor
mov
pop
in
imul
push
sbb
cwde
test
and
adc
imul
inc
repnz
sub
or
add
jbe
and
nop
or
sub
sbb
add
add
loop
cwde
push
inc
mov
popa
icebp
out
pop
mov
in
cld
jle
repz
or
aas
jg
xchg
test
cmp
jmp
or
das
push
xchg
sub
cwde
aam
mov
div
(bad)
cmovns
jne
or
idiv
push
push
cmp
xlat
popf
pop
jecxz
call
std
pusha
rcr
jae
jno
inc
xchg
xchg
mov
sub
arpl
dec
fs
xchg
aaa
jnp
cmp
ss
(bad)
retf
jge
xor
shr
fidiv
mov
sub
pusha
sbb
lahf
pop
pop
push
call
adc
mov
mov
clc
mov
call
push
ins
xchg
add
mov
and
add
sub
cmp
cmp
retf
(bad)
pushf
pop
xchg
push
cmp
mov
fdiv
mov
push
cmp
cmp
lahf
jge
push
out
jbe
mov
cmp
aam
add
cbw
stos
mov
dec
aaa
pop
jl
sbb
mov
fs
jg
inc
shl
aas
pop
or
fucomp
cmp
in
int3
and
sbb
xchg
sub
push
pop
fucomi
hlt
fnstcw
or
xor
cmp
inc
cld
jp
test
sbb
push
fdivr
neg
jp
mov
dec
mov
ins
inc
sar
xchg
push
mov
data16
aaa
xchg
inc
ret
rcr
je
push
les
rcr
imul
hlt
(bad)
std
add
aad
retf
enter
jg
push
pop
push
mov
dec
(bad)
push
dec
lea
ret
mov
lea
pop
adc
jne
cli
(bad)
jne
xor
cmp
fstp
add
mov
mov
xor
xor
stos
dec
retf
mov
jp
sahf
std
adc
shl
fnsave
adc
arpl
outs
(bad)
sbb
loop
and
mov
sbb
push
cmp
mov
inc
mov
sbb
push
xlat
outs
shl
je
mov
out
jb
imul
push
xchg
jo
and
cmc
(bad)
or
jb
and
cmp
push
out
scas
inc
pop
cmc
mov
mov
or
pop
sub
fild
iret
mov
mov
fcmovbe
(bad)
cmp
(bad)
and
inc
bound
xchg
push
mov
jo
cmp
sbb
das
add
ror
mov
xor
call
adc
movs
jmp
int3
hlt
into
daa
enter
xchg
pop
push
jno
sbb
xchg
xlat
cmp
xchg
cdq
jecxz
(bad)
push
out
lock
not
dec
mov
ins
push
sti
inc
jp
dec
mov
pop
xchg
std
mov
imul
pop
out
lea
or
jp
xchg
inc
push
mov
mov
xchg
inc
shl
push
dec
in
inc
mov
jg
xor
inc
jecxz
cmp
sar
pop
jge
(bad)
inc
mov
dec
mov
stos
mul
mov
outs
gs
pop
add
and
jbe
jl
pop
mov
addr16
and
cdq
pop
inc
cmp
leave
cdq
add
push
aad
movs
mov
or
imul
mov
psubd
xor
push
into
fsubr
dec
pop
dec
pop
ds
sbb
ins
loop
jo
mov
sub
pop
xor
xor
or
jno
dec
mov
mov
xor
addr16
lahf
dec
adc
nop
ins
and
pop
aaa
dec
mov
fdivr
xor
ja
pop
es
mov
into
xor
and
adc
cmp
mov
fs
pop
and
out
dec
(bad)
movs
cli
sub
xor
lock
mov
mov
and
mov
mov
cmp
test
addr16
mov
div
test
jmp
inc
dec
out
stos
mov
mov
scas
fistp
mov
push
jmp
xchg
les
idiv
add
addr16
inc
mov
nop
loopne
pop
inc
sub
movs
lods
xor
sti
fld
or
mov
mov
repnz
xlat
mov
ret
jae
jno
iret
nop
add
pop
mov
test
pop
jge
sahf
ret
ins
mov
ds
mov
movs
fdivr
retf
dec
mov
dec
adc
stc
pop
test
mov
mov
and
mov
dec
pop
stc
fisub
or
push
adc
fidiv
or
sub
imul
mov
nop
repnz
cmc
jmp
out
data16
mov
clc
dec
shl
inc
push
mov
iret
push
nop
or
inc
sub
xchg
dec
scas
mov
pop
xlat
jnp
pop
pop
xchg
js
mov
pop
inc
mov
push
in
lods
rcr
call
fist
rcl
lahf
xchg
(bad)
dec
cmc
inc
sbb
inc
movs
xchg
cs
cmp
mov
out
(bad)
jl
out
rol
lds
daa
xor
pop
xchg
sahf
push
cmp
cwde
ret
sub
mov
push
pushf
loopne
jb
fsubr
xor
fwait
int3
repz
int3
pop
or
jmp
and
fstp
mov
mov
xchg
mov
mov
cmc
or
xor
es
mov
pop
inc
loop
jp
sbb
sub
outs
shr
xor
ficom
scas
cwde
mov
pop
fimul
int
mov
push
xchg
mov
and
imul
inc
(bad)
fild
mov
add
mov
(bad)
aad
out
cld
retf
(bad)
je
push
in
dec
or
and
jp
fucomip
fcom
dec
sub
pop
call
(bad)
out
addr16
iret
mov
adc
xchg
mov
cdq
jmp
inc
fadd
fs
mov
dec
pop
inc
in
fwait
sbb
cwde
adc
mov
repz
pop
les
jmp
mov
sub
mov
fdivrp
(bad)
xchg
shl
int
clc
je
sbb
inc
and
inc
sbb
xchg
dec
push
adc
mov
xchg
jle
or
cmp
xchg
add
test
pop
test
push
dec
cmc
push
sbb
retf
or
dec
or
push
rcl
out
scas
xchg
sub
dec
leave
fnstcw
push
pop
outs
push
scas
js
mov
pop
sbb
ficom
(bad)
icebp
mov
dec
cmp
jl
sbb
aad
aam
cmp
add
cwde
dec
xlat
jo
jns
jecxz
cmp
push
push
cs
add
add
jne
lods
das
stos
mov
ret
add
xchg
es
stos
outs
rol
loopne
sbb
fistp
stos
mov
ret
inc
cmps
push
jmp
jno
(bad)
addr16
jns
pop
dec
call
daa
pushf
rol
scas
adc
sbb
aaa
cli
jmp
daa
mov
mov
sbb
es
not
xor
sbb
int
push
fwait
icebp
aam
pusha
ja
movs
das
fstp
xor
sbb
nop
sub
(bad)
call
mov
imul
push
ja
fwait
mov
add
cmc
mov
int3
mov
lds
lds
jl
arpl
lds
mov
mov
in
sbb
sub
dec
daa
in
sti
xchg
dec
xlat
mov
ficomp
adc
pusha
xchg
jecxz
aas
cmp
jns
or
or
lahf
dec
push
mov
jae
dec
fisttp
adc
idiv
repz
jmp
sbb
retf
pop
(bad)
popf
add
xchg
gs
aam
adc
sbb
push
mov
lods
xor
jecxz
arpl
jg
les
cs
neg
xlat
add
call
jo
sbb
push
sbb
jnp
dec
lods
adc
loope
and
repz
addr16
pop
arpl
sbb
or
pop
into
sbb
jns
push
cmps
inc
(bad)
jnp
mov
mov
xor
leave
movs
sbb
pop
xor
fwait
ror
push
mov
inc
mov
xchg
fsub
cld
test
mov
mov
jne
addr16
cdq
movs
popa
xchg
dec
push
inc
je
daa
scas
ins
sbb
cmps
push
iret
(bad)
out
ret
cwde
shl
inc
xchg
mov
scas
fisubr
mov
mov
push
fsubr
add
adc
pop
sbb
pop
aad
rcr
mov
adc
or
retf
dec
inc
in
out
aam
or
push
mul
sbb
sti
mov
fbstp
pop
sbb
xchg
xor
dec
sub
fwait
jmp
test
setb
popa
inc
imul
pop
iret
pop
adc
pop
or
mov
mov
mov
ret
pop
ins
push
xchg
adc
add
pop
push
mov
test
mov
js
xor
cmps
inc
pop
and
jb
(bad)
inc
int3
in
in
adc
cs
pusha
xor
addr16
or
(bad)
popf
mov
pop
test
xchg
mov
xor
call
mov
dec
dec
cmps
shl
ds
test
push
call
aam
and
test
arpl
lock
sub
mov
mov
fiadd
push
mov
mov
pop
in
sbb
mov
xchg
and
ins
or
call
xchg
add
xor
cmp
lods
inc
pushf
xlat
cmp
mov
push
aaa
cmp
mov
pop
je
ret
ins
fsubr
fstp
mov
(bad)
sub
cmp
cmp
movs
xchg
push
and
inc
out
lods
ja
or
push
xchg
sbb
scas
(bad)
je
mov
xchg
add
(bad)
push
mov
lea
xchg
cmp
jle
in
cmp
fwait
mov
push
mov
imul
jmp
cmp
in
(bad)
xor
mov
out
fst
imul
test
jmp
fwait
cmp
add
dec
addr16
inc
pusha
mov
jae
mov
push
sub
pushf
sbb
push
outs
inc
adc
lods
popf
push
cmp
push
xchg
outs
inc
xchg
xchg
lods
sbb
call
in
push
mov
je
xchg
loop
dec
scas
in
sahf
daa
fsubr
(bad)
in
push
lsl
enter
aad
clc
nop
imul
dec
mov
mov
pop
jo
sub
xchg
add
push
xchg
daa
dec
sbb
enter
jmp
jge
jbe
or
outs
add
ds
mov
xchg
bswap
fwait
inc
aaa
add
push
les
and
jns
xchg
mov
fnstcw
popa
add
or
jmp
mov
aaa
inc
add
scas
or
(bad)
fldenv
lock
push
cmc
aaa
stos
sar
sbb
cmp
or
jp
fdiv
test
mov
outs
dec
mul
push
mov
imul
cmp
fwait
xchg
pop
sub
push
ficom
sbb
xor
mov
loope
hlt
jnp
mov
imul
push
shl
pop
in
dec
mov
dec
pop
in
nop
pop
leave
test
xchg
pop
loopne
inc
dec
cdq
adc
mov
retf
xchg
pop
or
sti
inc
or
in
imul
jmp
and
inc
ret
popa
das
mov
js
jae
cs
movs
or
(bad)
mov
mov
lahf
sbb
xor
cmp
push
es
mov
and
dec
std
xchg
outs
pop
xor
fcomp
inc
add
add
aaa
outs
out
imul
xchg
shl
cli
cmp
pop
xchg
cmp
clc
cmps
ret
pop
cmp
inc
pop
repz
icebp
out
add
mov
xchg
and
call
jge
cld
xor
into
lock
mov
mov
xchg
arpl
or
pop
stos
xor
and
(bad)
aaa
jmp
push
pop
pop
(bad)
push
dec
aaa
test
sub
aam
mov
jp
out
and
xor
or
xchg
mov
sbb
pop
outs
clc
push
rol
mov
mov
icebp
pop
loop
repz
stc
call
xchg
push
enter
cmp
add
lods
fs
retf
adc
jp
xor
adc
pop
ret
adc
jle
cld
lock
adc
popa
ins
pop
cmp
xchg
(bad)
fnstsw
daa
std
ins
test
or
add
mov
(bad)
fimul
sti
adc
mov
jl
add
(bad)
jbe
rcl
pop
por
fnstcw
inc
sbb
mov
inc
push
dec
adc
adc
addr16
loopne
sub
movs
jg
xchg
jbe
lock
mov
sbb
(bad)
fs
in
scas
cld
fs
inc
jl
jnp
push
addr16
xchg
lods
cmp
sub
jns
pusha
mov
push
jb
push
sar
pop
or
rcr
mov
mov
or
add
in
test
xchg
mov
or
pop
das
dec
adc
xor
inc
pop
pminsw
arpl
or
lock
jg
mov
jmp
mov
or
js
dec
in
into
push
push
push
dec
pop
fisttp
sbb
jl
cmps
xor
mov
mov
sbb
int3
setns
es
repnz
das
movs
data16
mov
add
sub
call
inc
gs
loope
stos
mov
pop
(bad)
xchg
add
(bad)
jae
xcrypt-ctr
cmps
pop
jno
mov
int3
idiv
imul
dec
sub
xchg
push
push
jle
mov
or
movs
add
and
xor
xchg
repz
push
shl
mul
js
jo
jecxz
jo
pop
fs
imul
mov
pop
shl
out
movs
adc
jp
fisubr
retf
sbb
pop
dec
cmc
(bad)
movs
cdq
nop
push
inc
mov
in
lahf
out
int
lds
jno
pop
sbb
std
sbb
test
fsub
inc
xchg
jg
adc
xchg
jbe
sbb
inc
cmc
adc
cs
jl
xchg
test
and
enter
inc
xor
jge
call
xchg
idiv
aam
mov
stc
sub
or
pusha
cs
ins
add
sbb
and
aas
sbb
aad
sub
xor
inc
or
pop
test
or
out
inc
and
xchg
std
xchg
push
dec
std
cld
lods
fisttp
test
xor
xor
add
push
dec
clc
std
adc
mov
mov
adc
fadd
dec
mov
call
sbb
sar
inc
xor
xchg
mov
jns
fidivr
bound
adc
cld
jnp
push
adc
dec
xchg
call
lahf
mov
jmp
mov
pop
nop
enter
clc
and
jg
adc
js
push
lahf
out
add
pop
cmp
adc
mov
inc
cmps
adc
aaa
int3
pop
push
and
xchg
cwde
fs
std
push
in
inc
fist
out
in
nop
fmul
sti
test
dec
jns
std
aam
ins
pop
mov
int
mov
ss
or
adc
and
jmp
mov
and
int
cmps
into
outs
cmps
jmp
shr
adc
inc
jge
sub
repnz
pop
mov
xor
sub
dec
push
sub
pop
cmp
aad
sbb
dec
nop
jp
fs
xchg
push
xor
xor
outs
mov
sbb
push
(bad)
mov
ins
sub
and
sbb
sbb
cmps
(bad)
mov
xor
add
daa
sub
fcomp
add
seta
aas
jns
fidiv
xor
in
dec
je
iret
pop
jle
scas
fld
xor
pop
enter
popf
lods
test
adc
ret
(bad)
lahf
jl
push
jmp
retf
and
pop
loop
jb
add
aad
shl
and
loope
jmp
mov
or
mov
sub
push
cwde
sar
inc
inc
or
sub
and
out
jmp
in
inc
push
jge
inc
xor
pop
pushf
push
aad
mov
cmp
popa
in
int3
cmp
aaa
test
dec
adc
jmp
adc
loop
cmp
arpl
jg
outs
push
cmc
cmps
mov
cmps
sub
iret
or
adc
inc
inc
mul
mov
repz
sti
repnz
push
adc
dec
adc
pop
repz
arpl
stos
jecxz
pop
jo
scas
mov
ins
ret
xchg
mov
aam
out
shl
pop
jmp
movs
inc
lods
bound
add
xchg
out
(bad)
loopne
test
jns
inc
jecxz
imul
dec
cld
sub
dec
in
adc
ret
ss
icebp
dec
sbb
rcr
stc
mov
dec
mov
jp
sub
sub
std
es
mov
cmp
stos
shr
add
pop
in
cmp
loop
leave
rcr
clc
add
shl
mov
cwde
and
or
cmc
mov
int
test
jmp
lock
mov
cli
xchg
add
shl
into
test
es
lea
mov
data16
jo
sbb
ret
sbb
lahf
pop
xchg
push
jg
inc
imul
dec
mov
xchg
pop
pop
fstp
retf
pop
jl
push
cs
sbb
mov
daa
imul
push
int
push
test
fndisi(8087
pop
jge
sub
fisttp
in
pop
xor
test
imul
sbb
imul
in
sub
retf
inc
stos
pop
cwde
scas
stc
jle
inc
scas
mov
jno
sbb
xchg
cmp
scas
xor
jno
or
sahf
pop
jno
iret
pop
stc
call
rcl
jno
rol
add
inc
cld
mov
xor
outs
adc
xchg
jnp
in
gs
in
retf
mov
pop
push
(bad)
push
push
int
fwait
xor
cmp
or
and
pop
mov
mov
cmp
call
aad
div
dec
bound
js
pusha
out
dec
div
push
das
xchg
leave
ror
mov
ficomp
daa
test
sub
dec
nop
call
mov
cwde
add
out
xor
jmp
ret
mov
ds
test
mov
xchg
popf
js
movhps
scas
lds
and
inc
cld
retw
mov
pop
scas
push
cs
fucomip
fmul
mov
mov
sub
sbb
addr16
xchg
mov
add
mov
dec
push
ss
cdq
add
mov
into
mul
dec
xchg
pop
loopne
jle
jp
pop
push
jbe
sti
out
sub
add
mov
sbb
dec
jmp
sub
out
vpcmpeqd
sbb
popf
(bad)
shl
pop
(bad)
mov
push
dec
xchg
adc
cwde
fdiv
test
or
mov
clc
rcr
retf
and
std
lahf
xlat
in
cmp
mov
mov
inc
cmp
aaa
sbb
fiadd
pop
data16
scas
int3
xchg
dec
lods
xchg
dec
in
and
(bad)
dec
sti
pop
ss
mov
pop
loope
stos
pop
icebp
movs
mov
pop
mov
bound
adc
test
jge
add
stos
jae
jecxz
jnp
sub
mov
outs
mov
jl
pop
ret
fcmovne
cmps
int3
addr16
mov
or
cmp
mov
stos
fistp
mov
adc
push
std
jns
dec
push
mov
test
popa
jbe
add
adc
iret
test
adc
cli
push
std
adc
call
adc
test
sub
cmp
xor
stos
ins
popa
and
sbb
cmps
push
adc
mov
retf
jne
adc
push
xchg
je
inc
and
push
inc
rcl
outs
jne
popa
and
jns
cmp
xchg
dec
leave
push
jmp
pop
repz
mov
sti
pop
or
lea
inc
repz
jmp
or
pop
mov
xor
mov
outs
lds
add
push
adc
imul
leave
dec
sar
(bad)
xor
shl
cmps
add
push
cmp
sar
test
retf
neg
sti
dec
neg
and
loopne
repz
sti
pop
push
inc
loop
(bad)
jmp
test
jle
lods
sub
fs
(bad)
mov
cmp
in
in
imul
inc
in
jp
add
ja
pop
cld
dec
out
xor
dec
sbb
fadd
lods
scas
cld
lock
mov
out
(bad)
int
icebp
cmp
xor
ret
dec
daa
jb
push
dec
push
lds
push
repnz
jl
js
imul
xlat
dec
in
push
jmp
mov
mov
hlt
push
imul
and
adc
dec
mov
fstp
mov
stos
sub
icebp
pop
test
mov
ffreep
and
into
test
mov
adc
mov
retf
add
div
mov
jo
jns
push
jecxz
push
mov
gs
sbb
iret
test
icebp
xchg
pop
jge
fadd
test
adc
xor
push
push
and
jmp
sub
scas
mov
cs
loopne
dec
rcl
ret
and
mov
cmp
xchg
stos
shrd
and
jge
dec
test
adc
xor
and
inc
and
stos
dec
jp
xchg
xchg
jns
in
sub
sub
std
jecxz
ds
jae
gs
out
dec
jmp
pop
popf
addr16
inc
nop
(bad)
stc
and
lock
addr16
sti
lods
mov
mov
in
inc
cmp
(bad)
(bad)
ja
mov
stc
jb
lods
out
pushf
call
xchg
mov
jo
setae
pop
xchg
(bad)
push
outs
mov
retf
and
sub
jmp
stos
pop
imul
pop
loop
pusha
inc
shl
mov
jo
dec
fimul
nop
les
mov
stos
jns
adc
sbb
or
or
out
jp
xchg
js
rol
call
adc
pop
inc
jle
cmp
fstp
mov
call
jp
movs
adc
or
dec
xchg
daa
pop
and
fmul
lods
sysexit
call
and
sbb
mov
ds
sbb
add
jmp
cmp
push
fcomip
popf
adc
xor
mov
(bad)
in
bound
js
sub
xchg
rcr
or
repnz
xlat
popf
jecxz
xchg
(bad)
adc
movs
pop
test
mov
push
mov
cmp
jne
adc
sbb
xchg
cdq
and
mov
jo
add
pop
xor
sub
loopne
mov
and
or
bound
mov
xor
pop
cmp
stc
dec
int
stos
(bad)
pop
mov
clc
xor
pop
aas
or
xchg
shl
out
pop
jg
fdivr
inc
hlt
xchg
(bad)
mov
movs
rcl
xor
in
xchg
jbe
xor
mov
nop
jb
dec
stos
stos
sbb
jecxz
repz
in
sbb
push
and
stos
outs
pusha
lock
inc
ja
dec
cmp
imul
cdq
loop
out
pop
jmp
sub
cmp
and
outs
stc
call
rcr
loop
pop
sub
hlt
hlt
ret
and
xchg
add
(bad)
icebp
sahf
push
jne
adc
out
mov
sub
or
adc
jg
inc
fucomi
ins
mov
aam
xchg
push
enter
or
mov
cmp
xlat
mov
je
sbb
aam
dec
xor
fadd
cmc
push
cmps
mov
fidiv
stos
sub
cli
js
bswap
retf
xlat
sub
add
mov
aad
adc
js
nop
stos
xchg
cli
push
jmp
scas
cmps
cwde
push
xor
sub
cli
shl
mov
xchg
jge
xor
inc
fist
outs
sbb
lods
xchg
aad
neg
mov
push
mov
xor
pusha
push
test
jl
fsubr
cld
aaa
hlt
bound
fnstcw
dec
cmp
adc
leave
or
aam
dec
push
jp
adc
enter
push
xor
pop
adc
fild
cmp
les
dec
jge
or
stos
sbb
lahf
sub
sbb
adc
inc
pop
out
sbb
adc
gs
addr16
sub
inc
sbb
jmp
pusha
xor
pusha
push
mul
aas
cmps
ret
push
cld
cmp
jb
dec
adc
pop
retf
push
mov
push
lods
hlt
in
test
xor
scas
fistp
mov
add
xchg
inc
aad
mov
imul
aad
ins
das
imul
push
pop
(bad)
stos
mov
in
stos
mov
cmp
(bad)
xor
pop
out
leave
adc
adc
imul
inc
iret
cmp
mov
arpl
jmp
rcl
popa
adc
cli
je
gs
sub
sbb
mov
jle
mov
fcom
out
mov
push
xchg
outs
mov
cli
and
scas
mov
inc
dec
dec
or
scas
pop
pop
push
(bad)
pop
fidiv
inc
cmp
cmc
dec
loopne
out
or
sbb
test
loope
xchg
xor
pop
or
push
push
daa
ror
aas
dec
cli
xor
daa
push
jne
and
hlt
lock
outs
(bad)
ins
not
stc
pop
cdq
test
std
imul
pop
and
enter
movs
adc
push
pop
(bad)
fcom
mov
mov
inc
imul
or
scas
add
sub
shl
fs
loopne
cli
test
jns
jmp
jns
xor
xor
cmp
lahf
test
jmp
ds
loop
push
retf
mov
cs
arpl
mov
in
mov
sbb
repz
inc
retf
pop
ret
pushf
aad
mov
jmp
xchg
cdq
inc
loopne
add
mov
adc
lods
xchg
ja
gs
jmp
jb
lods
sub
mov
pushf
inc
mov
sahf
fwait
nop
and
adc
fwait
push
mov
jmp
imul
in
je
cmps
call
inc
sub
dec
out
inc
or
mov
shl
stc
mov
mov
clc
xor
stc
(bad)
or
test
dec
pop
adc
jno
jae
mov
push
and
dec
pop
push
and
sbb
aaa
inc
push
sbb
sti
dec
jg
call
lea
aaa
(bad)
movs
sub
int3
xor
jo
sbb
dec
jg
pop
outs
popa
or
jmp
les
(bad)
cli
and
ds
mov
pop
into
jns
mov
call
push
add
mov
sub
cmp
pop
cwde
mov
mov
push
xchg
sahf
adc
test
xor
add
stc
std
push
jne
or
(bad)
lods
sub
jl
mov
jb
inc
es
out
jmp
sub
rcr
mov
jle
lds
pop
cld
mov
mov
mov
in
xor
mov
mov
xchg
inc
(bad)
and
jno
mov
or
fnstcw
in
loope
dec
xchg
or
retf
popa
or
cmp
add
jns
mov
dec
data16
inc
hlt
call
(bad)
add
push
xchg
movs
ins
jns
push
pop
stos
inc
xor
jae
jle
jo
jnp
jbe
imul
(bad)
push
gs
popa
push
push
xor
fstp
movs
ds
xchg
sbb
leave
repz
mov
mov
push
jle
sbb
inc
inc
mov
jle
push
(bad)
mov
je
xchg
inc
jne
jmp
sahf
push
xchg
sub
or
movs
add
fs
or
adc
repnz
movs
repz
rcr
ins
or
sbb
jbe
fistp
mov
sbb
sub
mov
sub
mov
cmp
adc
sub
aad
sar
xchg
inc
lods
test
pop
fdivr
cmp
(bad)
enterw
and
mov
pop
imul
add
dec
aam
imul
pop
jne
pop
jb
lds
test
push
aam
imul
ja
(bad)
jl
pop
cmp
test
jle
xchg
out
lahf
mov
out
xlat
jg
cmp
enter
shr
je
stos
xor
inc
cmp
cs
or
aad
(bad)
ror
xchg
or
sbb
cdq
rcl
inc
adc
sub
inc
mov
cmp
rol
pop
daa
jb
mov
push
cmp
and
jl
xchg
aas
bound
lahf
push
call
add
push
jno
inc
inc
push
dec
sub
mov
(bad)
jbe
adc
sub
scas
hlt
or
arpl
jg
push
call
cli
out
push
jg
dec
jl
sbb
xor
or
cmp
call
push
call
ss
(bad)
xlat
cs
fst
xchg
sbb
mov
mov
xchg
dec
out
mov
rol
xchg
push
push
into
fs
jae
dec
jnp
(bad)
iret
movs
cli
in
daa
dec
push
rep
mov
xlat
ror
mov
cmc
rcl
pop
retf
adc
out
cmc
cdq
jo
push
sub
mov
dec
mov
dec
sbb
jbe
adc
sbb
or
sub
(bad)
jnp
imul
shr
nop
push
ror
loope
pop
mov
sub
jnp
xchg
cli
xchg
ret
adc
loope
xlat
add
ret
les
mov
push
ins
cmp
xor
fnstsw
std
enter
fnstsw
clc
jo
scas
mov
mov
pop
sub
pusha
jnp
dec
mov
test
cmp
imul
inc
cmp
arpl
call
repz
push
and
and
cmps
dec
pop
xchg
js
mov
ror
adc
leave
je
arpl
inc
or
xor
test
and
pop
pop
lock
imul
pop
add
out
out
outs
adc
call
retf
pusha
sub
mov
cmc
mov
jnp
rcl
stos
mov
neg
cmps
call
xchg
es
lahf
adc
or
add
mov
xor
add
and
cmc
sbb
ja
cmp
ret
daa
xchg
push
mov
test
in
sahf
push
psrad
addr16
add
jle
xchg
adc
(bad)
pop
mov
jae
outs
push
and
mov
call
dec
jl
ds
int3
enter
popa
iret
shl
gs
pop
(bad)
cmp
and
cmp
loope
mov
push
mov
jle
pop
iret
inc
mov
adc
adc
mov
push
ret
mov
mov
push
movs
xchg
test
cmps
aas
cmp
movs
retf
stc
lock
sub
mov
stos
movs
push
xor
in
fldcw
jae
nop
mov
imul
push
mov
enter
daa
mov
nop
sub
fidiv
ins
ror
imul
inc
inc
xchg
(bad)
mov
(bad)
and
dec
inc
stos
cmp
or
mov
cmc
imul
push
(bad)
(bad)
cmps
fmul
lds
pop
cwde
sbb
dec
and
sbb
and
add
imul
add
daa
addr16
push
shl
mov
inc
mov
cld
sbb
cld
dec
push
cmp
jp
push
ror
push
xchg
xchg
push
popf
adc
test
aaa
sbb
inc
push
stos
push
xchg
fld
jns
dec
icebp
loopne
mov
sub
jmp
inc
pop
out
aad
nop
ins
jg
mov
loopne
pop
mov
cmp
(bad)
in
cs
cmp
and
sbb
mov
out
xchg
cmp
cld
sub
fsubrp
adc
shl
adc
mov
loope
xchg
mov
addr16
dec
and
sahf
test
and
pop
ins
mov
inc
xor
loopne
aam
xchg
(bad)
xor
test
jbe
jo
fst
(bad)
adc
pop
lock
or
(bad)
je
and
lahf
cmc
sbb
cli
jg
push
jmp
mov
jmp
sub
xchg
fild
xlat
ja
shl
fiadd
xchg
daa
sub
(bad)
xchg
ds
call
or
jae
scas
call
shl
mov
mov
mov
adc
add
fdiv
sub
cld
jbe
dec
loop
fistp
push
ja
rol
and
mov
(bad)
xor
ret
arpl
push
xor
jbe
xor
sar
dec
pop
push
jnp
xlat
xor
mov
mov
pop
cmp
jne
stos
gs
or
outs
leave
jae
scas
outs
sbb
push
and
int3
clc
cmp
sub
out
sbb
pop
into
sub
das
data16
mov
les
ss
lods
cmp
jo
cmp
arpl
test
inc
ins
lds
jecxz
retf
push
and
cwde
fldenv
shr
call
into
iret
es
mov
sahf
dec
cmp
adc
or
ret
add
sar
jmp
fisttp
pop
enter
xor
mov
xchg
cwde
sti
imul
mov
and
jne
bound
ins
popf
cmps
jo
movs
out
into
pop
outs
iret
push
adc
jecxz
inc
aam
pop
sbb
mov
cmp
aad
mov
test
(bad)
daa
or
and
jmp
push
jo
ss
pop
pop
xor
jae
out
mov
cwde
add
ds
into
push
arpl
repnz
cmp
kxnorb
mov
das
ror
cli
jnp
push
push
out
push
and
clc
dec
jp
and
aaa
add
rep
mov
xlat
sahf
and
into
jno
xchg
ret
add
arpl
shr
and
add
leave
aad
or
cmp
push
add
xchg
mov
mov
pop
loop
icebp
xchg
push
push
mov
lock
dec
jmp
jbe
mov
js
mov
inc
in
jp
inc
loop
call
clc
outs
mov
sub
and
mov
jne
sub
imul
or
aad
pop
adc
sub
fcomip
xchg
mov
adc
ret
xor
jecxz
sbb
push
(bad)
mov
push
jo
push
popf
test
and
sbb
not
adc
out
dec
mov
ror
mov
push
mov
jbe
mov
sbb
mov
push
sti
xor
std
mov
sbb
nop
es
jge
in
cmp
mov
enter
and
jmp
sahf
(bad)
jns
fist
rcl
sbb
xor
sub
movs
in
add
loop
lods
add
mov
push
mov
outs
daa
mov
(bad)
fcmovnb
adc
mov
outs
(bad)
add
shl
(bad)
pop
or
fsub
mov
loop
ins
mov
movs
push
sbb
inc
inc
hlt
inc
adc
xchg
pusha
pop
jmp
mov
cs
push
cmp
fiadd
lods
push
sbb
xchg
inc
xchg
xor
test
dec
jnp
test
cmp
retf
adc
sbb
in
adc
add
popf
out
sar
dec
cwde
xor
mov
and
out
daa
test
cmps
cmc
bound
sub
cdq
cmp
call
and
adc
xchg
push
jnp
test
jb
mov
pop
scas
mov
leave
fadd
rol
dec
xor
les
pop
sub
rcl
and
daa
mov
mov
retf
scas
or
(bad)
mov
in
test
pop
jns
sbb
mov
adc
push
jnp
adc
movs
mov
push
sub
cmp
push
jl
arpl
mov
test
mov
mov
(bad)
mov
neg
mov
rcr
clc
inc
sub
retf
mov
mov
push
std
shl
imul
and
jecxz
(bad)
hlt
repz
add
xor
xchg
std
adc
jp
jl
push
ret
pop
pop
dec
aas
and
jo
or
popf
inc
xchg
repnz
(bad)
and
scas
loopne
dec
fstp
cld
sbb
repnz
jmp
pop
push
mov
and
adc
or
jae
cmp
mov
sub
lds
xlat
dec
loopne
mov
cmps
popa
add
cwde
mov
sti
fcomi
es
add
sub
rep
mov
sub
aas
or
out
mov
cld
pop
inc
into
stc
popf
int
pop
aad
adc
inc
xor
cli
jbe
xchg
push
popa
dec
shl
cmc
pop
mov
mov
and
fstp
lods
lods
jecxz
in
adc
ss
jecxz
jge
push
sbb
sub
jae
arpl
mov
test
aaa
cmps
repnz
sbb
add
and
pop
(bad)
jmp
loope
shl
push
fadd
lahf
jns
clc
mov
inc
and
jb
push
dec
pop
push
test
jae
pop
dec
test
test
pop
push
and
cmp
std
aaa
idiv
out
repnz
cmps
xchg
mov
adc
outs
stos
fcom
mov
enter
xchg
push
xchg
cmp
ins
xor
xchg
mov
dec
(bad)
pop
jns
out
clc
(bad)
dec
pop
push
jmp
inc
imul
stos
add
xor
fbld
lahf
cld
dec
test
mov
popf
push
or
or
not
and
inc
mov
outs
xchg
cmp
stc
ja
adc
jo
dec
jl
jmp
mov
lock
or
ss
ins
pop
stos
pop
jmp
and
or
sub
aad
call
movs
jae
pop
inc
adc
mov
and
imul
(bad)
popa
xchg
sbb
out
push
xor
lds
nop
loop
sbb
imul
xchg
addr16
adc
fistp
mov
push
inc
jne
popa
jb
outs
jns
dec
and
ffree
mov
adc
add
lock
neg
inc
pop
gs
cli
mov
adc
adc
sti
mul
popa
push
sahf
cmp
jbe
adc
jno
push
out
mov
mov
cmp
inc
push
int3
stos
iret
xchg
or
push
mov
pusha
push
push
jns
pop
xchg
add
xor
cmc
xchg
jne
adc
inc
shl
scas
call
rol
ins
mov
mov
fwait
cmp
inc
inc
test
mov
fldcw
xchg
dec
daa
leave
(bad)
stc
in
or
push
sbb
loopne
and
jns
sbb
adc
repnz
jns
sbb
int
mov
adc
clc
mov
mov
pop
mov
cs
push
push
inc
jmp
je
xchg
movs
(bad)
cdq
mov
jbe
sub
jmp
inc
mov
or
xchg
adc
add
cmp
xor
aam
ss
adc
unpckhps
js
outs
or
enter
push
inc
sbb
sbb
mov
cs
or
jp
call
pop
test
scas
test
shl
jmp
shr
fdivr
jmp
or
ins
lock
cwde
jecxz
ins
dec
ds
not
xor
cmps
adc
sub
lea
add
fst
cld
mov
test
ret
ror
out
cmc
or
pop
gs
movs
jecxz
mov
cmp
adc
outs
outs
mov
out
ror
xor
sub
mov
out
popa
shl
fxch
ret
test
call
mov
pop
sub
mov
xor
sbb
ja
dec
push
lods
xchg
sbb
out
ret
xchg
and
pusha
cmp
push
jp
jmp
sahf
cmp
cmp
clc
push
fidiv
mov
mov
xchg
fisub
or
test
or
lahf
mov
out
mov
(bad)
push
jns
lds
aad
retf
and
dec
(bad)
das
ds
repnz
mov
mov
mov
nop
sub
sub
mov
mov
imul
push
inc
pop
push
pop
lods
ins
aad
or
int
jb
add
cld
mov
out
outs
dec
sub
pop
push
icebp
mov
pop
pop
shr
push
lock
mov
test
repnz
(bad)
(bad)
adc
retf
(bad)
dec
aad
xlat
cli
inc
mov
adc
int3
sub
pop
mov
(bad)
scas
into
inc
pop
aam
aas
jnp
add
xlat
inc
xor
pop
or
je
inc
pop
addr16
mov
inc
jge
sbb
fidivr
xor
jmp
cwde
sbb
dec
std
jb
or
call
mov
jns
lods
es
cmp
mov
dec
xchg
mov
or
es
sub
push
add
xchg
jmp
jg
jmp
fwait
xchg
dec
mov
dec
pushf
pop
ret
jns
sbb
in
mov
data16
xchg
movs
cmps
adc
in
aad
nop
push
in
lods
sbb
leave
mov
je
mov
xchg
cmp
lahf
dec
push
fisubr
mov
movs
or
inc
sub
aas
ja
call
jbe
lods
sub
shr
push
(bad)
scas
sub
test
or
pusha
mov
add
aaa
fldcw
adc
xchg
scas
ja
int3
mov
lods
ins
out
adc
mov
shl
cmps
add
lods
mov
inc
mov
es
jae
sub
loopne
out
cmp
mov
ds
aaa
sub
sbb
fmul
popa
push
fld1
repz
lods
es
add
pop
mov
movs
sti
arpl
popa
adc
adc
pushf
shl
xor
jp
(bad)
xor
arpl
movs
xor
xchg
jg
ret
das
jmp
data16
aas
inc
add
jl
adc
xor
xor
in
call
test
addr16
out
stos
dec
add
sbb
mov
xchg
jl
add
mov
push
call
dec
es
dec
sub
xchg
mov
sbb
mov
cld
cwde
jb
cmps
cmps
push
ja
pop
lock
push
das
mov
aam
push
scas
popf
leave
repz
enter
mov
lods
xor
and
mov
cmps
jmp
xchg
xor
sbb
out
fldcw
icebp
xor
(bad)
sbb
jae
(bad)
adc
hlt
inc
jmp
mov
movs
mov
nop
(bad)
std
das
mov
push
iret
int3
mov
sti
loop
adc
adc
ds
add
push
out
sbb
lds
jo
or
in
pop
fs
cld
sahf
adc
jmp
jle
jnp
hlt
enter
xor
stos
cmp
sti
mov
ds
pop
mov
mov
cmps
movs
xchg
jl
ins
push
ret
cs
lds
loope
loop
aas
in
ins
mov
jecxz
pop
or
and
mov
mov
jnp
shl
jnp
mov
or
ja
out
push
(bad)
mov
and
scas
cdq
test
das
cmc
xchg
stc
or
retf
sub
ret
and
(bad)
js
push
cmps
dec
and
add
cdq
mov
jnp
xchg
sbb
mov
stc
mov
jo
mov
mov
add
mov
sbb
daa
test
push
gs
loopne
jge
bound
sti
mov
repnz
aaa
dec
xor
pop
xchg
retf
popa
rcl
mov
(bad)
mov
(bad)
sbb
xor
mov
std
into
dec
push
out
sbb
or
pop
push
sub
test
jp
mov
fild
test
push
xlat
add
outs
xchg
ds
or
fsubrp
cmp
cmp
or
imul
out
arpl
mov
xor
mov
fcom
or
mov
enter
and
mov
and
hlt
nop
int3
xor
call
pop
imul
jp
leave
and
das
mov
pop
jp
inc
pop
pop
lock
fimul
outs
mov
test
outs
ficom
sub
jmp
dec
dec
dec
imul
add
fdivp
stos
add
pop
fs
es
ret
dec
movd
inc
dec
jmp
cmp
pushf
leave
add
inc
xchg
inc
cs
cmp
mov
test
mov
je
stc
add
and
xchg
jae
ret
pop
jmp
sbb
movs
inc
sbb
sub
ret
cmp
lods
jno
push
cs
add
xor
stos
mov
cmp
mov
push
or
add
push
out
and
adc
mov
pushf
mul
aam
mov
adc
sub
and
in
pop
nop
dec
adc
sbb
test
xchg
(bad)
push
pop
inc
fst
clc
xchg
lea
jg
dec
push
push
jae
xchg
mov
jl
mov
push
mov
in
xor
mov
ins
(bad)
shr
ins
inc
shl
(bad)
push
cld
xchg
mov
inc
xor
in
ins
out
xchg
push
sti
(bad)
fmul
clc
in
je
lds
pop
xor
iret
xchg
stos
push
jge
into
cmp
sar
mov
test
xchg
test
(bad)
push
dec
sbb
cli
mov
ja
(bad)
in
inc
xchg
scas
cmps
out
(bad)
jg
int
pop
(bad)
jno
fcmovbe
daa
enter
lods
jmp
ins
(bad)
inc
in
bnd
dec
lds
inc
xor
inc
mov
dec
fst
inc
adc
sub
mov
jae
mov
jbe
sbb
push
xchg
rol
jnp
xor
fistp
mov
pop
sahf
pop
or
sbb
sub
pop
sbb
scas
jmp
rcl
rol
xchg
fiadd
fdivr
fldcw
jmp
cmp
add
pop
fdiv
mov
mov
bound
mov
pop
fwait
shl
adc
sbb
inc
mov
push
or
fwait
popa
in
(bad)
icebp
jmp
add
(bad)
in
out
pop
add
mov
neg
lock
push
(bad)
xchg
pop
mov
adc
bound
inc
jle
add
sbb
and
pop
ror
fwait
pop
loop
pop
pop
or
outs
cmp
adc
or
xchg
xor
mov
movs
mov
mov
movs
adc
inc
dec
or
pop
(bad)
faddp
sub
xchg
stc
ins
test
mov
in
(bad)
loopne
lahf
call
mov
dec
scas
mov
adc
add
mov
out
shr
fbld
lods
jge
test
outs
mov
inc
and
js
cwde
(bad)
(bad)
and
pop
popa
jae
(bad)
xor
cmps
cmp
xor
std
hlt
adc
inc
(bad)
loope
cmc
sub
push
out
mov
scas
(bad)
repnz
dec
add
mov
out
fist
cmps
jo
ret
push
test
dec
test
pusha
sbb
ja
lods
jo
cs
or
jge
cli
test
repnz
mov
lock
out
mov
jmp
retf
popf
or
clc
cld
and
mov
pop
cmp
adc
(bad)
or
jmp
in
ins
mov
das
fsubr
pop
out
repnz
mov
ins
or
aam
dec
xor
mov
mov
test
(bad)
xchg
mov
cs
outs
sahf
mul
test
mov
xor
pop
add
out
fwait
lods
fadd
cmps
xor
mov
push
sbb
mov
pandn
sub
scas
push
(bad)
xor
sahf
stc
hlt
xchg
rcl
and
mov
xor
mov
call
cmp
xchg
mov
or
mov
aas
div
call
jo
fstp
out
adc
mov
int
and
cmp
shl
cmp
rcl
mov
je
loop
(bad)
sbb
mov
cmps
adc
adc
mov
std
retf
mov
mov
xor
inc
jb
mov
dec
ret
xchg
xor
call
mov
popa
ja
test
repnz
sub
xchg
stc
(bad)
dec
adc
fild
push
and
out
out
xchg
iret
jne
pushf
lahf
test
aad
add
imul
add
sub
inc
or
movs
sub
retf
pop
jp
lahf
jae
xchg
imul
daa
inc
push
or
data16
xor
call
test
pop
and
int3
cmp
outs
fwait
and
rcr
jmp
cwde
mov
or
mov
pop
cmps
adc
hlt
loopne
shl
adc
and
jbe
out
out
jmp
inc
sbb
add
aaa
inc
das
ja
inc
xor
sar
or
or
ja
rcl
and
cmp
add
jg
and
jecxz
xor
and
add
dec
cmp
jle
(bad)
cli
mov
pop
xor
pop
pop
repnz
(bad)
fiadd
sub
scas
loopne
lahf
dec
popa
cmp
xchg
pusha
add
inc
lods
or
or
mov
retf
lods
(bad)
pop
mov
inc
cmp
sahf
push
sub
pop
cmp
mov
jo
xor
dec
icebp
jb
cmc
jg
cmp
pop
inc
mov
aad
push
add
xor
mov
mov
loopne
pop
sbb
lea
int
xchg
jb
(bad)
retf
pop
dec
shl
mov
call
dec
mov
inc
out
out
mov
jl
or
fcomip
in
daa
outs
push
movs
inc
(bad)
mov
jne
pop
push
mov
fisub
pop
sbb
inc
pop
mov
je
mov
mov
sbb
dec
stos
sahf
into
xchg
out
(bad)
lods
xchg
jp
clc
cdq
push
mov
add
(bad)
pop
ss
jl
fnstcw
mov
xor
cld
fdiv
xchg
mov
jmp
test
adc
xor
cmps
popf
das
popa
cmp
jb
cdq
aad
test
inc
jbe
mov
mov
or
push
jno
sub
lock
inc
jge
out
das
cwde
test
or
stos
pop
cld
push
cmp
or
lods
popf
mov
cmc
sti
(bad)
pop
sti
mov
sbb
mov
mov
into
mov
push
jbe
ins
scas
outs
lock
cmp
mov
ret
or
xor
inc
adc
shl
add
xor
in
sub
neg
fwait
cmp
repnz
fisttp
(bad)
cmp
inc
dec
push
jmp
mov
ror
gs
(bad)
movs
arpl
out
sbb
xchg
xor
add
neg
xchg
sbb
adc
mov
cmp
adc
add
mov
and
pop
repnz
fnstcw
(bad)
fucomi
dec
lds
jle
mov
dec
retf
inc
xchg
and
adc
fpatan
fwait
ss
cmp
jl
xlat
rcr
xchg
xor
lea
sar
push
mov
xchg
aaa
daa
adc
in
imul
call
ret
pushf
push
mov
mov
out
and
call
xchg
pop
and
pushf
shl
ja
loope
adc
enter
addr16
hlt
pop
call
jo
scas
sbb
retf
stos
enter
xchg
dec
mov
mov
leave
push
push
test
dec
or
mov
ins
sbb
ds
cmpps
adc
adc
sub
xor
dec
cmp
mov
push
jmp
shl
mov
xor
xor
xor
pop
dec
add
rcr
adc
cmp
jl
pop
sub
or
(bad)
loope
aad
adc
lods
pop
mov
into
push
retf
sub
rcr
repnz
and
adc
mov
clc
adc
dec
ja
fadd
loopne
sbb
cwde
xchg
daa
cwde
add
cmp
cmp
sbb
dec
mov
bound
ins
pop
xchg
jecxz
jbe
addr16
pusha
into
fstp
mov
into
pop
in
push
scas
fstp
cmp
addr16
cmp
sbb
bound
mov
(bad)
fstp
mov
xchg
push
aam
sub
inc
sbb
mov
inc
mov
int
loop
add
pop
or
in
pushf
dec
mov
out
sbb
mov
mov
push
pop
mov
adc
cwde
pop
jne
add
xchg
sub
pushf
push
int3
sahf
push
icebp
pop
mov
pop
add
mov
mov
adc
sub
rcl
push
mov
ja
shl
fwait
push
jo
sti
pusha
jge
push
test
adc
xchg
xchg
enter
sti
test
add
jns
mov
push
call
ret
mov
mov
xor
arpl
jle
mov
stc
aam
xchg
xor
pop
jns
lods
jle
in
mov
push
je
ins
mov
or
scas
iret
loop
aaa
mov
fstp
xchg
jp
int
mov
fdiv
inc
sgdtd
and
dec
and
sti
push
or
pusha
mov
sbb
xor
xor
inc
jbe
or
xor
xor
stos
jne
jecxz
pop
push
adc
dec
lods
push
sub
cmp
jbe
xchg
movs
fmulp
xchg
in
jbe
aas
or
and
adc
inc
dec
jmp
pop
and
adc
pop
fistp
mov
xchg
mov
pusha
mov
push
xlat
(bad)
jo
aaa
mov
repnz
fstp
push
jmp
jecxz
inc
push
loope
jne
mov
les
dec
loop
mov
push
shl
add
sub
shl
repnz
rol
das
mov
xchg
lahf
and
push
jmp
and
ret
fiadd
mov
cmp
sub
hlt
dec
ja
sub
repz
pop
push
ins
inc
mov
mov
mov
lods
loope
xchg
retf
xor
push
imul
xchg
xor
scas
call
pop
inc
ret
mov
jns
(bad)
out
shr
cmp
addr16
pushf
shl
call
push
push
aas
mov
nop
cmp
movs
mov
mov
leave
ss
mov
add
imul
push
pusha
sbb
adc
adc
inc
fmul
std
and
movs
mov
mov
mov
sub
mov
dec
in
dec
lods
into
repz
sbb
cmp
bound
cld
loop
sub
call
cld
stc
imul
cs
cmp
xchg
push
scas
stos
adc
push
cmp
aaa
or
add
loop
cld
cmp
push
ret
inc
adc
(bad)
out
rol
test
ret
fabs
pop
push
in
outs
dec
test
js
inc
cdq
mov
inc
xchg
(bad)
cmps
test
cmp
mov
jge
mov
mov
jecxz
inc
mov
dec
push
xor
sbb
scas
jne
cmps
or
xchg
jp
add
jb
ret
jae
scas
jae
les
pop
mov
push
and
(bad)
leave
shl
dec
pop
shl
pop
sbb
bound
pushf
lock
adc
rol
lock
push
mov
push
xor
rcr
out
jle
fdiv
imul
pop
addr16
out
and
in
sub
les
in
lock
outs
cmps
mov
dec
aas
xor
pop
xchg
dec
jbe
add
xchg
popf
ins
js
ss
div
int
test
movs
dec
ror
add
push
mov
mov
fmul
in
xchg
or
fstp
(bad)
call
ins
push
std
fwait
xchg
sub
sbb
inc
clc
es
add
dec
cmp
xchg
push
hlt
aad
cmps
retf
xchg
cmp
test
in
ret
mov
lods
call
cmp
lods
or
in
and
sub
sahf
enter
cli
mov
mov
cmp
mov
mov
cli
cwde
fidivr
and
mov
or
cwde
pop
inc
sub
arpl
out
fdiv
dec
popf
mov
mov
push
ss
cmps
aad
(bad)
stos
adc
sub
test
(bad)
(bad)
cmp
mov
test
repnz
cmp
loopne
mov
imul
lods
cmp
and
jno
xor
imul
add
jp
sahf
inc
jae
lahf
stc
iret
sahf
out
pop
test
call
jl
scas
movs
popa
cs
popa
pop
cs
and
and
shl
clc
cli
cmps
std
cmp
push
mov
xor
imul
(bad)
cs
gs
adc
lods
repz
or
adc
dec
dec
pop
dec
xor
mov
loope
xchg
pop
push
jle
les
in
retf
xchg
inc
pop
sub
cli
mov
sbb
mov
mov
xchg
popa
sub
inc
jae
xchg
stc
neg
sub
xor
out
jmp
push
rol
ins
addr16
or
jecxz
arpl
mov
dec
cwde
lea
xor
jge
std
repnz
hlt
ja
cmp
outs
cwde
inc
pop
jne
sub
punpckhdq
popf
sub
retf
enter
lods
fldcw
stos
leave
or
mov
cmp
or
xchg
cmp
lahf
add
mov
ins
mov
in
dec
call
mov
jle
sti
arpl
xor
test
test
inc
push
add
stos
mov
fsin
jns
dec
lahf
adc
adc
pop
mov
shr
push
repz
sub
mov
mov
sbb
xchg
cmp
sbb
es
dec
in
sbb
mov
outs
sbb
mov
push
sbb
xor
inc
jno
inc
loopne
inc
loope
sub
rcl
dec
jp
scas
pop
call
mov
mov
ficom
cwde
mov
daa
mov
mov
jo
loop
or
call
jmp
push
mov
add
jns
or
jb
enter
add
pop
iret
mov
mov
inc
in
inc
xor
mov
repnz
xchg
mov
add
pop
rcr
inc
out
cwde
pop
fidiv
outs
fcmovnb
out
adc
dec
jg
out
stos
inc
out
cmp
ret
mov
dec
jp
(bad)
adc
je
push
lahf
inc
(bad)
mov
pop
xor
iret
jae
in
jecxz
mov
jne
cmp
cdq
cli
cmp
dec
jmp
popf
jge
mov
jl
or
out
jns
mov
loopne
test
add
cs
imul
adc
cmp
xlat
mov
loopne
and
xchg
stos
jg
push
shr
push
mov
jle
retf
int3
and
fs
test
jae
mov
pop
sub
push
js
fist
aaa
add
cld
cdq
jle
xor
sbb
push
arpl
jno
mov
cmps
hlt
jle
je
in
shl
xchg
mov
jne
mov
test
mov
mov
cmp
pop
sub
mov
cmp
data16
cs
jge
into
mov
jle
addr16
dec
xchg
stos
dec
dec
pop
sub
ja
cdq
fstp
pusha
adc
rcr
and
in
inc
xor
adc
xchg
pop
add
cmp
mov
icebp
mov
ss
call
xor
inc
retf
ja
mov
xchg
jne
add
cmp
fld
(bad)
ror
inc
sub
ins
jns
pop
stc
icebp
jecxz
neg
cs
and
out
mov
mov
add
pop
out
into
adc
inc
div
nop
dec
dec
push
add
inc
je
cs
shl
fisttp
inc
ss
lahf
sub
loopne
loopne
mov
jno
inc
into
sub
mov
or
in
adc
aaa
sub
inc
xor
nop
clc
mov
and
lds
dec
cmp
jo
push
and
mov
fild
inc
cmp
mov
mov
inc
cmp
adc
out
adc
xlat
int
cmps
(bad)
cmp
inc
out
test
dec
nop
into
cmp
fcomp
add
gs
add
daa
jnp
push
cmp
cs
out
and
sub
shl
sbb
fld
pop
pop
or
and
inc
mul
sub
mov
into
jmp
push
mov
xor
(bad)
cmp
test
movs
jns
xchg
lods
xchg
mov
pop
rcr
push
call
dec
lahf
sbb
or
ds
push
mov
xchg
pxor
mov
inc
inc
bound
pop
call
aas
push
ins
cmp
sahf
mov
or
xchg
sub
xchg
adc
sbb
cmp
rol
test
scas
ins
cmp
jge
mov
push
ins
mov
movs
xchg
leave
sub
sub
mov
hlt
retf
pop
pop
sub
outs
mov
inc
mov
cmc
movs
and
ret
in
in
sbb
scas
push
sahf
jmp
push
imul
jae
stc
iret
adc
mov
das
jno
das
add
loope
jne
xchg
and
fst
daa
xchg
cwde
pop
push
push
or
cdq
add
jae
add
pop
ds
in
test
sbb
cdq
imul
jbe
push
add
xor
push
out
rcl
imul
adc
xchg
pop
mov
ret
push
add
push
push
push
pop
sub
push
(bad)
pushf
mov
das
or
jmp
or
mov
out
(bad)
and
pushf
sub
imul
retf
aam
ins
(bad)
push
movs
jno
(bad)
jg
data16
setae
xchg
icebp
push
dec
or
push
loope
or
out
push
ins
pusha
jp
add
jmp
int3
pop
jmp
jge
inc
movs
push
sbb
in
stos
std
ret
jg
or
iret
jecxz
nop
ins
dec
xchg
imul
and
mov
dec
movs
in
inc
fwait
rcl
mov
scas
add
cwde
sbb
imul
mov
dec
fidiv
js
pop
sbb
dec
cmp
xchg
and
jp
mov
adc
dec
in
mov
fld
ins
repz
gs
and
movs
xchg
mov
jmp
cmc
mov
add
push
fisttp
ja
retf
(bad)
mov
jnp
jmp
arpl
mov
pop
lds
and
icebp
fld
push
and
(bad)
push
les
nop
jp
xor
xchg
pop
or
in
dec
xor
xor
or
pop
repz
(bad)
jmp
dec
arpl
dec
jl
push
jbe
fcmovnbe
div
dec
and
call
jae
popa
or
js
test
or
mov
dec
push
test
bound
or
nop
xchg
out
mov
test
add
dec
mov
jmp
ja
xchg
aaa
push
xchg
sbb
movs
pusha
pop
leave
mov
clc
test
aas
popa
(bad)
es
adc
push
cmp
test
mov
dec
jle
out
xchg
mov
xchg
or
add
call
jbe
sub
push
test
mov
sbb
push
out
mov
xchg
shr
lahf
add
test
xor
mov
sbb
lods
mov
js
repnz
mov
jne
addr16
xchg
(bad)
ficomp
ror
pop
call
adc
pop
sub
(bad)
dec
sbb
inc
ins
clc
(bad)
or
out
std
je
mov
adc
mov
ss
pop
leave
test
shl
mov
push
pop
add
rol
or
xor
or
jmp
js
out
(bad)
jecxz
pop
push
call
cwde
ficomp
pop
adc
out
xlat
pop
lods
ffree
loopne
adc
xor
out
les
add
mov
push
cmp
mov
jge
les
inc
aas
jl
stos
(bad)
test
rol
outs
cmp
in
add
mov
das
in
dec
hlt
pushf
test
(bad)
addr16
js
push
xchg
sbb
mov
cmp
sub
or
inc
xchg
jp
sub
lea
fsin
dec
dec
mov
cli
jbe
jne
out
cwde
or
test
pop
in
and
cdq
jno
push
xchg
or
ins
inc
pop
sti
into
pop
cld
jmp
push
dec
push
int3
xchg
mov
fnsave
jmp
hlt
pop
fcom
js
popf
jle
push
and
aam
data16
jns
dec
dec
fstp
mov
repz
adc
pusha
mov
inc
repnz
movs
mov
cmp
repz
cmps
and
(bad)
sub
push
mov
repnz
pop
and
in
lds
adc
test
sub
mov
enter
sti
sbb
out
mov
jp
(bad)
stc
test
mov
ja
lods
jmp
cmp
push
sbb
mov
dec
(bad)
(bad)
push
xchg
xchg
inc
neg
test
icebp
pop
lock
repz
dec
fcmovnb
cmp
mov
xchg
inc
clc
in
clc
jno
push
hlt
retf
loopne
aaa
outs
jg
sbb
bound
fcomp
xchg
cmp
mov
(bad)
sbb
cmovle
mov
mov
mov
icebp
xor
xchg
sbb
test
ss
mov
dec
xchg
jl
clc
sub
fiadd
and
ins
outs
xchg
jb
xchg
adc
neg
add
call
ds
retf
and
outs
sub
inc
dec
push
jae
xchg
and
loope
(bad)
gs
pusha
shl
fldenv
fsub
mov
enter
xchg
jmp
sub
pop
repz
ret
fdivr
and
and
cmp
or
addps
outs
shr
ror
dec
adc
mov
pop
pop
mov
adc
js
push
fdiv
jb
push
jmp
loop
push
cmp
jmp
cmp
arpl
fidiv
inc
in
fwait
lahf
jp
imul
xor
and
sar
push
sub
jmp
push
pop
dec
loopne
stos
adc
dec
xchg
push
stos
aaa
mov
xchg
in
gs
cdq
dec
jl
xchg
stos
mov
mov
pop
or
pop
sub
sub
cmc
inc
and
jno
daa
lock
adc
je
sub
inc
outs
sbb
inc
or
lods
and
movs
mov
xor
pop
pusha
and
arpl
adc
pop
or
and
loope
push
in
mov
pop
mov
pop
jns
mov
bnd
jle
add
sbb
or
scas
arpl
xchg
or
aas
mov
sbb
and
add
out
test
mov
cmp
push
pop
ret
(bad)
icebp
(bad)
push
or
xor
cmps
sti
(bad)
or
or
dec
jb
das
(bad)
int3
mov
retf
unpcklps
lds
jb
js
es
and
call
xchg
clc
cmp
pop
pop
mov
mov
adc
mov
call
lds
push
mov
test
cmps
jecxz
lea
mov
fstp
call
cs
jo
fsubr
outs
cmp
dec
retf
das
fcom
neg
pop
retf
jle
xor
lea
dec
mov
ds
mov
out
lods
lahf
or
push
enter
test
push
or
mov
call
mov
and
inc
outs
lock
ins
xor
jae
ret
xor
cmp
mov
scas
add
das
(bad)
mov
movq
inc
js
xchg
fstp
xor
bound
dec
push
cmp
test
dec
sahf
jno
pusha
push
push
push
repz
jge
jl
sbb
add
and
pop
lea
cmp
or
push
stos
fist
retf
scas
sbb
mov
shr
bound
not
mov
and
iret
mov
lods
push
pushf
je
call
jns
mov
mov
fnsave
imul
(bad)
mov
push
(bad)
mov
and
push
add
jb
in
mov
jo
cmp
into
(bad)
enter
or
push
xor
fcmovnu
dec
mov
sti
cs
adc
dec
xchg
cli
ins
jge
mov
push
das
icebp
dec
push
call
sbb
mov
aas
sbb
xchg
iret
ss
mov
shl
or
sbb
div
mov
fidivr
mov
mov
pusha
sub
int3
and
push
pop
out
inc
out
shr
fs
mov
loopne
jle
cmp
pop
xor
loope
pop
movs
pop
sbb
out
outs
icebp
lea
and
jae
cdq
mov
inc
lea
iret
int
ret
or
in
scas
rol
cli
pop
in
push
ret
cmps
adc
xchg
adc
push
sub
popf
pusha
adc
jb
and
mov
fisttp
js
xor
xor
push
sub
lods
jbe
mov
pop
int3
aaa
push
or
aam
retw
pop
cmps
es
bound
(bad)
mov
test
xor
out
cmp
cmps
jae
movs
leave
cwde
jl
aaa
and
inc
fstp
jmp
ror
call
call
shl
xchg
mov
jge
mov
imul
push
push
sbb
xchg
retf
xchg
xchg
repnz
(bad)
adc
sbb
xor
push
inc
out
clc
xchg
std
popa
mov
inc
mov
push
push
xchg
sub
xor
(bad)
push
or
and
test
out
inc
lds
push
jb
outs
js
add
jle
ins
lods
ficom
push
jmp
adc
add
or
jo
or
dec
shl
jecxz
cs
xchg
dec
sub
(bad)
mov
pop
sub
xor
inc
and
out
push
sub
fwait
push
sub
sub
iret
leave
jge
retf
movs
xor
mov
test
ss
cdq
iret
icebp
xor
jecxz
mov
outs
movs
dec
cli
arpl
and
pusha
adc
fldcw
inc
sub
hlt
add
stos
xor
es
cmps
adc
sub
cwde
cmp
sbb
ins
xor
es
adc
pop
mov
fidivr
mov
add
adc
jl
jmp
daa
mov
(bad)
add
mov
xchg
(bad)
fidiv
sahf
in
add
into
pop
xchg
(bad)
mov
inc
in
jno
pop
pop
movs
shl
push
xlat
test
mov
imul
add
adc
pusha
mov
ror
mov
and
aas
pop
mov
mov
mov
jmp
push
loop
inc
imul
sahf
mov
add
lds
fisttp
fcmovu
dec
fdiv
or
ins
aaa
mov
lods
cdq
jbe
imul
adc
mov
or
(bad)
cdq
dec
in
xor
sbb
(bad)
lods
icebp
push
loopne
and
mov
cmp
repnz
nop
ds
pusha
cmps
mov
sbb
sahf
test
xchg
std
cmp
movs
sub
and
int3
and
cmp
pop
test
push
add
sub
sar
retf
mov
aam
(bad)
scas
mov
mov
and
pusha
(bad)
or
push
and
(bad)
fisttp
dec
mov
and
stc
mov
es
dec
mov
jmp
cmp
lea
jp
mov
inc
inc
mov
pop
mov
movs
pushf
adc
scas
outs
cmp
daa
push
lahf
mov
xchg
cdq
ja
or
dec
scas
fdivr
xchg
imul
mov
je
hlt
dec
shl
lods
jb
jne
iret
mov
cmp
inc
fmul
sbb
frstor
inc
leave
dec
mov
repz
mov
ror
retf
xchg
mov
cmp
lods
push
(bad)
call
sbb
retf
dec
fcom
ror
fstp
jnp
fisub
mov
out
and
and
mov
push
jge
sbb
xor
outs
fdivr
jns
push
push
or
pop
js
sbb
cvttps2pi
fstp
scas
int3
add
jg
jns
sbb
add
mov
jp
dec
(bad)
test
js
bound
fwait
dec
inc
fcomp
add
mov
in
loop
out
call
fadd
add
mov
fnstsw
mov
aas
mov
mov
dec
mov
add
test
mov
das
ret
and
loopne
test
mov
ret
(bad)
xchg
retf
(bad)
icebp
mov
inc
jmp
jb
mov
out
push
ins
push
ficom
arpl
mov
data16
inc
ins
out
mov
lods
mov
mov
mov
mov
stos
push
mov
dec
push
fwait
loop
xchg
sub
or
lods
pop
mov
mov
call
lock
sbb
ins
jg
pop
fbstp
push
sub
fisttp
lea
in
rcr
pop
ret
idiv
jns
fidiv
push
inc
loop
pop
not
inc
jmp
xchg
xor
inc
cli
cmp
fbstp
ret
ds
mul
jp
leave
push
rol
mov
push
idiv
jge
fld
sbb
dec
fcmovnbe
xchg
(bad)
mov
jmp
pop
test
je
adc
ret
jmp
ffreep
push
lock
xchg
adc
pop
jmp
test
mov
xor
stc
mov
lods
inc
rol
loop
inc
inc
inc
sbb
ret
jmp
cmp
sbb
daa
cmp
adc
loopne
mov
cmp
out
dec
inc
adc
cli
(bad)
icebp
sub
adc
jns
mov
adc
leave
jecxz
inc
push
mov
dec
sub
sub
adc
dec
lods
fdiv
or
outs
out
lds
ror
inc
pop
test
xchg
pop
inc
jne
fmulp
push
les
in
mov
xchg
mov
mov
push
repz
cdq
sbb
inc
cmp
loop
sub
sbb
sbb
test
dec
mov
mov
(bad)
and
jb
outs
adc
dec
mov
dec
pop
add
pop
int
repnz
mov
cmps
sub
mov
push
ficomp
push
mov
in
(bad)
in
jp
mov
aaa
arpl
out
and
in
sbb
add
(bad)
in
push
cmp
mov
inc
sbb
mov
lods
add
xor
pop
vucomisd
stos
test
les
jae
lahf
sbb
(bad)
lock
pop
std
mov
xchg
rep
xchg
pop
repz
push
add
(bad)
lahf
dec
mul
test
int3
pop
ret
data16
rol
(bad)
das
fsub
jecxz
xor
in
dec
(bad)
popa
adc
mov
pop
jae
(bad)
xor
ins
loope
aaa
or
fisubr
pushf
pop
pop
outs
out
ret
xchg
cs
movs
hlt
add
adc
dec
cdq
out
int
mov
into
cmp
es
jmp
je
cs
dec
mov
pushf
push
ret
mov
lods
xor
jne
dec
mov
add
jno
in
in
cmps
jb
pop
in
aam
or
sub
push
mov
(bad)
(bad)
mov
int3
pop
adc
jmp
mov
xchg
mov
pop
ins
repz
cmp
hlt
cli
and
lds
mov
mov
mov
fwait
cmp
scas
pop
pop
and
mov
adc
retf
mov
sub
push
add
loop
jns
fiadd
jbe
mov
out
aad
mov
push
call
stc
jnp
mov
mov
inc
jo
mov
or
xor
and
cs
jecxz
mov
sub
ds
sub
xchg
dec
retf
adc
dec
mov
jecxz
jnp
fs
mov
xor
mov
(bad)
pop
ret
je
and
xor
inc
stos
dec
fst
lods
mov
xor
mov
call
ret
(bad)
dec
fiadd
and
mov
(bad)
call
dec
lahf
sub
inc
adc
fld
div
xor
mov
and
jmp
hlt
test
xchg
inc
push
adc
sti
push
imul
sub
rcr
scas
push
xchg
xor
cmp
addr16
push
addr16
int3
inc
push
inc
push
or
into
fcomp
push
jecxz
mov
pop
neg
pop
popa
xor
rol
pop
mov
ins
repz
fwait
dec
and
sub
cmp
dec
js
mov
and
mov
push
iret
lods
sub
imul
cli
and
in
adc
mov
xchg
ret
jns
lods
les
pop
repnz
cmp
ins
(bad)
fidiv
cs
cmp
lahf
mov
pop
ficomp
ss
mov
add
repnz
and
mov
imul
cmps
inc
jb
fsubr
mov
popa
(bad)
sbb
jo
mov
mov
jae
or
lds
mov
in
or
stc
xor
pop
nop
movs
adc
and
and
inc
movs
sbb
imul
xor
add
clc
xchg
or
fimul
data16
iret
outs
rcl
xchg
gs
sub
icebp
cld
movs
or
sub
and
bound
call
xchg
mov
fsubr
mov
xchg
fnstcw
ins
js
add
adc
fild
cmp
inc
xlat
add
mov
inc
xchg
mov
add
test
jnp
mov
jmp
mov
push
inc
ins
clc
mov
pop
dec
mov
xchg
mov
in
push
fistp
sub
aas
jl
stos
daa
mov
jbe
lods
mov
pushf
std
adc
rcl
retf
push
mov
jmp
repz
test
pop
jmp
xchg
sahf
mov
inc
jecxz
jl
xor
cmps
(bad)
or
adc
mov
mov
mov
std
pop
aaa
mov
call
daa
add
xchg
lods
push
adc
jg
jb
sbb
inc
and
cli
(bad)
ss
adc
icebp
sub
lods
xor
cmp
fwait
inc
ins
cmp
popa
lea
dec
jmp
mov
inc
xchg
leave
or
div
js
push
jo
inc
inc
add
loop
jne
mov
inc
je
jl
adc
mov
mov
pop
xchg
mov
sub
(bad)
jg
mov
repz
xor
adc
out
das
lods
inc
or
ror
sysenter
sub
xor
add
bound
xor
cmc
imul
xor
add
sbb
push
jne
cld
adc
fsubr
mov
adc
sub
jecxz
aaa
push
cmp
cdq
pop
mov
ds
(bad)
push
and
sbb
mov
push
ja
lahf
pushf
sub
mov
fnstenv
adc
push
leave
ss
ins
push
and
push
and
fsubr
or
syscall
fist
shl
xor
(bad)
xlat
push
or
push
sub
dec
(bad)
sbb
pop
dec
add
jb
neg
cmp
xor
pop
adc
inc
jmp
retf
sbb
sbb
popf
retf
jno
cmp
ret
mov
hlt
xchg
mov
jb
test
dec
test
cs
fwait
sbb
mov
popa
pushf
push
nop
jo
cwde
(bad)
and
mov
push
cmps
dec
mov
adc
je
add
shl
out
push
aam
xor
xor
sub
cmps
sar
sub
inc
push
dec
mov
inc
and
mov
xlat
sbb
pop
mov
imul
sbb
loopne
popf
fs
mov
sub
popf
popf
add
ds
xchg
fcomp
(bad)
fisttp
mov
repnz
sub
mov
leave
je
adc
shr
(bad)
mov
aas
enter
jmp
in
adc
sbb
stos
retf
cdq
mov
and
or
mov
push
call
jl
test
fbstp
scas
gs
ret
pop
icebp
sub
mov
or
lock
adc
loop
xchg
jno
sbb
gs
pop
mov
cmp
jne
pop
mov
add
jne
out
jns
fld
dec
and
jbe
ds
xchg
in
fisubr
adc
addr16
cs
shl
sub
xchg
and
add
cdq
popf
jno
outs
mov
mov
pop
or
inc
jle
in
add
out
fnstsw
(bad)
fnstenv
xor
dec
test
xor
imul
xchg
mov
or
xchg
ja
retf
cmp
sub
sbb
cmps
add
push
lea
push
outs
xchg
mov
and
imul
adc
daa
xchg
dec
leave
inc
push
jns
jl
repz
in
test
xchg
mov
jge
push
or
inc
data16
pop
dec
fimul
adc
sar
mov
ins
jge
call
and
aas
mov
jmp
mov
pop
rcl
data16
into
neg
call
fsub
or
mov
js
es
iret
xor
mov
inc
bound
dec
fist
cli
jmp
sub
fst
mov
rcr
push
jmp
push
push
lods
sub
push
shr
adc
pop
jne
rcr
cmp
sbb
pusha
mov
mov
inc
xchg
cmc
mov
(bad)
fimul
(bad)
sub
jmp
aad
pop
and
and
pop
dec
or
push
out
stos
mov
icebp
mov
rcr
push
push
pop
ficom
ss
mov
js
js
mov
daa
adc
inc
mov
das
add
cmps
mov
es
rcl
out
push
add
cwde
sub
push
pop
cmp
push
push
pop
sbb
dec
(bad)
sbb
imul
mov
cmps
in
jecxz
(bad)
cmp
push
fdivr
pop
cmp
adc
repz
jl
mov
(bad)
outs
push
aas
cld
fbstp
movs
push
loop
lock
int
or
jl
arpl
push
bound
adc
fisubr
shl
dec
pop
cmp
ret
jo
sub
and
or
and
fmulp
sar
loopne
jo
cld
sub
pop
adc
inc
mov
movs
fild
inc
add
leave
add
mov
inc
jmp
pop
inc
fldcw
mov
mov
jp
xor
jge
mov
mov
mov
cmps
push
and
das
xor
(bad)
stc
in
data16
lods
fs
dec
xchg
and
mov
sub
jg
js
pop
cmps
push
test
mov
add
push
sub
add
sbb
xor
push
aaa
adc
repnz
jg
in
add
jbe
popa
and
jb
dec
fucomi
test
jnp
cmova
pushf
inc
loope
dec
mov
sbb
add
mov
rcr
mov
lods
inc
lahf
das
or
fwait
or
mov
xor
lods
aam
arpl
push
popf
fcmovbe
xchg
stc
leave
pop
mov
repnz
sbb
inc
sub
mov
shl
imul
(bad)
xchg
dec
fisubr
enter
or
sbb
pop
idiv
xchg
fyl2x
mov
outs
jmp
call
dec
test
cli
mov
sub
test
icebp
repz
mov
xor
sbb
in
adc
jge
dec
adc
xchg
stos
and
cmp
adc
or
cli
movs
ret
inc
inc
aaa
mov
add
dec
jne
dec
dec
adc
inc
(bad)
xchg
jbe
ins
add
rcl
mov
xor
loop
pop
jae
inc
test
repz
repnz
or
mov
inc
test
int
in
movs
popa
lea
push
adc
lods
sub
jbe
pushf
in
add
mov
fist
add
ss
pop
add
or
out
adc
xlat
xchg
out
lea
retf
cld
(bad)
cmps
in
xchg
call
std
fxch
stc
cdq
add
dec
ficom
pusha
mov
push
ins
gs
xchg
dec
add
inc
mov
gs
enter
inc
pop
cmps
push
cmp
mov
repnz
(bad)
hlt
retf
adc
in
mov
xor
mov
neg
xor
js
ins
out
mov
pop
imul
je
mov
fdivr
lods
xchg
sbb
sub
enter
rol
aam
cmp
pop
ja
mov
and
sbb
test
mov
mov
std
dec
push
sub
mov
xchg
dec
inc
push
xchg
or
imul
mov
in
das
pop
mov
retf
jne
adc
push
dec
nop
push
aas
mov
lods
popa
imul
popf
test
icebp
cld
test
lods
dec
ret
dec
xchg
jp
inc
jle
dec
jns
ret
lds
push
loope
pop
fimul
cmp
aam
int3
xor
(bad)
sar
pusha
(bad)
aad
cmp
pop
and
xchg
arpl
pop
push
fild
outs
pop
shr
sbb
loopne
loope
xlat
xchg
mov
sar
mov
add
loope
sbb
outs
mov
pop
cdq
pop
loop
jecxz
aaa
out
push
test
jl
add
in
pop
fisubr
jo
inc
sub
mov
mov
fcmovbe
out
iret
and
out
mov
push
mov
adc
sub
(bad)
cld
fisubr
dec
repz
ja
iret
movs
mov
addr16
das
jl
leave
lahf
bound
pusha
pop
xchg
cmp
xor
nop
adc
pusha
(bad)
inc
jmp
xor
sbb
xchg
xchg
ret
sbb
mov
fbstp
mov
cdq
and
or
push
or
or
dec
out
mov
push
sub
das
xor
repz
cmp
in
mov
push
call
mov
mov
cld
test
scas
and
adc
pop
cmp
mov
les
int
lods
js
arpl
out
push
sbb
cdq
sbb
je
push
lea
mov
retf
(bad)
cmp
ss
fnstsw
mov
sbb
pop
fadd
cmps
gs
(bad)
or
cmovbe
lea
mov
jno
hlt
mov
mov
aas
sbb
jno
sbb
shl
mov
repz
sbb
out
adc
scas
gs
movs
and
iret
cdq
xchg
mov
popa
or
and
mov
xchg
cli
or
fimul
fisubr
or
in
and
xchg
inc
and
cmp
clc
mov
pop
xchg
add
push
adc
jle
je
es
js
dec
repz
fnstenv
sub
pmuludq
mov
pop
js
lahf
and
gs
popf
xor
jmp
xchg
mov
adc
lods
mov
jns
loope
repnz
and
push
enter
mov
hlt
clc
push
cmp
push
add
cld
mov
(bad)
sbb
call
sbb
mov
jl
lock
mov
jbe
cmp
gs
jns
in
mov
imul
(bad)
sahf
ins
sar
cmp
push
scas
push
inc
outs
sub
mov
pop
adc
in
or
stos
sub
xchg
dec
inc
mov
sbb
cmp
mov
jns
mov
add
mov
mov
cli
mov
pop
xor
mov
(bad)
adc
adc
ret
add
cmc
pop
cmp
das
hlt
mov
repz
scas
mov
mov
inc
mov
add
push
int3
fs
stc
rcl
test
xchg
and
pop
mov
ret
push
retf
popa
int
addr16
pop
shr
test
hlt
pop
and
lds
inc
xlat
jmp
outs
test
test
adc
sub
mov
mov
sbb
jno
cmp
adc
xchg
arpl
add
sbb
dec
jmp
out
mov
push
adc
mov
push
jbe
jl
ss
(bad)
aad
dec
sar
dec
(bad)
cmp
es
inc
in
mov
mov
loopne
or
push
int3
(bad)
jnp
pop
(bad)
call
mov
outs
fild
out
mov
popf
xchg
xchg
mov
(bad)
cmp
xor
pop
es
cld
iret
es
(bad)
fnstcw
nop
sbb
mov
shrd
xchg
call
bound
aad
sti
fcomi
mov
lahf
ja
cmps
jmp
jns
push
(bad)
mov
enter
cmp
push
and
pop
and
sbb
cmps
add
cmp
pop
leave
or
call
imul
lods
stc
xor
jbe
rol
mov
loopne
dec
fbstp
je
and
and
inc
jnp
push
ins
aaa
repnz
js
pop
stos
outs
loope
sub
inc
lock
sub
mov
in
mov
xchg
movs
lods
sbb
jmp
arpl
popf
dec
mov
jno
push
pop
cmp
cmp
xor
(bad)
int
sahf
in
mov
inc
out
repnz
cs
addr16
push
mov
push
in
mov
and
lods
arpl
adc
cdq
xchg
dec
xchg
and
daa
sub
and
sub
xchg
or
fimul
stos
dec
or
(bad)
jnp
rcr
or
sbb
sbb
adc
popa
(bad)
movs
sub
rol
fldenv
retf
pop
(bad)
in
shl
and
pusha
std
push
pop
in
scas
sbb
and
push
fst
enter
inc
sub
fs
jge
push
sub
xchg
push
jmp
add
or
xchg
sbb
jo
sbb
bound
pop
int3
jp
xor
and
jnp
cmc
jle
mov
imul
jae
aam
or
fdiv
(bad)
sti
jns
push
loop
les
xor
fild
lock
jle
mov
ds
add
adc
js
pushf
inc
clc
ds
shr
int3
push
popf
add
je
aad
pop
cld
sti
sub
aad
inc
xor
xchg
das
clc
or
clc
fisubr
or
and
pop
mov
mov
cmps
cmp
xchg
imul
adc
loope
mov
mov
bound
mov
mov
jb
sbb
add
jmp
jl
inc
test
pushf
add
std
push
dec
or
test
cmps
fisttp
in
inc
mov
dec
or
rcl
sub
jg
cmp
js
lods
inc
push
nop
xlat
sub
aad
imul
movs
cmp
aad
cld
mov
mov
cmc
pop
cmp
xchg
cmp
stos
imul
mov
loope
out
shl
jne
inc
xor
fld
mov
dec
rcr
ja
add
fiadd
test
pop
xchg
jnp
mov
ins
inc
iret
adc
jecxz
jae
call
mov
(bad)
into
sub
fdivr
pop
test
ins
xchg
ds
mov
scas
cmps
lahf
cmp
lods
xor
inc
ret
or
mov
and
sbb
sub
add
jne
xor
pop
sub
mov
mov
(bad)
xchg
fistp
repz
pop
lock
repz
or
pop
push
icebp
js
dec
sub
fst
mov
retf
cdq
dec
jb
mov
es
cmps
test
pop
(bad)
jno
jge
or
dec
(bad)
push
pop
repz
xchg
cmp
cmp
or
inc
(bad)
xchg
movs
ror
mov
out
mov
adc
dec
dec
cdq
cli
ss
push
jae
or
es
mov
or
pop
imul
pop
stc
sahf
jno
pop
xchg
fidivr
cli
mov
jae
seta
cmp
adc
adc
imul
xor
dec
mov
out
ficomp
jmp
imul
pop
mov
inc
lods
adc
sbb
sbb
add
out
push
mov
cmp
rcr
add
inc
movs
sbb
out
cmp
in
fs
xor
or
xchg
push
adc
rcr
outs
sbb
or
outs
scas
scas
cmp
dec
and
lods
sub
ror
and
xchg
daa
jnp
ret
test
aam
sar
adc
sbb
xor
push
ret
call
jnp
rdmsr
sti
push
mov
dec
xchg
lea
lods
cmps
test
pop
push
jecxz
ss
dec
scas
(bad)
ss
cmp
fbstp
adc
sbb
fld
sub
mov
out
pop
inc
sti
mov
push
mov
adc
popf
arpl
imul
sub
rcr
add
fcom
jmp
mov
and
(bad)
sahf
mov
cs
hlt
mov
push
scas
(bad)
xchg
das
icebp
(bad)
mov
out
mov
inc
test
xchg
mov
mov
sub
sub
loop
inc
mov
mov
push
mov
sub
or
in
test
fstp
cmp
(bad)
push
cld
inc
adc
mov
mov
js
fild
jmp
adc
sub
sbb
mov
pop
mov
mov
mov
push
nop
mov
mov
call
sub
pop
sub
test
adc
mov
ds
inc
bound
shr
mov
inc
mov
sub
dec
stos
push
dec
mov
or
xor
adc
call
dec
ds
pop
push
bound
inc
lds
mov
scas
out
adc
popf
movs
dec
mov
push
jl
sahf
mov
inc
push
pop
aad
add
jnp
xchg
push
add
xor
sbb
jmp
sar
inc
fs
xor
and
lock
icebp
addr16
add
sbb
rcl
cwde
xchg
push
fcomi
dec
lock
je
lods
jl
into
xlat
mov
clc
jecxz
xor
stos
rcl
or
push
jns
rcr
mov
adc
enter
jmp
imul
pop
xor
(bad)
(bad)
imul
neg
sbb
xchg
rcr
xchg
jg
fyl2x
dec
int3
pop
popa
call
mov
mov
sbb
cmp
movs
cdq
add
mov
jp
shr
into
xchg
(bad)
fist
pop
popf
clc
jns
lea
sub
retf
retf
sbb
cdq
data16
inc
jne
jmp
sbb
mov
inc
pop
mov
cmp
fistp
jno
pop
movs
add
gs
in
mov
or
inc
pop
push
mov
les
(bad)
jmp
sub
push
push
imul
mov
mov
les
les
int3
fptan
adc
inc
aad
or
mov
mov
lea
test
cld
xchg
pushfw
outs
sbb
lods
lea
(bad)
or
retf
jns
jne
pop
dec
adc
lods
data16
xchg
arpl
into
loope
iret
imul
mov
push
ror
mov
push
fwait
adc
scas
mov
mov
xor
and
cmp
xor
inc
out
(bad)
retf
mov
(bad)
aad
mov
loop
fnstenv
sahf
pop
shl
or
cmp
fiadd
cmp
jbe
pop
xor
test
fwait
dec
jne
test
iret
and
dec
inc
dec
icebp
sbb
mov
push
test
mov
mov
(bad)
jno
add
aaa
mov
jp
lds
inc
outs
cmp
imul
pop
xor
and
movs
jo
les
out
add
mov
sub
lods
xchg
scas
mov
enter
imul
cmp
test
addr16
scas
sub
cs
xchg
retf
(bad)
hlt
test
loopne
inc
ins
mov
or
clc
xchg
(bad)
and
add
scas
xchg
loop
or
mov
push
add
sbb
cmps
fldpi
js
xchg
stc
sub
sbb
pop
fdivr
adc
mov
inc
pusha
loop
shl
adc
ror
mov
jne
pop
mov
push
call
(bad)
xor
jo
shl
aam
add
fist
jl
rcr
dec
and
out
xor
nop
sub
pop
and
std
and
pop
(bad)
test
cdq
push
add
xor
sti
fs
(bad)
add
mov
mov
and
add
mov
xchg
fidiv
mov
push
mov
xchg
call
mov
std
mov
inc
sbb
mov
jg
mov
jns
adc
outs
outs
imul
out
inc
pop
loop
pop
imul
aam
retf
add
lods
pop
ja
(bad)
fld
retf
neg
popa
mov
jbe
add
popa
loope
cmp
mov
jnp
pushf
sbb
and
pop
jecxz
push
add
sub
pop
add
inc
adc
into
mov
push
stc
(bad)
outs
cld
xor
cld
scas
retf
or
xor
loop
adc
mov
fdivr
fdiv
div
mov
jge
sub
cmps
in
dec
imul
ret
cmp
(bad)
outs
push
sub
mov
inc
push
mov
pop
(bad)
aaa
ret
test
je
push
bound
retf
dec
es
xchg
xchg
std
retf
popf
hlt
xchg
inc
lahf
(bad)
and
or
mov
int
or
sbb
out
call
push
xor
cld
stos
mov
xchg
jae
in
and
stos
scas
pop
stc
and
std
icebp
loop
in
daa
push
xor
and
xchg
xchg
sar
dec
xchg
dec
in
sub
push
loop
hlt
mov
dec
mov
ss
ss
pop
push
push
jl
add
call
sbb
shl
sub
or
mov
mov
dec
mov
sub
cmc
add
add
ror
cmc
xor
dec
out
add
and
mov
push
pop
je
iret
push
lock
scas
cmp
jo
hlt
and
sbb
loop
or
jnp
clc
pop
test
mov
adc
in
xor
cmp
ins
(bad)
dec
jnp
in
pop
mov
lahf
xchg
mov
and
jle
mov
dec
jnp
dec
aaa
push
mov
ins
scas
aaa
mov
rcl
jg
add
push
imul
(bad)
ja
aam
mov
fist
nop
xchg
mov
and
out
push
movs
xchg
mov
add
cmp
jmp
cmp
retf
mov
mov
pusha
ins
lods
xchg
push
(bad)
and
and
loopne
inc
and
sti
dec
scas
or
xchg
frstor
sub
pop
imul
inc
pop
inc
test
xchg
mov
pushf
mov
xor
mov
jmp
shr
out
mov
sbb
add
dec
inc
cmps
mov
add
gs
mov
sub
cmps
jle
(bad)
fbld
cmc
mov
movs
mov
fpatan
fiadd
mov
inc
lods
or
call
push
(bad)
pmullw
(bad)
retf
adc
mov
mov
xor
loope
or
mov
push
or
cmp
mov
mov
pop
push
jne
shr
(bad)
jge
arpl
out
lahf
and
arpl
call
cmp
stc
push
ss
jb
scas
pusha
pop
imul
out
cmc
cwde
xor
xor
rcr
retf
jecxz
pop
cs
mov
cli
mov
call
xchg
scas
xchg
ins
adc
int
rcr
inc
pushf
mov
enter
cmc
cmp
jecxz
(bad)
jae
pop
and
mov
mov
jbe
cmp
dec
out
cmp
sub
mov
out
out
rcr
ret
mov
repz
inc
test
add
fwait
jge
mov
jmp
xchg
leave
clc
movs
push
mov
out
fimul
ins
jbe
xor
iret
xor
mov
mov
cmp
inc
jbe
ja
mov
push
sbb
aam
clc
ss
dec
mov
pushf
dec
xor
push
mov
fwait
inc
cmp
mov
jmp
sub
les
rcl
jns
(bad)
sbb
and
(bad)
hlt
outs
int
repnz
push
mov
adc
add
stos
mov
scas
mov
cmp
es
in
pop
dec
mov
mov
xchg
rcr
js
loopne
mov
out
movs
mov
mov
hlt
adc
retf
xor
inc
call
or
mov
pop
(bad)
sti
dec
sbb
mov
pop
jne
cmc
movs
add
nop
and
or
popa
fcom
outs
add
shl
lahf
push
mov
cmps
push
retf
jg
outs
in
jb
nop
xchg
aam
push
jl
mov
pop
jb
or
push
pop
sar
mov
stc
(bad)
jecxz
pop
leave
mov
cmp
lock
aaa
shr
fwait
and
cmps
call
mov
push
xor
mov
dec
jg
lods
inc
ret
(bad)
out
shr
adc
mov
fcmove
pop
int
dec
cli
outs
pop
xchg
or
push
jg
scas
loopne
xor
icebp
jmp
enter
dec
dec
or
push
mov
cmps
xor
xchg
jmp
imul
push
jge
rcr
aas
stos
xor
aad
fist
adc
mov
js
jo
lods
icebp
pop
stc
jmp
cli
call
sub
xor
pop
or
int
lahf
xchg
(bad)
call
or
arpl
jecxz
cli
pop
mov
(bad)
sbb
cs
call
jecxz
xchg
out
mov
shr
mov
mov
and
add
dec
add
xchg
xchg
jbe
mov
imul
and
in
icebp
lods
xchg
sbb
mov
jo
xchg
(bad)
xchg
icebp
mov
rol
or
pushf
out
neg
xchg
and
mov
(bad)
sahf
lods
xor
inc
cmp
cs
ds
mov
mov
imul
call
xchg
jge
add
dec
xchg
mov
jns
push
dec
data16
jecxz
push
(bad)
stos
or
or
movs
xor
jg
das
pop
pushf
or
push
mov
rcl
cmp
sbb
jmp
dec
cmp
scas
imul
add
or
add
pusha
xor
ret
lds
stos
(bad)
jle
mov
dec
mov
leave
repnz
aas
test
pop
jmp
jmp
and
xchg
sub
bound
stos
je
bound
jo
retf
sub
inc
addps
lds
mov
xlat
adc
popa
sbb
xchg
jecxz
or
or
adc
mov
inc
aad
inc
jmp
je
cmp
jae
push
sub
nop
std
mov
mov
outs
aas
push
fnstsw
push
(bad)
inc
adc
inc
pand
mov
jo
pop
je
mov
nop
(bad)
adc
retf
cli
dec
pop
cli
or
mul
sti
call
cmp
mov
(bad)
pop
and
inc
push
xchg
fwait
jb
shl
or
and
out
das
mov
fsub
iret
inc
fwait
rol
or
mov
ret
sti
fidiv
popf
test
call
jmp
mov
xchg
sub
xor
pushf
dec
and
push
sbb
xchg
fld
sar
outs
int3
mov
mov
dec
mov
pop
mov
icebp
dec
and
xchg
cs
hlt
adc
ins
aas
or
jg
jmp
xchg
leave
in
adc
sbb
add
jno
xor
inc
mov
outs
aad
adc
scas
into
dec
lods
pop
neg
pcmpeqd
cs
lahf
inc
sar
retf
leave
cmp
cdq
(bad)
xor
sub
lock
imul
inc
pop
pop
scas
or
and
(bad)
adc
push
inc
inc
fsub
mov
and
rep
imul
mov
mov
js
icebp
ficomp
pop
jne
xchg
xchg
ret
mov
ins
and
(bad)
sub
mov
arpl
mov
bound
jle
push
cli
dec
cld
adc
jmp
xor
mov
js
adc
rcr
cld
out
sbb
enter
xchg
ret
outs
iret
adc
and
neg
xlat
mov
jbe
dec
sub
sbb
cwde
xchg
jnp
inc
cmp
xor
sti
outs
addr16
cwde
addr16
leave
and
push
pop
int3
(bad)
fadd
cli
mov
jmp
into
ins
stos
adc
sbb
xor
aam
mov
sub
cmps
dec
mov
add
lock
mov
dec
inc
jnp
pop
cmp
retf
stc
stos
push
sti
sbb
jecxz
pushf
outs
pop
mov
cld
ss
arpl
loope
xor
cmp
inc
jp
mov
leave
inc
or
inc
into
push
mov
xchg
bound
cmps
retf
push
cmp
out
aaa
inc
(bad)
jns
mov
xor
loope
fdivr
mov
retf
and
inc
pop
pop
mov
movq
ret
out
ins
adc
inc
pusha
sub
in
mov
add
add
xor
push
jns
xchg
sti
daa
jmp
add
mov
loop
mov
pop
outs
dec
mov
movntq
daa
mov
and
mov
inc
sti
shl
jle
fstp
dec
and
outs
sbb
bnd
add
repnz
or
outs
xchg
push
pop
push
xor
call
ss
(bad)
cld
scas
mov
enter
imul
sub
pushf
imul
mov
jg
pop
jle
inc
jns
jne
ficomp
and
sbb
out
inc
add
or
push
and
rcl
mov
pop
outs
sbb
daa
push
leave
inc
or
stos
and
stc
sbb
jns
pushf
adc
mov
adc
jmp
mov
cmp
jno
xor
inc
hlt
popf
repz
adc
add
cmps
aad
int3
mov
fidivr
jae
gs
cmc
sbb
rep
fbld
fadd
(bad)
jmp
ss
imul
(bad)
addr16
cs
mov
add
add
loopne
idiv
mov
fsub
mov
cdq
cmc
iret
mov
sub
out
pusha
and
cld
and
push
push
jmp
mov
in
call
pusha
xchg
pop
and
and
and
jl
mov
or
jmp
and
xor
out
ins
ins
addr16
add
pusha
lahf
xchg
out
and
cmp
inc
push
mov
xchg
adc
mov
mov
fimul
jne
loope
in
pop
jno
mov
push
ins
mov
aaa
mov
or
(bad)
cmp
ret
add
jle
enter
push
js
xor
idiv
lods
xchg
repz
jl
repnz
(bad)
cld
and
jmp
stos
dec
jbe
or
pop
cwde
mov
pop
scas
dec
out
pop
pop
or
fxch
mov
movs
pop
add
sti
ins
xchg
sbb
mov
sub
outs
jae
sti
mov
jnp
cld
adc
jne
push
xor
and
jge
mov
mov
lock
imul
jno
mov
mov
shl
mov
loopne
pop
and
and
imul
lods
std
xchg
test
mov
add
mov
loopne
shl
adc
push
sub
loopne
mov
clc
repz
push
leave
js
jmp
out
pusha
inc
jmp
jne
fwait
sbb
idiv
add
stos
cmp
pop
and
outs
outs
setns
(bad)
sub
cmp
std
dec
sub
cmp
dec
xchg
rol
dec
xchg
test
sub
mov
cmc
mov
sti
scas
mov
repnz
in
sbb
lahf
mov
shr
imul
xchg
(bad)
sub
jge
call
aad
and
out
(bad)
fisttp
and
mov
adc
retf
out
(bad)
ja
scas
add
cdq
xor
neg
inc
inc
iret
or
xchg
mov
test
dec
js
dec
movs
mov
or
ret
jns
addr16
nop
and
les
mov
jnp
ins
(bad)
mov
ret
push
pusha
ret
scas
xchg
mov
xchg
ds
pop
mov
mov
retf
lock
shr
xor
outs
jb
sub
push
movs
fdivr
xchg
mov
jno
leave
daa
pop
jbe
xchg
mov
(bad)
shr
fwait
(bad)
xchg
fwait
jns
and
bound
retf
mov
inc
sub
lock
push
rcr
ins
adc
lods
push
aad
push
push
cld
push
add
addr16
mov
sbb
dec
jp
(bad)
repz
ds
cmp
cmp
xchg
ss
adc
add
loop
fld
pop
and
fisttp
mov
xor
sbb
mov
jbe
push
mov
rcr
and
movs
icebp
xchg
and
push
push
lods
pop
mov
cmp
adc
jmp
pop
cmp
aad
rcr
push
dec
dec
inc
(bad)
jno
inc
stc
mov
(bad)
clc
popa
loopne
(bad)
repnz
clc
lock
(bad)
fld
aad
dec
sar
stos
dec
aas
add
or
movs
aas
mov
ret
add
dec
mov
dec
imul
adc
scas
(bad)
in
imul
mov
(bad)
shr
jnp
movs
bound
dec
adc
aam
mov
sbb
xchg
mov
or
dec
xchg
in
xchg
jne
or
inc
mov
add
pop
push
cmp
mov
out
or
lock
cli
sar
cmp
or
pop
fs
adc
xchg
sub
outs
mov
std
pusha
pusha
cli
popf
jl
sub
or
arpl
and
inc
sub
xor
and
xchg
add
test
jg
jae
sbb
sbb
test
or
push
fsub
xor
stos
cmp
sbb
fmul
and
or
out
adc
std
(bad)
in
loopne
aas
call
jns
push
xor
push
adc
pop
call
clc
pusha
xor
dec
add
es
adc
add
loope
ret
aas
and
in
dec
inc
pop
nop
mov
mov
sti
xchg
mov
sub
and
adc
(bad)
push
mov
mov
jbe
or
sbb
in
sub
jle
xor
pop
sub
xchg
xchg
mov
popf
fidivr
loope
div
pop
call
stos
sub
test
(bad)
inc
jp
xchg
sbb
lods
lock
xchg
or
pop
fstp
aas
dec
icebp
in
and
mov
inc
sbb
add
daa
repnz
rol
sub
pop
push
and
(bad)
(bad)
fdivr
out
out
pop
jno
jecxz
sbb
add
cs
xchg
push
imul
movs
imul
inc
adc
push
ret
ds
and
cmps
imul
(bad)
(bad)
and
imul
inc
mov
imul
xchg
repnz
fisubr
hlt
int
popf
popa
pop
pop
push
into
cli
xchg
pop
ret
mov
shr
add
leave
xor
jno
fs
mov
fs
out
jbe
pop
cmp
add
lods
dec
call
pop
mov
sbb
ja
jnp
sub
xchg
mov
das
add
jl
call
ins
je
repz
jecxz
pop
sub
jecxz
add
lea
cmp
pusha
movs
mov
cmc
mov
(bad)
rol
das
pop
mov
and
push
fdiv
jmp
leave
imul
add
ror
out
mov
or
adc
or
cmc
jmp
or
js
xchg
pop
jae
test
sbb
dec
add
mov
inc
jb
nop
jo
or
ret
int3
dec
fdiv
push
mov
out
test
shl
popf
or
dec
adc
(bad)
nop
out
cmps
int
outs
jns
lods
xchg
or
mov
jmpw
xchg
xor
and
ds
leave
push
mov
inc
nop
jb
push
test
jecxz
test
mov
les
mov
(bad)
in
fistp
jo
ret
pop
sub
inc
clc
jb
in
inc
push
jp
jge
jbe
sub
dec
sahf
nop
ja
xchg
test
add
inc
jnp
push
push
mov
imul
sar
xchg
jne
aaa
cmp
or
gs
pop
jg
mov
xchg
push
hlt
(bad)
fsub
or
movs
div
fnstsw
out
xchg
cs
ins
dec
mov
mov
cdq
cmp
xchg
mov
daa
mov
out
loop
sbb
enter
or
push
fmul
fsub
cmp
sub
dec
(bad)
test
int
mov
je
outs
cmp
jg
or
sub
xor
dec
pop
es
(bad)
mov
mov
out
cli
(bad)
sbb
mov
add
jmp
push
leave
xor
lea
mov
dec
jecxz
inc
push
daa
xchg
ret
aad
jmp
clc
daa
pop
sub
loope
fdivr
adc
cmps
jnp
popa
xor
out
loop
cs
push
push
out
mov
in
movs
movs
scas
mov
pop
stc
pop
call
int3
in
push
adc
mov
stos
xor
int3
sbb
pop
dec
mov
jmp
push
pop
pop
(bad)
mov
in
jp
jmp
xlat
mov
int3
scas
add
sbb
sbb
popa
inc
sub
and
mov
fs
jo
mov
imul
inc
and
inc
sbb
push
out
lods
cli
push
ss
jnp
jo
xchg
add
push
mov
push
jmp
mov
call
cdq
push
aam
stos
jns
jno
loop
fwait
imul
ins
test
cwde
jmp
outs
and
lods
outs
adc
fmul
xchg
jle
cdq
imul
sbb
cmp
loop
inc
retf
js
retf
fnstsw
xchg
aam
cmps
xchg
mov
push
ja
je
pop
neg
adc
add
leave
mov
mov
repz
idiv
gs
retf
inc
cmp
push
cmc
and
inc
mov
mov
outs
pop
mov
(bad)
and
mov
aam
leave
pop
and
adc
popf
fiadd
(bad)
jbe
jns
ss
pop
xchg
sbb
add
(bad)
ja
and
jno
and
cwde
adc
sub
push
mov
mov
jge
dec
pusha
mov
sub
mov
and
daa
push
aaa
xor
pop
push
in
arpl
adc
sub
jge
mov
in
stc
shr
das
ins
mov
(bad)
mov
(bad)
ss
push
pop
push
xor
mov
adc
mov
stos
mov
xchg
pushf
pop
jp
push
mov
mov
mov
adc
jg
mov
mov
pop
and
test
mul
add
(bad)
xchg
or
jae
adc
jmp
jo
test
out
xchg
fdivr
or
mov
jns
ret
shl
scas
fisttp
out
icebp
pushf
pop
inc
lods
inc
and
pop
int3
out
add
mov
inc
jne
(bad)
int
ja
sub
cdq
enter
cld
sbb
adc
mov
cmp
adc
inc
cmps
add
test
jae
out
push
cmps
ins
jp
jbe
sbb
inc
or
sub
dec
push
dec
adc
adc
lods
mov
or
jb
sti
nop
inc
sbb
ficom
(bad)
push
into
jae
cmp
push
dec
adc
xor
add
ss
(bad)
pop
lds
into
pop
lods
retf
jmp
lods
ins
lods
sub
push
jmp
jle
inc
dec
sbb
sbb
sub
sbb
mov
jmp
sbb
and
xlat
in
lahf
in
movs
popa
jbe
add
sbb
(bad)
and
mul
in
sti
xlat
xchg
sub
cdq
pop
fsubr
das
push
popa
and
dec
bound
int
fsubr
pop
lods
mov
and
xlat
outs
inc
and
adc
pop
popf
aaa
xlat
fmul
push
addr16
xchg
mov
cmp
xchg
xor
mov
cmp
jae
cli
fidiv
xor
out
(bad)
cs
jmp
test
test
scas
jmp
inc
pusha
std
mov
call
(bad)
sti
and
dec
test
call
test
sub
mov
adc
popf
fdiv
int3
xchg
pop
lahf
jns
hlt
fdivr
pop
xchg
pop
jne
cmp
mov
pop
cmp
jno
fwait
popa
add
mov
sbb
cmp
loopne
(bad)
pop
inc
test
(bad)
jle
rcr
cmp
jmp
add
aam
sbb
(bad)
xchg
call
test
add
in
lods
mov
dec
xchg
mov
fimul
(bad)
(bad)
fisttp
dec
loopne
mov
mov
ret
test
repnz
mov
pushf
psubusb
mov
or
mov
xor
ficomp
retf
or
adc
sbb
inc
add
mov
fst
rol
push
stos
add
aas
ds
in
icebp
xchg
(bad)
mov
cmp
jecxz
test
out
and
push
ins
lea
sahf
mov
retf
outs
xchg
sbb
inc
and
(bad)
jnp
rcl
movs
xchg
into
xor
jo
stos
push
adc
dec
mov
jne
xchg
or
cmps
call
inc
mov
and
mov
(bad)
leave
xor
jecxz
int
xchg
(bad)
jmp
loop
jno
lahf
or
test
popf
movs
in
stos
or
jbe
adc
cmp
arpl
test
push
jnp
lock
leave
aad
dec
add
pop
jo
xchg
outs
aad
das
dec
repz
rol
outs
sti
dec
adc
pop
cwde
mov
fwait
pop
popa
xchg
addr16
push
out
inc
ins
test
fistp
sbb
mov
jp
(bad)
hlt
pop
cmps
scas
adc
popf
pop
sbb
sar
dec
push
jl
lea
cmp
xor
nop
es
pushf
dec
cmp
fadd
fadd
leave
in
jmp
(bad)
rol
aas
adc
adc
mov
aas
mov
sbb
push
sbb
leave
mov
pop
jae
adc
or
push
(bad)
sub
inc
dec
imul
xor
sahf
add
out
arpl
sub
sbb
in
or
repnz
sub
add
jno
test
or
cmp
adc
lods
ret
add
scas
ins
cmp
nop
and
mov
adc
sub
pop
jl
mov
sti
xor
test
or
mov
sub
pop
adc
outs
jo
rcr
popf
test
adc
in
sbb
arpl
push
repz
pop
scas
push
dec
loop
movs
gs
popf
shl
int
cmps
scas
sti
jmp
sar
jp
push
add
xchg
leave
mov
pop
imul
mov
or
mov
push
ins
pop
cmps
fcomp
cli
inc
or
cmp
push
xor
jne
(bad)
shr
pop
ss
in
mov
mul
and
stos
and
dec
mov
repz
les
inc
mov
aad
push
stc
sub
data16
jecxz
dec
mov
fldcw
xor
sti
xor
int3
or
into
xchg
jecxz
stos
push
jl
ins
inc
inc
inc
sub
loope
in
fsub
test
xchg
mov
dec
mov
(bad)
pop
pop
cmp
retf
int
ins
add
pop
and
jno
mov
sub
sbb
aad
scas
aam
pop
add
cdq
inc
push
xchg
(bad)
retf
scas
push
paddb
or
lods
imul
enter
shr
sub
in
pop
popf
cli
adc
outs
mov
fs
add
push
add
test
stos
inc
pop
push
mov
repz
(bad)
out
idiv
cli
loope
sahf
push
rol
ds
(bad)
cmp
leave
leave
ins
test
icebp
xchg
enter
cmp
fwait
lds
movs
inc
push
test
mov
ret
push
ss
cmp
mov
push
and
or
xchg
xchg
aad
mov
adc
cmp
ins
cs
inc
(bad)
push
aad
and
inc
nop
lods
or
adc
in
push
sub
or
leave
push
stos
inc
mov
into
lods
mov
(bad)
mov
add
out
inc
cmp
cmp
push
movs
hlt
call
lock
cmp
ins
dec
adc
adc
xor
or
das
push
hlt
(bad)
pop
mov
or
ja
aaa
ins
mov
mov
nop
xchg
jg
dec
dec
loopne
jp
lds
ror
scas
add
hlt
cmc
sbb
sar
cdq
imul
mov
add
push
sub
dec
bnd
fist
ins
ins
mov
adc
sbb
(bad)
sbb
(bad)
stos
stc
mov
jmp
lods
inc
frstor
sub
sbb
mov
arpl
sbb
jmp
xchg
jnp
sahf
mov
cld
out
mov
test
adc
fadd
shl
sti
add
je
push
call
in
ror
fbld
pop
aas
pop
lods
sti
push
push
dec
adc
mov
sbb
pushw
adc
fbld
mov
push
adc
mov
ds
push
inc
aad
(bad)
fsubr
mov
lock
shl
iret
pop
bswap
mov
ret
dec
outs
ret
out
jg
mov
add
jl
sti
jno
lahf
mov
push
enter
in
inc
and
ins
mov
call
pusha
mov
add
xchg
push
out
(bad)
outs
jnp
push
(bad)
(bad)
jmp
or
in
lahf
jo
xchg
test
sar
push
ror
cmp
ins
shl
mov
shl
sbb
loopne
popa
mov
xor
rcr
mov
or
lds
sub
movs
sub
jmp
test
fs
das
out
push
dec
fwait
adc
lods
xchg
push
dec
fcom
dec
shl
or
sahf
clc
test
add
adc
pop
sbb
or
inc
xchg
nop
loopne
jle
mov
push
jno
jmp
aas
pop
jne
inc
cwde
mov
push
cmp
jmp
xor
cmp
push
add
sbb
fucomi
and
mov
(bad)
sub
cmp
lods
xor
lods
inc
sahf
jg
pop
fbstp
int3
and
adc
push
jmp
std
sub
fstp
aad
pop
rol
sub
pop
mov
push
push
dec
hlt
(bad)
or
lds
dec
fsubr
sbb
jle
jnp
lock
push
and
jno
xchg
shr
in
or
or
neg
(bad)
(bad)
inc
sbb
jbe
adc
sub
shr
mov
and
pop
jno
inc
call
lahf
or
in
mov
cmp
cdq
jecxz
pop
ins
lock
ds
int3
sub
fbstp
mov
daa
shr
push
push
pop
stos
test
jae
pushf
fs
fimul
(bad)
std
dec
mov
sbb
fist
and
mov
mov
fdivrp
adc
fisub
inc
lea
addr16
in
or
aas
in
mov
sbb
movs
xor
or
sbb
mov
push
jg
jl
(bad)
sahf
out
or
xor
arpl
imul
cmps
sbb
ret
daa
movs
ins
gs
adc
sbb
js
(bad)
int
mov
xchg
mov
add
cwde
cmp
imul
cmps
mov
in
adc
xchg
add
inc
pushw
xchg
hlt
push
mov
enter
ret
sbb
sub
and
sbb
sar
dec
xchg
mov
inc
cmp
js
ss
aas
jge
xchg
aad
mov
daa
arpl
cmp
inc
pop
dec
sahf
lahf
adc
mov
xchg
cmp
xchg
icebp
or
(bad)
dec
aam
sub
fiadd
jmp
push
xor
sar
pop
(bad)
or
(bad)
nop
imul
aam
mov
(bad)
sub
cld
scas
faddp
enter
or
frstpm(287
xor
je
jne
test
hlt
xlat
sbb
fadd
sbb
js
xor
sbb
stc
ss
mov
mov
push
pushf
sub
leave
cmp
popa
pop
push
or
cmps
test
mov
sar
leave
jmp
bswap
add
inc
in
sbb
xor
jnp
dec
mov
cwde
aad
ret
pop
cwde
(bad)
js
jnp
pop
fs
hlt
jl
popa
pop
cmp
int3
jge
cmp
test
sbb
stos
call
lock
movs
test
outs
xor
dec
mov
cmps
dec
adc
sub
and
mov
addr16
loop
retf
test
out
popa
xor
ret
pop
fst
stos
push
jecxz
lods
push
daa
fstp
push
dec
retf
pusha
fld
outs
or
or
mov
add
in
retf
(bad)
jmp
sahf
leave
js
or
scas
loope
sub
(bad)
adc
pop
sub
mov
movs
scas
mov
into
sbb
fdivr
add
mov
mov
dec
pop
push
into
mov
dec
mov
inc
push
aad
cmp
mov
xchg
jecxz
jle
movs
sub
push
stos
movs
arpl
lods
cdq
int
retf
mov
mov
fdivr
cs
inc
cmps
imul
cmp
inc
daa
test
int3
push
sbb
cwde
mov
popf
addr16
or
mov
movs
jmpw
push
jmp
sbb
mov
out
aad
or
aam
fwait
cli
xchg
aad
jnp
jmp
ins
push
cld
mov
sar
add
push
je
leave
std
test
jne
xor
sub
test
push
scas
movs
sub
pop
gs
aad
xor
sbb
shl
and
daa
scas
adc
mov
addr16
fs
leave
cmp
add
in
outs
sub
add
push
mov
pushf
inc
jl
cmp
in
into
ja
ja
jns
cmc
loope
out
and
jo
add
jb
jmp
mov
jbe
das
dec
inc
or
ror
jo
or
inc
inc
sti
adc
retf
cdq
dec
sbb
jo
mov
aam
push
imul
inc
addr16
inc
idiv
or
pusha
inc
cli
jo
add
and
mov
jne
or
aaa
(bad)
sub
nop
jmp
dec
mov
mov
fcmovnbe
jg
pop
mov
test
test
push
adc
sbb
push
push
outs
cmps
pushf
test
and
xor
xchg
pop
pop
fdiv
movs
nop
xchg
jp
in
sub
push
ret
cwde
xchg
ins
sub
xchg
ret
jl
pop
mov
pop
dec
push
stc
(bad)
std
sti
fst
sub
jbe
mov
ja
pop
dec
popf
pop
rol
sub
or
jecxz
or
fwait
xchg
jmp
into
inc
push
inc
xchg
dec
adc
(bad)
pop
repz
add
int
dec
std
sub
sub
shl
(bad)
iret
daa
xchg
mov
and
loope
mov
xor
inc
push
mov
shr
xor
push
clc
cmp
hlt
mov
adc
push
xchg
adc
lahf
call
sub
cmc
aam
fdiv
cli
mov
xor
mov
mov
mov
or
sub
fidiv
in
cld
mov
adc
adc
dec
test
mov
cwde
push
(bad)
out
mul
xor
mov
xchg
std
inc
in
cmc
or
sub
xchg
ror
xor
xor
addr16
cmc
or
cdq
test
mov
arpl
daa
pop
mov
sahf
cmc
inc
aad
ror
sti
or
sbb
call
push
adc
sbb
xor
inc
inc
xchg
push
push
hlt
xor
in
ss
add
and
in
out
mov
aas
(bad)
enter
sub
(bad)
fidiv
loopne
jmp
pop
inc
jl
push
shl
xor
inc
loopne
push
jae
jecxz
cmps
(bad)
es
inc
rcr
jecxz
pop
push
or
mov
dec
ja
out
xchg
mov
fisub
and
add
mov
pop
cmps
test
xlat
or
dec
aas
stos
xor
jle
push
loop
in
call
scas
leave
lahf
sub
call
test
xchg
sub
mov
aad
and
mov
(bad)
data16
mov
inc
enter
mov
mov
mov
fcomp
mov
cld
mov
sub
mov
add
xchg
cmp
fwait
xor
or
add
ja
pop
sar
ret
dec
jmp
pop
cmps
sbb
mov
loope
mov
inc
rcl
mov
iret
aad
mov
inc
shl
lods
inc
dec
dec
scas
movs
nop
jmp
fadd
sub
cmp
pop
cld
cwde
mov
fidiv
outs
ds
xchg
cwde
mov
push
adc
int
mov
std
pop
jne
sbb
or
mov
xor
xchg
xor
lods
call
mov
stos
push
mul
add
push
dec
jecxz
jmp
inc
retf
jmp
mov
pop
mov
jle
jno
retf
jnp
push
sub
and
(bad)
and
inc
xor
repnz
adc
xor
sti
call
std
(bad)
dec
mov
mov
or
lods
cld
fimul
in
ret
retf
mov
jl
add
inc
je
add
cs
sbb
mov
cli
movs
mov
xor
xchg
fs
cmp
inc
xor
in
loop
cmp
lods
sbb
pop
sub
das
ret
cmp
sub
push
gs
outs
retf
aaa
jo
inc
cmp
mov
add
adc
adc
cmps
pop
xchg
pop
push
push
adc
out
rol
xchg
sub
add
test
sbb
cmc
loopne
sbb
mov
cmp
wbinvd
and
xchg
push
loopne
or
cld
ds
ret
dec
sahf
xchg
pop
and
addr16
movs
ja
cmp
xchg
imul
adc
shr
out
pop
xchg
rol
push
idiv
push
xchg
jmp
movs
retf
retf
pop
xchg
jecxz
loopne
inc
test
mov
mov
retf
cmps
test
pop
ins
fldcw
sub
aad
out
cmp
sbb
add
out
jmp
dec
mov
ret
test
jge
cmp
jmp
cld
retf
mov
push
mov
jmp
sbb
push
in
je
stos
and
mov
(bad)
mov
and
into
in
(bad)
dec
neg
add
jp
or
iret
or
adc
into
inc
jmp
or
fwait
dec
int
mov
add
jno
mov
add
push
cmp
cli
outs
or
or
mov
std
jmp
adc
inc
or
ret
retf
(bad)
fbld
sub
push
mov
dec
push
in
sbb
xor
sti
pop
pushf
mov
add
lods
fimul
inc
(bad)
pop
out
pop
ss
inc
mov
mov
push
mov
dec
stc
and
jg
call
das
test
lea
int
fmul
jb
xor
dec
sbb
xchg
mov
push
inc
pop
push
push
not
dec
and
xor
xchg
pop
(bad)
and
gs
(bad)
into
int
push
mov
dec
xchg
push
jnp
shl
and
mov
mov
sub
movaps
into
fs
jp
or
pop
jbe
jg
hlt
mov
bound
push
mov
jp
outs
leave
jbe
add
(bad)
sbb
stos
fs
sar
sbb
mov
push
jmp
inc
ret
pop
sub
std
movs
sbb
sahf
test
and
pop
or
js
loopne
stos
add
movs
pop
push
pop
pusha
popf
pop
and
mov
mov
or
lods
movs
mov
in
mov
sahf
enter
and
fwait
(bad)
jb
xchg
movs
and
js
popf
xchg
out
sub
daa
out
cmp
(bad)
imul
push
jno
adc
jecxz
pop
into
mov
push
inc
or
call
data16
fiadd
imul
outs
sbb
sbb
nop
stos
add
and
dec
pop
sub
loop
jle
pop
inc
pop
push
cmp
or
push
mov
fwait
arpl
dec
jae
hlt
rcl
sar
das
sbb
fstp
add
push
js
sbb
mov
inc
and
sbb
cmp
lods
ds
pushf
mov
rcr
(bad)
fdiv
jne
in
mov
(bad)
scas
mov
push
fsubr
jbe
mov
fcmovnb
cmp
xchg
cdq
dec
dec
in
push
clc
xchg
aam
dec
iret
or
ds
enter
imul
mov
shr
ins
movs
aad
xchg
frstor
jbe
cli
addr16
or
xchg
jmp
cli
dec
pop
cmp
mov
ds
repz
push
movs
sub
and
adc
repz
jl
iret
mov
mov
inc
mov
lahf
sub
mov
jo
ins
xor
mov
jg
mov
mov
xor
mov
addr16
dec
enter
push
sbb
add
ss
fcomp
mov
pop
(bad)
loop
mov
lahf
std
adc
push
add
ds
pushf
jg
fisttp
jo
in
mov
cwde
mov
lods
dec
cld
sbb
pop
and
pop
mov
es
xlat
rcr
not
popf
(bad)
jae
in
ins
fs
cmp
or
mov
ins
(bad)
push
pop
fcomp
jno
jg
movsx
xor
(bad)
test
sbb
pusha
dec
xor
cdq
shl
ds
cmp
push
sbb
fadd
sbb
add
adc
sub
and
fisttp
lds
xchg
cmps
mov
fld
and
ins
movs
push
ins
arpl
aas
into
or
imul
xchg
(bad)
jg
arpl
scas
xbegin
dec
dec
dec
iret
ror
jnp
mov
cmp
cli
fcomp
std
retf
fisttp
pop
dec
loope
inc
inc
xor
jl
dec
and
rol
push
mov
cli
jno
ja
cdq
mov
test
ret
sbb
(bad)
repz
idiv
or
mov
jmp
scas
movs
dec
(bad)
jge
cmp
fwait
addr16
mov
inc
mov
dec
stc
inc
enter
and
xchg
test
movs
fs
addr16
mov
pop
xchg
stos
leave
mov
pop
retf
mov
repnz
pop
repz
push
and
sahf
dec
movs
fs
xchg
sbb
push
jge
sar
jl
mov
inc
add
imul
jae
rcr
mov
test
(bad)
fsubrp
cmc
pop
shl
rcr
mov
push
sub
xlat
mov
call
add
or
pop
or
sbb
push
lahf
xchg
mov
fwait
jae
xchg
and
or
lds
push
loop
js
or
mov
mov
xchg
(bad)
and
enter
stc
dec
(bad)
mov
sbb
pop
and
stc
jmp
stc
xor
fwait
(bad)
jle
mov
push
mov
jne
dec
push
dec
xor
inc
add
adc
jmp
inc
lock
(bad)
imul
shr
es
add
cmp
cdq
inc
fld
pop
push
cmc
pop
add
inc
and
mov
daa
retf
xchg
iret
gs
mov
push
test
dec
fst
dec
mov
inc
ficomp
ror
xor
lods
xchg
pop
dec
ret
xchg
nop
or
and
(bad)
dec
movs
mov
jne
call
sbb
in
scas
hlt
aad
lea
js
ss
ficomp
fucom
push
and
outs
pop
test
ins
push
ins
push
ins
jecxz
adc
loop
pop
mov
call
adc
jnp
sub
shl
and
(bad)
lahf
mov
aad
in
and
rcl
fsub
aad
inc
pop
dec
in
cmp
fsubrp
ret
lahf
movs
add
in
sub
sbb
out
jae
shl
push
and
mov
iret
nop
xchg
cmp
(bad)
adc
sbb
in
jl
fnstsw
les
das
sub
arpl
js
mov
mov
mov
mov
les
and
ss
(bad)
cmp
push
xor
inc
lds
(bad)
shl
jl
or
aam
pop
or
ficomp
fcom
call
mov
adc
mov
sahf
mov
enter
cmp
cmp
test
into
pusha
test
adc
cs
dec
(bad)
cmc
movs
mov
fisub
sub
cmps
fsubrp
adc
fild
movq
push
sub
ror
stos
lods
icebp
icebp
adc
xor
loop
add
ret
fistp
xchg
and
out
ror
aas
fisttp
pop
(bad)
jmp
push
dec
lock
mov
bound
inc
sbb
mov
push
stos
pushf
mov
dec
dec
pop
cmp
dec
fs
dec
jne
int
xchg
ss
ds
jmp
dec
out
shl
mov
jecxz
dec
js
cmp
mov
jmp
mov
outs
imul
xor
aam
cld
sbb
sti
pop
xor
cs
push
add
(bad)
fld
jge
inc
and
cdq
cli
retf
shr
div
out
mov
jg
cdq
jge
fs
cmp
ret
call
fld
or
aaa
push
div
push
(bad)
pop
lahf
lods
(bad)
mov
mov
lods
out
mov
xchg
or
xchg
mov
inc
sbb
bound
sbb
and
ret
mov
cdq
adc
push
imul
inc
mov
or
mov
dec
hlt
mov
out
adc
dec
mov
sub
pop
xor
xchg
test
sti
mov
pop
adc
retf
mov
(bad)
pop
test
aad
add
retf
dec
mov
adc
aad
fiadd
push
mov
jg
popa
push
pop
pushf
dec
jp
aad
jg
mov
out
repz
lds
and
push
jmp
cwde
rcr
jns
lods
jmp
jg
sbb
movs
cld
push
cmps
mov
enter
sbb
mov
pop
and
mov
sbb
add
xchg
push
lock
add
mov
push
xor
pop
bnd
lahf
sub
jno
or
jnp
jg
cmp
loopne
xor
add
cmp
adc
pop
jp
iret
ret
out
repz
xchg
shr
shl
inc
aad
ror
add
iret
out
repz
xchg
out
nop
push
mov
in
pushf
fnstsw
jne
add
stos
jno
or
in
mov
fild
cmp
cld
push
jno
jle
push
(bad)
shr
call
cs
fst
xor
push
adc
dec
int3
push
(bad)
(bad)
ret
bound
mov
pop
inc
push
bound
aad
repz
pop
mov
iret
call
lea
inc
lods
jo
mov
add
imul
outs
loop
test
adc
mov
push
test
call
cmps
jno
imul
xor
sub
icebp
fistp
sbb
ja
stos
std
sub
call
das
xor
xor
movs
aaa
cmps
inc
or
xor
jl
or
push
clc
jle
jb
jle
rcr
cdq
ins
ret
loopne
iret
dec
(bad)
data16
ds
or
xchg
int3
push
mov
pushf
mov
xlat
fs
jecxz
js
push
in
jbe
jne
mov
ror
mov
pop
push
xchg
icebp
stos
out
adc
das
out
inc
adc
adc
adc
dec
(bad)
shl
pop
or
xor
mov
jl
dec
shl
pusha
sbb
jl
inc
cmp
test
inc
xor
lods
scas
pop
xor
shr
inc
jne
push
inc
js
add
sbb
jp
xchg
mov
test
repnz
cld
jmp
xchg
xor
push
or
xor
sar
sub
cmps
mov
mov
inc
clc
add
out
pop
call
push
test
dec
and
in
retf
lods
cld
jecxz
loop
jns
add
mov
(bad)
daa
test
jmp
ror
sub
jno
fistp
jl
mov
push
sub
adc
mov
loope
add
leave
aam
mov
push
mov
pop
mov
das
lods
stos
cli
fimul
test
nop
out
xor
daa
or
pop
inc
inc
cmps
sti
add
jb
(bad)
fidiv
cwde
shl
clc
and
popf
fstp
call
xor
(bad)
mov
loopne
test
ror
push
jl
(bad)
push
add
adc
scas
push
push
cld
add
sti
mov
mov
test
ss
(bad)
out
loopne
cmps
push
mov
cmps
mov
jb
sbb
cwde
add
add
push
cmps
jo
adc
jmp
xor
jmp
push
gs
ror
mov
xchg
push
or
cmp
or
je
scas
retf
imul
ins
(bad)
cmp
mov
xchg
test
ss
mov
js
(bad)
sti
mov
fwait
scas
out
inc
outs
aas
or
(bad)
inc
dec
xor
fldenv
mov
gs
loopne
rol
jecxz
leave
rcl
jae
aam
lds
mov
and
mov
mov
xor
(bad)
out
rcl
adc
bound
out
add
xor
loopne
jge
and
mov
push
jae
add
(bad)
cmp
sbb
mov
leave
sahf
push
adc
(bad)
jmp
sbb
lods
adc
mov
or
mov
pop
mov
inc
mov
ins
fmul
pusha
fcmovne
cmp
lea
adc
sbb
mov
das
push
push
test
push
sub
mov
dec
test
sub
dec
leave
push
int
add
and
es
out
mov
sub
mov
mov
enter
push
mov
les
push
sahf
popf
pop
adc
push
mov
retf
push
sub
int
xor
sahf
push
cmp
in
and
mov
jg
and
fst
ret
pop
add
xchg
mov
mov
cmp
push
cmc
test
mov
mov
mov
ror
loope
sub
shl
out
or
or
mov
lock
push
mov
shl
retf
call
into
(bad)
xor
cmps
or
sar
push
aas
lock
into
push
in
or
stc
imul
mov
push
inc
jmp
stos
int
ror
add
ins
lahf
jnp
imul
xor
pop
loop
retf
pusha
xlat
dec
in
mov
lods
xor
jle
out
scas
push
stos
xor
push
leave
fcom
sub
add
jb
pop
retf
xor
fdivp
and
rcl
inc
xchg
popa
es
push
or
push
jo
call
int
out
stc
into
stc
nop
mov
inc
jle
stos
push
inc
es
and
dec
inc
pop
(bad)
stos
push
fidivr
lock
inc
imul
pushf
push
int3
push
mov
fsubr
mov
or
cmc
cwde
mov
push
(bad)
dec
inc
pop
dec
int
adc
scas
or
lea
push
mov
add
mov
xchg
movs
push
add
daa
dec
repz
inc
push
test
mov
mov
fadd
rcl
dec
push
fcmovbe
push
adc
mov
ror
pushf
sbb
mov
xchg
(bad)
lahf
movq
add
into
mov
or
aam
repnz
and
mov
and
jb
cwde
sbb
push
and
push
loopne
(bad)
repz
sbb
inc
mov
clc
mov
jp
xor
retf
add
and
(bad)
pop
arpl
or
ret
jae
mov
lock
add
ror
mov
mov
int
adc
add
jbe
int3
in
jp
pop
lahf
mov
lock
mov
cmps
addr16
add
rcl
stc
lds
bound
in
call
push
jbe
add
gs
out
xchg
je
cdq
dec
mov
sbb
add
or
sbb
pushf
add
fcomip
into
ja
mov
sbb
stos
pop
scas
jle
fst
xor
popa
cmp
or
pop
popf
fdivr
push
sub
mov
in
es
lea
xchg
push
dec
call
cmp
dec
sbb
mov
sub
adc
sti
repz
movs
out
scas
jl
xchg
and
xchg
inc
rol
(bad)
hlt
cmc
mov
(bad)
and
push
outs
mov
punpckldq
repnz
in
(bad)
adc
sbb
enter
or
dec
adc
dec
add
(bad)
test
arpl
lea
push
xchg
add
in
jnp
mov
ja
(bad)
je
scas
fwait
iret
inc
ret
push
in
test
jbe
sub
fwait
mov
out
cld
mov
xor
xchg
imul
in
mov
leave
xor
mov
gs
pushf
inc
dec
fisub
inc
fcmovnbe
mov
int
out
outs
dec
in
(bad)
mov
add
scas
jns
push
mov
movs
cmp
cmp
sti
and
pop
jno
aam
repz
hlt
div
addr16
outs
jno
out
xchg
sbb
cld
xor
cld
arpl
sub
inc
fucomip
mov
call
xchg
push
adc
retf
loopne
test
arpl
mov
sub
call
cld
call
(bad)
push
movs
cmp
ret
inc
es
(bad)
mov
sub
mov
mov
ins
xchg
add
std
stc
sub
jmp
or
mov
sub
cmps
pop
mov
movs
dec
mov
ins
or
lods
inc
jmp
fwait
cmc
and
mov
clc
test
fcomp
xor
cmp
add
in
mov
fucomip
fnstcw
cmp
dec
xchg
inc
aas
clc
xchg
int
add
or
xlat
mov
stos
inc
inc
lahf
popf
lahf
push
cli
adc
lds
call
pop
stos
pop
mov
sub
or
stos
mov
fwait
imul
in
aaa
jbe
fisttp
jne
sub
pop
clc
popa
out
retf
cwde
arpl
push
add
and
ins
jno
in
jecxz
lock
scas
into
and
call
or
add
cmps
add
dec
mov
mov
bound
xchg
push
jg
das
sbb
(bad)
lods
xchg
xchg
adc
xchg
mov
outs
inc
add
cmp
mov
int3
dec
es
mov
dec
xchg
cmp
push
js
stc
adc
xchg
mov
and
mov
lock
fsub
adc
(bad)
and
ins
jns
dec
inc
(bad)
sub
mov
sbb
and
mov
push
cmp
nop
ror
jo
sub
xchg
rol
and
inc
xchg
call
shl
lock
sbb
jb
arpl
imul
push
xchg
(bad)
and
dec
mov
std
cmps
pop
bound
pop
(bad)
aas
test
mov
jnp
push
add
(bad)
leave
jge
repz
mov
scas
push
loope
cmps
inc
inc
and
pop
and
sbb
rcr
(bad)
test
nop
xlat
dec
cmp
pop
or
es
clc
xchg
push
xchg
and
cmp
xchg
adc
mov
mov
mov
xchg
mov
push
adc
xchg
sbb
xor
push
mov
jl
inc
movs
and
lock
movs
jle
retf
ret
add
add
jmp
jbe
ds
jmp
lods
mov
cld
nop
cld
push
fidivr
jl
xor
fwait
neg
js
sub
jmp
stos
cmp
jge
call
pop
sub
out
jno
add
jb
popf
xchg
push
xchg
or
lds
pop
ss
sub
or
(bad)
test
inc
mov
movs
sub
lea
js
xchg
fdiv
jne
idiv
mov
aam
cmps
adc
xor
lods
in
add
sbb
sti
icebp
or
retf
add
mov
or
cs
xor
push
rol
xchg
(bad)
jno
mov
mov
daa
fnsave
mov
push
mov
loope
pop
fucomp
adc
in
pop
scas
loope
jmp
mul
outs
cli
js
dec
shl
leave
(bad)
xlat
in
das
sbb
punpcklbw
sbb
xchg
push
sbb
repz
adc
push
(bad)
push
stc
xchg
popf
mov
mov
ret
sahf
out
pop
and
call
or
sahf
clc
setp
les
sar
jl
xlat
sbb
rol
test
in
sub
lock
js
stos
lods
jmp
dec
adc
jecxz
loope
(bad)
mul
mov
mov
xlat
cmps
fcmove
lahf
pushf
(bad)
(bad)
int3
push
scas
cmp
pop
retf
call
inc
add
retf
cmps
xor
int
das
adc
or
jne
test
sub
pop
test
push
ds
stc
loopne
cmc
dec
jge
add
sti
aad
cmps
mov
dec
inc
mov
pop
inc
pusha
arpl
std
xchg
mov
push
add
pop
push
add
call
and
loopne
div
scas
(bad)
mov
lds
cmc
repnz
nop
sbb
cmp
cmovb
push
push
inc
(bad)
call
mov
jnp
into
imul
(bad)
or
sub
xchg
xor
mov
jmp
jmp
aaa
jb
add
add
pmaxsw
adc
xchg
shr
xor
movs
jle
int
sar
add
aas
xchg
popa
(bad)
icebp
ss
push
dec
mov
pop
jmp
jo
add
call
(bad)
jge
ret
adc
dec
push
and
test
es
adc
jmp
pop
arpl
clc
fwait
and
cli
(bad)
push
call
add
or
icebp
scas
pop
repnz
inc
inc
mov
les
shr
push
or
mov
mov
xchg
xor
imul
addr16
std
mov
pop
mov
pop
push
cs
xchg
cmovg
retf
lods
sub
rcl
and
sub
mov
pop
imul
test
sar
mul
pop
outs
sub
xlat
xchg
test
push
icebp
mov
lock
das
jno
xor
cmp
cmp
fs
mov
ins
xor
xchg
fnstcw
dec
and
and
adc
out
push
add
jg
test
mov
bound
int3
and
icebp
xor
repnz
xor
mov
adc
push
ficomp
mov
push
dec
or
jl
inc
rol
mov
fimul
push
dec
mov
nop
vcvttss2si
mov
adc
scas
cmps
in
sbb
xor
test
xchg
repz
stc
push
push
push
mov
and
scas
sub
ret
pop
les
fisubr
and
clc
sbb
movs
hlt
add
fdivrp
cmp
in
sbb
dec
sub
add
jecxz
jp
vpcmpeqw
fld
(bad)
jbe
adc
ror
mov
(bad)
fist
out
dec
jge
mov
(bad)
pop
mul
push
mov
jb
rcl
push
adc
das
test
dec
loop
fild
ds
mov
jae
inc
movs
push
movs
int
lods
lds
inc
xor
or
xor
inc
out
(bad)
jle
sub
mov
push
gs
ret
call
dec
dec
and
aaa
xchg
mov
test
int
stos
sahf
jle
xlat
daa
cmps
sti
mov
aaa
fisttp
push
jno
mov
out
test
sub
xlat
stos
pop
dec
ror
push
and
fbld
and
push
pop
idiv
ja
enter
mov
xor
stc
fwait
shl
mov
pop
mov
mov
loop
ja
dec
push
mov
loop
stos
imul
jecxz
sub
lods
mov
sub
test
xchg
test
jg
fstp
out
int3
repnz
iret
js
fs
loope
aas
mov
mov
cmc
shl
or
and
mov
dec
in
retf
mov
push
dec
in
xchg
das
repz
inc
or
push
pop
addr16
dec
leave
call
adc
or
ins
popa
pop
rcl
stc
push
pop
mov
and
mov
mov
ja
push
dec
lea
jg
js
jmp
sub
cmp
xchg
test
aaa
sbb
sub
inc
stos
sbb
jne
xchg
jge
cmc
fs
add
cmp
dec
lahf
mov
rcr
loopne
inc
inc
and
and
mov
or
inc
inc
mov
jl
mov
mov
jge
sbb
inc
mov
jno
mov
pop
xlat
mov
mov
clc
pop
shr
aas
fld
les
nop
movs
jg
push
movs
ficom
mov
hlt
rcl
xor
pop
inc
lods
xor
jb
mov
imul
add
and
out
pop
mov
into
mov
fdivr
add
pop
sbb
sbb
nop
jmp
in
loop
cli
inc
test
cmp
mov
inc
call
shl
sbb
sub
xchg
cli
sbb
push
sbb
stc
je
ins
push
rcl
xor
outs
repnz
pop
dec
and
ja
(bad)
pop
jb
fcomi
(bad)
clc
call
les
pushf
or
or
lds
pushf
push
adc
xlat
add
mov
sbb
pusha
pop
mov
push
sub
neg
push
mov
cdq
pop
ficom
jge
and
fist
cs
sub
jmp
xchg
out
jecxz
in
adc
adc
daa
pop
jnp
(bad)
inc
inc
xchg
xor
test
mov
outs
fist
mov
std
int3
cmps
add
sbb
mul
push
mov
xor
aad
adc
pop
push
xor
clc
xchg
jnp
enter
(bad)
pop
xchg
or
retf
push
inc
ret
adc
es
xor
inc
leave
jbe
mov
test
inc
dec
inc
dec
or
bound
clc
adc
xor
lds
ror
xchg
mov
pusha
mov
popf
ja
add
xor
cli
adc
mov
je
adc
je
cmps
movs
rcr
jae
sbb
inc
mov
je
les
push
mov
inc
cli
jmp
cld
in
sub
lods
bound
imul
std
push
xor
pop
cdq
mov
push
mov
ins
add
cld
sub
cmp
dec
inc
xchg
mov
mov
xchg
add
push
bound
cmp
loop
cmps
push
dec
shl
push
sub
repnz
(bad)
cwde
pop
clc
clc
aad
jbe
hlt
mov
sub
out
mov
mov
clc
add
ins
stos
or
aam
aaa
and
daa
movs
mov
and
mov
call
mov
cmp
or
dec
xchg
int3
push
push
clc
into
xor
aad
fnsave
ror
mov
addr16
retf
imul
xchg
pop
mov
bound
lods
jae
dec
retf
repnz
clc
repz
push
xor
jae
icebp
iret
push
mov
push
mov
sub
enter
push
inc
add
push
leave
cmp
sti
dec
movs
aaa
jge
mov
imul
adc
pop
cmp
or
add
xchg
and
call
hlt
xor
mov
add
sbb
int3
aas
cmp
push
add
stos
pop
adc
rol
push
cmps
dec
repnz
fucomip
jmp
sbb
ja
dec
arpl
addr16
jne
popf
add
loopne
mov
aad
mov
aad
(bad)
sub
xchg
push
out
sub
mov
mov
sbb
xchg
pusha
test
jmp
adc
dec
adc
mov
mov
sbb
loope
xchg
xor
pusha
pushf
cld
cld
or
bound
mov
cmps
cwde
sbb
sub
cwde
gs
out
push
stos
inc
jo
fld
arpl
mov
in
add
loope
sub
dec
retf
or
pop
daa
jbe
test
leave
push
mov
xor
add
(bad)
and
hlt
addr16
inc
cmps
xchg
ins
xlat
jmp
and
sbb
mov
mov
outs
push
adc
or
pop
push
xor
push
cmps
mov
jecxz
shr
jle
loope
cs
xchg
adc
add
inc
pop
push
jecxz
enter
pop
test
aad
test
mov
pop
sahf
jmp
test
jecxz
dec
cmps
imul
and
test
push
push
jnp
test
lock
jge
jge
or
in
test
retf
mov
sbb
mov
dec
push
mov
adc
xor
imul
mov
pop
int
ret
scas
pop
xchg
(bad)
int
mov
mov
jl
retf
stc
dec
outs
xor
aad
icebp
fucompp
mov
jmp
stos
and
mov
fidivr
fcom
and
dec
pop
sbb
cmp
xor
or
in
rcr
call
add
pop
adc
div
xor
inc
ret
stos
cli
repz
cmp
push
dec
mov
lods
dec
(bad)
mov
and
sbb
xchg
sub
sbb
mov
sbb
pop
add
or
neg
fld
aaa
jp
adc
cmp
dec
retf
mov
jne
retf
test
xor
test
mov
sbb
cld
mov
add
sub
sub
jae
enter
adc
fld
loope
(bad)
sti
pop
inc
fs
scas
je
or
test
pop
popf
or
jnp
pop
(bad)
idiv
mov
icebp
cli
pop
mov
imul
call
push
es
push
in
jp
jae
repz
sti
lahf
inc
cmp
movs
mov
xlat
fild
pop
sbb
retf
das
push
iret
push
out
cmp
inc
js
adc
aas
scas
dec
inc
les
shr
cwde
and
or
call
sub
in
sub
int
enterw
movs
cs
jnp
jmp
inc
addr16
xor
mov
out
lods
cmp
jg
cmps
movs
or
sub
loop
(bad)
movs
lods
mov
aam
push
out
push
std
mov
adc
inc
inc
pop
cmps
mov
aad
loope
push
outs
cs
dec
inc
rol
xchg
fisttp
cld
jno
es
aam
xor
sub
or
pop
pop
pop
dec
call
retf
bound
repz
stos
xchg
lods
mov
dec
push
das
adc
bound
mov
mov
ins
and
sbb
mov
sbb
mov
adc
mov
mov
jne
in
clc
mov
cmp
mov
inc
xchg
push
inc
fwait
pop
and
or
stos
pop
jo
cwde
test
push
idiv
nop
fnsave
adc
or
clc
or
mov
mov
test
jns
into
call
adc
pop
out
inc
fcomp
fdiv
inc
jae
leave
enter
repz
ja
inc
or
icebp
cdq
in
push
scas
iret
mov
pop
idiv
pop
mov
int3
or
jp
sub
fdiv
inc
and
ins
adc
jp
jecxz
or
adc
push
icebp
ins
pop
sbb
scas
cli
sub
cmps
jbe
lock
and
sub
out
hlt
and
push
scas
loop
pop
pop
pop
rcl
or
imul
xlat
sbb
jl
and
dec
push
jg
or
add
cwde
mov
fld
fcmovbe
mov
fwait
or
cs
adc
sbb
mov
hlt
gs
movs
add
call
dec
loop
sti
outs
ror
loopne
mov
imul
xchg
mov
fwait
dec
xor
jbe
out
mov
mov
call
fistp
cs
cmps
sbb
mov
cmps
jp
mov
push
maxps
out
dec
aad
(bad)
jge
mov
sahf
xchg
test
sbb
in
retf
(bad)
mov
xchg
cmp
not
add
mov
dec
popa
xchg
pop
pop
sub
push
fstp
fadd
mov
xor
cmp
(bad)
rol
push
call
pop
mov
arpl
stc
outs
mov
pop
cwde
add
ds
xchg
aad
out
cs
aam
retf
ins
inc
add
bound
jae
ins
inc
push
or
pop
into
js
mov
repz
mov
add
test
dec
pop
mov
dec
cs
xor
sub
jns
mov
jge
jbe
push
mov
fs
out
inc
push
pop
imul
jle
mov
push
ss
and
mov
sbb
inc
add
retf
retf
(bad)
stc
sbb
pop
jge
out
cmp
inc
lods
imul
dec
not
push
cwde
addr16
dec
dec
fdivr
pop
lods
xchg
pop
aad
pop
xchg
jne
mov
dec
and
push
fcmove
push
es
shr
cld
gs
mov
shl
iret
xchg
shl
push
mov
add
lock
mov
cs
dec
pop
mov
pop
adc
ret
in
pop
jle
fyl2xp1
push
(bad)
inc
int
ss
stos
jmp
pushf
test
inc
jecxz
xlat
in
jecxz
(bad)
stc
pop
xor
pop
ret
fldcw
in
and
lock
push
push
adc
adc
push
fist
xor
dec
push
scas
jp
ror
jno
in
inc
sti
int3
ins
ja
cmp
(bad)
bsr
icebp
xor
dec
mov
jge
cld
pextrw
mov
clc
dec
mov
loop
sbb
dec
ret
cmp
sbb
hlt
inc
mov
pop
popa
xchg
test
adc
cmp
scas
sbb
jae
jle
or
and
outs
mov
mov
stos
xchg
jno
out
cwde
int
jbe
mov
mov
(bad)
mov
icebp
sub
repnz
adc
in
ret
mov
lds
inc
out
ss
ds
in
sbb
test
pop
pop
aam
adc
mov
cwde
lock
call
repz
pop
in
sbb
dec
lds
iret
mov
push
leave
addr16
sub
data16
repnz
pop
xor
and
cmp
imul
div
outs
lods
daa
sub
or
(bad)
stc
jle
mov
push
push
outs
mov
xchg
outs
arpl
sub
lock
jle
dec
dec
inc
stos
pop
or
lods
dec
jg
and
cmp
adc
mov
mov
sbb
mov
imul
mov
popf
pop
in
dec
xchg
enter
or
add
or
jg
sub
adc
jns
dec
ficom
imul
scas
push
cmc
adc
jecxz
jae
scas
in
pusha
into
or
pop
bound
push
std
pusha
sub
shl
cmp
jge
jmp
test
je
cmc
cmp
lds
add
mov
mov
lea
lods
or
xchg
es
sub
cmp
xor
test
cmp
xchg
loop
add
and
xchg
int
and
mov
pop
mov
addr16
or
daa
mov
ret
dec
pop
adc
inc
pushf
jmp
jb
add
fwait
add
adc
cmp
jle
mov
clc
out
add
pop
add
fidiv
mov
test
dec
fmul
pop
movs
loopne
or
imul
sahf
and
retf
mov
ror
and
es
sti
ins
out
jmp
push
jl
jne
jns
aaa
xor
fnsave
in
adc
mov
xor
xchg
push
loope
xor
(bad)
je
rcl
xor
cmp
xchg
arpl
add
stos
ret
mov
(bad)
outs
loop
les
das
dec
sub
out
mov
cmp
push
push
adc
and
xchg
aam
cmps
gs
in
loop
jg
movs
mov
sub
mov
ret
xor
in
out
pop
xor
xor
inc
fwait
jae
jmp
cmp
push
xchg
xchg
in
gs
mov
loope
stos
cwde
arpl
mov
movs
inc
ss
dec
es
sti
or
out
cmc
push
push
jmp
pop
and
jno
loope
cld
imul
daa
lods
enter
xchg
mov
test
mov
mov
or
jg
sbb
jno
dec
mov
pusha
repz
xchg
jno
aaa
shl
test
push
clc
jecxz
call
and
adc
idiv
lahf
int
pop
mov
mov
in
mov
and
ret
pushw
mov
jbe
aam
inc
mov
scas
pop
aam
jmp
(bad)
cmp
mov
mov
push
movs
xchg
mov
rcl
stc
cld
push
xchg
div
mov
cvttps2pi
jno
mov
lock
gs
clc
cmps
fcmovne
jl
xor
pop
sbb
jmp
nop
xor
xchg
int3
mov
std
adc
mov
test
push
stos
imul
inc
jbe
stos
rcr
movnti
ins
ds
outs
enter
std
mov
mov
mov
and
imul
loop
pop
xor
push
jp
mov
(bad)
xlat
aad
push
sbb
cmps
jno
pop
push
push
leave
loopne
sub
into
lods
inc
addr16
and
pusha
push
jmp
xor
mov
fiadd
js
mov
rol
mov
push
or
in
or
lods
push
repz
jmp
gs
mov
test
pusha
cmp
cmp
addr16
xchg
mov
pop
and
mov
fist
sar
push
push
dec
out
and
mov
mov
pop
sar
push
dec
mov
add
xchg
pop
add
outs
and
xchg
jle
popf
add
fistp
mov
inc
xchg
fs
lea
mov
jo
and
pop
sub
mov
mov
or
pop
pop
push
ficomp
test
jle
sub
or
(bad)
test
in
out
lea
xchg
inc
mov
cmp
loop
pop
dec
movs
out
cwde
lahf
dec
pop
sub
sbb
inc
shr
inc
adc
mov
dec
shr
jmp
jmp
mov
mov
cmp
(bad)
fwait
and
movs
xor
dec
hlt
lds
pop
add
int
jg
out
imul
pusha
loop
fisub
cwde
jp
frstor
push
jb
js
idiv
test
jne
or
outs
sub
retf
data16
fisttp
dec
inc
mov
in
ss
pop
movhps
ins
dec
outs
fmul
shr
fmul
sbb
cmp
adc
aaa
loop
scas
inc
xor
movs
pop
jae
fld
sbb
sbb
cmp
cwde
mov
rcr
out
jg
xchg
das
xor
push
inc
ss
xchg
ins
dec
or
sbb
call
push
loopne
call
sbb
outs
mov
mov
mov
iret
adc
scas
push
sub
(bad)
data16
and
sbb
je
popfw
stos
and
dec
out
mov
jge
les
xchg
mov
test
or
jl
in
mov
test
in
jno
push
stos
fidiv
fisubr
pop
cwde
lahf
retf
jecxz
icebp
jle
cmp
adc
or
pop
movs
(bad)
xchg
das
cmp
push
rol
and
and
icebp
adc
adc
xor
push
and
jmp
mov
mov
ret
add
test
or
dec
mov
mov
movs
ret
fist
mov
jg
(bad)
inc
jg
sub
jb
ret
imul
jmp
jne
or
inc
sbb
push
mov
bound
jp
test
movs
movs
test
dec
scas
fimul
xchg
add
xchg
icebp
mov
sbb
outs
cli
mov
cmp
mov
int3
outs
outs
or
add
and
adc
xchg
adc
or
or
mov
clc
pop
ret
sbb
je
outs
sub
out
xor
ror
sub
ds
int
xchg
bswap
mov
dec
adc
push
push
mov
retf
test
add
fld
xor
fiadd
adc
mov
push
bound
and
jl
lock
or
mov
cmp
fbld
pop
inc
pop
(bad)
push
push
(bad)
hlt
call
add
pop
stc
cmp
loop
repnz
xchg
fs
or
jae
push
into
mov
in
push
popa
add
mov
xor
xor
add
inc
push
jp
sbb
ffree
(bad)
push
ins
xlat
popa
inc
aad
jl
popa
movs
mov
mov
xchg
frstor
(bad)
retf
rcr
xchg
(bad)
xchg
cdq
jmp
mov
add
xchg
aam
xlat
sahf
mov
push
xor
jmp
add
inc
xchg
pop
mov
inc
dec
das
in
cld
xchg
hlt
adc
add
and
aas
or
push
fwait
in
dec
dec
(bad)
sub
arpl
scas
lock
xor
sbb
cs
cmp
fnsave
sub
dec
fs
loope
cmps
mov
add
lods
pusha
enter
fwait
jnp
cwde
(bad)
xchg
inc
cmp
(bad)
in
fistp
or
(bad)
xor
loope
pusha
outs
sub
dec
push
sub
xor
xor
inc
ja
fcmovb
sbb
jbe
xchg
call
retf
xor
(bad)
cmps
fild
pop
gs
aas
imul
or
jmp
iret
cli
jbe
mov
push
push
jg
out
inc
pop
out
jl
ret
sbb
sub
add
xchg
scas
outs
je
or
out
sub
adc
(bad)
(bad)
ror
sbb
xchg
xchg
xor
mov
jae
pop
pop
jg
dec
mov
add
sub
sub
jo
pop
jns
jne
sar
cdq
jg
xchg
or
mov
xchg
je
pop
pcmpeqw
push
and
scas
iret
add
addr16
leave
faddp
repz
movs
test
fdiv
stc
mov
inc
add
cli
inc
xor
(bad)
jb
and
xchg
jle
(bad)
retf
nop
ds
dec
loope
jl
popf
pop
fsub
pop
(bad)
fld
and
imul
pop
mov
call
test
in
mov
push
jecxz
push
inc
inc
adc
test
js
xchg
or
addr16
xor
jb
push
mov
jno
repnz
mov
cs
ficomp
lods
stos
test
cli
imul
xor
adc
je
retf
fwait
dec
sub
pop
jg
sar
outs
mov
dec
fst
pop
(bad)
(bad)
pop
(bad)
in
enter
push
rcr
stos
scas
mov
stc
or
sub
xchg
and
pop
iret
ret
call
jns
or
inc
out
and
aas
adc
jl
ret
into
sbb
jle
xor
mov
add
sub
cld
dec
hlt
outs
pop
pop
mov
int3
jno
cmps
int3
cmp
scas
cmp
sbb
adc
jp
stc
inc
push
ror
fwait
push
xchg
aam
fsubr
adc
jecxz
mov
add
jns
fs
pop
mov
lods
inc
dec
sub
ins
mov
ror
pop
xchg
xor
lds
inc
add
into
adc
mov
pop
addr16
repnz
lahf
jle
test
mov
ret
les
(bad)
cmp
push
xor
pop
inc
push
xchg
add
ss
mov
dec
loop
pop
and
xor
and
mov
nop
inc
push
sub
cdq
rcl
inc
and
(bad)
loop
imul
ss
sub
xchg
je
xchg
pop
dec
or
js
adc
mov
mov
xchg
and
xor
adc
mul
and
ins
and
mov
call
and
nop
xor
movs
lds
test
pushf
pop
or
or
sbb
sub
xchg
push
mov
lds
push
cwde
ror
mov
iret
pop
(bad)
out
cmc
cld
int3
dec
add
mov
movs
adc
push
add
push
xor
ror
data16
xor
mov
call
mov
int3
fwait
cmp
ja
dec
mov
sbb
test
adc
push
or
retf
sub
mov
out
(bad)
cmp
(bad)
aaa
stc
imul
jp
mov
fiadd
call
mov
cmc
sub
fild
pushf
pop
sub
jl
call
push
es
(bad)
adc
movs
ins
jp
pop
ds
mov
jae
cmp
je
lock
lods
push
push
neg
sbb
cmp
fdivr
dec
xchg
cmc
sbb
xchg
rcl
jmp
sub
movs
jmp
loop
pushf
bound
(bad)
in
scas
adc
ret
push
mov
xor
rcl
push
stos
imul
inc
push
call
jno
dec
sar
scas
jg
repz
adc
(bad)
(bad)
pop
dec
fsub
xchg
leave
das
xchg
ss
sub
cmp
jno
ins
mov
mov
sub
fmul
jbe
jno
into
push
mov
push
loopne
jp
dec
cmp
frstor
test
lods
mov
mov
sbb
pop
xchg
jnp
sub
dec
inc
xor
stos
ret
(bad)
add
pop
mov
add
pop
dec
inc
clc
daa
stos
(bad)
push
nop
das
adc
cmp
inc
imul
jae
jmp
adc
push
ds
in
dec
lods
jle
mov
(bad)
mov
xchg
jl
sbb
dec
push
into
ins
popa
in
lahf
movs
or
mov
gs
icebp
shl
pop
mov
jle
lods
out
or
jecxz
gs
scas
jne
fs
popf
pop
xchg
xor
sbb
das
xor
push
or
sbb
repnz
inc
fnsave
(bad)
mov
xchg
gs
dec
xlat
pop
adc
jge
mov
push
aas
scas
add
mov
sahf
inc
popf
enter
icebp
nop
test
sbb
loope
add
daa
lea
adc
fdivr
scas
fwait
enter
adc
int3
in
pushf
cmps
ins
in
mov
call
xor
jecxz
pop
sahf
pushf
mov
jnp
bound
lea
mov
jno
into
mov
push
push
ss
loope
adc
or
push
mov
pop
mov
shl
in
lea
inc
jecxz
jmp
mov
xor
sbb
mov
fsubr
shl
rcl
out
push
jmp
adc
jno
loop
ins
jae
sbb
aaa
cmc
repz
jnp
and
mov
into
xchg
mov
rol
das
je
in
out
sbb
ins
mov
cli
sbb
xor
cmps
add
add
push
dec
pop
pop
jno
push
sti
cdq
test
and
sbb
or
mov
sub
inc
sti
pushf
add
xchg
popa
mov
loope
lods
dec
imul
in
jge
add
xlat
dec
sub
stos
xor
jne
mov
(bad)
(bad)
cmp
js
fs
fdivr
inc
jmp
adc
push
xor
and
mov
(bad)
xchg
ror
test
fnstcw
push
stos
jp
inc
cmc
aad
mov
jno
cmps
bound
movs
arpl
in
mov
mov
push
loope
cmp
leave
mov
and
adc
bound
in
fistp
push
imul
jge
imul
jmp
add
dec
or
sbb
dec
cmp
sub
xor
add
push
mov
inc
xchg
xor
scas
xchg
pop
ret
mov
lock
call
mov
sbb
mov
nop
iret
jne
push
ret
pop
inc
jle
adc
mov
stos
jae
daa
mov
aam
or
outs
stc
out
or
add
fidiv
int3
jecxz
inc
xchg
lahf
sbb
imul
or
xchg
or
cmp
cli
test
cmp
push
outs
inc
mov
loope
cmp
shr
cmp
outs
pop
xor
retf
pop
imul
mov
nop
fldenv
out
jmp
pop
test
or
pop
jo
adc
and
adc
xlat
das
mov
inc
inc
int
or
xchg
fxch
test
cdq
add
(bad)
movs
mov
rcl
jl
sbb
stos
jl
push
mov
mov
inc
cmps
das
int
xor
imul
out
cmp
mov
retf
arpl
ds
out
mov
aad
(bad)
add
popa
mov
push
push
pushf
cmp
in
add
shr
ja
jmp
fwait
cwde
movs
pop
data16
xchg
cwde
(bad)
icebp
daa
dec
xlat
jecxz
cld
mov
je
test
pop
pusha
cmp
pop
or
push
xor
arpl
xor
xchg
fisubr
and
sub
retf
dec
jle
jo
and
fisubr
or
lods
add
cmps
mov
frstor
(bad)
fmul
call
add
inc
in
loop
aas
jnp
int
pop
test
cs
ficom
das
add
mov
sub
mov
cmp
ror
(bad)
mov
shr
xchg
fadd
xchg
sbb
jnp
popf
ins
imul
push
sub
pop
push
mov
push
xchg
sbb
(bad)
out
or
pusha
in
into
xchg
enter
adc
std
xchg
mov
mov
sbb
clc
mov
dec
not
pusha
mov
mov
pop
push
shl
sbb
sbb
mov
sub
or
lods
ret
jnp
sbb
aad
xchg
cmp
ss
cwde
or
in
xchg
(bad)
movs
test
inc
pop
push
sahf
fcmove
cmp
repz
adc
rcr
outs
std
in
scas
mov
mov
push
test
sbb
fisttp
aaa
cmp
scas
cmp
bound
retf
std
and
repz
jns
cmp
mov
dec
imul
adc
xor
push
mov
mov
push
xchg
jmp
pusha
pop
and
sub
xchg
(bad)
add
in
cwde
test
push
jge
mov
enter
and
mov
mov
adc
repnz
cwde
xchg
loopne
(bad)
or
test
adc
loope
pop
(bad)
movs
int
call
aad
mov
and
jb
jns
js
mov
loope
lods
mov
push
mov
in
fstp
dec
cwde
adc
call
aas
sub
cmp
jnp
cmps
fwait
stos
jno
mov
data16
adc
sbb
scas
retf
jecxz
aas
push
mov
cmp
mov
std
jno
mov
sub
push
hlt
sbb
mov
push
push
cli
pop
rcr
ss
cdq
fcmovnb
cmp
mov
mov
jns
shl
outs
lahf
cmp
mov
jle
xor
rcl
pop
gs
jl
mov
push
xor
sub
dec
mov
xchg
or
movs
(bad)
sub
mov
cmp
fcomp
hlt
sub
retf
pusha
cmps
retf
test
aaa
inc
hlt
sub
cld
jns
xor
movs
push
mov
push
push
xchg
jno
push
mov
mov
xchg
cmps
mov
sub
movs
push
loope
pop
fadd
rol
adc
fmul
(bad)
fcomp
dec
jmp
push
std
mov
test
loopne
xchg
mov
ret
mov
fadd
or
lahf
cwde
test
mov
mov
pusha
xchg
xor
mov
sar
sub
push
aas
popf
cmc
mov
mov
jl
in
push
retf
sahf
out
sbb
mul
xor
ror
pop
sar
fadd
lock
pop
shr
jg
push
cmp
pop
ret
cld
hlt
rcl
mov
sub
adc
into
dec
xor
cmp
fnstsw
inc
or
add
mov
std
sbb
cmps
pop
mov
in
mov
icebp
inc
movs
(bad)
loope
dec
mov
icebp
xchg
(bad)
sub
fcmovnb
lea
and
cli
jne
mov
xchg
(bad)
(bad)
xor
jge
jne
xchg
or
jg
xchg
outs
int3
out
loope
daa
pop
gs
movs
pop
sbb
leave
xor
jg
xchg
out
sub
fdiv
xor
add
mov
and
jne
sub
fbstp
push
or
js
retf
outs
clc
mov
std
cmp
sub
sete
adc
jno
pusha
push
(bad)
sti
popf
sub
or
fild
dec
dec
push
enter
fnstenv
jb
repnz
popa
int
je
mov
xchg
loope
cdq
test
dec
cmc
ret
cdq
push
xlat
push
cmps
aam
add
push
leave
int3
test
cmp
mov
inc
pop
pop
add
sub
mov
pop
xor
fnstcw
mov
in
je
lods
push
retf
add
mov
mov
out
aas
sbb
sbb
shl
pop
call
js
mov
bound
or
xor
mov
(bad)
jnp
adc
cmp
and
jno
and
je
or
jae
ins
push
lods
sbb
je
dec
inc
jae
push
inc
pushf
cmp
or
test
cwde
nop
fs
sbb
push
les
fs
mov
cmp
dec
jb
or
and
cmps
xchg
sahf
pop
or
pop
rcr
add
enter
mov
mov
imul
jne
cwde
push
cmps
mov
ret
loop
dec
mov
inc
int
xor
cld
int3
test
add
jmp
mov
inc
push
jno
xor
push
stos
sbb
or
jl
adc
in
mov
jbe
lock
test
inc
stos
push
popf
in
leave
dec
sbb
cdq
mov
inc
repz
paddw
add
daa
in
xchg
ror
scas
fwait
mov
xchg
fild
addr16
imul
add
mov
test
test
call
rcr
(bad)
cmps
inc
call
(bad)
int
sub
js
cmp
test
dec
xlat
inc
or
cmp
aas
adc
xor
ss
sub
nop
addr16
je
(bad)
hlt
sbb
jmp
pop
push
call
(bad)
loope
jo
add
dec
inc
retf
jno
stc
in
retf
es
popa
ret
dec
pop
cmp
outs
dec
not
stos
into
bound
push
ins
test
or
push
repnz
xor
cmp
cmp
ins
add
ins
ret
sub
(bad)
jg
loopne
inc
movs
cli
int3
aad
xchg
cs
dec
ficom
cmp
addr16
jns
in
add
xchg
cmps
inc
ret
jle
cli
rol
addr16
sbb
mov
xchg
mov
scas
out
(bad)
iret
mov
push
adc
dec
ins
cmp
hlt
dec
in
sub
sub
inc
and
cmps
fist
cmps
mov
xchg
retf
lods
jnp
dec
lock
stos
adc
movs
mov
fwait
arpl
sbb
imul
dec
dec
mov
movs
adc
sbb
cmp
popf
(bad)
or
xchg
sub
jae
leave
mov
cmp
out
mov
mov
and
push
in
repz
lea
sbb
and
adc
(bad)
lds
sbb
add
cld
or
(bad)
xchg
mov
aaa
ja
mov
(bad)
pushf
enter
jle
stc
adc
xchg
(bad)
int
xor
or
dec
sbb
xchg
xchg
imul
leave
jle
lahf
xchg
pushaw
test
ret
mov
in
loopne
div
in
jecxz
push
jns
xchg
push
call
dec
pop
push
pop
call
pop
sbb
cmp
or
test
mov
pop
pop
sub
nop
pop
movs
(bad)
mov
sbb
call
add
enter
fdiv
pop
ss
dec
gs
add
lock
fsubr
jo
stos
add
div
clc
mov
cmp
dec
push
xchg
loopne
fsubr
pop
xchg
js
jbe
dec
xchg
stos
and
add
in
pop
ret
dec
cmp
jae
push
dec
add
and
mov
bound
xlat
mov
rcr
and
jae
jp
jmp
cmp
cmp
dec
aas
add
out
bound
icebp
add
jne
push
scas
scas
push
mov
adc
xchg
dec
push
retf
push
lds
jae
push
mov
cmp
add
xor
loop
loop
xchg
aas
jmp
sub
xchg
(bad)
xor
ins
jl
clc
xchg
dec
and
bound
shr
mov
popa
inc
rol
fcmovb
fcomp
ins
mov
ret
push
popa
add
test
dec
idiv
sub
inc
mov
ret
loop
and
cmp
leavew
pop
icebp
mov
sbb
adc
aad
lea
cmps
ret
mov
pop
push
xchg
iret
inc
push
and
xor
xor
ret
cmps
and
je
cmps
aas
pop
and
loopne
dec
jecxz
call
retf
add
lods
stc
leave
neg
aam
sbb
or
lea
xor
fwait
jmp
int3
scas
inc
sub
pop
ss
call
push
xor
cmp
cli
(bad)
or
ins
push
jle
mov
mov
fdivp
xchg
push
pop
xchg
push
xor
mov
outs
cmc
lds
aaa
sub
push
add
mov
dec
outs
mov
dec
fcmovne
adc
scas
arpl
stc
push
inc
pop
mov
in
and
push
ret
jo
push
fwait
inc
popa
xor
xchg
fcmovnbe
push
xor
push
pop
rcr
fbstp
in
mov
fidivr
pop
dec
cmp
push
or
popa
adc
div
mov
xor
bound
jnp
arpl
mov
pop
in
cmps
push
sar
cmp
mov
xor
mov
into
pop
inc
push
inc
jle
imul
imul
jae
inc
add
mov
dec
fs
xor
sub
gs
in
push
int3
cs
call
mov
neg
xchg
cmps
xor
dec
js
inc
jg
push
mov
push
dec
jne
sub
jbe
pushf
sbb
shl
cld
mov
cmp
clc
sbb
adc
cmc
dec
je
fwait
mov
push
mov
cmp
outs
lods
add
cli
dec
push
iret
cdq
push
pop
mov
mov
sbb
(bad)
pop
cmp
das
sbb
jb
cmp
das
imul
or
call
repnz
sub
mov
dec
xchg
cld
xchg
dec
pop
stos
aaa
call
les
jae
cmp
iret
jb
outs
push
push
movs
loop
jns
push
in
adc
fistp
lods
sti
in
in
xor
mov
scas
in
(bad)
fs
xchg
jnp
rcl
dec
out
or
xchg
je
sahf
push
rol
or
bound
inc
inc
and
mov
cld
stc
pop
icebp
mov
call
iret
mov
sub
stc
stos
stc
push
jp
mov
fs
sub
jge
mov
push
cmps
or
pop
add
fstp
push
cmp
inc
fld
cwde
(bad)
jbe
stos
lods
xor
fisttp
int3
and
xchg
mov
out
pop
stos
jecxz
mov
add
addr16
leave
dec
movs
div
popa
mov
mov
jae
das
fimul
fwait
cmp
or
test
fdiv
inc
inc
test
lds
in
sub
fmulp
mov
stc
pop
cs
lahf
ss
loope
cli
lods
and
mov
pusha
push
stos
adc
adc
mov
adc
pop
fcom
test
mov
iret
dec
jbe
xchg
lea
outs
add
mov
push
sub
in
mov
mov
test
cmps
jae
cmp
dec
stc
cli
cmp
aaa
ins
fcomp
loope
adc
arpl
test
pop
bound
pop
out
mov
mov
aaa
popf
add
or
sbb
and
jae
inc
push
mov
xlat
mov
sbb
aad
and
aaa
sbb
jg
loop
cmp
cmp
jmp
out
pushf
icebp
jmp
add
bsf
and
loope
imul
popa
ins
jno
rep
push
shl
fs
repz
in
int
jo
sbb
aaa
dec
mov
or
loope
in
or
sahf
jle
pushf
xor
mov
jnp
mov
fs
clc
mov
add
jmp
ficomp
icebp
mov
repnz
adc
aam
ja
push
adc
and
movs
fwait
sub
or
les
icebp
mov
ins
pop
ret
dec
xor
and
inc
push
push
ret
adc
xor
or
push
adc
sbb
in
es
clc
mov
loope
fwait
cdq
jmp
(bad)
pop
addr16
mov
(bad)
xchg
cld
mov
adc
hlt
scas
not
mov
mov
leave
mov
xor
jecxz
inc
nop
fiadd
xlat
cs
lods
fidiv
das
enter
jecxz
mov
jmp
ret
pop
push
xor
movs
int
and
push
aam
adc
repz
cmc
cmp
dec
fidivr
dec
mov
ss
fiadd
mov
sub
or
pop
sbb
(bad)
int3
jl
test
or
xchg
int3
(bad)
(bad)
ficomp
dec
retf
mov
(bad)
out
loopne
test
inc
fiadd
jmp
push
outs
xchg
(bad)
mov
xor
ins
push
cmp
pop
or
push
mov
lods
cmp
xchg
(bad)
sub
mov
aaa
xor
and
loope
dec
or
arpl
lods
outs
jo
mov
pop
add
sub
push
mov
es
xchg
pop
mov
retf
shr
test
or
pop
xchg
xchg
loop
mov
dec
mov
add
(bad)
push
jne
xor
adc
out
jl
stos
mov
(bad)
cmps
pop
mov
inc
out
sub
jnp
push
jo
jecxz
mov
(bad)
stos
xor
in
ja
scas
inc
pop
push
in
repnz
aad
cld
jmp
stos
mov
adc
jns
push
lods
mov
hlt
cwde
(bad)
outs
in
mov
call
dec
call
inc
imul
mov
dec
sbb
(bad)
call
jle
jmp
hlt
loopne
ds
pop
mov
mov
in
dec
(bad)
fwait
call
xchg
and
xchg
jmp
inc
sub
(bad)
aad
rcl
sbb
or
(bad)
stc
pop
ss
test
fs
push
sub
arpl
adc
mov
or
sahf
mov
inc
xlat
xor
cs
movs
push
popf
int
fst
push
jne
mov
jo
scas
cld
scas
mov
pop
xchg
pop
int
sbb
retf
shl
cmps
add
xchg
jmp
leave
call
xor
pop
xchg
sub
int3
sbb
xor
push
xchg
lea
add
jp
dec
test
sub
inc
xor
pop
nop
shl
push
sub
cld
jecxz
mov
sub
push
sbb
jae
and
pop
fwait
rcl
and
hlt
xor
mov
jl
mov
cmps
push
fnstsw
sub
lock
mov
(bad)
cmp
push
sub
clc
fdiv
in
(bad)
repz
push
mov
dec
dec
cmp
jmp
les
icebp
scas
mov
xchg
sti
icebp
bound
mov
aaa
test
or
loope
pop
ror
add
mov
jmp
test
fcmovne
push
mov
dec
or
mov
xchg
jns
repnz
js
mov
push
cmps
out
add
dec
sub
xchg
or
or
sub
jns
mov
dec
ss
lods
fimul
out
push
inc
and
cmp
jmp
inc
dec
jbe
retf
push
lods
int
xor
mov
xor
sub
leave
cwde
push
push
call
add
jnp
mov
pop
mov
ror
cmps
hlt
or
loope
xor
jg
mov
cmp
mov
sbb
or
adc
dec
(bad)
adc
sahf
cmp
mov
mov
push
mov
or
jae
das
adc
fwait
xchg
repz
rcl
mov
mov
adc
scas
xor
adc
push
fld
cmp
gs
cwde
xor
scas
rcr
add
sub
loopne
outs
adc
push
xor
(bad)
nop
dec
retf
fdivr
ins
sub
icebp
in
(bad)
fcmove
ret
jg
mov
mov
jbe
adc
xor
lods
pop
push
nop
xchg
mov
inc
xor
into
cmc
pop
dec
adc
xor
movs
mov
fistp
sub
jae
mov
outs
cdq
pop
or
or
cdq
push
cmp
jo
and
xchg
and
add
lods
push
lock
dec
movs
xchg
loopne
fdivrp
ja
push
xor
inc
mov
out
mov
and
test
mov
pop
wrmsr
stos
hlt
pop
ds
dec
cld
push
sub
sub
cmp
div
mov
lods
lods
cs
test
jge
mov
and
mov
cmp
add
rol
mov
lods
(bad)
fcom
idiv
push
push
pop
idiv
jb
xchg
xchg
jmp
(bad)
jp
adc
jo
mov
jmp
xor
and
aam
adc
mov
cdq
mov
xchg
rcr
push
dec
cdq
mov
mov
and
loopne
pop
mov
aam
pop
int3
mov
popf
mov
js
aas
in
daa
and
cmp
mov
int3
inc
movs
call
shl
push
mov
repz
mov
(bad)
mov
cdq
sub
xlat
mov
push
in
lds
jnp
pop
jae
pop
dec
adc
mov
fadd
int3
ds
pop
sub
pop
xor
mov
mov
jl
push
(bad)
jno
lods
lahf
mov
inc
and
cs
jle
shl
out
mov
add
mov
and
imul
lahf
or
dec
sub
dec
sbb
ror
hlt
lahf
jne
outs
out
push
mov
add
mov
dec
in
(bad)
not
mov
aaa
jb
inc
mov
sub
inc
xchg
mov
popa
pop
test
cmp
cmp
(bad)
adc
pop
iret
(bad)
cli
xor
fidivr
mov
(bad)
int3
ss
sbb
jl
js
sbb
loope
stos
in
push
sub
jge
rcr
sbb
lea
scas
jmp
jecxz
call
sti
ds
dec
mov
pushf
ror
lds
repz
pop
cmp
adc
clc
add
push
popa
jbe
sub
cmp
fsubr
(bad)
jo
out
add
int
int3
push
stos
mov
add
xchg
cmp
outs
jmp
xchg
mov
(bad)
pop
test
adc
push
dec
cdq
add
ja
call
in
sub
xchg
jae
push
in
push
adc
inc
les
mov
sbb
bswap
xor
or
xor
push
mov
loop
cmp
xor
lfs
fwait
jge
(bad)
cwde
inc
jg
or
dec
push
rol
iret
and
sbb
nop
and
add
enter
ficomp
ss
and
or
inc
adc
xchg
loop
ror
mov
jmp
rep
xchg
nop
jg
(bad)
push
out
jne
mov
hlt
fld
aam
mov
jle
mov
ret
cmps
cwde
or
jnp
div
mov
jecxz
mov
cld
mov
aas
sbb
ins
jno
xchg
mov
and
cmp
aas
adc
cmp
test
lds
xchg
retf
mul
dec
adc
(bad)
mov
pop
aaa
mov
cmps
jae
popa
js
loopne
aam
pushf
push
lahf
jp
outs
xor
fucom
or
pop
imul
jecxz
jbe
fsubr
retf
and
push
xor
mov
push
in
dec
or
les
inc
test
call
call
out
call
sbb
inc
and
fcomip
pop
sbb
jne
sbb
mov
clc
cmps
cdq
nop
inc
push
push
mov
popa
call
int3
pop
aam
jecxz
fiadd
das
add
cmp
es
test
sti
shl
(bad)
in
sbb
jo
jne
xor
int3
clc
lods
push
pop
sti
mov
pop
sbb
push
jmp
jo
ss
jecxz
mov
cmp
pusha
add
aaa
test
stos
cmps
push
jb
jmp
add
aad
(bad)
mov
and
sbb
and
fcomi
pop
jg
stos
cld
push
adc
dec
(bad)
sbb
or
pusha
lock
lea
mov
(bad)
fadd
cmps
mov
out
fscale
mov
jg
std
jecxz
mov
adc
scas
sub
ret
(bad)
in
loop
pusha
cwde
mov
pop
lods
(bad)
cmp
dec
enter
inc
int3
loope
adc
lods
ror
adc
mov
sub
fxch
or
outs
mov
mov
repnz
pop
cwde
mov
cdq
or
add
out
outs
add
fwait
add
push
adc
mov
int3
add
outs
imul
mov
sbb
fisub
xor
or
and
adc
dec
bound
push
jmp
push
retf
jp
sub
sbb
pusha
dec
jle
jo
lea
add
jne
mov
and
adc
shl
jl
add
mov
ins
shl
dec
jmp
ss
push
hlt
inc
in
imul
cmp
mov
(bad)
and
xchg
xchg
sbb
pop
scas
add
push
xor
fs
and
dec
fild
vmwrite
mov
outs
shl
push
xor
and
jmp
jmp
lods
dec
adc
lea
mov
addr16
(bad)
outs
sub
cmp
xchg
ss
xchg
nop
pop
push
dec
fsubr
imul
push
xor
ins
(bad)
push
(bad)
sbb
fwait
aam
mov
pop
xchg
push
fistp
rsqrtps
call
xchg
push
jl
inc
cmc
hlt
push
pusha
mov
(bad)
repz
mov
popf
in
ins
mov
jne
out
mov
popa
iret
sub
or
in
xchg
jae
les
adc
fdivr
sub
aaa
inc
dec
inc
cmp
push
(bad)
aad
bnd
and
fisub
push
test
mov
push
pop
pop
(bad)
test
and
pop
popa
push
dec
xchg
arpl
pop
popf
fsub
cmps
cmc
inc
and
xchg
inc
movs
jg
xchg
xlat
call
dec
pop
test
pop
pop
movs
inc
cmp
sub
movs
test
mov
ror
push
jno
outs
retf
rol
jge
dec
jge
mov
pop
cwde
mov
addr16
outs
mov
push
push
iret
sti
inc
pop
loop
mov
popa
pop
push
int3
add
sub
dec
push
sub
jge
and
pusha
out
scas
jns
and
adc
call
out
scas
cs
daa
neg
pop
xor
call
stos
pop
(bad)
fst
bound
add
or
cwde
or
cmp
dec
into
and
outs
movs
dec
mov
xchg
jae
sub
aas
rcr
and
pop
int3
push
jecxz
push
(bad)
cwde
sub
xchg
and
js
xchg
scas
pop
stos
mov
xchg
mov
lahf
sbb
cmp
imul
add
dec
inc
push
sub
cmps
mov
jo
and
icebp
dec
out
in
(bad)
sahf
mov
dec
retf
cs
or
pushf
addr16
pushf
or
or
mov
std
scas
es
inc
pop
daa
cmp
cdq
ins
movs
inc
pop
(bad)
xchg
xlat
aas
push
jp
dec
fbstp
xchg
cmp
sub
call
jmp
pop
sbb
test
into
pushf
cld
push
dec
hlt
adc
push
pop
sbb
mov
jo
frstor
js
loopne
and
dec
fisubr
data16
mov
push
nop
jmp
js
and
and
out
cmp
push
add
or
in
push
mov
sbb
and
es
inc
and
push
jo
jno
and
daa
int3
or
fmul
ret
push
mov
or
mov
adc
cmc
cmp
add
inc
inc
cdq
pop
movs
dec
inc
sub
enter
jne
dec
cmps
pop
dec
jg
inc
or
add
dec
cdq
push
arpl
rcl
gs
mov
xor
and
xchg
std
test
es
xchg
push
mov
je
inc
stos
dec
int3
adc
aaa
(bad)
ja
enter
fmul
xchg
sub
cmps
xor
pushf
jbe
and
dec
ds
push
mov
lods
mov
add
pop
fidivr
out
push
mov
daa
pop
fisttp
or
mov
sub
dec
jns
les
pop
loop
push
push
ret
ja
lods
daa
and
ins
hlt
mov
mov
enter
stc
mov
add
mov
int3
repnz
aas
lock
push
mul
cmp
dec
mov
stos
data16
adc
sub
nop
cmps
ins
lds
not
mov
mov
mov
push
xchg
dec
jb
jmp
add
jbe
into
adc
adc
not
inc
aaa
ret
out
int
fwait
addr16
les
data16
adc
pop
(bad)
xchg
(bad)
adc
loop
pop
ret
jne
test
lock
(bad)
mov
sub
push
clc
(bad)
out
imul
add
stos
lds
out
leave
jle
fiadd
aas
pusha
imul
clc
test
lods
cwde
mov
cwde
jg
cwde
mov
mov
mov
cmp
push
add
jecxz
aad
and
int
jno
push
pushf
mov
push
out
or
mov
jle
movs
and
or
scas
xlat
push
lahf
cdq
sti
xor
or
cmp
arpl
mov
inc
mov
hlt
inc
mov
add
ret
jae
add
shl
mov
es
(bad)
xchg
cmp
jns
push
inc
ds
pop
ja
dec
xchg
shl
add
push
dec
ds
ficomp
push
ins
add
cmp
jae
popf
sub
inc
and
add
aas
enter
lock
cmps
movs
les
xchg
push
jg
in
mov
xchg
mov
pop
or
aaa
cld
push
dec
xlat
xrelease
dec
mov
sub
cmc
xchg
mov
pop
fadd
dec
inc
pushf
dec
or
jae
adc
adc
or
iret
pop
or
cld
mov
jae
movlps
or
push
mov
mov
fnstenv
test
mov
test
aad
(bad)
jne
int3
loop
shl
jl
fucomp
in
add
pop
push
fidivr
imul
xor
push
arpl
call
cmp
daa
jle
test
cmp
ins
outs
add
fisub
adc
ret
xchg
adc
jmp
ret
imul
mov
cmps
(bad)
adc
jl
mov
sub
fisttp
ja
aaa
inc
push
test
pop
out
shr
retf
pop
push
mul
mov
push
hlt
cs
cmp
jecxz
inc
mov
imul
into
jnp
or
xchg
mov
xor
daa
mov
inc
push
shr
push
(bad)
out
repz
mov
jmp
push
imul
xor
test
jbe
mov
repz
cmc
(bad)
push
scas
mov
lods
lock
mov
aas
(bad)
sub
sub
div
outs
inc
jp
fisub
sti
xchg
mov
rcl
mov
pop
lahf
call
and
push
daa
jbe
dec
xchg
es
wbinvd
(bad)
(bad)
push
cmp
inc
jge
scas
(bad)
jp
not
outs
movs
jb
mov
mov
pop
xchg
adc
stc
je
pop
aad
cmc
imul
cmp
dec
add
or
das
push
pop
int3
fistp
or
lock
lods
xor
idiv
and
xchg
cmps
fsubr
jae
xchg
fistp
shl
xor
xchg
and
hlt
repz
cs
test
ror
sub
inc
mov
mov
adc
or
int
mov
out
movs
inc
ror
pop
dec
or
in
sti
stos
enter
adc
icebp
icebp
sbb
(bad)
pop
lahf
sbb
es
sbb
push
fcom
dec
retf
(bad)
je
fsubr
mov
xchg
mov
aas
imul
xrelease
popa
push
sbb
mov
or
push
pop
mov
pop
sub
push
sbb
add
enter
mov
inc
sahf
(bad)
xor
mov
pop
(bad)
loopne
sub
inc
mov
rcl
in
xchg
push
mov
add
jmp
jo
sub
les
push
or
call
adc
sbb
dec
call
cs
add
cmp
inc
mov
movs
sub
pusha
adc
bound
mov
cmc
mov
jecxz
test
scas
and
imul
push
inc
sbb
lock
mov
aad
dec
jecxz
lds
and
push
inc
imul
adc
loope
mov
aas
(bad)
imul
mov
call
mov
ret
mov
pop
repz
enter
(bad)
daa
les
mov
mov
push
mov
icebp
aas
es
not
push
dec
xchg
adc
adc
mov
cdq
push
cmps
cld
push
inc
xchg
call
ins
dec
rcr
jne
fdivr
jno
leave
retf
sub
and
adc
ja
lahf
test
pop
sub
arpl
in
mov
push
cmp
and
fs
rol
lock
bound
jle
cmps
push
and
into
mov
daa
aas
xchg
jo
jle
mov
cmps
dec
inc
outs
out
pop
in
mov
das
mov
jmp
bound
arpl
pushf
dec
pop
sbb
push
mov
jp
add
sbb
fcomp
das
mov
inc
dec
sbb
dec
xchg
cmp
push
adc
test
int
rol
sahf
mov
leave
push
sahf
iret
stos
xchg
mov
fild
jmp
(bad)
mov
mov
add
outs
jns
inc
int3
test
scas
or
out
pop
aaa
fcom
arpl
pusha
call
lods
ins
dec
cld
adc
and
fcomp
mov
xlat
addr16
in
push
aad
xchg
mov
add
sar
add
(bad)
in
push
nop
aam
mov
ja
sbb
out
lock
ins
ins
push
or
lods
in
adc
movs
sbb
lea
enter
add
loop
setbe
jns
fstp
cmc
je
sar
cmp
mov
cwde
mov
int3
cmp
fstp
daa
inc
sub
(bad)
in
bound
add
inc
popf
mov
sub
dec
test
pop
mov
push
js
add
addr16
or
inc
jle
lock
scas
fs
pushf
lock
pop
pop
add
loop
push
fwait
xchg
mov
dec
stos
fsubr
adc
mov
xor
arpl
das
loop
jno
pushf
sub
scas
outs
test
clc
adc
leave
lea
and
int
cmc
fisttp
outs
push
jl
sar
cs
js
xchg
adc
inc
sub
jecxz
mov
mov
je
pop
sti
push
test
mov
jmp
rcl
add
inc
sbb
jae
mov
aam
ins
std
popf
repnz
jp
xchg
sti
dec
xor
in
(bad)
ins
hlt
clc
fdivr
xchg
leave
test
pop
movs
hlt
mov
push
cli
retf
aaa
es
ret
jb
lods
pop
add
in
adc
pop
inc
in
rcr
jns
dec
fld
sbb
add
push
sbb
test
arpl
test
fldenv
mov
jnp
push
call
push
cmp
or
mov
aad
add
repnz
ins
and
mov
aas
fisub
mov
je
out
adc
dec
mov
sbb
(bad)
mov
push
stc
fs
cmps
jp
jp
sub
pop
inc
xchg
and
push
int3
mov
int
sbb
mov
jbe
cld
lods
js
cmp
int3
ror
mov
push
sbb
fimul
ins
mov
ds
pop
xchg
inc
jle
popf
rcl
push
xor
xchg
pop
push
sub
adc
inc
pop
xor
push
and
mov
or
push
iret
into
cmp
call
stc
cmps
xor
ror
jno
pop
dec
push
xor
pop
in
clc
jmp
sbb
call
xchg
push
pop
xchg
(bad)
push
inc
xchg
mov
cmps
div
dec
mov
test
xor
daa
push
xchg
stc
stc
fdiv
cs
add
and
adc
jge
gs
mov
mov
retf
es
pushf
push
and
sbb
mov
add
hlt
js
cmp
add
daa
aas
mov
jmp
push
pop
inc
sub
mov
mov
sub
and
push
sub
gs
mov
jmp
xchg
in
xor
aaa
jg
gs
(bad)
mov
jbe
xor
cmc
stos
test
jle
(bad)
shl
jl
movs
cmp
xlat
or
leave
pop
sub
js
leave
std
cmp
fucomi
adc
mov
clc
aaa
add
movs
and
inc
inc
push
and
fld
out
mov
mov
pop
daa
mov
sahf
add
mov
xor
pusha
push
xor
mov
enter
mov
mov
adc
jae
outs
pop
xor
std
lds
pop
mov
inc
aas
xchg
dec
inc
pop
pop
nop
arpl
or
and
xor
jmp
pop
popa
and
cmc
dec
movs
dec
jne
jmp
clc
lds
inc
int
pushf
in
jne
into
in
pop
(bad)
sar
and
mul
mov
and
mov
cmp
(bad)
fdiv
jns
mov
jge
in
cmc
daa
pop
movs
into
aas
std
ret
sbb
xchg
lods
lods
jecxz
daa
popf
push
dec
xchg
int
test
mov
test
shl
or
fisttp
movs
lea
xchg
or
inc
jne
stc
rol
out
add
inc
xor
and
sbb
fst
icebp
add
icebp
iret
retf
xchg
cmps
mov
sbb
in
pop
repz
seto
sbb
cdq
adc
imul
cmp
mov
mov
jge
in
mov
fnop
test
mov
inc
je
jmp
xor
inc
loope
jl
mov
and
ins
(bad)
lods
or
add
cld
xor
gs
push
fst
in
dec
popf
push
pushf
or
mov
ret
add
loop
loopne
fldcw
jg
dec
popa
movs
dec
cmp
cwde
test
inc
dec
jns
daa
mov
push
fisubr
push
xor
jp
dec
mov
mov
aam
test
ror
leave
repz
xchg
sub
stos
call
test
inc
dec
data16
xor
or
mov
mov
(bad)
fcmovnbe
cmp
adc
inc
(bad)
pusha
mov
xor
pop
mov
ins
xlat
push
or
sar
sbb
add
fadd
inc
test
inc
and
and
scas
xor
mov
(bad)
retf
adc
pop
sbb
sbb
pop
xor
adc
movs
xor
lds
dec
retf
icebp
addr16
sub
mov
stos
jmp
jae
pop
mov
xchg
add
call
mov
fild
mov
out
sub
jmp
push
daa
dec
leave
imul
pop
inc
push
aas
int3
push
mov
jbe
aas
push
mov
ficomp
and
jns
xchg
into
sbb
imul
pop
(bad)
scas
loope
jns
mov
pop
into
inc
call
repnz
test
sahf
aam
add
not
sbb
cmps
adc
push
and
xor
loope
jl
and
xchg
movs
mov
push
aad
test
and
(bad)
js
sbb
push
loop
sahf
adc
mov
cmp
lahf
aaa
xor
push
ja
push
dec
or
es
xor
ret
mov
xor
push
cmp
add
std
das
push
test
mov
lea
dec
sub
mov
pop
adc
add
inc
repz
fmul
sbb
int
inc
pop
sbb
jle
inc
inc
in
cmp
pop
mov
xchg
or
jle
mov
sbb
xor
imul
and
inc
addr16
dec
aad
pop
cmp
fwait
dec
mov
mov
inc
and
mov
push
push
aaa
xchg
repnz
stos
cmp
and
pop
xor
jb
pop
outs
scas
push
mov
xor
mov
or
daa
and
adc
daa
test
aam
mov
rcl
fwait
jo
cmc
lahf
dec
add
push
cmp
out
pop
aas
inc
enter
push
sar
popa
movs
movs
(bad)
(bad)
ins
ficom
int
inc
in
inc
add
fidivr
(bad)
or
call
nop
mov
out
(bad)
ffree
pop
movhps
div
(bad)
out
xchg
cmc
xchg
in
mov
push
jg
popa
and
push
mov
pushf
clc
call
out
not
push
pop
or
add
cmp
sahf
mov
mov
cmc
push
sbb
sti
or
adc
mov
and
loopne
ret
popf
leave
xor
scas
hlt
in
pop
je
mov
push
mov
(bad)
adc
shl
fadd
fwait
mov
mov
cs
dec
je
jmp
inc
lds
xchg
stos
push
int
outs
push
loope
push
fcomp
cmp
mov
and
fist
call
ficomp
imul
(bad)
scas
cmp
retf
xlat
pop
mov
cmp
xor
fnstsw
(bad)
jb
ds
cmc
outs
dec
cwde
mov
sbb
or
ins
push
push
jae
add
xchg
pop
mov
inc
scas
sti
test
jmp
jp
cmp
sub
mov
enter
mov
sub
xor
pushf
arpl
dec
sbb
jmp
jmp
jmp
mov
cwde
cli
dec
jae
das
jno
cmp
pop
(bad)
int
neg
add
mov
jns
aaa
and
inc
xlat
adc
add
cmp
adc
fstp
bnd
imul
scas
or
push
pushf
and
mov
test
out
cmp
vcvtss2sd
jge
cmp
ffreep
(bad)
fiadd
adc
mov
pop
popf
ror
push
sahf
imul
hlt
inc
or
add
adc
mov
and
jno
inc
xchg
adc
pop
push
xchg
(bad)
aam
fild
jge
mov
icebp
test
add
sbb
ins
cmp
out
push
push
push
call
aam
mov
lods
mov
int
mov
movs
pop
jb
xlat
test
mov
and
cwde
test
mov
cld
adc
ud0
sbb
les
jle
dec
sub
xor
add
sub
data16
pop
pop
push
inc
stc
cmp
cmp
pop
sbb
jne
pop
stos
add
out
sbb
lds
fs
leave
es
xchg
jl
jg
and
jae
cmp
repz
sbb
pop
pop
aad
inc
sub
test
rcl
cld
mov
or
(bad)
sbb
aaa
and
setns
xor
inc
inc
adc
sbb
mov
lods
mov
and
or
xchg
stc
sbb
add
jle
pop
cmp
stos
repnz
adc
loop
jmp
popa
stos
loope
sbb
(bad)
mov
call
dec
data16
xor
mov
hlt
lds
or
push
or
aam
dec
sub
mov
es
adc
int
sbb
mov
xor
bound
jno
cld
jg
hlt
or
fldcw
imul
inc
sbb
jle
std
ret
add
movs
and
push
dec
into
sahf
mov
jo
outs
movs
pop
enter
ja
inc
and
xchg
data16
xchg
mov
cld
jle
adc
(bad)
pop
es
push
push
mov
mov
pop
fstp
mov
dec
cmc
call
lods
xor
mov
(bad)
(bad)
cs
les
mov
xchg
xchg
xor
sahf
pop
dec
cdq
mov
mov
mov
das
in
jmp
imul
hlt
fwait
movs
or
sub
push
sub
xor
scas
xor
add
pop
js
jno
test
sbb
into
popf
call
adc
ds
fcmovnbe
fwait
mov
mov
lock
in
jge
mov
xchg
xor
mov
xor
out
mov
add
ss
xchg
sub
inc
retf
xor
or
movs
pop
mov
popf
push
fsub
add
and
lahf
rcr
pusha
xor
xor
dec
xchg
and
cmp
call
mov
outs
jo
mov
mov
imul
or
scas
mov
cmp
pushf
add
(bad)
mov
xlat
cmp
xchg
push
sar
repz
mov
or
sub
shl
aas
ins
push
push
call
dec
scas
inc
cmp
push
adc
xchg
or
lock
(bad)
fdiv
xor
add
cmps
adc
cmc
xchg
xchg
pop
fcom
ret
mov
pop
lock
mov
add
cmp
out
enter
test
scas
cmps
jb
jbe
int
shr
stos
outs
inc
adc
std
lea
dec
pop
call
jmp
inc
mov
cmp
inc
push
or
sbb
mov
lds
fnstcw
pop
xor
or
fsub
xlat
xchg
cdq
adc
inc
xchg
or
cmp
cmp
mov
repz
push
repnz
sbb
push
pop
fidivr
xchg
into
cld
ror
das
dec
cdq
jbe
clc
(bad)
movntps
imul
sbb
sub
cmp
test
adc
inc
sub
mov
xchg
mov
cmps
popf
repz
fmulp
dec
mov
stos
cmc
xchg
iret
in
jg
jmp
mov
into
jns
cmc
ins
mov
mov
gs
ins
rcr
outs
mov
pop
movs
jae
fiadd
push
mov
mov
or
mov
xlat
mov
jp
adc
jb
sbb
mov
xor
aas
ror
jmp
cli
fwait
pop
cmp
jge
dec
mov
fild
mov
fdivr
ret
into
pop
jl
jb
cmp
rcr
xchg
lock
fild
shr
les
fucomp
mov
push
sub
test
(bad)
xchg
pop
xor
mov
test
sub
xor
inc
inc
jae
aaa
movs
fs
pop
fdivr
jbe
xchg
icebp
arpl
adc
push
ss
fdiv
dec
stc
mov
out
cdq
mov
xor
loop
xlat
mov
js
ins
mov
cmps
push
add
inc
dec
fwait
in
fimul
add
dec
repnz
and
mov
aad
pop
xchg
in
add
jle
cmp
mov
fidivr
mov
adc
and
and
and
ret
or
and
into
sbb
push
outs
inc
push
xor
pusha
fst
stc
mov
ja
lods
add
ret
inc
sbb
fidiv
aad
pop
mov
lock
cs
fimul
addr16
xor
cmp
add
and
mov
ret
(bad)
call
(bad)
retf
cmp
aaa
sbb
ss
inc
icebp
mov
mov
push
(bad)
loop
cmp
shl
stos
in
aaa
sbb
sbb
mov
dec
sub
les
push
push
add
ret
and
inc
xchg
sti
lods
pop
jg
and
dec
push
fcom
inc
leave
mov
stos
ins
mov
mov
gs
cmp
or
xchg
icebp
xor
cmc
sub
add
xchg
imul
sbb
jle
test
cld
mov
fadd
stc
inc
dec
movs
mov
stos
mov
daa
repnz
addr16
inc
(bad)
sti
jge
mov
and
inc
mov
mov
jo
ficom
sub
fs
and
fstp
sbb
sbb
test
mov
jbe
sub
sbb
mov
daa
push
aaa
fist
xchg
cdq
sub
lock
jp
jmp
add
dec
imul
sub
add
pop
daa
jle
fucomip
mov
mov
popf
popf
sbb
mov
jns
pop
or
outs
mov
cmp
movs
rcr
cli
mov
add
int3
xchg
xchg
retf
push
stc
sub
push
mov
ds
push
jecxz
sub
fstp
add
call
push
mov
mov
pushf
fdivr
cmps
repnz
push
add
push
or
je
mov
fild
cmc
retf
and
(bad)
or
xor
jne
movs
pop
fs
rcr
ret
shr
movs
dec
mov
push
xlat
lahf
sub
push
add
add
dec
lods
cmp
jmp
push
pop
jb
setge
sub
sub
pushw
add
stos
test
scas
add
xor
or
cdq
cmp
push
jno
std
mov
mov
sbb
loop
mov
ins
jge
inc
dec
(bad)
dec
mov
or
jbe
sub
mov
lods
adc
ins
inc
dec
repz
sbb
dec
dec
nop
pop
jae
add
ss
inc
push
mov
out
(bad)
mov
popf
cmp
scas
cmp
(bad)
(bad)
mov
jmp
jne
add
and
test
sub
sbb
ret
je
dec
xchg
imul
(bad)
mov
scas
add
adc
int
outs
dec
retf
mov
inc
and
mov
rcl
retf
xchg
push
aas
mov
pop
or
inc
adc
or
loope
push
loop
xchg
and
fist
cmp
cmp
pop
xor
pop
sti
pop
(bad)
mov
jmp
jle
mov
push
push
ror
cmp
mov
mov
xlat
enter
loop
pop
retf
ret
sub
jo
fidiv
push
iret
mov
adc
mov
mov
and
aam
into
arpl
cmp
nop
in
adc
dec
iret
add
neg
repnz
es
retf
rcl
lsl
sbb
fwait
test
ja
cs
(bad)
into
cmps
push
in
retf
jmp
jl
dec
ins
in
jae
jnp
sub
les
rcr
jns
int
shl
mov
mov
sbb
gs
mov
add
and
stos
fisttp
out
aas
lock
ret
popa
xchg
sbb
dec
in
jno
pushf
cmps
popa
or
inc
ja
daa
aam
cmp
cmp
push
dec
add
lods
ret
or
inc
cld
sbb
mov
cmp
(bad)
push
data16
mov
cmp
add
pusha
iret
xlat
cmps
sti
test
dec
call
rol
mov
fldpi
not
fwait
ins
cwde
div
loopne
loope
lods
sub
in
pop
mov
loop
test
push
push
adc
fisttp
inc
std
mov
xchg
cmp
push
stc
addr16
aas
jmp
jge
push
jns
mov
mov
mov
inc
mov
sbb
rcr
shl
xchg
pop
jns
cmp
loopne
enter
mov
xor
test
test
bound
aaa
movs
jns
push
shl
in
push
push
fdivr
jmp
jg
pop
loopne
mov
or
fnop
add
adc
test
enter
push
fsubrp
dec
ds
outs
xor
(bad)
dec
ins
xor
jecxz
and
aad
sbb
lds
cwde
jb
dec
add
mov
xor
mov
dec
sub
in
out
lea
or
mov
cmp
add
jmp
jbe
lahf
push
in
pushf
scas
mov
add
xchg
xchg
inc
movs
and
addr16
pop
jge
stc
test
mov
sub
pusha
nop
sbb
lds
adc
inc
scas
call
mov
add
jecxz
sub
dec
adc
pusha
cdq
add
mul
jo
push
inc
mov
mov
xor
push
xchg
out
pop
jp
ss
dec
push
ja
stos
jno
fistp
shr
(bad)
shr
fwait
mov
adc
loop
test
shl
push
iret
fldln2
imul
outs
int
into
adc
jb
push
iret
push
mov
outs
xchg
addr16
test
dec
pop
adc
sbb
not
icebp
in
or
sbb
mov
out
or
movs
pop
inc
mov
iret
(bad)
sub
leave
(bad)
cmp
jle
arpl
sbb
les
push
test
test
xor
rol
sbb
sub
cli
out
pop
jne
push
sub
outs
fwait
xor
jle
sti
push
adc
push
jle
push
fld
into
and
loope
hlt
add
das
lock
or
sub
jns
mov
call
cld
add
pop
cmp
out
mov
mov
mov
call
mov
cmc
cli
cs
xlat
sub
mov
push
aas
mov
add
call
mov
pop
inc
push
xor
enter
cmps
shl
sbb
xor
loope
and
(bad)
cmp
int3
fdiv
adc
inc
mov
sub
xor
xchg
jge
enter
aaa
mov
inc
pop
inc
pop
jne
cmp
fistp
pop
push
or
aam
jecxz
xchg
mov
mov
mov
jne
mov
pop
outs
ror
add
inc
or
aam
mov
enter
jl
sub
(bad)
popa
pop
je
call
push
pop
js
push
hlt
pop
or
in
ja
fdivr
lock
and
push
sub
test
ja
or
mov
repnz
mov
xor
dec
hlt
call
dec
sbb
ficom
sahf
stc
paddusb
movs
sub
sbb
rol
jnp
icebp
or
cmp
shl
mov
retf
xor
test
cmp
cli
test
xchg
and
jnp
call
and
push
test
stos
or
add
fcomp
pop
daa
fiadd
test
cli
lds
inc
add
stos
add
mov
jg
cmp
retf
push
stos
xor
cmc
mov
mov
mov
scas
add
out
into
mov
sbb
bound
inc
fcmove
enter
(bad)
call
jl
xchg
mov
(bad)
lds
pop
daa
std
popa
outs
sahf
xlat
xor
add
mov
ret
or
hlt
test
(bad)
std
cld
enter
add
adc
cmp
pop
xchg
push
inc
(bad)
and
fwait
(bad)
leave
cmp
mov
sbb
clc
out
inc
and
adc
dec
mov
iret
imul
mov
ins
test
adc
push
sbb
sbb
mov
sbb
movs
sbb
test
xor
xor
stos
dec
xor
or
rcr
inc
out
jns
pop
sbb
dec
out
js
mov
and
adc
aaa
and
(bad)
shl
xor
jo
shr
retf
shr
push
ja
jl
lds
xor
adc
mov
cmp
pop
out
int
(bad)
sbb
or
ins
in
and
and
inc
xchg
scas
aas
jle
call
fild
jbe
and
bound
sub
enter
push
dec
aam
mov
in
mov
and
mov
sti
push
hlt
push
mov
push
adc
cmp
sub
and
dec
pop
sti
push
sbb
enter
ss
shr
dec
add
ds
adc
jmp
mov
rol
(bad)
(bad)
inc
fstp
test
bound
xor
lea
cmp
sbb
mov
adc
xor
cmp
push
les
and
cmp
sbb
cmp
es
pop
fnstsw
mov
cmp
aam
cmp
xchg
outs
not
mov
out
iret
jne
mov
retf
dec
(bad)
push
pop
sbb
(bad)
or
pop
sbb
cmp
mov
jae
jns
or
call
sar
dec
psrlw
dec
push
movs
aaa
sbb
arpl
inc
aaa
xor
sub
xchg
repnz
mov
cmc
arpl
(bad)
js
dec
add
jnp
dec
mov
fisttp
rol
mov
mov
jns
pop
fdiv
fsub
mov
xor
xlat
pop
dec
aam
pop
jecxz
in
test
ret
mov
xor
add
mov
fptan
pop
xor
loop
dec
pusha
mov
push
daa
mov
push
mov
mov
push
shr
mov
(bad)
aaa
popa
add
out
push
out
inc
sub
pop
xchg
cmp
push
xchg
movs
cld
(bad)
mov
arpl
int3
and
mov
mov
cwde
jno
(bad)
mov
push
mov
push
cmovo
mov
adc
xor
sahf
dec
scas
xor
mov
adc
xchg
sub
mov
push
in
add
mov
(bad)
mov
xchg
xchg
xchg
inc
push
pusha
adc
loope
les
in
pop
jmp
mov
rol
ret
pop
sub
vmwrite
nop
jge
pusha
cmp
xor
iret
iret
enter
mov
ins
test
jl
push
in
lock
mov
push
leave
push
sub
cs
xor
xor
popf
mov
mov
popa
data16
adc
cwde
mov
test
sub
and
push
or
aas
inc
push
test
aam
loopne
rcl
mov
mov
inc
imul
pop
xchg
dec
enter
scas
or
loop
ret
cwde
pop
imul
mov
ror
packssdw
out
add
push
lods
fdiv
sbb
jp
es
push
mov
mov
cmp
sti
sbb
sub
mov
pop
outs
mov
aad
fcom
rcr
inc
js
in
inc
mov
les
pop
xor
xchg
loop
sbb
test
dec
jmp
rcr
xchg
(bad)
arpl
outs
aam
imul
push
lea
ss
sub
jmp
shl
es
mov
aad
mov
mov
xchg
xchg
not
or
add
mov
call
mov
xchg
mov
xchg
sbb
sbb
mov
aas
jmp
popf
cld
cdq
adc
jge
jle
or
stos
jbe
call
(bad)
mov
sbb
out
mov
adc
int
sahf
fld
fmulp
sbb
loop
pop
inc
(bad)
cmp
dec
stos
enter
shl
test
mov
cli
loope
call
push
outs
sahf
test
mov
data16
ret
in
pop
test
test
dec
lock
sbb
pusha
test
mov
sbb
cld
dec
push
hlt
mov
xchg
gs
cmps
lea
pop
popf
sub
mov
adc
add
stos
or
fsub
call
jo
ror
cmps
mov
fadd
xchg
mov
mov
addr16
popa
push
adc
push
or
in
aad
push
data16
jnp
div
push
jecxz
mov
cmps
imul
arpl
inc
cmps
inc
inc
cmp
jecxz
mov
mov
xchg
in
jb
jb
cmps
jns
cmp
push
imul
xchg
stos
aam
push
test
mov
xor
mov
pop
lock
(bad)
out
in
call
daa
dec
xor
popa
ret
popf
fs
fsub
mov
inc
fbld
jg
int
mov
add
fs
cmp
adc
add
stos
sbb
lods
repnz
pop
mov
mov
jno
pop
mov
es
call
jbe
data16
jmp
mov
inc
das
mov
pushf
hlt
push
jl
adc
inc
push
enter
pop
(bad)
jbe
mov
ins
lds
cmc
mov
out
in
outs
mov
xor
sbb
or
(bad)
loope
cmp
loopne
mov
or
mov
dec
call
popf
aas
gs
add
imul
pop
push
sbb
mov
push
inc
out
adc
xor
scas
stos
aas
xchg
mov
(bad)
ins
sub
pop
and
loope
or
push
lock
loopne
sar
jbe
mov
les
not
jmp
into
mov
adc
push
shr
arpl
cmp
mov
in
ds
clc
xchg
inc
movs
mov
sar
loop
pop
xchg
lods
imul
outs
ds
sub
cwde
cmp
xor
mov
sbb
loop
add
dec
shr
lea
jae
cwde
es
adc
cmp
ins
aam
test
inc
test
sub
xchg
das
test
xchg
push
icebp
xchg
and
fcomi
fwait
push
pop
in
xchg
aaa
hlt
retf
xor
sbb
fistp
call
cmps
repz
mov
(bad)
jne
rcl
mov
push
pop
pop
jecxz
enter
ret
mov
out
out
cmp
not
iret
push
cmp
mov
mov
ror
ret
mov
mov
fisttp
or
inc
xor
fcom
mov
dec
or
mul
adc
aas
xor
icebp
add
(bad)
push
mov
cmc
clc
push
repnz
or
sub
outs
inc
retf
dec
div
cmp
or
push
test
sbb
push
jge
mov
js
pusha
cwde
and
movs
push
sub
dec
sbb
(bad)
pop
jl
pop
dec
sub
mov
add
imul
and
ins
movs
lahf
pusha
or
mov
icebp
push
fldcw
lahf
sub
jp
sbb
fs
(bad)
fs
xchg
lea
push
sbb
or
fcom
mov
pop
xchg
sti
fmul
leave
sbb
les
(bad)
jge
mov
arpl
in
fdiv
aad
or
inc
mov
xor
xor
mov
aaa
adc
mov
inc
pop
popf
out
sub
(bad)
das
add
xchg
mov
retf
sbb
jbe
mul
cmp
pop
stos
ret
jp
adc
fimul
mov
dec
adc
int
mov
xor
xlat
jns
aad
mov
mov
pop
in
pushf
leave
paddb
or
shl
jmp
cmp
lds
cmp
sbb
sub
mov
and
sbb
inc
jl
inc
int
das
mov
les
(bad)
push
sbb
sub
mov
sbb
lods
in
pop
sti
test
pop
adc
call
sub
xchg
push
rcr
sbb
xlat
das
mov
dec
in
ret
loopne
or
jg
into
inc
or
repnz
pop
sbb
ja
push
cdq
adc
xchg
jl
into
inc
sbb
sti
(bad)
fidiv
adc
pop
(bad)
std
les
dec
unpcklps
jb
push
loop
pop
sbb
jbe
push
inc
cmp
or
sub
pop
shl
mov
xor
mov
mov
or
fst
out
mov
pop
cmp
mov
stc
mov
inc
adc
(bad)
cmp
pop
mov
or
lods
mov
sti
test
fist
rep
mov
adc
repz
pop
fnstenv
push
aas
pop
mov
jl
mov
daa
or
aad
jnp
shr
mov
inc
out
or
cmp
mov
dec
fist
pop
shl
and
mov
test
jge
stos
jecxz
push
jnp
test
inc
stos
ficomp
sbb
loop
es
push
and
lea
stos
cmps
sti
jb
mov
iret
ds
stos
inc
les
lods
jns
sub
fs
inc
ror
cmp
xor
test
jno
mov
(bad)
nop
or
push
mov
aam
je
pop
mul
jecxz
mov
pop
cmp
xor
lahf
and
or
sub
fs
mov
lods
movs
shr
sub
inc
daa
jg
xor
scas
dec
ds
pop
ror
out
mov
(bad)
jge
pop
jns
ret
and
jb
pop
dec
xchg
lock
mov
sbb
cmps
mov
fdiv
dec
xchg
jge
aam
icebp
adc
jbe
or
ins
jb
and
popf
bnd
repnz
lahf
ins
jmp
sahf
mov
aam
xchg
(bad)
imul
ja
les
dec
outs
mov
rol
xchg
shr
inc
sahf
pop
fwait
pop
loope
scas
jp
ret
aaa
fsubr
call
inc
jns
out
and
adc
(bad)
xchg
mov
cmp
int
in
out
test
add
or
ret
in
sub
pop
loopne
cmp
sub
push
ret
adc
je
sahf
jl
imul
popa
push
xchg
cmps
fs
pop
inc
mov
mov
rcl
inc
and
jmp
push
mov
jge
test
iret
inc
ret
or
push
inc
les
dec
mov
jge
in
push
fisub
aam
mov
out
xchg
add
adc
dec
mov
(bad)
inc
call
add
clc
xor
pusha
mov
push
xor
add
fidivr
sub
cs
jb
rcr
inc
ret
sub
and
popa
jmp
aam
cmp
inc
call
pop
inc
ret
(bad)
fldenv
sti
stc
cwde
dec
pop
dec
xchg
rcl
or
jbe
mov
in
ficomp
add
repz
inc
dec
mov
mov
cs
jb
pop
mov
leave
inc
mov
mov
aas
dec
xor
dec
push
mov
sbb
or
mov
dec
or
repnz
inc
sub
inc
inc
and
cmp
xlat
(bad)
shl
es
icebp
cmps
repnz
jne
add
pushf
xchg
and
dec
xor
int3
test
inc
fadd
shr
shr
and
sahf
push
pop
mov
lock
adc
fst
and
mov
sti
lea
jmp
mov
xchg
jns
ja
add
dec
inc
jmp
inc
repnz
movs
mov
or
jle
jl
cmps
adc
xchg
pop
jge
add
hlt
sbb
fistp
jmp
fs
into
f2xm1
dec
and
leave
cmps
fstp
mov
adc
dec
scas
push
les
cli
ins
addr16
mov
push
jno
or
xchg
push
icebp
add
mov
shl
sbb
push
(bad)
mov
pop
adc
loopne
(bad)
mov
xchg
xlat
dec
inc
out
cmp
fwait
cmp
and
aaa
sbb
hlt
clc
retf
loope
aas
sar
gs
aaa
push
push
push
test
aam
adc
cmp
mov
fsub
push
xor
push
pop
pop
lea
ss
imul
mov
or
mov
loope
enter
push
loope
out
add
cmp
and
mov
cmps
mov
(bad)
mov
aaa
jmp
mov
push
adc
loop
(bad)
jp
jg
scas
and
js
shr
inc
jl
adc
mov
mov
add
in
mov
and
movs
out
div
pop
xchg
dec
jae
xor
jg
cli
add
je
adc
clc
scas
jo
mov
bound
xor
(bad)
xchg
hlt
mov
mov
sar
in
sub
out
inc
and
out
push
dec
in
jl
ds
cmp
push
outs
out
and
outs
adc
movs
out
ins
push
cmp
fucomi
mov
leave
mov
bound
sbb
jg
add
cdq
sbb
mov
and
sbb
mov
and
scas
xor
fs
xchg
fistp
cdq
mov
jbe
mov
test
call
cwde
jg
sub
loopne
call
shl
pushf
add
lahf
pop
dec
in
aam
repnz
bound
sahf
and
nop
jmp
das
jmp
out
sub
icebp
mov
mov
ficom
push
jno
test
inc
xor
push
adc
lock
or
push
mov
fdiv
mov
int
lods
sub
mov
fwait
ss
jg
icebp
xor
leave
(bad)
mov
(bad)
xchg
mov
xor
daa
adc
push
mov
hlt
retf
jl
or
call
inc
push
in
or
mov
push
into
jae
test
and
add
pop
ficomp
jg
sbb
test
(bad)
or
fild
test
daa
adc
add
xchg
mov
xchg
das
scas
sub
dec
inc
jo
(bad)
fistp
cwde
and
mov
cmp
inc
jbe
jo
sbb
ss
add
jle
dec
mov
es
pusha
aam
sbb
fst
push
jb
repz
mov
mov
add
cmc
cmp
push
mov
scas
mov
aas
(bad)
pop
imul
add
inc
inc
dec
adc
mov
iret
ret
mov
lds
cli
or
or
and
add
pushf
nop
sbb
xor
sub
push
enter
sbb
ja
cmps
inc
aaa
popf
fs
adc
inc
hlt
ins
inc
dec
sub
inc
(bad)
sbb
test
dec
mov
xor
ins
mov
ret
push
movs
fisub
xor
iret
mov
test
add
fisubr
jae
push
pop
pop
pop
mov
pusha
jmp
mov
in
sub
jg
cmp
mov
xchg
mov
jbe
cmp
clc
sub
xor
shl
inc
sbb
cmp
push
mov
mov
cli
mov
loop
ja
xor
pop
cmp
push
test
popf
xlat
add
pop
(bad)
shl
lods
shl
popa
push
and
bound
imul
outs
sbb
pop
mov
add
fild
adc
pop
repnz
xchg
push
push
push
lods
icebp
pop
dec
(bad)
repnz
lods
mov
jl
pop
imul
inc
sbb
jp
xchg
dec
adc
inc
mov
iret
ret
imul
cmp
push
fsubp
cmps
mov
or
inc
es
sub
scas
aad
xor
or
outs
mov
push
loope
dec
dec
push
stos
xor
xor
mov
mov
stos
sbb
push
fcmovne
mov
or
loop
inc
frndint
cwde
add
test
dec
fisub
add
add
adc
cli
jl
(bad)
jno
or
iret
(bad)
push
fst
inc
xor
(bad)
movs
repz
js
push
je
add
mov
fwait
jno
mov
outs
sub
mov
jmp
aad
mov
push
fstp
jg
inc
in
xor
add
mov
std
aam
xor
les
int
mov
ds
not
sub
pop
sar
push
fst
dec
leave
add
stc
xchg
loopne
fdivr
fs
adc
rol
cmp
fadd
cwde
fs
call
dec
es
out
xchg
lahf
imul
push
xchg
pop
xor
inc
xor
std
or
mov
aaa
xor
mov
icebp
sub
sbb
jle
scas
out
push
mov
ret
mov
adc
pop
test
or
ror
std
sbb
adc
scas
imul
pop
jecxz
jl
dec
push
cmps
xchg
dec
lahf
out
dec
cmps
xor
das
mov
(bad)
std
(bad)
in
mov
std
retf
adc
adc
mov
and
adc
dec
ret
les
fst
mov
ficom
mov
das
and
repz
mov
push
dec
adc
adc
and
pop
or
loop
pusha
cmp
adc
hlt
xlat
push
pop
imul
and
or
push
adc
and
(bad)
outs
add
or
test
xor
aam
xor
data16
popa
imul
adc
aam
sar
test
vphadduwd
pushf
jne
pop
lods
cmp
stos
adc
mov
mov
or
mov
outs
outs
pop
fldenv
rcl
test
icebp
dec
pusha
mov
sti
add
aas
cs
xchg
stc
retf
bound
mov
outs
push
xchg
add
mov
mov
cld
data16
jbe
loope
lods
outs
jns
push
sub
shl
adc
jbe
pop
into
ins
mov
pop
cmp
pusha
retf
sbb
cdq
mov
push
test
adc
sar
xchg
lahf
sbb
jb
stos
es
adc
add
mov
ins
leave
jne
xchg
mov
and
dec
mov
shl
out
fs
ins
dec
add
(bad)
js
xor
pop
push
add
jbe
pop
mov
(bad)
mov
out
rcl
or
int
ror
dec
sub
or
sub
lods
mov
or
retf
das
pop
call
ficomp
loope
and
jae
and
lods
out
enter
and
jo
mov
dec
cmp
fisttp
mov
daa
inc
into
cdq
js
std
inc
(bad)
retf
(bad)
popf
nop
or
xchg
(bad)
std
ret
je
aam
jb
sbb
loopne
push
in
call
cdq
mov
push
mov
dec
push
inc
loop
out
(bad)
jnp
fidivr
icebp
dec
push
xor
std
adc
jnp
fisttp
(bad)
jmp
sbb
test
lods
mov
aas
xchg
jne
out
ret
jnp
jmp
enter
lea
xchg
adc
aam
mov
mov
into
jg
int
sahf
xchg
mov
xor
fwait
imul
xchg
mov
mov
and
dec
repnz
retf
cmc
push
out
push
cmps
inc
out
ret
cmp
push
inc
ds
pop
xchg
pop
sub
xchg
(bad)
mov
icebp
dec
stc
sahf
inc
sub
push
push
loopne
adc
js
cmp
dec
xchg
sbb
fmulp
scas
xor
stos
das
fwait
in
lods
(bad)
stos
shl
call
lea
mov
sub
mov
add
fst
xlat
cmp
rcr
sub
pop
xor
add
and
scas
stos
push
or
add
sbb
xor
or
cmc
fld
sbb
sbb
rol
lds
jg
lahf
hlt
(bad)
in
cmp
ds
rcl
push
mov
les
cmps
pop
adc
adc
pop
popf
jmp
ds
jle
movs
cmp
(bad)
out
jge
je
sbb
fcom
aam
cmp
in
jl
xchg
mov
xor
push
xchg
inc
js
add
ffree
jg
icebp
mov
pop
mov
pushf
dec
retf
rcl
das
mov
add
clc
sahf
int
jmp
popa
mov
fs
inc
push
xor
cmp
push
adc
sub
pop
pop
dec
test
jne
es
mov
xor
push
dec
ss
pop
cmp
js
loopne
addr16
push
mov
addr16
or
mov
outs
cmp
pop
push
stos
push
(bad)
pushf
mov
pop
scas
out
pusha
push
add
jp
inc
movs
xchg
add
cmp
daa
fsubrp
and
mov
jne
inc
pusha
add
ror
lods
sub
adc
hlt
imul
mov
jbe
jmp
test
xor
push
leave
cwde
jbe
(bad)
mov
push
jns
mov
mov
xor
xlat
sbb
inc
jo
dec
xchg
inc
inc
sbb
xchg
mov
sti
dec
push
in
jmp
jmp
pop
icebp
xor
inc
mov
(bad)
out
je
test
cmp
pop
cld
dec
xor
dec
add
mov
in
scas
shr
arpl
xchg
and
jbe
clc
pop
push
cli
sbb
jno
sbb
popf
in
adc
imul
push
mov
fidiv
push
adc
pop
stc
pop
mov
cmp
jecxz
loope
aad
sub
nop
add
mov
ins
cmp
imul
pop
inc
shl
call
imul
sbb
xchg
xchg
imul
dec
popa
ss
jmp
int3
or
sub
jp
je
lock
dec
jecxz
lods
mov
add
ret
ins
ins
add
(bad)
pusha
pop
dec
fwait
jmp
fbstp
adc
xchg
ds
mov
cmp
xchg
ret
ds
jnp
sti
xor
or
jl
or
call
pop
or
ret
dec
adc
mov
imul
xlat
hlt
and
mov
adc
stos
popa
div
mov
popf
cmp
jns
xchg
inc
fsub
mov
mov
xlat
pop
inc
(bad)
out
sti
fidivr
push
das
imul
neg
adc
xor
shl
sbb
lock
and
fadd
dec
pusha
loopne
push
fdiv
jne
movs
or
inc
xor
push
push
imul
into
or
push
pop
popf
adc
outs
cmc
test
mov
int
inc
and
xor
mov
add
sbb
pop
fild
fwait
jge
adc
push
rcr
popf
mov
add
sub
adc
loope
mov
push
sbb
sbb
or
push
jmp
or
mov
into
push
xchg
call
aas
aaa
or
push
scas
inc
stos
xor
outs
sahf
sub
inc
mov
inc
mov
xchg
or
sub
pop
xor
(bad)
mov
cwde
sbb
xor
popa
test
push
not
add
adc
icebp
mov
jl
clc
push
test
mov
or
xor
adc
mov
sbb
rcr
hlt
push
adc
shr
out
sbb
sbb
push
and
cmp
sub
pop
enter
aad
push
push
xor
push
(bad)
movs
cmps
cld
call
fisttp
xchg
pop
push
mov
mov
out
push
cdq
dec
mov
xchg
add
stos
jl
mov
mov
xchg
scas
pop
mov
jmp
std
(bad)
into
or
clc
adc
or
scas
xor
(bad)
retf
aaa
adc
pushf
mov
cmp
jle
mov
stos
ins
jb
cmp
pop
cmp
xchg
mov
mov
xchg
pop
xchg
movs
and
jge
dec
cmp
gs
inc
lods
pop
movups
mov
or
loope
es
leave
dec
das
mov
shr
dec
sbb
pop
(bad)
bound
aas
xchg
add
out
mov
dec
or
jg
popa
cwde
pop
dec
dec
ficom
pop
ds
add
jnp
ins
pop
and
hlt
adc
mov
dec
retf
mov
out
out
xchg
pushf
sar
stc
stos
fbstp
sbb
cli
sar
test
mov
adc
xor
lahf
mov
push
jmp
pop
jp
aaa
(bad)
push
imul
jmp
jg
(bad)
and
adc
popa
xchg
out
add
pop
fdiv
mov
je
punpckhbw
in
sar
xor
test
popa
mov
xor
adc
shl
and
lods
ja
cmps
loopne
fcomip
cmp
(bad)
sub
xchg
push
lahf
retf
mov
push
imul
fisttp
sbb
scas
cmc
mov
jp
cmp
arpl
sbb
inc
and
sbb
xchg
mov
dec
xor
outs
xor
test
in
pop
neg
enter
aam
or
stos
pop
dec
dec
adc
mov
dec
int3
and
or
dec
jmp
rcl
mov
aas
adc
mov
out
xor
sbb
pop
iret
repz
mov
pop
pop
adc
fdivr
in
adc
and
int3
mov
adc
add
pop
xchg
xchg
(bad)
lods
imul
fistp
inc
fcmovbe
daa
sbb
cmp
loopne
out
rcl
cwde
sbb
rcr
lds
xor
dec
mov
or
dec
std
lock
sbb
or
mov
cmp
push
aad
or
nop
popa
sub
inc
fbstp
jne
sub
fidivr
loope
bound
xchg
mov
inc
retf
pop
sub
adc
pop
daa
xor
add
je
rcl
mov
daa
addr16
jecxz
inc
mov
(bad)
lds
fdivr
aad
push
lahf
xor
adc
in
aas
ss
push
popf
mov
call
push
cmps
loop
out
sub
cdq
jo
pop
mov
jo
jmp
xchg
sbb
inc
jge
sub
sub
popf
jnp
jg
(bad)
mov
jge
push
or
in
aad
xchg
out
xchg
cwde
pop
test
adc
fild
and
pop
leave
jno
cmp
pop
xor
push
dec
hlt
jnp
pusha
aas
ja
(bad)
jo
inc
add
retf
mov
mov
neg
push
and
jg
movs
outs
or
pop
xor
jae
lods
sub
push
inc
jg
push
inc
ins
movs
aam
xchg
ja
pop
test
fadd
inc
xor
and
mov
push
cwde
pop
pop
jl
fisub
or
jnp
jnp
adc
pop
cmp
pop
mov
jg
fisubr
shr
nop
shr
push
jmp
(bad)
pop
(bad)
xlat
jbe
sub
lahf
ss
pusha
fistp
inc
icebp
cmp
test
lea
lahf
or
mov
inc
(bad)
mov
xor
xchg
daa
fwait
out
sbb
(bad)
inc
call
nop
dec
push
push
xor
dec
sub
xor
(bad)
movs
and
outs
and
xchg
mov
mov
or
hlt
icebp
sub
rcl
pop
loopne
int
test
hlt
out
fs
mov
aad
push
mov
push
push
or
fxch
fsubr
cmp
push
or
movs
cmp
stc
sbb
cmp
dec
adc
popa
(bad)
frstor
jno
push
pop
data16
xor
jp
sub
scas
test
out
and
mov
test
push
xchg
gs
sbb
iret
adc
pop
inc
xor
sub
cmps
in
std
addr16
scas
imul
or
stos
dec
fsub
xchg
add
jbe
repz
clc
push
cmp
and
out
inc
aad
pop
(bad)
sti
int
hlt
cmp
or
popf
or
scas
das
cli
mov
dec
sti
xchg
rcr
dec
sbb
or
push
sub
scas
int3
jl
fistp
cli
stos
sti
bound
stos
or
mov
loope
sahf
outs
mov
push
je
ret
rcl
ficom
add
aam
or
adc
inc
mov
xchg
cmp
jb
aaa
iret
rcl
outs
loopne
or
sub
and
cmps
sbb
arpl
pop
cs
xor
pop
scas
retf
mov
clc
inc
jno
mov
ror
aam
leave
add
pop
aas
dec
mov
ja
mov
cld
icebp
rcl
xchg
dec
scas
jb
lea
pop
mov
pop
mov
(bad)
mov
mov
adc
sbb
cmp
jb
mov
in
mov
jns
sub
sbb
sub
ds
push
push
or
movs
icebp
sbb
inc
out
sbb
shl
int3
icebp
pop
jns
pop
and
push
(bad)
fdivr
xchg
pop
push
mov
repz
push
mul
xor
into
aam
jno
lahf
shr
cmp
sbb
xor
mov
in
loopne
adc
mov
mov
add
into
(bad)
(bad)
xchg
loope
pop
lods
js
xlat
aas
push
mov
inc
imul
or
cmp
and
cmc
mov
cld
jae
push
or
dec
xor
loope
adc
cmp
les
pushf
jb
xor
mov
bound
push
mov
ins
neg
push
and
mov
scas
ret
cmp
adc
fs
arpl
sub
test
pop
xor
icebp
mov
inc
test
mov
je
fisub
repz
loop
xor
mov
mov
or
test
shl
xor
clc
scas
mov
mov
jmp
sti
rol
test
test
jae
daa
inc
ret
xor
das
sbb
xlat
cmp
fisttp
retf
mov
add
mov
add
cmp
push
add
mov
pop
push
je
cmp
add
test
mov
sub
add
dec
not
ret
xlat
neg
push
cmc
cmp
into
std
sbb
sub
xchg
(bad)
rol
pop
ret
jmp
push
pop
inc
mov
inc
call
enter
push
and
cmc
dec
repz
sub
xchg
outs
pop
rol
(bad)
dec
nop
lea
pop
ror
jp
stos
mov
and
push
pushf
push
ds
movs
les
add
or
movs
jecxz
aaa
xor
mov
jmp
imul
xlat
cdq
add
daa
sbb
jp
mov
call
add
mov
in
(bad)
std
push
inc
dec
or
and
inc
callw
mov
stc
pop
rol
pop
xor
mov
lahf
mov
in
imul
pop
sub
jnp
xchg
xor
loop
xchg
sbb
jg
out
push
cmps
add
pop
ss
pop
add
xchg
pop
dec
pop
js
lods
sub
push
xchg
push
push
jo
jmp
cmc
dec
pop
jae
clc
inc
in
pushf
jmp
mov
pop
sbb
dec
sbb
sahf
and
sbb
xor
sbb
icebp
addr16
sbb
sbb
rol
lds
xchg
jmp
mov
pop
adc
mov
xor
clc
xchg
cmp
xlat
inc
out
pop
loope
jb
xor
call
int3
sub
cdq
push
or
push
repnz
int3
adc
cdq
mov
lock
mov
imul
adc
mov
fist
jmp
xchg
xchg
(bad)
in
lea
jge
test
or
xchg
push
loop
push
jnp
test
popa
mov
mov
xor
xor
pop
adc
push
adc
movs
clc
add
mov
icebp
or
lock
loop
outs
(bad)
mov
bound
in
stc
push
nop
cmp
pushf
popa
mov
ds
fstp
in
(bad)
mov
mov
mul
fisttp
lock
xor
imul
cli
cli
dec
ja
scas
lods
adc
mov
test
into
pop
inc
stos
out
mov
xor
(bad)
rol
xchg
mov
pop
push
xor
movs
mov
push
bound
fstp
popf
ins
mov
call
pop
loopne
fs
imul
push
xor
add
push
jo
pop
iret
pop
call
das
dec
mov
adc
xor
enter
xor
push
sahf
push
dec
adc
mov
leave
repnz
ret
mov
cs
fdivr
sub
mov
push
test
ins
mov
fwait
je
movs
push
and
pop
jmp
sbb
cmps
mov
xor
jge
adc
pop
idiv
pop
jns
mov
jmp
or
cdq
inc
push
fisubr
jo
xor
push
int
pop
aaa
inc
cdq
inc
lock
or
sub
dec
jge
sar
pop
sub
pusha
int
(bad)
in
and
adc
sbb
loop
mov
adc
cmp
cmp
inc
fwait
add
mov
xor
and
cwde
inc
cmp
ds
pop
mov
addr16
jmp
out
int
loope
fst
sbb
jge
dec
aaa
stos
or
jge
pop
dec
mov
mov
cmps
retf
mov
sbb
fsub
movs
jl
int
push
ins
mov
repnz
inc
cmp
pop
mov
xchg
retf
add
lods
sbb
leave
ficom
adc
retf
cmp
cmp
ja
xor
push
mov
xor
sub
adc
fwait
mov
xlat
jl
popa
and
ds
adc
enter
ret
ja
in
cmp
popa
mov
pop
(bad)
adc
(bad)
xchg
fisttp
pop
cmps
rcl
cli
cs
xlat
add
imul
pushf
loopne
xor
pop
repnz
add
push
push
mov
pop
adc
mov
cmps
inc
mov
test
jne
cmps
push
jg
in
jmp
aaa
mov
xor
sbb
push
xchg
mov
inc
pop
fisubr
push
mov
mov
retf
enter
sub
sbb
cmp
jecxz
push
cmp
sbb
out
in
aas
lock
dec
cmps
mov
pop
xchg
pop
aaa
dec
add
fcmovnbe
rcl
icebp
add
setle
dec
and
or
dec
rcr
lock
ret
sar
mov
stos
fisub
add
retf
cmc
mov
lods
imul
xlat
mov
mov
jnp
test
pusha
mov
and
test
movs
aaa
push
pop
mov
push
neg
cmp
mov
or
scas
sub
sar
(bad)
adc
out
adc
stos
ss
mov
mov
js
cmp
clc
enter
mov
xchg
mov
arpl
inc
jne
rol
sbb
sub
pop
sbb
stos
(bad)
pusha
jnp
out
fdiv
out
jne
dec
popf
rol
dec
mov
sti
mov
xchg
mov
popf
pminsw
mov
cmp
or
pop
cmp
push
dec
loopne
out
dec
mov
popf
jae
xchg
push
test
mov
pop
xchg
sbb
cmps
ret
xor
fistp
add
retf
mov
pop
mov
cmp
fmul
(bad)
out
int3
or
fdiv
cmp
dec
in
popa
push
jmp
test
dec
jge
mov
enter
fisub
add
mov
test
cld
xor
movs
xchg
jns
mov
jecxz
mov
movs
and
inc
test
jb
xor
mov
pop
das
inc
mov
and
xchg
ss
rcr
jge
xlat
xor
mov
jge
ficom
sub
in
pop
das
dec
nop
mov
xchg
mov
(bad)
mov
xor
dec
shl
pusha
std
mov
or
push
add
and
jno
jb
pop
stos
push
rcl
mov
and
mov
data16
jmp
pop
in
inc
cli
mov
into
outs
sbb
into
mov
daa
jo
xchg
(bad)
aas
mov
popf
sbb
mov
mov
mov
rcr
pop
xlat
dec
aad
add
dec
cmp
jnp
mov
cs
jp
pushf
(bad)
xchg
add
jmp
popw
mov
data16
call
push
inc
mov
bound
sbb
push
xchg
nop
aad
mov
imul
xchg
push
mov
cmps
mov
call
mov
sahf
mov
out
pop
jne
movs
out
addr16
sub
inc
push
mov
loope
aad
aaa
in
leave
fbstp
(bad)
out
out
cli
ja
sbb
add
jb
shr
std
in
mov
repnz
aam
and
dec
mov
pop
mov
inc
out
out
fsubrp
(bad)
and
pop
popf
test
jecxz
mov
cmp
jns
mov
call
jbe
lods
mov
repnz
leave
lods
dec
jnp
mov
jb
cwde
jnp
xor
push
hlt
xchg
push
cmp
je
pop
fist
cmp
clc
mov
dec
out
(bad)
xlat
mov
pop
adc
loopne
in
mov
sub
cld
sbb
mov
xchg
rcr
push
scas
jl
hlt
sub
jb
push
jo
mov
pop
jne
pop
sub
xor
xor
mov
(bad)
mov
mov
cwde
push
in
ret
repz
test
xchg
mov
sub
jle
mov
jecxz
or
arpl
sub
xchg
xor
imul
sub
push
les
(bad)
addr16
sub
jnp
cmp
je
mov
pop
sbb
push
add
int
adc
push
sub
(bad)
jg
fisubr
fcmovne
fcomip
gs
xlat
cdq
je
movs
outs
cmc
push
jne
cmps
xor
add
in
jne
cmp
adc
sbb
push
or
xor
shl
jnp
or
xchg
pop
ficom
pusha
add
inc
enter
or
pop
adc
aam
mov
shl
call
push
sahf
in
lahf
rcr
jmp
push
jae
push
push
sub
cmp
ja
ja
xor
add
push
cli
bound
daa
jmp
mov
cdq
pop
ss
shl
lods
push
push
jp
mov
add
xchg
pusha
mov
adc
je
mov
sahf
mov
cmp
mov
test
cmc
xor
sub
adc
fcomp
cmp
sti
jns
arpl
std
mov
fwait
ds
sahf
xchg
aad
lods
push
add
ret
int
scas
mov
int3
sbb
call
iret
dec
jno
fst
lea
sub
iret
out
and
cmc
pop
inc
jno
loop
(bad)
test
std
mov
add
movs
sar
popa
adc
sbb
les
test
xchg
ror
dec
adc
mov
pop
push
int3
popf
jmp
rcl
xchg
pop
push
push
shl
shr
es
xor
movs
add
mov
jne
jmp
inc
aas
push
(bad)
sub
dec
in
loopne
and
mov
je
add
ret
mov
mov
xlat
adc
sbb
push
push
outs
add
pop
mov
xchg
jecxz
push
loopne
jo
push
sbb
adc
(bad)
in
or
enter
sbb
xor
add
jne
dec
mov
pop
das
jo
test
in
push
cmp
fst
inc
fcomp
push
add
xchg
ret
push
pop
pop
lds
(bad)
arpl
gs
lds
ja
xchg
xchg
cld
mov
vaddss
stc
push
int3
or
fld
pop
add
and
pop
(bad)
jo
test
test
arpl
xchg
pop
adc
or
loope
sar
mov
sub
sub
xchg
cdq
pop
call
jl
push
in
add
adc
(bad)
jns
sbb
movs
in
push
stc
pop
cmps
daa
jmp
(bad)
stc
push
arpl
stos
stos
xchg
xrelease
xor
adc
pop
loope
xchg
mov
jnp
push
aam
stc
mov
or
xchg
iret
xor
mov
cmp
out
out
mov
xchg
(bad)
push
test
or
jae
or
sbb
popa
push
fnstsw
lds
cmp
mov
cmp
sbb
test
clc
cmp
xlat
dec
adc
mov
out
or
call
xchg
stos
xchg
in
cmp
loopne
and
lahf
ror
mov
repz
shl
loope
lock
repnz
mov
xlat
mov
(bad)
jg
(bad)
lds
mov
sbb
fs
hlt
push
call
sbb
mov
xchg
cmc
jb
fdivr
(bad)
aad
call
pop
loope
jo
sub
pop
leave
call
mov
(bad)
imul
cmp
cmps
cmps
mov
mov
push
mov
add
movs
and
cmps
js
inc
repz
mov
(bad)
cli
retf
jmp
lock
mov
loope
add
adc
adc
int3
mov
dec
pusha
shl
add
jge
ret
out
aaa
clc
pushf
rcl
addr16
pop
ja
add
shl
cmp
add
push
mov
mov
xchg
cs
push
push
data16
scas
sub
cmp
inc
fist
sub
inc
mov
fidiv
test
jle
jns
clc
leave
neg
inc
fmul
call
adc
cmc
mov
mov
sahf
out
sbb
dec
imul
or
inc
cmc
jae
loop
jle
cmp
loop
jmp
add
daa
mov
js
xor
out
add
and
ret
push
retf
icebp
out
inc
ss
inc
into
outs
adc
sub
mov
ffreep
and
inc
jecxz
inc
push
and
pop
mov
dec
push
ja
and
imul
sub
(bad)
enter
pop
call
sub
or
ja
jne
fwait
or
cmp
in
mov
dec
jo
push
mov
xor
jae
jb
cmp
sbb
cmps
mov
sub
xor
cli
mov
add
faddp
adc
fs
adc
in
pop
imul
inc
xor
sbb
dec
mov
jne
int3
sbb
push
loope
jnp
sub
dec
(bad)
mov
pop
push
mov
test
adc
mov
mov
outs
lock
fsubr
sub
clc
jo
push
jl
push
pop
push
data16
mov
push
and
dec
sbb
test
test
xchg
jecxz
mov
sti
mov
(bad)
rcr
and
pop
mov
nop
gs
(bad)
mov
xchg
mov
push
jp
sub
adc
scas
in
mov
cmps
jae
and
jo
and
cmp
inc
(bad)
aaa
xchg
retf
es
pop
push
cmp
ja
jmp
das
into
cli
js
add
jmp
jno
loope
push
cmp
fs
pop
xor
mov
out
add
mov
cmp
pusha
int3
cmp
jo
fmulp
ficomp
xor
mov
(bad)
or
lea
repz
pop
mov
mov
cmp
push
dec
scas
arpl
push
pop
pop
sub
add
sub
add
fmul
out
scas
mov
pop
test
mov
pushf
sbb
les
jnp
mov
mov
cmp
dec
adc
popf
pop
sbb
fldz
xor
test
cld
inc
jecxz
pusha
mov
inc
lods
(bad)
jae
mov
xchg
xchg
in
jecxz
pop
jno
int3
retf
sbb
(bad)
cmp
adc
sub
fs
jmp
popa
dec
js
repz
add
mov
lods
loopne
and
int3
hlt
adc
fld
sbb
fstp
or
xor
sti
mov
xor
cli
fsubr
icebp
les
ficomp
adc
ror
je
xor
pop
mov
adc
popf
jmp
push
push
rcl
in
dec
retf
out
jle
add
sbb
loop
jmp
mov
xor
ficom
mov
dec
out
mov
push
popa
mov
inc
fisttp
in
or
daa
mov
mov
jmp
iret
out
out
mov
lock
jg
jbe
out
push
or
and
js
out
mov
cmp
popf
mov
pop
mov
cmps
outs
xor
push
stc
outs
aad
pop
repnz
xchg
jl
sub
push
xlat
or
push
xor
rcr
sbb
xchg
mov
data16
cmps
fsubr
test
pop
ins
in
nop
push
imul
iret
movs
push
sbb
pop
push
aas
sbb
rcr
push
test
les
fld
xor
jb
fbld
adc
jmp
movs
pushfw
push
push
pop
pop
in
cli
cld
je
inc
jo
cmp
das
(bad)
sub
jo
pop
cmp
and
mov
cwde
mov
mov
repz
mov
or
fisttp
and
fcomp
sbb
out
sar
pop
das
and
sbb
xchg
scas
lock
dec
jp
into
ja
jns
imul
dec
(bad)
dec
int3
pop
inc
in
add
jne
ja
cs
dec
inc
xchg
sbb
scas
outs
movs
aam
test
adc
push
jnp
out
std
dec
adc
(bad)
dec
out
mov
jle
addr16
pop
ja
mov
mov
cld
fisub
(bad)
sbb
jo
adc
dec
nop
ins
sti
hlt
jnp
adc
xor
sub
neg
in
pop
mov
jp
xor
xchg
div
add
mov
fisub
rol
and
out
popa
xchg
in
push
dec
dec
js
xchg
sub
clc
mov
enter
pop
sub
adc
mov
jecxz
dec
test
jmp
or
jp
(bad)
push
and
dec
mov
aad
mov
arpl
sbb
cmp
jmp
mov
xchg
add
xchg
sbb
repnz
jns
out
pop
push
ins
mov
in
nop
inc
faddp
ror
cmp
out
inc
mov
sbb
jmp
dec
popf
and
sub
jge
pop
outs
vmptrst
inc
imul
mov
mov
mov
dec
(bad)
out
push
in
mov
ffree
fisttp
cmp
hlt
jle
fild
scas
outs
stos
lea
sbb
and
jae
xor
add
xor
dec
inc
xor
ret
or
or
imul
imul
jge
mov
jns
cmp
jae
(bad)
jecxz
arpl
inc
mov
dec
xor
dec
cmps
sub
inc
leave
rol
call
jmp
lods
clc
xchg
jno
pop
ficomp
pusha
mov
jmp
scas
scas
mov
(bad)
pop
push
mov
addr16
daa
and
pop
adc
inc
adc
scas
mov
pop
test
mov
retf
outs
add
adc
imul
lock
dec
jecxz
jmp
movs
sbb
loope
mov
and
sahf
div
rol
push
mov
test
sub
jle
add
adc
enter
xchg
jecxz
adc
(bad)
(bad)
cmc
adc
das
(bad)
stos
or
repz
pusha
cmp
push
adc
std
jl
mov
lock
dec
sbb
push
lods
fsubr
inc
mov
lds
cmp
add
xor
in
push
div
out
ror
dec
in
adc
xlat
adc
aas
mov
int
jmp
mov
out
inc
pop
sti
stos
xor
sahf
daa
mov
js
popa
push
vandps
jp
retf
nop
fxch
loopne
iret
add
sbb
fadd
sbb
movs
add
adc
jp
stos
push
cmps
test
push
mov
pop
push
push
ins
xchg
fstp
xor
and
dec
dec
sub
mov
psubb
stos
lahf
pushf
lds
or
test
stc
push
sbb
cld
js
xor
and
pop
outs
sbb
and
pop
movs
mov
loop
xchg
mov
mov
xor
or
pop
sbb
stos
int
lahf
xchg
in
outs
in
mov
mov
xchg
out
lods
(bad)
sbb
lock
mov
stos
sub
cpuid
cwde
outs
dec
jmp
inc
push
push
imul
cli
ins
mov
addr16
sti
adc
inc
inc
xor
hlt
inc
fst
ret
jmp
or
xchg
lds
stos
shr
add
xor
or
stos
out
out
je
cdq
lea
lahf
add
push
call
mov
sub
aaa
jnp
fdivr
fstp
je
mul
push
jge
cmps
sahf
jbe
jmp
mov
pop
inc
addr16
dec
mov
pop
loop
pusha
outs
jle
repnz
test
dec
add
loop
add
das
leave
fsub
push
shl
fbstp
adc
jg
ja
pushf
cmp
fsubrp
add
dec
cmp
xor
xor
les
lock
jno
cmps
pushaw
jne
dec
cmp
ins
ss
aad
mov
leave
dec
pop
pop
lahf
fidivr
shl
adc
or
cmps
or
sub
mov
inc
dec
cmps
pop
ins
stos
and
xchg
addr16
inc
sub
cs
add
rcl
jl
add
cmp
fbstp
jb
stos
int
retf
jb
mov
out
inc
popf
cmps
arpl
and
int3
mov
mov
cdq
je
call
imul
stos
jl
mov
jbe
cmp
fld
mul
add
jmp
lds
pop
out
fwait
cmp
mov
xor
out
test
push
fistp
shl
sub
std
scas
pop
pop
(bad)
jecxz
out
inc
sar
pop
cmps
out
mov
lods
adc
and
xchg
gs
aad
test
mov
retf
xchg
jns
fs
and
in
loope
xlat
(bad)
fmul
mov
cmp
inc
jb
sahf
or
xchg
push
mov
sub
into
int3
pushf
xchg
cmp
add
repnz
cmp
or
aas
xor
cmps
jbe
mov
inc
clc
cld
psubusw
mov
adc
ins
push
imul
out
adc
sub
mov
aaa
dec
addr16
xor
(bad)
sbb
dec
repz
mov
pop
clc
(bad)
lock
imul
cmc
sub
in
sbb
mov
sahf
jle
retf
and
lea
mov
inc
adc
and
pop
mov
add
sbb
scas
repnz
stos
push
mov
dec
and
in
xchg
pop
sar
fistp
fs
sub
push
nop
bound
arpl
inc
mov
pop
pop
pop
shr
mul
fidivr
add
mov
imul
outs
popa
jbe
or
loope
push
mov
mov
sub
dec
lods
cmp
les
mov
inc
test
ss
sub
fadd
jmp
jmp
mov
stc
mov
push
sub
add
imul
arpl
sbb
test
pop
into
add
std
xchg
dec
and
aaa
dec
pop
jl
retf
mov
mov
mov
lahf
psraw
pop
gs
pop
popf
outs
sbb
inc
hlt
mov
xor
push
and
xchg
add
mov
push
scas
jns
push
sbb
enter
xor
jmp
retf
rcl
inc
pop
dec
popa
jp
clc
in
push
popa
xor
out
push
push
push
jecxz
jmp
rep
dec
pop
dec
sti
mov
push
or
loop
push
sbb
xchg
mov
push
or
jns
or
and
das
test
inc
aaa
mov
mul
not
imul
(bad)
jmp
jnp
cdq
ret
push
sub
shl
pop
test
add
test
jg
adc
pop
mov
jbe
mov
in
sub
lods
mov
das
sub
popa
imul
(bad)
test
mov
sbb
mov
sbb
xchg
scas
(bad)
sti
mov
cli
push
inc
pop
pop
jmp
mov
lods
jmp
adc
or
movs
inc
dec
popa
fcomi
sbb
add
out
cld
js
cmpps
mov
and
inc
addr16
in
cmp
pop
inc
mov
and
or
lods
call
jecxz
call
pop
in
(bad)
adc
adc
pop
or
pop
rol
dec
pop
xor
ror
cwde
enter
loope
xor
call
js
push
or
push
sbb
mov
shr
test
(bad)
pop
loope
adc
push
or
ins
adc
repnz
cmp
mov
cs
dec
lods
xchg
xor
aad
dec
adc
rol
dec
sub
xchg
fidiv
out
push
mov
pusha
xchg
inc
adc
add
xor
mov
out
sub
lds
retf
push
jle
popf
rcl
and
and
sbb
jmp
xchg
(bad)
xor
or
stos
fidivr
lahf
imul
xchg
or
movs
add
mov
xor
mov
or
sbb
movhps
sub
sub
push
stos
(bad)
mov
xchg
shl
sub
scas
mov
shr
addr16
fsubr
or
dec
in
test
mov
repnz
mov
or
fmul
mov
mov
pop
jp
xor
xchg
aad
jmp
mov
push
push
test
ins
jl
retf
jmp
adc
pop
or
ins
in
pushf
stos
hlt
stos
dec
pop
in
cld
lds
pop
add
xchg
js
test
sbb
sbb
sub
dec
ror
repz
test
mov
shr
cs
dec
lds
jp
lahf
cmp
add
leave
imul
retf
lds
js
movs
aas
push
and
and
inc
jp
push
xor
jg
in
movs
pop
ror
xchg
mov
loopne
iret
or
int3
pop
or
jge
arpl
add
push
stos
js
stc
fdivr
test
adc
sub
test
mov
aad
(bad)
popa
xchg
out
ins
or
add
push
dec
outs
xchg
inc
mov
fwait
je
add
pop
adc
ret
hlt
jne
cmp
xor
push
dec
sub
jl
sbb
jb
mov
(bad)
pop
movs
or
dec
push
out
add
sub
lods
es
shl
ss
mov
jecxz
inc
(bad)
push
mov
mov
sub
cli
fst
jecxz
sbb
xlat
fild
test
ins
je
or
pop
(bad)
push
xchg
stos
ret
jnp
xchg
or
xchg
fdiv
icebp
jg
xchg
call
ss
mov
movs
call
adc
gs
xchg
gs
cs
in
or
stos
ds
sbb
outs
xchg
scas
mov
inc
inc
jo
lds
lahf
cmps
lea
pop
pop
and
gs
(bad)
cmp
ja
pop
outs
push
dec
hlt
fcmovu
bswap
mov
xchg
pop
mov
mov
xor
into
push
sahf
fisubr
cli
or
aaa
sub
sar
sbb
(bad)
pop
jo
xor
out
inc
rcr
scas
ret
dec
stos
adc
jmp
scas
jecxz
adc
push
fld
mov
cmc
test
xor
xchg
jbe
xor
jmp
xlat
shl
jg
jno
or
and
mov
mov
inc
mov
and
lea
adc
pop
int3
jp
mov
arpl
pop
jae
jmp
ins
(bad)
xchg
dec
and
jl
test
mov
out
lea
iret
iret
xor
and
pop
daa
xlat
push
sbb
push
adc
loop
dec
xchg
outs
fstp
inc
xchg
popa
cmp
xchg
hlt
or
inc
clc
icebp
and
shl
push
add
sbb
stc
data16
fsub
jnp
add
or
mov
test
addr16
pop
inc
cwde
fnstsw
mov
rol
xchg
pop
dec
inc
cmp
jbe
inc
mov
lds
xchg
xchg
or
add
dec
shr
lds
ffreep
dec
(bad)
repnz
out
inc
fld
aaa
das
or
stos
enter
pop
adc
adc
sbb
not
xor
xchg
inc
hlt
aam
sub
push
out
(bad)
mov
adc
jecxz
push
mov
push
sub
dec
add
mov
push
mov
(bad)
imul
out
out
xchg
mov
push
je
and
sti
(bad)
call
adc
push
inc
outs
dec
lock
scas
imul
loop
fcomp
lock
and
sub
out
jae
test
mov
imul
loop
xor
and
mov
ins
adc
sbb
leave
mov
ret
in
imul
enter
call
inc
jmp
ficom
shr
or
mov
pusha
dec
or
jb
fcom
or
jge
test
lock
mov
cld
loop
mov
shl
add
out
xchg
out
jge
shl
das
call
dec
imul
cmp
xor
mov
cmps
xor
push
xchg
mov
jmp
cmp
aad
js
jne
mov
stos
pop
and
test
cwde
cmps
xchg
popf
fs
xor
jl
mov
mov
(bad)
mov
jo
sub
push
mov
and
push
cmp
icebp
adc
mov
adc
and
fs
lea
cld
jmp
cmp
imul
sti
in
pop
ret
inc
lahf
hlt
sbb
jne
shr
jle
dec
inc
mov
xchg
call
(bad)
in
push
shl
mov
cmps
rcr
sar
push
fnstenv
mov
and
pop
mov
jae
cmp
loopne
(bad)
jnp
sub
jb
js
int
data16
inc
sahf
sbb
bound
mov
xchg
cs
lds
cmp
mov
dec
sub
sub
icebp
sub
test
int
pop
pop
bound
inc
push
(bad)
call
movs
inc
push
repz
aaa
bound
ins
xor
or
push
fwait
lods
fstp
dec
outs
adc
adc
daa
pop
int3
mov
pop
mov
mov
loop
es
mov
sub
mov
cmc
push
outs
mov
xor
daa
in
or
jle
fidivr
add
push
sub
pop
hlt
outs
push
sub
mov
jmp
or
cmp
pop
mov
mov
push
inc
cmps
std
dec
ds
pop
cmp
rol
dec
movs
xor
call
out
pop
xchg
pop
pop
mov
jnp
loope
test
or
and
nop
daa
test
mov
int3
jle
cmp
inc
jmp
push
aad
xor
arpl
arpl
cld
or
adc
fisttp
adc
mov
stc
adc
sub
(bad)
stos
in
lahf
aaa
sbb
(bad)
pop
enter
xor
les
xor
dec
aam
outs
in
inc
adc
lahf
lahf
push
call
data16
xor
and
(bad)
rol
pop
mov
ins
fbld
js
data16
and
cmp
out
push
hlt
int3
nop
or
xor
sbb
cli
lods
rcl
sti
dec
jmp
jnp
fxch
adc
dec
fild
(bad)
cmps
mov
add
inc
repnz
test
jmp
shl
sbb
jg
dec
test
add
pushf
xsaves
inc
shr
inc
sbb
enter
xchg
jmp
mov
imul
or
(bad)
scas
inc
cmp
inc
pop
mov
lods
jbe
iret
fisub
lods
and
test
ss
pop
lahf
xchg
imul
jmp
into
cmps
jnp
jno
mov
jmp
test
or
push
ror
xchg
lods
outs
(bad)
fadd
mov
jecxz
aam
push
ja
cmps
nop
les
push
cmp
mov
in
ins
ja
jns
fadd
repnz
rcl
div
mov
ss
adc
aaa
cwde
sub
sbb
or
xchg
(bad)
gs
adc
lahf
mov
dec
dec
push
sbb
rol
in
jmp
(bad)
xchg
shr
jp
stc
inc
inc
pop
retf
aas
pop
fsubr
ins
aad
push
push
outs
dec
mov
mov
pop
mov
scas
test
push
xor
fisub
cmps
mov
and
dec
push
add
dec
xor
repnz
mov
sub
aaa
scas
ficom
adc
and
dec
xor
ss
lods
cmc
arpl
cmp
clc
test
pop
cmp
rcl
jns
std
int
or
outs
push
mov
sub
dec
gs
xor
xlat
cmp
mov
xor
mov
mov
enter
add
cmp
call
and
movs
mov
sub
jns
mov
xor
imul
pop
hlt
jno
dec
retf
xchg
pop
and
xor
mov
dec
adc
mov
sbb
fsub
xor
mov
es
xchg
sbb
das
mov
and
dec
add
xor
push
cmp
jnp
mov
mov
mov
adc
sub
mov
dec
push
sbb
adc
add
mov
outs
jae
add
dec
(bad)
adc
lock
ds
xchg
ret
je
(bad)
aaa
ins
scas
adc
sub
pop
ss
xchg
mov
retf
jne
lods
or
inc
inc
ror
push
in
fist
inc
dec
or
sbb
push
mov
push
mov
sbb
mov
(bad)
cli
mov
mov
cli
mov
fidivr
inc
sbb
cmp
movs
push
jb
scas
sub
add
cmp
and
ins
sub
jmp
sub
mov
ffreep
sbb
repz
and
push
dec
std
and
daa
pop
jb
and
loopne
or
pop
shl
jae
rol
mov
gs
push
aaa
ss
dec
add
xchg
ja
or
fld
retf
or
cmps
dec
lock
repz
jmp
xor
inc
mov
cld
lods
pop
mov
jns
jbe
repnz
fdiv
(bad)
fbld
inc
mov
mov
mov
inc
mov
(bad)
les
cdq
mov
jno
push
push
daa
push
jp
push
cli
js
xlat
dec
inc
mov
push
loope
xchg
jno
aad
jle
fld
movs
add
inc
xor
or
sti
repnz
mov
addr16
mov
shl
adc
loope
xor
mov
jns
movs
popf
mov
shr
icebp
cmp
hlt
or
push
cmp
lock
pusha
stos
pop
jo
mov
jge
mov
enter
cmp
xchg
add
pusha
sysret
mov
ret
icebp
lahf
inc
jl
retf
fldcw
cli
cmp
repz
cmp
dec
loopne
mov
adc
mov
test
pop
out
inc
js
mov
jmp
adc
inc
imul
shl
out
dec
adc
sbb
js
add
push
fcom
cmc
jmp
push
jb
mov
cmp
dec
pop
(bad)
in
test
jns
inc
sbb
cwde
cmp
jnp
sub
sar
lds
lea
enter
fidivr
stos
ss
shr
aad
(bad)
mov
(bad)
ror
pop
sbb
push
adc
add
test
pusha
inc
outs
sbb
dec
fdiv
loope
retf
xlat
xor
retf
fild
sbb
retf
cld
int3
cmps
cmp
and
pushf
les
lea
retf
push
or
dec
or
shl
fcom
add
adc
mov
int3
jge
(bad)
push
pop
loop
call
jecxz
inc
inc
test
mov
scas
movs
sub
scas
adc
push
clc
push
cmps
cli
xor
icebp
outs
xchg
mov
and
cmp
(bad)
add
xor
mov
inc
cmp
imul
sar
pop
test
push
jecxz
in
retf
jb
xor
inc
inc
popf
jp
ret
mov
js
adc
and
sub
jmp
or
push
call
jne
push
fcom
pushf
mov
enter
jnp
sub
jo
(bad)
(bad)
jne
xchg
movs
fsubp
xlat
pusha
adc
call
xchg
jmp
push
sti
mov
pop
rcr
mov
mov
inc
sub
sub
call
cmp
and
vmwrite
stos
pop
mov
fcmovne
and
pop
icebp
in
inc
clc
rcr
add
cmps
mov
mov
add
inc
out
call
stos
std
fidiv
neg
push
jg
cmp
sbb
mov
adc
add
pop
or
sahf
adc
aam
gs
sbb
mov
jp
(bad)
cwde
sbb
test
jmp
xchg
push
add
jp
retf
jb
jbe
pusha
mov
mov
sub
pop
out
and
mov
lock
pop
mov
xchg
sub
cmp
sub
adc
dec
push
int3
outs
in
xchg
sbb
xchg
out
and
int3
idiv
cmp
xchg
xor
in
js
dec
movs
jg
jmp
in
out
sub
adc
sahf
mov
jno
sbb
shr
jp
add
and
jae
in
or
les
popf
or
popf
and
sbb
adc
loopne
inc
sub
and
scas
inc
retf
ret
mov
mov
in
test
and
(bad)
push
mov
aaa
fnstcw
sbb
(bad)
push
rol
add
lock
mov
mov
dec
dec
mov
inc
idiv
sub
push
outs
scas
xor
mov
sub
jo
(bad)
retf
pand
xchg
pushf
iret
pop
sub
cmps
outs
jmp
in
popf
ret
ja
and
rcr
pop
cmp
push
xor
sti
jns
sub
pop
bound
and
xor
inc
cmp
adc
mov
outs
ret
stos
adc
ins
cmp
cmp
pop
cld
add
push
push
dec
dec
dec
movs
sbb
xchg
sbb
sbb
cld
outs
fimul
xchg
call
pushf
nop
(bad)
pop
xlat
in
cmp
xacquire
xchg
lea
test
dec
xchg
sahf
push
in
cmps
push
mov
in
cmc
repnz
jno
mov
cld
out
push
inc
(bad)
rcl
jbe
les
fs
dec
(bad)
add
fs
js
push
lea
je
cmc
pushf
push
les
mov
mov
sub
push
repnz
(bad)
rcr
jg
jns
jge
movs
mov
cmp
mov
inc
ins
mov
inc
sbb
mov
mov
mov
mov
leave
lds
in
inc
rcl
jmp
push
sbb
xchg
(bad)
cli
mov
out
test
sbb
cmp
and
jae
pop
push
imul
pop
cdq
leave
sti
mov
dec
dec
scas
fs
std
ss
cmp
pop
inc
jno
stos
push
retf
and
and
xchg
ja
pusha
mov
dec
push
xchg
xchg
retf
in
push
xchg
lods
sbb
sti
popa
inc
movs
jmp
push
call
dec
adc
sbb
pop
jmp
mov
push
(bad)
popa
push
aad
fcmovbe
jo
and
sbb
gs
jle
out
dec
inc
and
push
add
dec
mov
fcom
and
mov
fnsave
lods
inc
inc
jge
jge
iret
fidivr
enter
call
ja
push
ss
fs
mov
aaa
mov
(bad)
push
cli
movs
addr16
fdecstp
lods
add
pushf
sbb
outs
rcr
out
jae
mov
cs
mov
xchg
mov
std
ret
ins
mov
aad
ror
clc
nop
ds
stc
cmp
mov
push
or
out
pop
pop
cs
pushf
xchg
das
mov
idiv
cmp
adc
sub
into
push
shl
jl
add
push
push
loopne
mov
sub
sub
xchg
mov
mov
add
mov
inc
adc
enter
push
aas
push
or
nop
dec
sub
dec
push
push
push
fwait
mul
cmc
cwde
mov
daa
shl
call
or
enter
mov
sahf
mov
dec
rol
mov
les
rcl
cld
lds
lods
jno
adc
mov
jo
enter
inc
sub
imul
push
push
xor
xor
mov
into
movs
int3
cmp
jg
inc
cdq
cmps
mov
mov
cli
das
xchg
not
popf
(bad)
xlat
test
jecxz
(bad)
sub
mov
fcomi
clc
pop
lea
nop
movsx
repnz
add
lock
xchg
push
push
ins
out
push
or
in
pop
pop
sbb
(bad)
mov
mov
sub
mov
sti
outs
fdivr
fs
xor
shl
scas
call
pop
into
int3
add
fdivr
ror
cmp
xor
in
pop
test
stos
jmp
aad
or
or
test
cli
xlat
mov
ins
mov
js
mov
sbb
mov
jmp
mov
in
fimul
ret
sar
ret
push
shl
add
js
push
pop
pop
dec
add
xchg
lea
addr16
cmp
xchg
sbb
push
jge
mov
inc
push
sub
sbb
(bad)
scas
fidiv
aam
sar
xchg
jge
push
add
push
addr16
(bad)
shl
add
xchg
xchg
(bad)
and
fucomip
iret
clc
mov
dec
push
loope
loop
mov
scas
or
fidivr
scas
jp
xor
addr16
cld
jae
ins
adc
dec
popfw
in
inc
arpl
enter
sub
xchg
pop
shl
push
out
ret
inc
mov
add
inc
or
sbb
mov
stos
mov
scas
daa
rcr
jecxz
fsub
cmp
jo
mov
clc
gs
in
mov
aad
jp
ds
xchg
adc
out
(bad)
arpl
call
fneni(8087
xor
cmp
adc
fwait
lahf
xlat
scas
clc
and
xchg
lods
mov
movs
or
mov
or
movs
je
lods
outs
enter
dec
mov
mov
or
aam
mov
xor
stc
inc
stc
dec
scas
(bad)
mov
mov
cmp
fisubr
and
xlat
pop
jns
add
xchg
xlat
sbb
mov
dec
pop
into
scas
scas
add
outs
adc
mov
mov
sub
leave
add
xor
test
shl
stos
dec
sbb
cmps
xchg
stc
test
mov
dec
push
adc
out
je
pop
out
jge
je
imul
or
push
push
pop
or
pop
xchg
xor
mov
add
leave
cmp
xlat
push
mov
cld
dec
push
ret
mov
sbb
mov
mov
(bad)
cmps
xchg
jp
mov
mov
dec
jnp
stc
ins
mov
aad
dec
fnsetpm(287
cmp
fdiv
and
pop
mov
pop
inc
jae
sti
lods
fistp
mov
adc
and
push
adc
test
imul
jl
push
or
jmp
inc
dec
add
test
test
xchg
pop
out
jb
mov
nop
jno
sbb
mov
div
repz
mov
add
cmps
xchg
dec
push
arpl
push
mov
test
(bad)
out
sub
mov
scas
cld
dec
adc
retf
mov
lods
xor
jne
cmp
xchg
xchg
dec
jp
jmp
adc
out
or
fcomp
dec
jo
fcomi
push
sub
adc
inc
cmps
sbb
mov
sahf
mov
xchg
jno
or
fist
ret
gs
adc
jle
dec
inc
and
fimul
nop
add
mov
mov
retf
jge
aaa
in
add
sub
test
or
jo
and
nop
mov
mov
or
or
mov
jle
cmp
int3
cmp
mov
mov
icebp
pusha
loopne
out
leave
lods
mov
mov
aas
sub
iret
bswap
dec
loop
xchg
mov
mov
ja
(bad)
scas
movs
stos
cmps
ds
inc
inc
adc
xor
or
pop
sbb
test
call
cwde
sti
push
js
adc
fs
xchg
repnz
ja
push
rol
pop
sar
mov
shr
nop
mov
icebp
inc
pop
cmps
aam
sbb
jp
add
mov
jbe
push
lahf
mov
mov
aam
cmp
sbb
nop
scas
xchg
push
sar
xor
xchg
push
aad
test
aad
rol
pusha
pop
adc
adc
sub
sub
or
mov
pusha
jnp
icebp
jmp
mov
or
out
test
cmp
cmp
push
mov
lea
fst
retf
pop
aad
xchg
jle
mov
mov
pop
ds
mov
sub
xchg
mov
push
mov
ins
mov
in
cmc
xchg
in
cmp
fld
cmp
mov
ins
jp
cmp
(bad)
aam
mov
in
xchg
pusha
movs
movs
adc
mov
test
outs
lds
add
mov
aam
ret
test
jmp
sbb
push
pop
fwait
jns
jmp
jne
loopne
ins
(bad)
mov
stos
lea
xchg
dec
jg
daa
adc
(bad)
shr
popa
retf
jb
leave
in
lea
jmp
inc
movs
push
mov
sub
pop
add
leave
js
pop
push
pop
xchg
add
push
loope
retf
fsubr
clc
or
cmp
sub
cld
out
fwait
std
mov
test
pusha
mov
inc
call
loopne
fcomp
in
mov
cli
mov
cmps
(bad)
jle
pop
test
pop
sub
mov
inc
icebp
push
(bad)
cld
sbb
pusha
xchg
arpl
mov
lds
adc
nop
cmps
xchg
es
adc
hlt
or
inc
mov
xor
push
cld
enter
dec
sub
cdq
mov
sbb
inc
fsub
mov
call
stos
mov
sub
pop
xchg
aas
movs
aad
mov
aam
mov
inc
gs
sub
jecxz
push
jmp
cmps
lods
jo
(bad)
ss
mov
bound
ins
call
aas
sbb
xchg
pop
(bad)
cwde
xchg
mov
jmp
adc
push
mov
mov
daa
jae
push
(bad)
mov
adc
test
out
sti
icebp
mov
jmp
jle
mov
sbb
mov
js
(bad)
mov
mov
xor
fld
sbb
push
xor
xor
mov
or
sbb
mov
(bad)
and
pop
inc
mov
ret
pop
mov
or
jl
dec
sub
imul
ficom
popa
jg
sbb
dec
or
out
repz
hlt
cdq
out
movs
adc
sbb
(bad)
int3
lea
push
xor
sti
push
mov
xor
xor
repnz
(bad)
push
mov
movs
popf
iret
xchg
aad
test
xor
mov
jmp
call
in
cmc
xlat
ins
mov
shr
sub
sub
jmp
sub
jmp
fild
push
outs
cmp
stos
in
test
and
jo
scas
sub
mov
retf
xlat
jns
mov
pop
(bad)
jl
push
ss
mov
je
clc
fistp
dec
inc
loope
imul
(bad)
pop
mov
cs
or
mov
in
jo
pushf
sbb
inc
pop
mov
push
xchg
shl
call
push
shr
jp
inc
imul
adc
cmp
stc
shl
or
pop
stc
cmp
rcr
shl
pop
rcr
and
mov
fst
mov
inc
adc
or
mov
neg
imul
mov
jmp
lea
cmc
outs
mov
int
int3
lods
cld
sti
lahf
in
sbb
dec
push
dec
mov
lea
push
(bad)
sbb
xchg
scas
imul
call
xchg
cmp
rcr
(bad)
mov
xchg
fucom
sbb
out
adc
test
lock
stos
push
mov
lock
sti
clc
push
mov
fwait
(bad)
test
pop
xchg
retf
cld
test
xor
sahf
loopne
loop
push
push
xor
les
cmc
cs
and
and
mov
cmps
jp
sbb
jno
jmp
xchg
xchg
movs
sti
(bad)
cld
xor
and
sub
das
push
cli
pop
fnstsw
mov
inc
inc
icebp
in
sti
lea
sbb
pop
rcr
movs
xchg
cmp
cmp
push
in
addr16
out
stos
mov
sub
jns
jl
and
sub
ins
inc
mov
in
ds
add
cmp
jle
mov
sub
mov
cli
xor
pop
jo
jle
or
xor
jae
fild
add
push
xor
iret
inc
loope
or
pushf
aas
stos
das
mov
dec
iret
mov
mov
push
adc
aam
call
xor
lea
sub
xchg
iret
mov
adc
and
pop
or
xor
rcr
imul
ins
mov
lods
or
adc
lahf
rcr
xlat
mov
adc
jo
je
or
jl
mov
inc
fld
jae
push
mov
cmp
out
aam
jb
cmps
sub
sbb
and
cmp
out
ret
scas
xchg
sub
scas
dec
cld
lahf
xor
repz
(bad)
in
dec
inc
mov
cs
and
xor
add
sbb
mov
aam
scas
sub
fiadd
push
dec
test
neg
jb
sbb
xor
call
loop
popf
repnz
cmp
sub
jae
call
sbb
push
xchg
mov
sahf
call
js
retf
ret
or
jp
outs
sbb
sub
pop
mov
imul
push
lea
inc
in
xor
jb
sysexit
or
sbb
push
scas
sbb
cmp
arpl
dec
mov
xor
inc
lods
cmps
sub
xchg
dec
pop
jne
inc
add
and
add
dec
cmp
sbb
inc
jl
test
jmp
shl
and
xchg
jge
scas
int3
jae
out
push
xlat
push
adc
inc
inc
xchg
lahf
xor
aam
popf
comiss
inc
inc
push
outs
(bad)
idiv
push
jbe
out
fistp
test
rcl
leave
or
mov
scas
fist
stos
shl
dec
mov
mov
popf
add
or
xor
cli
jecxz
jno
and
fisttp
dec
outs
mov
xchg
sub
push
cmp
or
push
popf
call
mov
mov
mov
cli
pop
int3
pop
ins
mov
repnz
push
(bad)
jg
test
gs
dec
test
mov
adc
xchg
into
aas
mov
and
or
push
push
in
dec
pop
xlat
sub
xchg
xlat
jg
in
gs
(bad)
push
xchg
push
lods
push
shl
jle
jb
out
jmp
pop
sahf
data16
jge
fs
enter
aad
jns
push
movs
mov
jp
cmp
mov
out
push
inc
jno
arpl
not
or
pop
mov
xor
jmp
test
pop
ret
inc
leave
aas
test
inc
xor
leave
pop
sbb
inc
lods
add
(bad)
dec
cmp
(bad)
cmps
or
jmp
mov
pop
test
je
dec
jmp
pop
shr
inc
enter
adc
jmp
addr16
xchg
push
xor
pop
and
adc
pop
lds
test
inc
inc
cmp
xlat
mov
pop
sar
cmc
sub
lahf
arpl
loopne
neg
(bad)
xlat
adc
dec
scas
cmp
test
and
add
xchg
in
clc
jns
clc
cmp
pop
std
sbb
shr
je
test
sub
pop
(bad)
outs
cmp
jmp
xor
or
aam
lea
movs
bound
cwde
aad
ror
mov
sub
in
push
xchg
ds
repz
bnd
push
jbe
aas
dec
push
stos
mov
pop
jb
out
aad
jp
cwde
fwait
dec
mov
pushf
call
inc
add
add
mov
cli
cmps
mov
mov
and
test
adc
xor
mov
es
inc
add
mov
icebp
cmp
xchg
int3
inc
add
repz
mov
in
fwait
and
iret
pop
jle
mov
mov
sbb
das
and
sbb
mov
lds
jne
jne
mov
add
mov
mov
cmp
ret
fsub
add
inc
dec
ss
daa
stos
mov
mov
loopne
enter
inc
pop
stos
popa
aas
movs
cmp
mov
inc
dec
sbb
jmp
sub
push
dec
data16
es
adc
retf
ror
mov
shr
and
pop
pop
push
ss
cwde
lds
call
inc
push
sub
dec
scas
cdq
xor
dec
popa
dec
cdq
or
adc
push
mov
pop
int
xchg
repnz
loopne
iret
int3
into
mov
dec
dec
or
add
mov
ficomp
fs
mov
mov
push
jb
mov
stos
jne
jo
adc
jno
jae
push
mov
xor
lock
or
mov
jge
(bad)
cmp
sbb
(bad)
jnp
or
test
inc
pop
push
push
adc
and
sbb
shr
int
cdq
push
adc
sti
cwde
mov
outs
fiadd
ja
mov
neg
ret
adc
pop
inc
scas
sub
dec
in
push
add
mov
and
xchg
call
neg
inc
and
dec
adc
push
sub
in
xchg
test
inc
mov
or
mov
mov
rol
jno
test
fs
lods
cmp
and
push
pop
enter
xor
int
leave
out
movs
xchg
aaa
test
pop
ret
shl
daa
dec
mov
mov
jge
leave
push
xchg
rcl
mov
test
in
imul
enter
lea
arpl
sbb
mov
mov
mov
jle
push
or
pop
aad
rcr
lds
cmc
jge
mov
in
mov
pop
rol
push
adc
push
pop
loopne
jecxz
sub
shr
jmp
and
xor
int3
out
mov
dec
push
movs
lods
neg
das
int
push
pop
dec
mov
outs
dec
pop
push
fist
xchg
test
jbe
mov
sti
add
data16
adc
out
mov
mov
iret
push
aas
movs
adc
and
xchg
cmp
and
cmpxchg
lds
aaa
push
scas
loop
xor
test
(bad)
jl
mov
(bad)
fcomp
mov
shl
rcl
pop
xchg
(bad)
xor
in
loope
xor
icebp
and
(bad)
pop
jb
pushf
dec
repz
rcl
cli
jge
fild
push
fwait
cmps
sub
mov
pop
inc
fs
mov
mov
(bad)
cld
aaa
ficom
and
mov
je
retf
xchg
pop
and
jne
jns
mov
sub
add
jge
adc
retf
enter
fcmove
mov
adc
stos
dec
(bad)
retf
sub
push
push
or
push
mov
fdivr
cdq
pop
pop
arpl
in
cmc
dec
cmps
stc
add
inc
aaa
mov
sbb
push
pop
xchg
push
xlat
xchg
mov
jne
sbb
jecxz
enter
push
leave
pop
sahf
retf
dec
push
inc
mov
jnp
iret
inc
rcl
lods
loop
adc
xor
mov
das
xor
sbb
std
xor
or
jle
pop
jb
std
jns
adc
popa
cmp
in
(bad)
sbb
dec
pop
xor
jmp
in
push
cmp
push
mov
rcl
movs
add
mov
and
dec
xchg
jmp
lods
xchg
mov
adc
test
cli
xchg
es
fwait
ret
out
les
leave
and
pop
gs
out
adc
mov
leave
je
jo
mov
aaa
cmp
dec
xchg
shl
mov
rcr
sbb
xlat
jmp
sahf
repz
mov
xlat
mov
fsubr
pop
sub
mov
repnz
add
dec
jmp
ds
inc
fs
int3
xchg
ja
jmp
or
pop
fcomp
or
stos
mov
cmp
aaa
xor
xor
mov
cmps
iret
sub
cmp
and
movlps
repnz
xchg
mov
scas
mov
sbb
mov
inc
mov
add
xchg
inc
inc
sahf
rcl
loope
xchg
icebp
push
nop
ret
and
mov
xchg
ror
fwait
push
adc
cmps
cmp
cmp
xlat
adc
adc
test
mov
loopne
in
pop
das
out
ret
mov
iret
xor
test
pushw
mov
push
out
fcomp
xchg
cmc
aaa
dec
jno
std
jmp
push
fstp
pop
fidivr
sbb
rcl
lods
push
sbb
xor
mov
icebp
fwait
call
mov
cmp
and
xor
add
ja
arpl
fdivr
ror
loopne
push
lods
xlat
clc
scas
or
adc
pop
jae
or
push
pop
rol
mov
stos
and
inc
push
sti
jmp
jp
xor
inc
push
mov
out
arpl
jnp
inc
and
aad
das
jmp
stos
ror
pop
rcr
dec
add
retf
popf
inc
pop
(bad)
cld
push
je
pop
(bad)
cmp
dec
pop
or
xor
test
xchg
adc
jl
or
gs
jp
gs
sub
pop
retf
lock
push
std
lahf
sbb
stc
jno
push
ret
outs
dec
dec
js
shl
sbb
test
pop
aam
outs
call
xchg
xor
fsave
cmp
mov
ins
xchg
mov
mov
pushf
jge
out
add
mov
adc
jp
and
sti
stc
pop
sbb
daa
jo
in
pop
add
leave
sub
test
retf
popf
jno
ins
or
jae
mov
popa
lea
sub
sub
pop
fsubrp
pushf
adc
or
cmp
mov
je
pushf
scas
mov
scas
jl
repz
addr16
mov
cmp
stos
clc
push
xchg
jl
(bad)
(bad)
fadd
inc
push
jnp
pusha
lds
scas
sbb
xor
ret
mov
add
jge
outs
sub
in
push
out
mov
push
inc
xor
ret
int3
add
push
pop
loope
xchg
cwde
mov
cld
cli
gs
popf
inc
cs
lea
adc
fsubr
mov
das
dec
xchg
cwde
mul
(bad)
lock
xchg
mov
movs
in
mov
jle
jmp
inc
xchg
xor
lods
and
cmp
dec
push
dec
xor
and
mov
jns
cmp
lods
dec
ins
mov
mov
push
jno
outs
mov
push
pop
add
mov
in
into
fs
cmp
and
push
mov
xchg
mov
sti
sub
shr
aad
adc
push
nop
mov
inc
nop
and
cdq
scas
daa
push
cmp
sbb
cmp
mov
inc
or
sti
ret
xor
xchg
cmp
xor
fcomp
shl
dec
adc
mov
movs
leave
xchg
xchg
(bad)
out
adc
in
cli
adc
sbb
dec
fwait
popa
dec
lods
stos
mov
fs
ins
arpl
out
mov
cmp
pop
fild
xor
pop
or
xchg
adc
bound
out
imul
ins
repz
ret
ins
gs
out
enter
inc
shr
sub
call
(bad)
je
pop
call
ret
inc
popf
aas
(bad)
(bad)
jp
pop
mov
xchg
lods
sub
fs
and
cld
push
jle
push
xchg
mov
dec
inc
jo
mov
les
fcom
mov
mov
cmp
retf
jg
fwait
and
in
fcom
add
inc
dec
add
lahf
(bad)
repz
sbb
mov
xchg
pop
out
imul
push
fbstp
scas
fsubr
inc
fwait
clc
pop
add
sbb
fcom
pop
mov
icebp
push
int
push
mov
add
scas
jno
mov
daa
and
dec
daa
test
push
sbb
ds
lock
dec
inc
(bad)
jb
mov
lea
sbb
ret
(bad)
(bad)
ja
std
cmp
out
jnp
sbb
idiv
and
icebp
inc
retf
pop
outs
cmp
jbe
inc
(bad)
aas
or
sbb
(bad)
fmul
popf
jle
lea
stos
test
pop
xlat
xor
popf
fcomp
idiv
cwde
add
fwait
(bad)
out
mov
int
push
lahf
enter
or
inc
inc
out
mov
sar
mov
push
test
mov
xchg
es
cmp
gs
add
adc
ret
mov
sbb
mov
push
in
mov
ret
popa
shl
push
jp
jb
ucomiss
sbb
sub
jmp
stos
cmps
lea
out
and
leave
ja
push
pusha
adc
add
dec
cmp
(bad)
xchg
int
or
or
ins
cmps
mov
push
mov
push
out
ret
push
std
cld
int3
call
leave
or
lods
dec
and
addr16
sub
fdivr
clc
xchg
push
stc
xor
push
cdq
sub
cmp
cmp
in
lods
cmp
fisub
push
outs
jbe
push
std
movs
ror
pop
sbb
pop
xor
inc
push
sub
in
fist
popf
xchg
(bad)
je
push
xor
cmp
in
mov
cdq
or
mov
adc
sbb
es
pop
std
popa
test
add
test
push
mov
inc
mov
adc
dec
push
xlat
das
rol
data16
xchg
cmp
inc
mov
pop
mov
sar
or
xchg
bound
pop
mov
pop
cmp
js
mov
dec
add
retf
cmc
scas
dec
push
mov
adc
ja
mov
or
and
lods
aaa
mov
in
jl
mov
retf
test
dec
(bad)
(bad)
push
mov
add
iret
cs
jne
jmp
frstor
pop
movs
push
push
adc
sub
push
or
fist
inc
mov
test
dec
inc
iret
in
add
cmps
cmp
sar
cli
repnz
cmc
movs
dec
sti
xchg
adc
lods
ja
pop
ror
or
cmp
aaa
pushf
repz
jl
arpl
int
xchg
sub
xchg
pop
cmp
cmp
mov
cmp
lock
mov
cmp
push
dec
(bad)
out
xor
cmps
cmc
popf
push
xor
mov
fisub
and
mov
xchg
(bad)
out
daa
cmp
dec
pop
inc
xchg
out
adc
(bad)
adc
cmp
push
or
fnstsw
xchg
jecxz
test
(bad)
movs
sbb
test
mov
jp
loop
call
cmps
addr16
rcr
imul
cmps
sub
or
inc
ss
daa
push
bnd
mov
ins
xchg
lds
xchg
push
sbb
popa
call
xchg
jg
fwait
cli
les
jmp
or
cs
call
push
cmp
xor
sub
inc
or
sbb
mov
xchg
inc
fcmovnbe
lods
rcr
rcl
xchg
imul
sub
cmps
push
mov
mov
rcl
jae
mov
mov
xadd
dec
dec
sahf
and
fucomip
fistp
(bad)
mov
aad
std
sar
mov
lods
arpl
jne
aas
sub
popa
retf
popa
sub
push
arpl
std
iret
fwait
ss
test
sbb
dec
sar
lea
test
push
dec
add
repz
and
jo
ss
sar
jae
mov
out
pmuludq
and
call
mov
movs
stc
pop
sub
push
xchg
daa
xor
pop
icebp
adc
sub
sub
out
enter
movs
mov
sbb
pop
adc
je
mov
cmp
xchg
sub
outs
imul
push
stos
cmp
pop
test
mov
aam
or
nop
cli
cld
push
out
mov
leave
test
cmp
test
or
inc
sub
ja
xor
cmps
shl
leave
pop
fidivr
shr
push
add
sbb
mov
mov
cmp
in
jg
xor
pop
bound
push
dec
add
push
jmp
inc
mov
cmps
fimul
test
mov
or
test
mov
pusha
scas
mov
sub
loopne
add
push
(bad)
and
pop
mov
cdq
jmp
xchg
repz
and
xchg
stos
mov
mov
pop
movs
call
adc
daa
sbb
fcomp
out
cmps
out
scas
rcl
sub
lahf
cmp
into
jno
punpckhdq
dec
das
mov
addr16
out
dec
or
sub
movaps
arpl
sbb
ret
pop
(bad)
adc
adc
test
jne
es
aaa
sbb
jl
popf
push
sub
inc
and
or
mov
lods
mov
and
dec
dec
xchg
and
or
mov
aaa
push
mov
xlat
sar
sub
adc
or
call
jl
jo
xor
fdiv
std
in
movs
push
aad
fcmovbe
popa
mov
dec
inc
cmc
and
sub
test
stos
ja
push
or
xchg
xchg
enter
cwde
dec
aas
scas
mul
jnp
cmp
sub
mov
add
movs
or
mov
mov
jle
cmp
stc
add
pop
dec
and
out
push
nop
test
pop
push
jmp
jle
sbb
and
adc
retf
adc
inc
sbb
aaa
sahf
repz
jle
sbb
call
popa
rcr
(bad)
or
dec
xchg
or
sub
pop
arpl
or
(bad)
xchg
nop
adc
mov
mov
mov
and
test
iret
mov
mov
mov
xor
or
mov
out
sub
test
pop
bndldx
icebp
jns
mov
mov
mov
jns
(bad)
imul
rcr
call
sub
je
adc
push
cdq
add
nop
lods
jmp
pop
and
out
push
jmp
cmp
xor
sbb
outs
scas
xchg
ret
ror
test
jbe
(bad)
fst
and
cmp
int3
mov
cmc
mov
jmp
jp
pop
push
(bad)
(bad)
mov
aad
push
mov
dec
pop
lahf
inc
pusha
out
adc
cdq
xor
ret
xchg
out
jns
and
sbb
addr16
cwde
es
fisttp
mov
mov
xlat
mov
in
es
adc
je
(bad)
out
out
or
aaa
iret
int3
jmp
in
jle
jle
mov
cs
pushf
pop
push
cmp
adc
or
fsubr
(bad)
daa
dec
cmp
ret
inc
jo
adc
imul
add
das
rol
jne
icebp
aad
retf
(bad)
or
sbb
mov
shl
jmp
pop
sar
loope
inc
cld
loope
popf
int3
es
(bad)
(bad)
pop
push
xor
es
push
inc
pop
mov
mov
aas
ds
jne
lea
mov
xor
push
aas
jne
call
inc
and
xor
and
sbb
lds
pop
cmp
es
cld
scas
test
mov
xor
call
xchg
mov
inc
out
mov
inc
imul
cmc
test
xchg
add
jne
repz
mov
test
(bad)
mov
aam
test
or
xlat
push
adc
in
lea
sub
ins
sub
aad
xchg
enter
jmp
les
ss
mov
div
xchg
push
cmps
pop
and
pop
pushf
inc
xchg
adc
adc
xchg
(bad)
(bad)
xor
mov
sbb
mov
fsub
add
add
xor
cs
fwait
out
dec
nop
icebp
jbe
lea
not
repnz
inc
pop
sbb
rol
push
push
mov
stos
cmc
pop
add
lea
das
mov
out
mov
push
pop
shl
and
call
pop
mov
mov
push
xchg
les
ss
ficom
push
scas
xlat
mov
push
adc
add
inc
data16
loopne
adc
into
jg
mov
dec
(bad)
and
mov
dec
ficom
(bad)
loopne
jecxz
in
sbb
mov
push
push
cmp
shl
iret
cmp
nop
lds
sub
aas
and
scas
outs
ins
in
cli
mov
cmps
mov
rol
jns
ror
out
popf
or
inc
xchg
mov
mov
andnps
(bad)
retf
jge
aam
fsub
mov
data16
fiadd
test
cmp
mov
add
loope
adc
enter
push
pushf
pop
daa
fstp
push
push
das
cli
fwait
popf
mov
daa
xor
loop
mov
mov
pop
jmp
popf
stos
std
fsubr
test
mov
push
dec
or
inc
int
inc
(bad)
bound
into
mov
rcl
jl
ret
aam
or
xchg
cmp
dec
gs
push
data16
sbb
jg
add
push
dec
leave
out
repnz
add
scas
cmp
daa
stc
mov
imul
jo
adc
cmp
out
idiv
inc
sub
pop
fs
jmp
xchg
dec
nop
inc
sar
sub
cmp
mov
pop
lahf
ror
pop
loope
or
push
icebp
fwait
jbe
jg
inc
sbb
pusha
imul
iret
leave
adc
or
dec
jne
imul
push
sbb
sbb
jns
mov
test
push
fs
cmp
nop
fs
int3
lahf
cmp
jae
sbb
mov
jmp
cld
mov
mov
push
test
mov
shl
lds
jne
xor
inc
and
add
sbb
jae
mov
add
mov
inc
dec
mov
adc
add
pop
mov
repnz
into
xchg
cmps
call
fucomp
sub
add
in
jbe
sbb
add
js
jae
inc
stos
xchg
scas
jo
sbb
add
gs
nop
js
and
pop
into
mov
pushf
mov
pop
js
cmp
in
adc
sbb
adc
in
dec
lea
mov
in
shl
xor
data16
ins
inc
push
fld
scas
loop
jno
adc
loopne
sbb
xor
push
mov
mov
xchg
adc
cmps
push
xchg
xchg
das
and
add
mov
cli
js
sti
data16
rcl
call
mov
or
cmps
mov
add
(bad)
cs
pop
fwait
lahf
(bad)
stos
outs
push
mov
fild
xchg
xlat
xchg
es
jnp
repz
es
push
pop
jb
push
lds
mov
jae
pop
mov
ror
(bad)
cmp
in
aam
daa
fdivr
outs
ins
sbb
mov
pop
add
mov
mov
inc
pop
xchg
mov
ins
push
push
(bad)
pop
xchg
mov
jmp
xor
mov
fs
sub
push
mov
pop
cmp
xor
test
push
jbe
mov
in
out
call
dec
mov
xor
mov
call
data16
fimul
push
fs
out
pop
test
int
imul
(bad)
aam
(bad)
not
shr
pop
pop
ds
lahf
mov
adc
ja
push
pop
mov
call
sub
ret
add
and
push
or
(bad)
adc
ins
inc
xor
add
nop
push
cdq
test
push
in
mov
int3
addr16
mov
mov
jp
pushf
pushf
mov
fld
fidiv
(bad)
cwde
repz
sti
pusha
adc
inc
xor
or
enter
jl
inc
sub
leave
xchg
rol
iret
(bad)
popf
xor
enter
xchg
xor
nop
inc
js
inc
dec
sar
std
ficom
daa
je
shr
stc
outs
mov
popa
xchg
adc
mov
pop
and
(bad)
mov
out
fld
mov
push
sbb
jno
jnp
xor
pop
xchg
mov
fxch
test
es
fwait
jo
retf
sub
mov
push
jne
popa
mov
cs
psadbw
add
adc
push
leave
pop
mov
jb
push
icebp
aas
shl
dec
rol
sub
fdivr
mov
xor
dec
sbb
aaa
sbb
cmps
jecxz
jbe
vmovntpd
iret
sbb
add
inc
pushf
int3
xchg
in
jns
jbe
leave
pop
dec
mov
push
inc
xchg
cmc
mov
lds
pop
sub
ins
sbb
fs
in
add
mov
hlt
je
aad
pop
fld
sbb
bound
(bad)
fimul
into
call
cmp
mov
adc
pop
int
pop
stc
jp
(bad)
adc
fwait
mov
(bad)
adc
popf
js
scas
test
ja
scas
jbe
mov
into
in
cdq
stos
sar
jbe
iret
loopne
outs
pop
fiadd
jp
inc
sar
js
jge
sub
cmp
(bad)
mov
adc
pop
mov
repnz
fiadd
ss
imul
jns
adc
add
stos
test
stc
movs
jge
push
push
ret
sbb
in
inc
gs
lahf
and
sbb
and
call
push
jge
mov
in
arpl
pop
or
xchg
sub
mul
push
push
push
std
pusha
ss
stos
test
out
popa
jg
inc
inc
fisttp
and
das
or
dec
not
mov
je
aaa
aam
leave
shl
cdq
(bad)
and
xchg
push
add
and
mov
ins
or
fsub
inc
mov
ds
call
add
jno
cmp
(bad)
scas
into
aam
pop
pop
imul
lock
stc
test
or
popa
pusha
xchg
jg
fdiv
push
mov
cs
or
or
int
fild
rol
or
jecxz
mov
dec
ja
mov
dec
scas
dec
xor
pusha
push
push
sbb
pop
jecxz
sbb
jne
push
pop
scas
xchg
clc
loope
fs
arpl
sar
cs
dec
mov
lods
pop
leave
stc
adc
xchg
or
jnp
mov
test
push
mov
mov
ja
(bad)
sti
sub
out
loopne
pop
es
sbb
pop
pop
add
sub
inc
ss
adc
dec
into
fdiv
ss
jp
mov
aaa
pop
sbb
icebp
lock
or
loopne
aas
ins
jecxz
lods
iret
cwde
dec
and
fiadd
push
repz
iret
retf
sub
outs
and
lea
test
sub
inc
ret
add
lods
lea
int3
jns
mov
push
add
push
dec
fsubr
(bad)
push
out
pop
es
pop
movs
jbe
addr16
pop
test
pop
int
cwde
mov
jecxz
mov
and
lock
ret
push
sahf
mov
mov
add
mov
jb
mov
add
imul
pop
dec
dec
test
cmp
in
jae
xchg
rcr
xor
lods
nop
sub
movs
inc
ds
add
outs
mov
jbe
push
lea
fcomp
stos
scas
mov
call
scas
or
stos
out
ins
pop
add
aam
and
icebp
push
retf
and
gs
fsub
(bad)
sub
sbb
retf
add
out
lock
repz
mov
push
ficomp
inc
(bad)
sbb
xor
cmps
jge
xchg
add
adc
cmp
cmp
dec
push
psubusb
push
mov
int
icebp
mov
and
in
pop
sbb
mov
pop
push
mov
pop
push
hlt
adc
push
lock
stos
mov
cmp
retf
add
cmps
cdq
lds
push
cmp
mov
hlt
rcr
cmp
cmps
imul
mov
dec
xchg
ja
mov
push
and
movs
mov
gs
inc
repz
ret
adc
movs
mov
pop
movs
mov
mov
add
push
xlat
mov
mov
inc
push
aaa
fdiv
out
pushf
lods
imul
movs
xor
pop
xchg
mov
jb
aas
shl
out
push
ret
scas
cmp
pop
cmp
call
push
movs
mov
adc
enter
ret
int
sbb
jg
js
(bad)
cmp
adc
neg
xlat
mov
ret
outs
inc
fs
out
pop
and
dec
(bad)
dec
popa
push
out
fnsave
pop
call
int3
and
bound
fwait
es
dec
mov
add
mov
arpl
dec
fsub
and
repz
pusha
cs
ficom
jns
pop
into
add
pop
xor
and
push
aas
or
cmc
sub
mov
fcom
inc
fs
fild
inc
adc
(bad)
jnp
jns
(bad)
mov
sbb
jmp
xor
dec
iret
jbe
push
sbb
stc
xor
mov
xchg
leave
mov
dec
add
jecxz
out
(bad)
sbb
jbe
or
fdiv
inc
mov
(bad)
lea
jl
mov
mov
push
pop
sub
push
push
fsubr
push
push
add
test
mov
(bad)
mov
hlt
in
pusha
rol
dec
mov
movs
loop
ror
shl
imul
jl
sub
arpl
xchg
icebp
mov
pop
outs
sbb
add
icebp
mov
loop
imul
lock
out
mov
mov
fwait
stos
loop
or
and
retf
jne
test
jb
lods
mov
push
jne
xor
and
inc
push
sbb
xor
mov
push
pushf
imul
xor
int
cdq
ret
mov
sub
cmp
adc
fistp
mov
xchg
pop
repz
inc
and
jp
xor
fcmovnb
cdq
ror
les
mov
dec
cli
(bad)
xor
retf
cmp
push
xlat
sub
xor
mov
xor
xor
pop
int3
fs
cdq
cdq
test
inc
ds
or
cli
arpl
push
fisubr
iret
das
sbb
sub
fbstp
not
loopne
iret
dec
scas
jecxz
aad
adc
and
out
out
pop
movs
addr16
sub
lea
adc
adc
jns
aam
add
aas
mov
jg
mov
push
jnp
mov
mov
mov
fstp
push
or
xchg
mov
imul
in
push
mov
add
push
stos
push
pop
add
jl
xchg
push
dec
inc
cmc
fbld
cs
sub
pop
shr
add
neg
out
out
push
loopne
shl
mov
imul
in
pop
stos
clc
aaa
and
popa
not
ret
pop
mov
in
imul
mov
adc
cbw
ins
xor
mov
pop
repnz
sbb
jmp
cdq
js
pop
xchg
xchg
push
lods
loope
test
dec
dec
fwait
add
cmc
xor
jmp
xor
in
and
sub
add
call
js
adc
repnz
int3
mov
and
lds
icebp
lods
dec
push
pandn
and
pop
inc
push
aas
inc
aaa
test
dec
mov
jbe
mov
jecxz
cmp
sub
inc
jbe
add
sar
add
jg
mov
lahf
out
xor
xchg
fwait
mov
push
sti
push
pop
fadd
(bad)
cmp
mov
movs
push
push
scas
cli
aam
pop
xchg
hlt
movs
rep
out
cld
fst
pop
in
mov
(bad)
adc
in
jl
mov
ret
je
mov
into
xor
dec
aad
and
retf
cs
xor
std
je
add
dec
inc
(bad)
sbb
or
push
shl
jmp
or
or
adc
and
mov
pop
out
jmp
pop
pop
movs
fidivr
ret
mov
(bad)
jmp
xor
popa
test
daa
sbb
mov
pop
mov
test
push
aaa
xor
imul
dec
adc
sbb
repnz
cmp
jmp
aas
test
int
dec
adc
test
jmp
sti
xor
dec
xchg
js
fdivr
fsub
pop
pop
ja
add
outs
fucom
cmp
pop
sub
dec
into
lahf
shr
or
pusha
pop
inc
and
call
outs
push
jmp
dec
dec
bound
scas
mov
or
nop
iret
adc
seto
adc
push
int3
in
jg
add
dec
xor
mov
call
fsubr
test
inc
inc
mov
push
std
jmp
retf
les
retf
aad
add
outs
das
js
scas
rol
pop
dec
aas
mov
mov
cld
xchg
jae
sbb
jmp
rol
pop
or
fsubp
cmp
jp
xchg
mov
test
cs
jne
iret
or
jp
inc
push
inc
sahf
mov
scas
xchg
sar
jmp
icebp
gs
mov
pushf
fsub
leave
ficomp
add
mov
jle
jo
pop
add
sbb
sti
sqrtps
dec
lods
lods
pop
jno
fisub
add
xchg
rcr
mov
fild
push
ficom
xchg
test
loopne
arpl
cs
enter
add
aaa
popa
jmp
xor
arpl
(bad)
out
add
(bad)
fstp
data16
or
mov
ret
lds
sub
mov
repz
leave
mov
cdq
test
jnp
mov
or
adc
or
xchg
adc
in
jmp
out
mov
mov
push
mov
xor
movs
shr
fnstcw
cli
dec
xchg
xchg
(bad)
ds
fiadd
adc
mov
pop
ret
mov
(bad)
loopne
hlt
jb
les
mov
popf
xor
sahf
mov
imul
fistp
mov
push
dec
mov
xor
push
and
and
sub
out
ret
mov
addr16
mov
ss
mov
xlat
push
pop
sbb
or
and
scas
in
scas
das
jg
or
popf
leave
clc
sbb
or
cdq
xor
jg
pushf
mov
mov
aam
push
xchg
shr
or
xchg
sbb
xchg
dec
push
xor
dec
scas
repnz
pop
into
sub
lahf
add
ror
fwait
(bad)
push
lock
aam
out
or
mov
std
cs
in
cdq
jge
adc
pop
fdivrp
ins
in
mov
call
sbb
popa
cld
bnd
std
and
(bad)
aad
test
fwait
hlt
jmp
sbb
aad
or
push
(bad)
xchg
push
retf
fistp
out
push
dec
movs
mov
lods
sub
push
xchg
out
sti
std
stos
jge
std
mov
mov
rcl
data16
imul
pop
repnz
mov
jae
sbb
mov
sub
or
int
std
rcr
sbb
inc
adc
jge
jnp
mov
shr
or
retf
ja
pop
movs
mov
mov
push
mov
hlt
loope
ss
shr
pop
ret
loop
cmp
mov
mov
pop
xchg
in
dec
mov
pop
pop
out
scas
cmovp
jmp
add
pop
sub
or
dec
mov
(bad)
cld
fbstp
stos
sbb
out
loope
pop
or
jo
cld
adc
add
sbb
(bad)
sbb
xchg
mov
jle
js
(bad)
sub
push
sub
popf
adc
and
ret
(bad)
mov
aas
cmp
xchg
cmp
test
cmp
stos
sub
mov
add
jnp
call
inc
push
push
test
mov
test
add
push
scas
cmp
xor
(bad)
lahf
imul
xor
outs
dec
in
cmp
push
xchg
mov
pop
aad
mov
sahf
clc
ret
mov
femms
repz
sahf
cmp
cmp
test
dec
jmp
vpsrld
mov
ret
cmp
and
std
fld
or
in
popa
out
mov
in
call
aas
mov
add
das
cmp
cmp
out
cmp
adc
aas
in
(bad)
mov
inc
stc
imul
ret
jle
or
fwait
sub
jmp
mov
(bad)
rol
hlt
jne
(bad)
cmp
js
sub
xor
mov
and
push
push
mov
push
dec
adc
sbb
arpl
or
inc
repz
(bad)
stos
mov
jns
fst
push
lahf
xchg
jg
gs
sti
jl
fld
jne
add
call
add
jmp
out
xor
xor
jge
adc
dec
mov
pop
xchg
mov
(bad)
fimul
and
sahf
aam
daa
dec
aaa
mov
sbb
mov
xchg
mov
aaa
clc
les
call
jle
xchg
stc
fwait
test
mov
sbb
cwde
(bad)
jo
cmc
daa
mov
in
loope
sbb
outs
and
cld
mov
addr16
in
mov
div
inc
and
stos
pop
ret
cmps
retf
mov
jl
repnz
enter
fidivr
cmp
test
xor
mov
xchg
(bad)
or
pop
rcr
popf
sub
push
mov
mov
call
push
adc
mov
push
jne
in
push
jl
fst
mov
xchg
js
popf
(bad)
hlt
pop
vmovhpd
push
dec
ds
lea
push
cmp
add
or
fwait
sbb
mov
mov
or
cwde
jmp
mov
ja
sti
sbb
pop
push
mov
mov
xor
(bad)
in
xchg
nop
push
lods
test
cmps
shr
test
push
ins
sub
lahf
adc
push
test
xor
jno
ja
mov
loop
xor
imul
hlt
pusha
inc
repz
sar
mov
jb
push
mov
push
mov
rcl
dec
cmps
fild
mov
iret
sub
call
push
loopne
in
aam
mov
scas
imul
or
mov
pop
ins
mov
gs
es
mov
lea
and
push
scas
cmp
mov
xchg
test
repnz
sub
lods
addr16
jle
add
data16
mov
mov
cmp
out
mov
(bad)
jle
(bad)
mov
cdq
leave
movs
inc
inc
(bad)
mov
pop
mov
or
cdq
dec
cmp
dec
fist
sub
dec
sahf
cmps
(bad)
scas
daa
push
aaa
pop
and
call
fcomi
(bad)
mov
fmul
xchg
adc
ds
adc
retf
(bad)
mov
push
and
jmp
mov
stc
gs
mov
shr
jge
push
adc
in
lock
adc
sub
ss
jno
pop
fs
ja
fsub
adc
and
neg
fwait
sub
adc
scas
pop
loop
loope
xchg
bound
adc
lods
div
shl
ds
iret
jecxz
pop
dec
add
jmp
xchg
shl
inc
and
add
js
push
fsubr
sahf
fwait
jmp
or
jle
or
add
retf
cmp
or
push
test
shl
cmp
dec
add
shl
sbb
aas
xchg
(bad)
xlat
shl
xor
mov
je
rol
inc
inc
sar
xchg
not
adc
dec
scas
ds
movs
call
mov
pop
call
ror
arpl
repz
pushf
mov
or
jg
dec
cli
aas
pop
adc
mov
or
and
cmc
mov
ror
movs
in
pop
jno
dec
outs
retf
push
lock
imul
xor
adc
xor
jle
mov
int
xchg
jp
retf
sub
mov
adc
into
sub
jae
movs
jl
adc
jg
clc
pushf
and
cmp
sub
dec
xchg
xor
lahf
movs
push
cs
into
inc
popf
jno
lea
lea
loopne
mov
add
cli
rcl
cmp
and
mov
pop
out
xchg
mov
lea
test
stos
pop
into
aaa
test
je
mov
mov
xchg
(bad)
jbe
mov
ret
imul
das
addr16
popf
shl
xor
pop
stc
jns
jp
mov
sar
out
ins
lahf
and
sub
sub
fidiv
cmc
nop
or
sti
xchg
in
pop
and
jp
addr16
inc
sub
push
mov
jns
push
lods
pop
jns
xor
jle
jecxz
or
mov
das
mov
mov
daa
ds
pop
rcr
in
ret
cli
add
in
or
xchg
clc
mov
push
fisttp
sub
leave
mov
fcmove
mov
cmp
mov
sbb
ds
mov
dec
pop
popa
cmp
std
or
ror
jbe
aaa
add
xchg
adc
repnz
pop
lods
pop
push
test
cmc
or
pop
out
ret
sbb
add
les
fsubr
outs
xor
and
cwde
mov
ret
(bad)
mov
ss
(bad)
adc
push
pop
add
xor
in
lahf
add
call
fs
mov
in
push
dec
das
sbb
inc
pop
adc
jmp
add
stos
out
pop
inc
jbe
inc
out
inc
(bad)
xor
outs
add
dec
retf
dec
mov
xchg
nop
aad
inc
sbb
sahf
and
and
rol
sbb
sti
cmc
cs
sbb
ret
sbb
(bad)
jecxz
ret
jge
(bad)
cmp
stc
and
imul
int
ins
inc
sub
xor
pop
xchg
retf
mov
cld
idiv
ret
cdq
xchg
(bad)
and
xchg
pusha
scas
pop
inc
xor
retf
push
enter
imul
stos
pop
cmp
clc
test
sar
icebp
pop
fisttp
es
and
add
sbb
mov
rcl
scas
jno
call
dec
mov
pop
pop
and
pop
ss
lock
in
or
mov
movs
imul
mov
mov
ins
and
test
outs
sbb
pop
mov
add
or
retf
ret
mov
and
jb
or
rcr
sub
mov
outs
jmp
sbb
dec
inc
inc
ret
add
(bad)
repz
xor
icebp
add
jo
push
jnp
sub
jmp
mov
mov
jl
jmp
ins
in
dec
(bad)
leave
sub
in
imul
ja
ret
pushf
xchg
jmp
jno
daa
rol
inc
mov
xchg
and
cmp
xchg
fdiv
sub
and
jg
xchg
and
neg
int
fbstp
outs
inc
addr16
lea
xchg
and
sbb
jbe
fwait
cmp
in
cmp
ja
aaa
sub
fdivrp
cwde
int
(bad)
jecxz
cmp
push
mov
adc
cmp
jg
mov
out
mov
jl
adc
or
scas
pop
jmp
sbb
adc
retf
sbb
nop
dec
jmp
into
and
sbb
out
mov
movs
int
jo
jle
test
shl
or
bnd
in
add
ret
push
jle
pop
mov
and
sbb
outs
clc
sub
or
mov
ins
dec
sar
lods
sbb
push
push
repnz
sub
inc
fcmovnbe
imul
cmp
out
push
pop
popa
xor
and
rcr
in
ret
mov
cmps
loop
sbb
sbb
mov
pop
pop
cmp
aaa
or
pop
and
lods
sahf
jmp
icebp
mov
sbb
ret
dec
pop
repz
in
(bad)
adc
cdq
mov
dec
or
frstor
adc
xlat
sbb
(bad)
leave
movs
push
ds
jge
shl
mov
add
xchg
gs
and
ror
inc
push
clc
and
arpl
shl
adc
push
or
jp
int3
sub
out
adc
out
xchg
cmp
out
mov
in
(bad)
call
xchg
das
jp
and
repnz
adc
pop
iret
(bad)
cwde
cmp
push
jb
push
fsubr
jge
mov
and
lock
jb
mov
sub
add
aaa
xchg
nop
cmps
mov
jle
das
push
inc
in
fadd
jne
mov
dec
push
cmp
pop
shr
shl
adc
cs
clc
mov
int
cmp
(bad)
vsqrtsd
sbb
in
push
jae
or
push
(bad)
ficom
pop
xor
adc
mov
and
xchg
xchg
pop
pop
xor
pop
mov
pusha
(bad)
out
and
cmp
mov
xchg
mov
repz
in
pop
push
mov
retf
jo
inc
mov
push
lahf
cmp
stos
inc
xor
adc
mov
fcomi
mov
xor
das
imul
adc
fsub
mov
push
mov
loope
sub
dec
dec
mov
test
cmps
lods
sar
fucomip
inc
imul
cs
int3
jmp
push
dec
mov
adc
mov
lods
and
pop
mov
outs
xor
inc
loop
(bad)
out
sbb
fisubr
cli
imul
(bad)
inc
jg
je
and
int
sbb
mov
fisubr
sbb
aam
mov
jmp
sub
jge
adc
lds
cmps
fbstp
out
cmp
xchg
sbb
jno
fwait
xor
xchg
mov
or
lods
int
jecxz
mov
popa
sub
clc
push
stos
xchg
sub
stc
test
fidivr
xor
sub
out
stos
push
sar
je
add
cmps
sti
sbb
sbb
xor
mov
(bad)
aas
mov
clc
clc
adc
mov
jne
ins
stos
xchg
and
cli
pop
xchg
nop
and
outs
sbb
jns
sbb
fmul
xchg
xor
dec
shl
pop
jecxz
adc
mov
push
mov
test
retf
in
mov
jecxz
add
pop
xchg
ds
in
pop
cmp
mov
dec
mov
ja
loop
jl
outs
push
fwait
mov
(bad)
hlt
in
into
fisub
ss
loop
popa
(bad)
lahf
repz
cmp
add
pop
dec
(bad)
loop
sbb
add
ins
inc
push
inc
jnp
inc
sub
popa
xor
out
xor
sbb
inc
inc
ins
arpl
in
jae
lock
movzx
mov
xor
popa
jge
(bad)
out
ss
icebp
(bad)
cmc
es
je
mov
scas
ret
call
inc
push
cmp
add
cld
lahf
mov
inc
inc
or
repz
cdq
cmps
push
call
or
in
fisttp
sbb
dec
ja
ins
icebp
iret
dec
push
xlat
mov
jnp
mov
rol
cmp
lea
frstor
movs
mov
mov
sahf
popa
enter
movs
clc
pushf
xor
dec
sahf
jbe
sub
loope
inc
aaa
mov
out
sbb
push
jge
(bad)
mov
lock
ins
cmp
call
xor
mov
or
test
hlt
xchg
inc
mov
icebp
sbb
(bad)
mov
cmp
popa
movs
mov
mov
bound
inc
fnclex
(bad)
jecxz
iret
adc
lds
dec
push
loope
inc
aam
lea
mov
jmp
xchg
popa
push
adc
mov
push
js
jp
cdq
outs
test
popa
adc
xor
test
icebp
mov
jns
sbb
sub
btc
loopne
pop
shr
(bad)
cdq
ds
mov
add
jmp
lea
xchg
sahf
cmc
test
adc
cmps
cmp
lods
mov
(bad)
ins
xchg
shr
add
pushf
jecxz
fsub
pop
out
rol
sub
pop
movs
popa
sub
pop
pop
jecxz
lods
dec
jl
adc
mov
pop
(bad)
jp
push
fistp
xor
jbe
test
pop
add
and
adc
arpl
mov
inc
xchg
adc
fisub
xchg
xchg
(bad)
fsub
pop
shl
sti
mov
xor
shl
lahf
adc
int
mov
fadd
stos
dec
mov
test
xlat
dec
cmp
jo
mov
ds
xor
inc
xor
adc
sub
xchg
or
out
cli
stc
sub
xor
in
and
push
and
add
mov
out
fadd
add
push
and
push
inc
out
mov
in
jns
into
sub
adc
pop
xchg
and
pop
fbld
test
add
stos
int3
xor
jge
pop
in
mov
into
sbb
xchg
mov
cdq
int3
fidiv
add
cmp
cmp
mov
shr
xchg
cmp
push
xchg
into
int
lods
test
push
pop
out
mov
and
xchg
push
lahf
jae
shl
shr
jae
(bad)
sti
out
mov
mov
inc
fwait
push
pop
mov
lahf
mov
ror
xor
ins
cmp
sub
adc
fist
sti
cmp
sub
push
(bad)
pop
test
retf
push
cmp
or
and
and
xchg
or
jns
int3
out
adc
adc
nop
sbb
jno
mov
les
dec
mov
xchg
cmp
(bad)
push
jb
jecxz
leave
dec
push
int3
test
out
(bad)
mov
pop
mov
xchg
xor
jmp
dec
sti
mov
cmp
lods
push
jns
es
ret
jp
sub
sub
jno
pushf
pop
gs
cmp
or
into
dec
lock
(bad)
pop
lods
sbb
jmp
outs
lock
xor
cmp
retf
sbb
xor
push
jb
xor
retf
cmp
scas
cdq
jmp
je
sbb
mov
repnz
(bad)
push
mov
sar
fmul
stc
push
repz
mov
or
xor
es
test
sbb
push
lea
(bad)
adc
add
pop
rcl
and
in
jmp
(bad)
fcmovbe
xchg
into
in
aas
int
pop
inc
pusha
pop
xchg
cmp
lock
add
jns
in
loop
mov
je
sub
div
popf
clc
and
in
fwait
pop
or
inc
dec
mov
xor
dec
mov
popa
mov
dec
or
pop
adc
not
and
or
call
imul
sahf
push
mov
xor
imul
or
aas
scas
adc
or
ss
sbb
jmp
jae
mov
xor
loop
or
arpl
push
fldenv
sbb
mov
(bad)
push
mov
bnd
rcr
mov
cmps
mov
jecxz
adc
jne
les
ficom
pusha
icebp
js
gs
gs
js
(bad)
out
mov
fmul
sub
(bad)
cld
mov
arpl
jo
fild
xchg
cdq
fsubr
and
call
outs
cmps
push
or
fsubp
xchg
cmp
mov
cmp
fsub
popf
mov
push
jae
xor
inc
pop
inc
retf
adc
out
in
rcr
adc
cmp
(bad)
call
fild
jmp
aaa
dec
mov
or
call
dec
ror
fs
push
push
mov
mov
dec
mov
jmp
rcl
mov
pop
mov
sahf
sahf
push
(bad)
jge
scas
iret
jns
test
xor
movs
mov
adc
(bad)
mov
cs
sahf
rcl
movs
jge
adc
xchg
mov
xor
(bad)
pop
cmp
mov
fidiv
sub
cmp
aam
fwait
adc
or
mov
and
cmp
test
in
pop
imul
stc
(bad)
rcl
push
and
xor
addr16
test
jge
pop
pushf
imul
add
xor
sbb
std
(bad)
fucomip
jmp
sar
jle
shr
jl
xchg
jg
dec
and
sbb
shl
outs
enter
sbb
inc
sub
mov
bound
inc
js
mov
outs
inc
and
sub
add
xchg
jbe
mov
and
mov
pop
sbb
loop
cmp
cmp
out
out
neg
dec
cwde
ins
inc
sbb
pop
retf
stc
addr16
mov
push
sub
enter
loop
dec
or
ror
repnz
ja
adc
jg
shr
push
bound
jmp
mov
mov
movs
mov
stc
in
lods
cmp
ja
sub
xchg
push
rcl
mov
(bad)
data16
cli
ins
cmp
nop
jp
das
test
push
pop
cld
inc
pop
ror
sub
xchg
cmp
out
aaa
pop
cmp
adc
adc
or
jno
in
dec
push
movs
fsubr
xlat
stos
pop
rcr
or
xchg
adc
push
(bad)
mov
pop
jmp
cmps
mov
push
nop
mov
add
stos
cwde
pusha
lea
fdivr
mov
fucom
outs
xchg
fnstenv
dec
cmp
stos
popf
movs
mov
xlat
loopne
mov
add
ja
sbb
iret
adc
lock
adc
fdivr
(bad)
ins
test
repnz
dec
mov
xchg
addr16
mov
jae
sbb
in
xor
out
cmps
xor
or
shl
mov
cmp
push
mov
icebp
enter
aad
out
adc
sub
pop
mov
retf
in
pop
sub
aad
xor
retf
movs
in
aas
dec
xchg
not
sub
mov
imul
or
in
pushf
aam
xor
jg
out
add
cmp
dec
aas
or
retf
sti
push
das
cmp
push
out
shl
outs
lods
jb
imul
lods
test
aam
paddsw
sub
push
sbb
in
xchg
sti
cmps
in
mov
xor
lahf
fstp
add
fwait
or
sbb
mov
pop
or
lock
pop
jecxz
imul
xor
cld
je
inc
aas
test
jmp
cmp
int
sub
movs
lahf
jb
mov
mov
sub
pop
sub
nop
dec
sbb
enter
aas
inc
call
mov
ficom
push
jbe
pop
sbb
stos
js
cdq
mov
jmp
mov
test
rcl
pop
cmp
jne
fdivr
mov
jae
mov
not
div
fcomp
jecxz
adc
add
xchg
aad
popf
test
lods
cmp
pop
cli
mov
inc
out
pop
lods
adc
pop
xchg
inc
fs
or
aas
cdq
pop
fisub
jmp
ja
addr16
ins
mov
fbstp
cmp
dec
or
daa
imul
cli
sub
inc
dec
rcr
dec
test
add
fwait
xchg
cld
ret
fadd
and
je
push
cmps
lock
jge
ins
stos
(bad)
in
or
mov
jns
and
bound
mov
pop
sub
fst
ret
pop
push
test
popf
push
outs
loopne
aaa
cs
cmp
pop
jmp
outs
and
inc
neg
add
out
dec
xchg
into
shr
sbb
pop
mov
dec
xor
aam
and
jg
movs
push
or
push
call
sbb
iret
push
and
(bad)
shl
rol
pop
jne
cmp
fld
push
daa
mov
mov
(bad)
call
push
mov
pop
pushf
mov
jnp
int3
add
sar
mov
addr16
out
dec
repz
mov
cmps
mov
inc
or
out
ret
test
int3
xor
in
scas
adc
sbb
hlt
mov
mov
inc
std
into
jb
les
or
pop
ror
aam
pop
mov
stos
or
mov
pop
pop
jecxz
aas
ds
fwait
xor
pusha
xor
in
adc
xchg
jl
daa
leavew
cmp
push
and
sbb
cmps
pcmpeqb
mov
dec
(bad)
jle
inc
xchg
sub
cmp
xor
mov
cmc
loope
add
sbb
shl
jnp
mov
aaa
adc
sbb
sub
mov
add
call
retf
mov
data16
add
jmp
pop
int3
inc
xchg
scas
cmp
adc
push
in
xchg
in
pop
rcr
push
inc
mov
mov
pusha
add
lock
cmc
mov
push
jno
bound
jmp
daa
mov
scas
inc
out
push
mov
idiv
retf
call
div
push
mov
pop
xchg
int
or
mov
sub
sbb
inc
retf
push
iret
mov
pop
mov
push
pop
pop
ss
js
cmp
push
xchg
dec
jmp
xor
clc
add
push
or
inc
addr16
sti
pop
jne
and
sub
adc
rcr
pushf
retf
repnz
dec
pop
and
test
inc
dec
sbb
shl
mov
mov
inc
cmp
mov
popf
es
mov
mov
or
test
mov
in
in
sub
add
xchg
les
jb
lahf
clc
cdq
retf
imul
test
mov
inc
sub
in
mov
sub
mov
repz
cli
xchg
pusha
hlt
lods
je
aam
inc
call
clc
inc
sbb
xor
out
pop
and
push
jnp
xchg
into
popa
mov
inc
inc
fidivr
cwde
pop
daa
push
fist
out
adc
out
sub
int
rcr
mov
push
sub
out
xchg
rcl
pop
add
(bad)
jl
jae
mov
in
(bad)
out
adc
mov
cmp
xor
popa
mov
(bad)
and
jmp
dec
pop
div
and
stos
test
mov
(bad)
mov
dec
inc
aas
pop
daa
and
inc
adc
out
mov
fxch
es
mov
cmc
push
add
mov
pmaddwd
mov
xlat
in
iret
lods
in
jle
mov
jne
pop
sub
cs
pop
retf
arpl
(bad)
pushf
bound
loope
jmp
pop
jne
push
sbb
pop
aad
lds
and
cmp
lods
inc
retf
pop
fs
mov
outs
cmc
xchg
adc
cmp
jmp
inc
cld
lds
rol
sub
mov
inc
gs
adc
iret
jg
and
clc
retf
mov
adc
pusha
dec
cwde
js
add
daa
jle
and
mov
fcmovb
out
push
add
js
dec
test
outs
xchg
int3
add
jle
mov
bnd
adc
mov
sub
hlt
je
shl
gs
and
sub
ins
jp
ins
jge
dec
mov
cmp
loop
in
mov
mov
aad
mov
jecxz
mov
mov
ror
(bad)
sti
movs
push
lea
not
iret
test
add
iret
aam
fsub
jecxz
jmp
sahf
jns
or
outs
into
cmc
adc
adc
pop
test
sti
mov
rcr
fwait
sbb
test
movs
mov
imul
pop
push
sti
push
mov
(bad)
mul
pop
xor
or
loope
add
cld
dec
es
xor
dec
inc
add
lods
dec
std
push
aam
cwde
xchg
lods
inc
jb
gs
jecxz
adc
pop
mov
cs
addr16
(bad)
mov
lods
mov
ds
ins
or
sbb
inc
adc
out
into
fadd
add
es
sub
push
xchg
inc
or
(bad)
cmp
mov
inc
jmp
ficomp
inc
ss
hlt
hlt
mov
add
fisubr
xchg
out
in
cmp
adc
mov
jns
jp
pop
ins
rcl
pop
jae
mov
dec
movs
sbb
repz
pop
imul
xchg
jecxz
dec
adc
add
pop
sar
dec
cli
(bad)
test
xchg
sbb
not
push
xchg
cmp
jmp
js
pop
sub
test
or
shl
sub
dec
mov
sub
loope
dec
movs
add
mov
test
in
mov
addr16
sub
outs
xchg
and
mov
lds
fdiv
sahf
stc
pop
pop
mov
scas
pop
mov
into
or
jle
loopne
dec
or
pop
jecxz
jge
ror
sub
pop
mov
nop
pop
sub
scas
daa
bound
xchg
jne
inc
ficomp
ret
std
pop
stos
dec
ins
and
call
out
popf
ja
adc
mov
mov
dec
cmps
fsubr
mov
call
dec
jno
mov
aas
sti
addr16
aas
xchg
iret
xchg
or
push
cmps
mov
in
outs
imul
dec
sub
add
aam
pop
les
jne
lea
add
ss
mov
dec
lds
jge
add
js
out
out
cli
loop
test
add
hlt
vaesdeclast
sahf
mov
jecxz
jno
adc
test
sub
int
movs
out
(bad)
push
jae
add
movs
int
pop
pop
sbb
repnz
ja
hlt
bound
adc
iret
sbb
icebp
mov
loop
add
inc
mov
add
push
pop
mov
pusha
mov
jae
push
mov
inc
dec
jp
cwde
dec
push
or
xchg
icebp
inc
xor
sbb
pop
outs
aas
pop
inc
call
fbld
adc
out
jg
lds
mov
imul
enter
pop
pop
xchg
dec
xchg
lea
enter
sub
inc
jge
popa
jo
cwde
xchg
mov
cwde
jg
pop
mov
mov
sub
push
xor
div
dec
xor
in
inc
jecxz
sub
(bad)
aam
inc
sbb
xchg
enter
sti
dec
ins
call
sti
cli
jns
sbb
dec
and
inc
ret
or
push
in
pop
loopne
dec
and
in
mov
(bad)
cmps
xor
mov
sub
rol
hlt
adc
jle
add
ins
jg
stos
daa
call
jne
push
mov
out
mov
enter
mov
(bad)
repnz
dec
out
sbb
mov
pop
add
(bad)
mov
cwde
ficom
fcomip
(bad)
pop
imul
pop
push
adc
(bad)
in
hlt
jns
dec
push
pop
cmp
sub
sbb
push
pusha
add
push
lahf
push
(bad)
sub
jbe
xchg
mov
les
rol
cmp
imul
mov
cmp
aaa
add
dec
int3
mov
dec
scas
dec
mov
clc
adc
and
pop
mov
push
xor
xchg
popf
sbb
mov
and
int
xchg
jnp
pop
inc
xchg
sahf
cmp
or
fisttp
(bad)
xor
mov
sub
fcmovnb
cmp
sbb
and
push
js
jmp
aad
fdiv
sub
or
int
arpl
(bad)
jns
jo
sbb
test
xchg
ja
xor
mov
pop
rcr
mov
aad
cdq
adc
xor
fbld
pushf
fs
pop
pop
xchg
mov
mov
ret
add
sbb
test
inc
sub
cmps
inc
cmp
sbb
and
pop
inc
sub
das
das
js
jmp
add
adc
jecxz
push
aaa
fnstenv
and
inc
in
adc
mov
push
shl
retf
int3
scas
leave
and
dec
adc
mov
outs
xor
call
or
pushf
jno
imul
dec
sti
(bad)
fld
call
xchg
mov
or
fstp
outs
out
adc
out
mov
ror
pusha
push
sub
std
mov
mov
hlt
push
mov
das
mov
sbb
mov
outs
add
ds
sbb
push
mov
addr16
jno
pop
push
pop
imul
push
mov
(bad)
xchg
fxch
adc
arpl
dec
imul
repz
fs
jecxz
mov
shl
test
pop
out
aam
pop
in
sub
or
aaa
leave
ins
adc
add
mov
push
ins
lock
xor
nop
sti
ror
ss
pop
ins
jge
in
dec
cdq
cmp
mov
je
mov
lds
out
mov
inc
sbb
jo
cmps
jns
shr
and
mov
retf
pop
lock
jl
sahf
inc
cs
iret
retf
xchg
add
rcl
xchg
cmp
cmps
ret
test
imul
sbb
or
cmc
ret
lea
push
pop
cmps
loopne
mov
sub
adc
sbb
iret
sub
mov
sub
sti
ds
shr
icebp
mov
push
adc
(bad)
dec
movs
push
pop
pop
cld
in
lods
add
(bad)
xchg
add
jmp
or
add
rcr
jmp
push
jae
jl
jns
(bad)
and
hlt
sbb
call
or
call
cli
dec
and
pop
add
fdiv
sub
jo
jmp
push
aad
in
js
out
or
xchg
push
shl
push
inc
mov
fwait
cmps
xor
pop
clc
ror
push
test
lds
or
nop
ins
add
pop
arpl
sbb
pop
jo
mov
je
xchg
jmp
into
sbb
pop
dec
jl
inc
imul
icebp
movs
mov
int
lahf
std
les
mov
lock
mov
push
xor
mov
adc
fadd
rcl
clc
mov
fwait
dec
maxps
add
loope
movs
lea
daa
pop
fwait
ins
dec
shr
sar
pop
xor
mulps
push
or
(bad)
pop
push
hlt
push
test
push
add
xor
adc
xchg
push
aam
jmp
push
bound
scas
adc
cld
lea
and
add
add
xor
cld
inc
cwde
cli
call
(bad)
out
xchg
sub
cli
retfw
inc
pushf
shr
jae
add
adc
ins
jecxz
ret
sti
shl
movs
data16
into
sbb
push
outs
jmp
out
fcomp
cmp
mov
mov
jge
mov
cmps
or
push
pop
sbb
mov
lds
fisub
pushf
sub
mov
stc
call
dec
(bad)
idiv
mov
std
or
pop
mov
or
push
(bad)
clc
mov
repz
add
jge
pop
(bad)
in
(bad)
daa
sub
outs
pop
mov
sub
retf
jle
xor
jmp
xchg
ss
hlt
and
icebp
dec
out
mov
lea
ret
lds
push
adc
mov
loope
call
or
cmp
js
fld
test
xchg
das
jb
and
out
clc
rcl
stc
jmp
popa
stos
(bad)
loope
mov
add
mov
mov
xchg
call
popf
mov
xor
sbb
mov
repz
push
jg
out
ret
sbb
pop
sbb
(bad)
icebp
in
scas
stos
sub
dec
push
xor
jl
cs
into
in
fbld
inc
out
or
pushf
cli
xchg
test
cmp
fldcw
add
xchg
das
cmp
inc
mov
rcl
std
mov
dec
xlat
push
es
fxch
dec
xchg
xlat
push
fs
and
add
icebp
repz
mov
test
pop
pop
inc
fsubr
sar
jp
retf
sub
push
and
mov
xor
fidiv
inc
outs
scas
ds
xchg
fwait
rcl
pushf
lds
add
fidiv
pcmpeqb
push
in
arpl
aam
(bad)
stos
add
iret
sbb
jbe
xchg
mov
dec
xor
hlt
xor
dec
dec
push
pop
cmp
xchg
test
mov
mov
mov
inc
cli
pusha
aaa
add
jne
or
xor
scas
cmp
mov
mov
mov
mov
repnz
add
mov
lods
and
jge
cmc
mov
mov
inc
daa
cmp
dec
popa
dec
ror
loop
inc
(bad)
in
mov
mov
xchg
push
je
pop
xchg
xchg
cmps
or
inc
jnp
in
dec
xchg
cmps
xor
inc
iret
adc
fcomp
loopne
cwde
sahf
fcomp
pop
fnstsw
mov
mov
or
fld
data16
inc
repnz
(bad)
cld
test
and
add
cli
pusha
(bad)
gs
icebp
(bad)
scas
mov
mov
xor
jbe
(bad)
sbb
stc
mov
js
xor
jnp
shl
loope
arpl
mov
inc
jae
fstp
pusha
ins
or
sub
cmp
movs
mov
(bad)
dec
mov
pop
cmp
pop
mov
(bad)
mov
fsubr
or
mov
call
jl
add
dec
sbb
fimul
jmp
(bad)
xlat
inc
jmp
pushf
xor
test
es
pop
mov
aam
rol
daa
cmp
fidivr
out
sbb
sub
pop
cdq
in
mov
into
in
rcr
mov
or
adc
sbb
data16
mov
push
sbb
add
jne
mov
call
dec
push
out
popa
dec
push
je
sub
push
ret
into
sub
in
(bad)
mov
and
xchg
cs
shl
cmp
adc
stos
fcomp
jg
jmp
or
push
jbe
or
loop
mov
lea
rol
sbb
sub
addr16
mov
push
loop
or
add
cmps
out
shl
in
mov
jge
in
cmp
aaa
popf
xor
jge
xchg
outs
push
sbb
cmp
es
(bad)
daa
or
push
pop
nop
push
or
push
fiadd
cmovo
sbb
pop
daa
sbb
mov
sbb
hlt
adc
lahf
dec
stos
mov
fidivr
mov
sbb
push
cli
dec
or
ins
das
push
mov
sub
cmp
push
or
inc
ins
adc
bound
into
lock
sbb
mov
iret
aaa
call
in
data16
sub
xchg
ja
sub
xlat
aad
adc
push
lahf
inc
push
sbb
and
mov
adc
cmp
call
shr
ds
mov
out
inc
lods
hlt
push
pop
mov
push
ja
cmp
leave
(bad)
call
popf
dec
bound
(bad)
stos
sub
lods
in
mov
mov
add
hlt
pop
inc
cld
mov
(bad)
inc
xor
add
cmp
cmp
(bad)
jmp
test
call
sbb
dec
and
inc
sbb
cmps
int3
fstp
bound
mov
adc
test
pop
(bad)
sbb
jae
rol
push
adc
test
retf
ds
push
cwde
stos
hlt
mov
push
lods
add
mov
aaa
leave
xchg
xchg
mov
push
mov
push
rcr
retf
xor
dec
clc
sbb
add
dec
mov
jb
jl
loop
int
sar
jmp
shl
cmp
cmps
mov
out
pop
(bad)
out
dec
call
pop
inc
mov
clc
aas
dec
jmp
mov
addr16
cmp
push
in
pop
push
test
and
xor
mov
f2xm1
pop
cmp
rcl
mov
ret
inc
sub
add
lahf
stc
test
inc
imul
xor
dec
push
test
stc
add
cli
aas
(bad)
fwait
add
in
ds
sar
sub
js
and
std
(bad)
mov
loope
into
and
adc
arpl
dec
lods
gs
mov
mov
add
push
or
pop
nop
dec
cmp
out
outs
adc
mov
push
pop
out
movs
jmp
xchg
dec
popf
aaa
jae
fadd
loop
pop
cmp
push
add
sub
xor
iret
adc
sub
push
mov
ffreep
push
pop
adc
pop
out
lock
dec
pop
pop
and
jmp
popf
push
sbb
fwait
bnd
fsub
(bad)
xchg
add
jge
jmp
mov
shl
std
adc
push
pop
cmp
mov
and
mov
in
imul
scas
fidiv
adc
iret
imul
shl
jle
sbb
mov
cmp
add
cld
test
jmp
cli
pop
inc
test
pop
push
ja
mov
or
xchg
jmp
mov
out
and
mov
fld
sub
mov
dec
xchg
xchg
push
fsub
cmp
(bad)
bound
push
jl
push
lock
je
loopne
jg
and
les
rcr
or
iret
imul
mov
movs
int3
lahf
lods
push
dec
dec
adc
mov
mov
adc
stc
retf
ds
ret
(bad)
scas
(bad)
adc
and
xchg
ficom
jmp
loop
mov
jmp
addr16
or
xlat
nop
outs
add
pop
ror
adc
dec
cli
push
nop
adc
pop
pop
jae
ret
scas
ret
adc
and
cld
es
push
xchg
lds
pop
in
ds
lahf
data16
mov
into
jl
scas
adc
shr
sub
sub
push
xlat
add
sbb
mov
mov
fcmovbe
pop
push
scas
mov
pop
cmc
push
xchg
int
test
pushf
pop
mov
rol
dec
popf
lods
jmp
outs
daa
iret
xchg
scas
ins
(bad)
mov
pop
adc
fist
ja
ss
push
pop
lock
dec
mov
ret
push
fnstsw
sbb
xchg
and
and
jbe
aaa
add
xchg
adc
or
push
sbb
inc
cli
cmc
(bad)
sub
sub
sbb
sub
out
mov
imul
or
iret
inc
rol
jbe
inc
movs
jecxz
add
sbb
hlt
push
mov
popa
pop
imul
int
out
pop
sbb
pop
repnz
and
xchg
add
xor
mov
xor
mov
push
div
iret
ja
aaa
jno
je
jg
fistp
rcr
stc
retf
je
pop
(bad)
into
jno
inc
je
inc
(bad)
xchg
jae
or
adc
fdivr
es
jne
out
adc
retf
movs
imul
add
mov
retf
popa
cmp
jge
loopne
inc
push
test
stos
xchg
cwde
stos
es
sub
push
pushf
daa
xor
mov
mov
and
into
fldenv
ret
mov
out
mov
cmp
ins
test
push
inc
mov
arpl
pop
mov
in
mov
imul
aaa
(bad)
(bad)
fs
sub
fnstenv
mov
pop
fwait
aam
shl
sbb
lock
sbb
pop
inc
inc
push
mov
mov
and
mov
pop
nop
into
push
push
fndisi(8087
sub
mov
(bad)
jecxz
fnstcw
xchg
and
shl
aam
test
jmp
adc
fs
shl
mov
inc
test
sub
scas
pop
in
push
dec
lods
mov
test
cmps
mov
daa
and
js
fcmovbe
xor
sar
fiadd
stos
aas
shr
mov
and
dec
and
fimul
fstp
xchg
mov
fldenv
cwde
test
pop
das
mov
movs
mov
dec
mov
outs
xchg
cli
xchg
and
retf
push
aas
and
pop
inc
fbld
xchg
mov
shl
inc
loop
punpckhwd
fisub
xor
adc
mov
cdq
cmp
pop
ds
dec
in
leave
test
pop
xchg
rcl
sahf
sub
arpl
cmp
xor
ja
xchg
add
in
inc
and
dec
sbb
jecxz
push
inc
ins
xchg
ret
lods
mov
fsub
add
inc
inc
xchg
(bad)
dec
les
in
jae
hlt
je
mov
loop
mov
cwde
or
cmp
mov
daa
dec
jmp
mov
cmps
mov
pop
push
mov
lods
dec
fcmovnbe
popf
inc
or
aam
mov
mov
rol
cmps
add
sub
xchg
call
xor
jp
jmp
cmps
outs
ss
test
sbb
sub
loopne
fsub
popa
adc
nop
or
dec
jle
int3
and
fwait
xchg
fstp
cmp
aas
retf
dec
add
nop
sbb
adc
push
setle
into
sub
ficomp
nop
mov
out
dec
or
aas
mov
into
in
xchg
sahf
mov
addr16
push
ficom
inc
mov
jp
(bad)
clc
(bad)
fistp
repnz
imul
xchg
cs
xchg
xchg
xchg
cmp
add
pop
push
jle
mov
pusha
xor
push
dec
pop
ja
sbb
mov
dec
ss
bound
gs
stos
addr16
mov
imul
dec
out
je
xchg
(bad)
test
xacquire
xchg
add
xchg
add
pop
mov
mov
xor
(bad)
dec
mov
fwait
mov
pop
shl
test
mov
mov
inc
mov
cmp
adc
out
add
pop
push
xor
in
scas
add
arpl
cwde
adc
add
adc
mov
add
xor
add
stos
(bad)
dec
(bad)
jne
xor
rol
and
add
aas
add
out
lods
fistp
mov
mov
jno
jg
std
loopne
ret
idiv
mov
sub
xor
adc
adc
(bad)
or
pop
xchg
sahf
and
cmp
das
and
aas
jl
cmp
add
scas
fcom
(bad)
jae
retf
jo
fcom
cmp
movs
cmp
arpl
dec
hlt
and
nop
lds
mov
cld
mov
and
retf
popf
push
les
popf
test
fbstp
hlt
pcmpeqb
push
into
ins
dec
repnz
shl
mov
and
and
mov
das
fnstcw
adc
jl
out
xor
daa
mov
psubsw
scas
popa
or
mov
call
out
jmp
arpl
mov
das
mov
cmp
jnp
stc
xchg
in
mov
(bad)
shr
mov
mov
xlat
push
lock
or
sbb
in
adc
cld
lods
icebp
dec
ret
dec
or
js
fldenv
mov
and
enter
cmp
push
mov
jns
jmp
mov
div
sub
inc
inc
test
push
aaa
mov
xor
outs
jmp
aam
jg
(bad)
scas
mov
cmc
loop
loope
sbb
add
mov
mov
scas
loope
jb
cmp
loope
add
ret
mov
rcr
loopne
mov
mov
in
bound
ss
push
test
jecxz
pusha
shl
dec
dec
dec
lea
mov
pop
adc
jb
and
mov
pop
xchg
push
test
pop
dec
movs
jg
xchg
push
imul
je
cmp
retf
lock
pop
xor
shr
cld
and
sbb
ret
aam
and
and
mov
inc
and
retf
repnz
loopne
push
lds
scas
repz
and
(bad)
popf
jo
jecxz
bound
dec
rcl
inc
jae
cmps
out
cmps
test
frstor
mov
(bad)
xor
lea
imul
int3
rcr
sub
popf
or
lock
jecxz
movs
mov
das
sbb
sub
jno
aaa
or
out
dec
sub
xchg
push
pop
xchg
ds
inc
mov
out
adc
inc
mov
or
mov
xor
sbb
mov
shl
cs
fs
pop
mov
lea
add
dec
push
jmp
pop
mov
push
or
adc
dec
aam
jbe
xchg
push
ja
mov
popf
sub
inc
xchg
and
lock
xlat
les
xchg
iret
sbb
lods
push
imul
or
imul
cmp
mov
push
push
jle
pop
or
jbe
jmp
xchg
into
xor
dec
fwait
jge
rol
repnz
imul
jle
int3
stos
cmps
pop
js
sub
and
lds
mov
fucomp
sub
loop
ret
fwait
sar
xchg
adc
jecxz
(bad)
adc
cmp
shl
and
fisttp
sub
in
inc
cwde
jle
out
loope
popf
lock
jnp
iret
push
jae
ror
sub
hlt
(bad)
stc
adc
sub
sbb
out
xor
loopne
push
out
cmp
sar
inc
mov
xor
push
popf
lds
clc
jmp
inc
mov
adc
mov
add
or
sahf
nop
call
fsubp
pop
add
mov
xor
mov
pop
ret
lea
(bad)
cmp
fcom
not
jno
idiv
jne
nop
ins
jne
(bad)
xor
mov
addr16
or
pop
and
or
lods
mov
outs
je
outs
out
imul
mov
sub
data16
test
retf
jno
adc
in
pop
ss
inc
push
sti
pop
xchg
aas
mov
add
adc
xchg
loopne
and
in
(bad)
(bad)
loop
mov
repnz
movs
mov
sbb
outs
and
fist
aaa
(bad)
aad
dec
adc
std
xor
dec
jmp
call
add
sbb
or
jge
mov
xchg
sub
dec
xlat
inc
imul
dec
add
inc
push
push
jb
and
xor
cmp
imul
pop
mov
nop
xlat
data16
aaa
add
xor
adc
jp
sub
sub
mov
cmp
add
arpl
add
pop
out
and
(bad)
and
xor
jmp
ret
daa
dec
mov
and
call
xor
mov
or
outs
jbe
mov
pop
jmp
pop
scas
sub
dec
movs
leave
(bad)
xchg
(bad)
cmp
cs
out
push
imul
fsubr
gs
jbe
lds
dec
in
fsub
xor
int3
pop
xchg
push
repnz
out
int3
and
jmp
mov
mov
jae
push
imul
lods
punpcklbw
adc
push
sti
out
mov
ins
xadd
sub
add
mov
enter
jg
cs
sahf
cs
push
jle
daa
mov
push
xchg
adc
xchg
push
mov
test
xchg
sbb
mov
sbb
xlat
inc
xchg
repnz
add
mov
mov
add
pushf
frstor
mov
pop
add
mov
cld
mov
push
pop
fist
push
mov
cmp
xchg
call
fidiv
adc
(bad)
mov
or
icebp
xchg
aas
ins
pop
add
or
shl
adc
aad
jo
fcom
test
inc
(bad)
jmp
lods
enter
sbb
movs
inc
pop
push
not
jno
sub
(bad)
inc
shr
push
xlat
pop
dec
out
in
dec
inc
cmp
addr16
repnz
mov
popa
xor
fiadd
or
jl
add
mov
inc
leave
sub
popa
mov
inc
js
cli
add
jno
je
test
(bad)
imul
cld
imul
pop
or
repz
pushf
xor
cmc
arpl
call
cmp
shl
aaa
test
pop
aas
ins
aas
dec
jo
mov
ficom
in
sbb
lods
pop
out
fist
clc
push
(bad)
push
xchg
xor
scas
jg
mov
movs
jns
xor
jge
imul
sub
mov
outs
out
cdq
sub
and
sub
jmp
xor
mov
ins
inc
mov
push
(bad)
in
pusha
pop
sub
cmp
jge
je
ss
call
sar
cwde
jnp
jb
pop
test
xchg
frstor
les
xor
stos
lea
push
sbb
loope
fsubrp
pop
dec
mov
aaa
push
pop
adc
inc
adc
sbb
movs
jo
ror
mov
test
jb
mov
fimul
rcr
xor
cmp
adc
mov
sti
sahf
inc
repz
xor
push
sbb
dec
repz
lods
jmp
cmp
sbb
mov
das
cmp
jl
mov
aas
push
push
dec
push
cld
adc
push
or
cmp
imul
xor
mov
dec
inc
and
iret
dec
xor
test
push
call
xchg
and
test
sub
cs
aad
lds
xchg
jne
ficom
(bad)
icebp
in
ret
shl
or
rcl
jnp
push
stos
(bad)
stos
retf
ret
ss
out
mov
mov
mov
mov
and
std
loopne
adc
jns
sub
push
daa
nop
and
jbe
imul
dec
and
xor
dec
xchg
pushf
dec
(bad)
adc
jae
pop
loop
shl
loope
sub
add
add
jge
push
mov
std
in
out
xchg
retf
cmps
inc
aas
cmps
mov
sbb
es
inc
frstor
xor
imul
ds
iret
int
pusha
mov
outs
or
xor
mov
cmps
fstp
jns
xchg
int
dec
dec
or
shl
std
out
jl
cmp
add
adc
shl
fcomp
adc
int
xor
icebp
clc
nop
ss
pop
sub
ss
xchg
int
xchg
daa
clc
push
xor
test
fdiv
movs
dec
cmps
mov
(bad)
cmp
nop
jne
adc
nop
adc
xchg
mov
(bad)
in
mov
pop
vorps
cwde
xchg
cmp
(bad)
xchg
push
cmp
les
sbb
push
repz
cmp
dec
xchg
(bad)
sbb
aas
aaa
clc
xor
out
xchg
or
mov
fnstenv
push
mov
mov
stos
add
jb
loop
push
adc
adc
dec
push
jecxz
popf
push
fwait
sub
stos
pop
push
pop
std
push
pop
ret
add
cld
cmp
sbb
lods
ret
frstor
ds
cmps
icebp
mov
push
ror
rcl
and
rcr
addr16
push
cmps
xor
mov
mov
pop
sbb
mov
dec
nop
loopne
jo
inc
xor
cmp
inc
xor
add
adc
loop
inc
and
xchg
scas
pop
shl
xor
lods
pop
int3
jnp
push
call
imul
js
loopne
mov
iret
sbb
inc
js
fxch
stc
hlt
pushf
popf
aaa
sbb
inc
and
jle
pop
dec
sar
inc
pop
mov
jge
dec
das
pushf
stos
pop
in
aaa
fwait
push
xor
clc
je
cs
nop
jp
xor
arpl
in
cld
dec
sub
xor
inc
ja
mov
pop
sbb
out
xchg
retf
popf
out
fstp
jne
jb
add
pop
jg
pop
icebp
js
repnz
jae
or
pop
push
test
push
not
call
stc
push
jge
cmp
in
repnz
dec
or
pop
push
xor
(bad)
jae
dec
out
sub
mov
rcl
repz
jae
ror
or
pusha
jmp
aad
cmp
inc
(bad)
outs
pop
xchg
mov
and
imul
and
test
mov
popf
fidivr
loopne
dec
jnp
in
(bad)
mov
lods
(bad)
fldpi
call
and
push
dec
xchg
add
pop
(bad)
cmp
leave
out
mov
jbe
aas
sub
mov
hlt
jge
xor
inc
jb
and
mov
mov
shl
das
dec
sub
mov
sbb
popa
and
and
and
daa
(bad)
in
add
or
retf
fidiv
xchg
sbb
add
mov
sbb
(bad)
pop
sub
inc
(bad)
mov
xchg
push
shr
cmp
in
out
add
inc
cmp
sub
data16
inc
and
adc
xchg
test
aas
pop
movs
ins
pop
or
xchg
sbb
call
leave
adc
pop
mov
sbb
push
jmp
bswap
pop
sbb
shl
aas
pop
cmp
sar
and
push
inc
loop
imul
addr16
ds
cmp
loopne
jle
cwde
mov
xor
pop
icebp
jg
std
sbb
les
push
lods
fwait
adc
popa
inc
mov
jns
js
lahf
cmps
mov
sub
mov
jecxz
mov
je
xor
fsub
sub
cmp
cmp
push
push
std
test
and
xchg
repz
(bad)
in
int3
jbe
cmps
sahf
and
inc
fstp
in
out
jp
push
xchg
pop
mov
add
xchg
js
clc
mov
mov
push
sub
cmp
mov
movs
push
push
bound
stos
adc
aam
cmc
dec
mov
fldenv
pop
lock
mov
mov
bound
jmp
xchg
outs
pop
inc
push
mov
inc
mov
sahf
in
loop
ins
inc
jne
inc
inc
ins
cs
stos
or
mov
loop
mov
add
pop
shr
iret
jecxz
call
bound
fstp
mov
push
mov
add
push
out
mov
retf
loope
inc
in
scas
and
dec
push
mov
movs
fs
ins
(bad)
mov
(bad)
jle
dec
or
pop
inc
mov
push
push
adc
xor
div
dec
jo
leave
and
pop
cmps
je
mov
cmps
fisttp
add
mov
pop
xchg
cmps
mov
ss
cmp
xor
sbb
cmc
sar
outs
int3
imul
add
pusha
inc
shr
(bad)
fnstcw
push
sbb
cmp
adc
cmp
or
leave
cmp
mov
in
pop
jns
inc
lock
adc
xchg
out
lods
repnz
mov
mov
xor
xor
mov
sbb
pop
ror
dec
test
add
retf
mov
scas
mov
cld
and
mov
fwait
ds
and
xchg
push
and
popa
push
std
adc
lock
nop
punpckhbw
fstp
int3
pop
lods
(bad)
fist
sbb
mov
iret
imul
or
retf
xor
and
(bad)
lods
or
jmp
popf
xchg
test
push
loopne
mov
adc
inc
ins
jo
cwde
xor
ja
jnp
xchg
ja
xor
push
pop
ins
or
jecxz
inc
add
add
popa
jb
cli
add
xchg
add
push
jo
dec
in
aas
in
push
mov
cmp
iret
inc
add
arpl
nop
push
bound
stos
jecxz
push
test
mov
lods
or
cli
ror
sub
mov
daa
mov
xchg
mov
pop
dec
out
dec
cmps
leave
pushf
cmp
or
movs
out
aaa
outs
mov
int
test
out
je
(bad)
mov
and
cdq
inc
sti
mov
inc
push
cmps
xor
xchg
inc
dec
jno
xchg
std
or
outs
loop
scas
aas
xlat
pop
ret
sbb
dec
jmp
stc
xchg
mov
sbb
clc
cmp
(bad)
out
in
scas
jo
rol
out
dec
scas
and
add
hlt
ret
and
(bad)
or
imul
sahf
pushf
push
add
lods
adc
out
sar
jmp
dec
jp
pusha
shl
fistp
xor
ins
fwait
push
cmps
test
xchg
adc
cmp
loop
mov
xchg
out
bound
push
imul
fild
dec
inc
fwait
shr
scas
add
call
mov
fdiv
pop
popa
mov
adc
dec
jmp
stos
call
in
adc
call
xchg
xor
pop
loope
sti
call
hlt
push
and
icebp
pop
movs
clc
mov
or
aaa
loopne
or
cmc
or
pop
div
jl
or
push
rol
ds
add
sar
and
mov
jmp
lea
pop
popf
mov
ficom
iret
nop
sub
mov
repz
sar
pshufw
div
pop
nop
inc
mov
inc
cmps
out
and
das
push
xchg
fdivr
sbb
stos
mov
std
sub
mov
push
repnz
jecxz
pop
xor
mov
in
jns
mov
inc
test
movs
xchg
cmp
es
mov
out
popf
pop
xchg
jne
mov
stc
or
repnz
add
out
jmp
sbb
jp
sub
xor
sub
scas
nop
fisttp
mov
stc
xchg
mov
jno
mov
dec
dec
daa
or
inc
stc
mov
sti
test
mov
test
jo
push
mov
out
test
dec
or
ins
push
sub
enter
lods
and
daa
into
in
out
hlt
stc
outs
shr
and
dec
cmp
push
xchg
adc
pop
cmps
adc
stos
adc
mov
mov
ret
shl
in
clc
or
add
retf
cmp
push
push
(bad)
mov
jecxz
movs
stc
and
push
add
add
xor
push
sub
pop
mov
inc
test
pop
stc
out
push
das
inc
push
vphadduwq
xchg
xor
mov
ret
adc
pop
dec
retf
pop
and
inc
ss
jns
mov
add
test
dec
addr16
xor
push
jmp
arpl
outs
or
add
adc
xchg
mov
pushf
test
fnstsw
push
sub
jle
les
icebp
pop
mov
sbb
xlat
inc
sar
mov
mov
add
xchg
out
std
xchg
cmp
nop
neg
jl
loope
fs
push
cld
int
sbb
push
fsub
fucomp
adc
jmp
cwde
in
jp
push
not
loop
jbe
inc
xor
nop
adc
push
push
push
ins
cld
cmp
stos
or
shl
xor
mov
out
push
scas
cmp
inc
addr16
jmp
dec
mov
in
adc
sbb
les
iret
inc
pop
cs
cmp
scas
mov
push
adc
or
sti
dec
aam
ins
jmp
mov
inc
clc
loop
mov
inc
lods
inc
pop
dec
sbb
aam
xchg
dec
js
adc
sub
cli
mov
xchg
push
pop
mov
inc
or
mov
fild
fdivrp
iret
push
stc
mov
or
inc
add
int3
or
in
dec
cwde
retf
cmp
add
inc
nop
clc
sub
sahf
std
(bad)
in
pusha
xor
in
inc
xchg
repnz
xchg
movs
mov
in
and
mov
retf
hlt
loope
and
fnstenv
in
cwde
leave
dec
lods
mov
bound
inc
xlat
daa
dec
mov
sub
lds
xor
push
adc
sahf
jmp
addps
add
mov
sub
inc
fsubrp
popa
jbe
jne
clc
cdq
mov
aad
fwait
sub
aad
mov
cdq
sub
dec
mov
shl
jle
jmp
imul
mov
rcl
in
enter
push
cmps
repz
repz
add
mov
lahf
dec
mov
sub
add
cs
xchg
adc
ss
push
fwait
loop
mov
movs
aam
sahf
pop
mov
in
iret
mov
xchg
lods
pushf
test
and
adc
test
adc
dec
mov
mov
ja
xchg
(bad)
push
or
addr16
stc
cld
inc
leave
push
dec
jnp
sbb
xchg
cwde
pushf
pop
pop
leave
lahf
cmps
scas
mov
aam
jmp
pushf
push
sub
(bad)
call
ds
movs
lea
push
mov
mov
loopne
push
repnz
inc
addr16
mov
arpl
ror
lahf
or
cmp
and
dec
xchg
and
sbb
mov
stc
pop
push
push
inc
adc
sub
sbb
popf
jno
leave
lock
pop
scas
sub
dec
jge
out
(bad)
cmp
and
push
imul
movs
jb
loope
test
jne
cmp
dec
jecxz
xor
test
std
pop
loopne
mov
add
movs
lock
addr16
jmp
dec
arpl
xchg
mov
or
xchg
jge
xor
arpl
jecxz
mov
imul
cmp
jb
sub
in
test
in
ficom
ins
retf
pop
scas
in
into
mov
div
pop
outs
mov
or
push
loopne
lods
mov
imul
test
test
push
retf
inc
cmp
jmp
ins
(bad)
push
les
and
push
add
ins
pop
fisttp
jb
pushf
inc
nop
fwait
movs
ja
mov
scas
retf
lods
sub
dec
cli
jns
inc
sbb
xlat
sbb
mov
jecxz
or
mov
mov
sub
xor
call
les
push
ret
iret
cmp
pushfw
cmp
loope
xor
xchg
pushf
push
call
ret
mov
xchg
addr16
clc
adc
dec
cmp
rcl
xchg
pop
or
xchg
fs
shl
fldcw
lahf
das
cmp
jle
test
and
mov
sti
push
mov
cmp
jmp
(bad)
sbb
pop
retf
dec
dec
jo
adc
inc
add
push
push
enter
fwait
inc
add
(bad)
cmc
mov
or
jbe
lahf
push
jp
ja
stc
(bad)
dec
fidivr
pusha
sub
das
cmp
outs
pop
cld
retf
stos
jl
mov
int3
in
inc
adc
repz
cli
ins
xchg
cmp
mov
sub
pop
sub
scas
inc
sbb
pop
jl
(bad)
(bad)
aas
sub
mov
pop
and
cmp
push
into
outs
in
jo
mov
cwde
adc
test
cwde
call
inc
retf
sbb
call
arpl
ins
int3
mov
jecxz
pusha
clc
jg
jae
rol
push
jl
and
sub
jmp
add
pop
pop
inc
xchg
nop/reserved
pushf
xchg
mov
mov
scas
cmp
xchg
out
cmc
sbb
mov
add
fisttp
lds
das
or
rcr
or
arpl
jne
mov
mov
pop
sub
pop
cs
movs
xchg
aam
mov
clc
pop
xor
jp
das
and
rcr
push
lods
inc
lock
sbb
lock
or
sar
xchg
sub
mov
nop
mov
jmp
jl
lods
sub
shr
mov
leave
sahf
lods
push
mov
pushf
popf
(bad)
fnstenv
and
cli
mov
xchg
ins
jmp
out
out
aas
push
push
push
inc
sbb
mov
ret
aam
es
mov
or
push
inc
test
lock
nop
cld
daa
pop
xchg
dec
imul
add
ds
xor
outs
fistp
call
cdq
push
das
xor
jae
push
xchg
mov
dec
pop
sub
xor
push
inc
mov
mov
clc
imul
stos
cmp
leave
stos
push
(bad)
fild
sub
out
pop
add
jns
pop
or
std
sbb
or
push
jg
mov
out
jb
jl
xchg
push
jecxz
ret
(bad)
inc
out
jmp
sub
push
jg
(bad)
call
mov
jae
jge
mov
mov
mov
pop
outs
sti
(bad)
sub
xchg
mov
push
sti
dec
movhps
push
fistp
ins
(bad)
push
out
xabort
in
xor
ja
iret
push
sub
inc
cmps
cmp
stos
and
sub
not
(bad)
stc
push
aad
test
fdivr
mov
add
nop
lods
and
cwde
push
and
hlt
aas
sbb
inc
popf
fldenv
dec
jnp
inc
mov
mov
(bad)
jmp
dec
push
in
xor
bnd
ror
imul
mov
cmp
jne
addr16
call
iret
ret
cmp
push
sbb
das
bound
mov
shl
popf
(bad)
out
mul
ret
out
retf
out
mov
(bad)
push
lahf
and
add
es
xor
xchg
int
in
mov
in
mov
or
frstor
retf
jg
jge
dec
pop
push
dec
lods
fstp
in
push
aam
imul
jge
fadd
stc
pop
xor
xchg
aad
mov
and
fbld
push
hlt
ins
fcomp
fisub
popa
mov
test
dec
mov
xlat
imul
mov
ins
mov
mov
stos
adc
sbb
fstp
(bad)
icebp
pusha
or
inc
nop
xchg
sysenter
scas
sub
push
out
stc
cdq
pop
pop
jecxz
adc
jnp
inc
push
fwait
cs
mov
pop
cmp
jns
or
cld
cmp
mov
or
add
mov
das
dec
cmp
imul
dec
cmp
iret
sub
jbe
mov
xor
cmps
jne
jnp
push
inc
test
inc
add
addr16
cmp
nop
dec
dec
into
xor
loopne
push
inc
das
jl
fcmovbe
rcr
stos
(bad)
int
and
popf
and
mov
pop
int
test
xor
xor
jg
push
pusha
pop
mov
pusha
imul
sahf
jg
pusha
mov
(bad)
(bad)
jae
sti
aas
icebp
mov
push
push
pop
cmps
xchg
mov
cmp
xor
mov
es
in
test
adc
das
or
pop
xchg
jecxz
mov
or
add
popf
test
dec
aam
aaa
rol
lea
jne
mov
fisttp
cwde
test
repnz
ins
movs
or
cld
(bad)
dec
cwde
xchg
inc
enter
jmp
stos
enter
lahf
in
stos
pop
mov
jno
scas
jge
jmp
add
retf
jg
jl
cmps
jg
mov
cdq
jbe
push
enter
xchg
aad
mov
pop
fidivr
cmp
rcl
lds
and
push
sub
push
sbb
xor
mov
dec
cwde
jno
ror
sbb
in
outs
xchg
sbb
jo
adc
test
in
shl
fild
cld
mov
dec
push
outs
cwde
(bad)
jecxz
jecxz
(bad)
jg
cmp
ror
add
cdq
ret
mul
rcl
xchg
add
retf
push
lods
iret
xchg
push
mov
sbb
pop
inc
loop
mov
mov
scas
hlt
dec
add
les
dec
dec
adc
not
(bad)
push
ds
xchg
mov
mov
xchg
scas
inc
pop
inc
lahf
dec
and
sar
popa
xor
loope
(bad)
(bad)
es
loope
mov
popf
xlat
xor
std
jge
aam
(bad)
jle
inc
jnp
call
out
add
xchg
sbb
cmps
(bad)
(bad)
cmps
fst
(bad)
jecxz
call
fcmovne
outs
xchg
push
jge
mov
es
leave
lock
das
xor
mov
mov
int3
popa
lea
pop
sbb
rol
imul
jg
outs
inc
(bad)
jmp
fisttp
rcl
add
jne
pop
movs
into
and
aas
jnp
cmp
div
fstp
movs
mov
jecxz
fs
dec
aad
ret
sahf
cmp
dec
ret
push
xor
dec
push
cmp
retf
stos
jle
(bad)
int
dec
fwait
jg
xchg
ja
mov
pushf
stos
std
js
in
add
mov
mov
clc
jmp
mov
loopne
cs
mov
popf
ds
ror
jle
addr16
mov
clc
adc
out
fucomp
xchg
(bad)
fist
mov
add
in
mov
jb
adc
xabort
mov
mov
sbb
loope
out
iret
pop
out
xlat
xor
xor
sub
inc
sbb
push
popf
pop
sbb
push
aad
scas
icebp
mov
icebp
or
in
(bad)
loope
cmps
xor
xchg
xchg
or
add
sbb
iret
jmp
add
push
jo
popa
and
xor
(bad)
call
mov
adc
mov
push
jb
mov
mov
mov
inc
xor
xchg
push
scas
leave
sti
or
push
pop
jge
xor
xchg
mov
js
inc
xchg
aas
je
xor
cmp
mov
test
test
xor
data16
mov
dec
aaa
or
aam
xchg
jecxz
jp
test
rcl
out
jae
sbb
nop
add
pop
sbb
fbld
cmp
imul
or
or
int3
retf
pop
ja
ins
mov
jmp
mov
mov
jg
sahf
call
jnp
and
sub
fnsave
(bad)
mov
out
add
mov
inc
popa
mov
push
xchg
aas
dec
aad
jg
or
or
mov
mov
mov
mov
mov
pop
pop
jl
sbb
sbb
xor
lock
dec
jmp
push
gs
test
dec
fnstenv
stc
adc
inc
dec
push
xor
push
xchg
and
scas
mov
mov
cmp
adc
xchg
dec
clc
popf
clc
or
(bad)
lods
xor
jne
cld
dec
rep
inc
test
sub
das
enter
mov
int
cmp
inc
das
mov
repz
sub
or
sbb
mov
add
and
xchg
xchg
leave
and
ins
adc
inc
outs
push
es
retf
pop
sub
push
push
adc
aam
add
daa
(bad)
cli
mov
sti
mov
mov
ins
lods
mov
outs
std
sbb
imul
addr16
ins
inc
ins
out
rcl
xchg
pop
fchs
rol
inc
sti
pop
bnd
push
(bad)
out
xor
(bad)
stc
adc
sub
sbb
and
push
or
push
(bad)
out
mov
and
inc
aaa
xor
ror
test
imul
sbb
nop
ins
movs
hlt
es
xor
stc
or
cmp
push
mov
mov
ja
jb
ss
aas
lahf
pop
jg
int
movs
and
in
jno
inc
add
fst
in
daa
inc
dec
mov
out
stos
jecxz
hlt
dec
push
sbb
das
imul
retf
sub
xchg
popf
cmp
in
mov
mov
xor
lods
pop
cmp
add
jecxz
jo
ins
dec
push
add
dec
clc
cld
mov
lock
mov
in
in
push
xchg
mov
or
sbb
(bad)
loop
rcr
outs
mul
pop
cmp
lods
(bad)
jg
mov
mov
fld
cmps
lods
jmp
loop
clc
jnp
sbb
int
sub
adc
nop
and
mov
cmp
sub
jecxz
push
(bad)
dec
jbe
dec
xchg
jge
cmps
js
jo
int
in
xor
xor
mov
cld
std
fcom
cld
shl
dec
cmp
jnp
in
or
push
sbb
int3
retf
dec
stos
pop
cmp
enter
nop
or
dec
lock
sub
pop
ss
mov
or
cmp
cmp
and
sbb
xor
rcl
mov
dec
(bad)
pusha
xor
enter
mov
dec
and
arpl
jo
xchg
enter
(bad)
jmp
dec
push
(bad)
in
xchg
test
cdq
jbe
iret
lea
dec
mov
add
mov
cwde
sar
jg
cwde
sub
shl
push
iret
mov
and
icebp
sub
pusha
aad
mov
mov
retf
or
sbb
and
stos
push
call
pop
ret
test
cmp
lock
mov
jl
fwait
leave
mov
mov
das
mov
stc
stos
xchg
dec
mov
dec
or
pusha
xor
ret
scas
stos
les
scas
xchg
dec
in
and
(bad)
aaa
cld
add
mov
dec
shl
shr
stos
cwde
data16
div
cli
adc
mov
hlt
out
iret
leave
fwait
cld
pop
sbb
aaa
cwde
or
cwde
cs
fstp
push
dec
jne
test
jns
jne
out
dec
rcr
repz
fsubr
pop
(bad)
jbe
test
adc
inc
jns
scas
dec
dec
stos
jmp
dec
jp
inc
jecxz
clc
enter
shl
xchg
rol
dec
dec
mov
push
xor
mov
add
push
in
mov
lahf
aaa
dec
movaps
mov
mov
ret
push
push
adc
mov
pop
sub
sub
and
in
aaa
sub
pop
push
mov
sub
dec
inc
clc
mov
pop
cmp
and
stc
mov
or
mov
jns
jl
or
sbb
into
std
jmp
popf
loope
ins
lahf
js
(bad)
fcmove
ret
lock
sbb
inc
(bad)
push
fmul
xchg
jmp
mov
int
push
aas
and
fsubr
sti
aam
fsub
dec
push
ja
das
ror
out
mov
lea
pop
push
shr
xor
sbb
push
add
bound
or
cwde
mov
cmp
test
cmp
rcl
push
mov
in
push
ins
jae
cwde
icebp
cs
pop
aaa
pop
cmp
pop
shl
in
fiadd
shl
aam
sbb
jae
popf
sbb
push
mov
mov
aaa
adc
popa
mov
and
retf
cmps
or
xchg
mov
pop
in
into
xchg
push
test
shl
inc
mov
dec
pop
leave
push
mov
and
push
cwde
and
or
mov
fwait
adc
cmp
jge
sbb
xchg
push
cmp
mov
mov
or
dec
cmps
les
add
lods
xor
dec
inc
stos
mov
shr
cs
out
pop
(bad)
mov
pop
fidivr
out
push
add
cmp
es
int3
push
jno
lods
shr
sahf
mov
cli
arpl
call
lock
xor
jg
stos
scas
lods
je
or
iret
pop
cs
loop
xor
cdq
pop
or
loop
ins
jecxz
sub
mov
or
out
repnz
mov
inc
ins
cmp
out
mov
mov
push
inc
or
add
xchg
fucom
cmp
push
neg
xor
mov
into
js
popa
mov
ret
add
neg
pushf
out
mov
mov
aas
in
sbb
inc
das
adc
mov
pop
push
push
sbb
jne
pop
sbb
inc
sub
mov
movs
dec
pop
out
jo
(bad)
pop
rcl
pop
rcl
and
out
stc
dec
scas
dec
retf
push
rcl
ins
adc
je
bound
iret
dec
dec
ins
inc
xor
std
arpl
jecxz
stos
popf
jl
xor
push
cld
clc
out
stc
call
std
repnz
in
jno
sub
jae
lds
add
sbb
lods
dec
repz
and
xchg
xchg
jb
fs
movs
and
fidiv
aas
adc
mov
loope
dec
push
mov
scas
jno
dec
mov
or
mov
jbe
cmp
shl
push
jle
sub
lods
aam
push
loope
mov
aad
movs
mov
mov
lea
cmps
(bad)
jl
jmp
xchg
adc
jb
jne
xchg
in
popf
inc
stc
add
mov
xchg
stos
or
dec
pop
and
dec
dec
sti
mov
mov
sbb
mov
cmc
sbb
jmp
arpl
psubb
mov
aad
mov
fcom
or
xchg
(bad)
pop
mov
jnp
lea
scas
push
mov
push
mov
pushf
sti
cdq
dec
xchg
out
mov
sub
pop
xlat
adc
enter
rcl
scas
movs
test
xor
cld
mov
sar
cmps
int3
adc
cmps
jecxz
cdq
lahf
imul
or
sub
bound
mov
cmp
sbb
ins
out
(bad)
cmp
enter
aaa
popf
pop
push
inc
sub
add
mov
cmp
pop
pusha
push
icebp
fdiv
add
mov
jae
xchg
jnp
shl
jns
cmc
imul
out
sbb
in
or
jmp
mov
leave
arpl
pop
psrlq
mov
sbb
aad
in
mov
popf
nop
adc
int
mov
push
nop
jne
in
cli
clc
xchg
out
mov
jns
outs
leave
jge
jmp
out
mov
cmp
sbb
inc
sti
arpl
dec
sub
cwde
in
in
jnp
push
mov
add
mov
loopne
(bad)
lods
xchg
popa
sti
inc
aaa
xor
add
or
mov
outs
sbb
fs
daa
inc
and
mov
jmp
div
fucomi
mov
jecxz
(bad)
fild
mov
pushf
cmps
les
mov
repz
fwait
bound
cmp
sbb
mov
cwde
cdq
sub
xor
les
dec
or
test
add
cs
ror
pop
xchg
bnd
xchg
jp
mov
cli
xor
or
mov
inc
movs
pushf
xor
jnp
lods
jbe
xor
mov
btr
std
cdq
mov
das
mov
outs
jmp
xor
pop
adc
repnz
mov
mov
aas
sbb
out
ja
(bad)
jbe
push
ja
rol
push
mov
es
sub
sti
fild
retf
mov
fs
lar
rcl
adc
scas
mov
xchg
sbb
aas
cmp
pop
test
mov
ror
mov
dec
inc
mov
pop
cmp
push
fidiv
or
pop
(bad)
dec
add
cmp
mov
fldlg2
cmp
retf
dec
mov
movs
addr16
in
jae
cmp
or
ins
mov
xor
test
popf
ds
and
add
mov
mov
sub
cs
(bad)
jbe
and
push
mov
rcl
mov
ret
shl
xchg
push
rcl
aad
pop
mul
out
aam
cld
daa
rcr
ins
es
ret
push
stos
adc
sbb
(bad)
test
int3
nop
dec
out
inc
push
loopne
cmps
and
jmp
or
jo
lods
push
lds
pop
ja
lods
push
scas
pushf
outs
xor
stos
popf
in
sti
ret
push
dec
mov
mov
sbb
cmp
retf
jge
dec
adc
mov
arpl
leave
shl
cmp
out
(bad)
jl
jbe
push
out
and
xchg
push
call
sbb
std
cmp
mov
add
mov
or
cs
and
mov
adc
rcl
fiadd
lahf
mov
(bad)
repz
je
xchg
push
je
mov
mov
cmp
xor
sahf
inc
stc
jmp
push
loopne
sbb
pop
in
add
es
sub
jae
adc
mov
or
mov
rep
cmp
outs
and
push
aam
jne
(bad)
shl
dec
(bad)
mov
test
cmp
mov
dec
nop
jns
shl
sbb
xlat
and
cmps
push
aas
adc
xchg
sub
xchg
test
fldlg2
xchg
push
dec
or
jg
push
sbb
leave
jbe
pop
fs
retf
inc
push
icebp
retf
jl
je
mov
mov
lock
mov
dec
aad
inc
mov
inc
inc
jns
inc
(bad)
mov
jl
jne
sub
loope
mov
sub
outs
dec
jge
aaa
jne
arpl
mov
test
lahf
xchg
in
(bad)
retf
daa
inc
xchg
aad
pop
sub
shl
xchg
sub
or
xor
(bad)
in
mov
enter
xchg
retf
cmp
mov
jp
mov
test
imul
fdivr
xor
(bad)
xor
arpl
add
pop
mov
push
gs
mov
mov
sar
fs
mul
pushf
push
(bad)
daa
js
outs
mov
repz
out
inc
cmp
fdivr
mov
popa
ds
std
mov
(bad)
cmps
push
dec
adc
pop
(bad)
sti
rcl
gs
rcr
xchg
movs
push
cmp
ds
pop
pop
cdq
add
sti
cmp
stos
push
inc
cmp
pop
sbb
repnz
and
or
mov
sub
cmp
repnz
push
(bad)
pusha
jecxz
xor
stos
not
pop
test
cmp
mov
in
push
xor
clc
inc
jns
jp
sub
sbb
push
std
sub
je
daa
lea
mov
cwde
call
pop
neg
mov
mov
movs
mov
push
in
mov
inc
push
je
retf
scas
mov
mov
push
add
add
cmp
cmc
mov
lods
xor
inc
inc
ret
dec
int
mov
scas
stos
and
icebp
outs
xchg
leave
sbb
sti
repz
cwde
jnp
outs
std
test
or
loopne
in
repnz
in
and
cld
ins
leave
in
repz
xchg
mov
adc
or
pop
add
fsub
mov
and
push
jp
xchg
push
mov
fwait
sub
in
jo
iret
xor
mov
cmps
lea
movs
scas
adc
ror
jbe
and
xchg
push
xchg
stos
pop
adc
cld
push
adc
adc
lock
arpl
pop
inc
mov
loop
rcl
out
and
(bad)
test
mov
in
xchg
arpl
push
inc
rcr
or
dec
sbb
fbld
pop
xor
jmp
(bad)
jecxz
cmp
aad
cs
jl
pop
inc
jnp
or
icebp
cmp
adc
xor
adc
in
pop
int3
(bad)
mov
fsub
push
lods
sbb
fcmove
rep
lea
movs
pop
adc
mov
push
test
add
loope
stc
push
mov
sbb
pushw
jmp
or
ins
and
dec
adc
push
mov
fwait
nop
sub
pop
sub
fwait
les
dec
ss
pushf
push
movs
retf
cmp
movs
jmp
jl
or
cmp
lods
pop
shl
jle
outs
je
popa
mov
xor
mov
push
mov
mov
xchg
adc
xor
xor
cmps
mov
dec
sbb
mov
shr
dec
bound
pop
cwde
add
push
push
jmp
xchg
aas
nop
rol
push
cmp
jle
sbb
push
int
adc
adc
dec
sub
and
inc
pop
mov
mov
add
jae
call
fimul
push
lea
or
mov
adc
pop
pop
pusha
push
push
test
xor
mov
adc
sbb
ins
jno
inc
rol
ja
jno
sbb
inc
inc
or
mov
inc
xchg
push
jnp
daa
arpl
ficomp
outs
cmps
add
loopne
jg
repz
sbb
dec
stos
mov
mov
sub
outs
inc
(bad)
xor
inc
js
es
pop
mov
xchg
add
dec
jno
lds
ficomp
mov
xchg
js
jmp
xchg
push
push
mov
nop
lock
xchg
sub
jmp
dec
lods
out
push
add
sub
in
xchg
out
push
sbb
jne
push
not
outs
repnz
sbb
xor
mov
int
ret
test
into
int
inc
sahf
xchg
push
vpmaxsw
xchg
mov
sti
sub
or
xchg
cmp
jge
clc
(bad)
jae
ja
ror
ror
jge
mov
mov
sub
push
sar
dec
sbb
lock
and
or
xor
loopne
retf
mov
jecxz
pop
jle
aas
ins
data16
push
dec
(bad)
scas
or
pop
xor
jnp
fucomip
les
push
or
cmp
sub
adc
daa
in
out
adc
inc
adc
out
xchg
ja
(bad)
jecxz
arpl
inc
mov
pop
mov
xchg
push
scas
in
daa
clc
dec
lea
icebp
loope
stc
sahf
inc
in
out
retf
in
mov
test
mov
mov
xor
mov
mov
aas
repz
jbe
xchg
mov
sbb
jle
jmp
mov
ret
shl
fs
cs
imul
jle
push
mov
inc
popa
sub
fldenv
jge
out
iret
pop
xchg
xor
xchg
out
shr
inc
daa
xor
mov
int3
sub
nop
jnp
jns
retf
fistp
mov
pop
xor
pop
scas
and
cmp
sub
mov
data16
mov
loope
sub
adc
(bad)
stc
neg
xor
adc
test
rol
sub
jp
inc
arpl
out
and
iret
rcl
out
test
dec
push
xor
sub
sar
sbb
test
out
stos
jno
test
movs
cld
cmp
std
xchg
jne
push
lahf
test
out
and
pop
ins
xlat
dec
push
scas
pusha
int
mov
mov
jns
iret
sti
sub
aaa
xchg
mov
pop
ja
lds
jmp
jle
and
add
sbb
and
push
jge
mov
movs
xor
sub
mov
push
xchg
stos
or
daa
test
pop
(bad)
ins
dec
sbb
pop
ror
xor
out
inc
mov
mov
add
je
xlat
mov
pop
fadd
jmp
push
sti
push
and
mov
call
sti
jge
ret
cmc
adc
adc
jb
fnstsw
push
jne
mov
adc
and
(bad)
xor
mov
std
fwait
(bad)
adc
push
(bad)
pop
xor
cmp
ss
xor
xchg
loopne
jmp
sub
fdiv
cmps
imul
pop
test
and
pop
repnz
push
bound
cmp
lds
sbb
shl
ds
lds
call
pop
push
lods
loope
push
fsub
mov
dec
sbb
int
std
sbb
push
sub
lods
or
sbb
lea
and
xchg
cmp
and
xor
cmp
cli
push
push
push
mov
lock
jne
call
cmps
not
fiadd
mov
jo
dec
xor
loop
pop
mov
dec
dec
in
ror
int3
pop
pop
cmp
cli
fsub
movs
nop
je
or
mov
push
call
shl
aam
add
adc
sub
sub
aam
adc
pop
inc
mov
cs
sbb
fild
pop
jp
lds
leave
sbb
(bad)
cmc
pop
out
jo
pop
cdq
fsubr
mov
in
xor
add
ficom
test
add
addr16
xor
adc
mov
mul
or
enter
add
mov
int
cmps
test
add
pop
cmp
outs
mov
or
xor
cld
in
fadd
cmps
push
ret
pop
xchg
or
sbb
sahf
add
mov
pop
fisttp
mul
xchg
es
mov
adc
xchg
sub
daa
dec
push
lds
mov
adc
sub
xchg
retf
iret
enter
mov
mov
pop
inc
jg
dec
pop
sub
mov
call
jne
pop
push
inc
or
and
sub
fisubr
jecxz
mov
dec
dec
in
sbb
adc
iret
aam
arpl
mov
icebp
pop
lods
rcl
inc
jb
ins
cmp
(bad)
out
outs
popa
push
je
in
push
cmp
xchg
push
inc
ret
out
mov
jge
(bad)
cld
and
mov
sub
jbe
pop
fst
sub
ins
test
call
inc
ror
xor
(bad)
fild
xchg
jle
stos
jmp
push
fdiv
mov
stc
int3
(bad)
loope
pop
stos
xchg
dec
shl
mov
push
sbb
sub
mov
in
addr16
sahf
mov
cdq
mov
mov
lds
test
or
mov
mov
sbb
imul
push
pop
popf
and
aaa
ja
push
out
cmp
pop
fsub
test
cmp
or
movs
(bad)
in
pushf
xor
rol
dec
push
adc
mov
or
or
add
les
test
push
or
sub
sbb
cmp
into
inc
out
(bad)
popa
xor
movs
cmp
cmp
mul
ret
enter
int3
les
call
lds
retf
(bad)
scas
imul
jmp
sub
mov
test
sti
or
jle
scas
cmc
adc
mov
mov
sub
les
and
mov
jecxz
(bad)
clc
lock
repz
imul
cwde
dec
das
in
inc
add
ja
sub
sbb
adc
stos
pusha
fs
xchg
push
dec
pop
cli
mov
retf
out
mov
(bad)
iret
fmul
sbb
in
es
ja
inc
in
fstp
pop
mov
xchg
in
xchg
cmp
or
dec
cli
sub
popa
inc
xor
pop
pop
cmps
mov
xchg
mov
adc
mov
iret
cs
jecxz
jl
jecxz
pop
adc
mov
xor
jnp
repnz
mov
jmp
mov
ret
aad
in
xor
neg
cs
sbb
rcl
xchg
xor
jno
inc
ror
push
or
dec
ja
or
sub
dec
enter
dec
mov
adc
out
ins
jae
fnstenv
inc
pop
pop
scas
mov
ror
dec
mov
ret
mov
sub
inc
dec
aas
inc
(bad)
jae
mov
adc
adc
sub
pop
push
sbb
push
xor
cmp
jno
cdq
mov
fisttp
leave
sar
xor
outs
cdq
jg
adc
shl
ins
cmp
js
sbb
out
jmp
cli
jo
mov
cs
(bad)
arpl
pop
mov
call
(bad)
rcr
mov
fsub
pop
test
sahf
push
pop
pop
mov
push
loop
xor
push
mov
sbb
jp
sbb
imul
inc
or
push
sbb
nop
mov
mul
mov
movs
add
mov
addr16
fsub
push
jnp
retf
inc
xchg
mov
and
pop
add
mov
paddsw
aaa
test
jbe
xchg
cld
shl
push
or
js
sub
js
or
or
or
sub
hlt
adc
adc
xor
xchg
mov
aam
fmul
enter
mov
mov
idiv
cmp
fcomp
mov
repnz
pop
in
inc
test
in
hlt
sub
xor
pop
(bad)
mov
cmp
popf
xchg
mov
jb
dec
ds
scas
inc
jb
xchg
popa
xor
pushf
(bad)
jo
inc
sub
das
loope
into
mov
mov
mov
fimul
rcl
push
fisttp
sbb
mov
int
lea
outs
ja
inc
ret
push
xchg
dec
cmp
ins
enter
imul
or
sbb
loope
sub
jne
repnz
cmp
mov
mov
es
ins
xchg
jne
sub
inc
popa
mov
cmp
adc
cmp
test
pop
xor
inc
ret
xor
gs
sti
cmc
shl
fild
stos
xchg
popf
push
ret
pop
mov
enter
push
mov
pop
js
inc
xchg
ss
pop
sub
dec
cmp
repnz
ja
pop
xchg
ffree
lock
fsubr
lahf
adc
iret
jmp
xchg
push
sar
cmps
sahf
mov
xor
sahf
xor
fyl2xp1
sbb
mov
mov
into
and
or
shr
out
push
and
xchg
xchg
addr16
xor
mov
mov
aam
xchg
jmp
push
add
push
hlt
loope
scas
hlt
bound
psrad
stc
and
clc
dec
scas
(bad)
jmp
inc
pop
mov
or
pop
pusha
js
xor
gs
nop
mov
enter
ins
sub
bound
not
rcl
push
pop
cwde
jo
cmps
xor
push
and
lods
rcr
jmp
ror
jmp
out
outs
jmp
push
push
ror
jae
rcl
inc
dec
(bad)
(bad)
push
rol
sub
or
jnp
push
leave
ins
jmp
push
mov
pushf
jle
mov
push
sub
retf
fild
xchg
push
or
mov
pop
cmp
push
cmp
sub
sbb
mov
daa
aas
in
sub
jmp
jmp
sahf
mov
push
in
shl
xlat
int
fchs
test
and
push
das
mov
or
cvtps2pd
xchg
lahf
push
pop
jge
into
(bad)
repnz
xchg
xor
inc
pop
mov
mov
pop
sbb
out
aam
ffreep
push
and
fild
test
inc
int3
add
aas
pushf
pop
inc
adc
xchg
scas
loopne
das
or
int3
test
mov
sub
icebp
jne
aad
mov
ins
mov
stos
daa
cli
sti
dec
add
dec
push
ins
jnp
push
pop
test
cmp
fdiv
cmc
das
hlt
push
cmps
test
popa
mov
jmp
aaa
dec
and
out
pop
test
out
ficom
fiadd
pop
inc
mov
add
xchg
or
mov
outs
add
mov
mov
mov
push
pusha
pop
popf
pop
pusha
inc
dec
dec
ds
sub
je
shl
mov
mov
ds
xchg
and
jmp
inc
adc
xchg
mov
and
(bad)
push
or
fisub
or
add
cmp
add
cdq
xor
sub
mov
lods
movs
sti
fcom
adc
sti
shl
ss
mov
mov
jle
mov
rol
js
movs
adc
adc
enter
mov
xor
and
fst
imul
data16
mov
jbe
inc
or
jno
and
ror
jge
xchg
jmp
inc
fdiv
sbb
cwde
adc
mov
ja
in
cdq
adc
pop
clc
mov
sbb
leave
xchg
mov
inc
adc
sbb
sub
ss
fisub
mov
popf
jns
aam
out
cdq
jl
rol
inc
jne
pop
dec
js
hlt
pop
cmovg
in
cmp
push
outs
mov
(bad)
mov
push
test
es
arpl
out
sbb
outs
enter
icebp
aaa
mov
adc
pushf
add
mov
jae
pop
es
clc
outs
clc
mov
mov
push
lds
dec
mov
test
adc
call
jp
cmp
loop
jno
pop
or
adc
push
(bad)
mov
sbb
outs
ins
dec
or
(bad)
bound
inc
xchg
ss
and
jg
push
dec
movs
jle
adc
(bad)
xchg
ret
xor
push
inc
fwait
cdq
repnz
jb
dec
push
and
in
jle
xchg
add
sbb
(bad)
sbb
fidivr
shr
cmp
sub
jl
mov
mov
mov
add
and
adc
xor
aaa
cmc
test
xor
pushf
out
sub
lea
int
in
movs
and
hlt
cwde
jbe
lods
dec
hlt
add
push
scas
movs
push
mov
loope
cmp
jg
stos
pop
xor
inc
lods
addr16
mov
std
test
dec
cmp
or
inc
mov
pop
or
inc
iret
add
cmp
mov
leave
jmp
(bad)
push
or
rcr
cmps
xor
popf
sbb
mov
add
(bad)
(bad)
push
les
pop
stos
rol
xor
adc
jno
jmp
jmp
ret
push
fiadd
jle
push
mov
jo
push
ffree
sti
adc
cli
mov
fnstenv
pop
stos
inc
xor
pusha
loopne
dec
jg
xchg
mov
adc
push
mov
aam
call
das
pop
mov
pop
inc
xor
cmp
pop
push
iret
xor
movs
and
and
(bad)
cs
xor
(bad)
jae
inc
push
in
mov
daa
(bad)
xlat
mov
je
or
add
repz
rol
or
mov
shr
mov
out
rol
adc
mov
es
inc
pop
mov
pusha
xchg
test
pop
push
inc
adc
jecxz
pop
jne
aas
les
arpl
sub
fidivr
mov
push
mov
xchg
jbe
test
xchg
retf
jae
cmp
retf
adc
inc
jge
adc
inc
out
jnp
sbb
fistp
rcl
lods
cmc
fld
mov
mov
lock
sub
mov
pushf
nop
sub
or
arpl
bound
fcomip
mov
adc
lock
mov
and
cmp
jnp
jbe
data16
cmp
pop
arpl
mov
mov
inc
xchg
div
sub
scas
mov
jp
push
(bad)
aaa
pop
mov
xor
cmp
(bad)
fld
inc
pop
daa
xor
or
repz
(bad)
lods
scas
sub
test
sub
sbb
shl
call
repnz
jne
(bad)
cmc
jns
xchg
repnz
add
shl
cli
in
fild
dec
push
dec
sub
test
inc
enter
shl
cli
and
sub
cmps
cs
into
mov
repnz
out
inc
sub
bnd
sti
fsubr
cmc
stos
mov
aaa
xchg
test
mov
pop
mov
or
loopne
mov
sub
mov
jne
popa
mov
push
dec
push
js
sub
pop
es
cli
cmp
test
call
sub
ins
imul
int3
inc
fcomp
adc
cmp
sub
cmp
hlt
nop
or
leavew
lock
inc
sub
mov
loopne
sub
(bad)
jns
push
cmp
nop
push
inc
and
stos
xrelease
dec
xor
les
jns
sub
push
cmp
pop
js
sbb
loop
mov
sahf
stos
clc
fldcw
jg
ss
mov
aas
add
pcmpeqb
mov
(bad)
adc
ss
retf
loopne
icebp
mov
xchg
mov
adc
fdiv
inc
popf
mov
jo
and
add
push
ds
icebp
pop
sbb
popa
in
lock
not
jecxz
call
imul
(bad)
loope
test
mov
loop
add
repnz
call
std
call
sbb
loope
cmp
pop
dec
movs
pop
cld
pop
sbb
shl
int
test
loop
jne
mov
pop
jo
sbb
mov
and
in
fnsave
inc
jmp
sbb
xor
inc
push
and
and
int
push
loopne
sub
mov
(bad)
out
fisttp
rcl
push
fwait
or
test
stc
pop
repnz
mov
lea
inc
pop
rcr
repz
inc
dec
popa
scas
inc
aas
push
sbb
mov
adc
fs
xchg
inc
out
jne
das
ins
adc
xor
into
and
add
icebp
sub
xor
enter
xor
out
dec
in
pop
out
xor
push
lock
out
lea
stos
push
mov
inc
mov
inc
in
jnp
(bad)
and
pusha
dec
dec
and
lods
cmc
shl
cmp
xchg
push
inc
rol
lock
pop
push
ds
xlat
jne
fld
popf
hlt
mov
sub
cmc
not
pusha
pushf
mov
cmp
mov
push
ficom
xchg
jae
scas
push
sbb
sub
or
fwait
in
dec
adc
dec
xor
hlt
mul
mov
dec
push
cmp
or
cmp
sub
xchg
mov
bound
and
mov
jae
cmps
pop
bound
jo
les
rcr
out
mov
pop
push
sbb
shr
popa
fiadd
jns
shl
cmps
xor
add
jo
dec
jmp
daa
fadd
mov
mov
in
xchg
mov
cdq
dec
jo
jg
mov
lds
js
inc
cmp
icebp
mov
jbe
and
out
imul
cli
dec
cmp
ja
inc
add
xor
outs
aad
cli
adc
sub
jns
pop
or
xchg
jmp
rcl
inc
sub
xor
inc
sbb
test
mov
pop
cdq
adc
fdivr
add
scas
rcr
aam
push
mov
sub
or
jp
scas
sbb
js
or
push
shr
(bad)
xchg
jmp
add
mov
jne
call
xchg
add
dec
fwait
retf
leave
add
xchg
xchg
dec
sbb
jmp
stc
mov
xchg
inc
or
(bad)
cmp
ins
test
xchg
xchg
(bad)
lds
jb
mov
(bad)
jl
push
pop
mov
(bad)
enter
clc
ret
nop
std
sub
inc
repz
fnstsw
push
jmp
test
inc
jmp
and
mov
ins
shr
push
push
subps
bound
ins
push
scas
out
push
retf
inc
shl
mov
outs
xor
mov
stos
mov
pop
or
adc
jl
loope
sbb
retf
fs
jno
ins
add
loopne
out
inc
xchg
mov
mov
test
repz
mov
sub
jmp
xchg
es
pop
icebp
and
outs
pop
aam
xor
int3
call
mov
jmp
(bad)
and
push
fidiv
xchg
leave
mov
sbb
data16
jp
or
adc
js
loop
xor
push
imul
in
jge
sub
outs
fdiv
or
mov
bound
out
in
xor
mov
cmps
ror
add
inc
leave
xchg
pop
out
in
inc
push
ins
(bad)
push
cmp
jge
out
(bad)
into
aas
sbb
(bad)
stos
shl
movs
or
lahf
retf
imul
addr16
das
sar
fstp
pop
xchg
aas
inc
inc
mov
jge
sub
cwde
(bad)
xor
mov
scas
push
sbb
in
jae
cmc
in
andps
jl
(bad)
out
push
mov
jns
scas
rcl
xchg
iret
or
sbb
sub
fcomp
outs
inc
sysenter
mov
sbb
and
add
jmp
add
in
hlt
mul
xchg
or
push
imul
loope
(bad)
fistp
fwait
add
js
push
and
pop
scas
enter
cmp
push
xchg
xchg
jg
push
call
dec
ds
sub
(bad)
adc
mov
xchg
daa
xor
mov
push
cli
cmps
push
ss
loopne
mov
repz
jno
ja
mov
dec
mov
lock
callw
dec
xchg
repz
int
fisttp
in
cwde
cs
xor
(bad)
pop
test
jo
retf
pop
inc
lods
out
jmp
popa
lods
call
jle
shl
int3
sbb
fistp
mov
test
pop
sbb
or
jg
outs
add
push
imul
xor
adc
mov
mov
jo
psadbw
push
or
xor
mov
jne
fadd
add
jl
in
(bad)
in
sbb
mov
sar
int
and
stc
mov
ds
push
inc
mov
sti
inc
sahf
ret
add
(bad)
push
jmp
cmps
int3
xchg
jg
(bad)
sahf
shl
(bad)
pop
xor
inc
outs
push
xlat
xchg
jl
repnz
adc
mov
fmul
or
and
ja
shr
imul
test
cmp
(bad)
push
dec
je
(bad)
cmp
pop
clc
neg
ja
mov
pop
aas
(bad)
fdivr
mov
aaa
call
mov
rol
(bad)
mov
test
or
jno
dec
mov
movs
retf
xchg
int3
imul
jmp
jne
xlat
call
and
cmp
rcr
pop
addr16
cld
test
xor
cmp
or
push
(bad)
psllq
bound
ror
and
or
jnp
ja
mov
jbe
cmp
imul
mul
dec
add
repz
xchg
mov
iret
cmp
sbb
(bad)
mov
inc
add
cwde
es
popf
cmp
mov
daa
(bad)
(bad)
arpl
pop
and
mov
mov
sti
jmp
repz
and
add
jmp
mov
xor
pop
sub
(bad)
std
jns
cmp
nop
sbb
xchg
test
mov
mov
adc
mov
aam
shr
xor
neg
mov
scas
and
stos
sub
in
out
sbb
mov
ins
(bad)
pop
xchg
dec
mov
sbb
in
xchg
pushf
int
cs
adc
and
data16
repnz
sub
push
mov
cs
pop
into
adc
sbb
ds
adc
add
sti
dec
loopne
xchg
fist
stos
or
jbe
sti
mov
push
out
mov
mov
ins
dec
fs
xchg
les
add
xchg
cmps
inc
ficom
add
add
sub
mov
adc
outs
shr
xchg
push
scas
pop
movs
and
rcl
jecxz
jg
ins
call
scas
aaa
enter
stos
push
dec
cmp
nop
mov
iret
inc
ret
rcl
adc
push
jecxz
fmul
fnstcw
sti
out
pop
push
cmp
sub
jbe
xchg
cwde
jns
mov
xor
test
push
sub
cmp
and
sahf
xchg
sub
push
retf
call
jo
(bad)
into
pop
adc
xchg
mov
aaa
mov
sub
test
mov
cmps
popf
shl
rcr
mov
cmp
or
adc
inc
mov
sar
lds
cmps
mov
pusha
fisttp
cmps
popa
bound
add
pushf
(bad)
fcmovne
(bad)
(bad)
mov
lods
or
hlt
fistp
dec
fadd
xor
sub
xchg
dec
aaa
nop
pop
adc
pop
sub
xor
pop
xchg
aaa
fiadd
push
or
and
pop
retf
jns
test
pop
sub
mov
or
hlt
cmps
mov
je
xchg
rcl
fmul
cmps
inc
jmp
sbb
mov
ror
fistp
ja
cld
push
dec
add
xchg
lds
push
fidivr
dec
xchg
pop
in
jno
neg
stc
je
push
repz
ds
cmp
outs
into
sahf
(bad)
addr16
and
mov
pop
adc
pop
and
daa
adc
fs
push
cwde
xchg
add
xor
sahf
je
lods
aam
pop
(bad)
scas
or
lods
popf
lods
retf
xchg
push
scas
and
pop
repnz
outs
lods
jmp
dec
sbb
and
and
ss
xor
sub
xchg
addr16
cmp
pusha
inc
in
adc
cmps
scas
push
jg
ret
outs
mov
adc
nop
pop
daa
dec
leave
cwde
mov
dec
and
dec
(bad)
sar
adc
add
ja
push
sbb
sbb
ss
lds
gs
adc
cli
aaa
ins
daa
imul
or
add
iret
jmp
imul
adc
pusha
adc
sub
add
push
mov
pusha
mov
xor
popf
and
inc
push
gs
dec
xchg
jo
pop
fisub
xor
pop
add
rcl
pop
dec
adc
jbe
addr16
rcl
mov
(bad)
mov
or
push
or
imul
repz
add
mov
in
sti
shl
shl
aaa
out
sahf
cmp
mov
loopne
jmp
adc
inc
fwait
xchg
push
loope
mov
stc
mov
not
popf
out
xchg
stos
loopne
inc
mov
jp
retf
fild
sbb
push
push
cmps
stos
shl
ss
(bad)
push
retf
leave
mov
iret
inc
sub
adc
test
cmp
cmps
xchg
cmp
mov
add
push
cmp
xchg
test
pop
pop
dec
outs
sar
push
je
ja
mov
(bad)
or
arpl
mov
xchg
test
in
add
inc
sub
mov
pop
jae
dec
fwait
jmp
icebp
les
jae
push
sub
sbb
cmps
sahf
imul
pop
mov
pop
ss
mov
dec
fld
mov
loope
pop
movs
cmp
je
in
loope
mov
add
cmp
arpl
ret
(bad)
and
bound
dec
in
jp
nop
adc
push
dec
call
pop
in
push
inc
jmp
dec
xchg
mov
push
push
adc
stos
(bad)
enter
adc
mov
xor
sbb
ins
xchg
or
inc
xchg
fisubr
aas
mov
js
push
inc
dec
jmp
mov
inc
dec
data16
inc
loope
cmp
into
dec
adc
pop
cmp
jnp
sub
lahf
jns
aam
and
cld
cmc
sub
cmp
loop
ror
dec
arpl
mov
nop
push
lods
add
dec
addr16
pushf
and
inc
shl
push
pop
retf
add
adc
ja
test
test
push
in
mov
bound
push
aam
mov
in
jge
in
mov
mov
jp
and
sbb
js
mov
scas
xor
jge
hlt
retf
in
lock
pushf
pushf
outs
aaa
fs
adc
das
test
xchg
outs
jns
scas
outs
xchg
mov
cmp
sti
add
xor
pop
mov
inc
js
in
mov
and
sbb
mov
int3
mov
pop
sbb
add
fmul
dec
fidivr
inc
shr
outs
mov
mov
mov
inc
sub
pop
outs
in
(bad)
or
in
cmps
add
movs
pop
adc
xchg
ret
pop
pop
mov
adc
stc
push
jo
push
and
int3
test
pop
fnstsw
cmps
fcom
adc
aam
push
lods
mov
lds
pop
dec
pop
mov
ret
addr16
repz
ficom
aaa
adc
pop
test
pop
mov
sbb
adc
cmp
lahf
push
cmp
cs
adc
sbb
xchg
add
or
ret
stos
push
xchg
ret
out
int
in
ins
pop
dec
movs
(bad)
(bad)
rcr
cmp
push
sub
cmp
int3
(bad)
lock
pusha
test
xchg
enter
mov
pop
int3
push
sub
arpl
cwde
sbb
popf
fmul
jp
cmp
shl
add
in
cmp
ss
jb
push
jg
dec
push
pop
in
mov
test
dec
push
or
fwait
ret
xchg
xlat
aad
jp
in
or
pop
popa
outs
in
mov
and
lds
cmp
mov
ds
add
ja
pop
jmp
test
add
push
or
outs
ins
test
call
dec
jl
cwde
mov
fistp
add
dec
push
push
xor
dec
xor
mov
and
pusha
stos
ja
dec
and
pop
cmc
cld
mov
lods
push
xchg
cmps
adc
ins
pop
icebp
pavgw
data16
(bad)
xchg
call
xor
mov
into
inc
(bad)
gs
or
in
(bad)
in
shl
(bad)
neg
pmuludq
inc
mov
cmp
mov
or
jae
cdq
fsub
mov
in
or
sub
pop
cmp
fistp
push
lahf
aaa
cwde
fsubr
sub
mov
retf
(bad)
fidiv
cwde
ins
lock
daa
bt
fwait
push
mov
lods
mov
or
jno
mov
std
jge
xor
xor
gs
mov
mov
gs
arpl
(bad)
cmp
mov
test
pop
les
sbb
cmps
lods
jo
mov
cmp
lds
jecxz
les
sub
test
stc
lods
iret
js
mov
in
lods
inc
mov
push
ins
sub
xor
int3
(bad)
push
sbb
aad
cwde
pushf
dec
movs
xchg
stos
inc
jmp
(bad)
pop
mov
pushf
jnp
push
dec
inc
(bad)
jmp
add
mov
leave
sahf
sti
(bad)
sbb
mov
sahf
outs
fs
mov
ret
adc
leave
imul
mov
je
mov
and
jecxz
adc
pop
mov
mov
or
int3
enter
test
and
inc
das
push
sub
out
xor
jno
add
pusha
adc
jae
pusha
push
sub
cmp
sbb
dec
cdq
inc
repz
sbb
xor
sbb
fild
jb
in
push
fistp
retf
nop
xchg
and
clc
je
repnz
daa
enter
and
mov
cld
loope
jmp
ror
shl
mov
pop
sti
pop
mov
cmp
pop
lods
jns
je
inc
jp
push
jbe
mov
ins
jns
sbb
lahf
push
retf
nop
push
lds
repnz
mov
dec
inc
sbb
and
lahf
dec
push
sar
retf
cld
loope
push
dec
iret
jae
dec
push
repnz
movs
dec
clc
lds
pop
clc
add
in
test
ins
or
sub
(bad)
pusha
cmp
jp
in
jecxz
push
(bad)
and
out
clc
sbb
push
jmp
sub
movs
neg
dec
ds
nop
out
dec
cmps
mov
nop
mov
js
fistp
scas
repz
sub
mov
adc
ror
enter
leave
and
push
push
loop
push
mov
pop
push
mov
and
jo
jp
and
int
add
xor
push
in
and
mov
test
cmp
xor
push
push
add
xlat
mov
jge
ficom
push
mov
jecxz
inc
sub
hlt
les
adc
loop
sahf
cmc
scas
jns
push
das
aaa
lahf
push
(bad)
sbb
jmp
cmp
in
xchg
sbb
lods
or
sbb
inc
outs
cmp
stos
shl
(bad)
fild
repz
leave
sbb
aas
ror
clc
fidivr
shr
and
inc
nop
mov
add
test
in
sub
gs
cs
inc
xchg
pop
aad
leave
jecxz
or
jp
pop
xor
js
jg
int
sub
mov
cdq
jns
jmp
retf
or
(bad)
sub
push
scas
push
ja
inc
enter
(bad)
pop
sbb
arpl
scas
retf
mov
sbb
cli
call
xchg
cmp
mov
xchg
ja
(bad)
fist
adc
add
lods
mov
cmc
cmp
sub
bound
adc
xor
or
cmp
push
(bad)
loop
pop
push
pop
out
shr
jl
and
in
xor
imul
out
or
xor
mov
inc
data16
mov
xchg
scas
mov
je
pop
cld
sbb
cdq
inc
push
pcmpgtd
sbb
and
mov
jno
icebp
push
(bad)
sub
add
jb
inc
retf
loop
shr
out
or
pop
cmp
mov
iret
out
cmp
fnsave
pop
dec
ja
call
int3
sub
popa
outs
push
mov
sbb
or
test
(bad)
cmp
icebp
add
pop
call
imul
sub
nop
cmc
(bad)
pop
nop
int3
xchg
jecxz
popf
or
call
(bad)
push
mov
psrlq
loop
jecxz
inc
(bad)
into
ficomp
and
mov
add
xchg
mov
mov
push
sub
loopne
jge
push
inc
xor
xchg
(bad)
pop
fwait
fs
in
dec
ins
mov
hlt
not
shr
or
std
stc
int
in
xor
(bad)
push
or
mul
imul
sub
les
mov
into
fstp
pop
leave
sub
adc
mov
iret
pop
dec
mov
scas
xchg
lock
xor
mov
jne
jp
out
and
push
mov
push
push
and
jge
gs
neg
push
xchg
stos
sub
stos
jb
fstp
jnp
dec
mov
sti
outs
repz
sbb
das
cmp
cmps
shl
adc
adc
cmp
jge
xor
into
and
mov
(bad)
mov
int
das
in
ins
ror
pop
ins
and
jns
movs
mov
out
fs
cli
popf
pop
xor
loopne
in
out
xor
jne
aam
mov
std
jb
jle
ret
std
mov
inc
js
xchg
data16
or
pop
xchg
jl
jo
sub
imul
dec
pop
and
add
stos
xchg
or
cmp
adc
in
fcom
mov
xor
dec
push
in
xchg
fadd
movs
mov
fist
push
add
movs
div
rcl
out
movs
push
jae
and
cmp
test
inc
dec
iret
out
mov
and
add
mov
aam
punpckhbw
clc
(bad)
add
and
dec
xchg
sbb
pop
pushf
call
jo
in
shl
cmp
shl
arpl
jnp
dec
fnstenv
repnz
clc
cmps
loop
pop
cmp
lea
push
sub
add
xchg
dec
pusha
jmp
ds
repz
js
or
test
xor
mov
lods
adc
xchg
mov
into
popf
cmps
or
and
rcl
sbb
ja
out
xchg
xor
dec
not
in
call
xor
sub
add
mov
cs
out
push
mov
retf
mov
mov
test
les
xor
xchg
arpl
arpl
xchg
imul
data16
leave
push
mov
inc
cmp
adc
sahf
call
add
push
xor
adc
loope
daa
cmps
aam
bound
test
and
add
sub
(bad)
in
ja
push
or
mov
xor
retf
jb
mov
dec
and
inc
xchg
and
push
ss
add
mov
les
dec
jmp
mov
mov
sub
loopne
pusha
xchg
out
jmp
test
das
sbb
repnz
jbe
out
ds
sbb
xchg
mov
xor
loopne
in
sbb
sbb
jmp
jb
jmp
pop
push
cmps
popa
mov
xchg
shr
jmp
aas
call
in
pop
push
or
repnz
jne
ins
ds
push
inc
cmp
ret
cmp
lods
movs
inc
jbe
mov
(bad)
pop
or
icebp
bound
data16
imul
add
cld
xor
popf
(bad)
cmp
mov
adc
mov
call
ja
adc
pop
sbb
xchg
jge
aaa
(bad)
mov
aam
xchg
push
cld
or
inc
jmp
mov
sbb
mov
sub
or
out
jns
(bad)
std
ret
aaa
and
pop
mov
nop
mov
or
sti
inc
shl
sub
stc
aad
dec
mov
aas
stc
pushf
cmp
cmc
out
arpl
dec
rcr
hlt
push
lods
and
jge
mov
push
add
(bad)
(bad)
sub
jl
xor
sub
mov
mov
pop
dec
mov
pop
outs
cwde
fist
(bad)
pushf
or
and
cmps
xchg
inc
mov
push
push
pop
sbb
test
and
das
pop
fistp
ja
mov
inc
out
std
retf
int3
ret
dec
xor
adc
outs
out
mov
mov
sar
push
dec
xchg
push
sbb
movs
popa
dec
mov
out
stc
xor
sti
outs
enter
push
movs
sub
dec
jns
rol
push
and
dec
xchg
push
or
pop
adc
pushf
aaa
cmps
jmp
sub
test
in
mov
retf
popa
test
(bad)
push
(bad)
xor
xor
jne
cmps
loop
pop
ret
mov
mov
jne
vcvtdq2ps
cmp
out
bound
sahf
add
add
loop
pop
test
dec
enter
imul
sub
test
imul
mov
ror
and
(bad)
dec
jl
jnp
push
dec
cmps
jmp
mov
enter
cs
xchg
and
inc
rol
xchg
jb
(bad)
imul
imul
pop
sti
sbb
cmp
fwait
mov
arpl
lahf
jae
or
adc
and
jle
int3
aas
dec
sahf
das
jbe
(bad)
push
adc
(bad)
or
ins
pop
in
cdq
cmp
ja
adc
and
loop
dec
dec
or
push
push
aam
push
pop
add
sbb
popf
add
xchg
add
test
adc
lahf
ret
cmp
mov
push
inc
mov
nop
jl
sbb
lahf
mov
adc
adc
inc
ja
pop
adc
fiadd
adc
stc
jo
add
sub
xchg
xor
mov
inc
(bad)
xchg
push
shl
out
inc
call
icebp
add
scas
mov
or
call
cmps
leave
mov
pop
scas
nop
pusha
mov
add
mov
and
sbb
push
jb
sahf
das
loope
jp
stos
stos
fwait
sbb
sub
mov
mov
call
test
fnstsw
mov
pop
cmp
push
pop
xor
call
sub
lods
scas
popf
xchg
adc
rcr
(bad)
fstp
je
mov
pop
(bad)
mov
cmp
jmp
test
sub
dec
fidiv
loopne
mov
push
sub
arpl
mov
inc
jp
push
sahf
inc
pop
dec
ds
push
retf
jle
(bad)
retf
(bad)
pushf
sbb
pop
push
mov
jno
inc
test
cmp
push
ffree
xor
sub
jmp
jge
mov
xchg
cli
xlat
inc
mov
enter
lds
test
not
hlt
enter
cmps
add
pop
xchg
jns
popa
jb
xchg
mov
out
rcr
lods
xor
(bad)
(bad)
call
add
rcr
jns
idiv
(bad)
retf
inc
stos
xchg
jg
mov
sub
dec
inc
jp
enter
add
mov
add
dec
xchg
nop
out
add
or
add
dec
shl
pop
repz
int3
and
push
xchg
shl
lods
lea
push
std
je
lahf
aad
enter
mov
mov
ins
das
popa
fcom
push
mov
xlat
clc
cmp
dec
mov
(bad)
adc
mov
dec
inc
push
mov
jnp
mov
fistp
mov
fcomp
fist
lea
mov
inc
xchg
mov
cmp
inc
sub
mov
inc
inc
pop
loope
jns
add
(bad)
loopne
mov
div
std
push
push
jl
sub
push
mov
cmc
je
mov
cmp
fcom
add
xor
aaa
and
mov
inc
jmp
mov
mov
xor
sub
inc
mov
hlt
aaa
ss
push
or
xor
and
ins
xchg
add
outs
pop
dec
sti
xchg
cwde
inc
popf
rcl
adc
sbb
or
jns
xor
sti
test
push
psubusb
or
jae
dec
(bad)
cmps
aaa
add
outs
lods
sbb
rol
cmp
mov
shl
jns
and
mov
jmp
push
mov
rcr
mov
shl
cmp
arpl
mov
mov
out
jmp
(bad)
iret
xchg
cs
mov
dec
fs
(bad)
dec
inc
inc
ins
cmp
sub
scas
retf
sbb
(bad)
in
daa
sbb
push
mov
hlt
mov
gs
fdivr
clc
mov
shl
pop
nop
mov
dec
repz
cmp
dec
cmp
pop
scas
cmp
xchg
jg
ins
add
in
stc
clc
es
cdq
mov
and
scas
outs
push
out
cmps
imul
jecxz
xor
jns
jl
out
mov
test
test
sub
idiv
(bad)
jp
in
sbb
mov
dec
retf
cmp
mov
fisttp
and
push
test
adc
ss
dec
mov
add
mov
mov
adc
adc
push
es
sub
(bad)
(bad)
enter
dec
sti
mov
jmp
push
into
dec
cmp
mov
outs
lods
movs
inc
cmps
idiv
cwde
xchg
lahf
inc
xlat
fimul
fbld
sbb
cwde
add
mov
imul
ja
dec
sbb
or
arpl
sar
hlt
dec
mov
or
rcr
rcr
loop
jmp
(bad)
xchg
pusha
ins
xchg
movs
dec
cmp
cmp
aaa
jo
popf
mov
jg
iret
out
jbe
xor
aad
jle
dec
addr16
and
loopne
ret
stc
push
movs
test
mov
(bad)
aaa
call
enter
xor
in
sbb
push
push
push
or
xor
add
repnz
lods
xchg
fcomp
rcl
fdiv
je
or
pop
lods
xor
mov
dec
xor
addps
rol
ss
xor
aaa
enter
lds
in
cmp
push
ja
out
test
pop
pop
push
out
jmp
pop
jecxz
pop
push
enter
sar
inc
dec
inc
pusha
xchg
rcl
mov
mov
int
cmps
cmps
dec
pop
jmp
imul
popf
jmp
das
sub
pop
cmps
inc
movs
cmovl
icebp
push
adc
push
cli
add
sbb
jbe
cmp
jbe
sbb
(bad)
push
mov
pop
mov
xlat
mov
xlat
std
ja
xchg
jnp
mov
or
xchg
mov
lods
int
stos
addr16
std
xchg
jnp
ds
mov
ret
das
pushf
push
outs
retf
out
push
sub
popf
push
in
js
or
sbb
test
sbb
pop
nop
jae
inc
out
arpl
pop
mov
movs
aam
sub
sar
cli
adc
sub
jb
mov
arpl
sub
out
jle
inc
lea
pushf
sub
cmp
shl
imul
jo
sti
std
sbb
js
dec
inc
iret
sub
pop
jp
cmc
movs
stc
fadd
int3
loope
in
xchg
mov
add
shl
push
push
jl
call
ins
das
jle
ret
cmc
sbb
scas
xor
sbb
lods
jno
add
adc
add
cwde
popa
adc
cmp
xor
inc
cdq
push
js
cmps
and
std
inc
or
sbb
cmc
loope
gs
nop
(bad)
xor
inc
jp
xor
pop
push
and
sbb
pop
loopne
pop
scas
mov
push
aas
sub
push
outs
push
jae
test
in
mov
outs
push
mov
or
out
je
pop
mov
adc
mov
jbe
popa
lea
je
cmp
lahf
and
pop
mov
test
jl
out
sar
in
dec
fst
cmps
cmp
retf
sub
inc
pop
jno
or
enter
loope
jae
fist
in
rol
add
test
xor
fbld
in
pop
mov
or
cmc
scas
cli
xchg
xlat
mov
xchg
mov
xchg
loopne
scas
dec
jl
xchg
fisttp
push
lods
xor
aas
sahf
retf
clc
jns
js
in
push
push
jle
imul
sbb
mov
fdiv
jo
aad
sahf
inc
test
ds
dec
jmp
cmp
xchg
(bad)
jnp
retf
pusha
mov
mov
jmp
stc
add
xchg
fistp
mov
(bad)
mov
xchg
imul
out
xchg
fdivr
jecxz
jnp
jmp
push
rcl
js
pop
gs
cmp
push
and
sahf
and
push
popa
outs
mov
lahf
adc
ds
(bad)
imul
xchg
or
out
pop
mov
xchg
mov
(bad)
rcl
push
push
imul
or
enter
adc
rcl
clc
push
aam
sbb
xchg
jmp
mov
in
in
mov
mov
lahf
inc
xor
shl
(bad)
scas
xchg
out
mov
lock
and
data16
aam
ja
dec
lods
or
lea
push
clc
push
test
arpl
mov
cmps
or
adc
xchg
or
sbb
add
in
addr16
sub
pop
clc
in
pop
mov
or
mov
stos
nop
mov
aad
fcmovbe
test
push
adc
loopne
and
stos
pop
mov
mov
xchg
cmps
sbb
and
stos
add
scas
into
xor
jae
adc
xor
push
retf
pop
or
push
mov
aam
popf
fmul
das
jb
push
ins
bound
sub
ror
movs
cmc
cmp
rep
xchg
adc
lock
dec
out
mov
or
stos
sbb
push
jge
imul
add
pop
mov
pop
jge
xchg
ret
mov
rol
stos
mov
mov
stos
jnp
push
shl
jnp
aad
dec
fld
sbb
jp
call
cmp
pop
gs
xchg
popf
out
fidiv
in
call
(bad)
fucom
fidiv
xchg
sub
scas
stc
jb
mov
add
add
xor
jmp
push
je
pop
jnp
mov
and
mov
sbb
xor
cmp
sbb
ror
(bad)
imul
cmp
sbb
cmc
rcr
fild
arpl
mov
mov
int
mov
inc
icebp
mov
retf
inc
mov
cmp
shr
jle
in
sub
adc
rol
jne
int
cmp
push
leave
sub
into
push
mov
leave
pop
sbb
lahf
jmp
(bad)
das
lea
add
pop
std
jmp
cs
or
xor
outs
and
jmp
mov
fnstcw
sub
cmps
jno
call
inc
stc
daa
and
mov
mov
or
pop
xor
dec
cmc
sbb
mul
xchg
js
or
xchg
pop
sub
test
dec
movs
mov
test
sahf
pop
data16
push
fimul
and
mov
imul
rcl
leave
or
mov
jge
mov
dec
and
pop
movs
sub
aam
push
ds
(bad)
jo
sbb
lock
(bad)
xor
push
jno
shr
sub
repnz
cs
mov
loop
aaa
xor
(bad)
into
and
dec
push
ds
or
stos
in
xor
ja
imul
push
xor
mov
aas
ficomp
addr16
cdq
call
in
mov
movs
icebp
sub
(bad)
dec
and
inc
mov
ds
outs
xor
adc
inc
and
inc
lds
pop
dec
dec
fild
xor
jmp
ffree
push
scas
jno
daa
mov
push
iret
and
test
popa
and
(bad)
or
cmp
push
adc
outs
push
mov
mov
ret
cmps
popf
mov
and
leave
sbb
call
push
aas
shl
jne
and
mov
retf
shr
out
in
ins
add
mov
pop
(bad)
adc
js
mov
mov
movs
cmp
rol
jg
jp
xchg
clc
inc
jbe
jecxz
mov
sbb
mov
inc
adc
stc
je
popa
sahf
cmp
lods
pop
and
or
nop
jle
pop
jecxz
sub
mov
in
stos
mov
mov
aaa
sbb
sbb
aad
sub
sub
jmp
adc
push
(bad)
adc
dec
in
out
(bad)
jnp
dec
mov
push
inc
inc
enter
test
call
jg
pop
sub
and
mov
cld
sub
das
cmp
sti
jbe
add
push
into
xchg
popf
loopne
lea
or
test
sar
or
jb
xor
cmp
push
test
add
bound
add
(bad)
mov
lock
mov
mov
sub
inc
test
jnp
call
pop
(bad)
mov
jp
cmp
sbb
pop
ficom
jg
xchg
pop
jmp
out
aaa
push
jb
outs
ret
push
dec
fld
stc
jg
jp
xchg
cmp
cmp
sbb
or
mov
xchg
lea
inc
clc
jl
ss
sub
inc
push
test
push
mov
sbb
mov
pop
fist
lods
ds
xchg
or
sub
fimul
jns
(bad)
push
pop
xchg
mov
mov
jo
loopne
ret
(bad)
xor
mov
(bad)
in
jp
xchg
fistp
in
xchg
jb
aad
jl
sub
ins
enter
or
in
mov
loop
pop
push
into
xlat
push
xor
stos
sub
(bad)
es
sub
fwait
ds
or
xor
or
xor
cmps
mov
lods
cmp
jmp
inc
ud1
jecxz
inc
(bad)
clc
cld
out
xchg
enter
sbb
(bad)
idiv
pop
mov
cmp
xchg
cld
in
aad
pushaw
imul
add
jns
call
popf
ins
fisttp
test
das
cmp
jmp
add
ds
scas
jmp
jp
aam
dec
mov
jp
aas
fidivr
inc
pushf
out
add
ds
jbe
ds
je
jnp
xchg
push
pop
mov
retf
mov
ror
ficom
je
std
and
cmp
std
mov
leave
cmps
aam
jecxz
mov
iret
lahf
(bad)
mov
clc
shl
mov
xchg
mov
lods
bnd
pushf
or
xchg
std
dec
dec
imul
in
xrelease
cmp
dec
cmp
jb
inc
sbb
mov
push
lea
pop
add
xor
pop
jae
cdq
bnd
add
std
mov
xchg
jnp
dec
sub
mov
out
xchg
dec
inc
inc
ins
sti
ins
pop
cmps
pop
mov
ss
add
dec
cmp
pop
push
js
and
pop
shl
jp
js
inc
adc
mov
ror
lds
mov
pop
push
popa
jmp
call
push
lds
in
fcomp
and
int3
stc
(bad)
ins
xchg
(bad)
sub
adc
xor
fnstsw
mov
gs
dec
icebp
cld
inc
test
repnz
ror
xchg
sub
and
sub
xor
je
inc
repz
adc
mov
dec
fsubr
mov
cmp
xor
sti
inc
out
fld
jbe
(bad)
mov
jbe
idiv
mov
dec
push
xchg
xchg
push
fsub
enter
cdq
cmp
dec
stos
adc
push
jecxz
or
cld
xor
lds
fiadd
cmp
and
xchg
lods
lea
ret
in
cmp
jle
pop
jmp
mov
cmp
xor
push
imul
das
jmp
scas
push
jmp
cmps
push
rcl
out
test
inc
(bad)
dec
shr
gs
mov
cmp
dec
or
xlat
inc
shl
fcmovu
xor
ret
fs
pop
ror
stos
cmp
cmp
iret
xor
(bad)
add
(bad)
call
xchg
push
jne
cmp
addr16
mov
xor
dec
in
push
jnp
shl
fbstp
movs
std
mov
sub
mov
call
ret
stc
xor
out
call
out
push
and
call
hlt
(bad)
in
jp
in
jg
aas
(bad)
rcr
add
sbb
xor
rcr
push
rcl
or
nop
(bad)
cmp
outs
mov
aaa
and
cmp
lods
dec
jno
cmp
push
cmp
xchg
fwait
stos
inc
cli
and
popa
aam
push
out
in
bound
push
mov
fwait
and
push
push
sbb
(bad)
in
das
sbb
(bad)
mov
scas
cli
ror
imul
mov
repz
(bad)
icebp
xor
and
xor
int
dec
(bad)
outs
test
into
mov
popa
and
inc
pop
xchg
adc
bound
into
inc
sbb
xor
or
cmp
xor
cmp
xchg
outs
sti
cmp
jecxz
(bad)
sbb
loop
test
pop
(bad)
jmp
js
aad
out
push
fstp
popa
jae
push
shl
loopne
or
gs
push
ret
pop
dec
popf
gs
xchg
push
in
mov
in
das
das
call
push
add
xchg
pushf
scas
or
add
repnz
rol
fnstcw
sub
add
mov
repnz
cmc
test
fcomp
jno
rcr
and
call
inc
ret
sbb
jp
test
repz
pop
inc
cwde
inc
(bad)
jp
mov
pop
sub
(bad)
cld
adc
shr
mov
cwde
pusha
out
in
test
cli
and
imul
xor
xchg
pop
sbb
mov
arpl
mov
mov
cmp
xor
hlt
enter
fcomp
fistp
push
(bad)
push
and
out
sbb
(bad)
test
ins
dec
push
cmps
push
or
push
test
push
or
cmp
(bad)
xor
sbb
fdivr
push
ds
xor
adc
xor
push
jle
ror
lock
or
xchg
and
dec
mov
enter
push
sbb
jl
or
xor
push
(bad)
mov
mov
jge
push
cmp
jmp
clc
and
cmp
loop
sub
repnz
sub
mov
and
dec
mov
call
ins
out
int
cmp
pop
idiv
push
and
xchg
mov
add
ret
inc
jns
loope
movs
or
cli
adc
popf
leave
out
pop
mov
adc
pop
lods
adc
xchg
cmp
fcomp
aaa
rcl
adc
adc
mov
add
mov
xor
push
lds
inc
sub
(bad)
xchg
aam
xchg
xchg
iret
or
arpl
call
das
xchg
mov
repz
test
cmp
adc
into
in
and
mov
gs
dec
mov
sbb
ja
xchg
icebp
jge
mov
popf
pmuludq
mov
push
adc
xchg
hlt
ins
(bad)
fsub
jmp
inc
push
add
(bad)
push
jmp
xchg
aaa
out
xchg
mov
push
mov
je
mov
dec
xchg
adc
xor
cmps
push
jmp
adc
inc
int
push
xchg
mov
rcl
ror
int3
ds
mov
adc
(bad)
retf
stc
das
sar
hlt
inc
adc
mov
pop
jbe
jmp
dec
mov
adc
cwde
cs
xor
leave
xchg
int
mov
adc
cli
push
icebp
pusha
inc
push
mov
xor
lea
dec
shl
scas
mov
jl
idiv
adc
xchg
leave
and
fucom
fdiv
rol
jmp
cdq
daa
imul
pop
shl
outs
cdq
push
adc
(bad)
sahf
cmp
hlt
mov
sbb
cdq
pop
mov
dec
cwde
ret
rcl
add
outs
je
xor
pop
xchg
aaa
test
rcr
pop
call
aas
loopne
ror
lock
leave
pushf
jnp
add
xlat
xchg
sar
hlt
les
add
aad
repz
rcl
into
mov
jle
cld
push
mov
in
call
jae
mov
inc
xchg
pop
jge
cmp
and
int3
adc
inc
(bad)
mov
or
xchg
jp
jns
or
sbb
cs
aad
out
loop
sub
addps
clc
sbb
xchg
out
xor
jecxz
dec
scas
repnz
mov
jne
in
mov
jo
inc
adc
mov
adc
push
scas
xchg
dec
repnz
ins
push
(bad)
ret
sbb
jl
(bad)
ror
jns
out
cwd
push
inc
jge
adc
test
shl
std
sub
nop
inc
rcr
sub
cdq
sbb
hlt
(bad)
jmp
dec
stos
dec
lahf
int
das
ins
jbe
in
sub
pop
inc
aaa
cmp
rcl
(bad)
dec
pop
inc
lods
add
mov
(bad)
fcmove
stc
and
enter
sbb
inc
ficomp
or
cmp
imul
fs
mov
jl
or
push
ja
add
(bad)
cmp
call
xchg
cmps
mov
test
pop
mov
movs
push
shr
loopne
push
lods
fnstsw
fwait
push
inc
retf
jne
or
dec
in
jns
dec
adc
inc
sub
into
mov
xor
cmps
push
push
pop
sbb
js
movs
add
sbb
cmp
lea
xor
dec
mov
not
mov
clc
in
or
aaa
xchg
ffreep
cmp
pop
lea
(bad)
pop
adc
test
lahf
(bad)
call
inc
xchg
out
add
cmp
or
iret
cmp
pop
push
ja
ret
adc
or
mov
xor
push
pop
mov
cdq
jge
scas
pop
xchg
xor
ss
push
jbe
xchg
mov
mov
push
or
xchg
and
fisttp
xor
(bad)
jno
sbb
xor
or
scas
ret
mov
xchg
mov
loope
movs
xchg
pop
sbb
jge
bound
mov
add
repz
and
jl
add
adc
mov
jge
adc
pop
ficom
cmp
or
fstp
hlt
stc
mov
pop
xchg
inc
mov
cs
xchg
inc
inc
jge
mov
(bad)
outs
jnp
xchg
fcomp
pushf
es
push
adc
xlat
sub
fsub
dec
mov
xchg
sbb
jb
pushf
rcl
out
mov
xor
pop
mov
(bad)
ins
sar
xchg
stos
repz
and
sahf
int3
jnp
test
xor
div
scas
or
div
std
sbb
cdq
xchg
inc
jmp
sbb
cmps
inc
cld
lahf
and
mov
ret
stos
iret
jmp
mov
mov
retf
pop
or
cmps
dec
adc
dec
mov
sbb
xchg
out
popf
pop
jnp
stc
fild
mov
mov
test
call
mov
(bad)
mov
out
xor
std
fs
outs
ins
dec
xchg
xchg
inc
pop
xchg
mov
into
dec
xchg
retf
sahf
inc
xor
jecxz
cmp
push
xchg
push
repnz
stos
xchg
adc
test
add
rcl
int3
adc
mov
pop
or
jl
mov
jecxz
add
clc
and
scas
xchg
fdivr
jns
cmp
in
fwait
inc
cmp
add
dec
daa
fidiv
sahf
pavgw
jo
lahf
adc
loop
imul
jo
adc
sbb
jg
ins
aam
sub
pushf
mov
mov
mov
cli
pusha
mov
mov
or
cmp
shr
mov
jmp
push
jbe
sub
dec
ins
mov
(bad)
add
das
mov
fiadd
and
nop
sti
call
popf
push
add
xor
loopne
mov
or
cli
sbb
cmp
jp
loop
jbe
lea
and
sub
pop
call
aas
jbe
addr16
movs
adc
inc
jg
xor
mov
xchg
daa
into
and
push
cmp
dec
enter
aas
dec
test
cdq
and
in
inc
sahf
scas
xchg
iret
ja
adc
cmp
cdq
ss
jmp
or
sbb
call
lock
mov
enter
loope
sti
pop
xor
les
in
xchg
xor
test
adc
loopne
popf
and
call
std
xchg
and
sbb
scas
jno
and
ins
sbb
cdq
mov
pop
call
dec
loopne
mov
call
adc
shl
mov
aas
int
cmps
lods
add
movs
cdq
mov
sar
xor
lock
push
lods
loop
fidiv
add
aad
add
sbb
inc
in
sahf
mov
test
pop
pop
xchg
jno
jmp
std
cs
pop
mov
pusha
cli
adc
sbb
push
fadd
sbb
cwde
sub
mov
xor
pop
cmp
mov
cli
stos
sbb
mov
inc
sub
mov
sub
ret
test
mov
outs
cmps
sub
jmp
sbb
push
jp
adc
xchg
mov
pop
jns
int
and
test
adc
scas
pop
es
mov
mov
dec
mov
jns
enter
cdq
bswap
dec
or
pushf
and
ror
pop
sub
pop
sti
push
inc
jb
inc
das
sbb
sub
clc
in
shl
retf
jne
pop
aaa
or
ret
adc
mov
cmp
sbb
jl
mov
pop
movs
jo
mov
mov
add
jle
push
inc
inc
(bad)
mov
js
int
(bad)
adc
(bad)
pusha
fst
xchg
push
ret
dec
inc
jnp
(bad)
pop
dec
(bad)
fst
xor
int
cld
ja
sub
adc
pushf
jne
push
jns
cmps
loopne
adc
sbb
fimul
sar
mov
jns
mov
xor
fwait
hlt
and
adc
and
fwait
retf
std
inc
rol
jno
mov
push
or
ss
(bad)
sub
mov
in
mov
and
(bad)
or
add
jns
jbe
cmp
inc
mov
popa
mov
cmps
lahf
test
push
fnclex
jns
out
mov
cs
retf
jne
sbb
(bad)
fdivrp
std
in
movaps
les
imul
xchg
pop
jmp
pop
or
mov
sub
aaa
jb
add
adc
cmp
mov
test
add
jg
mov
shl
or
movs
movs
adc
cmp
test
enter
sti
mov
adc
pop
sub
out
lods
test
cmp
add
leave
sub
mov
pushf
std
inc
fs
mov
je
out
cmp
int
outs
jmp
dec
sub
xor
sbb
inc
movs
push
popf
pop
pusha
(bad)
push
pop
dec
rcr
mov
inc
cmp
das
movs
and
push
aam
mov
mov
cmps
cmp
mov
xchg
pop
sbb
lds
xlat
pop
mov
or
test
mov
cs
adc
sub
aas
(bad)
xchg
mov
xor
mov
loop
xchg
(bad)
jae
mov
pop
or
add
push
fisttp
xor
dec
xor
add
test
aad
sbb
mov
cld
mov
add
xchg
and
adc
aad
xchg
outs
stos
adc
(bad)
mov
dec
es
psubb
test
add
jns
loope
stc
stc
ins
xchg
adc
int3
push
fcom
ret
pop
in
mov
mov
mov
aas
(bad)
shl
inc
cmp
pop
mov
mov
pop
inc
mov
add
mov
xor
push
sbb
cmps
dec
cmp
inc
popf
movs
jl
cmp
(bad)
push
inc
(bad)
and
(bad)
aaa
retf
cmps
cld
inc
jge
dec
test
and
sbb
xor
movs
cmp
inc
loop
pushf
mov
cs
inc
loope
push
push
es
cmc
ss
cmp
test
and
pusha
dec
sub
xchg
pushf
mov
sub
xor
int
xchg
jnp
add
out
dec
adc
leave
dec
dec
in
sbb
rcr
cmp
cmp
mov
or
cmc
jne
cmp
pop
mov
out
sub
or
or
ds
aam
test
pop
out
and
das
push
into
div
cmp
xlat
inc
popa
call
mov
out
xchg
sub
xor
dec
(bad)
(bad)
shl
adc
loopne
je
popa
outs
adc
dec
nop
sbb
rcr
hlt
je
test
repnz
jae
(bad)
out
(bad)
cmp
outs
mov
scas
jl
add
mov
je
int
in
ret
test
mov
dec
pop
sub
inc
xchg
out
mov
inc
push
cs
push
xchg
fucomp
push
inc
shl
sub
mov
ins
lods
fnstsw
je
stc
fnstsw
adc
test
repnz
rcr
cmp
push
jbe
in
mov
jg
or
and
lock
bound
mov
sbb
sbb
(bad)
xchg
test
add
sti
mov
jle
sbb
xchg
pop
dec
inc
xor
enter
ins
pop
xor
out
dec
xor
and
in
mov
xchg
jecxz
and
pop
repz
lods
mov
in
or
test
outs
or
or
js
inc
scas
pop
jno
or
sub
iret
mov
test
push
int
scas
idiv
cmc
or
sbb
jns
sub
push
mov
cwde
ins
mov
mov
pop
add
mov
cmp
sbb
shl
fwait
sbb
out
sti
je
icebp
jmp
dec
inc
test
in
jo
(bad)
in
ss
sti
call
sub
adc
repnz
jge
leave
mov
xchg
push
sar
push
push
stos
sbb
adc
push
imul
iret
vmulss
xor
movs
fld
pop
hlt
sbb
into
mov
loop
mov
mov
repz
xor
xchg
mov
div
xchg
aam
ins
inc
bound
xchg
mov
cs
mov
gs
mov
addr16
xor
int3
jne
jl
(bad)
repnz
mov
cmp
rcl
dec
fnstenv
bound
frstor
sti
test
ret
push
pop
cmp
retf
ins
leave
das
imul
aam
push
cmp
mov
popf
xchg
jl
sbb
inc
xchg
lods
mov
pop
cmp
and
mov
sub
ss
xchg
pop
fs
lods
cli
xor
cmp
cmp
in
or
jno
lock
xor
and
sub
jne
dec
ins
xchg
or
inc
imul
or
inc
sar
cmp
(bad)
sbb
inc
repnz
jg
pop
sar
mov
push
pop
push
mov
test
das
jg
sti
cmps
fsubr
pusha
pop
scas
pusha
push
xchg
cmp
jle
icebp
(bad)
pop
(bad)
ins
jne
mov
dec
jge
pushf
inc
mov
addr16
(bad)
push
not
je
dec
cli
jbe
jbe
ins
sbb
pop
and
hlt
and
jl
outs
inc
sti
mov
mov
rcr
mov
add
sub
push
xchg
push
fs
pop
pop
mov
fidiv
push
in
mov
fstp
int3
dec
adc
je
ja
sbb
jmp
ins
dec
jmp
sub
xor
hlt
sub
test
pusha
inc
jnp
add
mov
(bad)
sub
ss
mov
add
sub
pop
push
pop
pusha
enter
scas
(bad)
jbe
push
mov
aaa
add
mov
cmp
ror
or
ffree
jb
pop
nop
dec
and
xor
add
ins
scas
sbb
sbb
xor
not
cld
pop
into
in
pop
mov
loope
sbb
add
cmps
and
ja
dec
dec
sbb
gs
stos
add
cmc
inc
push
js
inc
mov
movs
push
mul
and
data16
adc
cmps
daa
pop
mov
fnsave
push
push
dec
js
dec
outs
dec
adc
add
pop
test
and
push
mov
cmps
jo
pop
mov
sbb
dec
mov
fidivr
shl
(bad)
pop
dec
adc
mov
fwait
out
ja
pop
fstp
pop
pop
mov
cmp
xchg
lock
stos
mov
cmp
clc
lgs
jp
(bad)
sub
shr
mov
add
mov
cmp
inc
add
loop
dec
in
dec
pop
cmps
das
(bad)
mov
hlt
jmp
xor
ds
in
out
repz
stc
sub
daa
pop
mov
aaa
jae
adc
fld
push
sub
dec
aam
xor
dec
xor
pop
add
stc
aaa
les
and
inc
push
outs
pop
add
pop
mov
repnz
cmp
scas
fisttp
xor
fistp
pusha
loope
jp
mov
aaa
shr
scas
cmc
dec
cdq
dec
push
test
imul
cli
jmp
nop
repnz
pop
sti
pop
jmp
cmps
mov
push
and
inc
repnz
scas
push
sbb
je
cmp
dec
std
fild
pushf
ficomp
jnp
xchg
push
in
mov
push
dec
loop
fbld
fs
xor
mov
add
outs
dec
sub
(bad)
repnz
cmp
test
stos
push
adc
adc
add
pop
call
inc
mov
ds
retf
stos
fs
push
xor
lds
mov
pminsw
add
not
jae
add
pop
mov
push
ins
adc
sahf
repnz
jl
jmp
ret
mov
test
out
pop
jb
icebp
loope
bound
jmp
push
xchg
rol
loope
in
stos
pop
and
out
or
mov
test
int3
cld
mov
loopne
lods
call
fs
repnz
xor
mov
hlt
(bad)
fiadd
dec
mov
repz
push
add
aad
stc
dec
(bad)
loope
dec
pop
shl
mov
sbb
les
xchg
sbb
inc
inc
or
into
push
mov
xor
add
dec
stos
fs
jb
mov
es
nop
push
movs
sbb
pop
adc
sub
daa
pop
js
mov
(bad)
int3
cmc
stos
jmp
jb
ins
jg
add
push
xchg
(bad)
loope
(bad)
and
stc
jb
mov
imul
or
sub
cs
mov
(bad)
int3
push
push
nop
adc
mov
nop
movs
imul
cs
xor
dec
stos
frstor
jp
dec
mov
mov
mov
and
jmp
sbb
or
xor
data16
xor
fdivr
mov
xchg
aam
or
xor
ins
xchg
push
arpl
retf
cmp
call
jl
rcl
mov
push
movs
(bad)
xlat
dec
ja
sti
pop
add
les
nop
xchg
(bad)
pop
jno
(bad)
ficom
hlt
cdq
loope
jae
cmc
jae
adc
mov
mov
inc
cld
cmp
clc
iret
cmp
pop
add
jae
xchg
neg
pop
ja
jmp
inc
jo
aas
int
stos
mov
xchg
(bad)
pop
mov
sbb
fwait
or
xor
push
or
mov
es
cmp
push
movsx
add
adc
dec
addr16
ret
fiadd
dec
(bad)
int3
mov
test
out
out
mov
xlat
data16
pushf
pop
jae
mov
imul
idiv
fisub
xor
stc
push
sahf
xchg
ja
inc
pop
xlat
add
push
call
mov
addr16
ret
xchg
dec
into
out
call
loopne
inc
pusha
xor
jo
sahf
inc
mov
stos
(bad)
hlt
dec
xchg
mov
pmulhuw
sub
ins
mov
xor
fdiv
sbb
push
xchg
push
jne
push
dec
push
cmp
leave
ss
cdq
sahf
add
and
xchg
xchg
jnp
mov
jo
or
push
loopne
sbb
add
push
cmp
lock
add
arpl
mov
test
and
xchg
in
mov
jno
push
shr
out
inc
(bad)
nop
enter
in
into
(bad)
js
les
pop
mov
aaa
gs
adc
rol
mov
add
ret
xchg
rcl
push
or
and
push
js
xor
or
jnp
add
adc
ficomp
jecxz
jg
cmp
jp
std
pop
or
mov
(bad)
mov
or
call
fild
dec
mov
mov
not
mov
push
pop
(bad)
sti
add
add
rol
(bad)
imul
xor
xlat
js
dec
cdq
dec
inc
mov
xor
iret
(bad)
xor
stos
mov
cmp
ret
sub
push
xor
jl
cmc
inc
fimul
scas
fs
adc
dec
xor
jae
int3
mov
inc
cmp
(bad)
je
xor
jle
dec
loope
gs
leave
loopne
fcomi
leave
fxch
out
dec
cdq
jnp
jns
mov
pop
aas
addr16
mov
jbe
push
push
push
push
push
and
clc
adc
fnstsw
aas
retf
in
add
pop
mov
mov
dec
loope
sbb
in
sbb
cli
(bad)
lock
sbb
icebp
mov
xor
adc
shl
and
xchg
mov
sar
jecxz
mov
arpl
inc
adc
ror
mov
aam
enter
push
inc
rcl
mov
mov
test
fdiv
dec
cmp
lods
push
pusha
dec
stos
fimul
lea
mov
ins
popa
sbb
out
xlat
repz
popa
mov
jecxz
cs
mov
aaa
nop
das
or
shr
pop
fwait
int3
jae
cdq
add
cmp
jle
ins
sub
and
fwait
loope
xor
add
data16
sbb
aad
imul
adc
xchg
or
dec
rol
sbb
enter
push
jns
or
jb
sub
outs
mov
mov
pop
cmp
pop
or
lods
ins
fnstenv
(bad)
mov
les
jecxz
retf
in
in
add
mov
(bad)
dec
jmp
mov
push
push
jp
pop
sahf
cs
sbb
pop
in
jnp
ds
mov
mov
mov
sbb
add
jo
push
pop
mov
xchg
sbb
je
jmp
pop
pop
in
shl
fadd
data16
das
cmp
mov
xchg
push
std
adc
cmc
out
movs
pop
mov
add
fs
hlt
repnz
inc
xchg
mov
cmp
mov
jbe
jmp
add
push
sbb
mov
and
imul
xor
stos
imul
or
and
ja
(bad)
aam
dec
out
inc
mov
shr
ror
push
fwait
mov
dec
push
rol
aaa
inc
dec
(bad)
mov
hlt
loope
xchg
ins
lods
mov
pop
or
mov
aad
nop
jno
xchg
add
neg
retf
adc
sbb
mov
xchg
mov
(bad)
in
es
(bad)
out
outs
cs
test
sti
(bad)
xlat
aas
stos
sbb
dec
mov
stos
xchg
inc
in
push
cmp
cmps
mov
hlt
fcom
stc
and
test
lods
imul
test
xor
sti
dec
scas
les
pop
ins
xor
mov
popf
and
ins
loopne
in
(bad)
call
adc
ins
or
jg
jp
xor
mov
dec
loope
out
and
jae
push
xor
out
fcmove
push
inc
push
fadd
sub
pop
daa
mov
outs
aam
add
popf
int3
retf
mov
jnp
inc
(bad)
iret
(bad)
fsubrp
stc
xchg
dec
push
es
jmp
push
mov
rcl
loopne
scas
fldcw
add
mov
pop
sbb
mov
int3
pop
inc
or
pop
sub
or
ret
movs
daa
pop
pop
push
xchg
fbld
addr16
sub
scas
and
and
inc
and
sbb
stos
cld
into
or
loopne
jne
popf
cmp
(bad)
aas
xor
aaa
adc
cdq
or
mov
dec
push
or
sbb
mov
out
div
pop
adc
push
outs
adc
outs
jns
outs
lahf
fwait
icebp
lds
stos
xchg
mov
jmp
xor
daa
stos
mov
or
loope
adc
xchg
addr16
xor
or
dec
push
mov
arpl
nop
imul
xchg
mov
aaa
inc
scas
inc
dec
mov
push
int
mov
mov
inc
dec
and
mov
loop
mov
call
ja
pop
push
(bad)
arpl
fdiv
sub
arpl
imul
rcr
sub
sar
rol
test
shl
jecxz
fwait
in
bound
fld
ja
push
pop
movs
loope
jg
mov
es
in
aam
cli
xor
mov
mov
aad
dec
aad
dec
mov
xor
out
push
das
jo
cwde
mov
xor
push
adc
and
das
or
xchg
jl
std
xor
inc
in
int
xlat
loop
dec
int
mov
mov
xor
pop
aam
leave
and
imul
mov
push
mov
test
adc
in
test
popf
mov
sub
repnz
pop
(bad)
push
add
xlat
pslld
aam
push
nop
loope
cmp
int
in
(bad)
hlt
xlat
rcr
fadd
add
cwde
fucomp
popf
push
inc
and
(bad)
cli
pop
aas
pusha
emms
xchg
test
push
xchg
ins
xor
stos
cmps
or
das
mov
cs
jo
dec
inc
call
dec
lea
inc
xchg
mov
loope
inc
mov
jge
dec
dec
stos
repnz
mov
jbe
ret
jge
mov
push
mov
leave
adc
mov
into
fidivr
dec
aad
sbb
movs
xor
mov
fmul
lods
inc
jl
and
and
aad
sahf
inc
out
test
sbb
jg
clc
and
cwde
ja
ret
pop
sub
lahf
imul
pop
mov
in
(bad)
lea
sub
mov
in
imul
xchg
jnp
sbb
mov
and
xchg
sbb
jns
jns
adc
(bad)
sbb
adc
aas
mov
mov
inc
int3
sub
dec
or
ja
or
cmc
sub
mov
je
xchg
sub
pusha
and
dec
push
jns
jmp
jae
test
and
das
jp
retf
add
mov
or
cld
jl
sub
push
daa
data16
dec
sbb
popa
out
cmps
ret
das
cmp
and
jae
cmps
jp
push
popaw
xchg
sub
jmp
(bad)
(bad)
imul
add
cdq
adc
ret
sub
cdq
icebp
sub
cmp
pop
(bad)
ret
inc
fwait
pop
jb
push
repnz
shr
dec
out
xor
xor
stos
sub
pop
ds
dec
daa
jecxz
data16
cdq
sub
adc
out
jnp
daa
pop
mov
loop
fidivr
ret
call
outs
mov
xor
jge
or
mov
mov
pop
or
jge
push
aam
pop
xor
fdivr
push
retf
rcl
out
out
mov
jbe
lods
mov
xchg
jle
inc
adc
stc
repnz
cmc
mov
es
out
clc
or
hlt
dec
imul
fiadd
repnz
and
add
dec
outs
pop
pop
add
and
cmp
sub
inc
mov
and
lods
mov
adc
or
lock
jb
mov
sub
jg
dec
xchg
push
or
fsubr
jmp
mov
int
cmc
sub
xchg
push
ja
lea
nop
imul
push
lods
rcl
mov
adc
cld
sub
adc
push
(bad)
cdq
add
xchg
push
outs
push
or
(bad)
dec
mov
ret
xchg
adc
push
mov
mov
ins
inc
call
cmp
lock
sub
jecxz
mov
sub
retf
push
xchg
out
add
test
rcl
xchg
cmps
and
adc
sbb
and
lock
dec
mov
adc
push
mov
jnp
cwde
mov
lock
(bad)
cli
iret
xchg
push
push
mov
cmps
out
inc
lock
ror
into
dec
mov
mov
or
sub
rol
sar
pop
mov
mov
ss
je
mov
pop
or
cmp
loope
sub
shl
inc
loopne
mov
sar
leave
or
push
jl
aad
add
sub
jno
push
add
inc
cmp
sbb
or
add
or
mov
cdq
(bad)
xcrypt-ofb
cmps
ins
or
enter
daa
and
adc
(bad)
jmp
mov
push
test
inc
xor
xor
add
mov
pop
out
lods
bound
mov
xchg
cmp
push
inc
xchg
aaa
push
sbb
push
dec
aas
add
popf
icebp
add
fist
jge
push
sub
in
dec
push
push
fcom
pop
and
hlt
push
dec
inc
clc
jnp
mov
jns
sbb
aaa
add
fsubr
jle
aaa
pop
inc
shl
(bad)
clc
xchg
jp
popf
stc
retf
js
adc
outs
rol
fnstsw
lods
sbb
iret
ret
push
jnp
push
cmp
inc
inc
inc
nop
mov
xchg
and
mov
cmp
bound
into
jl
xor
add
push
jmp
ss
push
popf
mov
std
and
xchg
not
or
sub
mov
lods
push
xchg
xchg
aas
aas
sub
dec
in
inc
ja
pushf
xor
repnz
adc
pushf
add
out
add
sbb
retf
jge
imul
fld
mov
imul
cld
in
jmp
mov
ins
rol
adc
cli
imul
std
cmp
xchg
(bad)
lahf
dec
fdivr
mov
pop
daa
mov
mov
arpl
add
mov
mov
in
mov
aad
mov
add
push
add
mov
cmp
mov
(bad)
out
add
nop
jecxz
push
mov
(bad)
mov
sahf
(bad)
push
call
mov
adc
xor
cmps
in
fnsave
sar
scas
jno
arpl
push
sbb
pop
or
sbb
push
in
stos
cld
and
retf
jecxz
jl
and
movs
fisttp
push
and
pop
rol
pop
psubsw
sar
sub
ret
js
sbb
jl
call
mov
and
int3
push
and
movs
push
div
or
push
sti
inc
rcr
push
(bad)
jne
mov
or
and
lods
push
jno
jnp
ror
cmps
or
xchg
sar
push
or
ds
mov
lods
xor
jl
sub
cmps
sar
mov
pop
xchg
ja
fld
(bad)
loope
mov
pop
and
ror
clc
into
repz
cs
leave
jb
movs
add
xchg
push
pop
and
mov
cmp
pop
jmp
fwait
xchg
pop
loope
and
mov
push
add
jne
inc
pop
adc
icebp
jnp
add
(bad)
loop
pop
mov
sub
cmp
adc
imul
div
in
sub
stos
add
mov
sub
add
test
mov
mov
mov
scas
sti
gs
test
(bad)
out
call
aad
in
jp
dec
adc
int3
and
(bad)
cld
cmp
and
fsubr
cmc
add
pop
xchg
cdq
mov
js
push
push
clc
scas
lods
test
xor
inc
imul
lock
lock
dec
xchg
cwde
push
lds
pop
xor
retf
xchg
inc
mov
jg
jnp
cmc
adc
push
adc
js
pop
pop
cmp
js
int3
dec
fld
jp
test
push
inc
iret
rcr
mov
test
jmp
and
xor
add
inc
mov
aad
push
in
pop
sbb
mov
aam
mov
xchg
xchg
cmc
not
in
cmp
inc
sub
or
adc
mov
sub
push
jmp
mov
cmp
movs
ja
adc
and
push
jp
ins
xor
jno
jg
(bad)
cmp
popf
jge
sub
int3
inc
into
fldenv
xchg
std
cmp
or
call
mov
fidivr
cmp
add
int3
or
mov
xor
repnz
jecxz
ss
mov
in
(bad)
or
aas
add
gs
cmp
inc
or
fisub
push
aam
adc
inc
xchg
sar
cmp
scas
int3
adc
scas
scas
(bad)
mov
inc
gs
xchg
ins
out
sahf
aad
fwait
pop
(bad)
aam
sub
in
sbb
call
adc
add
lea
inc
xchg
pushf
test
push
std
outs
dec
mov
(bad)
or
or
je
outs
jns
leave
into
out
jmp
mov
in
and
mov
pop
or
call
fs
test
xchg
adc
shl
iret
inc
in
data16
mov
jl
fwait
inc
cs
cdq
retf
or
stc
addr16
xchg
das
mov
cmp
test
mov
pusha
add
lock
repnz
adc
mov
iret
les
jae
test
pop
mov
inc
push
jp
sub
inc
clc
test
add
(bad)
(bad)
mov
xchg
ror
dec
sub
sub
(bad)
sbb
fucomi
shr
es
scas
imul
repz
sbb
jle
pushf
(bad)
ror
cld
push
adc
fcmovne
cli
ror
sbb
jmp
lea
and
push
aas
imul
mov
std
mov
addr16
push
sub
nop
shr
inc
pop
loope
popf
lods
arpl
xchg
rol
push
movs
mov
shr
sub
fsub
sbb
out
sbb
xchg
out
pop
adc
push
and
mov
fwait
pop
jnp
and
xor
jecxz
stos
jb
inc
adc
jg
push
movs
cmps
shl
xor
push
jle
dec
cmp
scas
add
mov
and
add
adc
lock
cmp
mov
fsubr
mov
bound
sub
xchg
out
inc
mov
sub
scas
aad
(bad)
das
ror
mov
xor
xchg
fistp
cmp
sub
(bad)
in
mov
sub
adc
cld
dec
mov
and
daa
push
ret
and
xchg
dec
rcr
jb
mov
lahf
xchg
(bad)
lock
pusha
sar
mov
or
or
adc
les
inc
add
outs
mov
push
add
adc
xchg
pop
lea
(bad)
jl
std
ret
outs
(bad)
cmps
cmp
lods
add
aam
xchg
fldcw
mov
pop
push
add
inc
pop
mov
repnz
xor
arpl
iret
mov
inc
test
and
test
jns
leave
cmp
mov
or
into
clc
add
stc
xchg
mov
xor
mov
push
add
cmp
and
test
xor
pop
cmp
jne
pushf
sub
clc
dec
and
dec
inc
sbb
push
jbe
sub
or
in
ja
js
cmc
ds
outs
and
icebp
into
pop
icebp
jl
cmp
lods
in
and
cmp
cs
pusha
pop
arpl
xchg
cmps
and
lods
pop
and
push
cmps
push
clc
push
adc
mov
xchg
sbb
mov
adc
cwde
inc
or
xor
vsubsd
dec
pop
fnstsw
gs
pop
pop
retf
idiv
loopne
pushf
in
sbb
fs
cmp
mov
shl
jmp
or
call
xor
sbb
jnp
retf
bound
jmp
enter
mov
mov
rol
cmp
icebp
jle
std
add
leave
data16
int3
jg
movs
ret
sbb
(bad)
xchg
jp
iret
rol
aaa
test
stos
xor
sub
add
or
fcom
push
mov
push
out
xor
xlat
inc
ins
(bad)
ror
leave
add
mov
cmp
push
jb
jno
ins
fwait
shr
repz
push
scas
stos
cwde
pop
cmp
cmp
pusha
sub
retf
in
lods
les
dec
adc
je
xchg
dec
movs
inc
sti
(bad)
fcmovnu
xlat
cmp
jg
rol
movs
inc
je
add
or
sti
xor
lods
daa
inc
mov
and
jns
(bad)
int3
cmp
and
(bad)
out
lahf
mov
test
push
dec
jno
fsubr
(bad)
nop
jmp
adc
jecxz
ret
inc
mov
test
cmp
or
test
out
cmp
fld
test
imul
push
inc
test
repnz
int3
sti
icebp
(bad)
lock
dec
call
mov
call
cmp
mov
xchg
repz
xchg
push
push
popa
pusha
jne
out
int
dec
and
iret
mov
pop
(bad)
shr
mov
mov
jge
sbb
test
cdq
jp
inc
aaa
enter
jp
dec
enter
sbb
adc
pop
test
popa
data16
jb
xor
and
mov
mov
cmp
xchg
mov
adc
fwait
push
mov
clc
sub
movs
mov
inc
sub
(bad)
mov
xchg
pop
cmp
ficomp
adc
sub
or
pop
mov
mov
inc
ss
dec
div
jne
sub
inc
pop
or
xor
push
icebp
adc
adc
cmps
inc
sar
xor
mov
data16
test
sub
inc
sbb
jne
lods
rol
push
cmps
mov
es
loope
mov
and
iret
out
push
mov
daa
mov
pusha
xchg
inc
stos
popa
push
(bad)
stc
addr16
das
dec
stc
sahf
mov
xchg
ins
shr
push
out
call
mov
sub
iret
mov
stos
repz
sub
imul
mov
movs
xor
push
mov
push
(bad)
cmc
sub
add
cdq
test
jp
cmp
sub
xchg
fwait
mov
nop
scas
inc
inc
xchg
and
xor
dec
stc
out
mov
ins
hlt
mov
les
fucompp
pop
lahf
jns
les
push
addr16
xchg
int3
push
xchg
xor
jae
pop
jmp
sahf
test
call
inc
std
sbb
rol
int3
inc
stos
nop
ja
pop
push
(bad)
frstor
mov
add
or
mov
outs
pop
nop
pop
mov
dec
sub
sub
adc
inc
pop
inc
adc
test
ret
jmpw
adc
mov
pusha
push
mov
movs
rol
and
fild
fwait
loopne
jne
push
call
or
mov
push
sub
mov
xor
mov
dec
sbb
outs
or
int3
push
jl
jmp
aam
es
and
pop
movs
push
mov
fwait
pop
cwde
loop
xchg
cdq
or
sbb
sti
mov
pop
xor
mul
lock
out
xchg
push
aad
push
imul
xchg
cmp
inc
cmp
xchg
cmp
das
sub
mov
shl
xor
inc
push
dec
les
mov
jno
or
inc
mov
sbb
test
cmp
call
adc
(bad)
scas
call
stc
cdq
ret
fcomp
repnz
push
outs
arpl
push
xchg
pushf
mov
jle
in
xchg
call
jns
jecxz
pop
mov
dec
xchg
rol
(bad)
sbb
mov
and
cmps
fisubr
mov
in
(bad)
(bad)
xor
cpuid
in
push
push
and
push
mov
mov
pusha
in
(bad)
push
xrstor
(bad)
mov
aad
in
sub
inc
lods
fwait
sbb
inc
or
ins
pusha
push
xor
inc
fsub
push
in
fld
and
adc
mov
xchg
or
add
or
(bad)
fsubr
sbb
push
mov
xchg
jecxz
shl
pop
(bad)
mov
jmp
and
mov
dec
sub
push
call
or
mov
pop
cs
sbb
xchg
in
inc
cli
imul
out
mov
retf
inc
add
mov
ins
pop
inc
jg
dec
push
pop
loopne
(bad)
cmc
adc
pop
pop
pop
enter
pop
jbe
cmp
sub
in
test
sub
push
(bad)
fsub
mov
fisttp
jne
mov
cmps
fsub
jg
jnp
ja
sub
pop
jmp
push
mov
arpl
or
cmc
mov
cmp
xor
mov
mov
sub
mov
adc
je
call
inc
push
inc
fadd
xor
call
pop
dec
mov
js
mov
stc
sbb
stc
fwait
outs
xchg
and
mov
dec
adc
mov
cmp
adc
inc
or
cmps
cmp
stos
rcl
pop
mov
minps
loop
and
xlat
scas
fwait
stos
je
mov
sub
push
es
xor
in
je
mov
scas
scas
or
dec
mov
movs
scas
or
rcl
ins
iret
jp
push
cmps
or
aas
shl
cs
push
and
aam
mov
push
or
push
pop
adc
aas
fadd
in
dec
in
sbb
mov
gs
and
pop
inc
outs
es
cs
enter
call
xchg
(bad)
push
push
inc
fstp
or
int
cmps
rcr
loopne
add
push
out
sar
xchg
fiadd
and
jmp
ret
vmwrite
das
jmp
jmp
ret
stos
dec
mov
gs
mov
movs
popf
dec
sar
push
pop
and
and
loopne
in
gs
data16
(bad)
or
mov
sahf
or
lock
and
out
mov
scas
ins
cmp
addr16
pop
xor
pop
mov
cmps
mov
sahf
mov
inc
shr
pop
(bad)
out
sub
js
scas
xchg
adc
out
lods
jge
pop
jmp
or
nop
arpl
lahf
shl
out
lods
movs
xchg
into
lds
shl
repz
inc
sbb
inc
mov
iret
arpl
mov
mov
in
mov
sub
cmp
retf
scas
nop
mov
or
call
jge
xchg
pushf
and
shl
sub
and
sub
pop
in
into
into
int
rol
xchg
stc
fidiv
ins
je
imul
sar
iret
mov
mov
xor
xchg
rol
push
add
cmp
pop
xchg
and
scas
(bad)
xchg
sbb
pusha
rol
xor
int3
jmp
jmp
mov
cli
sub
hlt
mov
xor
pop
repnz
mov
add
inc
ins
and
sub
and
sub
repz
or
dec
scas
push
outs
and
loop
pop
and
xchg
jb
sub
and
cs
ror
aam
ret
pop
pop
push
sbb
lds
in
iret
scas
(bad)
iret
(bad)
das
repnz
mov
cld
xchg
ret
cmc
int
pop
pop
and
inc
dec
mov
dec
push
and
push
in
stc
jg
sub
retf
adc
and
int3
add
cli
jno
test
sub
jmp
mov
adc
mov
data16
xchg
add
push
pop
mov
adc
ins
push
xor
jg
es
pusha
mov
sbb
(bad)
and
mov
aad
mov
imul
sahf
sbb
add
es
sahf
aaa
mov
xor
leave
das
in
mov
push
loop
xchg
xchg
cs
dec
mov
jnp
sahf
cmc
mov
mov
pop
(bad)
xchg
(bad)
and
mov
inc
xchg
jbe
or
and
adc
mov
push
mov
mov
jg
adc
cld
jl
pop
repz
call
sub
or
test
(bad)
movs
pop
sbb
mov
div
push
cld
test
repnz
ins
cld
shl
mov
xchg
mov
pop
repnz
out
jg
mov
xchg
mov
dec
or
arpl
shl
call
dec
mov
pop
dec
or
xor
mov
fwait
shr
jae
sbb
mov
imul
ret
mov
(bad)
add
les
jmp
mov
xchg
mov
nop
aaa
jl
(bad)
adc
lea
lahf
(bad)
or
and
mov
fcomp
loopne
ins
scas
(bad)
arpl
mov
add
xchg
cmps
push
popf
dec
repnz
out
pusha
pop
dec
ins
xchg
xchg
xchg
test
rol
je
cmp
or
adc
gs
inc
cmps
inc
enter
jmp
sub
ss
shl
jnp
int3
idiv
push
dec
jnp
sub
pop
into
clc
jmp
mov
pop
and
(bad)
jne
sbb
loope
sbb
mov
mov
popf
iret
scas
or
adc
adc
dec
leave
sahf
dec
inc
inc
push
pop
ret
leave
push
jb
sub
or
jp
scas
add
rcl
cdq
std
dec
out
dec
jmp
sbb
hlt
loope
mov
jmp
mov
test
xchg
fild
sbb
test
(bad)
jb
stc
jbe
enter
push
sti
cmp
in
cdq
ret
mov
sbb
add
arpl
sub
jge
sub
cmp
(bad)
xchg
pusha
push
cmp
lods
push
std
pop
lea
les
inc
in
xchg
sbb
xchg
loope
dec
in
leave
mov
ret
fwait
mov
out
or
adc
jo
(bad)
mov
inc
dec
stos
dec
scas
inc
sbb
jecxz
inc
pop
pop
scas
fcom
xor
movs
mov
xchg
cmp
(bad)
jo
test
xlat
jecxz
in
in
bnd
mov
push
dec
imul
pop
push
adc
icebp
xchg
mov
adc
mov
test
loop
daa
xor
pop
inc
dec
(bad)
fucom
xchg
dec
xchg
js
out
loopne
test
pop
cmp
push
mov
(bad)
and
add
cmps
in
and
adc
aas
cmp
cmp
xchg
in
call
repz
cld
mov
pushf
int3
cmp
fistp
adc
add
es
es
clc
movs
sub
inc
cmp
pop
cli
movs
mov
enter
xor
inc
cs
mov
in
dec
fld
add
or
test
push
mov
aaa
rcr
push
push
pop
sbb
pop
jp
ret
sub
icebp
jns
adc
fst
data16
adc
les
outs
out
es
dec
sbb
loop
dec
push
and
int3
mov
sub
movs
cmps
fild
jbe
pusha
adc
jp
fbld
inc
je
pop
fimul
sub
fistp
and
leave
or
mov
mov
push
and
push
adc
xchg
call
cld
adc
xchg
xchg
add
sub
or
loopne
loope
nop
popa
add
push
mov
shr
(bad)
cmps
stos
mov
popa
fs
add
add
pop
scas
mov
mov
std
mov
cmp
frstor
mul
pusha
(bad)
and
pop
iret
sbb
imul
mov
clc
mov
movs
sub
out
jl
mov
fild
xlat
push
and
in
dec
or
jg
xchg
jecxz
fmul
xor
and
jecxz
scas
lahf
dec
push
enter
cld
addr16
out
mov
dec
sub
(bad)
int
in
cmp
jno
ficom
test
inc
lods
out
popa
int
jns
sbb
sub
in
(bad)
ret
and
push
(bad)
cdq
mov
dec
xor
xchg
dec
pusha
mov
retf
mov
pop
dec
jmp
test
push
rcr
(bad)
xor
sub
fsubr
stos
ins
imul
inc
push
or
mov
or
jne
aad
popf
test
scas
mov
sbb
scas
cmp
jg
lds
xchg
inc
repnz
mov
das
mov
xchg
inc
(bad)
aad
jp
das
int
pop
push
inc
or
sub
pushf
cdq
jno
nop
scas
sub
mov
aas
sbb
push
(bad)
hlt
enter
and
add
aaa
mov
(bad)
push
adc
sub
mov
mov
shr
push
jns
dec
dec
int3
mov
jmp
sbb
inc
bnd
int
pop
(bad)
das
out
pop
xchg
push
(bad)
xor
lea
dec
imul
cdq
push
dec
jns
pop
cmp
inc
jmp
test
fdivrp
sub
cmps
xor
stos
sar
cmps
call
mov
fistp
je
push
outs
fwait
mov
ja
dec
add
pop
xchg
xchg
mov
(bad)
adc
cmc
jo
sbb
xchg
xchg
mov
jecxz
adc
xchg
lods
pop
daa
int3
mov
xor
pop
mov
cmp
imul
jge
xchg
outs
or
pushf
repnz
xor
mov
clc
out
adc
push
pusha
add
jno
loopne
pop
(bad)
(bad)
jae
add
fst
sbb
fisubr
jnp
clc
paddsb
push
out
icebp
and
inc
rcr
or
stos
in
add
pop
scas
push
cdq
fs
push
ret
pushf
outs
push
aaa
mov
sbb
ret
inc
lds
cmps
mov
outs
jbe
inc
sar
stc
ins
cmp
cmp
jns
scas
xchg
mov
aam
cmp
and
push
(bad)
out
popa
cmc
jmp
adc
xchg
mov
hlt
push
add
xchg
test
mov
or
out
sub
pop
sti
inc
pop
icebp
xor
mov
jle
mov
xor
repz
and
psignw
adc
lds
stos
lods
rcr
add
or
fs
jecxz
mov
movs
das
call
and
and
fld
ins
pushf
add
movs
and
sti
or
add
push
retf
push
(bad)
int3
pop
aad
inc
jl
cmova
xlat
ss
and
or
adc
push
inc
cmp
dec
into
xor
inc
lods
mov
in
shl
push
daa
dec
cli
outs
xor
fwait
dec
aaa
xchg
(bad)
and
xchg
xor
xchg
lock
aaa
xor
ja
xor
in
ins
les
int3
push
or
mov
mov
cmp
daa
adc
rcr
xchg
inc
push
shr
imul
(bad)
ins
rcr
std
pushf
data16
icebp
lods
mov
jge
inc
fistp
dec
mov
repz
sbb
push
icebp
jne
adc
xchg
in
ret
or
test
inc
mov
cmp
and
sbb
sub
pop
xchg
dec
push
aaa
mov
pop
jo
mov
bound
xchg
adc
ffreep
aas
hlt
enter
inc
push
imul
adc
push
mov
loopne
hlt
jae
movs
cmc
jp
inc
lods
push
ins
lock
adc
jl
adc
or
rcl
jecxz
sbb
pop
nop
sub
lds
xchg
mov
xchg
addr16
pop
imul
xor
mov
push
and
xchg
push
push
leave
sub
jmp
mov
add
xchg
scas
and
ja
add
and
movs
xchg
jmp
stos
addr16
loopne
popf
loope
std
xor
out
scas
movs
into
mov
(bad)
(bad)
sbb
dec
call
cmp
jno
adc
jp
mov
daa
cmc
jno
cmps
dec
add
fimul
cmps
jns
push
imul
ins
fidivr
jo
jnp
mov
lahf
ds
jp
retf
lock
sahf
leave
pop
mov
and
xor
mov
xchg
es
mov
scas
jne
ds
dec
ins
xlat
(bad)
frstor
adc
dec
fdiv
stc
outs
int
xor
sbb
adc
jns
xor
popf
sub
ret
rcr
out
add
in
push
aam
outs
and
ss
int3
add
lahf
inc
fcmovnu
sar
sub
jmp
add
xor
jbe
mov
and
mov
cmc
ret
sbb
cdq
xchg
out
or
lahf
inc
inc
mov
int3
xor
jb
jae
add
mov
add
sbb
mov
jmp
sahf
xor
mov
jns
punpckhbw
ins
push
lods
inc
sub
xchg
(bad)
hlt
push
pusha
mov
adc
out
and
test
jp
jl
xchg
mov
mov
sub
add
aam
or
cli
pushf
push
ins
mov
aam
jecxz
into
jmp
in
pop
mov
sbb
or
movs
add
push
jg
xor
mov
lods
jne
call
and
push
pop
ret
movs
push
jmp
mov
lds
jno
std
push
mov
cmp
daa
cmp
pusha
add
and
or
(bad)
and
fbstp
loopne
xor
mov
jge
dec
jmp
rcl
int3
popa
sbb
addr16
shr
hlt
fnstsw
mov
popa
imul
push
movs
xor
(bad)
dec
sub
mov
test
mov
adc
dec
loopne
cmp
ins
js
repnz
push
xor
es
mov
daa
jns
xor
loope
dec
mov
pusha
lods
ss
xchg
cmp
add
hlt
mov
dec
out
add
aad
dec
sub
xchg
dec
push
jmp
adc
sub
mov
sar
ret
sbb
mov
in
cmp
adc
jg
lods
(bad)
push
mov
scas
dec
test
xor
add
push
aad
dec
ror
push
mov
adc
loopne
cmp
pop
imul
loope
sub
mov
dec
adc
sbb
cmp
(bad)
adc
mov
lock
push
idiv
fadd
loop
xor
imul
push
add
mov
lea
push
in
sub
pop
inc
dec
mov
sahf
das
push
or
xchg
push
mov
lods
popa
shl
add
stos
jnp
jne
test
pop
push
stos
scas
jp
sbb
jle
sti
cld
xchg
sbb
loop
xchg
and
test
push
add
std
in
lds
stos
mov
and
and
mov
scas
fs
ins
pop
mov
and
iret
stos
bound
xchg
cs
inc
fs
dec
lods
lods
xchg
outs
xor
rcr
aam
pop
jnp
push
dec
movs
cli
lock
ja
push
movs
pop
cmps
fsub
addr16
sbb
inc
(bad)
jp
jp
xchg
popf
mov
in
stc
xchg
jne
fistp
push
cwde
cmp
jb
fisubr
clc
sar
pop
je
stc
mov
aaa
cmps
and
pushf
out
sbb
bound
mov
les
sar
repz
xchg
aaa
arpl
jo
mov
push
xor
sbb
add
and
mov
jns
jmp
mov
add
aad
call
adc
adc
lods
cmps
pop
cli
jns
xchg
pop
repz
or
jno
jp
inc
add
aad
sbb
repnz
call
pop
aaa
(bad)
(bad)
xor
ja
push
daa
adc
sti
lea
leave
add
cmp
ffree
inc
imul
imul
or
ror
jbe
in
mov
inc
(bad)
sbb
pop
mov
xchg
jns
cmc
lods
add
sub
daa
jo
mov
push
loopne
pop
(bad)
push
sub
popf
int
mov
movs
and
and
int3
repnz
pop
std
mov
sbb
(bad)
mul
xchg
iret
cwde
(bad)
or
imul
jbe
fisttp
jbe
mov
lods
das
xchg
into
inc
ror
xor
outs
xchg
mov
inc
out
leave
(bad)
(bad)
in
aam
dec
xlat
ret
mov
and
sbb
mov
push
repz
inc
xchg
lahf
push
shl
mov
and
rol
inc
sbb
mov
fst
sbb
jo
inc
mov
jbe
mov
mov
rcr
scas
scas
inc
rcl
and
dec
fdivp
(bad)
push
jbe
mov
dec
xor
fiadd
(bad)
scas
ss
pushf
inc
std
and
jb
shl
imul
push
shl
(bad)
or
fistp
dec
xchg
or
and
add
cwde
add
outs
pop
iret
mov
push
test
bound
jge
cdq
push
in
push
sbb
rol
mov
rcl
xor
in
ins
cli
pop
cld
pop
mov
int3
adc
in
sti
jl
aad
pop
mov
call
lea
jle
imul
sub
outs
cli
lods
mov
pop
fild
adc
xor
ins
pop
adc
aas
ins
mov
xlat
ss
imul
aaa
cld
mov
cmp
(bad)
fdiv
cmps
xchg
mov
add
fidivr
popa
dec
jae
clc
push
outs
ret
stos
in
cmp
fwait
xor
pop
lods
adc
inc
ret
sbb
mov
push
sub
mov
out
mov
add
test
das
popa
push
js
mov
daa
in
sub
xchg
pop
ret
and
test
cmp
sbb
out
loopne
(bad)
xor
pushf
and
mov
das
repnz
lea
mov
cmp
pop
pop
push
imul
cli
ret
test
sub
retf
cwde
jne
aad
push
lock
sbb
add
arpl
retf
pop
cmp
dec
popa
mov
int3
dec
in
scas
loope
out
out
sub
push
jmp
out
push
out
dec
fbld
mov
outs
cmp
fiadd
int3
rcl
sub
push
adc
arpl
jl
in
pusha
ins
(bad)
sub
mov
(bad)
arpl
shr
sub
mov
imul
or
sub
scas
xlat
daa
xor
or
jne
or
test
lock
pop
add
(bad)
sub
mov
xor
(bad)
xor
fnstsw
cld
xor
jne
fisttp
adc
dec
movs
retf
mov
shl
pop
int3
je
daa
(bad)
(bad)
test
rcr
les
fsubr
sbb
dec
(bad)
jl
sbb
and
push
ins
std
aaa
jmp
(bad)
lock
add
lods
aas
pop
dec
inc
jmp
or
mov
stos
mov
(bad)
je
movs
dec
pop
push
mov
movs
jns
fstp
in
xor
fcomp
iret
pushf
mov
pop
jg
lods
pop
and
and
xor
add
jae
loop
popa
test
pop
sbb
xchg
add
scas
push
mov
push
jecxz
(bad)
jp
mov
mov
loop
xlat
mov
enter
mov
imul
adc
movs
inc
int3
cmp
jae
mov
cmp
add
popf
cld
fadd
jbe
and
cmp
rol
xchg
scas
popa
clc
mov
xor
add
ror
cmp
cmps
dec
inc
sub
mov
scas
fbstp
movs
push
add
(bad)
ja
in
inc
imul
inc
push
fld
dec
aas
out
mov
cli
mov
retf
repnz
lods
movs
mov
pop
ss
inc
sbb
sub
test
mov
jmp
or
or
and
aas
test
jg
pop
pop
mov
sbb
or
jge
push
inc
push
aas
pop
in
(bad)
adc
mov
test
inc
sbb
sahf
cmps
and
xchg
call
or
mov
lods
inc
jecxz
push
stos
ins
adc
mov
xor
or
cmps
mov
sub
xor
sti
sub
lods
mov
(bad)
jnp
inc
mov
jp
test
sbb
add
iret
clc
jg
mov
loop
adc
mov
inc
add
sub
jne
sbb
push
and
xlat
pop
inc
jno
inc
cld
test
pushf
pop
push
mul
sub
add
or
lds
sub
pop
cld
and
mov
and
cmp
add
adc
xor
stc
fiadd
out
add
jl
mov
mov
sti
or
(bad)
mov
pop
mov
or
loop
imul
pop
aaa
ins
pop
out
and
mov
mov
rcl
push
jecxz
ret
sbb
push
test
mov
out
pushf
cmps
les
mov
inc
cld
les
pop
xor
xchg
xor
xor
scas
ins
push
test
jbe
cli
push
imul
jl
or
fdiv
repnz
movs
outs
sbb
dec
xchg
adc
(bad)
std
cld
mov
mulps
cmp
sbb
clc
loopne
repz
popa
and
push
out
arpl
(bad)
fstp
dec
xchg
inc
(bad)
std
cmp
push
push
cmp
xchg
mov
jae
dec
sbb
push
lahf
xor
repnz
mov
outs
retf
adc
jle
push
fbstp
pop
lahf
pop
enter
and
push
mov
(bad)
idiv
mov
xchg
call
fdivp
pushf
xchg
pusha
test
pop
retf
xlat
sub
sbb
sub
lock
sub
mov
bswap
inc
clc
inc
cmp
cmc
mov
pop
or
mov
cmp
pop
dec
inc
add
cmp
inc
arpl
sbb
pop
retf
clc
push
pop
out
ins
shl
jbe
(bad)
inc
cmc
pop
loopne
push
iret
and
xchg
cmp
cmp
sbb
int3
sbb
ss
mov
retf
das
leave
jl
aaa
adc
(bad)
jmp
sub
ror
int3
loope
sti
adc
retf
xor
jae
popa
push
or
movs
adc
xor
pmovmskb
pop
jp
push
adc
sbb
aad
xchg
das
cmp
and
fild
inc
leave
inc
push
daa
retf
ss
dec
jp
inc
je
add
stos
push
xchg
imul
xchg
jb
sbb
pop
movs
inc
xchg
cmp
fnstenv
sahf
in
sidtd
loope
dec
out
and
xchg
out
movs
dec
ss
xor
test
shr
mov
mov
jmp
ds
sub
sbb
pop
xchg
cmp
pop
dec
jno
rcl
or
mov
aam
pop
pop
js
cmps
out
std
in
xlat
pushf
push
sbb
mov
outs
jmp
cmp
mov
xor
push
stos
mov
arpl
push
jmp
adc
xchg
sbb
cli
mov
inc
adc
test
or
add
xor
popa
mov
add
mov
mov
popa
sub
hlt
ins
mov
aam
jns
mov
bound
or
and
(bad)
ja
pop
inc
aas
(bad)
fisub
sub
cld
push
mov
movs
push
int3
jp
loopne
and
jecxz
(bad)
sub
sbb
div
mov
out
(bad)
int3
fwait
mov
pop
xor
in
pop
adc
push
mov
cmp
and
jmp
pop
test
push
mov
sbb
jns
mov
mov
jbe
push
test
pop
fcomp
lods
pop
pop
loop
fwait
mov
pushf
inc
in
push
ins
js
cmc
shl
(bad)
xor
into
and
xor
fcomp
jmp
mov
xchg
cmp
iret
sbb
inc
div
mov
adc
mov
jp
mov
lahf
xor
pop
repz
push
push
rol
js
push
dec
ins
mov
and
fyl2xp1
into
cmp
mov
dec
aaa
or
(bad)
jnp
test
pop
cmps
mul
fs
outs
jne
daa
ins
test
bound
jb
lea
dec
mov
out
xor
and
call
pushf
sbb
data16
movs
(bad)
push
fld
jecxz
sar
lods
call
pusha
and
xchg
sbb
out
xchg
xor
pop
popa
shr
call
imul
imul
adc
mov
add
data16
push
add
pop
inc
add
adc
ret
push
or
popa
iret
arpl
sti
dec
xchg
mov
push
jns
les
imul
mov
sub
sub
cmp
xor
inc
sub
pop
xchg
retf
stos
pop
push
dec
das
jmp
xchg
stc
sub
dec
shr
in
jnp
(bad)
ror
(bad)
cmp
outs
(bad)
in
inc
dec
pop
test
test
adc
xchg
mov
retf
das
xor
fdiv
add
std
fdiv
in
jle
jl
sar
add
repnz
add
(bad)
mul
adc
(bad)
(bad)
push
ss
mov
test
aas
ss
sub
cmps
sbb
push
mov
adc
push
inc
(bad)
repnz
mov
sub
mov
and
popf
mov
outs
pop
(bad)
cmp
(bad)
(bad)
addr16
pusha
jmp
stos
sbb
sub
rcl
push
cld
hlt
stc
push
nop
cdq
sub
mov
leave
push
xchg
add
cmps
and
and
inc
mov
xor
sbb
popa
push
in
mov
xor
mov
adc
xlat
lahf
and
test
jmp
repz
xor
xchg
les
jle
push
and
(bad)
push
cmps
cmp
arpl
jo
call
pop
test
data16
mov
call
mov
pop
or
sar
icebp
out
jle
stc
mov
inc
xchg
imul
bound
or
cmc
fmul
cmp
or
rcr
int
stc
(bad)
push
xor
hlt
popf
into
dec
pop
dec
jbe
sbb
jbe
xchg
mov
neg
pop
push
retf
push
xor
(bad)
(bad)
push
push
mov
adc
xchg
bound
and
es
xchg
cmps
mov
mov
add
hlt
push
pop
xor
or
mov
pusha
sbb
dec
icebp
dec
arpl
mov
fist
in
test
es
(bad)
cmps
jne
xchg
das
xchg
xor
inc
js
adc
lods
inc
in
dec
sar
(bad)
scas
sub
fisttp
xchg
(bad)
mov
dec
sbb
xor
push
xor
cmp
cli
cmp
lea
mov
pop
dec
pop
sbb
imul
push
sbb
adc
movs
add
out
xchg
and
scas
sbb
ss
fdivr
arpl
pop
mov
or
cmps
ror
ins
jo
jmp
call
aaa
mov
pop
arpl
(bad)
xor
cmp
cmp
out
or
out
pop
xchg
jns
xchg
ss
xor
mov
rol
xor
iret
xor
mov
int
imul
outs
and
sub
push
and
jge
rcl
arpl
xchg
data16
jge
jnp
jge
xor
aam
jo
inc
or
daa
mov
in
xchg
lods
mov
test
popaw
repnz
(bad)
out
(bad)
and
movs
cli
and
js
pushf
cld
iret
cmp
push
xchg
outs
fnstenv
nop
outs
and
int
mov
and
std
and
pop
cmp
push
leave
sbb
jbe
adc
mov
xchg
enter
rcl
fist
jle
sbb
mov
pop
cmp
or
lods
push
outs
xchg
(bad)
mov
les
mov
sub
mov
stos
clc
xor
(bad)
pop
xor
and
add
out
(bad)
repz
jno
mov
cmp
fadd
aad
add
dec
mov
mov
and
in
mov
or
mov
cmp
fcmovne
mov
in
outs
into
sbb
jns
sub
retf
pop
sub
mov
fs
out
xor
stos
xchg
adc
popa
dec
inc
pop
or
cmp
std
pop
es
frstor
stc
fnsave
stos
(bad)
(bad)
mov
int3
sub
jl
pop
jo
xchg
and
mov
pop
stc
int
xor
push
or
push
imul
mov
cmp
add
(bad)
stc
mov
sub
ret
das
xchg
vlddqu
push
mov
popf
jo
adc
sbb
mov
fs
push
hlt
add
fdivr
sahf
jg
ret
sahf
clc
xchg
(bad)
movs
sbb
fisttp
cmps
add
fs
les
adc
addr16
outs
in
ret
sbb
jmp
fiadd
sbb
mov
dec
mov
mov
sub
xchg
xchg
adc
pop
cmps
clc
ja
inc
scas
mov
mov
cld
xor
or
push
mov
daa
pop
jmp
outs
loopne
pop
imul
not
aas
stos
sbb
int
push
fnstsw
stos
xchg
mov
push
push
cmp
sub
jp
inc
jecxz
ret
xor
sbb
sti
or
fcmovbe
xor
test
xor
shl
mov
sbb
cmp
sti
jno
xor
data16
mov
jne
retf
scas
out
ins
scas
sahf
ror
cmp
adc
pop
xchg
cmp
xor
dec
dec
(bad)
stos
jmp
lahf
push
xchg
cwde
cmp
cmc
cmp
add
xchg
das
enter
fdivr
pushf
xchg
imul
jne
mov
stc
xor
ins
push
mov
cwde
gs
inc
rol
mov
and
mov
imul
inc
cld
out
bound
sub
jl
(bad)
ficom
mov
jmp
sbb
fsub
xor
and
in
rol
push
sbb
cmp
movs
adc
inc
dec
inc
mov
lahf
or
ror
xchg
ret
cmps
sub
xor
fld
xchg
sub
pushf
adc
cmps
cld
xchg
cmps
mov
add
sbb
mov
ror
jecxz
paddd
add
and
xchg
xchg
imul
imul
pop
into
push
into
mov
jp
ins
int
mov
mov
(bad)
mov
dec
sub
mov
fld
pop
imul
std
stc
and
ret
mov
xchg
or
iret
adc
addr16
(bad)
fwait
in
mov
sbb
fndisi(8087
rcl
pop
into
aad
mov
add
jae
imul
and
jle
data16
fiadd
(bad)
call
push
push
popf
ret
int
sbb
sub
cmp
cli
and
nop
retf
ds
jmp
dec
jl
dec
jmp
movs
loop
xlat
inc
mov
mov
mov
jbe
and
ds
add
xchg
jle
pop
mov
sub
dec
imul
sbb
out
mov
dec
lock
lods
or
out
sub
sbb
push
ja
stos
lock
push
cmc
stos
pop
push
sbb
lds
xchg
(bad)
fs
fsub
into
mov
pop
sub
retf
repz
out
fmul
xchg
xchg
push
bound
ins
into
(bad)
stos
cs
(bad)
cld
cld
jno
(bad)
dec
jae
xor
mov
mov
retf
or
jmp
sbb
dec
and
imul
hlt
xchg
fnsave
int
ret
mov
and
hlt
sub
push
xchg
mov
xchg
mov
jmp
mov
cs
mov
cmp
test
mov
pusha
pop
je
fs
imul
ret
or
emms
dec
int
enter
sub
mov
and
int3
test
shr
popa
call
lds
out
mov
or
(bad)
leave
cwde
mov
cdq
dec
mov
out
xor
adc
clc
outs
mov
jbe
mov
cmp
jmp
adc
xchg
(bad)
mov
in
cli
and
push
cs
(bad)
addr16
enter
inc
shl
inc
cmp
jg
or
test
adc
bound
cmps
in
mov
aas
xchg
mov
xchg
cdq
lock
xor
popf
imul
jp
mov
mov
(bad)
out
push
xchg
test
es
pop
(bad)
loop
push
mov
sub
cs
pusha
test
pop
pop
or
or
nop
pop
mov
fcmovnu
pop
cdq
popf
(bad)
sbb
nop
inc
fwait
jnp
shrd
inc
out
or
jp
gs
loope
hlt
imul
int
and
cmp
div
fidivr
jae
add
pop
ret
sti
push
xchg
out
pop
sbb
out
inc
push
ret
pop
sub
retf
in
sbb
aam
jns
xchg
js
scas
das
or
rcr
add
dec
push
imul
iret
leave
mov
icebp
xchg
mov
push
jb
int
mov
cmp
xchg
push
jne
sahf
push
xor
pusha
bound
adc
mov
rcl
test
jbe
sub
or
bound
jmp
mov
aaa
push
inc
push
dec
mov
fcmovb
push
pop
jb
dec
cmc
mov
in
sbb
shl
nop
jge
mov
or
xchg
stc
mov
popf
pop
les
mov
in
(bad)
loope
mov
push
pop
in
pop
dec
mov
pop
bound
iret
lea
jmp
shl
mov
sar
fbstp
arpl
sub
or
or
cmp
jbe
xor
and
out
aam
adc
xchg
popa
into
repz
xor
scas
inc
adc
add
jl
lock
add
nop
leave
or
dec
adc
test
mov
es
lock
jmp
cmp
push
push
movs
movs
sub
movs
and
push
gs
pop
outs
mov
aas
mov
jmp
mov
push
icebp
add
rol
(bad)
out
popa
xor
dec
mov
inc
mov
fmul
imul
pop
cli
or
lds
add
mov
cmp
fsub
sbb
mov
cdq
ret
xor
cmp
mov
inc
or
(bad)
movs
add
cmp
test
xchg
push
stc
(bad)
adc
scas
sbb
arpl
not
xlat
lods
fcmovne
add
mov
mov
std
xchg
mov
mov
cmp
mov
add
stos
xchg
cmp
ins
push
(bad)
sub
(bad)
fadd
mov
xlat
stos
(bad)
cmps
pop
je
xchg
sar
pop
push
add
cmp
adc
xor
xchg
cmovo
lea
iret
shl
pop
push
movs
cs
in
xor
fnstsw
fcom
cmp
adc
mov
jnp
xchg
data16
or
xchg
fucomp
dec
xor
push
lock
dec
xor
call
retf
ror
test
add
adc
cmp
and
sub
(bad)
xchg
cmp
retf
sbb
stos
repnz
push
xor
rcr
jmp
test
pop
retf
fsubr
ja
mov
retf
xchg
dec
push
cmp
pushf
push
mov
jo
adc
addr16
add
jnp
sub
mov
dec
and
(bad)
imul
out
xlat
lock
das
scas
mov
mov
mov
xchg
pop
stos
out
sub
inc
mov
fiadd
in
mov
cmps
jne
sbb
cwde
mov
push
fisttp
and
popa
retf
or
push
cmp
sbb
mov
nop
imul
fdivp
retf
scas
or
mov
cs
push
sub
fwait
gs
prefetchw
in
icebp
loope
arpl
sahf
adc
imul
pop
dec
and
aad
mov
add
and
stos
pop
mov
mov
pop
sbb
mov
dec
add
add
sti
mov
push
xor
inc
mov
mov
add
mov
dec
lahf
add
jge
idiv
scas
adc
add
push
or
stc
or
pop
adc
dec
or
fs
sub
add
out
sub
mov
imul
xchg
stos
out
xchg
dec
stc
xchg
adc
xchg
push
jbe
dec
xchg
vxorpd
imul
stos
xchg
jno
movs
jp
or
adc
test
inc
call
fwait
adc
push
mov
adc
jg
div
mov
addr16
mov
loope
mov
popf
jp
sub
leave
jmp
loope
inc
or
adc
fdivr
xchg
out
icebp
loopne
iret
movs
pop
test
pop
sub
shl
jecxz
xor
lock
or
sbb
inc
repnz
pop
aam
outs
mov
sahf
into
jno
idiv
jno
cmc
cld
mov
icebp
adc
nop
clc
fwait
inc
ins
(bad)
mov
dec
out
lods
jmp
fcomp
aad
inc
(bad)
pop
cmp
xor
jne
bound
shr
shr
pushf
pop
dec
lahf
xor
fdivp
ins
xchg
bound
push
sbb
ficomp
pop
pop
in
jp
cmc
outs
adc
sub
or
or
mov
test
aad
mov
mov
or
mov
jl
mov
sbb
movs
push
and
stos
sub
pop
arpl
arpl
daa
lods
adc
or
pop
arpl
loope
mov
in
mov
mov
stos
inc
in
shl
or
popa
xchg
shr
pop
xchg
scas
ja
shl
pop
call
in
pop
mov
shr
sbb
mov
cwde
clc
mov
out
into
xchg
adc
pop
sub
imul
pop
cmps
jl
sbb
adc
aaa
inc
pop
add
sub
jmp
adc
mov
cs
push
fdivp
mov
stos
lea
mov
iret
(bad)
int
sbb
scas
in
jne
add
xchg
(bad)
xor
(bad)
jnp
adc
or
sbb
sub
mov
jle
sahf
hlt
leave
out
xor
push
jle
pop
jns
je
lods
inc
xor
jle
xchg
xor
fcmovne
push
mov
sbb
jp
cmc
sbb
loopne
adc
ins
sahf
or
add
jo
pop
mov
inc
jg
sub
ins
dec
mov
stos
mov
xor
push
jbe
fisttp
leave
mov
lods
movs
sub
jno
(bad)
mov
not
pop
std
mov
pop
push
aad
dec
test
(bad)
fwait
xor
sti
mov
add
out
mov
xor
out
inc
imul
push
sbb
add
push
xchg
mov
and
push
movs
pop
shr
clc
pop
or
push
cmp
mov
add
mov
push
les
retf
leave
mov
fs
pop
jmp
cmc
mov
ret
push
lods
fisttp
inc
mov
pop
les
mov
(bad)
jge
dec
dec
mov
call
and
inc
push
scas
(bad)
jnp
mov
into
push
mov
rcl
cmp
sub
add
test
mov
aam
add
or
nop
sub
and
dec
inc
dec
not
icebp
cmps
fcomp
mov
sub
in
bound
retf
into
push
xchg
mov
xchg
cmp
mov
cmp
pop
ret
ret
neg
arpl
cmps
shr
les
mov
les
retf
jmp
dec
jmp
movs
stc
mov
inc
xchg
aas
mov
inc
clc
popa
jl
dec
clc
bound
(bad)
out
pop
pop
fs
in
loop
inc
pusha
pop
cmp
into
jmp
mov
mov
daa
sbb
in
inc
sti
jecxz
dec
cmp
mov
push
or
push
movs
jae
cmp
dec
ds
xchg
sahf
pop
mov
mov
pop
adc
xor
mov
mov
jb
dec
jb
(bad)
pop
movs
cmc
xor
ja
je
iret
call
inc
mov
adc
into
jbe
sti
cwde
int3
xchg
pop
bound
mov
cmp
inc
ret
adc
mov
sbb
jp
sub
jb
push
sbb
xor
je
push
fld
jno
cs
dec
mov
int3
test
inc
sbb
cmp
dec
je
sub
push
fst
xchg
push
cmp
cmp
in
add
mov
outs
xchg
jno
loope
pop
jo
xchg
repnz
popa
cmc
(bad)
pop
and
enter
stc
xchg
movs
adc
jmp
stos
adc
jb
lock
push
rol
cmp
jmp
inc
xor
test
fwait
das
test
pop
fmul
ret
xchg
and
mov
xor
sar
shr
in
test
mov
mov
xchg
call
jle
inc
xor
test
sbb
or
add
sbb
mov
icebp
lahf
stos
push
sub
out
pop
cmps
cmps
and
and
call
shr
loop
xchg
dec
imul
call
mov
into
into
mov
sub
rcl
jae
sbb
xlat
inc
push
retf
jecxz
mov
repz
cli
pop
jecxz
scas
add
cmps
and
ret
or
lock
push
pop
jno
add
dec
push
lahf
test
ret
jbe
inc
scas
push
rcl
push
jb
and
(bad)
fdivrp
or
repnz
inc
xchg
dec
jecxz
push
jns
and
cld
pop
or
and
cwde
test
or
jnp
arpl
jl
mov
xchg
add
in
mov
dec
mov
fs
cmp
test
(bad)
les
jns
sbb
shr
pop
adc
test
mov
ret
mov
inc
sbb
mov
leave
add
or
cmp
cmps
sar
int3
mov
out
mov
imul
imul
les
mov
pop
jno
out
call
cld
aam
ror
pop
jecxz
jo
xchg
test
push
outs
in
jnp
xor
add
xor
sub
fimul
shr
popf
mov
jmp
cmp
or
jl
pop
ret
je
and
dec
icebp
int3
repz
xor
shl
inc
test
aam
mov
sbb
div
mov
sbb
loop
add
and
sbb
retf
jg
das
aam
mov
fs
xchg
into
or
fstp
movs
add
jp
iret
mov
xchg
pop
lock
js
dec
mov
add
jl
xor
dec
movs
repz
inc
jmp
out
std
add
jae
sub
sub
xchg
in
mov
fld
mov
mov
(bad)
mov
mov
dec
jle
pop
pop
xor
dec
addr16
sub
nop
xchg
pop
cmp
out
push
fs
mov
push
fist
mov
test
cli
jmp
mov
div
movs
jmp
stos
or
shl
push
dec
mov
sub
push
adc
push
es
pop
and
out
int
in
dec
and
sub
xchg
in
cmp
jecxz
push
pop
sbb
push
clc
shl
in
(bad)
mov
xchg
dec
inc
push
dec
push
(bad)
mov
lods
fcom
addr16
mov
or
cld
cmc
push
hlt
(bad)
icebp
jno
loop
fisttp
std
xor
test
xchg
daa
leave
xor
fsub
and
pushf
int3
std
lods
and
inc
jmp
(bad)
mov
inc
inc
xor
and
and
(bad)
repz
pop
mov
add
fisub
(bad)
loop
movs
jg
cmp
retf
outs
push
ret
fst
fwait
sbb
test
mov
das
stos
loope
hlt
imul
icebp
push
or
das
adc
sub
add
scas
push
lea
lods
(bad)
jb
gs
mov
or
(bad)
xor
mov
cs
aad
mov
pusha
and
repnz
push
inc
pusha
or
sub
out
sub
push
cli
int3
jecxz
and
hlt
jge
mov
cdq
imul
adc
stc
test
pop
or
jecxz
dec
fimul
adc
mov
mov
adc
mov
xchg
inc
imul
inc
or
mov
popf
push
mov
mov
sub
clc
pop
mov
and
lahf
js
sub
popa
(bad)
(bad)
cmp
les
ja
adc
add
leave
fistp
sbb
inc
cld
dec
cmc
mov
in
stc
aad
inc
in
sbb
lahf
js
cmps
call
pushf
inc
mov
jmp
int
adc
lfs
xchg
push
pop
xchg
outs
pushf
outs
jmp
and
int3
xchg
inc
aad
sub
pop
adc
sub
imul
scas
mov
int3
pop
test
lock
je
cli
mov
cmp
loop
xchg
sbb
ja
(bad)
mov
arpl
push
lahf
push
xchg
push
push
pop
ss
sub
ror
fcomp
xor
(bad)
mov
shl
xchg
and
push
inc
and
mov
loope
jmp
ds
jae
fcom
push
or
bnd
xor
inc
mov
test
or
or
inc
push
add
mul
xor
js
push
pop
repnz
xchg
inc
(bad)
iret
jae
dec
in
inc
out
cmp
mov
pop
outs
lods
std
mov
rcr
adc
pushf
mov
daa
mov
jmp
in
pop
jb
mov
dec
cli
adc
test
add
(bad)
dec
xchg
jg
jge
xchg
dec
std
addr16
pop
sub
test
jecxz
cmps
(bad)
rol
popa
imul
movs
dec
jne
leave
push
hlt
jno
xchg
jl
loop
sub
test
test
out
ss
add
lock
pop
push
fisttp
sbb
das
ins
mov
inc
add
ins
fild
(bad)
in
imul
addr16
mov
pop
jne
jbe
cmp
dec
out
xchg
stos
sub
pop
out
sub
jmp
inc
sar
stc
dec
test
scas
dec
xor
pushf
inc
test
and
test
and
sub
pop
test
and
das
sbb
mov
jnp
sbb
cmp
xor
les
mov
mov
aas
mov
jmp
ins
test
loop
jb
dec
cld
(bad)
pop
sbb
xchg
cmps
out
stc
mov
adc
jmp
popa
dec
shr
retf
fdiv
dec
je
jb
test
ins
mov
ret
jl
add
ja
push
cmps
sub
fdiv
cmp
out
outs
nop
call
sub
adc
gs
jb
fdivrp
cmps
mov
cdq
xchg
fs
(bad)
and
pop
xchg
cdq
mov
mov
(bad)
mov
iret
aad
(bad)
test
pop
dec
xchg
mov
mov
or
jp
jno
mov
push
cwde
adc
jns
push
imul
inc
repz
sbb
pop
push
mov
imul
movs
xchg
(bad)
imul
add
pop
push
leave
cmp
ja
rcl
or
lods
into
hlt
mov
pop
lods
test
xchg
dec
sub
cmps
jle
test
adc
ficomp
xlat
push
mov
dec
ds
mov
or
idiv
(bad)
xchg
mov
pop
fwait
jg
jecxz
retf
lock
lods
and
pmulhw
mov
push
push
inc
add
mov
inc
cmp
(bad)
mov
cmps
popf
mov
dec
inc
retf
adc
shr
mov
jno
ficom
stos
int
xor
imul
xor
add
lock
cmp
xchg
loop
test
or
jmp
jnp
jecxz
int
sbb
int
in
add
pop
xchg
push
(bad)
popa
loope
pop
adc
sub
dec
jno
ret
(bad)
xlat
loope
push
call
test
cmc
xchg
scas
movs
(bad)
fstp
mov
mov
jl
mov
add
dec
cmp
or
and
cmp
pop
sub
push
and
hlt
mov
push
sbb
dec
int3
jno
sbb
mov
lahf
mov
pop
mov
push
push
inc
mov
cmp
test
xchg
mov
pop
xchg
outs
cmp
ja
sub
sbb
xchg
into
imul
sti
dec
pause
fdiv
pop
lds
inc
add
xor
xor
and
arpl
and
std
sub
pop
xor
shl
xor
fld
ror
fidiv
cmps
les
and
out
jo
mov
push
fiadd
mov
and
dec
push
stc
and
adc
loop
inc
push
cwde
pop
mov
and
ret
pop
mov
pop
dec
aaa
pop
mov
retf
outs
mov
inc
add
adc
jmp
sub
adc
jmp
repz
cmp
mov
cmp
fs
scas
test
and
mov
loopne
repnz
pusha
mov
or
stos
nop
mov
or
mov
dec
sub
inc
idiv
push
stc
inc
cmp
mov
das
adc
imul
jl
pop
pop
push
retf
xor
lods
fist
scas
ret
push
jo
or
mov
mov
in
rcl
ins
xchg
jl
dec
leave
mov
xor
cli
or
and
jo
push
and
stos
pushf
add
sub
jae
push
dec
test
and
adc
retf
enter
mov
cmp
lahf
sbb
xchg
and
aaa
mov
int
mov
sub
mov
mov
xchg
or
pop
popa
xor
mov
adc
pop
hlt
pop
movs
(bad)
mov
(bad)
in
mov
mov
mov
xor
lea
mov
nop
mov
or
sti
mov
sub
data16
(bad)
adc
push
jmp
sbb
(bad)
sbb
mov
sahf
fs
jae
mov
call
adc
rcr
fisub
mov
shl
mov
mov
int
xchg
mov
xor
sub
xchg
aad
shr
cld
mov
mov
int
adc
xchg
mov
jp
jp
cmc
inc
adc
bound
lea
(bad)
xchg
pop
test
and
inc
loope
aaa
scas
addr16
scas
idiv
into
imul
and
movs
xor
jmp
sub
data16
stos
ret
aad
call
push
xchg
pop
push
stos
movs
push
dec
lahf
jne
xor
fisttp
adc
xchg
retf
gs
xor
mov
pop
out
mov
xchg
jo
cld
mov
imul
test
out
loope
adc
mov
mov
push
mov
movs
retf
cli
mov
sbb
retf
call
js
ins
stos
ss
loopne
xchg
mov
sbb
cmp
push
scas
cmc
ret
outs
sbb
es
test
rcl
xor
iret
pop
in
ss
push
pop
movs
push
or
adc
ja
push
or
or
xor
(bad)
mov
mov
xchg
cmc
mov
mov
cmp
popa
mov
sbb
in
xlat
push
dec
and
xor
pop
cmp
scas
mov
jmp
add
out
push
sub
and
mov
jns
ret
out
inc
xchg
ds
inc
and
scas
push
pop
bts
mov
in
imul
mov
sbb
fadd
rcl
test
dec
inc
test
and
fistp
unpcklps
nop
add
sahf
add
mov
xchg
fsub
push
jae
adc
jecxz
jbe
imul
fcom
arpl
test
mov
shl
pushf
mov
and
inc
mov
cmps
fiadd
cmp
adc
ins
dec
mov
push
je
xchg
adc
mov
leave
sbb
inc
gs
inc
fidivr
(bad)
es
out
inc
daa
imul
imul
sbb
cdq
fdiv
jno
sbb
jp
stos
fnsave
cmps
scas
(bad)
jp
adc
push
adc
pop
or
cdq
sbb
int
jge
lods
dec
pop
cmp
hlt
pushf
mov
push
call
into
or
push
push
pop
icebp
xchg
(bad)
icebp
inc
outs
lods
adc
push
push
retf
xchg
lods
ins
out
les
nop
in
push
adc
shr
add
call
ret
ins
sub
and
adc
addr16
mul
sbb
xchg
shl
sbb
xor
push
ret
loop
movs
mov
cs
daa
call
ds
jo
shr
cmp
iret
mov
ss
jmp
pop
sub
pop
es
xchg
enter
xchg
xor
jns
xchg
push
call
pop
pop
imul
mov
outs
jg
aad
movs
(bad)
cdq
nop
mov
cmps
call
xor
into
sub
imul
in
xchg
push
or
in
int
push
jl
cmp
mov
retf
sahf
out
sbb
inc
mov
mov
mov
inc
cmp
and
xor
(bad)
into
enter
sub
cmp
cli
out
scas
fistp
cmps
push
jb
fwait
in
mov
mov
sti
sar
and
xor
(bad)
jmp
push
cmps
icebp
inc
xchg
push
sub
or
int
dec
jg
pushf
push
mov
loop
in
mov
dec
into
test
jne
adc
adc
xor
aad
popa
and
mov
jae
ret
xchg
inc
xchg
fld
dec
out
dec
push
les
out
retf
jp
in
call
js
ror
jns
or
out
loope
xor
mov
fs
cwde
or
ins
cmps
mov
out
xchg
or
add
std
push
(bad)
cmp
sub
mov
imul
add
cdq
mov
pop
cmp
jmp
fs
pop
add
icebp
jns
imul
lds
ds
addr16
or
push
rcr
push
pop
inc
mov
jl
xchg
add
sub
test
sti
fwait
je
outs
into
cs
and
stos
cld
push
and
shl
nop
xchg
push
mov
pop
aas
pop
mov
mov
ins
mov
das
inc
adc
sub
cmp
jg
out
mov
jl
mov
nop
(bad)
adc
inc
push
xchg
and
xchg
sub
test
iret
jbe
mov
jbe
mov
test
pusha
push
xor
push
or
xchg
jecxz
pop
dec
xchg
fild
movs
lods
dec
adc
ins
mov
and
call
pop
loop
mov
shl
mov
adc
addr16
sub
push
mov
cmps
sar
ja
dec
adc
mov
cdq
mov
jae
push
mul
data16
jno
mov
pop
call
cmp
push
lea
sbb
lods
mov
in
nop
mov
data16
fldenv
sub
push
test
lds
(bad)
sti
(bad)
sub
fimul
jge
ret
into
std
scas
dec
pop
adc
and
pop
fimul
out
sahf
dec
inc
jnp
adc
repnz
cmc
jp
retf
pop
xor
loopne
mov
aaa
leave
or
stos
sbb
cmp
rcr
sub
xor
mov
ins
dec
xchg
mov
fnsave
add
jmp
in
outs
mov
clc
jg
shl
mov
sbb
sbb
xor
jmp
sub
cld
pusha
dec
mov
shl
mov
out
pop
mov
mov
pop
xor
lock
jge
jp
je
add
repz
mov
mov
(bad)
call
pop
and
jecxz
cmp
popa
ror
sbb
ins
push
jge
mov
and
mov
pop
dec
adc
mov
mov
sub
pop
xor
retf
and
pop
fldenv
sub
repnz
inc
scas
jp
add
push
xlat
cmp
dec
bound
add
jns
mov
and
shr
fimul
add
ins
adc
xchg
or
xchg
mov
popa
and
ret
or
imul
sub
mov
xlat
pop
outs
and
add
adc
jge
hlt
movs
in
dec
clc
adc
shr
push
mov
std
aas
(bad)
loop
cdq
mov
fistp
movs
adc
(bad)
push
jle
loope
xchg
daa
stos
inc
popf
mov
jge
xor
popa
call
xchg
push
hlt
inc
pop
inc
ffreep
pop
data16
jo
ror
aad
mov
add
jecxz
arpl
nop
cmp
inc
mov
jle
movs
xor
test
xchg
repnz
cli
lahf
je
dec
ins
(bad)
out
push
xlat
cmp
scas
(bad)
jne
pusha
adc
or
adc
jo
addr16
push
out
(bad)
mov
cmp
push
inc
sbb
mov
sbb
cmp
nop
out
dec
hlt
outs
xor
xlat
add
mov
pop
adc
lods
test
cld
adc
mov
sub
int
mov
mov
inc
ficomp
idiv
aad
adc
mov
xlat
jg
cmp
lods
mov
aaa
movs
icebp
mov
(bad)
clc
push
dec
xchg
pop
sbb
push
test
outs
fstp
pop
stos
ja
lods
jge
cmp
xchg
(bad)
(bad)
aam
xor
inc
and
jns
aaa
mov
jb
push
jbe
or
adc
int3
push
loope
jae
clc
stos
dec
or
inc
xlat
jae
mov
jo
xchg
dec
fwait
xor
lds
push
mov
leave
lahf
jp
sub
loop
cwde
xor
(bad)
push
aaa
mov
shr
jmp
jle
(bad)
pop
dec
bound
sbb
(bad)
repnz
out
push
mov
ja
fucomi
dec
pop
dec
and
adc
or
jge
mov
dec
mov
lea
movs
loop
aaa
mov
je
in
into
sub
scas
pop
sub
push
cdq
xor
loopne
jne
push
popa
loopne
inc
xchg
cld
sbb
mov
push
mov
sbb
mov
(bad)
and
mov
dec
retf
mov
lahf
mov
xchg
lahf
cmp
sub
or
sub
jg
pop
std
mov
shl
jge
xchg
les
sbb
lgs
sbb
icebp
lods
or
sbb
ja
mov
xchg
mov
adc
pop
bound
cmp
aam
lods
in
mov
add
mov
dec
loopne
mov
xchg
repz
loop
call
xchg
or
popa
addr16
inc
mov
int
and
stos
xor
cmps
ret
dec
shl
sbb
fisttp
fadd
shl
fmul
cmp
mov
js
pop
mov
push
call
add
jecxz
(bad)
pushf
ror
cmp
dec
mov
mov
push
mov
dec
mov
sub
inc
add
aad
adc
imul
mov
pop
mov
addr16
enter
sub
jmp
test
inc
add
cmp
inc
sbb
push
test
mov
jecxz
in
jnp
call
cs
mov
frstor
ss
adc
mov
adc
cs
dec
nop
and
xor
push
mov
(bad)
xor
jmp
sub
mov
pop
sar
mov
mov
adc
dec
sub
add
jmp
mov
adc
fiadd
pop
outs
lock
out
rcr
lahf
xchg
sahf
stc
nop
push
rol
xchg
push
and
outs
add
and
adc
sbb
add
popf
pop
in
dec
sub
jo
aaa
leave
lods
push
das
and
sub
sbb
cmps
repnz
mov
dec
mov
dec
mov
inc
outs
jmp
xor
(bad)
push
ficom
add
and
mov
push
mov
loop
pusha
mov
shl
add
in
icebp
jnp
jo
leave
movs
fimul
jecxz
mov
push
and
mov
adc
jmp
adc
or
aaa
test
mov
jnp
mov
cli
das
out
test
in
or
mov
ins
add
in
xchg
jle
add
cdq
push
cs
outs
sbb
lods
aam
xor
mov
mov
fld
mov
cld
fwait
data16
adc
xchg
retf
push
add
sbb
xchg
rcr
adc
push
in
jge
dec
mov
hlt
loope
lea
cmp
sbb
dec
shl
jmp
dec
adc
mov
pop
jnp
dec
cld
cmp
push
bound
test
pop
stos
or
std
xchg
dec
add
int
pop
std
ror
ret
adc
mov
repnz
jg
(bad)
or
repz
jnp
dec
ret
test
add
inc
mov
pop
mov
fsubr
and
cs
imul
sti
in
xchg
push
mov
mov
aaa
or
sbb
je
jne
dec
std
ret
cwde
inc
sbb
ret
jae
push
in
fs
lds
clc
dec
pop
inc
retf
or
std
scas
cld
sbb
jl
call
fcom
std
xor
enter
xchg
sub
test
xchg
gs
jne
into
mov
test
jne
xchg
js
xchg
(bad)
icebp
mov
cdq
or
stos
dec
adc
loop
add
cmc
or
lahf
popa
inc
pusha
fwait
pop
dec
popf
movs
ja
pop
xchg
(bad)
out
retf
xchg
retf
int3
xchg
iret
or
dec
mov
or
sbb
lock
out
daa
out
shr
add
arpl
pushf
je
out
div
xchg
cmp
or
sbb
test
ins
xchg
cmp
xchg
pop
sub
jae
(bad)
mov
out
push
daa
daa
xor
jp
pop
mov
jo
(bad)
and
pop
push
lds
movs
sbb
je
jmp
mov
sbb
fst
mov
sbb
lods
xor
test
test
rcr
scas
push
(bad)
aad
cmp
pop
cmps
pop
stc
mov
mov
jns
inc
repnz
(bad)
out
sub
xor
mov
loop
icebp
pop
out
cmps
xor
arpl
fmul
ds
es
(bad)
pop
jno
ins
std
rcl
imul
lds
mov
xor
fst
movs
xor
mov
test
pop
popa
nop
mov
sbb
jl
sub
fsub
pop
test
pop
push
cmp
hlt
inc
pop
test
dec
push
xlat
inc
iret
xchg
call
pop
test
rcl
jns
rcl
inc
dec
xchg
imul
and
jg
xchg
test
in
scas
pop
sbb
or
outs
inc
loopne
in
xchg
inc
xor
lahf
add
mov
and
jle
outs
adc
adc
stc
sbb
add
call
push
rcl
je
inc
ret
in
inc
ja
push
pop
pop
std
cld
aas
popa
shr
js
fdiv
jle
inc
mov
mov
pop
js
fs
les
xor
pushf
jg
adc
lods
imul
mov
(bad)
ins
mov
(bad)
jbe
call
div
adc
(bad)
push
shl
(bad)
out
mov
cwde
mov
mov
jg
fs
push
jns
cld
mov
pmullw
cmp
test
mov
in
(bad)
das
es
xor
cs
mov
cld
lds
in
imul
or
(bad)
shl
daa
jle
pop
or
outs
repz
pop
pushf
push
ins
adc
push
ins
test
push
daa
xchg
sbb
xchg
and
scas
fnstsw
mov
sub
ror
aad
aaa
mov
add
es
mov
mov
aad
push
sbb
xchg
(bad)
aam
dec
ror
lahf
mov
xor
or
loopne
retf
inc
cli
jb
sbb
xor
nop
in
add
ror
jbe
sbb
push
mov
jmp
sbb
lods
pop
pop
leave
aaa
movs
jge
sahf
out
ror
push
sbb
fwait
push
dec
jg
inc
ret
adc
lods
pop
jp
xchg
jns
xchg
sar
cmc
mov
dec
cdq
mov
xchg
inc
gs
mov
jecxz
(bad)
fdiv
add
xor
popf
ins
jb
mov
cmp
xchg
push
and
std
nop
push
retf
js
mov
(bad)
gs
test
cmp
lahf
mov
jae
cmp
in
jnp
ja
std
scas
cmp
addr16
pusha
sbb
xor
add
fdiv
cdq
sti
xlat
fxch
nop
pop
rcr
cmp
or
leave
xchg
mov
cli
add
xchg
adc
or
aaa
push
push
dec
aas
repz
cmp
fisubr
fs
jmp
ds
mov
xchg
or
call
les
or
dec
pop
or
sbb
sbb
adc
jecxz
push
xchg
and
pop
lods
ror
jp
(bad)
repnz
fimul
stos
repz
adc
inc
ja
pop
or
dec
xor
movs
adc
cmp
jo
mov
dec
stos
movs
sbb
and
bound
push
inc
loop
sbb
mov
dec
mov
test
mov
push
cmps
iret
outs
je
stos
sub
adc
fcom
inc
cmp
ins
gs
bound
leave
push
imul
mov
sub
lods
lds
(bad)
push
or
bound
sahf
mov
lahf
imul
sub
pop
sub
cmps
dec
lock
pop
sbb
dec
xchg
aas
aas
push
gs
cld
or
icebp
(bad)
jle
or
imul
test
xor
xor
int3
push
xor
fs
cmp
jo
add
stc
fwait
loopne
sbb
outs
clc
xchg
nop
ja
mov
(bad)
in
lahf
pop
scas
lock
fadd
clc
adc
push
jb
(bad)
mov
les
fsubr
dec
sbb
add
sbb
fwait
dec
gs
ins
gs
into
in
push
das
cdq
stos
mov
push
pop
sbb
mov
int3
mov
lds
cld
mov
xchg
cmp
sub
sub
dec
aam
xor
jge
test
push
sbb
ds
add
or
mov
jno
or
rcr
outs
int
ins
mov
xchg
xor
pop
sub
xor
push
jp
jge
popf
mov
adc
fsubr
sub
push
xchg
(bad)
pop
push
loope
jns
pop
xchg
mov
into
mov
add
and
inc
sbb
lock
aas
dec
mov
bound
(bad)
push
mov
and
cwde
mov
cmc
xchg
fist
mov
sbb
mov
inc
push
sar
push
sub
jne
enter
dec
dec
cmp
pushf
out
and
pop
mov
or
out
mov
mov
leave
fxch
pop
mov
and
cli
xlat
dec
add
dec
jne
mov
xor
sbb
mov
iret
adc
in
je
int
cmp
and
pushf
cdq
xchg
mov
and
mov
mov
or
sbb
mov
inc
repnz
and
adc
repz
mov
fistp
jmp
pop
push
loop
lock
inc
cmp
pop
pop
cli
mov
test
retf
test
hlt
movs
add
xchg
dec
fldlg2
dec
lods
ficomp
(bad)
dec
xchg
sub
rol
jp
ror
cdq
xlat
repnz
mov
jb
dec
out
cwde
cmps
fwait
pop
cmp
in
xchg
and
push
outs
movs
add
or
push
sbb
enter
dec
lea
jl
fsubr
add
fwait
jbe
mov
mov
leave
mov
fist
pop
call
push
xchg
pop
add
fs
mov
jg
out
add
dec
push
es
jae
inc
push
inc
mov
cmp
(bad)
jg
pop
jns
xchg
and
popa
test
jbe
les
mov
rcl
mov
push
cmp
lds
retf
push
cwde
js
cdq
pop
mov
jne
fdivr
fninit
in
shl
aas
mov
cdq
sbb
int
xchg
rcr
ret
xchg
fwait
ins
cmp
sub
dec
jbe
sbb
dec
pop
test
sahf
ins
or
bound
frstor
pop
icebp
mov
icebp
cs
push
pusha
aad
adc
pop
loopne
mov
cmc
ins
cmp
pop
test
cmp
(bad)
stos
cmp
dec
lea
sub
inc
xchg
mov
xor
sub
mov
dec
push
xor
jne
inc
adc
jmp
dec
push
mov
pmullw
ror
mov
push
mov
or
cmp
and
xchg
xchg
cmp
and
xchg
out
sub
scas
jo
push
cmp
retf
and
mov
pop
in
cmp
(bad)
repz
jecxz
xor
fdiv
xor
inc
xor
loope
lea
lods
mov
sub
jp
(bad)
xchg
add
ja
xchg
push
mov
mov
jecxz
ss
cmps
enter
xchg
mov
or
es
into
adc
cmova
mov
push
ror
shl
adc
imul
mov
mov
cli
sbb
xchg
fisttp
dec
mul
mov
push
sub
xor
push
mov
sub
ret
int
adc
aas
test
push
or
or
jecxz
aas
es
sub
ds
iret
and
dec
pop
xchg
xchg
cmp
fcom
(bad)
sub
in
aaa
sub
mov
jecxz
dec
dec
mov
inc
push
ins
cmps
out
mov
fs
jl
xchg
ja
dec
mov
xchg
sub
dec
test
add
mov
cmp
rcl
jns
(bad)
cmp
ss
(bad)
inc
movs
pop
es
add
sub
movs
(bad)
int3
movs
and
sti
push
invd
dec
lahf
mov
into
dec
mov
inc
xchg
daa
mov
test
cmc
xchg
jo
cld
fucomp
fimul
dec
cmp
mov
pop
sbb
jno
xchg
retf
xchg
inc
dec
push
lds
xor
push
in
pop
ror
mov
adc
push
movs
movups
add
dec
fsubrp
je
jmp
int3
mov
sbb
aas
hlt
sub
nop
jo
jmp
ror
push
xchg
jmp
pop
mov
sahf
xchg
xor
jo
mov
mov
add
lea
ret
xchg
cmps
push
dec
in
outs
cmp
aaa
sbb
arpl
fwait
and
(bad)
imul
call
shl
ret
shl
jl
dec
fisttp
addr16
xchg
pusha
jl
push
or
mov
sub
adc
or
mov
xchg
lds
add
xchg
icebp
mov
mov
ror
mov
mov
pusha
jbe
ror
mov
push
sub
adc
pop
neg
out
test
rol
lods
mov
test
sti
sbb
xchg
sti
push
or
jnp
test
in
test
call
xor
ret
mov
inc
mov
stc
repz
push
mov
push
push
sbb
es
and
and
or
pop
xchg
push
clc
inc
and
xchg
adc
mov
gs
mov
mov
cld
outs
dec
cmp
retf
mov
fild
jo
popa
stc
push
push
pop
shl
mov
dec
stc
repz
loopne
stos
test
xchg
out
mov
arpl
push
fbld
scas
ret
xchg
inc
cmp
mov
xchg
jnp
repnz
sub
mov
fldenv
inc
sbb
mov
cmc
pop
mov
and
pop
aad
or
fwait
aas
push
jo
jmp
mov
pop
aaa
lahf
jae
add
mov
test
(bad)
or
aas
das
jo
add
mov
add
mov
xor
iret
das
mov
aaa
mov
jb
les
and
sbb
mov
push
jmp
test
pop
sar
rol
mov
loop
daa
movs
lock
pop
lock
into
jbe
jno
call
adc
and
stos
pop
add
(bad)
xor
jecxz
and
mov
(bad)
jp
adc
jle
and
ds
or
xchg
or
pop
test
scas
inc
fild
mov
dec
adc
add
sbb
pop
daa
jg
iret
inc
cmc
mov
jg
sar
loope
test
mov
inc
cmps
mov
inc
nop
(bad)
test
dec
out
imul
push
xor
add
stos
push
sahf
add
jge
stos
push
mov
sti
(bad)
mov
pusha
into
push
icebp
iret
cmps
pop
rol
iret
bound
jne
xchg
dec
push
dec
mov
pop
imul
cmps
popf
xchg
outs
pop
(bad)
cmc
and
mov
and
push
pop
std
dec
push
out
dec
aaa
sub
cmp
std
add
adc
mov
sub
mov
daa
ja
mov
retf
push
inc
pop
pop
mov
stos
mov
cs
or
retf
add
jg
add
imul
test
mov
jmp
daa
pop
arpl
jae
and
stc
bound
cmp
outs
ja
rol
daa
sub
jnp
xchg
sbb
mov
mov
xor
push
cli
mov
sbb
dec
imul
xchg
xor
xchg
sub
ds
mov
xchg
inc
scas
(bad)
jecxz
shl
int3
dec
adc
mov
(bad)
dec
ins
mov
dec
scas
fmul
ret
ficom
cmc
mov
int
jns
shr
daa
aaa
pop
adc
pop
inc
sbb
cmp
inc
leave
stos
(bad)
dec
pop
sbb
xlat
lods
sbb
test
cmp
mov
les
fnstenv
jae
or
mov
pop
push
cdq
sbb
outs
inc
pop
adc
(bad)
dec
push
mov
dec
je
jp
out
ror
jge
cmp
jmp
gs
imul
mov
stc
xor
aas
mov
mov
push
pusha
push
mov
mov
in
js
push
repnz
btr
std
or
mov
(bad)
xor
ds
xor
int
mov
iret
adc
stos
icebp
jns
push
add
sub
imul
jo
sti
cli
ret
push
shl
movs
sub
loope
popf
outs
jl
data16
jo
jge
sbb
(bad)
retf
adc
cld
int
dec
frstor
nop
and
call
lock
jecxz
clc
sbb
cld
mov
cmp
ins
mov
retf
imul
fmul
mov
mov
dec
popa
test
lahf
scas
hlt
xchg
adc
and
in
or
jmp
jno
and
xor
loopne
mov
push
(bad)
xor
mov
leave
push
pop
jp
dec
push
pop
test
jbe
jne
jle
shl
push
lods
and
jo
stc
test
mov
rcl
scas
push
jmp
nop
repnz
cmps
pop
pop
iret
sbb
call
or
mov
cld
aas
ins
inc
arpl
pop
and
mov
xchg
in
(bad)
cli
sub
adc
pop
mov
fcmove
aaa
jnp
out
mov
adc
dec
add
scas
ins
xor
xchg
cmp
sbb
jl
sub
push
fcmovne
movs
mov
push
push
xor
rcr
mov
out
mov
pop
cld
(bad)
xlat
mov
or
pop
mov
xchg
jg
int3
popa
or
les
mov
sub
sbb
push
mov
push
jo
cmp
cmp
in
mov
(bad)
mov
and
gs
out
lahf
sub
repz
call
scas
into
sbb
repz
push
(bad)
in
sbb
xor
mov
js
fnsave
fadd
push
pop
xor
fcomp
mov
push
xor
add
sbb
data16
sbb
jg
mov
mov
neg
cmp
mov
arpl
add
sub
mov
mov
stc
adc
out
loopne
ins
sub
(bad)
in
jecxz
and
jmp
cmps
(bad)
call
in
push
pop
or
mov
inc
fwait
cdq
pop
test
out
sbb
jns
add
retf
lahf
sbb
xchg
(bad)
loop
popa
das
pop
call
sahf
mov
sbb
cli
fwait
pop
fsub
lods
dec
jb
retf
test
(bad)
in
xchg
sub
pop
int
cs
sbb
mov
mov
sub
push
mov
repnz
ins
pop
push
ret
dec
std
xchg
inc
adc
push
cmp
and
iret
xchg
int3
lods
sahf
std
push
iret
xchg
loop
loopne
jns
pusha
(bad)
fucomip
or
lahf
fwait
scas
mov
mov
push
pop
push
xor
adc
mov
bound
add
test
movs
int3
xchg
jne
sub
inc
std
imul
jl
mov
jae
ret
stos
sahf
mov
inc
gs
pusha
inc
xor
test
(bad)
les
xor
mov
sbb
int
or
into
push
and
add
stc
xchg
sbb
hlt
mov
mov
daa
push
lods
das
mov
lahf
cs
pop
test
xchg
mov
in
das
adc
cmps
sub
mov
sbb
jmp
dec
test
mov
call
sbb
jne
(bad)
inc
add
push
ins
sbb
sub
mov
shr
adc
jbe
inc
pop
test
dec
push
fs
pop
mov
iret
or
imul
and
jecxz
mov
pop
leave
(bad)
stc
cmp
(bad)
inc
jecxz
vpshufd
sub
ret
jmp
shr
mov
adc
push
repnz
das
sub
idiv
out
les
inc
cs
inc
adc
lds
mov
xor
mov
dec
xchg
not
repz
mov
jg
mov
or
enter
fdivrp
test
jns
cmovge
or
(bad)
cwde
mov
dec
inc
iret
rcl
dec
sbb
cmp
call
or
je
add
fnclex
jne
xchg
mov
bound
inc
mov
int
lahf
adc
retf
inc
popa
push
aad
ins
push
adc
jne
sub
and
mov
loopne
ins
leave
call
lock
xchg
mov
les
rcl
jl
arpl
lahf
inc
int
mov
imul
loope
xchg
ss
adc
jnp
jle
cld
nop
std
mov
adc
cmp
out
push
hlt
outs
scas
outs
lahf
rcr
add
(bad)
fisubr
fisub
into
add
mov
jmp
ins
xchg
pop
movs
loopne
push
loop
jmp
test
sar
clc
and
inc
mov
mov
int3
jmp
mov
sub
gs
sbb
mov
test
(bad)
aas
dec
or
fimul
xchg
fs
inc
and
out
mov
push
loopne
les
and
and
jl
lahf
addr16
inc
adc
jns
inc
mov
js
hlt
push
or
adc
xor
pop
xchg
imul
adc
imul
xchg
imul
bound
shl
sub
lock
scas
sub
shl
shl
lods
in
and
mov
mov
inc
pop
iret
add
fdivr
pop
test
in
pushf
loope
sbb
jae
mov
mov
aam
pop
xchg
inc
fldcw
jecxz
adc
ins
fmul
fisttp
(bad)
into
nop
mov
sbb
fisubr
and
pop
fnstenv
sbb
or
mov
fld
jo
repnz
xor
lock
pop
sub
aaa
sub
pop
sar
lahf
mov
sub
mov
add
inc
or
mov
xchg
xchg
into
dec
mov
push
cmps
push
mov
(bad)
pop
in
push
adc
stos
imul
fild
mov
iret
jns
out
pop
xor
add
inc
enter
dec
std
pusha
into
sub
mov
imul
sti
ret
push
stos
jbe
add
sbb
ins
adc
call
mov
in
ds
loop
mov
fisub
jne
stos
sub
pop
je
cli
pop
test
xchg
mov
cmps
repnz
mov
sbb
add
pop
adc
jg
inc
xchg
push
repz
mov
inc
or
adc
jecxz
rsm
enter
fist
push
(bad)
into
push
add
push
add
aaa
inc
jbe
daa
es
jnp
test
xor
dec
push
je
ja
mov
pop
imul
jl
mov
arpl
cmp
repz
es
push
add
push
mov
push
clc
mov
sbb
jge
pop
mov
jne
pop
movs
push
or
fldenv
mov
jo
jo
adc
fnstenv
inc
mov
push
sbb
sbb
cli
pop
dec
nop
jp
pop
retf
xor
ins
int
push
cwde
add
push
aaa
stos
xchg
lods
fcom
ffree
ret
test
and
das
call
jb
jg
adc
push
cmp
and
pop
jnp
cmp
std
dec
xlat
repz
stos
mov
pop
mov
xor
retf
loop
inc
mov
aam
sub
not
push
mov
jmp
cmp
push
cmp
ret
shl
movs
cmc
es
imul
mov
jo
push
dec
push
es
inc
xchg
inc
test
sub
sar
loop
inc
xor
clc
les
loop
mov
stos
stc
sbb
inc
mov
jmp
mov
xchg
mov
ja
sub
add
mov
out
shl
add
sub
mov
mov
sub
or
(bad)
sub
hlt
movs
scas
imul
jle
imul
in
scas
hlt
int3
ss
xor
push
(bad)
pusha
inc
mov
in
or
out
test
hlt
jo
jecxz
xor
ficomp
inc
cli
cmp
jp
cmps
and
(bad)
js
stc
test
mov
push
push
sub
addr16
cmp
push
ss
popf
(bad)
iret
cs
xor
ins
stos
xor
shl
leave
(bad)
pop
mov
icebp
jbe
ret
lock
mov
das
sti
add
mov
dec
add
push
pop
mov
int3
jo
(bad)
jmp
add
xor
ins
rol
imul
loope
add
stos
inc
loope
repnz
sub
mov
mov
inc
cmps
pusha
das
mov
jmp
add
lods
inc
cmps
call
(bad)
or
add
in
lds
sar
cwde
mov
out
or
adc
or
ret
mov
sub
sahf
push
pop
out
cmp
mov
daa
lahf
xor
xchg
daa
sub
mov
dec
cld
push
std
pushf
mov
jecxz
add
sub
sbb
retf
sub
sub
call
sub
mov
icebp
popaw
adc
and
or
aas
or
pop
outs
and
scas
and
imul
jne
clc
jmp
or
add
jg
std
pop
in
push
xor
xchg
bswap
sahf
adc
cmp
pop
bound
pop
iret
ja
jle
sahf
(bad)
mov
and
aam
ds
out
sbb
scas
inc
stos
addr16
dec
bound
hlt
inc
retf
or
xlat
pop
push
into
mov
mov
dec
lods
jmp
xor
sar
popa
and
aad
mov
mov
ret
push
(bad)
outs
push
imul
rol
mov
btr
cmp
ss
dec
mov
add
mov
les
call
xor
mov
add
pop
std
test
or
sbb
out
mov
popa
dec
xchg
sbb
cmc
js
cmps
push
and
or
bound
cmp
cmp
sar
xor
jo
push
mov
xor
pusha
dec
or
mov
dec
stos
cli
fistp
and
and
ins
cmc
inc
lahf
retf
sub
cmp
iret
test
push
mov
js
dec
pop
cs
fisttp
fiadd
(bad)
jne
fcom
mov
dec
pop
out
cmp
je
out
arpl
fwait
iret
fldlg2
or
fld
xchg
ins
fistp
loopne
mov
xchg
pop
xchg
fidiv
shl
sub
mov
and
iret
sub
sbb
enter
ins
movs
fnstenv
(bad)
aam
lock
mov
ret
(bad)
das
inc
mov
or
inc
ins
sbb
rcr
in
sbb
dec
fnstsw
pop
sbb
or
lock
test
les
cs
mov
pop
xchg
mov
sbb
inc
and
inc
push
in
mov
pusha
push
test
stos
pushf
push
jmp
ja
in
xor
es
push
cmp
ja
test
jg
add
dec
jle
adc
mov
pop
fdivr
fsub
adc
rcl
jns
test
imul
pop
or
mov
adc
dec
jmp
adc
frstor
loop
mov
fcmovbe
lds
push
movs
jnp
and
jg
pusha
sub
jge
repnz
out
push
imul
retf
cmp
sbb
push
stc
adc
jmp
(bad)
and
ret
adc
fld
cmp
into
int
jae
ret
pop
js
inc
sub
into
push
sbb
xor
rcr
mov
add
or
or
movs
sub
jge
cmp
mov
cs
(bad)
jb
adc
xchg
xchg
jb
leave
adc
add
cli
imul
out
aaa
xchg
scas
ds
add
push
jle
es
stos
pop
lods
fidiv
xor
loope
dec
sub
push
pushf
jmp
sub
(bad)
imul
mov
fwait
jmp
lods
scas
je
outs
repnz
test
ds
or
and
int3
rcl
push
pop
jle
jl
mov
mov
(bad)
int
cwde
fmul
cmp
sti
adc
inc
dec
loope
adc
cmc
jno
xchg
mov
iret
xchg
movs
and
push
scas
adc
fimul
push
test
imul
pusha
push
jns
jmp
mov
mov
mov
mov
sub
js
gs
outs
dec
arpl
aad
mov
aad
and
xchg
pop
sub
je
push
dec
imul
pop
or
pusha
idiv
mov
xor
nop
cwde
push
in
stos
sub
add
dec
mov
sbb
das
pop
push
lahf
mov
retf
sub
fcmovu
mov
test
out
test
add
mov
xchg
das
test
dec
xchg
imul
out
push
js
rol
(bad)
pop
sti
hlt
jmp
popf
int3
movs
lahf
sbb
xor
and
xor
push
std
cmp
dec
(bad)
adc
jmp
and
into
rol
fiadd
mov
movs
jb
xchg
dec
mov
xchg
ins
ret
clc
or
int
cwde
mov
cmp
mov
loopne
hlt
xlat
push
enter
dec
push
xchg
xlat
pop
pusha
das
mov
pusha
fcomp
aas
lods
cld
mov
mov
xor
xor
push
(bad)
mov
frstor
jp
scas
cs
cs
adc
retf
mov
js
(bad)
ficomp
aas
(bad)
sub
sahf
or
mov
pop
push
out
or
xor
xor
cdq
lods
or
aad
pop
push
(bad)
jnp
cmp
cmp
inc
pop
daa
or
pop
inc
out
sar
adc
jno
adc
sub
bound
add
clc
aad
xor
aas
cmp
mov
aaa
xlat
(bad)
into
inc
fldenv
xchg
lds
push
rol
adc
mov
and
sbb
(bad)
jns
fistp
mov
sbb
test
sbb
test
fidiv
and
jle
adc
cmp
mov
mov
push
and
push
add
cmps
rol
das
pop
retf
pusha
pop
es
cmc
adc
movs
inc
jnp
mov
adc
dec
jae
outs
mov
push
adc
fwait
cmp
xor
push
pop
jge
mov
retf
cmp
adc
pushf
jbe
xor
popf
or
mov
fisttp
loopne
inc
adc
jle
data16
add
dec
jo
int
push
outs
add
pop
in
or
mov
add
inc
and
or
retf
cwde
sub
adc
xor
sub
pop
neg
out
aam
cmps
sti
jge
or
(bad)
bound
scas
mov
mov
ss
int
sbb
imul
add
int3
cdq
sahf
adc
int
retf
mov
movs
fsub
sbb
call
pop
jbe
push
mov
in
stos
(bad)
repz
or
repnz
out
test
and
(bad)
dec
add
mov
sub
xor
call
sbb
inc
sub
inc
(bad)
push
sbb
add
cmp
out
sub
rcl
dec
fsubp
inc
dec
int
push
outs
fild
repz
retf
out
or
fdivr
add
xchg
lea
pop
fwait
enter
xchg
into
pop
ins
ror
(bad)
ja
mov
cmp
lods
or
mov
cdq
js
push
scas
into
sti
cmps
sbb
ffree
test
int3
dec
cdq
mov
mov
fcomp
mov
push
mov
sbb
fist
lahf
mov
int3
cmc
mov
repz
adc
into
mov
cwd
mov
adc
cmp
inc
pop
test
outs
daa
sub
fiadd
push
dec
pop
xchg
nop
shr
out
cmp
mov
std
retf
cmps
or
pop
add
adc
cmp
sub
push
jp
sub
(bad)
or
repnz
jb
test
add
xchg
aam
and
test
idiv
pop
mov
out
inc
(bad)
mov
ds
fisub
pushf
sub
test
mov
fadd
lea
jge
jge
adc
jle
fnstcw
out
sbb
or
ins
xchg
push
mov
ds
aaa
or
mov
jle
(bad)
icebp
(bad)
mov
hlt
jmp
fst
movs
fwait
add
nop
sbb
(bad)
mov
mov
push
repnz
ss
cmp
enter
repnz
dec
add
jle
push
fmul
sub
xchg
add
fistp
ret
cmp
jle
jae
push
cmp
in
xchg
xlat
rol
ffree
push
not
(bad)
sub
mov
push
xlat
scas
fisttp
mov
sahf
adc
movs
popf
xchg
ja
into
mov
xlat
xor
leave
fxch
xor
jne
mov
cmp
mov
test
cdq
jmp
pop
mov
fsub
dec
nop
out
pop
js
fdivr
xlat
add
add
stos
clc
push
stos
pop
mov
jge
data16
sub
push
mov
dec
js
test
ficomp
fwait
aaa
jmp
test
dec
sar
mov
das
mov
pop
cmp
xchg
hlt
leave
int
ret
mov
and
cmp
or
push
push
xor
ss
scas
sub
jo
pop
pop
mov
out
lods
pop
xchg
jge
scas
clc
mov
dec
push
out
push
jl
add
(bad)
pop
and
adc
adc
sbb
imul
mov
daa
mov
rol
add
dec
adc
fsubr
out
adc
imul
sub
or
jmp
sbb
int
pop
stos
push
xor
ds
xchg
jnp
scas
add
test
mul
mov
jp
or
jp
cmp
mov
cs
clc
adc
cmp
addr16
and
xchg
sbb
lods
enter
js
sbb
outs
test
out
jne
cmp
ss
call
fdiv
je
test
cmp
pop
enter
cmp
dec
cmps
stos
pop
aam
iret
scas
mov
cwde
push
inc
mov
xor
pop
dec
nop
in
pop
movs
into
arpl
jne
or
cmps
xor
loop
or
xor
es
test
inc
xchg
ret
push
mov
cdq
pop
add
ds
or
stos
xchg
adc
out
stc
adc
sbb
leave
add
sbb
mov
xchg
fninit
mov
out
pushf
cs
lahf
or
shl
sub
pusha
inc
movs
dec
adc
jne
sub
lods
dec
test
loopne
or
movs
sub
into
sub
sbb
mov
out
cmp
push
sub
in
jne
stos
push
shl
das
cmp
dec
mov
inc
retf
fisub
lods
sbb
dec
xor
xor
clc
mov
retf
ins
dec
dec
je
ret
pop
cmp
inc
adc
(bad)
mov
and
xor
leave
scas
movs
imul
fisttp
xchg
jne
cmc
ins
cmp
dec
loop
push
push
fldenv
sbb
dec
xor
sbb
push
push
loope
push
fwait
jbe
sbb
int
add
repz
fcomp
inc
popf
rol
xchg
dec
jb
ficomp
pop
bound
scas
and
cmps
loopne
jnp
or
mov
daa
out
das
pop
out
jnp
xchg
icebp
add
pop
push
pop
dec
dec
inc
inc
ja
and
inc
xor
cld
push
jp
xchg
loopne
imul
and
mov
ss
test
adc
loopne
mov
test
movs
out
pop
(bad)
jmp
push
xchg
cmp
jge
adc
mov
xor
mov
jge
clc
ss
or
dec
out
stc
clc
mov
scas
sub
inc
in
vmwrite
leave
mov
(bad)
mov
in
out
mov
push
mov
enter
mov
add
cmc
in
gs
call
ss
ja
add
int
xchg
loop
push
pop
stc
test
mov
push
in
jbe
mov
cwde
sub
int3
adc
xor
pushf
scas
rcr
cmp
cwde
add
mov
xchg
test
xchg
add
cmps
add
mov
adc
daa
lahf
sub
pop
or
out
in
fcmovne
bound
cmp
mov
iret
or
or
mov
add
cmp
idiv
shl
sub
mov
inc
and
jae
add
ror
xchg
push
(bad)
jl
pop
fwait
and
ret
int
cmp
or
inc
inc
ins
ror
not
adc
xchg
stos
cmp
inc
neg
mov
inc
mov
dec
js
jp
jo
dec
xor
add
jno
inc
xchg
mov
sar
ins
jne
mov
lea
lds
hlt
mov
add
adc
inc
inc
leave
arpl
sbb
popa
or
bound
out
out
mov
mov
aam
mov
aas
repnz
pushf
mov
in
retf
int3
dec
std
dec
not
daa
mov
mov
mov
mov
add
push
sbb
cmp
mov
sahf
add
sbb
sub
lds
jp
adc
retf
xchg
push
loope
mov
jmp
add
fldcw
sub
es
mov
cld
test
ret
fwait
out
xchg
cmp
lods
ins
xchg
in
xor
sub
leave
xchg
lods
add
mov
push
add
push
cmc
and
push
push
test
shl
and
pop
ret
adc
add
cwde
sbb
mov
sbb
iret
fiadd
cmc
popa
dec
dec
fdiv
popf
fiadd
loopne
sub
jb
popf
sub
mov
(bad)
mov
fxtract
sub
push
call
fsubr
add
push
mov
and
add
xor
call
jp
loop
into
(bad)
mul
dec
mov
push
int3
jo
(bad)
pop
or
(bad)
ins
in
aad
pop
add
sub
xchg
sub
xor
or
gs
lahf
loopne
int
mov
pushf
xchg
jle
push
mov
shr
adc
mov
xchg
(bad)
jae
fdiv
dec
sbb
int
or
popa
lods
mov
jmp
cmp
jnp
mov
mov
repz
call
xlat
clc
rol
dec
sub
(bad)
pop
scas
push
aaa
scas
fwait
pop
out
lds
aad
psubq
inc
ret
mov
jg
ins
mov
ja
fild
pop
repnz
cdq
or
idiv
cmps
add
out
int3
and
jl
or
pusha
ins
bound
repnz
ss
rcr
jmp
loopne
cs
mov
add
xchg
test
cmp
inc
nop
mov
dec
stos
inc
aad
jmp
pop
inc
ins
add
stos
dec
push
or
pop
xor
loopne
push
add
and
fdiv
scas
cmp
dec
or
sub
mov
sbb
or
mov
(bad)
pusha
dec
dec
(bad)
inc
ret
loop
(bad)
cmc
out
or
xchg
mov
mov
jne
inc
mov
jne
mov
mov
xor
add
cmp
xlat
lods
xor
fcom
hlt
and
and
in
add
cmp
xchg
mov
xchg
fsub
mov
mov
pop
pushf
lds
pop
pop
jb
cmc
sub
dec
inc
nop
pusha
or
out
cdq
push
int3
imul
xlat
xchg
jb
das
daa
(bad)
fcmovnbe
jmp
int
sub
xchg
cs
(bad)
mov
fs
sahf
cs
mov
xchg
xlat
lds
cmc
jbe
js
leave
repnz
lds
xor
lock
test
pop
retf
mov
cli
add
fnstsw
cld
dec
xor
outs
movs
mov
call
or
and
xchg
movs
cld
outs
xor
push
sbb
cmp
aas
xor
mov
sub
dec
cmc
dec
cs
call
rcl
call
mov
sub
retf
ins
pop
push
imul
in
add
aad
jae
shl
inc
jno
or
out
ror
loope
das
add
ret
lahf
outs
inc
pop
xor
dec
shl
lock
mov
pop
rcr
dec
mov
push
clc
fisubr
pop
jbe
(bad)
mov
stos
mov
jmp
pop
(bad)
mov
popf
push
icebp
sub
jae
test
jnp
cmp
push
and
aam
jb
sbb
adc
(bad)
in
call
push
mov
es
or
fbld
nop
ins
out
sbb
mov
push
add
dec
test
fidiv
jmp
and
fs
xor
and
call
mov
add
cwde
and
retf
sbb
push
sbb
inc
cmc
inc
cmp
dec
mov
daa
pop
pushf
mov
stc
rcr
push
pop
mov
push
(bad)
test
xor
lods
push
lods
lea
fstp
pushf
xor
ficomp
jg
pusha
mov
jo
adc
adc
ins
std
test
test
test
push
icebp
pop
cmp
dec
out
out
or
popf
nop
adc
add
jge
push
jle
sti
test
push
es
inc
rcl
mov
xchg
mov
inc
scas
xor
aam
adc
push
outs
(bad)
cs
in
scas
les
arpl
jge
cmp
mov
cmp
pop
mov
mov
pop
pop
add
push
outs
and
add
inc
xlat
sahf
sti
(bad)
jg
pusha
out
in
jne
inc
fmul
and
dec
adc
arpl
aad
sar
push
pop
mov
pop
xchg
in
cmp
sub
cdq
sbb
je
mov
jg
push
sti
fs
sub
lods
adc
mov
clc
mov
xchg
or
mov
xchg
je
in
ror
loop
inc
dec
call
(bad)
sub
pushf
jno
loope
in
aad
sbb
adc
adc
mov
icebp
adc
out
dec
mov
push
mov
sar
inc
mov
cdq
jae
pushf
or
in
stos
cmp
sub
pop
(bad)
fst
sti
ins
retf
add
cwde
jnp
arpl
dec
ins
sbb
fsub
ins
repnz
in
push
or
call
lods
lock
push
mov
into
aad
retf
retf
xor
loope
push
lods
dec
mov
adc
mov
mov
adc
xchg
mov
repz
ficom
jne
or
push
rcr
add
add
and
mov
out
data16
mov
push
ds
pop
clc
hlt
les
xchg
stos
neg
dec
jecxz
sub
loop
in
adc
adc
add
es
cli
popa
sub
mov
mov
(bad)
pop
xor
fisub
into
arpl
rcr
mov
in
add
cmps
mov
lahf
call
xchg
neg
fadd
pop
xchg
inc
shl
inc
push
loope
jg
(bad)
adc
addr16
push
arpl
les
pop
ins
mov
sub
or
or
inc
je
leave
adc
add
lods
sbb
test
sub
shl
cmp
lea
pop
test
push
je
xchg
mov
inc
test
mov
pusha
fst
sti
loope
sub
add
test
dec
jb
or
or
aam
xchg
xor
and
xor
add
adc
jno
and
fcomi
mov
push
inc
xor
dec
mov
or
jns
push
icebp
test
sub
sbb
in
and
hlt
add
call
and
bound
push
mov
xchg
inc
iret
fisub
and
int
jle
sbb
loopne
js
jl
add
movs
nop
(bad)
cdq
loope
mov
sub
jecxz
or
or
ins
dec
arpl
cmp
in
sub
and
bound
out
call
lods
xchg
dec
aam
sbb
mov
lods
adc
or
inc
xor
iret
inc
daa
cdq
popa
and
retf
push
enter
mov
stc
mov
push
popa
push
pusha
jg
gs
add
pop
jle
repz
cwde
push
enter
sbb
sub
aaa
ficomp
sar
inc
xor
jne
cmps
enter
push
movs
pop
jmp
xor
(bad)
pop
push
sar
sbb
mov
push
(bad)
in
or
rol
and
sar
xchg
sub
aam
aam
scas
add
aas
stos
jo
repz
add
cwde
push
sti
xchg
mov
pop
and
sbb
mov
add
sub
imul
sbb
or
jno
xchg
xchg
mov
sub
or
sub
jb
push
mov
pop
mov
adc
xchg
int3
mov
push
imul
popf
rcl
push
sub
add
or
je
dec
jp
sar
pop
push
inc
clc
fstp
stc
cmp
xchg
pusha
enter
or
test
mov
dec
jl
call
adc
cld
jno
test
add
inc
bound
test
es
jmp
aam
mov
fcom
sub
cmp
push
arpl
and
loope
dec
or
out
cmp
xchg
retf
int
or
sbb
loop
lods
jmp
sbb
pop
stos
dec
adc
or
mov
sub
ret
sub
push
aas
sub
cli
jge
rcl
int
xchg
ret
aas
(bad)
inc
dec
cmc
rol
pop
daa
push
dec
sbb
xchg
stc
es
std
push
dec
and
add
ins
cmp
mov
pop
sub
push
imul
lds
fwait
ins
gs
test
cld
add
call
ins
dec
dec
sbb
dec
imul
scas
jmp
fxch
mov
lahf
repnz
(bad)
sub
bound
shr
mov
sub
mov
xchg
xchg
sub
call
mov
mov
movs
loop
inc
retf
cmp
in
add
xor
loopne
mov
mov
popa
xchg
xchg
push
push
sub
push
lahf
pop
lds
cdq
add
inc
xor
or
dec
adc
call
or
int
into
xor
mov
push
call
cwde
adc
jb
jmp
out
pop
lea
call
xor
pop
xor
fsubr
inc
sbb
mov
jge
jo
aam
repz
adc
jnp
movs
pop
loopne
add
pop
frstor
rcr
dec
jo
or
cmp
jnp
mov
jp
add
cmps
xor
dec
(bad)
pop
ret
mov
fs
test
movs
mov
jmp
in
pop
pop
ficomp
dec
mov
je
mov
fiadd
xchg
int3
xor
out
fist
push
mov
sar
cmp
xlat
pop
jne
cmp
dec
xor
out
sbb
xchg
mov
(bad)
adc
shl
cmp
mov
xchg
arpl
jp
dec
push
cmps
dec
cmps
xor
jnp
test
or
push
(bad)
(bad)
and
mov
add
xor
jge
and
sub
sbb
and
sub
or
cmp
adc
fisttp
jmp
fwait
pmullw
js
stos
add
adc
pop
test
push
retf
xor
loopne
dec
xor
jne
inc
push
adc
mov
repz
jge
pushf
push
push
xchg
cmp
inc
pop
cmps
push
xchg
scas
mov
ins
loopne
xchg
lea
mov
jl
jge
push
test
or
mov
ret
js
movs
mov
int3
in
inc
dec
stos
out
sbb
mov
ss
cwde
jb
cmp
call
jo
shl
mov
repz
nop
scas
cmps
xor
mov
jge
ins
stos
adc
call
xor
xchg
stc
(bad)
xor
jnp
mov
jmp
lahf
pop
adc
retf
loope
xchg
adc
jo
jnp
mov
std
cmp
call
xor
sbb
mov
outs
xor
or
xor
mov
or
inc
xor
add
scas
mov
and
mov
icebp
xchg
cld
add
pop
and
mov
lahf
cs
dec
xor
stc
and
retf
fadd
xchg
ss
ror
push
inc
shl
push
sub
fdiv
push
add
fmul
mov
sub
push
pop
xor
add
or
mov
sbb
shr
xchg
popa
push
xchg
xchg
xchg
mov
(bad)
aad
mov
mov
gs
cld
push
int3
loop
mov
popa
test
lods
add
xor
mov
xchg
jp
shr
xor
adc
push
fldenv
(bad)
mov
xchg
aas
pop
dec
push
ret
push
ds
das
outs
inc
ret
ins
jo
inc
mov
mov
(bad)
(bad)
aad
xchg
mov
push
fstp
sub
push
xchg
sub
mov
jecxz
inc
ret
mov
add
fidivr
cmps
pop
xchg
sar
(bad)
fsub
outs
adc
icebp
add
inc
xor
push
cmp
xchg
outs
dec
jecxz
push
pop
lock
jnp
pop
iret
sbb
cmps
sub
paddd
fisubr
nop
std
dec
inc
loop
ret
ret
outs
arpl
push
fst
test
mov
pop
xchg
push
mov
sbb
cdq
stos
cmp
push
cmc
dec
shl
sahf
shr
cmp
fmulp
sub
push
add
ret
dec
mov
jne
mov
movs
in
mov
cmp
ror
into
cmp
fs
cwde
iret
cmp
dec
cld
mov
and
cmp
dec
clc
call
nop
jge
mov
add
(bad)
js
shl
aad
cli
ins
sahf
rcl
out
pop
pop
inc
rol
push
inc
push
in
mov
mov
xor
adc
std
xor
leave
sbb
adc
call
push
push
jns
cmp
test
xchg
mov
sbb
mov
push
dec
mov
mov
nop
cmp
fmul
mov
jno
cwde
mov
jp
mov
and
icebp
jb
bound
loopne
adc
icebp
iret
shl
in
ret
jl
loopne
push
xlat
jno
fcmovnu
shl
lods
call
and
jbe
mov
mov
jl
xchg
inc
aad
mov
or
(bad)
call
inc
and
aaa
fs
mov
popf
push
xor
rol
(bad)
ret
adc
adc
jecxz
push
jecxz
or
out
add
(bad)
mov
sbb
adc
ins
ret
fldl2e
adc
sub
sub
mov
ja
stc
add
xor
das
jns
and
mov
cs
cmp
xor
aam
mov
ds
rcl
sub
push
xchg
push
ins
sbb
xchg
add
call
(bad)
loope
sub
in
fs
adc
lahf
and
out
cmp
cmc
repz
jmp
jmp
mov
test
push
ins
adc
js
test
and
ret
rcl
sti
xchg
clc
je
sub
in
enter
adc
lock
mov
(bad)
adc
xor
mov
js
retf
xor
xor
pop
cdq
inc
push
and
or
jecxz
pusha
ins
or
fdivr
dec
jno
mov
xchg
outs
fidiv
and
scas
jae
gs
aam
jns
mov
and
pusha
fcomp
mov
bound
ret
adc
jne
leave
daa
and
xor
jno
add
jns
int
push
mov
adc
hlt
sbb
push
ss
cmp
fnstsw
xchg
lea
aad
or
enter
popa
inc
cli
pop
push
mov
pop
aas
das
xlat
jno
clc
or
imul
aaa
adc
sbb
fadd
loopne
mov
mov
cli
das
aas
mov
ss
push
adc
sti
pop
rcr
jecxz
jle
icebp
cmp
mov
popf
aam
dec
icebp
and
enter
pop
pop
not
dec
xor
jne
mov
in
inc
inc
std
sub
mov
cld
and
(bad)
ds
das
jle
mov
fdiv
lods
adc
fisttp
leave
or
sub
into
or
mov
or
mov
rsqrtps
jmp
ret
adc
jnp
mul
pop
test
fcmovnb
adc
in
mov
lahf
xor
push
movs
je
pop
sbb
dec
int
ins
xor
mov
enter
scas
nop
and
scas
pop
das
movs
or
mov
xchg
mov
in
outs
fidivr
rcr
shr
mov
cmp
jecxz
pop
in
sbb
bnd
test
jnp
add
outs
dec
je
das
pop
jecxz
cmps
pop
rcr
mov
mov
inc
or
stos
out
dec
iret
pusha
ret
push
mov
mov
bound
push
inc
and
mov
imul
pusha
xor
sub
jl
cdq
aam
xchg
push
cmps
cmp
xchg
std
lods
inc
jmp
and
pop
push
ss
scas
fwait
cmps
ret
rol
leave
je
push
shl
aaa
push
jae
stos
retf
imul
mov
ins
dec
scas
mov
scas
push
inc
sahf
imul
or
jl
int
add
das
xchg
scas
ds
mov
pop
rcl
rcr
jge
cmps
fdivr
addr16
mov
lods
cmps
in
jae
cmp
fldenv
imul
mov
xchg
push
push
bound
pop
mov
mov
movups
loope
(bad)
clc
cmp
sbb
adc
push
and
sbb
div
push
add
push
pop
mov
xor
repnz
adc
div
in
xor
push
cmp
mov
jnp
jae
mov
inc
xchg
data16
sti
jb
daa
inc
dec
mov
adc
pop
scas
xor
cmps
in
repz
repz
int
add
sbb
xchg
inc
rol
pop
sbb
inc
ror
push
push
outs
jmp
jne
sbb
repnz
xor
pusha
mov
inc
or
je
sbb
ins
sub
xchg
cdq
adc
sub
iret
mov
imul
test
add
ja
adc
cmc
js
popa
(bad)
mov
fsub
sub
mov
mov
sar
in
mov
xor
retf
(bad)
cmc
shl
hlt
mov
sbb
and
push
jb
jmp
xchg
add
adc
leave
loopne
mov
inc
test
loopne
mov
ret
pushf
call
mov
int
imul
sahf
cld
mov
cmp
adc
jle
push
mov
mov
add
xor
mov
int
daa
sbb
fwait
mov
scas
and
xchg
outs
mov
cmc
jno
pop
dec
adc
cmp
sahf
mov
hlt
adc
cmp
ds
xor
into
fisttp
xor
mov
cmc
sti
daa
mov
and
jne
fist
mov
push
sub
jae
das
int3
(bad)
ds
push
xchg
nop
add
pop
loope
xor
popf
repnz
jmp
call
fisub
mul
fisubr
dec
xor
adc
cmp
pop
dec
dec
mov
or
ret
pop
xor
mov
cmp
sbb
movs
nop
sub
lahf
xchg
cmps
push
adc
adc
mov
cld
sbb
out
push
sub
aaa
sti
sahf
adc
in
test
mov
and
inc
pop
pop
mov
jno
xchg
mov
add
xchg
jmp
cs
outs
cld
push
mov
jg
jge
mov
out
loopne
sbb
in
std
xchg
xchg
scas
es
dec
dec
sti
dec
xor
enter
pop
mov
test
stos
add
and
push
inc
xchg
cmp
aad
repnz
call
sar
add
mov
mov
xor
lds
add
fistp
dec
xchg
aaa
ds
jle
jmp
jmp
cmp
adc
sub
movs
jae
not
idiv
xchg
movs
sub
imul
in
sub
add
test
pop
add
pop
les
jne
(bad)
pop
shl
pushf
scas
mov
in
addr16
inc
sbb
pop
add
adc
sub
jae
and
xor
xor
pop
test
pop
cmp
and
and
xchg
lds
mov
and
push
stc
jmp
mov
pop
int3
addr16
iret
jb
arpl
nop
sbb
les
in
or
in
and
ret
add
or
xlat
dec
pop
sub
cli
push
push
or
fidivr
sbb
xchg
inc
add
adc
cmp
sti
adc
nop
sub
mov
xchg
mov
xlat
jge
ja
int3
cmp
or
push
xchg
pop
popf
sub
push
pop
sbb
mov
lea
inc
cwde
sbb
or
ins
or
cmp
xor
push
pop
adc
xchg
retf
aad
lods
jnp
push
scas
popa
pop
(bad)
cli
xor
ss
inc
mov
push
bound
xchg
pop
mov
je
mov
fiadd
rcl
xlat
mov
and
jns
inc
xchg
clc
ja
repz
lods
test
dec
fisub
lahf
inc
lods
outs
test
out
lahf
into
je
lods
outs
xor
out
test
pop
cmps
or
xchg
clc
cli
pushf
inc
ins
aam
xor
xor
jns
xor
pusha
lods
mov
in
(bad)
pop
mov
push
push
(bad)
sbb
sub
out
into
outs
enter
popf
cmps
cmp
push
xor
imul
ficomp
mov
jno
mov
adc
fwait
inc
cld
jb
arpl
mov
jmp
fisttp
stc
jno
hlt
xchg
jge
cwde
iret
cmp
mov
mov
inc
xor
cmp
lahf
fidivr
icebp
xchg
loope
jl
xchg
pop
inc
adc
(bad)
jno
sub
push
xor
fldenv
cmps
add
fucom
adc
ss
xor
scas
xor
mov
aam
je
mov
jp
mov
out
imul
push
neg
into
mov
(bad)
scas
pop
nop
imul
icebp
mov
push
xchg
cmp
pop
cld
imul
es
neg
cmc
test
dec
js
into
xchg
jmp
rcl
jle
cmp
pop
movs
push
lea
mov
outs
adc
jmp
jl
lock
jne
stc
arpl
lock
adc
int3
shl
jb
pusha
lods
add
pushf
ins
ss
and
fld
daa
inc
scas
push
jge
arpl
cmc
push
jbe
sti
mov
cs
push
nop
pop
call
mov
sbb
mov
pushf
xchg
xor
das
lds
loop
adc
bsr
ss
xchg
ins
xchg
scas
aas
fwait
sub
dec
or
jmp
loop
cmp
mov
lds
lods
adc
dec
push
xor
push
or
xlat
test
bound
(bad)
enter
mov
loopne
shl
sub
fistp
jb
dec
mov
xor
mov
mov
sbb
and
add
xor
fucomp
out
aam
aam
imul
pop
(bad)
out
cmp
pushf
ja
sub
dec
sbb
fst
repnz
loope
stos
dec
cli
xlat
pop
jmp
outs
call
xchg
(bad)
mov
in
add
in
mov
test
outs
mov
das
jnp
mov
sub
inc
mov
xor
jo
(bad)
sti
mov
(bad)
lods
jg
dec
inc
sbb
cmc
sti
xor
out
das
daa
or
mov
test
scas
add
leave
or
into
inc
rcr
lds
sti
or
or
dec
xchg
cmp
dec
xor
enter
mov
add
lea
sbb
mov
or
cmp
stos
mov
pop
cmp
into
out
sbb
aaa
push
(bad)
jno
jns
xor
sbb
mov
push
add
or
popf
jns
sbb
mov
pop
inc
outs
nop
mov
call
movs
xor
scas
fstp
in
imul
jno
and
push
cmps
adc
fs
icebp
rcl
sub
int3
les
stos
xlat
test
adc
mov
mov
in
imul
aaa
mov
call
mov
cli
lahf
je
dec
test
in
pushf
je
je
fucom
push
cs
mov
iret
or
jbe
and
push
jmp
push
fwait
push
test
(bad)
sbb
iret
addr16
rcl
dec
dec
dec
sti
xor
pushf
sar
push
push
xor
xchg
mov
mov
fwait
xchg
jp
xchg
push
mov
enter
push
or
mov
rcl
shr
adc
push
xor
scas
cmp
mov
or
ja
(bad)
cmp
out
add
popf
xor
xchg
jno
mov
xchg
adc
(bad)
shl
mov
rcl
sub
lods
int
add
adc
aas
lock
inc
inc
jmp
pop
dec
sbb
inc
pop
and
mov
mov
aam
std
inc
xchg
xlat
ins
ins
sbb
fisttp
bound
pop
xchg
fimul
lahf
sub
push
(bad)
fmul
mov
cmp
push
je
mov
sahf
xlat
jl
in
push
out
inc
ss
inc
and
cld
add
sub
pop
pushf
lods
add
fmul
and
jne
xchg
jns
bswap
mov
ret
dec
cmp
(bad)
idiv
sbb
cs
adc
dec
test
dec
(bad)
push
adc
outs
push
mov
pop
jae
and
jl
dec
xchg
cmp
into
or
aaa
add
mov
(bad)
(bad)
enter
mov
mov
and
cmp
adc
rcl
scas
xor
pop
jne
mov
scas
add
daa
punpckldq
jecxz
aas
sub
fisttp
jl
into
(bad)
out
(bad)
sti
sub
add
xchg
scas
lods
in
and
arpl
cmps
adc
cmc
(bad)
sub
aad
test
mov
in
in
cmp
sbb
sub
popf
mov
repz
pop
pop
cmps
inc
shl
jp
out
pop
(bad)
fsubr
dec
cmp
inc
mov
jae
xchg
(bad)
xor
test
push
js
sar
test
clc
inc
and
mov
push
(bad)
mov
out
dec
sahf
pop
stos
adc
in
mov
add
push
cdq
xor
mov
sti
idiv
inc
jo
arpl
(bad)
mov
and
or
mov
(bad)
leave
lea
jmp
cmp
push
or
adc
fisubr
pop
sbb
retf
aad
cli
gs
mov
jno
in
mov
and
or
mov
fwait
pop
cmp
add
fcmovnb
fs
inc
push
sub
mov
jno
push
fs
retf
pop
int3
inc
ds
pusha
xchg
shl
or
clc
mov
cli
gs
and
shl
dec
jecxz
bound
sbb
ror
adc
mov
das
cs
and
stc
mov
and
ret
aaa
cmps
pop
je
retf
int
dec
jmp
xchg
nop
xor
inc
ins
xchg
out
cmp
jecxz
retf
mov
test
dec
jge
jnp
jl
jo
imul
aaa
mov
(bad)
idiv
(bad)
iret
mov
jo
mov
adc
cdq
pop
test
dec
mov
dec
imul
add
adc
movs
push
fistp
push
or
sub
xchg
fs
arpl
push
mov
movhlps
outs
pop
jle
xchg
pop
mov
fld
jb
jmp
xor
jbe
jle
cld
jbe
add
jne
ins
das
jmp
inc
fist
(bad)
sub
and
push
sub
mov
arpl
aam
es
mov
outs
push
inc
hlt
cli
pop
test
mov
enter
xor
xlat
jle
cmp
xchg
scas
xor
adc
lock
sti
jmp
xor
xlat
icebp
cmp
pop
mov
xor
dec
outs
cdq
push
movs
jmp
(bad)
jmp
dec
jo
in
add
inc
dec
into
mov
and
imul
push
mov
les
ds
rol
aam
fcmovnb
jns
mov
repz
mov
dec
mov
or
mov
inc
add
mov
add
shl
jp
fnstenv
pop
mov
sbb
outs
xor
jnp
xchg
or
pop
and
dec
in
adc
(bad)
arpl
(bad)
jmp
mov
cs
lea
retf
jno
push
(bad)
and
push
lahf
mov
adc
jnp
pop
xchg
pop
retf
nop
mov
or
add
jge
ds
movs
mov
sub
fistp
cmps
mov
icebp
add
inc
movs
adc
pop
lahf
add
add
mov
(bad)
icebp
pusha
sub
xlat
neg
movs
ds
mov
jnp
sti
dec
int3
cmp
mov
xor
in
leave
js
jbe
sahf
and
movs
ins
sbb
(bad)
fmul
jmp
sti
popf
lea
neg
ficomp
jge
retf
iret
mov
add
movs
test
inc
xor
in
mov
scas
stos
pusha
cld
sub
(bad)
xor
sbb
pop
test
pop
xchg
cmp
adc
sbb
out
push
enter
fdivr
or
aaa
mov
popf
mov
mov
mov
shl
cwde
dec
add
mov
bound
push
ror
adc
retf
or
aam
movs
lods
xchg
aas
mov
pop
shl
aaa
adc
dec
xchg
leave
into
lods
adc
jl
test
jae
and
in
xor
gs
xchg
(bad)
ficom
jno
jmp
ins
push
loopne
(bad)
rcr
jb
dec
jmp
xor
cmp
xor
xchg
xlat
test
jecxz
(bad)
adc
push
std
aad
outs
rcl
pop
push
repnz
popa
pop
xor
loope
mov
or
pop
pop
fisubr
adc
dec
xchg
repnz
and
enter
shl
cs
mov
cmp
test
push
rcl
jns
cmp
call
dec
xchg
push
inc
stc
shl
pop
pop
mov
sub
in
and
test
out
add
lea
xor
mov
mov
ret
sbb
xchg
sub
dec
mov
mov
inc
fisub
popf
pop
pushf
push
mov
add
popf
stc
dec
or
jl
arpl
dec
jmp
fadd
dec
sub
pop
scas
(bad)
pop
cmp
fmul
call
xchg
mov
es
adc
xor
pushf
test
jmp
in
fbstp
xor
xor
push
pushf
sub
xor
das
push
sbb
jmp
push
sti
fs
pop
sahf
loop
icebp
mov
(bad)
push
sub
sahf
push
lahf
push
add
fistp
sbb
aaa
std
mov
adc
lock
loop
sub
outs
in
fld
xor
add
dec
mov
outs
sub
sbb
adc
mov
mov
loop
sbb
loope
sbb
fs
fs
cld
mov
mov
stos
push
fdivrp
fwait
in
xchg
xor
adc
mov
or
aaa
hlt
jl
test
(bad)
and
mov
push
and
and
xchg
out
inc
push
hlt
ftst
mov
lds
bound
fs
add
ret
or
test
jne
xor
push
leave
adc
das
push
mov
iret
inc
fst
or
movs
mov
out
xor
add
mov
imul
jae
das
out
stos
pop
fsubr
sti
outs
pop
xchg
icebp
fcomp
out
shr
in
lods
jmp
imul
popf
fs
cmps
adc
out
mov
push
and
mov
or
test
mov
int
sbb
mov
mov
mov
push
(bad)
outs
xchg
and
inc
push
div
outs
(bad)
test
jns
cmp
push
call
add
xchg
pop
xor
(bad)
nop
adc
add
lds
cmp
sbb
jge
mov
push
xchg
shl
les
sbb
aad
sub
imul
fsub
or
add
shl
(bad)
aam
in
jmp
sbb
ror
mov
cwde
push
cmp
loop
mov
or
xor
cmp
cmp
repnz
mov
jecxz
shl
test
push
and
cmp
inc
cmp
sub
mov
push
sub
outs
dec
test
pushw
pop
js
retf
jge
mov
mov
lock
sti
mov
movs
adc
dec
loop
cmc
hlt
dec
sub
pop
aaa
sti
inc
iret
clc
call
into
sar
cmp
(bad)
mov
sbb
xchg
ja
mov
pop
mov
add
into
enter
adc
cmp
ins
mov
sar
daa
stos
mov
mov
loop
push
test
mov
mov
mov
dec
xor
ret
xor
mov
into
retf
leave
sbb
shl
push
outs
adc
adc
adc
or
inc
inc
les
mov
cdq
and
push
es
adc
out
dec
and
lods
pop
popa
outs
mov
mov
int3
loopne
mov
daa
sbb
pop
inc
add
mov
imul
pop
mov
imul
dec
push
clc
xchg
std
cwde
push
fcomip
fwait
div
lock
rcr
lea
cmps
jae
mov
dec
jecxz
daa
inc
scas
mov
(bad)
xchg
fild
rcl
fnstsw
(bad)
pop
sub
pop
gs
push
push
in
sbb
enter
in
push
xchg
fmulp
and
aas
nop
cmp
jmp
adc
outs
es
movs
jle
mov
adc
int
stc
cld
mov
je
mov
adc
push
je
push
and
cmp
and
jae
stos
out
call
popa
mov
inc
xor
test
cmps
add
jl
push
inc
adc
imul
and
pop
test
add
jae
and
mov
adc
add
int3
pop
out
cmp
out
mov
or
adc
sub
mov
dec
push
mov
ror
jb
out
pop
fsub
pop
adc
mov
aad
xchg
jbe
xor
repnz
xor
fxch
adc
jmp
jp
xchg
test
mov
(bad)
int
fisub
push
(bad)
popa
stos
jno
aam
jb
mov
mov
jb
cmc
jnp
mov
push
retf
mov
or
lahf
jmp
mov
xor
adc
add
pop
jg
stc
mov
lea
xchg
cmp
enter
mov
jb
cmps
cmps
lods
pop
and
(bad)
repnz
es
rcr
jo
xor
xlat
adc
push
call
leave
lods
fld
add
push
mov
dec
fist
cmp
mov
fwait
shr
cs
outs
ret
jmp
call
adc
out
fcmovb
inc
test
pushf
add
les
jg
loopne
or
mov
out
(bad)
xchg
mov
push
movs
cmp
movs
(bad)
in
add
sub
jle
mov
outs
fisttp
movs
push
sub
cmp
xor
iret
repnz
cmp
shl
(bad)
pop
out
cmp
fld
int3
mov
(bad)
pop
outs
mov
dec
jae
or
sahf
gs
(bad)
mov
shl
dec
test
rcl
push
adc
xchg
dec
(bad)
int
mov
jo
mov
jmp
inc
adc
jmp
lds
cmp
dec
and
lds
cmps
push
or
push
clc
adc
adc
je
pop
adc
fisttp
mov
loop
inc
dec
jae
mov
mov
dec
fwait
iret
frstor
mov
cmp
mov
stc
mov
out
mov
sbb
sar
jo
add
mov
dec
inc
push
test
test
lock
push
or
jl
ds
adc
and
sub
cmp
outs
lea
cdq
sub
push
push
cmc
mov
(bad)
imul
imul
mov
sbb
cmps
call
jnp
ins
sbb
cli
pop
(bad)
pop
add
shr
cmp
cmp
(bad)
js
pop
cld
int3
imul
lock
cmc
or
sub
aaa
out
mov
ss
xor
pop
push
mov
lea
or
mov
mov
cmp
pushf
imul
sub
pusha
cmp
push
add
jb
inc
pusha
dec
sahf
mov
mov
xor
(bad)
cmp
call
or
push
push
mov
in
js
popf
jnp
inc
int
jbe
xchg
mov
mov
xor
mov
(bad)
sti
jns
push
jno
xlat
std
push
test
and
rcr
ins
pop
add
cmp
jg
retf
arpl
aaa
jmp
test
retf
xchg
pop
add
pop
xchg
push
sbb
push
mov
pop
out
inc
mov
cwde
add
imul
mov
or
or
mov
jo
xchg
neg
ret
xlat
scas
outs
lods
data16
xor
mov
xor
into
retf
cmps
push
dec
mov
mov
mov
mov
push
inc
ret
call
jle
out
push
add
adc
xor
out
lea
adc
inc
or
data16
push
cmp
pop
scas
sbb
adc
jmp
imul
nop
mov
sahf
xchg
sub
dec
lahf
xlat
loope
icebp
je
sbb
lahf
daa
cmp
sahf
out
push
(bad)
in
es
das
mov
outs
jnp
dec
mov
dec
cmp
mov
mov
xchg
sahf
pusha
cmp
push
jno
push
lea
pop
pop
jmp
aad
and
jae
xor
cmps
push
sub
imul
sti
mov
retf
inc
cmps
ds
and
mov
xor
stos
cmp
push
push
inc
jmp
sbb
sbb
movq
xor
add
lods
pop
inc
imul
lods
scas
sbb
xor
jl
mov
xor
fsub
dec
xor
sbb
test
mov
or
icebp
jno
pop
rcl
sub
push
lock
jmp
sbb
sub
fldcw
(bad)
jmp
mov
movs
sbb
and
mov
in
add
xor
movs
out
xchg
push
popf
cmp
into
push
cmp
jl
out
pop
dec
inc
jmp
jmp
repz
jecxz
repnz
mov
inc
jmp
popf
adc
hlt
and
sbb
mov
cmp
and
fistp
cmps
test
test
test
cdq
ror
adc
mov
fsub
push
jle
stc
adc
retf
or
or
inc
push
test
sub
jae
(bad)
jge
jbe
sbb
mov
inc
sbb
jnp
push
sti
adc
idiv
outs
jg
test
in
xchg
cmp
mov
jecxz
inc
fidiv
icebp
adc
mov
in
adc
mov
adc
fcomp
cmp
xlat
shl
or
sub
or
push
pushf
push
pop
stc
out
mov
pusha
mov
repz
retf
add
fiadd
xor
pop
inc
sub
popf
pushf
sub
xchg
(bad)
push
fcomip
test
cmc
mov
and
xchg
sti
jno
js
ficomp
dec
add
dec
in
jno
jmp
out
leave
cmps
lods
sub
(bad)
ins
inc
out
inc
idiv
push
mov
lods
test
test
and
xlat
xchg
jmp
es
rcl
popa
sbb
add
outs
adc
mov
mov
mov
rcr
and
xchg
inc
push
sub
popa
fisubr
xlat
push
rol
pop
adc
call
retf
mov
pop
clc
xor
cli
xor
sar
inc
cmp
ins
cmp
xlat
ret
js
in
into
icebp
in
mov
adc
or
and
aaa
mov
into
xor
int3
std
and
mov
add
or
pop
paddd
das
mov
push
jl
movs
rol
sub
out
outs
mov
xor
stos
xchg
sub
mov
fdivr
inc
ret
and
adc
pop
leave
push
lods
loop
fldcw
sub
cs
jne
xchg
aad
in
lds
xchg
bound
(bad)
arpl
mov
push
add
or
inc
dec
dec
sub
ins
xchg
jno
ret
pop
leave
(bad)
imul
xchg
popf
aaa
stc
je
add
movs
mov
outs
jne
scas
cmp
test
inc
or
sbb
jae
dec
push
mov
rol
push
mov
cmp
xchg
or
dec
jle
mov
xchg
mov
pusha
cs
retf
enter
jnp
imul
and
cs
lds
sub
(bad)
adc
in
cmps
or
adc
cli
test
xor
adc
xchg
dec
mov
jmp
pop
mov
std
inc
cmps
fs
xor
dec
je
dec
outs
or
aam
dec
cmp
sahf
jp
and
pop
loop
scas
or
mov
or
hlt
and
int3
fs
push
mov
lea
(bad)
clc
inc
jmp
outs
pop
in
rol
jne
rol
jns
rol
adc
fmul
dec
pmuludq
and
dec
inc
jo
jle
mov
add
iret
cmps
ss
pop
fwait
daa
add
jmp
stos
xor
cmps
pop
xor
add
adc
jl
dec
jbe
scas
retf
pop
sub
mov
jl
int3
popa
loop
jno
inc
sbb
lods
(bad)
push
ror
ins
stc
inc
add
ss
xchg
call
or
adc
and
jno
dec
test
mov
js
enter
cli
fld
inc
ins
fistp
mov
ins
movs
arpl
sbb
test
jg
xor
test
sub
jg
shl
(bad)
call
inc
cmp
mov
pop
(bad)
aas
pop
and
bound
mov
sub
retf
sbb
push
push
and
in
test
and
dec
ds
movs
push
call
test
push
cwde
ficom
add
sbb
mov
stos
dec
fild
ret
add
loopne
mov
mov
add
in
mov
and
xchg
xchg
sub
mov
push
push
into
push
xor
dec
jb
in
(bad)
hlt
jecxz
mov
pop
mul
add
cld
cmp
lods
xchg
mov
sbb
push
repz
pop
and
aam
bound
sahf
lock
shl
cmp
sbb
mov
pop
cs
adc
div
fist
cmp
daa
pop
sub
pop
push
out
sub
pop
adc
mov
mov
loopne
shl
fs
jl
fcmovbe
dec
imul
mov
icebp
(bad)
lock
or
inc
scas
int
and
jo
pop
mov
dec
out
mov
add
jb
je
push
cdq
sub
add
inc
xchg
and
mov
mov
dec
xor
sub
xchg
jb
xor
xchg
mov
cdq
sub
imul
adc
out
or
pop
dec
mov
xor
daa
pop
ror
or
clc
fst
and
sti
in
xchg
jo
add
inc
js
mov
gs
mov
imul
fsub
(bad)
push
imul
lds
rep
mov
cs
aas
test
xor
push
ror
dec
mov
jo
fidiv
xchg
icebp
nop
scas
xchg
jmp
out
cmp
xchg
mov
fmul
stc
mov
cmp
pop
dec
mov
movs
leave
mov
or
cmp
gs
fwait
cmp
and
lock
xchg
ret
xchg
push
or
add
test
pop
xor
or
pop
(bad)
jbe
repz
inc
out
mov
mov
or
xchg
(bad)
adc
add
jp
js
pop
aam
push
lods
ret
and
ins
inc
push
inc
fisubr
lock
enter
jnp
movs
popa
and
jne
push
push
inc
cmp
sar
mov
and
xor
xor
dec
push
xor
fsubr
shl
jns
loope
leave
addr16
pop
adc
push
and
or
shl
mov
inc
mov
mov
jne
imul
and
or
jns
jmp
adc
cwde
call
jle
rcl
jbe
js
inc
push
jno
jmp
loope
pop
fidivr
mov
cmp
pop
imul
mov
dec
cwde
mov
mov
add
cdq
sub
iret
push
xchg
scas
xchg
or
mov
xor
lods
int
sti
mov
jno
cs
mov
push
mov
add
scas
mov
and
ffreep
enter
shr
dec
icebp
int
lds
lods
xchg
add
ret
mov
and
mov
xor
pop
mov
and
int
bound
add
es
jl
jno
dec
mov
push
mov
or
test
test
inc
icebp
add
lea
fistp
xchg
test
fsub
push
adc
retf
in
ret
popf
das
dec
sbb
mov
dec
cmc
mov
dec
sub
rol
int3
test
jle
mov
or
xchg
dec
mov
mov
or
adc
mov
or
stc
adc
loopne
push
call
sbb
retf
push
es
test
inc
jg
aam
add
sbb
dec
adc
jo
hlt
pmulhw
bnd
imul
stos
adc
mov
adc
lods
sub
push
sub
imul
add
add
jmp
mov
std
or
test
(bad)
or
sbb
xlat
or
push
hlt
out
dec
xchg
xor
mov
lahf
mov
mov
push
mov
lea
fistp
ins
fbstp
test
iret
jecxz
imul
xor
xchg
xchg
out
cwde
cli
mov
adc
lock
out
and
movs
dec
shr
mov
popf
retf
imul
pop
mov
ja
push
sbb
mov
iret
pop
mov
and
xchg
(bad)
xlat
pop
adc
sub
movs
pop
pop
mov
addr16
add
sub
inc
imul
adc
xchg
(bad)
int3
rcr
iret
movs
aam
adc
mov
leave
div
pushf
les
mov
push
inc
pop
xor
mov
test
mov
adc
sub
idiv
mov
add
fild
pushf
cmc
mov
cmp
xchg
adc
fist
cmp
pminub
shl
int
or
fsubr
ss
aam
fist
jecxz
int3
in
imul
inc
and
rcr
test
shl
add
dec
pop
jns
xor
and
mov
add
loope
aas
cwde
cdq
cli
and
imul
mov
test
lds
or
jg
ret
cmps
and
sub
pop
xor
loopne
and
push
push
jl
and
add
pop
cld
out
jno
xchg
in
in
push
mov
sti
pop
ret
jns
adc
inc
sti
inc
push
(bad)
cld
das
out
jne
rcr
push
push
cmp
je
aas
and
jmp
loopne
mov
pop
mov
pop
fdivr
and
lods
xor
into
inc
cmp
sub
test
xor
sbb
mov
movlps
ret
imul
or
sbb
jns
pop
mov
out
push
cmp
out
mov
stc
mov
sbb
push
jecxz
sub
mov
jmp
add
mov
mov
sub
xchg
pop
sar
retf
test
cmp
jle
sbb
jnp
ins
(bad)
iret
stos
push
cmc
pop
lods
pop
lods
and
add
or
aad
leave
pop
loop
xchg
cmp
push
cmp
add
pop
sub
das
jmp
sub
mov
xor
pop
inc
rol
xchg
dec
dec
sbb
jbe
jmp
dec
test
mov
cli
mov
dec
inc
inc
xchg
sbb
popa
shl
ja
inc
clc
clc
add
push
retf
pop
adc
int3
push
ror
js
in
and
pop
stos
in
jmp
xchg
mov
jne
adc
add
neg
iret
jmp
dec
lods
inc
and
(bad)
sub
inc
stos
int
jp
add
or
dec
mov
inc
into
repz
push
jecxz
ins
push
(bad)
mov
push
neg
ficom
inc
cmp
xchg
mov
jo
in
inc
(bad)
lock
push
mov
outs
xchg
das
mov
cs
dec
lods
jnp
pop
xor
dec
mov
push
retf
dec
jecxz
jl
sbb
ds
xor
sub
adc
mov
hlt
or
xchg
push
popf
imul
nop
xchg
test
inc
mov
xchg
mov
outs
cdq
jbe
jg
mov
cld
ds
test
imul
pushf
inc
xlat
or
cmps
loope
in
or
fld
(bad)
or
push
cwde
and
cmp
push
mov
cmp
arpl
jmp
cdq
call
xor
mov
and
jae
call
cwde
pop
out
sub
pop
rcr
lds
push
popf
mov
mov
xor
sub
sahf
lahf
sbb
pusha
cmc
lods
ja
shl
xchg
xor
std
sub
in
add
fcmovnu
cmp
add
xchg
call
les
sub
cs
loop
(bad)
jb
ins
call
stos
test
loopne
add
gs
sti
mov
loop
mov
adc
ins
adc
jo
pop
ror
mov
std
jo
jnp
fwait
dec
jno
jge
mov
js
mov
int
stos
scas
hlt
scas
(bad)
shl
pop
dec
sub
add
add
push
jne
adc
fsub
ret
dec
fistp
mov
lods
jne
je
loopne
cmc
adc
xor
xchg
mov
lahf
sub
push
sub
xchg
mov
mov
or
xbegin
xchg
xlat
sub
push
adc
out
xchg
or
add
adc
dec
sbb
or
or
or
gs
mov
jns
jb
mov
cmp
out
(bad)
popa
mov
mov
stos
in
rcr
jb
test
iret
push
pop
jne
sub
int3
or
test
(bad)
xor
jo
sbb
add
jmp
test
jno
in
mov
shl
jnp
mov
dec
xchg
(bad)
in
lock
pop
and
mov
mov
push
cld
and
sub
popf
jne
in
mov
sar
push
jno
ds
lea
mov
pop
jg
jno
pop
xchg
(bad)
mov
mov
call
or
mov
in
cmp
and
pop
das
mov
movs
pushf
and
dec
gs
push
push
scas
adc
leave
mov
pusha
int
repz
(bad)
mov
adc
adc
fs
(bad)
stos
mov
mov
call
pop
(bad)
xor
dec
jno
sub
dec
icebp
loop
dec
cmp
fxch
pushf
sbb
rol
clc
inc
xor
jns
inc
maskmovq
not
int3
jne
test
dec
rcr
enter
ins
xor
movs
test
arpl
add
cmp
mov
outs
test
scas
popa
and
pop
(bad)
shl
mov
add
addr16
dec
bound
jo
push
daa
push
jle
adc
std
mov
pop
or
(bad)
icebp
push
ds
mov
sbb
loop
pop
rcr
xor
dec
pop
jno
scas
call
or
cmp
iret
inc
iret
clc
in
sub
or
stos
retf
xchg
mov
adc
or
(bad)
(bad)
aam
inc
jno
xor
enter
mov
xchg
adc
icebp
jns
cmp
icebp
xchg
cmps
xlat
rcr
fcom
inc
test
mov
dec
neg
inc
jg
jecxz
mul
cmc
xor
xchg
push
jns
aad
retf
outs
sub
jb
inc
or
loopne
push
xor
loope
in
xor
xchg
(bad)
jecxz
addr16
icebp
mov
js
and
fs
lea
out
dec
lds
ret
pop
inc
mov
push
dec
lock
adc
retf
test
xor
ja
addr16
rcr
mov
jl
mov
in
or
js
shl
dec
mov
sub
aas
loop
(bad)
sub
das
out
ds
mov
xchg
fsubrp
fidivr
or
mov
sbb
xor
lea
adc
ret
jle
cs
pop
dec
lods
fmul
cmps
mov
push
outs
lahf
add
and
pusha
imul
or
call
or
dec
sbb
or
out
xchg
cmps
xchg
shr
dec
ret
cmps
gs
stos
jns
or
add
xlat
jno
jns
cli
mov
loopne
xor
and
jle
dec
and
das
ds
pop
mov
xchg
leave
pop
and
xchg
imul
out
bound
(bad)
push
add
movs
dec
mov
rcr
xor
cmp
imul
dec
jno
or
sub
shl
or
xor
into
add
push
sub
je
loop
repnz
jae
jne
dec
push
sbb
icebp
scas
(bad)
xor
dec
stos
add
jp
pusha
fcom
inc
xor
(bad)
dec
push
imul
ds
cmp
ret
rol
dec
jns
imul
dec
sbb
push
aas
add
test
pop
bnd
repz
cli
mov
mov
xor
adc
mov
pop
cmp
std
inc
xlat
mov
imul
cmps
sub
inc
addr16
mov
xor
stos
aas
mov
pop
jl
pop
movs
mov
(bad)
loope
pop
lea
dec
jnp
lds
les
loope
gs
add
inc
and
dec
sub
xchg
fimul
fld
fstp
(bad)
xchg
cmp
cmps
or
(bad)
lds
cmc
mov
add
mov
xor
mov
mov
inc
test
leave
cmp
nop
add
jmp
xchg
push
push
jne
fstp
call
fstp
pop
outs
(bad)
int3
(bad)
jbe
jb
xor
mov
dec
sub
(bad)
pop
jne
mov
and
sub
mov
addr16
mov
mov
jl
das
push
aam
aaa
push
add
push
push
pushf
in
xor
jne
int
fdiv
and
cs
and
jnp
in
shl
aas
les
and
jg
push
sar
add
adc
lahf
jmp
mov
pop
sti
rcl
mov
and
add
and
fcmovb
sub
add
stc
fstp
popw
pop
ds
pop
shr
repnz
mov
inc
add
loopne
sahf
jo
mov
mov
push
xchg
xchg
and
push
pop
idiv
mov
adc
xor
aad
adc
and
retf
shl
or
jnp
add
mov
and
mov
je
sub
dec
hlt
adc
test
push
lock
fldcw
sahf
jne
xor
dec
movs
jnp
sub
mov
sub
movs
daa
inc
push
jne
data16
cmp
jnp
dec
inc
mov
xchg
xchg
retf
sbb
int3
xor
cmps
arpl
mov
fucom
fnsave
pop
sub
scas
jae
test
bound
add
push
dec
cwde
mov
iret
inc
shr
or
xor
adc
xor
inc
adc
jbe
push
mov
lahf
add
les
loope
aaa
sbb
mov
xor
and
ins
mov
aad
loop
movs
(bad)
imul
aam
out
sbb
(bad)
push
xchg
cs
pop
sbb
lock
movs
push
inc
jno
dec
aad
movs
mov
sbb
xchg
dec
in
pop
popa
adc
pop
mov
dec
es
xor
fimul
xchg
outs
and
xchg
outs
sbb
cwde
out
inc
pop
ds
pop
out
cmp
call
or
add
jb
scas
xlat
sar
test
mov
cdq
stos
cmp
scas
push
aaa
and
xlat
std
int3
cmc
xchg
lahf
stc
push
clc
xchg
xchg
mov
adc
fadd
pop
sub
jb
or
mov
(bad)
xor
adc
ins
mov
(bad)
pop
or
jbe
xor
cmp
xor
ja
or
jnp
xchg
cdq
add
mov
add
call
(bad)
leave
and
push
adc
aaa
mov
cwde
aaa
pusha
lods
push
pop
popf
call
dec
hlt
(bad)
ja
mov
out
cmps
cmp
pop
sub
and
cmp
sbb
loop
test
or
gs
add
stos
xchg
mov
sti
xor
in
xchg
bndldx
icebp
je
daa
xchg
mov
adc
xchg
pop
ret
add
jmp
sar
addr16
lock
aad
mov
xchg
mov
inc
dec
sti
pop
xchg
dec
dec
dec
dec
outs
push
aaa
xor
mov
push
outs
call
push
cmp
dec
movs
inc
xchg
(bad)
and
ret
jb
cmp
loope
xor
btc
sahf
shr
call
test
xlat
pop
fiadd
add
out
mov
mov
push
dec
cmps
xor
rcr
pusha
or
fadd
outs
and
test
div
inc
cdq
popf
leave
lods
mov
in
dec
push
sub
(bad)
lahf
xor
mov
pop
ja
adc
add
add
mov
xor
mov
test
cmp
mov
sahf
sub
in
fld
imul
push
loop
sbb
pop
push
sbb
xchg
push
mov
fsub
mov
or
fcomi
or
outs
inc
sbb
push
xchg
adc
movs
cmp
mov
fs
cwde
xchg
cs
cmps
aaa
inc
int
fs
sbb
mov
and
mov
call
js
clc
cli
push
test
adc
jge
push
inc
sbb
(bad)
imul
jno
adc
sahf
leave
(bad)
imul
ins
inc
popf
sar
cmp
out
jmp
les
adc
outs
mov
int3
mov
xchg
jns
xchg
test
pop
fidivr
retf
adc
fdiv
mov
xor
sbb
xchg
cmp
inc
loope
xchg
sbb
mov
cmc
repnz
in
fmul
loopne
xchg
xor
mov
dec
xchg
dec
add
mov
push
retf
mov
mov
add
sub
inc
cmp
mov
mov
and
jb
mov
aam
stc
mov
mov
movs
ins
mov
nop
mov
xchg
adc
sub
in
les
xor
dec
jg
ins
jo
mov
and
cmp
mov
repnz
jecxz
lods
dec
loop
mov
pop
fnstenv
into
fs
fst
push
rcr
pushf
dec
dec
in
jmp
mov
push
mov
push
imul
fbstp
(bad)
cmp
cmps
add
dec
sub
shr
test
lea
xor
pusha
sar
xor
mov
sbb
inc
jmp
popf
dec
sbb
sbb
sub
and
or
lock
cmovs
or
sbb
xchg
int3
cmps
das
or
cmp
mov
mov
es
or
lock
mov
dec
test
sbb
inc
inc
push
loope
movs
sub
cmps
xor
cmovno
dec
(bad)
clc
xor
test
lds
jbe
int3
cmp
fisubr
outs
adc
cld
stc
add
cwde
pop
out
mov
into
call
or
rcl
cmp
jnp
dec
jb
xchg
cmp
or
adc
sbb
sub
cmp
mov
jl
popf
jecxz
cmp
dec
lock
movs
sahf
adc
xchg
int
jb
or
and
movhlps
neg
mov
(bad)
out
push
lea
sbb
cld
sahf
push
sub
pop
xchg
xor
dec
inc
mov
data16
addr16
fnsave
je
mov
es
dec
inc
lock
leave
aam
and
ins
push
jo
cwde
pop
cs
fcomp
cmp
ins
mov
dec
dec
and
imul
test
aam
dec
rcr
inc
call
cmp
cmp
and
mov
(bad)
out
mov
int3
cmp
inc
dec
pop
(bad)
pop
adc
ss
cwde
icebp
and
mov
or
adc
scas
ss
sbb
cmp
add
cs
cdq
dec
dec
aas
sub
mov
inc
mov
push
out
add
test
pop
jmp
push
jg
push
hlt
cmp
xor
and
data16
push
jns
les
lock
clc
dec
push
add
out
(bad)
retf
or
out
jmp
cmps
cld
movs
sbb
add
push
popa
mov
test
xchg
fistp
mov
cli
arpl
dec
sbb
div
sbb
mov
loop
sbb
ds
out
inc
repz
test
pop
dec
add
(bad)
mov
popf
cs
cmp
cmp
pop
add
dec
pop
xor
leave
mov
jmp
push
push
jmp
(bad)
cli
(bad)
xor
in
mov
mov
xchg
jo
xchg
lods
xchg
xchg
movs
clc
clc
push
xchg
enterw
loopne
sar
cmp
and
inc
out
dec
push
movs
sbb
pop
gs
mov
imul
xchg
and
aaa
add
pushf
and
outs
add
call
test
jmp
push
gs
add
and
jg
repz
cmp
mov
jnp
jp
inc
adc
mov
sub
aaa
sbb
add
fmul
xchg
bound
lods
ins
(bad)
jmp
iret
adc
sub
imul
lods
cwde
jmp
push
test
daa
icebp
xchg
inc
movs
leave
(bad)
sbb
dec
(bad)
ret
push
pusha
mov
test
iret
outs
arpl
push
mov
sbb
dec
jns
jmp
repz
push
push
mov
inc
in
std
mov
mov
jns
adc
icebp
or
dec
shl
scas
test
inc
daa
push
and
shl
jns
or
popa
dec
xor
les
ja
dec
pop
ror
lea
pop
jae
and
adc
test
call
mov
and
or
loop
inc
mov
sub
cmp
cmc
and
push
arpl
loopne
push
pop
mov
xor
xor
jae
inc
pop
test
cmp
xor
jbe
ja
and
shl
mov
inc
(bad)
inc
fsubr
bound
adc
retf
jbe
xchg
cmps
mov
xor
xchg
in
repz
(bad)
and
mov
int3
mov
push
and
cs
(bad)
ins
xor
mov
jmp
shl
out
push
cmps
rol
cs
clc
jnp
mov
adc
fiadd
out
aad
pop
cs
push
shl
daa
inc
mov
and
(bad)
cld
jb
push
mov
or
stos
test
cmps
mov
stos
xchg
leave
jbe
and
(bad)
icebp
sub
or
mov
in
fistp
or
sub
xchg
add
mov
mov
cmp
xor
cdq
cmp
loopne
sbb
outs
dec
loope
sbb
cwde
jg
sbb
out
sbb
ficomp
lock
sub
add
(bad)
sbb
jbe
fwait
cli
push
adc
loop
mov
inc
inc
cmp
push
xchg
int
shl
mov
(bad)
xor
adc
cmp
fisubr
push
add
clc
movs
repnz
js
xchg
jo
adc
ins
idiv
bound
mov
ret
fstp
inc
psubsw
movs
lea
fidivr
mov
movs
lea
pop
dec
adc
xchg
push
out
movs
xor
push
jmp
daa
movs
mov
loope
rcl
mov
call
mov
push
mov
add
pop
sub
test
stc
out
pushf
sbb
div
cmp
in
sbb
es
fwait
jge
lods
adc
repz
dec
scas
pop
xchg
mov
push
rol
cmps
daa
xchg
xlat
movs
mov
push
aam
jnp
xchg
or
test
not
adc
xchg
adc
push
push
gs
mov
inc
imul
dec
xchg
mov
mov
lahf
inc
mov
sbb
dec
add
popa
jp
(bad)
pop
ror
cli
ficom
inc
lock
fsubr
or
sbb
mov
out
pop
mov
xchg
and
mov
cwde
repz
cld
inc
sub
call
push
(bad)
xchg
and
nop
or
pop
in
pop
inc
add
fwait
pusha
adc
lods
cmps
imul
push
fsqrt
xor
jbe
pop
(bad)
stos
xchg
mov
retf
mov
xchg
mov
lds
cmps
sti
jg
mov
xchg
mov
leave
in
jg
loope
adc
sbb
inc
in
fwait
adc
test
retf
add
cmp
push
call
sbb
mov
inc
fs
adc
xor
shr
jo
test
ins
sub
mov
xchg
pop
in
inc
push
data16
cmp
sub
and
test
fsubr
shl
dec
test
call
sub
xor
outs
pop
jo
inc
jne
mov
(bad)
in
cmc
mov
xchg
mov
sbb
mov
dec
dec
out
xor
ds
(bad)
in
push
fmul
mov
movs
pop
fs
pop
movs
add
mov
pop
fldcw
sbb
je
mov
add
or
(bad)
jp
jmp
sub
or
bound
std
pop
(bad)
or
jmp
ins
and
or
add
mov
(bad)
pop
or
sar
ins
push
stos
add
stc
push
push
ja
or
enter
repnz
ins
fisub
and
cmp
xchg
and
jp
sub
int
add
cmp
jl
mov
mov
or
je
iret
adc
out
pop
adc
pop
gs
cmp
sbb
jmp
add
xor
fimul
add
or
jmp
cmp
lock
inc
test
sbb
ret
mov
ds
adc
fstp
popf
lds
and
or
adc
adc
scas
or
cwde
mov
jmp
xchg
cmp
add
lods
pop
fisttp
inc
mov
retf
aam
pop
or
pop
mov
pop
vpmacssww
rcr
mov
cdq
jge
fcom
repnz
js
adc
jle
mov
sbb
sbb
xor
cmp
aaa
out
ss
pop
adc
cmp
push
fisttp
mov
mov
cmp
mov
ret
(bad)
push
(bad)
pop
es
aas
pop
pushf
les
rcr
lahf
mov
nop
push
mov
enter
loopne
in
adc
cwde
mov
scas
ds
cmp
push
ins
mov
jl
mov
out
or
clc
jns
in
div
shl
(bad)
jg
sbb
push
ds
repnz
stc
jbe
dec
jmp
fistp
jmp
(bad)
pop
mov
sbb
stos
and
or
hlt
imul
add
add
aaa
ja
dec
daa
out
mov
dec
and
inc
pop
scas
jecxz
mov
test
pushf
cmp
aas
in
in
adc
xor
adc
pop
and
inc
push
mov
loope
add
push
mov
mov
add
in
sbb
mov
add
add
lods
jmp
jecxz
(bad)
push
mov
add
ja
or
scas
cdq
dec
out
cld
mov
stos
shr
inc
push
rol
test
xchg
mov
outs
std
push
and
xor
dec
fstp
in
mov
movs
jne
jmp
xchg
lea
rol
aaa
loop
xlat
adc
jne
sbb
ja
fs
cmp
xlat
(bad)
(bad)
jb
retf
aad
pop
and
div
mov
cmp
loope
push
xchg
adc
jecxz
and
test
js
sbb
mov
jmp
pop
ficomp
and
lahf
or
(bad)
cld
pop
cmp
cmp
push
pop
pop
call
mov
hlt
test
jmp
rcr
test
mov
pop
sbb
or
jmp
(bad)
pop
dec
bswap
mov
jecxz
lock
gs
push
clc
jae
push
pop
retf
icebp
enter
mov
fmul
out
adc
mul
aam
jae
lock
cmp
mov
inc
jne
fstp
push
aad
call
scas
(bad)
rcl
inc
cmp
push
mov
or
pusha
sub
mov
movs
enter
lds
push
cld
aas
ins
outs
jge
add
addr16
stos
dec
xlat
dec
iret
je
pop
mov
sbb
mov
mov
ds
das
aaa
mov
pop
shr
sub
mov
aaa
loop
int3
sub
add
not
push
jbe
dec
cmp
les
adc
arpl
ss
ror
inc
(bad)
jmp
and
xor
sbb
(bad)
ficom
and
pop
(bad)
loopne
test
sub
pop
popa
loop
jp
mov
stos
or
inc
mov
mov
mov
clc
sub
push
pushf
add
or
xchg
xchg
inc
aaa
xchg
clc
cmc
ret
pop
shl
movs
das
mov
mov
pop
add
or
mov
mov
out
(bad)
repnz
inc
(bad)
jp
aaa
sub
add
outs
adc
out
(bad)
xchg
mov
adc
movs
lock
int
jne
fcom
sbb
xor
mov
sbb
inc
test
addr16
ja
outs
jno
test
xchg
adc
pop
ret
ins
add
adc
dec
(bad)
mov
pop
lods
in
inc
xor
sub
repz
inc
pop
push
ss
popa
out
jno
cs
cs
inc
sub
xchg
inc
imul
nop
pop
rcr
or
push
xchg
push
rcl
pop
outs
sti
pop
sub
retf
or
push
mov
and
sbb
aaa
int3
(bad)
aaa
dec
in
out
sbb
inc
mov
popf
(bad)
adc
jp
jle
mov
outs
adc
call
test
dec
stc
cld
xchg
push
sub
and
test
ret
addr16
inc
jle
(bad)
das
out
mov
xor
fisub
sub
popf
jmp
lea
jle
mul
or
xchg
sbb
sti
xchg
fstp
sti
sar
xor
mov
ja
adc
movs
push
xor
enter
dec
ss
cmp
or
ins
add
adc
(bad)
repz
mov
jno
cmp
es
dec
dec
daa
int3
jmp
mov
cmps
push
test
cs
jb
inc
addr16
stos
sub
and
cmps
test
outs
add
data16
hlt
repz
sbb
fwait
sub
mov
xchg
sti
push
out
rcr
ja
mul
and
push
cmp
or
les
push
dec
ror
push
fs
mov
sbb
add
mov
in
mov
adc
mov
push
mov
scas
sub
inc
xchg
es
(bad)
sbb
lock
pop
sub
ins
lahf
or
jbe
jg
(bad)
jnp
or
xor
sbb
popf
rcl
scas
cmp
and
xor
push
dec
add
sbb
cmp
inc
mov
out
lahf
mov
loope
adc
dec
push
(bad)
fs
loope
xor
iret
push
nop
pop
(bad)
mov
ret
sbb
xchg
mov
inc
call
ins
mov
add
inc
pop
inc
mov
arpl
mov
cmp
add
cmp
cmp
out
int
adc
inc
cmp
jns
add
or
add
xor
fwait
(bad)
js
ret
shr
mov
in
dec
jg
jnp
stos
popf
popf
sar
push
mov
or
iret
jne
jns
pop
(bad)
or
mov
out
pop
push
sbb
ficomp
ins
cli
repnz
pop
push
nop
jne
mov
loope
imul
maxps
or
xor
mov
dec
jle
sub
xchg
pop
add
ja
adc
aas
outs
gs
adc
and
xlat
xchg
mov
adc
sbb
(bad)
icebp
shl
js
loop
and
(bad)
inc
xor
daa
lds
out
aam
xchg
(bad)
pop
adc
sub
jno
mov
and
cmp
sbb
adc
adc
sub
pop
test
push
movs
push
sbb
sar
aad
sbb
mov
dec
mov
ja
in
mov
loope
push
mov
push
or
xchg
lods
jnp
adc
inc
pop
or
xabort
(bad)
pop
jp
sub
cmp
adc
pop
outs
inc
sub
xor
rol
out
into
adc
mov
push
sub
mov
mov
lods
or
cmps
dec
inc
arpl
push
adc
or
nop
aad
and
sbb
cmc
cmps
ja
nop
gs
sbb
mov
and
jno
adc
(bad)
cmc
xchg
adc
pop
mov
xor
inc
xchg
pop
and
inc
sub
or
data16
mov
mov
sub
movs
je
test
jg
cmc
push
popa
(bad)
out
arpl
xchg
fdivr
and
hlt
or
pop
fnsave
sbb
mov
cmc
push
lods
es
cmp
dec
pop
xor
addr16
fs
jl
rcr
cmp
jns
loop
leave
(bad)
hlt
sbb
test
add
pop
fild
ins
jmp
loopne
mov
out
or
scas
mov
sahf
cmp
jb
and
fist
fadd
rol
cmp
stos
sahf
push
(bad)
sbb
xchg
jg
das
mov
mov
dec
inc
lahf
dec
jle
dec
lea
lock
repz
mov
mov
jl
idiv
aaa
ds
push
sbb
shl
xor
dec
int
jl
popf
popa
out
clc
add
sub
fbld
add
or
push
xchg
jmp
or
mov
loopne
jmp
aad
pop
sub
fs
jp
loope
div
push
fmul
enter
retf
adc
sbb
adc
mov
bound
xor
pop
(bad)
mov
jb
bound
xchg
hlt
jne
test
adc
cmp
movs
add
lea
(bad)
fldcw
sbb
adc
pop
cli
xchg
pushf
rcr
imul
dec
dec
adc
shl
in
lods
data16
fs
jmp
cmc
fcomip
mov
cld
add
fnstenv
jmp
add
xor
fwait
jmp
push
or
not
jmp
or
inc
imul
mov
cmp
loopne
repnz
fadd
shl
mov
sub
pop
loopne
in
mov
sar
mov
push
adc
ds
mov
movs
or
or
movs
jns
add
xor
pop
cmp
cmp
sub
addr16
adc
ins
inc
adc
or
or
in
sub
xlat
mov
adc
add
ficom
(bad)
ffree
jb
mov
hlt
inc
add
xor
out
jecxz
(bad)
adc
sar
sar
and
dec
or
data16
jb
in
add
sbb
mov
jb
xchg
sbb
sub
push
push
out
inc
dec
jmp
repz
in
jecxz
fwait
xor
jle
and
mov
lds
push
pop
(bad)
adc
lds
aas
xchg
repz
sub
mov
jns
outs
push
cdq
pop
inc
add
jge
pusha
dec
jge
mov
fdivr
jae
cmp
xchg
mov
xchg
adc
jae
test
test
adc
add
and
retf
pop
adc
dec
clc
lock
cmp
push
jae
test
call
ds
pop
enter
pop
or
pushf
sub
jge
dec
push
pop
retf
or
(bad)
ins
mov
gs
mov
cmps
fadd
xchg
shl
les
movs
mov
scas
xchg
or
jb
imul
cmps
mov
xor
cmp
mov
jp
dec
cmc
mov
inc
mov
stos
lods
stos
xor
sbb
je
lds
sahf
xchg
fs
enter
push
out
mov
mov
mov
adc
xchg
sbb
fsubp
mov
sar
or
fild
fwait
dec
mov
jecxz
push
and
lods
adc
movs
out
mov
pop
sbb
inc
sub
jns
cmps
iret
sbb
test
out
inc
cmp
ss
push
in
add
lahf
adc
sub
jle
aad
mov
popa
xor
fs
pushf
rcl
outs
sub
std
fiadd
inc
inc
imul
or
and
xchg
jbe
inc
mov
add
xchg
lds
(bad)
xchg
mov
push
xchg
dec
push
cmps
imul
mov
push
cli
add
mov
ror
push
sub
mov
xlat
stos
pop
repz
dec
jmp
inc
clc
pop
dec
test
(bad)
sbb
xchg
jne
jo
push
add
imul
das
adc
dec
in
mov
popa
rcr
cmps
mov
adc
inc
dec
sub
leave
imul
js
pop
sahf
cld
aaa
ins
inc
imul
or
sub
icebp
pop
fadd
mov
mov
ss
aaa
daa
inc
lahf
push
pusha
add
data16
push
adc
mov
add
pop
adc
mov
in
or
sub
das
clc
cmp
lea
(bad)
cmps
(bad)
push
test
test
(bad)
nop
repz
div
ret
add
jg
das
mov
clc
ins
pop
mov
or
clc
adc
sbb
xchg
cmp
das
inc
loope
cmp
ss
out
fimul
and
and
dec
jno
js
data16
add
push
mov
add
lods
sub
xchg
lea
pushf
xor
inc
imul
mov
push
dec
in
xchg
or
outs
stc
add
arpl
dec
mov
inc
xchg
ins
inc
test
stos
dec
mul
xor
cmp
fisubr
pushf
push
cmc
pusha
push
loop
mov
bound
cmp
adc
in
and
les
mov
xchg
callw
mov
or
popa
ss
mov
mov
lods
scas
aam
jp
cmp
mov
sar
push
push
xor
adc
and
dec
pop
pop
mov
mov
call
cmps
rol
das
call
ror
or
push
repz
popa
pop
pop
cdq
push
mov
mov
enter
adc
sbb
mov
dec
ins
and
adc
and
mov
les
sti
sub
aad
cdq
ins
cmps
or
in
mov
stos
xlat
adc
jnp
push
(bad)
aam
icebp
int3
add
or
pop
pusha
dec
ins
and
dec
popf
iret
cdq
mov
jae
mov
movs
inc
(bad)
lahf
ja
ins
inc
mov
hlt
fadd
mov
in
and
ror
mov
clc
jns
ror
inc
les
jp
retf
sub
and
mov
aaa
adc
or
mov
mov
fwait
xchg
nop
jns
xlat
aam
pop
lock
inc
retf
in
jle
dec
xchg
jne
(bad)
sbb
jge
mov
retf
stc
inc
or
ja
push
jmp
fidiv
pop
outs
test
fst
in
mov
cmp
xlat
rcr
cmp
fstp
data16
cmp
hlt
retf
sbb
je
jle
rol
sub
dec
lds
inc
in
dec
mov
into
(bad)
nop
and
mov
mov
std
xlat
imul
imul
clc
push
push
mov
test
jae
or
inc
out
rol
dec
add
js
sar
sbb
jne
cmp
cdq
int
test
shl
jl
push
add
jge
movs
jno
pop
mov
int
xchg
xchg
je
mov
icebp
call
or
xlat
pop
add
(bad)
fcom
test
mov
push
mov
or
adc
mov
(bad)
inc
inc
mov
neg
cmps
movs
imul
mov
nop
sahf
xchg
mov
imul
push
out
and
add
jge
or
es
ins
fcmovnb
cmc
pop
mov
int3
(bad)
mov
xchg
mov
mov
data16
mov
call
rcr
jmp
retf
loopne
or
scas
fwait
mov
iret
xchg
lods
or
in
arpl
or
mov
mov
dec
xor
adc
or
fistp
pushf
adc
arpl
push
test
push
leave
inc
shl
jecxz
cli
repz
lock
in
ja
sub
pop
jns
cmc
lahf
mov
inc
xchg
outs
mov
outs
inc
rcl
dec
pushf
mov
loopne
xchg
in
ins
pushf
push
out
in
push
jne
cmc
xor
mov
fwait
iret
iret
hlt
xchg
pop
mov
cmc
sbb
xor
sar
fwait
dec
fs
xor
sbb
push
xlat
and
cmp
adc
mov
retf
add
mov
popa
adc
push
into
sbb
imul
call
jne
sbb
inc
movs
jl
pop
and
sbb
push
xor
sub
mov
push
xchg
mov
fbld
test
jns
dec
cmc
mov
inc
jmp
fnsave
mov
ss
pop
xchg
add
inc
push
adc
pop
adc
cmc
xor
and
movs
addr16
pop
aam
movs
xor
in
out
xchg
test
jb
nop
xlat
adc
jecxz
push
and
in
xchg
xchg
les
cli
ins
je
test
fisub
and
pop
call
sahf
mov
icebp
add
cmc
xor
push
shr
adc
imul
cmp
inc
add
fisub
push
ins
aas
push
sub
retf
inc
dec
iret
mov
fcmove
ja
jl
mov
outs
xchg
repz
xor
cmps
call
gs
xchg
or
popa
xor
jo
sub
inc
push
aaa
cmp
fsub
add
pop
dec
xor
add
call
jno
mov
jbe
push
cdq
into
jle
push
adc
and
test
jmp
mov
rcr
int
in
or
ror
(bad)
enter
jns
in
xchg
xor
leave
out
and
or
mov
adc
jne
fsubr
popf
xor
les
cmp
adc
dec
adc
or
sar
mov
addr16
sahf
lea
gs
outs
and
(bad)
mov
fs
stos
mov
pushf
leave
add
push
mov
jne
xlat
mov
cmp
sub
adc
cmp
push
and
loopne
popa
cmp
(bad)
push
xor
lods
stos
xchg
sar
cmc
ret
cmp
sub
cmps
mov
add
mov
push
(bad)
mov
test
mov
xchg
sbb
out
cs
test
mov
cmp
in
test
xor
(bad)
aas
fadd
push
or
jmp
rcl
pmulhuw
inc
and
cmps
pusha
xchg
iret
mov
in
jnp
mov
retf
fldl2e
fst
lea
jno
xor
fst
ds
clc
add
in
xor
mov
outs
or
rol
cmp
or
movs
xchg
in
dec
rol
stc
fistp
fisub
test
nop
pop
cld
fsubr
test
pop
stos
sub
lahf
cmps
into
mov
jl
inc
mov
rol
dec
jmp
loopne
and
cli
test
lea
push
xchg
enter
sbb
repnz
mov
sbb
pop
jmp
pop
icebp
ins
pop
pop
push
data16
sbb
xor
out
ret
addr16
es
popf
or
inc
xor
fsubr
jge
sbb
cs
scas
and
nop
int3
fs
into
pop
mov
sub
fistp
sbb
(bad)
adc
xchg
aam
jl
adc
fcmove
daa
push
mov
add
xor
xchg
es
jl
jg
cmp
fadd
and
je
cmp
mov
push
imul
cmps
icebp
xchg
repz
scas
pop
fsin
mov
mov
jbe
mov
lahf
popf
cmp
inc
shl
add
into
ins
push
js
inc
push
mov
or
fcmovbe
and
repnz
xchg
and
in
pop
xchg
or
mov
jo
ja
jbe
mov
add
js
enter
push
(bad)
lods
aam
sahf
jae
cli
adc
loop
xchg
push
enter
push
hlt
lods
psubb
dec
mov
test
or
dec
ja
sbb
sub
lods
sub
imul
or
inc
out
xor
mov
cmp
xchg
cld
ret
inc
in
in
cmc
popa
inc
xor
inc
add
add
inc
cmp
arpl
rcr
add
pop
cmps
mov
mov
cmp
sbb
mov
loope
push
xor
ffreep
add
and
pop
retf
popf
xchg
lods
(bad)
xlat
adc
pushf
pop
in
or
add
mov
xchg
nop
pop
(bad)
psubb
stc
fdivr
xchg
cld
(bad)
aad
ret
mov
jo
fs
pushf
cdq
pop
shr
xor
jmp
inc
daa
cli
mov
and
jg
test
sbb
loope
lods
xchg
cmp
cli
pop
cmp
inc
xor
xor
xor
ror
cmp
mov
push
aad
adc
stos
shr
cmp
sbb
call
add
mov
cdq
mov
(bad)
mov
push
enter
pop
in
dec
hlt
inc
push
or
gs
cmp
(bad)
(bad)
or
int3
das
push
pop
loopne
jge
aam
rcr
sbb
adc
jno
arpl
or
mov
pop
cmp
int3
sbb
pop
mov
out
stos
and
xor
pop
xor
movs
xchg
jns
xchg
jmp
jbe
cmps
(bad)
popf
test
stc
out
mov
ja
ds
dec
shr
cmp
cmp
pop
inc
ror
inc
push
int3
xchg
ins
fadd
dec
(bad)
in
dec
out
cmc
jl
jg
xchg
xor
pop
push
in
jb
popa
jmp
cmp
lock
mov
(bad)
test
jne
xlat
mov
mov
movs
stos
mov
pop
add
xor
mov
dec
call
outs
aaa
push
pop
push
mov
retf
sbb
setns
push
pushf
ret
cmp
adc
xchg
mov
out
repz
js
div
int3
stos
jp
push
cmp
(bad)
sahf
cli
mov
mov
popa
push
and
out
leave
xchg
lods
adc
dec
icebp
in
dec
push
in
mov
push
jge
mov
jns
jmp
mov
adc
stc
adc
cwde
(bad)
push
sub
fistp
or
fimul
mov
test
sbb
pop
sti
js
cmps
sti
xchg
sub
adc
pop
add
push
or
push
rcr
sub
out
fwait
mov
fisttp
cld
icebp
push
stos
cmp
outs
cs
jae
and
push
push
sub
cmp
push
adc
(bad)
popa
mov
and
jne
mov
ds
or
jne
(bad)
aas
adc
xor
loope
pop
push
dec
aaa
es
sti
pop
and
pop
or
push
ins
imul
sub
loope
pop
jecxz
ins
sbb
fsub
test
rcl
add
mov
outs
xchg
movs
mov
jmp
imul
ins
ins
dec
ja
add
adc
ins
loopne
pop
loope
stos
xor
stc
and
adc
fcmovu
or
cld
fidivr
sar
inc
or
mov
dec
jl
jno
xchg
movs
adc
jecxz
jne
out
mov
pop
sub
pop
ret
jb
data16
je
aam
fs
add
mov
xchg
and
cmc
lods
pop
xlat
sub
or
movs
out
rcr
sub
(bad)
pop
xchg
pop
sub
xchg
fnsave
cmp
jnp
repz
pushf
bound
lea
dec
pop
jbe
jnp
push
or
sbb
pop
cmps
mov
jmp
in
or
out
jge
ret
cmp
jb
pop
mov
div
(bad)
jmp
sub
outs
and
and
in
xor
push
aas
ficomp
sbb
jo
sbb
or
cmc
sbb
jl
lea
sub
fucomi
push
sbb
add
fwait
cmps
movs
jge
jb
inc
pop
das
popa
xchg
rcr
jae
call
fs
inc
dec
inc
rcr
push
out
cmp
aam
jge
imul
movs
push
inc
and
scas
lods
mov
xor
mov
push
les
push
aam
mov
popa
nop
iret
mov
sub
pop
sbb
out
sub
leavew
out
dec
jno
pushf
das
mov
mov
aam
xor
cmp
mov
xlat
xchg
mov
repz
push
or
loopne
(bad)
mov
dec
pop
jp
addr16
mov
das
and
and
mov
test
pop
jno
lods
ret
xlat
jno
jg
aas
mov
inc
sub
pop
rcl
push
sbb
mov
lahf
push
stc
jmp
jl
push
pop
and
into
push
cs
hlt
lds
ss
add
add
xchg
out
and
adc
cwde
add
dec
arpl
jb
shl
jge
cdq
mov
pop
pop
loop
pushf
vmaxps
inc
scas
cmps
pusha
mov
and
add
add
mov
dec
(bad)
mov
outs
add
loope
xchg
jnp
das
fdivr
movnti
cmp
test
vcvtps2dq
gs
addr16
sub
pop
inc
xchg
mov
repz
int
rcl
and
cs
fist
adc
xchg
pop
xor
cmp
push
mov
call
sbb
mov
sbb
cli
repz
push
ret
popf
sar
les
daa
add
xchg
icebp
xchg
mov
mov
add
jle
xchg
inc
leave
sub
cmps
fxch
mov
or
push
lods
popf
ds
pop
cmp
(bad)
popf
xchg
mov
cdq
rol
adc
gs
nop
enter
(bad)
mov
scas
mov
sub
pop
fcomp
aaa
mov
nop
sub
cdq
or
push
idiv
xchg
int
sub
mov
push
pusha
mov
not
movs
outs
push
xchg
inc
icebp
popa
ficom
or
ins
dec
mov
pop
pop
test
mov
inc
mov
aas
pop
add
hlt
cmp
push
pushf
mov
cmp
fs
sbb
ficom
lods
retf
scas
(bad)
aaa
mov
mov
cwde
(bad)
xlat
aad
lea
lea
iret
(bad)
sbb
stos
std
scas
xchg
mov
das
push
ret
scas
push
pusha
ja
inc
dec
(bad)
shl
lea
mov
imul
xor
mov
dec
ja
div
outs
cld
les
xor
mov
mov
repz
adc
jb
shr
mov
push
ins
clc
mov
jmp
test
dec
dec
push
push
push
dec
into
sub
js
and
mov
fwait
rol
pop
lods
jecxz
stos
pop
out
dec
out
pop
sub
add
sub
pop
in
lods
pop
es
fild
pop
movs
pop
popf
xor
xchg
xor
test
and
add
mov
mov
mov
xor
icebp
mov
mov
push
into
outs
xchg
sti
xchg
jge
jne
in
ins
cmps
xor
ins
fiadd
mov
mov
xchg
bound
ror
dec
or
mov
and
dec
xchg
shl
mov
xchg
mov
pop
arpl
stos
xor
sbb
sbb
jmp
(bad)
mov
mov
mov
xchg
test
pusha
inc
jmp
xchg
pop
push
shl
(bad)
jno
mov
mov
push
sbb
mov
jmp
div
push
ffree
loop
inc
fs
add
cmc
mov
or
dec
mov
ror
xlat
ret
retf
xchg
push
scas
xor
shr
sub
or
mov
inc
and
daa
cmp
add
scas
push
cli
push
push
in
mov
sbb
gs
jbe
jge
mov
aas
pop
aad
xor
push
jle
in
fwait
ret
movs
sbb
mov
call
fild
adc
add
lahf
vpaddusb
ds
sahf
add
add
test
sti
pop
sub
and
sahf
arpl
in
lods
add
mov
sub
sbb
imul
fisub
scas
es
ja
out
adc
dec
dec
pop
call
mov
sbb
xor
adc
cmp
arpl
into
cdq
loope
push
pop
jp
clc
jg
lods
fnstenv
test
(bad)
aam
aam
test
jp
data16
pop
mov
add
jle
dec
or
ja
inc
jmp
sahf
imul
xchg
xor
cwde
not
jmp
pop
dec
call
xchg
(bad)
cmp
pusha
cdq
in
gs
add
adc
mov
iret
cli
popf
imul
call
mov
xlat
(bad)
jb
xor
arpl
mov
int
mov
loope
pop
(bad)
cdq
cmp
in
in
loopne
or
push
repnz
arpl
mov
mov
cmp
push
movs
inc
retf
push
jno
aad
fs
in
push
jmp
mov
jg
jae
outs
add
mov
mov
push
xchg
xchg
fmul
add
jmp
sub
call
mov
jle
sub
fidiv
lods
shr
nop
(bad)
and
retf
mov
ins
hlt
cmps
sbb
mov
mov
mov
xchg
xlat
jp
(bad)
call
and
sub
xlat
enter
imul
sti
adc
xchg
(bad)
in
jae
inc
(bad)
arpl
mov
sar
icebp
cmp
add
dec
dec
or
adc
daa
call
push
popf
add
or
das
fwait
dec
mov
(bad)
mov
sbb
ss
pop
fcom
lods
sub
aaa
sbb
leave
jnp
pop
adc
xcrypt-ctr
cmps
pop
popa
call
out
aas
mov
fcomp
push
mov
lods
pushf
pop
lea
jecxz
movs
sub
clc
mov
outs
ret
(bad)
sub
scas
cwde
(bad)
fwait
out
jb
mov
(bad)
stos
ficom
cmps
jae
lds
mov
lds
das
or
lahf
retf
clc
into
bound
jbe
(bad)
movs
sbb
xchg
push
and
jp
test
(bad)
call
push
in
jbe
cld
inc
push
dec
mov
addr16
adc
std
out
ins
sbb
(bad)
in
push
mov
(bad)
jle
ja
ins
call
jge
dec
add
ret
cli
xchg
push
out
adc
fld
shl
lahf
cs
adc
enter
push
xchg
inc
mov
add
jns
mov
or
idiv
pop
imul
lods
jae
jb
dec
ret
cmp
mov
jb
loop
xchg
add
adc
(bad)
fisub
pop
mov
scas
in
xor
push
int
jae
or
or
push
lods
pop
stos
mov
aad
mov
mov
out
jmp
les
and
shl
or
clc
cmp
pushf
call
mov
retf
adc
sahf
xchg
cdq
imul
neg
sbb
sbb
xor
imul
out
cmps
out
xchg
sbb
test
xor
cmp
push
retf
addr16
pop
mov
movs
les
push
cmps
push
sahf
mov
fst
loop
push
stc
das
sub
aaa
lock
aam
dec
sub
jb
jae
pop
mov
xor
aad
leave
mov
in
push
aas
mov
loopne
sbb
lds
shl
sbb
add
xor
mov
cmc
loope
es
mov
call
not
enter
dec
inc
dec
cmps
push
lods
sub
dec
pop
loope
std
clc
popf
or
repnz
(bad)
rol
inc
push
fwait
mov
xchg
in
mov
xor
lods
test
ja
mov
daa
sahf
mov
mov
pop
sub
inc
fldcw
cmc
sub
ss
inc
das
xchg
call
inc
fwait
(bad)
or
xchg
loop
shl
js
mov
xchg
push
sub
(bad)
cmp
jnp
fcmove
mov
push
dec
cmp
adc
fmulp
test
scas
ret
and
sub
adc
ss
scas
push
xor
push
push
repnz
std
jbe
gs
lea
stc
xor
push
mov
sbb
(bad)
cmp
mov
out
adc
dec
out
outs
xchg
ret
sbb
adc
mov
and
push
mov
add
cmp
stc
mov
(bad)
pusha
daa
cmps
cmp
pop
inc
mov
inc
dec
mov
mov
add
call
(bad)
sbb
pop
mov
sbb
or
scas
pusha
xor
int3
in
mov
xchg
retf
adc
loopne
into
push
adc
sub
inc
add
cmp
je
(bad)
call
push
fiadd
sar
ds
dec
dec
les
leave
push
out
(bad)
aam
sub
mov
mov
sbb
test
js
sbb
mov
dec
nop
loopne
shr
enter
test
retf
pop
stos
dec
xchg
sbb
mov
mov
adc
repz
xor
fnstenv
dec
bswap
int
lock
mov
xor
dec
sub
pushf
lock
sbb
into
sub
mov
mov
mov
imul
inc
sbb
test
(bad)
dec
sub
push
jno
mov
stos
add
ss
xor
popa
jo
stos
pop
sbb
jg
retf
xor
aad
mov
push
pop
test
fsub
sbb
sar
xchg
or
add
adc
test
arpl
sub
das
sub
mov
xchg
xchg
mov
mov
outs
je
ins
loope
dec
inc
inc
cmc
and
sub
adc
rcl
sub
dec
(bad)
bnd
push
push
push
or
sbb
xor
bound
mov
or
dec
xor
sub
cmps
mov
inc
add
repz
mov
fnstenv
fs
pusha
ins
mov
inc
(bad)
test
push
mov
in
dec
adc
outs
adc
inc
mov
or
mov
iret
or
das
imul
sub
xor
adc
mov
jae
cdq
imul
pop
cdq
push
arpl
jge
pop
inc
sar
ror
call
lods
jge
mov
xor
jecxz
popa
add
call
push
mov
bnd
cmp
adc
and
cmp
mov
adc
add
(bad)
loopne
xor
fdivr
sub
xor
sub
push
dec
scas
outs
or
icebp
daa
sub
mov
adc
add
pop
and
idiv
jge
lods
in
push
das
sbb
xchg
xlat
in
mov
pop
adc
jg
jns
pop
and
push
cmp
lock
push
imul
adc
add
pushf
(bad)
xor
inc
fstp
cli
outs
mov
jge
fbstp
leave
div
(bad)
ins
jl
xchg
jnp
mov
dec
xlat
fucompp
mov
inc
out
adc
rol
or
ror
mov
test
leave
push
(bad)
jns
adc
pop
jne
push
outs
push
ins
dec
jo
mov
mov
dec
retf
test
add
aad
pop
pop
test
test
mov
adc
outs
iret
pop
jne
inc
imul
mov
mov
mov
mov
cmp
sbb
sahf
cmp
sbb
and
or
out
mov
ror
cmp
xchg
retf
inc
push
ds
pop
icebp
xchg
xlat
dec
(bad)
jl
sti
inc
rcr
out
les
and
or
push
div
pop
mov
pop
retf
or
ret
xor
inc
mov
xor
mov
and
sbb
in
lods
mov
sbb
loopne
xor
pop
stos
push
pop
sub
cmc
push
jle
adc
cmps
test
cmps
inc
sbb
nop
leave
cmp
adc
movs
adc
test
adc
int3
fsincos
add
fisttp
mov
test
jnp
push
cmp
or
push
mov
in
mov
shr
gs
outs
sbb
dec
adc
inc
mov
(bad)
xchg
mov
test
js
enter
into
retf
jmp
test
xchg
in
xor
add
imul
fldenv
out
or
mov
mov
adc
inc
dec
mov
shl
ret
sbb
pop
sar
jnp
sbb
pop
pop
push
sub
dec
and
gs
and
cs
cwde
sub
cmp
rcl
dec
sub
fucomi
imul
sub
in
repz
cs
out
sub
sub
fdivr
sub
jecxz
cmp
leave
ins
push
outs
and
sub
xchg
popf
or
xchg
add
mov
mov
fcomp
into
add
mov
(bad)
pop
jae
aaa
cwde
int3
sbb
pop
sub
les
arpl
inc
iret
dec
pop
imul
mov
pop
call
jecxz
xchg
xchg
mov
inc
push
mov
or
cmp
movs
ss
adc
in
lds
push
mov
mov
sbb
sar
cdq
std
and
repz
xchg
aam
(bad)
sbb
jno
push
xchg
arpl
les
mov
(bad)
jle
jp
repnz
fs
loop
mov
(bad)
je
aas
int3
fwait
sti
adc
ret
out
fidiv
mov
cmp
fnstcw
and
rcl
pop
xchg
xchg
cwde
push
inc
lods
nop
fsub
adc
fs
scas
neg
xlat
mov
pusha
clc
cmp
pop
mov
cmps
xor
addr16
mov
xchg
jl
mov
cdq
stc
mov
mov
rol
ds
xor
jb
(bad)
aaa
outs
adc
das
pop
out
add
sub
stos
repz
mov
pop
and
push
pop
arpl
xchg
adc
jnp
adc
dec
jo
stos
add
movs
xor
stos
sub
loope
jecxz
pushf
dec
pop
mov
xchg
adc
mov
out
sub
int
xor
cmp
sub
inc
sti
js
xchg
mov
dec
and
xor
stos
push
jg
inc
xor
cmp
shl
mov
iret
dec
sbb
ins
push
xor
sbb
jne
xchg
mov
icebp
sub
jg
sbb
ins
cmp
jg
mov
pushf
dec
ficom
fdivr
dec
rcl
adc
dec
(bad)
add
imul
sti
cdq
mov
out
add
out
ss
mov
repz
mov
ss
dec
ins
sbb
add
mov
or
or
cmp
test
fs
pop
adc
cmp
jmp
jle
sbb
inc
pop
addr16
pop
add
sbb
xor
jns
cwde
in
xchg
jo
rol
cmps
lods
pop
cwde
and
pop
pop
sub
ss
push
loopne
shl
jecxz
ds
fbld
jne
aas
in
or
inc
icebp
jae
mov
mov
and
fcom
je
jae
iret
inc
push
push
mov
jb
imul
pop
sbb
imul
jnp
adc
mov
movs
ds
sti
adc
test
gs
dec
(bad)
adc
fstp
nop
pop
cmc
(bad)
test
pop
pushf
add
inc
sub
xchg
popa
add
lahf
imul
outs
lahf
into
push
pusha
ds
int3
xchg
(bad)
adc
mov
add
adc
inc
push
jmp
jmp
dec
sbb
sti
pop
lods
cmps
iret
je
jp
scas
mov
dec
stos
add
xchg
xchg
xor
pop
int3
test
gs
retf
xor
cmps
jp
mov
mov
les
out
les
jmp
mov
in
mov
mov
cmp
jp
inc
fist
inc
(bad)
out
hlt
fistp
mov
push
in
xchg
mov
mov
std
xor
enter
or
jmp
pop
push
jmp
mov
(bad)
xchg
jo
lock
jg
push
adc
loopne
aam
pop
into
adc
xor
cmp
inc
push
jns
jno
fld
stos
leave
jmp
in
cld
add
inc
inc
adc
mov
mov
or
aad
(bad)
imul
inc
sbb
push
out
sbb
adc
dec
mov
scas
sar
fdiv
sub
dec
push
or
jne
(bad)
xor
test
inc
aas
or
les
(bad)
sti
icebp
and
(bad)
jmp
out
mov
xchg
lds
xchg
mov
or
push
mov
jo
(bad)
ss
repz
(bad)
imul
outs
pop
dec
cmps
fld
daa
imul
lods
cs
sar
or
imul
(bad)
sti
arpl
push
push
push
add
test
sub
or
test
push
scas
(bad)
adc
je
pop
js
out
outs
cmp
or
push
push
call
jo
aad
imul
nop
sub
cmp
jnp
xchg
cmp
jne
mov
xlat
lahf
icebp
push
leave
xchg
movs
aas
or
sub
cmp
and
outs
scas
xchg
in
into
daa
pushf
jo
test
hlt
dec
sub
fidiv
(bad)
out
loop
inc
dec
fstp
or
loop
pop
sbb
cmp
repz
lods
sub
pop
sub
mov
xor
add
or
loop
mov
rol
in
out
shl
sub
sahf
inc
lock
mov
sbb
xchg
mov
repz
xor
lods
aaa
add
pop
push
jns
ret
repz
movs
ror
repz
mov
mov
xor
lods
and
rcr
cmp
xchg
push
sbb
adc
std
jne
rol
xchg
mov
adc
rol
fadd
hlt
adc
fisub
in
pusha
lods
adc
mov
and
or
jecxz
add
xor
aad
cli
(bad)
mov
popf
fld
xchg
xor
stos
inc
aas
xor
cmps
mov
in
or
enter
sbb
sbb
js
dec
inc
js
fsub
add
(bad)
xchg
inc
aas
not
bnd
pop
icebp
dec
push
xchg
pop
jne
and
inc
je
cs
mov
pop
dec
in
adc
fnstsw
ds
xor
jnp
add
mov
lea
cmc
js
push
mov
loope
sub
sbb
mov
xor
push
in
(bad)
call
in
bound
jg
and
mov
mov
stc
jmp
int
or
xor
jle
mov
movs
adc
dec
sbb
bound
pop
add
adc
mov
adc
xor
cmp
mov
mov
loope
loop
mov
mov
scas
push
mov
lods
in
xor
(bad)
and
mov
mov
les
lock
xchg
push
test
cmp
adc
dec
adc
push
(bad)
or
xlat
jne
sub
adc
adc
pop
or
aam
test
movs
popa
and
sbb
ret
fdivr
mov
and
or
mov
fcmovnb
adc
std
pop
out
ret
clc
arpl
or
and
sbb
js
or
(bad)
xchg
add
ins
iret
mov
(bad)
fwait
out
mov
xchg
rol
fdiv
call
inc
add
inc
mov
sbb
dec
pop
pop
xchg
push
(bad)
pop
adc
mov
push
adc
pop
addr16
or
std
bswap
ret
push
fmul
add
enter
je
(bad)
push
mov
fwait
push
pop
mov
mov
pop
lock
arpl
fisub
or
out
mov
(bad)
fistp
sub
add
jl
(bad)
sbb
cmc
in
sbb
and
es
shr
aas
rcr
xchg
mov
mov
cmp
mov
mov
scas
jmp
push
mov
mov
inc
mov
cmp
jp
sub
sti
xor
dec
shr
test
js
in
mov
test
fdivr
xor
out
movs
adc
xlat
adc
mov
in
mov
scas
pop
dec
jp
push
shr
(bad)
shl
ret
xor
mov
mov
inc
ins
in
(bad)
hlt
and
sub
cld
cmps
cmp
cmp
xchg
leave
mov
adc
adc
int
addr16
xchg
imul
or
add
gs
cmp
mov
cmp
jnp
inc
inc
(bad)
sti
add
mov
repz
cdq
call
dec
sti
loope
push
std
mov
pop
push
adc
inc
pop
jb
pop
add
pop
sbb
or
js
fistp
and
ds
shl
cmp
sub
xchg
jno
out
inc
scas
repnz
push
mov
inc
sub
shl
adc
mov
xor
and
call
inc
mov
cld
dec
inc
cmps
and
jns
int
pop
mov
dec
sub
cmp
enter
fsubr
retf
xchg
cdq
add
sbb
imul
mov
cmc
lods
push
ds
push
push
aad
and
pop
fcomip
dec
imul
mov
(bad)
or
add
xor
and
push
adc
fdivr
out
in
mov
sub
add
adc
ins
lods
fist
xor
pusha
lock
sub
repnz
push
xchg
xor
std
sbb
mov
mov
sub
jmp
jo
adc
jmp
jge
or
mov
jge
dec
imul
dec
pushf
adc
out
push
mov
jge
imul
rcr
dec
xor
or
arpl
mov
push
push
inc
popa
adc
mov
add
adc
push
sub
(bad)
mov
out
js
scas
shr
lods
cli
and
aaa
pop
cmp
cmovge
mov
push
push
je
sbb
mov
cmp
pop
or
test
rcl
sbb
test
imul
jbe
xchg
push
mov
in
scas
and
pusha
xchg
retf
aaa
jae
daa
mov
or
fimul
cmp
xchg
notrack
cmp
addr16
imul
xchg
out
jmp
or
sbb
xchg
or
dec
js
dec
cmp
cdq
in
sub
mov
(bad)
and
and
pushf
out
cli
shl
pop
aam
ds
mov
sbb
mov
les
lods
adc
and
mov
lods
std
mov
mov
mov
int3
jno
daa
xchg
sbb
mov
shl
and
sub
pop
pop
(bad)
mov
pop
or
inc
mov
imul
xor
pop
stos
lea
(bad)
stos
inc
fadd
repnz
ja
int
pop
push
les
popa
aad
(bad)
aam
push
push
push
sub
bound
sbb
xor
dec
or
fs
add
loop
outs
dec
sub
and
xor
mov
ss
xor
bnd
(bad)
loope
and
outs
sub
shl
sbb
pop
or
outs
stos
xchg
retf
fldenv
or
jmp
arpl
inc
cmps
mov
xor
sub
inc
inc
sub
or
xor
sbb
call
mov
dec
inc
add
push
(bad)
lods
arpl
sbb
test
imul
push
ja
outs
xchg
push
neg
dec
rol
ds
cmp
cmp
hlt
push
xor
jge
sbb
push
aaa
call
push
pop
xchg
adc
test
jle
pop
aad
xchg
dec
cmps
pop
mov
xor
inc
sbb
mov
dec
lock
test
and
enter
sbb
clc
popf
aaa
ins
es
and
xchg
out
sub
loope
jbe
cmp
je
adc
sbb
push
dec
dec
inc
inc
mov
inc
repnz
sub
clc
out
sbb
(bad)
das
lods
hlt
retf
lahf
loop
mov
je
push
out
cmps
clc
push
xor
int3
loopne
loop
xor
outs
push
aas
mov
icebp
xchg
mov
fldenv
dec
xchg
push
or
iret
xchg
and
in
mov
inc
in
jmp
jge
pop
arpl
(bad)
loopne
adc
mov
add
test
idiv
adc
dec
call
in
sub
fisttp
data16
lea
sbb
hlt
pop
test
xchg
imul
dec
cmp
je
cs
fmul
sbb
lods
jns
ficom
xchg
cmp
sub
jecxz
pusha
retf
push
test
sti
aas
add
mov
add
into
push
into
adc
jle
adc
pop
xchg
mov
cs
xor
popa
clc
pop
and
pop
adc
mov
cmps
(bad)
xchg
lods
mov
mov
inc
inc
sti
inc
mov
test
and
and
call
sti
pop
jp
sbb
pop
mov
enter
inc
or
icebp
add
ins
fsub
dec
(bad)
rep
(bad)
jg
dec
add
fsubr
dec
pop
sbb
in
xchg
lahf
ret
mov
loop
cmp
mov
inc
call
aaa
adc
into
cmps
adc
add
repnz
sbb
ret
xlat
call
inc
(bad)
icebp
fadd
pushf
imul
das
and
cwde
pop
inc
test
ret
test
xlat
int
jb
inc
fstp
jns
and
aad
cmp
nop
pop
ss
mov
ins
mov
out
mov
(bad)
cwde
push
and
xchg
pop
xor
or
cli
add
add
cmp
and
mov
data16
jg
out
adc
push
or
test
arpl
adc
mov
arpl
mov
(bad)
jnp
out
fs
mov
clc
shl
cwde
cld
jbe
xchg
mov
sub
mov
xor
push
mov
xlat
fld
adc
or
call
pop
mov
popa
out
dec
mov
popa
ss
bound
neg
scas
and
cmp
adc
jne
std
xchg
cmps
cmp
push
movs
sbb
mov
jp
lods
mov
sbb
push
pop
fs
out
inc
pop
mov
imul
out
inc
mov
sbb
mov
add
sub
retf
pop
cmp
xor
data16
lods
cmp
sbb
idiv
mov
stos
mov
mov
or
aad
or
jb
ror
gs
jmp
xchg
sahf
or
mov
(bad)
lock
stos
push
mov
adc
mov
fld
sbb
stos
neg
stos
stc
pop
(bad)
mov
outs
sbb
jo
push
rcl
cld
or
imul
mov
imul
arpl
xor
inc
pop
dec
mov
call
mov
ret
hlt
jno
sar
mov
fimul
in
inc
inc
out
add
or
shr
cli
sub
sbb
cmp
dec
retf
popf
push
push
shl
sub
xchg
push
mov
sub
in
out
in
cmp
jg
sub
jb
je
sub
jnp
arpl
out
dec
cdq
pusha
bound
add
test
or
iret
mov
pop
ins
mov
mov
or
add
push
xor
in
inc
jmp
fwait
add
sbb
in
xor
shl
pop
add
leave
leave
jecxz
push
adc
aas
ja
sar
xor
lods
aaa
stos
cmp
lods
shl
mov
jmp
in
scas
cmp
cwde
int3
into
mov
clc
std
std
dec
push
retf
mov
scas
xchg
lahf
je
mov
pop
or
sahf
imul
sbb
icebp
sbb
hlt
retf
in
adc
cmp
xor
add
in
loope
xchg
xor
adc
sahf
fwait
neg
inc
unpcklps
inc
cmp
pop
mov
mov
test
jbe
mov
jp
shr
mov
fdivrp
outs
mov
sbb
fsubr
imul
push
pushf
push
xchg
sbb
(bad)
push
out
jno
push
mov
ss
test
loopne
sub
ja
idiv
aad
stos
cmc
repnz
hlt
jge
xchg
push
xchg
cwde
mov
jecxz
adc
jnp
fsub
mov
push
fwait
add
cmp
neg
aad
movs
mov
dec
adc
shr
cmp
loopne
loope
aaa
stos
enter
psllw
mov
ins
in
ret
mov
(bad)
out
dec
shl
imul
xchg
icebp
jne
jae
popa
xchg
mov
cmp
adc
(bad)
push
ss
out
mov
repnz
pop
cmp
jnp
into
test
push
jge
retf
xchg
pop
cdq
mov
pusha
inc
shl
shr
les
xor
rcr
data16
fistp
jg
add
jno
jl
pop
ss
dec
mov
test
out
push
daa
sbb
cdq
jp
inc
push
pop
call
mov
in
mov
pop
xor
ja
cmps
sub
push
(bad)
(bad)
pop
fsub
test
outs
imul
push
lahf
dec
add
jg
(bad)
leave
imul
popa
sar
cmp
pop
neg
adc
repz
push
(bad)
(bad)
xor
xlat
and
or
js
sub
fisttp
add
ret
sbb
loope
repz
sub
add
sti
mov
daa
fs
cmc
mov
aad
mov
add
cmps
imul
lock
cmp
pop
push
aas
(bad)
jp
shl
adc
dec
xor
mov
scas
out
retf
lods
pushf
outs
cmps
sahf
cli
jmp
jns
ins
int3
pop
(bad)
gs
jae
fnstsw
mov
inc
rcl
in
lds
sub
mov
pop
popa
ret
sbb
into
inc
jmp
out
(bad)
fstp
mov
push
mov
sbb
push
aas
fsubr
shl
xchg
std
mov
xchg
and
lock
push
rcr
aas
std
sbb
das
add
xchg
hlt
out
dec
inc
std
cld
vpsubb
(bad)
jns
repnz
adc
shl
push
jno
xor
mov
daa
inc
sub
jne
ret
dec
test
leave
add
and
fstp
(bad)
jmp
add
mov
js
aam
push
lods
xchg
xchg
test
icebp
scas
sub
icebp
sub
sub
mov
ja
and
jle
or
xchg
adc
mov
sbb
push
lock
arpl
mov
imul
mov
sub
cmp
popf
pop
xchg
adc
ins
sub
nop
popf
or
push
xchg
aaa
movs
aam
rcr
ds
mov
out
inc
cmp
sub
fnstsw
sub
pop
jl
xor
imul
mov
aaa
imul
or
daa
xor
and
mul
dec
dec
push
adc
lds
mov
fwait
add
in
dec
pop
frstor
int
jns
mov
cmp
push
jmp
adc
jl
in
inc
mov
pop
loopne
and
jbe
aas
stc
mov
test
imul
sub
cld
pop
loope
cmovg
and
call
xor
mov
sub
push
in
popf
(bad)
jne
jp
jne
mov
aaa
mov
imul
retf
cmp
lods
add
or
sti
jle
mov
mov
clc
mov
inc
xchg
or
movs
jbe
mov
add
cmp
call
mov
xchg
pop
push
popa
pop
adc
ja
jl
sahf
dec
in
or
(bad)
inc
shl
test
loope
pop
call
repnz
jge
clc
push
ret
pushf
loopne
or
adc
ror
xchg
ins
push
inc
mov
push
pop
clc
push
xlat
pusha
mov
cs
sub
mov
movs
ret
xchg
cdq
mov
fstp
loopne
push
test
test
mov
aad
mov
xchg
xchg
xchg
cwde
sbb
fadd
(bad)
lds
mov
dec
iret
xor
(bad)
xchg
lods
movs
sbb
xor
jne
inc
xchg
cmp
sub
and
mov
and
(bad)
adc
sbb
sbb
mov
loope
inc
xchg
pop
imul
push
clc
mov
(bad)
mov
sbb
mov
pop
stos
pop
movs
scas
inc
or
cs
cdq
push
test
or
xor
(bad)
popf
ins
popa
xor
mov
jo
xor
xchg
push
adc
xor
ins
push
xlat
push
inc
outs
push
gs
sub
mov
push
das
cmp
cmc
cmp
pop
push
mov
xor
adc
outs
sub
fnstsw
je
inc
in
sub
(bad)
out
out
pop
das
js
and
scas
mov
loop
mov
push
adc
mov
fstp
mov
mov
aam
scas
out
sub
hlt
clc
mov
jle
pop
adc
fwait
leave
jb
inc
movs
lock
les
add
or
cli
(bad)
in
daa
or
rcr
out
mov
pusha
ss
pop
xchg
or
jmp
popf
jnp
jmp
pusha
pop
addr16
jg
dec
shl
cmovnp
fidivr
pop
popf
pop
push
jecxz
cmp
xor
sahf
cwde
adc
jmp
ror
and
dec
add
sub
icebp
adc
xor
cmp
push
inc
pop
adc
cdq
add
sbb
mov
loop
inc
jmp
shl
cmp
(bad)
mov
cmp
arpl
mov
sbb
mov
sbb
scas
cmps
cld
jo
(bad)
mov
test
jmp
add
out
push
sub
(bad)
mov
rcr
loope
(bad)
cwde
xor
(bad)
xor
or
out
push
je
dec
push
jge
in
dec
in
mov
(bad)
pop
scas
test
jecxz
fpatan
and
xor
jns
retf
or
into
push
cmp
push
push
(bad)
in
stc
das
shl
xchg
call
mov
inc
push
jmp
sub
mov
mov
and
inc
pop
repz
je
mov
aaa
mov
cmps
(bad)
add
mov
pop
bound
sar
popa
cli
mov
mov
ret
popa
pop
imul
pop
cmp
xor
mov
hlt
mov
enter
dec
inc
inc
sahf
and
xor
(bad)
jl
and
ret
movs
int3
test
pop
fist
cwde
sbb
cdq
fsubr
movd
adc
xchg
pop
cwde
jg
add
movs
or
mov
mov
ficom
and
jnp
push
call
ficomp
add
mov
cmp
imul
and
shl
mov
add
(bad)
add
leave
sbb
fistp
lock
(bad)
(bad)
xor
adc
ja
pop
xchg
mov
or
ss
jns
lods
scas
call
pop
mov
add
jne
(bad)
jecxz
mov
shr
clc
jge
(bad)
mov
out
sub
pop
test
jnp
xchg
test
xchg
mov
cmp
aas
xchg
sbb
push
pop
push
and
daa
mov
or
push
and
mov
inc
push
imul
add
sub
sub
test
int3
(bad)
mov
sbb
repz
iret
jne
cmc
pop
out
inc
jmp
cmp
int3
retf
ret
cmps
mov
adc
sub
xchg
mov
adc
pop
in
lods
adc
ret
and
gs
sub
sub
(bad)
ja
or
ja
mov
pop
stos
dec
movs
xlat
test
sub
pop
add
xor
add
popa
mov
add
ds
fiadd
aad
fld
mov
shl
jmp
cmp
pop
std
scas
test
ins
call
std
cli
dec
xchg
out
fist
test
cvtps2pd
sbb
inc
inc
lds
fstp
mov
out
fistp
loopne
push
dec
addr16
mov
mov
loop
repnz
shl
shl
aam
push
ins
inc
inc
or
mov
int3
mov
nop
ret
ret
push
push
cmp
retf
clc
in
icebp
pusha
retf
xor
daa
dec
sbb
lods
cmc
mov
add
adc
movs
push
leave
je
mov
push
retf
mul
popf
push
push
push
les
dec
mov
in
inc
rol
ss
dec
mov
mul
sub
dec
fnstsw
xchg
pop
pop
lock
sbb
push
cmp
leave
je
or
gs
(bad)
fadd
ja
imul
or
cmp
enter
mov
sbb
push
sar
and
cmp
mov
mov
iret
(bad)
inc
movs
int3
xchg
inc
sti
sahf
inc
push
jge
or
pop
and
mov
ja
test
mov
pop
sub
sub
dec
cwde
inc
xchg
add
inc
dec
push
inc
sub
pop
xor
fldenv
xor
(bad)
mov
xor
out
call
sub
sbb
lahf
jmp
cwde
cmc
add
mov
cmps
mov
cmp
jg
imul
mov
(bad)
call
(bad)
scas
mov
aad
push
fwait
aad
and
pop
in
or
xor
lds
in
push
sbb
and
loopne
stc
popf
sbb
inc
ficomp
push
lahf
cmp
(bad)
or
lods
pusha
popa
xchg
daa
int
pop
sbb
lock
push
cdq
sbb
and
pop
popa
mov
cmp
jb
push
inc
or
jb
jge
dec
push
ja
dec
jnp
ret
pusha
mov
lahf
push
stos
push
enter
lods
popa
pop
mov
add
inc
and
stc
fistp
or
rol
fst
inc
inc
loopne
pop
push
dec
push
std
fidivr
or
inc
mov
outs
dec
mov
or
shr
mov
mov
mov
jp
ins
jae
adc
cmp
or
das
fbld
sbb
lods
test
aaa
jp
pop
inc
ror
stos
mov
test
das
xchg
leave
repnz
out
sbb
cmp
jp
call
test
jmp
or
dec
dec
retf
(bad)
jge
jmp
scas
mov
(bad)
fmul
lea
fst
or
in
add
xor
shl
data16
add
mov
sti
xor
test
push
jb
jns
daa
std
adc
mov
test
xchg
into
and
cmp
add
cmp
loope
fcomp
push
xchg
into
cwde
cmp
xlat
(bad)
cmp
cmp
cmps
jae
imul
inc
sbb
pop
je
out
cmp
dec
iret
xlat
lods
mov
dec
inc
adc
adc
xchg
jp
xor
mov
mov
ja
ds
(bad)
imul
rep
lds
movs
or
dec
mov
xchg
in
jae
aam
test
in
aas
retf
lods
adc
ror
stos
jns
sbb
fstp
mov
rcl
mov
jl
mov
bound
je
pop
cmp
mov
into
mov
dec
out
xchg
ds
jns
dec
cs
xlat
jo
ret
aam
mul
stc
mov
outs
cli
movs
mov
inc
das
and
and
mov
lods
adc
mov
sub
pop
adc
ss
jbe
test
mov
xchg
aad
and
mov
(bad)
mov
dec
xor
iret
xchg
dec
jae
out
xchg
cmp
rol
pop
outs
jnp
aaa
fwait
test
test
xor
push
cmps
cld
xor
rcl
das
test
push
call
loop
je
popa
dec
mov
xor
mov
and
test
add
cmp
inc
aam
int
mov
movs
pop
cdq
inc
dec
cmps
cmp
stc
mov
pop
pop
sbb
pop
inc
mov
les
popf
cdq
cwde
enter
xchg
cmps
mov
push
dec
mov
scas
fwait
aas
jmp
push
pop
dec
pop
or
std
or
out
mov
aaa
mov
add
jb
or
(bad)
xchg
push
(bad)
sub
imul
inc
xor
lods
mov
push
repnz
jmp
repz
or
jmp
add
and
sub
push
dec
mov
mov
je
data16
push
inc
inc
add
je
mov
test
test
aas
(bad)
mov
std
in
sbb
(bad)
mov
or
pop
sub
jmp
outs
(bad)
bound
mov
repnz
mov
scas
sbb
out
pop
call
das
sahf
out
jp
stos
dec
mov
test
and
or
push
pushf
xor
mov
movs
jb
(bad)
aad
jle
fisubr
pop
xchg
test
inc
nop
shl
inc
les
mov
ret
jl
aaa
stos
pop
pop
pop
push
mov
mov
or
jle
add
push
jle
adc
inc
xchg
dec
(bad)
repz
add
sbb
xchg
jns
fdiv
in
fst
xchg
repnz
movs
scas
int
lahf
xchg
lahf
scas
inc
dec
nop
sahf
and
shl
std
idiv
mov
lahf
xchg
ins
pop
push
fsub
das
hlt
sub
pop
xchg
lods
lock
test
cmp
pusha
sar
(bad)
fsubr
cmp
into
push
mov
icebp
mov
mov
jo
stos
(bad)
sti
imul
shl
jae
(bad)
sub
(bad)
sar
cmps
in
mov
and
sub
adc
repz
(bad)
sar
das
popa
lds
jno
retf
sti
mov
data16
jae
enter
or
out
sbb
jnp
or
addr16
jp
mov
mov
fst
jns
aaa
out
sbb
(bad)
pop
fld
push
and
jbe
test
mov
xchg
ret
clc
fs
dec
(bad)
jnp
es
adc
imul
std
add
sahf
retf
pop
outs
push
popa
or
retf
rcr
and
and
and
pop
repnz
pop
cli
fcomp
adc
lds
or
jp
mov
sub
loopne
mov
inc
adc
or
mov
icebp
dec
shl
jne
jmp
sbb
jp
movs
push
arpl
sbb
push
mov
jne
rcr
and
mov
fdivr
ins
mov
pop
popf
mul
lods
pop
pushf
test
ins
nop
add
fnsave
pop
mov
icebp
mov
in
clc
sub
pop
sub
add
inc
mov
repz
arpl
mov
xchg
and
mov
aad
jbe
push
out
dec
(bad)
jnp
sbb
stc
jnp
xor
mov
pop
dec
add
sub
retf
ja
pop
das
retf
je
and
lock
xchg
push
pop
nop
mov
xor
test
(bad)
movs
(bad)
(bad)
scas
push
rol
sub
out
adc
jge
or
inc
and
pop
dec
leave
jl
in
mov
inc
inc
push
pop
cmp
xchg
fbld
and
and
mov
imul
data16
shl
and
les
adc
push
rcr
imul
mov
mov
shl
and
pop
(bad)
shr
leave
xchg
and
cmps
inc
add
rcl
mov
inc
lock
cmps
sub
into
xor
mov
scas
vmread
scas
mov
mov
or
fcom
dec
mov
pop
clc
xor
lods
adc
pop
cmp
cld
outs
movs
push
adc
or
out
push
and
cmps
js
shl
es
mov
icebp
push
in
inc
xchg
and
call
mov
add
movs
push
ins
out
cmps
adc
mov
mov
js
es
jbe
stos
or
ror
int
ins
lods
das
movs
or
sub
in
xor
mov
pushf
xchg
adc
cmp
inc
adc
mov
xchg
cmp
adc
leave
pop
ins
push
lea
retf
leave
jle
xor
inc
xchg
pop
xchg
aam
dec
mov
icebp
dec
ret
sbb
mov
in
out
retf
test
dec
push
xor
lods
pop
ja
popa
jg
inc
pusha
cmp
lds
jae
in
setl
mov
mov
cmc
leave
inc
fsub
pushf
sbb
mov
enter
arpl
int
ss
ret
add
push
inc
mov
pop
mov
(bad)
jg
call
shl
push
(bad)
or
pusha
jle
les
xchg
jecxz
jbe
cmp
mov
sub
fisubr
fld
jecxz
sub
bound
inc
add
retf
sbb
xor
inc
outs
jbe
xchg
xchg
dec
out
stos
dec
aam
pop
mov
test
test
sub
push
xor
pop
ret
xchg
mov
inc
imul
jnp
adc
test
or
jl
pop
fisttp
cmp
dec
add
lock
ds
dec
or
sub
push
jle
jno
test
cmp
xchg
mov
fwait
sub
outs
mov
mov
gs
or
xchg
mov
pop
inc
pop
xor
sub
retf
pop
pop
sahf
cmps
add
fisubr
das
(bad)
jae
mov
movs
mov
xor
push
push
fcomp
mov
mov
cmps
repnz
std
adc
dec
pop
loop
jo
rcr
xchg
dec
hlt
aam
mov
jge
xchg
jne
imul
bound
mov
int
xchg
adc
cli
fldcw
repz
fstp
mov
cdq
and
inc
mov
push
mov
fcom
jge
jae
and
mov
dec
imul
movs
cmc
mov
imul
sbb
mov
cmp
cmps
repz
imul
out
cmp
pop
scas
aas
movs
cmc
sub
ds
push
call
and
cmp
cmp
push
push
data16
push
jae
fs
rcl
outs
push
test
or
jae
push
jns
mov
sub
icebp
stos
(bad)
(bad)
loope
push
dec
adc
data16
mov
xlat
push
xor
retf
rcl
lahf
cmp
scas
sbb
les
mov
movs
pusha
jo
xlat
or
add
out
xchg
repz
ss
xor
pop
in
mov
(bad)
in
jl
int
push
in
add
inc
loop
jge
ficomp
jl
pop
jge
cdq
pop
and
sub
aad
pop
xor
mov
mov
inc
pop
xor
xchg
movs
adc
pop
push
fdiv
lods
adc
xor
iret
shr
nop
pushf
icebp
mov
xor
retf
frstor
mov
dec
push
and
call
xchg
arpl
mov
pop
xchg
retf
sbb
enter
ins
retf
xor
sbb
and
stc
fistp
(bad)
leave
cmp
je
es
push
fwait
and
cwde
push
movs
mov
ja
pop
adc
add
pop
pop
dec
mov
add
jo
push
aas
out
add
sbb
pusha
inc
or
out
or
jmp
cmc
jmp
(bad)
cli
add
stos
or
sub
in
in
test
stc
mov
ins
into
ins
pop
and
push
(bad)
push
push
xchg
or
inc
inc
les
inc
mov
pop
addr16
shl
xor
ror
cmp
xor
je
pop
dec
out
adc
(bad)
dec
into
or
and
std
loop
ja
in
nop
mov
jle
sbb
ins
mov
stos
daa
xchg
mov
test
sbb
cmp
sti
mov
xchg
push
jb
xchg
daa
test
popf
add
dec
call
out
(bad)
(bad)
mov
jp
or
mov
rcl
popa
cmp
in
or
fidiv
jg
xor
aad
int3
add
xor
out
iret
aas
sbb
bound
adc
test
fs
aad
lea
std
movs
sbb
mov
fisubr
inc
adc
in
imul
push
ss
pop
int3
mov
stos
int
or
sub
sbb
xor
jg
cld
jmp
shr
sub
fldcw
pop
xchg
xor
into
cmp
fucomip
cmp
pop
into
movs
fild
mov
std
bound
cwde
mov
clc
inc
sahf
rol
and
fist
and
jmp
je
test
scas
sub
inc
icebp
gs
in
repz
inc
icebp
dec
iret
jb
add
call
loope
sub
aam
retf
lahf
fnsave
xor
jnp
(bad)
and
fwait
and
lea
sub
iret
sub
popf
popa
pop
cwde
lods
jmp
rcl
loope
into
push
aad
(bad)
cli
xchg
stc
add
scas
cld
jmp
push
in
leave
inc
cmp
mov
jns
xchg
cmp
xor
jle
mov
adc
pusha
test
idiv
leave
sbb
jle
push
into
jg
jb
jo
push
or
in
retf
dec
(bad)
fidivr
and
sub
jmp
or
hlt
push
pop
pushf
mov
or
test
mov
lods
push
and
or
add
xchg
fsubr
dec
and
sbb
rcl
adc
mov
dec
imul
icebp
or
xchg
fcmovu
fs
xor
aas
xchg
and
loop
or
xor
shl
adc
scas
sbb
lods
jno
and
fmul
jmp
(bad)
out
jl
adc
mov
xchg
push
xchg
and
mov
jne
inc
mov
jecxz
push
jl
popaw
mov
and
mov
inc
es
adc
ins
repz
jno
fcmovbe
pop
std
push
push
enter
pop
push
add
pushf
pop
loopne
aad
jbe
xchg
xor
cmps
mov
jb
fimul
pop
pushw
ins
xor
out
imul
pop
push
loop
inc
xor
xor
lea
push
xor
sti
fwait
(bad)
imul
out
xchg
daa
cmps
xchg
mov
adc
ss
je
fs
dec
iret
fdivr
pop
out
sub
cld
sub
push
pusha
in
pop
and
ins
fwait
movs
call
cdq
iret
xor
outs
std
cmps
idiv
outs
dec
xchg
pusha
std
ret
movs
cmc
sahf
jmp
out
add
jp
dec
imul
pop
or
adc
xchg
das
repnz
pusha
(bad)
hlt
mov
mov
sbb
cdq
leave
cld
xor
jle
shl
mov
aam
cld
and
das
(bad)
std
pop
fbld
addr16
dec
(bad)
jne
les
cmc
jmp
call
xor
mov
pop
leave
mov
jno
add
gs
rcr
pop
jmp
mov
fisub
sbb
xor
cdq
mov
xor
cmp
mul
shl
adc
mov
or
adc
or
ins
pop
loope
inc
popa
mov
call
test
aaa
mov
shr
mov
dec
jb
mov
inc
sub
jae
je
jo
cld
xor
je
and
je
call
xchg
stc
imul
test
cmp
dec
out
push
shl
push
fwait
add
adc
sbb
retf
cli
out
js
dec
pushf
jecxz
cmp
inc
cmp
or
or
sub
jp
outs
cmps
iret
dec
or
cmp
dec
inc
pop
sub
inc
pop
getsec
mov
push
mov
movs
scas
xlat
gs
xchg
pop
pop
outs
mov
push
jmp
jmp
ja
ja
sub
gs
and
inc
bound
int
icebp
push
ins
jnp
push
mov
xchg
mov
ss
jg
jp
aam
aas
outs
in
(bad)
sub
sbb
sar
pop
shr
sbb
jmp
in
sbb
int3
fdivr
dec
in
(bad)
stc
enter
sub
test
pop
data16
push
lods
les
and
cld
xor
std
test
(bad)
cmp
xlat
cs
les
sti
or
jbe
dec
xor
(bad)
jbe
add
mov
mov
repnz
(bad)
stos
xor
and
add
and
sbb
js
sbb
and
sub
mov
(bad)
sbb
sub
jnp
cmp
and
rcl
add
and
xchg
mov
pop
sbb
stos
jge
cmc
push
sbb
mov
push
cli
mov
xchg
xchg
enter
add
out
test
out
jl
xor
inc
inc
xchg
outs
fst
shr
gs
mov
jne
dec
pop
adc
stos
push
scas
(bad)
jmp
inc
movs
or
or
movs
xor
(bad)
outs
inc
leave
test
outs
mov
jns
sub
sar
xor
mov
add
adc
jmp
hlt
in
add
aam
sbb
cld
loope
outs
mov
dec
lock
rcl
push
jmp
adc
test
std
jb
add
cld
scas
loope
xchg
and
dec
xor
enter
pop
dec
pushf
ja
aad
test
push
leave
push
lds
retf
test
call
push
data16
imul
dec
(bad)
rcr
pop
sub
js
xchg
rcl
pushf
cmp
pop
xchg
and
cmps
call
not
xchg
retf
aaa
lahf
jns
xor
mov
call
je
ins
outs
dec
pop
(bad)
or
outs
inc
add
cmp
clc
adc
cmp
pushf
(bad)
cmp
add
ins
inc
pop
rcl
adc
mov
xor
xchg
mov
out
js
or
dec
cmps
add
pop
icebp
dec
add
jne
jl
addr16
iret
rcl
cmp
mov
call
ss
jb
out
cwde
push
test
jmp
dec
shl
xchg
stc
push
pop
mov
setg
mov
push
cmp
mov
frstor
push
pop
(bad)
pop
aaa
and
jge
sub
sbb
cmp
xor
stos
and
cwde
push
fwait
cs
push
nop
sub
pop
push
sbb
cwde
int
in
inc
pusha
mov
jmp
mov
mov
and
push
(bad)
jne
mov
sbb
mov
sbb
out
stos
out
mov
je
push
ret
imul
sbb
jae
je
push
movs
test
sbb
adc
pop
cmp
es
mov
dec
jbe
fmul
xchg
popf
and
push
mov
call
jbe
push
repnz
adc
xchg
call
test
mov
cli
add
cmp
cmps
xchg
mov
retf
jle
lods
dec
pop
jb
xor
dec
sbb
jecxz
pop
sbb
sub
lods
mov
sbb
ficomp
mov
dec
fs
shr
int3
lea
pusha
loope
dec
out
sbb
mov
adc
sti
and
popf
adc
adc
fwait
hlt
xor
ins
mov
(bad)
pop
sbb
out
sbb
lahf
neg
xchg
movs
pop
mov
idiv
push
mov
pop
push
inc
adc
ins
jp
stos
adc
jmp
movs
ret
in
mov
mov
sbb
call
clc
dec
sbb
mov
mov
sbb
fidivr
adc
(bad)
fsub
inc
hlt
int3
jae
xchg
adc
pop
pop
bound
nop
js
loope
or
jl
adc
mov
fldcw
mov
cmp
sbb
pop
adc
das
and
xor
jo
dec
iret
out
add
jnp
jne
sub
mov
aad
arpl
xlat
sahf
stos
std
es
dec
(bad)
xor
loope
(bad)
jmp
in
sub
push
xchg
add
dec
mov
dec
pop
retf
jl
adc
push
test
icebp
frstor
xor
inc
adc
fisub
outs
clc
sahf
add
dec
dec
mov
xor
imul
mov
xor
imul
xor
sbb
mov
loopne
sahf
mov
push
push
loop
ror
sti
scas
repz
aaa
out
push
stos
mov
jge
mov
mov
mov
mov
push
pusha
mov
push
clc
mov
inc
push
stos
in
cmc
mov
in
dec
movs
mov
fadd
fs
xlat
hlt
fisttp
inc
int
mov
rcr
mov
lds
out
xor
sbb
rcr
push
push
pop
retf
or
retf
fistp
in
inc
jl
ss
sbb
nop
mov
in
xchg
in
jmp
cmp
sub
into
add
ins
scas
std
xchg
repz
cmc
sub
pop
xchg
inc
out
pop
test
and
push
lods
int3
imul
and
or
xlat
add
xor
add
lock
jge
int3
or
mov
jnp
or
or
ds
mov
sbb
xor
add
fdiv
sbb
push
adc
mov
jg
push
addr16
adc
mov
xchg
pop
jge
es
test
sahf
sahf
mov
fistp
dec
or
(bad)
xchg
fsub
test
out
mov
push
rcr
cmp
mov
adc
ret
jne
mov
add
pushf
inc
jmp
arpl
xor
shr
push
xchg
leave
test
push
and
mov
shl
ror
nop
loope
pop
out
jg
cmp
cmp
fdiv
popa
pop
loop
lods
dec
arpl
sti
sub
lods
clc
add
mov
jmp
or
sub
test
xchg
xor
mov
jg
inc
mov
mov
test
mov
jmp
jae
daa
xchg
jno
inc
paddd
xor
addr16
movs
cwde
or
cli
fnstenv
scas
fidivr
push
jbe
fnsave
jmp
xor
ds
and
jnp
add
repz
fiadd
ins
xor
mov
mov
movs
fsubp
mov
mov
xchg
ret
fsubrp
push
les
mov
nop
inc
loopne
imul
xor
or
add
lock
or
jmp
das
and
inc
mov
cmp
mov
addr16
les
aad
inc
jb
jmp
jp
sub
loope
jl
cmp
sub
rol
test
dec
dec
pop
jmp
je
mov
repnz
mov
or
scas
mov
outs
sub
arpl
inc
mov
sbb
sub
cmc
pop
jecxz
dec
lahf
popa
(bad)
fdiv
repnz
fstp
rcl
jg
adc
(bad)
push
fsub
mov
clc
retf
stos
ret
adc
shl
pop
lahf
out
push
fldcw
outs
sbb
xchg
bnd
pop
rol
add
xchg
(bad)
mov
cli
sub
popf
sub
pop
xchg
imul
jge
out
inc
mov
pusha
mov
mov
hlt
popa
pop
daa
scas
jno
outs
sti
jmp
xchg
das
mov
or
cmp
lds
cmp
mov
dec
in
ds
in
sbb
jno
popf
sbb
jmp
mov
test
jcxz
inc
jmp
aaa
sbb
mov
sub
push
dec
mov
dec
ja
mul
mov
sbb
xor
jp
mov
pop
into
loopne
mov
scas
xchg
cld
sti
sub
loopne
push
mov
pop
imul
(bad)
(bad)
repnz
sub
fs
xchg
jge
jle
stos
pop
push
mov
retf
cli
dec
push
lahf
xor
hlt
std
mov
sbb
loope
(bad)
aam
mov
xchg
(bad)
xor
ins
mov
scas
xor
in
mov
popa
xchg
imul
cmp
in
arpl
jae
(bad)
ds
jle
and
icebp
sbb
or
xor
sub
and
mov
xchg
push
push
mov
xor
push
push
inc
mov
test
inc
mov
xchg
sbb
pop
dec
mov
mov
xchg
fmul
mov
mov
out
mov
scas
and
jno
mov
dec
inc
or
je
ins
push
pop
mov
and
lods
(bad)
ficomp
pop
shr
retf
xor
and
popf
mov
ins
mov
shr
xor
fsubr
loopne
push
test
sub
outs
in
cld
pop
mov
push
(bad)
movs
popf
xchg
inc
rcl
fld
mov
stos
push
ins
or
idiv
sub
fcomp
ins
xchg
mov
jg
push
out
shl
loop
icebp
fmul
inc
fdiv
and
jge
xlat
jmp
push
cmp
inc
add
jb
xor
and
push
in
enter
(bad)
and
inc
std
and
jo
sbb
adc
jmp
jne
push
inc
cmp
loope
sub
out
clc
add
xor
sbb
in
push
xor
rcl
jmp
in
iret
inc
adc
popf
arpl
inc
sahf
leave
imul
out
inc
xchg
jae
mov
jo
or
in
cmp
data16
cs
mov
xor
stos
push
sbb
repnz
inc
stc
mov
pop
sub
movs
mov
inc
adc
aam
mov
adc
sbb
inc
nop
pop
jle
push
shr
fisubr
(bad)
ror
sub
out
xchg
inc
pushf
cmc
mov
xchg
or
xchg
push
and
test
pusha
inc
xchg
adc
mov
push
std
mov
mov
jmp
test
jno
(bad)
inc
mov
popf
xchg
cli
inc
inc
cs
sub
mov
outs
pop
lea
jecxz
popf
fbstp
data16
inc
sbb
hlt
repnz
inc
mov
push
mov
cmps
jae
dec
std
or
pop
xor
daa
sbb
xor
adc
cmp
inc
dec
popa
and
cmp
sar
pop
adc
cmp
shl
repnz
in
xchg
sahf
mov
inc
push
sbb
mov
pop
cmp
ins
popa
mov
sub
mov
ror
sbb
repz
fwait
push
stos
dec
push
jecxz
sub
into
push
or
xor
pop
mov
std
repnz
jl
imul
dec
pop
pop
and
cmp
jno
popa
jae
inc
in
xchg
sar
pop
icebp
mov
jge
mov
adc
fild
out
div
(bad)
pop
aaa
gs
ins
sbb
dec
dec
mov
fisttp
aas
ret
cmp
pop
sbb
jae
outs
test
cmps
sub
ret
test
push
dec
cmp
gs
push
fs
push
mov
fs
push
or
sub
push
mov
jb
dec
add
pop
nop
sti
div
push
mov
bnd
rol
mov
out
and
ss
rol
push
daa
adc
pop
int3
cmp
pop
je
(bad)
add
xor
mov
xchg
mov
mov
shr
jl
cmp
jg
test
inc
nop
jbe
pop
gs
cmp
cmp
ror
not
ja
retf
and
pop
xchg
pcmpeqd
mov
jmp
not
mov
dec
xchg
int3
ins
pushf
jne
clc
cs
(bad)
fcomp
xchg
test
(bad)
jle
aas
iret
cli
push
dec
jnp
jmp
jge
jmp
mov
fild
out
lea
sub
lea
repnz
je
mov
mov
xor
into
hlt
mov
sbb
adc
into
es
popa
fs
cwde
gs
pop
retf
js
enter
bound
mov
enter
add
xchg
dec
ins
pop
add
push
or
ja
push
adc
in
xchg
pushf
xchg
dec
fstp
inc
pop
cmp
into
or
popf
dec
push
add
in
sbb
aad
test
mov
call
stos
or
mov
cdq
xor
and
in
ficomp
ror
aas
ins
mov
mov
jno
dec
mov
pop
inc
xor
mov
adc
pop
mov
clc
test
and
(bad)
js
cmp
sbb
jae
pusha
jne
mov
js
cmps
imul
and
popa
ja
(bad)
ds
in
xchg
pop
mov
repz
push
outs
jge
loope
add
pop
pop
cwde
xor
loop
jl
call
sub
add
pop
pop
movs
rep
adc
pusha
popf
call
imul
div
mov
push
cdq
pop
jnp
push
outs
mov
sbb
pop
inc
sub
cs
dec
gs
ret
mov
retf
adc
imul
mov
mov
call
lahf
retf
push
xor
mov
pop
dec
and
call
addr16
inc
adc
popf
jb
fmul
adc
imul
mov
pop
push
int3
scas
xor
push
or
and
inc
push
cwde
mov
aam
lods
cmc
stos
fisttp
rol
int3
jnp
pop
sub
shr
imul
lods
inc
xor
xor
mov
fidiv
xor
dec
mov
inc
clc
sub
ror
dec
in
imul
sub
mov
stos
ds
in
scas
hlt
xchg
les
imul
push
imul
pop
mov
call
cmps
pusha
(bad)
rcl
push
pop
adc
aam
cmp
jbe
add
scas
and
aaa
cmp
mov
xor
lea
out
xchg
into
stos
clc
jns
addr16
and
add
sub
add
rcl
and
inc
dec
xor
or
sub
fild
sbb
pop
cmp
and
sub
(bad)
jnp
das
push
pop
mov
ror
jmp
sbb
enter
mov
mov
(bad)
loope
sub
jmp
outs
iret
inc
push
sbb
jecxz
retf
scas
sbb
jo
stos
int3
fimul
imul
ins
jo
xor
call
sbb
xchg
cmp
popa
mov
bound
mov
mov
jns
push
aas
pop
cmp
repnz
outs
xor
nop
movs
pop
popa
sub
mov
push
xchg
popa
cmps
dec
jmp
in
popa
or
jp
enter
push
mov
push
cmp
push
fwait
xlat
stc
xor
dec
mov
and
fs
jo
ret
retf
inc
std
mov
and
mov
out
in
mov
in
jge
pop
pop
rol
das
retf
inc
xchg
into
mov
cmp
mov
jle
cmps
adc
mov
leave
mov
js
sbb
add
(bad)
and
test
out
retf
inc
stos
push
retf
mov
jge
(bad)
mov
pop
in
bound
ins
jge
mov
sub
dec
lock
inc
test
pop
pop
push
sub
push
jg
xchg
adc
int
cmc
xor
and
inc
adc
in
scas
mov
test
pop
push
xchg
adc
jl
loop
movs
adc
adc
mov
adc
inc
pop
retf
push
and
nop
sbb
jnp
leave
inc
test
cmp
nop
sti
movs
inc
shl
push
inc
(bad)
shl
cli
div
les
pop
xchg
pop
dec
pop
cmp
imul
sbb
or
test
pop
into
sbb
lds
xchg
and
or
in
sbb
cmp
push
jbe
jg
ins
adc
mul
pop
dec
outs
mov
jle
out
adc
ds
(bad)
xchg
xor
xor
out
cwde
inc
arpl
mov
sub
aaa
mov
shl
(bad)
sbb
cmp
jp
int
sbb
stc
sub
cmp
and
fwait
inc
(bad)
hlt
push
fistp
jbe
mov
stos
cmp
adc
(bad)
mov
jns
gs
jb
dec
mov
cmp
enter
test
mov
push
inc
pop
scas
das
mov
ret
fidiv
into
mov
xor
(bad)
out
iret
addr16
cmp
dec
xor
int
nop
add
lea
jb
add
sti
dec
jl
aam
out
xor
std
ins
clc
ins
mov
sub
pop
arpl
inc
lea
xchg
add
mov
jne
xor
movs
mov
lock
pop
mov
push
push
lock
in
ins
ja
call
gs
ret
xor
sub
movs
sbb
fwait
jae
mov
mov
mov
ror
pop
in
push
dec
push
pop
and
push
out
outs
je
neg
inc
push
inc
jns
sub
add
pop
daa
or
cmps
cwde
fst
retf
loopne
pop
adc
int
pusha
popf
cmc
(bad)
xchg
sub
aad
outs
arpl
sar
pop
cmp
pop
aas
aam
xchg
ins
mov
repnz
fldcw
dec
sub
mov
add
in
sahf
(bad)
cdq
or
scas
jle
int
lock
into
clc
xor
dec
icebp
mov
sbb
jge
cmp
(bad)
xchg
and
xor
aas
je
shl
fild
pushf
mov
or
popa
mov
sbb
mov
rol
in
and
jp
xchg
or
dec
sub
mov
mov
push
test
cdq
xchg
stos
pop
pop
fnstsw
movs
push
jns
outs
imul
outs
mov
loope
dec
std
adc
fnsave
out
imul
xchg
and
lods
mul
jg
pop
mov
mov
test
inc
pop
popf
push
and
(bad)
imul
out
pop
leave
push
sub
fs
inc
jne
xchg
pop
in
imul
retf
cli
fs
push
cmps
jnp
pop
inc
stos
add
mov
pop
enter
sub
loope
sahf
jge
push
xor
jb
and
sub
lahf
mov
cld
call
adc
js
mov
imul
or
inc
out
jae
mov
ror
cld
stc
add
stos
dec
lods
shl
fstp
add
hlt
push
or
sub
push
push
fldpi
in
push
pop
or
cdq
cmc
and
sub
ret
pushf
adc
fcmovnb
pushf
vpaddd
jb
xchg
mov
inc
xchg
add
push
mov
call
adc
pop
xchg
hlt
push
cmp
sbb
inc
ret
fmulp
sahf
sub
cmc
cmc
cmp
pop
lds
pop
cmp
push
scas
dec
cdq
shr
cwde
mov
popf
cdq
lahf
push
cmp
mov
dec
mov
mov
aaa
jae
pop
test
ds
sbb
sahf
icebp
pusha
stos
mov
and
fxch
shr
push
ss
xchg
mov
mov
aam
imul
and
dec
es
lahf
add
add
mov
and
mov
fdivrp
popa
fimul
cmp
(bad)
jmp
call
fdiv
mov
xor
stc
sub
popa
cli
xchg
inc
add
(bad)
cmp
dec
imul
daa
jo
test
fwait
sbb
ret
dec
aam
cmc
(bad)
es
and
inc
adc
pop
dec
xchg
mov
repnz
popf
mov
inc
xchg
test
fs
mov
cdq
repnz
lock
add
nop
push
and
sti
sbb
dec
stos
mov
xor
inc
cdq
xor
add
pop
outs
and
out
fisttp
pop
or
lea
inc
test
push
addr16
mov
mov
(bad)
in
(bad)
cwde
push
js
aam
aaa
pop
inc
adc
mov
and
les
dec
cmp
sar
push
pop
into
ret
mov
aas
mov
(bad)
je
lea
rol
fbstp
(bad)
dec
out
adc
ror
or
das
call
and
dec
out
inc
sub
jg
mov
mov
ds
push
mov
lea
(bad)
xor
xchg
pop
mov
leave
lds
dec
sub
dec
mov
dec
push
out
addr16
pop
add
mov
ss
popf
data16
inc
adc
fld
iret
mov
adc
(bad)
not
add
ds
rcr
fimul
shr
jg
jb
push
dec
xlat
push
mov
push
and
push
jp
movs
inc
fst
stc
pop
cld
and
mov
mov
dec
arpl
xor
pop
add
out
aam
sbb
push
push
sub
jns
xor
push
and
stos
das
jp
jp
mov
outs
mov
test
add
js
xchg
loopne
sub
fcmovnbe
aam
mov
sar
ins
cmp
outs
mov
pop
sub
adc
adc
add
sbb
mov
ins
sub
jp
retf
test
add
push
cmp
test
xchg
adc
daa
and
inc
sub
bound
lock
lock
add
dec
nop
jg
movs
imul
xchg
lds
pop
data16
iret
jmp
inc
jb
aam
mov
xchg
repnz
jmp
pop
xor
inc
jns
cmp
sbb
rcr
xchg
nop
jmp
cwde
add
loopne
jno
inc
ja
in
or
jecxz
ret
fild
xor
mov
xchg
loope
js
dec
es
mov
loop
fsubr
push
sub
push
inc
test
std
push
adc
sub
sbb
or
(bad)
lods
ret
inc
or
jnp
fld
sbb
pop
jecxz
xor
out
inc
mov
in
pop
sbb
jmp
pop
jge
repz
push
mov
pop
pop
or
add
mov
jbe
dec
aaa
cmc
mov
fcomp
or
hlt
in
leave
nop
and
mov
jne
adc
popa
cmps
dec
cdq
sub
inc
xor
mov
dec
dec
push
imul
inc
sub
pop
int
pop
xor
xchg
adc
sbb
jp
shl
fdivr
test
retf
hlt
and
cmp
dec
mov
enter
out
xchg
outs
mov
mov
pop
or
dec
sbb
mov
shl
or
je
call
aad
and
fidiv
sbb
rcr
xchg
cwde
xchg
ins
or
mul
push
push
or
das
push
add
je
inc
inc
add
jmp
xchg
aas
inc
sub
inc
mov
lds
fisubr
pop
fadd
add
cmp
jmp
and
loopne
push
jmp
mov
cli
(bad)
sbb
mov
rcr
push
adc
push
cmc
push
push
outs
adc
inc
and
xor
adc
jne
fbstp
mov
addr16
loop
stos
push
xor
hlt
aaa
push
ror
fnsetpm(287
fs
jle
cwde
aam
(bad)
(bad)
xor
push
mov
pop
aas
jmp
mov
mov
xlat
sbb
pop
fidiv
xchg
adc
call
into
enter
jmp
dec
icebp
adc
sub
jmp
cli
sub
leave
leave
aam
imul
jmp
nop
cs
adc
ds
pop
clc
cmp
in
xor
jbe
scas
sub
pop
mov
xchg
push
jno
cmps
add
or
dec
sub
jecxz
pop
mov
and
dec
imul
test
loope
pusha
in
xor
test
mov
cmps
push
(bad)
xor
stc
fwait
clc
adc
mov
dec
icebp
add
cmp
mov
mov
rol
pop
jmp
in
mov
fsub
scas
mov
es
sbb
int
aas
(bad)
es
xchg
and
icebp
jmp
popa
cli
cmp
enter
push
std
dec
push
inc
(bad)
jmp
ja
jmp
and
js
outs
pusha
mov
dec
push
fldenv
fadd
mov
pop
pop
pop
stos
in
push
ffree
stc
mov
fadd
xor
cs
add
mov
dec
popf
shl
aad
sub
outs
outs
cmp
fwait
and
popa
fsubr
jmp
adc
fwait
shl
pop
jae
mov
add
sub
or
pop
movs
add
out
daa
and
add
adc
out
mov
pop
xchg
fxch
jg
fwait
mov
mov
mov
or
fld1
cmps
sbb
mov
fidivr
adc
or
sbb
dec
mov
xchg
ins
fs
imul
inc
pop
repz
or
inc
ret
leave
test
ret
inc
add
pop
cs
(bad)
retf
or
shl
adc
sbb
sbb
mov
fisubr
das
mov
pop
(bad)
imul
push
adc
stos
leave
aas
cmp
add
mov
and
pop
fisttp
or
call
inc
sbb
imul
stos
sub
push
add
push
pop
addr16
or
mov
int
ja
into
call
nop
mov
push
and
aad
inc
pop
fdivr
(bad)
fdiv
out
ret
addr16
mov
int3
dec
pop
fwait
inc
ja
in
sbb
ja
ins
sub
sbb
fild
sahf
je
fwait
push
movs
mov
cmps
or
pushf
repz
outs
inc
(bad)
dec
pop
jge
(bad)
and
sbb
pop
mov
in
jo
dec
pop
inc
in
mov
scas
mov
js
mov
adc
push
adc
pop
pop
adc
mov
xchg
jbe
out
xchg
xchg
pusha
das
dec
imul
js
fstp
sub
fsubr
sbb
movs
push
fld
std
sub
lea
(bad)
push
mov
popa
jne
fwait
sub
inc
add
(bad)
or
(bad)
sahf
inc
jae
(bad)
lods
dec
dec
clc
add
xor
pop
or
into
test
adc
stc
add
inc
sbb
into
clc
pop
lea
(bad)
cmp
mov
js
sub
movs
mov
(bad)
push
in
bound
push
dec
and
sub
add
adc
out
dec
loop
jg
js
sti
cdq
jl
scas
cmp
cmp
imul
lds
ficom
enter
out
mov
aad
push
inc
mov
jb
test
sub
stos
es
lods
sahf
mov
cld
in
add
push
mov
xor
std
sub
or
hlt
dec
rol
inc
test
fnstenv
jnp
test
gs
ins
sbb
ja
and
lock
mov
push
test
dec
or
test
inc
xchg
pushf
stos
pop
or
and
cmc
push
cmp
(bad)
jmp
or
fldenv
ins
das
retf
repnz
out
mov
test
add
mov
movs
imul
fiadd
push
or
push
in
adc
into
addr16
mov
adc
cmp
mul
rol
movs
rol
sahf
and
ins
mov
test
movs
ror
icebp
mov
(bad)
out
cs
mov
pop
gs
jecxz
inc
std
jne
popa
(bad)
mov
xchg
jge
dec
aad
daa
cmp
mov
push
shl
and
mov
push
js
sbb
pusha
icebp
js
mov
xchg
scas
push
ja
jl
mov
aaa
jb
jp
sbb
icebp
(bad)
pop
call
(bad)
mov
fnstsw
cmp
mov
arpl
lock
lea
mov
sub
out
es
jmp
xor
aas
ret
test
enter
mov
xor
sbb
lea
pop
adc
jns
jl
jl
(bad)
cmp
jno
jge
pop
push
sbb
test
sub
or
push
in
mov
or
out
imul
or
pop
cdq
pusha
xor
xchg
xchg
xchg
pop
rcr
xchg
inc
xchg
jnp
daa
adc
lods
or
mov
cmp
pop
repz
sub
sar
nop
inc
shl
cli
jp
pop
push
or
dec
cmc
push
fxch
sub
out
pop
cld
test
scas
adc
mov
add
push
pop
mov
faddp
es
std
div
cdq
ins
retf
jno
movs
aaa
mov
test
inc
mov
aaa
mov
push
add
fsubr
xor
add
fs
cmp
ins
mov
lock
jmp
mov
xor
rol
sti
repnz
mov
push
dec
mov
sub
xor
pusha
inc
stc
pop
leave
mov
hlt
shl
(bad)
(bad)
jmp
sub
mov
(bad)
pop
pusha
ret
ret
xor
sub
push
aaa
je
call
in
sbb
mov
cmp
and
push
cmp
sbb
jmp
retf
mov
test
adc
das
aaa
iret
mov
stc
adc
sysexit
cwde
pop
js
xchg
(bad)
int
jo
sbb
(bad)
mov
sbb
in
mov
scas
and
sub
je
(bad)
mov
aaa
sub
cmp
inc
sbb
sub
cmps
(bad)
fcom
pusha
xchg
call
scas
out
sbb
scas
sub
dec
ins
sub
scas
mov
das
push
loopne
sub
push
dec
pop
push
stos
neg
mov
add
mov
cld
lahf
sub
lods
add
fs
into
(bad)
arpl
mov
mov
fidivr
dec
hlt
pop
cs
push
mov
mov
push
aad
js
pusha
repz
and
dec
popf
enter
and
arpl
pop
jmp
pop
mov
imul
xchg
mov
mov
push
jge
jno
scas
gs
in
ret
je
and
imul
sbb
add
das
push
xor
pop
mov
ret
inc
jns
cmc
mov
int3
push
jg
jns
imul
lods
mov
xor
cdq
nop
mov
mov
cmp
and
fidivr
push
pop
je
mov
inc
mov
loopne
lea
adc
jae
xchg
std
push
lahf
sub
(bad)
fild
jmp
dec
or
add
repz
adc
test
jns
(bad)
sub
pop
int
in
shr
mov
or
xchg
shl
repz
jns
add
inc
mov
push
repnz
or
fmul
pop
sti
push
scas
movs
ss
mov
test
or
sbb
xor
push
add
inc
mov
(bad)
and
aaa
mov
(bad)
xor
nop
imul
dec
popf
push
repz
pop
dec
adc
jl
enter
aaa
or
xor
mov
push
pop
call
or
pop
jp
or
mov
pop
scas
push
aad
pop
int3
pop
mov
int3
sbb
mov
test
into
sti
and
scas
popf
mov
inc
lock
inc
xor
lods
mov
ror
push
outs
call
js
aad
sub
xchg
dec
addr16
pop
shr
jg
dec
repnz
xor
data16
pop
push
xchg
stos
sar
fs
push
pop
fstp
mov
aaa
push
stos
lods
mov
xor
xchg
rcr
out
test
inc
pop
aas
push
cdq
xchg
fidiv
cmp
xor
cdq
fidivr
dec
inc
or
inc
shr
jbe
repnz
pop
pop
sahf
test
sub
stos
or
sbb
loopne
sahf
bound
mov
rol
stos
cld
push
ret
dec
jo
gs
(bad)
dec
mov
xchg
mov
int
repz
daa
je
push
inc
scas
xor
mov
popf
and
not
mov
imul
xor
mov
lea
sub
xor
cs
mov
mov
int3
sub
scas
mov
test
arpl
push
(bad)
outs
es
pop
and
inc
daa
aad
xchg
sub
test
out
push
push
lods
aam
push
and
add
push
rcr
jae
fmul
(bad)
stos
fs
xor
mov
xchg
cmps
jmp
lahf
push
inc
icebp
rcr
lahf
cmc
push
bound
sbb
iret
sbb
cmp
arpl
adc
mov
iret
jno
cld
stc
fcmovnbe
shl
loopne
test
jbe
imul
cdq
out
aam
pop
rcl
mov
sti
sbb
lea
xor
sub
retf
mov
mov
push
dec
std
inc
(bad)
jnp
test
rcr
mov
sub
arpl
mov
sbb
lock
xchg
push
mov
dec
call
dec
fwait
add
in
or
jge
xchg
or
push
int
push
pusha
xchg
sahf
or
inc
and
mov
scas
test
jecxz
ret
sbb
ins
cmp
mov
vminss
add
int
aaa
mov
aaa
enter
test
loope
loop
loopne
xchg
fs
cmc
inc
mov
pushf
ror
leave
in
jne
mov
sub
xchg
imul
jb
stos
and
loope
cmps
xor
mov
test
ret
jmp
mov
push
dec
das
adc
cmp
push
cli
lahf
push
mov
arpl
xor
fidivr
into
pop
sbb
out
xor
push
lea
mov
sti
inc
in
jmp
push
fstp
push
dec
jle
fldcw
fwait
lock
ss
cmps
aas
lods
popa
xchg
les
and
add
xlat
sahf
push
pushf
jmp
jb
dec
sub
sub
ret
sbb
xchg
mov
popa
or
arpl
mov
adc
fidiv
repz
add
outs
inc
mov
and
dec
ror
cdq
xor
lock
jge
ds
cmp
add
mov
fiadd
ret
ror
cmp
sub
out
push
lods
jbe
aad
jmp
xchg
sbb
test
ins
xor
mov
or
mov
in
cdq
sti
or
sub
les
mov
sub
data16
pop
ficom
dec
cmp
add
xchg
inc
shr
sub
sbb
and
dec
mov
frstor
enter
cmp
mov
and
or
pop
pop
and
std
repz
adc
mov
fwait
jl
cmps
xchg
leave
clc
test
or
movs
loope
rcl
test
aas
pop
mov
test
(bad)
add
xor
loopne
fcomp
mov
ins
adc
mov
ja
stos
dec
push
in
sub
push
adc
and
enter
stc
gs
cmc
lds
and
or
dec
inc
push
sbb
gs
xchg
dec
xchg
xchg
sub
ds
mov
push
dec
(bad)
mov
dec
adc
sar
jmp
mov
ins
xchg
and
and
or
dec
call
jne
(bad)
jle
jne
loopne
mov
pushf
push
div
pop
or
mov
xor
sbb
(bad)
cmp
movs
ins
mov
jnp
and
jne
mov
xchg
inc
mov
jmp
gs
pop
push
mov
xor
adc
or
xlat
cli
push
push
fs
inc
imul
jp
adc
and
imul
jmp
xchg
mov
sub
mov
jecxz
clc
and
sub
cmps
push
adc
or
sbb
bound
jno
aam
aaa
fstp
ds
inc
sbb
lods
jecxz
jbe
and
fnstenv
mov
pop
(bad)
in
sbb
sbb
sub
mov
hlt
loope
pop
mov
dec
sti
inc
xchg
and
into
les
aad
inc
mov
and
sti
pop
pop
xor
xchg
pusha
outs
lock
pop
sbb
sub
(bad)
retf
mov
cmp
jb
call
lock
or
pop
cmp
bound
push
rol
xor
inc
sti
mov
ss
cmps
mov
stos
xchg
cmps
and
imul
stos
cmp
sub
mov
xchg
dec
imul
outs
loope
dec
loopne
jg
xchg
movs
ds
pop
stos
pop
pop
and
mov
dec
jecxz
in
mov
jo
aaa
sbb
sahf
or
cmp
(bad)
out
fimul
inc
add
jo
sub
mov
inc
pop
jecxz
inc
dec
in
inc
mov
repz
xor
pop
shr
or
loop
pusha
repz
not
push
scas
addr16
and
mov
arpl
pushf
leave
push
mov
mov
adc
in
add
out
ror
cmp
pop
ja
push
loope
and
and
cli
adc
adc
fcom
mov
add
add
ror
inc
clc
jp
cmps
push
cmps
test
sbb
(bad)
push
rcl
sub
xor
jne
adc
inc
push
jp
or
fnstsw
xchg
aaa
aaa
push
xor
pop
ficomp
and
and
int
xor
cwde
(bad)
fwait
aaa
jl
shr
mov
jmp
adc
aaa
sbb
ror
mov
lahf
fisttp
and
test
pushf
hlt
push
aad
jo
mov
jp
xchg
sbb
mov
cmc
in
mov
cmps
retf
add
fwait
ins
cmp
xchg
ins
jmp
mov
test
rcl
mov
shl
inc
pop
xchg
add
xor
mov
in
int
dec
(bad)
push
jge
retf
jb
(bad)
mov
xchg
arpl
pusha
cwde
add
bts
jno
dec
ror
or
(bad)
xlat
jge
xlat
mov
fcom
dec
imul
gs
test
daa
inc
mov
mov
xlat
popf
loop
and
jp
cmp
jl
fmul
outs
dec
or
cmp
les
and
in
(bad)
and
fwait
stc
push
xor
jg
aas
aam
and
test
and
lods
mov
push
lds
or
pushf
xchg
or
cmp
inc
jl
adc
jo
xchg
into
(bad)
imul
add
fcmovne
stos
push
mov
pop
pop
mov
data16
pop
ss
rol
push
call
pop
dec
sbb
mov
jne
std
dec
out
shl
xchg
sbb
icebp
xor
push
adc
(bad)
jb
cmps
push
pop
arpl
out
cmp
aas
adc
scas
sti
outs
cdq
out
sar
cmp
jecxz
mov
cmp
add
adc
jno
mov
push
dec
jl
mov
fsub
mov
imul
scas
loopne
jmp
test
es
and
aaa
mov
sbb
leave
jp
fmul
xchg
and
xor
ror
popf
imul
adc
sbb
nop
push
jmp
inc
js
lods
mov
fld
dec
inc
jp
mov
sbb
mov
sub
es
or
ret
jmp
xor
hlt
pop
pop
jns
lods
fdiv
sbb
adc
xor
fwait
jns
or
mov
xor
sub
mov
inc
adc
sbb
mov
and
xchg
sbb
sar
out
mov
dec
cs
cmp
lods
fucompp
xor
sub
(bad)
sti
sbb
stc
add
xchg
call
scas
cmp
imul
inc
rcl
(bad)
sti
fiadd
outs
push
sub
dec
popa
shr
inc
add
inc
xchg
inc
jecxz
lea
daa
out
inc
cdq
mov
and
mov
jne
cmp
or
cmp
(bad)
sub
das
or
movs
and
aas
xchg
jmp
fprem1
cmp
test
shl
enter
test
and
imul
loopne
inc
jb
xchg
into
in
dec
mov
sbb
pop
add
xor
outs
fild
inc
sbb
idiv
and
cs
test
pushf
sahf
sub
jg
jne
pop
and
retf
mov
dec
test
sub
mov
inc
f2xm1
test
xchg
xor
jae
stos
or
cmps
jo
das
sbb
xchg
xchg
jp
call
or
pusha
lock
jl
imul
iret
fsubr
repz
push
fistp
pop
push
das
test
pop
addr16
jecxz
pop
and
sbb
push
xor
dec
cs
jae
lea
pop
or
xlat
js
or
fs
inc
sub
(bad)
mov
popf
jnp
adc
add
mov
pop
call
mov
cs
retf
mov
fs
xchg
scas
adc
add
ins
lahf
dec
(bad)
jns
jbe
sar
cmps
add
hlt
(bad)
push
jns
push
iret
mov
add
retf
(bad)
int
adc
call
les
and
ret
dec
inc
cdq
gs
aam
jo
dec
inc
in
mov
sbb
out
enter
inc
xchg
outs
and
push
inc
dec
sbb
xchg
loope
pop
push
pop
cmp
jmp
popa
adc
dec
jle
or
jae
enter
jmp
mov
stos
mov
inc
mov
cs
test
not
jne
pop
cmp
in
pop
mov
add
outs
cmp
jl
out
repnz
imul
xor
cdq
xor
push
cmp
test
xor
pop
mov
and
ja
jns
sar
outs
repnz
arpl
ds
adc
popf
(bad)
fmul
jmp
pop
lods
mov
add
mov
mov
scas
pusha
mov
and
sub
cmc
dec
out
push
das
cli
mov
and
push
sub
jbe
xor
les
mov
adc
xor
mov
shl
(bad)
cli
iret
loope
mov
arpl
push
jle
sub
cmc
jnp
xchg
xchg
mov
jmp
(bad)
mov
mov
movs
cmp
jecxz
sub
push
cmp
mov
or
sub
(bad)
mov
popf
inc
inc
pop
in
test
adc
(bad)
sbb
inc
xchg
lods
pusha
(bad)
jmp
add
stc
sbb
pop
aad
cli
pusha
pop
cmps
int
sub
xchg
test
sub
(bad)
jl
xor
sbb
ss
lods
scas
push
jne
jne
pop
sub
ds
ror
pop
and
cmp
(bad)
stos
int3
cmp
mov
pop
push
es
(bad)
xor
sbb
int
scas
xor
stc
jnp
out
mul
bound
cli
(bad)
sub
push
add
xor
neg
(bad)
sub
test
and
cmp
jbe
sub
mov
jno
ja
scas
add
or
jb
(bad)
sub
dec
dec
mov
stos
cmp
rol
shl
pusha
stos
arpl
arpl
loop
dec
xchg
inc
xor
mov
dec
fnstenv
lock
cmp
push
jp
push
dec
pop
xchg
inc
mov
retf
retf
arpl
punpckhwd
imul
bound
lock
jo
dec
xor
sbb
mov
loope
lods
inc
push
stc
outs
(bad)
outs
xchg
test
pop
pushf
jne
mov
cdq
jne
or
push
(bad)
sbb
popf
push
popf
fs
jmp
sbb
sub
inc
add
dec
setp
jle
inc
stc
jae
in
xchg
pop
cmp
mov
in
xchg
repz
(bad)
jg
xor
(bad)
data16
pop
mov
iret
pop
jmp
dec
cld
or
addr16
mov
adc
cwde
aad
(bad)
add
adc
lds
add
inc
jns
sub
adc
cli
inc
ror
mov
fmul
mov
das
es
aas
xchg
in
iret
cmp
in
mov
pop
push
xor
popa
(bad)
stc
and
enter
lods
sub
jnp
pop
in
shr
(bad)
mov
pop
sub
sbb
call
hlt
(bad)
xchg
ret
mov
sub
jb
stos
sbb
jle
inc
hlt
fldenv
mov
or
int
inc
xchg
jmp
enter
loop
sbb
pop
sub
loopne
cld
jp
mov
popa
ins
in
xor
sti
cmp
imul
in
adc
xchg
jmp
cmp
xlat
and
loop
jne
repnz
cdq
aam
dec
xor
add
add
or
dec
call
dec
and
sub
cmp
push
push
mov
fisub
pop
mov
ja
cmp
mov
pop
and
mov
inc
loope
push
xchg
push
daa
jecxz
ja
out
cmp
stos
cli
fisttp
push
cwde
add
test
not
mov
and
stos
je
pop
push
das
dec
cmp
add
shl
or
xchg
lahf
cmc
mov
arpl
mov
cmp
das
fisttp
sbb
jmp
jp
cmp
mov
or
jbe
call
sar
add
fmul
add
pop
push
ja
imul
repnz
rol
inc
ret
jmp
test
cmps
cmp
mov
and
cmc
das
lahf
in
cmp
mov
bound
mov
dec
add
mov
mov
mov
dec
mov
jp
sbb
xchg
test
scas
aam
sbb
arpl
sub
loopne
inc
out
ins
xchg
rcr
lock
popa
jp
jg
sub
mov
iret
clc
inc
inc
xor
daa
xchg
stos
sbb
pop
mov
sti
or
loop
or
es
cmp
fscale
mov
and
mov
xchg
adc
mov
bound
sub
pop
inc
and
pop
cmp
dec
(bad)
repz
sbb
hlt
jmp
in
stos
(bad)
sub
ins
ins
mov
aad
call
out
or
out
pop
(bad)
(bad)
fld1
icebp
mov
mov
ds
ss
in
sbb
sar
cmp
push
mov
lock
mov
lods
jecxz
aam
lea
fsubrp
xor
push
stc
sub
repz
pop
es
sub
push
call
dec
mov
add
sub
adc
mov
jmp
xchg
and
xor
mov
push
add
xchg
mov
add
mov
jne
fimul
in
mov
or
cmp
add
add
jae
mov
xchg
sbb
pop
dec
push
out
mov
push
or
jg
fcomp
icebp
cmp
repnz
xchg
test
mov
cmp
into
jge
loope
jp
idiv
inc
pop
imul
lods
sub
xor
sbb
mov
inc
or
test
jo
pop
jecxz
xchg
ror
jge
dec
push
jo
mov
xor
jns
pusha
sbb
das
xchg
cdq
ret
inc
fcmovbe
test
push
cli
jge
pop
mov
or
xor
lock
mov
(bad)
jno
xlat
inc
xchg
mov
ins
or
mov
fcom
lods
pusha
adc
out
je
inc
in
mov
lods
inc
sbb
inc
and
ins
int3
jmp
sbb
jmp
test
push
push
adc
les
add
mov
inc
inc
into
push
adc
fs
sbb
and
ret
sub
jnp
mov
fbstp
dec
sbb
mov
push
in
mov
inc
cld
xchg
mov
xchg
cmp
sti
in
cld
push
xor
and
leave
jne
sub
cli
(bad)
mov
sbb
shr
xchg
add
fwait
and
in
nop
adc
jno
cmp
cld
(bad)
jp
dec
popf
ja
clc
inc
push
jge
cdq
out
inc
pop
gs
stos
jb
outs
mov
out
loop
pop
mov
(bad)
(bad)
mov
dec
es
je
es
test
bswap
sub
mov
xchg
cmp
or
add
lods
scas
xchg
into
inc
or
ror
adc
or
sbb
and
ja
ret
ins
and
mov
sar
mov
sbb
shl
sub
pusha
push
call
adc
push
pop
imul
addr16
push
pop
out
sbb
outs
mov
fdivr
and
das
lahf
cmp
add
int3
int3
dec
inc
jae
inc
jns
dec
jbe
pusha
xchg
lea
fld
das
rol
sub
adc
into
push
aam
aaa
dec
add
ret
adc
mov
mov
jae
inc
cmps
mov
mov
test
fs
inc
and
add
xor
pop
jmp
jae
sbb
mov
ja
push
stos
movs
xchg
sbb
mov
cmp
scas
mov
jne
xor
or
pop
repnz
pop
adc
ror
mov
inc
outs
arpl
inc
shr
sbb
scas
pop
mov
xor
adc
arpl
inc
dec
cmps
dec
push
mov
mov
xchg
jecxz
scas
ret
push
(bad)
push
inc
or
push
out
pop
in
cmp
mov
cmp
fmul
cld
mov
mov
bound
xor
cs
cmp
xor
xchg
cmps
(bad)
push
jmp
bnd
adc
mov
mov
and
out
repnz
or
shr
outs
push
sub
outs
dec
imul
mov
push
pusha
movs
outs
rol
mov
daa
or
stos
movs
and
xor
sub
jno
pop
jbe
pop
(bad)
xchg
sub
gs
add
(bad)
xchg
leave
imul
mov
(bad)
push
push
push
mov
push
retf
sbb
jge
mov
cmp
jle
jns
popa
lock
push
and
jecxz
xchg
ror
ret
aaa
jb
sbb
push
out
pop
push
push
ins
fstp
mov
sbb
adc
shl
sbb
inc
ret
cmps
or
repz
cdq
into
iret
adc
iret
loop
jne
and
out
xchg
lds
mov
dec
push
jl
test
or
repz
mov
js
shl
mov
or
aaa
sbb
not
push
shr
out
lock
out
in
ret
ret
int3
pop
pop
pop
cmp
add
in
sbb
dec
mov
in
fmul
out
and
mov
push
xor
shr
test
mov
(bad)
push
clc
mov
mov
sahf
and
mov
stos
mov
xor
addr16
adc
mov
in
js
jl
push
sahf
mov
push
jmp
pop
add
pop
jbe
or
dec
in
iret
push
outs
arpl
movs
mov
je
jno
cmc
movs
fild
xchg
lods
mov
fst
into
clc
js
add
(bad)
and
sub
xchg
cmp
leave
mov
push
in
in
icebp
inc
pop
jg
aad
fcmovu
and
cmp
les
jmp
sbb
(bad)
dec
push
sbb
icebp
xchg
push
popf
pop
ficom
int
jns
cwde
retf
ss
enter
mov
aas
outs
xor
loop
or
mov
sub
mov
mov
xchg
pop
loop
sbb
mov
or
out
ins
aas
dec
rcl
jnp
arpl
pop
clc
fldcw
jmp
xchg
ret
movs
push
sbb
mov
retf
shr
fsub
and
(bad)
mov
mov
lea
jo
jge
(bad)
out
inc
fucom
imul
cmp
xchg
aam
mov
cwde
pop
xor
dec
mov
jecxz
inc
inc
mov
fst
test
and
push
mov
retf
pop
jno
ja
jne
inc
adc
and
add
jecxz
xor
mov
sub
retf
lods
xor
add
xor
sub
push
nop
and
mov
mov
aam
mov
imul
movs
xchg
dec
in
loop
sbb
aad
(bad)
mov
repnz
aas
mov
dec
test
ds
and
fcom
scas
cmp
pop
xlat
addr16
pop
ficom
pop
inc
fiadd
jg
mov
add
mov
popf
add
pop
and
fwait
push
jp
ret
mov
pop
push
mov
scas
loop
popf
mov
and
ret
dec
test
adc
shr
mov
jp
shl
mov
daa
nop
int
test
jb
dec
xchg
pop
jp
js
pop
jg
cmp
outs
sbb
pusha
shr
adc
ss
or
cmps
sub
repnz
repz
mov
stos
fisubr
xchg
adc
adc
ins
out
in
sbb
out
push
push
pushf
jno
cmp
in
inc
fld
(bad)
clc
mov
dec
ficom
jns
adc
inc
popa
mul
jns
xor
ja
mov
inc
ins
cmp
xchg
jle
je
hlt
test
xor
stos
add
repnz
push
jne
push
adc
push
sbb
mov
jbe
adc
(bad)
mov
cmp
cmp
xchg
daa
or
mov
mov
icebp
loopne
mov
dec
aam
(bad)
dec
pop
push
lock
mov
das
loopne
fisttp
or
scas
mov
jmp
loope
in
(bad)
push
fwait
or
mov
fsub
sbb
repnz
aad
dec
ror
repz
loopne
sbb
outs
push
adc
sub
repz
xlat
adc
ins
dec
add
ins
loop
cmps
out
not
repz
dec
lods
lods
sbb
lods
push
gs
cmp
daa
dec
push
call
repz
je
rcl
loopne
fimul
hlt
inc
sub
adc
(bad)
fld1
or
xlat
xor
ss
inc
cdq
xlat
out
in
movs
sbb
test
fld
cmp
bound
pushf
sbb
fist
int
pop
xchg
inc
xchg
cmp
addr16
inc
data16
loopne
sbb
inc
js
les
and
jp
int3
mov
lds
data16
and
(bad)
mov
mov
dec
xor
sub
push
cmps
push
and
mov
ss
mov
shr
inc
xor
mov
inc
push
jne
enter
fcom
test
jecxz
push
clc
inc
movs
imul
mov
and
test
cmp
movs
call
dec
out
cmp
out
adc
test
or
mov
mov
add
push
or
inc
std
and
movs
pop
(bad)
mov
dec
fnstsw
jb
das
xor
jae
add
fisubr
pop
push
stos
icebp
retf
loope
sbb
sbb
push
rol
xchg
movs
sbb
inc
outs
aaa
push
mov
nop
in
loop
mov
jno
fsub
(bad)
in
dec
push
data16
push
(bad)
es
fs
xchg
sub
int3
ffreep
mov
sub
adc
aas
cmp
and
jb
out
jns
icebp
xchg
popf
or
das
add
jns
ins
imul
dec
cmps
or
fld
outs
xor
ja
dec
test
ds
add
loopne
mov
dec
add
shr
xor
fwait
pop
test
adc
cmp
cwde
mov
cmps
mov
loope
aaa
icebp
in
sub
sbb
inc
sbb
mov
push
sub
push
mov
bound
pop
push
cmps
mov
int3
fwait
mov
loope
dec
adc
addr16
sahf
push
in
enter
or
ss
fisttp
fimul
pop
or
idiv
in
movs
test
test
jl
iret
mov
cmp
add
cli
ins
lods
push
push
imul
call
sbb
inc
xchg
jne
push
pushw
adc
cdq
jge
les
xchg
lods
test
jne
stos
(bad)
push
cdq
xchg
lock
mov
cld
jne
push
clc
mov
mov
mov
pusha
mov
sub
cmp
jb
inc
(bad)
xchg
dec
loopne
rcr
mov
mov
daa
jecxz
add
push
sbb
stos
stc
outs
ins
pop
and
packssdw
sbb
sbb
sub
push
repz
outs
adc
cmp
(bad)
add
and
int3
pop
xor
sbb
push
push
loope
ds
int3
inc
or
cmp
int
mov
retf
paddb
fadd
mov
in
lods
or
in
fs
mov
ret
push
push
sbb
(bad)
call
nop
fidiv
sub
jb
inc
fwait
enter
cmps
lahf
and
sub
cmp
mov
jmp
ret
neg
push
aaa
or
arpl
ja
mov
mov
mov
cwde
int
sub
fcom
imul
ss
push
out
ret
cs
mov
dec
loope
(bad)
cmps
outs
ss
pop
icebp
jnp
outs
inc
push
and
in
mov
and
das
(bad)
jg
dec
sub
test
push
stos
call
iret
mov
(bad)
test
inc
jnp
jg
fs
nop
inc
leave
lock
(bad)
mov
mov
out
mov
pop
lea
bound
add
stos
sahf
inc
hlt
xchg
push
mov
jle
sub
cdq
xor
sub
inc
adc
mov
add
icebp
xchg
in
xor
daa
and
in
jecxz
dec
sbb
jns
jle
(bad)
mov
sub
mov
lock
jge
les
jnp
ja
mov
pop
xchg
pop
push
xchg
jmp
and
push
jnp
push
fist
test
aaa
push
pop
and
cmp
fwait
dec
cmc
xor
pop
mov
movs
and
es
jb
sbb
jno
out
add
retf
cli
mov
nop
mov
mov
daa
retf
add
jns
sub
sbb
or
jmp
pushf
pop
xlat
mov
sub
mov
sub
cmc
xchg
sbb
fidivr
pop
rcl
daa
bswap
cld
cmc
jp
or
movs
pop
enter
in
mov
cmp
scas
in
xlat
adc
xchg
xor
jmp
aam
(bad)
loope
stos
mov
mov
pop
das
push
cmps
repnz
aam
(bad)
sub
loope
jno
and
sti
mov
xor
dec
cmp
adc
test
out
pop
xor
adc
or
jg
sar
xor
pop
outs
mov
mov
inc
xor
xchg
xchg
xchg
sub
add
or
xor
push
dec
jo
lods
mov
ficomp
mov
out
hlt
(bad)
fild
push
and
cli
in
iret
mov
xchg
jae
jmp
xor
fdivr
call
dec
popf
loopne
cs
push
outs
pop
fdiv
scas
das
inc
dec
ror
inc
test
mov
in
sub
dec
call
outs
cmc
pop
fsub
adc
sbb
outs
mov
xchg
or
adc
fcmovnu
push
push
mov
xchg
repz
loope
pop
pop
push
fsub
add
bound
mov
mov
std
or
sbb
mov
push
cmps
pop
ror
jmp
fld
mov
inc
shl
enter
jno
js
pop
push
adc
les
repnz
ins
not
jne
add
int
(bad)
pop
mov
jmp
aam
xchg
sub
loopne
(bad)
lods
popa
std
pop
pop
add
mov
mov
jnp
xchg
mov
popa
call
cld
outs
cmp
mov
mov
je
pop
jo
xchg
sbb
(bad)
nop
fdivr
jmp
imul
mov
std
jmp
out
xchg
int
mov
imul
inc
cmp
(bad)
jge
popa
es
pop
mov
imul
cs
in
mov
(bad)
add
in
(bad)
cs
or
neg
dec
add
push
test
stos
int
jo
hlt
jne
lds
and
fidivr
shl
fadd
push
dec
and
bound
fcom
push
jp
jle
or
mov
sub
lods
mov
sub
inc
cs
push
jb
jmp
push
imul
lds
cmps
outs
sbb
dec
or
(bad)
pop
adc
adc
aam
jo
xor
mov
mov
lods
mov
cmps
aas
(bad)
adc
jno
pop
xchg
adc
add
jns
enter
jle
pop
adc
xor
sbb
js
sub
push
icebp
jmp
std
add
cmps
retf
mov
iret
mov
popf
rcl
iret
adc
(bad)
iret
(bad)
cmp
and
out
dec
adc
push
imul
(bad)
mov
mov
mov
jns
or
in
shl
int
mov
loope
push
mov
hlt
dec
inc
xchg
and
(bad)
push
pop
xchg
inc
dec
cmp
push
iret
adc
adc
jmp
xchg
sub
test
adc
cmp
ss
xchg
add
jo
pop
sub
outs
lahf
inc
in
add
clc
and
xchg
jbe
inc
xchg
not
adc
jmp
shl
arpl
popa
add
je
fstp
xchg
pop
push
imul
loop
xor
jmp
jo
(bad)
mov
(bad)
movs
loopne
nop
ret
sub
pop
mov
lock
pop
jmp
add
sbb
nop
adc
ins
push
adc
push
xor
call
enter
jne
sbb
cdq
dec
push
test
fcom
pusha
cmp
fcmovb
aad
cmps
mov
sbb
sar
inc
mov
add
pop
or
push
inc
into
add
add
dec
dec
rcr
cld
bound
(bad)
push
fcomp
jge
arpl
jmp
add
mov
stc
cmp
js
fisttp
mov
daa
je
pusha
sub
inc
pop
sbb
push
out
xchg
xchg
jg
pop
call
add
pop
leave
rcl
lahf
push
pop
test
retf
jecxz
outs
add
sar
in
sub
sbb
mov
fsub
fistp
and
mov
and
pcmpgtb
sub
fdivp
lahf
ss
in
scas
out
fsubr
ret
sbb
ficomp
leave
adc
cmp
mov
sub
add
lahf
fcmovu
xchg
inc
and
mov
(bad)
andps
pop
adc
jno
js
fist
adc
cld
popf
adc
stos
ins
cmp
shl
and
or
push
xor
data16
popa
pop
iret
sbb
lock
sub
sub
imul
adc
je
sub
fadd
pusha
sar
cmp
xor
push
dec
mov
mov
pop
das
jne
in
xchg
or
stos
repz
mov
mov
(bad)
xor
(bad)
pop
add
push
xchg
sub
push
and
cs
shl
sar
mov
lods
sub
dec
sbb
ret
lods
xchg
xor
xchg
enter
fcomp
and
pop
mov
lods
xor
(bad)
shl
call
inc
pusha
cmovb
jns
or
sub
mov
push
push
jmp
jo
ss
cmp
xchg
std
or
mov
ja
xchg
sub
(bad)
mov
sub
repnz
popf
fs
jecxz
pusha
lea
bound
and
or
xchg
mov
push
mov
jmp
movs
sub
xor
pushf
lea
ret
aas
fst
dec
mov
cmp
cmp
(bad)
test
iret
js
rcl
pop
jns
iret
xor
popa
xchg
pop
(bad)
jne
stos
or
lahf
sub
test
adc
add
cld
mov
push
or
push
jnp
das
rcl
call
add
nop
pop
or
add
inc
dec
mov
arpl
xchg
bnd
sbb
retf
jle
ins
or
push
pop
lds
fidivr
xchg
addr16
mov
ret
in
(bad)
fild
add
add
jmp
cwde
and
retw
sbb
fidiv
dec
inc
ret
jge
mov
push
xchg
aaa
out
inc
or
cli
movs
jge
mov
lods
mov
inc
adc
mov
pushf
into
cmp
cld
add
mov
inc
stc
push
push
xchg
fstp
dec
in
cmc
scas
jae
add
pop
lea
call
push
cwde
add
adc
daa
jle
retf
adc
jl
adc
fcomp
int3
stc
jnp
adc
mov
mov
scas
push
adc
cmp
rcl
pop
stos
dec
ficom
mov
pushf
aaa
jnp
call
push
add
sbb
std
push
jle
(bad)
jmp
dec
push
add
sub
sub
in
fdiv
add
pop
cmps
sub
jp
outs
xor
scas
std
mov
js
scas
lods
adc
les
les
not
imul
in
sbb
in
inc
sbb
pop
mov
sub
add
push
add
cs
or
(bad)
push
dec
and
adc
mov
clc
pop
jmp
or
dec
out
cmc
paddsw
(bad)
add
push
mov
push
mov
pop
aam
aaa
dec
shl
in
cmp
xor
out
push
mov
lods
inc
push
test
lods
data16
fldenv
repnz
retf
mov
rol
in
sbb
mov
stos
jns
je
cmp
mov
xchg
scas
push
add
mov
mov
lea
(bad)
sub
sbb
mov
jnp
mov
daa
mov
fadd
pusha
pusha
jmp
sbb
movs
mov
cmp
jae
mov
test
stc
inc
sub
imul
fisub
dec
push
f2xm1
das
cmp
fdiv
inc
push
movs
pop
mov
ret
clc
movs
adc
inc
jmp
push
(bad)
dec
(bad)
aaa
push
bound
mov
cld
outs
sub
push
test
inc
and
add
(bad)
jns
cs
xchg
leave
xchg
mov
aaa
jecxz
mov
adc
lods
movs
mov
cld
xor
das
mov
jp
in
jb
test
ds
enter
push
scas
pushf
std
and
ficom
rol
or
ds
imul
cdq
jae
inc
scas
and
sub
imul
push
add
outs
and
into
test
push
dec
pop
test
push
test
or
inc
or
ret
dec
jg
je
shr
jp
push
stc
imul
sbb
ds
and
jb
add
mov
jp
outs
enter
mov
test
fbstp
jl
sub
push
sub
shl
lds
addr16
jnp
adc
sub
push
pop
imul
cld
sbb
fmul
inc
pop
mov
pop
movs
std
daa
popf
lods
retf
inc
pusha
cmps
and
and
jg
enter
outs
ror
(bad)
push
xchg
sbb
das
stos
cdq
push
cld
pushf
fimul
xchg
dec
inc
rcl
push
or
cwde
dec
bound
call
add
arpl
lock
dec
inc
int3
mov
(bad)
mov
popa
ins
dec
imul
loop
jns
push
nop
jbe
mov
push
cs
retf
cmp
loope
adc
add
xchg
pop
xchg
stos
icebp
adc
adc
jns
test
bnd
cwde
test
mov
scas
inc
sub
jle
cmc
cs
mov
sub
adc
sub
xchg
aam
mov
jb
adc
mov
outs
daa
mov
and
cmp
js
shr
addr16
fisubr
pop
dec
sub
add
inc
push
(bad)
dec
push
ins
and
fcomip
call
outs
push
fbstp
mov
push
cmp
mov
repz
mov
cld
fsub
mov
mov
mov
arpl
jb
push
fmul
dec
adc
lea
ins
push
xchg
test
add
dec
xor
push
xchg
sub
pusha
loopne
add
int3
in
cdq
loop
pop
(bad)
arpl
cmp
scas
not
pop
scas
les
adc
sbb
inc
ficomp
sti
sub
xor
sar
push
pop
mov
sub
mov
sub
in
or
ror
adc
shl
inc
inc
mov
cmp
enter
sub
lea
sbb
data16
add
repnz
mov
cmp
or
stos
add
fisubr
and
lds
mov
bound
inc
loope
push
cmp
sub
je
mov
cmps
test
mov
mov
outs
cmc
imul
cmp
add
popf
(bad)
xchg
daa
sbb
sbb
dec
xchg
mov
inc
das
cmp
test
loop
inc
pushf
repnz
xor
mov
xchg
aam
sub
in
or
ss
inc
mov
pop
adc
out
jp
jne
add
out
cmps
jo
ins
test
sbb
xor
mov
mov
nop
pop
mov
lahf
push
mov
clc
and
add
fidivr
and
aad
sahf
push
pop
jge
cwde
test
sar
int3
ret
stos
mov
lahf
(bad)
fsub
es
imul
pop
jmp
sub
sub
xchg
sar
mov
push
dec
in
dec
sbb
jns
hlt
xor
adc
xchg
push
das
xchg
sub
test
ret
nop
loopne
and
dec
in
xchg
push
cmp
mov
cmps
call
test
test
cwde
xchg
push
mov
ret
idiv
mov
jecxz
aaa
or
mov
inc
cs
sbb
(bad)
inc
lods
mov
into
stos
ds
sbb
popa
sub
(bad)
xor
ret
out
imul
out
js
loopne
mov
movs
dec
rcr
jle
add
test
mov
dec
das
addr16
jo
bound
clc
push
mov
fdiv
popa
xchg
ror
or
xor
push
add
mov
adc
and
in
mov
and
stos
mov
lds
xchg
mov
cmp
sub
shl
dec
pop
movs
cmovno
out
dec
or
shl
movs
inc
scas
mov
iret
ins
jmp
(bad)
fs
mov
in
sbb
shr
rol
sbb
hlt
add
pop
mov
jb
jno
sbb
mov
ret
rol
push
push
jo
ss
fdivr
sti
sbb
xchg
jno
aam
or
pop
and
lahf
xor
in
int3
xchg
inc
mov
pop
adc
inc
pop
mov
idiv
inc
call
sbb
pop
and
ins
or
fstp
pushf
push
clc
cmp
sub
cmp
push
dec
pop
lahf
push
xor
arpl
sbb
outs
cld
sub
call
cli
cs
arpl
pushf
mov
cwde
(bad)
outs
rcl
xchg
aam
mov
nop
mov
adc
push
jge
rcr
int3
mov
(bad)
xchg
clc
(bad)
fcmovbe
mul
xor
mov
mov
mov
add
adc
add
test
mov
sahf
repz
inc
loope
ja
test
rcl
das
loop
xchg
imul
stos
in
je
loopne
mov
nop
inc
mov
cs
test
fwait
jbe
mov
jno
popf
pop
mov
fimul
mul
ja
push
inc
movs
(bad)
lock
mov
ds
push
jmp
pop
or
ins
add
fcmovnb
inc
push
sbb
jae
xchg
add
stos
and
shr
movs
cmp
inc
outs
(bad)
not
mov
cwde
mov
dec
and
pushaw
dec
jp
or
(bad)
(bad)
js
enter
inc
daa
mov
xchg
sahf
inc
mov
xor
adc
or
hlt
lahf
and
cmp
nop
shr
pop
fadd
aas
lods
mov
jecxz
xchg
in
leave
mov
adc
dec
(bad)
fistp
xlat
or
adc
pop
call
mov
shr
mov
adc
int
in
xchg
bound
jo
adc
adc
or
daa
fs
sbb
adc
ds
xchg
and
in
fldenv
cmp
or
jmp
pushf
rcr
xor
imul
imul
jmp
mov
into
es
retf
hlt
je
or
mov
pop
test
or
cld
cmps
jo
fs
and
sbb
jae
add
add
aas
add
push
jb
mov
(bad)
ds
out
pop
mov
movs
test
fldcw
or
lock
movs
nop
inc
inc
cdq
mov
ja
js
lea
ret
jp
and
aam
into
rcr
dec
and
pop
or
push
pop
adc
add
mov
jmp
pop
add
sub
cmp
pop
stc
jne
js
das
pop
push
daa
mov
inc
xchg
add
jge
ja
test
aaa
cmp
ins
sbb
(bad)
iret
fsubr
mov
jbe
push
sbb
outs
iret
add
dec
adc
ja
pop
xor
hlt
mov
call
mov
fwait
dec
lea
retf
cmp
sub
retf
ret
fwait
ret
mov
test
mul
mov
aad
jno
popa
inc
and
ficomp
sbb
outs
(bad)
cmp
push
jmp
out
jge
mov
mov
inc
outs
push
outs
cmp
or
inc
cmp
sbb
push
add
pop
and
mov
adc
dec
loope
aad
in
jne
sbb
stos
mov
fisub
add
pop
enter
std
xchg
sbb
enter
xor
fcom
test
in
sbb
inc
xchg
pop
lock
in
fisttp
out
xchg
jge
mov
loopne
pop
ins
movs
sahf
sub
stos
outs
in
lock
ins
(bad)
dec
and
rol
addr16
(bad)
mov
ror
inc
jg
xor
xor
popf
ss
adc
aaa
xchg
lods
ror
sar
js
mov
aas
sub
xor
bound
mov
sub
out
(bad)
pushf
mov
sbb
mov
dec
ret
add
icebp
clc
adc
aas
out
and
pslld
mov
pop
sub
xchg
into
out
bound
sub
fst
inc
shl
daa
call
push
cli
mov
sub
inc
loope
test
cmp
pusha
in
fidiv
test
aaa
mov
add
adc
movs
jo
and
ss
and
or
sbb
stos
clc
out
or
jnp
xchg
dec
cmp
dec
pop
adc
mov
pop
out
push
xchg
ja
in
cmc
and
ins
inc
imul
pop
sub
push
pop
adc
add
push
xor
dec
push
inc
mov
push
bound
mov
shl
jne
inc
sahf
ja
jmp
xchg
cmps
push
jmp
out
sbb
fcom
scas
sbb
mov
push
or
lods
mov
inc
push
pop
(bad)
jae
scas
sub
mov
cmc
or
inc
mov
leave
shl
mov
pop
cld
dec
std
jmp
mov
mov
fnstcw
inc
ficom
push
mov
adc
call
pop
scas
(bad)
sub
fcomp
stos
pop
icebp
fwait
outs
mov
test
cdq
inc
dec
aad
xor
pop
and
pop
push
inc
cmps
gs
js
bswap
repz
ror
out
sti
lods
hlt
inc
iret
inc
mov
sbb
adc
(bad)
pop
mov
adc
xlat
lock
xchg
repnz
imul
jge
test
into
inc
sbb
inc
jmp
inc
and
push
pop
and
aam
push
rcr
(bad)
push
daa
mov
out
shr
retf
mov
test
popf
out
rcr
ficom
(bad)
push
push
inc
cmp
or
jl
into
mov
clc
mov
sbb
enter
pushf
pop
add
or
sub
mov
mov
pop
mov
call
test
test
fs
rol
loope
xor
std
jns
jl
fdivr
push
mov
xor
dec
add
sub
push
and
xchg
shr
xor
cdq
vmovapd
add
push
lock
mov
adc
lods
fstp
mov
mov
cwde
push
jmp
call
mov
cdq
mov
push
test
data16
mov
(bad)
xlat
dec
xchg
mov
popa
ret
push
add
inc
repnz
mov
xlat
loope
xchg
ret
pop
fist
xor
jg
sub
sub
xchg
ret
imul
push
pusha
frstor
pop
dec
jge
cmp
mov
push
push
aas
cmp
sub
(bad)
fbstp
sbb
push
jae
leave
sbb
cvtps2pd
in
xchg
addr16
iret
push
sahf
mov
cmps
pop
jle
mov
or
(bad)
call
(bad)
gs
adc
stos
(bad)
mov
add
pop
pop
(bad)
aaa
inc
bound
cmp
pop
lahf
sbb
sbb
mov
sbb
iret
dec
adc
out
sti
mov
or
mov
jecxz
leave
or
xchg
(bad)
stos
dec
jb
sbb
shl
repnz
pop
jmp
sub
mov
jmp
mov
jae
add
sbb
dec
add
mov
aas
or
and
mov
xor
and
clc
cmc
cwde
test
loop
lahf
mov
jge
pop
retf
mov
mov
push
pushf
enter
push
push
mov
std
mov
jbe
imul
adc
push
cmc
inc
fucomi
mov
sbb
push
ret
adc
fwait
pop
and
rcr
dec
push
inc
adc
inc
add
test
scas
or
fs
ds
jmp
mov
xchg
pop
cld
mov
jp
rcl
inc
adc
(bad)
push
jl
and
arpl
dec
sbb
fmul
test
inc
push
std
mov
mov
movs
or
ins
xor
add
cmp
enter
aas
clc
push
test
sub
bound
outs
aaa
leave
je
mov
add
inc
ins
push
lea
test
test
add
mov
inc
test
or
aaa
sub
imul
retf
adc
mov
dec
imul
test
or
sbb
fld
lock
mov
sub
push
repnz
jb
xchg
nop
push
dec
mov
adc
sub
je
(bad)
imul
or
outs
cmp
lahf
dec
jg
xlat
xchg
adc
ror
aaa
mov
hlt
lods
lahf
mov
push
(bad)
add
lods
push
dec
cmps
js
inc
shr
xchg
sub
push
sbb
xor
fnstenv
jbe
mov
inc
push
sub
or
jmp
add
jo
pop
mov
cmp
outs
xchg
or
addr16
popa
pop
pop
dec
cmp
jnp
add
jae
gs
lock
loop
adc
repz
icebp
sub
cmp
jmp
call
daa
jne
repz
imul
fucomi
inc
jb
cld
mov
stos
mov
data16
hlt
(bad)
mov
mov
sub
scas
push
ret
cwde
sub
retf
hlt
jbe
or
jecxz
add
aas
das
mov
lods
add
shl
jmp
xchg
sub
retf
adc
pop
lods
inc
and
jb
call
push
icebp
cmp
pop
and
jns
les
xor
call
sti
cmp
div
dec
sbb
xchg
shl
mov
aaa
mov
mov
cdq
mov
push
sub
pop
or
rcr
cmp
retf
fist
and
ja
int
mov
fs
out
dec
fwait
inc
adc
pop
rol
or
lahf
mov
pop
and
aad
cld
push
shl
add
add
sub
jnp
add
aam
sahf
cmps
sub
mov
mov
push
fistp
dec
sbb
add
aam
pop
and
mov
mov
add
mov
movs
cmp
adc
repz
sbb
sbb
mov
xor
sub
inc
cmp
ror
push
enter
ret
mov
sbb
pop
pop
mov
outs
in
rcr
xlat
in
std
fdiv
xor
enter
(bad)
pop
aad
inc
out
(bad)
daa
cs
cmps
(bad)
lahf
rcl
cmp
xchg
jne
inc
enter
nop
movs
adc
push
fdiv
loope
xor
in
cdq
int
add
mov
xchg
in
or
(bad)
ds
inc
and
mov
cld
loop
mov
jbe
mov
inc
or
into
jg
(bad)
xor
xor
les
push
data16
rol
or
xchg
adc
mov
bound
test
xchg
es
push
or
loope
(bad)
lods
scas
cmp
jg
cmp
movs
xchg
mov
rcr
(bad)
test
(bad)
clc
adc
scas
mov
jle
imul
movs
push
or
pop
arpl
pop
retf
out
je
fild
dec
cmps
es
cli
jp
loope
jae
fiadd
int3
call
cmp
test
les
push
xchg
jp
push
pop
(bad)
retf
int3
xlat
pop
aaa
dec
popa
xchg
mov
je
jns
or
mov
push
mov
fdivr
ja
xchg
out
push
pop
dec
push
sbb
std
and
pusha
imul
sbb
mov
mov
xor
mov
into
cmp
adc
div
fwait
inc
(bad)
pop
ror
or
inc
adc
repz
sub
leave
inc
loope
(bad)
xchg
push
fwait
add
lds
inc
fldenv
and
xor
out
jae
(bad)
fisub
jno
ins
popf
jns
sub
repnz
daa
jmp
loope
dec
fnstenv
jmp
mov
sar
jle
mov
mul
pop
push
data16
in
enter
mov
cmps
(bad)
mov
xlat
hlt
mov
stc
fiadd
ss
das
out
adc
dec
dec
jmp
dec
push
neg
inc
mov
jae
fnstcw
pop
pop
stc
mov
mov
pushf
ror
in
mov
add
frstor
imul
clc
in
pop
push
int
dec
retf
inc
cwde
lahf
arpl
mov
cwde
loope
js
lds
xor
mov
(bad)
and
loope
push
mov
gs
repnz
outs
pop
pop
jno
adc
add
or
mov
xchg
xchg
test
jecxz
std
xchg
mov
sub
int
push
lods
popa
jp
and
ja
sbb
stc
lock
mov
inc
scas
inc
jns
rcr
cmp
mov
sti
jb
cmp
(bad)
out
dec
out
sub
xchg
cmps
xchg
pusha
leave
mov
pusha
xchg
cmp
and
xor
fst
mov
(bad)
loope
xor
cmps
cwde
jmp
gs
scas
pop
(bad)
mov
dec
mov
mov
mov
inc
mov
mov
cwde
pop
push
in
call
in
sbb
sub
icebp
inc
jl
(bad)
stos
mov
aam
cmp
jmp
in
xchg
pop
sbb
ds
inc
test
pop
and
xor
stos
push
retf
pcmpeqb
mov
mov
fdiv
pop
adc
adc
mov
sub
loope
push
add
or
or
mov
push
and
fld
repnz
pminub
je
lahf
push
call
loope
pop
pop
retf
add
xchg
jmp
jl
sar
push
add
or
cwde
mov
imul
dec
push
rol
cmc
mov
pop
add
mov
cmp
pop
aaa
loopne
mov
imul
xor
mov
sbb
mov
mov
add
imul
mov
xchg
ins
hlt
xchg
aas
popf
xor
lea
cmc
daa
push
jb
xchg
xchg
es
mov
repnz
(bad)
daa
mov
xchg
in
test
and
nop
xor
ins
xchg
jl
jl
pop
addr16
cwde
retf
xor
jle
popa
xchg
inc
push
xchg
and
push
dec
jbe
hlt
std
loop
pop
int3
jno
loop
xchg
aas
jge
xor
push
push
sti
lahf
aam
mov
xchg
mov
js
mov
mov
xor
frstor
fistp
inc
retf
cmp
mov
aam
jmp
sbb
sbb
inc
sbb
push
outs
cld
loopne
or
ds
pushf
pop
push
scas
inc
and
fmul
inc
outs
cmps
cmps
imul
outs
jmp
pop
addr16
mov
cmc
out
scas
adc
out
mov
pusha
mov
pop
sahf
jecxz
(bad)
(bad)
out
xor
loope
pusha
ror
scas
push
add
push
jb
(bad)
or
jae
mov
xchg
jg
mov
(bad)
cld
push
jbe
add
aam
or
shl
cmp
lahf
daa
xchg
in
push
lods
call
ss
xchg
inc
push
xchg
adc
imul
fild
into
pop
div
ss
or
dec
mov
add
push
pusha
(bad)
jns
xor
test
jmp
adc
jns
jo
ins
(bad)
mov
and
outs
test
das
mov
sti
fwait
cdq
call
mov
add
fcmove
std
inc
and
loopne
pop
pop
in
or
mov
xchg
fcom
adc
jno
cmp
sub
iret
inc
add
and
jbe
push
(bad)
out
shl
retf
jns
pop
xor
lods
retf
in
call
inc
jl
jmp
jmp
sbb
out
(bad)
out
lea
xchg
mov
lock
stc
sub
xchg
imul
jns
mov
imul
add
pop
fmul
mov
dec
shl
loop
mov
mul
sti
pop
js
jge
(bad)
mov
out
sub
adc
push
and
rcl
mov
js
bnd
div
aad
xor
scas
and
sbb
adc
adc
dec
(bad)
jo
vpxor
mov
push
int3
enter
lods
xchg
dec
pop
mov
mov
xchg
fidiv
jnp
xchg
inc
jge
in
js
mov
repnz
ja
jnp
popa
sbb
inc
xchg
out
jns
jl
jno
pop
retf
(bad)
jns
ret
or
adc
and
int3
pop
mov
sbb
stos
cld
push
mov
mov
addr16
scas
pop
retf
pop
retf
mov
pop
clc
outs
mov
inc
arpl
jp
adc
out
jp
outs
cli
and
dec
test
dec
stos
(bad)
or
inc
leave
push
(bad)
dec
lea
out
stc
or
push
sar
jne
in
lea
icebp
xor
mov
mov
jge
arpl
pop
int3
cmp
xor
mov
shl
and
fs
push
retf
call
loope
mov
in
mov
lods
xor
inc
dec
mov
dec
loop
retf
clc
pop
sub
xchg
scas
ins
add
xlat
(bad)
jns
sub
stos
fidivr
ja
sbb
mov
cmp
pop
dec
std
ja
pop
outs
push
repz
out
clc
and
jmp
stos
sbb
sub
pop
retf
aas
xchg
aad
mov
xchg
das
imul
sbb
mov
aas
jecxz
daa
inc
cs
rcl
sahf
sub
add
or
mov
lahf
sub
inc
popf
call
rcl
daa
(bad)
(bad)
ss
xchg
push
movs
pop
out
mov
cmp
stc
or
inc
dec
add
jo
cmps
mov
dec
push
ins
inc
pop
sbb
aaa
jmp
pop
dec
scas
xor
jo
xor
repz
ret
in
jae
pop
mov
loopne
mov
mov
test
jle
mov
into
test
dec
loopne
repz
mov
xchg
cmp
xor
inc
inc
xor
in
inc
sar
(bad)
rol
push
out
push
cli
cld
or
aad
nop
data16
cdq
fmul
rcl
ins
icebp
xchg
std
pop
pop
lods
and
dec
adc
inc
cli
ins
mov
dec
repz
loope
ret
int3
cmps
push
call
test
jge
dec
fs
out
cmps
sahf
(bad)
or
div
xor
xchg
jne
mov
add
ins
or
push
in
pop
add
mov
sbb
imul
rol
out
mov
call
inc
sbb
or
add
sahf
pop
mov
xchg
sbb
int3
lods
imul
pop
sub
pop
clc
(bad)
push
(bad)
lock
imul
inc
sete
mov
out
(bad)
pop
fs
and
xchg
(bad)
std
(bad)
xor
cwde
and
sub
test
push
jno
mov
mov
jl
and
mov
mov
fistp
mov
push
add
jp
mov
test
mov
push
cwde
in
cmp
out
outs
int
(bad)
push
aas
lods
pop
int
mov
mov
xor
call
pop
mov
dec
dec
jne
jge
cld
push
retf
outs
push
jle
(bad)
arpl
add
sub
jg
into
pop
sub
out
mov
stos
lea
sub
mov
cli
mov
adc
and
ret
sbb
xchg
scas
in
addr16
jg
test
ret
mov
sub
inc
xchg
adc
int
aaa
mov
xlat
pop
les
dec
neg
mov
sar
sub
lahf
in
out
sub
push
cmps
ins
aaa
mov
iret
mov
mov
sti
std
lea
ja
popf
lea
xchg
pop
pop
jne
jp
cs
or
xchg
stos
lods
mov
xchg
or
stc
ret
cli
adc
gs
sub
in
mov
sbb
fcmovb
xor
inc
lahf
dec
sbb
in
test
mov
sub
cmp
fnstsw
out
and
adc
rcr
mov
or
or
xchg
mov
jae
push
mov
mov
les
outs
cmps
jb
outs
fld
cli
and
mov
fistp
sub
and
pop
cld
sbb
push
xor
ss
push
cmps
push
test
jg
retf
scas
aad
mov
addr16
jge
(bad)
imul
pop
pop
mov
fistp
mov
inc
fcmovb
fsubr
pop
adc
aad
movs
test
outs
and
scas
push
mov
mov
retf
mov
add
inc
mov
jmp
fcom
outs
sbb
mov
adc
clc
in
and
sti
push
sub
out
nop
mov
or
push
pop
and
repnz
sbb
mov
push
fwait
jmp
fidivr
int3
fld
and
jne
pop
fcom
xchg
cld
adc
adc
lock
call
mov
xchg
xchg
scas
mov
fmul
and
fidivr
xchg
push
pop
add
xchg
jbe
rcl
int
sbb
ror
cmp
cmp
punpcklbw
inc
jae
mov
rol
out
mov
mov
fstp
shr
and
push
jmp
js
movs
xchg
movs
ret
aas
rcr
add
or
sub
stos
movs
ins
mov
jle
dec
movs
sbb
xor
add
sahf
mov
push
fstp
or
ja
mov
mov
jmp
jae
push
bound
xchg
sbb
je
hlt
aad
rcr
mov
out
dec
inc
dec
daa
xchg
(bad)
jl
xchg
sahf
push
bound
pushf
scas
out
mov
adc
mov
cli
cmp
test
pop
inc
inc
push
daa
test
rcl
arpl
lock
ins
mov
mov
mov
push
mov
and
pop
popf
push
pop
cmp
and
xchg
or
mov
jnp
dec
adc
sti
sbb
dec
jns
cmp
mov
sti
push
push
clc
call
and
cmp
hlt
ss
outs
in
inc
ret
aas
mov
out
lds
pop
std
push
jg
popf
or
(bad)
sub
(bad)
pop
inc
lea
or
loope
add
sbb
mov
jo
call
arpl
imul
imul
in
cs
add
jg
loope
aad
dec
call
cmps
dec
mov
stc
(bad)
jns
sub
cmp
ret
xor
mov
dec
test
cmp
addr16
retf
adc
or
sub
push
je
aam
repz
test
(bad)
into
mov
dec
rcl
push
push
lods
fs
in
mov
sahf
loopne
hlt
cmovb
and
loope
push
xchg
leave
ficom
out
in
ss
xchg
call
jp
and
pop
stos
in
sub
adc
cli
bound
retf
aam
xor
adc
aad
sar
cli
add
cmc
call
pop
inc
retf
add
dec
inc
adc
sbb
sub
jle
sub
(bad)
or
mov
push
imul
inc
xchg
test
test
jle
loope
sub
(bad)
and
fwait
call
mov
(bad)
xor
outs
jae
daa
pop
add
(bad)
jge
int3
add
mov
imul
ret
push
cmp
test
dec
loop
xor
jae
retf
mov
mov
xchg
rcr
push
(bad)
xlat
add
cli
loop
xor
xor
mov
jmp
arpl
popf
mov
dec
popa
push
push
push
mov
fnsave
adc
pop
dec
jecxz
lods
in
push
push
aad
call
mov
ret
scas
adc
cmps
xor
jbe
hlt
mov
mov
jb
jge
in
pop
je
mov
popf
bound
iret
aad
popf
imul
add
push
cmp
rol
stos
dec
mov
jbe
add
movs
pop
mov
stos
pop
add
repnz
jno
mov
fstp
daa
int3
add
scas
push
mov
loop
ins
sbb
retf
xchg
add
js
call
cmp
dec
push
aad
inc
jle
test
jge
and
xlat
mov
mov
fsubr
cs
stos
xlat
xchg
pop
or
pop
std
pushf
or
push
ds
rcr
scas
sbb
jg
jae
dec
cs
jecxz
jge
and
push
frstor
int3
mov
scas
pop
rol
cmc
cwde
mov
inc
push
or
enter
in
xor
mov
leave
out
retf
rol
leave
arpl
sub
mov
sbb
jne
outs
and
inc
sub
repz
jp
xchg
(bad)
sbb
scas
jno
das
and
fs
mov
dec
xchg
add
in
inc
dec
test
mov
iret
outs
mov
push
loop
cld
clc
jo
jns
cs
cdq
jb
retf
dec
sub
mov
jle
mov
push
shr
cli
idiv
sub
dec
jmp
jnp
std
in
ss
in
and
fnstsw
ins
jne
sub
and
and
mov
mov
push
xor
shr
dec
sub
lea
js
sbb
fiadd
xor
jb
mov
pop
ss
pop
call
(bad)
or
aas
pushf
jmp
outs
push
push
fdivr
adc
jl
xlat
cmp
jle
dec
cs
outs
in
hlt
lods
sbb
out
mov
push
ins
pop
test
xchg
push
cmps
push
fwait
sti
sar
jae
and
fld
jg
xor
mov
loop
retf
and
(bad)
dec
add
jle
push
sbb
or
inc
push
add
and
popa
fwait
aaa
mov
inc
inc
jns
mov
xor
in
and
push
lods
popa
imul
add
call
es
(bad)
retf
xchg
(bad)
pop
jno
pop
xor
lea
ss
mov
repz
cmp
mov
daa
bound
mov
xor
mov
into
mov
push
jg
mov
mov
add
pop
ret
out
and
xchg
not
jmp
or
and
pop
int3
xor
cs
ret
(bad)
pop
cmp
imul
cmp
pop
adc
fs
inc
mov
mov
cmps
inc
push
pop
leave
out
arpl
(bad)
push
jle
es
mov
add
mov
pop
in
loop
adc
out
mov
out
gs
fadd
icebp
push
mov
mov
sub
out
mov
sbb
mov
outs
mov
cld
addr16
adc
pushf
xchg
add
jle
lds
repnz
mov
lods
sar
test
dec
lock
push
mov
sbb
bound
push
xchg
rol
je
call
sbb
cli
xor
test
mov
outs
ror
xchg
je
dec
dec
aas
mov
stc
fnstsw
cmp
call
rcl
push
test
lods
gs
push
imul
pop
mov
hlt
push
rcr
je
xor
cmp
push
scas
cmc
xor
jns
sbb
ins
pop
imul
inc
jecxz
push
(bad)
leave
sbb
sti
std
lods
popf
dec
es
stos
(bad)
mov
repnz
popf
mov
fnsave
adc
out
sbb
inc
or
(bad)
in
sbb
push
pop
movs
sbb
add
pop
call
cld
pop
pushf
aam
mov
pop
popf
xlat
push
fsub
or
mov
rol
fnsave
and
mov
retf
xor
push
pop
cmp
in
jne
mov
ror
fisttp
cmp
dec
sti
cs
push
imul
not
out
xchg
mov
ret
std
xchg
stos
sub
mov
ret
out
jb
(bad)
jns
into
fst
shr
out
pop
shr
xor
xchg
cwde
push
pusha
inc
jno
sub
mov
jmp
mov
repz
aad
mov
or
sbb
aam
out
and
sti
shl
cli
mov
cs
push
cdq
xchg
inc
or
pop
mov
xchg
arpl
bound
icebp
cmp
nop
add
pop
mov
xchg
inc
je
shl
lock
repz
and
cwde
jmp
std
dec
test
or
sti
xchg
jle
inc
push
mov
cwde
(bad)
sbb
mov
popf
xor
mov
xchg
fwait
pop
jmp
and
push
xchg
sahf
stos
popf
or
cwde
gs
jne
push
or
xor
test
dec
xor
and
push
dec
jp
idiv
into
push
cmp
dec
out
(bad)
cmc
push
loopne
call
cmp
adc
imul
push
xchg
cld
push
xor
sub
addr16
fstp
(bad)
fs
lock
mov
loope
sbb
jns
bound
jle
sar
(bad)
int
ja
retf
mov
sbb
push
push
pop
ins
dec
les
jno
sbb
sub
dec
inc
mov
adc
mov
ret
cmp
inc
ret
pop
mov
add
adc
outs
call
mov
dec
pop
jg
jno
cmp
mov
add
sti
inc
int
push
mov
aaa
ror
test
add
and
mov
outs
xchg
int3
cs
cdq
pop
fnstenv
mov
movs
cmps
pop
test
(bad)
sub
cmp
and
pop
sub
(bad)
call
mov
add
fwait
pop
push
out
lds
sbb
xor
movs
mov
mov
call
inc
mov
or
outs
bound
ja
push
xchg
jnp
dec
(bad)
rcl
adc
adc
and
(bad)
push
push
jecxz
jo
fxch
retf
add
test
cli
push
mov
fdivr
out
dec
xchg
ds
movs
nop
pop
push
dec
push
pop
xchg
out
mov
add
mov
es
sub
cmp
adc
popa
fcom
push
(bad)
test
jle
je
or
ja
xor
mov
push
mov
push
stc
iret
(bad)
in
aaa
pop
inc
arpl
jne
add
ds
push
ins
xlat
mov
pop
ins
ins
jne
movs
xor
ss
add
cmp
(bad)
dec
stos
leave
add
test
arpl
ror
(bad)
mov
iret
xchg
icebp
and
jnp
cmps
jns
sti
cmps
xor
pop
fwait
pop
mov
push
dec
cmps
fimul
or
mov
and
mov
pop
push
mov
jns
test
pop
mov
ins
cmp
fisubr
ss
shr
aad
pop
mov
cld
add
xor
sub
(bad)
push
xchg
loop
mov
outs
xor
sub
xchg
lds
fdivr
mov
pop
sub
mov
shl
mov
or
retf
xchg
int
dec
sbb
lahf
mov
cwde
outs
popf
cmps
add
xlat
or
test
dec
pop
or
mov
add
ror
enter
mov
test
push
and
retf
cdq
cmps
and
and
xor
push
rcr
mov
fucomp
hlt
adc
xor
scas
or
loop
out
dec
sub
mov
mov
hlt
rcl
clc
sub
push
mul
push
add
pop
lods
int
cmp
jno
nop
arpl
sub
xchg
mov
lods
and
dec
ins
jbe
xor
fdivr
xchg
js
inc
adc
jmp
retf
adc
and
js
jmp
mov
pushf
xor
dec
ja
and
loopne
dec
xchg
jbe
dec
aaa
or
and
daa
ret
push
outs
ss
add
loopne
movs
sub
daa
push
call
and
or
mov
pusha
inc
jo
jmp
call
mov
shl
dec
pop
push
add
and
sbb
nop
xchg
(bad)
cmc
lods
int3
push
push
aaa
arpl
cmp
dec
(bad)
std
idiv
sbb
pop
cmp
push
ret
cmp
xor
sbb
sub
leave
sbb
xchg
das
imul
fwait
pop
fsubp
retf
xchg
pop
fcom
nop
nop
out
sbb
sub
inc
iret
fadd
test
bndldx
inc
push
retf
scas
xor
in
adc
push
and
xchg
sub
and
(bad)
sbb
loope
mov
lea
hlt
in
cmp
mov
enter
push
daa
loop
inc
jl
jno
or
push
push
xchg
dec
lds
enterw
lea
mov
mov
nop
inc
rcr
(bad)
mov
popf
xor
cwde
dec
cmc
outs
dec
dec
inc
test
(bad)
sbb
retf
test
push
popa
mov
ror
adc
int
mov
sahf
arpl
sbb
and
stos
ja
mov
mov
dec
adc
lods
dec
adc
call
(bad)
adc
jbe
ror
shl
mov
or
adc
int3
bound
jmp
xlat
xchg
test
ja
add
sub
cli
mov
mov
cmp
mov
xchg
jg
fwait
out
movs
mov
push
fnstenv
in
mov
mov
pushf
cmc
jno
mov
rol
outs
pop
fnstenv
push
xchg
and
sti
clc
adc
or
ins
jo
push
pop
sbb
aad
call
mov
pop
mov
popf
mov
aam
pusha
push
aad
into
xor
push
pop
hlt
neg
cwde
xchg
mov
mov
or
adc
shr
and
loopne
repnz
mov
mov
test
sbb
inc
mov
xchg
mov
dec
ja
test
and
pop
pop
in
pop
mov
sbb
inc
repnz
cmp
out
lahf
dec
and
test
push
sub
xor
cld
jnp
sub
mov
es
mov
ret
int3
lahf
pop
jle
inc
mov
(bad)
mov
lock
gs
and
or
pop
fst
lea
mov
out
xchg
mov
hlt
or
mov
add
loop
aas
pop
xor
inc
jne
shl
ficom
xchg
add
cmc
inc
cmp
jle
sbb
sbb
daa
xor
fisub
mov
cmps
add
jl
imul
repz
and
rol
lods
jmp
mov
dec
or
lds
pop
mov
push
sub
mov
cmp
mov
push
dec
es
push
pop
fnstsw
(bad)
mov
jle
pop
leave
pop
and
pop
sbb
mov
fiadd
inc
out
pusha
xchg
pusha
sub
sub
xchg
ja
or
jne
jnp
jo
sub
xchg
sbb
test
rcr
push
stos
loopne
mul
into
mov
test
shr
or
sub
fcomi
add
xchg
jnp
(bad)
neg
lods
sbb
repnz
loop
pusha
cli
mov
icebp
and
outs
sbb
and
dec
mov
fmulp
int
push
scas
(bad)
shl
movs
pop
cmc
sar
pop
sub
ins
ret
inc
fisubr
pop
inc
sbb
fwait
mov
or
int3
pop
xor
sbb
jmp
jle
test
loopne
(bad)
pop
loope
fnsave
dec
loope
fwait
cmp
push
pop
lds
and
leave
inc
pushf
mov
mov
shr
outs
inc
xchg
aas
fadd
daa
add
xchg
dec
xor
std
xlat
mov
cs
ins
daa
mov
xchg
outs
outs
sbb
inc
and
imul
call
test
add
mov
add
and
cli
xchg
loop
pop
xchg
mov
leave
movs
ins
aam
or
add
jge
bnd
mov
dec
movsd
mov
push
jbe
(bad)
rcl
dec
aas
fisttp
adc
mov
repz
in
jbe
jle
add
cmp
jle
xchg
dec
jp
cwde
addr16
stc
jg
into
ja
rcl
jmp
nop
jno
jg
int
add
jecxz
out
pop
bnd
retf
mov
push
xchg
jbe
jmp
adc
or
adc
test
mov
xchg
adc
(bad)
leave
push
push
mov
sub
pop
pop
aad
repnz
test
add
push
retf
into
das
(bad)
loopne
pop
outs
aaa
mov
stos
je
gs
pushf
cdq
xor
dec
pop
out
mov
pop
dec
jp
sahf
ja
dec
xchg
xor
sbb
pop
ret
int
loop
adc
lods
(bad)
jae
jmp
mov
rcr
je
movs
in
xor
xor
ficomp
mov
movs
cmp
nop
sbb
icebp
lods
and
cmp
sub
or
jb
loope
cmp
and
dec
sbb
push
xchg
add
(bad)
mov
push
iret
pop
adc
(bad)
mov
idiv
imul
or
xor
add
or
ss
pop
adc
add
pop
dec
xchg
dec
xchg
ss
inc
xchg
sub
xlat
cwde
bound
add
inc
mov
pop
bound
imul
in
es
in
popf
repz
sub
jge
xchg
pop
pop
cmps
push
jne
lock
mov
jo
dec
cwde
bound
push
add
or
adc
dec
or
dec
(bad)
push
and
or
arpl
nop
and
or
retf
adc
jb
fnstsw
iret
pand
jnp
xchg
cdq
pushf
xor
mov
mov
mov
dec
sahf
repnz
cmp
jmp
or
pop
sbb
xor
mov
push
push
dec
and
add
adc
mov
or
mov
cs
mov
js
dec
iret
jmp
imul
xchg
das
int
ins
fxch
jns
cdq
and
fisubr
dec
and
shr
fnstcw
push
or
aas
mov
xor
je
mov
idiv
jbe
sar
call
push
xlat
sub
lods
sub
xchg
push
jno
fisubr
in
cwde
shl
adc
lahf
in
cmps
pop
sbb
call
jne
pop
test
into
cmc
jno
fsubp
out
cmp
cli
bound
fcomp
adc
jp
mov
push
aad
mov
dec
sbb
xor
inc
and
fist
inc
aas
aam
(bad)
aas
add
pop
mov
mov
or
sbb
mov
add
addr16
scas
sub
hlt
cmp
jne
popa
(bad)
mov
aaa
out
ins
cmp
or
mov
sbb
dec
cld
retf
out
call
scas
test
mov
cs
add
dec
in
xchg
xor
fwait
lods
and
adc
aaa
or
das
dec
and
shr
add
sbb
mov
bound
inc
xor
bound
pop
sar
xor
cmp
jmp
in
push
enterw
fld
addr16
add
(bad)
out
mov
stc
aad
push
outs
pop
int
imul
push
stc
push
mov
or
jp
aas
jmp
pop
xor
sub
jbe
inc
mov
inc
out
mov
sti
(bad)
jle
std
loopne
(bad)
adc
add
jnp
jmp
les
imul
and
mov
jmp
out
leave
or
jbe
jae
sahf
ins
add
push
pop
jne
jno
stos
pushf
loop
add
xor
sbb
(bad)
pop
cmc
fisttp
jmp
push
ficomp
shr
jl
jecxz
fs
bound
loop
(bad)
test
xchg
outs
push
add
ret
dec
test
cmps
cmps
aaa
push
data16
jmp
retf
adc
loop
push
xchg
mov
retf
sbb
xchg
sub
xchg
aam
pop
ror
inc
fcomp
jns
test
xchg
out
mul
sar
jge
mov
cmp
push
lods
retf
cmp
inc
and
push
cmp
fisubr
les
adc
mov
cld
mov
xchg
in
cmp
stos
rcl
fst
sub
pop
lds
(bad)
push
out
ror
xor
js
push
fdiv
dec
adc
inc
cld
sbb
xlat
pop
dec
js
fbld
adc
icebp
xor
xchg
les
push
lahf
xor
inc
sbb
jnp
cld
add
jns
and
and
inc
jbe
shl
xor
mov
(bad)
xor
cmp
loop
das
neg
add
and
mov
in
outs
jmp
pop
and
int
pop
push
adc
sbb
repz
rcl
or
add
mov
jo
js
inc
or
xor
jg
and
mov
arpl
popa
fisttp
pop
xchg
std
cmp
stos
(bad)
cmps
sbb
movs
push
sbb
rcr
movs
jg
(bad)
jmp
mov
xchg
mov
fucomi
ja
add
stc
test
ds
push
and
add
into
sbb
cli
jg
enter
loop
cmc
add
mov
out
cwde
jb
call
pop
fadd
jmp
ret
cmp
jmp
faddp
mov
call
in
or
fcom
(bad)
dec
ret
stc
jmp
push
jl
mov
or
in
out
in
mov
imul
(bad)
pop
xchg
push
test
jno
pushf
rol
mov
lods
sbb
std
std
mov
jmp
imul
test
cmp
test
push
pop
pop
mov
imul
pop
mov
aas
cmp
mov
out
repnz
adc
mov
out
iret
jb
pop
shr
cmp
pusha
je
cwde
ins
arpl
cli
cdq
imul
fadd
retf
(bad)
(bad)
(bad)
shl
mov
adc
sbb
adc
shr
lahf
inc
ds
data16
xlat
and
shl
mov
popf
inc
jnp
data16
and
fdivr
stos
loopne
scas
in
sbb
rcl
mov
and
push
pop
dec
out
cmps
je
mov
in
ja
jne
repz
cmp
movs
lods
sub
dec
sbb
xchg
cmp
ss
and
jnp
mov
adc
shl
inc
jmp
mov
jmp
sbb
mov
mov
out
in
pop
push
es
sub
js
jo
xchg
and
or
jg
sbb
pop
hlt
xor
out
in
xchg
ret
push
shl
sub
fst
and
mov
push
jbe
clc
bound
cmp
mov
dec
mov
into
and
test
and
sbb
in
ficomp
jno
jnp
push
lea
ficomp
push
test
and
add
xor
jp
pop
and
push
outs
jo
push
(bad)
cld
add
mov
xor
cdq
add
pop
mov
jmp
or
call
jno
push
or
push
in
sub
sbb
arpl
jl
test
rcl
and
jbe
ja
les
aaa
fdiv
jle
jbe
test
mov
rcl
(bad)
xor
mov
dec
xchg
pusha
add
fwait
jno
fucomip
push
imul
stos
push
lods
or
cmc
mov
jno
data16
jecxz
cmps
add
mov
or
sub
dec
je
add
shr
mov
in
arpl
dec
je
jecxz
mov
inc
aam
(bad)
sbb
sbb
mov
retf
mov
jnp
into
xchg
mov
jne
call
push
jnp
pusha
or
mov
ss
cmps
push
sub
push
loope
cmp
out
inc
outs
add
int
les
ins
add
add
cmp
les
pop
mov
add
mov
pop
push
mov
in
out
xchg
push
sbb
loop
add
push
shl
add
add
sub
cmp
mov
outs
pop
and
push
xchg
push
sbb
push
loope
pop
adc
jl
mov
mov
dec
or
std
ja
test
jbe
pop
adc
mov
sti
cwde
lea
cmp
jns
jl
dec
cs
lods
pop
mov
aad
test
hlt
or
push
xor
inc
jmp
push
jecxz
loopne
pushf
xor
fidiv
adc
xor
adc
stc
aaa
jno
and
jno
mov
call
mov
or
pop
movs
xchg
mov
sar
inc
cli
jb
mov
in
mov
inc
iret
retf
ins
hlt
or
mov
jo
xchg
enter
adc
not
fstp
adc
cmps
dec
test
mov
mov
movs
dec
lods
clc
add
neg
push
jmp
outs
(bad)
scas
sub
imul
rol
inc
icebp
push
jmp
je
jns
aad
jmp
data16
jno
sbb
sub
mov
xor
sbb
ins
ja
stos
(bad)
movs
sub
iret
ja
retf
mov
jbe
adc
nop
fdivr
or
das
mov
mov
int
mov
fstp
outs
cld
stos
out
fst
mul
cmp
popa
mov
and
pop
mov
jno
adc
inc
stc
out
pop
pop
and
loopne
test
sub
sbb
or
call
and
iret
aaa
retf
jne
lods
xchg
fsubr
dec
mov
dec
gs
(bad)
imul
mov
and
ret
test
fcomp
mov
in
daa
pop
cmc
dec
mov
imul
mov
dec
cli
jp
push
jb
into
sbb
cmp
iret
xchg
in
push
xchg
inc
xchg
dec
add
mov
cmps
mov
dec
xchg
enter
cmp
js
cmp
(bad)
mov
xchg
das
ja
xor
(bad)
cmp
or
leave
pop
sub
or
and
jmp
xor
sub
adc
jmp
fadd
les
(bad)
das
jle
inc
mov
scas
clc
(bad)
jmp
jmp
xchg
push
ret
outs
(bad)
cmps
addr16
ds
sahf
mov
push
scas
sti
enter
(bad)
imul
fdivr
pop
fistp
xor
ins
inc
rcr
popf
dec
xchg
jmp
and
rol
arpl
mov
(bad)
dec
push
mov
inc
add
mov
xor
in
hlt
stos
adc
cmp
cmp
ret
cld
cmps
xor
adc
mov
add
dec
ds
push
cmc
adc
pushf
jl
stos
sbb
outs
fidiv
mov
fmul
rcl
test
jns
jae
cwde
(bad)
clc
call
lods
js
push
add
and
inc
mov
adc
pop
xlat
pop
inc
mov
adc
push
cmp
jb
stos
loop
loop
or
ror
stos
sub
sbb
or
fisubr
into
(bad)
shr
test
shl
xchg
fs
(bad)
nop
test
(bad)
xor
sbb
mov
ror
mov
push
sub
cli
jle
hlt
(bad)
ss
or
or
les
add
pop
mov
mov
dec
arpl
lahf
and
or
pop
push
aad
(bad)
dec
test
mov
mov
loop
imul
adc
fsubr
daa
xchg
dec
jp
xchg
push
test
adc
fisubr
shr
adc
push
pop
xor
dec
jbe
mov
fcmovu
dec
repnz
seto
add
lahf
pushf
fnstcw
rcl
jle
adc
sub
cmp
bound
shl
xchg
enter
inc
fwait
icebp
shl
es
rcl
sahf
adc
xor
pop
sti
loop
xchg
adc
lods
hlt
nop
dec
data16
xor
ret
push
mov
mov
or
lods
or
add
mov
sbb
cmps
xlat
xor
cmp
je
mov
shl
inc
test
mov
cdq
rol
inc
mov
cmovne
repz
pop
into
mov
add
xchg
mov
fld
or
push
fistp
loope
cmp
dec
in
outs
aas
push
imul
std
jmp
aad
sar
add
xor
adc
dec
xor
lea
xchg
psllq
(bad)
inc
sub
adc
popa
pop
gs
lahf
ins
fs
pop
jnp
pop
xchg
shl
lds
mov
shl
pop
bound
in
jp
(bad)
in
stc
cmp
sbb
dec
adc
sub
dec
sahf
pop
jmp
sbb
aaa
retf
mov
mov
push
pusha
rcl
mul
sub
scas
mul
mov
lahf
into
aam
xor
jo
and
mov
xchg
jmp
popf
xor
sub
add
jb
cmp
scas
outs
jae
push
mov
jae
push
mov
imul
nop
out
mov
xchg
test
xchg
fmul
inc
mov
sub
fsubr
inc
or
xor
bound
fstp
sti
add
inc
add
outs
jecxz
xchg
adc
loope
inc
xchg
or
jbe
sbb
in
pop
and
jmp
pop
mov
mov
inc
add
jne
fsub
(bad)
imul
pop
mov
or
or
ja
stos
pop
cmp
aas
pushf
fidiv
in
sbb
in
mov
imul
jae
dec
loop
mov
pop
idiv
in
mov
sbb
mov
fwait
mov
push
mov
dec
xchg
int
xchg
add
(bad)
xchg
push
push
jg
add
js
xor
pop
ds
sbb
add
in
cwde
mov
push
add
int3
pop
mov
push
retf
imul
das
icebp
push
pop
add
movs
dec
mov
and
rol
add
out
dec
push
xchg
repnz
popa
mov
pusha
test
jne
ss
(bad)
mov
ins
pop
jo
shr
cmp
jg
cmp
mov
cmc
inc
call
dec
push
sbb
xchg
test
lea
adc
dec
stc
cld
cmps
dec
sbb
enter
mov
stc
repz
pop
adc
mov
sbb
cmc
rcl
pop
neg
fmul
and
fstp
test
dec
repz
jns
inc
hlt
je
xchg
adc
adc
or
fwait
imul
repnz
call
das
jmp
jle
cwde
jbe
and
shl
cmp
dec
popf
dec
mov
xor
add
adc
test
and
(bad)
jns
add
shl
pop
rcl
dec
cs
inc
jmp
ja
mov
push
lock
loop
xchg
and
or
in
out
lods
push
(bad)
mov
imul
xchg
add
push
dec
mov
push
hlt
push
pop
xchg
push
dec
ret
or
std
mov
pop
cmc
je
inc
arpl
lahf
retf
clc
nop
fst
mov
pop
adc
lods
fs
mov
xchg
sahf
popa
mov
cmp
adc
cmp
movs
dec
mov
gs
pushf
add
and
leave
fwait
inc
scas
stos
dec
and
fcom
je
add
ja
sub
xchg
adc
push
sbb
sbb
lods
cmps
and
push
mov
shr
js
aas
push
adc
mov
jne
xor
add
rcl
in
pop
(bad)
pop
popf
inc
cli
jno
xchg
repz
xchg
cmps
dec
into
adc
xchg
(bad)
pop
pop
retf
inc
add
sbb
cmp
push
pop
mov
jg
std
or
in
xchg
add
scas
mov
inc
test
xchg
xor
test
or
xchg
jg
and
push
and
pop
sbb
mov
ss
sbb
dec
pop
jge
add
mov
xor
adc
imul
rcl
in
cmp
adc
jb
push
push
sbb
stos
push
scas
lods
dec
pop
sub
out
push
and
ror
pop
sub
xchg
cmps
ret
das
and
xchg
mov
ja
jge
fisubr
sbb
xor
repnz
jae
inc
(bad)
jle
out
fdivr
inc
js
xor
sahf
popf
or
in
clc
jae
add
dec
mov
mov
jge
adc
shl
ins
jle
ins
and
loope
pop
fisttp
ds
push
sar
or
jmp
adc
pop
(bad)
js
mov
data16
mov
and
dec
dec
cmps
mov
neg
and
push
pop
aad
pop
push
add
ins
je
jl
push
lock
jg
mov
popf
xchg
cmp
dec
mov
pop
int3
adc
int
ja
in
push
mov
lods
fwait
dec
les
leave
jnp
hlt
add
pop
cwde
(bad)
pop
mov
das
outs
(bad)
push
cmps
fwait
xlat
adc
add
daa
mov
sub
movs
xchg
xor
loope
inc
adc
pop
enter
jp
data16
test
test
mov
in
test
jo
test
push
mov
stos
add
jl
jmp
fcomp
xchg
fstp
test
iret
and
add
mov
push
ror
cs
add
xor
inc
idiv
fst
adc
fs
adc
ins
adc
in
into
mov
ror
pmaddwd
cmp
xchg
push
mov
aas
mov
mov
retf
xlat
fisubr
add
addr16
cmc
jo
dec
inc
push
xchg
pop
inc
jnp
or
lahf
sbb
in
sar
bound
mov
leave
dec
fisub
or
xlat
mov
or
add
call
ins
ror
dec
jbe
in
cdq
push
sbb
jmp
in
mov
inc
test
sub
(bad)
shl
mov
mov
(bad)
call
shr
sub
xlat
shr
enter
fstp
mov
les
mov
dec
mov
or
or
xor
jns
ins
imul
add
mov
mov
sub
mov
xor
dec
es
cmp
mov
xchg
dec
cmp
push
or
bound
xor
and
sahf
pop
lods
xchg
iret
js
push
leave
sbb
push
jecxz
mul
dec
inc
cmp
adc
mov
iret
lea
xor
mov
xchg
push
sbb
pop
jecxz
mov
fdivr
scas
daa
push
mov
xor
loop
mov
out
or
cld
jo
jo
add
aaa
inc
(bad)
dec
xor
arpl
xchg
mov
js
add
pusha
xor
pop
jbe
mov
loope
ret
mov
fdiv
mov
outs
jge
and
inc
lahf
test
int3
cmps
push
iret
mov
mov
fldenv
addr16
js
xchg
xor
aaa
out
pushf
pop
and
jo
inc
fcmovb
scas
sub
retf
test
popf
xor
mov
stos
mov
push
sar
sbb
adc
add
pcmpgtd
(bad)
je
int
mov
je
mov
xchg
in
mov
inc
mov
(bad)
stos
xchg
mov
rcr
shl
sar
ret
out
lods
ins
cdq
add
and
(bad)
nop
sub
dec
dec
fldcw
cmp
loop
mov
in
add
imul
jmp
ss
idiv
pop
jnp
fs
popf
push
ret
out
ja
adc
or
push
cld
mov
aaa
loop
scas
and
sub
push
xlat
ins
pop
adc
std
fisub
hlt
sbb
xor
retf
sub
aam
or
xor
adc
jo
cmp
out
xchg
retf
jmp
lods
inc
outs
scas
and
sub
(bad)
pop
sbb
es
jecxz
hlt
icebp
sub
inc
js
pop
lods
(bad)
in
scas
pop
(bad)
out
or
mov
repz
jge
mov
and
shl
idiv
fwait
pop
cmps
enter
adc
outs
mov
into
add
mov
xchg
xlat
test
sub
retf
test
idiv
outs
and
cmp
arpl
jl
fist
clc
mov
push
jns
outs
mov
ja
pop
sbb
mov
(bad)
into
xor
fstp
outs
ja
(bad)
into
retf
in
repnz
fcmovnbe
(bad)
pop
push
les
cmp
push
enter
ja
in
xchg
add
push
jg
ret
stos
call
outs
jno
(bad)
adc
bound
movs
xchg
bound
inc
ror
sti
mov
or
cmp
das
mov
or
jg
in
sub
sbb
pusha
push
mov
push
push
xchg
pop
or
xor
pop
shl
mov
add
pop
out
mov
repnz
mov
int
sbb
mov
adc
push
data16
or
fidivr
jnp
mov
mov
pop
pop
pop
sbb
xor
dec
jno
int3
pop
gs
xor
popf
xchg
pop
outs
sub
sbb
in
frstor
je
or
pop
adc
stos
js
pusha
stos
and
cmp
jne
icebp
jno
retf
jb
add
mov
ret
pop
ja
imul
xor
mov
jne
(bad)
imul
add
lds
loop
jl
or
mov
jge
xchg
(bad)
sub
popa
or
mov
cmp
and
ret
xchg
xor
lods
test
adc
rcr
dec
lock
xchg
sbb
cmp
stos
movs
or
add
inc
aaa
gs
call
add
loopne
jge
push
ja
out
sbb
scas
ins
and
push
jb
fadd
xchg
lods
loope
push
into
and
neg
fistp
mov
retf
lock
loop
ins
add
jle
inc
jl
fsubr
in
repnz
in
mov
jno
ret
and
retf
pop
in
inc
shl
scas
(bad)
aas
fcmovnbe
rol
adc
mov
sti
push
adc
or
push
mov
push
inc
outs
stos
or
adc
fsub
test
push
outs
mov
sub
into
sub
std
clc
fistp
mov
pop
sbb
cld
or
xchg
mov
and
inc
mov
sbb
xchg
loop
and
mov
mov
xlat
sbb
test
mov
lea
sbb
aam
xchg
das
shr
adc
les
mov
push
mov
test
mov
repnz
dec
xlat
adc
psadbw
lsl
xor
test
sbb
xor
inc
dec
movs
sahf
push
das
pop
sbb
clc
call
add
add
cmp
cmp
das
hlt
cmp
jmp
mov
iret
out
aad
stos
loope
stc
pop
jbe
push
cmp
and
lock
cmp
jns
jecxz
lea
icebp
jecxz
inc
push
pop
jge
jo
push
leave
inc
and
mov
lds
aam
jns
aas
lahf
dec
scas
jb
hlt
nop
fbstp
fdivr
sub
cld
sbb
cmc
mov
xchg
addr16
cmp
xor
cs
(bad)
pop
das
cwde
addr16
jno
stc
idiv
inc
or
loopne
fcomp
test
repz
or
cmp
xlat
fs
add
push
iret
(bad)
inc
push
mov
cmp
pushf
or
mov
nop
pop
test
je
or
push
loop
sub
aad
nop
jmp
ret
mov
pushf
pop
mov
mov
pop
pushf
pusha
xchg
pusha
lds
adc
jge
push
xchg
(bad)
in
mov
xlat
pop
(bad)
xor
inc
fimul
cld
mov
and
ret
cmp
pop
add
cmp
std
ds
leave
sbb
scas
fwait
inc
mov
lea
push
pop
(bad)
lock
sbb
adc
fs
retf
mov
sub
cmp
or
pop
icebp
add
pop
aaa
xor
xor
je
test
mov
mov
test
(bad)
pop
push
push
add
sub
xlat
fadd
xor
dec
sub
(bad)
ins
or
xor
test
fcmovu
movs
loope
mov
adc
cmps
pop
ins
ret
jg
pop
in
cmp
pop
(bad)
je
aam
or
scas
leave
loop
jmp
adc
mov
dec
mov
jg
push
imul
mov
mov
add
loop
inc
idiv
mov
sub
mov
mov
std
jo
cld
scas
sbb
int
hlt
stc
mov
mov
sub
jmp
push
call
bound
xchg
scas
stos
add
or
adc
fiadd
popw
or
imul
pop
push
fdivr
push
xchg
inc
sbb
mov
das
mov
(bad)
sub
je
in
dec
push
ds
(bad)
mov
pop
cmp
xor
sbb
push
xchg
jp
(bad)
gs
add
jg
call
data16
inc
ret
xor
and
rol
(bad)
lds
cmp
xchg
(bad)
mov
imul
pause
pop
mov
inc
adc
push
(bad)
adc
jno
aaa
loope
pop
xchg
ins
pop
push
or
std
fmulp
fstp
dec
sahf
repz
aaa
jge
aas
sub
xor
clc
cmps
fistp
cmps
push
and
inc
sub
rol
ins
dec
cdq
mov
imul
das
lds
push
in
inc
lods
add
es
xchg
clc
mov
js
je
das
push
sbb
cmp
mov
jg
or
inc
repz
sar
into
fstp
loopne
cmp
in
mov
sub
push
fmulp
push
hlt
jae
pop
sub
push
xchg
pushf
mov
and
fcomp
in
mov
pop
enter
ja
adc
hlt
xchg
xchg
scas
pop
mov
sbb
sbb
idiv
jnp
cld
push
imul
mov
in
jge
mov
mov
mov
shr
idiv
ins
(bad)
sbb
mov
popa
push
pop
dec
or
pop
imul
pop
push
push
mov
mov
mov
mov
push
cmp
icebp
lahf
pop
xor
xchg
sahf
imul
sub
mov
inc
add
sbb
pop
cli
mov
adc
fdivr
fst
push
cmp
stos
fsubr
or
cmovnp
jmp
pop
leave
push
mov
xchg
shl
inc
or
es
imul
or
dec
sub
ja
cmp
sbb
loope
arpl
je
cmp
(bad)
cwde
mov
dec
fcmovne
inc
adc
cdq
fsub
hlt
daa
ds
daa
mov
xchg
into
hlt
mov
popa
adc
mov
or
dec
xor
inc
xor
ja
mov
sti
mov
sbb
mov
mov
sbb
and
inc
push
popf
popf
lds
dec
inc
sbb
mov
add
pop
sar
pushf
(bad)
out
cmps
and
add
(bad)
cli
lods
mov
dec
jmp
lahf
repz
sub
dec
in
ret
in
adc
not
or
dec
and
or
lock
jbe
xchg
mov
inc
mov
pop
cmps
adc
pop
dec
in
ret
jge
loope
popa
push
les
cmc
sbb
pop
dec
mov
mov
pushf
xchg
xor
adc
pop
in
retf
adc
in
xchg
inc
xor
add
fsubr
cs
xchg
or
push
sub
adc
adc
ret
bnd
add
add
popa
jp
je
pop
push
in
cmc
es
retf
jbe
xchg
mov
pop
push
mov
fidivr
mov
int
cmps
call
inc
js
hlt
mov
inc
inc
movs
movs
in
mov
mov
mov
push
int3
jae
les
mov
and
leave
mov
aad
pop
mov
or
adc
xchg
push
mov
and
or
rol
mov
pop
in
loopne
jg
xor
lock
mov
push
fwait
sub
mov
fild
sbb
sbb
fwait
outs
ss
jno
popf
and
sub
pop
aas
iret
mov
and
ins
ror
lea
enter
pusha
aam
aam
les
xor
ds
pop
inc
xchg
mov
retf
inc
or
or
add
and
das
xchg
rol
cmp
jnp
add
mov
stos
mov
push
mov
stos
add
lods
sbb
ror
std
adc
pop
lahf
jmp
xlat
inc
mov
je
pop
mov
(bad)
enter
fmul
push
sahf
push
cli
jae
jbe
mov
call
imul
cmp
sub
jmp
sbb
in
or
and
mov
call
aam
and
cmp
or
int3
mov
fs
mov
movs
rol
out
add
cmps
inc
into
icebp
in
sub
xor
jmp
popa
add
dec
out
(bad)
int
je
jae
or
popf
sbb
mov
nop
stc
xor
cmps
addr16
int3
addr16
mov
pop
popa
xchg
stos
cdq
xor
cmps
aad
lea
sub
fild
sbb
cmp
inc
cmc
inc
mov
fcmovu
fwait
in
or
xchg
cmp
dec
jne
movs
xor
push
dec
out
ds
mov
dec
fmul
dec
fadd
add
jno
cmp
push
sahf
mov
mov
xchg
leave
xchg
rcl
jecxz
inc
imul
adc
movs
or
ds
shl
cmps
mov
aam
test
cmp
leave
mov
push
cmp
fst
pop
fisubr
stc
xchg
jns
repz
mov
sbb
adc
lds
gs
and
lods
add
lock
xor
aas
fs
pop
push
ins
inc
data16
out
jle
test
movs
aam
je
push
hlt
push
jne
dec
stos
retf
add
enter
imul
sbb
outs
add
div
sub
mov
test
test
jle
out
ret
div
xchg
pop
lea
stc
xor
ins
and
adc
int3
repnz
dec
mov
(bad)
ins
xchg
repnz
stos
mov
dec
and
mov
jge
mov
push
and
icebp
mov
rcl
movs
cs
imul
xchg
fbstp
fcomp
adc
push
das
mov
aad
and
dec
jl
scas
dec
cld
jecxz
pop
or
in
clc
pop
or
pop
or
pop
dec
test
out
sbb
retf
mov
sbb
xor
fst
or
xor
sar
hlt
outs
lods
mov
retf
mov
jno
xor
push
sub
lds
sbb
dec
jge
mov
inc
or
sub
outs
add
mov
mov
call
cld
gs
cs
push
movs
rol
lods
or
push
cmps
cmp
inc
fsubr
loope
stos
cdq
add
loopne
aaa
sar
or
jo
call
imul
pushf
xlat
mov
inc
sar
jbe
adc
sbb
retf
jle
add
pop
cmp
jg
jae
leave
in
xlat
xchg
inc
ror
mov
push
lock
das
lock
add
dec
rcr
pop
pop
and
cli
outs
mov
add
das
cmp
mov
imul
cmps
retf
fdiv
sahf
jne
cdq
inc
std
xor
(bad)
dec
dec
jns
add
fmulp
shr
mov
clc
xor
adc
or
pushf
in
ret
imul
and
sbb
pop
sub
xchg
rcl
or
test
nop
xor
xchg
std
fwait
push
xchg
sbb
inc
rcl
call
dec
sbb
jne
inc
fcomp
sub
xchg
mov
loopne
inc
add
jmp
rcr
mov
xchg
cs
or
xor
mov
mov
or
xlat
outs
xchg
xor
mov
test
iret
push
jecxz
ret
push
add
pushf
jbe
and
shl
repnz
mov
push
sub
sar
int3
mov
push
jg
icebp
inc
loope
inc
or
imul
adc
sub
rcr
push
mov
leave
lock
movs
fstp
outs
jne
leave
mov
sar
out
sti
inc
dec
xor
jnp
push
ret
xchg
adc
or
adc
xlat
sti
sub
out
or
cld
(bad)
cmp
arpl
sub
sub
sub
outs
int3
xor
and
ret
and
movs
lods
data16
enter
push
or
and
loope
in
mov
in
stos
addr16
sbb
aaa
dec
jge
push
sbb
xchg
iret
mov
movs
dec
sbb
inc
jno
sbb
lahf
or
xchg
push
dec
repnz
sub
inc
outs
jns
test
repnz
shl
sbb
cmp
gs
mov
mov
sub
push
push
imul
cmps
mov
adc
repz
adc
or
jno
push
repz
cmp
dec
pushf
mov
out
or
pop
sbb
(bad)
xchg
or
jbe
or
or
mov
lods
jae
add
add
cmps
pop
frstor
and
mov
out
mov
sub
addr16
jmp
daa
lea
mov
add
cmp
and
cmc
in
jns
cmp
out
mov
stos
loopne
pop
hlt
jecxz
(bad)
jle
sbb
aaa
pusha
pop
ds
xor
std
dec
hlt
mov
jecxz
jb
imul
test
icebp
stos
mov
dec
int
push
ret
(bad)
push
mov
push
jle
shl
xlat
addr16
ins
or
and
lds
inc
add
push
stos
(bad)
xchg
stos
lock
nop
inc
adc
aaa
ins
call
outs
test
mov
aam
in
jmp
adc
lds
dec
push
jmp
scas
popa
pop
aad
inc
(bad)
cwde
call
das
add
and
sub
loopne
fbld
adc
mov
sbb
cdq
je
mov
pop
lods
jbe
jmp
mov
lock
push
sbb
cmp
sub
add
icebp
arpl
repz
and
rcl
or
adc
add
pop
or
and
pop
loop
xor
push
push
ret
sub
or
pop
dec
adc
fwait
push
mov
xlat
fsubp
mov
fidiv
fild
mov
std
sbb
jmp
fyl2x
aaa
jmp
lods
mov
fsubr
loope
xchg
sbb
mov
inc
pop
lds
aam
call
pop
data16
mov
popa
mov
adc
cld
sub
pop
push
jle
fwait
dec
mov
repnz
aad
aad
jae
add
xor
adc
push
adc
(bad)
xchg
mov
fmul
mul
inc
mov
dec
imul
pop
std
imul
mov
ins
test
mov
pushf
sub
inc
and
dec
pop
(bad)
scas
jne
jnp
xor
lds
stc
in
fistp
cmp
mov
cmp
push
pop
mov
pop
mov
jne
repz
or
mov
shl
push
(bad)
fstp
mov
mov
dec
or
sbb
addr16
pop
mov
or
xor
vxorps
or
and
add
inc
dec
inc
and
(bad)
imul
popa
sub
ins
out
pop
adc
or
ins
not
pop
adc
jmp
mov
popa
push
stc
les
pop
jmp
adc
adc
push
aaa
mov
pusha
js
dec
dec
dec
(bad)
push
neg
or
jle
test
xchg
rol
imul
jnp
shl
arpl
loope
pop
mov
vpaddsw
push
aad
mov
jmp
mov
fisub
fldenv
cmps
aam
mov
cmp
xor
pop
fdiv
push
pop
mov
sbb
adc
js
cwde
xlat
in
sbb
iret
xor
add
sub
(bad)
(bad)
xchg
loope
jno
add
hlt
sbb
fstp
dec
neg
adc
jmp
shl
sbb
jle
cmp
dec
adc
lahf
mov
lods
lahf
mov
icebp
sub
jbe
idiv
push
std
pop
mov
pop
jbe
sbb
sub
(bad)
mov
push
push
adc
pop
sahf
add
and
xlat
mov
test
(bad)
repnz
and
pop
in
or
or
stos
fimul
push
nop
aas
push
pop
loop
add
jae
jp
(bad)
xchg
fdiv
push
fldcw
inc
test
popa
inc
js
push
add
cmp
push
retf
into
test
push
cdq
sbb
adc
sub
cmp
dec
fisttp
sub
jle
out
inc
int3
xor
xlat
xchg
fimul
cmp
pop
sti
ficomp
pop
mov
shr
pop
mov
lea
retf
shl
js
lahf
out
lahf
dec
lods
int
xor
xlat
fimul
pop
add
int3
inc
(bad)
icebp
lea
test
(bad)
js
inc
movs
push
sbb
mov
push
cmp
les
(bad)
(bad)
push
sbb
adc
(bad)
jo
push
xchg
icebp
movs
xor
fdivrp
push
cdq
inc
cmp
pop
adc
jmp
icebp
jmp
inc
jmp
dec
sbb
xor
push
mov
test
jle
rol
(bad)
adc
mov
inc
xor
mov
iret
lods
dec
les
xor
call
ret
jle
data16
lds
mov
(bad)
and
jmp
xchg
cdq
push
jns
inc
push
adc
xchg
mov
or
sbb
sub
mov
aaa
repz
and
pop
push
test
push
idiv
jmp
fisub
movs
mov
mov
aaa
test
retf
rol
int
cmps
test
xchg
adc
test
dec
sub
push
pushf
jg
cmp
inc
cs
mov
xor
(bad)
stos
out
ja
or
popa
adc
cmp
mov
fcom
mov
lods
add
loop
sar
fistp
loop
pusha
leave
mov
aaa
xor
data16
pop
lods
aam
mov
rcr
cmps
in
(bad)
jge
aam
cs
out
fiadd
je
aam
mov
repz
ins
movs
movs
or
scas
retf
cmc
add
push
stos
xor
push
pop
leave
xchg
fld
jns
adc
cs
mov
cmp
bound
and
pop
mov
adc
retf
dec
mov
mul
adc
mov
dec
stc
and
fbld
ins
test
ins
movs
xchg
addr16
imul
and
sub
out
cmp
mov
lds
in
mov
bswap
sub
int
js
pop
sbb
(bad)
jp
(bad)
cmp
bound
(bad)
push
int3
or
sbb
sbb
repz
loopne
cwde
mov
aaa
test
cld
inc
nop
int3
pop
(bad)
lds
dec
push
xchg
iret
pop
add
cmp
mov
push
enter
xchg
jnp
pop
cmp
jge
scas
cmp
lods
push
jo
cmps
in
inc
enter
(bad)
mov
or
dec
stos
fcmovnu
out
push
cwde
inc
lods
(bad)
pop
sub
or
ror
mov
mov
xchg
aam
mov
or
adc
jmp
std
sahf
in
in
mov
mov
mov
or
(bad)
pop
fs
xor
or
xlat
retf
out
xor
sbb
adc
adc
pushf
sub
jno
mov
mov
sub
sti
js
ins
in
js
(bad)
loopne
int
je
mov
cwde
mov
sub
mov
mov
outs
mov
jle
addr16
mov
xor
or
(bad)
fstp
xchg
adc
arpl
add
ror
stc
pop
inc
pop
xor
in
xor
jmp
and
nop
push
adc
and
dec
jle
scas
add
dec
lods
mov
fsubr
mov
dec
xchg
outs
cdq
add
call
lds
out
push
xchg
gs
mov
adc
fadd
add
and
xchg
into
xor
mov
arpl
push
push
xchg
loopne
and
fild
icebp
ins
and
es
and
out
inc
ins
in
out
mov
jno
add
(bad)
sbb
xor
retf
and
mov
add
adc
sub
inc
loope
pop
in
jb
add
inc
nop
les
xchg
mov
ins
inc
xchg
jg
ret
sub
aam
xchg
ja
shl
cmp
inc
scas
std
mov
and
add
xor
jmp
int
in
jle
dec
fidiv
dec
nop
jbe
adc
loopne
dec
jmp
mov
ds
or
pop
ja
xchg
sub
fiadd
shl
(bad)
or
xlat
stos
inc
pop
mov
add
sbb
xchg
add
imul
add
xchg
ror
jmp
and
test
rol
xor
jbe
gs
aad
loop
fld
(bad)
xor
mov
fisttp
mov
pop
rcr
es
push
mov
cmp
ret
movs
inc
data16
adc
in
xchg
jae
movs
loopne
mov
loope
fisttp
rcr
aad
and
fwait
mov
jmp
lahf
shr
popf
out
(bad)
xchg
jle
aam
mov
iret
fiadd
int3
jae
push
dec
fwait
adc
cmps
hlt
jns
(bad)
dec
mov
stos
cmp
jno
inc
jbe
xchg
push
push
dec
pop
pushf
call
ja
sahf
scas
lods
jle
dec
xor
mov
adc
jl
popf
mov
sbb
test
mov
inc
xchg
mov
pop
dec
sub
sbb
dec
cmp
xchg
in
sub
stc
cmc
cmp
or
ja
movs
(bad)
mov
pop
push
inc
pop
dec
aad
sahf
pop
or
ins
xor
call
call
adc
arpl
push
adc
inc
rcl
(bad)
lds
mov
add
in
and
cmp
bound
jmp
sub
test
mov
sub
xor
(bad)
or
cmp
and
dec
add
pusha
add
scas
xchg
dec
lods
dec
out
and
daa
leave
dec
and
sbb
or
sahf
ror
jmp
jmp
add
or
rcl
test
mov
test
(bad)
enter
inc
and
ja
stc
xlat
test
mov
xchg
push
cdq
mov
mov
mov
js
or
je
xor
out
call
stos
test
sti
addr16
pop
push
adc
out
push
push
pop
inc
fdiv
mov
(bad)
mov
push
push
pop
(bad)
std
mov
movs
lock
mov
sub
cmc
or
js
pop
adc
aas
aad
in
scas
mov
mov
test
inc
(bad)
push
pop
adc
push
shl
or
adc
imul
sbb
stos
loop
addr16
mov
push
cmp
into
das
inc
rol
or
mov
and
cmps
mov
(bad)
(bad)
xor
lahf
pop
add
fisub
pop
or
jp
fsub
scas
fisubr
leave
rcr
stos
sub
push
cld
sete
ds
sar
repz
cmp
(bad)
mov
dec
mov
loop
(bad)
fcom
jge
outs
sub
sbb
jl
inc
jno
test
push
repnz
mov
fmul
push
in
pop
lahf
rcr
and
mov
pop
mov
and
in
in
or
inc
sub
dec
push
xchg
lock
rcr
daa
lock
mov
and
mov
and
lea
xchg
into
jnp
int3
ror
cmc
hlt
call
jmp
pusha
push
out
nop
aas
ret
cmc
mov
out
push
stos
ret
inc
cli
(bad)
jns
inc
mov
push
inc
xor
dec
fucomp
bound
rcr
mov
add
cmps
(bad)
leave
xor
sub
mov
ret
in
sub
dec
mov
out
dec
and
inc
and
sub
pusha
rol
fiadd
push
mov
outs
ret
mov
pushf
stos
adc
jbe
mul
mov
sahf
sub
aas
add
lods
outs
xchg
les
or
inc
dec
cmp
sti
into
loopne
sbb
(bad)
lods
je
not
test
sbb
cmp
inc
mov
or
leave
les
shr
mov
push
cmp
mov
fldenv
js
data16
rcr
jecxz
adc
mov
mov
push
xchg
xor
into
iret
scas
gs
jb
in
and
add
out
mov
mov
ret
fsub
fdivr
imul
(bad)
mov
xor
or
sbb
sbb
jmp
mov
leave
push
sbb
dec
mov
xchg
jnp
or
repz
addr16
mov
push
xor
outs
add
mov
add
cld
and
imul
movs
stos
ins
push
push
xchg
sub
shl
cld
addr16
jmp
(bad)
out
pop
and
pop
inc
sub
xor
xor
loope
jno
mov
(bad)
stc
test
inc
cwde
cmp
(bad)
and
int
lock
stos
mov
mov
stos
push
sqrtps
pop
cmc
div
and
sar
cmp
and
add
cdq
pop
pop
aad
xor
cmps
lock
retf
adc
movs
arpl
sbb
loope
ss
and
clc
and
int3
in
inc
jle
xor
sbb
mov
and
scas
xchg
or
add
push
xchg
pop
mov
jae
jge
call
sti
sbb
mov
test
fld
test
inc
data16
pop
cmp
mov
add
and
rcr
cmp
not
cmp
aaa
mov
mov
pop
pop
cmps
or
inc
scas
cwde
mov
repz
cmp
and
leave
xchg
jp
adc
scas
inc
les
leave
in
(bad)
out
inc
mov
sbb
inc
lahf
js
xchg
sub
sub
xchg
mov
adc
stos
sbb
jo
lahf
hlt
cmp
pop
shl
leave
arpl
mov
lahf
or
adc
test
cmp
push
and
stos
aaa
xchg
sub
mov
mul
rcr
sti
out
sbb
into
adc
push
int
jbe
pushf
(bad)
std
inc
adc
cmps
mov
mov
repz
pop
pop
es
cmp
mov
das
inc
cmp
or
and
push
inc
jge
lods
xchg
xor
das
ins
xor
scas
mov
in
shrd
sub
rcl
cmp
and
ror
mov
sbb
mov
sbb
pop
mov
pop
aam
clc
jge
popa
into
int
or
(bad)
cld
movs
sbb
les
add
je
push
adc
push
and
test
xchg
dec
es
dec
mov
lds
psubd
pop
adc
add
ds
pushf
xor
js
les
aas
jno
jb
imul
fmul
aam
sbb
rcr
iret
addr16
mov
mov
sub
data16
scas
xor
push
pop
(bad)
stc
dec
dec
push
call
shr
inc
daa
jmp
pop
push
add
jno
clc
aaa
js
mov
mov
inc
jb
in
outs
mov
inc
inc
dec
dec
out
pop
cmp
mov
xor
or
inc
out
push
adc
aas
push
push
mov
xlat
jge
(bad)
mov
mov
and
cmc
xchg
sbb
jo
and
add
repz
mov
das
ror
and
sub
fistp
rcl
mov
and
inc
jmp
mov
retfw
xor
xchg
call
call
int3
ja
imul
mov
or
nop
(bad)
push
push
jne
inc
fwait
inc
jge
xchg
aad
sub
addr16
adc
adc
mov
xor
bound
rol
jno
cmp
xor
jns
mov
pop
icebp
jl
push
ds
fisubr
jnp
and
inc
and
mov
test
loopne
adc
push
mov
aam
outs
ror
icebp
pop
not
pop
xchg
push
mov
cmps
sbb
outs
and
xchg
xchg
js
xchg
or
push
adc
ror
push
adc
and
xchg
jmp
mov
out
dec
inc
out
shl
ins
sub
inc
add
je
pusha
and
sbb
jno
lds
or
fmul
icebp
mov
shr
aas
jmp
push
xchg
cmp
adc
push
inc
sbb
jl
std
test
fadd
sub
bound
retf
dec
inc
cmp
cmp
pushf
enter
push
jnp
jl
lock
and
or
xchg
cdq
sub
std
(bad)
sbb
pop
sahf
ja
sbb
(bad)
jae
mov
and
fidivr
adc
adc
xchg
sub
in
popa
or
xchg
(bad)
ins
mov
adc
scas
hlt
pop
movs
scas
dec
cmc
xor
sub
jle
sbb
mov
push
lods
adc
jl
or
sub
inc
cdq
inc
(bad)
in
or
pop
mov
gs
sbb
stos
push
xchg
xchg
jecxz
outs
mov
pop
shr
popa
rol
adc
or
jne
test
push
mov
out
mov
cmc
int
cmp
or
fs
mov
pop
gs
adc
or
sti
xor
adc
adc
dec
sti
test
loop
lock
gs
sbb
aaa
adc
fisub
push
arpl
pop
in
inc
aad
fnstcw
js
dec
and
retf
mov
xchg
sahf
cmps
pushf
cmc
mov
push
pop
call
aaa
popa
(bad)
and
sub
mov
in
popa
jb
in
mov
sbb
push
dec
aaa
aad
ror
inc
sbb
or
test
das
add
int
sbb
sub
loop
jmp
(bad)
cmps
mov
or
out
aaa
shl
pop
jle
sub
cwde
push
sbb
pop
iret
shl
retf
xor
sbb
add
das
dec
xchg
dec
add
and
or
ret
inc
into
dec
inc
mov
sti
add
shr
cs
xor
fcomip
div
sti
and
stos
sub
mov
push
jns
fstp
out
add
arpl
mov
mov
adc
xchg
dec
(bad)
ret
mov
stos
cmp
and
pusha
ins
add
mov
cmc
das
dec
or
cmc
mov
rcl
int
mov
popf
fcomp
test
mov
pop
ins
pusha
lea
mov
push
jnp
aad
add
jno
mov
adc
ins
adc
dec
mov
adc
fwait
(bad)
cmp
inc
mov
cmp
mov
cwde
inc
scas
jl
int3
scas
mov
repnz
push
inc
mov
or
clc
mov
and
pop
sub
inc
lock
mov
xchg
movs
retf
cs
fwait
(bad)
xor
inc
push
fs
cmc
movs
push
fs
pop
push
cmp
enter
nop
rcl
cld
test
js
and
leave
and
in
dec
in
jmp
jne
cmp
les
push
cs
in
fdivr
(bad)
sbb
(bad)
mov
cmp
cmc
js
shl
push
jne
jne
loopne
popf
jp
push
test
jmp
faddp
shl
in
in
mov
jne
lds
or
add
repz
(bad)
xlat
pop
shl
gs
cli
mov
sahf
inc
xor
lahf
sub
cmp
mov
mov
in
cmc
sub
pop
adc
jle
adc
push
inc
lods
(bad)
fyl2xp1
ret
fisttp
dec
jo
ret
js
sbb
push
clc
dec
jnp
push
jne
jne
je
mov
or
or
jae
(bad)
pop
adc
mov
fwait
hlt
iret
push
mov
jns
jb
or
ret
inc
test
sub
pop
jecxz
sar
add
call
push
lods
adc
inc
and
add
add
iret
shr
inc
xchg
outs
adc
fwait
jnp
jno
(bad)
and
pop
stc
ficomp
mov
add
sub
cmp
and
out
xchg
movs
hlt
or
xchg
into
dec
neg
call
xor
outs
add
(bad)
sub
test
or
xor
add
dec
fsubr
push
ds
mov
pop
pop
scas
imul
rcr
push
imul
sbb
lods
dec
cmp
mov
stos
add
cmps
cld
movs
es
int3
repz
mov
add
dec
xchg
xchg
iret
adc
cwde
daa
stos
xchg
jnp
and
mov
inc
cli
imul
not
fcmovu
mov
push
xchg
fnstcw
xchg
cmp
imul
sub
mov
xchg
xchg
ins
cmp
jmp
cmps
jg
and
mov
js
mov
mov
or
fld
add
jno
xchg
cmp
cld
inc
inc
test
lods
inc
rcr
lock
cmp
push
add
push
mov
test
pop
fsub
jmp
lds
xor
in
cs
int3
xchg
scas
add
and
fstp
neg
add
out
ins
adc
pushf
call
push
push
sbb
dec
int
mov
sbb
sub
aam
test
jno
pop
inc
and
js
mov
push
out
sti
data16
cmp
xchg
mov
(bad)
mov
aaa
sahf
dec
pop
pop
jno
sub
inc
jg
call
or
xchg
das
pop
loope
repnz
mov
test
push
scas
xchg
sub
jmp
test
aad
jns
jne
enter
aad
or
inc
xchg
sbb
dec
outs
fisubr
sbb
cs
in
gs
push
and
xor
mov
xchg
and
push
cmp
push
adc
sbb
cmp
push
dec
mov
adc
ins
cmp
or
push
leave
pop
inc
sbb
stc
cmp
out
mov
dec
test
arpl
jmp
sub
xchg
mov
sbb
mov
inc
fcom
xchg
xchg
sti
mov
stc
add
ret
push
shl
jnp
movs
iret
jp
mov
xchg
inc
inc
mov
jmp
inc
nop
jmp
dec
pop
mov
mov
push
jg
sar
xchg
imul
pop
test
rcr
sbb
aaa
loope
aaa
mov
shr
inc
jp
inc
in
mov
(bad)
xchg
pop
add
pop
loope
mov
jbe
jecxz
and
sbb
mov
mov
push
test
add
mov
mov
imul
adc
outs
adc
jno
add
mov
cli
inc
dec
inc
mov
lds
(bad)
call
rcr
jns
sub
jmp
shl
mov
pop
xor
jo
pop
nop
ror
jns
outs
pop
or
mov
inc
push
xor
addr16
xor
test
sbb
lods
add
xor
or
ja
pop
xchg
mov
or
and
adc
fsubr
icebp
cmp
stc
or
mov
enter
add
or
mov
jns
sti
push
les
neg
outs
xchg
lock
ins
test
outs
test
jo
cli
imul
shl
pop
pop
lods
jmp
gs
xchg
ds
xor
add
pop
sahf
adc
mov
or
arpl
dec
retf
adc
mov
ins
jns
icebp
add
or
dec
jnp
movs
stos
stos
cmp
loopne
xor
mov
add
mov
fdivp
pop
mov
out
jnp
sar
clc
sub
mov
mov
push
push
pop
mov
ds
cmp
jbe
out
add
push
idiv
fstp
pop
cmps
aaa
dec
or
sbb
test
xor
mov
ret
fld
int3
add
pop
fidivr
int
jns
push
mov
pop
inc
jp
cmp
(bad)
icebp
out
sub
jl
test
mov
sahf
push
or
iret
push
push
jb
jp
sahf
or
xor
scas
sub
push
jmp
pop
sbb
push
push
mov
add
push
int3
adc
mov
adc
sbb
add
inc
sub
(bad)
inc
aas
stos
mov
mov
ret
call
pop
and
xchg
aad
dec
mov
mov
mov
test
sti
jno
imul
pop
pop
mov
xor
pop
jl
scas
stc
retf
mov
cmp
sbb
out
rol
mov
xchg
lds
data16
xor
push
shr
fst
in
stc
in
imul
pop
mov
lds
cmp
or
sbb
sub
add
int3
in
pop
loope
loopne
xor
sbb
xor
bound
outs
inc
cmp
or
es
pop
pop
push
mov
call
xchg
adc
mov
call
inc
adc
dec
outs
adc
push
rol
xchg
(bad)
jmp
pop
mov
popf
je
add
fadd
mov
shrd
push
ret
aaa
sub
push
sbb
push
gs
(bad)
test
xor
dec
mov
cdq
cmp
mov
mov
push
das
call
mov
lds
pop
mov
cs
cs
and
or
add
mov
mov
addr16
push
inc
movs
scas
xor
mov
dec
mov
mov
push
push
scas
jg
stc
add
mov
es
inc
leave
xor
push
in
fdivrp
adc
iret
sbb
fbstp
xor
mov
shl
or
jge
retf
cmp
mov
cli
or
sub
pop
cmp
out
mov
add
mov
retf
mov
xchg
les
mov
rcl
imul
xor
push
in
jno
cs
(bad)
cmp
xchg
stos
mov
test
jbe
xchg
stos
imul
mov
push
push
hlt
cmps
jle
inc
clc
inc
push
mov
cs
jbe
pusha
pop
fndisi(8087
and
test
pusha
pop
push
mov
fwait
jno
gs
mov
lea
xor
xor
cmps
dec
nop
push
jge
lods
mov
or
push
or
add
cmc
fcomip
movsx
cmp
out
ficomp
inc
sti
mov
mov
jmp
inc
jge
cmp
enter
pop
shr
scas
clc
xor
mov
and
scas
sahf
xchg
adc
addr16
pop
adc
mov
out
pusha
and
fyl2x
mov
out
push
aas
inc
add
ds
sbb
mov
xchg
ins
into
mov
repnz
addr16
movs
out
mov
and
fs
(bad)
repnz
fld
outs
loop
cs
xor
sbb
das
mov
push
dec
mov
jb
movs
ja
pusha
(bad)
mov
bound
push
and
retf
inc
push
movs
imul
stos
inc
retf
mov
mov
xor
int
sub
sbb
adc
mov
es
stos
cmp
fdiv
not
stc
repz
test
rcl
sahf
movs
xchg
stos
not
test
sar
imul
and
(bad)
add
mov
es
fst
pop
cmp
retf
rcl
sub
dec
sbb
xor
cwde
outs
and
and
test
adc
inc
mov
inc
mov
sbb
aad
mov
cmp
inc
push
in
dec
fild
shl
jp
adc
push
push
bound
push
mov
jmp
(bad)
pusha
fs
push
pushf
(bad)
retf
or
stos
dec
sub
(bad)
cwde
sahf
test
inc
aad
xor
sbb
nop
fmul
mov
shl
ret
aad
or
std
inc
loope
cmp
mov
push
(bad)
jne
sub
mov
shr
popa
cli
punpckldq
and
pop
out
inc
xchg
inc
push
jne
je
jb
pop
repnz
hlt
dec
xor
jg
xchg
arpl
or
or
repz
jle
lods
aaa
and
std
lods
repnz
mov
sbb
fwait
daa
xlat
repnz
int
iret
pop
loop
push
or
mov
xor
loop
dec
inc
test
lahf
sbb
inc
dec
and
sub
and
cmp
cwde
mov
aam
jns
xchg
movs
iret
dec
cld
dec
pushf
jb
adc
pop
xchg
and
in
in
sbb
mov
cld
mov
sbb
sub
cli
in
icebp
push
sbb
(bad)
cli
xchg
shl
scas
pop
mov
inc
enter
cmps
out
sbb
add
daa
push
jbe
dec
or
out
sahf
push
mov
pop
cmp
mov
xchg
dec
in
retf
xor
mov
jmp
add
in
imul
call
dec
jbe
fld
xchg
loop
shl
mov
mov
pop
jecxz
ins
jne
test
imul
lock
mov
sub
dec
sub
mov
shl
cmp
push
fwait
pop
das
data16
xchg
out
sub
outs
lea
add
data16
imul
jp
and
mov
sub
loopne
fist
mov
xchg
sub
or
outs
add
stc
sti
aaa
cmp
test
call
unpckhps
xor
push
test
pop
test
push
imul
jmp
inc
sub
lods
js
push
sar
sti
or
jne
rcl
pop
pop
xor
iret
dec
sbb
xor
fnstenv
adc
xor
test
inc
inc
rcl
xchg
adc
cmc
xor
pop
aad
adc
cmp
adc
pop
stc
pop
inc
cmp
loop
cmps
jo
push
pusha
mov
dec
(bad)
js
xor
fucomp
in
adc
(bad)
js
loopne
addr16
test
jl
shl
mov
inc
mov
adc
call
ins
retf
jnp
(bad)
and
push
mov
icebp
dec
xor
and
or
xor
ret
out
loopne
xchg
add
jno
add
push
fstp
lods
push
(bad)
dec
cmp
inc
in
fadd
and
stos
retf
push
pop
mov
adc
enter
leave
jb
cmp
fimul
pop
and
ds
and
pusha
fimul
sbb
xchg
imul
or
cmp
rdmsr
mov
cwde
mov
jbe
fidiv
push
imul
sub
inc
fimul
cwde
rcl
rol
retf
jb
sub
xor
add
dec
mov
inc
mov
gs
jbe
lea
push
neg
mov
add
mov
xchg
popa
lds
repz
dec
test
in
xor
ja
sbb
inc
mov
push
outs
jne
aaa
les
fwait
jo
cmps
add
clc
test
(bad)
rol
fcmovnbe
lock
pop
push
xchg
gs
jg
cmc
and
pop
sub
mov
mov
inc
mov
push
js
ret
out
sub
push
push
cmps
test
outs
mov
mov
and
test
pop
sbb
inc
pop
int3
call
mov
adc
jbe
shr
sub
xor
test
lds
in
fild
adc
unpcklps
outs
mov
pop
pop
in
cmp
sbb
repnz
xor
scas
lods
or
imul
pop
adc
pop
mov
inc
dec
pop
pop
loop
shl
pop
imul
cli
add
cmc
loop
sbb
and
mov
dec
push
dec
pop
or
sub
call
in
es
pop
add
sbb
mov
mov
out
inc
mov
xor
sbb
mov
mov
mov
ret
and
cli
and
hlt
jmp
jae
int
sbb
pop
sub
(bad)
fcom
repz
xchg
imul
repnz
repz
loope
mov
jne
xchg
sub
or
mov
inc
push
push
cwde
jp
es
and
ror
mov
mov
inc
sub
call
fild
pop
fstp
leave
jmp
sbb
cld
scas
xor
jb
in
ja
stc
jno
ins
mov
dec
mov
je
ins
jmp
xlat
mov
add
mov
aaa
ja
jb
ffreep
(bad)
repnz
(bad)
pusha
pop
ins
in
and
mov
test
mov
xor
fisubr
les
push
ror
mov
add
add
push
aaa
inc
mov
and
push
inc
leave
arpl
iret
sub
add
and
aad
repz
aaa
pop
in
push
gs
sbb
push
adc
mov
xor
xchg
adc
fstp
push
push
iret
push
inc
xchg
jle
out
dec
repz
out
clc
stos
je
cmps
cmp
and
mov
jecxz
aam
dec
ret
xchg
stc
jge
fucomip
pop
add
xchg
jmp
lds
adc
and
ret
fcom
mov
popf
(bad)
mov
ret
fs
lods
sahf
std
lods
pop
out
fs
jmp
aam
pop
pop
shl
inc
add
stc
ins
cmp
fldcw
cmp
adc
add
stos
pop
sub
jno
cmp
mov
cmp
mov
inc
cmp
mov
jb
push
dec
push
mov
scas
jl
adc
sbb
add
icebp
rol
out
sub
xchg
ret
loop
adc
inc
sbb
fisttp
jb
in
les
aas
cs
push
(bad)
jle
jle
sti
or
out
jbe
lahf
rcr
shl
and
or
and
xlat
cmps
dec
push
sbb
hlt
int
pop
fsubr
jnp
(bad)
xor
pop
mov
arpl
(bad)
into
hlt
jo
rcr
push
add
in
push
loopne
shl
cmp
cwde
shl
sbb
push
push
test
mov
mov
cwde
ja
ss
imul
jae
dec
dec
bound
adc
mov
mov
or
push
cmp
lahf
stc
xchg
jmp
xchg
dec
mov
mov
cmp
pop
sbb
in
lods
jbe
enter
adc
mov
push
or
sub
outs
mov
push
pop
and
xor
(bad)
push
(bad)
cwde
dec
stos
add
mov
mov
daa
fsub
pop
(bad)
inc
cmp
jo
imul
les
add
mov
mov
ins
adc
mov
out
and
push
int3
sbb
inc
pop
mov
sbb
aad
push
iret
add
mov
ds
xchg
mov
xchg
cli
sub
pop
std
into
inc
sub
lods
add
dec
stc
inc
ror
sub
sti
popf
sbb
xor
xchg
add
cmp
in
or
push
mov
arpl
(bad)
xor
pop
add
inc
pop
and
repz
(bad)
rol
jge
dec
sbb
adc
icebp
add
lods
iret
(bad)
xor
fidiv
mov
int3
ins
and
dec
and
popa
push
add
jbe
sbb
pop
outs
les
int
ja
xor
xchg
mov
repz
and
and
mov
sbb
push
in
mov
leave
sbb
test
jecxz
and
stc
je
push
jb
movs
in
mov
cmps
out
xchg
fistp
xchg
in
dec
cmps
mov
mov
sbb
inc
dec
jge
sub
(bad)
xor
sub
mov
jo
xlat
jmp
call
inc
jge
nop
pop
xchg
jmp
ins
adc
mov
aaa
retf
mov
and
out
call
bnd
pop
mov
xlat
pusha
jne
outs
sbb
shr
cmp
aas
add
push
out
retf
sar
or
aaa
xor
xchg
xchg
pusha
lods
cmp
fs
push
and
xchg
rol
mov
push
out
jmp
inc
add
shl
jbe
adc
xchg
push
mov
sub
call
sbb
into
cmp
lods
mov
es
pop
jno
(bad)
xchg
lds
sbb
stos
or
or
into
sbb
pop
pop
mov
call
in
sbb
icebp
jmp
(bad)
in
(bad)
cwde
mov
xor
mov
mov
rcl
sbb
in
bound
lds
jge
fisttp
dec
nop
mov
data16
dec
lods
push
cmp
mov
sbb
add
inc
pop
xchg
mov
xchg
mov
sbb
adc
mov
lods
sar
jp
adc
aaa
pop
bound
ror
adc
outs
dec
push
in
dec
ss
xor
push
call
fs
in
or
mov
jae
test
push
inc
add
cwde
les
das
aas
lods
int
pusha
out
cmp
adc
pushf
mov
inc
adc
or
inc
jns
aad
aaa
mov
or
sub
ror
rol
xchg
fcmove
aam
jle
test
sar
aas
jmp
out
lock
sbb
shl
(bad)
sbb
in
arpl
ins
or
lahf
cmp
mov
push
xor
sar
ja
push
push
adc
mov
mov
or
retf
sub
dec
xchg
cmc
mov
inc
xchg
lods
cli
clc
(bad)
repnz
or
not
push
cmps
inc
mov
pop
push
les
sub
fwait
mov
sti
scas
cmps
neg
mov
jmp
rcl
or
add
pop
adc
popa
movs
and
sub
dec
retf
ror
add
xlat
mov
dec
dec
daa
mov
add
test
(bad)
xlat
les
mov
leave
call
les
push
loopne
push
stc
jg
sub
call
sbb
dec
stos
pop
add
mov
aaa
or
jne
and
imul
bound
aaa
push
and
pop
jge
mov
pop
ret
push
xchg
xor
jmp
inc
add
add
add
rol
jo
jp
mov
jnp
jp
mov
sbb
ret
imul
imul
push
xor
pop
inc
mov
ror
int
inc
ds
xchg
outs
jg
inc
inc
out
dec
test
mov
push
test
inc
push
ins
xor
or
inc
cdq
in
fs
mov
(bad)
dec
ror
out
pop
xor
add
xor
pop
push
xchg
daa
lods
jecxz
bnd
xor
les
stos
shr
push
jmp
jmp
cmp
mov
lahf
test
out
push
fcomp
loop
push
add
xor
xchg
jb
repz
lea
(bad)
mov
xor
cmp
sbb
in
in
dec
in
pop
pusha
push
ss
pop
cli
aam
stos
retf
movs
(bad)
adc
test
outs
xchg
jmp
mov
loopne
scas
jp
dec
xor
popa
js
aam
lds
mov
xchg
add
stos
or
fwait
jmp
cli
mov
lods
gs
das
inc
scas
dec
dec
int3
aam
aas
fild
lock
rcl
jns
popa
pop
add
sbb
mov
xor
lods
push
add
push
xchg
cmp
adc
mov
scas
fstp
(bad)
lods
adc
push
or
jp
arpl
mov
adc
cld
xor
mov
dec
add
push
jmp
push
in
call
fdivr
pop
dec
(bad)
enter
sub
lock
cmps
es
and
xor
pop
jecxz
rcr
rcl
cmp
das
mov
fild
pop
push
rcl
cli
rcl
or
sahf
mov
mov
and
sub
iret
out
sub
aaa
loope
cmp
push
sub
ret
icebp
into
das
ror
xor
jns
jno
lahf
stc
mov
or
mov
pop
dec
xchg
pop
out
jmp
mov
push
ret
cld
mov
outs
sahf
add
fs
jg
dec
push
not
cmp
xor
adc
xchg
out
jp
(bad)
push
fwait
mov
jb
mov
(bad)
push
dec
cmp
and
xor
push
(bad)
add
or
jns
inc
fld
add
dec
or
cld
(bad)
dec
cmp
aad
mov
push
movs
and
icebp
das
push
dec
repnz
mov
call
jecxz
sbb
loop
(bad)
fcom
sbb
dec
(bad)
jnp
add
lock
jno
scas
sub
mov
pop
loopne
inc
into
(bad)
or
sbb
jmp
mov
xchg
push
repz
(bad)
leave
movs
jo
outs
cmc
shl
jge
lds
mov
cmc
sub
inc
push
and
xor
push
ret
dec
fwait
hlt
pop
xor
and
mov
cmp
cmps
push
mov
popf
pusha
dec
jns
aam
sub
add
repz
xchg
or
movs
ror
sbb
jl
arpl
inc
mov
push
jmp
(bad)
or
pop
xchg
movhps
call
out
pop
iret
push
mov
sub
mov
mov
ret
jle
xor
cli
sbb
loop
repnz
inc
or
aaa
inc
retf
jecxz
or
sti
sbb
add
push
adc
jb
sub
dec
scas
retf
jbe
call
fwait
cdq
and
jecxz
push
cmps
jno
mov
stos
fdivr
push
push
mov
push
adc
add
imul
int3
aad
repnz
clc
inc
into
into
sub
mov
mov
inc
repz
out
xchg
mov
shr
jae
sbb
or
std
pop
call
repnz
xor
dec
adc
popa
jns
in
bound
(bad)
dec
adc
loop
and
nop
dec
push
call
cmp
enter
int
cwde
inc
lahf
fmul
jp
mov
fldenv
inc
jne
cmp
pop
ficomp
call
cmp
sub
mov
scas
movs
inc
outs
pop
or
and
push
inc
mov
jl
pop
inc
and
mov
cmp
mov
ret
push
push
cmps
mov
pop
loope
jno
jns
(bad)
sbb
imul
or
mov
sub
inc
ins
dec
into
mov
add
push
call
xlat
icebp
mov
adc
mov
jo
div
outs
cmp
mov
xchg
lds
stos
inc
sbb
adc
and
out
mov
xor
into
pop
out
and
test
aaa
aam
(bad)
fadd
repz
sub
push
dec
aas
cwde
sub
add
xor
or
sub
(bad)
shl
imul
pop
in
daa
fcmovnbe
gs
dec
ja
(bad)
aaa
cmps
fsubr
mov
add
xlat
cmps
sbb
clc
push
clc
test
xor
ja
mov
adc
cmp
sub
out
(bad)
in
cwde
(bad)
(bad)
std
sbb
lods
jmp
add
bound
xchg
mov
popf
jge
xchg
iret
fisttp
ins
stos
cwde
push
dec
mov
pop
cmp
mov
or
ret
(bad)
loope
ret
push
push
popa
xor
jnp
push
outs
mov
mov
cmp
(bad)
retfw
loope
bound
(bad)
and
push
jmp
jbe
int
loopne
sbb
dec
mov
xor
out
mov
push
pop
mov
das
dec
jb
ss
fs
outs
cmp
mov
xchg
and
(bad)
pop
xor
mov
(bad)
lods
das
push
enter
lahf
(bad)
or
lahf
aas
mov
rcl
call
and
xchg
loop
add
nop
sahf
xchg
mov
fidivr
add
arpl
retf
cwde
movs
les
mov
push
push
loopne
into
mov
neg
xor
mov
ins
test
inc
test
test
adc
push
adc
or
and
nop
jmp
adc
mov
add
mov
movs
mov
jl
inc
outs
mov
sub
std
pop
jne
das
sbb
add
fs
cmp
mov
call
or
add
add
test
cmp
ret
out
xor
(bad)
test
mov
xlat
xchg
mov
pop
sbb
mov
in
push
repz
mov
pusha
sahf
mov
shl
inc
or
out
or
xor
cmc
pop
mov
popf
push
jp
mov
scas
daa
movd
lods
mov
rcr
lahf
push
outs
ins
fs
or
gs
aas
mov
mov
dec
cmp
out
xor
adc
rcr
mul
fmul
mov
rcl
mov
sub
mov
and
lods
out
xchg
sbb
xor
push
sbb
push
movs
(bad)
mov
xchg
movs
in
push
adc
ins
mov
lea
xor
push
inc
cld
push
lock
push
jne
jnp
cmp
ror
call
mov
xchg
je
adc
js
icebp
mov
icebp
push
(bad)
fadd
push
jl
inc
jo
mov
inc
div
fcmovnu
dec
(bad)
jge
adc
scas
retf
ret
mov
mov
or
cmc
push
jp
sub
or
pushf
jge
dec
jb
hlt
icebp
les
popa
sbb
in
add
test
inc
movs
cwde
push
cmps
mov
cmp
jne
xor
jle
dec
(bad)
sub
dec
(bad)
push
loop
cmp
fstp
repnz
dec
scas
xchg
je
shl
cdq
and
imul
je
or
jle
retf
rep
test
loopne
jl
push
pop
adc
and
pop
jecxz
jb
jne
in
leave
sbb
inc
add
stc
into
mov
rol
pop
dec
cli
loope
scas
into
js
pop
jns
rcl
mov
or
test
mov
dec
and
pusha
push
cli
pop
add
enter
scas
pop
ins
ins
sahf
dec
fisttp
rcr
or
dec
ss
cs
sbb
aam
xor
jae
test
and
cmp
xor
jmp
sbb
mov
cmp
jmp
rcl
ds
test
ret
or
nop
pop
mov
adc
sar
dec
and
xchg
(bad)
mov
pop
aaa
call
inc
jge
dec
inc
add
mov
mov
mov
xchg
mov
sbb
or
mov
pusha
inc
push
(bad)
and
cli
jo
cmc
retf
dec
jmp
pop
adc
mov
fld
ins
pop
in
pop
es
data16
adc
lds
iret
cmp
mov
pop
mov
in
xchg
call
jge
pop
fdiv
add
jnp
pop
es
add
dec
cmp
fdivr
sahf
adc
outs
mov
or
push
aas
lods
sbb
je
mov
push
xchg
mov
dec
jno
cmps
ins
mov
loopne
ret
pop
adc
cmps
mov
dec
push
add
scas
dec
dec
sub
sbb
test
test
jmp
ins
cmp
xchg
cmp
xchg
mov
and
xchg
push
ds
mov
dec
add
jmp
xor
xor
mov
jmp
fnstsw
out
mov
adc
fadd
pop
aas
push
ins
mov
je
dec
int3
or
scas
fs
push
mov
in
aam
pop
ja
fistp
jne
push
test
sbb
and
mov
adc
hlt
out
sub
(bad)
mov
jne
data16
gs
or
mov
aad
mov
outs
imul
push
inc
jnp
jnp
imul
ins
scas
mov
dec
sbb
fdivr
pop
fstp
inc
imul
(bad)
cmp
inc
jl
sub
(bad)
hlt
dec
xchg
xchg
and
inc
pop
and
adc
sub
retf
jbe
(bad)
pop
test
add
push
ins
daa
aaa
cmp
adc
outs
inc
mov
and
pusha
cld
sar
pop
gs
cmps
inc
in
adc
adc
mov
mov
push
mov
in
int
xor
cmp
leave
jbe
cld
ror
mov
int3
(bad)
aam
sub
stos
ror
and
scas
bound
xor
(bad)
je
inc
cli
call
add
add
leave
push
mov
popa
pop
sbb
or
shl
int3
lock
xor
and
push
mov
and
sub
jecxz
(bad)
fstp
mov
cwde
jp
jp
jne
and
mov
and
xor
retf
or
test
out
and
dec
arpl
mov
ds
outs
mov
shl
(bad)
out
or
cli
clc
leave
popf
sar
and
xlat
mov
pop
cld
les
sbb
pop
(bad)
jo
in
pop
or
popw
xchg
pop
js
dec
test
push
xlat
fdivr
push
cwde
xor
mov
pop
lods
ins
popf
pop
out
pusha
shr
xchg
inc
fwait
add
or
inc
add
pop
leave
add
ror
retf
fs
adc
add
pop
jb
add
mov
inc
(bad)
pop
lods
repz
dec
mov
aaa
outs
mov
pop
fstp
frstor
or
imul
xchg
cmpxchg
gs
aas
stos
and
xor
lahf
adc
out
cmps
aad
retf
and
inc
pop
jl
mov
test
push
mov
fcmovnu
push
adc
out
cld
ins
cmp
sti
inc
pop
bound
adc
dec
xchg
loopne
sti
div
pushf
or
xchg
ins
mov
push
inc
hlt
sub
lods
adc
das
mul
sub
imul
loop
(bad)
out
jnp
pop
mov
mov
mov
(bad)
icebp
push
push
jno
pop
hlt
dec
mov
xchg
hlt
jmp
mov
aad
fbstp
cwde
in
mov
neg
sbb
mov
mov
mov
mov
adc
(bad)
mov
dec
neg
xchg
mov
push
sbb
jbe
fld
adc
push
dec
or
mov
cdq
jno
push
dec
mov
out
movs
adc
cmp
cmp
dec
movs
sub
mov
adc
sub
xchg
arpl
es
ins
add
sahf
push
add
inc
repz
push
rol
jl
out
push
mov
icebp
jp
imul
in
push
call
ret
cmc
jp
sub
xchg
nop
sysexit
adc
mov
pop
push
pop
sub
inc
imul
pminsw
fisttp
mov
cs
loope
xchg
jae
xchg
repz
aaa
std
push
pushf
dec
dec
mov
ret
ds
test
mov
pop
data16
inc
cdq
int3
adc
jno
mov
in
and
lods
fisub
fcomp
sti
dec
fwait
mov
mov
js
loop
je
fistp
imul
push
das
push
ja
(bad)
cmps
adc
retf
mov
hlt
int
cmp
and
adc
test
add
in
mov
and
xor
ins
out
xor
adc
fwait
and
jl
neg
xor
std
mov
call
scas
outs
dec
inc
cmc
sbb
sub
out
ds
ficomp
mov
cmc
out
and
jmp
hlt
retf
cdq
jae
sub
bound
and
jnp
mov
arpl
mov
xor
out
cmp
std
pop
lods
ficom
mov
pop
xlat
pop
xor
outs
fld
xchg
mov
pop
xchg
pop
cli
inc
push
push
ds
rol
pop
pusha
and
pop
cwde
ss
call
(bad)
mov
(bad)
scas
cmp
jg
cmc
(bad)
add
add
mov
dec
mov
and
adc
lods
outs
jmp
jmp
sbb
arpl
int
shl
mov
or
(bad)
jle
(bad)
test
dec
stos
in
mov
sti
mov
cmc
sub
xchg
cmp
loop
or
stos
in
scas
mov
(bad)
(bad)
out
leave
lods
adc
pop
pop
std
into
mov
lods
xchg
jb
int3
mov
pop
mov
mov
cld
gs
inc
inc
outs
out
mov
mov
and
inc
xchg
int3
add
and
mov
jecxz
cmp
pop
fimul
or
dec
movs
adc
mov
mov
mov
ret
pop
pop
inc
adc
and
and
aad
lock
test
mov
inc
loop
jo
xor
out
mov
mov
out
mov
pop
jno
mov
(bad)
hlt
idiv
jl
stos
jle
scas
test
ins
movs
cwde
nop
sbb
adc
mov
rol
(bad)
lods
retf
sar
or
sbb
aam
(bad)
mov
push
sbb
(bad)
push
lahf
aam
rol
popa
inc
mov
popf
pop
push
inc
lahf
dec
popf
dec
cvtdq2ps
data16
cli
mov
sahf
push
icebp
pop
cmpps
mov
ja
mov
mov
test
sahf
lock
sub
sub
and
stos
daa
iret
sub
cli
dec
in
aas
out
sub
mov
inc
add
or
scas
push
or
data16
pop
mov
sub
dec
xor
rcl
sti
lock
(bad)
std
fist
adc
and
dec
mov
mov
sahf
xlat
jns
aad
and
iret
div
push
shl
cmps
xchg
dec
nop
jnp
fmulp
ret
inc
ss
pop
xchg
xor
das
ficomp
mov
std
inc
shl
lock
inc
adc
stos
xchg
jno
test
inc
aaa
xchg
ins
lods
ss
loopne
mov
inc
fisubr
push
add
enter
loopne
mov
sub
jns
cmc
rcl
jnp
or
test
(bad)
push
mov
mov
lea
imul
out
and
xchg
pop
xor
cmp
push
or
mov
mov
gs
or
stos
lods
push
call
add
loop
sub
fs
imul
outs
les
fisttp
out
cmp
pop
dec
mov
fsub
xor
neg
xchg
and
shl
or
mov
sbb
mov
jge
or
lock
pusha
xor
sub
pop
idiv
dec
sbb
xor
es
test
into
(bad)
and
mov
jp
out
mov
jp
and
add
jge
jno
cmp
lods
arpl
dec
pminsw
mov
cmps
add
pop
mov
dec
push
pop
test
and
gs
jns
mov
clc
xchg
popa
dec
dec
int
sbb
sbb
and
sub
cmp
lods
jl
fnstcw
rep
push
push
jl
jb
adc
cwde
shr
in
imul
xchg
and
mov
int
jne
adc
aas
mov
adc
mov
push
inc
push
sahf
aaa
xlat
int3
pop
and
into
sbb
or
jns
int
pop
pushf
jmp
mov
in
dec
add
push
sti
jb
inc
sbb
mov
sbb
mov
sbb
mov
retf
sbb
and
jns
cmp
adc
jmp
inc
pushf
mov
inc
adc
shl
les
scas
pop
and
leave
adc
ror
mov
cmp
mov
add
dec
push
xchg
pop
pop
cdq
test
mov
arpl
popf
push
push
cmps
mov
jmp
sub
jb
cmp
jle
movs
cmp
fsub
jle
ja
nop
mov
cdq
cld
repz
mov
fs
icebp
shl
jb
sbb
adc
push
lods
pop
out
xlat
push
inc
dec
adc
mov
ficomp
mov
lods
and
fmul
add
jno
xor
cmc
fwait
pop
jl
push
push
call
cli
dec
popa
js
cli
xchg
jl
xchg
cmp
push
into
loop
mov
cmps
adc
aaa
imul
mov
push
sbb
mul
les
adc
push
push
sub
sbb
inc
pop
test
jp
add
hlt
cmp
setae
mov
xchg
stos
push
ret
inc
pop
je
(bad)
jno
mov
pop
nop
imul
hlt
mov
into
mov
iret
and
aaa
add
add
xchg
sahf
imul
mov
jge
mov
inc
mov
add
mov
push
inc
ret
xchg
or
sub
ret
aas
aaa
mov
repz
gs
push
inc
out
dec
scas
in
(bad)
(bad)
xchg
cmp
in
pop
cwde
adc
push
pop
sub
pop
test
pop
stc
mov
out
cld
and
mov
cmp
(bad)
out
shr
jp
into
cwde
cmp
iret
stos
lds
ror
mov
add
mov
out
cmp
jge
not
sub
add
pop
movs
int
aad
mov
add
fdivrp
add
sbb
scas
mov
ret
mov
add
xor
std
push
arpl
imul
or
outs
or
fbstp
cmps
ror
ins
push
nop
not
out
jecxz
cmps
fld
sbb
fidivr
push
sub
mov
dec
dec
fwait
ds
fistp
mov
lods
or
iret
add
jbe
icebp
lock
jb
push
mov
inc
pop
lea
pop
sub
(bad)
call
mov
push
adc
movs
xchg
std
sti
dec
stos
ret
pop
dec
xchg
(bad)
mov
jl
xchg
dec
mov
jecxz
dec
lock
dec
jns
adc
jo
out
and
js
jns
sub
pop
or
cwde
push
retf
movs
pushf
fcomp
pop
cld
int3
inc
cmp
mov
addr16
mov
aas
pushf
sbb
dec
sbb
hlt
into
cld
jb
mov
shl
in
lds
sbb
mov
fs
bound
stc
shl
inc
cmps
add
ret
ds
adc
jb
jne
aam
pop
or
ds
dec
fs
xor
(bad)
(bad)
mov
pop
cmps
adc
pop
pop
fdivp
lods
jnp
in
jge
call
push
adc
jbe
ins
adc
pop
mov
jb
stos
push
enter
ss
push
not
popf
xchg
push
mov
mov
xor
cmps
shl
and
sub
jnp
stc
adc
cmp
data16
call
sub
mov
popf
xchg
loopne
jns
rcl
out
dec
sub
sub
movs
cwde
inc
dec
mov
push
sub
mov
aas
into
or
pop
mov
fnsave
test
jge
pop
cmc
adc
add
rol
jp
cmp
sub
mov
call
lods
sbb
aam
jnp
cmp
ins
(bad)
sub
ror
js
jmp
outs
iret
mov
mov
ror
daa
mov
sbb
push
pop
mov
pop
cmp
enter
jne
movs
sbb
stos
add
and
mov
mov
pushf
shl
fcmovbe
pop
popf
les
or
mov
sbb
fstp
mov
mov
adc
gs
push
adc
cmp
retf
ret
jle
pop
fnstsw
cwde
stc
add
aaa
or
jmp
jle
adc
mov
jnp
sub
(bad)
jnp
pushf
xor
fucomi
sahf
sub
cs
push
inc
adc
fdiv
inc
ret
and
mov
loopne
push
pop
ss
push
addr16
sti
test
push
push
add
ins
sbb
(bad)
int
retf
jae
push
imul
test
pop
jb
pop
cmps
push
or
dec
out
cmp
and
int3
inc
(bad)
push
xlat
fmul
ror
fs
cmps
sbb
dec
jl
add
mov
es
fistp
mov
fimul
jmp
xchg
dec
cmps
lds
and
or
xchg
call
pop
jae
(bad)
cmp
sti
cmp
data16
inc
jp
je
push
inc
sbb
mov
jb
retf
cmc
scas
mov
test
add
loopne
mov
pop
mov
xor
or
outs
adc
sbb
in
call
and
jne
int3
sub
cmp
neg
jge
xchg
adc
jnp
addr16
test
sbb
mov
stos
and
fnstsw
add
jae
xor
ins
dec
mov
jle
iret
enter
neg
sub
xlat
xor
mov
jg
lea
or
bswap
je
out
aam
pop
cmps
jle
or
int
data16
ret
sbb
out
fisttp
mov
jmp
inc
jle
push
out
xchg
sub
addps
fwait
xchg
ds
or
push
xchg
inc
push
mov
mov
leave
adc
(bad)
pop
cdq
test
mov
push
pop
fist
inc
stos
rcr
and
imul
cdq
stos
or
pop
(bad)
push
data16
mov
ret
std
and
adc
cmp
sub
repz
cmc
cmp
and
sbb
jno
int3
sbb
cli
inc
test
sbb
cmps
in
mov
test
ins
stos
mov
dec
add
mov
iret
loop
leave
fidivr
mov
enter
movs
in
pop
mov
imul
(bad)
(bad)
sbb
jb
loope
add
imul
cmps
(bad)
clc
fwait
add
jae
arpl
fdiv
jecxz
enter
and
imul
fdivr
ss
mov
test
and
mov
sub
jns
test
std
pop
xchg
jecxz
push
jmp
xor
mov
mov
stc
xchg
loopne
inc
add
dec
xchg
and
cmp
mov
cmps
sub
mov
or
cmp
adc
jno
fmulp
add
popa
mov
(bad)
mov
cdq
jo
fwait
xchg
call
pop
push
enter
add
les
int
mov
mov
sub
ret
and
sti
ds
fwait
mov
cs
fsubrp
xchg
or
movs
and
mov
jecxz
mov
push
xchg
jno
sbb
mov
sub
jbe
jns
ficomp
push
jg
sar
push
stos
jp
cmp
popa
leave
inc
dec
out
aam
xor
or
popf
xlat
cdq
sbb
cmps
scas
push
retf
mov
aam
ret
mov
stos
clc
push
and
int3
out
popa
mov
shr
lahf
fsub
mov
mov
and
pop
das
scas
jmp
pop
or
push
pop
push
sar
enter
inc
fidiv
xlat
cld
dec
call
test
add
out
ror
cwde
inc
fsubr
fsubr
data16
push
push
leave
shr
test
mov
jp
adc
scas
sbb
cmps
in
add
rol
sbb
cmp
xor
lods
push
aas
cmp
ss
shr
mov
ror
fadd
sbb
sbb
mov
mov
push
stc
les
cmp
mov
pushf
push
sub
das
jl
xchg
adc
pop
mov
dec
inc
outs
(bad)
jnp
xor
mov
mov
shr
pop
and
call
or
sbb
aaa
es
jge
xor
jle
pop
into
sbb
jae
stos
out
lods
fsubr
push
fsubr
call
hlt
es
lock
stc
(bad)
inc
pop
gs
jb
push
cmp
or
inc
int
push
adc
sub
jbe
repz
pop
ins
inc
sbb
bound
or
jae
fidiv
and
push
jmp
imul
xchg
enter
shl
and
lea
pop
cmp
sbb
ret
add
inc
mov
popf
sub
mov
(bad)
xlat
and
popa
bswap
out
xchg
test
add
enter
sbb
out
adc
or
jae
or
outs
pop
inc
xor
adc
fistp
(bad)
jecxz
push
mov
(bad)
push
jae
pop
add
mov
inc
push
cmp
jl
cmp
xor
das
pusha
mov
pop
mov
(bad)
mov
jg
ret
mov
xor
inc
and
icebp
pop
jo
jae
loope
out
pop
mov
xor
push
call
cs
jecxz
jg
adc
xchg
mov
sbb
jmp
in
outs
jmp
stc
pop
ins
jae
aaa
xchg
aas
xor
sub
lock
sub
ins
inc
add
mov
iret
push
xchg
nop
outs
popf
fdivr
mov
clc
and
cmp
inc
repz
loope
xor
das
(bad)
xchg
jno
int3
cmp
repnz
pop
pop
xchg
dec
jle
(bad)
xchg
dec
pop
inc
pop
cmp
fist
pop
pop
xor
cmp
cmc
add
arpl
push
cmp
ret
mov
cli
pop
jae
and
pop
rol
enter
dec
imul
dec
mov
cld
cli
dec
ss
fistp
pop
cmps
adc
xor
loopne
outs
xchg
shl
pop
xchg
stos
xor
in
jmp
push
adc
(bad)
mov
iret
cs
ins
stos
jmp
mov
or
lock
sub
dec
bound
mov
cmp
sbb
jo
data16
out
iret
add
arpl
je
pop
jno
mov
adc
adc
xor
xor
xchg
ret
cmp
push
lea
push
dec
cmps
lods
add
pop
fs
daa
(bad)
sbb
add
dec
mov
jmp
dec
and
inc
in
popf
mov
fadd
mov
fnstcw
or
outs
cmovle
cmp
cwde
jbe
arpl
call
stos
dec
jecxz
adc
pop
paddsb
hlt
out
dec
mov
mov
dec
pop
imul
iret
(bad)
mov
rol
test
push
das
cmp
pop
mov
cmp
(bad)
out
(bad)
es
test
jmp
add
mov
cmp
and
dec
lds
cmp
xchg
inc
inc
shl
outs
stos
sbb
int3
je
into
(bad)
shl
xor
or
mov
mov
add
push
sub
adc
xor
add
outs
(bad)
cld
loop
scas
je
adc
push
repnz
or
aad
mov
xor
popf
sbb
rcr
sti
jge
dec
ja
push
or
adc
mov
aam
pop
test
push
pusha
iret
mov
dec
xor
aaa
out
cmp
aam
lods
fs
pop
aaa
cmp
leave
xchg
ss
push
cmp
or
mov
mov
loop
scas
inc
clc
mov
mov
jmp
adc
adc
jmp
cmp
aaa
fldenv
and
pusha
or
mov
and
into
movs
sbb
retf
fist
(bad)
jo
sahf
(bad)
ja
and
or
mov
popf
mov
pop
jg
sbb
jo
cmps
inc
jo
data16
call
outs
cmps
idiv
add
hlt
bound
in
cmp
popf
push
in
xchg
push
repz
test
mov
ss
fist
mov
inc
cmp
sbb
retf
jns
inc
mov
jnp
repnz
and
xor
pop
lea
and
mov
test
addr16
dec
and
or
mov
xor
xchg
sbb
stos
ret
inc
jmp
push
push
fcomp
adc
add
and
xchg
and
int3
jl
cmp
push
jge
xor
adc
push
mov
ss
outs
add
mov
xchg
enter
ds
ins
push
push
shr
ud0
sti
and
retf
sbb
fild
xor
int3
out
stc
and
data16
lds
xchg
pop
fisttp
dec
cmps
fisubr
outs
icebp
and
aaa
aad
jns
in
stos
or
std
int3
pop
icebp
neg
(bad)
mov
push
rcr
test
mov
(bad)
fild
mov
and
mov
loope
xor
dec
pusha
cmp
(bad)
call
lahf
push
pop
mov
xor
std
sub
aaa
and
aam
lea
outs
push
ds
or
(bad)
jmp
jbe
call
stc
pop
and
xchg
xchg
in
push
fcomip
jmp
dec
inc
mov
mov
mov
mov
fdiv
push
xchg
xor
inc
sbb
scas
pop
inc
inc
mov
arpl
sub
or
icebp
cmc
or
jns
sti
lahf
dec
sub
ja
sti
pop
mov
repnz
push
ffreep
ret
retf
mov
outs
mov
cwde
push
push
out
xor
jae
and
iret
in
xlat
mov
or
mov
aad
push
je
inc
sbb
mov
push
inc
mov
and
call
out
push
mov
cmps
fstp
(bad)
jne
ror
jle
call
call
(bad)
push
cmp
js
and
cmp
adc
icebp
mov
repz
and
rcl
dec
cmp
pop
xchg
addr16
dec
xor
js
sub
and
adc
ret
bnd
and
fwait
and
bnd
jge
add
sub
jne
in
mov
je
pop
int3
call
jae
add
lds
cmps
adc
repnz
add
cmp
xchg
mov
and
lods
inc
cmps
out
dec
out
mov
jno
pusha
out
push
or
push
add
xor
imul
pop
aaa
sub
nop
pop
or
mov
jle
cmp
mov
stc
xor
or
iret
mov
jbe
dec
jp
outs
sub
rcr
fldenv
imul
ja
jl
movs
push
sbb
jl
lock
push
jle
add
or
test
inc
add
adc
mov
jle
outs
dec
jmp
cs
fld
and
iret
sub
adc
mov
jmp
or
push
xchg
test
out
ds
clc
cmp
retf
ret
int3
retf
imul
sar
xchg
icebp
out
add
xchg
aad
dec
xor
push
push
xchg
inc
add
fld
es
in
(bad)
xchg
sar
icebp
add
daa
pop
stos
add
(bad)
dec
dec
mov
lods
fild
mov
cmp
lds
stos
imul
fisttp
call
inc
push
das
sub
aam
loopne
test
ret
and
fwait
sub
das
xchg
xchg
inc
mov
jae
push
imul
jg
push
daa
jns
dec
push
mov
inc
inc
clc
(bad)
retf
jge
push
mov
or
gs
mov
and
pop
mov
dec
sbb
cmp
mov
sbb
and
or
xchg
daa
and
cmp
fs
push
daa
aad
cs
mov
loopne
pop
or
xchg
je
(bad)
cmp
imul
outs
sbb
or
sbb
mov
push
pop
rol
gs
sub
mov
xor
xchg
jmp
nop
push
mov
add
cmp
fs
add
sar
aas
lds
lods
mov
xchg
retf
nop
xlat
stos
repz
rcl
cdq
cmc
mov
out
fs
pshufw
xchg
shl
pop
rcl
cdq
fs
jnp
xchg
sub
outs
mov
(bad)
fiadd
inc
pop
mov
movs
mov
mov
inc
or
int
and
out
test
dec
cmps
out
js
push
xor
pop
sub
pop
mov
jge
xor
mov
jns
lea
(bad)
(bad)
ins
jecxz
out
mov
in
dec
test
cmp
ss
in
sbb
and
not
cmp
ret
addr16
das
add
cmps
mov
out
fisttp
fcomp
popw
aad
sub
jne
fistp
xchg
xor
int3
in
frstor
xor
cwde
sbb
test
call
push
sbb
int
pop
scas
or
outs
movs
int3
cmps
push
xor
inc
xlat
xchg
fldenv
push
jp
addr16
scas
jbe
inc
pop
retf
jge
pop
int
mov
mov
inc
pop
mov
pushf
inc
xchg
inc
sbb
and
ss
mov
jmp
scas
aaa
das
mov
vmovlps
cmp
arpl
push
(bad)
cld
pop
(bad)
scas
daa
cmp
mov
dec
push
or
push
push
push
and
adc
cmp
pop
mov
int
(bad)
addr16
mov
sbb
xor
(bad)
arpl
neg
(bad)
ror
sub
push
ret
mov
push
movs
imul
dec
cmps
push
xor
fcom
adc
mov
mov
push
jne
ins
sbb
enter
shl
scas
test
fiadd
repz
(bad)
adc
pop
popa
movs
sub
mov
pop
jge
xchg
cdq
bound
cli
sub
mov
lods
jp
out
and
add
test
mov
and
inc
hlt
dec
jecxz
lahf
das
enter
cmp
sub
pusha
test
lahf
jg
(bad)
and
into
sub
repz
les
mov
lds
outs
stos
mov
sub
out
pcmpeqw
out
or
push
test
(bad)
xchg
fimul
or
shl
jno
stos
cs
pop
fnstcw
push
test
pop
xchg
sub
pop
push
pop
xor
pop
sub
adc
adc
shl
bound
pushf
jle
cmc
fimul
inc
or
lahf
shl
xor
outs
mov
test
mov
xor
fxam
cli
aas
cmp
enter
loop
ds
cwde
jo
xor
jb
ret
adc
dec
mov
adc
lock
jle
jmp
pop
ins
dec
shl
sti
aam
mov
je
jle
fsub
dec
fist
aam
outs
bnd
mov
push
mov
adc
shl
movs
add
jmp
imul
pop
xchg
push
jp
jnp
stc
jl
fstp
push
ins
pusha
sub
aaa
stos
popa
and
jmp
in
pop
movs
cld
cwde
jp
cmps
out
sub
adc
iret
jbe
cmp
sub
jno
sbb
(bad)
push
mov
ret
inc
loop
push
xchg
into
cmp
mov
and
cld
je
add
jae
stos
jno
std
mov
cmps
inc
sub
popf
das
out
fadd
cmps
jnp
nop
addr16
nop
cmps
mov
lods
mov
and
lahf
call
into
mov
in
jg
jle
push
mov
mov
push
js
ffreep
popa
clc
adc
jmp
sub
xchg
jo
das
add
xchg
bound
ds
push
popf
into
pop
jmp
popf
pop
jbe
jnp
movs
cmps
ins
or
loope
mov
fwait
sbb
xchg
pop
fwait
rcl
imul
cld
mov
movs
ins
pop
xchg
mov
shl
lock
mov
inc
lahf
xlat
cmp
lahf
sbb
lds
cs
push
scas
les
xchg
imul
or
scas
mov
cmp
and
mov
rol
push
aas
mov
int3
int
xor
push
inc
out
movs
call
arpl
test
fcmovb
sbb
or
popa
xchg
mov
push
mov
sub
dec
xchg
dec
add
inc
dec
cwde
ins
pop
(bad)
fucomip
fldcw
inc
stos
mov
imul
adc
cs
(bad)
mov
xchg
push
mul
test
daa
(bad)
dec
jo
shl
jle
cli
mov
mov
sbb
push
int
mov
loope
and
inc
jb
outs
shl
arpl
aam
jl
jb
nop
addr16
sbb
test
fwait
call
mov
out
(bad)
sbb
idiv
je
daa
or
adc
or
(bad)
popf
stos
mov
fdivr
dec
in
ss
scas
aam
xor
and
add
cmps
and
mov
push
call
les
add
cmp
push
movs
dec
sbb
pop
cli
xchg
mov
push
xor
xor
loopne
and
mov
jge
jb
cmp
shl
jbe
pop
and
stos
cmps
enter
sbb
pop
pop
mov
and
jg
bound
xchg
rcr
mov
jmp
jmp
and
mov
sub
dec
enter
or
sub
mov
in
inc
ret
sbb
push
add
sar
xchg
and
nop
inc
inc
jae
nop
stos
idiv
dec
movs
jbe
out
ins
dec
jmp
iret
xchg
gs
xor
scas
fdiv
mov
jb
adc
mov
cdq
fist
in
xlat
scas
mov
movs
mov
jmp
adc
cwde
pcmpeqb
mov
sbb
cld
jge
std
jge
in
fnsave
aam
jmp
jmp
mov
repnz
push
ja
out
xor
into
sbb
cmp
outs
push
xchg
adc
dec
scas
add
jge
cmps
movs
icebp
xchg
ds
jp
mov
mov
xor
scas
jns
jns
fdivr
cdq
sti
mov
jno
mov
fstp
mov
adc
arpl
sbb
pop
cs
bound
repz
sub
xchg
call
xor
cmp
enter
and
test
sub
sti
sar
stos
sub
pop
and
jbe
repnz
sbb
jge
ret
out
ret
std
mov
pop
or
sub
jg
iret
repz
push
push
add
pop
std
xchg
pop
dec
sub
idiv
mov
or
cmp
repz
ret
loopne
lahf
pushf
je
adc
std
mov
inc
cmps
xor
or
jb
repnz
int
ja
cmp
(bad)
mov
(bad)
pusha
xchg
xchg
sub
lods
mov
fidivr
dec
(bad)
jle
push
aaa
arpl
add
js
mov
int
sbb
mov
popf
mov
add
jnp
loop
jmp
pop
mov
add
sbb
(bad)
pushf
or
fild
mov
push
repz
pop
inc
shl
mov
or
adc
mov
mov
pop
loopne
mov
dec
aaa
inc
cmp
repz
jmp
leave
adc
stos
test
dec
dec
mov
mov
iret
jbe
ins
inc
div
imul
(bad)
out
push
call
cmps
inc
inc
in
cwde
cmp
dec
fst
sub
mov
(bad)
mov
push
test
fdivr
fsub
push
dec
lea
test
cmp
adc
inc
xor
or
push
pop
adc
xor
push
pop
call
pop
cmp
and
in
xor
pop
dec
sar
mov
fs
mov
fs
push
jmp
imul
dec
aas
adc
sub
xchg
fsub
pop
test
add
test
push
retf
sbb
aad
mov
out
fcomp
ds
push
cld
adc
ret
daa
cmp
outs
cmp
ds
push
mov
inc
adc
ins
mov
and
sbb
or
xor
test
cld
push
cld
packsswb
lahf
test
lock
sub
and
or
pop
rol
mov
div
inc
and
repz
cli
push
xchg
into
xor
fimul
xor
jmp
(bad)
cs
out
(bad)
std
pop
rol
mov
sub
xchg
sbb
xor
xchg
dec
mov
dec
ins
cmp
sbb
cld
adc
js
mov
lods
out
cmp
in
dec
sar
mov
mov
dec
sub
or
jo
push
js
dec
loope
sub
xor
xchg
nop
test
dec
pop
mov
adc
in
inc
inc
pop
adc
xchg
les
push
lea
sbb
loop
bts
or
mov
mov
js
gs
in
shl
add
jp
mov
push
fisubr
daa
xlat
inc
mov
xor
jmp
lods
enter
inc
xchg
xor
xchg
(bad)
ins
sahf
int3
or
out
iret
lock
lahf
into
out
xchg
sub
mov
lahf
dec
jb
jge
fwait
out
fst
or
lods
mov
in
add
cli
sti
data16
es
pop
cli
pop
je
pop
sti
adc
cmp
cmc
pushf
or
aas
in
sahf
fwait
shr
xor
mov
cmp
push
gs
jbe
xor
es
inc
clc
ret
pop
lods
leave
xchg
pop
out
sbb
push
add
shl
sahf
pop
inc
fwait
pop
sub
neg
dec
xchg
ds
push
(bad)
mov
mov
push
jnp
idiv
inc
mov
adc
jle
cmps
cwde
imul
add
inc
sub
sahf
add
(bad)
mov
mov
(bad)
fxch
xor
jl
xor
jp
test
aas
fisubr
fnsave
ret
or
cmp
(bad)
mov
addr16
outs
mov
les
xchg
xrelease
scas
daa
std
dec
es
pop
je
out
jae
(bad)
jo
test
jmp
pop
mov
pop
dec
imul
clc
and
mov
(bad)
test
sub
jle
test
shl
push
cmc
bound
aad
cdq
xlat
mov
test
cmc
push
loopne
and
mov
jo
xor
mov
nop
or
pop
mov
bound
ffreep
in
push
std
add
add
adc
pop
bound
shl
addr16
es
pop
push
test
jp
pop
sti
fdivr
call
jl
add
outs
and
test
aad
(bad)
jmp
outs
dec
ss
ficom
(bad)
xchg
jl
mov
xchg
adc
call
daa
add
loope
sbb
aam
dec
out
dec
aaa
fstp
mov
int3
(bad)
aaa
mov
sar
arpl
add
lea
push
and
data16
push
js
mov
sub
adc
or
mov
scas
sbb
add
add
jmp
dec
das
add
push
dec
sbb
loopne
adc
out
popf
inc
js
fucompp
(bad)
cmps
hlt
or
jbe
mov
sar
test
xor
test
adc
lea
lea
nop
xchg
scas
adc
mov
add
adc
cmp
adc
test
and
sti
and
fisttp
shr
mov
mov
outs
movs
inc
adc
std
aam
mov
jnp
hlt
mov
lods
push
aad
aam
retf
sub
add
loope
adc
outs
outs
into
fsub
jg
loop
sahf
movs
mov
shl
inc
mov
mov
fdiv
xchg
xor
inc
(bad)
jmp
adc
inc
(bad)
jg
adc
test
addr16
mov
add
sbb
inc
test
adc
pop
ds
mov
das
mov
out
scas
ds
jp
dec
push
mov
inc
lods
mov
and
div
xor
test
cmc
in
dec
ficom
push
mov
or
shl
jle
ss
retf
das
jp
xlat
jb
je
je
and
sbb
cdq
dec
les
xchg
xor
xor
sbb
loop
test
mov
mov
push
xchg
mov
sub
cmp
mov
mov
xchg
loopne
push
sbb
or
nop
out
or
jno
js
iret
adc
or
lods
or
cmp
test
les
inc
jg
loop
sbb
repz
stos
adc
cmp
push
sbb
add
mov
(bad)
sbb
pop
outs
pop
test
push
mov
jge
fcom
(bad)
mov
jmp
fiadd
lds
or
cmp
cmp
ins
sti
push
jge
loop
jg
aam
and
dec
inc
into
test
and
mov
jnp
repnz
mov
pop
xor
out
add
and
xchg
push
xchg
fidivr
cmc
jge
imul
shr
stos
leave
enter
pop
mov
test
jmp
xchg
mov
pop
test
cwde
cs
je
fcmovu
cmp
(bad)
fst
in
into
pop
out
(bad)
ret
mov
mov
push
dec
xor
(bad)
dec
cld
pop
loopne
pop
and
jmp
retf
jp
jp
ja
xchg
lods
jno
or
mov
sar
hlt
mov
jp
mov
mov
xor
and
dec
nop
sub
rol
(bad)
cld
hlt
in
add
rcr
(bad)
adc
call
pop
fbld
fsubrp
(bad)
js
fwait
mov
adc
mov
out
or
sbb
loopne
jmp
jnp
stos
loope
jb
addr16
in
mov
jb
xchg
mov
push
les
retf
jo
shl
out
xor
scas
adc
inc
sbb
cmps
jmp
xchg
dec
inc
dec
mov
dec
sbb
loop
jmp
sbb
adc
scas
xchg
cld
xor
(bad)
ins
jle
or
out
xchg
or
lods
cmp
mov
mov
fs
dec
add
int3
xchg
lea
and
lea
adc
add
cmp
(bad)
mov
mov
inc
fstp
or
sar
mov
adc
or
jmp
cs
or
and
pop
cli
mov
xchg
ja
test
add
lahf
cmp
imul
std
add
js
add
mov
sub
or
pop
mov
ret
xchg
xor
push
sub
add
in
cmps
call
inc
ins
movs
push
add
ins
imul
stos
inc
stos
scas
ret
in
jmp
mov
mov
inc
add
xchg
inc
lea
stos
mov
pop
bound
daa
pop
push
movs
gs
out
pop
retf
adc
out
sub
sbb
pop
lock
ss
popa
jle
ret
call
gs
sbb
jb
mul
pop
pop
aaa
rol
jmp
push
(bad)
retf
rcl
cli
frstorw
aas
fstp
stc
lea
popf
daa
adc
push
in
sti
xchg
popa
stos
mov
or
fistp
fcmovnbe
cwde
repz
push
dec
or
cmp
aam
not
cmps
jmp
cmp
jnp
rol
or
adc
adc
push
rol
scas
xor
ret
jae
es
sar
add
sar
daa
mov
xor
movs
pop
mov
lock
bound
cmp
pop
ret
aaa
pop
cmp
leave
das
lods
mov
or
enter
je
scas
cmps
popa
fild
fadd
std
sub
mov
stos
mov
test
or
stc
adc
adc
push
leave
mov
push
mov
inc
sbb
sub
dec
int
sbb
(bad)
adc
test
cmp
stc
sub
imul
push
fsubr
lods
jle
or
xchg
mov
xchg
out
lea
pop
dec
cmp
shr
je
mov
xchg
mov
xchg
xor
js
lods
ficom
add
ss
push
dec
rep
and
xchg
pushf
cmp
xchg
in
jns
push
push
out
sub
in
adc
and
inc
adc
(bad)
out
fst
mov
in
es
or
shr
cmps
mov
mov
adc
xchg
and
ret
mov
movs
rol
xchg
xor
ins
fstp
jl
aas
push
dec
in
jbe
inc
xlat
jmp
sub
in
shl
test
jo
ds
fsub
pop
loopne
es
sbb
xchg
inc
outs
jb
ret
jmp
fbld
sub
test
sahf
div
pusha
aad
dec
call
pop
xor
adc
sbb
pop
test
shl
pushf
dec
popf
mov
(bad)
retf
cld
xchg
outs
outs
das
sar
adc
jge
nop
ret
ins
xchg
fcom
xor
xchg
push
ret
mov
mov
mov
jo
adc
push
repnz
inc
aad
aam
fwait
and
or
into
push
cmp
xchg
add
dec
sbb
sub
ss
std
push
test
movs
int3
test
pop
test
push
dec
push
cmp
push
adc
dec
sub
lock
adc
in
call
push
shr
stc
or
or
dec
sbb
inc
jae
stc
stos
xor
fiadd
es
xchg
pop
test
movs
mov
adc
fsub
push
inc
push
ret
and
xchg
jns
retf
cmps
lods
mov
cmp
enter
lods
stc
(bad)
fimul
xor
loop
outs
inc
sahf
fidiv
pop
lods
xchg
or
test
cmp
test
mov
enter
sbb
shr
popf
xchg
ins
mov
jbe
push
loop
xor
xchg
and
rcl
aaa
sub
out
jl
mov
fld
push
mov
or
ins
(bad)
add
cli
add
jg
pop
dec
repnz
sar
add
imul
mov
lea
xchg
std
sub
out
(bad)
movs
pop
daa
fidivr
mov
dec
cmc
pop
xchg
mov
or
fmulp
test
addr16
mov
nop
sub
adc
mov
ror
add
jg
bound
out
ds
int3
mov
jae
das
dec
(bad)
adc
sahf
das
shl
pop
pop
jne
jae
or
jecxz
cs
(bad)
mov
sub
cmp
mov
mov
out
pop
pusha
mov
(bad)
jmp
loop
shl
sub
inc
outs
mov
inc
movs
cmp
mov
daa
pop
mov
pop
ror
jg
test
pop
inc
mov
mov
and
cdq
cmp
cmc
adc
cmc
mov
jbe
mov
in
cmp
fldenv
pop
sti
push
jbe
mov
jg
test
cli
or
loope
or
sbb
fdiv
dec
push
aaa
or
repnz
je
mov
sahf
cmp
dec
pop
mov
gs
xor
movs
int
xor
sub
test
(bad)
dec
je
xor
f2xm1
mov
mov
(bad)
push
fs
xlat
mov
or
sub
sbb
arpl
xchg
mov
in
movs
mov
lods
sar
inc
test
cmp
lahf
mov
pop
repnz
ss
cmps
(bad)
sbb
cmp
xor
or
fwait
sub
mov
lods
xchg
or
dec
cmc
lods
pop
sub
cli
sbb
(bad)
leave
lods
push
stos
adc
cmp
dec
pop
aad
adc
and
fdivr
mov
js
pop
push
jae
push
enter
in
sub
jo
inc
sub
pop
or
jns
test
imul
fcmovnb
jecxz
sbb
jo
fcmovb
adc
scas
lds
and
cwde
loope
loopne
(bad)
fcmovne
inc
add
ss
sbb
push
add
push
and
pusha
ss
fsub
cmp
add
mov
mov
push
jo
and
cdq
xchg
es
mov
cmp
mov
ret
repz
call
cmp
rcl
das
popf
(bad)
mov
ja
xor
fst
cmp
add
out
or
inc
dec
ja
jmp
sbb
std
xchg
xor
je
xchg
scas
test
cmp
jmp
xor
clc
inc
mov
cmp
out
scas
aas
mov
pop
xor
aam
pop
mov
xor
ret
adc
fsub
test
push
xor
push
or
mov
mov
js
xlat
push
pop
pusha
clc
inc
push
es
sbb
mov
sti
dec
xlat
sbb
mov
jb
das
mov
or
(bad)
sbb
daa
aaa
imul
nop
mov
dec
(bad)
xlat
fdivr
daa
adc
cmc
push
out
add
pop
fidiv
dec
xor
mov
cmp
xor
xchg
dec
popf
lds
and
fdivr
mov
or
and
sbb
ss
push
or
jg
mov
fild
pop
add
sti
scas
push
fwait
ins
test
jl
or
or
cdq
sub
out
hlt
pxor
rcr
mov
mov
mov
addr16
sub
nop
enter
out
ret
jle
clc
mov
pop
popa
xchg
mov
aaa
(bad)
sbb
or
call
int
neg
nop
mov
xchg
mov
mov
repz
aaa
cmp
pop
test
xor
sbb
js
(bad)
xchg
mov
data16
xchg
pop
out
add
in
pop
imul
jg
jb
sub
adc
aam
sbb
dec
and
mov
ret
and
(bad)
mov
pop
ins
jmp
addr16
fdiv
push
(bad)
pop
inc
jecxz
loop
or
arpl
mov
sub
push
in
adc
add
test
rol
icebp
int
test
mov
popf
dec
aas
push
add
mov
test
add
lods
in
leave
daa
add
test
sub
and
xchg
and
cmp
mov
jmp
movs
pop
adc
pusha
mov
mov
cs
call
pop
movs
ffreep
mov
div
or
inc
mov
inc
ja
ins
sbb
mov
cmp
clc
adc
inc
arpl
push
fucomip
fist
out
add
lods
mov
ret
or
ins
inc
sub
pop
rcr
icebp
(bad)
mov
sub
in
jae
pop
out
enter
adc
xor
mov
xchg
jns
adc
add
fsubr
loop
jecxz
into
in
call
cs
mov
lock
cmps
jbe
cmp
sbb
sti
rol
push
retf
push
hlt
add
xchg
pushf
mov
fst
outs
xlat
push
xchg
pop
push
out
xchg
repz
mov
pop
jg
out
leave
je
es
sti
dec
sub
mov
pop
int3
out
loope
retf
loop
push
movs
and
(bad)
cld
xor
jno
outs
enter
push
ret
or
retf
inc
push
outs
out
int3
xor
inc
sti
leave
pop
nop
jmp
xor
ja
mov
sub
dec
mov
jecxz
mov
jns
sbb
loop
cdq
popf
data16
es
dec
mov
aas
adc
mov
mov
or
sbb
imul
dec
and
sar
adc
mov
adc
mov
xchg
pop
pushf
jmp
push
stos
xchg
or
or
add
lods
or
add
sub
or
mov
imul
ins
xchg
test
leave
call
rol
leave
sti
inc
in
bound
adc
sahf
movs
je
fistp
jg
adc
test
pop
jge
shl
mov
jmp
and
push
or
cmp
or
sub
mov
sub
int
dec
inc
and
mov
shl
xchg
std
ficomp
sbb
in
cld
dec
jle
adc
mov
out
jmp
int3
shl
mov
xchg
xchg
cmp
sbb
cmc
outs
dec
push
pop
push
jmp
in
into
enter
sbb
jbe
fwait
inc
pop
mov
ret
push
mov
pop
jmp
add
pop
pop
push
mov
(bad)
in
mov
mov
sub
aad
cmps
dec
dec
mov
sub
jae
xor
pop
cwde
(bad)
loope
(bad)
mov
rol
pop
imul
xor
sbb
mov
jnp
aad
push
sub
aaa
pusha
inc
into
jae
(bad)
cmc
shr
pop
(bad)
outs
push
aas
push
ja
sbb
imul
ficomp
bound
cmp
mov
xor
mov
jo
sub
xor
mov
push
xchg
and
ins
dec
fidiv
or
jmp
jmp
daa
mov
sub
or
mov
ins
or
jl
fcom
jbe
push
jmp
sahf
loop
dec
xchg
pop
rol
mov
xor
in
(bad)
movs
loope
scas
in
je
sbb
ja
out
adc
adc
push
jle
pop
std
movs
xchg
test
fsubrp
fdivp
dec
retf
ret
in
pop
into
cmps
dec
mov
push
sbb
or
das
mov
retf
dec
pusha
sub
mov
mov
push
imul
call
aaa
cli
icebp
mov
in
sub
xchg
loop
xchg
and
add
fisubr
mov
iret
cmp
test
or
mov
pop
and
push
xchg
rcl
sbb
jle
push
(bad)
out
sub
push
inc
iret
retf
fst
inc
and
jns
bound
push
aaa
jge
add
jbe
mov
adc
hlt
clc
or
dec
ja
sub
sub
sbb
fdiv
cmp
mov
jmp
(bad)
aam
ret
dec
inc
popa
pop
pushf
cmc
in
popf
ins
pop
xchg
inc
inc
les
cmps
leave
cmps
faddp
mov
xchg
imul
ret
inc
repz
or
and
cmp
movs
sub
jae
aaa
add
fadd
aad
add
dec
shr
clc
dec
add
or
jne
inc
mov
cmp
cmp
mov
mov
jns
call
(bad)
(bad)
call
xchg
test
clc
inc
or
or
aas
cwde
inc
add
dec
mov
movs
test
dec
or
outs
fcom
(bad)
inc
dec
loope
popa
dec
inc
imul
pop
add
stos
and
mov
sbb
mov
xor
inc
(bad)
aam
inc
xor
push
push
adc
call
(bad)
stos
cdq
push
fs
adc
push
dec
xchg
adc
push
int
adc
pop
push
inc
dec
loope
rcl
jnp
push
(bad)
jmp
mov
add
stos
jae
sub
push
add
jmp
mov
inc
jmp
mov
int3
xor
pop
lock
mov
add
or
(bad)
jno
fistp
mov
out
ror
inc
push
sub
sub
test
je
popf
xor
push
hlt
cmp
mov
aam
mov
ss
add
pop
sub
test
cs
dec
dec
dec
pop
test
cmp
or
mov
in
loop
jecxz
stos
sub
sub
jae
dec
fwait
xor
daa
(bad)
sbb
push
inc
mov
inc
sbb
xchg
rol
nop
aaa
push
aam
pop
mov
rcr
(bad)
push
or
cld
add
mov
fwait
cmp
or
icebp
inc
div
push
(bad)
mov
lods
inc
test
repnz
mov
mov
pop
cmc
sub
sbb
xor
mov
sub
cmp
or
pop
(bad)
(bad)
stos
hlt
sub
ja
(bad)
xchg
adc
iret
dec
retf
lock
sar
movs
arpl
shl
jno
dec
(bad)
jne
fld
push
push
sub
test
push
add
dec
sub
fcomp
sbb
bound
mov
test
(bad)
lds
xchg
adc
test
arpl
sub
inc
scas
or
pop
push
xchg
adc
xor
inc
and
mov
cmps
xsha256
cmps
push
(bad)
cmc
push
sbb
rcr
sbb
add
sahf
(bad)
aam
in
and
ins
std
xor
jo
push
mov
lea
cmp
mov
mov
mov
mov
mov
js
and
stc
out
mov
mov
arpl
mov
sar
inc
pop
xor
pop
clc
inc
(bad)
cmc
mov
sbb
lods
in
lea
mov
jnp
idiv
dec
gs
dec
xchg
jnp
repz
pop
ror
repnz
jecxz
or
sbb
adc
nop
mov
sbb
test
push
cli
jle
jl
dec
cmp
mov
lahf
push
fucomi
xchg
cmp
push
lods
xor
test
ds
push
mov
jmp
cld
xchg
adc
dec
pop
arpl
clc
inc
and
shl
arpl
fwait
jno
enter
shl
fst
loope
add
call
mov
dec
pop
ret
inc
mov
push
aad
sub
mov
inc
cmp
push
mov
xor
dec
cwde
mov
enter
cmp
jge
call
in
adc
jno
dec
adc
leave
mov
jno
clc
pshufw
cmps
or
or
sub
shl
ret
xchg
retf
adc
movs
leave
push
in
cmp
jl
mov
stos
retf
adc
mov
rol
nop
mov
add
nop
mov
icebp
and
fist
hlt
mov
sub
mov
test
inc
xor
bnd
fild
mov
clc
or
add
data16
sub
jno
daa
dec
(bad)
das
ja
or
jo
lock
outs
int3
cmp
js
(bad)
mov
jbe
mov
cwde
inc
mov
popf
fbstp
int
in
dec
mov
inc
and
cmps
jnp
push
cs
outs
psrlq
xchg
stos
xor
cmp
mov
pop
popa
gs
ret
int
and
addr16
lods
bound
lods
adc
add
dec
stos
test
dec
sti
mov
pop
into
fld
(bad)
daa
popa
adc
clc
dec
ror
outs
push
pop
pop
and
repz
dec
adc
ror
pop
sub
lds
mov
jne
cmps
cmp
push
in
gs
int3
push
mov
ret
ror
and
ret
stos
xlat
retf
add
xchg
daa
les
ss
neg
aaa
idiv
dec
mov
xchg
jmp
shr
pop
inc
pop
cdq
xchg
mov
jmp
sti
sbb
pop
cmp
fcmovnbe
loope
and
mov
jmp
lock
in
push
adc
test
and
jmp
xlat
cmp
cmp
nop
aam
xor
cmps
(bad)
push
sub
dec
pop
sar
and
cli
pop
push
addr16
lods
pop
retf
fldenv
add
and
xor
rol
ss
and
adc
dec
push
out
xchg
sahf
gs
xchg
test
daa
mov
hlt
push
mov
adc
inc
sub
cmps
lods
jne
sub
ret
mov
xor
std
inc
cmp
ins
xchg
and
xor
sub
xchg
icebp
scas
mov
add
mov
out
mov
mov
sbb
out
mov
xchg
mov
cmp
mov
nop
les
aam
adc
fisttp
mov
pop
push
sub
sbb
movs
cmp
loopne
adc
pushf
and
scas
stos
and
push
out
sbb
and
cmp
jecxz
dec
loopne
mov
cmps
jnp
mov
mov
sub
stos
inc
jp
add
inc
sbb
ja
cwde
xor
pop
mov
repz
add
sbb
loopne
pop
cmps
lahf
aaa
cmp
out
ret
sbb
push
lock
ss
movs
imul
imul
lods
and
aad
imul
popf
es
add
es
test
mov
cmps
add
pop
dec
xchg
cdq
and
mov
mov
cmc
out
mov
lock
data16
in
sahf
cmp
mov
test
xlat
popf
mov
jl
popf
mov
mov
hlt
sub
ds
sbb
mov
dec
push
sub
xor
add
out
dec
ja
xchg
mov
cwde
cmps
iret
fsubr
add
xlat
leave
and
add
aam
jmp
out
out
cmc
daa
into
jmp
sub
and
or
cli
dec
dec
ins
mov
xor
ret
dec
xchg
bound
clc
xchg
adc
iret
jne
lods
jb
xchg
fist
inc
rcl
test
test
mov
and
cs
imul
push
mov
mov
loopne
movs
cs
into
leave
fcomi
mov
rcl
dec
add
das
rcr
sbb
jl
outs
mov
adc
(bad)
cmp
add
mov
or
repz
ins
lods
sti
mov
jmp
test
retf
hlt
pop
call
adc
lahf
jae
ss
dec
aas
(bad)
xchg
and
mov
push
sub
adc
adc
jp
mov
or
jge
ja
xor
in
pop
xchg
mov
pop
cmp
je
call
pop
jecxz
jne
xor
cmp
mov
adc
jo
dec
add
dec
jae
ins
inc
xor
mov
loop
psadbw
gs
fnsave
jns
mov
add
cwde
push
mov
add
cld
clc
push
int
daa
add
sub
test
fidivr
ret
ficom
cwde
xchg
xchg
arpl
jge
jb
movs
jb
push
adc
into
sub
cmp
jno
and
sub
mov
pop
push
ins
sub
mov
imul
jg
enter
jnp
hlt
or
outs
loope
or
loop
pop
mov
das
mov
aam
sbb
es
push
push
iret
mov
sub
mov
into
sub
push
sbb
adc
ja
xor
dec
lahf
jbe
jl
mov
push
and
adc
mov
inc
dec
xor
dec
data16
jp
xor
gs
sbb
ins
test
call
sbb
sub
into
xchg
jmp
push
push
nop
inc
xor
sbb
mov
push
mov
or
sub
cmp
out
jne
(bad)
mov
and
aas
imul
cmps
cmp
add
xlat
mov
cld
mov
lds
shr
ret
(bad)
inc
lea
mov
pop
ins
gs
out
or
lods
and
test
or
sar
push
getsec
out
mov
xchg
fs
es
xchg
icebp
jnp
loop
aaa
pop
lea
in
outs
ins
add
inc
xor
inc
push
mov
xor
mov
xor
test
cmp
push
(bad)
(bad)
mov
lahf
es
inc
sub
movs
add
inc
call
loopne
ins
mov
jns
dec
aad
push
call
int
pop
cli
xchg
cwde
xor
inc
mov
sub
or
fisttp
stos
and
and
mov
jnp
jecxz
movs
jmp
and
adc
and
aaa
outs
ss
cmp
dec
add
enter
sbb
cmp
movs
frstor
or
jo
xor
dec
inc
ss
jle
mov
pop
aam
js
mov
sub
out
add
mov
push
sbb
shr
or
sbb
push
neg
shl
add
popf
pop
ins
inc
cld
cmps
movs
bound
xchg
scas
daa
mov
xlat
aam
add
in
jg
push
lds
daa
movs
sub
movs
das
sub
mov
cmp
(bad)
shl
rcr
ja
adc
mov
pop
call
std
inc
ret
ds
mov
pop
into
in
mov
xchg
aas
cmc
pop
out
pop
test
(bad)
cmp
push
pop
pop
inc
arpl
stc
(bad)
mov
jmp
mov
repnz
loope
add
test
data16
(bad)
mov
push
add
inc
stos
les
mov
ret
outs
adc
addr16
aaa
cs
xchg
fldcw
dec
or
jb
lods
leave
jae
mov
rol
xchg
add
sub
loope
cmc
jmp
out
movs
rcr
push
fwait
jg
imul
jbe
aaa
clc
mov
push
dec
lods
jl
and
ins
adc
add
into
fmul
cdq
imul
mov
xor
jl
lock
out
cdq
pop
jmp
repz
imul
mov
rol
lock
scas
shl
jmp
jecxz
mov
js
xor
pusha
leave
dec
cs
repz
xor
mov
js
xor
jmp
out
daa
pop
daa
stos
shl
xchg
je
ins
jecxz
dec
cmp
(bad)
(bad)
neg
adc
sub
cwde
ret
fsubr
xchg
add
outs
icebp
and
dec
hlt
mov
(bad)
dec
data16
inc
xor
jle
and
dec
push
and
jb
xor
gs
add
fs
sbb
sbb
mov
push
inc
mov
call
mov
jge
add
and
jecxz
ja
sbb
push
enter
mov
addr16
push
push
mov
lea
repnz
lea
dec
jge
xchg
jns
jbe
inc
and
leave
jae
sbb
xchg
pop
(bad)
cmps
mov
xchg
mov
icebp
push
stos
ss
pushf
test
fstp
jle
push
fdivp
fldlg2
sub
pushf
xlat
cmp
popf
jae
xor
pop
pop
(bad)
imul
sub
dec
jmp
jno
repz
pop
adc
and
and
(bad)
sub
xchg
adc
xor
cli
push
push
add
clc
or
mov
push
scas
and
dec
dec
xchg
xchg
fild
test
(bad)
jmp
test
sahf
xor
xor
sub
data16
jl
jnp
mov
rcr
(bad)
jge
xchg
ds
enter
xor
sbb
inc
mov
out
leave
jp
cmp
xchg
shr
inc
push
xchg
pop
jno
clc
sub
cwde
dec
hlt
repnz
mov
pop
or
nop
xchg
and
sti
inc
xchg
outs
sub
mov
out
imul
add
dec
mov
mov
dec
nop
out
mov
mov
pop
popa
fwait
aaa
mov
mov
dec
popf
pop
ror
scas
push
jmp
mov
cmp
mov
mov
retf
jl
mov
stc
mov
mov
mov
jmp
fdiv
sub
mov
xor
(bad)
(bad)
cmp
xchg
xor
je
sub
ffree
aaa
adc
daa
lds
pop
pop
add
adc
adc
dec
test
push
enter
and
push
das
mov
lock
jne
mov
and
fidiv
mov
std
jae
nop
push
popa
repz
and
mov
loope
sub
mov
pusha
mov
std
or
sub
xor
push
inc
mov
in
repz
adc
jns
push
push
in
dec
adc
cmp
inc
mov
popf
jl
pop
rcl
stc
icebp
or
mov
retf
(bad)
xchg
dec
loopne
int
push
sbb
(bad)
js
addr16
hlt
(bad)
loop
pop
xchg
dec
mov
inc
push
mov
or
xchg
cmp
ds
cmp
or
cs
cmp
in
push
(bad)
into
outs
call
add
icebp
xchg
sar
in
ss
xchg
into
stos
iret
cmp
jae
mov
loope
in
mov
imul
inc
jge
stos
adc
mul
mov
pop
jb
pusha
pop
or
ins
inc
push
outs
jae
imul
inc
aad
outs
ffreep
cmps
in
imul
int3
rol
jp
adc
aas
int3
or
xor
mov
push
(bad)
push
in
iret
shr
sub
sub
xor
movs
ret
xchg
or
sbb
je
sbb
mov
lahf
int
iret
ins
mov
xchg
cmp
or
ror
aas
ret
ret
jne
push
sub
jmp
test
icebp
punpckhwd
cmc
aam
rol
mov
adc
cmovo
push
repz
dec
pop
test
sbb
mov
mov
out
scas
nop
aad
sub
mov
inc
fild
inc
sbb
inc
out
and
loopne
mov
sub
scas
sbb
cdq
sbb
mov
dec
cmp
or
arpl
ins
add
mov
xor
push
in
std
mov
outs
shl
cmp
rsqrtps
mov
dec
retf
outs
pop
mov
das
scas
pop
push
jmp
mov
in
adc
dec
pop
xor
aas
and
sbb
aaa
mov
mov
stc
scas
retf
xchg
inc
lahf
push
xchg
retf
and
xor
das
sbb
dec
or
pusha
out
aas
inc
mov
outs
lods
mov
fcmovnb
pusha
and
cwde
test
in
inc
inc
call
and
push
call
(bad)
scas
das
stos
nop
ins
sub
stos
sub
lock
jle
jg
sbb
mov
jb
in
add
xor
push
push
pop
add
and
xchg
call
mov
out
test
fsub
jmp
aam
cld
cs
cmp
pop
xor
sbb
(bad)
jb
imul
test
repnz
movs
cs
add
mov
(bad)
pop
xchg
scas
sub
imul
out
into
dec
or
dec
pop
adc
pop
or
fwait
sbb
das
aaa
mov
xchg
mov
lods
adc
cmp
adc
jl
jmp
adc
or
pop
pop
stos
adc
xchg
sub
arpl
sbb
sahf
fstp
(bad)
jmp
add
popf
xor
jne
inc
mov
xchg
inc
nop
cmps
cdq
in
xchg
xor
pop
imul
out
cmp
mov
pop
call
gs
mov
sahf
sar
sbb
inc
enter
arpl
push
bound
in
cmp
mov
mov
inc
xlat
mov
aas
mov
or
mov
es
pop
les
cld
arpl
mov
cli
inc
lods
mov
xchg
xchg
lock
adc
push
dec
add
enter
(bad)
jno
mov
sub
test
popa
sbb
lods
leave
lds
sub
mov
int3
sbb
mov
sbb
loope
pop
call
pop
cli
pop
outs
sbb
in
pop
or
cli
loop
add
je
cmp
jbe
mov
neg
ret
xchg
push
mov
ret
xchg
push
mov
or
or
(bad)
retf
or
and
push
data16
push
out
mov
add
xchg
ret
or
xchg
mov
mov
adc
add
jne
push
or
jp
xor
mov
pop
push
dec
adc
push
mov
mov
dec
inc
out
pop
pop
xchg
test
sbb
(bad)
inc
outs
xor
movs
data16
mov
fdivr
jbe
mov
xchg
mov
lds
repnz
push
mov
and
mov
and
enter
jb
xlat
or
fnstsw
push
lahf
aad
or
mov
push
cmc
test
std
xchg
xlat
fsubr
mov
scas
pop
ins
mov
jmp
sahf
into
pop
sbb
push
bound
pop
sar
jne
mov
ds
push
push
loopne
nop
jno
cmp
sub
push
fistp
xor
leave
iret
or
or
mov
dec
pop
adc
mov
scas
xchg
add
mov
test
xor
cmps
push
jno
or
das
mov
mov
call
jmp
or
cmps
movs
mov
mov
pushf
push
mov
pop
(bad)
leave
jo
and
mov
sbb
or
scas
and
jo
cmps
inc
cli
xchg
dec
cdq
xor
loope
inc
in
fdivr
mul
enter
lods
mov
pop
aad
ss
add
test
and
stc
mov
inc
mov
mov
inc
inc
cwde
int3
sub
movs
(bad)
and
cmps
pop
mov
pusha
in
test
je
repnz
add
or
jecxz
mov
mov
push
adc
pop
or
push
idiv
xor
inc
rol
pop
pop
das
dec
sbb
and
or
icebp
fst
pop
push
fsub
rol
or
ins
dec
sbb
push
ins
lods
imul
add
dec
pop
and
push
stos
xor
jne
sub
ins
stos
dec
mov
cdq
sub
xchg
call
pop
pusha
sbb
cwde
jmp
imul
in
in
fs
pushw
xor
aad
jbe
repnz
jle
add
push
imul
push
push
loop
int3
cmc
jle
pop
mov
fld
mov
(bad)
ret
jmp
mov
sub
xchg
lods
cmp
inc
leave
xlat
jg
pop
fs
jne
test
add
mov
test
sar
push
mov
or
aas
loopne
sub
popf
ret
and
rol
out
xchg
pop
and
(bad)
pop
daa
xchg
jmp
jb
and
push
add
add
cmp
pop
mov
dec
inc
dec
and
sbb
cmp
push
sub
cmp
sbb
shl
call
push
in
leave
push
cmp
push
push
sub
push
in
adc
div
add
es
or
mov
add
jo
(bad)
aaa
stos
pop
fld
sbb
and
mov
fcom
or
mov
in
ror
mov
inc
pop
jns
inc
cli
add
dec
lods
or
mov
out
jnp
cmp
cdq
mov
movs
sahf
xlat
sbb
ja
imul
stc
dec
out
aaa
inc
cwde
fadd
and
ins
lods
dec
mov
xchg
or
xchg
mov
and
pop
xor
out
jo
pop
cld
hlt
mov
dec
xor
aas
popf
arpl
pop
cmp
test
setno
pop
fistp
xchg
or
adc
dec
xor
scas
adc
in
mov
outs
dec
daa
lods
cld
int
popf
fisttp
lea
pop
push
out
jle
xchg
mov
pushf
popf
sar
and
cwde
push
mov
pop
pop
(bad)
aam
aas
(bad)
or
ins
aaa
xlat
das
fst
and
cmp
rcr
pusha
jno
out
jle
stos
inc
push
pop
jne
clc
hlt
xchg
dec
repnz
cwde
pushf
rcl
sahf
test
dec
sub
cmp
pop
lock
add
pop
dec
ret
mov
out
cli
xchg
fsubrp
cmp
fisubr
lds
add
jmp
shl
mov
je
int
call
ins
cmps
mov
call
jl
xor
xlat
or
fild
sub
iret
mov
sbb
mov
push
add
stos
dec
add
xchg
in
cmp
stos
je
in
movs
sub
les
mov
lahf
mov
sub
sub
pop
and
xadd
jmp
cmc
mov
jno
jmp
xchg
sar
jo
clc
imul
int3
xor
hlt
cmp
dec
out
pop
outs
nop
test
and
int3
jg
div
in
mov
lds
and
lock
ss
xor
and
mov
add
jne
cmp
cmp
and
in
aam
sbb
mov
adc
cmp
jle
or
ins
dec
aas
cwde
and
push
in
sbb
out
or
ss
fisttp
xor
and
sbb
xchg
into
out
inc
inc
pop
into
call
xchg
dec
or
cmps
(bad)
cs
cli
out
xor
jmp
stos
int
xchg
inc
cmps
sub
mov
les
outs
cmc
dec
xchg
mov
jp
cwde
inc
cs
(bad)
dec
(bad)
out
or
out
sub
popa
call
jnp
push
inc
fadd
leave
enter
out
jne
push
push
inc
dec
shl
scas
xchg
aam
mov
xor
std
sub
gs
data16
call
pop
xor
xor
sbb
into
push
icebp
clc
add
pop
cmp
fidivr
add
push
(bad)
in
xchg
mov
add
mov
pop
push
in
mov
dec
ins
test
into
and
xor
sar
xor
es
mov
ds
add
xor
dec
inc
xchg
lods
les
test
outs
pop
jmp
cmp
imul
loope
pop
inc
xor
data16
stc
xchg
repz
into
xor
shr
idiv
das
cs
add
cwde
lahf
xor
lods
mov
rcl
cmp
call
cld
test
fwait
jbe
sub
xlat
mov
movs
inc
push
outs
mov
mov
mov
jbe
dec
mov
jp
mov
or
xor
pop
in
xchg
sub
jp
mov
ja
jno
add
neg
adc
adc
xor
mov
push
or
pop
ins
lock
cld
shr
cdq
xor
mov
lods
jbe
cs
pop
jg
sub
mov
sbb
mov
mov
in
fistp
inc
leave
loopne
push
push
imul
in
shl
rcl
dec
fcom
xchg
jb
rol
pusha
push
pushf
mov
sbb
inc
cmc
push
leave
pop
fsub
push
mov
sar
cmp
enter
inc
int3
sbb
stc
out
ret
fist
ret
int3
in
call
pop
jle
mov
jbe
sti
data16
inc
mov
xor
add
xor
(bad)
enter
fwait
movs
cwde
push
pop
hlt
jbe
js
xor
add
popf
push
int3
or
jge
cli
repz
inc
xchg
(bad)
in
sbb
bt
or
mov
popa
enter
push
mov
movs
xchg
dec
loop
std
test
mov
shl
jns
push
sti
inc
cmps
std
jb
mov
ins
fld
inc
scas
jbe
(bad)
out
inc
and
push
clc
es
bnd
leave
dec
icebp
jecxz
adc
xchg
adc
add
loop
sub
sahf
sar
mov
(bad)
cwde
sbb
test
cmp
(bad)
cld
adc
repnz
cmp
push
sbb
imul
pusha
jl
hlt
jb
icebp
xor
cmp
daa
imul
out
mov
aaa
and
xchg
pop
in
int3
pop
mov
or
idiv
jns
fdivr
(bad)
mov
xor
test
sbb
sbb
aad
ret
arpl
jnp
mov
push
xchg
cs
retf
dec
cmp
int
cmp
ret
rol
cmp
div
test
sub
out
jmp
sar
push
sub
dec
shl
xchg
dec
cmp
repz
mov
test
xor
xchg
inc
std
js
cs
dec
or
(bad)
or
leave
(bad)
sar
sub
xchg
mov
adc
push
fsub
or
mov
mov
adc
push
in
aas
add
push
mov
outs
int3
jp
cmps
scas
and
movs
(bad)
test
jl
mov
pop
mov
fsubr
cmps
push
in
retf
fadd
shl
mov
xor
scas
dec
jmp
test
add
pop
retf
mov
jae
push
mov
shl
jno
jmp
pop
(bad)
(bad)
mov
xor
push
retf
shr
clc
loopne
dec
(bad)
fdiv
jp
xchg
enter
scas
lods
call
xor
xchg
outs
pop
dec
shl
je
jmp
stos
pop
das
and
mov
in
in
dec
(bad)
(bad)
in
and
pop
sub
mov
fcomp
aam
or
out
out
ret
mov
ins
xor
lahf
in
mov
aam
pusha
pop
test
sub
shr
sbb
sub
xchg
dec
into
aaa
push
dec
adc
xor
(bad)
mov
adc
ret
xor
gs
pop
mov
mov
test
jmp
or
mov
jmp
loop
repnz
inc
jb
xor
(bad)
pop
mov
mov
mov
sbb
arpl
addr16
adc
aad
add
push
arpl
out
cli
mov
fcom
dec
jle
mov
sbb
es
add
wbinvd
cmp
inc
cld
stos
ret
sbb
jmp
imul
adc
test
pop
pop
and
stos
jno
repz
mov
xlat
inc
adc
stos
aaa
pop
div
inc
sub
scas
repnz
shr
dec
retf
(bad)
into
sbb
out
out
cmp
(bad)
stc
mov
cmps
dec
gs
add
ins
or
jle
push
pusha
pop
mov
add
inc
jmp
mov
stc
or
out
sahf
pop
sub
cld
add
pop
(bad)
dec
int
stc
addr16
jecxz
pop
ret
mov
or
and
out
pop
leave
cld
sbb
sbb
aad
aad
je
lock
ds
pop
pusha
cmps
popf
cmp
jbe
add
push
sbb
mov
adc
sub
loopne
das
jae
clc
xor
fimul
in
xlat
imul
icebp
cdq
sub
leave
xor
ja
fiadd
xchg
js
or
dec
jle
inc
lods
test
es
jo
sub
jne
adc
neg
pushf
push
(bad)
cmp
sub
fild
or
sub
(bad)
(bad)
imul
stc
xor
scas
in
dec
fnstsw
mov
sar
mov
xchg
jo
pop
lahf
popf
mov
xchg
fisttp
cmp
dec
sti
mov
out
cmp
push
mov
push
inc
mov
xor
dec
inc
es
iret
fdivr
ja
or
cmps
pop
xlat
pop
dec
xchg
push
int
mov
inc
mov
xor
out
and
in
loopne
sub
test
mov
cmps
movs
lahf
iret
(bad)
imul
or
and
loop
mov
div
mov
call
fs
test
and
add
ds
aaa
cmp
dec
xor
mov
outs
pop
pop
ins
out
adc
shl
sar
es
sti
imul
ins
pop
inc
xchg
ss
arpl
jnp
bound
xchg
cli
nop
jge
and
(bad)
repnz
xchg
add
cmp
cmp
inc
aam
push
adc
mov
mov
into
sub
imul
call
test
dec
add
scas
inc
fisub
xor
pause
mov
add
dec
arpl
(bad)
mov
mov
jns
jb
lods
cmp
push
push
jb
add
call
jne
inc
xchg
fist
leave
inc
inc
pop
lock
fwait
cld
push
xor
inc
popf
xor
sbb
mov
mov
dec
pop
adc
popf
jmp
push
lock
sub
hlt
int3
jg
mov
add
arpl
and
sub
fdiv
fwait
call
sbb
or
mov
gs
aaa
push
sub
imul
cwde
nop
pop
cmps
je
and
add
sbb
cmp
in
xchg
lods
dec
push
sub
icebp
mov
icebp
sbb
mov
mov
pop
es
neg
dec
add
out
cmps
mov
pushf
movs
mov
push
sub
jp
mov
mov
repz
lods
sub
ja
rcl
dec
fadd
rcl
mov
lock
nop
frstor
jecxz
movs
sub
popa
fimul
into
das
and
or
push
sub
mov
xchg
mov
call
push
xor
call
loope
cwde
ss
not
sbb
pusha
les
out
inc
mov
ret
(bad)
fst
adc
sbb
outs
retf
retf
popa
fs
add
pushf
inc
xor
jge
or
or
mov
and
cli
mov
jae
pop
sbb
jno
add
loop
add
(bad)
sbb
and
or
and
pop
iret
addr16
add
cmp
scas
dec
cdq
pusha
mov
xchg
pusha
in
pop
nop
std
and
push
mov
sub
dec
jmp
mov
cmc
sub
cmp
nop
loope
imul
jmp
out
in
dec
aaa
xchg
out
ins
aas
out
out
fld
and
sub
mov
mov
mov
es
pop
add
inc
ins
jl
sahf
xchg
lods
sbb
dec
fsubr
loopne
into
push
shl
test
ins
aaa
sbb
je
repz
mov
push
icebp
xor
inc
test
sub
aaa
add
arpl
jne
pop
pop
xor
ret
fidiv
scas
xchg
dec
cmp
push
cmp
(bad)
loopne
mov
mov
aaa
inc
push
pusha
mov
sbb
data16
repnz
(bad)
xchg
xchg
bound
nop
pop
push
push
inc
and
sub
mov
stos
mov
xchg
sbb
push
stc
outs
nop
loopne
imul
out
lea
test
sbb
iret
adc
adc
mov
rol
pop
ss
cmps
mov
mov
add
mov
pushf
adc
ja
cmp
daa
nop
mov
(bad)
xor
sbb
sti
jo
push
inc
push
std
sub
dec
(bad)
or
mov
addr16
add
lods
sbb
jne
movs
outs
(bad)
leave
daa
push
mov
and
adc
sbb
(bad)
add
fbld
lods
loope
cmp
repnz
pop
enter
loope
cld
xchg
shl
sbb
(bad)
out
stc
pop
add
test
sbb
ja
or
call
dec
sbb
inc
(bad)
add
fbstp
pop
sbb
movs
je
jecxz
imul
mov
in
fsub
fisttp
jge
xor
mov
inc
push
popa
jmp
xchg
outs
(bad)
cmps
mov
sub
pop
bound
ins
leave
push
sbb
fs
clc
jb
cmp
repnz
dec
inc
xor
adc
push
inc
int
xor
lea
mov
pop
mov
loope
sub
jae
dec
jmp
int
fidiv
movs
adc
jo
addr16
xchg
sub
popa
cwde
enter
out
loop
fdivp
mul
arpl
scas
xor
pop
xor
add
add
aam
jae
into
and
and
jl
cs
hlt
add
std
push
add
cld
in
push
mov
movs
add
rcl
dec
into
(bad)
mov
cmp
retf
or
(bad)
jecxz
pop
sahf
mov
or
add
ss
jb
add
mov
cli
hlt
int3
enter
sub
(bad)
jne
mov
dec
movs
cdq
loope
loop
jnp
mov
out
push
jl
xor
aas
es
ret
adc
xchg
aad
pop
sbb
imul
out
jo
mov
rol
(bad)
(bad)
repnz
mov
lock
fdivr
pop
mov
push
outs
add
push
pop
jge
lds
add
ret
mov
mov
mov
jmp
imul
pusha
retf
clc
cmps
test
and
inc
mov
mov
ror
aad
push
jl
fstp
xchg
pushf
and
scas
adc
mov
sub
or
pop
jno
pcmpeqw
fs
push
mov
mov
sahf
and
(bad)
lock
pusha
xchg
cmp
call
jmp
jmp
jne
fcmovnu
test
shr
sbb
ds
xor
les
outs
xor
hlt
test
or
scas
loope
cli
inc
and
fdiv
xchg
mov
sbb
or
push
aad
retf
aam
pop
mov
je
imul
arpl
cmc
sub
jo
push
mov
push
jmp
or
cmp
mov
jnp
outs
mov
cmp
pop
ins
add
pop
mov
in
cmp
adc
mov
test
fdivr
jns
ins
loop
mov
lods
push
nop
nop
xchg
xchg
test
jp
(bad)
add
mov
or
sub
push
js
add
in
mov
outs
fcomp
test
test
inc
fimul
cmp
or
or
fmul
leave
popf
or
ss
mov
loope
and
jg
mov
xchg
add
and
adc
add
jmp
xchg
stc
in
mov
cdq
push
pop
adc
es
jmp
mov
and
ror
gs
mov
aaa
xor
pop
sub
dec
into
test
mov
jg
sbb
call
daa
mov
xchg
ds
add
or
sub
stos
retf
or
mov
sub
lds
or
inc
scas
jo
(bad)
shr
arpl
pop
fdivp
xchg
fld
xor
pop
imul
jmp
jno
and
lea
inc
inc
js
cmps
adc
mov
cmc
push
pop
pop
mov
mov
xor
xchg
sub
push
dec
test
lods
mov
adc
add
push
xor
or
cdq
inc
adc
rcl
mov
lahf
jp
adc
sets
add
xor
push
push
scas
push
fbstp
cmp
mov
pop
mov
mov
sbb
out
scas
dec
rcr
imul
or
sti
fmul
gs
push
sub
jecxz
in
adc
ret
test
cmps
dec
mov
push
lds
jnp
inc
in
rcl
and
jne
lock
dec
xchg
popf
or
(bad)
fiadd
xlat
mov
cmp
mov
shr
scas
rcr
sub
push
rol
mov
push
xlat
clc
mov
inc
out
xchg
add
jle
mov
outs
xor
and
adc
or
xchg
ss
inc
xchg
cwde
jae
xor
ja
and
push
sub
mov
add
sbb
pushf
add
(bad)
stos
ror
stc
fadd
push
inc
test
ficomp
push
test
or
mov
mov
loope
loop
sbb
popf
cmp
cmp
adc
or
mov
inc
in
sub
adc
push
ret
(bad)
imul
mov
js
push
imul
adc
jbe
dec
es
cmp
fisub
jnp
sbb
inc
cmp
imul
add
push
imul
adc
hlt
inc
js
mov
sub
loopne
(bad)
int
inc
xor
cli
cmps
test
jmp
test
mov
inc
in
add
into
fisub
push
xchg
push
mov
mov
movs
sub
out
or
add
(bad)
add
test
adc
inc
inc
lock
add
pop
(bad)
push
lock
outs
mov
mov
xchg
sar
push
sub
jecxz
lock
mov
les
dec
inc
mov
jg
fiadd
cmp
(bad)
sahf
mov
clc
xor
out
sub
xor
mov
ja
dec
push
inc
xor
lea
movs
lahf
sbb
mov
pop
dec
pusha
mov
rol
mov
outs
arpl
mov
loopne
pop
lods
out
stc
jmp
cmps
jb
scas
aaa
cld
xchg
lock
add
loop
pop
push
or
cwde
mov
lds
ds
rcl
dec
push
loope
jb
mov
int3
retf
xchg
pop
out
push
and
adc
in
in
mov
dec
xchg
lods
leave
loopne
inc
mul
pop
inc
mov
xor
repnz
(bad)
jmp
xchg
pusha
mov
jo
mov
cli
ds
xchg
mov
sbb
jns
jnp
adc
cmp
popf
mov
jns
jae
push
xchg
add
and
rol
ret
es
lods
int
inc
sub
sbb
popf
cmc
mov
sub
sti
je
out
psubusb
cmp
popa
push
or
hlt
jne
test
mov
jbe
mov
pop
out
push
(bad)
adc
xchg
and
fiadd
xchg
das
in
je
sub
shl
stos
xchg
pushf
sub
stos
pop
and
loope
nop
mov
sbb
push
arpl
inc
rcr
cwde
xchg
pop
xchg
bound
out
mov
jecxz
sub
cmp
cmp
sbb
fcomi
pop
aaa
ds
sub
mov
enter
out
or
xor
mov
mov
and
cwde
add
xchg
lods
sbb
jp
add
xor
mov
pop
popf
dec
mov
xchg
xchg
dec
shl
or
fdivrp
bound
adc
cmps
loop
sahf
cmps
push
mov
fs
xchg
popa
and
jbe
lock
cmps
xchg
mov
inc
mov
jne
imul
xor
je
inc
cmc
sub
sar
pop
pushw
lahf
add
cmp
lea
mov
dec
sahf
push
into
out
adc
into
push
mov
jb
or
ror
xchg
outs
inc
stos
mov
mov
mov
popf
sub
add
test
js
test
xlat
repz
rol
imul
aas
in
call
jb
fisub
sub
push
sar
sbb
aam
les
mov
ja
push
add
and
daa
or
dec
les
add
sub
mov
mov
fdivr
or
lock
pop
call
xchg
jne
push
lea
pop
(bad)
outs
jmp
pusha
pop
jle
(bad)
jp
inc
sbb
cmps
nop
fnstenv
pop
(bad)
xlat
ja
in
jnp
out
and
mov
jecxz
push
sub
mov
arpl
je
ror
sti
das
leave
cdq
fst
sub
cdq
cmps
add
ret
popa
in
nop
jae
fidivr
and
cmp
mov
dec
arpl
sub
mov
inc
nop
push
sbb
bound
jge
jb
mov
icebp
jle
les
pop
push
je
pop
arpl
enter
fmul
lahf
xor
mov
(bad)
js
mov
pop
mov
push
rol
add
mov
das
in
mov
xchg
repnz
fild
test
inc
xchg
sbb
retf
arpl
mov
mov
push
push
imul
pop
clc
dec
ds
loopne
jp
pushf
test
out
ds
outs
add
mov
xchg
stc
shl
xchg
fmul
shr
push
fxch
outs
mov
cmp
sbb
inc
in
mov
and
xchg
push
jb
sets
leave
or
pop
jg
cmps
ss
(bad)
mov
imul
stos
jecxz
bound
pop
shl
and
or
add
push
inc
xlat
or
stos
out
(bad)
mov
imul
mov
sub
out
jmp
popa
adc
shl
jae
xchg
pushf
and
stc
js
adc
cld
clc
das
(bad)
int
nop
aad
(bad)
in
shr
int3
add
pop
dec
jmp
dec
(bad)
aad
or
sbb
out
(bad)
call
mov
idiv
cmp
push
xor
push
(bad)
call
cwde
push
popa
cs
and
sbb
movs
pop
lds
imul
xchg
jbe
push
retf
mov
rcl
loopne
scas
inc
or
and
adc
lods
cs
icebp
pop
in
jnp
(bad)
cmps
sub
ret
adc
(bad)
xor
repz
mov
ins
call
(bad)
add
push
repnz
(bad)
sub
rcr
jmp
in
movq
mov
fst
dec
inc
pop
mov
sbb
push
inc
or
in
inc
mov
cwde
aam
daa
test
sub
jae
ja
cmc
lods
inc
into
adc
imul
cmp
sub
(bad)
xor
icebp
(bad)
out
leave
jmp
out
mov
int3
xchg
jp
rep
xor
mov
xchg
in
jnp
lds
inc
ins
int
ds
fiadd
mov
lea
pop
popa
repz
out
out
and
xor
mov
push
mov
mov
jo
rol
mov
div
push
cmp
mov
and
push
sub
and
jno
jge
and
dec
lock
dec
sbb
xchg
mov
mov
hlt
icebp
dec
dec
(bad)
push
sbb
fisttp
dec
pop
out
mov
movs
inc
je
add
add
ds
out
adc
test
dec
pop
stc
das
mov
inc
cmp
mov
ds
test
mov
mov
fisttp
in
outs
sub
stc
into
inc
push
out
mov
clc
ds
jne
push
sub
ja
dec
push
add
data16
shl
dec
jle
inc
adc
mov
pop
cmc
cmp
add
pop
cmp
sub
fwait
daa
mov
jae
(bad)
loop
cmp
fist
jl
clc
xchg
adc
dec
mov
add
inc
scas
or
jne
xor
add
mov
mov
add
pop
(bad)
push
add
pushf
repnz
clc
fidivr
and
enter
push
lods
aad
cmp
and
and
mov
and
and
mov
mov
or
jo
or
jmp
push
(bad)
(bad)
push
pop
mov
xor
add
add
add
xor
sbb
mov
xor
shl
mov
fsub
ss
jmp
pop
xchg
xchg
sbb
or
stc
lahf
lahf
xchg
imul
lds
stc
mov
jecxz
push
jb
inc
es
ins
test
(bad)
adc
xlat
shl
dec
ror
jp
shl
or
sub
mov
mov
movs
jmp
iret
mov
shl
ror
dec
mov
ret
out
dec
push
mov
mul
in
jp
pop
btc
(bad)
ret
int3
arpl
mov
out
xor
push
sub
xor
aam
or
sub
movs
sbb
lods
jne
fcmovbe
sti
mov
sti
mov
out
pushf
push
rcl
dec
retf
push
div
test
ins
pop
lds
imul
or
pushf
jo
dec
mov
or
pop
stos
in
mov
pop
jmp
xchg
dec
sbb
aad
test
mov
inc
mov
shl
into
xor
push
aas
and
movs
add
loope
mov
imul
push
mov
popf
fcomp
es
mov
fsub
arpl
add
int
xor
pop
fnstcw
mov
or
push
pop
(bad)
mov
xor
or
stc
stos
cmps
inc
lahf
fisubr
into
mov
sbb
mov
imul
xchg
jb
push
hlt
ds
jno
call
enter
dec
ja
push
and
(bad)
adc
inc
pop
xor
(bad)
sbb
xchg
shl
and
or
and
add
les
xchg
cmp
sub
popf
push
jnp
xchg
xor
sub
mov
dec
fs
add
das
rol
cmp
sub
inc
pop
jge
mov
lods
jmp
add
add
adc
loopne
leave
xchg
rcr
pop
jae
cmp
adc
call
daa
cwde
jno
mov
iret
cmp
push
popa
mov
test
cmp
cmp
dec
sub
clc
arpl
push
jle
cmp
mov
push
push
gs
push
lahf
mov
add
jl
test
xchg
adc
mov
sbb
into
sbb
add
fld
xor
pop
cmp
ins
fild
(bad)
adc
cli
xchg
aam
into
push
sbb
(bad)
les
inc
mov
retf
popf
adc
lds
cmp
cdq
adc
dec
pop
mov
test
jmp
call
fbld
inc
int3
cmp
mov
movs
push
push
sar
jae
loopne
ins
mov
mov
(bad)
mov
mov
stc
xchg
lahf
mov
js
ins
pop
loopne
jo
dec
xchg
cs
dec
out
mov
addr16
jecxz
js
mov
mov
or
jbe
mov
pop
sub
mov
add
les
call
mov
mov
in
out
adc
pop
or
xchg
adc
stos
xor
sbb
and
lods
jno
xchg
shl
test
mov
loope
dec
push
out
or
sub
xor
aaa
or
out
(bad)
je
and
out
inc
sub
imul
daa
or
imul
fwait
mov
and
cwde
out
ret
add
ret
dec
mov
jnp
pushf
ret
in
icebp
dec
imul
cmp
cmp
sahf
push
sub
mov
fiadd
push
les
jecxz
sti
pushf
xor
mov
popf
mov
push
add
pop
sub
nop
out
addr16
js
xor
sahf
lahf
in
fs
lahf
jb
outs
cmp
mov
jecxz
imul
mov
ja
mov
xor
sub
xchg
push
pop
aaa
or
jno
cmc
mov
std
pop
cld
lock
(bad)
(bad)
int
out
outs
xchg
iret
mov
mov
cmp
in
add
les
xor
repnz
pushf
mov
push
fisttp
sub
(bad)
js
fmul
mov
jb
std
cmp
sub
repz
push
add
mov
inc
mov
fld
out
push
rol
(bad)
aas
cmp
iret
cld
or
mov
call
neg
sbb
and
cmp
and
cmp
cs
movs
sub
ret
xchg
imul
arpl
dec
cmc
outs
js
ret
pop
push
dec
sbb
mov
leave
fcomp
je
test
xchg
in
pop
dec
mov
sub
inc
lahf
push
pushf
addr16
into
loop
xlat
repnz
push
enter
xor
inc
loop
(bad)
shr
sub
imul
jmp
data16
jg
jmp
aaa
dec
cmps
arpl
dec
jle
xor
push
inc
pop
jecxz
fist
add
cmp
retf
mov
cmps
out
sbb
ja
loope
cdq
pop
leavew
jbe
push
xor
mov
test
loopne
xchg
xchg
(bad)
dec
(bad)
(bad)
retf
or
xchg
inc
mov
or
mov
push
xor
and
adc
mov
int
add
jle
inc
les
and
call
in
in
and
inc
hlt
mov
shr
pop
cli
add
pop
fsubr
repz
lea
loop
push
lock
dec
imul
mov
pop
loop
jnp
xchg
(bad)
fcomp
stc
xor
jg
push
mov
xchg
dec
sbb
push
push
adc
jb
lock
mov
mul
cmp
mov
cmp
jnp
je
add
call
push
mov
mov
mov
js
dec
xchg
aaa
or
add
mov
jmp
xor
mov
imul
enter
jg
fstp
add
mov
mov
mov
inc
mov
in
in
xchg
imul
nop
daa
retf
mov
hlt
aam
xchg
jb
(bad)
pop
xor
or
std
jnp
icebp
loop
lods
dec
jo
mov
fcomp
scas
dec
inc
mov
cmp
add
sub
xchg
ror
mov
rcr
jno
loop
push
adc
popf
sbb
aam
cld
adc
cmp
push
out
cmps
fsubr
popf
test
inc
adc
verw
loopne
cld
pop
sub
addr16
jb
ret
push
inc
inc
jg
jge
dec
push
dec
(bad)
mov
cld
mov
pop
cld
mov
aad
pop
fsub
mov
sub
loope
mov
adc
scas
cmp
jecxz
push
push
mov
sub
jno
retf
xchg
loopne
loopne
jecxz
sbb
mov
pushf
dec
inc
shl
ret
dec
outs
push
jo
cmp
jp
or
or
xor
repz
test
sbb
inc
cmc
fsub
jae
out
mov
mov
fcomp
dec
das
inc
aam
pop
sbb
mov
rcl
loop
inc
jns
cmp
outs
add
bound
xchg
sub
mov
push
in
xchg
addr16
enter
pop
out
and
ret
ret
stc
xchg
jne
pushf
outs
retf
out
pop
pop
mov
mov
lds
or
sbb
stos
and
test
cmp
xchg
daa
test
sbb
jno
clc
outs
xor
ja
mov
dec
mov
das
sub
popf
sbb
mov
pop
leave
sbb
ror
dec
jmp
sbb
dec
mov
cmp
jo
and
pop
jmp
in
mov
dec
int
in
inc
jl
mov
mov
mov
ins
cmp
push
xor
jnp
(bad)
int
add
and
aad
pop
ror
rol
shl
add
les
xor
mov
rol
lock
xor
sar
sub
jbe
and
push
mov
cmc
nop
mov
imul
arpl
xchg
rol
in
repnz
mov
xor
aad
test
pop
das
mov
dec
mov
repz
push
test
test
pop
cs
rcl
jb
dec
xor
push
xor
mov
jb
dec
mov
ret
jne
mov
mov
out
add
or
imul
sub
push
rcl
inc
push
dec
movs
xchg
push
loope
xchg
in
jae
dec
add
mov
cli
jno
jmp
inc
push
ds
xor
pop
stos
je
das
jmp
sub
stos
aas
arpl
mov
mov
pop
jg
sahf
push
adc
xor
pop
jg
into
jnp
xlat
lahf
outs
xchg
xchg
xor
mov
sbb
loop
mov
outs
bound
fldcw
jae
dec
and
xor
je
test
scas
test
repnz
or
push
cwde
ds
rol
cmp
xor
jg
inc
jbe
mov
xor
jge
cs
inc
aaa
sti
test
cmp
stc
dec
fsub
stc
adc
rol
xchg
and
xor
ins
pop
sbb
mov
sbb
mov
inc
cmps
inc
add
pop
jns
mov
mov
popa
adc
ja
imul
push
jo
sbb
xor
mov
neg
mov
cwde
xor
or
sti
inc
mov
loope
add
test
xor
call
fistp
iret
inc
das
cmp
sahf
pop
or
add
icebp
cs
jo
lds
stc
ror
(bad)
aas
movs
enter
into
in
stos
out
pop
imul
add
mov
call
push
adc
ffreep
mov
shl
mov
or
jae
dec
cli
popa
jo
fist
push
inc
hlt
cmp
fst
pop
das
jl
repnz
push
xlat
cmp
mov
(bad)
rcr
inc
push
or
add
xor
nop
sbb
adc
inc
imul
xchg
ins
ds
rol
dec
fst
adc
addr16
test
pop
mov
stos
jge
and
mov
sub
retf
mov
pop
mov
test
xchg
popf
sbb
cmps
add
movs
push
cwde
int
jne
dec
mov
mov
int
(bad)
fiadd
stos
call
add
(bad)
out
sbb
test
mov
cs
lods
test
push
push
sbb
(bad)
call
sbb
dec
in
fistp
dec
add
outs
jnp
jb
(bad)
jae
pop
inc
out
mov
test
xor
outs
mov
mov
das
ret
jl
jmp
cmp
inc
mov
ja
xchg
out
outs
jmp
pop
jl
push
cmp
push
(bad)
pop
sti
jmp
dec
jle
add
cld
loope
cmp
lds
(bad)
pop
mov
retf
dec
inc
aas
mov
push
test
xchg
mov
inc
inc
lea
cmp
jmp
stc
and
pusha
dec
mov
test
repnz
stc
aaa
mov
mov
xchg
push
pop
fst
adc
jmp
hlt
mov
mov
dec
in
add
ds
loope
(bad)
xchg
dec
sbb
cmp
push
push
add
pushf
adc
shl
pop
cmp
(bad)
out
pop
jecxz
dec
mov
test
aad
push
push
push
jmp
enter
call
gs
jne
in
imul
into
mov
pop
test
mov
cli
ds
scas
xchg
lock
nop
test
imul
xchg
or
sub
add
ss
out
add
jmp
gs
pop
mov
push
mov
mov
adc
(bad)
ja
in
xor
stos
xchg
sbb
sbb
stc
xor
cwde
ds
cld
inc
dec
mov
or
fist
fidivr
sub
js
daa
repz
push
xor
xor
inc
out
jbe
cld
call
not
jge
add
pop
sub
push
iret
fwait
icebp
pop
mov
rcl
mov
mov
push
pop
or
(bad)
jo
push
leave
jl
mov
loope
pop
fstp
lods
int3
mov
cs
imul
mov
xor
sbb
test
xor
pop
outs
mov
cmp
les
mov
addr16
sbb
inc
jmp
leave
push
mov
jb
xchg
stc
fs
shr
or
sahf
sub
mov
xchg
mov
xchg
sub
in
jl
ins
push
cmp
in
pop
mov
fild
(bad)
push
cmp
ret
dec
pop
push
pushf
pop
fwait
ds
data16
std
cmp
test
ficom
(bad)
movs
ss
mov
jecxz
popf
mov
jnp
add
lahf
sbb
pop
sub
scas
add
cli
imul
(bad)
mov
mov
cmc
movs
rol
push
into
fld
inc
mov
cmps
pop
lods
sti
add
sub
mov
pop
pop
xor
arpl
mov
sti
dec
aam
push
dec
dec
(bad)
(bad)
and
mov
cmp
ins
test
mov
and
sub
add
mov
mov
fs
test
dec
pop
sub
inc
(bad)
dec
sbb
cli
dec
mov
cmps
movs
mov
daa
ds
aas
ss
out
hlt
inc
(bad)
sbb
lods
xor
xor
sub
and
jbe
retf
xchg
cwde
push
xchg
fidiv
jbe
xchg
sbb
mov
repnz
jmp
dec
and
pop
lea
in
(bad)
movs
ret
fidiv
push
(bad)
mul
idiv
scas
loope
inc
pop
cld
or
xchg
sub
mov
sbb
or
cmp
movs
cmp
mov
mov
adc
mov
pop
xchg
(bad)
mov
xchg
nop
sub
out
mov
pop
sbb
cmps
mov
mov
mov
nop
addr16
fcom
mov
jmp
pop
popf
push
cmps
inc
cmp
fwait
push
sar
cld
aas
dec
outs
daa
mov
popa
xchg
xchg
inc
cmp
xor
or
mov
out
popf
jmp
jle
xor
adc
out
outs
fwait
int3
jmp
inc
xlat
sbb
and
leave
pop
pop
dec
leave
sbb
mov
aam
sti
push
fisub
sbb
xor
mov
or
cmc
repnz
xchg
add
mov
dec
test
xchg
push
xchg
push
pop
(bad)
sub
pop
inc
cmp
adc
sub
fsubr
sbb
inc
shr
sub
push
sub
sbb
div
and
call
aad
add
mov
clc
sub
or
repz
cmp
mov
bound
out
jmp
push
test
in
jle
fs
leave
add
xchg
jne
add
sub
in
pop
jbe
int3
data16
or
xlat
jg
push
sub
ret
cmp
mov
sbb
scas
test
gs
mov
xchg
push
pmuludq
bound
out
jg
jnp
jp
test
ss
jp
sub
mov
jne
cmps
ins
pop
sbb
push
mov
jg
cli
jmp
addr16
test
int3
pop
xbegin
xchg
mov
dec
sub
adc
mov
sbb
or
ss
fadd
xor
inc
mov
nop
repz
shl
pop
pop
(bad)
add
imul
or
scas
repnz
fwait
mov
shr
xlat
imul
call
pop
cmc
or
in
fucomip
cmp
add
into
call
mov
pop
jbe
pop
cmp
push
and
std
sahf
push
shrd
mov
mov
not
in
cmp
outs
lock
pop
bound
out
cld
mov
sbb
and
inc
mov
(bad)
sbb
mov
jnp
loope
sbb
jnp
ins
push
add
int3
or
dec
lahf
jg
xchg
stc
or
jmp
jmp
add
addr16
xchg
and
and
pusha
cmps
(bad)
(bad)
xor
push
aam
adc
test
or
push
xchg
loope
mov
push
inc
mov
sub
fwait
jo
movs
push
mov
movs
sub
in
pop
in
and
mov
pop
sub
add
(bad)
shl
or
sbb
jmp
and
sti
loope
int
popa
retf
jmp
ins
cmps
push
shl
enter
jo
push
mov
imul
mov
aad
mov
popf
xchg
push
xlat
imul
xchg
cmp
mov
cmc
(bad)
fdivr
xchg
out
cmc
out
push
mov
gs
movs
cmp
enter
mov
icebp
mov
add
and
jnp
sbb
push
mov
aaa
mov
xchg
test
cmps
mov
lds
xchg
fld
popf
jge
lds
ja
movs
ror
sti
sub
jbe
jle
ins
mov
dec
dec
outs
outs
arpl
inc
inc
inc
push
xor
lock
shr
lods
lods
loope
xchg
cmc
fstp
mov
sbb
cmp
cmp
pusha
sbb
nop
xchg
mov
adc
out
pop
adc
(bad)
cmc
cmp
jmp
pop
jmp
ds
pop
inc
lods
jl
mov
test
pop
popa
sub
sbb
and
ret
push
mov
sub
iret
xchg
inc
jl
cmp
(bad)
cmc
rcr
addr16
dec
cmp
aam
or
ja
inc
ja
xor
dec
mov
push
(bad)
add
dec
es
dec
neg
mov
jmp
pop
lock
enter
mov
and
sub
sbb
pop
inc
mov
adc
mov
aas
mov
cmp
lahf
adc
loop
or
add
dec
mov
clc
jle
dec
in
call
cmp
sar
imul
mov
sub
mov
push
rol
cs
pop
jo
cdq
or
push
sub
dec
cmp
arpl
pop
pop
and
mov
jae
push
push
outs
cmc
inc
ss
cmp
les
and
pop
cmp
sar
sbb
out
mov
or
or
sub
leave
mov
call
popf
jno
xchg
int
mov
test
sbb
das
test
push
sub
adc
mov
aaa
adc
fldcw
ja
sub
push
inc
and
sub
out
ins
jns
mov
sub
sub
add
pushf
pop
icebp
rol
fistp
add
cmps
mov
jp
push
jb
cli
or
or
adc
aas
dec
jmp
(bad)
pop
(bad)
fs
dec
add
and
pusha
sbb
js
daa
xchg
pop
test
ins
les
popa
jne
cmps
jp
sti
pop
test
sbb
pop
xchg
(bad)
idiv
mov
push
aad
mov
pop
xchg
cmp
scas
xchg
push
(bad)
outs
test
jp
jmp
mov
inc
fild
dec
ja
sub
sub
sbb
dec
retf
sub
cld
cld
mov
into
lock
jge
pop
mov
sub
fidiv
mov
mov
icebp
fldcw
mov
in
adc
cmp
scas
(bad)
mov
mov
pop
pop
inc
and
arpl
bound
dec
mov
jb
sub
and
popa
mov
nop
pop
aas
imul
xchg
inc
xor
sar
xor
mov
lahf
jno
daa
inc
call
ins
imul
push
adc
inc
add
xor
mov
out
inc
sbb
pushf
push
pusha
cmp
stc
pop
sub
popf
sbb
cli
or
dec
cdq
test
sbb
dec
mov
or
outs
rcl
hlt
dec
mov
mov
inc
pop
pop
(bad)
xchg
mov
loope
pop
mov
push
stos
mov
sub
jmp
enter
add
rcl
push
xor
xchg
cmp
sbb
mov
ins
inc
sbb
xchg
mov
mov
mov
cld
jne
nop
jnp
cmp
jno
aam
push
add
fs
icebp
ret
or
sbb
mov
outs
dec
ins
xlat
fdiv
jge
mov
test
or
int
retf
les
cmc
xchg
or
bound
aaa
leave
test
das
addr16
outs
ret
mov
or
mov
adc
das
push
iret
imul
xchg
in
xchg
cmc
ret
out
xlat
aam
xchg
dec
bnd
pop
xchg
sti
push
fs
or
fdiv
aam
push
cmp
or
lods
stc
icebp
and
add
mov
(bad)
xchg
push
xchg
pop
mov
lahf
aam
popf
jbe
add
add
pop
mov
test
out
xor
xor
shl
mov
adc
js
or
dec
xor
ins
jbe
(bad)
js
inc
mov
test
or
aas
push
dec
xchg
dec
pushw
mov
add
(bad)
pop
mov
xchg
jl
fisttp
mov
das
ins
(bad)
addr16
js
jecxz
dec
stos
gs
std
loopne
xor
movs
adc
(bad)
and
sbb
pop
sbb
mov
into
jb
daa
dec
frstor
pop
inc
inc
fisubr
push
xchg
fimul
and
dec
xchg
jle
lods
pop
add
and
lock
retf
test
push
enter
rcl
retf
fld
in
mov
xchg
gs
ret
inc
xchg
mov
dec
ficom
bound
or
scas
mov
cmp
jg
jne
add
adc
xor
sbb
mov
cs
in
or
xchg
clc
out
(bad)
loopne
lods
and
div
jb
dec
or
jo
pusha
jns
out
div
adc
xchg
dec
push
call
popf
pop
mov
stos
retf
(bad)
clc
push
loop
mov
loop
imul
and
fdiv
ja
scas
js
scas
adc
es
inc
sub
inc
std
fbld
and
inc
jnp
xor
push
pop
lea
dec
mov
push
jne
xchg
mov
sbb
arpl
push
pop
stos
ins
out
dec
icebp
ins
mov
lods
xor
shr
ss
leave
in
(bad)
mov
jae
pop
cmp
sahf
mov
clc
out
test
jmp
popf
jmp
push
cmp
nop
mov
ret
out
xor
test
mov
in
mov
scas
mov
cmp
or
mov
fucomp
cmp
jecxz
in
out
add
gs
ss
add
jo
mov
aaa
js
push
dec
out
dec
and
cs
mov
repnz
pop
jl
ss
inc
addr16
pop
dec
add
sbb
mov
sbb
cld
retf
lahf
mov
push
pop
lock
fcom
out
aam
jne
(bad)
sbb
movs
adc
xor
sbb
test
pop
adc
inc
mov
jge
int
lods
jl
xor
push
(bad)
enter
imul
mov
add
cmp
lock
std
cs
dec
adc
sbb
add
cmp
call
call
test
push
mov
inc
push
add
sbb
inc
daa
cmp
fisubr
push
cmp
pop
add
bound
xchg
cmp
(bad)
emms
pop
outs
mov
push
out
sub
lds
add
or
inc
icebp
adc
addr16
icebp
mov
cmp
pusha
sub
inc
int3
ins
xchg
retf
pop
xchg
mov
addr16
call
mov
or
jnp
cmc
and
std
sbb
push
ins
push
sub
push
lods
adc
pop
jb
icebp
adc
mov
mov
pop
xor
sti
and
rol
add
loope
add
test
mov
lods
jmp
and
retf
outs
clc
mov
jmp
sahf
mov
inc
xor
jg
(bad)
(bad)
out
pop
inc
lods
xchg
stos
stos
cmc
call
cmp
out
cwde
sub
hlt
inc
sub
dec
xor
imul
mov
sbb
arpl
push
test
cmp
mov
or
lds
sub
out
add
add
ret
cmp
mov
cmps
mov
jmp
in
inc
mov
clc
fcom
es
call
repz
rol
int
push
fbstp
(bad)
add
or
cmp
stc
jno
ins
mov
sar
xchg
(bad)
cmp
push
xchg
mov
test
inc
push
and
push
push
pop
repnz
packuswb
into
aad
jmp
inc
cmp
movs
or
popf
xchg
cld
cs
cwde
or
repnz
gs
pop
imul
mov
call
cmps
popa
hlt
cmp
xchg
mov
addr16
fiadd
xor
add
push
push
cmp
je
or
stos
call
std
sbb
addr16
ja
inc
enter
rcl
cmp
lahf
mov
xor
or
mov
cmp
cmp
out
(bad)
ins
bound
dec
inc
push
movs
aas
cmps
adc
jbe
mov
dec
iret
adc
sub
test
dec
xor
nop
imul
jge
xlat
push
pop
xor
lods
sbb
(bad)
sub
pop
pushf
neg
mul
out
test
or
(bad)
adc
push
pop
inc
sub
xchg
xchg
or
test
xor
out
mov
pop
ror
jmp
stos
loope
sub
xchg
nop
add
stos
add
sub
or
fdiv
in
mov
out
fsubr
cmps
(bad)
icebp
in
dec
inc
mov
es
inc
aam
cmp
in
sub
jmp
xchg
fild
jge
(bad)
mov
jo
jne
int
pop
sub
adc
inc
cmps
cmps
ror
lahf
adc
(bad)
out
(bad)
or
stos
adc
stos
jmp
jae
cmp
int3
add
iret
push
(bad)
pop
mov
or
test
pop
mov
cmp
aam
hlt
test
std
daa
push
xchg
sub
sub
(bad)
in
sub
add
and
sti
inc
adc
xor
movs
add
(bad)
fcmovu
add
ror
stc
popa
outs
test
push
ins
adc
imul
lods
push
inc
popf
aas
push
and
push
fild
and
jl
cmp
add
or
lea
mov
cli
xchg
cmp
or
dec
cld
jge
lds
inc
into
mov
xchg
addr16
out
inc
out
or
or
xchg
fisubr
movs
test
pushf
xchg
imul
int3
push
aam
mov
or
out
test
(bad)
les
inc
jb
adc
or
stc
cmp
nop
add
mov
jge
fistp
adc
xchg
jge
adc
div
xchg
dec
in
cmps
add
cmps
aas
sbb
pushf
mov
xchg
or
and
or
mov
mov
mov
sbb
and
ds
ins
xchg
cdq
hlt
xor
rol
scas
jg
fisubr
xor
shl
ret
sbb
mov
xor
fld
lods
pop
lods
int3
add
loopne
clc
sbb
fidiv
fs
sbb
jo
into
je
(bad)
and
lea
jge
pop
xchg
push
test
mov
cld
dec
xchg
sub
inc
mov
rcl
imul
mov
jl
push
fild
add
sbb
fwait
mov
dec
jecxz
inc
sub
adc
inc
bound
jbe
ficomp
call
jns
adc
add
sub
ror
lahf
cmps
sahf
scas
lock
pop
sub
mov
pop
(bad)
pop
pop
stos
gs
rcr
push
cmps
cmp
inc
fild
(bad)
(bad)
sbb
jl
(bad)
outs
ror
jg
fdiv
mov
pop
rol
jnp
test
in
int
xor
mov
test
aaa
mov
sahf
loope
scas
stc
mov
inc
mov
test
sahf
bound
mov
sbb
or
jg
mov
ins
sbb
xchg
xor
outs
scas
xchg
mov
pop
ret
int
leave
hlt
outs
mov
pop
sbb
inc
imul
dec
(bad)
in
test
sub
and
dec
dec
call
jnp
(bad)
imul
(bad)
or
push
ds
test
sti
mov
and
or
cmp
nop
or
fadd
jge
xor
pop
xor
add
jmp
jecxz
ret
jae
ficomp
push
dec
mov
aaa
addr16
jge
(bad)
in
jp
aaa
aam
ret
hlt
dec
sbb
dec
into
aad
mov
repnz
and
into
pop
jp
inc
enter
cmp
test
jge
loopne
sub
(bad)
shr
push
jle
dec
or
out
stos
sub
mov
pop
retf
ret
mov
pop
fdivp
cmc
mov
cmp
sub
aas
cmp
push
das
jnp
fwait
into
inc
xor
aaa
and
inc
sar
xlat
addr16
fld
mov
xchg
cld
pop
and
add
(bad)
ficomp
jns
retf
jg
sbb
mov
inc
mov
sbb
call
in
mov
xor
icebp
fmul
push
mov
mov
add
xlat
mov
xor
cmc
jg
xchg
js
test
mov
push
pop
mov
pop
loope
ds
push
(bad)
out
push
mov
in
sub
dec
mov
ret
dec
or
or
jge
xchg
push
and
xchg
femms
or
or
xchg
mov
outs
jmp
sub
lods
lods
cmc
dec
mov
nop
and
push
cmps
cmp
pop
and
mov
(bad)
jmp
jmp
dec
shr
repnz
inc
int
sbb
mov
cdq
ficom
or
push
mov
and
lea
dec
out
inc
jns
iret
das
mov
(bad)
addr16
add
cld
mov
aas
ret
test
jmp
dec
push
cmp
cmc
inc
fdivr
push
add
mov
bound
pop
stos
fucom
inc
(bad)
ss
ret
push
adc
xor
mov
or
stos
int3
outs
(bad)
out
push
pushf
icebp
addr16
arpl
setno
jno
cmp
addr16
ror
mov
aam
jmp
adc
mov
or
shl
daa
call
ret
sub
pop
dec
or
shl
sbb
push
and
stos
mov
pop
cmp
in
xor
pop
test
mov
jnp
daa
mov
mov
and
in
icebp
lock
dec
leave
mov
xchg
mov
jb
retf
test
out
mov
push
jae
add
fucomp
jo
(bad)
jge
jb
sub
cmp
xchg
call
pop
push
outs
xor
(bad)
(bad)
fisub
js
push
lods
lods
sub
mov
xor
dec
push
nop
loop
mov
push
fdivr
ins
xor
dec
out
adc
leave
lods
push
test
in
lds
or
xlat
mov
daa
mov
rol
jb
adc
xor
mov
add
icebp
jmp
cmc
sub
and
inc
sbb
cs
push
xor
mov
in
in
retf
jno
adc
std
xchg
sbb
iret
loop
(bad)
pop
test
sub
cmp
ret
mov
outs
inc
xor
adc
add
inc
jbe
movs
ja
pop
int
in
jb
cwde
xchg
or
inc
es
lea
jo
sbb
xchg
sub
cmp
jecxz
call
mov
jp
or
stos
cmps
xchg
jg
inc
ror
fmul
out
loop
pop
mov
add
jo
dec
xlat
xor
adc
pusha
xchg
inc
loope
mov
add
add
sub
sbb
fild
push
int
icebp
cdq
out
inc
(bad)
hlt
cmps
std
dec
pop
icebp
jne
jecxz
inc
outs
jecxz
das
stc
xchg
repnz
mov
fbstp
js
cmp
hlt
mov
popa
test
mov
cli
lea
adc
lods
mov
stos
rcr
sub
fisttp
and
adc
into
mov
push
aad
or
arpl
inc
clc
loop
pop
inc
add
xor
imul
add
enter
jl
adc
(bad)
mov
data16
push
and
push
aas
xchg
in
mov
in
xchg
sahf
fst
das
outs
adc
out
ds
test
cmc
cs
xchg
stc
mov
jmp
mov
loopne
xor
mul
mov
aad
jb
dec
addr16
xor
add
fst
push
test
or
retf
and
sub
push
imul
sub
sbb
add
xor
pusha
sub
fnsave
and
bound
adc
iret
push
nop
jmp
iret
out
repz
sub
jp
pop
push
movs
lods
fwait
out
cmp
ja
adc
xor
inc
ss
cmc
sbb
mov
hlt
nop
aas
sbb
fidiv
(bad)
gs
add
iret
test
out
aad
sar
xor
cmp
pop
into
inc
dec
cmps
stos
add
inc
jle
fs
and
add
or
adc
xchg
add
sub
push
dec
out
push
cmp
mov
or
not
adc
pop
xor
adc
sar
xchg
xchg
push
and
retf
mov
not
sub
sbb
or
jo
outs
vmovsldup
push
outs
xchg
mov
retf
loopne
cs
lods
sub
out
adc
std
push
sbb
mov
repz
xor
fs
sub
push
or
push
addr16
xchg
sub
mov
jo
dec
test
sub
xchg
xchg
rcl
call
jae
adc
rdtsc
ror
pop
ds
mov
cwde
imul
push
std
mov
jp
jecxz
jge
mov
in
pushf
dec
dec
push
push
cs
add
fdivr
pop
xchg
mov
ins
jl
hlt
and
jl
cwde
fsub
mov
cmp
sub
jb
mov
push
outs
imul
mov
sbb
jns
push
cmc
lds
sahf
aas
loopne
int
iret
push
dec
cmp
mov
and
add
sub
test
pop
shr
gs
xor
or
mov
fidiv
int
out
arpl
mov
inc
xor
sahf
fadd
cwde
retf
xchg
pop
outs
movs
nop
lds
and
mov
jge
adc
js
xchg
or
push
pop
rcr
imul
(bad)
fisub
mov
inc
scas
jo
(bad)
mov
scas
xchg
jle
xlat
cmps
mov
xchg
dec
adc
stos
jae
push
fadd
mov
sbb
ins
fwait
ret
pop
jmp
pushf
in
in
cmp
call
sbb
xor
pop
inc
push
lods
pop
imul
inc
icebp
push
and
iret
add
mov
dec
sub
sub
stc
stc
mov
fist
mov
aas
push
imul
or
adc
sub
sbb
push
in
adc
pop
fnstsw
sbb
and
in
mov
(bad)
es
jge
jnp
(bad)
sar
es
pop
out
or
(bad)
xlat
fsubr
imul
(bad)
mov
or
movs
in
mov
ret
ret
mov
adc
inc
mov
mov
and
es
mov
cvtdq2ps
mov
sti
xlat
or
sahf
and
fadd
cmp
dec
push
pop
loop
adc
mov
shl
xor
sub
xchg
inc
int
dec
int3
pop
xchg
mov
jge
jne
push
add
dec
retf
and
mov
push
xor
sbb
or
stc
movs
xor
ins
xchg
jmp
test
ss
or
in
lea
ss
mov
dec
pop
retf
aad
sub
pop
enter
mov
sbb
add
fwait
mov
ror
jge
xor
jle
rcr
or
add
arpl
push
or
shr
rcr
mov
sahf
dec
inc
dec
repnz
mov
(bad)
fstp
out
pop
adc
jl
dec
movs
jo
jmp
repnz
retf
sbb
or
loop
gs
mov
into
loope
pushf
leave
push
jp
mov
sub
adc
sti
mov
bound
scas
rcr
sub
dec
fisttp
inc
and
mov
push
or
add
xchg
mov
rcl
(bad)
mov
(bad)
inc
cmp
hlt
(bad)
lds
enter
repz
out
mov
or
pusha
pop
inc
ss
sub
retf
cmc
jmp
ss
lods
push
mov
stos
(bad)
xor
push
cmp
adc
jae
into
and
pop
xor
out
retf
call
jno
mov
add
pop
jae
out
add
or
or
das
test
add
in
dec
or
mov
pusha
aas
xchg
add
push
je
daa
std
pop
add
and
or
out
mov
and
sahf
cmps
lds
test
mov
adc
out
ja
movs
inc
push
adc
test
xor
push
mov
push
lea
ds
inc
sbb
imul
inc
and
test
mov
xchg
or
in
pop
prefetcht1
xor
adc
fdivr
arpl
repz
sbb
(bad)
repnz
ja
or
jo
or
inc
movs
lahf
jo
pop
or
pop
push
sub
aad
mov
mov
cmp
jo
sub
retf
fnsave
orps
jnp
cmp
fs
loop
sbb
in
ud1
int3
mov
enter
mov
cli
mov
ds
arpl
retf
sti
lahf
push
dec
sub
xlat
and
in
lods
ins
inc
fsubp
push
jmp
seta
pop
xchg
mov
jo
sar
lahf
lahf
xchg
pop
cmp
imul
jb
or
sub
inc
push
push
adc
and
repz
lock
pop
pop
cdq
jle
cmp
cmp
inc
dec
retf
fidiv
iret
sbb
mov
stos
jo
int
pop
add
out
cli
in
jno
popf
movs
into
and
idiv
or
jno
rol
inc
mov
cmp
ss
sub
outs
out
dec
in
sub
popa
mov
push
test
mov
mov
jne
xchg
mov
addr16
lods
cwde
shl
dec
pusha
dec
mov
sub
aad
xchg
lahf
stos
popf
mov
cmp
adc
aaa
mov
pop
ins
sub
pop
xor
int
popa
out
xlat
jae
cmc
movs
inc
push
and
pop
ins
lods
dec
jns
jle
ret
jo
jae
div
mov
xchg
dec
stos
addr16
or
inc
mov
pop
int3
jle
and
fnstsw
mov
idiv
(bad)
push
out
mov
fisub
jno
lods
push
sbb
repnz
pusha
jo
and
sahf
ins
clc
push
les
hlt
or
cmps
test
adc
adc
aas
dec
out
push
loopne
rcr
push
and
and
fs
jns
bound
(bad)
aam
or
test
pop
push
cli
aam
scas
cmp
frstor
sti
retf
cmp
sub
fs
cmps
mov
pop
jo
cmp
pop
lods
mov
ds
nop
cmps
and
mov
xor
cmp
push
out
and
push
dec
loope
jb
inc
sub
jp
aam
cdq
jbe
add
add
stc
adc
call
mov
aad
sbb
aam
(bad)
mov
aaa
test
jecxz
(bad)
call
shl
cld
in
and
cli
cld
sub
leave
out
imul
jmp
movs
pop
xor
push
loop
mov
mov
daa
movntq
lods
mov
bound
xchg
add
cmp
sub
rcl
and
add
cmc
das
push
push
inc
pop
push
inc
call
clc
dec
setbe
inc
daa
pop
push
ds
in
lods
adc
in
or
xor
neg
jecxz
test
cmp
pop
gs
mov
je
retf
aad
push
pop
inc
lahf
data16
or
je
imul
push
mov
sub
mov
pop
pop
add
lahf
mov
cmp
push
xchg
sbb
ret
xor
xchg
stos
xchg
push
add
dec
jb
ins
aam
das
(bad)
jmp
fs
push
imul
sub
(bad)
repnz
sub
jo
dec
jle
jecxz
dec
mov
xchg
add
bound
push
shl
in
dec
cmp
stc
(bad)
push
add
aas
ins
push
es
adc
mov
mov
cmps
lahf
into
loop
add
ret
(bad)
mov
scas
dec
neg
jae
jae
in
xor
xor
(bad)
cmps
inc
movs
and
lds
mov
fst
xchg
jb
leave
in
popa
fimul
icebp
jmp
sub
rcl
xchg
xor
fadd
add
in
arpl
push
stos
mov
sbb
mov
mov
dec
and
xchg
xchg
test
push
adc
retf
lods
inc
cmc
add
ja
(bad)
pusha
adc
sub
inc
cld
cdq
popa
mov
das
ins
sub
lahf
pushf
sbb
or
mov
les
mov
pop
inc
out
jg
or
and
fnstcw
add
push
xor
xchg
inc
out
jg
(bad)
push
es
xchg
ror
jne
daa
shl
(bad)
pop
push
sbb
ds
sub
xor
cmp
in
xchg
dec
push
sbb
je
out
push
cmp
sub
jle
pop
cdq
arpl
mov
adc
cmp
shl
mov
push
(bad)
fistp
(bad)
fs
sbb
mov
jg
push
loopne
(bad)
repnz
(bad)
mov
(bad)
mov
stc
cmp
push
lea
sub
pop
jns
retf
lods
pop
pop
mov
(bad)
rol
adc
mov
and
cmp
mov
mov
(bad)
sti
daa
dec
popf
dec
and
jnp
out
cmp
mov
mov
dec
adc
aas
test
int
adc
mov
sub
and
fcom
(bad)
ins
dec
fild
out
jmp
or
loopne
sbb
repz
mov
pop
inc
xor
push
out
ror
das
fcom
jmp
xor
ss
lock
xor
test
popa
(bad)
(bad)
retf
sub
jecxz
and
rol
sbb
pop
mov
mov
pop
sbb
ret
xchg
fadd
sbb
adc
jmp
addr16
adc
sub
mov
xchg
loopne
popf
repnz
pop
mov
pop
and
fmulp
fisub
sub
push
xchg
ret
push
xor
xor
sub
sahf
in
adc
mov
pushf
jle
cwde
fistp
mov
push
sub
das
in
std
inc
jne
xor
div
push
out
ror
or
retf
adc
rcl
mov
mov
mov
stc
jle
icebp
add
sbb
pushf
adc
scas
out
mov
(bad)
aam
mov
push
movs
mov
inc
cmp
fsub
(bad)
mov
js
mov
push
push
cs
into
pushf
and
addr16
pop
mov
mov
add
pop
xor
or
gs
sub
adc
cmp
test
es
jge
outs
xor
sub
cmps
dec
mov
jbe
imul
mov
not
jg
add
mov
or
gs
jae
ficom
sbb
sbb
mov
and
sbb
dec
sub
pop
add
and
arpl
loope
adc
(bad)
and
ins
retf
push
mov
ss
adc
lea
outs
movs
push
add
fsubr
mov
mov
mov
mov
test
mov
cmp
push
jp
or
jbe
ret
in
fmul
xchg
push
ret
push
ret
inc
adc
movs
dec
adc
pop
out
rcl
jno
cmp
fwait
xchg
(bad)
mov
pop
cmps
xor
movs
cld
iret
jns
mov
ret
dec
pop
pop
test
mov
sbb
inc
(bad)
xor
fs
push
fwait
cmps
movs
or
call
cwde
cld
fstp
int
hlt
aaa
loope
cmp
scas
add
aas
mov
jb
cmc
or
sbb
add
inc
jmp
in
pop
pop
adc
mov
xor
out
add
nop
mov
sbb
cmps
into
aam
inc
lds
or
jns
jne
nop
push
repz
cmp
test
xor
dec
scas
ror
dec
xchg
mov
sub
fistp
or
lock
dec
mov
push
xchg
out
push
inc
add
out
(bad)
cld
sar
aas
mov
xchg
jb
lock
or
xchg
ret
retf
cmc
addr16
dec
push
add
fild
mov
dec
mov
sub
ror
mov
sub
dec
mov
and
inc
mov
fdivr
push
dec
ror
scas
jns
adc
push
in
sbb
test
call
jnp
mov
call
test
icebp
xchg
movs
sub
sub
scas
inc
in
push
xor
loop
lea
(bad)
int3
lock
data16
pop
mov
inc
out
dec
das
(bad)
and
ja
daa
bound
xchg
push
cs
ds
xchg
lds
out
mov
enter
in
(bad)
call
sub
out
pop
retf
push
and
and
shr
aaa
gs
add
add
aad
test
pusha
ds
(bad)
loop
mov
je
inc
addr16
inc
sub
aas
pop
out
(bad)
cmp
jo
rep
fistp
mov
imul
lods
pop
dec
sbb
xlat
mov
mov
push
imul
sahf
dec
repz
es
pop
inc
arpl
xchg
push
add
je
xor
fwait
comiss
stc
jae
(bad)
dec
ins
aaa
movs
nop
das
dec
inc
cmc
in
and
xor
imul
lea
xchg
out
xor
fidivr
xor
dec
cld
mov
lahf
in
outs
inc
es
das
not
ret
cli
or
push
dec
lods
addr16
test
cmps
jb
xchg
in
sbb
jno
aas
cli
push
push
dec
dec
xor
add
aaa
sub
xchg
adc
stos
aam
neg
enter
inc
xchg
icebp
dec
daa
xor
mov
sti
jbe
fild
ret
ret
in
pop
lds
(bad)
pop
cmps
push
xlat
dec
inc
test
or
call
sbb
(bad)
movs
shr
jnp
mov
and
mov
jmp
daa
test
mov
sbb
dec
mov
mov
add
cmp
sbb
mov
cmps
jle
and
cld
mov
adc
shl
gs
dec
and
add
mov
iret
jne
in
aas
add
mov
inc
into
cwde
mov
scas
or
movaps
or
sbb
inc
adc
jno
inc
into
sbb
js
xchg
call
dec
xchg
(bad)
movs
rol
call
sbb
test
xor
dec
jns
mov
jnp
lahf
ja
mov
fcomi
pop
hlt
jge
mov
lahf
jb
adc
mov
xlat
sub
ss
mov
ror
sub
call
sahf
xchg
jb
and
fld
xchg
in
ja
mov
adc
cmp
repnz
inc
retf
mov
daa
outs
jle
lods
pop
mov
(bad)
xchg
dec
outs
bound
inc
pop
and
int3
mov
lea
dec
ret
mov
test
cmp
xor
(bad)
call
sub
in
jl
gs
daa
mov
call
sbb
add
loop
cmc
xchg
cwde
jne
cmp
cmp
in
les
call
mov
inc
and
clc
lods
hlt
inc
aam
pop
pop
popa
and
push
(bad)
pop
pop
pop
mov
fwait
out
fadd
jno
mov
cmp
inc
fpatan
xor
sbb
sbb
out
mov
imul
cli
in
add
mov
nop
sub
cmp
cmc
hlt
daa
fs
cmp
stos
and
out
cmp
or
inc
add
mov
fwait
mov
loop
push
ret
sub
cmp
retf
mov
xor
sti
into
sbb
xor
retf
xchg
aad
(bad)
jmp
xor
xchg
in
test
jns
movs
shl
mov
xor
or
dec
fadd
pushf
adc
dec
push
(bad)
cli
lds
xchg
es
or
sbb
xchg
repz
mov
jmp
stc
ja
pop
jl
xor
pop
shr
jne
adc
jmp
in
jae
jg
popa
pop
arpl
test
or
xlat
push
out
in
adc
xor
ins
inc
sbb
jp
icebp
xlat
ins
mov
mov
cdq
ret
das
cmp
retf
cmps
push
add
push
xor
and
gs
jne
jmp
aaa
jbe
cli
inc
mov
or
or
mov
mov
enter
mov
or
repz
nop
jp
sub
pop
fsubp
dec
and
sub
lds
push
dec
pop
loope
and
mov
or
test
aad
jno
dec
jle
lock
mov
mov
adc
nop
jns
cmp
mov
sub
sar
jmp
push
iret
jne
cmp
cmp
stos
shl
adc
fild
push
int
lea
test
pushf
jl
mov
or
outs
popf
and
sti
sahf
mov
movs
push
inc
outs
mov
mov
nop
aaa
daa
add
push
xor
gs
jnp
(bad)
adc
dec
adc
jmp
daa
dec
in
adc
xor
push
pop
mov
jle
pop
sahf
add
rol
dec
cmp
sub
inc
xchg
fmul
shr
pop
dec
into
or
mov
adc
test
push
ds
sbb
lds
mov
adc
ja
jbe
mov
test
daa
dec
mov
add
and
loopne
scas
mov
or
dec
jb
jg
pop
mov
cmp
and
jmp
mov
daa
or
cmp
ret
cld
nop
jae
scas
in
sti
push
add
les
mov
jnp
xchg
rcr
shl
cdq
jecxz
inc
inc
jge
or
(bad)
fcomi
mov
jno
sub
in
outs
push
imul
or
(bad)
call
std
or
cdq
cmp
inc
sti
fisttp
mov
jmp
shr
sub
in
std
cmp
(bad)
(bad)
je
mov
outs
(bad)
xchg
jmp
xchg
push
scas
adc
inc
sbb
sbb
out
jno
les
mov
jp
pop
sbb
push
test
(bad)
push
aad
test
pop
nop
lahf
out
or
sub
into
popf
jbe
add
mov
and
das
push
dec
enter
scas
sbb
outs
pop
push
lods
push
loopne
bound
xchg
or
cmp
cmp
xor
sub
and
cmp
(bad)
jno
or
js
mov
test
das
fnstcw
pop
outs
xlat
sub
jp
iret
mov
dec
mov
movs
ins
in
push
and
iret
pop
jnp
cmp
in
and
or
js
add
ins
mov
cmps
outs
imul
in
clc
adc
fmul
add
or
daa
xor
int3
retf
aaa
outs
push
scas
dec
in
mov
ds
outs
test
lahf
inc
fdiv
inc
jp
movs
icebp
ror
nop
movs
nop
pop
push
mov
pop
sub
pop
shl
sub
dec
jns
loop
push
add
sub
cs
(bad)
sbb
pop
mov
pop
dec
aas
xor
cmps
outs
inc
loopne
retf
jno
shr
or
mov
mov
mov
call
adc
pushf
movs
cwde
ins
push
repnz
dec
fidiv
in
aad
popf
std
fcom
mov
in
ins
adc
sub
xlat
in
mov
les
jbe
mov
xor
ret
out
jle
(bad)
retf
xor
or
and
jp
dec
mov
jmp
lea
popa
pop
xchg
imul
sub
jne
mov
(bad)
movs
cmp
les
scas
mov
jno
jb
cld
pop
jns
cmp
xor
outs
mov
daa
mov
pushf
pusha
into
pause
addr16
lahf
mov
mov
sbb
in
xor
add
ror
push
push
loopne
mov
pop
cs
and
outs
cmp
lods
scas
xchg
push
clc
xchg
inc
call
and
jge
test
stos
repnz
arpl
stc
sbb
push
inc
(bad)
pop
fs
dec
xor
mov
push
xchg
fldcw
push
xchg
mov
pop
(bad)
jnp
mov
test
or
adc
repz
retf
dec
test
pop
or
jle
mov
(bad)
je
fiadd
inc
fs
pop
mov
or
xor
and
xchg
cdq
(bad)
fsubp
mov
fld
mov
fisub
mov
cmp
xor
or
dec
push
xchg
retf
push
scas
nop
xchg
inc
fidivr
das
add
mov
sub
xchg
and
add
and
sub
xchg
xor
jne
out
dec
xchg
mov
jmp
retf
xor
sahf
inc
cmp
add
loope
lahf
sbb
iret
pusha
mov
jne
scas
cmp
shr
mov
enter
pop
jae
shl
loope
inc
pop
lods
into
aam
jmp
cmp
push
xchg
je
xlat
pop
xor
mov
and
out
jge
pop
movs
push
jb
rol
shl
fwait
(bad)
cwde
add
int3
pop
jbe
dec
push
jle
mov
mov
out
inc
jae
pop
xchg
push
push
mov
cmp
(bad)
mov
pop
int
out
iret
iret
cmp
inc
xor
int3
jns
shl
call
retf
dec
ja
(bad)
dec
(bad)
aaa
outs
inc
sbb
lahf
outs
mov
inc
(bad)
xchg
in
div
or
adc
icebp
outs
mov
int3
sti
and
stos
push
movs
xor
mov
bound
xchg
out
in
push
lock
lea
icebp
cmc
jmp
xchg
jmp
in
adc
jnp
ret
call
cmps
push
sbb
mov
stos
test
adc
in
call
cdq
lods
or
lods
and
pushf
push
pushf
mov
dec
mov
repnz
movs
or
stos
xchg
cmp
retf
stos
ret
fisttp
enter
out
mov
dec
gs
xlat
adc
dec
jo
push
sub
pop
and
pop
test
hlt
inc
adc
push
mov
popf
add
rol
fmul
pop
mov
sub
cmp
clc
nop
adc
std
leave
leave
cs
add
test
or
push
iret
fnstcw
pop
sbb
cld
jno
push
mov
outs
mov
(bad)
rol
sub
push
loope
jmp
ins
add
stos
add
lea
sahf
test
sub
or
mov
mov
mov
adc
fdivr
int3
pop
adc
pop
cmps
fistp
clc
loope
cdq
mov
out
(bad)
retf
mov
xor
or
ds
repz
stos
cs
cdq
mov
cmp
sub
mov
pop
int
adc
loope
cld
movs
cmp
aam
and
mov
mov
mov
or
adc
(bad)
ss
cdq
arpl
mov
xchg
iret
bsr
sbb
hlt
lods
movs
pop
or
out
lods
loop
or
mov
xchg
dec
adc
pop
add
push
xchg
pop
adc
fisttp
cmp
fcmovbe
mov
sbb
shr
adc
or
cwde
inc
jae
lods
xor
mov
push
outs
cli
test
cs
jg
push
call
mov
mov
dec
outs
call
dec
mov
adc
ror
movs
push
ja
shr
outs
int
cmp
pop
call
jbe
xchg
les
sar
into
push
jne
(bad)
(bad)
xchg
inc
fs
push
mov
mov
mov
sbb
mov
ja
aaa
xor
(bad)
cld
ficom
xchg
mov
mov
mov
pop
and
out
stos
adc
in
xor
or
call
repnz
jmp
jp
mov
pop
or
dec
jle
dec
sahf
movs
xor
or
adc
(bad)
fist
imul
jo
mov
mov
js
popf
stos
mov
xor
sub
(bad)
sub
ficomp
cmc
cmp
out
fcomp
jmp
jne
mov
jne
jnp
push
cmp
(bad)
pop
jne
or
xor
fisttp
mov
or
(bad)
sub
stc
loop
cmc
movs
mov
fisttp
lods
inc
test
sub
cmps
lods
lock
adc
push
cld
pop
push
add
sbb
js
bound
test
xchg
jo
xchg
loope
inc
cld
pop
sar
into
jle
dec
inc
xor
mov
ds
inc
xor
fsubr
xor
leave
das
mov
pop
mov
jne
add
in
fs
inc
mov
and
fadd
out
mov
and
add
push
int3
int
imul
ins
pop
jae
fwait
sub
aas
mov
dec
loope
and
jae
cmp
pusha
xor
rol
test
xor
int
in
xchg
lods
push
inc
rcr
ss
inc
cmp
mov
repz
das
adc
sbb
mov
loopne
out
ficom
aam
jge
data16
inc
jne
sub
not
push
fmul
or
adc
hlt
pop
adc
jp
(bad)
push
(bad)
fsubr
and
ja
cmp
in
mov
jbe
pushw
cdq
dec
fldenv
mov
cmps
scas
jge
pop
pop
push
stos
push
jmp
xor
inc
addr16
jmp
dec
dec
int3
cmp
xor
pusha
mov
leave
test
loopne
sahf
jg
cmc
inc
sbb
ins
pop
mov
arpl
mov
lods
pop
daa
adc
cdq
fucom
ins
mov
lods
test
call
fisubr
iret
or
shl
out
or
jae
and
pop
mov
dec
dec
cmp
jmp
dec
sub
outs
fstp
aas
ret
pop
dec
dec
pop
push
or
cmps
das
adc
push
sub
test
adc
movs
test
call
inc
sub
(bad)
push
and
mov
je
lds
xchg
add
xchg
repnz
cmp
mov
add
les
sbb
retf
and
mov
mov
jl
push
adc
popa
mov
inc
mov
dec
cmp
mov
sub
adc
(bad)
jbe
(bad)
push
xchg
jge
aaa
mov
mov
adc
dec
cmp
mov
xor
(bad)
rcl
jmp
mov
push
inc
call
pop
xor
pop
sbb
mov
push
sahf
or
mov
inc
shl
or
fdivr
cmc
xchg
in
sbb
jo
mov
enter
or
aas
sbb
sbb
or
(bad)
int
bnd
nop
xlat
stos
inc
jno
neg
xchg
mov
in
xor
dec
pop
fs
aaa
jecxz
not
lods
mov
loope
scas
mov
or
dec
inc
push
jae
push
xor
jb
inc
fldenv
out
(bad)
loope
ds
retf
add
stos
mov
mul
fs
or
arpl
push
and
mov
sub
retf
xchg
adc
xor
mov
(bad)
loopne
bound
jge
add
inc
(bad)
in
fsin
mov
mov
adc
aas
clc
lds
cmp
and
push
push
jecxz
jae
mov
and
dec
sbb
arpl
rcl
jmp
and
retf
rol
xchg
push
hlt
je
mov
jmp
enter
popa
push
dec
sbb
add
shr
in
test
or
outs
ins
aad
dec
jo
jmp
mov
movs
aaa
fdivr
test
mov
pop
mov
sahf
ja
or
mov
mov
shld
xor
or
xchg
pop
sbb
push
lods
lds
retf
sub
popa
imul
lds
stc
jmp
mov
daa
or
jmp
ror
fimul
push
out
sub
dec
bound
mov
xor
cmps
or
js
mov
out
fsubr
ds
pop
mov
pop
sbb
sar
nop
repz
je
jno
jno
sahf
xchg
xchg
inc
lock
arpl
outs
sbb
pop
cmps
xchg
outs
push
sub
(bad)
das
les
cmp
aas
and
xchg
in
xchg
jge
push
repnz
mov
mov
dec
pop
test
int3
lods
imul
xor
mov
mov
pop
inc
or
adc
cwde
dec
das
(bad)
jno
jp
cwde
add
loopne
repz
cmp
(bad)
test
es
stc
dec
fadd
jns
pop
and
test
sti
push
sbb
leave
adc
dec
in
mov
jmp
or
xor
es
out
repz
call
cmp
sub
std
mov
adc
cmp
xor
test
nop
outs
sub
xchg
ror
fidiv
leave
add
or
fld
pop
out
pushf
fs
pop
mov
sti
push
enter
repz
fstp
xchg
jp
leave
test
cwde
dec
aad
mov
sub
jb
pcmpeqw
fdiv
aam
xor
sbb
dec
jmp
call
push
ss
jge
jl
pop
adc
dec
outs
sbb
inc
or
sub
pop
imul
retf
pop
and
scas
fnstsw
adc
pop
or
ror
(bad)
xlat
mov
es
mov
movs
inc
jecxz
push
and
inc
lds
jb
xchg
imul
push
sbb
xor
mov
repnz
popa
jne
ss
pop
cmp
and
mov
or
push
fs
and
pop
or
xor
or
jbe
cmp
cwde
ret
clc
inc
mov
sbb
cdq
mov
mov
mov
das
add
lock
(bad)
and
aas
sub
mov
mov
push
jmp
(bad)
rcr
jecxz
enter
pop
push
push
push
fimul
jp
hlt
mov
int3
lods
into
or
xor
ret
data16
cmp
sti
into
xchg
ss
in
je
in
fst
xlat
out
mov
cmp
inc
xor
sub
adc
movs
jo
jg
repz
(bad)
sar
rol
adc
xchg
push
test
aas
mov
pop
or
inc
stos
sbb
in
aas
push
mov
add
pmaxub
bound
xor
hlt
push
out
cmp
movs
xchg
inc
sub
pop
jnp
xlat
fsubr
jle
mov
ss
das
fs
in
mov
or
mov
xor
fs
push
mov
sahf
(bad)
hlt
xchg
movs
jl
sbb
inc
enter
in
push
lahf
(bad)
dec
out
mov
call
dec
xchg
xchg
push
clc
push
sbb
cwde
pop
call
fsubp
rol
inc
mov
fnstsw
aam
and
and
jbe
inc
into
cwde
adc
jne
stos
or
pop
sahf
adc
push
sbb
popf
sbb
inc
in
xchg
jbe
adc
in
fsub
nop
mov
test
jle
xchg
cdq
int
outs
addr16
nop
mov
cwde
fwait
jl
xor
mov
mov
jae
les
fisubr
xor
push
inc
rol
adc
or
cwde
push
retf
adc
ret
popa
ret
cli
mov
xlat
push
dec
hlt
mov
inc
imul
in
arpl
ficom
sar
adc
imul
mov
mov
add
xchg
dec
sub
jno
pop
in
cmp
sbb
sbb
mov
(bad)
cmps
mov
aad
pop
cs
xchg
pop
mov
ret
mov
add
jmp
scas
xor
dec
and
lds
arpl
cmp
std
popf
add
leave
icebp
sbb
out
xor
ins
mov
pop
jae
jg
scas
xor
sbb
jge
or
xor
dec
gs
adc
xor
dec
xor
xchg
pop
dec
pop
pop
outs
adc
push
xchg
loopne
fidivr
jle
cmp
mov
sub
jno
sub
in
pop
mov
cmp
mov
test
push
psraw
shl
xchg
xchg
jmp
stos
test
into
rcr
sar
mov
mov
push
pop
int3
das
mov
in
pushf
cmps
xchg
dec
inc
rcr
pop
pop
xchg
pop
rcl
cdq
cmp
xor
cmps
cwde
jecxz
mov
xlat
scas
inc
xchg
add
mov
cmp
xor
jmp
xchg
out
inc
sar
retf
inc
ffree
mov
sbb
sbb
lea
jns
and
out
or
pushf
stos
xor
out
jmp
sub
sbb
adc
push
dec
std
xor
cmp
mov
leave
popf
pushf
mov
mov
add
pushf
pop
inc
inc
xlat
sub
not
fsincos
(bad)
repnz
inc
in
mov
stc
retf
lahf
push
mov
not
xor
nop
fdiv
adc
aas
xor
pop
aam
arpl
jmp
scas
sbb
and
ins
call
nop
or
(bad)
adc
inc
fdivr
push
adc
nop
rol
outs
(bad)
mov
test
scas
inc
sub
dec
push
inc
add
cmc
sub
dec
repnz
mov
jle
dec
mov
push
pop
lock
push
jno
lds
outs
mov
cmp
add
inc
aad
sti
out
lock
xchg
popa
dec
dec
and
push
popf
ja
pop
mov
adc
retf
mov
imul
in
jmp
pop
iret
adc
int3
or
jmp
pushf
push
mov
sbb
push
cmp
fidiv
dec
lods
mov
or
and
dec
(bad)
(bad)
cmp
out
add
out
(bad)
jmp
clc
mov
ds
xor
(bad)
lea
jne
mov
jo
adc
fwait
pop
adc
aaa
or
fst
mov
ss
jmp
cmps
pop
sti
sub
push
(bad)
gs
cmc
sti
sub
jecxz
clc
jge
pinsrw
xor
dec
stc
outs
mov
outs
fisubr
sbb
sub
test
cmp
shl
push
test
mul
arpl
and
ins
dec
into
fstp
adc
mov
and
add
jnp
adc
(bad)
rol
sbb
mov
aaa
fwait
cmps
iret
mov
mov
xor
imul
dec
cmp
les
add
cmp
xor
data16
out
cmp
retf
nop
jne
or
ds
inc
mov
cld
pop
pop
xchg
jmp
xchg
fwait
or
rcl
jne
and
lahf
outs
inc
es
inc
jns
cmp
bound
jae
sub
call
and
mov
mov
xor
xchg
pop
jae
pushf
(bad)
les
lahf
add
adc
adc
mov
inc
in
or
sub
in
pop
cld
stos
adc
cld
out
add
mov
jae
hlt
pop
add
sbb
mov
xchg
push
test
sbb
dec
sbb
daa
inc
xchg
cmps
js
mov
adc
cvttps2pi
jbe
mov
dec
ds
das
rcr
pop
mov
cmp
push
jg
push
gs
add
or
addr16
dec
xchg
in
repz
(bad)
jne
scas
ja
jle
test
xchg
retf
add
push
fcomp
(bad)
and
mov
aad
mov
dec
ja
mov
sbb
jo
lock
aam
popa
outs
dec
iret
sahf
cmp
popa
in
retf
pop
or
jno
push
cmc
lahf
xchg
mov
push
lds
xchg
lea
rcl
outs
mov
xchg
pop
(bad)
push
sbb
cld
cmp
fs
adc
jmp
mov
sbb
fstp
dec
enter
scas
(bad)
out
(bad)
frstor
jecxz
adc
adc
(bad)
in
js
nop
jmp
aas
push
pop
inc
and
jno
test
lds
hlt
imul
sbb
inc
fsubrp
das
inc
mov
mov
lahf
push
jp
or
(bad)
stc
mov
dec
jge
sub
stos
(bad)
adc
sbb
inc
dec
aad
lods
cs
or
fsub
dec
cdq
cmp
retf
fs
sub
adc
dec
mov
loopne
adc
mov
jb
inc
inc
out
lods
and
jmp
pusha
in
movs
cwde
stc
test
sar
not
adc
add
in
sar
int
mov
js
push
pop
mov
sub
je
test
cmp
push
dec
mov
daa
pop
jnp
fadd
stc
mov
js
jmp
loope
push
jg
and
mov
ss
sub
jb
adc
cmp
cmps
rcr
retf
or
cdq
sbb
out
add
jg
xor
leave
lahf
mov
xor
push
popa
shl
mov
daa
sub
pop
outs
cwde
div
std
push
mov
popf
pop
inc
add
rol
(bad)
dec
cmp
mov
or
fistp
sub
fmul
sbb
test
pushf
rcr
test
adc
pop
xchg
sbb
sub
xchg
jecxz
xlat
dec
push
or
dec
mov
push
pop
lea
xchg
push
sbb
inc
imul
add
icebp
mov
mov
fsub
sub
sbb
arpl
fwait
xor
stc
lods
mov
pop
rol
adc
test
pushf
jmp
add
(bad)
lss
pop
jns
jecxz
(bad)
sub
ret
ds
test
retf
push
push
xor
cwde
push
jmp
sar
sbb
xchg
xchg
mov
jne
pop
or
cmps
xchg
or
pop
mov
repz
pop
inc
jb
movs
push
js
ror
xchg
adc
call
sbb
jl
push
cld
call
mov
add
bound
aas
into
mov
jg
sbb
mov
mov
adc
sbb
(bad)
stos
pusha
leave
ins
lods
aaa
test
cli
pop
push
jl
jbe
outs
iret
mov
fadd
movs
inc
push
(bad)
mov
movs
stos
push
push
lods
or
cdq
add
mov
das
ret
test
add
sbb
cmc
mov
mov
into
mov
mov
cmps
retf
ret
test
fdiv
add
stos
retf
dec
movs
push
mul
fmul
jbe
loop
imul
jl
adc
dec
push
fadd
sub
(bad)
jne
mov
stc
add
cmp
jle
adc
cmp
xlat
cmp
lock
xor
cmp
mov
inc
adc
aad
and
push
arpl
mov
xchg
lods
xor
les
fmul
mov
jmp
add
nop
or
pop
mov
sub
inc
fldenv
js
push
cwde
out
dec
jmp
retf
jns
ret
ds
fcomi
leave
xchg
out
pop
mov
sbb
out
ficomp
jp
adc
jb
cmp
adc
out
sbb
push
mov
jmp
cmp
leave
jmp
shr
pop
add
(bad)
inc
test
dec
mov
sub
cdq
addr16
mov
or
shr
fisttp
jmp
add
lods
scas
cwde
popa
xchg
mov
adc
dec
sbb
mov
mov
jbe
dec
sub
scas
ins
call
dec
iret
sbb
clc
adc
pop
mov
mov
adc
pop
rsm
cmp
push
out
dec
xchg
mov
mov
mov
addr16
xchg
jae
add
out
or
push
pop
aas
test
xchg
xor
xor
cmp
fisttp
sbb
(bad)
mov
enter
jne
nop
push
mov
sub
cmp
mov
ja
int
xor
inc
mov
ss
mov
fcomp
out
inc
mov
sbb
xor
out
adc
cmc
jno
(bad)
sar
gs
push
jmp
jmp
(bad)
aad
fstp
outs
imul
inc
xor
sbb
in
jmp
fs
jge
loopne
mov
push
pop
nop
sbb
dec
cld
ret
pop
imul
shr
adc
xor
rcr
cwde
add
push
mov
sbb
cwde
pop
nop
(bad)
lods
mov
sbb
jle
pop
xor
add
outs
jmp
outs
not
inc
inc
sub
cdq
dec
adc
cmp
retf
iret
mov
xchg
div
add
xchg
icebp
outs
xchg
sub
fwait
gs
ret
mov
and
inc
inc
mov
cmc
mov
xor
jnp
nop
adc
sbb
sub
dec
xchg
push
or
push
mov
mov
adc
and
stos
cmp
push
or
and
sub
dec
xchg
cmp
stc
mov
outs
mov
sub
stos
xchg
ins
push
imul
pop
stos
rcl
sub
nop
mov
sbb
fistp
sbb
jmp
sub
iret
ss
mov
jle
out
mov
xchg
mov
inc
dec
fld
(bad)
data16
fadd
cld
sub
or
xchg
inc
(bad)
repz
dec
and
push
dec
into
arpl
ret
ret
ret
mov
das
data16
and
and
xchg
(bad)
dec
and
cmc
les
pop
dec
pop
fucomp
cld
aad
pop
mov
test
lods
sbb
inc
mov
ds
mov
test
jmp
test
cwde
jmp
clc
in
nop
cld
mov
dec
and
retf
jo
movs
mov
add
push
adc
cmp
daa
pop
ja
addr16
jmp
inc
mov
sub
push
mov
add
out
ins
jmp
mov
push
jge
js
js
das
(bad)
aad
sti
mov
cs
dec
adc
mov
or
es
loopne
and
dec
xor
mov
xor
dec
repnz
fnstenv
(bad)
scas
(bad)
sub
adc
and
xchg
test
les
popa
and
inc
pop
test
call
push
je
sbb
(bad)
das
shl
inc
pop
or
cld
dec
rcr
ins
movups
pop
cmp
int
imul
stc
shr
mov
inc
sbb
sbb
outs
mov
lock
fdivr
mov
cmp
movs
sub
push
popa
mov
push
push
mov
lahf
add
(bad)
mov
jge
sub
js
adc
push
or
jmp
jge
push
xor
jl
lods
ret
cdq
and
mov
mov
xor
popa
aad
loopne
rcl
push
stc
gs
jge
mov
mov
xchg
repz
repz
sti
outs
push
(bad)
lock
call
xchg
xchg
or
push
cld
xchg
sub
xor
in
ret
xchg
sbb
push
jg
inc
aaa
test
adc
cmp
cmp
mov
or
imul
loopne
cmp
xor
into
jmp
jne
lods
sbb
and
or
add
retf
cld
sti
and
adc
dec
xor
fchs
or
mov
jne
test
push
adc
inc
push
cwde
mul
or
fs
cmc
popf
rol
aad
pusha
pop
ins
div
mul
inc
dec
sar
and
or
xor
fucomp
adc
push
arpl
adc
mov
jle
pop
jno
icebp
stos
mov
inc
push
pop
rol
cmp
push
push
fsub
mov
dec
adc
inc
aaa
icebp
shr
push
xchg
test
dec
xchg
cmp
pop
nop
add
dec
and
inc
mov
pusha
rcr
in
mov
call
and
leave
std
mov
test
cmp
pop
ins
xchg
inc
adc
ja
pop
je
sahf
ins
sub
inc
mov
(bad)
mov
ficom
ja
pop
pop
ja
into
adc
sub
out
add
mov
repnz
add
cmp
mov
dec
fwait
sub
sahf
xchg
mov
sub
jnp
lock
clc
push
add
ret
repnz
ss
cmp
mov
pop
or
test
adc
xchg
push
jno
hlt
les
out
imul
mov
dec
pop
jle
fnsetpm(287
pop
lahf
jg
cmc
and
push
pusha
dec
xchg
dec
jno
aad
mov
and
add
dec
cmc
push
xor
pop
fdivp
xchg
sbb
in
jne
jge
dec
imul
xchg
jmp
and
retf
(bad)
test
xchg
mov
xchg
outs
not
daa
stos
lea
scas
jae
out
add
mov
xchg
push
shl
push
xor
into
jne
pop
fwait
jecxz
pop
sub
xchg
and
test
jb
mov
push
fsubr
jmp
(bad)
and
cli
neg
mov
in
dec
test
push
sub
adc
inc
ret
cmps
inc
loop
lods
sub
adc
test
movs
ss
mov
push
cmp
mov
test
inc
and
adc
arpl
or
inc
fnstsw
mov
mov
xor
leave
test
push
cmp
jno
sbb
mov
(bad)
pop
jl
xor
fadd
(bad)
sahf
mov
mov
loopne
repnz
call
clc
shl
repz
in
bound
outs
push
xchg
pushf
shl
cmp
jno
xchg
into
fwait
call
xchg
sub
rcr
stc
aaa
out
add
in
sub
jbe
mov
xchg
loop
ror
arpl
fwait
(bad)
jge
pushf
and
into
push
adc
fild
mov
add
push
shl
sbb
call
inc
shr
dec
jmp
rcr
dec
jl
add
fcomp
dec
mov
push
imul
test
out
retf
aam
dec
retf
lea
cmp
sbb
and
jae
lds
jb
call
jg
mov
xchg
cdq
push
xchg
or
jecxz
mov
movs
mov
sub
(bad)
fistp
adc
loopne
cdq
or
and
cmp
out
mov
cmp
aad
out
xchg
sbb
test
sub
loope
and
or
sub
xor
dec
sub
xchg
gs
push
jo
test
mov
add
call
mov
into
or
xchg
punpckldq
mov
and
inc
ffreep
aad
xchg
inc
or
fstp
xchg
je
xchg
(bad)
jae
(bad)
outs
outs
bound
and
xchg
push
xor
out
jne
cmp
sahf
push
pop
enter
cmp
test
add
movs
lea
pop
les
das
aaa
or
add
test
into
out
adc
inc
jnp
idiv
push
or
adc
(bad)
test
mov
test
pop
jge
in
or
dec
nop
dec
mov
mov
(bad)
fnstsw
lock
in
adc
adc
mov
lock
adc
push
(bad)
imul
es
dec
inc
adc
lods
fst
lahf
or
push
xchg
dec
pop
aas
mov
and
inc
dec
out
into
jb
shl
gs
(bad)
adc
jae
xor
fwait
cwde
jmp
test
(bad)
lds
add
loop
imul
add
xchg
scas
sub
inc
paddb
xor
add
pop
enter
push
imul
stc
ja
cmp
push
je
cmc
adc
sbb
pop
mov
xchg
or
(bad)
cli
enterw
push
loope
jl
inc
sar
mov
mov
shl
je
dec
cld
loopne
sub
xchg
popa
retf
out
ds
je
addr16
pop
es
clc
push
or
inc
pushf
or
mov
std
data16
or
dec
hlt
cmp
rcl
pushw
cwde
inc
loopne
lods
into
sub
and
cmps
call
shl
pushf
sti
mov
lahf
adc
lahf
movs
addr16
std
adc
mov
dec
add
mov
push
out
in
adc
xchg
inc
fsub
enter
pop
jg
pop
lahf
cmp
in
xchg
repz
sub
(bad)
add
or
xor
pushf
pop
pop
(bad)
hlt
inc
fimul
sub
adc
sbb
ins
add
fbstp
shr
pop
pop
xor
xor
adc
fwait
sbb
xor
sub
add
cmp
leave
stc
out
jb
jecxz
es
loopne
out
adc
fsubp
lahf
push
adc
outs
out
jb
cdq
cmps
pop
in
cdq
enter
xchg
add
mov
out
jnp
icebp
call
into
aad
mov
mov
aam
out
js
jns
fcomp
pop
test
ds
cmp
jbe
sbb
loopne
jmp
aad
lock
js
out
call
mov
addr16
add
adc
test
fwait
or
clc
push
cs
jns
cld
out
popf
idiv
clc
cmps
mov
mov
add
jmp
cmp
cmps
pushf
aad
fld
dec
test
cmps
hlt
push
sbb
xchg
retf
les
js
jl
(bad)
xlat
(bad)
lea
shl
repnz
dec
push
mov
inc
push
xchg
and
je
inc
sbb
jb
loopne
jns
add
fsubr
popa
push
add
xchg
lea
mov
mov
mov
mov
mov
push
xor
mov
sbb
and
dec
xchg
inc
addr16
pop
cmps
rol
les
cmp
hlt
xor
mov
fsubr
sbb
sbb
mov
mov
dec
and
in
repnz
xrelease
ja
ficom
xchg
or
jbe
adc
cmp
mov
loopne
(bad)
call
jecxz
shr
cmp
ins
mov
pop
mov
jle
in
mov
dec
sub
push
xchg
imul
cdq
cmp
bnd
repz
mov
add
push
xchg
mov
dec
stos
mov
cli
add
cli
int
arpl
in
shr
paddw
pop
mov
das
loop
sbb
dec
(bad)
mov
outs
xor
mov
sub
mov
pusha
xor
dec
adc
dec
mov
adc
cmc
jg
movs
out
in
fs
sub
popf
jg
cmp
add
sub
adc
arpl
ins
sub
mov
add
pop
mov
pop
push
cmc
inc
ss
dec
fs
push
xchg
jne
shr
in
addr16
out
xchg
repz
jns
adc
add
inc
into
or
aam
jbe
push
movs
cmps
ret
imul
hlt
fsub
lods
push
xor
int3
push
jno
jge
mov
nop
mov
movs
aad
pop
mov
(bad)
rcr
cmps
dec
mov
in
ret
ror
std
movs
push
sbb
adc
jmp
pop
xchg
(bad)
enter
push
push
bound
pop
daa
pop
adc
repnz
sub
sbb
cld
cld
sbb
movs
add
adc
or
repnz
(bad)
ror
cmp
sbb
and
out
lods
adc
fbstp
fild
(bad)
outs
xchg
into
test
aas
pavgb
xchg
and
jle
and
jg
test
sbb
adc
sub
retf
sub
jns
mov
not
xor
jnp
mov
sbb
dec
mov
or
test
cdq
fld
cmp
xor
lahf
mov
xchg
std
retf
fwait
ret
gs
xchg
retf
out
xlat
(bad)
ds
rol
(bad)
mov
mov
jecxz
lds
rcr
inc
or
test
push
pop
jno
fldenv
ret
adc
xor
sbb
add
sub
or
sahf
inc
jmp
in
das
push
or
je
cmp
adc
push
aas
jne
xchg
ins
shr
cli
fdivr
xor
sub
sub
rcl
sbb
ins
jmp
jge
and
(bad)
adc
adc
jecxz
rol
repz
aaa
dec
popa
mov
dec
jae
cmp
leave
cmp
push
jmp
jo
sbb
jns
lods
cmp
psubw
out
xor
out
adc
add
sbb
jge
gs
pop
and
or
sub
sub
jae
cmp
push
jmp
(bad)
inc
sahf
scas
stc
iret
add
adc
sub
dec
mov
movs
xor
mov
aaa
es
and
add
sbb
pop
pop
addr16
sbb
mov
jg
in
jo
je
gs
pop
xchg
dec
sub
cmovnp
dec
xor
fisub
(bad)
dec
xacquire
and
sub
mov
gs
xchg
mov
int3
push
sub
leave
sbb
call
jecxz
inc
lahf
cld
jo
scas
les
cwde
and
push
mov
imul
mov
xchg
sbb
rcr
stc
xor
jmp
push
int
inc
imul
pusha
je
adc
cli
jnp
test
jne
xlat
mov
adc
retf
(bad)
jmp
pop
sbb
paddsb
sar
cmp
mov
and
cmp
minps
sbb
dec
cli
aam
dec
mov
fs
pop
push
sbb
or
sahf
shr
idiv
(bad)
out
cli
jle
pusha
test
dec
mov
and
les
mov
int
jle
pop
rcl
pushf
lock
in
inc
xchg
lahf
xor
lods
push
cmp
jecxz
adc
jecxz
mov
stos
push
mov
out
push
add
dec
push
xchg
mov
and
imul
sub
or
pop
inc
mov
and
aaa
pop
inc
mov
inc
pop
inc
and
mov
dec
pop
mov
hlt
and
pusha
or
inc
push
mov
stc
(bad)
rcr
outs
jno
or
mov
xchg
adc
in
cmc
and
push
hlt
out
push
xchg
adc
mov
stos
xor
mov
dec
jl
jl
jge
arpl
mov
ins
inc
pop
movs
das
jmp
and
nop
leave
pop
(bad)
(bad)
xor
inc
clc
jae
add
fiadd
mov
pop
cmp
mov
lods
or
mov
movs
int
cmc
nop
pop
mov
aas
movs
fs
mov
or
jp
xchg
aam
add
sbb
cmc
les
adc
mov
out
jno
jne
add
loopne
mov
(bad)
push
loopne
lock
mov
xor
sub
(bad)
out
jl
sar
adc
movs
adc
nop
jbe
popf
mov
in
sar
sub
pusha
mov
or
cmps
stos
push
jae
adc
(bad)
cld
fmul
and
cmp
retf
sahf
cmp
mov
inc
sub
xlat
in
shr
jmp
dec
pop
icebp
mov
imul
dec
sub
(bad)
add
cmp
inc
xchg
lahf
xchg
pop
or
(bad)
jae
mov
gs
cdq
jmp
push
sub
inc
push
mov
dec
xor
pushf
sub
dec
sbb
mov
sahf
call
xor
mov
mov
inc
fimul
fld
popa
or
mov
adc
sub
add
and
cmp
ins
mov
clc
in
pop
sbb
jmp
ins
arpl
ins
pop
loopne
push
sbb
shr
test
mov
test
in
shr
ds
cmps
call
pushf
lea
push
in
popf
test
(bad)
or
fwait
sub
add
mov
jge
test
sub
xor
ja
fadd
popa
or
sar
add
jl
retf
rcr
sti
adc
xchg
fsub
push
or
mov
and
js
jae
jno
outs
data16
mov
sar
push
loopne
jecxz
xor
or
not
rcr
sub
rcl
ret
or
push
pop
clc
jp
aaa
xchg
cmp
fstp
xchg
test
mov
sti
xchg
add
sub
(bad)
pop
je
mov
loopne
push
jle
out
adc
fcomp
add
test
ret
outs
inc
not
or
jb
sahf
dec
adc
mov
jne
repnz
loopne
pop
and
sub
outs
jecxz
out
and
add
adc
xor
mov
shl
push
pushf
sbb
fwait
test
daa
aam
mov
aas
jnp
fdiv
mov
fs
push
dec
inc
sbb
sbb
xchg
lods
and
test
or
js
out
or
imul
jmp
jnp
mov
aaa
clc
pop
ds
pop
mov
loope
in
sahf
adc
or
sub
dec
fisubr
mov
and
add
clc
add
and
push
add
popa
dec
cmp
dec
rcr
jle
add
sbb
imul
or
mov
das
jl
cmps
sub
rol
in
int
es
pushf
mov
adc
(bad)
or
iret
lods
mov
push
pop
test
iret
cs
out
fsub
adc
cmps
retf
jnp
cdq
arpl
icebp
jo
sar
xchg
pop
mov
in
sbb
mov
leave
or
dec
inc
test
inc
cld
fs
jl
fisttp
in
cmp
ror
jecxz
int
and
les
je
adc
loopne
or
cdq
imul
dec
adc
or
nop
and
push
inc
lods
and
or
xchg
fbld
push
mov
cmc
jns
movs
inc
(bad)
mov
mov
add
mov
fs
movs
cmp
into
(bad)
dec
stos
sub
clc
xchg
mov
mov
and
mov
mov
lds
js
jno
test
mov
mov
xchg
adc
mov
jecxz
mov
nop
lods
inc
mov
rcl
and
aad
push
gs
das
mov
jo
or
rcl
mov
add
push
in
cs
pop
inc
aaa
mov
xor
aad
fist
sbb
retf
xlat
or
es
pop
leave
jne
mov
test
cld
sub
cdq
add
push
retf
in
push
andnps
jno
aas
dec
sub
fs
jne
rcr
cmps
mov
cld
pop
clc
test
int
sub
add
ins
imul
das
les
mov
pop
mov
loope
jecxz
in
add
dec
data16
mov
pop
test
push
loope
cmc
cmps
sub
mov
loop
sbb
das
in
es
push
cmps
sub
rcl
loopne
ins
leave
fnstenv
push
or
(bad)
vpaddq
int
mov
mov
adc
push
adc
cmc
daa
mul
stos
mov
jb
not
inc
jmp
push
mov
int3
push
outs
add
ret
push
lock
rol
mov
or
adc
push
push
rcl
jns
or
xchg
add
jnp
cwde
ficom
cmc
daa
std
dec
mov
mov
add
push
lahf
lods
inc
cmp
shl
sub
mov
jle
adc
mov
add
cmp
out
test
and
mov
sti
push
mov
xchg
dec
or
add
adc
inc
adc
das
fcom
adc
adc
std
movs
cld
gs
push
mov
jno
sbb
gs
and
inc
jbe
xchg
push
test
aad
xor
jns
shl
sbb
inc
push
fwait
pop
fnstcw
xchg
fdivr
ret
test
sub
cmp
or
test
sar
lods
sub
sti
add
sub
stos
and
call
mov
inc
pop
add
ins
ja
jle
add
push
push
mul
stos
mov
scas
mov
(bad)
jmp
rcr
addr16
xchg
mov
adc
pop
fwait
inc
inc
movs
jbe
dec
jmp
shr
repz
or
push
mov
dec
popf
or
retf
leavew
adc
or
jle
inc
and
dec
neg
leave
stc
sub
sar
jg
push
push
int
(bad)
cmp
add
pop
dec
xchg
mov
adc
or
inc
dec
mov
pop
jae
pop
and
loope
push
je
out
inc
js
stos
lods
or
les
jb
cmp
icebp
inc
test
pop
fist
test
sbb
pop
or
loopne
push
dec
push
stc
cmps
out
out
repnz
dec
fimul
xor
(bad)
out
add
mov
ret
jno
jno
or
inc
mov
je
push
add
gs
stos
or
cmp
in
xor
pop
cdq
adc
push
push
int
sub
and
xchg
sbb
(bad)
jge
cmps
and
cs
out
inc
outs
xor
jns
movs
hlt
mov
push
mov
bswap
sub
(bad)
in
test
add
ficom
dec
sbb
mulps
jmp
push
ret
mov
int3
mov
add
sar
jmp
mov
jns
sti
data16
js
inc
in
push
in
lock
js
xor
ret
sbb
scas
aaa
or
sar
dec
xchg
stos
add
stos
inc
jnp
pusha
or
push
ror
retf
(bad)
sbb
test
imul
in
mov
add
clc
call
mov
addr16
push
jge
mov
pop
pop
ror
pop
adc
mov
lds
push
pop
(bad)
lods
movs
mov
inc
shr
pop
fadd
adc
retf
mov
xor
or
push
(bad)
sbb
rcl
arpl
lahf
and
push
xchg
and
pop
mov
lods
push
std
lods
inc
sti
jp
jns
out
in
mov
and
push
mov
xor
call
inc
pop
movs
ds
and
inc
call
mov
mov
push
dec
test
(bad)
bound
lock
call
pop
stc
cmp
mov
mov
ja
out
test
push
push
(bad)
add
mov
lahf
inc
xchg
cmps
arpl
mov
movs
iret
cli
pop
dec
cmp
mov
cmp
mov
aam
fs
shr
pop
call
int
inc
movs
in
sub
movs
jns
adc
div
push
jnp
mov
ds
shl
stos
jp
inc
or
or
jo
std
aad
pusha
test
sbb
psubusw
dec
and
jne
enter
out
jp
pop
sbb
inc
fucomp
movs
and
lock
inc
xchg
int3
retf
(bad)
adc
fst
call
loope
dec
add
dec
pop
mov
mov
pop
xchg
inc
inc
loope
rol
mov
out
cmp
sbb
inc
je
loope
sbb
jno
jg
xchg
pop
mov
aam
div
pop
(bad)
sbb
dec
nop
lahf
leave
(bad)
cmp
and
jmp
fsub
dec
lock
dec
inc
dec
aaa
test
sub
pop
(bad)
jmp
cmp
dec
mov
push
add
mov
push
popf
iret
push
xchg
or
sbb
iret
outs
or
fist
imul
(bad)
push
int3
mov
or
dec
icebp
xchg
jge
mov
mov
(bad)
adc
jge
out
dec
xchg
cmp
jne
jnp
dec
test
and
stos
adc
xor
inc
(bad)
and
mov
ss
jle
enter
sub
mov
add
push
mov
inc
aad
jo
adc
mov
jmp
fisub
aam
lds
inc
in
xchg
fdivr
cdq
movs
fdivp
fild
lods
jge
mov
(bad)
pop
out
sar
push
popa
int
pop
mov
lea
bound
xchg
mov
dec
inc
enter
lahf
push
jmp
mov
sub
jb
push
enter
rcr
fdiv
mov
int3
sbb
sub
outs
adc
ins
pop
rcl
cli
or
cli
sub
or
xor
xor
mov
add
or
mov
ret
or
(bad)
lahf
xchg
mov
sub
sub
dec
mov
mov
int
in
xchg
stos
push
cmps
lods
xchg
push
pushf
fs
pop
icebp
dec
xchg
adc
leave
nop
xor
pop
or
div
xchg
inc
clc
imul
setnp
ins
inc
pop
repnz
xchg
fcmovnu
popa
enter
push
dec
add
stos
lahf
pop
aaa
fdiv
inc
cmp
retf
push
pop
mov
push
cmps
call
in
lods
mov
arpl
(bad)
cli
or
aad
ror
jne
xor
xor
pop
mov
pop
loopne
sbb
xor
stc
mov
daa
std
pop
cmps
pop
movs
push
imul
nop
sub
mov
mov
ret
pusha
mov
dec
sbb
xchg
cmp
dec
loope
rdmsr
fadd
xor
add
adc
or
or
xchg
loopne
pop
jg
push
repz
xor
jo
fst
adc
push
aaa
mov
dec
dec
push
xor
out
mov
push
jnp
or
jg
xor
rcr
xlat
xchg
mov
mov
lock
jge
sub
leave
add
and
ja
(bad)
das
cmp
cmps
sbb
adc
dec
jae
pop
enter
and
push
js
xchg
and
add
or
inc
out
mov
int3
test
and
(bad)
out
sbb
jbe
fisubr
mov
mov
mov
sbb
push
or
inc
pop
mov
inc
ret
daa
in
daa
aaa
cmp
sbb
ret
retf
(bad)
mov
pop
push
cmps
rcr
jle
cmps
fxch
icebp
jne
mov
ds
add
retf
fisttp
cmp
or
mov
(bad)
movs
repnz
pop
stc
in
push
push
je
jmp
lock
xchg
add
ds
mov
jp
sub
mov
stc
fist
cli
gs
mov
adc
jl
mov
cmps
int3
inc
cmc
fs
sahf
repnz
sbb
add
jno
ss
sub
mov
and
je
jne
fbstp
mov
aad
rol
jl
retf
in
mov
mov
fcmovu
ins
jo
les
cmp
arpl
xchg
clc
ror
sub
jmp
ins
jne
adc
stos
movs
mov
(bad)
sub
imul
dec
test
pop
leave
xor
js
push
sar
pop
imul
push
xor
pop
mov
arpl
fidivr
lods
or
scas
(bad)
inc
mov
inc
push
cmp
pop
mov
adc
rol
jle
xchg
scas
jp
pop
xchg
pop
add
mov
mov
add
jecxz
push
ins
int3
mov
and
fwait
mov
mov
inc
ret
dec
push
mov
into
jo
clc
or
xchg
push
nop
ret
cdq
mov
adc
sbb
push
in
xchg
out
and
por
push
adc
mov
mov
mov
mov
inc
dec
push
jle
loope
xor
in
or
jmp
and
mov
test
dec
lods
xor
cs
rcl
cmp
dec
retf
aas
enter
and
sub
xor
or
add
mov
pop
ins
inc
fdivr
xchg
out
inc
shl
add
int3
fs
lods
int
loop
ja
ss
arpl
sub
loope
scas
pop
mov
test
cli
push
fldcw
fcmovu
add
mov
pop
cmp
aaa
aaa
repnz
push
push
jle
fiadd
inc
test
cwde
fwait
add
out
mov
mov
cmps
mov
addr16
add
jge
hlt
mov
or
inc
sub
push
xlat
xor
jnp
xlat
sbb
jmp
push
cmp
and
dec
(bad)
and
and
pop
sbb
inc
call
cdq
fcmovnbe
pop
sbb
out
sbb
imul
out
ins
cmp
xor
sbb
mov
scas
push
dec
cwde
not
pop
and
cmp
leave
dec
into
inc
mov
add
mov
loop
adc
ror
hlt
xchg
mov
mov
push
std
add
retf
cmp
xor
nop
cmp
mov
ja
test
div
out
xchg
test
les
mov
xor
cdq
cdq
pop
pop
pop
movs
add
sbb
in
shl
arpl
bound
std
or
imul
adc
and
xor
and
outs
sbb
mov
lahf
jne
lods
or
js
out
(bad)
test
cmp
outs
pop
jmp
cmp
mov
xchg
call
dec
sub
(bad)
lods
and
sbb
adc
xor
mov
mov
xchg
add
repz
sub
mov
out
adc
movs
xchg
addr16
xor
or
sti
mov
push
sbb
bound
imul
jp
mov
xor
mov
loope
and
jecxz
jp
popa
(bad)
xchg
fnstcw
or
(bad)
cmp
pop
xor
jbe
jle
sbb
retf
jae
add
pop
mov
out
(bad)
sub
sbb
jp
jg
hlt
pop
xchg
int
xchg
(bad)
or
or
js
mov
or
add
movs
dec
ins
(bad)
pusha
mov
ss
lods
int3
test
mov
or
jbe
cmp
jle
dec
push
into
sbb
cmc
mov
cs
inc
dec
rcl
jns
repnz
adc
fs
adc
add
dec
xor
mov
push
mov
inc
push
jne
ret
pop
call
test
into
adc
mov
inc
pop
(bad)
add
sbb
arpl
test
bound
and
jle
mov
retf
inc
in
xor
jg
cmp
in
jbe
inc
cmps
ds
lea
jb
idiv
sar
lds
pusha
or
mov
adc
xor
pop
aaa
xor
imul
cmp
fsub
push
pop
arpl
popa
sub
adc
popf
jecxz
jae
enter
leave
cs
or
push
jl
mov
push
in
es
add
cmp
rcr
(bad)
adc
sbb
and
push
mov
sbb
fbstp
data16
push
arpl
outs
(bad)
xor
pusha
cmp
pushf
in
dec
jmp
mov
stos
sub
inc
or
mov
call
push
xor
fstp
movs
sbb
pop
pop
in
into
dec
arpl
aaa
xchg
xchg
pop
dec
movs
out
sub
lahf
retf
daa
add
mov
push
and
pop
les
daa
sub
inc
loopne
mov
cmc
push
sub
js
and
pop
push
sub
repz
push
sti
xchg
mov
xor
les
mov
stc
sar
push
rcr
inc
inc
adc
inc
mov
cmps
jo
ror
pop
in
nop
lea
call
sub
call
iret
adc
vhsubps
retf
addr16
mov
loop
stos
xchg
or
call
mov
add
out
sbb
pop
add
push
inc
pop
shl
icebp
add
xchg
dec
mov
pop
adc
jg
scas
jmp
stc
inc
cmp
and
fstp
(bad)
sar
sub
les
dec
fstp
jno
clc
jo
mov
out
mov
mov
jne
and
inc
inc
push
or
loope
(bad)
cld
mov
hlt
lods
fiadd
fs
dec
dec
mov
cmps
aaa
xchg
clc
and
data16
xor
jb
(bad)
int3
xchg
sub
stos
inc
jg
shl
jo
je
xlat
repz
outs
add
inc
das
cld
pop
fcom
out
bound
int3
push
imul
les
hlt
push
repnz
adc
jp
pop
mov
inc
test
(bad)
pop
mov
adc
iret
ret
fwait
pop
push
mov
cli
dec
push
ds
push
mov
stos
fdiv
aaa
aam
and
jne
xor
mov
ss
push
add
sbb
mov
loop
or
loop
push
pop
out
add
adc
shr
push
sub
pushf
movs
dec
inc
outs
xsha1
cmps
mov
stos
repnz
push
xchg
xchg
in
pop
cli
enter
repnz
fnstcw
adc
fnsave
mov
neg
loope
mov
pop
push
or
aas
push
xchg
mov
jno
stc
imul
scas
xor
repnz
aaa
jge
(bad)
iret
or
mov
and
sbb
or
adc
add
sub
xchg
add
scas
jle
push
bound
popf
push
mov
ja
cmp
ds
cmp
mov
aam
sub
inc
sbb
xlat
out
cld
xchg
push
rcr
out
and
mov
inc
or
loopne
xchg
xchg
les
imul
enter
mov
inc
stos
ror
out
test
aam
xor
push
mov
stos
mov
loop
push
retf
xor
das
pop
xor
xlat
lods
mov
iret
scas
push
sub
std
xchg
cmp
div
call
pushf
fcmovnu
inc
jmp
jecxz
and
adc
sahf
push
outs
inc
jo
mov
dec
ja
daa
jl
(bad)
push
and
xor
xor
ret
popa
popa
adc
and
xchg
ficom
std
retf
jb
adc
test
in
in
cld
in
cmp
pop
shl
out
adc
ds
cdq
inc
or
xor
adc
push
(bad)
cld
push
mov
push
jb
sahf
push
ins
cmp
(bad)
in
xchg
mov
adc
les
test
scas
xchg
(bad)
out
adc
dec
jg
cmp
inc
sti
repnz
push
mov
xor
push
out
pusha
pop
push
sar
dec
call
lahf
pushf
jmp
lock
leave
mov
jl
test
fs
retf
cmp
pop
lea
mov
(bad)
out
outs
xor
pop
mov
add
mov
pop
mov
pop
and
test
imul
pop
xor
es
movs
fistp
add
popa
push
stos
cmps
add
xchg
xchg
sbb
push
jne
sub
and
cld
push
xor
adc
(bad)
test
in
xor
ret
mov
sbb
mov
test
loop
adc
cmp
adc
xchg
push
cmp
in
sti
bound
loope
(bad)
movs
movs
jl
add
or
rol
mov
data16
sbb
jae
test
adc
inc
mov
(bad)
mov
clc
push
pop
popf
sbb
stc
xor
imul
arpl
add
es
test
xchg
pop
inc
sub
inc
jne
push
sbb
jl
mov
pop
mov
sbb
stos
jle
push
jns
mov
xchg
xchg
or
or
lock
xor
jb
dec
jp
shl
dec
dec
enter
ret
add
stc
pop
leave
mov
jmp
ins
lods
sbb
mov
ret
xor
add
mov
outs
or
repnz
xor
scas
inc
cld
inc
fcmovnu
addr16
and
lds
xchg
rcr
enter
sti
inc
and
sub
ins
not
fsub
xor
push
fs
fsub
mov
pop
mov
mov
rol
aaa
adc
out
pop
add
in
inc
jmp
mov
inc
jne
lods
pop
cwde
mov
pop
mov
push
loop
mov
shl
sub
in
mov
push
lahf
jg
or
mov
xor
xchg
xor
loopne
int
ins
sub
pop
cli
add
mov
pop
jnp
cmp
or
mov
in
out
jo
inc
mov
add
add
pop
jecxz
leave
lods
sbb
mov
adc
and
push
(bad)
call
add
xor
sbb
add
jl
sub
sahf
jecxz
enter
sub
(bad)
and
lds
dec
xchg
xchg
sbb
mov
or
in
inc
mov
ss
mov
div
mov
test
sbb
in
or
retf
or
sub
fiadd
imul
jmp
sbb
jns
mov
push
and
js
dec
(bad)
sbb
mov
fs
je
xchg
cdq
mov
and
lahf
sbb
add
repz
adc
mov
cmp
cmp
ja
adc
dec
fmul
ins
adc
dec
jle
gs
cmp
ss
jo
daa
xchg
xor
push
mov
jnp
jg
ss
add
out
stos
push
and
mov
vandnps
lods
jp
hlt
int
out
push
or
ins
lock
push
std
adc
cmp
(bad)
(bad)
cli
gs
ret
xchg
xor
(bad)
pop
lods
push
jl
dec
retf
lds
cmps
fs
fnstsw
int3
mov
lock
mov
cmps
sti
push
xchg
pop
add
inc
inc
jnp
and
xchg
jecxz
add
adc
sbb
outs
js
jg
cli
shr
jl
stc
outs
xchg
retf
test
and
pop
out
sub
xor
les
popa
aam
imul
(bad)
push
addr16
fsubr
mov
mov
mov
icebp
mov
aam
sub
aad
add
inc
push
(bad)
jp
in
enter
div
jge
stc
jle
clc
movs
sub
add
je
stos
add
push
dec
(bad)
xor
pop
rcr
pusha
and
sbb
cmc
and
push
stos
ja
clc
cli
inc
or
adc
rcl
mov
xchg
outs
in
xchg
add
loop
jnp
add
xchg
div
fs
(bad)
jl
icebp
arpl
imul
xchg
fdivr
mov
and
fiadd
and
retw
in
sbb
ror
fwait
je
xchg
mov
rcl
sbb
xor
cwde
pop
fdivr
and
adc
or
push
addr16
xchg
and
push
(bad)
sbb
aam
xor
mov
out
pop
jno
shl
into
ret
aad
xchg
xlat
jmp
aad
fwait
ss
stos
dec
into
inc
test
inc
adc
retf
mov
aad
fst
fdiv
mov
scas
test
inc
xchg
mov
icebp
mov
xchg
mov
in
(bad)
clc
scas
fist
imul
jns
(bad)
xchg
or
inc
iret
sbb
sub
sub
jne
in
sub
stc
ins
out
lahf
xchg
inc
push
or
mov
inc
mov
push
jle
adc
jno
daa
push
sub
cmp
movs
pop
xlat
mov
inc
xchg
ja
pop
push
cmp
xor
bound
jle
pop
lahf
icebp
sbb
xlat
ss
(bad)
sbb
cwde
or
gs
dec
js
cmp
push
pop
cmps
test
test
jmp
dec
inc
leave
push
nop
mov
retf
sub
mov
jne
push
call
mov
push
xchg
lds
adc
mov
push
mov
into
sar
out
into
aad
outs
adc
out
ret
jg
test
rcr
dec
repz
dec
add
dec
xchg
jmp
mov
sub
push
pop
pop
jmp
fstp
adc
cmps
xchg
icebp
fisttp
sub
push
popf
imul
xor
jle
dec
and
mov
loopne
jmp
jae
arpl
div
pop
shl
cmp
std
sub
xor
jbe
outs
sahf
mov
mov
ror
sub
inc
lahf
and
or
mov
aad
out
or
xchg
adc
pop
out
cld
(bad)
jecxz
add
push
test
out
mul
ins
fild
rol
sbb
test
push
movs
mov
jb
inc
or
adc
fidiv
push
add
sar
scas
(bad)
adc
add
outs
ret
push
pusha
mov
inc
xor
jge
mov
mov
icebp
adc
push
xor
ds
or
xor
ror
shl
fmul
into
cmp
and
retf
and
jecxz
sbb
mov
cmp
jo
loope
cli
in
fist
push
movs
cmps
(bad)
pop
jg
adc
das
fst
mov
mov
in
xchg
dec
mov
aas
add
xchg
test
push
rcl
jge
cmp
push
call
aam
loope
rcl
jno
adc
mov
arpl
sub
xchg
mov
into
cmp
adc
jmp
push
push
add
lds
cmp
aam
xor
jo
and
es
xchg
test
movs
mov
dec
mov
xchg
outs
pop
ror
xor
aam
pop
add
(bad)
xor
imul
imul
cwde
adc
or
xor
out
push
cld
jnp
xor
int3
repz
jbe
cli
add
aad
cmc
mov
shl
imul
xor
lods
stos
fimul
cmp
adc
push
sub
neg
push
into
cmp
lds
cmps
mov
mov
cmc
add
pusha
loopne
leave
cmp
jle
shl
dec
push
cmp
outs
mov
or
rol
(bad)
stos
and
stos
mov
cmp
sbb
retf
fdivr
out
push
xchg
test
add
fst
xchg
inc
pop
mov
test
mov
stos
mov
inc
adc
outs
pop
cmp
mul
mov
fist
cmps
xor
addr16
inc
(bad)
fdiv
les
xchg
out
and
adc
add
aad
or
xlat
push
mov
test
xor
in
sahf
push
ficomp
sbb
mov
pop
mov
outs
pop
sbb
ret
enter
fld
add
jne
mov
xor
(bad)
xor
sahf
fdivr
shr
popf
and
dec
mov
push
rcl
jb
cmps
pop
add
jns
and
fistp
inc
adc
add
outs
sbb
retf
sub
fsub
and
and
shl
xor
or
out
ja
xor
addr16
mov
add
inc
ror
mov
push
jne
sbb
scas
dec
lea
mov
lea
js
jp
fucom
cmp
inc
bound
mov
pop
push
mov
fwait
jle
and
pop
in
or
push
dec
push
imul
aaa
mov
stos
mov
push
jo
xchg
dec
popa
imul
jp
fwait
xor
sbb
scas
pop
mov
cwde
xor
inc
push
rcr
sub
push
add
sbb
pop
fadd
ds
(bad)
mov
ds
in
popf
out
fiadd
ror
inc
mov
dec
mov
bound
lock
retf
mov
xchg
xchg
mov
loop
jno
xor
sbb
jb
cmp
pop
mov
imul
dec
jmp
imul
mov
(bad)
call
fwait
sub
aam
movs
cmp
int3
xlat
cdq
dec
mov
adc
mov
xchg
and
or
sub
imul
inc
lock
popf
dec
cdq
jmp
mov
in
shl
sbb
mov
inc
arpl
mov
sub
sar
pop
sub
(bad)
addr16
les
sub
mov
mov
data16
aaa
xor
mov
add
outs
mov
stc
inc
mov
repnz
sub
dec
lods
dec
sub
push
jno
(bad)
nop
daa
ja
add
test
adc
popf
stc
inc
das
mov
arpl
xchg
mov
mov
push
jl
mov
push
mov
push
sbb
repnz
call
out
out
mov
out
pop
jge
ds
mov
mov
sbb
data16
xchg
push
stc
push
and
fisttp
ret
shr
mov
dec
imul
jecxz
out
movs
cmp
and
jnp
and
les
push
ror
test
xchg
mov
xlat
cwde
adc
sbb
mov
retf
and
dec
mov
aaa
mov
int3
jp
out
shl
enter
(bad)
loop
arpl
sbb
mov
out
inc
test
cmps
jo
(bad)
mul
rcr
xor
sub
jge
(bad)
mov
pop
jle
stos
aas
mov
sti
or
loope
shl
aad
stc
in
aam
les
xor
ins
test
ficomp
clc
add
xor
dec
sbb
xchg
pop
xor
mov
loopne
div
enter
dec
stos
cli
mov
fwait
data16
bnd
fstp
pushf
ret
in
xchg
std
jae
mov
call
test
inc
or
push
push
jmp
imul
mov
(bad)
xlat
into
add
jecxz
inc
cmp
sbb
ins
call
mov
push
and
in
iret
fst
xchg
cmp
pop
push
test
ror
and
push
mov
adc
or
test
scas
aam
call
fwait
push
sub
jno
add
ret
sbb
retf
adc
faddp
ror
inc
adc
xor
enter
xchg
pop
push
mov
xchg
loopne
inc
(bad)
call
xchg
fsubrp
xor
or
std
add
stos
movs
out
xchg
test
sbb
inc
shr
adc
push
jns
(bad)
adc
repz
jge
in
nop
adc
push
repnz
mov
mov
pop
lods
or
push
mov
ins
or
out
dec
call
jns
lds
or
sbb
cli
dec
out
retf
sbb
xchg
and
jns
(bad)
dec
popa
push
stos
jp
rcr
and
cdq
outs
addr16
jns
jge
ds
jb
inc
dec
call
scas
pop
popf
icebp
scas
test
ret
jnp
push
call
mov
dec
mov
adc
in
lds
ret
sbb
push
addr16
mov
out
mov
xchg
rcl
jno
shl
inc
fwait
push
push
cld
inc
or
push
fucomip
popf
inc
lahf
mov
dec
daa
add
push
iret
cli
cmp
jecxz
test
xchg
test
(bad)
fldcw
ds
mov
out
inc
mov
or
xchg
xchg
(bad)
es
in
lahf
dec
(bad)
xor
sub
mov
add
outs
sub
or
mov
pusha
fwait
xlat
aad
pop
fwait
or
cli
sbb
sbb
pop
int
shl
pop
push
lahf
jo
add
sub
arpl
xchg
xor
sub
imul
dec
cmp
mov
fst
pop
popf
outs
sub
push
enter
les
sbb
in
jne
stc
mov
aam
pushf
adc
call
mov
cmps
sbb
dec
leave
mov
lods
and
test
sbb
in
shl
cmps
sbb
loop
mov
xchg
loop
mov
push
test
mov
leave
push
js
iret
pop
bound
push
or
enter
mov
mov
scas
mov
inc
add
int
ror
add
xor
xor
jmp
add
cs
fiadd
arpl
mov
push
pop
jnp
pop
call
pop
adc
mov
pop
add
jmp
fsub
lods
xor
test
fwait
mov
adc
add
hlt
lds
pushf
sub
inc
push
fstp
or
inc
pushf
std
xchg
es
and
sub
iret
arpl
dec
in
xchg
add
or
clc
or
lds
jmp
mov
cmp
fisttp
or
int3
sub
xor
call
aad
push
cli
xor
mov
and
(bad)
cwde
sbb
nop
aad
shl
adc
mov
dec
xor
pop
inc
std
jge
imul
sub
fimul
(bad)
sar
mov
push
arpl
pop
cmp
and
dec
retf
neg
shl
add
push
push
or
add
das
push
lods
lds
mov
test
mov
dec
xor
sbb
leave
mov
mov
movs
imul
dec
sub
add
fild
sbb
or
aad
std
add
gs
movs
inc
lock
shr
arpl
std
dec
(bad)
jle
sbb
dec
xchg
aaa
ficomp
sub
inc
sub
test
inc
loope
(bad)
fild
test
aam
mov
sti
movs
add
rcr
bound
sub
call
mov
in
enter
je
arpl
int
xchg
xchg
dec
fistp
fistp
cmc
mov
push
pop
lods
pop
in
sbb
inc
sub
xchg
jbe
ds
fisubr
xor
and
popa
sbb
outs
push
cli
xchg
jmp
sub
mov
fiadd
or
jmp
jo
daa
push
dec
outs
inc
ror
leave
loopne
sub
adc
ret
rcl
pop
xchg
fwait
inc
ja
jl
inc
sbb
es
xlat
mov
jmp
dec
sub
xor
jbe
and
dec
sbb
out
push
add
mov
clc
add
mov
nop
jmp
ret
fmul
sub
out
retf
stos
dec
cwde
aam
shl
xor
je
mov
out
pop
and
ret
xchg
and
lock
fcmovu
les
in
mov
out
jecxz
xchg
es
and
xchg
jecxz
cld
je
xor
push
clc
icebp
jne
repz
mov
(bad)
fcomi
mov
test
retf
inc
retf
fpatan
or
cmp
dec
lods
or
sub
iret
mov
add
ror
ret
pop
or
jnp
dec
inc
ret
rcr
mov
enter
dec
loop
add
adc
je
int
shl
inc
jbe
dec
jecxz
icebp
rol
outs
test
enter
call
inc
push
adc
retf
xor
sub
cmp
fadd
sub
jge
jb
sub
out
push
fcomip
mov
cmp
pushf
cmp
je
cli
cmp
xchg
pushf
fnsave
mov
ins
pop
imul
inc
xchg
adc
dec
loop
push
dec
jmp
inc
icebp
popa
pusha
or
pop
movs
cdq
xchg
mov
and
scas
imul
lock
or
push
es
lods
push
aam
ret
in
ins
push
xchg
call
mov
add
fsubrp
div
push
ffreep
and
cdq
cmp
fist
pusha
std
fs
pop
sbb
gs
dec
pop
mov
pop
add
cmc
xchg
cmp
sub
or
ins
jnp
pop
xchg
add
sub
jbe
nop
mov
cld
jmp
sub
dec
dec
iret
sbb
pop
pcmpeqb
pop
cmp
loop
test
cmp
pushf
push
jne
(bad)
dec
xor
sub
pop
leave
and
inc
popa
cmps
stc
sub
lea
cmps
(bad)
call
xchg
cmp
ins
jmp
shr
jb
loop
addr16
fnstsw
dec
test
out
mov
jbe
mov
pop
fisttp
aad
test
mov
fcom
cmp
outs
xor
lea
jnp
outs
mov
pop
rdpmc
gs
jnp
data16
inc
push
bound
mov
ss
push
sbb
icebp
in
xchg
add
mov
push
mov
fistp
(bad)
into
lds
dec
jmp
pusha
pop
dec
imul
sbb
test
xchg
xchg
out
jno
xor
cmp
nop
or
aaa
retf
pushf
fst
cdq
mov
int
mov
cmp
xchg
nop
outs
repnz
pop
jmp
retf
jp
sub
out
loope
cmp
add
(bad)
xchg
jge
sub
jl
idiv
mov
push
cmps
mov
frstor
sub
and
jp
lods
adc
cmp
aam
push
pop
repz
(bad)
push
dec
xlat
mov
xor
pusha
test
xchg
xchg
sahf
push
shr
movs
and
dec
cmp
mov
cmc
mov
les
mov
push
ret
in
xor
out
hlt
jnp
mov
cmps
xor
or
pop
mov
sub
mov
pop
jl
jl
jle
repz
push
or
push
xor
sub
pop
add
xchg
rcl
ror
jecxz
sub
fistp
gs
mov
mov
adc
xor
mov
lock
imul
push
gs
iret
and
(bad)
cld
or
lods
cwde
inc
sbb
push
icebp
adc
inc
jecxz
ss
add
adc
xchg
pop
pushf
adc
lea
mov
and
sub
retf
sbb
xchg
xchg
or
(bad)
inc
sbb
ins
mov
jno
out
cmp
dec
mov
stos
loop
push
xor
out
sbb
neg
add
stos
xor
loopne
movs
repz
mov
pop
pop
mov
imul
jmp
jp
cmps
or
or
fcmovne
pop
mov
jmp
jge
popa
movs
daa
stc
jecxz
in
mov
fidiv
cmp
sbb
or
push
or
mov
dec
into
pop
pop
fst
frstor
push
xchg
stos
jecxz
data16
cmp
add
mov
stc
pushf
in
out
and
sbb
mov
pop
or
jmp
jmp
mov
add
cmp
lahf
sub
mov
mov
cwde
inc
pop
push
sub
lods
or
imul
imul
clc
arpl
mov
sti
push
jns
ret
mov
sub
int3
fcom
(bad)
cwde
sbb
xchg
je
test
arpl
ja
push
xchg
imul
mov
iret
test
daa
sub
lds
(bad)
leave
cmc
jecxz
add
push
cdq
data16
xchg
fidivr
push
mov
int3
add
add
inc
stc
or
mov
xor
or
lds
outs
aam
scas
out
dec
fwait
aad
ret
or
inc
mov
dec
(bad)
jmp
in
es
mov
jo
jecxz
adc
iret
test
into
sti
adc
pop
add
imul
or
sqrtps
lea
mov
add
sbb
ret
add
fsubr
scas
adc
sub
ret
pop
add
jnp
or
ds
dec
mov
inc
xchg
xchg
repz
outs
jecxz
adc
out
nop
test
in
xchg
or
int3
dec
stos
sahf
push
scas
mov
mov
adc
movs
or
or
pushf
sub
rcpps
fadd
cmp
inc
pop
or
ja
xor
mov
sbb
jecxz
sahf
add
inc
retf
popf
dec
add
sbb
retf
call
xor
pop
scas
shr
cld
loope
push
jle
(bad)
mov
lock
clc
hlt
sbb
dec
push
pop
sahf
ja
mov
sub
mov
add
sbb
cmps
dec
outs
imul
and
stos
out
dec
sti
(bad)
mov
out
sub
pcmpgtb
adc
mov
jp
pop
nop
add
adc
test
outs
dec
adc
std
clc
icebp
aaa
add
aaa
xor
and
jle
add
addr16
xchg
jae
push
mov
ds
push
mov
mov
sub
jp
and
and
adc
mov
mov
inc
aam
call
mov
jo
out
out
cmp
push
dec
or
fmul
mov
and
dec
and
in
pusha
mov
(bad)
xchg
outs
lahf
fild
rcr
je
or
jae
adc
aam
adc
sub
pop
push
fst
pop
inc
movs
pop
xlat
or
cli
xor
cdq
popf
fiadd
xchg
sti
popa
call
and
not
add
xor
and
cwde
leave
mov
xchg
cmps
fwait
or
ja
cmp
mov
loop
outs
cwde
popf
sub
ficom
sahf
mov
call
daa
ret
sub
outs
pop
call
int
mov
std
jecxz
call
lds
stos
outs
sbb
mov
push
es
mov
cmp
mov
jecxz
ror
jp
aam
add
loopne
jmp
and
push
test
push
cs
(bad)
lods
xor
mov
jnp
push
sub
push
stc
push
and
mov
cmp
in
and
jge
outs
push
sub
rcl
adc
add
jp
arpl
or
sbb
gs
push
jb
mov
jecxz
xchg
pop
mov
adc
xor
aas
dec
out
xchg
fbld
pop
in
bnd
mov
and
sti
push
jbe
fisubr
ins
into
icebp
repz
retf
sub
push
push
jns
div
pushw
xor
cs
cmp
xchg
sti
xor
and
cli
outs
out
inc
hlt
rcr
stos
adc
push
sti
(bad)
stos
jne
push
mov
dec
dec
push
dec
cmp
lock
pop
(bad)
fild
cdq
xor
lock
mul
mov
ror
hlt
pop
aam
cmp
add
cs
jl
or
stos
sbb
push
and
mov
mov
jno
push
mov
(bad)
push
nop
fnsave
(bad)
or
or
inc
mov
and
adc
pop
inc
mov
div
cmp
xchg
stos
mov
(bad)
add
add
xor
and
(bad)
jne
das
(bad)
cmp
int
(bad)
mov
pop
add
retf
dec
cdq
dec
addr16
or
int3
xlat
xor
js
sub
xor
in
xor
repnz
push
cmp
push
and
dec
add
cmc
bound
movs
sub
mov
and
push
fbstp
aam
ficomp
stos
pop
sbb
mov
mov
xor
int
pop
je
mov
inc
mov
dec
int
or
xchg
xor
xchg
cmps
hlt
popf
nop
cmps
out
outs
mov
mov
sub
mov
(bad)
aam
dec
inc
outs
ins
pop
lods
lds
xchg
or
cwde
sub
outs
jmp
imul
mov
pop
nop
dec
(bad)
jg
pop
push
data16
xor
leave
mov
call
or
clc
mov
adc
xor
jmp
jnp
sub
les
mov
dec
push
dec
jmp
cmp
push
shl
fisubr
mov
mov
xor
fstp
loop
and
cmp
mov
loopne
adc
mov
or
icebp
cmp
jge
popa
loopne
(bad)
mov
push
leave
or
scas
xchg
loopne
iret
cmp
jl
std
sbb
jl
pushfw
int3
mov
mov
pop
cmp
fstp
ror
test
daa
mov
fcomp
pop
xor
lea
in
sahf
dec
jg
xor
pop
and
inc
imul
jg
add
sbb
mov
inc
or
sar
icebp
retf
aaa
clc
test
in
cmp
or
mov
or
sub
cmps
add
mov
popf
push
lahf
movs
lock
xchg
popf
fsubr
ja
pop
jg
out
int3
dec
out
enter
pop
and
sbb
push
loopne
(bad)
daa
out
jecxz
call
pop
inc
adc
cmp
icebp
push
push
cmps
jle
inc
lea
lds
pop
cpuid
add
xchg
dec
dec
pushf
fimul
ret
mov
mov
xor
repz
push
xchg
xchg
and
jmp
out
push
xor
jge
out
fiadd
mov
xchg
adc
imul
mov
test
daa
shl
scas
out
pushf
ds
out
or
daa
mov
(bad)
mov
mov
mov
push
ret
jb
adc
fmul
adc
shr
xor
outs
sub
xor
mov
or
dec
dec
clc
movs
adc
enter
xchg
aad
ror
jbe
bound
or
test
in
xor
mov
push
movs
addr16
jmp
add
in
inc
gs
push
shl
adc
push
mov
and
or
mov
lock
mov
xchg
xchg
jl
into
add
adc
js
add
xor
xor
leave
xor
push
push
into
or
pop
or
mul
xor
ins
push
xchg
ins
out
and
inc
cmp
hlt
xor
push
out
mov
(bad)
fcompp
shr
mov
out
mov
jb
jecxz
mov
or
ret
lods
dec
js
fcmovnb
repz
ret
fwait
imul
outs
jbe
imul
out
jl
ins
jg
adc
int3
arpl
lods
ds
add
ins
jg
(bad)
mov
add
push
sbb
cwde
(bad)
in
arpl
inc
lods
add
mov
adc
dec
mov
push
sahf
cmps
pop
mov
jns
stos
les
pop
mov
shl
mov
ins
fstp
fisubr
mov
dec
hlt
xchg
jne
dec
dec
mov
outs
sub
outs
xor
pop
popf
pusha
xchg
repz
push
jmp
dec
and
outs
cmp
fld
js
mov
mov
cmps
ins
mov
jnp
ret
jb
jb
pop
and
cmps
outs
ds
jecxz
adc
dec
sub
sub
fwait
sub
pop
mov
aas
(bad)
jmp
sub
test
xchg
push
xchg
retf
xor
in
cmps
jecxz
pop
icebp
sbb
mov
push
loope
sub
js
lods
aad
pop
ja
lds
nop
mov
jo
mov
nop
mov
jge
inc
test
mov
popf
jmp
test
jg
mov
xor
into
inc
pop
or
adc
mov
inc
lds
in
repnz
leave
pushf
cmp
fnstenv
xor
mov
movs
cmps
xor
xchg
bound
movs
movs
jno
push
jle
lock
sti
mov
add
mov
xchg
in
or
inc
fnstenv
push
push
pop
sbb
xor
shl
push
pop
int
mov
pop
fwait
hlt
dec
and
retf
stos
icebp
ds
repnz
cwde
pop
mov
xchg
jl
fsubr
jno
in
in
jbe
retf
cmps
fs
dec
adc
pushf
cmc
outs
(bad)
inc
dec
hlt
jle
add
aas
sbb
imul
out
fiadd
or
mov
inc
push
leave
dec
pop
imul
das
in
dec
mov
lds
xchg
adc
adc
in
cli
push
pop
jne
pop
adc
imul
mov
pop
ds
cmp
push
or
mov
sar
retf
jo
aaa
inc
das
sahf
test
clc
mov
sahf
fadd
(bad)
in
sar
sbb
mov
sub
cs
imul
pop
xchg
rcr
jg
mov
add
or
stc
call
fidiv
scas
mov
mov
or
inc
dec
jecxz
dec
std
sbb
cmp
test
imul
je
add
ins
pusha
mov
pop
jne
sbb
ret
pop
iret
mov
or
lock
cmp
mov
imul
dec
and
fdivr
test
push
pop
cli
push
mul
mov
pushf
push
push
xchg
rcr
test
adc
out
scas
cmc
push
adc
sub
test
inc
call
mov
sti
jmp
cmp
sbb
clc
push
sbb
dec
push
cmp
int3
push
xchg
fstp
cld
jno
out
js
sti
xor
add
stos
inc
inc
add
dec
cmp
stos
push
das
fstp
js
push
and
jle
rep
jecxz
pop
sub
fisub
repnz
adc
push
das
cmc
movs
add
jbe
mov
aaa
mov
xchg
adc
mov
xor
rsm
cmp
mov
fistp
loope
pop
ja
mov
scas
adc
clc
pushf
mov
ror
lods
mov
mov
shl
cmp
addr16
xor
call
fcmovnb
shl
and
rcl
jp
arpl
dec
imul
inc
and
stos
sub
fcmovnbe
adc
movs
ret
stos
in
dec
imul
int
adc
inc
inc
or
dec
and
ror
pop
cmps
movs
ret
(bad)
mov
adc
pop
xor
dec
push
xchg
pop
add
(bad)
dec
adc
rcr
pusha
jp
mov
aas
fcmovnb
fwait
mov
dec
mov
jmp
sti
leave
das
cmp
mov
inc
inc
imul
cmps
nop
pop
es
jno
cmp
add
xchg
sar
jne
add
out
aas
fcmovne
leave
cmc
xor
ret
rcl
sub
cmp
mov
sub
mov
lds
movs
movs
or
push
test
pop
aam
(bad)
in
xchg
cdq
ds
fdivr
(bad)
jno
out
je
mov
jb
pop
mov
add
xchg
cmps
fnstcw
fist
xchg
test
push
outs
xlat
push
mov
jne
xchg
movs
test
adc
imul
xchg
xchg
ucomiss
stos
pop
out
inc
dec
test
test
and
test
stos
cmp
cmp
adc
jb
mov
stos
and
push
sar
sub
daa
test
mov
xchg
adc
aas
xchg
test
mov
loop
fs
xor
ins
pop
or
jnp
dec
push
aam
popa
fwait
jns
dec
fnstsw
push
popf
ds
hlt
and
fstp
jl
repz
neg
mov
test
shl
add
je
adc
fisttp
jae
jl
out
jo
test
mov
mov
imul
jo
cmps
or
dec
call
jmp
push
jae
retf
aam
outs
fdiv
mov
push
inc
mov
and
movs
inc
jae
ror
sahf
inc
rcr
add
nop
mov
repz
fiadd
in
or
icebp
sub
adc
js
imul
mov
inc
sub
cmp
push
pop
fisttp
in
push
ret
fimul
(bad)
test
and
addr16
xchg
and
mov
mov
loopne
or
scas
mov
test
push
mov
add
and
jl
jae
aas
push
nop
scas
je
add
loop
retf
(bad)
jnp
scas
mov
movs
or
push
(bad)
xchg
cmp
(bad)
jno
int3
dec
jmp
bound
adc
xchg
inc
mov
cmp
sbb
mov
cld
sub
mov
add
and
and
js
and
cmps
ins
or
pop
xor
pushf
les
sub
enter
add
jnp
stos
dec
bt
ins
dec
pusha
cmps
xor
or
add
mov
out
or
inc
jbe
in
mov
scas
scas
mov
xor
rol
rcr
mov
retf
mov
aas
cmp
lahf
adc
fwait
pop
addr16
lods
xlat
mov
sti
sub
xor
adc
or
sub
sub
sti
sub
push
xchg
js
cmovbe
mov
push
mov
loop
pop
xor
jmp
fdiv
mov
sub
icebp
test
repnz
aad
(bad)
popf
mov
mov
dec
stc
pushf
fimul
fsub
xchg
sbb
push
jle
pushf
sbb
fnstsw
jb
js
adc
call
cmp
mov
jnp
lea
dec
call
adc
xchg
push
push
sbb
xchg
adc
inc
ss
lock
repnz
mov
(bad)
push
xlat
adc
ds
jns
jb
nop
loope
popa
test
jecxz
imul
fmulp
aaa
and
cmp
pop
rcr
xchg
out
das
mov
and
clc
loope
ret
(bad)
aaa
(bad)
fisub
sub
clc
sbb
shl
push
inc
es
mov
and
mov
scas
adc
xchg
add
fst
sub
mov
leave
jno
pop
test
bound
imul
or
jns
jae
xchg
sbb
icebp
in
mov
test
dec
push
and
retf
call
and
push
ins
ins
sbb
ins
and
xor
enter
push
popf
jp
jnp
fld
test
mov
pop
dec
out
xchg
aas
push
mov
in
addr16
pop
mov
out
fldl2t
adc
mov
stc
pop
test
je
mov
cmp
or
xchg
dec
and
or
mov
(bad)
xor
xor
fstp
cmp
aam
in
in
repz
loope
daa
fwait
push
cmp
mov
pop
sub
pusha
scas
push
fcmovbe
bound
stc
jns
js
repz
add
out
lods
mov
add
cmp
das
into
popf
push
(bad)
adc
xor
push
outs
xor
jg
jns
sti
cmp
sbb
fisttp
ja
sbb
adc
cmp
pop
jno
sub
(bad)
in
inc
dec
stos
cmp
sti
pop
int3
add
push
loope
cmp
and
jbe
push
jmp
jnp
lock
bound
aam
pushf
push
inc
ret
retf
sub
xchg
mov
pop
int
sbb
or
mov
movs
add
mov
sub
repz
and
push
in
data16
push
fcom
jge
data16
sub
dec
(bad)
mov
and
data16
inc
add
cld
fnstenv
leave
in
sar
enter
pop
movs
lahf
jb
xor
mov
pop
inc
fist
mov
lods
lahf
cli
cmp
pop
inc
aam
pop
push
xchg
jns
push
mov
jae
fmul
pop
test
aam
int
dec
sbb
out
mov
xlat
push
jge
mov
mov
jecxz
pop
shl
sub
ss
aam
inc
adc
lea
movs
pusha
sbb
mov
aas
movs
pop
mov
repz
out
outs
test
out
mov
mov
mov
lds
xor
js
xchg
sub
(bad)
sub
rcr
pop
in
add
scas
mov
jl
es
outs
pop
sbb
mov
and
or
(bad)
dec
mov
adc
cmps
push
add
jne
xor
gs
sub
xchg
inc
movs
fmul
data16
or
pop
test
shr
cdq
pop
mov
outs
or
fcomip
cmp
jp
add
push
sbb
xor
pop
inc
scas
fdivr
add
je
cdq
fsubr
cmc
test
loope
loopne
leave
es
sub
ficomp
cli
push
dec
or
and
pop
mov
sbb
pop
outs
movs
out
mov
ds
mov
ss
cmp
and
data16
jg
dec
loope
adc
mov
and
int3
pop
jmp
pop
inc
cwde
les
or
adc
pop
jns
test
scas
sbb
cmp
add
jne
mov
cmc
sub
cmps
xchg
das
pop
or
push
add
or
push
xor
pop
jecxz
push
xchg
inc
pop
cmc
xchg
fadd
ins
movs
sar
popf
call
inc
pop
jbe
ss
jmp
adc
es
retf
movs
mov
jbe
ds
pop
lods
sub
call
aaa
sub
and
cmp
jo
or
dec
jb
dec
adc
mov
mov
add
mov
push
push
ins
out
add
lods
jno
ror
mov
jge
and
sub
pop
cmp
sar
mov
add
jne
cdq
imul
add
jbe
leave
aam
shl
xchg
js
scas
sbb
sar
mov
daa
adc
xor
lods
call
test
jmp
fisttp
fwait
(bad)
fcom
(bad)
jo
jg
not
scas
sbb
xor
sub
sub
in
rcr
push
sub
xor
mov
mov
call
ds
stos
and
mov
jnp
gs
xor
sub
mov
mov
xorps
int3
sbb
(bad)
jmp
mov
inc
dec
(bad)
dec
jno
(bad)
push
mov
jb
sbb
adc
pop
xchg
icebp
jecxz
xor
cmp
push
aam
ja
jl
stos
(bad)
push
mov
dec
lds
mov
jle
add
fbld
data16
ins
and
imul
push
or
pop
xchg
aam
jge
jb
pop
and
or
sub
jo
dec
daa
(bad)
mov
(bad)
mov
adc
sbb
ins
xchg
mov
(bad)
fist
enter
pop
fstp
sti
or
xor
sbb
pop
ficom
fbld
mov
loope
xor
out
jl
pusha
adc
rcr
add
lods
xchg
mov
jmp
cmc
xor
jge
mov
pop
mov
pop
xlat
add
pop
mov
pop
xchg
xchg
mov
xor
push
addr16
(bad)
fisttp
adc
ds
push
and
inc
sub
nop
mov
sar
out
push
lock
out
jo
faddp
push
and
fiadd
nop
inc
mov
sbb
xor
test
dec
push
out
(bad)
push
lea
jge
out
fwait
test
add
adc
out
sbb
ins
fnstsw
jmp
mov
scas
movs
mov
loopne
mov
mov
mov
(bad)
sub
cmp
jne
pop
aaa
add
dec
ds
call
ins
retf
sar
addr16
aam
(bad)
fwait
and
mov
fbstp
or
dec
pop
xchg
adc
mov
jle
cmp
fisubr
rcr
pushf
(bad)
mov
outs
mov
or
push
mov
jns
int3
jge
add
pop
jae
xor
std
cmps
sbb
inc
test
shl
mov
pop
xchg
sub
cmp
push
push
mov
add
fistp
je
adc
jmp
push
js
loope
xor
jnp
xchg
cld
imul
pop
(bad)
dec
in
sub
push
sub
cmp
and
pop
test
xchg
mov
(bad)
mov
fldcw
gs
xlat
sar
mov
sbb
neg
cdq
call
inc
lods
or
mov
add
jle
xchg
out
adc
jae
jp
shr
add
sbb
add
scas
push
in
ins
pushaw
adc
jne
jle
in
dec
sub
push
das
inc
in
dec
sbb
xchg
sub
call
cmp
in
push
xchg
dec
push
or
es
call
ret
rcl
mov
inc
mov
jl
ds
loope
inc
xchg
sub
shr
and
mov
into
jg
jne
cmp
das
and
loop
jmp
mov
clc
xor
mov
pop
(bad)
(bad)
fstp
or
jp
aad
xchg
xor
sti
imul
push
call
adc
cs
mov
data16
sub
add
pop
ss
xor
xchg
es
arpl
inc
scas
xchg
xchg
mov
dec
in
stos
add
jecxz
sub
pop
lahf
or
in
pop
into
and
dec
mov
cmp
push
xchg
xchg
in
inc
in
jmp
in
mov
fs
lock
gs
jmp
and
mov
pop
xor
scas
fnstcw
mov
xchg
mov
inc
sub
push
xchg
dec
fisub
mov
mov
fisub
push
inc
xor
adc
int
outs
xor
(bad)
mov
push
je
sub
loop
rol
adc
mov
out
imul
jb
dec
in
fstp
clc
imul
loop
mov
(bad)
pop
pusha
leave
test
out
xor
test
pop
inc
jns
repz
xchg
xlat
mov
mov
mov
retf
push
cli
shl
or
push
push
(bad)
adc
and
mov
shr
hlt
cmp
dec
pop
arpl
jnp
lock
fild
sbb
aad
cmp
jmp
jle
push
icebp
hlt
sub
dec
in
cmc
in
pop
aas
xlat
jns
pop
cwde
xchg
jp
mov
adc
test
pop
jle
mov
sbb
mov
stos
inc
adc
aad
cmps
push
hlt
mov
test
sahf
retf
sbb
mov
sar
test
inc
or
retf
aaa
jbe
retf
ror
jo
sub
vcvtpd2ps
push
loope
rcr
dec
fild
jge
movs
mov
push
mov
mov
xor
jmp
or
imul
dec
sti
leave
lds
xchg
push
es
ret
inc
rol
cmp
aad
xor
add
int3
shr
mov
jecxz
stos
bound
out
inc
xor
sub
jmp
dec
pop
push
pop
and
pop
pop
dec
icebp
fs
pop
sub
inc
mov
mov
inc
and
outs
mov
inc
mov
or
push
pop
sub
jns
call
lock
sub
fimul
or
cs
jg
push
jl
and
xchg
out
retf
push
pop
jmp
clc
pop
mov
ror
mov
(bad)
and
je
push
and
xor
inc
jae
push
loope
or
cmp
pop
xlat
xchg
or
cmp
shl
xchg
aas
fstp
sub
jmp
jge
xor
jns
xchg
cmp
xor
call
dec
jecxz
fdiv
out
sbb
imul
out
jp
outs
int3
push
sbb
scas
pop
das
ficom
rcl
stos
adc
sbb
or
cli
in
or
(bad)
sub
sbb
inc
movs
dec
xor
xchg
ds
dec
enter
jle
push
ret
int
push
test
jnp
and
test
sbb
and
es
nop
mov
(bad)
pop
loop
add
or
sub
dec
jmp
setb
fist
jb
ins
adc
jb
add
ficomp
cmp
mov
out
cs
shl
ds
lock
loope
imul
xor
stos
sub
shl
out
mov
test
imul
sbb
and
addr16
out
out
cmc
dec
retf
add
jae
aaa
xor
and
sub
fsubr
sbb
(bad)
js
ds
sbb
in
add
push
popf
mov
mov
mov
shl
jp
add
pop
inc
inc
in
pop
mov
adc
test
push
imul
mov
cmp
push
jno
mov
inc
mov
ss
add
sub
addr16
fst
aaa
push
pop
jmp
jae
bnd
imul
ret
iret
jge
sub
ds
outs
mov
mov
adc
shr
cwde
dec
call
jb
push
pop
push
push
mov
scas
test
bound
popf
add
cs
inc
inc
xlat
adc
jns
add
push
add
sbb
in
push
or
icebp
mov
pop
cmp
fcmovbe
push
xor
aad
inc
push
aad
pusha
pop
aad
ss
pop
xchg
shr
mov
ret
xchg
inc
xchg
pop
shl
addr16
adc
mov
iret
mov
adc
lods
add
inc
out
xchg
jle
(bad)
mov
mov
gs
(bad)
xchg
or
pop
add
jle
aas
shl
test
mov
inc
ds
jge
xor
imul
jnp
retf
sahf
jp
in
xor
popf
sahf
addr16
stos
ins
mov
jo
xor
(bad)
mov
xor
and
movs
lock
xchg
popa
sbb
inc
or
push
or
or
(bad)
ins
cmp
inc
xlat
out
bound
pop
mov
and
inc
jnp
or
add
ins
rcr
add
shl
or
sub
ret
mov
dec
addr16
mov
inc
outs
pusha
lods
(bad)
and
xchg
mov
(bad)
mov
dec
mov
data16
push
xchg
push
jns
call
jge
cmp
xchg
inc
mov
mov
mov
fisubr
inc
fwait
hlt
jg
adc
inc
ins
dec
scas
nop
adc
adc
sub
clc
sbb
pusha
cmovbe
(bad)
cmp
sub
dec
mov
add
push
ins
and
mov
or
scas
lods
cmps
(bad)
lock
or
std
inc
sub
and
mov
pop
int3
xchg
push
cmps
jp
push
xor
sbb
pop
inc
sbb
xchg
xor
stos
gs
fs
cmp
xor
movs
inc
xchg
jo
nop
daa
jmp
loop
in
mov
ss
pop
push
adc
inc
xor
sbb
or
loop
outs
lods
add
enter
outs
or
sbb
mov
push
ficom
or
add
and
pop
fisttp
loope
xchg
jmp
mov
daa
add
std
out
push
(bad)
and
xchg
sbb
fwait
in
jle
mov
or
popf
mov
dec
push
cwde
sbb
jmp
xchg
sti
xor
mov
sub
cmp
sub
xchg
cmps
loope
mov
imul
add
leave
dec
mov
xor
das
iret
adc
adc
fsubr
pop
lea
scas
inc
stos
(bad)
js
rcl
inc
add
jg
in
push
xor
mov
and
add
sub
jnp
shl
sbb
xor
mov
or
jo
ins
xchg
and
ds
inc
xlat
cmp
add
xor
lahf
test
movs
call
add
test
and
dec
sbb
or
pusha
loop
or
dec
mov
pop
in
mov
pop
xchg
arpl
jmp
mov
idiv
js
sbb
sub
int3
sahf
jp
ret
cli
retf
cmps
add
imul
outs
push
adc
adc
mov
and
aad
ret
aaa
push
not
lds
dec
idiv
out
add
(bad)
mov
or
and
push
xchg
pop
test
data16
push
lea
jge
push
xchg
sbb
inc
rcl
mov
dec
icebp
mov
sbb
loop
xchg
jae
test
xchg
bound
xchg
test
jecxz
in
enter
out
dec
dec
ret
int3
aad
or
hlt
jae
lds
lea
sbb
mov
and
cmp
add
jb
push
lods
or
sbb
frstor
cmp
sti
inc
adc
dec
lock
xchg
(bad)
cld
dec
mov
or
test
ss
pusha
cwde
pusha
in
dec
fwait
inc
inc
aad
dec
jp
adc
and
cld
mov
out
jl
pop
shl
cdq
sub
add
or
and
jnp
mov
adc
cmp
popa
xor
daa
int3
out
fucom
pop
popf
bound
mov
shl
and
das
xchg
and
jne
push
and
ja
or
and
lock
mov
stc
push
out
pop
jae
jne
jmp
xchg
pushf
cs
inc
push
es
idiv
std
loopne
sbb
hlt
fwait
push
cmc
pushf
add
lahf
fadd
or
sub
and
pop
cmp
mov
or
xchg
jne
add
push
fdivr
lods
aad
push
test
gs
fst
sub
std
mov
repz
outs
adc
fnstsw
in
mov
bound
loop
movs
jae
fiadd
adc
pop
fs
sbb
imul
adc
popa
aas
push
(bad)
test
ja
icebp
sbb
clc
inc
mov
sub
dec
inc
adc
push
rcr
cmp
sar
test
add
jmp
mov
loopne
adc
sub
fwait
cmps
mov
jb
lods
sar
inc
jb
sbb
or
jb
push
fisubr
push
add
mov
fist
xchg
into
dec
lahf
shr
imul
imul
in
in
push
cmp
mov
ret
mov
ret
sbb
imul
jno
cs
out
(bad)
jl
shl
aad
jp
jne
pop
dec
cmp
mov
push
or
fild
inc
dec
int
mov
xorps
pop
and
and
imul
ret
sub
es
pop
aas
popf
cmps
ds
inc
push
mov
pop
pop
aad
pop
sbb
dec
ins
inc
popa
movs
pop
sbb
cmps
add
adc
sbb
dec
sub
out
dec
std
jle
leave
outs
aad
xchg
xchg
stos
ins
mov
dec
repz
pop
pop
pop
fmul
inc
retf
jle
xchg
stc
repnz
xchg
in
mov
test
imul
into
arpl
pop
dec
or
lahf
mov
push
(bad)
retf
fs
fld
cmp
dec
adc
cmps
das
cmp
fist
push
cmps
sbb
jmp
(bad)
dec
inc
movs
add
push
gs
sar
je
and
mov
out
xchg
fxch
jnp
xchg
mov
mov
or
mov
jge
sbb
jmp
aas
jg
icebp
mov
pop
je
jbe
mov
sbb
es
je
fnstsw
and
push
jae
adc
mov
pusha
leave
rcl
cmp
jg
cmp
int3
out
rol
int3
fisubr
dec
gs
mov
dec
pushf
mov
add
mov
(bad)
pop
call
data16
call
add
pop
dec
pop
call
adc
inc
jl
call
shr
pop
in
enter
mov
in
sub
add
mov
scas
cdq
test
mov
test
sbb
je
mov
add
fs
js
push
icebp
test
popf
jo
inc
cmp
loopne
mov
mov
(bad)
rcr
repnz
xor
leave
fisttp
or
push
mov
dec
rcl
mul
or
fiadd
sbb
mov
popa
lods
cmps
call
and
and
add
addr16
push
and
or
pop
ret
xor
push
xchg
dec
or
mov
inc
mov
fprem1
mov
popa
fist
stc
cmp
cmp
mov
pop
jnp
adc
jb
pop
jo
mov
pop
lock
pusha
out
je
sub
call
scas
jbe
mov
je
(bad)
jp
fdivr
or
ins
push
mov
ja
mov
or
nop
(bad)
in
dec
pop
sub
jmp
and
fwait
sbb
or
in
stos
inc
fdiv
lods
dec
mov
pop
push
pop
ror
movs
aaa
push
jb
jmp
sub
pop
push
rol
test
lods
cli
stos
jmp
dec
aas
(bad)
fs
mov
sub
push
push
cs
sub
jl
mov
push
aaa
call
dec
jne
add
jne
in
(bad)
imul
mov
test
ins
das
ja
into
test
add
sti
inc
adc
loopne
add
and
mov
mov
adc
mov
cmps
push
cli
push
dec
es
(bad)
pusha
pop
ret
out
mov
sub
mov
imul
push
mov
mov
cmp
adc
and
inc
xchg
ss
gs
nop
cmp
(bad)
cli
jns
sbb
(bad)
fsub
mov
sbb
addr16
mov
xor
mov
or
shr
into
add
in
call
jbe
sar
and
movs
mov
(bad)
sbb
bound
in
and
adc
retf
inc
dec
dec
inc
jns
push
cmp
arpl
stc
retf
out
test
dec
add
aas
data16
arpl
shl
ja
mov
test
pusha
(bad)
jmp
arpl
arpl
nop
sub
shl
jnp
xchg
inc
inc
(bad)
popa
sbb
sti
pop
jg
xchg
loope
dec
lods
ja
add
dec
inc
or
jmp
rol
xlat
lods
jnp
dec
(bad)
mov
(bad)
cmp
mov
fldz
pusha
add
or
arpl
push
mov
(bad)
sbb
test
mov
cdq
dec
push
test
add
dec
dec
xor
ret
test
mov
out
(bad)
pop
into
js
jecxz
lahf
cmp
sub
inc
ficom
into
push
leave
arpl
sub
or
je
dec
sbb
jbe
outs
lahf
jbe
or
push
fstp
fbld
push
scas
ret
scas
das
cs
lea
test
jae
push
ss
xchg
add
pop
daa
xor
jae
mov
mov
mul
add
xchg
xchg
jne
sahf
je
in
adc
push
rcl
out
push
jno
ins
push
xchg
xor
mov
arpl
div
mov
sahf
inc
pop
rcl
pusha
mov
cmps
(bad)
adc
push
mov
cwde
mov
imul
pushf
xchg
ss
repnz
arpl
mov
mov
adc
push
aam
loopne
xlat
pop
bound
jo
(bad)
adc
shl
pop
sbb
push
xchg
imul
sub
sub
ss
push
out
test
mov
xor
(bad)
sub
outs
jmp
fadd
dec
es
cmp
xor
mov
cs
movs
(bad)
fldenv
shl
and
jne
xor
(bad)
lea
sbb
les
fs
add
enter
mov
mov
mov
bound
in
inc
sbb
cmp
call
lds
or
xchg
lods
sbb
mov
retf
clc
int
ret
aas
sbb
mov
jno
es
inc
mov
jo
inc
outs
xchg
or
push
es
cwde
push
(bad)
into
mov
jb
cmps
outs
out
dec
lea
cmps
dec
mov
out
xchg
inc
(bad)
in
movs
test
sub
nop
pop
adc
scas
cld
push
bound
inc
ins
push
mov
jge
inc
push
mov
test
and
push
add
lock
mov
sbb
adc
retf
cmc
add
in
cld
pop
stos
popa
jo
sbb
mov
clc
stos
(bad)
or
inc
out
pop
sub
iret
test
repnz
mov
mov
into
add
(bad)
jmp
jg
mov
(bad)
adc
jmp
sub
inc
data16
outs
fst
push
cmp
adc
mov
sub
xor
cmp
sub
jmp
jle
mov
retf
xor
stos
cdq
sti
arpl
es
cmp
test
dec
stos
push
adc
movs
or
mov
jmp
shl
out
mul
and
jne
(bad)
neg
pop
out
inc
inc
pop
loopne
dec
mov
mov
dec
add
cmp
and
(bad)
xchg
xchg
push
add
cld
cmp
fcomp
xor
mov
out
movs
xchg
xchg
mov
jg
jnp
out
sub
aaa
dec
add
lahf
shl
pusha
nop
jp
sbb
mov
fisttp
stos
mov
xor
das
fadd
fs
es
(bad)
daa
and
iret
sti
rol
pop
fdivr
sbb
scas
cmp
ror
and
pop
outs
out
pop
add
pop
add
jg
add
jb
pop
push
mov
imul
ret
mov
jne
and
loopne
ror
stos
push
fmul
xor
gs
ror
adc
(bad)
je
dec
test
jne
adc
in
or
imul
sub
adc
loop
mov
(bad)
pop
mov
sbb
sub
daa
xchg
xor
rcr
cmp
call
gs
dec
scas
xchg
sub
inc
dec
sub
(bad)
ficom
(bad)
pop
dec
test
jnp
ds
clc
repnz
popa
pop
stos
ror
push
sbb
cli
xchg
mov
push
sub
scas
cld
sbb
sub
sar
add
push
shl
mov
push
dec
dec
pop
dec
pop
sub
xor
std
and
cs
movs
pop
retf
mov
cmp
pusha
dec
sbb
icebp
push
cmp
jae
(bad)
(bad)
std
sub
cmps
jne
and
ret
mov
ins
jns
adc
mov
js
mov
outs
xor
dec
inc
push
ins
ss
mov
(bad)
mov
jle
dec
in
xchg
lea
xchg
add
neg
(bad)
mov
fcmove
xlat
and
ins
out
and
nop
xchg
call
inc
add
and
jae
scas
in
rcr
aad
mov
mov
push
mov
sub
scas
or
cli
sbb
xchg
imul
ror
push
and
(bad)
mov
adc
xor
sbb
push
push
inc
fwait
sub
int
pop
and
push
mov
loop
cmp
call
inc
addr16
lods
fdivr
ins
das
sbb
dec
loopne
inc
adc
jbe
add
xchg
call
rol
pusha
into
call
adc
push
fld
mov
fcmovbe
mov
add
out
(bad)
xchg
dec
(bad)
test
lahf
jns
movs
or
ja
xchg
sbb
stc
sub
push
clc
jae
or
jmp
inc
ins
jns
addr16
xor
push
arpl
outs
push
(bad)
pop
mov
into
inc
je
sbb
or
popa
outs
lods
xchg
xor
jg
pushf
sub
jle
and
scas
and
out
add
inc
xor
int
addr16
mov
les
jo
pop
mov
in
cmp
mov
fyl2x
push
repnz
inc
cmps
cdq
leave
fld
push
ss
mov
fwait
xchg
into
out
cmp
out
in
inc
outs
movs
movs
outs
adc
sub
int
aam
xlat
sar
dec
arpl
aad
adc
sub
hlt
or
xchg
in
push
dec
into
xchg
repz
mov
xchg
mov
shl
mov
adc
outs
imul
or
dec
xchg
fistp
fnstcw
jle
xchg
aas
push
or
inc
xchg
inc
in
out
sub
imul
sbb
inc
xchg
cmp
mov
fwait
data16
(bad)
lods
cdq
aaa
or
addr16
ds
iret
sbb
xchg
add
inc
clc
cmps
sub
mul
push
retf
pop
out
jb
add
lahf
push
mov
jno
aaa
cmp
call
test
arpl
dec
jp
jg
lods
push
jecxz
pop
inc
sahf
repnz
or
fst
loop
jne
inc
rcr
cmp
fwait
bound
mov
push
imul
mov
push
adc
pop
loopne
cmp
jbe
push
mov
imul
lock
sub
push
in
inc
dec
add
jecxz
jo
pop
dec
inc
mov
xchg
cmp
xor
mov
jmp
bound
retf
jo
mov
add
sti
fadd
jno
(bad)
jmp
ins
cli
mov
cli
jae
(bad)
and
mov
add
xchg
popf
std
jns
and
lock
cdq
dec
push
ret
jns
dec
leave
in
or
scas
jge
ficom
les
es
into
push
hlt
bound
dec
call
mov
adc
xchg
outs
ds
mov
mov
sahf
addr16
dec
dec
icebp
inc
cwde
sub
cmp
mov
mov
imul
enter
jecxz
mov
and
mov
jb
jge
cmp
aas
and
xchg
add
imul
shl
or
dec
and
popf
push
push
sbb
(bad)
xchg
std
das
mov
xor
stos
sti
ret
bnd
push
(bad)
scas
mov
add
addr16
inc
push
pop
repnz
aam
dec
cwde
lds
out
mov
inc
fild
sbb
push
and
cmp
fwait
mov
pushf
xor
cmp
fisubr
(bad)
bound
mov
in
add
call
jne
jmp
add
fdiv
push
test
inc
xchg
inc
shl
pop
xor
mov
sbb
bound
jo
(bad)
retf
xchg
sbb
call
ficomp
jb
cmps
imul
ficomp
cmp
push
sub
and
dec
inc
je
ds
sub
das
int
push
jle
data16
sub
xchg
loope
or
and
jp
dec
xor
inc
jb
pusha
mov
cmps
leave
jno
pop
inc
hlt
loop
pop
scas
(bad)
popa
stos
push
sbb
(bad)
rcl
push
ror
ror
data16
mov
mov
push
mov
dec
push
loop
cmp
hlt
pop
icebp
sbb
(bad)
adc
inc
(bad)
sbb
out
das
sahf
dec
aas
mov
popf
xor
aad
push
nop
sbb
int3
xor
jge
(bad)
mov
or
jmp
lods
adc
cwde
in
xor
push
nop
pop
push
push
dec
clc
in
imul
cmp
shr
cmp
ss
cli
lods
lods
jle
shl
jmp
test
push
add
ins
push
rol
inc
in
popf
mov
or
aam
(bad)
out
and
lea
lds
js
aaa
xchg
mov
addr16
jge
leave
fiadd
inc
ret
push
inc
cld
shl
and
popf
adc
stos
stos
jne
clc
cmp
xor
call
push
int
leave
stos
jae
or
dec
pop
jecxz
clc
cmp
stos
in
jp
(bad)
xchg
dec
scas
into
ss
pop
xchg
outs
es
cmp
shl
bound
je
push
ror
out
test
inc
adc
rcl
cwde
mov
xchg
ss
push
arpl
aam
shl
xchg
(bad)
in
neg
pop
xrelease
push
arpl
(bad)
test
cwde
cmps
out
xor
adc
or
cmc
outs
into
adc
call
sbb
dec
adc
pusha
jb
xor
fld
inc
gs
mov
je
stos
outs
std
daa
cdq
mov
and
leave
pop
add
in
xor
xor
mov
call
lods
mov
aas
movs
leave
sbb
outs
push
fidiv
clc
jo
ja
stc
add
pop
fidiv
movs
push
jae
ror
and
gs
xlat
fwait
push
mov
and
mov
call
retf
pop
pop
rcr
dec
les
sahf
out
imul
dec
jo
add
cmc
jmp
lahf
imul
std
push
data16
adc
clc
repz
movs
or
in
out
push
arpl
dec
add
sub
sbb
fdivrp
popa
lds
fsubp
jno
inc
enter
and
mov
idiv
std
add
xor
jo
push
retf
and
sub
xchg
cmc
pop
add
faddp
cmp
cmp
js
pusha
rcl
sbb
cmp
adc
push
aaa
push
sahf
adc
je
sbb
test
cld
push
sbb
xchg
or
xor
cdq
and
pop
ins
mov
(bad)
fild
cmp
pushf
cmp
pusha
out
imul
dec
adc
cmps
(bad)
push
mov
rol
sbb
sbb
popf
sub
lds
imul
(bad)
xchg
repz
retf
inc
fld
enter
sbb
or
jb
stos
and
call
xchg
sbb
pop
fild
xor
inc
jmp
push
cmps
outs
jnp
and
or
nop
std
xchg
pop
adc
fbstp
jle
inc
add
push
xor
hlt
add
pusha
mov
fisubr
clc
sbb
dec
imul
cmps
xchg
(bad)
ja
fisttp
or
(bad)
add
add
jge
mov
mov
jmp
pop
pop
aad
xor
pop
es
xchg
popa
dec
popf
fisub
fxch
mov
mov
outs
xchg
pop
mov
clc
mov
loop
mov
mov
xchg
imul
outs
test
push
jns
mov
call
jmp
pop
shl
push
mov
pop
dec
xchg
loopne
dec
sbb
pop
test
sub
mov
es
sbb
jmp
sub
imul
(bad)
sbb
stos
imul
aad
fild
mov
inc
enter
js
inc
imul
enter
mov
clc
cld
push
loopne
repz
inc
inc
call
sti
cs
xchg
cmp
and
leave
jbe
jne
inc
push
xchg
jae
cli
sar
jb
adc
adc
and
(bad)
call
inc
icebp
sub
add
sbb
scas
pop
xchg
aas
push
clc
cwde
push
jle
jecxz
inc
popf
ret
inc
push
or
loop
xlat
xor
aam
gs
je
dec
cmp
aas
hlt
jl
fdivr
add
mov
or
xchg
push
jmp
out
or
dec
pop
sub
inc
adc
nop
ret
int3
ds
outs
dec
mov
(bad)
mov
cmp
inc
ror
jmp
push
adc
mov
or
or
(bad)
pushf
ins
mov
std
and
(bad)
repz
jmp
mov
adc
adc
shl
into
pop
fwait
cwde
in
xchg
in
jecxz
inc
cs
xor
bnd
sbb
aad
xchg
sahf
dec
(bad)
ja
je
std
and
mov
adc
adc
lds
add
rol
or
cmp
ins
xchg
inc
sbb
mov
inc
xor
dec
frstor
ret
or
pop
push
fisub
mov
loopne
shl
rcr
inc
mov
adc
cmp
pusha
adc
push
cmp
xor
(bad)
cmp
sbb
addr16
dec
(bad)
xchg
sub
iret
mov
mov
pop
sub
int
push
dec
shl
aad
rol
aad
xchg
ss
pushf
(bad)
sub
pop
(bad)
jne
mov
ror
into
imul
and
xchg
xor
cmp
mov
jns
mov
mov
mov
into
clc
lock
mov
hlt
lds
cs
ss
rcr
in
pcmpgtb
int3
fcom
cmp
mov
in
ret
call
cmp
mov
or
mov
jp
cld
in
in
(bad)
inc
aad
mov
xchg
xchg
push
sahf
addr16
out
mov
rcr
or
(bad)
or
jns
sbb
lea
sbb
mov
inc
into
or
cmovb
xor
adc
test
aad
fidiv
std
inc
(bad)
and
jnp
es
test
call
jns
out
jo
dec
nop
cmp
lahf
push
push
push
jae
addr16
mov
mov
retf
rcl
retf
popf
dec
mov
xchg
push
pop
aas
adc
addr16
jl
out
es
adc
(bad)
in
int
ins
in
pop
cmps
out
stos
loope
outs
add
inc
sub
xchg
aam
into
pop
fcom
adc
jp
js
je
cmp
inc
inc
jl
push
mov
push
daa
push
add
test
mov
fsubr
in
cmp
movs
ret
push
mov
icebp
gs
fsubr
push
push
dec
movs
mov
cld
push
and
les
mov
pop
(bad)
fdiv
pushf
xchg
and
addr16
mov
xor
xchg
cli
dec
cs
dec
cmc
adc
jns
xchg
test
mov
ins
and
retf
or
and
pop
xchg
sbb
out
inc
lods
mov
dec
test
jp
jmp
cmp
call
imul
test
sub
pop
call
mov
jmp
in
dec
adc
imul
and
mov
pop
push
jl
mov
aad
push
mov
iret
sub
xor
clc
cs
pop
(bad)
cmp
popa
or
jmp
or
xchg
jbe
pop
ror
lock
cmp
sbb
jns
fist
pop
add
mov
sub
push
nop
inc
mov
out
cmp
es
adc
sbb
arpl
dec
arpl
aad
addr16
mov
not
sti
stc
xchg
sbb
leave
(bad)
(bad)
pop
les
dec
mov
mov
psubsb
jmp
xchg
aaa
addr16
daa
mov
add
gs
je
clc
(bad)
adc
dec
mov
rcr
jb
shr
repnz
mov
mov
adc
pop
cmp
test
ret
les
outs
inc
cmp
icebp
jl
sub
ins
fidivr
popf
push
pop
dec
xchg
adc
mov
add
xchg
mov
push
fcomp
ret
mov
hlt
xchg
das
sbb
jecxz
int
push
or
das
iret
push
push
out
jns
mov
xor
mov
mov
push
adc
inc
pop
fwait
and
push
movs
loopne
ret
inc
scas
stos
