cwde
xchg
bound
mov
(bad)
mov
pop
xor
arpl
les
ins
(bad)
out
mov
sub
into
or
cmc
int3
mov
mov
push
and
(bad)
mov
mov
enter
stc
sbb
jb
retf
and
jge
mov
pop
jbe
sbb
mov
es
push
and
cmp
mov
sbb
jae
and
dec
sub
sbb
mov
test
cdq
fstp
and
xchg
dec
xchg
in
add
jle
gs
daa
cmp
movs
pop
mov
adc
mov
scas
(bad)
fucomip
popa
(bad)
pop
mov
mov
cmp
mov
ins
mov
jae
jge
das
add
mov
mov
mov
out
fcomp
ins
sbb
aad
sub
mov
out
test
sahf
mov
jmp
fistp
inc
fistp
daa
ja
xor
mov
retf
rcl
dec
popa
pushf
mov
enter
jo
cmps
xchg
fwait
test
push
push
test
nop
cmc
dec
inc
lods
xchg
(bad)
(bad)
adc
xchg
cmp
push
cmp
daa
add
inc
dec
and
jo
shl
hlt
mov
cmp
cmp
add
xchg
clc
sub
mov
iret
adc
and
dec
aas
lods
adc
adc
push
nop
push
cmp
pop
inc
mov
imul
fdiv
sbb
cmp
dec
xchg
inc
cmp
fist
repnz
not
aam
das
push
mov
movs
add
push
xchg
dec
ds
and
mov
xchg
outs
pushf
dec
sbb
out
add
adc
mov
xor
adc
es
fsub
pop
cwde
push
mov
call
push
retf
sub
fisubr
inc
ss
inc
les
ss
das
js
icebp
add
movs
pushf
daa
in
xchg
mov
pop
jg
addr16
repnz
(bad)
pop
ins
out
or
and
inc
out
fisubr
loopne
jmp
test
add
in
rol
in
inc
xchg
mov
fistp
in
mov
aam
mov
clc
bound
xchg
lds
pop
les
xor
push
or
in
idiv
inc
xchg
ror
inc
mov
cli
cmp
js
sti
jmp
scas
adc
push
mov
mov
mov
xchg
call
lahf
xlat
movs
push
fst
retf
and
add
add
arpl
push
jns
out
in
mov
icebp
bound
xor
(bad)
push
jp
jmp
and
addr16
push
add
movaps
test
ficom
sar
add
jmp
into
inc
sbb
das
and
je
iret
mov
pop
sub
mov
cmp
xchg
lods
mov
(bad)
jmp
push
mov
dec
imul
pop
jecxz
je
in
xor
les
icebp
popa
fs
daa
or
cmp
std
add
test
sub
outs
and
std
mov
xchg
xchg
push
mov
iret
sub
fs
lds
jne
aam
mov
mov
lds
(bad)
cmp
in
and
mov
jne
mov
xor
aas
add
leave
xor
cmc
mov
pop
mov
retf
fucomi
xor
int3
call
dec
push
lds
aad
retf
pop
mov
sub
xchg
scas
in
sub
xchg
cmps
adc
mov
xlat
cdq
dec
aaa
popa
push
js
cmps
ds
std
jne
loopne
sub
mov
sbb
aam
cld
(bad)
js
addps
adc
std
loope
in
(bad)
pop
sub
rol
(bad)
add
xchg
jmp
pop
fisub
push
pop
fs
(bad)
pop
out
in
dec
je
push
fisttp
aas
and
dec
jl
mov
pop
fist
mov
jbe
les
push
loope
adc
inc
repnz
gs
dec
sub
test
inc
push
fs
repz
clc
inc
add
inc
data16
xchg
sbb
ret
sub
xchg
je
fld
out
rcl
pop
call
push
fimul
push
pop
call
ja
ficom
test
ins
jnp
iret
aad
lods
sbb
stc
or
or
imul
jp
lods
or
shl
imul
mov
jle
mov
and
add
or
cld
movs
fstp
inc
retf
leave
dec
adc
in
enter
addr16
inc
cwde
fiadd
add
sbb
sub
(bad)
fcmovnu
adc
cdq
into
data16
sbb
lea
fsubr
scas
or
mov
arpl
xchg
out
xor
cdq
xor
arpl
int3
and
retf
gs
scas
dec
sub
fisttp
sub
add
add
pop
cli
mov
mov
mov
aas
test
stos
out
(bad)
sahf
pop
xor
stos
or
push
mov
add
pop
sub
push
mov
pop
mov
xor
cwde
push
test
mov
sub
(bad)
movs
loop
and
xchg
lds
nop
gs
or
xchg
cwde
movs
fs
mov
scas
cmp
in
imul
pop
inc
jb
ja
mov
jae
inc
or
mov
mov
sub
sub
shr
and
inc
push
iretw
in
cmp
mov
fldenv
sub
jmp
popa
push
arpl
or
repz
movs
in
cmp
and
mov
sbb
out
push
add
movs
cwde
lods
pop
jmp
pop
jns
cld
enter
push
pop
adc
sub
fmul
adc
push
sub
inc
aas
push
or
ffree
push
ret
add
xchg
(bad)
rcl
test
pop
popa
dec
mov
pop
cmps
scas
(bad)
mov
push
push
sbb
aad
mov
fiadd
(bad)
in
push
fdiv
rep
jp
mov
outs
adc
retf
pop
push
rcr
bound
jae
lods
add
xchg
sahf
out
mov
loope
xchg
xchg
mov
push
rcr
fnstcw
(bad)
push
or
jbe
pop
mov
inc
cmps
cmps
mov
les
sub
dec
fpatan
cli
xchg
mov
xchg
test
imul
push
std
jecxz
adc
(bad)
in
pop
mov
scas
leave
pop
(bad)
pop
and
inc
mov
cmp
imul
or
out
cli
add
cmc
or
pop
xchg
test
xor
sbb
int3
xchg
out
mov
scas
jl
in
pop
adc
dec
add
imul
imul
test
push
and
mov
outs
pop
daa
mov
push
mov
xchg
jo
dec
sbb
pop
sub
rol
jp
add
dec
cs
not
cmp
outs
rcr
inc
ds
inc
loope
and
jno
jecxz
loope
cld
cmp
call
out
mov
xchg
outs
jmp
lods
das
pop
rcr
test
add
stos
ja
inc
push
or
rcr
add
mov
and
pop
cdq
mov
ret
mov
mov
ja
call
push
cmp
jno
in
(bad)
ficomp
loop
xchg
sub
es
and
mov
jle
adc
sub
fld
jecxz
rcr
in
ss
pop
in
pusha
fs
ds
mov
ror
sub
ss
push
sbb
inc
mov
lock
lds
aad
test
fsubr
movs
inc
dec
and
movs
arpl
mov
sar
ins
into
dec
dec
cmp
or
cmp
js
push
adc
bound
call
jns
push
jns
add
add
ret
cmp
outs
push
mov
cmp
pop
adc
mov
(bad)
mov
jg
fwait
movs
inc
(bad)
aaa
push
std
daa
fsub
xchg
pop
push
cmps
aaa
mov
sti
cdq
cld
push
mov
dec
out
sub
mov
lds
sub
clc
mov
or
or
lea
dec
mov
add
outs
repz
mov
cmps
or
jnp
cwde
out
push
fisubr
into
mov
mov
and
inc
hlt
mov
not
push
add
xor
fsub
repnz
add
aam
mov
jmp
xchg
mov
xchg
cmp
cmp
int
mov
mov
push
mov
sti
movs
push
retf
jns
pop
cmp
pop
aas
or
fild
retf
int3
out
clc
push
out
add
cmp
pop
sbb
iret
sahf
lock
call
gs
outs
test
(bad)
lahf
loopne
jbe
lods
cmps
adc
jno
fwait
mov
inc
mov
xchg
sahf
dec
or
mov
fsubp
movs
sbb
inc
rcr
(bad)
bound
adc
push
jmp
jb
cmp
dec
sbb
mov
mov
iret
sar
add
push
cmp
or
das
push
or
cdq
lods
out
pop
rcl
std
fcmovnb
fs
xchg
dec
pop
sub
shr
xor
(bad)
loop
xchg
cwde
jnp
and
jmp
ret
fbld
idiv
test
fild
idiv
shl
fisttp
imul
mov
sbb
data16
and
inc
inc
or
retf
call
mov
vpshuflw
adc
cmp
popf
push
test
int
aaa
lahf
add
int
mov
mov
dec
and
pushf
mov
mov
push
repz
xchg
jecxz
inc
popa
jl
mov
add
mov
mov
pop
cmps
push
sub
xchg
cs
out
test
xchg
sbb
arpl
outs
mov
nop
loop
push
dec
out
sbb
sbb
not
leave
dec
push
jnp
loopne
cmp
psubsb
or
(bad)
lods
xchg
ficom
add
fstp
scas
(bad)
adc
inc
mov
xor
xchg
sub
pop
inc
sbb
mov
add
xchg
ins
cdq
fistp
pop
mov
aad
stc
mov
and
add
inc
mov
add
push
pop
cmp
jmp
pop
jb
inc
xor
jge
icebp
cmps
retf
fadd
cwde
jge
mov
rcl
aam
sub
arpl
cdq
shl
ret
sar
mov
aam
dec
mov
cmp
retf
jg
push
cmp
mov
mov
neg
jno
(bad)
aam
sbb
gs
shl
jg
add
cmp
out
or
mov
dec
pop
test
mov
outs
mov
jp
in
retf
xchg
and
fcmovb
add
nop
mov
aas
jb
push
add
and
in
cmps
xor
sbb
mov
enter
repnz
jg
and
std
repnz
and
popa
sti
retf
popf
sbb
mov
pop
sub
out
test
stos
out
mov
mov
bound
jae
push
mov
cld
adc
movs
xchg
aaa
test
in
mov
adc
dec
ror
push
jns
cmp
sbb
sbb
cli
jmp
adc
loope
mov
inc
fisttp
gs
sub
das
stos
loope
test
xchg
and
sbb
sub
or
cmps
movs
sbb
sub
and
pop
add
or
out
loop
pop
and
mov
hlt
dec
fnstcw
les
jbe
and
or
sbb
dec
fistp
repnz
sub
jb
mov
cmps
adc
stc
adc
inc
adc
sbb
push
jecxz
outs
daa
xor
in
jbe
push
mov
pop
cmp
sub
xchg
pop
mov
fdiv
xor
mov
std
lods
cdq
ret
fsubr
push
push
bound
sbb
pusha
test
adc
loope
lods
push
sub
out
mov
xchg
cmp
sahf
mov
add
popa
gs
add
pop
add
jmp
lods
jae
fdivr
cli
pavgb
pop
test
mov
jne
out
aad
cmp
add
enter
sbb
xor
pushf
inc
push
jmp
pop
test
inc
push
jae
mov
pop
stos
mov
(bad)
mov
mov
std
into
push
js
mov
loopne
out
mov
call
out
cld
cmp
inc
mov
repnz
pusha
pop
nop
and
iret
cmps
xor
ins
enter
in
ins
int3
jmp
stos
jp
imul
dec
add
push
jno
fcomp
into
stos
leave
adc
dec
jmp
aaa
dec
adc
lods
add
jle
push
in
mov
dec
repz
mov
xchg
jno
mov
stc
data16
inc
rcr
popa
dec
sbb
add
test
mov
mov
nop
movs
push
and
mov
jae
push
cdq
jno
int
cwde
lds
jg
out
adc
xor
sbb
mov
fisub
jnp
movs
jo
lods
std
cmp
shl
test
js
and
imul
and
fwait
mov
leave
cwde
pop
ins
or
repz
inc
pop
mov
or
stos
test
mov
adc
mov
movs
int
test
fcmovnu
dec
xor
lahf
test
lds
xor
cmp
mov
data16
ins
pop
enter
aad
aad
retf
out
loope
dec
repz
sbb
push
(bad)
sbb
jp
xlat
stos
into
cdq
sbb
jb
add
aaa
inc
mov
ins
push
and
outs
sbb
movs
fwait
xchg
fdiv
jle
mov
mov
sub
test
mov
add
sub
pop
add
jl
sub
outs
out
fadd
(bad)
pop
jp
mov
ret
bound
ja
jns
imul
gs
xchg
jo
call
pop
enter
retf
adc
mov
dec
call
push
lds
cmp
sbb
rcl
add
sbb
mov
(bad)
les
dec
mov
xchg
iret
pop
push
stos
bswap
xor
xchg
push
loopne
dec
je
xchg
les
sti
inc
mov
pop
test
or
xor
jp
loopne
pushf
pop
sbb
and
sub
dec
add
push
test
cdq
xor
cli
fsub
cmps
scas
mov
fild
jecxz
les
iret
jmp
sbb
or
add
mov
mov
adc
dec
and
loop
sub
cdq
pushf
cmp
test
sub
(bad)
jmp
dec
xor
sub
fisttp
ret
sbb
pusha
pushf
shl
pop
xchg
retf
fidivr
sbb
xor
std
or
adc
fs
(bad)
sti
xlat
out
push
xchg
in
aam
and
(bad)
call
sbb
push
ins
jmp
mov
cmc
adc
rol
mov
dec
neg
popf
stos
cdq
jge
push
add
addr16
adc
call
popa
sub
cld
test
enter
stos
add
push
inc
mov
stos
cmp
cmps
lds
in
inc
aam
mov
scas
lds
mov
outs
jp
mov
pop
xor
fidiv
sub
add
mov
out
pop
movs
dec
cld
mov
or
adc
cmc
pop
sbb
or
loope
lds
xchg
xor
mov
retf
push
icebp
cmc
loopne
cmp
xchg
sbb
scas
push
cdq
inc
fadd
daa
add
fist
nop
test
adc
out
pop
data16
stos
clc
cmps
addr16
sbb
pop
mov
cs
xchg
aad
cs
mov
cmp
push
pop
inc
mov
push
push
push
sbb
xor
push
inc
leave
sbb
add
or
inc
retf
stos
mov
mov
jp
xchg
lods
push
xchg
adc
bound
frstor
mov
loope
jl
and
sahf
pop
test
dec
mov
inc
mov
inc
sub
les
data16
cmp
mov
push
cmp
(bad)
cmp
(bad)
mov
cmp
sub
cmc
inc
jmp
test
push
jmp
inc
imul
jno
adc
(bad)
fmul
aas
jmp
dec
cmp
test
pop
(bad)
loopne
add
fiadd
jge
mul
dec
sbb
and
push
mov
cmps
or
stos
hlt
and
leave
data16
stos
mov
ror
sahf
les
cmps
adc
mov
dec
dec
stc
mov
lods
cmp
lea
out
rcl
jno
in
add
push
mov
push
outs
push
xlat
dec
push
rol
test
sub
jb
imul
(bad)
jnp
cmp
test
retf
mov
or
adc
iret
popf
jg
in
mov
adc
in
stos
movs
xchg
mov
lahf
jb
xor
addr16
ja
pop
lahf
adc
adc
mov
sti
and
mov
test
inc
jmp
call
test
loopne
call
fnstcw
jp
and
imul
push
iret
gs
fwait
mov
out
add
xchg
pop
sahf
pop
cmp
retf
push
addr16
frstor
jmp
stos
loopne
sub
cmp
out
add
sbb
cld
xor
aad
ret
adc
and
mov
fild
lods
jge
and
clc
pop
inc
inc
adc
into
fist
ret
js
mov
jl
fwait
jl
ss
rcl
mov
add
pop
bound
dec
sub
mov
cmp
jo
call
ds
and
lea
or
xor
push
inc
push
inc
in
loop
(bad)
cmp
xor
pushf
test
mov
int
push
pushw
cmp
shr
call
push
dec
or
adc
push
cmp
les
test
jae
lods
sub
sbb
jle
add
cmp
loop
in
inc
jmp
pop
popa
sbb
cli
ret
int3
mov
loope
mov
mov
pop
xchg
xchg
jne
sbb
cwde
fs
fstp
inc
mov
jmp
cmp
mov
imul
mov
push
pop
sub
mov
mov
inc
fadd
add
sub
inc
sbb
lock
xor
loope
hlt
mov
add
ficom
sbb
pop
xor
xor
and
call
jne
call
jp
cli
std
push
cmp
adc
jne
xchg
jns
std
xor
lods
dec
test
xor
xchg
ins
vfrczps
icebp
fild
outs
(bad)
cmp
ja
push
gs
xchg
xchg
dec
mov
lods
push
jle
xchg
es
sbb
aas
mov
dec
outs
outs
pusha
lds
dec
adc
push
aaa
stc
je
push
daa
cmp
out
in
lds
cmp
push
pop
lock
int3
jmp
adc
sub
push
mov
(bad)
popf
dec
xor
test
in
mov
cmc
les
mov
cli
pop
test
mov
xor
movs
addr16
adc
clc
push
bound
icebp
fwait
and
jmp
jmp
push
aaa
or
mov
sar
add
mov
adc
mov
sbb
fist
nop
loopne
pop
jle
jecxz
sbb
sub
push
xor
or
cmc
dec
xchg
les
out
sbb
or
cmp
mov
imul
mov
addr16
adc
and
mov
jge
add
add
inc
test
movs
bound
xlat
test
enter
push
mov
mov
pop
cmps
sub
fstp
jno
and
inc
dec
or
out
mov
and
test
jge
out
call
mov
mov
inc
jb
xor
fsub
mov
inc
and
repz
sub
dec
loopne
movs
xchg
push
mov
(bad)
adc
pushf
xchg
ds
loop
ret
mov
mov
inc
call
xchg
in
cmp
cmp
inc
jno
stc
retw
movs
mov
retf
inc
data16
mov
pushf
loopne
enter
jae
dec
xchg
mov
mov
inc
mov
jo
xchg
daa
and
add
test
loopne
mov
fild
mov
sub
pop
cli
jmp
sub
push
jge
adc
cmps
push
shl
push
xor
pop
retf
call
add
push
call
ret
mov
adc
and
add
in
jecxz
test
imul
xchg
fnstenv
(bad)
cmc
push
or
pop
fldenv
adc
dec
mov
lds
mov
stc
out
jp
movs
out
out
ret
pop
inc
dec
pop
push
out
cdq
mov
inc
outs
or
ja
test
retf
jp
fsub
mov
test
add
movs
test
push
push
into
pop
iret
(bad)
mov
add
cmps
push
cld
addr16
add
push
lods
mov
rcl
shl
dec
pushf
sahf
scas
dec
sub
lock
xor
daa
out
push
jo
call
dec
jno
inc
inc
mov
sbb
div
xor
pop
enter
lock
rdpmc
push
inc
sub
lock
pop
mov
and
cmp
and
push
or
out
js
xor
int3
inc
pop
mov
scas
(bad)
sub
mov
fs
jno
add
add
paddb
mov
inc
pusha
jle
lds
cli
frstor
mov
pushf
jle
imul
cli
cwde
iret
popf
(bad)
dec
dec
(bad)
xchg
bound
push
push
mov
les
push
xchg
cmp
inc
adc
mov
das
fldenv
(bad)
mov
push
cmp
test
lahf
push
inc
test
js
rcr
mov
push
loop
(bad)
xor
jmp
sbb
int
mov
push
sub
pop
mov
fcom
jno
cmp
jmp
inc
lds
mov
cld
jmp
leave
(bad)
div
jae
inc
pusha
lock
adc
inc
mov
inc
or
dec
cli
adc
call
in
pop
xor
repnz
dec
cmp
pop
push
sbb
loop
scas
out
jns
fnop
iret
mov
cli
add
and
mov
ret
ja
xchg
sbb
ds
jp
xchg
xchg
adc
fdivrp
lahf
in
inc
cs
inc
mov
addr16
scas
sbb
push
popa
pop
cmps
test
scas
pop
pop
loopne
dec
neg
lods
push
or
inc
aam
mov
inc
push
fistp
test
xor
mov
xor
dec
sub
clc
adc
ja
rol
jnp
pushf
frstor
mov
aaa
jl
imul
mov
mov
(bad)
test
addr16
mov
outs
lea
(bad)
loopne
scas
or
leave
ds
lods
pop
(bad)
mov
sub
mov
stos
nop
mov
(bad)
mov
add
mov
sbb
push
cmp
pop
pop
loope
push
nop
sub
ins
jle
sub
and
xor
(bad)
idiv
push
pop
dec
(bad)
aaa
shl
push
lock
icebp
adc
clc
xchg
cld
scas
mov
add
mov
inc
je
fucom
adc
outs
adc
xchg
cmps
adc
xlat
imul
cdq
hlt
jnp
test
es
push
test
jnp
xlat
push
js
test
cmp
bound
push
sub
in
sahf
cli
out
ret
div
xor
push
popa
pop
push
sub
aam
sub
ja
pop
ja
push
xchg
icebp
sub
in
retf
mov
mov
lahf
sti
inc
test
icebp
mov
mov
out
shl
sbb
imul
inc
imul
pop
(bad)
rcr
mov
pushaw
mov
push
cwde
out
mov
stos
pushf
or
rcr
mov
push
and
(bad)
xor
call
add
jae
rol
dec
jle
xlat
outs
iret
sbb
mov
add
jmp
cmps
add
and
push
sahf
or
mov
ja
test
(bad)
push
(bad)
xlat
mov
cmps
sar
outs
sbb
xor
(bad)
(bad)
fcomip
enter
lds
mov
xchg
sbb
outs
jmp
js
adc
pop
fst
inc
das
and
xchg
fld
cmp
es
jae
cmp
dec
or
fs
add
xor
retf
fistp
test
loop
ins
scas
test
and
fdiv
push
jle
cmc
push
fistp
(bad)
jo
and
mov
gs
js
sub
dec
pop
popa
loopne
mov
cmp
dec
movs
push
imul
xlat
in
pop
add
scas
push
enter
fnstcw
lds
sahf
lods
(bad)
aad
push
sub
push
je
add
inc
ins
movs
lock
popf
out
add
je
test
dec
mov
jmp
inc
xchg
adc
std
push
cmp
push
pop
in
das
or
loop
push
xchg
aad
popf
push
sub
sbb
sqrtps
cmp
adc
shr
mov
pushf
mov
loope
shr
jp
mov
ret
push
in
dec
adc
lahf
jnp
(bad)
xchg
or
mov
mov
cwde
adc
movs
lgs
jbe
inc
mov
mov
jmp
nop
sbb
stc
add
push
or
and
in
es
test
pop
mov
in
sub
jno
sub
add
dec
inc
shl
pusha
inc
jo
icebp
or
cmp
call
push
les
xor
in
fwait
popf
xchg
ror
sub
les
xor
or
adc
add
(bad)
fiadd
or
test
inc
or
in
xchg
in
stos
cli
xchg
mov
inc
mov
fcomi
dec
and
retf
dec
sbb
out
push
pop
out
xchg
stos
pop
push
cmp
xchg
push
enter
test
mov
stc
sbb
sar
outs
adc
(bad)
jno
dec
mov
jmp
pop
add
test
xchg
ret
cmp
pop
hlt
lods
push
call
loop
push
scas
mov
jns
clc
popa
ins
out
out
mov
das
mov
cmp
fild
add
mov
push
mov
mov
adc
ret
das
mov
mov
ds
sbb
(bad)
jmp
enter
dec
mov
lods
sub
cwde
call
ds
mov
js
xor
cmp
xor
mov
(bad)
movs
add
xchg
jbe
dec
adc
cmp
out
push
pop
rol
sbb
pop
push
sti
mov
es
adc
and
into
add
cmp
mov
jl
jbe
ucomiss
aad
mov
dec
cmp
or
dec
push
xchg
push
popa
nop
cmp
aaa
adc
jae
mov
push
(bad)
les
inc
sbb
les
rcl
fwait
fwait
push
pop
mov
jno
ficom
outs
add
cdq
dec
sbb
shr
aaa
cwde
cmp
fnstenv
clc
sub
cli
jbe
fisttp
xchg
dec
fstp
lods
adc
pop
(bad)
imul
pop
mov
inc
rcr
pusha
into
retf
outs
jl
enter
sub
sbb
iret
(bad)
mov
pop
movs
out
fisubr
lods
movs
js
dec
pop
jno
mov
rcr
xor
mov
or
sbb
in
add
ret
mov
iret
pop
aaa
test
cmp
mov
push
sbb
out
test
(bad)
fsub
push
inc
sub
adc
add
repnz
inc
mov
xchg
adc
in
or
sbb
or
cmp
xchg
pop
jle
xor
add
pop
hlt
in
xor
and
scas
xchg
push
jb
movs
addr16
in
imul
test
mov
(bad)
sub
add
pusha
ins
outs
mov
push
iret
fldenv
and
add
mov
call
xchg
scas
cmps
adc
xchg
xchg
add
sub
jb
pop
jmp
repz
into
xor
daa
mov
loop
movs
data16
daa
into
push
xchg
sub
push
fistp
mov
scas
ins
icebp
mov
ins
icebp
lea
pop
cmc
mov
test
fsub
(bad)
fldcw
sub
sti
add
pop
cs
xor
push
cmp
(bad)
cmps
add
cwde
je
fsub
scas
inc
out
mov
das
jmp
cmp
call
and
popf
jne
adc
mov
and
iret
dec
cmp
clc
jmp
pop
mov
push
cmp
outs
pusha
sbb
push
and
add
xchg
cmps
nop
imul
das
ins
rcl
addr16
sub
dec
std
stos
jbe
arpl
loop
cwde
sahf
push
push
push
rcr
or
(bad)
(bad)
pop
mov
or
inc
sbb
sar
scas
cwde
int3
push
mov
lock
mov
dec
fdiv
shl
and
add
mov
mov
repz
(bad)
int3
push
cmps
ins
in
bound
int
push
aam
int3
popa
out
stc
loopne
out
add
imul
in
cmp
fwait
pop
bound
or
in
test
in
div
inc
sbb
int
hlt
mov
sbb
or
cwde
daa
push
pop
inc
mov
or
icebp
shl
cwde
pushf
inc
adc
stos
lea
ss
adc
stc
stos
mov
shl
(bad)
and
cmp
xor
aad
xor
jecxz
mov
mov
test
and
add
sbb
jno
add
mov
mov
pop
pushf
mov
arpl
jl
xor
mov
inc
js
mov
xchg
mov
pop
cs
popa
retf
retf
addr16
scas
jle
adc
push
std
ret
test
dec
dec
xchg
inc
xor
cmps
push
loopne
sbb
nop
cmps
test
mov
in
gs
mov
(bad)
clc
and
and
inc
fnsave
stos
mov
pop
xor
repnz
retf
call
fistp
retf
in
mov
and
pop
cs
es
sub
in
mov
inc
and
push
cld
addr16
test
ret
add
push
(bad)
jmp
aaa
cld
push
jnp
fld
aas
out
xchg
jns
jmp
sub
or
mov
cmps
dec
or
mov
dec
inc
cmp
and
sbb
call
scas
movs
xchg
pop
pop
in
cmc
icebp
or
iret
cmp
repz
call
sti
fdivr
mov
ins
sub
xchg
(bad)
mov
mov
clc
ds
sbb
xchg
push
punpcklbw
hlt
dec
iret
xor
jecxz
fbld
xchg
(bad)
push
mov
data16
test
popa
xchg
lea
or
inc
dec
cmp
sbb
out
das
call
mov
repz
sbb
jmp
sub
cs
(bad)
or
cld
pop
push
sub
call
mov
and
cmp
in
jb
push
iret
pusha
popa
shl
mov
jnp
cmp
loope
sbb
mov
mov
sti
div
hlt
sbb
add
jmp
sbb
aaa
js
lods
out
cmp
adc
inc
sub
inc
arpl
out
inc
stos
loope
cli
xchg
xor
push
outs
and
inc
xchg
push
add
mov
push
mov
pop
mov
xchg
sbb
cmps
ror
add
loopne
jmp
mov
iret
jnp
xor
cmps
(bad)
push
sub
loopne
mov
in
loop
push
mov
pusha
call
fsubrp
sbb
fldenv
jno
ins
test
mov
je
test
repnz
jmp
and
mov
jl
pop
stos
iret
outs
xchg
push
retf
adc
jl
(bad)
and
loopne
aad
push
cdq
repz
dec
pop
loope
lods
cld
xor
push
arpl
mov
js
mov
pushf
call
jg
cmp
jle
pop
outs
xchg
adc
dec
sbb
sbb
ja
jl
(bad)
mov
lea
stos
mov
scas
je
push
adc
mov
loopne
cli
repnz
jle
jne
clc
push
xchg
mov
inc
repnz
out
cmp
jb
add
ins
adc
jp
pop
inc
pop
div
ss
mov
jns
cmp
ret
fnsave
sbb
add
xor
in
shr
shl
xchg
push
push
inc
dec
push
lods
add
inc
outs
push
jne
imul
push
jmp
test
fwait
ja
mov
xor
cmp
pop
(bad)
pop
jnp
mov
xchg
push
push
adc
pop
inc
jnp
test
fst
fnsave
jno
dec
jns
dec
int3
ss
je
cmc
test
(bad)
arpl
ficom
push
pop
adc
mov
das
add
or
dec
xchg
jg
call
pusha
rol
sub
fist
sbb
fmul
inc
mov
jne
pop
hlt
pusha
and
int
mov
sbb
test
pop
dec
mov
ret
cwde
and
out
mov
popf
dec
cmp
push
mov
call
push
and
fnstenv
test
sbb
lock
ror
inc
rcl
sub
mov
mov
mov
pop
inc
and
mov
sub
mov
out
sub
sti
inc
mov
jmp
aad
sub
sbb
icebp
(bad)
mov
ja
sahf
jecxz
xchg
push
test
cwde
imul
push
add
popa
sub
retf
movs
mov
jb
inc
dec
add
call
cs
xchg
out
out
mov
lods
mov
mul
jl
cmc
add
iret
and
push
xchg
xor
ret
mov
int3
mov
xchg
push
push
xchg
pop
cwde
fs
pop
jne
pushf
(bad)
and
inc
(bad)
xchg
std
sbb
xchg
test
jno
mov
les
and
push
cmp
(bad)
sti
retf
adc
es
add
push
(bad)
dec
inc
sahf
call
ficomp
pop
loopne
sub
fimul
xchg
retf
call
add
cmp
mov
add
loopne
pop
dec
(bad)
shl
mov
inc
bnd
cmp
and
cld
(bad)
sti
clc
outs
stos
and
xor
jae
pop
pop
inc
imul
pop
paddusb
fstp
imul
or
movs
pop
clc
adc
call
sbb
adc
dec
push
ror
mov
ja
xchg
xor
dec
sbb
jae
adc
mov
outs
test
jne
fwait
push
rol
pop
mov
out
pop
jae
add
out
mov
shl
cmp
ret
(bad)
dec
push
inc
sub
xchg
dec
jge
mov
ins
dec
dec
mov
pop
aas
ret
mov
fild
or
xor
xor
loopne
sbb
ror
and
mov
sbb
or
mov
mov
setbe
leave
fs
cs
jp
and
xchg
add
pop
dec
pushf
and
ja
xor
cmp
outs
mov
popf
shr
push
xchg
mov
stos
mov
mov
lahf
xor
in
sbb
dec
punpcklwd
jns
enter
lds
jnp
pop
mov
sub
retf
cld
xchg
(bad)
jecxz
cmp
inc
xchg
es
cwde
into
lock
mov
cmp
in
push
mov
sbb
push
inc
xchg
retf
push
in
mov
loope
inc
ss
sbb
dec
pop
mov
out
adc
out
jnp
jp
xchg
jp
in
ins
mov
xchg
cmp
push
nop
xchg
mov
and
and
pop
push
lock
add
add
loope
inc
int3
xchg
pushf
xchg
sub
push
inc
xchg
mov
dec
mov
aam
movs
xchg
cmp
and
mov
loope
inc
jge
fsubp
mov
les
jae
clc
ins
push
mov
xchg
mov
mov
repnz
xchg
mov
addr16
ins
inc
xor
ins
add
test
and
mov
mov
cwde
cdq
aad
mov
adc
fwait
inc
test
jmp
cld
xor
and
jb
inc
mov
mov
mov
pusha
in
dec
es
adc
(bad)
cs
mov
sahf
mov
sbb
ss
sub
jecxz
jge
popa
xchg
es
mov
ins
cmp
les
xor
sbb
outs
mov
pop
jecxz
jns
out
repnz
stc
(bad)
ja
xchg
dec
mov
sub
call
into
repnz
add
aas
mul
aam
pop
mov
adc
sbb
add
add
add
in
cld
and
popa
jnp
push
iret
addr16
pop
in
aam
sub
popf
cli
(bad)
call
mov
gs
lahf
cmc
mov
jmp
rol
mov
test
fwait
imul
in
rcl
ret
xchg
xor
xor
inc
(bad)
push
pop
and
fldenv
(bad)
add
lods
and
dec
pushf
push
std
out
test
es
rcr
jp
sbb
sar
mov
call
and
pusha
movs
push
xor
pop
push
ret
daa
das
enter
out
jmp
cmp
dec
shl
mov
dec
dec
int3
mov
cmc
push
jae
inc
out
(bad)
sub
push
pop
mov
mov
jnp
sbb
imul
jae
or
xchg
cmp
arpl
xor
xor
xchg
and
imul
arpl
shr
fstp
cli
jmp
mov
adc
(bad)
pop
jnp
mov
sub
cmps
adc
mov
mov
push
add
pop
in
dec
mov
xor
clc
and
xor
cwde
jno
xor
and
repnz
in
std
mov
mov
sbb
inc
(bad)
loopne
sbb
das
and
pusha
(bad)
push
sub
(bad)
stos
add
adc
jne
inc
dec
out
xchg
cli
push
push
popf
dec
mov
and
aas
cli
leave
xchg
push
mov
or
outs
xchg
inc
sahf
lahf
jg
or
hlt
test
xor
lea
lds
loope
add
repz
pop
push
push
scas
adc
lods
sti
std
das
adc
adc
pop
les
and
pop
repnz
dec
in
aad
push
shl
aaa
out
loopne
cmp
lahf
adc
dec
and
add
sub
jmp
xchg
jb
daa
sub
xor
add
pop
mov
and
xor
scas
stc
retf
mov
jne
sub
mov
mov
fnstenv
mov
cmps
movs
ret
cdq
in
stos
or
retf
je
mov
(bad)
les
imul
cdq
std
clc
dec
test
int
mov
xchg
clc
pop
xor
stos
sahf
loop
inc
or
inc
(bad)
es
popa
in
mov
dec
repnz
mov
mov
pop
test
jle
pop
retf
loopne
add
cs
mov
nop
out
jno
mov
mov
add
jae
jno
fldenv
retf
lock
inc
sar
scas
es
adc
in
shl
sbb
in
push
imul
cwde
xor
ss
dec
jno
iret
push
inc
retf
xchg
mov
mov
mov
pop
cwde
ss
or
std
mov
xchg
pop
cs
clc
stc
xor
and
call
test
lea
test
push
inc
icebp
ud1
add
push
aam
shr
cmps
std
jne
push
sbb
adc
das
mov
xchg
clc
pop
fcom
ret
scas
retf
inc
test
test
js
push
mov
pop
xchg
icebp
lods
outs
jns
loop
jnp
jo
ud0
frstor
mov
daa
inc
ror
push
xor
fist
inc
test
pop
scas
push
pushf
data16
retf
ror
and
fistp
mov
fisttp
mov
xor
(bad)
cmp
push
add
adc
sbb
test
mov
sub
fmul
(bad)
pop
dec
push
dec
jae
shr
ins
(bad)
movs
xor
cmp
and
dec
and
jne
dec
mov
test
cli
jp
or
js
cwde
pop
dec
sub
sub
cmps
and
in
pop
stos
mov
cmp
scas
test
icebp
adc
xchg
adc
hlt
idiv
cmp
outs
clc
xchg
(bad)
in
lods
das
mov
push
pop
sub
cmpps
jp
retf
cld
mov
mov
jg
sti
enter
xchg
sub
mov
sar
mov
cli
mov
cs
push
and
cdq
enter
pop
ja
or
fs
xor
sbb
mov
addr16
cmp
push
pusha
movs
inc
xchg
test
sbb
rep
and
adc
mov
lods
mov
(bad)
cwde
ror
fnsave
cmp
test
js
jb
je
and
repz
inc
jl
(bad)
sbb
add
sub
je
pop
push
jl
loopne
or
fwait
ds
scas
rol
cs
fsub
mov
test
sbb
add
data16
push
mov
dec
pushf
sbb
test
sub
sbb
stc
add
cdq
mov
test
fsub
sbb
add
mov
push
mov
movs
(bad)
fmul
sbb
dec
sub
inc
outs
dec
jbe
int3
pop
or
movs
or
push
std
dec
cmp
fwait
adc
out
cmp
in
cmps
or
out
dec
jmp
or
or
mov
push
adc
push
dec
nop/reserved
lods
out
pop
leave
loope
popf
aaa
mov
add
xchg
sbb
loopne
dec
daa
lea
and
jae
pop
pushf
loop
mov
adc
jmp
fiadd
push
clc
adc
fs
mov
mov
sbb
div
aas
stos
movs
adc
mov
into
push
lods
mov
mov
pop
and
cmps
sub
stc
and
inc
cmp
dec
imul
push
scas
scas
inc
push
mov
sub
ss
nop
retf
adc
lock
mov
cmps
inc
(bad)
call
test
dec
push
dec
out
bound
aad
sub
jnp
or
loopne
int3
mov
mov
pop
inc
outs
push
and
jmp
jg
fnstcw
jns
lahf
sbb
popa
imul
jle
adc
mov
adc
push
setno
int
mov
in
leave
cli
xchg
mov
cmc
daa
adc
hlt
clc
pop
xchg
sbb
mov
(bad)
lock
cmp
cmp
xor
test
or
stos
jecxz
dec
inc
xor
sahf
jb
dec
cmp
and
cmp
xchg
data16
in
xchg
jp
ds
gs
inc
in
sbb
shr
lahf
mov
loope
sub
cwde
pop
and
outs
in
(bad)
aas
jl
mov
popf
push
iret
push
push
push
ja
in
in
push
fstp
int3
(bad)
iret
aaa
mov
scas
pushf
imul
push
movs
sub
shl
and
ins
out
rol
cld
xchg
inc
les
test
loopne
and
cwde
pushf
fwait
add
jecxz
push
cmp
fyl2x
sbb
inc
push
cmps
pop
repnz
inc
and
hlt
sbb
sub
mov
pop
fwait
cmps
inc
fcom
add
dec
or
mov
mov
pop
daa
lahf
sub
pop
mov
test
cmc
ret
arpl
adc
lods
push
xchg
(bad)
dec
or
or
sub
push
out
xor
nop
adc
ret
stos
jbe
xchg
inc
xlat
int
daa
inc
xchg
adc
imul
in
dec
pop
cmp
cli
ja
sub
std
jns
xchg
xchg
push
xor
fistp
(bad)
xchg
jae
mov
or
mov
xchg
jnp
mov
jmp
mulps
repnz
nop
cmp
outs
jg
enter
push
dec
jecxz
test
gs
or
nop
(bad)
iret
outs
pop
sahf
(bad)
or
push
mov
jne
jle
sahf
dec
jmp
and
lea
jmp
adc
mov
jb
jge
mov
pop
mov
retf
pop
sbb
lods
jae
push
fmul
out
dec
mov
in
popa
outs
std
hlt
enter
fstp
retf
daa
push
fadd
cld
jbe
inc
andps
test
movs
leave
into
push
jae
inc
mov
rol
retf
das
fsub
ja
outs
adc
stc
mov
sub
pop
mov
push
pusha
inc
aad
sbb
movs
cmc
ins
ins
cmps
cmp
xor
mov
les
out
xchg
mov
cmp
inc
push
or
repz
outs
ins
mov
dec
test
ror
inc
or
or
ret
cli
sar
cmp
sub
pop
cmc
(bad)
ficom
ins
cwde
frstor
sub
inc
shr
(bad)
adc
sbb
not
push
retf
and
mov
in
inc
xchg
add
mov
jb
push
inc
mov
nop
scas
retf
inc
or
mov
bound
push
xor
mov
in
outs
pop
mov
pop
lods
mov
arpl
mov
lock
dec
and
daa
push
mov
lds
push
pop
dec
xchg
push
les
shl
fisubr
push
adc
jbe
(bad)
icebp
out
icebp
mov
or
ret
fwait
lds
pop
dec
rol
add
sub
lods
mov
cmc
not
add
jae
aad
and
loope
inc
push
jnp
mov
sub
or
stos
fcomp
repz
xor
vsubpd
pop
(bad)
pop
mov
jge
jb
jb
mov
inc
paddb
add
js
div
push
outs
imul
shl
jmp
lods
xchg
push
mov
ins
add
sub
mov
xor
imul
sub
jecxz
sahf
gs
jecxz
jmp
(bad)
test
sti
je
dec
mov
xor
int
adc
pop
(bad)
xlat
loope
rcl
and
cmp
out
dec
or
or
mov
stos
jns
(bad)
push
push
mov
(bad)
imul
call
data16
add
rcr
(bad)
mov
xor
mov
arpl
mov
mov
bound
clc
sbb
(bad)
jmp
xlat
inc
loope
stos
xlat
add
cmps
mov
mov
lahf
jb
cmc
adc
aaa
push
loop
out
(bad)
lods
imul
mov
xchg
cmp
out
xchg
add
in
das
xchg
inc
jo
or
js
cwde
ret
mov
into
sahf
out
mov
call
sub
xor
cdq
rcr
sbb
aam
mov
fidiv
jl
jno
int3
sub
xchg
xor
popa
ror
imul
es
sub
or
mov
jno
mov
mov
ror
xlat
and
ret
mov
test
push
jb
sbb
cmp
xchg
xor
repnz
mov
xchg
or
aad
dec
cdq
sub
xchg
sub
sub
pop
pop
push
cmpxchg
xchg
dec
mov
pop
mov
sbb
push
loopne
sub
mov
(bad)
fst
mov
inc
pop
fsubr
and
cdq
mov
jne
jecxz
mov
sbb
(bad)
fsub
inc
loope
and
ret
out
xor
rcr
xor
push
pop
notrack
imul
test
inc
sub
mov
lea
mov
movs
xchg
cmp
ror
shl
cmp
mov
inc
mov
adc
mov
imul
ins
xchg
pop
pusha
popf
push
sahf
clc
out
mov
sub
mov
je
lahf
sahf
cmp
daa
dec
sar
icebp
inc
pusha
mov
push
out
cmp
sahf
dec
xchg
inc
cmp
dec
sbb
inc
push
cmp
jp
int
mov
nop
fistp
ds
pop
imul
ss
out
push
sbb
(bad)
add
mov
mov
jne
push
(bad)
dec
in
(bad)
xchg
cmp
sbb
cli
test
std
jb
out
test
pop
les
or
xchg
es
neg
sub
mov
lahf
out
retf
fldenv
(bad)
ror
rcr
inc
mov
jne
inc
rol
mov
bnd
das
not
test
lds
les
push
retf
jb
(bad)
xchg
jg
jmp
std
mov
jb
mov
sub
and
outs
mov
jmp
cmp
add
(bad)
fwait
ins
in
out
mov
dec
cdq
jb
push
mov
fld
lods
sbb
mov
bound
repnz
xor
lods
xor
xlat
pop
lds
add
(bad)
pop
rol
cld
inc
adc
in
ffreep
out
mov
lea
dec
mov
mov
in
sub
push
mov
mov
imul
lds
and
ja
stos
aas
mov
xchg
xlat
xlat
sbb
or
stos
in
mov
retf
loope
add
sbb
mov
retf
inc
xchg
loope
xor
sub
xchg
mov
ror
inc
ds
pop
inc
es
lea
push
jl
dec
fisubr
test
and
adc
pop
aas
imul
lods
sar
div
jmp
aad
rcl
cmps
push
rcr
jns
mov
fcmovb
sahf
xor
or
sahf
cs
mov
mov
dec
cdq
pop
jle
mov
push
xlat
enter
sbb
call
jmp
loopne
sbb
sahf
outs
fst
bound
movs
fmul
mov
mov
test
imul
cmps
scas
jecxz
int
xor
lods
cs
dec
ins
dec
aad
ret
(bad)
and
data16
mov
jmp
xor
(bad)
dec
(bad)
rcr
jl
mov
push
outs
mov
dec
imul
sub
xchg
retf
std
iret
cli
mov
stos
cmp
adc
sbb
stos
fsub
in
cli
sub
lds
cmp
inc
(bad)
mov
outs
pop
add
fdiv
adc
mov
push
ins
adc
int
pop
sub
cmps
jg
rol
push
ret
int3
imul
xor
cmp
xor
mov
cdq
add
pop
mov
cdq
mov
scas
pop
repz
or
aad
call
in
add
cmps
push
mov
dec
test
inc
sbb
mov
fimul
(bad)
loope
(bad)
mov
pop
fwait
iret
jg
mov
call
jmp
inc
sbb
inc
aas
mov
ins
inc
or
ja
cmp
dec
jo
or
mov
fisubr
arpl
jg
dec
movs
js
jle
sbb
aaa
push
cld
aaa
pop
and
adc
cmps
sar
xor
mov
fnstenv
dec
(bad)
(bad)
xor
loop
clc
mov
add
out
test
jns
dec
mov
add
push
push
call
mov
push
inc
fidiv
out
mov
loope
fwait
cmc
js
js
push
sub
mov
outs
mov
push
or
sub
pop
push
in
cmps
mov
dec
xor
sbb
mov
sbb
imul
jmp
scas
jnp
xor
push
dec
xor
xchg
xchg
std
mov
push
pusha
out
shl
test
cmp
dec
in
dec
cmc
mov
test
loopne
(bad)
mov
ror
and
sub
(bad)
repz
dec
ins
mov
retf
jo
inc
jge
test
xor
fild
repnz
xor
or
popa
pop
ror
cmps
mov
es
out
cmc
sub
jg
adc
xor
dec
pop
mov
sbb
add
in
pop
ret
clc
nop
push
mov
test
outs
jnp
das
into
lods
es
in
popa
xchg
cli
adc
sub
add
xchg
fmul
cld
das
lock
and
pop
xchg
fcomip
cmps
repz
lods
shl
xor
cmps
push
shr
jle
pop
xchg
mov
dec
enter
mov
aam
dec
mov
es
push
in
loopne
jg
mov
cmp
add
sub
rcl
loopne
sub
and
dec
jecxz
dec
xor
mul
loope
xchg
loopne
imul
pop
not
in
stos
add
ret
dec
test
push
add
push
in
or
jp
dec
test
fisubr
stos
inc
mov
xchg
ins
cmp
aaa
das
out
pushf
dec
jmp
pop
inc
mov
xchg
add
pop
or
dec
addr16
cmp
mov
or
stos
and
movs
in
pusha
mov
jle
out
push
cmp
xchg
(bad)
test
shl
in
xor
cmps
and
sbb
mov
dec
(bad)
les
sbb
ja
ds
dec
add
push
sbb
sbb
int
xchg
loope
push
xor
pop
(bad)
adc
xchg
inc
xchg
js
dec
xchg
in
ficom
and
lahf
and
jecxz
jo
test
iret
pushf
and
je
rcr
cwde
sbb
ror
and
sbb
or
bound
mov
mov
pop
add
aad
out
or
mov
xchg
fwait
test
push
push
rcl
mov
mov
and
int3
mov
sub
sti
xchg
sahf
call
data16
cmps
mov
cmps
jns
loopne
fbld
lds
xor
ss
xor
or
ins
cmp
daa
push
xchg
pop
ja
daa
xchg
ret
xor
push
fs
imul
clc
lods
cmp
out
(bad)
sbb
ftst
jle
stos
and
push
inc
sub
push
dec
mov
or
in
lock
inc
fstp
xchg
aad
xchg
push
out
sub
es
scas
sbb
sbb
add
mov
and
repnz
dec
cmc
(bad)
pop
loopne
lods
and
xor
jbe
push
push
lods
xlat
dec
data16
jmp
push
test
call
xchg
dec
cmp
jae
popf
pushf
iret
vpsubsw
test
push
mov
(bad)
popf
fxch
mov
push
cs
not
out
lds
pop
mov
jns
cdq
push
xchg
add
lock
fmul
sub
idiv
out
sub
test
ficom
stos
out
aas
sub
push
sub
jmp
(bad)
xlat
and
inc
jb
(bad)
xor
pop
data16
das
and
leave
cs
xchg
pop
add
loopne
or
fstp
in
sub
nop
xor
inc
push
popa
jns
retf
cmp
cmp
call
mov
jmp
push
xchg
cld
repz
pop
rol
test
adc
and
xchg
mov
cs
stos
mov
push
sub
pop
xchg
jmp
lock
(bad)
repz
cmp
test
mov
dec
pop
(bad)
(bad)
or
mov
xchg
jmp
loop
popa
pop
add
cmp
es
add
jno
cmp
cld
jnp
xchg
pop
sbb
rcl
(bad)
fild
pop
xchg
leave
in
and
repz
pop
test
xchg
mov
jae
call
inc
icebp
arpl
ins
sbb
xchg
jae
sub
cs
call
and
sbb
inc
test
xchg
lock
std
sub
lods
cwde
jno
adc
dec
push
shr
int3
adc
mov
iret
mov
into
inc
push
xor
xchg
out
sub
sbb
push
jmp
jecxz
hlt
jo
xchg
cmp
out
test
test
jp
push
xchg
inc
(bad)
jg
cmp
sbb
mov
pop
daa
or
adc
(bad)
mov
(bad)
scas
jg
imul
jns
fidiv
add
cmp
and
(bad)
out
ins
fcmove
mov
leave
fwait
push
fstp
outs
and
add
sub
add
pop
jnp
mov
ds
xor
xor
iret
pushf
rcr
ss
retf
movs
xor
jle
je
or
in
lods
das
(bad)
lods
sbb
(bad)
xor
test
or
pushf
pushf
sub
pop
xor
in
sbb
out
lods
pop
mov
movs
mov
test
xchg
je
fwait
jge
loop
jb
xchg
and
imul
xor
fwait
xlat
adc
and
cwde
lods
mov
out
aam
push
div
mov
ja
aad
dec
sbb
test
jl
dec
jb
pop
inc
in
inc
stc
addr16
icebp
fimul
js
xor
(bad)
sbb
in
add
popf
jp
mov
xor
int
push
mov
jne
lahf
jne
pop
in
outs
pop
cdq
test
cli
aas
ja
enter
(bad)
ret
lahf
pop
(bad)
dec
push
retf
jmp
sbb
mov
(bad)
out
push
cmp
xchg
push
je
xchg
jmp
jo
(bad)
call
xchg
mov
addr16
push
cld
mov
inc
jnp
jmp
fs
mov
cs
fcom
xchg
(bad)
in
inc
int
outs
mov
xchg
xor
mov
pop
fiadd
mov
and
jnp
jnp
dec
ja
sub
and
retf
or
sbb
test
dec
pushf
les
addr16
outs
cwde
movs
fiadd
mov
mov
cdq
ret
cmc
fmul
call
pusha
and
adc
pop
cmp
ret
aaa
cmp
mov
shr
inc
mov
rol
imul
xor
pop
dec
push
mul
mov
cmp
out
cmps
cmp
jae
and
cmp
lds
movs
fs
repnz
jmp
push
imul
pop
nop
jno
and
cmp
or
mov
add
pop
and
mov
pop
aaa
or
jl
cmp
xchg
pop
outs
loop
mov
leave
ror
sub
bound
sbb
inc
jb
bound
in
dec
add
jmp
cmp
scas
daa
shl
push
scas
into
lods
inc
mov
and
mov
mov
jns
das
push
xchg
je
lock
and
sbb
cmp
pop
sub
cmp
push
mov
jmp
xchg
mov
push
mov
(bad)
(bad)
hlt
leave
xchg
xor
mov
xchg
xchg
repz
fmul
sar
mov
pop
mov
cli
loopne
cmp
mov
cdq
les
ins
bnd
sub
and
fidivr
ds
ds
add
xchg
mov
scas
add
inc
cmp
mov
out
out
push
jne
inc
outs
loop
in
mov
inc
cmps
jnp
pop
ins
xchg
or
cmp
mov
mov
jecxz
mov
lock
sbb
in
clc
mov
pop
std
lock
in
(bad)
out
ror
cmp
cmp
pop
sub
iret
sub
add
inc
mov
ins
movs
dec
cmp
xchg
jmp
jg
lods
jb
inc
imul
push
mul
push
(bad)
ja
adc
sbb
xor
sbb
jge
cmc
fstp
inc
inc
fisub
inc
jae
test
xor
rcr
repz
sbb
jmp
push
pushf
xchg
movs
inc
dec
xchg
out
out
retf
mov
push
in
popf
enter
dec
jb
fdiv
lods
nop
adc
es
outs
mov
adc
and
pop
shl
adc
dec
jmp
hlt
rcl
out
stos
test
mov
(bad)
(bad)
push
enter
xchg
outs
xor
popf
xor
pusha
outs
shl
push
jnp
fs
fs
add
jge
cld
repnz
cmp
mov
test
out
xchg
inc
adc
(bad)
icebp
lock
sbb
jbe
into
test
pop
pop
lds
rcl
push
pop
fdivrp
scas
push
pop
das
xor
movs
pop
sahf
lods
popf
inc
test
icebp
xor
push
dec
hlt
inc
call
mov
xor
int
ret
add
jmp
in
sar
in
inc
pop
call
sub
mov
sbb
mov
js
into
scas
mov
sbb
mov
cwde
out
xchg
jmp
mov
lock
shl
dec
rcr
or
jl
dec
cwde
mov
xor
shr
inc
cmp
(bad)
lock
fidiv
daa
cdq
pop
mov
jno
enter
sub
daa
adc
loop
imul
sbb
test
es
add
pop
or
push
mov
clc
mov
repz
cs
sahf
cmp
(bad)
(bad)
dec
in
fld
repnz
add
dec
lock
adc
mov
test
addr16
push
or
mov
loope
ins
outs
scas
mov
jecxz
sbb
pop
adc
jecxz
mov
aas
ins
jmp
add
jbe
inc
mov
mov
jmp
push
retf
out
jle
icebp
sub
mov
push
add
inc
xchg
rol
pop
clc
stc
jmp
(bad)
jle
or
push
mov
loop
sbb
fcomp
lock
jo
jecxz
icebp
mov
cmps
sbb
mov
imul
or
mov
out
pop
and
inc
mov
mov
add
jno
mov
push
pop
enter
ds
gs
sbb
and
sub
cwde
mov
(bad)
in
ds
jmp
pop
sbb
test
aad
imul
pop
lods
add
cli
adc
or
aas
pop
pusha
test
xchg
cmp
ja
aas
out
iret
jne
pop
imul
xchg
leave
je
aad
inc
outs
push
sub
adc
sbb
inc
mov
faddp
repnz
lods
frstor
jge
stc
push
mov
mov
repz
mov
mov
add
mov
sbb
push
push
xor
add
and
aas
out
ins
in
iret
adc
adc
add
sahf
dec
hlt
fadd
mov
popf
sub
out
cmp
push
pop
or
mov
hlt
pushaw
adc
ins
scas
cmp
push
sbb
mov
mov
push
scas
xchg
(bad)
aas
outs
and
push
(bad)
xchg
fsub
ins
mov
xchg
push
int
enter
loop
popf
or
adc
fs
ss
jge
or
pop
cmp
outs
lea
mov
push
data16
pop
int
les
sub
scas
or
mov
fstp
not
xchg
std
add
das
clc
mov
add
enter
and
js
jmp
data16
inc
mov
xor
clc
and
mov
lahf
or
outs
xchg
js
pop
push
test
popa
cwde
leave
add
mov
jno
mov
or
inc
push
mov
sbb
mov
xchg
mov
ins
jmp
jecxz
out
ret
or
push
xchg
out
inc
and
pop
rcr
aas
iret
push
add
sub
mov
lock
pop
mov
adc
gs
popf
xlat
cmp
mov
xor
daa
fistp
xor
ror
adc
inc
mov
and
add
adc
dec
(bad)
mov
repnz
xchg
(bad)
push
push
loope
and
push
push
into
stos
movs
movs
lods
in
idiv
and
adc
push
push
hlt
cwde
push
pushf
shl
inc
je
ds
scas
stos
mov
xchg
sub
loop
mov
pop
bound
push
ret
jmp
inc
jb
je
adc
mov
das
mov
ss
jp
mov
sub
and
mov
and
sub
fcmovbe
push
sub
pop
stos
xchg
xchg
adc
push
cld
cmp
pop
jbe
(bad)
ja
lds
push
icebp
push
rcr
xchg
push
imul
fld
das
xchg
stos
sti
sbb
mov
cwde
rcl
push
out
and
adc
int
sub
scas
aas
leave
or
jl
push
das
js
(bad)
shl
inc
je
test
pop
and
rol
in
xor
movs
mov
sbb
mov
jno
and
int3
jo
dec
xchg
jmp
icebp
pop
inc
leave
pop
lahf
lea
sub
dec
mov
pop
jge
in
imul
aad
inc
add
cdq
int
repnz
fidivr
in
pushf
push
ja
or
lea
mov
adc
adc
xchg
es
cmps
sub
repz
(bad)
mov
pop
inc
push
mov
xchg
cli
movs
lds
jns
jecxz
or
xchg
popf
arpl
cdq
mov
imul
sbb
ja
and
repz
push
scas
stc
push
jmp
and
or
jnp
mov
push
mov
pusha
ins
loope
mov
add
jecxz
xchg
push
shl
jne
push
loope
push
and
cmps
je
dec
rcl
fsub
dec
dec
jno
adc
jp
dec
fpatan
cli
push
cdq
dec
push
ss
jge
xor
mov
mov
imul
je
test
inc
inc
push
or
pop
mov
cwde
adc
adc
ror
(bad)
mov
cmp
push
shr
(bad)
out
jge
jl
mov
xor
dec
mov
ret
sar
pop
or
ret
(bad)
mov
outs
aam
repnz
sbb
jg
ins
jo
sub
ret
loope
hlt
into
test
push
mov
add
adc
pop
push
gs
movs
out
dec
push
pop
jmp
inc
test
ret
mov
and
pop
or
add
and
(bad)
pop
jmp
push
xchg
fadd
call
adc
xchg
in
test
test
add
sbb
cld
adc
repz
xlat
loop
inc
clc
into
or
rcl
cmp
ret
out
jnp
jnp
icebp
jae
sub
jae
pop
adc
pushf
inc
xchg
fs
enter
push
in
fidivr
das
sub
adc
sub
adc
or
sub
or
clc
xchg
ret
out
sahf
les
inc
push
retf
inc
scas
outs
sti
ins
vcvtps2pd
rol
mov
fadd
js
aas
pop
mov
mov
sbb
sahf
add
jmp
xchg
and
(bad)
in
sub
cmps
ins
(bad)
jmp
mov
jl
call
lods
cmp
ficom
sbb
push
dec
(bad)
jbe
imul
jbe
rcl
jp
in
sub
xchg
popf
pop
daa
mov
imul
call
dec
popf
test
mov
and
(bad)
push
fist
dec
jae
pop
cld
mov
fist
jle
dec
mov
push
mov
xor
lods
int
popa
xchg
dec
inc
stos
xchg
jge
ficom
xchg
or
mov
sbb
inc
fldcw
retf
or
mov
xchg
jl
cmp
pop
inc
mov
lods
cmc
cmp
fcom
out
mov
sti
sahf
imul
mov
jp
retf
cmps
pop
shl
adc
jae
pop
outs
into
aas
cmps
mov
test
in
jle
fst
ja
sbb
das
test
cmps
inc
repz
mov
add
fcom
cwde
and
or
mov
sbb
(bad)
sub
inc
xor
aad
and
mov
adc
std
push
out
arpl
in
popf
sub
cdq
mov
or
inc
jne
push
mov
lods
repnz
add
adc
mov
mov
jmp
nop
je
outs
lods
push
pop
sbb
ins
push
icebp
or
dec
lds
imul
cmp
cmp
jmp
xor
adc
outs
inc
js
sbb
fstp
sar
call
jg
in
int3
pop
fs
mov
lods
ja
adc
inc
cmc
in
mov
fwait
popf
cmps
jb
add
mov
inc
mov
cmp
pop
cmp
mov
pop
adc
cs
mov
fdiv
fimul
push
test
faddp
push
(bad)
ja
movs
leave
sub
jmp
cmps
or
cli
mov
retf
pop
imul
pop
aad
mov
xchg
jbe
js
sbb
test
fsub
stos
fdivr
mov
lods
mov
ret
(bad)
pop
pop
iret
push
fld
jp
sbb
cmps
fistp
div
pushf
out
dec
dec
inc
das
int
enter
xor
xor
adc
or
fild
sti
ds
popf
sub
add
or
add
sub
mov
mov
call
mov
sub
fild
fidivr
add
lock
rol
xchg
pushf
or
mov
jmp
jnp
sahf
lods
fld
fnstsw
inc
sbb
mov
and
stos
mov
lock
popf
test
(bad)
pop
pop
jg
cmp
mov
adc
fidivr
sbb
mov
jp
std
sar
mov
jo
push
repnz
ins
jecxz
and
adc
fidiv
push
cmp
inc
leave
jl
xchg
adc
mov
in
iret
pusha
adc
mov
dec
imul
imul
mov
shl
test
push
clc
call
xchg
ss
push
ret
xchg
push
xor
addr16
stos
ds
dec
pop
enter
test
sbb
jmp
bound
adc
xor
jp
cmp
ja
daa
fist
das
sub
dec
xchg
jae
mov
pop
aam
xor
fwait
push
mov
sbb
dec
scas
push
aas
and
nop
cmovp
jmp
inc
ja
sbb
push
sbb
(bad)
inc
and
push
sub
sub
xchg
les
fldcw
jp
in
cmp
(bad)
call
sub
outs
mov
test
sbb
xchg
mov
cmps
xchg
loop
dec
jb
pop
into
fiadd
xchg
jo
mov
aaa
ficomp
popf
push
test
push
rol
or
jmp
add
icebp
xor
mov
or
sub
pop
ins
stc
pop
mov
add
loop
popa
sbb
and
cld
or
mov
push
ss
mov
mov
xchg
adc
xor
data16
mov
outs
(bad)
jmp
pop
cwde
adc
in
(bad)
rcr
pop
out
and
out
adc
nop
lock
mov
sbb
sub
push
jmp
mov
inc
or
out
fidiv
mov
rcr
sbb
cmp
dec
mov
sub
fnsave
sti
mov
dec
sahf
dec
int3
and
cwde
mov
icebp
inc
jae
sub
xchg
and
jmp
in
inc
mov
xor
in
call
outs
adc
inc
lea
jnp
sbb
fstp
fadd
mov
jp
fbstp
ins
test
cmp
push
fwait
in
out
adc
add
dec
neg
ffree
out
jmp
push
xchg
mov
dec
adc
mov
inc
cmps
jb
fimul
fcomp
jae
outs
idiv
jmp
fwait
(bad)
pop
add
mov
inc
fsubr
jle
jecxz
daa
xchg
in
sbb
sub
outs
jo
mov
test
jb
hlt
add
retf
add
pop
and
jbe
popf
fst
cmc
sub
call
xchg
clc
out
mov
inc
fistp
and
dec
scas
ins
shl
jp
mov
adc
sub
sub
arpl
out
jg
pop
call
mov
jae
mov
xor
popw
add
push
inc
inc
add
dec
dec
out
clc
in
out
push
add
add
sbb
inc
int3
inc
sti
lods
mov
cwde
mov
inc
pop
repz
pop
not
xchg
cmp
imul
lods
inc
add
push
mov
sub
in
mov
cmp
xor
lock
test
out
outs
rcl
and
cmp
mov
cmp
jle
mov
mov
fdivr
adc
popf
data16
xor
xor
mov
inc
mov
jmp
enter
retf
lods
push
jno
push
and
adc
jbe
inc
loope
mov
inc
sti
push
add
sbb
xchg
pop
xor
xor
mov
mov
loop
cmc
mov
aas
push
js
xchg
das
cld
not
or
sub
push
outs
xor
mov
rcr
mov
stos
mov
cmp
xor
(bad)
aam
les
pop
and
jmp
push
popf
jb
fwait
sub
cwde
ret
xchg
out
test
stos
adc
sti
dec
mov
aaa
jb
popa
mov
push
lds
pop
aas
arpl
or
sbb
dec
inc
mov
and
cmps
clc
(bad)
lahf
pop
scas
jmp
and
shl
mov
sbb
rol
js
hlt
mov
jg
inc
push
fmul
xchg
push
std
pop
(bad)
mov
pop
icebp
cs
enter
fisubr
adc
push
not
add
pop
adc
pop
jge
dec
mov
ja
enter
pop
jo
dec
cmp
xor
jb
lock
add
shr
pop
out
fwait
add
push
ins
push
mov
test
stos
and
lds
and
cmp
and
mov
jno
sar
imul
and
in
outs
mov
fnstcw
inc
loop
fcomp
ret
repnz
int
pop
sbb
imul
stos
push
out
int3
xlat
scas
loope
fsubr
dec
mov
push
mul
mov
in
cmp
inc
add
cmp
cwde
cwde
inc
or
loop
popf
and
cs
call
nop
mov
cmovs
adc
cmp
xor
stos
inc
adc
jbe
test
addr16
pop
frstor
cmp
dec
jne
inc
sbb
stos
jo
(bad)
push
hlt
sub
sub
xor
cmp
or
mov
mov
fist
push
jmp
fs
adc
ret
fdiv
dec
pop
stos
arpl
imul
sahf
test
nop
daa
out
test
xor
xlat
xchg
mov
test
dec
xor
mov
ins
test
mov
inc
fnstcw
fsubp
adc
into
adc
cwde
sar
sbb
mov
outs
adc
fnsave
pop
icebp
shr
scas
sub
pusha
pop
sbb
inc
xlat
pop
cs
jb
dec
jns
or
mov
lock
jnp
pusha
fcomp
fwait
dec
out
cmp
pop
pop
and
pop
mov
mov
push
lock
mov
fisttp
je
mov
sub
mov
mov
fwait
push
mov
hlt
not
ds
push
in
mov
test
mov
jmp
cmps
cmp
mov
cmp
scas
or
cmp
jge
dec
fbld
cmps
pop
jb
loope
test
mov
inc
sbb
add
lods
frstor
or
xchg
jo
imul
cld
pusha
and
mov
push
sti
xchg
add
xchg
or
pop
mov
sbb
mov
mov
test
push
shl
xchg
cmp
cmp
xor
mov
shr
jb
ss
mov
mov
mov
sar
add
sbb
lods
test
push
outs
in
mov
aam
repnz
cmp
repz
sahf
inc
nop
cmc
inc
cmc
fidivr
out
sub
pop
pop
push
movlps
sti
xor
xchg
retf
add
add
inc
fsubr
retf
leave
sub
push
(bad)
and
dec
call
mov
cwde
test
stos
cmps
addr16
fwait
adc
into
mov
mov
aaa
inc
mov
rcl
imul
les
ins
mov
rcr
scas
mov
jg
sub
xchg
xchg
mov
jne
test
push
iret
dec
(bad)
dec
dec
test
push
xor
cs
lods
sub
in
sub
xchg
or
mov
ret
pop
mov
jmp
or
pop
mov
push
cmp
(bad)
cwde
or
xchg
jp
jo
das
inc
push
cmp
pushf
push
rol
inc
(bad)
dec
imul
mov
xor
fmul
add
stc
stos
xchg
mov
enter
test
out
in
mov
aam
popf
loopne
das
fadd
mov
(bad)
ins
neg
hlt
mov
out
sbb
shr
jmp
xchg
out
or
and
cmc
dec
fsub
ret
ret
aas
ss
push
jg
js
pop
sahf
daa
hlt
loopne
add
leave
cwde
pop
ja
add
dec
xchg
outs
call
or
ss
lea
in
mov
fs
and
xchg
mov
test
dec
ins
push
jecxz
dec
or
push
popfw
jmp
lea
(bad)
not
sub
dec
je
push
movs
mov
fcomp
pop
out
stos
cmps
jbe
cld
cmp
pop
mov
fs
mov
out
int3
sbb
sar
aam
clc
push
pop
xchg
sbb
sub
and
xchg
dec
or
jle
call
xchg
mov
sbb
or
push
add
mov
and
mov
std
leave
dec
cmp
xor
mov
push
addr16
cli
adc
adc
cmp
sub
and
xchg
movs
inc
xor
dec
test
adc
sbb
jl
push
pushf
sub
cli
loope
or
and
inc
dec
out
cs
(bad)
stos
mov
loop
jmp
push
push
sbb
sub
(bad)
pop
add
pop
push
pop
push
or
mov
aam
mov
nop
dec
mov
inc
sbb
pop
dec
lahf
sub
pop
mov
pop
call
outs
jl
push
sub
adc
dec
loop
jo
push
jb
shl
or
test
stc
sbb
popa
mov
stos
lods
pop
cmps
inc
mov
int
cli
jb
fmul
pop
outs
loope
movs
cmp
lods
sbb
push
adc
or
pop
cmp
dec
sti
push
inc
pop
add
loope
iret
sbb
sub
mov
fwait
push
xchg
mov
mov
mov
mov
ror
ja
stos
repnz
int
push
ret
mov
pop
(bad)
bound
daa
lahf
gs
sub
pop
test
fsub
jmp
or
scas
lahf
push
sub
fild
stos
out
adc
lock
jmp
call
in
sti
int3
(bad)
jns
loopne
sbb
sbb
xchg
or
cld
arpl
loope
mov
xchg
dec
sub
(bad)
pop
cmps
and
(bad)
inc
ja
add
cld
jne
jmp
xlat
je
in
les
inc
jo
cmp
or
call
daa
icebp
scas
lds
dec
and
stc
and
adc
cmc
fisttp
sub
xor
sbb
cmp
push
xor
retf
add
in
(bad)
aam
push
inc
in
inc
cmp
xor
movs
mov
xor
rcl
xchg
jp
add
idiv
pop
clc
xchg
mov
and
inc
stos
(bad)
mov
sbb
mov
in
lea
and
mov
sbb
mov
int3
cmp
adc
rcr
ss
adc
mov
xor
mov
test
std
mov
aam
test
clc
outs
mov
rol
out
xchg
mov
mov
bound
push
and
shl
test
mov
push
cld
gs
sub
cdq
inc
sbb
add
xchg
ja
pop
in
pusha
and
inc
sbb
push
into
nop
sbb
mov
inc
repnz
fstp
ins
test
xchg
loopne
mov
pop
outs
es
(bad)
in
jmp
mov
inc
push
inc
sbb
xchg
std
imul
sub
ss
and
add
rol
into
jle
test
inc
daa
test
sub
push
adc
xor
push
in
dec
into
fisub
mov
cli
and
stc
mov
add
push
adc
cwde
jns
int3
jmp
jge
jl
cwde
jle
out
les
std
jle
rcr
das
pop
mov
inc
cmp
lods
ins
daa
inc
jb
jne
call
mov
int
inc
in
xchg
xchg
dec
or
lea
mov
je
dec
loop
ja
pop
imul
xlat
mov
cmp
aaa
inc
sub
cmp
mov
mov
fwait
(bad)
mov
mov
stos
mov
dec
in
(bad)
push
es
shr
jl
hlt
fdiv
dec
mov
jmp
sbb
movs
push
and
outs
pop
fst
int
sub
popf
pop
lods
cmp
or
xor
sbb
lods
stos
sbb
pushf
xchg
or
sbb
mov
repnz
inc
inc
sar
push
push
icebp
push
xchg
sub
inc
mov
aaa
adc
push
pop
rcr
in
int
retf
cmp
fwait
cmp
add
sub
cdq
or
(bad)
test
pop
dec
sahf
das
mov
into
es
ror
int
loopne
cwde
and
ja
pop
enter
in
mov
jno
cmps
rcr
cmp
dec
jmp
xchg
cld
retf
test
jne
dec
aas
push
(bad)
and
mov
xor
adc
(bad)
mov
and
dec
cdq
push
inc
xor
mov
sub
lea
clc
mov
xor
xchg
shr
test
in
iret
and
(bad)
jecxz
repz
push
push
retf
push
sub
ficom
jmp
xor
sbb
fisttp
jnp
idiv
mov
repz
inc
loop
(bad)
jnp
adc
jae
jb
shl
(bad)
(bad)
pop
xchg
pop
test
xor
inc
add
sub
(bad)
pop
mov
aam
pop
dec
popf
dec
sahf
scas
(bad)
and
fisttp
ins
outs
popa
adc
mov
and
sub
inc
inc
js
mov
lods
mov
xchg
lea
lahf
icebp
call
je
jmp
push
cmc
hlt
lods
movzx
aas
push
mov
jle
in
cli
cmps
jo
fistp
fcmovne
add
push
xchg
push
mov
sub
clc
mov
sbb
gs
(bad)
std
cmp
ins
test
test
pop
or
sbb
aam
jb
pop
dec
call
into
int3
cmp
and
(bad)
mov
xor
cld
xor
fsubr
xor
pushf
data16
into
xchg
mov
add
ins
inc
add
ins
lds
add
scas
and
(bad)
lock
and
push
mov
mov
cmp
mov
sub
mov
and
cmp
repz
mov
dec
mov
push
xor
pop
mov
pop
mov
(bad)
pop
add
mov
mov
scas
in
aam
inc
rcr
sbb
js
shr
retf
mov
test
daa
sti
out
popf
shl
mov
dec
int3
add
scas
mov
arpl
xchg
push
sbb
add
jecxz
cmp
push
mov
adc
xchg
fs
scas
std
fbstp
sub
jb
stc
ud1
jo
stos
(bad)
fistp
inc
pop
outs
in
adc
int3
shl
sub
(bad)
in
adc
inc
retf
daa
cmp
shr
lahf
push
mov
addr16
and
imul
jno
sar
lahf
cmp
repnz
pop
ds
nop
pop
cwde
outs
adc
call
loope
xchg
adc
sbb
fs
cmp
icebp
sti
lock
mov
retf
dec
cmp
xchg
sub
out
loop
fdiv
cmc
pop
push
xor
lock
repz
inc
shl
aas
mov
mov
nop
enter
fiadd
loop
cli
dec
int
je
dec
jge
movs
cmp
shr
mov
and
clc
cmp
lahf
fs
jo
sbb
or
sbb
stc
je
xor
movs
ins
inc
mov
(bad)
in
retf
aad
xchg
push
retf
in
movs
idiv
cmp
adc
sahf
adc
inc
jo
mov
lahf
leave
push
mov
xchg
ja
(bad)
sbb
shr
push
(bad)
std
retf
sbb
dec
cmps
mov
push
std
loopne
jmp
dec
pop
dec
cdq
mov
push
repz
daa
imul
mov
popa
out
sbb
adc
pusha
jmp
out
mov
jl
mov
pop
add
xchg
cdq
es
mov
int3
cli
cmp
dec
ins
js
xor
add
and
leave
test
pop
int3
sub
mov
jg
or
in
neg
iret
pop
stos
cmps
mov
cmp
loopne
jns
and
inc
push
mov
or
push
ss
cmp
sti
or
outs
call
pop
pusha
fsubr
rol
fstp
sbb
push
xor
mov
xchg
push
or
(bad)
(bad)
in
gs
in
imul
retf
cs
lea
fadd
sub
push
xchg
pop
cmp
mov
mov
loop
lods
push
jle
jb
push
mov
adc
xchg
sbb
push
aas
pop
sbb
outs
das
fistp
mov
mov
inc
jmp
jp
out
fistp
xor
fs
(bad)
sti
mov
or
ins
sar
iret
test
pop
and
mov
call
pop
out
or
sub
mov
pop
xchg
cs
ret
div
ins
jle
not
or
or
arpl
jmp
out
ror
rep
(bad)
int3
shl
mov
xor
fld
cdq
jne
ins
fild
inc
xor
mov
mov
jmp
mov
add
out
cwde
shl
sub
cld
in
call
cmc
popf
xor
das
(bad)
adc
xchg
loop
xor
add
adc
mov
or
inc
cs
aad
jle
xchg
and
iret
xchg
xor
(bad)
inc
mov
sbb
and
pop
sub
sbb
into
cmps
adc
add
std
dec
cmps
sbb
xor
adc
das
sub
aam
dec
cmp
sahf
btc
push
sub
jbe
dec
adc
sub
sub
shl
dec
dec
and
xchg
push
gs
push
cmp
cli
pop
lods
les
mov
xchg
int3
movs
js
pop
fidiv
xor
push
movs
out
mov
mov
jae
pop
bound
jg
push
(bad)
icebp
cdq
cmp
xor
dec
add
lock
mov
mov
(bad)
dec
jp
dec
and
cmps
inc
dec
pusha
cld
(bad)
adc
(bad)
addr16
in
pop
xlat
cld
jmp
jle
xchg
jle
fmul
movq
jl
sub
jno
out
adc
dec
adc
push
fucomi
mov
clc
sub
aaa
sbb
cs
retf
outs
jne
cmp
es
and
in
sbb
mov
das
pop
mov
or
push
xchg
inc
in
dec
push
mov
mov
jmp
retf
mov
xchg
push
dec
push
mov
add
(bad)
jnp
push
xchg
(bad)
std
mov
mov
pop
cmp
movs
mov
xlat
pop
or
bound
pop
pusha
push
fld
push
pop
retf
jae
jmp
cmp
ja
mov
mov
mov
inc
or
jne
cmp
lods
das
pop
add
push
shl
push
retf
xchg
lods
add
test
stc
fstp
daa
adc
xchg
(bad)
pop
popa
fst
idiv
xlat
or
jnp
mov
xchg
push
mov
cmp
mov
test
adc
mov
test
ds
pop
add
inc
test
icebp
mov
mov
xchg
js
mov
mov
mov
in
inc
mov
test
icebp
aas
inc
push
mov
test
mov
jmp
sub
jl
pushf
mov
movs
mov
out
jl
adc
int3
in
jae
xchg
pushf
mov
sar
gs
cmp
data16
outs
and
prefetcht1
ja
test
xor
jmp
inc
(bad)
or
int3
cmps
add
ret
mov
ror
mov
cwde
mov
jecxz
sub
(bad)
sbb
loope
cdq
sub
div
pop
mov
adc
in
jmp
xchg
aad
stos
sbb
movs
les
jle
sahf
fwait
push
mov
jmp
or
sbb
sub
stc
repnz
xor
jge
fisttp
jge
popf
aad
test
enter
ss
inc
mov
sar
and
enter
leave
das
mov
sbb
mov
pop
xor
pop
shr
cmp
push
aas
mov
cmovbe
fldl2t
out
stos
mov
scas
adc
jb
and
push
movs
shl
cmc
push
sub
sbb
outs
cmps
cwde
iret
sub
dec
gs
out
inc
out
pop
cmc
outs
cwde
lds
xor
out
sub
push
dec
ror
loopne
retf
mov
mov
pop
pop
or
cmp
xchg
out
fidivr
sahf
hlt
movs
or
xor
mov
xor
push
enter
adc
je
push
jp
mov
fmul
inc
and
push
mov
mov
lock
inc
in
jb
push
fs
xor
push
ffreep
or
mov
inc
add
test
jne
cmps
(bad)
popf
pop
loopne
lea
test
cld
popf
jne
in
fadd
psubusb
mov
inc
sar
int
inc
cdq
scas
mov
cdq
push
push
jno
into
gs
sbb
repnz
ss
adc
fidivr
aam
lds
mov
frstor
jecxz
mov
repnz
and
mov
(bad)
or
push
adc
mov
mov
mov
loope
enter
mov
leave
pop
cmps
and
ins
dec
mov
and
into
xchg
dec
sbb
inc
out
sub
pop
(bad)
inc
jnp
push
jl
dec
cmp
dec
jecxz
aad
lods
mov
pop
js
mov
xchg
or
es
stc
fld
lds
(bad)
div
ds
aam
dec
xchg
sbb
xchg
or
aad
vmovss
sub
leave
mov
retf
mov
clc
in
sub
cs
gs
and
test
push
mov
jae
xlat
xchg
sub
and
cmps
imul
mov
xchg
and
bound
sar
fisubr
sahf
repnz
adc
lods
inc
or
mov
mov
inc
push
jp
pop
jb
mov
fdivr
sbb
or
shl
das
xchg
call
sub
fstp
pop
xor
sbb
cmp
mov
test
imul
and
push
adc
xor
xchg
or
out
sbb
call
retf
jle
inc
adc
cmp
(bad)
scas
cmps
dec
das
mov
shr
add
fist
push
xchg
and
sub
retf
push
sar
jmp
in
xor
int3
jns
push
push
sub
sbb
mov
div
arpl
mov
retf
or
in
pop
or
xor
repz
leave
(bad)
xchg
call
sbb
cmc
sbb
in
sbb
out
jno
pop
ins
sahf
xor
inc
test
ret
xchg
sub
pop
daa
push
ret
pop
(bad)
adc
out
loop
jne
mov
mov
nop
ss
les
repz
fistp
les
ret
(bad)
iret
push
ror
inc
fdiv
out
outs
movs
sbb
pop
iret
sub
icebp
inc
pop
mov
pusha
cs
es
aas
iret
out
xchg
inc
jb
repnz
fistp
cmp
inc
mov
int
loopne
xor
add
xchg
(bad)
pop
sbb
xor
ret
push
add
fdivr
jbe
cwde
shr
adc
dec
fidivr
adc
cmp
mov
in
(bad)
aas
ret
pusha
mov
xchg
xor
push
movq
jne
movs
pop
cmp
push
fbld
push
outs
sbb
sbb
cmp
push
jnp
aad
xchg
cwde
mov
(bad)
sub
ret
or
xor
cwde
mov
push
jp
mov
mov
test
lock
inc
pop
pop
jmp
adc
or
jmp
mov
inc
dec
jle
ror
es
lods
cli
in
nop
jae
xlat
(bad)
scas
loopne
xchg
out
sbb
(bad)
pushf
mov
push
cmp
(bad)
jmp
std
adc
jg
push
adc
(bad)
clc
fmul
push
sub
gs
stos
neg
xchg
stos
jne
(bad)
cmp
adc
fisub
std
lea
mov
mov
add
and
out
pop
xlat
sub
popf
sub
pop
push
dec
mov
jp
in
and
(bad)
out
push
bound
push
in
pusha
mov
inc
mov
adc
adc
imul
js
sti
aaa
mov
sbb
add
push
or
(bad)
sar
push
das
call
push
xchg
(bad)
stc
mov
ror
and
jp
outs
jno
inc
jbe
aaa
pop
sahf
or
fidivr
xor
sub
iret
or
repnz
pop
pop
call
jno
xchg
iret
stc
inc
int3
push
push
mov
dec
sub
lock
and
imul
(bad)
xor
lock
enter
pop
pop
sub
(bad)
scas
and
loope
arpl
movzx
xchg
ficom
mov
cmp
sbb
jb
mov
ins
or
and
inc
fwait
daa
mov
in
or
loop
pop
int
inc
dec
push
adc
pop
cmps
or
mov
lds
mov
popf
xlat
sbb
inc
push
mov
adc
cdq
shl
push
test
cmp
and
sub
jno
rcl
mov
cmc
sub
js
sbb
mov
stc
ret
adc
test
test
add
(bad)
test
aam
mov
(bad)
sti
cmp
into
addr16
aaa
ds
add
cmp
fbstp
aad
fwait
sub
add
dec
xchg
push
mov
mov
test
rcl
sbb
inc
push
sbb
pop
and
dec
loopne
retf
leave
sbb
retf
push
jmp
out
adc
push
add
jge
popa
icebp
bound
fsubr
ins
pop
sbb
mov
sbb
leave
js
fdiv
pop
xor
or
jae
cld
or
sbb
loop
in
or
push
push
aas
mov
push
and
sbb
cmp
sbb
stos
mov
jle
call
and
jne
and
mov
dec
je
or
xchg
jbe
pop
aas
dec
or
loopne
sub
(bad)
mov
adc
or
inc
cmp
inc
cmc
stc
inc
out
outs
rol
jle
xchg
or
push
loopne
gs
sbb
cmps
inc
xor
dec
adc
cld
push
push
repz
mov
loope
sub
ds
(bad)
jb
sub
test
xor
push
sbb
push
aam
cmp
ret
and
mov
pusha
in
repnz
mov
imul
jle
push
jmp
and
add
add
sbb
pop
add
adc
popf
ror
fcom
and
das
loop
inc
shr
inc
sub
push
cmp
ret
ret
jecxz
mov
(bad)
xor
fcomp
jne
push
cmp
push
ins
xchg
das
sbb
cmp
xchg
jne
out
cld
bound
push
sahf
and
dec
sub
fcomi
pop
or
jecxz
sbb
mul
(bad)
cmc
mov
cs
jae
dec
(bad)
jns
rol
push
outs
xor
sar
cmp
mov
ins
sub
adc
fldcw
cmp
mov
pop
dec
movs
sahf
push
das
ins
sar
pop
pop
mov
out
xchg
daa
xor
sti
loopne
or
mov
fcomp
je
das
(bad)
addr16
or
or
shr
(bad)
clc
jecxz
lods
pushf
mov
sbb
push
mov
inc
(bad)
es
retf
fwait
inc
mov
call
shl
add
mov
cmp
pop
popf
dec
(bad)
jmp
jo
cmp
jmp
test
loop
xchg
mov
movs
dec
cmp
push
outs
sub
loope
dec
mov
addr16
test
inc
int
loope
push
pusha
shl
push
push
jl
mov
ficom
mov
mov
jle
sub
pop
mov
in
adc
mul
enter
push
push
jno
sahf
bound
std
sahf
cs
data16
cdq
retf
or
jbe
jecxz
mov
push
mov
jno
pusha
iretw
cdq
pop
out
mov
outs
push
les
fistp
jecxz
sub
lock
pop
imul
xlat
adc
out
pop
int3
mov
into
shl
les
mov
jbe
cli
in
pop
fisttp
sub
icebp
in
stos
imul
pop
xor
push
lods
adc
mov
lods
pop
retf
xor
imul
and
test
inc
test
push
cmp
cmp
add
inc
retf
xchg
retf
bnd
dec
and
into
cmp
repz
les
mov
and
push
cli
test
shl
stos
inc
push
and
jp
jnp
mov
jmp
not
pop
sub
pop
and
dec
(bad)
mov
int
sbb
lahf
sahf
imul
(bad)
push
cli
sub
push
in
inc
out
sti
mov
inc
test
rcl
cmp
sub
xchg
stos
fisttp
pop
mov
and
push
cdq
xchg
jb
cmc
pop
mov
push
push
xchg
push
add
hlt
add
mov
dec
add
sub
jmp
cmp
xchg
dec
and
and
and
mov
(bad)
loopne
repnz
movs
out
xchg
outs
shl
aaa
jo
gs
mov
pop
dec
or
ror
(bad)
in
movs
jnp
sbb
cmps
bound
jno
mov
cli
add
adc
add
or
mov
movs
inc
jbe
test
xor
mov
cdq
test
les
jmp
pop
popf
(bad)
mov
ret
iret
xchg
dec
and
sub
xor
stos
inc
dec
add
mov
mov
sbb
jb
(bad)
cmps
pop
push
push
cmp
dec
mov
jo
pop
jbe
xchg
mov
push
neg
cld
sbb
cmp
mov
inc
dec
out
sub
dec
mov
adc
adc
(bad)
neg
add
imul
clc
sahf
in
pop
xor
push
movs
cmps
outs
mov
xchg
xlat
sbb
js
mov
enter
dec
xchg
call
sub
and
cmp
push
pop
inc
cmp
ficomp
inc
push
sti
test
pop
loopne
mov
mov
jb
dec
jae
mov
movs
mov
xchg
push
retf
push
pusha
fistp
jmp
inc
push
and
adc
popa
pop
fidiv
cmp
inc
mov
add
mov
or
shr
jmp
dec
push
adc
fadd
pop
pop
jmp
xchg
fnstsw
ins
cld
and
pop
cmp
or
push
mov
clc
popa
jecxz
xor
push
mov
push
push
or
xor
add
sub
push
daa
and
lds
sbb
mov
ja
test
mov
bound
pop
hlt
xchg
xchg
mov
jbe
stos
jb
pop
dec
push
loop
push
lds
xor
adc
cmp
jmp
xor
fdiv
sahf
and
xor
es
repnz
dec
sub
pop
inc
mov
das
jp
mov
stc
(bad)
xor
addr16
lds
popf
mov
xor
cli
ja
add
repz
adc
mov
in
xchg
sub
out
add
mov
push
outs
popf
jmp
pusha
xor
retf
scas
inc
or
jl
iret
stos
inc
stos
ja
cwde
ins
stc
jns
movaps
test
std
mov
and
shl
out
jl
outs
out
mov
inc
inc
and
fbstp
inc
test
cmp
out
shl
add
xchg
call
call
lock
xchg
push
mov
or
cwde
adc
pop
mov
and
xor
fucomi
jmp
xchg
scas
xor
loop
jne
or
and
cmp
shl
imul
(bad)
into
inc
mov
add
dec
jle
lock
fs
je
xor
push
bound
out
sbb
mov
dec
std
rcl
pop
jnp
push
mov
jno
(bad)
lock
int
dec
jne
or
aaa
push
mov
mov
stos
lds
fldcw
in
mov
js
outs
test
aad
lock
and
adc
mov
hlt
test
ret
or
mov
jmp
dec
rol
sahf
sub
lods
mov
mov
mov
pop
mov
aam
add
cdq
adc
inc
sbb
jbe
or
push
inc
xchg
lahf
sub
add
in
jle
mov
ret
push
xchg
dec
mov
pusha
out
je
popf
out
rol
lea
imul
mov
add
popa
jecxz
pop
cmc
inc
jle
jg
mov
dec
pop
dec
je
jae
sub
xlat
adc
jecxz
neg
sti
icebp
or
mov
fadd
xor
pop
mov
mov
arpl
push
pusha
sar
adc
xchg
shr
pusha
mov
add
sub
cld
sbb
jmp
in
push
or
pop
xor
lods
inc
cs
push
ins
enter
add
dec
xor
mov
mov
inc
mov
mov
add
ret
sti
int
es
mov
xchg
aaa
sbb
mov
in
test
sbb
add
shl
dec
xor
xor
rcl
je
cmp
(bad)
mov
lods
xchg
bound
(bad)
lock
xor
out
shr
fsub
dec
add
and
mov
in
(bad)
add
sub
loopne
adc
and
popa
cmp
pop
cmps
xchg
cmp
nop
add
mov
ds
xor
daa
or
adc
add
(bad)
push
jb
add
mov
or
sti
pop
or
fadd
jmp
stos
lods
xchg
dec
cmp
jecxz
inc
mov
ja
jae
mov
xchg
inc
fisttp
js
sti
adc
lods
mov
dec
dec
shl
in
lods
stos
loop
push
out
and
scas
push
adc
push
repz
jno
jl
mov
pop
jg
js
pop
je
xchg
xchg
lahf
jbe
mov
adc
mov
aad
mov
cmps
in
in
popa
es
test
xor
cld
das
jmp
ds
adc
arpl
fprem
pop
cwde
seta
jecxz
fld
xchg
jb
sub
fcomp
mov
add
lea
pusha
mov
jne
icebp
neg
(bad)
jmp
xchg
sahf
(bad)
jne
and
and
icebp
and
ja
div
aas
xchg
cs
xchg
and
sbb
call
retf
or
and
mov
repz
es
mov
cmp
leave
imul
std
das
ret
sbb
pop
push
test
inc
cld
pop
push
cmp
push
inc
and
or
sahf
cdq
or
xor
fdivr
xor
sub
cmp
and
jecxz
retf
(bad)
out
jg
dec
or
out
cmp
cmps
outs
in
jae
test
adc
loopne
pop
xchg
add
mov
lahf
aaa
mov
mov
cmp
xor
fld
out
and
mov
mov
xchg
imul
icebp
shr
lahf
add
std
sub
test
shr
add
test
push
loop
mov
and
dec
popf
dec
push
xchg
mov
loope
mov
push
sbb
mov
or
and
jnp
call
mov
scas
or
xor
ret
ins
mov
shr
ret
dec
retf
adc
ins
cbw
jnp
lea
or
dec
push
into
loop
add
ss
shl
jb
pop
popa
lods
fisttp
pop
out
scas
push
rol
mov
aad
icebp
les
bound
mov
xor
push
retf
mov
cmp
xchg
or
mov
add
repnz
jge
xchg
enter
sar
dec
jmp
mov
in
dec
adc
test
fimul
xchg
imul
jo
mov
rcl
imul
inc
add
or
mov
aaa
popa
mov
sbb
push
jle
xor
arpl
cmp
idiv
adc
lds
out
mov
sub
adc
push
fisttp
push
cmp
sub
sub
push
add
outs
add
mov
fucom
adc
jmp
cmps
inc
and
test
sti
addr16
movs
fs
sar
xchg
push
cmps
mov
push
aaa
std
(bad)
out
or
pusha
in
pop
pop
mov
sub
mov
lahf
outs
(bad)
bound
sub
js
and
je
fst
add
(bad)
loopne
inc
(bad)
mov
lds
pop
imul
cwde
enter
stos
in
js
push
(bad)
inc
cmp
popa
popa
jns
push
arpl
pop
dec
and
loopne
sub
add
iret
cli
sti
js
sbb
push
out
mov
cmp
jnp
popa
mov
mov
retf
sbb
pop
mov
or
out
dec
fs
jmp
push
in
movs
sar
js
mov
mov
test
scas
fwait
nop
cmp
and
imul
mov
dec
shl
out
out
repz
push
in
xchg
jae
pop
pop
cmp
dec
pop
mov
nop
dec
xor
fbld
or
xchg
(bad)
jecxz
adc
push
dec
sbb
push
stos
fdiv
cli
or
bound
stos
sbb
data16
jp
cmps
jbe
inc
mov
pusha
mov
rcl
sti
and
push
stos
lods
or
mov
mov
fisttp
fisttp
aad
ret
inc
push
push
jns
ds
pop
icebp
push
movs
dec
sbb
mov
mov
pop
and
jge
sbb
mov
dec
icebp
in
lods
pop
ins
loopne
rol
sbb
popf
in
xlat
lea
or
retf
(bad)
pop
es
les
push
mov
mov
cwde
adc
mov
push
and
ret
mov
ss
movs
sub
push
loope
jbe
push
xor
mov
or
push
aaa
fstp
aam
enter
pop
mov
ds
fstp
dec
mov
arpl
xor
mov
fisub
imul
dec
popf
inc
mov
mov
fs
ret
outs
inc
call
sahf
dec
test
push
mov
xchg
aam
icebp
pushf
test
pop
(bad)
sti
scas
and
cmp
out
pusha
dec
arpl
mov
mov
cmp
push
push
pop
push
mov
shl
nop
std
mov
cmps
test
sub
add
in
pop
push
jp
cmps
sbb
mov
pop
enter
js
jbe
test
scas
call
pushf
adc
popf
cmc
inc
cmp
push
dec
xor
leave
and
aas
fsubr
pop
xor
enter
pop
inc
out
jg
sbb
shl
mov
pop
mov
pop
ror
aad
sbb
test
mov
popa
jmp
cmp
dec
call
sbb
xchg
xlat
jmp
pop
call
enter
mov
jp
mov
lds
push
mov
test
adc
rol
mov
arpl
jb
inc
mov
mov
out
jp
dec
loop
push
xchg
mov
cmp
imul
mov
sub
mov
mov
jg
and
or
in
repz
sbb
jecxz
stos
ins
pop
adc
cmps
jno
addr16
ins
aam
clc
sahf
jae
cmp
and
and
vpmacsdqh
mov
inc
adc
dec
mov
push
aaa
or
fild
inc
ret
ins
sub
imul
dec
inc
jl
lds
jne
push
xchg
sahf
push
pop
rcl
dec
mov
push
sbb
aaa
gs
push
in
in
cs
push
jmp
cmp
mov
inc
or
sbb
imul
ret
mov
adc
inc
je
adc
fidivr
ss
popf
sub
pop
stc
test
add
pusha
push
fisttp
cmp
fisubr
call
sbb
neg
sbb
int
movs
jno
sub
mov
ja
mov
dec
shl
jo
cmp
js
mov
addr16
pop
pop
shr
mov
(bad)
jne
sbb
jbe
std
je
leave
adc
sub
or
push
js
pop
xchg
adc
push
sahf
movs
add
mov
jo
fwait
xor
fwait
push
mov
xchg
adc
pop
gs
mov
mov
out
push
mov
push
data16
adc
sub
xchg
adc
sub
clc
and
(bad)
(bad)
pop
sti
or
jge
mov
(bad)
sti
mov
fwait
sbb
repnz
inc
xchg
sahf
mov
inc
add
push
jmp
mov
dec
or
sti
cmp
dec
mov
rcr
sbb
jae
push
aaa
fild
xor
imul
cwde
push
push
lahf
push
fidivr
xchg
stos
cmp
jl
les
and
sbb
repnz
fucom
push
mov
mov
retf
scas
push
jnp
pop
ss
mov
lods
sbb
clc
rdpmc
imul
jb
es
out
adc
jecxz
sbb
aad
and
mov
pop
lods
push
jl
gs
sar
mov
bnd
push
rcl
mov
push
cmp
in
std
pop
stos
in
add
inc
push
add
and
cmc
bound
jnp
addr16
cmp
loope
add
and
int
shl
xchg
movs
add
sahf
sti
mov
xchg
aaa
stos
cmp
adc
jg
adc
or
mov
cli
icebp
popf
push
push
dec
sub
inc
into
ss
loope
cmp
cli
sub
bound
push
aad
inc
in
xchg
dec
push
dec
add
sar
xlat
add
pop
dec
mov
push
mov
and
imul
ror
retf
pop
scas
mov
(bad)
popa
fdivr
fisub
cmc
jno
inc
mov
mov
fadd
sub
xchg
xchg
into
lods
addr16
test
mov
cmps
add
sub
jge
and
movs
out
lods
xor
add
sbb
push
rcl
in
lods
pop
xlat
cwde
aaa
inc
adc
and
sub
jae
add
ins
inc
mov
and
and
jl
cmp
shl
in
lds
in
ror
mov
add
in
outs
mov
ret
mov
stos
cmps
or
int3
pop
mov
pop
or
mov
out
mov
jge
pop
shl
cmps
(bad)
or
xor
(bad)
fmul
pop
aad
clc
pop
icebp
inc
cld
xchg
dec
adc
mov
xchg
out
push
cld
push
retf
cmp
sahf
(bad)
push
bound
add
icebp
lock
int
std
ficom
out
cmp
mov
mov
call
xchg
xor
xchg
adc
mov
inc
and
ret
data16
mov
neg
addr16
(bad)
sub
(bad)
cmp
inc
push
jmp
shl
fs
sub
push
fiadd
shl
movs
xchg
popa
ins
mov
cld
fild
xchg
inc
or
sbb
mov
sti
loop
mov
pop
call
cli
imul
dec
retf
dec
push
les
shl
out
inc
or
mov
enter
mov
jnp
jg
out
xor
fcmovne
push
loope
mov
xchg
jae
in
xchg
dec
(bad)
sti
mov
jae
xor
stc
adc
or
or
jle
jmp
fsub
pushaw
out
dec
mov
sbb
dec
mov
(bad)
mov
sbb
ficom
xor
or
or
popa
xchg
mov
cmp
daa
dec
push
sub
add
mov
or
out
fistp
mov
jne
lods
jbe
je
cmps
lds
or
jmp
mov
xor
shl
lea
sbb
pop
and
and
jl
or
xchg
pop
sti
mov
cmp
shl
xor
fst
fdiv
mov
test
jp
clc
loopne
sbb
ror
push
fisttp
dec
out
mov
pushf
xor
imul
loope
mov
xchg
fld
mov
mov
cli
dec
call
repz
int3
or
inc
or
aad
push
cmc
mov
icebp
inc
mov
or
out
mov
dec
js
popf
ret
ins
and
mov
cmps
inc
sbb
fidiv
jp
xlat
(bad)
in
push
popa
out
adc
xor
js
adc
fadd
inc
mov
mov
sbb
or
jnp
push
lds
xchg
popa
mov
aas
rol
add
mov
les
sbb
pop
test
pop
imul
test
lds
sar
mov
jo
outs
dec
push
in
adc
add
arpl
dec
movs
jg
sbb
(bad)
fld
mov
xchg
mov
push
inc
lea
push
sti
add
lods
fcom
pushf
rol
pop
jne
add
mov
(bad)
push
enter
mov
clc
retf
retf
(bad)
stos
enter
aaa
push
cdq
inc
ret
jno
test
jno
les
mov
xchg
cmps
mov
(bad)
xchg
shr
dec
mov
scas
xor
movs
adc
or
daa
adc
mov
push
dec
adc
dec
and
cwde
xchg
js
add
mov
pop
inc
sbb
xor
retf
cmp
ret
scas
xchg
hlt
stc
xchg
pop
and
pop
lods
push
call
jb
pop
add
pop
je
adc
(bad)
jb
outs
in
das
repz
xchg
neg
mov
(bad)
pop
jno
dec
and
lds
arpl
out
clc
sub
pop
and
(bad)
mov
adc
mov
pop
sub
xchg
ss
inc
inc
fadd
(bad)
fidiv
xor
(bad)
push
movs
rol
or
mov
dec
dec
rol
scas
stos
mov
mov
cdq
leave
scas
inc
and
dec
int3
test
(bad)
jmp
(bad)
sbb
nop
cdq
xor
aam
daa
pop
pop
test
sub
adc
pop
mov
call
fcom
xor
xchg
ins
xchg
mov
ja
in
mov
fsubr
fidivr
shl
mov
lock
adc
add
jge
mov
leave
ret
cmp
mov
repnz
adc
jp
adc
shr
pop
cmp
sbb
fcom
inc
pop
push
jne
nop
inc
hlt
jecxz
popa
mov
cdq
inc
test
mov
pop
out
(bad)
xchg
sbb
push
mov
cmp
ja
call
push
inc
adc
and
pop
neg
(bad)
jmp
inc
mov
loopne
or
pop
arpl
jg
into
cmps
sub
les
and
add
repnz
dec
dec
jnp
(bad)
ret
xor
ds
es
dec
frstor
cld
xor
mov
mov
leave
(bad)
mov
adc
ins
sub
adc
adc
mov
into
jg
dec
xchg
push
into
movs
adc
icebp
pop
and
ins
mov
pop
dec
jbe
push
xchg
add
hlt
fdecstp
pop
dec
mov
in
cmp
cmp
outs
ucomiss
movsx
imul
fistp
mov
mov
rcr
mov
sub
pop
scas
or
js
lods
jo
xchg
in
std
(bad)
fadd
rcl
jge
pop
int3
shl
(bad)
add
pop
dec
in
mov
es
sar
cmc
push
mov
jecxz
jb
sbb
adc
arpl
jno
shr
push
jo
bound
lds
sbb
aam
xor
mov
xchg
and
inc
sbb
mov
imul
stos
sahf
aam
lds
cdq
push
rcl
push
push
sub
cmp
push
mov
mov
adc
mov
jo
js
xor
imul
fwait
or
sahf
or
and
sub
xchg
sub
jmp
lods
inc
scas
repz
lock
cwde
shr
sbb
sub
push
or
inc
test
adc
inc
aam
pop
sbb
jg
stc
xchg
movs
and
sbb
pop
adc
sbb
jmp
cmps
push
pop
mov
ret
dec
and
(bad)
rol
xor
jecxz
mov
push
cwde
cwde
adc
inc
sbb
pop
xlat
lods
cli
jl
cmc
jbe
mov
sub
nop
mov
pop
xchg
mov
or
call
aam
xor
dec
dec
pop
push
aas
mov
repz
cmps
sbb
fisttp
jb
cmp
add
inc
xchg
mov
(bad)
iret
test
or
ss
ins
in
mov
in
add
cmps
xchg
cmp
adc
push
adc
xchg
loopne
sbb
mov
mov
loopne
cld
mov
sbb
add
cmp
xlat
fld
sub
pop
fcomp
pop
mov
shl
cmp
outs
mov
mov
sbb
adc
push
sbb
imul
movups
add
push
push
mov
call
jmp
pop
pop
add
int
out
in
push
cmp
(bad)
es
(bad)
popa
adc
push
fld
bound
xchg
icebp
shl
mov
xchg
arpl
pop
sub
xor
dec
retf
retf
jge
or
add
inc
(bad)
movs
inc
shr
and
stos
or
dec
enter
sub
dec
retf
jbe
aad
mov
cmp
xchg
shr
(bad)
(bad)
sti
lds
mov
pushf
mov
push
outs
pop
ins
mov
mov
daa
and
dec
sub
sbb
repnz
or
inc
outs
adc
aad
inc
mov
in
and
cld
in
xchg
cmpps
cmp
ds
mov
push
fsub
pop
push
mov
(bad)
test
ja
arpl
mov
shl
push
jecxz
push
cmp
cmp
xchg
dec
in
add
mov
adc
inc
jno
push
stos
jp
adc
call
or
imul
call
jno
repz
pusha
sub
dec
xor
xchg
sbb
xchg
push
and
test
test
stos
das
outs
mov
mov
sbb
retf
xchg
or
icebp
mov
dec
xor
jns
in
std
xchg
not
fdivr
leave
int3
cmps
fldenv
add
popa
test
jle
inc
mov
push
hlt
cmp
mov
jp
pop
outs
scas
popf
lods
push
mov
sahf
mov
add
cmp
push
imul
add
stos
js
stos
ficomp
cmp
ret
out
pop
pop
gs
loop
popa
and
or
mov
pop
(bad)
test
pop
xor
xchg
mov
xchg
or
aam
sar
clc
imul
xor
sbb
push
xchg
iret
shr
in
xchg
jmp
test
xor
push
lock
adc
or
jo
cmp
rcl
adc
cmc
daa
imul
and
or
pop
inc
gs
aad
fnstsw
adc
inc
(bad)
shr
push
lock
icebp
or
(bad)
loopne
shl
cli
call
out
push
dec
leave
push
movs
setns
in
jne
test
retf
in
mov
in
fldenv
pop
rcr
clc
dec
jo
ins
jmp
xor
retf
into
repz
aam
sbb
les
sub
stos
mov
scas
push
lahf
stos
(bad)
stos
or
push
push
cdq
xor
mov
jns
pop
push
and
cld
(bad)
dec
andps
push
inc
arpl
inc
cli
sub
push
dec
mov
sub
push
inc
sti
jecxz
and
bound
imul
fadd
fs
outs
fdiv
pop
push
mov
leave
xor
xchg
pushf
loopne
jg
adc
(bad)
mov
cmp
call
inc
mov
out
das
jnp
and
xlat
pushf
cld
std
mov
xor
mov
out
jmp
outs
and
retf
sub
add
in
adc
out
fst
int
(bad)
loope
fiadd
call
sub
cdq
inc
dec
or
movs
xor
ss
jmp
stos
add
mov
int
dec
jle
xchg
(bad)
loop
mov
fstp
movs
pop
xchg
sub
adc
out
jmp
mov
cmps
xor
push
sub
inc
test
mov
daa
sbb
pop
or
mov
nop
add
inc
cs
push
jae
fcmovu
and
(bad)
ins
xchg
add
or
fwait
pushf
push
cmc
mov
call
mov
jmp
push
sbb
inc
stos
inc
mov
(bad)
sbb
jno
inc
lods
cmps
ret
clc
aas
xchg
ds
in
adc
push
ja
mov
sub
push
loop
(bad)
xchg
das
ficom
stos
push
jns
mov
sub
mov
mov
repnz
outs
xlat
sub
pusha
push
jbe
fsubr
jne
cdq
fmul
pop
sbb
pop
data16
and
loopne
mov
ins
pop
jb
sti
(bad)
das
cmp
aas
inc
jne
std
ins
jns
aaa
push
test
add
loope
in
and
shr
rcr
xor
or
(bad)
fwait
test
push
or
hlt
cmps
pop
out
mov
adc
pop
jb
fisttp
fsub
int3
movs
(bad)
int3
sbb
jbe
and
dec
or
adc
or
scas
out
push
fadd
and
mov
xchg
(bad)
repz
fs
popa
js
scas
ja
xchg
add
adc
je
movs
test
or
jo
sub
push
and
and
aam
jmp
(bad)
les
repnz
adc
lods
pop
push
call
inc
loope
adc
xor
fs
sar
jl
mov
xor
das
test
aas
mov
(bad)
adc
add
cmp
test
mov
lock
xchg
ror
xor
inc
stos
movs
idiv
call
ficom
call
push
sahf
fld
and
fsub
dec
jmp
push
das
inc
pop
add
or
imul
fsubr
loopne
xor
fisttp
jl
push
jp
and
lods
jae
sub
jle
sub
sbb
(bad)
or
out
std
daa
pusha
xor
lock
(bad)
mov
jno
jbe
mov
and
lea
lds
add
ds
jnp
(bad)
push
fld
in
or
mov
dec
pop
cmp
mov
inc
nop
and
push
test
push
pop
inc
fdivp
lods
sbb
cli
arpl
mov
imul
inc
shl
mov
das
cmps
jg
push
je
loop
mov
xor
xor
mov
inc
ss
gs
add
xchg
mov
jmp
test
xor
ds
pop
sar
push
or
shl
mov
push
je
int3
xlat
loop
jno
sub
jnp
rcl
mov
adc
mov
imul
lods
sar
jl
xor
sub
in
jne
inc
jmp
xchg
stc
jmp
ds
icebp
mov
bound
jae
movs
(bad)
xchg
call
pop
inc
inc
call
sub
stos
cs
sub
dec
and
movs
xchg
adc
or
in
push
pop
sub
sbb
push
xchg
pop
(bad)
xlat
ret
xchg
aam
pop
dec
aas
push
mov
shr
push
dec
mov
mov
xchg
ss
add
xlat
and
xchg
ss
bound
dec
jp
out
inc
(bad)
es
femms
mov
or
add
sbb
out
xchg
mov
outs
and
xor
cmp
sub
mov
imul
adc
cs
mov
inc
sbb
sub
pop
(bad)
xchg
fist
lea
fld
pop
hlt
mov
sbb
or
(bad)
mov
scas
out
pop
mov
lea
jno
sub
mov
sbb
push
aad
or
(bad)
fisubr
xchg
ret
mov
cwde
push
mov
fsubr
in
xchg
lock
xchg
ja
repnz
lahf
aas
ds
daa
sbb
cdq
scas
test
sub
retf
loopne
pop
push
in
stc
inc
std
loopne
push
(bad)
call
ja
repnz
mov
jo
mov
inc
mov
sbb
cmps
iret
(bad)
jnp
lods
ins
(bad)
int
aas
int3
aam
and
mov
or
pusha
call
or
imul
mov
shr
ror
sti
je
test
shr
std
hlt
or
and
xor
cmps
xor
xchg
std
loope
dec
adc
mov
jmp
xchg
fbld
mov
cmp
push
(bad)
dec
jns
retf
mov
pop
mov
fdiv
push
outs
jno
xor
fdivr
loopne
adc
aad
and
sahf
pop
fnsave
clc
pop
aaa
add
adc
data16
cmps
fsubp
jle
jno
cmp
movs
push
je
retf
add
adc
and
xor
cmp
and
add
shl
std
sahf
inc
sbb
dec
imul
push
xchg
and
ret
inc
jnp
outs
nop
test
fbstp
test
or
aas
add
retf
push
cmp
pop
sub
sbb
and
test
xlat
rol
xchg
movs
xor
sahf
or
popf
adc
test
aam
ret
cmp
les
daa
pop
mov
rcr
cmc
in
test
pop
inc
sbb
cmp
js
daa
xlat
xchg
retf
in
cmps
add
iret
(bad)
pop
(bad)
and
clc
pop
inc
mov
stc
cmp
loope
out
mov
cmp
mov
ror
out
scas
adc
jl
ins
and
sub
mov
ror
je
icebp
mov
call
ret
in
js
pop
sbb
(bad)
leave
inc
int3
movs
xlat
jge
or
xchg
xchg
mov
mov
fstp
(bad)
dec
nop
xchg
aaa
sbb
and
shl
jae
sub
jns
mov
aad
xchg
cmps
pop
mov
sbb
clc
ret
data16
(bad)
push
jne
push
ss
jo
rcl
sbb
push
adc
xor
add
pop
jns
ficomp
fs
mov
(bad)
jmp
mov
lds
push
mov
je
jecxz
stos
pop
das
pop
and
test
and
bound
jmp
push
movs
out
mov
adc
mov
(bad)
mov
jb
call
jno
fild
mov
pushf
pop
dec
nop
mov
stc
in
test
imul
mov
sub
lds
push
pushf
aad
push
push
jne
stos
jp
inc
ja
popa
test
(bad)
pop
pop
nop
sbb
xlat
lods
out
xor
sub
(bad)
not
cmp
sbb
leave
mov
out
inc
imul
into
mov
mov
push
fadd
outs
loope
pop
sbb
dec
jmp
aam
push
mov
jmp
fisub
cli
aad
xchg
in
movs
jo
add
xor
dec
fcomp
dec
cmc
sar
mov
pop
mov
jp
xchg
mov
out
stos
dec
mov
mov
call
pop
xchg
or
pop
jo
data16
js
test
jle
adc
xchg
je
rol
push
cmp
(bad)
ret
fs
aad
cmp
shl
jge
les
cs
sbb
mov
mov
add
icebp
cld
jmp
mov
not
sti
sahf
mov
sub
push
movs
mov
mov
and
fwait
stos
sbb
ins
out
push
push
hlt
jg
mov
hlt
and
daa
add
(bad)
stos
ins
aad
jp
cdq
stc
das
push
cmp
iret
mov
clc
js
stos
dec
les
pushf
mov
jnp
movs
retf
idiv
or
sub
fwait
pop
lds
xor
shl
cwde
fistp
es
int3
adc
and
test
ror
sbb
cmp
lahf
mov
int3
cmp
std
and
js
add
(bad)
sub
xor
push
sbb
popa
inc
jecxz
sti
cmp
jae
pop
shr
sub
push
mov
sub
xchg
mov
jae
adc
sub
pop
xor
sbb
in
and
and
xchg
mov
cmc
add
mov
inc
xor
push
loop
movs
inc
hlt
adc
in
dec
mov
(bad)
inc
movs
fstp
stos
(bad)
aas
mov
pop
cmps
dec
and
mov
dec
dec
push
xlat
and
ins
enter
push
and
or
dec
out
inc
jmp
outs
aam
ss
neg
movs
sbb
leave
inc
jb
xchg
out
fnstcw
lods
lock
mov
sbb
inc
(bad)
jns
(bad)
into
int
and
loop
cmp
cs
jbe
mov
mov
fwait
outs
lahf
mov
jbe
push
ss
pop
call
ja
mov
or
jno
popf
test
fidivr
inc
aas
lods
pop
push
test
ds
add
rcr
movs
mov
out
cli
pusha
jne
outs
(bad)
pop
std
out
fld
bnd
cmp
pop
xor
push
(bad)
cmp
push
aad
ret
adc
nop
inc
icebp
test
js
pop
outs
add
dec
shr
(bad)
fsub
inc
inc
sub
fcom
or
xchg
xor
push
pop
int
sub
dec
test
mov
pop
ja
pop
jg
dec
jo
mov
mov
sub
ja
pop
dec
cmp
out
outs
jne
mov
sub
jge
push
(bad)
and
xor
sbb
stos
sub
xchg
outs
cmp
pop
clc
xchg
jle
lds
in
ficomp
loop
inc
pop
adc
cli
mov
leave
nop
call
and
or
ror
xlat
fwait
jge
mov
jbe
loope
int
fisub
xchg
enter
lahf
jl
xchg
pushf
dec
outs
mov
bound
(bad)
sahf
add
jns
int3
cmp
pop
push
push
(bad)
jle
jbe
lock
addr16
or
jmp
ret
push
dec
jge
lahf
(bad)
pop
ins
not
push
mov
ins
imul
and
cmp
inc
dec
inc
pop
cmp
sbb
jmp
das
mov
push
inc
(bad)
pop
push
pop
cwde
iret
mov
or
xor
xchg
cli
inc
xchg
stc
xlat
push
adc
cmps
std
jae
add
sub
test
out
xor
lea
cmp
jae
adc
(bad)
mov
xor
shl
popa
shl
js
sbb
mov
(bad)
jno
fadd
pop
into
mov
jl
jae
nop
xor
enter
in
dec
in
test
and
pop
test
dec
inc
enter
and
lds
sar
test
cdq
xchg
jno
push
aas
jae
aam
loopne
sbb
out
cwde
test
cmps
(bad)
loope
xchg
mov
lahf
push
stos
cld
test
mov
jg
and
out
shl
mov
movs
imul
adc
or
mov
aad
xchg
mov
dec
jae
das
icebp
xchg
jnp
sbb
loop
movs
dec
mov
xchg
sub
and
cwde
xor
xor
sbb
popa
in
mov
sub
retf
sub
xchg
jmp
pop
gs
dec
fdivr
fcomp
mov
cmps
pushf
mov
imul
pop
and
lods
push
and
and
outs
push
(bad)
cli
scas
in
jb
clc
mov
sbb
jp
xchg
push
jb
mov
(bad)
(bad)
cmc
mov
pop
dec
xchg
ins
inc
xchg
repnz
xchg
aad
mov
ja
pushw
jb
xchg
mov
mov
inc
and
clc
fwait
dec
stc
push
push
and
jo
adc
int3
sub
pop
and
lods
inc
ror
rcl
into
cwde
add
jns
push
ds
loopne
inc
jp
sub
cmc
cmp
pop
adc
pop
cmps
in
mov
fisttp
xchg
out
aad
sbb
xchg
ja
data16
pop
lahf
scas
rcl
inc
int
mov
dec
fdivr
jae
sbb
ret
cmps
jb
aas
sti
into
arpl
rcr
imul
stos
(bad)
(bad)
pop
add
imul
je
dec
imul
jno
pushf
pushf
fs
or
loopne
jb
or
fs
retf
(bad)
mov
pop
mov
push
xchg
sar
or
je
dec
ja
pop
and
push
(bad)
stc
inc
xchg
jnp
es
ins
dec
push
mov
push
xor
add
(bad)
popf
pusha
sbb
cld
jg
clc
mov
inc
jmp
ins
nop
sbb
cld
push
xor
fwait
inc
ja
hlt
adc
mov
fidiv
xchg
dec
mov
xacquire
push
lahf
cmp
inc
test
cwde
mov
popf
cmp
ss
stc
cli
test
test
pop
fisub
sti
je
add
dec
(bad)
sub
or
push
mov
pusha
xor
dec
xlat
cwde
xor
lods
out
rcl
mov
scas
push
arpl
add
pop
lock
mov
xlat
cmp
adc
repnz
add
or
out
pop
sub
inc
ins
jae
jno
rcr
(bad)
lea
in
dec
xlat
(bad)
retf
cli
pop
sub
dec
cmp
xchg
cmp
xor
jne
mov
mov
fistp
or
xor
inc
cld
xor
or
imul
push
clc
adc
xor
jnp
push
fidivr
pop
popf
(bad)
pop
mov
pop
xchg
pop
aam
xor
clc
mov
(bad)
push
jbe
inc
jb
adc
aas
cmc
xor
add
int3
adc
out
test
add
push
jo
mov
adc
and
rol
jns
repnz
dec
sti
and
in
mov
cmp
add
sbb
or
aaa
aaa
sub
pusha
stc
push
hlt
mov
outs
add
(bad)
xor
data16
test
fld
jne
cwde
mov
fstp
test
or
ss
jge
xchg
rcl
in
fcomp
push
xlat
ins
jge
fild
shl
fwait
je
add
inc
fcomp
jns
push
daa
js
push
lds
aad
push
jmp
xor
mov
call
je
xchg
(bad)
fnstsw
shl
shr
jle
mov
cmp
loop
inc
push
mov
sub
js
sbb
sub
mov
out
mov
retf
int
or
aaa
mov
mov
xor
pushf
push
pop
and
xor
je
xor
clc
add
stos
stc
(bad)
(bad)
mov
mov
cmp
(bad)
(bad)
and
mov
add
js
and
test
sub
and
mov
mov
mov
add
push
lock
fcomp
mov
push
push
addr16
outs
cmps
or
add
mov
iret
adc
ror
adc
aaa
fild
xor
pop
add
das
and
push
sbb
test
jmp
mov
loop
push
std
(bad)
ss
loop
push
imul
xor
sub
aaa
daa
mov
inc
(bad)
or
ins
cmps
add
push
jns
xchg
adc
pusha
inc
fidivr
dec
adc
ror
inc
retf
shl
(bad)
ins
and
jmp
(bad)
mov
ins
shl
push
lahf
mov
leave
(bad)
aad
ja
cmp
bound
push
push
add
pop
sti
scas
aas
loope
(bad)
jne
ins
pop
adc
fdiv
push
hlt
lea
pop
sub
inc
fsubp
adc
mov
cld
and
adc
jo
int3
shr
aas
(bad)
push
mov
iret
push
ds
lahf
sbb
pop
ficomp
mov
cmp
sub
rcl
stos
dec
out
push
mov
push
scas
xchg
je
ss
ins
xor
inc
or
jo
setb
push
cmp
mov
fadd
pop
xchg
ror
pop
push
jmp
jbe
nop
call
jnp
inc
inc
in
jne
pop
retf
push
fist
adc
lock
mov
xor
imul
adc
fld
or
mov
xchg
mov
(bad)
and
call
inc
stos
les
imul
ja
cmp
out
loope
cdq
push
out
jbe
stc
jae
xor
imul
dec
mov
or
or
gs
daa
jne
xor
sub
dec
shl
es
push
pop
cmp
adc
jle
mov
cmp
xlat
lds
iret
push
mov
nop
mov
mov
imul
mov
cmps
cli
imul
inc
daa
loopne
fistp
mov
sbb
jp
cld
ret
adc
mov
cld
xor
cli
or
daa
push
aas
cmp
push
icebp
loop
mov
and
mov
sti
data16
cs
xor
mov
popa
ret
sahf
or
rol
and
(bad)
cmp
int3
sub
repnz
adc
iret
dec
(bad)
les
and
add
push
outs
cmp
mov
fwait
inc
xchg
es
adc
inc
ss
fnsave
outs
test
jle
mov
sbb
scas
sar
adc
mov
mov
xor
dec
adc
xor
rcl
xchg
add
lock
add
sbb
stos
pop
add
fucom
scas
popf
or
add
loop
push
cmc
pop
add
rol
retf
icebp
jnp
popf
lock
cmp
test
std
sbb
shl
pop
xchg
out
adc
xor
in
imul
(bad)
jg
jns
outs
mov
mov
cmps
or
arpl
and
nop
not
out
(bad)
mov
push
inc
xchg
cwde
test
add
cmp
call
mov
mov
mov
fdivr
scas
inc
inc
sar
inc
mov
fidiv
pushf
inc
cmp
or
es
sub
mov
cmp
popa
stc
jne
cmp
je
mov
cld
jno
clc
dec
mov
int3
pop
mov
or
or
(bad)
adc
popa
push
push
ret
inc
sti
daa
(bad)
cmp
inc
aam
jle
repnz
cwde
mov
stc
cwde
ins
jmp
lock
jmp
mov
push
gs
dec
call
in
fimul
mov
adc
cmp
fs
test
xor
daa
(bad)
loop
mov
pop
cmp
add
pop
mov
mov
pop
sbb
and
sbb
rcr
test
cmp
xchg
mov
dec
pusha
inc
in
(bad)
repz
mov
shr
movs
in
pusha
fs
and
mov
mov
inc
into
lods
pop
cld
lods
add
inc
mov
and
idiv
pop
adc
mov
push
ins
xchg
sub
push
mov
pop
das
(bad)
repz
and
add
mov
mov
xchg
pop
mov
scas
test
push
mov
aas
lea
sub
and
mov
test
dec
vunpckhpd
ret
mov
std
cmps
call
pop
xor
neg
into
sub
out
inc
dec
mov
test
(bad)
pop
pusha
inc
test
in
xchg
mov
mov
push
add
pop
mov
fild
mov
test
adc
sti
adc
jno
mov
aas
call
and
push
pop
rol
ret
push
jne
cmp
sbb
scas
fsubr
inc
pop
mov
and
ins
aas
fidiv
mov
sbb
push
dec
sbb
mov
adc
ins
mov
sub
jnp
jg
sbb
mov
sar
cmp
dec
(bad)
ss
sub
sub
loop
aad
adc
and
je
fisttp
pop
lock
and
int
fucomi
xchg
mov
rcl
sti
fbld
lahf
cmps
add
xchg
xor
pusha
jp
int3
and
add
mov
add
test
lock
cmp
mov
jge
data16
ficom
int
fisttp
test
loopne
daa
leave
dec
mov
loopne
mov
pop
ret
jo
out
sbb
adc
and
mov
scas
sbb
xchg
enter
iret
(bad)
enter
retf
stos
or
inc
push
mov
dec
stos
pushf
out
or
pop
mov
out
and
jg
test
(bad)
sbb
fimul
mov
mov
stos
das
enter
repz
xor
(bad)
cmps
xor
out
adc
xor
sti
fistp
test
mov
cmp
jne
inc
inc
ficomp
dec
addr16
pop
imul
idiv
jbe
js
and
xor
mov
xor
or
cmp
fist
mov
jle
mov
imul
mov
mov
jnp
cli
adc
mov
xor
call
fs
mov
mov
rcr
pop
dec
sbb
sub
cdq
fadd
outs
sbb
adc
lds
lahf
mov
push
and
xchg
shl
mov
and
ss
sbb
stos
pop
std
or
mov
outs
scas
rcl
out
or
test
inc
jecxz
iret
(bad)
adc
stc
mov
sahf
das
mov
push
push
dec
pusha
leave
out
mov
das
jmp
ret
aas
mov
dec
loop
test
or
mov
sub
lds
jb
mov
push
cdq
jg
popa
and
mov
test
(bad)
nop
add
les
jg
test
add
inc
outs
and
ja
or
add
(bad)
gs
test
(bad)
push
cmp
mov
icebp
movs
popf
pop
dec
aad
xor
mov
(bad)
or
in
outs
in
inc
dec
adc
xor
mul
mov
and
out
mov
shr
mov
jae
cmc
adc
je
movs
pop
fistp
clc
xor
dec
sub
or
movs
jecxz
icebp
push
add
cld
xlat
push
outs
mov
addr16
sti
xlat
rcl
fcomp
add
adc
cdq
nop
dec
mov
sub
xor
mov
inc
bound
call
sbb
pop
clc
fistp
mov
iret
enter
gs
das
mov
call
push
dec
mov
fistp
pop
test
push
cwde
loope
mov
int
jne
mov
iret
jb
mov
add
sub
aaa
mov
int
mov
jge
cmp
jg
shl
xor
cmps
scas
xor
mov
ins
xchg
ds
scas
aaa
push
popf
test
or
jno
dec
push
cmps
xchg
call
je
rcl
or
(bad)
and
cmp
dec
cmp
fimul
sti
mov
(bad)
and
mov
and
cmp
adc
js
(bad)
dec
inc
out
fnsave
dec
mov
(bad)
cwde
not
pop
int3
cmc
pop
stos
outs
inc
leave
das
sbb
outs
sar
sbb
call
sbb
and
and
movs
aaa
cmps
repnz
jns
stos
mov
(bad)
mov
ins
dec
sahf
les
arpl
mov
dec
lods
scas
(bad)
lods
sub
loop
(bad)
adc
mov
mov
sar
cli
push
icebp
sub
(bad)
fld
xor
sub
addr16
sti
cmc
and
stc
adc
mov
xor
pop
xchg
stc
scas
ss
sub
xor
add
