imul
add
add
mov
inc
icebp
fwait
sub
mov
mov
pop
cmps
inc
fldcw
aaa
test
pop
mov
jg
aad
fmul
(bad)
and
pop
inc
pop
aad
pop
shl
add
lahf
sbb
adc
popa
sub
dec
in
add
push
push
mov
or
les
xlat
dec
outs
mov
dec
loop
xor
sub
scas
xchg
or
pop
xchg
jnp
jnp
pop
mov
popa
fild
nop
pop
out
dec
inc
xor
push
clc
jle
jno
inc
xchg
cmp
pop
xchg
(bad)
jns
and
fsubr
mov
adc
mov
stos
jecxz
js
mov
dec
mov
xlat
clc
add
inc
xor
inc
fs
mov
(bad)
and
jne
pop
push
cmp
loop
add
mov
jle
mov
stc
call
cmp
mov
lods
cmc
dec
add
add
push
sub
bound
dec
adc
add
sbb
jno
enter
jne
cmp
not
ror
dec
xchg
mov
mov
push
fst
and
nop
mov
dec
and
cli
fxch
jle
je
pop
inc
mov
gs
sbb
push
test
push
hlt
push
push
rcr
pop
sub
adc
imul
cli
mov
imul
ins
cmp
not
(bad)
jmp
jne
dec
and
xor
xor
xor
push
outs
(bad)
faddp
imul
push
xchg
idiv
stos
popf
test
jne
lods
pop
fild
lahf
fdivr
lds
out
pop
xlat
into
xchg
fcomi
mov
ftst
push
imul
pop
jl
lods
sti
pop
mov
xor
lods
sbb
push
add
scas
mov
dec
or
call
jnp
push
loope
pop
in
push
xor
cld
(bad)
jns
mov
push
lea
and
leave
popa
daa
pop
jmp
fst
mov
stc
jmp
div
ins
repnz
ins
and
add
dec
xlat
out
fucomip
fdivr
rcl
enter
mov
push
cs
cmp
cmps
and
(bad)
shl
mov
pop
add
cmp
mov
in
scas
mov
and
mov
test
in
inc
jne
xor
movs
(bad)
cmp
mov
movs
cmc
inc
xchg
xor
stc
jno
pusha
push
add
cmc
mov
xchg
mul
daa
pop
mov
cmp
sahf
aas
clc
call
xor
repnz
cmp
add
ficom
adc
push
mov
mov
loope
cli
cwde
or
fs
mov
mov
pop
mov
dec
cli
xchg
push
ins
retf
jne
dec
push
cmps
stc
dec
mov
add
jnp
test
inc
jmp
lds
popa
in
iret
stos
bound
ffreep
xchg
out
mov
or
mov
and
mov
out
scas
sbb
adc
ret
push
lods
xor
adc
pop
mov
pusha
test
sub
xchg
cmp
pop
jmp
loopne
mov
pop
in
and
sbb
(bad)
add
sub
jns
add
push
out
cmp
dec
arpl
leave
or
mov
call
xlat
ds
lea
pop
loopne
add
adc
in
inc
loop
add
sbb
in
sub
and
js
clc
imul
out
cmps
cmp
(bad)
inc
shr
lods
xor
jge
adc
mov
scas
pop
xor
call
addr16
lahf
stc
(bad)
sbb
cdq
push
jo
test
pop
pop
add
hlt
(bad)
mov
cld
(bad)
push
xor
pop
pop
mov
fwait
test
xchg
int
adc
adc
xor
mov
mov
push
dec
leave
(bad)
aad
jle
ss
mov
cld
pop
(bad)
mov
push
cli
cmp
(bad)
int
mov
test
or
test
fs
pop
or
cmps
sbb
inc
sub
fwait
jae
sbb
ret
add
cmp
mov
cwde
add
dec
mov
sti
scas
sub
cmp
adc
movs
jmp
das
pop
lahf
mov
sbb
std
out
inc
mov
cmp
arpl
cmps
push
cmp
mov
sti
push
ss
dec
jmp
jbe
ret
cmp
and
inc
out
mov
jae
sbb
and
or
or
push
cmp
mov
rol
pop
add
mov
scas
pop
lods
xchg
mov
mov
fcmove
inc
sbb
push
mov
cmp
lods
mov
dec
(bad)
mov
inc
movs
arpl
mov
in
mov
pop
xor
imul
xor
lds
imul
mov
lds
pop
repz
int3
imul
adc
xor
gs
push
loopne
enter
xchg
jecxz
nop
sub
int3
xor
ret
sbb
sbb
aam
and
xor
nop
pop
addr16
dec
vpermi2q
mov
sbb
jmp
inc
stos
inc
rcr
push
push
push
aas
or
cs
mov
cmps
das
stc
lods
out
data16
fdivr
mov
jle
test
ja
iret
xor
cli
sbb
push
cdq
rol
dec
jns
fbstp
fs
movs
lahf
out
pop
out
repz
cmps
daa
sbb
adc
imul
(bad)
shl
stc
repnz
inc
mov
fcom
xor
lods
pop
repnz
loope
hlt
sub
pop
push
add
into
mov
push
call
cmc
lahf
jmp
stc
out
imul
xchg
dec
outs
fwait
inc
mov
dec
mov
test
or
mov
mov
inc
mov
adc
(bad)
imul
xchg
lods
movs
cmp
test
push
cdq
mov
push
dec
push
rcr
lods
in
sub
ror
daa
sbb
push
jne
adc
(bad)
aas
mov
ins
lods
jmp
adc
dec
popf
out
ret
sti
rcl
push
inc
(bad)
jl
cld
hlt
push
in
loopne
mov
xchg
test
or
mov
jecxz
jae
inc
mov
jb
sbb
inc
ins
cdq
jle
push
ss
ret
push
push
sbb
xchg
pop
rcl
ror
xchg
or
cmp
xchg
enter
mov
int3
cmp
stc
das
and
xchg
pop
jecxz
jbe
sub
idiv
inc
iret
mov
xor
xchg
xchg
cmc
sub
push
xor
ret
and
pop
and
popa
shr
and
pop
pop
dec
das
dec
jns
lods
les
test
imul
pusha
test
pop
loope
xor
jl
push
cwde
inc
ret
sbb
jle
fisub
(bad)
mov
pop
fcom
shl
mov
aam
adc
ficomp
into
retf
mov
pop
push
das
int
mov
jae
jo
or
sbb
out
inc
dec
sbb
mov
daa
lds
not
push
jg
cmp
xchg
in
adc
jb
jge
imul
psadbw
dec
dec
mov
call
mov
clc
inc
(bad)
cmps
or
inc
repz
mov
cmp
pop
sub
shr
jbe
test
inc
pop
daa
pop
mov
push
dec
in
js
outs
mov
xchg
push
xchg
sub
xor
fnstcw
cld
rol
push
push
or
mov
add
in
js
shr
and
push
outs
dec
or
ss
lahf
iret
js
mul
outs
xor
jbe
mov
(bad)
rcr
adc
(bad)
sbb
pop
fwait
pop
push
fsub
xchg
movs
xor
xchg
cmps
cli
cli
lods
fstp
lds
dec
in
lods
and
push
xchg
fstp
sub
jmp
add
mov
dec
inc
popa
jne
cmp
idiv
outs
gs
push
or
mov
repnz
cmp
imul
stc
call
lds
int3
data16
push
mov
cmps
jno
mov
sub
push
push
cli
iret
and
test
mov
mov
jmp
cmp
pop
hlt
xchg
cld
adc
or
loopne
out
mov
gs
bound
fcom
std
mov
and
fmul
xor
push
jle
or
xor
xchg
int
jb
sbb
pop
add
dec
ss
xchg
aam
sub
movs
pop
xor
mov
cmp
inc
push
cmp
out
jl
stos
clc
pmaxsw
in
push
leave
mov
fwait
cmp
leave
std
ja
push
std
xor
ins
(bad)
mov
xchg
adc
fiadd
dec
push
icebp
xor
xor
lds
lahf
repz
cmc
or
fild
cmc
xor
inc
dec
push
loop
jmp
jno
out
in
cmc
in
lock
fisttp
ds
jecxz
mov
ret
lea
in
dec
leave
and
pop
clc
lods
adc
dec
mov
xor
sub
cmp
loopne
out
push
sbb
outs
idiv
mov
movs
ins
je
dec
adc
(bad)
sti
in
arpl
and
aas
lds
xor
sbb
push
and
or
jae
mov
cwde
sbb
jle
arpl
dec
leave
ficomp
pop
leave
loopne
cdq
inc
into
mov
loope
and
jns
cmp
cdq
jmp
out
jnp
shl
jnp
hlt
hlt
ss
mov
lahf
xchg
jmp
jnp
mov
aaa
cmp
mov
jecxz
jge
add
in
scas
stos
jge
jbe
pop
jne
dec
or
inc
in
hlt
retf
adc
cwde
dec
ja
stc
xchg
sub
xchg
repnz
scas
add
call
inc
push
adc
aad
addr16
and
or
leave
mov
and
jnp
add
and
pop
inc
outs
ss
cli
push
das
mov
adc
popa
sahf
push
jg
sbb
adc
pop
or
mov
jns
fistp
mov
sbb
push
aad
add
test
push
pop
(bad)
jnp
gs
xor
movs
adc
mov
data16
dec
pop
xchg
jmp
sbb
fst
push
cs
sti
mov
cmp
ret
push
stos
sub
hlt
das
movs
push
push
inc
push
int
pop
push
(bad)
test
pushf
rol
sbb
dec
ja
outs
mov
hlt
nop
jb
jecxz
jl
pushf
fdiv
(bad)
clc
push
test
dec
sti
adc
je
mov
pop
arpl
aaa
and
retf
push
add
mov
sub
xchg
push
xchg
and
jmp
fisttp
mov
push
pop
xor
fsub
push
jnp
dec
jle
adc
jae
int3
jle
test
xchg
dec
in
mov
dec
seto
pop
vpmaxsw
cwde
mov
adc
cmp
sub
fnsave
or
fimul
(bad)
cld
push
dec
jmp
cmc
xchg
daa
sub
jmp
(bad)
fld
repz
movs
or
das
mov
enter
adc
shl
repnz
and
mov
pop
sbb
loope
jno
fsub
push
pop
fldcw
dec
jecxz
add
out
pusha
int
pop
mov
cmps
in
jae
mov
adc
mov
xchg
mov
int
mov
mov
push
(bad)
cmp
mov
mov
xchg
mov
sti
cmp
pop
mov
test
rol
inc
mov
adc
jbe
gs
imul
shl
adc
imul
(bad)
outs
not
cmp
out
in
loop
mov
mov
popf
dec
sbb
stos
mov
cmp
out
mov
icebp
xchg
or
retf
lods
sub
push
clc
push
mov
(bad)
in
das
sbb
mov
pop
popaw
mov
jns
outs
xor
sti
jb
jmp
cmp
das
add
xchg
inc
daa
xor
stos
dec
cmp
and
cwde
mov
sbb
std
fisubr
int
sbb
scas
pop
sbb
int
(bad)
push
mov
sub
cmp
sbb
pop
push
ja
(bad)
jae
inc
and
sar
adc
daa
add
or
adc
sub
sub
(bad)
out
jne
or
push
aas
add
mov
imul
mov
bound
int3
fisttp
push
add
cmp
cmc
das
ds
je
mov
inc
adc
xor
jbe
cmp
and
xor
push
mov
mov
iret
xchg
dec
ret
xor
je
sbb
mov
js
mov
mov
pop
add
mul
sti
adc
push
mov
dec
in
lds
and
pop
inc
dec
fdivr
in
imul
loop
dec
hlt
xlat
pop
mov
xor
xlat
xchg
inc
jmp
xchg
pop
(bad)
jns
scas
ja
mov
lods
loop
add
pop
mov
push
or
inc
push
inc
and
shl
jno
add
lds
cmps
enter
or
pop
pop
jbe
jnp
adc
dec
in
fcmove
js
jno
(bad)
icebp
out
enter
imul
dec
(bad)
or
div
xchg
call
mov
icebp
fwait
xor
push
mov
rol
popa
inc
push
pop
lods
xor
dec
cld
into
and
aam
cld
cmp
or
lods
enter
push
ss
pop
mov
les
mov
popf
push
mov
pop
test
stos
push
leave
adc
movs
cmp
int3
ror
xor
dec
jbe
aam
addr16
(bad)
pop
pop
cmc
inc
xchg
mov
push
mov
loopne
shl
cli
xchg
or
pop
cmp
sub
add
adc
shl
mov
nop
push
xlat
sar
push
push
push
and
rcr
dec
mov
dec
dec
and
shr
and
xor
popf
dec
mov
or
pop
cld
loope
jno
fld
sub
(bad)
ret
push
xor
imul
cmp
push
add
imul
mov
stos
ror
enter
jecxz
loopne
pop
fiadd
add
push
mov
cmc
pop
push
es
in
mov
inc
dec
int
push
pusha
xchg
cwde
lods
movs
pop
mov
ss
leave
aas
mov
sahf
inc
movs
xchg
jl
sahf
mov
neg
push
mov
adc
cmp
je
xchg
push
fdivr
sbb
lods
aas
mov
cmc
and
or
pop
jg
add
test
sbb
sbb
fimul
dec
jecxz
ret
pop
mov
push
movs
outs
pop
int3
es
mov
mov
inc
jae
mov
retf
mov
fstp
arpl
lods
retf
cld
jo
movs
cmc
mov
mov
jb
sub
sbb
xchg
mov
test
movs
fwait
in
mov
cld
loope
add
cmp
jl
ffreep
xchg
inc
pop
fidiv
mov
fiadd
sbb
pop
mov
hlt
(bad)
push
and
cs
pop
pop
xor
xor
xlat
xor
lds
push
hlt
add
mov
retf
cmp
cmps
out
mov
or
sbb
aas
mov
adc
cs
jl
mov
cld
ret
fwait
test
in
sbb
ret
popa
out
fiadd
pop
xor
xchg
push
or
mov
in
xor
add
sub
jmp
imul
fs
imul
pop
push
mov
inc
cli
ret
xchg
mov
cmp
xor
or
js
gs
call
dec
fdiv
push
mov
jg
inc
or
xor
retf
xor
add
popa
lahf
push
jle
adc
push
adc
inc
int3
gs
scas
sub
jle
mov
test
and
xor
ret
xchg
lea
adc
jmp
cld
dec
in
cmps
adc
mov
sbb
icebp
leave
lods
cli
out
retf
xchg
loopne
mov
push
aad
addr16
mov
cli
retf
int
je
arpl
jle
aas
inc
pop
jmp
push
cld
or
movd
inc
jg
push
outs
or
push
add
aam
into
jge
jb
xor
pop
pusha
aad
sub
ins
cmps
loope
mov
fist
xchg
sbb
retf
xor
push
add
adc
aam
push
lahf
adc
mov
jnp
div
movs
xor
loopne
dec
scas
mov
mov
lods
nop
cmp
sahf
stos
sahf
add
iret
xor
xchg
mov
cdq
aam
xchg
addr16
mov
lahf
in
cmp
xchg
das
or
add
mov
ins
cli
scas
data16
mov
cmp
(bad)
pop
mov
pop
sbb
or
jmp
jmp
je
sub
sbb
imul
adc
and
mov
call
cmps
push
ins
push
aaa
dec
fimul
je
jl
pop
pushf
lahf
jmp
xor
cdq
push
sub
pop
mov
mov
enter
out
xor
jecxz
ret
retf
dec
lods
jge
xchg
adc
repnz
das
in
cld
fs
shr
push
jg
xlat
xchg
adc
in
retfw
adc
dec
into
xlat
loop
and
loop
outs
cmps
nop
adc
inc
push
mov
in
push
xor
or
or
and
(bad)
mov
cld
sub
hlt
in
sub
xor
push
hlt
imul
pop
int
inc
sbb
pop
jmp
push
out
(bad)
add
jne
xchg
bound
push
ret
scas
cmps
aad
xchg
xchg
cs
(bad)
idiv
addr16
stos
clc
push
cmp
dec
sti
pop
add
bnd
int3
xor
loope
mov
mov
jnp
cmps
outs
loope
in
mov
push
push
retf
jmp
and
or
out
in
lds
or
mov
jp
jb
and
out
mov
lock
aam
hlt
stc
std
iret
or
sar
mov
xchg
inc
in
aaa
cdq
jne
mov
pop
test
mov
jne
outs
push
retf
enter
pop
enter
jnp
ret
aad
lods
sbb
or
(bad)
push
das
out
dec
sub
mov
js
mov
jnp
dec
je
cmp
fdiv
pushf
scas
push
(bad)
cmp
and
pushf
adc
adc
loopne
dec
dec
sti
mov
call
cmp
pop
inc
sub
jle
dec
lods
xor
ror
sub
mov
jp
push
mov
dec
sbb
pop
fisttp
mov
es
dec
jmp
mov
inc
adc
mov
mov
mov
arpl
cmps
push
aad
hlt
mov
inc
das
fs
push
jnp
test
nop
mov
xor
fadd
xchg
add
(bad)
int3
lea
ja
retf
jbe
mov
mov
(bad)
daa
xlat
push
inc
call
setb
pusha
in
add
mov
lea
cwde
movs
xor
cmps
loopne
imul
(bad)
hlt
ins
add
adc
mov
mov
hlt
ror
(bad)
loopne
or
aam
out
jmp
loope
mov
mov
jmp
add
push
test
adc
jae
sbb
adc
call
inc
or
mov
pop
xchg
push
lahf
xchg
mov
and
or
cmp
jb
std
inc
scas
add
sub
iret
add
lds
ret
or
add
lea
test
rcl
mov
push
shl
sub
arpl
xchg
std
pop
cld
(bad)
jns
fdiv
dec
pop
fdiv
lea
fnstsw
mov
pop
and
aaa
repz
jmp
pushf
nop
call
xchg
xor
je
test
xor
cmp
imul
ror
pushf
sub
mov
add
lock
and
pushf
pop
popa
xchg
hlt
ret
pop
ins
in
out
xchg
jb
in
(bad)
push
mov
out
icebp
xchg
xchg
imul
or
neg
adc
fwait
(bad)
sbb
lock
repnz
or
pop
jl
xor
jne
stos
jns
leave
adc
xchg
in
fdivr
imul
popf
in
cmp
dec
mov
lods
mov
addr16
cmc
inc
cmp
outs
in
in
sahf
xchg
fdiv
imul
imul
mov
mov
push
out
in
je
sbb
mov
shl
inc
jne
test
push
lahf
adc
out
inc
xor
nop
adc
rol
call
into
pushf
popa
jge
ret
mov
pop
mov
inc
test
cdq
hlt
outs
call
ins
lods
mov
pop
retf
cmp
outs
xchg
enter
lea
scas
repz
add
xor
test
repz
adc
sbb
lea
mov
mov
cmp
jl
std
cmp
push
mov
and
and
movs
fcom
xor
popf
shr
(bad)
mov
add
jae
rcr
sub
fldcw
mov
jecxz
lock
push
and
fadd
and
inc
or
mov
and
pop
or
pop
jnp
es
cdq
fnsave
add
into
or
scas
leave
push
push
mov
adc
push
dec
jge
in
or
cmp
xchg
fdivp
mov
pushf
jns
frstor
ret
ja
cmp
hlt
xchg
test
mov
sbb
jns
push
ret
repz
scas
sahf
mov
sbb
cmp
sbb
dec
je
jg
les
cmp
and
or
shr
jg
pop
(bad)
jp
adc
xchg
mov
leave
jle
mov
pop
in
mov
je
inc
xchg
pop
mov
adc
push
or
(bad)
jg
push
jns
mov
and
fwait
shl
jns
je
lods
mov
setbe
in
outs
data16
mov
pop
pop
xchg
imul
jbe
dec
xchg
into
nop
sbb
or
stos
jl
(bad)
push
dec
add
fadd
rol
call
lds
inc
xchg
jo
call
test
adc
inc
jmp
repnz
add
xchg
es
test
test
out
mov
xlat
mov
jge
ret
dec
lods
jmp
cmps
xchg
and
inc
or
push
inc
rcr
jg
popa
sbb
inc
add
out
inc
xchg
xchg
test
lods
stc
(bad)
out
retf
sub
sti
lahf
xchg
mov
mov
inc
test
rcl
outs
cmp
dec
fadd
jp
jns
push
add
push
retf
jno
div
cwde
nop
fwait
sub
hlt
gs
sar
mov
shl
or
test
xchg
enter
daa
mov
int3
fmul
sub
stos
sbb
jnp
es
jns
mov
dec
cmps
les
shl
leave
out
xor
adc
ror
dec
sbb
sub
aas
in
cmp
adc
inc
push
das
xchg
jns
sti
add
mov
xchg
stos
test
daa
int3
xor
pop
push
in
(bad)
and
mov
jle
ja
cmp
test
push
repnz
sar
pop
dec
add
pop
popf
loope
mov
mov
(bad)
loopne
mov
test
loope
enter
xor
imul
jnp
cld
(bad)
pop
mov
(bad)
cmc
ins
push
mov
mov
es
mov
jae
sbb
adc
pop
mov
mov
push
dec
shl
sbb
or
mov
jne
sbb
fstp
mov
jg
std
cs
pop
pop
xchg
(bad)
push
int3
and
repz
jl
fmul
push
jle
mov
jmp
and
stc
sbb
add
sbb
(bad)
mov
and
test
xchg
cmp
call
popa
push
imul
rol
mov
jecxz
pop
pop
ss
sbb
sub
or
ins
retf
aad
repnz
mov
pop
push
retf
jg
cs
loope
ud2
retf
fidivr
push
retf
jmp
movs
mov
mov
mov
imul
adc
add
jne
push
stc
jnp
data16
sbb
add
add
sti
rcr
sbb
sub
sbb
not
pushf
push
call
(bad)
fndisi(8087
xor
mov
cld
pop
(bad)
aaa
nop
iret
adc
ror
sub
popa
cwde
or
es
nop
or
popa
dec
jo
jecxz
inc
cmc
xchg
xchg
jmp
jo
pop
fnstcw
fst
cmps
call
enter
pushf
add
inc
movsx
xor
jl
cmps
or
xchg
cmp
lods
(bad)
and
dec
cmps
rol
push
lods
aas
sub
xor
out
std
xchg
jecxz
xchg
pushf
mov
adc
cmp
cli
cmp
or
adc
mov
(bad)
push
jb
mov
add
fwait
stc
sub
xchg
push
dec
push
loope
(bad)
aam
out
fidiv
aad
push
and
push
dec
out
jge
xchg
out
jmp
inc
mov
sub
jmp
mov
stc
das
and
xchg
mov
cmp
xor
shl
retf
dec
jbe
dec
out
ins
sub
mov
retf
and
pusha
inc
or
mov
call
cmp
inc
loope
fcmove
ja
sbb
cli
into
(bad)
inc
jl
xchg
mov
rcr
hlt
sub
not
dec
ret
or
xchg
loop
lahf
aam
call
mov
push
or
push
popf
out
loope
stos
cmp
xchg
(bad)
and
dec
call
shl
add
in
fwait
push
mov
mov
cmp
add
retf
xlat
call
jmp
and
lds
mov
sbb
pop
and
add
pop
jg
xchg
jae
sbb
scas
pop
ficomp
xor
xchg
iret
xor
retf
xchg
mov
test
xor
sbb
scas
clc
jge
gs
xor
add
cmp
lds
in
cmp
inc
add
xor
lds
js
out
popf
in
pshufw
add
out
mov
cli
mov
push
stos
clc
pop
dec
dec
jmp
xchg
ret
mov
gs
in
add
popa
outs
cs
lods
push
xchg
push
stos
push
xchg
aaa
push
dec
xchg
push
sub
sub
add
repnz
mov
push
inc
sub
sti
rcr
cs
or
cmps
ror
xchg
pop
mov
jno
sar
or
inc
faddp
sahf
hlt
pop
imul
xlat
pop
scas
xchg
add
pop
sbb
xor
and
push
sub
or
mov
sbb
pop
sub
outs
mov
jecxz
fidivr
aam
fs
pop
lods
inc
add
and
dec
jne
xor
push
icebp
cld
and
jle
sub
mov
(bad)
gs
mov
mov
retf
gs
fadd
movs
fwait
push
cmp
inc
xor
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
cdq
xor
xor
imul
std
add
jnp
and
ins
adc
leave
clc
push
and
rol
inc
dec
enter
mov
mov
cmp
ret
mov
sbb
xchg
xor
imul
daa
jo
(bad)
mov
sbb
sbb
dec
repz
or
pop
imul
(bad)
lock
mov
out
sbb
adc
xor
add
inc
test
sbb
test
je
mov
ficomp
inc
add
and
dec
adc
pop
bound
test
inc
jmp
add
push
ins
popa
cmp
fwait
jecxz
pop
cmp
jns
mov
aas
adc
addr16
pusha
inc
add
sbb
mov
loope
iret
push
lds
in
cli
outs
pop
sti
dec
xchg
outs
fnstenv
stos
cmp
and
pop
imul
daa
dec
popa
jbe
mov
sub
leave
test
aad
ja
pusha
cmp
repz
gs
aas
ret
mov
enter
(bad)
in
or
imul
mov
adc
jle
sahf
outs
add
stc
(bad)
jae
retf
icebp
jne
cdq
mov
fadd
cmp
fisubr
xor
sbb
sbb
mov
sbb
fldpi
and
cmp
call
call
outs
push
or
lea
enter
push
xor
test
scas
jns
test
test
dec
sti
repz
pop
(bad)
mov
pop
cs
and
push
mov
mov
dec
pop
pop
xor
inc
aas
push
pop
mov
(bad)
cmp
ja
mov
inc
retf
(bad)
mov
rcr
retf
inc
add
mov
cmp
xchg
xchg
push
pop
jp
retf
sub
add
leave
lea
jne
aaa
movs
jl
outs
adc
push
fisub
stc
fld
mov
inc
sbb
mov
adc
call
std
cwde
cmp
mov
in
daa
dec
pop
in
sbb
jnp
inc
add
jmp
inc
aas
out
punpcklwd
int3
fmul
push
int
pop
pop
jle
inc
sub
rcl
cmc
xchg
adc
in
mov
sbb
out
push
inc
lds
test
pop
je
sbb
push
and
mov
arpl
xchg
je
or
push
jmp
mov
imul
dec
cli
loop
sub
add
push
or
sbb
cmps
xchg
es
mov
movs
xchg
add
pop
shr
(bad)
clc
ss
sub
push
mov
enter
xor
cmps
pop
xchg
mov
clc
push
faddp
ret
imul
fs
stos
arpl
cmps
(bad)
jno
sub
dec
js
xchg
pushf
(bad)
and
mov
loopne
push
cmps
mov
sbb
sub
mov
test
push
imul
jmp
mov
add
inc
dec
mov
mov
dec
xchg
xchg
push
inc
jle
retf
sti
dec
imul
mov
sar
mov
movs
xor
mov
fidivr
jno
push
scas
fild
push
sbb
ret
imul
loope
and
adc
mov
pop
ror
adc
rcr
movs
in
int
fdivrp
xor
outs
mov
inc
test
stc
jge
push
cdq
xchg
fild
xchg
jnp
fcomp
js
push
add
rcr
mov
mov
js
add
mov
mov
ficom
xor
(bad)
xchg
cmp
or
dec
ds
cmp
push
mov
jne
sbb
in
inc
xchg
test
(bad)
test
jno
dec
adc
inc
inc
rcl
fbstp
jmp
dec
xor
mov
jge
cmp
hlt
push
in
out
mov
pop
mov
stos
push
rcr
sahf
lods
ds
mov
arpl
sub
push
out
test
(bad)
cld
xchg
test
push
lock
stos
fcom
clc
inc
lea
pop
jg
(bad)
fmul
ins
mov
stc
cs
push
popa
pusha
cmp
push
test
dec
xchg
jg
jge
cmp
sbb
cwde
adc
mov
cwde
(bad)
sar
adc
sub
or
dec
(bad)
icebp
sub
push
es
pop
xchg
test
adc
sub
xchg
(bad)
aaa
mov
mov
sbb
enter
push
test
xchg
fdiv
mov
shr
outs
mov
push
sub
xchg
jmp
xlat
jo
mov
dec
in
into
sti
in
popf
jne
call
add
push
mov
sbb
por
imul
das
mov
pop
sbb
dec
mov
xor
add
jb
pop
or
pop
lahf
es
fsubr
fisubr
add
sub
mov
jl
add
cmc
(bad)
mov
jns
sub
pop
inc
and
add
jae
sbb
push
push
adc
sub
mov
js
cdq
jle
add
and
push
inc
mov
and
mov
and
adc
xor
test
mov
lahf
in
and
sbb
add
jns
cmps
test
test
inc
je
cmp
push
cwde
call
sub
enter
div
enter
cwde
inc
cmp
iret
outs
test
dec
or
cmps
add
lock
cmps
es
leave
rol
in
and
loop
std
mov
inc
je
jl
scas
shl
inc
jle
cdq
jo
pop
xchg
popf
mov
mov
push
retf
push
xor
cmp
es
cmp
pop
xlat
hlt
scas
sub
push
(bad)
icebp
pusha
daa
stos
cli
popa
inc
xchg
sub
pop
fwait
dec
retf
dec
dec
push
call
pop
cli
ret
data16
push
sbb
or
add
ficom
or
cmc
push
fs
imul
xchg
mov
mov
inc
sbb
mov
lahf
dec
add
in
sti
push
xchg
out
dec
in
mov
and
sbb
sbb
xor
fdivr
in
push
retf
sbb
xor
or
stos
lods
push
adc
and
nop
adc
xor
cwde
xchg
cmp
mov
push
mov
mov
mov
dec
out
pop
mov
xor
push
add
push
inc
pop
mov
fisub
cmp
rol
rcr
mov
in
pop
xor
and
lock
imul
jl
cmps
dec
add
sbb
sbb
add
cld
cmp
inc
ret
jge
jmp
outs
into
and
nop
jge
push
aam
fwait
xchg
adc
(bad)
pop
aam
and
lock
pop
pop
frstor
loop
mov
pop
ret
cmp
(bad)
aad
xchg
mov
repz
and
cmp
add
pop
(bad)
repz
mov
mov
mov
cmps
or
mov
push
ja
dec
and
sub
xchg
pop
pop
aaa
(bad)
shl
dec
cmc
mov
jmp
push
sbb
or
bound
lock
sub
test
js
add
push
lods
adc
xchg
xchg
imul
fisttp
sub
lods
cmp
cmc
aas
inc
adc
push
sub
test
rol
repnz
push
sub
aaa
mov
pop
retf
add
(bad)
js
outs
lds
stos
mov
mov
outs
aam
in
mov
ret
out
xor
push
sti
ret
or
popf
xchg
call
xchg
pop
in
push
push
outs
xchg
or
adc
push
jg
ins
sbb
in
nop
mov
or
les
pminub
(bad)
jle
pop
pop
std
stos
xchg
cmp
push
out
mov
dec
movs
neg
test
fild
dec
ja
(bad)
movs
lea
jns
add
inc
loopne
cs
xor
mov
xor
in
dec
pop
and
call
jb
jmp
pop
mov
in
mov
jmp
adc
xor
or
loopne
and
ret
test
push
gs
pop
cmp
jmp
xor
sub
xlat
retf
daa
inc
cmp
and
aad
leave
shl
int3
and
enter
loop
icebp
enter
mov
mov
retf
push
repz
shl
mov
sahf
mov
mov
jmp
sbb
push
in
or
push
je
mov
sub
in
xchg
mov
mov
or
mov
loope
test
mov
hlt
fdiv
cli
dec
cmp
js
and
pop
sti
push
jo
(bad)
in
aas
dec
cmp
fbld
push
mov
icebp
out
and
enter
inc
repz
dec
sbb
sbb
and
mov
xor
xchg
inc
and
(bad)
fidivr
(bad)
out
ror
adc
or
neg
xchg
push
xchg
dec
fadd
cmp
push
jbe
in
in
sub
and
add
leave
cmp
stos
cmp
retf
loopne
dec
sbb
dec
add
sub
mov
jno
pop
stos
loop
push
movs
dec
sahf
push
sub
cmps
test
xlat
arpl
loope
data16
shl
stos
or
xchg
dec
or
push
pop
sahf
xchg
inc
inc
ja
imul
outs
in
mov
icebp
add
xor
sub
(bad)
jmp
das
and
mov
adc
hlt
icebp
cmp
ret
sub
and
mov
push
add
xor
mov
inc
xlat
cmc
jnp
fwait
or
pop
gs
pop
mov
jns
adc
not
into
jle
test
or
cs
int
test
(bad)
xchg
xchg
retf
aad
pop
cmp
or
xchg
sahf
and
xor
mov
ds
jne
mov
repz
neg
(bad)
sbb
push
outs
push
xor
lods
test
inc
bsr
leave
jmp
mov
rcl
cmp
push
jno
and
sub
cmovl
pop
call
data16
pusha
xchg
jnp
ds
pop
adc
repz
jne
mov
(bad)
sub
fst
cmp
mov
cli
lea
call
add
add
jl
loopne
pop
xor
mov
mov
imul
cmp
jge
imul
xchg
(bad)
shr
push
fdiv
mov
ss
mov
inc
out
push
push
(bad)
mov
ss
xchg
shr
mov
pop
lea
dec
xor
(bad)
dec
lods
dec
push
int3
test
add
jne
stos
jbe
sbb
mov
ins
mov
test
std
push
and
inc
cwde
lods
movs
xor
loopne
jle
xor
test
pop
add
jmp
pop
cmp
shl
bound
push
popa
cmps
scas
in
fild
fnstsw
(bad)
jmp
or
icebp
push
adc
ror
stos
sub
xchg
cmp
push
mov
sbb
daa
cwde
xchg
out
pop
push
movs
mov
xchg
sbb
mov
push
cmps
or
pop
jp
push
icebp
mov
mov
cli
mov
mov
and
(bad)
xlat
aam
sbb
xchg
sbb
mov
push
aas
or
fidiv
inc
popf
lahf
mov
retf
stos
repz
add
xchg
outs
push
cmp
popa
div
jae
or
lock
xor
data16
mov
xor
out
ds
cld
mov
or
call
shr
adc
push
xchg
in
push
outs
xor
push
or
(bad)
stc
jmp
adc
jecxz
div
cwde
jno
fcomip
pop
xor
jne
lahf
aaa
sub
retf
ins
add
and
lods
pop
jg
das
jne
sbb
inc
xchg
and
cli
or
jg
pop
cwde
ja
sti
pop
jmp
mov
adc
xchg
push
pop
lea
arpl
or
add
aas
fnstcw
push
or
xor
iret
lds
mov
and
pushf
mov
xchg
in
inc
cmp
daa
dec
or
clc
hlt
hlt
adc
cmp
pop
dec
push
inc
scas
sub
mov
jo
cs
jp
idiv
and
jne
pop
popf
lods
jg
aam
jb
int3
fwait
test
add
mov
jo
pop
mov
(bad)
cmp
xlat
div
push
mov
fs
dec
out
psrad
int3
fmul
repz
(bad)
dec
mov
sbb
pop
xchg
and
push
lods
pushf
cmps
and
mov
push
repz
cmp
mov
movs
mov
addr16
fsub
inc
(bad)
std
call
aam
in
inc
sub
das
sbb
sbb
fcomp
aad
fwait
xor
fst
or
dec
or
adc
sub
daa
dec
pop
dec
sub
imul
sbb
cmps
xor
call
test
retf
mov
sbb
jbe
(bad)
sub
or
xor
neg
repz
pop
daa
pop
retf
inc
cmp
(bad)
addr16
cmp
inc
cmp
test
jo
stos
mov
sbb
sub
dec
xchg
jae
mov
jmp
je
and
mov
mov
imul
(bad)
mov
loopne
mov
add
inc
mov
fnsave
mov
jmp
iret
stc
jecxz
push
outs
lea
pop
xor
or
xor
in
bound
mov
mov
in
or
and
xchg
lods
imul
push
cld
test
mov
js
or
mov
inc
nop
stos
int3
xchg
xchg
pusha
mov
hlt
jbe
into
fisubr
jne
lahf
xchg
inc
xchg
gs
adc
gs
ds
cs
dec
push
mov
neg
retf
fimul
ret
in
or
jo
add
cmps
xchg
xor
sub
or
or
sbb
push
lods
xchg
(bad)
dec
jle
jb
frstor
xor
xor
mov
jecxz
(bad)
pop
hlt
mov
sbb
retf
clc
xor
cmp
xchg
stos
das
or
mov
sbb
out
clc
mov
out
ins
(bad)
mov
mov
jmp
jge
scas
dec
stos
add
dec
mov
dec
ret
dec
js
sbb
jecxz
sbb
and
addr16
jmp
repnz
cmp
inc
sbb
push
or
mov
pop
aas
test
loop
(bad)
mov
pop
pop
lock
fmul
xlat
xor
loopne
mov
mov
ror
movs
jcxz
mov
dec
ret
mov
cmp
dec
inc
mul
test
jbe
xor
es
sub
je
push
push
inc
repnz
aad
inc
xchg
sub
mov
lods
pop
cld
push
ror
call
(bad)
add
aam
rcl
fisttp
dec
ret
imul
fs
imul
mov
pusha
cmp
add
int
inc
mov
mov
sbb
(bad)
ret
and
sbb
push
dec
sbb
add
xchg
xchg
push
push
gs
ins
fnstenv
loopne
addr16
jb
clc
or
sub
push
push
mov
dec
shl
pop
jo
push
sub
lock
mov
retf
or
shl
sub
(bad)
mov
popa
xchg
or
sub
pop
pop
icebp
leave
stos
lea
clc
popf
jp
leave
dec
ja
mov
outs
dec
mov
test
and
and
xchg
jecxz
add
leave
arpl
je
fnstsw
clc
sti
shr
arpl
fild
inc
sbb
daa
sbb
aad
mov
or
fisubr
jge
add
adc
loope
xor
push
push
fistp
idiv
pop
cmc
loope
loopne
xchg
(bad)
leave
out
jl
leave
es
and
push
(bad)
dec
sti
adc
pop
repnz
add
cmp
xchg
and
or
and
sub
out
mov
scas
sti
ret
sub
xchg
sbb
scas
fcom
dec
test
mul
mov
mov
push
xchg
stc
add
sub
sbb
scas
and
test
pop
jmp
adc
cld
clc
add
mov
xor
ins
xchg
ret
(bad)
jo
cld
lods
xchg
pop
xchg
dec
dec
leave
xor
leave
div
popf
adc
push
jecxz
xor
hlt
ja
call
jo
sub
xor
ret
and
stos
stc
repz
scas
sbb
aam
push
scas
sub
xchg
lock
add
sbb
lahf
cmps
leave
jg
stos
fdivr
pop
pop
cmc
fldcw
stos
inc
push
sub
mov
std
or
inc
psraw
in
pop
or
mov
je
or
arpl
push
fimul
lods
xchg
das
or
inc
jno
hlt
rol
popa
sbb
push
in
loopne
aas
cmp
sahf
out
jmp
inc
sub
(bad)
dec
cmp
rcr
cmp
ja
ret
xchg
arpl
jmp
scas
call
sbb
lods
sbb
frstor
(bad)
jecxz
jae
dec
pop
and
lods
jo
cmp
mov
sbb
dec
push
inc
mov
leave
ins
mov
and
test
sub
push
pop
out
cdq
push
dec
cmp
stos
jne
lea
xchg
pop
loop
jnp
and
into
adc
imul
arpl
pop
jmp
jl
cmp
mov
je
mov
int
div
test
or
push
(bad)
cmc
mov
je
mov
fucomp
xor
outs
int
pop
aam
and
lods
(bad)
cli
cmp
leave
movs
push
and
cmp
sub
out
mov
sub
out
mov
retf
gs
ret
in
(bad)
mov
and
out
sbb
out
ja
mov
xchg
cmps
and
fist
xchg
mov
jle
dec
aad
mov
sar
shl
jnp
cmp
sbb
sbb
sbb
in
fistp
sbb
hlt
jp
retf
cdq
jl
mov
or
ins
icebp
jae
(bad)
cmp
lods
inc
aas
pop
xor
pop
and
or
mov
pop
push
int
dec
jnp
jns
loopne
in
jbe
test
lods
mov
das
aas
inc
mov
or
push
retf
pop
dec
movs
iret
xor
push
or
frstor
iret
es
sti
ins
adc
jle
loop
leave
stos
aad
mov
mov
aam
cwde
mov
pop
lea
mov
aam
hlt
adc
pushf
adc
xor
or
add
sub
fstp
xchg
mov
add
mov
jbe
dec
out
fcomip
xor
retf
fisub
jne
cmp
mov
lahf
dec
mov
cwde
pop
dec
icebp
loope
mov
mul
inc
push
adc
scas
imul
push
pop
scas
adc
sbb
inc
and
inc
push
mov
mov
adc
repz
fs
mov
or
xor
xchg
lea
push
int3
(bad)
mov
bnd
outs
movs
les
cwde
iret
mov
frstor
je
arpl
arpl
push
dec
out
call
hlt
fnstsw
xchg
inc
in
push
mov
lock
pushf
movs
mov
leave
outs
sbb
lahf
push
ret
inc
std
adc
cwde
sbb
push
xchg
xor
in
pop
call
retf
retf
xor
(bad)
cli
jp
jae
dec
stc
pop
or
sbb
mov
(bad)
hlt
mov
dec
cdq
rcl
stc
mov
lods
lea
sti
out
in
and
dec
push
(bad)
mov
mov
push
pop
dec
lahf
idiv
jl
and
dec
fldcw
(bad)
loopne
push
adc
dec
shl
ret
xchg
inc
push
(bad)
aad
inc
mov
push
mov
mov
cmp
mov
add
and
dec
cdq
fwait
aam
shr
mov
inc
sub
xchg
sti
cdq
or
inc
(bad)
aam
loop
in
aad
sbb
outs
sub
mov
jne
dec
test
cmp
int
rol
js
adc
xchg
sti
(bad)
xor
dec
jl
repz
mov
(bad)
js
pushaw
cmps
dec
add
vmovsldup
nop
pop
add
aas
(bad)
fsubr
add
and
out
add
pop
add
pop
sub
outs
add
aam
add
dec
pushf
rcr
push
push
ror
add
jns
push
xor
test
or
aaa
les
dec
add
ret
sub
imul
xor
jg
push
into
lahf
stos
repz
lock
fucomp
jns
add
retf
clc
je
sbb
in
pushf
inc
mov
in
mov
xchg
repnz
dec
gs
adc
mov
mov
mov
cdq
push
and
sbb
fidiv
aad
push
sub
fnsave
sub
push
jle
pop
rcl
popa
retf
inc
cmp
outs
ins
inc
popa
imul
in
and
or
jb
std
leave
mov
popf
dec
rcr
mov
cmp
fisubr
movs
in
mov
and
(bad)
in
fistp
hlt
test
test
int3
add
loope
ret
cmp
jae
test
push
enter
fsubp
das
push
fs
mov
xlat
push
ja
icebp
fcmovnb
mov
jns
shr
ins
mov
push
pop
dec
cmp
ret
sbb
lar
mov
jbe
retf
adc
ja
(bad)
test
into
jmp
jg
test
mov
and
inc
rcr
add
inc
dec
or
dec
xor
bnd
iret
es
add
cmp
push
(bad)
cmp
retf
cmps
jle
call
pushf
stos
out
aaa
lods
push
jne
push
cmp
jns
mov
mov
and
push
out
pop
jl
pop
fldz
push
aaa
jbe
sub
dec
cmp
gs
movs
push
push
test
jns
inc
fwait
mov
enter
out
shl
das
call
dec
dec
xchg
adc
jbe
iret
xchg
fsub
in
in
sbb
arpl
sub
adc
jp
mov
(bad)
add
cdq
xchg
jecxz
or
jmp
setae
out
mov
add
xor
iret
retf
and
xor
add
jecxz
add
mov
imul
fs
int3
pop
cli
inc
inc
or
fisttp
test
scas
int
pop
mov
cmp
fild
and
xchg
js
jmp
xchg
mov
ins
xchg
std
pusha
leave
push
xchg
push
(bad)
ins
cmp
jecxz
repnz
loope
pop
(bad)
loope
jno
xchg
mov
pusha
jmp
mov
mul
push
mov
and
sub
hlt
dec
pop
and
jl
mov
addr16
dec
xchg
jecxz
xor
xchg
cmp
ds
out
out
fistp
mov
dec
mov
jb
les
mov
push
popf
scas
arpl
call
mov
outs
out
mov
and
(bad)
jle
jae
nop
fadd
xchg
leave
lds
(bad)
mov
sub
jb
test
in
pop
(bad)
jb
pushf
push
in
mov
cmps
fist
dec
add
shl
sti
dec
inc
xchg
inc
push
inc
retf
xchg
sbb
inc
jg
lds
imul
lods
lods
out
loope
lods
retf
xor
sbb
loop
ret
pusha
adc
inc
dec
js
stc
dec
adc
pop
cld
lock
lods
push
stc
js
das
fs
mov
int3
add
xchg
mov
mov
(bad)
loope
adc
jp
sbb
cmc
xlat
dec
icebp
sub
mov
cwde
mov
les
rol
push
mov
icebp
data16
mov
inc
ss
jbe
sub
call
inc
cs
pop
mov
movs
ins
jle
and
xchg
inc
push
and
mov
imul
test
jge
fist
ret
mov
mov
repz
jg
push
clc
lock
mov
xlat
int3
(bad)
jmp
cmp
xor
push
mov
jns
movs
jmp
iret
and
xor
push
push
mov
jle
dec
lock
stos
es
in
adc
imul
push
mov
icebp
stc
sti
pushf
push
pop
fnstcw
and
lahf
lea
int
out
mov
pop
sbb
test
pop
les
scas
fwait
push
rol
jge
sub
or
imul
mov
movs
jne
push
popf
ret
sbb
mov
push
clc
xchg
retf
mov
jb
adc
dec
push
icebp
sbb
stos
rcl
jae
add
inc
arpl
clc
jae
sub
push
jb
dec
dec
call
clc
sub
push
push
mov
add
mov
cmps
add
rcr
or
dec
lea
pop
jb
jne
fs
xor
mov
hlt
retf
stos
sbb
lea
xchg
out
pop
imul
loope
aas
sbb
ja
add
xchg
jg
push
xchg
ins
std
cmp
jns
ins
xor
inc
loop
out
push
out
mov
mov
xchg
cmp
push
dec
out
add
mov
mov
pop
jne
inc
lods
sub
sbb
mov
add
sub
cmp
rcl
xor
mov
jno
xor
mov
pop
ds
xchg
div
or
es
leave
push
lahf
xor
and
fidivr
add
mov
add
adc
shr
cmp
sub
stos
aaa
sbb
imul
aas
fcmovnbe
ret
fild
or
int3
and
mov
mov
xchg
jnp
push
fdiv
inc
arpl
inc
jae
inc
or
ins
mov
jge
jmp
mov
(bad)
std
or
jbe
mul
in
leave
aas
fcomp
add
ror
push
mov
jno
clc
lock
(bad)
mov
xor
sub
push
movs
and
aam
mov
ins
cmps
pop
mov
outs
adc
and
test
jns
push
imul
movs
push
cmps
fcom
mov
inc
or
xchg
cmp
mov
cli
or
pop
pop
jecxz
mov
aad
cmp
push
ret
lods
add
retf
repnz
or
and
pop
inc
and
jle
stos
shl
lss
add
mov
loop
test
repz
imul
mov
dec
mov
inc
push
mov
fwait
and
loop
mov
sub
fld
cmp
xchg
in
sbb
in
pop
mov
xchg
xchg
mov
nop
mov
push
pop
cmc
and
mov
arpl
and
add
fadd
(bad)
pop
std
xor
jb
daa
pop
imul
or
mov
in
dec
js
add
or
or
(bad)
sub
ins
cwde
jne
das
cwde
fidivr
out
push
jg
mov
push
mov
mov
xor
jmp
cwde
adc
or
pop
popa
cdq
cld
jns
aas
imul
cmp
xchg
sub
cmc
mov
lods
cwde
xchg
inc
aaa
jg
lahf
hlt
lea
pusha
pop
xchg
xor
xor
test
mov
lea
imul
retf
sbb
xor
clc
xor
retf
ret
hlt
gs
or
push
sub
mov
jp
and
(bad)
or
push
ret
cmp
or
sub
fwait
adc
jmp
out
push
xchg
outs
cmp
cld
(bad)
dec
out
mov
ins
lods
les
daa
enter
mov
loopne
mov
cmp
sahf
leave
icebp
xrelease
pop
pop
dec
cld
pop
ja
dec
fnstsw
cld
jmp
xor
jp
push
std
jp
sar
push
pusha
jle
shr
dec
inc
jne
dec
mov
in
ficom
mov
shl
mov
mov
jnp
jae
pop
push
(bad)
scas
add
mov
sbb
add
popf
cs
cmp
mov
rep
ins
or
adc
retf
pop
add
mov
mov
adc
(bad)
imul
dec
adc
adc
adc
movs
movs
cli
lods
cld
out
cwde
push
out
hlt
outs
div
xlat
cmp
add
sbb
push
shl
in
jl
jp
push
inc
add
repz
jbe
ins
mov
iret
std
sub
add
sbb
fisub
dec
lods
mov
icebp
enter
int3
shl
jnp
loop
retf
aad
jne
cmp
repnz
mov
es
addr16
std
call
dec
pop
in
rcl
and
retf
inc
mov
mov
push
imul
les
xchg
dec
add
retf
cmp
sbb
mov
mov
dec
pushf
mov
mov
call
cmp
lods
inc
mov
mov
in
das
jno
mov
jle
sub
fild
mov
jl
mov
pop
mov
jbe
ins
mov
jmp
test
pop
mov
(bad)
pop
dec
adc
int
cmps
jno
call
pop
retf
bound
pop
mov
repnz
xchg
popf
add
mov
movs
js
and
aam
sbb
add
push
jg
mov
addr16
mov
arpl
push
lods
xor
cs
scas
or
nop
inc
and
stos
mov
mov
adc
inc
sub
lds
stos
lahf
adc
loope
enter
ins
sti
cmp
jmp
push
inc
out
sahf
into
and
mov
mov
pop
push
mov
jno
xchg
daa
jl
(bad)
(bad)
jecxz
inc
xchg
es
sub
jnp
sbb
imul
aas
mul
lock
inc
jp
push
sbb
mov
sub
jmp
js
jns
sub
out
sbb
arpl
push
gs
and
sbb
inc
cmp
pop
addr16
sar
(bad)
call
pop
aad
xchg
jmp
mov
lahf
fisttp
(bad)
fldcw
jae
push
outs
lds
js
pop
dec
inc
popf
inc
or
pcmpgtw
jae
outs
jecxz
sti
jg
ja
movs
cmp
in
inc
xlat
jp
cmp
cmp
pop
mov
mov
sbb
test
and
or
sbb
xchg
repz
es
cmp
es
ins
and
cmp
cmc
cmp
hlt
hlt
xor
lods
movs
mov
pop
daa
cmp
jns
or
sar
push
std
mov
out
bound
pop
fnstenv
push
div
pop
hlt
scas
xchg
scas
clc
lods
xchg
xor
or
push
sahf
inc
movs
shr
xor
mov
ins
mov
sub
push
push
(bad)
data16
idiv
cli
test
jle
xchg
xchg
ss
into
mov
sbb
cmp
inc
mov
xor
int
push
pop
retf
mov
jns
int
fisttp
mov
dec
and
jne
add
xor
inc
in
dec
xchg
pop
out
cmp
rcl
inc
dec
stos
xor
hlt
in
ins
loope
stc
cmp
push
sub
dec
out
(bad)
repnz
outs
dec
ret
mov
fwait
and
mov
bnd
jl
ja
add
mov
xchg
call
pusha
add
xchg
nop
cmp
xchg
xor
retf
pop
adc
test
xor
mov
push
movs
fdiv
nop
mov
cmp
out
mov
hlt
dec
imul
push
mov
mov
and
push
retf
or
adc
push
movs
and
pop
mov
(bad)
xor
cmps
cmp
lahf
shl
add
(bad)
and
or
call
or
jo
rcl
sub
and
icebp
mov
into
xor
jmp
scas
(bad)
dec
cmp
xchg
icebp
test
lock
push
mov
aas
and
inc
jp
jae
neg
or
jg
xchg
ins
das
and
adc
ins
gs
push
or
dec
adc
mov
movs
addr16
dec
xchg
mov
cmp
das
and
dec
jle
mov
cmps
inc
lods
imul
ficomp
adc
mov
sar
ror
pusha
xchg
shr
ret
jge
(bad)
aam
mov
imul
jb
adc
mov
sub
dec
stos
and
xor
int
out
adc
push
dec
and
repz
jge
cmp
adc
push
xchg
xlat
fs
(bad)
jae
inc
scas
int3
mov
js
add
sbb
test
adc
int
in
push
add
cmp
push
add
mov
xchg
arpl
nop
jle
mov
mov
xchg
(bad)
scas
sub
push
pop
adc
cmc
jl
popa
add
enter
mov
jns
shl
mov
sti
and
sbb
jmp
icebp
pop
fisubr
sti
jge
(bad)
jmp
or
or
add
icebp
dec
pushf
mov
in
test
inc
cwde
dec
inc
popa
push
mov
aad
xor
sub
add
repnz
cmp
popa
nop
inc
or
sub
push
int3
jle
push
push
push
dec
(bad)
pop
std
rcl
push
cld
jp
push
push
ret
or
(bad)
jl
pop
fld
adc
das
dec
ins
lods
push
jb
js
sbb
fnstcw
and
adc
pop
daa
pop
loopne
cmps
inc
xlat
sub
mov
mov
xchg
pop
lahf
scas
arpl
fs
das
xchg
mov
mov
sub
jbe
ret
xor
std
add
je
or
and
es
xor
xor
jle
cld
popa
call
xchg
sar
pop
mov
fbstp
xchg
lea
stos
xor
imul
jne
cmp
push
test
sub
dec
xor
mov
into
inc
aad
push
out
out
dec
push
rcr
jmp
pop
clc
sub
push
mov
rcl
jmp
loope
cmp
daa
jg
mov
stos
(bad)
mov
hlt
inc
dec
jbe
sbb
add
je
bound
mov
and
vfmsubsd
test
add
fisttp
pushf
outs
xchg
jb
pop
rcl
or
sub
fldenv
ret
push
sub
pop
mov
ins
xchg
int
loop
scas
mov
mov
repz
call
repz
cwde
inc
jg
rcl
add
cmp
sub
mov
(bad)
and
add
xchg
scas
add
cmc
fimul
adc
jae
int
cwde
sahf
or
add
data16
into
stos
add
ss
scas
out
and
lahf
mov
adc
sub
nop
sub
popf
mov
popa
gs
mov
(bad)
in
and
dec
fcom
in
sbb
ins
cmp
leave
pop
int
imul
vmwrite
cmp
mov
std
dec
mov
mov
and
retf
xchg
cmp
fdivr
xchg
es
test
data16
stos
mov
outs
rol
xchg
jb
adc
daa
cdq
clc
loope
outs
mov
pop
pop
dec
inc
ret
push
and
push
pop
inc
or
and
fisttp
nop
jle
mov
fcmovu
cmp
and
mov
mov
scas
repnz
loop
mov
adc
push
std
ins
dec
out
clc
bound
mov
mov
inc
or
jno
mov
imul
popa
cwde
outs
add
add
mov
dec
xor
scas
scas
leave
pop
cmp
cmp
fwait
push
int3
scas
and
mov
mov
mov
sub
mov
popa
push
iret
je
jns
push
jae
mov
in
push
adc
les
ror
popf
outs
in
aad
cld
inc
dec
cmp
inc
cmp
mov
sbb
stos
xor
dec
pop
mov
sub
pushf
cmp
or
sbb
mov
jecxz
xor
and
and
push
mov
in
pop
lds
mov
sti
repz
rcl
call
scas
dec
sbb
scas
loope
cmp
cdq
call
(bad)
dec
and
fstp
mov
xor
xchg
int
out
adc
dec
shr
ret
test
aad
jge
and
xchg
add
pushf
dec
shl
cmp
cli
push
lods
(bad)
sahf
fcomp
xchg
stc
xchg
jno
sbb
jne
or
push
xchg
adc
aad
mov
fcom
mov
sub
fsubr
adc
add
cmp
retf
dec
test
add
or
repz
adc
fild
lahf
mov
retf
arpl
sub
popa
cwde
dec
daa
out
or
inc
push
dec
add
pop
sub
sbb
loop
and
mov
cs
test
shl
es
neg
push
sbb
xor
test
or
and
ins
mov
mov
xor
and
in
mov
adc
leave
out
arpl
test
test
pop
and
lods
push
mov
and
add
jl
movs
push
sbb
adc
push
lahf
test
dec
test
leave
inc
pop
push
retf
jg
mov
fadd
mov
sbb
(bad)
cmp
fild
push
xor
dec
jno
pop
dec
sar
mov
leave
(bad)
lahf
mov
fnstenv
inc
dec
bound
stc
ins
(bad)
jmp
aad
mov
out
jmp
adc
mov
and
(bad)
jl
ins
test
add
das
stc
xchg
cmp
mov
add
dec
adc
jecxz
pop
jo
push
xchg
adc
cdq
dec
rol
sub
mov
cmps
mov
mov
addr16
push
ds
pop
pop
jg
jb
and
(bad)
push
push
mov
inc
cs
inc
jmp
wbinvd
mov
push
mov
ror
adc
xor
into
or
cmps
and
mov
test
mov
scas
cmp
xchg
scas
push
jmp
xor
ins
in
ja
adc
mov
retf
mov
dec
mov
aad
xchg
push
movs
dec
adc
cmc
dec
clc
mov
loop
out
mov
rsqrtps
cmp
popf
dec
dec
jmp
cs
jmp
pop
out
in
ret
dec
or
adc
retf
push
lock
mov
xlat
mov
sub
or
jle
push
jle
sbb
adc
fisubr
jns
stc
mov
scas
lahf
fcomp
xchg
push
mov
outs
mov
mov
test
or
leave
pusha
and
xor
stos
ror
sub
popf
push
jge
inc
cs
lea
retf
sub
mov
ins
repz
call
outs
jb
gs
xor
mov
js
sub
cs
ins
adc
(bad)
lods
hlt
repnz
mov
cld
cmps
mov
pop
in
stos
mov
in
cmp
sub
push
loopne
outs
jp
pop
inc
cwde
je
sahf
outs
test
sub
retf
(bad)
sub
adc
fsub
(bad)
ret
xchg
cwde
ja
ret
xchg
mov
and
(bad)
test
mov
lds
inc
mov
cvtps2pi
retf
push
push
mov
movs
inc
(bad)
sbb
adc
fnstsw
(bad)
adc
cli
repnz
mov
jp
cmp
sbb
call
call
and
addr16
outs
lods
js
movs
cs
(bad)
rol
fsubr
sub
pop
dec
mov
das
mov
cli
cmp
dec
adc
jne
call
pop
push
sbb
mov
mov
fld
sub
les
mov
cld
jp
mov
sbb
and
scas
lea
adc
loopne
mov
rcl
loop
dec
imul
out
sub
(bad)
adc
jno
mov
jmp
cmps
mov
dec
fwait
cmps
shr
cmp
mov
(bad)
fcom
push
and
cmp
movs
mov
out
xor
neg
pop
call
jge
push
les
out
nop
mov
rcl
mov
bound
shl
add
(bad)
cwde
int3
ret
(bad)
push
stos
stos
dec
out
jg
movs
and
into
or
inc
hlt
mov
mov
stos
aaa
cdq
int3
scas
out
dec
bound
aas
fmul
cmp
inc
aam
mov
jl
mov
push
inc
and
retf
mov
mov
rcr
xor
pop
js
nop
xor
ret
sbb
addr16
pop
dec
xor
sub
pop
jno
aam
enter
fs
jmp
and
out
push
and
lds
add
adc
and
cmp
aam
xor
pop
(bad)
xchg
stos
sub
loop
add
push
nop
cdq
call
cmp
popf
movs
push
(bad)
sahf
out
jg
hlt
ret
or
jmp
hlt
call
iret
add
loope
push
ins
out
xor
mov
xchg
cmc
add
scas
or
push
leave
test
hlt
inc
out
xlat
les
inc
out
add
jge
xor
cli
mov
and
fcom
fsubr
push
inc
mov
xchg
into
cmp
mov
jecxz
sahf
jb
xchg
jnp
lods
fs
jns
or
(bad)
lods
std
aam
inc
sub
push
sub
mov
ss
dec
pusha
pop
aas
(bad)
sub
cmps
cdq
ss
cmp
and
bound
(bad)
dec
sbb
fs
sub
mov
cmc
push
sbb
aad
data16
mov
jo
sub
xchg
jns
jmp
pusha
jg
mov
sbb
or
jmp
and
(bad)
jbe
mov
mov
out
nop
ds
and
push
fsub
jmp
and
mov
out
pop
std
and
ja
xor
es
inc
loop
iret
add
sub
(bad)
xchg
mov
or
xor
stos
mov
in
mov
ret
fs
stc
xchg
fistp
gs
aam
mov
arpl
push
cmp
pop
fstp
and
inc
sub
mov
mov
(bad)
lods
(bad)
gs
pop
and
cmc
push
sbb
pop
out
and
add
sub
lahf
dec
test
or
lock
mov
ret
or
mov
rol
adc
sub
cli
xchg
out
sub
repnz
in
cmp
ins
pop
ret
inc
dec
inc
xchg
cdq
jecxz
call
imul
scas
mov
xchg
loope
mov
repnz
pop
retf
mov
mov
xabort
mov
fs
xlat
pop
sti
fwait
mov
push
lock
mov
mov
nop
mov
in
or
sub
add
je
sub
inc
lds
mov
repz
or
push
cld
xchg
sbb
leave
jbe
call
test
mov
push
out
dec
shr
jmp
push
test
jbe
xchg
pop
test
lahf
shl
gs
jns
loop
mov
xchg
dec
pushf
imul
fs
cmp
aas
loope
mov
mov
lds
pusha
pop
in
adc
sbb
fild
pop
mov
adc
ja
and
je
add
inc
cmp
mov
jecxz
mov
mov
fmul
pop
ret
add
sub
mov
pop
push
mov
push
sub
(bad)
aad
pop
push
lods
push
out
daa
adc
fcmovb
je
in
push
leave
mov
or
sbb
outs
pushf
test
ds
das
ss
or
xchg
inc
dec
add
scas
inc
mov
jmp
pop
dec
dec
retf
daa
dec
das
jp
mov
push
pop
in
xor
adc
add
cmp
xor
in
sbb
imul
adc
dec
xor
pop
jle
pop
mov
pop
enter
dec
and
sbb
dec
cmps
fiadd
scas
sbb
cmp
jle
std
mov
inc
les
cs
and
sbb
test
or
mov
xchg
cli
mov
mov
rcl
xor
mov
mov
adc
fcomip
lods
imul
push
sub
fwait
lahf
inc
outs
clc
or
mov
cmp
(bad)
xchg
(bad)
mov
aas
je
push
pop
or
das
(bad)
in
div
hlt
dec
ret
pop
jecxz
fistp
sub
push
push
inc
pop
repnz
cld
(bad)
mov
pop
outs
pop
fpatan
adc
mov
fld
jmp
ins
arpl
pop
mov
in
inc
mov
shr
or
icebp
xor
mov
scas
repnz
adc
and
ins
cld
add
and
aas
xchg
inc
add
add
cmp
dec
inc
daa
(bad)
in
test
cmp
sbb
push
in
mov
test
sub
fstp
lds
push
cmp
je
add
jmp
cwde
stc
dec
jp
imul
cmp
scas
xor
(bad)
scas
cmp
scas
jnp
rcr
dec
out
and
(bad)
jle
mov
loope
jg
test
iret
push
xchg
in
xchg
cmp
stos
push
je
adc
push
inc
out
movs
(bad)
les
xchg
jmp
jle
mov
dec
xor
fnstsw
cwde
in
imul
in
sub
js
xchg
pop
div
cmc
and
or
sub
add
or
ss
mov
ffreep
stc
inc
cmp
fld1
xchg
out
inc
fst
ins
mov
out
push
daa
mov
and
test
cld
xlat
mov
lods
mov
sub
jae
mov
js
cmp
test
xchg
mov
ficomp
jmp
sbb
push
gs
in
push
lahf
add
pop
sbb
pop
xchg
ins
stc
not
leave
adc
mov
ret
mov
repnz
jb
(bad)
sbb
movs
std
jne
push
jle
push
cwde
leave
pop
(bad)
bound
jmp
movs
and
push
scas
cmps
mov
add
ss
xchg
mov
fwait
pop
xchg
aas
pop
push
pop
pushf
int
fdivr
scas
shl
sar
dec
es
std
jo
pop
shl
sub
jno
dec
out
pop
lods
in
sub
push
cmp
inc
jb
js
or
mov
xchg
dec
or
push
inc
xor
ins
push
test
and
scas
pop
out
push
jb
fdivp
dec
cmps
js
cli
cmps
cmp
mov
mov
out
mov
adc
out
jns
nop
cs
(bad)
fiadd
stos
mov
xchg
test
or
adc
dec
lock
(bad)
out
xchg
inc
or
mov
gs
out
std
xor
jae
repnz
push
jge
pushf
lock
pop
es
das
daa
imul
not
cmp
jmp
mov
xor
loope
jmp
int
dec
jle
in
repz
loop
sbb
push
outs
icebp
imul
mov
add
cmp
jnp
hlt
mov
mov
imul
mov
pop
(bad)
and
or
arpl
(bad)
out
cli
cmp
mov
xor
int3
mov
ins
sub
cmp
movs
and
xor
inc
add
std
or
pop
xchg
mov
fdiv
pop
add
jb
mov
es
dec
mov
ins
jle
ss
fwait
test
scas
dec
aad
pop
retf
outs
mov
mov
xor
sbb
cmp
das
ins
loopne
call
mov
neg
call
ret
std
mov
pop
jnp
sub
xor
data16
adc
xor
and
int3
adc
(bad)
leave
es
out
jno
cmp
inc
dec
sbb
stos
xchg
imul
cmp
push
test
lds
fist
and
fld
retf
test
(bad)
push
cmp
xor
test
adc
cli
adc
push
cmovp
jns
clc
int3
mov
movs
fld
jns
ins
push
fstp
add
jge
xor
mov
daa
inc
mov
jo
scas
push
ret
loop
sub
pop
fld
xor
shl
leave
mov
dec
stos
push
push
or
jg
rcr
dec
repnz
mul
cmp
mul
imul
mov
iret
rsm
mov
outs
push
repz
aam
pop
ins
outs
dec
stos
xlat
sti
inc
stos
icebp
loop
cwde
je
mov
push
es
cmps
and
dec
and
ins
test
add
inc
pop
loope
ret
mov
(bad)
rep
mov
pop
sub
sti
sbb
jmp
sub
xor
fs
xchg
xchg
imul
jmp
jae
push
inc
pop
repz
retf
push
jmp
sbb
pushf
cmp
jnp
adc
test
jle
pusha
push
sub
(bad)
and
jle
scas
out
jno
mov
cwde
fs
pop
daa
inc
cmp
xor
lahf
fmul
sbb
mov
or
add
mov
pusha
pop
push
mov
outs
cmp
ss
jmp
xchg
jp
or
adc
xchg
js
scas
fstp
popf
repz
popa
shl
ret
inc
nop
sbb
int
fist
push
pop
test
xor
mov
inc
dec
cmps
fadd
mov
xchg
jp
push
push
sub
rcr
lahf
mov
add
xor
sbb
ds
daa
lods
mov
or
mov
clc
sub
mov
xchg
retf
cwde
pop
push
mov
sub
leave
adc
out
sub
mov
(bad)
loope
xchg
push
out
mov
icebp
not
stos
pop
iret
pop
xchg
inc
xor
and
jae
stos
jns
pop
xlat
out
jae
lods
cmp
fmul
das
lods
into
cdq
outs
jno
fidivr
fsub
xchg
mov
arpl
shl
icebp
iret
inc
jbe
push
jae
pop
fwait
add
xor
inc
and
adc
sahf
jmp
ret
push
add
mov
outs
push
jmp
out
dec
xor
xlat
xor
pop
test
sub
lahf
adc
jle
repz
bound
call
fwait
repz
cmc
pop
add
jmp
adc
popf
in
inc
imul
mov
push
push
loop
aam
xor
das
shl
es
les
imul
js
pop
loop
pop
jne
shl
int
push
jmp
aas
cmp
dec
popf
stos
xchg
vcvtdq2pd
sbb
int3
add
inc
cmp
or
xor
test
and
inc
jmp
outs
ja
or
test
adc
push
push
xchg
pop
inc
cmps
and
jl
in
mov
rcr
test
jl
xor
inc
add
sub
dec
sub
ror
jb
fistp
mov
jne
fmul
mov
xor
xchg
inc
adc
jmp
jb
jbe
xor
int
or
js
ins
mov
test
cmp
xchg
push
retf
std
sub
sbb
add
push
mov
sub
or
fwait
mov
pop
and
ja
dec
test
and
iret
ins
sub
test
pop
aas
sbb
cmp
pop
jns
xor
(bad)
inc
outs
mov
sbb
sub
aad
mov
cmp
imul
jb
pushf
jmp
adc
sub
dec
dec
jb
call
push
sub
test
stos
loope
outs
(bad)
push
das
shr
push
jnp
iret
pop
cmp
je
outs
cmps
dec
add
fsub
inc
jge
shr
test
mov
inc
retf
jo
(bad)
xor
(bad)
mul
xchg
es
sbb
frstor
out
clc
xchg
xchg
xlat
popf
loope
out
add
jle
sbb
push
adc
xor
cmp
and
cmp
push
ret
adc
jmp
out
push
fisub
and
addr16
retf
pop
mov
fisubr
test
cmps
cmps
xlat
sbb
std
xor
clc
adc
nop
mov
or
xchg
test
leave
jo
xor
jb
push
cdq
das
fcomp
enter
sbb
mov
ins
lock
fldenv
adc
sar
jecxz
stc
sahf
sbb
imul
add
in
dec
jae
test
test
xchg
mov
mov
push
inc
mov
pop
and
addr16
xor
aam
xchg
dec
sahf
cmp
div
sub
adc
in
fild
or
outs
fsubr
or
cld
mov
cmp
fisubr
shl
xchg
sar
add
in
jl
into
clc
pop
sbb
xlat
dec
(bad)
cmps
out
xchg
add
dec
xchg
arpl
daa
pop
out
outs
jg
popf
imul
add
adc
adc
cwde
sti
(bad)
movs
push
or
dec
(bad)
les
jmp
xchg
pop
jb
adc
mov
fild
mov
jmp
les
aad
int3
sbb
or
sub
cmp
jle
enter
sahf
sbb
movs
or
aas
add
(bad)
or
mov
leave
ja
pop
sub
jecxz
mov
push
ds
jecxz
inc
xor
jo
retf
aad
cmp
test
jbe
cmp
stos
mov
push
aad
xchg
mov
out
js
ret
(bad)
fucom
and
xor
xchg
xchg
les
cmps
dec
jo
xchg
adc
dec
xlat
jp
add
inc
stc
lahf
movs
mov
or
mov
jle
adc
mov
mov
test
fst
cmp
aam
sub
sub
stc
xchg
push
jecxz
push
fistp
mov
aaa
mov
jl
cmps
dec
fs
scas
add
adc
add
pop
and
pop
and
ja
scas
and
iret
mov
push
ss
leave
dec
cmp
add
std
lods
stos
inc
sbb
int3
mov
scas
clc
jae
out
cs
lahf
out
jo
jmp
inc
inc
or
nop
fwait
mov
sub
(bad)
std
push
xchg
mov
cmp
arpl
push
in
xor
js
cmp
movs
arpl
jbe
jns
cmp
push
mov
cmp
and
scas
push
mov
pushf
int
push
mov
mov
add
mov
mov
push
mov
push
mov
sub
lock
pushf
xor
mov
in
(bad)
mov
pop
adc
xor
mov
xor
dec
pop
push
lock
push
cdq
mov
pop
mov
pop
push
or
cmp
out
addr16
xchg
push
mov
pop
xchg
push
dec
pusha
and
mov
daa
push
adc
repz
hlt
sti
retf
aam
sar
sbb
jge
adc
push
fidiv
retf
call
sub
stos
imul
in
push
into
sub
ds
mov
ss
xor
cmp
push
cmp
loopne
mov
cld
cld
sbb
ins
jl
cdq
mov
mov
cmp
xchg
ss
loopne
push
jno
mov
sub
jns
int
mov
pop
mov
jge
lea
inc
ret
pushf
dec
mov
push
nop
pop
pop
imul
mov
bound
jb
cmp
loop
pop
inc
sbb
push
jb
leave
push
dec
(bad)
test
pop
bnd
popa
mov
in
es
jb
adc
mov
pop
cmp
(bad)
pop
out
pop
mov
add
push
adc
mov
test
xchg
sar
add
push
xor
into
ret
pop
add
push
lods
mov
or
ret
jl
cmps
mov
arpl
lock
es
pop
mov
dec
shl
pop
mov
ss
mov
or
cmp
dec
mov
adc
mov
into
and
test
cmp
jno
in
push
call
sub
add
mov
daa
into
hlt
add
push
xchg
mov
loopne
mov
aaa
push
push
mov
(bad)
adc
lea
je
pop
mov
fnstcw
mov
sbb
sub
mov
mov
cld
mov
xchg
adc
iret
mov
jle
push
ds
in
dec
movs
and
dec
mov
lock
xor
std
aam
(bad)
mov
mov
(bad)
fucomip
sbb
imul
mov
out
leave
int
add
imul
aaa
push
jmp
popa
sti
push
adc
adc
in
out
dec
sbb
inc
int
sbb
ins
or
mov
adc
test
pop
jg
clc
test
push
xlat
pop
mov
in
dec
out
dec
enter
or
(bad)
lods
shl
stc
lea
adc
aam
xchg
and
(bad)
outs
call
xchg
cmp
xchg
push
dec
sub
mov
fld
adc
pop
mov
jecxz
pop
xchg
inc
in
jbe
in
ror
cli
inc
pop
ss
push
add
mov
clc
pop
pop
ja
xchg
or
std
lock
(bad)
call
jle
cwde
pop
int3
loopne
in
add
push
mov
push
xor
and
or
cs
cli
jmp
stc
push
push
popa
xor
inc
adc
(bad)
pushf
shl
loope
outs
cwde
das
sub
pop
std
(bad)
and
cs
sub
imul
imul
enter
pop
retf
xchg
div
adc
int
inc
out
cwde
ror
xor
or
jnp
pusha
xor
xchg
outs
stos
mov
mov
add
add
or
aad
mov
xor
cdq
pop
aaa
stc
sahf
aad
pop
jg
cmp
and
or
hlt
sub
(bad)
test
xlat
xor
jl
sub
mov
lods
cdq
stos
ret
xor
pop
loop
data16
xor
jne
das
jecxz
mov
je
xchg
or
repz
pop
in
into
mov
loop
arpl
retf
loope
cmp
imul
(bad)
jge
push
jbe
add
add
and
mov
stos
mov
mov
jne
sar
inc
ficomp
xor
das
mov
mov
out
pop
ja
mov
add
or
adc
sti
test
dec
mov
fisubr
(bad)
jg
fld
jle
pop
test
inc
shl
xchg
push
mov
in
cmc
mov
loop
inc
mov
stos
or
es
in
aam
jmp
cwde
or
in
push
dec
call
push
es
dec
loop
or
push
inc
cmp
imul
inc
add
mov
pop
js
mov
leave
and
cmps
(bad)
test
cmp
push
sahf
mov
xchg
pop
(bad)
jg
xchg
and
(bad)
es
pop
cli
mov
dec
xchg
or
das
adc
dec
mov
cmc
enter
hlt
in
das
out
shr
sbb
xlat
ret
mov
das
movs
push
mov
ret
jno
(bad)
(bad)
int3
mov
inc
sub
mov
out
cmovp
in
mov
mov
out
mov
in
test
bound
bound
mov
jb
jl
jp
mov
out
stc
dec
call
loope
cmp
dec
mov
dec
les
icebp
jmp
jo
sti
mov
pop
rol
push
xchg
fbstp
bound
add
xchg
xlat
pop
repnz
jb
mov
sbb
arpl
pop
repnz
lds
mov
or
fldenv
sbb
ror
ret
xlat
push
mov
cmp
int3
xor
push
data16
dec
lahf
sbb
xor
jb
inc
(bad)
jno
lock
ficomp
or
jo
push
sbb
cmp
nop
push
(bad)
call
mov
push
lea
sbb
in
pop
ds
dec
and
out
pop
mov
(bad)
stc
lods
push
fwait
mov
adc
jne
jle
int
lock
add
dec
sbb
fisttp
adc
mov
push
xor
js
pop
int3
iret
adc
and
and
sub
loope
sub
push
pusha
outs
nop
aas
adc
mov
aas
or
sbb
push
add
xchg
mov
in
xchg
sub
and
fmul
inc
iret
test
cmc
arpl
xor
out
pusha
neg
(bad)
and
ss
addr16
in
imul
cmp
ins
push
mov
out
pop
pop
adc
mov
retf
mov
dec
push
dec
arpl
(bad)
cmp
xchg
inc
add
jl
popa
jp
adc
test
fidiv
xchg
lea
mov
repnz
add
shr
mov
enter
pop
sub
shl
jecxz
mov
mov
push
stos
add
jle
cmp
mov
cwde
fwait
and
in
add
test
loopne
inc
out
inc
inc
cmp
mov
stc
mov
or
sub
pop
add
(bad)
push
iret
jae
dec
cmp
lods
paddq
pushf
imul
jg
lds
cmp
push
rol
minps
pop
sbb
push
mov
cmp
push
ins
loope
popf
and
xor
test
mov
and
iret
mov
pop
pop
mov
ins
xchg
outs
out
cld
scas
inc
sbb
retf
xor
sub
xchg
idiv
xchg
movs
jg
lahf
neg
retf
out
xor
or
daa
and
pusha
dec
test
sbb
cmp
cmps
mov
pop
dec
jecxz
ror
jbe
dec
arpl
je
fs
add
div
xor
sbb
in
fnstcw
mov
pop
mov
sub
mov
add
aad
xchg
sub
js
ins
add
sub
and
xor
xor
add
cmp
enter
stos
jbe
sar
or
cdq
or
cld
cmp
sbb
data16
leave
pop
mov
dec
mov
and
(bad)
test
test
lods
jp
xchg
xor
add
add
jge
shl
jns
xchg
inc
push
fdivr
mov
jle
sar
std
mov
je
cmp
rol
dec
adc
ins
pop
pusha
ja
jl
mov
fisttp
xor
mov
pusha
push
xlat
sbb
sub
or
mov
mov
lea
push
clc
fs
cmps
mov
inc
cmps
jmp
push
cmp
fisttp
inc
sub
dec
jg
aaa
add
cdq
out
adc
push
jg
inc
loopne
out
jae
icebp
popf
pop
addr16
jge
cmps
gs
aaa
dec
jne
stos
xor
and
inc
push
cmp
popa
jbe
loopne
xchg
ficomp
dec
adc
add
xchg
adc
lock
or
xchg
xor
loop
popa
cmps
mov
cdq
imul
pop
adc
adc
fcmove
scas
push
es
shl
xchg
jb
std
js
mov
jl
jg
jp
mov
call
lahf
fdivr
add
int3
out
jle
sar
xor
mov
lea
clc
sub
fdivr
scas
push
jmp
retf
mov
xor
out
or
addr16
xor
jns
ja
mov
dec
or
aad
lock
shl
ss
aas
sub
mov
add
mov
jns
pop
xor
nop
mov
into
loopne
sub
iret
xor
jecxz
sahf
mov
mov
mov
or
xlat
ror
(bad)
pop
outs
test
push
sbb
add
ror
inc
loope
or
cmps
not
add
(bad)
inc
ins
and
mov
mov
hlt
push
cmc
jno
fsubr
adc
mov
push
test
mov
out
cli
mov
icebp
scas
scas
mov
mov
mov
xchg
outs
scas
shl
or
xchg
das
pop
xor
xor
fs
push
ret
fisttp
popa
xchg
inc
inc
jg
cmp
pop
les
mov
xchg
aam
fst
call
xor
mov
add
mov
mov
sub
mov
xchg
in
and
call
mov
cmp
adc
test
cmp
push
cmp
or
pop
retf
lods
sahf
fimul
inc
or
and
and
popa
cli
test
mov
cld
je
jmp
int3
repz
lahf
or
or
jl
inc
jmp
lock
mov
jmp
je
sbb
aas
pop
popa
in
jle
push
enter
sbb
or
inc
xchg
shl
int
loopne
sub
push
stc
(bad)
mov
jmp
mov
scas
loop
movs
xor
repz
ja
adc
mov
mov
jb
mov
inc
dec
ficomp
mov
fs
pop
test
push
adc
jbe
ins
call
rol
fwait
dec
in
imul
jmp
adc
inc
mov
int
jb
mov
enter
sub
repz
in
stc
movs
jecxz
in
adc
adc
and
iret
icebp
clc
or
xchg
xor
sbb
(bad)
push
repz
adc
in
lods
dec
mov
aas
pushf
dec
jnp
outs
inc
push
push
(bad)
and
loopne
cs
shl
xlat
pushf
call
xlat
push
out
dec
aas
icebp
and
lods
sbb
pop
or
xor
mov
fisubr
push
pop
stc
bound
jmp
aam
mov
mov
jmp
inc
xor
lock
int
cmp
push
mov
fsubr
sbb
cwde
les
shr
dec
int3
cdq
xchg
inc
stos
out
or
or
in
aaa
test
imul
pop
adc
ss
inc
push
call
jne
mov
push
arpl
jnp
js
cmps
push
ror
lds
jae
sub
mov
inc
outs
test
ins
or
pop
scas
push
js
daa
mov
cmps
adc
dec
adc
xor
jno
mov
cmp
arpl
js
sub
and
shl
sub
and
ins
cmp
rcr
lods
(bad)
sti
fsub
pop
xchg
test
mov
sbb
mov
out
adc
pop
xchg
call
inc
pop
lods
jnp
push
adc
cmp
iret
fdivr
sete
mov
ins
out
push
dec
pushf
stc
xchg
rcl
adc
in
shl
cli
fst
dec
call
xchg
aam
ret
push
push
xor
push
push
call
dec
loop
dec
cld
test
push
rol
gs
loop
pop
jb
lahf
cmp
ret
test
push
ins
and
neg
fsub
dec
add
inc
stc
cld
cmp
mov
sub
cmp
test
jge
push
pop
and
rcl
pop
fidiv
pusha
dec
data16
inc
or
dec
mov
stos
movs
into
pop
sahf
pop
push
lods
mov
push
(bad)
mov
dec
cmc
faddp
sub
jns
jg
inc
and
mov
mov
pop
push
xchg
pop
jb
iret
cmp
pop
stos
(bad)
jmp
mov
mov
scas
mov
sahf
retf
iret
shl
sbb
fdiv
sar
adc
hlt
inc
mov
sbb
adc
mov
nop
push
dec
aas
gs
fadd
jno
out
xlat
enter
scas
lds
repnz
adc
stos
ret
adc
lock
enter
out
ret
xchg
mov
(bad)
out
frstor
sbb
and
push
lea
movq
call
ds
dec
out
in
push
xor
in
jp
div
push
lea
mov
ret
push
dec
dec
aas
test
fucomp
outs
retf
jmp
and
xchg
jmp
lahf
in
loope
es
mov
js
and
and
movs
mov
jmp
mov
mov
loope
jge
dec
sahf
outs
das
jno
imul
ret
xchg
scas
push
jnp
pop
stos
fwait
or
shl
push
test
sbb
xchg
mov
sbb
xor
(bad)
cmp
xchg
mov
repnz
adc
mov
mov
pop
xor
xor
jno
pushf
mov
sahf
div
mov
pop
jne
cmps
mov
ins
or
dec
and
mov
pop
xor
in
lods
ror
or
jge
cdq
mov
cwde
inc
push
mov
push
(bad)
scas
push
push
cmp
lds
pop
bound
mov
mov
push
sbb
neg
mov
mov
movs
in
sahf
xchg
xchg
retf
lock
dec
adc
fmul
lock
cmp
test
xchg
xor
das
pop
jae
mov
inc
add
fwait
stos
adc
iret
aaa
sbb
dec
fbld
loopne
sar
add
dec
or
pop
sub
jmp
inc
popa
pop
fdiv
push
push
call
lods
stos
hlt
in
retf
and
dec
adc
test
aad
add
mov
cmp
pop
test
sbb
and
mov
xor
inc
dec
das
mov
xchg
mov
sub
pop
jbe
les
cmps
adc
push
cli
ror
arpl
daa
es
jp
popf
pop
fbld
bnd
inc
test
cs
jne
les
push
inc
xor
cmps
dec
das
dec
jl
shr
loope
mov
(bad)
push
std
int
adc
fistp
lods
fucomip
ficom
jae
pop
cmps
fst
lock
adc
call
mov
stos
push
daa
mov
sbb
mov
sar
and
mov
pop
pop
jmp
xor
(bad)
imul
mov
pop
pop
retf
arpl
mov
fild
in
mov
(bad)
sti
data16
or
jl
sub
stos
cmps
push
mov
xlat
test
push
jp
call
or
jne
fist
pop
dec
adc
gs
mov
or
push
movs
mov
shr
fcomip
in
sub
jp
out
jl
retf
repz
inc
inc
cdq
retf
mov
mov
push
mov
stos
sti
stc
cmp
into
fistp
mov
mov
add
add
pop
mov
mov
or
jbe
cli
popf
jmp
xor
call
icebp
jns
inc
lahf
fcmovbe
in
adc
mov
aam
sub
inc
and
(bad)
jmp
add
clc
add
sbb
(bad)
fisub
and
pop
xchg
sub
mov
sahf
push
dec
dec
dec
sbb
fnstcw
push
out
ja
ror
xor
in
push
sub
jge
ror
outs
and
imul
mov
ja
cmc
je
and
call
fucom
push
data16
mov
sbb
xchg
mov
jae
cwde
ficomp
es
stc
int3
jns
jo
mov
sub
cmp
test
push
ds
ficomp
daa
push
dec
mov
mov
jns
dec
xor
jno
leave
std
dec
jle
fild
(bad)
cwde
loopne
mov
jp
lea
movs
out
int3
push
pop
sbb
adc
retf
inc
jle
mov
jno
hlt
test
clc
push
mov
inc
sbb
sub
mov
mov
lahf
xor
xor
sar
dec
push
pop
ss
cdq
xchg
pop
mov
sub
loop
clc
pop
in
jae
push
and
scas
add
movs
sar
add
mov
inc
jle
(bad)
jb
fidivr
(bad)
mov
mov
clc
lods
int
in
mov
test
push
and
fs
jmp
outs
out
mov
mov
fist
mov
pusha
dec
ja
jl
(bad)
mov
cli
lods
imul
dec
lea
mov
retf
pop
jmp
rcr
iret
and
or
stos
fsub
inc
sub
ja
jp
mov
sbb
xor
in
fidiv
sub
sub
dec
lods
and
aas
pop
sub
loop
jle
das
jp
sahf
xlat
ins
mov
or
inc
pop
sbb
rcr
cs
fs
mov
dec
pop
push
sbb
pop
int3
pop
leave
adc
xlat
aad
out
(bad)
nop
movs
addr16
repnz
shr
ja
mov
dec
pop
mov
jecxz
sbb
and
stos
xor
lods
jmp
retf
imul
sub
add
lods
jmp
fwait
repz
dec
repz
fisubr
ret
mov
push
dec
jp
jp
mov
adc
push
int
mov
test
xor
shr
push
pop
pop
cli
int
stos
out
mov
sub
test
inc
add
sahf
popa
test
out
or
retf
je
addr16
icebp
outs
mov
and
mov
add
loope
sub
stc
mov
sbb
push
les
cmp
data16
or
in
mov
sti
aad
mov
and
mov
or
add
jns
mov
scas
loope
aad
int3
and
xchg
mov
es
addr16
mov
mov
xor
lods
pop
ins
stos
sbb
shl
dec
sbb
or
sti
lods
mov
dec
dec
xor
ret
popf
mov
jge
out
sub
inc
sbb
xchg
fbstp
jle
mov
(bad)
xchg
xchg
xor
pusha
inc
xchg
(bad)
jge
push
hlt
fsubr
or
and
adc
scas
push
sar
mov
dec
retf
popa
fstp
lahf
(bad)
mov
pop
lock
sub
in
pop
cwde
xchg
stos
rcr
fsub
mov
pop
aam
jge
xor
inc
add
bound
popf
cli
jmp
ins
arpl
mov
jno
cmp
mov
fimul
mov
cmovl
push
cmp
mov
outs
dec
fadd
add
lds
dec
xchg
leave
cdq
repnz
sub
das
xchg
sbb
xlat
inc
cs
cli
fisttp
inc
xchg
rcr
and
loopne
mov
jle
pop
aad
rol
movs
adc
push
push
(bad)
stc
adc
and
ds
test
jle
fidivr
into
fsub
adc
sub
jne
cmps
in
pusha
pop
cmp
mov
inc
cmp
ror
inc
jno
into
xor
repnz
xor
clc
scas
nop
jecxz
jge
or
scas
sbb
ficomp
je
xchg
pusha
sbb
inc
mov
mov
pop
out
cmp
cdq
or
or
ret
bound
cwde
jg
or
out
imul
jmp
mov
adc
sbb
pop
(bad)
(bad)
add
mov
loop
rcr
fimul
mov
outs
mov
fdiv
(bad)
or
lods
fnstcw
aas
lahf
fdiv
or
out
sbb
dec
mov
stos
test
inc
sahf
dec
or
ins
shr
dec
dec
unpckhps
or
std
pop
mov
loopne
cmp
dec
mov
or
loop
jbe
test
push
dec
rcl
cmp
loopne
fadd
sbb
add
mov
xchg
icebp
loop
inc
dec
pop
mov
jmp
jle
pop
inc
mov
rcl
fst
dec
xchg
xor
dec
adc
fcom
fcomp
(bad)
pop
les
inc
sbb
retf
test
dec
jl
cmps
mov
rol
and
nop
jno
mov
push
mov
push
xor
and
sahf
mov
add
das
ins
sub
sub
dec
inc
inc
mov
into
sbb
push
mov
mov
ret
push
repz
mov
sub
aaa
(bad)
call
sbb
call
sbb
out
(bad)
jne
clc
sbb
cmps
mov
cs
ds
jne
sub
sbb
daa
or
in
or
pop
xlat
pop
pop
lea
jg
pop
xchg
dec
jl
cmp
test
pop
das
(bad)
adc
retf
leave
test
xchg
mov
nop
outs
addr16
mov
dec
xor
push
loopne
mov
jl
cmp
loope
rcr
fisub
out
pop
sub
add
rcr
push
cmp
cdq
(bad)
sbb
adc
pop
push
push
mov
mov
sub
push
cmp
jno
sahf
mov
inc
add
push
sub
pop
inc
and
sbb
icebp
retf
ja
fiadd
inc
jp
jecxz
add
mov
sbb
inc
mov
pop
scas
xor
repnz
push
daa
mov
push
std
mov
popa
dec
mul
cmps
int
imul
adc
ds
je
call
adc
aad
adc
mov
mov
add
dec
add
push
push
ds
jecxz
std
scas
dec
jp
push
movs
mov
add
aad
iret
sub
pop
das
jbe
test
lea
push
and
cld
xchg
or
mov
int3
mov
sub
pop
cmp
fsub
inc
jmp
adc
fwait
imul
mov
inc
jno
ret
push
(bad)
jo
jmp
cmp
ds
xor
mov
clc
mov
xlat
aad
imul
adc
or
les
mov
data16
fwait
and
and
mov
inc
or
je
xchg
xchg
in
adc
add
int
bound
lock
adc
lods
add
cmp
mov
and
mov
pusha
jnp
mov
aam
dec
mov
adc
sub
sub
push
and
push
xor
xchg
popf
adc
push
xor
mov
adc
push
imul
sbb
popa
sub
mov
fst
arpl
lahf
pop
ficomp
fwait
inc
add
jo
cmp
push
pop
jns
mov
mov
mov
or
xor
sub
rcr
lahf
ins
ret
sbb
cmc
and
cmps
ret
popa
push
fidiv
in
cs
(bad)
call
dec
mov
and
int
xchg
and
hlt
jo
int3
cli
nop
stos
jnp
add
dec
lahf
out
push
lods
shl
stc
sub
pop
cmp
or
(bad)
mov
xchg
push
and
in
movs
lock
mov
mov
test
(bad)
mov
outs
add
sub
mov
cmps
les
scas
iret
pushf
mov
add
sub
lock
jb
loopne
aaa
push
cli
(bad)
adc
pop
into
push
and
movs
pop
cld
int
adc
mov
xchg
mov
cmp
push
xchg
test
dec
cmc
mov
mov
cmp
popf
(bad)
call
arpl
mov
rep
dec
loop
scas
add
lods
pop
jl
xchg
push
lods
inc
jno
or
loope
mov
fcom
call
in
cmc
pop
xlat
leave
mov
loop
or
sub
arpl
sub
xchg
int
ja
dec
push
dec
shl
xor
loop
fidivr
or
cmp
dec
dec
fcomi
cld
pop
mov
es
jecxz
jnp
push
inc
xor
test
push
jae
pop
popa
cmps
sub
jg
mov
loop
jg
stos
mov
ret
sub
das
addr16
fstp
test
mov
pushf
cmp
jbe
or
xchg
aam
sub
inc
not
push
scas
mov
xor
pushw
data16
fucomi
cmp
mov
cmp
push
push
ins
ja
xor
ret
loope
mov
int3
outs
js
add
push
ret
cmp
mov
pop
outs
cld
cmps
cmp
dec
xchg
vcvtps2pd
xchg
sbb
jg
xchg
inc
mov
mov
pop
repnz
push
adc
push
mov
fcmovbe
aas
hlt
cmp
fcom
pop
cmp
pop
test
mov
cdq
in
sub
sub
jecxz
mov
nop
test
xor
ins
loope
rcr
mov
cmp
das
sub
mov
hlt
jmp
imul
inc
cmps
pop
ss
cmc
pop
push
dec
lds
pushf
dec
mov
cmc
cs
ss
inc
adc
add
jae
out
hlt
xor
sub
outs
mov
in
sbb
pop
adc
pop
retf
cmp
push
test
push
mov
mov
jg
push
mov
cwde
int3
js
cmc
adc
inc
cmp
jae
fcmovbe
mov
int3
push
cld
dec
fwait
mov
stos
adc
stos
adc
sub
pop
cs
mov
ins
inc
inc
pop
push
sbb
mov
lods
add
dec
retf
dec
movs
cmovs
pop
dec
or
cmp
and
(bad)
fdivr
ins
fsub
retf
xchg
scas
nop
fst
aam
out
mov
sbb
test
imul
push
dec
sbb
add
inc
les
xchg
cld
ret
and
es
ret
sbb
nop
lds
mov
jno
mov
pop
sub
sbb
imul
cmp
jne
(bad)
fisubr
or
push
add
retf
into
sbb
repnz
lods
mov
jle
mov
out
xlat
mov
adc
adc
mov
xchg
adc
add
adc
push
stos
push
fidivr
dec
adc
mov
in
call
cli
jmp
sbb
xor
test
dec
pushf
imul
inc
out
std
jmp
pop
mov
sub
adc
inc
nop
pop
xchg
inc
addr16
mov
imul
adc
add
push
lods
add
imul
jg
movs
gs
jns
aad
jecxz
repnz
and
arpl
icebp
sbb
adc
mov
jae
sub
cld
cld
mov
es
xchg
and
cmp
cmc
in
shl
leave
lock
mov
fnstsw
and
cdq
(bad)
sahf
push
push
ffree
out
pop
aas
dec
lahf
sar
jb
sar
pop
stos
call
cmp
cwde
dec
sbb
adc
add
sbb
sar
inc
sahf
sti
mov
(bad)
cmc
mov
cmc
sub
mov
mov
xchg
jne
stos
add
pop
mov
ins
push
sbb
xchg
and
jbe
mov
mov
mov
hlt
aad
add
fwait
mov
or
mov
push
pop
stos
xlat
mov
in
push
lods
out
arpl
pop
mov
xor
inc
mul
jmp
icebp
pop
out
lods
dec
outs
stc
and
ja
cdq
mov
inc
sbb
in
and
mov
mov
sbb
add
(bad)
push
bound
js
xchg
mov
cmp
mov
xor
cmp
inc
fstp
or
jmp
cmps
xor
cmp
dec
mov
shl
add
sub
fsub
sti
or
cmp
xor
lock
fsubr
pop
out
mov
adc
retf
fs
iret
xchg
xor
fmulp
je
daa
fldcw
ja
or
push
cwde
shl
retf
cwde
xchg
push
icebp
outs
cmp
shl
shr
ds
jns
gs
scas
cmp
popa
out
jmp
retf
cmp
or
xor
out
(bad)
clc
hlt
xlat
(bad)
cmp
test
jo
mov
jecxz
push
sahf
cmp
ja
movs
pop
sub
inc
pop
out
jns
cmps
dec
mov
xchg
sahf
in
pop
out
(bad)
cld
aad
in
ds
in
sub
xor
neg
mov
repnz
sub
mov
xchg
adc
xor
(bad)
xor
(bad)
push
and
ret
and
and
cmp
scas
arpl
pop
push
push
adc
or
dec
mov
push
cmp
mov
pop
mov
push
mov
iret
jnp
ret
call
add
pop
ffreep
jmp
fstp
mov
out
(bad)
movs
mov
loopne
test
inc
inc
fcmovne
mov
sub
mov
push
jnp
pop
das
cmps
dec
arpl
je
cmp
cs
pop
pop
xchg
and
scas
sub
inc
mov
rcr
arpl
ret
mov
shr
cmp
pop
mov
xor
jmp
cmps
cmp
icebp
inc
mov
inc
add
jg
jno
cli
hlt
hlt
mov
movs
lds
mov
xor
imul
dec
sar
(bad)
pop
mov
sbb
xchg
jno
lods
xor
in
xchg
cmps
pop
fdiv
sbb
adc
sbb
or
inc
xor
mov
or
pop
jae
and
es
adc
cmps
fisttp
mov
mov
push
inc
sub
sbb
or
add
sbb
jl
fcomp
push
pop
mov
clc
nop
in
mov
div
aaa
cmp
sbb
adc
fldenv
xchg
div
les
repz
mov
push
repz
cld
dec
not
pop
repz
dec
push
jno
sbb
push
mov
iret
pop
jo
or
shl
mov
cmps
test
jne
mov
(bad)
mul
xchg
adc
and
imul
pop
inc
stc
push
xor
inc
stc
mov
scas
jle
and
push
dec
mov
js
and
pusha
in
fild
inc
mov
or
push
out
shl
out
inc
mov
mov
cmp
mov
sbb
or
and
pop
imul
cmp
ror
jmp
call
cmp
jp
iret
out
sti
mov
cmp
ss
pop
dec
stos
stos
(bad)
cmp
add
mov
lods
mov
jae
mov
ror
cmp
push
push
sbb
clc
lock
jg
sub
jno
pop
(bad)
pop
pop
fiadd
stos
mov
mov
sbb
jl
out
int3
mov
movs
cdq
jae
cmps
jg
jb
jmp
xor
js
fdivr
retf
lods
lods
popa
inc
aad
and
ins
sbb
push
xchg
push
cmc
jns
push
mov
inc
pop
jnp
pop
push
out
xchg
test
outs
fcomp
hlt
jae
js
sbb
mov
into
ficomp
movs
inc
cmp
inc
mov
sub
or
cmp
fimul
fwait
arpl
jmp
xor
stc
or
hlt
imul
mov
cmp
and
dec
mov
pop
sbb
mov
jne
sub
test
fs
mov
dec
or
out
jmp
out
xchg
jle
std
sub
adc
(bad)
test
movs
push
jne
sbb
pop
out
pop
hlt
jle
pop
enter
lods
movs
loopne
(bad)
jns
inc
or
scas
cmc
pop
mov
out
bound
cmp
cdq
inc
or
scas
aaa
cmp
ret
ja
pop
ret
push
mov
imul
push
inc
mov
ins
sar
dec
in
out
(bad)
in
into
bound
fld
popa
jo
fnstenv
cmp
inc
jp
inc
mov
jecxz
aam
adc
xchg
movs
call
mov
mov
sub
enter
(bad)
sahf
inc
pop
inc
out
(bad)
push
jnp
out
mov
jecxz
inc
xor
jo
icebp
rcl
scas
push
enter
scas
xor
mov
inc
push
imul
xor
test
mov
fsub
inc
outs
int3
std
arpl
sti
aad
sbb
add
mov
test
push
mov
in
or
mov
cmp
mov
adc
pop
movs
scas
mov
cmp
jbe
gs
sub
aaa
movs
aam
mov
add
cmp
fptan
mov
mov
fcmovnbe
sbb
rcr
dec
inc
mov
ds
sub
push
scas
xor
int3
cmp
sti
add
pop
add
mov
xchg
mov
loope
jo
fwait
jae
cmp
mov
pop
(bad)
retf
xor
cmc
sub
fld
imul
sbb
inc
jae
and
xlat
movs
push
enter
xchg
xlat
or
push
adc
retf
addr16
dec
ins
push
and
ret
pop
pop
jle
xchg
fsubr
pop
mov
push
xor
push
add
cld
xchg
pop
add
dec
js
into
pop
push
and
sbb
cld
pop
call
sub
sbb
push
test
jb
(bad)
repz
mov
daa
test
push
push
aam
push
mov
(bad)
adc
addr16
push
inc
mov
xchg
(bad)
xchg
hlt
gs
aaa
out
out
add
into
jb
jg
xchg
pusha
icebp
and
aam
into
jecxz
dec
(bad)
aas
sbb
repnz
mov
sbb
sub
mov
hlt
repnz
pop
call
loop
outs
cdq
es
inc
pop
arpl
ds
std
push
inc
ror
scas
mov
(bad)
cmp
sbb
(bad)
je
sbb
pop
mov
add
(bad)
daa
movs
or
adc
(bad)
iret
shl
sar
mov
pop
jp
jge
push
test
cmps
mov
lds
call
add
or
jbe
jae
mov
sbb
mov
loop
mov
sub
je
fadd
push
push
arpl
daa
and
mov
mov
jmp
movs
les
push
jge
imul
rcl
sbb
(bad)
sbb
test
inc
data16
inc
cmp
pop
outs
mov
mov
cmp
cmps
lods
jo
lock
xchg
or
call
pop
xor
mov
cmp
rol
(bad)
loopne
pop
dec
jmp
std
icebp
inc
mov
push
test
test
xchg
cmc
aad
adc
xchg
jns
popa
das
fiadd
pushf
test
pop
dec
xchg
and
push
cdq
std
add
pop
mov
mov
test
sub
int
out
lahf
mov
outs
pop
ja
jns
add
pop
daa
sub
mov
pop
sbb
stos
cmp
xor
xor
jno
in
enter
in
out
xchg
std
test
cmp
jo
mov
mov
mov
sbb
cdq
xor
sar
mov
jnp
xor
inc
xlat
data16
adc
das
cld
jmp
cwde
das
jecxz
leave
mov
fs
dec
jg
fcomip
(bad)
pushf
addr16
xchg
pop
xchg
mov
and
stos
jmp
cmp
cwde
push
iret
nop
jo
mov
and
add
push
xchg
sahf
sbb
out
mov
push
nop
lock
xchg
in
mov
mov
jp
retf
inc
add
and
jle
sbb
das
mov
xchg
jge
sub
inc
or
repnz
es
mov
adc
movs
addr16
cmp
sbb
fcomp
mov
jmp
aaa
inc
popa
adc
lods
cmp
xchg
lock
jbe
mov
and
repz
jb
pop
pop
or
ins
loop
mov
outs
dec
jle
push
mov
repnz
fwait
enter
pushf
mov
adc
movs
int3
xchg
mov
sar
das
jmp
sbb
xor
mov
xchg
in
xor
popa
shr
push
call
js
(bad)
push
jno
aas
div
ins
loop
mov
add
into
push
lods
(bad)
mov
add
mov
mov
lods
lods
jae
jl
sbb
sbb
in
fisubr
sbb
adc
add
mov
loop
sbb
inc
idiv
ror
pop
push
mov
push
ds
jmp
sbb
or
fst
sti
div
lahf
mov
sbb
and
adc
fiadd
jg
fcmovnu
pop
inc
int
push
dec
xchg
sbb
pop
inc
jb
inc
mov
fimul
cmps
imul
add
ret
push
mov
cmc
movs
mov
jmp
sar
out
movs
add
movs
rol
mov
jecxz
mov
(bad)
dec
pop
sbb
mov
adc
stos
adc
inc
push
jae
sbb
jb
push
into
xor
mov
mov
loope
jg
and
iret
clc
rcr
and
je
loop
jo
mov
(bad)
fs
jmp
adc
push
jl
js
cmp
imul
sub
mov
mov
aam
cmps
in
add
fsubr
sub
jg
cmps
mov
adc
lods
adc
scas
wbinvd
mov
(bad)
fwait
add
clc
cmc
loopne
sbb
push
xchg
sub
iret
mov
adc
sbb
push
ins
movs
or
adc
imul
push
popf
adc
stos
mov
stc
xor
in
pop
jp
sbb
add
jno
sbb
jecxz
push
mov
and
push
pusha
sbb
xor
jno
or
iret
hlt
xor
pop
ret
leave
or
loop
idiv
cli
push
sub
mov
stc
jne
dec
inc
push
pop
in
stos
arpl
push
mov
mov
outs
scas
test
loope
add
jmp
loopne
imul
arpl
inc
je
jge
es
ret
retf
and
adc
xchg
pop
mov
or
std
xor
cmps
aaa
push
mov
je
jmp
jge
daa
mov
mov
out
adc
lock
mov
sahf
push
imul
jp
shl
mov
add
popf
mov
jo
pushf
sub
nop
mov
arpl
add
add
mov
test
mov
mov
sbb
pop
retf
enter
add
loope
mov
ss
js
mov
and
cmp
push
mov
or
sub
push
cwde
fisttp
dec
sbb
aaa
out
movs
loop
cmp
jb
in
int
jle
in
dec
sub
mov
sub
movs
push
cmp
sbb
adc
popf
les
iret
adc
mov
inc
push
or
pop
test
and
and
sub
and
inc
popa
mov
jnp
cwde
mov
test
jbe
out
call
inc
imul
enter
pminsw
pop
dec
fidiv
out
aas
in
pop
lock
jbe
pop
dec
push
or
lods
aam
or
cmp
repz
push
out
xlat
jns
or
push
push
fld
fwait
ret
mov
jl
rcl
pop
enter
outs
out
lds
push
jns
clc
test
add
and
push
push
push
aad
mov
out
(bad)
jge
sti
dec
(bad)
pop
adc
mov
xchg
out
mov
jmp
inc
add
rcl
mov
dec
not
test
dec
in
inc
ins
int
mov
fnstenv
stos
repz
js
fs
out
jmp
leave
jmp
mov
aam
rol
cld
inc
add
in
pop
adc
int
mov
inc
cmp
dec
jnp
mov
mov
call
xchg
stc
cmp
pop
loope
cmp
ror
jmp
cmp
pop
xchg
shl
jb
fnsave
bound
popf
and
pop
cmps
mov
jle
(bad)
mul
mov
pop
and
mov
jnp
and
cmp
sahf
fmulp
push
enter
aam
test
sub
push
dec
dec
xchg
cmovle
(bad)
aad
jg
pop
cmp
mov
test
mov
sbb
and
push
icebp
inc
enter
rcl
sbb
push
bound
and
out
cwde
fwait
mov
fsubr
enter
cmp
(bad)
adc
dec
fst
push
lods
jbe
xchg
les
ja
lea
aas
aad
jmp
or
cs
stos
faddp
movs
pop
push
call
gs
fs
push
iret
add
sti
mov
jo
rol
ins
lods
(bad)
arpl
mov
imul
xchg
push
adc
(bad)
xchg
aas
sti
in
cmovg
(bad)
icebp
xor
mov
push
sar
imul
addr16
cs
pop
in
sbb
stc
sbb
push
jle
jns
ins
movs
in
sbb
cmps
and
inc
test
loope
fisttp
mov
mov
jbe
fld
xor
dec
push
cmp
bound
cmps
test
mov
sub
mov
cmps
pop
sbb
mov
mov
rcr
(bad)
push
jmp
das
fisttp
sub
(bad)
or
repz
mov
pop
mov
in
push
mov
dec
mov
sbb
jae
cld
jge
inc
inc
jmp
push
loopne
and
mov
pop
das
cwde
dec
jo
ja
mov
js
call
ins
sbb
call
repnz
inc
inc
fxch
push
pop
cli
xlat
cmc
cmps
fcom
call
addr16
push
mov
scas
and
fnstenv
push
fnstenv
fld
out
movs
xchg
fimul
mov
inc
push
add
pop
call
pop
fstp
test
lock
(bad)
cs
push
pop
cmp
sar
cmp
mov
sub
in
leave
mov
sbb
arpl
jmp
mov
aaa
cld
xor
dec
popf
out
adc
dec
xchg
test
sub
movs
stos
adc
mov
cs
test
mov
jbe
enter
scas
sbb
call
jmp
ficomp
test
clc
lahf
pop
jo
fcomp
pop
cmp
mov
or
push
icebp
add
lea
add
mov
cmp
cmp
imul
pop
jge
add
loop
mov
cmp
icebp
pop
jno
dec
jo
jae
imul
push
inc
js
sar
add
retf
ds
adc
push
xor
pushf
push
sub
retf
mov
push
cwde
lahf
mov
cdq
ja
aas
test
mov
mov
and
icebp
or
cli
xor
mov
jp
sbb
(bad)
(bad)
fdivr
stos
xchg
push
dec
cmp
jmp
pop
jns
mov
cli
mov
fs
in
scas
mov
shr
xchg
pop
jae
inc
je
push
mov
(bad)
iret
jmp
mov
clc
fild
push
mov
jae
mov
push
inc
and
cmp
test
dec
pushf
daa
and
sub
and
aas
push
test
popf
aas
clc
push
jbe
xor
cmp
fbld
jle
sar
sub
pop
aas
mov
adc
fcom
sbb
loop
hlt
not
js
add
mov
imul
ret
xchg
leave
out
and
xor
mov
inc
pop
sub
xor
pushf
in
movs
mov
(bad)
in
sahf
je
sub
(bad)
(bad)
mov
jb
pop
popa
cmp
xlat
and
clc
pop
mov
pop
inc
push
jmp
jmp
sbb
push
xlat
repz
pop
bnd
cmps
mov
scas
cmp
xchg
sub
daa
aas
outs
arpl
fisttp
daa
leave
inc
add
aas
(bad)
xchg
add
test
vucomiss
jg
test
mov
sub
push
sub
popf
mov
cli
shl
mov
retf
movs
fsubrp
pop
stc
aaa
adc
fwait
mov
outs
lods
cdq
cmp
adc
ficom
jmp
xchg
or
and
cmc
fild
dec
clc
xor
es
jo
test
add
sbb
push
icebp
sub
dec
imul
stc
mov
fwait
xor
push
cli
xor
or
je
data16
dec
or
ins
scas
cld
data16
fwait
or
aam
inc
aaa
pop
jbe
fsub
xor
add
or
cld
stos
aas
ret
mov
test
sub
movs
sub
test
mov
jl
jae
in
sar
mov
xor
xchg
(bad)
pushf
adc
mov
jne
adc
retf
push
out
cmp
or
and
add
or
jecxz
or
cs
bound
jae
gs
into
mov
in
retf
sub
aaa
add
lock
hlt
jae
cmc
inc
lock
and
and
sbb
frstor
xchg
test
nop
call
cmp
jl
cld
mov
loope
xchg
sbb
xor
xchg
mov
lods
adc
or
jnp
fild
xchg
or
mov
cld
cmp
adc
pop
movs
or
or
xor
loop
(bad)
mov
mov
in
xlat
dec
cmp
into
cmc
add
xor
or
inc
push
pusha
adc
jmp
cmp
movs
dec
mov
ret
xlat
js
jg
push
or
mov
test
push
mov
cmc
icebp
test
cmp
std
cmp
repz
jne
inc
adc
push
pop
lock
add
xchg
sub
sbb
mov
or
into
lock
dec
lods
test
xchg
fist
int
enter
dec
pop
jb
adc
dec
mov
call
aam
push
mov
sub
mov
ins
call
add
xchg
rcl
jmp
stc
hlt
jle
in
rol
inc
xor
imul
mov
mov
loopne
mov
in
inc
inc
mov
movs
pop
pop
jne
dec
mov
(bad)
add
xchg
(bad)
lsl
in
dec
fisttp
outs
pusha
sbb
gs
test
pop
sbb
ins
js
imul
out
mov
into
cmps
push
(bad)
repz
pop
xlat
mov
pop
xor
fs
add
and
rcl
and
ss
test
movs
cmp
addr16
sbb
dec
js
push
mov
xor
in
inc
mov
xor
fistp
in
sahf
pop
push
repz
mov
push
repz
leave
pop
imul
add
psubsw
rol
pop
push
and
cmps
dec
dec
mov
imul
pop
scas
fild
in
arpl
inc
and
inc
outs
ins
arpl
cmp
enter
sub
or
push
enter
inc
and
dec
jno
lock
add
push
and
data16
dec
lock
stos
arpl
inc
mov
xchg
sub
stc
xchg
mov
jle
movs
mov
push
xchg
sub
imul
pop
push
and
dec
ret
rcl
mov
jmp
aaa
push
mov
imul
ss
cmp
lahf
mov
dec
jbe
popa
retf
dec
jnp
aad
hlt
inc
scas
adc
or
ret
mov
jmp
cmp
or
in
cld
mov
test
repnz
and
add
push
lea
jns
or
push
mov
movs
mov
(bad)
cmovge
test
int3
mov
inc
sub
pop
stc
xchg
cdq
xchg
loope
(bad)
cwde
clc
daa
cs
add
xchg
mov
test
adc
mov
add
push
jl
sbb
stc
mov
cmp
repz
lds
add
push
adc
jg
call
push
popa
scas
xchg
or
rcl
imul
adc
mov
int3
jae
repnz
dec
shl
movs
inc
and
nop
nop
cli
and
aas
push
cmp
mov
aaa
jns
mov
xchg
loopne
dec
repnz
xor
fstp
add
int
jmp
or
jecxz
popa
xlat
or
dec
out
and
add
call
mov
jmp
into
jmp
in
test
mov
adc
clc
and
inc
push
cmc
cmp
xchg
(bad)
bswap
or
cmp
mov
xchg
mov
push
enter
push
popw
leave
aas
popf
jnp
mov
movs
sub
data16
jbe
(bad)
ins
adc
ins
xor
outs
sub
and
sbb
push
dec
fwait
repz
jmp
pusha
into
push
sbb
xor
ja
add
fmul
and
sbb
jge
push
push
add
jbe
adc
fidivr
and
enter
pop
cmp
add
jecxz
mov
sbb
test
outs
bswap
mov
pop
and
loope
sti
cmps
jmp
ins
loopne
xor
mov
jecxz
sbb
sub
pop
xchg
sbb
and
imul
mov
dec
and
adc
inc
inc
inc
mov
add
mov
mov
repz
inc
and
out
in
mov
adc
sbb
gs
aam
mov
mov
push
adc
adc
(bad)
lock
fdivr
pop
push
popf
les
push
ret
inc
and
sub
stc
pop
mov
lods
ja
lahf
jecxz
aas
inc
dec
cdq
cmps
setl
shl
add
mov
jbe
bound
or
mov
fist
lods
imul
adc
jge
xor
xor
fist
sti
adc
movs
das
repnz
lahf
inc
aad
retf
imul
loopne
retf
mov
cmp
scas
sbb
int3
pusha
mov
popf
or
cld
call
loope
jg
out
xchg
push
mov
lock
mov
fwait
or
loope
jne
jp
movs
or
repz
fnsave
(bad)
mov
jbe
sub
or
lods
retf
cmp
cmp
sub
addr16
pop
popa
std
mov
adc
sub
adc
cs
push
pusha
sub
sub
ror
or
push
xor
lahf
aam
xchg
outs
imul
inc
js
loopne
xor
push
mov
dec
or
(bad)
push
push
push
loopne
xchg
and
out
ds
neg
and
rcl
pop
int
aaa
sti
lds
inc
push
adc
push
int3
add
pushf
xchg
mov
jnp
div
popf
leave
mov
ds
ins
lods
mov
cmp
(bad)
dec
add
test
push
lods
iret
cmp
(bad)
stc
aas
daa
and
cs
push
mov
out
js
mov
xor
jl
inc
das
je
mov
loopne
in
cmp
push
sar
xchg
cs
pop
cmps
outs
dec
ret
dec
test
xchg
sbb
ror
push
mov
dec
repz
pop
and
sub
cmps
pusha
data16
dec
cwde
in
out
or
sbb
(bad)
in
inc
xchg
dec
loop
fsub
sahf
or
(bad)
out
cmps
xchg
pop
xchg
sub
lea
cwde
pop
sub
scas
outs
dec
add
adc
xchg
jae
(bad)
jle
push
retf
jmp
movs
repz
icebp
add
lahf
lock
xlat
mov
mov
mov
(bad)
pop
cdq
test
xchg
test
jne
in
clc
call
push
cwde
(bad)
cmps
stos
jle
bound
pop
jbe
sbb
push
movs
mul
add
hlt
push
cs
jb
(bad)
imul
pop
xor
add
mov
cwde
and
cmc
xchg
dec
stos
add
sub
mov
call
or
fadd
mov
push
adc
ss
xor
pop
loop
mov
je
es
mov
cmp
pop
lahf
pop
fisub
mov
jae
push
xor
sub
add
fstp
shr
inc
pop
pop
aam
je
or
inc
into
and
mov
sbb
sbb
popf
stos
fcomp
adc
jle
add
sub
inc
fnstcw
add
fdivr
ficom
gs
mov
ss
shl
mov
xchg
cmps
inc
mov
or
call
stc
sub
push
(bad)
cdq
mov
into
out
ds
lock
adc
mov
inc
jnp
dec
push
mov
mov
push
mov
scas
inc
adc
mov
cmp
mov
mov
dec
sub
outs
or
jne
mov
aaa
test
scas
cli
inc
in
sub
inc
fild
jle
test
and
dec
pop
(bad)
repz
jne
xchg
inc
push
stos
push
sub
push
dec
push
dec
rcl
outs
fwait
cmp
cmp
loope
jmp
je
cmc
mov
dec
xchg
xchg
push
inc
lds
sub
cmp
icebp
jo
push
xchg
mov
push
sub
xchg
cmp
xchg
mov
xor
cld
sub
pop
mov
mov
jle
icebp
icebp
pusha
xor
add
out
xchg
pop
fbstp
cmp
mov
mov
push
mov
dec
cld
jp
and
stc
(bad)
jae
movs
pop
lock
mov
mov
cmp
dec
sbb
and
cdq
inc
sbb
ss
cli
sub
das
mov
inc
retf
jg
es
adc
push
push
imul
push
stc
scas
rol
adc
repnz
leave
and
jne
xchg
add
ret
std
aas
outs
mov
jbe
loope
(bad)
jmp
mov
mov
pushf
movs
push
adc
mov
cmp
rcl
ret
jno
mul
js
lahf
and
ins
xchg
add
jg
inc
xchg
int
mov
dec
push
ins
pop
add
xor
push
mov
and
(bad)
jge
repz
mov
hlt
mov
popf
loop
mov
in
adc
add
xchg
sub
push
jmp
scas
mul
jmp
cdq
xor
jno
sbb
sbb
into
mov
dec
xor
jp
inc
leave
push
xor
inc
sub
pop
or
xchg
fdiv
loopne
cmp
lods
shr
test
retf
inc
imul
dec
ins
and
ret
mov
cmps
adc
xchg
sub
dec
jle
pop
stc
and
js
push
sbb
dec
push
mov
mov
retf
imul
dec
ins
jo
(bad)
xchg
sbb
pop
push
out
adc
fmul
retf
or
mov
cwde
mov
cmp
jg
in
jmp
(bad)
pusha
dec
pop
lea
xchg
shr
or
movs
pop
imul
dec
rcl
sub
push
mov
pop
xor
adc
xor
jg
cmps
or
pusha
ja
sar
(bad)
cwde
jae
or
fwait
sbb
push
dec
mov
div
mov
add
xchg
loope
jg
mov
pop
pop
xor
pop
pop
cwde
repz
ffree
int
lds
pop
retf
mov
lods
pop
sahf
lds
push
push
sub
dec
fidivr
mov
sub
adc
mov
push
outs
jle
std
(bad)
pop
fadd
sub
dec
xor
mov
xor
cmp
jmp
fwait
lock
shl
out
jo
push
shl
inc
jmp
xchg
inc
and
xchg
cli
es
mov
mov
pop
pop
imul
pop
xchg
mov
dec
lea
pushf
inc
dec
addr16
mov
in
cmps
push
int
iret
jmp
push
in
jmp
cdq
cmp
inc
mov
sub
mov
add
push
jns
sub
retf
dec
dec
(bad)
and
stos
mov
aad
pop
push
bound
frstor
push
call
sbb
mov
stc
enter
icebp
push
pop
cs
rcr
nop
jle
retf
clc
test
gs
ins
repnz
or
retf
stc
xchg
xor
ror
mov
sub
mov
les
mov
or
(bad)
in
add
cmps
neg
ins
xchg
cmps
sub
cmps
cmp
loop
and
ret
int3
cmp
add
stc
jns
or
out
icebp
fisub
pop
and
dec
test
rol
or
inc
xchg
ds
xchg
push
fnstcw
popa
ins
cwde
lock
adc
fldenv
sub
aam
sbb
pop
mov
cmp
(bad)
jmp
jmp
cmps
and
fst
in
mov
int
ds
inc
lods
cmps
in
loopne
xchg
push
sbb
jmp
call
daa
test
(bad)
jmp
lods
cli
cmps
std
xchg
and
or
jge
xor
jne
xor
pop
mov
and
mov
shl
adc
ror
or
pop
call
mov
and
sbb
or
out
call
sbb
mov
loopne
inc
mov
popf
shr
and
sub
fnstenv
out
jg
cmc
ror
je
push
leave
inc
rol
addr16
inc
and
xor
jne
(bad)
pushf
xchg
das
stos
pop
pop
push
adc
pop
push
outs
xchg
xchg
lds
outs
in
cmps
and
call
sub
movs
inc
shr
int3
std
jge
mov
mov
pop
or
fsubr
adc
mov
mov
repnz
fidiv
rcr
fwait
lahf
sub
mov
leave
mul
mov
aas
push
fdivr
jbe
loope
jb
sub
int3
push
nop
or
pop
ror
cmps
lahf
imul
adc
push
push
push
mov
mov
out
lea
mov
or
jb
push
adc
lea
clc
dec
jmp
xchg
pop
stos
push
mov
inc
xor
mov
mov
cmp
js
mov
adc
cmp
pushf
sbb
in
es
shl
adc
mov
(bad)
scas
fwait
arpl
adc
les
loope
js
mov
or
or
jl
mov
sbb
xor
sub
aaa
add
xchg
mov
mov
in
into
or
add
pop
out
inc
and
xchg
inc
loope
xor
adc
pop
jmp
and
stos
inc
jno
pusha
cwde
(bad)
mov
(bad)
fst
push
lock
or
retf
jp
lahf
pusha
ins
leave
aad
xor
in
mov
sahf
or
in
dec
leave
scas
cmp
and
mov
inc
ss
fcomp
lahf
cmp
xor
(bad)
pop
fadd
inc
and
jg
xor
mov
cmp
mov
dec
sbb
outs
mov
and
lds
inc
lock
push
bnd
(bad)
imul
xor
mov
cmps
xor
cmps
fsub
xchg
dec
sahf
jl
ret
push
pusha
mov
mov
inc
sahf
pop
movs
cmp
jmp
(bad)
fimul
xor
add
jb
mov
lock
movs
call
add
and
stos
stos
xchg
cmps
cmp
jecxz
shl
mov
js
into
xor
pop
stc
in
test
in
add
cld
jo
call
xor
or
das
in
leave
out
or
ins
inc
(bad)
cmp
and
or
and
les
frstor
add
cmc
cmp
test
sbb
leave
pop
cld
out
jbe
fwait
jo
pop
das
movs
xchg
jo
std
sbb
test
fmul
div
fsubrp
mov
or
push
mov
jmp
aam
jno
ins
addr16
xchg
xchg
cs
mov
fs
loope
in
sahf
repz
loop
cmp
inc
outs
rcr
out
nop
cmp
lods
out
inc
and
fdivrp
lea
jg
mov
xor
add
das
xchg
xor
mov
jle
jecxz
push
sbb
cs
imul
pop
fild
push
jp
push
dec
test
mov
add
mov
out
imul
fmul
xor
or
mov
in
pop
cld
imul
pusha
push
scas
mov
mov
fild
jae
daa
aam
jmp
or
sub
dec
sub
mov
imul
int
inc
pop
mov
pop
adc
sub
ret
mov
jne
adc
in
cmp
push
movs
mov
jmp
push
iret
push
push
sahf
mov
inc
test
xor
mov
mov
mov
aas
xchg
pop
ins
mov
rcr
dec
push
mov
out
cmp
adc
ds
ds
pop
fld
sbb
mov
mov
xor
outs
inc
loope
popf
push
push
pop
inc
jmp
cmp
dec
push
mov
push
push
popa
fist
mov
xchg
cmp
sti
fisub
sub
or
mov
dec
jg
mov
repz
and
jge
cld
mov
pop
and
repz
cmp
out
inc
inc
lock
push
mov
mov
xchg
movs
jge
xor
and
mov
add
test
sti
mov
and
and
icebp
ret
pusha
inc
dec
call
push
inc
fcmovu
call
outs
or
(bad)
or
imul
bound
adc
pop
test
mov
test
popa
leave
cmp
xor
xchg
or
(bad)
fstp
nop
xlat
ficomp
fwait
mov
pop
retf
xor
imul
pop
in
test
repz
aad
jmp
ffreep
add
std
inc
mov
adc
sar
es
ins
jecxz
and
inc
into
js
sub
or
iret
adc
sub
popf
jbe
aad
popa
ins
cmc
sub
lahf
add
fdivr
sar
dec
dec
push
mov
repnz
push
loope
jne
push
ret
cmp
popf
lea
(bad)
fcom
cmp
ret
leave
test
push
cmp
sbb
xchg
xchg
sbb
rcl
daa
pop
shl
jmp
push
inc
xor
jp
pop
mov
scas
imul
test
daa
sahf
mov
inc
or
fcom
(bad)
mov
repnz
cmp
lea
loopne
shr
call
jle
mov
mov
cmp
in
ins
fld
imul
sbb
inc
pop
pop
jg
xchg
sub
push
inc
xchg
pop
mov
adc
adc
jns
mov
mov
sub
cli
xor
cmp
rcl
aaa
imul
jno
sub
stos
in
imul
jl
in
xchg
cmc
lods
iret
add
lds
cs
adc
inc
xchg
in
or
scas
cmp
iret
retf
mov
ins
pusha
and
jg
push
inc
sahf
push
fild
rol
(bad)
dec
int3
js
ror
lds
or
inc
out
out
ret
dec
repz
jmp
mov
in
adc
sub
inc
pop
dec
adc
aad
push
movs
rcl
cmp
jne
ror
xchg
and
inc
addr16
test
add
xor
push
in
pop
ja
inc
lods
ficomp
aaa
push
xor
out
inc
sub
jne
cmp
out
sbb
popf
adc
popa
mov
mov
adc
fadd
or
scas
or
mov
sbb
clc
or
pop
lds
stc
push
xchg
mov
shl
jbe
sub
cdq
sub
jp
push
cwde
or
sahf
jp
das
add
mov
ficomp
or
fidiv
fs
imul
fdivr
sbb
xchg
int
xor
daa
fdiv
and
fadd
jne
jl
and
jb
fcomi
(bad)
sub
ins
out
fs
and
icebp
add
int
movs
aaa
movs
(bad)
inc
jne
cmp
test
aaa
ret
call
jecxz
test
xor
cmps
(bad)
cwde
lds
cmp
cmps
or
loopne
leave
xchg
mov
xchg
mov
cdq
mov
ret
adc
mov
mov
inc
xor
lods
aam
adc
jg
xor
add
stos
stc
xor
pop
cmp
inc
mov
sub
bound
repnz
fcomp
add
jecxz
lods
retf
rcl
sbb
leave
ret
mov
cmc
mov
loope
repnz
sbb
jge
popf
jl
fcom
jp
push
and
xor
mov
mov
cmp
in
or
mov
test
adc
push
push
mov
test
or
(bad)
mov
xchg
into
push
push
jle
rol
outs
mov
cwde
mov
ss
(bad)
fadd
(bad)
(bad)
in
repnz
repnz
fs
es
scas
or
mov
push
sub
push
inc
sahf
dec
imul
add
push
xchg
xor
pop
fsubr
jp
pop
inc
jae
ja
test
mov
mov
repz
push
test
dec
sub
push
add
jne
and
fisttp
inc
sub
push
bound
xchg
rep
call
mov
pop
mov
stos
lds
int
xchg
lea
push
pop
in
(bad)
mov
data16
jns
pop
icebp
and
std
xor
adc
jl
vcomiss
sbb
inc
lahf
add
pop
cmp
jmp
push
pop
aas
les
adc
jns
sub
out
inc
pop
and
pushf
pop
rcr
shr
push
cmp
movs
test
pop
mov
jnp
sbb
aaa
(bad)
lock
test
ret
xchg
repz
enter
test
fwait
cmps
jnp
xchg
in
in
call
popf
(bad)
mov
or
xchg
sub
daa
pop
xchg
jno
adc
movs
test
dec
sub
stos
outs
mov
cmc
enter
fs
fild
jg
ror
xchg
jge
call
ror
sbb
sbb
jp
push
sub
mov
adc
pop
mov
sbb
(bad)
jae
enter
fidivr
je
xlat
add
clc
cld
and
mov
dec
cmp
adc
cmp
jl
test
ins
imul
mov
hlt
leave
iret
aad
dec
and
addr16
jno
inc
push
xlat
cli
inc
cwde
rcl
sbb
idiv
fs
mov
stos
cmp
cld
scas
push
outs
(bad)
clc
pop
add
inc
cwde
xor
mov
cmp
into
aad
mov
push
xor
ret
jmp
sbb
mov
fdiv
aas
xor
sar
nop
call
shl
call
adc
(bad)
pop
std
ror
loop
sub
aad
es
add
stos
sub
and
je
popf
push
movs
loop
mov
xlat
fimul
out
neg
cmc
or
adc
mov
lock
push
sbb
ins
dec
repnz
mov
stc
mov
(bad)
aas
xor
xor
pop
xchg
cmp
push
push
repz
jle
pop
mov
test
xchg
or
fnstcw
das
imul
lods
mov
xchg
bound
sub
jns
das
push
lods
jae
shl
cmp
pop
mov
jg
lods
fisub
(bad)
cli
loope
stc
sub
push
inc
dec
push
(bad)
and
adc
mov
push
xchg
out
cld
outs
push
jne
jno
outs
pop
pop
mov
jcxz
ss
sub
cmp
cmc
in
xchg
popa
retf
jno
xchg
pop
fs
sub
(bad)
mov
ja
mov
dec
adc
(bad)
clc
dec
add
jle
cmps
and
pop
cmp
call
xchg
popf
daa
shl
loop
fisub
dec
dec
clc
in
aam
adc
push
mov
cmp
fs
inc
rcr
push
fdivr
pop
jle
sbb
mov
test
test
push
daa
pop
push
retf
or
jp
das
sar
xchg
push
ds
aad
xchg
test
loopne
enter
jae
sbb
jbe
cmp
inc
not
jl
jp
dec
mov
nop
push
sbb
add
pop
mov
sbb
sbb
jae
daa
ret
mov
jo
and
dec
mov
lock
in
push
jb
pusha
test
ret
and
or
jg
iret
sbb
inc
and
fistp
inc
pop
icebp
jno
call
call
test
adc
mul
pop
push
mov
sets
int
sbb
idiv
dec
rcr
push
int
xchg
xchg
in
cmp
cmp
adc
xlat
xor
and
leave
cmps
xor
xor
mov
mov
jnp
jno
fs
ins
imul
xchg
shl
sbb
cdq
fst
hlt
shl
xchg
rcr
int
cs
test
jg
(bad)
ficom
rcr
xchg
mov
or
inc
pop
(bad)
ins
sbb
pop
outs
popa
outs
out
mov
xchg
adc
cli
dec
mov
or
xchg
jmp
rcr
(bad)
out
cmp
jno
out
ds
add
push
call
(bad)
jecxz
mov
pop
fptan
fldenv
sti
jns
add
and
xlat
add
imul
cdq
cwde
mov
push
pop
mov
sub
ds
cmp
mov
test
mov
mov
jno
inc
jmp
sub
pop
retf
sbb
push
pop
mov
xchg
cwde
pushf
daa
js
pop
jbe
or
xor
scas
retf
sub
bound
xchg
pop
retf
push
imul
(bad)
xchg
shl
test
icebp
clc
sub
stc
or
sbb
adc
pop
xor
shr
and
das
gs
loope
sbb
sbb
iret
call
jp
xchg
mov
stc
pop
sub
sbb
in
cli
mov
inc
imul
xchg
add
out
ret
ss
pop
clc
pop
push
repz
xchg
ins
mov
xor
nop
or
dec
or
dec
aas
dec
sub
retf
adc
pop
inc
jle
loope
inc
and
mov
xor
mov
cmps
das
int3
mov
retf
stos
cmp
sahf
or
imul
sbb
js
mov
push
cmp
out
pop
inc
xchg
dec
stos
sbb
mov
int3
xor
cmp
shl
aas
fst
sbb
or
inc
cmps
add
call
xchg
into
xchg
mov
fcomp
stos
(bad)
sub
in
or
dec
popf
outs
out
and
cld
dec
pop
icebp
mov
icebp
jge
ret
dec
fisttp
sti
stos
mov
adc
and
sbb
dec
sahf
aam
not
clc
addr16
lock
div
pop
inc
inc
dec
sub
sub
shr
jp
dec
xor
ja
xlat
out
sbb
shl
daa
inc
push
push
xchg
stos
sub
mov
pushf
xchg
aad
in
jle
add
mov
sbb
fdivr
icebp
ret
clc
lods
(bad)
jnp
pop
sub
leave
aam
or
out
loop
in
and
fwait
int3
cmp
mov
rcl
push
stos
jmp
imul
add
push
jo
movs
dec
pop
adc
jmp
ds
cmp
inc
pop
in
pushf
or
test
xor
out
inc
or
dec
add
jle
dec
lea
mov
in
and
lods
jne
lock
add
push
(bad)
fild
add
lahf
fcom
mov
mov
hlt
cs
