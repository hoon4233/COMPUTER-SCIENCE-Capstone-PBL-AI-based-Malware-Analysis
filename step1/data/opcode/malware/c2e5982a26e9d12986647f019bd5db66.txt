push
mov
push
push
push
and
sub
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
xor
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
rcl
mov
mov
add
mov
push
and
vlddqu
mov
cmp
aad
sub
add
icebp
es
and
add
lods
push
(bad)
inc
jmp
mov
add
add
test
nop
or
ret
inc
(bad)
loop
cld
and
cmps
inc
add
aad
adc
add
inc
inc
add
int
inc
in
mov
or
add
add
ss
ror
mov
add
es
addr16
add
mov
in
jmp
mov
addr16
add
loop
outs
jmp
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
dec
fmul
add
jp
mov
jae
pop
or
je
add
add
mov
pop
test
in
add
lea
pop
inc
and
xchg
add
jp
mov
lea
std
test
add
add
hlt
add
xchg
popf
push
(bad)
cmp
pushf
mov
(bad)
adc
add
(bad)
test
dec
inc
add
add
jb
mov
jecxz
pushf
dec
mov
push
mov
pop
inc
call
and
into
xchg
add
lds
mov
and
and
je
call
sub
mov
lock
add
add
or
xchg
in
enter
test
sbb
jbe
mov
cmp
or
inc
mov
add
inc
enter
test
add
add
and
xchg
add
hlt
(bad)
gs
in
into
xchg
call
xchg
mov
(bad)
ss
add
add
add
inc
sub
je
or
add
in
test
cld
add
xchg
add
add
mov
mov
mov
inc
or
add
inc
mov
sti
test
add
cmp
add
pop
in
inc
mov
das
fxch
add
mov
shl
aam
(bad)
add
and
add
or
popf
and
dec
fadd
stc
ja
push
inc
add
add
enter
ror
and
add
mov
inc
push
inc
add
into
xchg
xchg
add
and
aam
into
or
sub
sbb
add
push
jle
outs
and
mov
or
fsubr
pushf
jns
add
mov
lea
mov
out
and
or
into
add
mov
add
dec
call
gs
jp
lea
cmp
or
je
adc
or
and
pushf
test
pop
inc
and
xchg
or
mov
sbb
push
mov
add
cmp
mov
add
mov
test
xchg
jns
and
ret
add
inc
test
mov
push
pop
mov
adc
outs
and
push
mov
add
add
into
mov
xchg
mov
or
add
inc
and
or
cmp
pushf
dec
sub
cmc
ret
sub
inc
pushf
and
pushf
add
clc
pop
or
mov
mov
mov
sar
(bad)
fidiv
shl
add
mov
jbe
sub
add
rol
add
and
into
add
(bad)
cmc
or
pop
and
jp
add
jp
in
add
cmp
mov
jne
or
gs
jge
add
inc
or
sbb
add
ret
and
add
jp
(bad)
cmp
add
add
xchg
xchg
sbb
mov
test
add
mov
(bad)
fisub
outs
and
jmp
push
test
cmp
add
fstp
and
iret
xchg
enter
jp
leave
test
xor
loopne
sub
mov
sub
sub
int3
fwait
(bad)
and
add
into
or
and
sbb
push
loop
mov
test
(bad)
cmp
nop/reserved
lea
fadd
inc
adc
cmc
add
sub
dec
test
or
or
push
(bad)
and
xchg
inc
add
sbb
test
add
loope
dec
inc
adc
add
and
test
lahf
mov
or
test
sbb
sub
add
test
add
add
add
sub
mov
mov
mov
add
add
add
mov
fisubr
nop
and
mov
add
add
push
or
add
add
add
mov
cmp
hlt
and
xor
lock
mov
fmul
test
daa
or
or
int
test
or
sub
pop
jo
mov
(bad)
movs
or
sbb
add
mov
test
add
xchg
rcr
nop
add
test
or
xchg
jmp
mov
xchg
push
test
add
jp
(bad)
sbb
add
jmp
mov
int
add
mov
fld
int3
je
enter
add
and
iret
add
je
neg
cmp
add
adc
je
jmp
inc
test
or
lea
pusha
xchg
or
enter
jb
fisttp
cmp
mov
ins
dec
add
je
stos
and
pop
add
xchg
jg
jmp
inc
add
mov
add
popa
(bad)
cmc
push
ror
pushf
add
arpl
pop
or
push
dec
mov
add
add
inc
and
xchg
inc
push
push
jp
cmp
or
mov
push
test
add
add
movs
in
rol
into
outs
mov
test
add
sub
mov
shufps
add
jmp
mov
sub
mov
dec
xchg
xchg
add
jo
or
aad
jno
into
add
add
sub
push
mul
jnp
add
mov
or
add
add
mov
add
je
daa
mov
add
xchg
icebp
icebp
mov
cmp
pushf
dec
jg
jmp
inc
adc
cmc
add
sub
mov
sub
add
add
enter
add
and
test
add
rcl
mov
xor
je
jg
jmp
mov
sub
test
and
add
add
add
add
jmp
mov
and
jnp
cmp
adc
loopne
ja
jmp
mov
sub
test
and
aam
lds
test
xchg
jmp
mov
and
add
jb
mov
inc
lds
or
or
sub
int3
add
xchg
add
mov
(bad)
fadd
add
outs
dec
push
add
mov
add
mov
pop
sbb
add
jg
jne
add
dec
imul
test
add
cmc
int3
mov
and
add
and
test
ret
daa
mov
sbb
mov
clc
fiadd
jp
rcr
pusha
fisttp
dec
loopne
sti
sub
add
ret
fadd
add
pop
test
xchg
add
sub
mov
je
jmp
mov
shr
test
(bad)
and
sub
xor
add
add
lds
nop
test
jae
jp
mov
jne
add
and
sub
fsubr
mov
cs
test
lds
xchg
or
mov
fcomp
lods
pushf
fimul
cmp
push
test
add
add
(bad)
fadd
add
sub
push
test
add
xchg
jg
cmp
add
xchg
jp
push
pop
mov
(bad)
clc
je
sub
test
sbb
and
cmc
add
sub
mov
clc
add
add
push
add
pop
add
add
add
pop
out
stc
out
add
xchg
add
(bad)
add
pop
inc
jmp
hlt
ss
test
fdiv
jg
rol
or
pushf
ret
test
add
sub
sbb
add
je
sub
add
mov
add
mov
and
pushf
add
inc
(bad)
and
je
ret
add
fadd
mov
or
sub
dec
sbb
inc
pop
add
add
jmp
mov
sub
sub
lds
into
outs
or
sbb
(bad)
pop
and
add
jb
push
xor
and
xchg
jmp
mov
ins
add
xchg
mov
add
(bad)
and
add
jmp
mov
add
mov
mov
add
add
test
or
aad
sub
add
mov
sub
sti
(bad)
(bad)
add
add
(bad)
mov
add
test
je
and
push
test
enter
fxsave
add
add
inc
test
sub
mov
xor
fild
add
add
add
push
mov
sbb
(bad)
shl
add
add
or
sub
sub
mov
mov
pop
aad
lds
daa
add
add
mov
stos
jae
add
test
fadd
jb
(bad)
pushf
cld
add
jmp
add
xor
cmp
mov
add
cmovae
add
add
add
cmp
(bad)
and
inc
add
sub
pushf
dec
or
sub
and
add
add
je
push
mov
add
fimul
iret
xchg
in
dec
add
stc
(bad)
fisubr
mov
push
test
add
xlat
inc
mov
add
add
dec
test
das
or
dec
adc
and
add
add
(bad)
sbb
add
mov
add
mov
sqrtps
add
sbb
mov
sub
mov
fisub
(bad)
and
add
popf
add
sub
mov
cmp
hlt
and
inc
test
add
bswap
test
jb
pop
jb
or
loopne
sub
mov
add
add
and
aad
lds
mov
test
or
xor
aaa
ror
mov
nop
add
jp
test
or
lea
sub
mov
add
jg
jg
hlt
and
dec
dec
and
xchg
sub
mov
and
add
add
test
loopne
jmp
mov
int3
add
jge
add
jg
jmp
mov
and
add
add
rol
test
sub
jmp
mov
fldenv
sub
pop
and
add
dec
fdiv
mov
and
add
add
jl
and
js
test
in
add
jne
int3
add
adc
and
add
mov
push
test
dec
fadd
jmp
mov
and
dec
add
sub
add
xchg
add
xchg
hlt
add
pop
inc
and
add
add
mov
mov
push
add
add
jp
shr
adc
mov
out
test
add
fadd
int3
mov
sub
inc
inc
and
mov
xor
jne
sub
int
pop
fidivr
sub
add
add
and
sbb
xor
inc
pop
mov
add
inc
add
scas
and
int
add
test
and
fiadd
mov
dec
fdivr
test
inc
cmp
mov
je
jge
hlt
add
pop
test
lahf
inc
push
jg
cwde
push
push
paddd
cmp
or
pushf
mov
les
lods
sbb
outs
mov
push
xchg
add
sbb
mov
test
add
lds
dec
shl
inc
add
jmp
mov
mov
jns
lahf
mov
and
pop
test
sub
add
jmp
ins
popa
stos
aas
stos
ja
(bad)
sbb
mov
jb
add
or
pushf
inc
movs
mov
mov
xor
xchg
add
and
and
add
add
inc
jne
lock
fiadd
add
add
mov
sub
add
push
dec
jne
mov
and
out
push
dec
and
or
add
add
aad
add
mov
nop
sar
add
jb
lods
sti
add
cld
test
add
add
adc
in
mov
mov
jp
and
jmp
mov
call
push
(bad)
and
jl
cmp
add
inc
ins
inc
call
or
repnz
outs
cmp
pop
mov
mov
jecxz
hlt
add
xchg
jmp
hlt
les
xchg
mov
push
je
and
xor
add
pop
dec
shld
std
mov
xor
xchg
add
icebp
and
(bad)
push
loope
add
add
xor
jmp
test
add
add
and
add
mov
and
xchg
sbb
cld
and
mov
and
sub
add
mov
and
fdiv
icebp
pushf
stc
mov
popf
shl
add
mov
jmp
cs
icebp
jb
mov
mov
test
setns
mov
loopne
dec
loopne
mov
pop
sbb
test
xchg
hlt
and
lods
rol
add
xor
mov
mov
sbb
jmp
test
add
add
mov
lods
jmp
mov
add
add
adc
add
xchg
xchg
add
cmp
add
cmp
popf
ret
popf
rcl
test
add
sub
pushf
add
add
mov
mov
test
inc
ror
jp
and
add
mov
shl
add
jmp
pusha
je
add
mov
ror
add
sub
ds
xchg
and
idiv
or
add
popf
in
add
add
jmp
xchg
or
mov
or
add
ret
dec
ror
add
ret
shl
and
dec
add
popf
mov
add
pusha
fwait
dec
inc
pop
mov
cmp
mov
mov
jmp
mov
mov
mov
push
xchg
and
or
add
icebp
mov
mov
mov
and
or
dec
(bad)
or
or
mov
inc
and
jl
fild
add
pop
fwait
ins
(bad)
jg
mov
jg
mov
cmp
add
(bad)
xor
mov
in
add
mov
(bad)
scas
cld
and
daa
lods
sub
add
add
or
mov
imul
push
add
add
or
add
mov
shl
call
push
add
mov
shl
and
add
lea
(bad)
jle
inc
cmp
adc
or
push
in
mov
cs
and
repz
add
rcl
in
add
add
test
add
mov
(bad)
ficom
jne
or
je
sub
mov
mov
enter
sbb
and
sbb
lahf
add
cwde
add
(bad)
adc
retf
sbb
dec
inc
and
mov
mov
ins
enter
pop
xlat
mov
mov
jmp
mov
sub
int3
add
aas
test
retf
or
cmp
shld
std
mov
fld
add
hlt
add
add
add
mov
add
mov
jmp
mov
jb
add
test
in
dec
loopne
fcomp
popf
mov
imul
and
and
add
ins
iret
add
xchg
cwde
lock
adc
add
add
jp
icebp
scas
enter
push
sub
mov
jmp
ins
lods
xchg
sub
rcl
jb
idiv
cmovne
sbb
or
add
jmp
inc
test
or
call
add
out
push
xor
jmp
(bad)
(bad)
and
test
(bad)
push
call
and
loope
je
xacquire
jmp
mov
add
hlt
fwait
xchg
pop
pop
inc
mov
movs
fisubr
add
lea
xor
jp
mov
adc
add
or
mov
mov
jge
add
add
dec
dec
mov
mov
jb
mov
or
mov
ja
sub
add
(bad)
fs
jne
sub
loope
mov
shl
sbb
or
clc
jne
mov
add
test
add
jp
(bad)
cmp
test
int3
add
sub
mov
jmp
mov
outs
push
add
add
xchg
inc
enter
mov
and
inc
and
push
in
add
mov
pop
adc
mov
push
add
sub
mov
or
dec
loope
xor
inc
mov
add
dec
jg
mov
add
(bad)
sbb
add
xor
dec
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
mov
push
popf
call
mov
mov
aas
pop
jle
add
mov
jg
jmp
mov
push
sub
inc
and
(bad)
inc
add
aam
add
add
or
add
add
push
popa
(bad)
lods
mov
add
add
js
dec
inc
mov
fisttp
outs
add
add
mov
sub
mov
loope
add
add
inc
inc
and
sub
mov
xchg
mov
aam
jmp
mov
sub
mov
call
jns
xor
cli
add
hlt
test
xchg
fucomi
js
or
cmp
rcl
mov
shl
add
mov
add
(bad)
adc
repnz
lar
add
or
sub
inc
and
pop
or
add
mov
push
inc
iret
add
mov
mov
and
stc
inc
inc
aaa
push
mov
lar
add
add
mov
add
in
or
sub
mov
popa
test
mov
add
call
mov
mov
add
sub
cmp
mov
cmp
mov
in
add
call
jne
mov
sti
aaa
xchg
inc
(bad)
cmp
bound
add
(bad)
jmp
xor
push
pop
fsubr
add
iret
add
neg
inc
lock
jmp
mov
mov
fisttp
add
sbb
fsubr
add
inc
pop
cmp
adc
pushf
push
clc
cmp
gs
adc
jmp
mov
test
dec
adc
adc
outs
(bad)
fdiv
pop
mov
ret
std
mov
push
fwait
int
jmp
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
mov
mov
pop
ret
mov
call
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
or
add
add
add
push
add
add
adc
es
and
sub
add
mov
(bad)
mov
and
lds
aad
add
inc
add
mov
push
add
add
xor
inc
add
adc
and
adc
add
cld
add
sub
mov
dec
sbb
xchg
add
test
jnp
in
test
nop
pop
and
ds
inc
mov
hlt
jmp
adc
sub
dec
test
mov
pop
je
sub
or
mov
fcom
test
lods
and
add
mov
push
lds
sub
mov
add
js
add
mov
mov
sub
adc
and
cvtps2pi
mov
push
add
test
enter
sub
mov
mov
add
mov
movs
and
add
lds
mov
jg
jmp
lahf
test
ret
sub
int3
inc
mov
in
test
add
jmp
mov
xor
add
fisttp
sub
ret
mov
or
pop
or
lock
dec
jb
add
test
sahf
dec
ret
cmp
mov
lods
add
cwde
sub
popf
nop
inc
(bad)
push
arpl
xchg
repz
inc
add
mov
loop
movs
and
lds
jge
sub
gs
jmp
scas
nop
out
add
mov
pop
xchg
jp
imul
mov
mov
out
pop
add
sub
mov
jb
jae
sub
inc
jmp
imul
(bad)
jns
fisttp
mov
sub
jmp
scas
test
push
add
es
int3
call
clc
add
loop
and
cwde
add
es
inc
add
sub
mov
jg
jmp
mov
or
cmp
mov
jg
jmp
mov
(bad)
inc
(bad)
push
and
add
es
or
out
adc
mov
(bad)
clts
add
add
mov
sub
mov
add
pop
add
and
add
add
mov
and
sti
movs
dec
add
cwde
dec
ins
add
nop
inc
add
sub
shl
repnz
mov
sub
push
inc
add
hlt
add
mov
and
je
jmp
mov
sub
mov
sub
mov
jmp
mov
iret
repz
popa
popa
mov
mov
add
push
add
add
jmp
mov
cmp
mov
mov
xchg
and
add
ret
mov
add
call
xchg
and
add
mov
push
fdiv
mov
jmp
mov
mov
iret
sbb
test
lods
mov
push
push
push
mov
hlt
mov
mov
jle
inc
(bad)
(bad)
cmp
out
xor
inc
add
rol
and
adc
add
push
push
mov
pop
(bad)
(bad)
jl
mov
and
add
add
mov
ror
add
loope
adc
sahf
movs
pop
push
mov
lods
jmp
mov
add
cmp
inc
add
cmp
inc
(bad)
adc
mov
jmp
mov
add
(bad)
sub
jmp
and
pop
popa
popa
mov
popf
xchg
inc
add
das
push
dec
add
jp
mov
xor
add
jmp
stos
cdq
hlt
in
pop
pop
pop
out
mov
jmp
adc
enter
mov
call
sub
(bad)
mov
add
push
jne
and
jmp
(bad)
shufps
popa
dec
add
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
inc
xchg
dec
mov
mov
mov
push
arpl
mov
cmps
mov
cmps
aad
jle
inc
add
cmovl
popf
(bad)
and
mov
sbb
sbb
sbb
push
sub
int
push
je
jmp
mov
loop
stc
mov
or
jg
in
sbb
sbb
aas
test
ja
popa
inc
xor
(bad)
mov
dec
add
add
add
daa
and
or
and
jbe
sbb
cmp
repnz
inc
and
outs
cmps
std
int
mov
packuswb
inc
add
add
or
sub
mov
js
mov
add
adc
mov
dec
sub
mov
sub
xchg
mov
add
mov
dec
scas
(bad)
fs
push
and
sub
jne
jmp
repnz
sub
mov
mov
adc
add
inc
mov
arpl
dec
jo
mov
pop
add
add
ja
iret
jne
inc
and
mov
outs
jmp
mov
cmp
test
xchg
add
arpl
sub
mov
psubw
cwde
ja
add
inc
xor
pop
int
mov
pop
add
add
push
add
add
cmp
jle
mov
sbb
sbb
add
cmps
add
iret
add
test
add
sub
add
nop
pop
mov
aas
jb
mov
mov
and
(bad)
popa
inc
add
dec
add
add
ins
add
jecxz
pop
cmps
ds
mov
inc
and
add
inc
aas
push
jmp
stos
or
inc
and
push
add
add
sbb
iret
jp
aad
loope
mov
pop
imul
add
sbb
scas
cmp
mov
test
inc
ror
and
and
dec
cmps
push
nop
popf
pop
push
in
cmp
add
or
test
cdq
dec
pop
mov
and
push
pusha
add
push
inc
add
inc
out
lahf
out
mov
(bad)
jae
inc
and
and
rol
cmovs
mov
rcl
add
fcmovbe
and
jnp
mov
push
nop
sub
dec
mov
mov
scas
and
sti
ss
mov
xor
jge
inc
and
or
add
fcomp
aam
ds
add
inc
add
mov
push
lea
hlt
mov
(bad)
xor
mov
jbe
std
(bad)
call
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
sbb
fsub
and
mov
and
inc
imul
jo
(bad)
fs
jl
jo
ror
sar
lahf
jecxz
inc
je
mov
cli
pop
push
mov
dec
out
add
inc
sbb
stos
mov
fs
(bad)
clc
add
daa
jge
mov
and
punpckhdq
add
jbe
mov
and
bound
inc
and
scas
test
add
dec
ror
sbb
add
sub
retf
pop
jg
jmp
xor
and
sub
test
test
add
sbb
inc
and
shr
jmp
(bad)
sbb
add
xchg
push
mov
sub
mov
je
jmp
mov
mov
aas
add
(bad)
sbb
add
fild
inc
adc
je
jmp
xor
sub
mov
sbb
pushf
add
add
inc
outs
ins
sub
ret
test
mov
test
or
push
add
cmp
inc
and
jg
jmp
hlt
jp
mov
cmp
lahf
out
in
mov
fadd
mov
mov
outs
into
pushf
cmc
jle
(bad)
ja
bsr
jbe
add
inc
dec
out
add
ret
ds
in
inc
and
inc
(bad)
and
add
in
add
icebp
and
outs
jne
or
inc
and
movhps
add
push
or
mov
and
ret
fcomp
outs
mov
les
add
add
icebp
and
outs
(bad)
fnstcw
mov
test
in
xor
add
inc
mov
and
sub
sub
aaa
test
mov
outs
ins
sub
sbb
(bad)
jns
mov
inc
add
inc
retf
xor
mov
add
add
sbb
sbb
mov
and
ror
adc
iret
or
push
in
mov
add
mov
pop
xchg
and
dec
add
cmp
jecxz
je
pop
outs
and
in
add
add
dec
aam
out
inc
jmp
add
add
xchg
inc
pusha
ret
cmp
pusha
in
add
(bad)
setno
mov
scas
cli
(bad)
ja
mov
enter
dec
out
add
mov
cmps
inc
adc
cmp
cmp
mov
dec
or
in
add
mul
inc
outs
push
call
mov
mov
mov
or
stos
adc
jecxz
sub
and
add
add
imul
add
mov
cmp
xchg
je
cmp
add
inc
and
inc
sahf
jo
xchg
dec
add
mov
adc
enter
mov
mov
mov
jmp
mov
jmp
xor
data16
add
sbb
in
and
mov
dec
mov
inc
rcr
sbb
(bad)
mov
(bad)
jo
jbe
add
lods
add
add
xlat
call
pop
in
lods
(bad)
iret
and
add
add
add
add
push
enter
mov
jmp
sbb
lea
sub
inc
pop
inc
add
pop
in
outs
js
xor
mov
and
add
aas
add
xchg
dec
(bad)
adc
jo
dec
cmps
add
adc
add
test
cmp
inc
xor
mov
imul
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
xor
dec
or
mov
cmp
add
mov
mov
add
push
shl
cld
test
add
mov
(bad)
mov
out
add
add
scas
mov
dec
add
mov
mov
sbb
sub
push
add
mov
mov
in
inc
ss
scas
mov
add
sub
test
cwde
add
add
add
mov
imul
add
fisttp
and
add
mov
mov
mov
icebp
pop
push
mov
sbb
(bad)
jmp
dec
mov
add
mov
pop
js
test
ret
add
dec
mov
test
out
scas
add
mov
jg
jmp
mov
test
push
popa
lock
jmp
lds
xlat
pop
add
mov
add
sub
inc
and
je
inc
out
icebp
add
mov
sub
mov
sbb
shl
mov
repz
sti
mov
into
dec
dec
inc
sbb
xor
jmp
dec
test
dec
in
xor
(bad)
pop
add
(bad)
jmp
mov
and
push
add
pop
inc
movs
stc
sbb
test
fmul
jmp
dec
push
loope
pop
cmp
call
cld
add
in
jg
jmp
and
(bad)
lds
push
xor
mov
sbb
out
add
rcr
inc
and
rol
add
out
inc
and
mov
ret
(bad)
jmp
aad
xor
cmp
mov
in
subps
sub
add
scas
mov
add
(bad)
sub
mov
xor
pushf
ds
shr
pop
add
mov
(bad)
mov
inc
push
and
(bad)
and
scas
add
mov
test
add
add
jmp
inc
xor
pushf
adc
add
dec
test
fcmovu
or
daa
inc
cdq
cmp
inc
sbb
add
xlat
add
pop
add
cmp
sub
arpl
into
and
add
add
sub
xor
cmp
inc
(bad)
add
sub
mov
and
push
test
add
jmp
(bad)
mov
mov
fmul
test
mov
(bad)
add
mov
cmp
xor
mov
psllw
mov
jecxz
sub
cld
aad
jp
sub
test
xchg
jne
mov
sub
mov
and
repz
mov
and
add
adc
nop
and
xor
in
rcl
sub
jmp
mov
fimul
sbb
cmp
push
jmp
mov
lea
pop
gs
inc
mov
mov
push
(bad)
lds
mov
and
pop
add
push
fs
sbb
outs
push
add
mov
add
pop
add
add
and
push
pop
(bad)
les
loopne
lds
add
ror
xor
arpl
jmp
mov
pop
test
add
aaa
ds
ror
xlat
dec
mov
add
shr
(bad)
dec
cwde
mov
cdq
ja
add
jmp
add
imul
jmp
add
add
mov
add
ret
(bad)
lds
pop
enter
nop
add
jne
mov
add
mov
pop
test
sub
add
and
test
add
add
inc
lods
jmp
(bad)
(bad)
add
and
add
add
jle
add
and
add
mov
add
sub
add
mov
je
daa
scas
add
mov
cmp
sub
jl
sti
ret
imul
add
jmp
test
add
fisttp
add
nop
xor
loope
pop
add
aad
add
push
push
mov
and
mov
int
out
sub
repz
jmp
adc
test
pop
add
xor
jmp
mov
sub
add
and
add
add
scas
mov
(bad)
add
mov
test
xchg
add
jne
mov
mov
add
inc
jmp
mov
and
add
or
jle
add
loope
add
add
push
rol
jmp
add
add
or
jl
daa
push
mov
inc
and
aad
mov
add
xchg
and
cmp
sar
or
mov
mov
mov
pop
and
push
mov
arpl
push
add
sub
outs
add
mov
ss
movs
(bad)
(bad)
add
xchg
pop
cmp
mov
test
add
sar
scas
push
retf
add
call
and
ds
add
jmp
and
mov
cmps
mov
add
imul
add
(bad)
cmp
(bad)
ficomp
test
rol
dec
nop
nop
or
retf
sub
test
add
inc
mov
(bad)
dec
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
pop
cmp
add
loopne
jbe
pmulhuw
(bad)
cmp
add
add
pop
add
add
add
xor
jmp
adc
add
pushf
mov
mov
int
sub
add
add
sbb
test
mov
enter
push
inc
and
add
int3
mov
add
xor
adc
add
add
popf
mov
mov
ss
out
pop
add
shl
pop
xor
jle
sub
mov
jg
jmp
mov
xchg
call
and
popf
mov
repz
pop
or
stos
mov
jnp
ins
push
mov
and
cmp
push
add
add
daa
test
cli
popa
xchg
mov
and
add
and
stos
jmp
mov
sub
dec
shl
inc
add
jg
jmp
mov
xchg
sub
mov
sub
ja
add
in
add
add
add
leave
mov
loope
mov
bswap
inc
fcmovb
push
jmp
into
mov
xor
add
and
add
popf
mov
add
ja
mov
add
mov
je
mov
add
add
mov
pop
and
add
xchg
(bad)
xchg
mov
jmp
or
adc
mov
and
add
cmovg
push
add
add
xor
and
add
sub
and
repz
popf
mov
js
sub
add
outs
add
add
test
add
xor
xchg
shl
push
and
adc
and
and
add
sub
stos
add
outs
test
movs
add
or
in
add
xor
(bad)
jbe
add
jmp
mov
popf
xchg
xlat
add
(bad)
cmps
cs
add
add
add
add
sub
fiadd
xor
add
lods
add
xor
add
sub
mov
movs
(bad)
retf
add
add
add
pop
add
add
retf
add
jae
add
add
add
test
and
add
mov
jns
cli
mov
add
(bad)
and
add
mov
pop
xlat
fimul
pop
mov
jg
jmp
push
test
sub
mov
jg
jmp
test
xor
movs
jnp
push
and
and
add
dec
(bad)
pushf
add
xor
add
add
fst
push
out
or
jg
or
mov
sub
mov
push
std
xor
add
(bad)
cmp
adc
xchg
xlat
mov
push
sbb
pop
int
test
les
stos
add
(bad)
out
pop
add
add
add
mov
imul
stos
inc
dec
shl
rol
add
and
add
mul
test
mov
cld
aaa
cdq
(bad)
cmps
cs
stos
(bad)
punpcklbw
add
xchg
dec
add
jle
test
xor
add
sub
mov
mov
add
add
add
test
dec
sub
mov
add
stos
add
add
test
rol
jp
(bad)
mov
add
js
add
add
pushf
add
mov
jmp
icebp
jle
add
rol
add
int
and
add
add
int3
test
popf
add
xor
(bad)
lahf
add
add
add
imul
add
sub
(bad)
cmps
movs
add
or
mov
pop
stos
prefetchw
or
mov
clc
hlt
add
add
mov
bsr
add
lods
test
add
add
add
add
comiss
pop
out
movs
lock
add
shr
mov
stos
mov
mov
xchg
add
xlat
add
add
ja
push
div
aas
(bad)
and
je
jle
jle
xor
mov
sub
std
ds
mov
add
jg
inc
add
and
jbe
and
mov
stos
jnp
jmp
mov
and
jp
inc
push
inc
fs
mov
je
cld
add
add
mov
cli
gs
scas
retf
add
add
(bad)
mov
ss
jmp
mov
mov
push
or
add
fmul
test
push
add
mov
xor
mov
adc
pop
int
inc
lea
ja
add
jmp
test
cmp
add
mov
and
jle
mov
add
test
xor
xor
enter
fstp
sahf
aaa
add
or
add
leave
sub
mov
lods
je
jmp
mov
add
sub
pop
fldcw
add
jmp
mov
movs
sub
iret
cmp
push
add
jmp
mov
add
sub
jle
and
movhps
add
add
push
add
or
xchg
jne
ins
pop
sbb
add
ins
rol
fadd
mov
test
je
jmp
mov
daa
rcl
ds
and
pop
je
mov
add
jnp
cli
and
add
push
sub
mov
push
mov
scas
adc
add
test
xlat
mov
test
add
add
push
into
stos
sbb
test
add
xchg
inc
add
add
jle
icebp
out
loopne
mov
je
jmp
aaa
test
test
sbb
and
xchg
or
add
add
add
xchg
xchg
sar
mov
and
je
jmp
cmc
pop
in
add
add
pop
jne
dec
mov
test
fadd
add
and
and
add
cmc
cs
dec
and
cmp
mov
jmp
add
push
cwde
add
pop
mov
psrlq
add
add
cmp
adc
add
pop
adc
mov
and
psllq
add
or
mov
add
mov
add
iret
inc
pop
in
iret
test
push
add
jmp
mov
sub
and
push
scas
popf
mov
push
add
and
stos
add
add
sub
repnz
bound
je
mov
mov
xor
js
jbe
and
xchg
sldt
lods
jmp
mov
sub
mov
je
inc
add
add
jmp
mov
inc
(bad)
int
mov
and
add
xor
call
cmp
add
ja
repz
push
add
jmp
mov
mov
mov
add
push
rol
add
lods
test
popf
jmp
fs
movs
add
into
bound
jno
mov
mov
mov
ret
add
cmp
and
xor
jnp
xchg
test
xlat
je
add
add
add
test
mov
inc
add
fild
cmp
repnz
push
add
add
xor
mov
xlat
sbb
clc
add
xchg
mov
mov
jmp
mov
mov
in
add
repnz
jg
fmul
add
and
xor
add
adc
jp
add
push
out
mov
add
movntq
mov
mov
bound
add
dec
xchg
and
add
ins
ja
and
repz
lea
ja
cmps
cmp
or
inc
shl
pop
mov
sbb
repnz
test
add
add
ror
add
lods
xor
xor
mov
mov
bound
mov
mov
sub
mov
ss
enter
movs
jnp
dec
add
or
and
add
add
test
add
add
mov
cmp
xor
inc
push
pop
add
adc
imul
jecxz
pop
add
or
stos
add
fild
scas
dec
add
add
clc
add
adc
dec
dec
mov
imul
add
fld
mov
jmp
mov
mov
outs
xchg
jg
add
add
mov
cmove
mov
mov
cmc
mov
cmp
dec
gs
and
inc
jecxz
add
mov
mov
mov
inc
push
add
movs
jne
stos
jp
(bad)
push
rcl
add
add
cwde
add
inc
mov
jmp
(bad)
sub
mov
jo
ss
das
and
push
add
pop
or
jmp
(bad)
jmp
add
pop
push
pushf
dec
jmp
(bad)
out
cld
mov
add
xlat
and
test
sub
stos
add
add
add
test
fld
sar
mov
or
mov
xchg
(bad)
popf
mov
cmps
cs
add
or
loope
stos
mov
call
mov
loopne
mov
jp
inc
test
inc
add
sbb
push
pushf
inc
and
jmp
mov
stos
test
or
add
pop
mov
mov
and
ffree
push
mov
xor
test
or
and
add
pop
pop
ret
mov
(bad)
and
jg
add
mov
add
add
mov
jb
adc
dec
add
add
test
add
popf
loop
or
and
mov
jmp
test
inc
add
and
add
add
rol
fidiv
(bad)
mov
cmp
add
repnz
jmp
test
and
or
add
mov
cmp
add
mov
add
xor
xor
add
jp
outs
jae
nop
xor
test
pop
fst
scas
popa
mov
adc
es
ins
xlat
fcmovne
mov
or
and
xor
cs
test
fistp
repz
aad
test
call
inc
jb
hlt
in
arpl
mov
xchg
add
push
adc
in
adc
out
fimul
xchg
or
int
fisubr
inc
fs
not
bound
js
and
push
dec
mov
sub
adc
cmps
pop
xor
or
std
cwde
pop
pop
(bad)
inc
mov
jmp
or
add
addr16
cmp
call
pop
test
addr16
je
jl
push
push
xor
push
stc
sbb
pop
or
or
(bad)
int3
scas
sbb
sbb
pop
mov
jecxz
dec
adc
xor
pusha
daa
dec
arpl
and
cmp
sbb
imul
dec
shl
mov
mov
push
jb
retf
xor
mov
pop
xchg
mov
mov
sub
xchg
data16
pushf
or
push
and
stos
call
adc
enter
pop
dec
sub
mov
aad
jno
ins
cwde
pop
mov
fdivr
mov
iret
inc
test
mov
cwde
repz
(bad)
mov
xchg
lds
and
adc
aaa
bound
mov
sbb
rdpmc
scas
imul
xchg
loopne
mov
sbb
out
ds
fcom
adc
outs
pop
idiv
mov
clc
scas
pop
arpl
mov
aaa
je
(bad)
sbb
xor
(bad)
stc
jge
cmp
push
jmp
xchg
push
cmp
js
int
jg
movs
outs
fcmove
loop
mov
js
adc
inc
sub
jno
retf
dec
out
out
cwde
enter
cmp
les
sar
cld
xchg
inc
out
inc
add
or
xchg
xchg
push
inc
outs
pop
gs
leave
outs
mov
push
fld
xor
retf
push
mov
xor
cmovl
fs
das
sti
ret
out
pop
(bad)
and
jle
js
mov
rcr
push
call
in
cli
mul
aas
stos
nop
cmps
pop
leave
lods
call
adc
jns
out
out
mov
lea
mov
cmp
scas
adc
(bad)
out
call
xchg
das
(bad)
jmp
and
out
outs
add
les
mov
xor
cld
xor
push
popf
pop
dec
sbb
push
inc
int3
rcl
js
movs
pop
or
arpl
int
cmp
(bad)
push
data16
mov
cdq
inc
and
push
sub
mov
ss
mov
(bad)
mov
icebp
push
add
sub
mov
inc
pop
and
mov
int
lea
and
and
or
xchg
enter
jge
ret
xchg
movs
dec
mov
pop
popa
fistp
aas
cwde
add
mov
sbb
xchg
or
xor
enter
xor
outs
sbb
xor
(bad)
fcom
fldcw
repnz
cmc
movs
fwait
test
cwde
jo
aam
sub
add
addr16
xor
push
jae
in
cmp
add
rol
ins
jp
xlat
pop
xchg
leave
mov
jl
mov
and
(bad)
adc
ret
or
cmp
pop
aaa
adc
aaa
mov
mov
add
daa
call
jae
pop
loopne
pop
xchg
xchg
xchg
add
les
or
mov
in
mov
cmps
div
rol
stos
pop
aam
adc
xchg
shl
aad
pushf
or
push
call
mov
(bad)
push
mov
pop
je
push
scas
lock
sti
mov
or
bound
xchg
icebp
stc
xlat
call
pop
ror
sub
fs
fs
gs
vpaddusb
stos
inc
cmp
in
iret
sub
pop
das
aam
and
imul
xchg
mov
dec
or
pop
sti
mov
int3
js
jo
ror
push
jae
pop
dec
or
add
loopne
daa
lods
jo
(bad)
pop
mov
add
addr16
fxtract
lea
frstor
push
sub
mov
ins
lea
lahf
hlt
outs
pusha
cli
pop
and
cmp
mov
and
mov
ret
add
sbb
adc
lods
lahf
dec
cs
fbld
or
mov
repnz
scas
push
pop
xor
fdivr
push
sbb
inc
es
(bad)
mov
xchg
bound
lahf
in
push
arpl
pusha
retf
xor
adc
mov
int3
push
xor
mov
push
stc
rol
or
lahf
shr
push
adc
and
mov
add
shl
fs
clc
sahf
hlt
push
xchg
fwait
xchg
sti
xchg
mov
or
mov
loop
xor
in
dec
cld
out
sti
adc
jmp
ss
and
xchg
push
js
out
mov
fwait
xor
adc
inc
imul
mov
cwde
pop
sbb
jmp
mov
adc
mov
cs
(bad)
es
mov
fwait
push
xchg
adc
test
cmp
or
je
add
or
jo
xchg
mov
push
xchg
mov
not
int
data16
cli
in
or
add
jnp
ss
test
stos
clc
add
inc
scas
xor
mov
rol
mov
aas
mov
inc
pop
enter
mov
and
aas
push
pop
data16
add
xor
adc
xor
push
stos
out
int3
(bad)
xchg
or
pop
mov
(bad)
jnp
pop
sar
in
and
mov
cmp
aas
or
cmp
sbb
sub
dec
leave
test
lods
inc
sbb
mov
std
xor
in
xchg
push
mov
mov
inc
mov
lods
lods
call
mov
movs
mov
mov
jns
pop
or
mov
jnp
ds
lods
repnz
pop
sbb
fs
mov
(bad)
mov
xor
jmp
ficom
cmc
add
pop
mov
sbb
push
jmp
or
sbb
and
mov
push
xor
lea
mov
enter
cmp
xchg
cmp
or
shr
adc
dec
mov
mov
aam
rcl
xchg
pop
mov
mov
push
or
jno
outs
ja
xchg
movs
aaa
adc
aas
or
aam
inc
xrstor
sbb
sbb
jb
sahf
xor
pop
lods
add
mov
cwde
pop
iret
mov
adc
inc
adc
stos
fcomip
push
repnz
ins
js
loopne
out
popa
lea
mov
fwait
inc
add
mov
or
jecxz
push
mov
jge
test
cmp
inc
jl
xchg
icebp
clc
dec
cmp
or
std
and
sub
pop
(bad)
int
mov
fisub
or
sub
xchg
ret
xchg
adc
(bad)
jne
(bad)
movs
mov
xchg
scas
adc
daa
shl
repnz
repnz
shl
pop
and
dec
cmp
popa
jae
jecxz
pusha
aam
xor
mov
gs
xor
nop
add
imul
inc
cdq
jle
sub
sbb
mov
sysenter
mov
and
pop
lods
cmp
cld
ret
push
fcom
(bad)
daa
sub
mov
sbb
leave
sub
sub
std
xchg
or
aam
cdq
mov
sbb
cmp
int3
push
inc
xor
int3
cmp
inc
loope
(bad)
test
mov
les
aam
mov
push
loopne
inc
sub
xor
pop
lock
fsub
jbe
push
enter
ror
call
data16
inc
test
inc
mov
push
xchg
shl
xlat
sar
test
jno
sub
dec
push
fs
adc
sub
adc
jp
pop
ds
jl
jp
add
and
fidivr
call
xor
mov
mov
jmp
lods
inc
mov
cli
inc
repz
adc
cmp
nop
arpl
mov
adc
mov
mov
aad
outs
pop
icebp
and
mov
inc
xor
cmp
push
inc
mov
inc
xchg
ds
cdq
and
push
mov
and
arpl
sbb
shr
add
sbb
adc
clc
adc
or
push
push
mov
xor
cmps
mov
stc
sbb
xchg
test
leave
nop
sar
daa
jmp
xor
ins
xor
fcomp
rol
out
xchg
cmp
les
xchg
gs
mov
addr16
out
test
mov
xor
mov
and
or
or
scas
imul
xor
aaa
inc
stc
test
sub
pop
xlat
xor
dec
not
pop
jbe
jns
or
pop
cmp
ret
movs
mov
or
or
push
jnp
add
test
popf
(bad)
test
pop
mov
shl
into
sti
dec
fsub
dec
xchg
loop
push
fisubr
add
lea
cmps
int
cmp
sub
(bad)
mov
sub
jnp
pop
ror
loopne
mov
movs
add
jg
scas
test
xchg
fsubr
ins
loopne
sbb
dec
sti
pop
mov
repz
add
icebp
je
sbb
fs
jle
sub
jae
cli
call
cmc
shr
popa
aaa
jb
or
sti
das
xchg
popf
add
mov
jmp
and
mov
lods
cdq
test
les
das
(bad)
(bad)
push
lods
mov
xlat
xor
lahf
inc
dec
inc
mov
xor
push
push
jns
fdiv
or
inc
pop
and
int3
aas
imul
mov
popa
xor
fidiv
shl
dec
test
loopne
lods
xor
inc
ror
leave
xchg
sbb
pop
cmps
lods
mov
xchg
pushf
adc
sub
ins
sbb
sub
adc
sar
ret
test
mov
adc
out
call
ja
lods
sbb
cmc
std
xchg
adc
addr16
push
aam
dec
mov
add
push
cmc
adc
into
dec
mov
retf
loopne
in
cwde
or
daa
es
outs
mov
fimul
sahf
or
inc
or
lods
cli
sbb
adc
cmp
inc
dec
mov
xchg
push
hlt
into
cmp
and
sbb
addr16
ret
mov
mov
in
sub
popf
or
pop
pusha
js
push
js
dec
or
pop
(bad)
daa
pop
iret
mov
imul
fcmovnb
cli
push
jno
aaa
mov
xlat
jle
adc
push
push
into
int3
out
mov
inc
ins
in
lods
sbb
ret
test
stos
cmps
sub
setbe
mov
sub
push
imul
int3
dec
(bad)
movs
ins
pop
inc
xor
or
jp
xchg
mov
add
inc
mov
cs
stos
aaa
les
fisub
fadd
jg
(bad)
sbb
push
mov
jno
into
mov
push
mov
push
popa
repnz
dec
loope
push
xlat
rol
fisubr
pop
pop
cli
stos
adc
pop
sub
sar
add
push
test
cmp
pop
jno
xor
or
xlat
fld
popf
test
cmp
pop
jnp
xchg
pushf
leave
cmps
dec
cmp
dec
fwait
ror
mov
daa
jns
sbb
out
fistp
call
jns
mov
pop
bound
push
(bad)
fabs
or
pinsrw
shl
stc
pop
sub
shl
mov
sub
retf
jmp
xchg
mov
mov
imul
shr
repz
pop
push
stos
call
outs
and
mov
cdq
inc
nop
pop
pop
mov
jg
jno
ficom
sub
cmp
out
ds
cwde
mov
in
cld
stos
pop
pop
push
imul
mov
sar
mov
das
and
cs
add
into
fwait
jecxz
inc
stos
sbb
cmp
(bad)
jle
push
sub
inc
in
call
jg
adc
jg
inc
pop
mov
mov
dec
xor
jl
or
(bad)
aam
mov
int
test
xlat
sub
jnp
out
imul
adc
jmp
scas
out
pop
and
push
cmp
ficom
leave
xchg
mov
iret
and
(bad)
adc
adc
and
int
mov
loopne
dec
hlt
call
or
jmp
cmp
adc
xor
jmp
jge
retf
std
mov
in
push
or
pop
scas
sub
and
rol
push
jl
gs
sub
adc
adc
jle
sbb
popa
test
out
sar
and
mov
adc
in
jo
hlt
inc
je
or
jae
gs
cwde
adc
lods
sbb
and
(bad)
repnz
daa
pop
mov
scas
dec
inc
mov
mov
mov
mov
mov
retf
or
sbb
enter
lahf
jns
xor
lahf
cmp
push
retf
adc
stos
fld
dec
sub
mov
jmp
jne
add
jmp
mov
mov
or
pushf
mov
mov
cmps
sub
xor
cld
push
dec
adc
xor
adc
outs
dec
(bad)
aas
inc
adc
loopne
push
mov
jg
sub
cmp
or
neg
cwde
cmp
mov
or
mov
retw
mov
push
jmp
inc
pop
push
xchg
iret
test
outs
fsincos
lods
es
adc
fwait
test
sbb
stc
xchg
xor
in
aad
out
push
mov
xchg
mov
hlt
std
pusha
lock
add
pop
in
rcr
dec
adc
mov
hlt
cli
jnp
and
xchg
mov
stos
or
je
dec
cmp
pop
pop
mov
shr
inc
jb
ja
repnz
pop
imul
pop
push
mov
popf
jo
jmp
sub
jmp
hlt
push
dec
mov
adc
add
stos
enter
xor
retf
or
and
fwait
mov
lds
push
sub
popf
outs
push
dec
pop
mov
cwde
cs
or
fwait
push
mov
pop
pop
jo
pop
mov
out
das
push
aam
xchg
xchg
mov
lock
pop
call
adc
adc
int
shr
retf
mov
mov
jle
jecxz
adc
loopne
cdq
lea
mov
scas
sub
popf
fcmovnu
outs
push
jns
mov
into
shr
sub
repz
mov
jo
and
stc
xchg
adc
sub
leave
mov
add
ins
lds
ds
xchg
inc
add
push
or
repnz
add
cmp
das
inc
adc
pusha
dec
pop
sti
jmp
or
(bad)
mov
outs
inc
cmps
pmullw
(bad)
movs
sub
lock
pop
xchg
cmps
fstp
sbb
pusha
repz
or
hlt
push
xor
sahf
mov
or
jne
or
or
mov
lds
or
ins
call
rol
push
cmp
repnz
ffree
repz
dec
jp
retf
dec
push
inc
and
ins
leave
adc
pop
mov
icebp
imul
test
in
js
inc
cld
add
push
mov
outs
or
pop
into
pop
push
in
fisttp
cld
mov
jmp
loopne
mov
pop
stos
dec
xlat
push
in
inc
popf
mov
xchg
inc
pop
mov
inc
aad
cmp
sub
lock
shr
mov
sub
adc
stos
or
mov
fdivr
jmp
dec
adc
xor
push
test
icebp
(bad)
rcr
mov
test
mov
inc
(bad)
mov
adc
es
xlat
push
retf
jbe
push
(bad)
das
call
call
ja
fs
mov
sbb
clc
ss
sahf
dec
stos
push
mov
out
mov
mov
push
pop
xchg
xor
jns
xchg
stc
div
mov
clc
add
mov
mov
mov
jae
aas
das
sbb
xchg
ret
popf
call
mov
pop
xchg
push
push
in
dec
xchg
jmp
cmp
xchg
lods
neg
stc
test
aam
mov
cwde
test
xchg
xchg
std
out
out
adc
mov
sbb
int
dec
fnstenv
cdq
dec
frstor
shl
jnp
add
retf
xchg
inc
mov
pop
cdq
cli
cmp
movs
ins
pop
loope
pop
movs
mov
pop
push
(bad)
setb
mov
sbb
es
fnstsw
pop
je
xchg
cmp
jnp
test
ret
ret
adc
sbb
pop
add
or
mov
lea
lds
xchg
cmp
lahf
aaa
dec
push
imul
cmc
dec
aas
xor
jg
push
and
stos
xchg
sub
int3
popa
nop
addr16
fwait
mov
sbb
push
(bad)
cli
das
jge
jo
clc
loope
mov
jmp
xlat
out
push
xor
mov
popf
in
(bad)
pop
sbb
xchg
inc
adc
mov
in
inc
sub
test
mov
daa
lods
push
jge
jp
mov
sbb
mov
stos
jmp
js
jmp
xchg
(bad)
(bad)
stc
push
lds
push
and
(bad)
ds
xor
test
lods
les
cmp
push
into
sbb
xchg
push
iret
stos
dec
push
or
hlt
icebp
inc
shl
shl
dec
nop
xchg
jle
xchg
ret
and
dec
cdq
daa
jle
add
xchg
mov
sbb
outs
xor
in
push
push
and
inc
pop
pop
sar
xor
aam
repz
xor
arpl
repnz
fldcw
shl
cmp
pop
push
daa
outs
stc
lods
pop
imul
fst
ror
push
iret
ret
in
push
in
mov
cmp
retf
cmp
mov
cmp
test
pop
adc
push
jp
out
pop
add
(bad)
sar
xor
fadd
lods
ror
jmp
in
movaps
or
fisubr
arpl
add
fcomp
push
pop
pop
adc
jp
imul
fld
mov
mov
mov
test
lgdtd
push
ins
cs
bound
ret
sar
cmp
je
mov
jb
jp
adc
push
out
add
or
mov
xor
fdivr
shr
mov
sub
stc
aad
call
push
cmp
adc
in
add
js
loope
add
push
cmp
mov
xlat
adc
dec
loop
adc
dec
packuswb
je
fdivr
push
mov
movs
jbe
lock
movs
sbb
jp
jnp
jb
adc
pop
inc
inc
outs
push
push
and
sahf
loop
adc
or
cwde
xor
jmp
adc
add
(bad)
jmp
cdq
or
pushf
ret
sbb
out
jle
dec
repnz
inc
pusha
imul
jmp
jb
xchg
fs
jmp
movs
xor
add
mov
cmp
fdivrp
mov
pop
jp
sub
sbb
push
int3
test
test
or
out
mov
stc
retf
ja
pop
inc
sti
xchg
mov
cmp
dec
push
stc
xchg
cmp
push
mov
xchg
icebp
sub
dec
lock
sahf
or
sub
in
cdq
mov
nop
fist
pusha
sub
fild
pushf
(bad)
fadd
shr
xchg
adc
ins
mov
shr
pop
mov
jp
mov
sub
mov
loop
sahf
sbb
push
movs
mov
sbb
xor
add
xchg
jnp
jecxz
movs
cmc
sbb
xor
mov
xchg
pusha
cmc
ja
xor
inc
adc
aam
mov
xor
mov
mov
push
cmp
ss
outs
xlat
jg
test
add
push
jg
xchg
retf
repnz
in
or
push
add
adc
call
(bad)
jg
int
dec
loope
aam
jmp
fistp
iret
sub
stos
clc
cmp
enter
cs
fnclex
mov
push
xchg
dec
push
in
cmc
push
xchg
adc
test
scas
(bad)
sub
xchg
ret
inc
and
mov
sbb
rcr
ret
fst
add
rcl
mov
push
adc
push
push
cmp
or
daa
fisttp
cs
pop
arpl
push
mov
test
xchg
or
dec
add
mov
mov
jns
inc
xlat
xchg
in
psubsb
repnz
xchg
loop
push
jnp
shl
xor
and
push
test
inc
sbb
sbb
mov
ret
fdivr
and
adc
pop
movs
mov
popf
jbe
push
loope
mov
inc
fisubr
in
sub
(bad)
xor
call
outs
enter
xchg
stc
dec
cld
aaa
aas
pop
aam
dec
adc
push
dec
(bad)
call
cmps
push
bound
or
or
dec
inc
aam
jmp
jb
pop
sub
call
out
lea
sti
adc
jno
imul
push
jge
rdpmc
dec
into
cld
int3
out
dec
push
cmps
xlat
cmp
sahf
jmp
push
fimul
jecxz
and
inc
stc
lods
retf
lock
in
inc
push
mov
cmps
lea
pop
out
outs
add
push
pop
jl
out
shl
data16
and
fcom
stos
dec
mov
icebp
sub
jae
dec
dec
mov
outs
push
out
pop
push
jl
dec
lods
xor
inc
jb
dec
lods
and
mov
or
test
cwde
mov
push
setae
xor
jbe
mov
mov
mov
or
dec
enter
sti
sbb
pop
bswap
call
pop
sbb
mov
xor
mov
cmps
sub
mov
ins
mov
lods
push
sbb
imul
scas
outs
cwde
enter
pop
clc
(bad)
sbb
imul
push
scas
sub
push
pop
xlat
arpl
dec
jne
pop
test
mov
dec
mov
les
and
mov
ret
add
mov
(bad)
out
cld
repz
(bad)
imul
repnz
repnz
mov
jnp
mov
jp
es
stos
xchg
mov
jno
aad
dec
push
and
jo
fist
mov
fsub
xchg
outs
mov
pusha
aad
pop
jnp
fucomp
ins
push
xor
jbe
in
rcl
sahf
out
test
cmp
fcomi
(bad)
repnz
dec
sub
inc
or
add
in
push
aam
xchg
hlt
sbb
les
into
mov
jns
dec
sub
retf
xchg
or
imul
push
mov
sbb
jmp
xchg
jecxz
shl
movs
push
mov
inc
sub
je
xor
and
jbe
fs
loopne
mov
add
inc
out
aaa
call
xor
or
inc
inc
fcom
adc
xor
mov
arpl
xor
inc
jl
(bad)
std
inc
cmp
xchg
enter
ficomp
push
jp
sbb
out
aaa
icebp
push
bound
inc
fsubp
ror
xchg
inc
adc
pop
outs
jge
sbb
adc
les
cmp
int3
popa
adc
movs
push
icebp
cdq
jbe
out
daa
imul
repz
out
cli
sub
in
iret
inc
sub
or
sub
sti
pop
pop
xor
cwde
push
xor
inc
in
mov
mov
xor
dec
jg
cmpps
push
mov
lods
xchg
or
sub
lds
jle
call
pop
fwait
mov
inc
mov
inc
push
and
faddp
mov
push
cmp
enter
jge
test
push
nop
sub
cli
call
mov
sahf
cmps
test
push
add
jae
sbb
xchg
xor
mov
sbb
pop
lds
out
aam
push
je
push
sbb
dec
xor
dec
push
push
push
cmp
hlt
shl
jae
inc
pop
push
xchg
and
in
leave
in
gs
icebp
mov
cmp
ss
mov
imul
in
es
(bad)
mov
std
loope
ins
and
loop
aad
jns
nop
xor
pop
and
or
ret
scas
and
pop
out
inc
pop
inc
inc
shr
clc
dec
add
loop
movs
out
cdq
pushf
popa
sub
inc
dec
not
inc
sbb
popa
mov
cmps
je
stos
stos
jo
dec
or
dec
loop
fiadd
jbe
mov
outs
test
or
add
sub
test
sahf
ja
in
add
xchg
loop
xlat
cmps
jge
inc
mov
out
inc
js
neg
mov
sbb
pop
mov
jbe
fs
cmp
pusha
and
push
scas
(bad)
nop
mov
and
punpckldq
jge
add
bound
and
jo
adc
mov
cli
jno
xchg
test
or
sar
fsubr
mov
into
outs
xor
retf
lods
test
iret
and
xor
popa
mov
or
sbb
pop
sbb
mov
stos
inc
jmp
fxrstor
aam
sbb
outs
inc
or
add
std
pop
xchg
push
sub
fsub
cmp
icebp
jge
xchg
add
imul
test
jb
mov
mov
cli
arpl
aas
mov
add
jmp
js
loope
scas
push
clc
in
mov
retf
mov
jle
cmp
add
pop
cs
div
jmp
(bad)
mov
push
and
popa
inc
xor
or
dec
push
das
mov
mov
out
(bad)
jns
sbb
in
push
sub
repnz
push
add
enter
adc
pop
(bad)
adc
cmp
add
sub
dec
xchg
jmp
fs
sbb
dec
lods
cwde
sub
mov
imul
daa
enter
popf
push
fcomi
add
ins
lods
pop
xor
and
pop
jmp
mov
movs
mov
test
int
adc
inc
sub
scas
sbb
jns
ins
sbb
jne
push
sbb
rcl
xor
dec
into
pop
add
dec
xchg
xor
inc
jb
cwde
sub
popf
pop
or
int3
jne
dec
aad
mov
pop
iret
loopne
and
iret
stc
in
add
cmc
dec
(bad)
aad
int3
lea
and
mov
and
imul
rcl
iret
(bad)
mov
sbb
xchg
and
movs
into
dec
mov
cmp
add
jae
bound
push
fnstsw
bound
pop
cwde
or
adc
add
lock
outs
in
pop
test
ss
stc
out
stc
int3
xchg
or
(bad)
inc
into
pop
repz
mov
inc
pop
add
les
mov
sbb
std
or
arpl
inc
gs
test
add
test
bound
and
push
out
movs
pusha
cmp
or
ret
mov
mov
adc
lods
mov
mov
or
xor
stc
loope
les
sbb
jb
pop
aad
cs
loope
or
mov
mov
ror
aam
das
call
arpl
jae
pop
jp
and
sbb
push
loop
std
add
xor
and
xchg
mov
repnz
sbb
add
ins
inc
sbb
pop
or
test
pop
movs
dec
pop
adc
mov
push
inc
and
dec
push
je
mov
xor
xlat
pusha
leave
cwde
inc
pusha
nop
test
pop
push
mov
mov
pop
pop
push
or
jb
bound
outs
jmp
das
rcl
icebp
xchg
call
sar
(bad)
cmp
push
inc
or
addr16
jo
fcmovne
sbb
push
xchg
movs
mov
xchg
jg
xchg
xchg
jns
jp
pop
cmps
push
push
shr
cdq
push
imul
scas
bound
mov
push
(bad)
mov
loop
mov
add
add
mov
mov
stos
enter
popa
sbb
int3
stc
loope
push
sbb
pop
push
nop
push
or
push
dec
or
ja
mov
pop
xchg
cs
retf
fiadd
mov
push
and
out
jmp
mov
clc
enter
lods
and
jl
inc
inc
fbstp
inc
fiadd
outs
in
daa
push
xchg
mov
(bad)
loopne
pop
xchg
inc
sbb
add
sbb
mov
shl
adc
repnz
cmps
mov
push
and
pop
sub
nop
xchg
data16
loopne
adc
inc
(bad)
or
sbb
mov
or
push
xor
fstp
cdq
push
cmp
pop
mov
xchg
stos
mov
std
xchg
lods
ss
xchg
mov
test
jg
and
and
es
add
adc
push
sub
(bad)
pop
sub
adc
sar
and
int
xchg
push
enter
outs
inc
(bad)
(bad)
cwde
or
idiv
pusha
fs
rcr
xor
aaa
or
dec
push
pop
sub
cmc
imul
call
mov
mov
ins
mov
xchg
pop
ror
pop
fstp
and
xlat
inc
push
jb
xor
dec
clc
out
add
mov
sar
mov
cli
dec
loop
jo
mov
test
dec
fwait
lods
sbb
nop
cdq
add
ror
pop
dec
rol
mov
add
retf
add
gs
dec
sahf
(bad)
push
in
shr
push
ins
adc
add
sub
or
xchg
mov
clc
dec
mov
dec
mov
addr16
rol
jbe
into
(bad)
mov
cld
mov
push
jecxz
lahf
loope
imul
mov
dec
aad
dec
retf
mov
xchg
mov
fild
and
out
push
dec
fsubr
aas
call
out
push
sub
imul
and
push
rol
mov
in
mov
scas
adc
shl
lods
add
inc
ror
hlt
lods
pop
xchg
and
adc
hlt
inc
inc
or
das
int
sahf
mov
stos
scas
pop
mov
inc
pop
into
cmp
mov
mov
aaa
test
or
cli
cmp
ficom
lock
movs
stos
push
stos
out
loopne
stc
mov
mov
mov
push
push
push
push
xor
fwait
mov
cmc
je
mov
adc
scas
sbb
ins
imul
xchg
sar
lock
push
fwait
mov
cmp
les
cmp
push
add
inc
xchg
cmps
xor
popf
dec
rcr
(bad)
das
ud0
add
dec
push
shr
ja
dec
or
in
je
cmp
push
push
sbb
xor
cmps
mov
shr
cmps
jnp
cmp
mov
push
jbe
jecxz
out
dec
sub
xor
mov
retf
pop
sbb
xchg
out
xor
fs
fidivr
push
jmp
pop
fild
pop
cs
test
pop
cmp
outs
mov
into
xchg
ins
mov
add
lods
js
pop
pop
xor
mov
and
or
stc
mov
repz
mul
ins
ss
xor
pusha
add
leave
inc
aas
sub
push
in
(bad)
or
mov
sbb
out
(bad)
mov
xchg
lds
aas
and
push
ds
jp
lock
mov
js
and
(bad)
fidiv
adc
xchg
out
xor
repz
pop
push
mov
movs
push
push
shr
mov
and
(bad)
and
mov
das
cmp
nop
push
inc
jne
nop
inc
call
popf
hlt
mov
mov
fisttp
or
test
push
mov
dec
ss
arpl
xlat
mov
push
mov
test
out
jmp
and
xchg
cmp
jecxz
hlt
fcomp
(bad)
bnd
push
cmp
ret
jp
rcr
aas
jle
adc
pop
push
add
lods
mov
fldcw
arpl
call
out
stc
scas
ja
mov
mov
sub
mov
inc
and
mov
xchg
pop
(bad)
dec
mov
cmp
(bad)
mov
jecxz
pop
mov
dec
pop
enter
pop
xor
jnp
dec
das
adc
repnz
or
out
out
add
or
lahf
xor
xchg
mov
pop
arpl
adc
ret
sar
cmp
mov
enter
and
daa
das
movs
aam
mov
into
pop
scas
pop
cmps
xor
mov
push
movs
jge
xchg
dec
cmc
fadd
mov
test
push
add
or
xchg
out
shr
push
out
pop
icebp
mov
inc
xchg
call
mov
and
test
cmp
and
and
(bad)
int
add
sbb
jns
ret
fsubr
inc
hlt
dec
push
push
mov
mov
(bad)
lea
mov
xchg
in
mov
sbb
pushf
dec
call
adc
mov
lds
out
push
lock
je
mov
arpl
push
sub
jge
aad
popa
mov
loope
shr
fmul
jo
aam
xchg
xlat
pop
(bad)
lea
mov
movs
call
into
mov
jo
mov
add
(bad)
ins
jae
mov
mov
lea
imul
xchg
int3
fstp
loop
add
sub
in
(bad)
push
je
(bad)
jecxz
loope
(bad)
mov
int3
sbb
icebp
icebp
or
imul
mov
lea
(bad)
clc
lahf
out
mov
sbb
dec
out
inc
(bad)
ins
jl
in
test
bound
sbb
in
mov
push
mov
adc
jmp
ret
out
sub
and
shl
call
ss
mov
in
push
sbb
mov
nop
cli
je
mov
sti
add
push
cli
lods
sahf
dec
lahf
ins
icebp
pop
ins
in
shl
inc
jne
daa
jg
test
pop
fild
outs
push
shr
jmp
jo
inc
(bad)
icebp
jmp
(bad)
enter
xor
icebp
fbld
cdq
lock
lods
mov
call
pushf
adc
mov
jle
call
and
xor
inc
jns
(bad)
mov
loope
push
sub
xchg
out
stc
pop
sahf
jno
xchg
mov
fdivr
fprem1
shr
lock
out
inc
mov
mov
jno
cmp
cli
push
icebp
icebp
sar
in
cs
clc
aaa
call
add
std
fdiv
add
jmp
jecxz
pop
ds
mov
movs
aam
mov
pop
(bad)
leave
ins
pop
push
inc
mov
jg
icebp
mov
push
fild
sub
fldenv
mov
lods
arpl
lock
movs
rcr
adc
pop
adc
jg
push
icebp
addr16
xchg
push
adc
jp
pextrw
mov
xor
movs
dec
pushf
popa
or
sbb
cmp
repz
mov
rol
mov
stc
mov
(bad)
(bad)
inc
and
lds
inc
mov
push
mov
out
shr
xor
shl
test
adc
push
xor
xchg
in
mov
cmp
repnz
sub
push
dec
jnp
std
adc
cld
jmp
(bad)
xchg
xor
mov
clc
std
pop
push
inc
mov
or
xor
push
shl
pop
lock
push
cmps
sti
sub
xor
test
dec
inc
mov
mov
retf
xlat
inc
call
jne
(bad)
pop
add
xlat
nop
jo
or
sahf
jno
cdq
rol
sahf
pop
adc
test
cmp
leave
sub
sub
pusha
arpl
icebp
les
stos
fisub
dec
xor
sub
cmps
stos
inc
sub
mov
retf
sub
add
outs
jmp
cli
dec
xchg
inc
jmp
mov
jl
mov
xor
cmp
out
pop
mov
xlat
or
leave
xchg
pop
inc
shl
pusha
in
call
adc
js
int3
es
mov
push
test
imul
adc
cmp
mov
in
(bad)
fisub
jmp
mov
adc
ss
or
rcr
jmp
xor
nop
lock
aas
push
loop
and
addr16
pop
mov
in
(bad)
aas
push
aam
inc
sbb
movs
cmp
dec
rol
into
sub
test
addr16
je
lahf
fstp
lds
rcr
popf
sub
sti
popa
iret
mov
or
inc
sbb
and
ja
jmp
rol
cmps
arpl
aaa
pushf
dec
lods
mov
and
cli
inc
movs
push
add
pusha
xor
cmp
in
dec
stc
ds
int3
mov
ret
mov
addr16
pop
lea
or
dec
push
mov
cwde
jbe
and
inc
aad
outs
sahf
scas
je
mov
mov
sahf
jae
rcl
pusha
cmp
mov
push
(bad)
dec
pop
ror
cli
test
pushf
nop
cmp
xor
adc
mov
in
jne
ins
mov
(bad)
bnd
or
je
call
sub
jle
retf
cwde
cld
inc
xlat
cli
(bad)
dec
hlt
jne
repz
enter
mov
cdq
dec
inc
je
mov
test
add
pushf
push
int
push
and
inc
xor
outs
fwait
pop
mov
(bad)
mov
cmp
fwait
mov
pop
retf
or
dec
dec
inc
jbe
push
daa
cmp
xor
je
inc
xor
pop
movs
mul
mov
shl
mov
push
or
cmp
pop
test
repz
mov
push
sar
push
xchg
mov
cwd
mov
mov
nop
js
jl
jbe
sahf
jp
mov
retf
cwde
push
pusha
jle
in
in
fsubr
cld
xlat
arpl
add
lods
xchg
pop
and
popf
adc
jg
dec
xor
jg
sahf
push
loope
dec
xchg
ret
sbb
lahf
push
jno
out
dec
jae
push
aad
jl
hlt
jmp
std
jo
mov
loop
test
icebp
sbb
dec
pop
mov
sub
ins
jle
mov
icebp
xchg
inc
ja
rol
(bad)
fprem
mov
push
mov
inc
add
sbb
cwde
loop
or
mov
cld
bound
stos
sbb
out
repz
clc
dec
cld
in
int
dec
test
xor
adc
xor
imul
fld
or
mov
mov
mov
sub
imul
ret
and
add
bound
jae
(bad)
out
repnz
sahf
pop
xor
lock
sbb
xor
jmp
js
test
rcr
lock
out
push
pop
push
retf
rcr
mov
fisubr
and
int3
ret
cmp
movs
dec
mov
sar
adc
loope
arpl
aas
mul
or
and
inc
das
push
mov
jnp
xor
into
sbb
jg
mov
(bad)
adc
cli
leave
cmp
call
fmul
xor
ins
sbb
pushf
sahf
mov
or
shl
ja
mov
adc
push
mov
sub
mov
jae
pop
cs
sub
and
popa
pusha
out
gs
mov
hlt
xor
pop
dec
dec
mov
inc
das
repz
jnp
hlt
cmc
cmp
sti
inc
js
mov
dec
jecxz
adc
loope
dec
je
nop
pop
adc
inc
mov
sbb
inc
ret
mov
adc
sub
inc
sbb
pop
xor
adc
push
(bad)
mov
dec
cld
push
cwde
addr16
ja
ss
xchg
dec
cmp
popf
xchg
and
lock
jne
das
cdq
dec
push
(bad)
xchg
mov
lahf
dec
pop
dec
pop
push
enter
pop
mov
xor
fstp
cmps
ret
sbb
mov
push
inc
mov
dec
out
arpl
repz
leave
sub
cld
gs
arpl
repz
sahf
movs
iret
das
pop
inc
xlat
scas
adc
adc
jne
xchg
push
pop
stos
std
out
int3
dec
into
lods
aad
int
sub
pop
or
push
shl
inc
popa
push
jmp
lahf
push
fwait
cmp
js
rol
cs
gs
push
jae
ss
(bad)
lock
aam
les
adc
xchg
push
daa
clc
pop
fisubr
sub
push
mov
popa
in
aas
push
repz
and
aad
stc
sbb
add
jbe
(bad)
pop
mov
sti
ret
fist
add
mov
jns
cmp
les
xlat
or
std
rcr
pop
call
bound
or
out
pop
mov
rcr
adc
mov
sub
and
(bad)
icebp
data16
xchg
xor
push
mov
mov
add
jns
into
xchg
sub
push
es
jle
fs
sahf
jge
push
not
xchg
xchg
inc
fld
mov
test
int3
jge
ins
aad
call
jnp
jmp
daa
loop
out
cmp
and
inc
scas
adc
xchg
pop
cmps
ins
pop
cli
xchg
push
xchg
cmp
stos
xchg
pop
popf
ret
mov
jnp
out
sahf
push
and
mov
adc
loop
test
pusha
ins
imul
inc
add
pop
xchg
add
xor
adc
jae
dec
jg
sbb
adc
and
test
leave
test
mov
scas
aas
(bad)
push
cmp
add
and
maskmovq
not
xchg
sbb
jne
jmp
pop
jle
pop
call
cld
lock
repz
out
in
leave
ins
sub
fwait
imul
jno
das
xlat
(bad)
sub
ret
mov
sub
repnz
shl
cmp
cmp
push
test
lahf
(bad)
in
(bad)
fild
in
add
inc
xchg
mov
dec
clc
push
call
add
xchg
faddp
sbb
xor
retf
cld
scas
mov
and
bound
shr
sbb
mov
jge
mov
xchg
mov
inc
sbb
call
jl
mov
out
and
push
shl
iret
cmc
push
std
adc
bound
das
out
cmp
(bad)
imul
sub
sub
inc
mov
or
xor
sub
mov
je
mov
add
jbe
mov
mov
cmp
pop
ds
test
nop
cmc
cmp
push
enter
cmp
stc
cmc
(bad)
in
adc
adc
lock
das
fistp
jns
mov
dec
add
mov
xor
and
mov
add
aam
popaw
xor
push
jmp
mov
xchg
jg
or
cwde
mov
or
inc
fs
cwde
retf
xor
retf
(bad)
clc
xlat
push
jge
enter
scas
fwait
mov
in
xchg
lock
dec
and
shr
out
ror
cmp
mul
sbb
fcomp
and
cmp
mov
gs
stos
bnd
pop
ret
rcl
imul
lds
fld
or
pop
push
lods
cmp
popf
xor
enter
lods
addr16
loope
lods
div
inc
and
mov
mov
imul
adc
cmp
mov
jne
jle
sbb
retf
lea
jo
aas
aaa
xchg
xchg
cmp
dec
mov
push
cmp
xor
xchg
pop
jmp
and
repz
lods
xor
cmp
aad
jl
cmp
imul
mov
inc
add
mov
lahf
mov
push
adc
cmp
loop
mov
(bad)
adc
xchg
push
mov
pop
movs
mov
jecxz
adc
int3
call
cs
out
(bad)
jmp
into
add
int
dec
xchg
popf
cmp
call
movntq
out
xor
ror
add
in
and
or
push
sbb
xchg
xor
aaa
test
and
repnz
cwde
pop
(bad)
xchg
xchg
ss
pop
jo
pop
pop
clc
add
xchg
xor
into
loop
mov
lods
mov
inc
rol
dec
clc
dec
inc
mov
scas
push
xchg
jp
push
das
int
jl
and
add
in
pop
imul
pop
adc
jge
rcr
mov
outs
mov
xor
pop
cmps
push
adc
stos
mul
jne
cmp
fdiv
push
fs
aad
lods
cmp
xor
jne
cwde
mov
cmovno
mov
mov
repnz
xchg
sub
push
adc
daa
pop
(bad)
jle
mov
mov
sub
aam
movs
pop
ins
sub
bound
adc
jns
xchg
push
(bad)
mov
dec
call
outs
cmp
and
jnp
push
test
sub
cwde
mov
cmc
xor
mov
ret
xor
mov
cld
add
fdiv
rol
je
inc
cmc
add
and
sbb
mov
xchg
and
mov
dec
cmp
push
aad
jae
mov
enter
jle
int
outs
push
loopne
movs
(bad)
mov
ins
and
(bad)
or
jg
jg
xchg
inc
imul
push
push
add
mov
stos
jge
mov
ja
loop
xchg
or
jg
clc
xor
clc
sbb
mov
adc
mov
(bad)
cmp
rsm
adc
out
add
or
fnstcw
call
aas
aas
jmp
and
ins
push
aas
cmp
push
and
in
inc
pop
cdq
cmp
fcom
adc
push
inc
fild
mov
jnp
es
add
mov
(bad)
jl
lds
mov
(bad)
popa
popa
mov
and
sub
pop
das
push
and
into
fnstcw
or
or
lods
mul
stc
fwait
mov
inc
pop
in
sub
in
push
xor
icebp
jg
jae
sbb
fisttp
xchg
test
pushf
ins
cmps
and
or
cwde
sti
ins
xchg
sbb
and
imul
adc
fld
out
sbb
pop
arpl
mov
es
inc
sbb
mov
mov
push
retf
inc
dec
clc
push
es
add
outs
stc
jb
adc
add
lds
and
cs
leave
sub
(bad)
movs
sbb
mov
ret
fimul
sub
jnp
mov
mov
push
mov
dec
jne
push
movs
mov
cmps
jmp
push
sub
add
or
jmp
mov
stc
mov
push
mov
rcl
mov
arpl
or
xchg
rcr
stos
icebp
test
cmp
and
mov
mov
les
adc
sahf
add
xor
popa
sar
adc
fild
xchg
push
fisttp
lahf
dec
and
retf
mov
stos
(bad)
xchg
xchg
inc
jl
push
repnz
push
or
rcr
jae
retf
mov
fnsave
stos
outs
cwde
cmp
arpl
fistp
sbb
jae
mov
call
inc
add
cmp
ret
ja
(bad)
push
dec
xchg
xchg
idiv
mov
ds
pop
sbb
icebp
(bad)
shl
dec
repnz
icebp
jo
repnz
inc
adc
call
sbb
sub
vcvtpd2ps
lods
mov
xchg
and
jmp
xchg
jecxz
mov
mov
aam
test
mov
sbb
loopne
dec
(bad)
je
cmp
push
mov
retf
mov
lds
scas
jecxz
nop
fwait
cmp
push
push
mov
and
dec
xor
cmc
and
in
inc
(bad)
(bad)
xchg
cmps
jg
hlt
mov
loop
cmp
cmp
or
not
jb
lea
adc
cmp
ficomp
adc
mov
sub
jmp
rcl
cmp
(bad)
idiv
nop
out
fprem1
jnp
jmp
ja
iret
cld
xchg
ret
and
sbb
int
xchg
enter
(bad)
ins
pop
dec
cmp
sub
jle
in
cs
dec
dec
jbe
retf
mov
mov
adc
sub
pop
fmulp
outs
(bad)
mov
or
arpl
out
cmp
sub
je
psubsb
in
xchg
bound
daa
dec
bound
cmp
mov
mov
mov
loope
cmp
pop
enter
jmp
xchg
in
and
lock
jmp
lahf
dec
cmp
repz
leave
stc
xor
sahf
or
fild
sub
inc
cmp
out
cmps
xchg
test
enter
dec
mov
mov
dec
jo
addr16
xchg
je
sub
cld
neg
pusha
repz
test
pop
push
popf
mov
cld
pusha
jns
test
dec
es
lahf
push
cmp
cmp
add
adc
mov
nop
mov
(bad)
pop
enter
loop
xor
stos
mul
mov
(bad)
mov
xchg
mov
xchg
je
or
lahf
push
repz
loop
dec
xor
je
inc
xchg
fiadd
push
arpl
push
jmp
or
xchg
ss
dec
mov
dec
or
(bad)
scas
aaa
jae
inc
xchg
mov
movs
mov
mov
dec
cld
fcomi
scas
cmp
adc
push
or
mov
mov
imul
leave
xchg
or
push
or
cld
retf
add
fwait
mov
xchg
jl
dec
bound
sub
xor
fwait
movs
loop
dec
adc
mov
xchg
test
shl
pushf
jg
imul
push
test
mov
repnz
pop
(bad)
cmps
xchg
imul
cli
xchg
sbb
add
pushf
add
xchg
dec
(bad)
mov
cmc
test
mov
mov
xchg
sti
cs
adc
sbb
mov
inc
jg
jle
sahf
or
adc
adc
mov
pop
shl
adc
add
and
lea
mov
retf
aas
sbb
dec
inc
adc
fisttp
fimul
mov
jle
jae
jno
int3
sub
jne
add
ins
and
repnz
xchg
pop
lods
and
rcr
fwait
outs
in
and
inc
mov
sub
mov
outs
inc
and
stos
sahf
fsubr
mov
pop
data16
mov
sahf
xchg
mov
fmul
sub
in
xchg
inc
das
jae
fwait
inc
into
and
xor
js
push
adc
mov
inc
sub
sbb
inc
inc
jbe
fdiv
shl
sub
fdivr
xchg
mov
pop
pop
ror
or
jle
inc
mov
jbe
xor
aas
pop
aaa
and
stc
adc
out
inc
ins
arpl
cmps
outs
sbb
mov
xor
and
inc
test
add
lock
pop
and
adc
mov
push
int3
jge
push
lahf
mov
sbb
jg
mov
js
xchg
xchg
scas
lahf
lds
sub
aam
mov
(bad)
ror
in
stos
inc
adc
enter
pop
or
mov
pop
pop
pop
imul
(bad)
adc
std
push
sub
dec
jge
jle
push
pop
mov
mov
mov
cmp
es
lea
xor
aam
add
mov
pop
adc
mov
cmps
jo
jae
ret
or
out
cmp
xor
pop
mov
cmp
mov
das
dec
mov
(bad)
or
cld
add
cld
inc
not
cmp
stos
clc
data16
xchg
in
(bad)
retf
sahf
fwait
pushf
fwait
adc
or
or
pop
jno
call
adc
pop
push
mov
push
xlat
or
out
icebp
mov
cmp
mov
dec
jg
shl
add
mov
lds
xor
add
mov
js
addr16
xor
xor
mov
mov
and
(bad)
sahf
cld
dec
xchg
mov
fsub
or
lea
inc
aam
sbb
mov
ja
mov
adc
xchg
(bad)
stos
adc
sbb
sbb
(bad)
xchg
push
test
add
jae
(bad)
int
mov
mov
ja
shr
cmp
sbb
mov
xchg
jnp
push
aas
ret
and
fidiv
enter
test
mov
mov
sbb
jb
pop
xchg
das
aad
mov
xchg
sub
push
and
sub
mov
add
lods
je
dec
popf
int3
dec
jns
outs
cmp
pop
adc
stc
push
jb
pop
pop
pop
ret
in
mov
movs
jnp
mov
push
sar
in
jmp
or
outs
in
fsubr
ret
mov
add
and
mov
js
mov
arpl
aad
push
mov
mov
leave
dec
xor
push
xor
ja
mov
jo
arpl
jle
test
push
jmp
fisubr
stc
dec
adc
jl
mov
mov
jne
cmp
out
imul
push
cs
cld
rcr
icebp
push
scas
data16
leave
mov
out
xchg
not
or
mov
mov
cmp
clc
in
ds
add
stc
cld
inc
mov
das
movs
dec
repnz
ret
ret
popa
and
or
outs
push
ins
jmp
out
sbb
out
jnp
sub
or
das
cli
dec
enter
fwait
xor
push
sub
or
jecxz
fmulp
push
lea
das
es
xlat
iret
inc
sar
jl
mov
imul
out
sahf
mov
les
outs
inc
cmc
icebp
push
inc
and
adc
xor
xchg
dec
push
xlat
(bad)
push
outs
push
div
jmp
les
mov
mov
sub
in
out
sti
mov
mov
sbb
fadd
and
xchg
inc
xor
jo
(bad)
icebp
jp
in
(bad)
test
cmc
push
ins
mov
pop
popf
retf
push
mov
iret
test
out
xchg
ret
dec
push
sbb
loop
movs
xlat
lods
aam
push
ins
jb
jmp
jb
and
movs
shl
gs
cmp
mov
and
(bad)
and
jbe
push
or
imul
sbb
xchg
add
sbb
jnp
xor
pop
add
jo
popf
dec
unpckhps
retf
or
pop
pop
mov
dec
cmps
jle
sbb
ror
dec
sbb
jmp
xor
idiv
std
push
mov
daa
jno
pushf
clc
pop
push
std
pop
imul
cmps
test
mov
push
mov
je
mov
cmps
iret
das
mov
push
sub
test
pop
mov
in
(bad)
ins
(bad)
cmp
and
cmp
sahf
test
jmp
out
pop
xor
xchg
retf
sbb
pop
stos
test
js
add
ins
outs
jo
xchg
jnp
mov
outs
into
and
fwait
lods
(bad)
into
mov
xchg
push
pop
pandn
xlat
js
sbb
imul
adc
pop
inc
push
stc
or
push
cmp
js
hlt
push
retf
mov
sbb
push
test
loopne
sbb
enter
loopne
repz
mov
and
dec
inc
xor
js
test
bound
lds
xchg
lahf
retf
in
jecxz
xchg
cmp
cs
mov
out
call
cmp
bound
je
(bad)
mov
test
inc
or
push
repz
adc
aas
outs
cmp
cmp
data16
clc
imul
mov
daa
out
out
imul
cmps
cdq
cdq
outs
mov
mov
clc
les
ins
in
adc
pop
scas
test
pop
dec
xchg
(bad)
sbb
movs
xchg
jp
addr16
ss
jmp
movs
loop
push
mov
(bad)
mov
mov
push
fs
xor
cmps
add
lahf
pop
and
pop
mov
in
jmp
arpl
add
test
(bad)
jp
in
cs
sub
addr16
mov
fnstcw
pop
mov
(bad)
xor
push
lea
rol
outs
push
icebp
jbe
dec
pop
outs
mov
cmc
adc
outs
jmp
xor
and
lods
bound
aam
mov
(bad)
dec
sub
or
dec
movs
mov
and
sahf
int3
out
out
ss
jle
or
sbb
jge
xor
sub
mov
daa
and
inc
and
loop
add
push
or
cdq
dec
dec
adc
pop
mov
pop
lea
nop
mov
jbe
cli
jl
ficom
mov
jne
jge
imul
jne
ds
push
aad
lock
xor
leave
scas
in
sub
in
xchg
shl
jg
push
nop
push
dec
shl
repnz
lods
arpl
mov
mov
in
aas
xor
dec
add
xor
in
xchg
push
mov
sar
mov
cld
xor
(bad)
fstp
mov
xchg
data16
jnp
loope
cmp
cmc
jle
test
push
lahf
mov
ret
sbb
addr16
mov
(bad)
aad
jge
dec
sbb
rcr
int3
(bad)
outs
out
xor
ret
in
cmp
ret
test
inc
jmp
or
ss
inc
cs
scas
out
stc
outs
mov
mov
mov
and
jo
pop
xchg
fidiv
push
in
leave
jmp
xor
jae
push
addr16
pop
in
ret
int3
pop
sbb
sub
sti
std
stc
inc
ret
fwait
sub
mov
inc
mov
nop
icebp
mov
xchg
xchg
inc
sbb
rcl
xor
jmp
repnz
aam
aas
dec
leave
adc
ja
ins
xor
rcl
xor
aad
cwde
dec
fcom
stc
dec
xchg
repnz
das
jmp
out
adc
xor
mov
add
seto
inc
ds
inc
(bad)
add
jns
fwait
aas
jns
(bad)
fsubr
shl
nop
pop
or
cs
pop
dec
and
cmp
pop
jmp
lock
push
mov
ret
enter
sub
pop
lock
into
scas
push
push
rcr
or
pop
mov
push
add
fisubr
add
div
fsubr
(bad)
pop
jns
adc
inc
push
jno
movs
inc
jmp
in
ja
popf
adc
xor
rcr
retf
ss
je
jp
pcmpgtw
push
xchg
adc
aaa
dec
sub
pop
outs
pop
or
es
lahf
dec
jns
and
sbb
sbb
loopne
(bad)
sti
ret
dec
cmp
dec
retf
mov
je
xchg
mov
jnp
pop
add
test
inc
pop
fisub
push
icebp
je
mov
outs
lea
in
(bad)
(bad)
in
loopne
fstp
rcl
call
xor
mov
ja
jecxz
not
std
xchg
or
cmp
add
movs
or
mov
mov
mov
push
xchg
aaa
adc
aad
jecxz
(bad)
jmp
(bad)
push
push
add
cli
loop
dec
ret
ret
and
jle
daa
sub
fistp
in
mov
xor
out
int3
add
jbe
aam
outs
push
adc
sub
popa
call
ret
clc
inc
mov
call
ja
cmp
sbb
sbb
aam
imul
dec
ror
push
ins
pushf
jl
out
inc
lahf
gs
xchg
aas
jl
gs
push
jmp
push
fimul
push
add
pusha
xor
pop
not
outs
push
jmp
call
inc
dec
repz
repnz
out
pop
or
mov
xbegin
xchg
and
sbb
cld
and
add
js
xor
cs
int
adc
jno
cmp
not
test
inc
cmp
mov
mov
pop
inc
mov
repnz
dec
arpl
repz
out
fadd
pop
push
mov
cli
(bad)
lods
inc
cdq
inc
nop
xchg
cmp
lahf
ss
push
xchg
call
jp
in
add
mov
enter
cmps
ficomp
scas
push
xor
mov
mov
and
stos
sti
sbb
pop
xor
sbb
pop
adc
stos
jae
mov
out
xor
mov
dec
sbb
cli
inc
daa
sbb
cmc
add
loop
lahf
mov
outs
dec
sub
(bad)
sbb
xchg
mov
ret
(bad)
mov
add
and
imul
je
scas
jle
push
inc
sub
mov
cli
lea
xchg
pop
mov
push
movs
call
mov
sbb
in
sub
cmp
cmp
mov
mov
or
mov
je
lds
add
mov
mov
sub
push
mov
dec
call
push
xchg
std
das
pop
dec
in
and
add
test
xchg
push
cmps
sbb
push
out
bndldx
and
mov
push
fild
xchg
xchg
cmps
fmul
add
mov
call
pop
dec
pop
lods
aad
mov
dec
mov
leave
js
cs
aad
cmp
sub
dec
inc
rcr
div
push
stos
jg
dec
ror
inc
ins
loopne
(bad)
mov
mov
das
data16
js
mov
dec
jae
xchg
mov
pop
ins
arpl
mov
call
add
lods
xlat
push
pop
mov
mov
movs
test
sub
scas
pusha
sbb
test
dec
sar
adc
pushf
test
xchg
add
jge
ja
mov
loop
inc
add
addr16
ins
test
loopne
test
jnp
test
retf
sti
inc
sub
mov
cld
ss
push
push
out
xor
gs
xor
mov
jo
jg
fisttp
loop
std
push
retf
jno
pop
ret
out
xchg
add
arpl
mov
test
gs
das
jmp
cdq
ret
push
imul
mov
cmp
ret
in
push
inc
inc
mov
push
inc
jbe
lods
sub
pop
aad
and
cmp
rol
cmps
imul
and
mov
pop
push
popa
dec
rcr
sub
repnz
ins
stos
xor
(bad)
test
push
add
push
cmp
ret
or
and
retf
shr
popa
icebp
(bad)
xchg
into
push
out
ret
daa
add
mov
jge
and
or
inc
mov
inc
push
add
pushf
mov
dec
scas
sub
ins
jmp
neg
idiv
jbe
in
mov
movs
push
ja
push
lock
jl
es
fbld
sbb
cmove
mov
(bad)
and
mov
movs
ins
stos
jg
(bad)
scas
rol
mov
into
adc
pop
rol
push
or
xchg
pusha
(bad)
xor
xchg
sar
test
pop
shufps
mul
dec
stos
sbb
mov
sbb
in
daa
add
sti
dec
sub
imul
sti
clc
fwait
mov
lods
inc
mov
and
aas
mov
fucomi
clc
xchg
inc
xchg
xor
and
jmp
stc
fadd
pop
or
out
nop
shr
cmp
mov
cwde
sub
push
sub
nop
in
cmp
sar
(bad)
sahf
and
mov
cli
pop
aad
mov
out
scas
cmp
pop
out
cmp
mov
and
test
(bad)
cwde
mov
arpl
jl
lods
or
test
mov
clc
pop
fwait
mov
mov
into
outs
or
push
stos
arpl
add
pop
outs
sbb
fnsave
sbb
add
dec
stc
and
xor
mov
jl
mov
loopne
jl
mov
inc
fidiv
in
lock
cs
jb
add
sub
out
sub
call
dec
push
das
or
lock
fisub
mov
in
ror
jp
(bad)
push
test
mov
sub
inc
push
and
loopne
mov
loope
scas
inc
sbb
aaa
xor
xchg
sbb
cmp
mov
pop
and
(bad)
popf
mov
sbb
fisttp
cmp
mov
dec
ins
sbb
push
(bad)
retf
xor
add
(bad)
out
aam
rcl
rol
mov
adc
(bad)
jl
addr16
cli
jge
iret
push
push
ja
jecxz
fs
mov
movs
test
inc
cmps
pusha
cwde
ds
sahf
pop
jl
and
mov
test
adc
loop
ins
pop
pop
push
lea
ficom
es
or
mov
jp
das
xchg
rcl
(bad)
loop
xchg
pushf
sbb
lea
sub
jne
stc
sub
adc
push
sar
inc
xchg
popa
inc
or
clc
mov
xor
popf
mov
xchg
jo
sub
ins
mul
out
daa
lods
mov
push
mov
add
push
mov
xor
gs
mov
fdiv
xchg
in
pusha
adc
inc
fsub
shl
mov
fild
into
xchg
sub
ret
adc
mov
sti
ret
pop
or
sub
inc
mov
mov
mov
jb
xor
shl
xor
(bad)
clc
sbb
cli
fmulp
in
and
loope
cmp
push
jle
inc
ss
mov
or
adc
sub
sbb
or
in
cmps
jnp
xor
adc
jp
retw
jns
retf
adc
push
ret
mov
dec
pop
(bad)
sub
xor
sub
cli
fcomip
aaa
test
imul
mov
dec
xor
push
dec
add
cmp
adc
jae
scas
add
ss
sub
(bad)
or
sbb
out
(bad)
clc
adc
out
mov
push
retf
call
cmp
scas
test
mov
(bad)
jecxz
sar
pop
push
jmp
push
dec
and
push
and
shl
inc
mov
int
xchg
js
mov
or
mov
jmp
xor
pop
lahf
and
data16
xchg
dec
out
adc
sbb
and
jae
retf
push
lahf
push
retf
aas
(bad)
daa
div
rcl
dec
in
jmp
sbb
xchg
or
jne
mov
push
lods
mov
add
and
shl
fild
pushf
jb
lods
sbb
sbb
fs
mov
rcr
je
or
out
lea
ds
and
xor
repz
fcomip
jb
sahf
in
jns
in
fist
pop
aad
sub
mov
push
xor
adc
or
ror
aam
in
mov
dec
mov
fiadd
adc
mov
cmp
sbb
xchg
cmp
xchg
inc
(bad)
jmp
ficomp
jmp
inc
dec
pop
cmp
mov
cwde
out
dec
in
xchg
pusha
ja
and
sub
mov
xor
mov
(bad)
out
push
pusha
cvttps2pi
add
popa
xor
js
xchg
cmc
fld
mov
(bad)
test
push
jno
fist
push
pop
fs
ror
xlat
dec
mov
inc
lods
ja
pop
lea
pop
fldcw
sahf
mov
push
inc
push
or
sbb
test
xchg
sahf
ret
adc
dec
sub
mov
and
(bad)
push
adc
pop
mov
xor
or
sub
mov
inc
loop
add
in
fdiv
jmp
sbb
mov
or
jnp
out
pop
pop
jbe
dec
mov
xchg
pop
push
pushf
inc
or
shl
sub
pop
xor
xchg
or
scas
mov
cs
adc
jae
shl
and
(bad)
mov
into
dec
sub
cmp
(bad)
push
dec
xor
jl
sti
dec
daa
fsqrt
or
in
out
pop
cmp
cmp
adc
movs
xchg
adc
dec
out
in
adc
push
(bad)
jmp
jb
stos
jbe
clc
mov
retf
or
jg
and
pop
retf
or
cmp
mov
popf
mov
retf
clc
sbb
les
inc
rcl
push
popa
ins
fldcw
xor
into
js
int
out
pop
adc
(bad)
cs
les
adc
cmp
int
xor
std
cmps
push
lods
stos
out
mov
(bad)
into
mov
(bad)
xchg
aas
fnstcw
add
in
rcl
sti
outs
call
jbe
nop
and
into
fnstenv
rcr
aam
cmp
xchg
clc
addr16
mov
out
enter
jmp
jnp
inc
dec
jge
xchg
out
xchg
cld
popa
arpl
jecxz
xor
call
mov
loop
mov
into
push
(bad)
dec
mov
mov
mov
pop
or
lds
aaa
cwde
pusha
cdq
enter
test
sbb
inc
aad
shl
stc
cli
lods
rol
mov
arpl
dec
les
and
sbb
mov
daa
imul
hlt
push
ds
inc
stos
jge
cmps
cwde
or
scas
and
repz
lods
icebp
out
pusha
dec
mov
dec
cmp
sub
jle
cmc
std
lahf
mov
in
stos
popf
sbb
leave
push
sar
xor
sahf
mov
cmp
inc
sub
mov
lods
fiadd
adc
mov
fcomp
stos
sub
cli
dec
es
inc
test
inc
das
xchg
dec
sbb
out
cmps
xchg
jp
mov
jle
hlt
add
add
mov
mov
xor
test
mov
and
xchg
int
add
jge
in
fisub
les
xor
ss
and
fwait
scas
xchg
sbb
loope
and
int
sub
pop
repnz
jmp
pop
dec
in
icebp
push
dec
push
(bad)
inc
xor
mov
mov
jne
nop
shr
lods
xor
icebp
aam
sti
push
stc
mov
int3
pop
cdq
hlt
mov
test
dec
icebp
mov
das
popf
mov
imul
movs
sub
fsub
or
fwait
not
and
bound
ret
cmp
cmp
pusha
cmp
mov
leave
fisub
shl
fwait
pop
and
jns
push
int3
mov
out
adc
pop
mov
jmp
xchg
in
inc
in
jle
fidivr
mov
mov
sub
pop
mov
cwde
fstp
sbb
stos
mov
je
add
xor
jb
retf
int
push
xor
outs
and
xchg
loope
mov
adc
mov
and
push
loopne
ror
ins
push
add
out
push
jecxz
iret
and
jno
and
xor
in
or
xchg
push
adc
sbb
or
jae
xchg
and
xor
(bad)
cmp
dec
nop
fadd
mov
add
inc
gs
aaa
xchg
jmp
(bad)
sbb
fwait
sbb
cwde
sbb
mov
dec
repz
pop
retf
in
jg
bound
rcl
retf
loop
cmc
arpl
cmp
les
adc
mov
xor
xchg
enter
inc
mov
popa
cli
pushf
pop
idiv
out
push
and
jmp
test
sub
push
xchg
and
sub
add
or
shl
repz
sub
push
xchg
dec
(bad)
xor
jae
cmp
fidiv
fld
adc
rol
mov
std
and
mov
mov
cli
push
adc
int
(bad)
xlat
nop
xchg
ins
adc
or
xchg
jno
pop
add
hlt
cmp
repz
stos
aaa
pop
and
stc
popw
push
in
mov
scas
gs
dec
inc
mov
and
push
cld
mov
aaa
neg
sti
pushf
sub
push
(bad)
aam
push
and
jno
cdq
mov
mov
mov
sub
rcl
xchg
jp
fisubr
sbb
stos
mov
cdq
pop
into
fdiv
cmps
shr
test
adc
adc
jecxz
fsub
outs
rol
mov
dec
nop
repz
cmp
add
xchg
dec
(bad)
dec
shl
mov
push
jns
cdq
cmps
mov
clc
test
sti
aas
movs
xchg
xchg
cpuid
and
sub
and
xchg
cmp
sub
xlat
mov
aas
rcr
movs
cmp
arpl
adc
or
mov
ror
outs
inc
stos
inc
jb
jae
mov
xor
in
adc
aaa
xchg
sbb
cli
in
sti
shl
mov
xor
(bad)
mov
sub
stos
xlat
push
or
movs
jo
out
cmc
mov
punpcklbw
stos
cmp
push
or
add
daa
sbb
push
in
xchg
sub
retf
popf
into
das
popa
xchg
loope
and
js
loopne
sti
je
lock
sbb
div
jp
lahf
sbb
push
and
and
inc
out
sti
aaa
and
hlt
imul
test
cmp
add
fld
rcl
call
js
test
sbb
cmp
pop
lahf
pushf
mov
enter
inc
int3
aas
cmc
gs
adc
dec
lea
leave
outs
imul
inc
les
xchg
xchg
or
sub
repnz
jb
sub
xchg
ret
sub
(bad)
addr16
scas
test
sar
in
inc
push
or
call
add
cmc
mov
lods
or
enter
dec
xchg
inc
inc
cmp
scas
or
int
jns
aad
cs
inc
jg
lods
ins
inc
cmp
int3
xchg
cmp
mov
add
dec
popa
int
test
mov
push
and
(bad)
shl
das
sbb
xor
jge
inc
inc
loope
(bad)
inc
test
idiv
xchg
in
movs
in
fidiv
sbb
loopne
lock
push
xrelease
add
fimul
addr16
push
in
cmc
gs
lock
or
das
hlt
int
xchg
cmp
dec
push
out
outs
adc
loope
in
imul
mov
outs
stos
dec
dec
jo
and
fcom
arpl
cmp
mov
sti
into
ins
ror
gs
fdivr
(bad)
ins
hlt
popf
inc
nop
sbb
shl
movs
add
adc
xchg
mov
adc
inc
ds
mov
cmp
jb
push
and
rol
adc
or
dec
xlat
les
jmp
mov
subps
add
adc
mov
in
push
movs
gs
pop
jbe
sub
(bad)
mov
fistp
jg
or
xchg
sub
loope
daa
test
cmps
cmp
xor
jbe
jge
int
loope
lds
xchg
dec
(bad)
inc
ins
jmp
jbe
in
sub
or
cwde
std
cmps
inc
push
or
stos
xlat
jmp
loopne
int3
jl
aad
repz
push
add
les
outs
nop
mov
int3
jae
mov
das
fs
mov
mov
or
jns
hlt
mov
fwait
shl
stos
in
cld
mov
jle
test
sbb
mov
add
clc
das
jp
fs
sbb
popa
mov
push
and
adc
lods
inc
pop
es
lods
xchg
inc
ror
fbld
mov
call
loope
mov
lods
je
sbb
movs
rcl
push
mov
mov
mov
out
xchg
dec
or
lods
or
jmp
cmp
fidivr
mov
sub
dec
dec
sub
push
movs
mov
(bad)
test
sbb
sbb
dec
(bad)
push
clc
push
ins
sub
scas
into
(bad)
aad
mov
pop
pop
(bad)
jge
aam
js
dec
cld
mov
test
xor
xchg
aaa
adc
xor
mov
sub
jne
popf
cwde
call
js
ret
jecxz
xchg
jg
rol
aaa
push
cmp
adc
sub
pop
pop
dec
stos
mov
jne
jb
jecxz
pop
je
jmp
dec
daa
inc
jb
cdq
jl
mov
mov
sti
push
push
dec
jae
adc
push
jno
add
pushf
cwde
or
sti
xor
in
or
loopne
call
rcr
sub
dec
sbb
mov
mov
xlat
or
mov
push
mov
mov
and
int3
rcr
test
sub
push
mov
je
jecxz
repnz
cmps
or
mov
fisubr
cmp
es
mov
add
jmp
cmp
leave
inc
stos
mov
pop
popf
repnz
aas
xor
rcr
mov
ret
dec
fsubr
sub
gs
adc
sbb
lods
leave
(bad)
aam
jl
in
xchg
mov
push
adc
sub
xlat
sbb
gs
jne
jno
cwde
jnp
or
lods
push
aas
or
cmc
shr
inc
(bad)
ds
enter
out
cdq
mov
aaa
fdivr
dec
mov
pop
in
fbstp
add
jl
add
mov
ins
mov
jp
inc
pop
addr16
pop
jmp
fistp
mov
cdq
push
iret
int
bound
mov
adc
loop
lea
in
cmc
movs
call
sbb
cmps
dec
xchg
or
dec
call
ret
or
pop
test
dec
test
add
and
sbb
icebp
lods
push
jmp
push
rcl
mov
stos
repz
or
or
xchg
xchg
mov
pop
addr16
pop
fcmovne
and
xchg
retf
das
adc
ds
or
mov
or
sbb
adc
pop
call
pop
mov
rcr
adc
mov
xchg
les
(bad)
aam
mov
enter
cmp
mov
sbb
rcr
(bad)
iret
sub
add
imul
icebp
adc
adc
mov
pop
(bad)
and
pop
push
sahf
sbb
mov
in
pop
xchg
fstp
mov
pop
mov
sub
inc
mov
outs
pusha
jmp
cmp
cmp
jnp
dec
dec
(bad)
aas
inc
push
dec
pop
pop
mov
or
jmp
iret
or
inc
in
fstp
pop
(bad)
add
movups
leave
or
inc
aaa
mov
push
dec
into
pushf
mov
mov
push
mov
cmc
adc
pop
dec
fwait
stos
jbe
and
pop
ins
xchg
in
mov
inc
sub
cmp
mov
jg
jbe
out
js
sbb
xor
inc
fucom
in
faddp
retf
aad
mov
dec
mov
and
nop
icebp
fdiv
or
mov
jle
icebp
and
mov
enter
fbstp
jmp
out
enter
jecxz
clc
cmps
push
mov
xchg
out
add
bound
inc
mov
and
cld
jb
cwde
push
sbb
add
sub
xchg
adc
scas
and
mov
inc
jae
dec
or
outs
fisubr
add
push
sbb
cwde
and
je
pop
shr
or
sbb
pop
mov
xchg
pusha
pusha
jbe
aaa
in
push
jb
mov
in
fstp
push
push
and
pop
and
lea
push
jne
outs
adc
or
sbb
es
mov
push
xor
in
nop
test
jmp
pushf
jne
fidivr
shl
lods
jbe
ins
sti
fsub
or
outs
xchg
inc
scas
inc
sar
out
dec
mov
ret
xchg
jg
into
cdq
ss
jns
pop
scas
inc
aam
aaa
mov
push
cmp
loope
sbb
inc
jmp
jo
push
lahf
mov
das
pop
xor
cmp
aam
mov
loop
xlat
call
pop
xor
stos
or
inc
pop
add
(bad)
fdiv
ret
push
out
push
loopne
dec
xchg
or
xchg
push
ret
jge
add
pop
or
jecxz
xor
mov
fwait
pusha
adc
(bad)
sti
inc
addr16
retf
call
xchg
mov
pop
sbb
loopne
xchg
mov
mov
add
aas
adc
(bad)
push
ins
push
rcr
dec
mov
pop
shr
and
dec
fadd
in
or
jp
xchg
sbb
out
pop
inc
mov
xchg
sub
imul
mov
mov
mov
jle
imul
mov
xor
pop
sub
fucomi
fadd
adc
in
mov
mov
sbb
ins
xchg
sbb
fs
cld
sub
daa
mov
cwde
mov
test
ffreep
or
or
xor
and
loopne
jb
aaa
lods
(bad)
leave
jnp
xchg
ss
in
sub
pushw
out
push
sar
imul
xor
jmp
or
push
adc
int
jge
dec
popa
jns
pusha
cmps
xchg
xor
dec
out
cs
stc
cmps
mov
nop
or
push
pushf
xchg
mov
(bad)
fcom
add
pop
int3
mov
push
repz
jge
(bad)
mov
stc
test
sub
jp
inc
xchg
pop
jle
and
call
repnz
inc
test
nop
inc
jne
jecxz
add
xor
sub
ret
dec
adc
fistp
push
(bad)
sahf
mov
jle
sbb
lahf
icebp
int3
xor
repz
adc
cmp
enter
mov
lods
jbe
ins
add
fdivrp
cmp
push
popa
clc
jmp
mov
fisub
fisub
je
adc
or
and
pop
sbb
cmps
adc
pop
aas
jmp
xor
in
dec
sbb
cli
inc
fcomp
fldcw
or
mov
pop
sub
push
shl
push
adc
data16
dec
or
jo
xor
(bad)
jl
mov
jge
cli
sub
mulps
sbb
mov
clc
sub
test
lea
push
dec
sub
ret
in
add
dec
cmp
jp
xor
mov
mov
jmp
mov
repz
xor
les
into
mov
sub
dec
out
push
call
shl
inc
ror
xor
adc
jp
mov
ins
dec
(bad)
push
std
ins
dec
rcl
push
fdiv
sub
pop
outs
rcr
inc
test
repnz
nop
pop
or
mov
jecxz
jg
fucomi
pop
mov
jmp
into
inc
(bad)
and
pop
xor
or
push
jns
leave
and
mov
inc
dec
inc
scas
push
icebp
sbb
jbe
mov
sbb
xor
add
jl
pop
xor
scas
iret
or
(bad)
cmp
cld
push
jp
xor
pop
ja
mov
xor
call
dec
stos
sbb
xchg
je
or
ror
sahf
adc
and
lock
xor
pop
aaa
xor
aaa
leave
push
std
iret
dec
js
ss
mov
inc
in
push
retf
pop
mov
pop
std
in
(bad)
ja
adc
mov
inc
movs
jne
(bad)
inc
fdivr
aad
adc
jp
loope
fwait
and
test
inc
sbb
add
pop
xchg
cmc
scas
mov
adc
repz
cli
fcomp
rol
adc
shr
imul
je
rcl
retf
jecxz
in
aad
loopne
hlt
adc
shl
or
fs
and
(bad)
pop
aaa
mov
xchg
add
jns
fs
inc
add
dec
inc
movs
iret
push
test
out
jb
loopne
call
push
or
out
push
test
and
sti
sar
mov
shl
xchg
push
ja
int
sub
inc
in
outs
push
jg
mov
and
pushf
xchg
icebp
loopne
push
xor
sbb
and
mov
or
pop
xlat
add
scas
and
jae
add
enter
and
lock
js
mov
psubw
leave
mov
mov
xchg
xchg
rol
or
loope
lock
adc
lods
mov
les
or
mov
add
jns
jmp
mov
test
sar
lods
(bad)
neg
hlt
xchg
clc
pop
and
(bad)
in
mov
push
ja
test
push
and
out
mov
movs
dec
cld
inc
mov
outs
int
sbb
dec
repz
es
cmp
add
jecxz
in
mov
gs
loope
xor
push
aas
cdq
nop
aaa
ficomp
sbb
je
popa
retf
sbb
popf
in
add
(bad)
(bad)
mov
lods
sub
adc
movs
xchg
sbb
xor
scas
xor
mov
fs
jns
xchg
lods
mov
je
ds
test
xchg
aaa
pop
fsub
or
in
iret
arpl
js
inc
jge
add
inc
add
rcr
fmul
push
jo
scas
pop
push
push
and
shl
inc
or
sti
jns
(bad)
test
mov
and
mov
inc
ins
push
in
push
mov
and
sbb
sub
outs
sti
icebp
mov
ja
outs
lds
push
xchg
pop
fld
sti
push
push
sub
dec
pop
repz
push
fwait
sub
mov
scas
xchg
add
pop
lock
pop
xchg
pop
jno
test
inc
in
lds
adc
loopne
inc
inc
call
(bad)
cmp
dec
mov
xor
cwde
(bad)
(bad)
jmp
push
jmp
jge
lods
faddp
fisub
xchg
gs
repz
or
mov
add
jecxz
cdq
sbb
inc
mov
push
push
xor
arpl
add
pop
outs
and
adc
jmp
push
jnp
cmc
test
jb
add
shl
add
mov
mov
or
int3
mov
ins
inc
dec
add
pusha
cmps
gs
icebp
cmp
out
add
and
in
mov
mov
jns
(bad)
cs
and
cdq
push
pop
icebp
loop
test
xchg
int3
mov
test
pushf
pop
add
fsub
mov
in
je
sbb
mov
aas
out
or
aaa
sub
push
mov
adc
mov
inc
into
fcmovu
mov
js
mov
loop
neg
and
jno
push
jbe
or
test
dec
adc
(bad)
cmps
mov
ss
jecxz
adc
imul
out
jno
movs
dec
push
pop
mov
push
(bad)
out
push
or
call
pop
mov
addr16
repnz
mov
and
retf
xor
mov
cmp
and
test
xor
push
repnz
shl
sub
dec
and
nop
dec
fwait
cmp
mov
cmps
cmc
dec
(bad)
retf
out
xchg
cmps
sbb
jmp
lahf
nop
xchg
jmp
cs
int
jo
mov
cwde
add
outs
gs
cmc
mov
bound
ss
or
push
jmp
xchg
lahf
jns
imul
xchg
add
movs
cdq
and
movs
cmp
jmp
enter
adc
lock
jae
pushf
xchg
(bad)
lds
mov
popa
cli
mov
inc
ror
popf
jb
je
popa
mov
xchg
in
in
jp
add
jne
out
add
mov
js
scas
pop
adc
cdq
je
cwde
in
cmps
movs
aam
push
xchg
push
fisttp
stos
sub
xchg
adc
mov
mov
pop
jb
mov
mov
or
jb
xchg
fild
mov
enter
aaa
sub
jb
xchg
mov
jno
div
pop
xchg
jmp
test
xchg
mov
movs
push
mov
push
sahf
mov
jnp
inc
cwde
in
add
or
sbb
or
cli
jmp
jmp
mov
and
dec
std
xor
enter
or
addr16
cmp
jne
lahf
das
add
sub
mov
dec
(bad)
or
sub
lods
push
add
dec
bound
out
xor
in
in
push
push
adc
mov
inc
adc
fadd
fsub
or
fnsave
pop
mov
ror
xor
mov
sub
mov
pop
outs
scas
call
mov
ret
in
les
push
pushf
mov
pop
call
addr16
lods
mov
cmp
out
cmp
out
mov
sub
mov
and
push
les
pushf
mov
daa
loopne
ret
xor
add
add
mov
xchg
push
xor
imul
int
mov
mov
or
fcmovu
fcmovu
mov
das
jecxz
mov
sub
sbb
dec
sbb
adc
and
fsubr
into
int3
xor
push
dec
je
mov
ds
fcmovne
test
fstp
push
dec
clc
mov
sbb
pop
scas
retf
nop
fdiv
gs
xchg
ja
push
cmp
push
mov
into
je
push
push
retf
(bad)
dec
ret
pop
xchg
and
and
scas
inc
(bad)
out
jmp
and
jnp
int3
std
pop
or
xchg
lock
loopne
pop
add
lods
fcmove
inc
xchg
push
push
jecxz
mov
jp
lahf
std
mov
fnsave
adc
sbb
xlat
and
mov
fiadd
js
jbe
fisttp
stos
pop
pop
outs
cmc
aas
call
mov
adc
dec
cmp
popa
xchg
jne
retf
pop
faddp
mov
jb
neg
xor
fcmovnb
js
ins
mov
icebp
rcr
cli
dec
push
rol
xlat
cmc
and
pop
data16
jae
add
mov
fstp
xchg
jne
lahf
xchg
dec
pop
adc
ins
xchg
cdq
pop
out
out
cmp
pop
xchg
adc
jne
mov
mov
sbb
push
and
and
pop
push
bound
cmp
mov
iret
push
mov
mov
movs
outs
xchg
mov
adc
fs
push
cmp
xchg
push
xchg
xchg
xchg
jle
jbe
pop
jge
test
jb
test
pop
nop
sbb
cmps
(bad)
dec
cmp
out
jns
cmp
leave
(bad)
jle
out
pop
mov
sbb
inc
and
mov
mov
xor
mov
sub
mov
mov
push
out
ret
or
inc
xor
jmp
jmp
mov
dec
pusha
je
mov
xchg
ins
sbb
pop
int3
jecxz
neg
pop
in
mov
iret
imul
iret
mov
mov
and
push
xchg
out
and
icebp
xor
add
or
mov
push
sbb
call
mov
bsr
pop
xor
in
hlt
push
push
adc
mov
pop
fs
fisttp
movs
mov
mov
shl
jge
imul
sahf
or
and
mov
xor
in
inc
adc
or
sub
aas
fadd
sub
(bad)
aaa
adc
fucomi
xchg
mov
jbe
fldenv
test
ss
mov
or
inc
sub
(bad)
lods
inc
sahf
test
loope
mov
mov
dec
(bad)
jl
xchg
iret
imul
sub
add
cs
adc
mov
fcom
jnp
outs
mov
rol
pop
repnz
rcr
mov
push
mov
mov
and
jno
inc
push
pop
pop
imul
or
sti
xchg
lock
adc
pop
imul
jmp
jb
adc
outs
gs
stos
bound
jle
in
cmp
mov
sub
jno
ins
or
adc
pushf
inc
dec
stos
dec
xchg
das
lahf
nop
adc
imul
adc
or
gs
mov
sar
or
jbe
sub
sbb
inc
popf
imul
xchg
icebp
add
add
sbb
pop
outs
dec
push
lods
not
add
and
jp
adc
mov
aaa
out
inc
mov
xchg
xor
jg
iret
sub
xchg
xor
mov
mov
pop
outs
(bad)
shl
stos
sbb
mov
repnz
in
sbb
div
hlt
xchg
sar
xchg
xchg
and
add
jmp
sub
ds
sar
inc
outs
aad
mov
jbe
pop
cmps
std
das
jl
(bad)
nop
inc
cld
addr16
pop
dec
loope
mov
pop
jno
or
and
jno
pop
fcomp
cli
shr
push
aam
cwde
mov
loopne
cdq
pushf
sbb
leave
call
imul
or
fmul
add
xor
je
pop
push
inc
mov
or
inc
cwde
fidivr
movs
fwait
sbb
icebp
mov
adc
call
mov
push
ja
pop
scas
inc
xchg
pop
scas
add
or
jb
sub
aam
jecxz
and
loope
inc
mov
push
sbb
jmp
inc
sub
xor
or
adc
jae
inc
and
jnp
lods
dec
jne
push
out
sub
inc
(bad)
es
and
mov
and
mov
call
cli
test
outs
xor
sub
pop
hlt
mov
nop
push
push
cmp
dec
xor
idiv
xor
mov
and
hlt
adc
mov
mov
jge
mov
xor
in
lods
pop
retf
cmc
dec
daa
(bad)
sub
adc
push
adc
push
mov
or
sbb
sbb
inc
ja
imul
push
sub
mov
cmc
push
test
daa
sub
ins
bound
retf
adc
(bad)
mov
int3
push
jmp
(bad)
jo
xor
push
xchg
in
add
popf
ret
add
inc
jle
(bad)
cmps
and
std
mov
cmp
mov
mov
xor
out
leave
pop
jnp
sbb
out
iret
in
jle
cmps
xor
std
inc
push
imul
stos
das
push
je
push
call
in
add
fnstsw
repnz
(bad)
adc
fs
sbb
add
ins
xchg
rcl
push
daa
mov
xchg
pop
es
int3
lahf
addr16
sub
clc
pop
mov
les
fcmove
ins
repz
mov
push
lock
and
int3
xlat
jge
test
(bad)
adc
or
test
pop
mov
dec
pushf
fistp
jge
fcomp
jmp
pop
addr16
adc
stos
in
push
test
xchg
add
mov
add
cmc
(bad)
sbb
xchg
test
or
test
test
daa
mov
ret
cmp
push
sbb
adc
test
xchg
lods
arpl
pop
lock
mov
push
add
pop
cld
jle
nop
sar
bound
aam
sbb
mov
cdq
call
arpl
pop
movs
add
jnp
xchg
dec
in
push
jecxz
jl
xchg
es
mov
adc
cmc
in
jo
add
(bad)
or
mov
call
out
test
xchg
not
jecxz
push
or
retf
sub
push
dec
adc
sub
fmulp
pop
js
or
hlt
scas
sub
jg
jmp
adc
cdq
loopne
mov
push
xor
sbb
mov
cld
cs
fwait
jo
aas
repnz
cmp
aam
mov
push
pusha
and
dec
mov
pushf
mov
in
inc
test
jmp
adc
add
and
adc
and
out
mov
push
movs
pop
xchg
mov
pop
(bad)
stos
mov
dec
and
cmp
pop
stos
pop
sbb
call
sub
jle
and
lock
mov
std
into
cmp
pop
mov
jnp
push
or
xor
inc
mov
push
mov
xlat
in
in
cmp
dec
fisttp
pop
sbb
(bad)
push
in
pusha
icebp
and
mov
das
lds
icebp
jne
push
popf
xchg
daa
xor
clc
cmp
(bad)
fsubr
cmp
pop
jmp
mov
or
xchg
cwde
or
xor
mov
xchg
je
pop
pop
cs
dec
adc
fs
fnclex
sub
jnp
popf
fst
pusha
add
movs
xchg
inc
and
sub
stc
imul
cmp
sbb
add
stos
and
pop
pop
cmps
cmps
xchg
fucomi
xor
sbb
mov
mov
xor
scas
sti
(bad)
iret
in
arpl
pop
aad
(bad)
cld
sbb
fsub
mov
xchg
sub
adc
xor
out
pop
sub
cmp
lods
mov
xor
pop
cwde
sub
in
stc
icebp
jmp
xchg
push
mov
scas
jae
mov
shr
pop
mov
or
mov
dec
push
js
cli
cld
lods
test
mov
sbb
outs
jbe
push
ins
adc
aad
xor
or
sub
fld
pop
test
fsub
aas
push
cld
mov
push
in
inc
rol
xlat
lea
xor
adc
jno
mov
mov
pop
lods
sbb
push
inc
stc
mov
cmps
pushf
lods
push
pop
push
es
sub
cmp
cmp
mov
add
sbb
jne
inc
outs
retf
push
cmp
ss
xchg
jae
retf
adc
adc
rol
xchg
dec
sbb
mov
fldenv
test
call
or
enter
dec
retf
enter
jl
cmp
xchg
aas
(bad)
inc
data16
jg
and
ret
cs
lods
mov
hlt
in
mov
in
push
and
dec
mov
outs
adc
sti
dec
push
ja
mov
fwait
lahf
sahf
pop
pop
mov
loopne
out
ins
imul
lock
fimul
aad
(bad)
lock
movs
inc
jnp
stc
fnsave
adc
cmp
mov
std
mov
jno
inc
aam
scas
sbb
pop
mov
cmp
fwait
sbb
adc
jns
sbb
push
mov
div
lods
push
scas
dec
xor
mov
dec
rcr
xchg
cmp
dec
jg
push
mov
jl
cmc
push
pop
xchg
movs
xchg
in
mov
fdiv
nop
fs
xor
fnsave
push
fs
mov
sub
push
mov
adc
or
das
mov
call
inc
inc
sahf
mov
sar
cwde
movs
cdq
cmc
sub
aas
add
push
int3
mov
push
leave
imul
lock
adc
cmps
and
or
xor
repz
mov
nop
inc
mov
and
cmp
das
imul
ret
popf
loopne
loop
out
push
test
dec
inc
sbb
dec
sar
test
jg
fld1
ficomp
pop
pop
data16
and
sub
cmp
repz
xor
(bad)
das
sub
imul
(bad)
mov
call
daa
pushf
sti
retf
cmp
stos
push
ins
and
or
add
sbb
pop
dec
ins
sar
movs
sub
cmp
pop
daa
pop
ror
inc
add
lods
pop
dec
xchg
cmp
cs
adc
cmp
shr
sub
and
add
xchg
stos
ror
arpl
nop
pop
aad
inc
iret
div
lock
pushf
xchg
cmp
mov
jo
mov
push
out
jno
cmp
out
xchg
add
retf
pop
imul
dec
inc
rol
jbe
cld
repnz
repnz
out
test
fistp
pop
sar
arpl
inc
das
cmp
push
mov
imul
pushf
call
push
pop
je
cmp
push
mov
scas
movs
mov
(bad)
outs
nop
push
leave
or
stc
cmp
outs
mov
repnz
fstp
repz
mov
mov
and
dec
stc
bnd
jge
enter
(bad)
out
mov
xchg
das
xor
jecxz
into
(bad)
call
mov
aad
sub
test
mov
push
xchg
aad
(bad)
and
test
and
xchg
mov
inc
in
pop
xor
cmc
mov
(bad)
daa
cmp
fsub
jno
jmp
arpl
mov
ret
sbb
sub
dec
xor
inc
(bad)
pushf
cmps
jl
or
out
or
in
push
(bad)
add
cmp
xchg
jne
pushf
mov
cmp
xchg
xchg
push
push
pop
push
pop
div
or
dec
sti
push
stos
mov
add
xor
lds
stc
jb
fnstsw
sbb
inc
lahf
push
or
mov
add
push
sbb
add
jge
push
mov
js
mov
pop
jp
mov
xor
or
fmul
cmc
call
mov
test
retf
popa
jp
mov
lds
adc
push
cmp
addr16
sbb
mov
arpl
loop
inc
push
cmp
pushf
mov
cmp
xor
outs
sar
dec
sbb
loope
fiadd
ss
sub
lock
scas
push
ins
xlat
popf
fiadd
loop
cmp
mov
nop
mov
adc
out
jbe
fdiv
dec
test
push
jno
hlt
add
add
mov
push
rcl
jae
das
shl
fs
ds
mov
(bad)
pop
and
xor
sar
mov
mov
hlt
pop
push
je
movs
mov
inc
fabs
or
xor
cmp
cld
loope
aas
inc
in
cmp
lahf
mov
dec
cdq
sbb
or
pop
jb
mov
sub
ds
xchg
jbe
mov
nop
in
inc
cmp
repnz
and
mov
cs
cmps
cmp
les
ucomiss
es
sub
and
or
cli
jnp
mov
pcmpgtw
inc
not
mov
out
cdq
imul
clc
xchg
add
call
adc
retf
icebp
mov
std
xlat
adc
(bad)
inc
mov
data16
jge
xchg
mov
je
shl
jl
sahf
scas
mov
pop
xchg
cmp
mov
cvtpi2ps
mov
fimul
pop
movs
mov
mov
mov
sti
mov
xor
int3
and
push
or
int3
lock
popf
sahf
mov
ret
cmps
pop
sti
mov
push
out
mov
push
(bad)
(bad)
pop
lock
jns
lahf
aad
pop
jecxz
les
mov
je
arpl
jmp
pop
mov
in
xor
mov
pop
inc
add
jl
xor
(bad)
sbb
sti
enter
sbb
aad
(bad)
and
and
(bad)
xchg
jnp
xchg
test
call
mov
(bad)
jl
adc
fwait
add
sbb
adc
movs
ror
sti
pop
in
cli
mov
mov
(bad)
repnz
dec
inc
pusha
mov
out
jl
inc
cmc
jne
mov
outs
(bad)
imul
shr
add
fiadd
jo
out
clc
adc
add
add
jmp
scas
int
push
cmp
cmp
jne
fidiv
addr16
xchg
iret
ds
add
lahf
xchg
mov
mov
(bad)
pop
xor
scas
aaa
jp
mov
loope
and
in
jmp
bound
and
adc
in
jmp
mov
cmp
mov
mov
das
dec
xor
mov
add
aam
jae
jg
ret
jbe
movs
mov
sbb
aas
push
call
jecxz
jo
push
jecxz
sbb
stos
addr16
inc
(bad)
(bad)
repz
ds
(bad)
push
xor
xchg
mov
mov
push
ret
pop
(bad)
aad
dec
mov
jp
inc
sbb
sbb
std
add
ins
gs
jg
movs
addr16
repnz
adc
jnp
and
daa
dec
sub
jns
sub
fs
jg
sti
mov
jo
inc
xchg
xchg
dec
pop
push
mov
xor
dec
clc
inc
dec
pop
test
out
mov
mov
lods
call
push
scas
pop
pop
outs
or
popa
jle
test
xchg
int3
inc
or
stos
dec
out
pusha
(bad)
inc
mov
mov
jl
neg
(bad)
es
add
lds
add
fs
dec
push
add
outs
not
jbe
and
jne
jo
rcr
dec
aad
pop
jnp
push
add
xchg
inc
sbb
xchg
jns
call
push
sub
pop
xor
sub
and
push
shl
xchg
jo
add
leave
call
cmp
add
xchg
scas
push
mov
in
or
loop
dec
dec
cmp
mov
xchg
icebp
mov
mov
addr16
addr16
aad
mov
xor
xor
add
aaa
lea
inc
shl
fcmovne
sbb
push
cli
mov
xchg
add
and
jecxz
mov
dec
pop
int
xchg
pop
test
inc
and
push
xlat
in
xor
jge
clc
jae
xlat
sar
std
loope
aad
les
hlt
bound
xchg
dec
or
sbb
push
popf
popf
xchg
ins
fndisi(8087
mov
xchg
fwait
daa
push
mov
repz
mov
lods
(bad)
fs
arpl
sub
xchg
mov
mov
fs
cmp
lods
les
push
sub
sbb
fucom
xchg
neg
jb
push
outs
xor
cmc
sbb
add
fcomp
cmp
jmp
loopne
pop
pusha
enter
mov
in
les
xchg
or
stos
xor
push
and
mov
pop
into
dec
cmp
mov
push
mov
fucom
cmps
jl
xchg
imul
dec
(bad)
sahf
sahf
cmps
mov
push
std
je
push
lods
xor
fisubr
dec
sub
pusha
mov
xor
out
fwait
push
push
div
mov
pushf
jne
aam
cs
mov
push
jbe
std
jle
inc
xchg
stc
shl
test
mov
iret
xchg
xchg
lahf
adc
xor
inc
out
mov
mov
or
aas
mov
fisttp
repnz
sub
sbb
xor
or
sbb
cmp
loope
adc
out
pop
xor
pop
jle
nop
daa
and
dec
call
mov
fnstsw
movs
aam
in
mov
and
inc
mov
pop
inc
dec
ret
pop
push
or
out
jno
xchg
push
icebp
xchg
jbe
enter
clc
push
or
jl
shl
lahf
fisttp
fsubr
fild
push
bound
mov
das
adc
es
sbb
arpl
dec
into
rcr
pop
mov
mov
(bad)
push
aad
mul
push
(bad)
ficomp
aaa
cmp
aas
dec
daa
xor
mov
pop
cmp
adc
sub
int3
xchg
sti
clc
mov
pop
je
xchg
cs
jge
cmp
int3
imul
punpcklwd
cmc
sub
in
(bad)
(bad)
repz
and
pop
inc
in
and
adc
sbb
enter
imul
mov
and
jns
push
pop
push
sbb
(bad)
inc
xor
sbb
and
(bad)
cmp
in
mov
add
jmp
push
test
cli
inc
js
rcr
das
fisubr
mov
mov
in
adc
popf
mov
mov
mov
call
inc
(bad)
movs
pop
adc
cmp
add
jbe
push
xchg
ficomp
fcmovnu
es
ds
int3
repz
sbb
push
xlat
jmp
push
and
mov
aas
xor
mov
aas
bswap
leave
(bad)
adc
jle
popa
cmp
and
data16
push
sbb
pop
mov
aam
inc
jle
data16
(bad)
xor
int
mov
or
repz
je
lods
bnd
fdiv
fidiv
add
cmps
push
xor
xor
(bad)
(bad)
jge
mov
adc
sub
push
sar
mov
retf
mov
call
mov
lock
dec
dec
fnstcw
cmp
jle
mov
or
ins
out
data16
push
or
enter
xchg
ss
cmps
fsubr
push
loopne
div
push
mov
(bad)
push
dec
cmp
xchg
das
inc
fadd
push
adc
ins
fisttp
jl
mov
sbb
mov
ret
inc
mov
movs
mov
out
lods
pushw
cmp
in
mov
ins
(bad)
fldenv
xchg
adc
adc
fs
mov
jg
xchg
imul
cwde
pusha
sbb
jg
je
adc
aas
jno
adc
div
mov
push
out
call
sub
mov
cmp
xor
data16
push
push
push
fwait
iret
mov
cmpxchg
lock
dec
mov
xor
aam
pop
sub
adc
shr
out
cwde
vpavgb
jbe
sub
retf
call
aas
hlt
mov
cmp
xchg
stos
xchg
mov
push
and
repnz
fwait
aaa
mov
adc
push
dec
mov
push
clc
stc
jmp
inc
pop
aaa
push
lea
fsubrp
fiadd
scas
pop
mov
mov
test
js
mov
sub
push
xor
and
cdq
inc
out
mov
jno
sbb
mov
stos
jb
dec
mov
dec
rcl
sbb
push
jp
push
mov
rol
stos
inc
push
ins
enter
out
fisubr
add
mov
inc
mov
fs
ins
or
ficomp
pushf
leave
out
inc
inc
mov
sbb
push
xlat
push
cmps
jbe
jmp
or
xchg
ret
push
xor
bnd
je
clc
ret
std
inc
mov
(bad)
mov
push
add
cmp
jmp
dec
sub
pushf
xor
aad
adc
scas
sbb
stos
das
jae
mov
pop
xchg
fidiv
ss
movs
rol
and
push
stos
cli
pop
js
or
mov
sub
sub
gs
repz
gs
pushf
xor
adc
add
mov
addr16
mov
add
jo
mov
sar
jnp
sbb
stos
mov
fstp
lock
fwait
adc
push
push
(bad)
lods
(bad)
nop
movups
jecxz
ja
sbb
jecxz
call
(bad)
clc
adc
dec
add
test
cs
repnz
xchg
inc
jmp
aam
xchg
sbb
mov
das
popf
add
pop
mov
js
cmp
scas
int3
cmp
in
xor
mov
pop
loop
outs
mov
or
or
xchg
scas
aam
aaa
mov
dec
jl
xchg
(bad)
(bad)
mov
ror
ror
add
int3
pop
xor
retf
xchg
pop
ins
movs
js
rcl
xor
shl
mov
pop
push
sub
mov
cmps
or
add
inc
push
hlt
js
cli
ror
in
push
mov
xchg
jbe
sub
inc
add
jne
aam
shl
stc
xchg
sub
pop
nop
jo
push
jl
repnz
repz
jl
ja
jns
or
add
inc
test
je
lea
loope
test
cmp
cmp
and
xlat
fdivp
scas
add
(bad)
jno
ret
ins
pop
fisub
cmp
js
(bad)
sbb
push
dec
push
popf
loopne
dec
fwait
jnp
xlat
add
inc
xchg
push
cmp
out
loop
out
xchg
leave
xlat
jne
sbb
xorps
jne
push
xchg
mov
into
jo
adc
inc
cs
lds
jo
call
les
shl
lods
sub
std
jae
shr
xor
scas
xchg
pop
push
mov
or
or
fstp
jmp
ss
cmp
ins
and
sub
sub
fadd
cmps
sub
neg
(bad)
pop
mov
movs
(bad)
and
mov
dec
xor
push
loop
in
cmps
loop
cdq
sub
mov
adc
aaa
push
pop
addr16
fcmovb
add
out
mov
mov
lods
or
push
call
test
dec
pusha
xor
rcl
adc
or
pop
pop
cmp
mov
jmp
scas
dec
lea
jns
xchg
adc
mov
mov
ds
mov
out
test
and
cdq
movs
pop
pop
pop
add
push
mov
xchg
mov
mov
aaa
fisub
into
movs
retf
or
mov
popf
mov
mov
outs
jmp
jb
icebp
mov
mov
push
movs
jbe
out
jp
ins
shl
add
dec
xchg
sbb
mov
bound
ret
dec
xchg
cmps
adc
test
add
or
and
lods
popf
aaa
std
xchg
loop
fcomp
adc
loop
sti
jecxz
fidiv
mov
in
and
jnp
les
les
adc
adc
loopne
(bad)
xchg
popa
scas
or
pop
or
frstor
cmp
push
inc
xchg
cmp
loopne
push
sub
push
in
adc
and
sub
iret
push
pop
jb
mov
xchg
ins
jecxz
jno
ret
push
dec
fisttp
push
jmp
mov
dec
cld
call
lock
stos
add
cmps
stc
aad
xor
lock
or
xchg
push
ret
sub
and
xchg
fcomip
pop
mov
adc
cld
stos
xor
mov
(bad)
pop
jg
cld
xchg
push
icebp
test
lods
mov
push
pusha
push
lock
sbb
fldenv
inc
je
pop
dec
xor
les
aad
cmp
es
aam
fwait
jne
and
cmp
(bad)
pop
push
(bad)
in
mov
and
fld
sbb
std
mov
(bad)
std
jno
jle
(bad)
(bad)
pop
add
push
loope
cli
enter
pop
mov
pop
daa
push
aaa
mov
xchg
fstp
pop
inc
sbb
lods
sub
push
hlt
push
or
and
rol
mov
inc
push
jb
in
in
pop
mov
sahf
(bad)
call
pop
out
cmp
pop
out
sub
push
xchg
ret
pop
outs
and
pop
outs
das
push
ins
jle
push
pop
mov
aaa
cmp
(bad)
jo
cwde
jo
imul
lds
iret
pop
pushf
pop
pop
jle
in
mov
mov
nop
sbb
fs
leave
sahf
aam
inc
out
inc
ficom
push
push
in
loope
and
lods
cs
mov
sbb
std
pop
xor
adc
jbe
into
jp
push
jne
inc
(bad)
xor
adc
adc
(bad)
fucomip
mov
fwait
in
iret
std
lock
test
pop
aaa
pop
inc
or
cmps
call
fs
mov
push
dec
xor
or
mov
mov
sbb
mov
and
inc
inc
push
popf
cmp
ret
or
lahf
outs
xor
xchg
dec
std
sub
jb
jp
push
or
jmp
ins
out
(bad)
adc
jbe
dec
ss
adc
sar
aad
aad
push
lds
das
repnz
out
adc
and
dec
in
fstp
cmps
cmp
stos
inc
ja
mov
sub
lock
mov
mov
push
bound
fistp
loopne
cdq
or
movs
pop
adc
adc
(bad)
rcr
cmps
adc
sahf
push
push
cs
mov
les
adc
pushf
aad
xchg
xchg
mov
test
movs
dec
jl
test
hlt
test
xor
xchg
inc
inc
mov
(bad)
fnstcw
fisub
pop
jns
pop
sub
test
(bad)
pop
cmp
cli
ss
inc
stc
dec
enter
loop
and
lods
dec
inc
dec
xchg
adc
inc
out
stc
adc
(bad)
sti
cmp
ins
imul
pop
adc
pop
loope
rcl
stos
stos
les
jp
or
inc
sub
and
imul
cmp
xor
ins
(bad)
dec
(bad)
push
mov
jnp
fmul
popa
lock
and
stos
fmul
xchg
jmp
enter
mov
cld
out
les
xor
outs
sub
mov
jne
dec
xchg
mov
ja
xor
ficomp
push
mov
(bad)
fscale
xchg
dec
mov
repz
mov
fwait
(bad)
mov
ins
mov
push
adc
adc
loopne
ret
adc
mov
xchg
sbb
adc
outs
sub
sub
lds
mov
(bad)
adc
sub
xchg
jne
sub
cli
cmps
dec
stos
inc
jne
pop
mov
jno
xchg
mov
retf
inc
pmaxub
push
call
daa
pop
ins
loope
push
xor
add
jmp
push
mov
fdiv
push
loopne
sub
push
lock
xchg
cmp
pop
mov
xor
mov
xor
inc
imul
loop
or
dec
popf
cmc
push
(bad)
fld
mov
fcomp
lods
jle
mov
fs
hlt
push
movs
push
or
lods
and
scas
outs
js
dec
xchg
dec
(bad)
pop
popf
push
jp
add
and
push
mov
add
or
mov
in
lods
adc
es
dec
aad
xchg
sub
in
test
jmp
(bad)
mov
rol
jecxz
test
inc
pop
or
neg
fxch
cmp
xor
(bad)
lds
xchg
sub
fxch
aas
scas
ret
cld
aam
push
mov
jle
sub
pop
and
mov
neg
int3
mov
out
pop
push
imul
adc
out
cwde
add
xor
xor
xchg
es
test
ds
outs
jle
aaa
mov
jp
clc
sar
pop
add
inc
sub
outs
mov
xchg
xchg
(bad)
fstsw
sbb
das
mov
cwde
dec
jne
sbb
je
js
jno
test
add
cmp
dec
jno
gs
push
adc
cmp
arpl
js
mov
mov
into
or
iret
cmps
mov
sub
pop
es
scas
cld
dec
mov
call
inc
mov
fst
stos
outs
dec
jp
inc
jb
lods
popa
mov
ds
bound
dec
inc
(bad)
and
jl
mov
inc
cwde
test
add
loopne
dec
jne
es
pop
mov
mov
(bad)
xor
pop
imul
mov
mov
xchg
ins
and
out
sti
push
sub
adc
movs
jne
mov
and
lods
ins
stos
mov
bnd
in
xchg
xchg
pop
lds
daa
dec
dec
stos
(bad)
hlt
in
dec
mov
push
push
ins
cwde
add
sub
clc
rcr
pop
xor
jp
adc
mov
(bad)
ds
jae
push
loope
cwde
mov
inc
xor
push
mov
cmps
cmps
adc
pop
pushf
push
out
mov
dec
(bad)
ret
xchg
movs
mov
fldenv
push
repz
cmps
sub
inc
or
das
add
adc
(bad)
dec
jns
or
add
inc
jo
mov
mov
repnz
std
scas
sbb
xchg
add
scas
push
mov
pusha
cmp
js
jmp
fmul
xor
push
(bad)
push
pusha
mov
retf
and
dec
jmp
out
call
cmp
push
and
cdq
sub
jl
cld
mov
xchg
lahf
push
lods
test
mov
imul
bound
push
dec
hlt
sbb
scas
test
data16
cmp
fimul
push
sub
mov
xor
in
outs
dec
jns
push
aad
jb
fidiv
cmp
fst
ja
cmps
repz
xor
(bad)
mov
lods
pop
out
out
pop
sub
push
mov
iret
mov
jg
(bad)
div
sahf
or
stc
mov
aad
push
mov
jae
mov
xchg
mov
scas
sbb
iret
sbb
dec
fistp
mov
jp
outs
push
and
dec
iret
pop
sub
mov
(bad)
popf
mov
dec
es
in
xor
rcr
cld
dec
arpl
or
jne
mov
fmul
cmp
and
scas
xor
fst
or
push
stc
scas
lea
call
test
mov
sub
xor
lahf
xor
or
cmp
jmp
imul
mov
dec
push
test
sub
push
test
cmp
test
mov
push
test
out
mov
imul
cmp
push
in
inc
(bad)
lea
pop
dec
and
mul
jl
fild
mov
adc
pop
mov
xor
jo
push
inc
ret
cmp
xchg
dec
mov
dec
cmc
ins
cli
mov
lods
mov
aad
pop
ins
inc
sub
pop
xor
mov
in
xor
ins
mov
sub
cmp
jp
sbb
inc
outs
mov
je
push
xor
aam
fs
les
cmp
push
xor
add
sub
loop
sbb
(bad)
pop
jne
movs
sbb
mov
pop
mov
or
dec
retf
mov
pop
(bad)
pop
pop
scas
imul
hlt
daa
push
in
inc
out
jl
and
aam
(bad)
xor
pop
mov
jnp
je
lods
jge
cld
sbb
jp
call
das
rcl
imul
fistp
(bad)
sub
gs
loop
push
sbb
mov
mov
nop
mov
pop
mov
pop
call
dec
test
mov
xor
push
and
add
adc
sbb
sub
or
jnp
lods
or
mov
in
push
mov
inc
out
or
imul
xchg
test
test
out
xor
and
push
outs
sub
fisub
push
dec
xor
mov
push
mov
fwait
or
mov
mov
mov
cmp
mov
in
iret
movs
retf
cmps
jno
pop
dec
xor
fcmovne
mov
ja
in
sbb
or
sbb
or
ret
push
xor
or
push
in
stos
movs
sbb
jecxz
cli
mov
dec
ffree
sbb
lods
rcr
mov
add
hlt
(bad)
icebp
mov
adc
pop
push
mov
dec
scas
jl
imul
cmp
sub
add
jne
lahf
fldl2e
push
pop
(bad)
(bad)
adc
ret
or
gs
daa
add
xchg
sbb
je
pop
ds
dec
ja
jl
xlat
mov
mov
out
xchg
jp
test
or
push
push
cld
and
(bad)
mov
dec
arpl
pushf
xchg
adc
push
xor
adc
aam
adc
jl
cmp
call
mov
movs
cwde
sub
test
xor
enter
xor
jmp
loope
scas
mov
inc
repz
sbb
and
pop
xchg
int
sub
aad
cmp
and
adc
mov
push
mov
test
int3
cmp
scas
call
pop
sub
jge
mov
cmp
xchg
fwait
pop
jmp
xor
sahf
call
pop
pop
retf
jmp
lods
lahf
rcl
jmp
dec
add
xchg
mov
push
(bad)
pop
sub
call
mov
retf
pop
shl
(bad)
imul
mov
sar
push
mov
popa
mov
pop
icebp
cld
jne
test
mov
cmps
les
outs
sti
cli
ss
arpl
loopne
lods
sbb
nop
fcomp
push
jecxz
inc
inc
and
addr16
rcl
call
mov
push
pop
inc
xchg
mov
mov
pusha
push
add
push
dec
sub
stos
mov
cmp
mov
nop
fnstcw
pop
lahf
adc
lahf
shl
sahf
or
lds
mov
or
sbb
add
adc
sub
jo
push
sub
mov
push
rol
sbb
and
mov
adc
pop
out
sar
add
xchg
sub
pop
je
leave
cwde
cli
retf
mov
in
push
pop
popf
cmps
push
pop
xchg
(bad)
and
or
xchg
jbe
or
xor
lds
out
jg
cdq
fwait
mov
fdiv
ficomp
pop
push
mov
adc
jle
bound
cmp
addr16
out
xchg
ins
movs
sbb
mov
ins
pop
orps
loope
call
lods
jbe
popa
or
shl
jnp
(bad)
std
mov
adc
(bad)
div
cmp
mov
xor
cmp
jae
pusha
add
push
jbe
sbb
in
cmp
mov
jg
call
dec
rcl
ins
clc
(bad)
push
sbb
pop
jl
js
frstor
retf
xchg
mov
fdivp
repnz
pop
mov
fsub
jbe
sub
inc
mov
cmp
nop
fs
mov
sub
(bad)
xchg
dec
adc
je
push
shl
pop
sub
fsub
push
sub
sbb
sub
sub
fisttp
mov
enter
and
mov
xor
cld
pop
pop
add
sub
and
mov
lods
xor
loopne
pop
pop
dec
inc
in
sub
sbb
ss
inc
int
fsubr
push
jno
movs
leave
xor
adc
inc
jne
sahf
push
add
addr16
fmul
loop
xlat
pop
xor
pop
dec
loope
int3
jno
jg
xchg
xor
jb
imul
jo
inc
jne
adc
and
fdivr
mov
mov
xchg
sub
and
ja
sar
pop
out
pop
(bad)
std
retf
cld
imul
sar
and
(bad)
aad
dec
fdiv
(bad)
stos
pop
xor
xchg
add
in
mov
and
addr16
add
lods
jge
pop
mov
int3
cld
jno
(bad)
jnp
in
hlt
adc
in
inc
xor
cmp
and
data16
mov
rcr
push
inc
pop
mov
mov
pop
mov
sahf
mov
movs
xchg
xchg
inc
call
fwait
mov
dec
test
mov
mov
sub
pop
std
sub
mov
adc
imul
xchg
outs
nop
mov
xchg
aaa
fxch
inc
sbb
call
lahf
mov
scas
call
jae
mov
dec
cmp
and
bound
cmp
xchg
mov
mov
mov
add
mov
neg
jecxz
or
stos
jbe
jb
xchg
add
cmp
jns
adc
pop
test
fsub
xlat
push
shl
cmp
dec
and
and
dec
mov
out
fisttp
sbb
dec
sub
cs
inc
push
cmp
xor
inc
xchg
jne
push
dec
enter
or
cmp
mov
mov
adc
jmp
mov
push
popa
out
lods
xchg
mov
mov
sti
inc
(bad)
ficomp
fcomp
mov
sahf
sbb
mov
mov
outs
inc
xor
cmc
fadd
xor
jmp
ror
xor
(bad)
adc
inc
inc
jle
addr16
data16
mov
mov
xor
inc
mov
add
add
add
popf
pop
xor
dec
adc
cmps
mov
cmps
jp
int
cld
stc
pop
mov
sti
jecxz
ret
mov
cmp
inc
jb
xor
daa
clc
and
lods
mov
push
push
xor
lods
(bad)
pop
jmp
add
mov
jmp
bswap
push
cs
pop
cmps
sub
jl
jl
test
enter
mov
stc
xchg
cmp
jmp
stc
xlat
jne
mov
nop
fwait
push
cwde
cmps
inc
test
stc
push
(bad)
and
jnp
push
in
cld
cli
les
jno
out
adc
cmp
imul
dec
pop
mov
sub
mov
push
adc
in
jnp
sahf
icebp
(bad)
and
and
scas
in
out
sub
ds
(bad)
pop
pop
inc
mov
pop
mov
test
xchg
mov
out
int
pop
sub
push
test
fcmovbe
push
sub
ss
lahf
shl
pusha
shl
mov
and
sub
imul
mov
adc
loop
sbb
hlt
stc
call
imul
jmp
enter
adc
out
rcl
into
push
inc
pop
jmp
in
data16
mov
fst
push
push
push
lock
cmp
pop
sbb
test
mov
das
into
xchg
bound
fwait
and
sbb
rcl
inc
mov
or
xchg
jmp
lods
and
inc
jg
fwait
pop
into
repnz
in
push
jns
test
cwde
pusha
pop
bswap
jp
add
cld
and
xchg
popa
cmp
xor
cmps
mov
out
call
pop
cmps
jmp
sub
mov
jecxz
xchg
and
cmp
retf
jmp
cdq
add
fwait
jbe
or
pop
xor
jecxz
add
fsub
xchg
inc
pop
adc
mov
mov
lahf
je
cmp
and
idiv
sahf
(bad)
sbb
scas
sbb
imul
add
xchg
pusha
push
shl
sbb
adc
jmp
mov
out
aad
add
mov
fs
ret
jp
(bad)
daa
push
pop
jae
data16
mov
ins
xchg
pop
mov
aas
mov
or
xor
jno
cmp
jo
(bad)
not
jl
pop
fldenv
fist
fwait
inc
daa
out
pop
push
add
loop
add
fisttp
sahf
fld
ins
fnstcw
lods
sub
xor
or
inc
add
je
retf
mov
loop
add
mov
cli
out
xor
movs
repz
xor
outs
lahf
loopne
jo
mov
or
fwait
push
and
adc
lds
repz
std
ja
aaa
add
ins
xchg
pop
inc
and
xor
test
call
xchg
inc
adc
pusha
mov
cmp
mov
jne
lds
repz
adc
retf
fcmovnb
mov
(bad)
cmc
int3
aad
sub
mov
test
or
in
mov
cmp
les
mov
push
mov
mov
xchg
mov
fidivr
lock
cmp
add
dec
aaa
je
jmp
test
xchg
test
push
dec
sti
pop
pop
jmp
fstp
pop
stos
jmp
jnp
stc
jge
cli
pop
rol
cli
in
xchg
pop
scas
into
cli
cmc
lock
add
jmp
hlt
adc
sub
pop
push
inc
jb
pop
and
scas
xchg
retf
(bad)
mov
ror
ins
pinsrw
mov
or
cmp
sti
icebp
adc
es
pop
lea
into
push
fwait
lods
mov
fistp
cld
cmps
daa
in
mov
xor
jp
adc
mul
xor
in
daa
pop
jp
movs
or
inc
push
shl
lea
nop
add
push
add
dec
in
fcom
or
xor
push
rcr
xor
mov
fisttp
fs
test
inc
in
sub
pushf
ror
imul
pop
(bad)
cld
test
mov
idiv
stc
add
stos
pop
cmp
loop
add
adc
add
pop
aas
std
lods
les
outs
stc
fadd
lods
ds
pop
cmps
sub
and
sub
out
xor
add
fcom
cmp
pop
mov
mov
aas
mov
std
jecxz
cmp
cs
sbb
rol
mov
mov
in
(bad)
loop
test
fimul
xchg
in
sti
xor
push
stc
push
repnz
add
xchg
sahf
addr16
lods
adc
mov
mov
or
jle
push
inc
pop
jb
test
retf
enter
add
jmp
cmp
adc
aad
fstp
ror
add
push
fwait
aaa
jns
mov
ds
nop
(bad)
pop
aaa
cmps
mov
fnstenv
dec
jno
and
sub
shl
rcr
dec
adc
aam
xchg
out
les
and
outs
pop
cmp
push
jmp
test
sub
mov
lock
pminsw
inc
(bad)
jns
xchg
sub
in
pop
sahf
lahf
dec
push
sbb
lods
mov
(bad)
loop
sar
mov
jmp
in
nop
cmp
mov
in
(bad)
pop
mov
daa
or
popa
aad
lock
cmp
mov
add
xor
add
mov
and
das
(bad)
mov
nop
pop
push
dec
je
retf
fld
lods
xlat
in
mov
mov
cmp
jg
jmp
inc
inc
movs
sub
mov
xchg
sti
pop
pop
and
mov
cmps
jmp
popf
add
push
pop
cwde
sub
mov
mov
repz
call
xor
dec
sahf
push
(bad)
into
(bad)
fisubr
cmps
daa
pop
or
popf
push
hlt
std
cmp
xor
popa
call
push
push
sub
das
clc
hlt
repnz
or
sahf
mov
cdq
fsubrp
lea
mov
in
mov
jle
je
pop
pop
imul
ins
clc
inc
es
mov
inc
push
inc
je
push
jp
pop
(bad)
call
ds
movs
in
popf
(bad)
je
nop
mov
mov
je
push
jno
jmp
adc
(bad)
pop
sbb
cli
push
mov
mov
sub
pusha
xchg
scas
cdq
and
mov
adc
inc
xchg
push
jae
retf
loope
inc
pusha
mov
lock
sbb
and
stos
stc
aaa
imul
pop
not
mov
mov
test
jg
and
xchg
mov
sti
(bad)
mov
fsubr
and
add
xchg
and
ins
or
mov
out
mov
add
mov
xor
fwait
jns
lods
jmp
inc
push
sub
xor
dec
or
les
aam
mov
enter
mov
iret
jns
and
out
dec
popa
fs
and
or
shl
mov
stc
cmps
test
xchg
xchg
loopne
xlat
xchg
aam
fstp
ss
inc
adc
adc
nop
push
mov
jmp
fiadd
cmp
mov
outs
clc
pop
mov
and
cmc
mov
scas
sub
jnp
jp
cmps
jl
push
out
mov
sub
repz
dec
lock
jl
fcom
fisttp
vmwrite
enter
js
cmp
call
cmps
daa
or
add
leave
test
daa
fsubr
adc
sbb
mov
push
inc
pop
aas
test
xchg
in
push
js
push
stc
mov
les
lock
fidivr
mov
ins
(bad)
fisubr
lods
rcr
shl
xor
je
pop
stos
das
mov
cmp
jmp
rol
mov
data16
or
adc
and
out
push
loope
test
pop
mov
scas
hlt
push
jmp
add
push
fisttp
sbb
jns
pop
out
dec
dec
xchg
sbb
(bad)
iret
icebp
pop
pop
jae
out
hlt
add
lds
and
lahf
je
push
inc
std
push
test
fcmovb
mov
sub
xchg
imul
ret
add
sub
or
sahf
std
test
jbe
lods
ss
mov
pop
mov
test
jmp
xchg
loopne
cs
mov
mov
adc
push
push
adc
pop
pop
fst
ja
sbb
sub
sbb
add
mov
mov
jmp
and
add
cmp
sub
(bad)
inc
mov
push
push
jmp
mov
dec
pop
cli
cmp
inc
popa
jb
xchg
mov
jb
mov
mov
inc
dec
sbb
cli
leave
pop
dec
add
or
xor
cmps
push
outs
jmp
ins
retf
(bad)
out
and
data16
jnp
xor
xor
retf
(bad)
enter
add
scas
xchg
ret
scas
call
test
in
push
daa
jecxz
fld
jmp
fcmovb
bound
adc
loope
cs
movs
or
pop
mov
dec
xor
jno
clc
fld
sbb
scas
shl
mov
sbb
(bad)
push
jno
pop
rcr
gs
(bad)
stc
and
pop
stc
jp
loope
or
push
popa
movs
pop
adc
shl
stc
loopne
and
pop
retf
pop
ins
mov
inc
mov
cmp
inc
(bad)
call
push
mov
add
js
sti
imul
sar
inc
mov
xchg
fstp
push
pop
lods
mov
push
pop
xchg
test
fld
cmc
fsub
ja
push
xor
mov
jg
ret
inc
imul
sub
dec
dec
test
ret
push
popa
lods
jb
mov
add
(bad)
cmps
lods
cmps
pop
ret
jne
push
or
and
lods
mov
mov
cwde
sbb
fmul
xor
jo
test
aam
mov
xor
add
ins
clc
inc
jb
cwde
dec
xchg
cmp
mov
sbb
out
xchg
movs
imul
fidiv
pop
cwde
push
adc
mov
xor
leave
sahf
fwait
cmp
retf
cmp
lods
jns
push
mov
fst
ss
div
std
test
push
shl
scas
in
daa
outs
xor
sar
cmp
jnp
lods
(bad)
jmp
inc
jmp
loope
shl
dec
stos
inc
movs
outs
sbb
lds
sbb
and
in
push
mov
in
fmul
xchg
ror
inc
out
push
(bad)
cmp
nop
push
sbb
cdq
fsub
icebp
mov
cmp
xor
icebp
xchg
loop
xchg
retf
mov
inc
pop
stc
loope
imul
push
loope
push
ror
adc
test
iret
outs
mov
cmp
xor
inc
test
adc
or
push
jp
mov
sbb
xchg
jne
call
and
arpl
sub
xchg
inc
sbb
fsub
push
cmp
in
mov
pop
mov
xor
sub
stos
lahf
adc
popf
call
mov
sbb
outs
enter
xor
out
mov
stc
mov
ins
inc
push
adc
fisttp
aaa
mov
dec
aad
sub
xchg
test
fistp
aaa
jle
lods
dec
clc
sbb
scas
push
loop
sbb
cmp
xrelease
push
lods
clc
push
outs
jns
jp
push
in
xchg
bound
cmp
and
fsubr
push
xor
sar
cmps
clc
pop
es
into
shr
add
iret
ficom
xchg
pop
add
and
call
cmp
fs
imul
and
sbb
mov
dec
test
dec
(bad)
sbb
or
or
sub
hlt
neg
std
mov
and
or
dec
push
sub
cmp
retf
cwde
jb
shr
rcl
(bad)
pop
adc
cmp
jecxz
sbb
mov
and
data16
cmps
push
in
add
aam
(bad)
hlt
rcl
div
cmc
mov
out
scas
pop
adc
in
xchg
mov
adc
inc
pushf
mov
xor
mov
or
bound
div
ins
push
dec
iret
add
sbb
jp
sbb
cmp
sar
add
test
test
mov
xor
in
xor
inc
mov
cld
sbb
or
mov
xlat
in
out
sahf
dec
popf
sbb
adc
jnp
scas
test
and
outs
into
cmp
inc
stos
xchg
scas
fst
or
push
mov
jo
push
jmp
cmp
mov
lea
test
ret
sahf
repz
fmul
in
xchg
cmp
outs
mov
adc
ds
adc
out
or
push
aam
(bad)
cmp
movs
mov
push
imul
por
mov
movsx
push
xchg
jmp
ins
xchg
mov
mov
push
das
push
sub
jnp
cmp
mov
mov
out
and
scas
add
mov
loope
outs
repz
ss
outs
jae
jae
cmp
(bad)
pop
xchg
pushf
cmp
lock
ffreep
mov
aas
cmp
stos
adc
mov
rcr
je
or
outs
push
scas
sub
inc
retf
mov
jae
mov
xor
scas
(bad)
(bad)
push
(bad)
add
into
lods
dec
xor
test
push
xchg
sub
and
ret
cmps
push
and
mov
xchg
mov
sub
out
jmp
fild
mov
push
mov
(bad)
mov
push
and
xor
lods
aaa
add
push
repnz
xchg
mov
fisub
jecxz
inc
outs
sbb
cs
dec
out
in
jmp
cmps
sbb
dec
dec
gs
shl
jmp
pop
add
dec
push
pop
sbb
lahf
(bad)
lock
and
jbe
cmp
sub
mov
sbb
(bad)
mov
enter
push
xchg
fwait
inc
and
jl
mov
mov
cdq
lds
mov
mov
sti
inc
int3
mov
in
stc
and
pop
aaa
sub
(bad)
call
ror
or
dec
jmp
test
jmp
xchg
je
fmul
pop
or
fdivr
(bad)
push
inc
add
mov
mov
pusha
xor
out
inc
dec
xor
cmps
add
jge
jno
pop
retf
xchg
int
add
aaa
lahf
scas
in
fistp
lds
jno
sti
(bad)
push
xor
sbb
loopne
jp
xchg
popa
and
test
ss
mov
push
sbb
adc
ror
jae
(bad)
jmp
cmps
wbinvd
xchg
sub
test
bound
or
mov
mov
adc
or
jnp
sti
jb
cmp
pop
shr
imul
aad
or
jle
pop
or
lods
retw
jecxz
in
or
push
pusha
fbstp
jmp
add
push
fcmovb
imul
push
test
mov
(bad)
test
pop
outs
inc
or
popa
jne
jge
mov
jecxz
jmp
push
mov
in
adc
lock
test
push
push
fs
in
sbb
in
push
push
scas
leave
ret
sbb
int
or
movs
lahf
mov
jmp
dec
out
cli
cs
dec
out
add
int
ins
(bad)
stos
loop
in
loop
pop
pop
out
leave
or
(bad)
rol
popa
je
neg
in
jecxz
cmp
sbb
mov
scas
gs
sahf
out
ret
add
sar
adc
scas
adc
rcl
and
add
popf
out
mul
jbe
je
fiadd
fnstsw
jae
rcr
push
cld
mov
mov
xor
sbb
mov
cdq
cmps
repz
ins
inc
mov
or
out
stos
fucomp
test
jne
inc
add
sub
rol
in
cwde
adc
cs
pushf
inc
fwait
repz
movs
push
in
jmp
and
jmp
call
push
loopne
xchg
sbb
jmp
mov
out
mov
jmp
lds
mov
or
sbb
and
ins
add
push
dec
sub
(bad)
sti
(bad)
pop
in
icebp
xchg
add
jne
das
jmp
push
or
xchg
ss
movs
ror
aas
(bad)
int
outs
adc
int3
ror
das
(bad)
in
outs
inc
icebp
rcr
rcr
cs
dec
jg
(bad)
cmp
mov
imul
or
je
xchg
int3
(bad)
stos
and
daa
add
xlat
jne
cmps
stc
pop
fild
push
lods
pop
xchg
or
sbb
xchg
inc
push
jl
jg
and
retf
sub
xchg
gs
out
mov
mov
push
add
or
test
mov
add
jno
add
popf
popf
imul
cmc
ds
fcom
lahf
jge
retf
and
cmp
icebp
mov
aam
addr16
adc
or
cwde
test
xor
or
and
xor
dec
mov
push
mov
dec
pop
lahf
xchg
cmp
inc
iret
pushf
(bad)
dec
sbb
mov
cmpxchg
and
popa
movs
or
outs
addr16
jp
hlt
inc
pop
pop
xchg
imul
add
dec
sahf
mov
pop
nop
inc
(bad)
das
or
(bad)
and
adc
or
add
and
pop
mov
xchg
sbb
xor
cld
fnstsw
call
mov
mov
popf
jle
(bad)
xor
pushf
mov
dec
test
arpl
aam
mov
pop
ror
rcl
and
sub
cwde
push
mov
fwait
add
sub
and
inc
mov
xor
and
addr16
adc
mov
mov
mov
push
sub
mov
xchg
or
test
add
inc
sub
or
mov
dec
xor
es
pop
push
pushf
adc
jecxz
lahf
mov
cli
xchg
jne
jl
test
push
mov
cmc
sub
and
jb
xchg
xchg
or
outs
or
and
in
jecxz
iret
mov
ret
stc
leave
aad
dec
push
sar
loope
ins
mov
jne
mov
inc
xor
inc
pop
dec
xor
fcom
mov
ins
inc
mov
int
sbb
mov
jecxz
mov
adc
xchg
jecxz
cld
pusha
mov
push
shl
popf
ret
xchg
imul
or
sbb
stos
cld
retf
stos
pop
and
or
test
xor
xchg
adc
xchg
jnp
pop
int
xor
xor
pop
inc
icebp
loopne
not
cli
retf
in
in
lock
sub
xchg
daa
rcr
jbe
inc
sbb
lahf
mov
and
pop
or
std
pusha
cs
xor
pop
pop
xchg
sub
mov
dec
mov
mov
ins
or
pushf
jge
cmp
inc
mov
or
ror
in
stos
xor
inc
clc
xchg
retf
xchg
sub
add
sbb
ins
mov
jp
inc
xor
ret
rcl
xchg
push
add
(bad)
adc
aam
mov
pop
in
popa
pop
sbb
fadd
les
xchg
int3
adc
call
enter
(bad)
pop
pop
pop
or
rol
adc
sub
jo
cmp
ss
enter
pusha
(bad)
cdq
inc
and
cmp
pop
shl
pop
les
rcl
test
and
push
add
ss
ins
cmp
mov
push
ficom
pop
mov
cli
nop
jae
loope
(bad)
xchg
mov
scas
cmp
dec
mov
call
(bad)
dec
pop
lock
or
(bad)
xor
push
out
scas
pop
jb
int3
pop
dec
and
and
in
mov
ds
push
lea
stos
mov
xchg
cmps
sub
push
mov
shr
arpl
or
aaa
sbb
dec
cdq
ss
repz
sub
mov
call
and
inc
das
fadd
cmps
lahf
jge
adc
cwde
lods
call
pop
out
pushf
jmp
movs
pushf
add
xor
cmps
mov
out
add
cmp
sbb
jns
icebp
push
test
ret
jmp
stos
imul
sti
div
jl
mov
push
inc
pop
rcl
das
add
inc
add
sahf
popa
dec
dec
sbb
push
xor
test
sahf
sbb
mov
out
icebp
jl
sub
adc
repnz
add
cwde
in
repnz
jns
pop
pop
inc
mov
or
jg
xchg
les
or
xor
sub
mov
es
imul
or
and
dec
fild
xlat
ins
retf
lods
jle
ja
in
movs
dec
push
push
sti
pusha
jmp
mov
outs
inc
jno
movs
in
(bad)
jae
imul
xor
mov
and
xchg
sub
fiadd
add
mov
jp
jmp
(bad)
adc
lods
retf
stos
or
loop
inc
mov
sbb
pop
aas
(bad)
fimul
leave
fidivr
cmp
jmp
mov
cdq
cld
mov
adc
jmp
enter
pop
mov
(bad)
pop
js
mov
push
ret
popa
icebp
shl
call
inc
mov
ss
movs
jns
push
and
jl
cmp
jns
(bad)
retf
sub
lds
add
bound
out
lock
sub
fld
pop
sub
cld
in
mov
scas
imul
jl
lahf
pop
jne
call
imul
mov
sub
iret
fistp
jno
daa
aas
mov
dec
aaa
mov
imul
sub
push
dec
sub
repnz
inc
loopne
push
test
add
jg
cli
push
cmp
out
cmp
fist
inc
je
enter
pop
(bad)
pop
dec
bound
cdq
(bad)
mov
in
clc
pop
fdivp
scas
jno
scas
(bad)
push
js
rcl
push
rol
or
cmp
(bad)
jge
aam
sub
sbb
outs
icebp
imul
cld
aam
sbb
sub
dec
cmp
fst
test
fidiv
out
pop
push
mov
fnstcw
pop
cmp
xor
or
adc
dec
add
(bad)
fild
loopne
repz
fyl2x
imul
int
pop
pop
out
scas
(bad)
jl
push
and
call
pop
(bad)
or
mov
adc
xchg
pop
fwait
das
aad
mov
rcl
dec
inc
sub
xchg
mov
adc
xchg
adc
mov
movs
cmp
add
xor
mov
mov
ffreep
sub
sub
jecxz
arpl
jmp
jnp
ja
add
test
in
fwait
cmp
mov
mov
or
test
cdq
lea
add
mov
push
into
jp
lock
jb
cmp
mov
xor
cmp
mov
sbb
arpl
clc
sbb
xchg
push
retf
pop
push
adc
fsubr
shl
jg
and
dec
jmp
mov
mov
fsub
jmp
in
hlt
cmp
clc
mov
rol
enter
jmp
repz
mov
icebp
popf
nop
daa
stc
dec
mov
mov
jo
int
dec
push
or
sub
and
mov
jbe
xchg
sar
push
ror
ins
test
sub
xchg
add
xchg
pop
sub
mov
pusha
std
pop
dec
push
jne
add
and
addr16
jge
icebp
sti
mov
cmp
mov
push
pop
retf
cmp
and
aam
inc
mov
cmc
je
icebp
das
cmp
fs
or
test
pop
jmp
ror
call
ins
retf
neg
xor
ror
sub
scas
arpl
into
and
jl
popf
pop
dec
leave
out
mov
pop
(bad)
mov
jl
adc
stc
std
inc
call
pushf
mov
test
hlt
pop
sbb
fimul
out
fbstp
imul
test
(bad)
xor
fist
imul
iret
adc
aaa
xor
cmp
mov
xor
inc
mov
pop
cmp
jle
out
cmps
ds
push
pop
cmc
rcr
call
and
xor
inc
dec
dec
sbb
stos
ror
add
hlt
scas
ins
lock
pop
push
pop
cmp
dec
pop
cmps
sub
ds
push
sub
dec
mov
add
add
mov
or
lea
xchg
sbb
and
leave
cmps
fs
retf
bound
push
(bad)
and
mov
cmp
xchg
out
or
pop
sar
arpl
add
out
jb
(bad)
push
call
xchg
mov
xchg
pop
mov
inc
xchg
jecxz
cmp
fcmovu
jle
test
sub
cmp
jo
ins
inc
cmp
rcl
test
test
in
mov
xor
or
mov
retf
test
mov
xor
xor
lods
xchg
add
cmp
sahf
out
jmp
and
popa
push
(bad)
fsubr
outs
xchg
push
jns
and
int3
xchg
push
mov
pushf
xchg
push
jg
jns
nop
xor
adc
cmp
scas
nop
call
xor
sbb
xor
inc
or
sbb
jg
add
sbb
cli
jp
fld
sub
inc
int3
pop
into
(bad)
xlat
adc
inc
std
(bad)
dec
cld
les
pop
test
dec
xchg
cdq
ds
xor
jmp
stos
stos
sub
pop
clc
sub
dec
dec
sub
imul
push
xchg
add
mov
imul
xchg
stos
pop
nop
add
adc
jle
jae
movs
add
cmc
jns
mov
out
add
cs
jmp
cmp
pop
int
in
test
mov
inc
adc
sub
ss
sub
fisttp
retf
sub
neg
lock
je
dec
div
xchg
hlt
(bad)
push
lods
mov
fcomp
inc
xchg
out
ja
cli
aaa
shr
dec
imul
je
clc
inc
push
shr
call
add
sbb
mov
inc
inc
cmps
xchg
and
clc
rcl
loopne
pop
pop
jo
cmp
pop
int
or
add
sub
(bad)
repz
test
(bad)
jno
inc
in
or
adc
push
fwait
gs
imul
or
std
ret
or
inc
sahf
xor
call
cmp
mov
mov
pop
mov
pop
in
sti
out
or
and
call
mov
(bad)
sbb
dec
push
(bad)
das
pop
pop
shl
loopne
ret
jmp
les
cmp
jle
xchg
mov
push
jne
jno
adc
dec
xlat
and
test
push
and
mov
fistp
inc
out
mov
jo
outs
sbb
paddsb
jmp
xchg
xchg
push
inc
sub
add
nop
test
(bad)
test
cdq
mul
dec
jecxz
jp
sbb
xchg
arpl
jecxz
adc
or
sub
not
lock
jg
mov
and
jmp
int
xchg
cwde
aam
or
movs
ins
adc
movs
ins
in
fidiv
fdiv
cmp
stos
xchg
in
jmp
lock
call
mov
addr16
shr
(bad)
mov
mov
inc
mov
fstp
dec
pop
jbe
int
(bad)
or
ds
xchg
shl
mov
and
inc
xchg
or
add
adc
fist
(bad)
adc
xchg
and
imul
fld
push
cmc
or
pushf
(bad)
repnz
dec
cmp
mov
cmp
adc
imul
or
out
(bad)
and
sti
xchg
and
(bad)
out
lock
bound
aam
adc
cmps
out
repz
lock
(bad)
out
movs
std
aam
pushf
aaa
and
lea
fistp
pop
bound
loop
sbb
cmp
mov
call
pushf
and
fnsave
int
mov
push
(bad)
fisttp
imul
addr16
push
pusha
xchg
xchg
movs
cmp
or
mov
jo
in
pop
das
cmc
push
or
pop
out
call
mov
push
mov
and
jbe
daa
mov
sub
push
and
cmps
cdq
bound
cmc
xlat
sar
addr16
jbe
pop
js
cmps
nop
sbb
jl
jb
mov
rcr
mov
jmp
pop
int3
fisttp
and
cmp
sub
xor
push
(bad)
cld
icebp
sub
pop
cmp
cld
adc
inc
std
sbb
les
lods
ret
call
fiadd
loop
jmp
call
or
jae
add
inc
stc
jbe
(bad)
fld
xor
mov
pop
mov
call
pop
aad
sub
fs
pop
and
(bad)
fcomp
and
sahf
ja
scas
or
std
imul
shl
dec
outs
je
xchg
sahf
cmp
jmp
fsub
dec
push
mov
mov
stc
int
push
dec
jno
fdiv
xchg
aad
add
scas
lods
je
xchg
fidivr
mov
and
fnstenv
sub
shl
and
xor
mov
inc
cmps
(bad)
mov
xchg
test
gs
sub
xchg
cli
mov
sub
aas
dec
stos
xchg
into
lea
iret
dec
mov
(bad)
adc
pop
xchg
mov
in
or
adc
cmc
mov
pop
push
sbb
add
xchg
mov
jb
jne
ror
mov
or
into
push
pop
ss
in
dec
pop
cmp
jo
leave
cmp
les
out
inc
inc
popf
dec
and
mov
fidiv
pop
(bad)
gs
adc
push
adc
(bad)
in
fisub
jno
mov
xlat
inc
or
repz
cmp
cmp
div
pop
mov
fdiv
fistp
cs
scas
gs
retf
std
xor
rcr
lock
pop
or
(bad)
(bad)
std
stos
in
js
mov
fst
dec
mov
sbb
mov
sub
in
fs
out
jmp
stos
ds
xchg
sub
int
or
div
daa
xor
mov
jnp
adc
push
adc
pop
sbb
dec
jo
dec
mov
inc
add
mov
ins
sub
mov
aam
add
sub
push
push
xchg
dec
push
repz
push
adc
xchg
adc
adc
inc
loope
sbb
daa
mov
loop
stos
test
mov
push
and
neg
(bad)
adc
mov
or
repz
add
out
adc
out
and
jg
adc
ds
loope
cdq
add
sbb
or
(bad)
cmc
adc
test
jae
test
fstp
mov
ja
out
sbb
sub
(bad)
dec
data16
iret
adc
jae
push
shr
int3
push
ret
repz
leave
or
inc
mov
adc
pop
cmp
xor
cmp
jne
imul
add
inc
in
fcmove
cmc
mov
jge
dec
(bad)
dec
stos
dec
adc
bnd
jmp
or
mov
popf
mov
xor
pop
jmp
mov
xor
mov
div
mov
xor
(bad)
cmp
pop
dec
fidiv
push
js
out
scas
and
xor
and
cmp
sbb
inc
fwait
dec
repnz
mov
mov
pop
adc
aad
test
rcr
or
or
mov
enter
es
retf
jo
pop
push
mov
in
adc
retf
push
test
ret
sub
jmp
and
daa
mov
into
clc
fimul
xchg
add
and
sti
xchg
cmc
sbb
push
sub
dec
js
popa
jmp
pop
fs
test
gs
xchg
movs
out
mov
je
sbb
sub
ins
dec
es
pop
cmp
pusha
push
xor
iret
shl
xchg
movs
jbe
(bad)
in
cdq
add
stos
mov
cli
xor
xlat
in
hlt
inc
sbb
sahf
inc
push
and
jg
into
add
ret
pop
sar
dec
mov
xchg
dec
mov
jmp
daa
cld
ins
lods
adc
out
sbb
(bad)
call
aam
ds
mov
mov
sub
pop
les
bound
dec
ret
out
jo
loope
cmp
sub
ds
cmp
fdivr
inc
mov
pop
pushf
dec
je
dec
ror
enter
pop
test
ds
pop
and
jmp
movs
xchg
sub
pushf
jle
push
jl
adc
rol
dec
push
jns
ins
jmp
clts
inc
mov
(bad)
dec
push
add
jno
sbb
sbb
ins
lods
fadd
push
int3
lock
add
jne
push
in
ror
xchg
ret
movs
sar
xchg
scas
jmp
std
and
sbb
repnz
outs
sbb
push
adc
sar
jno
xor
bound
out
mov
sti
lea
dec
sbb
cmps
or
enter
adc
push
push
frstor
cmp
inc
push
push
jmp
fcomp
push
mov
xor
sub
movs
adc
push
xchg
(bad)
cli
lods
xor
jnp
mov
loop
leave
push
mov
mov
mov
int
imul
ror
movs
and
add
push
jnp
mov
push
stc
cmc
in
cmps
es
jmp
inc
mov
repz
jmp
adc
jle
out
xor
pop
cli
popf
adc
retf
push
jl
jae
ret
sar
aaa
cld
xor
retf
and
outs
inc
xchg
cli
mov
mov
fwait
popf
cwde
cmp
xchg
jecxz
push
and
mov
adc
mov
add
cmc
sbb
pop
sahf
push
ja
mov
jnp
popa
lea
aas
xor
or
ficomp
and
mov
dec
inc
loop
in
fwait
push
add
dec
jnp
loop
push
and
mov
dec
xchg
mov
cmovae
push
(bad)
cld
out
push
fs
clc
das
mov
ror
dec
push
mov
xor
inc
and
sub
push
adc
mov
movs
rol
inc
in
xor
push
out
sbb
push
sub
xor
xor
xor
(bad)
xchg
(bad)
and
add
fcmovb
and
sahf
lahf
mov
cdq
je
iret
(bad)
mov
adc
push
pop
outs
gs
push
mov
sub
inc
mov
ss
les
jge
test
sub
std
jmp
inc
lods
pop
out
fcomp
mov
fcmovnb
mov
dec
out
outs
or
cmp
pop
adc
mov
rcr
dec
aam
push
call
sub
inc
jae
mov
jbe
fs
ret
in
fistp
cmp
call
aas
mov
dec
and
lods
(bad)
idiv
and
ret
sub
push
icebp
cmc
and
xchg
inc
push
dec
in
mov
loop
in
jae
jge
scas
stos
jbe
adc
aam
push
xor
aam
loop
xchg
dec
mov
popa
xchg
enter
aas
call
loopne
dec
sbb
push
cmps
dec
iret
leave
xlat
jne
jmp
clc
mov
inc
imul
aas
pop
popa
sar
or
lods
jbe
xor
push
dec
push
jne
mov
xchg
adc
mov
(bad)
mov
cmp
int
xchg
mov
jns
js
adc
sub
and
mov
(bad)
rcr
daa
movs
test
hlt
int3
or
inc
sbb
ret
lds
scas
fcmovb
arpl
lods
icebp
lds
add
pop
out
mov
push
mov
stc
sbb
mov
mov
push
shr
adc
ins
dec
sbb
ja
xchg
into
ret
sbb
test
jmp
repnz
movs
bound
inc
mov
sub
cmp
in
outs
out
aaa
lahf
es
int3
mov
sbb
jmp
add
cwde
jae
std
jnp
dec
mov
lock
cmp
cdq
es
cmp
push
xchg
dec
out
stc
xor
sub
push
ret
aam
cmps
inc
mov
mov
and
jne
dec
and
sbb
rol
adc
push
shl
ss
sar
mov
gs
ins
and
out
ds
cdq
pusha
(bad)
bnd
mov
add
mov
outs
(bad)
adc
and
shl
test
gs
push
jp
inc
add
test
lods
dec
fcmovnb
loopne
pop
shl
fld
cmps
fsub
clc
retf
imul
(bad)
not
push
mov
jo
lods
repnz
xor
in
and
cmc
enter
and
cli
mov
xor
stos
mov
fisttp
jae
sbb
stos
and
bound
sbb
and
out
fs
mov
retf
jne
test
mov
iret
sbb
add
iret
mov
or
(bad)
lds
lods
pushf
pop
aas
mov
push
call
sub
and
mov
data16
cmps
pop
jo
push
pop
jge
aas
mov
or
aad
jmp
icebp
mov
into
lods
cmp
push
icebp
repz
ret
and
push
stc
mov
sbb
mov
sbb
xchg
mov
loope
nop
xchg
in
push
dec
pop
add
and
sbb
pop
xor
add
div
ficomp
pop
(bad)
xor
fild
sbb
push
lahf
jb
mov
mov
dec
sbb
pop
dec
add
sbb
cmp
mov
out
push
and
stc
or
sub
jo
pop
cmp
gs
shl
xchg
and
sbb
cs
push
jecxz
xchg
mov
jae
cmp
adc
lods
imul
cs
xor
into
lods
clc
ror
pop
mul
mov
jnp
fwait
xchg
pop
jg
rol
add
je
out
mov
call
es
xor
outs
jmp
pop
jp
and
in
mov
sbb
or
repnz
aaa
ret
jge
lock
movs
popa
popa
shl
mov
sub
push
je
cld
fisub
fs
cli
xchg
pop
sub
jbe
cmps
(bad)
imul
cwde
rol
aaa
setg
bound
scas
clc
add
sub
popf
or
mov
xlat
call
xor
pop
js
pusha
push
repnz
dec
addr16
inc
loop
retf
mov
push
shl
or
inc
inc
mov
aam
sub
jno
cmps
popa
or
xor
sbb
(bad)
jmp
xchg
(bad)
xor
xor
add
cmps
jb
mov
in
xchg
pop
or
neg
xor
aaa
dec
out
aaa
aas
xchg
gs
clc
hlt
mov
fwait
ss
(bad)
jmp
sti
push
(bad)
cmc
in
jno
pop
inc
sar
icebp
cmp
inc
mov
inc
sti
sbb
adc
test
std
mov
test
jp
mov
or
xchg
loopne
cmps
cld
lock
dec
shl
in
sub
ds
movmskps
mov
aas
inc
data16
push
iret
ins
sbb
xchg
mov
icebp
mul
push
shr
mov
aas
pop
xor
gs
test
mov
out
adc
or
loopne
add
sti
das
lds
jnp
fidivr
push
or
int
sti
call
(bad)
les
pop
out
dec
repz
and
(bad)
les
cdq
mov
mov
test
les
mov
xor
dec
repnz
ins
cmp
inc
shl
movs
xor
or
scas
jl
inc
icebp
cmp
jp
popf
mov
movs
sbb
or
xor
aaa
stc
lahf
scas
inc
icebp
xchg
push
mov
inc
adc
(bad)
(bad)
in
jno
shr
out
test
shr
(bad)
out
imul
cmp
sar
push
es
mov
cmp
mov
fst
push
jno
xor
repnz
dec
rcr
push
push
rol
pop
mov
ins
and
out
das
pop
in
fwait
push
xor
sbb
pop
das
xchg
bound
adc
jmp
adc
pop
mov
ss
jb
mov
dec
hlt
xor
cmp
lahf
lds
mov
outs
retf
sub
scas
ret
scas
xor
pop
ret
pop
push
sahf
out
sbb
js
cmp
(bad)
mov
and
dec
jmp
popa
jns
into
xor
cmc
mov
xchg
es
cmps
scas
cmp
mov
xchg
leave
xchg
pop
xchg
mul
mov
or
aad
jge
and
mov
scas
add
jne
or
pop
in
neg
jmp
xor
div
mov
jo
xchg
pop
test
jmp
icebp
loope
adc
cvtdq2ps
push
(bad)
or
or
fist
cli
xor
xchg
imul
add
in
lods
sub
sti
in
mov
clc
test
dec
jmp
mov
dec
sahf
mov
cwde
ror
punpckhbw
cdq
shl
jp
test
sbb
out
out
inc
and
adc
mov
cmps
jp
dec
es
dec
sub
fmul
xor
adc
loop
jns
je
dec
pop
shl
jno
clc
jp
jns
je
or
jmp
and
fisub
sbb
sti
ds
fisub
xchg
or
ins
stos
retf
cwde
call
pusha
aad
dec
mov
mov
pushf
mov
(bad)
outs
dec
sbb
inc
repnz
ror
fisttp
xchg
push
stc
pop
mov
aad
stos
hlt
or
mov
jg
sub
movs
test
or
and
pop
xor
xchg
mov
or
loop
add
xlat
pop
pop
and
jmp
out
mov
add
shl
aam
fwait
pusha
jp
ror
mov
inc
mov
lahf
fist
mov
push
stos
mov
fnstcw
shr
cmp
test
xchg
test
ss
mov
dec
in
loopne
xor
or
cld
cmps
into
ret
outs
xlat
lods
add
retf
lods
lods
in
lahf
push
imul
fcmovbe
or
in
pusha
inc
popa
and
leave
adc
jne
retf
push
adc
movs
mov
or
xchg
js
mov
sbb
mov
sbb
dec
or
inc
mov
or
xor
xchg
add
fild
int
sbb
bnd
push
mov
mov
mov
pop
xor
clc
mov
loopne
outs
pop
in
xor
sti
sub
sub
jb
ins
fwait
je
fnstenv
or
sub
mov
je
mov
movs
push
pop
mov
push
xchg
pop
je
mov
push
cwde
push
jmp
jmp
sbb
rcl
jl
aad
jno
(bad)
dec
inc
fiadd
and
dec
or
mov
sbb
arpl
data16
cmp
fdiv
clc
lock
add
inc
xchg
fadd
ret
mov
adc
jg
mov
fistp
mov
cdq
(bad)
cmp
cmp
lahf
daa
and
test
xor
cmp
dec
stc
mov
cli
xor
rol
(bad)
fdivr
and
sub
iret
add
adc
mov
mov
scas
fwait
inc
pop
inc
and
xchg
xchg
mov
ins
in
jecxz
sbb
mov
pop
xor
add
pusha
inc
test
in
dec
add
pushf
inc
sub
add
pop
or
fdivp
push
(bad)
std
mov
int3
push
cs
sub
test
sub
add
mov
push
sbb
cmp
jmp
jno
push
mov
stos
inc
adc
or
in
movs
addr16
or
adc
lock
mov
and
or
ds
push
das
inc
ror
(bad)
adc
fnstcw
std
out
in
mov
pop
or
or
jmp
cmp
jno
bound
cmp
daa
adc
mov
lods
loopne
cli
mov
dec
les
pusha
sub
leave
mov
adc
lds
dec
(bad)
dec
push
clc
mov
loop
cwde
icebp
jmp
cmc
test
dec
xor
mov
scas
adc
pop
fsubr
and
mov
jg
or
add
or
ss
add
ret
into
push
jns
lds
mov
jns
aad
aaa
mov
retf
mov
push
mov
sbb
test
cld
mov
repz
fidiv
mov
cmp
mov
hlt
int3
xor
xchg
push
dec
aaa
jno
rcr
call
jne
and
movs
nop
(bad)
mov
retf
cmp
mov
xchg
adc
ss
aad
loopne
pop
fstp
xor
inc
dec
dec
fstp
dec
out
dec
sub
mov
pop
(bad)
cmp
cmps
stos
inc
into
jecxz
shl
movs
test
inc
fxch
sub
outs
outs
lds
inc
jo
pusha
out
or
mov
mov
ffree
mov
cwde
jnp
add
iret
or
mov
cmp
adc
in
pushf
iret
hlt
cmp
or
and
ret
mov
stos
push
xor
shl
les
cmps
out
test
or
movs
jbe
xor
lea
adc
shl
cmps
xor
dec
and
adc
call
push
push
clc
mov
xchg
cmp
ds
push
sub
push
imul
jmp
fld
popf
adc
in
in
addr16
jg
cs
mov
xchg
add
cmp
jns
ficom
loop
xor
inc
and
mov
xchg
jecxz
daa
dec
enter
cmps
mul
sub
call
sbb
xlat
or
mov
inc
push
and
xchg
push
cmp
mov
push
mov
adc
add
dec
std
and
add
iret
fs
xor
test
push
(bad)
sub
stos
mov
add
repnz
fidivr
fwait
ins
dec
mov
fs
jp
dec
adc
into
cmp
sbb
mov
enter
lea
mov
cmps
cmp
iret
loope
mov
jae
stos
fisttp
ret
pushf
mov
pop
loopne
or
les
dec
aas
or
ins
xor
mov
jno
pop
push
loop
dec
hlt
jb
xchg
mov
shr
push
mov
in
mov
popf
add
data16
in
add
cmps
fwait
jge
mov
xchg
and
cmp
lahf
cmp
sbb
ja
nop
inc
mov
xchg
pop
pop
dec
ret
into
mov
mov
mov
imul
xor
or
enter
out
xor
or
fnstsw
xchg
cmp
push
ficomp
dec
jns
mov
pop
add
les
xor
mov
xchg
push
leave
adc
inc
shr
daa
xor
pop
jno
sub
lds
inc
dec
dec
add
sub
retf
sub
jnp
mov
sub
xlat
icebp
mov
in
jecxz
addr16
sbb
or
adc
movs
aaa
dec
jp
xor
out
cmc
fs
sub
data16
dec
lods
call
gs
jp
popf
outs
inc
jl
and
pop
mov
mov
add
dec
mov
mov
pop
(bad)
stos
pop
xchg
ss
push
sub
pop
loop
jb
aam
pop
loopne
add
popf
fstp
xor
js
mov
fidivr
sbb
enter
mov
jno
cwde
es
sub
movs
fstp
and
jbe
xlat
cmps
(bad)
mov
and
mov
cmps
(bad)
fist
jg
in
pop
push
dec
dec
sahf
push
inc
cld
adc
inc
lods
sbb
mov
mov
icebp
adc
mov
imul
int
xchg
sbb
enter
sbb
lea
cmp
outs
xchg
je
adc
mov
sub
call
add
lods
push
stos
leave
xor
retf
jno
mov
or
jmp
loopne
out
sti
lahf
lock
sar
sti
add
xchg
xchg
retf
xlat
xor
ror
pop
jl
shl
sbb
mov
pop
and
std
int
jp
in
xchg
sbb
adc
rcl
icebp
jp
cmp
sbb
sar
add
add
cdq
stos
sbb
fwait
pop
dec
mov
add
fnstsw
xchg
(bad)
mov
jmp
or
out
xchg
push
daa
cmp
mov
loope
xlat
push
std
lds
lds
pop
in
sbb
push
loop
fld
jne
mov
pop
ds
and
pop
frstor
adc
cmp
es
adc
(bad)
mov
add
fcom
sbb
dec
popf
mov
dec
dec
mov
fdivr
into
mov
cwde
sbb
arpl
adc
cmp
das
push
loopne
retf
hlt
not
in
loope
(bad)
rcl
sbb
outs
jae
and
out
mov
imul
aam
sub
or
stos
adc
xor
(bad)
clc
mov
or
stos
cmp
test
(bad)
sbb
pop
sub
in
ror
in
mov
jmp
mov
out
mov
cmp
rcl
sbb
repz
gs
mov
add
int3
or
stc
clc
outs
mov
sar
jns
jmp
loope
mov
and
ja
retf
mov
add
pop
push
pop
scas
xchg
and
dec
xor
cli
test
push
mov
or
aas
mov
leave
test
inc
scas
lods
addr16
or
movs
mov
int3
iret
pop
mov
in
(bad)
push
mov
adc
bound
push
cmp
jp
retf
nop
(bad)
jecxz
mov
fld
pop
ja
mov
jecxz
out
das
mov
imul
in
inc
dec
mov
and
into
mov
popa
ror
movs
iret
dec
test
add
pop
inc
push
push
setnp
inc
mov
stos
push
cld
(bad)
and
sbb
pop
les
aad
bound
mov
pushf
sub
jge
stos
mov
push
mov
inc
das
sbb
push
data16
pop
enter
daa
shl
ins
pop
retf
loopne
lods
adc
idiv
mov
or
jbe
pusha
retf
mul
and
pop
test
adc
jl
inc
into
xchg
dec
fcmovbe
sti
sub
dec
sub
repnz
movs
ins
stos
mov
push
sbb
xchg
or
call
or
mov
fnstsw
leave
ins
mov
lahf
pop
fnstcw
and
mov
ja
inc
scas
add
gs
adc
dec
inc
and
fisub
arpl
xchg
popf
(bad)
xor
xor
(bad)
fbld
repz
push
adc
add
cmps
loope
in
push
dec
push
dec
nop
mov
jne
push
xchg
xor
in
mov
rol
push
gs
cmc
push
test
fnstsw
aaa
jge
mov
mov
rcl
mov
mov
inc
or
xchg
mov
mov
mov
dec
mov
rcl
sbb
jo
call
pushf
mov
sub
sub
not
fisubr
fsub
adc
mov
fcomp
rol
(bad)
push
stos
lods
sar
adc
dec
xor
imul
enter
xor
inc
pop
lahf
(bad)
cdq
fstp
packuswb
xchg
cs
mov
sbb
imul
icebp
icebp
adc
cmps
mov
gs
out
inc
mov
mov
cdq
cmps
cmps
and
fcmovu
xchg
cmp
fdiv
hlt
fs
mov
and
mov
add
push
dec
sub
cmp
outs
popf
imul
mov
call
in
test
jbe
add
stos
pop
add
dec
jle
add
inc
mov
cmp
nop
test
test
pop
mov
mov
stos
sub
push
mov
call
out
les
shl
mov
fild
push
movs
pushf
jle
jge
jbe
pusha
movs
inc
and
scas
call
mov
sbb
jmp
inc
jecxz
loopne
or
xchg
jns
xor
push
jecxz
in
in
pop
inc
data16
pusha
xorps
push
push
cmp
xor
int
xor
in
into
or
ret
test
fsub
jae
add
inc
fdiv
sbb
sti
push
or
mov
xlat
mov
pushf
push
adc
(bad)
loopne
xchg
dec
xor
sbb
fcomp
mov
dec
les
(bad)
adc
test
loop
push
sar
addr16
pop
or
sbb
jmp
sub
pop
add
sub
or
(bad)
xlat
stos
dec
push
push
movs
push
shr
(bad)
js
add
sub
xor
adc
push
out
jae
test
xchg
xchg
cmp
and
or
add
call
jb
and
fwait
shr
push
call
sti
jnp
jnp
mov
mov
mov
mov
stc
push
mov
cld
dec
test
and
mov
cmp
xor
jne
cmp
xchg
mov
jecxz
jg
dec
inc
test
ds
xor
mov
ret
cmp
and
cmp
push
movs
(bad)
mov
mov
mov
or
xchg
loopne
and
add
pop
jbe
cld
push
repnz
int
(bad)
xor
mov
dec
lods
or
out
jmp
popa
aaa
push
in
or
sbb
outs
xor
pop
lea
push
iret
push
ins
xchg
je
push
dec
push
lahf
jnp
push
cld
aaa
fwait
push
in
inc
inc
mov
repnz
push
ja
int3
shl
xor
ja
mov
jl
(bad)
mov
dec
inc
out
rcl
mov
add
dec
add
jecxz
push
(bad)
push
aaa
cmp
sbb
push
jae
adc
mov
adc
retf
push
test
add
mov
scas
adc
call
nop
ins
call
retf
cs
je
je
push
push
fldenv
scas
sub
adc
fcom
shr
mov
hlt
idiv
add
push
mov
sub
js
and
and
es
mov
xchg
es
or
test
cmp
pop
inc
push
fstp
fld
sub
sbb
cld
(bad)
fisttp
sub
sbb
nop
jl
or
and
sbb
je
mov
loop
bound
xchg
or
stos
inc
aas
inc
cmp
fs
scas
int
inc
sub
add
outs
shr
xor
xchg
int
cld
cwde
jb
ins
fs
repz
fcomp
cmp
and
leave
mov
(bad)
push
rcl
xor
dec
clc
fdivr
xor
xchg
adc
cmp
iret
cmc
or
outs
dec
cmp
xchg
aaa
ret
bound
(bad)
stc
jb
call
loopne
ins
fidivr
jle
mov
sub
fidiv
add
stos
out
sbb
sti
mov
and
mov
lock
lea
pusha
lock
push
mov
test
dec
daa
push
xor
test
outs
fisubr
add
repz
xchg
clc
fucomp
add
adc
ss
fsub
xor
das
xchg
repz
cmp
fnsave
test
das
inc
out
adc
jno
add
push
mov
repnz
out
enter
popa
mov
ret
cmp
cli
mov
js
das
push
dec
cwde
mov
add
(bad)
mov
push
add
addr16
(bad)
imul
jae
shr
mov
pop
jg
aam
pop
sti
je
popf
in
mov
or
adc
sub
mov
jnp
fidiv
pop
mov
add
pushf
shl
cs
rcl
push
out
add
xor
(bad)
call
loopne
lea
leave
mov
mov
pop
xbegin
mov
idiv
or
(bad)
push
cli
(bad)
mov
in
xor
inc
int3
stos
out
in
and
bound
fcom
cmp
loope
or
dec
dec
add
sbb
or
cmp
sbb
in
inc
add
sbb
inc
imul
cli
mov
dec
adc
mov
jns
call
(bad)
cs
push
push
push
in
mov
fstp
sahf
push
scas
les
push
mov
pop
in
in
scas
iret
cwde
dec
mov
imul
pushf
inc
inc
cmp
retf
cdq
in
sahf
fisttp
add
xor
pop
loop
sub
jb
jmp
enter
adc
rcr
out
ret
push
das
stc
cdq
clc
pop
cli
sbb
xchg
iret
mov
aam
inc
xor
das
shl
push
(bad)
popa
mov
lods
ror
mov
pop
mov
mov
outs
leave
pusha
or
sub
sub
mov
xor
adc
xor
mov
mov
pop
sub
and
inc
test
inc
leave
adc
fisubr
adc
pop
retf
inc
int
pop
leave
jge
inc
scas
movs
mov
aas
(bad)
mov
fwait
dec
jo
sbb
jge
mov
push
xchg
push
arpl
inc
cmp
enter
rcl
add
into
call
stos
inc
aas
jno
pop
jnp
ret
leave
out
retf
ins
mov
or
jmp
mov
mov
popf
xchg
mov
xchg
sahf
or
div
inc
push
movs
pop
xchg
fst
adc
xchg
sti
ss
out
call
add
aad
inc
pop
iret
and
arpl
fcomi
mov
adc
inc
jle
sub
cmp
adc
xchg
addr16
imul
std
jno
or
sub
dec
int
jecxz
(bad)
les
ins
inc
bound
in
jl
or
call
push
inc
or
je
fsubr
jmp
(bad)
es
push
or
jbe
mov
mov
or
cmc
mov
test
adc
xor
sub
test
jno
xor
movs
sub
and
push
in
aas
dec
les
aaa
test
push
jb
fs
mov
ins
push
push
sbb
pop
(bad)
and
sbb
es
mov
int3
adc
inc
es
stos
push
and
lods
into
xchg
out
push
loopne
mov
sub
cli
cli
(bad)
xor
mov
scas
xchg
or
mov
and
loope
jnp
jmp
push
call
cld
cdq
jno
pop
push
fidivr
sbb
fist
jl
enter
jno
sbb
and
xchg
sbb
xchg
dec
add
cs
loope
ins
cmp
test
cdq
cmp
aad
dec
loopne
push
int
in
cwde
pop
push
lock
and
pop
xor
push
cmps
xor
pop
pop
jnp
lea
or
adc
icebp
mov
scas
lods
add
sbb
repz
(bad)
jb
xor
sub
and
or
in
cmp
lods
or
xchg
add
cmc
repnz
(bad)
mov
jae
mov
cld
fisub
sbb
jbe
dec
js
push
sub
sub
jecxz
fs
lahf
fisubr
fisub
mov
xchg
sub
in
bound
int
bound
add
jb
push
dec
dec
sub
fcmovbe
call
jnp
punpckldq
adc
mov
(bad)
jno
pop
(bad)
test
cmp
mov
jge
shl
jmp
adc
popa
mov
jmp
scas
pop
pop
add
cmp
lods
icebp
addr16
push
scas
xor
xchg
push
aad
icebp
out
xor
inc
xchg
std
sub
pop
outs
ret
inc
lahf
xor
mov
repz
loop
popa
imul
jns
div
rol
mov
inc
movs
gs
adc
add
push
lock
and
mov
xor
inc
lods
or
pusha
mov
cmp
pop
inc
mov
cmp
out
add
sbb
fnsave
jae
mov
push
loop
pop
int3
dec
pop
cmp
xchg
xor
xchg
(bad)
xor
mov
mov
pop
(bad)
mov
test
xchg
jmp
jp
mov
push
popa
data16
or
sbb
repnz
out
js
stc
fst
into
sub
push
test
sub
fdivr
and
cwde
stc
push
das
jmp
sbb
pop
or
or
jecxz
hlt
pop
add
shl
push
ins
movs
lahf
mov
push
jmp
repnz
test
jmp
adc
sub
pop
dec
outs
das
ret
jo
jmp
xchg
aam
xchg
adc
cmp
jnp
jle
test
sbb
push
ficom
movs
(bad)
gs
arpl
push
mov
mov
jb
jle
inc
xor
ja
push
xchg
addr16
push
mov
push
aam
(bad)
retf
test
(bad)
shl
fsub
and
xchg
mov
movs
aad
outs
jecxz
daa
icebp
sti
call
push
jecxz
pop
pop
fdivrp
or
aaa
test
mov
mov
addr16
mov
sub
ins
ror
push
ret
lods
retf
xor
fsubr
clc
data16
xchg
cmp
cmp
dec
sbb
mov
test
ins
push
xor
sub
je
repnz
in
aaa
and
sbb
in
dec
xlat
sub
ja
cmp
(bad)
inc
dec
loope
dec
cmp
sub
jbe
jmp
cs
mov
and
into
or
ret
sub
(bad)
sbb
cld
gs
xor
sbb
(bad)
icebp
mov
ja
call
push
(bad)
inc
popf
mov
add
or
pop
push
fcmovnbe
pop
adc
lds
push
push
enter
lods
and
scas
xchg
ja
mov
jns
(bad)
call
xchg
mov
shl
aaa
adc
(bad)
sbb
push
out
test
aaa
and
jmp
lea
pop
sbb
and
in
lea
xchg
xor
and
outs
add
out
and
jle
xor
(bad)
mov
fidiv
jb
sbb
outs
sub
cmp
push
mov
jns
mov
cli
out
or
cmp
aam
(bad)
(bad)
jb
add
and
xchg
push
or
jmp
outs
xchg
daa
mov
and
ss
call
cmp
icebp
out
in
mov
dec
mov
mov
push
in
sub
and
xchg
jns
mov
add
sbb
int3
jecxz
inc
jecxz
xchg
(bad)
pusha
movs
jmp
enter
cmp
movs
test
mov
mov
push
jns
jecxz
int
aas
in
mov
pop
retf
jge
push
cmc
xor
test
xor
js
inc
add
js
loopne
scas
fs
sub
mov
ins
(bad)
stos
pop
aam
mov
mov
mov
mov
xlat
std
sar
or
ins
add
dec
mov
mov
mov
xor
inc
dec
repz
dec
(bad)
out
aas
jmp
sbb
cmp
out
cld
in
shl
pop
adc
push
jae
push
add
(bad)
sub
sub
sub
xchg
cmp
sub
inc
sub
sbb
into
xor
es
inc
push
mov
xor
scas
pop
xchg
dec
xchg
ds
bsf
test
gs
mov
ins
(bad)
push
inc
mov
fwait
inc
call
inc
mov
xchg
sahf
inc
cmp
xchg
jl
mov
push
loope
inc
cmp
and
push
pop
(bad)
sbb
test
and
jmp
fdiv
dec
add
cmps
popa
gs
int
addr16
imul
cmp
out
pop
std
mov
fistp
push
xchg
cmc
fdivr
and
ins
or
push
cmp
add
xchg
test
push
jmp
loope
cmps
repz
add
out
js
mov
or
fcomp
push
cmp
inc
inc
fild
pop
add
jbe
rcpps
or
xchg
in
cmp
pop
rcr
mov
pop
(bad)
out
loope
push
add
pop
xchg
inc
aam
and
adc
mov
hlt
stc
retf
jmp
jo
push
mov
mov
cmp
rcr
mov
pop
(bad)
je
ss
jnp
jne
dec
inc
cmps
leave
retf
pushf
aas
(bad)
sti
add
test
and
jmp
add
mov
sub
lahf
jmp
push
dec
test
mov
fsubr
or
je
adc
adc
adc
cmps
adc
push
xchg
fld
leave
and
stos
out
push
jmp
push
push
mov
ficom
arpl
(bad)
enter
mov
(bad)
and
adc
add
pop
ror
lahf
ins
sbb
xor
mov
pop
xchg
xchg
sub
arpl
mov
enter
sahf
cdq
sub
jae
or
test
or
sbb
call
nop
fsubr
add
pop
adc
pop
addr16
aas
xchg
call
fs
add
sub
jns
daa
retf
sbb
push
jg
enter
sbb
in
mov
mov
loop
fimul
rcl
push
add
adc
popf
aas
ret
sbb
inc
sub
mov
bound
jp
daa
sbb
cmp
(bad)
jmp
dec
push
add
pop
push
sub
adc
lods
imul
cmp
jmp
aas
js
xor
mov
and
std
jp
retf
inc
test
imul
rcl
adc
mov
cld
nop
push
(bad)
adc
pop
mov
inc
mov
lods
push
(bad)
dec
cmp
in
dec
shl
mov
in
cs
sbb
push
jno
das
and
push
lds
pop
adc
rsqrtps
les
shr
sub
mov
popf
adc
mov
jmp
push
dec
mov
xchg
(bad)
fcmovu
push
jmp
inc
mov
cmp
push
jge
mov
icebp
sub
(bad)
cmp
stos
xor
jg
mov
dec
mov
push
or
mov
xchg
sbb
mov
cs
iret
in
ret
mul
cmps
sbb
and
jg
mov
ss
dec
outs
push
mov
imul
and
add
mov
dec
fisttp
mov
jge
in
rcr
vcvtpd2dq
jne
push
fsubr
mov
retf
sbb
push
sti
jge
push
or
push
cmp
push
xor
cmps
push
outs
sahf
mov
pop
push
push
mov
icebp
fdiv
adc
rol
fs
ja
stc
mov
add
retf
pop
fst
cli
push
out
scas
mov
or
push
test
cmp
mov
pop
loop
jle
in
aas
movs
call
jmp
aas
imul
popa
push
jp
aas
sub
js
dec
dec
adc
mov
(bad)
and
fcmovnu
ss
shr
jmp
repnz
xor
jns
jnp
pusha
mov
leave
add
xor
test
addr16
out
repz
adc
rcr
inc
fcomp
mov
adc
mov
sub
(bad)
fcom
jmp
movs
cli
out
inc
xor
adc
sbb
mov
and
in
cwde
and
cdq
cmps
and
pop
jp
push
repnz
pushf
rcl
ror
retf
into
(bad)
or
in
iret
cmp
inc
jmp
lods
cs
pop
retf
adc
xchg
popf
xchg
dec
cld
retf
stos
mov
gs
in
mov
mov
sub
gs
fwait
jmp
das
jp
(bad)
rcl
sbb
mov
jae
popa
or
mov
in
mov
(bad)
jl
xchg
adc
popf
mov
sub
pop
je
int3
sub
loope
dec
(bad)
inc
inc
in
fidiv
mov
cmps
movs
into
dec
jle
ins
outs
and
push
pushf
test
mov
(bad)
shl
fdiv
(bad)
retf
imul
test
cmp
lea
aad
push
(bad)
push
lock
cmp
inc
push
inc
adc
fs
iret
mov
jl
sar
stos
pop
mov
cmp
dec
in
out
xor
(bad)
outs
aad
add
xchg
adc
push
call
push
in
cli
xchg
cmc
jnp
ret
mov
test
mov
outs
dec
outs
lea
inc
pop
fcom
cmp
xor
scas
aad
jl
in
xor
pop
out
mov
icebp
out
scas
cmp
and
xchg
dec
dec
stc
mov
mov
or
jbe
cld
out
in
ucomiss
aam
std
add
mov
iret
mov
aas
retf
lds
aad
mov
inc
sbb
pop
shr
call
adc
into
outs
xor
cmp
xor
adc
gs
push
jl
icebp
movs
scas
adc
mov
ja
and
xchg
mov
or
jne
or
shl
cs
xchg
xchg
es
inc
push
enter
jno
fnsave
popf
fist
mov
jle
int3
pushf
retf
outs
push
movs
cdq
(bad)
dec
push
push
or
xor
and
push
sub
mov
ret
xor
data16
xlat
and
ja
or
mov
sbb
adc
sub
int
retf
je
sub
cmps
jno
(bad)
pop
push
mov
add
fwait
push
mov
push
icebp
and
push
mov
shl
test
mov
aam
sahf
add
mov
scas
pop
push
sbb
movs
cmc
js
lods
xchg
mov
ret
xchg
bound
stos
ret
jns
xor
pop
mov
mov
bound
push
sub
mov
xchg
fsubr
pop
jnp
fxch
inc
xor
and
jge
(bad)
out
std
cmps
call
adc
adc
dec
xlat
movs
inc
(bad)
jo
mov
ins
sub
scas
mov
adc
mov
ret
retf
out
aaa
inc
cdq
sub
lea
clc
popa
xchg
push
cmp
jg
je
dec
xchg
aam
pop
xlat
es
movs
inc
xchg
jmp
loope
jmp
fdivr
mov
pusha
bound
mov
adc
cmps
inc
inc
cdq
inc
sahf
sbb
cld
fisub
cmps
frstor
mov
out
push
mov
retf
or
adc
lods
pop
xchg
pusha
movs
cmp
mov
cdq
and
fs
aad
hlt
mov
popa
ja
lds
adc
in
mov
jo
fsubr
je
mov
fwait
test
and
stc
mov
mov
add
mov
inc
outs
fistp
shl
mov
xchg
(bad)
cmps
int
xchg
retf
adc
dec
repnz
cmps
cmp
lea
push
and
push
jmp
pop
das
test
mov
dec
dec
or
fwait
lds
sti
cmp
sbb
int3
mov
rcr
rol
sub
xchg
jp
adc
add
mov
jo
shl
or
test
cmp
mov
and
xor
jae
or
into
fwait
pop
and
stc
xor
or
push
add
(bad)
repz
pushf
cli
je
inc
lea
inc
mov
cwde
mov
adc
adc
jnp
test
jge
idiv
dec
xchg
xchg
pop
cld
outs
test
sti
sahf
sub
dec
push
jne
xor
dec
cmps
add
and
push
sar
aas
mov
nop
outs
pop
into
pop
sbb
pop
push
pop
dec
pusha
xlat
dec
fbstp
addr16
ja
lods
pusha
repz
pop
xchg
inc
sub
jne
mov
div
cmp
fsub
fs
inc
fsqrt
add
cmp
cmp
cli
dec
scas
je
inc
push
push
lock
sahf
mov
sbb
pop
sbb
sbb
mov
scas
xchg
mov
mov
jmp
and
push
mov
shl
mov
or
pusha
mov
push
out
rep
aam
retf
scas
jb
sub
in
mov
mov
push
inc
push
adc
mov
push
jns
cmp
popf
aam
xchg
mov
pop
cmp
fldcw
fstp
sbb
lahf
int3
cli
int3
sub
imul
pop
jg
retf
xchg
mov
add
dec
jns
adc
outs
adc
xor
aad
repnz
jne
and
xchg
add
push
cld
jno
int
retf
data16
inc
or
outs
sub
or
ins
popa
iret
stc
pop
loope
mov
aaa
mov
clc
mov
xor
xchg
pop
adc
adc
fwait
dec
dec
outs
jmp
pop
stos
loop
jns
ins
pop
rcl
dec
jae
cmp
and
fnstenv
push
jmp
leave
arpl
pop
xchg
push
or
enter
adc
cmc
clc
inc
mov
mov
pop
test
dec
sbb
add
lahf
mov
mov
inc
and
cmps
xor
rcr
mov
into
clc
popf
(bad)
fs
and
lock
leave
cld
dec
ds
jnp
and
into
jbe
stc
ja
inc
jecxz
hlt
sub
jmp
lock
mov
push
lock
lds
mov
clc
test
push
xor
ror
adc
mov
ins
stos
pop
sub
cmp
mov
repz
lock
ds
loopne
and
pop
and
mov
sub
mov
mov
std
sahf
int3
pop
xor
mov
jmp
mov
mov
test
inc
cmp
in
jle
mov
fcom
rol
jno
nop
dec
popa
jne
dec
imul
cmp
aas
jp
inc
sti
adc
call
leave
jmp
out
ja
inc
and
movs
jmp
clc
stos
xor
pop
sub
lods
scas
ret
cmc
adc
cli
sbb
cmp
xchg
sbb
stos
push
adc
xor
ror
sbb
sbb
jae
or
test
jns
push
add
push
ret
dec
adc
or
or
pusha
sub
mov
loop
jmp
stc
push
cmps
adc
xchg
cdq
out
dec
fxch
mov
and
sub
mov
xor
jmp
xchg
mov
pop
mov
mov
(bad)
ins
iret
rcr
sub
push
(bad)
pop
pop
xor
cmp
cmp
lds
lds
jno
out
pusha
pop
retf
mov
mov
inc
mov
cmp
or
neg
in
ins
mov
push
es
push
outs
xchg
or
test
je
mov
jns
into
dec
ins
mov
les
cmps
ficomp
ja
sub
aam
aaa
ficom
(bad)
idiv
sub
cli
retf
repnz
shl
adc
jmp
ss
sub
sub
es
hlt
in
adc
data16
mov
das
daa
push
inc
add
add
es
inc
imul
popf
cmp
out
add
bound
loop
ror
test
or
mov
mov
jnp
jne
jns
push
jge
jecxz
pop
icebp
data16
or
adc
enter
or
cmp
mov
pop
push
and
call
cdq
out
rcr
int
jns
movs
(bad)
or
adc
fisub
adc
inc
inc
sub
jb
sbb
jae
cs
loope
dec
mov
mov
push
loope
popa
cmps
ret
or
jae
out
mov
adc
jb
sub
adc
cld
mov
xlat
imul
xor
aas
dec
into
jmp
jmp
iret
dec
lds
or
xor
mov
test
push
js
push
movs
push
inc
mov
js
loop
and
movs
and
or
xchg
xor
cmp
mov
retf
sbb
xor
xor
jmp
pop
loop
push
xchg
cli
xor
fild
popf
push
inc
and
cdq
ds
add
xor
stos
test
cmp
cmp
cld
mov
dec
daa
xchg
lahf
ror
xor
nop
mov
popf
add
icebp
test
mov
cmp
adc
rcl
icebp
fwait
sub
add
sub
add
repz
add
(bad)
push
shl
aaa
test
or
pop
sub
ss
xchg
mov
mov
in
fidiv
daa
sbb
test
dec
pop
jae
shr
mov
inc
(bad)
xor
cwde
inc
aaa
shr
sub
es
lods
scas
aaa
or
push
int
in
dec
cdq
sub
xor
xchg
push
fs
sbb
xor
scas
cmp
outs
or
push
pop
inc
mov
call
bound
fisttp
nop
retf
jmp
push
mov
sbb
cmp
in
sar
cmp
push
xchg
ins
fadd
adc
add
in
mov
add
sub
sub
bound
or
je
or
and
xor
cwde
sub
into
push
jae
std
jns
call
fst
and
loopne
add
inc
push
push
xor
ret
jle
push
mov
outs
fild
js
sbb
lock
mov
rcr
stos
es
and
out
push
not
retf
sti
adc
push
pop
jnp
pop
stc
call
arpl
adc
movs
daa
push
neg
imul
fisubr
out
and
cmps
(bad)
(bad)
lods
repnz
xchg
shl
dec
xor
cmp
inc
inc
sub
xor
aaa
in
imul
push
loopne
mov
(bad)
fmul
sbb
jecxz
add
add
ins
(bad)
std
inc
cmp
ret
push
rcl
or
add
push
ror
repz
mov
clc
jns
dec
sub
xchg
stc
fldcw
shl
popa
stc
sti
inc
cmp
inc
xchg
in
xchg
fild
outs
adc
add
test
push
sub
ds
sub
sub
(bad)
pop
rol
ret
aas
mov
fisubr
mov
sar
jle
push
mov
pop
dec
sub
fnsave
dec
mov
jo
adc
cmp
adc
int
das
pop
lods
push
sub
shr
outs
imul
push
dec
or
stos
lahf
cmp
or
fs
test
test
dec
push
std
int3
aad
adc
das
jne
int3
ss
cmp
(bad)
and
and
je
mov
sahf
out
dec
sub
xchg
dec
clc
pop
(bad)
in
out
mov
sub
js
xchg
xor
mov
gs
js
or
arpl
lods
pushf
bnd
mov
rep
sub
ins
mov
mov
xchg
fdivrp
das
or
cmp
fdiv
popf
outs
ret
inc
sbb
sub
into
fcomp
or
jle
inc
push
jp
mov
xor
scas
loop
push
cli
sbb
arpl
sub
xchg
push
lea
or
movs
clc
shl
ins
imul
inc
cmp
aam
iret
test
hlt
jmp
jecxz
lds
nop
data16
jle
clc
push
sub
and
popf
mov
call
loop
inc
aam
cmp
mov
leave
imul
call
test
and
mov
pop
in
daa
(bad)
pop
mul
xchg
push
or
xor
ret
cmp
pusha
sti
pop
loope
push
icebp
jg
pop
sub
dec
push
in
or
(bad)
fstp
sbb
shr
mov
xchg
mov
mov
int
cmps
sti
mov
pop
adc
mov
push
lock
jo
bound
loopne
ins
sbb
sar
iret
mov
(bad)
mov
pop
shr
scas
cmp
test
cld
fnstsw
(bad)
ret
mov
pop
mov
and
cs
lods
mov
cmc
or
ins
pop
xor
mov
xor
or
dec
push
ret
pop
movs
lds
pop
lahf
iret
icebp
add
clc
inc
daa
xchg
xchg
test
scas
cwde
cld
mov
jnp
loope
inc
xor
mov
pop
dec
mov
cmp
loop
out
rcl
hlt
es
imul
xchg
jle
(bad)
fisttp
setg
popf
mov
mov
or
jecxz
xor
repnz
push
dec
ds
inc
cmc
sbb
pop
aas
daa
lds
xchg
sbb
dec
outs
inc
and
dec
sbb
cmc
je
fstp
push
cmp
cmp
pop
popa
(bad)
adc
cmp
adc
mov
mov
pop
mov
icebp
mov
data16
mov
mov
xor
xlat
inc
loopne
pxor
mov
hlt
repz
cmc
sbb
inc
adc
mov
jmp
mov
push
repz
jecxz
sub
(bad)
xchg
push
xchg
(bad)
stc
dec
pushf
loope
loope
xchg
lea
fst
movs
jmp
call
imul
scas
sbb
xchg
pop
adc
cmp
fcmovne
aad
retf
push
iret
jg
pop
shl
daa
repz
mov
add
sub
mov
gs
(bad)
icebp
aam
pop
stc
dec
push
sub
mov
fadd
xor
scas
cmp
test
mov
(bad)
pop
sub
cmp
pop
push
push
jmp
fcomp
push
push
fldcw
mov
jg
imul
leave
sub
fnstenv
test
pop
out
iret
(bad)
ror
and
les
adc
sbb
dec
in
pop
outs
imul
pop
test
adc
(bad)
movs
pop
jp
push
mov
ror
pop
les
arpl
sub
not
mov
jmp
mov
and
inc
nop
mov
sbb
push
mov
jns
adc
inc
jecxz
sbb
dec
jg
adc
add
pop
xchg
push
cmps
sahf
stos
sub
jge
(bad)
and
jno
test
sbb
cwde
inc
jb
mov
stos
push
retf
inc
rol
fwait
lahf
popf
fisub
pop
dec
push
das
cs
mov
(bad)
cli
sub
sub
pop
jg
fstp
dec
jnp
xor
daa
std
test
es
pop
in
loopne
test
xchg
pop
adc
sbb
arpl
cmp
sub
in
popa
mov
dec
fs
jno
sbb
fnstcw
mov
or
hlt
mov
xlat
lock
retf
ins
sahf
dec
ss
dec
in
adc
jno
jbe
inc
std
mov
in
cmp
mov
das
sar
push
cld
mov
mov
ins
adc
into
repz
stos
mov
mov
adc
and
retf
cwde
fild
ss
in
ja
fwait
mov
cmp
repnz
inc
inc
add
or
and
pushf
push
push
idiv
out
pop
mov
(bad)
cmp
xchg
mov
stos
mov
xor
rcl
jns
call
arpl
pop
xor
jmp
jecxz
cmp
ins
push
movs
aaa
adc
xor
inc
sbb
leave
jnp
inc
adc
mov
mov
cmc
push
ja
(bad)
out
mov
cmc
pop
mov
outs
cwde
mov
shl
int3
int
loopne
cmp
leave
and
mov
and
xchg
dec
ffree
push
dec
jmp
adc
push
sbb
imul
lds
cmps
cmc
enter
cmp
mov
shl
add
add
loop
rol
mov
ret
mov
sbb
sub
adc
repz
dec
repz
psubb
fdivr
outs
xor
cmc
rcl
mov
and
mov
scas
xchg
outs
iret
movs
int3
out
or
pop
add
pop
retf
ja
jns
in
sub
das
jmp
sbb
inc
mov
les
and
inc
inc
pop
adc
fnstcw
popf
test
and
into
add
mov
mov
push
in
lods
jp
in
and
adc
dec
sbb
sbb
sub
test
cdq
and
nop
movs
mov
dec
pop
pusha
test
jnp
inc
imul
ja
cdq
ds
ds
cmp
pop
mov
aam
pop
push
in
or
inc
inc
inc
cmp
cmp
mov
pop
lahf
ins
mul
mov
xor
inc
dec
push
mov
push
push
dec
mov
rcr
mov
jmp
pop
xchg
jle
add
ss
test
jmp
sbb
or
push
mov
xor
(bad)
sti
lock
sbb
or
cs
push
in
mov
(bad)
pusha
mov
stc
out
dec
aam
push
dec
sti
cwde
mov
dec
sbb
into
mov
jl
lea
sub
lods
jno
jp
repz
pop
inc
outs
in
adc
les
fldcw
loope
xchg
ins
outs
push
sti
or
sub
sub
sub
pop
out
mov
jl
xchg
push
fdiv
xor
in
stc
jmp
mov
(bad)
mov
cwde
mov
sar
jbe
inc
movs
aaa
push
lea
sahf
or
dec
push
mov
popa
mov
ret
push
mov
xchg
gs
ds
leave
(bad)
lds
iret
and
xor
leave
cli
ror
sar
outs
fnstenv
mov
fdiv
or
fcmovnu
jae
jg
mov
movs
enter
ins
xor
cmp
scas
loop
cmp
mov
daa
push
mov
jae
jnp
das
mov
xor
ret
inc
xor
add
or
jbe
cmp
mov
or
xlat
inc
xchg
dec
movs
les
rol
jp
inc
add
aam
popf
inc
mov
sub
inc
mov
jo
push
ret
mov
cmp
mov
push
inc
pop
or
xchg
sub
std
aaa
push
and
push
into
aaa
sub
push
cmp
xor
mov
push
sti
inc
sub
cdq
sbb
xchg
int
xor
pop
call
add
je
add
and
mov
mov
push
fsubr
test
jns
mov
in
out
pop
pop
mov
and
test
out
xchg
rcl
add
imul
cs
es
lea
xchg
test
cmc
(bad)
into
lods
mov
pop
push
pop
add
sar
adc
pop
leave
xor
(bad)
xor
xor
add
std
mov
rcl
imul
mov
fnstsw
out
fcomp
cdq
pop
inc
jmp
sahf
and
cli
enter
jmp
pop
pop
or
dec
ret
and
adc
dec
push
fs
push
and
movs
aaa
add
lds
inc
movs
js
inc
push
aaa
(bad)
xchg
adc
and
cmp
pop
hlt
jno
dec
jecxz
and
add
push
xor
or
and
push
cdq
sub
jbe
xchg
imul
rol
sahf
outs
jne
dec
ja
pop
retf
xchg
das
push
movs
sub
dec
add
push
lock
xor
jle
in
call
jecxz
inc
dec
cmc
in
cwde
mov
push
int3
enter
sub
jmp
std
mov
leave
fucom
out
jp
cmp
push
sub
(bad)
add
pushf
sar
xchg
rol
lds
scas
add
retf
jne
in
sub
inc
mov
stos
enter
jnp
movs
jb
sub
daa
xor
call
add
push
lods
dec
sbb
and
shr
test
lods
pop
popf
jl
std
fimul
test
mov
add
jb
aas
cmp
pop
ds
mov
(bad)
mov
sub
jmp
mov
pop
repnz
mov
out
pop
lods
push
dec
push
sti
inc
mov
mov
jge
push
out
inc
int3
icebp
mov
std
std
xor
jp
jmp
adc
iret
bswap
cmp
inc
push
(bad)
cmp
push
mov
loop
or
xlat
or
pop
add
dec
cwde
cli
mov
push
(bad)
mov
mov
adc
sub
dec
shl
mov
mov
jne
cmp
adc
and
sbb
push
adc
mov
cmp
(bad)
shr
stos
stos
mov
dec
aaa
popf
jmp
repz
cmp
arpl
cmc
add
fnsave
add
pop
and
pop
dec
jp
(bad)
or
les
ret
enter
jecxz
jns
in
in
loop
or
xchg
adc
dec
cli
jo
push
bound
add
jmp
daa
imul
retf
jmp
sbb
cmc
ret
sub
pop
adc
cmc
js
jne
pop
adc
iret
xlat
outs
hlt
(bad)
adc
fist
shl
adc
mov
popf
mov
scas
mov
mov
aad
pop
in
out
pop
or
out
test
mov
mov
push
js
jecxz
ss
cld
jb
xor
sub
mov
ror
jl
(bad)
inc
jge
xchg
retf
push
into
pop
add
and
rol
rol
(bad)
fsubrp
add
mov
jb
xchg
jmp
mov
shr
out
sub
out
jge
ror
jno
and
pop
in
aaa
push
push
inc
add
arpl
lods
out
and
movs
stos
and
push
jnp
lea
daa
dec
jl
je
pop
jae
adc
inc
movs
frstpm(287
pop
mov
dec
jne
data16
out
mov
jmp
lods
addr16
jbe
aam
cmp
mov
idiv
movaps
loopne
push
xchg
sbb
shl
es
push
inc
cmp
mov
and
in
fimul
jb
stc
push
retf
mov
sar
push
add
mov
es
push
in
(bad)
and
adc
sbb
shr
pop
mov
inc
pop
rcr
fimul
(bad)
cli
in
push
cmps
push
and
sub
mov
sahf
lea
int
lods
xchg
xor
call
nop
and
push
in
mov
pop
inc
sub
pop
std
nop
in
stc
gs
mov
cs
mov
push
mov
jmp
xchg
xor
gs
pop
fist
sti
mov
cmp
in
aas
inc
icebp
inc
test
inc
rcl
jmp
inc
add
lds
hlt
cmp
shr
mov
adc
inc
popa
out
sbb
fisttp
sbb
lahf
pop
arpl
sbb
and
and
push
mov
fs
call
pop
mov
dec
push
inc
mov
push
jnp
ret
push
sub
and
test
and
cmps
fnsave
dec
daa
dec
mov
aad
or
popf
movs
in
xchg
xor
mov
les
mov
fmul
sar
movs
mov
addr16
jne
ret
sahf
stc
or
in
stos
movaps
mov
pop
and
js
mov
inc
pop
mov
ret
jne
jl
mov
sub
mov
xor
or
dec
and
dec
cmp
cmps
fsubp
pop
loop
xor
push
mov
push
lea
or
shl
scas
stc
movs
adc
jo
adc
and
adc
pop
hlt
add
push
fisttp
push
cmp
test
stc
jmp
adc
or
cdq
sbb
sbb
pop
mov
and
pusha
push
cmp
pop
ja
and
fisubr
popa
repz
push
inc
repnz
xor
cwde
adc
add
(bad)
movs
fnstcw
mov
mov
iret
jbe
mov
popa
ret
(bad)
bound
push
sti
mov
jecxz
fdivr
aam
or
sbb
push
mov
imul
push
cmp
sti
xlat
mov
lea
mov
jmp
daa
loop
jmp
repz
mov
push
push
das
sbb
pop
mov
fcom
stc
sbb
popa
je
sub
(bad)
or
int
jp
cmp
mov
inc
lahf
stos
inc
xlat
mov
mov
push
jne
sbb
jbe
fstp
push
(bad)
popf
test
mov
cmps
or
jae
lahf
sbb
mov
add
lock
addr16
jo
sbb
ror
imul
jecxz
(bad)
jg
xchg
call
cmc
call
in
jb
outs
aas
das
imul
pop
out
and
int3
cmp
push
inc
jo
jmp
pop
mov
cmps
loop
mov
ret
mov
add
inc
xchg
push
xchg
mov
or
mov
xor
mov
neg
xor
test
repz
mov
push
out
stos
stos
pop
xor
jp
pop
jge
(bad)
out
imul
adc
mov
dec
xor
push
scas
(bad)
mov
and
out
xchg
dec
call
in
movs
jge
jecxz
loop
mov
inc
jo
addr16
push
push
mov
(bad)
lock
jo
ror
inc
or
movs
or
cmps
inc
mov
xchg
sub
(bad)
jecxz
jecxz
lock
repnz
jge
pop
(bad)
idiv
jecxz
mov
mov
sub
and
repnz
fsubp
rcr
xor
in
or
test
fsub
mov
mov
sub
jo
test
push
or
mov
aaa
cmp
(bad)
sub
and
and
xchg
repz
fstp
(bad)
mov
sub
out
pushf
js
ins
lock
sbb
rol
xor
jbe
sbb
dec
stos
retf
bound
and
push
mov
rcl
jnp
or
scas
cmps
pop
leave
adc
clc
call
dec
and
stc
xchg
aad
xchg
out
addr16
leave
pop
mov
mov
sub
cdq
xchg
loop
hlt
dec
aad
jb
mov
ret
push
popf
jbe
mov
mov
xchg
jmp
pusha
adc
inc
test
out
mov
out
(bad)
ss
inc
xor
cld
mov
lahf
push
int
fbstp
inc
(bad)
cld
fistp
cwde
dec
aaa
xchg
std
sbb
sar
mov
inc
mov
in
pop
adc
dec
cmp
rol
adc
lds
in
mov
xor
jl
sbb
xor
int
jno
add
jo
mov
sub
aam
mov
mov
jns
ror
test
jle
dec
imul
sub
mov
stos
and
test
call
cmc
ss
xchg
push
cmp
shl
xor
pusha
adc
pop
popf
aas
sub
arpl
push
shl
popa
fld
mov
xor
repnz
out
retf
mul
add
xor
mov
(bad)
fst
mov
imul
fcom
jg
into
pop
sbb
jecxz
xlat
push
push
ins
(bad)
lock
je
jmp
loopne
je
mov
sbb
pusha
cmps
push
mov
mov
hlt
push
jp
mov
and
or
dec
fdiv
cdq
mov
cdq
scas
out
inc
movs
jmp
push
dec
fstp
imul
mov
shl
ret
mov
push
shl
push
and
mov
fisttp
out
in
or
mov
lea
xchg
loopne
cmp
cmps
idiv
in
cmps
mov
pop
jnp
mov
ss
inc
xchg
inc
push
add
sti
fcomi
push
jo
enter
mov
push
sub
stc
dec
mov
ret
push
rcr
in
ja
sbb
jmp
clc
cmp
push
mov
dec
outs
ret
and
mov
call
sbb
pcmpgtb
sbb
and
fcmove
int
jecxz
xchg
xor
cmp
jne
sbb
leave
mov
mov
cdq
or
add
mov
call
xchg
xchg
lds
scas
imul
push
and
mov
repnz
(bad)
and
inc
and
sub
pop
add
inc
sub
ret
inc
jbe
outs
pop
les
fbld
adc
out
inc
out
mov
inc
mov
mov
cmc
movs
cld
mov
scas
mov
iret
arpl
xor
cmp
in
push
call
movs
icebp
xor
aam
pop
adc
in
into
loop
cmc
cli
lock
inc
and
cmp
sbb
mov
sbb
out
sbb
mov
xlat
adc
pop
dec
pop
mov
leave
jecxz
dec
out
je
mov
data16
mov
pop
lahf
push
popa
shr
dec
retf
jg
dec
mov
push
shl
jns
rol
cld
mov
imul
int3
xor
mov
rol
cmps
shr
push
xchg
jmp
lea
scas
inc
sahf
data16
cdq
mov
in
push
pop
outs
mov
jl
int
or
std
call
mov
inc
repz
sub
mov
push
inc
mov
mov
fistp
xor
ins
cmp
int3
mov
mov
arpl
push
test
push
pop
test
dec
xor
mov
sbb
and
mov
jp
jmp
test
xor
pop
xor
push
loop
out
ins
int3
stos
(bad)
or
cmp
loopne
js
pop
dec
pushf
pushf
push
cs
fwait
mov
dec
or
(bad)
sbb
les
xor
sbb
hlt
mov
call
mov
(bad)
fadd
cwde
popa
cmps
pop
mov
sbb
add
pop
movs
aam
sbb
scas
sti
outs
jmp
retf
mov
(bad)
xor
inc
das
out
call
shl
imul
dec
cmp
ja
push
or
pushf
xlat
mov
sub
push
ja
mov
and
test
leave
pop
leave
dec
add
push
xchg
inc
in
or
enter
mov
cmc
ret
cmp
sbb
pop
xor
push
mov
cdq
cs
les
push
sub
push
gs
mov
outs
inc
bound
sub
push
shl
add
cmp
sar
xchg
xlat
mov
mov
mov
fisttp
dec
cld
fsubrp
(bad)
lods
scas
test
in
icebp
inc
(bad)
mov
(bad)
mov
mov
imul
mov
ret
retf
push
inc
ret
jl
loop
sub
es
mov
pop
outs
mov
pop
cs
inc
mov
dec
jecxz
pop
mov
mov
rol
mov
ud1
xchg
aad
xchg
mov
in
pushf
rcl
mov
pop
test
mov
inc
adc
dec
pusha
mov
pop
sbb
push
mov
hlt
out
call
and
imul
pop
fstp
inc
xchg
outs
vhsubpd
dec
test
pusha
retf
sti
jp
pop
das
inc
add
and
outs
test
xchg
dec
adc
outs
retf
push
sbb
je
popa
mov
mov
push
sbb
test
inc
(bad)
out
(bad)
xchg
mov
push
hlt
fdiv
rcl
inc
popa
dec
add
fsubr
aam
or
or
push
scas
adc
lahf
mov
and
mov
scas
repnz
sub
adc
lds
push
dec
int
add
lods
(bad)
in
pop
cmp
jg
xor
in
enter
icebp
and
mov
mov
popf
jns
cld
leave
cmp
int
loope
and
xchg
and
jmp
out
pop
mov
mov
cld
sub
neg
mov
xlat
test
dec
popa
(bad)
cmp
inc
xor
cmps
fild
sbb
jnp
popa
add
cmps
mov
inc
int3
push
or
sub
jno
inc
jge
sbb
jo
pop
adc
int
daa
mov
mov
clc
sub
pop
inc
push
enter
mov
add
xor
sahf
xchg
les
mov
stos
popa
movs
xchg
dec
pop
call
and
push
push
sub
mov
dec
icebp
call
repnz
adc
in
bound
jns
mov
jo
scas
and
repz
xor
(bad)
cmp
push
and
xchg
dec
push
sbb
or
outs
jl
push
(bad)
and
sahf
test
inc
imul
lea
xchg
pop
xchg
icebp
fnsave
pop
jge
adc
mov
xor
js
add
xor
pop
call
mov
inc
or
test
pushf
jmp
sbb
scas
xor
stos
imul
jno
lock
mov
iret
mov
fild
and
pop
sbb
ss
shr
sbb
test
lock
rcr
(bad)
add
ins
scas
mul
xchg
inc
arpl
inc
sbb
xchg
jbe
inc
cli
ins
pop
cmp
mov
les
je
xor
inc
aad
div
mov
shl
stc
cwde
jmp
scas
and
mov
outs
pop
sbb
mov
sub
outs
movs
inc
scas
call
out
add
jge
cmps
add
enter
mov
sbb
std
inc
(bad)
cmc
loopne
cwde
push
mov
stos
adc
fdivr
fmul
in
popa
aam
in
in
out
push
mov
ins
movs
out
outs
jecxz
sub
push
enter
vmovsldup
pop
add
xchg
sub
sub
cmp
call
(bad)
xor
xor
stos
mov
mov
and
xchg
aas
inc
ror
loop
cmps
xchg
cwde
inc
pop
adc
xor
lock
xchg
push
mov
clc
mov
mov
mov
fwait
mov
call
mov
inc
jne
pop
ret
xchg
xchg
(bad)
out
outs
stc
mov
pop
push
cs
iret
pop
(bad)
lods
xlat
(bad)
les
xor
test
cmp
cli
stc
test
cs
pop
les
inc
sahf
push
inc
inc
in
dec
mov
xor
inc
movs
shl
das
mov
hlt
adc
or
clc
or
xchg
sbb
clc
add
push
or
loopne
aad
into
push
scas
push
add
adc
xchg
fist
sub
imul
nop
mov
(bad)
bound
repnz
les
jno
outs
pop
adc
or
shl
sub
push
(bad)
retf
xor
scas
push
fdiv
or
pop
sahf
mov
cmc
dec
out
jecxz
fbstp
mov
sahf
sbb
cmp
shl
sbb
fcomp
sbb
ss
add
xor
out
adc
xor
(bad)
or
inc
mov
sbb
aaa
fisub
cdq
push
adc
mov
fimul
int
pop
dec
jnp
sbb
not
jle
jl
rcr
push
inc
and
sbb
push
inc
pop
add
out
call
fldenv
jae
jmp
(bad)
imul
mov
imul
les
pop
pop
add
aas
movs
jmp
push
loope
gs
in
fsub
jge
cmp
fst
jb
out
xchg
dec
sbb
and
mov
call
push
rcr
sub
push
dec
gs
data16
mov
xchg
int
stc
rcr
aas
xchg
xor
mov
and
mov
sub
es
xchg
scas
(bad)
fstp
sbb
jge
rcr
retf
mov
aas
xor
jmp
cmps
mov
bound
addr16
retf
sbb
movs
and
sbb
pop
inc
popf
push
loop
bnd
gs
or
cmp
lds
adc
and
sbb
xchg
nop
adc
xor
jns
jp
les
pop
mov
je
xor
inc
add
outs
dec
pop
call
xchg
jno
imul
push
or
hlt
sbb
imul
cdq
add
jl
and
sbb
cwde
ds
mov
shl
dec
push
inc
mov
shl
sbb
xor
xlat
mov
lock
cmp
call
lods
dec
stc
aas
pushf
ins
mov
sub
icebp
add
dec
push
jge
mov
sbb
sub
sub
ins
fnstsw
mov
aam
imul
gs
call
jno
adc
inc
jp
fwait
cmp
and
mov
lock
retf
int3
push
(bad)
jge
mov
mov
loope
ss
jecxz
les
ret
std
fwait
int3
std
cmp
sbb
(bad)
add
leave
test
push
sub
iret
add
cmc
add
popf
fisubr
test
mov
loopne
ins
out
or
or
hlt
mul
ffree
hlt
cmp
xor
dec
push
cwde
ds
pop
and
loope
sub
xchg
jle
mov
cmp
sub
and
movs
out
jne
pop
pushf
(bad)
fcomp
or
or
xor
inc
pusha
sbb
push
ret
ins
xchg
mov
xor
imul
inc
clc
inc
sbb
movs
xor
dec
cmps
ror
jno
(bad)
loop
lahf
retf
out
fdivr
xchg
mov
leave
dec
iret
fwait
jl
inc
or
inc
repz
adc
enter
clc
sub
add
pop
aad
jecxz
bound
ins
dec
mov
test
ss
aad
cmp
mov
adc
rol
retf
fidiv
bound
icebp
bound
mov
std
outs
loop
sbb
dec
fs
(bad)
xchg
cs
sub
xchg
sar
sbb
pop
inc
xchg
inc
js
stos
xchg
push
rol
jg
xchg
add
or
imul
or
pop
fxch
mov
fild
ficomp
fcomp
inc
pop
mov
xor
jnp
xor
les
cdq
movs
(bad)
push
fsubr
mov
push
ret
pop
pop
iret
adc
sbb
jns
xchg
adc
repnz
dec
addr16
adc
sub
sbb
mov
bound
sub
push
pop
mov
(bad)
(bad)
jns
dec
repnz
popa
cdq
in
sbb
xchg
js
aam
(bad)
imul
add
in
xor
into
jne
jne
fwait
sbb
jo
js
sbb
retf
mov
test
inc
mov
jecxz
sbb
push
ror
xor
fist
pop
shl
mov
out
mov
sbb
ret
ins
or
cmp
or
daa
cmps
mov
imul
(bad)
retf
xchg
rcl
into
inc
pop
add
std
dec
xchg
adc
fwait
jb
std
in
shl
sub
mov
xchg
scas
cmp
mov
inc
inc
arpl
jb
jl
addr16
add
mov
repnz
push
jecxz
lods
or
movs
xor
cmc
setbe
cmp
or
(bad)
sub
mov
and
cmp
add
jle
es
adc
xor
xor
mov
push
jo
pop
scas
(bad)
xchg
(bad)
push
sbb
mov
pop
pop
fist
ss
xchg
jmp
dec
dec
popa
imul
mov
mov
icebp
mov
mov
adc
imul
std
inc
mov
or
movhps
out
rcl
(bad)
aam
stos
pop
cs
push
fisubr
mov
sub
push
xor
cli
xchg
mov
ins
xor
sub
(bad)
mov
jb
scas
mov
mov
stos
pop
push
adc
cli
dec
or
push
nop
pushf
xor
push
ins
shl
or
in
sbb
repz
je
fbld
ficomp
and
adc
fidiv
sub
xchg
inc
cs
in
push
pop
retf
in
pop
jg
mov
jge
inc
dec
(bad)
enter
mov
fld
cmp
(bad)
std
jecxz
adc
repz
xchg
xor
xchg
mov
aas
lods
pop
cmp
das
inc
mov
push
push
and
sub
out
sub
mov
add
jp
retf
ret
adc
add
fisub
imul
test
mov
cld
sbb
adc
scas
out
adc
rcr
fisub
and
pushf
xchg
sub
sbb
ret
xchg
test
call
push
paddw
jg
ja
mov
jae
add
sub
fisttp
dec
inc
outs
lods
stc
icebp
or
(bad)
mov
sub
aad
sub
repnz
dec
outs
in
jae
adc
push
inc
mov
xchg
sbb
or
movs
or
sub
int3
jb
test
dec
rcl
stos
pop
(bad)
and
push
cli
xor
ret
inc
sbb
in
inc
pusha
inc
idiv
(bad)
adc
int
cdq
aad
fs
sbb
ins
lods
movs
je
xor
pop
loope
jns
xlat
sti
aad
cli
ror
mov
mov
ret
std
jo
fwait
pop
xchg
lds
add
imul
sbb
push
fadd
sbb
and
jo
repnz
jle
jmp
fild
loope
cmp
stos
ins
mov
movs
jo
and
mov
or
clc
neg
lea
xorps
xchg
fiadd
ror
popa
mov
sbb
dec
lock
int
loop
xor
aam
cmp
pop
in
int3
pop
sbb
sub
nop
in
adc
mov
imul
and
scas
sub
push
jb
shl
xor
in
stc
inc
xchg
push
mov
daa
jp
cwde
test
lahf
outs
or
lods
test
out
mov
push
or
push
mov
or
fimul
loop
dec
mov
mov
test
mov
sub
push
and
mov
or
mov
and
arpl
xor
loopne
jg
aas
fcom
mov
rcl
sbb
fstp
fs
dec
jle
push
fimul
jnp
outs
enter
shl
dec
call
test
scas
xchg
inc
mov
cwde
push
or
repz
repz
lods
mov
popa
and
sbb
stos
out
push
add
pop
mov
clc
fstp
retf
jmp
clc
out
test
inc
leave
xchg
aad
push
xchg
pop
mov
int3
icebp
mov
ret
ja
sbb
jecxz
inc
push
or
push
mov
push
pop
dec
pop
adc
jns
cdq
xor
mov
pop
push
pop
test
xor
cmp
push
das
and
pop
test
and
jae
ins
jno
mov
xchg
sub
dec
push
int
sub
stos
movs
imul
call
push
jne
fistp
mov
test
pop
mov
mov
and
pushf
mov
jl
sub
pusha
add
xchg
outs
pop
cmc
es
or
push
or
ret
retf
les
mov
mov
jbe
loop
jmp
push
mov
lock
dec
sub
stos
fwait
mov
add
mov
(bad)
cmps
pop
xchg
pop
xchg
dec
repz
cli
loop
xor
leave
add
stc
cdq
mov
and
jbe
lock
loop
and
push
data16
icebp
adc
into
pop
jbe
cmp
mov
cmps
inc
test
fstp
mov
je
fdiv
add
in
xchg
dec
faddp
inc
add
ret
and
mov
jl
mov
cmp
sub
cmp
outs
ins
cmp
cld
mov
nop
pop
lahf
cmp
lea
mov
fs
or
sub
add
into
cld
dec
int3
popf
mov
sbb
sub
add
jge
or
js
mov
mov
inc
sbb
mov
jmp
add
ins
aam
lds
mov
push
push
retf
lds
sti
pop
mov
(bad)
jmp
mov
(bad)
(bad)
dec
addr16
jg
imul
sbb
dec
fsub
push
in
mov
hlt
sub
sahf
jnp
mov
mov
pop
or
in
push
mov
sub
jns
mov
push
je
sub
mov
jbe
(bad)
jbe
out
cdq
xor
add
ror
sub
hlt
jnp
fisubr
push
push
ja
xor
mov
gs
pop
adc
mov
iret
add
jae
popf
data16
dec
daa
sub
mov
xor
in
fisub
sbb
scas
jp
test
fwait
mov
cmp
mov
fst
push
out
push
outs
ret
hlt
or
scas
enter
lods
inc
push
mov
push
push
mov
outs
sub
aad
mov
sahf
aam
push
rol
mov
ret
sub
imul
fdivr
(bad)
clc
loope
out
push
data16
add
pop
inc
test
cli
ds
mov
mov
sahf
dec
out
leave
sti
clc
iret
pop
jno
adc
pop
imul
movs
sub
call
xor
or
dec
or
inc
mov
push
adc
dec
test
jecxz
outs
mov
mov
and
fimul
repnz
cmp
dec
and
sbb
int
test
mov
fiadd
inc
push
pushf
fdiv
xlat
jg
jmp
gs
ror
cld
xor
sub
in
imul
or
paddsb
jmp
aaa
icebp
xchg
(bad)
adc
loopne
jge
(bad)
scas
mov
add
cmps
push
sub
inc
in
sbb
mov
mov
mov
cmp
test
stos
sbb
outs
cmp
bound
lock
jae
stc
nop
jnp
mov
test
pop
cwde
iret
and
call
lds
out
and
mov
push
mov
xchg
(bad)
sbb
scas
or
outs
push
fnstcw
mov
in
push
in
lods
ss
mov
lods
ins
or
cmp
and
pop
fisttp
rcl
dec
dec
cmp
out
not
lods
imul
scas
push
sub
pop
jmp
mov
clc
sub
sub
int3
fidiv
and
pop
fdiv
(bad)
sti
sub
or
or
and
gs
jge
jb
nop
sub
jmp
adc
mul
nop
inc
lods
xchg
call
mov
mov
(bad)
retf
call
jmp
or
pop
mov
idiv
stc
sub
add
xor
add
adc
mov
add
cmp
gs
xchg
lods
aam
adc
loop
and
xor
xchg
sub
(bad)
cmp
pop
mov
xor
(bad)
inc
xor
mov
sti
test
ret
loopne
fild
pop
loop
pop
jae
xor
push
leave
jbe
sbb
add
das
loope
cmp
popa
in
xchg
and
cmps
jge
adc
pop
and
std
cmp
push
lea
mov
jne
mov
cli
cmps
mov
nop
fistp
fucomp
scas
adc
xor
sbb
dec
addr16
dec
lods
ret
dec
out
mov
jecxz
lds
cmp
mov
inc
mov
jno
xchg
add
or
inc
inc
scas
mov
pop
mov
dec
into
push
adc
dec
clc
or
cli
lahf
mov
pop
mov
mov
sub
xchg
or
out
or
scas
or
je
outs
js
push
in
sbb
mov
add
xchg
and
repnz
xchg
loope
push
pop
es
test
imul
jb
aas
xlat
bound
cld
push
jg
jg
test
jbe
pop
xchg
test
dec
mov
jge
xchg
sub
sub
aas
scas
icebp
neg
mov
push
das
cmp
dec
inc
jae
cmp
mov
jg
in
lds
sbb
jnp
sbb
cdq
fdiv
mov
xor
xchg
push
jg
ret
imul
sbb
(bad)
sahf
(bad)
pushf
mov
mov
int3
xor
pop
inc
in
xor
das
xchg
inc
mov
loopne
out
cmp
add
(bad)
and
cmp
ror
test
dec
inc
rcr
ins
pop
push
cmps
xchg
stos
test
sbb
lods
ss
sbb
sbb
movs
pop
push
fld
aas
andps
fwait
mov
cs
add
mov
ja
mov
(bad)
fld
or
ret
push
xor
int3
ins
sub
cmp
sbb
leave
cmps
rol
mov
push
mov
int3
cmps
dec
sbb
jb
adc
outs
jnp
cmps
inc
das
xor
xor
bnd
(bad)
jo
repnz
jns
popf
clc
das
or
pop
loopne
test
xor
cmp
add
push
adc
repnz
sbb
dec
stos
push
jge
mov
add
sbb
and
outs
mov
dec
pop
out
retf
or
sub
retf
es
dec
(bad)
fild
cmp
push
aas
xchg
call
push
(bad)
repz
sbb
cmp
pop
int3
(bad)
xor
lods
mov
sti
and
xchg
adc
mul
scas
lock
aam
hlt
dec
aad
popf
popa
inc
adc
push
sub
test
popf
cs
call
jae
mov
test
movs
dec
imul
pop
sbb
dec
pop
imul
and
xor
adc
jno
add
or
cdq
sub
shl
imul
adc
ins
addr16
push
jmp
or
sbb
aaa
sti
jae
jl
or
int3
std
adc
push
xor
(bad)
pop
cli
sub
nop
jg
js
jp
sub
jmp
and
or
and
add
sar
mov
sub
cmp
xor
(bad)
(bad)
ins
sbb
shl
add
retf
ss
sbb
test
idiv
xor
loope
lock
xor
and
setne
pushf
fdiv
push
push
lea
cld
jge
jg
sahf
out
add
sar
mov
dec
pop
push
push
cli
fld
mov
add
dec
enter
outs
rcr
mul
xor
pop
jg
adc
ins
xchg
lds
mov
xor
jno
pop
pop
adc
sahf
jb
clc
push
adc
mov
addr16
mov
les
fld
loopne
mov
out
adc
sbb
jge
out
out
xchg
cmp
adc
(bad)
push
ret
icebp
cmps
cld
add
or
lods
xor
(bad)
shl
imul
add
daa
sbb
into
push
pop
xor
jecxz
stos
ins
xchg
xor
and
leave
enter
push
inc
push
fadd
jle
in
mov
scas
or
mov
mov
pop
(bad)
pushf
int
sbb
push
inc
loopne
mov
sbb
hlt
and
add
fistp
cld
jno
xchg
lea
add
xor
popa
cmp
aas
sbb
sub
inc
pop
daa
rcl
in
(bad)
aam
mov
add
or
or
fsub
dec
mov
jmp
add
jbe
or
fldcw
icebp
mov
out
xor
pop
cld
js
in
dec
xor
push
and
in
pop
mov
(bad)
push
call
js
inc
push
add
mov
je
es
dec
cs
inc
add
jae
jno
mov
mov
pop
and
sbb
push
lea
stc
push
pop
(bad)
mov
mov
xchg
pop
mov
sub
lds
outs
xor
popf
shl
cdq
add
lods
sub
push
inc
outs
cmp
dec
dec
mov
mov
gs
ds
repnz
ss
aad
xor
push
nop
cs
test
add
mov
pusha
or
fcomp
call
or
mov
adc
jmp
pop
iret
mov
ror
(bad)
xchg
adc
and
rol
fucomip
fmul
outs
fcmovbe
push
push
jae
sub
dec
aas
addr16
frstor
pop
xchg
lea
fist
int
(bad)
and
jmp
sbb
enter
(bad)
ror
inc
adc
out
push
push
test
push
jbe
mov
sub
dec
(bad)
or
xor
ja
adc
js
pop
push
cmc
mov
pop
aam
xor
jae
ja
jg
push
xor
jmp
push
pop
jns
sub
pop
mov
or
mov
dec
out
std
cmp
jno
das
xor
sub
xchg
sub
jb
bound
stos
sub
sub
(bad)
rcl
jbe
nop
bound
mov
ret
mov
bnd
mov
je
adc
inc
call
(bad)
sbb
push
into
jmp
cmps
and
arpl
add
stos
mov
sbb
pop
mov
cmp
lahf
dec
jmp
sub
dec
cmp
stc
jo
mov
ins
pop
ret
movs
xor
push
xchg
dec
push
das
ret
stos
retf
jo
mov
cmp
sahf
mov
mov
cmps
pop
push
(bad)
xchg
pop
hlt
xchg
loop
and
inc
push
(bad)
sbb
gs
fistp
mul
movs
fwait
call
mov
mov
int3
adc
mov
push
or
cmp
jmp
div
mov
pop
dec
ds
and
xchg
sub
add
jl
xchg
or
and
stc
jae
sub
sub
xor
stos
xchg
xchg
neg
and
inc
adc
sar
xchg
fs
int3
cld
mov
push
xchg
cli
fs
les
or
xor
aam
xchg
push
jp
xlat
leave
pushf
jbe
jp
in
fsub
dec
inc
data16
mov
out
arpl
je
scas
das
js
fs
aam
mov
mov
mov
pop
in
aaa
add
popa
hlt
or
fdiv
mov
pop
loopne
inc
lock
add
ret
sar
xchg
add
xor
mov
adc
or
in
jne
mov
loopne
in
ficomp
(bad)
fiadd
adc
push
outs
jg
adc
pusha
inc
jl
std
in
jge
lods
in
lock
arpl
cmp
dec
call
sub
jns
jle
adc
sti
mov
fistp
(bad)
hlt
cmp
retf
jne
les
inc
inc
jae
jecxz
jne
pop
jb
inc
sub
je
les
int
ss
fmulp
pop
push
push
fisub
jg
das
sbb
in
push
xor
adc
xor
jae
inc
(bad)
sub
pop
ins
es
ret
and
mov
ret
outs
jbe
ficom
push
sub
js
stos
jmp
popf
inc
sbb
cmp
cli
icebp
daa
and
shr
icebp
sub
les
lahf
add
cmp
movaps
mov
ret
and
arpl
sahf
xchg
aad
mov
fs
pop
sbb
mov
dec
push
pusha
jp
icebp
push
push
push
mov
jbe
neg
jmp
push
and
dec
jbe
xor
xor
stos
and
and
div
stc
push
jmp
inc
dec
jmp
lds
or
or
cwde
bound
sahf
sbb
push
(bad)
sub
jae
pop
push
fwait
outs
pusha
mov
retf
mov
stos
popf
(bad)
or
lahf
and
fidiv
js
add
sar
lds
adc
imul
push
ss
cli
popf
mov
addr16
cmp
jae
adc
jns
dec
and
mov
dec
stos
or
js
add
in
cs
shl
pop
cmp
pop
int
pop
mov
push
cmc
inc
stos
pop
adc
dec
dec
fwait
xchg
sub
int
pop
push
add
add
or
xchg
movs
cmp
ds
cmps
dec
mov
aas
push
xchg
lock
push
add
xchg
mov
add
call
pop
nop
shl
mov
test
das
aas
rcr
jno
jmp
push
test
pushf
xor
push
mov
mov
data16
jmp
sti
push
ret
fsub
dec
mov
mov
jge
ja
push
jb
pop
popf
hlt
mov
jns
or
repnz
sbb
test
jo
mov
jle
call
or
icebp
retf
mov
rcr
dec
ins
jns
or
sbb
data16
sub
xchg
ss
mov
fimul
push
sbb
ds
pusha
sbb
or
sbb
loop
out
pop
inc
and
out
stos
(bad)
(bad)
retf
js
inc
cmp
sbb
int
ins
ret
(bad)
mov
outs
cmp
rsm
cmp
stos
xchg
and
or
mov
int
cmp
dec
jmp
arpl
jbe
mov
jns
jns
adc
scas
out
inc
sub
adc
ror
and
pop
xor
inc
xor
pop
push
inc
sub
(bad)
cmp
mov
push
loop
fdivr
(bad)
jmp
jl
mov
sub
push
int3
scas
sbb
mov
cmp
xchg
jno
out
jmp
imul
sub
jl
dec
sub
or
test
aaa
jp
call
cdq
scas
nop
lahf
aam
mov
mov
(bad)
xchg
push
and
ins
into
fs
and
adc
push
xor
(bad)
lock
in
std
add
arpl
fstp
(bad)
xor
cmc
ja
iret
pop
sub
cmps
jb
mov
fnstsw
mov
sub
and
push
(bad)
mov
cli
add
mov
lahf
jge
xchg
aam
jno
push
clc
das
inc
jle
add
ret
xor
(bad)
xchg
push
aas
in
xor
add
or
cmps
adc
fwait
in
out
jb
cwde
in
aad
mov
push
mov
inc
loop
xchg
mov
daa
adc
ret
jne
dec
or
dec
test
add
lahf
add
cmp
inc
popf
push
mov
push
xchg
xchg
ins
sub
out
cmp
jg
out
les
scas
mov
into
aas
cmp
pop
adc
add
icebp
adc
cmp
test
jae
dec
mov
cmc
scas
adc
sbb
mov
mov
mov
repnz
mov
pop
mov
push
push
mov
xlat
in
jb
cmp
pushf
xlat
mov
pop
int
cmp
mov
jb
mov
mov
sbb
repz
test
adc
and
cmp
sub
(bad)
cmps
jecxz
in
add
cdq
sbb
popf
dec
push
mov
push
inc
stos
stos
push
repz
xor
xor
lock
xchg
sar
xor
inc
cmp
dec
jl
pop
popf
shr
lea
jl
(bad)
pop
or
sahf
pushf
mov
lods
(bad)
cmp
sahf
mov
(bad)
js
cmp
mov
xor
push
inc
xlat
pop
bound
inc
and
hlt
push
jbe
mov
test
inc
push
loopne
sbb
mov
aaa
nop
dec
es
mov
adc
(bad)
inc
mov
jmp
in
mov
pop
sbb
rcr
push
cmps
jg
sbb
aaa
and
in
cmp
xor
out
dec
test
and
adc
ror
sahf
jmp
rcr
js
push
mov
mov
fldcw
movs
dec
adc
pop
lahf
jle
inc
pop
aaa
outs
mov
rol
test
bound
adc
mov
repnz
dec
xchg
dec
pop
xchg
pop
(bad)
bound
enter
xchg
sub
and
inc
clc
movs
ret
(bad)
call
shl
test
in
sub
and
dec
dec
inc
xchg
pushf
or
or
inc
mov
mov
ret
in
fiadd
mov
sbb
sbb
push
sub
jbe
dec
neg
jmp
pusha
jnp
add
arpl
pop
or
mov
jge
jns
call
jmp
rol
push
ss
lods
fisub
adc
push
mov
aas
push
pop
mov
dec
das
pop
jno
xchg
dec
loope
arpl
pop
bnd
xor
rcl
mov
mov
add
aam
jge
in
mov
jo
sar
out
in
in
loopne
xchg
ror
scas
mov
or
add
add
adc
std
inc
pop
add
lock
xchg
jl
ror
loope
mov
and
mov
push
int
pusha
lods
ds
inc
test
xor
xchg
into
enter
sub
stc
push
mov
iret
popf
jl
data16
push
add
dec
not
and
pop
cmp
sti
xor
xor
mov
and
call
in
mov
sbb
pop
pop
out
jno
movs
mov
push
rol
pop
jae
cmp
in
cmp
push
test
mov
xor
cmp
and
mov
mov
or
retw
in
xor
jmp
jg
jmp
jecxz
neg
cld
or
mov
test
mov
imul
mov
pushf
mov
mov
das
mov
inc
cmp
outs
sub
call
or
in
sahf
hlt
loop
in
pop
and
mov
cld
mov
(bad)
pop
daa
es
mov
shl
das
lock
push
(bad)
(bad)
(bad)
out
jb
xor
out
rcr
arpl
jo
inc
cs
push
push
rcl
inc
add
push
arpl
outs
test
sub
jne
mov
fdivr
rcl
cwde
enter
mov
dec
mov
in
mov
pop
test
(bad)
pop
adc
popf
repnz
mov
cmps
and
mov
popf
ror
stc
loope
clc
xchg
dec
fucomp
lds
push
mov
or
jno
(bad)
(bad)
aam
out
xor
lock
call
into
cli
jns
mov
mov
pop
cmp
or
cdq
mov
push
das
add
inc
adc
sub
xchg
mov
ss
stos
mov
push
push
mov
sbb
adc
sub
sbb
xor
mov
dec
stc
movs
or
sbb
cmps
mov
sbb
jge
ret
stos
sbb
in
sub
arpl
xor
jae
popf
mov
test
icebp
jo
mov
bound
fsubr
mov
lds
fidivr
rcr
xor
ss
cmp
inc
mov
mov
or
test
scas
and
sbb
repz
mov
pop
mov
jne
mov
fwait
mov
sbb
push
aam
inc
jno
pop
(bad)
rol
mov
fdivrp
push
(bad)
cld
rcl
aam
daa
repnz
mov
adc
iret
mov
xor
in
imul
push
push
cmps
(bad)
jl
imul
add
inc
mov
mov
enter
sbb
ret
imul
test
xor
out
fadd
xchg
hlt
adc
jecxz
(bad)
pusha
mov
fadd
mov
(bad)
xlat
mov
jae
mov
inc
fwait
mov
imul
jmp
cmp
or
and
xchg
mov
add
xchg
push
fcomp
dec
aas
mov
xlat
fcmovnu
jmp
fild
cmp
movs
jmp
out
ss
mov
mov
xor
push
ins
ins
leave
or
mov
mov
sti
jnp
adc
sti
or
or
adc
jnp
outs
mov
jg
inc
mov
repz
std
adc
ja
sub
pop
adc
push
pop
in
or
leave
xchg
adc
stos
xchg
mov
dec
mov
lahf
mov
pop
movs
mov
icebp
xchg
pop
xchg
xlat
jmp
jo
and
sub
les
popa
ret
gs
xor
lds
xchg
inc
pop
test
xchg
dec
aaa
inc
xchg
dec
xor
xor
lods
loope
fs
rcl
pop
pop
adc
cdq
lea
inc
sbb
pop
lods
sti
sbb
xchg
(bad)
sub
stc
test
xor
sbb
test
push
xchg
jb
cmps
jnp
mov
or
or
inc
xchg
jge
sahf
leave
stos
cwde
scas
sub
aaa
addr16
jno
lds
out
popa
scas
or
sti
inc
ins
sbb
popf
mov
jmp
mov
pop
xchg
mov
or
out
fwait
dec
int3
clc
in
int
cwde
pop
xchg
retf
and
ja
outs
fwait
(bad)
sbb
pusha
adc
cwde
sub
(bad)
test
js
fisttp
mov
movs
psubd
and
xchg
jbe
jecxz
shl
mov
test
call
mov
jmp
ror
cmp
out
and
xchg
movs
and
add
icebp
mov
repz
mov
push
pop
es
ins
xlat
fcmovne
faddp
popa
fst
add
add
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
lea
mov
imul
add
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
lea
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
lea
mov
imul
add
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
lea
mov
mov
add
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
shl
mov
mov
add
shl
add
mov
mov
mov
mov
mov
shl
mov
mov
mov
shl
add
add
sub
mov
mov
add
shl
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
add
sub
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
movzx
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
shl
mov
mov
add
shl
add
mov
mov
mov
mov
mov
shl
mov
mov
mov
shl
sub
add
add
mov
mov
add
shl
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
or
and
add
cli
fisub
and
add
inc
loop
sbb
add
(bad)
cmp
add
add
mov
or
ss
adc
or
sub
inc
leave
rcl
dec
xor
test
or
retf
jbe
mov
(bad)
and
add
add
push
bound
clc
add
and
stos
test
dec
inc
xchg
jmp
mov
or
push
add
inc
mov
je
add
jmp
mov
outs
push
mov
nop
mov
test
mov
test
sub
mov
jbe
(bad)
and
add
add
push
bound
add
sub
mov
je
jmp
mov
fimul
push
cli
add
inc
repnz
stos
add
rdmsr
and
add
jmp
mov
aad
aas
test
test
push
mov
stos
test
add
add
inc
mov
and
push
cli
push
sub
mov
mov
add
es
add
mov
aad
mov
nop
mov
test
outs
add
inc
push
test
pop
add
add
or
add
jbe
jne
mov
mov
iret
push
test
(bad)
stc
add
push
pop
aad
test
dec
test
clc
add
jmp
test
add
add
sub
xor
and
iret
fiadd
xor
add
clc
add
leave
sub
add
mov
setnp
add
mov
or
sub
and
aad
sbb
add
mov
and
mov
jmp
add
add
test
pop
in
add
jnp
add
mov
xlat
loopne
retf
test
ror
push
add
and
test
add
mov
dec
test
add
idiv
stc
push
add
add
out
in
pop
stos
mov
mov
and
iret
add
mov
and
stc
add
ret
add
dec
test
add
add
mov
sub
mov
ret
add
jne
push
mov
es
cmp
test
ins
inc
test
ins
inc
sbb
cmp
mov
or
jbe
(bad)
test
add
jae
add
iret
sub
mov
and
clc
add
and
movs
jmp
push
jp
pop
add
cli
jle
pop
cld
(bad)
mov
je
jmp
inc
test
xor
fs
and
and
add
inc
inc
xchg
jmp
mov
or
in
add
mov
fisub
or
add
jmp
mov
fsubr
test
sbb
inc
add
iret
and
add
jl
pop
cli
add
push
add
mov
je
jmp
mov
sub
retf
sub
add
(bad)
fbld
inc
add
push
add
sub
mov
cmc
xor
add
fidivr
loope
and
stc
add
mov
jne
add
add
sub
test
push
in
or
or
test
add
add
fs
sub
sub
test
cmc
fcom
or
add
add
cli
shr
sub
mov
cmps
fimul
add
add
xchg
jne
ficomp
in
or
mov
mov
fiadd
rol
push
add
test
add
test
mov
dec
(bad)
push
add
add
add
xchg
test
pop
in
or
sub
mov
cld
mov
add
add
cmp
mov
and
stc
add
into
sbb
test
movs
add
add
add
and
xchg
inc
sub
fisubr
pusha
test
mov
fimul
cmp
inc
dec
leave
sbb
in
push
and
cmps
aad
add
add
test
add
(bad)
sub
jae
and
je
add
std
test
stos
add
sub
mov
stos
scas
aad
jle
clc
fs
xchg
cmps
or
xchg
sub
mov
je
and
stos
add
mov
pop
add
add
push
inc
push
pop
pmaxsw
inc
test
add
and
ins
push
sub
push
je
jmp
mov
jp
xor
cmp
test
add
test
and
add
add
mov
dec
je
jmp
mov
jb
xor
movs
mov
mov
xor
cmp
cmp
test
add
mov
das
push
fs
xlat
jb
and
add
add
shr
mov
and
stos
cli
mov
add
add
push
test
sbb
add
loopne
or
add
pop
cmp
xchg
(bad)
mov
jmp
and
add
mov
cmovne
pop
dec
(bad)
add
jmp
adc
imul
cdq
inc
pop
jmp
mov
pop
adc
(bad)
jle
adc
add
mov
ret
add
jmp
nop
add
leave
adc
or
add
mov
mov
mov
ja
into
mov
dec
scas
mov
sar
mov
add
fs
add
jl
add
inc
int3
xchg
mov
mov
(bad)
cli
(bad)
iret
fiadd
cmovl
mov
and
add
fs
mov
xor
xchg
fs
cli
push
in
or
cmove
mov
and
sti
mov
iret
add
mov
jae
and
add
movs
add
add
mov
fimul
pop
cli
mov
mov
mov
xor
mov
loope
inc
pop
add
scas
add
movs
cmp
pop
cli
mov
gs
cs
dec
icebp
mov
(bad)
mov
mov
je
mov
xor
add
fwait
nop
ds
add
inc
mov
inc
mov
out
cld
add
add
stos
cli
mov
and
add
lea
mov
sbb
cmp
jae
leavew
je
dec
iret
and
and
adc
xor
or
leave
push
and
push
mov
cli
push
gs
out
ss
in
xchg
add
cmp
add
mov
shl
outs
clc
add
inc
add
jne
xchg
and
add
(bad)
mov
mov
or
mov
add
add
cmp
retf
stos
sbb
fiadd
data16
sbb
cmp
sar
stos
or
pushw
mov
shl
(bad)
inc
cmp
jae
xchg
test
or
leave
sub
and
mov
retf
(bad)
test
push
in
or
out
adc
dec
data16
xor
mov
aad
inc
in
stc
stc
in
adc
and
add
add
push
and
add
retf
mov
xchg
std
jnp
push
add
cmp
cmp
or
sub
and
cmovg
add
in
or
mov
jne
mov
mov
xor
jmp
repnz
cli
add
xor
add
jne
pop
dec
dec
push
jmp
mov
in
mov
adc
inc
xchg
inc
jmp
inc
add
add
add
ror
iret
mov
repz
fwait
and
sbb
jae
(bad)
sbb
and
mov
jns
mov
inc
and
data16
dec
and
pushf
or
mov
sbb
lds
retf
cmovg
imul
pminub
and
inc
add
add
lods
in
add
xor
(bad)
(bad)
inc
and
call
jns
scas
mov
or
mov
(bad)
pop
jno
and
in
or
mov
add
mov
dec
add
add
mov
adc
idiv
setle
repz
aaa
and
adc
xor
dec
and
stos
cmp
mov
in
or
ret
add
adc
hlt
sub
cdq
pop
(bad)
iret
add
aas
push
lea
movs
xor
mov
pop
(bad)
jle
or
add
mov
out
retf
jbe
mov
mov
stos
ret
fild
add
mov
push
cmp
jmp
push
mov
push
test
call
cli
and
fs
sbb
cli
add
iret
add
cmp
clc
mov
fimul
and
add
add
add
sub
fiadd
(bad)
push
add
pop
cmp
mov
add
mov
and
add
xchg
and
add
add
push
mov
ror
and
add
xchg
jmp
adc
or
inc
gs
sub
mov
and
add
add
push
add
test
inc
test
(bad)
test
cmps
add
add
xor
sahf
and
add
add
mov
dec
pop
add
dec
add
add
mov
in
das
cdq
mov
shl
mov
and
mov
gs
ficom
mov
retfw
dec
xor
push
shl
jae
and
add
add
pop
mov
add
(bad)
inc
push
pop
fimul
xor
in
or
neg
inc
loopne
dec
out
ins
xchg
mov
into
jns
ins
pop
test
mov
fiadd
sbb
or
mov
add
pop
add
mov
mov
call
jno
jae
test
data16
and
in
mov
sbb
jmp
fisttp
test
mov
(bad)
mov
add
inc
inc
and
call
mov
pop
mov
ss
lods
jl
or
inc
test
jmp
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
push
mov
push
push
and
add
push
mov
mov
mov
sub
push
push
mov
xor
movzx
mov
cmp
jne
mov
jmp
mov
cmp
jle
mov
and
push
pop
cmp
ja
movdqu
jmp
push
pxor
movzx
pop
movzx
psrldq
pinsrw
xor
cmp
je
add
movzx
dec
jne
mov
mov
mov
and
cmp
ja
movdqu
pcmpistri
jbe
add
mov
jmp
jae
pcmpistri
lea
mov
mov
mov
and
mov
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
pcmpistri
jno
js
mov
add
add
jmp
movzx
xor
cmp
je
cmp
je
add
jmp
movzx
and
cmp
je
cmp
jne
add
add
jmp
add
jmp
mov
jmp
jne
movzx
mov
movd
pshuflw
push
pshufd
pxor
pop
mov
and
cmp
ja
movdqu
movdqa
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
bsf
mov
shr
lea
movzx
xor
cmp
je
movzx
cmp
jne
mov
mov
and
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
movdqa
pcmpeqw
pcmpeqw
movdqa
pcmpeqw
por
pmovmskb
test
jne
add
add
jmp
bsf
mov
and
add
add
movzx
and
cmp
je
cmp
jne
add
add
jmp
mov
add
jmp
mov
jmp
mov
movzx
test
je
and
mov
mov
sub
push
mov
pop
test
je
movzx
test
je
movzx
movzx
sub
mov
mov
jne
add
cmp
jne
jmp
mov
cmp
je
mov
add
add
movzx
mov
test
jne
xor
pop
pop
mov
pop
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
int3
int3
int3
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
cld
sti
inc
add
cld
inc
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
iret
cld
inc
add
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
cld
inc
add
cld
inc
add
std
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
inc
add
inc
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
jg
sub
dec
sti
add
inc
and
sbb
push
lods
inc
fwait
pop
mov
sub
mov
and
pop
retf
jg
std
add
add
mov
and
sub
mov
xchg
add
push
inc
add
sub
or
and
jg
jmp
mov
push
dec
sub
mov
and
xor
and
add
push
cmp
dec
add
das
pop
stos
and
pusha
and
jg
jmp
xor
out
jbe
mov
fisttp
add
xor
add
or
and
sub
mov
or
add
jmp
mov
and
push
movs
imul
hlt
(bad)
xchg
mov
inc
and
dec
arpl
bndstx
inc
jmp
mov
xchg
(bad)
pushf
add
pop
mov
mov
test
rol
add
mov
call
mov
sub
adc
add
inc
jmp
jo
das
pop
sub
mov
pop
add
js
add
sub
mov
movsx
add
fwait
add
or
and
or
imul
pop
add
dec
add
jg
(bad)
(bad)
jne
enter
cmp
jmp
mov
or
repz
mov
sbb
test
add
jge
cmp
ret
mov
xchg
push
inc
add
test
jmp
jmp
mov
clc
xor
jl
xchg
and
or
mov
mov
add
add
sub
push
jecxz
mov
and
jmp
inc
mov
pop
push
push
inc
add
dec
inc
mov
mov
jecxz
jmp
push
push
and
mov
adc
push
inc
add
aas
bound
dec
and
mov
retf
push
push
inc
add
pusha
and
mov
add
xchg
mov
xor
mov
push
inc
add
sub
pop
and
mov
add
mov
mov
test
cmp
pop
cmps
dec
pop
adc
and
jmp
adc
xchg
push
daa
add
je
and
sub
sub
mov
push
adc
(bad)
push
push
loopne
add
cmp
pop
inc
mov
daa
add
mov
or
loope
jg
retf
lea
mov
pop
rcr
rcl
add
mov
sti
rcr
je
and
jp
or
xchg
push
retf
and
or
push
inc
add
mov
xchg
mov
and
clc
dec
and
lods
es
mov
add
adc
or
and
xor
xchg
rcl
add
add
pop
and
mov
add
dec
and
mov
sti
push
mov
enter
mov
(bad)
mov
fs
daa
js
and
dec
aam
jmp
jno
inc
mov
pop
inc
add
in
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
and
mov
(bad)
dec
adc
add
(bad)
stc
ss
push
int
xlat
pop
and
mov
xchg
jmp
or
inc
mov
push
(bad)
aaa
pop
sysenter
push
add
mov
(bad)
mov
mov
adc
add
add
add
icebp
pop
(bad)
sbb
push
and
psrlq
mov
inc
and
sub
mov
xor
(bad)
fld
sub
jns
inc
and
sub
rcr
js
jo
pop
lods
add
jle
imul
adc
dec
push
add
pop
jmp
mov
xchg
inc
or
nop
mov
sub
sub
pop
add
jmp
pushf
(bad)
cs
popa
and
shl
inc
add
pop
mov
add
add
jle
not
psubusb
cmp
(bad)
cmp
add
or
sub
aad
sub
(bad)
icebp
adc
add
lods
add
sbb
mov
sbb
test
or
sub
add
repnz
jle
jno
pop
int
mov
lods
mov
add
mov
and
sub
lds
daa
test
add
add
add
std
and
nop
out
push
in
cli
js
adc
add
inc
pop
add
or
sub
lock
jle
push
mov
add
lods
xor
hlt
mov
mov
jbe
ss
add
jmp
mov
nop
scas
xchg
pop
fisttp
add
add
dec
add
jmp
mov
rol
mov
add
add
mov
cmp
icebp
xchg
outs
ds
xchg
outs
and
mov
and
movs
cli
add
jns
sbb
int3
mov
mov
or
add
call
pop
jmp
mov
mov
mov
or
mov
aam
add
inc
and
add
repnz
xchg
lods
mov
push
sub
add
xchg
dec
push
dec
pop
pop
int
jmp
mov
xor
ss
aaa
add
dec
xchg
mov
aad
and
mov
pop
jmp
mov
and
hlt
gs
add
pop
pop
lahf
mov
jmp
mov
inc
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int
das
mov
xchg
inc
mov
mov
and
mov
stos
inc
mov
and
push
mov
je
cmp
inc
and
add
mov
xchg
out
mov
mov
sti
lock
loope
and
mov
and
jg
loopne
pop
add
and
pop
gs
fbld
movsx
add
jmp
or
mov
sbb
pop
jg
int3
inc
add
mov
sub
loope
and
punpckhwd
add
add
xchg
mov
inc
and
cwde
popf
xchg
or
add
lds
mov
dec
adc
dec
bswap
sahf
add
jp
push
add
mov
and
sub
add
test
jnp
add
scas
pushf
add
(bad)
fistp
retf
jne
sbb
jg
mov
ret
mov
scas
pop
stos
jge
loope
ret
cmp
xor
add
mov
push
and
jp
jl
and
xchg
mov
jmp
push
jnp
sub
lods
add
xor
add
add
add
add
ins
lock
push
push
adc
and
je
in
aaa
call
sub
add
jnp
jg
jmp
mov
and
xor
push
inc
adc
and
wrmsr
or
add
pop
add
add
(bad)
jne
sbb
mov
cmp
add
add
test
js
pop
mov
add
mov
jp
add
add
add
mov
std
retf
lea
nop
sub
add
add
add
mov
call
or
pop
jmp
mov
fs
mov
add
in
sub
out
jmp
mov
std
bnd
mov
mov
add
icebp
add
add
(bad)
sub
sbb
test
add
add
inc
cmps
fs
add
sbb
je
cmova
add
(bad)
daa
mov
add
cmp
add
xchg
sbb
data16
xchg
je
shr
add
jecxz
and
sub
mov
push
or
jp
shr
popf
add
add
xchg
add
xchg
scas
stos
aas
(bad)
daa
mov
mov
outs
repnz
iret
inc
cmps
push
jmp
ficom
add
mov
pop
inc
push
push
jmp
mov
mov
xor
dec
mov
add
mov
or
adc
ss
push
push
jmp
mov
mov
mov
mov
xor
cmp
shld
xchg
int3
inc
or
xor
adc
cmc
mov
ins
mov
jo
mov
pop
mov
repz
fcomi
movq
or
add
push
and
sub
sub
mov
mov
inc
jmp
cmp
mov
outs
inc
and
jmp
mov
push
mov
sub
add
or
cmp
and
mov
pop
or
adc
cdq
add
mov
popf
jl
mov
add
mov
inc
fistp
int
and
add
jp
gs
inc
pop
dec
xor
fmul
add
(bad)
cmc
ds
cmc
hlt
add
cmp
loope
adc
ins
ffreep
sub
lods
add
add
jp
sbb
aas
ror
mov
or
ds
mov
std
jmp
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movs
leave
adc
not
dec
push
or
jne
sub
cmp
and
popf
je
mov
mov
scas
sahf
mov
cmps
enter
inc
loope
xchg
nop
push
mov
cmc
and
mov
xor
inc
push
pop
lods
mov
mov
sbb
add
add
sub
mov
paddusw
add
dec
scas
add
loope
jmp
sbb
xor
add
mov
add
movs
inc
test
sub
mov
retf
add
(bad)
jmp
mov
les
or
xchg
out
add
mov
loop
sub
cmp
mov
(bad)
mov
fadd
jmp
mov
mov
cmps
enter
(bad)
sbb
add
mov
pop
icebp
and
sub
mov
addps
add
fdivr
add
mov
retf
ror
and
push
xor
add
add
add
add
sub
sub
pop
inc
and
fwait
test
add
jmp
add
or
shl
sbb
sbb
add
add
dec
cmc
cmc
loope
inc
movs
(bad)
(bad)
popf
add
sub
movs
add
add
inc
scas
push
retf
loop
rcr
inc
lahf
in
(bad)
mov
add
pusha
mov
mov
rol
dec
add
push
sub
mov
retf
add
add
add
mov
inc
int
sub
mov
xadd
add
fst
retf
and
sbb
imul
mov
shr
rol
add
gs
add
ins
je
lock
in
sahf
pop
push
shl
xor
fadd
and
retf
fsubrp
int3
add
add
jmp
dec
add
call
mov
cmp
mov
and
sub
add
int
clc
pusha
loop
stc
retf
popa
les
xlat
femms
das
mov
xchg
adc
enter
int
iret
test
pusha
xor
jo
add
add
inc
and
dec
out
add
mov
mov
mov
bound
cmp
sub
mov
arpl
mov
jmp
je
(bad)
mov
jb
mov
sub
outs
fsubrp
lods
fsub
(bad)
int
sbb
jmp
pop
sbb
fisttp
mov
cs
popf
inc
and
add
sbb
bnd
sub
mov
cs
adc
and
adc
rol
ret
add
add
aad
inc
pusha
mov
push
add
fadd
fadd
in
add
mov
fs
xchg
mov
pusha
or
add
jge
(bad)
jmp
lock
add
mov
lds
pop
mov
jmp
je
inc
loop
sub
sub
in
adc
mov
lea
sub
popa
add
loop
jne
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
or
cli
test
add
mov
and
arpl
xchg
test
add
fisttp
test
rcr
cwde
test
mov
add
add
dec
jmp
and
push
xlat
mov
int
cdq
je
add
add
icebp
test
inc
sbb
mov
enter
adc
push
and
aad
adc
repz
arpl
jmp
mov
sub
dec
sbb
fimul
add
jmp
test
test
sub
pop
das
xor
add
add
(bad)
add
arpl
dec
add
add
repnz
mov
movs
add
add
push
add
add
add
add
sub
mov
aad
and
sub
arpl
add
add
iret
mov
jg
jmp
iret
test
sbb
adc
mov
je
jmp
mov
sub
mov
and
dec
add
adc
and
jne
jno
jbe
dec
mov
cmp
cmp
sub
cli
and
dec
aad
je
jmp
mov
sbb
mov
test
add
sbb
add
jmp
arpl
sub
mov
(bad)
inc
sub
add
jl
dec
add
add
jge
fld
sbb
add
psubw
add
add
add
add
retf
jae
lds
jg
mov
sbb
mov
ret
dec
mov
inc
(bad)
inc
jmp
mov
mov
fcomi
ds
not
cmps
test
arpl
dec
xchg
test
ret
add
int
cmp
jg
or
test
div
aad
adc
jns
mov
jo
push
jae
cwde
add
mov
cmp
adc
in
and
(bad)
setg
add
sub
call
dec
sbb
and
xor
push
add
lods
sbb
add
mov
add
mov
pop
fs
cmp
add
add
add
cmp
les
pop
push
add
jne
add
cwde
jbe
test
clc
sbb
add
in
and
fadd
clc
add
add
add
add
dec
sbb
ror
ret
add
add
sbb
add
enter
or
inc
neg
cvtps2pd
add
sub
fistp
mov
xchg
fcomp
push
mov
jg
jmp
mov
sub
and
shrd
jle
arpl
test
add
sub
mov
je
hlt
inc
sbb
sbb
jmp
add
and
test
xchg
retf
sbb
jne
ret
mov
mov
int
and
je
jmp
cmc
test
add
dec
clc
jl
jle
mov
and
ins
leave
nop
add
add
xchg
add
mov
sub
adc
imul
add
jmp
out
jle
mov
pop
adc
inc
or
add
dec
jmp
inc
mov
es
xchg
push
les
je
test
add
jmp
mov
sub
lds
movs
xchg
push
add
add
mov
add
sti
fwait
and
fsub
inc
test
add
add
add
add
sub
mov
mul
push
call
repnz
(bad)
cdq
and
push
fild
pop
jmp
aas
pop
mov
and
adc
fcomp
add
jmp
bound
mov
gs
cmp
inc
and
je
xchg
mov
leave
and
sbb
xchg
inc
and
pslld
pop
add
adc
add
add
push
adc
dec
mov
and
pop
lods
clc
add
fwait
push
fbstp
inc
mov
sub
xchg
pop
and
setne
call
add
add
ret
add
and
psubb
arpl
jmp
inc
pop
(bad)
jge
jno
add
pop
test
and
add
ins
sub
dec
sub
cmc
daa
and
je
jmp
mov
xor
adc
shr
das
add
test
add
test
bnd
fisub
jg
repz
xchg
inc
ror
sbb
retf
add
es
sub
hlt
ja
xchg
(bad)
aam
jl
inc
mov
fld
mov
mov
je
cmovne
mov
icebp
fwait
add
adc
and
test
xor
fisub
bound
add
and
cmp
scas
ss
lods
and
add
add
push
aas
nop
(bad)
jno
retf
and
aad
add
dec
sbb
ret
pop
test
sbb
dec
adc
(bad)
add
add
mov
and
add
xchg
cli
add
add
rol
cmp
push
add
jmp
mov
mov
(bad)
popa
mov
push
sti
test
add
lds
stc
ret
add
jl
(bad)
xor
add
push
jmp
mov
mov
mov
pop
jl
leave
call
cmps
mov
adc
jmp
mov
jmp
jmp
mov
jmp
cld
cwde
dec
rol
add
out
jle
and
mov
mov
and
int3
ret
add
xchg
les
add
add
cwde
jbe
ret
inc
add
add
outs
xchg
ret
int3
test
sub
mov
sub
out
(bad)
call
add
and
push
fbstp
test
rcr
add
mov
lods
sbb
sbb
(bad)
ins
rcl
out
add
test
adc
dec
add
and
jmp
mov
les
jmp
movs
aam
lahf
push
dec
mov
add
les
xchg
xchg
and
add
add
data16
add
push
(bad)
aam
sub
icebp
push
mov
mov
ret
add
xchg
xchg
and
sbb
adc
mov
mov
das
add
jmp
and
add
rol
add
inc
and
(bad)
add
add
add
inc
sbb
test
(bad)
(bad)
sar
add
arpl
(bad)
mov
xchg
add
jne
pop
je
dec
add
add
in
sub
mov
add
add
stos
adc
rol
add
push
int3
ret
add
(bad)
sbb
mov
dec
add
or
add
fist
in
push
call
(bad)
jmp
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
cwde
inc
jb
push
and
mov
or
add
ins
inc
add
and
adc
call
add
dec
enter
or
add
add
xchg
and
mov
call
mov
push
add
push
mov
sub
call
leave
and
mov
sub
rol
add
lods
jge
xchg
and
xor
int3
mov
add
dec
and
jp
add
test
mov
sub
sub
mov
inc
in
mov
and
jg
cmp
inc
and
sub
mov
cmp
add
fst
inc
and
enter
sti
mov
inc
pop
mov
adc
add
xchg
sub
mov
bswap
jb
enter
add
add
mov
xchg
mov
call
add
adc
add
cmps
ret
and
cmovl
js
add
dec
pusha
sbb
mov
and
or
add
enter
iret
fucomp
pop
call
and
je
jmp
mov
inc
sub
ret
inc
and
movsx
add
(bad)
jmp
add
mov
leave
das
and
or
add
adc
bound
xor
mov
aaa
adc
sub
dec
pusha
and
bsr
add
inc
add
adc
in
mov
mov
rcl
outs
sub
inc
and
inc
in
int
add
add
mov
inc
(bad)
sub
test
jl
ror
mov
add
dec
and
les
idiv
call
xchg
into
into
mov
xor
pop
retf
mov
mov
push
mov
pop
loope
or
or
xor
mov
mov
xchg
add
sub
ror
inc
and
cli
cmp
lea
push
sbb
add
add
add
scas
dec
sbb
sub
int3
imul
iret
pop
dec
fst
gs
pop
pop
mov
es
(bad)
(bad)
mov
and
psubd
es
xor
into
fs
in
(bad)
push
and
jg
lock
and
(bad)
xlat
adc
int3
xor
lock
cwde
and
movs
(bad)
xor
(bad)
and
cwde
inc
and
xchg
and
xor
dec
inc
daa
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movs
dec
int
push
or
jne
mov
add
lock
retf
adc
mov
add
out
add
add
outs
and
add
add
add
add
ror
or
add
mov
push
call
fadd
test
add
add
mov
fisubr
add
push
rol
mov
and
add
add
add
(bad)
mov
add
add
push
call
add
push
test
mov
push
retf
add
add
jle
sub
xchg
pop
and
add
cmps
jae
xor
fadd
mov
out
retf
(bad)
out
pusha
pop
out
fadd
psubsb
push
add
xor
pop
clc
add
adc
mov
add
(bad)
in
jle
mov
test
inc
cmps
add
push
inc
mov
adc
add
(bad)
(bad)
add
sub
add
add
sub
push
test
add
add
pop
cmps
add
mov
sub
mov
and
retf
add
in
fs
jle
push
cs
out
and
add
push
sub
int3
and
add
adc
mov
add
add
add
add
adc
retf
loop
mov
shl
repnz
fadd
inc
mov
push
repz
and
add
sub
add
add
add
jle
ror
and
mov
rol
pop
mov
test
jmp
aam
fdiv
xor
or
ins
push
fmul
pop
add
add
mov
add
xchg
test
add
add
(bad)
push
call
add
mov
out
add
sub
inc
xchg
cld
mov
xor
leave
jmp
jmp
mov
clc
ins
push
add
jge
cdq
jle
test
adc
fmul
mov
add
jmp
test
add
add
mov
and
add
add
(bad)
arpl
fadd
add
cmp
clc
add
add
dec
inc
inc
xchg
fadd
adc
jmp
inc
xchg
and
add
add
cmp
dec
add
jmp
push
pop
pop
add
loop
fld
mov
and
push
fadd
xchg
iret
adc
jo
add
out
jmp
mov
clc
aam
push
add
cld
movs
inc
add
adc
jmp
mov
and
add
add
jmp
mov
(bad)
and
fadd
cmps
add
add
add
lock
add
je
jmp
fiadd
xor
pop
and
mov
test
add
add
add
mov
add
adc
xchg
retf
add
in
push
add
jle
push
add
fisttp
add
xor
nop
add
and
add
jmp
cli
and
add
lock
imul
hlt
int3
add
xor
das
cdq
add
retf
jmp
test
fimul
add
xorps
add
add
fmul
mov
fcmovnb
mov
test
aam
pop
stos
cmps
push
ins
add
push
add
add
and
retf
sub
sub
imul
aam
(bad)
and
push
cs
out
cmp
fadd
mov
add
mov
subps
add
retf
add
clc
jmp
jle
sub
mov
mov
mov
adc
in
add
add
mov
test
pop
je
rol
sbb
add
and
retf
sub
mov
call
add
test
mov
push
fs
call
subps
sub
add
pusha
test
add
jle
push
call
and
sbb
fsubr
add
add
into
test
jl
add
xlat
and
mov
std
mov
syscall
out
jmp
cmc
test
push
add
lock
and
inc
cld
and
adc
in
xchg
sub
cdq
mov
sub
mov
jno
mov
fld
inc
sub
fadd
sub
ss
and
les
mov
add
ins
push
cmc
mov
inc
and
psubb
add
in
imul
jle
nop
retf
mov
mulps
sbb
jge
retf
and
add
mov
dec
cmovg
aam
jmp
movs
pop
dec
clc
push
fadd
mov
inc
aaa
dec
je
jmp
cmps
sbb
add
cmp
and
je
cmp
mov
clc
add
add
mov
and
psubb
retf
fadd
pop
add
add
loop
fnsave
cmp
je
xor
add
pop
and
add
push
jne
push
mov
subps
sub
out
pusha
test
clc
jle
push
sub
mov
jmp
add
adc
add
cwde
pop
and
add
add
movs
inc
mov
add
aam
add
(bad)
cld
mov
xchg
mov
ins
mov
jno
jo
out
add
aam
sub
mov
push
fiadd
add
pop
cmps
jl
mov
sub
inc
fwait
ret
les
add
aam
add
add
jmp
mov
in
and
fadd
inc
jmp
mov
mov
mov
data16
jmp
add
jmp
cmps
jmp
cs
sahf
cmp
cld
cmp
fcomp
or
or
or
in
(bad)
jecxz
cmps
pushf
stc
sbb
test
cld
add
fsubr
addr16
and
xchg
mov
test
les
mov
test
pop
add
add
add
fmul
out
mov
pusha
push
and
push
cs
xchg
jmp
daa
mov
add
retf
xchg
cld
cld
add
add
mov
fucompp
and
sub
add
add
add
mov
(bad)
jmp
ins
push
fadd
add
add
sub
fnstcw
sub
add
jg
cmps
imul
mov
jge
retf
push
or
mov
mov
inc
(bad)
(bad)
mov
mov
mov
mov
mov
cmp
cmovne
inc
lahf
and
fadd
add
jae
and
popf
mov
and
add
push
mov
cmc
dec
and
add
add
mov
jmp
aam
jo
push
fs
add
mov
mov
add
test
adc
add
out
jmp
aam
mov
jno
fadd
add
or
adc
mov
and
cmc
inc
out
or
and
(bad)
jmp
add
and
add
add
cld
adc
call
pop
add
out
and
inc
cmps
jl
add
add
xchg
and
out
add
mov
fld
add
push
and
call
mov
cmc
test
retf
add
sub
add
xchg
ret
and
arpl
push
push
fisttp
push
add
jbe
inc
add
mov
cdq
xchg
cld
sbb
add
fadd
mov
jmp
sub
pop
test
push
inc
je
jnp
fadd
mov
mov
push
or
or
jmp
aam
jle
pop
adc
pop
inc
fs
out
add
add
push
test
and
add
adc
add
add
xchg
and
add
mov
mov
and
mov
(bad)
dec
adc
pop
sar
cli
ror
add
pusha
pop
pop
push
das
(bad)
and
cmps
jl
mov
inc
lahf
cld
add
add
add
aaa
jmp
add
adc
leave
test
add
fdivr
mov
jmp
mov
mov
and
loop
mov
jno
add
add
add
jmp
jb
xor
fdivrp
mov
pop
add
add
push
add
out
push
call
add
test
mov
cwde
add
and
pop
ds
(bad)
jmp
fnsave
(bad)
scas
jmp
push
or
mov
cmp
inc
cmps
add
jl
cmovne
inc
xchg
and
add
add
inc
add
add
cmp
iret
jmp
pop
ds
call
fld
xlat
shl
and
retf
cld
sbb
mov
iret
sub
jle
sub
test
fld
push
xor
cld
sub
out
add
pop
bnd
fadd
ins
xchg
push
popa
and
and
fadd
add
retf
pop
mov
jne
push
stos
call
ins
aas
cmps
jmp
mov
jo
add
add
aam
mov
fimul
mov
push
push
mov
add
je
(bad)
inc
add
add
inc
jg
aam
add
ret
call
push
xchg
dec
add
add
mov
into
adc
add
mov
mov
pop
fld
adc
mov
mov
mov
cmp
lock
jle
mov
dec
sbb
add
and
add
ins
jno
or
out
or
lock
dec
mov
fldl2t
stc
mov
call
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
cs
xor
sbb
add
(bad)
push
and
inc
add
(bad)
cmp
cmp
cmps
add
add
add
test
add
add
inc
sub
test
cmp
and
add
cmc
mov
jmp
hlt
out
sub
test
add
pop
lods
mov
xchg
add
test
cmps
xor
mov
pop
and
add
pop
sbb
add
add
mov
lahf
adc
add
test
push
add
test
sub
jl
or
add
add
aas
sahf
add
add
stos
add
iret
sub
add
xor
cmps
xlat
jmp
xchg
sbb
mov
dec
cmp
jmp
mov
or
sbb
daa
sub
mov
adc
pushf
xchg
inc
add
hlt
add
(bad)
pop
test
add
ins
mov
arpl
xor
add
add
mov
movaps
add
add
and
push
sub
test
add
xchg
dec
test
pop
test
cmc
add
repz
movs
mov
mov
sub
add
add
adc
add
and
stos
mov
sub
iret
test
test
inc
or
cmps
(bad)
cmp
add
mov
inc
sub
add
sbb
and
dec
(bad)
inc
push
mov
test
and
add
mov
and
mov
inc
add
mov
cs
test
jge
add
(bad)
cmc
sahf
add
jmp
mov
mov
sbb
and
je
dec
jae
add
mov
sub
test
fadd
and
add
xor
stos
add
mov
add
add
fild
mov
sub
add
test
sbb
and
add
sub
pop
test
aam
add
adc
jmp
and
and
mov
xor
inc
xlat
sbb
test
not
sahf
add
add
in
mov
dec
(bad)
xchg
mov
add
sbb
out
and
sahf
add
and
dec
es
mov
and
test
adc
les
add
inc
test
gs
sar
add
add
add
sahf
add
and
shr
add
add
xor
sbb
add
test
sub
or
add
xor
add
add
add
cmp
add
cmp
(bad)
add
sahf
add
cmp
jnp
ss
sbb
dec
add
mov
add
pop
test
add
sbb
mov
repnz
sahf
rsm
leave
add
xor
add
sbb
and
mov
adc
cmp
pop
add
add
arpl
add
and
adc
xchg
jg
jmp
jle
and
add
sbb
push
mov
and
add
and
mov
xchg
add
test
out
xor
sbb
or
sahf
jmp
mov
xchg
sub
mov
mov
lods
mov
xlat
sbb
mov
sub
mov
add
jae
inc
add
add
add
cmc
cmps
sub
mov
jg
jmp
mov
sub
cld
push
bound
add
xlat
add
xchg
stc
inc
sub
retf
cld
mov
stos
add
xor
jne
inc
jmp
into
test
sub
mov
jb
pop
add
add
add
stos
add
sub
cld
test
mov
jmp
add
sbb
out
and
add
mov
and
arpl
icebp
sub
xchg
add
xor
sub
xchg
cmp
je
jmp
mov
sub
iret
inc
and
je
push
push
add
cmc
sub
repz
inc
push
pop
fisub
stos
add
mov
add
(bad)
push
bound
add
cmp
inc
and
rsm
adc
jg
add
add
cld
mov
je
push
add
add
mov
and
xchg
inc
test
pop
mov
psllw
cmps
cs
pop
test
add
add
jmp
popf
and
add
and
sub
mov
lea
mov
mov
mov
add
jge
sub
mov
nop
xor
hlt
aas
add
and
add
and
pop
mov
cvtps2pi
jp
mov
and
ret
xchg
inc
pop
push
je
aas
rol
xor
add
and
inc
and
je
jmp
jle
or
(bad)
add
sbb
mov
dec
sub
sub
int
popa
and
out
fisttp
test
add
push
sbb
inc
and
add
xchg
inc
mov
test
jne
jmp
xor
cli
xchg
xlat
aam
mov
cmp
push
ins
and
jne
add
sub
inc
xchg
lods
jae
cmp
push
cmp
cwde
fdivr
arpl
mov
test
inc
xchg
popf
xadd
mov
add
and
shl
push
mov
xchg
test
add
push
xchg
inc
test
push
xor
je
jmp
mov
inc
and
sahf
sub
lods
je
or
add
add
pop
add
cdq
add
dec
dec
mov
and
ins
mov
pushf
add
add
mov
mov
gs
jecxz
cmc
add
add
cs
cwde
pop
inc
or
add
add
inc
cmp
mov
add
add
mov
test
and
cmc
add
sub
add
mov
xlat
sahf
and
mov
mov
cmp
xchg
bound
inc
add
pusha
data16
mov
dec
jl
or
and
sbb
xchg
inc
fild
add
ret
sub
add
test
mulps
mov
inc
and
(bad)
add
and
xor
add
lea
lea
add
xlat
fild
jge
add
add
mov
dec
lea
adc
mov
cdq
stc
dec
push
call
push
add
fldenv
test
test
or
stos
cmp
and
xchg
add
add
add
in
vpshaw
cmps
add
xchg
aam
jge
mov
add
xlat
inc
cmp
jne
sub
cmp
test
ds
jge
mov
mov
add
add
mov
inc
and
popf
xor
cmp
cmc
cmps
mov
and
jl
jns
je
or
and
sub
adc
xor
add
mov
add
cmc
cmps
setl
scas
add
jge
mov
ja
add
add
adc
sub
mov
ror
div
cmps
and
mov
jmp
(bad)
mov
mov
mov
retf
add
xor
fist
mov
mov
test
push
mov
mov
mov
and
and
push
xor
inc
add
add
add
jle
shl
add
sub
or
fcom
mov
cmp
paddb
xor
or
add
and
add
and
call
jl
push
stos
add
inc
add
and
cmps
add
push
sldt
outs
push
cs
and
add
and
add
push
mov
adc
add
stc
inc
sub
sahf
add
xor
add
movs
shl
ror
jne
scas
pop
inc
add
leave
jmp
add
jge
add
test
jmp
(bad)
cdq
mov
add
inc
add
mov
(bad)
push
js
idiv
push
mov
add
inc
rcl
and
add
xor
mov
test
mov
and
inc
xor
jmp
and
add
gs
pushf
(bad)
(bad)
push
add
and
sbb
add
add
push
clc
cmp
inc
mov
sub
iret
(bad)
mov
(bad)
mov
and
xor
xchg
inc
mov
dec
int
mov
add
not
pand
mov
mov
add
sbb
lea
mov
cmps
mov
cmp
jge
jmp
(bad)
mov
mov
add
jmp
push
ret
test
inc
jg
push
fisttp
add
add
add
pop
pop
ret
mov
and
add
or
or
test
sub
add
xchg
add
xlat
test
add
xor
and
add
add
sbb
mov
mov
mov
dec
and
inc
test
xor
add
repz
retf
mov
pop
and
pop
inc
and
int
stos
add
neg
mov
mov
lea
push
add
add
add
daa
test
cmc
inc
jge
add
add
add
and
add
into
loop
shr
xchg
jne
add
lea
inc
mov
(bad)
sbb
add
xchg
test
add
jbe
cs
jmp
mov
and
stos
mov
inc
ins
dec
inc
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
jmp
mov
add
pop
ret
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
or
add
add
sub
jnp
mov
xchg
sbb
and
inc
and
pop
call
mov
jmp
mov
dec
jo
dec
and
jno
std
add
jmp
mov
stos
sub
fdiv
dec
mov
dec
mov
fld
mov
dec
les
sub
in
and
adc
cmc
add
add
pop
inc
(bad)
jo
sahf
cwde
cmp
imul
add
add
les
and
inc
pop
dec
push
sub
inc
dec
aaa
mov
jmp
add
inc
das
cmps
xchg
and
sub
mov
and
inc
rol
jle
add
inc
and
sub
mov
jg
jmp
mov
jo
jno
pop
int
inc
and
jg
jmp
mov
bound
mov
in
and
psllw
mov
inc
and
sub
xchg
or
ds
dec
dec
mov
add
add
int3
pop
or
loope
dec
dec
test
add
xor
inc
adc
and
scas
mov
cmps
add
dec
cmps
add
add
aad
and
inc
mov
in
ror
dec
sbb
add
fimul
pop
sbb
je
jmp
cmc
sub
sbb
xchg
nop
and
aad
pop
add
neg
rol
pop
inc
xchg
inc
sub
mov
and
bswap
mov
pop
add
add
sbb
mov
je
jmp
mov
fsubp
mov
je
jmp
mov
sub
mov
and
mov
aad
add
xor
add
mov
pop
sub
mov
jbe
add
jmp
mov
outs
aas
jae
cmpps
and
je
jmp
mov
lahf
jo
xchg
cmc
add
jb
sbb
stos
mov
retf
xor
inc
and
sub
(bad)
sbb
bound
imul
add
mov
mov
adc
sar
add
ror
add
add
leave
jl
or
bound
mov
add
inc
add
and
mov
and
bound
add
mov
jmp
mov
mov
jmp
mov
jl
adc
jo
push
shl
add
imul
pop
jmp
(bad)
nop
and
ja
xor
push
and
add
add
add
add
mov
(bad)
mov
or
add
and
mov
sub
imul
mov
mov
aas
and
add
psubw
sub
mov
push
nop
mov
jl
fidivr
lahf
addr16
mov
pop
add
or
add
mov
je
inc
xlat
fsub
mov
cmp
xor
add
aad
inc
ins
mov
or
inc
das
add
dec
sbb
js
je
xchg
add
lea
ins
push
add
mov
add
add
(bad)
(bad)
(bad)
fild
add
pop
sub
xchg
add
add
mov
mov
add
repz
outs
cmp
dec
add
mov
lahf
xchg
aam
fimul
lods
pop
ret
mov
add
movs
or
push
popa
inc
add
and
repz
outs
cmp
jbe
add
mov
imul
test
xor
add
xchg
pop
and
je
data16
push
mov
push
push
push
and
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
fistp
push
add
xchg
add
hlt
pop
pop
sub
data16
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
rcr
dec
and
dec
mov
call
and
adc
mov
(bad)
sub
jmp
mov
das
sub
cmp
push
adc
cmp
xlat
dec
js
pop
bound
jecxz
add
add
add
add
push
push
and
cvtps2pi
add
add
js
and
sub
mov
push
loop
sti
loop
add
fdiv
dec
sub
mov
xchg
and
add
add
add
dec
and
and
xchg
jg
jmp
push
sahf
jae
pop
das
jle
sub
add
repz
add
mov
dec
sub
retf
and
xor
add
or
mov
fisttp
push
hlt
nop
mov
out
test
push
add
jmp
mov
inc
test
inc
and
sbb
test
add
pushf
cmp
mov
jecxz
fidivr
dec
sbb
push
jecxz
add
js
pop
add
shl
cmp
test
test
inc
in
inc
and
sub
cmp
and
cmps
add
jmp
mov
rol
and
push
test
mov
add
dec
cmp
inc
pop
loop
or
mov
jmp
mov
js
fnstcw
inc
je
pop
fild
jecxz
jmp
sub
push
addr16
add
jge
push
jno
cmp
clc
inc
or
add
mov
push
add
and
sbb
(bad)
dec
call
cmp
aam
fdiv
add
jle
add
cmp
call
fldlg2
add
xlat
jae
pop
pop
loop
push
mov
jecxz
jmp
xor
inc
sti
push
pop
add
add
mov
inc
and
jne
cmps
add
sbb
xchg
adc
dec
and
jle
and
add
cmp
add
in
cli
and
ds
pop
pop
sbb
pop
cmp
pop
jmp
jmp
(bad)
sbb
inc
jmp
dec
xor
add
pop
(bad)
fdiv
jmp
xlat
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
std
in
or
mov
mov
nop
mov
clc
retf
mov
ds
into
icebp
xor
and
pop
pushf
add
mov
adc
mov
or
xor
and
mov
(bad)
jb
popa
jbe
mov
mov
pop
(bad)
int3
icebp
mov
icebp
add
or
add
mov
pop
and
pop
fcmovnb
pusha
fwait
inc
push
xchg
cvtps2pd
jb
jbe
mov
inc
and
sub
cmp
(bad)
dec
add
jg
inc
and
cmp
dec
lods
mov
inc
and
mov
mov
add
add
std
in
and
jno
adc
mov
je
jmp
sub
and
fst
(bad)
and
jo
out
sbb
jmp
mov
sub
sub
or
aas
add
js
mov
mov
mov
sub
mov
jo
mov
add
sti
sub
add
jmp
retf
inc
push
sub
leave
push
adc
and
cmp
push
ror
add
retf
aam
pop
(bad)
mov
and
push
and
add
data16
mov
and
sub
adc
add
loopne
enter
mov
ja
repnz
mov
mov
xor
mov
mov
and
xor
jmp
mov
mov
inc
rol
add
(bad)
and
and
and
jg
mov
and
mov
in
inc
and
adc
xchg
pop
add
gs
es
pop
pop
psubsw
dec
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
imul
add
fs
sub
pop
mov
cdq
bound
loope
(bad)
jmp
mov
inc
dec
and
subps
xor
add
add
jo
retf
xor
lea
mov
psllq
adc
add
inc
inc
pop
sub
mov
add
and
add
add
adc
test
test
add
sub
sahf
inc
sbb
jmp
ror
inc
and
adc
add
jmp
mov
adc
dec
es
mov
inc
add
jmp
mov
sub
mov
push
or
jle
imul
and
and
mov
and
je
or
add
inc
and
jmp
movs
cld
loopne
inc
and
orps
add
mov
stos
test
je
jmp
fild
sub
mov
fnstsw
jle
imul
sub
jmp
repnz
and
(bad)
lods
add
add
add
retf
xchg
adc
lock
inc
je
jg
xchg
add
adc
pop
sub
loope
and
inc
pop
add
jmp
mov
sub
mov
test
mov
pop
add
cmp
and
pop
dec
or
or
adc
inc
xchg
and
push
cmp
loop
cdq
mov
add
inc
and
sub
mov
test
aas
add
jmp
mov
and
dec
mov
inc
and
(bad)
enter
jmp
mov
sub
fld
imul
pop
add
mov
sub
call
test
or
dec
pop
das
add
cmp
jbe
sub
add
push
je
jmp
test
jle
jp
je
imul
or
dec
or
mov
pop
inc
and
jmp
mov
mov
dec
add
push
add
sbb
neg
mov
dec
sub
ror
or
xchg
arpl
inc
inc
test
add
inc
xchg
mov
pushf
add
jle
and
es
(bad)
xchg
push
sbb
or
add
add
mov
and
leave
mov
mov
pusha
jmp
(bad)
push
and
jbe
sbb
jmp
mov
mov
xchg
pusha
rcl
retf
push
mov
and
leave
mov
inc
jp
xor
aas
jle
mov
hlt
ss
pop
pop
ret
(bad)
or
mov
and
xor
and
pop
jl
popf
xor
inc
inc
loopne
jo
cmps
in
dec
add
adc
push
das
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
scas
mov
or
dec
xchg
retf
jle
add
xchg
adc
push
push
dec
add
push
nop
rol
mov
(bad)
cli
and
call
inc
and
mov
fst
or
and
mov
xchg
xor
dec
sbb
xor
inc
and
cmp
xchg
and
(bad)
jne
add
fadd
add
rol
sub
sub
and
movntq
pushf
mov
test
xor
(bad)
xchg
daa
mov
push
dec
or
sub
add
pop
push
test
pop
jne
inc
and
mul
xchg
rcr
(bad)
and
add
mov
xor
popa
inc
(bad)
mov
mov
js
outs
add
pop
dec
push
mov
sbb
add
add
mov
dec
mul
aaa
push
add
fcom
test
add
jge
add
mov
jno
mov
mov
mov
add
push
pop
add
add
inc
and
sub
mov
jbe
xchg
fisub
xchg
xor
and
inc
and
cmpxchg
dec
pop
add
adc
outs
add
mov
call
sti
hlt
mov
add
add
add
xchg
inc
ror
rol
(bad)
out
nop
ror
inc
and
stos
pusha
jp
dec
xchg
add
mov
push
out
cmp
mov
pop
xchg
adc
xor
inc
and
movs
jne
add
(bad)
sub
cmp
jbe
mov
mov
inc
xchg
test
inc
(bad)
sub
inc
mov
rol
popf
and
ins
jecxz
jmpw
(bad)
dec
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
mov
ja
or
test
arpl
inc
test
jbe
sub
and
xchg
or
bound
call
mov
mov
and
popf
sub
jo
and
add
push
mov
sbb
aas
mov
ret
in
adc
lods
mov
sar
test
dec
add
push
add
push
sub
mov
xor
hlt
inc
popa
(bad)
inc
jmp
jns
jg
sub
mov
cmps
test
je
push
rol
jmp
mov
mov
cmp
cmove
jmp
inc
add
dec
or
ins
add
in
mov
xchg
or
add
rol
push
sub
dec
and
adc
mov
jo
add
inc
jle
and
outs
pop
add
xor
mov
and
cwde
and
push
and
mov
bound
or
lock
and
adc
imul
call
dec
pop
sbb
dec
jmp
cmp
pushf
arpl
(bad)
dec
add
in
ret
fbstp
or
add
ja
and
arpl
(bad)
iret
dec
and
cmps
dec
pop
cmp
and
mov
and
call
lea
mov
mov
mov
adc
add
add
(bad)
jmp
xchg
ja
and
add
(bad)
int
mov
add
jno
add
(bad)
cmp
mov
in
dec
test
mov
call
mov
mov
mov
stc
jle
inc
add
add
sub
sahf
rol
and
push
mov
inc
ds
pop
cmps
test
pop
add
lea
pop
pop
pop
in
ret
inc
dec
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
add
pop
ret
mov
mov
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
(bad)
mov
push
push
add
jle
and
inc
mov
outs
and
or
repnz
dec
jbe
sub
or
add
mov
mov
je
and
mov
scas
xor
add
rcl
ja
outs
jae
xchg
inc
add
mov
shl
add
jbe
and
test
mov
call
cmc
mov
push
mov
pcmpgtd
add
repnz
inc
push
add
mov
imul
mov
cmp
rol
xor
xor
add
mov
cli
lods
mov
popa
js
(bad)
cmp
add
retf
or
jge
and
add
push
sub
jle
and
lsl
mov
call
cmps
add
sub
mov
popa
into
je
jmp
mov
mov
sub
or
repnz
in
add
loop
add
mov
and
jg
lahf
add
and
mov
add
leave
out
call
(bad)
mov
cmps
cmc
in
add
iret
cld
mov
and
vmwrite
add
jmp
mov
sub
mov
out
adc
add
add
ss
add
jg
and
jg
lahf
test
mov
xchg
test
add
add
mov
adc
add
jmp
mov
sub
mov
call
add
add
test
test
add
imul
mov
leave
push
test
std
jmp
add
ror
mov
cmps
and
in
(bad)
mov
or
jmp
mov
add
dec
lds
repnz
sahf
add
call
add
cmc
in
shl
rcr
test
ja
and
mov
fistp
inc
and
je
jmp
mov
add
(bad)
mov
movs
mov
je
dec
add
add
outs
test
add
inc
mov
movs
imul
je
jmp
mov
sub
mov
and
repnz
sub
mov
mov
and
cmc
add
enter
(bad)
mov
popa
sub
test
add
jbe
jle
cdq
add
shl
jno
pop
and
cmovb
add
push
add
add
cmps
add
inc
xor
out
ins
mov
popa
mov
rol
and
fdiv
test
sbb
mov
dec
lds
je
jmp
mov
shr
mov
push
mov
pop
pcmpeqd
mov
test
lods
leave
sahf
les
cli
popa
iret
add
mov
xchg
add
and
sub
mov
nop
add
add
and
add
add
add
shl
clc
or
or
test
or
imul
mov
add
mov
jmp
mov
add
pop
icebp
pop
pop
jl
ror
xchg
stc
loop
and
add
sub
inc
je
push
jmp
mov
mov
jle
and
add
mov
inc
loop
add
pcmpgtd
mov
ret
imul
cmps
add
xor
loopne
ds
mov
mov
dec
add
sub
adc
add
pavgw
mov
jno
test
loop
test
xchg
repnz
fistp
test
test
mov
loop
add
inc
cwde
cs
popf
mov
sbb
add
add
(bad)
or
add
test
data16
jmp
(bad)
repnz
add
add
int3
push
das
add
(bad)
(bad)
mov
mov
jl
and
test
mov
data16
add
add
mov
jg
mov
jmp
mov
test
sbb
in
div
xchg
and
loop
add
xor
add
mov
pop
xchg
cdq
div
retf
out
mov
and
cmps
cli
mov
xchg
test
(bad)
xchg
not
cmp
test
add
test
push
add
add
jge
add
xor
add
loop
and
repnz
ror
test
test
mov
add
xor
cmps
cmc
ins
jae
movs
inc
mov
xchg
add
mul
div
mov
and
inc
pop
add
std
add
(bad)
and
xchg
add
add
add
add
(bad)
xchg
add
add
cld
and
pop
or
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
sub
mov
mov
in
jge
mov
mov
mov
shl
stos
int3
mov
and
add
sub
push
add
test
add
add
mov
sbb
in
add
add
inc
and
fwait
inc
add
shl
add
das
and
jb
sub
add
xchg
push
add
add
jp
int3
mov
add
add
add
add
add
add
addr16
add
stos
add
xchg
inc
mov
add
sub
mov
add
jmp
jns
call
jecxz
stos
int3
jae
lea
add
inc
sahf
mov
xchg
sub
add
mov
ret
or
add
fwait
ins
add
jle
and
add
(bad)
sub
mov
cmp
int3
jae
out
sub
add
mov
test
aad
inc
test
in
cdq
pusha
add
pop
or
fninit
add
add
add
sbb
adc
add
push
call
test
hlt
in
add
retf
mov
stos
add
dec
pop
push
add
out
and
add
test
and
xchg
repz
mov
and
add
add
pop
cmc
jmp
mov
outs
into
dec
and
and
jmp
add
std
in
and
mov
imul
test
add
cmc
loop
and
call
and
cwde
add
push
add
test
add
add
test
push
or
call
hlt
in
add
mov
cmc
ins
add
add
mov
inc
int3
add
cmps
test
add
xor
and
add
jg
add
mov
cwde
rol
jecxz
push
fnstsw
mov
and
pop
add
jg
(bad)
les
and
xchg
and
imul
and
in
mov
rol
jmp
mov
jae
sub
test
test
or
jmp
mov
sub
mov
and
data16
cli
(bad)
in
inc
add
add
add
dec
and
add
add
fiadd
iret
movs
movs
test
sub
add
mov
sub
or
fnstcw
mov
cmp
fdiv
add
and
add
add
add
add
add
and
cwde
add
push
sub
mov
add
cmps
pop
push
add
lahf
popf
pusha
add
add
in
sub
retf
stos
add
movs
(bad)
and
add
jmp
cmps
inc
and
add
and
aas
jae
sbb
cmp
je
jmp
enter
loop
ss
cli
or
sub
les
(bad)
and
add
jmp
mov
pop
dec
neg
cmp
add
cli
test
or
pop
adc
int
add
movs
test
cmp
add
movsx
pop
or
lahf
add
mov
add
add
clc
dec
stos
dec
push
and
inc
add
fiadd
or
add
mov
sub
mov
add
lods
and
or
jmp
pop
fcomp
ds
dec
push
addr16
add
packuswb
push
pop
int3
add
test
pop
sub
add
and
add
add
lods
and
add
in
add
mov
int3
cwde
add
xor
mov
(bad)
cmc
(bad)
aaa
add
je
jmp
mov
sub
mov
add
add
add
add
cwde
add
add
popf
and
and
rol
add
mov
retf
add
xor
sub
mov
and
jp
xchg
ror
add
mov
cmc
add
add
add
add
add
sub
mov
add
test
add
sub
xchg
nop
mov
sbb
add
in
jg
jmp
and
jmp
push
sub
push
int3
lahf
jae
test
and
add
mov
add
add
mov
cmp
addr16
fcomp
mov
addr16
jecxz
mov
jae
sub
les
add
mov
add
sbb
and
add
and
inc
push
call
add
into
cs
call
and
xor
add
or
add
cmp
add
adc
shl
shl
movs
dec
add
add
imul
and
lds
add
repnz
(bad)
test
add
add
sahf
add
add
add
cmp
test
das
std
push
ror
stos
add
dec
push
jp
sub
and
add
mov
add
inc
sub
fabs
test
mov
and
add
cmc
in
mov
add
jecxz
add
arpl
cli
test
sub
add
test
push
xor
jmp
mov
dec
and
push
sbb
xor
call
add
add
jecxz
mov
and
add
sub
mov
in
and
add
xchg
add
and
add
cmc
sub
mov
jp
add
divps
jecxz
add
add
add
mov
sub
cmp
mov
inc
pop
add
test
or
jmp
pop
shr
push
jecxz
addr16
add
add
sub
add
and
add
sub
xor
int3
rol
add
bsr
outs
cmc
add
ret
mov
sub
mov
add
(bad)
and
sub
mov
(bad)
or
dec
stos
jecxz
test
enter
loop
fisttp
inc
ror
jmp
add
mov
and
inc
cmc
mov
fild
or
addr16
add
add
add
add
mov
inc
cwde
hlt
add
sub
mov
repnz
stos
ret
mul
rol
mov
cmp
lock
add
packuswb
add
jmp
mov
sub
adc
and
rol
jecxz
das
inc
jns
push
jmp
mov
mov
mov
inc
cwde
mov
ss
stos
rol
add
push
int3
jae
jo
(bad)
add
and
mov
jbe
jmp
arpl
adc
cmp
mov
sub
add
ins
and
stos
int3
call
and
add
int
test
mov
and
out
add
adc
into
out
jmp
cmp
add
xor
add
and
or
mov
dec
and
into
dec
pop
sbb
add
add
or
test
add
jae
and
and
les
add
lods
and
or
lahf
add
add
mov
cdq
cwde
add
add
fldpi
or
push
add
inc
fisub
push
stos
int3
jmp
mov
sub
mov
add
dec
mov
cmp
add
(bad)
call
test
add
stos
ret
imul
sub
(bad)
std
xor
pop
xchg
sub
popa
sbb
(bad)
into
add
call
test
int
add
mov
and
jmp
cwde
add
mov
cmp
add
jg
jae
inc
rol
mov
pop
push
lea
movs
test
xor
and
test
add
inc
push
jbe
jecxz
cdq
cwde
add
add
mov
punpckldq
(bad)
call
mov
sub
(bad)
and
daa
add
jmp
mov
nop
push
sbb
js
(bad)
out
inc
ror
add
add
and
sub
mov
je
jmp
mov
or
pop
mov
and
je
(bad)
and
add
mov
add
add
and
fwait
inc
add
pop
sub
cmovne
je
jmp
mov
or
retf
push
or
inc
cdq
or
and
add
cmc
add
in
mov
add
inc
add
push
adc
je
out
out
add
cmps
test
add
adc
inc
and
jns
dec
add
add
and
(bad)
call
mov
je
jmp
mov
sub
inc
mov
enter
jmp
mov
and
hlt
in
(bad)
sub
mov
in
mov
add
stos
jmp
cmps
test
pop
add
and
in
jmp
jg
rol
add
add
cmc
in
sub
mov
(bad)
fsub
add
add
lea
add
test
jg
add
add
mov
mov
test
call
push
sub
and
xchg
and
imul
and
cli
bound
(bad)
call
inc
mul
add
inc
test
je
in
fadd
add
mov
sub
mov
jg
jmp
clc
or
add
add
mov
pop
setae
retf
add
addr16
sub
adc
fisub
add
add
stos
int3
jae
cmps
test
pop
sub
loope
int3
sub
test
pop
add
jmp
mov
mov
or
cmp
jno
xor
retf
add
xchg
and
imul
mov
mov
cli
imul
add
inc
mov
sbb
enter
push
jb
add
jmp
mov
inc
test
cli
xchg
mov
and
add
jmp
stos
or
add
pop
push
xchg
cmp
retf
imul
lds
and
add
ror
add
out
cmp
pop
lods
lock
push
and
add
add
xor
add
inc
jmp
enter
mov
mov
add
movzx
xchg
cmc
cmp
add
(bad)
popa
and
in
(bad)
call
add
cdq
in
stos
mov
mov
stc
xchg
and
pop
add
out
add
je
sahf
mov
mov
out
add
mov
mov
shl
add
jmp
mov
ins
test
jb
add
(bad)
(bad)
dec
add
dec
push
les
mul
push
in
add
add
fnstenv
dec
add
add
sub
stos
add
mov
lea
and
xor
add
jmp
shl
mov
and
mov
movs
test
lds
add
in
and
scas
jecxz
mov
shr
mov
add
(bad)
pandn
stos
int3
add
mov
mov
mov
add
fucomip
sbb
or
add
(bad)
cmps
mov
pop
fwait
add
jmp
mov
inc
mul
mov
sub
add
mov
out
(bad)
dec
mov
jl
and
(bad)
call
test
pushf
aaa
stos
int3
stos
shr
les
add
std
in
sub
cmp
add
add
sub
cmc
xchg
cmp
and
mov
mov
sub
jle
add
cmp
(bad)
cli
stos
add
xor
stos
xchg
sub
add
call
add
mov
cdq
add
mov
and
test
add
mov
mov
mov
cmps
test
add
and
test
add
add
push
(bad)
mov
jmp
mov
in
mov
int3
add
in
add
inc
jo
add
sbb
add
mul
mov
sub
enter
mov
jne
adc
and
add
add
add
mov
push
add
add
add
jecxz
(bad)
das
and
jb
sub
pop
and
add
mov
lea
mov
mov
cmp
cmpxchg
mov
stos
sbb
add
mov
mov
jae
jmp
mov
mov
mov
mov
xor
mov
xor
sbb
add
cli
xchg
ret
ins
jecxz
adc
cmc
add
test
add
add
loopne
les
mov
cld
xor
mov
sbb
add
add
test
mov
and
add
add
stos
loopne
add
add
mov
add
add
jbe
mov
mov
out
add
add
jle
pop
nop
packssdw
into
cmp
jb
add
add
cmp
jbe
inc
retf
cdq
je
add
rcl
cmc
in
jg
jo
sahf
pop
addr16
stos
add
call
jle
add
add
xor
or
or
loopne
add
add
inc
add
add
or
sub
and
lock
add
add
movs
pop
ret
and
mov
dec
mov
lahf
cwde
mov
pop
test
dec
ret
and
push
and
rol
jecxz
ret
inc
shl
and
add
add
loopne
xor
ror
add
(bad)
inc
ins
and
cmp
fdivr
and
jne
call
lea
rol
stos
int3
clc
xchg
and
add
sub
adc
movs
dec
and
(bad)
jne
sub
add
xor
push
jge
dec
add
add
push
mov
mov
dec
and
add
add
and
repz
add
pop
test
and
xchg
ins
imul
fsubrp
lock
mov
cmp
in
inc
cld
and
out
xor
sub
(bad)
test
add
(bad)
(bad)
(bad)
mov
add
push
jmp
mov
(bad)
pop
test
loop
add
ds
and
mov
(bad)
out
or
add
and
cmp
add
fld
addr16
push
cli
inc
out
neg
adc
enter
mov
xor
add
adc
xor
int3
mov
jno
pushf
add
add
arpl
and
add
jecxz
xor
ins
out
xchg
add
add
inc
adc
jmp
mov
imul
add
add
cmc
sub
pushf
fwait
add
dec
jno
or
add
mov
sub
in
lock
fwait
sub
test
pushf
add
mov
jmp
test
fsub
ss
(bad)
push
inc
mul
add
sub
adc
stos
fcomp
test
stos
imul
pop
pop
pop
pop
ret
mov
add
les
call
stos
int3
ret
movs
(bad)
les
mov
mov
jmp
data16
(bad)
call
stos
int3
jo
cmp
test
and
mov
add
data16
test
mov
(bad)
jmp
mov
jmp
ins
dec
push
call
popa
fsub
sub
add
mov
add
call
inc
push
add
in
mov
mov
mov
and
xor
stos
add
mov
test
lods
and
add
stc
and
jmp
pop
call
retf
ins
add
add
jae
sub
add
xor
push
and
add
xor
cmc
add
mov
stos
fmul
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
adc
or
push
pusha
add
mov
add
pop
add
add
test
add
shl
push
leave
cmps
dec
add
add
ja
add
add
mov
and
xchg
dec
add
test
add
add
add
test
inc
movs
add
add
enter
mov
add
add
add
mov
cmp
push
hlt
movs
add
add
popa
test
add
add
add
mov
and
into
ja
mov
mov
inc
mov
and
add
inc
shl
dec
out
loope
ror
and
xor
add
add
jmp
mov
and
jbe
add
das
leave
clc
sbb
mov
test
imul
and
je
sub
inc
movaps
fadd
jmp
mov
and
xor
(bad)
dec
loopne
test
add
je
mov
cs
add
enter
push
mov
adc
add
dec
rol
add
aaa
xchg
sub
inc
test
add
enter
jecxz
sar
add
mov
pusha
cli
or
and
leave
cmps
add
sbb
ror
xchg
add
std
inc
xor
outs
add
add
add
mov
and
add
sub
pop
test
je
popf
daa
push
add
cs
cmps
dec
fsub
(bad)
mov
clc
sar
add
jl
add
test
pop
enter
sub
hlt
iret
ja
lods
push
pop
or
cmps
jl
dec
add
inc
pop
inc
outs
xchg
popa
mov
and
fadd
add
iret
sahf
xor
and
cmps
xchg
dec
sub
mov
je
jmp
mov
and
xor
mov
jg
jmp
push
int3
and
rol
sub
mov
shl
pop
xor
jmp
sub
sub
std
inc
and
add
add
and
add
cmps
add
add
pop
test
into
add
pop
shl
add
or
dec
je
and
pop
add
mov
loop
add
add
ror
add
add
sub
mov
inc
adc
repz
add
and
test
lods
pop
iret
ja
ds
fdiv
add
call
je
add
pop
enter
mov
clc
int3
add
add
add
add
sub
mov
push
inc
and
add
dec
dec
fmul
add
add
xor
xchg
add
mov
rol
inc
add
in
xchg
icebp
ins
xchg
push
out
dec
push
icebp
mov
and
cmps
add
add
and
add
popa
jge
test
dec
fadd
sbb
push
add
jmp
mov
and
add
add
mov
push
out
enter
test
add
add
add
add
pop
xchg
fsub
mov
je
push
retf
push
add
jne
ror
and
add
add
jl
fadd
gs
iret
add
neg
and
jne
test
jnp
out
pop
enter
add
mov
sub
rol
lods
pop
or
add
add
add
sub
je
in
jmp
xor
add
mov
(bad)
add
mov
sub
mov
in
ja
pop
(bad)
sub
fadd
mov
test
jbe
xor
mov
test
shr
add
ja
test
cmps
dec
fsubr
rol
jg
jmp
mov
and
add
ror
test
add
add
(bad)
in
movs
dec
fsub
add
add
add
sub
pop
cmp
add
add
add
movs
add
add
fisub
leave
add
mov
aas
bound
test
pop
iret
add
dec
mov
add
add
add
inc
mov
dec
fmul
ja
add
add
sub
sub
mov
jnp
lods
add
jmp
aad
and
add
add
les
or
pop
add
(bad)
pop
add
jmp
mov
and
add
sub
cmova
add
ja
test
dec
mov
mov
and
jg
sub
test
add
enter
xchg
mov
inc
clc
je
or
iret
add
sub
and
add
add
pop
add
add
add
mov
mov
ds
mov
adc
dec
add
xchg
jnp
inc
in
push
add
xor
mov
mov
not
je
dec
mov
pop
mov
add
sub
mov
push
(bad)
out
ja
xor
mov
test
sub
std
inc
in
js
sub
add
jmp
mov
loop
cmp
into
mov
and
test
je
movs
add
ja
test
leave
cmps
dec
icebp
out
inc
jnp
inc
je
push
push
movs
add
movs
ja
sub
les
jg
mov
add
ja
test
sub
das
inc
mov
jnp
xchg
shl
mov
xor
dec
mov
dec
je
sub
add
and
cmps
dec
sub
mov
and
rol
add
xchg
dec
je
inc
ins
xor
pminub
add
fld
add
fbld
jbe
xor
xor
test
add
cmps
add
mov
sub
sub
and
je
jmp
mov
and
add
sbb
stos
ja
mov
test
je
inc
shl
add
pushf
int
pop
and
cmovnp
sub
mov
pushf
add
bound
psllq
pop
enter
mov
repz
xchg
xchg
dec
jmp
pusha
je
jmp
mov
pusha
repz
mov
xchg
test
(bad)
add
push
fadd
cmps
add
je
mov
add
fwait
das
inc
and
ror
add
iret
jmp
mov
add
mov
fcom
fsubr
add
add
dec
add
add
inc
inc
and
psllq
rcl
cmps
add
mov
pop
fwait
pop
ins
mov
js
pushf
add
add
movs
add
cmps
mov
mov
inc
xor
je
push
push
cmps
xchg
add
add
xchg
je
mov
add
iret
cld
mov
and
mov
and
(bad)
stos
les
ja
mov
in
and
sub
and
test
add
jmp
jmp
xchg
dec
add
into
ror
mov
pop
iret
or
and
jmp
js
adc
and
dec
jmp
xor
inc
pop
cli
mov
add
mov
ret
mov
add
movs
js
shl
dec
xchg
mov
and
sub
outs
mov
xor
mov
mov
xchg
pop
pusha
rcr
sbb
add
inc
jge
and
popf
push
add
movs
(bad)
repz
cmps
dec
add
pop
retf
add
mov
mov
mov
xchg
add
inc
xor
cmp
ja
mov
dec
dec
loopne
mov
mov
push
jbe
mov
add
test
add
add
mov
movs
add
mov
cmps
add
loop
stos
data16
add
push
adc
mov
mov
and
dec
je
jmp
mov
mov
mov
movups
sbb
add
leave
ror
iret
sahf
push
add
add
pop
test
jl
ja
movs
iret
or
and
fisttp
add
test
add
mov
jmp
mov
mov
mov
mov
mov
mov
pop
test
sti
and
add
add
add
dec
sub
add
dec
add
cmp
inc
and
dec
fadd
mov
add
mov
cmps
xchg
mov
and
rol
cld
inc
inc
inc
and
add
mov
jg
add
mov
add
std
and
test
dec
test
movs
add
mov
retf
inc
sbb
and
lea
or
xor
add
mov
daa
xor
add
add
sbb
mov
mov
cmp
jg
add
iret
js
sar
mov
xchg
ret
test
shl
cmps
add
(bad)
dec
test
into
ja
mov
es
add
add
add
scas
add
mov
mov
xlat
test
sub
dec
fadd
test
add
ja
mov
pop
add
xor
cmps
xchg
mov
mov
mov
xor
mov
mov
mov
aaa
mov
test
ror
adc
fld
add
or
mov
(bad)
mov
and
add
(bad)
adc
add
add
xchg
add
mov
mov
and
add
jmp
mov
pop
cmp
cmps
xchg
add
mov
in
and
dec
fsub
inc
xor
aas
into
add
iret
add
mov
sub
xchg
dec
pop
add
add
mov
add
sbb
not
js
cmp
ins
push
add
add
je
jmp
mov
mov
test
pop
iret
jmp
sbb
cwde
add
add
add
add
add
add
(bad)
dec
and
add
add
xchg
cmp
popa
pop
add
mov
lea
outs
pop
stc
pop
mov
es
xchg
add
test
icebp
add
ja
test
cmps
add
adc
mov
add
dec
and
add
ja
not
add
out
mov
mov
sahf
(bad)
imul
add
rcl
jo
pop
mov
cmp
dec
je
dec
adc
mov
dec
fadd
dec
test
add
jmp
fadd
add
jne
movs
cld
shl
add
cmp
add
movzx
pop
iret
jmp
xor
add
add
sub
cmps
xchg
dec
mov
in
jbe
enter
out
jmp
(bad)
repz
mov
xchg
add
pop
add
enter
and
add
dec
repz
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
and
mov
mov
call
(bad)
retf
jge
lea
add
pop
std
frstor
or
add
mov
mov
test
mov
and
cmp
call
inc
add
iret
mov
adc
sub
nop
add
sub
or
add
add
add
add
cli
ret
cmp
mov
mov
mov
pop
shl
les
retf
add
add
jg
jmp
mov
ja
add
add
or
sbb
(bad)
mov
inc
shr
add
lea
add
nop
mov
and
jg
jmp
mov
sub
mov
shrd
add
jmp
mov
test
sub
push
inc
cli
sub
add
push
add
mov
sub
add
(bad)
fcomp
and
(bad)
jb
add
pop
mov
sub
mov
iret
mov
jmp
enter
add
xchg
pop
imul
jle
(bad)
rol
cwde
add
pop
mov
jle
push
push
sub
cmps
push
add
lea
std
add
popf
ins
jnp
inc
jg
push
adc
add
rol
rol
push
int
and
add
push
jae
out
pop
jg
cmp
add
add
add
ror
adc
pop
or
and
push
inc
add
call
inc
add
mov
add
push
add
add
rol
(bad)
clc
add
add
fadd
sub
mov
lods
int3
ret
(bad)
jmp
add
and
pop
cmp
cmp
imul
add
iret
mov
adc
add
sub
mov
getsec
stos
out
add
jmp
sar
cmp
push
inc
jmp
je
jmp
sub
and
add
gs
addr16
and
bndstx
fiadd
add
test
pop
add
and
out
cmps
mov
mov
add
test
add
add
push
call
add
jmp
mov
shr
inc
inc
and
sbb
out
mov
add
mov
(bad)
ror
inc
(bad)
cmp
or
xchg
and
test
add
in
inc
test
mov
add
mov
adc
mov
je
cli
jg
add
mov
and
add
inc
inc
ret
jge
mov
(bad)
add
add
pop
mov
adc
add
mov
test
add
jmp
mov
ret
adc
out
rol
movsx
add
add
fisttp
and
add
mov
out
push
iret
mov
fsub
mov
add
jmp
mov
sub
mov
or
ffree
cmp
sar
mov
movs
jmp
or
test
xor
jns
test
ret
sbb
mov
push
add
mov
dec
add
add
add
pop
sub
dec
push
jg
add
std
pop
jmp
stc
adc
xchg
jbe
mov
inc
iret
mov
add
out
mov
test
mov
mov
mov
pop
or
lods
test
inc
inc
mov
add
mov
mov
sbb
sahf
mov
rol
cmp
stc
cdq
push
ret
mov
pop
icebp
test
jl
fist
ror
inc
es
add
add
and
fs
mov
into
inc
mov
aaa
stos
pop
cmp
mov
add
add
fwait
add
add
xor
mov
shr
mov
movs
mov
cmp
xchg
cli
mov
xchg
and
add
rcl
cmp
inc
iret
xchg
mov
dec
pop
add
inc
imul
xor
sub
gs
and
add
and
div
rcl
dec
inc
rol
mov
test
dec
xor
shl
std
out
dec
cmp
aaa
and
pop
add
rol
fmul
mov
and
mov
mov
jmp
mov
mov
mov
mov
movzx
and
mov
add
repnz
mov
mov
lea
mov
add
dec
cmp
jmp
mov
sub
ja
iret
mov
add
mov
add
add
add
test
cmp
mov
inc
movzx
mov
sbb
test
lods
hlt
or
mov
add
mov
mov
mov
jmp
(bad)
or
cmps
test
mov
mov
add
cmp
stos
xchg
arpl
add
mov
add
aam
hlt
pop
pop
pop
pop
sti
pop
test
add
add
test
add
add
mov
cmps
lock
jmp
(bad)
cmp
mov
add
cmps
test
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
les
or
mov
pop
push
dec
and
mov
ins
mov
push
je
fs
retf
inc
and
mov
mov
inc
retf
fisub
shl
test
xor
pop
add
out
add
and
sub
mov
je
and
inc
add
inc
and
sub
mov
and
cmp
sbb
(bad)
add
sub
mov
loope
inc
clc
add
sub
add
add
push
pop
outs
pushf
mov
and
dec
(bad)
sbb
xor
add
cli
inc
push
pop
sub
es
xor
xor
add
add
out
sub
fld
dec
(bad)
sbb
jno
xchg
jnp
pushf
pop
push
fisttp
test
out
add
adc
add
add
or
ja
inc
and
jle
push
add
scas
sahf
inc
and
sub
inc
and
loope
sbb
add
jmp
mov
sub
test
dec
add
(bad)
ins
jne
add
xchg
sldt
mov
cmp
pop
xor
inc
and
or
js
out
out
jno
adc
outs
mov
sub
sbb
push
and
add
inc
and
inc
pop
mov
inc
clc
xor
je
in
add
pop
sub
addr16
retf
inc
add
retf
add
add
add
push
cmps
mov
mov
psllw
xchg
(bad)
jmp
mov
and
sub
mov
les
inc
add
imul
je
add
push
stc
add
mov
rcl
ss
inc
out
inc
add
xor
hlt
add
mov
clc
xor
add
jmp
mov
call
lods
pushf
pop
outs
loope
retf
gs
xlat
cmp
xchg
ret
and
mov
mov
mov
mov
jns
pop
xor
pop
and
test
mov
sbb
cdq
add
lahf
stc
mov
pop
mov
outs
inc
push
fs
inc
add
mov
jmp
mov
add
call
pop
add
add
xor
mov
inc
add
mov
mov
pop
add
shl
js
(bad)
sahf
inc
and
movzx
jns
or
add
cmp
and
mov
and
mov
cli
shr
adc
adc
lea
pop
pop
pop
pop
sub
out
adc
xchg
stos
cmp
inc
and
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
or
dec
ffree
inc
and
add
add
add
mov
add
add
mov
add
mov
add
rol
mov
and
dec
lds
call
cld
add
mov
sub
mov
push
and
pusha
test
add
add
test
xor
jmp
nop
cld
add
lahf
les
scas
jmp
scas
cmp
stc
pusha
add
sub
(bad)
push
and
dec
lds
add
add
cld
add
mov
mov
scas
add
(bad)
in
add
add
test
add
sub
mov
loop
stos
and
call
add
inc
sub
cmps
test
scas
and
(bad)
pop
add
jmp
mov
and
add
add
mov
and
int3
(bad)
loopne
add
jmp
mov
sub
xor
push
add
dec
add
add
sub
push
inc
and
jg
adc
mov
scas
or
inc
inc
fmul
rcr
lds
test
add
sub
mov
and
add
add
add
and
pop
mov
jg
jmp
or
icebp
pop
jl
or
inc
and
or
xlat
scas
add
add
add
test
add
arpl
out
mov
and
cmovp
test
add
daa
mov
and
add
add
mov
ror
add
mov
mov
push
test
jg
cmp
add
and
sub
mov
je
jmp
mov
and
ffreep
mov
mov
push
fiadd
test
imul
sub
mov
mov
scas
and
sub
test
add
dec
push
iret
or
test
inc
fadd
adc
mov
sub
jmp
test
add
add
les
mov
dec
cmp
repz
inc
clc
inc
je
jmp
mov
sub
mov
fidivr
in
add
jmp
mov
jno
add
xlat
push
inc
and
je
jmp
mov
sub
mov
cmps
retf
add
repz
cmps
pushf
add
or
xor
test
imul
inc
pushf
add
test
aam
cmp
mov
punpckhwd
add
jle
add
mov
fadd
xchg
sub
mov
or
test
add
mov
test
add
lds
inc
dec
inc
and
ja
jmp
mov
and
mov
test
outs
fcmove
pusha
add
add
lods
push
mov
icebp
jp
ficomp
mov
mov
push
add
pushf
gs
test
arpl
retw
sbb
test
in
add
into
sbb
add
add
mov
jbe
mov
test
lds
pushf
lds
test
jge
(bad)
mov
add
add
add
cld
add
mov
push
aam
jo
jne
inc
mov
test
cmp
fiadd
test
lds
add
and
test
add
add
test
cld
mov
dec
imul
add
dec
cmp
repz
inc
movs
cmp
in
scas
pushf
cmps
mov
add
add
add
ret
add
and
xlat
fwait
jo
mov
mul
add
std
aas
in
in
mov
dec
dec
add
mov
sahf
dec
cmp
lods
push
xchg
daa
push
add
cmp
paddb
mov
and
test
aad
jns
add
fsubr
add
add
test
add
add
dec
in
jmp
mov
mov
jmp
mov
mov
add
pusha
(bad)
mov
and
test
cmps
cmp
fadd
adc
mov
add
div
dec
out
xchg
inc
pop
add
dec
test
cmovne
ret
mov
(bad)
daa
sbb
add
int
add
(bad)
js
mov
retf
jmp
call
inc
and
add
adc
loope
in
add
jns
and
add
fadd
mov
mov
and
add
add
sbb
push
jle
add
mov
test
gs
cmp
movs
dec
add
mov
push
push
shr
or
fdiv
mov
mov
lods
add
add
das
scas
jmp
jg
and
inc
gs
imul
dec
sub
or
pop
or
call
add
ror
mov
pop
and
add
cmps
test
push
imul
ret
jge
jle
add
add
and
add
(bad)
mov
cmps
loope
mov
or
test
dec
add
push
and
add
dec
dec
call
stc
stc
(bad)
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
cmp
inc
and
(bad)
call
mov
jo
push
sub
fcomp
sub
(bad)
jp
or
jmp
int3
inc
cli
loop
adc
inc
(bad)
imul
add
icebp
jmp
mov
enter
arpl
cs
cmp
push
scas
dec
add
or
jns
mov
fmul
ret
mov
arpl
aad
add
or
cmp
push
movs
push
add
(bad)
in
add
add
add
add
leave
mov
mov
fistp
outs
call
jmp
sub
sub
scas
cmps
into
call
inc
jns
pusha
icebp
add
movs
mov
test
pusha
mov
sub
fiadd
add
call
shr
mov
test
add
das
adc
add
mov
clc
push
cs
imul
inc
sub
add
add
mov
sub
mov
hlt
test
add
jmp
jmp
mov
mov
jbe
and
mov
(bad)
in
inc
retf
addr16
jb
mov
mov
jmp
fs
add
mov
pop
or
and
add
add
arpl
cdq
jmp
ror
out
enter
mov
cmc
shl
dec
add
inc
sub
xor
arpl
jmp
imul
jg
mov
jb
add
mov
cmps
inc
and
dec
push
inc
ret
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
out
adc
push
add
inc
and
(bad)
imul
push
pusha
xchg
std
mov
push
xchg
mov
mov
jg
jmp
mov
out
sbb
jecxz
add
sbb
lahf
mov
jmp
push
gs
cld
xor
test
and
cmps
retf
and
sub
(bad)
mov
imul
add
jmp
sub
push
inc
and
xchg
push
dec
cmp
(bad)
or
xlat
outs
jae
js
inc
and
(bad)
sbb
push
jl
add
mov
test
and
xchg
test
add
dec
or
sbb
dec
dec
push
sub
push
inc
and
pcmpgtd
add
jl
stos
inc
and
icebp
enter
gs
dec
pop
test
nop
add
mov
std
inc
mov
jl
add
and
cwde
add
mov
pop
mov
and
retf
jmp
xchg
fidivr
sub
push
inc
and
je
xchg
add
cwde
push
inc
lock
xor
adc
mov
repnz
add
jmp
mov
sahf
xchg
or
add
add
add
add
test
dec
inc
mov
dec
inc
mov
xlat
jns
adc
add
xchg
lahf
add
jmp
clc
pusha
push
arpl
add
arpl
or
popf
add
add
xchg
pop
repz
add
push
(bad)
cmp
movs
addr16
add
add
add
add
add
in
loopne
outs
cs
cld
mov
mov
cmp
lds
mov
jmp
(bad)
dec
and
cli
add
fist
(bad)
mov
mov
mov
in
arpl
add
mov
push
add
je
scas
mov
mov
mov
pop
cmc
sub
enter
call
inc
and
adc
movs
sbb
sbb
add
out
cli
mov
jmp
or
jle
stos
mov
pop
cmp
(bad)
push
jmp
mov
lea
pop
pop
pop
cli
or
pop
and
jmp
cli
in
std
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
add
pop
or
and
add
or
jle
add
sub
inc
mov
mov
mov
rol
and
(bad)
movs
loope
in
wbinvd
mov
icebp
push
into
inc
mov
inc
and
mov
ror
rol
add
add
in
rcl
inc
cmps
add
(bad)
dec
and
and
sub
mov
fdiv
sbb
xchg
add
jns
inc
into
or
movs
int
and
nop
add
jmp
and
and
sub
mov
sub
add
jp
jns
add
and
sub
mov
mov
js
rol
pop
inc
and
sub
sbb
xlat
jg
jmp
adc
jmp
(bad)
(bad)
fdivr
shl
fidivr
add
jns
mov
(bad)
cld
cmp
jno
inc
and
sbb
popf
add
inc
add
inc
add
and
sub
mov
je
nop
iret
add
add
and
sub
mov
and
seto
js
add
(bad)
dec
inc
les
add
outs
jnp
mov
(bad)
xor
sub
mov
arpl
fldcw
add
add
xchg
inc
and
mov
jmp
adc
fiadd
add
daa
enter
std
add
popa
inc
arpl
dec
or
xlat
(bad)
jo
mov
mov
and
inc
inc
into
add
cmc
lds
inc
adc
xor
xor
neg
ret
(bad)
xchg
repz
sbb
ja
sbb
(bad)
dec
pop
add
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
aad
pop
bound
in
mov
test
mov
adc
fiadd
mov
test
iret
shl
(bad)
cmp
test
retf
mov
jp
ret
add
mov
add
add
add
adc
lds
ds
adc
retf
add
test
add
fimul
pop
lock
mov
mov
and
test
cmp
add
out
leave
and
ret
add
sub
mov
xchg
add
inc
out
test
cmps
add
jmp
xchg
add
and
fimul
sub
mov
dec
outs
stc
add
lods
add
push
and
out
add
call
inc
and
push
adc
loope
add
mov
movs
add
mov
mov
push
dec
ret
add
(bad)
pop
add
add
add
gs
add
fldcw
sub
rol
cmove
add
add
lea
enter
imul
inc
mov
leave
add
jg
jmp
mov
imul
int3
enter
sub
fstp
add
mov
test
out
lea
js
(bad)
ins
ret
add
or
and
inc
add
sub
inc
inc
mov
popf
ror
add
jmp
test
dec
ret
add
jne
push
jo
(bad)
and
add
dec
leave
add
inc
add
fisub
test
add
pop
mov
add
fadd
add
mov
and
leave
add
sub
and
and
fisttp
xor
ret
add
and
aaa
pop
aas
adc
sub
add
fiadd
mov
and
add
sub
push
fbld
jg
jmp
inc
arpl
add
sub
pop
ror
pop
add
add
add
loope
test
mov
jae
dec
mov
fld
add
xor
add
mov
ins
lock
add
pcmpgtw
mov
xchg
add
out
test
and
arpl
add
cmp
add
add
mov
movs
add
add
add
add
mov
and
add
add
mov
jg
dec
leave
add
inc
fimul
out
or
fimul
pop
mov
add
ror
mov
and
test
retf
retf
jp
add
(bad)
and
add
jmp
mov
movs
add
add
push
test
add
test
out
sub
dec
inc
and
or
xor
add
mov
sub
mov
orps
dec
ret
add
test
add
int
mov
lds
xor
and
test
add
and
add
add
movs
ret
repnz
mulps
inc
add
jmp
inc
xchg
lods
add
or
push
jmp
mov
out
add
add
mov
and
out
test
add
jmp
inc
test
add
mov
inc
mov
and
add
add
or
add
fwait
sub
mov
add
lods
add
ror
mov
sub
push
inc
and
cmpleps
cmp
dec
leave
add
add
test
sub
mov
cdq
add
add
add
add
mov
and
sbb
out
adc
test
imul
out
test
jmp
fisub
sub
add
jmp
mov
(bad)
fstp
jg
push
inc
imul
add
loopne
add
and
add
add
mov
add
test
add
jmp
lods
add
mov
sub
mov
bswap
add
add
or
add
inc
loope
jg
pop
pusha
mov
stos
lods
test
and
rcr
push
or
add
seta
add
mov
add
and
add
add
and
stos
jbe
scas
mov
mov
repz
fmul
fiadd
loope
add
add
scas
int3
pop
pop
test
test
add
push
sub
mov
mov
movsx
xchg
mov
xor
fstp
jl
inc
ret
and
inc
pushf
ret
mov
and
ins
add
inc
add
mov
sbb
(bad)
jno
sete
ret
inc
ror
or
call
loope
mov
sub
lods
lods
add
data16
retf
add
sqrtps
cmp
vmcall
mov
mov
and
push
mov
add
mov
sbb
repz
adc
add
retf
mulps
int3
cli
ret
add
add
inc
ror
jmp
and
add
leave
add
test
xchg
push
fcomp
(bad)
jno
add
dec
test
or
add
add
mov
jmp
push
and
ror
out
or
add
mov
add
add
fldenv
lock
sub
push
adc
add
and
inc
xchg
jle
mov
test
add
in
mov
imul
and
dec
add
mov
and
fld
add
ret
mov
fcomp
add
sub
mov
out
add
add
test
add
add
jmp
and
lods
test
add
dec
and
out
dec
push
push
aas
xchg
jmp
mov
push
and
or
test
test
lods
test
sub
add
mov
in
ja
fwait
inc
mov
jmp
mov
jmp
nop
push
mov
push
push
push
and
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
mov
mov
mov
into
push
hlt
popa
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
or
(bad)
add
and
mov
icebp
mov
add
mov
and
add
add
add
shl
add
add
inc
push
inc
add
push
xchg
(bad)
aam
push
inc
add
and
add
dec
add
mov
call
mov
add
cdq
mov
mov
adc
mov
test
mov
addr16
call
and
dec
aam
adc
fisttp
sbb
add
mov
add
push
mov
pop
test
shl
add
jne
test
add
dec
in
pop
test
test
mov
dec
add
jmp
je
and
add
hlt
sub
xor
ja
mov
add
mov
sub
dec
mov
call
jmp
pop
and
nop
add
add
jbe
and
jg
jmp
mov
popa
add
movs
add
pushf
and
add
les
sub
mov
lock
push
gs
test
nop
add
add
mov
inc
and
adc
inc
(bad)
sbb
mov
and
dec
add
sub
mov
add
les
jmp
and
punpckhwd
mov
add
add
mov
mov
scas
sbb
cmp
dec
test
add
hlt
sub
cld
inc
and
dec
xor
add
push
mov
add
add
mov
inc
test
test
fs
jmp
mov
pop
push
icebp
dec
sti
mov
inc
fsub
add
add
add
nop
mov
ror
mov
imul
sub
add
add
and
out
inc
sub
mov
and
jg
xor
rol
dec
add
cdq
stos
out
test
dec
add
sub
mov
out
add
test
add
nop
add
push
sub
pop
push
hlt
in
(bad)
and
add
popf
mov
nop
mov
sub
or
test
add
ror
add
lea
or
cmp
(bad)
mov
(bad)
hlt
add
bound
add
add
ins
repnz
xor
add
add
and
(bad)
hlt
dec
aam
sub
jge
push
ror
and
jmp
add
add
std
or
lock
lock
out
mov
mov
add
pop
push
and
andps
add
jmp
out
retf
lock
popf
add
sub
jbe
rcr
lds
jo
mov
mov
xchg
js
jg
nop
and
(bad)
dec
add
add
lds
mov
neg
aaa
mov
add
push
aam
dec
out
sub
fcmove
and
jg
call
ss
add
lock
add
jns
cld
inc
ret
test
dec
add
sbb
add
add
jo
inc
hlt
mov
test
stos
fs
cmp
jmp
mov
clc
cmps
test
sub
(bad)
test
jo
mov
cdq
movs
inc
ror
add
add
xor
mov
test
add
mov
mov
inc
inc
data16
mov
add
add
mov
mov
aaa
cwde
add
mov
inc
sbb
daa
push
add
ins
xchg
mov
fld
jne
xchg
mov
test
add
add
stc
add
jmp
test
mov
add
jnp
outs
hlt
jne
ins
int
adc
mov
call
mov
inc
jmp
popf
add
hlt
jne
xchg
and
add
add
mov
loopne
mov
adc
adc
sub
dec
add
mov
jecxz
mov
and
call
clc
jecxz
sar
mov
add
jnp
mov
cwde
add
add
aaa
cmp
cmp
mov
mov
ret
add
add
mov
cdq
add
mov
lock
stc
ret
add
mov
and
mov
mov
and
jo
adc
mov
cmp
add
in
add
add
lea
mov
add
test
add
jo
test
add
add
sub
lock
add
mov
jmp
mov
mov
mov
mov
add
add
cmp
add
add
add
add
add
lea
pop
mov
add
mov
mov
mov
sbb
fmul
and
jo
mov
mov
test
fs
mov
mov
je
mov
and
mov
stos
mov
xchg
(bad)
pusha
mov
and
call
pop
test
add
add
mov
dec
push
add
test
mov
aad
mov
and
add
fs
and
add
aam
mov
push
mov
mov
cmp
push
mov
icebp
ret
test
cdq
(bad)
das
inc
xlat
aam
add
out
sbb
jecxz
(bad)
dec
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
lea
mov
mov
mov
mov
mov
call
mov
mov
jmp
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
inc
and
mov
imul
and
aam
pusha
mov
and
imul
ins
mov
dec
inc
dec
and
add
add
xor
add
mov
sub
mov
and
js
fucom
add
jmp
mov
retf
ins
inc
enter
cmps
loope
jno
add
add
add
add
mov
sub
and
add
add
loop
mov
dec
iret
repnz
adc
mov
scas
(bad)
dec
inc
add
add
and
(bad)
pop
in
vphsubdq
test
add
add
and
sub
mov
push
add
add
add
and
shl
push
mov
dec
add
jmp
inc
and
js
pop
xchg
pcmpgtd
pusha
icebp
add
inc
test
sbb
push
out
push
(bad)
cld
pop
xor
jmp
cmp
sub
mov
in
cmovo
lock
xor
sub
outs
scas
and
cmovae
add
add
fadd
sub
mov
(bad)
icebp
add
jmp
jmp
xchg
repz
aam
mov
mov
xchg
mov
ror
loop
add
inc
loop
iret
and
mov
cmp
add
add
add
out
cmp
and
inc
pop
mov
mov
and
jmp
mov
adc
and
sbb
mov
push
xor
mov
ins
mov
pop
adc
add
add
cmps
stc
add
retf
out
add
inc
add
(bad)
rol
in
sbb
(bad)
cmps
and
sub
mov
cmp
mov
cmp
mov
inc
push
mov
fsub
mov
xchg
inc
jg
mov
out
add
out
add
inc
add
in
or
inc
and
dec
inc
or
and
add
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovbe
add
add
jg
and
mov
mov
jne
add
xor
xor
sub
fidivr
add
inc
or
rol
lahf
and
inc
push
sub
dec
scas
adc
mov
xchg
xor
add
jmp
or
call
(bad)
movs
add
ins
push
pavgb
sub
cli
jg
xchg
push
call
jo
inc
fimul
add
es
imul
and
mov
jl
jmp
xor
dec
pop
add
jle
add
movs
add
and
sub
mov
mov
and
fadd
push
mov
push
cld
shl
inc
arpl
jg
jmp
mov
sub
and
je
jmp
mov
aas
sbb
add
and
sub
add
ja
fsub
and
sub
mov
ret
out
jno
jmp
fwait
sub
sub
push
nop
push
sbb
(bad)
sbb
add
rol
add
fbstp
inc
push
sbb
adc
nop
and
fs
aad
pop
icebp
mov
add
add
add
jns
arpl
sub
mov
and
sete
data16
cmp
es
and
mov
xor
and
inc
push
cwde
adc
add
mov
mov
mov
mov
inc
push
cmove
push
nop
and
sahf
retf
add
xchg
mov
jmp
call
adc
push
dec
add
cmps
and
push
add
add
jno
jmp
mov
jle
(bad)
shl
push
jnp
jmp
bound
call
mov
xor
jl
lods
jmp
test
inc
add
pop
retf
out
(bad)
jmp
mov
and
add
add
shl
xchg
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
and
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
setl
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
call
lea
sub
mov
mov
call
add
lea
mov
mov
mov
mov
sub
mov
mov
call
add
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
add
mov
mov
jmp
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
sub
mov
mov
mov
call
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
sub
mov
call
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
sub
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
inc
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
call
add
mov
mov
call
mov
imul
sub
mov
call
add
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
sub
sub
add
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
call
mov
xor
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
xor
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
movzx
mov
mov
mov
mov
not
mov
neg
movzx
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
call
mov
mov
xor
mov
mov
mov
div
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
movzx
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
movzx
mov
mov
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
mov
mov
shl
mov
mov
cmp
cmovne
mov
jmp
mov
sub
mov
call
add
shl
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
mov
mov
sub
mov
sub
add
sub
sub
add
add
mov
mov
mov
sub
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
add
sub
mov
mov
cmp
mov
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
add
mov
sub
sub
add
add
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
sub
mov
mov
call
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
call
lea
sub
mov
mov
call
add
lea
mov
mov
mov
mov
sub
mov
mov
call
add
mov
mov
jmp
mov
sub
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
sub
add
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
call
mov
xor
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
neg
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
xor
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
xor
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
call
mov
mov
xor
mov
mov
mov
div
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
sub
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
movzx
mov
mov
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
ret
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
in
or
push
mov
imul
add
add
pop
(bad)
sbb
add
in
add
test
and
and
mov
mov
sub
loopne
mov
add
dec
add
movs
adc
jmp
sbb
dec
mov
xchg
inc
xchg
icebp
add
(bad)
and
add
jmp
and
and
js
in
xor
sbb
test
mov
lock
or
mov
test
bound
and
sub
mov
pop
sbb
xchg
(bad)
popa
cmp
add
xchg
add
in
xor
adc
add
movs
inc
inc
retf
jmp
lock
pop
aad
punpckhwd
and
(bad)
xor
iret
aam
cmp
add
aam
arpl
pop
add
add
dec
dec
add
add
test
and
push
add
sub
or
jns
out
add
das
mov
sub
pop
test
add
add
(bad)
xchg
pop
add
add
pop
aad
or
vmread
jg
jmp
mov
sub
mov
data16
cmp
fisttp
jmp
mov
movs
jb
(bad)
add
add
(bad)
in
push
fmul
add
mov
and
sub
mov
fisttp
jmp
mov
sub
mov
add
(bad)
pop
push
add
jmp
add
add
sub
xchg
test
add
stos
xchg
int
aas
add
jmp
mov
clc
mov
sar
js
or
fisttp
add
(bad)
mov
add
add
and
sub
adc
and
add
aam
push
jmp
mov
and
pop
aad
inc
in
inc
scas
cmps
movs
and
push
add
daa
and
add
add
push
and
inc
cmp
sub
mov
add
pop
add
test
add
icebp
movs
test
sub
pop
test
jecxz
mov
cmp
aam
push
and
add
dec
cmp
push
lods
xchg
icebp
add
scas
push
add
add
and
(bad)
xor
and
aaa
mov
mov
fistp
push
add
jbe
mov
sub
mov
popa
(bad)
in
cs
and
str
add
aaa
and
jecxz
lods
scas
add
add
add
mov
test
pop
add
cvtps2pd
add
add
add
add
jp
add
sub
loopne
stos
inc
jns
sbb
and
add
call
test
in
mov
sahf
xor
add
add
jmp
push
test
and
icebp
pop
jle
mov
xchg
int
cmp
aam
add
xchg
add
and
ja
aad
addr16
test
fadd
and
ror
jmp
mov
sub
xchg
das
mov
fistp
add
jbe
add
outs
icebp
add
icebp
neg
mov
jbe
add
stos
add
add
cmp
and
in
mov
sahf
sub
or
and
or
add
dec
add
add
adc
and
cmp
xchg
jg
jmp
mov
fdivr
in
mov
stos
add
jb
add
jmp
mov
dec
cmp
add
fs
aad
outs
(bad)
mov
jmp
mov
sub
adc
and
add
add
pop
nop
in
add
mov
bnd
mov
outs
sub
cmps
movs
clc
mov
daa
mov
add
dec
add
add
and
mov
add
(bad)
pop
add
xchg
add
std
fsub
add
aad
push
test
mov
(bad)
es
sbb
call
add
mov
or
add
pop
call
and
mov
sub
test
sbb
add
(bad)
xlat
add
stos
jae
inc
add
mov
lock
add
add
mov
jg
jmp
mov
aad
add
add
mov
psadbw
stos
add
add
add
sub
fs
add
xchg
add
punpckhwd
or
stos
add
push
mov
cmps
mov
test
(bad)
or
mov
jbe
mov
inc
sti
ins
es
mov
add
mov
jb
add
add
sbb
adc
and
in
add
add
mov
add
mov
add
sub
mov
add
repnz
push
add
stos
sub
mov
lock
add
add
push
lahf
sbb
add
rcl
lds
outs
add
mov
pcmpgtd
add
stos
call
xchg
sub
(bad)
fdiv
test
movs
pop
add
sbb
sub
fmul
add
mov
test
sbb
call
cmp
mov
cmp
pop
aad
(bad)
adc
xchg
movs
jne
add
xor
mov
sub
mov
js
push
aam
add
jmp
sbb
pop
aad
pop
cmp
test
inc
add
add
add
sub
loopne
and
movs
test
push
add
sbb
push
data16
add
stc
mov
paddusb
(bad)
sub
fadd
test
mov
xor
test
test
call
mov
enter
jbe
out
icebp
neg
inc
icebp
fs
mov
add
add
stos
pop
and
push
imul
and
test
inc
add
jmp
mov
mov
push
inc
aad
and
out
push
pop
dec
in
add
xor
in
retf
inc
and
je
jnp
add
dec
ja
aad
xchg
jo
xor
mov
push
je
cmp
cmp
add
sbb
loopne
add
jp
mov
jne
dec
add
fsub
in
jno
xor
das
lock
add
mov
mov
add
mov
aaa
mov
jns
cld
rol
add
add
add
add
or
xadd
loopne
and
add
adc
sub
xor
pslld
push
mov
add
add
or
bound
cmp
in
stos
cmp
test
repz
adc
sar
dec
cmp
xor
test
add
add
add
test
(bad)
mov
enter
mov
imul
and
add
pop
sub
mov
je
mov
add
dec
lock
xchg
add
addr16
mov
sub
and
and
jmp
repnz
push
add
outs
pop
pop
inc
and
punpckhbw
in
add
push
pop
aad
add
sub
push
inc
sub
je
jmp
mov
and
add
stos
push
add
ins
enter
sbb
push
xor
mov
jbe
rcl
and
add
sub
push
dec
dec
sbb
jns
in
sbb
add
xor
add
mov
jnp
add
call
icebp
fld
outs
add
mov
add
xchg
int
dec
add
add
mov
stos
cmc
cmp
mov
test
nop
pop
xchg
lods
add
add
test
cmovne
mov
jmp
sar
pop
bound
test
add
in
cmc
shr
mov
call
mov
mov
xor
mov
jo
and
add
mov
or
hlt
xor
dec
(bad)
sub
add
add
inc
push
and
xor
rol
jmp
shr
lods
push
adc
and
xchg
mov
iret
push
add
xlat
ror
pop
jmp
mov
mov
dec
add
add
push
mov
jno
mov
add
jl
or
scas
xchg
retf
xor
ret
pushf
adc
clc
push
push
jp
mov
and
mov
aad
and
aad
mov
adc
ret
mov
push
gs
fnstenv
sub
rcr
(bad)
or
add
and
jmp
mov
and
and
in
add
jmp
adc
into
and
cmp
add
sbb
add
mov
fsub
cdq
add
imul
add
mov
hlt
jae
push
and
push
loop
xchg
and
add
add
outs
dec
movs
clc
push
push
imul
add
push
jae
fisttp
xchg
and
fwait
add
cli
add
jne
mov
ret
add
ret
dec
sub
mov
test
and
pop
add
stos
xchg
dec
ror
sbb
jmp
push
arpl
xchg
mov
mov
add
cli
push
add
add
and
add
sbb
pop
cwde
add
sti
dec
es
add
and
icebp
stc
outs
add
scas
fild
add
ror
mov
(bad)
stos
add
retf
add
mov
mov
pop
xchg
and
in
mov
jbe
pop
fimul
test
das
and
xor
mov
adc
adc
sub
cmp
sub
loop
ror
add
jg
add
mov
dec
repz
pop
push
fwait
dec
fadd
mov
cmp
adc
(bad)
sbb
jmp
sub
and
add
pop
lds
clc
push
add
psubb
jle
jmp
sub
inc
add
aam
push
and
mov
add
dec
repz
jmp
punpckhwd
std
and
add
or
lock
mov
(bad)
repnz
add
add
cld
(bad)
lock
in
outs
icebp
add
xchg
inc
fadd
add
fisttp
inc
add
retf
cmp
aam
test
call
jno
imul
outs
icebp
jmp
imul
inc
and
test
add
add
push
cmp
add
sub
lock
jge
add
mov
rcr
lock
mov
add
stos
pop
add
add
add
ja
mov
mov
sbb
xor
mov
pop
mov
call
or
fs
fwait
int3
mov
add
add
push
in
sbb
jae
add
mov
(bad)
fsub
aam
outs
movs
dec
call
mov
mov
mov
enter
inc
add
pop
test
in
mov
test
mov
aad
dec
jmp
cdq
lock
out
out
test
(bad)
stos
jns
xor
aam
mov
mov
and
add
dec
(bad)
xchg
add
div
js
and
add
fmul
add
add
std
enter
call
add
xchg
sub
test
add
mov
add
test
add
and
sub
and
popa
jns
pop
pop
rcr
adc
mov
loop
jmp
mov
jmp
mov
jae
cmp
add
test
mov
mov
add
add
and
add
add
shr
add
add
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ins
xchg
dec
in
mov
out
test
push
add
jg
out
push
add
cmps
inc
inc
xor
and
pop
add
jno
jp
push
jmp
fld
add
mov
mov
cmp
addr16
mov
scas
jmp
mov
pop
push
add
add
pop
dec
lidtd
emms
pop
pop
add
pop
add
add
inc
add
mov
test
add
cmovg
add
add
add
test
add
ss
push
mov
and
imul
je
jmp
mov
es
daa
fimul
sbb
add
(bad)
and
pop
jmp
inc
test
add
fs
out
test
push
jl
or
pop
jmp
fadd
sub
mov
add
pop
jl
add
add
add
cs
jge
(bad)
mov
add
push
shr
add
mov
scas
and
add
add
test
and
lock
add
(bad)
outs
jge
sbb
add
add
mov
jg
jmp
adc
and
pop
clc
add
daa
or
add
inc
dec
jmp
mov
in
jp
mov
test
pop
ret
add
fwait
push
mov
and
stc
add
sub
mov
and
jmp
mov
dec
jnp
mov
add
out
test
add
pop
and
popa
add
add
add
inc
add
add
add
jns
jmp
sbb
add
mov
sub
mov
pop
add
stc
(bad)
fild
fs
mov
dec
call
push
mov
jg
mov
add
mov
fs
nop
pop
push
mov
pop
and
iret
add
jmp
mov
mov
or
mov
jg
add
add
int
push
sbb
add
dec
test
fadd
test
lahf
push
jl
add
add
add
mov
push
sub
fadd
add
test
mov
sub
mov
adc
jmp
imul
push
xchg
ins
(bad)
test
push
pop
push
add
add
add
mov
sub
xchg
test
loope
add
dec
pop
add
add
test
fiadd
sub
mov
push
ja
add
jmp
iret
test
popa
jp
add
xchg
test
add
jg
pop
cs
retf
add
clc
or
add
pop
lods
adc
pop
add
fadd
add
mov
popa
add
add
adc
push
mov
and
xchg
add
xlat
add
push
sub
sar
pop
push
add
data16
inc
add
sbb
dec
jnp
mov
in
push
test
add
repz
add
add
data16
push
mov
sub
fiadd
out
add
add
add
add
pop
push
sbb
add
mov
and
mov
mov
mov
sub
jno
and
add
pop
push
(bad)
adc
add
jmp
mov
imul
cmp
rol
(bad)
xlat
add
add
test
add
inc
sub
add
cmp
and
add
paddusb
or
add
add
test
sbb
add
xchg
movs
mov
add
add
(bad)
jno
retf
fs
mov
sub
mov
cmpeqps
add
clc
add
jmp
aad
add
sub
mov
psrad
rol
add
add
mov
sub
mov
lds
psrad
ins
sub
jmp
aad
ja
or
add
cdq
(bad)
pop
add
test
into
add
add
mov
and
das
add
sub
adc
je
jmp
mov
and
add
sub
mov
inc
test
js
add
cmps
ret
xchg
test
add
add
call
push
data16
add
pop
std
add
mov
ins
and
add
add
mov
dec
sub
add
add
mov
in
nop
mov
out
js
loopne
add
add
ins
add
test
(bad)
add
sub
mov
and
stc
add
add
jmp
add
add
inc
test
or
aas
add
loope
test
or
test
fadd
je
jmp
jae
daa
sub
add
jnp
call
je
xchg
add
jl
mov
sub
shr
mov
imul
add
add
pop
dec
add
add
aam
and
je
jmp
test
clc
mov
pop
test
sub
add
mov
add
mov
sub
inc
aad
mov
jns
je
loop
add
add
add
fs
inc
and
inc
cmp
test
jp
push
jl
test
addr16
add
mov
push
push
fstp
pop
or
call
add
add
xchg
push
mov
add
jmp
movs
test
sub
add
sub
mov
and
je
jmp
mov
les
in
pop
push
mov
dec
jne
dec
add
push
add
add
loope
sub
xchg
push
inc
stc
test
fld
add
in
test
ja
iret
das
call
mov
pop
push
jmp
add
jp
sbb
inc
clc
je
and
clc
or
(bad)
data16
mov
test
mov
jle
xchg
dec
push
inc
pusha
ror
scas
jnp
add
xchg
loope
mov
and
add
add
jnp
xchg
push
inc
and
cmovg
push
add
jmp
mov
add
mov
mov
add
add
or
add
mov
sub
add
and
test
dec
add
sbb
push
add
fld
pop
and
push
inc
xchg
out
aas
sub
pop
jmp
mov
jns
call
pop
inc
(bad)
sbb
test
add
add
add
add
mov
mov
add
push
inc
jmp
add
test
pop
push
bound
js
and
call
mov
(bad)
rcl
or
cmp
cmove
mov
dec
add
jmp
mov
mov
jmp
inc
add
add
addr16
jbe
jnp
jae
ret
loopne
repnz
rcr
mov
lea
jl
mov
mov
mov
fadd
add
lahf
push
shrd
shl
dec
jnp
push
add
mov
pop
mov
(bad)
rcr
(bad)
add
ret
adc
adc
add
add
pusha
test
sub
icebp
add
mov
mov
das
add
dec
popf
inc
jl
add
inc
movs
cmp
mov
add
or
jmp
icebp
cmps
fsubr
jns
movs
xchg
in
xchg
and
add
add
xor
imul
clc
and
add
xlat
(bad)
push
pop
sub
jno
daa
cmp
pop
add
add
mov
add
jnp
test
sbb
dec
(bad)
cmps
add
mov
arpl
add
mov
inc
lds
stos
mov
addr16
add
add
xchg
fisub
push
jnp
jnp
movs
das
ins
jmp
sub
cs
pushf
add
add
add
mov
mov
and
inc
and
pop
cs
add
add
mov
pop
sub
dec
je
mov
pushf
inc
inc
rcr
cmps
mov
sub
retf
add
sbb
pop
loop
push
pop
test
add
inc
rcl
and
pop
push
add
icebp
add
add
clc
cmp
add
add
jmp
aad
aas
aad
jae
jl
mov
sub
jl
sub
pop
add
mov
add
inc
imul
add
sar
test
add
xchg
test
add
pop
jne
push
mov
and
add
add
test
add
ins
fidiv
test
sbb
addr16
(bad)
mov
fsubr
mov
add
fcomp
test
call
pop
inc
inc
pop
inc
push
fisubr
push
pop
add
xbegin
sar
ins
jle
and
mov
pop
loop
sub
push
ret
add
pusha
jle
add
gs
or
frstor
jp
sbb
add
rcl
pushf
pusha
fdiv
cmp
in
or
adc
mov
add
mov
loop
add
add
int
push
add
add
aas
imul
add
add
rol
gs
inc
jno
xchg
cmps
or
mov
fwait
push
cmp
out
lahf
clc
add
cdq
test
push
add
es
movs
jmp
lea
addr16
add
mov
mov
cmp
mov
ret
arpl
add
dec
or
call
mov
sub
ins
ja
xlat
sbb
jmp
cld
pop
icebp
dec
jnp
cdq
and
add
mov
xchg
movs
(bad)
pop
add
retf
mov
jmp
(bad)
loop
inc
sub
mov
pusha
mov
cmp
pop
add
(bad)
(bad)
cmp
or
ins
xor
jl
push
in
add
cs
in
dec
or
sub
mov
cdq
dec
jmp
and
add
add
(bad)
das
add
pop
jns
mov
mov
pop
inc
add
in
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
inc
or
imul
std
lea
aam
and
add
dec
mov
sbb
add
in
test
enter
mov
add
fstp
push
ret
int3
sub
mov
sbb
add
add
jae
in
add
(bad)
mov
outs
mov
jg
ret
add
and
add
xchg
add
and
enter
std
(bad)
jmp
mov
and
dec
add
sub
mov
cli
fild
add
add
add
add
test
push
addr16
mov
psraw
add
dec
jmp
xor
stos
and
daa
ror
add
lsl
and
(bad)
mov
std
lea
jo
add
sti
add
add
(bad)
movs
sub
add
mov
test
add
add
ins
or
in
and
cmovs
pop
add
adc
add
add
jb
mov
jae
test
test
cli
maxps
mov
int
(bad)
mov
xchg
test
sub
mov
mov
add
jmp
mov
inc
jae
in
sub
dec
test
add
outs
dec
ret
mov
int3
add
xchg
pop
popa
test
in
add
sub
(bad)
pop
add
push
(bad)
int3
outs
dec
sub
adc
ss
add
cli
add
punpckhdq
mov
jae
add
add
scas
inc
and
add
mov
pop
aam
sar
dec
sub
mov
adc
add
add
ss
jns
nop
lea
stc
loope
add
add
mov
stos
sbb
ror
movs
add
jmp
mov
shl
out
imul
and
shl
cmp
in
and
jmp
mov
xor
(bad)
jbe
mov
add
(bad)
mov
adc
and
add
shr
mov
and
jg
jmp
mov
push
mov
mov
setge
test
add
rol
in
or
and
mov
mov
pop
fprem1
push
(bad)
(bad)
outs
add
jmp
mov
mov
mov
add
mov
jmp
push
test
pop
add
sub
mov
jo
cmp
add
shr
and
add
or
jns
je
jns
je
ret
mov
rol
in
pop
mov
add
das
and
std
jmp
mov
xchg
sbb
and
lar
mov
mov
std
mov
mov
inc
(bad)
or
sub
push
mov
test
pop
mov
and
je
mov
add
add
outs
int3
add
add
mov
out
and
sbb
test
jle
sbb
in
pop
enter
lods
add
add
test
add
dec
sub
mov
mov
and
add
outs
add
add
and
int3
in
jae
ins
or
inc
and
je
jmp
mov
data16
mov
rol
in
jae
add
mov
lea
nop
xchg
inc
fld
or
pop
imul
pop
add
add
test
add
add
mov
inc
mov
jmp
mov
enter
outs
cli
inc
leave
sbb
test
sub
add
outs
add
inc
sub
mov
mov
test
xchg
shr
and
jae
add
sub
mov
xchg
inc
fnstcw
add
xchg
sub
mov
add
inc
and
cmc
test
add
gs
add
and
test
int3
mov
mov
sbb
outs
sub
test
add
sub
mov
sub
int3
shl
add
fs
add
scas
cwde
das
lea
pop
jmp
rol
and
sub
test
add
add
xchg
call
push
addr16
and
test
imul
add
dec
sub
add
sub
nop
inc
and
cvttps2pi
clc
add
cmp
leave
call
jmp
mov
lahf
add
jmp
mov
sub
mov
movd
out
mov
sbb
add
mov
and
add
jmp
and
je
jmp
mov
mov
aas
mov
inc
and
add
add
pmulhuw
mov
add
jg
fnstenv
mov
add
add
cli
add
or
fisub
xor
jo
lods
cmp
adc
cmp
add
mov
mov
sbb
cmc
imul
out
and
xor
mov
test
add
mov
mov
jae
and
add
mov
mov
xchg
mov
fadd
add
cmp
sete
mov
out
add
mov
add
jmp
mov
inc
mov
mov
sbb
and
inc
test
add
sbb
mov
std
add
mov
jmp
mov
and
mov
or
add
ins
test
jae
and
and
sbb
dec
test
add
inc
aad
outs
jmp
xchg
mov
scas
(bad)
mov
and
sbb
cmove
lea
dec
add
add
add
scas
push
bound
(bad)
shl
add
and
add
test
push
test
mov
mov
mov
inc
adc
shl
xor
aad
sub
rol
mov
add
mov
jmp
mov
mov
and
add
test
and
add
mov
outs
add
in
and
sub
add
jg
add
push
call
je
mov
add
add
mov
cmps
in
add
jecxz
test
add
add
jle
cwde
xchg
sub
add
mov
inc
pop
pop
pop
inc
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
in
(bad)
or
add
in
ins
and
bnd
mov
mov
jns
add
add
sub
mov
mov
mov
or
rol
mov
add
clc
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
aas
test
or
mov
ret
mov
mov
mov
pop
sar
loopne
add
mov
mov
jmp
mov
mov
and
bswap
mov
add
cli
clc
add
push
mov
fld
or
add
bswap
mov
call
mov
sbb
comiss
inc
add
imul
gs
jae
jmp
mov
imul
fisubr
jg
or
popf
dec
mov
sub
mov
ucomiss
jecxz
adc
clc
stc
add
mov
xor
das
loopne
sub
cmovg
add
adc
and
jmp
mov
add
inc
stos
mov
ds
or
imul
pop
add
imul
arpl
mov
dec
inc
and
je
jmp
sub
sbb
sbb
ja
add
and
pop
movs
add
cmps
sub
in
ds
(bad)
rol
int3
jecxz
add
add
mov
sub
mov
movs
outs
fist
clc
push
enter
movs
mov
inc
sbb
inc
and
psubusb
add
mov
dec
inc
and
enter
adc
in
(bad)
or
sbb
loope
ret
mov
loopne
and
fs
iret
test
add
inc
loope
dec
mov
sbb
jle
je
add
add
add
stos
mov
ss
jno
add
add
movs
jmp
mov
sub
mov
dec
rcr
add
inc
js
cli
sbb
sub
test
add
dec
push
add
scas
mov
and
sub
mov
sbb
add
add
xchg
inc
add
jge
mov
add
dec
test
add
add
jmp
mov
mov
hlt
(bad)
sbb
loope
add
dec
push
and
sub
mov
or
popa
movs
adc
pop
mov
mov
and
sub
imul
lods
stos
loope
add
mov
fild
imul
inc
add
mov
js
sub
mov
or
inc
loopne
in
jmp
jmp
and
mov
stos
loope
mov
stos
mov
sub
and
add
add
mov
push
call
test
popf
mov
adc
fwait
mov
not
add
inc
fisttp
out
sub
and
xchg
je
pop
sub
ss
(bad)
loopne
xor
pop
and
add
jbe
cmp
and
outs
and
jbe
dec
mov
mov
out
mov
rcl
and
sub
xor
mov
mov
or
mov
and
sbb
ror
retf
jo
push
mov
cmp
add
add
inc
xlat
add
or
push
lds
add
add
mov
inc
stos
add
xchg
loopne
or
test
inc
adc
push
add
add
test
and
les
inc
and
(bad)
je
jmp
mov
jmp
mov
mov
and
add
add
sub
es
loope
adc
inc
fdivr
sbb
movs
xchg
dec
ss
mov
jmp
mov
shl
add
gs
cdq
mov
push
and
retf
jns
xchg
aam
and
and
add
add
cmp
push
jmp
mov
or
mov
jmp
data16
push
mov
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
sbb
sbb
inc
sti
pop
(bad)
aam
mov
sbb
stc
and
push
leave
and
or
fwait
sub
loopne
and
push
cmps
test
(bad)
popf
clc
add
jmp
mov
inc
mov
aad
inc
bswap
loopne
xchg
dec
xchg
add
pop
ss
dec
dec
sub
bound
pcmpeqd
add
push
xchg
xchg
cmps
add
pop
inc
cdq
cmp
das
mov
or
dec
add
mov
sub
fwait
inc
and
shl
stc
add
add
add
mov
js
mov
xor
cwde
jg
mov
add
mov
sub
mov
js
lock
ss
imul
pusha
in
mov
sbb
jae
mov
fwait
sub
add
jmp
mov
call
jo
stos
aaa
out
add
pusha
inc
and
sub
fadd
fwait
test
rol
mov
(bad)
leave
inc
and
add
idiv
add
es
bound
(bad)
cwde
push
add
jmp
pushf
xchg
cdq
cmp
stos
add
and
je
js
dec
add
hlt
inc
and
sub
mov
jbe
add
ja
add
pop
inc
sbb
imul
lock
add
add
add
int
ss
mov
or
imul
jmp
stc
mov
sub
mov
je
jmp
mov
sahf
sub
sbb
inc
add
jmp
mov
aas
fbstp
loop
mov
je
xchg
add
add
jge
cmps
add
mov
pop
ficomp
stos
mov
mov
inc
repnz
test
aad
and
add
fst
fcomip
sub
in
add
add
add
mov
lds
(bad)
jmp
dec
mov
jmp
and
shl
outs
push
push
adc
inc
ror
add
stc
jb
pop
push
mov
xor
add
inc
and
mov
inc
dec
inc
and
mov
movs
add
add
adc
add
mov
ror
and
cmovle
jge
add
jno
mov
and
pop
ret
mov
adc
add
dec
add
lea
mov
sub
or
mov
and
(bad)
ds
push
pop
repnz
jmp
mov
mov
fucomp
sub
mov
das
mov
and
mov
sti
adc
add
mov
lea
pop
jmp
add
xor
jmp
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
add
cmp
cmove
mov
jmp
mov
mov
jmp
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
add
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
cmp
cmove
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
shr
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
add
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
add
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
add
cmp
cmove
mov
jmp
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
add
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
add
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
jmp
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
sub
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
add
movzx
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
mov
xor
div
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
mov
mov
call
add
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
sub
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jae
add
daa
add
add
nop
add
add
mov
mov
mov
add
test
xchg
add
test
ins
xchg
cmp
mov
imul
and
add
add
pop
and
(bad)
and
add
mov
cmc
add
jae
sub
mov
inc
lods
test
sub
xchg
idiv
sbb
paddb
add
xchg
jmp
mov
sub
mov
js
sbb
add
add
movs
add
mov
add
(bad)
scas
popf
mov
loope
and
or
cmc
cmps
add
adc
pop
add
pushf
sbb
pop
sti
cmp
in
add
jmp
and
xlat
test
adc
ins
sub
adc
inc
add
nop
add
and
jmp
int3
stos
pop
and
push
test
ins
add
cmc
mov
mov
mov
ds
cmp
mov
jl
daa
test
sub
ins
sub
mov
addr16
pop
mov
enter
add
mov
sti
add
xchg
enter
dec
iret
out
les
(bad)
rcl
add
add
ins
inc
or
(bad)
inc
pop
pop
pop
(bad)
call
enter
and
xchg
add
sub
mov
jg
jmp
test
jmp
addr16
push
(bad)
cs
enter
jae
push
test
in
add
in
xchg
mov
dec
jg
jno
add
mov
lods
sub
mov
movntq
out
add
pop
jmp
xlat
test
mov
cmc
sub
mov
jg
or
daa
add
mov
adc
sub
cmc
(bad)
mov
outs
dec
imul
jmp
fadd
fdivr
xchg
pushf
sbb
mov
add
pushf
fadd
inc
mov
mov
nop
jl
pop
icebp
inc
cld
arpl
paddsb
add
jmp
push
add
mov
sub
inc
mov
xor
test
in
add
xor
(bad)
dec
mov
jae
aad
add
push
add
add
mov
and
je
jmp
sub
add
sub
mov
and
dec
test
mov
add
test
lods
sub
(bad)
mov
pop
ja
test
mov
push
cmps
add
adc
pop
daa
add
sub
mov
nop
add
lods
sub
dec
mov
add
sub
mov
js
cmovl
add
add
cmps
jae
mov
mov
sub
jo
inc
bound
jl
jmp
popa
test
push
sub
xchg
fdivr
test
xchg
add
lahf
add
lods
test
sub
sub
and
lahf
clc
cmps
add
lods
jmp
mov
mov
inc
jnp
fisttp
test
add
add
repnz
xor
(bad)
jge
jp
mov
mov
les
add
add
popf
mov
mov
cmc
add
push
add
arpl
cmp
add
inc
ins
mov
push
add
mov
jmp
call
sub
add
outs
or
add
xor
adc
mov
adc
pop
mov
add
nop
sub
xor
inc
mov
jp
cmps
and
pop
add
jae
in
add
add
fdivr
iret
cs
cwde
nop
add
add
add
test
sub
fwait
rcl
ins
push
push
add
and
cmc
add
mov
mov
call
mov
mov
test
in
add
bound
cwde
nop
add
jle
lods
add
test
(bad)
fwait
jmp
lds
mov
cmc
add
popa
div
or
out
mov
cmp
sub
jmp
fwait
jmp
arpl
cmc
cmps
jae
in
lahf
sub
into
mov
test
add
adc
(bad)
aam
xor
xchg
js
add
add
ret
inc
addr16
and
xchg
add
jmp
mov
mov
dec
imul
and
add
call
mov
mov
mov
mov
or
add
lahf
mov
adc
std
ret
pop
ret
push
test
add
jmp
mov
stos
add
mov
fwait
xor
jns
jae
out
sub
mov
(bad)
dec
pop
inc
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
xchg
add
mov
mov
jle
and
movs
pop
and
mov
loop
dec
repnz
and
(bad)
add
scas
and
mov
(bad)
(bad)
(bad)
mov
mov
ins
in
mov
cwde
adc
adc
mov
and
nop
push
add
inc
sbb
ds
ret
add
lea
pop
ins
rcr
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
dec
push
add
(bad)
mov
mov
ffree
inc
movs
rol
mov
or
daa
and
mov
and
push
(bad)
dec
add
and
push
(bad)
lods
add
lea
hlt
cwde
aad
movs
ret
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
mov
sbb
and
or
sub
add
sub
add
es
add
add
add
mov
add
(bad)
jmp
mov
and
add
or
and
add
mov
dec
mov
mov
(bad)
cmc
mov
and
add
test
int
lods
add
or
adc
add
add
fcomp
push
outs
mov
imul
lea
imul
inc
add
test
jg
int3
add
xor
push
inc
sahf
bound
leave
xor
xrelease
jns
add
in
and
jecxz
sub
add
sub
add
add
mov
add
inc
mov
leave
adc
add
dec
add
movs
sbb
inc
test
cmp
or
lods
add
add
add
or
sub
add
add
add
mov
sub
mov
jmp
repz
adc
add
test
popf
add
push
adc
mov
stos
pop
leave
cmp
mov
and
test
dec
inc
mov
sub
adc
test
add
add
mov
aas
(bad)
fs
xor
sub
(bad)
jmp
sbb
and
add
iret
sub
mov
mov
outs
add
dec
sbb
add
add
jo
test
add
scas
iret
or
add
test
pop
sbb
add
sete
add
cmp
test
mov
test
les
push
mov
add
sbb
add
pushf
(bad)
daa
xchg
mov
add
add
add
nop
add
daa
test
into
or
sbb
add
add
inc
push
and
cmp
les
sub
add
or
add
push
mov
sub
mov
add
inc
arpl
add
lea
add
mov
packssdw
daa
add
add
test
add
add
sub
leave
add
nop
test
add
add
test
add
in
or
test
mov
cmps
adc
add
add
leave
sub
sub
in
add
mov
add
add
dec
sub
sub
mov
jg
jmp
mov
inc
lods
iret
add
pop
pop
xchg
mov
mov
or
add
add
add
sub
mov
ss
aam
add
jmp
sbb
and
lods
iret
or
popf
mov
and
pushf
add
inc
cmps
aas
sbb
add
fs
cmp
or
test
push
xchg
add
sub
jmp
mov
and
add
add
mov
add
test
add
and
test
jno
xchg
add
jmp
jno
add
pushf
mov
and
movs
add
sub
in
test
push
add
add
test
outs
test
test
int3
add
mov
sub
mov
add
test
hlt
add
movs
mov
sub
mov
mov
imul
add
add
loop
mov
mov
and
mov
test
sub
add
dec
je
test
inc
add
bswap
or
add
adc
mov
and
bswap
cmp
mov
add
push
nop
ins
jno
push
mov
inc
sub
les
add
add
pushf
add
mov
mov
add
add
push
add
add
add
sub
mov
and
lahf
test
aaa
add
add
adc
pusha
inc
test
sbb
add
mov
sub
sbb
(bad)
loopne
add
add
add
test
lea
mov
aas
pop
imul
test
and
add
sbb
mov
mov
jmp
nop
test
add
stc
aaa
daa
adc
and
wbinvd
mov
add
inc
and
add
mov
leave
in
xchg
stos
mov
xchg
test
add
sub
add
add
dec
cmps
add
cmp
jo
inc
and
cmps
adc
add
sbb
dec
mov
inc
je
jmp
push
out
and
add
sub
rcr
xor
fmul
sub
test
sbb
add
and
shl
mov
je
jmp
push
test
xchg
inc
lods
loop
out
mov
cmp
add
movs
add
mov
add
mov
test
add
add
pop
add
add
test
add
add
inc
inc
and
punpcklbw
add
mov
dec
sub
add
mov
retf
add
inc
lods
iret
mov
cmp
mov
ins
add
test
add
add
mov
or
add
mov
and
cvttps2pi
inc
add
sub
or
and
xor
inc
and
adc
pop
addr16
add
ins
add
add
test
sub
sbb
je
es
or
and
add
add
mov
mov
sbb
add
push
leave
add
or
add
inc
dec
shl
test
add
adc
test
add
add
dec
jnp
test
add
add
add
push
aaa
or
xor
or
add
leave
or
dec
loop
mov
and
add
call
pushf
mov
mov
in
in
mov
add
sub
mov
add
adc
xlat
mov
or
pop
push
add
inc
and
iret
jmp
pop
mov
sbb
sub
add
sbb
add
mov
or
cmp
sub
imul
add
adc
test
mov
add
mov
mov
add
mov
or
add
leave
dec
movs
js
scas
add
clc
iret
jnp
xchg
lods
test
mov
add
outs
mov
lea
rcr
loop
mov
xor
aaa
daa
push
ins
test
mov
add
add
add
int
or
movs
sbb
adc
add
mov
mov
mov
iret
pmulhuw
add
adc
add
and
dec
gs
jmp
cmp
adc
xchg
mov
into
add
test
jmp
add
jno
xchg
add
(bad)
fcom
add
enter
add
and
test
into
add
retf
or
add
lea
add
add
xchg
cwde
or
pushf
add
add
add
(bad)
aam
inc
imul
adc
inc
sbb
into
or
adc
sgdtd
fs
cmp
setne
int
sub
add
inc
mov
sub
cs
sub
sbb
pop
cmps
sub
cmp
inc
push
enter
add
add
adc
add
jmp
or
mov
(bad)
stc
popa
pop
imul
test
or
add
data16
mov
dec
adc
fs
movs
inc
dec
mov
jmp
mov
outs
mov
add
xor
add
add
jmp
out
dec
and
add
add
pop
pop
xor
push
xchg
jecxz
mov
add
mov
pushf
loop
and
add
mov
inc
clc
inc
lods
add
add
add
mov
ror
cld
jmp
and
add
add
inc
sbb
imul
lods
add
lea
add
into
add
adc
mov
je
mov
dec
add
dec
(bad)
cmp
add
test
stos
frstor
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
andnps
add
pusha
and
push
dec
and
mov
mov
mov
adc
cmp
sbb
push
lds
je
adc
and
call
shr
inc
inc
and
iret
dec
and
scas
push
cli
adc
dec
mov
cmp
out
lock
dec
mov
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jp
and
add
and
mov
lods
add
call
call
call
pop
adc
mov
repnz
add
add
ror
adc
and
mov
sysret
popf
mov
mov
and
sub
mov
jg
jmp
inc
test
sub
mov
xchg
(bad)
push
add
add
add
add
mov
sub
and
(bad)
or
add
jmp
pop
pop
mov
jecxz
fld
add
jmp
dec
in
pop
or
dec
loopne
mov
lods
add
add
jne
clc
add
jno
and
add
jg
add
mov
sub
mov
jg
jmp
mov
adc
cmc
arpl
mov
(bad)
mov
add
and
sub
jg
and
ret
lea
les
mov
pop
in
push
lds
jmp
add
mov
cmp
add
inc
and
mov
push
(bad)
in
mov
punpckhbw
add
mov
int
retf
pop
xchg
push
add
test
movs
out
sub
jmp
mov
sub
add
and
lods
es
mov
add
mov
or
and
lds
mov
add
mov
sub
mov
fadd
test
cmp
push
jmp
add
sub
sub
mov
lods
stc
test
hlt
add
mov
sub
push
mov
and
imul
lds
cmp
ins
clc
add
aam
sbb
xor
and
mov
in
add
repz
add
mov
iret
enter
mov
adc
iret
in
shr
add
cmp
inc
push
nop
jmp
xchg
imul
in
jmp
jg
or
push
jge
add
inc
rol
and
push
fild
inc
add
lds
inc
mov
popa
jnp
add
(bad)
mov
mov
retf
add
mov
(bad)
dec
and
add
out
and
cmp
mov
mov
push
inc
add
mov
add
sub
mov
sub
call
outs
add
retf
shr
mov
setns
data16
add
aam
and
mov
cmp
add
xchg
mov
add
mov
or
sbb
add
or
les
and
dec
test
call
mov
mov
or
mov
and
mov
jno
jnp
xor
sub
mov
jge
add
out
(bad)
mov
mov
and
repnz
mov
call
mov
dec
xor
les
addr16
out
mov
dec
mov
jge
push
mov
jge
add
xor
add
jmp
xchg
cld
and
push
das
mov
jge
add
or
mov
and
dec
and
mov
mov
jge
add
or
mov
and
mov
and
jno
and
call
mov
mov
mov
jl
add
adc
add
and
sub
dec
(bad)
mov
jge
add
sti
pop
jl
add
call
and
mov
mov
mov
push
add
or
mov
pusha
mov
mov
mov
xor
pop
mov
inc
popf
mov
fs
add
jmp
and
dec
pushf
add
mov
call
mov
xor
or
mov
call
gs
and
mov
dec
cmp
push
add
or
mov
popa
(bad)
dec
popf
add
int3
cdq
or
pop
mov
leave
mov
mov
gs
and
add
ds
adc
int
jns
and
or
push
add
add
and
dec
(bad)
pop
jo
ret
dec
inc
and
mov
jl
add
lods
and
mov
add
xchg
dec
jge
add
sar
add
adc
gs
add
inc
and
call
adc
push
add
or
dec
push
sbb
(bad)
cmc
and
mov
cdq
or
mov
jge
add
inc
xchg
push
add
push
and
inc
adc
mov
and
mov
mov
jge
add
in
mov
stos
retf
mov
dec
dec
sbb
or
cmp
jge
add
xor
add
push
cdq
pusha
sub
mov
call
push
in
push
add
or
mov
imul
add
(bad)
dec
dec
inc
and
mov
jl
add
lods
and
xor
mov
mov
call
mov
mov
fs
pop
jl
add
mul
gs
pushf
mov
loopne
sahf
lods
mov
jge
add
test
mov
dec
push
and
mov
test
mov
or
mov
jge
add
jnp
xor
pusha
jl
add
jmp
xchg
ds
inc
and
push
addr16
jge
add
and
dec
push
push
das
mov
mov
and
call
mov
mov
mov
mov
adc
(bad)
cmc
and
add
dec
and
jge
add
sti
ins
jl
add
stos
movs
call
xchg
sub
xchg
ret
(bad)
mov
jge
add
inc
and
add
add
aas
sbb
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
in
xchg
lock
mov
mov
and
outs
cmp
add
add
add
add
jle
add
mov
and
pop
ja
test
inc
adc
sub
add
test
inc
mov
push
(bad)
ins
ret
sub
rol
dec
sub
jp
add
ja
test
cwde
add
mov
sub
stc
xor
jmp
mov
sbb
loop
call
clc
and
add
jmp
hlt
test
pop
sbb
sub
and
mov
mov
test
test
inc
or
clc
pop
pop
mov
pop
xchg
add
add
add
mov
xchg
dec
jp
mov
add
(bad)
mov
xchg
test
dec
add
and
add
add
mov
jne
and
outs
cdq
add
add
jbe
test
pop
jbe
add
mov
pusha
mov
xor
push
int
movs
add
je
inc
push
(bad)
and
cdq
call
add
add
hlt
lods
and
add
sbb
in
inc
cmp
pop
pop
dec
jp
mov
mov
xchg
jns
add
pinsrw
add
add
add
add
popf
mov
add
test
or
popf
cwde
sbb
mov
mov
mov
out
out
int3
scas
add
pop
psubb
add
add
jg
mov
cmc
add
sub
add
je
loopne
cmp
jp
mov
pop
xor
test
add
(bad)
repnz
add
add
sub
mov
push
pavgb
add
add
sar
push
add
xor
ficom
add
(bad)
test
pusha
add
add
add
jne
dec
add
inc
ins
add
add
add
and
add
pusha
jg
jmp
mov
add
mov
xchg
mov
(bad)
aad
add
outs
cdq
add
std
test
add
pop
sub
imul
add
ds
add
add
xor
and
inc
xor
test
add
mov
lds
jp
add
add
push
add
add
adc
mov
test
outs
xor
add
add
mov
test
add
test
std
test
ret
cmp
lock
xchg
ficom
add
sbb
mov
mov
test
and
add
inc
add
test
add
pmaddwd
outs
cdq
call
add
ja
xchg
dec
pop
js
test
add
test
scas
(bad)
add
inc
sub
mov
psraw
add
add
test
sub
mov
(bad)
add
add
add
and
add
sub
push
add
(bad)
and
add
jmp
mov
and
add
sub
inc
je
jmp
adc
and
add
sub
mov
and
mov
add
mov
ins
add
add
mov
xor
xchg
cmc
cmp
je
jmp
mov
and
pop
ja
sub
ret
lods
mov
xchg
add
icebp
jmp
mov
imul
mov
and
push
outs
cmp
rol
mov
mov
add
mov
inc
(bad)
and
jg
jmp
xor
add
cwde
adc
fdivr
adc
mov
cmps
add
sbb
add
dec
push
pop
xchg
adc
pop
add
add
add
add
sti
cmp
and
dec
jmp
mov
sub
mov
ins
sysexit
rcl
add
mov
mov
das
xor
and
inc
test
pusha
add
xor
test
sub
mov
pusha
mov
jmp
in
and
jmp
mov
sti
xlat
xor
add
mov
add
add
sti
or
and
je
jmp
cmp
addr16
in
call
pop
jns
xchg
add
fadd
add
mov
dec
sub
mov
jmp
jmp
or
sub
out
xchg
or
lds
add
jbe
add
test
cwde
add
cmp
sub
dec
je
pop
jbe
add
movs
add
xchg
dec
fwait
call
add
mov
push
add
add
data16
aaa
and
icebp
mov
add
test
mov
outs
adc
mov
push
cmp
jne
ja
cdq
call
add
sbb
add
mov
and
sysexit
adc
add
cmp
mov
inc
jo
jp
lods
push
cmp
add
push
retf
mov
sbb
mov
mov
pop
ret
and
jne
add
add
jns
mov
mov
test
add
cmps
in
lea
mov
mov
mov
sbb
jle
add
add
mov
adc
adc
outs
add
or
add
add
cdq
add
inc
dec
jnp
add
dec
pop
lds
bound
and
add
cmp
add
and
mov
dec
mov
add
dec
mov
add
ja
in
cs
les
mov
mov
(bad)
je
test
cmp
inc
xor
test
out
rol
dec
mov
mov
pop
sahf
ficomp
and
add
loopne
push
xor
into
add
mov
mov
mov
add
add
mov
add
mov
mov
pop
jb
call
add
add
adc
cmp
inc
add
shl
pop
mov
jne
sbb
inc
or
sbb
(bad)
and
add
popa
xchg
mov
arpl
jae
add
mov
add
add
inc
mov
add
icebp
(bad)
aaa
(bad)
(bad)
(bad)
dec
rol
in
cdq
mov
movs
(bad)
mov
and
cmp
add
mov
add
add
popa
inc
push
popa
mov
ja
add
push
add
pop
iret
pop
and
in
in
jmp
and
push
add
push
add
xchg
sbb
add
add
mov
or
add
add
add
mov
call
sbb
push
push
movs
add
ss
add
or
add
add
inc
retf
and
add
outs
jmp
mov
add
loopne
in
sti
jmp
adc
int3
imul
add
xchg
and
popa
mov
mov
push
add
jnp
mov
mov
sbb
jp
sbb
jle
add
add
mov
outs
add
add
add
je
and
std
aad
imul
out
pop
jmp
stos
popa
in
xchg
mov
add
add
(bad)
or
outs
add
adc
add
mov
add
sub
mov
mov
je
sub
add
cmp
add
jecxz
sub
rol
add
mov
test
add
jbe
inc
jp
jno
pushf
std
push
mov
lods
cmp
enter
push
add
mov
imul
cmove
or
bound
scas
pop
outs
add
mov
add
in
add
pop
in
les
add
pop
ja
sbb
jg
mov
xor
add
xor
inc
add
push
mov
cmp
add
xor
add
rol
shl
xor
out
int3
jb
adc
(bad)
frstor
mov
mov
add
jg
mov
and
lock
cmp
call
xchg
rol
dec
mov
mov
add
pop
jmp
mov
jmp
mov
or
arpl
rol
add
add
inc
add
les
outs
cmp
jp
iret
xor
add
pop
ja
jnp
or
fwait
cld
lds
popa
add
test
xchg
mov
add
add
mov
cmc
mov
rol
dec
jp
paddusb
inc
ja
xchg
add
push
add
add
cmp
inc
add
sar
push
add
test
mov
mov
ja
retf
mov
ins
sub
pop
inc
lea
xor
push
add
sbb
cdq
mov
mov
inc
adc
add
(bad)
(bad)
mov
add
jbe
stc
xor
add
popa
push
in
pop
repz
xchg
jbe
add
xchg
rol
add
add
test
test
shl
cli
add
xor
test
add
add
fdiv
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
mov
imul
add
cmp
cmovne
mov
jmp
lea
mov
imul
add
mov
sub
mov
mov
mov
mov
mov
call
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
jmp
lea
pop
pop
ret
mov
call
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
inc
or
dec
add
jecxz
adc
add
add
dec
mov
clc
add
loope
adc
clc
pop
sub
test
add
add
jb
in
add
add
add
jp
test
add
add
(bad)
xchg
pop
push
add
mov
mov
je
fwait
jno
loope
mov
loope
push
lock
clc
add
add
pop
push
add
or
cmp
mov
add
xchg
pop
push
add
add
(bad)
mov
loope
add
add
pop
mov
add
and
repz
or
inc
call
add
cwde
test
pop
add
movs
add
mov
stos
add
xor
test
int3
nop
lods
add
inc
sbb
or
lods
mov
call
push
(bad)
fadd
add
jmp
mov
sub
push
add
movs
test
add
jmp
mov
ja
lods
add
xchg
imul
or
lods
js
out
add
add
add
add
jnp
add
add
mov
and
add
loope
dec
inc
xchg
stos
clc
mov
add
add
mov
add
cmp
mov
int3
jg
jmp
xor
and
cmps
add
sub
mov
cwde
(bad)
movs
add
add
mov
ja
add
push
and
pop
add
add
loope
enter
ins
pop
mov
jg
jmp
daa
jb
enter
sub
test
add
add
dec
xchg
mov
pop
push
les
in
pop
stos
add
jno
or
push
mov
add
and
add
add
jp
add
test
add
retf
sbb
mov
cvtpi2ps
cmps
loope
jle
clc
pop
sub
add
sub
jg
and
jp
add
lea
int3
jl
and
fcmovne
add
mov
cwde
push
test
add
sub
add
mov
nop
lods
jge
and
jp
add
inc
mov
push
pop
add
jl
ror
inc
push
add
lds
add
xchg
sub
mov
lods
add
(bad)
lar
cmp
add
or
int3
jl
sbb
jae
test
cwde
(bad)
jl
pop
sub
mov
mov
lods
idiv
sub
inc
adc
dec
cmps
loope
add
add
xchg
jbe
fimul
add
and
fs
mov
add
test
add
add
hlt
sub
adc
dec
add
cmps
add
add
mov
jno
js
(bad)
inc
nop
add
jmp
mov
and
add
lods
sub
inc
inc
and
psllq
mov
add
pop
add
add
movs
cmps
sub
mov
cwde
and
pop
mov
jb
enter
sub
mov
and
jg
xchg
mov
add
aam
fwait
enter
mov
mov
test
lods
pop
cmp
add
test
add
in
cmc
retf
mov
jle
movs
add
loope
add
pop
add
mov
and
lahf
sub
out
add
push
enter
loope
jo
rol
fistp
push
jp
add
mov
and
add
xchg
xchg
shl
cmp
je
jmp
mov
sub
mov
aad
add
jmp
test
mov
mov
je
jmp
mov
sub
dec
jnp
add
push
push
movs
cmps
loope
test
enter
aad
pop
xor
mov
add
jmp
mov
call
sub
mov
lock
mov
cmps
loope
mov
aad
addr16
sub
hlt
and
lahf
sub
hlt
add
sar
sub
add
jg
xchg
cmp
test
add
loope
push
add
add
jmp
sub
enter
xchg
add
mov
sub
mov
lds
adc
sti
add
mov
add
test
push
(bad)
or
mov
je
jmp
test
push
loop
in
test
ss
add
and
add
add
sub
mov
loopne
add
add
jl
jb
int
shr
lds
dec
icebp
add
xchg
inc
add
add
add
nop
adc
or
mov
mov
dec
jp
add
add
mov
or
and
add
mov
and
sub
cmp
xchg
mov
push
shl
cmp
mov
sub
dec
call
jecxz
call
add
inc
sbb
jmp
sbb
icebp
mov
or
lods
add
ror
add
mov
inc
add
and
enter
xchg
stos
add
aad
sub
or
add
add
add
dec
ins
push
add
and
jp
add
lea
ja
int3
pop
inc
xor
add
push
and
mov
add
clc
mov
sub
mov
repnz
jb
jp
sar
es
cld
add
add
dec
mov
push
cmps
loope
mov
mov
cmovl
add
ror
add
add
push
add
mov
mov
addr16
inc
leave
push
bound
push
sbb
lds
cmp
mov
sbb
int3
cmps
add
and
clc
pop
mov
test
nop
add
inc
adc
jp
mov
jbe
out
lds
(bad)
dec
add
xor
daa
icebp
loope
add
inc
fwait
ss
adc
cvtpi2ps
and
and
and
jnp
or
add
aam
add
or
ja
sbb
sbb
add
test
and
ror
add
add
add
add
add
je
mov
bound
add
cmps
loope
retf
clc
mov
and
add
inc
add
or
add
(bad)
sar
in
or
lods
add
jl
add
mov
add
mov
adc
scas
and
add
add
add
xchg
jb
fdivr
add
inc
retf
and
ja
add
int
mov
add
test
movs
add
enter
loop
test
add
int3
cmp
add
xchg
mov
jmp
je
(bad)
(bad)
dec
add
xor
xor
mov
xor
xor
and
stos
or
dec
mov
mov
ja
mov
cmc
or
call
adc
mov
es
and
xchg
stos
clc
xchg
mov
mov
mov
shl
add
add
pop
add
mov
add
ja
lock
add
mov
xchg
fcomi
mov
and
out
add
inc
and
add
add
mov
hlt
sbb
(bad)
mov
mov
ror
jp
add
jl
retf
fcomi
mov
and
add
enter
xchg
add
add
mov
add
jmp
lea
add
add
push
xchg
out
mov
test
cld
add
and
int
xchg
add
lock
paddb
mov
cmp
jp
and
jge
into
add
int3
icebp
jmp
pop
mov
dec
mov
stos
add
mov
paddb
out
test
add
add
add
mov
add
test
pop
(bad)
mov
xchg
add
and
pop
sub
ja
and
add
lods
inc
hlt
and
xchg
or
add
inc
mov
add
hlt
mov
lds
mov
(bad)
out
and
add
clc
add
clc
pop
(bad)
push
and
add
add
add
lods
ja
inc
pop
lock
pop
add
mov
add
stos
mov
mov
movs
imul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
and
mov
mov
and
mov
mov
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
test
mov
mov
mov
mov
jne
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
mov
mov
mov
shl
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
cmp
seta
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
jmp
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
add
sub
sub
mov
mov
mov
mov
mov
sub
add
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
add
mov
mov
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
add
add
sub
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
sub
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
mov
shl
mov
movzx
mov
sub
sub
add
mov
mov
mov
sar
add
add
sub
imul
shl
add
mov
mov
mov
cmp
setge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
shl
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
sub
sub
add
add
sub
mov
mov
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
cmp
jl
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
sub
sub
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
sub
add
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
cmp
sete
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
sub
add
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
setae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
mov
mov
jmp
mov
mov
add
add
sub
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
sub
add
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
jge
mov
mov
mov
sub
sub
mov
mov
mov
add
mov
cmp
mov
jge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
mov
mov
jmp
mov
mov
mov
sub
sub
mov
cmp
jne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
sub
sub
mov
cmp
setge
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sar
sub
add
mov
mov
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
xor
mov
and
mov
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
mov
sub
sub
add
shl
add
add
mov
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
cmp
jb
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
mov
add
add
sub
sub
sub
mov
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shl
mov
mov
mov
sub
add
add
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
cmp
seta
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
mov
cmp
seta
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
test
jne
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
mov
sub
add
mov
mov
mov
sub
add
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
mov
jmp
jmp
jmp
mov
mov
mov
mov
add
add
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
mov
movzx
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
add
add
sub
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
shl
mov
movzx
mov
mov
mov
add
sub
sub
mov
sar
sub
add
add
imul
shl
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
jmp
jmp
mov
mov
mov
sub
add
mov
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
jmp
jmp
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
mov
shl
mov
jmp
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
sub
sub
add
mov
jmp
mov
mov
mov
sub
add
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
jmp
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
add
mov
sub
add
mov
mov
sub
add
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
add
rol
(bad)
test
add
mov
(bad)
sub
sub
push
add
fmulp
add
test
sub
enter
add
fdivr
mov
fsub
xchg
in
pop
add
push
adc
add
mov
cli
adc
pop
add
and
mov
add
add
call
mov
mov
(bad)
mov
pusha
add
inc
and
adc
add
call
popf
in
xlat
clc
mov
enter
and
add
add
adc
add
or
add
cmp
mov
popa
push
and
add
add
xchg
and
push
add
push
loope
mov
and
add
add
sub
cmp
xor
call
pop
push
test
mov
sub
mov
xor
inc
fld
add
test
cmp
adc
test
add
add
ja
dec
dec
aaa
and
and
retf
sets
add
add
add
and
add
xchg
test
add
add
test
mov
test
add
push
repz
(bad)
je
add
mov
mov
fistp
add
test
add
pusha
lds
mov
mov
ds
push
add
adc
add
mov
mov
add
jle
mov
pusha
add
repnz
shr
adc
pop
mov
test
sub
cmps
add
enter
sbb
add
adc
add
pusha
call
xchg
mov
cld
xor
mov
pushf
dec
xor
add
xchg
xor
add
andnps
fst
add
js
sahf
js
fmulp
sub
mov
jns
xchg
in
mov
add
clts
gs
add
add
add
test
rcl
rcl
out
jmp
mov
dec
mov
(bad)
sub
mov
test
mov
rol
add
sub
popf
xor
pushf
fld
cmp
jne
adc
jmp
mov
push
jne
(bad)
and
fmul
add
inc
scas
adc
mov
add
sbb
mov
pop
mov
mov
jg
sub
add
js
and
add
mov
ins
push
test
xchg
adc
dec
adc
add
add
sub
shr
and
mov
rcl
enter
pop
add
mov
mov
mov
mov
fimul
adc
pop
xor
test
rol
add
sub
popf
xor
pop
add
add
(bad)
popf
sub
cli
jmp
mov
sub
mov
pop
retf
jle
pop
add
mov
mov
sub
mov
add
jl
adc
add
push
test
add
add
rdtsc
mov
cmp
ror
aad
add
pusha
arpl
rol
adc
ja
shl
pop
jp
sahf
fcom
add
inc
mov
add
add
inc
test
pusha
add
nop
pop
mov
fidiv
add
packuswb
add
add
add
xchg
mov
push
cwde
and
enter
add
rol
cmp
sub
mov
push
fiadd
add
jmp
mov
sub
push
test
retf
jle
jmp
mov
sub
mov
and
add
add
test
adc
push
add
cdq
sahf
mov
cmova
mov
add
add
cwde
sar
add
add
xchg
and
pop
push
mov
adc
add
enter
fucomip
mov
add
cmp
xor
pusha
call
pop
add
add
sub
fistp
push
adc
jge
add
jmp
mov
sub
popa
push
in
add
pop
addr16
sar
fmulp
add
add
sub
push
mov
mov
add
jmp
mov
sub
mov
xlat
inc
add
add
fsubrp
add
add
mov
adc
sub
xchg
bound
call
add
clc
lea
add
ja
push
add
sub
inc
test
hlt
add
add
(bad)
and
add
add
add
sar
add
xchg
mov
mov
add
rcr
call
push
(bad)
repz
test
dec
and
add
add
(bad)
xor
enter
add
add
pusha
add
enter
mov
je
jmp
and
in
inc
hlt
mov
mov
mov
(bad)
and
add
jmp
aaa
test
clc
pusha
call
lods
mov
je
jmp
js
sahf
js
fiadd
sub
sahf
test
xor
and
add
mov
add
sar
scas
loope
and
add
rol
add
popf
push
add
pushf
test
rol
adc
movs
cmp
mov
out
add
jg
clc
add
add
ja
shr
sub
js
test
add
adc
cmp
fwait
outs
add
mov
add
shr
test
add
jg
jmp
mov
sub
mov
rol
int
add
mov
push
mov
ins
mov
adc
and
adc
pusha
add
cmp
mov
shl
call
mov
fimul
repz
add
mov
test
add
add
xchg
mov
add
add
mov
test
rol
rol
cmp
int
inc
xor
setae
add
add
mov
xchg
jmp
test
cld
add
add
(bad)
and
add
add
add
add
enter
mov
les
mov
verw
jmp
mov
add
sub
fistp
hlt
add
add
(bad)
and
add
std
add
sbb
add
add
mov
rol
pmaxub
xor
test
stos
dec
ror
mov
enter
fistp
adc
pusha
add
arpl
rol
add
cmp
xchg
aad
jp
mov
push
fiadd
cmovl
adc
add
xor
add
test
sub
mov
pmullw
repz
add
and
retf
sub
dec
ror
mov
sysenter
add
mov
jmp
push
test
add
mov
ror
rcl
(bad)
jns
add
jmp
and
cli
rol
add
in
adc
fisttp
add
je
push
jnp
call
rcl
pop
push
shl
test
push
fmulp
jle
and
mov
mov
in
mov
adc
ror
jle
imul
push
test
mov
mov
sub
mov
rdpmc
and
add
jmp
pop
test
rcl
add
pushf
lods
aaa
jnp
(bad)
cli
enter
setae
adc
add
mov
mov
add
pop
mov
cwde
fimul
test
paddusw
add
enter
add
lahf
test
pop
int
mov
add
pop
test
mov
add
mov
adc
imul
push
mov
mov
fld
pusha
add
add
call
mov
add
inc
les
and
(bad)
add
xchg
pop
adc
add
and
add
mov
add
mov
push
out
add
add
push
fmulp
mov
mov
in
movs
fist
and
add
add
test
xchg
sbb
js
and
stos
push
fsubp
cmp
dec
and
mov
add
push
cld
cmp
cli
mov
rol
rcr
test
mov
test
pusha
add
xchg
adc
mov
add
add
sub
mov
and
add
push
add
fimul
enter
and
push
test
mov
jge
rol
fst
push
add
mov
dec
push
dec
and
jg
pop
add
add
mov
sub
mov
outs
addr16
add
jmp
jecxz
and
stos
push
add
mov
mov
(bad)
mov
cli
add
add
call
int3
sbb
add
cmps
fstp
add
call
cmp
mov
in
dec
xchg
jle
imul
pop
fmulp
jmp
mov
in
sub
cmp
test
add
cmp
jne
or
add
dec
xchg
jle
add
push
xor
(bad)
cli
dec
add
add
inc
int
add
pop
mov
fistp
test
sub
dec
xchg
jle
add
repz
inc
add
push
fiadd
and
sub
cmp
mov
pop
pop
add
cmp
add
add
test
add
add
int3
ret
fild
jg
jmp
mov
cld
cmps
outs
mov
loope
sahf
je
add
add
and
mov
mov
xlat
cmp
jnp
jmp
pop
push
mov
add
inc
test
add
add
mov
nop
and
mov
cmp
(bad)
ja
mov
cli
add
rol
in
xchg
cld
adc
jp
and
add
push
add
and
add
add
add
sub
popf
test
add
fidivr
adc
pusha
add
arpl
rol
add
cmp
imul
sqrtps
add
adc
mov
or
pusha
sub
dec
xchg
and
pop
push
idiv
push
add
pop
enter
sahf
movs
mov
jg
adc
add
add
adc
ja
mov
and
add
add
fst
add
add
pop
mov
mov
add
lods
cdq
call
push
add
call
add
repz
and
add
add
inc
nop
xchg
(bad)
mov
add
cmp
adc
add
add
sub
fistp
dec
leave
add
push
(bad)
dec
int3
add
std
mov
add
mov
sub
mov
fimul
pop
push
push
fimul
add
in
jno
or
fild
btr
cli
add
pusha
add
ror
jle
add
add
mov
and
add
(bad)
mov
add
sbb
mov
(bad)
fstp
ja
cmp
imul
pop
and
mov
mov
sub
dec
xchg
jle
repnz
mov
xchg
push
add
enter
mov
sub
mov
mov
repz
pusha
add
add
adc
in
and
add
mov
std
push
test
sub
fwait
mov
mov
jmp
mov
lds
test
pop
add
addr16
add
add
mov
test
add
pop
sub
mov
jg
jmp
arpl
adc
add
sub
mov
mov
push
fiadd
(bad)
mov
add
add
mov
mov
and
add
cli
sub
mov
imul
mov
add
enter
les
loope
repnz
ror
dec
mov
add
mov
push
and
stos
push
fsubp
gs
clc
mov
add
add
jmp
mov
rol
adc
les
or
mov
mov
push
fmulp
jle
and
add
mov
mov
mov
and
add
add
(bad)
lea
add
add
mov
push
add
enter
mov
popf
test
(bad)
fwait
cli
add
add
add
arpl
sub
mov
sqrtps
enter
push
test
ins
add
cli
sub
mov
push
test
or
add
add
test
repz
sbb
out
xchg
and
adc
mov
mov
jmp
pop
inc
and
pop
push
xchg
mov
clc
add
cvtps2pd
or
pop
and
add
xchg
rol
add
adc
test
hlt
add
ror
inc
popa
sbb
add
and
in
retf
mov
inc
test
add
or
add
mov
add
mov
sub
dec
xchg
and
push
retf
rol
add
xchg
int
add
add
cmp
stc
in
mov
mov
add
sub
push
push
add
enter
repnz
mov
cmp
test
add
cmp
and
ret
sub
loope
and
add
or
add
cmp
test
sub
mov
cmc
in
in
add
pop
add
and
ret
sub
fild
setae
mov
jmp
mov
and
add
cld
les
sahf
aam
add
pop
push
or
enter
mov
mov
sub
mov
push
test
ins
add
add
and
adc
cmp
and
add
cmp
cmp
in
add
pop
inc
and
add
pop
inc
inc
jno
push
mov
and
add
add
test
add
dec
test
mov
add
jmp
add
pop
add
or
add
add
add
sub
mov
mov
add
test
fadd
add
dec
add
cli
mov
in
mov
xlat
mov
sub
fcmove
add
cmp
enter
pusha
add
fsubr
test
js
pop
add
daa
or
add
fstp
ror
add
cmp
jno
add
mov
mov
inc
add
pop
test
add
add
mov
je
jmp
lahf
test
jae
sub
mov
add
in
(bad)
rcl
mov
add
xor
add
enter
pushf
add
test
je
adc
inc
and
add
add
mov
dec
movs
add
mov
add
add
add
mov
fisub
test
dec
pop
push
add
enter
xchg
add
xor
mov
(bad)
ror
add
jmp
pop
inc
and
add
inc
shl
inc
sbb
enter
scas
or
jmp
mov
cmp
rol
sub
mov
xlat
xchg
mov
mov
add
add
pushf
test
add
add
popf
xor
nop
add
mov
cli
jmp
dec
xchg
and
pop
add
sub
mov
cmps
(bad)
or
add
jmp
pushf
test
les
add
and
and
add
add
jmp
mov
xlat
rol
mov
idiv
mov
pop
enter
les
mov
and
jmp
and
push
pop
mov
add
ins
add
sbb
add
in
add
mov
xor
add
jmp
mov
rol
pop
inc
outs
ins
push
sub
inc
cli
js
dec
mov
pop
add
inc
add
test
and
and
jmp
test
aam
adc
inc
push
repz
and
add
add
mov
cli
mov
enter
add
fisttp
add
sub
mov
push
in
sub
pop
test
xor
add
adc
push
fwait
sbb
cmc
test
or
shr
or
add
mov
dec
and
add
inc
fistp
std
pop
enter
add
add
pop
sbb
mov
add
dec
cwde
inc
and
addr16
mov
test
and
add
add
mov
and
cvtdq2ps
or
add
jp
mov
rol
pusha
call
add
inc
xlat
pop
je
jmp
mov
movs
icebp
shr
pusha
xor
ins
into
leave
adc
mov
add
add
push
fsubp
enter
inc
inc
and
je
sub
cmp
mov
cmp
rol
cmp
mov
mov
pop
or
jmp
mov
sub
mov
and
movd
in
add
sub
pop
add
test
sub
sahf
mov
je
pusha
fadd
fild
mov
dec
mov
sbb
cld
test
mov
push
aaa
jne
add
pushf
dec
and
add
adc
movs
loopne
imul
mov
add
jmp
pop
test
rcr
fiadd
mov
cli
lock
test
pop
add
jmp
mov
rol
add
sub
mov
mov
jmp
add
mov
sub
loope
sahf
cwde
pop
pop
or
enter
add
pop
inc
test
shl
add
sub
test
add
jmp
mov
pop
add
adc
jmp
fistp
fild
add
jmp
pushf
test
les
add
inc
mov
movd
fs
push
mov
sub
xor
cmp
mov
add
cmovne
mov
loopne
add
jmp
scas
ja
dec
add
add
mov
sbb
cmp
add
adc
inc
add
add
jmp
and
add
rcr
add
add
add
mov
mov
cmp
cmove
mov
loopne
add
jmp
(bad)
ins
and
add
add
mov
retf
(bad)
fisub
add
add
mov
in
sub
add
mov
in
cld
sbb
and
mov
cmp
jl
mov
repz
add
add
add
or
addr16
add
rol
push
inc
add
or
jmp
add
dec
popf
jle
push
repz
cmps
mov
sbb
mov
mov
mov
add
add
xchg
jns
add
push
fiadd
add
cmp
add
add
add
add
jle
add
add
neg
mov
and
mov
jmp
lea
push
addr16
add
add
jle
popf
cmp
popa
add
add
call
push
inc
add
mov
adc
test
fst
in
add
pushf
fld
inc
add
xchg
and
mov
mov
add
add
add
and
add
add
and
mov
jp
mov
dec
and
ss
or
add
add
add
xchg
add
test
push
js
mov
repnz
iret
pop
retf
jle
push
mov
add
jge
int
mov
inc
or
xor
ja
bound
add
adc
test
imul
add
fisttp
mov
and
test
(bad)
mov
mov
lea
jo
xor
add
clc
mov
pop
add
mov
ins
jmp
(bad)
int
jle
add
add
in
adc
push
push
cmp
jmp
push
add
sahf
in
rcl
pop
mov
mov
loopne
test
mov
mov
fsub
or
cmp
add
lea
jae
and
dec
and
cmp
cdq
pop
cmp
xchg
add
add
inc
mov
add
pop
jmp
or
inc
(bad)
stc
xor
add
cmp
or
adc
mov
test
mov
or
(bad)
pop
and
add
pop
add
pop
add
lods
fisubr
and
test
loopne
add
jmp
lea
(bad)
mul
push
inc
add
int3
add
sbb
jmp
ret
loop
cmp
setl
loop
mov
mov
pusha
jb
cmp
add
movs
and
jbe
sbb
pop
push
ud0
test
add
add
inc
pop
add
rol
fidivr
pop
add
mov
mov
jmp
lea
in
xor
inc
add
and
call
add
enter
mov
and
inc
xchg
xor
mov
add
push
sbb
add
cli
fdivr
pop
jnp
push
in
rcr
dec
xchg
xor
pop
nop
add
fwait
ror
pop
and
pop
adc
(bad)
or
cmp
add
or
sti
xlat
add
dec
adc
jle
add
gs
add
jp
mov
sub
(bad)
mov
jb
dec
dec
(bad)
mov
cmp
add
dec
retf
and
add
add
add
or
pop
in
loopne
add
and
fs
jae
and
add
jmp
mov
mov
push
mov
seta
add
jmp
(bad)
int
jle
add
add
cwde
add
mov
sti
(bad)
mov
cmp
ficomp
mov
cli
stos
push
fiadd
xor
retf
pop
inc
(bad)
fild
test
dec
add
fstp
xchg
pop
add
imul
pop
ret
pop
pop
mov
jmp
(bad)
xor
imul
mov
cmp
add
xlat
add
in
mov
inc
add
and
inc
inc
push
add
rcr
cmp
ror
mov
add
lds
add
fisub
icebp
mov
ins
mov
lea
mov
mov
inc
pop
xchg
add
(bad)
addr16
(bad)
mov
mov
mov
dec
retf
cmc
loopne
adc
cwde
idiv
sub
add
leave
lods
pusha
ins
pusha
mov
cmp
ja
cmp
add
add
and
call
push
mov
xchg
push
add
enter
mov
outs
add
mov
in
dec
xchg
jle
add
add
mov
mov
jmp
(bad)
or
add
enter
lea
jle
add
gs
inc
add
sahf
lods
mov
mov
mov
cmp
setae
mov
and
clc
pusha
call
add
test
add
add
mov
add
add
add
add
add
push
dec
and
call
mov
mov
sub
jo
jae
int3
loopne
add
jmp
jge
and
add
push
fistp
add
add
xchg
movs
add
fbstp
push
sti
inc
in
xor
rcl
add
scas
test
mov
sub
mov
and
sti
fadd
add
push
mov
or
pop
add
push
dec
push
push
inc
and
mov
loopne
add
aad
add
add
fild
iret
daa
fwait
into
dec
inc
add
add
ror
add
sbb
adc
xor
test
add
add
js
pop
cdq
inc
cmp
addr16
shl
ficom
inc
add
add
mov
jmp
addr16
and
mov
lock
inc
add
add
ret
test
mov
add
or
test
jmp
and
adc
add
add
cmp
(bad)
mov
cmp
add
rol
mov
cmp
jbe
fadd
enter
or
add
mov
cmp
outs
lods
adc
and
pop
push
test
mov
fcmovnu
in
jmp
mov
mov
jmp
mov
mov
mov
add
pusha
add
fiadd
loopne
add
cld
add
add
test
sub
mov
ss
add
sbb
mov
inc
call
push
hlt
daa
and
add
pop
add
jp
and
add
add
outs
test
add
add
cmps
add
add
fist
pop
pop
mov
sbb
adc
add
add
pop
test
add
push
jmp
mov
lods
pushf
pop
(bad)
ror
mov
mov
ror
inc
ror
icebp
pop
push
add
js
sahf
sub
add
fld
push
sub
add
add
add
cmp
add
call
jns
ins
das
push
in
add
mov
sti
mov
mov
out
retf
mov
mov
jmp
xor
add
arpl
rol
adc
add
test
and
inc
fld
enter
test
mov
fistp
mov
bound
add
add
ret
mov
and
jmp
inc
nop
xchg
movs
add
add
clc
cld
inc
test
loopne
add
cmp
adc
mov
adc
test
loopne
test
mov
fwait
addr16
mov
inc
test
push
mov
ss
cmp
push
mov
xor
rol
jmp
loopne
add
add
test
add
add
jae
jne
xlat
mov
cmp
test
add
lea
(bad)
pop
pop
pop
ret
mov
push
loopne
add
test
add
enter
or
adc
mov
push
add
loopne
inc
add
and
adc
sti
jmp
pop
push
mov
mov
or
fiadd
lea
inc
or
mov
add
cmp
sti
call
test
ja
loope
lods
and
jmp
mov
ficom
out
push
js
add
add
lea
inc
add
sahf
test
add
add
inc
xor
loopne
add
and
xchg
jae
int3
(bad)
rcl
(bad)
in
and
mov
push
in
mov
mov
bnd
cmp
rol
pop
imul
je
pop
add
loope
and
maskmovq
push
enter
add
add
add
add
adc
jmp
mov
mov
xchg
popa
call
cmp
imul
mov
and
ret
adc
mov
add
test
retf
lds
fsubrp
fiadd
adc
(bad)
or
cli
call
cmc
loopne
adc
fs
sub
dec
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
call
mov
mov
loope
and
add
mov
add
loop
mov
add
lods
add
sbb
add
add
inc
and
push
cmp
mov
add
jle
jno
inc
mov
lahf
fmul
mov
retf
inc
add
sahf
add
test
inc
push
push
dec
pop
es
add
add
into
lds
add
jl
and
add
add
add
fsubrp
mov
and
enter
sbb
sahf
add
inc
and
rol
sub
mov
jno
jg
jmp
xchg
fwait
push
sub
cdq
mov
cmovne
add
add
push
out
jno
mov
je
jmp
mov
xchg
and
xchg
adc
inc
out
leave
adc
lods
sub
mov
push
add
clc
cdq
mov
pcmpgtd
sub
jmp
mov
sub
inc
inc
and
adc
add
add
mov
mov
mov
je
or
and
add
add
and
ds
movups
lods
(bad)
rol
test
jge
push
sub
mov
scas
push
mov
mov
mov
sub
dec
test
addr16
dec
scas
cmp
add
jge
mov
imul
mov
je
and
sub
sbb
clc
cmp
mov
add
lds
loop
mov
sub
aas
inc
in
inc
jg
ja
lods
les
mov
sub
mov
push
cmp
(bad)
sub
lds
test
lahf
and
test
add
mov
pop
lods
cld
sub
xor
data16
add
lds
xor
enter
fistp
cmp
mov
add
aad
add
mov
daa
sub
mov
mov
add
mov
sub
lock
mov
je
jmp
dec
test
jecxz
addr16
jle
jno
test
add
sub
loop
add
mov
fild
movaps
shr
push
scas
add
mov
push
push
aam
push
imul
test
xchg
add
sub
jg
add
inc
in
paddsb
dec
scas
add
sbb
cmp
mov
or
aad
inc
and
rdmsr
sbb
sahf
add
lods
jmp
pop
add
add
mov
mov
and
add
cmp
retf
add
add
fiadd
icebp
cld
call
(bad)
shr
add
add
add
mov
mov
and
add
sbb
fisubr
and
push
add
scas
mov
mov
mov
jmp
mov
xchg
test
lods
(bad)
shr
push
add
mov
add
in
gs
sub
mov
and
mov
sub
sbb
sar
mov
fnstsw
push
add
mul
(bad)
in
mov
mov
jmp
push
jg
retf
dec
mov
adc
jecxz
dec
out
jno
mov
and
add
add
cmps
adc
add
adc
retf
mov
movzx
mov
add
push
add
xor
into
adc
mov
and
cmp
jmp
stc
xchg
retf
mov
mov
and
push
inc
and
pop
frstor
add
cmp
sete
ja
or
pushf
lahf
sgdtd
mov
test
test
lods
add
cmp
test
push
std
shl
jmp
add
pop
jecxz
inc
shl
movs
call
push
mov
add
add
mov
jmp
mov
push
out
add
mov
add
add
sub
sub
test
mov
mov
mov
mov
mov
xor
mov
aas
dec
in
add
mov
call
add
dec
fs
inc
outs
mov
dec
pop
pop
ret
(bad)
mov
add
stc
icebp
dec
push
pop
or
in
inc
lods
sbb
mov
ror
mov
jmp
add
shl
mov
mov
lods
mov
add
mov
in
inc
add
pushf
lods
(bad)
shl
or
push
(bad)
dec
(bad)
cmp
sbb
jge
lock
mov
add
sbb
mov
in
jecxz
dec
shl
scas
(bad)
dec
pop
add
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
sar
nop
inc
and
mov
cld
and
lods
rol
or
and
mov
(bad)
and
add
add
mov
imul
popa
ret
add
popf
jg
jmp
movs
inc
and
or
and
mov
popf
(bad)
or
add
push
imul
mov
sub
bswap
sbb
add
add
pop
xchg
movs
and
xchg
add
add
pop
add
inc
add
mov
sub
(bad)
sbb
add
scas
add
test
inc
clc
dec
je
jmp
xor
dec
ds
or
sbb
addr16
jge
or
add
into
mov
dec
inc
sub
inc
inc
and
shr
mov
add
xor
dec
sub
mov
mov
outs
add
dec
mov
inc
sub
sub
cmovne
jge
push
jmp
xor
inc
sub
call
out
dec
jmp
mov
jmp
mov
dec
dec
mov
fadd
add
mov
inc
and
je
(bad)
jmp
and
sub
or
or
call
add
das
inc
add
mov
pusha
jmp
test
pop
push
add
imul
or
out
into
(bad)
seta
out
add
mov
in
cld
cmp
adc
dec
mov
push
add
cdq
movs
mov
push
add
mov
cld
and
jmp
mov
pusha
stos
lea
jbe
dec
push
retf
mov
shr
mov
outs
or
leave
mov
loope
add
sub
mov
add
mov
push
add
cmp
inc
mov
jmp
mov
mov
inc
jecxz
push
mov
fs
jmp
out
inc
in
lock
jnp
popa
and
mov
or
adc
dec
bound
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
mov
mov
add
leave
fst
and
push
add
add
add
neg
sti
dec
mov
jo
and
and
and
add
mov
inc
mov
push
push
add
nop
test
mov
test
jecxz
stc
and
mov
movs
add
add
rcr
adc
and
jmp
jge
sub
jo
sub
mov
add
push
push
inc
mov
fsubr
pmuludq
outs
add
jmp
mov
inc
loop
add
and
pop
xlat
push
or
add
mov
dec
add
add
mov
xchg
lods
mov
aam
add
rol
adc
add
(bad)
fiadd
add
in
in
call
adc
test
add
add
addr16
stc
push
mov
mov
mov
and
push
pop
retf
add
test
add
add
add
sub
add
add
pop
sub
fisttp
jae
sub
mov
jg
adc
add
jmp
or
or
sub
mov
and
rol
je
imul
and
push
shl
add
inc
mov
jmp
mov
push
xchg
add
mov
stos
or
sub
int3
jge
mov
test
add
add
mov
and
xor
stos
add
mov
add
(bad)
and
fiadd
jmp
mov
sub
mov
pop
(bad)
mov
mov
jmp
mov
cmps
loopne
add
pop
(bad)
test
retf
jno
add
inc
mul
and
outs
out
jmp
pop
xchg
loopne
mov
xchg
and
je
aaa
cmp
loopne
add
cld
jmp
movs
pop
add
pop
(bad)
inc
mov
jmp
jb
(bad)
loopne
add
pop
enter
mov
ja
add
psubsb
push
add
fisttp
add
sub
mov
lea
aaa
add
push
mov
fucom
add
test
and
fld
mov
and
add
cli
add
and
sub
fcmovb
fst
pop
add
add
fld
mov
and
add
stc
stos
scas
sub
shl
add
stc
je
jmp
in
int
add
add
mov
pop
stc
stos
or
push
and
add
call
pop
les
iret
and
push
mov
loop
test
leave
add
mov
add
pop
mov
test
jnp
add
and
add
loope
add
add
loop
cld
test
pop
cmps
or
je
mov
lock
add
add
mov
(bad)
and
add
add
add
sub
adc
add
js
call
jmp
bound
iret
shl
je
or
int
add
fadd
sub
mov
rol
mov
mul
add
push
jle
jp
and
and
je
and
jmp
mov
and
add
add
aam
movs
jo
mov
je
jmp
mov
push
adc
inc
sub
(bad)
and
add
clc
test
ds
push
add
jp
and
test
add
jmp
mov
aam
ins
or
inc
add
jne
add
jmp
mov
push
jnp
mov
mov
jl
jmp
sub
loopne
add
sub
mov
sub
add
jmp
lahf
test
outs
add
sub
pusha
inc
and
shl
xchg
movs
add
jmp
jb
and
add
stos
scas
xchg
mov
dec
jg
test
jnp
mov
sub
mov
je
imul
cli
loopne
push
inc
aam
(bad)
test
sub
data16
add
xor
add
loopne
rol
sub
and
and
jl
outs
add
jmp
mov
sub
and
mov
pop
push
xchg
add
mov
add
and
add
cdq
out
inc
jno
pop
rol
add
test
outs
add
sub
cdq
and
comiss
add
add
stc
stos
add
or
sub
int3
mov
stos
jp
add
hlt
add
jmp
add
add
call
inc
and
in
pop
fldcw
add
scas
pop
and
add
sub
mov
and
or
mov
test
xor
add
xchg
pop
dec
cli
pusha
and
jg
jmp
out
and
adc
add
mov
add
stc
stos
jmp
mov
add
add
push
jle
in
push
mov
jg
jmp
push
test
sub
lods
call
push
add
test
fwait
add
sub
push
mov
(bad)
or
sar
stos
add
mul
and
fidivr
jmp
xor
test
adc
add
jmp
add
mov
inc
xchg
xchg
lea
(bad)
push
or
mov
jmp
adc
add
mov
mov
adc
mov
or
add
cmp
in
xchg
shl
push
jae
int
add
add
inc
add
add
(bad)
dec
add
jmp
dec
(bad)
rol
add
es
cli
mov
add
jg
add
mov
mov
mov
and
loop
stc
inc
test
and
add
fwait
in
ins
cmp
jns
pop
mov
cmp
call
(bad)
add
and
mov
add
add
cmp
setl
xchg
loop
repz
and
call
and
mov
add
dec
add
rol
out
cli
cs
rcl
mov
imul
mov
loopne
add
add
retf
pop
xor
mov
xchg
lods
int
fiadd
add
movs
dec
adc
adc
or
mov
add
popf
enter
inc
add
int
add
add
inc
add
cld
xor
ins
adc
rep
repz
leave
mov
pop
mov
and
add
stc
sbb
xor
call
leave
add
jmp
inc
in
mov
mov
(bad)
xor
rol
add
inc
xor
push
push
call
mov
add
mov
mov
loopne
outs
add
rol
add
xor
inc
xor
test
ss
push
inc
pop
cld
xchg
test
mov
sub
test
pop
add
add
imul
mov
jae
add
fld
add
mov
jl
pushf
mov
sti
and
or
add
add
dec
mov
add
ins
test
(bad)
test
add
stc
mov
jmp
mov
mov
adc
pop
jbe
clc
mov
into
xchg
(bad)
ins
add
lahf
mov
cld
jnp
outs
mov
mov
pop
adc
mov
call
adc
xchg
stos
add
cmp
pop
jno
inc
stc
add
pushf
adc
outs
mov
mov
or
adc
add
add
adc
add
push
test
mov
jge
call
sar
jmp
or
push
pop
mov
push
push
clc
and
ficom
add
cmp
ins
adc
js
ja
loope
mov
add
cmc
call
sbb
sub
sub
push
add
mov
hlt
add
add
inc
(bad)
mov
mov
mov
adc
add
cmp
add
add
push
fmul
and
stc
ins
adc
xchg
pop
cld
add
outs
pop
(bad)
ins
and
add
add
jne
cmp
sub
add
jb
and
stos
add
aad
push
inc
add
add
mov
mov
dec
inc
daa
push
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
jmp
in
int3
js
test
in
add
mov
ins
std
pop
popa
or
sub
mov
mov
cwde
call
mov
mov
jp
popa
push
and
or
test
add
add
mov
jbe
mov
(bad)
cmp
add
jmp
mov
lods
dec
xor
jg
jmp
leave
test
cwde
aam
(bad)
fisub
mov
and
add
cmc
jmp
test
or
not
mov
and
(bad)
sbb
add
test
arpl
enter
dec
or
popf
sub
add
aam
push
add
mov
in
repnz
mov
pop
add
test
and
sub
gs
and
jo
jmp
mov
pop
fcomp
xor
adc
inc
jae
add
jmp
js
and
mov
addr16
mov
mov
add
add
add
pop
sub
mov
push
add
add
add
add
pop
adc
xchg
fisubr
je
jmp
push
inc
and
mov
xchg
test
mov
sbb
stc
add
lds
add
mov
inc
xchg
and
test
fiadd
and
nop
cdq
call
jmp
and
je
jmp
(bad)
mov
xchg
cmp
dec
adc
je
jmp
mov
lods
dec
xor
xchg
cmp
je
ins
imul
test
mov
scas
add
cmc
cmp
mov
fwait
sub
mov
popf
je
jmp
arpl
sub
mov
sbb
out
xor
xor
add
push
jmp
mov
dec
inc
popf
mov
mov
xchg
add
add
cmove
std
inc
and
jmp
mov
mov
std
aas
or
xor
add
add
push
es
call
and
test
xlat
or
mov
sti
call
push
and
or
movs
or
pop
call
mov
cmps
pop
add
adc
gs
and
sbb
mov
add
add
mov
mov
mov
retf
bound
sbb
bound
mov
mov
stos
push
and
push
rcl
jne
daa
mov
mov
fadd
mov
loopne
mov
stos
inc
xlat
in
cmp
xchg
inc
(bad)
mov
ins
scas
add
and
mov
jmp
call
cmps
mov
dec
add
mov
cld
inc
xor
jbe
jle
mov
fadd
inc
add
jmp
inc
inc
pop
jl
test
add
sub
or
mov
xchg
fisubr
cmp
mov
test
mov
add
inc
test
sahf
and
popa
gs
pop
mov
fdivr
jmp
call
xor
nop
and
cmp
xor
add
inc
add
xor
push
cld
mov
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
pop
rol
bound
mov
mov
push
and
inc
and
add
and
push
add
add
je
xor
test
mov
cld
(bad)
cmp
montmul
cmps
add
call
push
dec
add
inc
and
mov
adc
dec
add
arpl
rcr
add
adc
int3
push
add
test
(bad)
int3
jl
sub
cmp
mov
add
push
and
mov
pop
inc
inc
mov
or
std
jmp
mov
inc
push
and
mov
add
add
es
add
mov
and
(bad)
jle
std
call
mov
cmp
add
test
arpl
out
and
pop
jp
add
inc
rol
xor
add
or
inc
loop
je
push
mov
mov
call
(bad)
inc
and
mov
hlt
pop
pop
pop
pop
ret
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
lock
movs
and
std
add
add
cli
(bad)
and
gs
add
add
loopne
add
add
daa
mov
and
inc
and
xor
inc
and
jmp
cmp
pop
add
enter
mov
lea
enter
add
mov
pop
inc
add
and
add
add
sub
add
call
(bad)
jecxz
mov
mov
out
test
js
add
daa
add
movs
test
mov
test
xor
add
dec
add
pushf
and
add
add
test
add
add
mov
inc
ins
push
add
test
(bad)
fsub
les
movs
je
adc
jbe
out
add
test
mov
(bad)
sub
add
ret
add
add
add
gs
add
and
pop
dec
add
sub
test
add
ret
fild
mov
add
out
data16
test
push
daa
(bad)
jmp
mov
add
mov
and
gs
enter
out
add
add
fadd
xchg
cmps
test
ror
push
inc
push
mov
add
test
movs
lea
mov
jmp
popf
add
add
add
mov
jmp
retf
dec
xchg
mov
sbb
pop
mov
fadd
repnz
movs
cvttps2pi
and
std
jmp
mov
and
cwde
add
sub
fisub
addr16
add
(bad)
jg
add
into
(bad)
movs
test
mov
sub
mov
sub
add
je
jmp
mov
sub
test
sub
test
jge
add
add
pop
add
xor
jmp
dec
test
and
inc
add
enter
add
add
add
mov
adc
dec
and
fild
aam
call
mov
out
test
inc
and
add
or
add
cdq
cmp
and
add
add
idiv
fadd
mov
punpcklwd
add
jge
mov
jmp
jg
mov
aam
mov
pop
dec
add
inc
test
add
add
test
add
daa
leave
sub
movs
add
xor
and
add
out
mov
loope
aad
add
jmp
xlat
mov
xor
jne
mov
rol
cmp
or
pop
out
add
sub
stc
ja
or
test
inc
xor
(bad)
loopne
add
jmp
push
mov
ins
jle
repz
in
add
je
fs
inc
and
cmps
add
sub
mov
cmp
inc
add
and
or
jg
daa
sub
mov
cmps
mov
out
add
fmul
test
add
add
scas
or
test
add
add
(bad)
and
mov
jmp
push
stc
js
and
mov
cmps
mov
int3
test
sub
add
in
(bad)
in
push
add
jmp
add
jg
jmp
mov
ret
add
adc
and
inc
enter
mov
outs
push
add
mov
clc
aaa
add
shr
sbb
add
xchg
pop
enter
mov
mov
sub
hlt
test
add
(bad)
stos
test
xlat
or
add
add
sub
retf
push
inc
fadd
inc
enter
add
add
add
and
jg
daa
sub
mov
add
je
xor
test
gs
enter
cmp
add
pslld
add
das
movs
test
add
ret
fist
push
mov
and
out
test
leave
add
dec
idiv
std
xor
cmp
(bad)
add
inc
jg
jmp
cmp
stc
(bad)
jge
sub
mov
repnz
popa
or
call
add
mov
xor
xor
xor
cmp
fs
mov
out
sub
mov
cmovb
sldt
dec
out
add
mov
add
imul
loopne
les
add
(bad)
jmp
mov
inc
lea
pop
mov
add
push
jne
mov
ret
shufps
or
push
add
dec
iret
scas
test
mov
test
cmp
xor
jecxz
push
retf
test
mov
mov
add
add
xchg
cmp
add
sbb
add
xor
mov
(bad)
(bad)
and
mov
jmp
xlat
mov
movs
test
mov
mov
xor
jae
enter
and
stos
lea
stc
xchg
xchg
add
add
dec
and
add
jmp
leave
test
ret
sub
stos
mov
add
test
ret
xor
sbb
cwde
add
dec
out
and
cmp
add
and
movs
add
add
and
add
xor
cli
add
cwde
data16
xor
mov
das
(bad)
movs
and
add
ror
loopne
mov
addr16
jmp
mov
sub
aad
and
add
add
add
dec
or
std
mov
sub
retf
push
inc
int3
leave
add
mov
add
add
pop
push
add
pop
sub
mov
je
jmp
mov
push
add
xor
mov
jge
(bad)
and
add
mov
add
add
mov
add
sub
je
and
add
add
pop
fist
cmp
add
mov
out
sub
mov
cmps
mov
fadd
fild
add
add
std
mov
and
add
je
inc
inc
pop
jge
xlat
test
push
add
add
mov
add
mov
add
add
call
push
add
jl
mov
js
(bad)
movs
add
xor
push
cmp
mov
ret
jne
inc
test
test
add
dec
and
xor
dec
pop
sbb
add
stos
mov
push
test
adc
mov
push
jmp
js
and
pop
outs
add
mov
add
movsx
add
add
add
cmp
push
add
inc
add
test
push
daa
add
rol
movs
test
test
lods
add
xor
cdq
xchg
jle
adc
bswap
jmp
add
jmp
mov
jmp
pop
outs
movs
and
repnz
or
add
fcmovnu
cmp
aaa
add
pushf
add
lock
add
add
rol
movs
test
add
fst
ret
fist
inc
xchg
add
add
(bad)
xor
jmp
mov
sub
and
add
(bad)
push
inc
call
mov
mov
out
sub
mov
je
jmp
jbe
and
add
add
mov
(bad)
and
out
test
pop
lods
test
les
movs
test
ret
push
mov
addr16
test
pop
add
and
or
add
(bad)
mov
and
ret
andps
add
jmp
mov
ret
xor
(bad)
xor
add
leave
test
or
movs
inc
jmp
add
mov
out
push
adc
and
add
jg
mov
enter
retf
add
mov
scas
test
movs
test
repnz
or
cmp
add
inc
enter
retf
sub
pop
sub
jmp
mov
sub
mov
sub
add
push
cdq
push
int
out
and
and
pop
add
jmp
cmp
out
fild
xor
mov
enter
and
and
add
sub
scas
test
test
test
cmp
or
add
hlt
fiadd
add
add
xor
add
add
mov
add
add
test
sub
mov
ret
add
add
mov
jmp
mov
push
shr
rol
movs
test
(bad)
fiadd
add
jmp
mov
sub
out
test
mov
cvtps2pi
add
mov
add
(bad)
das
test
stos
add
or
fild
jg
jae
add
mov
jge
popf
hlt
shl
test
or
add
je
fadd
test
push
add
fld
mov
xchg
(bad)
and
add
jmp
retf
test
retf
test
icebp
inc
aad
loop
add
add
fadd
add
mov
dec
add
inc
cmp
jno
add
test
add
movs
inc
xor
test
push
fld
cmp
cmp
enter
test
lea
sub
movs
test
test
popa
add
ret
sub
adc
and
add
mov
jge
daa
mov
das
sub
lods
xor
add
add
xchg
jnp
test
add
(bad)
xor
jmp
xlat
test
les
movs
sub
mov
jg
xor
test
add
in
loope
cmps
mov
push
test
or
add
xchg
lds
add
xor
add
dec
retf
test
(bad)
and
add
pop
add
add
mov
jno
outs
mov
and
xor
fwait
or
add
stos
add
xor
and
add
inc
sub
leave
dec
and
add
out
jg
jmp
mov
xor
xchg
mov
inc
add
mov
neg
add
(bad)
movs
test
jp
je
and
fstp
add
jmp
test
pop
add
mov
mov
or
ret
add
sbb
add
dec
sbb
xchg
int3
out
test
pop
daa
add
movs
add
add
test
aaa
add
sub
mov
mov
cmovl
mov
out
jmp
push
stc
and
and
out
call
les
ret
add
mov
inc
call
cmp
push
xchg
pop
mov
and
je
xor
call
add
in
mov
js
daa
add
stos
(bad)
and
test
fdivr
add
xor
and
aas
inc
call
xor
test
add
jmp
lods
inc
adc
test
mov
mov
outs
add
inc
add
pop
out
test
and
add
add
mov
js
(bad)
movs
test
test
add
xor
sub
fild
mov
dec
test
push
bound
mov
jg
jmp
lods
test
push
add
popf
mov
inc
add
out
inc
mov
lea
mov
add
mov
xchg
pop
inc
and
mov
add
jge
or
out
bound
mov
mov
mov
add
cmp
addr16
dec
xchg
push
add
add
test
leave
sub
std
xor
(bad)
inc
enter
iret
gs
and
add
add
fdivr
or
daa
jmp
mov
std
xor
mov
pushw
add
add
jmp
out
test
add
add
sub
mov
je
jmp
push
test
push
inc
add
outs
mov
add
add
pop
daa
(bad)
movs
mov
gs
xor
adc
adc
add
xor
jmp
mov
js
les
outs
mov
aam
adc
call
test
or
mov
mov
rcr
jmp
in
test
mov
test
comiss
test
scas
add
xor
add
pop
add
(bad)
xor
xchg
or
and
stos
add
lods
mov
and
xchg
test
add
add
lea
inc
jae
js
inc
and
cmps
mov
cmp
ret
jmp
mov
retfw
enter
sbb
mov
jb
sub
movs
test
add
add
xor
mov
mov
in
xchg
and
inc
add
cmp
cmovne
and
and
add
pop
into
push
or
add
adc
scas
mov
mov
(bad)
dec
call
retf
lds
push
add
bound
dec
test
add
movs
inc
test
inc
and
add
loop
(bad)
enter
add
add
retf
lea
inc
js
call
jg
ja
mov
out
add
dec
mov
call
inc
adc
fs
mov
add
(bad)
movs
add
and
rcr
jmp
and
add
add
jge
mov
mov
mov
add
sub
mov
push
shl
inc
enter
retf
ror
in
or
jl
jecxz
cmp
cmp
mov
mov
and
inc
call
clc
mov
sub
loop
jl
(bad)
mov
mul
xor
inc
sbb
call
scas
add
pop
pusha
pop
add
jmp
mov
das
mov
xchg
adc
mov
lea
mov
adc
(bad)
test
add
add
movs
add
and
or
fstp
pslld
and
add
test
pop
daa
add
and
dec
push
or
pusha
xchg
sti
fisttp
dec
adc
test
mov
pop
pusha
add
xor
mov
add
js
ret
add
and
fiadd
add
add
xor
pop
fwait
xor
xchg
push
add
hlt
fadd
dec
cmps
test
add
cmp
fmulp
mov
and
add
enter
mov
mov
mov
pop
cmp
add
dec
(bad)
or
test
test
mov
ret
(bad)
add
cwde
nop
dec
in
mov
mov
test
add
add
(bad)
cmp
sub
xor
mov
outs
add
xchg
popa
popf
dec
cmc
jmp
add
add
xor
mov
add
mov
mov
add
and
add
mov
or
push
or
inc
daa
mov
js
adc
pusha
xchg
test
xor
jge
leave
pop
jge
or
(bad)
mov
and
stos
xor
aas
add
push
add
inc
add
mov
mov
ins
add
mov
scas
int3
call
daa
in
or
mov
rol
add
setle
mov
addr16
or
sbb
test
add
add
add
lea
mov
mov
movzx
dec
xchg
push
cmp
xor
mov
outs
inc
add
add
les
seto
dec
sub
mov
ins
add
add
jb
push
dec
add
mov
jo
add
shl
add
outs
imul
push
dec
add
add
xor
mov
je
and
push
imul
and
mov
and
stos
add
dec
add
jmp
scas
dec
and
add
movs
mov
jl
stos
mov
push
add
sbb
dec
enter
sub
dec
mov
cdq
add
ret
mov
mov
push
mov
push
add
cmps
out
add
out
test
dec
add
(bad)
das
mov
std
mov
out
push
dec
xchg
mov
leave
test
call
lea
jge
mov
add
add
and
iret
(bad)
(bad)
cld
(bad)
mov
cmp
repnz
ret
and
mov
mov
jmp
xor
mov
mov
add
add
test
aam
cld
retf
push
inc
and
mov
jmp
mov
add
and
pop
daa
(bad)
jmp
lea
ins
xor
ret
mov
mov
mov
call
mov
cmp
adc
push
and
add
add
add
add
mov
mov
mov
leave
mov
js
les
add
xor
ins
push
add
fild
add
mov
inc
out
mov
das
jmp
mov
add
mov
or
cmp
pusha
add
mov
pop
shr
mov
pop
je
mov
pop
add
into
scas
add
pop
outs
add
xor
add
test
cmp
add
fbstp
inc
add
add
pop
xchg
add
and
add
lea
cmp
inc
add
je
in
xor
xor
mov
mov
jmp
jbe
and
add
add
inc
mov
lahf
popf
sbb
and
add
ret
add
push
test
mov
test
mov
fisttp
cwde
jmp
lock
les
movs
and
mov
lea
mov
inc
mov
outs
iret
pop
add
arpl
xor
cdq
and
(bad)
and
enter
add
out
test
les
ret
add
mov
call
fmul
mov
jl
add
xchg
mov
add
xor
add
adc
and
add
and
hlt
jge
add
test
ins
add
inc
or
push
add
add
add
movs
push
in
(bad)
bound
pop
jmp
dec
xchg
ret
dec
jecxz
xor
pop
daa
add
movs
add
cmp
xor
jne
sti
pop
add
sti
add
add
jae
loope
dec
mov
dec
sbb
ins
push
add
add
add
and
add
jne
mov
sti
mov
sbb
add
add
add
and
mov
mov
call
inc
in
add
ds
push
adc
addr16
test
add
add
mov
xor
pop
jmp
mov
mov
inc
and
add
jmp
mov
mov
add
xchg
add
pop
inc
add
jmp
push
mov
inc
push
sahf
movs
sbb
add
xor
add
sahf
cld
mov
jmp
mov
hlt
add
call
(bad)
fsub
add
(bad)
lods
push
fild
xor
add
add
ret
add
ins
push
add
add
add
and
leave
jmp
mov
lock
jns
pop
fwait
ret
mov
sub
add
cmp
jmp
(bad)
cmps
jmp
loope
jle
add
add
and
adc
loope
xchg
and
add
scas
add
xchg
movs
add
add
inc
aaa
xor
test
add
inc
jae
cld
or
mov
push
mov
xchg
loop
add
add
test
add
dec
movs
sub
mov
inc
outs
add
add
inc
mov
test
or
mov
scas
jmp
out
xchg
jns
cli
add
mov
and
retf
and
add
mov
or
in
stos
xor
ret
mov
mov
leave
pop
sbb
sub
mov
and
add
add
mov
cmovp
mov
jo
fstp
add
mov
imul
add
add
add
jl
adc
movzx
aad
loop
cmps
test
mov
ins
add
add
add
and
cwde
add
cmps
out
inc
cmp
out
and
cmp
add
xor
jl
add
ss
or
dec
and
call
cmp
lea
add
add
mov
leave
mov
sub
add
mov
ret
(bad)
sub
leave
sub
mov
retf
dec
sub
add
add
add
add
cmp
add
add
inc
test
push
dec
add
stos
lea
mov
dec
add
mov
adc
inc
out
mov
mov
mov
(bad)
(bad)
in
mov
bound
mov
aad
and
cs
cld
jmp
and
add
dec
mov
ret
fild
lea
add
mov
add
inc
mov
and
inc
xchg
add
jp
cld
jmp
sub
jge
adc
loopne
nop
jmp
(bad)
mov
pusha
add
add
add
inc
inc
xor
add
hlt
pop
mov
push
sub
mov
mov
jmp
mov
jmp
imul
bound
mov
mov
arpl
dec
ins
push
add
add
rol
xlat
cli
(bad)
mov
or
loopne
cmc
retf
xor
lea
mov
not
and
add
add
sub
in
add
jns
pusha
add
xor
inc
and
aam
call
mov
add
sbb
dec
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
call
mov
mov
cmp
cmovne
mov
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
mov
sub
add
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
seta
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
cmp
cmova
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
lea
mov
mov
sub
sub
add
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
movzx
cmp
jl
mov
jmp
mov
mov
movzx
cmp
jl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
movzx
sub
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
movzx
cmp
jl
jmp
mov
mov
add
mov
movzx
sub
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
movzx
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
add
mov
movzx
mov
shl
shl
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jne
mov
mov
mov
mov
add
pop
pop
pop
ret
mov
jmp
jmp
mov
mov
add
mov
movzx
sub
mov
mov
jmp
mov
mov
jmp
movzx
mov
mov
mov
mov
mov
jmp
jmp
mov
add
mov
movzx
mov
shl
shl
mov
mov
add
mov
jmp
mov
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
test
ret
push
add
(bad)
int3
call
mov
pop
add
pop
call
cwde
mov
sbb
hlt
push
inc
rol
or
or
xor
add
add
test
sbb
jg
test
stos
add
jmp
mov
xor
sub
push
leave
js
add
jns
xchg
mov
call
out
rcl
and
test
add
dec
add
jmp
mov
mov
test
xlat
jge
iret
add
add
xor
add
add
mov
pop
hlt
push
adc
aas
mov
pop
test
sbb
add
call
pop
sub
push
mov
lods
mov
add
push
(bad)
cmp
add
rol
add
call
jmp
pop
mov
(bad)
push
add
xor
popf
add
push
test
and
je
pop
stc
ins
sbb
or
add
add
sub
mov
and
popf
pop
fldcw
aad
and
add
add
mul
sbb
add
mov
add
sub
mov
(bad)
xchg
or
out
sub
sub
fist
add
test
(bad)
cwde
inc
idiv
jb
push
and
add
add
and
arpl
jp
call
pop
call
es
in
xchg
mov
andnps
jns
stc
add
test
xchg
add
and
add
mov
add
shl
add
add
test
pop
add
lds
push
mov
add
out
add
sub
jmp
push
test
add
add
mov
jg
jmp
aad
and
add
cmc
loopne
ins
and
jg
jmp
push
leave
js
add
add
mov
pextrw
mov
add
jmp
call
call
jnp
mov
je
(bad)
push
popf
pop
fldenv
std
cmp
add
call
mov
fadd
call
xor
add
aas
outs
xchg
test
add
add
test
add
call
scas
mov
(bad)
or
xor
scas
xor
lea
pop
add
pop
inc
mov
add
jmp
call
xchg
or
mov
xchg
test
fimul
jmp
mov
sub
popa
inc
jp
test
add
add
call
cmp
mov
pop
add
add
mov
sbb
add
call
js
dec
and
movzx
add
xor
(bad)
test
add
jns
adc
retf
inc
and
je
jmp
mov
add
dec
aad
and
je
jmp
mov
int3
sahf
add
arpl
mov
jb
test
add
add
jecxz
add
push
leave
and
mov
add
cdq
repnz
and
inc
and
je
jmp
add
push
jnp
add
je
jmp
pop
push
and
dec
add
lds
iret
mov
xor
add
jmp
mov
jae
xor
and
je
pop
sub
int3
rcr
dec
loop
inc
imul
xor
stos
pop
fld
mov
sub
mov
je
jae
add
mov
and
stc
add
mov
inc
and
out
sbb
add
jmp
jmp
mov
pusha
mov
xchg
xchg
xchg
add
sbb
add
sbb
mov
and
xchg
add
loopne
add
add
mov
mov
movs
cdq
pop
add
or
and
add
jge
ficomp
add
mov
ins
and
add
add
pop
add
add
mov
aam
imul
mov
ret
test
pop
stc
arpl
jmp
add
cmp
mov
les
add
movs
push
outs
push
mov
add
push
add
pop
ds
int
xor
je
cmp
jmp
and
les
hlt
rcr
call
bound
add
popf
int3
enter
mov
mov
add
inc
js
mov
xchg
and
mov
and
add
std
dec
stc
arpl
test
add
call
mov
and
add
or
call
sbb
cld
sahf
mov
retf
push
jp
bound
add
xchg
ret
mov
jp
dec
pop
add
rol
mov
jmp
mov
mov
mov
add
add
lock
push
pushf
rol
and
pop
mov
nop
pop
sbb
sar
ret
ins
jp
add
add
dec
add
stc
fcmovnu
xor
pop
rol
add
mov
mov
pop
pop
add
movs
jbe
jns
(bad)
push
mov
test
jmp
arpl
mov
mov
mov
test
into
and
add
add
add
jge
or
jmp
mov
adc
and
add
pop
stos
add
pop
jecxz
mov
add
and
add
mov
add
pop
mov
lea
pop
pop
pop
pop
ret
mov
and
mov
add
and
add
out
bound
xchg
test
sub
add
jp
fld
add
icebp
and
or
rcr
mov
fnsave
or
std
dec
xchg
or
ins
pop
enter
adc
add
mov
add
push
push
les
mov
(bad)
push
and
add
cdq
dec
mov
or
sub
add
arpl
mov
and
add
add
(bad)
fld
add
fadd
jmp
lea
inc
outs
in
jp
stc
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
retf
inc
outs
mov
cmp
pop
mov
fs
ja
inc
mov
pop
add
dec
inc
sub
and
sahf
fsub
mov
retf
inc
pop
dec
mov
sub
mov
dec
mov
jg
rol
add
js
inc
and
sub
mov
jg
bound
add
cmps
mov
cld
sub
sahf
inc
and
pop
(bad)
sbb
add
jp
mov
jmp
out
xchg
cmp
test
cmp
pop
mov
mov
inc
and
(bad)
or
pushf
or
add
add
test
dec
push
das
cmp
mov
inc
xor
lahf
aad
add
outs
or
add
jg
push
std
dec
jecxz
sub
(bad)
lods
pop
add
mov
sub
mov
jg
cmp
mov
xor
popa
aaa
and
seto
mov
pop
pushf
mov
and
jle
and
test
add
add
sbb
xchg
cmp
push
(bad)
xchg
inc
and
test
adc
pop
add
add
add
cli
xchg
fimul
add
js
and
mov
test
cs
and
xchg
push
pushf
add
pusha
or
add
mov
pop
jmp
pusha
cmp
add
clc
iret
cmp
loop
fsubr
je
xchg
or
mov
sub
popa
inc
and
(bad)
packssdw
add
jmp
pushf
inc
and
and
mov
add
mov
cmp
rcr
jns
call
fidivr
dec
push
sub
nop
ins
cmp
pmaxub
mov
jmp
mov
pop
out
or
sbb
add
rcl
jae
dec
inc
and
add
add
mov
call
add
scas
jp
xchg
and
enter
mov
xchg
jbe
sbb
add
ins
js
inc
mov
jl
adc
(bad)
call
(bad)
shl
int3
popa
fnstcw
ret
add
(bad)
rol
jae
push
mov
mov
push
retf
xor
ror
inc
and
data16
inc
and
mov
mov
aam
idiv
je
sub
bound
sub
mov
and
mov
add
setae
mov
add
mov
mov
add
add
pop
pop
pop
ret
ret
pop
cpuid
jmp
out
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
repz
mov
mov
or
jge
ret
push
loopne
inc
add
and
inc
add
add
mov
fnstenv
and
mov
push
mov
dec
test
mov
add
gs
and
add
std
loop
add
test
sahf
lds
push
fucomp
add
mov
sbb
arpl
cld
dec
add
add
rcr
call
add
sub
push
mov
mov
sub
cmp
xchg
mov
push
add
add
addr16
mov
add
add
sub
mov
and
add
add
ins
jmp
add
inc
add
pop
je
scas
fild
sbb
(bad)
aas
jge
add
jbe
add
ss
cwde
fldenv
add
add
cmp
add
retf
test
mov
sbb
hlt
cld
pop
ror
(bad)
test
add
pop
aas
add
jae
add
mov
hlt
test
add
movs
xchg
test
add
movups
add
add
dec
add
add
pop
sbb
adc
movs
push
ficomp
lods
jl
ror
add
cwde
js
loop
and
in
mov
and
add
test
mov
and
inc
and
je
xchg
push
add
mov
lods
cwde
fldenv
in
jno
jl
jo
(bad)
in
dec
stc
test
mov
rol
sub
mov
and
sets
jno
add
arpl
push
es
sub
mov
jg
sub
add
dec
les
cwde
add
adc
add
cmp
mov
add
add
add
jl
movs
xadd
add
adc
pop
add
add
cmps
ins
mov
mov
je
jmp
mov
push
cwde
mov
mov
leave
sub
mov
(bad)
ret
add
dec
stc
inc
mov
add
mov
clts
xor
cmc
stos
add
mov
and
add
sub
add
push
add
add
mov
mov
xchg
dec
stc
mov
and
adc
imul
stos
cwde
add
sub
push
out
loop
test
loop
jmp
mov
sub
(bad)
mov
cmps
pop
add
cmc
add
add
mov
and
add
scas
into
mov
je
jmp
add
mov
xchg
push
icebp
mov
imul
dec
dec
add
and
add
inc
pushf
not
and
lea
jmp
out
add
fild
inc
mov
jp
add
add
add
cmp
sub
dec
or
inc
jge
mov
add
mov
cmps
cwde
mov
xor
cld
mov
inc
and
jo
fidivr
add
add
test
sub
icebp
inc
and
vmwrite
loop
ror
lds
add
test
add
inc
sub
mov
je
jmp
mov
sub
mov
push
popf
xchg
add
add
test
mov
ret
fist
mov
xor
mov
jmp
jmp
out
cmc
loopne
sub
lock
and
movs
cmp
je
and
add
cmp
sub
lds
test
add
add
int3
das
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
and
dec
xchg
and
add
add
pop
and
fadd
add
pavgb
push
nop
or
mov
rcl
add
mov
mov
and
std
add
mov
loope
dec
dec
add
add
add
and
cld
add
add
pushf
push
or
inc
pop
outs
push
addr16
(bad)
mov
mov
mov
pop
movs
std
loop
mov
cmp
fnsave
retf
and
pop
sbb
rcl
add
and
add
push
repnz
(bad)
call
pop
sar
xchg
imul
add
sbb
add
add
add
jmp
sub
fcmovu
aad
pushf
fisttp
sbb
mov
stos
jecxz
jbe
pop
gs
vpsubd
mov
or
add
add
add
jns
movs
add
push
cmps
fild
add
mov
cmp
jmp
movs
neg
ds
retf
mov
fldenv
push
mov
rol
rcr
add
xor
fwait
sub
mov
cld
sub
ret
cmp
pushf
add
add
sbb
add
mov
mov
xchg
pushf
pop
sbb
ror
scas
call
add
stos
call
mov
mov
lods
pushf
add
(bad)
dec
js
std
mov
jmp
mov
and
add
dec
lea
cmps
pop
pop
in
cwde
fstp
add
add
shl
sti
push
test
mov
jb
xchg
jmp
fnstcw
add
ins
inc
in
test
pop
adc
mov
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
jne
mov
mov
scas
add
xchg
add
add
add
mov
xchg
test
mov
bound
xor
in
add
and
add
add
jecxz
in
mov
bswap
push
and
add
test
jmp
and
or
add
test
cld
jecxz
mov
ins
jmp
mov
or
sub
stos
add
jmp
or
add
add
add
adc
int
js
cmovno
aam
add
pushw
call
or
icebp
(bad)
dec
out
add
adc
test
int3
add
pop
lock
sti
pop
test
add
add
and
add
(bad)
or
inc
sub
mov
ja
lds
add
jmp
mov
aam
sub
mov
dec
(bad)
or
bound
inc
add
adc
lds
add
fnstenv
or
dec
adc
sub
or
and
cld
add
mov
ins
push
pop
cdq
test
ja
(bad)
sub
add
lds
inc
sub
mov
je
jmp
mov
stos
fs
mov
femms
inc
add
pop
jecxz
cwde
add
and
jp
add
mov
inc
gs
retf
xchg
or
add
or
add
pop
and
add
add
push
(bad)
cdq
mov
call
(bad)
or
add
out
test
add
sub
mov
out
add
adc
dec
mul
fld
mov
sub
mov
and
stos
add
imul
or
add
and
sbb
ror
cmp
fs
xor
iret
sub
(bad)
call
xor
fs
loope
add
add
xor
add
cwde
loop
xor
add
into
add
ja
push
and
add
fs
mov
jg
push
mov
sbb
cwde
add
cdq
test
add
sub
clc
and
add
mov
lods
cmp
test
add
jecxz
imul
or
mov
sub
in
test
add
jmp
test
add
add
mov
sbb
add
sub
push
test
add
add
lods
and
inc
jg
push
mov
shr
fisub
add
adc
js
sub
ja
pop
test
sub
add
test
paddusw
or
or
add
xor
int3
sub
sub
and
dec
mov
test
sbb
add
mov
sbb
in
(bad)
mov
daa
repz
add
jmp
mov
sbb
or
inc
out
sahf
movs
mov
jg
jmp
mov
add
mov
gs
pop
xchg
or
jmp
push
test
loope
add
mov
xcrypt-cfb
cmps
and
add
add
jp
mov
inc
jne
ret
movs
mov
(bad)
mov
add
add
or
fisttp
add
sub
mov
pop
mov
(bad)
lds
add
or
test
(bad)
mov
rol
push
or
add
add
xchg
fnstsw
or
in
pop
into
add
add
adc
add
add
add
and
cmovno
xchg
or
jmp
push
jp
sbb
mov
add
add
and
add
add
add
push
aaa
mov
or
(bad)
icebp
mov
fucomp
fistp
add
mov
and
sub
add
and
cmovp
add
add
mov
mov
cs
mov
jne
mov
add
pusha
add
adc
in
add
ja
and
in
fst
maskmovq
sub
add
add
add
push
and
pushw
call
fs
add
jp
or
or
fstp
add
sub
mov
lock
add
(bad)
and
add
add
lds
pusha
test
add
add
mov
je
add
je
jmp
mov
pop
inc
out
mov
add
push
(bad)
out
or
in
sbb
cmc
add
(bad)
mov
ucomiss
lds
jmp
mov
(bad)
add
fs
and
add
add
or
ja
jmp
mov
dec
aas
pop
pop
mov
add
or
test
push
jmp
add
imul
pop
xor
xor
add
sbb
in
add
into
add
pop
test
retf
jecxz
add
jae
in
add
add
sub
mov
mov
adc
ja
in
sub
add
pop
test
add
stos
dec
and
pop
das
or
je
or
nop
in
fstp
add
sub
repz
mov
add
jg
jmp
mov
sub
adc
paddb
sldt
jmp
cld
test
js
add
bound
jg
push
adc
sbb
adc
pop
es
inc
stos
add
imul
in
or
test
into
stc
mov
adc
into
add
(bad)
or
ja
cmp
mov
es
sbb
retf
mov
cmp
add
xchg
test
out
fucomp
xchg
jg
add
ja
push
fwait
pop
mov
mov
pop
add
add
and
add
jmp
mov
cwde
or
in
lods
bound
adc
(bad)
xor
in
add
test
or
adc
cld
test
(bad)
stos
add
mov
retf
add
jmp
push
add
cmp
(bad)
(bad)
lock
add
add
out
add
mov
shl
and
sub
jg
inc
fs
jmp
test
xor
xchg
(bad)
mov
add
sbb
rcl
js
iret
add
test
js
add
jecxz
and
add
add
and
add
in
or
mov
repz
fistp
add
psllq
add
jmp
mov
(bad)
nop
clc
out
mov
add
(bad)
and
add
pop
jecxz
add
mov
sub
mov
and
add
jp
cs
or
add
xor
dec
test
add
jmp
inc
push
sti
mov
jg
jmp
push
xchg
and
add
add
pop
cs
add
test
jecxz
or
push
add
add
add
test
in
mov
jmp
and
add
jmp
test
add
add
jp
add
in
fstp
test
adc
and
data16
sahf
adc
dec
add
loop
mov
jecxz
in
add
and
add
sub
repz
and
stos
add
imul
add
and
add
add
mov
jg
xor
js
into
mov
sub
in
out
loope
add
punpckhwd
push
sbb
dec
jecxz
mov
mov
in
mov
jg
xchg
add
add
and
and
add
push
lea
and
add
jmp
test
mov
add
mov
call
or
add
(bad)
jmp
or
dec
bound
and
fst
add
cld
scas
ret
sub
sahf
out
add
aam
test
add
call
mov
popa
(bad)
add
(bad)
mov
fld
add
repz
xor
add
xchg
cld
stc
or
fs
inc
or
add
imul
in
add
test
fcomp
xor
js
daa
add
sub
(bad)
lock
stos
fs
test
fild
in
add
add
pop
xchg
add
in
mov
pusha
add
into
sub
mov
fisttp
jmp
pusha
test
xor
and
add
cwde
loop
fadd
js
ror
mov
sub
mov
(bad)
rcr
into
add
aam
xchg
iret
les
add
imul
std
jecxz
mov
sbb
fst
sub
mov
jmp
and
add
jmp
mov
call
mov
mov
imul
ret
std
add
mov
sub
mov
ja
fisttp
jmp
mov
sub
or
mov
add
je
jmp
adc
sbb
add
sub
inc
test
add
ja
pop
mov
jmp
mov
es
cwde
sub
pop
and
jecxz
cwde
loop
fwait
xlat
adc
jmp
mov
add
mov
jg
jmp
push
adc
push
mov
push
inc
repz
and
add
or
add
or
add
add
add
adc
jg
jmp
inc
test
jne
jp
fxch
mov
pushf
jmp
add
add
(bad)
add
add
sub
mov
pmaddwd
add
aam
add
add
out
test
add
and
repz
ja
(bad)
or
in
add
test
or
add
xchg
add
add
ja
push
dec
xchg
fsubrp
and
and
(bad)
add
and
inc
add
and
add
add
mov
lods
push
not
add
lds
add
add
imul
push
mov
push
adc
daa
(bad)
push
jp
stos
lea
add
or
lods
dec
xchg
add
push
mov
pop
test
add
jmp
mov
inc
jle
pop
rol
add
icebp
pop
cwde
add
add
add
fisttp
add
add
and
and
test
in
in
sbb
out
add
sub
inc
ins
push
add
(bad)
and
add
jmp
mov
loope
add
add
mov
je
jmp
push
in
fnstsw
mov
(bad)
and
add
add
test
cmc
add
add
mov
xchg
add
jmp
repz
and
add
stc
mov
cmp
and
add
add
fld
dec
in
add
mov
inc
pop
stos
daa
repz
add
add
test
jmp
jl
popa
mov
fiadd
add
jno
add
add
add
add
mov
lock
movs
test
push
imul
mov
cwde
add
add
or
and
in
(bad)
add
into
mov
jp
sub
mov
and
je
loop
add
adc
in
sub
mov
jg
sahf
jp
aam
mov
lods
xchg
mov
mov
imul
add
mov
sub
pop
inc
mov
out
mov
add
add
(bad)
add
xchg
push
and
punpckhwd
add
add
js
add
aam
sub
mov
test
push
add
in
or
sti
call
mov
adc
test
or
add
loope
and
add
sub
mov
sar
popf
add
jmp
fwait
cld
jmp
addr16
and
and
je
add
add
add
mov
test
lahf
mov
push
add
add
add
add
xor
inc
test
add
jp
adc
add
in
ja
shl
inc
pusha
xchg
movs
push
add
add
cwde
cmovl
mov
sbb
adc
jmp
iret
cmp
mov
mov
dec
push
add
jmp
cli
add
add
add
ror
fst
je
add
lock
mov
aam
sub
add
push
dec
ror
and
mov
add
out
scas
and
call
xor
add
add
ja
ds
add
sub
add
pusha
test
outs
and
add
in
push
test
jp
add
add
xor
mov
mov
and
dec
inc
iret
or
and
push
inc
add
adc
loope
js
mov
retf
(bad)
stos
fs
adc
icebp
mov
inc
inc
and
or
add
or
jmp
jb
xrelease
dec
adc
ja
aam
pxor
(bad)
jmp
imul
mov
icebp
fild
adc
nop
and
test
push
or
sar
add
push
jns
imul
xor
int3
sub
mov
cld
test
(bad)
stos
add
mov
add
lds
mov
pop
leave
mov
and
mov
(bad)
cld
inc
sbb
rcl
js
cs
mov
jmp
iret
mov
test
add
sub
mov
add
add
(bad)
mov
movzx
push
adc
sub
inc
add
adc
or
js
aam
xchg
and
add
push
and
sub
add
sub
icebp
push
or
dec
add
add
test
inc
add
and
mov
mov
inc
inc
mov
mov
test
add
cwde
ins
rol
jmp
jp
pop
out
inc
sub
jl
add
adc
fild
inc
in
fld
adc
daa
xchg
ret
adc
push
bound
xor
pop
add
mov
test
mov
and
add
add
comiss
mov
jmp
sbb
mov
fld
add
movzx
mov
js
jp
push
mov
push
dec
outs
and
add
or
mov
inc
add
cwde
mov
hlt
and
int3
sub
or
sub
inc
add
mov
stos
mov
mov
getsec
push
and
add
jecxz
loope
sub
inc
add
hlt
and
int3
sub
mov
fistp
inc
dec
add
mov
sub
inc
add
add
add
cmp
ret
je
add
push
and
fs
and
mov
nop
cmp
ins
jne
add
add
xchg
loope
add
jmp
mov
aad
(bad)
push
in
add
pop
add
push
or
mov
mov
add
inc
jge
mov
cmp
loop
pop
ja
(bad)
sbb
in
add
xor
add
mov
jmp
(bad)
loopne
fld
add
inc
lea
adc
add
mov
add
add
mov
mov
aaa
js
aam
lock
cmp
(bad)
mov
cmp
add
mov
pushf
mov
and
call
nop
jbe
aam
mov
loope
and
add
add
vxorps
add
add
or
mov
add
mov
inc
push
cld
(bad)
mov
leave
fsubr
add
imul
add
add
add
cwde
add
sbb
add
jmp
test
pop
retf
pop
mov
mov
and
js
add
push
mov
jmp
(bad)
imul
jmp
mov
mov
sbb
push
jmp
mov
cmp
in
and
add
cwde
mov
mov
icebp
adc
mov
inc
mov
mov
push
(bad)
(bad)
mov
or
icebp
add
add
in
add
and
and
call
jmp
mov
dec
add
add
out
inc
mov
rol
or
add
mov
ja
and
in
and
push
push
and
mov
inc
ins
and
xchg
jno
add
ins
sahf
mov
mov
jge
add
add
loop
retf
stc
sbb
add
pop
jnp
cwde
add
pop
aaa
(bad)
test
sub
jmp
ret
bound
loopne
fldl2t
add
pop
add
or
add
jecxz
rcl
test
xor
sub
push
mov
add
sbb
add
(bad)
vfrczsd
(bad)
and
add
mov
and
add
add
cmp
jns
jp
test
jmp
sbb
inc
push
adc
jmp
mov
mov
lea
sti
mov
jmp
cwde
in
add
xchg
sbb
loope
lock
and
add
sub
test
(bad)
add
add
mov
addr16
movs
xchg
add
mul
add
and
adc
add
cld
(bad)
lock
pushw
dec
out
and
and
inc
add
icebp
add
xchg
adc
in
fnstsw
mov
jmp
adc
inc
iret
push
add
add
test
sbb
add
pop
lods
add
sbb
add
int3
inc
cdq
inc
jmp
mov
pop
cs
pushw
sub
add
jmp
cmps
inc
xchg
mov
loope
add
in
add
cmovs
xor
inc
movs
and
js
add
push
jmp
push
movs
ins
test
pop
fnstenv
xor
add
add
jmp
test
add
push
sub
call
add
jmp
mov
icebp
retf
pop
ins
cld
(bad)
mov
and
and
push
add
jmp
add
sbb
add
pop
mov
xchg
scas
ds
test
add
add
cmovne
test
add
mov
test
cmp
add
cwde
add
fadd
imul
or
imul
cwde
lea
add
mov
mov
enter
imul
add
ja
mov
jmp
mov
cdq
jl
call
mov
mov
lock
push
or
xchg
stos
jmp
mov
pop
test
sbb
add
adc
loope
jmp
mov
push
jne
add
nop
pop
xor
add
sbb
sbb
jmp
adc
add
mov
js
out
lock
test
mov
gs
dec
jg
lods
or
adc
add
ins
pop
fisttp
add
ja
adc
dec
jmp
mov
push
inc
add
xchg
(bad)
sub
stc
sub
adc
mov
sub
add
sub
data16
and
mov
add
or
xor
add
mov
sahf
dec
aad
add
add
mov
rol
or
add
mov
add
mov
push
pop
and
mov
outs
(bad)
(bad)
mov
mov
and
mov
clc
(bad)
add
add
mov
mov
mov
call
mov
mov
add
cmp
ss
lds
das
rol
sbb
add
mov
repz
sub
icebp
rcr
push
add
and
jecxz
and
sub
(bad)
outs
movs
pop
out
add
adc
jmp
mov
and
and
add
inc
adc
add
(bad)
sbb
sbb
fst
fisub
lahf
jmp
adc
inc
push
push
add
inc
test
icebp
add
add
leave
cwde
add
mov
sahf
pusha
add
stos
mov
mov
call
inc
(bad)
inc
dec
rcl
dec
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
sub
mov
call
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
sub
mov
mov
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
sub
mov
je
jmp
jmp
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
sbb
adc
or
inc
and
mov
and
mov
cli
sbb
jl
adc
loopne
xchg
xchg
xchg
and
mov
pop
ins
and
push
and
push
in
and
sub
fs
jmp
inc
je
mov
and
cmp
cli
sbb
and
cmp
test
inc
xlat
or
push
xchg
(bad)
dec
rcr
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
xor
adc
fsubr
or
adc
pop
jmp
pop
hlt
or
outs
mov
add
pop
add
add
sbb
mov
add
add
mov
cmp
stc
add
jmp
xchg
and
rol
add
outs
test
lock
je
jmp
mov
shr
jecxz
and
fimul
mov
or
rcr
out
and
ret
sub
sbb
mov
add
sub
test
jne
xchg
jecxz
dec
test
fimul
fimul
mov
jg
jmp
ins
outs
and
ret
jns
or
mov
je
call
mov
std
mov
pop
push
xchg
or
(bad)
and
add
cmp
add
mov
inc
adc
test
add
xor
sub
add
add
add
mov
add
add
add
iret
test
ret
xchg
add
fisttp
adc
add
xchg
jmp
mov
sub
mov
js
in
add
add
fiadd
dec
xchg
add
sub
outs
scas
and
int
repnz
add
movs
cs
add
add
stos
cmp
inc
ror
and
or
jmp
mov
and
add
out
adc
xchg
mov
add
mov
add
mov
and
mov
xchg
sub
mov
jg
jmp
mov
add
mov
mul
adc
je
out
mov
(bad)
sub
imul
lock
add
add
add
add
mov
sub
mov
test
add
jmp
or
or
sub
pop
xor
jle
(bad)
retf
add
add
ins
add
ret
and
push
loop
popa
mov
scas
ins
mov
imul
rol
jmp
jecxz
dec
jb
xchg
sub
pop
xor
push
es
and
es
ins
ret
daa
test
add
dec
mov
mov
and
test
sti
shr
mov
push
test
add
sub
mov
repnz
iret
out
jmp
mov
and
ret
iret
pop
push
movs
push
inc
and
push
scas
or
add
jmp
jo
mov
mul
mov
inc
xchg
jg
iret
add
jmp
mov
out
add
add
imul
adc
add
xchg
jmp
mov
sub
pop
ret
and
cmp
daa
or
arpl
sti
test
add
es
test
inc
and
je
jns
xchg
add
mov
std
mov
pop
mov
(bad)
mov
add
or
push
push
test
sub
retf
sbb
push
out
mov
nop
pop
xchg
add
add
add
sub
pop
inc
and
addr16
pusha
push
fisub
call
add
sub
mov
aas
shr
(bad)
adc
sbb
fcmove
push
cmp
push
mov
add
add
mov
inc
dec
push
mov
pop
add
lods
jmp
mov
sub
mov
movq
rol
jmp
mov
and
ss
arpl
mov
je
mov
jo
add
jmp
sub
mov
je
jmp
mov
add
test
inc
adc
add
add
int3
add
jle
sbb
mov
jmp
dec
add
push
add
test
dec
pop
xor
stos
add
addr16
mov
adc
inc
sbb
out
pop
adc
shl
and
sbb
add
dec
call
add
mov
xchg
in
mov
lods
xchg
ret
add
imul
and
add
jmp
mov
mov
jmp
lea
mov
mov
std
jmp
test
mov
add
add
mov
dec
std
call
add
push
mov
lods
add
add
push
test
or
ret
sub
sbb
mov
fbstp
scas
inc
add
cmp
inc
add
fadd
pop
arpl
test
add
add
add
inc
and
push
add
jmp
push
xor
add
add
or
lock
sbb
mov
mov
cmp
(bad)
inc
mov
iret
shl
shl
add
adc
(bad)
xchg
mov
mov
xchg
adc
dec
ins
push
add
add
add
xchg
ror
add
or
add
call
push
add
loope
add
(bad)
shl
out
add
lds
jle
sub
add
test
push
dec
inc
rol
test
add
add
add
and
sbb
and
add
ret
and
add
add
or
mov
mov
dec
enter
test
cmps
sti
rol
mov
mov
add
jmp
ret
jecxz
pop
xchg
pop
pop
ret
add
mov
cli
call
add
sbb
inc
and
jmp
and
jle
add
sub
dec
add
mov
ror
ins
and
push
test
add
dec
mov
cmp
add
loopne
cmp
inc
cmp
inc
add
cmp
and
loop
add
nop
mov
mov
mov
or
and
push
dec
fcmove
push
mov
sub
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
add
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
add
add
mov
mov
and
aam
jae
and
mov
mov
add
add
and
add
add
mov
add
into
mov
inc
adc
imul
movs
mov
rol
add
retf
inc
mov
sub
push
add
mov
push
arpl
mov
push
mov
sub
add
icebp
rol
add
fwait
cmp
inc
rol
mov
push
pop
push
mov
push
iret
add
add
test
adc
rol
sub
jg
sub
inc
add
pop
and
add
add
push
jmp
mov
fwait
push
stos
push
mov
movs
add
mov
add
jmp
add
sub
xor
in
inc
xchg
push
add
aam
jl
and
movs
inc
add
mov
add
inc
jmp
pop
test
cmp
aam
(bad)
mov
add
(bad)
and
imul
jmp
and
sub
mov
and
xchg
stos
rol
jmp
mov
iretw
mov
sub
jle
into
xchg
inc
stos
add
pop
xchg
xchg
add
mov
test
add
add
mov
and
push
jmp
jl
and
inc
add
sub
pop
test
add
mov
mov
push
mov
lds
xor
add
mov
add
ror
add
ror
add
dec
sub
push
add
cmp
mov
and
xor
pop
jae
test
inc
movs
(bad)
dec
push
add
jmp
or
scas
stc
retf
sub
mov
and
push
add
add
jmp
mov
and
add
pop
popa
mov
mov
add
movs
sub
xchg
mov
ds
dec
add
sub
xor
xor
in
add
add
mov
jle
push
loope
mov
out
movs
add
int
add
shl
add
push
mov
jg
jmp
mov
and
push
in
jecxz
jo
push
pop
test
add
add
(bad)
daa
mov
add
dec
add
inc
inc
mov
(bad)
out
ds
add
pop
add
outs
test
sub
mov
and
sub
lock
add
in
adc
add
pop
and
dec
xchg
add
inc
(bad)
and
mov
jl
cmp
mov
and
sub
add
mov
dec
and
xor
shr
movs
add
mov
out
jmp
and
push
mov
add
daa
mov
push
add
add
jmp
mov
add
add
(bad)
shl
add
add
add
mov
add
add
pop
cwde
add
add
push
add
dec
sub
add
mov
add
outs
sbb
add
jbe
shl
mov
sub
sub
pop
das
and
add
or
cmp
add
stc
cmp
mov
add
stos
lss
movs
add
add
mov
add
push
(bad)
frstor
cmp
sub
(bad)
jo
add
jmp
add
sbb
inc
mov
add
jmp
mov
xor
mov
stos
add
pop
xchg
add
mov
mov
inc
test
add
sub
mov
pop
and
in
add
jmp
mov
sub
test
cmp
add
mov
test
mov
cwde
mov
sub
and
add
add
push
mov
mov
push
mov
mov
rol
add
or
add
cmc
idiv
add
sub
mov
mov
push
jmp
mov
dec
jmp
movs
sub
pop
and
mov
(bad)
and
add
jmp
sub
idiv
push
mov
out
scas
and
add
add
test
or
add
popa
test
(bad)
(bad)
arpl
mov
(bad)
xchg
retf
inc
add
mov
test
add
cmps
out
mov
aas
xlat
and
(bad)
movs
add
fiadd
add
mov
mov
cmp
add
(bad)
test
retf
add
int
add
mov
mov
iret
add
(bad)
pop
test
dec
movs
add
das
push
xor
add
pusha
add
movs
mov
add
jae
movs
or
cmp
pand
add
add
mov
mov
sub
mov
(bad)
mov
and
ror
add
sub
add
and
add
retf
dec
sub
mov
add
test
test
add
pop
xor
xchg
aam
add
jae
add
add
dec
add
inc
and
sub
push
(bad)
nop
add
inc
add
dec
add
mov
dec
mov
mov
add
pop
aam
push
inc
add
movs
leave
das
adc
or
jae
mov
lods
pop
cwde
cmp
add
add
mov
sub
mov
mul
test
jo
add
pop
test
sub
sub
mov
fimul
jmp
mov
sub
jle
and
movd
jne
add
mov
rol
sub
sub
or
add
add
and
add
mov
je
test
sub
daa
add
mov
fadd
add
(bad)
dec
rcr
mov
(bad)
jo
test
add
jmp
or
and
add
add
mov
mov
popf
aas
add
jmp
mov
sub
shl
rol
add
test
loop
and
test
scas
add
xchg
movs
add
cmps
test
out
jmp
push
xor
and
loope
add
jp
add
add
add
mov
movs
test
add
movs
(bad)
add
rol
mov
mov
test
add
add
mov
and
add
add
iret
xor
(bad)
push
cmp
sub
and
add
add
retf
out
push
je
cmp
mov
and
push
in
sub
mov
je
jmp
fadd
jmp
inc
and
mov
add
add
inc
mov
loope
mov
and
(bad)
jo
mov
add
cmp
add
sub
mov
shufps
add
jmp
or
xchg
dec
retf
mov
inc
jo
je
daa
xor
add
fadd
add
jle
xchg
arpl
test
pop
shl
add
fisub
inc
and
(bad)
mov
add
push
imul
and
test
into
add
mov
in
and
stos
ss
mov
xchg
xchg
add
mov
sub
and
add
add
inc
sub
inc
test
sub
je
mov
je
stos
stos
ss
jmp
aas
dec
mov
adc
inc
add
add
pop
add
add
jmp
(bad)
xlat
and
aam
jmp
test
and
rol
movs
inc
test
mov
mov
dec
and
add
mov
add
in
sub
pop
es
add
ror
test
push
add
ror
add
mov
pop
sar
outs
in
add
dec
mov
out
jg
cmp
stos
mov
add
add
add
in
and
(bad)
sti
xor
add
ret
inc
rol
push
add
imul
mov
mov
mov
push
rol
cmc
pop
mov
and
add
sub
loopne
ficom
mov
mov
or
aad
(bad)
jl
and
inc
add
movs
add
add
add
add
retf
push
aas
push
add
pop
add
mov
mov
mov
sub
add
jmp
mov
or
add
add
aaa
cmc
pop
add
mov
inc
and
add
add
stos
add
sbb
shl
xchg
stos
scas
aad
mov
add
add
xchg
mov
and
add
mov
pop
mov
or
shl
inc
aad
dec
push
pusha
hlt
mov
mov
mov
movzx
adc
test
repz
jbe
add
add
cmovne
into
and
stos
add
mov
popf
das
xchg
mov
mov
jmp
sub
mov
push
inc
aad
mov
pop
movs
add
retf
or
and
cmp
mov
(bad)
mov
mov
jmp
mov
push
inc
add
add
sub
add
sbb
pushf
mov
inc
and
add
push
movzx
test
add
test
mov
or
cmpps
mov
mov
leave
jmp
mov
mov
fcom
jmp
rol
(bad)
cld
sub
retf
into
xchg
mov
in
add
add
mov
push
test
mov
mov
(bad)
mov
and
call
mov
mov
mov
stos
cmp
add
mov
mov
or
mov
mov
xlat
inc
adc
int3
inc
add
mov
mov
movs
adc
push
dec
and
cmp
out
or
into
and
(bad)
mov
pop
push
mov
les
ds
and
add
aam
mov
push
add
add
xor
add
mov
mov
cmps
adc
mov
retf
test
cmovne
mov
and
add
rcl
add
add
mov
and
push
add
or
jbe
clc
in
and
and
jmp
inc
jmp
mov
outs
fisttp
adc
pop
pop
aas
push
push
add
add
xchg
enter
fmul
jle
into
je
add
mov
push
movs
sub
jmp
jb
data16
lahf
jmp
mov
mov
cmp
add
out
ror
add
lock
add
add
mov
add
add
mov
movs
add
inc
add
daa
add
(bad)
and
add
stos
gs
mov
dec
push
int3
inc
xor
add
out
adc
mov
add
add
and
sub
add
add
aas
xlat
and
add
add
stos
add
inc
mov
lds
dec
data16
mov
pop
pop
pop
pop
ret
xchg
and
push
add
add
mov
(bad)
pop
mov
imul
movs
inc
and
add
imul
das
and
add
add
aas
and
push
add
ret
add
jmp
mov
add
jmp
add
in
mov
mov
and
scas
(bad)
inc
xor
adc
fiadd
mov
pop
in
dec
and
mov
push
mov
push
in
and
movs
cmps
into
xchg
pop
and
inc
add
sub
sub
call
shl
iret
add
mov
inc
add
ins
mov
push
add
add
ret
pop
cmp
mov
mov
ds
pop
inc
add
sub
(bad)
shl
mov
loope
ret
fadd
add
add
add
push
and
add
movs
mov
xor
jmp
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
loopne
mov
add
mov
cmc
add
aam
out
call
and
add
jle
nop
lds
mov
cmps
test
add
add
add
movs
out
iret
and
add
add
add
(bad)
loopne
pop
add
pop
mov
mov
cmp
or
inc
add
mov
add
test
test
add
add
sub
test
add
dec
mov
fisub
gs
lods
sahf
xor
stc
dec
sbb
add
call
add
(bad)
and
add
jmp
mov
sub
push
test
add
xor
jmp
movs
add
out
dec
sub
add
cs
pop
adc
and
add
add
adc
jmp
sbb
idiv
aad
sahf
mov
add
outs
and
inc
sub
mov
add
test
push
pop
or
shl
add
xchg
retf
add
jns
add
add
lds
sub
mov
add
cmps
pop
pop
add
add
add
add
in
sahf
xchg
jl
mov
loope
jecxz
add
jae
inc
cmp
mov
sub
mov
push
xor
cmps
add
dec
add
add
rol
call
loopne
mov
add
jmp
mov
retf
add
mov
adc
dec
les
add
cmps
stc
add
ret
outs
pusha
mov
sub
mov
or
pminub
pcmpgtb
jmp
cmp
sub
mov
pusha
stos
add
call
jmp
push
mov
sbb
add
sub
mov
or
dec
add
je
jmp
mov
fcomp
out
mov
js
call
vmovapd
fiadd
mov
pusha
add
mov
pavgb
push
jge
jmp
mov
popf
pop
inc
jle
jl
mov
dec
popa
jnp
inc
add
add
cmp
cmc
test
xchg
lds
test
and
add
(bad)
popa
add
fs
mov
fcom
ret
stos
mov
sub
add
jg
jmp
mov
add
push
arpl
or
add
psrlw
add
mov
jle
inc
xor
call
mov
and
add
aad
mov
add
jmp
jmp
xor
sbb
fbld
fs
(bad)
dec
add
jmp
adc
push
lahf
test
(bad)
and
add
fld
sub
mov
and
movs
sub
data16
hlt
mov
add
jmp
mov
and
pop
add
mov
mov
jg
jmp
mov
inc
or
and
sub
mov
ins
test
call
mov
scas
add
xor
aaa
outs
ret
inc
test
add
(bad)
jge
and
pop
add
inc
shr
add
add
and
xchg
inc
add
je
jmp
mov
sub
out
add
add
add
add
mov
sub
mov
cmc
call
out
add
movs
fwait
inc
cmp
xchg
and
add
rcr
add
inc
lods
sub
and
mov
mov
sbb
shl
jle
sbb
lds
add
mov
add
push
mov
sub
sub
push
loopne
and
jmp
mov
sub
mov
and
add
cmp
iret
pop
add
add
add
jmp
dec
sub
ficom
push
add
je
add
fsub
in
mov
and
add
add
jle
lock
add
mov
sbb
and
dec
sub
push
loopne
and
jmp
jle
mov
sub
int3
test
add
add
test
mov
test
je
sub
inc
pop
es
hlt
dec
sub
stc
lods
pop
add
jmp
mov
sub
mov
inc
add
add
test
pop
add
rol
add
push
mov
mov
sub
sub
mov
movs
je
mov
mov
push
jno
sahf
push
mov
cmovae
cmc
fwait
jmp
test
cmp
fmul
dec
push
mov
mov
lods
cmp
add
mov
jge
add
add
mov
ror
test
sbb
rol
jmp
jmp
fsub
in
mov
mov
add
cli
add
pop
mov
inc
xor
out
js
out
add
xor
rcl
cwde
les
add
(bad)
jmp
add
outs
jge
outs
ret
inc
add
mov
mov
xchg
push
push
mov
dec
fwait
arpl
inc
gs
mov
mov
mov
adc
inc
mov
lds
add
mov
les
outs
add
sbb
mov
mov
aad
and
and
and
and
mov
imul
add
and
add
add
xchg
(bad)
mov
mov
mov
mov
and
add
nop
dec
cmp
add
sub
add
sub
add
push
dec
std
(bad)
mov
mov
(bad)
push
add
mov
jl
inc
mov
sub
popa
xor
add
add
fcmovu
and
std
(bad)
mov
mov
mov
mov
mov
mov
and
(bad)
sbb
mov
shl
dec
std
(bad)
mov
mov
add
push
xchg
adc
mov
mov
mov
xlat
call
pop
pop
ret
(bad)
mov
mov
mov
iret
jp
aad
add
mov
mov
and
(bad)
push
mov
sub
add
mov
add
(bad)
mov
mov
(bad)
in
jnp
add
jmp
add
adc
mov
pop
daa
and
add
add
and
inc
add
call
cmp
add
mov
mov
push
adc
mov
add
sub
add
add
add
das
dec
std
(bad)
mov
mov
mov
mov
and
pop
add
mov
dec
inc
rcr
out
add
mov
add
call
mov
xchg
and
add
mov
mov
pop
add
pusha
jnp
(bad)
cmc
fwait
add
enter
add
inc
data16
push
add
push
mov
add
and
out
(bad)
and
add
mov
add
mov
pushf
dec
std
(bad)
jle
cmc
fwait
arpl
mov
iret
xchg
retf
call
xor
and
mov
mov
std
call
mov
inc
push
add
jmp
mov
adc
mov
(bad)
mov
imul
out
add
add
xchg
cmp
scas
add
jle
add
mov
sub
je
sub
(bad)
and
pop
fs
mov
rol
add
pop
or
mov
mov
cmp
push
add
xchg
pusha
nop
add
out
mov
adc
inc
and
add
or
ret
fmul
jmp
out
cmps
movs
mov
push
add
(bad)
clc
enter
into
jbe
out
mov
inc
dec
and
add
add
call
pop
sbb
mov
movs
add
and
dec
add
mov
mov
xor
add
cmp
out
add
(bad)
popf
inc
cmp
cli
and
add
nop
cmp
(bad)
and
add
sbb
jecxz
add
out
add
add
sub
push
add
mov
mov
mov
inc
or
add
add
inc
xor
push
add
dec
mov
add
inc
mov
add
add
fs
cmc
dec
std
jmp
add
add
adc
jle
add
jl
add
mov
mov
int3
inc
sbb
cwde
lds
add
mov
(bad)
dec
std
dec
mov
shr
push
add
add
mov
(bad)
and
and
mov
jl
inc
js
cdq
dec
std
call
call
add
mov
sbb
mov
sbb
mov
mov
inc
rol
imul
mov
mov
mov
jl
add
xchg
inc
icebp
and
and
sbb
mov
int
retf
cmp
lock
add
jl
add
inc
cmp
loope
mov
imul
aam
test
sub
adc
mov
inc
or
bound
into
aas
jle
mov
mov
mov
bound
mov
dec
test
js
add
jmp
push
add
call
add
add
mov
mov
loope
out
sahf
and
add
add
mov
call
mov
jge
add
jge
add
xlat
ror
in
sub
ret
lods
(bad)
add
test
call
dec
pushf
and
fild
xor
jecxz
js
add
jmp
mov
fstp
or
mov
pop
add
adc
sbb
jmp
mov
(bad)
pop
and
sub
sbb
mov
add
out
add
mov
jnp
add
mov
dec
rol
daa
pusha
or
add
add
test
enter
pop
add
mov
sbb
shl
aas
mov
call
out
popa
add
and
add
push
pop
add
out
(bad)
cmp
lea
fwait
add
cld
jne
cvtpi2ps
daa
test
add
add
xor
sub
shr
adc
dec
jmp
mov
push
add
mov
adc
pusha
test
call
add
jbe
arpl
jmp
mov
mov
jmp
mov
mov
nop
hlt
add
mov
inc
test
add
mov
jmp
out
pop
adc
add
pop
inc
(bad)
adc
add
das
and
mov
mov
in
dec
and
mov
(bad)
inc
and
pop
add
(bad)
jle
fwait
arpl
out
jle
add
jl
add
shl
add
cmp
adc
mov
mov
push
js
pusha
call
mov
int3
xor
push
add
sbb
das
xchg
or
dec
sub
mov
xlat
and
(bad)
pusha
and
add
rol
call
fiadd
add
jle
add
int3
jnp
add
add
mov
mov
xchg
add
add
xor
mov
jbe
std
(bad)
fldenv
jle
add
aad
inc
stc
add
(bad)
adc
cmp
xor
and
add
mov
inc
std
(bad)
mov
mov
mov
into
xchg
and
cmp
mov
sbb
or
add
sbb
jmp
test
inc
cmp
add
dec
add
add
test
jl
add
cmp
cs
add
add
and
int
jge
fidiv
mov
jnp
add
xor
sub
add
and
(bad)
sbb
jge
add
hlt
and
call
jle
cmc
add
add
aam
push
add
and
inc
add
mov
and
inc
and
mov
mov
xchg
inc
std
(bad)
mov
int3
sub
add
jmp
and
add
xlat
adc
in
cmp
cwde
hlt
and
add
cmc
add
gs
std
(bad)
mov
dec
and
push
add
fdivr
add
add
adc
mov
xchg
add
cmp
outs
pusha
add
aaa
inc
std
(bad)
mov
std
pusha
jle
add
loopne
push
add
mov
and
add
dec
adc
adc
mov
add
addr16
popa
add
(bad)
mov
pop
jle
add
mov
nop
sub
jmp
and
cdq
inc
and
fs
add
fild
jmp
add
arpl
jle
add
call
xchg
sbb
sbb
and
inc
(bad)
xor
sub
sub
mov
lods
inc
std
inc
add
pop
mov
adc
jnp
add
nop
call
add
(bad)
jge
or
nop
lds
mov
jg
std
(bad)
mov
mov
add
mov
sub
adc
mov
and
jecxz
and
mov
add
jl
inc
push
(bad)
mov
mov
fcomip
jnp
add
add
dec
cmp
add
inc
adc
outs
add
add
and
(bad)
mov
mov
jle
add
clc
jnp
add
add
(bad)
movs
jecxz
inc
rcr
add
add
mov
and
shl
inc
std
(bad)
mov
mov
jle
add
sbb
mov
mov
test
inc
or
movs
sub
adc
xchg
mov
pop
adc
jle
add
mov
int
and
fisub
mov
mov
sub
cdq
inc
std
call
add
pusha
movs
mov
mov
mov
in
adc
hlt
inc
and
cwde
inc
and
add
add
mov
inc
std
(bad)
mov
mov
mov
adc
sbb
mov
(bad)
outs
and
add
pusha
mov
sar
sub
(bad)
or
push
add
div
(bad)
jl
mov
mov
inc
cmp
cmove
jmp
jle
add
jl
add
and
mov
sub
test
movs
add
das
add
and
pop
mov
or
dec
popa
mov
addr16
mov
popa
cmp
push
nop
lds
push
jo
or
mov
std
inc
in
jge
add
jge
add
(bad)
stc
xor
add
cwde
test
add
(bad)
mov
sbb
inc
out
adc
sbb
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
add
add
sub
mov
mov
shl
mov
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
shl
mov
mov
jmp
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
add
add
aad
scas
inc
int
repnz
mov
shl
xchg
addr16
xor
sbb
jmp
mov
sub
mov
cmp
add
jmp
mov
cmps
adc
mov
rdmsr
fiadd
cmp
jmp
add
and
sub
mov
jl
jge
xchg
mov
jno
inc
and
sub
mov
clc
sub
test
add
add
inc
cmps
ins
stos
ret
inc
xchg
cmp
push
jae
add
(bad)
push
in
psubb
ja
jb
out
mov
cmp
mov
adc
jl
ds
push
dec
fld
add
in
inc
mov
ror
push
jns
add
xor
inc
ss
cmps
int
repnz
aas
inc
sbb
mov
mov
add
xchg
leave
mov
cmp
add
dec
jmp
dec
mov
jno
mov
and
jmp
mov
xor
lods
add
xchg
mov
and
mov
pusha
leave
cmp
mov
mov
mov
in
add
inc
shr
jge
int
mov
jl
add
mov
mov
or
add
push
dec
mov
pop
je
xor
sub
mov
push
mov
lea
push
inc
add
adc
add
lods
and
cmp
adc
or
add
imul
cmp
mov
ret
mov
push
inc
add
sbb
mov
mov
pop
imul
add
sub
mov
and
mov
and
mov
xchg
inc
(bad)
xor
inc
inc
sbb
fs
mov
sub
mov
add
mov
and
mov
push
and
inc
jmp
(bad)
out
adc
cli
pushf
out
mul
xchg
je
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
daa
and
bound
xchg
jmp
mov
std
jmp
fadd
mov
and
je
std
sub
add
adc
bound
sbb
add
add
in
push
add
clc
in
inc
pop
aam
xlat
enter
ds
pop
(bad)
xor
add
aaa
hlt
xor
sub
fs
and
mul
add
out
jmp
mov
sub
cdq
inc
sub
jg
jmp
mov
sub
jmp
add
add
cwde
in
out
mul
and
test
cdq
dec
and
pop
(bad)
sbb
add
jg
mov
inc
sti
shr
retf
clc
cmps
add
add
mov
inc
and
jne
adc
add
add
add
mov
sub
fadd
psubq
add
add
mov
sub
ins
stos
pop
loopne
ficomp
add
add
xchg
add
push
mov
btr
jg
jle
aas
add
call
cmp
popa
popa
add
add
push
sub
sub
add
and
movd
jge
aas
mov
add
jo
popa
mov
cld
ins
inc
and
loope
popa
add
movs
jmp
lock
xor
test
inc
and
pop
ror
jg
mov
sub
mov
jmp
sbb
add
add
inc
mov
xchg
jle
dec
and
pop
test
jmp
push
inc
and
js
jmp
movntq
clc
in
out
mov
xor
int3
popf
inc
mov
jne
mov
push
add
mov
js
sub
inc
mov
sbb
repnz
add
aas
mov
inc
fdiv
arpl
(bad)
add
sub
add
fidivr
and
je
jmp
xchg
push
add
add
mov
jle
add
and
add
adc
push
sub
aad
jmp
mov
add
jns
mov
inc
and
push
imul
jno
jnp
add
ret
inc
rol
ror
iret
mov
(bad)
cmps
mov
add
add
add
add
add
out
and
add
mov
mov
mov
(bad)
sub
retf
add
jg
jmp
and
add
mov
push
inc
add
mov
or
dec
pop
js
out
and
add
add
inc
add
and
aam
call
mov
add
aas
call
inc
add
add
retf
loopne
and
add
shl
add
or
je
or
shl
xor
cwde
scas
mov
sub
in
jge
fdiv
fiadd
xchg
mov
test
sub
adc
push
adc
mov
jg
add
mov
add
sub
and
call
jl
mov
mov
mov
add
ret
mov
je
xchg
add
aaa
repnz
pop
cmp
pop
cs
and
adc
retf
or
jnp
sub
jnp
add
add
sbb
in
mov
mov
mov
repz
in
add
inc
add
mov
xchg
jge
sub
fwait
dec
and
mov
cmps
adc
and
add
and
imul
add
add
ret
arpl
and
add
add
jb
and
hlt
mov
mov
mov
or
add
and
mov
add
sub
push
inc
and
iret
add
loop
sub
clc
(bad)
mov
aad
ins
fcmovbe
test
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
jne
add
js
adc
and
add
add
call
or
mov
add
std
cmp
mov
add
add
scas
enter
call
pop
ror
add
mov
cdq
iret
stc
test
sub
jmp
ret
adc
add
mov
mov
mov
add
and
add
shl
and
mov
aaa
in
add
add
jecxz
dec
mov
js
add
adc
pop
push
pop
sbb
push
mov
add
add
movs
push
scas
add
add
mov
mov
inc
xor
bound
fwait
jmp
ss
add
add
aaa
out
add
xchg
aaa
and
loopne
sub
jg
jmp
mov
in
add
sub
push
jns
aam
add
(bad)
push
mov
add
mov
ja
sub
and
jmp
add
add
add
inc
mov
(bad)
fdiv
and
adc
sub
pop
mov
mov
add
pop
and
add
mov
xor
(bad)
mov
add
add
add
inc
xor
add
add
mov
jg
mov
add
add
add
into
test
(bad)
shl
aaa
aam
add
stos
adc
sub
mov
mov
cmp
mov
lods
xchg
add
(bad)
rol
jmp
enter
add
mov
mov
(bad)
mov
add
jmp
mov
sub
push
jns
mov
out
add
aaa
jmp
inc
add
add
add
mov
add
sub
sub
mov
inc
movs
test
add
adc
jmp
add
add
out
test
(bad)
and
add
and
mov
add
and
add
rol
add
rol
adc
add
test
add
popa
jp
pop
adc
test
in
mov
outs
fwait
or
mov
add
repnz
lock
mov
add
test
add
add
mov
cli
pop
adc
xchg
test
add
jmp
mov
add
and
fsub
add
inc
adc
add
test
lods
test
add
push
fild
adc
in
add
mov
push
inc
add
sub
mov
push
(bad)
and
jmp
mov
add
in
stos
add
mov
test
test
inc
adc
jmp
mov
cmp
stos
cli
mov
test
add
add
(bad)
and
add
add
std
add
sbb
xor
cmp
es
add
pop
std
xor
fwait
jmp
test
sub
into
cs
std
shr
jg
stos
add
adc
mov
sub
popf
test
jmp
mov
add
pop
fld
add
retf
pop
add
enter
js
mov
aad
adc
jmp
and
add
mov
inc
xchg
jne
inc
mov
loopne
loope
enter
add
cwde
mov
mov
aaa
(bad)
ficom
inc
iret
int
lea
add
and
out
mov
push
mov
je
jb
jmp
and
add
sub
inc
push
mov
jg
jmp
enter
add
sub
mov
push
and
imul
and
shr
add
retf
fs
clc
add
add
pop
add
mov
jmp
fdivr
jmp
jg
jmp
mov
inc
add
sub
mov
jg
jmp
adc
rol
add
mov
jmp
out
add
enter
test
adc
add
rol
sbb
pushf
call
add
add
inc
add
mov
jmp
out
add
mov
(bad)
and
add
cmp
aad
and
seto
jmp
add
add
(bad)
sub
xor
dec
xchg
sub
call
and
add
and
repnz
shr
add
out
mov
mov
mov
(bad)
std
add
ret
mov
fild
jmp
fs
push
add
inc
ds
xor
sub
jmp
push
test
in
add
ret
aad
mov
mov
add
sbb
fisub
pop
adc
sub
mov
or
stos
jmp
mov
sub
mov
cmovl
inc
adc
jmp
mov
sub
mov
pop
xchg
add
fist
test
pop
add
add
mov
sub
test
add
add
call
mov
mov
inc
and
movnti
xchg
add
mov
sub
mov
sbb
lods
lahf
mov
std
ins
add
add
test
adc
pop
inc
and
mov
jg
adc
rcl
mov
test
adc
fwait
sub
lods
inc
and
(bad)
inc
inc
stos
fist
test
add
mov
sbb
ret
rol
je
jmp
xor
add
je
idiv
je
push
add
mov
jmp
sbb
mov
js
adc
popf
sub
add
sbb
add
jmp
mov
inc
adc
mov
mov
mov
add
add
jne
fcomp
cmp
add
test
add
scas
je
mov
add
add
sub
jmp
fwait
nop
mov
neg
add
fwait
push
outs
dec
dec
mov
cld
add
mov
add
aaa
ror
pop
jmp
mov
or
and
add
stos
jmp
cmp
add
add
in
lea
mov
cdq
mov
jmp
add
add
or
add
inc
ret
jge
add
and
mov
inc
mov
add
add
xor
xchg
mov
add
add
xor
stos
aam
cmp
imul
add
push
fs
stos
mov
inc
aad
test
jmp
mov
add
and
add
stos
(bad)
cmp
add
test
add
mov
jb
mov
add
test
in
add
add
inc
add
mov
jmp
add
pop
or
add
add
add
add
mov
mov
bound
cdq
mov
ja
(bad)
push
(bad)
shr
mov
ret
aaa
mov
cmp
mov
mov
add
sub
or
xchg
sbb
leave
add
test
cmovne
add
add
push
pop
add
and
add
add
add
lods
xor
data16
mov
mov
jmp
push
mov
mov
push
rol
add
ror
repnz
add
test
add
add
xchg
imul
in
add
fwait
out
test
ss
add
xor
out
mov
mov
sti
movs
or
(bad)
js
fwait
jmp
mov
mov
add
add
push
or
mov
in
out
add
push
cmp
mov
mov
mov
fwait
jmp
mov
sub
add
fidivr
test
add
add
cmp
in
add
add
mov
cmp
mov
gs
pop
shl
add
add
cs
fild
add
inc
adc
call
mov
cdq
idiv
mov
pop
outs
popf
in
add
add
jmp
add
stos
push
jns
clc
out
mov
sbb
or
add
movs
sbb
or
mov
data16
mov
aad
add
add
mov
mov
mov
adc
lods
and
add
mov
and
adc
fwait
pusha
xchg
popf
and
add
mov
jmp
nop
push
mov
push
push
push
and
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
fnstcw
imul
loopne
add
fsub
sub
add
sub
scas
cwde
mov
push
add
in
addr16
mov
jg
lds
or
or
dec
icebp
loop
(bad)
jmp
shl
xor
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
mov
mov
jmp
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
gs
dec
enter
lea
mov
pop
sldt
add
pusha
add
test
lods
add
add
lock
retf
stc
add
cmp
add
add
mov
mov
or
add
and
and
cld
(bad)
(bad)
lock
xchg
dec
add
outs
adc
mov
mov
mov
out
das
add
in
lods
add
or
and
xor
cmps
mov
movs
or
ja
mov
and
cmp
mov
sub
mov
mov
add
cmova
or
popf
xchg
and
and
or
or
cwde
fdiv
and
dec
out
in
jle
fld
pop
dec
add
add
add
in
jmp
add
and
sbb
test
into
iret
push
jb
pop
punpcklbw
jl
mov
pusha
or
sub
mov
ss
fimul
jecxz
add
pop
mov
sub
mov
test
mov
lock
add
add
outs
cmps
fisub
add
jmp
xor
add
jg
out
outs
es
mov
and
jg
sbb
or
and
sbb
stos
dec
(bad)
jo
ins
and
fld
data16
sub
jns
and
int3
enter
loope
mov
je
sti
or
je
mov
add
test
jae
stos
inc
jns
and
mov
xchg
jg
adc
jns
cmp
out
mov
jmp
mov
dec
(bad)
mov
loope
mov
test
test
popf
add
add
add
xor
sub
mov
add
mov
mov
xlat
mov
div
mov
and
jg
jmp
mov
sub
xor
add
add
retf
add
xchg
add
add
ret
inc
ret
push
jg
jmp
mov
int3
enter
div
ins
dec
and
cli
sbb
and
mov
or
cmp
mov
add
retf
push
dec
outs
cmps
ficom
repnz
int3
add
add
add
cli
mov
pmulhuw
add
jmp
mov
retf
nop
std
push
retf
and
xcrypt-cfb
cmps
es
add
outs
test
xchg
cmc
add
and
sbb
add
sub
or
xchg
push
add
call
and
cmc
push
scas
add
sub
push
repnz
add
or
sub
mov
and
xcrypt-ctr
cmps
sahf
add
add
repz
adc
test
or
lock
scas
xor
ds
sbb
out
add
jecxz
fld
add
and
add
sub
loop
stc
push
mov
jg
jmp
cdq
test
add
add
sub
and
je
jmp
mov
into
stc
push
test
shrd
add
add
add
inc
dec
rcr
cmp
mov
sbb
lock
cmp
and
add
add
cmps
ficomp
pop
fsubr
push
add
push
repnz
add
in
sub
adc
and
jo
jbe
adc
jmp
xchg
call
ret
adc
test
(bad)
push
jns
and
add
in
and
mov
lea
and
pusha
or
add
daa
add
popa
sbb
mov
bound
(bad)
ror
enter
cmc
popf
mov
add
nop
and
add
or
sub
cmp
xchg
and
cli
add
mov
mov
mov
mov
mov
dec
(bad)
(bad)
mov
mov
cmp
cmovl
fwait
in
and
add
add
push
add
lock
mov
cmc
mov
add
inc
loop
fnstcw
(bad)
jbe
push
cmp
popf
jg
adc
jmp
aam
sbb
and
add
add
jecxz
xor
(bad)
movs
int3
add
sti
sub
and
cmc
mov
ror
sbb
add
add
setl
lods
and
in
add
and
add
add
add
inc
test
add
push
sar
cmc
jmp
mov
jmp
pop
mov
push
scas
jecxz
add
mov
mov
jmp
(bad)
sti
pop
pop
add
pusha
cmp
mov
mov
btc
std
movs
(bad)
add
add
std
daa
cmp
and
mov
add
jns
sub
sbb
out
push
(bad)
hlt
lods
xchg
pop
xchg
ret
outs
test
or
popf
mov
cmps
mov
test
stos
jo
pop
pop
dec
out
cmp
add
out
adc
add
enter
bnd
jg
add
test
add
add
(bad)
push
mov
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
js
and
dec
add
ja
and
pushf
add
mov
or
mov
ja
inc
pop
add
or
sbb
fdiv
add
dec
inc
sbb
add
add
add
add
cmp
add
sbb
or
sbb
add
jp
and
add
dec
ja
and
mov
es
mov
(bad)
pusha
imul
mov
test
add
add
add
adc
mov
inc
add
jo
lahf
mov
pop
loop
fistp
(bad)
lods
add
add
pop
xchg
hlt
add
jmp
sub
add
shr
lahf
test
inc
add
aam
or
fucompp
clc
or
add
add
sub
mov
and
(bad)
pushf
mov
add
lods
add
add
and
pop
add
sub
mov
add
sbb
add
add
mov
lods
cmps
mov
add
out
or
mov
add
add
sub
mov
icebp
adc
mov
pop
loop
packssdw
rol
add
add
add
(bad)
iret
xchg
sldt
inc
jbe
sbb
data16
add
clc
add
mov
sub
imul
and
add
inc
je
xor
mov
fadd
icebp
das
xor
and
sub
add
(bad)
mov
add
add
add
int3
test
test
dec
dec
(bad)
loope
add
jne
add
mov
sub
mov
and
add
(bad)
test
add
xor
or
add
add
neg
xor
and
jmp
mov
mov
pop
add
mov
test
add
inc
add
mov
hlt
jb
cmps
and
(bad)
std
add
mov
add
dec
add
stos
stc
push
fistp
and
inc
(bad)
and
pushf
add
add
add
mov
sub
mov
out
loope
add
ins
add
add
sbb
sub
mov
jg
dec
cs
add
add
(bad)
adc
and
in
xchg
or
sbb
mov
mov
inc
sub
sub
and
(bad)
aad
add
add
add
add
(bad)
xlat
js
outs
mov
add
jmp
movs
inc
pusha
mov
add
sub
retf
mov
fiadd
jmp
push
test
movs
add
add
sub
jmp
mov
sldt
inc
jbe
icebp
mov
push
add
jmp
add
pop
test
sub
xor
jg
in
test
add
add
add
add
test
add
fsubr
mov
inc
test
add
inc
mov
mov
add
(bad)
lods
sub
push
inc
and
add
jmp
add
mov
xchg
stc
std
sti
mov
hlt
aas
les
pop
jmp
jae
sub
cld
add
mov
bswap
setge
add
add
add
mov
add
sub
imul
jl
add
or
shl
add
jp
push
add
cs
xor
pcmpgtd
fadd
add
inc
add
xchg
test
mov
icebp
add
aam
xchg
sub
je
lods
fadd
sti
mov
loop
or
jmp
and
shl
add
add
mov
jp
sub
mov
sbb
and
je
or
jl
mov
add
icebp
mov
inc
outs
ficom
add
xor
mul
ja
pusha
test
ror
add
ins
pushf
mov
mov
mov
xor
pop
and
je
xor
clc
add
add
imul
enter
mov
add
push
test
mov
jmp
inc
outs
jmp
dec
sbb
add
mov
mov
add
(bad)
xor
popf
das
imul
test
add
or
sbb
add
sbb
(bad)
adc
mov
iret
mov
(bad)
add
loop
pop
inc
ror
add
xchg
add
fstp
mov
sbb
mov
cmp
(bad)
(bad)
mov
mov
mov
les
(bad)
xor
add
inc
or
add
inc
lds
add
loop
sbb
cmp
add
lea
mov
mov
mov
les
(bad)
pushf
sub
and
dec
and
call
mov
mov
cmp
in
inc
retf
inc
add
das
lock
(bad)
inc
pushf
add
lea
cdq
jmp
jl
addr16
or
fild
clc
add
add
mov
and
xchg
ror
dec
pusha
push
mov
sub
(bad)
cli
pop
cmp
cmp
(bad)
or
adc
fidivr
xchg
add
scas
cmps
jb
lahf
sti
add
pop
jmp
mov
mov
jmp
test
mov
cli
mov
mov
add
mov
call
enter
clc
or
add
sahf
and
icebp
add
das
sub
das
add
mov
mov
mov
and
clc
or
mov
pusha
and
add
icebp
add
add
or
and
sub
xor
jmp
mov
mov
mov
push
das
jb
mov
daa
add
inc
inc
pop
jmp
les
sbb
dec
icebp
inc
rcl
inc
jmp
add
mov
or
add
sbb
mov
add
add
cmp
cmps
add
add
mov
rcl
sub
add
cmps
mov
sbb
cmps
add
add
mov
cmp
enter
test
inc
add
push
add
fimul
add
push
and
lock
sti
inc
pop
and
add
add
pop
or
(bad)
pop
es
mov
fs
mov
rcr
clc
cmp
ret
mov
jecxz
or
sti
add
pop
or
fcmovb
cmpps
sar
dec
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movs
int3
and
dec
mov
and
mov
and
and
dec
popa
inc
add
add
enter
jmp
inc
and
or
clc
(bad)
mov
sbb
pop
cmc
shr
mov
and
jno
sbb
das
add
lahf
mov
dec
clc
(bad)
sub
je
jmp
mov
lods
in
ror
daa
test
add
add
pop
aad
imul
lock
mov
mov
psllw
add
(bad)
jnp
add
mov
sbb
and
add
add
std
jle
mov
add
add
mov
mov
mov
pop
xchg
cmp
retf
sbb
or
add
outs
clc
sti
jmp
fs
cmp
sbb
gs
aam
mov
inc
and
jnp
add
or
int3
test
add
out
and
pop
hlt
pop
pop
add
(bad)
call
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
add
dec
popa
inc
add
test
add
jnp
loopne
add
add
call
jle
repz
mov
call
lea
add
inc
adc
call
je
cli
(bad)
(bad)
jge
adc
int3
cwde
cmp
neg
ret
dec
pop
add
xor
sbb
jno
cmp
mov
test
add
mov
test
add
inc
xor
or
add
jbe
and
sbb
cmp
add
stos
arpl
add
jne
repz
mov
sub
(bad)
sbb
mov
pop
add
pop
add
add
mov
fbstp
mov
and
add
add
add
add
jne
xchg
sub
mov
das
test
or
jmp
aaa
test
or
div
aam
daa
fwait
rol
(bad)
cmp
add
mov
or
push
xchg
add
and
inc
add
sub
fmul
jns
(bad)
cld
sbb
mov
inc
test
mov
jg
mov
test
ret
add
mov
add
adc
add
je
jmp
mov
and
and
sub
xor
add
stc
push
and
dec
pop
jmp
mov
fld
add
sub
pop
rsm
lds
add
movs
and
jp
add
jmp
shl
fadd
dec
push
(bad)
fiadd
add
jmp
mov
add
mov
je
(bad)
std
push
ret
movlps
dec
stos
pop
xchg
cmp
add
add
(bad)
and
add
xor
dec
add
jns
(bad)
cld
sbb
mov
jmp
push
mov
add
or
ret
add
mov
and
add
pop
push
sar
(bad)
jmp
jns
add
mov
add
add
and
popf
sbb
sub
fisubr
into
add
xchg
hlt
add
xor
and
add
xchg
mov
test
add
add
(bad)
and
std
add
add
pushf
add
add
pop
jae
je
cmps
or
fadd
add
mov
mov
test
dec
add
sub
mov
add
push
and
pop
jmp
mov
and
sbb
sub
mov
xchg
test
aaa
xchg
popf
and
ins
mov
jge
loop
test
std
repnz
jb
add
jne
test
add
add
pop
ret
dec
sbb
enter
btr
je
cmp
test
add
or
mov
add
std
std
jb
cwde
add
out
add
jne
mov
add
stos
jle
mov
jg
jmp
mov
sub
mov
std
jb
add
add
add
jp
add
add
retf
push
dec
test
(bad)
dec
add
add
ret
cmp
or
fsub
cmc
mov
add
add
xchg
pop
sbb
add
jne
xchg
add
mov
nop
dec
dec
mov
rcr
dec
add
sbb
mov
push
add
add
push
fbstp
add
aad
sub
add
mov
jge
scas
lahf
xchg
add
push
or
iret
jle
cld
add
fild
test
sbb
add
mov
in
pop
pushf
jg
adc
cmp
and
call
jns
add
add
mov
aaa
lock
pop
pushf
jg
jmp
inc
sub
mov
inc
pop
add
sbb
sahf
and
jne
sub
dec
sbb
mov
add
jmp
mov
sub
fadd
data16
and
nop
add
std
jg
jmp
mov
add
add
scas
dec
test
sti
add
add
add
add
movs
pop
push
sub
inc
pop
mov
inc
(bad)
cli
add
add
repnz
jbe
and
popf
sbb
sub
icebp
jp
add
or
add
xchg
add
test
add
add
mov
cwde
lea
add
xlat
les
pop
add
adc
add
sbb
test
and
jne
sub
cmps
retf
out
sti
(bad)
clc
mov
add
add
and
add
ja
xchg
jg
and
jg
mov
repnz
xchg
sbb
add
add
lods
add
stos
mov
je
dec
mov
pushf
hlt
bound
add
xchg
inc
xchg
aam
into
call
xlat
(bad)
push
add
dec
jmp
jns
cmp
pop
popa
movs
(bad)
inc
and
jns
sub
adc
add
fild
add
add
repnz
sbb
test
and
add
mov
fs
bound
xchg
add
test
add
add
push
mov
xchg
xlat
iret
outs
stc
repnz
jmp
pop
test
pop
add
sub
test
and
dec
add
ret
test
mov
add
xor
mov
push
(bad)
add
test
std
bnd
mov
sbb
push
push
ud2
and
pushf
sbb
mov
pop
daa
fimul
test
test
adc
dec
pop
mov
sub
mov
dec
jb
in
add
and
add
sub
mov
pushf
test
add
clc
add
fld
add
std
cmp
mov
xchg
test
push
ss
xchg
add
std
inc
add
inc
test
add
add
dec
add
jnp
and
push
test
pop
pop
add
mov
or
sub
mov
je
jmp
pop
test
mov
aaa
sub
mov
and
je
push
and
add
push
test
add
sub
mov
push
cwde
sbb
fistp
pop
or
mov
pushf
sub
sbb
and
das
test
add
add
mov
aaa
mov
test
mov
inc
and
vmwrite
inc
add
add
add
sub
xlat
inc
and
je
jmp
pop
test
scas
ss
je
lock
fwait
or
clc
sub
stc
test
add
jbe
mov
sbb
scas
jbe
cld
sbb
xor
or
jae
add
sbb
sub
sar
adc
add
ins
add
add
add
sub
mov
adc
adc
ss
and
add
cmc
add
inc
repnz
push
hlt
fmul
ins
std
add
mov
mov
or
inc
and
jp
lock
jmp
pop
jo
adc
add
mov
mov
add
std
add
sbb
sbb
mov
mov
lea
pop
cmp
jle
xor
mov
jmp
cwde
lea
es
mov
add
add
inc
xor
lods
sbb
add
xchg
add
jne
not
sub
mov
pop
xchg
and
cmc
mov
adc
(bad)
rol
and
dec
add
repz
pop
pop
jnp
and
add
pushf
jmp
mov
mov
push
dec
add
or
cmp
hlt
setne
or
mov
repnz
add
dec
mov
mov
mov
js
(bad)
sbb
test
psubusw
xchg
and
add
pushf
or
cs
dec
test
cmc
mov
fdivrp
xchg
je
mov
stos
mov
add
les
mov
pop
std
repnz
sahf
add
mov
or
pushf
add
jo
pop
xchg
add
jns
jmp
mov
mov
dec
mov
add
std
mov
pop
mov
cmp
add
mov
jne
test
pop
add
jmp
jmp
pushf
add
jmp
xor
add
xchg
shl
add
add
ret
push
add
jmp
repnz
sti
(bad)
mov
iret
fs
or
add
mov
and
jl
sub
cmc
ret
and
ret
mov
test
mov
jle
add
bnd
fld
add
jmp
rcr
mov
sbb
bound
repnz
add
xchg
inc
(bad)
popa
test
mov
add
inc
ror
add
fbld
mov
test
dec
test
popf
hlt
add
dec
add
imul
add
jmp
pop
iret
and
add
mov
pop
es
sbb
pushf
mov
out
dec
mov
inc
add
add
xchg
and
add
add
inc
rol
and
popf
hlt
mov
jge
xchg
je
test
jp
dec
cmp
pop
push
add
rcl
inc
cld
add
mov
sub
nop
pop
sub
add
outs
add
les
add
jmp
hlt
lock
daa
dec
mov
xor
fadd
mov
dec
bnd
or
add
cld
mov
add
mov
inc
add
(bad)
movlps
jle
push
xchg
cli
add
test
iret
and
add
add
mov
xchg
adc
add
push
mov
add
test
or
add
inc
add
add
add
(bad)
out
hlt
imul
mov
add
je
dec
cli
pop
jmp
mov
xor
neg
mov
aaa
pop
mov
jne
add
ss
and
add
or
add
add
test
xor
shr
add
das
jmp
add
idiv
leave
push
adc
xchg
add
retf
dec
sbb
lea
shl
inc
ror
add
scas
xor
add
mov
pop
add
jnp
enter
or
inc
add
add
jb
call
out
mov
or
sbb
add
hlt
(bad)
.byte
