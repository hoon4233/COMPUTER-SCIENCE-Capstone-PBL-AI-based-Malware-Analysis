test
or
data16
pcmpgtd
push
xor
data16
or
bound
mov
inc
or
data16
or
push
inc
or
data16
add
pushw
push
pushw
add
data16
pcmpgtd
xchg
pcmpgtd
bound
data16
or
lahf
sbb
xchg
xchg
push
data16
push
data16
mov
pcmpgtd
or
xchg
push
xchg
xchg
pcmpgtd
jbe
data16
mov
pcmpgtd
jne
and
sub
data16
mov
pcmpgtd
add
add
outs
add
test
data16
xor
push
scas
jne
retw
data16
and
data16
in
out
push
inc
xchg
pcmpgtd
sbb
adc
push
scas
lahf
or
data16
add
add
add
push
add
add
add
std
inc
inc
add
inc
inc
add
add
or
push
inc
add
add
add
lock
add
add
xlat
dec
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
add
add
add
xor
add
inc
add
add
add
add
scas
sbb
pop
dec
mov
test
mov
add
add
add
add
add
and
inc
add
jne
outs
je
jb
arpl
push
add
add
inc
add
add
add
sbb
add
les
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
sbb
sbb
inc
add
add
dec
adc
dec
adc
fs
add
add
add
add
fisub
ja
lods
mov
push
pop
jnp
cmps
add
add
aas
daa
add
add
add
adc
inc
add
add
xor
add
or
or
add
add
add
dec
inc
add
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
adc
movs
adc
js
add
test
add
lea
add
mov
add
dec
popa
outs
gs
ins
imul
gs
add
dec
gs
outs
je
jb
arpl
add
hlt
add
add
inc
add
add
add
inc
inc
add
dec
inc
add
or
add
pusha
inc
add
adc
add
add
adc
add
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
sbb
or
add
add
add
adc
add
push
inc
add
add
add
add
add
add
push
inc
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
arpl
add
add
je
sub
je
inc
add
(bad)
xor
add
xchg
sbb
add
add
movs
pop
inc
add
sub
movs
sbb
add
add
inc
add
add
add
add
inc
add
add
clc
pop
inc
add
sub
xor
inc
add
add
inc
add
add
add
inc
sbb
add
add
jo
inc
add
sub
push
sbb
add
add
inc
add
add
add
pop
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
jo
sub
ins
sbb
(bad)
(bad)
(bad)
push
inc
add
add
add
pop
inc
add
adc
xchg
inc
add
add
sub
inc
add
adc
xchg
inc
add
add
push
pop
inc
add
adc
xchg
inc
add
add
js
inc
add
adc
xchg
inc
add
add
sub
jmp
add
add
add
add
inc
inc
add
(bad)
(bad)
inc
add
add
inc
add
sub
inc
outs
inc
mov
xchg
add
add
add
sbb
dec
sbb
or
add
or
add
add
add
add
add
(bad)
(bad)
push
add
sbb
add
add
sub
inc
add
inc
add
add
add
adc
(bad)
(bad)
(bad)
dec
add
add
add
inc
add
add
add
sbb
push
add
add
add
add
inc
add
add
push
gs
popa
aaa
add
inc
jns
outs
outs
arpl
jne
xor
add
add
jne
outs
je
jb
arpl
adc
retf
pop
cmp
push
hlt
adc
dec
pop
sub
loope
dec
cmps
cmp
in
dec
xchg
fisub
ja
lods
mov
push
pop
jnp
cmps
into
sub
cli
and
dec
lods
xor
or
stos
add
xchg
pop
popa
ins
ins
popa
jb
add
cmp
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
lods
sbb
add
add
push
add
add
add
add
inc
add
add
add
add
add
jae
add
dec
lods
xor
or
stos
add
xchg
push
jae
popa
je
jae
add
add
or
xor
or
stos
add
xchg
inc
bound
fs
cmp
add
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
or
dec
add
add
add
bound
add
ins
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
dec
xor
jb
add
imul
cs
add
add
adc
add
inc
gs
jb
outs
je
jb
popa
je
push
add
sbb
cld
sbb
add
add
test
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
sbb
add
inc
imul
gs
push
dec
outs
je
imul
outs
outs
add
add
add
add
nop
arpl
mov
or
je
jmp
push
mov
call
jmp
add
add
add
outs
jbe
ins
jo
xor
fs
ins
add
add
add
gs
test
inc
add
add
pushf
arpl
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
add
ins
ins
push
imul
outs
arpl
cld
sbb
add
sbb
add
test
inc
add
or
je
jmp
push
mov
call
jmp
add
add
push
add
add
add
add
add
add
imul
xchg
add
add
add
add
add
add
add
add
sbb
add
add
add
add
cmp
add
dec
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
movs
sbb
inc
add
add
add
lods
xor
or
stos
add
xchg
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
inc
add
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
dec
outs
push
je
inc
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
inc
jo
jns
add
pop
pop
jbe
popa
inc
jns
fs
pop
pop
jbe
popa
push
popa
jb
imul
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
push
dec
xor
add
dec
xor
add
mov
ja
lods
mov
push
pop
jnp
cmps
adc
retf
pop
cmp
push
hlt
adc
dec
lods
xor
or
stos
add
xchg
out
add
push
add
add
add
jo
popa
aaa
add
fs
jns
add
add
inc
add
ds
add
ins
je
add
pop
add
inc
dec
ss
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
sub
and
mov
and
mov
and
mov
and
mov
cmp
mov
cmp
mov
and
mov
and
movs
and
mov
cmp
cmp
and
mov
cmp
mov
and
mov
and
mov
and
mov
cmp
mov
and
movs
cmp
mov
and
mov
cmp
mov
cmp
mov
cmp
test
mov
push
cwde
retf
jb
ss
sbb
mov
and
jns
dec
call
or
xor
sahf
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
or
adc
shl
jge
(bad)
push
and
or
push
cmc
jbe
(bad)
cwde
xchg
pop
xor
in
out
daa
sub
out
push
movs
inc
scas
ss
es
jge
sbb
lods
xchg
add
call
cmps
in
push
xchg
idiv
ins
add
or
mov
add
inc
cmp
push
nop
in
xchg
pop
mov
jecxz
pop
sbb
push
pop
bound
(bad)
and
div
push
push
bound
mov
fimul
inc
mov
addr16
imul
daa
cmps
cmp
fwait
dec
mov
loope
jge
stos
fstp
(bad)
into
outs
popf
in
adc
jl
addr16
ja
int
dec
mov
push
cwde
retf
jbe
ss
cwde
and
js
jns
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
icebp
sbb
push
fcom
pop
ret
retf
(bad)
dec
lods
sbb
sub
pop
mov
jecxz
pop
sbb
dec
ss
(bad)
and
bound
mov
fimul
mov
addr16
imul
mov
xor
xor
cmp
xor
into
dec
mov
adc
jl
addr16
ja
fld
or
ss
test
ins
dec
std
adc
out
gs
pop
xchg
call
loopne
stos
xor
push
fnstsw
jle
mov
popf
push
cmc
cmp
cdq
dec
gs
inc
rcr
sbb
shl
mov
jecxz
push
push
xor
push
push
std
pop
dec
(bad)
sbb
(bad)
mov
movs
je
xor
and
out
fcomp
jmp
in
call
mov
fmul
pushf
cmp
out
div
dec
jb
sub
ret
(bad)
xor
stc
xchg
jl
xchg
push
loopne
repz
repnz
push
(bad)
out
or
inc
push
bound
mov
mov
xchg
push
push
inc
or
lods
jecxz
xchg
sbb
arpl
pusha
test
add
add
(bad)
in
xlat
pop
mov
sub
adc
scas
imul
ret
and
push
gs
adc
int
sbb
popa
mov
mov
pop
int
mov
or
data16
dec
xchg
or
adc
leave
push
jmp
add
int
pusha
mov
dec
mov
retf
fadd
ret
or
outs
into
mov
pop
cmp
shl
cs
xor
ins
data16
cmc
retf
arpl
ficomp
push
daa
loope
ja
add
xchg
scas
sbb
pop
sbb
sub
sub
pop
arpl
enter
stos
pop
or
push
psubusw
mov
cwde
movs
mov
addr16
(bad)
div
adc
pushw
popf
shr
mov
jmp
call
jge
hlt
adc
sub
addr16
cld
js
mulps
test
xor
fs
leave
leave
out
(bad)
pop
sub
add
push
mov
repz
fistp
je
sbb
xor
shl
lock
or
pop
jg
cdq
punpckhwd
xchg
inc
sub
imul
in
sub
cwde
out
(bad)
inc
adc
xlat
lahf
xchg
call
and
push
mov
das
pop
aaa
ret
or
mov
push
jns
jae
mov
or
mov
mov
sub
sub
add
mov
jecxz
add
loop
fs
ret
pop
movs
lods
xchg
pop
sbb
or
sahf
sar
fimul
inc
mov
xchg
pop
mov
xor
sub
add
jne
cmp
retf
or
lahf
or
out
mov
pop
loope
les
repz
pop
xor
je
ss
xchg
sub
pusha
push
fild
std
adc
cmp
hlt
lods
mov
cmp
inc
sub
sbb
cmp
dec
(bad)
mov
retf
loop
pop
dec
loop
mov
dec
iret
dec
xchg
mov
cwde
dec
add
sti
cwde
movs
push
cmp
pop
xchg
mov
sbb
jg
sub
fiadd
int
jno
ds
xor
scas
cmps
icebp
push
call
in
fstp
clc
jge
jmp
mov
les
sub
test
icebp
jnp
sub
nop
mov
jp
dec
add
jno
test
xchg
test
pop
sbb
fimul
mov
xlat
pop
cmp
clc
push
leave
iret
xor
mov
in
push
aas
fnstsw
xor
inc
add
add
fidiv
dec
jbe
sbb
mov
into
sbb
loop
mov
push
sbb
add
daa
cmc
mov
leave
leave
jmp
dec
or
cmps
ret
inc
gs
hlt
mov
mov
cs
mov
lds
or
mov
push
push
mov
ja
dec
sub
cmp
mov
jo
jae
add
mov
cmp
mov
fwait
xor
push
pop
loopne
int3
jp
sahf
mov
ins
ret
(bad)
shr
jecxz
mov
push
cld
xor
retf
mov
mov
mov
or
fisttp
jnp
shr
aaa
xchg
xchg
pop
mov
mov
into
dec
arpl
and
sub
fdivrp
mov
pop
movs
xor
sub
xchg
pop
sbb
mov
test
pop
(bad)
pop
loope
jge
and
jne
jl
jl
addr16
push
and
loope
and
dec
inc
out
lods
dec
inc
cmp
shl
inc
mov
fisttp
add
xchg
and
dec
mov
cmc
lahf
and
pop
pop
mov
rcl
push
jecxz
cmp
retf
jne
pusha
mov
lock
or
adc
xchg
xor
pop
jmp
push
push
ins
push
mov
pop
xchg
sbb
xor
das
es
mov
loop
xchg
call
rcl
nop
xor
xchg
mov
mov
push
out
bound
mov
sub
outs
pop
or
dec
or
xchg
push
loope
ss
mov
cmp
je
sub
push
pushf
mov
call
cmp
cmps
xchg
cmp
cmp
mov
pop
sub
push
in
ret
sahf
enter
gs
mov
into
jne
cmp
jns
int
sbb
popa
mov
push
mov
mov
jno
push
mov
jl
mov
mov
shl
hlt
je
js
add
jge
xor
ret
push
adc
xchg
push
push
and
call
(bad)
xor
in
shr
push
mov
push
out
popf
imul
sbb
jg
test
lods
pushf
repnz
dec
pop
or
xlat
pop
jnp
mov
pop
js
(bad)
imul
iret
xchg
movs
daa
and
mov
add
iret
mov
add
add
sub
push
sbb
or
lods
sbb
cmps
loope
jge
out
and
xchg
movs
pop
jb
pop
aad
mov
mov
sub
loopne
movs
xchg
mov
lock
or
xor
iret
add
bound
ret
and
cmc
sbb
loop
loop
dec
stos
adc
arpl
adc
add
cmp
xor
mov
test
sahf
push
das
mov
sbb
retf
shl
jnp
test
mov
cmps
push
jbe
add
inc
mov
jmp
dec
xchg
test
mov
iret
xor
(bad)
rol
push
jnp
shl
push
pusha
mov
inc
push
add
stos
adc
icebp
sub
sub
arpl
mov
addr16
sub
xlat
fdivr
dec
int
xchg
jae
movs
ror
adc
dec
xor
and
loop
movs
scas
popf
jae
mov
cmps
xor
adc
inc
mov
rol
test
xchg
cmp
repz
jle
add
pop
mov
dec
jno
mov
cs
sbb
jg
dec
cmp
sub
or
ins
adc
cmp
push
jecxz
cdq
(bad)
das
adc
fiadd
mov
ins
xchg
fcmovnb
mov
and
sar
jp
push
(bad)
idiv
nop
mov
adc
call
mov
jg
popf
sub
jl
mov
rcl
pop
lock
add
aad
shl
lods
pusha
fwait
in
jge
inc
lahf
(bad)
(bad)
sub
add
jle
stos
ds
mov
and
fdivr
jecxz
imul
dec
aaa
sbb
mov
jne
mov
push
iret
sbb
repz
js
cwde
mov
mov
sub
sbb
lock
xchg
jno
inc
push
gs
cdq
ss
fisubr
hlt
sti
sub
cmp
mov
cmp
push
pop
xor
cwde
bound
mov
ficomp
adc
jbe
inc
leave
sbb
jne
mov
ror
out
fcmovnb
aas
pop
sbb
shl
in
jnp
pop
loopne
int3
jp
sahf
imul
and
add
sub
out
mov
fcom
lea
neg
aad
int3
or
pop
and
test
xor
or
and
and
push
cmp
pop
rcr
add
add
mov
arpl
mov
icebp
mov
xor
pop
mov
mov
les
cld
mov
mov
stos
fld
and
xor
and
aam
and
shl
cld
jo
mov
icebp
and
mov
xchg
inc
push
iret
hlt
xor
ss
mov
call
sbb
dec
jnp
sbb
pop
pop
mov
sar
mov
les
mov
and
lea
jmp
dec
sbb
push
scas
cmp
fistp
push
jge
into
adc
out
mov
xor
test
push
loop
bound
and
dec
ja
sbb
xor
pop
push
daa
pop
push
imul
cmc
push
or
aas
pop
push
adc
js
aad
aad
add
jne
fild
xchg
inc
mov
sub
out
inc
push
pop
imul
mov
movs
and
into
outs
xchg
lahf
cmc
and
loop
dec
jle
fnsave
mov
ret
push
fcmovnu
inc
xchg
cmp
push
out
or
inc
mov
adc
sahf
adc
push
push
mov
call
sub
movs
pop
(bad)
cmp
xchg
dec
(bad)
adc
pop
push
jecxz
mov
stos
mov
mov
mov
jl
mov
xor
add
shl
inc
or
sbb
(bad)
pop
jbe
imul
ins
sbb
sub
xlat
push
xor
out
mov
add
mov
arpl
push
fist
mov
or
pop
mov
add
inc
mov
in
stos
loope
xlat
sti
test
push
push
ror
fs
sub
inc
rcl
lods
mov
jb
popa
sbb
jnp
pop
ja
(bad)
into
pop
jg
addr16
sti
icebp
fmul
inc
sbb
push
fild
frstor
aas
add
pop
int
(bad)
fadd
pop
push
inc
retf
cmps
mov
xor
inc
data16
pop
daa
outs
in
pop
xor
sub
imul
int
xchg
xor
mov
in
int
pusha
push
adc
iret
xlat
mov
xchg
mov
xchg
and
(bad)
and
not
adc
xchg
call
mov
fild
cmp
arpl
jl
jl
repnz
push
sub
or
enter
nop
xchg
and
jl
mov
and
add
mov
ja
dec
or
dec
mov
fs
pop
iret
mov
pmulhw
xlat
mov
dec
(bad)
mov
xchg
bound
int
arpl
xor
adc
mov
mov
add
data16
and
jns
sbb
push
jp
enter
xchg
mov
outs
cmc
clts
repnz
int
(bad)
cld
adc
addr16
dec
popf
fincstp
dec
inc
dec
aaa
or
outs
scas
pop
cmp
int3
(bad)
jmp
dec
dec
adc
pusha
mov
test
inc
sbb
repz
mov
out
adc
retf
xchg
mov
(bad)
or
retf
dec
addr16
data16
mov
xor
mov
xchg
loope
stos
(bad)
shl
(bad)
in
xor
xchg
mov
sbb
out
jp
in
les
mov
call
out
(bad)
pop
adc
das
sahf
fisttp
inc
and
icebp
pop
call
add
cmp
shl
cmps
mov
test
xchg
jnp
jmp
xchg
and
cmp
jmp
adc
add
push
test
jbe
mov
mov
aam
jp
outs
out
mov
pop
inc
fwait
sbb
inc
xchg
jne
not
jmp
cmp
inc
and
cmp
pop
mov
add
mov
in
xchg
push
mov
lods
sbb
xchg
mov
ins
dec
add
in
ds
pusha
push
and
or
cmps
cmc
jb
xchg
and
int3
jmp
mov
shl
pop
mov
cmp
out
inc
push
rcl
jg
xchg
or
inc
fadd
test
jl
jp
fs
rcl
pop
mov
idiv
dec
ins
mov
movs
mov
mul
leave
neg
stc
xor
loope
add
cmp
loopne
cdq
sti
push
mov
sub
sbb
movs
xor
int
into
mov
cwde
aam
shr
mov
cmp
test
jecxz
jp
fs
std
adc
jmp
repz
mov
pop
cmp
xor
retf
mov
jmp
adc
loopne
mov
jmp
adc
jge
inc
lahf
cmp
out
ja
or
mov
and
sub
test
push
ss
xor
stc
cmp
sbb
ss
add
repz
(bad)
aad
in
or
test
stos
push
xchg
push
lock
add
add
outs
pop
stos
cli
in
xchg
cmps
std
hlt
mov
or
rol
sbb
push
or
xchg
daa
lds
out
jno
pusha
push
scas
jo
mov
inc
cmps
mul
pop
inc
sub
shr
je
pop
cwde
xor
retf
gs
cwde
adc
cwde
mov
jmp
adc
mov
cli
stos
cmp
lods
sbb
mov
xchg
inc
shl
mov
rdmsr
cmps
mov
mov
(bad)
pop
jg
data16
pop
sub
mov
inc
cmps
scas
mov
inc
jno
jne
pusha
in
mov
adc
pusha
push
iret
xor
cmp
cmp
xchg
and
out
jbe
and
sub
test
mov
xor
sub
push
sbb
or
adc
call
mov
push
dec
mov
and
jo
adc
fisttp
sti
stos
out
test
mov
sbb
aas
rcl
scas
dec
sbb
into
and
inc
xchg
or
lods
enter
imul
pop
push
mov
pop
les
adc
addr16
not
test
mov
inc
jne
inc
push
out
inc
jns
and
cmp
test
or
out
data16
pop
xchg
adc
inc
rcl
stos
adc
jb
fistp
adc
push
rcl
jmp
hlt
xor
xchg
add
push
test
inc
pusha
push
add
or
test
dec
test
pop
or
int
xor
push
enter
test
dec
icebp
jp
sbb
push
std
sub
sahf
pop
aaa
in
ins
aam
stos
nop
repnz
mov
icebp
push
push
lock
outs
sbb
aas
fnstsw
jbe
ja
mov
(bad)
and
or
xor
mov
popf
(bad)
mov
popf
int
movs
xor
inc
aam
movs
in
loope
mov
cmps
rcr
ins
cld
out
xor
enter
xchg
fld
push
sbb
jnp
pop
imul
arpl
xadd
js
stc
test
dec
call
xchg
scas
cs
fidivr
push
dec
aaa
adc
mov
xchg
js
mov
sub
fs
cmp
js
cdq
enter
dec
mov
ss
(bad)
pop
jmp
int3
call
nop
xchg
fild
ds
and
cmp
jb
lods
cli
idiv
adc
mov
icebp
mov
gs
les
(bad)
xchg
sub
fwait
sahf
push
or
sub
jge
aam
out
cmp
mov
cmp
jne
fwait
ret
(bad)
stc
mov
xor
inc
push
loope
mov
pop
adc
movs
pusha
mov
sbb
inc
cmps
daa
mov
xlat
mov
xchg
(bad)
jmp
fdivr
mov
cmp
push
(bad)
in
adc
xchg
or
rdmsr
cmp
ja
mov
or
repz
fild
test
pop
aaa
imul
int
fimul
dec
(bad)
jno
cs
sub
add
aaa
or
dec
sub
mov
leave
xchg
inc
cmp
ss
scas
test
cmp
adc
xchg
shr
ins
ins
and
pop
mov
cmp
shl
mov
jmp
pop
das
cdq
pop
daa
add
sbb
sbb
or
in
jb
dec
clc
sub
cmps
sub
call
test
cmps
add
loop
fs
les
(bad)
and
aaa
mov
stos
xlat
leave
pop
add
iret
into
push
xchg
retf
sbb
jge
mov
pop
xlat
cld
lods
fmul
mov
push
retf
dec
(bad)
add
jne
popa
cld
jae
adc
ret
or
xchg
fwait
leave
leave
push
mov
scas
(bad)
movs
pushf
pop
xchg
push
adc
adc
mov
jle
out
cs
push
xor
call
sti
mov
jmp
in
dec
lods
pop
sub
and
test
cmp
lods
ss
mov
mov
mov
mov
rcl
or
pop
ss
sub
jno
(bad)
(bad)
in
add
jp
aas
cdq
pop
dec
pop
out
out
pop
pushf
sbb
sbb
lds
dec
add
mov
sub
push
shr
xchg
sbb
(bad)
retf
ss
rcr
fld
xor
mov
cmps
test
dec
mov
xor
in
push
mov
dec
das
cwde
add
dec
mov
stos
jge
mov
cmp
sub
pushf
pop
ja
ss
mov
into
ss
out
fcmovnu
repz
mov
or
ret
js
or
mov
sub
xchg
xor
pop
xor
fcom
mov
xchg
dec
bound
cmp
push
mov
sub
inc
jns
and
mov
mov
or
mov
neg
xchg
test
sbb
inc
or
push
shl
bound
add
mov
add
outs
fldcw
sbb
or
and
stos
cmp
fwait
push
sub
mov
dec
arpl
sar
and
inc
int
add
iret
rcl
mov
in
or
inc
sub
mov
pusha
popf
mov
inc
pop
es
push
ret
addr16
mov
xor
gs
mov
pop
pop
mov
jne
sub
test
sub
cmp
and
mov
int
jne
or
(bad)
push
fnstcw
mov
js
ret
jo
xchg
fwait
cmps
mov
push
jmp
sbb
or
les
xlat
mov
mov
add
adc
cmps
jno
shl
pop
cwde
daa
cmps
dec
mov
out
pop
or
ret
test
mov
test
jnp
dec
mov
outs
sahf
adc
out
mov
push
jo
and
nop
mov
sbb
loop
int3
mov
sub
icebp
sbb
fcom
sbb
or
movaps
xchg
adc
jb
dec
push
mov
outs
or
rcr
push
jle
retf
sub
dec
and
imul
int
cwde
mov
xchg
jnp
pop
ja
ss
mov
dec
ss
pop
ins
out
int
and
sti
adc
jmp
cld
xor
dec
mov
loopne
es
mov
les
cwde
aam
inc
test
sbb
add
ret
inc
dec
ss
mov
mov
leave
inc
out
pop
(bad)
aas
int
push
add
sahf
(bad)
cmp
movs
loop
fcom
out
in
dec
xlat
not
retf
jge
aad
add
stos
adc
nop
sbb
xor
xchg
mov
(bad)
dec
adc
mov
mov
jae
js
(bad)
cwde
adc
jmp
daa
cmp
cld
mov
push
inc
mov
add
loopne
fcmovne
xor
gs
shr
jmp
dec
enter
les
jo
xchg
inc
dec
and
mov
cmps
mov
push
pusha
loop
mov
out
sub
inc
adc
stos
sbb
mov
jp
adc
or
mov
pop
je
in
jae
(bad)
shr
lods
push
jmp
lods
push
imul
aaa
jle
adc
ss
add
jmp
int3
in
int3
inc
xchg
fild
(bad)
pop
ins
fisttp
add
(bad)
xchg
sbb
cmps
adc
push
icebp
add
aad
scas
mov
in
push
fcomip
cmp
aam
pop
addr16
jge
pop
je
(bad)
push
pop
mov
mov
push
dec
js
test
sbb
push
sub
xchg
cmps
cmp
aam
or
dec
cmp
mov
xor
ret
ficomp
sub
aaa
frstor
fstp
xor
imul
int
pop
jge
stos
sbb
jb
mov
jl
out
sbb
les
add
fsubrp
or
push
test
or
test
add
pop
pop
xchg
or
outs
lahf
rcr
inc
imul
into
xor
inc
aaa
adc
lods
mov
sbb
and
push
sub
sbb
sub
sbb
inc
retf
or
movs
int3
call
pop
xchg
fild
mov
xor
ficomp
cmp
push
or
adc
lods
jne
adc
arpl
pop
pop
inc
cmp
fwait
popf
push
dec
clc
dec
push
mov
aam
in
xchg
pop
push
xchg
xor
sbb
mov
jle
cmp
ret
fisubr
sub
pop
daa
mov
popf
sar
mov
sub
or
sbb
daa
pop
dec
xlat
mov
xchg
call
sbb
mov
outs
stc
scas
cdq
movs
mov
sub
mov
xchg
loopne
mov
ret
cmp
add
push
pop
jecxz
sbb
adc
or
jp
ins
and
inc
and
fstp
mov
and
mov
pop
(bad)
lahf
sub
pop
push
xchg
add
dec
add
loope
clc
or
lods
enter
cmp
dec
les
in
cmp
repz
cwde
mov
cdq
lock
movs
xchg
popf
clc
ja
arpl
cmps
jbe
jmp
sub
scas
mov
hlt
mov
push
sub
icebp
std
xor
test
pop
in
lods
jmp
pop
mov
mov
aaa
jecxz
mul
push
lods
pop
mov
jne
xor
push
sub
repnz
imul
(bad)
jb
jmp
pushf
mov
add
outs
xor
add
sbb
jmp
out
jg
in
aam
fstp
mov
mov
cmp
dec
mov
sub
es
fnstenv
rol
fild
sbb
adc
ds
lds
(bad)
mov
repz
aad
retf
or
sbb
add
push
scas
inc
psubb
data16
sar
xchg
xchg
fimul
add
scas
mov
push
cmps
popa
jns
in
push
lahf
cmps
ror
cmp
daa
(bad)
in
mov
push
push
(bad)
push
pop
xor
stc
xchg
jl
xchg
ins
mov
jmp
mov
dec
pop
retf
pop
mov
push
add
xchg
and
test
xchg
(bad)
xor
shr
inc
mov
adc
ins
imul
pop
xlat
push
sub
mov
pop
stc
cmp
cmp
loopne
das
mov
icebp
inc
loop
inc
jbe
mov
mov
pop
test
xchg
mov
xchg
loop
adc
pop
sti
inc
mov
scas
mov
mov
lds
xchg
mov
dec
mov
in
aam
add
inc
add
scas
sub
adc
dec
ss
jns
adc
xor
push
retf
jg
mov
sbb
ficomp
mov
and
(bad)
lods
test
dec
hlt
cmps
push
xchg
xchg
imul
sub
rcl
or
mov
pop
push
scas
adc
outs
adc
pop
sahf
shl
cwde
adc
repz
and
cmps
imul
faddp
test
dec
mov
ss
push
or
xchg
hlt
mov
push
scas
test
and
lea
mov
ror
hlt
mov
in
push
mov
ins
scas
mov
not
mov
frstor
add
jle
sbb
inc
xchg
and
push
cmps
sti
inc
xor
retf
adc
mov
xor
pop
jg
ret
jnp
lahf
adc
imul
ret
cmp
into
mov
sub
cld
lahf
xchg
jmp
mov
mov
fisttp
cmp
nop
outs
test
dec
and
inc
aam
hlt
rcl
push
dec
ins
pop
jmp
ret
or
push
cmp
adc
push
(bad)
xlat
and
mov
stos
inc
sub
icebp
push
pop
fistp
and
jae
js
hlt
sbb
inc
dec
aas
frstor
in
sbb
dec
cmps
inc
pop
mov
mov
out
ds
out
(bad)
into
in
jne
popa
cmp
lahf
pop
add
icebp
mov
(bad)
mov
ret
push
je
jp
fisttp
frstor
scas
rol
lea
aad
(bad)
int
arpl
mov
push
mov
inc
add
inc
add
scas
sub
xchg
cmp
fild
add
add
mov
lock
push
adc
mov
mov
pop
xchg
fcmovne
(bad)
and
ja
and
stc
pop
push
xchg
and
mov
sti
arpl
mov
cmps
adc
test
sub
ficomp
cmp
push
push
xchg
push
lock
pop
nop
in
xchg
jb
cmps
sub
sub
push
rcl
sahf
sbb
dec
or
push
bound
fdivrp
mov
fist
sbb
popa
sti
push
rcl
cmp
fimul
bound
outs
pop
retf
cmp
dec
xor
push
popa
or
adc
jl
imul
mov
and
scas
ss
sub
int3
test
test
push
or
inc
je
add
popa
hlt
add
jo
xchg
mov
sub
xchg
scas
ss
xchg
adc
xchg
jmp
mov
or
pop
jmp
pop
dec
and
(bad)
imul
sub
jns
jb
sar
mov
iret
and
sbb
ins
movs
ds
xlat
or
out
mov
and
lods
sub
daa
xchg
sbb
cmp
stos
xchg
dec
xor
out
in
jecxz
or
lea
jo
xchg
movs
lods
xchg
push
sti
dec
push
and
es
out
xor
cmp
mov
jle
pop
int3
push
test
(bad)
jmp
push
std
sbb
in
(bad)
into
xchg
shr
jne
mov
fistp
mov
gs
pop
cli
jno
in
out
movs
pop
cmp
or
mov
sub
pop
aad
mov
sar
adc
rol
jmp
xchg
pop
add
in
sbb
out
inc
inc
xor
xor
loope
or
jp
clc
enter
sbb
cmp
stos
mov
push
call
xor
(bad)
ins
and
outs
sub
add
std
arpl
push
fcomip
mov
(bad)
in
retf
fist
into
add
push
add
(bad)
cmp
push
add
or
aas
add
fadd
stos
loopne
js
addr16
sbb
and
mov
fcom
and
movs
lea
rcl
mov
push
scas
jne
icebp
in
mov
int3
div
ins
lock
jo
inc
fwait
add
mov
push
xor
dec
not
and
shr
jno
sbb
into
repz
or
mov
xchg
cmp
std
call
xchg
cmps
mov
inc
sbb
mov
inc
xor
cmp
push
inc
push
retf
lock
mov
jbe
mov
in
repz
cmps
gs
ficomp
rcl
ficomp
loop
push
jg
sar
dec
inc
or
cs
mov
das
sar
out
jo
xchg
js
cmp
ror
dec
or
or
mov
pop
leave
or
sub
pop
pop
loopne
push
in
sub
dec
data16
mov
cmp
pop
and
lahf
push
cmps
push
aad
jge
and
mov
add
sub
pop
xchg
jge
pop
xchg
test
int3
cmp
pop
xchg
inc
in
lds
dec
sub
pop
push
retf
pop
call
js
adc
and
xchg
adc
xlat
shl
ja
add
ss
ds
les
test
les
mov
lea
and
cld
push
pop
jmp
sub
out
cdq
push
or
xchg
imul
jmp
xchg
adc
cmps
jbe
sub
dec
push
int
dec
in
loope
xchg
jne
xlat
aad
fisttp
push
(bad)
pop
dec
cs
cdq
fst
les
iret
shl
mov
gs
mov
dec
outs
loopne
xor
shl
jne
test
mov
pop
mov
jle
dec
push
jno
pop
mov
mov
ficomp
dec
mov
mov
mov
add
dec
cs
pop
jb
imul
das
add
jge
pusha
in
cld
cdq
jbe
sbb
out
cmps
cmp
xor
test
es
fsubr
cmp
and
xor
xor
test
mov
sar
ret
and
dec
push
pop
cmps
ja
(bad)
ins
fstp
sbb
outs
pop
popf
xchg
pop
sar
and
out
cmp
fsub
fild
mov
xchg
cld
icebp
fcomp
sub
retf
sbb
jbe
push
jmp
push
test
jp
pop
nop
mov
or
je
lock
add
je
arpl
and
inc
imul
pop
movs
retf
push
sbb
xchg
div
jp
mov
aas
std
xchg
add
ret
or
sbb
pop
mov
fbld
mov
mov
jmp
pop
stos
inc
add
push
repz
pop
mov
push
ds
xor
movs
repnz
sub
lahf
rcr
(bad)
hlt
aas
or
(bad)
push
ds
xchg
mov
cdq
lds
lods
pushf
xor
hlt
(bad)
outs
mov
pinsrw
pop
or
push
(bad)
cmp
sub
push
popa
pusha
fsubr
adc
loope
fsub
dec
and
and
mov
add
aam
jnp
xorps
push
ficomp
mov
adc
sbb
loope
stos
jg
inc
or
ja
fst
(bad)
xchg
retf
mul
dec
rcr
call
mov
adc
mov
lods
cmps
inc
test
lds
addr16
rol
and
sbb
aaa
sbb
push
cmp
lods
in
sbb
loop
cdq
push
mov
iret
out
xor
or
inc
in
(bad)
call
cdq
cmp
pop
mov
or
or
fisub
sub
push
cmp
jge
mov
inc
pusha
push
fsub
push
pop
aam
outs
out
add
xor
out
push
fistp
push
rol
cmp
xchg
sbb
cmp
mov
cmp
ror
test
mov
out
sub
test
js
cmp
mov
push
std
ja
xor
mov
dec
add
retf
imul
push
adc
loop
mov
gs
ror
lock
mov
adc
sub
fsub
mov
jp
popa
inc
bnd
dec
adc
daa
jmp
mov
shl
pop
pop
add
jge
pusha
in
retf
das
sbb
loop
cmps
cmp
gs
dec
aaa
and
sbb
lahf
dec
retf
adc
(bad)
ss
mov
and
cmp
jge
push
into
inc
xchg
les
(bad)
call
test
push
fwait
mov
daa
gs
xor
pop
jmp
adc
sbb
ret
fwait
dec
sub
mov
pop
xchg
fisttp
out
pop
lods
fwait
push
pop
outs
aam
repz
mov
retf
dec
jmp
fimul
or
push
ret
cmp
sbb
sbb
cmp
call
nop
and
inc
inc
and
shl
es
popf
xchg
shl
xor
fwait
scas
sbb
rcl
ss
xchg
sub
dec
push
out
repz
sub
(bad)
or
add
jge
out
xchg
push
xor
sub
sbb
mov
(bad)
loopne
sbb
sar
bound
mov
mov
div
in
push
pop
pusha
push
push
test
sub
cld
sti
xchg
xlat
or
add
pop
xor
mov
push
stc
call
xchg
pop
mov
pop
jg
(bad)
cdq
mov
mov
aad
call
pushf
mov
loop
add
xchg
pop
hlt
xchg
inc
sub
ficomp
push
push
xchg
cmp
(bad)
sti
pop
bound
mov
or
xor
sub
test
in
jle
pop
pop
mov
sub
add
or
mov
push
or
retf
push
popa
inc
jecxz
inc
cmp
es
(bad)
cmp
pop
rol
je
jp
cmps
and
sbb
lods
cmp
cmp
scas
or
daa
(bad)
pop
mov
inc
mov
mov
xor
and
pop
mov
rcl
std
sub
dec
mov
mov
mov
lds
std
es
dec
jle
rcl
jmp
lea
pop
iret
es
jmp
sub
add
in
out
repnz
jp
fiadd
mov
sbb
add
(bad)
adc
fdivr
jl
pop
nop
loope
aam
ins
xchg
shl
loop
xlat
dec
into
sub
pop
scas
xchg
jmp
jl
lods
fcmovnbe
dec
add
(bad)
xchg
test
push
xor
out
test
aad
daa
movs
ins
cmps
inc
add
cmp
(bad)
into
pop
outs
jo
sub
and
nop
push
pop
aad
jns
mov
push
pop
inc
mov
and
stos
sbb
mov
sub
xor
into
or
or
push
bound
mov
lock
mov
push
stc
data16
pop
cmp
sbb
pop
xor
arpl
faddp
ror
inc
jbe
mov
mov
pop
aam
(bad)
aam
jg
sbb
popa
jecxz
leave
sub
xor
mov
es
in
jno
mov
and
pusha
stos
add
ins
lods
push
fdiv
mov
xor
dec
stos
test
ret
push
test
jecxz
mov
mov
scas
xchg
push
pop
outs
and
and
cmovae
mov
call
retf
aas
mov
in
movs
mov
xchg
push
push
add
daa
cmps
stos
cmps
mov
xchg
push
repz
dec
mov
xor
cmp
not
fidivr
dec
jle
jae
std
je
ss
and
add
ja
aas
jge
lock
out
data16
fisub
mov
push
mov
cmp
inc
cwde
xchg
loop
jmp
adc
jne
push
push
fs
call
xchg
int3
mov
repnz
or
enter
push
(bad)
dec
pop
mov
cmp
(bad)
fisttp
dec
fsubr
sbb
shr
push
mov
scas
mov
movs
shl
add
js
into
(bad)
add
sbb
pop
pop
sub
sub
pop
xlat
cmps
sub
iret
xor
push
pop
push
add
add
or
pop
mov
repz
mov
mov
cwde
cmc
imul
in
pop
iret
daa
dec
sub
push
jns
loope
test
mov
clc
loopne
mov
and
push
cwde
retf
mov
retf
sbb
std
mov
xchg
mov
out
add
js
or
xchg
cmp
ret
call
mov
jg
popa
scas
aam
retf
push
movs
or
ds
mov
push
pop
pop
mov
and
mov
mov
shl
and
cwde
mov
jno
xor
pop
movs
lods
mov
push
out
popf
imul
loop
(bad)
pop
mov
out
add
shl
std
cmp
lds
cmp
test
dec
ja
out
fwait
(bad)
retf
jg
clc
retf
pop
mov
sbb
popf
mov
pusha
mov
movs
enter
push
mov
(bad)
lods
call
inc
sbb
push
lods
push
retf
push
dec
fist
sbb
jl
pusha
out
and
or
mov
mov
push
push
jo
sbb
dec
test
retf
out
inc
test
pop
fdivr
adc
xchg
lods
mov
xor
dec
aaa
mov
mov
jmp
cli
aad
add
mov
enter
jle
mov
push
call
fsub
fwait
xor
push
push
addr16
das
mov
(bad)
push
adc
mov
or
das
mov
inc
pop
push
cmps
jbe
out
stos
shl
sbb
sahf
cdq
cmc
jp
(bad)
into
icebp
push
mov
cld
scas
inc
pop
test
nop
mov
jp
dec
or
fwait
ret
outs
mov
lods
repnz
dec
int3
add
sub
jno
and
loopne
mov
cmps
xor
and
push
lds
into
push
or
test
push
in
into
(bad)
into
sbb
fs
sub
dec
add
add
in
jns
xor
push
test
aam
mov
mov
add
repz
test
pop
mov
xor
dec
mov
cdq
push
repz
rol
mov
mov
fldenv
pusha
test
mov
push
push
iret
(bad)
aas
pop
bound
pushf
mov
(bad)
mov
mov
idiv
cld
fs
adc
cmp
mov
out
jle
ficomp
push
jp
ret
or
test
or
sub
cdq
cld
jecxz
mov
fdivr
(bad)
mov
cmps
cld
and
push
jmp
pop
stc
mov
pop
iret
sbb
fisubr
mov
ror
inc
in
dec
jle
gs
(bad)
push
es
cmp
pop
sbb
jnp
mov
ins
jg
inc
stos
ins
jno
test
sbb
cs
mov
retf
mov
or
arpl
dec
int
and
xchg
(bad)
jmp
ins
popa
cmp
(bad)
(bad)
mov
arpl
aaa
popf
add
aad
fldpi
pop
das
nop
xor
and
mov
mov
xchg
shl
xchg
xor
mov
cmp
in
xchg
call
shr
ja
or
ficom
and
out
push
mov
xchg
pop
mov
sub
dec
inc
sub
xchg
push
fidivr
test
sbb
xor
aas
xchg
aaa
sbb
mov
js
es
dec
mov
or
add
outs
add
addr16
inc
in
cs
inc
push
inc
xor
enter
fbld
jns
or
adc
repnz
loopne
xchg
sub
ins
mul
sar
pop
jb
pop
(bad)
cmp
addr16
add
ja
mov
repz
jmp
inc
inc
out
scas
jns
out
sub
add
ficom
je
xor
push
cld
sbb
push
lods
bound
sbb
ss
mov
ja
xchg
mov
mov
ret
fldcw
shl
in
cmps
cmp
fdiv
test
fldcw
sti
repz
fisttp
leave
aas
xor
jp
addr16
lods
shr
pop
mov
aam
mov
xchg
push
into
pop
retf
xlat
and
add
cdq
sbb
or
and
mov
jge
sahf
adc
out
and
test
mov
push
fwait
or
sub
sub
loopne
jbe
bound
mov
or
dec
mov
cdq
push
imul
imul
lods
mov
lds
mov
retf
adc
jo
fwait
scas
aas
dec
dec
cmp
mov
and
call
outs
fdiv
(bad)
nop
mov
pop
sbb
int
adc
push
outs
jp
and
cmp
arpl
sbb
jge
or
(bad)
cmovne
(bad)
sahf
test
sbb
lods
mov
sbb
pop
pop
mov
mov
xor
sub
jno
movs
test
in
cs
cmps
daa
cmps
sub
int3
fimul
cmps
loope
mov
xor
into
in
push
shl
jl
sbb
dec
add
or
mov
ss
es
mov
call
xchg
sub
jne
and
(bad)
jl
mov
mov
test
mov
adc
jge
cdq
test
inc
adc
retf
cmp
sbb
mov
(bad)
out
sti
jo
test
sbb
(bad)
pop
pop
push
cld
fs
mov
dec
cmp
mov
sbb
sub
mov
les
push
lock
adc
mov
add
cmc
cdq
sub
push
int
sbb
dec
add
ret
ja
shr
mov
sub
sahf
push
pop
push
fcomp
sub
jae
pusha
xchg
bound
fisttp
push
es
dec
push
popa
dec
xchg
dec
mov
fist
inc
inc
cwde
sahf
std
cwde
mov
inc
mov
je
aam
js
aaa
out
xor
dec
add
jns
clc
adc
pop
inc
rcr
inc
rcr
aaa
adc
pop
pop
popa
push
adc
std
cmps
mov
imul
fbstp
lahf
dec
cli
pop
sti
mov
pop
mov
or
jmp
shr
stc
rcr
jns
out
and
pop
pop
push
push
jns
bound
push
fistp
stc
cmp
pop
jmp
xor
(bad)
and
icebp
test
fst
js
sub
jecxz
ja
out
mov
adc
aam
cwde
inc
push
jne
xor
sti
inc
and
leave
repz
and
(bad)
jb
imul
xchg
push
push
inc
sub
mov
add
add
vpandnq
movs
or
xor
add
sub
shr
stos
shl
stc
push
je
jp
enter
xchg
inc
push
lock
xor
jmp
cs
ss
mov
sub
in
lods
pop
(bad)
cmp
test
std
pop
loopne
dec
das
add
add
sti
add
stc
mov
mov
and
lods
repz
scas
inc
div
xchg
push
cdq
pop
test
es
fld
xchg
loope
cs
xchg
(bad)
lods
mov
cmc
jle
mov
ret
sub
mov
push
out
xchg
test
cmps
ja
outs
lea
lds
aam
das
pop
and
dec
push
aaa
mov
jl
jl
adc
xchg
dec
mov
fcmovnu
ret
push
iret
push
loopne
sub
pushf
fs
bound
out
mov
push
adc
jmp
adc
or
fld
mov
push
stc
(bad)
push
lock
loope
pop
retf
xor
pop
int
sbb
popa
mov
jmp
cwde
ds
xor
mov
sbb
adc
push
fldenv
sbb
xchg
int3
fimul
lock
push
push
adc
pop
dec
push
and
fcomp
jp
lods
xor
gs
push
dec
dec
add
mov
pop
push
mov
fsubr
push
fistp
scas
sub
daa
(bad)
repnz
push
repnz
mov
stos
sub
mov
outs
xchg
mov
ror
pop
(bad)
pop
(bad)
test
add
inc
cmc
jecxz
push
bound
xor
xor
(bad)
push
in
mov
cwde
mov
inc
fwait
les
arpl
ja
repz
jne
es
dec
in
adc
mov
sub
lea
test
dec
jmp
test
jae
cmc
push
in
clc
int
xchg
icebp
popa
mov
ret
lahf
cdq
jmp
leave
scas
aad
aas
loop
pop
dec
cli
test
fimul
loop
cmp
sbb
mov
cmp
test
push
adc
mov
js
mov
xchg
mov
shl
sti
fiadd
add
ins
repnz
jbe
add
jbe
sbb
lds
in
add
pop
mov
stos
mov
movs
out
jb
pushf
sbb
or
jmp
sub
jg
sub
test
fucomip
push
add
dec
cmps
or
call
xor
ds
dec
push
mov
cwde
sbb
add
add
fisubr
sub
in
sub
xchg
jne
jb
retf
mov
movs
outs
jb
add
or
jnp
test
mov
add
fcmovnu
add
mov
fadd
sti
pop
jne
stos
aad
pop
cs
mov
adc
and
xchg
jl
jmp
cdq
dec
(bad)
lahf
shl
pop
pushf
adc
(bad)
inc
lahf
dec
mov
adc
push
lods
sbb
cmp
jnp
mov
ss
mov
mov
div
ds
cdq
pop
imul
adc
adc
out
sbb
movs
xchg
int
repnz
dec
xchg
test
cmp
sbb
push
adc
sub
jge
(bad)
push
xchg
cmp
(bad)
mov
push
popf
dec
movs
adc
out
push
movs
mov
jb
scas
sub
dec
pop
push
sub
push
ror
jmp
push
cmp
dec
mov
push
mov
ret
aam
and
icebp
mov
aas
sahf
outs
hlt
ss
bnd
lds
inc
mov
lds
rcr
xor
cli
and
int
mov
inc
jge
push
loope
xchg
jg
arpl
jmp
je
mov
inc
call
inc
jo
ss
cmps
xchg
xlat
jp
adc
outs
and
xchg
(bad)
jb
ficomp
pop
ror
scas
pop
dec
and
sub
xchg
push
fsub
or
mov
(bad)
and
(bad)
int
ja
sbb
sub
pop
inc
aas
outs
ss
sbb
adc
cmp
div
hlt
cli
fild
jbe
hlt
pop
inc
loope
dec
addr16
in
xchg
mov
daa
cmps
inc
jg
cdq
(bad)
cld
xchg
int
mov
jg
mov
or
adc
jl
jmp
fild
xor
and
pop
and
jns
cmp
mov
ret
jp
cmp
lods
push
(bad)
push
js
popa
movs
daa
div
enter
jmp
xchg
fdiv
xchg
push
mov
inc
dec
test
fiadd
mov
sbb
sbb
cdq
retf
mov
mov
clc
dec
rcr
sahf
imul
ins
sbb
iret
mov
es
sahf
lods
and
fsubr
jo
ret
jecxz
mov
ins
inc
fwait
push
push
shr
or
outs
lods
xor
addr16
jo
jmp
cmp
jb
js
add
dec
lods
(bad)
out
push
movs
iret
xor
sbb
shr
ss
pop
push
test
cmc
daa
cmps
loope
lock
retf
xchg
fistp
jmp
stc
add
mov
dec
cmp
xor
xor
and
jmp
mov
mov
jno
cmp
or
aaa
cmp
hlt
sti
sub
fnstcw
cmp
push
pop
and
adc
std
sub
sub
sahf
mov
mov
test
mov
movs
cmp
nop
mov
ins
mov
in
(bad)
xor
jbe
(bad)
push
shl
xor
imul
arpl
lods
and
mov
push
mov
(bad)
add
ret
push
out
bound
xor
jecxz
sub
push
dec
push
push
(bad)
and
xchg
bound
in
outs
ror
rcr
adc
push
mov
scas
ror
mov
cmp
pop
ins
mov
pop
push
es
lea
add
shl
jnp
or
stos
addr16
add
add
push
inc
xor
xor
push
gs
inc
pop
push
pop
int
jne
repz
cs
jae
call
or
push
scas
pop
dec
jne
in
pop
(bad)
adc
pop
push
imul
enter
mov
test
mov
movs
cmp
call
lods
ins
stos
push
ins
ffree
nop
shl
(bad)
int3
xlat
idiv
xor
sbb
call
sbb
push
xchg
sub
fsub
add
dec
inc
lock
cmp
cpuid
retf
adc
nop
popa
xchg
in
mov
sbb
or
nop
sbb
daa
fcmovu
bound
mov
sbb
int3
shl
xor
sbb
daa
or
mov
ins
popf
out
sub
mov
dec
pop
es
xor
pop
dec
or
inc
cmp
mov
ss
fsubr
test
mov
push
or
hlt
inc
pop
pop
dec
mov
inc
loopne
or
or
dec
out
cmp
add
movs
push
sub
js
enter
fstp
jp
int
call
mov
rcr
enter
ins
frstor
and
xor
rol
jge
xchg
dec
inc
daa
cdq
pop
bnd
in
pushf
push
fld
xchg
loope
jmp
inc
in
mov
lds
push
movs
and
mov
lods
imul
xchg
and
ja
pop
lahf
mov
jg
mov
add
daa
bound
in
dec
or
dec
ds
shl
or
repnz
fwait
bound
inc
sub
mov
sahf
bound
cli
sbb
fucomp
xor
xchg
int
pop
ja
pop
mov
or
leave
leave
xor
sub
xchg
and
test
call
(bad)
cli
sub
fidivr
inc
mov
jle
jg
cdq
cmp
push
push
sub
cmp
pop
add
jp
jo
push
mov
jmp
scas
jp
or
add
frstor
inc
inc
test
dec
daa
lds
pop
sub
pop
pushf
inc
xchg
hlt
sbb
fstp
jmp
sahf
adc
out
cdq
ret
push
xchg
adc
inc
xchg
xor
mov
ins
cmp
aam
xor
sub
push
and
dec
add
jno
je
aad
sbb
xchg
mov
daa
movs
jne
mov
xchg
bound
sbb
lods
add
jns
cdq
jb
adc
cmp
fidiv
aas
xchg
push
cwde
and
mov
push
stos
out
push
lock
xchg
xchg
inc
xchg
sbb
bound
add
popa
xor
imul
js
dec
dec
aaa
sub
pop
dec
aas
and
push
(bad)
adc
pop
push
test
and
lahf
dec
les
xor
movs
cmp
call
mov
fmul
leave
and
xor
and
dec
std
out
pop
pushf
(bad)
int
push
fistp
clc
gs
push
js
dec
jle
mov
ret
sub
(bad)
mov
aad
ds
ins
xchg
cmps
std
hlt
or
and
repz
push
movs
daa
bound
fisttp
fwait
jnp
and
dec
mov
fs
pop
iret
das
jmp
sbb
cld
mov
imul
mov
pusha
inc
pop
mov
cmp
fist
sbb
jnp
js
push
cwde
sahf
std
cwde
pop
ss
movs
fisttp
push
gs
js
or
mov
sub
faddp
adc
aaa
jne
or
shr
shl
push
arpl
pop
loopne
jbe
lods
call
div
xor
dec
adc
out
adc
retf
shl
outs
and
xor
mov
shr
test
mov
add
jb
or
sub
dec
outs
pop
add
mov
imul
cmp
ret
push
xchg
lods
xchg
xor
in
dec
or
cmc
push
iret
jb
xor
inc
mov
sub
ja
xlat
sub
push
imul
jne
mov
mov
sub
mov
mov
cwde
xor
or
jbe
xor
mov
push
fbstp
or
jg
push
out
sub
jns
movs
add
xchg
test
aad
std
xor
aas
add
mov
mov
arpl
adc
shl
hlt
add
js
and
lahf
dec
add
in
mov
cdq
iret
aas
or
outs
adc
mov
jnp
nop
fld
shl
lods
shl
std
cmp
push
loope
jecxz
push
and
fcom
add
(bad)
push
mov
push
ins
cwde
sbb
sbb
jge
ja
sbb
test
lods
xchg
mov
push
mov
popf
push
scas
pop
and
shr
movs
in
jge
pop
lahf
fcom
and
add
sub
lahf
das
lea
js
dec
jle
repnz
sahf
enter
in
in
sbb
sub
bnd
cmps
loopne
cmc
inc
mov
fwait
or
out
lahf
cmp
mov
ds
aas
(bad)
in
aam
add
std
sub
xchg
mov
and
pusha
dec
inc
in
dec
mov
cmp
mov
push
pop
ins
push
js
sahf
jae
shl
push
das
or
retf
push
call
loop
data16
jnp
cmp
pop
imul
jge
mov
sub
and
pop
nop
add
ins
loope
mov
fs
jmp
dec
fld
sub
push
inc
or
dec
add
sti
mov
div
sbb
dec
movs
sub
jae
jbe
(bad)
jmp
xchg
cmp
mov
les
mov
pop
pop
das
fld
xor
mov
and
pop
fisttp
push
gs
iret
sbb
inc
clc
jns
sahf
sti
inc
mov
nop
pop
xlat
xchg
ins
and
movs
mov
mov
xchg
add
(bad)
enter
(bad)
adc
hlt
test
scas
mov
add
pop
ja
pusha
ss
mov
cmp
mov
addr16
inc
xchg
imul
call
xor
outs
dec
jl
cld
out
and
add
fcomip
aad
sub
imul
add
lock
clc
cmp
movs
rcl
fsub
test
cmps
ja
jecxz
jge
or
iret
test
and
push
fmul
inc
push
popf
dec
mov
shr
sub
not
aaa
iret
aam
mov
fdivr
sbb
retf
push
mov
adc
icebp
loope
mov
pop
jnp
stos
adc
leave
in
sbb
nop
xchg
shr
mov
adc
mov
sti
sub
aam
loope
and
addr16
mov
les
icebp
aad
repz
cmp
ficomp
dec
pop
sbb
lds
(bad)
or
mov
hlt
pop
aad
dec
repnz
add
inc
out
lods
fdivr
xchg
dec
xor
dec
(bad)
out
mov
inc
movs
pop
pop
push
mov
xor
popa
ret
sub
lods
(bad)
test
lods
pushf
repnz
stos
sub
xchg
(bad)
jle
xchg
adc
inc
add
leave
cld
sbb
leave
jecxz
sub
xchg
push
pop
pop
stos
test
dec
repnz
xor
int3
rcl
mov
dec
sub
fbld
shl
mov
loope
xchg
cmps
adc
dec
xor
xchg
gs
cwde
sbb
mov
shl
jnp
pop
dec
stos
addr16
repz
leave
inc
mov
sbb
inc
fisttp
pop
retf
sbb
int
jne
inc
aam
mov
cmp
inc
dec
and
xchg
sub
xchg
lods
mov
sbb
and
push
adc
(bad)
shl
mov
imul
lea
movs
mov
mov
dec
ins
and
mov
push
jp
mov
ret
div
fcomp
mov
popf
lahf
inc
clc
repz
cmp
pop
cli
pop
push
jmp
aad
mov
push
out
das
stos
clc
loopne
xchg
pop
add
loop
jae
cmp
push
push
xchg
gs
pop
and
bound
mov
ds
mov
loop
sbb
xor
das
lods
scas
mov
ins
inc
pop
push
pop
jns
stos
fld
mov
xor
xor
addr16
aam
pushf
test
sub
or
ss
push
mov
inc
xchg
mov
xchg
add
or
popa
mov
cmp
inc
dec
cwde
push
sbb
push
cdq
cmp
jecxz
xchg
jp
imul
mov
sub
mov
mov
sti
mov
movs
cmp
call
lods
aad
push
ins
dec
pop
and
inc
(bad)
rcl
jge
jno
cld
xchg
data16
out
pop
xor
mov
imul
xchg
sub
stos
push
in
jmp
sub
mov
add
shl
jmp
out
jg
stos
jecxz
push
pop
cmp
mov
pop
jnp
mov
add
iret
mov
mov
xchg
rcr
out
push
stos
xlat
sub
sahf
push
xchg
bound
jmp
pop
mov
add
loopne
and
lds
hlt
pop
addr16
pop
cmp
ss
push
out
push
lock
sub
push
repz
into
jns
or
pop
xchg
test
ret
and
mov
ja
int3
fimul
and
pop
(bad)
sub
pop
jmp
push
lds
test
push
fwait
clc
jmp
cmp
mov
lahf
xor
jb
mov
and
xor
out
jmp
in
fs
les
lds
sbb
cmp
lgs
test
cmps
ja
or
leave
sbb
aad
movs
adc
pop
and
pushf
(bad)
dec
or
pushf
xor
movs
inc
xor
out
out
sbb
out
dec
(bad)
fadd
cmc
fwait
dec
mov
call
call
mov
push
mov
ja
(bad)
inc
ds
adc
pop
mov
leave
leave
xor
xchg
push
jmp
in
stc
jns
or
pusha
mov
neg
loopne
or
pop
(bad)
enter
(bad)
adc
pop
fs
add
enter
dec
mov
jle
lahf
jl
push
inc
pop
mov
stc
mov
push
jp
(bad)
int3
das
jno
xchg
imul
mov
fs
icebp
push
call
loope
push
cmp
and
fiadd
ret
test
mov
push
lock
stos
or
cld
mov
or
aam
ds
xchg
and
mov
xor
cdq
arpl
mov
ficom
in
or
push
sbb
fcomp
inc
adc
dec
inc
sbb
push
shr
retf
ret
jne
sahf
xchg
clc
in
mov
fwait
cwde
mov
call
rcl
fisub
sbb
jmp
jae
mov
xchg
cmp
repz
inc
jne
add
bound
hlt
cmps
cmp
loopne
pop
dec
mov
cmp
cli
adc
cs
add
or
and
add
push
xchg
pop
int3
jmp
push
aam
jmp
push
push
fs
inc
mov
jg
push
test
add
je
daa
jp
cdq
pop
dec
push
(bad)
out
pop
lahf
popf
dec
sbb
push
shl
inc
ja
add
stos
mov
inc
jmp
test
push
pusha
and
fs
ret
test
div
or
pop
mov
and
xor
sbb
xchg
std
test
shl
sar
iret
cli
cmps
push
inc
jne
mov
mov
lods
inc
cmp
in
jmp
je
jbe
mov
mov
sbb
sub
push
push
lock
nop
and
push
enter
jae
add
mov
xor
pop
aaa
and
shr
adc
mov
mov
ins
pop
loop
sti
xor
rol
rcr
mov
jmp
xor
jb
fs
div
or
cdq
pop
retf
push
call
or
ins
cmp
push
dec
clc
cmp
lock
push
lock
mov
xchg
mov
lods
sbb
jne
out
fs
aam
cmps
mov
jle
jecxz
add
aad
cs
xor
sar
sub
nop
jnp
cmp
sar
mov
bound
call
cmp
sub
cmps
jb
jmp
ins
xor
nop
mov
movs
shr
leave
leave
inc
das
out
paddb
mov
xchg
loop
daa
repz
cmp
mov
rcr
push
pusha
push
retf
bound
sub
adc
adc
sub
pop
pushf
loopne
mov
stos
mov
mov
push
mov
movs
mov
mov
mov
ficomp
neg
push
or
cs
int3
mov
imul
sbb
push
adc
fcmovnb
or
adc
icebp
test
add
outs
xchg
add
scas
mov
rol
mov
fbld
add
out
fidiv
push
in
jno
je
sub
push
std
in
sbb
dec
jecxz
push
inc
fs
and
mov
lds
pop
mov
jg
cmp
gs
test
mov
and
fs
popa
js
dec
add
iret
out
into
int3
jns
pushf
ins
jns
inc
mov
call
or
scas
pop
fisub
push
mov
add
lds
rcr
inc
lahf
dec
sbb
push
mov
(bad)
push
pop
dec
adc
xor
outs
fisttp
ds
pop
inc
sbb
pop
test
stc
xor
mov
ds
push
mov
sbb
sub
test
icebp
cwde
jmp
das
add
pop
mov
jne
sub
jo
sub
adc
xchg
jb
neg
dec
mov
mov
sbb
lea
shl
mov
pop
push
test
cmc
sub
enter
pop
(bad)
into
outs
or
add
xlat
or
jbe
xor
mov
inc
outs
test
push
push
out
add
repnz
int
test
mov
and
dec
aaa
and
in
pop
icebp
sub
pushf
push
pop
dec
push
retf
(bad)
mov
dec
add
in
icebp
jnp
push
mov
not
ins
scas
dec
movs
fild
fstp
push
fist
add
mov
pop
push
push
jns
arpl
imul
xchg
sub
push
push
in
jmp
(bad)
or
push
imul
loop
add
sahf
cwde
pop
push
jne
dec
cmp
(bad)
sub
arpl
mov
int
and
xchg
lds
dec
pop
xlat
mov
xchg
push
jns
loope
test
lods
pop
les
sbb
push
push
pop
ss
jle
fnstsw
sbb
leave
inc
test
push
mov
bnd
mov
gs
xor
(bad)
in
add
xchg
mov
cmp
inc
cmp
leave
scas
aad
aas
loop
pop
or
cmp
jecxz
dec
ret
aaa
mov
inc
dec
add
sti
call
xlat
mov
mov
enter
ins
push
push
xor
lea
mov
dec
add
ins
imul
sub
or
pop
mov
ins
fist
add
pop
int
aad
push
lock
test
in
mov
cmps
std
add
jne
inc
daa
cmp
aam
mov
fwait
or
or
and
and
mov
nop
pushw
scas
inc
sub
mov
sbb
inc
rcl
retf
inc
xchg
retf
cmp
sbb
popa
call
mov
xchg
xlat
in
jb
cmp
lock
nop
mov
xchg
mov
nop
pusha
mov
jg
or
add
ret
xor
getsec
and
addr16
rol
push
std
sub
jp
mov
js
mov
add
add
or
inc
sti
lods
mov
dec
xchg
adc
das
out
push
push
popa
outs
dec
mov
icebp
imul
scas
loope
mov
push
and
xor
in
jge
mov
pop
pop
mov
push
pop
dec
shr
aas
mov
xchg
xor
test
jae
xchg
aam
ret
out
add
push
xchg
test
sbb
popf
(bad)
fsubr
fisub
push
test
mov
sub
movs
in
imul
out
aaa
mov
or
loope
or
leave
xor
sub
adc
sbb
xor
inc
(bad)
and
pop
and
cmp
mov
call
xchg
hlt
jbe
push
pop
call
rol
xor
mov
stc
loope
scas
popf
fld
sub
push
js
inc
out
cmp
push
cmp
dec
mov
and
mov
add
shl
push
cmp
push
adc
add
movs
push
push
fadd
xchg
fs
dec
ins
ret
sub
mov
jecxz
ins
mov
ret
add
fs
sub
push
push
sub
xchg
push
jecxz
repz
push
loope
rcr
push
aaa
sbb
inc
cmps
daa
xchg
xlat
mov
and
mov
mov
test
xchg
cs
ja
adc
jge
icebp
inc
pop
jmp
leave
inc
mov
pop
std
popa
js
pop
cmp
test
or
inc
jne
lock
xor
inc
pop
xchg
mov
out
adc
movs
imul
ret
mov
out
lock
movs
arpl
adc
loop
mov
xor
outs
fisttp
xor
(bad)
out
mov
adc
pop
pushf
(bad)
xchg
in
movs
dec
lds
dec
add
jne
xchg
cmp
dec
movs
lock
test
sar
xchg
mov
xlat
gs
push
scas
xchg
adc
mov
adc
call
dec
inc
and
fsubr
test
aaa
(bad)
in
jp
ss
sub
or
bound
pop
retf
xchg
mov
xchg
mov
in
adc
mov
sub
jmp
sbb
arpl
out
push
jp
enter
xchg
cmps
fsub
cmc
inc
add
mov
adc
ret
arpl
sub
bound
in
(bad)
and
cwde
add
add
add
lds
mov
dec
add
sti
mov
movs
cmp
dec
ins
sub
stos
ins
push
jl
pop
xchg
enter
test
dec
pop
test
stc
loope
push
jbe
and
sub
inc
xor
(bad)
pop
loope
mov
mov
aam
mov
in
sub
shl
(bad)
pop
sbb
and
ja
dec
popf
repz
xor
mov
mov
add
(bad)
sahf
and
retf
dec
cmps
sub
popa
jne
inc
push
retf
adc
mov
les
mov
xor
pop
mov
mov
or
mov
inc
test
dec
scas
cmovbe
cmps
pushf
jns
inc
push
ja
int
loopne
xchg
jbe
add
ja
mov
clc
fdiv
icebp
enter
jmp
inc
pop
dec
loop
xchg
std
sub
cmp
leave
pop
sub
and
mov
xchg
mov
cmp
and
mov
movs
ret
mov
and
xor
data16
(bad)
cmps
inc
adc
sbb
cmp
adc
add
push
cmp
push
mov
inc
in
xchg
test
push
pusha
and
mov
xchg
cdq
movs
lods
xchg
mov
faddp
call
xchg
es
ss
(bad)
push
movs
loope
ds
aas
mov
data16
mov
add
in
out
gs
jmp
xchg
sahf
push
(bad)
in
sti
pop
adc
xor
ja
and
inc
pop
mov
sbb
ss
pop
dec
das
pop
call
cmps
lea
inc
mov
cli
xor
pushf
jne
fild
loopne
(bad)
aad
aam
dec
push
ret
jb
mov
cmc
cmp
(bad)
pop
push
jmp
mov
js
mov
pop
cmps
lahf
ret
jns
test
movs
mov
mov
jl
and
push
test
call
dec
es
jl
icebp
pusha
sbb
cdq
outs
pusha
cmc
add
les
fistp
daa
mov
pop
retf
jl
stos
fmul
test
push
ins
adc
push
pusha
fs
mov
jo
push
xor
push
mov
cmp
pop
cmp
nop
cmc
xchg
loopne
push
inc
sub
mov
xchg
bound
retf
ret
jne
xor
test
add
fwait
scas
popf
jnp
mov
cmps
xor
repnz
sbb
leave
inc
mov
(bad)
sbb
push
test
dec
inc
and
and
sbb
popa
mov
or
mov
add
xor
data16
pop
(bad)
cmp
addr16
std
sbb
sbb
dec
imul
out
add
xor
push
xor
xor
cmp
inc
inc
mov
int3
das
dec
aaa
(bad)
fiadd
or
fimul
mov
or
cmps
(bad)
jnp
cdq
and
daa
(bad)
in
jp
(bad)
sti
sub
std
xlat
push
sti
mov
icebp
or
nop
mov
sbb
pop
ds
mov
sub
fsubp
movs
sbb
popf
(bad)
cmp
ror
test
(bad)
ret
cmp
shl
pop
xlat
push
ror
mov
push
mov
mov
les
pop
leave
xchg
nop
mov
add
cmp
push
gs
ins
mov
push
inc
adc
int
into
retf
hlt
adc
mov
retf
cmps
mov
icebp
lahf
aas
pop
and
mov
cmp
pusha
cdq
daa
xor
inc
mov
dec
lahf
dec
and
dec
popf
cld
lahf
push
pop
stos
xor
mov
add
xchg
mov
out
cli
imul
retf
fadd
cdq
xchg
sub
pushf
(bad)
popa
pop
pop
adc
adc
bnd
push
and
cmp
movs
je
test
fidiv
sbb
ret
mov
lods
dec
mov
sbb
stos
pop
xor
jae
rcl
mov
test
adc
or
inc
in
daa
rcr
mov
frstor
pop
push
ror
cmp
sub
jb
jmp
pushf
xchg
cwde
mov
xchg
add
stos
or
inc
xchg
sub
sbb
dec
int3
mov
pop
repz
int
add
inc
and
push
daa
jg
mov
pop
dec
sub
movs
pop
(bad)
adc
pop
add
mov
pushf
mov
ss
out
jmp
push
std
push
dec
(bad)
sbb
(bad)
mov
xor
call
xor
xchg
sahf
test
push
push
call
loop
data16
jnp
cmp
arpl
add
push
stos
xlat
push
cmp
out
bound
mov
dec
sbb
lock
js
stos
jne
push
pop
cmp
ret
adc
and
daa
pop
jecxz
and
ins
and
xlat
mov
xchg
cmc
mov
mov
xor
leave
cmp
xchg
clc
adc
xchg
je
xor
mov
adc
dec
mov
fbstp
test
leave
inc
imul
push
push
je
dec
add
jge
or
cmp
jno
sub
inc
push
pop
inc
fidivr
dec
dec
iret
jle
adc
mov
xchg
lahf
in
mov
pop
push
dec
cmp
popf
and
les
pop
(bad)
push
sbb
ret
xor
add
fisttp
mov
dec
popf
inc
dec
fstp
js
loope
pushf
push
popa
outs
push
adc
push
fsubr
js
repnz
clc
idiv
mov
out
mov
sbb
cld
pop
loopne
mov
jge
xor
test
cmp
popf
dec
pusha
dec
or
fucom
aad
add
addr16
mov
xchg
push
aaa
neg
iret
iret
pop
xchg
mov
sahf
bound
pop
and
jmp
mov
xor
xchg
jb
and
in
xchg
and
xor
mov
pop
inc
jmp
and
mov
xchg
loopne
or
mov
int
movaps
dec
and
gs
test
add
jg
(bad)
pop
aaa
push
mov
push
imul
enter
inc
mov
mov
movs
cmp
call
mov
nop
(bad)
xor
cmp
je
daa
shl
pop
pop
inc
jecxz
pop
pushf
push
cld
xor
pushf
loope
or
fmul
loope
imul
mov
shl
jmp
xchg
test
cmps
ja
fld
and
sub
test
jge
and
fiadd
pop
add
stos
mov
xchg
push
iret
mov
sbb
fisub
mov
dec
pop
mov
cdq
push
pop
or
or
sub
jmp
or
inc
mov
fbstp
mov
jmp
dec
xchg
or
in
scas
or
inc
mov
push
aad
mov
xor
inc
jns
jp
sub
aaa
push
test
ficomp
jne
test
mov
ds
scas
mov
inc
(bad)
das
mov
and
int3
inc
mov
ds
inc
std
push
xchg
dec
pop
daa
cdq
pop
repnz
jbe
pop
push
push
popa
mov
ss
push
sbb
mov
aas
cwde
dec
mov
daa
enter
addr16
(bad)
or
pop
mov
jo
cmp
mov
mov
popf
mov
inc
mov
adc
xchg
call
ss
mov
pop
popf
scas
mov
mov
pop
hlt
repz
fnstsw
mov
cmp
mov
es
mov
jle
icebp
xor
ficom
mov
xchg
add
jae
dec
mov
jns
or
inc
(bad)
add
div
retw
dec
push
dec
dec
aaa
repz
ficom
rcl
pop
and
fdiv
test
inc
imul
xchg
push
das
mov
mov
test
jp
ret
xor
gs
sqrtps
dec
push
das
cdq
popa
daa
sub
scas
mov
outs
push
cmp
sbb
std
inc
clc
cmp
mov
aam
mov
cmp
imul
inc
adc
push
pop
rcl
xor
fimul
cld
(bad)
fisub
mov
addr16
dec
psubq
xchg
cmp
inc
sub
mov
sahf
bound
cmp
mov
jno
cdq
jb
jmp
je
jl
mov
and
scas
inc
jle
addr16
inc
sbb
sbb
pop
fild
xor
mov
or
loopne
pop
cmp
sar
loope
loop
scas
movs
(bad)
rcr
jns
adc
shl
hlt
stos
push
mov
lahf
ret
jns
gs
pusha
push
pop
mov
and
mov
inc
fisttp
shl
inc
pop
aam
pop
push
mov
pop
pushf
push
popa
mov
inc
loop
sub
xor
test
jge
add
xor
inc
mov
push
pop
push
shr
je
test
jge
dec
pop
retf
(bad)
jle
mov
scas
and
pop
mov
jbe
int3
call
or
inc
sub
mov
xor
inc
mov
mov
mov
jno
jmp
jo
push
ss
ins
(bad)
adc
mov
test
sub
test
xor
mov
adc
dec
aaa
or
mov
dec
sbb
aad
push
in
test
cmp
mov
data16
add
cmp
mov
mov
mov
test
pop
out
xchg
rcr
sbb
or
lods
aas
pop
das
cdq
pop
xchg
cwde
dec
push
call
sbb
lds
inc
leave
xor
div
cdq
add
lock
test
mov
pusha
fcomp
ret
jo
cmps
lods
lods
xchg
and
dec
push
(bad)
dec
jbe
vcvtsd2ss
bnd
in
fisub
mov
out
imul
adc
inc
push
retf
das
add
push
mov
loopne
rcl
mov
stc
rcl
ret
mov
cmp
mov
xlat
xchg
inc
push
stos
test
xor
pop
int
xor
imul
or
and
mov
fstp
sbb
arpl
sub
lds
jl
mov
mov
out
cs
ins
mov
sub
mov
mov
shl
fiadd
pop
jmp
in
inc
push
cld
out
call
sbb
push
push
adc
jg
repnz
ja
mov
out
out
stos
and
ja
jecxz
push
jo
mov
cmp
bound
mov
addr16
xor
stc
cwde
mov
sbb
daa
rcr
pop
xor
jb
pop
xchg
cmp
mov
jno
cdq
jb
jmp
je
pop
repnz
and
mov
mov
inc
sbb
sbb
pop
fild
push
gs
iret
out
or
imul
cs
(bad)
aad
popf
xor
add
jmp
in
pop
lea
and
cmp
jecxz
cmp
scas
ds
sbb
push
nop
mov
mov
test
lea
leave
and
xor
and
inc
(bad)
out
pop
pushf
(bad)
dec
jae
fistp
clc
gs
push
js
dec
jbe
mov
int3
sub
(bad)
cmp
ret
push
xchg
aad
ds
in
sub
ins
stos
mov
fcmovb
jo
pop
mov
mov
add
cmp
xchg
and
add
(bad)
repnz
xchg
push
sahf
retf
bound
pop
inc
je
inc
sbb
push
pop
dec
retf
fbld
mov
xor
sbb
fwait
cwde
sub
dec
jmp
mov
push
sbb
push
lock
push
test
cmps
xor
cmc
inc
daa
into
cld
xor
add
js
bound
shl
and
fpatan
sbb
inc
cmp
push
ficom
mov
add
sbb
mov
adc
xor
pop
xchg
mov
retf
mov
imul
iret
xor
lahf
cli
iret
add
xchg
in
sar
into
mov
leave
test
mov
sahf
test
fdivr
push
dec
in
call
xchg
push
mov
push
sub
or
and
pop
pop
jne
ret
or
and
cld
cmp
popa
cmc
dec
cmp
dec
sbb
(bad)
iret
js
mov
imul
xor
aad
sbb
add
dec
sbb
imul
xor
push
in
push
js
mov
test
xor
js
outs
sbb
aad
inc
mov
mov
int
xor
fmul
jle
rol
test
jns
in
pop
shr
jnp
std
cmp
mov
(bad)
jp
cmp
cmps
(bad)
sahf
out
cmp
mov
fwait
xor
out
push
int
mov
mov
test
std
jae
mov
std
mov
(bad)
mov
push
xor
js
push
fdivr
push
rol
or
lds
icebp
lgs
out
bound
nop
dec
clc
jecxz
div
add
js
test
pop
xchg
mov
push
mov
and
pop
outs
inc
mov
xor
jnp
and
rcr
lahf
mov
pop
das
pop
inc
icebp
dec
shr
mov
push
cli
push
enter
xchg
fst
popa
sbb
mov
test
cmc
push
jno
ja
ss
stc
scas
gs
lock
retf
retf
xchg
mov
adc
aaa
imul
int
fisub
cs
cmp
retf
and
adc
pop
daa
rcl
dec
jne
in
(bad)
adc
movs
add
dec
rol
in
es
cld
lahf
push
pop
stos
xor
mov
add
xchg
or
fisttp
shl
in
rcr
out
pop
push
mov
outs
or
in
(bad)
das
imul
pop
rol
cmp
mov
ret
sbb
addr16
test
sbb
loop
pop
mov
test
xchg
cmps
or
int
or
add
iret
lods
lahf
jno
adc
mov
jmp
push
xlat
mov
jmp
xlat
std
pop
lock
xor
ror
and
add
adc
fist
inc
xlat
xchg
inc
inc
enter
repz
fidiv
or
xchg
test
ret
cmp
dec
mov
data16
pop
pop
and
pop
(bad)
lahf
fnsave
pop
push
jecxz
and
fistp
lahf
dec
mov
call
adc
cmp
mov
mov
fisttp
shl
mov
sub
out
popf
lahf
inc
push
sbb
cli
pop
push
out
and
mov
mov
mov
in
sub
shl
shl
push
pusha
jmp
cmp
and
aaa
jecxz
mul
dec
xchg
(bad)
daa
rcl
scas
inc
rcr
cwde
ins
mov
push
out
dec
jmp
sub
adc
imul
add
add
push
es
cmp
pop
sub
push
addr16
xor
inc
xchg
sub
shr
xchg
xor
test
add
mov
mov
pop
js
leave
call
jle
jg
cdq
fsub
inc
nop
sbb
int3
std
cmps
pop
push
imul
aaa
jle
adc
cwde
adc
mov
sub
xlat
imul
cmc
cmp
jno
outs
mov
cmp
push
xchg
push
pop
push
jmp
inc
pushf
push
add
cmp
lods
and
fsubr
js
repnz
clc
idiv
iret
xchg
push
out
out
mov
sbb
cld
pop
loopne
mov
imul
test
cmp
popf
dec
rcr
mov
add
imul
adc
xchg
push
aaa
neg
iret
iret
out
xchg
sahf
bound
jmp
and
jb
in
sbb
test
shl
rcl
lods
push
push
dec
ins
cmc
inc
mov
jne
out
and
xlat
dec
push
cwde
xchg
call
or
push
aaa
push
push
and
and
mov
(bad)
and
mov
ret
add
cmp
adc
xchg
shr
je
and
jge
push
ins
sub
out
stc
test
test
shl
sbb
jbe
add
or
sbb
lds
mov
out
xor
clc
mov
xchg
jecxz
adc
imul
sub
fistp
fimul
xchg
add
dec
add
iret
scas
and
ficomp
sub
push
(bad)
data16
jmp
adc
retf
pop
es
dec
addr16
jb
push
sbb
shr
push
cwde
add
cmps
imul
push
je
pusha
sti
dec
test
dec
inc
adc
(bad)
and
add
fstp
dec
popf
into
mov
and
adc
cs
mov
cmp
mov
jo
iret
jp
ret
pop
adc
cmp
mov
lahf
and
inc
xchg
push
aaa
fisttp
dec
es
jl
icebp
aas
or
cdq
pop
xlat
or
push
inc
stc
jmp
cmp
daa
loope
pusha
out
mov
and
push
cmp
call
cmp
sbb
mov
(bad)
sub
push
fimul
mov
stos
pop
lds
ss
(bad)
dec
ss
je
scas
adc
push
and
push
add
add
call
iret
pop
mov
int3
imul
adc
cli
jmp
movs
jl
into
outs
mov
push
ss
adc
ss
scas
psubw
(bad)
xchg
xchg
cmp
repz
lds
jmp
mov
call
and
cli
nop
popf
adc
dec
stos
mov
cmp
push
cmp
scas
ror
outs
add
je
icebp
jmp
dec
rcr
lea
fld
pop
test
call
jnp
outs
nop
pop
pop
iret
push
movs
outs
dec
add
arpl
jp
mov
jnp
sub
mov
pop
mov
sbb
mov
in
sbb
sub
sbb
(bad)
or
jmp
sahf
jecxz
sub
movs
cmp
xor
inc
push
add
std
popf
mov
movs
in
jge
repz
cmps
lahf
ja
pop
push
test
jne
add
retf
inc
inc
loopne
cmp
scas
stc
leave
jl
and
add
jnp
fld
fxch
es
sub
lock
nop
xor
lods
inc
adc
(bad)
daa
or
pop
xor
jl
popa
and
push
sahf
es
cdq
add
ins
push
mov
push
jecxz
mov
mov
lahf
ret
jns
mov
sub
push
movs
add
mov
test
xlat
fisub
xor
lea
out
cmp
imul
das
es
mov
loop
xchg
call
xchg
jo
call
xchg
mov
retf
push
out
xchg
and
pop
push
mov
jae
(bad)
sahf
sub
sub
cmp
xchg
mov
stos
dec
into
(bad)
dec
scas
push
pop
mov
je
ja
out
dec
xchg
push
fisttp
xor
dec
xchg
stc
mov
mov
out
retf
pop
es
mov
xchg
inc
jmp
cmc
loope
test
shl
adc
ror
sbb
out
mov
pop
gs
shr
fs
push
fisubr
cs
rcl
dec
call
mov
stos
call
enter
std
cmps
test
js
dec
fild
in
and
stos
xor
mov
mov
test
lods
cmp
jno
cmp
idiv
sbb
push
push
cld
adc
adc
(bad)
das
imul
neg
pop
ret
sub
mov
xchg
jecxz
adc
imul
jbe
fsubr
push
fist
xchg
dec
add
add
cmp
push
xchg
mov
adc
xchg
push
push
push
mov
jmp
mov
xor
ins
test
cmp
pop
adc
test
shl
stos
sub
ficomp
fist
sbb
(bad)
dec
xchg
pop
ror
int
bound
aad
mov
ret
ror
and
sub
in
inc
aas
push
sub
sub
cmp
js
xor
mov
inc
or
call
cmp
and
sti
or
stc
mov
out
fs
push
popa
add
iret
sub
push
(bad)
out
pop
or
data16
jnp
sub
jl
jne
repnz
jb
sub
(bad)
arpl
ret
push
rcl
push
lds
pop
popf
push
or
lock
jl
cmp
cmp
push
mov
xor
fdivr
mov
sbb
xor
aas
rcr
shl
xor
dec
cmps
movs
sbb
push
pop
mov
or
lods
mov
sbb
aam
jns
out
ja
mov
add
sub
scas
jg
sub
(bad)
dec
xchg
inc
inc
mov
ret
or
mov
mov
int
or
and
cwde
sbb
push
sub
ror
xchg
inc
xchg
js
cmp
mov
ret
jge
sbb
pusha
jo
mov
cmp
pop
or
xchg
shl
xor
add
(bad)
out
sub
pop
pop
fwait
add
cmp
mov
push
sbb
sbb
(bad)
aas
cmp
ja
mov
cmp
jl
jge
out
call
pusha
xor
adc
out
popf
and
and
(bad)
jo
mov
(bad)
dec
jmp
(bad)
mov
pop
and
mov
sub
adc
enter
mov
mov
xchg
pop
adc
test
shl
icebp
inc
pop
push
hlt
addr16
rcl
inc
sbb
fiadd
inc
in
dec
xchg
inc
adc
fidiv
sub
add
sub
dec
ins
fldenv
dec
aaa
retf
mov
sub
aas
push
sub
push
push
push
jecxz
jo
mov
enter
dec
mov
and
push
add
shl
mov
hlt
xor
(bad)
xor
stc
jl
out
movs
cmp
pop
push
cld
movs
sbb
lods
and
jg
cmp
ja
icebp
pop
cmp
(bad)
push
push
int3
cld
dec
imul
cli
in
and
xchg
into
add
push
retf
dec
push
rol
and
jno
jecxz
and
popf
cmp
rcl
mov
leave
bound
xor
and
xchg
jb
push
sbb
fwait
adc
pop
shr
adc
mov
test
sub
test
xor
mov
adc
dec
aaa
or
mov
dec
ins
addr16
jo
sub
xor
ss
jo
add
in
(bad)
sbb
(bad)
fidiv
enter
push
scas
addr16
mov
(bad)
int3
pop
xchg
sbb
fucompp
mov
lods
and
cdq
pop
pop
add
out
pop
pushf
fild
and
(bad)
popf
and
daa
jl
sub
dec
inc
cmp
mov
mov
sbb
sbb
cwde
fs
ret
push
lds
fisttp
add
fnsave
lods
fsub
test
cvtdq2ps
mov
and
add
out
retf
loop
dec
retf
mov
xchg
mov
push
ja
fild
and
xchg
fcom
mov
xchg
xchg
or
gs
inc
mov
pop
aad
dec
adc
mov
ds
in
(bad)
outs
and
jp
bound
lods
add
or
js
mov
fimul
pusha
mov
mov
repz
inc
mov
xor
jg
pop
xor
vcvtdq2pd
lds
pop
imul
adc
push
xchg
out
lds
fdivr
push
or
ja
dec
dec
ins
fsubr
and
out
mov
push
jb
xchg
and
ja
dec
jo
test
scas
xchg
test
or
popf
mov
pusha
mov
pop
iret
xor
sbb
(bad)
sbb
ins
mov
sbb
retf
inc
push
jmp
cmp
jno
aas
mov
mov
cmc
and
cdq
retf
leave
out
int3
and
push
fist
rol
sti
out
repz
into
outs
lea
aad
sub
pop
push
pusha
ins
call
xor
pop
dec
push
cmp
mov
std
cdq
enter
std
mov
aas
push
adc
mov
sbb
jl
daa
lods
mov
push
ins
jb
int
popa
int3
outs
and
pop
push
das
mov
add
cld
out
popf
lahf
inc
loopne
sbb
cmp
pop
cli
pop
push
out
and
mov
mov
mov
in
push
mov
pop
sahf
mov
add
pop
sbb
and
xchg
and
jmp
aaa
pop
mov
dec
add
xor
or
xor
mov
int3
or
xchg
bound
outs
cmp
rol
inc
int3
es
adc
pop
or
scas
sbb
and
fidiv
lock
test
xchg
pop
push
out
push
push
or
sti
jle
lahf
inc
rcr
cli
es
std
inc
aaa
jns
jg
cdq
cmp
sub
push
test
xchg
push
push
jecxz
cmp
mov
fdivr
jno
(bad)
leave
call
or
rcr
mov
xchg
mov
repnz
(bad)
out
(bad)
cmp
add
mov
xchg
jb
and
xchg
in
jb
dec
clc
cmp
push
mov
and
outs
mov
mov
enter
cmp
pop
pop
mov
leave
and
test
pop
add
stos
loope
pop
or
pop
inc
mov
sub
xor
pop
pop
push
test
cmc
mov
sbb
jno
cdq
jb
jmp
je
cli
xchg
mov
pop
cmp
mov
push
pop
dec
sbb
xchg
xchg
fwait
mov
gs
push
jo
int
loop
sti
lds
sub
(bad)
faddp
rcr
cmp
dec
mov
data16
pop
pop
sub
in
pop
shr
dec
arpl
sub
cmp
push
enter
inc
xchg
xor
push
das
mov
mov
test
out
xor
jno
(bad)
xor
idiv
out
fsubr
aaa
das
icebp
add
sub
fdiv
push
dec
leave
sub
rcl
jmp
sub
jo
push
mov
sbb
jne
outs
push
cmp
jae
pop
push
test
lahf
in
mov
adc
adc
(bad)
cdq
scas
mov
in
loopne
push
call
inc
mov
push
inc
pop
push
xor
jne
inc
push
jl
push
loopne
pop
addr16
repz
fld
retf
and
outs
jnp
pusha
clc
mov
retf
or
(bad)
mov
mov
jge
aad
cwde
xor
loopne
jle
nop
stos
icebp
in
repz
aam
add
sbb
xor
(bad)
in
call
shl
or
cld
int3
das
test
cmpxchg
push
xor
mov
xlat
cmc
enter
xlat
push
and
cld
sbb
cdq
add
inc
aam
shr
mov
mov
mov
jp
aas
mov
xchg
and
(bad)
lock
(bad)
adc
jae
ss
repz
sbb
inc
cmps
movs
cmp
push
test
cmc
popa
cld
mov
xchg
or
cmp
pop
or
dec
mov
stos
in
ret
sahf
imul
inc
sbb
lock
nop
xor
xchg
mov
(bad)
or
mov
frstor
pop
pop
inc
mov
adc
xor
mov
cmp
pop
jg
pop
pop
and
data16
aad
add
bound
mov
mov
test
outs
scas
xor
mov
mov
test
push
cmp
add
add
cmps
call
test
stc
xor
push
jbe
imul
jl
sub
cmp
out
(bad)
ret
push
jb
add
movs
sub
in
js
sbb
sub
out
aam
rcl
mov
add
(bad)
fwait
dec
or
cmp
sub
rcr
arpl
cwde
sbb
and
inc
xor
dec
mov
push
inc
fs
dec
sahf
bound
cmp
mov
adc
adc
cmp
ja
push
stos
in
(bad)
sahf
mov
mov
cmc
ss
fwait
mov
retf
mov
clc
int
jp
add
popa
je
push
(bad)
(bad)
aam
xor
jo
addr16
cmc
outs
scas
pop
mov
xchg
xchg
mov
or
add
pop
cmp
fnstsw
push
lahf
xor
lods
cmp
dec
dec
adc
ins
jb
cli
jae
jb
outs
idiv
(bad)
out
fcomp
mov
add
cld
cwde
ins
mov
jbe
popa
push
mov
or
ins
fist
add
push
fmul
fwait
sub
sub
fisttp
cld
jecxz
adc
jo
pop
mov
repnz
fiadd
sbb
pop
mov
test
nop
in
cmp
mov
push
xlat
mov
xor
and
int3
sbb
jmp
leave
mov
test
mov
dec
retf
mov
push
mov
adc
(bad)
dec
xchg
mov
repz
int
jne
repz
cs
aam
gs
mov
and
mov
adc
pop
add
pop
cmp
jl
add
scas
pop
sti
xor
movs
cmp
mov
jl
and
cwde
mov
mov
mov
icebp
idiv
out
mov
dec
(bad)
out
pop
pushf
sbb
sbb
add
jae
lds
xlat
jne
repnz
jb
ds
pop
push
lock
sbb
loope
adc
sar
pop
loop
sbb
jne
ds
jo
adc
and
call
xor
into
rcr
xlat
cmp
adc
scas
ficomp
mov
popa
jne
xor
retf
scas
fstp
mov
adc
pop
push
fs
ins
cmp
jle
adc
mov
push
fild
test
add
and
xchg
sbb
xchg
iret
xor
pop
and
add
mov
aam
add
std
sub
cmp
xor
(bad)
jp
add
stc
mov
mov
xchg
mov
mov
mov
rol
aaa
ret
or
cmps
cmps
retf
cmps
retf
push
call
jge
lods
and
dec
xchg
sub
jl
pop
jge
js
(bad)
(bad)
add
mov
pop
out
out
ins
mov
jecxz
ja
out
fist
and
scas
push
push
cmp
repz
push
movs
jl
add
mov
push
movs
pop
inc
loope
dec
addr16
fisttp
xor
not
sub
jmp
mov
xor
movs
push
loopne
adc
std
mov
jnp
cmp
sbb
data16
push
pop
xor
push
test
mov
mov
inc
adc
or
pop
inc
imul
into
xor
mov
jmp
js
push
ins
mov
add
cmp
vshufps
dec
clc
add
cmp
xor
sbb
jl
sub
cs
push
mov
lea
out
lods
mov
cld
movs
sbb
mov
pop
xchg
add
in
call
xchg
push
sub
out
mov
shr
or
ja
repz
shr
movs
out
sub
fimul
jmp
jbe
pop
(bad)
cli
outs
(bad)
ficomp
outs
mov
cmps
xor
rcr
cld
jae
inc
xchg
popf
iret
ror
cmp
(bad)
jb
jmp
nop
xchg
cwde
mov
cs
stos
addr16
or
inc
xchg
sub
pop
cmp
xchg
mov
or
pop
int
(bad)
cld
adc
or
retf
xor
mov
std
jmp
sub
lea
aas
push
inc
arpl
sub
cmp
rcr
sub
cmp
int3
cmp
mov
mov
fisttp
shl
sahf
(bad)
out
sbb
add
pop
pop
sbb
xchg
pushf
push
cmp
adc
lods
xchg
sub
ins
inc
in
ja
in
nop
cmp
pop
mov
push
ins
pushf
xchg
and
ja
push
or
aam
movs
pop
xchg
xor
or
test
cdq
xor
fiadd
xor
fwait
(bad)
in
mov
mov
jne
pop
xlat
(bad)
add
and
xor
pop
xor
cmp
push
xchg
jb
jl
and
fld
les
mov
inc
inc
sbb
out
mov
dec
mov
dec
test
adc
loopne
xchg
or
fincstp
ror
call
cmp
out
rcl
mov
pop
xchg
movs
mov
inc
cdq
pop
popf
loopne
mov
ins
pop
dec
mov
mov
push
fwait
idiv
push
ins
dec
jo
outs
mov
(bad)
pop
call
mov
retf
push
call
or
mov
jmp
add
mov
cmp
mov
push
out
les
xchg
mov
sub
add
fs
jne
cwde
push
push
jne
xor
bsr
outs
mov
xor
mov
ja
push
fwait
sbb
inc
cmps
inc
push
and
imul
xchg
ss
mov
cmp
mov
adc
cmp
pop
sbb
jbe
cmp
push
mov
loopne
cmps
cli
adc
out
add
stos
sbb
inc
jp
hlt
jo
jne
cli
fbstp
xor
inc
pop
inc
(bad)
sub
js
pop
dec
aas
loop
icebp
(bad)
lahf
fnsave
pop
push
aad
int
push
inc
fcomi
js
loopne
(bad)
xchg
fdivr
adc
adc
int3
pop
xchg
sbb
pop
and
xchg
outs
scas
std
aas
jmp
cli
mov
push
or
and
(bad)
stos
sbb
cmp
push
mov
in
jecxz
cmps
loop
xchg
dec
retf
pop
xchg
popa
and
mov
cmp
test
in
xor
mov
sub
mov
add
sbb
pop
inc
shl
es
add
in
sbb
jmp
or
sbb
dec
hlt
xchg
jo
jecxz
leave
mov
dec
ins
lods
or
adc
pop
mov
inc
rcr
dec
jp
adc
inc
clc
mov
ins
repz
dec
mov
cli
mov
ja
dec
fisttp
mov
punpcklwd
je
mov
and
dec
imul
add
pop
jb
outs
mov
cmp
shr
(bad)
xchg
call
fldcw
add
out
adc
xchg
lahf
in
outs
add
inc
cmp
repnz
int3
xchg
mov
xchg
xor
push
sub
cmc
loope
fisub
dec
add
push
movs
pop
inc
fisubr
jae
nop
cmc
add
dec
daa
cmps
and
hlt
or
out
mul
xchg
std
push
fisubr
addr16
arpl
mul
icebp
inc
dec
hlt
pop
jo
stc
mov
inc
xchg
sub
sar
fild
push
xchg
retf
cmp
cmp
xor
std
inc
cwde
sub
dec
sub
adc
jmp
jecxz
xor
xor
dec
cli
pop
sti
mov
movs
cmp
sub
mov
stos
(bad)
(bad)
(bad)
es
shl
outs
fsub
sub
fsubr
stos
(bad)
rol
pop
jmp
jge
mov
sub
test
fst
js
stos
outs
sbb
jecxz
ja
jmp
aaa
loop
fs
fidivr
ficomp
pop
int3
add
jp
stos
popf
mov
and
(bad)
jb
pop
sbb
xchg
push
dec
inc
sub
mov
add
scas
sub
aam
sbb
fwait
scas
popf
addr16
hlt
pop
repnz
fimul
push
sub
(bad)
jno
test
mov
(bad)
clc
add
xchg
test
mov
and
les
scas
pop
dec
dec
ret
cmp
pop
mov
xchg
add
adc
inc
popa
(bad)
popa
dec
add
in
mov
cs
sub
dec
push
mov
sbb
das
add
or
fwait
shl
gs
adc
arpl
lods
stos
loop
sbb
jmp
jl
dec
mov
push
sub
push
test
mov
in
les
mov
adc
xchg
scas
xor
and
gs
icebp
adc
mov
ds
dec
stos
mov
cmp
sub
mov
mov
xor
mov
gs
sub
retf
stos
(bad)
sbb
in
loop
pop
ja
cwde
jl
mov
push
pop
mov
and
pop
and
cmp
push
and
dec
add
jmp
add
xchg
test
mov
mov
mov
pop
or
sbb
mov
xchg
xchg
fmul
jmp
imul
enter
dec
add
in
nop
xor
add
adc
aaa
shr
imul
mov
retf
shl
dec
cs
and
movs
xchg
dec
xchg
out
cmps
push
adc
(bad)
(bad)
(bad)
sbb
add
dec
sub
xor
xchg
test
push
pusha
push
ins
mov
pusha
mov
sub
movs
or
or
or
jbe
fcmovu
mov
fld
loop
sub
sti
lods
dec
pop
push
cmp
and
imul
movs
lea
xchg
dec
test
shl
aad
jnp
mov
mov
jae
aas
fsubr
dec
jnp
dec
sub
idiv
mov
movs
jecxz
dec
rcl
inc
lds
cmp
sbb
movs
mov
cmp
aad
pop
sbb
sbb
mov
clc
stc
cwde
out
popf
sti
mov
movs
cmp
scas
dec
movs
mov
ins
(bad)
mov
outs
mov
(bad)
pop
(bad)
ins
mov
inc
cmc
gs
fst
adc
xlat
push
push
shl
fdivr
mov
sub
push
sbb
pop
push
std
lock
jne
cs
cmps
adc
leave
sbb
shl
xor
inc
mov
xchg
lds
inc
cmps
mov
test
push
(bad)
pop
loope
ja
stos
(bad)
call
test
sub
mov
movs
jno
jbe
ss
leave
out
int3
mov
test
mov
cmp
jbe
adc
push
ss
into
xor
std
dec
cwde
sub
pop
dec
dec
shr
icebp
(bad)
lahf
fnsave
pop
push
xchg
cmp
outs
fwait
dec
mov
cmp
fiadd
mov
lea
and
or
xor
call
daa
lods
xchg
cmps
(bad)
add
mov
xchg
mov
cmc
jb
fisttp
mov
mov
aaa
ins
ins
mov
inc
int
sub
sub
adc
or
sbb
inc
dec
pop
adc
mov
pop
mov
stc
rcl
mov
rcr
iret
xor
sbb
daa
shr
xlat
mov
sbb
push
dec
ins
retf
fbstp
mov
enter
adc
pop
or
jnp
pop
imul
inc
ficom
push
lock
add
mov
repnz
int
iret
or
jecxz
dec
ror
xor
mov
ffree
mov
(bad)
aas
test
dec
icebp
ins
sub
cmps
pop
push
imul
add
add
sub
jle
adc
mov
or
enter
cmps
cmp
push
mov
xchg
and
mov
outs
adc
pop
push
jmp
mov
out
call
cmps
loope
pop
cmp
in
push
lods
xchg
repz
fidivr
aaa
ins
ins
lahf
add
fbld
adc
out
loop
xchg
stos
add
lods
pop
rcl
push
or
rcr
(bad)
dec
add
mov
cwde
mov
dec
sbb
xor
or
mov
bound
pushf
xor
mov
cmp
loopne
jmp
and
mov
or
je
in
mov
imul
ins
inc
push
or
xor
pop
ss
xor
mov
sub
pop
dec
int3
enter
pusha
pushf
mov
in
aam
add
sub
lods
ret
aaa
mov
ins
pop
retf
push
sti
xor
movs
mov
mov
adc
fnstcw
sahf
add
and
sub
fadd
ss
xlat
stc
jmp
push
pushf
push
popa
ja
adc
lahf
pop
and
ja
repnz
cmp
cpuid
mov
xchg
in
inc
rcl
leave
cld
sbb
jno
loop
cmp
aam
out
lods
xchg
and
mov
div
cld
int
pop
fadd
test
jmp
inc
in
jae
pop
xlat
mov
out
mov
stc
retf
push
ins
icebp
retf
xchg
nop
adc
adc
mov
(bad)
dec
jle
pop
(bad)
jbe
mov
push
lock
out
or
or
inc
(bad)
icebp
jnp
sahf
xor
div
inc
cli
stc
mov
or
test
das
in
pop
mov
cmp
and
hlt
inc
cli
xor
jecxz
shl
(bad)
ins
fisttp
fiadd
test
movs
mov
add
out
and
sbb
push
hlt
les
int
mov
bound
aas
ds
ins
sbb
rcr
sbb
xor
sub
xchg
pop
ficom
mov
rcl
xchg
pop
iret
das
into
xor
nop
addr16
int3
inc
cmps
xor
retf
mov
cs
sbb
movs
push
sbb
(bad)
mov
xchg
cmp
xchg
aaa
je
or
push
lock
nop
retf
mov
push
xchg
cmp
aad
std
das
loopne
ss
xor
xor
dec
cmp
sbb
aas
push
aad
mov
pop
push
jecxz
pop
or
jecxz
imul
jns
cmp
mov
fmul
shl
es
bound
add
pushf
fild
and
xchg
mov
pusha
cmp
cmc
stos
mov
push
out
jbe
in
les
jae
dec
fstp
ret
out
or
push
xchg
jmp
sbb
aas
scas
cwde
arpl
ins
push
mov
ficom
in
or
push
dec
inc
fcomp
pop
sub
adc
imul
adc
jnp
jb
pop
and
jo
aaa
inc
jo
test
dec
hlt
pop
jo
mov
fist
test
xor
test
or
push
jne
lock
stos
call
push
outs
and
pop
(bad)
enter
(bad)
adc
pop
add
mov
pop
ins
or
xor
push
dec
rcr
lea
and
sar
ret
(bad)
sti
jle
dec
jl
add
cpuid
push
lods
cmps
mov
arpl
cmps
and
cmp
push
mov
jo
call
xchg
push
cli
pop
mov
cld
out
xchg
test
and
sbb
ret
(bad)
sub
pop
sbb
fadd
push
cmps
pop
mov
stos
popf
imul
leave
pop
iret
pop
fst
loop
and
sub
and
fdivr
pop
push
cmp
sub
loope
adc
mov
mov
and
(bad)
lock
fisttp
push
gs
lar
pop
int
push
jle
aad
hlt
and
inc
and
adc
clc
and
lods
sub
adc
loope
jecxz
cmp
mov
pusha
jg
mov
ss
das
mov
shl
cmp
out
cwde
ins
push
mov
sbb
mov
sbb
lods
pop
and
icebp
add
das
es
jbe
loop
cmp
pushf
cmp
aam
fcomp
pop
jl
xor
sub
ret
ftst
js
das
nop
in
push
sub
jge
call
test
inc
adc
dec
cmps
js
(bad)
int
add
mov
xchg
adc
xchg
jge
aam
cmps
movs
daa
int3
sub
xchg
(bad)
into
stos
or
repz
push
push
enter
xchg
jb
clc
pop
sbb
(bad)
mov
loop
adc
or
inc
push
int3
pop
lock
enter
xchg
inc
push
or
mov
retf
stos
mov
call
add
add
ret
and
push
pop
jg
daa
cmp
in
adc
lods
add
cmp
leave
aaa
call
xor
movs
cmp
mov
movs
fbld
ins
fisttp
shl
cmp
xor
and
sbb
out
adc
jmp
jge
hlt
jmp
daa
stos
sub
(bad)
rol
push
pop
and
mov
ja
icebp
loope
pop
pop
mov
in
and
test
or
fsubr
int
push
add
mov
fild
adc
ss
dec
inc
sbb
push
aaa
sbb
or
test
lods
int3
outs
lea
je
sbb
push
lock
inc
mov
jg
lock
dec
jns
cmp
call
iret
je
add
jmp
cs
ss
jecxz
xor
enter
jmp
in
stos
clc
sahf
in
hlt
js
in
dec
das
call
pusha
mov
cmp
fdivrp
mov
push
xor
and
stos
jge
sbb
and
jl
das
mov
sub
cld
fsubr
imul
and
pushf
repnz
pop
repnz
mov
test
cmp
outs
xchg
cmp
sbb
mov
add
pop
add
retf
stos
test
lods
xchg
test
sbb
cmp
dec
arpl
in
imul
das
dec
fldcw
inc
fwait
ret
push
inc
movs
xchg
and
jae
xor
inc
hlt
xor
cdq
adc
mov
ins
in
adc
xor
test
int
jg
adc
loope
(bad)
mov
cs
and
ror
stc
adc
mov
mov
pushf
jmp
(bad)
cmp
inc
jne
les
jns
repnz
out
push
mov
and
or
jno
and
sti
int
data16
mov
and
pop
fbstp
pop
mov
fcom
addr16
ret
or
fcom
xchg
sahf
(bad)
enter
sbb
jle
mov
scas
sub
stos
repnz
clc
and
mov
ss
push
in
sub
arpl
fbld
dec
int3
outs
mov
cld
sub
jne
sub
xor
inc
cmp
outs
mov
jno
mov
jg
and
jnp
aaa
mov
and
cdq
outs
push
inc
mov
add
add
pop
jae
mov
movs
add
xchg
adc
cli
sub
ret
add
mov
jecxz
mov
test
sar
pop
sub
push
popa
stc
pop
pop
mov
retf
pop
mov
repz
push
sbb
out
mov
and
or
test
icebp
call
mov
push
mov
sbb
retf
push
mov
mov
aaa
clc
cmp
add
ret
mov
adc
and
pop
ja
pop
mov
(bad)
ret
or
pop
rcl
mov
js
stos
pop
xor
es
jno
or
addr16
push
inc
dec
out
out
fadd
adc
jmp
div
call
mov
es
clc
loopne
pop
lock
cwde
push
mov
(bad)
mov
sahf
ret
inc
in
in
or
push
push
out
sbb
icebp
pop
int
dec
cmp
ja
mov
jmp
jmp
jb
cmp
dec
stc
mov
cmp
pusha
mov
sar
inc
jmp
dec
add
dec
mov
and
inc
mov
jnp
push
arpl
jno
int
pop
xlat
or
out
mov
stc
mov
imul
sbb
adc
jae
pop
fcomp
in
shr
or
push
pop
call
je
mov
ins
mov
mov
movs
aas
ret
mov
and
popa
xchg
or
es
fcomp
(bad)
add
mov
popf
(bad)
into
dec
mov
fsub
push
mov
into
outs
(bad)
in
shl
ja
loopne
sub
adc
mov
test
sub
push
jle
clc
xor
mov
nop
pop
push
adc
xor
jle
or
jno
aam
rcr
inc
ror
outs
mov
xor
lahf
ret
cdq
ins
pop
mov
fdivr
(bad)
or
inc
retf
cwde
inc
pop
mov
mov
push
cmp
cli
jecxz
xchg
mov
stos
hlt
adc
xchg
int
pop
fild
cmp
push
mov
push
ins
cmp
ror
or
mov
cdq
cmp
sar
add
sbb
popf
(bad)
cmp
(bad)
movs
inc
jae
pop
leave
addr16
retf
add
mov
mov
(bad)
into
scas
or
pop
push
es
cmp
pop
sbb
ins
sub
jle
addr16
add
add
fcmovnu
jecxz
push
cld
dec
xchg
ds
adc
pop
bound
cmp
cmp
xchg
mov
pop
xchg
std
adc
loop
ror
xchg
sub
jle
adc
jb
dec
and
ret
inc
not
test
in
std
cwde
mov
pop
rol
iret
clc
pop
mov
popf
outs
inc
(bad)
mov
adc
cmp
sbb
std
mov
imul
jp
adc
xchg
and
pop
sbb
lock
jo
cmp
daa
mov
cmc
loope
jae
inc
push
(bad)
mov
and
mov
push
rcl
sti
mov
fbld
pop
pop
dec
pop
lahf
mov
mov
sbb
retf
mov
push
sub
pop
ja
and
fldcw
xor
retf
sahf
std
inc
ss
ror
fstp
cmp
and
ficomp
cmp
mov
(bad)
retf
adc
test
adc
ret
push
jecxz
aaa
sub
inc
jne
and
retf
stc
in
lahf
cmp
add
mov
and
out
repz
mov
pop
mov
inc
inc
sbb
fcomp
mov
sub
cmp
in
xchg
call
call
ret
mov
lea
sbb
sub
or
adc
out
dec
outs
mov
pop
(bad)
mov
repz
cmp
lock
icebp
out
stc
loope
inc
mov
mov
xchg
push
and
mov
xchg
mov
dec
gs
mov
retf
dec
add
in
ret
sub
imul
icebp
stc
push
and
jae
ins
dec
test
dec
jb
or
xor
xor
sub
fidivr
add
pusha
jge
mov
aas
push
mov
push
jecxz
or
jecxz
inc
popf
dec
mov
push
mov
aas
sub
jmp
mov
std
and
inc
test
jg
stc
jl
icebp
xchg
(bad)
lods
bound
out
mov
jnp
push
fbld
fsubr
dec
push
rol
fst
pop
in
sbb
cmp
jmp
(bad)
mov
sub
pusha
mov
xchg
pop
pop
cmc
push
(bad)
pop
movs
pusha
das
mov
sbb
shr
mov
call
inc
sbb
push
fwait
mov
test
iret
xor
jb
push
pop
adc
add
add
sbb
nop
jo
(bad)
mov
mov
iret
test
aam
fdiv
int
sbb
popa
mov
dec
ins
fst
loopne
pusha
xchg
mov
in
aam
adc
fist
jecxz
mov
stos
loope
mov
ret
mov
pusha
push
sahf
lahf
das
daa
fdiv
movs
imul
fisttp
mov
call
mov
adc
arpl
daa
out
sahf
mov
loope
pusha
sahf
bound
ror
mov
cmp
je
movs
sub
sub
adc
sbb
sbb
in
adc
faddp
cmp
stc
aam
(bad)
dec
int3
sbb
mov
inc
and
jp
push
mov
xlat
mov
lock
(bad)
repz
mov
retf
cmp
xor
mov
and
jg
addr16
int3
enter
and
mov
ins
mov
mov
mov
mov
jbe
pop
loopne
aad
adc
movs
cmp
icebp
enter
std
adc
pop
dec
sub
aad
ja
dec
xchg
cdq
cmp
push
(bad)
jno
mov
mov
add
cmp
adc
xchg
xlat
or
jl
push
ror
jns
jo
shl
add
inc
sub
pop
mov
xchg
push
bound
lods
and
int
les
fcom
pop
dec
xchg
jns
data16
jge
lock
add
nop
out
in
jecxz
popa
fs
jge
adc
ficomp
jle
mov
outs
div
sbb
bound
mov
inc
movs
xor
rdtsc
pop
xchg
push
sahf
retf
push
cmps
(bad)
out
imul
sbb
aas
pop
mov
sbb
and
and
lods
add
addr16
mov
inc
xchg
sub
mov
xchg
cmps
fsub
cmc
inc
pop
and
xor
sbb
das
loopne
pop
add
mov
cmp
push
cdq
scas
adc
dec
movs
test
pushf
or
rol
je
(bad)
mov
popa
push
sbb
mov
jg
popa
push
adc
das
sti
fnstenv
dec
xchg
adc
(bad)
pop
aam
and
xor
cmps
mov
arpl
(bad)
sbb
lods
aaa
mov
sbb
xor
mov
aas
cmp
push
lods
and
test
fnsave
mov
or
aam
push
mov
pop
and
add
and
xor
and
icebp
outs
(bad)
and
movs
dec
sub
shl
out
dec
sbb
add
loop
es
cmp
xchg
gs
paddq
ins
fnstsw
add
xchg
sbb
ss
mov
pop
xchg
mov
inc
(bad)
cld
lock
jmp
fcmovbe
retf
lock
and
mov
(bad)
clc
cld
jmp
in
icebp
rol
push
arpl
sbb
cmp
jge
or
in
mov
pusha
push
data16
ins
outs
stc
mov
push
jp
sbb
das
or
(bad)
out
sbb
pop
sbb
cmp
sbb
lods
aaa
in
xchg
sub
sbb
jb
sub
(bad)
icebp
test
fst
js
stos
outs
sbb
push
push
mov
jo
cmp
daa
mov
cmc
loope
repnz
mov
retf
mov
mov
sub
addr16
sub
mov
js
pop
xlat
push
sub
cli
cmps
push
inc
jno
pop
pop
mov
das
les
(bad)
in
mov
adc
fsubrp
ds
es
push
dec
xchg
dec
jns
cmps
or
cmc
inc
addr16
add
xchg
cmp
loopne
fwait
int
inc
xor
adc
mov
push
sub
xor
iret
ja
out
jno
add
shl
pop
enter
adc
(bad)
mov
scas
jno
je
cmps
push
fbld
pop
test
jns
sub
mov
lea
fbld
fcomp
(bad)
jmp
mov
imul
push
adc
adc
jo
pop
rol
cwde
xor
push
ds
sub
movs
inc
test
sbb
inc
cmps
daa
neg
xlat
mov
jns
into
push
push
inc
jne
sbb
mov
cmp
scas
xor
jmp
adc
in
mov
jle
in
aas
sahf
ror
inc
sbb
out
pop
xchg
mov
or
(bad)
into
outs
add
xor
loopne
rol
adc
and
and
sub
push
cli
pop
dec
(bad)
sub
adc
push
sbb
inc
aaa
sahf
pop
jne
cmp
mov
mov
mov
scas
add
sub
movs
(bad)
xor
push
rcpps
imul
cwde
push
cdq
pop
test
push
mov
shl
ins
lods
and
daa
loope
pusha
test
retf
sub
icebp
(bad)
aam
or
hlt
push
imul
cmp
mov
and
aaa
pop
mov
(bad)
fiadd
add
and
popa
sub
mov
add
add
int3
sub
sub
jmp
xchg
int
(bad)
pop
es
sub
add
in
pop
and
data16
push
hlt
inc
jo
test
inc
dec
sub
xchg
cmp
mov
xor
cli
repz
fidivr
clc
add
xchg
test
ret
and
sbb
aad
sub
js
cmp
ficom
jecxz
pop
xchg
inc
pushf
mov
(bad)
jp
mov
cs
xlat
retf
ins
push
add
xor
das
mov
push
cmp
out
std
mov
jmp
and
push
mov
pop
sub
jle
cmc
pop
mov
fmul
(bad)
stos
mov
push
out
xchg
ss
inc
popa
cmp
cld
mov
pop
xor
(bad)
sub
movs
daa
bound
fisttp
jle
mov
xor
pop
movs
iret
xor
push
outs
or
xchg
jl
iret
jb
(bad)
fiadd
idiv
stos
inc
leave
xor
jno
push
or
in
test
adc
mov
inc
mov
scas
pop
inc
sahf
adc
sbb
mov
dec
pop
int
bound
aad
xchg
das
fistp
mov
xor
inc
icebp
push
mov
enter
arpl
movs
sub
fcom
mov
inc
retf
icebp
add
jl
call
sbb
dec
iret
jb
fadd
or
mov
pop
push
mov
or
cmp
test
sub
lods
pushf
repnz
repnz
into
add
push
add
outs
xchg
cmp
mov
imul
loop
fidivr
dec
cmp
push
(bad)
and
popf
(bad)
in
fimul
das
mov
cmp
call
ss
imul
popf
inc
shr
fst
pop
push
es
in
jne
jl
jbe
ss
add
retf
leave
inc
imul
pop
ss
test
jg
adc
fidiv
inc
ror
xor
fcmove
adc
and
jae
aas
push
shr
mov
mov
fidiv
add
push
adc
or
jnp
add
sar
div
dec
sub
pop
retf
push
call
loop
inc
mov
push
fcom
sti
cmp
push
mov
cld
lock
or
push
std
hlt
or
or
jg
add
jmp
or
dec
or
shl
rol
add
add
push
test
aad
rcr
mov
imul
or
lods
inc
bswap
in
jl
sbb
inc
xchg
lds
hlt
pop
jo
mov
gs
and
mov
jge
jmp
or
int
sbb
popa
mov
ret
and
sub
dec
xchg
mov
in
push
mov
es
push
inc
jge
test
mov
pop
stc
sub
jle
and
repnz
jo
add
(bad)
rcl
jge
dec
cmps
lods
ror
push
call
or
icebp
and
shl
jmp
ds
lock
stos
jne
xchg
push
movq
pop
nop
sub
cld
in
sbb
outs
and
pop
add
push
or
mov
and
cmp
sub
outs
xchg
xchg
push
fisttp
fcomi
jg
inc
icebp
arpl
xchg
push
popf
xchg
retf
out
and
adc
pop
and
jge
aaa
ja
xor
and
adc
ds
inc
fist
jb
xchg
mov
sar
mov
sti
pop
fld
push
jle
fisubr
ds
mov
mov
std
mov
pop
dec
nop
call
mov
arpl
int
jns
enter
ror
(bad)
jmp
cmp
sub
mov
pop
cmp
ja
xchg
jno
ret
add
loope
push
das
cmp
imul
adc
push
mov
inc
sub
jl
cld
jge
cmp
pop
pusha
cmp
dec
mov
jmp
fld
sbb
push
xor
dec
push
pop
call
or
cmp
cmp
mov
push
jg
pusha
mov
inc
sbb
and
loopne
popa
inc
out
mov
xchg
scas
jnp
push
retf
pop
ja
xor
jmp
je
sbb
fiadd
inc
call
xor
sub
and
not
out
data16
pop
test
mov
inc
sahf
inc
rcr
into
(bad)
jne
scas
cwde
xchg
imul
add
mov
js
leave
ror
loope
mov
and
jns
mov
movs
cmp
lahf
dec
add
test
and
loope
sti
jp
sbb
(bad)
nop
mov
data16
dec
dec
imul
and
push
and
daa
imul
jle
les
sub
mov
lods
dec
sbb
xchg
xor
call
xor
xor
add
add
xchg
mov
cmp
pop
cmc
jmp
xchg
mov
or
cmc
mov
mov
sub
enter
xchg
leave
adc
xor
inc
cmp
cmps
dec
call
in
mov
jmp
adc
inc
mov
and
jp
fild
scas
cld
lods
cmp
data16
pop
xchg
or
sub
and
pop
xor
and
scas
aad
sub
jbe
cmp
pop
nop
add
cmp
fnstsw
jns
xor
push
lods
aas
mov
ins
leave
mov
xor
outs
test
iret
push
movs
jbe
pop
push
jno
and
ror
push
fbld
sbb
inc
iret
mov
push
retf
mov
push
iret
sub
test
lds
xchg
in
test
pop
xchg
test
xchg
xor
aas
scas
fdivp
jnp
xor
jp
xor
jns
xchg
loop
aad
out
inc
dec
mov
xchg
cmp
pop
xor
(bad)
retf
mov
xchg
clc
cld
jmp
adc
mov
push
dec
mov
jbe
jbe
mov
mov
dec
retf
sar
aam
mov
pop
lock
dec
dec
loopne
jg
lods
push
fild
ret
inc
loopne
cmp
repz
fadd
push
sub
adc
mov
test
inc
lahf
mov
test
sub
adc
dec
sub
and
sbb
cs
fisttp
shr
(bad)
out
(bad)
fsub
sbb
cld
out
call
loop
lods
and
dec
jns
arpl
imul
repnz
sub
stos
sub
jae
sub
xchg
ins
xchg
test
inc
imul
mov
shr
idiv
xor
aad
cmp
jb
shl
adc
sbb
aam
movs
daa
pop
pop
push
mov
call
jge
stos
(bad)
mov
adc
psubd
sar
mov
mov
leave
inc
sbb
lahf
sub
mov
sbb
daa
test
int
call
dec
push
fadd
call
xor
dec
sbb
(bad)
adc
pop
pop
jecxz
cmp
dec
xchg
(bad)
mov
pusha
jecxz
imul
repz
dec
mov
lods
sub
nop
dec
out
mov
shr
and
pop
out
popf
jae
cld
and
ins
and
or
scas
rcl
pop
div
add
ins
cmps
icebp
lgs
lock
jl
sub
add
add
fs
pop
inc
movs
daa
jp
mov
pop
mov
sti
mov
mov
test
adc
push
inc
or
push
scas
shr
mov
imul
jge
daa
pop
dec
int3
cmp
ds
jmp
ins
push
addr16
dec
mov
shr
mov
jecxz
sti
pop
fild
outs
pop
repnz
adc
clc
xor
imul
ds
fcmove
repz
aas
inc
jnp
pop
(bad)
mov
pop
push
dec
cmp
mov
push
rol
mov
mov
pop
dec
jnp
adc
jb
pop
or
add
or
add
pop
pop
icebp
add
push
or
jmp
loop
(bad)
fisttp
lds
sbb
add
cmovnp
cmps
clc
loope
shl
mov
sbb
xchg
(bad)
loopne
ret
or
and
out
or
fimul
rep
jmp
mov
pop
iret
mov
in
out
push
(bad)
sbb
lahf
cmp
imul
ret
inc
hlt
mov
in
mov
pop
mov
imul
imul
fistp
jecxz
fild
push
xchg
ss
pop
int
loopne
xchg
sub
inc
mov
loopne
cmp
loopne
imul
push
cdq
pop
pusha
mov
or
pop
shl
js
mov
inc
mov
fiadd
push
adc
sbb
mov
inc
dec
nop
mov
push
xor
stc
mov
das
adc
pop
pushf
inc
outs
(bad)
sbb
int
sub
push
hlt
sbb
xchg
pop
mov
ret
fst
push
ss
in
push
sub
mov
push
jnp
dec
sub
mov
das
xor
stos
xchg
(bad)
dec
aam
add
jno
int3
popa
dec
or
cs
xchg
fld
mov
xor
mov
jecxz
fldcw
xor
mov
jl
in
jnp
cwde
pop
sbb
test
add
bound
mov
mov
inc
fcom
jbe
inc
adc
adc
fidivr
std
push
std
add
pop
dec
dec
rol
sub
test
add
adc
lds
mov
push
add
sti
sar
jl
(bad)
aas
aam
dec
adc
adc
jo
sar
jle
mov
das
adc
inc
cld
fs
jmp
les
lds
sbb
popf
push
(bad)
ds
push
add
mov
cmp
dec
sbb
sub
outs
ss
jmp
inc
sub
xchg
pop
test
movs
inc
dec
add
xor
xchg
sub
mov
mov
mov
popf
push
sbb
movs
sbb
xor
mov
das
mov
and
fwait
pop
leave
and
xor
mov
scas
inc
mov
cmc
test
mov
out
xor
push
mov
mov
or
sub
pop
loop
loop
pop
push
push
pop
or
mov
sub
jno
inc
push
mov
and
dec
adc
xchg
and
fimul
and
rol
bound
ret
sbb
dec
cmp
adc
outs
mov
gs
mov
cmp
ret
fxch
js
or
sbb
fimul
fs
pop
call
cmp
div
push
rcr
pop
xchg
dec
cmp
in
call
xor
rol
push
out
pop
push
adc
es
cmp
fwait
xchg
push
(bad)
jmp
sbb
mov
lock
out
paddb
sbb
cmps
outs
fldcw
dec
icebp
sahf
dec
fild
pop
mov
mov
jp
xchg
pop
push
(bad)
xor
xchg
addr16
mov
shl
xchg
or
and
mov
test
sbb
addr16
das
mov
lahf
dec
add
iret
and
sti
inc
and
pop
mov
jno
aam
sbb
mov
mov
pop
dec
cmp
fwait
in
xchg
push
lahf
pusha
mov
(bad)
xchg
lahf
sbb
and
push
mov
int
xchg
push
fstp
xor
call
mov
test
int3
cwde
add
dec
mov
or
mov
dec
mov
cmp
lds
inc
and
inc
fwait
pop
and
mov
mov
jns
int
sbb
inc
and
call
jle
sbb
data16
jmp
add
and
ss
div
int
mov
inc
sti
movs
and
jae
movs
dec
(bad)
xor
pop
inc
inc
sbb
(bad)
mov
adc
dec
outs
fldcw
pusha
push
daa
movs
lds
add
dec
sti
cvtps2pd
stos
lods
xlat
jnp
mov
sub
xchg
aam
sub
adc
mov
add
test
stos
xchg
mov
faddp
call
sub
shl
pop
iret
mov
in
or
ja
retf
daa
repz
out
ds
xor
in
bnd
stos
(bad)
mov
xchg
pushf
data16
sbb
xchg
nop
retf
cmps
pushf
mov
and
cmps
mov
(bad)
add
or
in
dec
push
jecxz
test
pop
mov
jb
gs
xlat
mov
cld
loopne
xchg
sub
(bad)
mov
push
pop
pop
pop
pop
mov
pop
sub
stos
sub
add
test
mov
jno
mov
fcmovb
jmp
fwait
in
mov
call
bound
daa
or
pop
push
and
pop
jl
or
push
pushf
dec
lock
dec
cli
xchg
aad
push
cli
in
xchg
xor
nop
lds
jo
adc
adc
ds
lea
push
push
or
jle
lahf
cmp
mov
outs
push
popf
pop
adc
int
add
dec
out
inc
rcl
fprem1
xor
mov
sub
jbe
fiadd
inc
call
scas
cmovno
or
call
or
sub
aas
mov
xor
cmc
cmp
pop
pop
adc
aas
push
aad
add
dec
movs
jo
cmp
push
and
mov
lds
inc
push
mov
pop
dec
imul
jbe
add
jg
stc
jl
icebp
xor
shl
data16
cld
fs
or
es
push
(bad)
aaa
aam
pop
push
push
ja
sbb
push
sub
mov
jmp
xchg
mov
push
sub
xchg
and
add
pop
pop
imul
dec
je
sub
test
push
mov
jge
sub
test
xlat
ret
mov
xor
outs
(bad)
into
in
dec
loopne
loopne
adc
mov
stc
rcl
mov
mov
lock
xchg
jne
jnp
ror
push
sub
daa
inc
sahf
mov
xor
mov
jo
sub
adc
fadd
push
cmp
test
das
cmp
xor
mov
lock
fidiv
(bad)
jle
mov
lds
jnp
addr16
sar
xchg
shr
in
ror
add
add
cld
cwde
lods
scas
sub
xlat
push
imul
or
or
test
add
lods
sbb
pop
inc
mov
add
jbe
(bad)
pop
dec
(bad)
sub
das
scas
fdiv
movs
xor
repz
fldenv
icebp
in
scas
pop
fisttp
iret
mov
cbw
mov
dec
iret
enter
dec
jae
ficom
retf
inc
outs
sub
cmp
sbb
popa
call
mov
test
mov
mov
inc
js
push
jnp
fsubr
nop
aam
xchg
mov
out
ret
fadd
inc
mov
pushf
aad
ret
mov
or
cmp
test
retf
pop
shl
mov
add
mov
retf
popf
stc
or
jp
xor
xchg
adc
cmp
mov
mov
pop
jp
sbb
shl
shl
and
out
fdivr
mov
popf
xchg
push
sbb
shl
jmp
push
(bad)
cmp
or
in
mov
cmps
std
sub
sahf
adc
jg
mov
ret
mov
lods
xchg
adc
js
aad
rol
and
iret
xor
movs
imul
mov
lods
dec
inc
fwait
dec
jle
gs
out
es
xor
movs
outs
out
jle
push
fs
inc
jle
enter
leave
inc
inc
push
xor
test
test
stos
inc
mov
adc
xor
mov
sar
inc
loopne
xchg
lock
data16
dec
pop
sub
(bad)
xchg
push
mov
inc
sbb
ins
cmp
adc
xor
outs
fs
iret
mov
(bad)
int3
pop
aam
inc
sub
jl
xchg
dec
inc
daa
cdq
pop
pop
ror
pop
add
push
scas
sahf
fisttp
sub
push
xlat
in
mov
inc
out
outs
xchg
test
cmps
ja
or
addr16
stos
movs
lods
jmp
or
aaa
mov
jae
loopne
iret
mov
sbb
add
inc
cmps
jp
push
xlat
mov
lea
pop
push
adc
lods
xor
xchg
and
adc
push
gs
gs
cmps
fs
inc
addr16
add
dec
jmp
dec
cmp
xor
mov
jmp
(bad)
and
push
or
ror
fsub
mov
outs
fisubr
cli
mov
(bad)
cld
lahf
jb
stos
cmp
mov
add
shl
daa
and
mov
(bad)
jge
dec
daa
push
mov
add
pop
ffree
add
in
add
xor
imul
nop
aad
push
test
shr
div
push
ret
sub
lods
xchg
and
fisttp
dec
jbe
movs
xor
mov
imul
daa
shl
je
mov
loop
pop
mov
pop
xor
mov
mov
lahf
movs
ins
in
jg
add
and
inc
pop
cmp
addr16
(bad)
aas
inc
mov
out
jo
int3
xchg
loop
mov
xor
sbb
push
js
mov
or
lahf
sbb
xchg
imul
mov
sub
dec
faddp
add
inc
inc
jb
xor
inc
retf
add
pop
pop
cmp
mov
lods
sbb
inc
jp
sub
sbb
or
cs
pop
ss
adc
mov
call
push
aad
pusha
ret
push
clc
dec
xchg
lods
pop
dec
or
aam
inc
outs
xchg
test
push
ja
sbb
jo
pop
call
or
dec
mov
fs
popa
pop
iret
int3
into
jbe
and
jmp
mov
test
adc
push
or
out
pop
repnz
mov
js
mov
jne
mov
dec
loope
and
leave
inc
xchg
xor
mov
xchg
(bad)
mov
into
add
pop
pop
mov
xor
lods
loope
or
sar
push
xlat
ja
sbb
cmp
mov
ret
lea
xchg
inc
pusha
(bad)
jmp
xchg
sub
fwait
pop
cmp
push
inc
xor
mov
(bad)
call
sbb
pop
xchg
sub
xchg
or
ficom
cld
lock
or
outs
outs
aam
sub
jae
mov
or
push
pop
pop
es
adc
mov
and
mov
and
in
xor
adc
or
stos
retf
jle
popf
mov
push
out
aad
xor
into
popa
sbb
xchg
popf
jo
adc
leave
out
dec
fild
mov
leave
push
iret
es
cvtpi2ps
mov
dec
mov
mov
iret
out
dec
push
jns
jge
(bad)
popa
xor
jne
mov
call
xlat
aaa
and
adc
sbb
lods
add
cmp
mov
mov
je
jno
add
arpl
add
add
shl
iret
push
cmps
xchg
push
push
xor
sbb
xchg
scas
push
das
cdq
shl
or
lods
ss
cmp
xchg
movs
cwde
push
std
mov
mov
mov
and
test
mov
jle
cmp
mov
mov
or
inc
or
dec
mov
fs
pop
iret
dec
mov
rcr
ret
push
leave
push
xchg
sub
inc
inc
sbb
push
test
int
aaa
scas
into
add
add
push
sbb
pop
ss
add
inc
xchg
sub
repz
xchg
and
lock
out
in
int3
jns
sbb
push
bound
mov
mov
jle
or
repz
retf
shr
icebp
ror
pop
jmp
dec
rol
and
retf
in
sbb
ret
xor
mov
push
jnp
jo
das
or
add
(bad)
ins
mov
outs
movs
cld
xor
push
fcomip
rcl
aam
fcom
test
or
mov
dec
cmp
push
jecxz
test
lods
or
je
mov
ret
adc
lods
xchg
push
mov
mov
pop
and
outs
mov
(bad)
out
loopne
mov
pop
xlat
mov
push
xor
mov
mov
pop
xor
xor
ffree
dec
ret
in
(bad)
stc
xor
mov
adc
jle
pop
fisttp
push
gs
repz
jns
add
mov
push
call
fcmove
sub
dec
les
adc
push
sbb
int3
(bad)
jne
pusha
mov
inc
adc
call
mov
int
xchg
and
sub
inc
mov
retf
cs
rcl
jbe
add
int
les
out
popf
popf
pushf
xchg
fisttp
stos
inc
xlat
jp
shr
mov
cmp
sub
ror
pop
arpl
cmp
js
rcl
jbe
fcmovu
mov
fsubr
and
and
rcr
ror
inc
fwait
dec
cmp
mov
cmp
xor
test
mov
add
dec
xchg
xchg
retf
push
into
leave
leave
out
int3
inc
push
push
fistp
test
xchg
add
jb
or
loopne
out
mov
lds
pop
je
in
pop
mov
enter
jmp
popf
mov
add
add
or
push
fistp
imul
mov
test
jb
fiadd
loop
xchg
mov
jmp
push
mov
shl
sbb
ja
mov
cwde
jge
dec
out
mov
xor
ficomp
sar
jge
xchg
mov
rcl
xor
push
mov
mov
mov
add
ins
dec
and
scas
daa
jmp
mov
sub
adc
xchg
call
cmp
cmp
sub
or
adc
cmp
and
sbb
test
xchg
je
ss
and
mov
sub
inc
adc
xrelease
ficomp
ds
pop
mov
jbe
or
jno
ror
addr16
shr
std
sub
movs
js
loop
sub
test
(bad)
pop
xor
cmps
mov
not
fimul
test
scas
mov
stc
jl
icebp
inc
int3
das
cdq
push
mov
cmp
dec
aaa
loop
fdiv
jne
movs
adc
mov
pop
ret
push
int3
in
ret
loope
mov
(bad)
cli
cmp
jmp
pop
add
fimul
mov
pop
xor
int3
dec
lods
fmul
nop
icebp
xchg
loopne
mov
add
fsubr
ins
mov
sbb
push
pop
mov
int
inc
int3
es
pushf
cwde
sub
test
mov
xor
pusha
leave
inc
mov
daa
repz
stos
cmp
fcom
mov
add
cdq
push
inc
jbe
sub
pop
cmp
mov
xchg
gs
out
push
mov
pop
shl
pop
cmps
stos
push
imul
pop
cs
lahf
aas
xor
ins
retf
stc
add
(bad)
addr16
ss
mov
and
inc
test
or
arpl
mov
pop
and
daa
imul
ffree
jae
ret
sub
dec
fwait
lods
sbb
cmps
ret
lods
add
pop
jo
in
jmp
mov
ret
aaa
pop
mov
out
add
xor
in
or
xor
sub
dec
fs
sub
pop
xor
mov
pop
or
test
mov
shl
int3
cmps
outs
push
fist
movs
mov
mov
pop
mov
xor
dec
aaa
adc
mov
push
add
add
shl
mov
stc
gs
add
ss
jecxz
lea
stc
jmp
cmp
jns
adc
sub
xor
shr
push
mov
cld
fs
or
push
retf
jne
ins
mov
pusha
or
clc
jmp
in
aaa
jle
xchg
cmp
fs
jecxz
or
jg
retf
addr16
mov
jmp
pop
int
movs
test
adc
outs
and
aam
sar
mov
bound
mov
pop
test
pop
loope
jge
pop
pop
movs
and
mov
cmp
fs
stos
xchg
mov
stos
int3
sub
mov
dec
std
jp
out
or
adc
hlt
mov
mov
mov
push
dec
aas
pushf
rcl
aaa
adc
sti
push
jecxz
add
jne
and
(bad)
scas
adc
and
or
call
cmps
(bad)
or
dec
ror
data16
push
jbe
dec
out
adc
xlat
or
sub
jl
jae
repnz
cs
push
fisttp
mov
push
ins
fs
sbb
cs
mov
jecxz
mov
xchg
fwait
xchg
add
add
dec
dec
or
dec
mov
xor
dec
dec
mov
sub
arpl
mov
mov
fdivr
dec
xor
sbb
fs
ins
mov
and
dec
jae
mov
inc
mov
lock
test
xor
sbb
(bad)
cld
adc
rcl
stos
xor
inc
sar
sub
aas
pop
pop
jmp
adc
in
je
aad
ret
push
imul
jbe
aam
shl
test
mov
pop
(bad)
xor
cmp
ins
scas
dec
ret
jle
sbb
jo
mov
test
retf
or
call
push
jns
pop
out
mov
xchg
in
and
lods
xchg
inc
(bad)
dec
iret
mov
sbb
jae
mov
push
push
inc
sub
jne
push
xlat
ret
(bad)
and
aaa
jecxz
idiv
pop
mov
xor
sar
sub
cli
sbb
jmp
lock
sub
mov
popa
or
jae
or
(bad)
into
outs
lea
push
sbb
pop
cld
push
aad
add
mov
or
ss
hlt
shr
imul
jo
in
or
jno
or
sub
fstp
add
add
mov
mov
(bad)
arpl
pusha
pushf
scas
in
sub
aad
add
adc
inc
jmp
ret
ror
ret
jns
jnp
sub
xor
sbb
inc
sub
repnz
jae
pop
push
mov
ss
in
arpl
fsub
sub
loope
dec
test
mov
aaa
ins
ins
xchg
xor
xchg
sar
sbb
mov
movs
ret
cli
repnz
cmps
cmp
repnz
lods
sbb
mov
pusha
mov
ins
data16
pop
xor
in
call
pop
iret
push
mov
pop
mov
in
repz
(bad)
into
xchg
(bad)
mov
mov
cmp
sub
test
and
idiv
jmp
loope
push
retf
jb
mov
adc
ss
call
cmc
cmp
mov
mov
add
inc
push
cmc
fs
daa
xchg
or
sub
cmp
test
mov
movs
cmp
sub
cmp
mov
mov
fimul
lods
mov
add
out
jmp
imul
data16
pop
sahf
sbb
ret
xlat
(bad)
dec
mov
aam
daa
mov
arpl
xchg
pop
mov
push
inc
dec
ret
pop
mov
cmp
sar
mov
mov
lfs
rcl
pushf
iret
daa
cmps
stos
and
popf
mov
dec
(bad)
xor
cdq
call
sub
dec
jmp
pushf
retf
out
(bad)
adc
popa
js
or
cmps
or
or
out
test
mov
push
inc
push
mov
aam
adc
fdivr
cmp
jns
cmp
mov
inc
ss
mov
test
or
ficom
mov
adc
dec
xor
fsubr
rcl
jbe
add
stc
jbe
sbb
rcl
dec
ja
repnz
mov
jnp
mov
xchg
and
lahf
int3
cmps
ja
mov
into
dec
arpl
enter
in
inc
push
out
jl
scas
push
leave
retf
outs
sub
fist
daa
cwde
nop
cmc
xor
cmps
daa
fidiv
call
adc
retf
mov
xchg
adc
ja
push
test
hlt
jne
adc
jae
mov
scas
lock
nop
push
(bad)
xchg
mov
out
mov
add
xor
div
mov
mov
int
js
dec
fstp
adc
push
loop
shr
icebp
mov
sub
push
das
je
mov
pusha
mov
mov
div
das
adc
scas
xor
shr
push
push
sbb
test
jmp
enter
lods
and
aas
int
push
fsubr
ja
retf
dec
xchg
push
sub
(bad)
ret
fldlg2
js
stos
outs
sbb
shl
(bad)
and
jae
push
jl
pusha
mov
xchg
pop
popf
cmp
int3
push
sti
retf
jp
and
mov
scas
rcl
mov
stos
lea
addr16
cmp
mov
jb
jle
icebp
and
ins
scas
loopne
stos
xchg
or
jo
hlt
mov
dec
mov
mov
sub
adc
repz
xchg
repz
mov
dec
mov
data16
stos
jb
xchg
xchg
(bad)
jmp
adc
xchg
lods
mov
xor
les
pop
mov
in
adc
xchg
or
popf
dec
mov
xchg
mov
cdq
shr
pushf
sub
shl
hlt
dec
imul
xchg
outs
mov
(bad)
fcom
movs
lock
cmp
sub
or
add
das
(bad)
pop
push
jno
mov
mov
adc
mov
xor
pop
leave
addr16
jecxz
push
sbb
js
xor
mov
and
jne
movs
sub
dec
and
and
mov
dec
mov
aas
fwait
enter
or
and
jns
fcmovu
(bad)
add
popaw
movs
sbb
shl
retf
sahf
js
or
repnz
jne
retf
loop
dec
push
mov
dec
mov
call
add
jmp
sub
sub
push
adc
lods
xor
mov
div
cdq
sbb
call
mov
lods
stos
cli
lds
fdivr
mov
in
dec
iret
mov
push
retf
jns
dec
js
sbb
shl
movs
ja
out
fwait
pop
dec
jg
enter
movs
daa
bound
mov
pop
int3
or
sar
stc
iret
(bad)
mov
out
in
loopne
sub
mov
push
jp
xlat
push
sub
jmp
int3
push
xor
into
xchg
clc
hlt
jmp
push
lds
sub
xor
mov
scas
inc
add
add
and
jmp
data16
repz
popa
mov
or
mov
in
pop
dec
sub
push
cmp
push
shr
aad
add
mov
xor
sbb
jl
xlat
das
push
test
call
ds
mov
mov
scas
fwait
and
popf
imul
sbb
aad
mov
ja
add
and
mov
mov
ficomp
scas
push
movs
loop
mov
push
aam
rcl
xchg
mov
inc
div
or
pop
mov
and
inc
dec
arpl
cwde
sbb
xchg
ror
xor
inc
pop
sub
fs
push
retf
push
mov
push
test
xchg
clc
in
cld
sbb
icebp
inc
pop
mov
addr16
mov
ss
push
dec
js
dec
xchg
cmp
repz
jp
mov
movs
pop
push
xor
mov
(bad)
cld
adc
loopne
add
(bad)
std
sub
dec
ret
stc
mov
pusha
fidiv
jmp
aad
popf
stos
pop
cmp
mov
fwait
xor
test
mov
das
out
ds
mov
test
stc
jmp
mov
sub
imul
jb
clc
cmp
movs
rcl
fsubr
cli
rcl
jecxz
pusha
fbstp
stos
test
lods
pop
aam
inc
dec
or
div
ret
pop
stc
test
scas
imul
adc
sub
shl
(bad)
movs
sbb
xor
or
and
and
mov
add
daa
cmc
mov
pop
mov
mov
xchg
(bad)
in
bound
mov
int
sbb
inc
and
fldenv
out
dec
add
and
std
adc
add
not
jecxz
cmp
push
xor
lahf
ret
jns
leave
aaa
inc
pusha
push
sahf
cmps
cmp
mov
test
and
sti
jle
std
pop
idiv
adc
fxch
push
add
mov
inc
add
hlt
jbe
mov
es
cmps
lds
fdivr
ret
inc
in
push
in
cmp
movs
rcl
fsubr
cmp
mov
int
and
fidivr
add
mov
shl
mov
jecxz
test
xor
sub
xchg
sahf
adc
jmp
mov
pop
pop
cmps
sub
cmp
(bad)
push
mov
retf
mov
xchg
adc
pop
adc
xor
add
add
mov
inc
xchg
fadd
lock
clc
gs
mov
sbb
add
jbe
test
inc
and
fnstenv
dec
pushf
(bad)
jmp
adc
pusha
std
cmps
lods
add
xchg
cmp
add
jno
xor
(bad)
push
aad
adc
int3
jmp
push
jmp
mov
inc
jnp
xor
pop
cs
jl
icebp
icebp
jnp
cdq
dec
xchg
movs
cld
out
and
add
sbb
ins
pop
aam
loop
outs
sub
clc
cmp
int
jnp
sbb
push
push
in
inc
sub
fwait
sub
dec
pop
imul
mov
daa
ror
out
rcl
scas
or
nop
xchg
dec
mov
pop
xlat
mov
dec
(bad)
into
scas
or
pop
push
es
sub
cmp
mov
shr
sub
hlt
repz
push
ret
jne
lock
mov
inc
sbb
inc
mov
jne
repz
cs
fwait
shr
and
stc
mov
inc
pop
or
call
jp
aad
ret
mov
mov
xor
jno
jmp
aad
pushf
stos
pop
xchg
shr
imul
mov
in
fisttp
shl
stos
movs
cmps
pop
xlat
or
sbb
les
cmp
pop
cli
pop
push
repnz
(bad)
and
(bad)
xor
(bad)
sbb
push
outs
sbb
xor
pop
sbb
stos
add
fimul
mov
stos
pop
ror
out
rcl
sub
jge
imul
daa
int3
sub
sbb
inc
mov
jg
mov
dec
into
outs
lea
adc
jbe
sbb
mov
adc
(bad)
pop
sub
add
xchg
mov
adc
xor
in
and
in
je
dec
int
and
adc
dec
mov
in
aam
add
(bad)
std
sub
lods
xchg
mov
retf
inc
jmp
inc
imul
mov
retf
shl
dec
sub
mov
out
test
in
xor
outs
lea
lds
fs
mov
sub
(bad)
cmc
sub
or
shl
pop
xor
pop
jmp
(bad)
jno
cmp
mov
fcmovnu
int3
rcr
arpl
stos
loope
ss
cmp
and
fs
add
jle
loope
jge
inc
addr16
add
mov
popa
call
mov
adc
mov
dec
xchg
nop
retf
and
fidiv
gs
fisttp
push
gs
data16
repz
popa
mov
xor
inc
fcmovbe
sub
pop
dec
aas
loop
pop
dec
loop
xchg
dec
sub
(bad)
and
ret
sti
sar
adc
pop
sbb
mov
and
jg
push
div
pop
stos
cdq
pop
dec
mov
ins
cmp
xor
pop
aam
in
outs
sub
clc
cmp
jmp
test
sub
adc
mov
cli
and
add
xchg
in
ja
add
dec
aaa
ds
mov
xor
sub
xlat
(bad)
add
ret
(bad)
cmps
popa
or
in
mov
push
test
cmp
push
loopne
outs
cmps
sub
xor
pop
pop
mov
aam
and
mov
adc
bnd
cmp
jg
push
pop
or
jne
add
sub
in
std
fmul
xor
inc
inc
pop
or
lahf
cli
mov
retf
adc
add
sub
mov
rol
adc
add
je
aam
inc
int3
inc
stos
out
sbb
dec
iret
jb
xor
ins
movs
dec
icebp
dec
and
pop
push
test
mov
cmp
pop
mov
dec
clc
mov
mov
ret
fchs
js
push
outs
sbb
movs
cdq
xor
sbb
sub
mov
pop
push
test
pop
shl
js
add
iret
mov
and
xor
iret
pusha
push
inc
jae
in
xchg
bound
loop
pop
jge
(bad)
mov
or
in
jmp
adc
mov
jnp
cmp
mov
push
ja
mov
dec
test
sub
inc
adc
adc
pop
xlat
lods
pop
and
xor
mov
inc
data16
sub
sub
push
cmp
movs
popf
pop
inc
mov
sbb
jp
ret
mov
movs
cmp
mov
fwait
xor
add
pop
xchg
(bad)
ins
and
outs
dec
fnstsw
dec
jbe
or
xlat
push
jg
sub
daa
loope
pusha
aam
dec
clc
cmp
mov
pusha
adc
sbb
imul
loop
out
aas
jo
pop
mov
and
jle
xor
aad
cmp
out
push
in
xor
sbb
shr
xor
xor
dec
add
inc
repz
mov
mov
sub
mov
and
jge
aaa
ja
xor
and
out
cwde
fwait
mov
ds
lahf
fist
jbe
xchg
mov
out
add
inc
pop
int
dec
lock
jg
lods
push
fild
push
gs
mov
mov
jmp
push
loopne
push
pushf
jbe
int
jp
(bad)
cmp
jbe
cmps
push
and
pop
dec
inc
sbb
xchg
fld
arpl
sar
jp
sar
icebp
mov
das
cdq
pop
xchg
xor
jnp
(bad)
es
or
sub
jl
ret
jge
out
into
add
push
add
cli
push
rcr
pop
sahf
mov
mov
mov
pop
jl
(bad)
bound
rcl
mov
sub
shl
ret
cmp
rcl
adc
jl
sbb
stos
loope
push
(bad)
pop
iret
enter
daa
fimul
xchg
call
sbb
retf
cmp
pop
dec
push
jmp
sbb
inc
and
mov
inc
cwde
mov
leave
dec
test
xchg
mov
repnz
loopne
hlt
stos
aad
dec
cmp
and
(bad)
inc
xchg
popf
sub
pop
pusha
(bad)
in
loope
jns
test
pop
push
dec
scas
lds
fisub
mov
jp
ret
adc
jl
scas
mov
xor
xor
sar
mov
dec
imul
cld
fs
ins
ffree
sbb
mov
mov
int
imul
out
hlt
and
icebp
test
fst
js
sbb
sbb
jecxz
ja
sbb
jo
ficomp
mov
dec
or
sbb
aas
adc
retf
push
movs
pop
add
cvtps2pi
pop
sbb
iret
dec
cmps
inc
pop
fimul
imul
pop
push
ror
jne
pop
xchg
lds
xchg
in
call
sar
or
test
mov
out
pop
pop
inc
mov
mov
popa
test
ret
and
sub
dec
dec
out
aad
mov
es
pop
ss
jge
nop
dec
idiv
jmp
jns
cmp
adc
cmp
lods
stc
(bad)
shl
inc
shr
cmp
adc
mov
not
shr
arpl
jl
sar
jb
sub
(bad)
je
ret
push
out
jp
in
(bad)
out
adc
sbb
gs
(bad)
cmp
and
xchg
mov
and
das
(bad)
fimul
sub
add
or
rcl
sti
mov
pop
mov
cmps
mov
movs
test
ficom
pop
fwait
cwde
fmul
hlt
jge
cdq
retf
cdq
retf
mov
xchg
out
push
fisttp
inc
xchg
inc
inc
adc
(bad)
into
jns
cld
adc
retf
adc
add
mov
mov
sar
sbb
mov
xor
pusha
ret
cmp
das
lods
clc
sbb
mov
push
xchg
and
mov
inc
icebp
push
jae
lds
push
sbb
xchg
scas
shl
xchg
movs
push
(bad)
sti
sub
add
cmp
push
outs
mov
cmps
cmps
std
hlt
or
cmp
rcl
pushf
push
jmp
bnd
push
pop
out
dec
mov
jae
xor
jno
aad
out
in
loopne
push
call
pop
inc
fwait
mov
popf
popf
mov
mov
pushf
mov
test
adc
jl
addr16
and
inc
fild
dec
ss
push
call
xchg
(bad)
in
bound
out
data16
arpl
or
pop
bound
push
gs
mov
jo
in
test
in
data16
aad
add
es
in
mov
mov
cwde
pop
outs
mov
(bad)
aam
cmp
mov
adc
fwait
out
mov
dec
inc
or
dec
daa
repz
ja
mov
sbb
arpl
arpl
repnz
xchg
aad
push
test
jmp
shr
jge
or
dec
inc
or
pusha
mov
xchg
lock
fiadd
jbe
hlt
iret
xor
sbb
(bad)
xchg
pop
iret
daa
daa
push
mov
pushw
lods
cmps
loope
adc
es
sub
cmp
pop
and
arpl
sub
hlt
lods
lock
adc
fist
in
int3
xchg
test
(bad)
jne
jb
jbe
movs
jecxz
stos
lds
pop
and
iret
sub
sbb
pushf
sub
mov
pop
pusha
mov
mov
inc
or
or
xor
mov
arpl
and
add
fild
jmp
cld
push
dec
cmps
fld
loop
push
mov
out
aas
in
cmp
xor
jne
add
push
(bad)
pop
add
gs
pop
xor
fnstsw
shl
mov
mov
sbb
add
fst
inc
bound
jge
jno
cmp
xchg
cmps
inc
inc
sub
mov
test
scas
or
cmp
sub
pop
(bad)
in
jmp
nop
mov
mov
and
mov
xor
add
ficom
in
shr
pop
test
push
lds
add
addr16
hlt
inc
mov
lea
dec
inc
cmp
jno
pop
dec
aas
std
pop
dec
retf
arpl
adc
test
jne
(bad)
arpl
push
das
cmc
sub
jl
or
mov
push
out
(bad)
mov
and
iret
clc
pop
mov
call
jmp
xchg
jmp
xor
ret
mov
sti
lock
push
nop
out
in
loop
arpl
mov
sbb
sub
pop
pop
stos
test
jbe
add
shl
in
ds
mov
xor
push
popf
cmp
xor
ret
mov
bound
(bad)
rcr
mov
xchg
clc
in
sub
fwait
cwde
add
cmp
pop
sbb
sbb
mov
push
jns
call
xchg
inc
rcr
js
int
ss
shl
jg
fsub
inc
nop
sbb
int3
std
cmps
pop
push
imul
aaa
jle
adc
cwde
jge
retf
mov
sub
mov
mov
scas
cmc
cmp
jno
outs
mov
sbb
push
mov
push
jmp
scas
pushf
push
add
push
mov
ins
sub
jge
mov
sub
out
push
mov
ins
xchg
cmps
cmp
loop
xchg
sub
addr16
fucomi
xor
fimul
repz
js
add
(bad)
xor
sbb
adc
test
jb
mov
add
mov
pop
push
cmp
sub
and
pop
and
jge
loop
fisub
jnp
les
xchg
ror
mov
out
dec
push
fist
scas
retf
test
push
add
mov
pop
aad
push
push
pop
mov
mov
dec
jge
push
and
mov
test
inc
lahf
dec
add
in
jle
pusha
push
(bad)
ficom
enter
add
cmps
in
das
mov
addr16
or
jle
push
cld
stc
adc
push
jbe
and
ins
mov
jg
repnz
scas
push
call
cmp
jl
jp
jg
shl
push
pusha
mov
xor
test
pop
sub
or
mov
shl
pop
iret
mov
cmp
sub
xlat
mov
xchg
(bad)
into
scas
or
pop
push
es
call
cdq
sbb
or
cwde
mov
mov
jle
nop
and
aaa
leave
leave
inc
push
cld
pop
lock
enter
xchg
mov
jb
inc
adc
(bad)
je
jne
dec
imul
test
xchg
je
jmp
in
dec
and
addr16
push
jecxz
cmp
dec
ss
jge
cmps
dec
mov
jg
push
jns
mov
(bad)
and
add
ds
retf
or
in
inc
jl
in
mov
loop
nop
mov
sbb
push
push
ja
push
jno
test
hlt
aas
arpl
pop
das
scas
adc
cld
xchg
je
pop
js
ret
mov
xchg
sub
adc
mov
mov
mul
mov
test
xchg
pop
inc
sub
mov
jge
shl
push
lods
inc
fsubr
mov
movs
sbb
jl
les
mov
push
mov
jno
jecxz
in
fnstcw
or
add
dec
pop
int
iret
or
loopne
mov
and
xor
mov
cmp
ss
test
adc
jmp
out
or
pop
pop
jp
xor
fstp
dec
push
mov
mov
push
ins
push
js
push
int3
(bad)
rcl
or
push
mov
adc
or
adc
or
rcl
or
xlat
(bad)
int
ja
sbb
sub
fidiv
sbb
sub
outs
jns
mov
in
bound
aaa
ret
jb
movs
aas
ret
adc
data16
xchg
pop
mov
sub
cmps
push
repnz
jl
stos
pop
jo
(bad)
(bad)
outs
(bad)
jecxz
xchg
jge
addr16
push
inc
pushf
test
mov
inc
fild
inc
gs
push
(bad)
movs
and
int3
cmc
iret
push
repz
jns
retf
hlt
jo
xchg
mov
sbb
cmp
xor
mov
adc
add
mov
cmp
aad
or
movs
jmp
inc
add
mov
lds
imul
pop
inc
inc
push
dec
mov
xor
jnp
in
cwde
out
imul
lahf
div
jbe
xor
and
push
pop
pushf
(bad)
not
in
lods
stos
push
ror
push
fcomp
mov
ret
pop
dec
sbb
mov
add
add
rol
cli
in
imul
(bad)
pop
push
(bad)
sub
pop
mov
scas
stos
ja
(bad)
mov
fdivr
addr16
in
xchg
mov
fdiv
inc
jns
retf
inc
rol
fst
loopne
les
inc
sub
jmp
mov
inc
fnstsw
push
jle
pop
enter
cmovbe
push
call
add
inc
xor
ret
cs
stos
fstp
mov
jmp
in
pop
(bad)
lahf
xor
leave
out
test
lods
lds
and
div
jno
push
mov
adc
inc
clc
dec
mov
addr16
cmp
mov
shl
shl
push
das
jae
jmp
lahf
push
cld
xor
xchg
adc
or
sbb
add
jne
xor
or
ret
fst
pop
aas
fsub
cld
jecxz
mov
(bad)
sub
(bad)
and
pop
mov
push
xor
into
mov
pusha
adc
aaa
fcom
aam
cld
stos
dec
mov
or
mov
test
xchg
clc
loopne
xor
fwait
cwde
paddb
push
add
cdq
sahf
mov
leave
inc
outs
mov
nop
retf
cmp
adc
push
add
(bad)
(bad)
jl
xor
xor
jg
cmp
fiadd
sbb
int3
mov
add
mov
jp
retf
xchg
stos
pop
cmp
and
and
lods
mov
jno
mov
jae
lds
out
push
mov
pop
pushf
push
jbe
mov
sub
jmp
jge
fild
stos
push
jmp
pop
out
xchg
arpl
lods
ins
xchg
mov
mov
pusha
ins
cmp
test
mov
xchg
and
push
in
repz
mov
xor
or
jnp
ficomp
add
cmps
xor
fs
sbb
dec
pop
es
mov
xchg
shr
pop
adc
test
shl
icebp
inc
pop
es
xor
rcl
inc
sbb
fiadd
inc
mov
sti
je
cmc
inc
adc
fiadd
je
add
sub
push
and
xor
inc
aas
and
in
mov
pop
pop
hlt
xor
js
test
inc
lahf
add
fidivr
mov
jae
test
mov
and
jmp
icebp
push
call
xchg
and
daa
imul
add
xchg
int
cmp
(bad)
stos
mov
push
out
pop
stos
outs
xchg
and
sub
sbb
xchg
scas
lods
pop
rcl
mov
div
dec
xchg
pop
cmp
int3
dec
mov
ret
and
pop
adc
ror
test
adc
pop
push
inc
sbb
inc
adc
jmp
adc
fnstenv
add
mov
inc
sbb
outs
jnp
dec
js
xchg
shl
shl
pop
int
xchg
mov
jbe
in
loopne
and
into
mov
xchg
or
data16
aad
sub
push
pop
(bad)
and
nop
add
adc
mov
es
mov
xor
push
(bad)
mov
mov
movs
(bad)
in
ins
fnstsw
and
xchg
fiadd
div
jmp
out
popf
lahf
push
cld
xlat
sbb
jp
sub
or
xlat
pop
sbb
lods
sbb
mov
pop
mov
sbb
es
push
pop
push
call
add
std
rcr
mov
(bad)
shl
lods
std
lock
shl
ss
xor
outs
fwait
dec
mov
call
(bad)
retf
push
mov
xor
mov
adc
adc
test
retf
jge
inc
xor
(bad)
icebp
mul
or
xchg
xor
loopne
(bad)
aad
iret
xor
in
cmc
sbb
gs
ror
sub
push
pushf
or
cmp
repnz
and
lahf
cmp
push
adc
(bad)
popa
xchg
mov
test
sahf
retf
shl
(bad)
scas
das
popa
enter
or
xor
leave
cmp
push
mov
push
fadd
in
mov
mov
int3
xor
mov
outs
adc
call
test
cmps
push
ficomp
scas
add
add
push
mov
add
iret
mov
in
or
(bad)
pop
iret
enter
sub
dec
shl
inc
jne
sbb
xchg
jb
sbb
cmp
cwde
mov
push
cmp
pop
adc
sbb
movs
fisttp
test
add
mov
xor
sahf
inc
rcr
js
leave
call
jle
jg
cdq
fsub
inc
nop
sbb
int3
std
cmps
pop
push
imul
aaa
jle
adc
cwde
push
add
mov
inc
imul
mov
scas
cmc
cmp
jno
outs
mov
test
xor
jmp
(bad)
pushf
push
jecxz
mov
cmp
loope
imul
mov
push
inc
cmp
pop
mov
(bad)
sbb
inc
aas
shl
shl
cmp
push
(bad)
mov
mov
lds
adc
sub
cmp
ins
pusha
and
xor
adc
pop
xlat
movaps
jg
retf
(bad)
movs
mov
imul
pop
pop
addr16
dec
dec
xor
outs
xor
mov
push
xchg
push
lock
int
push
inc
adc
pop
add
popa
inc
movs
jge
arpl
xchg
into
xor
pop
nop
stos
data16
pop
(bad)
lods
in
pop
(bad)
pop
and
pushf
or
push
mov
push
xchg
dec
mov
ficom
ret
adc
cmp
and
pop
xchg
(bad)
push
test
and
xor
adc
pop
pushf
sbb
sbb
sar
out
jmp
jge
imul
push
sbb
ret
outs
fisttp
jl
add
enter
cmp
xor
lods
xchg
imul
dec
imul
xor
je
fcmovbe
add
xchg
push
cmps
and
mov
bound
int
in
push
es
mov
xchg
adc
mov
imul
xor
(bad)
dec
jmp
repnz
fist
in
fadd
rcr
inc
(bad)
jae
bound
push
aad
mov
push
and
movs
mov
mov
xchg
mov
aad
aas
loop
dec
sub
sub
adc
add
xor
dec
add
in
jge
pusha
push
bound
cmp
dec
ins
sub
stos
cli
inc
sbb
xor
(bad)
out
fsubr
shr
pushf
addr16
aas
loop
fdiv
ja
mov
pop
je
repnz
cmp
fisttp
cmps
fcomp
sub
sbb
cld
jecxz
jge
lds
mov
push
xor
fcom
mov
sub
inc
mov
sti
into
imul
jmp
add
imul
pop
push
mov
in
dec
call
inc
push
mov
push
add
adc
leave
pop
mov
test
xchg
mov
out
add
dec
pop
int
(bad)
or
popa
sub
ja
mov
gs
js
dec
dec
aaa
sub
pop
dec
dec
adc
push
(bad)
adc
int3
test
cmp
mov
enter
pop
ss
xor
adc
cmp
and
and
ret
(bad)
jns
jns
rol
add
(bad)
push
das
out
and
cld
out
and
push
mov
int
sub
lods
pushf
repnz
repnz
mov
mov
in
pop
out
cmp
imul
adc
and
xchg
sub
test
fucomi
or
fimul
dec
mov
popf
(bad)
mov
mov
mov
push
iret
mov
pop
or
retf
daa
cmps
(bad)
loope
out
pop
push
fild
lea
mov
aam
fs
jmp
leave
mov
xchg
mov
xor
pushf
ror
sbb
out
pop
xchg
xchg
pop
gs
inc
pop
call
sub
loopne
imul
into
xor
mov
jmp
adc
sbb
pop
pushf
or
xchg
mov
ss
dec
mov
push
dec
pusha
push
adc
xlat
xlat
sub
ins
and
pop
test
dec
aad
xor
sti
jp
repnz
idiv
out
jne
cdq
pop
dec
cmp
pop
pushf
sbb
sbb
lds
in
push
mov
cmp
(bad)
aam
and
test
cmps
pusha
mov
xor
mov
add
push
add
and
int
je
push
fwait
or
xchg
jl
iret
jb
(bad)
fadd
rol
fnstsw
xchg
push
les
xor
test
push
gs
test
xor
jl
pop
aad
and
or
hlt
xchg
mov
gs
adc
fcmovbe
mov
inc
ror
xor
shl
sbb
aas
push
push
pop
mov
cmp
inc
shr
aam
add
or
push
outs
shr
pop
int3
jmp
push
aad
rol
mov
sti
cli
and
xchg
out
push
fwait
push
pop
(bad)
ins
mov
jge
pop
pushf
inc
mov
rcl
or
xchg
out
popa
imul
jge
pop
aas
lds
mov
movs
lock
pop
test
fwait
mov
mov
xchg
sahf
inc
addr16
daa
bound
pop
dec
or
test
cmp
shl
push
mov
imul
inc
cmps
(bad)
out
xor
sub
hlt
int
xor
movs
lahf
cmps
xor
or
cwde
xchg
mov
and
cmp
inc
mov
dec
lock
fisttp
inc
repz
adc
cmp
xchg
jg
test
aad
push
xor
mov
push
ficom
sub
push
call
mov
and
jno
(bad)
leave
sub
sbb
add
xchg
fld
arpl
sar
jp
cmc
gs
icebp
pop
xchg
das
cdq
dec
mov
push
push
iret
(bad)
shr
xchg
es
jge
dec
clc
mov
mov
arpl
rcl
push
lds
adc
sbb
shl
ret
fisubr
xchg
push
mov
add
push
popf
int
mov
adc
movs
in
jge
jns
pop
(bad)
out
aaa
or
int
cmps
loope
ret
retf
sub
or
xchg
xor
test
dec
dec
shl
outs
dec
test
xor
add
lock
rcl
mov
cmc
push
out
test
adc
jne
movs
je
adc
jmp
mov
ja
mov
dec
shr
leave
test
cmps
lods
add
cmp
mov
pop
dec
mov
xor
push
dec
rcr
lea
and
inc
xchg
sub
pusha
adc
add
xchg
mov
cdq
shr
pushf
movs
dec
xor
in
fcomip
lds
sub
inc
mov
pop
clc
mov
stos
mov
inc
(bad)
sar
cld
jecxz
pop
jbe
fwait
xchg
addr16
jno
push
popa
sbb
and
push
repz
push
jmp
int
(bad)
pop
adc
mov
out
nop
or
mov
sub
pop
cmp
sbb
gs
fstp
cmp
loopne
outs
cmps
sub
movs
cwde
pusha
mov
imul
dec
lock
nop
out
xor
cmp
pop
mov
jp
xor
imul
or
jle
shr
pop
dec
and
push
sub
or
dec
(bad)
cmp
repnz
ss
xchg
inc
adc
xor
mov
or
push
int3
inc
stos
popf
cmps
aaa
xor
jno
cmp
jmp
inc
mov
pop
push
jbe
pop
push
inc
jbe
jmp
mov
ja
xor
xchg
ds
icebp
pop
cmp
rcl
push
lds
adc
(bad)
sub
cli
and
cmc
loope
jb
inc
push
bound
xchg
es
ds
inc
dec
je
sub
push
sbb
iret
dec
cmps
inc
push
inc
fs
xchg
call
sbb
mov
in
mov
mov
ins
xchg
mov
adc
mov
gs
lock
(bad)
jno
test
loopne
xor
sahf
lahf
mov
loopne
(bad)
aad
or
dec
xor
and
and
mov
xchg
xchg
(bad)
jmp
imul
enter
adc
mov
adc
mov
inc
mov
xor
cli
and
push
dec
shl
data16
cdq
add
pop
fst
sub
mov
sbb
lods
test
es
dec
clc
mov
stos
mov
push
out
pop
mov
xchg
fsubr
cwde
adc
inc
and
out
das
jo
inc
mov
pop
and
faddp
pop
or
inc
mov
add
push
jb
test
adc
or
inc
sub
mov
adc
or
popf
js
cmp
sbb
push
les
popf
jnp
mov
cmps
xor
outs
xor
stc
jae
in
sbb
lock
nop
popf
pop
ins
dec
mov
or
xor
or
sub
and
xor
sti
mov
jmp
out
mov
and
sub
cmp
mov
pusha
mov
fistp
pop
lods
cmp
pop
cmp
cmps
mov
xor
fdivrp
mov
dec
xor
fcomp
sub
pushf
movs
dec
dec
shl
add
xchg
mov
ja
std
inc
clc
cmp
lock
cld
fcom
outs
fbld
sub
adc
pop
js
test
rcr
add
bndcu
stos
popf
(bad)
dec
mov
fs
sbb
jbe
xor
call
xor
stos
mov
loopne
inc
pop
xchg
cmp
dec
retf
icebp
cmps
es
in
cld
sbb
cmp
add
push
jp
dec
test
cmp
repz
sti
out
in
int3
jns
or
pop
mov
dec
pop
pusha
dec
aaa
and
in
pop
icebp
sub
pushf
push
pop
dec
push
cmp
add
inc
clc
arpl
mov
cdq
mov
push
out
(bad)
mov
and
iret
clc
pop
mov
and
les
lds
das
lds
jmp
adc
fcomp
pop
cmp
mov
cld
jecxz
mov
mov
movs
add
fdivr
into
or
imul
pop
iret
scas
icebp
dec
ficomp
in
pop
retf
mov
out
fs
fwait
xor
(bad)
push
cmp
sbb
adc
mov
arpl
cmps
xor
(bad)
iret
xor
ss
mov
shl
fwait
gs
xor
mov
sti
sub
add
dec
inc
stos
rcr
aaa
imul
push
cdq
scas
aad
sub
mov
add
add
jmp
add
jbe
inc
adc
and
ret
movs
mov
mov
mov
and
mov
(bad)
test
sbb
mov
div
mov
mov
jns
or
mov
xchg
in
test
arpl
outs
sub
clc
cmp
movs
rcl
fsubr
cli
mov
jecxz
pusha
and
mov
(bad)
sub
mov
add
mov
rcr
je
sub
push
pushf
mov
stos
fwait
xchg
int
inc
sbb
push
dec
fxch
sub
pop
lods
test
cdq
movs
mov
sub
inc
mov
xchg
dec
sub
xchg
fsub
dec
jne
adc
push
out
repnz
sub
pop
int
dec
cmp
fld
ret
and
neg
xchg
jmp
addr16
ror
add
inc
jbe
push
std
pusha
loope
ins
(bad)
jmp
lahf
repnz
(bad)
mov
push
bound
mov
pop
imul
jmp
cmps
hlt
sbb
dec
dec
out
loope
idiv
sub
repnz
lock
xchg
ds
push
lock
cld
fstp
in
xchg
sub
popf
nop
sub
xchg
push
test
fs
or
dec
add
rol
rcl
mov
cmps
sbb
mov
sub
dec
ss
inc
xchg
inc
pop
cmp
and
sbb
add
xchg
inc
jno
jb
retf
mov
leave
out
int3
test
(bad)
xchg
xchg
cmp
repz
inc
bound
sbb
jmp
cmp
and
call
add
push
(bad)
leave
pop
sub
aaa
outs
(bad)
arpl
sub
jnp
ss
xchg
lahf
dec
mov
clc
xor
push
das
shl
jl
scas
test
(bad)
mov
ficomp
jmp
mov
push
mov
xor
or
movs
push
sbb
rcl
or
stos
sub
ins
cmp
leave
rcl
imul
jge
cmc
cmp
pop
movs
daa
bound
js
or
jmp
cmp
dec
pop
inc
mov
sub
aad
shl
mov
fs
add
out
enter
inc
enter
cdq
sbb
in
cwde
mov
cmc
fst
aas
fxch
mov
cmp
push
cmps
out
fild
test
adc
loop
nop
imul
push
sub
test
add
aaa
adc
fld
adc
pop
push
jecxz
lock
popf
push
dec
mov
mov
add
aaa
dec
jmp
xchg
call
push
sbb
mov
or
movs
in
rcr
out
pop
pushf
push
cld
(bad)
sbb
pop
xchg
sub
sbb
xor
ds
aas
xor
adc
mov
mov
rcr
lods
xchg
and
push
dec
or
dec
add
dec
aaa
ds
mov
or
cmps
push
push
(bad)
jecxz
pop
mov
shl
icebp
cli
cmps
mov
loop
es
mov
pop
sub
outs
jge
test
aas
cmp
cmps
aaa
je
leave
leave
out
int3
test
fist
mov
call
call
pushf
inc
rcr
into
(bad)
jne
test
cli
daa
cmp
fiadd
loop
dec
pop
sub
cmp
leave
pop
out
and
mov
xchg
mov
mov
and
mov
mov
dec
jo
shl
mov
out
movs
cmp
call
jmp
(bad)
pushf
push
jecxz
mov
sahf
not
mov
mov
sub
ins
les
nop
test
clc
jp
xlat
pop
fadd
xchg
jnp
jno
fs
in
movs
lods
xchg
test
sbb
js
(bad)
jge
fimul
arpl
push
shl
das
lods
mov
fs
sub
jmp
xchg
cmp
sub
into
gs
jecxz
jmp
fs
xor
fld
xor
je
pop
mov
ret
and
test
inc
adc
jle
add
pop
mov
dec
pusha
fadd
mov
mov
cmp
adc
dec
movs
in
pop
push
es
push
jecxz
xchg
outs
ds
enter
inc
xchg
and
(bad)
push
cdq
and
mov
add
shl
push
push
fisttp
push
cld
adc
in
lods
push
int
sub
out
in
rcr
add
(bad)
push
sub
jo
and
nop
mov
cli
sbb
sbb
sub
mov
and
push
js
add
(bad)
xor
sbb
cmps
mov
mov
mov
sbb
push
dec
pop
retf
pop
sub
mov
mov
test
pusha
and
leave
leave
inc
xchg
fadd
mov
js
int3
test
ret
repz
sti
inc
xchg
add
scas
mov
aad
push
ds
mov
and
jle
cmp
movs
add
mov
div
push
retf
adc
dec
cmp
pop
jmp
lea
out
add
xor
call
pushf
push
inc
stc
out
push
push
sbb
imul
into
sub
(bad)
sti
push
cmp
adc
shl
sub
sahf
int
jecxz
jge
inc
fidiv
jo
push
pop
cmp
dec
popf
repz
adc
jnp
shl
xor
push
fwait
or
push
jle
retf
sub
repz
sub
mov
dec
dec
call
pop
ins
mov
push
add
retf
push
bound
mov
push
fild
cdq
gs
xor
bswap
jns
hlt
xchg
or
add
loopne
cs
xor
mov
out
dec
mov
push
dec
aas
std
adc
push
xchg
jecxz
cmp
dec
and
inc
inc
lahf
aas
hlt
popa
repz
lods
cmp
or
inc
mov
pop
fisttp
shr
stc
test
int3
mov
arpl
retf
adc
xor
xchg
or
dec
push
test
icebp
bndldx
shr
and
ja
jmp
int3
sub
jmp
xchg
jbe
mov
mov
add
add
adc
xchg
sbb
dec
cmps
xor
dec
xor
fwait
mov
cdq
push
pop
push
inc
jne
fsubr
mov
dec
dec
cmps
jp
jmp
jl
or
ss
jle
addr16
inc
sbb
xchg
cld
aam
push
gs
rcr
aas
add
aad
mov
or
add
aaa
sbb
pop
mov
adc
mov
shl
enter
ror
add
mov
jns
sub
outs
cld
mov
aad
xor
sti
(bad)
(bad)
mov
idiv
out
inc
daa
cdq
pop
pop
test
stc
stos
dec
push
jbe
push
or
(bad)
in
mov
ins
lock
pop
mov
push
ins
add
in
push
or
sub
shl
mov
inc
daa
mov
popf
mov
xor
rcr
inc
(bad)
ficomp
and
cmps
xor
fs
jno
bound
and
mov
jno
cdq
jb
jmp
ins
mov
xor
inc
jle
addr16
or
inc
xchg
xor
or
add
mov
push
inc
adc
lea
outs
or
add
popa
hlt
and
inc
and
jmp
add
std
sbb
dec
aas
and
push
(bad)
adc
pop
push
test
and
lahf
dec
les
xor
movs
cmp
call
lods
sbb
ins
ffree
sbb
jno
(bad)
nop
sub
(bad)
out
popa
daa
cdq
pop
dec
into
sub
pop
pushf
sbb
sbb
lds
in
push
fwait
clc
cmp
(bad)
aam
xor
test
movs
ja
sbb
xor
loop
push
push
aas
push
adc
ds
xor
ja
push
outs
(bad)
in
aam
mov
cmps
rcl
xchg
shl
test
dec
mov
jne
jb
jmp
sbb
jnp
js
push
cwde
sahf
std
cwde
mov
inc
mov
loopne
dec
cld
fidivr
ins
mov
xchg
cmc
iret
out
(bad)
data16
pushf
cli
sub
mov
call
push
or
pop
dec
cmps
in
pop
xor
mov
sbb
pop
xor
lahf
ret
lea
ret
lods
adc
scas
ds
cmps
cmp
jnp
out
(bad)
mov
and
daa
std
stc
cdq
pop
imul
adc
xchg
adc
aam
ja
pop
mov
mov
sub
pop
ins
xchg
and
sahf
mov
add
sub
(bad)
add
pop
das
adc
xor
push
rcr
jmp
sbb
push
imul
pop
xlat
mov
inc
bound
pop
ja
jmp
and
jb
sbb
repz
cwde
mov
ret
stos
in
aaa
mov
fidivr
(bad)
nop
sqrtps
jmp
xor
adc
adc
leave
inc
cmp
fimul
jmp
rcl
in
movs
xlat
loop
inc
inc
jb
push
sub
add
ins
fcom
fdivrp
pushw
movq
(bad)
mov
xlat
out
inc
push
and
imul
mov
pop
push
or
pushf
jg
int3
(bad)
popa
nop
xchg
fadd
daa
loope
pusha
add
dec
clc
cmp
fdiv
jmp
cmp
push
loop
push
add
jmp
popf
scas
mov
fisub
pop
inc
mov
sub
iret
fcom
and
add
into
jmp
and
jb
sbb
mov
sub
add
add
cmp
retf
push
rcr
mov
push
jb
dec
adc
inc
and
sub
out
sti
aad
dec
cmp
add
std
stc
mov
or
scas
pop
fcmovb
xchg
adc
(bad)
lahf
fnsave
pop
push
jecxz
cmp
rcr
cdq
lahf
dec
mov
adc
push
pop
jl
retf
lods
xor
ins
sub
ret
adc
ins
mov
jbe
pop
push
cmps
popa
push
(bad)
adc
push
xor
ds
repnz
sti
sub
dec
cmp
sbb
inc
nop
mov
jp
dec
add
and
fabs
push
xlat
pop
xchg
mov
aaa
pop
mov
lahf
add
pusha
das
mov
fstp
nop
xchg
lds
pop
xlat
mov
dec
bound
cmc
les
mov
push
imul
and
(bad)
shl
sahf
in
sbb
fstp
stc
test
dec
inc
and
iret
out
adc
jne
add
xchg
test
ret
xor
inc
dec
mov
data16
dec
sbb
push
sub
jecxz
aaa
sub
inc
fild
sbb
pop
scas
adc
xlat
shr
imul
mov
js
inc
fisttp
inc
and
pop
out
or
adc
push
mov
test
call
imul
jge
icebp
mov
aad
push
(bad)
or
(bad)
cmps
ja
and
imul
and
sub
or
pop
aad
jae
ret
(bad)
je
ficomp
cmps
fiadd
push
mov
mov
lea
fnstsw
hlt
mov
ds
in
mov
mov
mov
ins
call
xor
jl
retf
fist
push
fisttp
inc
pop
sub
in
pop
jns
ja
sub
adc
ret
arpl
xchg
sbb
inc
mov
test
std
pop
data16
cwde
or
push
leave
(bad)
(bad)
push
loope
xor
mov
cmp
jnp
push
dec
jnp
push
push
ud2
push
jb
fiadd
into
inc
in
xor
fwait
add
or
ficomp
int
sub
loope
ja
icebp
pop
jo
(bad)
push
fmul
test
jmp
nop
sbb
mov
(bad)
sbb
test
push
aaa
js
test
add
jle
mov
popf
(bad)
fdivrp
and
iret
mov
in
or
inc
in
aas
rcr
mov
mov
inc
dec
jno
or
rcr
pop
lods
add
add
in
scas
adc
or
dec
shr
cmp
mov
imul
dec
outs
fcomip
mov
ret
jle
cld
sub
mov
rdtsc
inc
lock
loopne
sti
test
jmp
addr16
sar
(bad)
pushf
add
gs
push
sub
out
push
xor
push
sub
xor
mov
ja
test
fs
(bad)
cmps
pop
shl
push
das
rcl
push
cld
out
popf
outs
push
cld
xor
lods
and
(bad)
loope
imul
cmps
repnz
clc
xchg
mov
aam
or
sub
shl
out
loop
xchg
sub
sbb
test
out
inc
frstor
lods
aas
add
test
pusha
dec
cmp
push
sub
adc
ret
ja
sahf
sbb
inc
ucomiss
je
movs
outs
or
rcr
jmp
mov
mov
cmp
sbb
into
and
out
imul
pop
pop
mov
and
iret
(bad)
in
pop
jns
(bad)
cmp
enter
stos
xor
xor
or
and
in
pop
mov
dec
int3
std
cmps
mov
js
mov
pop
mov
jmp
mov
mov
mov
je
xor
jno
stos
and
out
push
das
jmp
mov
pop
les
dec
jge
arpl
jl
test
repnz
jb
ds
cmc
outs
add
aas
fnstsw
jb
ja
sbb
gs
add
pop
movs
daa
bound
mov
or
dec
out
mov
arpl
sar
(bad)
jb
sbb
xchg
call
xor
xor
and
sub
les
rcr
inc
ins
leave
stos
mov
fmul
xchg
adc
sub
jb
addr16
jbe
ss
cmp
xlat
push
lock
jmp
mov
rcl
int3
push
out
dec
and
xor
dec
aaa
cs
std
push
pop
loop
loop
pop
dec
out
jmp
imul
mov
mov
push
mov
pushf
pop
lods
dec
jnp
cli
jae
lea
add
ds
not
xor
test
jns
adc
mov
or
ds
fcom
pop
ret
push
jmp
aam
cld
xchg
ins
xchg
aam
cld
sbb
(bad)
sub
call
or
push
lea
xor
test
dec
cmc
imul
mov
pushf
dec
push
add
add
cmc
adc
mov
and
popf
in
adc
mov
leave
cs
mov
mov
ss
leave
jmp
inc
xchg
inc
adc
lea
jns
adc
aad
test
(bad)
inc
pop
int3
dec
int
aaa
or
mov
aas
and
push
(bad)
adc
adc
xor
enter
pop
cmp
jg
sub
or
xor
dec
stc
lahf
cli
or
sbb
xchg
ss
jl
in
mov
mov
cmp
sbb
and
outs
xchg
adc
ret
fst
js
sti
outs
sbb
sbb
and
das
push
psubusw
neg
pop
popa
les
mov
int3
mov
sbb
xchg
std
pop
xor
pop
xor
iret
pusha
push
inc
fs
add
mov
jno
(bad)
outs
gs
xor
xor
mov
test
mov
fisub
add
xchg
jmp
mov
xchg
idiv
sub
test
movs
inc
in
(bad)
ror
scas
pop
loop
push
aad
ja
dec
(bad)
out
cmp
jmp
(bad)
xor
mov
mov
js
and
dec
adc
loop
jo
sbb
cmp
stc
jl
icebp
jle
das
cdq
int3
mov
arpl
push
stos
lods
push
and
daa
imul
jle
les
sub
dec
sub
cmp
xchg
push
adc
imul
jg
aam
rcl
xchg
sbb
adc
mov
inc
push
bound
cmp
jb
shl
inc
mov
(bad)
in
jmp
iret
dec
inc
pop
push
inc
repz
fsubr
popf
inc
xchg
mov
mov
or
jb
out
cmp
ins
fucomp
pop
rol
push
lock
jbe
mov
leave
out
int3
push
lods
push
fcomip
mov
or
or
cmc
cmp
rcr
xor
fwait
into
xor
shl
xchg
push
mov
mov
add
cmp
inc
adc
xor
sbb
push
mov
push
sub
jo
scas
jno
xor
(bad)
out
sub
cwde
pop
pop
mov
scas
jbe
push
adc
xlat
push
push
jo
jmp
xlat
xchg
push
sub
and
push
ins
cwde
add
je
(bad)
sahf
cmp
(bad)
jle
push
pop
rcl
mov
add
xor
mov
(bad)
shr
adc
sets
mov
add
add
xchg
shl
out
movsx
inc
push
xchg
aam
pop
or
pop
push
xor
lock
clc
push
push
sbb
movs
fisub
in
xchg
and
mov
inc
mov
pushf
mov
push
jg
jp
push
cmp
lock
addr16
addr16
out
(bad)
call
jle
push
fcom
(bad)
enter
dec
stos
aad
mov
inc
mov
mov
push
xor
pop
das
add
jl
scas
dec
movs
xor
push
pop
iret
jb
and
iret
es
pop
xchg
icebp
add
call
sbb
sub
aas
mov
fisubr
jns
sbb
jne
push
int
loop
jge
imul
push
xchg
jmp
sbb
dec
popf
(bad)
aaa
cmp
addr16
das
fmul
fidiv
and
sbb
popf
pop
fiadd
pop
iret
daa
pop
pop
push
into
sbb
aad
mov
dec
mov
outs
sbb
ins
fwait
push
ret
fnstsw
adc
adc
leave
leave
add
and
pmuludq
pop
mov
jecxz
test
or
mov
popa
mov
bound
and
cwde
add
dec
out
test
call
popf
shr
dec
adc
shr
daa
retf
ss
jbe
cmps
dec
out
mov
or
mov
and
mov
out
xor
fs
jbe
cmp
shl
and
shl
dec
adc
add
cmp
lahf
mov
mov
lods
fld
adc
arpl
sbb
sbb
(bad)
pop
mov
stos
stos
pop
je
mov
aaa
mov
mov
movs
enter
fisub
rcr
add
js
xor
mov
and
dec
dec
pop
(bad)
movs
or
xor
sub
sbb
mov
push
sar
jge
ss
jp
fisttp
mov
cmc
inc
fwait
lock
mov
test
mov
cmps
fdiv
sbb
dec
(bad)
int3
xchg
adc
add
movs
jmp
push
aam
mov
mov
retf
adc
xor
mov
fld
shl
in
rcr
or
pushf
les
fisttp
dec
gs
shr
test
dec
imul
lds
retf
xor
outs
sbb
daa
bound
cmp
xor
test
cmp
add
add
int3
popf
xor
jp
mov
sbb
dec
pop
pop
cmp
push
icebp
pop
jmp
or
sbb
xor
mov
xchg
adc
cwde
js
jae
push
int
call
iret
repz
scas
mov
inc
cmc
iret
out
mov
cmp
mov
lds
sub
add
mov
loop
pop
dec
loop
ret
std
sub
sub
jle
adc
mov
movs
cmp
mov
cmp
cmp
gs
cdq
pop
mov
xchg
push
out
pop
push
mov
iret
int
daa
lahf
(bad)
and
clc
mov
mov
aaa
ins
ins
xchg
and
xchg
add
mov
jo
pop
mov
jns
add
jg
xor
mov
ds
xor
shl
in
nop
push
lods
gs
adc
sub
push
dec
int3
mov
lods
jb
popa
in
adc
mov
shl
jnp
jno
dec
addr16
push
out
push
lock
sbb
out
add
repnz
int
dec
cld
sti
jg
lods
push
fistp
push
mov
xor
cwde
xchg
pop
cdq
sbb
jecxz
adc
movs
jmp
adc
inc
addr16
lahf
xor
movs
adc
mov
adc
pop
addr16
pushf
(bad)
(bad)
and
shr
data16
mov
pushf
(bad)
adc
and
ins
fist
cmp
cmp
dec
cmp
sbb
mov
aam
adc
mov
icebp
xlat
jae
into
aam
push
xchg
push
idiv
pop
test
int3
mov
cmp
or
mov
mov
test
push
arpl
fst
aas
pop
mov
loopne
imul
dec
mov
addr16
retf
jbe
stos
fnstsw
(bad)
aas
xor
cmp
and
loopne
jbe
outs
adc
lea
dec
inc
dec
mov
data16
sub
int3
(bad)
popa
cmp
jecxz
xchg
ror
and
div
jbe
jle
inc
push
sbb
sbb
cmps
test
shl
imul
les
loop
mov
xchg
push
jbe
loop
xlat
dec
idiv
ins
pop
xchg
jo
in
shl
add
cmp
stos
aas
mov
mov
xchg
sbb
repnz
sbb
jge
mov
mov
fs
add
add
sub
push
jnp
dec
or
mov
pop
dec
aas
mov
repnz
push
inc
xchg
push
mov
inc
xor
das
lods
sti
mov
arpl
push
push
es
fst
sbb
out
dec
cmp
in
data16
and
or
push
out
xor
sub
or
js
or
call
dec
inc
dec
aaa
cs
adc
push
dec
fcmovb
xchg
adc
add
movs
aam
mov
dec
dec
repz
pusha
pop
jg
add
in
div
cwde
sbb
mov
mov
and
movs
pop
mov
and
jb
pop
std
idiv
out
inc
jecxz
cmps
mov
pushf
push
(bad)
loop
lods
and
cli
sbb
jle
fcomp
js
add
ret
and
mov
jle
xchg
add
outs
nop
add
pop
xlat
xlat
xchg
and
fsubp
pop
jmp
stos
popf
mov
inc
and
int3
rcl
mov
adc
xchg
push
xor
pop
ins
sub
clc
imul
retf
jo
or
cmp
jae
jmp
mov
sub
test
mov
loope
xor
hlt
cmps
and
cmovno
jg
jns
sti
adc
cmc
inc
push
jae
int
jne
pop
aam
mov
ret
cmp
dec
and
pusha
or
push
in
fwait
or
cmp
(bad)
push
jecxz
popf
ror
jmp
mov
push
xchg
(bad)
mov
cli
daa
jno
das
xor
stc
cdq
mov
inc
fs
out
jecxz
popa
jmp
in
arpl
adc
or
cmp
fist
add
(bad)
push
aas
adc
mov
cmp
inc
loope
add
push
pop
ja
jecxz
sbb
dec
movs
lods
cli
push
sub
jle
mov
les
cmp
(bad)
fisub
pop
iret
int3
pop
icebp
in
imul
loopne
pop
sbb
push
lods
je
(bad)
retf
shr
mov
pop
lahf
adc
jne
add
mov
xchg
cld
call
mov
jno
pushf
retf
ficomp
iret
fnsave
repz
mov
inc
fwait
cld
adc
mov
jo
hlt
inc
mov
gs
into
fnstsw
or
jno
movs
mov
sbb
sub
pop
push
inc
fldenv
pop
cmp
popf
xchg
gs
out
pop
mov
mov
cmp
mov
dec
or
fidivr
cwde
fldcw
mov
fisubr
sbb
mov
push
pop
popa
stc
out
push
push
mov
sub
outs
leave
and
add
(bad)
add
cmp
ins
and
add
sbb
(bad)
cmps
std
or
aam
sbb
pop
push
mov
xchg
test
mov
stos
pop
rcr
xor
push
fs
push
jle
in
dec
push
pop
push
inc
retf
mov
lods
and
leave
stos
mov
retf
mov
xchg
clc
sbb
test
or
sti
mov
mov
push
inc
xor
push
push
mov
jp
push
gs
push
fwait
out
int
inc
aaa
scas
mov
in
mov
mov
jle
data16
mov
icebp
cwde
in
sbb
shr
dec
jno
add
jp
add
pop
(bad)
aas
call
mov
int3
das
dec
aaa
into
fiadd
or
xchg
mov
jmp
push
mov
les
cmps
adc
mov
push
outs
mov
ret
cmp
push
sub
push
test
shl
jp
push
nop
xchg
pop
imul
pusha
js
mov
mov
and
mov
add
fs
sbb
dec
dec
push
push
out
mov
mov
ror
rol
xchg
mov
lea
sti
mov
jmp
ret
imul
fwait
sub
or
fs
xchg
and
pop
and
add
movs
test
or
jmp
movs
int
jne
xchg
sahf
xor
ret
xchg
mov
jg
push
xchg
cmc
cmp
(bad)
jne
mov
int
pop
xchg
jg
enter
pop
popf
cmp
add
leave
xchg
jp
ins
mov
dec
not
bound
ins
imul
add
nop
test
cdq
and
call
xchg
jmp
sub
dec
sbb
sub
shr
jl
pop
loop
sbb
jns
and
inc
ins
sbb
fdiv
loope
repnz
push
bound
dec
mov
fs
sbb
into
into
sbb
loope
int
rcr
cmps
mov
inc
repz
mov
in
jge
aaa
fimul
iret
push
sbb
fs
cli
push
jmp
addr16
iret
loop
mov
mov
out
repnz
pop
sbb
int
mov
out
loopne
popa
cmp
std
dec
enter
cwde
fsubr
adc
push
jmp
push
xchg
mov
pusha
mov
rcr
mov
sbb
pop
dec
sub
ds
ins
push
js
push
mov
xor
or
sbb
call
icebp
les
scas
mov
and
cmp
push
add
in
jle
pop
add
(bad)
pop
pop
jp
leave
inc
pop
sbb
arpl
xor
mov
sbb
(bad)
and
ja
(bad)
mov
mov
(bad)
fadd
and
rcr
pop
xor
test
inc
pop
dec
shl
fdivr
and
or
sbb
popa
sbb
mul
shr
push
cwde
aaa
inc
mov
leave
inc
sbb
pop
mov
pop
xchg
mov
adc
mov
add
js
or
sahf
inc
rol
pop
(bad)
xor
popf
cmc
mov
jge
push
loope
cmp
adc
adc
xchg
movs
jmp
mov
lahf
pop
jmp
push
fist
int3
jmp
pop
imul
mov
imul
mov
or
xor
fild
or
jno
lods
shl
aad
cld
out
dec
retf
cmp
cmp
push
and
in
sub
pop
sub
mov
out
ret
and
dec
ja
and
aam
rcr
jp
and
leave
mov
or
cmp
jl
push
rol
pop
stc
test
icebp
leave
xor
ss
pusha
pop
call
push
cmps
jmp
sub
mov
mov
xchg
inc
adc
(bad)
fs
sub
jmp
bound
ficom
aam
dec
xchg
sbb
push
repz
mov
scas
mov
enter
jbe
xor
sar
adc
adc
pop
add
cmp
js
mov
mov
jecxz
imul
mov
imul
inc
dec
ret
and
std
jns
mov
repnz
cmp
jnp
mov
jbe
ja
ins
sub
xchg
adc
loope
adc
repnz
jno
cmp
cmp
sbb
retf
cld
sbb
sbb
stos
dec
(bad)
sbb
stc
xchg
mov
cmp
js
add
cld
mov
movs
iret
(bad)
(bad)
sti
fs
adc
pop
inc
jge
cmps
out
mov
imul
pop
(bad)
push
int3
jne
xor
ins
push
loopne
inc
neg
ss
rcl
cmc
ja
inc
ret
mov
pop
adc
sub
cmp
or
push
pop
mov
mov
sbb
and
shr
mov
adc
sbb
loopne
ret
mov
sti
out
jno
mov
fmul
sub
cmp
outs
mov
add
jmp
out
test
add
add
push
and
(bad)
in
xchg
push
daa
mov
or
or
adc
icebp
aad
mov
stos
adc
jle
jae
cmp
push
shr
fadd
add
jne
inc
stos
inc
sub
mov
es
je
cmp
movs
in
mov
fdivr
pop
xor
sub
jmp
mov
loop
es
jb
sub
cmp
scas
pushf
test
mov
mov
out
mov
popa
js
pop
cmp
jmp
mov
jns
sahf
mov
cmp
stc
mov
pop
cmp
push
cdq
scas
test
inc
(bad)
adc
call
sahf
xchg
js
mov
xor
lahf
xchg
cmc
pop
inc
retf
jno
sbb
sar
rcr
mov
and
ds
iret
push
cmc
(bad)
and
icebp
cld
xor
loope
mov
mov
js
cdq
xchg
in
xor
loope
dec
lock
adc
shr
mov
scas
xlat
pop
ja
and
cmp
jg
pop
or
cmps
pop
mov
rcl
inc
push
push
scas
and
loope
ins
shl
mov
stos
daa
cmps
sub
ins
loopne
pop
jecxz
jge
push
(bad)
adc
movs
pop
ja
and
push
cwde
retf
jbe
xor
aas
push
add
pop
adc
js
jns
dec
test
repnz
xchg
add
cmp
sahf
jl
pop
mov
shl
inc
adc
enter
cmp
pop
cwde
add
movs
jmp
(bad)
mov
jne
mov
into
mov
aad
pop
dec
inc
xchg
fstp
jae
xchg
pop
js
cmp
or
fild
out
adc
mov
int
fisttp
fcom
inc
ret
fbstp
ficom
xchg
and
inc
push
sbb
loop
pop
push
imul
mov
dec
jmp
lss
mov
cmp
fs
outs
xchg
rcl
aas
inc
retf
daa
cmps
push
mov
loope
cld
mov
(bad)
mov
popf
clc
js
sub
fadd
cdq
or
out
jle
and
mov
sbb
sbb
mov
sahf
mov
sti
push
ror
mov
int
cmp
pushf
adc
and
sub
aad
inc
leave
mov
jno
ret
dec
mov
(bad)
aas
pop
rol
fild
lock
(bad)
jo
and
add
add
add
inc
jmp
aad
inc
mov
stos
in
fsub
jne
ins
add
fild
cmc
mov
xor
(bad)
mov
mov
push
xchg
in
arpl
loop
cmps
imul
push
das
push
pop
fucomi
(bad)
cli
and
cmp
movs
mov
adc
push
(bad)
cmps
pop
adc
mov
cdq
push
xor
pop
xor
into
out
hlt
adc
jl
out
out
sub
test
xor
cmc
xor
fidivr
test
push
stc
fwait
call
push
btc
cmp
mov
arpl
cdq
push
sub
rcl
int
add
push
sub
retf
in
jle
cmps
call
out
pop
(bad)
dec
inc
ret
fild
repnz
pop
retf
and
push
or
sub
pop
adc
mov
(bad)
gs
outs
out
xor
ret
aad
dec
or
dec
mov
cmp
loope
mov
mov
mul
add
fcmovb
push
push
(bad)
sbb
out
ror
dec
xor
ins
inc
dec
or
stos
xchg
xchg
sbb
pop
xchg
push
lds
stos
xchg
mov
idiv
push
mov
(bad)
in
adc
jl
in
push
repz
add
adc
inc
jmp
and
repnz
outs
or
mov
inc
mov
add
or
pop
mov
dec
movs
mov
adc
jne
mov
mov
add
stc
sbb
lds
mov
cli
add
mov
dec
aaa
mov
inc
adc
imul
pop
xchg
imul
call
scas
mov
idiv
jp
fcom
pop
ret
iret
or
dec
mov
sbb
xchg
sbb
sub
jecxz
fs
push
mov
(bad)
sub
fmul
fdivr
popa
ds
out
inc
push
bound
xor
jp
ja
aaa
xchg
push
pop
dec
mov
sub
pop
adc
test
addr16
les
gs
lock
addr16
xor
mov
xor
imul
mov
outs
sbb
mov
dec
jbe
add
push
ret
out
push
repz
das
jg
hlt
(bad)
pop
dec
aas
enter
loop
pop
retf
sub
lds
movs
jmp
popa
add
pop
(bad)
jg
out
xchg
fild
add
std
mov
test
mov
add
xor
jbe
sub
pop
adc
push
mov
mov
jg
jne
push
fcom
xchg
es
or
ror
lock
and
push
std
popa
sbb
ror
push
ja
scas
repz
adc
xchg
test
fimul
mov
mov
pop
ret
pop
ins
cmps
or
pop
lahf
dec
mov
icebp
xor
and
xor
into
cs
or
jl
out
fldenv
fld
retf
cmps
push
aaa
mov
jp
stos
(bad)
mov
sbb
mov
sub
mov
jecxz
leave
mov
pusha
call
cdq
push
aad
dec
adc
movs
cmp
pop
sbb
(bad)
movs
jmp
inc
leave
aaa
cld
cmp
jno
(bad)
dec
movs
fwait
stc
jmp
out
rcl
xchg
(bad)
push
lock
cmps
or
fiadd
dec
mov
das
and
pop
adc
call
in
cmp
scas
fcom
push
sar
mov
pop
cmp
(bad)
fisub
xor
cmp
imul
fild
ja
fmul
mov
or
jne
repz
inc
cmp
push
mov
jg
mov
push
jnp
rcr
pop
mov
cmp
dec
retf
push
data16
arpl
xor
movs
mov
mov
push
rcl
or
or
popa
fidiv
sub
jl
mov
push
sahf
out
scas
mov
cs
inc
ror
pop
es
xor
xor
jle
or
sbb
sub
adc
arpl
cmp
or
and
pop
cmp
mov
std
jmp
dec
hlt
jns
sbb
ins
movs
pusha
enter
mov
inc
xchg
not
outs
cmps
and
cld
adc
stos
mov
outs
sbb
mov
les
fcom
pop
sbb
or
dec
mov
or
xchg
pop
mov
jno
jecxz
adc
mov
test
test
fimul
mov
loope
loope
xchg
pop
fsub
or
xchg
pop
mov
cmc
push
xchg
push
es
inc
fisubr
in
pushf
clc
les
pop
ja
pop
xchg
dec
mov
fld
out
jb
ss
data16
pminub
sti
fistp
dec
and
mov
adc
add
rcr
mov
mov
mov
pop
or
rcl
test
dec
or
xor
mov
ds
inc
or
jp
shr
pop
(bad)
ds
dec
adc
lds
loope
repz
xchg
jbe
cwde
cmp
lods
movs
pop
dec
test
cld
out
arpl
adc
adc
not
nop
or
fild
icebp
dec
out
scas
fcmove
loop
outs
bound
pop
mov
push
jns
add
aam
pop
pop
shl
repz
(bad)
or
cmp
addr16
loop
iret
pop
mov
sub
inc
adc
mov
icebp
aaa
scas
pop
push
shr
in
popa
stc
mul
ja
ja
push
add
adc
mov
test
push
xor
xchg
pop
test
ins
lea
inc
outs
pop
jg
adc
mov
xchg
adc
add
int
mov
jne
adc
mov
xchg
mov
mov
adc
int3
scas
jne
cmp
push
jnp
xor
mov
or
pop
sti
out
push
ins
in
fst
pop
add
push
(bad)
mov
dec
cmp
ins
mov
rol
push
in
jae
pop
or
rcl
jp
(bad)
and
jmp
push
(bad)
jmp
aaa
movs
inc
pop
add
xor
adc
pop
mov
xor
inc
fwait
sar
cdq
mov
cmps
stos
fstp
xchg
mov
lahf
mov
adc
push
adc
mov
cmp
mov
sbb
adc
mov
lock
fistp
call
mov
cmpxchg
jg
jne
repz
sti
sub
sub
cmp
dec
(bad)
push
(bad)
imul
adc
sbb
mov
outs
or
and
fcmovnb
in
sub
mov
push
pop
hlt
aaa
aas
ins
mov
mov
(bad)
(bad)
push
fdivr
sbb
rcl
out
hlt
neg
and
dec
pop
fcomp
leave
ret
mov
push
cwde
mov
movs
xor
jnp
arpl
in
xchg
pop
push
mov
sub
inc
fwait
ret
adc
pop
stos
mov
xor
leave
es
sbb
jl
pop
icebp
jg
fld
xor
xor
push
push
out
scas
setb
push
mov
cmp
jno
cmp
or
hlt
sti
and
or
mov
mov
cmps
jo
sub
mov
sbb
movs
cmp
pop
cwde
or
add
int
(bad)
int
inc
repnz
xchg
dec
dec
jle
(bad)
xor
stc
sbb
fisttp
xchg
(bad)
push
lock
adc
add
icebp
(bad)
loop
xor
sub
data16
mov
pushf
and
(bad)
stc
add
movs
hlt
or
push
out
outs
sub
je
cmp
push
nop
in
sbb
aas
pop
or
shl
push
jne
xchg
out
push
push
pop
ins
mov
sub
xor
jp
imul
dec
xchg
rcr
fld
adc
out
call
mov
sbb
mov
(bad)
adc
lods
pop
das
sysret
xchg
xchg
fcomip
out
pop
dec
in
cmp
pop
and
setb
movntps
pop
test
or
retf
dec
in
push
repz
fldenv
push
mov
pop
mov
fdivr
gs
cmp
outs
test
and
jbe
arpl
push
xchg
aas
adc
cdq
jo
jg
aam
jb
mov
inc
dec
push
in
shl
(bad)
in
mov
and
inc
inc
pop
and
es
jae
sbb
mov
lock
aas
mov
test
pop
mov
pop
mov
not
pushf
outs
js
dec
add
movs
mov
sub
pop
push
push
pop
cli
and
(bad)
xor
retf
dec
mov
push
lahf
and
rcr
pop
cld
fsubr
ret
cdq
mov
iret
mov
dec
inc
(bad)
dec
xchg
sub
sbb
pushf
ret
inc
adc
cwde
imul
es
lock
and
cmp
xchg
sbb
test
jmp
(bad)
jne
xor
sahf
addr16
inc
push
stos
mov
push
popf
sub
dec
retf
lea
mov
outs
jmp
(bad)
fst
cmp
retf
sbb
dec
jnp
sbb
shl
call
mov
mov
shr
imul
out
xlat
and
(bad)
add
xchg
fdivr
sbb
aad
loopne
push
fdiv
loop
jge
dec
push
add
push
ja
cmp
cdq
mov
mov
movs
mov
jbe
and
mov
sub
mov
loope
jge
fdiv
outs
lea
in
lahf
adc
dec
mov
inc
sbb
mov
mov
mov
mov
repnz
lods
call
xchg
into
jo
mov
pop
xor
sub
push
cwde
int3
jle
cmc
add
adc
ss
mov
aam
push
(bad)
movs
jmp
inc
leave
jg
rol
and
xor
in
pop
(bad)
mov
ins
fld
lods
xchg
and
push
das
mov
push
inc
sub
jmp
movs
inc
mov
repnz
rcr
rcr
pop
push
fcom
push
dec
inc
inc
ror
lock
push
sbb
jg
arpl
fisttp
push
popa
push
dec
ror
fbstp
sbb
pop
mov
adc
pusha
gs
and
mov
sbb
pop
mov
jnp
int3
iret
ins
lea
push
jne
(bad)
into
sbb
sbb
ins
and
jl
in
fst
fld
retf
jbe
(bad)
cwde
into
push
int
push
and
sub
test
dec
sahf
(bad)
add
mov
jo
mov
lea
jmp
cmc
adc
into
add
jl
dec
cli
adc
rcr
hlt
pop
mov
dec
mov
or
outs
push
les
pop
je
out
fild
jb
ins
and
(bad)
mov
push
pop
sub
test
xor
mov
movs
add
cmp
inc
push
sar
(bad)
rol
stos
sub
push
mov
fcmovnbe
in
sar
test
rcl
or
lods
loope
fisub
mov
data16
sbb
std
(bad)
mov
mov
ror
xchg
sbb
xchg
sub
push
ror
cmp
mov
sbb
or
addr16
jmp
sub
aam
cmps
cdq
mov
push
and
ds
ins
test
add
sub
mov
pop
retf
inc
in
bsf
ret
xchg
pop
add
cmp
or
adc
cdq
outs
rcl
std
pop
icebp
int
dec
sbb
daa
in
jmp
cdq
cs
pop
jecxz
and
xlat
call
jnp
xchg
cmps
(bad)
mov
sahf
jnp
mov
int3
mov
mov
jp
sbb
mov
pop
push
cld
aam
fmul
ret
pop
push
sub
imul
mov
(bad)
retf
add
stos
test
mov
inc
push
(bad)
and
ds
cmp
ds
int
test
mov
in
shl
xor
sub
and
stos
lahf
call
cs
jno
dec
add
mul
inc
outs
dec
imul
pusha
retf
and
adc
lock
repz
sbb
adc
push
add
pop
int
dec
ins
js
popf
inc
add
add
xchg
ja
les
out
bound
adc
mov
nop
sbb
dec
repz
sub
sbb
outs
loope
sbb
dec
lds
mov
jecxz
pop
cmp
jo
das
or
jge
inc
stc
hlt
push
div
jp
stc
xchg
push
jbe
cmp
sti
fisubr
pop
fdiv
jmp
ja
imul
push
jae
sbb
xchg
in
adc
cmps
jge
adc
stos
or
push
jbe
push
js
mov
repz
fidiv
(bad)
pop
sbb
outs
sub
ror
gs
ret
mov
fs
mov
(bad)
cld
movs
adc
xor
cmc
and
lahf
cmp
jnp
cmp
jo
loopne
in
mov
mov
push
test
mov
scas
fcom
fsubr
cs
ja
jns
adc
jo
(bad)
hlt
cmp
jno
dec
pop
ror
jmp
xchg
jmp
jae
test
mov
test
cs
jecxz
or
ret
mov
adc
test
(bad)
cdq
pop
cdq
sub
mov
stc
mov
pop
inc
lods
fimul
push
xlat
push
jae
cmp
push
nop
outs
js
or
lock
fcomp
xor
fldcw
sbb
mov
inc
(bad)
ficomp
mov
pop
icebp
jp
(bad)
jae
dec
xchg
bound
jg
jno
fwait
std
mov
cli
sub
call
inc
dec
or
or
mov
push
xor
in
add
in
cmp
data16
dec
adc
jae
mov
push
retf
inc
sub
mov
pop
hlt
dec
mov
xchg
adc
es
lods
cmp
xchg
aad
inc
stc
popf
dec
nop
dec
mov
push
inc
jae
mov
scas
mov
sbb
sbb
and
push
mov
push
das
in
jle
mov
sub
inc
push
lods
and
dec
clc
adc
cmps
ss
sahf
repnz
mov
cmp
loope
mov
pop
adc
cld
jecxz
je
ds
(bad)
sub
dec
push
fdivr
and
pusha
dec
xchg
jle
test
fnstenv
inc
idiv
cwde
out
js
lahf
jp
setle
mov
pop
push
out
mov
push
sahf
pop
adc
mov
int
movs
mov
mov
fscale
and
xor
out
nop
and
add
add
xchg
inc
rcr
jmp
dec
dec
aaa
cmc
adc
int3
add
jl
dec
cli
push
retf
cmps
shr
mov
mov
sub
mov
cli
aas
pop
dec
sub
(bad)
mov
fist
mov
or
pop
sub
(bad)
ror
mov
popfw
aaa
xlat
retf
scas
fst
add
(bad)
jl
sub
aas
fsub
inc
lea
mov
add
or
mov
test
push
(bad)
enter
jp
pop
stos
mov
mov
shl
int3
(bad)
pop
or
xchg
rcl
sar
jmp
cs
and
inc
jle
inc
(bad)
(bad)
mov
retf
mov
shl
pop
mov
push
sbb
ss
xchg
das
std
push
jns
dec
and
cs
gs
sar
or
inc
pop
fsubr
push
jns
and
popf
shl
xor
sti
ss
pushf
and
jmp
int
mov
or
in
pop
and
jmp
cdq
(bad)
cmc
xor
pop
jecxz
or
or
popf
mov
sti
mov
push
dec
sub
in
jmp
and
push
(bad)
jge
test
les
sbb
aas
out
mov
pop
ins
sbb
fsub
jae
push
das
push
pop
push
push
(bad)
div
ds
loope
mov
ret
mov
inc
movs
xor
mov
fisub
cmp
pop
nop
push
mov
fcomp
mov
dec
lea
sub
call
cli
pop
and
mov
pop
xor
fsubr
and
jle
loopne
jl
xlat
cmps
mov
retf
push
xchg
mov
out
or
mov
mov
jge
sahf
inc
rcl
push
sahf
jg
cdq
cmc
xchg
xchg
cmp
pop
cmp
sbb
jmp
inc
cmp
mov
mul
lock
dec
and
js
jle
xchg
pop
jne
ror
add
mov
push
cdq
movs
(bad)
jmp
inc
ror
adc
push
fisub
retf
mov
mov
popa
sti
cld
dec
sbb
sbb
adc
push
nop
not
ficom
lods
cmp
sbb
nop
stos
lea
movs
or
in
imul
daa
cmc
js
(bad)
jae
push
xchg
bound
mov
mov
in
inc
adc
pop
cli
data16
push
cmp
inc
pushf
retf
jbe
std
mov
mov
daa
cmp
mov
in
mov
mov
xchg
mov
mov
int
inc
clc
dec
jnp
cdq
fsub
stos
les
leave
cwde
add
sub
or
lds
mov
(bad)
xor
pop
jmp
pop
dec
test
xchg
stos
not
sub
adc
push
jbe
mov
scas
mov
ret
iret
repnz
push
fcomp
xchg
xchg
xchg
push
xlat
push
icebp
in
test
nop
inc
fwait
inc
les
and
dec
xchg
int3
mov
pop
push
push
stos
add
inc
cmp
cmc
addr16
pusha
and
jge
nop
jns
in
add
lea
xchg
test
imul
loopne
fs
ja
push
shr
pushf
pop
and
jb
cld
and
mov
dec
sub
enter
mov
jo
mov
push
test
mov
aas
adc
mov
movs
cmp
test
mov
test
adc
movs
mov
test
dec
jns
std
jmp
add
xchg
test
pop
mov
and
into
fiadd
or
cwde
test
jns
mov
nop
adc
sub
fdivr
mov
lahf
sub
sti
(bad)
lea
adc
mov
inc
test
(bad)
stc
in
fidiv
lahf
mov
mov
fstp
imul
test
jb
lea
je
and
push
mov
adc
xor
test
pop
std
dec
ja
out
in
test
sahf
movs
dec
enter
mov
std
lea
xlat
jbe
cmp
fs
(bad)
lods
dec
stos
cli
xchg
jbe
nop
cmp
les
fwait
sbb
repz
sti
ret
lods
es
(bad)
les
movs
push
leave
xchg
pop
daa
loope
inc
jmp
xor
sahf
fist
push
dec
mov
add
fxch
mov
add
pop
jb
mov
(bad)
dec
push
ret
ret
xor
pusha
xor
jno
mov
pop
dec
push
shr
push
cld
out
gs
jbe
sbb
cmp
dec
sbb
push
dec
xor
cmp
dec
(bad)
loope
cwde
imul
jae
fiadd
pop
mov
and
loopne
icebp
js
aad
stc
mov
xor
into
int3
mov
ret
sbb
cmp
mov
inc
adc
lahf
ret
jp
test
xor
jae
cli
inc
pop
or
adc
add
cmps
mov
test
inc
mov
ret
cs
out
lods
punpckhbw
jl
cmps
in
and
js
xchg
mov
mov
enter
push
fistp
inc
lock
and
jg
(bad)
psubq
sub
shl
push
push
dec
(bad)
retf
mov
jecxz
jne
(bad)
cmp
fdivrp
cdq
mov
cmp
(bad)
mov
(bad)
cmp
jmp
mov
pop
les
xchg
data16
xor
adc
mov
push
xlat
jge
popa
pop
inc
and
dec
pusha
popf
or
and
cld
lock
push
nop
mov
shl
jge
fist
das
shr
pop
pop
add
cwde
fisubr
cmp
xlat
dec
frstor
dec
shl
sub
sub
in
and
test
push
aaa
push
inc
out
daa
jmp
bound
(bad)
popa
scas
push
mov
jne
cmc
popf
and
rcl
int3
lds
xchg
jge
mov
es
lods
movs
xchg
ja
jo
scas
mov
or
repz
adc
fwait
(bad)
mov
adc
and
jle
adc
pop
rcr
adc
mov
adc
or
test
or
push
xchg
dec
cmc
jno
pusha
ds
push
or
jno
sbb
mov
(bad)
jns
jp
clc
int
add
or
(bad)
lods
test
inc
and
and
pop
push
in
and
popf
xchg
nop
xchg
pop
inc
out
or
fadd
inc
jne
dec
stos
mov
aad
pop
(bad)
inc
mov
jae
and
push
pop
arpl
out
mov
lods
clc
pop
std
jmp
mov
mov
ins
mov
xor
jmp
dec
ror
inc
cmps
push
xor
mov
int3
jmp
mov
sbb
lods
mov
movs
xchg
xor
mov
movs
dec
movs
add
xchg
and
int
sub
fcom
(bad)
cmp
jns
aam
xchg
mov
mov
clc
out
out
mov
mov
icebp
xor
mov
sub
push
jo
daa
or
jne
jne
jo
das
test
into
mov
push
inc
(bad)
out
pop
icebp
add
jecxz
pop
(bad)
jp
fs
out
adc
push
pop
sub
std
pop
popa
(bad)
dec
fs
push
or
pop
mov
jbe
jo
or
pop
sbb
mov
repz
jecxz
inc
cmc
call
repnz
and
loop
pop
(bad)
addr16
inc
enter
ins
adc
scas
sbb
sub
in
imul
aam
xchg
sbb
ja
add
mov
mov
retf
jbe
cmp
scas
xchg
xchg
mov
call
xchg
sub
lds
fidivr
stc
mov
or
movs
cmp
movs
or
out
xor
popa
xchg
mov
cmp
mov
(bad)
clc
retf
repnz
stos
mov
push
xor
int
push
xchg
and
cwde
jle
jg
(bad)
(bad)
shl
sub
call
adc
mov
adc
push
daa
jne
xchg
aam
pop
aas
in
jge
jns
and
fcomp
fistp
ret
std
movs
jmp
ins
out
pop
mov
dec
(bad)
mov
dec
pop
jmp
test
inc
retf
test
add
inc
je
adc
ins
cmp
jl
pop
out
sub
adc
xchg
rol
sub
lods
ss
or
inc
sub
out
pushf
test
jnp
mov
mov
adc
outs
in
outs
out
adc
cmps
xchg
add
ja
dec
pop
call
push
enter
(bad)
cmp
je
cmp
out
xchg
and
pop
mov
test
pop
call
jmp
jp
mov
call
iret
sub
cmp
mov
movs
and
iret
mov
and
iret
inc
daa
popf
pop
pop
scas
pop
shl
arpl
add
mov
add
out
sbb
loop
shl
cld
sti
cmp
mov
mov
loopne
and
cld
mov
shl
jae
test
and
popf
(bad)
lods
repnz
lods
push
leave
retf
outs
dec
mov
je
jle
or
aaa
mov
or
mov
xchg
ss
gs
push
and
(bad)
call
mov
mov
aas
lock
mov
fistp
and
test
inc
gs
add
ret
jp
mov
ja
stos
jl
mov
cmps
and
mov
shl
icebp
ror
clc
adc
push
xor
mov
inc
clc
addr16
mov
inc
sar
ret
xor
jno
mov
(bad)
pop
jmp
in
stos
cmps
mov
inc
pop
rcr
xor
push
fadd
xchg
ins
add
cmp
sbb
pushf
out
adc
shr
pusha
inc
loop
jge
xor
cli
push
mov
xchg
and
adc
jno
and
cmp
call
dec
mov
call
sbb
push
rcr
add
push
or
xlat
das
lods
sub
jbe
sub
inc
sbb
dec
cmp
xchg
jb
pusha
push
sbb
jnp
jb
leave
dec
enter
sbb
cwde
fdiv
mov
outs
dec
jmp
mov
jno
mov
mov
mov
ror
inc
mov
inc
pop
or
aas
push
push
sbb
sub
les
xor
add
xor
js
xlat
(bad)
aas
pop
sbb
les
inc
lock
jno
outs
xor
or
sbb
jecxz
jmp
adc
push
cmp
shl
pop
loopne
(bad)
cld
jbe
mov
lock
cmp
dec
sbb
imul
cmp
mov
and
movs
ret
or
add
sar
add
pop
cdq
sbb
fs
outs
inc
ror
loope
sub
sbb
pushf
loope
mov
leave
cmp
in
sub
fs
jp
test
stos
addr16
add
mov
push
pop
inc
mov
jns
adc
adc
out
add
popa
rcr
jg
push
mov
pop
inc
fwait
retf
jmp
dec
sbb
dec
out
sub
mov
dec
or
pop
int
stos
dec
ror
add
xchg
adc
jo
push
push
imul
mov
arpl
or
rcl
rcl
daa
icebp
daa
cdq
pop
std
scas
pop
shl
arpl
add
in
aaa
std
ret
xchg
sub
xor
mov
loopne
ins
xchg
sub
xchg
push
cmp
or
pop
shr
mov
xor
mov
outs
sbb
cwde
fs
rcr
test
data16
mov
jp
push
jnp
fadd
loop
stos
mov
lea
imul
mov
jmp
outs
shr
jae
cmp
(bad)
xchg
push
pop
stos
fisubr
or
(bad)
ins
(bad)
shl
xchg
or
(bad)
mov
dec
popa
cmp
leave
dec
sahf
xchg
pushf
(bad)
xchg
pop
mov
mov
pusha
cmp
push
adc
mov
sbb
push
(bad)
xor
(bad)
xchg
rol
cmc
mov
lea
push
sbb
repz
push
adc
xchg
test
jecxz
in
jmp
daa
pop
sbb
push
out
call
fcom
mov
add
cmps
rcl
xchg
push
mov
leave
adc
rol
add
fist
inc
push
mov
pusha
lahf
mov
xchg
ins
sub
(bad)
sub
mov
mov
iret
xchg
inc
cmp
daa
pushf
movs
fs
xchg
jb
inc
ins
cmp
jnp
test
sbb
sub
mov
cmp
ret
inc
mov
jno
fisttp
sti
jg
movs
push
repz
cmp
xor
shl
jae
sbb
pop
dec
aas
(bad)
cli
cmc
(bad)
adc
push
pushf
pop
(bad)
sub
inc
outs
jmp
fwait
retf
test
mov
mov
stos
xchg
and
jnp
xor
(bad)
jg
push
sub
pop
jmp
pop
add
sub
jge
(bad)
inc
sub
mov
push
pop
es
addr16
mov
std
sahf
inc
mov
and
dec
or
sub
(bad)
dec
call
xor
mov
repz
cwde
in
cmc
sbb
inc
cmps
xor
(bad)
mov
xor
cli
and
sbb
fsub
lahf
mov
inc
in
sbb
pop
pusha
inc
jb
mov
push
pop
aad
sub
xchg
shl
loop
cmp
push
in
mov
icebp
lods
dec
inc
jp
cmp
inc
sahf
int3
fwait
dec
gs
pushf
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
mov
and
retf
mov
cmp
adc
mul
ins
sar
xchg
int3
fsubr
in
xor
xchg
cli
mov
movs
in
mov
in
in
jmp
fwait
inc
mov
repz
std
or
test
das
cs
sti
or
or
cld
push
push
lea
push
ins
mov
popa
jne
out
push
data16
outs
movs
test
scas
and
(bad)
push
add
cld
jmp
fistp
jle
gs
outs
out
aas
repnz
dec
clc
sub
call
mov
pop
addr16
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
(bad)
cmp
mov
int3
daa
stos
(bad)
push
sbb
arpl
clc
and
add
loopne
pop
xor
or
xor
sahf
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
shr
(bad)
in
or
int
fld
mov
cdq
and
ret
adc
dec
(bad)
cmps
call
das
xrelease
lods
inc
add
pusha
xchg
xor
mov
or
dec
loop
mov
inc
mov
scas
arpl
sbb
xchg
ret
xor
cwde
add
cli
dec
lea
or
out
data16
ret
mov
lahf
and
fsubr
sbb
dec
add
int
inc
dec
sbb
dec
cs
adc
adc
fwait
mov
xor
xchg
add
dec
adc
in
std
mov
push
rol
sub
daa
fsubr
fcmovbe
xchg
push
bt
mov
inc
mov
or
in
fs
adc
pop
(bad)
and
out
jmp
xchg
bswap
dec
pop
(bad)
adc
jg
fisttp
add
jmp
test
pop
xor
adc
jg
lock
jae
pop
mov
out
ins
mov
mov
mov
xor
sbb
addr16
xchg
jmp
scas
pop
cmp
out
mov
cmp
frndint
inc
add
inc
loope
push
scas
or
lods
(bad)
test
outs
je
adc
in
cmp
pop
add
cli
cmc
ins
ret
je
out
out
sar
ins
loop
cmp
in
stc
sub
popf
lea
jl
out
stos
(bad)
pop
and
aas
(bad)
inc
lahf
lahf
daa
sub
scas
jmp
es
pop
dec
addr16
sbb
mov
mov
pop
push
pop
jmp
adc
iret
mov
xor
mov
loopne
or
xor
pop
fucom
and
retf
adc
pop
imul
adc
adc
cmp
out
in
xchg
mov
in
sub
or
fmul
(bad)
add
fisub
xchg
ins
cmps
mov
inc
test
adc
add
jno
xor
mov
pop
xor
cmp
ret
jo
inc
loopne
pop
test
outs
ins
cmps
enter
int3
sahf
ins
popa
xchg
arpl
in
dec
xchg
test
mov
jne
stc
jg
repnz
fisub
mov
and
pop
addr16
aad
cmps
push
push
imul
xor
and
mov
xchg
cmp
aad
mov
pop
pop
movs
pop
xor
in
push
out
aaa
sar
iret
inc
(bad)
pop
xor
and
or
fmulp
lea
ror
mov
or
sahf
jno
jl
cmp
dec
mov
cmp
mov
ror
push
dec
mov
add
mov
mov
hlt
xchg
pop
clc
daa
mov
adc
shl
mul
mov
in
leave
push
xchg
mov
imul
inc
jne
or
add
ins
movs
ficomp
pop
xor
jmp
mov
aas
or
icebp
inc
inc
int3
inc
out
push
dec
mov
jle
jp
ret
mov
(bad)
mov
push
fmul
lods
cmp
mov
cli
sub
mov
add
add
push
leave
je
sbb
stc
mov
mov
repnz
mov
dec
cmp
es
lahf
push
ficom
push
fist
int
and
jp
or
pop
shl
lods
dec
ret
push
pop
and
cmp
iret
test
int3
fldcw
pop
lods
mov
adc
pop
mov
cmp
retf
adc
xchg
and
enterw
sbb
data16
or
pop
hlt
call
mov
pop
pop
scas
fstp
ret
adc
xchg
mov
xchg
(bad)
les
mov
xchg
vcomisd
lds
jmp
cmp
stc
mov
repz
adc
dec
std
push
pop
fidiv
bound
fild
addr16
arpl
ss
or
and
xchg
imul
cmps
mov
cmp
sbb
add
inc
fwait
test
sbb
inc
and
push
add
xchg
repz
push
pop
(bad)
pushf
(bad)
pop
push
(bad)
pop
and
jp
adc
cmp
cmps
pop
ds
mov
stc
mov
retf
ds
movs
mov
test
or
scas
call
mul
xchg
dec
retf
push
js
push
sbb
test
(bad)
fild
jecxz
(bad)
dec
lock
push
push
pop
mov
or
sbb
int
stos
repnz
mov
lods
xchg
mov
rcr
loop
mov
pop
mov
sub
out
test
loopne
add
dec
out
sbb
mov
or
enter
int3
test
xchg
scas
jmp
pop
ins
mov
icebp
cmp
cmps
movs
push
mov
sahf
and
jno
push
cld
mov
and
mov
jae
ins
mov
lock
inc
cdq
xchg
xor
mov
pop
dec
movs
inc
xor
or
aam
or
mov
retf
inc
cmps
dec
xor
stc
sub
imul
push
mov
test
jne
sbb
sub
jmp
mov
push
cwde
retf
and
adc
mov
test
ins
dec
test
or
xchg
inc
shl
stos
dec
pop
push
loop
(bad)
mov
(bad)
jle
(bad)
mov
cmp
loop
out
sbb
or
pop
imul
lods
fsubr
pushf
lds
scas
dec
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fild
add
add
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
or
imul
push
les
xchg
mov
push
xchg
add
sbb
ins
mov
xor
push
xor
lock
test
pop
adc
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
dec
xor
pop
mov
cmp
sub
aaa
int3
dec
(bad)
(bad)
(bad)
lods
mov
sbb
sbb
call
jb
fimul
inc
dec
into
lods
shl
mov
xor
iret
outs
mov
add
fs
jne
not
outs
lods
mov
mov
fisubr
add
mov
mov
call
pop
pop
add
nop
push
ret
xchg
lahf
cs
push
dec
fst
xlat
inc
sub
add
mov
mov
sub
(bad)
xor
imul
sbb
iret
test
pop
stos
pushf
das
fucomip
jnp
sbb
addr16
ja
pop
out
cs
out
xor
clc
inc
pop
push
pop
shl
jae
pop
out
inc
or
sbb
daa
fdivrp
dec
aad
jg
pop
jecxz
xchg
mov
cs
pop
pop
scas
ror
ret
sbb
and
fld
jmp
das
cmc
jmp
das
movs
aaa
cmp
adc
add
inc
mov
sbb
int
scas
adc
push
(bad)
dec
add
push
mov
mov
add
add
je
xor
out
or
mov
mov
ret
mov
leave
pop
dec
pop
dec
xchg
cdq
push
cs
fwait
and
xor
push
add
xchg
sahf
and
adc
xchg
stos
mov
rcl
push
and
sar
inc
ror
inc
fdivr
fmul
xor
cmp
mov
stos
sbb
lods
lock
leave
icebp
cmp
mov
call
or
or
aaa
jecxz
jae
lods
jle
inc
repnz
mov
shl
mov
aad
sbb
or
add
fisub
test
call
aaa
cmp
adc
add
imul
pop
cmp
sub
stos
aad
add
inc
in
push
xchg
push
int3
movs
bswap
int3
icebp
inc
jle
adc
test
mov
mov
dec
loope
dec
mov
lods
mov
mov
in
sbb
add
(bad)
sub
mov
int
jecxz
xor
push
sub
cmps
sub
lea
push
and
jp
add
pushf
sbb
loopne
nop
cmp
dec
cmps
imul
in
leave
enter
xlat
out
mov
or
cwde
pop
nop
sbb
xor
add
mov
es
mov
push
inc
enter
(bad)
jmp
retf
sti
jle
popf
inc
xchg
popa
repnz
sahf
sub
and
imul
push
push
push
sahf
rcl
lods
jle
or
shl
test
ret
cmp
loop
mov
sar
loopne
retf
mov
dec
into
loopne
add
psubsb
dec
add
mov
imul
int
data16
pop
ret
mov
daa
mov
pop
cmps
jae
loopne
shr
lds
mov
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
cmp
fnstsw
(bad)
push
jmp
movs
pop
shl
aam
fmul
cdq
push
sbb
adc
push
mov
add
and
cmp
fdivrp
movs
pop
xchg
aas
add
or
add
add
jo
iret
jb
fiadd
or
sbb
sub
mov
int
push
xchg
ins
aam
ret
mov
jge
inc
mov
lock
mov
sbb
xchg
jns
mov
fwait
ret
xlat
jp
push
mov
inc
push
bound
xor
fimul
loop
push
addr16
imul
dec
aad
xor
loop
mov
loope
jge
sar
or
mov
xchg
jl
addr16
test
out
cmp
movs
sbb
int3
mov
and
stc
dec
dec
test
inc
ret
into
pop
xchg
push
repnz
rcr
aas
lock
aad
cmps
adc
cli
and
xlat
scas
jecxz
mov
sub
test
jmp
fistp
in
ja
iret
dec
or
in
jmp
adc
jo
das
iret
push
push
mov
pusha
jb
mov
(bad)
rcl
xchg
fisttp
(bad)
cmp
jae
out
out
popa
mov
lods
mov
mov
loope
repz
jecxz
dec
loop
fist
xrelease
push
les
inc
les
clc
arpl
out
push
dec
inc
mov
sub
pop
stos
pop
(bad)
inc
xor
(bad)
cmp
mov
dec
mov
into
outs
(bad)
in
inc
test
pop
mov
sub
in
jmp
and
std
inc
sbb
or
fisttp
loop
xchg
dec
sti
movsx
mov
ret
rcr
lods
sbb
jg
cld
adc
xlat
mov
xor
loopne
leave
fs
add
sbb
je
iret
test
dec
shl
mov
aas
pinsrw
and
mov
stos
in
add
je
push
sar
mov
cmp
jae
(bad)
jg
icebp
jle
pusha
lods
xchg
mov
clc
ja
(bad)
xchg
inc
loopne
in
test
jge
rcl
nop
fisttp
jb
jb
mov
jb
push
mov
sbb
cmp
add
jno
push
lds
dec
cmp
out
fs
pop
(bad)
aam
mov
cdq
mov
pop
stc
xchg
cmp
push
pop
push
bound
xlat
(bad)
and
cmc
xor
mov
fist
dec
or
(bad)
hlt
outs
fstp
stos
xchg
xchg
inc
in
and
adc
push
mov
push
cmp
clc
and
fisubr
test
mov
mov
xor
push
jmp
scas
shr
aam
xor
in
hlt
loope
cs
repz
or
and
sub
jl
fldl2e
inc
jmp
mov
test
cmp
mov
mov
jbe
mov
xchg
jne
and
jno
sti
jno
push
cmp
xchg
or
popa
mov
sbb
dec
cmp
jg
mov
leave
inc
sbb
jecxz
add
ja
fistp
adc
lods
aas
rol
lods
pusha
xor
out
jae
dec
out
mov
mov
lods
ja
out
loope
and
sbb
pop
sub
mov
and
call
sbb
dec
(bad)
add
or
movs
nop
dec
aad
bound
xchg
adc
mov
ror
popf
mov
cmp
popa
mov
(bad)
jle
pop
(bad)
xor
lea
aaa
mov
xchg
cmp
dec
(bad)
popf
stos
xlat
(bad)
push
lods
ss
inc
xchg
mov
mov
sub
pop
xor
xchg
dec
mov
daa
scas
repnz
rcl
or
ror
pop
mov
std
movs
shr
repz
(bad)
sahf
inc
mov
fs
add
sub
sbb
daa
push
sub
sbb
mov
pop
inc
loopne
push
or
cmp
xor
outs
aad
xor
lods
jge
sbb
fadd
xchg
inc
jge
lds
or
stos
jne
and
sub
inc
mov
pop
not
add
sbb
inc
inc
mov
fiadd
(bad)
and
push
jmp
test
jle
sbb
dec
bound
or
and
and
(bad)
pop
cwde
mov
outs
cmps
ret
mov
rcl
imul
push
movs
fucomi
mov
sub
iret
mov
push
iret
(bad)
dec
adc
test
xchg
jmp
ss
int
ja
mov
sbb
out
mov
ins
in
out
fsub
mov
ds
fisub
sub
shr
adc
cmps
shr
sub
mov
sbb
fwait
sahf
in
push
retf
push
psrad
push
or
push
div
mov
xor
ds
sbb
mov
in
retf
mov
xor
mov
mov
add
adc
and
shr
jno
cmc
mov
jmp
or
enter
inc
iret
in
mov
repz
dec
sar
shl
mul
jmp
neg
scas
repz
dec
retf
outs
mov
mov
adc
les
inc
mov
sub
(bad)
sti
push
and
(bad)
repz
adc
pop
mov
ja
jne
push
xor
dec
call
xchg
test
mov
dec
sahf
ror
jp
imul
fisub
push
lds
(bad)
cmp
(bad)
mov
xchg
sbb
cmp
rcl
pop
sub
scas
and
mov
sub
push
push
mov
inc
es
pop
jns
mov
std
sbb
xor
mov
adc
test
out
lea
das
or
sub
dec
scas
loope
imul
cmp
stos
sbb
jne
in
mov
inc
ds
dec
js
retf
mov
inc
out
in
call
mov
pop
push
mov
or
push
addr16
or
jae
imul
pushf
push
jmp
fist
push
mov
lock
xchg
cmps
dec
pop
sbb
cmc
scas
xor
sbb
dec
out
push
ins
cdq
inc
pop
inc
inc
mov
movs
add
mul
fsub
pop
xchg
or
dec
mov
dec
out
popa
shl
(bad)
push
mov
fidivr
sub
cli
or
mov
cmc
out
cmps
leave
jg
jp
dec
xchg
xchg
dec
shr
push
fcomp
retf
push
xor
sbb
mov
aas
ror
mov
ins
add
out
cmp
xchg
adc
sub
cmps
add
lea
sub
inc
mov
adc
movs
adc
pop
jmp
push
or
aas
cmp
test
dec
(bad)
sub
stos
outs
ret
imul
imul
adc
cmp
push
std
jnp
mov
leave
push
scas
mov
inc
xchg
je
enter
aad
xchg
into
repnz
(bad)
cmp
out
and
push
not
dec
adc
xchg
fldenv
inc
jge
adc
iret
arpl
dec
sbb
in
jle
inc
call
dec
fdivr
push
xor
mov
popf
xchg
sbb
loope
stos
(bad)
bound
sub
or
xchg
push
es
rcr
inc
inc
xlat
sub
xchg
inc
icebp
mov
mov
dec
xor
jmp
int
shl
xchg
inc
adc
shl
sub
into
xor
xor
and
movntps
fstp
or
lea
and
add
jp
fist
arpl
mov
pop
out
xchg
mov
sub
pop
jecxz
pop
push
push
mov
or
or
faddp
retf
je
push
(bad)
scas
cmc
outs
mov
test
add
add
adc
inc
mov
aaa
stos
pop
pop
sbb
cmc
scas
xor
sbb
mov
sub
cmps
enter
jmp
jo
mov
ret
mov
sbb
inc
stos
icebp
push
je
xchg
movs
jp
sbb
ja
pcmpeqd
lea
or
mov
loop
jmp
mov
call
pop
(bad)
mov
push
xor
xchg
sbb
cmp
sub
je
pop
sub
addr16
mov
or
stos
mov
inc
mov
sbb
xchg
test
sub
or
in
mov
lock
das
cli
inc
or
sbb
outs
std
jmp
cdq
inc
repnz
cmps
sahf
pop
call
mov
aam
(bad)
call
cld
and
mov
and
mov
adc
xlat
add
and
fsubr
(bad)
mov
out
and
out
popf
adc
in
push
sbb
fiadd
push
cmp
xchg
data16
add
sahf
daa
icebp
add
dec
call
jne
mov
sub
fstp
orps
cmps
sahf
xchg
add
out
std
mov
dec
and
mov
aaa
cmp
pop
rcr
(bad)
pop
push
ret
fild
jns
test
sub
inc
aam
add
out
and
aad
pop
sbb
mov
sbb
mov
xchg
adc
add
daa
pop
mov
sub
jmp
sbb
rcl
dec
js
push
or
(bad)
js
mov
test
rcr
test
pop
repnz
dec
or
xchg
(bad)
in
and
punpcklwd
ds
rol
jge
dec
popf
mov
addr16
pushf
jo
mov
sbb
inc
in
jecxz
mov
sbb
ret
test
aam
and
ins
loop
pop
mov
push
dec
imul
pushf
adc
sti
pop
mov
push
cwde
ja
loopne
in
icebp
jle
push
imul
push
fdivr
cs
loop
gs
sub
popf
(bad)
pop
cmp
ret
mov
ss
xchg
inc
lds
jg
mov
inc
imul
mov
loope
sub
jbe
inc
shr
ds
mov
(bad)
xchg
xor
sbb
inc
xchg
push
push
or
and
xlat
and
cmc
and
mov
into
test
pop
stc
and
fisttp
sbb
(bad)
idiv
call
mov
and
dec
shr
add
pop
cmp
repz
loopne
cmp
aas
aam
mov
sahf
aad
jo
ror
pop
adc
or
retf
mov
xchg
push
sub
(bad)
popf
add
sub
fst
movs
inc
loopne
mov
jb
mov
rcl
mov
sahf
daa
sahf
xchg
dec
push
aam
mov
dec
fdiv
xchg
movs
jp
add
ins
fimul
cmp
in
stc
sub
cld
mov
sbb
cli
scas
jmp
xchg
push
shl
mov
fisttp
movs
arpl
in
push
push
push
xchg
xor
mov
rcr
adc
das
int
cld
leave
ret
adc
iret
stos
and
xchg
inc
adc
and
mov
xor
lea
and
push
into
cmp
sti
gs
xor
out
inc
xchg
inc
repnz
xor
int
int3
fcomp
cdq
and
frstor
les
scas
dec
xchg
in
cmp
les
imul
jns
sbb
adc
not
mov
push
jnp
jbe
outs
imul
call
jbe
scas
pop
mov
push
das
mov
cmc
cmps
sub
mov
and
sbb
int3
mov
test
jmp
cmp
push
mov
xor
or
in
inc
dec
rcr
out
cs
pop
and
cli
mov
inc
iret
inc
pop
adc
cmp
imul
sbb
cli
mov
sbb
mov
pop
xor
sub
out
in
scas
inc
je
pop
ror
dec
cmp
adc
adc
cmc
fadd
stc
xchg
inc
in
mov
fcmovne
mov
adc
or
and
out
xchg
idiv
xor
fild
pop
sbb
or
push
aad
mov
das
mov
sbb
rcl
into
loope
or
mov
je
cmps
lods
adc
retf
lea
in
loop
lods
sbb
inc
stos
icebp
push
pop
xchg
mov
movs
jns
cmp
pop
in
push
call
call
cmp
xor
push
cmp
adc
mov
jb
push
dec
or
sub
xor
xor
aad
mov
neg
mov
or
adc
sub
cmp
add
push
inc
fnstcw
dec
cmp
adc
sub
leave
outs
leave
add
mov
mov
add
xchg
ror
fnstcw
jmp
(bad)
push
cwde
mov
and
test
sbb
jmp
add
add
adc
inc
mov
(bad)
xchg
scas
sub
jmp
and
aas
fsincos
push
adc
pop
ficom
jae
stos
(bad)
xor
mov
sahf
and
test
mov
out
(bad)
in
jg
pop
xchg
and
add
in
aam
mov
std
mov
dec
and
lahf
push
les
gs
mov
push
pop
retf
inc
sub
or
lock
popa
rcr
xor
cmp
or
fisub
retf
stos
ds
stos
mov
xchg
or
push
sub
pop
mov
das
mov
and
(bad)
pop
push
push
push
enter
psubd
out
sub
stc
cmps
sub
pop
loopne
sbb
(bad)
mov
cmp
(bad)
xlat
lds
div
aam
mov
mov
rol
lods
inc
jne
(bad)
add
ret
stos
test
icebp
hlt
xchg
sbb
call
pop
shl
push
scas
arpl
aaa
mov
int
outs
adc
xchg
cdq
jge
test
mov
(bad)
jne
idiv
jne
mov
mov
ret
push
dec
sbb
xchg
pop
xchg
add
sbb
(bad)
mov
inc
cmp
push
mov
mov
shr
push
xor
dec
jp
mov
sub
(bad)
pop
cmp
hlt
aad
xchg
sbb
rol
mov
push
les
test
aaa
add
add
cmp
mov
test
inc
pop
inc
inc
ror
arpl
aad
or
jmp
jp
mov
jmp
sahf
sub
and
outs
fldcw
(bad)
sar
cdq
and
(bad)
movs
in
lds
aad
imul
out
inc
xchg
jnp
fst
loope
mul
icebp
cli
cwde
fwait
sbb
int3
aad
adc
adc
dec
mov
mov
ret
test
lods
add
call
(bad)
xchg
dec
push
mov
shr
lds
mov
das
dec
loop
std
orps
add
add
jle
hlt
mov
sub
xor
dec
aad
add
scas
jecxz
push
enter
sbb
adc
int3
sub
dec
xchg
sub
cmp
add
ja
xlat
in
lods
cmp
lea
add
inc
mov
dec
in
iret
xor
pop
add
dec
or
jns
cmp
call
jmp
hlt
test
jbe
mov
int3
mov
jg
div
aam
mov
test
sub
cmps
pop
lods
push
sbb
loop
scas
into
ret
scas
mov
or
out
cwde
sub
adc
mov
mov
fwait
aam
add
stos
sub
(bad)
mov
cs
pop
fdivr
in
push
mov
xor
das
gs
fsub
or
in
ja
xchg
pop
or
out
and
and
shl
rol
cmp
(bad)
mov
push
sub
push
inc
push
xchg
in
(bad)
mov
push
ret
je
xor
cmp
dec
into
aam
xchg
inc
sbb
iret
fld
push
mov
dec
leave
test
pop
adc
sub
sub
cmc
je
movs
add
(bad)
je
jnp
and
ret
sbb
das
xchg
pop
mul
out
cmps
inc
out
and
inc
fdiv
sar
sbb
and
les
jmp
dec
(bad)
xchg
call
into
add
mov
retf
stc
cmps
or
(bad)
mov
ds
dec
adc
mov
fs
cmps
iret
mov
and
rcl
addr16
xchg
cmp
cmp
in
mov
or
(bad)
mov
xlat
or
mov
repz
mov
jg
sub
es
jge
into
mov
popa
push
or
(bad)
test
jae
dec
adc
cmps
pop
lods
(bad)
sbb
adc
test
cli
adc
int3
into
xchg
push
sbb
fisubr
pop
jecxz
adc
adc
pop
repz
and
fwait
and
dec
push
fild
push
js
sub
imul
jle
inc
in
test
inc
imul
mov
dec
push
mov
or
cmp
dec
call
dec
xor
repz
cmps
inc
sbb
mov
pop
mov
shr
xchg
jno
(bad)
data16
jae
inc
jnp
jl
fnstenv
xor
mov
retf
std
jb
cdq
lods
cwde
pop
add
out
or
or
ret
or
in
sub
adc
inc
(bad)
(bad)
mov
push
cmp
and
mov
mov
movs
xor
jp
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
push
rol
mov
push
mul
or
adc
or
sub
add
adc
sub
aam
push
jmp
sbb
inc
ret
pusha
fiadd
ror
daa
fdivr
cmp
sahf
jle
inc
out
xchg
sti
pop
out
sub
bound
inc
test
mov
or
push
ret
(bad)
lods
call
ins
stos
lods
repz
push
sbb
pop
test
lock
jmp
stos
push
daa
cmp
push
test
pop
call
push
scas
arpl
pop
jbe
enter
rcr
icebp
jmp
dec
add
clc
lock
push
movs
jg
and
sub
sbb
cmc
xchg
sub
sub
xchg
xchg
push
dec
inc
jecxz
scas
cli
inc
cmp
push
mov
sub
push
pop
xchg
leave
pop
sbb
push
dec
add
rcr
pop
iret
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
fs
adc
push
xor
pop
repz
and
movs
adc
push
std
push
inc
or
wbinvd
dec
clc
sti
jle
out
pop
cdq
inc
out
ficomp
mov
dec
pop
mov
adc
adc
and
fisubr
xor
push
mov
lds
jo
leave
lahf
mov
cmp
jnp
mov
jmp
pop
sub
xor
xchg
ret
in
pop
ret
mov
jae
shr
arpl
push
cli
jne
pusha
xchg
cmp
ins
cmc
push
push
icebp
xchg
pop
loope
cli
cwde
ret
xor
scas
loopne
or
cmp
mov
call
xchg
pop
inc
int
sub
arpl
xchg
or
mov
xor
adc
retf
lea
xchg
dec
push
mov
push
mov
adc
gs
add
in
aas
(bad)
mov
inc
int3
enter
fild
out
pop
daa
fdivr
jns
mov
xor
out
xchg
mov
lock
dec
movs
(bad)
rcl
aas
retf
xlat
mov
test
test
scas
fild
mov
les
not
adc
stc
cli
mov
sub
push
movs
inc
jmp
(bad)
ficom
ins
mov
out
xchg
data16
and
popf
and
jns
cmc
jbe
jmp
mov
lods
mov
and
enter
add
aaa
out
xchg
int
cmp
aam
out
push
sbb
sbb
mov
xchg
sub
mov
mov
jne
hlt
xor
push
inc
adc
or
adc
add
xchg
out
add
mov
add
fwait
call
das
mov
cmp
dec
pop
push
push
xor
mov
div
and
pop
fbstp
push
dec
cmp
enter
pop
jmp
mov
retf
mov
loope
sar
push
cmp
popa
cdq
add
shl
aad
inc
mov
mov
add
call
icebp
popa
mov
push
mov
imul
sti
dec
adc
push
mov
stos
ret
movs
cmpxchg8b
(bad)
into
add
mov
movs
mov
push
cmps
popa
mov
jle
or
xchg
lahf
outs
test
cld
sub
cmp
loope
or
jg
inc
cmp
daa
push
rcr
addr16
mov
jne
xchg
xor
and
cmps
mov
aaa
test
and
add
or
aam
mov
jmp
mov
push
mov
or
int3
push
cwde
or
or
and
mov
iret
mov
inc
pop
(bad)
dec
ins
es
or
out
jl
or
jmp
ficom
gs
int
mov
sbb
mov
xchg
cmp
pop
jmp
sbb
lds
fisub
jno
add
mov
mov
xchg
mov
xchg
pshufw
in
jb
fidivr
or
scas
lods
jecxz
xchg
mov
add
push
(bad)
cmp
jb
neg
jmp
ret
xlat
push
mov
jecxz
xor
mov
xchg
xchg
and
cmp
call
js
push
cmp
and
popf
mov
pop
sub
jp
push
xchg
cmp
mov
daa
cmc
inc
sub
sub
pop
clc
leave
xchg
push
and
lds
sbb
mov
adc
shr
rcl
es
retf
and
adc
fild
pop
xlat
and
jle
into
dec
xchg
inc
jecxz
adc
mov
ror
nop
in
sbb
data16
and
repnz
cwde
mov
lea
xchg
mov
xor
and
sub
neg
xor
out
mov
mov
adc
jl
outs
fiadd
ins
ins
mov
xchg
xor
mov
adc
add
xchg
sbb
mov
mov
fbld
xchg
sbb
ins
cmc
dec
xor
xchg
inc
imul
sbb
in
inc
cmps
sub
jb
lahf
mov
in
mov
mov
mov
jle
imul
fidiv
ss
imul
sbb
adc
popa
add
add
jp
or
pop
mov
mov
mov
lods
mov
loopne
add
scas
loopne
(bad)
loopne
in
scas
jbe
inc
push
into
mov
push
push
sbb
or
dec
into
out
jp
shl
pop
repnz
imul
dec
pop
push
loop
in
cmps
adc
adc
adc
shr
mov
pushf
jno
cdq
les
mov
fiadd
add
sar
lea
jmp
mov
sub
(bad)
out
jo
inc
std
push
pop
mov
push
inc
jo
lods
mov
int
push
test
(bad)
push
add
stc
jne
in
or
ds
fisttp
cmp
mov
add
adc
cmc
ret
sar
xor
push
mov
sub
bound
(bad)
mov
outs
jnp
pop
and
sub
add
sub
sub
and
test
(bad)
cld
mov
pop
cmps
mov
test
pop
lods
test
mov
push
in
retf
add
shl
inc
scas
jl
and
add
retf
call
xchg
lahf
dec
in
inc
adc
dec
push
pop
int
retf
push
sbb
inc
cdq
jg
inc
nop
mov
jbe
movs
call
inc
jne
add
add
call
jae
cmp
sar
loope
cmp
pop
cli
daa
dec
mov
mov
(bad)
icebp
push
jle
pop
fld1
dec
xchg
add
inc
retf
retf
bound
ds
lds
sbb
cmps
inc
mul
in
mov
out
scas
(bad)
ins
add
jns
repnz
fstp
fsub
clc
push
sub
pop
inc
or
or
pop
mov
inc
cmp
out
and
pop
out
xchg
rcr
hlt
or
into
sbb
push
or
out
shl
add
xchg
and
adc
mov
cld
int
call
out
xchg
outs
ficom
repz
hlt
repnz
clc
fnsave
xchg
pushf
les
cmc
mov
mov
xor
pop
sti
xchg
lods
movs
fild
mov
xor
xchg
sahf
and
add
(bad)
jb
nop
popa
jmp
ins
mov
iret
sub
jne
arpl
int3
imul
stos
out
out
imul
pop
fidiv
pop
xor
std
nop
(bad)
push
sbb
in
cmps
cld
pop
ins
sub
repnz
jne
movs
mov
mov
mov
adc
inc
add
cs
mov
fld
loope
retf
inc
pop
adc
paddsw
fsubr
loop
addr16
(bad)
pusha
xchg
out
pop
mov
push
push
das
add
xlat
add
aad
fstp
fimul
add
dec
xor
cld
retf
pushf
jp
inc
cmc
mov
mov
and
xchg
(bad)
fldenv
xor
shl
mov
je
xlat
cmps
jge
mov
pop
cmc
and
cmp
ins
mov
xor
loope
inc
sbb
(bad)
ins
add
mov
ja
mov
mov
add
enter
ret
jge
sti
mov
addr16
dec
fwait
(bad)
addr16
cmp
js
sub
push
call
out
jle
or
jmp
jo
add
gs
scas
jmp
es
pop
push
lods
mov
loope
or
cmp
sub
fwait
sbb
sbb
mov
xlat
iret
stc
or
into
xor
xchg
jbe
push
add
cmp
sub
jmp
push
ror
sbb
(bad)
or
sub
(bad)
popa
popf
shld
movs
jp
cld
cmp
iret
sar
hlt
ds
out
jecxz
rcl
jmp
dec
mov
pop
push
mov
dec
stos
sar
stc
mov
sub
neg
adc
dec
add
scas
dec
jl
jnp
(bad)
xor
rcr
lock
xchg
sbb
test
mov
inc
fidiv
cmps
xor
and
jle
sbb
aad
out
call
nop
loopne
and
jcxz
shl
xor
dec
fst
retf
out
or
xchg
in
rol
iret
inc
ds
call
cmp
cli
stc
sub
mov
mov
or
push
pop
scas
repz
in
ficomp
iret
xchg
dec
shr
pop
fstp
and
out
or
mov
stc
adc
sar
pop
add
lods
(bad)
xlat
enter
xor
test
lods
or
jo
mov
adc
or
pop
imul
out
lock
lahf
sub
dec
cmp
pop
adc
out
ss
jg
sbb
mov
pop
fs
mov
(bad)
nop
inc
js
arpl
iret
outs
mov
cmp
mov
scas
icebp
push
sub
xchg
xor
pop
stc
push
xor
loope
xchg
jae
fwait
test
pop
and
es
add
add
test
mov
xlat
inc
imul
test
stc
mov
retf
dec
leave
je
sub
es
int
rcl
lods
cmp
stos
xor
test
pop
sub
xor
outs
mov
cmp
cmc
cmp
pop
pop
out
push
repz
std
jo
loopne
or
(bad)
js
mov
xchg
push
jmp
mov
stos
dec
or
stos
jmp
xor
aad
stos
clc
jo
cmp
lock
push
sbb
pop
lds
imul
mov
in
and
cld
inc
or
or
push
push
pop
js
leave
mov
cmps
out
mov
push
mov
lea
add
jg
mov
retf
nop
adc
cmp
jp
out
sub
pop
jnp
mov
into
aad
push
sub
lods
sti
leave
push
ins
arpl
sahf
leave
pop
mov
pushf
xor
and
in
mov
jle
in
push
adc
enter
imul
jno
(bad)
sub
or
into
leave
xchg
xor
dec
xor
into
outs
(bad)
in
adc
inc
fs
jo
adc
add
mov
fcom
and
pop
in
sub
sub
enter
push
iret
(bad)
mov
jne
and
add
int
lock
adc
jl
push
lock
mov
pushf
add
stos
hlt
sub
inc
sub
or
adc
rcl
cmp
out
xchg
mov
sub
fdiv
push
adc
dec
mov
ins
xchg
cli
mov
jo
movs
or
in
sbb
data16
out
jns
push
stos
mov
push
int
cld
push
inc
cdq
mov
hlt
mov
dec
and
add
rol
lods
mov
inc
dec
lds
xlat
sub
xchg
pop
out
sbb
add
inc
rcr
cld
cmp
movs
pop
bt
mov
sbb
lea
xor
movs
stos
and
call
add
into
cmp
retf
loopne
pop
cmp
idiv
cmps
bound
xchg
sub
adc
push
inc
test
xchg
fldenv
div
rcl
lods
xchg
push
ror
jbe
movs
mov
stos
repnz
push
fbstp
push
movs
fdivp
xchg
mov
stos
aas
push
es
lods
and
push
neg
dec
adc
mov
mov
(bad)
xchg
jno
fwait
adc
cmp
lods
push
mov
push
out
(bad)
bound
mov
rol
sub
mov
add
add
adc
cli
mov
pop
cmp
ss
xchg
push
(bad)
movs
xchg
xor
pop
dec
mov
mov
inc
outs
retf
inc
xor
movs
or
mov
je
pop
das
adc
cmp
push
repnz
ret
loope
push
rol
and
lods
or
in
jne
pop
or
xor
add
push
stc
mov
mov
mov
(bad)
pop
ins
sbb
(bad)
jle
outs
aam
mov
icebp
pop
fisubr
ror
(bad)
test
rol
xor
pop
sahf
hlt
rcl
fwait
outs
out
loop
cmps
inc
jne
pinsrw
push
popf
fist
xor
cli
xchg
mov
and
repz
xor
pop
mov
push
scas
push
retf
mov
retf
inc
js
inc
lea
cmps
sbb
mov
leave
out
ret
bound
movs
sbb
jge
sbb
loop
jl
or
imul
ret
fbld
jb
scas
fwait
push
xchg
mov
push
stos
mov
lds
dec
add
stos
and
xor
push
and
out
mov
cmp
sub
or
mov
xor
aaa
jg
dec
scas
bnd
sbb
inc
fisttp
loopne
cmp
pop
cmp
(bad)
popa
popf
xor
out
xchg
inc
sahf
or
push
push
mov
cs
jo
daa
(bad)
ret
cmp
lock
addr16
jmp
dec
sahf
jmp
stos
pop
or
out
sti
or
and
jg
adc
es
imul
movs
push
xor
loop
sbb
lds
cmp
dec
vminss
xlat
inc
mov
call
and
mov
outs
div
mov
sbb
pop
sub
xor
call
es
or
xchg
sbb
add
jg
cli
cmp
push
repnz
ret
shl
ins
movs
mov
test
addr16
out
movs
sbb
repnz
out
movs
add
ss
cmps
je
pop
enter
push
push
sub
sub
push
cmc
stc
adc
mov
iret
fistp
int
and
in
(bad)
push
cwde
mov
add
movs
cmc
es
jp
fist
fld
jmp
ds
cmp
and
(bad)
cmp
pop
test
dec
bound
fdivr
addr16
pop
(bad)
std
push
xchg
sbb
(bad)
ret
push
push
mov
sub
lds
ss
nop
inc
stc
ss
lods
ds
sar
loopne
cmp
jb
mov
sbb
mov
and
or
es
mov
shr
mov
sub
sub
jmp
fsubr
or
lahf
jge
adc
xor
sbb
repz
pop
adc
fcmovnb
ja
ins
ficomp
(bad)
sbb
adc
call
popf
inc
fcmovb
popf
cwde
pop
icebp
xor
adc
fcmovbe
fucomi
aaa
xor
jo
aas
(bad)
les
dec
cmp
jp
mov
xor
push
imul
leave
ret
scas
xor
fisttp
loopne
push
mov
mov
addr16
dec
cmps
ret
mov
rcl
ror
fwait
adc
out
push
mov
push
lods
lods
icebp
ja
sar
popa
stos
mov
aas
dec
shl
push
ret
mov
cs
je
jmp
cs
and
xchg
ss
pop
xlat
nop
scas
loop
push
jmp
inc
adc
mov
jnp
dec
cmp
out
daa
int
popf
rol
test
retf
cs
mov
add
in
jge
sbb
adc
add
cmp
adc
xchg
inc
fnstsw
push
pop
ret
sbb
cmp
popf
or
inc
repnz
xchg
inc
mov
stos
push
adc
mov
sbb
pop
gs
and
lds
xor
jne
mov
cmp
pop
dec
in
xchg
inc
mov
out
scas
int
jbe
movq
cmps
mov
fwait
mov
(bad)
push
push
call
xchg
mov
push
inc
arpl
loope
mov
pop
mov
test
jb
in
imul
mov
mov
dec
fmul
xor
sub
xchg
nop
pop
push
imul
pop
pop
(bad)
and
or
cmp
call
sar
and
pop
(bad)
push
mov
sub
add
ja
mov
fstp
test
into
in
adc
adc
ins
frstor
xor
push
out
maskmovq
not
mov
sbb
test
jl
out
pop
(bad)
jb
(bad)
pop
lahf
mov
cmc
mov
pop
xchg
fst
xor
jmp
pop
mov
out
lds
and
stc
les
xchg
jns
or
out
xor
push
mov
jb
js
or
(bad)
lods
js
out
jecxz
push
call
sub
adc
or
sub
add
es
sbb
inc
dec
mov
add
dec
jb
pop
nop
lds
sbb
in
inc
fcmovnb
out
pop
pop
stc
lods
pushf
inc
jg
repz
pop
ss
inc
cmp
push
sbb
mov
jb
add
sub
jp
fst
push
lods
adc
mov
ins
fucom
xchg
icebp
add
(bad)
out
pavgb
cmp
jb
cli
out
ret
xchg
mov
pop
outs
ss
ss
mov
sar
fst
inc
adc
fs
shl
xchg
aaa
jne
pusha
mov
test
mov
(bad)
aas
push
and
ins
xor
loope
jo
jnp
imul
inc
adc
arpl
ss
or
push
lods
out
in
sub
sub
shr
mov
mov
and
pop
fist
(bad)
mov
push
addr16
imul
mov
inc
sbb
test
dec
xor
mov
jle
cmp
jg
mov
mov
call
rol
mov
(bad)
cwde
xor
pop
inc
inc
jp
or
out
in
movs
push
jge
push
xlat
xchg
dec
mov
fistp
outs
mov
nop
push
jmp
mov
gs
mov
mov
jle
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
add
add
call
loop
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
add
jb
test
adc
or
xchg
cmp
pop
(bad)
daa
xchg
dec
inc
xchg
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
lods
in
adc
ins
fs
jg
fld
retf
jbe
aaa
ss
jmp
ins
dec
test
or
xchg
inc
rcr
mov
int
clc
mov
jle
jg
cdq
inc
mov
mov
add
movs
jmp
inc
icebp
pop
pop
pushf
js
jns
cmp
cli
push
mov
dec
dec
inc
cwde
mov
test
sub
add
xor
mov
imul
ja
lea
icebp
out
fdivp
ds
aam
adc
push
fxch
pop
mov
sahf
outs
inc
cdq
repnz
pop
xchg
sti
in
jne
push
mov
je
ja
int3
or
jb
sbb
and
and
xchg
rcr
pop
into
mov
dec
mov
loope
jge
stos
(bad)
(bad)
into
push
in
adc
jge
addr16
ja
fld
cdq
retf
ss
mov
lods
and
jge
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cwde
push
mov
mov
add
mov
xchg
aaa
jne
pusha
mov
test
into
mov
(bad)
aas
pop
dec
adc
xchg
and
das
(bad)
jb
fiadd
or
shl
mov
arpl
push
fcomi
cmp
adc
xchg
push
mov
xlat
push
xlat
(bad)
dec
cmp
sbb
xchg
pop
mov
jecxz
jns
sbb
(bad)
and
push
arpl
mov
fimul
inc
mov
addr16
outs
xchg
rcr
fcomp
cmps
cmps
test
rcr
mov
xor
dec
xor
out
outs
popf
ins
xor
jl
inc
pop
ja
std
add
xor
je
mov
data16
pop
xor
jns
dec
mov
call
sti
or
inc
push
pop
mov
int
mov
inc
inc
mov
mov
retf
adc
jmp
inc
jmp
ss
add
fldcw
(bad)
aas
pop
dec
xor
and
add
add
or
or
push
jbe
mov
arpl
sar
idiv
ins
hlt
xchg
enter
xchg
or
push
push
push
lock
cmp
cwde
mov
push
nop
in
xchg
mov
repz
sbb
cmp
shr
fisub
mov
rol
bound
xor
fimul
mov
add
xchg
rcr
sahf
pop
fbld
fwait
leave
test
loope
jg
mov
(bad)
outs
(bad)
in
loop
ins
addr16
ja
aad
dec
mov
push
cwde
ret
jle
xor
mov
and
pop
test
outs
dec
mov
or
xor
pushf
inc
rcr
mov
int
mov
jge
cdq
push
mov
mov
or
cmps
jmp
iret
mov
test
mov
(bad)
aaa
pop
dec
mov
stos
xchg
sub
sub
push
add
sbb
movs
shl
mov
popa
lods
cmp
idiv
ins
aam
fcom
add
push
clc
inc
cmp
adc
sub
pop
cmp
jnp
pop
adc
push
push
mul
mov
sti
inc
push
bound
mov
fimul
mov
addr16
arpl
iret
daa
cmps
sub
xchg
dec
mov
loope
jge
mov
iret
dec
or
fs
ja
pop
test
add
div
mov
mov
js
jns
dec
test
mov
pop
stos
je
stos
sahf
inc
rcr
mov
dec
mov
mov
jle
jg
cdq
push
xor
jmp
sbb
push
movs
jmp
inc
enter
loopne
jno
test
cmp
(bad)
mov
fcmovnb
dec
jnp
xchg
and
in
scas
mov
push
pop
push
mov
sbb
sub
icebp
adc
inc
mov
idiv
ins
aam
fcom
daa
inc
(bad)
aad
push
lock
sbb
push
nop
in
xchg
pop
mov
arpl
cmp
sub
push
push
jg
aaa
div
push
bound
mov
fimul
or
inc
in
jmp
push
pop
aas
pop
dec
daa
cmps
or
sbb
imul
dec
xor
into
outs
or
fs
imul
adc
xor
out
in
pop
sub
js
dec
test
or
out
or
xor
sahf
dec
rcr
mov
(bad)
mov
cmp
jg
fist
mov
js
aad
add
movs
loope
mov
jne
pusha
mov
lds
mov
stc
jmp
add
aas
pop
dec
adc
int3
das
mov
fiadd
adc
lods
shl
mov
bound
push
fcomip
cmp
aam
fcom
pop
ret
xlat
push
repnz
cmp
pop
shl
sub
jecxz
jge
mov
ret
mov
push
pop
push
bound
inc
push
pusha
cmp
out
inc
cmp
in
imul
cmps
sub
fwait
dec
mov
popf
mov
stos
stos
(bad)
into
outs
lea
pop
ja
fld
leave
jbe
ss
out
(bad)
pop
pusha
pop
mov
ins
dec
mov
or
adc
fiadd
icebp
pop
mov
int
test
mov
jg
cdq
inc
mov
loope
jmp
cmp
test
mov
adc
mov
(bad)
aas
sbb
inc
ins
imul
scas
bound
call
nop
cmps
mov
and
push
fbstp
fdiv
pop
ret
xlat
dec
ror
in
sbb
sub
pop
cwde
mov
cmp
adc
(bad)
and
bound
mov
cli
pushf
jae
test
pop
retf
jp
movs
lds
xchg
pop
mov
sub
mov
dec
lea
mov
in
cs
adc
jl
ja
aaa
sub
adc
mov
test
ins
outs
test
sub
test
inc
rcr
mov
cmp
mov
ja
popf
push
test
les
aad
add
movs
jmp
inc
leave
aaa
jne
bound
mov
ret
cmp
(bad)
jnp
xchg
es
das
mov
cli
add
or
retf
scas
rol
mov
imul
(bad)
sbb
push
clc
xchg
sbb
ret
fild
lock
cmp
sbb
bound
in
mov
mov
jecxz
jg
sbb
push
dec
fdivr
and
bound
mov
fimul
stos
jp
outs
vpunpckhwd
out
daa
cmps
and
cdq
inc
mov
in
jne
scas
(bad)
ror
lods
in
adc
jl
gs
ja
fisttp
retf
je
push
ss
mov
ins
dec
test
or
test
inc
rcr
fidivr
clc
mov
adc
rcl
adc
adc
lds
add
jno
pusha
cmps
jne
add
mov
(bad)
aas
dec
dec
adc
inc
dec
jnp
xchg
xor
int3
das
sahf
jb
ficom
dec
adc
iret
lods
shl
icebp
pop
adc
bnd
ins
aam
fcom
pop
mov
xlat
push
loopne
sub
or
jp
nop
in
xchg
pop
enter
jge
test
pop
inc
push
mov
inc
push
jb
movs
(bad)
fcmove
and
movs
xor
push
addr16
sub
retf
aaa
out
pop
push
fwait
dec
mov
loope
ins
mov
les
loopne
fs
pop
ja
fld
(bad)
fs
mov
push
mov
(bad)
call
pop
mov
leave
movs
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
test
test
lahf
stc
jmp
(bad)
aas
pop
dec
adc
xchg
and
mov
fiadd
or
sbb
lods
shl
pop
jae
adc
loop
push
fcomip
cmp
push
fcom
test
(bad)
push
xlat
push
lock
cmp
sbb
scas
xchg
pop
mov
loop
jge
sbb
push
push
loope
mov
aas
rcl
mov
fimul
mov
in
in
pop
rcr
pop
iret
daa
cmps
sub
fwait
dec
mov
loope
jmp
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
add
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
scas
xchg
pop
fidivr
jae
sahf
sbb
jle
mov
jg
push
bound
mov
movs
add
jp
in
in
push
rcr
fcmovne
daa
dec
stos
pop
inc
lahf
int
imul
leave
xor
in
inc
fs
add
jbe
test
rcr
ss
and
js
std
ins
dec
jle
or
xchg
cmc
sti
and
inc
rol
cmp
cmp
xor
cdq
pop
and
mov
add
call
inc
addr16
mov
fimul
lahf
pop
outs
pop
(bad)
sub
dec
cmp
xchg
and
mov
mov
sbb
fist
cmps
es
adc
arpl
push
mov
cmp
xchg
fst
add
in
(bad)
dec
cmp
sbb
sub
pop
sub
jae
fwait
sbb
push
cmps
mov
add
push
bound
xor
ficomp
mov
loopne
in
adc
pop
mov
scas
pop
inc
fwait
dec
mov
loope
cmc
mov
les
jmp
jge
sbb
dec
mov
rcr
ss
and
js
icebp
ins
dec
and
or
sbb
cmc
sti
adc
shl
mov
leave
jle
not
push
mov
mov
add
movs
jmp
or
dec
repnz
jmp
or
fld
and
cwde
mov
mov
push
mov
loope
mov
outs
mov
(bad)
cmps
pop
mov
pop
out
div
jbe
cmp
mov
cmp
lods
outs
stc
add
inc
nop
jecxz
push
jb
lock
push
(bad)
and
test
fst
movs
bound
jmp
xchg
nop
xor
sub
sub
retf
xchg
push
cmp
(bad)
mov
sbb
adc
mov
sub
int
sti
mov
rol
pop
rcl
ins
dec
in
imul
jecxz
hlt
sti
data16
and
or
add
add
xor
aad
mov
adc
dec
sahf
cmps
push
in
sbb
mov
xor
mov
loopne
mov
repz
stos
das
mov
xor
mul
mov
xlat
pop
add
lods
outs
jnp
ja
enter
(bad)
sub
adc
mov
loop
ss
mov
add
mov
mov
mov
cdq
es
loope
loopne
aas
inc
popf
xchg
and
movs
leave
inc
cmp
push
push
stos
dec
ficom
dec
sti
cdq
pushf
in
pop
movs
xor
adc
or
mov
(bad)
sbb
daa
loope
sub
jmp
(bad)
test
mov
nop
stos
add
mov
addr16
xor
mov
cmp
pop
inc
lds
dec
sbb
(bad)
dec
out
or
push
repnz
or
add
mov
mov
pop
cmp
push
icebp
xor
out
fisub
dec
adc
sbb
mov
add
adc
push
test
cmp
shr
(bad)
dec
pop
mov
jmp
mov
mov
add
cli
dec
rcr
adc
aam
xchg
in
out
jg
cmps
movs
xlat
push
lock
jnp
sbb
and
cld
jecxz
cmp
test
pop
and
adc
mov
pusha
mov
lahf
xor
adc
(bad)
mov
xor
movs
jbe
in
imul
xchg
sub
pop
iret
daa
loopne
xor
clc
mov
xlat
out
sub
stos
es
xor
and
test
cmp
ja
mov
in
sbb
adc
gs
out
or
push
repnz
cwde
jno
mov
xor
adc
adc
adc
data16
dec
xchg
xchg
pushf
add
lods
icebp
and
rcr
jmp
nop
test
aas
pop
sbb
out
xor
or
cld
push
xor
pop
jmp
dec
mov
jo
sbb
jmp
jo
push
(bad)
sti
push
test
mov
jmp
ret
mov
mov
in
push
loop
dec
push
cmp
sbb
and
mov
and
xchg
inc
xor
in
es
sub
sbb
push
repnz
aad
xor
sub
outs
retf
lods
adc
adc
adc
call
std
mov
jp
icebp
xchg
fisttp
aam
ins
dec
in
loop
into
mov
add
stc
xchg
sub
mov
add
test
push
aas
sbb
cmp
fadd
cwde
aad
add
mov
xor
and
fcmove
mov
and
or
pop
pop
add
arpl
sbb
push
ins
pop
lea
out
mov
loop
ss
pop
mov
or
xor
push
cmc
adc
nop
in
les
scas
xchg
sub
cmps
retf
pop
push
and
cmps
sub
add
call
or
pop
dec
and
xchg
sbb
mov
push
cmps
sub
sbb
in
(bad)
lea
loop
(bad)
mov
data16
sbb
sub
cmc
xor
mov
xrelease
mov
jns
dec
out
(bad)
jle
test
out
mov
adc
xor
pop
sub
push
in
cmp
mov
aam
cmc
pop
cdq
mov
fwait
jns
lds
into
add
movs
into
jmp
test
mov
not
repz
sbb
mov
ins
jne
aad
add
adc
arpl
std
dec
mov
and
bound
inc
lock
ret
mov
ret
push
nop
mov
in
cld
mov
out
mov
inc
daa
adc
sub
(bad)
and
add
(bad)
(bad)
inc
dec
(bad)
pop
sub
sbb
addr16
daa
cli
mov
jmp
stos
push
neg
daa
repnz
repnz
pop
adc
into
mov
push
mov
sbb
mov
sbb
ds
test
and
mov
into
mov
pop
imul
int
dec
enter
push
sar
cwde
mov
jp
sbb
scas
sbb
pop
jp
and
jg
cmp
aad
ins
mov
mov
(bad)
cmps
pop
adc
adc
jno
cmps
shr
pushf
cwde
xor
push
cmp
sub
test
fiadd
jnp
jp
lods
rcl
jb
or
std
cmp
mov
or
bound
or
push
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
fld
retf
jbe
ss
add
add
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
inc
sub
sub
mov
fld
retf
jbe
ss
test
ins
dec
test
or
xchg
inc
rcr
mov
int
mov
jg
cdq
push
mov
mov
add
movs
jmp
inc
leave
aaa
jne
pusha
mov
test
mov
(bad)
aas
pop
dec
adc
xchg
and
das
mov
fiadd
or
sbb
lods
shl
mov
arpl
push
fcomip
cmp
push
fcom
pop
ret
xlat
push
lock
cmp
sbb
sub
pop
mov
jecxz
jge
sbb
push
push
(bad)
and
bound
mov
fimul
mov
addr16
imul
daa
cmps
sub
fwait
dec
mov
loope
jge
stos
(bad)
(bad)
into
outs
(bad)
in
adc
jl
addr16
ja
arpl
push
add
add
push
jge
call
paddd
psubsb
push
psllw
jmp
aam
dec
xchg
cld
aaa
jnp
jno
mov
imul
psubb
psubsb
psrlw
jmp
ds
iret
cmp
lahf
xchg
shl
xor
cli
pmulhw
psubusb
psrad
punpckhbw
push
punpcklwd
por
punpckhwd
paddsb
xor
psrad
punpcklwd
pcmpgtw
jmp
movs
fistp
push
nop
int3
pop
inc
jl
pop
paddw
psllq
pandn
pcmpgtb
ret
hlt
push
ret
mov
in
push
fcom
jle
(bad)
loope
shr
das
popa
enter
(bad)
jbe
movs
sti
mov
dec
retf
add
pslld
pand
psrlw
sub
pcmpeqd
pcmpgtw
pmaddwd
psubusb
mov
pcmpeqd
pmaddwd
punpckhbw
pand
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
psrld
packuswb
pandn
punpckldq
or
psrlq
paddsw
psubsw
psllq
test
jne
paddusw
punpcklbw
paddsb
jmp
xor
test
and
push
sbb
dec
inc
pop
shl
push
stos
jmp
repz
packsswb
packssdw
pandn
jmp
fcom
dec
mov
(bad)
cmp
psubusb
pcmpeqw
psubb
paddw
pop
pcmpeqd
jmp
cmp
sbb
in
shl
mov
add
popa
out
pcmpgtw
jmp
push
xchg
retf
push
inc
jl
lock
paddw
jmp
psllq
pandn
pcmpgtb
pslld
pand
psrlw
pcmpeqd
push
pcmpeqb
paddd
paddb
pcmpeqd
pop
psubd
movq
por
psllw
call
pmullw
pcmpeqb
paddd
paddb
push
pcmpeqd
psubd
movq
por
pop
psllw
pmullw
pcmpeqb
paddd
paddb
pcmpeqd
psubd
movq
bswap
por
psllw
pmullw
pcmpeqb
rdtsc
paddd
paddb
pcmpeqd
psubd
fld
movq
por
psllw
pmullw
fnop
pcmpeqb
paddd
paddb
pcmpeqd
loop
psubd
movq
por
psllw
jmp
pmullw
pcmpeqb
paddd
paddb
pop
pcmpeqd
psubd
movq
por
adc
psllw
pmullw
pcmpeqb
paddd
test
jne
paddb
pcmpeqd
psubd
movq
por
psllw
pmullw
pcmpeqb
inc
paddd
paddb
pcmpeqd
psubd
push
movq
por
psllw
pmullw
xor
pcmpeqb
paddd
paddb
pcmpeqd
pop
psubd
movq
por
psllw
cmp
jne
pmullw
pcmpeqb
paddd
paddb
mov
pcmpeqd
psubd
movq
por
push
psllw
pmullw
pcmpeqb
paddd
pop
paddb
pcmpeqd
psubd
movq
xor
por
psllw
pmullw
pcmpeqb
dec
paddd
paddb
pcmpeqd
psubd
dec
movq
por
psllw
pmullw
dec
pcmpeqb
paddd
paddb
pcmpeqd
dec
psrad
punpckhbw
pcmpgtb
psraw
xor
pcmpeqd
psrlq
pcmpeqb
punpckhbw
call
paddusw
punpckhwd
packuswb
psubusb
push
punpckhwd
psubsw
punpcklbw
paddw
cmp
jne
mov
packsswb
pmullw
jmp
push
mov
(bad)
xor
or
leave
add
jp
add
packuswb
psubusb
punpckhwd
psubsw
mov
punpcklbw
paddw
packsswb
pmullw
add
jmp
jl
call
repz
add
je
stc
xor
fst
packuswb
psubusb
call
punpckhwd
psubsw
punpcklbw
paddw
mov
packsswb
pmullw
jmp
es
xchg
int
ds
jmp
and
enter
movs
fcom
add
(bad)
fsub
punpckhwd
psubsw
mov
punpcklbw
paddw
packsswb
pmullw
sub
jmp
lods
loope
dec
xor
dec
jl
out
push
packuswb
psubusb
push
punpckhwd
psubsw
punpcklbw
paddw
push
packsswb
pmullw
jmp
scas
out
push
mov
(bad)
xor
or
jge
in
and
packuswb
psubusb
punpckhwd
psubsw
push
punpcklbw
paddw
packsswb
pmullw
push
jmp
sub
cdq
into
add
jo
jmp
sbb
sar
addr16
packuswb
psubusb
push
punpckhwd
psubsw
punpcklbw
paddw
push
packsswb
pmullw
jmp
bound
push
mov
or
inc
jns
jmp
pop
xchg
retf
add
(bad)
fsub
punpckhwd
psubsw
mov
punpcklbw
paddw
packsswb
pmullw
add
jmp
cli
xor
movs
fist
dec
sub
or
mov
and
packuswb
psubusb
push
punpckhwd
psubsw
punpcklbw
paddw
sub
packsswb
pmullw
jmp
xchg
iret
push
ds
in
jmp
js
jmp
jbe
packuswb
psubusb
punpckhwd
psubsb
push
psrld
packsswb
psllw
psllw
call
paddsw
punpcklbw
pmullw
psubusb
mov
paddsw
paddw
punpcklbw
punpckhdq
mov
pand
psubb
pxor
psllw
add
pmaddwd
psubsw
packuswb
pmulhw
mov
psubd
paddsw
punpcklbw
pmullw
add
psubusb
paddsw
paddw
punpcklbw
call
punpckhdq
pand
psubb
pxor
push
psllw
pmaddwd
psubsw
packuswb
push
pmulhw
psubd
paddsw
punpcklbw
call
pmullw
psubusb
paddsw
paddw
punpcklbw
punpckhdq
pand
psubb
pxor
psllw
pmaddwd
psubsw
packuswb
pmulhw
psubd
paddsw
punpcklbw
pmullw
psubusb
paddsw
paddw
punpcklbw
punpckhdq
pand
psubb
pxor
psllw
pmaddwd
mov
psubsw
packuswb
pmulhw
psubd
add
paddsw
punpcklbw
pmullw
psubusb
mov
paddsw
paddw
punpcklbw
punpckhdq
add
pand
psubb
pxor
psllw
call
pmaddwd
psubsw
packuswb
pmulhw
jmp
psubd
paddsw
punpcklbw
pmullw
pop
psubusb
paddsw
paddw
punpcklbw
push
punpckhdq
pand
psubb
pxor
push
psllw
pmaddwd
psubsw
packuswb
push
pmulhw
psubd
paddsw
pcmpgtb
call
psubsb
pcmpeqb
paddusb
pslld
pop
psubsw
psubd
pcmpgtb
psubsb
cmp
jl
pcmpeqb
paddusb
pslld
psubsw
mov
psubd
pcmpgtb
psubsb
pcmpeqb
sub
paddusb
pslld
psubsw
psubd
mov
pcmpgtb
psubsb
pcmpeqb
paddusb
sub
pslld
psubsw
psubd
pcmpgtb
call
psubsb
pcmpeqb
paddusb
pslld
xor
psubsw
psubd
pcmpgtb
psubsb
xor
pcmpeqb
paddusb
pslld
psubsw
add
psubd
pcmpgtb
psubsb
pcmpeqb
push
paddusb
pslld
psubsw
psubd
mov
pcmpgtb
psubsb
pcmpeqb
paddusb
push
pslld
psubsw
psubd
pcmpgtb
push
psubsb
pcmpeqb
paddusb
pslld
push
psubsw
psubd
pcmpgtb
psubsb
call
pcmpeqb
paddusb
pslld
psubsw
jmp
psubd
pcmpgtb
psubsb
pcmpeqb
pop
paddusb
pslld
psubsw
psubd
add
pcmpgtb
psubsb
pcmpeqb
paddusb
push
pslld
psubsw
psubd
pcmpgtb
pop
psubsb
pcmpeqb
paddusb
pslld
call
psubsw
psubd
pcmpgtb
psubsb
cmp
jne
pcmpeqb
paddusb
pslld
psubsw
mov
psubd
pcmpgtb
psubsb
pcmpeqb
jmp
paddw
pxor
packsswb
pmaddwd
and
cwde
and
pop
fcomp
pusha
mov
push
mov
ret
sbb
cmp
fwait
aad
xchg
sahf
int
sub
or
jo
pop
push
ins
and
mov
(bad)
dec
in
fisub
fsubr
psllq
pxor
mov
paddw
pslld
paddsb
psubusb
mov
pcmpeqw
psrld
pmullw
psubusb
inc
psubusb
paddusb
por
psubsb
mov
movq
punpckhwd
pcmpgtw
psrlq
mov
pmullw
packssdw
pslld
psubusb
ret
xchg
cmp
inc
movs
jne
mov
ficomp
mov
cmps
ins
popa
inc
popf
mov
scas
loop
punpcklbw
pmulhw
punpckhwd
pslld
mov
psubd
psrld
pcmpeqb
paddusb
push
paddb
packuswb
paddusw
psubw
pop
psubd
psrld
pcmpeqb
paddusb
mov
paddb
packuswb
paddusw
psubw
mov
psubd
psrld
pcmpeqb
paddusb
push
paddb
packuswb
paddusw
psubw
mov
psubd
psrld
pcmpeqb
paddusb
mov
paddb
packuswb
paddusw
psubw
psubd
psrld
pcmpeqb
paddusb
cmp
jne
paddb
packuswb
paddusw
psubw
psubd
psrld
pcmpeqb
paddusb
cmp
jne
paddb
packuswb
paddusw
psubw
pop
psubd
psrld
pcmpeqb
paddusb
mov
paddb
packuswb
paddusw
psubw
mov
psubd
psrld
pcmpeqb
paddusb
mov
paddb
packuswb
paddusw
psubw
add
psubd
psrld
pcmpeqb
paddusb
mov
paddb
packuswb
paddusw
psubw
mov
psubd
psrld
pcmpeqb
paddusb
add
pslld
psubusb
pmullw
psraw
mov
psrad
jmp
daa
pusha
cdq
ror
inc
jnp
jmp
pcmpgtw
psubd
add
punpckhbw
psrlq
paddb
pmaddwd
lods
pcmpgtb
pslld
jmp
mov
cld
xor
movs
fst
dec
mov
gs
shl
cli
loope
punpckhbw
psrlq
paddb
add
pmaddwd
pcmpgtb
pslld
jmp
mov
stc
xor
(bad)
push
inc
jge
sbb
gs
psubd
punpckhbw
psrlq
cmp
jne
paddb
pmaddwd
pcmpgtb
pslld
mov
jmp
push
outs
movs
fstp
pcmpgtw
psubd
punpckhbw
cmp
jne
psrlq
paddb
pmaddwd
pcmpgtb
mov
pslld
jmp
mov
cli
xor
fcom
dec
and
cli
loope
(bad)
push
jmp
cmc
hlt
push
pcmpgtb
pslld
jmp
mov
iret
or
jl
pcmpgtw
push
psubd
punpckhbw
psrlq
paddb
push
pmaddwd
pcmpgtb
pslld
jmp
and
xchg
int
cmp
push
pcmpgtw
psubd
punpckhbw
psrlq
push
paddb
pmaddwd
pcmpgtb
pslld
push
jmp
repz
ror
aas
jbe
out
pcmpgtw
psubd
punpckhbw
push
psrlq
paddb
pmaddwd
pcmpgtb
push
pslld
jmp
and
enter
test
gs
psubd
call
punpckhbw
psrlq
paddb
pmaddwd
add
pcmpgtb
psrld
psubd
psubsb
ret
es
call
lds
mov
xor
shr
je
lea
cmps
mov
pop
xchg
sub
cdq
fst
mov
sub
mov
stos
gs
mov
dec
mov
xchg
cmp
xchg
shl
xor
cli
std
hlt
push
ret
mov
in
push
fcom
jle
(bad)
inc
shr
das
popa
enter
(bad)
jbe
movs
sti
mov
dec
retf
add
aas
xor
test
and
jno
je
mov
pop
dec
dec
inc
pop
shl
push
stos
jmp
into
and
cwde
and
pop
fcomp
pusha
mov
push
mov
ret
sbb
cmp
(bad)
push
(bad)
cdq
fst
mov
sub
mov
stos
gs
mov
dec
mov
movs
xchg
and
sub
stos
test
push
stos
iret
(bad)
movs
(bad)
sahf
xchg
shr
shl
ret
stos
lods
movs
mov
enter
lods
movs
test
fmul
xchg
ret
ret
shr
enter
cli
int
into
ret
shr
movs
xchg
ret
xchg
ret
ret
shr
in
lock
lods
movs
jl
cld
ror
daa
jmp
popw
and
xchg
scas
fwait
aad
jb
sahf
int
sub
or
jo
push
ins
and
mov
arpl
mov
fcmovnbe
js
jne
mov
mov
sbb
cmps
ins
popa
inc
popf
mov
scas
loop
in
es
out
push
xchg
xor
xor
shr
je
lea
sub
(bad)
cdq
fst
mov
imul
in
fisttp
xor
ds
iret
cmp
lahf
xchg
fs
data16
cli
std
hlt
push
ret
mov
in
push
fcom
jle
(bad)
loope
shr
das
popa
enter
jge
add
retf
add
aas
xor
test
and
push
call
push
jno
das
nop
cmp
jns
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
shl
push
rcl
(bad)
xchg
jge
or
jns
add
jl
pop
f2xm1
add
jns
aad
jge
adc
jns
add
mov
retf
xchg
fldcw
out
mov
jns
mov
fld
xchg
fdivr
push
pop
push
xchg
sbb
xchg
cdq
dec
pop
fstp
fidivr
xchg
xor
mov
pop
xchg
xchg
and
jns
fcmovne
js
pop
mov
(bad)
pop
fld
xchg
xchg
dec
fdivr
arpl
jno
pop
(bad)
sti
outs
pop
fnstcw
adc
nop
add
jns
mov
jno
pop
mov
js
mov
jns
cmps
fdiv
xchg
fnstcw
mov
jns
pop
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
push
xor
mov
pop
xchg
xchg
xor
jns
fild
xchg
adc
(bad)
pop
mov
xchg
adc
fistp
or
mov
push
cmp
mov
pop
xchg
lock
jns
mov
pop
xchg
xchg
call
jns
fcmovnbe
js
pop
pop
xchg
xchg
shl
(bad)
std
adc
fnstcw
xor
pop
in
pop
es
adc
jns
mov
fsqrt
jg
(bad)
std
lock
jns
xor
pop
mov
adc
xchg
pop
add
fstp
mov
jns
pop
add
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
call
adc
mov
(bad)
std
sub
fnstcw
pop
fnstcw
push
jnp
push
lahf
xor
mov
(bad)
cld
adc
fnstcw
xchg
push
hlt
mov
pop
lock
pop
push
xor
mov
push
xchg
xchg
ret
pop
fnstcw
sbb
stos
mov
ins
fistp
xlat
pushf
sub
icebp
jns
pop
push
xor
mov
push
xchg
xchg
fwait
pop
fnstcw
sbb
loop
pop
fldenv
outs
push
fistp
xlat
pushf
xor
xchg
xchg
ss
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
outs
repnz
jns
add
push
sbb
ret
xor
mov
push
xchg
xchg
fwait
pop
fnstcw
sbb
repnz
mov
outs
push
fdivr
xlat
pop
aad
pop
fptan
retf
mov
outs
test
pop
jns
pop
fptan
retf
inc
scas
pop
fldenv
outs
mov
pop
ins
xchg
repnz
xchg
mov
xchg
fnstsw
xlat
pop
popa
xchg
repnz
jl
pop
fldenv
outs
in
jns
xlat
pop
xchg
repnz
frstor
stc
fnstsw
xlat
pop
pop
xchg
nop
mov
aad
lock
ret
fld
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
jg
and
xchg
pop
f2xm1
add
and
push
xor
fstp
outs
push
int3
jns
aas
xor
iret
jns
aad
jne
xchg
pop
jge
pop
cwde
clc
jle
fstp
sub
rol
adc
popf
pop
fst
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
or
cmp
or
or
lea
push
sbb
jns
inc
fidivr
mov
xchg
adc
xchg
push
jns
sbb
std
clc
pop
fnstcw
(bad)
(bad)
jns
push
mov
or
cmp
loopne
fnstcw
sbb
xchg
inc
inc
fnstcw
and
clc
inc
inc
aad
xchg
mov
xchg
xchg
dec
fdivr
ss
pop
pop
mov
rcr
ss
pop
fldcw
js
sar
xor
push
cdq
fnstcw
pop
sahf
pop
add
(bad)
sbb
clc
inc
(bad)
jns
aad
sub
xchg
adc
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
mov
in
xor
cdq
stc
mov
frstor
jns
stos
cdq
repz
(bad)
ret
cmp
fsubp
inc
repnz
push
jnp
pop
fnstcw
sbb
jl
pop
fnstcw
pop
xor
nop
pop
fptan
cli
push
pop
mov
in
pop
mov
xchg
adc
fnstcw
push
mov
mov
pop
dec
push
pop
pop
mov
or
stc
sub
std
stc
mov
pop
xchg
mov
xlat
mov
fld
outs
jmp
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
aaa
xchg
imul
fcom
xchg
cs
pop
mov
js
popf
bnd
add
xlat
pushf
sub
jecxz
jmp
cmp
pop
push
and
or
mov
jns
mov
or
aad
pop
xchg
fstp
xchg
add
icebp
aam
sahf
lods
add
xchg
add
sub
call
jne
shr
aam
lea
xchg
jns
jge
gs
cmp
xchg
repnz
dec
push
cmp
aad
pop
or
in
dec
xlat
out
repnz
push
ss
sub
shl
add
xlat
and
inc
push
push
ss
sbb
inc
dec
push
ss
fistp
test
enter
xchg
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
nop
outs
mov
xor
mov
xchg
xchg
add
push
cmp
mov
xchg
push
cmp
mov
pop
xchg
lock
and
jo
push
es
(bad)
mov
mov
in
pop
mov
in
pop
mov
js
icebp
xchg
jb
in
xchg
jns
cmps
fdiv
jmp
xchg
(bad)
pop
xor
push
xor
pushf
pop
fldenv
outs
jne
xchg
pushf
dec
or
rcl
fnsave
push
ds
push
xor
lahf
pop
fptan
retf
and
rcl
fst
xchg
jno
ins
ret
add
mov
sub
sar
jnp
xchg
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
sar
popa
ror
nop
and
fnsave
mov
outs
fs
jns
push
push
jns
(bad)
xchg
add
pop
fldenv
outs
push
and
js
scas
jge
adc
xchg
(bad)
pop
push
jbe
lahf
mov
in
pop
push
add
xchg
cmps
fnstenv
in
aad
xchg
sbb
in
push
es
jmp
fnstcw
sub
repnz
js
jne
xchg
cmp
pop
jmp
adc
xchg
xchg
ret
xchg
pop
fld
aad
xchg
xor
jns
mov
fld
(bad)
mov
push
cmp
cwde
fnstcw
push
fsub
outs
cwde
fnstcw
mov
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
xchg
(bad)
xchg
or
or
mov
rol
add
fnstenv
cmp
jns
aad
pop
inc
pop
xchg
adc
jp
push
adc
jno
ins
es
frstor
jns
fistp
outs
loope
xchg
jg
pop
mov
outs
push
pushf
and
pop
mov
jbe
xchg
imul
mov
fst
or
xchg
inc
pop
add
cmp
add
aad
imul
pop
les
pop
fnstcw
push
pop
push
xchg
repnz
and
pop
and
or
rol
add
fnstenv
popf
sar
aad
popa
outs
rcr
xchg
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
push
mov
stos
in
pop
mov
push
movs
pop
mov
xchg
aad
fld
push
mov
rcl
dec
js
pop
add
dec
pop
mov
or
(bad)
nop
pop
xchg
push
push
push
push
xor
mov
popa
xchg
xchg
xchg
repnz
or
pop
(bad)
cld
inc
push
fnstcw
xchg
fdivr
xor
adc
pop
leave
jns
xor
repnz
dec
js
inc
jns
pop
push
cld
aaa
pop
fnstcw
(bad)
jmp
cmp
fstp
push
or
cmp
pop
fptan
retf
and
shl
js
fst
(bad)
xlat
xor
inc
out
jns
or
fnstcw
or
xchg
pop
fnstcw
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
(bad)
addr16
inc
mov
in
pop
push
xchg
push
popf
ins
jns
pop
mov
sbb
fnstcw
fistp
test
or
xchg
pop
mov
or
(bad)
nop
pop
xchg
push
push
sar
xchg
xchg
push
popf
jns
xchg
repnz
fnstcw
fistp
jns
pop
fldcw
or
rol
in
pop
mov
push
mov
mov
aam
inc
leave
xchg
clc
inc
pop
fstp
or
jmp
rol
pop
xchg
pop
fldenv
or
imul
xor
adc
pop
fnstcw
or
xchg
push
retf
push
mov
in
js
xchg
out
fnstcw
aad
jno
ins
es
mov
js
pop
push
xor
mov
pusha
xchg
xchg
mov
pop
jns
pop
xor
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
nop
fmul
jns
mov
mov
push
cld
pop
pop
fnstcw
adc
sub
push
cmp
aad
jge
add
xor
mov
fnstcw
or
xor
(bad)
test
fwait
xlat
pushf
or
pop
mov
in
pop
push
xor
btr
pop
push
es
mov
fnstcw
frstor
mov
jge
or
xor
xchg
arpl
mov
mov
push
aad
jge
test
mov
mov
or
jl
sbb
in
pop
mov
xchg
pop
fld
(bad)
mov
fnstcw
cdq
pop
jns
pop
fnstcw
pop
fptan
retf
test
pop
fldenv
outs
shr
xchg
jbe
xchg
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
into
dec
jmp
pop
push
mov
fbstp
repnz
or
pop
(bad)
cld
adc
jns
adc
nop
loope
fnstcw
mov
mov
push
dec
pop
fnstcw
cmps
pop
mov
(bad)
aad
jno
ins
es
xchg
js
pop
(bad)
cld
test
and
jbe
xchg
jns
aad
jge
jmp
xor
jb
es
fcompp
jns
aad
jno
ins
es
fimul
jns
mov
mov
push
(bad)
call
jns
adc
nop
cs
fnstcw
mov
mov
push
(bad)
sti
pop
fnstcw
sbb
jl
dec
fnstcw
fstp
xchg
(bad)
jmp
fnstcw
pop
leave
jns
xlat
pop
std
xchg
nop
cmp
jns
call
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
outs
iret
xor
xchg
into
fdivr
push
es
call
jns
loope
js
pop
fdiv
add
jns
aad
in
pop
fld
fnstcw
xchg
cmps
jge
xlat
jbe
daa
fdivr
arpl
xchg
fnstcw
in
jns
push
pop
sbb
pop
fnstcw
fiadd
xchg
jbe
adc
jns
mov
jns
pop
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
push
(bad)
jbe
sbb
pop
test
fnstcw
xchg
out
xchg
or
xchg
lods
(bad)
dec
fnstcw
sub
cdq
repz
hlt
xor
or
xchg
(bad)
std
into
pop
fnstcw
sbb
jns
sub
mov
xchg
js
pop
pop
jbe
jb
jns
mov
cli
cmp
fdivr
pop
lods
pop
in
pop
es
adc
jns
pop
fnstcw
mov
fld
xchg
fst
in
pop
mov
js
loope
inc
popf
mov
xchg
xchg
(bad)
fdivr
mov
fld
xchg
fnstcw
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
and
push
clc
fnstsw
push
es
pop
pop
fnstcw
jmp
es
sti
pop
fnstcw
mov
fstp
pop
es
pop
pop
fnstcw
jmp
es
sti
pop
fnstcw
mov
pop
int
pop
fsqrt
jg
(bad)
std
mov
fnstenv
xchg
xchg
and
inc
sub
jns
or
leave
jns
mov
rol
xchg
lock
sbb
in
push
es
add
jns
jmp
push
es
mov
fnstcw
fstp
pop
es
pop
pop
fnstcw
jmp
es
sti
pop
fnstcw
pop
sar
pop
pop
add
dec
in
xchg
nop
cmp
jns
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
xlat
and
inc
sub
jns
or
pop
js
pop
es
pop
pop
fnstcw
add
xchg
fst
in
pop
push
cs
mov
xor
ja
es
add
inc
fnstcw
aad
dec
or
leave
repnz
push
push
cmp
fnsave
jnp
xor
jns
add
xchg
cli
inc
pop
mov
repnz
push
mov
xor
pop
mov
inc
pop
mov
or
mov
aad
inc
pop
fnstsw
lods
jge
cli
push
pop
mov
out
mov
push
jns
pop
fldcw
push
mov
js
pop
mov
xchg
movs
jne
cdq
fnstcw
fdivr
ror
jns
mov
jl
pop
push
mov
fnsave
jnp
lahf
mov
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
(bad)
das
ror
pop
inc
pop
fdivr
aad
jne
cdq
fnstcw
pop
sub
outs
add
jns
push
push
cld
inc
pop
fnstcw
push
fdivr
xlat
adc
scas
xchg
pop
nop
test
lock
mov
es
or
(bad)
pop
or
rcr
mov
mov
fnstcw
aad
inc
add
(bad)
outs
push
leave
jns
add
and
mov
pop
mov
in
pop
mov
xchg
es
pop
mov
in
pop
mov
in
pop
mov
xchg
sub
xchg
lock
aad
jne
cmps
pop
mov
adc
jns
xlat
sahf
xor
xchg
jns
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
fnstcw
pop
f2xm1
jg
sbb
pop
mov
(bad)
pop
fldcw
shl
fldcw
js
mov
rcl
pushf
jne
pushf
cwde
jns
aad
inc
xchg
pushf
jne
push
xchg
jl
pop
fnstcw
push
inc
jns
fcomip
jl
push
gs
mov
daa
clc
inc
pop
fstp
xor
adc
xor
adc
mov
push
add
es
retf
pop
imul
pop
mov
js
xchg
das
js
mov
fst
daa
cli
inc
push
(bad)
adc
pop
mov
xchg
stc
js
mov
cld
test
fnstcw
adc
jns
mov
xchg
js
push
ds
cdq
pop
test
pop
f2xm1
jge
sbb
add
(bad)
in
pop
mov
outs
pop
leave
jns
push
mov
lahf
frstor
jns
(bad)
xchg
into
xchg
mov
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
sbb
inc
lahf
push
xor
mov
ja
pop
adc
sub
clc
inc
pop
fistp
pop
inc
test
xchg
call
jns
pop
push
jge
(bad)
fnsave
(bad)
test
pop
fnstcw
cdq
fnsave
pop
fnstcw
cdq
fnsave
pop
fnstcw
cdq
fnsave
pop
fnstcw
cdq
fnsave
pop
fnstcw
cmps
fdivr
pop
fprem
inc
pop
sar
mov
js
pop
push
add
frstor
pop
fnstcw
pop
sbb
jns
pop
jns
pop
fst
xchg
adc
fnstcw
dec
pop
jg
fnstcw
pop
leave
jns
push
push
cld
inc
pop
fnstcw
pusha
(bad)
jns
push
pop
mov
outs
fdivr
or
mov
daa
clc
inc
pop
fstp
add
mov
inc
xlat
stc
jl
lods
pop
cmovno
test
lahf
fist
movs
sbb
jle
sbb
jle
sbb
jle
sbb
jle
mov
nop
lds
jns
mov
js
pop
xor
xchg
or
das
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
imul
test
or
aad
jns
pop
test
or
cli
inc
pop
pop
xchg
and
es
mov
ja
pop
cmp
or
fst
fnsave
push
xchg
cwde
fnstcw
pop
mov
shl
fnstcw
fucom
js
ins
xor
mov
fnstcw
fbstp
jns
pop
fldcw
push
mov
jnp
pop
(bad)
adc
xor
adc
pop
fstp
or
in
xchg
jns
pop
mov
js
loope
inc
aam
icebp
cwde
push
sahf
stc
mov
outs
adc
aam
imul
push
fdivr
fstp
jnp
movs
(bad)
popf
pop
les
push
pop
lahf
xchg
nop
sti
push
fnstcw
aad
lock
jns
mov
jns
pop
jecxz
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
outs
xchg
jns
add
icebp
js
pop
mov
out
pop
jmp
push
xchg
adc
ret
xchg
pop
pop
xchg
lock
jns
mov
je
pop
xor
aad
jne
(bad)
jmp
cmp
inc
ror
pop
leave
jns
lds
push
push
dec
(bad)
xlat
in
outs
(bad)
sbb
mov
mov
imul
jp
repnz
aad
sub
(bad)
sub
xor
(bad)
test
sub
rol
adc
outs
push
jns
add
jmp
in
pop
fnstcw
ret
std
js
pop
mov
dec
xor
jns
cmp
xchg
aad
push
push
cli
inc
pop
pop
mov
inc
pop
pop
mov
xchg
sbb
push
in
pop
fnstcw
pop
mov
inc
xchg
inc
fwait
push
(bad)
std
jo
fnstcw
inc
shl
fwait
dec
cwde
cmp
mov
jns
pop
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
mov
in
dec
push
mov
sbb
pop
fnstcw
aad
push
xchg
mov
and
jge
cld
mov
test
jnp
(bad)
js
pop
push
in
pop
fnstcw
pop
push
dec
xchg
xchg
xchg
xor
ins
pop
mov
pop
push
movs
pop
mov
push
or
rol
cmp
retf
mov
xchg
fwait
xlat
and
fnstcw
xchg
jo
push
cmps
outs
pushf
fnstcw
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
fidivr
pop
(bad)
adc
xor
jbe
push
(bad)
xchg
inc
(bad)
pop
inc
(bad)
adc
scas
lods
pop
mov
jl
fnsave
lahf
fmul
add
jge
pop
in
bnd
aam
jb
out
add
aad
pop
or
push
popf
lods
js
pop
mov
(bad)
fldcw
pop
mov
js
dec
aad
pop
fldenv
or
std
jge
pop
popa
cmp
dec
sbb
mov
xchg
js
mov
cmp
or
adc
outs
test
jns
pop
es
sar
fadd
(bad)
xlat
pop
repnz
push
push
ja
push
aad
leave
pop
push
cmp
jp
xchg
sbb
or
cmp
int3
xchg
jge
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
pop
fnstsw
cmps
cmp
js
lods
sbb
stc
test
xchg
cmp
or
xor
mov
cmc
xor
(bad)
mov
mov
cmp
sbb
adc
outs
sub
xchg
mov
or
cmc
pop
xor
pop
mov
call
xor
xchg
lods
cs
aaa
lods
sbb
aaa
stos
or
loop
mov
(bad)
pop
xor
pop
mov
lea
in
call
sahf
fnstcw
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
xchg
mov
pop
mov
pushf
js
xchg
or
test
mov
adc
xor
xchg
dec
mov
lea
sub
jecxz
xor
arpl
stos
sbb
sub
jecxz
mov
xchg
lods
idiv
mov
icebp
cmp
popf
js
xchg
or
in
lods
sbb
aaa
stos
or
loop
mov
(bad)
pop
xor
xchg
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
outs
je
xchg
lods
sub
sub
mov
loop
mov
xchg
lods
ds
call
or
jns
sar
xchg
lods
sub
sub
add
or
jns
scas
cmp
les
mov
out
mov
xchg
mov
push
stos
push
in
stos
or
sbb
sbb
pop
xor
ins
mov
pushf
add
sub
or
cmp
xor
mov
mov
push
in
stos
or
pop
xor
ins
mov
lods
push
aam
lods
sub
xor
adc
xor
or
xchg
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
push
outs
mov
lods
push
(bad)
cmp
mov
call
pop
xor
mov
lods
or
xor
sbb
sbb
xchg
xchg
aas
ror
cwde
sub
add
call
aaa
mov
call
sub
das
loop
stos
adc
xor
push
cmc
cmp
adc
jmp
mov
xchg
daa
mov
xchg
xor
or
sub
cmp
mov
lods
sbb
pop
mov
call
mov
jns
pop
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
dec
out
adc
mov
out
sub
sbb
cmp
outs
mov
xchg
stos
sbb
sub
loop
mov
loop
mov
xchg
mov
sbb
cmp
jns
sbb
xchg
mov
push
cmc
aaa
lods
add
xor
xlat
push
mov
mov
nop
js
call
cmp
cmp
cmp
mov
loop
lods
sbb
aaa
mov
rcr
sbb
es
aaa
lods
sbb
aaa
mov
xchg
call
xor
xchg
push
sbb
mov
sbb
xor
jns
repnz
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
loop
lds
mov
xchg
js
cwde
jns
pop
mov
pop
cwde
jns
pop
cwde
jns
pop
xor
jbe
es
cmp
xor
daa
fst
aad
mov
add
aas
mov
loop
mov
scas
js
mov
adc
es
cmp
xor
daa
pushf
add
pop
xor
out
cmp
xchg
scas
lods
es
cmp
cmp
sub
sbb
or
xchg
rol
mov
sbb
mov
scas
js
mov
loop
mov
(bad)
cmp
jns
push
add
retf
xor
adc
aas
mov
rcr
rcl
es
jmp
sub
sbb
sub
push
xchg
mov
sbb
aaa
mov
scas
js
sahf
sbb
or
out
or
xchg
jle
es
sub
jns
clc
fnstcw
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
cmp
sbb
ret
xchg
cmp
lods
pop
call
cmp
cmp
cmp
adc
cmp
mov
jmp
idiv
imul
mov
in
lods
adc
xor
push
mov
in
or
imul
out
cmp
sbb
sub
ja
es
stos
jle
pop
stos
jle
pop
stos
jle
pop
stos
jle
jns
pop
add
js
fnstcw
mov
mov
fnstcw
pop
xor
jbe
es
pop
fst
xchg
jns
loop
xchg
fnstcw
mov
mov
sbb
mov
loop
mov
add
pop
xor
ins
mov
mov
sbb
pop
xor
loop
mov
repz
pop
int3
cmp
sbb
mov
scas
js
lea
ret
xchg
add
and
sub
mov
fst
xchg
jns
and
xchg
fstp
mov
mov
idiv
xchg
pop
jne
es
pop
fld
add
or
add
add
add
add
add
std
add
add
add
add
add
xchg
add
ins
je
add
add
add
add
add
xor
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
inc
imul
dec
jp
jg
mov
add
add
loop
mov
retf
add
add
add
add
add
inc
add
(bad)
inc
add
or
and
add
add
add
inc
xchg
gs
xor
adc
dec
add
call
push
push
push
xor
xchg
add
add
add
add
add
push
push
gs
ja
xor
add
add
add
add
data16
push
push
ja
push
pusha
add
add
add
add
xchg
push
push
js
jbe
gs
push
ss
push
jo
add
add
add
add
push
data16
mov
xor
or
add
add
lock
js
mov
push
push
xchg
jo
add
add
add
add
jg
ja
mov
mov
pusha
pop
addr16
mov
push
push
ja
gs
add
add
add
add
push
ja
mov
(bad)
push
ja
push
add
add
add
inc
push
push
ja
mov
push
push
ja
push
add
add
add
add
push
xchg
call
xchg
pusha
add
add
add
add
addr16
js
jbe
data16
xchg
pusha
xor
mov
gs
push
xchg
jo
add
push
add
add
push
mov
gs
push
xor
add
add
add
add
push
push
stc
mov
push
push
push
xchg
jo
add
add
add
add
push
jne
push
push
push
js
xor
add
add
add
add
ja
jg
mov
xchg
pusha
pop
push
jbe
gs
push
push
ja
push
add
add
add
add
push
push
jne
push
push
push
push
(bad)
push
mov
add
add
inc
mov
ja
ja
adc
add
add
add
pop
js
mov
call
push
add
add
ja
add
add
js
mov
ja
push
adc
add
add
add
add
add
mov
inc
push
addr16
gs
inc
push
add
add
add
push
add
pop
ja
push
inc
xor
stos
mov
or
dec
stc
inc
xchg
cmps
test
cmp
or
add
add
lock
jne
outs
push
fs
add
add
push
push
add
add
add
add
or
add
add
add
xchg
inc
add
push
push
add
add
add
cmp
or
add
add
add
imul
add
add
or
add
add
add
add
pop
or
add
add
add
data16
clc
add
add
inc
push
add
add
add
data16
add
add
add
add
add
add
adc
add
add
or
add
or
daa
pusha
add
add
mov
jbe
or
pop
add
outs
add
arpl
push
mov
add
inc
adc
add
data16
mov
add
add
adc
nop
or
adc
add
add
cmp
add
add
add
add
push
xor
inc
xor
xor
xchg
xor
adc
add
add
add
add
add
pop
add
add
or
ja
xor
nop
clc
or
inc
inc
nop
jle
add
stos
cdq
mov
daa
add
add
add
add
(bad)
(bad)
clc
add
inc
add
push
add
inc
add
jmp
add
add
(bad)
cld
add
add
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
add
add
add
inc
add
inc
add
inc
clc
add
add
pop
inc
add
add
ud0
add
add
pop
jle
add
add
(bad)
inc
add
lock
inc
add
clc
pop
(bad)
(bad)
inc
add
clc
aas
jmp
inc
add
clc
aas
cld
jbe
add
(bad)
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
pop
clc
aas
inc
add
pop
lock
inc
add
clc
(bad)
aas
inc
add
cld
pop
loopne
inc
add
cld
add
aas
inc
add
inc
cmp
add
inc
add
add
(bad)
(bad)
cmp
(bad)
inc
add
inc
add
jmp
pop
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
jb
jns
add
data16
add
add
xchg
add
inc
add
add
add
pop
add
ins
ins
popa
jb
add
or
pop
rol
adc
add
add
add
add
arpl
adc
add
add
add
add
sbb
add
gs
imul
add
sub
add
add
or
inc
bound
fs
cmp
pop
add
mov
or
push
gs
popa
jo
imul
add
add
add
add
popa
je
jae
add
add
ucomiss
or
add
ins
outs
outs
imul
add
add
add
add
or
gs
gs
outs
jb
xor
pop
add
add
push
add
add
push
push
or
add
add
add
add
pop
inc
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
js
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
sbb
xchg
sbb
mov
sbb
and
inc
add
inc
add
inc
add
arpl
cld
sbb
pop
sbb
les
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
push
push
push
push
push
push
push
mov
mov
mov
call
lea
push
fstp
call
lea
lea
push
push
call
lea
push
call
lea
lea
push
push
push
call
add
push
push
call
mov
lea
call
push
call
push
push
call
push
push
fstp
call
fstp
fwait
push
jmp
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
lea
push
lea
push
push
push
push
mov
call
mov
mov
call
test
jne
call
xor
mov
call
mov
lea
push
lea
push
lea
push
push
push
push
mov
call
mov
call
test
jne
call
xor
mov
call
mov
lea
push
lea
push
lea
push
push
push
push
mov
call
mov
call
test
jne
call
xor
mov
call
mov
lea
push
lea
push
lea
push
push
push
push
mov
call
mov
call
test
jne
call
xor
mov
call
mov
lea
push
lea
push
lea
push
push
push
push
mov
call
mov
call
test
jne
call
push
call
mov
call
mov
test
je
call
push
call
mov
call
mov
test
je
call
push
call
mov
call
mov
test
je
call
push
call
mov
call
mov
test
je
call
push
call
mov
call
mov
test
je
call
mov
lea
mov
mov
mov
call
mov
mov
call
push
call
mov
mov
add
mov
jo
cmp
mov
jne
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
test
jne
lea
push
lea
push
push
mov
mov
call
mov
mov
call
mov
fld
call
push
mov
push
mov
push
push
call
mov
mov
test
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
lea
neg
sbb
lea
push
push
neg
push
neg
call
add
lea
call
test
jne
mov
mov
fld
push
push
call
test
jle
mov
test
jne
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
push
call
push
push
push
push
push
mov
mov
call
push
call
mov
call
mov
push
call
mov
mov
fwait
push
jmp
lea
lea
push
push
push
call
add
lea
call
lea
call
ret
ret
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
dec
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
inc
add
or
or
add
add
dec
add
jbe
add
dec
add
add
add
stos
dec
add
mov
dec
add
sub
add
test
push
dec
add
adc
add
es
add
cmp
add
add
add
fs
add
js
add
test
add
dec
add
mov
dec
add
mov
dec
add
loop
add
in
dec
add
or
add
push
add
cs
add
cmp
add
dec
push
add
bound
add
add
jp
add
nop
push
add
pushf
push
add
scas
push
add
rcl
aam
add
out
add
add
xor
add
add
add
push
add
add
sub
sbb
add
push
add
ss
add
inc
push
add
and
add
push
push
add
fs
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
push
add
dec
arpl
add
mov
pop
popa
fs
data16
popa
outs
add
js
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
imul
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
mov
pop
popa
fs
data16
gs
xor
sub
bound
gs
jns
je
ins
inc
jb
outs
jb
rol
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
push
imul
xor
jae
pop
pop
jbe
popa
inc
jns
fs
cmps
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
pop
imul
xor
imul
dec
jae
outs
add
outs
add
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
pop
pop
jbe
popa
inc
jns
xor
xor
pop
pop
jbe
popa
push
je
inc
ins
jo
jns
pop
pop
jbe
popa
inc
jns
xor
or
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
push
data16
je
outs
add
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
dec
add
jbe
popa
push
dec
xor
add
push
add
dec
jae
jb
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
cmps
add
jbe
popa
inc
jo
ins
jo
jns
add
bound
js
gs
dec
popa
outs
fs
gs
add
push
data16
gs
add
scas
add
fs
imul
ss
add
bound
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
xor
jb
add
pop
inc
dec
ins
outs
add
lea
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
push
imul
xor
add
push
imul
xor
imul
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
stos
add
fs
imul
iret
add
jbe
popa
dec
xor
popa
jb
add
bound
jo
jns
rol
pop
pop
jbe
popa
dec
outs
push
je
inc
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
mov
pop
popa
ins
ins
ins
jne
add
pop
inc
dec
je
outs
add
push
add
dec
gs
add
lods
add
jbe
popa
inc
jb
gs
bound
add
bound
jb
gs
je
