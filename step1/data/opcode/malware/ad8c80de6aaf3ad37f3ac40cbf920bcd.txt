pusha
jns
add
add
add
add
add
add
add
pop
add
add
add
and
add
sub
add
cmc
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
cmp
add
adc
mov
push
adc
inc
add
add
add
add
and
add
add
push
inc
add
add
sbb
add
adc
inc
add
(bad)
(bad)
jmp
add
add
add
add
add
sbb
add
add
sbb
add
sub
and
add
mov
push
sub
jle
add
add
or
add
push
sub
add
add
add
add
add
add
add
add
mov
push
sub
add
fld
inc
add
add
pop
add
add
push
inc
add
add
cmp
add
xchg
add
add
add
test
add
push
or
pop
ins
inc
inc
add
add
and
or
pop
push
pop
ror
add
add
inc
add
add
pop
pop
ror
add
add
mov
push
sub
inc
and
add
add
and
call
call
add
add
add
add
add
push
mov
add
add
sub
or
push
pop
ror
add
add
mov
push
cmp
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
fiadd
fiadd
and
add
add
push
inc
add
add
pop
add
add
push
inc
add
add
(bad)
(bad)
call
add
xor
add
sbb
push
push
push
mov
sldt
or
add
add
add
add
mov
push
sub
sub
push
inc
add
add
daa
add
add
push
inc
or
add
push
add
add
add
add
add
mov
add
inc
add
add
adc
add
pop
rcl
add
add
pop
rcl
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
mov
push
sub
add
or
push
add
add
sub
add
push
sub
add
(bad)
(bad)
call
add
pop
inc
sub
add
add
add
or
add
add
add
pop
add
add
(bad)
(bad)
call
add
daa
das
sub
add
adc
cmp
(bad)
(bad)
jmp
add
add
out
add
inc
add
add
add
add
mov
push
cmp
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
fisubr
fisub
outs
adc
add
and
add
add
(bad)
(bad)
call
mov
add
mov
add
cmp
adc
add
adc
add
(bad)
(bad)
(bad)
ficomp
add
add
mov
push
sub
push
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
dec
add
add
sub
and
add
add
sub
pop
outs
adc
add
and
add
add
sub
fsub
add
add
or
add
or
cmp
(bad)
jmp
add
mov
sub
mov
stc
add
add
inc
add
lea
add
lea
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
jmp
xor
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
retf
inc
pop
pop
and
inc
pop
pop
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
call
add
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
cwde
rol
cwde
rol
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
sbb
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
xchg
add
add
add
xlat
add
add
add
add
add
jo
lea
add
add
push
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sub
add
sub
add
push
add
sub
add
push
and
pop
sub
add
push
add
sub
add
push
pop
das
push
sub
add
push
pop
add
add
add
add
mov
sub
add
pop
push
push
daa
and
add
add
(bad)
jmp
add
jb
add
jo
sldt
push
and
add
add
(bad)
jmp
add
sub
add
push
jb
add
jo
adc
and
mov
inc
inc
add
add
mov
(bad)
inc
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
stc
add
adc
xor
add
add
add
add
adc
mov
pop
adc
inc
add
add
add
add
and
add
add
push
inc
add
add
sbb
add
adc
inc
add
(bad)
(bad)
inc
add
sbb
add
add
add
add
add
add
or
add
add
mov
pop
sub
sub
add
pop
sub
and
add
mov
pop
sub
add
add
and
add
add
fiadd
sub
jae
add
or
sub
and
add
add
push
inc
add
add
sbb
add
adc
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
mov
pop
sub
sub
and
add
mov
pop
sub
jle
add
add
or
add
push
sub
add
add
add
add
mov
pop
sub
add
frstor
add
and
test
inc
inc
add
add
call
add
add
add
add
push
mov
add
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
push
push
jle
add
or
pop
or
pop
sbb
pop
or
add
add
mov
pop
sub
xor
and
add
add
sub
jb
add
jo
outs
add
jo
add
sbb
add
sub
add
or
add
sub
and
add
add
(bad)
(bad)
dec
jb
add
jo
sbb
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
jo
add
add
sbb
add
jb
add
jo
sbb
add
or
add
(bad)
(bad)
jmp
add
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
pop
sub
push
(bad)
add
add
mov
pop
sub
push
inc
add
add
adc
add
adc
inc
add
add
or
add
add
(bad)
(bad)
inc
sub
and
add
add
sub
pop
outs
adc
add
and
add
add
sub
fadd
push
jae
add
or
cmp
add
add
mov
pop
sub
push
inc
add
add
adc
add
adc
inc
add
add
or
(bad)
(bad)
call
add
add
sub
and
add
add
sub
push
outs
adc
add
and
add
add
sub
fsub
sub
push
inc
add
add
pop
add
add
pop
inc
add
add
dec
add
add
add
add
add
and
add
push
adc
push
add
or
adc
sbb
add
and
add
add
adc
fs
push
and
add
add
sub
adc
pop
adc
add
add
mov
pop
sub
add
add
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
pop
inc
add
add
push
add
add
add
add
add
add
add
or
add
add
inc
add
add
add
add
mov
pop
sub
adc
jo
adc
and
add
add
sub
jg
add
add
sbb
add
jb
add
jo
push
add
or
add
add
sub
and
add
add
ffree
cld
(bad)
jmp
fnstsw
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
call
add
add
add
ret
add
add
xor
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
and
cmp
and
cmp
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
das
add
and
add
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
inc
adc
test
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
adc
push
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
add
add
add
xor
add
add
push
mov
or
or
add
add
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
and
add
dec
add
add
add
test
add
jne
add
push
or
or
add
add
mov
or
iret
push
and
sub
add
add
mov
or
mov
jnp
add
add
sbb
sar
add
add
add
add
mov
or
mov
add
add
pop
sub
add
mov
or
mov
retf
add
jl
add
add
pop
add
or
add
add
push
add
add
(bad)
(bad)
jmp
(bad)
and
adc
cmp
(bad)
(bad)
(bad)
add
frstor
add
push
inc
add
add
pop
add
add
or
add
add
add
mov
add
dec
add
add
pop
add
or
push
jae
add
or
add
add
jo
jl
add
add
pop
add
or
add
jo
sbb
and
add
jge
add
add
jnp
add
add
xor
add
push
add
or
push
and
add
add
adc
add
add
add
sbb
add
sub
and
add
add
sub
add
add
add
pop
add
add
add
pop
pop
dec
pop
or
add
add
add
mov
or
pop
(bad)
(bad)
jmp
add
jb
add
jo
popa
add
jo
jl
add
add
and
add
sub
add
or
add
add
add
add
mov
or
sub
(bad)
(bad)
fimul
fiadd
push
add
or
push
adc
add
add
add
and
add
pop
push
add
and
add
pop
sar
add
add
or
add
pop
or
add
jnp
fidivr
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
cmp
add
or
add
and
add
adc
and
add
add
cmp
aaa
jnp
and
jl
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
and
add
or
add
add
mov
or
xchg
sub
adc
add
and
add
add
cmp
call
lea
add
add
mov
sub
mov
stc
add
add
add
mov
or
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
inc
pop
or
add
and
add
pop
push
add
jnp
fidivr
add
add
add
jnp
add
add
push
add
or
add
xor
jnp
add
add
jnp
add
add
pop
or
add
add
add
add
sub
add
add
dec
fimul
mov
add
mov
add
add
add
pop
push
add
add
add
add
push
popa
push
add
inc
(bad)
(bad)
jmp
fld
(bad)
dec
outs
and
add
or
add
(bad)
(bad)
jmp
mov
pop
movs
pop
add
add
add
add
add
(bad)
push
adc
add
add
stos
add
adc
add
add
add
add
add
add
add
adc
add
add
cmp
push
adc
xor
add
add
add
add
add
jle
add
or
add
add
sub
add
adc
add
cmp
add
add
mov
add
mov
add
and
fnsave
fcmovnu
je
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
sub
add
add
add
inc
add
add
add
add
shl
lea
shl
lea
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
push
jne
xor
push
jne
xor
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
sbb
add
add
add
push
mov
adc
adc
add
add
add
add
mov
add
mov
add
jae
add
or
jb
add
jo
push
add
add
pop
add
or
add
or
ficom
fimul
sub
push
mov
sub
mov
stc
add
push
inc
add
add
sub
add
adc
inc
or
add
dec
add
add
add
add
add
sbb
add
pop
add
add
add
or
add
add
daa
add
or
or
or
sub
add
mov
and
add
mov
adc
mov
add
add
add
pop
rol
jle
add
add
pop
rol
jb
add
jo
lea
add
add
movups
push
jb
add
jo
adc
sub
add
or
add
push
add
add
dec
pop
rol
fst
add
add
(bad)
add
add
inc
add
add
pop
add
add
adc
add
add
add
add
add
pop
add
add
pop
add
or
or
add
mov
add
or
add
or
add
or
add
push
add
add
pop
add
or
add
jo
sub
add
or
add
push
add
add
pop
rol
jle
add
add
add
push
add
or
add
add
add
mov
adc
mov
jb
add
jo
adc
dec
and
add
add
(bad)
(bad)
jmp
add
add
jo
lea
add
add
push
adc
push
jb
add
jo
adc
pop
adc
adc
sbb
add
adc
sub
add
or
add
(bad)
(bad)
jmp
add
add
add
mov
adc
sub
(bad)
(bad)
fnsave
fnsave
mov
mov
adc
and
add
add
(bad)
(bad)
(bad)
cmp
pop
add
or
jle
add
add
pop
rol
jle
add
add
pop
rol
jb
add
jo
lea
add
add
or
int
add
adc
add
pop
add
or
push
add
add
pop
add
or
add
or
jle
add
add
dec
pop
rol
fiadd
fiadd
push
lea
add
or
lea
add
or
pop
add
add
std
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
es
rol
jle
add
add
pop
rol
jb
add
jo
or
add
inc
fiadd
add
add
mov
adc
mov
(bad)
call
push
pop
mov
mov
add
add
std
(bad)
jmp
addr16
adc
add
add
pop
pop
adc
add
std
(bad)
jmp
cmp
adc
add
add
mov
adc
inc
std
(bad)
jmp
stos
or
push
add
add
pop
pop
adc
adc
and
add
add
std
(bad)
jmp
mov
add
add
pop
rol
fmulp
es
push
adc
jb
add
jo
sbb
add
add
or
jb
add
jo
inc
add
jo
push
add
add
pop
add
or
add
jo
and
add
or
add
pop
sub
add
or
pop
sub
add
or
add
add
sbb
add
or
add
add
jo
or
add
or
add
sbb
add
or
add
daa
(bad)
(bad)
jmp
frstor
(bad)
(bad)
inc
adc
pop
or
pop
add
push
adc
and
adc
cmp
(bad)
(bad)
fstp
add
add
sub
push
adc
adc
pop
pop
adc
jb
add
jo
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
or
add
push
add
add
pop
add
pop
rol
jle
add
add
push
pop
rol
jb
add
jo
or
sub
add
jb
add
jo
or
sub
add
sub
add
or
jb
add
jo
or
sub
add
sub
add
or
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
adc
add
add
add
or
add
add
adc
and
add
add
adc
pop
and
dec
and
add
add
and
test
cmp
fsubr
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
jle
add
add
adc
and
add
add
sub
and
add
add
fld
(bad)
jmp
fld
(bad)
call
or
inc
hlt
add
cmp
add
cmp
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
adc
add
add
add
jne
add
mov
add
add
add
add
add
add
add
add
add
adc
add
add
add
xchg
add
add
add
add
add
add
add
imul
mov
add
test
add
xor
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
add
or
or
add
jo
add
sub
add
sub
add
or
jle
add
add
popa
pop
rol
and
or
or
add
add
add
add
add
add
add
add
add
push
mov
add
add
and
add
add
push
pop
xor
and
add
add
sub
adc
sub
add
or
add
add
add
sub
add
sub
add
or
add
add
add
mov
or
push
(bad)
(bad)
jmp
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
frstor
add
fstp
add
inc
add
add
cmp
add
adc
inc
or
add
add
add
and
add
loopne
add
mov
add
retf
add
add
add
add
aaa
add
add
add
test
add
adc
pop
pop
pop
adc
and
add
add
adc
add
imul
add
mov
or
movs
cmp
adc
add
or
pop
xchg
add
pop
xchg
popa
add
rcr
or
pop
xchg
pushf
sub
push
mov
sub
mov
stc
add
add
add
mov
or
data16
(bad)
(bad)
cmp
add
adc
adc
pop
pop
adc
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
mov
or
cmp
(bad)
inc
mov
push
and
add
add
(bad)
(bad)
jmp
lds
adc
adc
pop
inc
pop
push
add
or
adc
pop
pop
push
pop
pop
push
add
add
fst
add
add
adc
push
adc
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
inc
add
add
daa
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
or
add
or
and
add
add
sub
and
add
add
pop
sub
or
add
push
or
or
add
or
add
mov
or
mov
sbb
add
adc
cmp
(bad)
jle
add
add
inc
inc
inc
sub
jb
add
jo
lea
add
add
or
or
jb
add
jo
adc
pop
jg
add
add
pop
add
or
add
or
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
and
(bad)
(bad)
fisubr
or
add
mov
or
out
(bad)
call
or
add
imul
and
add
add
std
(bad)
(bad)
cmp
mov
pop
lea
add
adc
or
add
mov
or
mov
(bad)
jmp
and
add
std
(bad)
inc
cmp
(bad)
(bad)
jmp
or
add
mov
or
mov
(bad)
(bad)
cmp
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
and
add
push
add
add
add
push
adc
push
add
add
pop
rol
adc
push
and
add
add
adc
pop
jb
push
and
add
add
sub
adc
pop
pop
adc
and
add
add
sub
and
add
add
fstp
(bad)
(bad)
jmp
fst
(bad)
(bad)
call
adc
and
adc
cmp
cld
(bad)
(bad)
cmp
pop
add
or
fstp
cld
(bad)
jmp
fst
cld
(bad)
call
mov
add
mov
add
adc
add
add
add
add
add
(bad)
add
adc
add
add
call
add
add
push
add
lock
adc
add
js
add
adc
add
add
inc
push
adc
xor
add
add
pop
add
adc
aas
pop
enter
pop
enter
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
pop
or
push
inc
or
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
cmp
add
xor
add
add
add
add
and
test
test
add
add
add
add
add
push
mov
add
add
jle
add
add
cmp
or
add
push
add
add
ds
rol
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
xor
add
add
add
jae
add
or
add
add
sub
add
or
jae
add
or
adc
add
add
xor
add
add
or
add
pop
mov
add
mov
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
push
or
pop
pop
ror
jb
add
jo
add
pop
add
or
sub
add
outs
sub
add
sub
add
or
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
pop
pop
add
adc
xor
add
add
add
adc
aam
cmp
and
adc
push
mov
add
add
add
add
add
push
mov
add
add
push
or
jle
add
add
or
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
xor
add
adc
xor
add
add
add
add
and
jbe
dec
and
jbe
dec
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
or
push
or
add
add
add
xor
add
add
add
add
add
sub
add
or
add
add
add
push
sub
add
push
add
sub
add
push
add
add
or
add
push
sub
sbb
add
test
add
or
add
push
mov
push
adc
inc
add
add
add
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
or
or
add
add
dec
pop
add
and
add
pop
jle
add
add
rol
jle
add
add
dec
pop
rol
and
adc
sub
add
add
mov
push
sub
jnp
add
add
pop
sar
add
add
add
add
mov
push
cmp
(bad)
jmp
add
add
pop
sar
add
add
add
add
mov
push
cmp
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
inc
push
cs
add
add
(bad)
(bad)
jmp
movs
and
add
add
(bad)
(bad)
(bad)
(bad)
add
add
(bad)
add
add
inc
add
add
adc
add
adc
inc
add
add
repnz
add
add
add
add
sub
inc
add
add
and
add
adc
inc
pop
add
add
add
xor
add
dec
add
add
add
add
add
add
adc
jle
add
add
jnp
add
add
shr
and
add
and
add
add
adc
or
and
add
add
sub
add
push
pop
pop
sub
add
push
and
add
add
sub
and
adc
sub
add
pop
xor
and
add
add
(bad)
(bad)
jmp
add
add
add
add
sub
add
push
pop
shr
and
add
and
add
mov
push
cmp
(bad)
jmp
add
push
add
add
(bad)
(bad)
(bad)
fst
(bad)
(bad)
jmp
fisttp
(bad)
(bad)
push
add
push
add
add
push
or
add
add
mov
push
cmp
(bad)
(bad)
jmp
sub
sbb
add
add
add
add
add
add
dec
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
cmp
inc
add
add
pop
add
add
push
inc
add
add
popa
add
add
add
add
add
cmp
add
pop
adc
add
push
add
add
add
shr
and
add
jle
add
add
pop
rol
and
add
add
adc
add
add
sub
jle
add
add
pop
rol
and
add
add
sub
and
add
add
ffree
add
add
fnstsw
inc
add
add
pop
add
add
push
inc
add
add
push
add
add
add
add
add
and
add
push
or
or
add
push
pop
pop
sub
add
push
and
add
add
or
in
add
cs
and
add
add
sub
add
sub
add
push
add
add
add
pop
pop
pop
sar
add
add
add
add
mov
push
sub
and
add
pop
pop
sub
add
push
and
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
and
add
add
std
(bad)
dec
cmp
(bad)
(bad)
jmp
add
add
mov
push
cmp
(bad)
(bad)
cmp
jnp
add
add
add
push
or
jnp
add
add
cmp
add
sub
xor
add
add
add
lock
adc
add
push
adc
add
xchg
add
adc
add
add
add
add
xor
add
add
add
add
and
dec
mov
and
dec
mov
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
(bad)
shr
sub
(bad)
shr
sub
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
cmp
sub
cmp
sub
add
add
add
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
(bad)
mov
adc
(bad)
mov
adc
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
fadd
add
add
adc
mov
or
or
add
add
add
add
add
or
jle
add
add
test
add
inc
adc
add
adc
add
adc
add
inc
pop
rol
fidiv
fidiv
fnstcw
adc
and
aas
adc
mov
add
add
add
add
add
add
outs
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
sub
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
push
add
add
adc
add
pop
rol
jle
add
add
pop
rol
and
add
add
jle
add
add
xor
add
sub
and
add
add
jle
add
add
or
add
push
sub
adc
add
adc
add
inc
adc
add
adc
add
pop
rol
and
add
mov
or
arpl
(bad)
(bad)
fiadd
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
jb
add
pop
add
add
add
add
sub
and
add
add
cmp
add
push
inc
add
add
xor
add
adc
inc
or
add
cmp
add
push
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
push
add
adc
add
adc
add
add
adc
sub
add
mov
add
add
cmp
add
add
mov
or
xchg
push
sub
adc
add
pop
rol
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
mov
or
data16
(bad)
(bad)
jle
add
add
add
add
or
add
mov
or
dec
(bad)
(bad)
jmp
mov
add
adc
add
pop
rol
adc
push
adc
add
add
mov
or
daa
(bad)
(bad)
call
add
push
scas
and
add
add
(bad)
(bad)
jmp
sbb
add
add
mov
or
add
add
or
add
inc
sub
pop
inc
adc
add
or
add
mov
or
fdivrp
(bad)
(bad)
cmp
(bad)
jmp
or
add
mov
or
int3
(bad)
(bad)
(bad)
fucomp
add
add
fucom
add
add
jae
add
push
or
add
(bad)
(bad)
(bad)
cmp
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
push
add
add
add
or
push
or
adc
add
pop
rol
and
add
mov
or
mov
add
sbb
add
sub
and
add
add
sub
jle
add
or
and
adc
sub
add
add
or
in
add
add
sub
add
add
mov
or
je
(bad)
jmp
add
add
add
inc
adc
add
add
add
mov
or
pop
(bad)
(bad)
jmp
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
frstor
(bad)
(bad)
jmp
fstp
(bad)
(bad)
dec
push
outs
pop
add
push
adc
and
add
add
std
(bad)
(bad)
fnsave
add
add
sub
jae
add
or
push
push
add
add
mov
add
inc
adc
add
add
add
adc
add
add
inc
adc
add
add
add
push
fiadd
fiadd
fiadd
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
aas
add
add
add
add
add
xchg
add
add
add
or
push
push
adc
jle
add
add
pop
rol
adc
pop
pop
adc
and
add
mov
or
mov
push
jb
add
jo
sbb
add
sub
and
add
add
sub
jle
add
add
adc
add
add
adc
sub
add
add
pop
rol
and
add
add
(bad)
(bad)
jmp
and
add
(bad)
(bad)
call
pop
and
and
add
add
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
fnstsw
(bad)
jmp
fnsave
call
mov
add
mov
add
adc
sub
add
cmp
add
cmp
add
add
add
adc
add
add
add
test
add
add
add
add
add
add
add
inc
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
and
jb
and
jb
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
in
jno
inc
and
jno
inc
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
and
add
or
add
push
inc
add
add
add
add
inc
or
add
ret
add
add
add
add
(bad)
add
add
add
add
and
mov
inc
inc
add
add
dec
add
add
add
add
add
add
mov
add
add
push
or
and
add
pop
sar
add
add
pop
pop
push
adc
add
pop
sar
add
add
add
or
xchg
pop
inc
xor
and
add
add
(bad)
jmp
cmp
add
add
mov
cmp
(bad)
inc
sub
add
push
pop
push
inc
push
inc
sub
add
add
mov
cmp
(bad)
jle
add
add
and
pop
add
add
(bad)
jmp
les
pop
pop
push
add
mov
cmp
(bad)
(bad)
jmp
int3
and
add
add
(bad)
call
sub
adc
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
inc
sbb
add
add
add
add
add
add
add
xor
add
add
add
mov
mov
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
mov
sub
mov
stc
add
add
add
mov
sub
push
inc
add
add
inc
add
add
cs
mov
mov
inc
add
add
push
add
add
add
add
mov
add
add
pop
mov
add
mov
add
pop
inc
add
add
inc
add
add
add
jle
add
add
sub
add
or
and
add
add
add
add
jo
pop
add
add
das
add
or
add
or
add
or
push
adc
add
add
add
mov
cmp
(bad)
jmp
add
add
add
add
add
xor
add
add
add
add
and
cmp
stos
dec
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
and
cwde
and
cwde
es
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
sbb
add
add
xor
add
add
push
add
adc
add
rol
and
or
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
sub
add
jb
add
jo
sbb
add
xor
add
or
je
add
sbb
sbb
add
add
add
adc
mov
or
or
add
add
add
add
add
add
pop
push
add
jl
add
fnsave
add
and
add
add
push
inc
add
add
inc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jno
add
inc
add
add
add
add
add
add
add
add
cmp
add
and
cwde
loope
or
add
add
add
add
add
add
add
add
push
mov
add
add
and
adc
sub
add
add
add
pop
push
add
sbb
add
pop
push
add
sbb
add
pop
push
add
test
add
(bad)
add
add
add
or
jle
add
add
pusha
pop
push
add
lock
add
fucomp
add
add
add
or
jae
add
or
jle
add
add
pop
push
add
jno
fisubr
or
add
mov
or
add
(bad)
inc
sbb
inc
mov
add
and
adc
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
push
add
or
adc
jle
add
add
push
pop
push
add
mov
add
fld
mov
pop
lea
add
or
add
(bad)
(bad)
(bad)
cmp
add
adc
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
or
push
or
sbb
add
pop
push
add
sbb
add
and
jb
add
jo
lea
add
add
or
or
jle
add
add
sub
add
mov
sbb
add
sub
add
mov
add
or
jle
add
add
pop
push
add
sbb
add
pop
push
add
add
add
mov
or
jae
(bad)
inc
jb
add
jo
sbb
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
jo
add
sub
add
sub
add
or
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
sub
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
dec
sub
add
push
or
add
std
(bad)
(bad)
cmp
or
add
mov
or
(bad)
std
(bad)
inc
pop
pop
pop
inc
dec
add
add
push
add
add
std
(bad)
jmp
jl
sbb
add
sub
sbb
add
fst
sub
add
push
or
add
std
(bad)
(bad)
cmp
add
add
push
xchg
or
add
add
mov
or
xor
(bad)
(bad)
cmp
add
mov
sub
mov
stc
add
sldt
add
std
(bad)
inc
mov
cmp
std
(bad)
jmp
add
add
mov
or
(bad)
cld
(bad)
(bad)
cmp
std
(bad)
call
push
add
add
push
adc
sbb
add
pop
push
add
add
repz
add
fstp
(bad)
(bad)
jmp
fstp
(bad)
(bad)
inc
pop
or
or
add
and
add
add
cld
(bad)
dec
sub
and
add
add
cld
(bad)
(bad)
cmp
mov
add
mov
add
and
add
add
cld
(bad)
inc
cmp
jmp
or
add
mov
or
je
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
push
add
sbb
add
pop
push
add
sbb
add
xor
sbb
add
(bad)
cld
(bad)
call
adc
push
adc
adc
pop
pop
adc
adc
jle
add
add
push
add
push
pop
inc
pop
pop
or
adc
adc
pop
pop
adc
adc
pop
xor
fiadd
or
add
add
add
add
and
add
adc
add
push
adc
add
add
or
push
adc
add
add
sub
add
add
ja
push
adc
add
adc
add
add
fld
push
adc
add
daa
imul
add
add
add
add
add
add
add
xor
adc
xor
add
add
add
add
and
frstor
pop
and
frstor
pop
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
(bad)
inc
in
pop
and
inc
in
pop
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
adc
add
adc
add
add
pop
jge
add
add
sub
add
or
push
sub
add
push
sub
add
add
add
dec
add
add
add
add
retf
movs
ret
or
retf
movs
ret
or
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
jae
add
or
push
sbb
add
add
add
xor
add
add
add
add
and
pop
mov
and
pop
mov
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
pop
sahf
pop
dec
and
pop
dec
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
cmp
add
or
add
push
inc
add
add
xor
add
pop
mov
add
mov
add
push
inc
or
add
loope
add
pop
add
add
add
add
add
add
add
add
add
jns
add
jle
add
add
pop
push
add
add
add
mov
sub
add
push
add
inc
add
push
xor
cmp
add
add
cmp
add
inc
push
inc
sub
pop
sub
jge
add
add
push
add
add
and
add
add
mov
cmp
(bad)
jmp
add
add
add
pop
push
add
pop
add
add
(bad)
jmp
ficom
and
ficom
and
inc
inc
add
add
jbe
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
sub
jle
add
add
pop
push
add
add
add
mov
cmp
(bad)
(bad)
jmp
daa
and
or
or
(bad)
inc
jnp
add
add
and
add
push
and
add
add
(bad)
jmp
mov
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
sub
add
sub
add
add
add
adc
xor
add
add
add
add
add
jge
add
add
pop
jge
add
add
sub
add
or
add
add
add
push
push
cmp
add
add
sub
add
add
sub
add
add
sub
add
push
add
push
cmp
add
sub
add
or
add
jns
add
add
add
and
mov
repz
mov
add
add
add
add
add
push
mov
add
add
add
push
pop
pop
shr
add
push
jle
add
add
pop
push
add
add
inc
add
push
add
cmp
shr
add
push
add
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
pop
pop
add
adc
xor
add
add
add
add
and
and
and
xlat
and
and
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
push
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
jge
add
add
sbb
add
xlat
add
add
push
mov
adc
adc
add
add
add
add
inc
add
add
adc
add
adc
inc
add
add
push
add
jnp
add
sbb
add
pop
or
add
mov
sub
mov
stc
add
add
add
mov
adc
aad
daa
add
add
push
sub
add
outs
xor
add
add
sub
add
or
add
or
add
or
add
adc
sub
push
inc
add
add
dec
add
add
aad
adc
adc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
adc
inc
pop
add
add
add
add
add
(bad)
add
add
add
pop
add
add
adc
jae
add
or
add
sub
add
add
cmp
add
cmp
shr
inc
add
push
add
sub
sub
shr
inc
add
push
and
add
add
(bad)
(bad)
call
or
push
xor
push
add
add
(bad)
(bad)
jmp
add
add
inc
add
push
add
inc
add
push
pop
shr
add
push
and
adc
cmp
(bad)
jmp
add
adc
jle
add
add
push
cmp
add
and
add
add
(bad)
(bad)
inc
sub
add
push
add
cmp
add
xor
and
add
mov
adc
add
(bad)
jmp
add
jle
add
add
jnp
add
add
add
add
add
add
add
mov
adc
loope
(bad)
jmp
add
add
add
mov
adc
sar
(bad)
(bad)
fiadd
fiadd
adc
add
adc
add
or
fld
add
adc
sub
add
or
push
inc
add
add
pop
add
add
adc
add
add
add
add
add
inc
add
add
add
push
adc
adc
adc
add
sub
add
push
pop
and
and
xor
add
add
push
pop
pop
sub
add
and
add
add
adc
jle
add
add
sub
add
add
mov
adc
movs
sub
add
sub
add
push
pop
or
add
inc
jge
add
add
add
add
mov
adc
xchg
add
add
add
mov
adc
ja
(bad)
(bad)
fucomp
std
(bad)
jmp
fucom
std
(bad)
push
add
or
or
or
cmp
add
outs
cmp
add
outs
cmp
add
adc
push
mov
add
and
add
add
std
(bad)
(bad)
cmp
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
popf
add
add
add
push
push
or
adc
and
add
add
adc
pop
pop
push
push
and
add
add
sub
add
push
pop
push
sub
add
push
and
add
add
sub
sub
add
jle
add
add
xor
add
cmp
push
add
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
data16
(bad)
call
or
jnp
add
add
mov
add
add
(bad)
(bad)
jmp
xchg
and
adc
cmp
(bad)
(bad)
(bad)
add
frstor
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
or
or
add
cmp
add
jle
add
add
pop
sub
add
push
pop
push
inc
or
sub
add
add
cmp
add
jle
add
add
pop
push
add
sub
add
push
add
cmp
add
inc
or
add
add
mov
adc
mov
sub
add
mov
adc
js
(bad)
jmp
pop
and
add
mov
adc
imul
dec
and
add
add
(bad)
(bad)
jmp
push
add
push
pop
push
sub
add
and
add
add
(bad)
(bad)
jmp
ret
add
jnp
add
add
and
add
add
add
mov
adc
and
(bad)
jmp
add
add
add
mov
adc
adc
(bad)
(bad)
(bad)
std
(bad)
jmp
(bad)
std
(bad)
push
add
jo
daa
add
or
movlps
jb
add
jo
cmp
add
or
sub
add
or
push
and
add
add
sti
(bad)
(bad)
cmp
std
(bad)
call
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
or
add
pop
add
or
add
add
pop
push
add
mov
add
lea
add
add
or
jne
add
adc
or
add
add
adc
add
or
and
adc
sub
inc
add
push
add
cmp
shr
add
push
and
add
add
(bad)
(bad)
jmp
inc
add
push
pop
pop
sub
add
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
xor
add
jo
adc
mov
add
add
(bad)
(bad)
jmp
xchg
jb
add
jo
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
adc
add
add
mov
adc
in
(bad)
(bad)
(bad)
frstor
fstp
sub
inc
xchg
add
add
add
jb
add
cmp
add
lods
add
add
add
add
add
add
add
jne
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
iret
add
add
adc
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
cmp
cmc
or
cmp
cmc
or
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
jle
xor
aad
int
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
aam
add
aam
add
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
loope
push
pop
and
jle
pop
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
or
add
jne
add
add
add
and
xor
dec
xchg
mov
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
jle
add
add
pop
push
add
push
add
add
pop
push
add
and
add
and
add
and
push
pop
push
sub
add
push
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
adc
xor
add
add
add
add
and
sbb
and
sbb
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
mov
outs
xor
mov
outs
xor
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
pop
add
add
add
add
inc
(bad)
mov
mov
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
sbb
add
push
add
or
push
and
add
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
jb
outs
addr16
add
add
add
add
push
push
add
add
adc
add
and
dec
inc
add
add
add
mov
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
sub
add
inc
add
add
add
add
add
cmp
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
or
push
add
add
add
rol
outs
add
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
cdq
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
enter
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
or
adc
add
adc
cmp
or
adc
add
adc
cmp
add
add
add
add
add
add
pop
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
cmp
cmp
cmp
add
add
cmp
cmp
cmp
add
add
inc
add
inc
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
cmp
cmp
cmp
add
add
inc
add
inc
add
pop
add
pop
add
pusha
add
bound
fs
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
xchg
add
add
test
add
add
or
pop
add
sub
add
add
add
add
add
add
or
or
je
add
add
or
or
les
add
add
add
add
add
add
enter
add
xchg
dec
add
add
add
xor
add
add
add
add
add
add
or
add
test
add
add
or
add
aam
add
add
xchg
add
add
aam
add
add
xchg
add
add
xor
add
add
add
add
pushf
cmp
add
add
add
add
cmp
sbb
add
add
add
add
add
add
add
cmp
add
adc
xor
add
add
xchg
sbb
mov
adc
nop
add
add
sbb
adc
les
add
add
add
adc
lods
inc
add
add
or
adc
cld
inc
add
add
or
adc
dec
inc
add
add
or
add
pushf
inc
add
add
or
add
in
inc
add
add
xchg
add
add
jl
add
add
or
push
add
dec
add
add
or
push
add
add
add
add
pop
add
add
add
xchg
sbb
mov
pop
add
sbb
add
add
add
dec
add
add
xchg
or
add
test
add
xchg
or
add
aam
add
add
xchg
or
add
and
add
add
xchg
or
add
mov
add
add
add
add
add
add
or
sbb
cwde
push
add
add
or
sbb
call
add
add
add
add
add
xchg
sbb
mov
sbb
push
add
add
add
add
add
add
push
add
add
add
add
ins
push
add
add
sbb
add
push
add
add
add
sbb
push
push
add
add
or
sbb
movs
push
add
add
or
sbb
hlt
push
add
add
add
add
ins
pop
add
add
or
pop
add
or
pop
add
add
add
or
and
pop
pop
add
add
or
and
lods
pop
add
add
add
and
inc
pop
add
add
or
and
nop
pop
add
add
or
and
loopne
add
add
xchg
sbb
mov
and
add
add
aaa
add
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
inc
add
inc
add
push
add
push
add
pop
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
inc
add
inc
add
add
adc
dec
add
add
add
or
and
dec
add
add
add
or
xor
dec
add
add
add
or
inc
add
or
dec
add
or
push
add
or
pop
add
verr
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
aas
add
add
add
add
add
add
add
aas
add
add
add
fld
in
outs
add
add
add
jno
dec
add
add
add
add
add
add
mov
mov
add
aas
add
jnp
aas
add
add
mov
adc
dec
add
add
mov
add
add
add
add
add
add
add
add
mov
aas
add
add
aas
add
pop
add
add
ja
rol
inc
add
push
add
jle
fld
dec
add
add
add
fild
dec
add
add
add
dec
add
add
dec
add
add
add
inc
add
add
or
add
add
add
add
or
add
pop
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
sti
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
adc
add
imul
add
add
push
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
add
add
and
add
inc
add
add
pusha
add
add
add
add
add
mov
add
add
add
rol
push
add
add
add
add
loopne
imul
add
push
imul
add
imul
add
add
pop
imul
add
pop
imul
add
imul
add
add
add
pop
imul
add
or
push
add
or
push
add
add
add
add
add
add
add
add
xor
xor
aas
add
push
add
pop
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
clc
add
add
add
add
clc
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
dec
add
jb
popa
ins
add
ins
outs
jb
push
je
gs
ins
add
popa
add
imul
jb
jns
dec
inc
imul
ins
add
jo
jae
add
je
add
arpl
je
outs
outs
add
jb
outs
add
imul
jno
popa
ins
imul
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jo
jns
dec
outs
je
xor
push
outs
push
je
imul
ins
popa
je
outs
jo
dec
outs
gs
popa
ins
imul
gs
outs
add
outs
arpl
add
ins
jo
gs
imul
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
je
add
je
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
je
inc
outs
je
jns
outs
imul
xor
add
imul
imul
gs
jb
popa
jns
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
outs
jb
push
js
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
inc
pop
xor
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
pop
xor
push
add
ins
add
inc
add
outs
jb
push
cs
jae
jne
arpl
add
add
pop
add
punpckhwd
popa
add
add
jne
outs
add
adc
ins
add
jne
add
ins
add
add
ins
add
add
pcmpeqw
jbe
imul
popa
add
add
outs
add
add
ins
add
ins
add
add
jb
add
add
add
xor
jge
and
jnp
xor
jge
and
add
jne
data16
add
outs
add
jne
add
or
jb
popa
add
push
add
imul
jo
outs
add
bound
ja
jb
imul
bound
add
push
add
add
imul
add
imul
jne
imul
popa
add
add
imul
add
ja
outs
add
sub
popa
add
jb
ins
add
popa
add
cmp
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
das
add
or
jae
outs
add
jne
add
js
outs
add
outs
add
je
imul
add
popa
add
imul
jne
imul
pop
add
data16
jne
ins
add
jnp
xor
jge
and
jnp
xor
jge
and
add
push
imul
add
jnp
xor
jge
and
add
sub
add
je
imul
outs
add
add
imul
add
push
add
add
imul
popa
add
add
add
outs
add
add
pop
add
adc
ins
add
jb
imul
bound
outs
add
add
add
or
outs
add
imul
push
add
imul
add
imul
add
outs
add
jae
add
popa
add
add
ja
jne
outs
add
ins
add
imul
xor
jge
and
add
popa
add
add
add
outs
add
add
sbb
xor
jge
pop
add
xor
jge
cmp
jnp
xor
jge
pop
add
adc
bound
imul
outs
add
jae
add
jb
imul
popa
add
and
jae
jne
jbe
jb
imul
cmp
add
and
jnp
xor
jge
and
add
sub
add
jo
jae
add
sbb
xor
jge
and
jnp
xor
jge
pop
add
xor
jge
and
add
ins
add
add
jb
jo
add
or
xor
jge
jl
add
imul
add
pop
add
xor
jge
jl
add
and
add
add
add
jb
outs
add
outs
add
pop
popa
add
jne
push
outs
add
outs
add
js
jae
popa
add
adc
add
add
add
jne
jne
add
jae
jb
jne
push
add
add
add
arpl
popa
add
outs
add
add
or
add
je
outs
add
adc
jb
outs
add
outs
add
ins
add
je
add
pop
add
xor
jge
add
dec
add
punpckhwd
add
bound
jb
imul
add
jne
jae
ins
add
add
add
add
add
or
outs
add
js
add
cmp
repnz
loop
dec
mov
jecxz
jmp
push
push
add
add
or
and
add
add
push
add
add
add
and
or
and
add
and
sbb
push
push
sbb
add
push
add
add
and
push
push
add
push
push
sbb
push
add
push
push
push
push
pop
and
add
inc
adc
add
push
push
push
pop
add
push
sbb
sbb
and
sbb
sbb
adc
add
jno
add
push
push
sbb
add
adc
push
push
push
push
push
add
push
add
sbb
add
adc
add
add
ins
push
and
add
adc
and
sbb
adc
or
add
or
sbb
adc
and
sbb
push
push
add
add
and
movs
add
add
push
or
add
and
and
xor
sbb
mov
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
push
or
or
and
or
push
add
push
or
push
sbb
add
sbb
and
or
add
or
and
sbb
and
add
add
sbb
add
add
push
push
add
add
sbb
add
sbb
push
sbb
add
or
add
add
sbb
or
add
lea
xchg
push
add
add
adc
push
and
sbb
and
push
add
add
push
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
imul
add
or
add
xor
xor
xor
xor
add
add
adc
jo
jb
addr16
and
xor
xor
add
xor
cmp
arpl
sub
sub
sub
sub
arpl
xor
xor
add
add
das
dec
push
dec
push
push
push
pop
push
pop
push
pop
pop
push
push
pop
push
pop
pop
pop
gs
bound
xor
xor
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
or
pop
sbb
or
pop
add
or
dec
adc
push
or
sbb
or
add
ins
adc
sbb
push
sbb
sbb
add
or
or
or
sbb
adc
or
or
add
or
sbb
add
add
add
or
pop
add
sbb
or
pop
or
sbb
or
or
or
add
or
pop
add
or
push
pop
or
or
push
or
adc
add
adc
and
add
and
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
pop
cmc
mov
add
add
retf
add
add
arpl
popa
add
outs
add
add
add
and
add
add
ins
push
add
or
jmp
and
mov
into
out
pusha
xor
xor
xor
cmp
in
out
jecxz
inc
xor
leave
(bad)
sar
xor
mov
jae
sub
and
mov
das
mov
out
xchg
in
mov
in
mov
mov
jmp
jo
ret
gs
js
push
xchg
push
mov
aas
adc
or
pop
xor
add
mov
xchg
mov
mov
je
sbb
push
(bad)
xor
mov
add
xchg
dec
mov
test
inc
or
ds
mov
mov
popa
repz
enter
cmp
cmp
movs
es
imul
sub
jb
dec
push
xchg
xor
pop
push
dec
jne
push
outs
sub
inc
mov
mov
aas
rcl
mov
jno
loop
cs
pop
or
or
xor
push
add
fldcw
outs
mov
jge
push
(bad)
mov
lea
sub
sar
xchg
pushw
dec
arpl
add
sbb
and
pop
jbe
mov
jnp
dec
xor
mov
xchg
out
jnp
pop
inc
ins
push
loopne
push
add
cmp
cmps
mov
or
mov
pop
aas
xor
jns
cmp
cmps
cmp
out
mov
aad
add
retf
adc
(bad)
and
add
or
sub
clc
out
xchg
fld
pop
mov
dec
fst
mov
(bad)
jbe
outs
dec
repnz
in
rcl
or
unpcklps
jmp
push
rol
imul
pop
es
and
aam
loopne
dec
jecxz
lahf
inc
pop
adc
imul
pushf
pop
mov
ins
aad
cmp
dec
sbb
or
xchg
inc
rol
int
out
mov
xchg
fisttp
ss
xchg
cmp
ret
sar
test
push
outs
cmps
push
ins
(bad)
aad
loope
cmp
fcom
lock
loop
sbb
pop
push
mov
fwait
inc
div
jp
mov
loop
es
or
(bad)
out
pop
aad
pop
mov
xchg
popa
xor
push
stos
mov
mov
xor
and
mov
cmps
jb
mov
scas
js
ror
movs
sbb
lods
dec
mov
enter
mov
mov
cmp
jnp
inc
daa
std
mov
mov
imul
mov
in
push
mov
xor
cs
push
pop
push
mov
pop
shr
inc
and
add
shr
dec
shr
or
daa
pop
cmp
out
das
in
mov
xchg
imul
mov
jecxz
dec
or
or
sbb
(bad)
in
lahf
ret
sub
sub
jo
out
add
adc
jbe
movs
test
outs
mov
dec
push
sbb
out
or
int
adc
sub
mov
outs
lahf
adc
gs
(bad)
enter
aad
xchg
scas
adc
into
and
jne
or
inc
in
int
ss
mov
jmp
add
inc
and
or
jle
mov
fist
ins
pop
add
jge
fdiv
popf
mov
inc
mov
js
xor
sbb
je
es
mov
mov
std
fst
repnz
xor
fcomp
hlt
pop
dec
or
pusha
jae
mov
and
dec
lahf
push
xchg
fs
ret
xor
pop
pop
adc
scas
mov
sbb
sub
mov
mov
sti
out
push
xchg
push
jno
mov
ins
sub
das
(bad)
jmp
push
movs
pop
cmps
pop
loopne
outs
xor
adc
or
mov
leave
jmp
fstp
adc
and
pop
cmp
mov
sar
pushf
fwait
call
imul
mov
cwde
mov
xchg
push
cmps
jg
jp
lea
aad
pop
shl
inc
mov
xor
jle
hlt
pop
lods
lods
jg
xor
pop
imul
mov
xor
int3
mov
aam
test
loopne
mov
adc
mov
movs
mov
pop
sbb
inc
mov
out
push
sub
dec
dec
jae
xor
shl
mov
and
pop
inc
xchg
or
enter
aad
inc
jb
ins
add
jmp
cli
push
pop
mov
stos
repz
(bad)
pop
cs
push
mov
repz
mov
mov
mov
xor
pop
enter
cwde
add
in
adc
jle
push
mov
xchg
lahf
pop
adc
data16
in
cmp
addr16
sbb
xlat
mov
jb
jo
outs
fs
cmp
cmp
fimul
mov
aam
ja
das
shr
mov
dec
jle
inc
xlat
adc
pop
(bad)
sub
out
pop
std
ja
mov
shl
mov
popa
aas
sub
mov
xor
jge
sub
mov
imul
rcr
inc
xor
fs
into
(bad)
cld
xchg
sbb
cmp
cmp
add
mov
in
sub
xor
inc
call
cld
fbstp
mov
xchg
mov
add
aam
cmp
les
popa
test
popa
data16
sub
mov
mov
sub
xchg
sbb
repnz
daa
dec
add
and
adc
sbb
xchg
shr
outs
mov
call
faddp
push
inc
sahf
and
add
pop
call
imul
xchg
pop
push
jecxz
cdq
(bad)
gs
retf
inc
xlat
mov
outs
jmp
push
jmp
or
mov
inc
mov
pop
cwde
les
xchg
repz
jnp
aas
sub
pop
sahf
add
fwait
or
inc
xchg
repz
fldenv
jae
mov
pushf
outs
push
xchg
scas
cmp
lds
movs
or
push
das
pop
cmp
inc
sbb
inc
fidiv
sub
dec
jno
inc
pusha
sub
fsubr
scas
fwait
in
pop
jns
ret
pop
jg
mov
in
fwait
pop
add
mov
push
xlat
in
fadd
cmp
sub
inc
jno
add
mov
enter
loop
cmp
test
xchg
push
adc
inc
test
ror
jno
cdq
mov
jb
add
pop
cmp
add
ret
arpl
mov
lods
lea
popa
movs
jnp
add
addr16
cmp
jbe
sbb
dec
adc
scas
fwait
(bad)
dec
test
mov
not
pushw
cli
jb
loopne
cmp
inc
mov
jmp
lods
mov
hlt
mov
inc
lock
jmp
xor
adc
sub
sbb
pop
in
aad
or
xor
and
lds
cmc
repz
daa
and
popa
pop
cmp
jl
or
in
xor
sar
(bad)
inc
inc
push
inc
or
loope
and
(bad)
sub
jle
test
rol
mov
call
push
dec
pop
mov
jne
sub
or
outs
loopne
in
loop
popa
mov
xchg
std
sahf
sahf
sub
sub
cmp
mov
shl
repz
lock
cmp
repnz
cmp
test
fbld
sub
pop
mov
aas
data16
adc
gs
pop
pop
cmp
push
inc
xchg
cmp
dec
scas
(bad)
test
pop
pushf
outs
push
pop
mov
jl
push
pop
cmp
push
xor
sbb
dec
mov
sbb
sub
mov
jmp
mov
pop
mov
call
sti
push
rcr
aam
add
cwde
retf
and
js
push
scas
imul
cwde
pop
jmp
inc
mov
aaa
shr
mov
retf
sbb
dec
int3
or
fs
outs
int
add
test
in
fadd
mov
adc
sbb
jno
or
adc
mov
aad
icebp
shl
xor
inc
(bad)
mov
mov
jo
fsubr
aam
iret
add
out
mov
rep
iret
imul
inc
mov
pop
mov
cmp
xchg
fbstp
sub
cwde
fxch
mov
aam
fst
loopne
push
and
sub
ins
in
in
xor
push
aas
dec
jb
stos
(bad)
mov
jecxz
scas
shl
cli
mov
bound
pop
sbb
xor
push
aam
enter
fwait
lods
mov
xchg
and
xor
rcr
sti
fist
adc
sar
xor
popf
mov
sub
mov
jmp
das
mov
retf
sub
cs
daa
pop
test
cmp
gs
(bad)
sti
xchg
inc
(bad)
cli
xchg
pop
sub
fistp
ins
mov
mov
dec
push
scas
fldenv
imul
cmp
xchg
lock
fnstenv
movs
cmc
scas
jmp
dec
in
sbb
push
mov
cmps
or
jae
or
sub
into
mov
es
jmp
or
xor
pop
pop
sbb
add
and
xchg
repnz
and
dec
ret
sahf
mov
jns
sub
jb
pop
and
xor
dec
jecxz
jecxz
test
cmp
xor
jmp
aas
in
int
jns
cmps
ficomp
and
dec
rcl
daa
dec
mov
add
and
stc
neg
loope
stc
xlat
cmps
rcl
xchg
or
mov
mov
mov
inc
mov
push
inc
sbb
adc
xchg
sub
jno
sub
int
mov
pop
inc
jle
push
ins
and
outs
xchg
imul
(bad)
in
adc
leave
mov
(bad)
dec
pop
mov
mov
scas
das
cmps
in
out
cli
mov
push
out
scas
rol
and
ror
mov
adc
mov
jne
dec
jmp
push
rcl
xchg
stos
pusha
xchg
ins
dec
xchg
in
ins
jecxz
movs
mov
int3
push
dec
xor
dec
add
sub
inc
mov
adc
popf
xor
mov
jbe
mov
movs
int
push
mov
ror
xchg
stos
pop
(bad)
dec
ficomp
fxch
fsub
fist
(bad)
(bad)
(bad)
jl
into
push
xor
movs
and
popa
fild
mov
mov
lds
push
(bad)
xlat
ins
dec
adc
adc
cmps
in
sbb
ret
push
mov
imul
cli
fs
popf
mov
push
lods
add
xchg
adc
sbb
mov
sti
stos
mov
jns
hlt
jb
mov
xchg
popa
jbe
push
rcl
stos
sti
cmp
hlt
add
mov
sbb
dec
mov
mov
or
mov
mov
ja
jecxz
dec
cmp
xchg
or
push
add
(bad)
shl
in
pop
enter
mov
fldenv
sub
sub
rol
leave
add
mov
push
fidivr
jo
sbb
cmp
sub
push
shl
sub
stos
mov
imul
xchg
es
cld
push
cmp
pop
xchg
push
dec
or
sub
loopne
repz
sub
sub
int3
pop
clc
mov
outs
fwait
xchg
(bad)
std
or
lods
int
sub
adc
xlat
mov
jmp
pushf
pop
mov
pop
out
mov
bound
add
jge
adc
stos
cld
and
mov
dec
hlt
cwde
test
cmp
add
mov
push
xchg
mov
mov
test
pop
imul
add
lds
std
test
jle
icebp
jno
and
shl
mov
pop
mov
inc
call
fld
rcl
mov
inc
adc
dec
stos
popf
scas
(bad)
fild
loop
pop
xchg
(bad)
in
popa
adc
(bad)
jle
adc
aas
les
mov
repnz
shl
xchg
push
cmp
int
out
clc
repnz
jnp
add
mov
out
adc
mov
inc
xchg
add
add
(bad)
fcom
rol
outs
inc
stos
xor
cmps
jg
push
push
scas
retf
pop
int
push
jnp
iret
push
movs
xchg
inc
xchg
addr16
and
repz
xchg
or
fs
push
aam
push
aam
push
sub
dec
sti
adc
jp
jmp
adc
mov
les
les
cmps
fsubr
repnz
into
xor
xchg
inc
cs
adc
pop
push
stc
std
xor
out
pop
sbb
sti
lods
or
enter
hlt
pop
xchg
mov
adc
loope
and
mov
jno
inc
es
dec
(bad)
(bad)
(bad)
xchg
ins
inc
(bad)
jns
jno
pushf
icebp
jge
xchg
bound
cwde
lods
xchg
jg
mov
or
push
aam
cmp
in
aas
adc
fld
mov
sbb
inc
inc
bound
iret
cmp
xchg
xchg
push
call
xor
rol
cdq
cmp
cmp
in
xor
fcmovb
jl
and
sbb
hlt
cld
jno
sub
fwait
jmp
push
stos
xchg
jne
mov
mov
sbb
lds
and
jg
ins
mov
fcmove
jmp
cmc
lds
jp
hlt
dec
mov
jmp
cmp
xlat
xor
daa
inc
test
les
mov
xor
cmovge
int3
lea
mov
bound
hlt
imul
inc
stos
jmp
sub
adc
sbb
pop
pushf
xor
out
mov
dec
adc
je
push
cmp
ss
jno
inc
rcl
ror
cmp
or
call
fbld
ins
pusha
inc
sub
mov
inc
fnstenv
fs
mov
in
inc
inc
sbb
mov
fdivr
push
jl
mov
mov
jno
push
pop
or
pop
test
iret
dec
out
push
ja
xor
or
sbb
mov
(bad)
pop
(bad)
mov
arpl
sahf
call
js
jle
or
or
retf
out
aam
fild
adc
xor
inc
outs
pop
pusha
sbb
inc
xor
inc
aaa
xor
mov
cld
mov
push
inc
cld
es
mov
cmp
or
loope
(bad)
cmp
dec
jge
pop
arpl
fxch
add
ss
pushf
adc
in
int3
xor
dec
mov
xchg
(bad)
push
mov
and
xor
ror
dec
cmps
jg
mov
and
(bad)
idiv
iret
ss
or
ficom
movs
or
mov
sbb
jg
dec
mov
clc
mov
movs
cdq
jmp
mov
mov
fmulp
and
lods
jg
pushf
sahf
imul
xor
test
adc
xlat
adc
mov
pop
adc
push
imul
in
and
xchg
mov
mov
pop
rcl
adc
pop
gs
push
cmp
xchg
push
sub
push
sbb
add
sub
fidivr
ss
je
mov
scas
mov
push
dec
jp
inc
mov
test
mov
loop
sub
add
(bad)
loopne
push
inc
mov
jmp
aaa
retf
es
xor
int
lods
dec
xchg
movs
adc
scas
sar
into
popa
imul
xor
int3
sub
gs
mov
or
les
xchg
add
jle
sbb
pushf
sub
fidiv
adc
cmp
bound
ret
add
(bad)
xor
push
les
es
fistp
mov
rcr
(bad)
aad
sbb
xchg
retf
(bad)
jl
inc
ret
sbb
mov
dec
and
leave
(bad)
fwait
outs
fwait
push
enter
jne
mov
scas
push
dec
aam
fisttp
sub
add
nop
stos
mov
mov
adc
mov
fsubr
je
pop
or
sar
pusha
fcomp
pop
mov
scas
imul
std
or
jo
add
stos
mov
ja
(bad)
push
inc
leave
jl
pop
test
ret
xchg
shr
fistp
dec
mov
mov
jmp
test
pop
push
jo
leave
fiadd
loope
into
xchg
xor
add
imul
jp
(bad)
add
dec
sub
push
test
xor
(bad)
test
push
cmp
out
std
mov
movs
adc
stos
nop
sub
mov
js
ss
adc
shl
xchg
sub
adc
mov
sbb
or
daa
inc
mov
jmp
lods
addr16
jmp
mov
mov
and
in
xchg
int3
push
clc
loop
dec
push
ins
fsubrp
(bad)
push
cmp
pop
and
loop
mov
bound
dec
movs
into
pop
in
popa
xor
(bad)
test
xor
ror
xchg
leave
pusha
pop
retf
jo
mov
ss
int
xchg
lahf
lahf
rcr
js
push
stc
sahf
call
dec
push
sub
into
jne
lds
cmc
pop
xchg
les
enter
and
int3
add
pop
ja
xchg
sub
and
cmp
nop
add
movs
call
push
div
or
inc
shl
out
stos
push
(bad)
call
cmp
pop
jne
mov
and
cs
jo
cwde
push
out
and
xchg
sub
movs
mov
jecxz
pushf
adc
fistp
daa
xchg
mov
adc
test
jge
jmp
int
aas
pop
scas
out
jbe
fwait
add
mov
inc
or
gs
shl
mov
jecxz
int
sbb
sti
je
test
shl
add
in
push
fldenv
ret
push
test
clc
push
push
or
dec
dec
icebp
hlt
shr
out
xchg
stc
out
mov
pop
or
stc
test
cmps
sbb
or
test
and
jno
and
dec
sbb
in
test
popa
dec
(bad)
fld
and
mov
cmps
dec
enter
xchg
jle
into
mov
mov
jmp
pop
enter
push
inc
xor
test
mov
sbb
movs
pop
fild
dec
and
inc
mov
pushf
mov
ja
sbb
adc
xor
je
retf
movsx
xchg
inc
cmc
cli
xchg
ret
mov
out
(bad)
xor
mov
xor
stos
bound
or
cmp
and
adc
jae
push
lea
cli
dec
retf
cmp
mov
jno
jl
das
sbb
mov
cmps
cs
das
or
pop
jl
xchg
and
push
xchg
add
pop
inc
loop
add
xchg
xor
fadd
ins
and
fisubr
call
add
xor
lahf
outs
cmp
(bad)
sub
retf
mov
pushf
jnp
das
dec
jmp
jmp
mov
call
adc
pop
into
icebp
cs
movs
push
dec
enter
sub
sbb
dec
jbe
mov
es
jb
mov
fstp
stc
aas
out
imul
out
jb
jl
pop
test
mov
div
pop
test
sti
aam
adc
add
ret
rcr
aam
jle
je
and
inc
mov
xchg
inc
pop
cmp
add
cmp
adc
adc
xchg
lock
sbb
jae
fsubr
push
(bad)
mov
stos
add
test
dec
mov
jb
repnz
cmp
ds
lahf
add
das
xchg
out
leave
push
mov
loopne
inc
lods
xchg
cdq
test
jmp
ins
add
and
pop
inc
aam
stos
lock
call
jae
mov
mov
add
sbb
dec
in
or
or
mov
mov
inc
inc
aad
jnp
push
or
ret
ja
mov
inc
cmps
outs
in
mov
imul
mov
and
jne
das
gs
test
cmc
or
ins
loope
push
clc
mov
fisubr
jns
ds
nop
in
dec
sbb
sub
xchg
mov
out
cmc
cmps
aad
xchg
dec
ror
or
sub
xor
sub
out
imul
shl
and
fs
(bad)
call
lods
hlt
outs
test
out
scas
in
jl
and
add
aam
pop
xor
cmp
xchg
xor
imul
repnz
sbb
movs
pop
ds
mov
push
les
push
bound
cmp
pop
cmc
(bad)
enter
jecxz
sub
push
cmp
shl
add
or
jmp
dec
jmp
aad
add
jge
lods
sub
xchg
out
ds
stos
jnp
ror
xchg
in
and
icebp
in
jmp
mov
cmp
sar
mov
cwde
hlt
jmp
adc
inc
iret
fcom
sbb
call
xchg
icebp
mov
jmp
(bad)
in
js
sbb
daa
xor
popf
movs
xor
push
call
shl
repz
or
loope
ja
les
(bad)
mov
test
js
scas
jb
or
mov
ret
or
call
fld
scas
jbe
cs
jno
xchg
jmp
test
pop
mov
pop
and
imul
and
arpl
adc
push
ret
inc
and
hlt
mov
pop
fsub
mov
and
or
int
sub
and
cmp
and
jle
xlat
lds
stos
out
pop
and
add
cmp
dec
aad
into
pop
ror
rcr
lea
jg
xor
sbb
mov
mov
sbb
cdq
cld
and
mov
adc
and
in
mov
push
sahf
xchg
adc
push
and
and
neg
jmp
aad
iret
push
and
and
lods
pushf
lds
lahf
int3
mov
ror
lahf
lods
dec
cmp
push
push
adc
add
jne
mov
addr16
cmp
push
cmps
daa
frndint
lds
retf
retf
loop
cmp
fisttp
mov
and
and
aam
adc
(bad)
popa
mov
jle
dec
bound
pop
out
loope
adc
in
inc
pop
sbb
call
push
pcmpgtb
mov
xchg
xchg
hlt
cld
jle
xor
pop
out
aaa
hlt
aaa
aaa
mov
mov
pop
add
push
int
pushf
dec
mov
sub
adc
xor
or
cmp
sub
push
cmp
mov
(bad)
repnz
stos
jnp
das
add
js
aaa
inc
idiv
fwait
sub
hlt
add
pcmpgtw
push
fmul
mov
das
and
push
mov
or
in
cmps
pop
xchg
ins
xchg
pop
add
add
or
inc
es
adc
add
ss
ds
and
dec
mov
sbb
cs
cmp
or
movs
adc
mov
je
and
cmp
lods
pusha
fisttp
add
fs
loop
mov
cmc
jp
movs
push
add
nop
mov
mov
inc
ret
dec
fsub
inc
mov
js
lods
shl
repz
dec
mov
jle
mov
adc
shr
adc
cmp
iret
aas
mov
push
mov
pop
ret
lods
jl
jge
xchg
iret
xchg
in
jno
jae
adc
push
mov
mov
cwde
repz
push
jg
jl
and
(bad)
pop
or
xor
mov
add
mov
sub
cmp
aad
retf
mov
pop
enter
sbb
movs
or
inc
jns
not
test
int3
pop
cmp
mov
xor
inc
mov
xor
ror
and
ficom
outs
sar
dec
call
lahf
cmps
xchg
cmp
cwde
jecxz
aad
lea
and
sub
mov
movs
or
out
xchg
sbb
mov
xchg
cs
adc
repnz
push
ret
cmc
repnz
mov
(bad)
mov
pop
or
jp
mov
sbb
push
mov
leave
call
in
leave
pop
test
xor
sbb
nop
mov
push
ret
or
and
std
fistp
mov
xchg
xor
fs
sbb
mov
shr
sub
mov
cmp
lahf
daa
sub
cwde
iret
and
push
push
out
sbb
aam
jmp
mov
enter
add
pop
cli
fucomip
iret
(bad)
sub
xchg
mov
xor
or
iret
jno
inc
mov
call
adc
mov
sbb
loop
fstp
sub
and
pop
sub
mov
cwde
hlt
lea
jg
cmp
inc
imul
retf
dec
cwde
or
stos
aad
sar
icebp
into
sti
xchg
fbstp
sbb
imul
nop
call
sub
add
scas
pop
mov
test
add
fs
or
cld
lods
xor
idiv
aam
inc
jg
call
pop
out
push
stc
imul
stos
jmp
and
mov
(bad)
fist
stc
xor
pop
push
sbb
dec
cli
inc
sti
sbb
dec
and
and
loope
cdq
mov
adc
loopne
pop
pop
adc
(bad)
fsubr
imul
or
loop
cmp
nop
xor
popf
popf
fcomip
fnsetpm(287
dec
rcl
inc
loope
and
sub
sub
sbb
mov
fcmove
stos
inc
test
iret
jns
xor
in
pop
into
daa
jg
pop
jl
mov
mov
or
push
add
scas
jno
add
and
push
mul
ret
shufps
test
pop
xchg
(bad)
xor
mov
cmps
or
jnp
sub
neg
dec
mov
or
(bad)
aad
add
inc
push
adc
inc
push
cmp
mov
pop
lea
rol
int
mov
test
sub
nop
out
data16
cmp
aaa
adc
push
scas
pushf
xchg
pop
(bad)
push
add
int
dec
jmp
cli
add
push
popa
xchg
add
jle
ins
mov
arpl
lds
fwait
and
leave
sbb
dec
out
bound
dec
jmp
imul
inc
out
push
enter
push
stos
pop
jecxz
loopne
sahf
push
xchg
pop
fwait
ins
dec
out
loopne
pop
push
fadd
jecxz
aad
out
inc
sbb
push
sbb
sub
addr16
mov
xchg
fcmovbe
test
fisttp
jmp
mov
jp
mov
push
test
loope
call
inc
fs
push
(bad)
retf
popf
xor
bound
jno
mov
pop
mov
mov
mov
or
js
sti
(bad)
pushf
push
dec
or
jge
(bad)
aaa
pop
adc
movs
cmp
pop
mov
sub
ret
aam
mov
sahf
icebp
adc
push
mov
mov
shr
fbstp
cmp
sbb
scas
adc
call
pop
aaa
pushf
retf
mov
sbb
dec
pop
jmp
test
cmc
xchg
int
movs
out
loop
inc
loopne
or
mov
(bad)
scas
sahf
movs
in
xlat
inc
mov
test
gs
fld
xchg
and
lock
popf
pop
or
int3
cld
pop
lock
call
fidivr
and
jmp
sti
test
inc
jmp
xor
fadd
and
push
and
aaa
loop
fucomp
fld
xor
jmp
mov
shl
dec
add
nop
push
mov
fld
leave
jne
sbb
in
stos
push
jg
add
xor
stc
out
daa
js
ins
pop
xchg
inc
imul
shl
test
mov
ds
out
xchg
mov
dec
mov
cmps
stos
jae
push
mov
adc
aaa
pusha
stos
popa
sar
jae
fnstsw
push
push
imul
mov
or
mov
(bad)
and
sub
rcl
pop
dec
mov
xor
retf
sbb
dec
jmp
push
imul
pop
jge
xor
push
outs
mov
jo
and
imul
or
aas
and
idiv
jae
mov
stc
pushf
inc
pop
inc
mov
rcr
dec
into
int3
inc
add
addr16
push
fwait
cs
mov
mov
ret
fnstsw
pop
je
int3
mov
ret
test
arpl
add
ins
mov
gs
and
mov
mov
loopne
inc
adc
cmc
hlt
sbb
pusha
call
dec
jae
inc
lock
push
xchg
out
xor
dec
cmp
es
xchg
call
mov
xlat
cmp
mov
pop
and
push
hlt
scas
and
jl
xor
out
repnz
in
(bad)
in
adc
mov
dec
loopne
jne
sbb
aam
mov
xor
enter
(bad)
or
out
rol
ret
mov
int
xchg
jg
aam
pushf
pop
push
jp
lock
inc
ins
push
repz
mov
and
mov
sbb
jno
sub
movs
or
shl
xor
jnp
push
icebp
cmp
inc
mov
or
pop
and
adc
neg
xor
mov
into
add
xchg
scas
mov
adc
sub
mov
cmp
iret
idiv
cmp
cmps
sub
std
bound
loope
bound
mov
nop
iret
dec
jno
hlt
xchg
arpl
adc
hlt
rcr
popf
out
push
movs
add
jg
sbb
adc
loopne
dec
pop
jnp
dec
adc
imul
xchg
ds
dec
inc
sub
fisubr
xchg
push
mov
jb
shl
repz
retf
sbb
mov
add
mov
inc
pop
push
push
rol
shl
shr
int3
rol
mov
ins
jae
push
xchg
inc
enter
mov
test
push
jl
xchg
cmp
xlat
push
sti
inc
jge
sub
push
fs
sbb
popf
repnz
mov
fstp
jb
loopne
push
push
mov
(bad)
int3
aaa
test
inc
into
imul
jnp
cmp
and
push
out
inc
xlat
and
inc
mov
dec
repz
xchg
jmp
add
push
jbe
mov
lds
sbb
jle
es
lea
aad
fmul
js
xlat
xchg
les
cdq
inc
stc
ja
dec
nop
cmp
adc
push
push
fwait
fwait
inc
xchg
fwait
aam
add
stc
mov
not
adc
pop
aam
stos
push
sbb
mov
sbb
out
jge
les
sti
mov
pop
(bad)
lock
scas
mov
dec
jecxz
dec
fxam
push
pop
ret
push
and
(bad)
fisub
mov
or
add
fsub
inc
push
jmp
and
aad
scas
push
vpsubsw
neg
gs
addr16
(bad)
cmc
mov
xlat
mov
jnp
mov
push
xor
push
hlt
mov
out
and
loop
jne
lock
inc
int
fsubr
loopne
inc
fimul
gs
mov
mov
adc
push
jg
or
popa
jns
sub
mov
addr16
pop
push
mov
or
or
movs
das
pop
mov
xor
mov
ret
pop
loop
fdivrp
gs
pop
outs
cmp
push
push
div
pushf
lods
push
rol
(bad)
ffreep
push
bound
sub
or
div
cmc
push
outs
aad
cld
pop
cmp
out
outs
call
pusha
mov
stc
add
add
jg
loop
lahf
shr
loop
scas
cmps
and
xor
retf
popa
out
cmps
fmul
push
push
stos
call
in
nop
cli
ret
cwde
mov
pop
bound
je
neg
mov
mov
test
das
mov
jmp
sub
xchg
jne
fidivr
test
fisub
int
push
neg
pop
arpl
inc
sbb
arpl
scas
or
jns
adc
pop
sbb
cmp
fsub
push
inc
mov
mov
scas
add
dec
popa
or
add
mov
iret
rol
(bad)
out
scas
mov
xchg
xchg
enter
pop
dec
add
repnz
les
push
in
jns
mov
cmp
adc
or
push
out
cli
fsub
popa
enter
(bad)
test
add
sbb
cmp
pop
loop
inc
push
jno
ins
jge
lods
adc
out
sbb
test
in
xchg
test
ss
cmp
pop
and
cmp
sbb
push
(bad)
cwde
cmp
push
inc
or
(bad)
and
outs
movs
dec
js
ins
into
dec
push
sar
jg
or
jo
lods
sub
mov
fmul
xchg
or
push
pop
cmp
push
inc
or
ret
iret
fwait
xor
daa
xchg
ja
add
retf
(bad)
cmp
mul
and
cmp
hlt
dec
cwde
in
adc
push
call
inc
mov
fcomp
push
mov
int3
mov
inc
call
sbb
jge
icebp
lods
rcr
cmp
pop
cld
inc
ret
movs
into
in
fwait
inc
rcl
or
push
mov
loop
add
cs
jne
and
mov
in
jno
push
jl
and
imul
not
int3
inc
dec
mov
push
les
pop
mov
ror
mov
mov
add
push
and
addr16
mov
std
mov
test
add
adc
cmps
push
mov
fdivr
jmp
or
hlt
mov
cdq
lmsw
sahf
icebp
and
cmc
imul
div
mov
mov
rcl
aad
and
movs
les
shl
xor
popf
retf
call
mov
sahf
push
daa
cmps
mov
in
push
push
cdq
mov
rol
mov
nop
cwde
sub
pop
in
add
sbb
fmul
fs
xchg
cmp
sar
fmul
(bad)
aam
push
jns
aam
fdiv
mov
nop
xchg
adc
pop
xor
mov
(bad)
nop
(bad)
jmp
lds
arpl
mov
sti
and
push
rcr
add
push
add
(bad)
push
cmc
sbb
into
shl
fwait
or
and
stc
mov
jge
xor
aas
mov
jg
mov
rcr
mov
cmps
push
push
fsubr
and
add
mov
mov
loopne
leave
pushf
push
mov
pop
mov
mov
inc
ja
cmp
ins
mov
mov
mov
xchg
push
jge
aad
imul
loopne
sub
int3
jle
cmovne
repz
iret
push
dec
or
jecxz
adc
imul
scas
adc
aaa
mov
pusha
jb
addr16
(bad)
aam
or
sbb
pop
loopne
fmulp
loope
fisubr
nop
das
inc
popf
jle
xor
or
jp
sbb
dec
call
jge
jmp
push
call
imul
or
daa
xchg
adc
cmp
int3
ja
xchg
jns
sbb
xchg
test
ret
icebp
(bad)
retf
icebp
push
or
push
test
shr
jge
jmp
add
aad
pop
int3
jl
xor
pop
in
fcom
dec
dec
add
cmp
or
add
stos
(bad)
ss
push
outs
es
lahf
inc
rcl
sub
test
jo
fs
retf
or
add
fisttp
les
xor
push
mov
mov
jmp
cmovs
adc
inc
retf
dec
mov
les
sbb
pop
cmp
les
in
test
inc
sbb
ds
mov
test
pop
mov
bound
push
repz
loop
rol
enter
add
fs
out
adc
push
in
aam
xchg
cmps
jno
and
mov
fbstp
popa
movs
std
mov
les
mov
xchg
sub
movs
xlat
push
sbb
or
jl
jmp
add
jmp
add
push
and
push
mov
jp
and
adc
pop
ror
fs
jecxz
add
lea
es
mov
xchg
imul
ret
xchg
sub
push
loopne
and
and
mov
mov
pop
leave
inc
jns
mov
cmps
cmp
push
fld
popa
jle
call
sub
cli
pop
scas
in
add
pop
out
jbe
push
mov
cdq
rcr
call
sahf
data16
push
pop
xchg
and
popf
mov
lahf
add
jns
add
(bad)
jbe
mov
and
jo
jmp
mov
imul
dec
cli
je
pop
mov
cmp
or
xchg
jecxz
ss
jb
ins
cmps
lea
xor
or
pop
bound
xchg
inc
xchg
adc
ret
loop
or
call
imul
adc
pushf
int
xor
adc
bound
(bad)
sbb
push
mov
dec
push
pop
in
ss
call
mov
push
nop
push
add
mov
es
loope
jns
jmp
pop
cmp
gs
fadd
dec
cs
imul
cmps
inc
sar
retf
pop
jecxz
lods
mov
push
outs
mov
pop
mov
sbb
xchg
ins
xchg
dec
jp
mov
jae
cwde
lahf
xchg
adc
out
stc
push
jb
ins
cmps
and
cmp
cmps
imul
es
mov
test
mov
mov
push
cli
mov
xor
leave
mov
imul
pop
cwde
leave
out
push
add
and
mov
mov
xor
cs
cli
sahf
mov
lods
pusha
mov
or
xor
push
xor
mov
mov
mov
xchg
push
inc
das
pop
cs
mov
outs
call
push
ret
xchg
mov
std
mov
or
mov
rcr
inc
adc
call
(bad)
cdq
mov
in
cmc
and
xor
mul
shr
dec
pop
jo
jno
adc
jmp
nop
xchg
or
cdq
ret
mov
enter
or
(bad)
xchg
xchg
inc
push
jmp
xor
add
push
or
adc
ins
add
div
pop
mov
push
and
fdivr
(bad)
imul
xchg
add
mov
pop
(bad)
je
mov
xor
mov
xchg
cmp
rcl
nop
(bad)
cmp
cmps
arpl
imul
enter
mov
sub
xchg
aas
std
movs
inc
sub
aam
xor
pushf
fs
mov
add
in
out
call
in
xchg
lods
adc
std
dec
xor
mov
stos
xchg
adc
cmp
xor
ins
add
and
enter
movs
int
and
and
xor
(bad)
push
and
inc
in
inc
jp
adc
mov
or
movs
pop
mov
push
movs
ror
sbb
xor
test
add
push
call
scas
pusha
push
lods
mov
ds
and
sbb
mov
pop
daa
es
(bad)
call
mov
cmp
jmp
xor
or
dec
idiv
jno
cdq
cmp
test
lock
jno
and
push
jne
pop
cmp
fisttp
call
bound
out
neg
adc
sub
mov
mov
or
faddp
shl
ins
aam
pop
push
pushf
pop
pop
pop
xchg
adc
pop
inc
sbb
pop
retf
jmp
xchg
sbb
sbb
adc
mov
call
mov
ret
push
push
push
xchg
fadd
sahf
xor
sbb
fadd
pusha
fisub
dec
or
loopne
adc
in
stc
shr
inc
shr
mov
ins
loope
out
add
push
sbb
adc
into
xor
and
mov
mov
int3
sub
fld
xor
jbe
push
dec
adc
sbb
push
mov
mul
pop
mov
out
loop
inc
outs
sbb
test
test
jg
jge
push
and
sub
(bad)
jmp
mov
in
scas
jg
bnd
sub
inc
in
cmps
xor
call
mov
jno
sbb
iret
jecxz
fimul
jl
enter
jmp
and
imul
push
aam
aad
mov
into
push
dec
in
add
out
push
in
dec
adc
mov
xchg
xchg
mov
cmp
push
jge
add
cmps
repnz
hlt
cmp
arpl
(bad)
mov
lahf
pusha
or
mov
(bad)
fstp
mov
add
hlt
jne
aam
mov
xchg
aam
or
pop
retf
stos
stc
add
inc
sbb
pushf
dec
and
cmc
sbb
dec
push
sub
and
loopne
pop
iret
jge
clc
popa
and
das
push
call
push
imul
mov
jecxz
and
or
add
push
nop
fs
jbe
sbb
test
sbb
inc
sbb
jns
jbe
mov
mov
sub
hlt
add
aad
dec
mov
pusha
inc
adc
or
mov
loop
icebp
cmps
sub
xchg
je
dec
in
not
mul
xlat
pop
add
inc
mov
in
or
dec
xchg
sub
adc
rcr
(bad)
into
stc
not
jmp
rcl
into
je
xchg
std
fdivr
inc
add
shl
cmps
xor
add
mov
js
rol
fwait
in
xchg
iret
in
icebp
cli
imul
repz
fiadd
mov
iret
mov
inc
arpl
pop
fidiv
jns
pop
pop
pop
sahf
jne
push
daa
jmp
(bad)
push
(bad)
aad
out
lods
rcl
or
inc
(bad)
jne
inc
add
mov
movntps
adc
into
push
lea
adc
adc
adc
pushf
pop
popf
out
shr
(bad)
mov
mov
jmp
call
loopne
cmc
je
aam
pop
lods
ror
pop
add
add
and
xchg
icebp
hlt
enter
pop
aas
push
sahf
inc
pop
dec
pop
test
mov
mov
test
xor
ror
jle
xlat
and
mov
bound
loope
sub
adc
rcl
adc
in
nop
imul
jl
adc
dec
pop
inc
ss
xchg
add
iret
add
clc
enter
or
call
inc
pop
loop
int
shl
aaa
and
aam
adc
and
fstp
add
clc
dec
retf
push
pop
dec
pavgw
ja
div
jnp
xor
mov
jns
(bad)
pushf
jb
movs
popa
stos
pop
das
retf
push
fs
xor
push
and
pop
adc
leave
mov
and
mov
out
lds
xchg
fmul
pushf
jecxz
sbb
outs
std
mov
int
cld
fidivr
inc
or
les
daa
mov
cs
dec
cmc
inc
jl
scas
out
pop
mov
jnp
call
adc
mul
push
or
in
shl
cld
sub
dec
mov
mul
dec
sahf
pusha
mov
imul
loop
ret
inc
mov
inc
pushf
xor
test
jmp
jo
dec
push
push
sbb
adc
cs
in
mov
add
mov
in
call
mov
leave
ja
(bad)
in
sbb
lods
adc
mov
inc
call
xchg
stos
or
mov
xor
lock
in
adc
pop
pop
nop
scas
mov
push
imul
lock
mov
dec
jo
out
shl
sbb
call
sbb
scas
adc
cmp
add
pop
imul
add
cmps
call
dec
xchg
jmp
mov
mul
fstp
test
cli
je
pop
shl
dec
cmc
and
mov
ds
jmp
or
sub
outs
leave
sub
(bad)
fcmovu
xor
ficomp
pop
xchg
push
mov
(bad)
in
pop
femms
imul
mov
mov
sbb
aas
add
add
and
ret
scas
aas
scas
mov
mov
aam
sahf
adc
repz
sub
push
into
popf
adc
pop
mov
xchg
jg
jmp
xor
adc
pop
mov
ins
push
sti
mov
xchg
test
pop
dec
push
aas
mov
cmp
leave
jne
and
mov
pop
in
hlt
ss
and
jns
mov
cdq
jecxz
test
in
and
jmp
test
push
mov
mov
mov
adc
icebp
std
mov
cs
jns
inc
and
(bad)
xlat
inc
pop
jo
add
cmp
retf
fnstenv
push
push
(bad)
xchg
mov
mov
imul
aas
cmp
je
jbe
clc
dec
js
cmps
lods
add
int
sbb
inc
cmp
dec
(bad)
jo
inc
aaa
mov
and
adc
mov
iret
daa
(bad)
cmp
cli
mov
in
mov
test
or
imul
xchg
ds
aas
xor
aas
pshufw
inc
push
(bad)
sti
cmc
pop
retf
mov
scas
mov
mov
ror
mov
dec
ret
jecxz
popf
jle
cs
das
in
(bad)
jp
rcr
jnp
push
cmp
out
jmp
movs
shr
mov
mov
mov
(bad)
in
or
adc
push
loopne
adc
lods
mov
bound
in
test
imul
gs
xchg
ins
mov
in
daa
jbe
dec
xchg
xor
imul
push
lods
mov
sbb
inc
xchg
popf
dec
(bad)
fnsave
scas
outs
imul
fidiv
and
(bad)
loope
mov
lods
stc
in
(bad)
ins
jmp
fdiv
jmp
leave
dec
add
leave
xor
ret
das
push
sbb
mov
or
jp
je
ja
cmp
popf
dec
das
cmp
mov
or
int3
aas
jnp
gs
div
push
addr16
add
cld
mov
scas
xlat
imul
sbb
xchg
xlat
nop
inc
mov
retf
sti
jo
xchg
icebp
adc
js
or
js
push
xchg
stos
dec
leave
dec
inc
fwait
cdq
add
sub
leave
or
dec
in
ja
repz
mov
pop
dec
pop
imul
iret
nop
cmp
adc
push
mov
in
push
rcr
push
sub
ret
je
js
sub
in
adc
mov
fwait
push
cmp
sbb
mov
mov
or
jb
mov
paddb
rcl
arpl
out
sbb
or
fs
push
fs
add
mov
sar
imul
mov
jle
mov
xchg
dec
inc
and
andnps
(bad)
cmp
jmp
jbe
or
jns
movs
cmp
(bad)
pop
sub
test
push
enter
push
mov
jle
jbe
mov
and
das
loop
sbb
mov
fisttp
test
mov
mov
xor
cmp
enter
mov
mov
int
out
lmsw
xchg
test
cli
inc
retf
iret
add
inc
or
jmp
dec
arpl
gs
sbb
adc
or
push
out
dec
sub
mov
push
out
clc
into
inc
mov
inc
mov
mov
xor
jne
out
sar
and
push
xchg
sub
cld
rcl
pop
push
fs
rcr
loope
ss
faddp
push
sbb
adc
or
xor
icebp
loop
les
out
or
lods
das
mov
outs
rol
(bad)
cmp
test
out
loopne
sub
loop
movzx
vpaddd
sbb
lods
nop
js
ss
jbe
test
outs
popa
cmp
mov
or
sub
xor
inc
sti
mov
in
mov
mov
outs
ficom
enter
push
nop
icebp
or
push
mov
test
popf
adc
push
aam
push
daa
lds
enter
rol
mov
push
cmp
movs
push
sbb
and
pop
mov
sub
cmp
cmps
pop
movs
xor
mov
lock
fisttp
pop
cmp
iret
sbb
pop
push
push
sbb
inc
mov
(bad)
popf
(bad)
lods
push
imul
pop
cld
mov
movs
hlt
je
ror
add
inc
fwait
daa
xchg
jbe
or
mov
cli
sbb
sar
aad
inc
retf
test
movs
dec
adc
and
pop
xchg
mov
or
xchg
xor
jbe
movs
mov
(bad)
loop
xor
push
sbb
sub
pusha
ret
mov
push
int3
pop
xchg
lock
imul
or
ins
and
stos
shr
(bad)
out
mov
pusha
fbld
cwde
call
sbb
mov
mov
jl
dec
imul
test
ins
push
(bad)
movs
jmp
jno
pushf
das
scas
inc
es
mov
dec
adc
cmp
adc
repz
jp
test
mov
pop
push
cmps
add
cwde
sub
sbb
cli
test
mov
imul
cwde
ds
hlt
js
sbb
dec
xchg
stos
mov
xlat
sbb
shr
inc
sbb
mov
enter
push
or
das
shr
dec
js
push
push
shl
sahf
out
mov
add
or
fadd
das
fs
inc
cld
in
rcr
dec
push
jmp
in
mov
add
and
push
out
mov
jge
loop
jne
(bad)
mov
sbb
or
fcomp
into
add
sub
mov
test
inc
xchg
or
popa
sub
scas
sub
out
and
mov
sbb
call
push
xchg
pusha
xor
jg
jb
jb
jne
arpl
mov
mov
stos
mov
adc
cmp
dec
cmc
mov
or
jns
call
xor
addr16
leave
repnz
xchg
cmp
pop
add
popa
mov
push
adc
lea
sub
imul
xchg
cmps
arpl
sbb
icebp
stos
adc
clc
repz
cmps
push
or
sar
dec
mov
xchg
pop
lea
lods
frstor
mov
push
cmp
pusha
mov
and
rcr
dec
call
sbb
(bad)
fnstcw
arpl
or
imul
test
cs
sub
adc
test
shl
inc
dec
dec
lea
inc
mov
stos
int
cmp
popa
jp
pop
inc
sbb
imul
rcl
lods
shr
fimul
cmp
lods
imul
icebp
ins
(bad)
fistp
outs
sub
test
sbb
cmps
xor
out
push
jle
add
pop
sub
mov
gs
js
(bad)
cmp
std
pop
call
addr16
fldcw
test
cmps
aam
push
adc
mov
push
inc
mov
add
sub
pop
jg
push
ret
movs
fwait
inc
dec
cmc
inc
adc
fild
and
inc
imul
data16
loopne
cld
sbb
vmovsd
int
mov
dec
nop
push
adc
or
int
mov
mov
mov
retf
fbld
fsub
movs
ret
aam
daa
inc
ins
frstor
sbb
inc
outs
cmp
adc
mov
xor
repz
mov
idiv
add
sbb
inc
sub
cs
jg
int
xor
aam
mov
jo
daa
popf
iret
mov
inc
(bad)
push
(bad)
jbe
adc
daa
jnp
push
sbb
pushf
imul
outs
cmps
mov
cmps
stos
jo
mov
sub
pushf
test
pop
(bad)
int3
cmp
ret
or
sbb
and
mov
inc
lds
in
cdq
mov
fiadd
sub
out
xor
movs
mov
scas
inc
rol
dec
stos
mov
inc
sub
cmps
jge
repz
add
xor
xchg
jmp
pop
lock
mov
mov
sbb
cmp
jecxz
lock
out
or
imul
into
retf
icebp
test
mov
aam
xchg
mov
jmp
lods
call
cmp
clc
mov
fidivr
jnp
scas
xor
push
(bad)
fld
mov
add
sbb
loopne
sar
or
pop
sti
imul
and
push
gs
sar
xchg
(bad)
jmp
pop
and
push
xchg
icebp
sub
(bad)
inc
mov
jge
jb
inc
jle
retf
fwait
imul
pop
gs
in
mov
cwde
into
xor
jae
shr
pushf
popf
mov
xor
test
push
movs
add
xor
push
push
nop
popa
pusha
xchg
inc
pop
mov
rcr
xor
sti
ja
fwait
rol
sub
jmp
or
pop
icebp
mov
adc
xlat
xor
lds
dec
fbstp
or
pushf
sub
add
xchg
stc
fist
mov
popf
jl
in
inc
or
test
dec
test
push
add
mov
and
das
xchg
xor
scas
sbb
fnsave
test
mov
pop
arpl
shl
pop
mov
sbb
out
hlt
jmp
popa
inc
xor
lea
in
push
pop
imul
dec
jne
sbb
popf
stc
test
inc
(bad)
std
rcr
adc
dec
cmp
sub
mov
aaa
xchg
add
xchg
adc
dec
rcl
outs
or
inc
xor
mov
dec
cdq
dec
mov
popf
jmp
into
pop
loope
sti
repnz
push
sar
test
lods
add
xchg
adc
je
sahf
bound
mov
and
or
cmp
sbb
mov
(bad)
inc
fcomip
add
or
jl
in
xor
(bad)
push
push
adc
dec
stc
mov
(bad)
push
adc
jge
cld
in
repz
sbb
retf
mov
jp
fstp
mov
xor
movs
(bad)
xchg
jae
pop
or
pop
dec
inc
or
not
cmp
aas
or
je
jp
ss
xor
cmps
sub
retf
adc
cmp
(bad)
pop
in
movs
leave
cli
jecxz
shr
sub
aam
add
call
jecxz
inc
adc
shl
es
neg
and
not
es
push
out
movs
mov
xchg
mov
imul
jmp
push
add
adc
adc
rcr
imul
retf
or
arpl
add
mov
inc
sub
pop
mov
lods
pop
xchg
add
cmp
push
dec
call
ret
ins
mov
mov
stos
arpl
pop
shl
(bad)
leave
push
xor
mov
cmc
or
pop
(bad)
sti
cmps
retf
or
mov
pop
ror
pop
loop
jg
rol
jbe
repnz
std
call
pop
xchg
xchg
pushf
data16
and
out
inc
enter
arpl
jb
push
call
jg
mov
inc
in
cmc
int
ret
loope
test
retf
sbb
mov
sbb
fs
(bad)
repnz
nop
retf
push
push
push
adc
sbb
rcr
lea
ret
inc
loope
loopne
fmul
cmp
aam
xor
dec
imul
jg
and
dec
sub
mov
jbe
add
push
add
adc
cli
ret
mov
mov
into
jle
pop
pop
adc
sbb
push
imul
jbe
pop
sbb
arpl
clc
shr
xlat
fadd
sub
xchg
leave
movs
cwde
enter
out
sub
test
mov
dec
cmp
mov
inc
inc
mov
bound
and
test
adc
push
call
push
(bad)
icebp
sub
and
retf
dec
push
test
jg
(bad)
mov
cmp
arpl
sbb
lods
call
test
pop
sar
mov
scas
stc
rol
(bad)
jp
dec
lock
cdq
out
arpl
and
mov
jmp
es
ror
mov
lahf
outs
mov
sbb
sti
mov
adc
jge
bound
inc
aam
push
cwde
iret
bound
dec
pop
sbb
test
sbb
loope
jl
cmc
enter
sbb
mov
pop
pop
les
data16
(bad)
jge
mov
icebp
and
pop
push
push
xor
pop
add
sbb
sbb
jg
adc
push
ins
call
sbb
popf
mov
cmps
xchg
or
fsqrt
iret
nop
jmp
test
dec
lock
ja
and
popf
mov
shl
(bad)
push
shl
add
xor
retf
xor
sahf
adc
daa
scas
call
sub
jne
cmc
bound
jb
nop
sub
jne
imul
sbb
mov
jmp
dec
sar
(bad)
in
mov
pop
data16
retf
out
icebp
in
rcl
sbb
mov
pop
sti
fld
mov
sub
pop
retf
repz
pop
mov
or
add
int
lea
or
xchg
mov
into
test
loopne
sub
pop
add
add
mov
mov
jmp
js
imul
hlt
jge
(bad)
xchg
(bad)
push
movs
cmp
lods
movs
daa
(bad)
or
sub
add
loop
push
std
jp
pushf
cmp
cmp
out
jbe
ss
cs
or
js
iret
mov
nop
pop
jge
inc
pop
lock
push
ja
ret
bound
xor
int
test
cwde
jge
cmpxchg
adc
ss
imul
adc
sbb
nop
push
xchg
fstp
dec
sbb
shr
sub
jnp
pushf
cmp
and
push
xchg
ja
dec
das
mov
idiv
ret
hlt
aaa
mov
push
xchg
dec
xlat
pop
inc
jmp
jmp
cmp
pop
pop
cwde
in
push
(bad)
xchg
fwait
out
pop
cmc
loop
and
retf
mov
jp
push
imul
xor
mov
jae
leave
xchg
sahf
mov
inc
pop
xchg
int
adc
pop
pop
imul
es
jo
mov
data16
iret
lods
xor
or
out
dec
ds
adc
daa
sub
cld
add
cmp
adc
add
sbb
int
int3
sbb
(bad)
enter
cmps
xchg
int3
bound
xor
in
test
cli
inc
addr16
fsub
mov
fdiv
scas
mov
fld
test
imul
fidiv
adc
push
adc
retf
out
jno
fwait
sar
mov
pop
in
inc
int
and
mov
adc
mov
jmp
jnp
std
or
mov
push
shr
mov
dec
out
or
adc
das
jo
mov
bound
push
pop
jg
jp
lods
dec
dec
aam
mov
in
sbb
xor
nop
or
shr
xchg
repz
lahf
(bad)
out
sbb
or
aas
inc
sbb
int
aaa
aad
xor
in
pop
sbb
cdq
fbstp
in
cmp
jb
cmc
fmul
loope
lods
cmp
iret
pushf
(bad)
stc
(bad)
fcos
or
mov
(bad)
outs
add
fisub
repz
cmps
mov
inc
cmps
into
idiv
bound
scas
mov
stos
xor
add
mov
cdq
dec
pop
shl
inc
je
xor
std
out
(bad)
mov
xchg
outs
mov
fmul
mov
mov
cmp
lahf
mov
adc
mov
cmc
dec
aam
addr16
clc
pop
add
xor
int3
leave
adc
stc
arpl
gs
out
jge
cmps
mov
(bad)
in
dec
ds
xchg
in
sar
ror
mov
pop
pop
jmp
mov
jns
inc
out
jl
fcomp
jbe
jl
lods
jnp
retf
int
out
out
mov
loopne
ds
aaa
cmp
and
sbb
xchg
dec
jne
push
in
into
pop
jge
pop
js
test
xor
cli
or
imul
ins
cmp
call
movs
add
mov
sahf
nop
cmp
or
inc
add
ss
push
pop
pop
dec
int3
xor
and
jno
push
(bad)
fldcw
ss
jecxz
cmp
or
push
or
mov
ret
(bad)
xor
cdq
outs
lds
dec
adc
mov
lods
jae
scas
jne
test
push
test
dec
jl
or
xlat
lds
lods
and
(bad)
popa
jp
nop
sti
shl
test
loopne
mov
mul
xchg
cmp
cli
icebp
xchg
out
xchg
push
sub
jl
daa
jne
inc
sti
in
dec
aaa
leave
pop
pop
mov
jmp
(bad)
pop
aaa
movs
sub
aam
ja
jp
cmc
fisub
cmc
jg
popf
xchg
pop
lds
or
popa
mov
data16
add
mov
pop
xor
mov
dec
or
shr
aad
ins
movs
pushf
movs
mov
mul
fild
jbe
stc
jo
or
cbw
popa
push
and
aam
cmc
cmp
pop
dec
movs
popa
ja
gs
mov
jb
sar
push
sub
fild
in
add
jmp
cmp
mov
test
outs
push
das
inc
ret
es
mov
push
aas
or
push
mov
pop
imul
xchg
cmp
push
mov
mov
aad
test
and
pop
in
cmps
mov
scas
cmp
mov
cmps
push
ficomp
(bad)
retf
jo
mov
hlt
or
xchg
add
cli
imul
into
div
inc
add
mov
jo
dec
fucomp
mov
iret
cmps
adc
shl
aam
call
test
inc
xlat
mov
retf
sbb
lods
mov
cmp
aaa
cmp
xor
and
lds
xchg
ins
aas
push
mov
aad
out
outs
pushf
(bad)
push
repz
cmp
mov
sbb
rcr
cs
cmp
push
out
xchg
sbb
test
mov
adc
and
mov
dec
xchg
push
cdq
ds
jg
bound
xor
aas
inc
jp
mov
retf
les
lods
dec
jl
pop
pop
mov
call
ins
xchg
cmc
(bad)
xchg
dec
pop
xchg
add
xor
stos
adc
fst
lea
cmp
dec
xlat
cmp
das
sub
xchg
mov
xor
js
xor
sub
dec
and
mov
dec
or
shr
imul
push
jbe
mov
cdq
out
popa
fidiv
ror
mov
push
jb
repz
dec
les
mov
test
cmc
call
adc
repz
push
pop
jmp
or
cmps
cmp
sbb
mov
movs
rol
in
adc
jo
push
jle
and
push
cmps
daa
and
cld
test
cmps
repnz
push
movs
(bad)
outs
jmp
fwait
leave
and
idiv
mov
mov
js
mov
mov
xchg
jns
cmps
(bad)
call
push
mov
dec
cmp
sub
out
sub
call
sbb
ins
sbb
in
(bad)
ins
pop
xchg
test
ds
dec
icebp
ret
mov
xchg
xchg
xor
shl
jp
popf
push
ficom
lock
imul
mul
mov
(bad)
frstor
loopne
out
cvtps2pd
stos
fisttp
inc
mov
push
mov
add
jo
dec
es
or
and
outs
xchg
out
jae
inc
fisub
rcr
or
cmp
jne
pop
sub
in
mov
ins
(bad)
push
in
push
hlt
je
mov
sahf
jge
out
push
jp
inc
adc
cli
mov
or
mov
push
xchg
pop
pop
xchg
pushf
jno
int
cmps
repz
jns
xchg
shl
ins
pop
or
sub
xchg
jmp
jecxz
inc
scas
lock
stos
adc
lods
sub
fwait
popa
mov
mov
mov
movs
mov
repnz
jbe
mov
call
div
mov
sar
lods
fmul
sti
or
mov
or
movs
cwde
nop
adc
push
cld
ret
test
jns
or
dec
push
xor
xchg
jmp
jmp
popf
and
inc
std
fdivr
xchg
adc
cmp
lea
fmul
les
push
jmp
jno
jg
xchg
call
pop
iret
stos
movs
(bad)
das
xchg
mov
fild
outs
mov
cld
pop
hlt
cmp
fcmove
mov
sub
not
jae
out
into
or
jno
adc
ins
dec
push
in
xchg
or
push
push
mov
movs
xchg
fldenv
cmp
aaa
push
mov
scas
dec
mov
push
pop
sbb
jnp
xor
pop
mov
or
call
cli
fcomip
sbb
in
mov
aaa
cwde
mov
fst
popa
fidiv
mov
sbb
sbb
lds
mov
or
rol
adc
pop
inc
adc
jmp
mov
cmps
in
pop
jae
xchg
mov
add
and
or
sbb
loope
ins
enter
popf
xor
sbb
jmp
xor
scas
push
mov
imul
mov
test
xchg
or
jmp
mov
push
mov
push
in
mov
sub
mov
mov
sub
adc
ins
xor
out
(bad)
aas
jnp
(bad)
addr16
loop
jno
xor
xor
or
or
push
mov
jl
out
(bad)
iret
sti
lahf
test
fiadd
cmp
into
cmp
rol
inc
sbb
jno
xchg
aas
sbb
out
loopne
imul
pusha
sbb
push
ret
int
push
out
ja
aaa
mov
push
jnp
les
mov
inc
push
pop
lds
fld
js
adc
js
mov
enter
stos
je
in
jb
repnz
push
fcomi
jmp
add
fist
inc
sub
std
lods
jb
adc
stos
adc
mov
push
cmc
cmovb
add
push
imul
sub
ins
and
pop
fld
fdivr
sti
dec
sti
adc
jp
jnp
inc
pushf
mov
dec
in
adc
aam
ficomp
inc
mul
sub
and
cs
mov
xchg
pop
int
popf
ficom
pop
aaa
jl
fistp
aas
push
fs
jb
les
fstp
dec
and
and
dec
repnz
in
push
outs
ja
dec
shl
arpl
jmp
das
in
adc
hlt
retf
loope
cmp
push
iret
in
push
mov
mov
out
outs
jnp
popf
xor
push
iret
imul
retf
ret
mov
cdq
test
add
xchg
ins
mov
cld
mov
popa
sahf
xor
in
(bad)
out
int3
dec
rol
test
add
jle
dec
jl
push
jecxz
push
popf
add
shl
retf
sbb
dec
data16
imul
out
xchg
test
xchg
or
call
sbb
mov
cvttps2pi
stc
inc
loop
rol
or
sar
in
rcl
popf
gs
call
mov
jne
and
mov
popa
dec
sbb
fwait
add
enter
call
cmp
arpl
cmp
jmp
ss
test
pusha
sbb
int
dec
xchg
cld
and
aas
or
mov
pushf
add
xchg
pop
push
dec
mov
or
cmp
xchg
cli
in
std
inc
mov
and
test
cmps
lahf
xchg
ror
adc
add
cld
pop
mov
cwde
bound
push
xchg
fimul
int3
add
mov
loope
inc
add
in
fwait
jbe
jg
popf
mov
mov
inc
pop
push
out
jg
adc
lods
sti
mov
jb
adc
sub
jl
pop
jmp
jp
dec
jge
mov
sahf
xchg
fidiv
dec
mov
push
mov
inc
xor
mov
pop
ret
and
or
push
jns
(bad)
push
test
retf
les
clc
rcr
bound
and
out
sub
enter
loope
push
hlt
push
popa
jg
pop
mov
enter
and
push
mov
out
sub
popf
add
mov
sysenter
into
xchg
std
div
mov
xchg
stc
inc
push
sbb
lods
aas
and
fdivp
jge
std
and
mov
aas
mov
xor
shl
xor
fcmove
inc
and
mov
pop
push
and
std
jl
sbb
arpl
rcr
mov
pop
and
jl
inc
push
ss
xchg
leave
inc
and
int
lahf
fadd
cli
mov
mov
addr16
ret
lods
jnp
push
add
add
pop
iret
lods
xchg
add
stos
int3
sub
sbb
mov
fwait
xor
adc
pop
fcmovbe
mov
iret
pop
cmc
sbb
mov
gs
xchg
or
cmp
and
sti
cs
in
sub
xchg
outs
lods
pop
pop
xchg
mov
or
push
mov
fsubr
ret
lods
or
xchg
inc
fdiv
push
or
out
(bad)
aad
scas
inc
or
movs
(bad)
lds
pop
mov
std
icebp
popa
sbb
mov
lods
jmp
in
cmp
sti
das
add
jae
xchg
vandps
mov
pop
mov
test
imul
pop
dec
xchg
cmp
mov
jp
(bad)
dec
sub
xlat
shl
lods
paddw
push
xchg
icebp
jo
stos
mov
cmp
repz
repz
pop
push
in
mov
mov
mov
fmul
dec
mov
out
shr
jmp
scas
cmc
jmp
add
neg
sbb
sbb
add
and
gs
push
scas
sub
push
daa
add
int
add
mov
inc
lock
sbb
or
mov
aam
mov
adc
sub
push
sub
icebp
stc
xchg
daa
cld
punpcklwd
inc
or
sbb
rcl
cmp
iret
in
test
mov
mov
jmp
xor
add
mov
sub
or
xchg
inc
xor
inc
mov
out
add
and
cwde
sbb
mov
repnz
jle
into
ror
jp
pop
adc
xor
ja
sub
cmp
sub
xor
mov
call
stos
push
jmp
std
sahf
cmp
popf
aad
adc
push
leave
pop
pop
and
xor
das
sbb
loopne
xor
xchg
and
push
and
fisttp
sbb
xor
cwde
dec
call
ror
push
arpl
xor
jecxz
data16
aas
pop
mov
das
out
cli
test
cmp
xor
mov
fldenv
jns
out
fxch
mov
fdivr
inc
out
sbb
or
int3
leave
inc
mov
bound
das
aam
push
icebp
mov
scas
shl
icebp
add
es
hlt
or
aad
sbb
loope
imul
inc
in
not
xor
pushf
mov
jb
sti
add
jbe
fld
jno
add
xchg
add
sub
fld
add
and
sti
js
cli
mov
loopne
mov
jmp
or
imul
jmp
ja
inc
not
xchg
and
and
jne
dec
push
outs
lds
or
popf
adc
pop
ret
mov
lahf
fadd
retf
loopne
xchg
jns
fldlg2
imul
and
and
pushf
retf
xor
out
fbld
test
lock
in
ret
bound
add
or
rcr
xlat
test
sub
mov
into
fstp
ret
or
ret
aad
pop
in
loopne
in
inc
lods
mov
xchg
or
cld
pop
sti
or
rol
mov
add
push
push
cld
jns
(bad)
mov
inc
(bad)
mov
dec
mov
jbe
hlt
(bad)
in
sub
xor
sysexit
mov
or
outs
jne
add
in
inc
pop
and
adc
sub
ja
sub
sub
xchg
and
repz
and
sahf
adc
scas
mov
push
ins
mov
lods
call
or
jge
jo
xor
and
mov
xlat
xchg
xor
jno
dec
mov
mov
sbb
stc
xchg
dec
add
dec
sbb
pop
in
out
adc
fmul
cwde
or
jle
push
sub
jl
sbb
sub
int
jmp
ds
or
cdq
xchg
pop
mov
loopne
jae
retf
adc
dec
shl
ret
stos
pushf
and
inc
push
ds
jb
bound
lods
sub
and
enter
dec
fstp
dec
cli
bound
outs
test
imul
push
mov
add
adc
dec
sbb
pop
pop
(bad)
int3
stos
pop
pop
adc
stc
fdivr
cmp
test
pop
mov
add
cmps
jg
sbb
lods
sbb
inc
out
jg
daa
test
jg
es
cmp
mov
mov
test
mov
call
icebp
push
test
in
pop
inc
add
xchg
pop
aad
rcr
add
sub
(bad)
mov
mov
loopne
arpl
mov
cdq
cld
hlt
in
cmp
pop
(bad)
sbb
gs
dec
retf
fild
xchg
pop
stc
nop
(bad)
xchg
(bad)
push
pushf
mov
rol
retf
inc
cli
dec
jecxz
or
in
mov
retf
add
in
hlt
stc
ja
jg
push
icebp
fisub
push
mov
mov
adc
fsub
or
xor
test
sbb
loopne
push
cmc
add
aam
test
jbe
pop
retf
test
mov
adc
sub
push
or
or
data16
push
xchg
push
popa
jmp
adc
leave
cwde
mov
icebp
call
push
sbb
and
jle
inc
jle
or
sub
pusha
daa
push
lahf
jnp
mov
jae
xor
data16
mov
push
ret
jmp
jge
or
pop
ret
neg
cmp
call
inc
inc
in
test
or
(bad)
sub
and
scas
and
xchg
sbb
mov
cld
pop
jecxz
pop
xor
push
pop
repz
dec
and
sbb
aam
pop
push
jle
hlt
scas
call
and
fld
fidivr
mov
jb
adc
pop
mov
sbb
lods
sbb
cmps
push
pop
stos
xchg
loope
test
sbb
cli
and
mov
jb
test
outs
mov
scas
repnz
sar
push
pop
data16
mov
fdivr
and
or
cdq
cmps
das
mov
scas
mov
mov
and
push
retf
pop
pop
push
mov
movs
inc
cmps
push
pop
dec
mov
add
imul
jmp
adc
adc
pop
aas
xchg
call
inc
movs
loope
or
xor
jbe
lea
in
inc
inc
mov
mov
add
lock
adc
ins
js
ins
jno
sub
dec
ins
xor
xchg
adc
add
cmp
adc
aam
jge
in
ror
mov
sub
movs
push
mov
inc
add
test
mov
lea
pushf
mov
fsub
add
aad
sub
inc
xchg
jno
xor
mov
out
sub
xor
cmp
xlat
jecxz
mov
movs
mov
fdiv
ins
movs
scas
ins
(bad)
mov
(bad)
(bad)
xchg
dec
lods
movs
pop
repnz
arpl
add
push
mov
cmp
jmp
sti
leave
add
fist
fld
xor
fs
mov
xor
and
dec
adc
pop
xchg
dec
adc
cs
inc
lods
out
xchg
jecxz
or
(bad)
cmp
mov
xor
jmp
mov
fmul
push
lahf
call
int3
jb
aaa
leave
xchg
or
ins
out
(bad)
(bad)
scas
inc
out
jnp
xchg
pop
js
push
rcr
loopne
add
mov
jle
push
sub
xor
dec
mov
mov
cmp
(bad)
mov
rcl
imul
push
in
push
dec
sub
call
pop
and
sub
mov
xchg
push
mov
mov
pop
xor
jbe
xor
sbb
hlt
sub
add
or
dec
pop
jle
icebp
lds
xchg
stos
and
je
sub
inc
sbb
iret
dec
lock
pop
cli
dec
lds
or
out
mov
dec
xchg
xlat
xchg
xchg
shr
inc
ins
xor
std
push
inc
or
inc
mov
and
xchg
popa
pop
adc
xchg
push
cmp
adc
mov
inc
dec
cmp
retf
lock
mov
sub
push
jmp
jl
or
lds
sahf
fadd
aaa
jp
das
out
xchg
leave
int
push
jns
lock
(bad)
mov
repnz
add
stc
rcl
fs
xchg
jg
dec
ror
fnstcw
push
dec
scas
sbb
sub
cmp
shr
test
das
mov
mov
sub
retw
add
popf
push
sub
aad
jne
out
fisub
lahf
dec
or
and
inc
sbb
adc
movs
sub
pop
jae
and
mov
sbb
mov
and
mov
cdq
jbe
and
cmps
dec
iret
lods
mov
add
fisubr
enter
and
or
retf
pop
(bad)
mov
mov
jo
xlat
pop
pop
xchg
out
xor
into
jp
xchg
je
jg
mov
mov
jne
mov
push
push
cmps
imul
xor
xchg
mov
jmp
add
ins
mov
mov
(bad)
fld
lods
jg
rcl
push
xchg
pop
or
in
pop
or
test
xor
sar
je
push
hlt
ret
sti
popa
mov
mov
add
stc
mov
pop
jecxz
lods
and
push
push
push
or
sar
sbb
loop
or
xor
mov
adc
movs
test
iret
aad
std
nop
imul
lea
mov
imul
pop
dec
jge
mov
sbb
jp
mov
stos
cmps
scas
inc
sbb
addr16
inc
in
sub
mov
cli
dec
xor
dec
stc
push
jae
je
and
sub
mov
xor
ds
(bad)
psubd
sbb
and
nop
(bad)
cmp
cmp
xor
lea
adc
push
fdiv
imul
nop
sti
jle
fwait
inc
cmp
in
lock
push
jno
or
sar
pop
add
popa
repnz
adc
sbb
vmread
xor
les
rcl
mov
sub
dec
fstp
dec
xchg
xor
mov
(bad)
and
jnp
cmp
mov
mov
stc
daa
aam
int
clc
adc
cmc
mov
push
mov
fstp
clc
xor
(bad)
sbb
loop
js
fdiv
xchg
outs
cmc
pop
inc
xchg
loopne
lock
lea
mov
test
adc
sbb
rol
jg
cdq
inc
daa
xlat
mov
add
scas
fistp
loope
or
cld
shr
bound
add
int
cs
in
fsub
mov
add
push
xchg
mov
add
fwait
mov
sbb
sub
mov
(bad)
xchg
fsubr
in
pop
mov
call
push
ins
jge
mov
sub
movs
std
jmp
stos
adc
push
repnz
cmps
pop
mov
scas
gs
(bad)
ins
sub
mov
clc
clc
add
scas
imul
sbb
out
fs
ror
pop
xor
das
jp
gs
push
xor
mov
outs
rol
cmc
cmp
add
jecxz
xchg
aam
add
jle
enter
cs
xor
push
mov
jp
jne
mov
retf
xchg
add
(bad)
mov
mov
pop
fs
mov
xchg
sub
lods
lea
cmp
adc
shr
jecxz
in
xlat
cmc
sar
and
(bad)
adc
ds
inc
mov
dec
shl
and
xchg
js
ret
lahf
cmp
outs
not
ins
pop
out
cmp
mov
movs
jle
sub
ss
pop
inc
rcl
adc
aam
scas
sub
push
sbb
mov
jae
mov
adc
xor
inc
idiv
aaa
sbb
push
mov
push
adc
xchg
xor
adc
(bad)
mov
and
add
and
add
ja
outs
jmp
sbb
jg
mov
and
dec
outs
retf
mov
inc
or
arpl
jmp
pop
in
sub
push
fimul
jg
outs
nop
add
pop
out
jmp
add
push
and
outs
jns
shr
dec
mov
pop
in
jmp
imul
jmp
mov
movs
scas
cmp
in
jp
and
push
and
outs
push
daa
shr
jmp
add
xlat
loopne
fs
pop
lahf
addr16
mov
inc
cwde
mov
repz
leave
les
fdiv
cmps
arpl
lahf
in
das
aam
sahf
jecxz
imul
popf
dec
xor
dec
mov
jle
retf
pop
add
xor
push
jne
cmp
mov
and
inc
dec
fiadd
mov
into
adc
dec
shl
mov
jae
fstp
loop
xor
cdq
inc
psubusw
es
push
int
outs
push
aas
fbld
xor
xor
lahf
dec
cmps
test
mov
ret
xor
call
shl
sahf
inc
mov
dec
test
push
push
mov
add
mov
pop
jmp
aad
xor
jmp
cmc
gs
in
mov
ficomp
push
cmps
and
lds
(bad)
das
xchg
scas
(bad)
out
arpl
pop
aad
adc
adc
pop
lds
lock
std
lods
std
adc
or
(bad)
mov
sub
(bad)
int3
jns
add
in
xchg
push
cmp
dec
and
sub
aad
scas
xor
inc
jno
(bad)
fst
cmp
and
addr16
pop
sub
in
push
in
pop
fs
aam
pusha
fdivr
dec
add
push
mov
mov
nop
mov
cmps
sub
int3
adc
and
pop
(bad)
stc
jns
mov
test
ja
movs
enter
fsubr
mov
mov
xchg
sahf
aas
mov
adc
mov
(bad)
std
stos
fs
push
lods
push
popa
leave
xlat
inc
int
sbb
das
arpl
scas
out
in
jg
jb
and
jg
mov
xlat
neg
sub
cmp
and
repz
int3
(bad)
aam
jo
retf
cld
dec
test
mov
lea
jae
fsincos
les
int
sub
loope
(bad)
andps
mov
jmp
out
(bad)
loopne
popa
into
xchg
xchg
jp
mov
nop
jns
ds
jmp
iret
in
and
mov
pop
mov
cmp
mov
jge
rcl
xor
push
sub
imul
or
sbb
cmp
fimul
movs
in
cmps
cmc
inc
rcl
pusha
pop
mov
popf
ret
mov
sbb
xor
push
xchg
add
jg
and
xor
in
adc
sub
cmp
pop
adc
pusha
and
cmps
mov
enter
ja
inc
sbb
adc
bound
sub
mov
adc
mov
xchg
std
xchg
jmp
scas
mov
into
pop
mov
movs
lea
xchg
jne
(bad)
fwait
shl
adc
and
add
ret
rcr
(bad)
popf
mov
inc
add
enter
inc
cmp
sar
fistp
xchg
aas
pop
xchg
sti
mov
cdq
mov
les
dec
sbb
or
fcomip
add
mov
xlat
in
dec
xchg
cs
enter
add
push
dec
test
fs
(bad)
cli
dec
and
mov
das
inc
mov
int3
cld
jo
xor
in
jmp
dec
outs
in
subps
(bad)
mov
fdiv
pushw
dec
ja
aad
arpl
and
shl
mov
cdq
cmp
retf
ficomp
popf
ins
int
pop
lods
mov
and
push
out
push
loope
repnz
call
aaa
(bad)
and
fidiv
add
loope
mov
push
push
pop
stc
clc
jp
inc
sbb
push
ins
stc
mov
add
lea
clc
jmp
retf
shl
sub
js
mov
mov
xchg
icebp
sub
inc
sbb
add
stos
push
pop
cmp
add
sahf
(bad)
(bad)
push
ret
dec
push
xchg
push
cmp
loop
or
sbb
in
ja
gs
push
ror
xor
push
sub
push
in
es
sub
dec
aad
or
aaa
enter
test
mov
jmp
inc
jg
xor
adc
imul
xchg
and
dec
std
in
daa
or
icebp
dec
sub
aam
and
and
adc
inc
jmp
imul
jb
ja
sub
das
cmc
sbb
add
mov
mov
jo
mov
pusha
jge
add
dec
inc
bound
(bad)
shl
push
sbb
jns
push
adc
adc
mov
je
stc
mov
cmp
jnp
leave
mov
fidiv
inc
dec
sbb
std
cld
rcr
sbb
je
xchg
ror
adc
jmp
test
pop
pop
loopne
or
dec
and
ds
jo
sbb
lahf
aad
xlat
movs
or
bound
cmp
paddd
mov
loopne
xchg
push
test
enter
push
fld
retf
gs
mov
aaa
cwde
push
xor
test
dec
or
stc
out
cld
int
sbb
mov
add
and
mov
sahf
test
stc
jbe
xchg
push
sbb
lahf
cmp
ffreep
or
out
fld
mov
jp
push
dec
sub
pop
xlat
adc
add
push
std
out
fdivp
mov
(bad)
pusha
loop
ficom
add
mov
xchg
add
sbb
retf
dec
fidiv
scas
and
cmc
push
shl
mov
gs
bound
out
push
test
cmp
outs
and
fidivr
push
mov
and
pop
aas
fdiv
cld
pop
mov
and
jb
das
inc
fisttp
clc
xchg
out
stos
push
xchg
push
idiv
add
fadd
int
xor
jl
aas
jp
into
push
pop
addr16
aas
cwde
mov
mov
in
test
or
dec
inc
rcl
aad
pop
xchg
mov
into
lds
dec
gs
add
cmps
jle
mov
cdq
mov
mov
repnz
(bad)
data16
push
jae
add
push
push
jno
imul
adc
mov
ins
(bad)
(bad)
pop
lds
lock
cmp
outs
mov
xor
mov
mov
lods
jmp
mov
push
xchg
inc
fwait
popa
xchg
int
sbb
xchg
mov
sbb
lea
mov
xor
fisttp
lahf
lds
stos
jno
jl
jmp
inc
xor
mov
mov
test
cdq
je
jns
adc
cli
xchg
and
push
ja
add
mov
inc
jbe
(bad)
mov
ins
out
xlat
retf
adc
and
mov
sbb
imul
or
xor
pop
pop
mov
hlt
cmp
inc
out
(bad)
repnz
jb
push
jns
jne
xchg
mov
sti
fist
inc
repz
jnp
xchg
in
push
sub
cli
popf
add
lock
test
mov
mov
leave
stos
pushf
mov
inc
sbb
xacquire
push
es
lock
inc
mov
lahf
rcl
mov
imul
out
xchg
ftst
das
mov
cmp
jp
or
sbb
push
and
and
in
cmp
(bad)
je
xchg
xor
rol
xlat
sub
mov
(bad)
inc
scas
lods
and
lods
cmp
popf
nop
dec
xor
sahf
cmp
xor
in
aam
sbb
pop
xchg
fwait
sub
sub
sub
xor
in
popa
repnz
jmp
adc
inc
jp
stc
ins
add
lods
dec
leave
add
xchg
shr
div
das
inc
cli
mov
and
retf
or
popa
lea
retf
adc
pop
aad
lea
sbb
fmul
loope
xlat
clc
cmps
mov
fs
(bad)
stc
dec
in
pop
bound
jp
pop
and
mov
cmp
push
pop
cmp
sub
fst
dec
jns
pop
xor
out
adc
add
add
inc
cmp
or
cmp
cmp
jae
adc
inc
out
mov
jno
pop
mov
or
mov
(bad)
daa
xor
call
cdq
cli
jb
sub
iret
movups
outs
imul
and
shl
cmp
xor
dec
push
(bad)
nop
movs
into
push
lods
pop
jmp
rcl
sbb
sbb
popa
lods
daa
pop
int3
test
cmps
std
xor
sbb
ins
cwde
in
clc
popf
xor
sahf
cdq
jmp
dec
stos
scas
pop
pop
dec
inc
es
lds
sub
jmp
std
xor
int
or
cmp
imul
(bad)
cld
sahf
inc
ja
and
xchg
scas
mov
jge
inc
dec
mov
inc
add
sbb
pop
inc
and
test
std
loope
mov
cmp
sub
data16
or
sbb
js
mov
(bad)
in
ror
pop
pop
xchg
sub
add
sbb
add
add
or
xor
ins
outs
jmp
in
fidiv
stc
shr
and
pop
push
stc
in
imul
icebp
jge
pop
jns
sub
retf
inc
leave
mov
push
adc
gs
and
popa
js
mov
ret
outs
addr16
rcr
cmps
call
sbb
cwde
stos
or
sub
ds
sbb
nop
retf
js
fistp
or
jne
and
loope
into
int3
sbb
scas
inc
push
(bad)
adc
or
jg
loop
sbb
push
pop
hlt
jg
in
xor
test
mov
push
retf
(bad)
cmps
shl
jo
cmps
mov
test
mov
stc
add
test
test
mov
fisubr
pop
fisubr
addr16
fwait
adc
popf
mov
xchg
jae
mov
push
or
dec
pop
fisub
daa
out
xchg
int3
xchg
pop
xor
cdq
in
shr
rol
mov
or
jo
mov
mov
fs
push
std
mov
xchg
mov
loop
sti
xchg
(bad)
jne
popa
in
sbb
cmp
adc
ret
and
jg
stc
lods
lock
adc
(bad)
call
mov
dec
mov
mov
pop
mov
ret
xor
push
mov
pop
jne
jmp
jg
xchg
jge
loope
dec
ins
fisttp
sahf
xor
push
mov
push
(bad)
gs
pop
lea
mov
add
or
push
xchg
fwait
mov
dec
or
inc
mov
push
cmp
fist
inc
and
xlat
cdq
and
mov
jmp
mov
cmp
or
push
xchg
push
(bad)
movs
lods
(bad)
mov
push
out
inc
lock
adc
adc
jmp
push
cmp
ror
(bad)
jbe
or
mov
ds
mov
out
lock
out
jmp
(bad)
mov
inc
fs
cwde
(bad)
xchg
lods
and
dec
cmps
add
push
popa
loope
or
sar
inc
and
outs
daa
adc
xor
xchg
and
scas
mov
dec
das
shl
and
lods
into
fsub
(bad)
mov
sub
aas
and
loope
cmps
loopne
cmp
not
add
xchg
mov
mov
das
dec
adc
adc
jmp
icebp
pmovmskb
fwait
pop
loopne
and
sahf
leave
inc
pmulhuw
jnp
or
pop
popf
add
pop
push
retf
fstp
ja
jb
cli
push
dec
adc
aaa
mov
xor
lds
xchg
iret
ja
cmp
movs
std
cmp
stos
scas
dec
inc
add
enter
call
fistp
mov
sahf
push
inc
adc
(bad)
mov
push
arpl
out
push
mov
mov
mov
cmc
jecxz
add
sbb
inc
fs
jmp
mov
mov
dec
adc
mov
jno
adc
stos
jbe
jnp
dec
ins
shr
das
adc
fs
push
fld
stos
pop
enter
test
(bad)
mov
pop
aaa
lods
push
sbb
add
jmp
aad
std
retf
jne
sub
jb
scas
ja
jo
push
or
stc
ss
cmps
lds
or
push
jne
xor
aaa
es
fadd
mov
arpl
pusha
push
sbb
(bad)
sbb
pop
and
dec
cs
jo
sti
sub
sub
push
in
clc
mov
add
sbb
sub
(bad)
push
sub
adc
shr
lock
push
sub
inc
sar
push
sbb
cmp
repz
or
mov
dec
addr16
lahf
cmc
out
sub
(bad)
ins
cs
cs
stos
adc
dec
popa
mov
ss
xchg
movs
jbe
jne
mov
pop
add
xchg
jns
iret
and
aas
adc
mov
mov
lods
add
stc
outs
cmp
les
into
sbb
mov
rcr
mov
pop
fcmovu
call
jecxz
lods
lods
jmp
cmp
xor
je
push
dec
jle
fdiv
inc
fwait
outs
aad
jmp
mov
das
push
(bad)
push
test
dec
and
hlt
bound
xor
loope
sub
int3
push
xchg
mov
aam
clc
or
pop
icebp
cdq
or
pop
mov
aad
cld
lock
les
(bad)
mov
jmp
xlat
or
(bad)
sub
dec
jb
inc
xchg
test
pop
jo
dec
stos
dec
rcr
outs
pop
loope
je
jp
fstp
cmp
mov
or
jo
aad
loop
xor
dec
arpl
dec
cli
arpl
xor
dec
repnz
sbb
in
adc
xor
pop
ja
nop
std
and
cdq
nop
xchg
(bad)
fnstcw
xor
leave
outs
cs
sbb
popa
ins
jge
sub
imul
inc
aam
dec
jg
push
dec
mov
outs
mov
sub
mov
mov
mov
shr
xchg
or
dec
sub
vcvtps2dq
jne
dec
fidiv
pop
repz
jg
jbe
adc
cmp
mov
push
(bad)
xor
inc
cmps
mov
imul
aaa
or
lods
out
sub
lock
push
mov
pxor
xor
mov
pop
cmp
inc
scas
jne
and
push
jmp
pop
push
stc
push
xor
and
cmp
jns
pop
je
or
mov
sub
push
rol
mov
push
outs
call
ror
fbld
jnp
mov
pop
call
push
mov
pop
push
add
push
neg
jno
dec
adc
sbb
sub
lahf
pop
test
popa
retf
mov
cs
mov
shr
movs
push
(bad)
div
mov
out
test
jl
cmp
inc
ja
cld
popf
jmp
dec
ja
idiv
push
fwait
stc
std
jne
stos
shr
add
aam
test
sbb
push
mov
data16
inc
not
add
sub
pop
inc
in
mov
ja
cld
jl
addr16
je
out
push
xchg
pushf
jbe
(bad)
(bad)
in
mov
popf
dec
mov
lods
bound
cmp
lock
lods
mov
lods
or
lock
xchg
loopne
jo
push
in
adc
or
jecxz
dec
sbb
retf
cmc
cmp
cmp
fwait
cmps
rol
push
and
mov
pop
push
popf
lahf
je
xchg
jge
or
push
sahf
lods
pop
push
mov
add
retf
pushf
into
jge
(bad)
fmul
ins
repz
(bad)
add
adc
cld
imul
out
arpl
test
xlat
repz
jecxz
loope
dec
adc
std
push
push
stos
inc
mov
add
hlt
lahf
jg
ffreep
test
mov
sbb
jne
push
pop
push
or
inc
test
int
xchg
loop
hlt
lds
xor
dec
sub
iret
or
cmp
ret
int3
sti
push
dec
xor
outs
jne
fs
movs
aam
int
in
sub
and
xchg
(bad)
out
sbb
add
imul
jmp
jnp
cmps
add
mov
jbe
lds
shl
ins
mov
jecxz
(bad)
sahf
ja
mov
loop
loop
xchg
test
mov
mov
adc
cdq
jl
push
mov
enter
pop
pushf
lods
xor
push
ror
pop
and
test
int3
cmp
xchg
cmp
aaa
or
and
rol
inc
inc
mov
cmps
mov
repz
jp
stos
enter
data16
xchg
sub
xlat
or
lods
dec
pop
loope
getsec
xor
dec
shl
sbb
loopne
add
mov
hlt
mov
xchg
or
mov
jae
fs
call
jge
xor
push
je
and
sbb
add
xor
aad
mov
(bad)
fbstp
mov
inc
adc
je
and
xor
jp
jae
int
inc
add
ds
repz
jnp
mov
mov
push
jne
(bad)
and
loopne
pop
ja
mov
inc
mov
cld
lds
loopne
addr16
cwde
out
dec
(bad)
test
fild
mov
cmp
jecxz
xchg
pop
add
and
dec
adc
lahf
retf
jbe
sbb
and
sbb
pop
ins
mov
add
xor
clc
in
fild
cmp
sar
jmp
mov
dec
xor
(bad)
das
push
ret
pop
mov
sbb
shl
ror
sbb
ja
jge
popf
inc
in
jmp
lahf
lods
mov
(bad)
mov
mov
enter
adc
imul
icebp
inc
(bad)
shr
cmp
cmp
cmp
pop
sbb
test
aad
retf
(bad)
repnz
(bad)
xor
dec
pop
add
lods
mov
iret
or
xor
pop
push
(bad)
mov
sub
popa
mov
call
nop
jae
push
jnp
popa
in
sub
ins
sub
push
test
mov
cmp
jle
dec
push
mov
mov
xchg
idiv
pushf
je
push
dec
xchg
jne
add
into
pop
push
repnz
xor
(bad)
dec
shl
adc
sub
cmp
lods
into
jle
sbb
adc
popa
push
xor
jo
sti
xor
mov
push
shl
jmp
pop
pop
stc
leave
fs
(bad)
dec
fiadd
loop
sub
fild
test
fidiv
adc
jecxz
xchg
(bad)
push
lds
mov
mov
lods
les
fsub
sbb
pushf
dec
mov
fist
mov
xlat
ror
xchg
cld
or
or
jae
cmp
imul
gs
add
cmp
xchg
fs
rol
sub
seta
push
xchg
dec
cmc
jne
jnp
sbb
cld
dec
movs
loop
(bad)
cli
shr
int3
sbb
(bad)
jle
push
push
popa
(bad)
outs
dec
(bad)
push
dec
cmc
scas
addr16
sub
mov
jmp
dec
mov
sti
xchg
push
inc
xchg
ins
sbb
ss
lock
in
in
call
cmp
pop
sub
jno
(bad)
hlt
add
and
in
(bad)
rcl
xor
push
test
out
(bad)
fimul
ja
mov
ror
push
es
std
push
pop
shl
js
test
and
dec
push
std
push
arpl
push
dec
push
jbe
lahf
call
icebp
retf
in
imul
test
enter
cld
jmp
in
(bad)
adc
jp
into
(bad)
jle
outs
jnp
sti
stos
cmp
(bad)
sbb
int
jl
sbb
cmps
sub
pop
int3
sub
xchg
test
fst
jg
mov
fwait
pushf
mov
fsubr
dec
aas
xor
lock
loop
ret
fimul
out
sub
dec
sbb
imul
pop
call
stos
lock
push
fcmovnu
jmp
mov
dec
push
sbb
iret
(bad)
mov
vpsadbw
sbb
test
fs
jge
in
fisttp
sub
rol
loop
add
xchg
popa
loopne
shl
pushf
cmps
mov
fs
mov
or
cli
add
iret
sbb
and
push
mov
mov
dec
mov
mov
mov
in
sub
pop
inc
pop
mov
pop
out
xor
or
outs
es
outs
sub
mov
mov
dec
test
jae
ret
xor
fstp
mov
push
sbb
mov
sbb
add
mov
xor
push
dec
rcl
mov
adc
gs
out
mov
dec
ret
xchg
cmp
inc
popf
xchg
mov
pop
xchg
into
mov
stos
adc
mov
pop
mov
jecxz
cmp
mov
fistp
ret
movs
inc
mov
xchg
sub
(bad)
in
cli
add
ret
jbe
pop
mov
mov
xor
dec
lds
das
cmp
outs
push
mov
sub
push
sbb
mov
les
mov
loopne
imul
sbb
neg
fdivp
pop
pop
inc
mov
mov
mov
in
push
or
not
mov
scas
stos
test
cmps
mov
loope
sbb
jecxz
mov
and
sub
call
sbb
jg
dec
lods
dec
rcr
dec
inc
mov
ret
add
stos
std
push
pop
out
mov
stos
jg
mov
and
xor
inc
mov
or
cdq
scas
mov
xor
pop
popa
aad
dec
aaa
call
lods
or
mov
and
jle
mov
xchg
(bad)
mov
rol
and
fild
add
pop
mov
add
or
sub
shl
pop
adc
or
sub
add
jmp
into
xchg
jnp
mov
mov
cmp
xlat
dec
movs
xchg
pop
aad
js
lahf
(bad)
clc
and
in
fst
xchg
adc
fisttp
gs
pushf
femms
xchg
xor
dec
xchg
dec
add
call
xlat
xchg
cmp
or
(bad)
or
dec
mov
loope
in
dec
test
pop
mov
sbb
jae
xor
retf
retf
lods
loop
out
or
cli
cmp
ja
and
mov
shl
rcr
pop
mov
xor
and
jns
inc
outs
in
xor
call
retf
int3
fst
pop
out
xor
lea
scas
stc
test
(bad)
xor
fdiv
cli
and
fidivr
or
in
mov
pop
les
les
(bad)
mov
inc
and
mov
rcl
pushf
and
mov
fist
les
imul
add
jns
(bad)
fs
add
(bad)
xor
fstp
inc
fistp
pop
sbb
mov
push
sbb
movs
push
mov
xchg
dec
cwde
add
cmp
int
jb
adc
ds
or
sbb
in
or
jge
sbb
addr16
push
je
cmp
cmps
xchg
mov
xor
lds
out
mov
pusha
jmp
jb
jmp
mov
fild
fld
dec
dec
jmp
cld
jno
in
or
push
jmp
push
stos
scas
dec
xor
mov
stos
icebp
mov
test
leave
lods
sbb
xor
or
cmp
and
xchg
sbb
xchg
adc
imul
lea
pushf
int3
jns
pop
jl
call
dec
fisttp
cwde
nop
and
in
mov
mov
or
jg
jg
arpl
sub
movs
add
pop
out
jne
in
imul
iret
fistp
fild
int
bound
mov
xor
pop
test
iret
and
addr16
ja
out
and
cmp
pop
mov
stos
call
mov
xchg
test
cli
imul
sbb
movs
not
mov
sbb
sbb
ins
test
jp
cwde
jnp
push
push
test
push
iret
sbb
push
inc
outs
mov
xchg
rol
or
sbb
sbb
cmp
or
loope
call
out
inc
push
loopne
cmp
mov
loop
lds
xchg
dec
add
movs
movs
mov
sbb
pop
inc
lods
aas
mov
shl
jne
jg
mov
retf
dec
and
push
jnp
leave
jecxz
jae
in
das
sbb
loope
jmp
outs
imul
and
hlt
frstor
stc
jne
push
jnp
pusha
mov
jmp
inc
outs
adc
daa
(bad)
jno
and
in
jne
inc
push
dec
push
cmps
fwait
push
push
sbb
push
push
mov
push
gs
sub
test
mov
adc
cld
cmp
test
pop
lahf
lds
aaa
mov
adc
in
and
ds
lea
adc
adc
(bad)
loopne
add
inc
cmps
xchg
xchg
sbb
adc
outs
add
imul
repz
and
aad
xlat
cmps
or
iret
das
jo
fsubr
and
rcl
(bad)
push
cwde
fbld
xchg
xchg
shl
cli
mov
nop
shl
pop
out
or
xchg
retf
fimul
dec
jmp
int
loopne
cs
mov
cmps
es
shl
mov
enter
pushf
hlt
sbb
ror
jge
and
pop
mov
inc
(bad)
outs
movs
popf
sbb
loope
test
pop
stos
(bad)
call
jae
mov
jle
outs
jl
call
jo
(bad)
mov
fimul
arpl
pop
fild
jmp
int3
cmps
or
stos
cwde
mov
bound
pop
test
sbb
cmp
loop
and
imul
sub
stc
aaa
icebp
rcl
cs
imul
cmp
mov
sbb
(bad)
cmp
adc
ins
mov
push
sahf
adc
or
adc
push
ins
inc
dec
leave
jge
loop
ror
aaa
jle
push
pop
lock
add
xchg
sbb
out
cmp
out
fcomip
push
cmp
dec
pop
jmp
xchg
call
dec
sub
mov
mov
out
pop
mov
stc
mov
adc
mov
lods
adc
mov
dec
es
cmps
xchg
int
dec
shl
adc
adc
mov
jmp
cwde
ds
mov
jae
xor
xor
test
in
xor
xor
mov
or
pusha
jecxz
sbb
pop
jle
mov
enter
push
ins
not
cmp
and
aam
mov
pop
clc
sub
dec
push
jp
scas
push
sar
retf
mov
(bad)
icebp
sbb
je
and
mov
pop
and
lock
out
pushf
lahf
aam
pushf
loopne
adc
mov
dec
dec
sbb
int3
fcomp
jmp
and
adc
ss
xchg
sub
inc
pop
push
in
pop
(bad)
pushf
sub
(bad)
sub
sub
test
pop
jb
xchg
popf
jecxz
cmp
mov
xchg
xor
pop
hlt
pop
push
cmps
int3
pushf
sbb
cld
sbb
popa
and
push
nop
adc
xchg
clc
in
jo
dec
mov
in
pushf
or
and
jge
inc
dec
imul
cmp
sar
in
ins
mov
cmp
cmp
aas
data16
and
movs
cs
out
(bad)
repz
outs
and
sahf
jnp
inc
sub
gs
(bad)
jmp
jnp
in
sbb
lods
adc
jns
rcl
cmc
pop
sub
and
adc
cmp
inc
push
pop
xor
inc
add
adc
cs
pop
loop
pusha
inc
adc
add
mov
fidiv
xor
adc
std
jmp
scas
test
dec
rcr
sub
push
add
mov
cdq
fistp
shr
mov
pop
jnp
fistp
pushf
jmp
call
imul
jg
or
je
fwait
stc
push
or
mov
fsub
xchg
hlt
call
sahf
stos
mov
xchg
cmp
pop
in
adc
aaa
push
pop
lahf
add
xchg
adc
in
xchg
jne
int
jns
nop
test
in
pop
or
loopne
jns
in
aad
out
fild
mov
int
test
mov
and
call
loop
outs
mov
inc
pop
imul
xlat
arpl
sub
adc
psllq
mov
xlat
fucomp
sub
sub
js
ror
mov
mov
ss
adc
push
jno
mov
xchg
fsub
dec
and
stos
lods
mov
arpl
outs
xchg
jmp
int
test
aam
mov
mov
scas
add
push
push
jbe
sbb
mov
mov
push
adc
or
xor
and
push
mov
inc
push
adc
call
shl
repnz
repnz
cwde
dec
mov
ds
adc
jle
fucomi
inc
cld
fdiv
aad
aam
(bad)
jns
repz
popf
mov
or
retf
pop
shl
push
jne
mov
stos
add
mov
(bad)
sahf
cld
icebp
cmp
neg
movs
push
neg
data16
jmp
mov
mov
scas
or
frstpm(287
and
sbb
xchg
sbb
lods
dec
in
mov
jg
retf
dec
fstp
fimul
rcl
fcmove
iret
ror
mov
jbe
adc
in
xchg
sbb
ss
fs
aad
mov
pop
shl
fsubr
(bad)
mov
lahf
pop
and
push
cli
jae
leave
mov
jae
scas
fisub
add
sub
cli
jp
cmp
jle
ins
cmp
jp
xchg
(bad)
adc
pop
daa
bound
cmp
daa
pusha
jmp
(bad)
cli
scas
cmp
pop
and
dec
test
das
pop
sbb
sub
in
int3
or
sub
xor
add
or
and
mov
xor
nop
in
pusha
or
retf
and
clc
sub
cmp
lahf
mov
xchg
fwait
bound
out
xchg
and
aad
loop
stc
stos
mov
test
or
jecxz
dec
pop
loop
add
lea
dec
xchg
sbb
mov
popa
cmp
mov
add
mov
or
rcl
and
pop
mov
cmp
push
lods
pusha
je
xchg
xor
cmp
jle
test
leave
adc
cmp
and
cmova
ins
xor
sbb
mov
into
mov
mov
int
mov
(bad)
and
ficomp
outs
mov
neg
pop
mov
nop
or
pop
pop
jecxz
add
hlt
add
rol
aam
or
aaa
jns
push
(bad)
out
cld
pop
out
sub
xor
ja
mov
sti
cld
or
ins
mov
test
mov
mov
pop
jae
xchg
fadd
enter
bound
mov
rcl
jno
test
and
mov
loop
std
mov
rcl
stos
repnz
ins
jno
in
and
enter
into
xor
aaa
in
ror
mov
add
push
addr16
cs
mov
mov
arpl
push
xor
pop
mov
fst
jle
outs
ror
jle
pop
test
sub
dec
dec
ret
repz
cmps
repz
ror
inc
push
jne
xchg
inc
and
in
and
daa
xor
test
sbb
pop
or
push
sub
fsub
clc
adc
mov
les
(bad)
loop
sbb
jecxz
stos
sti
(bad)
frstor
xor
and
lods
add
mov
jecxz
adc
cmp
in
mov
imul
push
add
or
fisubr
out
xchg
xchg
ret
call
inc
adc
dec
jno
pop
xchg
lahf
xchg
jmp
lods
repnz
movs
pop
popf
pusha
movs
lea
lds
xchg
mov
add
sbb
sti
add
es
mov
mov
mov
mul
stos
or
mov
gs
(bad)
shr
xchg
sahf
jne
(bad)
xor
in
bound
pushf
sbb
es
mov
mov
xor
lods
mov
pop
repz
test
fsubr
test
pusha
aad
retf
aaa
and
pop
push
stos
shl
arpl
into
ja
clc
outs
mov
mov
(bad)
mov
or
xchg
rol
or
retf
inc
inc
push
jmp
out
push
mov
rcr
test
into
scas
push
mov
stc
xchg
cmp
sub
mov
mov
fistp
imul
jno
pop
outs
shl
pop
push
mov
jnp
dec
mov
cmp
mov
popf
adc
mov
(bad)
bound
and
test
cmps
pop
and
mov
(bad)
or
jmp
rol
gs
cwde
xchg
pop
popa
loope
fadd
cwde
dec
pushf
mov
cmc
int3
int
scas
adc
xor
ret
xlat
gs
out
add
or
mov
sbb
das
push
inc
rcl
cdq
dec
pop
cmps
add
fisttp
dec
cmps
dec
sbb
scas
mov
xorps
xchg
or
stos
pop
enter
imul
fwait
jbe
dec
test
mov
cmc
outs
add
sbb
jbe
mov
leave
inc
mov
adc
pusha
mov
pop
iret
push
add
sti
retf
adc
or
fs
fnstcw
shr
pop
out
iret
pusha
shr
mov
adc
pushf
cli
scas
xchg
xor
iret
ret
mov
cs
cwde
fs
cdq
daa
rcl
xor
sub
xchg
pop
ror
mov
jl
sub
cmps
xor
jp
jnp
push
push
and
add
xor
cmp
arpl
rcl
mov
(bad)
arpl
scas
xor
sbb
mov
test
sbb
stos
dec
fistp
lock
jno
xchg
pop
jg
mov
jnp
fidivr
loop
aad
sbb
jg
or
loop
movs
adc
outs
dec
neg
inc
and
ds
les
xchg
stc
mov
lds
cmc
stos
pop
sbb
add
inc
mov
push
dec
ficom
dec
push
ja
ins
dec
pusha
push
in
or
out
pop
cmp
cmp
out
push
movs
movs
test
rcr
xlat
stos
and
mov
push
(bad)
push
lock
and
sub
ja
inc
out
scas
stc
repnz
mov
and
aas
mov
call
fnsave
shr
ret
fcomp
imul
xchg
mov
push
xor
mov
mov
mov
jnp
jmp
mov
xchg
or
movs
push
lods
out
pop
add
nop
mov
jb
jbe
out
jb
push
jbe
xor
test
mov
sub
neg
and
lods
xchg
fisub
adc
push
or
cwde
mov
jb
stos
add
test
cmp
aam
idiv
fwait
shr
inc
into
pop
add
fstp
xor
mov
nop
and
xchg
or
out
push
xchg
test
into
hlt
rol
and
mov
fwait
(bad)
fild
cwde
dec
inc
and
fld
mov
sbb
sti
scas
sub
(bad)
adc
imul
inc
das
sub
jae
xchg
xor
and
test
clc
outs
jo
and
arpl
stos
sbb
loope
test
push
adc
repnz
repnz
mov
icebp
xchg
adc
sub
test
jmp
call
xchg
cmps
arpl
test
(bad)
loope
loope
stos
dec
icebp
das
mov
cmp
jb
sbb
nop
adc
add
jb
xchg
in
iret
sub
(bad)
jge
cmp
ins
xor
cmp
fldl2e
inc
push
mov
out
mov
out
stc
aas
pusha
pop
iret
leave
sub
sbb
cli
dec
sbb
pop
jmp
std
ret
repz
test
or
cwde
cs
xor
cmc
xchg
daa
enter
ret
xor
pop
sub
ret
sub
add
enter
iret
or
inc
(bad)
mov
sub
cdq
ror
test
cwde
jg
mov
shr
daa
in
mov
adc
jmp
or
and
fidiv
out
icebp
sbb
movs
icebp
sub
mul
repnz
outs
mov
retf
sbb
mov
lahf
jecxz
retf
imul
imul
add
pushf
or
cmp
aad
sbb
sbb
enter
fst
dec
adc
sti
sbb
cld
dec
(bad)
icebp
mov
pop
shr
and
ins
gs
leave
out
or
xchg
xchg
cmps
pop
add
add
cwde
push
inc
movs
mov
ds
dec
cmps
mov
shl
fist
sti
jmp
ds
hlt
mov
push
das
xchg
fild
test
test
retf
stos
pop
pop
out
fistp
sub
dec
lods
cld
cmovnp
pushf
or
retf
mov
std
jne
cmp
sbb
jb
(bad)
adc
cmp
push
xor
lods
dec
mov
mov
adc
ror
dec
cwde
test
cld
pop
and
xchg
add
pop
jno
ret
es
(bad)
ins
arpl
jo
and
sbb
xor
xchg
cdq
in
aaa
jle
or
ret
xchg
mov
inc
xchg
jnp
repnz
call
cli
mov
inc
js
push
bound
inc
inc
dec
adc
push
(bad)
movs
in
xlat
pushf
cs
pop
ins
enter
test
pop
(bad)
sbb
add
sar
push
and
repz
hlt
ret
pop
mov
jmp
(bad)
inc
out
stos
addr16
cmc
cmp
or
or
mov
ss
sub
mov
adc
adc
dec
jae
imul
pop
jl
push
sub
pop
(bad)
or
das
aad
sbb
test
inc
test
inc
ss
lock
cdq
add
push
sar
(bad)
scas
outs
add
inc
sub
(bad)
xor
sub
mov
jno
push
std
and
or
sahf
or
loope
outs
adc
retf
push
out
call
pop
sub
lock
dec
repnz
dec
cmps
add
or
and
jns
inc
cmp
ins
adc
inc
cmp
out
cmc
test
sbb
rcr
test
cs
ror
scas
inc
cmps
cdq
pop
xchg
and
in
scas
sahf
mov
jecxz
and
sub
sbb
cmp
mov
in
mov
jg
or
or
idiv
std
cmp
pop
jecxz
mov
repz
mov
xor
int3
add
inc
popf
or
scas
pop
stc
sahf
add
les
fnsave
stos
mov
sub
out
sub
xchg
dec
sub
push
inc
push
scas
stos
jnp
movs
lds
shr
cmp
pop
mov
sub
cmp
aaa
jecxz
pop
rcr
add
das
jmp
(bad)
and
pushf
cwde
dec
ret
out
xor
data16
dec
fwait
arpl
mov
mov
xor
mov
out
out
in
repnz
xor
adc
fldcw
fst
inc
(bad)
mov
repz
imul
push
inc
pop
mov
je
or
and
sub
or
loopne
sbb
ret
or
shl
scas
xchg
mov
or
int3
jmp
clc
ins
loop
sub
and
dec
jo
aas
xor
adc
inc
add
cmc
call
xchg
je
movs
popa
push
in
adc
test
mov
dec
shr
and
repz
ficom
xchg
call
lock
jo
push
repz
and
clc
or
int
out
addr16
(bad)
push
mov
mov
retf
lods
push
pushf
or
frstor
nop
je
inc
pop
test
lock
repnz
fisttp
gs
das
and
add
jne
in
out
call
jns
shr
in
vpsadbw
or
adc
(bad)
push
pop
mov
pop
xchg
sbb
and
dec
rep
aam
loopne
pop
popa
inc
mov
sbb
push
add
rcr
fmul
cli
shl
in
pop
sub
dec
mov
jmp
mov
add
test
xor
fbstp
push
fnstcw
add
xor
out
lods
mov
enter
dec
fld
sahf
dec
test
in
sbb
dec
sbb
mov
mov
jns
dec
fimul
sti
xor
test
mov
mov
int
int3
in
mov
cmp
test
cmps
outs
into
jne
cmps
mov
je
dec
shl
pushf
pop
and
(bad)
mov
cwde
push
or
sahf
in
push
lods
fxch
cwde
jno
mov
cdq
adc
push
mov
je
mov
jo
push
test
xor
dec
push
lods
pop
jge
mov
pop
adc
fistp
jo
ds
imul
call
repz
dec
mov
sbb
jne
(bad)
fld
mov
pop
cmp
cmps
add
mov
xor
sbb
mov
nop
out
fcomp
and
dec
adc
cmp
and
call
or
pop
in
jo
cmp
sub
gs
imul
repnz
sbb
jge
push
pop
adc
mov
leave
ins
add
xor
and
(bad)
or
test
mov
xchg
out
lods
push
pop
xor
mov
xchg
(bad)
adc
dec
shl
add
mov
inc
add
sub
or
mov
mov
xchg
mov
add
or
mul
fsub
xor
add
push
rol
dec
ficom
shl
xchg
xchg
cmps
std
call
adc
pop
cld
aaa
xor
xchg
xchg
mov
xchg
pop
jmp
fwait
pop
fwait
jo
or
into
in
fisttp
retf
push
cmps
retf
loop
fwait
mov
sar
mov
popf
ja
push
cmp
stc
loop
add
pushf
jbe
cmc
xor
adc
or
nop
mov
ret
dec
add
lods
imul
stc
mov
push
imul
mov
and
into
outs
jmp
mov
jg
xchg
mov
aaa
and
mov
das
fsubr
out
sbb
dec
mov
lahf
cdq
enter
dec
xchg
jae
(bad)
xchg
rol
xchg
out
stc
fs
push
push
or
int
jmp
jmp
pop
mov
aad
adc
ss
push
pop
fisubr
xor
call
xchg
cmp
jnp
mov
outs
xor
xor
gs
cmp
cmp
inc
sbb
xchg
adc
jp
jo
mov
and
mov
lock
jno
push
mov
jne
out
inc
mov
xchg
xor
std
loopne
test
mov
stos
mov
out
xchg
cdq
xor
mov
fmul
out
sbb
imul
jg
int3
sub
sbb
push
lds
jp
movs
xor
scas
lock
rol
jnp
jecxz
aad
fisubr
loope
pop
cmp
push
sbb
jp
adc
sti
and
inc
cld
or
xacquire
pop
xor
pop
stos
cmps
arpl
jle
push
and
sub
adc
jae
(bad)
push
cwde
repnz
mov
pop
jecxz
and
and
clc
mov
ss
and
scas
ficomp
jno
pop
mov
mov
and
jecxz
mov
jnp
(bad)
fld
out
xchg
test
lahf
sbb
mov
mov
jecxz
add
adc
mov
mov
hlt
cmc
ficomp
push
sub
jmp
cmp
or
arpl
and
adc
jecxz
gs
int3
mov
mov
sub
(bad)
addr16
xor
xchg
mov
mov
jne
retfw
in
dec
rol
fstp
dec
data16
mov
jns
mov
es
push
sub
cld
dec
lahf
add
jb
or
outs
stc
pop
mov
icebp
imul
ds
ficom
inc
push
mov
pushf
sbb
(bad)
mov
adc
into
(bad)
in
pop
push
lods
fs
in
lds
xor
and
arpl
sub
std
dec
sub
popf
pop
(bad)
adc
pop
push
cld
mov
jmp
fild
pusha
out
mov
dec
out
fst
xchg
ss
call
repz
mov
repnz
adc
or
sbb
xor
mov
lock
fild
cmp
sub
psrld
fld
jl
ins
sub
icebp
mov
call
test
cmp
dec
jle
cli
lods
sbb
sub
dec
sub
mov
in
pop
cmps
push
xchg
das
sbb
dec
xchg
shl
dec
hlt
or
xor
(bad)
mov
dec
aad
push
pop
jle
xor
xchg
mov
ror
je
cmps
push
inc
add
adc
scas
popa
push
xchg
lock
xchg
hlt
das
icebp
mov
push
cmp
cmps
stos
mov
pop
loop
push
or
(bad)
jae
stc
cmp
scas
cmps
js
bnd
adc
inc
pop
pop
fs
scas
xor
das
or
push
cmps
jb
cmp
es
retf
jnp
mov
shr
xchg
das
cmps
mov
rcl
jbe
(bad)
lock
icebp
push
push
push
mov
jecxz
data16
mov
jge
out
sbb
inc
cmps
pushf
fnstcw
popf
(bad)
in
scas
xchg
mov
pop
cmp
int3
lods
cmp
jg
and
inc
jb
ret
lods
ret
push
mov
movs
and
fdiv
lea
in
mov
popf
xlat
pop
mul
mov
mov
push
in
mov
push
mov
cmp
repnz
or
cmps
xchg
sbb
out
xor
mov
add
lods
scas
cmp
scas
sbb
call
adc
or
loope
in
push
dec
mov
inc
ins
xor
and
out
pop
cmp
jge
jb
(bad)
lahf
aam
push
xor
imul
dec
mov
jp
je
adc
mov
xchg
repnz
out
lahf
xor
inc
cdq
and
(bad)
dec
adc
add
pusha
outs
nop
test
inc
pop
xchg
sub
dec
das
sbb
jl
xchg
add
call
stos
movs
std
mov
xchg
or
mov
xor
mov
in
inc
outs
in
aam
outs
cmp
push
repz
ret
mov
sub
retf
mov
jnp
push
mov
and
std
xchg
aam
xor
js
hlt
lds
cmps
mov
dec
lods
cmps
pop
out
stos
or
xchg
mov
lods
dec
clc
sub
imul
dec
mov
xor
stc
out
call
push
push
mov
or
retf
push
ds
mov
imul
lods
test
mov
add
jmp
jae
or
mov
pop
sti
std
movs
(bad)
xor
mov
sub
add
and
and
inc
cmp
dec
out
movs
xchg
das
cmp
mov
vpshufhw
nop
in
push
repnz
movs
xchg
mov
retf
pop
pop
jle
in
add
adc
sbb
in
mov
and
aad
gs
sbb
scas
mov
cmp
cmp
test
mov
in
movs
dec
in
sub
test
stc
or
add
mov
fld
push
je
in
hlt
or
and
mov
push
(bad)
iret
sar
dec
into
lods
arpl
mov
aad
sbb
pop
nop
add
js
cdq
in
inc
movs
xor
sbb
dec
add
cmp
or
test
mov
popf
out
add
add
push
je
xchg
push
jb
imul
mov
pusha
and
ins
sub
ret
inc
icebp
ror
jae
(bad)
hlt
dec
cmp
sbb
dec
and
adc
xor
cld
or
add
mov
arpl
jmp
in
dec
fiadd
test
and
cdq
movs
loope
pushf
add
inc
mov
leave
cmp
outs
dec
mov
cmps
in
stos
repz
sbb
test
pusha
or
jno
aas
int3
push
adc
dec
aaa
jae
adc
and
pushf
in
push
pusha
scas
jbe
test
fdivr
jecxz
mov
cmc
out
fwait
out
cdq
dec
mov
jecxz
ret
repz
movs
inc
call
test
or
mov
fisttp
push
outs
lock
dec
jae
and
mov
xchg
mov
add
push
cmps
test
loop
ja
aas
cmp
jbe
sbb
pop
dec
mov
or
xchg
jnp
test
les
icebp
repz
mov
(bad)
mov
adc
loop
adc
pop
lock
arpl
(bad)
ret
adc
test
in
fisub
test
jmp
jp
dec
push
int3
les
xchg
lods
sub
pop
adc
js
daa
jge
shr
icebp
lods
mov
adc
out
pop
inc
neg
in
cmp
xchg
mov
push
outs
mov
sti
test
inc
xlat
jmp
adc
inc
dec
(bad)
dec
sbb
cmc
pop
dec
xchg
imul
cdq
outs
mov
jo
dec
icebp
or
add
shr
push
ins
out
sbb
xchg
lahf
out
mov
inc
xor
xor
int
mov
mov
leave
arpl
gs
pop
inc
lea
jmp
ret
rcl
rdmsr
push
pusha
xor
mov
mov
xchg
adc
pop
mov
mov
fwait
xor
inc
call
bound
add
icebp
xchg
test
test
imul
xchg
outs
repnz
adc
aas
inc
cmp
sub
jae
int
add
or
pop
test
xlat
out
mov
jmp
jl
daa
js
push
(bad)
aad
cmp
add
jbe
das
(bad)
or
(bad)
fbld
jg
push
push
push
push
imul
jl
push
pop
add
shr
cmp
lods
fmul
not
call
ins
pop
mov
add
push
call
jnp
loopne
fcmovne
out
vunpckhps
std
ins
aad
bound
stos
mov
inc
mov
sti
aad
mov
sbb
dec
or
push
mov
sub
jle
icebp
into
adc
and
xor
cs
test
xchg
jmp
test
mov
mov
repnz
xchg
and
jnp
aad
or
int
out
jb
sub
sar
ret
cmp
adc
out
ret
mov
adc
retf
lock
and
xor
xchg
mov
ret
jecxz
mov
cmp
(bad)
dec
test
mov
jp
and
adc
and
and
retf
push
test
outs
mov
into
xchg
sub
push
rcr
jns
(bad)
mov
popf
outs
lods
push
dec
push
les
pop
ds
jbe
les
jb
ret
jae
retf
pop
jl
mov
mov
sub
fs
in
int
xor
jl
mov
or
ret
and
mov
movs
das
cmp
pop
mov
and
fidivr
call
add
and
cmp
push
dec
fcomp
lea
mov
rol
jle
and
push
sahf
pop
cmp
pop
(bad)
out
jge
lea
push
mov
repz
leave
push
dec
(bad)
jns
movs
std
mov
ficomp
fild
shl
mov
pop
aam
inc
lock
cmp
mov
shr
cmc
jmp
retf
lods
mov
pop
lods
sub
in
mov
sbb
mov
jl
sbb
cmp
dec
mov
out
pop
iret
dec
(bad)
aad
(bad)
sbb
stc
adc
cmp
or
push
mov
mov
mov
scas
ret
cld
enter
adc
xor
(bad)
dec
dec
aaa
cmp
loope
sti
sahf
popa
mov
popa
push
or
ins
retf
mov
adc
sti
xchg
and
xchg
cmps
dec
icebp
dec
call
fs
jmp
(bad)
mov
or
repz
mov
dec
icebp
pop
stos
sbb
inc
jp
mov
mov
mov
push
data16
xchg
bound
fld
pusha
in
arpl
mov
jp
inc
shl
push
xchg
sbb
mov
push
dec
cmp
mov
inc
cli
pushf
hlt
pop
in
pop
loope
sbb
jle
mov
repz
clc
test
loope
shl
xchg
shl
loopne
pusha
(bad)
in
add
jb
xchg
push
jb
pop
(bad)
or
adc
jns
cs
add
faddp
xchg
test
cmps
idiv
jns
sub
(bad)
jge
test
pop
sub
or
imul
xor
jne
aam
xor
fwait
sahf
push
out
(bad)
pop
(bad)
jmp
push
scas
pop
jge
dec
das
sbb
inc
dec
clc
jp
int3
js
std
adc
xlat
push
ret
sub
sub
adc
xor
hlt
call
or
and
aad
cmp
mov
outs
(bad)
cld
mov
sbb
push
jae
stos
dec
test
shl
(bad)
xor
ins
sub
nop
dec
fcomp
bound
mov
mov
lods
xchg
ret
dec
dec
cs
pop
data16
add
lods
mov
aaa
mov
shr
cwde
cmp
(bad)
rol
out
mov
sub
ins
xchg
sbb
ins
fbstp
cmp
and
jle
or
iret
not
in
pop
jno
xor
ror
add
shr
jg
mov
xchg
arpl
into
setge
mov
cmps
or
mov
mov
fsub
rol
jmp
or
aas
int
fsub
push
les
push
mov
loope
setnp
inc
cld
push
arpl
out
loope
cmps
cs
push
das
ficomp
cmps
cmps
out
clc
sbb
inc
daa
js
adc
mov
dec
mov
xchg
sub
dec
ror
jns
inc
adc
lahf
call
xchg
shl
(bad)
pop
jg
outs
inc
inc
ja
sub
push
push
mov
and
mov
mov
call
std
cs
int
lods
(bad)
imul
test
sahf
rcl
(bad)
cmps
(bad)
imul
imul
lods
loop
daa
jmp
push
loopne
pop
cs
push
xor
dec
fisubr
jecxz
jl
inc
jno
scas
and
adc
frstor
call
outs
xor
daa
push
call
test
push
sub
(bad)
icebp
push
jo
and
lds
jae
adc
dec
(bad)
cli
retf
out
(bad)
jmp
add
mov
dec
sub
xchg
icebp
je
pop
adc
hlt
dec
retf
pop
cmp
push
pop
dec
adc
ror
inc
hlt
mov
fwait
push
pop
adc
(bad)
push
loopne
sbb
pop
cmp
std
mov
aas
(bad)
xchg
push
retf
add
lds
in
lds
lock
pop
xor
jmp
dec
in
xchg
ficomp
inc
xchg
jmp
and
push
push
sub
iret
out
adc
jbe
xor
mov
sbb
xor
mov
push
xor
aas
ins
jae
xchg
pushf
nop
jne
call
xlat
ror
imul
jmp
jo
cmp
dec
dec
cmps
xchg
mov
sub
test
sti
imul
mov
out
and
add
mov
mov
inc
in
inc
stos
xchg
push
sub
loope
add
add
push
popa
arpl
mov
out
inc
ja
and
push
dec
daa
cmp
lds
outs
test
les
shl
or
sbb
ins
int3
fs
sar
adc
(bad)
push
inc
sbb
mov
adc
dec
sahf
push
jb
push
pusha
fadd
jmp
cs
xchg
xlat
not
inc
adc
int3
or
cs
sub
xchg
lock
mov
movs
push
and
xchg
xchg
in
(bad)
hlt
cdq
icebp
lahf
pop
fistp
push
arpl
iret
mov
leave
ins
jl
and
repnz
icebp
sbb
push
mov
pmulhw
cmp
inc
sti
add
jnp
pop
lock
mov
jne
and
outs
push
hlt
sub
mov
adc
jne
inc
cmp
mov
fcom
push
scas
pop
inc
xor
or
loopne
call
sbb
sbb
lahf
adc
xlat
sub
push
sub
cli
inc
push
mov
pop
(bad)
pop
jg
lock
sub
out
add
icebp
xor
mov
(bad)
fidivr
push
jl
sti
aas
aas
sbb
mov
adc
or
pusha
sub
cmp
sub
push
adc
stos
test
mov
inc
adc
push
enter
movs
mov
ins
fsub
aas
sbb
and
test
in
dec
das
push
mov
add
ret
and
je
iret
jnp
or
jns
faddp
pop
jecxz
in
ins
sbb
ss
rcl
scas
aas
xchg
mov
adc
loopne
jmp
scas
adc
popf
out
dec
ret
bound
lea
sbb
add
(bad)
push
adc
cmps
ret
adc
ss
dec
je
dec
jno
pop
jmp
imul
jo
out
dec
mov
mov
neg
xchg
or
adc
(bad)
xor
add
arpl
imul
push
mov
mov
inc
dec
push
imul
xor
dec
call
xchg
loop
mov
push
cld
aas
loope
shr
jg
out
aam
into
adc
or
sub
mov
cmp
sbb
sub
mov
aad
inc
iret
iret
mov
push
aam
in
int
(bad)
popf
in
cmp
fwait
aam
clc
pusha
and
xor
jnp
xor
bound
or
dec
rcl
sbb
and
inc
pop
fmul
or
push
and
jnp
push
into
mov
repnz
cwde
and
leave
test
movs
jg
daa
retf
imul
(bad)
xchg
mov
arpl
jnp
je
aas
or
les
nop
iret
or
cwde
aad
inc
ins
xor
div
push
test
sbb
fstp
inc
and
fs
and
xchg
std
ins
clc
(bad)
jecxz
cmps
sub
or
xlat
std
mov
mov
pop
or
mov
stc
jle
jns
ret
shl
pop
icebp
imul
inc
sub
imul
(bad)
sbb
clc
pop
inc
jns
xchg
sbb
(bad)
mov
cs
(bad)
add
aas
(bad)
cmp
or
test
aad
and
outs
inc
ds
xor
int3
jae
(bad)
push
nop
push
loope
std
and
xor
imul
pop
mov
(bad)
xchg
ja
ficomp
jl
je
test
jnp
add
int
pop
adc
or
enter
xchg
inc
cmps
push
dec
or
cmp
sar
sub
(bad)
fst
adc
repnz
xchg
and
cmp
cs
mov
dec
leave
mov
sub
mov
psrlw
out
sbb
movs
xor
fdiv
xchg
ja
test
js
pop
mov
xor
push
xchg
xchg
adc
std
movhps
enter
je
mov
pop
fisttp
sbb
inc
xor
push
add
ret
mov
adc
push
repz
outs
stc
add
push
mov
xchg
in
imul
push
xor
dec
rol
scas
(bad)
stos
cmp
sahf
or
repz
clc
mov
cmps
add
pop
scas
loope
adc
ret
push
out
or
adc
push
retf
sbb
ret
mov
data16
push
inc
xchg
pusha
pop
in
jg
pop
pop
pushw
loop
lods
pop
mov
(bad)
js
jmp
xchg
ror
pop
jecxz
lods
shl
pop
cmc
(bad)
mov
iret
add
lds
pop
sub
ror
xlat
aam
mov
pop
les
jnp
cmp
repz
shr
sub
adc
dec
adc
pop
int3
xchg
sub
inc
loope
push
in
es
push
and
push
and
pop
sbb
or
popf
xchg
or
sub
push
movs
xor
retf
int
add
xchg
aam
add
pop
pop
shr
add
loope
pop
jae
jb
or
adc
jg
cmp
inc
xchg
push
sub
dec
lds
adc
cli
mov
push
cmps
mov
jbe
mov
xchg
bound
lods
hlt
aam
pop
cmp
gs
xor
fisub
fstp
stos
jno
jg
pop
sbb
sub
mov
sahf
cld
jmp
(bad)
sub
mov
dec
jge
sbb
jbe
call
(bad)
pop
jmp
sbb
fadd
into
ret
xor
xchg
jb
dec
rcr
iret
sub
jecxz
imul
jno
fst
mov
jns
lock
in
inc
repnz
and
xchg
std
aaa
adc
mov
addr16
inc
es
xchg
sub
int3
jmp
repz
jge
jne
mov
fwait
and
mov
pop
add
icebp
push
and
or
repnz
and
sbb
aaa
leave
inc
ins
cmp
mov
inc
fstp
mov
jecxz
add
push
mov
sub
ja
xchg
jmp
sahf
movs
xor
pop
jp
ret
xor
dec
cmp
mov
pop
mov
mov
cli
imul
(bad)
cmp
sar
xor
jns
ins
in
add
cmp
repnz
ret
add
scas
push
pop
(bad)
xlat
or
mov
xor
sub
or
push
imul
in
dec
aaa
popf
dec
shl
es
xchg
bts
push
mov
pushf
and
rcr
and
imul
push
mov
ret
imul
push
push
adc
pop
push
mov
test
das
lds
and
inc
pushf
jb
int3
dec
push
daa
mov
or
in
dec
shl
ss
add
xchg
push
push
sti
or
mul
out
pop
xchg
adc
ds
fld
and
fimul
adc
or
sbb
daa
and
das
ss
fsubr
test
mov
push
les
(bad)
xchg
aad
fdiv
jecxz
sbb
icebp
or
loopne
shl
call
rcl
and
mov
or
lds
cmc
into
ja
into
out
inc
ret
ins
imul
or
mov
adc
retf
sbb
loope
dec
pop
fadd
cmp
xchg
mov
out
cld
mov
adc
inc
sub
xor
jmp
daa
aas
repnz
dec
cmps
mov
mov
cmp
repz
or
adc
cld
data16
xor
sbb
or
lea
lock
clc
loopne
push
(bad)
sbb
inc
push
scas
jle
jb
call
mov
mov
test
in
fisttp
xchg
jbe
push
jbe
cdq
in
test
fiadd
push
cwde
mov
mov
dec
cs
iret
call
ror
push
dec
pop
jg
inc
pop
ins
fstp
pop
xor
cdq
and
mov
enter
ret
jmp
out
dec
sub
imul
mov
repz
or
popa
dec
jae
out
lock
ja
cdq
xchg
int3
loopne
cmp
and
cmp
sbb
and
sub
cmp
mov
inc
fisttp
inc
xchg
enter
xchg
mov
not
mov
addr16
dec
fbstp
in
inc
cmps
mov
ror
ret
push
pop
mov
xor
add
movs
loope
scas
add
dec
push
aam
lock
add
pop
or
sub
aam
cmps
adc
or
daa
ja
push
push
dec
cli
inc
fiadd
repz
and
cmp
and
or
jl
stos
fidiv
(bad)
scas
mov
or
pop
stos
dec
jle
fdivr
test
cmp
adc
leave
sub
dec
inc
push
or
add
mov
sbb
jns
out
add
jge
stos
js
mov
ror
inc
add
test
push
jp
fst
adc
jmp
test
movs
xchg
sbb
jmp
int
fild
ret
imul
out
pusha
or
sub
test
mov
cdq
jmp
sub
cdq
out
mov
or
sub
cmp
(bad)
add
pop
loope
sti
push
fmul
ret
imul
fsin
daa
stos
jmp
add
dec
neg
das
mov
mov
sub
push
jmp
enter
sub
push
or
mov
idiv
arpl
cli
mov
inc
loope
sub
imul
mov
cmp
xor
dec
jbe
in
inc
mov
dec
xor
stos
imul
push
dec
scas
inc
mov
cdq
push
push
pop
add
dec
sub
pop
and
aas
xchg
enter
cdq
unpckhps
pop
jne
xchg
iret
gs
es
jbe
into
jns
add
fcomp
cs
add
xor
out
inc
mov
jecxz
xchg
push
mov
shr
xor
and
or
xor
pop
add
mov
xor
xchg
rcl
and
dec
mov
jmp
add
push
xchg
adc
mov
lods
call
mov
mov
pusha
clc
adc
pusha
outs
mov
mov
idiv
push
mov
add
pop
bound
out
addr16
or
or
adc
push
call
ja
pop
imul
inc
jne
pop
push
mov
pushf
pop
adc
imul
mov
sub
inc
lods
sub
les
push
inc
and
cmps
or
fsubr
cld
pusha
jmp
out
pop
scas
jmp
sbb
(bad)
mov
ficomp
sub
add
jle
pop
sahf
(bad)
mov
bound
in
pop
into
or
jbe
and
and
aam
retf
fwait
pop
(bad)
fs
test
mov
cli
push
jle
addr16
fld
push
pop
cmp
pop
cmps
hlt
xlat
lods
enter
or
ja
inc
jne
xor
xchg
out
test
mov
mov
sub
and
daa
jle
arpl
adc
lea
rcr
aam
icebp
inc
mov
cld
aad
out
and
fwait
adc
clc
jns
fisttp
ror
jnp
mov
push
xchg
pop
mov
sbb
rcr
cmps
jge
loop
sub
adc
pop
pop
jns
out
push
pop
(bad)
adc
shl
int
and
push
ins
je
push
popf
call
mov
sub
fistp
les
jmp
or
mov
dec
mov
push
jne
repz
sub
sbb
sbb
cmp
mov
sbb
call
and
jmp
jnp
push
dec
sti
fdivr
dec
sub
(bad)
and
pop
retf
push
call
repnz
lods
(bad)
cmp
xor
xor
fst
iret
ins
jmp
int3
and
mov
add
icebp
mov
jbe
fsubr
aad
mov
imul
or
xlat
xchg
mov
xchg
sahf
mov
mov
mov
cmps
sub
add
sub
leave
xor
fild
movs
ret
idiv
inc
xor
std
adc
xchg
push
add
pusha
data16
lea
pop
jp
inc
in
test
sbb
fcmovbe
lock
push
cmps
je
mov
call
xchg
aas
js
sbb
movs
dec
ja
push
test
in
xor
int3
cmp
aas
push
in
adc
ins
jmp
xor
xor
adc
jne
adc
aad
pop
mov
or
test
cmp
fstp
xchg
scas
dec
inc
cmp
mov
int
mov
push
leave
mov
sub
mov
les
jne
jns
jg
ret
(bad)
popa
or
fstp
xchg
adc
pop
(bad)
lahf
mov
aaa
jns
jge
jg
cwde
dec
inc
mov
repz
cmp
mov
and
cli
rcr
mul
inc
push
outs
cmc
inc
or
shl
and
xor
clc
les
sbb
cmp
sahf
mov
pop
je
outs
aad
and
call
int3
cmc
push
sbb
hlt
add
fdivr
outs
outs
jbe
adc
xchg
shr
std
mov
mov
iret
outs
jl
pushf
mov
cmp
sti
lock
in
push
jae
mov
add
pop
clc
sbb
imul
mov
pop
and
bound
jno
push
mov
in
adc
mov
xchg
mul
in
rcr
add
push
push
jmp
loop
mov
fwait
loope
dec
or
jl
enter
jmp
scas
jb
jg
dec
mov
and
std
movs
clc
in
and
jno
and
push
add
lock
cmp
daa
or
sbb
lock
daa
or
xor
lock
clc
adc
inc
adc
push
cmps
jne
jg
sub
cmp
dec
push
test
or
jb
das
inc
not
push
sub
rep
repz
add
cmps
sub
std
nop
pop
dec
movs
sahf
ins
ins
ins
cli
fbstp
cmp
push
xor
dec
push
inc
mov
ficom
ret
stc
dec
xor
xor
aaa
xor
sar
inc
pop
adc
das
pop
dec
sti
cmps
push
ror
add
and
dec
test
cmps
ficomp
cmp
(bad)
stc
call
cmp
mov
xchg
push
rol
adc
in
mov
movs
xchg
popa
lods
jmp
and
dec
enter
outs
stc
add
movs
mov
add
hlt
sbb
pop
push
cmp
mov
scas
fxch
cmc
(bad)
in
add
(bad)
cld
aaa
mov
and
ficomp
in
add
imul
ror
(bad)
clc
cmp
sub
and
fdivr
and
popf
or
mov
adc
pop
inc
sti
std
cmps
ficom
not
ret
mov
hlt
mov
nop
push
cld
fcmovb
fcmove
ins
xchg
adc
shl
add
les
stos
inc
fbstp
outs
stos
ss
jns
dec
jnp
mov
retf
aad
pop
repz
pop
jae
ja
push
stos
cmps
xchg
mov
aam
jp
push
popa
mov
ss
adc
mov
out
mov
and
mov
jmp
loop
jp
jbe
loope
xchg
hlt
adc
xchg
sub
jmp
mov
js
mov
jne
test
je
xor
fs
int3
xor
cmp
add
mov
xchg
or
sub
repz
inc
inc
add
add
div
pop
aas
out
pop
popf
sub
repnz
push
out
mov
scas
ret
cmp
push
enter
icebp
mov
dec
shrd
sbb
mov
sbb
push
cmp
out
(bad)
or
and
enter
xor
cli
data16
sbb
push
les
cmp
push
lds
call
mov
ret
sub
js
inc
inc
push
ss
in
out
outs
or
add
aam
fidiv
mov
out
lods
popf
out
add
lock
jge
mov
xchg
fcomip
add
inc
hlt
fcmovnb
xchg
fwait
aad
or
inc
pop
pop
cmp
inc
jmp
sbb
(bad)
js
mov
popa
xchg
aaa
je
je
repnz
fiadd
pop
dec
push
dec
sbb
xchg
dec
mov
xor
adc
sbb
push
push
cli
int
mov
sahf
push
xchg
push
pop
or
arpl
push
xor
dec
xchg
sbb
jle
push
cmps
rcl
xchg
jge
fcomp
repz
bound
in
jmp
sbb
jne
sub
fs
fs
pop
in
push
hlt
movs
dec
push
sub
ds
cld
ins
jmp
or
sti
js
pop
push
fs
stos
lods
cli
mov
(bad)
in
stos
fstp
dec
pop
popa
mov
or
imul
push
pop
dec
(bad)
hlt
cli
jns
cmps
jge
sbb
stos
push
mov
mov
add
daa
inc
daa
repnz
adc
dec
pushf
jg
iret
pusha
mov
into
mov
stos
pop
sub
push
push
sar
sahf
loopne
mov
cmp
pop
cld
(bad)
test
icebp
rol
iret
push
(bad)
pushf
inc
push
mov
gs
lods
jp
lods
cmps
repz
out
aaa
add
fisubr
lods
pop
fnclex
dec
push
popf
hlt
sahf
(bad)
mov
gs
lahf
popf
es
sbb
mov
ins
aad
add
pop
dec
mov
and
xchg
jno
shl
mov
push
ins
push
fdivr
xchg
(bad)
mov
cmp
test
pop
in
push
or
pusha
xlat
sub
out
add
and
dec
xor
pop
add
xchg
int3
cli
arpl
add
cmp
outs
mov
dec
cmc
sbb
inc
ins
lea
mov
sahf
push
jl
pop
(bad)
in
fwait
push
retf
pop
ins
add
mov
stc
(bad)
loope
retf
mov
cld
call
retf
mov
retf
sub
add
retf
inc
cmp
push
aas
pcmpgtd
icebp
push
popa
aaa
movs
hlt
cmps
xor
mov
stos
scas
inc
in
in
fwait
aad
sbb
sbb
mov
out
jp
xor
sub
cmp
mov
push
gs
inc
movs
cld
pop
ins
cld
add
test
jne
retf
inc
inc
xchg
sbb
sbb
dec
enter
pop
pop
cmps
das
(bad)
fldcw
int
xchg
mov
es
adc
jecxz
push
xchg
retf
aad
mov
cs
ficom
(bad)
mov
rcr
jbe
and
arpl
je
arpl
cmps
mov
pop
int3
cmps
sbb
lock
mov
lahf
xor
fcomp
retf
dec
pop
sub
fs
add
jne
movs
xchg
adc
add
xchg
jl
stos
jp
outs
mov
(bad)
xor
pop
mov
or
stc
pop
mov
pop
fld
add
addr16
fcmove
unpckhps
mov
mov
dec
psubusw
jae
mov
xchg
xor
lds
or
add
stc
pop
sbb
or
fdivr
dec
cmps
ret
test
cld
shr
sub
xchg
jbe
inc
pop
pushf
test
icebp
mov
(bad)
xchg
sar
xchg
add
test
out
jge
jb
mov
xor
xor
arpl
or
lods
mov
or
push
push
jg
fs
les
mov
repnz
mov
pop
add
xchg
sub
jle
cli
sti
repnz
cdq
mov
cmp
mov
lods
lock
jnp
mov
jb
mov
cs
pop
add
mov
jecxz
loop
xor
retf
jge
outs
dec
daa
or
scas
adc
cmp
adc
push
pause
sub
fdivr
and
and
repnz
mov
add
cmp
arpl
mov
pop
fdiv
xlat
inc
or
stos
mov
pop
cld
jmp
dec
nop
push
out
pop
aas
fldcw
jp
dec
ds
xor
dec
scas
pop
in
jecxz
dec
sbb
not
push
(bad)
push
pop
aaa
xor
in
push
ret
adc
dec
mov
arpl
cmps
addr16
pop
adc
add
adc
enter
xchg
pop
gs
pop
push
dec
call
dec
and
mov
imul
xlat
movups
sub
shl
jg
dec
push
sub
sub
cmp
dec
lock
pushf
cmps
lods
test
push
ret
aaa
out
cmp
out
pop
shl
push
push
out
into
fist
xchg
and
pop
sbb
mov
mov
push
add
adc
lds
std
cmp
xor
mov
pop
xor
sti
pop
add
jns
(bad)
test
inc
or
jbe
popa
sub
and
push
out
idiv
arpl
adc
shl
cli
ins
sti
push
clc
shl
add
aas
icebp
push
jg
pop
cld
and
shr
cwde
and
xchg
push
pusha
iret
xchg
dec
or
dec
mov
sub
and
ss
or
xor
or
jp
push
xchg
outs
sbb
add
mov
mov
pop
mov
(bad)
lock
retf
xchg
pop
sub
push
push
mov
movs
loopne
pop
mov
ins
aad
retf
int
sti
int
aad
sar
xor
mov
fidivr
retf
add
cdq
fdivr
movs
jmp
je
rcr
test
jb
scas
sahf
repnz
stc
inc
loopne
xor
jmp
dec
xchg
push
ror
pop
sbb
mov
jne
sub
mov
xchg
or
mov
rcr
mov
mov
or
inc
add
jg
push
test
jl
adc
mov
xor
jne
sti
shl
dec
pushf
loopne
cmp
loope
push
sbb
aam
fadd
cli
retf
jg
sub
je
test
cmp
leave
sbb
das
cmp
out
addr16
rol
pop
stos
sub
sub
dec
hlt
mov
and
jbe
xor
rcl
loopne
test
dec
inc
xchg
xor
jmp
cmp
cmp
cmp
push
mov
sub
xor
inc
add
xchg
jnp
adc
pop
add
cmc
lods
outs
aas
inc
jbe
ret
sahf
(bad)
repz
add
xchg
add
(bad)
repz
add
add
or
mov
adc
not
jge
push
mov
inc
call
jae
mov
pop
jno
cdq
into
and
dec
enter
aad
test
sub
add
int3
dec
mov
pop
imul
icebp
retf
aam
pop
mov
xchg
adc
push
imul
fmulp
add
push
xchg
bound
sbb
cli
dec
retf
jmp
jmp
xor
dec
push
mov
dec
sub
lods
mov
mov
inc
mov
in
pushf
pushf
stos
(bad)
or
adc
lock
clc
outs
push
fcomp
inc
pop
mov
movs
adc
aad
cmp
sub
in
loop
jb
rol
dec
call
test
retf
imul
test
adc
push
out
pop
sbb
mov
add
jge
ins
loop
test
push
jg
cli
add
aam
xchg
inc
jmp
push
rol
aam
pop
out
pop
js
xchg
sbb
and
mov
and
(bad)
ins
mov
(bad)
lds
sar
mov
sbb
repz
iret
jmp
dec
cmps
aam
(bad)
cmps
jge
(bad)
xchg
aaa
in
iret
les
xor
fstp
add
jl
mov
out
call
add
ss
fcom
xor
push
mov
jb
test
into
jne
xchg
out
mov
out
dec
xor
retf
push
in
inc
fisub
fdivr
mov
or
sbb
cmp
cmp
shl
sub
dec
jne
imul
cs
test
and
pop
or
test
cs
in
int
push
or
call
push
repz
nop
jae
add
sub
pushf
push
out
mov
fsub
jge
adc
mov
data16
ret
xchg
hlt
pop
test
or
test
lahf
jg
jle
pop
cdq
jp
xor
jle
imul
fwait
inc
lods
push
les
jecxz
(bad)
les
loopne
jno
sti
aam
fldenv
push
pcmpgtw
inc
mov
mov
mov
rcr
cwde
test
mov
sbb
imul
lods
jns
mov
or
sbb
xchg
push
push
push
fs
mov
push
inc
ror
stos
mov
dec
jb
ins
push
mov
stos
ins
jno
sub
or
jmp
mov
push
sub
push
dec
dec
stos
inc
mov
lds
cmps
add
pop
sub
or
aad
xor
imul
out
add
rol
cmp
jns
and
mov
xchg
pop
das
ins
int3
sub
adc
and
(bad)
(bad)
adc
repz
out
adc
repz
or
into
and
retf
scas
pop
retf
mov
rcr
lods
mov
or
xlat
and
je
xchg
sub
inc
push
mov
and
xor
enter
sub
outs
jecxz
or
adc
sbb
add
inc
xchg
mov
mov
daa
adc
dec
shl
fst
popf
sbb
call
or
stc
aaa
dec
and
stos
sbb
mov
lds
pop
pop
cmp
sahf
aas
rcl
icebp
jae
and
xlat
cmp
es
xor
pop
and
mov
sahf
jne
ins
inc
sub
je
popf
xchg
add
sub
pop
add
dec
out
lods
mov
or
adc
jnp
(bad)
jge
mov
into
sub
stc
cmp
lock
pop
aad
mov
retf
jnp
or
push
stos
and
retf
out
jmp
imul
dec
xor
sbb
stos
ds
jge
jno
mov
lea
cmp
sti
outs
in
adc
aam
xchg
xchg
sti
jnp
xor
sbb
int
stos
fisubr
mov
test
addr16
aaa
sar
fiadd
add
je
adc
sub
dec
or
and
enter
cmp
cld
fs
dec
inc
test
sub
fild
les
sar
fld1
inc
xchg
daa
adc
enter
out
jmp
mov
push
pop
shr
scas
jno
push
or
inc
adc
xor
inc
mov
ds
mov
pop
mov
test
inc
dec
mov
jns
arpl
iret
xor
jnp
jmp
pop
scas
xchg
jp
mov
je
mov
ds
mov
push
mov
cmps
push
mov
stc
retf
les
fnsave
ja
jb
shr
in
jnp
movs
movs
adc
popa
push
test
lods
jns
movs
sub
sbb
adc
scas
aam
push
les
mov
popf
push
loop
in
add
jle
bound
cwde
in
adc
sub
cmc
mov
pop
sub
repz
hlt
nop
call
dec
fadd
push
dec
aad
dec
popa
movs
mov
push
jmp
pushf
mov
shl
adc
mov
xchg
lock
rcr
xor
sbb
(bad)
mov
call
rcl
(bad)
push
jb
call
stos
add
lahf
mov
(bad)
or
mov
add
adc
jle
xor
dec
push
cwde
cdq
daa
adc
pop
inc
out
(bad)
xor
data16
out
fld
sub
inc
retf
add
inc
les
jecxz
adc
shl
cmc
xor
in
xchg
rcr
je
sub
adc
and
int3
jnp
push
hlt
in
xor
in
jae
mov
mov
fidivr
mov
cmp
lahf
and
sbb
xor
push
pop
and
xor
mov
sahf
push
out
mov
mov
pop
cmc
shl
add
repz
lds
movs
sbb
enter
pop
int
sbb
cmp
xchg
imul
outs
and
jb
sub
xor
imul
outs
push
mov
sahf
test
rcr
ja
jmp
xor
inc
bound
mov
xor
xor
jmp
and
fistp
dec
mov
cmp
mov
scas
add
jb
imul
retf
xlat
out
jge
scas
xchg
add
mov
sub
fs
jmp
sub
lock
jmp
jmp
je
rcl
int
cld
hlt
outs
inc
or
fmul
xchg
les
push
icebp
loope
inc
int3
jno
jle
push
pushf
aaa
aad
add
not
imul
stos
ja
out
sub
jae
cs
arpl
pop
into
adc
mov
fs
hlt
push
fstp
mov
ins
xchg
sub
xor
xor
jl
cli
push
sub
(bad)
stc
sub
cmp
inc
repz
in
xchg
ficomp
jb
push
xchg
sti
xor
sub
ins
mov
and
and
aaa
jmp
jae
add
xchg
es
or
dec
cmp
adc
xchg
mov
dec
dec
test
sti
or
mov
push
in
cli
rol
mov
mov
or
fs
adc
push
data16
loope
sbb
push
ret
ret
(bad)
mov
(bad)
fimul
rcl
push
test
sbb
clc
cmc
pop
(bad)
mov
mov
ss
repz
(bad)
jge
cdq
xchg
hlt
popa
pushf
(bad)
push
mov
dec
repnz
repnz
or
sbb
sub
(bad)
pop
(bad)
push
inc
aad
push
cld
jp
fstp
pop
pushf
cs
pop
add
and
(bad)
mov
xchg
xlat
sti
dec
pop
mov
int
dec
jns
jo
in
rcr
out
gs
jne
inc
push
mov
push
in
je
dec
mov
jne
lods
pop
push
ins
push
push
ds
lea
push
sti
bound
fnstenv
jae
cli
jecxz
push
fidivr
inc
or
sbb
outs
dec
xor
pop
xchg
inc
jg
jno
aaa
(bad)
inc
popa
cmc
add
cld
je
and
mov
shl
sar
std
cwde
xchg
mov
dec
out
jl
mov
dec
xchg
push
mov
adc
jmp
scas
mov
sbb
(bad)
les
mov
add
add
out
gs
mov
dec
mov
push
aad
int3
and
das
lods
pop
or
xchg
pop
loop
xchg
das
lea
jns
popf
add
sub
xor
pop
imul
jno
(bad)
out
jo
add
(bad)
rcr
sar
pop
jp
add
jg
and
rol
mov
mov
sub
ds
and
hlt
jns
stos
or
sar
xchg
xchg
ja
xor
mov
outs
xchg
jg
arpl
rcr
inc
lods
sbb
mov
les
ss
inc
adc
dec
sub
mov
loop
or
cmps
xor
out
shr
adc
jno
mov
mov
cmc
add
stos
lock
outs
xor
hlt
pushf
sar
(bad)
lds
pop
dec
loope
cli
cmp
imul
into
ss
dec
pop
gs
test
mov
cmp
jp
daa
sbb
xchg
lods
pop
paddd
pop
jmp
fdivrp
xchg
and
imul
movhps
into
or
mov
sbb
dec
pop
(bad)
xchg
rol
and
ret
inc
out
and
mov
xchg
(bad)
jge
mov
or
lock
out
not
mov
mov
int3
pop
mov
mov
adc
cmp
dec
dec
push
retf
adc
xchg
jns
push
data16
cmp
push
mov
sbb
(bad)
adc
fimul
ss
and
pop
fcomp
dec
dec
scas
mov
mov
adc
mov
idiv
dec
stos
ror
mov
lock
leave
mov
cmp
mov
icebp
jne
add
out
mov
aam
int
add
pop
hlt
mov
leave
into
gs
sub
push
pushf
add
test
jl
les
xor
jmp
pop
jb
or
mov
or
inc
sub
or
ss
mov
sar
loopne
or
jge
jns
dec
retf
push
sbb
gs
cmps
test
movs
out
ficom
retf
jb
jmp
fcmovbe
aam
xor
out
adc
das
mov
and
aaa
in
loope
jns
dec
add
aas
cmc
loope
loope
mov
cmp
in
sub
neg
cli
scas
out
fdivr
out
mov
and
mov
rol
pop
pusha
and
movs
pop
cmp
nop
movs
mov
enter
out
in
mov
test
pop
aaa
mov
ret
pop
dec
xor
pop
(bad)
(bad)
add
les
add
and
repz
sti
imul
dec
aad
stos
ss
imul
jg
rol
add
(bad)
repnz
mov
vmulpd
or
data16
pusha
and
xchg
or
jo
cmps
inc
sub
fs
popf
push
pop
sub
ja
xor
(bad)
out
fisttp
xchg
mov
aaa
jns
add
mov
and
dec
shr
lahf
sbb
retf
loope
dec
and
mov
xor
fbld
std
daa
sub
int
outs
repnz
dec
arpl
outs
dec
pop
jmp
loopne
inc
sbb
sbb
jmp
in
div
add
push
retf
ds
cld
out
scas
loop
sbb
mov
xchg
cmps
jp
dec
sbb
sub
imul
aam
mov
mov
(bad)
loopne
fstp
repnz
loope
jns
dec
aas
(bad)
into
add
mov
cmp
fcom
mov
in
sbb
mov
rcl
fs
inc
in
mov
and
(bad)
pop
mov
push
mov
dec
movs
aad
(bad)
lds
cmp
adc
mov
jle
ins
in
add
rol
mov
cmp
imul
test
inc
mov
cmps
mov
jmp
bound
(bad)
sbb
xor
sbb
(bad)
sbb
add
cld
push
shl
pop
cmc
mov
adc
dec
ret
movs
ja
or
ret
cmp
pop
idiv
ja
ret
sbb
xchg
xor
rcl
inc
xlat
in
or
shl
dec
xor
daa
hlt
pop
popf
stos
outs
mov
(bad)
cli
add
and
xor
xchg
fnsave
retf
sub
shl
dec
sti
sub
or
(bad)
jns
cmp
fwait
dec
sbb
xor
jne
push
jae
push
xor
inc
pop
inc
nop
(bad)
mov
pop
jge
and
add
mov
and
and
push
fcom
(bad)
sbb
xchg
inc
xchg
retf
push
push
test
push
dec
js
push
sti
lods
push
or
sbb
add
bound
addr16
pop
add
out
repz
mov
adc
inc
mov
outs
fnstsw
mov
out
(bad)
sbb
mov
sub
push
adc
(bad)
inc
push
dec
add
mov
retf
add
call
dec
or
jno
sub
push
lods
xchg
add
xor
aaa
pop
out
push
and
xchg
out
sub
jecxz
movs
retf
adc
lods
lea
cli
std
int
add
in
sbb
neg
scas
(bad)
adc
mul
inc
fsubr
out
pop
jge
mov
mov
outs
add
add
ja
(bad)
adc
std
test
sub
mov
push
push
jmp
mov
scas
sub
fimul
inc
cmp
dec
retf
inc
sbb
jl
pop
dec
push
or
(bad)
jecxz
pushf
imul
(bad)
imul
add
leave
(bad)
xchg
sub
adc
out
sbb
jno
lds
sbb
mov
loopne
push
call
sbb
(bad)
vmptrld
daa
sub
sbb
iret
repnz
push
pop
push
xchg
fild
repz
push
mov
cmp
pusha
gs
adc
lods
mov
sbb
cs
xchg
loopne
sbb
not
pop
ds
scas
push
cmp
inc
xchg
out
ins
aaa
inc
push
cli
movs
je
inc
popf
or
repz
xchg
mov
aad
sbb
(bad)
repz
jg
call
pop
cmps
in
add
xchg
mov
jl
adc
ret
nop
cmp
iret
sbb
jno
stos
cmp
iret
mov
add
out
lods
add
addr16
jns
mov
fadd
test
pop
hlt
mov
sbb
jecxz
(bad)
pop
loope
xor
iret
movs
push
(bad)
pop
ins
xchg
mov
fnsave
pop
hlt
js
in
dec
jmp
in
(bad)
outs
ss
aas
cmp
rol
cmp
test
mov
div
dec
and
(bad)
mov
pop
jmp
pusha
loopne
mov
test
ins
fimul
addr16
dec
mov
xchg
inc
lea
cmp
mov
jo
push
mov
dec
repz
hlt
nop
xor
mov
rcr
fdivr
mov
call
rcr
add
fsqrt
mov
outs
jmp
xchg
jae
or
scas
cmp
mov
push
pop
iret
gs
ret
xchg
push
rcr
stc
(bad)
fadd
xchg
imul
inc
push
(bad)
mov
cmps
sub
xor
iret
mov
call
mov
rcr
or
iret
test
jns
(bad)
cmps
(bad)
mov
fwait
jmp
je
fld
mov
jbe
outs
mov
sbb
in
outs
adc
daa
pop
push
out
daa
add
pusha
std
adc
mov
mov
cmovno
adc
data16
scas
and
imul
and
pop
xor
into
push
mov
test
(bad)
aaa
fstp
icebp
push
mov
mov
mov
fisubr
int
or
inc
jnp
lods
xor
cmp
daa
(bad)
cs
outs
add
(bad)
push
push
adc
loope
leave
cmps
mov
push
pop
cmp
enter
fcomp
out
dec
push
call
aas
jb
ret
dec
fiadd
ds
inc
jle
(bad)
dec
aas
out
push
sar
sbb
sbb
inc
push
loope
cdq
xor
stc
fidiv
or
call
ins
pop
ds
mov
mov
imul
pop
idiv
cmc
sub
xor
jg
and
fwait
inc
pop
out
jnp
aaa
data16
retf
add
dec
xor
adc
ins
rcl
cmp
js
in
loope
repnz
test
cmp
das
jb
adc
in
add
push
movsx
hlt
push
test
sbb
mov
mov
f2xm1
push
and
out
jae
daa
fstp
jg
cwde
js
js
push
das
xor
leave
out
add
xchg
inc
fwait
cmp
int
inc
iret
add
xchg
push
shl
ins
add
out
jno
mov
mov
cwde
pusha
imul
jmp
mov
scas
xor
shr
inc
jg
jmp
in
imul
in
scas
jmp
icebp
mov
and
scas
or
arpl
ret
inc
push
fwait
xchg
or
(bad)
pop
pushf
scas
or
loopne
movs
int
dec
or
sbb
push
jmp
mov
mov
cmps
(bad)
dec
cs
aas
push
inc
and
inc
pop
test
push
sub
lahf
test
test
mov
out
cdq
mov
pop
or
ja
scas
add
loopne
xchg
cmc
scas
(bad)
mov
je
rcr
cmp
(bad)
mov
mov
xchg
and
cmps
inc
jo
or
xchg
xchg
test
adc
mov
sbb
adc
dec
or
int3
push
test
rol
lock
stc
icebp
lds
movs
mov
pop
popa
(bad)
mov
cdq
adc
xor
lods
jbe
jl
cmp
cmp
push
rcr
jne
push
xchg
mov
cwde
sub
push
sub
xchg
shl
dec
iret
mov
dec
fcmove
arpl
ret
cmp
inc
push
shr
shr
pop
(bad)
jno
dec
dec
inc
pop
sbb
jmp
iret
push
lahf
movs
pop
jb
out
loop
fidiv
mov
test
mov
mov
jecxz
inc
dec
call
pop
xor
cld
jg
mov
cs
sbb
sbb
cmp
hlt
lahf
inc
push
popf
xchg
out
ins
cmp
dec
call
mov
cmc
out
push
jmp
pop
test
cmps
push
and
and
sub
in
xchg
pop
pop
movs
dec
dec
lods
or
cmps
mov
push
aam
aam
arpl
(bad)
js
push
jle
mov
test
les
sbb
inc
xor
or
loope
mov
cmps
sub
aad
or
pop
int3
mov
sub
cmps
mov
xchg
mov
nop
and
xchg
xor
sub
cwde
jle
addr16
mov
scas
pop
pushf
shl
retf
mov
pop
pop
cmp
loopne
stos
and
mov
mov
mov
dec
pop
(bad)
shl
pop
mov
inc
sahf
pop
jecxz
stos
jmp
lea
sbb
sub
mov
out
mov
inc
cmps
js
dec
in
cli
or
out
push
push
inc
mov
add
test
repz
xor
hlt
mov
lea
jl
repz
call
xchg
jge
cmps
or
scas
inc
movs
aad
jnp
fwait
ret
cld
not
sbb
cmp
sti
mov
or
add
(bad)
lds
fsubr
mov
sbb
pop
push
leave
ss
jno
scas
pop
pop
rcl
les
ins
or
fidiv
inc
je
in
call
rol
enter
pop
or
popf
adc
mov
mov
loop
cmp
out
xchg
cmp
sub
sbb
fbld
and
jbe
sbb
or
cmp
mov
clc
loop
popa
pop
xor
loopne
sahf
cmps
in
cmp
sti
popf
adc
ror
cmc
imul
in
iret
add
ins
sub
js
fsubr
cmps
jmp
xchg
cdq
jle
in
stos
pop
mov
adc
cmp
xchg
das
push
das
(bad)
mov
sbb
shl
or
icebp
mov
mov
mov
fld
mov
dec
fnstsw
push
test
(bad)
js
add
repz
fisttp
dec
add
jmp
repz
push
cs
jo
sbb
mov
out
(bad)
pop
add
or
push
inc
and
test
add
sbb
stc
fisttp
xchg
sub
jbe
adc
jno
out
push
jo
fld
int3
cmp
loop
loop
mov
popa
cmp
ja
cmp
fstp
test
sub
sub
fisubr
pop
jmp
mov
test
xor
jle
aas
mov
scas
ret
enter
(bad)
cmp
loopne
stos
(bad)
ins
dec
and
aas
hlt
push
pop
ds
out
pop
inc
mov
jo
jns
adc
pop
cmps
leave
jl
push
sbb
call
inc
lods
mov
push
(bad)
sbb
call
sbb
inc
lds
shr
jb
sbb
push
mov
mov
adc
dec
push
scas
(bad)
stc
xor
jmp
outs
call
jns
(bad)
mov
aam
in
add
push
cmp
and
(bad)
cli
xor
mov
repz
cmp
push
jl
sub
xor
in
outs
aas
xchg
inc
test
sti
xchg
cmp
mov
jp
inc
push
fnstcw
xchg
lods
call
cmp
push
popa
inc
out
hlt
adc
in
pop
mov
xchg
fsub
xchg
addr16
or
imul
dec
(bad)
jne
sub
pop
das
mov
jne
sub
adc
sub
sub
cmp
adc
mov
push
cdq
pop
and
and
dec
inc
retf
jo
(bad)
cmp
inc
push
or
fbstp
mov
test
mov
ret
push
icebp
add
or
out
leave
pusha
fucomip
inc
mov
jb
fsubr
ja
xlat
js
and
sub
or
cli
adc
inc
sbb
outs
sub
jnp
push
mov
sub
sub
idiv
sub
out
stos
jmp
and
loopne
sti
outs
jl
or
cmp
ret
xor
fld
call
xchg
data16
pop
jmp
jp
push
mov
mov
jl
addr16
push
dec
jne
out
push
xor
outs
mov
(bad)
repz
pusha
mov
repnz
leave
out
les
out
dec
and
movs
pusha
or
cwde
(bad)
jae
jp
dec
std
inc
pop
push
inc
cs
mov
fst
mov
out
pushf
inc
inc
pop
cmps
mov
fst
lds
sub
fnstcw
loopne
iret
int3
push
pushf
es
add
loope
adc
dec
sahf
aam
lods
sti
inc
inc
ins
(bad)
jae
xabort
adc
jns
or
jb
data16
push
cmp
jmp
sub
push
(bad)
popf
sub
add
stos
mov
call
cs
push
aas
imul
or
movs
and
dec
mov
mov
xor
dec
or
xor
dec
jne
sub
and
adc
and
lahf
and
jo
sbb
and
not
pop
ret
xor
scas
imul
mov
jle
in
inc
dec
out
cmp
push
mov
mov
xor
fcmovb
mov
cmp
lahf
shl
rcr
rol
push
add
cmp
out
(bad)
out
les
sbb
ret
rcr
mov
xor
call
ror
int3
add
sub
jge
push
dec
mov
cmp
rol
test
pushf
xor
sbb
mov
mov
xor
pop
sub
mov
popa
ret
jbe
xor
icebp
push
and
fcmovne
lahf
mov
mov
mov
sub
jmp
call
int3
and
ss
fneni(8087
cmp
cdq
pop
enter
mov
imul
pop
sar
sbb
lock
pop
leave
mov
int
(bad)
add
push
les
push
cmp
pop
inc
repnz
scas
sti
xchg
(bad)
pop
mov
int3
pop
enter
cli
mov
inc
hlt
or
mov
imul
pop
cld
cwde
into
mov
aam
cmp
cmp
adc
jp
repnz
or
sahf
mov
xchg
test
out
dec
out
scas
mov
iret
xchg
pushw
sti
popa
pop
sbb
push
cmp
(bad)
mov
xchg
push
sub
cmp
ficomp
xor
mov
mov
push
pop
jns
nop
adc
xchg
cli
lahf
xchg
adc
jge
and
adc
or
mov
push
mov
xor
test
popf
cmp
mov
mov
pusha
popa
dec
gs
out
out
sub
push
ror
pop
aad
xchg
mov
add
mov
dec
sar
into
adc
std
loopne
jp
sbb
or
fidiv
stc
mov
inc
xchg
cmp
sub
jl
dec
outs
fcmovbe
popa
adc
cwde
lea
mov
sub
or
cmps
movs
mul
in
sahf
jo
in
or
ret
dec
mov
inc
jl
pop
xchg
out
sub
retf
fcomip
mov
pusha
popa
add
stos
sbb
and
(bad)
or
jno
sbb
leave
jns
cmp
les
xchg
cmps
inc
push
inc
xchg
jb
jns
dec
xor
xchg
fldcw
aad
dec
fidivr
das
xor
into
inc
push
pop
mov
out
(bad)
pop
jmp
cmp
ins
ret
mov
add
idiv
jp
shr
shl
shl
pop
fidiv
into
xchg
jecxz
rcr
or
aaa
push
push
dec
loope
imul
xchg
xchg
push
leave
inc
mov
or
push
adc
leave
or
jnp
fist
out
push
mov
mov
sub
pop
jp
mov
mov
(bad)
cli
cli
pushf
push
mov
and
(bad)
retf
mov
inc
or
inc
jl
pusha
mov
sub
pushf
lahf
cld
xor
pop
mov
cdq
fs
lods
push
adc
dec
cmp
mov
scas
inc
mov
and
or
test
je
mov
and
inc
repz
add
retf
fdiv
xchg
icebp
adc
cmp
ins
push
rol
cwde
mov
mov
stc
das
mov
dec
and
jo
xchg
push
sbb
pop
mov
stos
xor
dec
into
pop
cmp
popa
push
nop
(bad)
push
retf
gs
xchg
pushf
test
cmp
gs
scas
adc
cmp
or
fcomi
out
jmp
ds
sbb
mov
inc
xchg
lods
pop
inc
stc
call
mov
popf
push
pop
push
ss
sbb
popfw
(bad)
jge
out
or
pop
sbb
imul
xchg
(bad)
push
sub
psubsw
cmc
xchg
in
addr16
cmp
add
pop
cli
mov
jmp
out
es
adc
test
sub
test
dec
test
jno
sub
fs
retf
js
cmc
inc
lods
jbe
xchg
jns
push
jp
pop
xor
fwait
sub
xor
scas
std
xor
cmp
and
std
fisttp
cmp
xchg
and
pop
mov
sti
or
sub
popa
frstor
adc
adc
cli
popf
ins
add
(bad)
push
cs
cmp
daa
clc
pop
imul
push
push
sub
pop
ja
fild
jae
nop
xor
xchg
jg
nop
(bad)
iret
aas
jmp
shl
inc
retf
xchg
imul
push
mov
int3
jle
iret
xchg
ret
lods
push
pop
sar
imul
pushf
pushf
pop
add
or
fnstcw
inc
ins
and
std
enter
dec
ins
fdiv
stos
out
mov
xor
movs
(bad)
sub
pop
adc
jno
dec
mov
dec
arpl
ins
and
mov
jnp
sbb
add
add
loope
jmp
daa
mov
push
inc
sub
stc
dec
shl
jnp
xchg
xchg
jge
call
lods
sub
mov
sbb
ror
punpckhbw
xor
xor
popa
lods
jge
add
repnz
in
xor
retf
stos
retf
stos
lods
xchg
and
adc
jmp
jne
dec
xlat
std
and
cs
out
adc
push
icebp
vrsqrtss
sub
aas
daa
cwde
cld
inc
dec
cmp
mov
clc
test
ret
sti
inc
mov
and
jl
aad
cmc
push
mov
pop
stc
les
and
fimul
push
in
mov
cmps
cmp
push
or
cmp
dec
mov
jle
call
imul
outs
adc
mov
push
mov
enter
fisub
adc
jo
fist
shl
adc
jae
jns
sub
loope
or
scas
sbb
xor
(bad)
out
out
popa
fstp
cld
pop
not
loop
dec
in
es
pop
addr16
dec
jl
dec
fild
pop
popf
push
sbb
test
fiadd
out
movs
cs
push
mov
ret
imul
js
sub
xor
push
js
fsubr
mov
dec
lea
adc
push
mov
or
pop
inc
pop
mov
movs
inc
push
cmps
fild
cwde
mov
out
in
test
and
dec
jne
dec
(bad)
loope
cmc
shr
test
clc
ret
lods
loop
cmc
xor
sbb
and
cmp
xchg
and
or
fisttp
adc
push
add
cs
addr16
pushf
int3
out
test
vrsqrtss
xor
pop
dec
jns
pop
(bad)
mov
add
dec
das
inc
test
sub
(bad)
push
ja
mov
inc
adc
jmp
mov
push
jb
ss
fidiv
shl
or
call
out
xchg
aam
xchg
xchg
jne
push
mov
cmps
hlt
mov
popf
push
xchg
inc
shr
mov
mov
pop
test
mov
retf
hlt
adc
xchg
arpl
pop
scas
ret
or
sub
dec
ret
(bad)
pop
xlat
into
dec
and
sbb
les
jbe
jg
push
cmp
sub
add
(bad)
loopne
push
sti
sbb
loope
aaa
or
pop
stc
add
daa
in
rcl
or
sbb
scas
dec
add
mov
adc
fisttp
int3
repz
lahf
mov
push
push
retf
(bad)
(bad)
xor
xchg
loopne
sub
(bad)
in
xchg
sar
pop
out
and
xchg
cdq
nop
movs
in
cwde
push
pop
cmp
sbb
(bad)
cmp
dec
pop
gs
add
ror
ins
je
scas
cmp
mov
push
in
pop
mov
cmp
mov
lods
adc
les
loopne
or
stc
xor
outs
or
mov
fcmovnb
cmps
cmps
mov
mov
dec
cmp
out
out
push
mov
mov
jne
cmp
aad
jo
xchg
mov
cvtps2pd
cli
div
inc
arpl
ins
push
xchg
xlat
test
cmp
hlt
cmp
stos
popf
lock
sbb
add
bound
mov
and
packuswb
lods
inc
lock
scas
loope
mov
sti
xchg
loope
and
stos
adc
sub
or
add
aad
and
jg
pop
cmp
popf
jge
std
ror
mov
lea
jp
mov
adc
mov
inc
push
pop
mov
dec
enter
jmp
je
sbb
shl
bnd
(bad)
arpl
fcom
cld
xor
repz
into
das
mov
dec
mov
lods
movs
in
xchg
imul
jg
mov
cwde
lds
inc
les
pop
test
jns
ret
aas
in
push
mov
xchg
mov
iret
push
es
movs
call
in
and
fnstenv
inc
sub
daa
mov
mov
cwde
push
mov
bound
push
call
outs
push
or
icebp
test
xor
out
jmp
inc
xchg
out
jmp
scas
inc
push
xor
icebp
and
push
stos
(bad)
inc
int3
out
(bad)
mov
cmp
add
or
xchg
jmp
adc
mov
fs
add
xor
in
pop
daa
ss
daa
pop
sti
sbb
popa
dec
imul
jo
adc
cmc
cwde
imul
lock
sbb
mov
cli
daa
out
inc
sar
sbb
std
jnp
scas
pop
fcmovnu
mov
xor
pop
int3
dec
jae
cmps
scas
sub
fcomp
fwait
adc
jmp
ins
pop
pop
pop
addr16
(bad)
inc
stos
aad
dec
sbb
stos
arpl
push
pop
(bad)
movs
mov
stos
sbb
icebp
adc
inc
dec
jge
dec
cdq
stos
test
jno
ins
pop
hlt
sbb
shl
scas
push
or
mov
pop
xor
enter
dec
ja
sub
cmp
in
repz
inc
(bad)
mov
icebp
(bad)
movs
pop
push
sbb
or
mov
xchg
sub
push
loopne
cmp
hlt
mov
aad
xchg
call
sbb
push
cdq
ds
pushf
push
xor
add
xchg
jnp
sbb
push
into
aaa
pop
inc
jb
rol
gs
mov
test
ret
pop
add
pop
adc
xchg
inc
lea
clc
xchg
jl
test
xchg
fcomp
sti
pop
dec
mov
scas
aam
arpl
imul
mov
stos
mov
jl
ss
out
into
sbb
pushf
jmp
mov
xchg
scas
dec
int
data16
adc
mov
push
push
pop
pop
jo
loop
xchg
mov
jmp
int
into
mov
mov
int3
mov
xchg
out
xor
xchg
push
mov
pop
pop
test
out
call
imul
sbb
fwait
imul
outs
xchg
dec
jmp
or
mov
cmp
(bad)
push
push
mov
inc
in
xchg
in
or
shl
je
(bad)
cmp
cmp
jge
call
cli
or
inc
fiadd
ret
out
shr
add
pop
dec
jnp
sbb
aam
loopne
call
(bad)
mov
inc
xchg
xchg
xor
cld
mov
js
jb
or
xchg
sar
retf
sar
push
(bad)
test
cmp
inc
lods
outs
mov
push
add
mov
mov
sbb
lea
mov
sar
jecxz
ins
out
push
cmp
cwde
icebp
les
mov
pushf
dec
cmp
mov
add
xor
mov
xlat
sahf
les
(bad)
xchg
sub
popa
jp
or
mov
cs
mov
and
pop
(bad)
cmp
nop
and
ins
test
lock
push
pushf
mov
inc
inc
sbb
adc
movsx
mov
add
mov
adc
dec
repnz
(bad)
mov
stos
jbe
lods
pop
jo
inc
popa
div
jmp
cmps
xor
in
lods
js
push
lahf
push
and
pop
xlat
push
jbe
call
fsubr
mov
shl
das
sub
adc
hlt
mov
hlt
imul
jge
mov
jle
popa
enter
xchg
loopne
or
mov
ret
retf
add
mov
mov
xchg
jnp
lock
fcom
(bad)
rol
pop
aas
adc
stos
not
adc
adc
neg
xor
sub
push
(bad)
xor
jbe
mov
xchg
in
mov
inc
shl
leave
push
dec
push
xchg
jmp
push
push
mov
mov
movs
test
lods
lods
mov
sub
cmp
push
inc
add
pop
aaa
xchg
popa
mov
aaa
mov
fsubp
jle
sahf
les
xchg
mov
jmp
push
cwde
sbb
jmp
outs
mov
add
push
jge
sub
outs
out
jb
ffree
add
pop
sbb
les
or
sti
inc
data16
xlat
adc
sub
in
dec
cdq
or
adc
les
fadd
outs
mov
adc
push
pop
fst
enter
jb
rcl
cmps
push
sub
(bad)
fistp
inc
(bad)
clc
sbb
ins
jecxz
mov
xor
jne
clc
movs
mov
daa
fwait
inc
xchg
or
push
add
lahf
or
inc
dec
int3
sub
pop
loop
adc
sbb
push
int3
pusha
jmp
out
loopne
push
cli
push
pop
fs
add
sub
and
adc
clc
dec
in
add
(bad)
ret
sbb
(bad)
dec
mov
in
sbb
outs
cmps
sti
mov
cmps
pop
jge
adc
fisttp
(bad)
fisub
and
push
int
xchg
xor
inc
sub
lods
call
popa
dec
jnp
dec
xchg
xchg
push
pop
mov
sub
mov
add
adc
ret
inc
mov
mov
movs
add
shr
mov
jbe
adc
sbb
mov
jg
dec
mov
add
add
fs
or
pop
aad
and
jne
dec
and
(bad)
adc
inc
xor
inc
lock
test
sahf
mov
loope
push
loope
dec
mov
inc
jne
or
mov
mov
ins
ins
pop
fsubr
ja
mov
icebp
mov
inc
popf
test
pop
push
ss
push
xor
sbb
aaa
xor
rcr
test
(bad)
sahf
out
inc
popf
and
rcr
(bad)
xor
inc
xchg
jmp
mov
sub
aad
bound
call
adc
retf
mov
add
iret
daa
fnstcw
ret
mov
in
sub
retf
pop
push
cmp
push
dec
inc
test
ja
lods
inc
cmp
pop
mov
lock
cld
cmp
push
outs
call
add
or
call
sub
or
inc
mov
fwait
mov
jnp
mov
pop
int
retf
inc
sub
pop
cmp
inc
xacquire
pop
ficomp
jecxz
xchg
clc
push
out
xchg
xchg
adc
push
mov
ins
aam
mov
xchg
enter
push
xchg
ds
or
not
ret
mov
inc
lahf
jecxz
cmp
retf
inc
test
outs
jmp
ret
mov
add
aas
pop
out
inc
mov
outs
mov
jnp
mov
sub
nop
mov
pop
pop
out
sub
sub
inc
sbb
xchg
test
inc
hlt
cmp
ficomp
push
adc
mov
dec
mov
push
imul
iret
add
adc
cmc
xchg
pushf
popa
sahf
out
mov
test
test
loope
push
fdivr
xchg
ja
je
jb
mov
fcmovnb
jb
in
mov
push
sbb
rcl
jbe
jmp
test
cmp
aam
xor
mov
sbb
call
mov
scas
adc
fld
ret
mov
push
cli
(bad)
fist
aas
clc
hlt
dec
mov
xchg
aam
jle
xor
inc
sub
(bad)
imul
sbb
pop
xor
push
push
(bad)
mov
repnz
push
or
jp
jmp
adc
aad
cmps
in
or
sub
add
xchg
mov
pop
test
into
sub
mov
pop
push
cmp
mov
outs
sbb
out
not
push
pop
arpl
shr
fdivr
xlat
jb
test
pusha
out
je
cdq
arpl
push
in
je
pushf
clc
cmp
scas
jmp
jmp
mov
mov
repnz
shl
mov
add
fisttp
pop
icebp
rcl
test
neg
bound
xor
repnz
fisttp
cmp
loop
mov
stc
mov
iret
add
stos
das
lock
add
jg
or
fcom
pop
mov
dec
std
push
in
adc
into
xor
push
inc
call
lods
mov
sbb
pushf
inc
push
jmp
xor
int
imul
pop
out
test
sbb
mov
stos
stc
cmp
out
dec
ins
dec
cmp
mov
andnps
(bad)
jo
inc
mov
push
cmp
and
sahf
retf
js
outs
ss
test
outs
jo
mov
inc
leave
or
xor
pop
sub
push
sbb
pop
outs
mov
lods
mov
push
dec
sbb
jmp
lahf
sbb
add
or
test
sub
bound
xor
add
cwde
out
mov
push
push
cmps
push
adc
sub
dec
rol
inc
mov
sbb
out
jbe
(bad)
in
mov
rol
shl
movs
jg
push
es
jmp
aad
push
fwait
xor
stos
jg
jmp
ins
pop
cmc
xchg
pop
fild
fwait
adc
adc
mov
ja
(bad)
jbe
movs
inc
jns
lods
bound
call
int3
aas
adc
ss
mov
mov
cld
lods
in
mov
aas
inc
mov
into
sbb
stos
dec
mov
les
jmp
push
xor
and
enter
das
les
imul
pop
xchg
(bad)
int3
shl
pop
shl
call
test
jne
movs
sbb
mov
xor
and
jmp
xchg
xchg
jge
mov
cs
int3
dec
jl
retf
xor
lock
cmp
or
mov
cmp
xchg
cmovo
(bad)
stos
or
pop
mov
imul
pop
pop
lock
mul
test
pop
and
fcomp
add
repnz
fld
das
addr16
xchg
lock
cmp
xor
mov
pop
dec
or
push
push
mov
shl
adc
pop
movs
ja
nop
mov
push
xor
push
xor
in
or
add
(bad)
neg
cmp
repnz
or
(bad)
and
add
and
sub
mov
lock
gs
outs
mov
jae
xor
mov
popf
rcl
mov
dec
inc
stc
dec
jge
mov
sahf
adc
sub
popa
shr
imul
mov
movs
adc
mov
jecxz
add
hlt
pushf
not
xchg
jmp
sub
jne
xchg
leave
or
push
adc
dec
or
imul
imul
test
je
xchg
stos
seta
or
dec
cmps
cmp
scas
pop
cmp
repz
(bad)
push
sahf
frstor
ja
push
adc
push
push
sahf
jne
adc
jg
test
inc
(bad)
push
add
outs
jo
test
lods
add
shl
push
shl
dec
stos
(bad)
out
mov
jg
cld
loopne
repz
mov
cwde
ds
out
in
cmps
and
mov
out
les
adc
sti
push
sbb
fwait
jb
pcmpgtw
lods
add
jl
in
sbb
lea
cld
test
mov
add
mov
imul
cmp
sub
mov
out
jmp
or
xchg
inc
jmp
sub
jmp
jg
stos
cmps
call
jmp
push
jns
mov
mov
aam
fst
test
les
fdivp
mov
dec
loopne
ins
sub
or
mov
push
fcomi
iret
loop
std
and
sub
movs
pop
add
add
pop
add
repz
jne
aaa
pop
movs
lea
retf
fadd
adc
test
push
jnp
sbb
lock
ja
pop
movs
fwait
dec
ja
sub
les
not
mov
mov
or
push
mov
lods
add
(bad)
and
fld
das
clc
ret
js
arpl
test
mov
jbe
neg
push
lods
mov
pop
cmp
cs
ss
aam
jae
push
add
movs
jmp
test
into
sub
xchg
in
sbb
rcl
sbb
out
gs
aaa
push
sbb
mov
sbb
xchg
rol
adc
pop
mov
add
rcl
lea
out
cmps
scas
push
loopne
mov
inc
movs
shl
inc
fst
and
cmp
sub
imul
shl
or
inc
imul
push
inc
pop
(bad)
in
mov
xchg
mov
mov
(bad)
cs
jl
lods
fidiv
sbb
and
sub
dec
jbe
xchg
adc
jecxz
lods
add
repz
sbb
cwde
test
(bad)
icebp
loop
jmp
out
pushf
outs
cmp
pop
pop
lods
or
or
lods
and
jge
lods
cmp
sub
jp
sub
jl
cmps
mov
in
retf
sti
xor
(bad)
pop
or
mov
cwde
dec
pop
arpl
mov
daa
and
adc
fisttp
(bad)
out
inc
cmp
or
outs
pop
daa
pushf
or
dec
inc
mov
adc
mov
ret
ret
add
fstp
or
xchg
js
mov
ror
xlat
mov
shr
test
fst
icebp
jecxz
test
jae
outs
cmc
sbb
sbb
push
daa
call
dec
or
pop
call
jecxz
arpl
fldcw
xchg
retf
inc
add
aas
push
gs
xor
inc
mov
mov
sbb
pushf
outs
xchg
xchg
fdiv
or
retf
mov
cli
mov
retf
ret
ficom
sti
xor
mov
push
mov
ja
gs
call
ins
pushf
adc
icebp
test
push
or
mov
out
into
sbb
mov
mov
sti
add
sbb
mov
imul
sub
mov
cmp
call
jne
jb
div
test
aam
out
loope
cmps
(bad)
adc
add
cdq
adc
cmp
lock
cmc
sub
rcl
dec
cdq
inc
cs
xchg
lea
mov
jle
fdivr
mov
fldenv
and
xor
imul
hlt
jmp
dec
out
std
or
push
punpckhbw
cmps
nop
xchg
jge
or
jle
int3
jmp
scas
clc
sbb
out
sub
sbb
js
push
dec
add
ja
outs
shl
cmps
arpl
inc
(bad)
fwait
xor
xor
cmp
fidivr
push
sar
push
sbb
loopne
xchg
jb
test
jl
mov
retf
pop
push
sbb
mov
sbb
fdivr
adc
hlt
pop
cwde
hlt
inc
ret
lahf
push
push
or
push
outs
fcmovb
lods
or
xchg
push
hlt
movs
sub
jbe
cmps
inc
int
xchg
mov
cli
dec
ja
xchg
and
add
or
pushf
mov
cmp
pop
cmps
jbe
test
adc
icebp
sbb
inc
ret
push
push
pop
push
sahf
sbb
inc
inc
or
loopne
popf
jns
cmp
leave
aas
pop
cmps
out
jnp
enter
push
leave
int3
xchg
xchg
stos
mov
mov
add
std
xchg
cmp
sbb
fisubr
mov
add
dec
pop
xor
mov
fld
adc
repnz
mov
mov
cwde
push
adc
imul
cmp
cmp
pmuludq
push
inc
and
out
push
in
lahf
push
retf
daa
ins
addr16
popa
push
fwait
sub
jae
fist
mov
(bad)
mov
mov
xor
cmc
das
or
lods
ja
sub
cli
xchg
(bad)
icebp
adc
nop
cmp
jbe
cmp
mov
outs
mov
loop
dec
xor
sub
ret
push
les
sti
xor
lahf
xor
adc
(bad)
push
push
(bad)
inc
push
mov
pushf
retf
cli
xlat
jle
xchg
and
push
jo
fsub
sbb
stc
js
pusha
mov
popf
ds
cwde
repz
pop
lods
retf
mov
fcmovnb
pop
inc
jne
aas
call
pop
cmp
or
jp
jmp
push
inc
repz
retf
xlat
fsub
jo
sub
jae
fs
popf
xchg
xchg
mov
repnz
daa
into
pop
sub
jno
dec
sub
jns
push
ja
repnz
inc
retf
lock
push
js
fcomp
sti
xchg
cs
mov
leave
mov
data16
stos
cld
xchg
push
inc
iret
leave
add
pop
mov
push
mov
fnstenv
sub
add
gs
adc
mov
aaa
mov
cmp
xor
stc
fsub
adc
xchg
dec
sbb
fld
jmp
mov
push
in
(bad)
pop
cwde
fcom
test
dec
dec
mov
xor
mov
jg
inc
add
mov
ret
add
push
push
dec
pop
and
pop
sub
mov
fsub
cmp
ret
jmp
fs
outs
xor
sub
popa
sbb
mov
xchg
pusha
adc
add
or
mov
xor
mov
push
pop
push
xchg
aas
js
xchg
cmp
in
cmps
add
inc
add
(bad)
mov
ins
lods
xor
loopne
loopne
mov
cmps
cmp
inc
imul
mov
mov
add
jbe
cmp
sbb
pop
jmp
xchg
xor
add
jae
jo
jo
rcr
mov
aas
out
mov
mov
and
jo
test
popa
or
test
xchg
sbb
loopne
popf
adc
or
test
mov
mov
lea
popa
mov
xchg
out
push
iret
ror
cmp
(bad)
scas
imul
pop
mov
mov
jg
les
rcl
cmp
or
sub
dec
xor
mov
push
(bad)
lock
dec
(bad)
sub
shr
movs
(bad)
xchg
loope
cmps
(bad)
std
cmp
cmps
xchg
ror
bound
mov
cmp
or
jl
call
cli
call
ins
jns
in
jne
dec
(bad)
in
mov
test
or
scas
movs
out
add
inc
cs
ins
xor
scas
rcr
lods
sub
(bad)
mov
call
outs
jno
push
cmp
or
fs
icebp
push
inc
sub
dec
pop
dec
leave
dec
xchg
pushf
pop
test
cmp
stos
ror
cmp
adc
add
cdq
pop
sbb
inc
repnz
scas
jo
aam
pop
test
dec
cmp
push
adc
aam
cld
pop
dec
mov
jge
daa
mov
jmp
adc
jmp
push
cmc
sub
xlat
mov
sub
frstor
in
leave
jns
data16
adc
out
cli
pop
xor
mov
push
add
in
int
inc
int3
cmp
sbb
(bad)
xor
add
pop
iret
es
adc
sub
pop
push
lahf
fild
pop
xchg
dec
imul
cmps
adc
(bad)
retf
in
cmp
movs
inc
das
add
adc
cmps
in
push
xchg
inc
loopne
je
sti
call
out
adc
lods
push
daa
sub
adc
jmp
js
in
add
mov
pop
sub
sub
jno
cmp
mov
loop
push
xor
repnz
adc
sti
in
xor
jae
mov
dec
jl
push
loopne
mov
xor
jg
xchg
or
lea
loope
xchg
jmp
jmp
xchg
push
rcr
enter
fiadd
pop
push
shl
add
mov
in
mov
push
(bad)
sti
fisttp
sti
fsub
mov
repz
std
cmp
and
lods
push
jno
xor
(bad)
cli
out
sar
adc
xor
pop
call
pop
call
push
xlat
sbb
jnp
movs
sub
sti
sti
mov
push
out
sti
mov
dec
inc
or
in
jl
popf
(bad)
aam
sbb
cmps
adc
mov
adc
int3
mov
popf
cs
push
aaa
cmps
daa
push
sub
popa
push
rcl
aad
in
jae
pmulhw
out
jb
or
jp
je
iret
cmp
sub
int
addr16
retf
cld
inc
push
jnp
jnp
out
nop
pop
call
dec
and
das
mov
push
data16
mov
clc
outs
(bad)
push
xchg
push
pop
ret
js
sti
xchg
js
mov
add
xor
or
cmp
push
outs
imul
ret
stos
or
into
push
mov
and
xchg
and
fwait
cmc
jno
(bad)
xchg
pushf
sub
jne
test
push
pop
mov
dec
data16
std
mov
push
in
stc
fcom
jg
mov
pop
mov
push
xchg
sub
out
xor
xor
cli
add
and
adc
add
shl
adc
and
js
loop
pusha
xchg
lods
lahf
sub
cli
pop
iret
std
mov
dec
cmp
mov
ret
cmps
lds
or
pushf
mov
cmps
movs
cli
ss
retf
mov
push
mov
les
out
dec
xchg
js
(bad)
fsin
das
ror
div
rol
and
loopne
imul
xor
mov
cmp
std
dec
inc
mov
outs
(bad)
int
pop
mov
in
jno
out
in
test
jno
mov
and
mov
sbb
push
mov
das
jmp
imul
ins
mov
fwait
jg
out
dec
test
shl
cmps
add
jnp
mov
push
data16
repz
mov
outs
mov
test
cmc
sub
push
(bad)
(bad)
and
into
mov
xchg
mov
leave
inc
sub
imul
into
and
pop
sub
lods
fisub
mov
cmp
jg
pop
mov
leave
mov
jae
mov
imul
sti
cmps
cli
arpl
xchg
xor
iret
jmp
out
ret
repz
and
jge
mov
pushf
fwait
mov
mov
out
stos
mov
sub
(bad)
out
mov
and
push
mov
repz
push
cmps
cmc
ror
mov
mov
xchg
jecxz
ja
je
jecxz
sub
push
jb
adc
retfw
movs
fdiv
and
lahf
or
jae
sub
dec
sbb
dec
pop
or
jns
or
inc
cwde
cwde
or
sar
or
test
cmp
pop
je
jp
call
pop
imul
xchg
xor
push
(bad)
pop
ins
mov
mov
into
addr16
cwde
loope
retf
int3
dec
or
and
mov
push
in
lahf
mov
add
scas
shl
jle
out
ins
scas
dec
adc
retf
cmp
mov
and
jbe
xchg
push
mov
outs
mov
mov
mov
adc
jnp
mov
pop
xchg
imul
loope
aaa
cmps
mov
dec
push
adc
iret
sar
pop
push
shl
sahf
lahf
push
push
jge
pop
in
xchg
mov
jns
jno
mov
(bad)
in
call
mov
sub
icebp
retf
scas
dec
popa
mov
and
pop
call
ja
jmp
dec
std
cmps
add
rol
xchg
add
lea
int3
rcl
pop
sbb
jmp
sub
jl
pop
in
(bad)
nop
push
mov
xlat
leave
xlat
sbb
add
mov
fild
mov
pop
jg
dec
in
jmp
xor
cmp
jecxz
test
icebp
lahf
sbb
jmp
push
mov
mov
jmp
sub
adc
jmp
popf
mov
enter
es
les
pop
jmp
sub
dec
sub
shl
mov
ror
hlt
xchg
pusha
or
loop
test
ss
icebp
xchg
aam
push
pop
inc
pushf
add
pop
mov
or
movs
and
nop
jne
add
sbb
loop
daa
jle
add
inc
lods
mov
not
jge
int3
lock
mov
retf
scas
scas
ds
call
jns
jecxz
dec
xor
push
inc
fcomp
adc
dec
mov
fwait
(bad)
in
sahf
or
call
leave
push
popa
push
(bad)
mov
hlt
and
cmps
mov
scas
jmp
into
js
xchg
adc
jne
mov
(bad)
jle
dec
push
loope
retf
int3
cdq
and
xchg
movs
test
cld
lods
outs
push
out
jg
jo
(bad)
mov
fisttp
test
xor
mov
cmp
push
mov
inc
jl
aas
movs
out
fcom
js
fstp
gs
mov
push
add
loopne
xchg
push
and
dec
cmp
or
or
rcr
cwde
dec
add
cld
jge
xchg
sti
dec
enter
ret
or
pop
cld
(bad)
cmp
loope
xchg
mov
imul
jecxz
adc
ja
(bad)
je
lock
inc
into
or
xor
enter
cld
push
mov
ret
arpl
pop
inc
test
lods
jl
in
mov
(bad)
jge
aaa
mov
ret
mov
xor
je
out
pop
ins
inc
imul
gs
cmp
outs
gs
mov
outs
call
cmp
ja
sbb
and
ret
pusha
adc
in
sbb
jne
int3
or
sub
js
push
sbb
fstp
xor
lods
(bad)
fwait
pushf
add
and
mov
mov
int3
inc
pop
aas
jg
push
push
mov
call
jmp
out
dec
test
push
mov
nop
(bad)
xor
cli
mov
test
jae
adc
mov
cmps
mov
dec
adc
test
mov
aas
mov
push
cmp
adc
aas
addr16
push
sbb
icebp
dec
pop
cmps
or
stos
aad
push
xor
mov
mov
call
bound
mov
pop
call
xor
pop
add
fmul
movs
movs
jo
rcr
addr16
dec
leave
or
inc
pusha
mov
add
mov
(bad)
lds
in
adc
les
mov
xchg
adc
mov
xor
ins
push
adc
mov
mov
inc
xchg
repz
cdq
mov
pop
ret
mov
xor
xchg
add
aas
cmp
jo
push
or
mov
sahf
rcl
mov
mov
(bad)
jecxz
push
ds
push
xchg
ja
sar
cmp
and
pop
fsubr
inc
out
call
in
mov
scas
test
push
cdq
stos
cli
xchg
sub
cli
push
cmps
push
out
xchg
sahf
push
test
cmp
pop
lods
cmp
fiadd
and
movs
fmul
jecxz
fistp
movs
inc
mov
sbb
xor
and
pop
and
stos
xor
cmp
into
pushf
inc
mov
scas
sahf
jo
mov
mov
mov
jno
jns
scas
out
ds
mov
retf
or
repz
push
mov
(bad)
or
add
sub
xor
or
xor
int3
sub
test
pcmpgtw
repnz
(bad)
add
and
and
sub
inc
pop
sbb
inc
retf
lock
push
mov
pop
jl
jae
div
mov
test
pop
fild
cli
fisubr
cli
xlat
cmc
inc
jmp
mov
daa
mov
fsubrp
loope
or
xor
pop
fmul
push
movs
and
push
loop
fnstsw
lds
mov
push
and
out
sbb
push
rol
pusha
jb
jg
mov
mov
fdivr
sbb
icebp
movs
movs
(bad)
call
sahf
cli
outs
stc
fs
in
jmp
dec
(bad)
push
aas
jmp
cdq
in
mov
jne
dec
xchg
je
sub
in
jmp
jbe
push
mov
ficom
mov
test
gs
lods
jb
jo
loop
xchg
movs
jmp
mov
dec
outs
pop
xor
pop
mov
scas
adc
pop
push
ins
out
push
(bad)
and
sub
xor
cmc
scas
push
mov
or
rcr
pop
loopne
xchg
and
pop
push
mov
add
lds
mov
or
add
and
imul
dec
sar
(bad)
pop
mov
pop
scas
les
test
xor
jecxz
es
lock
adc
push
xchg
push
test
(bad)
cmp
pop
and
jmp
ins
ror
retf
repnz
enter
shl
(bad)
pop
jge
mov
retf
inc
and
(bad)
xlat
stos
test
push
into
push
mov
mov
jmp
stc
push
dec
shl
ds
push
cmp
call
add
pop
jno
dec
ror
sub
lahf
je
or
jbe
jmp
pushf
arpl
xor
xor
not
inc
xor
int3
repnz
cmp
jo
adc
jmp
pop
imul
sub
loopne
fwait
ja
inc
out
mov
rcl
mov
cdq
adc
pusha
or
leave
push
push
sti
sbb
dec
mov
loopne
cdq
mov
dec
stos
jns
xchg
fsub
mov
jge
adc
in
sbb
pusha
xchg
push
test
loopne
pop
mov
jge
outs
stos
aam
call
jmp
push
mov
push
fwait
adc
cmps
dec
fsubr
repnz
jbe
jno
test
or
daa
nop
cmp
je
ror
or
xor
adc
cmp
mov
xchg
xchg
dec
add
iret
ret
inc
in
cmp
rcr
push
ror
stc
clc
test
sub
dec
push
jmp
data16
dec
in
ret
sub
xor
adc
sar
in
jecxz
jp
pop
mov
jbe
jp
cld
shl
in
pushf
push
sbb
jmp
mov
add
inc
icebp
push
cmp
stos
into
xor
cmps
sub
ret
out
fisttp
repnz
fwait
adc
bound
lds
out
add
call
outs
mov
aas
sbb
aas
sub
cmc
jns
push
xchg
data16
in
push
jle
movs
mov
imul
add
mov
sar
jns
test
jbe
push
dec
inc
fs
cmp
dec
push
xchg
or
stc
(bad)
pop
xchg
rcl
fistp
lahf
or
xchg
hlt
and
and
push
aad
les
lods
mov
fs
fstp
gs
es
mov
retf
mov
stc
and
nop
scas
sub
test
jae
rcr
xchg
sbb
ds
push
xor
cmps
inc
add
out
fwait
scas
inc
loopne
xor
enter
into
cld
and
fcom
ja
(bad)
sbb
sub
jle
sbb
mov
and
popa
mov
out
xchg
pop
cmps
ds
ds
stos
sub
jg
sbb
cmp
addr16
xchg
mov
clc
in
and
jmp
pop
and
xor
sbb
inc
fsubr
fsub
jns
ror
jnp
es
(bad)
xchg
mov
xor
ret
fs
jb
js
ror
and
xor
push
clc
cmp
lods
scas
popf
cs
iret
mov
rol
and
cmp
and
pop
into
jno
inc
adc
sahf
ds
mov
bound
ja
jae
fistp
cdq
cdq
jo
cli
imul
js
and
push
mov
mov
push
inc
xchg
jmp
sbb
arpl
mov
inc
pop
pop
push
outs
out
push
test
inc
test
sti
mov
xchg
mov
icebp
jb
jnp
ds
inc
pop
or
lea
dec
push
stos
imul
and
loop
fnstenv
xchg
cli
int
mov
sti
sub
xchg
scas
push
ror
mov
xchg
loop
sbb
cwde
shl
in
jnp
loop
push
mov
add
das
popa
js
xor
cmps
repz
pop
dec
adc
jmp
push
pop
jl
xor
mov
out
nop
cmps
mov
adc
add
les
(bad)
(bad)
fcom
repnz
call
imul
lock
retf
sbb
dec
lods
fcomp
push
sub
and
iret
xchg
lahf
pop
push
shr
in
and
jns
aas
repnz
call
leave
xchg
mov
mov
fldcw
aaa
bound
inc
jno
clc
sahf
scas
add
es
outs
in
dec
data16
cmp
dec
movs
mov
lahf
ss
pop
cmp
xchg
aaa
add
pop
push
mov
gs
mov
ja
lods
adc
mov
xor
fwait
(bad)
js
stc
jle
lds
pop
mov
inc
pop
into
pop
scas
(bad)
xor
out
fdiv
ss
mov
std
addr16
cli
out
test
iret
popf
jne
call
inc
call
push
or
sub
call
cmp
loopne
sar
das
dec
push
inc
das
mov
push
lahf
inc
in
dec
xchg
je
or
adc
test
dec
inc
dec
push
mov
loope
(bad)
in
push
xor
div
xor
cmps
sar
ins
mov
push
scas
ins
lahf
dec
shl
iret
push
cmp
bound
add
movs
aam
add
cmps
mov
pop
sbb
nop
xor
stc
jbe
(bad)
pop
repz
add
call
cmp
sub
add
out
dec
aam
in
cmp
push
xor
cmps
adc
inc
(bad)
push
xchg
dec
mov
xchg
and
aaa
pop
xchg
daa
stos
inc
mov
fdivr
rcr
rcl
mov
dec
shl
shl
inc
stc
in
push
cmp
push
fucomp
mov
jmp
inc
sub
pop
adc
imul
and
push
mov
pop
test
rcr
mov
arpl
fadd
test
cmps
stos
sub
out
cdq
or
ror
and
mov
leave
xchg
aas
and
dec
ficomp
es
and
loop
and
push
cmps
push
push
leave
lds
loopne
ficomp
or
mov
sub
repz
sub
mov
xchg
adc
jg
dec
xchg
push
cmp
inc
mov
jnp
push
jo
pop
clc
imul
lods
fmul
or
sar
int
test
mov
outs
cmp
xor
sbb
pusha
arpl
or
dec
dec
dec
jnp
imul
inc
dec
sub
movs
shr
mov
mov
das
into
jo
or
mov
out
std
loope
adc
test
in
popf
push
adc
(bad)
cwde
test
mov
in
sub
inc
mov
dec
stos
pop
popa
pop
out
push
(bad)
sbb
sbb
ins
enter
aam
pop
push
cmps
pop
cdq
mov
pop
fstp
mov
jle
push
xor
fistp
pop
dec
push
daa
mov
clc
(bad)
icebp
jae
mov
shr
adc
inc
loop
lods
enter
inc
(bad)
and
es
ret
(bad)
pop
jp
repnz
xor
pop
loopne
out
aam
mov
inc
mov
mov
mov
in
imul
ins
cmps
cmps
imul
shl
clc
fst
sbb
mov
mov
ss
dec
aam
sub
in
push
fsubr
scas
cs
sub
shr
xlat
mov
mov
pop
mov
or
xchg
sti
int3
pop
jmp
mov
add
dec
into
rcl
in
bound
dec
dec
sbb
stos
test
pop
nop
ins
pop
pop
adc
dec
popa
mov
enter
retf
test
adc
stos
dec
xchg
cs
dec
rcr
pop
fistp
stos
fisttp
cmp
(bad)
ficom
cmps
adc
and
push
int3
push
mov
pusha
adc
push
add
sbb
mov
mov
lods
mov
cmp
sub
mov
adc
xlat
es
lods
pop
test
out
push
sub
and
rcr
sub
fsubr
outs
push
hlt
jmp
pusha
int3
xchg
test
in
mov
cmps
pop
dec
cmp
push
mov
xor
mov
psubusb
es
mov
xor
sub
std
out
jmp
fadd
cmp
je
pop
call
adc
mov
ficomp
sub
push
imul
stos
nop
inc
cmp
fmul
pushf
pop
sub
cmps
fdiv
dec
popa
jmp
mov
xor
and
mov
inc
(bad)
rol
cld
add
fs
jmp
addr16
mov
jge
call
dec
add
push
and
dec
xchg
adc
mov
cmp
cmc
and
and
outs
hlt
enter
jp
push
cmp
nop
leave
mov
pop
imul
or
xchg
cmp
test
xchg
jg
cmp
stos
sbb
mov
jg
push
dec
nop
ja
mov
cmp
daa
cmp
sti
add
xchg
ret
cs
mov
popa
(bad)
sub
retf
inc
stc
mov
cmp
ins
sti
add
push
sub
stc
addr16
es
mov
sbb
sub
cmp
fsub
xor
xor
cmp
mov
(bad)
dec
cmp
pop
mov
sar
xchg
jns
sub
add
sti
mov
push
mov
add
lods
(bad)
push
xchg
adc
and
aaa
dec
jge
mov
sahf
into
inc
and
and
(bad)
rcr
in
repnz
push
mov
in
sbb
dec
and
movs
aad
iret
aam
add
adc
or
retf
pusha
data16
ret
and
repz
cmp
xchg
push
jnp
pop
add
fsubr
pop
leave
pop
and
pop
pop
aas
pusha
xchg
aaa
adc
adc
out
sub
(bad)
sbb
movs
pop
pop
cmp
je
jecxz
sub
adc
fist
lea
clc
inc
adc
cld
adc
jmp
jae
std
inc
pop
neg
push
push
fist
imul
jmp
std
inc
nop
dec
jl
mov
adc
imul
mov
aad
xlat
ret
xor
add
mov
rcr
mov
sub
xlat
pushf
add
sahf
sbb
addr16
mov
call
and
pop
xor
outs
mov
sub
inc
outs
lods
outs
mov
js
fcmove
sub
mov
icebp
jno
div
out
aaa
lock
jns
cmp
outs
inc
(bad)
cmp
dec
ret
sti
sbb
xchg
fidivr
sbb
adc
pop
cmps
into
fist
pop
jnp
dec
jo
fdivr
sbb
mov
mov
xor
(bad)
(bad)
icebp
repz
lea
addr16
popa
xchg
mov
mov
mov
jge
or
mov
fsub
and
push
cmc
(bad)
stc
or
retf
xor
imul
or
ins
lods
cld
mov
test
xchg
add
movs
fldenv
xor
or
add
push
retf
jno
call
fist
movs
dec
rcl
pop
and
sbb
cmp
push
or
jno
ins
xchg
sbb
or
cli
sub
lock
(bad)
pop
ret
push
std
inc
xchg
or
ss
xchg
dec
adc
(bad)
mov
rol
push
sti
pop
pop
ror
aad
sbb
mov
dec
xchg
sub
leave
(bad)
in
mov
jbe
jns
(bad)
fiadd
xchg
jmp
mov
loope
sub
push
xchg
mov
cmc
or
and
mov
out
int
xchg
int
dec
sbb
dec
cmp
adc
in
or
in
jnp
or
enter
sbb
fwait
sub
movs
adc
inc
inc
push
xor
jecxz
sub
jb
sar
call
aaa
inc
pop
ins
xchg
sub
iret
xchg
pand
adc
cld
gs
aaa
ret
pop
es
or
fsqrt
(bad)
cdq
xchg
jmp
mov
add
jne
mov
mov
dec
fcom
xlat
xchg
in
call
adc
lds
jae
in
or
jecxz
inc
push
jmp
xchg
push
and
inc
daa
adc
inc
add
lahf
ret
adc
arpl
add
jmp
xchg
pop
inc
and
jns
cmp
jne
cdq
inc
xchg
and
out
(bad)
push
mov
xor
push
cwde
(bad)
jno
daa
cmp
push
std
retf
and
pop
and
dec
xchg
cmp
fdiv
lock
mov
ret
mul
mov
popf
repz
xchg
pop
xchg
jae
jle
retf
or
mov
dec
mov
mov
pop
loop
ss
cmp
inc
cmp
dec
mul
scas
in
bound
out
loope
(bad)
rol
fisttp
cmp
xchg
je
inc
jp
pop
retf
inc
cmp
inc
js
jge
add
add
mov
rcl
mov
nop
test
movs
mov
adc
push
ret
outs
cmp
outs
out
mov
into
sti
xor
jno
data16
fmul
dec
stos
pop
sub
ret
mov
push
cwde
mov
mov
cmp
jne
in
icebp
jae
push
(bad)
aad
(bad)
jbe
inc
out
into
mov
repz
mov
adc
mov
xchg
stos
mov
(bad)
cmp
or
test
int
inc
in
pop
dec
ds
gs
mul
fld
xchg
inc
addr16
es
jp
jae
cmp
add
call
push
scas
(bad)
xchg
or
xlat
sbb
pop
mov
xchg
mov
xchg
push
ret
cmp
xlat
jbe
jmp
or
cmp
and
rcl
out
jge
(bad)
pusha
pop
dec
jmp
(bad)
bound
out
mov
sbb
test
rol
push
sub
add
enter
and
mov
xor
cmp
xchg
imul
loopne
jb
cmp
in
mov
div
je
(bad)
cld
ins
jbe
inc
outs
pop
ret
lahf
jo
add
jns
fucomi
es
aas
rol
adc
add
std
popa
js
int
cs
xor
es
loopne
jne
(bad)
call
movs
and
xor
call
sbb
ror
popf
inc
jmp
add
fs
addr16
cmc
mov
out
nop
mov
adc
cmp
or
and
add
jnp
bound
sub
sbb
cmp
ins
pop
mov
pushf
fs
pop
shr
jecxz
(bad)
lea
lock
or
test
fisttp
mov
and
push
pushf
fsubr
jg
loope
mov
inc
mov
mov
sbb
mov
add
mov
sbb
push
dec
mov
shl
pushf
call
sar
mov
int3
and
sbb
sbb
fdiv
int3
test
(bad)
ds
(bad)
pop
cmp
test
inc
xlat
icebp
call
mov
movs
pop
not
xor
aas
pop
dec
icebp
(bad)
movs
lds
inc
pop
xor
and
adc
and
data16
jno
(bad)
mov
in
inc
test
cmps
xchg
imul
jecxz
and
sub
popf
mov
xchg
mov
popf
movs
pusha
jg
scas
add
adc
adc
mov
xchg
mov
imul
imul
in
sbb
adc
dec
inc
jb
mov
gs
data16
sbb
sub
jo
call
jg
stos
push
into
dec
retf
adc
rol
popa
repz
jmp
lods
or
rcpps
adc
xlat
and
(bad)
xchg
fcom
(bad)
fld
sbb
inc
add
sub
push
inc
test
push
mov
jl
cmp
or
inc
jg
shl
into
xchg
xchg
mov
jae
jo
push
xor
and
(bad)
cmp
jnp
mov
sbb
jbe
cmp
mov
ja
sub
arpl
mov
shr
fsubr
jbe
in
sbb
inc
xor
push
push
jge
lds
mov
sub
inc
or
mov
(bad)
int3
mov
out
push
mov
jmp
test
ja
addr16
or
jnp
xlat
bnd
mov
lds
iret
cmc
ror
cwde
cmp
and
(bad)
mov
push
ins
cmp
das
xchg
xchg
out
pop
adc
dec
push
push
push
dec
mov
push
push
cmp
mov
inc
and
outs
dec
pop
push
xor
es
(bad)
pop
adc
adc
dec
pusha
fs
jle
and
pop
test
mov
sub
daa
popf
fsub
jecxz
(bad)
push
jnp
fwait
adc
fmulp
loop
mov
int
pop
fimul
cdq
ret
outs
call
retf
sub
repnz
js
and
or
icebp
push
and
leave
(bad)
jle
xchg
or
pop
adc
dec
das
pop
fs
popf
cmp
dec
jmp
clc
inc
jmp
aam
loopne
in
fisub
push
shr
(bad)
dec
test
lea
lods
adc
mov
pop
add
jae
int
jmp
and
xor
push
in
repz
iret
and
push
cwde
push
dec
imul
bound
sub
pop
xchg
clc
push
lea
or
dec
xchg
pop
mov
mov
inc
mov
cmps
mov
jp
push
mov
js
ja
mov
in
stos
out
mov
repnz
pop
jmp
pop
adc
mov
call
dec
int
fmul
cdq
adc
outs
movs
cmp
xor
call
or
mov
or
shr
call
cmp
frstor
fcom
ret
pop
mov
cmp
in
out
or
add
mov
out
pop
cli
cmp
sahf
clc
push
jns
daa
sbb
pop
dec
repz
push
fdiv
mov
xor
mov
add
xor
dec
push
loop
sub
mov
movs
js
fcom
cdq
xor
xor
inc
mov
fisubr
jns
pop
aam
xchg
gs
cwde
mov
int
lea
dec
add
or
(bad)
cld
lods
jl
mov
ja
mov
in
mov
icebp
mul
push
xor
mov
dec
xchg
hlt
push
mov
add
and
leave
mov
(bad)
pop
leave
mov
test
add
mov
mov
arpl
pop
shl
cmp
mov
mov
sbb
mov
pop
pop
loop
xchg
mov
adc
pop
call
sahf
cmp
pop
push
and
add
push
(bad)
leave
cmp
add
push
lahf
cmp
push
push
cli
jns
ret
movs
sub
shl
xor
xor
test
fucomi
jecxz
xchg
adc
and
jge
call
jae
or
shr
or
popf
sub
push
aaa
push
pop
(bad)
js
push
pop
movs
xchg
test
xor
fldenv
ret
adc
imul
nop
daa
and
mov
out
imul
mov
mov
mov
sahf
out
xor
pushf
stc
iret
aas
adc
mov
sbb
mov
fimul
sub
jne
cmp
js
imul
pop
arpl
mov
pop
repz
adc
mov
and
shr
cmp
mov
cmp
or
aam
ds
or
out
lea
pop
mov
ds
popa
mov
popa
fmul
jmp
and
xchg
and
push
and
pop
and
data16
std
outs
outs
sbb
or
mov
mov
mov
out
mov
(bad)
pop
mov
popf
out
lea
lock
popf
jle
dec
jo
mov
and
push
int
aaa
fmul
sub
pusha
(bad)
call
and
icebp
aam
shr
mov
adc
fisub
daa
push
fwait
push
rcl
jecxz
push
mov
std
sub
pop
popf
inc
neg
jge
add
push
and
out
je
fldcw
aas
adc
fs
pop
call
dec
pop
or
shl
(bad)
repz
outs
out
cmp
xchg
push
or
fldcw
push
dec
sub
adc
mov
in
mov
stos
sub
addr16
xor
sbb
imul
in
push
mov
in
fs
je
shl
shl
jmp
push
int
add
shr
cli
cmps
bound
sbb
dec
aas
popf
sahf
imul
xchg
movhps
das
pop
push
mov
fdiv
test
in
movs
(bad)
inc
sbb
mov
and
or
cmp
in
xor
das
pop
loop
aaa
jns
fist
sar
mov
jo
xchg
loopne
sub
xchg
mov
arpl
push
in
inc
popa
xchg
sub
or
mov
push
sbb
dec
xor
push
pop
or
fist
cmp
cwde
jp
out
xchg
sbb
push
repz
push
fidivr
(bad)
aad
lods
dec
mov
aas
hlt
and
fwait
pop
ins
lds
mov
outs
adc
nop
(bad)
std
push
jbe
in
es
call
pop
add
push
cmp
inc
lods
aaa
std
push
cmc
inc
or
hlt
fnstsw
mov
cmp
mov
shl
inc
daa
cs
lods
icebp
arpl
push
inc
movs
pop
les
jno
inc
sub
push
mov
cld
mov
xor
inc
ds
mov
dec
jp
cdq
fwait
cmps
aas
aad
addr16
and
outs
test
int
mov
sbb
xor
aaa
jb
adc
jl
and
pop
retf
xchg
xchg
test
xor
adc
imul
addr16
(bad)
sub
xchg
inc
(bad)
enter
jae
mov
mov
ds
icebp
test
popf
sub
es
inc
lahf
push
jo
adc
pop
(bad)
imul
jecxz
cmp
shr
ds
pop
mov
rcl
into
cmps
fisub
std
out
mov
lds
outs
jg
adc
jg
mov
push
mov
ror
push
dec
pop
les
push
inc
dec
je
pop
mov
test
imul
mov
jns
je
sahf
popf
retf
loopne
sub
sbb
mov
inc
das
cmp
pop
aad
cmc
mov
dec
dec
fs
into
xchg
mov
data16
dec
addr16
nop
xchg
mov
fxam
fucomip
jecxz
inc
movs
loope
out
dec
cmc
test
sbb
jno
jb
aam
aam
sbb
call
int
add
das
cmp
push
std
mov
ret
jno
pop
in
movs
dec
sub
and
mov
mov
ins
scas
dec
nop
push
iret
cli
in
inc
dec
aad
mov
adc
mov
sub
xor
inc
rcl
loope
xchg
mov
xchg
sub
pop
xor
imul
cmp
xor
lock
xor
fld
ins
push
lock
pop
xchg
fs
cmps
mov
movs
push
neg
pushf
mov
std
xchg
(bad)
fs
(bad)
sbb
enter
je
mov
dec
or
push
push
leave
push
cmp
sbb
xchg
mul
call
inc
adc
repnz
xchg
std
inc
gs
lock
sbb
add
rol
scas
push
or
rcr
aam
sbb
pop
fnstenv
fcmovb
jb
pusha
ds
arpl
cmp
fimul
xchg
scas
cmp
outs
xor
in
cdq
or
inc
or
iret
imul
sub
mov
cmps
inc
add
shl
mov
sbb
push
ja
mov
mov
cmovbe
out
sahf
push
jmp
xor
or
push
popa
addr16
cmp
cmc
mov
outs
push
js
popa
mov
push
scas
test
sub
into
cmp
scas
sbb
inc
mov
(bad)
mov
mov
push
dec
mov
addr16
pop
sbb
or
int
loopne
xor
push
cmc
xchg
xor
sbb
sbb
(bad)
std
call
cmp
mov
dec
loop
and
mov
lods
push
shl
jmp
cs
jmp
jne
(bad)
test
lods
ror
dec
dec
in
arpl
cmp
imul
call
stos
or
sbb
and
add
dec
inc
xor
sbb
sbb
loop
jae
and
ja
inc
xchg
inc
ds
xchg
pop
mov
dec
sti
repnz
fisttp
int3
jns
xchg
dec
xor
dec
push
inc
or
cmp
mov
pushf
sbb
lods
imul
addr16
cmp
and
adc
jmp
mov
daa
xor
cld
push
pop
fld
adc
xchg
sbb
jbe
pop
pop
fwait
mov
adc
ss
jo
add
xor
pop
test
in
sahf
bound
scas
mov
pushf
xchg
or
xchg
mov
and
xchg
sar
or
icebp
jmp
cmps
push
adc
mov
dec
ret
lods
pop
add
nop
repnz
(bad)
jl
xor
lods
(bad)
(bad)
movs
retf
outs
push
scas
sbb
mov
xchg
dec
xor
(bad)
nop
sub
in
add
pop
sub
retf
retf
xchg
cs
ins
add
lds
(bad)
pop
dec
sbb
fdivr
data16
(bad)
mov
jl
or
fsubr
dec
es
jb
mov
movs
adc
fldenv
nop
cmc
pusha
xor
std
in
in
(bad)
mov
ja
lds
(bad)
enter
cld
sub
not
out
jb
mov
fdiv
daa
cmp
sbb
push
mov
and
sbb
mov
loop
xor
ins
adc
add
ds
aam
int3
add
mov
outs
adc
jmp
sub
xchg
jnp
mov
sbb
mov
jle
sahf
mov
xchg
stos
mov
imul
mov
std
sbb
movs
ins
xchg
pop
pop
inc
xor
stc
adc
movs
jl
push
xor
or
rol
sbb
mov
cmps
or
jae
popf
cli
and
inc
add
sbb
retf
enter
cld
sbb
imul
sahf
pop
and
mov
push
mov
fs
(bad)
not
dec
hlt
lea
mov
pushf
push
popa
push
add
mov
arpl
je
in
inc
cmp
mov
add
fs
(bad)
pop
int
or
dec
movs
ret
mov
(bad)
cwde
fidivr
sub
fs
fsqrt
cs
adc
icebp
mov
or
or
out
inc
sub
pop
pop
fst
xor
ret
test
xchg
sbb
fidivr
mov
xor
sub
(bad)
rcr
xor
hlt
retf
scas
sbb
fmul
and
jns
xchg
cmovbe
stos
add
scas
addr16
xchg
aad
loope
xchg
loope
mov
test
sub
sbb
push
in
pop
ffree
int
mov
sbb
aam
inc
stc
mov
mov
rol
popf
mov
sub
lods
cmp
xlat
or
adc
in
fmul
push
rol
add
inc
repz
cmp
xlat
hlt
lods
test
xchg
mov
aam
push
jbe
inc
rcl
pop
push
(bad)
xlat
movs
aad
lea
lds
xchg
mov
outs
scas
iret
es
cmp
fstp
xchg
std
sbb
and
cmc
adc
rol
rcl
int3
dec
sub
jmp
xor
xor
cwde
cmp
cmp
xor
mov
mov
call
or
aaa
pop
jae
ins
mov
xchg
scas
mov
pop
cmp
push
pop
jle
jp
ins
aam
inc
sbb
mov
xor
cmps
jmp
or
clc
aaa
mov
dec
sbb
int3
cli
movs
pop
cmp
das
sbb
adc
imul
popf
arpl
push
addr16
push
jmp
aas
outs
adc
mov
adc
push
mov
jmp
mov
sub
push
out
(bad)
inc
push
jae
xor
xchg
push
sti
imul
out
ror
mov
push
fidivr
lock
pop
dec
in
push
ds
fsub
mov
push
shl
dec
and
es
cmps
push
mov
outs
push
jl
or
imul
pop
and
xchg
sub
lahf
dec
mov
ins
je
adc
ficomp
in
sub
into
xchg
div
inc
nop
xor
push
popa
movs
rcl
push
xchg
or
leave
loop
sub
ja
mov
int
fstp
add
call
xor
inc
cmp
cmp
cmp
inc
pop
dec
add
sbb
(bad)
jle
mov
ds
add
adc
xor
sub
or
hlt
sti
stos
adc
jp
and
cmp
es
imul
dec
(bad)
nop
cmp
loope
sub
xchg
leave
loope
mov
lahf
jge
cmps
mov
test
nop
push
dec
sbb
cmp
shr
mov
mov
cli
pop
mov
dec
ror
add
adc
adc
leave
pop
push
xor
stos
xchg
pop
push
in
xchg
dec
aad
jns
test
fiadd
mov
(bad)
iret
arpl
mov
pop
pop
sahf
push
dec
je
cmp
pop
retf
jmp
fmul
xor
push
xor
shr
sar
dec
bound
inc
mov
out
movs
mov
mov
mov
aaa
imul
mov
or
jb
add
mov
call
mov
add
cmp
test
push
mov
adc
(bad)
loopne
(bad)
fmulp
xchg
out
inc
xlat
fst
mov
stos
xlat
(bad)
xor
sub
sub
jnp
and
and
pop
mov
sbb
ins
lds
cmps
sbb
sbb
iret
pop
ds
xchg
dec
arpl
push
(bad)
out
js
in
cmp
mov
adc
icebp
cmp
push
xchg
push
pop
pop
retf
std
adc
sti
ret
cdq
xchg
adc
or
mov
jmp
movs
jo
xchg
dec
fimul
mov
outs
imul
push
pop
lea
outs
xor
pop
int3
and
es
add
mov
popa
xlat
fwait
add
xchg
loop
cmp
inc
bound
cmp
add
pop
sbb
movs
mov
rcr
pop
movs
jg
adc
mov
pop
pop
inc
push
push
and
int3
inc
movs
jmp
or
aam
mov
xor
sub
mov
cmc
fs
pop
mov
cld
fadd
inc
hlt
pusha
jno
(bad)
push
dec
lds
retf
xchg
mov
jne
xchg
inc
jmp
out
ret
mov
clc
nop
fcomi
push
inc
jl
inc
popf
int
imul
xor
adc
mov
and
jmp
fsub
rcr
mov
jae
sub
int3
fisubr
lahf
mov
ror
lods
inc
lods
lea
in
enter
(bad)
in
repz
pop
or
inc
loope
sbb
mov
adc
scas
fisttp
sub
cmp
shr
jmp
and
pop
dec
ret
jmp
test
push
test
movs
popa
int3
or
adc
cmp
rol
xchg
adc
retf
xor
ins
or
cmp
popf
push
push
xchg
dec
mov
aas
sar
dec
repnz
loopne
push
jns
mov
sbb
rol
(bad)
ret
xor
xchg
xor
inc
mov
jg
dec
cs
sbb
mov
mov
add
or
cdq
mov
call
xor
stos
mov
mov
lods
ret
mov
neg
mov
rcr
mov
and
mov
sbb
into
test
lods
loop
es
call
das
(bad)
aam
std
and
sub
cwd
and
lods
ss
inc
into
pop
js
cmp
jl
mov
dec
call
cmps
cmp
mov
xchg
xchg
aad
out
xchg
mov
sub
test
ds
cdq
popf
in
sub
bound
shl
rcl
mov
(bad)
leave
fcmovu
pop
idiv
(bad)
ss
fisubr
cmp
in
and
rol
sbb
xchg
fwait
xor
xchg
inc
sbb
lds
fidivr
in
fldenv
push
call
sti
bound
(bad)
jge
hlt
adc
mov
cmp
test
add
adc
jmp
push
pop
pop
popa
mov
ss
dec
add
dec
out
jb
inc
popa
pusha
mov
or
push
jno
mov
ja
xrelease
jecxz
imul
mov
adc
in
pusha
scas
in
sbb
imul
and
out
add
stos
hlt
xor
call
dec
ds
adc
call
cmp
das
xor
imul
xchg
ficom
sahf
jl
cmps
popa
ds
mov
xchg
jmp
add
out
add
imul
jecxz
jo
mov
xchg
jp
or
add
cmps
inc
mul
call
jae
pushf
data16
add
push
imul
stos
fcmovnbe
std
sar
addr16
pop
add
or
repnz
inc
mov
aad
xchg
mov
fnstsw
jl
add
ror
hlt
frstor
inc
push
dec
hlt
loop
ficomp
mov
ins
add
mov
push
(bad)
clc
fs
ja
xor
or
mov
imul
adc
mov
or
iret
cmps
lock
xor
inc
pop
xor
add
dec
jmp
adc
frstor
jge
mov
jmp
(bad)
dec
leave
je
sti
mov
or
dec
leave
cmps
pop
sahf
adc
xchg
mov
cmc
inc
es
sub
das
data16
mov
push
mov
jmp
dec
cmp
push
hlt
frstor
and
xor
xchg
scas
sbb
scas
sti
jecxz
pop
xchg
dec
scas
dec
addr16
mov
fiadd
in
adc
inc
adc
xchg
xlat
outs
div
js
sar
inc
sahf
mov
call
daa
(bad)
je
mov
dec
repnz
cmp
add
ds
and
sbb
shl
sbb
imul
jge
pop
dec
rol
movs
and
add
lods
repz
xchg
in
pusha
push
cmc
push
call
adc
xchg
ja
mov
pop
es
mov
adc
cmp
jbe
inc
inc
aad
lods
dec
mov
xor
retf
or
ja
inc
mul
inc
dec
xchg
movs
daa
das
push
pop
rcr
push
repnz
add
jns
jmp
jno
repz
jge
or
loopne
addr16
dec
dec
sbb
dec
inc
and
ficomp
sbb
inc
xchg
sbb
mov
cmc
mov
je
arpl
xor
cmp
inc
int3
aas
mov
in
imul
bnd
add
js
(bad)
jmp
xchg
je
pop
sub
mov
push
sub
imul
xchg
stos
pushf
jns
jne
mov
in
sbb
adc
mov
cmps
cdq
add
mov
je
int
push
stc
imul
div
scas
add
dec
rol
call
jmp
pushf
dec
fs
int
add
lods
(bad)
fcomp
mov
ret
(bad)
js
(bad)
aad
jecxz
xlat
mov
stc
xor
push
xor
cmp
xor
jl
(bad)
retf
push
daa
sub
pushf
fstp
das
fs
xor
inc
mov
mov
push
stos
loop
dec
add
int
call
jmp
sub
lds
adc
mov
test
mov
cmp
(bad)
out
sub
lods
dec
jp
sar
fcom
jl
push
adc
sub
xor
inc
out
lods
ret
lods
test
lods
push
add
lods
scas
mov
fdivr
xor
mov
xchg
test
retf
cs
xor
pop
dec
mov
(bad)
fs
add
inc
(bad)
pop
imul
fcom
sub
push
pop
dec
mov
mov
mov
pop
call
push
push
and
cs
retf
mov
cmps
shl
scas
xlat
hlt
dec
mov
or
xchg
leave
mov
scas
pop
lahf
cmp
mov
and
movs
dec
aad
rol
jns
add
push
loope
jl
push
pop
js
(bad)
jle
cmps
shl
ins
div
arpl
push
dec
xchg
adc
add
mov
inc
sbb
or
outs
xchg
xchg
loope
pop
inc
mov
push
(bad)
sbb
and
ror
ficomp
jnp
push
dec
pop
stc
push
daa
add
test
retf
and
mov
popa
sbb
pop
or
mov
pop
mov
or
mov
adc
out
jbe
enter
jns
adc
call
loop
xor
retf
adc
movs
hlt
push
mov
fs
int
stos
xchg
inc
adc
shl
fistp
add
add
sub
mov
cs
into
les
xor
xor
add
xchg
or
or
fild
and
retf
xor
mov
xor
into
lock
fst
popa
arpl
imul
xchg
mov
dec
pop
cld
les
(bad)
int
cmp
scas
sub
sbb
js
sbb
inc
repz
adc
mov
cli
lock
and
cwde
out
cdq
mov
(bad)
xchg
je
jmp
call
sub
ds
movs
jmp
add
stos
push
stos
pop
jne
jb
loope
push
mov
push
pop
jno
fidiv
inc
ret
ficomp
outs
stos
mov
mov
sahf
jp
adc
xchg
xor
loope
jne
(bad)
and
sub
icebp
ss
cmps
jle
in
std
repz
test
cmp
push
cwde
xor
add
mov
stc
pop
out
jo
sbb
and
fwait
imul
lods
jmp
pop
cmp
cmp
xlat
out
(bad)
aas
cmp
push
xor
inc
lea
and
sahf
pop
(bad)
fcom
xchg
cwde
inc
inc
mov
ror
mov
stc
lea
mov
sbb
and
jp
nop
mov
pusha
mov
(bad)
mov
lds
and
loope
sbb
outs
inc
dec
adc
mov
ror
push
adc
ins
das
mov
lahf
rol
sub
ss
and
fldenv
enter
int
mov
cmp
std
mov
xor
data16
iret
sbb
rcl
fist
lahf
push
dec
lods
sti
test
popf
cmp
cmp
inc
js
clc
push
and
and
cli
dec
add
lahf
mov
mov
pushf
out
outs
into
push
inc
(bad)
pop
cmps
mov
jb
mov
idiv
xlat
and
adc
scas
or
sub
add
jno
jg
jbe
movs
jb
pop
mov
sbb
xchg
or
cmp
or
sar
call
das
push
jbe
inc
cmp
retf
scas
ret
cmp
(bad)
addr16
dec
adc
jge
xor
repnz
fistp
loopne
shl
push
stos
push
xchg
add
cwde
adc
dec
pop
adc
jp
jmp
or
out
loopne
inc
ret
add
lods
lods
cld
leave
rol
push
stc
lds
jmp
mov
mov
jb
xor
cs
mov
dec
into
mov
adc
mov
movs
in
and
loope
and
pop
loopne
addr16
xor
out
xor
popf
mov
test
gs
xchg
popa
and
jb
mov
push
stos
mov
repz
js
mov
mov
mov
in
test
pop
mov
fadd
cld
adc
xchg
retf
pop
sub
hlt
aad
xor
scas
jle
mov
push
lods
push
pop
dec
push
nop
dec
mov
dec
pop
loop
adc
les
sbb
or
jle
and
enter
and
push
push
bound
add
xchg
fwait
and
ja
lods
jecxz
sub
retf
test
cli
outs
xor
in
mov
jnp
jo
sub
jns
sbb
ret
frstor
cmp
cld
lods
mov
rcl
mov
in
lock
jg
lods
xchg
cld
jmp
inc
cld
(bad)
je
sti
xlat
pusha
jae
(bad)
lods
hlt
add
and
into
stos
add
hlt
movs
inc
ret
mov
lea
xor
mov
mov
aas
out
push
xchg
pop
jmp
ret
ss
pop
nop
std
xchg
aad
out
addr16
mov
lds
and
mov
aad
inc
mov
clc
dec
aaa
xchg
aaa
loope
rcl
ins
fbstp
mov
push
sbb
pop
fnstsw
call
inc
rcl
ins
les
sbb
pop
and
(bad)
lds
cmp
add
or
push
cwde
mov
sub
imul
loop
out
add
bound
cld
dec
adc
ret
pop
sbb
mov
inc
aaa
test
xchg
scas
cs
mov
je
pusha
mov
movs
aaa
or
dec
in
into
and
mov
stos
xchg
xchg
nop
in
add
dec
es
and
rcr
adc
pushf
or
add
mov
inc
add
inc
pop
gs
mov
pop
xor
repnz
adc
pop
pop
in
cmps
cmp
inc
imul
and
add
inc
stos
cdq
ins
loop
cmps
imul
stc
xchg
jl
es
ins
sbb
(bad)
retf
jae
jae
add
sbb
push
enter
cmps
out
inc
jns
cmp
(bad)
aas
jle
pop
or
mov
and
int3
je
inc
jg
sub
sub
mov
not
or
nop
and
pop
push
(bad)
popaw
adc
test
mov
cdq
push
ins
aas
lods
add
int
popf
enter
out
ins
sbb
(bad)
cmp
jmp
ja
dec
lahf
xor
into
aas
test
mov
fptan
xor
xor
dec
adc
data16
xchg
inc
in
(bad)
push
fstp
jo
push
add
das
adc
jae
iret
ret
or
push
and
cmp
adc
pop
jns
data16
iret
sar
ja
inc
cwde
pusha
(bad)
adc
(bad)
mov
jae
pop
sbb
dec
xchg
and
sbb
repnz
popf
popa
inc
movs
ss
pop
jle
in
mov
leave
pop
out
mov
mov
rol
out
jne
loopne
xchg
fs
mov
ja
sbb
inc
and
and
jl
xchg
js
pop
out
addr16
pop
das
addr16
cld
jb
xor
push
push
out
in
jns
inc
push
or
stos
test
imul
imul
add
xor
dec
or
call
mov
daa
hlt
pop
popa
mov
rcr
ret
shl
sbb
mov
dec
shl
cdq
arpl
fs
jbe
mov
inc
sub
sub
dec
sti
gs
adc
jo
adc
loope
xchg
out
or
out
push
add
mov
dec
and
ret
mov
xchg
std
push
pop
fldenv
sub
cmps
ins
ret
movs
jmp
cmp
pop
dec
mov
mov
int3
je
test
mov
(bad)
pop
lock
pop
(bad)
arpl
push
imul
sahf
inc
sub
sbb
dec
lods
mov
cmps
mov
sbb
lahf
mov
xchg
leave
jp
dec
sbb
repnz
fs
cmp
and
rcr
mov
pop
in
das
add
mov
adc
adc
adc
mov
std
mov
pushf
xchg
pop
xchg
inc
push
inc
add
mov
mov
cmp
nop
outs
xchg
into
outs
sub
fldenv
nop
ret
out
movs
cmps
icebp
push
or
aaa
inc
jle
repnz
inc
jb
sbb
aam
push
shr
and
push
sub
push
in
jns
in
outs
sub
dec
jge
dec
scas
mov
lgs
loopne
call
push
aas
ins
jmp
out
sbb
jge
imul
xchg
fcmovnbe
shl
mov
arpl
(bad)
shl
sub
scas
mov
cmp
mov
xor
daa
xor
xor
and
jns
fbld
dec
sbb
cmp
jne
pop
or
lods
ret
pushf
pop
in
pusha
xchg
out
popa
outs
mov
fisubr
stos
or
fcomp
(bad)
fldenv
dec
pop
xor
dec
ror
add
dec
mov
fsubr
cmp
xor
outs
sub
arpl
mov
cmps
enter
test
push
mov
movs
cmc
mov
ror
xlat
or
mov
leave
inc
gs
push
pop
sub
retf
pop
push
test
js
out
nop
pop
mov
call
add
pop
sbb
into
(bad)
outs
ror
push
sub
add
xchg
ins
imul
xchg
pop
xchg
clc
xor
shl
push
add
pop
xchg
outs
mov
mov
push
aaa
jbe
fcomp
add
inc
xor
sbb
inc
push
ins
push
cli
sar
(bad)
enter
aam
mov
inc
rep
dec
sbb
adc
enter
adc
pop
jle
call
xchg
icebp
or
push
push
mov
cmp
lahf
(bad)
loopne
stos
dec
xchg
test
mov
outs
inc
mov
cmp
inc
jle
push
sub
xchg
jbe
cmp
mov
mov
cmps
mov
shr
and
push
push
xor
mov
aaa
icebp
lods
fld
ror
ins
mov
cmp
call
inc
call
sbb
out
in
sub
pop
stc
cmp
outs
sub
and
(bad)
out
pop
out
les
sub
idiv
in
cmp
dec
xchg
ja
dec
pop
xchg
mov
sbb
stos
imul
cmps
adc
ins
adc
dec
mov
fxam
dec
mov
ins
and
xchg
add
std
push
jle
pushf
and
je
repnz
div
movs
fwait
xchg
movs
(bad)
in
fwait
cmp
shl
xor
inc
mov
sub
add
stos
jmp
test
xlat
enter
xchg
push
inc
adc
and
loope
mov
dec
loopne
sub
clc
(bad)
fst
je
aas
adc
sbb
cs
pop
inc
adc
dec
movs
mov
mov
dec
push
mov
inc
sbb
gs
pop
movs
out
dec
push
fs
xor
xchg
inc
mov
lock
lds
inc
xor
jo
mov
adc
lahf
pop
sbb
push
push
inc
jl
dec
cmp
int3
and
mov
pop
xor
or
int3
pop
popa
pop
add
addr16
outs
mov
das
out
xor
push
leave
pushf
adc
dec
pop
push
rcr
das
lea
mov
js
adc
adc
sub
mov
xor
mov
push
dec
retf
jp
popf
mov
jle
push
dec
dec
ins
lods
jmp
and
adc
sbb
jo
or
sbb
mov
sahf
int
test
ret
add
int3
inc
mov
out
xchg
xchg
in
mov
in
in
(bad)
jne
mov
fdiv
inc
xchg
ss
xor
or
or
(bad)
icebp
inc
retf
mov
push
mov
push
fdivrp
int
add
cld
jo
ins
mov
add
daa
(bad)
cmp
int3
test
pop
jmp
mov
loop
scas
popf
mov
jl
add
inc
cmp
mov
cmp
std
add
sbb
and
push
sbb
mov
jecxz
aaa
xlat
cs
arpl
aas
mov
mov
lods
and
or
call
push
ins
stc
jno
pop
push
inc
(bad)
in
push
lea
cli
sub
xchg
push
sbb
call
dec
iret
daa
shr
or
dec
inc
mov
sub
sbb
dec
into
sub
pop
adc
jmp
aam
ret
or
mov
xor
mov
ins
mov
iret
mov
jb
icebp
movs
or
and
xor
(bad)
das
test
push
xchg
shr
inc
xchg
mov
in
arpl
fwait
sub
fcomp
loop
pop
pop
test
std
imul
imul
loope
cdq
inc
xchg
sub
into
loopne
sbb
xchg
mov
dec
les
ret
(bad)
std
loop
cld
push
ins
push
push
dec
rcl
(bad)
mov
(bad)
rcl
xor
and
aaa
test
mov
cmp
ficomp
mov
(bad)
aam
(bad)
pop
pushf
push
aas
add
fbld
jno
retf
mov
and
es
push
fs
sub
lea
mov
gs
retf
sbb
into
es
mov
sub
mov
scas
idiv
aad
sbb
push
mov
data16
dec
das
pop
fcmovne
mov
iret
inc
xlat
cs
add
adc
imul
and
mov
xchg
jecxz
lds
(bad)
mov
inc
int
aam
mov
je
mov
sub
scas
mov
cmps
or
aam
movs
push
dec
mov
or
or
xchg
and
into
repz
in
icebp
sbb
movs
cmp
(bad)
fidiv
xchg
sar
mov
ret
push
repz
cmp
ret
and
test
push
inc
pop
retf
cs
push
adc
imul
in
shl
cdq
mov
cmp
mov
sbb
lods
push
inc
outs
les
in
test
mov
ret
pop
sub
sbb
pop
cmp
inc
aas
add
cli
pop
jmp
mov
cmc
int3
gs
add
aas
scas
sbb
and
cmps
mov
pop
pop
scas
push
mov
or
mov
adc
inc
outs
mov
xor
retf
hlt
push
inc
jnp
push
stos
cli
scas
pop
add
and
lods
movs
test
pavgw
dec
jno
sub
add
or
aas
jo
in
push
push
dec
sti
sysret
add
cmp
mov
outs
jp
inc
jns
pushf
or
js
(bad)
loopne
test
ja
sbb
aas
call
arpl
add
rcr
movs
retf
fild
icebp
cmp
jne
sub
jne
cmp
loopne
xor
add
scas
push
mov
xor
mov
mov
push
lods
inc
inc
outs
ret
mov
retf
or
fistp
pusha
cmps
mov
ins
fcmovu
retf
push
das
lock
jge
stc
aad
add
popa
fdiv
fisubr
cmp
pop
add
loopne
xor
popa
add
retf
sbb
mov
clc
movs
cmp
(bad)
jmp
loope
cmc
cmp
push
je
adc
imul
cmp
mov
cld
fidiv
(bad)
push
popa
loop
mov
aas
cmp
aas
test
mov
mov
sub
pop
sub
aaa
mov
test
jmp
out
pop
hlt
out
adc
push
cdq
xor
popf
xor
pop
sub
les
jg
pop
sub
pop
jg
dec
loopne
jl
jbe
jmp
retf
mov
ins
test
jecxz
in
mov
dec
js
and
dec
outs
jecxz
fcom
pop
xor
xor
lods
mov
not
popf
adc
push
mov
cmp
in
mov
fidiv
dec
call
dec
cmc
(bad)
fstp
pusha
pushf
or
mov
(bad)
div
stc
fbstp
cmp
int3
push
stc
push
jle
mov
or
aas
jmp
les
mov
push
mov
mov
(bad)
adc
sbb
xchg
in
loop
xchg
inc
or
jo
mov
je
lods
inc
cmp
jecxz
xor
push
sub
sbb
test
mov
push
xor
outs
jp
lea
aam
addr16
sti
data16
pop
jl
xchg
pop
mov
jmp
nop
aad
js
nop
inc
cmp
xchg
repnz
pushf
in
fwait
xchg
and
inc
pop
aam
jle
sbb
lahf
sbb
stos
jl
xor
repz
sar
ja
jae
std
mov
leave
jmp
mov
retf
(bad)
outs
and
jp
lock
dec
test
retf
fwait
cmp
pusha
rcr
mov
cmp
inc
into
pop
push
xor
push
outs
or
mov
mov
ja
ret
jo
pop
dec
std
lods
cmp
stos
mov
fnstsw
xchg
pop
add
inc
cdq
cdq
or
(bad)
jl
push
pop
neg
retf
inc
sub
xchg
repnz
mov
jmp
outs
mov
xchg
jge
and
cmps
add
mov
stos
call
or
jbe
daa
es
cmps
lods
aad
in
sub
xchg
pop
imul
retf
dec
xchg
fnstcw
sti
xor
sahf
out
inc
push
dec
cmps
xchg
jnp
mov
xor
cmp
retf
test
repz
cmps
in
push
rol
js
sahf
or
mov
cmp
cmps
mov
(bad)
xchg
in
nop
adc
cli
sbb
ds
int3
adc
popa
(bad)
rol
and
pop
cli
shl
ds
jp
mov
inc
or
inc
(bad)
lods
add
pop
adc
iret
jl
ins
dec
stc
dec
les
lahf
cmp
mov
xor
popf
dec
push
vmwrite
mov
or
jmp
ror
fwait
(bad)
aaa
aas
xor
pop
adc
jo
mov
xlat
mov
fisubr
xor
jns
shl
mov
fwait
inc
aam
imul
mov
pushf
and
cmp
mov
sbb
or
sbb
out
(bad)
dec
mov
call
ds
mov
movs
cmp
iret
dec
stos
int3
scas
inc
cs
mov
or
cld
std
and
push
dec
adc
jns
fs
fadd
or
dec
daa
sub
inc
adc
jae
int
xlat
call
mov
pusha
in
les
sbb
mov
mov
stc
rcl
mov
pop
adc
jae
out
fmul
jo
pop
jmp
fwait
push
int
sub
pop
sahf
jo
sbb
and
test
adc
jecxz
add
dec
pop
fdivr
dec
cwde
sti
in
dec
retf
int3
sbb
add
shl
not
and
mov
icebp
add
dec
mov
inc
cli
xor
shl
add
cmp
(bad)
fbstp
sbb
mov
out
dec
lds
test
aam
cmp
adc
int3
repz
sub
mov
add
bound
lds
(bad)
jp
pop
clc
cmp
mov
mov
mov
dec
lea
mov
sub
xchg
outs
fs
pusha
into
dec
xchg
pop
sub
fnstenv
retf
mov
ficom
shl
xor
dec
ja
jmp
add
push
push
cld
loop
mov
adc
dec
cmp
les
fs
nop
popf
pop
lea
xchg
pop
xchg
add
fild
pop
jmp
mov
mov
mov
daa
and
pop
jbe
lods
sub
pop
xlat
call
or
test
pop
pop
scas
loope
mov
mov
iret
sub
push
mov
jnp
aam
cs
lahf
syscall
add
cmp
push
push
cmps
test
add
push
pop
lods
outs
adc
mov
adc
(bad)
in
mov
jne
push
out
dec
or
cmp
adc
and
ret
(bad)
popf
je
mov
test
push
xchg
repz
inc
in
push
test
jmp
fbld
inc
jae
adc
std
pop
sub
jmp
and
in
inc
fsubp
xor
add
add
ret
shr
les
add
lods
xor
mov
or
in
pop
push
push
xchg
xchg
les
push
stos
adc
sub
sub
aad
and
pop
loop
aaa
sbb
push
pop
jl
xor
sbb
int
setb
inc
mov
pop
ds
pop
or
mov
outs
popa
and
xchg
or
in
cs
iret
sub
out
xchg
fidivr
pop
or
retf
dec
sbb
inc
dec
inc
shl
in
sub
jo
(bad)
sbb
sbb
das
dec
fs
sub
int
xor
test
int3
aad
xchg
in
xchg
ret
inc
sub
sbb
pop
fst
pop
dec
or
mov
push
call
jmp
inc
or
pop
iret
fadd
into
sub
cmp
lock
stos
mov
rcr
test
mov
mov
frndint
add
loop
(bad)
fisttp
outs
mov
push
push
outs
xor
popa
push
dec
clc
sbb
xchg
sbb
jbe
jo
ins
lods
dec
sar
sbb
rol
xchg
sbb
jo
shl
pop
jae
jle
or
sar
pop
mov
mov
lds
pop
fwait
or
leave
and
jae
arpl
outs
pop
repnz
pusha
add
and
xlat
addr16
enter
and
ret
rcr
sub
push
dec
add
push
jmp
(bad)
outs
add
inc
push
pop
daa
push
sahf
inc
fwait
or
sbb
ss
pop
push
mov
jmp
mov
mov
test
inc
hlt
pop
xchg
mov
xchg
jne
mov
or
mov
daa
loopne
popa
push
scas
jmp
cdq
mov
jns
aad
push
stos
fisub
gs
adc
pop
push
mov
shl
icebp
mov
or
pushf
inc
inc
(bad)
xchg
dec
push
pop
repz
test
pop
int3
add
add
jne
(bad)
icebp
hlt
sbb
arpl
(bad)
adc
aam
call
lods
int3
retf
jecxz
into
or
in
cmp
and
(bad)
packuswb
mov
xlat
add
and
dec
(bad)
in
(bad)
out
mov
push
inc
out
add
jae
or
hlt
ds
xchg
scas
(bad)
stos
pop
retf
cmp
xchg
and
xor
adc
outs
out
mov
mov
lods
sti
sub
jne
lahf
mov
sbb
sub
jp
sbb
(bad)
mov
xchg
push
adc
push
stos
mov
and
xlat
cli
(bad)
xor
into
pop
xlat
icebp
es
cmp
cmp
ins
adc
jg
mov
mov
ds
pop
scas
adc
cdq
xchg
sbb
cmp
stc
mov
retf
repz
or
pusha
push
leave
das
push
pop
xlat
mov
sbb
vpshaw
(bad)
fld
cmc
push
shl
cwde
test
adc
jo
xchg
sub
and
stos
adc
(bad)
add
pop
cwde
inc
sbb
imul
loopne
sub
popf
push
cdq
mov
pop
or
(bad)
mov
int
push
push
into
xchg
in
lea
mov
pop
adc
neg
add
scas
mov
(bad)
stos
fisttp
movs
data16
in
mov
ins
and
leave
pop
xchg
dec
dec
out
jle
dec
(bad)
mov
sbb
jbe
test
xor
sub
dec
push
xlat
inc
stos
and
les
push
dec
pusha
sti
cmc
mov
push
ds
loopne
hlt
lods
mov
retf
fdivp
and
mov
adc
and
mov
cmp
add
xor
stos
(bad)
fnsave
iret
enter
cmp
sbb
mov
sti
mov
pop
push
add
cdq
and
inc
mov
les
add
mov
sub
pop
scas
(bad)
out
add
dec
jge
retf
and
ret
fldenv
mov
inc
xchg
mov
push
mov
outs
imul
call
xor
pusha
add
jno
push
dec
inc
and
mov
jl
stos
add
pushf
loope
ins
sar
cdq
mov
and
movs
jmp
jp
aas
push
pop
push
stos
jns
xchg
iret
sub
jmp
popf
sub
cmp
int3
jmp
adc
mov
xor
pop
cmp
dec
test
mov
push
(bad)
cmp
add
mov
cmps
cmc
inc
or
sub
rol
cwde
iret
jp
lock
mov
ror
push
call
loopne
adc
call
adc
pop
xchg
sbb
cmp
(bad)
xchg
daa
sti
jno
cmp
fstp
leave
and
xchg
sub
imul
adc
cmp
xchg
push
mov
mov
and
rcl
inc
lea
or
test
jmp
(bad)
jnp
clc
and
jecxz
std
pop
xchg
mov
loop
fcom
fwait
push
mov
repnz
out
mov
add
mov
push
jno
fstp
retf
xchg
pop
inc
fsubr
int
mov
xchg
in
cmp
dec
scas
in
xlat
fld
mov
inc
nop
xchg
xor
adc
mov
dec
jae
dec
mov
clc
les
outs
jbe
jge
push
mov
xchg
int
jl
sti
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
ins
xchg
adc
adc
xor
cmp
rcl
aad
aam
push
fbstp
add
add
add
add
add
pusha
jns
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
