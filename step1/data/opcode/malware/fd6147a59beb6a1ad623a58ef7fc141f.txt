inc
fbstp
aas
cmp
xor
jb
jae
add
pop
push
jp
dec
push
(bad)
cli
sbb
je
and
stc
aaa
cmp
loope
jb
pop
je
mov
je
jae
adc
push
pop
je
jae
xor
xchg
sub
clc
outs
js
(bad)
loopne
push
dec
imul
add
js
clc
push
push
jp
push
js
shrd
enter
pop
lahf
mov
jae
je
mov
sub
fsub
sti
xchg
dec
and
jae
out
xor
mov
jnp
and
jae
sub
fmul
sahf
jnp
and
clc
pop
jl
jmp
in
xor
xor
sbb
adc
into
jae
je
ss
aaa
arpl
les
jae
xor
add
dec
jnp
mov
jae
stc
jle
pushf
or
ja
add
and
xchg
xor
shr
les
jae
and
ret
pop
je
xor
xlat
dec
ret
pop
je
and
int
jae
je
dec
and
xor
inc
inc
ret
pop
je
(bad)
xchg
dec
dec
ret
pop
je
dec
sub
xor
sub
dec
sti
jbe
inc
jmp
jg
mov
pop
addr16
stc
or
daa
call
jo
sbb
and
fmul
jp
adc
stc
ja
push
jg
and
jnp
(bad)
(bad)
adc
stc
inc
nop
popf
adc
add
sbb
mov
mov
push
jb
sbb
pop
jg
jae
push
jns
je
jb
pushf
mov
jp
add
pop
mov
arpl
je
sbb
pushf
and
pop
je
mov
jge
push
sbb
jae
pop
je
push
pushf
mov
inc
pinsrw
test
jnp
inc
(bad)
jg
je
lock
jb
je
cs
sub
cli
repz
xor
je
je
jne
jae
lahf
call
jg
xchg
inc
int3
jae
pop
je
movs
jnp
jb
pop
je
cli
cli
push
lea
add
xor
out
bound
pop
and
cli
cmp
pop
neg
cli
jp
and
adc
jo
pop
push
lock
jae
je
pop
scas
ss
cmp
xor
push
ret
pushf
pop
nop
aaa
les
jae
inc
push
ret
pop
je
inc
aas
les
jae
push
retw
pop
je
sub
jb
fld
xchg
cmp
jae
mov
jb
pop
mov
es
xchg
retf
jne
fwait
mov
jb
dec
and
sub
xchg
icebp
add
mov
mov
je
jae
ja
jae
je
jae
je
sbb
in
jae
mov
jae
std
mov
fcomp
xor
mov
inc
mov
sub
xchg
loope
and
pop
cmp
xchg
icebp
mov
loope
and
imul
call
push
jae
(bad)
(bad)
xor
lock
mov
jae
pop
div
jae
add
fbstp
pusha
sahf
and
je
mov
dec
mov
inc
das
mov
lock
and
test
adc
std
mov
pop
mov
(bad)
pop
mov
sbb
sbb
jae
je
jae
je
jae
add
push
call
cmc
mov
ds
jp
add
fistp
lea
or
lea
jnp
or
std
mov
push
call
add
fistp
jae
sbb
jo
pop
je
jg
mov
cli
fadd
xor
mov
and
int
ss
mov
fdivr
aaa
(bad)
dec
sbb
jae
je
jae
add
push
call
jge
pop
sbb
cwde
sub
pop
imul
data16
sbb
add
push
call
mov
(bad)
not
jae
jge
pop
sbb
cwde
adc
mov
hlt
jb
mov
xor
inc
sub
lock
and
fdiv
mov
push
adc
pop
mov
ss
std
aaa
lahf
call
pushf
sti
ss
ja
stos
ss
jp
jb
jp
jb
jno
test
ss
std
aaa
xchg
call
test
ss
ja
stos
ss
loopne
dec
clc
pop
mov
xchg
and
mov
pusha
dec
dec
iret
add
xchg
test
mov
push
je
mov
mov
arpl
xor
ss
ja
pop
mov
xor
jb
xchg
test
mov
push
je
mov
mov
shl
mov
pop
jl
mov
mov
jae
push
dec
ss
lock
mov
jae
sub
mov
cmps
jo
jb
pushf
dec
push
pop
je
and
xchg
sub
call
sar
(bad)
loopne
lea
add
sbb
(bad)
xor
push
jnp
mov
mov
push
je
mov
mov
jp
icebp
jae
loopne
jb
sub
test
out
jmp
jnp
pusha
dec
sti
mov
jae
mov
clc
call
pop
(bad)
out
loopne
(bad)
cli
(bad)
pop
xor
mov
call
sub
mov
cli
cli
neg
clc
inc
js
ss
outs
ds
push
(bad)
xchg
xor
push
out
aaa
adc
push
fwait
push
or
jp
int3
cmp
arpl
mov
cmc
mov
je
lea
aad
mov
mov
cld
inc
pop
dec
lods
bswap
push
jnp
jo
jae
xor
test
sub
es
xchg
icebp
lahf
(bad)
and
xchg
sub
pop
mov
(bad)
jbe
ss
mov
(bad)
daa
(bad)
sbb
pop
dec
jnp
cmps
aas
adc
and
mov
sbb
sti
mov
fst
dec
lods
arpl
xor
xor
sbb
pop
mov
ss
aaa
xchg
adc
ss
sub
(bad)
mov
cli
cli
neg
clc
push
stc
or
gs
xchg
xor
cli
dec
mov
jae
sbb
mov
pop
cmp
js
int
gs
mov
pop
lahf
imul
push
xchg
xchg
xor
ss
pop
mov
mov
inc
sub
mov
dec
and
pushf
arpl
sub
mov
stos
ss
push
sbb
div
(bad)
mov
std
aaa
(bad)
xchg
or
dec
sbb
nop
pop
je
fwait
das
mov
(bad)
pop
and
test
sub
mov
and
dec
and
cs
xor
mov
mov
mov
add
pop
add
xchg
mov
jae
je
mov
je
and
pop
jnp
je
jae
mov
jae
mov
inc
pop
std
sbb
je
xchg
xchg
xor
sub
mov
cli
cli
and
pop
jnp
push
outs
je
std
mov
std
mov
and
shl
pop
je
js
call
stc
imul
jp
pop
jo
add
dec
jl
jne
inc
stc
imul
jp
out
xchg
cli
pop
mov
mov
call
(bad)
mov
cli
cli
neg
clc
push
int
add
ss
out
mov
fdiv
push
jae
adc
jne
call
test
sbb
xchg
xor
jmp
lock
jae
inc
mov
les
mov
xor
and
pop
push
jbe
pop
stc
aaa
or
add
je
mov
mov
test
call
jnp
push
sti
sbb
xor
push
jmp
or
jae
je
mov
mov
cli
fadd
jp
jnp
mov
xor
inc
fbstp
jl
pushf
jp
loopne
sub
lock
jae
inc
mov
inc
das
mov
retf
das
je
jae
mov
jae
daa
and
movs
(bad)
ds
mov
popa
je
repnz
(bad)
xor
mov
lock
xor
je
or
js
not
jne
jae
xor
shl
cmps
cmp
xchg
cli
call
lock
shl
pop
je
imul
stc
inc
loopne
jp
in
add
pop
not
mov
lahf
add
pop
je
mov
je
(bad)
call
push
adc
jb
xchg
xchg
loopne
lea
not
mov
div
jae
add
cmp
shl
pop
je
cmp
call
test
mov
and
ss
push
ja
dec
dec
push
ja
push
je
lock
jae
pop
not
mov
cmc
dec
bts
jb
loopne
jb
cmp
stos
jb
std
mov
sbb
(bad)
xor
push
xchg
jno
(bad)
pop
je
je
push
push
(bad)
pop
je
shl
xor
xor
jae
push
jb
sbb
jb
inc
std
stos
pop
(bad)
std
mov
fdiv
xchg
jno
push
mov
shl
xchg
xor
lock
xchg
cmps
jo
jae
xchg
clc
bound
sbb
stc
dec
loopne
push
cli
pop
mov
or
jb
push
mov
sub
shl
pop
sbb
nop
pop
je
ss
and
dec
loopne
dec
jae
je
cli
pop
mov
push
sti
stos
call
mov
ret
mov
pop
je
clc
daa
mov
out
je
cli
pop
mov
push
mov
arpl
xor
mov
xchg
xor
call
cli
(bad)
pop
stos
cli
fdiv
dec
out
mov
jg
out
mov
inc
lea
xchg
xor
icebp
xor
lea
je
cli
mov
sub
mov
cli
cli
neg
int3
cmp
mov
xchg
mov
test
mov
mov
adc
repz
call
push
push
mov
(bad)
push
je
jae
xchg
test
sti
xor
cmp
out
pop
adc
jae
sub
jp
sub
jbe
jp
jb
pop
jl
aaa
sbb
and
(bad)
(bad)
xor
pop
push
jae
div
or
je
jbe
(bad)
xor
pushf
out
test
mov
imul
jecxz
sti
mov
mov
mov
or
daa
mov
shl
hlt
cmp
test
pop
jb
pushf
adc
push
xchg
mov
xchg
mov
test
jo
sub
popa
xchg
xor
sbb
pusha
jo
inc
bound
push
jecxz
repz
jb
pop
push
jnp
dec
inc
jae
icebp
inc
mov
mov
push
jecxz
icebp
push
jecxz
push
jl
add
das
in
xor
xchg
sbb
pop
lahf
push
cli
out
mov
fcomp
jb
pop
push
jbe
pop
push
jb
pop
je
xor
in
xor
pushf
inc
add
je
ss
jo
pop
push
jb
idiv
add
push
jnp
mov
mov
push
je
mov
cmp
jnp
add
jae
je
ss
sbb
test
mov
or
jae
cmc
popf
sub
je
mov
call
das
mov
retf
mov
jo
test
and
movs
pop
ss
stos
inc
(bad)
std
mov
call
xchg
std
ss
xchg
sbb
xchg
icebp
xchg
mov
loopne
sub
jnp
popf
pop
je
cli
(bad)
pop
stos
cli
fcomp
jb
dec
push
jb
mul
add
std
idiv
hlt
push
push
fisttp
je
loopne
icebp
mov
test
imul
jae
icebp
xchg
mov
mov
rol
dec
dec
cmp
ss
mov
scas
stc
imul
ja
xchg
xor
push
xchg
loopne
lea
xchg
dec
lea
je
jae
std
aaa
(bad)
sahf
mov
xor
je
mov
icebp
sub
je
neg
mov
pop
je
clc
daa
mov
cli
mov
(bad)
pop
jnp
imul
aam
jae
shl
in
(bad)
lock
pop
std
iret
mov
mov
(bad)
loopne
rcr
repz
ins
jb
xchg
icebp
int3
mov
mov
rol
dec
dec
or
ss
mov
call
into
mov
jnp
jmp
je
repz
je
imul
jne
sub
call
stos
jmp
js
mov
std
iret
shl
(bad)
cli
mov
mov
test
ror
jb
fwait
dec
jo
pop
jnp
imul
and
mul
mov
pop
je
inc
outs
je
lock
les
mov
jbe
aam
jae
not
(bad)
loopne
lea
dec
push
(bad)
pop
je
jl
mov
jae
int3
aad
pop
je
nop
xchg
icebp
fimul
jne
cmps
std
ss
dec
aam
jae
cmp
and
push
sbb
sbb
xchg
pop
je
into
loop
mov
mov
mov
dec
lea
icebp
(bad)
mov
mov
pop
je
jb
mov
xor
sbb
rcr
call
js
mov
je
pop
cmp
jae
cmps
xchg
xor
leave
(bad)
mov
mov
mov
jb
imul
stos
mov
jne
sbb
std
ss
dec
aam
jae
mov
mov
and
push
sbb
sbb
xchg
pop
je
into
loop
mov
mov
mov
dec
lea
icebp
(bad)
mov
mov
pop
je
sub
jb
jne
sbb
std
ss
dec
aam
jae
test
jae
add
push
sbb
xchg
pop
je
into
loop
mov
mov
mov
dec
lea
icebp
(bad)
mov
mov
pop
je
jb
loopne
xor
sbb
rcr
call
js
mov
je
pop
adc
mov
sbb
sbb
xchg
pop
je
and
or
jae
jle
imul
je
jae
jne
or
ss
dec
aam
jae
add
and
sbb
sbb
xchg
pop
je
into
loop
mov
mov
mov
dec
lea
jne
add
ss
mov
and
lock
mov
je
pop
adc
mov
repnz
or
pop
test
jae
bound
pop
stc
test
loopne
cdq
(bad)
fnstenv
(bad)
pop
je
ror
xor
adc
xor
std
stos
jb
std
mov
call
pop
sbb
mov
stos
loopne
lea
xchg
icebp
scas
mov
mov
clc
daa
mov
jp
jnp
jne
je
(bad)
call
test
mov
push
sti
ss
stos
pop
(bad)
std
mov
bound
jbe
pop
not
cmps
loopne
lea
lods
inc
stos
xchg
mov
(bad)
iret
mov
loopne
lea
cli
fidiv
je
adc
fneni(8087
mov
ret
loopne
lea
je
(bad)
call
div
push
stos
loopne
lea
xchg
inc
lea
and
call
jecxz
ss
call
dec
loopne
dec
jae
je
cli
pop
mov
adc
and
je
test
mov
mov
in
je
jae
xor
cli
fdiv
jg
sbb
call
test
mov
dec
sti
ss
mov
xor
mov
div
mov
loopne
lea
xchg
dec
lea
std
aaa
(bad)
xchg
lods
pop
stos
xchg
mov
push
jecxz
jge
cli
ja
jae
lods
test
loope
sti
mov
icebp
xchg
mov
mov
clc
call
dec
loopne
push
cli
pop
mov
adc
add
pop
je
sub
jb
cld
std
test
fdiv
xlat
and
lea
ror
mov
mov
pop
jb
jb
fstp
(bad)
repz
pop
je
jae
push
pop
jae
std
stos
inc
(bad)
std
mov
stos
cwde
lea
loopne
lea
ja
nop
xor
stc
test
pop
div
jecxz
mov
lahf
loopne
(bad)
cli
call
shl
mov
mov
mov
lahf
paddw
jae
sar
(bad)
(bad)
mov
clc
int
jae
je
(bad)
xchg
leave
call
mov
repnz
mov
call
fneni(8087
mov
mov
mov
sbb
icebp
ror
mov
pop
je
jae
xor
jae
jge
jl
xor
not
loopne
lea
xchg
icebp
fimul
mov
retf
inc
push
jb
call
mov
jecxz
jge
sbb
jae
rcr
mov
mov
div
jae
je
pop
jae
jb
xchg
lods
test
loope
sti
mov
mov
add
mov
fnstsw
mov
(bad)
loopne
div
loopne
lea
xchg
rol
loope
icebp
lahf
paddw
jae
sar
(bad)
outs
mov
clc
int
jae
je
(bad)
xchg
leave
fimul
mov
repnz
dec
arpl
jge
jl
add
xlat
sti
loopne
lea
icebp
cli
mov
mov
sbb
xor
icebp
test
dec
pop
je
jae
xor
ins
push
je
lock
je
test
mov
sbb
mov
xchg
mov
(bad)
loopne
stc
dec
loopne
push
cli
pop
mov
loop
je
test
std
imul
loopne
(bad)
cli
fdiv
jg
pop
je
adc
loope
jp
call
sbb
mov
jae
je
test
mov
(bad)
sbb
mov
mov
sti
into
dec
mov
push
pop
je
into
inc
mov
cld
pop
je
mov
test
jae
push
jbe
stos
fmul
mov
mov
xor
stc
test
pop
div
stos
xchg
mov
(bad)
loop
mov
dec
jae
push
sti
mul
mov
loop
push
inc
mov
mov
mov
mov
mov
fwait
aam
jb
pushf
mov
sbb
stc
test
pop
stc
test
pop
div
stos
xchg
mov
into
xchg
mov
call
inc
loopne
jp
xchg
jae
xchg
sti
test
mov
mov
loope
dec
div
div
mov
div
inc
dec
jl
idiv
inc
dec
jl
div
mov
loope
dec
div
mov
loopne
icebp
into
out
mov
call
stos
push
lods
sti
mov
icebp
call
mov
pushf
leave
mov
pop
adc
mul
xchg
inc
lea
pop
je
nop
xchg
icebp
fimul
leave
cmps
mov
mov
adc
mul
xchg
inc
lea
loopne
lea
xchg
inc
lea
loopne
lea
xchg
inc
lea
pop
je
nop
xchg
icebp
fimul
icebp
xchg
mov
mov
clc
das
mov
imul
loopne
sub
(bad)
mov
cli
cli
push
lea
fwait
shl
ja
bound
pop
adc
jae
je
and
push
jae
je
lock
and
fdiv
xchg
and
fld
clc
bound
sti
ss
dec
xchg
xchg
or
jae
je
ss
xor
pop
sbb
jno
je
outs
jbe
jb
(bad)
sbb
mov
xor
je
lods
hlt
dec
retf
je
test
sti
ss
dec
scas
xchg
or
mov
mov
jb
je
clc
pop
test
clc
jp
mov
(bad)
dec
pop
fdivr
cmc
pop
stos
sub
jae
shl
mov
sub
mov
aaa
cmp
jae
je
mov
xchg
xchg
and
and
sti
mov
mov
mov
hlt
(bad)
xor
push
jb
pop
sbb
push
pop
je
jae
je
pop
jns
jb
fldenv
call
pop
jb
call
std
mov
inc
mov
icebp
lahf
add
and
inc
jl
sub
daa
cli
xlat
pop
mov
pop
stos
ss
shl
ja
xor
jae
std
ins
jae
adc
pushf
push
push
pop
je
lock
pop
je
push
pop
in
jae
mov
lahf
xor
repnz
ja
xchg
jb
out
xor
jae
xor
xor
jnp
jbe
in
xor
mov
call
mov
pop
jnp
nop
cmp
loop
pop
je
jle
jmp
jae
popf
sbb
je
jbe
shl
cs
dec
aas
jnp
mov
not
xchg
jno
in
pop
je
cmp
ins
in
xor
xor
jne
jnp
dec
sbb
xor
xor
jne
jle
cwde
out
xor
jne
dec
xor
dec
xor
jae
popf
arpl
je
jbe
jmp
jae
jb
jae
mov
stos
ss
sbb
pop
fs
je
mov
xor
sub
jae
xchg
sti
ss
std
mov
adc
pop
shl
xchg
xor
pop
lea
xor
inc
mov
pusha
jno
pop
cmc
mov
and
adc
pop
jo
jg
mov
xor
jl
je
mov
sbb
jl
mov
mov
(bad)
xor
pop
je
xchg
loope
lea
pop
jne
je
mov
mov
je
repz
pop
jne
mov
outs
jb
fdiv
out
pop
je
jae
je
(bad)
loope
lea
pop
jbe
je
mov
jmp
xlat
pop
mov
imul
ss
fwait
sti
loope
lea
mov
xor
cli
fdivp
jg
xor
jae
aad
out
pop
je
jbe
jmp
jae
mov
bnd
jmp
jae
popf
lahf
jae
je
lahf
xor
jbe
jmp
jae
scas
jb
pop
aad
jmp
xor
mov
sahf
out
pop
je
jbe
jmp
jae
into
jb
pop
mov
stos
ss
sbb
pop
jbe
fistp
je
retf
retf
jae
xchg
sti
ss
mov
sbb
pop
ja
jecxz
je
inc
fistp
bnd
jmp
jae
int3
adc
je
xchg
xchg
xor
xor
mov
jno
rcr
jnp
arpl
icebp
mov
jne
cmp
loop
pop
je
repz
je
divps
jae
je
dec
loopne
div
adc
pop
xor
inc
loopne
push
(bad)
pop
je
pop
mov
jne
dec
xor
dec
xor
jae
hlt
jg
xor
mov
sub
pop
std
mov
mov
add
xor
xor
xor
mov
pop
je
sbb
shr
xor
mov
cmp
jnp
jbe
aad
jae
mov
jae
cld
aaa
test
ret
mov
jae
ss
dec
mov
pop
je
not
or
jbe
in
jae
jp
jae
adc
adc
aaa
test
hlt
jb
pop
add
pop
in
xor
jno
jecxz
je
dec
pop
in
xor
add
bound
jne
sbb
pop
jbe
dec
lahf
or
pop
jmp
jae
std
mov
cli
out
xor
jae
nop
out
xor
jnp
jbe
jmp
jne
pop
xor
jmp
or
jbe
in
jae
not
(bad)
xor
jae
ins
sti
sbb
jg
xor
stc
pop
cld
jbe
daa
in
xor
jno
jecxz
je
jnp
xor
dec
sbb
xor
push
test
jae
not
(bad)
xor
jae
ins
sti
sbb
jg
xor
stc
pop
cld
jbe
mov
xor
jno
jecxz
je
dec
xor
xor
push
test
xor
std
sbb
jbe
pop
je
mov
lahf
je
fiadd
sub
dec
and
and
outs
cmp
pop
int3
out
cmp
je
xchg
xchg
xor
pop
stos
ss
push
into
xor
cmp
jae
std
mov
or
xor
pushf
sub
pop
je
das
mov
into
xor
pushf
cmp
pop
je
arpl
es
call
std
mov
and
xor
pushf
pop
adc
je
xchg
into
xor
pushf
outs
adc
je
inc
xor
jae
pushf
jg
pop
je
sub
mov
icebp
lahf
ja
and
movs
cmp
adc
std
stos
jb
std
mov
sbb
(bad)
xor
sbb
leave
pop
je
ss
lea
aam
jae
xor
cli
(bad)
jne
cli
fdiv
pop
lahf
pop
stc
aaa
fist
xor
pop
je
push
out
repz
jnp
jb
pushf
adc
(bad)
pop
je
push
iret
je
test
cld
std
aaa
jmp
mov
push
retf
je
ss
jne
jae
mov
scas
push
je
jae
jno
leave
pop
je
dec
jb
pop
les
pop
je
mov
outs
jb
fdiv
(bad)
jb
je
lock
jb
(bad)
enter
int
jae
je
(bad)
xchg
xor
jne
stc
aaa
xchg
dec
mov
xor
jae
stc
aaa
out
dec
push
jb
pop
shl
sbb
push
jb
sbb
je
push
call
aam
mov
push
scas
and
jb
repnz
mov
stos
ss
pop
mov
shl
sbb
jo
jne
add
jae
lahf
sub
je
push
sti
pushf
stos
sub
imul
jae
xor
(bad)
pop
nop
and
push
xchg
hlt
jb
adc
jb
inc
sub
mov
pushf
cwde
outs
mov
mov
and
push
stc
ss
mov
(bad)
daa
(bad)
xchg
xor
pop
test
paddw
mov
sti
es
aaa
fwait
jne
sbb
jne
ss
push
mul
(bad)
pop
and
loopne
pop
jnp
popa
inc
in
pop
je
ss
jl
mov
jb
call
nop
sti
ss
mov
xchg
xchg
and
push
or
pop
je
jbe
shl
loopne
jp
loopne
arpl
sub
mov
cli
cli
neg
clc
push
stc
adc
jb
loopne
les
dec
lea
je
inc
adc
ss
push
dec
lea
je
pop
adc
ss
sbb
je
outs
adc
ss
sbb
lea
je
arpl
ret
sbb
jae
je
not
xor
pop
ja
stc
or
addr16
mov
mov
jnp
ss
les
push
into
xor
jnp
and
jl
jecxz
jae
std
mov
adc
data16
not
mov
cdq
sbb
dec
mov
fs
mov
cmc
ja
lds
bound
push
sti
mov
je
div
push
jge
pop
mov
mov
stc
jbe
jbe
xor
pushf
and
pop
je
lds
sbb
int
xor
and
daa
inc
je
cli
pop
mov
mov
xchg
and
push
mov
cdq
sbb
jo
mov
fwait
sbb
aaa
xchg
ja
out
call
jno
jae
je
push
adc
aaa
mov
repz
iret
pop
je
pop
adc
aaa
mov
popf
inc
mov
mov
jae
dec
dec
ja
and
mov
dec
jne
add
cli
out
call
xor
mov
jbe
sub
mov
div
lds
jb
sbb
dec
int
je
pop
adc
mov
div
dec
sbb
gs
lods
jno
psubw
dec
sbb
cwde
ja
mov
cli
sbb
jae
je
dec
and
push
xchg
mov
repz
push
inc
std
mov
div
dec
sbb
and
hlt
dec
jne
add
out
call
pushf
jb
pop
add
div
push
icebp
mov
xchg
and
push
mov
cdq
sbb
jb
neg
clc
pop
push
sbb
jae
pushf
pushf
jbe
dec
mov
sbb
jae
hlt
dec
dec
push
add
cli
out
repnz
sbb
cmp
hlt
dec
jne
add
neg
jb
inc
sti
mov
je
and
jl
loope
jb
imul
pop
je
push
pop
pushf
shr
pop
je
psubw
pusha
sbb
lock
jo
ja
jne
jae
xor
mov
jo
jae
test
loopne
sub
es
xchg
icebp
lahf
adc
and
loopne
push
(bad)
pop
je
push
pop
lahf
outs
inc
loopne
jne
and
push
push
xor
mov
ja
jae
test
mov
ja
jae
data16
pop
js
fwait
sbb
jb
fld
stos
call
js
sbb
(bad)
xor
jnp
lgs
push
mov
inc
(bad)
std
mov
and
imul
mov
(bad)
pop
je
lds
imul
je
pop
cmp
jae
je
push
pushf
adc
stos
sbb
mov
or
sbb
mov
dec
aaa
(bad)
ins
pushf
cdq
push
xchg
jo
sti
sbb
aaa
add
jae
xor
pop
iret
std
mov
jne
cli
pop
cmp
add
es
bound
jo
xor
test
jb
pop
mov
jb
neg
mov
inc
fwait
(bad)
pop
push
clc
dec
mov
arpl
jno
(bad)
pop
je
mov
dec
push
jb
neg
mov
popf
sti
ja
jne
jae
daa
and
test
jbe
inc
or
xor
pushf
push
(bad)
loopne
icebp
mov
sub
(bad)
mov
cli
cli
int3
cs
pop
je
mov
je
and
call
xchg
lods
mov
je
ret
inc
je
dec
pop
je
rep
jae
idiv
stos
lea
mov
(bad)
pop
je
repz
je
bound
ret
lock
iret
pop
je
pop
add
mov
lds
hlt
dec
jbe
enter
add
inc
jnp
out
fwait
lea
mov
mov
daa
enter
pushf
shr
pop
je
out
stos
lea
xor
sbb
iret
xor
mov
jno
loope
lods
loopne
lea
and
xor
pushf
scas
sub
je
out
stos
lea
xor
repz
lds
pop
mov
lahf
dec
ja
movs
ss
adc
aas
mov
mov
pop
jnp
out
fwait
lea
popa
push
loop
je
jl
out
jbe
pop
jnp
out
fwait
lea
popa
and
pop
je
out
stos
lea
je
into
cld
stos
lea
je
fwait
inc
lea
lods
loopne
lea
shl
xchg
loope
lods
loopne
sti
mov
cld
(bad)
sti
stos
sbb
pop
std
test
pop
fs
dec
pushf
xlat
sub
je
mov
xor
jbe
(bad)
mov
xor
mov
fs
and
xchg
icebp
imul
dec
sub
push
(bad)
pop
je
(bad)
repz
lea
je
mov
je
mov
mov
stos
ror
mov
jnp
imul
(bad)
lahf
stos
lea
mov
cli
lds
jo
dec
mov
inc
movs
not
lock
mov
jo
jae
test
jb
ins
jnp
stos
sbb
pop
std
div
ror
jae
je
repnz
xor
les
mov
pushf
loopne
jb
push
je
not
mov
lahf
lock
mov
mov
stos
ss
stos
lods
lods
mov
pushf
inc
sub
je
xor
jb
test
mov
data16
in
jae
loope
pushf
loopne
icebp
(bad)
jmp
lea
mov
stos
ficomp
jno
jecxz
jle
xchg
clc
addr16
ror
mov
mov
jno
lods
mov
sbb
cmp
jno
icebp
xchg
fwait
lea
ret
lea
shl
lahf
leave
xchg
lods
loopne
jb
inc
sbb
into
pop
je
ror
jb
call
jo
jno
jae
je
out
stos
lea
std
imul
ror
mov
jmp
jmp
mov
jno
icebp
out
loopne
stc
idiv
loope
lods
loopne
jno
xchg
icebp
loop
loopne
sti
div
icebp
cmps
lods
loopne
sti
test
lea
stos
lea
mov
jae
icebp
cmps
lods
loopne
dec
mul
aaa
stc
neg
stos
lea
mov
ret
stos
lea
mov
fcomp
jae
push
sbb
loope
lods
loopne
mov
adc
stc
out
stos
lea
jns
jb
mov
ffreep
mov
pop
stos
ss
test
mov
scas
ror
mov
std
jle
das
loope
jae
ret
lock
or
xor
std
out
lock
jae
pushf
inc
and
je
imul
mov
idiv
jb
lahf
or
adc
dec
jb
je
imul
fwait
lea
je
jae
jnp
push
pop
jne
mul
jne
jae
outs
jae
pop
push
xchg
mov
jae
je
cdq
loopne
ss
std
not
call
fdivrp
stos
lea
mov
dec
pop
add
out
neg
push
add
xor
ja
dec
pop
add
out
neg
push
adc
jno
dec
pop
add
hlt
mov
xor
ret
ror
(bad)
or
test
loopne
not
ror
dec
div
push
stc
ja
jne
jae
neg
ja
icebp
xchg
lods
loopne
cdq
icebp
xchg
sbb
loopne
jae
ss
fs
fs
mov
push
fwait
repz
lods
mov
jne
lds
mov
jno
enter
mov
dec
and
jae
je
pop
lahf
dec
dec
jno
je
jae
push
dec
and
jae
je
addr16
dec
dec
ja
je
jae
jle
dec
and
jae
je
jo
lahf
mov
lods
loopne
jnp
pusha
shl
push
pop
jne
outs
adc
test
loopne
(bad)
(bad)
retf
stos
lea
div
lods
loopne
jb
pop
not
xchg
mov
pushf
loopne
mov
sbb
jbe
xchg
sbb
lock
ror
imul
fwait
lea
mov
pop
je
mov
pop
je
pop
jecxz
(bad)
repz
lds
pop
mov
lahf
dec
ja
movs
ss
adc
pop
mov
mov
es
xchg
icebp
lahf
pop
daa
and
xchg
sub
pop
mov
cmp
sub
jb
jp
sti
ss
aaa
mov
xor
(bad)
sub
iret
xor
int
jae
je
xlat
xchg
xor
cli
dec
mov
push
(bad)
stc
inc
mul
je
jae
sar
push
into
stc
inc
out
ss
sbb
in
shl
dec
js
jge
xchg
xor
cli
dec
mov
ss
mov
loope
cdq
gs
ja
lds
dec
aaa
or
lea
jle
ss
repnz
loope
add
arpl
pop
mov
mov
ja
lds
dec
aaa
or
jae
xor
jb
mov
jae
or
retf
pop
daa
jb
call
mov
les
push
push
mov
pop
je
mov
jbe
pop
mov
test
not
pop
adc
jge
mov
jbe
pop
mov
test
jne
push
adc
xchg
je
mov
sbb
aaa
mov
les
push
push
mov
pop
je
repz
je
push
sbb
aaa
mov
cmc
aaa
mov
ret
call
jle
xor
dec
pop
ja
xor
jb
or
mov
mov
xchg
ja
lds
dec
aaa
or
lea
jle
ss
repnz
jecxz
add
pop
mov
pop
mov
pop
mov
sbb
icebp
jae
je
ja
xor
mov
sub
dec
daa
and
xchg
add
mov
das
sub
pop
adc
ja
jb
pop
and
jae
sahf
and
std
xor
mov
repz
push
out
mov
adc
dec
dec
inc
add
pop
inc
jae
hlt
jb
lock
or
mov
cmps
jl
jae
pushf
jnp
pop
je
and
fistp
jae
int3
mov
xchg
xchg
icebp
mov
add
loopne
jp
call
jae
je
retf
mov
xchg
sti
mul
stos
lea
xchg
lea
je
mov
inc
test
out
mov
fsubr
sub
fsub
sti
xchg
dec
and
loop
xor
jg
jb
call
std
mov
pop
push
jb
push
sbb
push
es
sub
lock
jecxz
repz
sbb
jne
sbb
pop
je
sbb
jb
sbb
jb
pop
hlt
lea
pop
pushf
and
je
mov
mov
jg
add
js
push
pop
cmc
test
push
je
inc
fistp
call
div
fwait
test
jb
xchg
xor
jae
xchg
sti
ss
mov
pop
test
clc
pop
js
ss
lahf
je
pop
mov
ss
mov
or
dec
pushf
jmp
pop
je
fwait
movs
and
inc
mov
sub
(bad)
mov
cli
cli
and
int
pop
mov
jo
pop
push
jb
lahf
je
jae
jo
jae
je
jae
je
mov
call
test
xchg
xor
jne
sbb
je
fwait
dec
es
xchg
xor
fdivp
mov
jb
add
dec
and
loopne
jle
imul
and
push
jb
pop
mov
sbb
je
fwait
xchg
es
dec
pushf
pop
and
je
mov
clc
std
aaa
mov
jae
pop
je
sub
xchg
xchg
and
dec
and
push
bnd
push
jb
lahf
je
jae
jo
jae
je
jae
je
mov
call
std
mov
std
mov
loope
pop
ja
mov
inc
jne
sbb
je
fwait
test
jb
jne
push
jecxz
lea
jnp
arpl
pop
je
fwait
mov
jb
cmps
dec
add
adc
cs
sub
mov
icebp
lahf
(bad)
and
xchg
add
pop
mov
push
jecxz
jl
pop
inc
test
jl
jo
jb
xor
adc
xchg
loopne
jle
pop
xchg
xor
xor
jae
push
(bad)
xchg
mov
mov
and
jae
inc
es
div
pusha
adc
jbe
dec
sbb
xchg
pop
je
outs
dec
je
lock
inc
js
fwait
mov
jae
jo
ja
pop
xor
or
xchg
pop
je
xchg
lock
jecxz
aaa
mov
mov
ss
std
aaa
pop
sub
pushf
cwde
bound
dec
and
cs
inc
jg
xor
clc
pop
mov
ss
aaa
xchg
adc
ss
dec
xchg
pop
je
fisttp
sub
mov
dec
dec
sbb
xchg
pop
je
out
je
lock
call
xchg
xor
mul
jae
sub
jp
pop
sub
(bad)
mov
cli
cli
neg
enter
imul
xchg
cli
pop
test
mov
mov
xchg
push
je
push
repz
push
div
sti
je
push
in
stc
inc
call
sbb
jb
in
shl
adc
jb
lahf
or
push
adc
pop
xchg
push
xchg
xor
test
jo
pop
mov
nop
xchg
xor
ss
les
sbb
aaa
lahf
lahf
or
push
repz
push
loopne
repnz
loopne
pop
cmps
cmps
pop
dec
jae
adc
xchg
xor
test
jo
pop
mov
lea
ret
out
div
repz
pop
fwait
sbb
std
mov
jb
jae
bound
cmc
pop
pop
je
nop
xchg
xor
jg
ret
jb
dec
jl
les
sbb
pop
jnp
es
jnp
mov
xor
mov
test
nop
test
std
aaa
mov
fmul
jae
push
jg
ret
xor
and
test
je
iret
jnp
es
jnp
mov
xor
les
stc
es
jnp
and
pop
mov
ss
sub
(bad)
mov
jecxz
in
jecxz
je
xor
in
pop
nop
xor
jecxz
cmp
xor
in
jecxz
pop
loop
(bad)
in
jnp
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
lods
loop
(bad)
in
test
cmps
je
xor
in
mov
cmps
inc
ss
sub
div
imul
(bad)
in
jnp
in
jecxz
mov
jecxz
in
stos
(bad)
in
jecxz
cwde
loop
(bad)
in
jecxz
in
jecxz
popf
sti
(bad)
mov
jecxz
adc
sub
jno
dec
pop
je
pop
dec
dec
xor
jmp
(bad)
in
clc
push
jo
jecxz
jmp
jnp
in
inc
or
loop
(bad)
div
dec
aam
loop
(bad)
(bad)
in
lock
jecxz
test
xlat
in
jecxz
adc
loop
test
mov
je
xor
sbb
xor
cmp
xor
movs
xchg
xor
inc
ss
sub
adc
(bad)
in
jecxz
je
xor
in
ja
in
jecxz
in
jecxz
in
mov
in
jecxz
es
(bad)
in
pop
nop
xor
jecxz
lods
loop
(bad)
in
mov
in
jecxz
cmps
loop
(bad)
in
jecxz
in
jecxz
mov
test
in
jecxz
in
jecxz
in
jecxz
cmp
xor
in
jecxz
mov
jecxz
in
or
in
mov
in
jecxz
es
(bad)
in
mov
xchg
lods
loop
(bad)
in
mov
in
jecxz
cmps
loop
(bad)
in
jecxz
in
jecxz
mov
test
in
jecxz
in
jecxz
in
jecxz
inc
ss
sub
inc
inc
(bad)
in
jecxz
mov
jecxz
in
or
in
call
daa
cli
cli
neg
clc
inc
jl
adc
sti
adc
icebp
or
sbb
inc
jmp
xor
push
repz
aaa
xchg
xchg
xor
jae
popf
xchg
jae
je
stos
push
test
fwait
push
or
dec
(bad)
stc
ss
mov
(bad)
daa
(bad)
lahf
or
ss
cdq
pop
test
or
jae
je
lds
sti
mov
movs
jmp
out
mov
pop
xchg
jmp
out
mov
dec
mov
ja
dec
add
or
add
std
stos
jb
xor
lds
jnp
ds
mov
ja
dec
nop
jae
je
arpl
jnp
arpl
ret
ss
dec
jae
adc
xchg
xor
jnp
in
jae
stc
aaa
or
jge
pop
(bad)
and
(bad)
jne
and
and
inc
push
je
sbb
stc
aaa
or
call
push
stc
ss
mov
(bad)
daa
(bad)
pushf
mov
adc
test
jle
es
icebp
or
sub
mov
pushf
cwde
dec
and
int3
test
jle
out
adc
jp
jae
into
jg
sbb
and
fiadd
mov
lea
aad
mov
es
add
icebp
dec
fcmovne
xor
add
fistp
push
jmp
mov
mov
mov
std
mov
fistp
pop
sbb
or
addr16
iret
xor
pop
dec
mov
xor
mov
and
mov
jbe
inc
and
iret
xor
std
lods
jo
mov
xor
and
retf
push
jb
call
std
mov
adc
jb
(bad)
ja
mov
ss
pop
pushf
and
pushf
mov
rcl
leave
xor
xor
jo
mov
iretw
leave
xor
fs
sbb
sti
mov
xor
xor
ja
mov
pop
mov
stos
mov
std
aaa
mov
arpl
sbb
sti
mov
lods
jno
out
scas
mov
div
mov
aad
into
pop
je
jbe
leave
xor
xor
ds
je
ss
pushf
xchg
pop
je
push
iret
jnp
mov
mov
arpl
mov
xor
scas
aas
jae
std
aaa
mov
pop
dec
mov
fnstsw
mov
enter
mov
push
ins
jae
push
xor
cmps
leave
xor
lods
jno
(bad)
xor
pushf
add
pop
je
mov
aad
into
pop
je
ss
push
cli
pop
mov
jno
jmp
addr16
jb
maskmovq
div
xchg
aad
into
pop
je
jbe
leave
xor
xor
into
pop
je
ss
lahf
gs
out
jne
cli
fscale
stos
jo
test
retw
leave
xor
fs
ss
jo
cmps
mov
lods
iret
xor
dec
aaa
sub
lods
sbb
mov
pop
je
lds
mov
xchg
mov
movs
iret
xor
std
jle
xchg
stos
jno
fcmovne
xor
ret
into
xchg
stc
mov
pop
(bad)
jg
mov
dec
sti
sub
sti
xlat
std
mov
bound
pop
fwait
pop
jnp
mul
stos
sbb
mov
pop
je
fwait
mov
sbb
push
jb
sbb
sbb
jae
xor
push
pop
pushf
(bad)
cmp
je
ss
push
jb
pop
pushf
and
nop
call
int3
adc
mov
xchg
imul
cmp
daa
call
xor
sub
xchg
xchg
repz
or
jae
and
and
je
jbe
shl
mov
jb
xchg
imul
mov
cs
into
mov
cli
fiadd
mov
add
cli
iret
sub
xor
in
out
loope
lea
xor
lds
enter
bound
xchg
mov
cdq
fimul
pop
mov
(bad)
mov
xchg
loopne
mov
mov
stc
pop
mov
imul
cmp
je
mov
mov
push
adc
lea
icebp
je
loopne
inc
cli
out
adc
std
mov
call
jecxz
ss
jmp
mov
mov
fwait
aam
jb
jne
sbb
jbe
jae
je
jae
je
(bad)
call
sbb
jb
call
pop
out
std
mov
push
retf
ss
mul
cmp
push
jb
call
jb
je
sbb
leave
xor
rol
push
je
mov
pushf
sub
je
jbe
shl
dec
sbb
xchg
pop
je
mul
mov
cmp
je
xor
sti
mov
icebp
mov
ret
xchg
xor
icebp
lea
pop
je
repz
jb
pop
mov
stos
ss
fcom
xchg
xor
stc
test
pushf
push
jae
je
sbb
xor
or
jae
hlt
call
and
test
jb
inc
sub
mov
dec
and
and
add
test
ss
fwait
lds
pop
je
jbe
shl
sahf
mov
xor
jecxz
push
out
push
jecxz
sbb
dec
jb
pop
push
jb
pop
push
jb
push
lea
pop
pushf
mov
pop
je
mov
mov
mov
test
mov
push
je
mov
mov
push
push
jb
push
lea
jecxz
mov
push
jecxz
sar
pop
je
sub
cli
and
xor
mov
cli
fmul
xor
and
add
push
lea
adc
jb
pop
div
es
xchg
and
push
sahf
fwait
pop
pop
pop
je
ja
jo
or
jg
add
sbb
pushf
mov
sub
mov
cli
cli
and
jnp
aas
cmc
test
dec
je
(bad)
pop
mov
(bad)
pop
mov
sbb
sbb
jae
je
jae
je
jae
add
push
call
add
fistp
lea
or
lea
jnp
cmp
jge
pop
adc
cmp
inc
mov
push
std
mov
std
mov
push
call
xor
mov
pushf
cwde
bound
xchg
xor
xchg
xor
cmp
sub
mov
jne
std
mov
std
mov
pop
mov
sbb
je
jae
je
push
adc
cmp
jge
pop
sbb
cwde
and
aaa
imul
jae
je
push
jnp
cmp
jge
pop
adc
cmp
inc
mov
or
cmp
jnp
ss
lahf
jnp
out
xchg
cli
pop
test
mov
sub
and
and
sbb
mov
dec
jecxz
xor
add
mov
jb
dec
pushf
cmp
je
ss
test
jecxz
xor
xor
xor
xor
jae
mov
jae
push
jb
pop
push
jb
jle
xor
jbe
jae
xlat
mov
(bad)
jae
mov
ja
mov
gs
mov
je
cli
pop
mov
push
pop
je
sub
ja
adc
out
(bad)
pop
push
push
sbb
addr16
ss
dec
jl
es
xchg
and
dec
and
push
pop
iret
jns
or
das
jb
xchg
or
daa
hlt
dec
dec
adc
inc
clc
pop
js
mov
mov
cli
in
jne
and
add
sbb
jae
mov
cli
out
aaa
jg
and
sbb
cli
out
mov
hlt
or
sti
mov
hlt
dec
dec
pop
add
pop
cmp
dec
dec
pop
add
cmp
dec
sbb
xchg
xor
pop
je
stos
call
std
mov
pop
js
cwde
pop
std
xor
and
xchg
mov
stos
push
lods
sti
mov
mov
ins
xchg
test
adc
xor
je
stos
call
std
mov
pop
js
mov
jns
mov
jge
stos
call
std
mov
inc
das
mov
lock
and
fdiv
sub
adc
repnz
test
pop
je
fwait
lock
xchg
xor
lock
pop
pushf
outs
aaa
pop
je
ss
aaa
adc
add
fs
jo
lock
add
jge
sbb
sub
inc
pop
dec
pop
mov
adc
pop
mov
hlt
cmp
les
jge
and
mov
in
test
jle
sti
mov
into
cmp
xchg
ficomp
sti
movs
pushf
mov
and
or
xor
and
lock
mov
jge
pop
mov
out
(bad)
pop
sbb
fnsave
cli
dec
test
es
xchg
retf
jbe
fwait
adc
jb
dec
and
fs
lods
jae
xchg
mov
(bad)
jmp
mov
mov
mov
mov
mov
call
jl
mov
mov
cmp
je
test
inc
mov
dec
jns
pop
test
jae
jns
fwait
sub
jb
cs
push
adc
jb
push
call
lods
lea
pop
je
(bad)
out
mov
mov
into
(bad)
mov
mov
mov
mov
into
dec
pop
jo
jae
push
xor
xchg
icebp
mov
je
test
std
mul
fmul
jae
pop
pushf
dec
xor
je
add
je
test
std
idiv
fdivr
aaa
jnp
icebp
mov
mov
mov
jae
push
sti
mov
jl
out
mov
fwait
int3
mov
jp
dec
xchg
xor
add
sbb
jb
pushf
mov
sbb
xor
ror
pop
je
lock
pop
je
retf
jb
xchg
punpcklbw
nop
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
xchg
xor
cmps
jle
jae
in
test
cmp
or
pop
je
adc
je
jmp
lea
(bad)
ss
test
mov
xchg
lods
pop
stos
xchg
mov
and
jb
adc
or
ja
nop
xor
mov
(bad)
loopne
lea
pushf
mov
sbb
xchg
xor
ror
pop
je
lock
pop
je
retf
jb
xchg
punpcklbw
nop
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
in
xor
cmps
jle
jae
in
test
cmp
xchg
aaa
pop
je
adc
je
jmp
lea
(bad)
ss
imul
mov
loopne
push
sbb
icebp
mov
xchg
xor
pushf
mov
pop
je
mov
std
stos
inc
(bad)
std
mov
test
jb
cmps
jle
jae
in
test
or
adc
mov
pop
div
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
jl
jb
cmps
jle
jae
in
test
or
adc
mov
pop
div
xor
mov
(bad)
loopne
lea
pushf
mov
repnz
jae
pushf
push
aaa
pop
je
jns
je
jmp
push
fwait
or
jb
cmps
pop
jb
pop
in
test
loopne
lea
dec
xchg
xor
and
lock
pop
je
retf
jb
xchg
xchg
xor
stc
iret
lods
loopne
lea
call
loopne
lea
loopne
(bad)
clc
call
mov
mul
mov
test
js
pop
je
test
test
retf
jb
xchg
mov
xchg
xor
pushf
out
xor
je
mov
int3
cmps
or
je
nop
xchg
icebp
mov
loop
sti
mov
sbb
jae
int
jae
je
test
test
mov
pushf
push
pop
je
mov
pushf
cmp
pop
je
jns
je
jmp
popa
sbb
xchg
xor
ror
pop
je
lock
pop
je
retf
jb
xchg
punpcklbw
nop
xor
mov
(bad)
loopne
lea
pushf
mov
repnz
or
jae
sbb
xchg
pop
je
push
or
test
pop
and
(bad)
pop
je
lock
scas
pop
je
retf
jb
xchg
punpcklbw
xchg
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
test
jb
cmps
jle
jae
in
test
or
adc
mov
pop
div
jae
int
jae
je
test
test
retf
jb
xchg
mov
xchg
xor
pushf
rdtsc
pop
je
mov
test
pop
push
je
lock
je
ss
je
mov
je
mov
je
imul
test
std
test
fdiv
xlat
iret
loopne
lea
add
neg
mov
mov
mov
out
mov
mov
mov
mov
and
mov
in
test
xchg
mov
imul
cwde
mov
call
std
out
loopne
(bad)
cli
enter
dec
stc
iret
jae
mov
xor
stc
iret
jae
mov
jae
div
mov
mov
into
mov
je
jae
lock
(bad)
jmp
mov
je
mov
and
mul
mov
pop
je
fwait
mov
mov
repnz
inc
push
jae
pushf
repz
je
jns
je
jmp
popa
sbb
xor
ror
pop
je
lock
pop
je
retf
jb
xchg
punpcklbw
xchg
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
sub
jb
pop
in
test
or
adc
mov
pop
div
mov
mov
jae
je
imul
mov
loope
dec
neg
mov
(bad)
loopne
sti
div
mov
sbb
je
repnz
je
clc
pop
push
mov
hlt
iret
jae
mov
jb
je
and
jb
xchg
xor
pop
mov
mov
jne
jae
icebp
mov
mov
sbb
xor
icebp
xchg
xor
jae
mov
(bad)
xchg
or
pop
hlt
dec
jb
add
into
fisttp
jae
xchg
mov
neg
je
mov
(bad)
mov
xchg
mov
jae
stc
test
loopne
mov
xchg
icebp
or
mov
test
(bad)
loopne
lea
ja
xchg
xor
and
inc
pop
je
lock
pop
je
retf
jb
xchg
punpcklbw
xchg
xor
mov
(bad)
loopne
lea
pushf
mov
repnz
pop
pushf
fwait
dec
pop
je
jns
je
jmp
popa
sbb
xchg
xor
ror
pop
je
lock
and
adc
or
ja
nop
xor
mov
(bad)
loopne
lea
pushf
mov
mov
pushf
and
je
imul
mov
xchg
icebp
into
mov
mov
mov
icebp
jb
loopne
and
and
lock
mul
mov
xchg
mov
xor
mov
(bad)
loopne
lea
pushf
mov
repnz
adc
pop
pushf
aaa
dec
pop
je
jns
je
jmp
popa
sbb
xor
ror
and
fstp
and
adc
or
ja
xchg
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
in
jb
cmps
jle
jae
in
test
or
adc
mov
pop
div
xor
mov
(bad)
loopne
lea
pushf
mov
cli
(bad)
pop
stos
cli
fcomp
jns
je
jmp
push
fwait
mov
jb
cmps
pop
jb
pop
in
test
loopne
lea
dec
xchg
xor
and
lock
and
adc
or
ja
xchg
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
jl
jb
cmps
jle
jae
in
test
or
mov
(bad)
jecxz
mov
div
jae
int
jae
je
test
test
mov
pushf
das
dec
pop
je
mov
cmc
cdq
push
je
fwait
or
jb
cmps
jle
jae
in
test
cmp
jae
pop
je
adc
je
jmp
lea
(bad)
ss
test
xchg
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
aam
jb
cmps
jle
jae
in
test
or
adc
mov
pop
div
jae
adc
loopne
mov
add
mov
mov
lock
and
adc
or
ja
nop
xor
mov
(bad)
loopne
lea
pushf
mov
sbb
ror
and
fstp
xor
cld
std
test
fcomp
jns
je
jmp
popa
sbb
xchg
xor
ror
and
fstp
ror
(bad)
loopne
lea
ja
xchg
xor
and
outs
and
(bad)
and
adc
or
ja
nop
xor
mov
(bad)
loopne
lea
pushf
mov
sbb
xchg
xor
ror
and
fstp
test
jae
retf
pop
int
jae
je
test
test
mov
pushf
scas
dec
pop
je
mov
pushf
jmp
pop
je
fwait
sbb
jb
call
mov
push
pop
je
clc
mov
and
fwait
shl
and
cli
dec
jae
div
jae
int
jae
je
test
test
mov
pushf
dec
je
mov
int3
js
pop
je
nop
xchg
icebp
retf
mov
mov
stos
lods
xor
mov
(bad)
loopne
lea
pushf
mov
fwait
cmp
jae
jle
jae
in
test
or
adc
mov
pop
div
jae
int
jae
je
test
test
retf
jb
xchg
mov
xchg
xor
pushf
lahf
dec
pop
je
mov
sbb
lods
pop
je
(bad)
jecxz
mov
div
jae
jbe
jae
je
jae
je
mov
call
pushf
lea
(bad)
std
mov
stos
mov
dec
pop
je
jae
leave
xchg
ror
test
(bad)
fwait
loopne
lea
loopne
mov
je
lock
dec
and
adc
xchg
icebp
sahf
mov
mov
es
xchg
repz
sbb
jae
retf
pop
or
cs
mov
xor
mov
mov
mov
ret
dec
sbb
lods
pop
je
mul
mov
dec
pop
je
jae
repnz
xor
stc
test
pushf
cmps
and
icebp
mov
hlt
aaa
mov
(bad)
aaa
mov
jno
int
je
dec
shl
sbb
xor
jne
jae
pushf
ret
and
sbb
lds
lods
xor
sbb
jae
hlt
call
push
sti
mov
mov
mov
mov
repz
xor
dec
and
pop
xchg
mov
mov
mov
mov
shr
mov
mov
pop
jl
dec
push
jnp
mov
xchg
jae
call
jnp
jo
jb
je
cli
call
test
std
test
fadd
clc
pop
jl
mov
mov
and
pop
jmp
jnp
and
pop
std
out
loop
lea
pop
std
test
stos
aam
mov
pushf
jmp
pop
je
es
(bad)
inc
loop
(bad)
dec
ja
dec
jbe
xor
mov
mov
mov
mov
pushf
pop
inc
pop
je
imul
lea
mov
cli
call
jmp
mov
jae
and
xchg
add
mov
stc
es
(bad)
call
loop
(bad)
dec
jae
dec
jbe
xor
mov
mov
sub
ja
stos
xor
pushf
inc
inc
pop
je
test
jmp
arpl
push
mov
pushf
pop
dec
pop
je
mov
test
jbe
pop
je
imul
sbb
lods
pop
je
mov
je
repz
mov
push
mov
pusha
dec
pushf
imul
inc
mov
adc
pop
cmc
popf
mov
sbb
lea
mov
ja
je
(bad)
call
imul
pushf
mov
(bad)
mov
loop
loopne
(bad)
(bad)
xchg
mov
mov
mov
mov
rcl
loopne
and
call
pop
in
mov
test
pop
jle
pushf
xlat
inc
pop
je
mov
xchg
pop
sbb
lods
pop
je
mul
mov
dec
pop
je
pushf
or
jae
icebp
(bad)
mov
mov
(bad)
call
mov
je
fwait
scas
fwait
lea
mov
test
xor
jae
icebp
retf
mov
fwait
push
mov
bnd
mov
retf
loope
lea
pop
je
mov
nop
mov
adc
mov
je
into
fwait
mov
adc
loopne
jae
xchg
mov
xchg
mov
mul
pushf
mov
(bad)
call
mul
push
jb
pop
push
push
sbb
push
jb
pop
stc
test
sub
fistp
xchg
pop
je
mov
pushf
imul
retf
je
test
std
not
loop
(bad)
cli
fmul
lea
or
or
loope
lea
div
jae
div
mov
mov
xor
mov
std
mov
call
push
shl
fwait
fs
jb
xchg
mov
mov
outs
sbb
fadd
jae
icebp
sbb
call
add
jge
pop
dec
sbb
or
je
xlat
sub
mov
je
jns
je
jae
pushf
jecxz
pop
je
ja
je
(bad)
call
fwait
adc
jae
jne
sbb
ss
call
out
mov
mov
je
push
add
xlat
out
loop
lea
(bad)
lea
je
cwde
sbb
xlat
out
loop
lea
icebp
(bad)
mov
mov
fwait
movs
inc
jb
sahf
mov
adc
je
fwait
enter
jne
(bad)
(bad)
mov
pop
inc
jae
mov
xlat
loop
lea
xchg
icebp
out
mov
mov
xchg
xchg
icebp
sbb
inc
sub
mov
xchg
xchg
icebp
lahf
add
and
xchg
sub
inc
cmp
xchg
mov
xchg
mov
push
pop
pushf
dec
inc
pop
je
mov
std
daa
lea
je
push
adc
mov
std
daa
(bad)
loopne
bound
xchg
mov
cli
dec
and
adc
jb
xchg
mov
cli
dec
cmp
mov
dec
mov
adc
daa
test
movs
jge
dec
cmp
subps
sbb
pushf
push
inc
pop
je
mov
fidiv
pop
adc
cs
push
add
out
std
aaa
lahf
xchg
jb
ja
xor
xchg
test
and
push
jae
div
cli
out
div
inc
pop
je
pushf
cmp
jae
add
test
mov
pop
jb
xor
test
jnp
ss
ss
jnp
es
arpl
je
and
ret
aaa
lea
ret
daa
(bad)
push
movs
jge
dec
cmp
emms
and
cmps
mov
cli
pop
pushf
sti
mov
xor
sbb
xor
je
jae
es
jae
std
mov
loopne
call
mov
and
pop
std
mov
mov
fwait
mov
jb
xchg
xor
mov
std
xchg
retf
push
imul
mov
and
xchg
sub
mov
mov
xchg
mov
xchg
xchg
icebp
retf
mov
mov
icebp
into
xchg
loopne
xor
push
mov
stc
div
ja
lods
xor
pushf
outs
inc
pop
je
mov
mov
test
je
mov
pushf
fwait
inc
pop
je
mov
jge
push
push
mov
mov
push
call
pop
mov
fadd
xor
adc
mul
imul
icebp
into
xchg
loopne
and
call
fwait
rcr
jae
mov
inc
xchg
mov
xchg
mov
mov
pushf
out
pop
je
mov
jge
push
push
mov
mov
push
call
sar
pop
inc
mov
hlt
js
fldcw
mov
jne
mov
xchg
mov
sub
xchg
xchg
retf
je
fwait
hlt
pop
jb
dec
and
ret
dec
repnz
loopne
jae
std
xor
mov
ja
jae
pop
pushf
ret
inc
pop
je
stos
pushf
mov
jae
push
sti
mov
jl
test
js
lea
jne
cli
fstp
xchg
pop
je
fwait
mov
jae
mov
cli
out
adc
push
xchg
mov
xchg
pop
je
neg
xchg
lea
je
mov
pushf
pop
inc
pop
je
jns
je
jmp
sbb
xchg
xor
icebp
jb
loopne
and
pushf
mov
fwait
sbb
jae
jle
jae
in
test
ss
xchg
je
adc
je
jmp
xchg
mov
and
sub
ss
mov
and
lock
sub
jb
adc
or
ja
nop
xor
stc
div
mov
jae
div
dec
pop
je
inc
(bad)
ss
call
mov
fstp
sub
jb
adc
or
ja
nop
xor
stc
div
mov
jae
div
jae
int
jae
je
test
test
retf
jb
xchg
jb
loopne
and
jae
leave
jb
loopne
and
jae
mov
mov
sbb
ss
call
push
(bad)
ss
call
pop
sub
jb
(bad)
xor
sti
mov
jbe
jae
int
jae
je
test
test
(bad)
call
push
sub
jb
fstp
(bad)
ss
call
jg
je
lock
sub
je
jae
or
ja
nop
xor
stc
div
mov
jae
div
xor
stc
div
mov
jae
div
adc
jb
adc
or
test
adc
je
test
es
pop
xchg
lea
je
into
pop
xchg
lea
je
mov
sbb
xchg
pop
je
neg
xchg
lea
je
mov
pushf
dec
inc
pop
je
jns
je
jmp
sbb
xchg
xor
icebp
jb
loopne
and
pushf
mov
retf
(bad)
jb
call
stos
lea
ss
call
inc
sub
jl
sub
jb
adc
or
ja
nop
xor
stc
div
mov
jae
div
xor
stc
div
mov
jae
div
adc
je
ret
cs
retf
jb
xchg
packuswb
nop
xor
stc
div
mov
jae
div
(bad)
call
pop
shl
(bad)
call
jmp
je
lock
cs
retf
jb
xchg
packuswb
nop
xor
stc
div
mov
jae
div
xor
stc
div
mov
jae
div
jae
int
jae
je
test
test
(bad)
call
and
je
lock
push
je
test
std
neg
fstp
fwait
sbb
jb
call
mov
push
pop
je
(bad)
mov
and
shl
(bad)
mov
and
lock
das
je
retf
jb
xchg
packuswb
nop
xor
stc
div
mov
jae
div
xor
stc
div
mov
jae
div
xchg
xchg
icebp
call
repnz
jae
int
jae
je
test
test
(bad)
call
xlat
das
je
lock
das
je
retf
jb
xchg
cvtps2pd
cmp
pop
int
jae
je
test
es
pop
xchg
lea
je
into
pop
xchg
lea
je
mov
sbb
lods
pop
je
neg
xchg
lea
je
mov
push
jb
pop
push
jo
pop
push
jb
pop
je
xor
pop
pop
je
mul
stos
lea
je
neg
xchg
lea
je
jae
leave
mov
leave
jb
loopne
and
mov
pushf
pop
pop
pop
je
(bad)
jecxz
lea
inc
mov
hlt
jb
test
pusha
jb
inc
sub
mov
sahf
cwde
loop
pop
je
and
jl
repz
push
jb
pushf
shr
mov
mov
jmp
je
clc
inc
jl
fwait
lock
jb
xchg
and
dec
jbe
cli
mov
(bad)
mov
std
mov
mov
pop
pop
je
fwait
pushf
pop
jb
idiv
mov
int3
jmp
pop
je
xchg
xchg
icebp
repnz
mov
mov
je
xor
pushf
iret
pop
pop
je
idiv
mov
mov
mov
mov
sbb
icebp
(bad)
mov
mov
fwait
in
jb
ja
jae
pop
stc
test
ja
lods
xor
sbb
lods
pop
je
jno
je
fwait
push
lea
jnp
mov
sbb
jae
icebp
mov
call
pop
xor
inc
mov
fmul
lea
xchg
icebp
(bad)
mov
mov
fwait
adc
lea
jnp
in
je
sbb
icebp
mov
cld
pop
jb
xchg
icebp
(bad)
mov
mov
(bad)
call
mov
xchg
xchg
lea
mov
test
jb
jne
sbb
icebp
retf
mov
fwait
push
pop
jb
pushf
mov
retf
xchg
call
(bad)
lea
mov
jae
icebp
xchg
(bad)
loopne
jae
pop
je
into
xchg
push
adc
loopne
jae
cmps
adc
pop
adc
loopne
mov
call
call
xchg
icebp
(bad)
mov
mov
(bad)
call
jae
je
push
jne
sbb
je
mul
mov
fwait
cmp
jae
mov
test
mov
cli
out
mov
fmul
lea
or
or
loope
lea
imul
mov
fyl2x
add
cwde
sub
mov
mov
(bad)
loope
lea
ja
lods
xor
pushf
aas
pop
pop
je
mov
mov
push
pop
pushf
out
pop
je
imul
lea
mov
jp
jnp
imul
jb
pop
test
test
jbe
pop
je
test
call
movs
and
pop
push
jae
jne
xor
icebp
loop
loopne
and
pushf
mov
dec
loopne
jb
adc
cmps
jae
je
not
daa
call
jl
mov
lock
jae
je
jae
shl
loopne
push
xchg
(bad)
lea
je
test
(bad)
out
mov
mov
je
test
std
test
fmul
lea
ja
lods
xor
pushf
inc
pop
pop
je
sbb
xor
pushf
arpl
je
mov
jge
push
ss
lods
pop
je
imul
(bad)
mov
neg
jb
daa
(bad)
(bad)
mov
movs
mov
div
test
inc
and
(bad)
out
mov
mov
cmp
push
ss
mov
call
jb
pop
std
mov
std
mov
call
scas
ss
sbb
mov
xlat
loop
lea
xchg
mov
mov
mov
mov
rcl
loopne
call
call
sub
(bad)
mov
jae
std
xchg
lock
mov
cmc
mov
push
je
and
push
pop
jae
std
aaa
mov
add
inc
pop
jb
xchg
and
and
call
std
mov
std
mov
dec
pushf
inc
push
pop
je
fwait
and
jb
loopne
jle
dec
jb
and
push
push
jae
daa
call
pop
mov
fdivr
aaa
(bad)
dec
push
jb
ja
sub
sbb
pushf
push
pop
pop
je
mov
mov
int3
pop
jb
cmps
bound
pop
adc
xchg
xor
push
pop
je
fwait
pusha
push
jb
xchg
xor
test
std
aaa
adc
mov
xchg
xchg
retf
je
fwait
test
jae
and
movs
push
sbb
out
mov
fcomp
ja
push
call
jge
push
sbb
cwde
pop
std
mov
std
mov
loopne
jb
xchg
icebp
jae
loopne
and
pop
push
jae
push
push
push
test
ret
loopne
icebp
mov
dec
lea
test
fwait
movs
pop
jb
xchg
mov
mov
mov
std
xchg
lock
and
or
xor
ss
jb
ja
mov
std
mov
test
mov
ja
lods
xor
stc
aaa
popf
dec
pushf
cmps
pop
pop
je
ss
and
jae
aaa
jae
pop
mov
mov
pop
jb
adc
aaa
lea
scas
xor
stc
aaa
popf
dec
pushf
fistp
je
mov
stc
aaa
popf
dec
push
jb
pop
jne
jae
inc
pop
in
pop
je
ja
je
bnd
adc
ss
mov
sti
sub
xchg
dec
and
and
int3
jo
dec
std
add
sbb
jbe
jae
je
jbe
jne
jae
je
jae
in
jae
push
jb
pop
push
je
setl
pop
pop
je
mov
jne
sbb
mov
mov
pop
jb
jne
and
fwait
xor
jae
test
cli
fstp
jae
jne
lea
aad
jae
push
pop
jae
push
jae
jne
lea
jmp
jae
push
pop
jae
push
jae
jne
lea
loope
jae
cs
jae
push
jae
jne
lea
jmp
jae
ds
jae
cmc
pushf
pop
jae
jb
push
and
inc
loopne
push
in
pop
je
inc
aaa
je
sbb
and
inc
loopne
loop
pop
je
push
aaa
je
sbb
and
inc
loopne
push
rcr
call
in
jae
push
jae
jne
lea
in
xor
mov
pop
push
jae
jne
lea
jmp
push
jae
push
jae
jne
lea
xlat
xor
stos
push
jae
push
jae
jne
lea
xlat
xor
mov
sub
fsub
int
imul
fcomp
mov
pushf
das
push
pop
je
push
mov
sbb
repz
mov
jae
es
jae
push
mov
pushf
dec
push
pop
je
dec
xor
jae
mov
jae
pop
push
jae
push
mov
pushf
addr16
pop
je
push
xor
jae
mov
jae
jle
jae
std
mov
std
mov
jecxz
inc
outs
mov
fwait
hlt
push
jb
mov
sbb
hlt
pop
je
(bad)
loopne
outs
out
je
xchg
cmp
jecxz
inc
pop
xor
jae
or
xor
sbb
hlt
pop
je
(bad)
loopne
pop
in
pop
je
iret
cmp
jecxz
inc
push
xor
jae
pop
jmp
pop
sbb
hlt
pop
je
(bad)
loopne
push
in
pop
je
jmp
je
sbb
mov
mov
push
jb
mov
sbb
hlt
pop
je
(bad)
loopne
not
pop
je
pop
cmp
fsub
sti
xchg
pushf
cwde
push
dec
retf
leave
adc
cs
mov
sub
mov
std
mov
repz
jmp
loopne
icebp
mov
xlat
jp
pop
je
jae
pushf
out
pop
je
test
and
pushf
sti
push
pop
je
jae
inc
inc
in
pop
je
jae
push
(bad)
xor
xchg
xchg
xor
sbb
push
jb
pop
je
and
xchg
xor
sbb
scas
pop
je
jae
je
fwait
inc
push
jb
mov
push
jb
sub
xor
push
jb
jne
stc
ss
aaa
sbb
addr16
jb
dec
sbb
scas
pop
je
test
pop
pushf
push
push
pop
je
ja
xor
push
jae
push
jb
sub
xor
push
jb
sub
shl
pop
sbb
jb
je
ss
aaa
sbb
addr16
jb
dec
sbb
xchg
pop
je
test
pop
pushf
xchg
push
pop
je
adc
push
jo
pop
push
jb
sbb
jae
pop
push
jb
pop
sbb
jno
je
jae
je
jnp
pusha
call
push
jae
jne
lea
jmp
jae
not
pop
push
jb
sub
xor
push
jb
sub
shl
pop
push
bound
sub
jae
adc
pop
ja
jb
dec
sbb
scas
pop
je
test
pop
pushf
pop
push
pop
je
movsx
jb
pop
mov
xor
aaa
mov
sbb
jno
je
or
sbb
je
sbb
test
scas
xor
push
jb
and
jae
aam
xor
std
mov
mov
jae
inc
inc
in
pop
je
jae
inc
rcr
sbb
movs
jae
pop
sbb
jae
je
pop
ja
jb
dec
sbb
scas
pop
je
test
pop
pushf
(bad)
push
pop
je
jg
xor
inc
inc
xor
aaa
mov
sbb
jb
je
int
je
sbb
sbb
jae
and
std
ret
ss
lds
call
jmp
jae
je
inc
sub
xor
je
inc
jg
xor
adc
pop
ja
jb
pop
push
sbb
repnz
xchg
xor
sbb
scas
pop
je
jae
cli
push
jae
xlat
call
adc
ja
scas
xor
push
jb
pop
jne
jae
pushf
aas
push
pop
je
push
ret
ss
pop
sbb
jb
je
inc
imul
xor
inc
push
jae
push
jb
sub
xor
push
jb
sub
xor
sbb
jb
je
inc
ja
jb
pop
push
or
sbb
repnz
xchg
xor
sbb
scas
pop
je
jae
push
push
jae
xlat
repnz
sbb
inc
inc
in
pop
je
jae
inc
adc
pop
je
pop
push
je
sbb
sbb
jae
je
fstp
je
sbb
repnz
xchg
xor
sbb
scas
pop
je
jae
sahf
push
jae
xlat
pop
in
pop
je
dec
in
lea
pop
mov
xor
aaa
mov
push
dec
sbb
je
jae
sbb
jae
sbb
jae
and
sbb
ss
lds
call
xlat
xor
mov
cli
fcomp
jb
sub
xor
push
jb
sub
shl
pop
push
bound
sahf
je
jae
mov
pop
sbb
jb
je
jae
je
sbb
jae
scas
scas
xor
push
jb
js
jb
mov
push
jb
sub
xor
push
jb
sub
shl
pop
push
bound
js
push
pop
je
mov
je
sbb
je
and
scas
xor
sbb
scas
pop
je
jae
pop
push
jae
xlat
inc
jmp
inc
in
pop
je
jae
inc
rcr
sbb
mov
pop
sbb
jb
je
pop
ja
jb
dec
sbb
scas
pop
je
test
pop
pushf
xchg
je
add
inc
inc
xor
aaa
mov
push
and
push
jne
jae
aam
jae
sbb
jae
and
jne
ss
lds
call
xlat
xor
je
inc
sub
xor
je
inc
jg
xor
ins
sbb
je
sbb
pusha
sbb
hlt
and
ret
xchg
xor
jne
xor
sbb
jno
je
repz
aad
jae
je
inc
sub
xor
je
inc
jg
xor
ins
sbb
pop
je
sbb
je
jae
pusha
sbb
hlt
and
(bad)
(bad)
xor
jne
xor
sbb
jno
je
aaa
cmp
loope
jae
or
loopne
inc
in
pop
je
jae
inc
adc
pop
je
imul
scas
pop
je
sbb
sbb
jae
and
scas
(bad)
ss
push
test
jae
je
jae
pushf
ja
pop
je
pop
xor
inc
xor
adc
push
push
sbb
je
jae
pusha
sbb
hlt
and
ret
xchg
xor
jne
xor
sbb
jno
je
mov
aas
jmp
jae
je
inc
sub
xor
je
inc
pop
aam
jae
arpl
call
mov
jb
jne
sbb
hlt
and
cld
scas
xor
mov
fwait
mov
jae
in
shl
pop
pushf
add
mov
mov
mov
in
mov
sub
fsub
sti
xchg
pushf
cwde
and
pop
cmp
jbe
mov
add
ja
scas
xor
mov
jnp
test
test
inc
test
mov
mov
xlat
jp
pop
je
dec
dec
je
test
std
aaa
lahf
xchg
mov
jae
inc
jp
pop
je
push
ds
(bad)
pop
test
and
pop
cmc
test
xor
pop
mov
xor
ss
aaa
xchg
aaa
mov
and
je
jae
je
repz
sbb
xchg
pop
je
xchg
ret
sbb
jbe
jae
xchg
push
jae
xlat
rcr
sbb
inc
inc
in
pop
je
jae
push
dec
clc
pop
mov
out
neg
sbb
sbb
jae
and
mov
lds
call
jmp
jae
je
inc
sub
xor
je
inc
pop
aam
jae
pop
jae
pop
push
mov
xor
adc
sbb
sbb
je
and
xchg
xor
sbb
scas
pop
je
jae
push
push
jae
xlat
adc
pop
je
jae
jbe
jae
je
jbe
jne
jae
je
jae
enter
push
jb
pop
push
jp
or
mov
mov
jno
je
jb
push
inc
mov
jo
xor
pushf
jg
pop
je
jae
inc
inc
in
pop
je
jae
inc
adc
pop
je
pop
jne
sbb
pusha
sbb
hlt
and
ret
xchg
xor
icebp
scas
xor
push
jb
sbb
jb
mov
std
mov
std
mov
gs
jae
je
xor
je
mov
pushf
out
xor
pushf
iret
ins
pop
je
push
ret
ss
pop
sbb
jb
je
inc
imul
xor
shr
pop
hlt
dec
jecxz
ss
push
sbb
jne
cmp
sub
ins
pop
je
addr16
sbb
cmp
pop
mov
xor
jae
je
inc
sub
xor
je
inc
jg
xor
pop
jae
pop
push
inc
sbb
push
or
sbb
repnz
xchg
xor
sbb
scas
pop
je
jae
adc
pop
xlat
repnz
sti
mov
mov
mov
je
inc
sub
xor
je
inc
jg
xor
pop
jae
pop
push
dec
sbb
sbb
jae
je
jo
hlt
and
ret
xchg
xor
icebp
scas
xor
push
jb
cmp
jae
pop
in
xor
pushf
or
loopne
inc
in
pop
je
jae
inc
rcr
sbb
cmc
jb
pop
push
sbb
or
jae
je
jae
sbb
scas
pop
je
test
pop
pushf
fwait
ins
pop
je
pop
mov
daa
push
jae
push
jb
sub
xor
push
jb
sub
shl
pop
push
bound
js
cmc
jae
je
mov
je
sbb
je
and
scas
xor
sbb
scas
pop
je
jae
fisubr
xlat
inc
jmp
inc
in
pop
je
jae
inc
rcr
sbb
mov
pop
sbb
jae
je
pop
ja
jb
dec
sbb
scas
pop
je
test
pop
pushf
add
je
add
inc
inc
xor
aaa
mov
push
and
cmps
je
jae
aam
jae
sbb
jae
and
jne
ss
lds
call
xlat
xor
je
inc
sub
xor
je
inc
pop
aam
jae
sbb
stc
je
jae
push
jae
je
sbb
xor
scas
scas
xor
push
jb
loopne
jb
mov
std
mov
std
mov
pop
mov
xor
aaa
mov
sbb
jae
je
mov
je
sbb
sbb
jae
and
and
ss
lds
call
xlat
xor
je
inc
sub
xor
je
inc
jg
xor
ins
sbb
pop
je
sbb
push
sbb
je
and
shl
pop
sbb
scas
pop
je
jae
je
fwait
cwde
imul
pop
push
jb
sub
xor
push
jb
sub
xor
push
push
aaa
push
xor
or
jae
and
scas
(bad)
ss
push
test
jae
je
jae
pushf
and
je
pop
xor
jae
push
jb
sub
xor
push
jb
sub
xor
push
push
jnp
sub
jae
and
scas
(bad)
ss
push
test
jae
je
jae
pushf
outs
pop
je
push
xor
inc
xor
aaa
mov
sbb
jae
je
xor
je
sbb
sbb
jae
and
nop
les
jb
in
xor
je
scas
add
xchg
xor
mov
mov
pushf
lods
xchg
mov
mov
adc
inc
sub
lock
and
mov
retf
je
test
std
aaa
lahf
xchg
mov
jae
hlt
jb
pop
push
jno
pop
push
jno
pop
je
repz
jp
mov
jb
xchg
mov
(bad)
loopne
imul
pop
je
sbb
and
cli
fdiv
popf
les
jb
div
pop
(bad)
pop
mov
xchg
je
jae
xor
and
add
and
xor
jne
jae
pushf
adc
loopne
icebp
mov
std
mov
mov
cs
cmp
pop
mov
(bad)
ja
test
test
je
push
adc
xchg
mov
div
cli
out
mov
fdiv
jnp
sbb
jbe
pop
mov
mov
sbb
ss
push
je
repz
ror
sub
mov
sahf
cwde
jbe
pop
je
and
sub
add
mov
fld
jae
sbb
ret
pop
je
neg
mov
imul
call
je
jae
or
lahf
or
into
scas
ss
call
xor
je
repz
stos
ret
pop
je
neg
mov
imul
repz
je
jb
lahf
or
xchg
je
mov
and
jg
je
repz
retw
push
pop
mov
fs
je
push
loopne
pop
bound
ret
xor
stc
div
mov
jae
hlt
jl
push
lds
jae
icebp
jb
loopne
and
sahf
sub
je
push
loopne
pop
bound
ret
xor
stc
div
mov
jae
hlt
jl
pushf
lds
jae
icebp
jb
loopne
and
lahf
or
shr
je
mov
and
invd
je
repz
lods
ret
push
pop
mov
fs
je
sub
sti
mul
mov
push
loopne
pop
bound
shl
stc
div
mov
jae
hlt
jl
ds
xor
icebp
jb
loopne
and
lahf
or
dec
lods
ss
call
or
repz
daa
rcr
neg
mov
gs
je
jae
je
xor
ss
push
scas
xor
icebp
jb
loopne
and
pop
jmp
loopne
dec
test
je
int
ss
pop
jmp
jae
and
push
push
je
jae
je
lock
push
test
mov
inc
mov
jo
es
xchg
and
dec
and
push
pop
retf
aas
xor
push
retf
je
test
std
aaa
(bad)
xchg
mov
test
out
pop
je
das
sbb
and
ja
mov
div
jnp
je
fwait
jl
jb
inc
sub
mov
xchg
xchg
repz
xor
dec
and
sbb
xchg
mov
sbb
sti
mov
push
shl
stc
neg
test
imul
je
jmp
lea
mov
push
sbb
rcr
div
or
pop
je
das
pop
je
test
std
not
fxtract
iret
and
lea
sbb
call
xchg
or
mov
ja
bound
shl
stc
neg
idiv
iret
and
lea
sbb
ss
call
ret
or
mov
jno
bound
shl
stc
neg
mul
addr16
std
add
(bad)
cli
fxtract
iret
and
lea
sbb
ss
call
add
je
repz
jae
bound
shl
stc
neg
mul
addr16
hlt
iret
and
lea
sbb
lods
ss
call
dec
or
out
adc
std
mov
mov
jge
bound
shl
stc
neg
mul
jae
hlt
iret
and
lea
gs
lods
ss
call
(bad)
or
mov
jg
bound
shl
stc
neg
not
iret
and
lea
sbb
call
mov
fldenv
iret
and
lea
sbb
ss
call
fisttp
je
repz
jp
bound
(bad)
xor
stc
neg
idiv
data16
sbb
rcr
push
repnz
loopne
repz
jb
ja
shl
pop
sbb
rcr
sahf
repz
div
or
loopne
inc
pop
adc
iret
fwait
call
lock
jo
je
sub
sti
mov
mov
js
je
test
je
add
mov
mov
mov
leave
jo
pop
popf
xchg
jno
je
into
jecxz
lea
je
repz
dec
jge
ss
jae
leave
lea
call
mov
mov
adc
lea
je
mul
mov
imul
icebp
mov
test
jae
pop
call
jecxz
adc
mov
cmc
mov
je
lea
aad
mov
dec
mov
jnp
inc
sbb
adc
xor
jbe
inc
ja
shl
pop
sbb
test
je
mul
mov
imul
repz
jb
ja
shl
pop
sbb
test
je
mul
mov
imul
icebp
mov
lahf
xor
pop
jo
jae
icebp
mov
and
jae
cmp
pop
je
mul
mov
test
je
mul
mov
fs
je
jo
ss
call
xchg
je
lock
mul
mov
popw
je
mul
mov
and
mov
sbb
scas
xor
icebp
mov
and
pushf
mov
sbb
stc
test
pop
push
jae
jmp
xor
icebp
mov
xchg
lea
jnp
and
je
(bad)
call
jbe
pushf
jae
pop
je
cli
call
jb
std
mov
mov
jle
cmc
xor
jae
ror
mov
scas
xor
icebp
mov
xor
jb
pushf
mov
sbb
icebp
mov
inc
data16
xchg
icebp
mov
inc
pusha
jb
xchg
icebp
stos
test
mov
test
mov
iret
sbb
pop
arpl
mov
sbb
cdq
jl
stc
stos
test
mov
into
mov
(bad)
pop
mov
mov
mov
mov
and
movs
lds
jb
call
ret
or
(bad)
jecxz
lea
je
test
lea
mov
jae
leave
cmps
test
mov
nop/reserved
pop
pushf
arpl
je
imul
mov
mov
mov
mov
pushf
fbld
je
mul
mov
pusha
pop
je
into
jecxz
lea
mov
and
(bad)
arpl
cmc
test
call
jae
rol
ins
xor
sbb
push
jb
xchg
addr16
dec
pushf
ja
pop
je
mul
mov
(bad)
repz
mov
div
mov
icebp
pop
mov
mov
mov
cli
pusha
jae
cmc
pushf
add
jb
pop
add
not
addr16
sub
lea
das
mov
cli
cli
int3
push
pusha
pop
je
lahf
pcmpeqb
dec
and
pop
and
not
pop
std
stos
pop
(bad)
std
mov
mov
xor
je
jb
imul
data16
xchg
icebp
(bad)
popf
loopne
jnp
imul
fs
jne
call
xor
sub
xor
outs
sub
adc
loopne
mov
sbb
xor
loopne
jae
sbb
out
pop
je
jecxz
je
sbb
je
jae
in
xor
pushf
and
je
pop
push
je
and
cmp
pop
cmc
cdq
outs
sub
sbb
jae
icebp
ret
popf
loopne
and
je
sbb
sbb
rcr
push
scas
call
loopne
icebp
mov
dec
lea
jne
jae
jno
(bad)
pop
je
mov
pop
mov
stos
ss
test
jb
call
cwde
lea
je
leave
int3
cmp
arpl
mov
cmc
mov
je
lea
aad
mov
mov
std
mov
mov
lahf
mov
mov
shl
lea
inc
call
leave
rcr
push
bound
xchg
mov
cdq
fimul
pop
mov
fincstp
mov
xchg
xchg
out
xlat
lahf
mov
hlt
test
xchg
icebp
rcr
mov
div
and
je
mov
mov
push
adc
lea
icebp
fcomp
(bad)
jne
cli
fdivr
not
repnz
xor
sbb
test
sbb
addr16
je
jae
icebp
in
lahf
loopne
and
call
pop
pcmpeqb
call
mov
call
adc
mov
stos
lods
sti
mov
je
test
pop
bound
je
push
cld
std
mul
repz
fwait
push
jnp
jae
leave
test
pop
sbb
rcr
sbb
pop
jmp
jae
retf
pop
cmc
mov
bound
mov
stc
inc
ja
ss
ds
jae
adc
sbb
in
xor
sbb
test
mov
addr16
xchg
leave
pop
popf
loopne
inc
lods
xor
imul
xchg
lods
pop
stos
xchg
mov
fadd
ss
(bad)
aad
jae
mov
xor
sbb
jecxz
je
sub
jb
mov
stc
inc
repz
ss
cmp
jb
in
adc
sbb
in
xor
sbb
test
xor
xor
mov
stc
inc
mov
ss
push
je
jae
shl
mov
or
jne
sbb
jo
jae
je
jae
je
sbb
jmp
pop
std
aaa
(bad)
jne
sbb
je
fdivr
jae
mov
imul
mov
pop
stc
aaa
retf
dec
stc
test
not
jl
pop
stc
inc
lock
repz
push
out
jb
push
and
xchg
leave
(bad)
pushf
loopne
and
lahf
adc
pop
stc
aaa
retf
dec
push
jo
out
xchg
xor
add
fwait
enter
fdiv
retf
je
(bad)
pop
int3
and
call
sti
push
je
(bad)
xchg
rcr
pop
hlt
dec
jb
add
retf
dec
and
into
stos
fwait
lea
out
jge
pop
push
jb
pop
int3
and
sbb
je
push
stos
pushf
idiv
lea
stos
pushf
push
jge
je
stos
lods
sti
mov
jno
scas
pop
je
ss
inc
in
pop
je
ss
ja
popa
xor
cli
pop
mov
jae
je
sbb
pushf
xchg
jl
je
ss
int3
aam
pop
je
nop
xchg
icebp
ret
mov
imul
mov
jo
je
sbb
pushf
mov
ss
mov
scas
pop
je
jae
je
fisttp
je
cli
pop
lods
mov
mov
cmc
cdq
in
push
je
mov
mov
jae
je
xlat
je
jae
stc
aaa
iret
dec
pushf
fstp
sbb
inc
inc
in
pop
je
jae
je
jae
je
jae
je
jae
mov
xor
xchg
scas
xor
push
jb
add
jb
mov
sbb
ret
pop
je
jae
je
sub
je
sbb
pushf
mov
loopne
icebp
mov
pushf
sti
jle
je
jae
je
add
sbb
test
adc
popa
scas
xor
pushf
dec
jle
je
div
or
pop
adc
loopne
neg
repnz
jg
je
jb
mov
fcomip
mov
mov
jo
jae
cmc
cdq
xchg
imul
loopne
push
mov
lea
je
or
ss
dec
shl
ja
jb
lahf
pushf
call
mov
jge
push
sbb
push
pop
stos
ss
fdiv
(bad)
pop
je
jae
je
jmp
mov
cli
fdivr
neg
icebp
mov
jae
mov
jb
pop
pushf
addr16
je
fwait
nop
js
jae
icebp
ficomp
pop
push
jb
out
xor
je
jae
cmp
and
add
je
sbb
sbb
jb
je
jb
inc
jb
pop
je
adc
je
cwde
pop
stc
aaa
xchg
dec
pushf
mov
pop
je
stos
lods
sti
mov
xor
jae
push
jb
pop
push
jb
pop
nop
and
push
mov
cmps
inc
sub
mov
xchg
xchg
repz
and
jae
and
inc
sahf
fwait
imul
je
ss
mov
lock
jge
mov
fwait
add
jae
popf
mov
pop
je
bound
je
jl
add
jae
dec
popa
jb
je
push
pop
jnp
(bad)
pop
je
dec
daa
jne
jae
lock
je
out
je
lock
xor
je
test
sub
fwait
and
sahf
mov
mov
mov
xchg
sti
neg
mov
lahf
ret
mov
pushf
outs
xchg
loopne
icebp
mov
std
neg
call
(bad)
test
mov
fwait
icebp
jb
pop
stc
idiv
loopne
rcr
call
add
mov
pop
imul
div
out
mov
mov
mov
push
stc
idiv
mov
mov
mov
fwait
sbb
out
loop
lea
mov
mov
clc
call
scas
loop
lea
xchg
icebp
xchg
mov
mov
(bad)
mov
sbb
mov
mov
jns
jae
mov
xchg
mov
dec
jnp
xor
jnp
rcr
jb
jnp
xor
sbb
xor
std
mov
std
mov
cmp
(bad)
xor
je
dec
outs
shl
pop
add
sub
xor
pushf
test
repz
xor
jne
mul
jb
loopne
sbb
pop
je
sub
neg
inc
out
mov
pop
jmp
jae
xor
call
fwait
sbb
jb
idiv
in
pop
je
ss
add
push
call
inc
mov
fcomp
stc
ss
test
pop
dec
ja
mov
dec
ja
mov
dec
ja
xchg
ja
xor
out
ss
cmp
movsx
jb
add
sar
ja
xor
xor
jl
movs
je
pop
push
jb
push
call
mov
mov
dec
ja
mov
dec
ja
xchg
ret
je
push
setl
jg
je
mov
mov
push
call
xor
pop
not
xchg
loop
lea
rcl
(bad)
call
out
adc
call
jne
je
mov
mov
mov
sub
jae
cmc
mov
adc
loopne
jb
xchg
icebp
jae
loopne
and
pushf
xchg
je
into
push
mov
sbb
push
jb
dec
scas
xor
je
adc
jb
sub
js
je
sbb
jb
call
(bad)
div
mov
mov
mov
test
mov
(bad)
pop
je
jl
in
jae
sbb
jae
je
neg
mov
idiv
jle
jae
stc
jae
loopne
icebp
mov
push
je
mov
jae
inc
xchg
xor
jmp
and
pushf
mov
dec
loopne
jb
push
sbb
je
inc
lds
jb
pop
pushf
mov
inc
fwait
aad
jae
or
pop
popf
push
jbe
je
mov
mov
mov
icebp
jae
loopne
and
call
pop
lds
jb
call
out
je
lock
pop
je
(bad)
call
inc
add
xor
mov
pop
hlt
iret
jb
mov
jae
je
jge
ss
pop
pushf
sbb
je
inc
add
xor
bound
pop
popf
mov
je
(bad)
push
mov
xor
(bad)
icebp
mov
add
pop
push
jb
clc
lods
xor
je
inc
adc
push
xchg
jp
je
mov
je
mov
je
mov
je
dec
adc
div
mov
mov
mov
arpl
dec
popa
push
sbb
je
xchg
(bad)
ss
pop
pushf
xchg
je
inc
add
xor
(bad)
jnp
pop
popf
cli
ja
je
neg
mov
jae
mov
cli
out
mov
fdivr
div
mov
mov
mov
sbb
scas
xor
icebp
xchg
mov
mov
sbb
je
jae
icebp
jae
loopne
and
pushf
arpl
je
into
push
mov
sbb
push
jb
fsubr
call
hlt
shl
pop
pushf
pop
jp
je
jl
je
retf
push
jne
jae
xchg
sti
div
mov
neg
mov
xchg
mov
xor
stc
test
pop
div
jae
stc
div
mov
in
pop
je
rcl
je
repz
je
push
jne
sbb
fsubr
fwait
adc
jb
loopne
pop
in
pop
je
retf
pop
je
call
jae
loopne
and
call
rol
ss
call
cmps
adc
sbb
jne
mov
and
inc
aaa
jmp
jae
dec
jp
pop
hlt
iret
jb
mov
jae
je
sbb
ss
pop
pushf
fstp
je
inc
aaa
jmp
jae
and
pop
popf
dec
jo
je
(bad)
push
mov
xor
(bad)
icebp
mov
push
sbb
push
jb
xor
call
pop
in
xor
pushf
push
jnp
je
je
je
mov
mov
adc
test
mov
arpl
dec
popa
push
sbb
je
pop
(bad)
ss
pop
pushf
inc
jnp
je
inc
aaa
jmp
jae
xchg
jne
pop
popf
mov
mul
mov
mov
mov
cli
out
mov
fdivr
div
mov
mov
mov
sbb
scas
xor
icebp
xchg
clc
jge
jae
mov
sbb
je
jae
icebp
jae
loopne
and
pushf
and
repnz
push
mov
sbb
push
jb
push
lods
xor
je
iret
sbb
sub
pop
pushf
sbb
fwait
cmp
je
mov
mov
adc
test
loopne
dec
inc
arpl
dec
popa
push
sbb
je
popf
(bad)
ss
pop
pushf
pcmpeqb
je
inc
aas
jmp
jae
pop
jne
pop
popf
bound
je
mul
mov
jb
mov
repz
push
out
(bad)
out
mov
fist
icebp
call
mov
neg
mov
xchg
mov
xor
stc
test
pop
div
xchg
xchg
icebp
xchg
mov
mov
idiv
mov
jae
je
ja
je
jae
je
jae
sbb
in
pop
je
out
sbb
call
sbb
push
jb
stos
or
je
dec
outs
shl
pop
add
xor
idiv
jb
add
dec
and
das
in
xor
rol
sbb
pop
stc
test
std
ss
stos
or
je
(bad)
jmp
xor
lea
jae
loope
mov
mov
and
mov
mov
pushf
jmp
pop
je
jae
icebp
or
sbb
xchg
pop
je
(bad)
jmp
lea
std
mov
std
mov
stos
or
je
inc
pop
aam
jae
retf
pop
push
jb
pop
push
jbe
pop
push
jb
pop
je
xor
loop
pop
pushf
retf
ja
je
imul
mov
cmp
je
jno
je
jae
rol
sbb
adc
shl
pop
idiv
jb
add
dec
and
(bad)
(bad)
xor
rol
sbb
pop
stc
test
(bad)
ss
stos
or
je
(bad)
jmp
lea
mov
pop
stos
ss
pop
je
cli
out
mov
fcomp
jbe
sbb
(bad)
pop
je
or
ss
dec
shl
ja
jb
lahf
pushf
loopne
loopne
icebp
mov
push
ja
sub
pop
pushf
xchg
jbe
je
mov
xchg
sti
idiv
mov
(bad)
loopne
data16
lea
adc
ja
pop
sub
(bad)
mov
jae
std
xchg
lock
and
mov
int3
mov
xchg
xchg
xor
jg
je
jae
jnp
mov
bound
call
idiv
mov
xor
jae
rol
cli
pop
cmp
and
call
inc
repnz
call
hlt
shl
pop
add
sub
xor
pushf
pop
ja
je
inc
xor
xor
jg
inc
add
xor
push
jbe
pop
std
mov
std
mov
sub
xor
add
sub
pop
pushf
cmp
je
inc
aaa
jmp
jae
jg
inc
aas
jmp
jae
inc
jbe
pop
dec
inc
push
xor
add
jg
inc
imul
xor
outs
jbe
pop
std
mov
std
mov
sub
pop
add
and
xor
jne
js
inc
not
pop
je
mov
jb
les
fwait
xor
push
mov
cli
out
mov
fmul
repz
jmp
xor
xor
add
push
in
xor
dec
inc
outs
mov
push
sbb
outs
jae
xor
dec
sub
pop
add
or
xor
cmc
test
je
dec
sub
pop
add
pop
jmp
pop
dec
inc
idiv
jmp
xor
mov
lea
jnp
call
int3
rol
je
xchg
xchg
xor
sub
mov
jae
je
mov
jl
xor
in
jae
je
mov
js
xor
in
jae
je
mov
xor
pop
je
mov
pusha
xor
pop
je
mov
push
xor
pop
je
mov
pop
xor
pop
je
mov
inc
xor
pop
je
mov
inc
xor
pop
je
es
xchg
and
retf
pop
std
mov
and
push
jne
sti
mov
call
jl
ss
mov
ss
mov
hlt
jne
repz
hlt
push
jnp
imul
aas
add
int
jge
pop
sbb
mov
xchg
jae
mov
jae
push
jae
jne
and
inc
mov
jb
pop
je
jae
je
neg
push
dec
jae
je
add
pop
mov
sbb
xchg
pop
je
clc
dec
push
jp
(bad)
lea
fiadd
clc
pop
push
jp
xchg
or
in
shl
hlt
enter
sbb
jb
cmp
xor
in
jae
je
mov
xor
jae
je
mov
cmp
xor
in
jae
je
mov
cmp
jae
je
mov
and
xor
in
jae
je
mov
and
jae
je
mov
sub
xor
in
jae
je
mov
sub
jae
je
mov
adc
xor
in
jae
je
mov
adc
jae
je
mov
sbb
xor
in
jae
je
mov
sbb
jae
je
mov
add
xor
in
jae
je
mov
add
jae
je
mov
or
xor
in
jae
je
mov
or
jae
je
mov
hlt
xor
pop
je
mov
lock
pop
je
mov
cld
xor
pop
je
mov
clc
xor
pop
je
mov
in
xor
in
jae
je
mov
loopne
xor
in
jae
je
mov
in
xor
pop
je
mov
call
loop
pop
je
mov
aam
xor
in
jae
je
mov
rol
jae
je
mov
fadd
jae
je
mov
fadd
jae
je
mov
les
jae
je
mov
rol
pop
je
mov
int3
xor
pop
je
mov
enter
in
jae
je
mov
mov
xor
in
jae
je
mov
mov
xor
in
jae
je
mov
mov
loop
pop
je
mov
mov
loop
pop
je
mov
movs
xor
pop
je
mov
mov
loop
pop
je
mov
lods
xor
pop
je
mov
test
xor
in
jae
je
mov
xchg
xor
pop
je
mov
nop
xor
pop
je
mov
pushf
xor
pop
je
mov
cwde
xor
pop
je
mov
mov
jae
je
mov
mov
jae
je
mov
je
xor
in
jae
je
mov
jo
xor
in
jae
je
mov
jl
xor
in
jae
je
mov
js
xor
in
jae
je
mov
xchg
pop
in
jae
je
mov
pusha
xchg
pop
in
jae
je
mov
ins
xchg
pop
in
jae
je
mov
push
loop
pop
je
mov
push
xchg
pop
in
jae
je
mov
push
xchg
pop
in
jae
je
mov
pop
xchg
pop
in
jae
je
mov
pop
xchg
pop
in
jae
je
mov
inc
xchg
pop
in
jae
je
mov
inc
xchg
pop
in
jae
je
mov
dec
xchg
pop
in
jae
je
mov
dec
xchg
pop
in
jae
je
mov
xor
xor
in
jae
je
mov
xor
jae
je
mov
cmp
xor
in
jae
je
mov
cmp
jae
je
mov
and
xor
in
jae
je
mov
and
jae
je
mov
sub
xor
in
jae
je
mov
sub
jae
je
mov
adc
xor
in
jae
je
mov
adc
jae
je
mov
add
xor
in
jae
je
mov
add
jae
je
mov
or
xor
in
jae
je
mov
or
jae
je
mov
hlt
xchg
pop
in
jae
je
mov
clc
xchg
pop
in
jae
je
mov
in
xor
in
jae
je
mov
loopne
xor
in
jae
je
mov
in
xchg
pop
in
jae
je
mov
call
loop
pop
je
mov
aam
xor
in
jae
je
mov
rol
jae
je
mov
fadd
jae
je
mov
fadd
jae
je
mov
int3
xchg
pop
in
jae
je
mov
enter
in
jae
je
mov
mov
xor
in
jae
je
mov
mov
xor
in
jae
je
mov
mov
loop
pop
je
mov
mov
loop
pop
je
mov
movs
xchg
pop
in
jae
je
mov
mov
loop
pop
je
mov
lods
xchg
pop
in
jae
je
mov
test
xor
in
jae
je
mov
xchg
xchg
pop
in
jae
je
mov
nop
xchg
pop
in
jae
je
mov
pushf
xchg
pop
in
jae
je
mov
cwde
xchg
pop
in
jae
je
mov
test
jae
je
mov
add
pop
je
mov
mov
jae
je
mov
mov
jae
je
