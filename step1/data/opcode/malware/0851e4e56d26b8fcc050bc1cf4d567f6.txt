xchg
pcmpgtd
push
xor
bound
mov
xchg
dec
push
inc
or
data16
or
je
or
data16
add
data16
lahf
or
data16
pcmpgtd
xchg
pcmpgtd
outs
push
jmp
fwait
or
or
push
data16
mov
pcmpgtd
xchg
pcmpgtd
inc
push
data16
pcmpgtd
add
adc
dec
sbb
sub
data16
pcmpgtd
add
data16
add
test
data16
or
data16
in
out
push
inc
xchg
pcmpgtd
fisttp
scas
lahf
or
data16
add
add
and
add
add
add
ss
add
add
add
lock
push
add
add
add
xchg
addr16
add
inc
add
add
add
add
cld
addr16
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
repz
and
sti
inc
mov
nop
ins
sbb
xor
add
add
add
add
push
fs
je
add
add
add
push
add
add
and
pop
add
add
and
pop
add
add
add
add
add
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
pop
inc
add
jo
add
add
add
add
mov
add
add
add
sub
add
xor
add
or
add
add
add
add
and
inc
add
adc
xor
and
(bad)
dec
add
add
add
add
add
add
add
add
add
adc
sub
inc
add
add
test
add
mov
add
lea
add
push
gs
popa
arpl
bound
dec
outs
popa
outs
outs
popa
jae
add
push
je
add
add
inc
push
aam
push
test
fist
add
add
add
add
add
movs
es
add
add
add
lock
push
adc
inc
mov
fstp
add
add
add
add
add
add
add
add
add
inc
add
add
cmp
add
rol
add
clc
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
jg
adc
and
and
jg
adc
and
and
cmp
adc
and
and
pop
int
xor
xchg
sbb
inc
mov
out
dec
inc
out
fadd
and
int
movs
aas
add
add
rol
add
out
add
add
out
xchg
add
cmps
rol
retf
out
xchg
adc
add
jecxz
jmp
add
loop
push
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
(bad)
jmp
add
add
xor
xor
xor
xor
add
add
add
add
sub
add
add
add
add
add
add
xor
inc
add
add
add
add
cmp
xor
xor
dec
push
inc
inc
dec
inc
inc
cs
inc
pop
add
inc
outs
arpl
cs
outs
arpl
inc
outs
arpl
ret
add
add
hlt
add
add
add
add
add
popa
inc
add
push
add
or
add
adc
add
add
add
add
add
add
jl
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
pop
inc
add
inc
add
add
add
or
add
add
add
inc
add
add
add
and
add
add
js
inc
add
add
add
add
add
add
sbb
add
mov
push
sbb
lock
add
add
add
inc
nop
add
and
adc
inc
add
add
xor
add
nop
and
add
add
dec
sbb
cmp
nop
add
and
add
add
inc
add
add
add
add
inc
add
add
sbb
pop
cmp
add
add
inc
add
add
add
test
inc
add
add
add
sbb
push
and
add
add
inc
add
add
add
enter
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
or
nop
add
pop
inc
add
(bad)
(bad)
inc
sldt
add
and
add
add
int3
sbb
js
nop
add
and
add
add
add
add
sbb
add
sbb
add
inc
add
adc
push
adc
test
inc
add
sbb
add
inc
add
adc
push
adc
rcr
inc
add
sbb
add
inc
add
adc
push
adc
clc
sbb
add
inc
add
adc
or
inc
add
adc
and
inc
add
sbb
add
inc
add
adc
push
adc
add
add
jl
inc
add
add
add
pusha
inc
add
(bad)
(bad)
inc
add
add
push
inc
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
jp
add
add
add
add
pop
inc
add
pop
add
add
enter
(bad)
(bad)
(bad)
inc
add
add
add
add
cmp
add
(bad)
(bad)
inc
push
add
add
add
inc
add
add
add
nop
add
inc
add
add
add
or
add
add
add
xchg
sbb
nop
add
add
inc
add
add
add
nop
and
add
add
loopne
inc
add
cmp
add
add
add
add
inc
add
add
add
add
sbb
nop
add
add
inc
add
add
add
mov
add
add
push
inc
add
nop
add
and
add
add
add
add
mov
sbb
add
inc
add
adc
push
adc
enter
and
inc
add
adc
or
inc
add
adc
lock
and
inc
add
adc
or
inc
add
adc
sbb
add
sbb
add
inc
add
adc
push
adc
inc
sbb
add
sbb
add
inc
add
adc
push
adc
push
sbb
add
inc
add
adc
push
adc
push
jo
add
(bad)
(bad)
inc
add
add
add
lods
repz
out
cmp
push
stos
mov
fmul
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
sbb
(bad)
(bad)
(bad)
call
and
pusha
pop
inc
add
add
add
inc
add
add
add
sbb
(bad)
(bad)
(bad)
(bad)
fsub
inc
add
add
add
add
lea
(bad)
inc
add
add
add
(bad)
(bad)
clc
and
add
add
cmp
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
inc
gs
arpl
jae
add
dec
popa
ins
popa
jae
jb
gs
add
gs
aaa
add
push
fs
je
add
mov
(bad)
fwait
inc
xchg
rcl
fs
jg
int
rol
dec
mov
ja
cmp
adc
dec
test
fist
fstp
stos
sti
stos
jecxz
dec
adc
cmp
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
loopne
inc
add
add
add
add
add
add
add
pop
inc
add
inc
add
add
add
add
add
xchg
xor
or
stos
add
xchg
dec
jo
popa
je
jbe
jb
cmp
xchg
dec
lods
xor
or
stos
add
xchg
inc
ins
popa
outs
ins
imul
lods
xor
or
stos
add
xchg
inc
jb
push
add
add
dec
jne
ins
imul
add
dec
lods
xor
or
stos
add
xchg
push
outs
ins
jns
gs
imul
push
add
cmp
std
lahf
in
dec
lea
push
and
and
adc
dec
mov
lods
lock
lock
push
adc
inc
mov
fstp
sahf
rep
in
stos
pop
hlt
cmp
scas
sbb
jb
jne
je
jb
add
out
xchg
add
cmps
rol
retf
outs
arpl
add
pop
and
dec
mov
xor
imul
inc
cmp
outs
outs
ja
pop
push
jns
push
outs
ja
xor
dec
push
inc
inc
dec
inc
inc
outs
arpl
dec
push
inc
outs
arpl
add
inc
and
add
add
push
add
add
add
add
add
add
add
add
add
and
lods
xor
or
stos
add
xchg
push
fs
gs
jb
add
add
cli
dec
lods
xor
or
stos
add
xchg
dec
jne
jb
jae
add
push
add
adc
add
add
adc
add
or
mov
add
add
mov
add
push
add
add
and
and
add
add
add
inc
arpl
add
inc
add
and
add
add
test
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
cs
ins
and
add
adc
add
inc
gs
gs
push
imul
jne
add
add
dec
and
pusha
and
add
add
mov
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
add
pop
outs
outs
ins
gs
add
lods
and
mov
add
shl
mov
or
je
jmp
push
mov
call
jmp
add
add
or
sbb
add
push
add
add
add
je
add
outs
add
xor
add
add
mov
dec
sbb
mov
cmp
add
add
add
mov
and
push
add
xor
and
push
add
xor
add
add
cmp
inc
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
dec
outs
push
popa
jb
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
inc
add
jae
add
jbe
popa
push
cmp
outs
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
dec
xor
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
int3
xor
add
dec
push
adc
inc
mov
fstp
jae
lahf
in
dec
lea
push
and
and
cdq
iretw
adc
pusha
rcl
fadd
add
push
add
add
or
dec
popa
ins
popa
jae
jb
gs
or
outs
arpl
jae
outs
outs
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
add
arpl
jae
outs
outs
add
add
movs
add
add
add
add
add
inc
loope
add
add
add
outs
arpl
add
adc
dec
push
inc
outs
arpl
cs
outs
arpl
add
add
add
or
add
lods
add
add
inc
xor
or
add
jnp
add
push
push
add
shr
add
push
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
xor
add
add
nop
add
add
popa
outs
jae
push
gs
inc
sub
add
add
add
ins
gs
jb
add
add
add
jb
ins
jae
jb
add
push
add
add
add
add
add
add
imul
jb
add
add
add
add
pop
adc
add
and
add
add
add
add
add
jb
jae
and
or
or
pop
add
jb
outs
add
jae
je
jb
popa
add
add
push
add
add
add
sbb
add
jb
popa
jae
jb
add
add
and
add
add
add
dec
xor
add
aam
push
test
fist
mov
(bad)
fwait
inc
xchg
rcl
fs
jg
int
dec
lods
xor
or
stos
add
xchg
or
add
dec
cmp
add
add
imul
add
popa
jb
gs
ins
gs
xor
sbb
add
and
aaa
add
ins
je
add
aaa
add
inc
dec
out
aaa
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
and
and
and
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
xorps
push
dec
pmaxub
fidiv
fidiv
fidiv
fidiv
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
aam
cmc
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
(bad)
repnz
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
ins
push
adc
xor
adc
xor
adc
xor
adc
xor
adc
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
lahf
in
adc
adc
adc
adc
adc
adc
adc
adc
push
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
jle
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
clc
cmp
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
push
jno
mov
es
es
es
es
es
es
es
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
push
jae
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
hlt
jl
dec
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
mov
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
daa
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
(bad)
in
mov
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
push
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
aas
arpl
xchg
or
or
or
or
or
or
or
or
or
or
or
or
or
fsubrp
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
iret
dec
dec
and
cmp
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
int3
sbb
int3
sbb
int3
sbb
int3
sbb
int3
sbb
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
invd
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
js
icebp
retf
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
enter
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lds
lds
lds
lds
lds
lds
lds
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
adc
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
in
scas
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
fisubr
cld
and
and
and
and
and
and
and
and
and
je
mov
je
mov
je
mov
je
mov
je
mov
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
rcl
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
push
push
outs
or
or
or
or
or
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
scas
jg
mov
les
les
les
les
les
les
les
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
loopne
dec
loopne
dec
loopne
dec
loopne
dec
loopne
dec
loopne
dec
loopne
dec
loopne
dec
loopne
dec
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
aad
cdq
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
push
xchg
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
(bad)
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
in
stc
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
jle
inc
ret
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
ffreep
dec
fist
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
pop
int
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
(bad)
ror
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
cmc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
popf
xor
push
popf
xor
push
popf
xor
push
popf
xor
push
popf
xor
push
popf
xor
push
popf
xor
push
popf
xor
push
popf
xor
sub
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
ins
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
(bad)
jb
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
sbb
pop
sahf
sbb
pop
sahf
sbb
pop
sahf
sbb
pop
sahf
sbb
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
ss
pop
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
into
je
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fisubr
fimul
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
add
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
popa
out
and
jnp
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xor
sub
mov
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
imul
imul
imul
imul
imul
imul
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
inc
loope
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
vcmpsd
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
ffree
(bad)
fstp
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
pop
push
int3
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
std
into
(bad)
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
cmp
mov
adc
adc
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
jae
pushf
push
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
ins
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
movs
aad
call
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
pop
pop
loopne
pop
loopne
pop
loopne
pop
loopne
pop
loopne
pop
loopne
pop
loopne
pop
loopne
pop
loopne
pop
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xor
dec
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
xlat
pushf
inc
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
int
xchg
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
stos
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
inc
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
gs
cmc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
jne
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
lds
pop
(bad)
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shr
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
ret
loope
ret
loope
ret
loope
ret
loope
ret
loope
ret
loope
ret
loope
ret
loope
ret
loope
ret
loope
jmp
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
jae
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
shl
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
icebp
adc
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
out
stos
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
jg
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
bnd
repnz
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
cmc
push
(bad)
call
sbb
call
sbb
call
sbb
call
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
(bad)
xor
aam
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
sub
fwait
int3
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmove
popf
fcmovb
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
or
les
ffreep
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
sahf
fwait
outs
inc
and
and
and
and
and
and
and
and
and
and
cmp
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
cmp
sti
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
jge
cdq
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
rcr
inc
je
xor
call
je
xor
call
je
xor
call
je
xor
call
je
xor
call
je
xor
call
je
sub
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
push
iret
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
scas
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
test
test
test
test
test
test
test
test
test
test
test
test
test
lods
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
loope
std
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
and
jns
jmp
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
stos
test
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
xchg
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fadd
jnp
add
add
add
add
add
add
add
add
add
add
add
add
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
mov
idiv
mov
idiv
mov
idiv
mov
idiv
mov
idiv
mov
idiv
mov
idiv
mov
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
gs
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
stos
jbe
inc
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
mov
out
mov
mov
out
mov
mov
out
mov
mov
out
mov
mov
out
mov
mov
out
mov
mov
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
and
fwait
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
ror
push
rcl
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
cmps
cmc
pop
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
test
cmps
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
xchg
inc
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
push
js
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
rol
inc
cs
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
push
inc
pop
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
or
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
das
dec
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
pop
arpl
movs
into
shl
movs
into
shl
movs
into
shl
movs
into
shl
test
inc
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
xlat
push
xchg
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
outs
leave
aas
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
dec
aam
mov
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
inc
push
push
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
cmp
lahf
sbb
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
iret
rcl
rcl
rcl
rcl
rcl
rcl
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
aas
xor
fld
fld
fld
fld
fld
fld
fld
fld
fld
fisttp
sbb
sbb
or
sbb
sbb
or
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
add
add
add
add
add
js
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
inc
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
jp
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
xor
mov
xor
mov
xor
mov
xor
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
lock
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
push
enter
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
inc
inc
pop
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
and
and
and
and
and
and
and
and
and
and
and
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
and
dec
ds
sub
les
les
les
les
les
les
les
les
les
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
pop
lea
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
cdq
adc
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
nop
push
cld
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
retf
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
pmullw
aad
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
pop
fcom
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
sti
scas
push
inc
sbb
sbb
sbb
sbb
sbb
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
pop
movs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
(bad)
je
pop
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
scas
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
fidivr
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
movs
clc
(bad)
cmps
and
and
and
and
and
and
and
and
and
and
and
cwde
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
add
add
add
add
add
add
add
add
add
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
fdivr
mov
fdivr
mov
fdivr
mov
fdivr
mov
fdivr
mov
fdivr
mov
fdivr
mov
fdivr
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
test
test
test
test
test
test
test
in
lahf
paddsb
in
lahf
paddsb
in
lahf
paddsb
in
lahf
paddsb
in
lahf
paddsb
in
lahf
pmaxsw
lods
out
or
lods
out
or
lods
out
or
lods
out
or
lods
out
or
lods
out
or
lods
out
or
lods
out
or
lods
out
or
lods
out
or
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
sub
sub
sub
sub
pop
inc
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
jmp
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
inc
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
je
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
cmp
jne
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
cmp
jne
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
xor
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
push
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
push
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
inc
inc
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
mov
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
call
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
add
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
inc
inc
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
dec
add
add
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
test
jne
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
jmp
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
pop
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
jmp
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
dec
add
add
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
(bad)
push
ins
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
push
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
call
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
jmp
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
call
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
jmp
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
ret
add
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
inc
inc
inc
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
repnz
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
add
add
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
push
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
mov
add
cmp
pop
mov
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
ret
add
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
add
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
ins
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
call
mov
cmp
je
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
xor
and
and
and
xor
xor
and
and
xor
ins
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
test
je
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
jmp
push
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
pop
call
dec
gs
jo
ins
ins
outs
arpl
mov
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
mov
call
dec
inc
push
dec
inc
dec
xor
add
inc
inc
inc
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
call
dec
gs
jo
jb
popa
je
add
inc
inc
inc
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
xor
ret
call
loop
or
fwait
paddsw
out
xchg
mov
shl
in
dec
repnz
in
cdq
ds
std
sub
in
shr
ror
sbb
mov
shl
in
dec
repnz
xor
mov
mov
mov
pop
icebp
dec
cli
sbb
movs
sbb
loopne
mov
test
cmp
jmp
shr
add
test
xor
shl
in
dec
repnz
adc
mov
mov
jno
in
sar
ror
add
cmps
sbb
loopne
mov
test
cmp
jmp
shr
dec
int
sbb
mov
shl
in
dec
bnd
lea
sbb
in
sar
mov
lock
sbb
loopne
mov
test
cmp
jmp
shr
(bad)
int
sbb
in
rcr
shl
in
call
test
pop
idiv
shl
in
call
ss
sub
enter
ins
add
sbb
adc
cmp
jno
mov
outs
cmp
fsubrp
ror
shl
adc
dec
xchg
mov
cmp
push
shl
push
shl
in
lock
mov
aas
loop
outs
das
mov
adc
test
sbb
jae
mov
bound
mov
bound
mov
bound
mov
mov
(bad)
sbb
inc
or
shl
ret
sub
paddsw
in
xchg
mov
push
mov
in
ror
aas
test
fnstsw
ret
test
sbb
in
rcr
shl
mov
cwde
paddsw
in
loop
clc
dec
sub
ror
adc
add
sbb
in
mov
test
mov
lods
shl
in
call
data16
mov
popf
push
in
shr
aad
mov
sbb
adc
fild
cmp
loope
dec
pushf
cs
mov
in
dec
mov
lods
aas
ret
sub
in
sar
dec
jmp
test
sbb
add
dec
call
sbb
sar
dec
sub
data16
mov
fs
jae
in
sar
(bad)
mov
fs
jae
in
sar
dec
sub
jmp
and
mov
outs
das
not
in
dec
xor
in
mov
push
mov
in
dec
xor
mov
ficom
pop
cmps
adc
ins
push
mov
in
rol
test
cmc
scas
retf
mov
mov
xor
lds
xor
jmp
pop
dec
stos
in
enter
xchg
sbb
sbb
ffree
mov
pop
enter
aas
add
adc
loop
outs
cmp
pushf
sub
cmps
sbb
adc
mov
stc
xchg
cmp
in
enter
xchg
sbb
lds
mov
cwde
sbb
loope
mov
adc
mov
pop
in
shl
shl
in
shl
in
shl
in
xchg
cmp
stc
enter
inc
mov
in
shl
mov
sar
out
mov
push
mov
sbb
in
shl
test
sbb
jmp
xor
push
mov
dec
inc
mov
in
shl
xor
in
shl
retf
push
jb
mov
pop
fs
mov
sbb
in
shl
rol
pop
aas
data16
(bad)
adc
mov
fs
mov
sbb
in
shl
rol
jmp
mov
sub
pop
out
mov
jbe
mov
outs
mov
inc
pop
in
rcl
ffree
mov
data16
mov
ret
adc
in
rcr
mov
in
dec
(bad)
cmp
in
sar
cmc
ret
add
shl
mov
ret
dec
fs
shl
xchg
adc
shl
and
mov
mov
inc
mov
in
shl
xchg
xlat
inc
outs
push
lahf
pop
(bad)
dec
mov
in
rol
cmp
dec
xchg
dec
stos
loope
mov
inc
mov
in
shl
adc
loop
push
out
in
shl
dec
mov
xchg
lods
les
dec
sbb
shl
ror
sahf
cs
xor
cdq
dec
imul
add
sub
icebp
dec
loop
dec
retf
cmp
xchg
test
cmp
mov
push
sub
adc
cmp
shl
outs
add
xchg
mov
dec
clc
adc
mov
shl
mov
shl
in
aas
addr16
test
pop
sub
shl
call
dec
cli
inc
fs
mov
xchg
test
cmp
rol
outs
jnp
and
add
mov
nop
in
mov
call
ja
stos
mov
in
stos
mov
in
dec
jmp
aas
addr16
adc
aas
dec
loop
dec
mov
push
popf
sub
adc
shr
mov
xchg
imul
or
shl
mov
xchg
xlat
ja
test
sub
add
fucom
adc
mov
in
stos
mov
loop
add
shl
in
aas
rcr
xchg
mov
add
in
shl
call
mov
mov
xchg
mov
xchg
scas
sahf
adc
ret
mov
test
fucomi
(bad)
fstp
mov
xchg
mov
add
push
dec
mov
jnp
cmps
out
in
dec
mov
sbb
in
cmps
mov
(bad)
adc
mov
mov
ret
call
adc
cmc
inc
dec
sbb
in
rcl
mov
retf
(bad)
cmps
(bad)
(bad)
mov
in
dec
cli
ins
add
mov
dec
jmp
dec
in
lds
adc
xor
in
iret
xor
out
shl
xchg
ds
add
xchg
data16
in
inc
jbe
mov
repnz
int
cmp
sbb
ins
add
sbb
jmp
call
(bad)
hlt
(bad)
int3
mov
mov
inc
sbb
ror
dec
loopne
adc
dec
sbb
in
shl
iret
mov
in
mov
xchg
mov
shl
in
dec
call
loop
aas
addr16
push
inc
je
in
shl
std
shl
in
test
mov
enter
shl
dec
mov
mov
cmp
in
rcr
xchg
mov
int
cmp
sbb
add
mov
jo
shl
in
dec
dec
pushf
sub
mov
in
xchg
cmp
in
test
cmp
shl
push
inc
or
loop
mov
loop
mov
push
jmp
shr
rol
sbb
in
sar
sub
cmc
cmc
(bad)
mov
fs
retf
sbb
sar
lds
call
fistp
shl
in
test
loop
sar
call
nop
dec
mov
jg
sbb
shl
in
dec
xor
adc
mov
loop
push
sbb
pop
sub
mov
in
std
cmp
jbe
mov
sar
sbb
in
shl
loop
xor
in
shl
std
hlt
sbb
shl
mov
sub
shl
in
shl
(bad)
std
mov
inc
ror
jecxz
mov
mov
in
shl
xchg
std
mov
in
add
sbb
ins
mov
neg
inc
or
loop
mov
in
rcr
adc
sbb
in
shl
in
aas
add
jp
mov
in
sub
jne
shl
in
ror
shl
in
rcr
mov
lods
aas
add
pop
push
mov
in
aas
and
shl
in
ror
shl
in
ror
shl
pop
shl
inc
inc
dec
sbb
ins
add
sbb
shl
jmp
ror
dec
call
dec
lea
mov
shl
ins
add
sbb
shl
lods
aas
add
pop
inc
mov
in
dec
call
dec
lea
dec
stos
jne
mov
adc
sbb
ror
shl
in
sar
xchg
dec
dec
pushf
cs
sbb
adc
sbb
ror
shl
fidivr
loop
add
dec
loop
stos
mov
adc
loop
and
fstp
fistp
loop
add
dec
loop
movs
push
sub
lods
enter
dec
mov
or
outs
add
xchg
cdq
in
sub
dec
mov
pop
outs
(bad)
mov
sti
nop
out
in
shl
sbb
out
inc
outs
cmp
mov
dec
repz
iret
ror
sbb
aaa
outs
cmps
in
shl
sbb
ds
mov
fucom
das
jle
add
jae
iret
pop
fdivr
out
xor
inc
je
cwde
ret
les
leave
mov
mov
xchg
cdq
in
jge
pop
jne
in
rol
in
dec
mov
(bad)
fmul
xchg
les
(bad)
mov
addr16
xchg
leave
iret
aas
sbb
xor
sbb
pop
shl
aas
sub
sub
mov
nop
int3
fisubr
std
mov
fs
xchg
fcomp
xchg
fcom
dec
fisub
test
cmp
int3
test
stc
(bad)
mov
addr16
mov
push
leave
int3
ret
mov
mov
push
shl
in
and
stc
rcr
shl
stc
dec
jmp
shl
cwde
sbb
shl
ins
add
loop
test
out
shl
in
shl
sbb
add
dec
jbe
test
mov
std
shl
mov
jmp
xor
(bad)
rol
add
dec
ret
push
mov
in
rol
aad
ret
add
push
adc
pop
arpl
shl
sub
movs
sbb
in
ret
in
xchg
fistp
aam
in
iret
xor
stos
les
fucomi
xchg
xor
jmp
rcr
shl
adc
mov
sbb
mov
iret
xor
shl
mov
ret
scas
xchg
daa
ret
mov
fucomi
out
jno
in
mov
pop
out
mov
jno
jmp
dec
dec
pushf
sub
cmps
sbb
inc
mov
ins
les
sbb
sar
add
sub
sbb
shr
loope
mov
data16
pushf
sub
movs
sbb
in
stos
mov
in
stos
mov
in
shl
fs
cmp
loope
jno
inc
mov
in
xchg
fistp
sub
loope
adc
lahf
cmc
xor
lea
sbb
cld
xor
mov
(bad)
sbb
xchg
fistp
adc
ret
push
mov
in
shl
adc
xor
in
mov
adc
xchg
sbb
mov
call
jne
in
sar
enter
dec
aas
sbb
shl
data16
mov
xchg
push
cmp
in
inc
xchg
cwde
int3
ss
shl
sbb
xchg
fistp
adc
ret
push
mov
in
rcr
mov
push
jne
in
shl
adc
lahf
hlt
sbb
dec
loop
fdivr
add
mov
fimul
sar
icebp
jle
mov
mov
outs
add
sbb
add
ror
sar
cmp
test
xor
out
dec
inc
sahf
sub
enter
retf
ret
and
ret
fmul
cmp
leave
enter
aam
pop
outs
add
push
in
dec
inc
(bad)
sar
int3
cmp
leave
enter
les
aam
retf
cmp
pop
movs
inc
jle
sbb
mov
pop
in
ins
xor
in
mov
pushf
aad
cmp
outs
mov
pushf
xchg
les
mov
sbb
dec
mov
les
cwde
sub
adc
icebp
add
dec
test
mov
in
aas
ret
mov
dec
adc
sbb
icebp
add
cmc
enter
mov
xchg
adc
rcl
lock
xor
fisubr
mov
out
inc
pop
sbb
mov
hlt
std
dec
sub
stc
retf
ss
dec
mov
sbb
jp
pop
out
jno
out
daa
fld
inc
dec
sbb
and
mov
bound
mov
in
dec
not
data16
push
xlat
mov
in
inc
dec
sbb
out
ret
hlt
mov
lock
and
test
pushf
sar
test
mov
in
nop
fucom
adc
mov
and
add
in
enter
cwde
mov
shl
in
shl
jmp
shl
in
stos
dec
loop
mov
dec
pushf
xchg
in
sbb
ins
mov
xlat
imul
scas
ss
xor
xchg
in
sbb
ins
mov
ja
mov
shl
leave
xor
xchg
in
sbb
ins
mov
xlat
imul
rcl
cdq
loopne
arpl
inc
mov
sub
in
sbb
push
xor
out
shl
in
shl
in
rcr
jmp
shl
cwde
test
adc
dec
xchg
mov
ss
fnsave
sbb
add
dec
jbe
test
mov
lock
add
mov
in
fwait
cmp
pop
lods
inc
mov
loope
jno
lock
in
stos
mov
out
test
sbb
mov
mov
pushf
sub
stos
sbb
adc
xchg
sbb
mov
call
jno
lock
in
xchg
fstp
mov
enter
(bad)
(bad)
in
shl
das
enter
ds
loop
shl
mov
sar
fcmovnb
xchg
mov
arpl
adc
mov
in
xor
cmc
jns
dec
loop
shl
mov
shl
adc
aad
mov
loopne
cmp
cdq
movs
clc
jg
movs
aam
(bad)
jne
lods
(bad)
lods
mov
jno
mov
fnstcw
(bad)
int
jb
stos
in
mov
jno
test
js
mov
js
loop
cmc
sar
dec
loop
in
xchg
aas
iret
in
xchg
aas
iret
in
xchg
aas
iret
in
xchg
sub
sub
out
aas
in
stos
xchg
loopne
mov
mov
shr
xchg
fidiv
scas
shr
ret
movs
fldcw
movs
lds
scas
fld
mov
shr
xchg
fistp
lods
xchg
pop
sub
add
xchg
ret
jl
mov
ins
in
sub
adc
loop
and
push
mov
pop
xor
aas
dec
jl
mov
ins
test
test
adc
shl
movs
into
pop
xchg
xor
dec
cwde
movs
lds
fld
test
pop
in
sub
js
sbb
sahf
movs
cld
js
rcr
aas
dec
jbe
mov
js
repz
adc
(bad)
jno
lods
(bad)
test
sbb
adc
(bad)
jno
mov
imul
aas
dec
pop
lahf
movs
(bad)
imul
sub
fisubr
xchg
jno
rcr
aas
dec
dec
mov
rcr
adc
fstp
test
jp
adc
hlt
jno
mov
push
mov
pop
or
aas
dec
pop
mov
jl
test
jl
movs
neg
adc
fidiv
scas
rcl
scas
ror
sub
aas
hlt
outs
mov
fdivr
mov
dec
in
sub
adc
lock
test
je
sbb
mov
les
sub
aas
jecxz
lahf
lods
fidiv
mov
dec
lahf
scas
aam
sahf
mov
cmc
pop
xor
loop
mov
lds
mov
shl
rcr
aas
dec
pop
sub
pop
mov
shl
rcr
aas
dec
dec
and
les
lods
fld
ffreep
pop
mov
aas
dec
dec
test
sar
mov
pop
in
sub
out
adc
fldcw
lods
fistp
adc
ret
js
test
fist
lods
fsubr
rcr
aas
dec
push
cdq
xchg
imul
mov
jl
rcr
aas
dec
push
cdq
xchg
shr
scas
fldcw
mov
sar
pop
hlt
push
aas
dec
push
cdq
xchg
shr
lods
ror
mov
jl
rcr
aas
dec
pop
mov
ret
je
movs
out
and
or
sahf
movs
lds
ffreep
pop
pop
add
dec
pop
xor
jb
mov
cmc
cmp
mov
jnp
adc
mov
out
rcr
aas
dec
sbb
shl
in
shl
adc
mov
in
sub
lock
popf
push
lahf
cmc
mov
(bad)
mov
jmp
lea
jno
and
add
or
movs
push
adc
xchg
pop
mov
pop
or
daa
push
das
test
or
ds
sub
adc
inc
push
out
xlat
and
add
xchg
jo
pop
jle
leave
jne
inc
sub
mov
sbb
jg
clc
sbb
fstp
ins
and
shl
pop
dec
test
test
je
inc
imul
loop
mov
cwde
(bad)
mov
cmp
gs
mov
call
jo
pop
jl
test
mov
add
mov
out
mov
cmps
inc
dec
pop
(bad)
cmps
cmp
(bad)
fdivr
fadd
outs
rcl
sbb
jecxz
dec
in
in
sub
mov
shr
mov
movs
sti
(bad)
popf
mov
loop
shl
adc
mov
in
rcr
aas
dec
inc
test
fstp
out
shl
rcr
aas
dec
sbb
shl
in
shl
arpl
cmp
cmp
ret
sbb
fs
inc
xchg
div
int
adc
jno
mov
into
call
sbb
jge
xchg
sub
cmp
clc
test
rcl
jno
hlt
into
cdq
jecxz
and
outs
lods
and
xchg
push
mov
and
adc
add
rol
loopne
fisub
sti
test
adc
ins
cmp
push
push
adc
sub
sbb
test
mov
ds
adc
inc
mov
out
xchg
data16
sar
add
mov
sar
call
cs
vmovaps
and
and
imul
push
les
mov
mov
jno
xchg
dec
push
push
jmp
and
mov
lahf
adc
fisubr
sub
mov
pop
mov
rep
xchg
bound
rcr
mov
(bad)
lods
push
pop
xchg
add
mov
popf
hlt
sahf
daa
pusha
sub
and
popa
fldenv
mov
pop
jae
push
leave
or
nop
dec
mov
sub
xrelease
and
test
shl
mov
sbb
mov
lods
scas
dec
add
mov
imul
adc
repz
lock
xchg
dec
das
and
inc
int3
in
cli
add
mov
sub
dec
rcl
mov
ret
jge
mov
test
pop
inc
inc
imul
in
mov
mov
clc
fs
outs
pop
pop
push
mov
mov
ds
out
cmp
daa
sbb
cmc
aam
xor
add
mov
jecxz
xor
fsubr
mov
push
js
into
push
inc
int3
js
sub
adc
adc
xor
retf
sub
cmp
mov
repnz
mov
xchg
pop
stos
cmp
lock
pop
sub
cdq
clc
mov
mov
loope
xchg
sub
and
sbb
movs
jne
pop
leave
out
retf
(bad)
mov
loope
push
adc
sub
pop
repz
addr16
mov
js
mov
jg
nop
fwait
mov
imul
sbb
les
hlt
pop
pop
cwde
jg
ins
out
cmps
fwait
sub
cmc
pop
jo
mov
(bad)
xchg
loope
mov
or
dec
sbb
jecxz
sbb
addr16
jmp
cmps
scas
inc
jl
inc
repz
cmp
cmps
fs
hlt
in
lods
and
or
aad
js
dec
pop
aas
mov
push
inc
mov
ror
cmp
fucompp
ret
inc
fadd
cmps
cs
lahf
inc
cmps
scas
pusha
cmp
xor
clc
stos
add
jmp
out
aas
push
mov
and
scas
adc
test
test
setl
stos
fcomp
data16
push
pop
dec
pop
xlat
add
push
pop
inc
jns
pop
rol
push
and
out
out
pop
(bad)
jo
inc
popf
(bad)
nop
cmp
ins
dec
cmps
mov
or
dec
arpl
xchg
xlat
and
push
retf
ins
cmp
mov
js
jns
mov
inc
test
scas
add
nop
mov
ja
push
out
xor
cmp
cmp
mov
clc
dec
dec
mov
(bad)
addr16
cmp
cmp
enter
xchg
jne
imul
in
sub
mov
push
xchg
push
lods
mov
gs
mov
movs
rcl
imul
fist
cmp
cmps
pop
fild
pop
test
mov
and
addr16
mov
bound
in
push
sub
pop
daa
aad
outs
scas
dec
out
xchg
loopne
hlt
sahf
ret
mov
fistp
push
sbb
pop
xor
add
jp
push
fisttp
outs
cmps
ret
jbe
popa
mov
adc
test
inc
sbb
iret
add
push
xchg
lods
out
xor
xchg
dec
or
or
add
pop
in
push
pop
dec
test
daa
xchg
mov
daa
and
mov
daa
into
je
cmps
sub
cld
mov
fadd
cmc
sbb
test
or
push
jbe
shl
or
div
jnp
add
pop
addr16
jno
(bad)
aaa
mov
mov
dec
cmp
data16
inc
mov
inc
int3
xchg
jns
hlt
inc
neg
mov
js
movs
cld
imul
push
sbb
not
pop
or
popf
pop
in
icebp
xor
xchg
in
sti
mov
mov
popa
add
push
(bad)
and
mov
sub
adc
ss
es
pop
xchg
sub
sub
jns
sti
cmp
dec
loop
sar
xchg
aas
and
pop
arpl
xchg
push
sub
inc
stos
scas
test
sar
std
in
repz
adc
jno
mov
(bad)
adc
idiv
xor
xchg
jmp
pop
call
and
imul
xor
ins
(bad)
xchg
xchg
je
ror
adc
ins
gs
inc
sub
and
push
ds
xchg
or
mov
ffreep
addr16
add
rol
(bad)
pop
pop
cli
(bad)
push
mov
aaa
sbb
das
scas
popa
jecxz
and
sahf
mov
mov
in
mov
add
(bad)
pop
sbb
iret
test
mov
mov
xor
leave
fsub
in
and
outs
div
(bad)
loopne
test
sar
in
(bad)
cmp
fld
arpl
and
fidiv
cmps
mov
and
inc
inc
hlt
dec
lods
mov
sbb
movs
sbb
imul
dec
ins
outs
add
popa
sbb
jle
sub
(bad)
ja
dec
rcr
mov
dec
cmp
mov
and
mov
jnp
adc
mov
or
and
repnz
add
fcom
xor
jmp
inc
(bad)
stos
sub
out
rcl
inc
sub
lds
cmp
push
xor
push
pop
adc
out
clc
icebp
leave
pop
gs
adc
jp
pop
pop
sub
aad
xor
icebp
call
sahf
and
loope
mov
and
cmp
inc
mov
mov
aad
pop
sbb
shr
sbb
mov
retf
add
pushf
inc
cwde
int3
xchg
pop
mov
test
outs
push
xor
call
movs
in
jg
enter
movs
cmp
or
cdq
ret
repz
xchg
iret
hlt
fst
shr
test
and
sti
cmps
addr16
call
xchg
(bad)
ss
or
inc
sbb
aad
inc
sub
(bad)
mov
cli
push
inc
out
js
test
push
xor
scas
jmp
arpl
pop
mov
rol
add
mov
xchg
add
ja
mov
int3
aam
dec
and
repnz
neg
mov
(bad)
cmc
adc
outs
pop
and
adc
jmp
call
clc
ss
jle
test
mov
push
and
lods
sub
aam
xchg
add
xor
mov
cmp
push
rol
call
test
retf
ror
repz
les
mov
lods
lods
pop
sub
xor
aad
cld
fwait
dec
cwde
jnp
adc
test
sbb
(bad)
sbb
dec
popa
sahf
xor
pop
cmp
imul
fdivr
lahf
(bad)
sub
mov
test
fstp
das
or
dec
arpl
jmp
xchg
pushf
pop
hlt
fs
mov
push
push
ror
mov
jne
(bad)
popf
mov
adc
popf
ror
ret
cmp
sub
cwde
push
js
mov
jb
ss
and
xchg
test
ds
jae
sti
in
sub
mov
adc
inc
sub
jg
fcomp
arpl
mov
xchg
pop
sbb
(bad)
xchg
hlt
mov
jle
jle
mov
sbb
pushf
call
sbb
mov
hlt
mov
cmp
mov
sbb
loope
in
xchg
in
mov
inc
inc
stos
push
and
dec
mov
in
fistp
push
and
fdivp
std
fcom
rcr
cwde
jbe
push
sub
scas
sbb
or
inc
movs
repz
jle
pushf
or
adc
ror
leave
cmps
xor
fwait
cdq
jg
in
push
arpl
in
sub
frstor
xor
mov
jbe
ret
and
test
dec
dec
push
dec
cwde
dec
push
cmp
inc
or
or
(bad)
and
cwde
ret
mov
in
mov
scas
popa
lahf
loopne
es
jmp
imul
cmp
pop
stc
adc
jno
push
shr
nop
aad
push
in
cmc
and
mov
push
dec
ins
js
mov
and
test
xchg
out
mov
mov
fld
jl
or
aad
mov
pop
inc
inc
mov
cmp
into
leave
mov
push
adc
(bad)
cs
aad
int3
pop
xchg
push
xchg
sub
ficom
fcmovnu
mov
xchg
cs
jg
or
bound
inc
cmp
out
out
jle
sbb
add
test
std
fs
jl
pop
loop
add
fs
add
stos
ret
xor
xchg
out
call
mov
daa
add
popa
cmps
sub
sbb
les
fnstcw
aad
inc
fsub
xor
jp
inc
push
or
and
and
rcr
sbb
and
(bad)
xor
mov
mov
xchg
add
add
repz
cmc
sbb
sar
sbb
pop
cmp
(bad)
mov
jbe
mov
cmp
cmp
repnz
stos
scas
div
push
dec
shl
imul
cmc
retf
jbe
ret
sub
pop
cmp
cmp
mov
je
fcomp
push
jbe
repnz
aad
les
in
cmp
sub
clc
xchg
rcr
dec
sbb
cmp
mov
pop
mov
pop
pop
mov
in
icebp
sub
sar
and
pop
push
push
sbb
mov
sub
mov
retf
pop
dec
out
js
jp
call
add
lods
push
add
clc
int
lahf
(bad)
mov
add
jle
test
fstp
imul
mov
adc
inc
in
push
leave
dec
loop
sub
lods
pop
sbb
out
cmp
shl
sub
arpl
(bad)
adc
push
or
or
fst
dec
mov
push
mov
test
mov
les
add
out
jmp
dec
inc
les
sbb
pop
push
in
aas
push
outs
aaa
leave
sub
loope
or
jmp
leave
xchg
pop
sbb
(bad)
out
mov
out
in
test
adc
je
push
mov
xrelease
inc
movs
cmp
mov
inc
aam
push
test
sbb
cmp
pop
addr16
cld
fcom
sub
movs
sub
xlat
jae
addr16
scas
mov
jg
sub
std
sti
jae
divps
mov
icebp
pop
jp
xchg
stos
mov
nop
cld
imul
leave
and
aam
mov
sahf
push
adc
fistp
aam
cmp
lea
or
test
mov
neg
add
mov
call
mov
add
sbb
std
xchg
lds
out
inc
inc
cwde
stos
cmp
add
sbb
adc
cli
pop
or
int
inc
jbe
lock
inc
pop
call
sbb
add
ret
sub
cmp
add
or
add
xor
lods
imul
mov
adc
jne
nop
into
inc
jnp
sub
fsub
ins
(bad)
(bad)
xor
bound
fld
and
rep
lea
movs
jb
in
or
ss
xchg
in
dec
cmps
push
inc
cmp
les
fstp
in
mov
je
or
outs
mov
push
mov
(bad)
retf
test
cmps
push
pop
out
shl
xchg
and
mov
push
push
mov
lods
and
adc
test
push
out
jnp
cs
add
and
or
pop
adc
das
or
mov
push
mov
push
imul
inc
fcom
ss
and
outs
movs
sbb
or
pop
call
pop
das
or
mov
sti
js
mov
or
sub
mov
xchg
test
fisub
enter
repnz
xor
sub
jle
ins
xchg
push
cli
mov
push
loope
and
in
mov
in
cli
xchg
ins
dec
fnsave
hlt
push
fs
test
mov
pop
push
pop
xchg
fiadd
dec
fsubr
cwde
out
xchg
les
push
aam
in
mov
outs
xor
sbb
and
adc
daa
inc
inc
dec
and
enter
fadd
lds
mov
and
or
lds
(bad)
xor
mov
sbb
test
mov
mov
mov
add
dec
adc
aas
mov
or
(bad)
mov
outs
movs
add
stos
mov
sbb
mov
std
test
movzx
push
lock
inc
pop
cmps
xor
aaa
xchg
xchg
pop
rcl
out
loopne
pushf
imul
jmp
mov
cmp
sbb
inc
xor
ja
xchg
sub
jmp
int3
add
fldenv
jge
cmps
pop
sub
das
ins
mov
and
xchg
mov
mov
repnz
std
lock
into
call
sbb
std
mov
xor
dec
pop
jo
aad
cmp
push
inc
jns
push
jne
push
xchg
inc
dec
pop
pop
stos
test
cmps
call
inc
frstor
outs
ins
xor
loope
into
lock
mov
int3
adc
stos
cmp
pop
mov
jg
scas
add
jb
fwait
aad
or
pusha
cmp
sub
fld
ss
mov
xchg
mov
xor
sub
(bad)
cli
adc
pop
mov
adc
jmp
mov
jge
mov
(bad)
out
outs
mov
(bad)
sub
jg
cmps
mov
xchg
test
mov
popa
popa
push
push
cmp
or
jl
xor
pusha
stos
or
fisttp
imul
and
jmp
xor
xchg
or
xlat
adc
scas
dec
cs
lods
dec
stos
outs
push
cmp
cmc
add
loope
dec
jne
in
add
mov
ins
gs
imul
stos
mov
xchg
fwait
pop
mov
pop
dec
movs
mov
adc
(bad)
xor
jmp
imul
pusha
dec
scas
gs
inc
fld
sub
jbe
xor
inc
rol
pop
jg
outs
aas
lds
(bad)
sar
outs
cdq
stos
push
push
and
sbb
in
lea
scas
rcl
test
sbb
sbb
dec
and
sbb
cmps
fcom
addr16
sub
aaa
xchg
lods
sahf
mov
xchg
imul
sub
fmul
mov
xor
fidivr
not
aam
outs
fsub
jbe
leave
xor
stos
adc
or
push
dec
and
adc
push
jle
mov
pop
mov
pop
data16
push
jne
lds
sub
bound
adc
(bad)
enter
and
cmp
or
xor
pop
rcl
movs
and
xlat
xchg
out
jo
pop
jbe
mov
rol
mov
ss
dec
jg
jge
frstpm(287
cmp
rcl
sub
lock
mov
mov
loop
pop
outs
dec
mov
xor
aas
add
xchg
pop
xor
pop
call
jmp
pop
xchg
sub
imul
xchg
pop
ret
add
add
movs
out
xor
push
bound
(bad)
retf
pop
mov
mov
jecxz
ret
xor
loop
inc
popa
or
mov
pop
and
add
push
jp
mov
mov
pop
xchg
jnp
ins
gs
push
not
adc
inc
call
sbb
jl
fwait
lock
dec
and
cmps
mov
retf
jle
arpl
mov
cld
ror
pop
and
mov
xor
retf
fsin
es
and
inc
push
ror
pop
xor
adc
into
fcmovnb
clc
xor
jo
aaa
ret
add
movs
add
movs
inc
nop
mov
cmp
push
sub
out
test
xchg
cmps
hlt
xchg
mov
sbb
rcl
test
push
cmps
xor
cmp
add
icebp
scas
mov
in
mov
cmps
pop
mov
dec
nop
mov
add
jno
int
pop
xlat
out
xor
mov
in
outs
cdq
fwait
sbb
push
ins
push
popf
out
push
jp
imul
sub
popa
not
and
pushf
adc
imul
jl
retf
add
mov
sbb
inc
hlt
test
push
sub
retf
cmp
adc
lods
cmp
scas
sub
dec
sbb
mov
dec
cmp
retf
add
xor
dec
stc
outs
pop
pusha
xchg
movs
out
aad
cld
cwde
aam
push
fcomp
xor
hlt
loope
mov
sub
mov
stos
push
push
mov
sahf
sahf
je
sub
hlt
fidivr
sub
cmps
ret
fnsave
jmp
inc
push
lahf
icebp
pop
xchg
xor
(bad)
out
fcomp
jne
adc
xchg
push
hlt
jl
or
push
dec
sbb
out
dec
push
(bad)
movs
pop
mov
not
xchg
and
mov
sub
pop
jb
pusha
mov
mov
pop
xlat
jg
retf
bound
adc
sbb
je
and
mov
push
xchg
jecxz
pop
into
mov
xlat
adc
mov
pushf
jo
push
leave
mov
pop
fs
add
repz
sbb
xor
mov
inc
rol
or
pop
lods
movs
loopne
adc
cs
or
or
int
xor
add
jmp
jp
or
or
push
sub
out
test
out
mov
xchg
mov
pushf
xchg
pop
pushf
test
sub
test
cmp
jb
imul
and
(bad)
pusha
jle
pop
sbb
ins
mov
cmps
dec
xchg
test
or
cmp
movs
dec
fisttp
fnstsw
jmp
fsubr
dec
(bad)
push
stos
outs
mov
jecxz
fidivr
repnz
and
mov
push
pop
dec
movs
popf
arpl
adc
xchg
int
jne
stos
push
jmp
loop
sbb
mov
or
adc
cdq
outs
mov
(bad)
fld
jnp
lahf
dec
stos
es
inc
(bad)
imul
jg
push
icebp
add
pop
jnp
push
pop
xor
jle
sbb
pop
int3
loop
cli
push
outs
sbb
inc
inc
fcomp
(bad)
popf
xchg
push
aaa
mov
xchg
sub
and
popa
xchg
xor
pop
test
mov
dec
loop
xor
les
(bad)
out
add
xor
imul
out
mov
inc
mov
sub
repnz
xlat
rcl
call
inc
pop
jns
imul
add
mov
jg
in
enter
sahf
xchg
sbb
lock
sar
out
shr
push
push
push
jae
sti
sub
add
pusha
xchg
sbb
test
mov
std
pop
popa
and
jne
dec
mov
jg
aaa
inc
pop
xchg
(bad)
dec
fnstenv
out
mov
sbb
jmp
mov
cmp
(bad)
xchg
sub
mov
push
(bad)
xlat
fcmovbe
outs
js
inc
in
push
xor
fcomp
xchg
lods
mov
in
push
and
inc
mov
and
das
les
or
lock
mov
aad
jbe
mov
jmp
or
mov
jecxz
mov
cli
add
and
sbb
jmp
jle
repnz
sub
and
sbb
mov
sub
mov
test
dec
pusha
sub
ins
jae
(bad)
loop
(bad)
aam
lahf
enter
mov
js
mov
jecxz
inc
inc
and
jmp
pop
jg
mov
aaa
mov
popf
xor
push
or
mov
and
jle
xchg
dec
inc
outs
mov
jge
dec
imul
xor
sti
shl
arpl
and
loope
jle
(bad)
fisub
push
mov
mov
pop
fwait
inc
cmp
repz
push
mov
pop
imul
sahf
loopne
bound
lea
pop
not
add
push
mov
xor
mov
sbb
in
xlat
push
xlat
out
mov
stc
(bad)
push
inc
arpl
mov
(bad)
xchg
enter
push
ss
aam
sbb
xchg
xor
sar
jge
jbe
and
mov
inc
icebp
mov
test
dec
xchg
cmp
adc
fwait
add
and
test
pop
(bad)
xor
sbb
mov
in
add
add
stos
dec
icebp
mov
imul
inc
test
aaa
enter
add
shl
sub
ficomp
enter
cmps
push
cmc
loopne
mov
pop
adc
push
inc
retf
or
mov
enter
push
adc
das
(bad)
test
mov
and
in
push
out
cmp
fld
arpl
aam
xor
mov
mov
loopne
adc
cs
lar
or
and
jno
repnz
mov
repnz
retf
mov
ss
mov
mov
lods
jmp
jge
xor
lds
out
mov
dec
scas
aad
inc
fidivr
mov
pop
cmp
mov
in
ror
(bad)
aas
mov
pop
or
mov
es
dec
pop
jecxz
jg
sub
xchg
into
or
xchg
xor
or
push
in
mov
je
test
jmp
sub
pusha
ffreep
mov
jge
out
inc
xor
pusha
fcmovne
es
scas
loope
lods
sub
mov
movs
mov
ins
pop
dec
jmp
xor
jp
ror
jmp
sub
ja
or
out
xor
and
add
jb
mov
ss
xchg
test
jae
sbb
inc
jno
fst
sub
dec
mov
cmp
and
test
std
ds
adc
jno
or
idiv
popa
and
xchg
sub
in
ins
(bad)
repnz
inc
and
stos
mov
dec
inc
pop
cmp
jmp
pop
push
add
add
jns
mov
div
ret
jnp
add
xor
sbb
sub
out
cmp
or
push
add
inc
mov
arpl
cld
mov
aas
fldenv
pop
cmp
pop
jecxz
and
cmp
xor
dec
and
ret
loopne
jmp
imul
scas
sub
xchg
lods
sub
loop
push
add
sbb
xlat
out
or
xchg
sbb
test
cmps
pushf
stc
push
(bad)
int
add
push
xchg
xchg
(bad)
jmp
mov
adc
xchg
push
mov
icebp
sbb
icebp
cli
pop
clc
mov
push
xor
int3
call
and
or
jo
fdivrp
gs
jne
fsub
loope
mov
movs
mov
jb
out
add
push
repnz
mov
xor
xlat
xchg
push
push
mov
and
and
unpcklps
push
aas
dec
and
imul
into
xor
mov
icebp
js
sbb
ins
xchg
out
push
mov
add
fwait
pop
or
mov
dec
cld
aad
sbb
mov
cmp
int3
xor
fnstenv
and
inc
and
push
push
ret
je
mov
pop
push
fistp
xchg
adc
lea
mov
adc
push
and
xor
xchg
idiv
xlat
icebp
out
stos
add
popf
fcmovbe
inc
add
mov
and
push
push
loopne
and
pop
cmp
(bad)
and
mov
xor
(bad)
mov
aas
in
shl
add
cmc
ins
push
popf
add
fadd
adc
xchg
es
or
imul
sub
cmp
lods
ss
iret
movs
lahf
inc
push
ret
add
fst
mov
dec
ins
pop
sbb
retf
mov
ror
inc
jbe
push
popa
fist
or
je
mov
xor
pushf
fidivr
and
icebp
sbb
sar
mov
mov
(bad)
mov
fsubr
fcmovnu
(bad)
ss
xor
dec
cld
scas
dec
add
pushw
pusha
test
int3
or
pop
push
hlt
out
inc
jns
out
sub
adc
out
sbb
jns
mov
ja
call
sbb
shl
or
cli
sub
push
repnz
aad
mov
lea
mov
cs
mov
sbb
or
jbe
lods
rcr
jl
ja
push
mov
stos
add
data16
mov
adc
cmp
aaa
cdq
ins
sbb
xor
dec
popf
out
add
test
leave
adc
push
xchg
add
push
mov
jo
les
sbb
pop
dec
test
add
inc
aam
cmps
mov
test
and
sub
xor
ja
leave
xor
sub
jge
mov
ins
cmps
aaa
add
push
pop
mov
fucom
js
test
mov
test
mov
mov
das
cmp
loopne
cld
dec
movs
ins
xchg
fbstp
mov
sbb
adc
fmul
inc
mov
add
mov
(bad)
mov
push
dec
test
fldcw
pop
adc
scas
jnp
leave
cwde
and
inc
xchg
adc
inc
cmc
fadd
xor
pop
xor
jns
and
std
xor
sub
push
sbb
imul
lea
in
ins
add
mov
mov
shl
stc
scas
pop
inc
inc
jbe
inc
mov
out
jg
push
lahf
dec
ror
push
loop
jl
xor
leave
mov
xlat
scas
jle
fsub
mov
xor
test
outs
cwde
aas
hlt
pop
jle
lahf
(bad)
fdiv
data16
adc
icebp
and
sbb
mov
shr
imul
mov
js
add
or
adc
jbe
mov
cdq
adc
mov
fs
js
sahf
stos
ss
mov
movs
xchg
xchg
test
xchg
cmp
scas
mov
and
rcl
inc
jmp
std
bound
sbb
fs
push
mul
add
in
movs
jp
popf
jo
aam
(bad)
lods
or
aad
xor
fimul
ror
sub
popa
(bad)
(bad)
nop
call
or
jns
add
std
ret
mov
mov
mov
jmp
xchg
cwde
mov
popa
aam
jp
adc
jle
inc
add
addr16
(bad)
mov
dec
dec
shl
mov
xor
leave
and
sahf
fwait
cmp
cli
jmp
fisub
ins
es
adc
or
iret
cli
pop
fs
mov
jo
push
ins
mov
adc
jnp
loop
lods
fbstp
inc
fbld
sbb
mov
das
lods
dec
outs
js
imul
xor
jb
stc
sbb
ins
das
sbb
cmp
mov
adc
(bad)
pop
and
mov
fistp
xchg
arpl
lds
and
xchg
jge
enter
jae
dec
pop
std
cwde
retf
jecxz
dec
jg
lods
or
push
sbb
fnsave
pop
pusha
push
clc
div
mov
ret
shl
pusha
dec
mov
test
adc
idiv
outs
call
cli
aas
ins
sbb
sbb
cmp
or
adc
pusha
in
neg
and
lea
adc
mov
imul
aam
dec
sbb
mov
dec
sbb
push
repnz
mov
or
hlt
push
fdivr
adc
push
test
loopne
stos
fiadd
xchg
and
mov
call
jb
sub
push
dec
adc
jge
mov
jae
and
leave
mov
xor
and
sbb
fimul
movs
adc
and
sbb
addr16
sahf
retf
(bad)
cmp
add
mov
push
sub
push
fisubr
rol
inc
xor
in
mov
pop
fistp
aaa
sbb
jg
and
dec
fsubr
xor
or
inc
push
add
das
icebp
pop
ret
pop
push
dec
mov
jg
and
pop
inc
ficomp
shl
jbe
popa
mov
lds
sub
cmp
xchg
xor
pop
jb
rol
sbb
iret
add
xchg
les
xor
fst
mov
cwde
(bad)
dec
push
ds
retf
pushf
cmps
and
fsubp
inc
mov
pop
jmp
call
test
cmc
mov
sub
xor
jle
mov
jge
clc
call
jmp
mov
mov
xchg
add
js
in
add
(bad)
cmc
movs
ds
imul
push
(bad)
fisttp
cmp
jl
and
sti
mov
adc
xchg
push
ret
stos
mov
aad
or
xor
in
pop
fnsave
ret
outs
test
out
call
fadd
outs
fstp
jmp
test
sbb
loope
iret
dec
cmp
and
mov
leave
jle
xor
cmp
cmp
call
push
jmp
out
mov
aad
iret
jmp
and
dec
ror
xor
aaa
sahf
test
cdq
add
rol
lods
jne
gs
cmp
fwait
(bad)
aas
xor
or
pusha
sub
rcr
aam
out
imul
push
stc
mov
(bad)
enter
ret
push
dec
ja
int
scas
in
mov
or
fisubr
daa
adc
mov
(bad)
fisttp
cmps
repnz
jle
mov
into
mov
les
gs
dec
int
adc
add
lods
mov
loope
in
xor
sti
sbb
xchg
mov
mov
shl
icebp
int
mov
pop
pop
jge
test
and
(bad)
mov
repz
mov
pop
int3
aas
in
mov
fs
jmp
mov
rcr
sub
(bad)
sbb
addr16
into
pop
dec
cmp
adc
into
ja
or
sub
push
ins
repnz
add
pop
ins
xor
stos
fwait
xor
jnp
mov
jno
and
push
xor
outs
fnstsw
mov
or
ficomp
jl
fsubr
fnstcw
int
aas
or
dec
xor
add
xor
mov
(bad)
mov
pop
test
or
cwde
mov
xchg
add
cmp
addr16
fmul
fidiv
call
stos
dec
pop
test
scas
pop
xchg
stc
mov
ins
(bad)
adc
mov
cmc
dec
scas
adc
add
jno
push
push
and
xchg
hlt
mov
xchg
mov
ss
aam
fs
add
das
sub
cmps
adc
mov
xchg
pop
shl
add
out
pop
bnd
add
sub
imul
dec
xchg
aaa
cmp
xchg
and
push
push
dec
enter
imul
scas
cmp
pop
sbb
and
inc
pop
push
push
test
add
inc
jge
in
push
jnp
fisttp
ret
and
mov
fisttp
mov
mov
sub
inc
mov
sbb
fsubr
clc
sub
int
enter
test
or
sub
xlat
pop
pop
push
scas
adc
aad
dec
and
outs
fldenv
mov
add
pop
dec
ins
pop
sar
cmps
dec
mov
mov
add
retf
stc
or
mov
mov
and
dec
dec
or
ret
xchg
lods
test
scas
out
jecxz
adc
call
inc
jg
mov
ss
lods
cwde
daa
cmp
gs
jge
xchg
adc
(bad)
cmp
jle
dec
js
es
scas
jns
js
add
pop
mov
mov
retf
cmp
mov
and
retf
push
cmc
fist
out
mov
cwde
scas
adc
test
popf
push
popf
cs
mov
addr16
and
fs
jl
arpl
cmp
xor
inc
popf
inc
or
xchg
push
mov
pop
dec
dec
fisub
cmps
mov
in
jb
es
mov
test
loopne
lods
enter
jae
dec
aad
dec
and
mov
pop
dec
jmp
cmc
pop
les
pop
inc
jb
xchg
add
jne
fcom
fwait
jb
retf
mov
mov
lock
push
sbb
cli
pop
into
jne
ror
pop
sbb
sub
test
jmp
daa
iret
vcvtsi2sd
cmp
(bad)
push
or
cmp
and
in
mov
bound
or
xor
scas
inc
sar
test
cmps
sbb
rcl
sahf
push
lahf
jle
fs
fcomp
xor
jmp
scas
mov
int
hlt
xlat
imul
add
aam
push
push
xlat
push
add
and
call
movs
sti
add
sbb
pop
jne
test
ficom
cld
mov
jnp
aam
stos
out
cmp
scas
cmp
mov
lods
aas
jp
scas
pop
or
pop
pop
je
xchg
daa
sbb
ins
outs
clc
cmp
mov
mov
dec
dec
in
mov
mov
retf
adc
push
repz
(bad)
add
or
jle
pop
or
stc
aaa
stc
mov
xchg
xor
mov
jne
je
sub
aaa
cs
and
or
xchg
rcl
rol
aad
xor
in
mov
popa
adc
dec
jo
ins
push
dec
cmp
pop
push
push
add
sbb
int3
fidiv
xor
mov
adc
jecxz
adc
mov
adc
in
loope
xchg
ins
xchg
fiadd
into
mov
inc
or
and
stc
push
cmc
dec
test
mov
dec
mov
sbb
inc
icebp
je
lods
push
sub
inc
pop
add
fnstcw
bound
push
outs
pop
push
dec
mov
(bad)
pushf
sub
dec
cmps
mov
cmp
mov
loop
mov
pop
shl
shl
jne
int
cmp
iret
jne
test
mov
xor
jle
mov
cmp
push
cmp
dec
cli
fidivr
dec
aas
shl
pop
inc
inc
fmul
cmp
jge
rcr
mov
cmp
or
in
cmp
sub
aad
mov
add
or
imul
hlt
enter
lea
jmp
add
inc
push
mov
mov
fs
ja
loope
mov
dec
fild
jnp
rol
adc
shl
outs
sbb
ss
jp
in
stos
inc
fucomp
pop
movs
icebp
iret
sbb
add
in
icebp
mov
cdq
jp
cdq
add
mov
repnz
shl
jno
(bad)
stos
inc
xchg
pop
out
xor
sub
shr
retf
pushf
(bad)
or
lahf
in
outs
es
fwait
les
(bad)
jmp
jnp
cs
(bad)
jp
dec
adc
xor
ret
popf
scas
or
fdiv
pop
sub
jmp
mov
dec
mov
jl
int
mov
push
fwait
fwait
pminsw
es
das
inc
call
test
adc
push
jl
jle
mov
adc
xor
rol
je
or
je
fwait
and
mov
test
in
dec
cmp
nop
add
push
ret
cmp
xor
pop
sbb
dec
out
push
mov
mov
bnd
das
jge
mov
xchg
jecxz
in
pop
out
in
xchg
sbb
mov
or
dec
cwde
mov
dec
movs
pop
popa
icebp
sub
cmp
(bad)
call
push
inc
outs
cmp
cmc
loop
push
jge
hlt
mov
ins
cli
sub
pop
mov
pop
cmp
in
xchg
sbb
xor
cmp
mov
inc
sbb
ins
inc
push
outs
in
stc
xor
xor
inc
or
jo
jnp
aaa
or
(bad)
iret
fdivr
xor
nop
mov
imul
xor
out
xchg
(bad)
or
add
sti
pop
mov
call
lds
out
add
adc
mov
pop
xchg
retf
pop
add
(bad)
or
sar
inc
xchg
lock
sbb
shl
cld
ja
push
scas
sbb
adc
adc
inc
xchg
adc
jne
out
pop
or
icebp
mov
outs
shl
mov
push
xor
imul
add
mov
pop
(bad)
fnsave
adc
loop
sbb
daa
out
ret
retf
pop
sub
test
fnstcw
ret
das
push
loope
xchg
xchg
inc
inc
loope
and
xlat
pusha
sub
dec
add
push
aaa
sar
xchg
mov
mov
loop
jb
mov
lock
mov
into
lods
(bad)
sar
out
pop
push
dec
shl
cld
mov
test
pop
loop
nop
mov
dec
push
gs
sub
fild
daa
sbb
sbb
std
push
add
adc
or
lds
sti
pop
out
mov
pop
dec
xor
cdq
mov
cli
mov
(bad)
movs
and
push
into
dec
xlat
aad
lods
cmp
mov
popa
cli
icebp
lods
jmp
neg
dec
and
retf
inc
pop
xlat
pop
mov
pop
rol
add
cli
mov
lea
int3
mov
cmp
mov
cmp
mov
es
ins
xor
jle
pop
or
or
mov
pop
sub
pop
pusha
sub
jno
sub
mov
cld
loopne
fsubr
aam
popf
lock
ror
call
cmp
(bad)
sbb
inc
pop
xor
sub
cmps
(bad)
add
xchg
in
movs
or
pop
fiadd
repz
loopne
xchg
xor
mul
mov
pop
aas
aaa
rol
ins
dec
or
xor
or
in
js
rcl
xchg
push
jl
mov
jle
lods
pop
lahf
je
imul
xor
mov
loope
cdq
xchg
loope
adc
call
das
xchg
movs
push
or
sbb
rol
ins
in
dec
out
dec
cli
daa
fwait
jmp
xchg
dec
cs
outs
loop
loopne
and
icebp
mov
retf
adc
stos
stos
enter
lods
lods
mov
test
jp
pop
mov
mov
dec
imul
add
imul
cli
jle
test
xchg
pop
jns
push
or
jo
ds
and
movs
and
mov
add
sbb
mov
mov
mov
jl
addr16
xor
test
pop
adc
loop
(bad)
stos
icebp
fst
cmp
repz
ins
jmp
test
fiadd
fsubr
mov
in
and
mov
dec
adc
rcr
pop
leave
push
mov
sahf
push
push
mov
jno
mov
and
push
ins
mov
adc
sar
cmp
push
cld
inc
in
(bad)
fcom
(bad)
call
inc
pop
pop
jnp
(bad)
fcmove
mov
cmp
jg
jbe
adc
inc
jl
add
lods
sub
xchg
pop
and
cdq
outs
sub
out
ds
push
xchg
rol
(bad)
add
mov
movs
push
js
(bad)
xchg
movs
sub
call
push
push
xchg
xchg
shr
shr
out
frstor
cmp
mov
inc
push
and
push
mov
adc
dec
out
mov
inc
(bad)
clc
ins
dec
bound
lods
push
push
bound
inc
jp
mov
test
rol
add
sbb
cmps
outs
stos
push
pop
push
adc
into
aad
shr
pop
mov
pop
mov
js
sub
out
dec
jb
hlt
or
cli
jno
pusha
mov
push
iret
inc
jb
xchg
ins
ins
cmc
js
jns
stc
iret
fist
sub
aas
lods
movs
inc
cmp
sbb
mov
test
inc
xchg
lea
push
rol
mov
loop
inc
sub
push
push
dec
lods
sub
idiv
mov
in
movs
cmp
inc
scas
repnz
sub
fild
xor
xor
retf
cmps
xchg
push
aaa
adc
daa
stos
dec
scas
imul
lahf
push
outs
(bad)
pop
dec
mov
sub
or
xor
hlt
xlat
mov
test
fisub
and
cli
xchg
je
fwait
sub
fbstp
or
jmp
jmp
leave
sti
mov
(bad)
adc
loope
jne
enter
lock
mov
repz
call
retf
pop
xor
cwde
dec
hlt
and
mov
cwde
mov
retf
and
ss
scas
mov
shl
xchg
fucomip
arpl
movs
fistp
cwde
pop
xlat
pop
mov
out
inc
cmps
jno
adc
fisubr
cs
sub
pop
xchg
aas
mov
test
sub
xchg
and
mov
ja
sti
rol
dec
jo
fwait
inc
lock
nop
test
cmps
jmp
mov
or
adc
cmovo
pop
xor
sbb
and
imul
dec
jecxz
jmp
inc
or
cmp
and
push
mov
loop
mov
xchg
push
mov
aad
int
xchg
push
adc
inc
mov
dec
imul
or
ja
cmps
xor
stos
push
pop
lahf
not
push
ins
cmps
xchg
cld
sub
clc
out
xor
pop
das
aas
xor
neg
fsub
pop
add
shl
in
ret
mov
push
ret
cwde
cs
outs
aaa
or
not
dec
pop
adc
xlat
mov
test
std
or
pop
adc
std
cmp
cwde
ret
xchg
scas
fsubr
jmp
sbb
lods
jns
dec
cmp
in
movs
jg
jae
daa
jo
and
sbb
push
aam
out
fld
add
mov
jl
push
jne
fild
mov
imul
and
pop
dec
lds
cmp
fiadd
dec
jnp
push
jae
cmps
shl
(bad)
and
xlat
sub
mov
mov
push
add
mov
pop
inc
imul
xchg
sub
push
pop
add
ret
pop
jbe
or
loope
scas
push
sub
and
sbb
in
jmp
shr
xchg
mov
add
leave
fwait
and
mov
or
in
push
sbb
stos
(bad)
das
cmp
retf
(bad)
cmp
out
int
push
in
cld
and
jne
xor
scas
ret
movs
cmp
pop
aam
fstp
jne
sub
sbb
hlt
pop
ret
pop
movs
and
pop
mov
mov
loopne
fidivr
out
mov
jmp
mov
sbb
test
cmp
mov
mov
push
ss
mov
jnp
jne
sub
(bad)
mov
outs
imul
cmp
mov
push
inc
pop
pop
or
push
pusha
(bad)
out
in
gs
imul
mov
inc
retf
lods
lds
addr16
and
xor
sahf
add
dec
sti
jnp
mov
pop
or
ja
push
cmp
sti
push
mov
jo
movs
retf
loopne
jae
dec
cmps
xchg
imul
push
adc
push
xchg
push
lds
aas
ins
pop
dec
(bad)
aad
fnstsw
fstp
cmps
repz
xchg
mov
or
and
dec
nop
mov
push
call
bound
mov
mov
call
(bad)
xor
mov
mov
sub
rcl
mov
movs
and
ror
jg
cmc
iret
jbe
xchg
or
aaa
sti
sbb
hlt
adc
push
scas
les
push
out
pop
sub
mov
jno
xor
dec
or
jnp
retf
add
popf
mov
dec
add
stos
test
xchg
in
jnp
pushf
repz
imul
into
ret
fisub
mov
push
xlat
cld
and
add
bound
mov
leave
(bad)
clc
gs
or
lods
mov
aaa
hlt
mov
test
xor
scas
mov
outs
loope
push
lahf
imul
push
sbb
mov
xchg
div
das
(bad)
lods
je
test
les
mov
mov
test
shl
mov
shr
pop
je
data16
push
popf
test
mov
dec
int
xchg
scas
mov
leave
jno
xor
or
and
loope
lock
mov
bound
and
shl
comiss
es
popa
ds
ins
fist
(bad)
iret
test
or
jecxz
pop
sbb
xor
jo
jg
enter
xchg
mov
xor
fwait
data16
push
dec
scas
pop
sub
das
adc
scas
push
push
hlt
aam
cmp
push
outs
enter
hlt
int
dec
nop
inc
add
daa
jnp
in
nop
push
cmp
sahf
cmps
js
xchg
int
push
mov
add
jbe
cmp
cwde
inc
xchg
jbe
pushf
shl
scas
pop
scas
les
(bad)
cmp
dec
pop
and
or
xor
popa
mov
fmulp
mov
rol
fsubr
mov
push
jmp
mov
adc
cmp
call
test
jnp
retf
push
pop
aam
push
lock
sbb
repnz
dec
ins
icebp
scas
xchg
sbb
scas
gs
or
dec
mov
lods
repz
sbb
(bad)
addr16
nop
jnp
aad
lahf
lods
rcl
sbb
and
sbb
ins
rol
pop
imul
push
ss
jp
cmp
inc
out
mov
fadd
aam
ds
(bad)
mov
pop
dec
mov
xchg
ds
aam
pop
or
call
fdiv
and
mov
shl
add
jnp
call
outs
cwde
jo
mov
inc
and
push
inc
add
mov
push
(bad)
add
or
mov
std
aad
mov
dec
popa
mov
fisttp
mov
jns
sub
jae
and
inc
mov
ret
add
inc
bound
mov
pop
jp
or
sar
sahf
in
mov
nop
pop
cs
or
sub
jb
jb
sbb
push
(bad)
into
bound
js
sub
pusha
sbb
xor
fs
and
ins
pop
jmp
xor
jae
ss
jecxz
push
add
mov
adc
push
mov
pop
adc
sub
pop
jl
sbb
cmp
call
outs
dec
out
inc
lock
cmp
adc
and
and
dec
mov
push
stos
popa
jo
sub
outs
in
dec
stos
mov
inc
repnz
aas
xchg
in
add
push
mov
ja
pop
sahf
outs
sbb
xchg
retf
sub
cli
jmp
dec
add
fnstenv
(bad)
mov
jb
pop
add
sbb
arpl
fidiv
or
jb
mov
inc
imul
into
inc
retf
ss
test
jae
adc
mov
ret
leave
xchg
push
or
cmc
add
aad
inc
adc
outs
adc
mov
adc
shl
scas
cmp
sbb
or
icebp
cmps
pop
sub
xor
out
sub
mov
mov
loope
mov
movs
sub
jge
popa
cmps
out
xlat
fcom
sar
cli
mov
push
jmp
retf
rcr
ja
jl
and
clc
nop
mov
jp
in
ja
retw
xor
dec
xchg
movs
push
mov
push
lods
enter
push
cdq
xor
std
(bad)
pop
popa
cmc
and
jge
lods
mov
adc
xor
retf
push
or
clc
fnstcw
pop
push
xchg
mov
test
fld
mov
pop
push
add
xor
call
or
out
sbb
xor
jbe
or
push
add
xor
add
pusha
push
or
jmp
imul
jg
lods
outs
cmps
stc
and
ss
sub
clc
aaa
jno
add
ret
push
push
mov
and
xchg
test
in
retf
jl
add
xor
arpl
(bad)
xchg
stc
jecxz
adc
mov
iret
cld
loop
cmps
test
sub
das
push
leave
gs
sub
xchg
loop
pop
jmp
cmp
xchg
out
cs
add
popa
iret
out
mov
std
test
pop
inc
enter
hlt
out
retf
jmp
push
xchg
es
mov
fisttp
(bad)
or
pushf
and
and
pop
inc
out
dec
out
cwde
loope
mov
loope
enter
std
or
(bad)
mov
push
and
pop
pop
push
adc
test
pop
xor
and
adc
dec
mov
ja
ins
push
dec
mov
or
fwait
js
cld
adc
fist
ror
xlat
cmp
sub
ins
and
mov
mov
mov
mov
stos
push
fimul
pop
push
cmp
jns
adc
icebp
repnz
test
es
pusha
inc
and
sbb
cld
push
ds
(bad)
cmp
lahf
in
inc
add
and
push
xchg
xor
je
fdiv
jno
adc
pop
or
stos
pop
xor
mov
jae
ficomp
dec
inc
dec
pop
(bad)
adc
mov
and
pop
out
(bad)
fcomp
out
mov
mov
and
push
and
(bad)
mov
in
push
in
mov
inc
mov
xor
cmp
push
push
cmps
pop
xchg
mov
mov
push
ins
inc
jns
jbe
fucom
mov
cmp
pop
stos
jl
push
cdq
xchg
inc
sar
lods
(bad)
pop
sbb
adc
ds
leave
xchg
loopne
adc
jg
sbb
pop
fdiv
loop
mov
jmp
push
addr16
(bad)
pusha
jl
setne
out
shr
push
loopne
stos
stos
ins
call
adc
aaa
sbb
lods
mov
adc
mov
les
iret
pop
xchg
mov
inc
xchg
lea
and
adc
and
inc
cli
arpl
mov
or
movs
pop
inc
mov
add
xor
rcr
add
dec
dec
jnp
test
js
fcmovnb
stos
and
mov
lea
sub
cmp
cmp
mov
loop
retf
in
das
popa
fsubp
aad
push
lods
repz
(bad)
jmp
aas
mov
lock
mov
ror
mov
sbb
lahf
and
fs
cmc
enter
jb
lds
xor
jle
hlt
test
and
jo
sahf
mov
pop
xor
sub
jge
sahf
pop
mov
js
xor
xor
jmp
mov
jge
cmc
xor
aaa
push
cdq
ins
push
out
shl
inc
add
cwde
sti
adc
(bad)
mov
xchg
and
push
cmps
out
popw
lahf
and
mov
mov
adc
and
scas
mov
test
test
dec
ins
retf
shl
cwde
in
call
movs
push
push
mov
es
jbe
stc
mov
(bad)
pop
xchg
cdq
js
(bad)
mov
ror
je
cmp
pushf
pushf
cmps
rol
push
fs
stc
inc
ret
fdivr
ret
or
xor
nop
test
ds
shr
mov
cmps
cmp
lods
inc
and
push
push
xchg
shl
xor
outs
ror
dec
cmp
jp
pop
sbb
inc
mov
inc
or
push
jge
ss
jmp
loopne
test
mov
pop
stc
adc
adc
data16
adc
aaa
inc
mov
and
fisubr
test
mov
dec
push
ins
bound
jb
ins
sbb
xchg
rcr
pop
leave
mov
xchg
pop
mov
inc
xchg
or
je
mov
add
shr
neg
sahf
dec
jl
repnz
mov
test
xchg
mov
les
mov
xor
cmp
(bad)
in
adc
push
out
jmp
mov
jo
push
hlt
stos
and
jmp
test
mov
loop
inc
mov
ret
adc
add
scas
pop
add
int3
sub
das
sbb
shl
sub
iret
mov
gs
sub
pop
mov
in
pop
clc
aas
add
jg
ja
and
xchg
retf
hlt
popf
jecxz
mov
sub
ror
dec
xchg
cmp
aad
out
or
aas
mov
push
sbb
iret
call
dec
cdq
lea
inc
mov
fidivr
jae
jecxz
int
rol
or
jp
mov
shl
xchg
mov
sub
mov
rol
add
mov
adc
nop
fdivr
rcl
sub
iret
add
pop
cmp
xor
retf
(bad)
jns
add
xchg
or
mov
or
or
ins
sbb
and
push
fwait
jno
test
nop
pop
jmp
shl
mov
dec
adc
fidiv
lock
fwait
arpl
cmp
adc
aas
ins
icebp
repz
xchg
in
pushf
mov
push
inc
xchg
jecxz
or
repnz
iret
mov
pop
or
fdiv
dec
inc
pop
loop
mov
ret
not
int
or
imul
sub
mul
or
pushf
jle
mov
bnd
and
pop
std
xchg
xchg
jecxz
or
pop
mov
ret
jae
xor
inc
out
push
push
add
arpl
xor
jbe
sub
and
call
xor
bound
(bad)
push
adc
mov
popf
mov
dec
mov
dec
mov
push
push
or
inc
lods
or
sbb
cli
xchg
call
fimul
pop
sbb
mov
cld
push
les
call
push
sub
arpl
retf
mov
mov
popa
jae
(bad)
sub
nop
ror
cs
xchg
xor
out
shl
loope
in
pop
inc
or
dec
push
jnp
loopne
outs
enter
pop
loope
retf
shr
repnz
fld
adc
xchg
jmp
in
dec
lahf
mov
lahf
into
gs
sub
pop
in
iret
and
(bad)
mov
mov
xor
call
xchg
sti
mov
adc
ja
pop
xchg
sub
xchg
add
in
ficomp
loope
cld
sbb
es
shl
xchg
test
in
mov
sbb
inc
xchg
mov
inc
cwde
popa
sbb
nop
jp
test
(bad)
movs
fwait
xor
cmp
movs
and
lock
pushf
xchg
inc
add
and
mov
popa
push
aam
xchg
dec
lock
mov
push
out
sbb
dec
loopne
inc
add
adc
mov
adc
adc
popa
cmps
push
xchg
scas
fsubr
ins
sub
and
fnstenv
push
cdq
cmps
and
je
loope
(bad)
pop
inc
adc
jg
push
sub
enter
or
mov
sbb
ss
pop
cmp
rcl
mov
gs
jecxz
icebp
arpl
cmp
jmp
les
dec
inc
mov
clc
dec
aad
in
enter
sahf
add
inc
cld
xor
(bad)
dec
mov
fidiv
jecxz
(bad)
cmp
in
call
daa
hlt
sub
mov
ins
out
xchg
xchg
inc
inc
nop
cmp
pusha
fstp
popa
adc
xchg
or
ss
loop
or
ja
jae
jmp
or
push
rcl
and
mov
stos
mov
or
sub
xchg
(bad)
mov
mov
sub
stos
xchg
fs
xlat
dec
push
push
or
icebp
cwde
pop
jmp
xor
cli
xor
outs
adc
stos
xor
or
mov
rol
mov
(bad)
aad
and
inc
mov
sub
out
dec
sti
sar
dec
adc
adc
mov
adc
xchg
test
inc
xor
stos
in
retf
data16
movs
unpckhps
into
mov
sahf
ds
cmp
imul
add
cli
shr
xor
or
into
xor
jo
mov
dec
outs
out
mov
fchs
jnp
sub
push
neg
out
mov
aam
dec
mov
sbb
jecxz
inc
mov
sar
sbb
jo
sbb
aam
test
sbb
jno
imul
retf
sbb
out
mov
mov
enter
in
add
sub
ret
ficomp
mov
jae
or
adc
loop
outs
mov
mov
or
jmp
xor
xor
fldenv
das
je
jg
jp
and
xchg
xchg
sahf
(bad)
test
mov
(bad)
ja
pop
jo
adc
pop
and
int
add
add
sub
je
sub
out
adc
jl
mov
inc
les
push
or
cmp
sahf
fs
(bad)
loope
pushf
sub
sbb
mov
inc
push
enter
pop
cld
pushf
stc
adc
add
jbe
adc
push
adc
xor
inc
xchg
rcl
mov
mov
adc
dec
(bad)
hlt
jl
cmp
xchg
xchg
outs
sbb
sbb
das
mov
test
cmps
ja
or
scas
mov
fcomp
pusha
xchg
adc
movs
sub
icebp
cmp
dec
pop
jle
ja
retf
int3
stos
test
pop
in
add
xchg
pop
(bad)
iret
neg
ret
inc
pop
xor
cwde
std
cld
jp
into
repz
mov
push
vmwrite
jl
cmp
add
add
xchg
mov
inc
bound
xor
mov
jmp
sbb
push
movs
rcl
scas
mov
jl
inc
fwait
jg
add
sbb
xor
add
push
iret
adc
dec
out
lahf
in
loopne
adc
mov
fwait
mov
out
test
adc
lock
inc
xchg
sbb
(bad)
in
sbb
xchg
pop
and
or
xchg
cmp
pop
sub
sbb
je
xchg
nop
pop
xchg
cmp
lods
fidivr
cmp
jnp
mov
in
adc
adc
pop
fdivr
push
aaa
inc
adc
rcr
push
fld
sar
std
sub
fldpi
clc
das
xor
dec
(bad)
in
mov
dec
sbb
mov
fstp
popa
dec
mov
ss
cld
jle
and
cmp
das
xor
and
pop
mov
xchg
repz
jmp
add
push
push
gs
test
fadd
pop
mov
jns
cmp
add
mov
repz
mov
sub
pop
(bad)
test
icebp
push
ds
(bad)
leave
jns
repz
add
mov
push
pushf
dec
or
dec
hlt
sar
out
pop
mov
lock
or
dec
cdq
mov
xlat
neg
xor
fcmove
ins
loopne
pop
in
pop
jecxz
test
dec
mov
rcl
mov
push
js
mov
jae
xchg
and
push
xor
xchg
dec
mov
outs
dec
xchg
fldpi
mov
bound
jne
push
std
test
xchg
push
scas
out
ror
imul
pop
dec
mov
sbb
jns
fs
ss
xchg
mov
ja
mov
jne
cmp
pop
(bad)
fisub
rcr
and
push
lahf
xchg
sti
pop
mov
(bad)
jns
add
jnp
(bad)
into
js
mov
dec
pop
loope
js
adc
jbe
push
nop
push
mov
(bad)
popa
aas
sub
cwde
in
inc
xlat
jmp
dec
out
jo
imul
push
jp
ficom
les
jbe
iret
push
(bad)
mov
jle
aad
pop
mov
iret
dec
and
jl
pop
sbb
aam
pop
pusha
test
mov
outs
mov
sub
outs
push
mov
repz
fimul
std
mov
or
sahf
(bad)
in
jb
rcl
out
jge
loopne
nop
fdiv
sbb
sub
mov
repz
or
push
add
jns
cmc
dec
pop
adc
jb
cmc
inc
jl
jp
or
daa
lds
icebp
ret
stc
scas
sbb
rol
ss
mov
pop
dec
mov
mov
pop
sub
loope
jl
shr
mov
sbb
test
xor
loop
in
repz
mov
shl
pop
xchg
lds
add
inc
pusha
adc
lock
and
mov
ror
dec
scas
in
jmp
ret
gs
sbb
cmps
sbb
fistp
repnz
fst
xor
push
dec
xchg
nop
mov
mov
sahf
jb
adc
shl
nop
ja
int3
push
call
add
inc
test
inc
nop
fimul
out
(bad)
push
and
or
adc
mov
jle
mov
dec
inc
pushf
xchg
jb
ins
js
not
jmp
pop
ja
leave
adc
out
hlt
pop
popa
or
lods
(bad)
scas
and
pop
mov
ja
xchg
nop
leave
lahf
mov
dec
mov
scas
mov
pop
std
mov
sub
jae
mov
pop
mov
mov
(bad)
out
dec
or
mov
out
mov
(bad)
gs
(bad)
addr16
and
mov
lds
push
sbb
test
and
jg
stc
push
das
addr16
dec
and
push
mov
or
adc
jae
add
es
ror
not
mov
cli
js
(bad)
mov
xchg
test
mov
or
jnp
(bad)
add
or
dec
shl
(bad)
mov
mov
inc
sub
outs
repnz
addr16
or
xchg
ins
lods
mov
int3
les
jge
xor
add
pusha
loop
add
movs
sub
fcmovne
mov
push
loop
lods
icebp
stos
call
sbb
aas
xor
shr
pop
push
and
and
fwait
or
dec
pop
ds
and
movs
scas
shl
lds
inc
or
or
xor
add
jecxz
jg
stc
imul
xlat
inc
iret
loop
imul
xor
cwde
movs
pop
or
int
rcl
test
jae
std
dec
and
jle
and
push
mov
imul
lds
push
add
jno
scas
pushf
mov
inc
into
cld
jl
pusha
ins
loop
sahf
dec
popa
pop
xchg
cmps
xchg
nop
imul
cmp
std
add
aas
cwde
cmp
xor
sbb
pop
sbb
out
or
cmp
jge
jle
add
mov
adc
pusha
dec
jno
dec
sbb
sti
pop
dec
dec
mov
ins
cmc
leave
xor
xor
clc
arpl
fs
popf
aas
pop
and
movs
iret
ins
lods
mov
xor
sub
adc
das
cld
xchg
ret
mov
test
mov
fcomp
mov
ds
inc
xor
clc
sub
retf
repnz
pop
mov
into
not
int3
sbb
pop
addr16
inc
add
lock
mov
mov
shl
hlt
xchg
test
mov
xor
pop
div
jae
sbb
mov
shl
pop
mov
clc
pop
cmp
push
sbb
rcr
xchg
push
mov
movs
or
or
dec
and
pushf
mov
out
cmp
scas
inc
fiadd
dec
or
mov
jnp
inc
in
and
in
mov
mov
add
daa
xchg
sbb
cs
shl
(bad)
mov
xchg
inc
mov
clc
shr
retf
xor
pop
inc
aam
in
out
clc
scas
das
push
int
xchg
push
enter
ret
ins
add
jecxz
dec
cwde
inc
sub
test
xchg
dec
retf
sub
nop
imul
inc
lods
adc
xchg
ficomp
stos
sub
mov
test
adc
or
clc
sub
ins
jmp
and
add
inc
dec
push
test
repz
sbb
clc
and
std
int
retf
je
in
arpl
repz
or
cdq
xchg
bound
jge
clc
xor
inc
push
ret
mov
xlat
sub
repnz
xor
retf
dec
fidiv
cmp
stc
jnp
and
and
jle
test
jo
addr16
inc
dec
mov
es
fidivr
xor
fld
cmp
pop
leave
cwde
jecxz
pop
mov
dec
mov
data16
add
(bad)
dec
jno
sbb
arpl
adc
dec
mov
add
mov
and
mov
test
popa
mov
jecxz
stos
dec
push
(bad)
xor
mov
inc
cmp
scas
xchg
(bad)
cmp
or
and
sub
jmp
dec
lods
fstp
cwde
mov
inc
(bad)
sbb
int
fidivr
lds
mov
sbb
int3
fs
and
or
bound
or
cmp
int3
add
(bad)
mov
(bad)
ss
pusha
sbb
daa
or
push
jb
jo
je
(bad)
fidivr
cmp
fmul
mov
aam
mov
fs
sbb
and
adc
loopne
mov
mov
sbb
push
and
lods
and
std
outs
mov
mov
or
dec
push
or
(bad)
fcomp
xchg
(bad)
call
mov
in
xchg
das
sahf
(bad)
lods
addr16
not
adc
bound
ins
data16
bound
ss
not
dec
daa
out
aad
add
aam
ss
pop
rol
les
xor
or
jno
jl
shr
into
mov
dec
jo
pushf
dec
push
cmc
popa
inc
sbb
xor
loop
jae
adc
popf
pop
sti
pop
in
cmp
sbb
adc
loop
mov
mov
push
jg
pop
mov
fstp
(bad)
imul
stos
(bad)
aam
popf
mov
adc
ja
mov
cmp
repz
icebp
push
push
in
xchg
jb
push
push
jecxz
scas
push
cmp
fstp
sub
in
sub
mov
or
inc
int
daa
mov
ins
lods
daa
mov
mov
pop
cwde
out
sub
icebp
retf
xchg
cld
sbb
mov
xchg
sub
(bad)
arpl
mov
jecxz
aaa
sbb
outs
pop
mov
fwait
js
jnp
pop
push
bound
(bad)
xchg
fcomi
push
mov
jnp
sub
sub
pop
int3
jae
mov
jle
aad
sub
mov
fwait
imul
push
xor
mov
sti
loop
ins
jno
(bad)
loop
addr16
iret
(bad)
std
ins
std
test
mov
aad
cmp
pushf
inc
mov
pop
inc
jmp
ror
ror
pop
pop
imul
xor
mov
or
pop
in
shl
aam
jg
jne
dec
hlt
adc
imul
lock
js
cmp
mov
xchg
push
mov
pop
pop
mov
das
out
es
inc
lods
add
movs
test
test
fnstcw
adc
cmp
loopne
push
lahf
adc
test
shr
out
imul
xchg
stos
repnz
adc
and
jmp
fldlg2
inc
mov
into
xchg
cmp
adc
xchg
cmp
not
xor
call
cmp
mov
push
daa
lds
(bad)
push
cs
dec
and
daa
jns
xor
pop
pop
cmc
retf
adc
adc
les
fisttp
cmp
jmp
popf
push
lock
retf
pop
cmp
(bad)
push
fcom
cmps
xchg
rol
mov
in
loop
xchg
jg
mov
dec
out
ret
xchg
jb
jle
mov
mov
lds
jo
sbb
push
pushf
shr
mov
pop
hlt
lods
xchg
iret
xlat
xchg
adc
aas
push
dec
push
jbe
mov
fwait
dec
cmc
stos
repnz
dec
fadd
stos
popf
mov
adc
mov
jmp
sub
add
fist
fisub
and
test
out
sbb
dec
test
test
ss
aas
fist
loopne
arpl
jns
cmps
ror
add
mov
pop
mov
dec
dec
clc
lds
cmp
das
mov
add
xchg
in
cmps
dec
mov
ret
mov
cmps
les
in
dec
pop
inc
aad
cdq
popf
push
adc
push
mov
ja
cdq
cmp
jl
cmp
dec
int
int
add
mov
push
xor
adc
imul
out
cli
sub
mov
mov
out
xor
dec
stos
scas
pop
out
cmp
pop
popa
cmp
or
dec
lds
xor
imul
in
pop
mov
and
sti
add
test
cli
cli
jae
push
mov
xor
movs
popa
ret
in
mov
sub
retf
test
adc
cmp
aas
jnp
cmp
xlat
das
sub
pop
scas
stos
mov
sbb
xor
fmul
fnstcw
pushf
mov
push
mov
mov
daa
ficom
adc
aad
and
inc
push
aaa
dec
sub
dec
adc
(bad)
xor
cmps
and
mov
jmp
mov
jg
(bad)
jge
inc
(bad)
in
cmp
xchg
mov
push
outs
call
dec
mov
jmp
add
repz
adc
push
loopne
stc
sti
adc
std
sti
mov
jmp
xchg
test
add
lock
mov
cmp
sub
jo
stos
and
aad
push
mov
xor
dec
mov
mov
and
mov
ja
call
dec
mov
popa
test
outs
dec
cmps
lea
fdiv
dec
mov
mov
enter
xor
pop
xor
cdq
and
adc
je
call
mov
cmps
dec
sahf
xchg
jb
mov
fbld
(bad)
cmc
out
cmc
jmp
dec
fs
jg
mov
mov
xchg
or
js
xchg
loope
cld
or
pushf
mov
jmp
jo
test
jle
popf
add
(bad)
loopne
lods
test
push
stc
pop
movs
pop
mul
cmp
push
repnz
push
test
bound
cwde
or
mov
jae
mov
call
popf
data16
sbb
pop
dec
inc
adc
sbb
repnz
pop
mov
and
out
jmp
adc
or
cmc
ins
xor
mov
retf
je
push
cmps
loopne
(bad)
stc
lods
jmp
inc
push
sub
sbb
int
sbb
dec
aas
mov
leave
push
pop
outs
iret
out
(bad)
mov
push
loop
sbb
mov
mov
mov
movs
cs
add
adc
test
inc
mov
js
push
xchg
adc
or
repnz
sub
shl
out
xor
movs
pushf
into
ds
mov
sub
mov
sbb
push
xor
pusha
mov
js
jne
or
cmp
pushf
dec
inc
xchg
cmps
fnstcw
and
mov
dec
cdq
xchg
lock
jae
pop
test
and
fldz
inc
push
adc
mov
fmul
push
pop
mov
pop
dec
call
mov
adc
sub
pop
xchg
cdq
rol
je
mov
aad
inc
jge
je
movs
xor
je
adc
dec
add
add
test
cmp
cmps
cmp
das
arpl
add
loope
sub
jmp
inc
push
dec
sub
lahf
inc
out
dec
mov
ror
aaa
push
repnz
mov
mov
xchg
xor
dec
dec
call
mov
dec
in
pop
and
test
lods
mov
sti
mov
or
mov
pop
(bad)
ins
daa
scas
add
(bad)
in
xor
fsubr
lahf
xchg
adc
mov
cwde
mov
int3
in
jle
aas
sbb
mov
jl
inc
jmp
or
fwait
xchg
cmc
pushf
cwde
fdivr
pop
sbb
inc
xchg
vmwrite
pop
mov
inc
fs
mov
in
(bad)
stos
test
in
mov
add
xchg
in
mov
lahf
gs
imul
fwait
xor
fbld
or
mov
test
xor
lock
fdivr
sub
out
sbb
mov
add
pusha
jmp
mov
jmp
and
jno
retf
adc
cmp
sub
push
(bad)
jo
and
push
enter
mov
fisub
xchg
iret
pusha
add
clc
sbb
lods
add
das
fs
lds
(bad)
scas
sbb
adc
jb
xor
or
adc
fmul
loopne
inc
cmp
(bad)
aad
aas
xor
add
mov
sar
jmp
fcomp
shr
pop
ins
inc
out
jbe
(bad)
cdq
pop
stos
inc
push
outs
call
and
mov
jns
mov
icebp
das
xchg
jae
loop
and
pop
(bad)
jno
sub
or
lds
add
daa
das
and
xchg
cld
ss
jg
gs
dec
icebp
inc
jno
dec
inc
mov
imul
fnstenv
pop
cmp
xor
xor
lea
loop
ret
loope
pop
fisubr
push
cs
in
stos
stos
mov
lock
inc
push
cmps
xchg
rcr
imul
dec
mov
or
ja
fs
lds
and
pop
jae
jbe
xor
sub
or
mov
adc
cmp
xor
bound
cdq
adc
jg
xor
cld
aam
lods
out
mov
fidiv
mov
cli
neg
jbe
test
cmp
and
push
aam
cmp
rcr
adc
fucomip
cmp
xchg
dec
vsubsd
scas
stos
mov
dec
cwde
push
mov
test
loopne
cs
mov
ins
icebp
jmp
pop
and
data16
cmp
jno
pop
mov
loop
clc
outs
shl
push
fdiv
nop
mov
xor
cwde
pop
xchg
and
js
jno
cmp
or
pushf
add
adc
and
jne
pop
das
push
(bad)
repz
xchg
in
cmps
pop
sub
pop
(bad)
inc
cld
in
sub
inc
and
push
cmp
retf
adc
lds
and
out
rcl
test
push
xchg
mov
xor
sbb
cmp
cld
out
push
ins
arpl
es
les
adc
in
jnp
adc
data16
imul
pop
xchg
fidiv
inc
sub
adc
bound
outs
inc
pusha
and
(bad)
shr
ja
pop
test
sub
clc
sub
push
int
xor
pop
xchg
mov
push
add
dec
sub
mov
mov
retf
(bad)
dec
inc
xchg
(bad)
sbb
xchg
cmps
sub
pop
ins
xchg
sbb
jecxz
jle
ja
add
rcr
pop
loopne
sti
push
pop
mov
push
jmp
ds
fbld
sbb
ficom
clc
je
es
adc
lock
jne
aas
in
or
xor
sbb
add
sub
int
movs
cmp
inc
sub
and
ret
stc
sub
outs
clc
dec
ds
fstp
xor
add
idiv
fnstsw
enter
je
dec
inc
cs
pop
ficom
aad
into
xor
loopne
js
scas
jns
push
inc
cmp
je
ror
add
or
cmps
stc
sub
fwait
or
jle
lahf
fist
jb
mov
lahf
inc
sbb
dec
pop
jae
cli
outs
xor
gs
mov
and
lods
dec
mov
dec
and
mov
lds
inc
push
imul
cwde
pop
xlat
dec
es
xchg
movs
jno
(bad)
pop
rcr
add
lods
neg
fwait
dec
pop
pop
(bad)
pop
dec
in
fcmovbe
retf
inc
bnd
jns
xor
lods
lock
and
xor
retf
scas
pop
xor
cld
or
shr
mov
out
mov
pop
jl
xchg
xchg
mov
cmc
mov
jl
or
push
nop
xchg
or
adc
pop
mov
mov
(bad)
xlat
add
adc
dec
fidivr
fcmove
lea
mov
rol
mov
scas
test
leave
ins
sbb
or
sbb
fs
cmp
aad
dec
lds
loope
dec
cmp
pop
push
fdiv
inc
mov
dec
push
test
sbb
ss
ins
jg
retf
rcr
jge
das
or
enter
push
cmps
aam
fdivp
mov
ss
fldcw
cmp
icebp
jmp
lock
lock
add
mov
fcmovu
and
mov
pop
lahf
dec
test
jmp
or
inc
ja
sub
cmps
inc
or
ficom
aaa
push
repnz
mov
aad
test
(bad)
and
mov
xrelease
add
ins
scas
mov
stc
mov
jns
adc
inc
ret
shr
scas
popa
xchg
cmp
neg
and
sub
lahf
sbb
lea
mov
(bad)
cmp
clc
mov
adc
push
push
pop
jmp
sub
mov
sahf
jmp
lea
pushf
aaa
xor
xchg
test
mov
push
and
iret
pop
inc
pop
out
mov
cmp
push
cwde
pop
jge
shl
jns
add
xchg
es
adc
add
sbb
sub
icebp
nop
nop
mov
jmp
loope
pop
inc
adc
pop
jmp
or
add
cmp
ins
mov
mov
inc
mov
jl
popf
and
push
adc
cld
push
pop
add
add
push
sbb
shr
mov
nop
aad
dec
std
jne
mov
sbb
outs
(bad)
adc
push
push
and
sbb
imul
jo
xchg
fwait
mov
jl
xor
es
sbb
mov
test
adc
adc
fsub
cli
xchg
dec
mov
(bad)
and
dec
xchg
jbe
fisttp
js
xor
jnp
dec
jmp
mov
sub
scas
clc
xor
(bad)
inc
add
int
sub
pop
mov
dec
lods
dec
cmps
mov
mov
idiv
cmp
(bad)
test
jb
dec
cmps
popa
push
cmp
outs
outs
adc
stc
push
sub
cmp
push
pop
pop
fisubr
pop
fimul
fldenv
and
ja
ficom
xchg
les
out
(bad)
fdiv
ret
dec
es
stos
jo
nop
into
in
adc
mov
inc
push
fucomp
adc
(bad)
and
jbe
imul
dec
into
dec
ror
mov
loope
cmp
ss
add
popf
xchg
or
push
leave
into
and
std
js
repz
inc
jne
fidivr
jecxz
std
mov
xchg
fmul
pop
iret
xor
pop
and
outs
in
ss
in
mov
out
cmp
xor
mov
or
sbb
cwde
(bad)
call
add
sbb
fadd
jbe
sub
lea
push
ficom
mov
xchg
mov
sbb
nop
imul
sub
push
stc
jnp
pop
cmp
aad
dec
xchg
xor
in
das
test
sub
add
xchg
bnd
rcr
out
div
sub
sbb
scas
jb
jge
iret
mov
and
push
ds
jle
jno
fst
jne
xor
dec
pushaw
jmp
retf
arpl
pusha
add
xchg
mov
xchg
in
int
scas
dec
pop
addr16
fild
push
mov
fwait
pop
div
mov
add
push
out
adc
aad
mov
push
jl
aaa
ss
in
lods
ret
aaa
dec
or
iret
pop
ss
mov
lds
push
xchg
jnp
shl
ret
out
mov
clc
jns
dec
and
loop
pop
fs
pop
jecxz
xchg
inc
das
shl
retf
fidiv
test
xchg
enter
lds
loope
mov
pop
add
test
imul
hlt
cmovno
xchg
adc
cmp
das
ja
or
movs
push
daa
jmp
push
or
push
mov
test
push
mov
iret
cmp
fdivr
imul
push
les
into
push
cld
xchg
pop
add
rcr
hlt
mov
mov
xchg
push
les
jge
xchg
stos
and
test
jne
jle
das
icebp
ror
push
repz
push
mov
mov
vpalignr
jmp
push
iret
jg
fisttp
add
inc
(bad)
jmp
cmp
push
adc
dec
fcmovu
(bad)
xchg
mov
ins
je
imul
push
das
mov
cmovne
fiadd
icebp
lock
fdiv
xor
push
aaa
stos
mov
ja
mov
and
dec
in
jg
fwait
dec
mov
loopne
cmps
test
mov
sub
xor
push
(bad)
pushf
pushf
cmp
mov
hlt
xor
and
test
imul
fstp
pop
stc
cmp
push
and
pop
mov
je
dec
mov
dec
in
cwde
cmp
nop
test
ja
and
cmp
and
dec
adc
pop
cmc
dec
es
sbb
jp
fsub
mov
es
xor
xchg
cmps
pop
push
cmc
scas
pusha
pop
sar
xchg
int
xlat
stc
(bad)
mov
push
icebp
out
pop
hlt
leave
loope
stos
mov
and
mov
mov
jne
jno
inc
pop
fdivr
test
and
aas
movs
inc
test
mov
push
add
hlt
adc
fucomi
repnz
cdq
cld
pop
movs
rcr
pop
dec
xchg
vmread
outs
rcr
xchg
fsub
clc
enter
mov
mov
lds
adc
sbb
or
dec
cs
mov
and
(bad)
std
pop
(bad)
sbb
push
shl
pusha
adc
push
call
je
jge
mov
jge
bound
sub
das
cmc
sub
in
xsavec
adc
jmp
cmp
jbe
out
fstp
mov
dec
aad
dec
xchg
ja
mov
pop
xor
adc
jb
fwait
div
not
sti
cmp
and
mov
mov
mov
test
inc
daa
addr16
cli
fcmovb
push
das
aad
add
add
xchg
pop
push
(bad)
lock
cmps
aad
lods
std
xchg
(bad)
fst
xor
lods
les
add
sahf
inc
dec
and
iret
sbb
dec
sub
xchg
mov
sbb
and
daa
sahf
idiv
call
cwde
inc
arpl
into
cmp
sbb
push
sahf
(bad)
xor
test
or
repz
pop
mov
and
xor
pop
mov
scas
pop
pushf
in
and
repnz
cmp
inc
aaa
in
adc
ja
imul
out
adc
cmps
cmp
xor
loopne
daa
int
mov
pop
or
sbb
call
sub
loopne
je
inc
jmp
out
adc
call
loope
in
and
in
stos
ror
loope
push
(bad)
push
jecxz
add
inc
mov
movs
movs
aas
mov
iret
(bad)
mov
pusha
sub
fcomp
pusha
rcl
inc
cmc
dec
jle
xchg
fs
pop
cmp
aam
xor
sbb
dec
imul
sub
ficomp
es
jns
mov
jge
mov
jae
sahf
push
fld
push
je
mov
repnz
lahf
lds
xor
ss
push
sbb
sub
lahf
jp
je
add
ins
movs
ins
clc
out
nop
leave
mov
repz
xchg
enter
popf
mov
fstp
pusha
pushf
outs
jl
stc
add
mov
or
push
mov
pushf
fiadd
mov
push
aas
sbb
and
leave
js
push
sbb
mov
ss
push
mov
pop
jl
push
dec
sti
icebp
fisubr
(bad)
or
idiv
int3
int3
aas
sbb
jle
xchg
bound
pop
push
cmps
push
call
sbb
jl
stc
fstp
neg
cmp
mov
lods
in
push
fcomp
neg
jno
inc
or
ret
sbb
mov
repz
outs
xchg
mov
cdq
shl
pop
lds
retf
int
lods
repnz
adc
out
push
mov
adc
inc
push
call
mov
ins
outs
dec
ror
test
sbb
cld
cmp
mov
mov
mov
jbe
iret
xor
sbb
jns
sbb
movs
repnz
mov
jecxz
cmp
inc
pop
pop
ret
mov
retf
scas
jb
mov
dec
stos
or
adc
(bad)
call
and
jne
jno
xchg
frstor
es
fiadd
fdiv
(bad)
aad
and
int
push
scas
xchg
add
cmp
das
jne
shld
cmc
add
fwait
addr16
add
jmp
test
call
test
xchg
inc
(bad)
mov
mov
outs
xchg
xchg
sub
mov
dec
into
cld
bound
xor
sbb
iret
daa
pop
sub
pop
jb
mov
icebp
iret
jo
int
pop
add
mov
or
mov
repnz
aaa
jnp
stc
ja
dec
loopne
lods
adc
and
inc
or
mov
add
xor
pop
(bad)
in
dec
fist
push
shl
pop
cmp
xchg
rol
xchg
scas
mov
out
daa
outs
dec
sub
(bad)
lea
add
mov
outs
ret
(bad)
stos
sbb
xor
adc
std
push
in
sub
mul
pop
and
cmps
stos
dec
mov
jp
xor
out
sub
mov
rol
in
or
mov
cdq
and
outs
sbb
pop
lea
dec
scas
retf
cmps
add
jne
adc
sub
or
in
dec
test
mov
js
adc
bound
movs
rcl
aas
lock
aad
out
jp
or
adc
mov
fidiv
and
cmp
sbb
int3
adc
jno
loop
test
shl
(bad)
mov
pop
(bad)
or
daa
test
and
sti
les
push
push
xor
push
repz
mov
add
and
iret
aas
cs
adc
addr16
out
mov
out
jecxz
add
and
out
mov
ja
xchg
xor
inc
(bad)
sbb
push
mov
loop
sub
push
ds
push
xchg
sub
mov
cmp
jmp
xchg
pop
dec
out
cmps
jo
inc
inc
jl
dec
pop
adc
(bad)
pop
cli
lock
inc
ret
add
pop
mov
and
test
adc
xlat
dec
and
ins
lea
jns
stos
xor
mov
fld
fadd
xchg
mov
pop
test
lods
outs
sar
test
pop
or
lds
pop
jae
sub
dec
pop
rcr
outs
leave
xchg
push
rol
in
or
mov
sbb
retf
push
pop
dec
push
cmc
les
mov
out
(bad)
std
sbb
out
shl
das
cli
sbb
rol
cmps
ret
and
inc
in
mov
inc
pusha
pop
mov
or
gs
cmps
and
add
dec
dec
xchg
sub
hlt
ror
ins
mov
inc
aaa
retf
cmp
jbe
cmp
sahf
out
xor
xchg
mov
jecxz
out
inc
xchg
pop
mov
inc
inc
rcl
(bad)
pusha
out
inc
push
aad
jno
cmps
nop
inc
or
es
arpl
push
cdq
ror
mov
jae
in
cld
dec
ret
outs
push
stos
rcl
cmp
dec
xor
aas
retf
dec
xchg
adc
aaa
xor
mov
test
mov
mov
cmp
div
addr16
call
adc
popf
fnstsw
jae
call
fcom
pop
(bad)
sbb
mov
xchg
dec
lds
iret
cmp
push
fisub
pop
frstor
dec
sub
stos
cmc
std
inc
ret
les
lods
xchg
ja
jmp
jecxz
or
(bad)
repz
repz
je
out
mov
xor
and
jmp
jno
push
mov
lahf
scas
xor
movs
je
cmps
jbe
adc
mov
sahf
mov
xchg
dec
jns
mov
js
ret
cmp
fstp
jnp
dec
in
push
and
jns
push
or
int
nop
pop
mov
inc
inc
dec
iret
pop
cmp
jne
sub
call
or
test
jnp
hlt
xor
(bad)
aaa
das
jle
pop
std
ret
dec
adc
daa
ins
xchg
cmp
int
test
sub
add
popf
cdq
loop
inc
movs
inc
mov
scas
arpl
scas
pushf
out
(bad)
loope
mov
add
(bad)
dec
mov
(bad)
in
xor
xor
inc
jbe
mov
fs
stc
jle
retf
adc
add
mov
xchg
add
or
pop
stc
cld
repnz
std
and
cmp
pop
test
icebp
xor
and
dec
mov
loopne
loope
iret
inc
pop
(bad)
movs
xchg
aaa
inc
dec
sti
fs
sbb
lds
push
sub
sub
cmp
xor
nop
lea
pushf
jp
xchg
cmp
pushf
shl
rol
dec
jle
(bad)
fimul
jnp
xor
imul
fbld
mov
mov
ins
call
and
sahf
jne
cwde
xor
sbb
push
ficom
push
jb
out
repnz
xchg
or
je
sti
mov
ins
and
(bad)
imul
cmp
mov
dec
jne
push
xchg
ret
repz
fbld
mov
ins
cmps
mov
inc
push
xor
imul
push
jmp
inc
pusha
scas
loope
push
fistp
call
inc
hlt
jp
xchg
add
inc
aad
and
sbb
mov
dec
pop
pop
sub
lods
lods
push
stc
hlt
push
mov
lahf
lahf
shl
jecxz
xchg
mov
rcr
or
sbb
xor
cmp
hlt
sti
sub
mov
push
test
xor
loope
in
add
nop
loop
leave
cs
in
xchg
mov
push
jns
into
lock
mov
inc
data16
mov
push
in
and
xchg
xchg
xchg
bound
clc
mov
push
das
jne
mov
mov
lods
mov
test
ja
fwait
fs
(bad)
sar
(bad)
jmp
scas
sub
or
cmps
int3
(bad)
and
and
lods
retf
repz
test
mov
ror
imul
or
icebp
sti
push
jl
push
idiv
imul
jmp
push
aas
fucomi
repnz
jns
xchg
push
pop
arpl
push
les
sbb
in
enter
(bad)
aad
icebp
dec
lea
and
sub
je
pop
sbb
test
and
dec
pop
bound
xor
test
outs
sbb
pop
add
sbb
xor
(bad)
jl
push
jae
enter
stc
rol
imul
data16
enter
mov
xor
sbb
mov
xchg
dec
aad
enter
and
icebp
dec
jle
movs
int
cmp
ror
or
outs
add
xchg
popa
add
push
jmp
and
test
xchg
mov
pop
push
pushf
ins
outs
out
popa
icebp
(bad)
pushf
push
scas
mov
pop
bound
sbb
pop
or
(bad)
inc
xchg
mov
fldcw
retf
loopne
lods
sub
add
outs
imul
adc
inc
fdiv
mov
cmp
mov
xchg
repz
or
and
das
and
(bad)
sub
jmp
sub
push
add
or
mov
add
sbb
ror
inc
pop
mov
add
stos
jo
inc
icebp
lock
loop
ret
setg
fldenv
jg
jl
and
fistp
clc
jb
lea
mov
sub
cmc
inc
xchg
dec
rol
cmp
fstp
sub
adc
jg
sbb
add
fdivrp
push
mov
adc
mov
pop
push
xchg
scas
in
cmp
dec
cmp
lods
mov
stos
adc
xchg
pop
call
cdq
movs
sti
cmc
js
lea
(bad)
lds
pop
les
xchg
push
ins
popf
imul
jl
fs
push
imul
rcl
jne
(bad)
xor
sub
dec
shl
jle
sub
mov
inc
xchg
(bad)
nop
(bad)
jne
mov
sbb
inc
and
xchg
jl
jns
add
jns
and
xchg
push
pop
(bad)
mov
aas
lods
ds
mov
sbb
pusha
fcomp
mov
mov
pushf
mov
loope
movs
(bad)
dec
jg
pop
sub
sub
inc
gs
(bad)
jmp
call
stc
cmp
push
mov
dec
adc
mov
push
push
sbb
xor
pop
aaa
mov
jp
outs
mov
int
fs
int3
je
int
mul
mov
mov
bound
or
lods
pop
sar
popf
retf
jb
xor
sub
ret
ja
(bad)
dec
jg
sbb
cmps
xchg
rol
fcom
sub
fucomip
push
cld
jnp
fsub
imul
push
xchg
and
dec
call
lods
fcomi
jnp
cmp
jl
and
fisttp
ins
xor
dec
xchg
imul
in
mov
div
mov
ins
push
leave
shl
stc
cmp
arpl
cmp
or
mov
adc
jle
imul
bound
push
mov
stc
cmp
cmp
retf
in
pop
inc
in
data16
ins
sar
mov
lods
bound
adc
mov
lods
pop
bound
add
inc
add
ret
push
sbb
pop
push
jge
xchg
jp
scas
mov
dec
into
into
lods
xchg
lahf
pop
jns
xchg
out
sub
jns
arpl
pop
rcr
jl
pop
scas
or
sub
jecxz
dec
mov
adc
inc
daa
icebp
hlt
pop
out
jno
out
or
mov
cdq
dec
mov
mov
xlat
movs
push
outs
int3
lods
shl
mov
sbb
rcl
pop
imul
dec
out
inc
(bad)
aam
ror
add
or
mov
in
dec
inc
es
xor
shl
add
add
cdq
clc
add
or
inc
mov
test
jno
sbb
ins
(bad)
xchg
aad
fisttp
lods
adc
mov
mov
aaa
jmp
jg
jl
xchg
mov
loopne
stos
test
test
pusha
inc
test
jnp
jp
lock
sbb
stos
ja
push
icebp
inc
mov
jnp
mov
lds
arpl
sub
mov
sub
ror
mov
xchg
ins
ins
mov
mov
mov
movs
in
dec
dec
mov
fcom
(bad)
movs
js
adc
mov
loop
enter
fnsave
data16
mov
imul
mov
push
ficom
push
sbb
das
mov
push
dec
stos
push
mov
adc
pop
inc
xor
jle
mov
push
sub
popa
aas
int3
jns
sbb
cs
mov
mov
dec
stc
div
mov
fild
sbb
lahf
xchg
adc
push
and
cmp
stos
out
out
js
mov
xchg
das
bound
push
mov
clc
fwait
pop
scas
cdq
cmps
pop
hlt
cmp
loope
inc
mov
mov
adc
mov
sbb
sbb
mov
rol
leave
add
test
ror
inc
jns
xor
aam
mov
clc
mov
jecxz
out
(bad)
mov
scas
sbb
sti
idiv
or
sub
mov
cmc
push
ror
mov
push
jbe
cmps
dec
movs
adc
stc
inc
retfw
pop
pop
adc
rol
sbb
retf
dec
test
xchg
cmps
sub
and
imul
dec
adc
pop
ins
jmp
or
ret
imul
mov
sbb
loopne
ins
add
pop
call
push
and
iret
addr16
ror
popa
lock
mov
ret
sbb
lahf
add
add
iret
dec
and
xchg
cmp
sbb
loop
mov
loope
test
inc
clc
fcomp
repz
mov
mov
or
xor
lods
in
cmp
add
sub
fwait
pop
inc
xor
out
and
or
jbe
fisub
call
xor
xchg
jle
dec
adc
xchg
mov
bound
inc
xchg
lods
jecxz
ficomp
add
push
cmps
jo
test
dec
test
arpl
cmp
push
mov
loope
dec
sbb
popf
sbb
mov
hlt
mov
jnp
or
pusha
std
jno
retf
add
mov
out
inc
pop
ins
push
movs
in
test
fwait
push
sbb
jno
sti
pop
jle
jle
sbb
imul
(bad)
js
push
or
fdivr
sbb
loopne
call
jge
ret
jo
cmovs
jge
mov
call
pop
into
mov
js
out
setl
push
add
out
adc
ja
mov
(bad)
push
inc
sti
aaa
stos
pop
out
adc
add
adc
adc
add
mov
mov
lds
lahf
popa
xor
inc
(bad)
sub
push
repnz
fdivrp
scas
ja
hlt
push
jg
fcmovu
push
mov
cmp
jae
mov
imul
rol
add
imul
mov
loop
cwde
pop
mov
adc
adc
jmp
jbe
aaa
pop
xor
in
and
add
test
bound
ror
adc
adc
mov
or
mov
sar
mov
sti
rcl
add
add
dec
lds
xchg
mov
sbb
scas
inc
push
in
out
icebp
push
push
pushf
arpl
nop
stc
sbb
dec
shr
dec
in
jecxz
jne
imul
out
sub
jo
inc
jl
bound
xor
cmps
inc
jg
pop
test
icebp
xor
call
push
aad
adc
and
aad
jae
mov
jl
xchg
pop
test
jmp
cmp
or
jge
outs
int3
inc
xor
dec
in
pusha
inc
sar
add
f2xm1
mov
ret
repnz
out
daa
inc
push
call
fcomp
jmp
mov
jb
test
adc
sub
fs
jmp
(bad)
aaa
aam
cmp
jge
pusha
or
cs
jmp
dec
xor
shr
lods
mov
test
push
call
push
sbb
into
rol
aas
ror
jns
mov
push
add
mov
cmp
sub
in
adc
push
imul
fisubr
adc
jne
sbb
gs
int3
mov
and
push
cmps
js
or
adc
gs
adc
imul
xchg
das
pop
dec
hlt
rol
cwde
(bad)
pop
push
in
xchg
pusha
out
pop
xchg
inc
sbb
push
or
gs
ror
fidivr
push
adc
outs
in
mov
mov
or
push
push
jo
push
ins
or
push
push
push
sar
or
push
neg
test
ror
adc
repnz
sbb
aaa
sti
mov
out
mov
rol
adc
cmps
jg
dec
int3
popf
in
clc
enter
mov
push
out
aas
std
mov
xor
jg
push
pop
hlt
out
test
ret
sub
push
mov
xchg
loope
mov
lods
in
mov
and
int
or
push
cmp
test
push
ins
push
js
and
test
cs
push
and
pop
test
fcom
sbb
mov
in
jmp
pop
cmp
cmp
jbe
or
scas
call
mov
push
sar
push
and
xchg
mov
push
or
imul
add
jnp
es
jg
arpl
pop
jecxz
bound
lods
push
scas
mov
xchg
adc
mov
out
bswap
dec
dec
push
or
and
popa
push
push
cli
jnp
mov
cmps
scas
imul
(bad)
push
mov
xchg
popf
or
fisttp
call
push
push
gs
jmp
inc
xor
mov
mov
and
dec
push
outs
mov
sub
pop
mov
xor
inc
ins
inc
dec
movs
cmp
aad
sbb
pop
jo
fs
cmp
(bad)
out
jbe
loop
scas
jmp
pop
popf
(bad)
xlat
scas
inc
push
push
inc
cmps
jb
xor
add
add
pop
add
nop
jle
add
pop
std
sbb
sbb
aas
mov
daa
push
pop
scas
mov
fisub
and
rol
loope
push
push
ds
div
jmp
add
ja
jecxz
repz
cmp
mov
adc
jmp
inc
fild
pop
into
pop
cmp
sbb
xchg
movs
fisub
inc
mov
(bad)
call
mov
mov
(bad)
push
fisubr
cmp
xchg
lahf
retf
aaa
aad
fist
xchg
int3
sbb
imul
fsubr
arpl
repz
or
pop
in
sub
mov
lock
test
dec
pop
jo
inc
sbb
mov
cwde
(bad)
out
(bad)
mov
std
je
adc
push
movs
pusha
ja
imul
(bad)
jmp
or
xor
push
sub
in
stc
dec
mov
mov
div
iret
push
or
jecxz
test
xchg
pusha
xchg
and
popf
shr
fadd
iret
dec
data16
faddp
mov
aaa
adc
cmp
mov
adc
retf
fistp
sbb
xor
cmp
sbb
out
adc
pop
imul
xchg
adc
pop
or
jno
jp
(bad)
add
fiadd
jmp
pop
xor
aam
push
jge
sti
mov
add
cmp
ja
movs
and
shl
lds
fild
push
inc
cli
nop
xor
aad
mov
les
rcl
jnp
rcr
xchg
jmp
ins
sbb
popa
xchg
mov
inc
iret
dec
fimul
jg
adc
mov
scas
in
icebp
js
jecxz
loop
add
push
in
jo
pop
xor
in
jle
xor
test
idiv
and
mov
ja
inc
lock
mov
stc
lods
add
stos
jbe
or
fidivr
fst
imul
pusha
mov
push
stc
pop
or
int3
and
ds
jbe
add
fld
popa
jb
lahf
pop
xor
jb
push
xchg
push
jecxz
loope
mov
sub
push
add
fnstsw
mov
enter
(bad)
scas
fisub
retf
dec
dec
dec
push
clc
cmp
inc
mov
scas
pop
and
(bad)
jb
cmp
outs
inc
dec
pop
mov
loope
cld
fwait
out
inc
dec
aaa
in
xor
jb
sbb
sbb
jecxz
sub
cwde
mov
or
push
lahf
fadd
mov
cmps
mov
xchg
mov
popa
in
push
loop
fisubr
int3
in
loop
cmp
mov
inc
cmps
icebp
sub
pop
sub
lods
fld
jmp
cdq
cmp
mov
push
in
sbb
mov
or
fwait
add
mov
push
xchg
test
xor
and
lea
leave
xchg
arpl
into
div
icebp
(bad)
sbb
mov
mov
add
inc
cdq
loop
rcl
fistp
(bad)
cmp
mov
mov
fs
dec
pop
push
scas
pop
jnp
(bad)
pop
lods
or
cmp
aaa
and
loopne
cmp
mov
nop
lea
dec
xor
cli
dec
sbb
pushf
jo
xor
jnp
inc
or
jp
ins
sbb
nop
mov
mov
mov
xor
xor
xchg
jl
sbb
int3
push
jecxz
mov
inc
int3
dec
test
loope
sar
mov
jae
mov
leave
out
es
cmp
iret
inc
ror
in
sub
cmp
inc
mov
mov
xchg
inc
mov
add
outs
lds
or
xor
push
lods
ins
cmp
add
gs
popa
stos
xor
cmp
imul
xor
nop
pop
push
fidivr
(bad)
push
sbb
pop
sti
push
ss
sbb
xchg
sub
iret
repz
fistp
ins
and
mov
sbb
adc
aas
xchg
inc
sti
mov
sti
ficom
and
(bad)
xchg
adc
mov
mov
add
xor
sub
mov
cmc
mov
mov
jno
or
jno
cdq
sbb
and
arpl
adc
fimul
pop
arpl
push
mov
(bad)
lods
mov
mov
adc
xor
sti
pop
and
rcl
test
mov
jge
ret
in
idiv
jge
inc
das
je
dec
js
sbb
das
test
mov
or
in
ins
jnp
dec
int
repnz
ins
sub
jmp
mov
jns
push
inc
dec
je
xchg
pop
nop
movs
mov
popa
retf
cmp
movs
sub
xchg
es
or
xchg
getsec
sub
(bad)
cmc
mov
mov
mov
mov
sbb
mov
jmp
fmul
out
mov
fs
mov
mov
pop
push
ret
cmp
(bad)
push
push
imul
test
adc
cmp
stos
mov
fistp
pop
loopne
(bad)
push
add
stos
and
bound
cmps
or
call
outs
mov
js
test
push
push
dec
and
test
movs
sub
ins
mov
push
popf
add
push
paddq
cli
xor
sub
push
jo
mov
out
cld
scas
out
clc
and
add
popf
jmp
and
push
cli
movs
push
cmps
mov
mov
es
imul
add
mov
mov
data16
ds
jno
mov
inc
pop
call
sub
xor
rol
hlt
mov
clc
in
lods
pop
(bad)
add
pop
mov
cmp
pop
inc
adc
sar
push
adc
scas
jne
test
nop
dec
jl
sub
shr
jmp
addr16
popf
add
retf
push
cmp
scas
xchg
xor
inc
pusha
jb
mov
inc
cmp
lea
scas
outs
(bad)
out
mov
test
fstp
popf
dec
adc
mov
dec
outs
push
adc
jne
daa
xor
xchg
and
push
in
js
cli
movs
mov
outs
dec
pop
cs
pop
in
or
or
fist
xor
sub
cmp
xor
shl
jle
push
mov
psrld
lea
pop
mov
(bad)
mov
and
and
push
or
inc
add
nop
test
add
mov
pop
or
scas
jb
adc
lds
ins
scas
in
push
fist
sbb
dec
cmp
and
mov
into
pop
cmps
ret
loope
sar
popf
out
mov
call
js
mov
and
pop
jne
jl
mov
add
imul
retf
aam
out
push
ror
push
and
(bad)
stc
mov
out
pop
jle
rep
or
pop
mov
mov
stc
or
adc
jmp
or
cmp
mov
adc
jecxz
icebp
mov
loopne
rcl
stos
js
xlat
xchg
pop
mov
mov
jbe
in
jg
jae
aad
lods
mov
nop
shr
push
aas
bound
js
add
daa
pop
ja
loop
aaa
jae
(bad)
cld
cmp
dec
fbstp
mov
cmp
pop
or
(bad)
(bad)
fwait
cmps
push
cs
(bad)
and
and
fisubr
in
jmp
stos
repz
dec
adc
pop
or
pop
jo
jnp
sub
imul
jl
loope
mov
(bad)
mov
cwde
push
push
jno
cs
(bad)
jmp
ret
stc
pusha
push
(bad)
mov
call
cdq
dec
fcomp
lods
xchg
(bad)
stc
(bad)
sbb
mov
test
les
dec
jns
scas
sub
test
loop
sbb
shr
test
das
jge
inc
or
shl
sbb
mov
and
xchg
repnz
pusha
sub
stc
xlat
outs
jne
fisttp
cmp
in
pop
ins
jne
pop
xchg
sbb
pop
dec
and
stos
sbb
push
jmp
call
and
test
push
xor
and
icebp
rcl
xchg
(bad)
dec
or
pop
sbb
sub
mov
scas
nop
jns
test
mov
push
cli
jb
fidiv
mov
sub
cld
rol
aam
pushf
es
sub
pushf
jmp
add
dec
jo
in
or
lds
jae
lahf
pop
data16
scas
mov
out
cmps
xor
xor
jo
jle
loopne
and
sbb
into
lods
fdiv
leave
mov
push
cdq
jb
test
mov
mov
push
in
mov
xchg
pop
xor
cmp
sti
dec
dec
hlt
ret
cli
or
inc
pushf
and
int3
add
dec
in
fidivr
bound
jo
in
es
mov
xor
sbb
ret
inc
and
ficom
pop
add
retf
xchg
mov
shr
xchg
test
mov
mov
int3
jmp
pop
aam
aas
mov
js
push
lds
xor
dec
mov
or
(bad)
mov
inc
out
xchg
mov
or
mov
fdivr
xchg
scas
sub
mov
outs
and
dec
and
into
or
pop
mov
mov
loop
sub
dec
gs
add
mov
aam
sub
jae
jg
push
jle
ins
adc
sub
and
add
or
xchg
add
aad
or
popa
xor
les
mov
cmc
jp
lods
repnz
int
push
popa
inc
lock
or
js
pop
jns
xchg
inc
adc
jno
pop
adc
jle
xor
ins
ins
lock
enter
cmps
jl
xchg
pop
dec
loopne
adc
xor
push
inc
inc
out
mov
out
or
loopne
sti
adc
dec
jmp
mov
rcl
xchg
push
and
pop
nop
scas
fwait
mul
ficom
aas
imul
add
cmp
loop
jecxz
sub
popf
pop
cmp
(bad)
pop
add
jl
cs
jo
or
add
pop
or
and
out
retf
scas
and
cwde
jg
ror
or
cmps
test
jp
mov
mov
out
call
and
cmovae
bound
call
pusha
mov
push
mov
xchg
push
mov
inc
xchg
rcr
mov
dec
in
adc
add
inc
mov
sbb
mov
fisubr
sbb
jge
ins
sub
int3
loop
out
pop
push
jmp
sti
imul
sbb
mov
push
enter
(bad)
mov
and
fist
pop
or
xor
sub
dec
push
popf
pusha
mov
sbb
(bad)
push
(bad)
sub
rol
add
lahf
mov
jbe
vpcmpeqd
add
jmp
push
mov
fld
cdq
mov
dec
push
fidivr
mov
and
mov
sbb
fidiv
out
or
out
cmps
bound
push
add
and
push
ja
aad
into
jne
stos
in
dec
or
hlt
push
rol
out
xor
jmp
inc
adc
mov
or
add
fdivr
stos
cld
pop
repz
pop
add
dec
sub
aam
cmp
cs
xor
leave
shr
fidivr
jge
jbe
repz
out
ss
in
repnz
int
sub
fucom
adc
push
mov
and
sbb
add
xor
sbb
inc
mov
in
dec
js
push
(bad)
jnp
jno
call
push
leave
imul
mov
shl
std
clc
and
pop
sbb
mov
dec
mov
pop
mov
mov
je
mov
cmc
call
jecxz
clc
pop
(bad)
stc
in
cli
arpl
jns
aam
je
mov
jge
cli
add
movs
mov
(bad)
jle
(bad)
adc
(bad)
fmul
mov
das
jnp
retf
pop
inc
and
push
push
addr16
add
ins
repnz
adc
loop
xchg
aad
xor
inc
adc
(bad)
stc
cdq
int3
test
mov
adc
test
das
and
fdiv
fs
fwait
adc
xor
cmp
lods
(bad)
pop
ror
adc
scas
out
pop
sub
adc
xchg
sbb
jl
sbb
icebp
fwait
cmps
adc
cmp
cmps
pop
scas
mov
dec
imul
inc
(bad)
adc
dec
mov
sub
out
pop
jbe
inc
(bad)
push
dec
lahf
jbe
pop
int
rcr
mov
loope
or
inc
and
and
loopne
xchg
mov
fiadd
and
add
mov
pop
add
push
dec
(bad)
fisub
fmulp
mov
jge
(bad)
fucomip
daa
in
dec
ret
lahf
mov
ror
add
and
lock
enter
shl
xor
dec
ja
outs
add
push
mov
adc
cli
mov
mov
pop
mov
jecxz
mov
sbb
nop
xor
test
mov
pop
ret
inc
mov
imul
jns
inc
dec
push
mov
fmul
in
jmp
xchg
inc
mov
dec
dec
clc
lar
jecxz
scas
int3
xchg
sbb
scas
retf
ret
mov
dec
push
enter
sbb
aaa
in
push
call
push
xchg
ja
jp
push
cmc
push
call
push
jg
inc
iret
retf
(bad)
and
ins
mov
mov
or
imul
fnstcw
jne
retf
pop
bound
pusha
loopne
mov
ds
les
jo
jno
aas
cmp
cmp
pusha
sbb
nop
mov
and
cwde
cwde
xchg
cmp
int3
adc
or
xchg
push
retf
jns
xchg
sbb
leave
loop
jno
dec
imul
imul
push
xchg
sub
inc
dec
fcmovnbe
mov
leave
sbb
adc
(bad)
mov
mov
inc
and
mov
mov
xchg
loopne
xor
sti
(bad)
cmps
and
cdq
jmp
lahf
inc
addr16
cmps
mov
shl
les
fxam
xchg
push
loope
mov
cmps
(bad)
xchg
das
push
ins
mov
leave
(bad)
lock
ja
add
mov
xor
rcr
or
xor
shl
xlat
rol
int
sbb
or
mov
sahf
sbb
xchg
jl
aad
mov
mov
adc
push
xor
and
pop
stos
mov
mov
mov
xchg
(bad)
jge
mov
enter
and
imul
inc
repz
pop
std
ror
fidivr
pop
sbb
cs
or
push
push
push
mov
iret
inc
xchg
movs
sbb
jle
push
xchg
repnz
call
jle
in
pusha
inc
ret
lahf
int
dec
xchg
mov
dec
sub
inc
adc
das
cmps
ds
les
adc
mov
das
xchg
test
mov
fidiv
mov
shr
stc
fwait
aam
icebp
imul
push
arpl
jge
add
call
sbb
inc
jle
and
std
fxch
stc
inc
clc
xchg
pop
mov
sub
lea
scas
mov
div
sub
pusha
out
fistp
dec
into
xor
sub
iret
or
push
sub
out
mov
cld
pushf
imul
lahf
imul
and
stc
(bad)
ret
test
cmc
fst
pusha
add
dec
ror
hlt
sbb
push
xor
pop
aam
adc
jb
mov
inc
xchg
(bad)
fdivr
mov
rol
jp
je
mov
inc
int3
xchg
mov
aaa
xor
and
(bad)
sub
cmps
mov
xor
lds
pop
push
push
mov
xor
(bad)
popf
add
inc
jle
fwait
icebp
mov
leave
fistp
test
loope
into
pop
inc
and
adc
bound
int
dec
jmp
inc
mov
mov
sbb
mov
add
sbb
pop
sbb
fadd
add
pop
pusha
jno
push
dec
dec
test
outs
dec
or
push
movs
pop
sub
in
mov
dec
dec
sub
enter
jp
xor
jo
das
movs
lock
sbb
mov
push
mov
enter
sbb
int3
add
mov
movs
ja
sub
inc
push
rol
dec
mov
popa
sbb
mov
pusha
inc
jmp
pop
mov
mov
loop
ja
pusha
mov
mov
imul
mov
ror
adc
push
jne
mov
mov
xor
inc
or
inc
shl
out
adc
sbb
jno
stos
outs
xor
popa
lods
push
mov
and
dec
adc
fidivr
cmp
mov
mov
out
stos
mov
push
xlat
lea
call
jmp
xlat
ss
mov
lods
jns
(bad)
push
rol
movs
cmp
or
cmc
in
retf
imul
adc
mov
add
lods
inc
data16
rol
jecxz
push
js
test
mov
push
xchg
movs
adc
inc
push
les
sub
aaa
dec
sahf
scas
cwde
cmp
test
mov
or
hlt
dec
add
jge
inc
dec
call
cmp
addr16
dec
sbb
lock
sbb
dec
ret
mov
mov
pop
les
push
aad
repnz
shl
das
push
mov
ss
hlt
mov
jno
jns
jae
inc
inc
dec
aas
ins
(bad)
out
cld
add
div
jle
xor
cmp
cdq
cmp
add
aas
pop
leave
jp
jae
xchg
inc
js
push
inc
shl
add
jno
je
sub
ret
inc
cmps
push
sahf
ja
xor
idiv
jle
dec
xor
push
push
int3
mov
xor
and
adc
jns
add
push
and
rcl
ret
cmp
xor
ret
in
lds
push
pop
fidivr
lods
(bad)
js
test
push
lods
xor
xchg
add
sbb
inc
das
pop
test
fsub
call
xor
mov
les
lods
scas
test
jle
and
xchg
jne
ret
pusha
loop
pop
shl
mov
jo
(bad)
jmp
cmp
mov
ins
icebp
adc
fsubp
mov
iret
jb
lea
mov
jbe
sar
es
or
adc
lock
mov
out
add
or
cdq
inc
int3
imul
dec
shl
xor
push
aas
into
pop
inc
mov
cmp
jmp
mov
stc
ss
lods
in
cmp
test
into
and
push
jbe
xchg
mov
daa
repnz
das
mov
inc
frstor
loopne
or
jns
fdiv
int
sbb
adc
jb
and
xchg
ss
sbb
xor
iret
sbb
cmp
arpl
adc
nop
sbb
sub
push
(bad)
add
mov
inc
inc
push
aad
icebp
ror
sbb
jmp
lea
scas
pushf
popa
push
inc
push
mov
lock
shl
stc
in
sbb
aas
aam
sbb
dec
sub
xlat
mov
xor
pop
inc
arpl
sbb
pop
inc
xchg
hlt
std
sbb
push
imul
jbe
mov
fnstenv
cmps
cld
jp
in
push
cmps
sbb
out
mov
inc
shr
out
dec
inc
inc
mov
push
sbb
sub
mov
mov
or
cwde
or
pusha
xchg
ins
icebp
call
icebp
mov
in
addr16
jb
cmp
mov
repnz
call
jb
cmp
jl
and
ret
loope
dec
add
add
and
js
pop
rcr
and
push
sahf
(bad)
push
or
scas
scas
stc
in
xlat
(bad)
fdivr
mov
push
mov
ret
jg
mov
jb
mov
into
xor
loope
mov
mov
lock
rcl
mov
test
lahf
loope
call
mov
cmc
cmp
pop
psraw
movs
addr16
mov
cmp
ins
xor
(bad)
push
ins
inc
mov
ins
and
mov
pop
mov
push
push
adc
or
push
mov
jge
push
or
in
fisttp
mov
fldcw
call
jb
mov
fild
std
mov
mov
xchg
rcl
lahf
into
js
xor
cmp
adc
adc
add
dec
iret
sub
repnz
out
inc
fwait
iret
push
hlt
sbb
sbb
daa
aam
or
push
arpl
xchg
or
sub
and
xor
aas
inc
stc
pop
xchg
rol
ss
mov
pop
or
loopne
adc
mov
mov
dec
lods
xchg
mov
fisttp
push
lahf
ret
jbe
xchg
(bad)
jmp
xlat
and
adc
xor
sub
cmc
mov
(bad)
push
push
add
je
adc
add
sub
inc
retf
or
dec
xchg
jno
cmp
xchg
pop
cmp
sbb
hlt
pop
(bad)
xchg
jne
inc
shr
mov
popf
sti
and
ss
les
movs
aas
mov
jp
clc
repz
outs
icebp
dec
dec
dec
ret
jnp
aad
cwde
or
and
imul
push
les
nop
sub
inc
es
sahf
daa
push
cmp
sar
dec
inc
push
cmp
mov
(bad)
scas
mov
cmps
jg
cwde
xchg
rcr
dec
sahf
push
loop
retf
xchg
(bad)
in
mov
mov
and
add
adc
lahf
sbb
je
push
inc
test
out
add
push
xor
pushf
and
loope
gs
jnp
add
ins
aas
aas
cmp
data16
neg
test
aas
outs
pop
xchg
addr16
nop
adc
cmp
sub
cmp
sbb
bound
lods
inc
jo
(bad)
cmps
push
jmp
nop
adc
sbb
add
push
ror
mov
cmp
xor
xor
add
cmp
popf
movs
mov
fnstsw
scas
(bad)
icebp
mov
dec
mov
jmp
push
mov
adc
(bad)
ss
mov
pop
mov
inc
ret
push
pop
adc
xchg
sti
pop
out
mov
dec
scas
fstp
xor
or
loope
gs
fnstenv
in
arpl
pop
(bad)
out
cmp
das
mov
adc
inc
movs
and
aam
cs
sbb
mov
test
jae
push
mov
(bad)
lods
int3
pop
(bad)
jns
imul
pop
sti
inc
pusha
nop
add
add
mov
fidivr
cmps
lea
xchg
adc
mov
jnp
iret
aaa
pushf
mov
jg
popa
stos
adc
jmp
(bad)
pop
adc
push
(bad)
add
add
retf
push
sbb
push
or
xor
ss
xchg
ret
clc
jge
mov
mov
push
and
aam
xchg
cmp
adc
(bad)
push
xchg
mov
shr
mov
mov
mov
sub
xor
loopne
retf
adc
sub
dec
cli
into
push
les
mov
mov
fcom
dec
icebp
cmc
sub
in
rol
call
or
xchg
sub
js
bound
xor
mov
push
imul
sub
popa
popf
aas
mov
ja
outs
aad
cmp
loop
xchg
imul
mov
mov
inc
inc
mov
aam
xor
sub
jmp
pop
stos
xchg
loop
cmps
loopne
fs
mov
jae
sub
imul
xor
jmp
test
mov
pushf
add
stc
out
aaa
iret
add
cld
add
jecxz
jne
movs
inc
(bad)
pop
leave
adc
jmp
(bad)
mov
int3
pop
fimul
cmc
cmc
neg
es
js
sbb
or
mov
and
dec
add
and
push
pop
ja
aam
inc
lock
adc
imul
mov
scas
xchg
inc
(bad)
in
(bad)
js
gs
sbb
int3
dec
pop
xor
pop
mov
jbe
sbb
fs
retf
repz
pusha
enter
arpl
scas
sbb
aam
and
mov
pop
jns
dec
push
add
aas
fcmovnbe
mov
lahf
leave
jmp
arpl
pusha
inc
add
mov
sbb
(bad)
sbb
mov
cmp
stos
(bad)
xchg
mov
add
cmp
pop
enter
xor
or
mov
add
and
repnz
push
ins
call
stos
in
mov
add
idiv
sbb
dec
sbb
xor
(bad)
mov
mov
xor
je
pusha
push
cmp
jne
jp
es
mov
rcr
or
mov
dec
out
cld
lods
(bad)
mov
fiadd
mov
xchg
mov
and
dec
sti
jge
lahf
loope
cld
es
xchg
es
push
hlt
push
push
mov
imul
shl
sub
js
xchg
rcl
enter
in
test
lods
xchg
jle
add
lock
les
rol
cwde
out
or
fstp
jge
push
add
(bad)
aam
(bad)
stos
stos
dec
and
add
mov
dec
hlt
lds
mov
inc
dec
dec
cmp
gs
sub
or
xor
ret
add
fbstp
rol
and
pop
and
nop
push
pop
xor
sub
or
mov
scas
vmulss
adc
pop
mov
mov
cmp
adc
gs
sub
pop
dec
mov
inc
sub
ret
clc
add
inc
mov
lea
ret
cwde
cdq
mov
cmp
shl
pop
ret
adc
(bad)
icebp
cmps
out
push
inc
jecxz
nop
outs
call
pop
test
jb
popf
(bad)
hlt
pop
jmp
or
iret
xor
inc
popa
mov
ins
outs
scas
xchg
pop
adc
or
dec
stc
cli
ret
mov
cmc
push
jnp
aas
outs
jl
mov
mov
fidivr
cmp
pop
scas
xlat
aam
mov
sub
push
xchg
std
dec
je
mov
movlps
xor
into
and
add
xchg
out
jnp
imul
pusha
sti
add
dec
xor
push
out
sub
pop
lea
mov
ins
mov
out
ins
sahf
push
in
sbb
jg
cli
es
fwait
je
dec
ret
mov
lea
xor
and
jl
jno
rcl
xor
stos
ins
push
mov
jl
retf
je
mov
std
jb
xchg
data16
inc
fnstcw
jmp
jo
(bad)
fsub
or
inc
jo
lods
cld
mov
aaa
inc
push
adc
(bad)
in
fldcw
in
pop
sbb
mov
or
and
clc
loope
pop
or
out
push
cmp
pop
cmp
in
lods
sub
les
cmp
push
mov
mov
ss
iret
push
pushf
push
push
lds
push
mov
adc
ds
xor
clc
mov
in
mov
xor
bswap
ins
push
sbb
xor
mov
jecxz
jmp
inc
pop
fiadd
in
xchg
out
xchg
mov
cmp
pop
cmps
xor
xor
xchg
fscale
cmp
ja
test
push
mov
retf
xchg
inc
cmc
inc
leave
inc
retf
mov
retf
xchg
cmps
test
push
push
ins
mov
and
outs
or
mov
sub
or
ret
and
lds
inc
pushf
lahf
or
icebp
and
push
adc
sti
sbb
out
data16
std
js
cmp
iret
lock
xchg
add
cmp
fidiv
or
push
push
cmps
(bad)
repz
inc
add
fwait
pop
ret
inc
dec
push
iret
lock
or
jecxz
xor
(bad)
hlt
pop
jb
inc
fdivr
cmps
je
repz
pop
push
dec
jmp
dec
sar
icebp
test
inc
mov
inc
mov
mov
out
scas
outs
dec
mov
sub
push
jecxz
(bad)
inc
es
push
jno
add
or
push
inc
jnp
xchg
mov
sub
or
lods
sbb
xchg
dec
inc
fs
inc
push
mov
cwde
test
imul
pcmpgtw
aam
popf
cdq
mov
inc
pop
inc
jg
in
mov
inc
mov
into
xor
loope
pusha
lds
fsubrp
sbb
cli
mov
daa
jno
sahf
fst
xor
addr16
ins
mov
arpl
add
mov
sahf
jbe
xchg
sti
jmp
imul
pop
push
aas
inc
lock
push
in
scas
aad
jbe
stos
stos
scas
inc
mov
(bad)
mov
scas
mov
xchg
mov
jno
mov
fld
jne
and
daa
sub
addr16
aaa
hlt
imul
sbb
jl
stc
push
jp
retf
js
pop
pop
in
dec
enter
ror
jne
hlt
cmps
out
mov
jl
sub
adc
and
xor
cmp
push
add
test
adc
shr
xor
sti
inc
cld
sub
mov
pushf
or
out
sub
jle
btc
dec
shl
sti
daa
adc
les
xchg
les
cmps
jmp
repz
cmps
cmc
arpl
sub
and
or
xor
dec
jb
add
test
sahf
add
and
jge
dec
inc
loop
lahf
inc
mov
sub
mov
xchg
mov
and
jmp
test
cmp
sbb
(bad)
push
aam
ret
stos
lock
jae
les
xchg
xchg
push
sbb
aad
xchg
xchg
cdq
(bad)
cld
cmc
movs
pop
outs
mov
mov
mov
cmp
mov
dec
cmp
mov
dec
ds
dec
inc
dec
out
das
mov
cmp
das
sahf
mov
mov
jle
out
xchg
in
fs
push
mov
movs
cmp
addr16
cld
mov
imul
jl
push
jmp
fistp
xor
inc
test
cmps
repnz
xchg
jnp
dec
adc
add
jns
or
inc
and
out
idiv
dec
in
enter
int
add
xchg
in
push
int
sbb
dec
jb
stos
inc
lahf
and
(bad)
outs
daa
mov
push
stos
sub
and
xchg
lds
psllq
mov
movs
pop
mov
pop
call
jmp
out
dec
jmp
adc
ret
retf
mov
xchg
lds
in
jnp
cmp
and
imul
arpl
cmp
or
lock
inc
js
xchg
in
add
xchg
sbb
pop
retf
outs
or
repz
jbe
outs
outs
sub
add
add
das
ret
sub
call
or
mov
cwde
pusha
vpsubq
jmp
mov
in
pop
pushf
ret
repz
out
mov
cwde
mov
pop
addr16
(bad)
and
pop
and
dec
and
pop
sbb
xchg
mov
adc
and
push
mov
jle
mov
mov
mov
stos
sub
test
and
mov
jmp
and
xchg
(bad)
mov
sbb
cld
sbb
int3
or
test
pop
cmps
sub
pop
cmps
into
frstor
cmp
in
pop
popf
(bad)
push
out
inc
xor
jnp
jmp
std
repz
mov
mov
clc
movs
shr
mov
xor
(bad)
mov
or
push
push
inc
clc
shl
dec
or
dec
pop
add
(bad)
mov
add
hlt
mov
ins
loop
mov
xchg
push
out
xor
daa
ds
and
mov
xchg
jo
mov
loope
sbb
mov
adc
fsub
adc
sub
mov
cwde
sbb
sub
push
scas
imul
pop
xor
sbb
or
outs
movs
push
lods
push
mov
mov
loope
xor
add
sbb
mov
cmp
adc
and
sbb
out
pop
int
xchg
mov
cld
sbb
sub
or
push
mov
pop
test
mov
jno
jne
sbb
sub
dec
cmps
adc
xor
or
fnstsw
hlt
ret
or
rcl
cwde
xor
mov
out
jbe
add
leave
pusha
mov
pop
mov
into
or
(bad)
push
sub
(bad)
fwait
jae
add
jns
sub
ret
mov
lock
mov
test
mov
repz
retf
int
repz
push
into
jno
sbb
mov
or
daa
cmp
sbb
mov
jo
mov
mov
xchg
sbb
rcr
mov
dec
lock
adc
clc
pop
std
push
dec
xchg
mov
sbb
push
fwait
inc
call
mov
cld
aam
mov
push
and
inc
push
and
mov
sub
inc
sbb
pop
fcomp
pop
pop
stos
push
add
pop
test
ret
test
iret
cld
icebp
dec
pmulhw
mov
mov
fdiv
je
xchg
jnp
cwde
in
aas
(bad)
xchg
jmp
into
pop
idiv
aad
add
or
loopne
retf
pushf
pop
mov
or
out
mov
stos
iret
push
or
xor
ror
sbb
jge
mov
xchg
repz
mov
xchg
add
les
mov
lea
xor
inc
mov
inc
and
rcl
xor
mov
inc
add
ret
fldcw
cmp
(bad)
sti
sub
or
lock
cmp
pop
cmp
sar
ss
aam
push
adc
jns
fcom
dec
nop
jp
mov
aas
mov
mov
test
adc
jb
pusha
pop
push
jne
sti
(bad)
in
and
xchg
sub
sahf
sub
iret
stc
div
data16
inc
sbb
pop
xchg
xchg
pop
xchg
stc
popa
mov
scas
mov
xchg
call
jp
xchg
mov
shl
inc
or
repnz
jecxz
ins
adc
inc
mov
lahf
push
enter
fist
mov
cmc
xchg
inc
popa
scas
ja
adc
(bad)
jecxz
mov
mov
fstp
fldcw
push
mov
(bad)
cmp
dec
out
jg
int3
cld
xchg
add
cmp
push
out
add
jmp
popf
mov
mov
fisttp
mov
into
push
mov
push
pop
daa
cwde
nop
pop
mov
jl
pop
sbb
cmpps
ss
and
or
jns
jg
inc
push
in
aas
inc
fidivr
mov
cs
sub
jno
pop
adc
movs
inc
or
(bad)
push
adc
pop
sbb
sbb
shl
mov
imul
ja
clc
pop
pushf
fadd
push
xor
sbb
and
retf
add
push
imul
mov
(bad)
call
in
(bad)
jae
dec
out
dec
cmp
das
retf
xlat
sbb
outs
mov
mov
and
xor
(bad)
mov
or
leave
push
or
and
cmps
in
popa
ss
aam
dec
(bad)
cld
cmp
or
cmps
xchg
or
push
imul
or
xchg
(bad)
shl
jb
imul
int
test
adc
xor
xchg
pop
ds
adc
ja
loop
mov
add
or
fnstenv
(bad)
lock
and
cmp
lea
sti
cmc
mov
pop
loop
int3
stos
movs
cmp
mov
mov
rcr
lds
or
stos
ss
repnz
out
dec
jno
pop
frstor
sbb
stos
xchg
jbe
idiv
add
or
adc
mov
and
xchg
jno
sub
mov
adc
nop
jp
mov
cmp
out
outs
inc
jne
mov
retf
shl
pop
or
jo
pop
int3
jmp
nop
test
icebp
and
mov
in
fst
push
and
popf
enter
push
inc
dec
cdq
push
jb
inc
jmp
and
(bad)
cmp
pop
or
shr
(bad)
pop
adc
jnp
aam
inc
adc
xor
pusha
fisttp
jmp
push
inc
lahf
mul
and
jo
fs
pop
popf
ror
jmp
pop
pop
mov
fnstsw
adc
mov
(bad)
cld
fisttp
xlat
test
out
or
xor
nop
adc
sbb
add
push
(bad)
or
das
mov
(bad)
outs
inc
idiv
mov
arpl
loop
out
jnp
or
cmp
pop
xchg
daa
adc
mov
jnp
pop
xchg
mov
fdiv
xlat
pusha
jmp
adc
movs
cmc
inc
push
xchg
mov
jbe
loopne
adc
or
das
std
arpl
sti
mov
sub
aaa
leave
ret
mul
popa
fwait
sub
mov
hlt
xchg
mov
add
cld
in
mov
dec
push
mov
mov
scas
fdivr
sub
mov
pop
mov
or
xor
mov
add
jp
aad
fst
push
inc
inc
add
mov
fadd
aaa
jno
fisubr
hlt
adc
repnz
jg
pop
sub
test
xchg
fmulp
mov
cmp
call
xchg
cmps
sub
mov
mov
arpl
push
cmps
mov
imul
jno
imul
pop
mov
xchg
sub
xchg
push
rol
mov
aaa
cld
mov
push
arpl
pop
xchg
xchg
jl
mov
mov
cmps
test
pop
shl
cmc
xchg
outs
jbe
adc
pop
mov
fidiv
in
add
or
xchg
cmps
xor
cmps
dec
bound
into
mov
scas
test
retf
hlt
pop
ins
in
inc
add
cmp
fs
xor
xor
mov
mov
jne
icebp
movs
das
aad
pop
sbb
stc
std
mov
xchg
loope
sbb
mov
data16
pop
das
scas
bnd
and
repz
or
aas
sub
xor
xor
fsub
push
fsubr
out
cmp
mov
cld
mov
mov
pop
mov
and
pop
and
cmp
mov
push
dec
push
cmps
fcomp
cmps
clc
sub
ja
loopne
xor
repz
cld
dec
xchg
repnz
xchg
xchg
cmps
pop
mov
push
cmp
bound
daa
add
test
or
mov
and
pop
nop
fcmove
or
test
call
mov
daa
jnp
mov
test
xlat
pop
mov
repz
dec
ins
mov
les
jmp
mov
aad
popf
mov
inc
loop
aam
jno
adc
jbe
lock
mov
jnp
push
jle
lds
sbb
mov
mov
push
mov
in
xchg
js
cmps
fwait
cwde
dec
fnstenv
clc
xchg
sub
adc
dec
sbb
js
mov
mov
test
test
mov
dec
add
pop
adc
adc
mov
jno
outs
cmp
mov
aaa
fmul
jnp
pop
retf
push
fwait
les
int3
imul
retf
jmp
xchg
ds
adc
cmp
gs
mov
cmps
fsubr
jbe
mov
pop
fwait
arpl
mov
inc
adc
sub
push
scas
or
mov
jge
popa
(bad)
xor
arpl
mov
fnstenv
jecxz
fs
imul
fidivr
pop
cmp
sti
adc
cld
popf
retf
xor
jmp
pusha
or
ins
int3
adc
pop
aaa
out
and
mov
repz
ret
sub
sti
xchg
out
push
iret
fimul
pop
lods
inc
pop
imul
ins
mov
inc
pop
adc
xchg
aad
neg
push
lock
rol
(bad)
xchg
jbe
ror
not
or
rcr
pop
call
out
inc
or
jb
pop
es
mov
in
fs
and
(bad)
outs
dec
or
stc
out
aad
ds
es
jnp
push
repnz
dec
test
mov
test
in
das
mov
push
fld
in
hlt
mov
scas
pop
repz
dec
int3
lds
(bad)
outs
cld
jmp
imul
jl
pop
dec
dec
out
shl
push
and
(bad)
xor
and
mov
jmp
lea
pop
or
xor
xchg
sti
aaa
pop
jno
add
(bad)
jecxz
and
mov
not
mov
xor
rol
bound
cmc
cs
sbb
pop
(bad)
and
push
gs
add
hlt
cmp
push
fld
retf
lds
xor
push
adc
nop
and
xor
sub
lods
push
inc
aad
and
and
mov
cld
jb
sub
sahf
mov
pop
fist
and
mov
(bad)
out
addr16
std
adc
add
push
fucom
jg
xor
push
fs
add
mov
mov
ss
aaa
xchg
(bad)
dec
or
mov
mov
movs
into
or
inc
es
stc
ins
(bad)
nop
cld
iret
cmp
dec
dec
cmp
test
jp
push
popa
fsub
fbld
inc
mov
fmulp
ftst
xchg
push
rol
push
pxor
es
out
inc
dec
mov
enter
dec
adc
retf
sbb
adc
ins
xor
and
lds
jge
push
sub
mov
imul
add
dec
test
imul
pop
or
jbe
jg
pop
mov
rcr
push
ror
rcr
je
mov
rcl
sbb
dec
mov
xor
out
adc
mov
mov
xchg
call
cmp
dec
mov
xor
ja
inc
in
dec
mov
das
es
lea
inc
xlat
dec
popf
pop
xor
push
rcr
test
daa
mov
inc
(bad)
retf
cmp
lea
fistp
sub
mov
inc
pop
shl
shl
inc
jo
adc
mov
xchg
(bad)
and
ins
cmc
pop
xchg
cld
lods
cli
or
stos
add
fwait
out
or
imul
xchg
daa
xchg
dec
dec
mov
jb
daa
push
push
pop
push
push
push
inc
add
(bad)
jmp
fs
(bad)
dec
jbe
inc
pusha
call
popf
cmps
sbb
inc
in
mov
lea
and
sar
pop
stos
jecxz
jmp
stos
xor
out
iret
inc
loopne
mov
fnstsw
mov
sub
adc
cli
adc
imul
add
fsin
pop
push
xor
sub
sbb
mov
sub
fcmove
xor
or
repz
adc
or
test
mov
call
(bad)
xchg
and
xchg
int
out
fsubr
add
and
mov
out
mov
pop
ds
cld
xchg
inc
retf
mov
jmp
not
(bad)
dec
adc
xchg
scas
lds
add
test
lds
loopne
pop
or
sbb
xchg
daa
mov
mov
stc
sar
inc
push
js
sbb
push
aam
push
push
dec
in
jns
sbb
rol
scas
or
mov
fld
popa
push
leave
test
and
outs
cmp
dec
add
xchg
in
jb
sbb
push
push
scas
push
pushf
cwde
dec
pop
sar
repnz
xor
xchg
jle
sub
enter
cmp
pop
mov
mov
mov
xchg
dec
and
push
out
mov
lea
mov
pop
lea
or
mov
push
xor
jg
mov
jg
jmp
xor
add
pop
xor
fucomp
sbb
adc
xchg
scas
rol
push
push
xchg
push
push
inc
mov
ins
leave
js
push
and
sub
adc
out
xchg
push
jo
jnp
cmp
mov
jge
and
sub
sub
push
add
jnp
mov
or
int
push
xor
into
sub
div
add
outs
cmp
push
and
mov
xor
xor
and
xor
out
outs
test
dec
add
ret
sti
mov
cs
jg
dec
sbb
bound
outs
arpl
sub
test
pushf
xchg
mov
es
adc
aas
mov
aaa
ror
jp
lahf
or
test
int
lods
aad
pop
stc
xchg
(bad)
push
lea
push
pop
mov
stos
and
and
cmc
mov
xchg
shl
and
xchg
mov
int3
jl
xchg
test
imul
out
cld
dec
arpl
dec
retf
clc
pop
mov
jle
adc
and
leave
adc
sub
ror
aaa
idiv
xor
aad
sbb
jmp
xor
repz
or
pop
scas
inc
mov
inc
xor
pop
push
or
fdivr
xchg
stc
mov
ss
pop
xchg
hlt
pop
aaa
je
push
stc
dec
in
imul
test
repz
test
cmps
fwait
dec
(bad)
nop
out
dec
pushf
jbe
ror
jl
les
sub
je
imul
aam
push
mov
push
adc
sbb
adc
mov
jp
or
or
es
inc
inc
sub
mov
shl
push
jmp
cmc
loope
clc
outs
rol
aaa
xlat
mov
imul
mov
ins
cmps
iret
fisttp
leave
jnp
xchg
pop
aaa
stc
inc
ret
icebp
movs
fwait
jle
jg
dec
inc
into
nop
(bad)
nop
xor
arpl
ror
jg
mov
jmp
mov
mov
or
out
xchg
pop
xchg
jns
jbe
dec
test
cmp
aas
cmp
sbb
cmc
hlt
mov
xchg
fst
popa
mov
rol
push
xor
loope
pop
xor
pusha
mov
out
pop
dec
in
movs
punpckhbw
push
cmp
rol
imul
xchg
jae
pushf
xor
push
fisubr
movs
retf
pop
movs
fisttp
push
cmps
stos
sub
lahf
cmp
std
jb
pop
jno
mov
jp
rol
add
out
mov
test
cld
jmp
inc
inc
fucom
(bad)
jnp
das
cli
cmps
jmp
mov
cmp
ins
adc
mov
inc
sahf
fbld
inc
fisttp
fcomp
pusha
add
call
test
es
jmp
mov
sub
cdq
dec
imul
sahf
pop
mov
mov
cmp
cmp
ret
dec
aaa
pop
fnstcw
mov
mov
inc
sub
test
fbstp
dec
xchg
outs
and
cli
inc
inc
adc
out
mov
pop
call
ffreep
xor
rcpps
mov
ins
mov
dec
stc
dec
push
sub
sahf
or
inc
cmp
and
loopne
inc
int
repnz
jp
xlat
and
cmc
str
shl
mov
mov
stos
and
(bad)
inc
and
into
cmp
aad
jnp
test
pop
cmp
push
sahf
(bad)
lods
int3
xchg
jmp
pop
jno
jnp
into
movs
lods
cmp
retf
int
test
das
cmp
and
cmp
add
add
dec
pop
xchg
out
mov
(bad)
and
xor
es
adc
daa
pop
add
mov
aaa
(bad)
xlat
push
or
imul
mov
and
fwait
and
popf
cmps
in
sar
jno
leave
mov
arpl
adc
xchg
xchg
popf
and
jecxz
push
cmp
lds
stos
push
cmc
mov
jg
les
jecxz
jmp
xor
mov
push
mov
ss
scas
or
test
jg
jnp
pop
cdq
ret
shl
push
mov
aaa
cmp
jg
push
and
sub
ins
stos
jle
out
stc
dec
pop
pop
push
inc
mov
push
clts
sub
fcomp
mov
pop
(bad)
push
sbb
test
sbb
adc
test
jmp
pop
xchg
pop
lods
fisttp
lods
jmp
xor
mov
push
dec
push
cmps
es
ins
fsub
mov
call
imul
jbe
add
pop
mov
xchg
lods
fsub
push
test
push
pop
scas
mov
adc
cmps
push
pop
jle
in
pop
mov
bound
ss
mov
fstp
and
mov
adc
jb
enter
scas
fisttp
repz
mov
ins
push
or
data16
jo
dec
adc
iret
add
or
scas
add
repnz
and
sahf
mov
gs
cmc
and
push
pop
inc
scas
int
mov
dec
arpl
outs
aam
dec
(bad)
shr
fmul
retf
mov
mov
scas
inc
and
mov
dec
jb
push
movs
push
sbb
jb
out
pop
add
test
sbb
push
daa
add
fdivr
sbb
fld
lods
push
fs
adc
add
cmp
adc
pop
and
jmp
retf
mov
mov
pop
jge
lahf
retf
ror
sub
mov
mov
jl
xchg
dec
adc
pop
xchg
jge
dec
aaa
fcmove
and
(bad)
call
mov
aaa
cmps
fsubp
fsubp
cmp
jne
inc
iret
int3
jp
imul
fwait
sbb
adc
mov
push
xchg
add
jne
ja
ins
fidiv
in
icebp
and
aam
ins
test
push
pusha
fist
mov
test
pop
fbld
mov
jne
push
lock
dec
adc
ds
cmps
mov
mov
and
imul
mov
or
pop
ins
inc
add
daa
push
xchg
cmp
rcl
cdq
xchg
xor
sub
jecxz
mov
xchg
into
push
idiv
mov
mov
dec
mov
xor
data16
popa
jbe
ret
and
sbb
rcl
out
pushf
jmp
popa
sbb
hlt
inc
inc
or
jg
mov
fsub
(bad)
mov
fwait
mov
test
sub
push
sbb
nop
xchg
and
pop
js
cmps
(bad)
(bad)
or
xchg
xor
mov
push
retf
and
ins
loopne
ss
xchg
mov
dec
ja
and
push
loop
fisubr
add
movs
jle
push
and
clc
pop
fld
mov
push
cwde
jne
xor
ds
add
add
and
cmp
jp
fldenv
jo
(bad)
ds
dec
mov
lods
rol
sub
add
sbb
xor
push
cld
(bad)
loope
cmp
fadd
fimul
inc
mov
fild
jl
jbe
mov
(bad)
in
push
mov
aaa
jg
mov
js
scas
or
icebp
sub
pop
add
mov
jae
add
mov
sub
add
xor
cmp
(bad)
sti
push
int
sbb
icebp
aas
ror
jmp
movs
popa
ss
addr16
movs
pop
adc
es
pusha
pop
stos
(bad)
push
pop
ins
addr16
xchg
sbb
adc
sbb
xor
dec
mov
push
sbb
xchg
cli
xor
push
sbb
cmp
cmps
enter
dec
mov
jle
nop
adc
jo
jae
and
loope
pop
mov
stc
scas
jl
nop
outs
cmp
(bad)
repnz
pusha
or
fst
aam
jb
sbb
call
jo
cmp
dec
inc
inc
xchg
xchg
movs
and
pushf
pop
sub
sbb
inc
(bad)
pop
pop
jl
rol
jbe
mov
push
mov
pop
int3
test
push
mov
shl
add
xor
scas
cdq
mov
and
push
push
xor
push
cmp
sub
clc
jne
nop
fdivr
pop
jno
mov
imul
mov
cmp
xchg
xchg
push
adc
inc
xor
mov
js
adc
cs
fs
and
mov
push
loope
push
mov
sahf
jne
dec
add
fs
out
dec
adc
mov
shr
(bad)
out
jae
adc
mov
lahf
or
xchg
jle
dec
shr
(bad)
mov
iret
test
(bad)
bound
nop
shl
xor
jmp
shr
and
pop
mov
mov
shr
dec
sbb
(bad)
jo
pop
xchg
mov
mov
xor
mov
mov
sub
retf
xor
inc
cmp
pop
xchg
mov
xor
sub
(bad)
mov
mov
out
cmp
jbe
popf
jmp
push
mov
or
call
inc
imul
test
mov
mov
in
xor
jb
mov
dec
shl
jns
sahf
mov
xor
push
or
aas
imul
add
mov
xchg
jp
rol
xchg
movd
sub
cld
movs
or
mov
mov
xor
in
fstp
mov
sbb
fsub
sbb
daa
sub
pop
iret
push
jae
mov
ins
ret
idiv
push
loopne
cmp
lea
addr16
imul
jl
xchg
cs
mov
dec
(bad)
in
add
iret
mov
xchg
hlt
divps
lods
sbb
inc
sbb
mov
xchg
mov
mov
(bad)
xchg
scas
sub
loopne
jbe
test
(bad)
or
sqrtps
mov
mov
jbe
cmc
adc
lods
pop
pop
int3
adc
sub
sbb
xchg
jnp
mov
(bad)
jmp
or
lods
cmp
cmps
dec
pop
ret
mov
(bad)
xor
mov
push
outs
cwde
xor
int3
stos
shl
or
dec
cmp
mov
jmp
bound
fucom
stos
inc
or
add
retf
hlt
jb
fisub
and
in
mov
pop
push
and
sar
jae
cld
and
and
imul
push
mov
std
pushf
xchg
add
sub
and
out
adc
loop
pop
cmp
imul
mov
adc
add
test
cli
leave
dec
(bad)
ja
dec
cmps
push
sar
mov
hlt
dec
outs
rcl
sahf
mov
inc
jne
movs
dec
adc
sti
xchg
adc
hlt
jecxz
rol
movs
lahf
call
sbb
cmp
(bad)
aas
mov
pop
stc
imul
loop
push
loopne
push
mov
popa
pop
dec
push
push
inc
and
and
jle
cmps
gs
mov
add
int
stc
ins
mov
loope
and
icebp
shl
jns
jg
dec
cmc
mov
(bad)
shl
mov
xlat
ins
xor
ja
sub
sbb
adc
pushf
lock
push
cmp
mov
out
xchg
mov
jnp
mov
jne
outs
es
xor
sub
adc
xlat
icebp
rcl
mov
adc
cmp
imul
leave
ja
test
push
ds
jne
adc
into
sahf
pop
data16
mov
xchg
push
ret
addps
lock
aad
leave
sbb
xchg
rol
mov
addr16
out
jbe
jns
je
out
xor
test
cld
inc
jb
mov
add
or
mov
jne
inc
jae
xchg
sub
std
jae
lds
lock
dec
sahf
outs
mov
cwde
rcr
xchg
gs
push
lods
add
nop
out
ins
and
dec
adc
pushf
push
push
aam
call
gs
xor
dec
pop
movs
repz
(bad)
push
push
mov
icebp
gs
cwde
into
mov
adc
pop
and
dec
ficomp
sub
mov
ds
pusha
int
test
or
(bad)
cmc
test
cmp
getsec
adc
ret
pushf
ret
inc
daa
push
mov
js
movs
(bad)
out
cmp
add
in
sbb
lds
push
out
and
scas
push
cmp
mov
cmps
es
lea
scas
repnz
mov
and
mov
loopne
fs
cld
xchg
jp
popa
mov
fwait
test
js
movs
dec
cmps
fimul
xor
dec
jg
sbb
dec
imul
mov
cld
test
fisttp
loop
loop
dec
pop
pop
xchg
into
cwde
data16
pop
movs
daa
jecxz
pop
dec
push
or
das
cmp
mov
enter
lods
add
test
inc
fcom
iret
repz
jb
retf
ds
xchg
jmp
ins
xchg
nop
cmp
daa
jne
cmp
cmp
aas
loopne
or
int3
jbe
scas
pushf
fnstenv
scas
add
mov
dec
arpl
cmp
retf
mov
jmp
ds
stc
sbb
inc
fst
push
jmp
test
add
inc
nop
rcl
nop
xchg
fmul
cld
xlat
xchg
(bad)
cmp
add
ret
in
cmps
nop
(bad)
mov
sub
add
xor
add
mov
and
test
mov
pop
adc
icebp
daa
mov
aad
out
add
fcomp
stos
stos
mov
call
dec
fstp
sub
movs
not
add
add
mov
pop
and
movs
xchg
or
jg
sbb
cmp
(bad)
retf
inc
(bad)
jmp
je
mov
mov
sbb
in
sbb
data16
mov
inc
jmp
or
lds
sub
inc
(bad)
mov
cmp
sar
inc
push
pop
dec
rol
or
jl
xor
out
test
clc
jbe
stos
or
pushf
adc
bound
add
push
stos
pop
mov
inc
fistp
sbb
rcl
(bad)
pop
jbe
pop
mov
fld
jbe
jl
jnp
mov
jae
rcr
xor
jb
test
(bad)
xor
pop
sbb
sbb
xchg
out
cs
push
cld
out
scas
jg
es
pop
test
lods
sbb
mov
and
adc
sbb
cmps
add
pop
lahf
or
pop
or
adc
xchg
movs
or
stc
jmp
inc
push
dec
shl
fldenv
mov
sbb
sti
(bad)
repz
pop
dec
xor
loopne
push
sub
out
or
xchg
fstp
ffreep
adc
push
pusha
adc
jae
mov
(bad)
test
je
inc
push
sbb
inc
out
shl
push
jg
mov
or
mov
ins
pop
push
popf
mov
mov
jno
adc
pop
cs
ret
mov
daa
xor
aas
or
add
mov
aaa
add
mov
lock
repnz
sbb
dec
xchg
mov
movs
ss
test
xchg
mov
dec
retf
jbe
and
sbb
movs
div
in
push
sbb
mov
xor
cs
sub
dec
push
xor
(bad)
adc
jle
rcr
jp
rcr
test
push
or
aas
data16
sbb
sbb
push
mov
add
test
jns
dec
pop
mov
dec
into
(bad)
ins
xchg
jbe
test
cmp
jbe
sbb
jge
(bad)
je
movs
rol
adc
mov
pop
leave
sub
shl
add
inc
f2xm1
in
mov
push
push
inc
xchg
xlat
dec
aas
cli
mov
and
adc
retf
inc
or
add
adc
out
xchg
inc
(bad)
loope
inc
cmp
xor
jnp
mov
(bad)
sar
jb
pop
dec
call
dec
in
jno
loopne
imul
jnp
xlat
fiadd
sub
les
je
ret
ror
ja
and
adc
ret
xchg
loop
or
adc
mov
mov
sub
clc
mov
add
add
xor
jbe
sub
in
xchg
(bad)
jbe
cmp
cs
fisttp
xchg
mov
or
dec
push
inc
and
jmp
inc
xor
mov
gs
repz
in
cmp
pop
std
or
push
or
add
mov
push
inc
mov
sub
hlt
(bad)
adc
add
mov
mov
repz
dec
mov
and
outs
sub
adc
bnd
aas
mov
pop
cmps
test
add
fmul
cmp
int
outs
aam
cdq
js
sti
leave
and
lea
sub
jmp
xchg
ins
sbb
test
jp
arpl
icebp
pop
fcom
int
push
lods
test
jo
xor
loopne
in
pop
cmp
push
lahf
shl
js
movs
js
mov
into
clc
stos
xor
xor
std
or
aas
fld
leave
and
add
xor
bound
dec
lods
dec
outs
aam
fwait
ror
aad
sbb
or
cmp
neg
sub
or
ficom
mov
in
add
push
xor
mov
mov
int3
adc
daa
xor
neg
stos
sub
cmc
mov
aaa
jl
adc
pop
sbb
ds
xor
hlt
jb
imul
and
bound
add
push
scas
sub
push
dec
sub
jno
cld
out
aad
xchg
mov
fdivrp
movs
call
imul
pop
bound
push
mov
and
xchg
or
sar
push
xchg
jg
call
(bad)
jecxz
dec
sti
inc
test
xor
gs
ja
add
cmc
sub
mov
mov
int3
inc
bound
or
outs
ret
icebp
cmc
push
sbb
in
cwde
xchg
out
inc
or
inc
leave
adc
add
(bad)
mov
jmp
mov
jecxz
mov
xor
shl
fild
dec
push
jns
xchg
add
js
pop
jmp
cmps
sahf
dec
hlt
or
xlat
mov
inc
icebp
add
inc
jo
xor
cmps
in
dec
packssdw
mov
shr
cmc
js
pop
aad
outs
popf
imul
jge
sbb
push
sbb
push
and
jno
adc
sar
push
inc
cs
mov
sub
outs
mov
sub
(bad)
(bad)
stos
mov
movs
rcl
add
push
add
aad
imul
aam
(bad)
cmc
ret
xchg
jg
jo
pop
sti
jge
jns
add
cmps
cwde
xchg
sbb
xor
out
psubusb
mov
inc
sbb
sbb
mov
daa
sbb
int
push
mov
repnz
mov
loopne
icebp
or
add
shl
fs
jo
push
ret
push
mov
leave
and
repz
movs
mov
ret
loopne
aad
scas
fbstp
ret
test
je
lahf
pop
xor
pop
pop
jmp
push
fidiv
and
mov
push
test
loope
mov
outs
mov
pop
xchg
pop
int
sub
pop
jo
sbb
mov
or
xlat
dec
test
fdivr
lds
xchg
or
xor
sbb
cmp
(bad)
sti
ror
add
sbb
test
xlat
push
popf
cmp
mov
out
imul
inc
sbb
xchg
dec
out
retf
mov
shr
adc
mov
(bad)
mov
xchg
push
dec
dec
add
sub
js
pop
ins
test
(bad)
retfw
dec
pop
xor
outs
in
rcl
or
js
stc
jo
inc
stos
sahf
push
cdq
or
push
mov
or
ret
outs
lods
ins
(bad)
in
push
or
push
les
jle
add
out
dec
ss
pop
stos
emms
lock
mov
les
dec
xchg
or
shr
aad
stc
mov
jecxz
mov
jno
sbb
adc
scas
cmp
clc
xchg
mov
xor
daa
cmp
lea
mov
cmp
arpl
retf
cmp
mov
fist
or
lock
bound
or
test
mov
cmps
fs
sub
add
aad
fild
(bad)
(bad)
push
aas
ins
gs
dec
add
cwde
xchg
les
cli
jae
out
push
xchg
push
out
mov
dec
mov
shr
cmp
in
mov
mov
test
lea
add
test
rcr
mov
push
imul
adc
sub
in
mov
inc
or
ror
push
ret
lea
sahf
outs
pop
adc
data16
dec
dec
arpl
test
lods
hlt
xlat
mov
mov
push
xor
leave
adc
js
dec
addr16
(bad)
out
movs
mov
nop
stos
test
test
outs
int
ss
es
mov
xchg
xor
add
xchg
jle
inc
add
sar
adc
and
sbb
mov
push
je
retf
sbb
aas
fs
mov
fwait
mov
lea
mul
repnz
jge
outs
add
pop
(bad)
cmp
mov
jnp
jb
push
ret
and
xchg
inc
dec
jns
dec
jbe
mov
push
add
sar
aad
cdq
bound
mov
int3
inc
rol
pop
pop
pop
lods
pop
mov
iret
nop
imul
xchg
lods
sub
push
jae
pop
pop
push
xor
or
mov
test
pop
add
push
mov
inc
test
push
or
popa
loope
push
sub
or
cmp
movs
cmp
imul
cld
jb
inc
mov
mov
test
fdivr
js
dec
add
and
ins
stos
fcmovne
ds
xchg
in
inc
push
mov
mov
rol
sub
out
arpl
xchg
ret
lock
popa
push
ror
(bad)
inc
adc
dec
cmp
hlt
dec
fisub
test
and
rol
jb
mov
stos
sbb
inc
jle
lock
pop
ret
and
ret
jbe
adc
adc
xlat
xchg
cmc
enter
adc
mov
fcmovbe
call
xchg
sar
scas
data16
xor
add
jl
outs
or
cli
pop
sti
adc
jecxz
dec
mov
push
sub
out
jmp
xchg
repz
mov
mov
mov
jecxz
hlt
add
xor
dec
arpl
into
call
inc
inc
inc
sub
inc
add
push
jecxz
push
ret
shl
sub
adc
ffreep
ss
outs
jmp
xchg
popf
movs
mov
fild
sub
outs
out
fisttp
(bad)
icebp
rol
jns
ss
outs
cmps
add
fimul
fld
setg
mov
dec
mov
pusha
mov
in
js
and
test
and
push
xchg
movs
ret
jp
das
fwait
jbe
pop
ret
adc
call
enter
sub
shr
jecxz
mov
iret
cli
add
lock
sub
sbb
loope
or
aad
inc
lods
jp
xchg
xlat
arpl
dec
fwait
xor
pop
add
pop
lods
jg
and
dec
fstp
sub
mov
xchg
push
push
(bad)
xchg
cmp
ror
push
jns
jae
ins
mov
dec
or
mov
mov
mov
jnp
jo
cmc
in
dec
in
sbb
xchg
cmc
mov
push
and
addr16
sbb
dec
xor
mov
inc
fistp
mov
cmp
fs
(bad)
jmp
adc
out
scas
cmp
retf
push
and
repz
inc
push
shr
adc
dec
ret
pop
or
lods
fwait
push
sbb
call
imul
sbb
xor
scas
outs
lods
mov
pop
bound
mov
mov
pop
call
ins
fidivr
inc
nop
aaa
mov
repz
cmp
mov
add
in
test
dec
sbb
pusha
mov
lods
les
xchg
or
in
pushf
pop
aaa
adc
jp
cmp
shr
mov
loopne
cmp
enter
ds
xor
adc
mov
pop
add
pusha
scas
call
sub
retf
pop
data16
shl
mov
pop
sub
sbb
in
mov
ins
cs
shl
test
xchg
idiv
cmps
repz
out
cld
int3
or
fmul
loopne
inc
xchg
jg
add
pop
in
adc
loop
add
mov
sub
or
inc
xor
test
imul
jns
jo
int3
cmp
push
mov
pop
cli
aam
push
jnp
lock
clc
pusha
or
push
test
daa
and
cdq
pop
aad
xchg
mov
arpl
mov
cmc
sti
mov
xchg
into
sub
gs
sti
call
or
out
not
lea
pop
or
movs
cli
inc
inc
cmp
fwait
sbb
jl
dec
xchg
scas
in
or
mov
lahf
pop
popf
ins
push
jecxz
sub
mov
mov
rep
popa
or
jne
or
lods
pop
jmp
je
data16
scas
jg
sub
jae
or
int
rol
push
add
call
pop
scas
push
and
clc
loop
jecxz
imul
aas
push
add
hlt
dec
ds
mov
adc
lea
xchg
add
idiv
jno
pop
lea
inc
push
xchg
sbb
cmp
mov
data16
aam
cs
push
jae
pusha
jl
fidivr
ins
cs
add
lods
mov
fidivr
push
mov
scas
cli
not
fstp
jb
call
mov
adc
and
iret
out
sub
dec
dec
aam
add
and
add
push
dec
inc
test
and
leave
xchg
ja
ds
out
icebp
pushf
sub
arpl
dec
ret
xor
lea
cmp
and
push
loope
shl
adc
or
ins
out
es
imul
fwait
hlt
and
leave
xor
xchg
mov
clc
jmp
sbb
in
adc
dec
jecxz
fbstp
mov
sub
scas
dec
jl
sti
and
in
pop
pop
out
pop
sub
dec
jae
icebp
adc
cwde
pop
add
xchg
push
jae
pop
cmp
sub
jge
hlt
out
bound
movs
jge
xchg
dec
dec
popa
cmps
mov
nop
ja
popf
xor
or
lds
inc
mov
into
popa
or
les
add
add
daa
mov
inc
pop
test
movs
or
push
pop
pop
pop
or
sbb
fucomi
or
es
jae
dec
xchg
loopne
push
std
push
es
neg
aaa
fimul
push
sahf
jb
xor
daa
fcom
add
int3
pop
in
jo
jp
mov
mov
fld
sub
mov
repz
mov
mov
jle
mul
and
dec
dec
sub
dec
inc
xlat
mov
lds
stos
mov
lahf
xor
push
data16
adc
cmp
adc
shl
xchg
mov
(bad)
adc
sahf
push
pop
xchg
sub
popf
pop
pop
icebp
xor
mov
loope
add
ror
jmp
xchg
out
add
popf
dec
fdivr
or
lds
call
inc
outs
adc
in
(bad)
jl
ds
or
mov
adc
outs
(bad)
jae
or
xchg
les
add
inc
fwait
in
mov
add
es
xchg
cmp
pop
add
jecxz
add
pop
xchg
popf
pop
clc
and
into
jmp
pop
ins
addr16
clc
popa
inc
mov
dec
inc
jno
push
inc
lods
out
scas
loop
fsubr
mov
push
cmps
ds
inc
mov
fnsave
xor
aaa
lods
adc
mov
push
or
push
jno
and
push
rcl
retf
push
mov
mov
int3
jb
push
ret
ins
ret
scas
or
outs
xchg
add
jne
js
(bad)
aad
enter
ja
xchg
enter
retf
pushf
mov
cld
arpl
or
pop
cmp
out
(bad)
xor
xchg
pop
xchg
aas
and
outs
mov
push
mov
pop
loope
xor
mov
sbb
ret
add
add
xadd
cli
or
cmp
pop
in
dec
jle
pop
clc
jo
pushf
mov
inc
mov
or
jp
data16
push
jbe
adc
xchg
jno
jg
push
clc
pop
pop
fisub
jmp
add
mov
add
adc
or
stc
pop
mov
arpl
retf
(bad)
repz
cmps
mov
jl
mov
mov
cmc
push
fnstsw
cmp
cmp
push
pop
int3
pop
inc
mov
add
xlat
lods
int3
xchg
pop
retf
xor
jae
jnp
add
push
xchg
mov
stc
xchg
dec
test
loope
dec
xchg
int3
cli
repnz
cs
mov
mov
test
pusha
mov
idiv
inc
dec
mov
nop
mov
xchg
adc
mov
sti
outs
or
or
mov
ret
lds
cli
push
dec
outs
xchg
ret
imul
lods
hlt
ins
int3
xor
cmp
or
jmp
fcomp
add
pusha
cld
adc
ror
xor
ins
cmp
xor
mov
out
pop
inc
fldenv
dec
adc
stc
pop
and
mov
jbe
push
leave
jns
mov
das
arpl
fld
ins
xchg
dec
mov
or
cmp
lock
push
adc
mov
push
jb
stos
inc
mov
sbb
jmp
int
push
retf
(bad)
shl
movs
jmp
add
mov
scas
xchg
hlt
xor
inc
popf
arpl
jp
pop
cmp
out
cli
out
cwde
xor
dec
push
cld
in
or
(bad)
aas
or
push
popf
loope
mov
and
xchg
pop
into
lods
lds
inc
movs
mov
mov
sbb
test
jecxz
push
fimul
cmp
push
movs
aas
add
pop
push
rcr
addr16
daa
adc
pushf
sub
pop
outs
into
jnp
loop
out
jmp
dec
ins
cmps
inc
jbe
arpl
jnp
cmps
push
jb
jl
sub
je
shr
jae
xor
jg
mov
adc
imul
pop
dec
add
jae
mov
xchg
cmp
fist
(bad)
cmp
jge
mov
xchg
shl
movs
daa
push
and
lahf
and
int3
call
(bad)
dec
xchg
(bad)
shl
popa
icebp
and
rep
sbb
dec
daa
mov
repz
xor
adc
jmp
test
imul
ja
jbe
add
addr16
pop
nop
or
scas
jmp
add
push
inc
sti
lods
(bad)
mov
xchg
div
add
jnp
pop
mov
and
jns
mov
pop
fisubr
add
mov
popa
push
mov
ss
push
jno
ins
mov
and
imul
sbb
in
je
add
xor
sbb
retf
out
push
imul
xchg
pusha
cli
jmp
dec
xchg
push
imul
movs
iret
test
add
mov
repnz
sub
sub
mov
enter
and
inc
inc
(bad)
push
lahf
push
sub
push
mov
sub
mov
jle
mov
int3
and
jo
dec
(bad)
movs
out
fcmove
aad
dec
cmps
dec
aaa
(bad)
fldz
pop
push
adc
add
jb
(bad)
test
push
add
popf
(bad)
sti
jae
aad
pop
inc
bnd
inc
in
fs
push
sbb
pop
cdq
fiadd
push
repnz
test
icebp
imul
call
mov
fld
imul
xchg
push
mov
movs
add
rcr
lods
sub
arpl
pop
push
pop
inc
out
aas
sbb
or
mov
mov
sub
(bad)
fldcw
int
inc
lods
sub
pop
xchg
fwait
std
lods
pop
test
(bad)
stc
popa
add
and
das
cli
push
pop
(bad)
mov
ret
xor
mov
mov
popa
addr16
pusha
cmp
xchg
sub
push
cdq
cmc
scas
jns
cmp
(bad)
cld
adc
test
in
out
push
(bad)
stc
jge
mov
dec
sbb
in
adc
fbld
push
rcl
bound
dec
jmp
fmul
add
sub
mov
mov
jbe
aaa
pop
jno
fs
add
mov
test
lfs
jb
rcr
int
out
pop
iret
outs
sub
mov
push
sahf
mov
jae
pop
inc
pop
ss
ds
test
or
nop
call
aad
in
iret
fdivr
dec
lahf
retf
push
aas
mov
or
into
or
out
je
icebp
fisttp
mov
adc
test
stos
rcr
(bad)
aas
cmp
push
jecxz
out
jns
sbb
pop
rol
call
mov
dec
call
push
(bad)
push
pop
cmps
enter
sub
scas
push
test
ja
inc
out
push
das
jb
lahf
arpl
pusha
call
int
jp
mov
(bad)
mov
out
int
pop
repz
out
and
rcr
xor
sub
ins
sbb
push
pop
sbb
int3
mov
xor
and
das
dec
aad
sbb
loopne
mov
sbb
stc
lds
jmp
repnz
mov
mov
out
fcomp
sbb
std
and
dec
mov
xchg
in
xchg
sub
in
movs
(bad)
call
(bad)
test
inc
sbb
dec
jmp
ret
nop
add
cmp
push
daa
scas
into
adc
in
out
pop
mov
out
mov
pop
xor
ficom
test
scas
dec
jl
mov
movs
push
sub
cwde
mov
jl
sub
push
jns
dec
test
inc
inc
or
xchg
iret
out
daa
lahf
push
imul
mov
inc
daa
ins
cmp
adc
rcr
ret
add
sub
fisub
pop
cmp
sbb
cmc
mov
movs
je
cmps
lods
sbb
xor
inc
and
pop
pop
mov
dec
and
or
pop
lods
mov
push
sub
cmp
sbb
dec
jmp
xor
xor
in
dec
in
movs
sbb
or
jo
sahf
push
inc
mov
jp
aaa
xor
mov
test
jg
jmp
fmul
cmp
dec
(bad)
inc
leave
or
rol
ficom
rcl
(bad)
ret
dec
shl
pop
sahf
out
mov
or
ins
mov
sub
dec
jmp
mov
and
ins
jne
or
popf
xor
js
push
cmps
sub
sub
jb
test
mov
pop
mov
sbb
cmps
xor
jmp
mul
or
cmp
and
or
arpl
cli
and
adc
aaa
das
sub
cmp
jl
aaa
xchg
mov
sub
mov
in
jg
mov
into
mov
pop
out
push
cmps
xchg
sub
icebp
cmp
sti
cmp
mov
xchg
pop
push
push
jp
or
out
mov
shl
sub
test
hlt
punpcklwd
push
dec
jae
add
jmp
loop
sbb
jne
test
fwait
jbe
fst
inc
pop
dec
movs
fistp
and
xchg
push
ss
imul
aad
outs
repnz
mov
lods
shl
push
test
sub
scas
dec
mov
jb
xor
sahf
inc
rcl
loop
xor
push
aam
out
pop
nop
cmps
mov
dec
(bad)
or
sub
dec
in
jb
and
push
sub
int3
xor
std
push
cmp
inc
xchg
cmps
scas
bound
or
or
and
mov
jns
or
mov
test
jmp
aaa
jmp
xor
pop
test
xchg
inc
cmp
pop
jg
jecxz
adc
mov
mov
xchg
div
daa
mov
cmp
mov
dec
mov
sbb
rol
jl
clc
xchg
add
fistp
leave
(bad)
mov
dec
(bad)
stc
jo
and
sbb
aad
adc
mov
push
ret
(bad)
pop
jns
sbb
adc
mov
test
ficom
stc
pop
jle
imul
lods
arpl
fs
into
xchg
stos
mov
cmp
xchg
mov
or
repnz
cmp
xchg
adc
outs
call
ss
aad
ins
in
cmp
pop
jno
mov
mov
loope
sahf
cmps
inc
mov
sub
rcl
dec
lods
inc
hlt
aas
std
or
ret
out
mul
je
mov
aam
(bad)
vpshldq
mov
and
sub
das
test
sbb
fmul
and
add
pop
mov
dec
push
mov
lods
clc
dec
sahf
jmp
dec
mov
test
in
and
cmc
(bad)
sub
mov
popf
sbb
stc
stos
hlt
push
jle
fldcw
js
dec
sti
inc
out
inc
add
repz
inc
cmp
dec
cs
fcmove
mov
rol
pop
add
xchg
xchg
cmp
cdq
dec
dec
sbb
cli
sar
retf
sub
out
pusha
ja
iret
or
adc
int3
(bad)
in
stos
inc
cdq
sub
or
stc
out
lods
cmp
jne
pop
ficom
ss
add
lock
push
xchg
fmul
(bad)
dec
or
cmp
xor
fucom
push
inc
mov
pop
ins
rol
fwait
sub
in
mov
mov
iret
jge
(bad)
(bad)
aad
mov
xchg
(bad)
xchg
xor
mov
mov
popf
push
mov
xor
add
xchg
ret
mov
mov
cmp
jnp
mov
dec
fmul
xchg
jge
fnsave
jo
ja
cld
js
dec
sub
loop
pushf
les
jmp
stc
ds
dec
std
pop
pushf
daa
test
js
fsubr
scas
test
cmc
xchg
stc
inc
push
jo
jge
mov
mov
mov
or
xchg
cmps
mov
out
inc
stos
in
mov
fwait
and
das
mov
out
cmp
pop
aaa
pop
dec
xor
cld
jmp
xor
test
and
push
xor
jae
gs
push
cmps
fdivr
pop
fs
ds
mov
leave
xor
lods
sbb
lahf
push
xchg
pop
and
fstp
ret
jbe
sub
sahf
mov
sub
(bad)
movs
sbb
js
cmp
or
inc
add
dec
fbstp
out
jge
cld
adc
test
xchg
jbe
xchg
rcr
ret
dec
mov
xchg
(bad)
in
pop
repnz
or
ds
inc
cmps
sub
cmc
lea
sub
sbb
mov
sbb
hlt
sbb
mov
lock
dec
push
mov
push
test
mov
sti
aam
outs
in
out
div
and
or
leave
xor
push
neg
mov
cli
sar
and
mov
jmp
cwde
xchg
sbb
sub
test
add
pop
movs
pop
and
bound
jmp
pop
mul
xchg
loop
mov
and
jmp
loop
and
sbb
dec
push
cli
in
cmp
shl
push
ret
mov
mul
cs
cmp
pop
neg
adc
dec
jo
jmp
xor
adc
push
ror
sar
dec
out
rcl
jne
sets
stc
fisub
int3
push
jle
jge
add
(bad)
jb
cdq
pop
xlat
js
dec
pop
xchg
cmp
cld
jmp
inc
add
push
jnp
cmp
add
mov
mov
int
imul
xchg
popa
push
sbb
xor
ins
(bad)
fild
pusha
outs
ficomp
inc
add
adc
inc
push
or
xchg
inc
repnz
rol
lock
pop
pop
dec
pop
out
in
sub
cmps
push
xchg
bound
inc
ss
or
cmp
mov
add
fisub
(bad)
mov
mov
xchg
pop
mov
lds
repz
cs
sti
cmp
lea
and
mov
stc
mov
dec
jmp
jnp
call
cdq
lods
cwde
lock
inc
mov
adc
addr16
push
mov
pop
sub
pop
ja
das
inc
sub
bound
sbb
icebp
xor
cs
es
scas
or
xchg
jno
add
push
movs
push
lds
sar
cdq
repnz
js
loop
cmc
pop
mov
lea
inc
sub
test
mov
ins
ins
add
les
inc
fisubr
jmp
call
add
add
gs
pushf
mov
inc
pop
fs
adc
cmc
fmulp
retf
nop
int
jae
fwait
loop
inc
std
add
fdivr
fs
lea
sub
cmc
push
push
jl
mov
ret
bswap
(bad)
dec
push
(bad)
repz
inc
xlat
popa
stos
std
ja
mov
pop
dec
sub
ins
mov
cs
aaa
inc
pop
std
ds
cs
pop
cmps
les
arpl
push
dec
xchg
in
jecxz
push
jmp
sub
fist
into
inc
stos
imul
push
sub
jmp
iret
pop
bound
push
inc
lock
clc
int
std
and
(bad)
gs
es
sbb
cmp
call
mov
jmp
in
icebp
adc
popf
scas
div
lea
adc
mov
clc
test
test
mov
jno
shr
mov
(bad)
jle
daa
push
inc
mov
inc
dec
hlt
cmp
test
sbb
call
and
(bad)
into
mov
into
int3
sub
jmp
cmp
or
mov
mov
not
test
test
jecxz
(bad)
jns
push
jae
xchg
pop
xchg
pop
cmp
imul
cmp
test
(bad)
fild
sub
jbe
cli
sub
in
jns
es
sub
dec
test
xchg
mov
das
sub
stc
or
stos
ret
pop
out
sub
mov
ror
xchg
and
sbb
dec
adc
pop
dec
sbb
sub
(bad)
lock
cs
imul
mov
xchg
(bad)
ins
std
(bad)
clc
lds
dec
daa
jl
mov
adc
push
add
xor
jp
(bad)
or
fild
jno
sub
sub
sbb
(bad)
rol
into
test
sub
mov
and
xlat
imul
cmp
sub
inc
mov
pop
mov
test
xor
mov
mov
ins
out
fldcw
(bad)
mov
mov
mov
lahf
cld
pusha
sbb
sub
xor
sbb
lahf
cmp
ins
call
cmp
jmp
mov
pop
jmp
cmps
ja
xchg
ins
inc
mov
popf
aaa
cmp
aaa
mov
xlat
shl
arpl
mov
jns
sti
jmp
jns
cwde
mov
pop
mov
enter
xchg
push
sti
arpl
mov
xlat
idiv
cli
dec
ins
push
mov
cmp
pop
mov
and
in
add
jno
mov
pop
add
adc
pop
add
sub
shl
test
imul
(bad)
cwde
add
mov
cs
push
pop
inc
dec
sbb
or
pop
repz
enter
inc
mov
jmp
mov
push
je
sub
cs
xor
push
and
(bad)
xor
cmp
in
lock
fld
mov
mov
aas
es
inc
xchg
(bad)
mov
xchg
pop
inc
push
jle
ffreep
aas
jecxz
jne
test
test
movs
js
cld
imul
mov
rcr
jmp
mov
or
sub
inc
daa
scas
sub
cmp
inc
repz
bnd
push
adc
or
fwait
loope
lods
mov
sbb
mov
popa
stos
mov
jg
cmp
fwait
pop
inc
out
les
aam
cmp
dec
sbb
sbb
adc
or
push
dec
mov
jmp
mov
mov
scas
cwde
cmps
or
pop
lea
mov
stos
sti
adc
repz
mov
cmp
dec
(bad)
mov
shl
jmp
(bad)
das
pop
or
jmp
popf
icebp
sar
fbld
push
shr
cmp
add
jmp
mov
dec
rcl
mov
aaa
outs
stos
retf
or
cdq
pop
bound
jmp
xchg
daa
fmul
out
push
out
loope
cmp
add
mov
dec
div
stos
xchg
cmp
dec
int3
or
ficom
dec
lods
leave
les
pop
cmp
push
sbb
aas
dec
pop
js
mov
mov
push
push
xchg
sbb
add
iret
add
add
add
pop
pop
es
add
push
xchg
mov
jns
shl
push
cmp
fnsave
mov
std
add
sbb
xlat
shr
and
inc
fs
scas
in
mov
pop
mov
inc
or
jl
test
(bad)
out
adc
pop
imul
mov
je
out
dec
xor
or
cmps
call
add
aad
fisubr
addr16
or
lods
lahf
xchg
mov
inc
pusha
sti
sub
mov
push
ror
adc
les
icebp
and
das
mov
outs
sbb
gs
jecxz
add
rcl
adc
retf
adc
xor
cmp
out
mov
add
stos
push
dec
adc
imul
jmp
bound
std
push
out
dec
aas
mov
lock
jecxz
pop
call
sub
test
pop
int3
fcomp
js
jp
inc
inc
gs
push
data16
pop
ret
movs
fisubr
aad
xchg
inc
out
sbb
mul
and
cld
and
ficom
pop
repz
push
aaa
lea
loop
mov
imul
xchg
loop
jle
sub
faddp
fwait
cmp
into
lock
aas
inc
pop
sub
or
sahf
pop
push
pop
mov
push
aas
jp
call
std
int3
stc
xor
pop
cmps
push
loop
ja
cmp
jo
xor
push
push
and
mov
jecxz
sub
xor
sub
es
xchg
scas
pop
in
cmps
dec
mov
scas
push
cmp
push
push
clc
mov
jns
sbb
int
sbb
(bad)
pop
xchg
dec
mov
xor
jae
jp
inc
xchg
int
jecxz
leave
rcr
retf
rol
xchg
mov
sbb
retf
inc
sbb
jb
pop
mov
ds
movs
ja
mov
xchg
jecxz
fdivr
jo
or
popa
xchg
les
out
mov
retf
in
add
pushf
fidivr
jo
and
jae
pusha
test
test
push
stos
mov
pushf
shl
adc
jge
jbe
mov
popf
push
mov
stos
je
sub
rcl
sub
push
or
mov
movs
push
xor
dec
add
jnp
aaa
jne
or
jae
mov
xor
call
xchg
jecxz
es
add
adc
leave
jns
push
cs
test
mov
sbb
add
push
test
or
and
or
pop
mov
jmp
in
mov
adc
cwde
cmps
inc
cmp
lods
push
stos
cmp
mov
and
mov
jg
inc
repz
mov
mov
stc
jnp
out
push
(bad)
pxor
test
and
mov
or
aam
adc
(bad)
xor
pushf
aaa
mov
xor
jmp
lods
mov
ins
je
int3
test
test
shr
jno
imul
into
lea
data16
(bad)
scas
nop
sbb
cmps
jecxz
sbb
push
sbb
addr16
xchg
or
and
sub
aaa
sbb
scas
cmp
push
dec
jle
div
mov
pop
jb
and
cs
mov
in
pop
mov
dec
bnd
adc
scas
stos
mov
mov
cmp
push
test
cmps
lds
enter
and
stos
mov
and
or
dec
inc
pop
cmc
adc
xchg
jbe
jo
sbb
jl
cmps
sub
out
push
sbb
sbb
inc
jmp
jae
call
test
repz
rcr
sbb
jmp
adc
pop
neg
sub
cmc
lods
sub
xor
neg
pop
cmps
fdivr
mov
adc
mov
or
out
and
sub
imul
inc
test
pusha
mov
xlat
lea
mov
mov
push
fdivp
aas
rep
shl
pop
dec
sbb
fidivr
fadd
(bad)
dec
sbb
jb
inc
ret
adc
adc
aam
push
les
xor
in
jnp
push
xchg
repz
sbb
mov
add
sub
xor
mov
es
xchg
and
mov
jmp
mov
adc
add
xchg
jno
rol
adc
fxch
sbb
pop
popa
mov
iret
ins
sub
jecxz
jns
mov
push
leave
cmp
movs
push
movs
or
(bad)
das
(bad)
pop
rcl
cdq
xchg
dec
or
push
push
test
enter
repz
leave
add
xor
mov
mov
retf
mov
push
xchg
fmul
es
repnz
add
mov
push
push
leave
jecxz
sbb
imul
mov
add
(bad)
or
dec
test
jmp
je
int3
jb
xchg
jmp
cmps
data16
enter
xchg
pop
int
mov
and
push
jp
loopne
xchg
adc
ds
push
pop
(bad)
jmp
jns
jne
movs
cmp
push
test
jmp
mov
aaa
cmp
shl
or
pop
ror
sub
out
ja
mov
aad
adc
movs
sub
cmps
xchg
mov
loope
outs
les
adc
pop
movs
loop
add
aaa
ja
pop
mov
cmp
out
and
pop
pop
inc
push
xchg
enter
cmps
mov
mov
(bad)
rol
icebp
inc
mov
mov
jae
jmp
push
inc
mov
fs
and
pop
mov
(bad)
dec
sbb
sub
scas
pop
sbb
out
test
mov
test
mov
lock
or
cmp
gs
nop
fist
mov
xor
rcl
pop
pop
(bad)
sbb
sub
jle
xchg
sub
sub
mov
out
add
movs
push
push
movs
mov
sbb
sub
ja
rol
mov
adc
in
iret
in
adc
aaa
aam
xchg
push
mov
arpl
mov
jecxz
adc
cs
xchg
fwait
les
and
sar
xchg
jge
jb
push
sti
push
pusha
dec
or
adc
jae
clc
dec
cli
(bad)
clc
xchg
jp
aas
outs
inc
xchg
in
mov
mov
ds
xchg
int3
fwait
aad
and
sbb
cmps
sbb
mov
jbe
mov
cmps
sub
movs
and
fild
nop
loopne
movs
out
mov
adc
imul
sub
ret
cmovle
cs
jge
fsubr
adc
jmp
jp
add
cs
dec
ins
cli
or
repz
aas
sub
ja
sub
div
jp
xchg
in
dec
xor
fwait
inc
dec
xlat
jo
jne
jecxz
jg
cmp
popf
and
aad
test
cmp
outs
fiadd
add
scas
repnz
fistp
pushf
outs
add
pop
icebp
inc
cmp
out
inc
or
cdq
xor
xchg
inc
js
xor
mov
xor
aam
jp
and
pop
xchg
jo
or
cmps
mov
test
cmps
bnd
mov
cmps
stc
(bad)
popa
dec
pusha
add
mov
push
and
cmps
jb
mov
cli
push
cmp
add
xchg
popf
lods
sbb
je
jno
mov
shr
rcr
push
add
es
cmp
xchg
enter
mov
sbb
jg
pop
cmp
(bad)
mov
ret
lds
cwde
or
lock
int3
mov
mov
sbb
loop
push
cmp
xor
add
retf
push
xchg
mov
fwait
cmp
jge
push
and
loopne
pop
inc
int3
add
xor
loope
test
cld
shl
ja
pop
outs
adc
push
sahf
xchg
xor
jl
imul
lahf
rol
mov
mov
sub
popf
mov
mov
xchg
add
sbb
adc
test
out
cld
mov
imul
mov
sbb
cmp
push
pop
xor
xchg
hlt
jae
stos
nop
in
ja
(bad)
or
pop
addr16
and
ins
cwde
jbe
mov
mov
ins
and
rol
ds
pushf
mov
test
arpl
dec
xchg
(bad)
(bad)
and
dec
bound
mov
mov
sub
jmp
scas
cmp
push
imul
xor
mov
daa
sub
repnz
sbb
or
jmp
xor
sub
sbb
add
push
test
repnz
pop
int
sbb
fsubr
in
push
jge
sbb
cld
cmp
cli
repz
retf
sub
sar
sub
mov
inc
and
pop
or
ja
fild
rcl
push
out
out
fwait
mov
adc
das
aaa
inc
push
jmp
ret
dec
loop
adc
dec
push
sti
xchg
push
shl
pop
push
or
adc
mov
ret
inc
push
das
in
lahf
mov
push
push
lea
or
sub
icebp
rdtsc
lahf
dec
test
ret
movs
inc
add
mov
add
and
cmp
js
sbb
std
cs
jnp
jl
mov
je
nop
jg
xchg
jge
push
or
dec
addr16
not
mov
addr16
imul
dec
dec
(bad)
mov
rol
xchg
shl
mov
adc
cmp
inc
(bad)
out
sbb
js
add
or
popf
push
inc
nop
pushf
ins
pop
enter
inc
(bad)
cmp
cmp
adc
pop
mov
lods
push
push
adc
(bad)
arpl
les
icebp
ss
call
jae
push
scas
aam
or
cmps
dec
sub
fsubp
xchg
mov
jecxz
jmp
bound
xchg
mov
dec
jnp
xor
ds
ja
add
push
loop
das
cmps
push
dec
outs
pop
sbb
cli
(bad)
jb
retf
stc
inc
add
sar
aas
fidiv
mov
ret
or
xchg
mov
mov
lods
lahf
ret
push
fadd
xor
test
lea
pop
arpl
iret
jne
shl
add
punpcklwd
ja
call
push
aas
aas
dec
pusha
sub
(bad)
pop
(bad)
mov
jg
pushf
(bad)
(bad)
retf
jg
mov
neg
push
add
dec
add
mov
inc
jmp
add
sbb
ret
ficomp
xor
aam
ds
dec
adc
stc
jge
jmp
hlt
dec
or
inc
mov
cmp
fild
push
dec
nop
or
xor
movs
mov
xor
jmp
cwde
push
int3
pop
cmp
imul
enter
push
shl
addr16
adc
inc
sbb
sub
mov
add
call
jae
push
mov
test
push
(bad)
fdivr
es
xchg
pop
add
jg
pop
xchg
push
inc
loop
lock
add
mov
push
stc
fist
sahf
lds
inc
fwait
(bad)
jbe
mov
data16
into
mov
in
sub
fsubr
into
in
push
fwait
add
into
and
push
imul
mov
jmp
fimul
pushf
(bad)
lds
lds
fwait
mov
mov
jno
mov
push
jbe
mov
inc
cmp
vphaddubd
lds
xchg
call
pop
mov
xchg
les
aad
add
cmp
mov
call
std
stos
xchg
xchg
scas
sbb
adc
push
add
xchg
fcomp
sbb
in
rol
and
adc
out
sbb
xchg
cmc
fs
leave
xor
mov
ins
push
cmp
lahf
je
add
jno
mov
sub
pop
inc
dec
sub
aad
jnp
call
push
push
jmp
imul
ret
xor
outs
xor
push
dec
pop
xlat
je
cli
out
sub
iret
dec
fucomip
mov
fwait
(bad)
ja
ins
popf
inc
call
mov
test
mov
or
call
xchg
jl
adc
outs
setne
mov
dec
mov
xor
mov
cld
mov
pop
fsubr
xchg
push
adc
add
pop
lock
xchg
sar
(bad)
mov
lahf
push
and
jmp
and
inc
xchg
inc
test
push
out
hlt
inc
xlat
add
mov
xchg
movs
pop
sbb
inc
sbb
stos
stos
loop
mov
popf
xor
ret
mov
mov
out
sbb
enter
lea
push
cmps
aas
rcr
iret
das
push
inc
mov
movs
loope
cmp
dec
hlt
shr
jg
stos
daa
and
xchg
leave
pop
jg
mov
xor
in
add
ret
xchg
aam
fdiv
cmps
rcl
add
adc
out
jno
shr
fcomip
xchg
adc
jno
or
pop
dec
jb
fsubr
inc
pop
cmps
xor
aad
sbb
sub
ins
cwde
(bad)
cli
icebp
adc
stos
cmp
mov
pop
sahf
ret
gs
lods
data16
cmps
clc
stos
dec
jmp
pop
mov
mov
or
aam
xchg
ins
lahf
add
inc
and
fwait
shl
xor
sar
mov
imul
int3
into
repz
cmp
sbb
out
adc
mov
xchg
test
lds
dec
adc
rol
jo
or
dec
arpl
mov
add
jns
push
js
aas
out
int3
je
bound
clc
ret
jbe
dec
push
add
fcmovne
stos
xor
sbb
inc
and
pusha
stos
dec
sub
dec
out
(bad)
ins
jmp
jb
lods
push
shr
pusha
xchg
movs
enter
pop
imul
int3
int
sub
mov
(bad)
imul
mov
test
test
xchg
int3
sub
sahf
(bad)
fild
sub
xchg
out
ins
retf
addr16
rcr
mov
out
dec
dec
inc
add
hlt
xor
into
mov
rol
fldz
jno
or
scas
leave
scas
jns
push
aam
jecxz
push
in
xchg
dec
add
add
pusha
push
and
or
icebp
lahf
xor
addr16
xchg
fs
outs
inc
repz
jb
daa
mov
dec
sub
xor
aam
adc
jl
pop
xchg
sahf
cmps
dec
and
es
push
mov
push
mov
mov
xor
dec
push
call
pop
push
rcr
mov
movs
and
xchg
inc
push
movsx
cmp
outs
or
scas
pop
std
cmps
rcl
clc
mov
add
add
les
fsubr
inc
jno
fistp
fidivr
les
jo
pop
adc
rcr
or
inc
jmp
mov
fsubp
xor
inc
fadd
push
call
dec
add
jae
or
xchg
popa
lods
fdiv
sahf
stos
add
fmul
lods
loope
push
xchg
(bad)
sub
pop
mov
sbb
and
cmp
cld
push
rol
push
sbb
lds
sbb
mov
mov
mov
in
push
add
jnp
jp
xchg
mov
mov
aas
pop
jl
test
jmp
out
push
mov
inc
out
call
in
loope
stos
ret
aas
iret
cmp
adc
in
cwde
sub
jmp
nop
pop
or
jmp
fs
jmp
mov
retf
mov
cmps
xor
add
dec
mov
shl
mov
add
xor
repnz
mov
sbb
nop
sar
jne
adc
xchg
dec
ret
cmp
adc
jns
and
dec
jmp
jge
dec
cmps
dec
out
loope
in
jae
mov
push
mov
cmp
push
fcmovne
cmps
test
adc
xor
cmp
mov
test
jp
mov
inc
jne
sbb
sbb
adc
retf
out
test
fisubr
mov
xchg
cmc
mov
dec
or
retf
pop
loope
icebp
adc
jg
ja
fldcw
addr16
inc
mov
or
jle
aad
bound
or
sbb
lahf
cld
rcr
rcr
cld
nop
xchg
hlt
sub
push
imul
xchg
loopne
push
je
or
and
jmp
push
lock
fild
clc
jmp
hlt
jg
lock
fild
xchg
rcl
sbb
or
cmp
pop
out
inc
adc
add
jp
or
and
pop
push
aaa
sub
mov
out
push
mov
xchg
fld
dec
cmps
adc
sub
das
mov
dec
pop
pop
dec
jl
rcr
inc
(bad)
pop
stos
pop
or
sub
jmp
test
xlat
aad
ret
sti
lods
add
cmp
ror
dec
mov
(bad)
outs
outs
std
push
add
gs
xchg
mov
das
ret
mov
mov
mov
lods
jle
pop
pop
jmp
xchg
(bad)
shr
repz
and
sub
mov
pop
or
jmp
nop
int3
xor
pusha
aas
dec
dec
aas
dec
pop
xchg
sbb
xchg
dec
jbe
and
mov
jno
push
movs
sbb
and
lods
push
mov
dec
arpl
bound
dec
retf
jns
aas
add
addr16
xchg
push
sbb
adc
cmp
mov
mov
stos
test
(bad)
mov
xchg
xchg
cmp
mov
jnp
imul
ds
sbb
daa
outs
mov
sbb
and
push
ret
lds
mov
das
fild
pop
adc
std
jbe
mov
mov
imul
jg
lahf
and
adc
sahf
sbb
push
xchg
pop
(bad)
std
sub
ret
xor
add
js
stos
xor
xchg
jecxz
(bad)
mov
adc
push
mov
pop
cld
xor
cmp
imul
(bad)
in
pop
pop
ffreep
sub
add
int3
push
push
xor
test
jg
movs
dec
cmp
or
add
fld
cwde
lods
cs
pop
and
sti
(bad)
retf
daa
xor
lea
(bad)
loopne
cmps
push
jb
add
scas
add
lock
mov
mov
mov
mov
xor
lods
scas
inc
fbstp
inc
dec
cmp
fwait
jnp
push
in
mov
add
ret
xchg
movs
jecxz
cdq
fwait
push
pop
in
popf
fldcw
mov
call
mov
imul
mov
or
rcl
add
xor
adc
xor
sti
popf
fwait
loop
retf
mov
in
inc
push
xor
xchg
imul
dec
into
xor
(bad)
cmp
shl
mov
mov
mov
nop
nop
or
mov
xchg
jne
ds
add
je
xlat
sahf
fisub
call
test
lock
mov
pop
pop
dec
pusha
neg
mov
mov
stos
inc
movs
pop
xor
xor
test
or
(bad)
cli
sub
(bad)
xor
daa
jo
xchg
enter
mov
imul
jg
xchg
mov
xchg
jb
call
scas
push
mov
sbb
stos
mov
imul
pop
(bad)
jecxz
inc
leave
stc
out
mov
shl
lods
or
gs
dec
test
clc
ret
dec
lahf
lods
sbb
xor
aas
mov
xor
pop
sub
jo
shl
sub
(bad)
call
ins
ins
sub
cmp
cmp
pusha
loope
pop
sbb
jb
inc
push
sbb
into
jne
mov
xor
dec
or
loope
add
and
sbb
mov
test
(bad)
or
mov
das
xchg
sbb
movs
std
les
mov
mov
inc
ss
cli
loope
adc
ss
aas
mov
es
mov
mov
jmp
mov
les
mov
in
dec
and
or
sub
adc
xchg
and
fwait
call
test
test
retf
cmp
fidivr
ins
push
clc
and
inc
rcl
sar
clc
mov
rcl
pop
push
test
sub
pusha
enter
loop
test
gs
pop
cld
fnstenv
mov
cli
sbb
iret
es
cmp
retf
xor
mov
test
and
addr16
mov
fcomp
mov
mov
pushf
push
sub
cmp
call
fsubr
mov
aas
fld
xor
lahf
fstp
push
int3
outs
pop
sti
js
push
jecxz
dec
out
push
fbstp
inc
pop
pop
jne
scas
sub
into
mov
mov
outs
data16
dec
test
jmp
inc
cmp
jl
xor
imul
mov
imul
mov
pop
jmp
in
sbb
push
cs
ret
ins
mov
xchg
pop
adc
push
movs
loop
dec
mov
dec
add
add
test
lock
popf
xchg
iret
mov
inc
add
cdq
cmps
dec
ss
popf
inc
and
sub
mov
mov
repnz
jmp
or
cmp
data16
lods
popf
dec
push
pop
xor
das
fwait
daa
mov
dec
sub
rol
xchg
repz
pop
cli
ins
test
pop
pop
jl
lahf
xchg
dec
aas
push
lea
retf
jl
lea
pop
jge
xchg
lds
mov
dec
shr
imul
out
psubsb
add
in
push
dec
mov
in
jge
push
mov
loope
test
fild
test
pop
mov
mov
sahf
sti
and
push
(bad)
clc
dec
call
dec
ret
mov
lock
imul
out
push
mov
xchg
aas
sub
mov
(bad)
bound
movs
cmps
nop
aas
test
popa
(bad)
loop
imul
ins
dec
jb
lds
mov
jmp
mov
not
adc
ins
dec
inc
dec
(bad)
sub
jmp
clc
jno
scas
jl
jmp
(bad)
add
cwde
xchg
or
mov
inc
jmp
pushf
leave
jae
jmp
inc
mov
fwait
(bad)
fs
ins
enter
push
fcomp
movs
cmc
or
add
mov
das
and
dec
out
jae
(bad)
sub
stos
jae
xchg
int3
dec
daa
ss
add
punpckhwd
shl
dec
stos
aas
shl
push
mov
cmp
pop
in
lock
or
inc
data16
sub
addr16
pop
pop
push
sar
xor
add
das
repz
loopne
and
outs
test
js
cmp
cwde
in
loopne
sub
adc
push
std
in
jo
mov
cmc
cmp
jmp
movs
add
shl
test
(bad)
icebp
ins
cmp
dec
in
fdivr
sbb
shl
dec
lock
retf
jecxz
(bad)
pop
add
loopne
adc
popf
pop
in
popa
sub
dec
fnstcw
jg
pop
idiv
cli
sahf
dec
leave
pusha
icebp
fild
inc
jl
ins
js
retf
jmp
push
hlt
jne
stos
adc
neg
xchg
and
(bad)
push
fidiv
das
mov
or
sti
pop
mov
add
(bad)
repnz
and
xor
repz
retf
scas
push
mov
popf
sub
cld
inc
gs
in
push
sahf
iret
loope
fwait
mov
inc
add
push
adc
dec
test
fwait
inc
je
daa
stos
jmp
fst
mov
idiv
es
cmps
sub
daa
cwde
dec
ror
mov
push
rcl
scas
push
pushf
int
or
std
ror
out
jp
jns
jl
jmp
mov
fisttp
test
cmp
dec
push
ja
js
leave
test
cmp
sub
mov
jmp
(bad)
xchg
mov
out
add
mov
repnz
mov
or
imul
sbb
stc
mov
fdiv
or
push
mov
dec
push
cdq
daa
add
and
retf
ds
ror
lock
sub
push
test
dec
addr16
or
pop
aam
mov
jo
(bad)
ficomp
or
inc
leave
dec
int
mov
jno
stc
(bad)
popa
mov
push
or
push
rcr
pop
jns
sti
jg
sbb
call
sbb
mov
fdivr
mov
arpl
retf
fsub
jne
int
lahf
jno
mov
xchg
cli
lea
fist
mov
outs
fwait
popa
adc
lahf
scas
lahf
push
sbb
stos
repz
jecxz
pop
mov
jmp
add
inc
test
icebp
inc
daa
ins
(bad)
or
and
sbb
xchg
push
repz
sbb
xchg
jge
jb
and
or
mov
ret
push
and
xlat
xchg
cmps
loopne
je
push
lea
or
and
fisub
outs
inc
call
mov
ret
cmp
cs
js
cwde
mov
pop
(bad)
pop
popa
test
pop
push
cmp
popf
cmp
shl
scas
bound
jnp
jae
mov
jecxz
pop
sub
stos
pop
loop
or
stc
pop
in
inc
xor
cmps
(bad)
inc
mov
xchg
inc
aas
aad
mov
adc
cld
jg
daa
sbb
or
sbb
add
and
pop
sub
scas
leave
repz
scas
imul
mov
mov
jbe
add
scas
lds
lods
add
pop
sbb
xlat
jmp
dec
push
pop
fsubp
pop
clc
sbb
scas
mov
sbb
push
lea
inc
or
repnz
movs
sbb
test
pop
call
rcr
add
out
movs
sti
xchg
lods
fcmovu
pop
adc
jl
imul
rcl
dec
icebp
push
mov
fst
inc
imul
pop
call
shl
pop
lods
aam
bound
xchg
loop
cmp
pop
mov
mov
xchg
push
shr
sub
sbb
mov
add
repnz
pop
mov
pop
mov
xchg
mov
cmps
xchg
add
data16
aaa
retf
or
adc
push
lods
ja
dec
fistp
ret
aam
and
push
push
fldenv
leave
xchg
ret
inc
stos
and
in
add
mov
dec
clc
clc
and
(bad)
cmp
popa
pop
mov
rcl
scas
inc
adc
adc
xchg
dec
ins
jg
imul
mov
inc
ins
mov
jl
sub
xchg
fsubr
inc
mov
hlt
fst
dec
sbb
sub
test
xor
dec
push
push
mov
push
mov
loope
or
cmp
popa
mov
mov
push
shr
rol
mov
sub
ss
out
jns
push
sbb
popf
popa
jl
stos
imul
(bad)
jge
pop
mov
inc
scas
add
push
ins
data16
jecxz
ins
inc
xchg
into
mov
xchg
cmp
loope
(bad)
cmp
cmp
jo
outs
and
mov
or
fst
xchg
(bad)
inc
bound
dec
inc
lock
sub
xchg
cmps
hlt
xor
test
fild
xor
stc
dec
test
(bad)
out
dec
fwait
shr
dec
inc
in
test
or
test
dec
movs
inc
adc
mov
push
sbb
std
mov
rol
add
dec
sti
fisub
test
mov
ss
dec
repnz
push
or
idiv
movs
movs
pop
add
fwait
adc
xchg
hlt
jl
mov
mov
push
imul
clc
mov
shl
and
sub
sbb
cmp
cmc
inc
add
push
pop
cmp
xchg
mov
js
xchg
outs
mov
jmp
sbb
mov
xchg
cmp
(bad)
(bad)
mov
jp
lods
movs
sar
retf
xor
cli
pop
push
stos
ds
mov
dec
cmp
std
arpl
xchg
loope
stc
pop
or
inc
cmc
xchg
mov
movs
scas
dec
les
fistp
add
jnp
or
stc
jnp
xchg
lahf
dec
in
ins
rcr
fwait
stos
xor
pop
jne
cdq
add
lea
rcl
mov
ret
arpl
jl
lahf
mov
movs
jmp
jmp
pop
shr
cli
mov
rcl
icebp
xchg
rcl
or
ins
xchg
out
int3
iret
cwde
out
shr
jle
retf
mov
mov
jmp
into
stos
sub
xchg
xor
add
mov
sahf
lahf
cs
aam
in
pop
jg
push
and
aad
xchg
xchg
mov
ret
mov
inc
push
test
cwde
add
xchg
ret
mov
jp
sbb
cwde
fs
push
idiv
retf
jmp
jb
mov
dec
lds
xchg
aas
sahf
or
lods
pop
nop
mov
andps
or
xlat
es
mov
pushf
pop
test
scas
leave
jb
cmp
mov
out
into
inc
or
push
add
mov
mov
fdiv
cdq
jg
rcr
jb
mov
rol
sahf
cmc
fwait
stos
sbb
sbb
sbb
mov
jecxz
jns
push
fisttp
in
push
movs
mov
fistp
sub
bound
mov
pop
test
mov
ds
mov
mov
xchg
cs
stos
jno
adc
adc
add
xchg
jbe
xchg
sbb
movs
adc
mul
dec
js
out
sub
xchg
mov
mov
cld
std
mov
repz
cli
jae
hlt
cmps
(bad)
sar
jge
sub
xor
push
inc
test
jmp
ds
and
dec
imul
(bad)
fimul
cmp
ret
pop
adc
push
or
sbb
sbb
int
mov
(bad)
out
bound
sub
div
fstp
jns
gs
push
jle
cwde
mov
into
enter
idiv
das
imul
push
call
fdiv
out
mov
sbb
mov
sub
add
cmp
icebp
push
jno
fist
fwait
jns
sub
push
call
loopne
into
ret
jno
arpl
jnp
mov
and
sub
dec
retf
mov
retf
(bad)
test
or
pop
dec
arpl
cmp
mov
loop
xor
movs
mov
add
dec
cmps
movs
jmp
cmp
retf
inc
shr
ds
dec
loop
sti
movs
or
lea
xor
mov
repnz
imul
xchg
test
pop
aaa
xchg
fisubr
aaa
mov
cmp
add
dec
out
imul
xor
enter
cmp
rcr
mov
fwait
lahf
rol
je
test
adc
out
pop
inc
xchg
sub
sbb
cmp
shl
adc
loope
mov
fs
rcl
push
push
sbb
pushf
cdq
lods
ret
pop
pop
in
xchg
lods
add
pushf
jnp
xchg
aad
cmc
add
fldcw
or
out
mov
out
pop
call
sub
sbb
fst
aad
imul
adc
sub
sbb
ret
into
mov
xchg
ins
dec
fs
cli
pop
push
cmp
(bad)
mov
mov
mov
jle
call
mov
inc
mov
repnz
dec
add
imul
aas
push
mov
push
or
pop
mov
out
mov
sbb
and
mov
and
push
inc
sub
(bad)
addr16
outs
enter
mov
test
inc
add
in
cli
out
retf
(bad)
sahf
sahf
adc
add
loop
into
ja
or
pop
dec
sbb
jmp
test
add
nop
(bad)
jp
data16
in
mov
sub
call
or
jg
sub
jns
(bad)
dec
mov
and
fdivrp
push
dec
popa
or
call
test
xchg
pop
fisubr
imul
mov
and
cmp
sbb
mov
mov
mov
ret
jo
pop
xchg
add
pop
xchg
sahf
pmulhuw
inc
mov
and
ins
pop
cwde
sbb
and
push
sbb
ret
shl
into
mov
push
dec
fnstcw
pop
adc
sahf
jl
data16
jmp
sbb
sbb
out
push
push
sub
jle
aad
push
in
outs
out
mov
pushf
rcr
pushf
pop
int3
lea
lahf
daa
fidiv
mov
jge
pop
push
cmc
mov
fcomp
or
dec
mov
mov
cs
cmps
js
cmc
sbb
popf
xchg
xor
pop
cmp
cmp
data16
pop
sub
es
jmp
xor
and
stc
jne
or
daa
cmp
pusha
mov
cmp
mov
cmps
jge
sub
lahf
mov
fadd
cld
rcl
xchg
jg
fild
cmp
jns
movs
(bad)
lock
or
(bad)
dec
adc
(bad)
daa
push
push
mov
mov
int3
jne
iret
lds
test
icebp
mov
inc
mov
stos
pop
ja
lds
push
adc
xor
cmps
iret
or
aas
iret
xchg
neg
xor
retf
loop
fistp
out
lods
retf
xchg
shl
or
ins
sahf
mov
ret
cmps
sbb
mov
pop
movs
cld
push
mov
loop
ja
std
jmp
call
or
enter
ja
add
sbb
ins
jae
jb
sub
xchg
test
add
cld
jno
(bad)
cdq
shl
leave
xchg
popf
stc
xchg
jecxz
(bad)
add
mov
jecxz
or
jmp
cmp
es
lods
inc
push
cld
sbb
pop
(bad)
scas
lods
ins
rcl
xchg
xchg
in
or
aaa
je
sti
dec
xor
pop
out
adc
dec
iret
cli
pop
stos
lahf
jmp
mov
ja
push
sub
and
cmp
fidivr
or
in
pop
pop
sar
jg
push
popf
outs
pop
imul
fisub
cmp
leave
test
dec
(bad)
sub
xchg
in
(bad)
in
movs
mov
cmps
xchg
mov
movs
push
movs
in
mov
push
push
jns
push
aam
adc
or
stos
or
lahf
(bad)
inc
in
test
pop
out
repnz
cmp
div
(bad)
rcr
(bad)
jo
inc
mov
popa
imul
lods
loopne
pop
add
dec
jle
inc
mov
loop
jp
fs
push
mov
aad
shl
icebp
adc
je
hlt
mov
pusha
mov
retf
sbb
lahf
sbb
(bad)
or
outs
cld
adc
xchg
mov
inc
xor
(bad)
rcr
or
mov
push
pop
add
add
cmp
cwde
fwait
jp
fild
mov
mov
aad
out
xchg
pop
fsub
ja
or
mov
fst
sub
hlt
test
adc
xor
xor
adc
xchg
push
jns
xchg
pop
mov
mov
xchg
jge
popf
fwait
inc
push
data16
ins
lods
jbe
mov
sub
xchg
cmp
inc
push
or
imul
and
jle
xchg
jg
clc
pop
add
jmp
push
mov
jo
mov
xchg
xlat
loop
and
(bad)
or
add
es
in
pop
rol
fmul
ins
mov
test
or
inc
mov
or
frstor
mov
in
movs
into
push
sub
pop
mov
pop
mov
add
jle
push
sbb
cmp
and
int
jnp
adc
loopne
mov
xchg
mov
clc
fst
es
stos
jge
movs
and
sbb
imul
fdivp
push
jno
mov
sub
pop
pop
loopne
add
dec
test
mov
(bad)
mov
mov
pop
mov
retf
ja
das
sbb
cmp
les
jecxz
imul
movs
push
pusha
xor
inc
jle
add
aam
and
imul
mov
imul
jne
bsr
lods
std
mov
inc
ds
push
and
mov
gs
and
jmp
(bad)
ins
pop
fstp
push
lahf
clc
ret
aaa
ss
adc
or
icebp
inc
sub
(bad)
(bad)
in
adc
and
mov
call
(bad)
jmp
mov
mov
mov
loop
add
xchg
call
call
pop
jo
mov
aam
xchg
jne
or
sti
scas
dec
ins
fs
shr
sbb
repz
cli
jmp
aas
push
imul
std
jne
or
addr16
push
add
aad
scas
push
and
xchg
mov
lds
add
and
daa
jp
cmp
cmc
int
in
xchg
pop
cmp
addr16
adc
(bad)
adc
dec
add
jb
and
jge
cmps
push
out
out
mov
test
push
push
retf
pushf
inc
xchg
js
cmp
loop
xchg
scas
pop
jns
pop
cld
in
or
mov
mov
mov
push
fld
lods
ins
movs
cmp
jbe
adc
xchg
mov
cmps
ds
fs
rcr
and
cmc
rol
repnz
test
push
jp
out
dec
sbb
xor
aas
(bad)
pop
inc
inc
lahf
xchg
jno
sub
sbb
cmp
mov
dec
cmp
lahf
pushf
fs
sbb
fwait
arpl
mov
pop
mov
mov
sub
jmp
xchg
jle
stos
xor
and
imul
ja
push
pusha
xchg
std
push
data16
cli
ret
fiadd
xor
call
(bad)
nop
je
loop
add
in
leave
cli
out
jge
sbb
test
repz
addr16
jmp
sti
push
jg
(bad)
mov
push
sbb
mov
stos
(bad)
or
adc
leave
imul
les
and
adc
enter
sub
out
cld
mov
mov
int3
imul
xchg
inc
imul
hlt
cwde
shl
jne
sbb
int3
aam
stos
dec
pop
pop
pushf
(bad)
mov
gs
cmp
iret
mov
add
mov
(bad)
push
dec
jns
jecxz
inc
fnstcw
or
aaa
(bad)
int
push
push
sbb
push
scas
push
inc
js
mov
mov
movs
mov
arpl
in
and
das
pop
vmovddup
(bad)
scas
lods
pop
cmp
cmp
cmp
cmp
xor
add
xor
pushf
pushf
add
jmp
and
adc
dec
dec
jae
retf
hlt
jmp
pusha
outs
cli
or
sub
adc
lods
ror
daa
fbld
pop
je
ins
pop
push
in
mov
sbb
sbb
fs
jecxz
push
idiv
cwde
dec
in
repnz
aad
aaa
and
rcl
shr
popa
cs
mov
cmp
(bad)
jmp
jge
sub
mov
pop
sub
pop
movs
stc
retf
ret
jge
pop
inc
or
push
push
inc
pushf
mov
std
or
sub
sub
hlt
retf
imul
dec
aad
jmp
add
mov
push
pop
fs
cmps
rol
and
jbe
adc
stos
pusha
loopne
loop
aam
jmp
mov
aaa
jmp
lds
inc
add
pop
jg
fwait
inc
xchg
sbb
xchg
push
xchg
push
cmp
idiv
scas
add
mov
lahf
and
retf
addr16
add
ins
push
adc
jbe
xchg
in
jecxz
mov
mov
arpl
jg
(bad)
outs
mov
test
outs
int
adc
sbb
stos
rol
mov
(bad)
fstp
add
neg
stos
ds
cmps
add
in
adc
sub
(bad)
outs
add
addr16
loopne
gs
pop
mov
lock
and
sbb
ja
cmp
mov
arpl
scas
xchg
xchg
mov
mov
(bad)
fadd
test
inc
lock
cmps
inc
cli
cmc
pop
push
aas
sbb
xchg
shl
dec
hlt
inc
scas
(bad)
or
sub
fs
xchg
dec
aaa
pop
arpl
dec
addr16
les
shr
not
ins
pop
and
pop
cmps
(bad)
mov
cmp
loop
fwait
cmps
cmps
retf
dec
stos
or
fdivr
sbb
push
push
retf
jecxz
cmp
cmc
dec
push
or
and
and
or
add
sub
outs
dec
cmp
push
leave
push
test
mov
int
xor
pushf
fadd
push
div
mov
mov
dec
jmp
lds
sbb
sbb
shr
mov
not
cmp
sahf
inc
cs
les
sub
hlt
(bad)
repz
push
sub
mov
fs
lods
lahf
fdivr
cmps
push
data16
dec
jnp
mov
idiv
into
iret
xor
xor
int
mov
mov
jae
xchg
push
and
fstp
fisubr
mov
mov
and
or
pop
or
pop
sub
push
xor
mov
jns
sub
dec
xchg
mov
rcr
push
mov
push
shl
sbb
sub
dec
fist
fidiv
mov
xchg
cmp
int3
outs
xor
xchg
mov
inc
cs
pop
ss
aad
je
popf
(bad)
lods
inc
push
outs
add
sub
sub
std
(bad)
test
xchg
sbb
adc
sub
push
lds
add
ficomp
mov
call
pop
js
inc
aas
(bad)
sahf
xchg
pop
in
lds
sar
cmp
mov
outs
jmp
mov
out
jns
call
and
or
pop
inc
inc
bound
movs
push
jo
inc
loope
sub
aaa
jp
rcl
popa
push
cmps
in
dec
es
cs
call
in
sbb
stos
(bad)
lds
mov
and
into
and
xchg
in
imul
mov
sbb
sti
jns
inc
mov
mov
test
mov
js
pop
xchg
aam
and
cmp
add
int3
inc
push
mov
call
adc
lahf
movs
sbb
iret
js
pop
stos
shl
das
pop
lock
shl
ja
aam
int3
or
inc
fidivr
adc
add
js
sub
dec
add
test
ss
mov
xchg
sub
mov
or
add
jne
jge
sub
inc
inc
hlt
push
scas
jle
das
ret
adc
stos
cmc
into
pop
lods
push
pop
shr
mov
call
sbb
outs
sti
mov
push
mov
sbb
and
aaa
(bad)
adc
jl
inc
mov
in
jmp
jo
jmp
mov
jmp
bound
jmp
and
add
sbb
cdq
std
ffreep
dec
mov
test
imul
xor
pop
das
sahf
and
push
stos
mov
sbb
inc
dec
push
jl
popa
clc
repz
test
shl
adc
inc
in
pop
cmc
adc
mov
jo
xchg
xchg
das
ja
lock
pusha
pop
xor
in
test
fsubr
pop
pop
sub
into
adc
fisubr
or
adc
nop
cpuid
inc
inc
adc
ins
cld
loopne
(bad)
(bad)
mov
and
xor
inc
inc
mov
sub
ds
cmp
sti
lahf
mov
push
sbb
inc
ss
xchg
dec
add
push
lods
push
call
adc
add
cwde
fcmovbe
xor
cwde
test
mov
push
inc
enter
push
mov
inc
add
mov
jp
jmp
loope
fcomp
vpaddq
lds
daa
shl
lds
aad
sbb
sbb
xor
test
cdq
inc
outs
mov
mov
call
dec
mov
fiadd
sbb
dec
add
add
xor
mov
cs
and
push
push
mov
adc
pop
lods
les
fld
lds
imul
std
jp
xlat
push
rol
test
sahf
dec
mov
gs
mov
mov
or
sbb
fs
mov
icebp
xchg
pop
cmp
inc
push
sub
in
test
sub
sbb
inc
aas
lea
in
cmp
jmp
ret
mov
xor
push
or
dec
xor
into
aam
in
inc
add
mov
iret
adc
dec
iret
jnp
and
in
dec
je
popf
mov
xor
shl
es
stc
xor
cwde
or
mov
mov
lock
push
repnz
sub
(bad)
pop
fxch
sub
sbb
sub
sub
cmp
xchg
(bad)
fstp
hlt
mov
sub
aas
xchg
popa
or
loop
popf
mov
in
push
inc
in
inc
lock
xchg
scas
jmp
jmp
cdq
repnz
push
mov
jnp
dec
adc
sahf
cmp
idiv
test
lock
jmp
cs
pop
push
(bad)
push
xchg
cmp
fs
pop
js
fist
xlat
sub
or
pusha
retf
and
mov
out
retf
fwait
ja
add
and
and
call
sub
jbe
es
mov
out
mov
add
scas
jl
xchg
lods
fldcw
and
inc
ins
xlat
jmp
adc
inc
and
mov
fs
sub
add
addr16
xchg
sbb
out
hlt
or
pop
mov
ficomp
adc
sbb
(bad)
aam
outs
dec
movs
and
push
mov
loop
add
cli
adc
pop
and
push
sub
mov
pop
mov
iret
jmp
jle
push
sbb
and
out
dec
fmul
xchg
js
or
icebp
call
jp
jno
or
test
and
repz
push
mov
xor
int
test
cmp
xlat
mov
and
dec
add
push
xor
in
dec
pushf
cmps
movs
(bad)
and
mov
adc
jl
sbb
xchg
pop
aam
add
popa
(bad)
popa
aad
sbb
lea
xchg
ss
jns
add
inc
dec
iret
mov
push
inc
in
add
sub
fnstenv
mov
sar
sti
int3
pop
imul
(bad)
stos
lea
push
out
mov
or
pop
mov
enter
xchg
fistp
lds
clc
cs
ret
cld
repnz
add
or
adc
sbb
ja
cmc
and
cmps
mov
add
dec
mov
aaa
jmp
fs
stc
hlt
inc
add
test
(bad)
fidiv
test
cmps
sbb
lods
push
lods
out
cmps
call
pop
push
movs
xchg
dec
dec
jnp
ja
out
test
xor
jle
add
arpl
int
ins
pushf
or
cmc
xor
jmp
sahf
movs
clc
jecxz
dec
mov
pop
dec
push
mov
xor
es
(bad)
push
test
repz
dec
jecxz
mov
mov
and
lods
xor
push
(bad)
xor
cmp
es
pushf
xor
outs
iret
data16
jmp
cwde
push
mov
or
sub
das
cmp
ins
mov
jl
sti
jnp
mov
mov
push
aas
dec
mov
dec
and
popf
repnz
add
add
test
or
fisttp
xchg
sub
loop
or
cmp
fwait
aam
or
call
xchg
scas
sub
mov
hlt
lods
xchg
mov
pop
outs
pop
inc
push
js
jmp
and
int3
push
push
jae
xor
shl
jae
(bad)
aam
push
lds
in
fsubp
add
stos
test
push
fcom
and
and
or
rcr
(bad)
repnz
inc
xchg
mov
pop
push
dec
or
dec
pop
pop
in
or
jl
jae
pop
pop
dec
imul
pop
cli
jns
mov
(bad)
arpl
xchg
adc
cmps
cmps
push
out
enter
xor
aaa
xchg
aam
fcom
push
(bad)
jae
dec
inc
ss
xor
sbb
jp
xor
sub
and
nop
cli
cmp
adc
or
neg
inc
pop
sub
mov
sub
repz
(bad)
xchg
add
cmp
js
xor
jmp
jnp
push
test
mov
lods
test
jno
mov
jmp
xlat
cli
(bad)
push
sar
cld
inc
mov
mov
loope
xlat
enter
lods
mov
dec
rcr
call
xchg
cmp
or
fistp
sub
xor
hlt
arpl
popf
xchg
aam
push
inc
jne
xor
adc
xchg
scas
int3
push
sbb
imul
and
mov
mov
sbb
(bad)
scas
ja
scas
imul
ss
add
add
inc
inc
int
mov
test
inc
sub
xchg
scas
aam
or
and
and
push
ja
aam
(bad)
lahf
add
test
fadd
add
adc
scas
add
aas
jl
pushf
mov
jle
int
adc
xlat
test
xchg
mov
dec
inc
xchg
ror
xchg
sub
sub
push
or
leave
cdq
sbb
dec
dec
add
add
jg
in
jge
sub
adc
ja
jno
pusha
inc
cmp
cmps
xor
fwait
xor
retf
sahf
push
add
retf
cdq
dec
test
sub
sub
loop
lods
rol
lods
fcom
in
or
iret
jmp
sti
jno
pop
pop
fmul
loop
sbb
mov
in
(bad)
xor
push
sbb
jne
and
adc
push
mov
inc
pop
mov
sti
std
cld
push
and
mov
xchg
sahf
mov
sbb
dec
push
cwde
std
jne
push
jg
cmc
ja
ss
aad
je
xchg
sti
jb
pop
mov
mov
dec
aas
pushf
xchg
clts
or
or
or
sub
mov
pop
call
xchg
adc
aaa
pop
xchg
aad
cdq
cs
cmp
rol
inc
mov
push
imul
cmp
popa
enter
inc
daa
es
retf
mov
aas
mov
mov
out
into
jg
pop
fdiv
pop
adc
xchg
das
add
xchg
jno
popa
push
sub
cmc
(bad)
cmc
fisttp
into
call
les
sub
out
push
cmp
jle
and
arpl
jmp
adc
mov
mov
inc
jmp
into
jo
dec
mov
inc
push
xor
pushf
comiss
int3
jae
mov
in
mov
pop
popf
sub
stos
sbb
mov
pop
mov
push
or
jnp
mov
pop
push
adc
ins
mov
dec
bswap
enter
mov
jb
scas
loopne
adc
mov
inc
daa
push
inc
inc
mov
jo
in
sbb
sub
test
sub
add
pushf
ret
jb
fdivr
aam
mov
xor
pop
out
icebp
jae
lods
stc
cmp
int
and
inc
xchg
xor
jle
sub
pop
cmp
and
add
mov
pop
xor
(bad)
cdq
dec
mov
dec
inc
mov
sub
push
jnp
jp
and
or
cmp
fnstenv
xchg
jmp
repnz
in
idiv
ja
sub
mov
dec
popf
icebp
sub
and
pmuludq
push
jle
xor
xor
jbe
and
adc
dec
adc
stos
lods
mov
out
cld
cmp
ror
jge
dec
call
fstp
daa
(bad)
retf
pushf
xchg
out
lods
div
pop
les
call
jne
push
leave
mov
ror
addr16
mov
test
sbb
jbe
imul
and
stc
xor
dec
xchg
sti
and
cmc
sub
retf
lahf
out
mov
add
cld
mul
retf
popf
test
addr16
sub
push
dec
je
mov
daa
enter
out
and
test
stos
mov
cmp
jecxz
nop
mov
pop
sub
xchg
jae
(bad)
inc
push
das
or
ret
imul
loopne
fcomp
jp
in
sbb
data16
into
aad
adc
call
mov
xor
int
add
mov
mov
shl
xchg
retf
ins
pop
and
movs
sar
xor
loopne
xor
xor
push
pop
gs
pusha
pop
inc
jmp
es
pop
aas
mov
adc
aad
sahf
cmp
sbb
int3
pop
stos
inc
test
xchg
out
ja
cmc
sub
jb
xchg
push
fdivrp
and
fisub
pop
push
xchg
shl
mov
mov
mov
sahf
dec
vshufps
or
mov
sub
fwait
sbb
xchg
or
aam
dec
daa
inc
(bad)
outs
jnp
icebp
jne
std
retf
(bad)
jnp
add
add
out
xor
push
inc
add
or
scas
pop
imul
xchg
ins
das
aaa
movs
out
lock
add
xor
cld
adc
mov
das
xchg
sub
cmps
pop
add
ds
popa
cmps
or
mov
(bad)
stos
shl
(bad)
movs
xor
xor
inc
dec
cdq
xchg
jge
mov
scas
mov
xor
and
sahf
test
ds
pop
adc
jo
push
sub
push
daa
mov
xor
leave
popf
and
jg
or
out
fstp
lods
push
call
(bad)
mov
inc
mov
out
stos
fs
jo
stos
sti
inc
jg
adc
pop
les
out
sbb
pop
(bad)
call
mov
jnp
outs
sub
sbb
test
lahf
push
inc
or
cmp
retf
aaa
cmp
add
adc
cmp
enter
xor
test
in
(bad)
or
dec
mov
xor
shl
sub
mul
mov
scas
daa
push
mov
mov
push
inc
jecxz
sub
mov
sbb
sub
lods
aad
fldcw
mov
mov
jl
sbb
fdivp
mov
jg
loopne
call
cdq
clc
pop
jns
mov
jns
fsub
fstp
adc
pop
or
and
outs
xchg
clc
enter
cld
jnp
push
(bad)
and
inc
ss
scas
and
jo
pop
mov
int
jmp
jnp
pop
pusha
cs
jle
mov
lds
mov
ret
or
jl
adc
shl
or
iret
ret
inc
(bad)
rcl
mov
push
hlt
pushf
pop
push
ret
cmp
xor
or
and
int3
inc
dec
sub
cmc
inc
push
mov
(bad)
fist
pop
in
fiadd
add
inc
sti
cmp
jle
sbb
call
fwait
dec
mov
clc
jno
loop
daa
test
or
retf
mov
mov
inc
test
push
xchg
into
stos
sbb
out
inc
mul
and
dec
sbb
pushf
jno
dec
push
mov
stos
enter
pushf
aas
mov
loop
mov
push
dec
stc
dec
cmp
enter
xor
jle
push
cwde
pop
repz
jg
je
fisttp
int
cmp
dec
pop
mov
push
mov
dec
jecxz
cmc
jmp
sub
lea
fld
mov
adc
sub
fisub
dec
call
lock
(bad)
fcompp
in
call
popa
in
inc
fimul
xchg
pop
cs
xchg
cmc
or
aaa
and
ja
repnz
jle
push
dec
arpl
and
call
mov
cli
sbb
cmp
sub
adc
xlat
stos
lea
aad
repz
jnp
jne
adc
shl
mov
add
xchg
lahf
sbb
sti
jnp
out
(bad)
repz
push
loope
in
pop
add
outs
dec
iret
xchg
lods
(bad)
xchg
pop
fwait
int3
xor
nop
ficom
daa
push
cmp
fimul
adc
jb
sub
fbld
xchg
in
ins
das
pop
push
inc
test
inc
push
in
ds
push
je
pop
rol
leave
mov
rcl
xor
and
xchg
mov
mov
ja
add
int3
xor
push
mov
sbb
icebp
leave
sub
adc
dec
mov
xchg
fcmovnu
and
xchg
(bad)
repnz
or
and
hlt
dec
imul
retf
jle
mov
test
(bad)
and
xchg
mov
ins
scas
movs
push
jno
mov
das
mov
jmp
xor
mov
stc
jbe
xchg
jno
in
xchg
sahf
outs
jno
(bad)
adc
popf
movs
jb
sbb
and
cmp
fiadd
and
inc
pusha
into
or
(bad)
and
jne
in
outs
cmps
mov
jb
mov
ret
cmp
pop
and
ficom
cmp
pop
pusha
mov
aaa
(bad)
ins
mov
(bad)
movs
add
xor
stos
int3
retf
sbb
sbb
cmp
xchg
jne
jle
lds
cdq
or
mov
aaa
sub
or
add
cdq
inc
dec
(bad)
inc
xchg
push
cmp
or
xchg
push
jmp
fsubr
mov
mov
push
out
loopne
push
or
mov
ret
and
in
in
inc
sbb
(bad)
mov
xchg
push
div
and
pop
cmc
jge
outs
and
mov
pop
sub
pushf
and
out
lock
loopne
clc
jge
(bad)
movs
ins
mov
mov
hlt
std
mov
pop
jmp
cmc
jne
sub
in
test
cmp
mov
mov
mov
sub
jnp
rcl
fsubr
cmp
neg
lods
les
or
(bad)
mul
dec
test
xchg
jae
xor
jno
loopne
(bad)
rcl
inc
(bad)
fnstsw
js
cmp
inc
mov
add
push
xchg
hlt
js
gs
in
mov
stos
mov
ret
js
xlat
out
loope
pop
ss
mov
xchg
das
jne
add
in
and
clc
or
dec
push
dec
jbe
bound
test
lds
sbb
jg
push
inc
enter
adc
sbb
pop
das
and
outs
outs
add
jg
and
dec
cmp
pop
add
psrld
and
cmps
push
ror
movs
lock
sub
xor
push
lods
push
cmps
mov
rcr
lods
push
sbb
sub
xor
add
mov
jmp
scas
mov
push
sbb
mov
jns
and
adc
aad
les
neg
xor
or
retf
add
push
and
lds
ret
jne
(bad)
lahf
push
adc
(bad)
mov
leave
enter
mov
mov
cmp
aam
xchg
mov
adc
sub
aad
aad
pop
add
call
mov
pop
cwde
ret
ror
jmp
xor
sbb
xor
iret
(bad)
iret
dec
add
out
(bad)
ins
stc
dec
leave
and
cli
jge
(bad)
jne
mov
or
mov
fst
push
loopne
loop
(bad)
sub
cs
stos
cmp
xchg
pop
sbb
xor
out
or
test
jl
jb
or
mov
jmp
adc
lahf
lahf
gs
jmp
push
xchg
pop
xlat
dec
dec
or
and
js
add
mov
leave
lods
inc
ja
jne
and
ror
fnstenv
push
aam
jne
aad
mov
arpl
pop
cmp
inc
mov
shl
jbe
sbb
ins
pop
imul
push
call
xor
jge
xchg
ins
(bad)
(bad)
mov
dec
mov
jl
jl
sbb
mov
(bad)
int3
dec
sbb
xchg
pop
xor
je
popf
pop
call
cld
or
hlt
adc
push
leave
into
jge
fadd
pop
jbe
sub
test
pop
call
push
jmp
push
lds
lea
and
iret
or
and
icebp
xchg
cli
pop
iret
inc
call
jae
or
add
jns
test
call
and
lea
add
(bad)
cmc
test
xor
repnz
mov
dec
add
mov
mov
sbb
push
sahf
cmp
or
jp
shr
cmp
int3
push
idiv
shl
(bad)
xor
mov
ret
sbb
imul
ret
push
jg
int3
mov
or
in
fcmovb
jb
scas
push
(bad)
jae
not
and
xchg
mov
push
pop
outs
out
int3
repnz
push
in
ins
inc
sub
pushf
fwait
or
and
cmp
xchg
scas
sbb
hlt
dec
push
cmp
leave
jno
mov
fidivr
test
push
add
push
xchg
scas
jge
or
push
cdq
sub
jg
sub
cmp
sbb
vorps
cmp
cwde
retf
push
repnz
mov
js
enter
mov
pusha
mov
in
jo
xor
cmp
adc
push
std
mov
bound
push
mov
das
xchg
adc
jecxz
test
jmp
jle
xor
je
lds
mov
aas
ficom
xlat
add
test
mov
out
lahf
aaa
xor
mov
pusha
mov
sahf
cmp
shl
mov
mov
or
pop
ja
imul
mov
dec
jle
dec
arpl
shl
stos
imul
jo
je
dec
pop
mov
push
xchg
mov
jbe
adc
push
push
inc
mov
mov
mov
jne
or
lods
xor
aad
sti
cmp
into
shl
push
sbb
imul
adc
repnz
jne
out
inc
ret
adc
cmps
xchg
test
aaa
xor
dec
in
jb
and
loop
push
je
ss
add
push
mov
lods
pop
xchg
es
mov
push
scas
mov
bound
cmp
scas
cs
mov
adc
ret
xchg
or
jl
inc
xchg
test
adc
mov
or
imul
sub
sub
adc
cmp
js
xor
push
pop
popa
hlt
sbb
daa
nop
ret
mov
iret
mov
mov
dec
dec
push
mov
addr16
dec
inc
mov
sub
adc
push
pusha
push
and
sbb
retf
and
arpl
and
pushf
stos
xchg
mov
inc
test
loopne
mov
jbe
xchg
jbe
push
iret
or
rol
daa
pop
and
push
sbb
push
dec
push
sar
in
mov
xchg
or
std
neg
retf
sti
cld
in
pop
cs
jb
out
scas
aas
cli
push
add
cmp
jg
pop
idiv
rol
push
pop
pop
pushf
cli
mov
mov
push
(bad)
movs
pop
pop
pop
mov
mov
sub
cmp
or
gs
fs
pusha
push
dec
cmps
push
sub
add
mov
test
mov
sbb
ins
dec
push
(bad)
hlt
aaa
ror
les
inc
ins
pop
fsubp
mov
imul
mov
adc
int
mov
arpl
sar
in
pushf
cli
adc
sar
and
sub
ret
mov
sbb
enter
ret
pushf
mov
mov
xor
pop
pop
cmp
adc
les
stos
inc
push
outs
jmp
test
aaa
push
adc
xor
(bad)
dec
and
into
daa
jbe
cmp
xchg
out
dec
int
scas
inc
dec
lock
mov
sar
call
test
dec
addr16
rol
(bad)
mov
dec
sbb
push
inc
fs
xchg
lods
xor
push
sub
pop
mov
cmps
outs
(bad)
(bad)
in
in
pop
loope
aam
test
adc
in
pop
repnz
push
icebp
(bad)
movs
cmp
pusha
jns
stos
gs
imul
mov
and
mov
shl
aad
mov
jo
push
aad
sub
(bad)
pushf
add
lss
out
mov
test
aaa
fist
retf
mov
dec
add
dec
addr16
enter
mov
sbb
pop
add
and
je
xor
and
retf
loope
pop
sub
(bad)
mov
fsub
adc
mov
pop
scas
xchg
int
cs
icebp
or
dec
pop
outs
adc
jecxz
and
push
dec
shl
ret
jae
in
dec
sub
(bad)
call
arpl
adc
lds
out
mov
push
xchg
out
(bad)
aas
imul
xor
test
add
cmp
dec
xchg
adc
push
cmp
call
mov
and
popf
shl
je
cwde
(bad)
adc
enter
cmp
jl
inc
push
stos
sbb
in
xor
aam
pop
pop
int
jae
push
push
test
and
fwait
or
idiv
inc
sbb
div
xchg
mov
add
push
mov
fdivr
jne
popa
sbb
repz
es
push
sar
xchg
mov
sbb
enter
pusha
in
stc
std
push
or
mov
mov
mov
ins
push
pop
arpl
xlat
mov
test
cmp
std
pop
inc
adc
cmp
cmp
xor
rcr
retf
cs
lock
jl
cdq
movs
loopne
dec
loop
jmp
mov
lods
daa
ret
cmp
and
adc
pop
xor
sahf
in
or
inc
sbb
outs
adc
mov
fistp
dec
inc
mul
mov
dec
jnp
in
leave
or
mov
or
icebp
iret
fadd
inc
mov
lock
cs
lods
sbb
ret
cmp
dec
scas
les
cmps
fstp
or
xor
aam
mov
test
add
call
les
adc
pop
jns
hlt
lock
adc
xchg
(bad)
hlt
aad
loop
sbb
push
pusha
push
fcos
jmp
mov
or
aam
(bad)
mov
push
inc
sbb
push
lds
ficomp
movs
nop
pop
ret
pop
test
inc
inc
push
adc
push
adc
jbe
test
aad
cmp
not
mov
ret
and
bound
dec
js
jg
sbb
pop
mov
sub
sbb
ret
mov
int
sbb
and
jmp
test
xor
dec
out
pop
sub
pushf
xor
fist
jno
pop
fucom
arpl
jae
(bad)
js
mov
xor
in
pop
out
sbb
paddw
adc
xor
pop
cwde
or
movs
cmps
push
mov
inc
sbb
mov
pop
sub
ins
pop
in
mov
mov
iret
nop
mov
jbe
mov
(bad)
adc
or
mul
pop
xor
mov
lahf
cwde
sbb
mov
or
cs
cmp
in
adc
mov
xchg
add
pusha
icebp
out
jmp
std
pushf
gs
loop
gs
or
xchg
dec
inc
xor
or
cmps
or
(bad)
push
xlat
cmp
mov
sub
es
sar
cmp
ret
inc
stc
rcr
mov
lea
call
fdiv
push
add
and
or
inc
div
adc
rcr
jb
sub
sbb
cmps
les
aad
outs
rol
ins
test
add
adc
cdq
push
stos
mov
lods
mov
push
adc
(bad)
test
in
movs
ficom
mov
out
sbb
dec
leave
stc
pop
pop
shl
cmps
and
xlat
ficom
les
cwde
in
add
test
inc
in
xchg
fisttp
xor
mov
adc
int3
pop
dec
and
push
mov
prefetch
pop
cmp
and
push
pop
inc
lods
imul
fwait
and
sub
retf
sub
fisub
dec
sub
sub
pop
jbe
jne
ins
lahf
inc
or
mov
and
(bad)
stos
clc
xor
mul
push
push
out
push
xor
out
cmps
out
fwait
ss
mov
popf
xchg
adc
loopne
ins
inc
fsubr
inc
repnz
dec
mov
jmp
jnp
ds
jp
pop
(bad)
gs
adc
sbb
jl
daa
add
and
pop
loope
xchg
xor
fidivr
mov
(bad)
lods
add
jp
jg
jnp
mov
int3
shl
sub
jo
xor
das
or
test
xchg
and
jmp
xchg
repz
pop
xor
pop
push
push
call
cmp
(bad)
(bad)
push
jo
add
and
sbb
out
and
mov
outs
inc
hlt
ja
aam
sahf
in
adc
aam
js
arpl
retf
in
rol
movs
dec
mov
scas
push
sub
rcl
mov
push
fcomp
test
sbb
mov
or
xor
pop
dec
in
in
xor
push
pop
gs
add
stc
fwait
iret
jg
es
adc
xchg
in
adc
push
mov
fidiv
jb
scas
icebp
rol
add
je
pop
xor
rol
xchg
mov
mov
mov
inc
pop
out
les
fstp
fist
in
mov
lods
scas
gs
adc
sub
je
or
pop
add
rcr
ret
sti
ret
pop
in
xchg
loop
jb
mov
xchg
inc
xor
pop
fisubr
rcr
cwde
sub
jbe
scas
sub
icebp
pop
mov
lock
(bad)
jecxz
and
inc
jb
loopne
mov
sahf
lds
cmps
mov
inc
pop
test
jl
mov
stos
clc
lods
pusha
cld
sub
into
inc
jp
mov
xor
mov
xchg
or
aad
pop
sub
and
xchg
push
jecxz
xchg
pop
inc
adc
adc
dec
mov
(bad)
(bad)
(bad)
push
adc
mov
push
ret
adc
sbb
test
and
and
adc
jmp
pop
jns
cmp
push
lock
mov
clc
mov
dec
adc
dec
test
mul
aas
mov
fs
sbb
add
div
inc
(bad)
in
popf
push
in
mov
mov
les
sbb
shl
add
xor
or
aad
lea
jb
sub
movs
call
test
test
mov
or
jle
fisubr
out
rcl
idiv
jo
fdivr
mov
inc
mov
shl
cmp
fild
jo
ja
enter
mov
inc
cmp
mov
sbb
mov
pop
es
fdiv
mov
xchg
cmp
js
stos
fsub
xchg
mov
call
sbb
sti
jns
aas
pop
aaa
jmp
sub
maskmovq
push
pop
add
shr
gs
jb
ja
mov
inc
pop
mov
mov
cmp
retf
clc
add
repz
push
adc
out
and
push
pop
add
mov
and
lock
bound
sub
and
cld
fnsave
les
fdivr
dec
test
aaa
cmps
lds
test
pop
and
push
sub
(bad)
or
sbb
dec
inc
aas
lea
fidivr
cmp
mov
mov
imul
sub
mov
mov
mov
xor
mov
movntps
xchg
push
cs
sub
cmp
fidivr
mov
mov
sub
pop
fdiv
xor
or
sar
scas
push
jb
or
retf
dec
popa
fmul
xlat
setnp
imul
pop
sub
and
mov
lahf
fistp
lds
mov
cmps
or
mov
retf
pop
rcr
hlt
xor
or
(bad)
mov
sub
add
js
push
sbb
mov
jae
rcl
das
neg
loope
push
dec
pop
push
mov
xlat
add
(bad)
lods
jns
xor
jbe
mov
cmps
cmp
pop
(bad)
repz
xor
jge
xchg
(bad)
xchg
pop
pop
xchg
cmp
pop
leave
sub
inc
jl
clc
xchg
popf
mov
call
inc
pop
jo
mov
dec
loope
push
sub
sub
adc
push
xor
fucomp
cmc
bound
fs
pop
sbb
cmp
inc
ins
and
pop
inc
retf
mov
movs
sub
cmp
vmovapd
sub
jnp
jecxz
cmps
sbb
(bad)
jecxz
cs
jbe
pop
pusha
push
push
bound
out
mov
shufps
shr
cmp
and
(bad)
(bad)
cld
adc
imul
jecxz
mov
loopne
push
cmp
movs
imul
mov
into
mov
popa
or
push
cli
xchg
add
cmp
xchg
mov
arpl
mov
loopne
mov
cmp
outs
aam
rcr
xchg
retf
or
xor
sbb
retf
or
jb
adc
or
and
add
lods
(bad)
xor
jmp
das
fdiv
or
pushf
sub
inc
and
cmc
je
cdq
js
xor
mov
jb
sbb
push
mov
out
xchg
cmp
lea
add
std
dec
sub
jne
ja
pop
push
dec
icebp
cmc
mov
gs
fmul
inc
es
cmp
in
sub
fwait
jecxz
leave
pop
pop
sub
(bad)
adc
and
mov
call
lahf
jne
push
push
jbe
aas
mov
imul
sbb
cmp
push
adc
daa
stc
popf
push
push
jae
test
lea
test
mov
or
mov
or
fmul
xor
shl
aam
ins
(bad)
ror
jb
pop
add
pop
into
repnz
dec
push
jmp
pextrw
inc
test
in
add
je
mov
inc
push
jae
push
bnd
sahf
js
inc
or
mov
cld
mov
jnp
pop
cmps
xchg
(bad)
arpl
xchg
jne
test
jb
hlt
test
add
mov
or
and
mov
jl
aam
bound
inc
dec
retf
mov
inc
ret
int
sbb
js
push
jg
loope
mov
ins
mov
ret
jno
movd
jno
lods
mov
adc
add
pop
loop
(bad)
push
pop
jle
dec
xchg
adc
cmp
inc
fiadd
or
in
inc
aad
(bad)
stc
add
push
ins
daa
cdq
sbb
cli
ja
xchg
iret
dec
or
rol
bound
pop
mov
adc
sbb
(bad)
retf
or
adc
jmp
cs
loopne
mov
out
in
xor
xor
movs
aas
jnp
es
(bad)
jmp
out
divps
sub
sub
sub
jae
(bad)
(bad)
pop
sbb
inc
sar
add
fsub
es
sbb
xchg
ror
jne
fwait
mov
mov
movs
sbb
addr16
fcom
fdivp
mov
cld
fsubr
mov
push
gs
jne
lahf
in
loopne
cs
inc
fnstcw
and
test
add
sub
outs
sub
clc
dec
add
loope
mov
in
cwde
ret
hlt
icebp
mov
ret
and
mov
and
ficom
sbb
movs
sub
push
mov
cdq
mov
cmp
in
fs
rol
(bad)
jo
ss
xchg
xchg
push
mov
rol
in
jg
pop
cmp
jge
fwait
jecxz
mov
sub
xor
cmps
push
xor
inc
clc
in
and
bound
bound
fidiv
ja
xchg
cld
xchg
std
in
dec
or
lods
or
jbe
pop
aaa
sub
sbb
dec
add
sbb
xchg
mov
sbb
scas
inc
jmp
outs
lahf
movs
bound
rcl
dec
jne
xchg
jne
jp
push
adc
cmps
outs
imul
cwde
cmp
sar
test
shl
mul
push
in
icebp
mov
retf
in
sub
inc
cmp
pop
aam
neg
jmp
dec
xchg
and
test
repz
arpl
or
sbb
push
out
cmp
ds
ret
jecxz
cmp
ret
push
call
scas
pushf
or
les
mov
mov
mov
dec
dec
sbb
add
test
out
mov
inc
scas
sbb
xchg
jg
imul
fistp
xor
pushf
dec
jno
mov
pop
aaa
inc
stos
sub
add
push
push
enter
aam
stos
add
dec
jno
out
stc
pop
out
stos
inc
enter
mov
bound
shr
cli
mov
or
sbb
xchg
push
cmp
adc
dec
retf
mov
je
into
scas
sub
push
imul
ret
jne
cwde
fbstp
dec
repnz
xchg
push
shl
loop
add
mov
jb
inc
xchg
mov
and
in
mov
fs
lea
aaa
pop
cdq
(bad)
aad
dec
sub
cmps
retf
test
add
inc
cmp
sti
pop
push
pop
rol
sbb
lea
inc
call
mov
fld
int3
pushf
xchg
jo
push
mov
scas
mov
pop
std
cmps
fcmovnbe
iret
add
in
call
jle
jo
cli
js
mov
aaa
cmc
add
cmps
ror
jge
jmp
test
popa
push
mov
mov
mov
rcl
sahf
cmp
push
in
and
mov
sub
add
mov
mov
mov
sti
ds
xor
icebp
xchg
addr16
ins
xor
mov
jae
test
mov
mov
xor
int3
test
mov
push
mul
popf
aas
cmc
mov
inc
cmp
pop
pop
xchg
(bad)
addr16
and
jg
xchg
push
inc
scas
add
lea
out
loope
repnz
and
mov
push
not
(bad)
aad
push
gs
jg
xchg
jp
push
sahf
adc
inc
js
je
or
add
dec
xor
icebp
addr16
xor
fs
jecxz
js
loope
dec
fistp
adc
sbb
sub
mov
inc
lea
push
outs
dec
jbe
jge
je
xchg
dec
out
xor
xchg
dec
fnsave
cwde
or
push
cld
or
repz
adc
ret
aaa
je
scas
cmp
nop
test
enter
icebp
inc
pop
push
(bad)
push
cmp
scas
or
test
iret
cmp
jl
rcl
out
ss
call
add
in
(bad)
fisubr
or
inc
cmps
test
(bad)
daa
or
xor
dec
fdiv
retf
aas
in
mov
test
add
jg
test
adc
xor
je
cmp
mov
ins
jecxz
mov
int3
pop
and
inc
lods
ret
pusha
pusha
ins
inc
mov
dec
test
aaa
test
inc
xor
xchg
pop
sub
jmp
add
lea
cmp
cmp
pop
push
cmps
int
test
and
cmps
jge
jmp
outs
ret
lahf
sbb
cmp
adc
clc
cmp
or
sub
fwait
enter
cmp
add
jl
call
xor
xchg
push
sbb
add
test
dec
cmp
mov
mov
jl
imul
xor
pop
loopne
inc
xchg
add
nop
pop
mov
cmp
out
or
push
jb
sbb
add
xchg
mov
ss
push
xor
iret
sbb
iret
push
frstor
pop
mov
jle
or
test
ret
xchg
xchg
pusha
aam
adc
sbb
inc
pop
movs
pop
push
ss
fsubr
pop
movs
rol
pop
popf
(bad)
sahf
xor
loope
popa
outs
or
and
pop
mov
cmc
das
or
mov
mov
ret
sub
retf
sub
clc
es
iret
in
inc
sti
dec
jle
aam
ret
inc
fnstsw
fs
dec
pop
das
cmps
out
int
pop
js
or
jl
pop
jnp
cdq
stc
in
push
fistp
jge
std
or
fld
add
mov
mov
sub
fldenv
push
mov
mov
add
loop
fistp
stos
xchg
icebp
cmp
adc
xchg
and
lods
(bad)
sub
cdq
cmp
or
test
jl
cmps
xlat
repz
push
stos
mov
(bad)
fsubrp
cmp
inc
jae
aaa
pop
mov
xor
test
pop
sahf
xor
sti
aaa
xlat
(bad)
pop
xor
pop
mov
stos
cmc
and
cmp
and
dec
mov
pop
push
cld
and
sub
mov
adc
dec
icebp
xor
adc
cli
or
js
imul
iret
push
ret
popf
dec
cmp
inc
ror
(bad)
fst
mov
jae
mov
push
ins
enter
pop
and
jg
stc
call
push
popf
aas
inc
jnp
iret
sbb
dec
sbb
push
sub
inc
cs
or
and
or
push
repnz
add
mov
jnp
and
ds
fdiv
stos
push
dec
pop
ss
(bad)
xchg
retf
and
retf
add
mul
pusha
test
movs
fucomip
mov
inc
inc
xchg
lds
xchg
(bad)
jp
jecxz
sub
add
sub
or
inc
cmp
add
leave
fdiv
or
mov
dec
cmp
dec
xchg
mov
push
enter
ins
outs
push
add
or
int3
mov
mov
jl
arpl
fwait
inc
mov
hlt
or
movs
xchg
test
stc
in
xor
movs
aas
fdecstp
or
add
adc
outs
pand
and
xchg
xor
in
adc
cld
pop
loope
outs
jp
leave
adc
cld
mov
pop
push
(bad)
mov
arpl
mov
in
push
inc
cli
add
imul
lods
loope
cli
push
sub
mov
stc
add
mov
es
loopne
out
jb
sub
adc
dec
xlat
call
lahf
add
lea
test
aad
repnz
mov
jnp
xchg
and
mov
lds
inc
push
test
mov
or
enter
mov
lods
int3
mov
jno
(bad)
gs
dec
adc
leave
stos
cmp
fnsave
mov
sub
mov
dec
xchg
repnz
aam
sub
pop
pop
fdiv
jmp
pop
pop
retf
mov
mov
xchg
ja
xchg
push
enter
js
stc
mov
and
mov
daa
stos
inc
ja
mov
ins
js
cmp
mov
dec
int3
push
jl
and
push
aam
int
popf
jns
fcomp
pop
pop
mov
loop
jge
mov
pop
pop
sbb
lods
(bad)
ret
add
sbb
cmp
fcomip
cli
xor
ror
mov
or
inc
icebp
inc
gs
leave
ret
cdq
dec
std
clc
add
and
dec
add
ficom
mov
imul
mov
lea
xor
hlt
dec
xchg
mov
(bad)
pop
xchg
ins
cmp
aas
rcr
aad
mov
and
xor
adc
bound
not
jecxz
jo
add
jle
aam
hlt
and
jb
(bad)
push
pushf
push
xchg
out
xchg
push
xlat
movs
retf
movs
mov
mov
ins
inc
adc
sub
sar
vdivsd
jmp
(bad)
or
push
pop
retf
test
or
jnp
enter
cdq
xchg
adc
add
jne
mov
movs
int
icebp
jp
cmp
push
adc
pop
cmc
xor
sahf
je
push
inc
adc
push
mov
addr16
int
je
scas
pop
in
mov
mov
xchg
fimul
inc
mov
or
xor
dec
imul
mov
push
pop
xchg
mov
inc
ss
nop
stos
in
jmp
mov
dec
lods
adc
pop
inc
mov
add
mov
add
adc
push
add
out
mul
sub
repnz
pop
scas
pop
jnp
cmp
outs
test
mov
imul
in
adc
and
mov
sub
pop
retf
repnz
test
push
shl
stos
sahf
dec
and
sub
scas
retf
adc
(bad)
jg
push
hlt
cmp
xor
jae
adc
adc
inc
sbb
fistp
out
pop
aas
out
cmp
inc
int3
cli
mov
mov
add
call
cmp
ins
pop
(bad)
rcl
dec
adc
add
hlt
pushf
mov
and
outs
daa
loope
jne
and
adc
fsubrp
ja
inc
fwait
daa
loope
sub
dec
add
popa
sbb
ja
imul
xor
repnz
xchg
(bad)
pop
adc
leave
pop
xchg
shl
push
mov
fwait
daa
adc
aam
rcl
cli
adc
xchg
cmp
mov
ror
pop
sahf
pusha
lea
out
or
call
adc
mov
in
ficomp
sub
mov
test
std
pop
push
add
retf
ret
out
dec
mov
jae
iret
or
movs
mov
scas
jge
cmp
rcl
xchg
sub
adc
adc
cmp
cld
mov
imul
jecxz
das
xor
out
pop
mov
imul
dec
shr
jge
lds
dec
mov
cmps
test
and
sbb
push
aaa
cmp
outs
xor
aaa
cmp
fisub
div
push
pop
sbb
js
scas
pmaxub
sub
mov
dec
jmp
push
pop
mov
inc
mov
(bad)
adc
dec
mov
jnp
sti
ins
fidivr
fist
mov
call
mov
and
movs
push
cmp
jmp
mov
out
dec
add
je
sbb
mov
xchg
stos
jge
pop
aas
in
jge
fisub
in
ds
ins
mov
sahf
inc
je
jbe
call
dec
adc
mov
dec
push
or
adc
movaps
sub
fld
jae
popf
inc
movs
icebp
mov
js
sti
push
fdiv
ret
jns
ss
retf
gs
mov
fsubrp
fcom
inc
mov
cmc
fisttp
fwait
scas
xlat
daa
out
addr16
stc
int
sub
cld
xchg
xchg
rcl
shl
mov
mov
push
xchg
popf
outs
dec
inc
fs
mov
out
test
imul
mov
cdq
sbb
pop
inc
fdivr
adc
dec
add
mov
jae
out
ins
scas
bound
add
aam
je
sbb
fld
repz
popf
push
leave
jbe
mov
jno
cli
repz
xlat
lds
add
inc
xchg
les
jmp
cmps
jmp
mov
stos
sahf
or
test
lea
jo
fdivp
cwde
jle
dec
out
jge
dec
mov
adc
test
add
outs
xlat
add
adc
push
sar
ffreep
push
in
xlat
cmp
xor
out
cmps
jo
push
cmp
sub
mov
pop
out
dec
mov
cli
out
int3
sub
xchg
sbb
pushf
stc
jnp
sbb
fsub
jbe
or
cdq
test
into
pop
rol
xchg
mov
in
retf
cmp
lock
jp
adc
mov
retf
xchg
cmps
addr16
pop
les
jl
pop
cmp
cmps
aad
addr16
ss
and
pushf
pop
enter
add
mov
neg
pushf
sub
fxch
into
or
sar
lea
stos
push
in
test
sbb
jns
push
jmp
cmp
mov
nop
push
add
xchg
inc
xor
sub
adc
bound
int
xchg
xchg
pop
jecxz
cmc
and
gs
leave
cmp
dec
xor
lods
inc
out
pushf
mov
and
ins
ins
and
sti
inc
jbe
unpcklps
imul
loope
iret
sub
xchg
cmp
push
add
popf
loop
int3
pop
mov
cmp
push
shl
inc
cmp
xor
repz
data16
ret
enter
std
fcmovnu
push
sub
mov
aaa
ins
push
or
shl
call
push
in
adc
inc
dec
inc
fbstp
jl
scas
fisttp
imul
push
adc
test
rol
mov
in
rol
pushf
add
sbb
popf
test
cmp
add
scas
xor
or
push
lods
in
(bad)
adc
xor
out
ja
in
pushaw
dec
fistp
gs
scas
sahf
pop
add
sbb
and
retf
pop
enter
ja
(bad)
std
push
sbb
mov
push
loope
mul
mov
pop
data16
and
push
push
mov
aam
or
cmp
push
lods
mov
add
cmps
scas
mov
adc
push
int
in
fisttp
outs
stos
mov
into
stc
fadd
data16
out
popf
pop
std
ss
mov
cs
aas
adc
inc
movs
sub
fdiv
jp
push
jbe
cmp
jp
jno
push
mov
inc
pop
movs
lea
in
(bad)
sahf
push
xchg
xchg
xchg
outs
jnp
adc
dec
pop
xchg
xchg
cld
add
cmp
sar
push
cwde
jb
je
mov
inc
rcr
cdq
es
aaa
mov
(bad)
ins
jmp
sbb
aam
rcl
add
cmp
fwait
shl
test
idiv
mov
ss
pop
loopne
js
(bad)
push
aas
dec
jmp
scas
dec
call
adc
push
xor
or
loopne
and
or
push
(bad)
pop
mov
pop
pop
sub
sub
jo
inc
xor
dec
fmul
ror
inc
or
mov
add
mov
(bad)
icebp
aad
jle
inc
(bad)
or
mov
loope
mov
hlt
je
test
xchg
test
(bad)
out
sbb
daa
arpl
dec
xor
pop
adc
push
mov
add
rcl
mov
inc
push
fild
(bad)
mov
xchg
jbe
mov
mov
pushf
fild
xchg
cmp
aas
fbld
out
sbb
sbb
mov
lea
loopne
fimul
jbe
push
repnz
leave
ds
arpl
dec
jbe
push
call
movs
fs
fwait
std
repz
jo
mov
push
mov
mov
pop
mov
scas
inc
inc
gs
add
(bad)
xor
mov
mov
push
push
mov
push
and
cs
xchg
sbb
stos
xor
retf
pop
pop
out
sub
mov
mov
adc
test
(bad)
jmp
je
xor
mov
jno
les
and
and
jl
mov
data16
xchg
in
jge
rcl
cld
add
fidiv
out
sti
cmps
xor
cmps
daa
xchg
(bad)
(bad)
adc
sbb
clc
bound
jns
mov
xor
rcl
jg
pop
imul
add
inc
add
jmp
dec
nop
mov
hlt
dec
pusha
xor
jp
shl
mov
push
mov
cs
ja
jns
fs
aad
mov
inc
push
mov
inc
jne
ud1
xchg
or
test
popf
push
dec
push
mov
mov
cmc
jp
jb
cdq
retf
pop
fbld
jbe
mov
inc
xchg
scas
js
test
enter
test
mov
pop
lods
fiadd
mov
sbb
and
lock
(bad)
push
sbb
cld
outs
mov
mov
or
jmp
inc
jmp
pop
cs
xchg
fistp
mov
test
push
aaa
sbb
ret
popa
div
sbb
lds
xor
gs
loope
in
push
jb
fs
rol
cmps
jae
fld
push
cmp
jg
daa
nop
outs
push
jmp
push
mov
loope
xchg
dec
mov
popa
clc
lds
int
cwde
jne
fwait
ss
retf
inc
cdq
cwde
ret
cmovg
pcmpgtd
jmp
inc
movs
neg
and
xor
lea
dec
outs
add
enter
icebp
fstp
or
jge
mov
imul
mov
jmp
xor
dec
push
(bad)
xchg
lock
movs
shl
aam
scas
addr16
mov
push
leave
add
jecxz
in
cmp
add
gs
jge
lock
mov
je
sub
call
inc
xor
xor
fdiv
lods
dec
out
retf
fnstenv
lahf
out
imul
sti
jns
idiv
call
and
(bad)
test
(bad)
or
popf
cpuid
xchg
loopne
xor
inc
cmp
xor
jae
fisubr
cmps
fiadd
mov
(bad)
xchg
jge
or
mov
loope
rol
xchg
jbe
mov
dec
aaa
fld
in
out
sub
push
jmp
pop
test
sbb
mov
retf
push
test
pusha
mov
mov
push
in
ret
mov
es
cmc
ins
pushf
test
add
and
sub
sbb
mov
stc
pusha
inc
adc
lea
pushf
fadd
mov
in
and
mov
jp
mov
push
ja
in
jl
xchg
dec
jmp
cmc
stc
or
rol
mov
lods
mov
addr16
jns
jmp
(bad)
mov
mov
iret
ds
sbb
jbe
add
fisttp
inc
enter
mov
fisubr
mov
mov
in
rcr
xchg
ficom
jecxz
cmc
fucomp
pushf
outs
add
lods
or
inc
test
and
pop
xchg
retf
sub
add
dec
sub
jno
cdq
jbe
mov
clc
(bad)
sti
das
je
loop
jnp
jg
jne
cli
ds
js
lock
push
lods
push
push
mov
jae
pop
mov
(bad)
xchg
fmul
sbb
jb
pop
nop
pop
mov
cmps
mov
mov
fnstsw
or
aam
jp
push
mov
xchg
xchg
es
repz
dec
fbstp
ret
(bad)
out
pop
mov
push
cdq
das
(bad)
sbb
jecxz
enter
and
loopne
mov
sub
leave
xchg
push
fsub
test
rcl
dec
bound
mov
sbb
ja
sub
push
js
test
sub
fst
mov
jg
cmc
lock
mov
vaddsd
(bad)
cs
leave
cmp
imul
xor
mov
enter
sbb
cmp
loopne
sbb
stos
pop
movs
sahf
adc
pop
arpl
push
mov
push
and
out
mov
push
xchg
imul
inc
imul
mov
lds
scas
add
mov
dec
sbb
out
cmp
push
mov
stc
xchg
push
dec
dec
popf
push
xor
popf
xor
enter
sbb
bound
mov
cmp
jb
add
sti
pop
lods
and
mov
or
cld
out
xchg
test
or
adc
push
mov
or
push
or
mov
add
lds
adc
sbb
cmp
jmp
in
xor
xchg
jle
(bad)
cmp
mov
pop
inc
cmps
je
adc
imul
inc
shr
xchg
mov
in
movs
idiv
cmp
out
sub
cmp
mov
xchg
push
xor
lea
mov
aaa
scas
shl
leave
push
xor
aaa
inc
xlat
push
fsubr
mov
or
mov
pushf
mov
inc
stos
ss
out
arpl
sub
mov
gs
and
adc
adc
popa
or
inc
sbb
repnz
retf
fbstp
test
in
mov
fdiv
xor
(bad)
pop
mov
(bad)
retf
xor
xor
nop
adc
frstor
cmc
hlt
arpl
popa
jmp
push
mov
xchg
mov
jp
inc
pop
test
(bad)
call
push
add
add
jmp
pushf
aad
jo
ins
cwde
pop
xor
jl
ss
push
or
cmps
jg
(bad)
enter
popa
scas
fldenv
int
push
int3
test
outs
add
retf
scas
pop
sbb
loopne
aam
outs
dec
pop
aam
adc
mov
test
std
ss
mov
xor
popf
rol
jb
pop
popf
int
push
jecxz
ds
pop
aam
dec
pop
in
scas
push
cmp
pop
mov
dec
repz
sbb
inc
leave
push
cdq
and
std
jmp
and
stos
ret
sar
scas
sbb
mov
retf
adc
ror
jo
fdivr
repz
dec
mov
mov
pop
inc
inc
dec
movs
mov
mov
xchg
cmp
cwde
push
push
fisub
lods
rol
cmp
xchg
es
fadd
jbe
stos
aaa
pop
push
in
fwait
sub
or
jo
out
in
mov
add
mov
pop
sbb
(bad)
hlt
outs
arpl
out
pop
lods
adc
inc
mov
inc
dec
(bad)
xchg
xlat
mov
hlt
pop
cmc
inc
mov
test
pop
pop
mov
data16
mov
mov
jb
enter
mov
out
mov
mov
mul
and
rcr
aas
jo
xchg
push
add
lods
sbb
neg
push
mov
or
fs
ds
icebp
sbb
and
and
cwde
and
into
retf
jmp
sbb
add
es
lds
movs
imul
mov
adc
mov
std
xor
mov
add
pop
jge
bound
xor
xchg
icebp
xor
(bad)
nop
cmp
dec
lods
test
lock
pusha
gs
retf
dec
mov
aam
leave
fs
cmp
push
or
imul
mov
mov
cld
adc
mov
pop
sub
daa
test
sub
adc
push
jo
clc
dec
and
test
inc
aam
push
popf
dec
(bad)
sbb
push
addr16
int
test
mov
jns
cmc
add
cld
pop
repnz
aas
adc
cmps
stc
push
(bad)
loope
pop
cli
test
or
adc
jne
adc
push
sbb
jle
add
(bad)
jmp
rcl
aaa
inc
sbb
shl
mov
stos
sub
sub
pop
xchg
mov
loopne
je
jno
jge
mov
mov
lock
(bad)
cmp
jl
xor
or
push
cmp
xchg
scas
popf
cwde
hlt
out
(bad)
xor
ja
and
sub
sub
dec
jae
push
(bad)
pop
mov
mov
xor
pop
dec
pop
ja
ret
xor
sbb
fwait
test
test
mov
sbb
mov
stos
inc
loope
ror
push
ja
mov
fs
push
int
sub
faddp
mov
clc
jge
jmp
and
cmp
xchg
cmc
pop
xor
addr16
adc
movs
ds
sub
mov
and
ficomp
enter
shr
push
xor
aam
imul
mov
aas
out
(bad)
adc
test
loope
mov
cmp
movs
call
outs
pop
pinsrw
dec
jns
or
out
xchg
xor
data16
mov
fmul
dec
bound
xchg
jns
in
or
or
jae
add
lock
or
push
popa
cmp
inc
push
add
push
mov
into
mov
pop
mov
pusha
mov
mov
and
mov
pop
or
xor
cmp
xchg
or
bound
push
clc
push
pop
(bad)
and
cmp
xchg
loop
jl
ficom
ret
mov
fcmovnu
dec
loopne
jo
in
retf
adc
add
pop
movs
adc
cmp
xchg
xor
xchg
mov
and
das
data16
cmp
out
or
popa
aaa
xchg
pop
cmp
aas
jmp
nop
idiv
fild
and
sbb
ins
push
mov
pop
inc
sub
push
loope
xchg
xchg
mov
mov
test
ret
mov
cmps
loope
in
movs
bnd
mul
out
jp
cld
ds
sub
cmp
adc
mov
ins
outs
pop
test
prefetch
push
adc
adc
jmp
add
inc
aaa
popf
fnstcw
ror
sbb
jns
jnp
and
aad
sbb
loope
or
mov
dec
adc
jne
xor
stc
or
pop
push
stos
and
pusha
mov
dec
mov
mov
test
and
push
push
shr
data16
push
mov
jbe
ss
test
sbb
jp
and
(bad)
jnp
mov
test
pop
xor
push
ror
ret
jae
xor
xchg
ds
int
pop
mov
stos
mov
push
cwde
fdiv
mov
pop
in
std
pop
add
iret
push
sbb
cmp
mov
pop
push
mov
jmp
fsub
cmp
loop
cld
push
jbe
dec
dec
pop
sbb
xchg
pop
sub
or
test
in
jg
jne
pop
sbb
in
or
movs
(bad)
test
sti
repnz
nop
jg
popf
push
shr
popf
add
add
mov
or
jae
out
dec
mov
lock
adc
add
or
pushf
mov
fdivr
inc
iret
cwde
xor
iret
lock
mov
jmp
push
jo
jno
daa
outs
xchg
sbb
dec
mov
sbb
xlat
mov
dec
jmp
adc
sar
mov
xchg
mov
adc
and
repz
loope
inc
cli
inc
mov
pop
rol
cmp
or
xchg
dec
mov
rcl
cmp
xchg
dec
add
test
and
lahf
or
jle
call
shl
lods
sub
pop
xchg
adc
scas
movs
inc
cmc
fstp
inc
mov
scas
es
out
inc
and
jge
inc
sbb
inc
lds
in
xchg
adc
out
call
ins
fstp
ja
cmps
loop
popa
js
add
ss
cwde
ror
mov
pop
rol
stos
xor
aaa
mov
(bad)
ins
sub
out
mov
arpl
call
ja
add
inc
in
add
pop
mov
cmp
(bad)
in
adc
test
sar
stc
lods
and
enter
(bad)
fimul
int
cmps
aas
xlat
leave
add
sbb
xor
sub
arpl
cmp
jge
movs
ds
div
sti
imul
fdivr
jo
fisttp
loopne
imul
sti
jae
push
jmp
push
add
fdiv
cmp
lds
mov
in
in
sbb
push
inc
js
aam
imul
test
ja
fsub
(bad)
retf
popa
jne
xchg
setne
arpl
add
xor
rcl
jo
ins
out
ds
scas
or
ficomp
sbb
jge
mov
pop
mov
push
aas
gs
pop
jecxz
js
sbb
(bad)
ins
pop
add
sub
iret
test
or
cmp
push
lahf
icebp
ret
mov
push
xchg
adc
pop
dec
ret
hlt
dec
clc
loop
and
cmp
push
leave
xchg
sti
sub
arpl
jb
push
test
dec
push
ins
pop
mov
cmc
jne
and
pushf
(bad)
ins
mov
call
mov
int3
clc
repz
push
xchg
nop
pop
and
nop
add
dec
and
add
shl
sbb
mov
cli
in
(bad)
out
dec
gs
retf
lods
movs
in
popf
jbe
cdq
dec
cmp
adc
pusha
movs
(bad)
cmp
rcr
mov
pop
xchg
retf
scas
adc
push
lock
lods
loopne
jbe
push
aad
mov
cdq
movs
push
pushf
div
jmp
loop
out
xchg
fcomp
mov
outs
add
(bad)
sub
loop
lds
ret
addr16
sar
mov
das
xor
mov
mov
daa
push
ds
inc
or
leave
mov
out
out
dec
jnp
dec
jbe
outs
xchg
(bad)
adc
les
pop
add
xchg
adc
mov
scas
xor
add
pop
push
dec
fild
out
mov
push
(bad)
adc
in
pop
mov
sub
std
imul
cmp
outs
movs
adc
aaa
cmp
aam
(bad)
cwde
inc
dec
jo
movs
add
mov
or
mov
stc
jmp
sti
sbb
push
fnsave
inc
cmps
inc
push
jns
mov
jne
lock
clc
out
push
fidivr
enter
xor
dec
dec
out
jns
stos
test
xchg
hlt
out
inc
dec
pop
aaa
ds
iret
rcl
out
cmp
adc
fs
jae
int3
push
cld
lods
or
lds
hlt
and
stos
mov
and
jp
pop
inc
mov
push
pop
push
gs
mov
xchg
clc
mov
sbb
ds
adc
mov
icebp
cs
loopne
mov
cmp
jmp
lahf
sub
dec
lea
inc
retf
xchg
gs
pop
jnp
jl
pop
in
js
jp
xchg
arpl
fs
je
mul
cmp
mov
inc
mov
div
cmps
mov
jbe
xor
arpl
cmps
and
sub
stos
les
aaa
shr
adc
dec
fsub
xchg
sbb
call
xchg
cli
repz
fcom
fs
xchg
popf
aas
(bad)
lods
push
leave
and
gs
aas
push
in
jnp
jg
popa
and
jp
stos
mov
ficom
jmp
sub
ja
in
lods
adc
jmp
dec
or
mov
jb
xchg
bndstx
mov
aam
push
lock
cli
inc
sub
xor
push
repz
push
lods
retf
or
push
or
pop
lds
xchg
push
xor
(bad)
(bad)
lock
mov
popf
cld
lds
sub
mov
icebp
adc
leave
inc
aam
int3
movs
dec
retf
cld
or
call
jmp
rcl
cmp
mov
gs
sbb
push
or
jle
pushf
cld
mov
rol
loop
sub
inc
jb
pop
push
xor
pusha
pop
adc
mov
call
icebp
rep
add
pusha
push
sub
stos
ja
fld
xchg
movs
and
ins
mov
xlat
stc
and
in
push
jmp
std
xor
fdiv
pop
xchg
idiv
mov
lods
xlat
sub
je
cmp
retf
mov
in
cmc
ja
dec
ret
push
mov
mov
mov
cmp
mov
jno
push
shr
and
or
ins
in
(bad)
pop
ja
(bad)
jne
mov
in
xor
movs
inc
mov
arpl
aad
fnstsw
mov
ja
lahf
mov
clc
dec
ss
mov
popf
pop
xor
inc
movs
data16
push
leave
push
mov
add
jp
sub
icebp
out
mov
mov
mov
xor
pushf
or
and
mov
in
push
pushf
es
imul
(bad)
sbb
out
addr16
icebp
scas
jmp
das
js
les
icebp
out
test
xchg
test
lds
xchg
ret
imul
shl
bound
out
sar
jmp
(bad)
adc
add
loope
(bad)
mov
xchg
push
adc
pop
pushf
fnstenv
inc
sbb
jbe
mov
inc
jno
sbb
lods
scas
lock
jbe
jl
cmp
add
loopne
in
mov
push
sub
cmp
imul
push
pop
ja
or
lods
outs
cmps
and
xchg
hlt
fs
jl
test
aaa
in
jmp
mov
cmp
imul
out
dec
or
fadd
mov
lock
mov
jo
mov
push
and
int3
iret
syscall
int
cmp
push
mov
push
dec
stos
mov
test
xchg
sub
ret
out
cdq
pop
loopne
xor
pop
and
and
dec
(bad)
ds
fild
pop
sbb
jbe
into
or
cmp
jmp
xchg
sub
or
in
sahf
retf
shl
out
shl
push
mov
fcomp
je
jmp
pop
pop
xchg
fcom
loopne
(bad)
icebp
xor
jp
aad
fiadd
dec
and
sub
repnz
mov
rol
sbb
sub
(bad)
shl
aaa
test
mov
dec
inc
push
xor
lds
xchg
mov
add
int3
mov
jno
lock
leave
add
sahf
shl
cmp
popf
loope
or
movs
aam
lds
jmp
in
repz
outs
add
lock
imul
mov
lods
jns
inc
sub
mov
(bad)
xchg
retf
div
(bad)
pop
loop
bound
cmp
jg
bound
cld
and
xchg
lods
lock
adc
stos
or
jg
cmc
jne
bound
adc
or
outs
mov
inc
jns
std
push
and
popa
mov
pop
or
mov
ret
out
repnz
faddp
mov
movs
add
aad
and
cmps
rcr
and
dec
(bad)
pop
(bad)
lods
push
cli
ror
lods
push
jmp
jo
scas
ins
jns
adc
pop
movs
les
xchg
mov
popa
xchg
jmp
cld
cmps
lds
rcl
sbb
retf
cld
cmc
and
and
imul
pop
cmp
ins
cmc
or
es
jno
lock
cmp
mov
sahf
ja
mov
jmp
and
jmp
ret
movs
aas
popa
lahf
mov
dec
test
not
dec
out
xor
rcl
popf
loop
stos
out
clc
movs
loopne
retf
mov
cmp
dec
lods
push
fst
add
mov
pop
xchg
in
jns
push
aas
lock
dec
popf
jle
or
fmul
pusha
enter
xor
fild
sub
int
call
int3
xchg
ja
xchg
gs
cmp
xchg
xchg
and
out
mov
dec
jb
aas
mov
(bad)
sbb
inc
or
xchg
add
pop
adc
jae
mov
mov
mov
push
dec
sub
lock
lods
int
int3
add
jno
repz
bound
ins
xchg
repz
mov
retf
sbb
inc
mov
out
sar
js
adc
sub
pop
mov
and
push
cmp
pusha
xchg
pop
into
ja
and
inc
bound
ret
push
icebp
fldcw
xor
xor
adc
jnp
dec
jg
xor
jnp
inc
and
jne
cmp
lds
mov
sub
jl
jns
call
pop
sub
sub
sar
stos
retf
call
ss
ins
stc
mov
loop
and
cmp
rcl
cmp
push
ins
push
adc
dec
inc
pop
cdq
pop
imul
jg
ins
mov
pop
stos
ret
push
es
jno
jge
or
frstor
in
adc
fdiv
adc
(bad)
in
mov
dec
adc
jg
gs
xchg
or
xchg
imul
or
cmps
mul
adc
ss
or
sub
imul
cld
cmp
xchg
test
pop
mov
mov
fnsave
mov
dec
push
or
or
outs
and
mov
fstp
push
add
ret
inc
fcom
test
stos
xchg
ja
hlt
xchg
sub
mov
pop
repz
sbb
add
jp
mov
in
popa
out
sbb
cmp
shl
stc
xor
and
imul
cmp
(bad)
outs
js
sahf
mov
pop
mov
push
cmps
mov
or
xor
cmp
pop
shl
mov
inc
int3
(bad)
fsub
pop
mov
cdq
mov
xor
xor
sub
repz
push
sub
mov
jne
imul
or
(bad)
gs
bound
xor
push
or
mov
push
sbb
add
arpl
jae
sub
or
pushf
mov
and
dec
pop
(bad)
xchg
jmp
mov
pusha
and
adc
add
das
xchg
mov
rol
xlat
fwait
rcl
test
and
xchg
retf
lds
test
dec
les
dec
int
out
adc
cld
inc
pop
or
sbb
push
in
dec
test
mov
push
mov
jo
cmp
add
ds
inc
sub
pusha
sub
cld
push
push
ds
add
mov
outs
cmp
pop
push
and
mov
dec
ds
sbb
dec
(bad)
cdq
jmp
in
arpl
or
fcmovb
xchg
fs
bound
cmps
pushf
arpl
call
fisttp
popa
and
sub
dec
ret
imul
ret
mov
push
sti
and
rcl
js
or
inc
cli
test
pop
mov
mov
popf
and
xchg
daa
push
xor
vcvtps2dq
adc
pop
shr
daa
ins
(bad)
das
pop
shr
cs
addr16
jnp
ins
xor
lahf
mov
mov
test
ror
jg
cli
or
repz
mov
xchg
cdq
cmp
sub
and
jl
sahf
pop
jge
pop
xor
xor
sub
jp
add
lods
iret
out
movs
fldenv
sbb
fwait
xor
fisttp
mov
fdivr
cmp
mov
movs
pop
rol
sbb
xchg
xchg
neg
into
jmp
cmp
push
repnz
jle
sbb
clc
cmps
(bad)
lods
(bad)
mov
cmp
ins
mov
xor
pop
adc
in
sar
mov
xchg
in
mov
aas
adc
bound
out
fptan
outs
xor
dec
ret
xchg
xchg
jo
fidivr
pop
inc
in
rol
ss
and
fldcw
aaa
xor
leave
movs
push
punpckhwd
xchg
jb
les
and
cmps
ja
push
push
popf
pop
xor
adc
or
cmps
aas
and
cmp
clc
ret
or
out
push
dec
sti
pop
lods
stos
shl
std
ds
dec
popf
jmp
mov
inc
mov
jb
je
or
xchg
adc
sbb
into
arpl
(bad)
mov
stos
aam
lock
test
sbb
(bad)
icebp
push
(bad)
jmp
mov
lods
sub
retf
push
int3
out
movs
adc
mov
pop
adc
mov
enter
fnsave
dec
mov
mov
std
scas
jo
(bad)
inc
mov
int3
pop
std
push
push
push
test
xor
jmp
arpl
xlat
ja
push
cmps
xbegin
mov
mov
adc
mov
daa
arpl
adc
push
add
or
fistp
xor
push
push
pusha
and
mov
clc
and
dec
and
sub
pop
inc
cmp
adc
imul
es
jge
push
imul
jmp
stos
scas
pop
(bad)
jp
out
pop
or
xor
lods
push
loopne
jg
stos
jl
arpl
int
xchg
cmp
cmp
push
out
and
inc
add
out
das
sar
int
inc
pop
push
mov
data16
adc
cmc
inc
pop
pop
ds
mov
leave
xlat
test
add
lods
pop
jmp
jnp
fs
jl
jecxz
jge
pusha
mov
iret
loopne
ja
inc
stos
pop
xor
or
cmc
or
mov
push
fsub
repz
in
inc
push
call
(bad)
inc
jae
ret
push
dec
out
cdq
mov
dec
scas
retf
aam
cmp
fstp
int
dec
je
jno
sbb
outs
inc
out
pop
add
in
add
stos
add
adc
mov
and
mov
imul
fsub
sub
enter
cdq
ins
lock
stc
jns
fild
div
cmp
sub
push
jl
sbb
std
inc
repz
sub
jl
push
call
pushf
retf
fnstcw
adc
inc
jo
pop
xchg
cwde
shl
shl
stos
mov
dec
mul
test
sbb
mov
xlat
mov
cmp
xor
pop
push
arpl
bound
adc
ss
ror
shr
pop
imul
fcmovnbe
push
adc
leave
in
cdq
dec
or
pop
jl
fidivr
mov
mov
adc
retf
jp
xchg
std
push
imul
pushf
and
and
mov
loopne
retf
push
mov
aaa
les
mov
rcr
xchg
jnp
movs
mov
shl
cmp
sti
aam
shr
cmps
inc
push
push
jb
dec
cmp
inc
loopne
mov
js
xchg
ja
ret
or
fcmovnu
xchg
jp
pop
fwait
mov
(bad)
cmp
inc
mov
xor
push
cmc
lods
popf
mov
xchg
xchg
or
gs
mov
fwait
ret
inc
dec
push
or
push
out
xchg
movs
(bad)
int
jb
lds
in
inc
xor
or
sub
dec
add
cmp
and
cmp
retf
lea
shl
mov
lods
icebp
mov
xor
xor
dec
adc
fadd
into
ror
ins
push
push
nop
int3
mov
sub
inc
pop
cmps
jno
fnstsw
sbb
es
mov
sti
cmp
loope
xchg
mov
(bad)
dec
nop
adc
mov
mov
mov
xor
jno
std
cmp
fwait
call
jo
mov
mov
add
pop
fadd
sbb
in
icebp
jge
xor
out
pop
push
sub
adc
sahf
in
imul
jg
cld
xor
jmp
push
mov
mov
retf
inc
lahf
outs
out
scas
adc
jmp
inc
push
pusha
cmp
pop
pusha
or
mov
(bad)
push
xor
sbb
xor
mov
add
jle
sbb
inc
inc
(bad)
jnp
cmp
cld
ret
fdiv
sbb
lods
stos
xchg
lock
inc
dec
push
setp
test
ret
test
cmps
push
inc
dec
push
xor
hlt
fwait
out
adc
jle
pop
xchg
or
fldpi
jae
pop
stc
cld
jmp
sbb
sub
stos
fstp
out
jecxz
jecxz
jnp
in
fprem
mov
mov
add
in
push
stos
(bad)
cmp
call
adc
aaa
cwde
sbb
retf
jl
cmps
and
adc
ins
in
and
push
pop
cmps
jecxz
je
dec
repnz
sub
lahf
test
push
outs
fdiv
push
imul
retf
inc
cmp
jo
out
sub
pop
pop
and
pop
ror
adc
mov
inc
dec
test
mov
mov
xchg
inc
scas
bound
jmp
enter
add
push
and
sbb
or
push
stos
sbb
lock
in
cmc
ins
pushf
test
push
and
xor
std
xchg
cli
inc
enter
stc
mov
bnd
bound
add
popa
push
and
idiv
cld
clc
cli
repnz
sbb
into
sub
jns
bound
test
iret
(bad)
movs
enter
inc
push
xor
test
or
ret
mov
iret
mov
test
jns
inc
add
jb
sub
push
fisttp
sbb
(bad)
cmps
inc
sbb
sahf
dec
xchg
add
add
lods
loopne
jae
add
sbb
xor
mov
sbb
sahf
xchg
xchg
sti
inc
in
jmp
lods
aad
aam
lahf
cmp
dec
fld
test
lods
cwde
jno
(bad)
sbb
mov
inc
push
neg
inc
adc
push
daa
call
sbb
pop
add
inc
cdq
rcl
add
push
(bad)
leave
mul
(bad)
xor
mov
iret
ss
xchg
je
jmp
mov
icebp
push
leave
fimul
push
mul
cli
xchg
push
jle
vpavgb
jmp
movs
and
loope
xor
and
or
mov
ret
add
stc
mov
scas
dec
cmp
and
xchg
std
test
ficomp
or
sbb
sub
adc
mov
sbb
pop
or
out
lock
adc
inc
dec
mov
adc
dec
push
enter
dec
fyl2xp1
adc
das
sbb
sbb
js
or
mov
mov
lods
jmp
int3
xchg
(bad)
out
ret
pop
stos
mov
mov
hlt
jge
fsubrp
in
and
repz
js
push
fxch
push
adc
test
mov
add
bound
clc
test
add
or
shl
jb
fimul
xor
out
int3
add
mov
cmp
out
nop
stos
sbb
adc
in
loop
fistp
je
scas
cmp
jg
lock
add
mov
scas
push
cmp
movs
call
stos
sub
add
jg
(bad)
jle
sbb
lea
in
xchg
outs
xor
jl
test
cmc
push
sbb
pop
sbb
inc
jnp
cmps
rol
outs
xor
aam
retf
mov
sbb
add
in
push
xchg
mov
xor
fisttp
ret
cmp
dec
das
iret
xchg
push
test
in
cmps
adc
jmp
dec
adc
scas
movs
mov
retf
sub
jp
jnp
inc
mov
js
test
adc
sbb
xor
xchg
mov
scas
repz
bswap
sbb
pop
xor
std
or
xchg
gs
rcl
jnp
inc
mov
xchg
and
sbb
dec
cmp
push
das
sbb
in
cdq
nop
mov
nop
sub
xchg
and
fild
pop
pop
inc
inc
pop
and
je
aad
mov
stc
jle
and
enter
cwde
pop
adc
loop
(bad)
test
inc
jno
inc
push
mov
inc
xor
aad
inc
push
lahf
add
xchg
mov
ret
adc
pop
cmp
mov
pop
ret
mov
les
mov
xor
cmps
stos
pop
pop
imul
jg
sbb
xor
into
sub
xor
adc
mov
xchg
pop
jp
mov
mov
rcr
or
jmp
sub
or
inc
hlt
jb
xchg
and
int
mov
and
cs
xchg
test
out
repz
rol
adc
mov
mov
jae
add
cmp
daa
data16
mov
pop
je
mov
xchg
pop
ins
mov
stos
mov
push
pandn
in
gs
xor
arpl
add
aaa
loope
add
push
adc
xchg
in
push
add
cmp
sub
adc
jb
je
call
pusha
add
sbb
pop
mov
jmp
cmp
popa
popa
aad
inc
mov
pop
les
outs
or
lock
div
sbb
mov
xchg
sbb
jle
bound
sahf
push
sahf
lock
dec
cmp
jl
ret
imul
cmp
sahf
xor
fs
gs
jmp
add
mov
mov
loopne
addr16
jbe
aas
jg
fist
js
pop
clc
add
sub
or
dec
sahf
mov
ret
add
retf
sbb
sbb
xor
add
sti
mov
mov
mov
sbb
fnstsw
aam
mov
add
mov
push
xlat
xor
dec
mov
test
mov
and
jbe
cmp
xor
jecxz
outs
ins
stos
neg
fmul
ja
sbb
js
sbb
dec
sbb
loop
js
and
sbb
pushf
mov
movs
std
inc
rcr
sub
mov
mov
and
and
jnp
inc
clc
add
shl
inc
jns
lds
arpl
stos
ret
es
and
cli
sub
cmps
pop
fisttp
dec
add
push
sub
clc
arpl
jmp
cmp
push
movs
xchg
iret
jmp
and
sbb
popf
pop
imul
scas
shl
sahf
adc
stc
jo
xchg
aaa
or
xchg
std
ins
hlt
mov
stos
outs
rcr
mov
sti
fadd
ror
pushf
jmp
call
ja
fisttp
pop
mov
ja
cmp
ja
aaa
nop
das
movs
push
inc
dec
inc
movs
test
icebp
jb
jo
dec
mov
rcr
mov
sbb
sti
cld
call
in
mov
lea
rcr
fild
jecxz
pop
add
pop
xchg
adc
adc
aad
pop
mov
add
bound
js
movs
sub
push
mov
add
xchg
imul
fdiv
test
js
retf
push
mov
xor
repz
mul
sti
call
sbb
sti
push
cmp
(bad)
pusha
test
dec
jle
jbe
stc
pushf
xor
jne
out
cmp
dec
or
mov
pop
pusha
sahf
test
arpl
out
push
mov
pusha
pop
stc
pop
push
(bad)
cld
inc
mov
fisub
cmp
das
mov
mov
and
maskmovq
test
jns
jmp
dec
xchg
jp
dec
push
add
push
call
lods
lock
pop
iret
in
mov
ins
cmp
addr16
cmp
jg
pop
test
jno
push
in
out
sub
xchg
out
pop
outs
sub
push
sbb
jl
xor
imul
(bad)
mov
pusha
dec
and
or
mov
inc
and
mov
jmp
inc
je
add
pushf
jecxz
sbb
(bad)
mov
in
sbb
xor
push
push
mov
mov
mov
jle
xchg
or
cmps
cmps
mov
add
adc
mov
push
adc
movs
ins
movs
popf
pop
xchg
jno
cmp
movs
push
cmp
lods
cmps
scas
das
mov
mov
out
mov
mov
xchg
call
loop
and
inc
nop
mov
gs
(bad)
scas
push
add
jnp
sbb
test
sbb
mov
ficom
xor
cs
lods
ret
cmp
jae
neg
mov
dec
inc
push
and
mov
cmp
cmp
push
adc
mov
hlt
outs
xchg
xor
jle
mov
rol
cmp
push
mov
xor
xchg
popa
jecxz
xchg
adc
sbb
arpl
sub
out
cmp
test
cmp
mov
int
sar
div
repnz
cmps
mov
mov
inc
test
outs
mul
mov
imul
sbb
mov
and
cld
bound
test
jne
test
inc
push
jns
pop
iret
sbb
data16
push
pop
clc
ins
dec
push
mov
xchg
sbb
cmc
shl
and
sub
jecxz
add
pop
maskmovq
jg
imul
arpl
dec
(bad)
fnstsw
adc
xchg
je
gs
dec
or
retf
retf
jo
pop
(bad)
push
lahf
or
ret
shr
jg
popf
mov
test
je
daa
rcr
jnp
mov
in
dec
mov
dec
lods
imul
inc
xlat
cli
mov
cli
imul
test
or
mov
and
enter
cmps
xchg
enter
nop
pop
push
in
jmp
nop
in
rcl
xchg
out
jns
fiadd
dec
aaa
mov
dec
push
outs
ret
rol
add
fcomp
ret
int
repnz
shl
out
in
mov
push
ss
shr
outs
xchg
sbb
outs
or
sbb
fst
mov
mov
je
imul
jp
xor
mov
cmp
mov
call
jge
scas
lahf
mov
xor
(bad)
fisttp
rol
push
call
repz
jg
jb
pop
dec
adc
movs
jno
push
pop
inc
mov
mov
jecxz
xor
les
clc
popf
pop
sub
mov
(bad)
(bad)
mov
and
pop
xchg
stos
sub
or
xchg
mov
add
into
ret
sbb
or
int
mov
aam
inc
add
imul
sub
xchg
retf
loopne
lahf
sbb
repz
sahf
shr
test
sar
pop
and
outs
into
sti
mov
add
jmp
push
push
stos
adc
push
xchg
and
scas
mov
sti
test
std
jg
scas
js
pop
fidiv
pop
pop
popf
fucom
repnz
push
inc
sub
xchg
call
std
add
xchg
inc
repz
int
cmps
push
or
jg
test
inc
fstp
aad
repz
ror
in
rcl
in
jnp
dec
out
adc
or
cmp
pop
inc
adc
push
aaa
stos
jns
mov
cdq
mov
adc
push
push
sbb
ins
xchg
stos
adc
gs
xor
or
loop
js
sub
dec
pop
gs
jge
mov
es
mov
clc
dec
xchg
xor
(bad)
inc
fs
arpl
sub
pop
shl
jge
cmp
rol
in
sbb
lock
(bad)
in
fs
mov
push
nop
xchg
adc
clc
mov
js
mov
out
icebp
scas
hlt
adc
test
pop
in
popf
call
or
xchg
mov
aad
xchg
push
int3
pusha
inc
sub
(bad)
daa
jle
imul
je
mov
pop
mov
out
lods
lock
ds
les
cld
sbb
dec
ror
jae
sub
xchg
not
sbb
jbe
adc
pop
jnp
mov
stc
jo
lods
pop
sbb
mov
adc
pop
sti
loop
pushf
fs
push
cwde
add
out
mov
jmp
ins
pop
leave
inc
jecxz
cmp
div
xchg
push
push
aad
mov
sbb
cld
loope
mov
adc
int3
pop
mov
inc
mov
rol
stos
(bad)
cmp
call
dec
shl
and
and
dec
dec
adc
aam
xchg
jp
std
loop
push
scas
sbb
xchg
mov
daa
(bad)
dec
xchg
and
inc
aaa
ds
call
push
xchg
sbb
bnd
clc
daa
jle
(bad)
or
je
fcomp
jns
int
jle
or
lahf
lods
test
dec
sub
repz
je
sbb
xchg
cld
repz
fstp
ret
sbb
xchg
push
mov
int
xchg
jbe
adc
popf
xchg
inc
jns
int3
ja
pop
inc
repz
sbb
sbb
mov
out
pop
movs
and
ja
cmps
push
cmps
mov
arpl
(bad)
sahf
mov
jmp
adc
(bad)
retf
ror
xchg
into
addr16
into
jmp
stos
lods
xor
fcom
aaa
call
jp
retf
pop
push
stos
pop
lods
xchg
mov
sub
jo
in
mov
dec
mov
dec
adc
sar
push
stc
(bad)
scas
adc
jge
inc
xchg
(bad)
pop
xchg
inc
jl
inc
in
dec
xor
je
cmps
clc
jb
xor
or
inc
ficomp
xchg
xchg
test
jmp
mov
push
dec
jb
or
xchg
or
or
or
ret
pushf
fcom
ins
xor
inc
mov
push
ss
ins
mov
add
repz
cmp
push
int3
add
mov
cmp
loope
sbb
sbb
in
mov
(bad)
or
iret
jl
rcl
enter
popa
mov
mov
ins
ds
cdq
cdq
jnp
outs
into
repnz
ja
adc
imul
pop
sahf
test
push
(bad)
shl
(bad)
and
and
jmp
in
sbb
pop
jnp
cmp
adc
push
sbb
fidiv
rol
dec
cli
jnp
pop
sbb
add
lea
cs
out
out
addr16
cmp
mov
pushf
(bad)
push
adc
test
ficom
ins
outs
sti
sub
aas
sbb
pop
xor
add
adc
sub
addr16
ja
in
pop
adc
out
scas
fiadd
sahf
xchg
call
inc
push
scas
sbb
xlat
jae
aad
dec
sbb
inc
in
jge
loopne
hlt
mov
cmp
fyl2xp1
jmp
cmp
pop
sbb
xor
jle
je
imul
jo
inc
push
ins
mov
xor
je
ss
adc
xor
sbb
pop
mov
add
sub
idiv
xchg
nop
add
xor
sbb
push
in
and
and
xor
cmp
adc
enter
mov
mov
aas
fimul
pop
adc
icebp
mov
adc
mov
dec
outs
add
dec
imul
xchg
sub
test
popa
ins
pop
loop
jne
movzx
imul
leave
jo
movs
cdq
call
mov
dec
out
lods
sbb
add
dec
xor
jle
dec
sub
jae
je
xor
pop
cmp
jno
sub
sar
or
scas
cdq
aaa
leave
push
mov
out
xchg
push
sbb
mov
push
lea
inc
sbb
dec
lahf
fwait
arpl
and
cld
ja
xor
push
retf
xor
mov
ss
cwde
xchg
inc
ja
lahf
sbb
fadd
lods
lods
jno
sar
or
jl
fcom
cmps
mov
int3
sbb
push
jmp
inc
out
leave
aaa
les
xchg
shl
sub
sub
test
xchg
mov
jl
cmps
test
xchg
and
and
leave
imul
pop
cmps
cli
mov
xchg
mov
cmp
cli
ins
arpl
into
mov
jno
aad
frstor
xchg
je
inc
add
sbb
add
xor
and
xlat
aaa
icebp
outs
repz
add
or
aas
fisttp
sbb
popf
jbe
ficom
cmps
in
cli
stos
nop
pop
call
push
ja
adc
xchg
push
int3
mov
lds
clc
clc
(bad)
cs
les
mov
sub
cmovno
daa
aam
(bad)
arpl
mov
sbb
jno
sbb
adc
imul
les
dec
and
jmp
cmp
mov
inc
sub
inc
pusha
push
test
sahf
xchg
push
pop
sub
dec
pop
(bad)
fstp
xor
jmp
(bad)
cmps
fs
repnz
icebp
xchg
fiadd
cli
sbb
lock
xchg
addr16
add
mov
in
ins
(bad)
pop
dec
xor
mov
test
arpl
dec
push
pop
cld
sub
adc
or
out
xor
ins
jnp
dec
sub
ss
and
add
sub
push
or
mov
sti
fnstenv
std
add
out
xchg
lea
inc
xor
push
(bad)
jmp
xchg
dec
stos
mov
stos
xchg
mov
sub
dec
pop
mov
aas
je
aam
pop
sub
imul
lea
std
inc
addr16
dec
inc
fs
cmp
xor
sub
inc
pop
fidivr
and
mov
outs
inc
scas
jns
popa
mov
repz
aaa
or
adc
clc
jnp
daa
xchg
pop
jmp
int
xchg
mov
cld
dec
xchg
in
push
push
sahf
sti
sti
mov
push
bound
lds
xchg
outs
mov
aad
test
jns
mov
jns
mov
imul
fcmovb
push
add
jb
or
mov
mov
ficomp
mov
or
mov
and
cmp
cmp
or
inc
dec
jae
or
add
mov
in
and
out
cmps
inc
aas
pusha
pop
icebp
sub
and
daa
and
cs
jl
loopne
mov
stc
lock
xchg
sti
into
adc
add
loope
outs
rcl
test
arpl
add
loop
push
ficom
cmp
xchg
fs
mov
mov
fild
test
mov
mov
dec
arpl
ss
fs
pop
je
retf
pop
loop
or
mov
icebp
mov
sbb
sub
mov
shl
ins
inc
imul
enter
cmps
mov
jb
loop
and
idiv
or
sub
lahf
and
dec
push
ins
sub
popa
(bad)
inc
pusha
pusha
in
adc
mov
cmps
call
lds
icebp
icebp
aaa
pop
mov
adc
mov
xchg
adc
ret
mov
(bad)
ins
cdq
dec
loopne
cmp
inc
in
in
aaa
test
cmp
xchg
push
fcmovnbe
(bad)
xor
(bad)
push
(bad)
jp
neg
cld
ja
pushf
and
fisubr
xchg
imul
loopne
add
xchg
sahf
ds
call
xlat
sub
ficomp
sar
pop
cmc
(bad)
bound
call
xor
into
inc
jns
xchg
lea
test
mov
xor
push
inc
addr16
imul
imul
sub
dec
mul
inc
pop
lods
mov
add
ds
xor
test
cmp
xchg
lods
aas
sub
sar
jle
fisub
cmp
mov
into
xchg
(bad)
xor
(bad)
and
or
scas
leave
push
es
bound
ss
sbb
daa
icebp
es
cmp
(bad)
mov
inc
mov
fs
enter
arpl
jo
shl
push
add
mov
mov
(bad)
sbb
test
leave
dec
es
mov
ss
sbb
out
sbb
cmp
pop
xor
mov
aas
push
inc
stos
or
dec
out
push
arpl
out
mov
out
add
sub
mov
enter
sub
inc
inc
inc
mov
gs
mov
ja
aas
jmp
sub
cs
ret
lods
xchg
out
and
push
xchg
jns
shl
pop
sub
iret
sti
push
(bad)
mov
xchg
test
xor
(bad)
mov
dec
xlat
retf
sub
ins
add
dec
xchg
and
dec
sub
rol
stc
sub
test
xchg
dec
mov
dec
sub
cwde
dec
and
cmp
dec
and
stos
add
xchg
push
push
shl
es
nop
in
loopne
test
and
inc
(bad)
pop
push
mov
std
cli
jbe
and
mov
fs
xchg
pop
fstp
inc
pop
adc
out
out
mov
cwde
(bad)
idiv
pop
xchg
repnz
dec
pop
out
inc
(bad)
ins
cdq
stc
sub
int
fld
jl
jnp
jmp
jge
cmp
mov
cmp
aas
lahf
cmp
repz
loope
or
pusha
sub
sahf
stc
fild
(bad)
movs
jg
jg
and
shr
mov
ret
jnp
(bad)
call
psrlq
std
mov
xor
movs
aam
ins
jo
fisub
popa
lahf
mov
retf
mov
jecxz
add
mov
and
dec
(bad)
jecxz
mov
add
jno
mov
outs
aam
(bad)
cmp
mov
sbb
mov
pop
movs
add
dec
jne
int
lods
lds
mov
int
push
dec
sbb
test
mov
fist
xchg
(bad)
aam
lock
mov
xlat
or
sbb
pop
in
sbb
xchg
shl
xchg
jno
mov
cmp
xor
and
jb
enter
mov
fnstsw
repnz
imul
ror
retf
ret
test
in
mov
repnz
fwait
sub
or
aas
jle
clc
outs
(bad)
ins
pop
sub
aaa
fistp
mov
jle
adc
pop
sahf
jns
sbb
xor
dec
stos
lahf
xchg
ror
pop
nop
mov
neg
aas
jle
mov
and
jecxz
lods
int3
sub
push
xchg
mov
or
jbe
adc
sub
sbb
mov
or
sar
cdq
mov
push
inc
push
or
mov
shl
jne
sub
fmul
aaa
retf
stos
repnz
movs
aaa
addr16
cli
mov
scas
inc
loope
jae
sbb
in
dec
daa
sbb
jb
xchg
ds
jg
sbb
push
push
mov
sbb
lods
enter
pop
pop
cmp
jno
cmp
xchg
fs
repz
xchg
mov
push
or
mov
mov
push
mov
push
outs
pop
xor
frstor
hlt
and
icebp
outs
shr
hlt
mov
fld
xor
push
push
cmp
cld
mov
stc
jp
dec
ds
fcomip
pop
out
dec
xchg
mov
gs
(bad)
mov
xchg
sub
shr
cmps
mov
pop
mov
bound
aad
leave
jne
sti
mov
cmp
sub
nop
scas
adc
xor
les
shl
cmp
daa
jb
cmps
rcl
cmp
xchg
push
jmp
sub
push
or
cs
imul
cld
xor
mov
pop
inc
(bad)
mov
xchg
add
js
jnp
inc
push
stc
das
jb
dec
dec
mov
adc
fiadd
cs
shl
loopne
stc
adc
mov
popf
mov
pop
and
push
clc
dec
fidiv
mov
xchg
pop
push
mov
mov
aaa
mov
dec
in
outs
ins
pop
mov
stos
mov
icebp
retf
out
cmp
cmp
xlat
and
mov
sbb
inc
fistp
jl
jno
enter
out
mov
rcr
sbb
sub
push
jb
and
mov
add
mov
push
push
adc
sbb
push
imul
jle
fidiv
cdq
cmp
loop
out
cli
test
jle
fmul
lea
sbb
inc
adc
shl
js
and
lea
inc
or
sbb
loop
mov
ss
inc
(bad)
xchg
jle
sbb
in
and
in
pop
pop
sbb
lds
fsubr
cmps
xchg
scas
sbb
dec
dec
ins
fld
outs
jno
lods
sub
adc
sub
jnp
jns
std
or
pop
fnstenv
mov
(bad)
xor
push
repz
aas
shr
xor
ins
mov
cli
loop
jnp
imul
inc
mov
leave
icebp
xchg
mov
jne
cmp
adc
out
pop
and
mov
lock
dec
or
mov
push
clc
cmps
addr16
add
aaa
pushf
xchg
leave
xor
out
or
push
aad
stos
fimul
adc
jp
inc
ret
adc
push
nop
cdq
out
adc
retf
mov
bound
xor
sub
lods
sbb
cmp
stos
jecxz
sbb
pop
call
xchg
jle
into
aas
cmps
and
pop
add
lock
adc
push
ret
jnp
std
fst
daa
jge
movs
jo
xchg
jbe
loope
push
push
pop
and
aaa
pop
fucomip
dec
ror
pop
and
out
sahf
hlt
mov
aam
inc
mov
in
jge
mov
xchg
jl
or
ds
lock
movs
push
xor
loope
adc
dec
inc
cmps
push
xor
fsubr
popa
mov
cmc
sub
sbb
clc
rcr
cmps
outs
dec
push
lds
lods
mov
popf
adc
dec
dec
push
mov
or
in
adc
push
push
push
mov
jle
(bad)
xor
xor
fwait
add
sbb
scas
imul
mov
pushf
or
xor
shl
jp
cmc
jb
jge
jp
inc
mov
xor
pop
das
repz
sbb
popw
fstp
dec
cmps
fidiv
fs
stc
cmps
nop
cli
idiv
sti
jns
outs
sub
jae
dec
and
inc
sub
mov
inc
push
pop
sub
(bad)
jb
push
rcr
stc
pop
dec
jbe
mov
sbb
inc
dec
inc
inc
cmp
jb
lahf
adc
out
push
fsubr
and
adc
push
mov
jns
ja
ds
test
jno
(bad)
cli
xchg
fwait
pop
popa
and
jns
push
imul
mov
loopne
inc
mov
cmp
aam
das
push
push
call
nop
les
mov
sbb
mov
inc
cmps
lods
(bad)
ror
mov
addr16
dec
sahf
xor
adc
ret
xchg
pop
and
xor
cdq
mov
sub
leave
or
jnp
popa
mul
sub
and
psrlw
cmps
push
mov
mov
dec
push
imul
cmp
push
jnp
pop
fisub
imul
or
jbe
push
cwde
popf
or
call
out
jecxz
inc
pop
or
cli
xor
xor
jp
sbb
mov
cmps
out
add
push
mov
and
(bad)
push
and
(bad)
call
xchg
je
pop
aad
ja
sub
(bad)
arpl
daa
mov
retf
stc
add
rol
push
call
xor
outs
sub
adc
push
xchg
lods
retf
mov
add
mov
outs
popa
inc
add
mov
push
fsubr
or
jnp
shr
xchg
and
jns
imul
push
xchg
aas
jnp
push
or
push
call
jns
add
add
sar
not
in
mov
out
inc
in
jg
push
jle
mov
push
mov
pop
mov
xor
ret
sub
pop
inc
mov
mov
xor
and
cmp
xor
cmp
and
out
jge
xor
test
repnz
jns
cdq
mov
mov
adc
popf
movs
pop
mov
adc
cmps
rcl
sahf
(bad)
mov
ins
mov
lock
fs
sti
icebp
cmp
pop
cmp
add
jo
dec
mov
mov
cmc
movs
sub
add
loop
jg
ins
mov
mov
push
cs
pop
pop
mov
out
fsubr
mov
es
and
pop
xchg
fist
jp
sbb
add
outs
mov
push
adc
sub
fnstcw
xchg
(bad)
xchg
xchg
dec
cli
dec
sbb
sub
xchg
pop
ja
add
push
lds
inc
jno
ds
adc
add
xchg
and
fisub
xor
nop
std
mov
dec
add
mov
cwde
popf
mov
mov
dec
pop
xlat
cmps
(bad)
in
inc
adc
icebp
outs
movs
retf
je
sub
add
mov
mov
ret
loope
test
clc
jge
cdq
xchg
daa
addr16
int3
cs
and
sub
pop
mov
cmp
(bad)
out
mov
scas
inc
js
jl
lds
xchg
jle
adc
in
xor
sub
sti
xor
push
add
xor
cmp
push
(bad)
mov
scas
inc
aaa
jbe
dec
mov
std
imul
or
pop
pop
inc
xchg
js
ja
pop
jle
test
adc
sbb
lods
pushf
xchg
popa
and
or
fistp
adc
and
jl
mov
out
mov
jmp
and
sub
js
mov
stos
xchg
stos
movs
fcomp
ins
repz
cwde
ss
add
fdivr
adc
push
outs
pop
lahf
pop
loope
ja
dec
movs
retf
mov
add
js
sbb
jg
dec
adc
mov
dec
inc
jle
fsubr
jp
inc
xor
dec
mov
outs
retf
cmp
and
mov
stc
mov
pushf
sbb
pop
stc
sbb
cmp
mov
test
aam
je
inc
jp
pop
cs
pop
int
and
pop
push
mov
(bad)
repnz
test
mov
pusha
loope
jg
xor
loopne
hlt
xchg
mov
stos
mov
test
popf
out
or
pop
out
mov
mov
and
jnp
inc
mov
or
or
jae
pop
push
cmp
mov
push
test
hlt
pushf
push
pop
add
repnz
cdq
loopne
movs
push
cs
adc
aad
xor
rcr
and
xor
das
pop
ror
xor
lahf
int3
retf
retf
sub
scas
sub
jecxz
sbb
test
cmc
(bad)
in
cmp
jo
sbb
jecxz
cwde
enter
inc
mov
sub
or
mov
bnd
loop
xor
mov
jle
xor
push
jno
xor
fdivr
mov
mov
dec
xor
dec
sub
std
lea
xchg
hlt
cmps
call
jo
jge
enter
dec
mov
mov
sub
and
jae
push
xchg
jne
mov
mov
push
dec
lods
xor
lea
adc
mov
in
cs
pop
pop
sahf
leave
xchg
or
call
repnz
mov
sbb
sbb
or
popa
mov
cmc
xchg
mov
mov
or
mov
pop
xor
fwait
inc
arpl
xor
dec
pop
(bad)
and
pop
out
jno
lods
hlt
cld
xor
jl
mov
je
add
push
pop
sub
xchg
(bad)
push
xchg
sbb
mov
rcr
xchg
(bad)
cmp
sub
lds
cld
loop
or
xor
inc
stc
(bad)
frndint
and
sub
pop
and
dec
ud1
cmps
imul
aad
jno
jl
and
iret
xchg
mov
cli
jmp
test
fadd
mov
in
test
cmp
or
adc
jnp
std
movs
sub
inc
add
and
pop
imul
pop
popa
rcl
repnz
sbb
scas
lock
mul
(bad)
adc
xchg
imul
sub
imul
jo
xor
add
inc
test
jecxz
sahf
ins
sub
gs
hlt
out
and
xor
mov
sbb
sbb
jmp
add
push
out
jmp
and
pop
sbb
sbb
cli
ss
ds
pop
sub
loope
in
in
and
outs
in
ret
jmp
add
jmp
add
icebp
jns
cld
jge
cdq
lds
and
dec
imul
std
ins
cmp
jl
int3
outs
sbb
ins
xlat
movs
xchg
jnp
lods
inc
leave
out
(bad)
shl
jl
fidivr
xor
or
(bad)
loope
clc
mov
add
inc
inc
jecxz
push
fnsave
add
lahf
or
push
lds
nop
lods
mov
loope
mov
or
in
mov
or
(bad)
retf
or
int3
repz
xchg
add
shl
xlat
sbb
movs
sbb
pop
inc
imul
int
cmp
in
retf
pushf
ror
mov
test
cmc
sub
or
aaa
fwait
cmps
(bad)
xchg
pusha
mov
mov
aas
and
or
xor
or
pop
jno
pop
out
sub
popa
lahf
lock
inc
mov
mov
aam
mov
or
dec
xor
jmp
cmp
push
sub
add
add
clc
aam
stos
leave
adc
mov
scas
ins
pop
jl
retf
outs
popf
ins
out
add
mov
sub
push
out
cmps
sub
mov
and
loope
stos
aad
cmp
loopne
or
jp
mov
mov
xchg
mov
aaa
mov
cs
stos
rol
cmp
and
sub
cmp
out
jmp
or
mov
mov
push
aaa
xchg
addr16
lods
jbe
icebp
adc
test
pop
pushf
sahf
or
shr
hlt
add
push
test
mov
push
(bad)
lods
addr16
inc
sbb
call
xchg
jge
cmp
pop
dec
cdq
(bad)
mov
mov
jo
aam
pxor
(bad)
sti
pusha
call
popa
mov
mov
xchg
mov
mov
adc
inc
loope
std
jnp
xchg
mov
cmp
arpl
lods
(bad)
jmp
outs
pop
call
mov
mov
scas
xchg
fstp
iret
jge
aas
loopne
mov
cwde
inc
dec
add
in
dec
movs
inc
add
bound
jle
push
mov
adc
cmp
shl
xchg
push
retf
mov
xchg
adc
xchg
sbb
push
rol
and
and
xchg
not
in
dec
popa
mov
test
stos
in
mov
hlt
adc
mov
mov
sahf
mov
cdq
cmp
shl
jnp
inc
or
mov
and
add
call
dec
int
(bad)
mov
(bad)
push
or
and
add
out
push
addr16
cwde
fimul
or
dec
adc
xchg
nop
push
retf
imul
or
loope
ds
jge
mov
sub
or
sub
sbb
add
dec
sbb
in
stc
pop
jl
push
xor
xchg
imul
jl
sbb
xor
add
sbb
xchg
int
mov
adc
stos
stos
in
sbb
out
iret
enter
jg
mov
mov
push
outs
sbb
adc
test
mov
pop
daa
fiadd
mov
push
ss
(bad)
xor
push
test
jle
lahf
outs
mov
je
fadd
and
cmp
ins
out
dec
pop
push
sbb
out
popf
fistp
jmp
cmp
push
dec
fimul
dec
push
cld
lahf
dec
sti
data16
adc
pop
sti
lock
xchg
dec
push
icebp
cmps
pop
push
and
cmc
pminsw
sub
mov
and
popf
or
mov
retf
add
in
xor
pushf
mov
fld
imul
fmul
sub
cmp
sub
mov
jne
rcl
xlat
popf
pop
rcr
in
sub
mov
call
add
xor
xchg
imul
inc
syscall
call
mov
xchg
daa
and
inc
stc
and
ret
popf
inc
sub
push
jge
xchg
sub
push
jne
ss
jo
push
scas
mov
xchg
mov
mov
and
test
jge
gs
mov
mov
mov
fwait
enter
cmp
retf
(bad)
(bad)
in
add
pop
not
xchg
xor
mov
shl
mov
xchg
inc
scas
push
xchg
(bad)
in
or
inc
jo
xchg
cwde
cwde
push
sbb
mov
std
mov
pop
mov
fcmovb
outs
cmp
sub
cld
ja
jae
adc
xor
call
lock
pusha
(bad)
jmp
mov
push
test
out
lock
(bad)
push
fs
mov
dec
adc
pop
pop
sbb
clc
xchg
in
mov
mov
jno
mov
jae
xor
clc
mov
(bad)
cmp
test
(bad)
lods
inc
(bad)
stos
jmp
sahf
data16
add
mov
fcom
aaa
pop
cmp
push
pop
in
inc
adc
mov
push
popf
cwde
cmp
mov
push
out
mov
out
adc
xor
and
test
fcmove
xor
mov
jge
add
in
ficom
push
nop
aaa
not
cmp
or
or
xor
fistp
pusha
mov
dec
fucomi
xor
push
mov
sub
imul
hlt
cmps
mov
pop
cld
xor
sbb
mov
(bad)
(bad)
in
in
mov
mov
jmp
mov
add
xchg
pop
xlat
adc
adc
push
dec
cdq
cmp
pop
inc
dec
mov
test
cli
adc
fdivr
mov
dec
jge
and
popf
into
shl
xchg
push
cmp
ror
lods
into
hlt
lock
loop
ins
movs
jae
mov
inc
fnsave
pusha
fbld
xchg
mov
fucomp
xchg
xor
scas
les
xchg
test
and
cmp
mov
or
aam
adc
mov
push
mov
pop
pop
pop
cmp
mov
jbe
cli
(bad)
repz
pop
xchg
push
sbb
and
out
mov
sub
push
push
push
mov
sahf
(bad)
fbstp
pushf
sahf
pop
lods
mov
sbb
cld
sbb
in
jp
inc
add
inc
sbb
mov
ins
mov
call
cmp
dec
popf
rcr
dec
stos
mov
inc
push
add
xchg
(bad)
out
leave
mov
retf
xchg
inc
mov
adc
movups
sbb
pop
ins
push
das
mov
adc
add
or
scas
sub
lock
(bad)
mov
push
sub
scas
mov
add
lods
mov
mov
jns
pop
pop
or
push
pop
push
arpl
xchg
xchg
dec
add
dec
test
mov
pop
jbe
or
in
push
xchg
or
and
add
mov
inc
and
es
int
mov
mov
lods
cmp
cmp
sbb
jnp
lods
push
(bad)
adc
ret
bound
dec
fst
arpl
xchg
fwait
lea
shr
push
movs
popf
pop
ss
xchg
and
cld
add
push
jmp
daa
push
mov
outs
in
repnz
mul
fs
cwde
leave
and
mov
inc
sub
js
xchg
stos
mov
fdiv
ins
inc
imul
sahf
jecxz
loopne
ds
adc
(bad)
cmp
rcr
out
or
xor
xchg
xchg
jae
sub
cmp
shr
or
(bad)
in
xor
dec
scas
stos
xchg
mov
adc
pop
and
add
mov
pushf
lahf
xchg
loopne
fsubr
xchg
and
cli
mov
das
scas
jecxz
dec
mov
jne
and
mov
push
sbb
mov
movs
(bad)
sbb
fld
dec
movs
xchg
(bad)
sub
sub
push
inc
pop
mov
dec
fidiv
mov
jae
sbb
outs
add
les
mov
and
ins
jmp
pop
dec
repnz
aad
jae
mov
or
dec
pop
xor
fisttp
pop
adc
sbb
pop
jne
mov
inc
stos
mov
(bad)
sbb
ja
sbb
jnp
mov
bound
shl
rcr
mov
inc
aas
push
jno
retf
lea
and
sti
or
jle
test
icebp
adc
mov
or
adc
ret
push
dec
xor
inc
faddp
jb
ret
inc
cmps
fwait
lds
mov
push
jae
mov
mov
daa
xchg
and
jecxz
push
pop
fwait
cmc
sbb
rcl
and
mov
mov
mov
adc
jo
push
sbb
nop
xchg
lock
loope
shr
jmp
in
sbb
loope
xchg
pusha
xchg
xor
dec
cmps
push
adc
or
cmps
jne
int3
lfs
pushf
mov
dec
das
sub
sub
push
(bad)
mov
lods
sub
inc
das
push
push
dec
cdq
push
xchg
cmp
mov
sub
mov
mov
add
inc
daa
add
pop
call
push
(bad)
adc
sub
cld
pop
clc
int
call
pusha
jl
daa
push
test
mov
jne
push
jns
adc
movs
push
xchg
mov
enter
out
lods
mov
mov
(bad)
and
mov
jl
stos
push
imul
sar
mov
xchg
xor
stos
add
and
lock
cmps
in
inc
mov
xlat
pop
mov
mov
inc
mov
push
popa
cmp
iret
mov
psubusw
jp
jne
movs
xchg
mov
xor
mov
pop
aas
imul
and
mov
jo
clc
in
push
mov
jecxz
adc
push
sbb
mov
cmps
mov
xor
shr
cs
imul
push
pop
cmp
xor
sbb
(bad)
aas
enter
push
jl
std
dec
push
xlat
pop
ins
loope
rol
mov
mov
leave
xchg
cmp
push
nop
or
outs
aaa
(bad)
adc
sbb
sahf
fnstcw
add
js
je
mov
add
add
xchg
imul
lahf
sub
dec
cmp
pop
xchg
cmp
lods
cmp
neg
in
js
fs
inc
jns
and
dec
fld
(bad)
mov
rcl
and
xchg
and
and
in
sub
cwde
in
xchg
adc
loope
out
mov
push
xor
mov
fs
jg
sub
jns
cmc
call
pop
bsf
sub
stc
lods
cmc
dec
std
sub
mov
faddp
aam
cmps
out
xchg
dec
push
xchg
out
push
mov
cli
sahf
test
addr16
inc
loop
idiv
les
push
pop
jmp
jge
rcr
and
(bad)
and
stos
out
inc
sti
push
sub
adc
rcr
mov
into
inc
shl
pushf
mov
mov
aad
pushf
sub
inc
enter
aas
cmc
xor
pusha
in
out
mov
sti
test
(bad)
adc
and
fld
data16
(bad)
xchg
add
push
fidiv
add
int
sbb
xor
lock
cs
jbe
neg
push
jl
cmc
jle
inc
sbb
push
or
popa
jle
and
out
adc
sbb
dec
push
ins
push
inc
mov
inc
nop
in
dec
in
movs
arpl
mov
mov
stos
pop
add
mov
pop
rol
nop
fldcw
jl
adc
jnp
mov
adc
mov
cmp
add
dec
mov
les
dec
mov
adc
cwde
inc
sahf
inc
and
in
add
and
mov
mov
lock
test
sbb
and
adc
xor
xlat
adc
jecxz
mov
(bad)
and
mov
add
mov
dec
cmp
mov
mov
mov
ret
rol
stos
pop
in
xchg
xor
mov
cld
(bad)
and
fisub
jle
in
call
xor
call
outs
mov
jg
dec
adc
or
movs
test
cmp
stos
jmp
xor
idiv
fst
retf
imul
loopne
push
mov
or
jb
add
mov
stc
(bad)
push
sbb
pop
push
in
xchg
push
jno
xor
jge
(bad)
call
sti
mov
shl
aam
iret
or
adc
cmp
xchg
(bad)
popf
pop
test
sbb
xchg
sbb
sbb
mov
push
mov
das
shr
pop
js
in
daa
shl
dec
stos
int3
(bad)
adc
sbb
or
dec
push
retf
cmps
sbb
cmps
cli
(bad)
mov
mov
mov
xchg
aas
mov
mov
sub
cwde
jae
push
add
in
fucomip
and
icebp
and
dec
nop
or
loope
dec
inc
xchg
lods
popf
mov
mov
sub
enter
imul
ret
scas
mov
repnz
out
push
popf
mov
or
(bad)
call
mov
les
fwait
jo
and
enter
cmp
jnp
cmp
pop
adc
pop
jmp
dec
(bad)
mov
stc
cdq
add
loop
jmp
pop
sub
les
xor
fdiv
mov
or
int
cmp
test
cmp
push
xor
dec
pop
mov
cmp
sbb
cmp
mov
xor
pop
scas
mov
mov
out
repnz
sti
in
das
ins
popf
repnz
aad
int
scas
inc
mov
lods
sbb
cmc
adc
push
ffree
push
mov
loop
cdq
jne
mov
(bad)
out
xor
push
lods
scas
mov
mov
fwait
and
(bad)
xchg
ficom
sbb
cmp
sbb
sub
cmp
xor
div
les
lds
mov
cld
inc
mov
dec
loopne
mov
push
rcl
add
test
add
push
xor
out
call
test
(bad)
sahf
loope
push
adc
jbe
(bad)
jo
lods
mov
mov
cmc
cmp
mov
mov
sub
ret
xor
das
or
out
loop
jnp
cmp
add
mov
fnstsw
lods
dec
push
dec
xchg
push
sub
movs
shl
cwde
mov
and
adc
mov
jge
enter
dec
add
enter
rcl
fs
iret
imul
sti
dec
mov
hlt
xchg
test
xor
out
push
add
scas
xlat
shl
jp
(bad)
fsubr
rol
jb
push
call
pushf
xchg
sub
mov
xor
mov
call
call
inc
mov
arpl
pop
cmp
adc
xchg
mov
out
cld
mov
mov
xlat
dec
repz
push
in
adc
adc
aas
adc
(bad)
ret
pop
(bad)
mov
push
inc
pop
cmp
mov
int
repz
push
pop
add
xor
mov
mov
inc
aam
cmp
jge
mov
int
cli
xchg
jg
in
mov
adc
aad
cmp
cmc
jns
dec
dec
sbb
xor
into
pushf
or
mov
int3
lea
cmp
stc
sub
ins
ins
push
push
mov
(bad)
into
dec
adc
dec
setnp
aam
movs
add
cmps
ret
jmp
xchg
push
push
jmp
dec
sub
ja
adc
inc
addr16
jge
inc
fisub
dec
sbb
lds
xchg
out
enter
icebp
stos
and
and
add
rcr
add
mov
mov
dec
mov
mov
xchg
jo
push
jb
jns
in
imul
stos
add
fwait
mov
das
adc
push
inc
aas
fwait
cli
cmps
jmp
add
test
pop
xor
in
cmp
(bad)
push
mov
jecxz
loop
loop
outs
adc
je
sahf
xor
cmp
inc
cmps
retf
(bad)
int3
ins
mov
sbb
cmp
scas
nop
mov
dec
shl
aaa
sbb
(bad)
mov
imul
aad
add
int3
mov
adc
clc
add
push
pusha
cmp
push
rcl
cli
cmps
push
sbb
inc
xor
test
pushf
ss
push
dec
test
repz
int3
pop
pop
nop
push
cmp
outs
dec
pop
xor
neg
cmp
out
inc
aam
shl
cdq
mov
mov
inc
ins
inc
push
jmp
jmp
test
pop
xor
pop
inc
or
or
enter
pop
dec
aam
mov
das
push
mov
jecxz
dec
and
add
daa
dec
sub
push
adc
push
adc
inc
dec
repz
not
aaa
out
mov
pusha
fdivr
adc
dec
les
mov
sbb
imul
dec
push
jnp
imul
retf
push
stos
lahf
lock
addr16
mov
xchg
in
add
xchg
loop
push
into
sub
comiss
imul
pop
inc
lods
scas
pop
aaa
jecxz
pop
sar
mov
inc
inc
imul
inc
xchg
setno
ds
mov
sub
cld
in
test
es
jge
cmp
sub
cmc
cmp
pop
mov
add
jno
out
xchg
into
xchg
adc
mov
popf
push
lock
mov
mov
or
add
sbb
es
fist
lods
and
in
dec
arpl
in
movs
inc
(bad)
push
pop
add
adc
pop
jns
and
or
jle
test
loop
stc
data16
mov
mov
pop
int3
loope
cmps
or
inc
xlat
xor
cld
int3
js
repz
vmovaps
mov
dec
stos
mov
retf
inc
dec
outs
fidiv
int3
or
inc
scas
mov
xor
retf
pop
mov
lea
sub
rcr
cmp
xor
mov
out
cmp
mov
not
sub
jmp
ins
pop
fcomp
fisttp
imul
out
cmp
jg
mov
pop
sti
push
scas
mov
mov
and
mov
push
or
mov
shl
sbb
add
leave
daa
jle
pop
xor
pop
loop
mov
loop
ins
pop
out
enter
ss
mov
mov
iret
sbb
dec
jae
cmp
cwde
mov
pop
int3
push
cmp
cmp
mov
out
adc
call
daa
mov
pop
mov
int
push
ins
and
lock
mov
dec
je
jg
pop
test
retf
or
mov
sar
add
stc
cmp
push
sub
popa
mov
cmp
push
out
xchg
lods
xor
push
xlat
inc
mov
jmp
push
jge
imul
lods
pop
jge
dec
in
ss
sbb
mov
retf
jle
xor
icebp
rcr
mov
sub
and
push
sub
ss
imul
push
sysexit
jmp
jge
repz
lahf
jne
(bad)
into
pop
and
call
in
aaa
cmps
out
in
test
mov
ds
mov
xor
cmps
push
jnp
stos
rcl
add
push
mov
sar
idiv
pop
or
test
lods
xchg
and
ror
outs
hlt
scas
jg
clc
push
push
cs
movs
(bad)
out
(bad)
cdq
and
sbb
popa
clc
sbb
mov
pop
adc
cmp
fisttp
push
pop
mov
test
pop
ror
add
jbe
call
aam
fnstsw
imul
sti
or
mov
hlt
ins
sub
lea
cmp
int
mov
ret
push
jmp
mov
imul
scas
mov
scas
inc
dec
gs
ror
adc
shr
cmp
pop
adc
cs
fisub
or
xchg
aas
adc
lods
push
shl
fld
jmp
push
cdq
xchg
fld
and
int3
pushf
jmp
cmp
loope
fldcw
mov
pop
add
gs
sti
adc
repz
and
dec
cmp
lds
sbb
lock
aad
sub
add
add
popa
fwait
sti
fisub
iret
or
scas
mov
jle
ds
loop
jno
add
data16
lods
and
leave
sub
mov
xor
xchg
and
adc
icebp
xlat
sbb
inc
les
cs
mov
pop
leave
sbb
mov
jp
jnp
lods
iret
cmp
xchg
loopne
or
out
loop
mov
loop
dec
es
popa
into
mov
ss
xchg
out
(bad)
js
scas
sub
stc
jg
pop
inc
les
xchg
ins
sub
and
inc
aad
pop
clc
popa
lahf
inc
inc
jge
jno
repz
sbb
mov
pop
das
jp
repz
or
jl
mov
cmp
ins
aas
(bad)
ror
xor
aas
jb
out
neg
mov
fisubr
sub
int
add
cmps
lahf
cmp
(bad)
cwde
inc
inc
cwde
das
movs
idiv
mov
test
sub
dec
xor
in
jb
js
mov
idiv
jmp
jne
shr
daa
test
ds
popa
shl
pop
pop
stos
mov
ins
mov
inc
dec
(bad)
clc
cwde
add
(bad)
call
jo
call
jle
push
sbb
mov
ds
sbb
mov
pop
jns
ficomp
hlt
jmp
mov
sub
stc
mov
loopne
call
and
retf
jecxz
fist
call
push
mov
inc
sub
jg
aas
cmc
gs
daa
out
dec
into
mov
pop
cmp
cmp
enter
(bad)
stos
xor
imul
cmps
xor
sub
push
mov
imul
fadd
fs
dec
add
jl
dec
iret
aaa
add
xor
adc
out
mov
(bad)
fcom
ret
int
fprem
xchg
retf
popf
xor
mov
shl
(bad)
push
xlat
jl
adc
ret
dec
adc
mov
dec
dec
ds
xchg
and
xor
ret
scas
and
sub
cmc
mov
mov
inc
pop
inc
xchg
sbb
fimul
lods
rcl
xchg
push
aam
push
jecxz
arpl
and
sbb
test
jno
adc
das
adc
retf
xchg
cmps
mov
out
imul
shl
lds
xor
mov
(bad)
adc
js
icebp
xor
(bad)
jnp
inc
mov
leave
cmps
push
inc
test
push
arpl
pop
push
shl
sub
push
adc
pop
pop
inc
add
repnz
mov
ins
out
or
inc
bound
mul
lods
cmps
inc
lss
inc
outs
mov
pop
xor
mov
jle
in
aaa
xchg
pushf
sub
int
clc
mov
sub
in
(bad)
in
cwde
mov
cmc
sbb
lods
mov
and
mov
mov
mov
nop
sbb
pop
ficomp
and
or
leave
add
dec
sbb
dec
call
ror
mov
inc
cmp
inc
cmps
fisubr
mov
lods
jne
mov
js
or
dec
add
jecxz
repnz
aam
not
or
xchg
mov
fsub
jp
pop
or
dec
dec
xor
shl
mov
mov
xchg
pop
jecxz
jg
in
inc
fnstsw
aam
stc
ins
push
add
xor
dec
je
push
sti
mov
imul
jno
cmp
dec
out
xchg
push
das
mov
fnstsw
pop
sub
push
imul
jne
push
jle
(bad)
sbb
loop
rcl
pop
pop
add
popf
in
cli
cli
bound
jmp
out
outs
push
add
xchg
fisubr
es
retf
loope
push
adc
sub
movs
icebp
cmp
cwde
inc
sbb
aaa
or
sub
jle
ds
dec
xchg
pusha
dec
lds
jae
aas
jbe
jmp
xor
mov
ret
out
aaa
fwait
dec
test
pop
ds
nop
ror
add
js
packssdw
dec
test
pop
xor
inc
push
arpl
mov
inc
ins
lods
(bad)
ror
or
pushf
jnp
lea
stc
pop
dec
out
mov
lods
jne
mov
aam
(bad)
cmp
jns
out
imul
fisub
loopne
call
add
add
repz
lock
daa
loope
mov
jmp
dec
cmp
leave
push
xchg
sar
pop
pop
ror
sbb
daa
nop
dec
rol
mov
ins
cmp
mov
into
dec
mov
outs
dec
movs
in
sbb
mov
pop
xor
xor
sbb
aaa
mov
pop
mov
sbb
inc
sbb
fs
sbb
loop
hlt
sub
jmp
xor
jno
not
adc
jmp
jns
xor
cmps
je
cld
fild
cmps
inc
inc
xor
scas
fadd
fisub
cwde
ins
push
shl
pop
mov
mov
xchg
jns
enter
rcl
sub
rcl
ss
dec
jnp
clc
sti
cmps
mov
xor
xor
movs
jae
lods
xor
inc
lock
adc
and
xor
jl
stos
dec
inc
jmp
cmp
mov
xchg
jns
ret
mov
push
inc
fwait
outs
es
cmp
call
fs
push
pop
es
push
push
gs
and
push
js
xchg
leave
pop
pushf
xor
push
outs
jmp
mov
call
out
add
cdq
xchg
test
fs
imul
and
mov
mov
pop
or
adc
dec
clc
bound
dec
xor
or
fs
div
ret
adc
cwde
and
inc
(bad)
cmp
fnsave
xlat
js
xor
fisttp
cwde
dec
xor
ins
imul
jp
inc
popa
mov
sbb
or
mov
hlt
fld
in
jle
mov
imul
add
push
add
aad
mov
(bad)
and
dec
aam
outs
jae
icebp
int3
mov
sbb
pop
icebp
xchg
add
push
adc
sbb
idiv
add
dec
aas
scas
push
addr16
mov
mov
push
shl
pop
stc
movs
or
push
lds
jbe
sbb
loope
add
adc
lods
pop
mov
aas
aaa
cmp
sbb
out
sbb
int
cli
jmp
mov
mov
pop
(bad)
imul
or
repnz
sub
xor
fdivr
cmp
les
lods
pop
dec
and
mov
das
gs
push
rol
(bad)
fnstsw
mov
xchg
sti
mov
jb
fimul
cmp
push
out
add
aas
pusha
sbb
es
int3
pop
pop
iret
out
or
xchg
push
xor
mov
mov
pop
cmps
nop
cmps
pop
jmp
mov
pop
movs
rcl
call
fnstsw
mov
imul
das
jmp
out
pop
fild
dec
gs
and
(bad)
adc
jbe
cmps
inc
or
mov
and
(bad)
pop
dec
or
xlat
push
and
push
adc
(bad)
mov
add
xchg
or
pop
outs
xchg
ret
cmp
in
sub
mov
test
out
cmp
mov
pop
or
cs
std
mov
lds
mov
cdq
cs
and
push
(bad)
jmp
dec
adc
xchg
out
mov
or
pop
sbb
scas
fisttp
and
fidivr
cmp
sbb
pop
sbb
push
loope
shr
jns
int3
pop
pushf
jns
gs
and
xor
or
or
mov
pop
mov
sbb
jle
xchg
jo
fnstsw
jne
xchg
xchg
test
stc
cmp
test
iret
sub
adc
add
in
jbe
xor
pop
jno
dec
scas
mov
jecxz
sbb
xchg
lahf
pusha
dec
mov
adc
into
ins
cwde
adc
jle
adc
jb
cli
int
(bad)
cmc
jbe
or
fs
mov
repz
clc
je
or
cdq
jns
ret
xchg
bound
dec
ss
sbb
mov
xchg
leave
and
gs
jbe
test
adc
or
push
cmps
lock
loope
add
out
loopne
stos
sub
push
inc
(bad)
push
adc
arpl
or
shl
inc
or
pop
outs
inc
dec
push
add
and
test
loopne
cmp
ss
bound
pop
add
pop
mov
in
mov
add
mov
fld
dec
mov
js
movs
gs
cwde
xchg
pop
mov
scas
adc
jmp
fimul
(bad)
adc
in
lds
inc
fsub
sbb
fnstsw
lods
xor
mov
shr
cld
pushf
fisttp
loopne
xchg
popa
idiv
inc
aam
std
dec
and
stos
adc
mov
loope
jno
push
lock
pop
into
pop
jae
xor
(bad)
jmp
pop
out
out
loopne
push
mov
aad
xor
mov
xor
xchg
shl
shl
mov
and
mov
aad
mov
test
mov
je
je
loop
fnstsw
inc
shr
rcr
mov
(bad)
jl
je
jecxz
inc
adc
cwde
jecxz
and
mov
sub
inc
das
mov
pop
int3
repz
sub
xchg
add
dec
inc
jge
pusha
test
pop
out
dec
xor
pop
jmp
or
xchg
leave
mov
ds
je
sub
xor
in
ins
sub
or
jle
mov
mov
jmp
jmp
cmp
fldcw
xor
nop
scas
xor
int3
xchg
inc
push
fcomp
out
sbb
aaa
fs
xchg
push
(bad)
ins
aaa
jmp
leave
pop
clc
out
fdiv
jl
dec
rcl
mov
mov
test
xor
out
push
dec
and
retf
lea
and
(bad)
push
xor
sub
adc
adc
xor
sbb
in
inc
repz
in
ror
nop
mov
ror
mov
addr16
aas
inc
mov
outs
or
or
mov
add
scas
fldcw
loope
inc
pop
push
dec
cmp
sar
mov
push
aam
cmp
cmps
std
loop
cmp
fcmovb
dec
mov
stos
sbb
mov
adc
clc
inc
hlt
loopne
in
mov
cld
dec
dec
add
test
loope
jecxz
or
out
cs
inc
rol
cli
mov
sti
loope
test
nop
push
sbb
xchg
xor
out
push
not
push
sub
(bad)
arpl
adc
outs
jecxz
rcr
call
sbb
fstp
jl
mov
sub
mov
push
sbb
icebp
das
test
lds
movs
mov
or
sub
icebp
sub
cmps
int3
jne
out
(bad)
mov
jne
add
dec
je
mov
aaa
cli
sub
ds
push
add
cmp
(bad)
rol
cs
xchg
dec
mov
fcmovnbe
sti
lock
movs
dec
dec
jae
push
aaa
sbb
sub
loop
xchg
std
and
aas
call
sti
popf
add
inc
in
jmp
mov
lds
inc
test
and
ja
mov
xor
sbb
loop
out
arpl
add
mov
sub
mov
adc
daa
das
xchg
dec
cld
adc
add
push
fisttp
add
les
add
(bad)
test
adc
pop
jmp
lea
push
or
cmp
and
xchg
mov
xor
sub
fbstp
leave
mov
mov
or
sar
and
jp
push
jnp
loopne
adc
call
or
daa
aas
pop
xchg
jb
sbb
xor
inc
pop
addr16
es
test
or
sti
lahf
adc
movs
add
jns
pop
mov
xchg
sti
(bad)
jnp
leave
push
and
inc
cs
push
add
(bad)
mov
cdq
jnp
rcl
test
jmp
cmp
push
mov
(bad)
mov
ret
push
xor
push
clc
mov
sbb
(bad)
xchg
xor
cli
ror
into
fnstenv
dec
and
xor
add
push
imul
push
daa
and
(bad)
fsubr
or
push
shl
pop
sub
stos
pop
adc
imul
arpl
test
lds
sub
aad
sbb
fiadd
or
push
inc
and
stos
mov
pushf
dec
std
or
fldenv
outs
movs
out
mov
mov
add
mov
adc
outs
fdivp
pop
adc
not
xchg
adc
jb
std
adc
rol
aam
fs
adc
inc
and
mov
mov
leave
or
dec
loopne
test
bound
xchg
popa
int
mov
inc
mov
lea
pop
rol
xor
and
sbb
pop
xor
cmc
mov
loope
mov
aas
cmp
lahf
pusha
outs
ins
xchg
cmp
dec
sbb
mov
mov
xchg
or
outs
push
movlps
aas
sbb
dec
ins
mov
sub
xchg
add
add
pop
push
daa
adc
jp
sub
rol
pop
inc
fdiv
add
sub
ds
rol
(bad)
lods
fsubr
test
push
adc
lahf
push
out
movs
sub
push
dec
cli
pop
sub
xor
aam
das
out
and
xor
scas
test
js
movs
push
fisubr
pop
out
repz
add
push
and
pushf
cmp
jmp
int
retw
or
xchg
out
out
sbb
xor
dec
sub
cmp
into
sbb
cmp
and
ficom
js
movs
sbb
ins
fwait
std
test
adc
pop
pop
mov
push
popf
shr
cs
out
shr
dec
into
outs
push
mov
movs
adc
test
cmp
jae
movs
push
jge
outs
mov
dec
and
dec
mov
fdivr
and
xor
push
imul
gs
icebp
jg
push
bound
(bad)
retf
mov
xchg
stc
add
(bad)
jmp
enter
adc
out
cmp
pop
mov
add
(bad)
jle
cmp
xchg
sbb
jl
fisttp
lock
lea
push
repz
cmps
out
test
xchg
and
mov
test
push
mov
loope
iret
sti
mov
add
daa
or
mov
outs
mov
xchg
sub
mov
sub
pop
pop
xchg
frstor
push
rol
std
or
mov
data16
and
sbb
adc
mov
cmp
idiv
mov
xchg
mov
out
pushf
mov
jnp
xor
jl
fucomi
popf
fadd
call
or
sub
pop
jg
and
gs
sbb
push
sbb
mov
xor
ret
sub
sub
xchg
add
jg
retf
scas
xchg
jno
or
mov
push
push
jg
mov
add
popa
xor
and
inc
sbb
movs
pushf
add
ret
mov
jnp
lock
repz
les
sbb
or
(bad)
aam
jge
push
fimul
test
ds
std
das
and
inc
dec
jae
adc
mov
push
ds
loopne
xor
pop
test
shr
popf
mov
sub
mov
inc
fild
sub
xchg
call
call
pop
mov
xchg
ins
fs
pop
mov
lds
add
repnz
mov
cmp
(bad)
cmp
lds
dec
sbb
xor
ret
ret
je
jecxz
(bad)
std
out
mov
ds
cmp
jl
jns
mov
les
jmp
pop
xor
cmps
out
pop
ins
outs
and
xchg
idiv
jle
dec
cdq
cmp
xchg
jp
mov
rcl
xchg
addr16
pop
int
mov
xchg
mov
lock
xchg
(bad)
das
inc
call
add
outs
xchg
adc
scas
shr
int3
inc
movs
test
imul
call
sbb
int
adc
lahf
scas
xchg
jge
sub
or
xor
jns
rcl
pop
push
or
mov
movs
mov
sbb
xor
es
lahf
or
iret
loopne
in
and
aad
mov
test
shr
cli
ja
jecxz
push
(bad)
mov
ret
cmp
gs
mov
dec
lods
dec
repnz
dec
aam
je
hlt
pop
paddq
fisub
addr16
scas
jo
stc
xchg
div
xor
mov
out
dec
mov
or
in
(bad)
arpl
ds
scas
out
cmp
fisub
loope
movs
adc
in
fucomip
ja
arpl
int3
vmwrite
adc
fstp
and
daa
stc
pusha
scas
jp
arpl
cmp
add
inc
add
adc
mov
ret
and
out
dec
jp
push
aad
mov
aam
aad
(bad)
in
fs
(bad)
fimul
adc
mov
cdq
push
cmps
fwait
retf
mov
mul
mov
pop
dec
dec
xchg
inc
clc
mov
loop
jb
sub
test
bound
iret
mov
or
xchg
imul
cld
sub
xor
ret
(bad)
xor
addr16
xor
jecxz
nop
or
sbb
cmp
jb
cli
div
add
jecxz
sbb
cmp
pop
shl
lds
xor
sub
test
std
or
sub
aam
scas
loop
repnz
dec
out
icebp
ret
jecxz
stos
pop
ja
jbe
dec
in
gs
push
pop
jmp
es
test
inc
pop
rcl
mov
(bad)
loope
call
aaa
into
call
aaa
retf
xchg
push
xlat
mov
adc
add
out
inc
jmp
mov
test
out
push
or
cwde
fyl2x
sbb
ja
pushf
cwde
jno
xchg
jns
retf
aam
ins
mov
sbb
jmp
or
arpl
push
adc
xor
aam
jg
out
sbb
sub
stc
addr16
jmp
popa
sub
mov
cmp
xchg
adc
mov
arpl
lods
pop
push
and
jae
cdq
cdq
dec
stc
jmp
xor
sub
jb
ja
lods
xchg
xchg
push
aad
dec
loope
jnp
ss
dec
push
dec
add
xor
cs
pop
in
dec
cmp
inc
ja
ret
jl
and
call
jne
push
jns
ret
pusha
jge
inc
test
xchg
and
add
mov
jmp
sti
sbb
popa
rcl
dec
out
or
in
mov
mov
jmp
stos
mov
int
xor
cmp
xchg
xchg
js
sahf
jmp
std
cmp
repz
retf
or
jecxz
outs
dec
cs
dec
pusha
movhps
jb
mov
mov
repz
xchg
sub
test
jecxz
xor
fwait
push
xchg
movs
popa
lea
nop
adc
sahf
inc
aad
xor
xchg
xor
fisttp
adc
mov
jmp
cdq
mov
fcmovu
ret
scas
mov
mov
xchg
xor
cmp
jmp
inc
(bad)
cmp
add
mov
test
rcl
retf
repnz
xchg
in
jo
jmp
xchg
fcmovb
mov
call
mov
leave
(bad)
and
sti
pop
sub
sbb
jmp
pop
jo
imul
push
add
call
out
scas
fnsave
inc
nop
sahf
sub
rcl
cmp
jmp
jge
repz
pop
add
int
fstp
or
mov
shr
inc
and
push
(bad)
rol
sbb
gs
adc
ss
(bad)
cmp
loop
(bad)
mov
(bad)
imul
test
dec
dec
mov
repz
push
hlt
mov
sub
mov
je
inc
mov
or
pop
add
repz
scas
aam
pop
stc
icebp
cmps
jg
test
jmp
imul
jecxz
lock
imul
and
sub
and
ins
rcr
xchg
into
sbb
sub
pop
push
das
cmp
xor
shr
mov
xor
dec
sub
mov
cld
or
mov
clc
dec
outs
repnz
xor
cmp
adc
cmps
sbb
bound
mov
and
adc
or
sbb
nop
fdiv
(bad)
idiv
sbb
add
movs
mov
mov
cmc
sbb
xchg
fwait
cmps
dec
push
or
mov
in
in
aas
dec
mov
and
inc
aaa
fnsave
or
cmps
sti
xchg
mov
push
sub
adc
icebp
push
arpl
jmp
add
pop
xchg
aas
dec
es
mov
add
xchg
mov
xchg
arpl
pop
aad
dec
out
mov
jmp
repz
das
xchg
jns
and
xchg
inc
adc
fidiv
jmp
out
cli
push
inc
jle
dec
mov
fadd
cmps
cmc
add
mov
outs
mov
jg
adc
jmp
mov
jns
into
in
aad
xchg
inc
movs
xor
sub
adc
jnp
adc
bt
into
adc
sub
jge
pop
dec
das
xchg
push
adc
sbb
jo
loop
and
repz
aas
imul
out
xchg
pop
sub
inc
(bad)
adc
and
mov
sub
imul
push
jg
das
bound
das
pop
xchg
out
sbb
movs
jb
xor
sbb
xor
pop
xchg
jmp
push
mov
and
pop
arpl
xchg
jp
or
or
push
push
mov
aaa
sbb
jne
xor
int3
scas
pop
sti
test
(bad)
out
or
dec
sub
cmp
push
adc
push
in
pop
test
aad
loop
imul
test
in
adc
fmul
mov
mov
fcomp
fwait
clc
scas
aas
popa
fisttp
lock
retf
pop
fist
bound
dec
cld
repz
mov
adc
xor
ss
les
arpl
mov
mov
dec
repnz
scas
and
mov
pop
in
push
mov
inc
cmp
dec
cwde
ja
cmp
lea
bound
rcl
ret
cs
xchg
mov
call
pop
repz
pop
pop
and
sbb
xchg
add
mov
xchg
sbb
test
xor
std
sub
fidivr
push
scas
ins
or
mov
pop
std
jmp
mov
lods
mov
sar
lods
mov
push
pop
fistp
mov
icebp
fnstenv
pop
add
ror
mov
xchg
lahf
xchg
dec
jle
mov
lock
dec
add
jp
jmp
mov
stc
imul
mov
out
add
add
or
push
cli
cmp
mov
jmp
add
js
jb
clc
push
div
jb
xchg
add
in
sbb
cli
(bad)
jmp
sbb
inc
lock
cwde
xchg
xchg
mov
and
in
mov
retf
loope
pop
xchg
jmp
cmp
or
test
pop
push
mov
mov
push
das
mov
pop
fiadd
daa
adc
int
mov
jecxz
ja
and
daa
xor
stos
pop
rol
std
outs
cmp
fisttp
les
sbb
adc
mov
mov
xchg
jb
pop
or
scas
inc
scas
push
imul
out
jmp
mov
add
jae
in
xor
push
inc
in
push
jae
pop
std
inc
test
add
dec
out
dec
jge
scas
jo
and
cmp
mov
loope
movs
adc
inc
jne
test
push
retf
test
add
cmps
out
out
push
cmp
fnstsw
fmul
sar
cmp
push
xor
js
dec
lods
and
and
dec
mov
call
in
push
mov
or
adc
pop
int3
push
jae
jge
or
stos
js
mov
push
outs
imul
stos
mov
sbb
ds
fdiv
popf
ss
cmp
mov
cdq
(bad)
pop
outs
cmp
clc
lods
test
in
mov
repz
mov
sub
(bad)
or
es
sti
or
inc
shl
call
and
aad
mov
fadd
push
sbb
clc
and
xor
in
(bad)
xchg
adc
ja
out
xor
sbb
pop
dec
xchg
push
(bad)
stos
dec
cmps
loopne
and
sub
adc
std
(bad)
lods
fist
movs
and
adc
and
mov
pop
es
popa
xor
dec
test
push
xor
mov
or
ins
(bad)
aad
pop
push
jbe
mov
shl
sbb
adc
push
sbb
inc
and
paddusw
push
or
retf
(bad)
jmp
push
mov
cmp
jns
sub
cmp
or
inc
mov
cdq
je
pop
jne
pushf
pop
dec
add
shl
int
inc
fnstenv
xchg
das
das
or
inc
hlt
call
mov
shl
ret
or
leave
xor
xchg
daa
pop
cdq
cmc
cmp
fsub
xor
and
dec
lock
mov
outs
clc
mov
mov
add
(bad)
push
lods
jge
push
cwde
mov
ds
cli
fs
sbb
add
push
std
pusha
sti
neg
push
mov
xor
imul
push
jbe
mov
ret
scas
pop
fst
sub
jge
sub
cmp
or
pop
sub
sar
fs
dec
stc
pusha
jl
inc
mov
bnd
mov
add
(bad)
and
push
mov
sbb
in
and
push
push
cld
test
out
mov
xlat
or
sub
sub
ins
fcomp
jne
xchg
popf
inc
mov
mov
sbb
xchg
push
mov
jp
cmp
ja
in
mov
mov
(bad)
sbb
les
xor
ds
loop
push
adc
xor
lock
test
dec
jno
mov
and
mov
push
sub
std
mov
dec
mov
popf
mov
adc
jne
std
mov
inc
loope
stc
jne
mov
lds
je
test
imul
xchg
mov
and
sbb
sub
aaa
mov
outs
jmp
and
out
out
and
inc
test
call
or
sub
(bad)
scas
mov
jecxz
ror
or
and
mov
rcr
mov
dec
mov
mov
jne
call
mov
stos
jnp
out
aad
xchg
mov
sub
adc
std
ins
jmp
lahf
bound
cli
ins
xor
arpl
fnstcw
(bad)
daa
repnz
imul
cmp
out
dec
lds
sub
stos
sub
xchg
test
btc
sub
sahf
pop
dec
imul
in
cdq
xor
test
mov
inc
lahf
pusha
xchg
jmp
mov
ffreep
in
sbb
inc
xchg
cs
inc
push
mov
out
mov
rcl
(bad)
xchg
dec
sub
in
loopne
mov
sbb
in
jecxz
jmp
dec
jb
fist
pop
or
mov
mov
mov
xor
std
xor
dec
jmp
aaa
mov
push
dec
dec
push
jae
jne
fild
int3
enter
jnp
enter
cld
pop
fimul
out
mov
icebp
sti
jecxz
aaa
push
inc
test
adc
aaa
pop
in
(bad)
lahf
pop
mov
push
fnstenv
mov
and
(bad)
sub
or
sti
(bad)
scas
cmc
daa
xchg
fdivr
inc
dec
mov
inc
and
push
repz
jg
jne
jge
aam
in
in
lea
inc
sub
sar
mov
(bad)
repz
lahf
and
push
cmp
sub
cdq
pop
fcomp
and
in
add
adc
add
fiadd
or
sbb
xor
dec
popf
jns
call
sti
sti
sbb
push
into
cdq
and
pop
(bad)
iret
mov
test
ja
and
mov
data16
pop
out
dec
sbb
(bad)
out
js
add
sub
pop
mov
dec
std
xlat
sub
fs
nop
jl
mov
gs
out
enter
jbe
aam
adc
test
and
cmps
imul
arpl
jb
add
or
pop
mov
lock
sbb
sbb
nop
fsubr
fimul
mov
cli
sub
jmp
daa
outs
adc
cdq
inc
test
dec
ja
mov
sbb
xchg
mov
sbb
pop
cdq
mov
inc
bound
adc
test
outs
or
nop
jae
mov
int
xor
inc
xor
popf
popa
in
or
dec
in
mov
and
test
pop
jmp
inc
lock
mov
cmp
push
mov
cmp
adc
nop
adc
popf
cmp
outs
bound
(bad)
imul
mov
pop
outs
jge
pop
push
or
adc
inc
shr
jne
outs
and
pop
jne
ficomp
imul
push
xor
into
mov
dec
dec
or
add
cmps
loop
lods
push
test
jae
pop
push
inc
iret
ins
popf
cmps
nop
xor
in
push
fdivr
jns
mov
nop
jmp
arpl
(bad)
jg
ja
and
out
mov
fist
mov
(bad)
pusha
jg
(bad)
aam
rcr
sub
push
mov
push
or
arpl
adc
leave
xchg
ins
or
and
retf
pop
arpl
pop
cs
lahf
(bad)
mov
(bad)
mov
sub
pop
outs
ror
ror
outs
aam
sub
pop
shl
push
pop
sub
pop
pop
cli
aas
cmps
out
xchg
jle
mov
ffreep
jle
in
sub
(bad)
jge
ror
je
xchg
lahf
or
adc
sbb
imul
push
jae
out
icebp
pop
retf
out
(bad)
(bad)
xor
xchg
imul
push
aam
outs
or
dec
adc
pushf
je
mov
test
add
lods
push
lods
psubusw
retf
icebp
jle
xor
add
test
jae
mov
xchg
pop
jno
cmp
jne
fcmovnb
in
enter
pop
fsubr
ds
iret
jmp
cmps
shr
hlt
shr
mov
sbb
mov
lds
fadd
pop
imul
test
ds
scas
pushf
ins
into
and
and
sub
retf
dec
into
xchg
mov
mov
inc
imul
icebp
push
jl
xchg
mov
(bad)
jecxz
jmp
std
in
fwait
call
mov
mov
pop
pop
pop
mov
bound
jp
fsubr
ins
xchg
in
and
fild
cmp
test
rcr
sbb
stos
(bad)
mov
jne
rol
jl
xchg
mov
call
jge
push
dec
ins
ss
popa
int
dec
push
enter
add
iret
jbe
mov
cmps
scas
cmc
(bad)
mov
int3
sub
out
mov
fldenv
inc
into
sti
movs
ins
pushf
mov
retf
push
das
xchg
lock
repz
mov
imul
mov
dec
mov
test
jle
mov
shr
mov
pop
repnz
mov
aam
sbb
movs
or
jmp
xchg
pop
fcomp
pop
aas
sub
cs
add
es
pop
mov
cmc
xor
and
popf
je
xor
and
leave
dec
sub
ds
mov
(bad)
fdivr
xlat
jl
movs
mov
je
fld
xor
xchg
arpl
or
call
xor
popf
xchg
mov
cmp
arpl
mov
and
repz
aaa
adc
outs
mov
lods
int
jb
pushf
dec
pop
(bad)
mov
pop
inc
pop
int
mov
stos
mov
shl
js
and
dec
sub
push
int
out
lahf
not
add
jl
cmp
xchg
sahf
test
mov
in
sbb
ror
pop
aad
jle
adc
jbe
lea
mov
inc
sbb
push
neg
mov
ret
push
(bad)
xor
mov
lods
enter
aas
jb
ja
inc
fsub
xor
push
int
loope
push
xor
(bad)
pushf
cld
mov
rcr
sbb
sti
cmps
jae
scas
add
mov
rcl
sbb
lahf
adc
ja
inc
jb
sahf
and
(bad)
cmps
ins
dec
jmp
fwait
aad
js
fcomi
push
inc
mov
je
into
or
push
mov
and
inc
mul
fsubr
jae
xor
mov
mov
repz
mov
movq
sub
ficom
(bad)
xchg
dec
jmp
mov
xchg
fldenv
cld
push
or
rcr
es
xor
pop
std
pop
int3
sub
ins
sub
jg
or
in
adc
lahf
stos
push
pop
(bad)
imul
dec
xor
xor
js
(bad)
push
push
jb
stos
jmp
and
(bad)
sub
out
mov
into
push
jg
xchg
test
(bad)
mov
loope
mov
or
pop
pop
cmp
inc
add
fst
js
adc
jge
clc
sti
cwde
loope
xor
(bad)
xor
jp
div
xchg
sub
and
xchg
sbb
mov
aam
hlt
xor
aad
(bad)
fs
pop
inc
fidiv
jnp
jb
add
pop
and
retf
and
fld
mov
sbb
xchg
clc
and
inc
cld
shl
push
pop
dec
jge
xor
popa
lahf
hlt
mov
pusha
pop
stos
xchg
sti
mov
mov
ss
or
add
mov
mov
stos
aaa
cdq
cmp
push
ja
clc
imul
jno
fidivr
pushf
xchg
mov
call
pop
pop
push
cld
cmp
enter
adc
cmp
push
xor
in
ret
std
cld
push
in
pop
and
xchg
(bad)
int3
xor
icebp
jg
cmps
or
jns
int3
loop
fsub
pop
leave
shr
jae
retf
cwde
cmp
mov
xor
push
or
cmp
add
in
mov
cmp
fsub
rol
loop
jle
xchg
push
dec
sub
inc
cmps
sbb
add
retf
leave
movs
ss
pop
fdivr
inc
mov
mov
(bad)
sub
xor
lea
aad
and
les
mov
push
mov
sbb
cdq
push
popf
push
mov
xor
bound
out
das
mov
sub
mov
pusha
mov
mov
inc
mov
push
pop
lods
sub
cmps
sbb
mov
or
int
loop
inc
rcr
rcl
or
pusha
cmp
push
les
aaa
cmp
clc
sti
mov
inc
int
sub
cmp
rol
xchg
mov
xchg
jge
js
fnsave
sbb
push
dec
sub
fnstsw
adc
jo
mov
or
xor
scas
jp
shl
ret
nop
jp
xchg
imul
fld
dec
xchg
mov
lods
jmp
das
jecxz
cwde
lods
sub
add
repnz
test
loopne
cdq
cmps
das
xchg
xor
add
aas
add
inc
push
cld
jl
push
dec
outs
dec
cmc
pushf
dec
outs
imul
push
stc
mov
sbb
pushf
sub
mov
popf
xchg
jno
sub
ins
pop
lds
sub
mov
cdq
or
cdq
mov
(bad)
sub
xor
pminsw
(bad)
loop
adc
xchg
and
mov
nop
mov
iret
sub
repz
(bad)
push
leave
dec
retf
movs
clc
and
outs
mov
cli
mov
aad
(bad)
call
xchg
aaa
inc
inc
rcl
inc
mov
scas
mov
push
stc
(bad)
jmp
daa
cmps
push
loop
imul
xchg
add
inc
jo
push
pop
enter
sti
adc
lock
inc
es
mov
in
mov
inc
adc
movs
js
pop
push
push
inc
cwde
mov
mov
enter
and
and
add
sub
test
inc
lds
pop
js
jp
push
std
popf
jge
lds
dec
dec
sub
mov
dec
fldcw
push
in
or
sub
xchg
pop
push
mov
out
int
pop
inc
inc
(bad)
jg
cmp
push
push
xchg
add
mov
sahf
sub
push
fcmovne
push
mov
out
jge
aam
fs
out
mov
scas
and
push
adc
xchg
(bad)
imul
xlat
pop
loopne
push
into
mul
call
pusha
sbb
xchg
popf
sub
or
sub
and
xor
dec
in
add
lea
xchg
adc
sub
mov
push
cmps
sahf
(bad)
ja
mov
sti
pushf
xchg
push
(bad)
push
arpl
mov
repz
std
pop
add
jns
js
out
call
bnd
test
sbb
inc
retf
clc
aam
pop
pushf
and
inc
into
mov
add
sbb
mov
xor
mov
cmc
push
lods
in
rcr
(bad)
dec
imul
jmp
aam
je
adc
xchg
mov
movs
out
dec
inc
pop
jno
xchg
aam
jnp
adc
fild
ins
or
outs
mov
jns
loopne
(bad)
mov
fsub
in
pop
xchg
dec
dec
add
(bad)
pop
push
ja
jle
and
mov
into
in
bound
push
push
xchg
pop
dec
int3
addr16
iret
jne
mov
inc
fst
pop
cmp
xlat
dec
(bad)
sti
lock
mov
das
xor
fwait
mov
cmc
loop
sahf
loope
push
mov
bound
cdq
push
push
sub
mov
rcr
and
in
(bad)
xor
fcomp
outs
cmp
dec
(bad)
mov
int3
mov
pop
int3
rol
xor
out
(bad)
ror
pop
fstp
mov
jl
cmp
pop
loopne
inc
sub
aas
cdq
(bad)
loope
inc
push
push
mov
test
push
mov
bound
mov
cmp
sub
ret
std
inc
icebp
(bad)
pop
jmp
push
xor
mov
aaa
shl
in
sar
outs
adc
out
ret
dec
stos
dec
adc
push
xchg
je
hlt
push
push
call
bound
pusha
mov
into
enter
mov
iret
jg
sbb
stc
xchg
movs
rol
pushf
sub
test
mov
in
dec
jo
imul
push
jg
dec
lods
dec
add
jge
and
repnz
sbb
aas
ret
add
sub
jno
cmp
push
mov
shr
shl
inc
pop
jb
sub
jo
or
das
pop
pop
cmp
and
ret
gs
sub
xchg
aas
mov
loop
add
(bad)
jbe
fcom
lods
dec
inc
(bad)
xor
or
pop
fld
adc
mov
in
pushf
fstp
inc
mov
int3
jmp
push
pop
cmp
rcr
test
sbb
ret
ja
sub
iret
mov
out
bound
in
xchg
mov
retf
inc
xchg
sahf
jp
movs
sub
push
push
sti
xchg
or
xchg
cmc
fwait
jge
cwde
ins
cld
push
in
mov
lahf
(bad)
stc
cmp
push
push
sub
jb
jb
jo
les
and
mov
fs
xor
dec
jecxz
push
add
aas
add
out
ins
push
pop
cmp
dec
retf
push
pop
mov
push
sar
enter
popf
repz
ret
add
psubb
mov
adc
xchg
inc
jns
stos
sbb
aaa
lods
inc
lahf
movs
pop
imul
shl
mov
ret
aaa
pusha
test
repz
jmp
shl
jmp
xchg
push
fs
aad
jge
test
ds
inc
jmp
adc
fcmovb
fadd
adc
das
add
lods
aaa
lods
out
mov
inc
bnd
jmp
xor
stc
cmp
and
mov
mov
loopne
outs
ret
xsha1
cmps
dec
gs
ror
lds
cmps
scas
xor
push
mov
inc
pop
sbb
xor
in
ror
iret
hlt
fistp
out
movs
loop
ins
aas
aad
push
fmul
mov
xlat
stc
mov
mov
cmps
repz
mov
(bad)
mov
ret
lods
test
or
push
pop
add
fwait
loopne
add
adc
pop
rol
sbb
xchg
shl
lds
aad
push
retf
in
jl
shl
or
mov
popf
and
dec
fnstenv
loope
int3
and
mov
sbb
and
out
cs
sar
shl
cmp
or
in
inc
sub
push
dec
in
and
mov
popf
repnz
fsub
data16
inc
call
push
add
jecxz
aam
movs
jmp
push
inc
mov
push
pop
movs
xchg
ss
mul
pmulhuw
ret
mov
pusha
jecxz
hlt
xchg
aam
sbb
mov
call
es
mov
cmc
cmp
inc
cwde
cmp
cwde
ds
xchg
lock
test
bound
pop
sbb
fstp
inc
test
cld
and
xor
cs
mov
adc
(bad)
imul
(bad)
pushf
jl
inc
xchg
add
retf
hlt
ja
pushf
xor
arpl
popa
shl
fst
add
scas
loop
mov
gs
icebp
sti
ins
nop
call
inc
iret
nop
dec
mov
pop
cmc
and
sub
ds
daa
in
rcr
or
leave
inc
jnp
xlat
and
and
push
xchg
sub
idiv
cdq
inc
retf
pop
mov
inc
mov
adc
push
iret
out
(bad)
daa
and
ret
mov
mov
add
ret
iret
cmp
push
int
fwait
cwde
call
jmp
or
pop
(bad)
jmp
aad
iret
leave
xchg
les
aas
or
adc
mov
(bad)
mov
and
fdiv
jno
out
mov
and
test
call
mov
jmp
in
pusha
fcompp
retf
add
jbe
push
jbe
xchg
ret
aad
push
mov
pusha
leave
and
xor
xor
mov
jmp
fidivr
enter
sub
push
or
gs
and
push
add
mov
in
fmul
frstor
xchg
pop
ins
imul
pop
stc
loop
lds
test
push
sub
(bad)
xlat
jge
(bad)
mov
sub
jo
mov
inc
and
mov
call
imul
adc
mov
jno
in
js
psubd
cmps
mul
aas
nop
retf
sub
retf
add
jmp
xor
cmp
(bad)
(bad)
jle
adc
popa
jne
mov
and
dec
mov
xlat
hlt
or
out
or
jmp
mov
call
and
sahf
push
jns
sub
cs
cli
xchg
add
pop
cmp
mov
mov
pop
sub
or
test
adc
dec
(bad)
addr16
je
jle
mov
and
mov
xor
jg
xchg
mov
imul
mov
mov
and
fs
pop
in
inc
inc
scas
cs
cmc
clc
fs
nop
int3
gs
add
pop
inc
mov
cmps
inc
sub
adc
das
int
in
aad
push
je
test
ret
pop
(bad)
pop
lds
arpl
into
adc
add
or
jnp
not
sbb
(bad)
iret
shl
ret
push
cmp
leave
xchg
push
(bad)
cmp
in
and
mov
push
sub
xchg
dec
lea
dec
adc
call
pusha
nop
pusha
cdq
and
fimul
mov
jne
xchg
out
movs
popf
jbe
lahf
aas
sub
inc
call
out
scas
pop
jns
outs
jp
jge
enter
in
mov
stos
sub
mov
add
test
(bad)
or
hlt
lock
mov
xchg
or
ins
pop
mov
popa
push
icebp
and
mov
adc
cmc
outs
cs
loopne
add
and
jmp
push
pop
mov
in
inc
xor
movs
push
ficomp
mov
push
loop
add
stc
cmps
outs
cmp
dec
aam
xchg
ins
and
into
mov
scas
and
dec
(bad)
mov
jmp
pop
and
out
lods
or
cld
call
adc
inc
xor
cli
jo
ja
lods
dec
sbb
cmp
icebp
and
pop
cmp
cld
sbb
(bad)
adc
loop
inc
cwde
or
pop
adc
xor
iret
stc
adc
pushf
adc
mov
and
adc
add
int3
or
inc
xchg
mov
sub
mov
xchg
cmp
adc
pop
cmp
xor
mov
jmp
sbb
pop
or
call
outs
xchg
ss
xlat
cwde
je
fnstcw
sub
xor
aad
out
sbb
cwde
in
xchg
ret
xchg
jne
adc
mov
(bad)
fisub
fs
hlt
mov
and
mov
push
bound
xchg
sub
xor
int3
popa
movs
add
lahf
dec
aad
pop
fcmovnb
mov
jl
or
adc
gs
pop
test
rcl
cmp
test
imul
xchg
fsubp
adc
mul
push
xor
dec
int
fild
mov
lahf
jp
sub
mov
xchg
xor
dec
enter
scas
or
aas
ins
fimul
push
stos
push
mov
push
mov
dec
dec
outs
sub
pop
mov
mov
je
in
(bad)
pop
or
sub
test
cmp
outs
pop
sahf
mov
in
sti
test
jb
cmc
ja
sar
sub
in
dec
sti
jg
cdq
mov
adc
idiv
jecxz
test
pop
rcl
(bad)
arpl
aad
in
dec
rol
mov
push
pop
mov
enter
retf
xor
mov
add
fs
push
retf
call
add
mov
jnp
and
push
pop
int
cmps
outs
sbb
popa
mov
push
shl
jmp
mov
mov
clc
fadd
fld
loope
mov
(bad)
push
mov
stc
sub
xchg
jb
fbstp
pop
mov
jle
call
sub
stc
cmp
xchg
add
ss
mov
xchg
jmp
inc
not
jmp
lock
pop
mov
sbb
cwde
retf
cmc
fbstp
mov
jmp
call
enter
call
mov
popa
pop
les
pusha
movs
gs
xor
jo
stos
jb
scas
aad
psubsw
scas
sub
fwait
out
pop
and
push
in
loop
fcmovb
(bad)
rcr
popa
mov
iret
sbb
inc
aas
pop
cld
ss
in
push
xchg
push
enter
imul
xchg
inc
adc
xchg
add
std
(bad)
jl
mov
out
rcl
pop
pop
or
sahf
mov
(bad)
pop
mov
push
dec
push
mov
test
rsqrtps
adc
xor
sub
movs
loopne
jbe
cmp
push
mov
inc
(bad)
shr
mov
cld
das
jbe
(bad)
ficom
push
mov
mov
mov
pop
push
jp
lahf
xchg
enter
mov
mov
cmp
std
push
cmps
js
loope
ins
mov
ins
xor
mov
sbb
add
outs
hlt
dec
call
push
mov
push
mov
jae
xor
test
xor
fisub
sbb
ins
mov
sbb
test
push
and
sub
fild
adc
idiv
or
out
stc
rcr
rol
aam
pop
xor
loopne
sar
je
add
cwde
adc
mov
push
lds
xchg
stos
xor
pop
aaa
mov
std
mov
rcr
lds
adc
aam
ror
retf
cwde
jmp
cmps
addr16
mov
add
dec
adc
popf
(bad)
xchg
fistp
mov
std
bound
xchg
push
push
movs
and
int
sti
arpl
lahf
mov
stos
xor
and
inc
pusha
lods
ficom
mov
and
fdivr
adc
jge
pop
mov
test
in
(bad)
cmp
push
or
cmp
or
movs
jbe
aaa
xor
jmp
aad
add
xor
push
dec
xor
lahf
in
icebp
push
pop
push
lock
repz
mov
call
sbb
int3
lea
cs
or
sub
push
stc
les
ja
pop
push
aaa
push
add
jo
mov
sbb
xchg
xchg
(bad)
xchg
into
arpl
inc
cwde
fcmovnu
or
push
in
jo
xlat
cmp
dec
adc
stos
ins
mov
lahf
movs
inc
lock
jge
mov
icebp
xor
stc
sub
and
sbb
sti
loope
sub
es
xchg
lock
inc
sbb
retf
dec
dec
fisttp
(bad)
in
xchg
ja
add
addr16
xor
xchg
sub
lock
jb
js
add
fmul
push
ficom
sbb
mov
mov
mov
push
xor
pusha
push
repnz
xor
pop
sub
sbb
pusha
push
sub
test
repz
fisttp
mov
mov
std
es
(bad)
push
cs
xor
ret
jl
mov
sar
push
push
pop
dec
imul
push
loop
rol
sbb
push
lods
jb
dec
je
pop
ds
test
mov
xor
sub
or
call
add
sub
pop
ds
inc
mov
in
pushf
shl
loopne
inc
int3
movzx
add
in
pop
jl
adc
jae
push
cmp
inc
repz
daa
imul
dec
sbb
pop
pop
cmp
and
in
jp
push
dec
int
cs
cdq
mov
push
rcl
call
ins
sti
out
jmp
bound
jmp
not
mov
xchg
sbb
loop
sbb
and
loop
jbe
dec
lock
cmp
mov
call
pushf
ja
loope
div
add
and
pop
add
jb
mov
mov
les
je
(bad)
pop
js
cmp
lahf
cwde
cmps
jmp
pop
inc
sbb
das
idiv
jge
stos
xchg
test
or
mov
imul
repnz
fldenv
retf
push
mov
ja
popf
mov
lea
pushf
dec
out
pop
mov
mov
mov
cld
loop
adc
pusha
mov
pop
mov
imul
xchg
aad
out
mov
push
mov
push
das
data16
fstp
xlat
mov
and
js
sbb
rcr
icebp
clc
dec
sti
push
(bad)
fwait
sbb
or
mov
pop
outs
adc
dec
inc
cmp
out
lds
adc
push
test
loop
cmp
jne
mov
scas
mov
sbb
jns
xor
xor
jle
cli
mov
ja
sbb
arpl
movs
data16
dec
xor
outs
fwait
das
xor
test
ds
push
test
or
mov
sub
pop
dec
sbb
cdq
dec
daa
sbb
mov
jmp
jb
adc
lahf
jmp
ds
sub
scas
std
ja
ins
imul
inc
(bad)
icebp
pop
aas
add
out
fnstenv
mov
(bad)
push
push
aas
inc
or
data16
clc
xor
out
mov
cmovne
dec
in
js
pop
in
iret
mov
inc
xor
out
retf
lahf
aaa
sbb
out
jns
and
pusha
(bad)
push
mul
movs
mov
xlat
popf
loope
add
xor
mul
adc
sahf
stos
fstp
dec
jl
cmc
push
add
pop
xchg
push
cmps
xchg
lahf
or
jmp
div
inc
cs
xor
mov
add
mov
addr16
or
jmp
jb
xchg
sbb
mov
or
cs
and
and
push
sbb
or
xor
mov
adc
popa
ret
pop
mov
aad
pop
dec
lds
jl
sub
xor
push
sbb
add
jbe
xchg
sub
scas
into
(bad)
stc
mov
inc
push
push
xchg
jg
and
pop
pop
lds
cs
or
daa
out
sahf
inc
jae
lods
(bad)
ins
push
adc
mov
cmps
dec
sbb
sub
jecxz
div
push
sbb
or
cmps
fcmove
test
ret
xchg
inc
aad
retf
add
or
jae
shr
movs
jmp
mov
cmp
fnstcw
jmp
adc
sub
sti
fs
push
jno
xchg
pop
mov
repnz
sub
jle
sub
aam
icebp
icebp
in
and
hlt
xchg
xor
lahf
push
adc
lea
xchg
mov
jae
mov
loope
fdivr
pop
idiv
cmp
pusha
xlat
and
sbb
adc
pop
xchg
mov
inc
bound
es
dec
pusha
and
jne
shl
rol
cmp
push
shl
or
sbb
and
gs
inc
cs
clc
jmp
test
sub
xchg
fmulp
popf
cmp
mov
sub
mov
inc
or
cld
mov
jnp
pop
ja
lahf
add
js
mov
sub
add
jbe
sbb
iret
mov
fwait
xor
push
inc
mov
pop
test
inc
sub
jns
shl
xor
xchg
imul
adc
mov
stos
outs
(bad)
jmp
sbb
jbe
test
xor
ja
std
dec
pop
inc
add
xchg
inc
ret
inc
mov
xchg
loop
or
daa
ja
in
inc
paddsb
test
vpaddq
in
inc
nop
test
xchg
mov
push
mov
(bad)
aam
test
fst
aaa
aaa
xchg
mov
int
and
movs
inc
stc
mov
jmp
xchg
cmp
sbb
push
hlt
rcr
mov
daa
cli
push
bnd
push
mov
add
ins
sbb
cmp
cmp
scas
dec
fstp
movs
fisub
jns
dec
jo
lea
cdq
shl
cmp
inc
cwde
inc
xchg
cmp
add
not
cmp
jae
mov
mov
cmps
imul
retf
mov
ret
sbb
jle
pusha
enter
mov
int3
movs
push
push
fist
xchg
sahf
sti
pop
inc
push
jnp
inc
mov
lods
cmp
sub
add
xchg
stc
xor
push
pop
cmp
pop
pop
arpl
dec
mov
mov
shl
aas
aaa
out
ja
aas
adc
call
pop
test
imul
or
pop
arpl
cmps
test
in
dec
mov
jno
cmp
pop
dec
dec
in
retf
push
sub
jp
jp
lea
jo
sub
push
mov
mov
mov
popf
cwde
repz
cmps
add
pop
in
jno
mov
cli
jecxz
mov
adc
and
push
scas
call
aad
dec
enter
in
xor
pop
mov
aas
add
pop
mov
aad
shl
add
ds
jb
mov
mov
nop
inc
inc
ror
inc
mov
gs
push
ret
dec
(bad)
sub
add
imul
out
pop
loopne
sbb
ins
aad
out
push
xchg
or
inc
out
mov
sub
adc
inc
sbb
aaa
sbb
dec
or
cmp
mov
cmp
test
mov
sti
dec
add
and
loop
xchg
dec
stos
ret
xor
add
mov
or
daa
jg
loopne
jne
popa
inc
bound
push
scas
dec
mov
cdq
stos
push
pop
push
or
(bad)
jg
mov
cmp
pop
shl
or
ja
mul
sub
enter
test
jecxz
fs
mov
jne
imul
sbb
mov
fwait
push
cmps
out
adc
and
jno
push
or
in
jp
imul
adc
sub
add
(bad)
clc
enter
(bad)
icebp
(bad)
or
pop
loop
or
fs
push
lock
scas
push
dec
pop
mov
mov
fwait
rcr
sub
int3
push
mov
inc
add
jmp
and
push
outs
pop
ret
xor
outs
sbb
dec
xor
lahf
add
mov
mov
cli
ja
mov
adc
(bad)
movs
xchg
mov
mov
mov
sub
movs
and
and
and
pop
and
shl
jge
bound
(bad)
aas
es
jg
cli
lods
mov
cmp
shl
sub
and
loope
cmc
inc
lea
(bad)
inc
dec
pop
xchg
mov
lods
fs
push
cmc
or
mov
lock
adc
mov
mov
jecxz
(bad)
loop
xor
cli
cmp
cwde
movs
xor
xchg
mov
sub
jge
xchg
xchg
xor
xor
xchg
jnp
mov
xchg
sub
sub
push
pop
adc
ins
out
movs
jle
sub
inc
sub
out
in
les
sbb
pop
aam
ror
das
loop
or
test
xor
loope
imul
stos
daa
inc
xchg
test
int
fcomp
push
icebp
sar
pop
add
movs
loopne
in
daa
imul
pushf
xchg
dec
dec
test
mov
and
push
repnz
ret
adc
cmp
xchg
sbb
fld
in
or
push
and
fwait
xlat
popf
add
fwait
test
sub
pop
shl
out
pusha
xchg
inc
add
cmp
aaa
(bad)
hlt
lahf
nop
ins
sub
into
imul
arpl
int3
inc
out
in
out
jge
test
pop
mov
sbb
adc
ja
fcomp
inc
mov
cmp
pop
clc
cmpxchg
inc
sub
inc
das
shl
lods
or
push
mov
xchg
pop
xor
sbb
push
mov
lods
in
cmps
std
(bad)
add
cmp
sahf
es
hlt
bound
sbb
or
lea
in
cmp
fild
mov
adc
les
sub
push
daa
ror
push
jb
jge
ficom
jns
cmps
pop
dec
and
dec
add
mov
div
out
dec
push
adc
cmp
dec
jmp
adc
std
adc
pushf
push
int
rcl
or
jno
popf
mov
lea
sahf
into
cli
pushf
and
push
cmp
ffree
add
mov
rcr
mov
mov
fdivr
jb
jp
rcr
sub
aad
jp
push
adc
jmp
fwait
xor
stc
lods
pop
and
stc
lock
stos
enter
data16
shl
jl
lock
xor
add
(bad)
into
push
inc
xchg
rcr
call
into
pop
out
push
xchg
cmps
mov
(bad)
or
outs
out
sti
adc
cld
or
pusha
(bad)
arpl
es
xor
add
xchg
lock
nop
lods
cmp
repz
cmps
ret
jns
arpl
dec
add
ss
push
xchg
mov
push
je
js
pop
mov
dec
add
bnd
sbb
mov
and
push
xchg
xchg
sbb
lods
inc
imul
out
mov
les
xchg
xor
sub
cmp
cwde
pop
les
test
scas
sbb
jae
mov
fwait
mov
retf
ret
ret
jb
or
ror
push
mov
mov
bound
inc
push
repnz
pop
mov
sahf
push
lods
stos
xchg
aam
retf
pop
test
jnp
mov
(bad)
fs
outs
and
cdq
aaa
in
inc
ins
test
cdq
xchg
or
mov
jg
std
or
fild
pop
arpl
inc
push
sbb
sbb
mov
daa
rcl
shl
mov
cmp
in
fild
fs
in
sub
xor
jecxz
xor
or
add
pusha
pop
sbb
ja
cmc
into
add
pop
(bad)
add
int
mov
cmp
push
outs
outs
sub
xchg
jno
mul
cmps
cwde
jmp
cmp
mov
xchg
mov
jmp
sub
add
repnz
mov
push
push
les
out
inc
jle
mov
add
adc
sub
jp
outs
xor
adc
lea
cwde
jb
fldenv
dec
sbb
xor
aaa
repnz
loopne
pop
(bad)
cmp
jne
xlat
mov
mov
hlt
jns
in
push
loopne
jae
mov
fisttp
inc
or
jno
test
ds
xchg
mov
pop
xchg
pusha
out
aas
je
add
jo
rol
fsubr
push
adc
mov
out
jmp
pop
mov
movs
jg
xchg
mov
fcom
cmp
jae
movs
hlt
lds
jge
int3
punpckhdq
aaa
or
imul
or
xchg
cmp
enter
xchg
or
mov
lahf
cmp
jl
sub
aad
ror
clc
jle
sahf
mov
push
push
push
movs
movs
shr
cmp
mov
or
mov
pop
or
push
mov
pop
call
add
(bad)
push
cmc
ss
adc
xchg
adc
add
(bad)
lock
mov
mov
jno
add
jnp
popa
mov
mov
lahf
jae
xor
mov
leave
fidiv
xchg
addr16
into
inc
dec
jns
loop
lods
fst
aaa
repnz
mov
and
stos
and
cdq
sahf
in
fld
(bad)
leave
leave
dec
scas
mov
(bad)
lods
sbb
test
lock
jge
inc
mov
int3
or
in
cli
xchg
not
cmp
leave
pop
daa
mov
add
jl
xor
sbb
(bad)
shl
cmp
xchg
mov
(bad)
out
clc
mov
mov
sub
and
cwde
lods
or
pushf
add
(bad)
es
movs
cmp
daa
fcom
push
test
or
mov
and
adc
inc
pop
and
pop
dec
call
mov
adc
lods
mov
out
cli
push
ins
or
jle
xor
shl
dec
test
fild
retf
rcr
lock
add
out
mov
dec
jo
cli
and
out
test
lods
lea
retf
iret
push
int
push
jmp
or
aas
adc
mov
lds
adc
push
cwde
js
(bad)
xchg
add
fild
sbb
add
push
pop
mov
enter
outs
punpckhbw
(bad)
inc
lock
pop
inc
out
fwait
cmp
cmp
(bad)
and
fwait
rcl
mov
pop
cmc
sbb
aaa
js
cmp
cmp
fbstp
loop
imul
mov
and
enter
mov
outs
cmc
lods
mov
mov
ja
sar
add
sub
cmps
push
mov
mov
idiv
je
pop
daa
je
arpl
adc
fdivr
mov
inc
stos
movsx
add
mov
or
adc
loopne
sar
lahf
popf
fdiv
jo
cmp
sub
xor
mov
inc
and
pop
push
(bad)
add
pop
neg
movs
xchg
mov
aas
lods
push
and
(bad)
pop
loop
arpl
iret
cmps
loope
or
(bad)
sbb
pop
iret
js
arpl
nop
add
sar
mov
gs
sub
sub
mov
scas
jge
xchg
repz
lods
stos
test
pop
xor
pop
ror
dec
sti
out
mov
cld
sbb
fwait
mov
div
xor
mov
std
or
xor
je
mov
and
ja
(bad)
sub
mov
popa
xor
hlt
out
cmp
sbb
adc
ret
rcl
xor
scas
dec
movs
mov
lods
add
xor
inc
inc
fwait
js
es
jle
cli
inc
div
inc
or
mov
cmc
jbe
pop
and
shl
xchg
(bad)
lods
mov
in
cmps
inc
or
and
frstor
add
push
mov
es
push
mul
mov
sub
scas
(bad)
jl
mov
dec
je
add
and
mov
jno
clc
and
fsubr
jne
sbb
(bad)
bound
mov
fcmovnbe
(bad)
daa
xchg
jbe
jp
loopne
jae
(bad)
push
cld
or
mov
test
cli
jge
movs
out
mov
jecxz
inc
out
call
xchg
out
dec
add
push
adc
cmps
cmp
lods
dec
repnz
retw
jns
and
outs
lods
push
sti
add
mov
and
loop
push
popa
dec
ins
and
pushf
in
mov
mov
icebp
inc
sbb
unpcklps
lods
add
das
jns
mov
(bad)
cmc
pop
outs
pop
push
mov
jl
jmp
push
or
fwait
outs
push
jnp
xor
ds
hlt
int3
push
jb
sbb
iret
cs
sub
jbe
adc
ins
fld
add
jl
dec
inc
js
inc
addr16
mov
iret
xchg
(bad)
mov
mov
stos
push
lahf
lock
push
aam
(bad)
pop
push
retf
or
sbb
fistp
leave
into
nop
jns
cmp
mov
and
outs
pop
push
add
ja
sub
cld
mov
mov
rcl
mov
cmp
and
inc
sub
and
stos
(bad)
(bad)
scas
sbb
mov
pop
stc
int
mov
and
mov
mov
or
or
xchg
stc
into
test
xchg
call
int3
repz
dec
jmp
sbb
out
sub
mov
or
or
in
add
adc
mov
iret
inc
cmc
xor
loopne
or
inc
mov
outs
or
and
test
enter
enter
pushf
cmp
lahf
les
in
cld
inc
push
add
add
add
call
fxch
adc
mov
push
push
add
mov
push
push
xchg
(bad)
in
cmp
(bad)
cmps
mov
mov
dec
(bad)
jge
jno
dec
out
or
jns
mov
mov
cmp
(bad)
mov
and
pop
(bad)
sti
shl
leave
inc
jns
pop
xor
push
icebp
push
push
aam
or
adc
daa
dec
mov
mov
pop
mov
js
jecxz
mov
pop
jb
mov
je
pop
push
mov
es
fild
push
jmp
sbb
and
out
and
mul
cdq
push
sbb
(bad)
lahf
and
add
nop
dec
push
sub
shl
adc
mov
and
test
fcmovne
loope
ss
mov
mov
sahf
out
xchg
push
fs
push
push
and
inc
and
sub
ins
rol
mov
retf
test
xchg
cmp
les
jmp
xchg
jae
jnp
mov
retf
js
sbb
dec
jge
fdivp
xor
lds
pop
cmp
sbb
fimul
fnsave
fcmove
xchg
(bad)
sar
push
jecxz
fisttp
retf
xchg
das
jns
inc
hlt
mov
fldcw
add
pop
mov
outs
jo
xchg
mov
bound
mov
fnstsw
in
popf
sbb
mov
mov
cs
jnp
dec
jne
push
int
and
inc
add
popf
sahf
sti
inc
test
bound
jae
lods
outs
(bad)
xchg
pushf
out
xor
push
in
pusha
mov
js
adc
cdq
inc
adc
cmps
push
outs
scas
adc
mov
in
dec
and
pop
mov
push
ss
xor
sbb
inc
push
idiv
mov
dec
pop
xor
xchg
nop
icebp
daa
jae
(bad)
stc
sahf
xchg
jge
xchg
cs
jno
outs
pop
mov
into
iret
mov
and
retf
lods
jmp
xor
call
cmps
mov
adc
icebp
aad
push
add
test
das
cmp
(bad)
adc
cld
popf
jge
mov
adc
cwde
push
mov
cdq
or
out
scas
push
div
das
sbb
ret
mov
mov
int
mov
mov
(bad)
je
outs
sbb
push
cmc
jb
cs
(bad)
jg
and
fldenv
cli
cmp
pusha
sub
stos
xchg
das
dec
out
mov
das
clc
sub
ss
mov
retf
and
jge
mov
(bad)
dec
push
mov
xchg
adc
sbb
clc
in
icebp
fwait
push
or
test
outs
mov
pop
jo
movs
sbb
aas
add
enter
repz
jb
fbstp
dec
push
and
mov
or
push
loopne
les
inc
mov
push
repnz
hlt
pop
imul
xchg
nop
jge
lods
pop
jg
mov
xor
push
cmc
test
call
mov
hlt
(bad)
lods
mov
in
jmp
inc
pop
dec
jbe
sbb
mov
xor
jge
dec
fimul
add
sbb
cmp
jg
imul
test
not
addr16
popa
test
push
retf
repnz
inc
lods
cdq
icebp
xchg
aad
sub
sbb
sub
jge
out
test
fidivr
pop
dec
push
or
xor
dec
and
push
pop
push
push
fadd
dec
neg
and
test
pop
stos
ja
fwait
push
xor
jne
dec
in
popa
inc
cld
jmp
pop
fild
sub
sbb
cdq
mov
cmp
jp
movs
lahf
push
inc
jns
jb
aas
ins
xchg
sub
enter
pop
ficomp
jmp
popf
mov
dec
mov
test
data16
ss
mov
pop
sbb
je
fwait
sub
jecxz
shl
pop
daa
(bad)
call
push
mov
xchg
sbb
sub
mov
je
mov
retf
lods
pop
pop
adc
test
xlat
push
stos
ja
xor
(bad)
stos
iret
pop
xchg
mov
add
fs
sbb
in
mov
adc
dec
js
or
test
xor
dec
sbb
xchg
cdq
test
mov
dec
ficomp
dec
in
test
sahf
nop
sti
fwait
mov
fistp
stos
jmp
in
movs
shr
pop
pusha
or
xchg
and
xor
inc
xchg
cmp
cmp
push
(bad)
mul
mov
sbb
mov
fiadd
pop
mov
adc
inc
fmul
cmp
dec
xchg
pop
xchg
cmp
loope
dec
inc
jb
je
mov
inc
xchg
mov
mov
or
je
xchg
or
cld
add
jbe
mov
push
xchg
in
popf
mov
mov
inc
retf
sahf
fwait
rol
pop
in
jg
dec
mul
jne
sbb
sbb
scas
jns
pushf
idiv
cmp
call
(bad)
out
inc
jle
gs
les
add
jle
sar
pop
(bad)
jmp
jne
add
sub
or
icebp
add
(bad)
adc
sbb
xor
add
mov
mov
std
bnd
dec
loope
fbld
mov
jge
stos
push
push
push
sub
mov
movs
movs
out
mov
out
pop
sbb
xor
or
sbb
lahf
call
xchg
dec
pop
xchg
loope
add
jmp
jns
loope
xlat
or
stos
and
mov
mov
ret
pop
(bad)
pop
retf
(bad)
dec
add
fiadd
dec
in
jmp
aam
push
shl
jbe
rol
fiadd
mov
jge
mov
mov
cli
loop
push
int3
sub
or
stc
rol
cmps
fldcw
cmp
(bad)
in
aaa
fbld
and
les
inc
push
in
scas
mov
pop
push
gs
mov
add
push
call
push
cwde
(bad)
hlt
inc
push
aaa
outs
and
cli
jmp
and
in
or
mov
aaa
push
and
loop
adc
xor
lods
pop
xor
adc
xchg
data16
and
jecxz
push
out
xchg
and
xor
loope
push
push
test
pop
cmp
in
scas
push
popf
mov
sbb
push
int
cmp
xlat
sbb
xor
repnz
mov
mov
ins
sahf
dec
fwait
inc
add
test
xchg
xor
neg
push
pop
jmp
dec
add
aas
mov
(bad)
in
pop
test
mov
inc
(bad)
push
enter
fst
cmp
push
adc
inc
pop
sub
in
add
mov
and
add
push
aaa
mov
(bad)
push
sets
mov
cli
push
xchg
ds
outs
loope
adc
scas
jae
out
(bad)
jo
lea
fsub
or
shr
ret
cmp
iret
push
mov
inc
xor
ins
mov
inc
xor
sub
rol
aam
inc
mov
daa
ss
rcl
xchg
mov
fs
sub
into
inc
push
push
sub
in
jecxz
cmps
jne
stos
mov
or
(bad)
xchg
push
sbb
(bad)
jns
mov
xchg
repz
inc
leave
push
retf
dec
ja
shl
popf
ds
dec
pop
jecxz
je
pop
cmp
out
shl
leave
add
adc
pop
pusha
sub
das
sbb
mov
sub
jecxz
int
xchg
pmaddwd
push
es
pop
in
or
lahf
in
fs
data16
push
sub
jbe
out
int3
dec
push
sub
xor
and
popf
add
lods
add
adc
loopne
arpl
icebp
cmp
mov
jg
mov
fstp
push
leave
inc
cmp
sub
imul
leave
xlat
les
jge
jb
sub
mov
adc
aaa
shl
out
js
cmp
mov
add
leave
outs
test
jp
fidivr
mov
mov
xchg
and
pop
lea
aas
shl
ficom
div
lahf
lea
loopne
add
jmp
inc
pop
(bad)
add
dec
stos
(bad)
jmp
ins
stc
cmp
pop
mov
jb
mov
xchg
mov
pop
das
ret
dec
rcr
pop
sbb
or
pop
mov
xor
push
mov
(bad)
mov
dec
pop
mov
ds
cdq
dec
cwde
cdq
mov
jle
mov
js
cmp
scas
and
ins
mov
fcom
jae
xlat
or
shl
dec
mov
mov
push
repz
add
xor
xchg
ss
jbe
add
mov
xor
sbb
mov
pop
mov
test
ret
es
sub
std
mov
xchg
nop
into
xor
ds
fwait
inc
jne
mov
jp
cmp
(bad)
mov
int3
push
loopne
in
in
push
popa
int
popf
addr16
out
fist
psadbw
add
pop
sub
addr16
jnp
pop
push
popa
cmc
cmp
add
in
push
ja
xchg
sbb
sti
cld
push
fmul
mov
in
cmp
lahf
xchg
ds
outs
jg
lods
adc
ficomp
or
sub
mov
repz
dec
mov
xor
dec
push
sub
aas
sbb
into
mov
cmp
push
enter
mov
gs
test
xor
pushf
or
cmp
call
ins
adc
jle
test
pusha
rcl
jo
mov
xchg
jbe
cld
jo
xchg
not
add
jmp
scas
out
inc
fistp
into
rcr
xchg
stos
mov
es
jmp
sbb
test
test
xchg
pop
mov
(bad)
in
leave
pushf
fidiv
repnz
mov
scas
lods
push
test
and
nop
hlt
push
lods
ss
push
(bad)
das
popf
(bad)
mov
popf
aas
xor
pushf
lahf
ins
dec
sbb
fiadd
shl
(bad)
cmps
mov
jge
or
iret
dec
popf
push
sbb
mov
pushf
das
test
pop
rcl
push
int3
cmp
add
fcmovnu
retf
jge
or
mul
push
pop
xlat
pop
sub
mov
mov
push
pop
inc
mov
mov
pop
mov
(bad)
push
lods
mov
shr
pusha
add
cs
stos
retf
dec
cmp
xchg
or
popf
jmp
adc
call
mov
jo
ss
dec
pop
jbe
cmps
popa
cmp
inc
xor
in
sub
fist
pop
adc
pop
jb
scas
pop
inc
div
lea
sub
sbb
mov
call
rol
and
jno
(bad)
daa
jns
and
push
add
cmp
push
fsub
test
sbb
scas
pop
imul
jl
jnp
inc
clc
pop
push
sub
inc
movs
sbb
cli
dec
jge
std
adc
icebp
fadd
cli
icebp
fst
add
and
xor
jbe
addr16
imul
cmp
das
adc
mov
and
adc
fstp
inc
inc
adc
mov
(bad)
mov
mov
dec
jp
sub
(bad)
shl
(bad)
mov
mov
cmp
mov
mov
loopne
xchg
add
jle
lods
push
jmp
push
pusha
jp
daa
imul
mov
imul
(bad)
lahf
mov
mov
add
push
outs
dec
and
add
push
adc
xor
sbb
pop
repz
mov
test
cmp
out
mov
sbb
push
jns
jbe
push
xchg
test
pop
or
loope
xor
push
outs
ins
cmp
movs
fcom
adc
mov
in
inc
mov
xlat
dec
push
sub
popf
scas
lds
aad
out
ffreep
(bad)
mov
cld
in
xor
fsin
in
dec
lods
inc
inc
jne
sub
aas
push
pop
aad
jns
xor
jge
pop
cmp
xchg
jmp
or
aam
pop
push
or
ficomp
push
adc
sub
popf
mov
fist
cmc
(bad)
rcr
dec
xchg
pop
cmp
sub
scas
popf
xchg
movs
std
dec
lods
test
or
or
mov
(bad)
push
sbb
pop
(bad)
repz
popf
shr
fstp
js
scas
mov
icebp
cmp
cmc
push
(bad)
lahf
shl
add
xor
ds
aas
jb
es
adc
and
push
clc
jo
test
bound
add
cmp
aaa
sbb
sbb
ins
jle
and
pop
jmp
add
jmp
test
xchg
cmp
fwait
xchg
scas
das
mov
inc
out
sub
mov
and
cmp
scas
push
popa
das
cmc
jb
push
ss
add
dec
iret
add
or
mov
imul
sbb
sbb
push
movs
lods
and
adc
es
cs
movs
fucom
pop
pop
ins
ds
std
in
pusha
pop
inc
fisttp
data16
push
out
push
mov
cdq
sub
in
sbb
imul
or
jecxz
adc
sub
xchg
aad
aaa
mov
pusha
cwde
push
add
(bad)
(bad)
lea
cli
lahf
es
out
xor
ins
in
cmp
pop
jl
jle
test
rcr
(bad)
xchg
ror
mov
pop
adc
xlat
ss
or
and
xchg
jb
inc
cdq
aad
mov
outs
pop
and
xchg
jae
aad
test
mov
xchg
mov
(bad)
shr
cdq
pop
sbb
(bad)
daa
stos
call
sti
imul
movsx
adc
fisub
and
fimul
mov
push
in
xor
loopne
iret
sub
clc
xchg
mov
cmp
mov
xlat
sti
mov
mov
add
(bad)
stc
jnp
mov
loop
inc
aas
xor
shl
pop
jae
xor
mov
imul
les
jnp
adc
repz
or
ins
lahf
dec
and
adc
push
dec
jnp
push
jne
add
pop
pop
xchg
add
mov
inc
push
leave
hlt
icebp
(bad)
jle
ficom
popf
and
xor
mov
shl
or
inc
add
inc
dec
cmp
or
xor
xor
inc
mov
gs
xor
and
(bad)
cmp
mov
add
sar
dec
shr
(bad)
or
ret
arpl
sti
xchg
outs
call
les
sub
inc
vorps
and
xchg
addr16
and
movs
retf
retf
in
and
popf
dec
push
xchg
das
inc
cmp
add
dec
pop
mov
(bad)
push
dec
sahf
jg
in
add
mov
(bad)
dec
xchg
inc
ret
adc
xchg
(bad)
out
test
or
push
into
lahf
jmp
or
mov
gs
mov
mov
inc
sbb
ret
shl
(bad)
fmul
jbe
jle
mov
and
cli
jl
out
rol
or
lahf
(bad)
push
sub
(bad)
addr16
cmp
and
stc
les
or
push
jmp
into
in
mov
or
fld
aas
int3
mov
nop
xchg
clc
popa
lods
mov
mov
push
scas
xor
sbb
sub
sub
repz
xchg
int
lods
ror
sti
sbb
pop
inc
arpl
ins
add
cli
push
or
and
aam
movs
mov
pop
xor
pop
jmp
scas
fistp
ss
stos
test
push
mov
and
mov
arpl
pop
add
jo
inc
shl
xchg
jge
pop
mov
aaa
(bad)
and
mov
loop
sub
dec
xor
and
cld
test
shr
push
inc
mov
adc
xor
stos
imul
push
jb
xchg
pop
mov
cld
jae
and
and
cmp
pop
sub
add
push
lds
push
push
jae
jle
pop
call
daa
test
clc
test
fsubr
cdq
or
adc
js
xor
xor
loopne
icebp
mov
push
daa
adc
mov
xor
es
in
iret
inc
mov
stos
adc
sub
pop
jmp
test
dec
cs
pop
sub
dec
mov
sbb
aad
inc
xchg
rol
add
test
mov
mov
popa
lock
and
mov
cmp
test
adc
pusha
lock
scas
ds
mov
sbb
mov
jb
scas
mov
cs
in
mov
ja
mov
dec
shld
(bad)
push
inc
pop
mov
and
jnp
or
xchg
sub
and
mov
adc
cld
sbb
cmp
call
rol
in
aas
or
jb
fisttp
fst
(bad)
cmps
cmp
mov
test
jbe
mov
gs
xchg
lods
pop
pop
bound
pushf
js
push
loopne
pop
jbe
ret
pop
test
jmp
daa
ror
cmps
(bad)
pop
mov
loopne
mov
fcom
out
mov
mov
fcom
add
fs
adc
sub
enter
push
xchg
adc
cmps
cmps
outs
adc
popa
jg
mov
ins
enter
jle
dec
or
movs
xchg
mov
mov
dec
mov
adc
sub
jle
jbe
or
inc
cdq
mov
inc
xchg
xor
not
jg
push
mov
fmul
jg
push
cmp
cmp
iret
adc
out
fdivp
xor
(bad)
enter
inc
in
bound
retf
cwde
cmp
nop
push
dec
aam
cli
je
pop
xchg
sti
cmp
dec
nop
jmp
push
inc
loop
inc
jp
mov
out
or
nop
test
cdq
mov
lods
popf
loop
adc
add
iret
xchg
mov
mov
pop
pop
out
sub
and
mov
aad
sti
and
pop
iret
and
outs
call
outs
mov
xchg
popf
lea
inc
mov
mov
mov
cmc
loope
pop
mov
test
or
mov
test
xor
fwait
stos
mov
shl
mov
sub
jmp
or
mov
cld
ss
test
xor
int3
icebp
je
dec
test
ret
mov
cmp
push
fsubr
xor
mov
das
test
inc
into
sbb
sbb
dec
out
push
dec
movs
fild
sub
fnstcw
std
cmp
mov
or
retf
mov
sbb
enter
and
not
sub
sub
pop
imul
int
push
dec
add
or
add
cmp
push
jge
ins
push
in
cwde
mov
jmp
mov
lods
dec
dec
dec
cmp
out
cmp
cwde
mov
mov
cmp
xor
xchg
inc
jg
xchg
mov
xor
or
cmps
mov
dec
fwait
xchg
jg
out
adc
std
pop
mul
add
sti
cmp
ins
mov
movs
(bad)
xchg
ss
ficom
xchg
sbb
push
push
dec
bound
scas
push
cmp
lods
mov
loopne
data16
dec
mov
imul
push
in
ror
test
and
out
sar
and
pop
jmp
ss
dec
adc
fs
xor
mov
mov
fwait
repz
xor
and
(bad)
sub
cld
and
ins
fwait
pusha
adc
(bad)
adc
retf
leave
inc
fisttp
inc
adc
dec
ins
mov
in
icebp
mov
retf
in
jmp
fcom
mov
sub
out
shl
pusha
fidivr
xchg
cmp
cmp
imul
addr16
jae
call
mov
jbe
icebp
movs
aas
ins
mov
ins
ds
repz
scas
rcl
mov
int
xor
push
mov
push
xor
dec
stos
test
cmp
xchg
fist
adc
imul
jge
xor
sub
jp
dec
dec
mov
popf
test
mov
sub
inc
pusha
sub
push
lods
push
scas
stos
xchg
push
ror
arpl
repz
fwait
jg
cmp
dec
inc
sub
sub
int
rol
ds
jle
(bad)
loopne
enter
retf
call
ja
inc
pop
or
(bad)
mov
pushf
and
sbb
inc
push
jle
nop
mov
inc
push
fimul
push
lahf
mov
int3
icebp
inc
rcl
das
movs
inc
xchg
cmp
and
gs
es
xchg
cmp
call
arpl
xchg
out
dec
fstp
add
and
lds
sbb
iret
sub
and
arpl
rcr
and
cmp
cmp
xchg
sub
dec
les
fiadd
jo
sbb
cmp
mov
jmp
mov
lods
int3
out
mov
iret
mul
aad
xchg
add
call
ret
rcr
xchg
inc
loopne
stos
rol
mov
cmp
push
and
aam
lea
(bad)
mov
mov
cmp
jne
xchg
iret
ror
and
mov
pushf
xor
test
fcmovbe
mov
iret
push
call
push
je
cwde
fcmovnb
ret
hlt
sub
movs
or
cmc
jae
int
jnp
xchg
mov
adc
ret
movs
sub
pop
int3
aad
adc
jl
repz
rcr
in
pop
cmc
mov
jmp
push
jne
sub
mov
jae
adc
aaa
ds
outs
shl
(bad)
mov
cmp
mov
scas
movs
mov
ss
or
xor
push
cmp
xor
dec
out
outs
cmp
dec
sub
mov
(bad)
ret
repnz
popf
add
stos
mov
call
xor
sbb
inc
out
shr
mov
dec
xor
inc
addr16
bound
sub
aad
(bad)
std
movs
cmp
push
lods
jae
push
or
(bad)
fimul
aas
xchg
ss
gs
push
and
or
jge
dec
movs
cwde
div
jb
mov
sbb
cmp
or
pop
pop
scas
sahf
ins
repnz
in
xchg
stos
add
fcom
or
add
pop
(bad)
mov
(bad)
and
xor
pop
mov
adc
xchg
or
pop
jno
scas
mov
mov
aaa
ret
fistp
jae
pop
pop
mov
popa
mov
add
jg
mov
pop
cmp
inc
mov
jne
gs
enter
call
outs
mov
cmp
mov
es
or
inc
mov
fwait
into
(bad)
mov
loopne
mov
jecxz
in
adc
xchg
or
leave
push
(bad)
sahf
and
cmp
in
add
sbb
or
or
jge
cmp
adc
add
movs
adc
dec
add
jmp
imul
aaa
sbb
shl
and
and
ja
dec
dec
dec
(bad)
sbb
pop
push
ror
adc
inc
add
shl
cwde
dec
repnz
rcr
sbb
into
daa
fidiv
or
sbb
cmp
pushf
loope
adc
sbb
repz
mov
adc
xlat
push
mov
mov
sti
mov
mov
in
sub
sub
inc
repnz
or
jae
mov
out
push
xor
fs
fiadd
scas
mov
mov
sbb
clc
(bad)
jno
xor
stos
adc
mov
sbb
call
jb
adc
dec
sub
add
cmp
jno
int
push
call
push
repz
dec
jmp
daa
mov
inc
loopne
sar
lock
adc
(bad)
sbb
mov
in
pop
lea
sub
fs
retf
adc
xor
cmp
jo
pushf
(bad)
idiv
or
cmps
lods
cwde
mov
loop
pop
scas
mov
pop
cmp
and
data16
loopne
cli
ja
out
xor
mov
add
mov
outs
sbb
adc
lods
mov
sahf
pop
xlat
jp
or
aaa
rcr
mov
jmp
cmp
dec
pop
scas
cmp
mov
bound
mov
pop
outs
inc
jno
test
lock
inc
mov
or
cmp
popa
mov
ss
(bad)
sbb
xadd
sub
retf
sbb
pop
push
jne
xchg
idiv
hlt
jno
adc
arpl
in
bound
mov
pop
and
pop
sub
cdq
mov
mov
or
or
movs
adc
pop
pop
mov
cmps
stos
ret
pop
sbb
mov
mov
mov
fdivr
mov
cmp
hlt
shl
mov
mov
ret
shl
xor
inc
aad
sub
xchg
inc
mov
int3
bts
adc
outs
sub
xchg
pop
cmp
sub
rcl
(bad)
ja
jle
dec
neg
jbe
and
adc
ins
jo
pop
xchg
dec
push
xor
mov
inc
in
ds
in
xchg
inc
inc
shl
outs
sub
pusha
push
stos
loope
into
or
movs
pop
fnstenv
pop
inc
gs
push
movs
outs
daa
dec
jne
test
dec
inc
int
mov
lods
mov
stos
mov
and
cmp
dec
cli
pushf
add
xor
mov
add
adc
jge
aam
and
pcmpeqd
xchg
std
dec
scas
push
dec
mov
inc
jecxz
dec
aaa
rcl
sub
dec
js
idiv
mov
ror
inc
hlt
movs
push
mov
xor
push
dec
leave
aam
adc
sahf
pop
inc
sbb
fwait
inc
leave
enter
mov
lahf
mov
sbb
retf
shr
repz
jl
daa
rcl
pop
adc
aas
shl
(bad)
(bad)
ror
lock
cli
aad
mov
mov
xchg
pusha
pop
mov
xchg
stos
js
imul
pop
sahf
idiv
lds
icebp
fwait
xchg
add
or
or
loop
in
push
sbb
jmp
hlt
out
push
pop
xchg
movs
sbb
aaa
dec
mov
enter
bnd
push
mov
add
out
dec
or
dec
(bad)
mov
cmps
mov
jle
add
push
aad
sub
loop
cs
pop
inc
dec
cmps
cld
xor
xchg
cmp
fcmovnbe
mov
sub
add
push
add
jmp
mov
jecxz
paddb
repnz
jne
push
div
adc
xchg
adc
test
cmp
and
inc
(bad)
aad
dec
xchg
cdq
icebp
call
pop
icebp
xor
adc
movs
pop
inc
push
dec
push
jl
ins
xchg
ret
imul
lods
pusha
aam
push
ins
sbb
or
adc
call
push
pop
pop
sub
bound
jg
push
xlat
stc
out
pop
xchg
sbb
xor
cwde
mov
out
(bad)
aad
fsubp
dec
or
push
sbb
cmp
and
lock
jmp
push
pop
fld
stos
call
lea
aam
sbb
cmps
sahf
push
mov
fidivr
xchg
add
(bad)
int3
xor
std
je
and
cmp
adc
dec
xlat
jne
push
pushf
cmp
sbb
out
push
and
push
sbb
ds
dec
js
ja
pop
out
movs
add
adc
into
daa
fcom
ss
clc
and
stc
retf
mov
(bad)
or
jne
mov
mov
je
xchg
jno
aam
mov
hlt
dec
ficomp
ins
ror
or
cdq
dec
out
pop
or
movs
sbb
or
inc
mov
pop
or
pop
stc
mov
and
or
lods
xchg
add
push
aad
pop
sbb
test
mov
gs
es
movs
retf
icebp
sti
jg
cvtps2pd
(bad)
ins
outs
cwd
xchg
adc
mov
cmp
call
ret
mov
neg
stos
sar
and
mov
pop
sbb
adc
mov
pushf
idiv
js
popf
and
jmp
dec
sti
and
les
add
mov
scas
sub
jae
add
je
rcl
cs
repnz
je
aad
call
(bad)
sub
std
xlat
call
icebp
test
xlat
dec
sub
jae
and
sub
sub
xchg
int3
inc
fucomp
lods
addr16
add
test
jne
jmp
cmp
jno
jnp
xor
push
adc
adc
pop
mov
test
or
shl
cmp
dec
pusha
jo
cmp
pushf
scas
push
nop
retf
(bad)
rcr
mov
ja
cmp
push
lahf
adc
and
sub
out
popa
or
cmps
jnp
cmp
scas
sbb
packuswb
test
(bad)
fidivr
leave
fs
push
and
data16
adc
dec
xor
dec
xor
mov
sbb
addr16
fidiv
xchg
adc
add
sub
daa
lds
dec
scas
or
mov
sbb
sti
lds
data16
arpl
push
mov
jnp
sub
sahf
jp
jae
add
arpl
outs
cmp
icebp
inc
adc
pop
add
sub
addr16
xor
ret
mov
sbb
ds
mov
cmp
stos
clc
jae
fld
jle
les
aad
mov
pop
addr16
sbb
cld
mov
sub
mov
repnz
and
dec
arpl
bound
dec
(bad)
js
or
daa
jne
clc
push
movs
mov
test
sub
aam
sub
mov
aad
mov
cmp
cmps
jne
or
fcomp
push
inc
fucomi
cmp
bound
in
jmp
std
and
jnp
push
sbb
adc
popa
jne
out
pop
cld
push
shl
cmc
jecxz
popa
cmps
jae
xor
stos
ss
and
movs
sti
in
jne
mov
cmp
cmp
xor
or
push
pop
mov
adc
enter
push
inc
add
or
call
or
ins
ins
mov
or
or
cmp
cmc
xor
ss
in
mov
pop
or
adc
push
nop
mov
fdivr
ret
and
mov
lods
fsub
rol
sub
int
pop
mov
and
dec
dec
les
sub
les
cdq
jae
cld
mov
mov
(bad)
loopne
fnstcw
inc
out
lea
icebp
(bad)
retf
inc
xchg
pop
movs
pop
cmp
dec
dec
cmp
icebp
jns
and
xchg
push
dec
jne
sub
fld
leave
out
sbb
inc
test
rcr
pop
cmp
sbb
fstp
sub
pslld
cdq
sub
cli
sub
jp
dec
shl
fist
push
sbb
js
sub
call
fcom
cmp
mov
xor
into
imul
and
push
mov
mov
add
stos
nop
clc
stos
sub
mov
or
inc
xor
mov
jge
rcr
inc
and
mov
sar
xchg
mov
cli
cmps
sub
shl
(bad)
cmp
cmc
(bad)
jns
push
(bad)
push
xchg
ss
rcr
push
(bad)
pop
repz
xchg
rcr
inc
bound
mov
outs
cmps
cmp
xchg
cmp
(bad)
outs
push
xchg
push
xor
movs
repnz
jmp
fisub
nop
(bad)
out
pop
shr
(bad)
hlt
adc
mov
pusha
jo
js
fwait
jae
into
call
push
pop
popf
es
fs
xchg
xor
mov
in
out
test
sti
sar
je
mov
inc
xor
leave
fidiv
xor
in
dec
cmps
adc
scas
movs
addr16
mov
repz
lods
fucomip
lahf
pop
cmp
inc
sub
adc
scas
test
push
adc
out
mov
in
dec
inc
mov
in
cdq
lock
push
cs
mov
adc
lods
xor
sbb
dec
xor
or
xlat
lahf
push
dec
int
lea
mov
sbb
repnz
mov
aas
sub
cmps
mov
in
in
push
mov
cdq
enter
xchg
not
fwait
mov
cs
pop
dec
pop
inc
ja
add
mov
mov
popa
fucom
(bad)
out
fdivr
test
cli
sub
fst
push
popa
stc
(bad)
sub
es
jmp
inc
jae
push
and
sbb
or
jns
pushf
sti
retf
mov
cmps
push
out
add
jmp
pop
pop
or
cmp
data16
mov
sti
cmp
mov
mov
imul
aad
js
and
movs
loop
std
adc
(bad)
loope
xor
test
mov
jae
les
call
xchg
popa
xchg
sbb
sub
sbb
cmps
mov
daa
jne
rol
iret
push
iret
push
push
mov
stc
pusha
mov
enter
jno
lds
sbb
(bad)
or
stos
aad
(bad)
mov
aam
push
js
out
in
pop
cs
push
lods
add
test
fisttp
adc
dec
xlat
test
mov
dec
cmp
std
jmp
mov
xchg
xor
aaa
mov
sub
movs
in
push
add
clc
xchg
push
pop
push
adc
inc
pop
sbb
movs
push
pop
call
add
dec
lods
outs
jecxz
xor
dec
add
jge
inc
je
ret
mov
jne
inc
imul
cli
inc
inc
xor
mov
jmp
ins
mov
xchg
mov
(bad)
sub
stc
cmc
sar
inc
fild
fisttp
lods
aaa
xlat
or
ds
outs
jg
dec
scas
adc
add
and
add
gs
icebp
jle
xchg
cmp
cmp
jns
popa
mov
pop
hlt
add
sub
and
push
or
gs
jl
loopne
fldcw
stos
mov
clc
gs
test
in
add
mov
dec
mov
fidivr
and
fmul
call
popa
ja
mov
imul
pop
xor
sub
adc
sbb
into
shl
add
mov
scas
shl
jb
jg
stc
mov
mov
fimul
scas
js
mov
movs
ffreep
fild
or
aas
and
ss
shl
jge
jg
sub
xchg
add
in
dec
dec
mov
dec
loop
sub
stos
sub
les
sub
inc
jmp
nop
ds
lahf
jg
inc
adc
sbb
pop
pop
dec
loop
arpl
sbb
and
mov
lahf
sbb
pop
jno
jecxz
popf
adc
clc
or
sti
gs
daa
cdq
mov
(bad)
cmps
sar
push
pushf
jbe
ret
mov
add
cmps
fs
push
or
lods
shl
clc
or
pusha
lock
sbb
iret
(bad)
add
iret
data16
xlat
xchg
data16
adc
sbb
xor
sti
into
clc
mov
mov
mov
sub
jbe
push
jns
jecxz
scas
mov
pop
addr16
mov
xchg
pmaxsw
outs
pusha
mov
ret
cmp
imul
es
ss
rcr
pop
xchg
pop
shr
sahf
cmp
sbb
xchg
jg
mov
cmc
pop
jmp
push
add
sub
imul
(bad)
movs
add
or
pop
repz
dec
jp
enter
aad
cmps
xchg
hlt
shl
inc
loope
(bad)
sbb
sub
adc
fwait
pop
into
sti
in
xor
je
mov
mov
sar
pop
fimul
and
shl
jnp
xchg
mov
and
or
icebp
push
sub
or
mov
mov
sbb
jae
jns
out
adc
jl
sbb
bound
or
jnp
cli
les
jle
mov
mov
ins
pop
xor
aaa
ret
pop
bound
and
push
mov
xor
push
dec
inc
out
mov
sub
or
pop
rcr
xchg
rol
cmp
jle
inc
mov
xor
and
xchg
jbe
pop
rol
xor
(bad)
call
fcomp
mov
data16
dec
xchg
test
call
pop
loope
fadd
lock
sbb
and
adc
sub
xchg
or
add
adc
shr
adc
cli
push
arpl
jge
int
fist
sub
cmp
mov
adc
aam
push
and
mov
fnstsw
js
pop
mov
mov
mov
push
mov
movs
dec
not
jne
fadd
and
inc
jmp
fsqrt
mov
sub
outs
ins
les
out
cmc
and
pop
add
mov
pop
ficomp
lods
cmp
mov
(bad)
enter
adc
scas
loopne
mov
xor
xor
(bad)
lahf
repnz
sbb
cmp
mov
or
jo
jmp
loope
cmp
fild
fld
imul
cmc
pavgw
sub
jb
xchg
inc
sbb
push
(bad)
test
ficom
mov
push
mov
into
dec
lods
pop
cmc
add
and
int
mov
shr
pop
sbb
cmp
ss
sahf
push
in
inc
daa
jmp
imul
sbb
fwait
push
or
and
fs
int
jle
setnp
lods
xor
(bad)
xchg
push
pop
test
push
cmps
cdq
addr16
(bad)
scas
icebp
pop
sti
out
loop
sbb
pushf
inc
adc
daa
and
add
test
xlat
mov
loope
or
jp
in
push
jl
jno
fisub
xor
std
in
or
or
sub
mov
mov
das
fisub
ffree
sub
xchg
push
lahf
pop
ror
dec
push
sub
xchg
lods
mov
popf
jbe
div
dec
xor
pop
jge
cdq
ret
sub
(bad)
cmp
test
and
push
mov
in
enter
pop
push
push
mov
xor
xchg
jmp
push
sbb
call
or
popa
push
push
jb
test
loopne
jmp
rcl
icebp
pop
je
outs
out
js
in
shl
pop
mov
cdq
inc
adc
xchg
mov
xor
je
les
or
cmp
xor
cld
mov
inc
loop
ds
aaa
daa
inc
jp
sub
rol
aad
jmp
and
enter
mov
pop
jle
aaa
pop
xor
lods
(bad)
shr
xchg
cmps
push
lds
imul
das
push
xchg
mov
inc
xlat
xor
mov
iret
mov
ret
sbb
fadd
lds
push
push
enter
xor
out
jp
lahf
or
ror
dec
inc
inc
loopne
jge
mov
xor
std
jge
js
jns
mov
imul
dec
jbe
cmp
sbb
and
fidivr
push
adc
xor
dec
rol
mov
test
es
xchg
(bad)
cli
arpl
scas
ss
ins
mov
rcl
icebp
jp
xchg
mov
adc
scas
or
ins
cmp
mov
mov
push
mov
pushf
and
dec
add
fiadd
mov
fcom
mov
das
mov
xor
dec
or
pop
mov
dec
sub
retf
push
fs
push
(bad)
lock
xor
mov
dec
xchg
(bad)
fsub
scas
js
and
cs
pusha
mov
cmp
stos
les
fs
shr
js
mul
retf
lea
aad
xlat
xchg
adc
adc
jo
data16
ret
leave
push
mov
cdq
push
inc
repz
std
dec
mov
aam
xor
sbb
call
stc
and
repz
push
repnz
daa
stos
mov
aaa
call
jle
fwait
popf
mov
pop
lods
in
push
sar
movs
pop
ret
je
sub
xchg
stos
test
pop
push
out
cmp
dec
fadd
aaa
add
leave
cdq
int
xchg
sbb
popa
js
mov
imul
add
inc
jno
and
(bad)
shl
arpl
pop
push
test
sbb
dec
dec
int3
cs
and
inc
mov
dec
mov
sbb
sub
xor
add
mov
adc
mul
mov
push
and
pop
xchg
out
jle
dec
ret
arpl
mov
not
(bad)
jg
mov
inc
jecxz
sbb
add
mov
outs
stos
out
and
je
int
scas
mov
pop
retf
movs
mov
or
or
leave
mov
into
mov
push
mov
int3
inc
mov
ja
push
add
push
and
ins
sub
fld
jnp
xchg
and
test
(bad)
retf
pop
sbb
xor
xor
add
lahf
push
sub
ins
icebp
jmp
mov
into
pop
in
cmc
pop
and
jbe
and
or
add
cmp
push
and
mov
sbb
jle
xor
js
ret
add
cmps
enter
xor
enter
mov
daa
sub
std
jmp
in
push
std
fld
int3
mov
lea
aas
std
sub
mov
cmps
sub
and
div
les
in
push
jmp
dec
pushf
sub
inc
stos
shl
hlt
push
inc
sar
sub
push
mov
jge
pop
mov
arpl
hlt
call
dec
cmp
lea
loopne
ja
es
retf
mul
pushf
dec
jmp
xor
out
push
(bad)
inc
into
mov
pop
jecxz
(bad)
mov
push
les
test
arpl
jg
sbb
nop
psubsb
sbb
imul
cmp
cmps
jle
retf
xor
cmps
fs
je
out
dec
lods
push
xchg
out
dec
fabs
pop
and
mul
outs
jge
or
fnsave
mov
fimul
lods
test
sahf
lds
icebp
or
(bad)
mov
shl
dec
addr16
xchg
inc
loopne
pop
jnp
aaa
ror
cmp
sbb
pushf
aas
push
lods
dec
mov
xchg
sub
mov
out
movs
push
jmp
adc
cdq
enter
jns
add
mov
sahf
mov
mov
push
jmp
xor
pop
xchg
jmp
(bad)
icebp
jae
pop
stos
inc
sahf
mov
int
jmp
sub
dec
ins
jno
shr
push
adc
enter
jns
pop
rcl
pop
sbb
ins
test
push
fsubrp
xchg
rcr
or
mov
inc
dec
movs
sbb
out
push
inc
adc
add
repz
in
xor
add
pusha
jmp
ror
xchg
sbb
mov
push
mov
div
lahf
mov
or
(bad)
hlt
in
cwde
cmp
push
icebp
push
add
pop
lahf
fldcw
call
mov
dec
or
repz
gs
push
iret
je
fisttp
mov
out
gs
mov
pop
jmp
(bad)
out
lea
or
cwde
cmp
outs
mov
in
daa
jb
in
or
das
inc
mov
dec
jp
jne
add
les
addr16
lds
or
add
(bad)
push
lea
add
inc
push
and
(bad)
(bad)
jnp
jl
out
in
jb
fstp
push
inc
fiadd
loope
sahf
sub
aas
pushf
test
lods
dec
pop
jle
dec
and
inc
or
ret
mov
inc
push
mov
ror
mov
ror
test
ficom
dec
mov
cmp
movs
cmp
test
jp
mov
test
mov
xor
push
sub
jp
out
popa
js
imul
mov
xchg
adc
test
sbb
sbb
sub
jbe
imul
jne
xchg
adc
fcomp
mov
or
and
fsubrp
xchg
lea
inc
movs
inc
mov
fldcw
enter
sbb
mov
imul
xchg
rcr
leave
adc
pop
std
movaps
dec
mov
int3
loopne
outs
mov
mov
mov
rcl
in
xlat
cld
neg
jns
dec
test
push
fdivr
popa
sub
push
xchg
mov
xor
cmp
stos
jp
push
and
or
mov
sbb
xor
cmp
loope
mov
int3
mov
push
movs
push
stos
add
add
and
hlt
fdiv
jmp
aaa
fs
sub
xchg
push
sub
fdivr
fldenv
call
sbb
lods
dec
stos
push
sub
fs
jmp
loope
push
adc
shl
(bad)
mov
xor
iret
daa
test
cmc
div
(bad)
popf
out
shl
(bad)
int3
in
out
sub
in
mov
movs
jno
imul
mov
std
fld
js
lods
(bad)
rcr
stos
cmps
sbb
out
mov
adc
mov
mov
pop
in
maskmovq
not
sub
mov
mov
inc
sbb
or
adc
inc
pop
mov
xchg
mov
jns
or
push
xlat
adc
pop
imul
aas
sti
rcr
pop
push
loop
fdiv
cmp
test
in
inc
mov
addr16
sbb
jl
out
sti
into
add
lock
jmp
pop
cmc
stc
xchg
into
push
out
xchg
aam
arpl
icebp
dec
(bad)
or
mov
das
cmp
out
or
mov
out
je
fist
(bad)
sub
int3
push
mov
sub
retf
stos
cdq
mov
(bad)
dec
test
sahf
adc
ret
mov
xor
sub
xor
dec
pop
cmp
lods
push
imul
sub
push
ins
add
jbe
cmp
dec
bnd
mov
bound
sub
(bad)
dec
cmp
imul
mov
fldenv
call
cli
inc
push
ins
xchg
loopne
mov
daa
push
mov
pop
fcmovu
bnd
and
movs
(bad)
adc
dec
cmp
and
sbb
(bad)
gs
xor
fild
test
fisttp
(bad)
outs
adc
stc
cdq
or
and
inc
lea
fs
(bad)
mov
or
add
sub
ins
inc
add
pusha
xchg
(bad)
xchg
sbb
push
stos
jnp
idiv
fstp
movs
sub
enter
cld
fstp
out
mov
dec
movs
mov
scas
add
hlt
icebp
mov
mov
or
pop
jmp
ret
ds
rcl
push
sbb
imul
jecxz
test
into
jbe
mov
in
mov
ja
adc
es
or
lds
add
std
pushf
aam
xchg
jo
jl
call
push
cmp
push
ds
aas
ret
bound
imul
mov
cli
add
xor
test
cmp
cmc
dec
icebp
repz
in
bnd
xchg
inc
in
pop
arpl
ds
and
xor
or
mov
cli
xor
mov
mov
pop
ja
in
sub
add
cmc
(bad)
dec
and
cmp
mov
add
pop
xor
retf
je
cmp
push
push
scas
mov
pop
mov
mov
cmp
bound
ret
das
std
or
or
dec
or
cmp
les
add
int
and
xor
inc
scas
js
dec
das
cld
sbb
jo
and
mov
pop
sub
ror
repz
fwait
outs
xchg
jl
jo
and
(bad)
add
inc
or
lea
rol
stos
imul
sbb
or
sub
iret
sti
inc
mov
sub
in
and
dec
jmp
outs
push
call
dec
cmp
or
xlat
sub
or
push
mov
and
ficomp
xor
cdq
xchg
adc
push
jg
rol
mov
jno
pop
repz
adc
adc
popa
std
mov
popa
jle
lods
retf
(bad)
mov
pop
fst
cmps
mov
inc
stc
or
lods
hlt
inc
loop
mov
xchg
sub
add
push
mov
mov
outs
in
sub
ins
mov
pop
sbb
test
(bad)
sub
xor
jno
test
call
retf
fist
idiv
mov
into
ja
int3
jecxz
fisubr
scas
adc
jne
popf
gs
arpl
dec
and
push
retf
(bad)
push
sub
inc
add
cmp
pop
add
pop
ret
lock
cli
in
(bad)
xor
sahf
out
xchg
cwde
pop
push
call
nop
xor
mov
mov
inc
jns
fistp
push
ins
loop
shr
fldcw
repnz
pop
jecxz
inc
jne
pop
call
addr16
or
push
push
jne
cmp
clc
and
jp
clc
out
cmp
sbb
sbb
and
in
or
retw
call
xor
addr16
stos
call
or
fwait
js
sbb
stos
mov
add
loop
add
out
outs
cmp
ins
xchg
mov
mov
mov
sti
aas
pop
inc
dec
inc
lock
mov
inc
push
jg
jns
hlt
dec
jne
aam
push
(bad)
add
inc
retf
mov
test
movs
push
push
shl
mov
ja
or
or
inc
pop
outs
test
(bad)
mov
xlat
pop
js
sbb
jmp
lods
ror
mov
mov
loop
mov
nop
inc
inc
into
cmp
lods
mov
leave
scas
dec
pop
in
stos
push
popf
aad
retf
push
fimul
(bad)
mov
xchg
mov
adc
lea
jge
je
frstor
sbb
es
mov
mov
adc
fidivr
addr16
pop
in
push
pop
(bad)
mov
loop
ret
xor
xchg
int3
jae
dec
xchg
sub
jns
push
idiv
dec
xchg
clc
cld
call
shl
or
in
cmps
jg
sbb
cmp
add
sbb
(bad)
out
std
scas
mov
shl
movs
pop
cmc
fcom
xchg
push
aad
jno
js
adc
outs
repnz
push
cmp
(bad)
push
fimul
ss
pop
mov
arpl
mov
xchg
mov
dec
adc
gs
addr16
or
cmp
inc
mov
or
and
mov
sbb
xchg
pop
xchg
pusha
cmps
cli
cmc
mov
sti
imul
sar
or
pop
jmp
imul
ficom
jb
sbb
jmp
ins
mov
adc
in
pop
add
add
out
idiv
int
dec
push
or
ret
xor
gs
xchg
pop
pop
inc
call
and
jmp
ss
ins
addr16
(bad)
cmp
cli
cmp
lods
clc
pusha
xchg
fisttp
jns
push
adc
xchg
ds
or
pop
in
lock
xor
fldcw
aas
in
fadd
or
mov
or
sub
sbb
shl
sbb
cld
enter
mov
cmp
out
mov
icebp
(bad)
jnp
push
push
adc
aas
sub
mov
push
or
mov
dec
hlt
mov
test
(bad)
in
jmp
jns
scas
sbb
out
cmp
aas
addr16
add
push
sbb
or
out
fimul
out
aad
sbb
test
test
push
not
mov
lods
arpl
sahf
std
fisubr
adc
dec
sub
cmp
dec
nop
xchg
pop
jae
cmp
dec
mov
dec
mov
scas
imul
dec
mov
adc
mov
add
fsub
popa
iret
ss
dec
out
retf
push
mov
push
sbb
or
ds
push
call
clc
icebp
and
push
adc
rol
cs
mov
inc
dec
jmp
mov
out
mov
inc
adc
push
mov
bound
sub
add
inc
aam
in
xor
icebp
mov
test
jl
jbe
ret
mov
lahf
mov
clc
call
push
mov
cwde
in
or
jmp
add
and
lods
int3
ret
mov
shl
xlat
xlat
push
and
cdq
and
cmp
dec
fisubr
cmp
fadd
sbb
sub
(bad)
mov
lods
leave
jns
stos
pop
add
xor
sar
mov
(bad)
aaa
sub
xchg
movs
jb
sbb
loope
movs
mov
rcr
imul
xchg
mov
xchg
xchg
xchg
xor
pop
test
sub
mov
adc
scas
out
bound
fbld
stos
and
cmp
push
jnp
and
sar
repz
js
xchg
in
jnp
sub
aad
pop
sub
imul
imul
mov
sub
test
pop
loop
xor
loopne
gs
mov
retf
fwait
jo
stos
dec
hlt
rcl
sti
shl
mov
inc
inc
jmp
mov
mov
adc
xchg
(bad)
inc
push
test
mov
dec
lea
aaa
inc
ins
push
mov
push
xor
mov
jmp
xor
xchg
fisttp
push
sbb
xchg
jg
dec
xlat
or
adc
jae
jbe
rcr
mov
inc
mov
aas
les
loopne
das
and
leave
cwde
mov
sti
adc
imul
les
(bad)
sub
call
mov
add
ja
or
sbb
out
retf
scas
fild
into
and
and
clc
jnp
(bad)
push
xchg
leave
sub
ins
inc
fwait
test
leave
ror
das
in
adc
inc
sub
xor
sbb
inc
mov
sub
movs
dec
xchg
sub
and
inc
push
xor
fidiv
push
dec
test
shl
and
xchg
ja
repnz
mov
daa
mov
push
fmul
stc
loope
repnz
mov
pop
or
fstp
dec
loopne
sub
mov
leave
add
aad
push
ds
jbe
xchg
ins
or
sar
test
dec
lds
hlt
imul
push
dec
div
call
rcr
ins
(bad)
pop
cld
and
dec
xchg
inc
mov
cmps
fidivr
mov
lahf
scas
sahf
jne
cmp
fwait
mov
sbb
pop
jp
or
mov
(bad)
push
sbb
mov
xor
pop
lods
div
rol
cmp
add
xchg
aad
cli
rol
es
push
rol
repz
push
mov
icebp
mov
push
mov
shr
add
mov
es
mov
sub
sbb
clc
inc
fisttp
mov
sub
dec
adc
sub
xchg
and
or
jmp
dec
je
popf
pop
js
push
dec
dec
and
ret
(bad)
scas
mov
inc
fistp
xchg
cmc
sar
sar
stos
repnz
jmp
or
imul
test
icebp
pop
js
push
call
shl
lds
and
dec
ja
mov
or
inc
std
xor
xor
sub
pop
aaa
mov
mov
xor
add
loope
push
mov
(bad)
out
call
mov
dec
inc
test
scas
or
jle
mov
add
xor
xor
push
icebp
clc
in
mov
addr16
adc
ret
sub
inc
jmp
adc
and
rcr
pop
in
fld
adc
mov
ficomp
sbb
addr16
popf
dec
in
gs
xor
sub
jnp
mov
out
fbstp
jle
push
xlat
popa
mov
mov
lahf
or
mov
xchg
ror
xchg
pop
inc
or
loopne
(bad)
cld
aad
jmp
mov
inc
push
retf
jmp
out
xchg
lahf
jp
call
cmp
xchg
fisub
dec
sbb
lods
imul
mov
inc
test
mov
pop
push
mov
push
pop
gs
cmp
lock
mov
mov
jle
enter
adc
add
repz
jbe
jge
mov
inc
jb
les
rep
(bad)
jmp
aam
or
stos
in
mov
outs
cmovl
in
jnp
rol
mov
and
jle
dec
in
aas
movs
nop
ret
dec
xchg
ret
in
cs
push
add
jge
mov
in
cmps
addr16
call
adc
jbe
popa
cmp
xor
int3
test
dec
mov
or
mov
(bad)
retf
fwait
sub
xchg
push
jecxz
jno
bound
cmp
test
push
mov
repz
sub
jo
or
mov
adc
cmp
addr16
ja
jp
in
pop
js
mov
inc
and
mov
fild
jb
fld
cmps
or
rcr
push
lock
fsub
cwde
inc
(bad)
iret
mov
push
imul
daa
(bad)
dec
jnp
gs
mov
sub
in
cli
pop
fmul
sub
jns
mov
popf
mov
sahf
xchg
loope
mov
fwait
loopne
dec
jle
fucomip
adc
mov
jge
add
lock
jge
dec
mov
out
xchg
aad
mov
stc
xchg
leave
stc
xchg
bound
mov
cs
out
jmp
jmp
adc
mov
test
movs
or
rcl
mov
fmul
jg
in
lea
cmp
aaa
pop
inc
in
outs
jne
jle
ror
jo
outs
add
sub
(bad)
mov
adc
test
inc
push
lods
sbb
add
retf
mov
sub
out
xor
lock
xchg
mov
fiadd
jne
dec
cmp
lock
sbb
jl
xor
sbb
shl
adc
in
js
mov
pop
ds
sub
xchg
push
inc
dec
push
out
push
mov
popa
mov
push
pop
enter
repnz
push
pop
in
xor
sub
(bad)
mov
fwait
sub
ffreep
sbb
nop
xchg
or
test
pop
icebp
ja
pusha
fidivr
loop
inc
sub
xchg
jmp
cmp
test
dec
btr
repz
mov
out
pop
mov
xchg
aas
jle
test
push
pop
push
scas
mov
fnstcw
repz
sbb
xchg
push
adc
push
or
mov
adc
jb
aas
xchg
test
jecxz
lahf
pop
lock
clc
xor
(bad)
outs
aaa
adc
mov
jp
sbb
fdiv
cs
lahf
sub
rcr
rcl
popf
xchg
mov
xchg
das
dec
adc
xor
sbb
push
push
addr16
jae
outs
lods
inc
or
clc
mov
mov
add
push
data16
(bad)
cmp
pop
lea
cmp
sub
and
popf
stc
retf
jle
outs
adc
fst
push
cmp
jno
dec
inc
and
aad
sti
xchg
nop
bound
cdq
inc
loopne
cmp
mov
adc
xor
frstor
stc
cli
push
cmc
imul
sbb
fiadd
xchg
cmps
pop
pop
mov
shl
cdq
stc
mov
mov
retf
sbb
pop
mov
jns
mov
push
lds
rcl
xor
ret
push
xor
jle
fs
outs
daa
fisttp
int3
ficom
jbe
mov
popa
push
daa
call
cdq
xchg
test
pushf
call
arpl
cmp
and
dec
mov
jb
stos
in
addr16
test
fcomp
stc
popf
inc
(bad)
fs
lods
add
or
add
sub
mov
and
scas
popa
jmp
jg
aam
out
cmp
inc
or
push
sbb
pop
int
in
or
(bad)
fcmovnb
call
fdivr
mov
xchg
adc
int3
hlt
push
and
dec
sbb
neg
sbb
sti
vrsqrtss
je
mov
push
jge
push
fimul
test
jno
idiv
adc
or
jge
fmul
(bad)
(bad)
mov
dec
fdivr
imul
fcomp
gs
stc
xor
dec
inc
outs
or
(bad)
ja
push
inc
fistp
add
sub
in
dec
or
cdq
aad
or
sbb
mov
in
imul
jno
std
retf
ret
jne
jne
cmp
or
add
dec
aas
fsubrp
addr16
mov
push
out
cdq
cs
outs
cmp
call
ds
add
jl
retf
xlat
pop
xchg
idiv
in
call
in
or
pop
sbb
cmp
in
cmp
mov
movs
pusha
mov
aad
xor
xchg
fs
cmp
inc
(bad)
rcr
out
push
out
(bad)
mov
stos
or
pop
mov
jp
xchg
pop
in
sbb
and
adc
jge
dec
cld
lds
call
inc
mov
mov
dec
push
or
or
sbb
ins
pop
cmps
add
cmps
push
push
inc
push
int
adc
cwde
dec
iret
push
and
(bad)
rol
cwde
sbb
cmps
sbb
jp
mov
iret
or
shr
aaa
lea
int
lods
pusha
mov
push
fwait
mov
ins
outs
jne
fadd
adc
xor
mov
mov
add
jmp
mov
xchg
push
mov
xchg
fcomip
pop
mov
jns
jne
inc
xchg
mov
push
sbb
out
adc
dec
daa
or
or
sar
in
add
pop
in
shl
loop
bound
fsub
add
add
mov
imul
sub
neg
mov
imul
push
out
repz
adc
xor
cmp
shr
scas
push
xchg
daa
adc
jg
mov
arpl
xchg
xchg
dec
in
loop
xchg
xchg
jge
js
shl
outs
xchg
adc
lahf
les
xlat
data16
(bad)
pop
jge
cmc
sub
cli
cdq
mov
out
mov
jmp
mov
stc
mov
iret
push
call
call
pushf
stos
sub
in
test
xchg
xchg
pop
mov
(bad)
(bad)
fisubr
dec
pop
push
test
cmp
push
dec
sbb
loopne
gs
bound
add
pusha
jge
mov
jp
outs
imul
(bad)
push
enter
jp
adc
hlt
in
ret
in
mov
or
xor
xchg
push
inc
fld
xchg
jnp
inc
ja
mov
scas
clc
mul
les
nop
push
mov
fist
xchg
(bad)
shl
adc
cmp
or
inc
data16
or
mov
xor
cs
repnz
or
mov
sub
inc
adc
or
push
xor
fld
fxch
add
pop
inc
inc
jns
cdq
xchg
dec
daa
sbb
pop
(bad)
mov
stos
adc
mov
mov
cmp
xchg
ficom
xor
icebp
out
sahf
pop
rcl
hlt
lea
mov
sbb
ja
repz
push
mov
sub
or
and
pop
pop
push
mov
jo
mul
(bad)
cmps
mov
mov
mov
add
cmc
jle
xchg
call
fiadd
fsubr
adc
mov
cmp
je
add
push
mov
push
cmp
add
rol
(bad)
out
jg
cs
inc
in
ss
jmp
and
out
test
call
in
cmp
mov
(bad)
popf
jecxz
sti
lock
fisttp
test
mov
pop
fdivr
cmp
repnz
sar
push
pop
outs
adc
push
xchg
aam
xchg
inc
xchg
sbb
les
daa
enter
and
pop
cmp
lods
add
outs
int3
leave
sti
gs
icebp
jb
test
jbe
leave
pop
add
mov
jle
ror
adc
and
neg
push
mov
cld
pop
imul
or
jns
ror
mov
jno
push
jnp
cmp
push
pop
leave
mov
pop
adc
scas
adc
sahf
in
popf
cmp
xchg
inc
shl
jae
fadd
outs
scas
call
inc
jmp
cmp
mov
or
es
hlt
dec
retf
cmp
xor
jmp
hlt
(bad)
fcom
inc
pop
nop
(bad)
xchg
int
and
nop
leave
add
addr16
popa
add
xchg
ins
cmp
out
std
push
call
adc
jmp
jp
push
aas
sbb
xor
push
cmp
aaa
inc
xchg
adc
test
stc
sbb
xchg
mov
ss
nop
aam
xchg
jmp
arpl
fld
(bad)
(bad)
or
loopne
adc
xor
sub
mov
sub
add
cmc
and
adc
jne
inc
inc
stos
lods
mov
repz
in
xor
rcl
mov
sub
gs
js
mov
cmp
dec
xlat
push
sbb
fldenv
sbb
gs
mov
mov
and
aaa
mov
jb
cmp
cmps
(bad)
pop
add
hlt
and
ins
or
dec
cs
je
out
test
jmp
adc
ins
pop
add
mov
push
pop
out
out
movs
test
fucomi
push
mov
mov
jb
jae
aad
enter
mov
data16
adc
sub
fimul
add
shr
in
aaa
loope
fcom
adc
stc
jns
push
and
xchg
shl
mov
(bad)
cli
jmp
leave
xchg
aas
lods
dec
cmp
push
(bad)
xor
das
add
cs
leave
jp
add
xchg
outs
jecxz
mov
ss
(bad)
push
adc
xchg
add
cmp
xlat
mov
js
xchg
daa
mov
enter
pop
(bad)
ins
xchg
inc
xchg
xor
dec
cmp
lds
push
jae
in
xor
jb
xchg
popa
ins
fwait
xchg
retf
cdq
sub
push
cmps
mov
icebp
mov
cmp
out
pop
lods
aad
in
pop
sub
aas
push
push
dec
les
push
retf
jmp
xchg
fidivr
je
sub
call
fwait
das
push
cmp
(bad)
test
in
push
mov
cmp
pop
mov
xchg
jmp
in
cs
dec
and
loop
inc
or
xor
dec
rol
adc
(bad)
rol
cld
push
xor
cmp
sub
xor
mov
sub
(bad)
inc
loopne
repz
mov
mov
push
mov
in
addr16
int
inc
mov
out
test
cmp
fsub
mov
dec
xchg
in
and
ins
or
mov
ret
fwait
(bad)
jp
xlat
repnz
repnz
sub
push
lds
cmp
loopne
sar
add
fidiv
cmc
cmp
call
jge
push
leave
xchg
fwait
outs
das
or
dec
fs
cmp
out
outs
jmp
cmp
fcomip
fmul
push
xlat
enter
add
cmc
js
lods
xchg
mov
mov
scas
ja
mov
mov
dec
fld
cmp
lea
shr
movs
in
or
and
cmps
adc
(bad)
xchg
aas
repz
push
mov
mov
sbb
or
dec
out
dec
nop
adc
sbb
mov
mov
int
stc
mov
jl
pop
das
dec
out
cld
mov
mov
adc
jno
jmp
and
scas
push
or
xchg
push
xchg
cmp
sti
push
xor
aam
xchg
xor
fsubr
mov
sbb
popa
out
xchg
sub
out
push
jge
jne
in
cmp
cdq
push
stos
gs
repnz
or
push
inc
inc
sbb
dec
add
js
hlt
into
sub
jg
xchg
xlat
test
lods
mov
mov
out
dec
inc
jl
mov
cld
(bad)
aas
mov
mov
cld
sbb
in
jno
movs
push
xchg
add
cmp
cwde
call
in
mov
out
push
js
nop
mov
aaa
test
cmp
jg
cmps
sar
into
dec
add
rol
dec
inc
pop
sbb
jl
loop
mov
das
inc
fldenv
mov
jb
pop
push
lahf
movq
xchg
test
sub
lds
dec
inc
xchg
jmp
mov
mov
or
cmps
sub
nop
xor
loope
lahf
add
int3
xor
mov
add
jnp
movs
fnstcw
xchg
cmp
push
jb
je
movs
out
sub
lahf
nop
and
sahf
dec
(bad)
clc
out
clc
or
xchg
daa
repnz
xor
aam
mov
mov
sti
pop
cmp
inc
nop
movs
or
cwde
push
bound
sub
inc
cdq
pop
fldenv
dec
pop
cwde
inc
stos
push
xchg
shl
inc
shl
mov
(bad)
iret
mov
dec
mov
adc
shl
in
sub
scas
cmp
xchg
popf
fs
jnp
fistp
dec
mov
arpl
jle
in
cmp
jno
retf
fidiv
mov
pop
dec
sbb
stos
sub
ins
or
jg
xor
sbb
dec
xor
stc
inc
sbb
jno
sbb
fdivr
(bad)
in
mov
pop
xor
jge
mov
xor
push
stos
adc
jo
fisub
add
xchg
or
das
mov
mov
dec
ret
cmp
es
je
xchg
push
ret
popf
add
push
ss
ins
sub
jbe
mov
dec
jns
iret
and
jb
push
fwait
sub
in
pop
dec
es
mov
sub
sbb
and
mov
and
dec
mov
dec
lock
pop
mov
jo
mov
adc
push
push
jecxz
shr
stos
es
stos
enter
fsubr
or
clc
in
aas
hlt
add
ficomp
mov
dec
mov
push
push
jne
jb
or
dec
cmp
clc
scas
jg
jne
cmc
aam
mov
retf
mov
ror
xor
sbb
xchg
jg
ss
aam
arpl
imul
loopne
dec
inc
jg
cwde
sub
outs
xor
mov
lea
inc
mov
retf
adc
mov
shl
jbe
mov
loope
pop
call
push
pop
fisttp
outs
lahf
jns
push
popa
faddp
inc
imul
sbb
mov
(bad)
sub
in
xchg
mov
sbb
xchg
(bad)
loopne
pop
or
mov
xchg
mov
push
push
cmp
call
adc
push
push
jmp
jo
int3
sub
dec
and
xor
popa
add
out
fiadd
inc
jmp
nop
jecxz
ins
outs
jb
mov
pop
mov
lods
mov
jns
mov
sbb
adc
add
mov
jp
inc
pop
das
fbld
rcl
jl
add
mov
lahf
mov
xchg
dec
pop
lods
into
ja
addr16
das
popa
xor
and
add
test
pop
xor
cmp
inc
pop
add
mov
pop
das
push
js
pop
test
test
pop
jl
dec
jbe
lock
bnd
aad
sub
mov
dec
push
add
adc
rcl
scas
call
mov
int
cmp
xor
dec
das
test
xchg
ins
into
daa
mov
js
mov
push
pinsrw
cmp
mov
imul
hlt
les
sub
add
jp
std
push
cdq
in
jmp
mov
push
pop
je
(bad)
sbb
test
test
and
ret
ja
fwait
mov
test
mov
pop
pop
jp
or
sub
sub
int3
xor
fcomp
dec
repz
add
sbb
mov
int3
pop
jno
aaa
push
(bad)
adc
std
mov
ja
jle
cld
xor
dec
adc
cs
lahf
jo
xchg
loop
jb
xchg
or
xchg
xor
sub
push
adc
dec
repnz
sbb
test
jmp
dec
pop
mov
adc
adc
lds
cs
xchg
jo
push
out
fsub
pop
ror
sub
ret
(bad)
stos
lods
lock
push
test
xchg
cmps
aam
scas
cmp
push
jb
mov
pop
shl
aam
aad
popa
xor
xadd
xchg
in
movs
add
sbb
xor
jno
icebp
xchg
sbb
cmp
retf
sub
lods
jno
imul
add
push
cmp
sub
mov
jne
data16
mov
and
(bad)
cmp
sub
cmps
fsubr
movs
xor
ds
loop
clc
lods
je
mov
sar
test
call
test
cmps
xor
mov
sub
pop
daa
lahf
pop
lods
dec
mov
hlt
jp
mov
fbstp
je
cmp
mov
ja
call
into
outs
loop
xor
xchg
jne
call
sub
inc
dec
sbb
sar
mov
loope
call
xor
lea
cmp
pop
sbb
aad
push
mov
push
test
add
test
pushf
cmp
sub
or
xchg
add
out
pop
jl
mov
xor
sar
sbb
aaa
imul
imul
call
push
or
inc
xor
shr
push
into
iret
lock
cld
ret
dec
out
test
in
(bad)
or
cmc
lahf
mov
test
ins
xchg
sbb
mov
cmp
dec
mov
pop
test
adc
jo
pop
dec
or
adc
and
lods
mov
or
mov
mov
cmp
or
mov
xor
mov
cwde
dec
mov
repz
pop
call
cli
movs
dec
test
int
scas
jle
jb
xchg
ja
psraw
call
pop
xchg
mov
dec
mov
pusha
and
aam
jb
aam
in
and
adc
or
cs
push
adc
and
pop
sub
xchg
pop
jns
inc
xchg
gs
push
out
add
aas
mov
fisubr
aaa
xor
mov
inc
mov
mov
out
scas
jb
inc
mov
mov
cmp
fidivr
jmp
push
mov
cdq
rcr
mov
or
int3
lahf
(bad)
push
in
outs
add
mov
mov
jmp
aam
sbb
daa
dec
outs
jmp
xchg
(bad)
mov
sbb
icebp
mov
shl
outs
xchg
mov
fstp
or
jmp
daa
and
sahf
mov
inc
shl
out
jmp
adc
jne
movs
ja
cmps
in
inc
rcr
mov
add
add
adc
outs
int3
mov
clc
mov
push
fnsave
add
xor
rol
add
inc
das
icebp
and
stc
aaa
jno
push
push
push
(bad)
jo
test
mov
push
jb
dec
sub
fwait
and
clc
mov
ja
inc
mov
cmp
add
inc
mov
sub
mov
xchg
stos
fs
xchg
(bad)
dec
test
adc
rcr
aad
daa
or
retf
lods
xor
jmp
add
mov
fs
mov
pop
rol
mov
ficom
cmps
jbe
mov
dec
sub
xchg
pop
push
adc
mov
pushf
fdivr
call
inc
and
pop
xchg
out
aaa
mov
test
jne
xchg
dec
std
mov
pop
outs
jbe
bound
outs
or
shl
mov
and
pop
test
into
ins
call
xchg
or
sbb
(bad)
shl
(bad)
xchg
(bad)
shr
jmp
and
int3
daa
xchg
and
mov
fwait
cmps
inc
or
rol
mov
inc
arpl
xor
and
cmc
mov
and
pop
push
pop
scas
fidivr
fwait
cmp
sub
gs
mov
jg
stos
adc
das
mov
or
in
nop
jge
cmp
fiadd
jo
sbb
cmp
mov
cld
xchg
xchg
test
nop
and
cmp
mov
mov
xor
in
popf
jb
push
mov
loop
cmp
mov
arpl
pop
mov
jnp
retf
leave
and
loop
push
dec
ret
xchg
push
cmps
loop
dec
and
mov
repnz
in
cmps
or
stc
mov
mov
jg
in
push
inc
mov
lea
or
(bad)
test
dec
and
adc
mov
outs
cmp
xor
jmp
pop
mov
call
lds
daa
inc
ficom
inc
sahf
into
jno
mov
(bad)
mov
or
mov
lods
or
mov
ins
jne
popf
call
cmps
test
mov
adc
out
pop
fdiv
sub
inc
dec
loop
mov
or
and
adc
loopne
fsub
in
cli
xor
into
(bad)
jg
adc
es
shl
push
aam
mov
sub
lahf
add
mov
cdq
scas
push
dec
sbb
cli
lea
add
mov
in
mov
jge
sbb
(bad)
not
stos
mov
cmp
and
mov
fist
dec
dec
(bad)
nop
or
push
mov
pop
rcr
xchg
es
and
xor
lahf
xor
sbb
ins
shr
dec
pop
cmp
dec
pop
xchg
into
xor
scas
pop
enter
mov
retf
cmc
adc
inc
cmps
shl
push
pop
fcomp
icebp
pop
in
xor
xchg
inc
icebp
cli
mov
inc
and
call
sbb
jle
jo
dec
push
into
pop
ret
out
jmp
xor
jb
dec
inc
jle
fist
push
cs
push
mul
push
cwde
mov
enter
mov
sub
pop
out
mov
cmp
out
(bad)
dec
ds
or
jno
dec
in
cmps
add
push
jge
imul
retf
icebp
lods
sbb
retf
adc
xchg
xchg
cmp
jmp
jno
mov
adc
xlat
mov
push
mov
rcl
mov
and
ret
test
shrd
leave
pop
add
xchg
cwde
jae
push
dec
xchg
xchg
pop
and
fwait
es
and
sub
xchg
ja
jg
mov
es
inc
add
popf
not
fwait
and
push
sahf
mov
add
hlt
cmps
add
xor
stc
cmp
popf
dec
aas
jns
mov
idiv
add
fnsave
xchg
iret
push
dec
cwde
shl
in
call
jle
jae
inc
test
enter
ins
jmp
pushf
hlt
xor
sub
xor
push
jbe
push
pop
lds
or
xchg
xchg
test
retf
stc
push
sbb
push
inc
data16
xchg
mov
leave
add
dec
pusha
out
fwait
push
dec
out
push
xchg
mov
push
das
(bad)
sub
pop
jecxz
push
jmp
cwde
sub
nop
mov
jmp
pop
push
sub
mov
das
cmps
adc
mov
mov
add
mov
test
scas
fnsave
jg
mov
mov
into
cmps
pusha
push
sti
imul
shr
out
xchg
xor
cli
(bad)
push
jns
scas
jp
mov
lods
jmp
push
mov
cmps
mov
in
sub
sbb
and
xchg
ss
lods
stos
inc
or
push
in
jmp
outs
push
clc
or
add
stc
inc
add
xor
mov
jnp
mov
ret
test
inc
scas
xor
sub
lds
test
pop
arpl
inc
mov
ds
(bad)
stos
test
daa
sbb
(bad)
out
dec
(bad)
mov
ret
pop
mov
jno
or
test
mov
nop
dec
fwait
mov
pop
sub
add
mov
popa
mov
inc
enter
test
inc
xor
cmp
xlat
test
out
cs
in
fwait
mov
mov
push
jbe
mov
in
xchg
rol
cmp
nop
std
ret
loop
add
pop
loopne
dec
mov
cmps
ins
pop
xchg
sahf
in
adc
loop
call
leave
fldenv
xchg
and
retf
sbb
fbstp
jmp
aad
cmp
(bad)
mov
push
(bad)
xchg
or
rcl
xor
call
inc
iret
sub
rcr
and
mov
jmp
retf
cmp
and
jno
jbe
push
addr16
popa
jecxz
imul
imul
das
inc
xchg
hlt
and
sbb
loop
(bad)
mov
ins
inc
idiv
stc
push
xchg
xor
jns
aas
or
xor
iret
les
rol
dec
fdivr
mov
mov
jb
dec
aad
pop
mov
movs
sub
popf
sub
xchg
cmps
dec
jle
and
out
add
lock
mov
daa
add
dec
pop
ss
mov
xchg
sub
test
sbb
cwde
add
out
dec
fcomp
push
(bad)
sub
jle
lock
push
loop
mov
test
push
pop
daa
or
lock
xchg
push
adc
add
addr16
in
cmp
sbb
mov
mov
xor
int
jge
sbb
jmp
aas
test
push
xlat
mov
adc
mov
mov
or
sbb
mov
push
imul
sub
push
cmp
jb
(bad)
loope
mov
jbe
ja
test
dec
stc
ret
mov
lods
mov
sbb
pusha
out
retf
popa
lods
sbb
jmp
ret
or
or
mov
xor
push
arpl
jg
sbb
push
push
out
bound
jle
(bad)
call
loop
xor
and
hlt
mov
mov
push
cmp
jns
sbb
mov
fild
into
mov
sti
lahf
and
scas
lock
or
jmp
out
rcl
out
mov
push
adc
aas
adc
mov
pop
add
cmp
movs
jg
sbb
adc
pushf
and
inc
je
jb
shl
mov
movs
mov
icebp
out
sbb
and
inc
ins
and
mov
(bad)
cmp
pop
inc
shr
push
stc
loopne
out
xlat
mov
hlt
imul
xor
push
mov
out
out
(bad)
mov
lds
scas
lea
pop
loopne
(bad)
fstp
cmps
dec
inc
mov
cmps
ret
push
xlat
jmp
pusha
sbb
sbb
lea
dec
cld
test
add
cmp
and
pop
rol
out
sub
pop
pop
xchg
jl
jmp
or
(bad)
pop
ror
(bad)
outs
test
or
js
not
movs
imul
repz
inc
pop
pop
call
iret
adc
leave
xchg
ret
jb
sub
jecxz
add
pop
push
and
test
in
(bad)
int
xor
cmc
lds
data16
clc
retf
je
outs
adc
cmc
inc
movs
mov
pop
mov
cmps
nop
(bad)
sti
add
int3
sub
jmp
js
call
mov
mov
(bad)
and
daa
pop
sub
loopne
int
adc
shl
aas
mov
rol
xchg
in
mov
xor
mov
repnz
pop
mov
mov
ds
rcr
mov
pop
ds
pop
pop
jmp
push
mov
dec
inc
shr
or
mov
stos
cld
mov
std
lods
ss
mov
xor
(bad)
sub
cs
in
push
adc
ret
jne
mov
mov
ins
jl
adc
xor
lds
leave
ja
xchg
cmc
je
pop
xor
sub
call
mov
icebp
leave
mov
mov
adc
mov
mov
iret
fwait
mov
lahf
into
mov
std
cmp
lock
and
mov
in
and
outs
dec
add
shl
scas
adc
(bad)
gs
scas
fs
sub
sahf
xor
(bad)
sbb
out
mov
jb
out
ficom
pop
mov
pop
scas
iret
jbe
cmc
ds
js
mov
pop
test
xor
and
outs
cmp
cli
jg
or
cmp
pop
fs
int
popf
sub
sti
es
(bad)
sbb
fs
mov
and
fimul
mov
cmp
lahf
daa
mov
sub
mov
pop
sub
xchg
ins
fistp
enter
mov
idiv
push
aas
js
cmp
ins
inc
mov
shr
imul
pop
(bad)
in
adc
xor
pushf
rcl
ins
cmp
pop
jge
(bad)
pop
call
xchg
xor
je
sbb
es
fadd
mov
call
sbb
(bad)
out
sbb
movs
add
addr16
repz
addr16
(bad)
rcr
fidiv
xor
aad
xor
ds
push
fidiv
int
dec
sbb
push
lods
xchg
mov
loope
out
sbb
adc
jmp
mov
push
(bad)
mov
lahf
mov
mov
and
adc
and
xchg
and
inc
sbb
icebp
sub
sbb
jnp
mov
in
pop
clc
or
pusha
outs
rcl
or
in
push
sar
ss
retf
cmps
aam
shr
and
cmp
sub
lods
fwait
cmp
mov
data16
jge
pushf
jg
sbb
mov
mov
jl
mov
mov
popa
ds
aad
retf
jmp
mov
adc
mov
enterw
stos
(bad)
jnp
xor
outs
repnz
inc
aaa
xchg
rcr
stos
cmp
push
push
inc
outs
push
test
add
imul
jnp
idiv
jge
inc
(bad)
retf
ss
add
jl
sub
test
ja
test
out
xchg
in
xchg
inc
(bad)
add
push
xchg
pop
jmp
daa
into
sbb
push
and
inc
add
jmp
pushf
fisub
test
sbb
(bad)
cwde
inc
push
pushf
pop
ins
jecxz
in
xor
ror
dec
adc
cli
je
sub
sbb
repnz
xchg
sub
jno
mul
in
adc
stc
ss
stos
pop
cmp
sub
mov
jmp
mov
xor
mov
(bad)
cwde
mov
cdq
xor
push
fimul
test
nop
iret
push
ss
out
cmp
mov
inc
(bad)
jmp
ins
mov
xchg
inc
adc
adc
in
adc
fisttp
pop
scas
pop
mov
jmp
fcomp
aaa
jg
push
adc
push
fild
jb
fiadd
in
dec
inc
nop
mov
aas
or
add
xor
leave
dec
jno
push
cmp
(bad)
jne
(bad)
pusha
sub
pusha
(bad)
cld
add
mov
ret
stos
mov
adc
adc
rol
test
and
(bad)
(bad)
out
cs
sub
xchg
cmp
and
pop
imul
sub
inc
mov
(bad)
cs
xor
mov
scas
sbb
pop
dec
test
cmp
sbb
iret
into
(bad)
adc
pop
mov
push
fs
jmp
add
in
mov
rcr
jmp
jle
(bad)
cmc
jmp
pop
xchg
dec
jne
inc
ret
sub
adc
jno
xor
rcr
xchg
pusha
sbb
lock
xchg
push
mov
inc
outs
mov
xlat
in
mov
rcl
in
lds
jbe
aad
aam
dec
add
or
jl
into
int
scas
shr
sub
bound
xchg
jne
dec
xchg
retf
mov
adc
sbb
mov
push
pop
jg
les
stos
jo
int
js
in
jmp
cs
mov
cmps
(bad)
ins
sahf
cmp
sahf
pop
popf
jg
call
jecxz
lahf
xlat
sbb
fst
sbb
jb
xchg
(bad)
loopne
(bad)
push
aas
js
addr16
push
popa
mov
jge
add
xchg
adc
rcl
fnstsw
jmp
mov
(bad)
cmp
lods
pusha
jg
mov
movs
scas
dec
in
jp
out
in
or
jo
dec
fcmovnbe
js
pop
mov
leave
hlt
xor
jge
sar
push
jnp
test
xchg
aaa
ins
shl
jne
pusha
cmp
xlat
jo
call
retf
cmp
aad
push
mov
inc
inc
sbb
ret
leave
jns
fwait
ins
mov
(bad)
mov
jg
xchg
and
xchg
ss
mov
pop
fwait
aaa
fadd
nop
addr16
inc
into
adc
pop
mov
retf
(bad)
mov
sbb
fwait
mov
lods
pushf
outs
icebp
aaa
xchg
scas
rol
xchg
add
sub
imul
and
add
or
push
sbb
pop
cs
mov
add
dec
push
addr16
pop
out
out
inc
sbb
shr
jg
sbb
push
data16
cwde
shr
movs
lods
mov
cmp
and
sbb
shl
pop
mov
stos
ins
pop
mov
jecxz
ret
popf
sbb
ins
mov
or
fbstp
mov
out
pushf
pop
push
cdq
jecxz
jns
sub
mov
jbe
cmp
xor
mov
push
dec
into
xchg
cs
xchg
and
dec
or
jmp
aad
push
or
inc
ds
jmp
into
dec
xor
or
shl
mov
ins
sub
enter
loope
mov
xchg
adc
loop
mov
sub
add
pop
retf
dec
js
mov
mov
(bad)
lds
std
jl
(bad)
leave
mov
inc
or
sub
cmp
sub
inc
scas
sub
pushf
mov
push
mov
outs
mul
ds
loop
sub
and
call
push
iret
xor
clc
cmc
add
xchg
cli
call
jne
push
popa
out
out
mov
call
lds
pop
xchg
mov
add
dec
movs
not
adc
jle
(bad)
push
mov
clc
aaa
aaa
sbb
pop
aam
jecxz
cmc
imul
iret
retf
cmps
dec
ja
in
cmp
pusha
jns
or
dec
dec
add
xor
inc
(bad)
test
inc
sbb
sub
jns
dec
sub
mov
or
dec
pop
int
xlat
les
fld
les
iret
out
lods
mov
xchg
loopne
(bad)
cmp
pop
(bad)
push
sbb
shr
cmp
stc
fcomp
xchg
aam
push
cli
sub
scas
in
inc
cdq
movs
outs
(bad)
cmp
int3
(bad)
sbb
clc
sar
dec
fwait
test
ins
pop
lock
outs
xchg
adc
add
or
push
out
xor
add
rep
add
push
test
clc
cmps
xor
cmc
jmp
popa
mov
(bad)
pop
jle
jnp
not
jne
mov
int
and
lss
out
mov
shr
test
pop
shr
repz
fst
rol
loop
popf
ror
call
lahf
and
ret
mov
(bad)
test
imul
adc
and
mov
lea
cmps
xchg
mov
jmp
mov
or
jge
sbb
jae
sbb
push
fsubr
or
sbb
mov
std
iret
fdivrp
xchg
pop
pop
mov
lds
pop
push
xchg
rcr
jnp
shl
mov
pop
inc
sahf
adc
xchg
stos
pop
and
mov
or
fcom
int3
call
rcl
icebp
mov
lahf
cmc
enter
(bad)
enter
in
pop
mov
mov
es
xchg
mov
mov
mov
das
retf
mov
test
fs
mov
jbe
aad
loopne
test
rcl
mov
xor
das
enter
jmp
test
dec
repz
gs
xor
pop
xchg
mov
mov
xchg
sbb
mov
imul
add
push
test
xor
sbb
outs
push
pop
mov
movs
sbb
test
push
mov
call
or
cmps
mov
jg
adc
mov
sub
ret
jge
inc
mov
out
mov
xchg
mov
push
into
mov
(bad)
jg
(bad)
cmp
add
das
cmp
cmp
xor
mov
mov
retf
out
rcl
and
sbb
mov
sub
adc
mov
neg
mov
(bad)
and
addr16
sbb
es
xor
jle
lods
push
mov
lahf
jmp
xor
pop
jmp
jnp
push
(bad)
mov
addr16
jg
and
movs
or
jo
cmp
mov
in
cs
into
xchg
ins
loop
xchg
push
imul
mov
aas
loopne
jl
(bad)
outs
(bad)
shl
imul
jecxz
cmp
mov
mov
in
rol
push
hlt
repnz
cmp
(bad)
loop
repnz
repz
(bad)
fistp
jns
xchg
cmp
inc
sub
cdq
icebp
call
push
das
adc
xor
shr
xchg
or
(bad)
cmp
add
mov
leave
and
jbe
add
test
out
mov
push
jle
enter
push
test
push
push
xchg
lds
fwait
into
inc
or
xor
aaa
add
and
mov
push
cdq
in
push
lahf
ret
jnp
dec
jecxz
inc
cmp
adc
mov
mov
adc
jns
push
fnsave
adc
mov
pop
cmp
cmp
adc
mov
sar
sub
aam
or
mov
xchg
cld
xor
repz
fidivr
mov
rol
add
retf
pop
inc
test
out
in
or
adc
or
or
stos
(bad)
jmp
out
loopne
(bad)
(bad)
xchg
add
mov
dec
inc
leave
lea
mov
mov
gs
inc
cmp
pop
and
scas
imul
or
jmp
pop
mov
mov
cmp
addr16
sti
fnstsw
inc
aas
sti
cwde
sti
mov
push
push
icebp
ror
sbb
sbb
test
pushf
jae
add
mov
cmp
loope
lahf
or
test
rcr
pushf
test
mov
xor
dec
jecxz
adc
jge
out
inc
and
jmp
fdivr
ss
popa
xchg
sub
repnz
jmp
aam
push
lods
and
pop
xchg
xlat
xor
lds
add
mov
fstp
mov
or
mov
lods
mov
inc
test
ins
push
sbb
inc
jl
or
shl
lahf
jbe
ror
jl
ins
sbb
aad
out
xchg
mov
lea
outs
retf
inc
push
loope
es
stos
add
xor
dec
pop
jnp
mov
mov
or
jne
arpl
xor
adc
call
lods
imul
mov
(bad)
idiv
call
push
xchg
jmp
leave
in
call
fmul
jno
add
mov
aad
dec
test
stc
push
or
cld
les
repz
push
in
push
push
xchg
xchg
nop
leave
jl
mov
daa
pop
cdq
mov
pop
(bad)
movs
dec
scas
add
int
xor
es
call
in
push
jbe
aaa
xor
sbb
popa
cmp
jb
mov
push
frstor
cdq
jae
pop
mov
xchg
or
push
xchg
pop
pusha
arpl
(bad)
pop
movs
jl
test
inc
pusha
ror
jp
bound
push
pop
adc
(bad)
pop
add
jnp
and
cmps
sti
icebp
push
dec
ja
fwait
dec
rcl
packsswb
add
jle
fs
and
lea
xor
and
lods
shl
cmp
dec
pop
add
icebp
inc
cmp
push
aam
sahf
mov
push
xchg
mov
aaa
dec
push
aad
retf
rol
fwait
inc
das
es
outs
movs
gs
push
cs
mul
dec
xchg
or
push
pop
adc
in
cmp
retf
push
and
test
jnp
lods
add
and
imul
cwde
push
pop
cmps
loope
cmps
sbb
mov
(bad)
and
cmp
arpl
adc
daa
xor
pop
mov
jmp
dec
sbb
fild
push
cmpxchg
int
je
jae
rcr
adc
sbb
cmp
lahf
(bad)
(bad)
mov
div
push
push
lods
(bad)
sub
cmc
or
fwait
not
mov
adc
lahf
test
popf
sar
stos
sbb
jmp
pop
mov
or
repnz
push
in
dec
add
fs
jnp
jae
xchg
call
in
push
and
xlat
push
jne
std
rol
ins
inc
int3
popa
fsub
mov
fsub
stc
mov
sbb
inc
inc
pop
and
(bad)
mov
pop
sub
dec
retf
mov
popf
imul
loop
and
inc
aad
test
je
jp
jl
aaa
add
rcl
push
out
aad
in
out
inc
inc
or
xchg
add
xchg
movs
popa
push
mov
hlt
fidivr
ret
and
inc
fs
adc
add
add
ret
lods
sti
push
leave
in
stos
xor
inc
pop
cmp
mov
jo
and
(bad)
push
(bad)
arpl
push
or
div
add
inc
sub
pop
nop
mov
and
xchg
dec
ret
packuswb
xchg
pop
add
pop
scas
dec
leave
neg
sub
or
(bad)
sbb
xor
ja
add
cmp
pop
cmp
jl
pop
mov
cmp
repz
fild
cmps
cmp
xchg
call
retf
ficom
xor
jae
adc
mov
push
repnz
mov
dec
dec
fwait
ss
mov
pop
and
and
push
pushf
sbb
repz
push
and
enter
cmp
(bad)
ficom
movs
push
lahf
dec
dec
or
or
iret
ds
and
aam
mov
or
dec
jp
pop
add
add
mov
cmp
rcl
dec
fmul
adc
std
scas
push
std
mov
in
stos
cmp
cmp
data16
push
push
add
mov
cli
fldcw
sub
mov
inc
add
jp
ds
xor
add
gs
xchg
fdiv
and
repnz
xor
in
xchg
lods
or
pop
jo
push
inc
dec
fist
popf
push
jo
pop
pop
test
xchg
xor
das
int
add
call
test
popa
and
bound
xor
push
or
rol
pop
loop
call
or
clc
addr16
mov
dec
pop
idiv
or
ins
cmp
push
ret
mov
adc
jg
ret
mov
add
cmp
jge
lods
test
fisub
and
mov
in
xchg
pusha
pop
and
fbld
mov
cmp
push
cmp
push
xchg
retf
mov
test
pushf
test
sub
inc
or
div
loopne
sbb
inc
out
lock
push
sbb
inc
(bad)
loop
arpl
push
inc
pop
sub
cdq
cmp
mov
sub
ins
imul
sub
sti
or
inc
adc
or
cmp
mov
cmc
imul
and
push
shr
pop
sar
pop
(bad)
leave
arpl
push
test
dec
mov
xor
int
or
pop
mov
jb
pushf
add
push
jae
data16
loopne
add
stos
out
inc
xor
cmc
jb
pusha
sti
arpl
icebp
push
mov
sub
cmps
adc
cmp
je
daa
sub
icebp
addr16
xchg
cmp
js
mov
xchg
inc
jbe
jl
and
test
jnp
dec
jmp
jg
jg
xchg
xor
outs
dec
push
mov
xchg
test
mov
cmp
in
aam
out
push
je
add
fiadd
sub
cmp
addr16
shl
test
or
ds
and
pop
pop
xchg
mov
dec
nop
js
jge
idiv
add
push
sub
fistp
cmp
xchg
in
push
mov
js
test
inc
inc
mov
and
and
jmp
or
add
sbb
fcmovne
std
ins
in
outs
pop
outs
pop
push
aas
dec
ret
sti
push
sbb
sbb
sbb
imul
test
add
sbb
inc
aam
inc
mov
xor
gs
lea
jmp
cmps
loopne
add
iret
fidiv
aas
or
or
shr
mov
hlt
std
cdq
(bad)
and
xchg
cmc
stos
nop
ret
jbe
sub
jge
sub
je
and
repnz
sub
aad
jmp
mov
jmp
loopne
add
daa
push
xor
dec
fiadd
push
pop
sub
addr16
sbb
mov
add
cmc
ror
push
add
sub
sub
jmp
mov
stc
mov
and
xchg
sti
lahf
xlat
ror
sub
dec
stos
xchg
or
fs
leave
xchg
sub
(bad)
mov
or
xchg
out
inc
mov
loope
fisubr
enter
adc
imul
mov
sbb
loop
nop
push
mov
mov
xor
sbb
jle
cmp
in
leave
bnd
retf
lahf
adc
aam
sahf
add
mov
push
out
mov
cs
pop
fs
jecxz
mov
push
test
sub
aad
(bad)
jnp
mov
push
cli
cmp
mov
pop
push
cmc
test
jl
das
push
call
mov
cdq
mov
bound
daa
adc
push
cmp
leave
jns
std
mov
scas
shr
adc
leave
pop
adc
pop
sahf
in
clc
push
popa
sub
fmul
adc
es
out
or
push
push
xchg
mov
fldcw
addr16
jne
jg
add
xchg
mov
scas
dec
ins
add
pop
lods
int
dec
and
das
xchg
push
or
jo
mov
pop
rcr
add
imul
and
in
aaa
fwait
mov
leave
mov
sub
loope
pop
push
out
and
leave
mov
mov
int3
pop
or
push
ja
xchg
ret
xor
iret
(bad)
imul
add
cs
mov
iret
xchg
add
aam
push
mov
std
xor
mov
(bad)
jle
cmc
rol
sub
push
enter
mov
rcr
push
je
or
hlt
mov
add
and
cmp
lea
mov
(bad)
jmp
push
mov
push
mov
sbb
cmp
pop
rcr
pop
sbb
retf
xor
and
jbe
jmp
mov
jecxz
repz
fs
gs
(bad)
test
inc
pop
or
icebp
sub
hlt
cdq
sahf
xor
push
xchg
xchg
sub
pop
les
cmp
mov
jge
das
xchg
jl
das
jge
rcr
das
mov
cmps
mov
pop
nop
xchg
jnp
jno
xchg
jl
dec
adc
js
push
push
addr16
xchg
and
lea
addr16
cmc
adc
add
jnp
ss
pop
ror
and
cmp
jmp
sbb
scas
cld
add
jmp
or
xchg
js
push
addr16
nop
pop
inc
dec
loopne
adc
test
aad
test
adc
iret
mov
and
imul
and
jl
jns
(bad)
mov
shr
xchg
sahf
or
ja
leave
enter
xchg
aad
adc
data16
inc
cli
lods
push
hlt
add
jae
sub
mov
sahf
inc
ins
xchg
out
or
dec
mov
aam
xor
dec
xchg
in
cld
outs
cmp
(bad)
push
xchg
or
mov
repz
mov
xchg
or
and
mov
xor
push
jmp
xor
jp
in
jmp
shl
pop
and
retf
jle
mov
ret
jno
leave
adc
movs
adc
rol
sbb
jle
int3
out
sbb
jno
(bad)
cmps
popa
pop
ficomp
test
stos
push
pusha
jecxz
sub
icebp
jne
dec
out
adc
mov
and
mov
ins
mov
pusha
loope
push
out
clc
adc
push
imul
pop
mov
pop
pop
pop
neg
jno
add
add
jae
xchg
std
imul
cmp
jo
aas
add
mov
push
and
retf
mov
sbb
imul
xchg
(bad)
push
out
aad
sub
push
leave
sub
jl
out
ja
push
sub
call
test
xor
mov
jg
mov
mov
retf
in
test
test
sbb
pop
sub
lods
mov
das
je
xor
mov
and
add
ja
movs
bound
fisttp
fwait
mov
fstp
outs
mov
push
into
(bad)
cmp
xchg
or
xor
xchg
(bad)
retf
mov
in
jbe
ja
push
add
jl
call
cmps
ror
xchg
xchg
cmp
xchg
aad
loopne
pop
cmp
(bad)
(bad)
(bad)
jp
stos
xchg
adc
test
hlt
jl
ffree
sahf
loop
sahf
jno
push
jecxz
pushf
sbb
jno
dec
xchg
(bad)
xchg
(bad)
(bad)
mov
call
or
test
sub
pop
or
imul
retf
sbb
or
jbe
call
sub
addr16
mov
mov
ins
xlat
jg
js
aad
sbb
div
jmp
lea
int3
inc
mov
stos
xlat
cmps
fwait
setnp
(bad)
or
sub
pop
mov
addr16
mov
out
cld
mov
jge
stos
adc
add
or
cmp
push
cmp
mov
in
mul
add
xchg
push
adc
loopne
inc
or
sub
psubsb
sbb
outs
(bad)
hlt
int
jns
cmps
xchg
cmc
sub
mov
inc
mov
je
xchg
ins
test
xchg
lea
sahf
push
adc
(bad)
mov
mov
(bad)
mov
or
rcl
jmp
and
fdiv
dec
or
lahf
lods
adc
rcl
mov
sub
xchg
das
ret
ficom
scas
sub
dec
add
jo
inc
push
dec
adc
pushf
fidivr
inc
popa
dec
imul
sub
mov
test
pop
or
mov
xor
test
lods
sbb
jl
les
inc
push
pop
nop
add
pop
mov
(bad)
dec
mov
ret
mov
add
aaa
fdiv
imul
push
jo
push
lds
(bad)
ins
inc
add
aaa
dec
pushf
mov
mov
jge
rcl
xor
fcomp
call
xor
xor
repnz
xor
sub
rcl
cmp
les
ins
pop
add
out
xor
punpcklwd
scas
adc
movs
adc
push
jg
and
mov
mov
xor
mov
stos
in
scas
xor
test
xchg
add
out
std
inc
adc
adc
mov
mul
fadd
icebp
jge
and
(bad)
cmp
aaa
xchg
sub
fistp
inc
out
push
(bad)
sub
(bad)
dec
stc
push
or
push
int3
cmp
pushf
ins
arpl
mov
outs
sub
loopne
mov
and
shr
rcr
sub
loop
inc
pop
ins
jmp
mov
ret
or
mov
icebp
adc
or
xor
xor
repz
inc
and
xchg
push
jmp
cli
or
jl
rol
loopne
push
add
mov
stc
pusha
aas
frstor
test
push
outs
stc
add
ins
jbe
stos
mov
cmp
out
pop
out
pusha
gs
outs
aad
jno
mul
push
xor
js
not
push
nop
dec
std
mov
push
jnp
push
dec
sub
shr
std
cli
aam
ja
jbe
mov
adc
mov
aaa
loope
icebp
arpl
loopne
add
pop
cwde
pop
fimul
ret
mov
and
push
jp
mov
xor
ins
mul
shl
mov
dec
mov
xor
mov
cmp
mov
xor
jge
xchg
movs
ror
ins
adc
call
or
aas
pop
jg
aam
xchg
and
scas
test
jl
out
lods
dec
dec
jmp
cli
stos
das
or
imul
pop
les
xchg
test
repz
sub
adc
mov
clc
mov
adc
sub
mov
sar
xchg
push
(bad)
mov
enter
psraw
mov
or
test
sub
(bad)
bound
aas
sub
fisub
imul
nop
pop
xlat
inc
aas
hlt
jl
(bad)
popf
repnz
inc
push
dec
adc
fisttp
fcom
sar
repnz
in
mov
pop
cmp
dec
iret
push
mov
cli
cld
and
lods
push
adc
jno
adc
mov
enter
ret
jge
iret
adc
mov
jle
aad
pop
pop
int3
push
cmp
sub
into
cmp
in
add
push
(bad)
mov
adc
push
stos
mov
dec
call
mov
(bad)
xor
jno
sub
jge
pop
add
or
ds
lds
ror
(bad)
test
pop
sbb
inc
imul
xor
loopne
or
stos
imul
xor
adc
addr16
xor
popa
movs
sub
fdivr
clc
cmp
and
(bad)
(bad)
xchg
pusha
cmp
dec
xchg
or
lahf
push
mov
(bad)
dec
cs
fbld
pop
dec
jae
sub
and
dec
loopne
out
dec
pop
xchg
out
cmp
xchg
add
adc
popf
retf
cs
sar
lods
retf
mov
dec
(bad)
jne
mov
rep
lea
add
dec
aad
xlat
inc
aad
leave
lods
xchg
popf
mov
repz
mov
adc
dec
cli
in
mov
mov
test
cmc
xor
xor
adc
adc
adc
adc
mov
cwde
mov
xchg
outs
clc
(bad)
lea
xchg
xor
pop
popa
mov
inc
loopne
sbb
loopne
mov
push
xchg
xor
pop
cs
bound
mul
and
(bad)
jmp
push
ret
sbb
dec
popa
cmp
(bad)
mov
test
call
mov
mov
out
fucomip
mov
push
loope
mov
mov
clc
inc
mov
jle
cmps
push
repnz
sbb
and
xchg
(bad)
xlat
dec
jns
and
jle
ds
push
push
test
fcom
(bad)
sbb
sbb
jecxz
jecxz
scas
adc
mul
mov
aam
stos
jae
inc
jge
test
pushf
sub
cdq
mov
cmp
sub
mov
mov
mov
iret
pop
call
outs
aad
xchg
jp
aad
jg
push
or
inc
pop
cmc
mov
fwait
hlt
xchg
and
lea
jge
mov
mov
les
out
dec
mov
fimul
and
jmp
jb
stos
sub
jae
xchg
add
inc
sbb
(bad)
jle
add
and
out
and
cmp
hlt
es
pop
mov
xor
and
cwde
nop
sbb
out
mov
jmp
mov
lahf
sbb
inc
pop
lahf
dec
ds
sbb
lds
jecxz
in
ficomp
cmp
or
push
cmc
call
std
lods
aaa
cmps
xchg
fcmovbe
shl
sub
retf
arpl
mov
call
bound
or
cld
sbb
pop
arpl
sub
pushf
push
push
call
mov
es
rcr
pusha
in
or
ins
pop
into
mov
(bad)
vhsubps
jnp
xor
cs
push
or
sbb
sbb
mov
jnp
push
into
or
aam
xlat
lods
lahf
mov
into
mov
mov
das
in
xchg
and
dec
xor
nop
imul
rcr
xchg
js
jp
pushf
push
push
adc
and
xchg
ret
push
or
jb
rcr
dec
adc
mov
out
gs
dec
push
jbe
div
dec
or
xor
inc
add
test
les
test
out
retf
sbb
fisttp
cmps
fdivr
cmps
out
push
sbb
jge
mov
push
mov
xor
cs
mov
std
cwde
cmps
daa
movs
adc
and
inc
pop
fiadd
sbb
(bad)
js
in
sbb
mov
mov
js
mov
je
iret
and
imul
and
je
cmc
fmul
pop
aas
enter
bound
mov
dec
enter
sar
ins
xor
mov
imul
cmp
fst
push
add
and
cmps
jle
aam
dec
sti
in
scas
out
ss
mov
jge
lahf
sub
mov
jge
sub
outs
push
adc
out
pusha
fst
jecxz
pusha
stos
dec
ja
jbe
es
jbe
xor
push
jp
sub
hlt
xor
sbb
in
add
push
xor
jge
sahf
pop
pop
pusha
retf
xchg
push
and
pop
jp
sbb
push
mov
cmc
dec
lods
jecxz
sbb
repnz
lds
cmp
out
mov
daa
push
pop
stos
pop
and
mov
(bad)
inc
xor
test
push
ds
and
leave
add
push
clc
imul
aaa
inc
lds
push
mov
mov
addr16
mov
push
inc
test
mov
mov
mov
push
test
in
add
xlat
aas
ds
push
lods
sahf
loop
push
repnz
xor
sbb
pop
sbb
psubb
inc
pop
add
arpl
cmp
pop
adc
into
mov
out
sbb
ja
push
cmps
dec
jns
and
mov
xchg
mov
arpl
xchg
xchg
or
push
and
sti
mov
jecxz
rol
js
out
rol
xor
sub
fsubr
jns
push
scas
push
sbb
add
dec
test
jb
xor
mov
int3
push
adc
xchg
rcr
mov
cmp
dec
push
sbb
test
rcr
dec
int3
(bad)
fistp
rep
xchg
mov
(bad)
cmps
(bad)
mov
cmp
dec
or
(bad)
jle
pop
inc
fnstsw
xlat
cmp
push
mov
lds
call
(bad)
lds
pop
stos
out
xlat
push
sbb
leave
jne
jb
jbe
inc
lahf
test
fwait
add
inc
cli
xor
aaa
or
dec
fidiv
jle
push
mov
add
adc
cmp
stc
out
sbb
mov
neg
dec
jecxz
dec
or
not
pop
cmps
data16
fmul
hlt
sbb
mov
pop
adc
enter
mov
or
xchg
(bad)
jmp
xchg
cmp
inc
or
inc
int
pusha
dec
pop
js
mov
jbe
mov
sub
int3
in
mov
and
repz
fild
rcl
xchg
fcom
cmp
inc
inc
xor
ins
cmps
into
clc
int
ds
pusha
xchg
adc
sbb
les
add
pop
ins
or
js
jo
pop
lahf
cmc
lods
xchg
jp
bound
pop
shl
cmp
shl
mov
sub
dec
push
lock
sub
pushf
inc
mov
stos
push
cwde
mov
dec
sub
push
and
pushf
fidivr
test
fwait
xchg
mov
imul
and
fdivr
or
pop
dec
jle
ret
mov
lods
lea
sbb
ins
xor
push
aad
imul
mov
dec
fnstcw
leave
mov
retf
jno
mov
inc
imul
stos
repnz
popf
cmps
mov
mov
stc
push
mov
sar
sub
adc
movs
sbb
call
adc
pop
cmp
push
push
fdivr
mov
fs
and
std
mov
jae
out
xchg
test
sbb
sub
loope
push
mov
sub
imul
push
sahf
pop
fs
scas
mov
jmp
add
outs
mov
or
mov
(bad)
xchg
movs
ins
and
mov
fisttp
imul
add
ins
stc
pop
mov
lods
mov
xor
outs
and
ret
pop
jmp
pop
sbb
(bad)
sti
pop
inc
outs
xor
or
fcmovu
adc
xor
pop
and
xchg
and
popa
sbb
mov
mov
and
push
les
aas
pop
adc
adc
hlt
jmp
or
mov
js
retf
shr
rcr
sub
pop
retf
xor
mov
xchg
imul
sub
sub
pop
out
pop
inc
mov
cmc
pop
popf
add
mov
mov
add
test
sub
mov
lahf
xchg
out
or
jle
xor
cld
adc
test
neg
icebp
push
dec
mov
test
mov
xchg
cmp
mov
das
nop
mov
lds
mov
popf
dec
jmp
test
jg
ret
stos
xchg
xor
mov
mov
mov
mov
pushw
fimul
and
stc
cmps
mov
or
cmps
or
mov
push
mov
jp
mov
or
mov
and
inc
or
ror
mov
stos
popf
loopne
les
adc
jnp
sar
daa
cdq
pop
jns
add
adc
mov
xchg
test
inc
sub
mov
mov
bound
cmp
dec
icebp
std
pop
fadd
daa
and
dec
js
adc
xchg
ror
fs
lea
daa
call
xor
ret
jmp
xchg
in
pop
or
cmp
cmps
add
cmps
js
cmp
out
adc
and
xor
loope
outs
iret
lea
push
mov
add
call
adc
push
pop
(bad)
out
into
(bad)
jae
in
mov
mov
mov
ins
frstor
mov
cmp
aam
in
push
push
into
pop
mov
inc
rol
es
mov
mov
xchg
lahf
(bad)
push
jmp
nop
or
imul
adc
rcl
outs
inc
std
jbe
outs
dec
fisttp
imul
push
imul
in
xchg
jecxz
mov
cmovl
xor
int
xchg
jb
mov
add
pop
in
lock
je
ret
test
mov
icebp
jmp
jo
call
les
ds
mov
add
adc
xchg
addr16
jl
shl
pop
and
stos
mov
mov
fwait
in
jmp
and
test
xchg
jecxz
mov
pop
inc
pop
mov
in
repnz
out
stos
shl
test
mov
out
or
stos
or
cmps
adc
mov
sar
and
clc
jb
pop
int
arpl
inc
and
push
scas
je
or
in
or
and
std
fld
push
lock
js
mov
jp
xchg
ficomp
pop
adc
adc
imul
and
dec
and
mov
and
ret
mov
add
je
ret
sbb
stos
cmps
push
aaa
push
add
icebp
sbb
sbb
and
(bad)
in
scas
pushf
pusha
stos
hlt
fnstenv
inc
call
pop
addr16
pushf
adc
retf
fnstsw
int
jmp
ins
cmp
xchg
popf
shl
pop
inc
sub
test
push
test
ins
mov
xchg
inc
invd
xchg
in
xlat
and
and
mov
pop
ss
sub
mov
dec
pop
lahf
in
les
and
sub
push
imul
jle
mov
push
popf
mov
jmp
(bad)
mov
lahf
jl
int3
sahf
jle
rcl
or
mov
stos
pop
jge
add
or
int3
pop
dec
shr
mov
test
stos
push
gs
jns
test
push
jmp
xor
movs
popf
outs
inc
sub
mov
outs
mov
xchg
cmp
and
mov
imul
cmp
jns
and
mov
mov
and
jmp
inc
int3
nop
jno
inc
mov
pop
daa
je
or
mov
inc
ins
mov
fstp
rol
or
xchg
cmp
je
test
ret
in
fistp
iret
jae
sar
(bad)
pop
lock
mul
mov
ret
add
cmp
jge
sbb
call
dec
jl
jbe
hlt
adc
adc
add
mov
cmps
ja
sub
mov
pop
leave
es
ss
das
imul
mov
dec
fidiv
add
and
mov
popf
mov
jbe
mov
xor
or
and
imul
out
mov
xchg
jp
pop
mov
scas
dec
or
add
jno
lock
push
pop
mov
jge
ja
mov
jnp
data16
test
mov
cmp
cs
mov
or
xchg
push
and
push
dec
and
jg
cmp
sub
dec
pop
mov
test
sub
pop
and
mov
xlat
retf
fcmovbe
push
add
pop
xchg
mov
cs
fcom
inc
mov
pop
clc
fdiv
popf
data16
mov
mov
(bad)
movs
xchg
pop
fadd
sbb
mov
hlt
and
cdq
pop
icebp
popw
outs
xor
and
xlat
je
(bad)
pop
shr
pop
fs
adc
sti
push
jecxz
retf
hlt
or
mov
pop
(bad)
pop
mov
xchg
jge
push
jns
sahf
xchg
shl
sub
(bad)
ss
cmp
or
jp
jge
sbb
and
jmp
mov
in
outs
dec
fwait
test
sti
adc
bound
pop
idiv
in
sub
jnp
adc
cmp
jns
test
(bad)
stc
loopne
(bad)
repnz
pop
sbb
in
mov
dec
leave
xor
dec
sub
(bad)
fcomip
in
dec
pushf
std
and
je
mov
sub
xchg
or
push
cwde
repz
push
sbb
xchg
inc
push
jns
pushf
cli
mov
add
sub
fadd
out
iret
dec
icebp
dec
test
add
retf
and
adc
cdq
dec
leave
lods
mov
add
lds
adc
cwde
call
nop
sbb
movs
sbb
push
pop
add
imul
xchg
dec
loope
pushf
call
pop
call
xor
fnstcw
scas
test
xor
js
ins
sbb
adc
fiadd
push
jmp
lea
cdq
fcmovbe
sbb
retf
mov
jl
out
jl
cli
sbb
adc
rcr
xor
loop
retf
pop
mov
cmp
and
and
adc
mov
jns
outs
mov
icebp
jns
push
mov
lods
xor
cmp
cli
sbb
add
or
push
mov
dec
jnp
sbb
sbb
sbb
mov
mul
rcr
mov
pop
push
popa
cdq
scas
pop
jno
cmp
rcl
fidivr
pushf
and
fist
pop
shr
outs
into
imul
and
or
dec
enter
push
push
pop
pop
out
pop
dec
inc
cmp
xchg
icebp
popa
loopne
retfw
inc
dec
mov
test
test
jmp
sub
mov
sub
sbb
popf
arpl
inc
push
(bad)
fisubr
push
xchg
and
enter
stc
outs
ror
dec
loopne
(bad)
and
cmc
retf
inc
xor
jnp
ret
push
push
inc
mov
pop
call
xchg
mov
outs
push
hlt
rol
test
push
jbe
rcr
cdq
jbe
sub
mov
call
xchg
push
daa
cmp
inc
pop
adc
popf
iret
imul
repz
pop
cmp
fbstp
jle
xor
nop
inc
push
fstp
push
pop
mov
arpl
sub
xor
push
lods
xchg
jns
hlt
inc
or
daa
in
cmp
cmp
or
and
pop
cmp
lea
into
aas
mov
gs
or
sub
dec
in
popf
je
push
test
retf
rcr
jno
mov
(bad)
sub
int3
dec
out
fcmovb
xor
pop
inc
sbb
pop
mov
dec
inc
je
xchg
out
loopne
mov
add
fidiv
inc
or
aam
adc
adc
(bad)
and
mov
jns
xor
inc
ja
lahf
adc
test
repz
push
dec
inc
jecxz
push
stc
cdq
push
jns
sub
imul
xor
sar
in
js
movs
inc
cmp
(bad)
xor
rol
pop
inc
mov
mov
jae
or
pop
es
mov
push
shr
imul
outs
dec
add
not
shl
xor
stc
push
mov
out
mov
push
push
mov
xor
(bad)
mov
sti
mov
adc
mov
jmp
add
sbb
outs
cs
mov
lds
aad
add
js
in
icebp
pushf
cmp
xor
push
rcl
push
mov
iret
ss
in
push
js
cmp
js
adc
xlat
mov
dec
aad
je
xchg
movs
adc
xlat
cmps
xchg
and
sbb
dec
xchg
adc
fdiv
stos
mov
pop
xlat
int
pop
jnp
out
mov
cmp
mov
dec
inc
movs
mov
add
mov
in
push
and
or
aam
jno
xor
push
push
adc
movs
xlat
jecxz
mov
pop
xor
and
mov
retf
push
mov
mov
in
xor
shr
mov
lea
pop
lods
and
add
shl
shl
xchg
or
adc
add
xor
cmp
or
icebp
mov
xor
mov
or
and
repnz
xor
dec
jp
sbb
dec
mov
xor
cmp
arpl
lea
jno
pop
adc
pop
mov
pop
scas
addr16
inc
jno
loopne
cmp
inc
in
jnp
std
jp
jecxz
jo
push
mov
icebp
outs
sbb
push
push
and
cmp
mov
or
push
data16
gs
and
push
cmp
push
aam
nop
xchg
dec
mov
or
js
adc
(bad)
fadd
pop
adc
inc
fs
mov
inc
mov
fist
and
add
cs
mov
pushfw
das
(bad)
out
xchg
movs
iret
add
out
sti
stc
dec
xor
mov
enter
cmp
mov
pushf
orps
out
pusha
jnp
and
mov
arpl
popf
cmps
test
ins
push
and
inc
adc
mov
or
iret
inc
push
dec
push
nop
(bad)
iret
lahf
in
int
mov
and
pop
and
xchg
dec
sub
jb
sbb
pop
cmp
cmp
jno
push
pop
jg
cmp
mov
test
adc
sbb
daa
shl
or
fadd
and
jbe
cmp
ds
sub
mov
dec
loope
mov
pop
sbb
repnz
mov
jo
xor
or
loop
xor
jmp
inc
in
into
pop
jecxz
and
cdq
mov
and
xchg
adc
adc
adc
into
dec
push
or
xor
ds
push
xchg
adc
sub
mov
(bad)
cmps
movs
popf
(bad)
cmp
or
lods
adc
fnstenv
(bad)
mov
push
add
cs
ins
mov
jbe
push
lods
adc
jb
es
mov
arpl
add
loop
stc
pop
adc
cld
push
sub
leave
stos
mov
dec
adc
out
mov
cwde
jns
rcr
inc
or
adc
mov
mov
lods
ja
mov
push
inc
test
in
mov
sbb
mov
dec
or
leave
inc
(bad)
test
test
out
test
pushf
fidivr
clc
pop
jge
xor
pusha
xchg
addr16
cmp
lds
mov
pop
add
out
mov
add
add
jnp
inc
or
int
sub
call
push
push
pop
fnstcw
push
adc
call
imul
or
int
push
add
xchg
fucompp
stos
or
push
sbb
test
test
out
retf
test
dec
push
fiadd
cmp
mov
xchg
aas
fist
rcl
std
dec
push
and
enter
ret
push
loope
lock
out
jne
jae
push
push
mov
or
add
in
inc
push
sub
inc
mov
cdq
xchg
out
mov
lds
sub
in
mov
inc
push
mov
mov
sub
mov
mov
sahf
fisttp
and
xchg
addr16
xchg
sub
aas
push
(bad)
test
push
or
shr
inc
jg
mov
cli
fld
or
dec
sahf
arpl
(bad)
aas
mov
and
jge
push
mul
cmp
inc
bound
unpckhps
mov
xor
fsubp
inc
clc
pop
lds
and
inc
lods
ds
mov
add
xchg
inc
pop
pop
push
(bad)
push
sub
adc
push
movs
pop
jp
retf
cwde
int
cmps
jmp
jmp
bound
adc
jns
je
and
cmps
and
lods
(bad)
out
je
pop
and
inc
test
add
add
out
(bad)
psubusb
sub
movs
mov
clc
in
sub
scas
jmp
loop
aas
fdivr
dec
std
cmp
imul
inc
fadd
xchg
push
add
push
popw
dec
xchg
mov
div
cmp
xor
dec
es
cwde
adc
inc
(bad)
mov
mov
push
outs
dec
and
arpl
jecxz
sar
jbe
iret
cmp
inc
imul
rcl
sti
sub
and
dec
shl
(bad)
(bad)
icebp
mov
(bad)
test
push
pop
repnz
dec
mov
js
mov
std
call
cmp
or
cld
mov
push
out
fs
jg
cmp
(bad)
dec
rcr
mov
pop
movs
push
inc
and
and
add
push
inc
or
mov
in
cmp
mov
das
cmps
lods
das
jge
xor
std
jne
or
rol
pop
fisttp
mov
or
out
mov
jns
xor
add
and
fidivr
stos
pop
jns
sbb
sub
sahf
add
test
outs
xor
xchg
push
je
mov
mov
xchg
cld
adc
shr
out
mov
jmp
aad
fild
addr16
mov
xlat
xchg
adc
stc
mov
dec
daa
push
mov
xchg
mov
inc
sub
retf
adc
mov
xor
lds
pop
jbe
gs
pavgw
jg
aaa
mov
cmp
out
ss
xor
stos
retf
loop
dec
xchg
pop
mov
adc
inc
jbe
clc
xchg
pop
(bad)
jle
sub
push
rcl
scas
daa
movs
movs
cmps
sbb
mov
sbb
sbb
sti
cmp
or
hlt
stos
out
cwde
mov
loope
dec
stos
mov
iret
loope
sub
inc
sub
loope
cld
das
pop
mov
iret
dec
dec
push
jo
pushf
mov
jnp
mov
fiadd
mov
mov
dec
or
mov
js
loope
push
add
push
clc
mov
jno
xchg
push
xchg
imul
push
xor
xor
xor
inc
imul
inc
clc
cdq
add
retf
je
es
jmp
(bad)
shr
test
(bad)
mov
add
pop
dec
cmp
loope
in
in
lods
add
mov
(bad)
sbb
aad
jge
dec
push
aas
dec
(bad)
sti
lea
(bad)
xor
pop
dec
sub
sub
mov
inc
stc
sti
pop
pop
dec
jmp
xchg
pop
xor
ins
xchg
add
sub
enter
mov
rol
or
jns
inc
ror
lea
mov
in
fwait
daa
and
push
sbb
sar
dec
mov
sbb
scas
popw
rcl
stos
rcr
rcr
retf
sub
xor
ror
(bad)
jne
aam
adc
mov
sub
mov
in
std
out
or
jge
xchg
xlat
add
adc
jno
mov
inc
jp
out
mov
sbb
jmp
mov
xchg
mov
sbb
push
std
xor
add
in
in
loopne
jnp
lock
jne
fdiv
jns
sahf
adc
in
mov
outs
in
outs
call
(bad)
jmp
mov
(bad)
jg
or
call
mov
test
(bad)
pop
aad
push
xor
dec
(bad)
adc
dec
mov
add
xchg
sub
fnstsw
fstp
lods
fisubr
enter
add
mov
(bad)
pop
hlt
and
dec
ret
or
xor
(bad)
cs
mov
inc
call
(bad)
maskmovq
not
push
adc
mov
mov
(bad)
cdq
out
mov
into
out
ror
push
out
cli
push
mov
leave
inc
xchg
push
xchg
sahf
pusha
sub
push
sub
jns
mov
add
pop
xchg
and
push
push
shr
jp
adc
pop
retf
and
mov
jb
stos
popf
push
ja
cmp
xchg
test
cmps
ret
cwde
dec
shl
inc
or
stos
pusha
scas
rol
dec
or
inc
fimul
mov
sti
xor
cld
out
test
fadd
dec
mov
rcl
gs
sub
mov
les
adc
cli
out
(bad)
mov
pop
mov
pop
stos
mov
test
xchg
data16
jmp
pop
lods
stc
sub
scas
rcl
pop
xor
add
jns
out
push
sub
push
aad
lods
retf
dec
xchg
cmp
adc
mov
push
sub
adc
aad
icebp
or
outs
jmp
add
add
fimul
or
fs
ret
hlt
jmp
ss
push
mov
cld
mov
jno
out
jmp
les
jne
dec
es
cdq
add
push
test
int3
xchg
xchg
(bad)
sbb
in
(bad)
mov
push
loop
cdq
sbb
outs
pop
xor
mov
int3
sub
fstp
fsubr
daa
js
icebp
shl
ss
jb
inc
sbb
fs
int3
je
xor
stos
mov
je
neg
lds
cmp
push
aam
xchg
pop
xor
push
ret
cwde
outs
pop
fist
push
jmp
mov
adc
mov
and
repnz
cmps
inc
repz
cmps
sub
popa
xor
out
mov
ins
push
sub
nop
xor
fsub
adc
mov
adc
mov
jg
dec
das
xor
cdq
jecxz
pop
xor
loop
js
cmps
outs
push
cmp
lods
fsubr
dec
push
xor
jle
loop
jl
(bad)
int3
leave
push
xchg
or
push
adc
in
jge
pop
hlt
repnz
outs
jno
dec
and
pop
mov
push
cmp
dec
mov
es
and
jle
jne
push
inc
loop
les
addr16
scas
mov
imul
js
mov
aad
dec
lea
aam
sbb
js
retf
and
xor
cli
int3
pop
sub
ja
addr16
imul
adc
jle
jecxz
adc
mov
test
xchg
cmc
adc
jo
lahf
and
push
lods
jmp
pop
or
mov
scas
cdq
push
rol
xor
test
push
jmp
test
out
ins
enter
jmp
sahf
jmp
ret
cli
cwde
xchg
or
cmps
mov
xchg
cli
xchg
in
mov
(bad)
int3
into
cmp
(bad)
sti
ss
xchg
adc
(bad)
pop
arpl
add
xor
ja
push
fcom
(bad)
pop
fldcw
pushf
arpl
outs
cmp
xchg
pop
cli
mov
dec
and
adc
data16
scas
stos
dec
mov
ja
lds
je
int
pop
sar
test
out
movs
jns
les
sti
mov
jae
mov
pop
scas
sbb
jmp
pop
scas
dec
idiv
int3
jle
aas
std
inc
push
into
jb
xor
int3
xchg
push
push
mov
pop
shl
(bad)
out
out
out
stc
sbb
repz
setae
sub
sti
dec
xor
repz
call
sub
mov
pushf
xchg
loope
clc
adc
mov
sahf
and
add
xchg
dec
adc
dec
adc
test
mov
sub
pop
or
mov
cmp
sbb
int
xchg
fldcw
sbb
jbe
sub
add
imul
dec
jle
or
cmp
mov
and
mov
push
sbb
push
retf
mov
lds
inc
sub
push
jae
push
cmp
enter
sbb
cmc
les
test
or
loop
aaa
inc
dec
push
daa
cmp
mov
mov
pop
fidivr
iret
test
in
mov
cdq
movs
test
push
inc
xor
xor
cmc
xor
pusha
inc
retf
rcl
(bad)
xchg
movs
aad
sbb
or
mov
cmp
and
loope
stos
xchg
es
mov
xchg
pop
add
fidivr
sbb
loope
data16
dec
mov
out
out
push
ret
sahf
push
fldcw
xor
iret
and
movs
clc
add
pop
dec
fiadd
jbe
or
mov
jl
pop
imul
sbb
pop
imul
das
add
mov
shl
call
dec
cmp
sub
clc
je
lea
adc
or
or
mov
imul
rcl
(bad)
cmc
sbb
jnp
fsubrp
gs
push
sbb
xchg
mov
in
popa
cdq
pop
call
inc
(bad)
fcmovb
fst
push
pop
jae
aad
les
xchg
ja
jmp
jae
mov
ds
retf
push
or
jbe
(bad)
pusha
push
xor
shl
mov
or
pushf
shr
sbb
pop
bound
and
shl
pop
sub
cs
mov
lods
or
jmp
js
enter
mov
cs
or
push
dec
xor
jmp
pop
mov
rol
test
adc
imul
jecxz
sub
jge
fsubr
add
add
or
mov
lods
fwait
aad
dec
and
inc
stos
push
mov
cmps
jo
rcr
jno
stos
mov
mul
mov
ror
stos
das
xor
add
aam
or
rcr
and
jg
pusha
and
xchg
cwde
cs
aas
in
xchg
mov
loope
and
xor
jmp
sbb
pushf
adc
mov
lea
retf
xchg
cdq
adc
sbb
mov
test
inc
mov
push
sub
dec
cli
or
(bad)
loope
add
sub
ds
pop
add
pop
pop
cmps
movs
cmp
aam
pop
push
or
pusha
cld
cli
xchg
lods
mov
ins
movs
mov
jbe
inc
push
lock
fnstcw
data16
sub
mov
mov
les
cwde
scas
ss
cld
loopne
(bad)
push
lea
xchg
xor
iret
jo
imul
imul
ja
in
repnz
cmps
add
adc
push
xor
push
and
popa
jae
iret
jne
jnp
mov
lahf
repz
and
jbe
aam
(bad)
std
adc
das
dec
out
pop
push
pop
xchg
rol
inc
pop
in
(bad)
jns
pushf
hlt
ins
push
mov
fistp
mov
in
mov
in
pop
inc
and
imul
jne
imul
into
mov
pushf
pop
push
stos
dec
fistp
mov
add
and
ret
mov
cmp
rol
xchg
sub
xor
sbb
or
out
inc
cld
jno
inc
sahf
mov
push
mov
mov
xor
in
xchg
sbb
out
(bad)
xor
in
pusha
jle
nop
test
mov
shl
fst
pop
dec
pop
(bad)
imul
jp
clc
in
imul
adc
outs
dec
jp
push
js
pop
and
pop
pop
cmp
movs
neg
xchg
xor
call
mov
cwde
mov
mov
jge
adc
pop
mov
dec
mov
leave
mov
pop
xchg
iret
in
cmps
int3
jge
imul
adc
pop
jo
inc
test
add
and
push
mov
les
xor
pop
xor
pushf
mov
dec
lds
add
(bad)
and
sub
hlt
retf
inc
loopne
jp
outs
pop
or
(bad)
mov
daa
fwait
out
(bad)
pop
pop
aas
in
or
iretw
sub
repz
inc
pop
add
or
add
outs
sahf
je
aas
push
fnclex
scas
popf
add
les
mov
(bad)
aad
(bad)
or
hlt
retf
js
sub
xor
add
add
test
ins
lds
out
and
int3
and
imul
pop
mov
push
call
in
popf
in
xor
repnz
ret
adc
xchg
sahf
or
xchg
cmps
adc
pop
lea
add
das
jmp
xchg
sub
jg
xchg
imul
and
adc
xor
push
fdivr
or
jge
(bad)
std
pop
pop
ds
mov
xchg
test
pop
ret
dec
arpl
dec
mov
push
cdq
mov
enter
sbb
cs
or
pop
push
sbb
je
inc
ins
pop
pop
jnp
mov
lock
jge
xchg
lods
cmp
or
push
mov
sbb
xor
dec
fimul
or
int
lea
xor
cdq
stos
stos
mov
mov
cdq
loope
adc
pop
dec
lods
mov
pop
push
imul
pop
fs
(bad)
push
or
and
fldcw
stc
dec
inc
cmc
test
mov
pop
inc
dec
sbb
nop
imul
repnz
aas
jne
dec
cs
jne
repz
pushf
ins
outs
ror
cs
cld
jne
jge
push
or
jge
into
push
adc
int
popa
inc
ins
mov
ret
js
lock
ins
int
xchg
add
dec
or
(bad)
push
call
xor
dec
inc
into
clc
cdq
mov
loope
clc
mov
sbb
leave
shr
or
and
lock
add
iret
pop
aas
or
xchg
fwait
jg
shl
jmp
retf
stc
and
xor
cmp
(bad)
sub
(bad)
mov
rcr
inc
dec
gs
stc
jne
test
cmp
int
f2xm1
mov
or
push
mov
loopne
popa
arpl
(bad)
inc
xchg
pop
pop
loope
dec
test
(bad)
cmc
cwde
(bad)
dec
mov
push
adc
xchg
xchg
ficom
inc
test
pop
outs
outs
(bad)
sub
in
inc
out
mov
pop
enter
outs
adc
push
add
mov
loop
jno
js
xor
(bad)
mov
mov
jae
das
pop
sar
pop
and
daa
xchg
lock
stos
ficomp
jle
fsub
xchg
ret
hlt
inc
femms
push
call
jae
test
pop
xchg
and
das
sbb
lahf
ins
loope
inc
outs
mov
adc
mov
xchg
add
mov
dec
or
adc
cmps
or
out
inc
sahf
lds
mov
nop
sbb
push
or
outs
fstp
dec
and
aaa
inc
ja
jl
jg
mov
mov
mov
sbb
xchg
sub
push
ins
div
je
add
dec
mov
jbe
ror
test
ins
mov
push
or
gs
mov
xlat
push
rcl
in
data16
jle
in
call
stos
jbe
(bad)
sbb
xor
sbb
push
jno
ret
(bad)
into
rcl
shl
mov
mov
(bad)
(bad)
adc
js
movs
retf
cmp
xor
lods
ret
fisubr
mov
icebp
jp
call
or
es
jmp
sub
inc
pusha
cmp
sbb
ds
sub
and
or
sbb
pop
dec
not
out
xchg
in
lock
xchg
adc
pop
mov
mov
rcl
adc
idiv
dec
dec
xor
ret
xchg
or
mov
mov
mov
add
dec
push
and
sahf
xchg
gs
push
inc
mov
test
ror
add
add
dec
lods
sub
shl
mov
hlt
pushf
mov
std
sbb
and
sbb
xchg
inc
aas
shl
push
sbb
(bad)
fcom
jbe
pop
push
popf
ja
and
push
cmps
cwde
xchg
test
fiadd
inc
sbb
cli
rol
lds
adc
jge
xor
lock
xor
push
push
add
iret
or
call
pop
cmp
add
out
sbb
sub
outs
mov
dec
xchg
fdiv
jno
test
mov
inc
aas
stc
data16
sbb
mov
stos
jmp
jnp
popf
lahf
mov
add
ss
pop
adc
jo
and
(bad)
in
mov
pop
mov
and
(bad)
into
shr
hlt
enter
xor
(bad)
adc
pusha
test
aas
dec
inc
and
out
push
aad
loop
xor
addr16
sub
dec
inc
in
push
ret
fwait
arpl
pop
pop
dec
xor
jae
into
or
sub
push
mov
mov
adc
retf
fnsave
xchg
jbe
dec
jmp
mov
push
mov
pop
stos
xchg
or
sbb
xlat
xchg
lds
(bad)
imul
mov
retf
push
call
pop
es
out
xchg
outs
push
mov
mov
inc
push
stos
push
outs
addr16
push
repnz
mov
push
and
push
ret
adc
std
cmps
xchg
enter
iret
shr
adc
and
inc
fsubrp
mul
jl
mov
(bad)
fst
lods
xchg
xchg
adc
pop
push
inc
sub
or
ror
iret
movs
mov
mov
ret
ins
in
in
retf
call
push
inc
pop
ins
movs
mov
and
fimul
push
pushf
fistp
aad
fmul
(bad)
outs
xchg
movs
cmp
and
or
sar
cmp
fidivr
lds
mov
in
sub
add
aas
xchg
pop
pop
mov
cs
mov
out
mov
or
das
(bad)
jmp
enter
dec
fucomp
into
aam
inc
aam
pop
push
cmp
xchg
dec
jnp
ins
push
sub
sbb
sub
xchg
mov
mov
cmp
xchg
(bad)
test
xchg
push
retf
nop
(bad)
mov
iret
mov
cmps
mov
push
sbb
jmp
into
xlat
aas
add
push
inc
or
cdq
cli
out
loop
xchg
add
push
inc
push
jmp
retf
(bad)
sbb
dec
repnz
xchg
in
adc
sbb
pop
jno
adc
mov
cdq
fsubrp
pop
cmp
(bad)
mov
push
xor
or
xchg
outs
push
inc
sub
and
loopne
pop
out
jp
bound
xor
pop
loop
icebp
(bad)
jne
dec
add
fwait
pop
add
imul
pop
push
sub
and
mov
movs
ja
out
fsub
nop
xor
fbld
push
in
add
xchg
mov
sub
push
dec
shl
push
imul
and
mov
pop
xchg
sub
not
call
rol
pop
sub
shl
gs
pushf
leave
seto
fidiv
and
arpl
ins
and
jns
imul
retf
sar
jge
mov
test
mov
xchg
pop
retf
sub
mov
out
xchg
ja
ins
repz
push
inc
int
rol
or
adc
dec
sub
or
push
inc
sar
sbb
jno
out
mov
adc
rcr
mov
test
outs
retf
sbb
add
cmp
(bad)
scas
mov
jl
aas
ret
add
iret
xor
xchg
inc
jle
aad
(bad)
ins
mov
jbe
xchg
mov
jne
fstp
xchg
sbb
aaa
pop
dec
mov
sar
in
adc
cld
ds
inc
sbb
dec
cmc
or
add
mov
mov
xchg
icebp
aad
shl
xor
cmp
xchg
pop
mov
fild
cld
test
dec
sbb
dec
jnp
inc
inc
stos
out
pop
cdq
call
pop
mov
cmps
(bad)
movs
mov
loopne
(bad)
jge
mov
mov
rol
retf
mov
pop
adc
popa
(bad)
jp
rcl
add
mov
push
(bad)
lods
mov
jae
xor
cmps
fidiv
add
pop
pop
bound
push
les
add
es
(bad)
shl
(bad)
(bad)
dec
cdq
in
stos
arpl
test
sbb
fwait
ins
mov
dec
push
push
call
sbb
mov
jl
xchg
shr
repnz
js
fbstp
pop
or
add
cmps
(bad)
mov
test
cmp
dec
enter
sub
repz
sbb
call
cmp
rcr
out
cwde
dec
pushf
test
lea
sub
or
push
inc
sbb
rol
dec
cmp
(bad)
sbb
in
clc
and
cmp
pop
pop
shl
jbe
xor
and
into
push
pushf
add
mov
mov
mov
xor
push
stos
or
inc
ds
addr16
cmp
jo
push
mov
out
lea
call
ds
out
xlat
pop
shl
mov
daa
mov
adc
in
mov
(bad)
dec
jmp
stc
or
or
std
push
jb
test
or
imul
iret
aas
outs
ror
ins
movs
sbb
loopne
cdq
adc
fnstsw
cli
pushf
scas
aad
mov
adc
repz
adc
push
je
aas
push
mov
push
push
fsub
retf
or
push
jmp
lock
out
jo
xchg
add
sub
dec
xor
mov
out
inc
inc
scas
ins
daa
cmp
jp
xor
jno
retf
dec
rol
lds
mov
out
xor
xchg
jbe
cmp
pop
ins
cmps
push
push
(bad)
out
or
jbe
aaa
es
push
lock
cmp
sub
xor
repnz
cli
inc
hlt
mov
sub
add
out
test
retf
aaa
mov
inc
mov
mov
push
cs
call
mov
jmp
scas
adc
mov
mov
les
or
and
cmp
jb
inc
mov
and
ret
sahf
(bad)
mov
jge
les
add
cmc
mov
jnp
mov
icebp
jne
retf
(bad)
fistp
lods
int
lods
push
adc
dec
xchg
mov
out
arpl
pop
mov
into
sub
ret
and
aaa
stc
rol
mov
into
stos
jp
into
dec
shr
and
(bad)
push
lods
clc
mov
sbb
sbb
push
mov
in
nop
cmps
adc
(bad)
mov
fs
in
stc
shl
inc
je
sti
mov
es
and
dec
mov
cdq
or
and
call
ss
mov
(bad)
mov
ins
sbb
rcr
mov
(bad)
sbb
add
or
or
int3
sub
(bad)
shl
jg
push
arpl
push
(bad)
cdq
push
xor
xchg
lahf
cmp
push
jmp
dec
sbb
push
fwait
sahf
test
xchg
rcr
push
mov
xor
push
cmp
jns
sub
outs
imul
out
jmp
out
scas
ret
loope
std
push
ds
cmp
(bad)
xchg
jns
stos
xor
test
add
in
pop
push
aas
movs
lods
ds
dec
out
repnz
jae
ror
pop
dec
jae
xchg
rcl
cmps
mov
mov
mov
fwait
adc
sub
fbld
cmp
xchg
jmp
(bad)
sub
pop
xor
fisubr
xor
cs
test
sub
sub
mov
mov
adc
push
imul
inc
xor
inc
jle
or
mov
pop
(bad)
cmp
mov
sbb
stc
lahf
adc
inc
outs
das
jbe
aad
mov
ja
dec
xchg
sbb
in
xchg
xchg
imul
cmps
mov
int
js
mov
popa
adc
loope
fwait
popf
add
call
push
ins
adc
fnsave
bound
jne
in
out
xchg
call
cmp
dec
dec
ret
mov
icebp
inc
scas
in
sub
cmp
arpl
not
mov
mov
fisttp
push
ins
inc
movs
or
cmc
fsub
push
mov
push
mov
ins
fdiv
mov
in
sub
inc
ins
sbb
test
cwde
daa
xchg
pop
sub
sti
je
sbb
imul
aaa
sub
ds
add
mov
or
mov
dec
call
and
sbb
jl
adc
repz
jmp
add
mov
jecxz
jo
mul
pop
inc
mov
sbb
xor
sbb
dec
xor
add
push
or
xor
and
mov
and
int3
mov
xor
rcr
cmp
inc
add
xor
movs
jae
sahf
cmp
js
cmp
mov
daa
outs
mov
cmp
shr
mov
imul
inc
cmp
repz
mov
mov
leave
into
dec
push
loope
shl
jns
das
mov
dec
mov
or
or
iret
(bad)
mov
push
push
fs
and
test
hlt
cmp
rol
mov
inc
mov
and
out
fidivr
out
dec
pop
xchg
dec
jne
loopne
cs
add
repnz
adc
dec
lods
aam
jp
sub
push
fdivr
pusha
jnp
icebp
fidivr
jl
pop
jmp
cmp
push
sub
popa
pop
enter
cmc
movs
lods
cdq
(bad)
add
loop
push
les
ror
loopne
and
mov
(bad)
leave
and
lea
sahf
add
test
xchg
(bad)
call
mov
out
mov
dec
jne
mov
sti
hlt
sub
cmp
sbb
lods
stos
fist
pop
mov
call
mov
mov
pop
sbb
xchg
cmp
cmps
pusha
adc
(bad)
retf
sub
mov
mov
stos
or
sti
out
sti
cmp
cwde
out
mov
rcl
repz
hlt
rol
lea
cwde
sub
mov
mov
pop
mov
nop
push
cmp
pop
jmp
push
sub
in
stc
fmul
push
jmp
push
dec
outs
ins
mov
push
add
cmp
fchs
loopne
jge
and
sub
aaa
and
push
dec
jge
aad
sub
sub
mov
inc
sti
gs
cmp
fcom
shl
push
(bad)
rcl
sbb
mov
sub
cli
sub
out
push
xchg
mov
cmps
leave
pop
(bad)
fild
mov
popf
mov
jp
clc
add
push
cmp
add
xor
xchg
cmp
loopne
add
xor
inc
push
call
(bad)
sub
mov
push
or
test
jbe
pop
in
cmc
and
out
loope
adc
inc
add
test
dec
jne
cmp
adc
out
pop
test
dec
inc
ret
ins
sbb
jg
pop
push
mov
arpl
popf
add
inc
arpl
test
pop
xchg
pop
or
fld
(bad)
pop
push
dec
test
pop
call
mov
test
(bad)
mov
loopne
inc
xor
sar
and
(bad)
out
cmps
sbb
scas
xchg
enter
push
popf
ror
sbb
outs
push
(bad)
cmp
push
loop
dec
rcr
rol
pusha
daa
push
retf
xchg
test
or
and
pop
mov
out
push
sub
push
leave
mov
adc
js
mov
aad
xor
sbb
out
cld
push
lock
xchg
popa
push
or
hlt
push
jnp
push
(bad)
scas
pop
retf
or
or
leave
mov
icebp
scas
popf
push
movs
stc
ret
movs
mov
jl
push
add
sbb
scas
lods
xor
pop
and
or
dec
mov
push
bound
xchg
push
mov
iret
push
movs
xlat
adc
mov
fld
int3
arpl
cmp
adc
scas
lock
sbb
cmp
cmps
pop
cmp
xchg
test
sbb
push
and
or
bts
retf
sub
stos
mov
add
les
scas
inc
jns
fst
sbb
xor
cdq
pop
in
aaa
cmp
(bad)
mov
aad
xchg
outs
inc
hlt
jb
xor
mov
js
fist
push
xchg
jmp
data16
aam
xchg
div
adc
arpl
ja
jecxz
adc
out
cmps
and
loopne
xchg
push
and
repz
push
mov
mov
xor
pushw
or
mov
push
inc
sub
sahf
das
es
imul
test
pop
shr
aaa
clc
call
aaa
jnp
or
cmps
pop
xchg
mov
sar
push
mov
add
fisub
cdq
sbb
fs
adc
loopne
in
fsub
ror
lds
mov
int3
cmc
adc
xchg
mov
fidiv
mov
scas
sti
(bad)
fcomp
ds
jbe
pushf
addr16
call
inc
stos
hlt
sti
sub
add
in
mov
mov
sub
dec
ror
pop
inc
repz
ret
in
mov
dec
cmp
push
mov
push
and
push
inc
adc
call
xchg
add
mov
loop
add
xchg
or
cmc
xchg
cmp
bswap
mov
mov
add
popf
bswap
fwait
test
stos
or
cmp
cmp
dec
or
mov
push
lods
jae
fdiv
(bad)
ficom
out
mov
es
mov
arpl
adc
push
(bad)
cmc
xchg
int3
pushf
cwde
jnp
mov
xchg
nop
call
pop
in
test
stc
mov
(bad)
pushf
lds
imul
out
(bad)
loop
jl
retf
shr
imul
sub
aas
es
mov
pop
fmul
mov
lods
mov
mov
imul
adc
int3
fdiv
sub
xchg
or
jl
xlat
mov
xchg
cmps
mov
into
sbb
call
ret
inc
jmp
dec
jno
xchg
or
bound
loopne
repnz
adc
outs
fidiv
lahf
inc
push
int
add
stc
pop
les
mov
sahf
lock
fs
int3
in
adc
sbb
xor
xchg
call
loope
iret
mov
jo
mov
test
ret
push
iret
inc
sahf
push
add
push
or
ror
ret
pop
sahf
and
std
test
mov
add
icebp
rcl
aad
test
push
(bad)
out
cmp
aad
and
lods
sub
xlat
and
retf
and
mov
dec
cld
or
fild
xchg
dec
ret
jbe
lds
mov
mov
xchg
add
jo
mov
sub
mov
dec
les
jno
mov
(bad)
clc
xchg
adc
lods
push
jmp
mov
and
push
sbb
call
div
out
les
fs
push
outs
sbb
(bad)
mov
inc
imul
or
in
mov
(bad)
push
xchg
scas
mov
xchg
es
(bad)
xchg
shl
xor
in
mov
ins
aas
mov
int3
(bad)
mov
cmc
pop
mov
sub
fldcw
icebp
dec
adc
mov
hlt
sbb
and
imul
add
ficom
xor
or
sbb
push
pop
mov
lahf
jmp
cmp
cdq
(bad)
push
inc
std
inc
jne
add
cmp
je
and
(bad)
adc
idiv
mov
push
and
mov
sbb
frstor
hlt
stc
(bad)
ins
sbb
and
js
fsubr
or
(bad)
sbb
movs
sub
pop
adc
cmp
lods
repz
loop
mov
imul
dec
adc
mov
mov
inc
pop
xchg
xlat
adc
clc
test
dec
sbb
(bad)
sbb
push
pop
mov
ins
ror
in
repnz
shl
fsub
sub
test
icebp
cwde
sbb
push
in
xchg
dec
mov
cmp
(bad)
scas
mov
outs
sbb
movs
mov
mov
dec
mul
fwait
loope
cmp
xchg
push
xor
imul
int
xchg
push
sub
ss
jmp
xor
jnp
rol
call
xor
les
jmp
jno
shr
cmps
lahf
mov
bound
retf
jecxz
push
xor
rol
cdq
imul
ins
push
not
sbb
jge
or
in
pop
push
stc
mov
xor
les
in
rcr
es
cmps
pop
ficomp
and
xchg
data16
jb
mov
ret
mov
xlat
aam
sbb
les
les
(bad)
scas
xchg
sbb
xor
xor
cmps
mov
fsqrt
div
outs
or
mov
fisubr
pop
push
mov
pop
js
adc
xor
sbb
aad
inc
lea
fwait
jle
mov
stc
cdq
data16
sbb
test
push
cwde
lock
jne
dec
mov
inc
jbe
js
xchg
xchg
mov
loope
mov
es
xor
popa
adc
cmc
mov
or
and
rcl
rcl
dec
fs
xor
mov
js
sbb
enter
rcl
loopne
jne
pop
push
mov
cmps
sbb
mov
mov
outs
movs
push
lods
(bad)
mov
push
xor
test
(bad)
dec
(bad)
mov
and
pop
dec
sub
pop
add
fcomi
xor
daa
scas
pop
mov
test
hlt
lock
cmp
rcr
(bad)
cmc
push
inc
shr
push
pop
mov
cli
and
jp
and
adc
and
jecxz
adc
addr16
inc
xor
dec
fimul
jbe
iret
lods
imul
jle
nop
scas
xor
fsubr
pushf
mov
ficomp
out
push
push
pop
test
xor
mov
imul
loop
sahf
adc
out
ja
arpl
add
arpl
inc
movs
in
stc
ss
nop
inc
repz
dec
inc
push
push
xor
xchg
mov
adc
push
fadd
in
xchg
enter
sahf
adc
push
mov
cmp
(bad)
call
adc
jae
adc
cmp
dec
ds
xchg
push
aam
bound
cdq
xor
movs
fisttp
outs
lods
fabs
mov
or
aad
and
(bad)
fld
pop
adc
jno
div
nop
sub
fiadd
icebp
sbb
xchg
inc
imul
jl
(bad)
cmp
(bad)
and
xor
jmp
rol
jp
nop
push
sbb
ds
jmp
js
mov
mov
or
mov
pop
xchg
or
jp
inc
call
sbb
loop
pop
popf
inc
sbb
shr
test
xor
outs
and
sub
rcr
cmp
shr
cmp
push
ret
mov
mov
mov
push
fbld
jmp
sub
stc
sbb
ins
leave
popa
nop
jbe
xor
push
inc
repnz
loope
loopne
or
(bad)
and
pushf
sbb
sub
cs
pop
mov
adc
int3
pop
inc
scas
xchg
rcr
inc
mov
mov
pop
mov
in
jp
push
adc
cdq
jl
pop
jno
cmc
retf
sub
in
stos
mov
loop
nop
sbb
dec
ret
sti
das
dec
xor
pop
loop
xchg
ins
mov
jmp
jae
sub
faddp
unpcklps
mov
jne
cs
retf
cmp
push
hlt
sbb
(bad)
out
mov
sar
dec
mov
pop
std
jmp
xchg
sti
xchg
sar
push
mov
scas
mov
retf
jp
int
add
movq
mov
pushw
arpl
arpl
mov
sbb
inc
inc
adc
ror
in
(bad)
cli
mov
stos
push
stc
movs
xchg
jp
ja
pop
cmp
adc
sti
ds
push
out
jge
ret
pop
mov
scas
shl
and
xor
mov
pop
pop
sbb
sahf
mov
enter
rol
scas
rcl
adc
imul
pop
in
sti
bound
daa
push
mov
add
sar
dec
jge
aad
in
or
in
sahf
mov
inc
inc
jle
pop
mov
mov
jl
add
cmp
cdq
not
movs
cmc
fimul
les
push
fisttp
cdq
das
and
pop
xchg
mov
cmp
hlt
popa
mov
add
(bad)
push
bndstx
ins
sub
push
sub
lock
push
dec
cld
xchg
sbb
xor
add
mov
dec
lahf
sbb
inc
popf
in
popf
out
push
mov
jp
jno
pop
sub
dec
mov
jns
jne
mov
int3
sahf
das
test
sub
push
int3
(bad)
test
scas
loope
inc
lds
add
xor
test
lea
pop
out
(bad)
ins
mov
and
xchg
sub
xchg
push
add
je
jp
je
jle
bound
stos
ret
sub
stc
dec
push
test
lods
(bad)
fwait
bound
sbb
xchg
pop
pop
std
cmp
ret
inc
adc
into
call
jge
mov
jnp
sbb
pop
xor
dec
stos
pop
test
or
jmp
out
test
daa
jne
sub
jg
dec
(bad)
dec
das
pop
push
rol
xor
or
outs
pop
retf
loope
mov
cmp
ret
out
mov
fs
ds
cmps
into
aad
mov
pusha
cmp
pop
out
adc
fsub
inc
ja
push
sbb
jp
cs
aam
fstp
mov
shr
mov
xor
dec
push
xchg
lods
lock
cmp
in
pop
inc
sub
push
pop
(bad)
retf
dec
ss
adc
add
dec
xlat
imul
(bad)
into
and
call
leave
ret
jmp
or
imul
jmp
into
jmp
mov
fnstsw
test
adc
sbb
jo
push
mov
call
loope
jecxz
shl
in
jle
je
out
add
shl
leave
fld
and
dec
mov
lahf
gs
mov
test
pop
scas
cwde
pop
or
dec
jbe
and
and
inc
adc
jo
sub
imul
sbb
pop
jmp
into
je
xchg
lea
mov
jne
das
sub
and
sub
jmp
shl
jae
mov
arpl
add
add
and
or
call
rol
mov
lods
mov
push
mov
(bad)
add
rcr
inc
aaa
inc
jae
outs
fisub
inc
and
xor
in
jmp
out
xchg
or
cmp
sub
int3
ins
mov
les
jmp
aas
inc
aaa
fld
fst
(bad)
out
sub
fs
addr16
ins
cmp
push
add
ins
in
inc
add
xchg
push
cmp
sub
aad
in
and
lahf
sbb
or
jle
push
mov
(bad)
jg
push
(bad)
sbb
jb
push
jge
das
int
mov
cmp
jmp
ja
pop
pop
out
(bad)
popf
mov
inc
movs
jle
or
jg
jle
sub
(bad)
xlat
fidivr
jmp
test
dec
jo
mov
movs
push
push
inc
scas
inc
adc
mov
push
mov
mov
sbb
data16
aaa
call
in
data16
ins
and
sub
hlt
adc
outs
push
xor
iret
in
xchg
mov
or
gs
xor
or
pushf
mov
aaa
adc
in
inc
repz
shl
add
adc
add
push
mov
adc
fwait
jb
fidiv
pop
jle
mov
imul
adc
jns
neg
jns
aaa
dec
sub
and
add
popa
aam
pop
(bad)
sar
loope
xor
push
in
ins
mov
dec
xor
lods
xor
aad
add
xchg
cs
add
test
xor
push
lahf
sbb
and
inc
imul
sbb
icebp
mov
setb
sbb
aam
rcr
mov
fs
pop
aaa
aaa
out
movs
bound
mov
add
(bad)
in
add
sbb
shl
dec
mov
fwait
mov
push
lods
sub
push
aas
xchg
jmp
cs
sbb
jbe
mov
or
call
cmp
data16
data16
stc
add
cmp
xchg
in
js
rcl
and
cmp
pop
mov
sub
pop
sub
jp
mov
std
fidivr
cmp
sar
not
imul
cmp
mov
in
cmp
adc
je
cmc
dec
pop
leave
aad
test
pop
cmp
mov
pop
xchg
push
dec
sub
aam
jecxz
mov
add
jbe
push
in
pop
movs
test
push
add
mov
shr
or
das
pop
xor
call
mov
std
mov
dec
aas
data16
adc
cli
int
and
mov
(bad)
dec
cmp
rcl
std
(bad)
push
xor
retf
stos
mov
mov
push
iret
jmp
mov
int3
shl
dec
adc
xchg
pushf
cmps
push
cwde
cmp
mov
inc
sbb
jb
dec
cld
shl
loope
popa
mov
mov
push
out
ret
mov
jb
lods
(bad)
mov
pusha
and
lea
mov
enter
fcmovnb
mov
mov
xor
add
arpl
cmp
repz
pop
loopne
lods
inc
xchg
mov
cmp
dec
mov
sub
inc
dec
push
push
jae
jne
inc
clc
push
sbb
out
jp
mov
pop
pop
scas
jp
std
cmc
test
cmp
into
push
pusha
cmc
(bad)
hlt
mov
jae
out
out
(bad)
mov
mov
out
inc
cmpxchg
or
gs
movs
inc
gs
add
push
stc
push
xlat
sub
mov
pop
mov
loop
push
es
sbb
pop
mov
sub
xchg
shl
pop
sbb
push
push
loopne
retf
jae
movs
adc
mov
push
add
push
packsswb
jbe
or
loopne
add
push
scas
test
rol
neg
xor
add
cmc
mov
scas
sub
mov
cwde
dec
add
addr16
stc
scas
mov
fdiv
outs
mov
cmp
js
sbb
pop
push
sar
mov
cmp
and
(bad)
ficomp
xchg
bound
sbb
or
jbe
int
je
fs
sub
aas
in
je
or
enter
dec
sahf
inc
out
test
sub
aas
cmp
inc
lahf
push
movs
rol
fdivr
stos
fwait
inc
pushf
jb
sar
scas
lods
pop
xchg
sub
rcr
test
popa
mov
and
movs
mov
lods
sbb
sub
in
loope
jns
rcl
pop
retf
pop
xchg
sub
aad
xchg
push
adc
pop
cmp
cmp
pop
mov
adc
imul
mov
sbb
inc
fwait
loope
femms
ja
sbb
mov
imul
nop
clc
adc
jnp
inc
jp
jge
pop
outs
dec
iret
mov
xor
rcl
cmp
ror
rcl
(bad)
mov
test
stc
(bad)
jp
jg
adc
inc
fs
jecxz
mul
pop
and
(bad)
xchg
cmp
retf
jbe
fs
dec
xchg
mov
pop
or
mov
scas
cmc
mov
or
sti
retf
cli
jl
adc
jmp
inc
and
mov
cwde
jmp
or
neg
rol
(bad)
in
or
mov
add
dec
in
sahf
test
gs
push
outs
mov
dec
loop
mov
cmps
add
adc
test
dec
sahf
adc
out
xchg
or
or
xor
loope
mov
mov
lods
pop
dec
mov
mov
iret
pusha
ss
(bad)
in
mov
loopne
ss
call
inc
jne
daa
dec
jp
mov
lds
ins
or
jmp
sbb
(bad)
loop
loopne
(bad)
mov
lock
inc
and
xor
mov
in
push
sti
loope
push
clc
mov
jmp
pusha
xchg
cld
sub
xor
jmp
cmp
sub
inc
mov
pop
(bad)
in
fisubr
mov
(bad)
int
out
jno
inc
inc
stc
fs
inc
aaa
mov
sbb
cmp
mov
mov
icebp
xchg
mov
sbb
cmp
add
jle
pop
fdivr
outs
xor
loope
outs
sub
mov
mov
dec
out
stos
pop
inc
mov
push
push
clc
(bad)
out
mov
jo
pop
(bad)
retf
std
aad
inc
jmp
cmps
das
std
sti
les
mov
xchg
(bad)
xchg
out
js
fdivr
stos
inc
aam
arpl
xor
pop
inc
loop
mov
rol
dec
ja
rol
fidiv
neg
add
in
mov
or
lahf
cs
sbb
xchg
nop
adc
ret
arpl
sti
xor
sub
fimul
int
mov
ins
out
push
jp
sub
ins
xor
cld
pusha
shl
fnstcw
cmps
inc
jp
scas
int3
sub
call
xchg
in
push
or
call
jmp
push
popa
call
inc
sub
(bad)
mov
mov
retf
call
inc
dec
sti
test
inc
inc
xchg
or
div
pop
dec
fsubr
aas
xchg
jbe
sti
or
cwde
xchg
add
sub
add
add
inc
loope
xor
out
add
mov
retf
jno
jg
outs
aad
or
sti
lds
mov
mov
icebp
inc
pop
hlt
dec
arpl
xchg
pop
retf
and
movs
mov
call
sub
scas
ja
add
mov
(bad)
jnp
das
push
popf
pop
inc
inc
sbb
int3
jle
sub
pop
cdq
retf
popa
(bad)
jbe
bound
popa
scas
test
or
xchg
int
mov
(bad)
or
lahf
mov
into
cmp
mov
add
jae
in
shr
pop
stc
xchg
mov
jmp
imul
arpl
ds
mov
rcl
outs
inc
in
into
mov
lea
imul
xor
xchg
ss
mov
push
popa
xor
xor
inc
mov
lods
inc
inc
retf
pop
in
xchg
jns
retf
icebp
clc
xchg
jbe
xor
enter
xor
xchg
mov
sbb
pop
push
out
mov
sbb
mov
jmp
mov
stc
lods
ret
jbe
jge
cmp
sub
xor
ins
test
pop
add
(bad)
or
cwde
call
daa
and
fimul
scas
sub
pushf
jmp
ss
add
jbe
dec
clc
xchg
jae
(bad)
jb
lahf
cmp
jge
ror
(bad)
or
mov
ins
arpl
test
ins
(bad)
push
repnz
adc
ins
dec
in
ret
into
mov
ret
loope
mov
in
push
inc
adc
jecxz
dec
shl
mov
shl
jmp
imul
sbb
movs
sub
pop
(bad)
mov
sub
jmp
(bad)
lea
and
push
cmp
loope
jmp
loopne
xchg
ror
sahf
adc
sbb
xor
pop
call
int3
outs
push
push
xchg
cmc
adc
sahf
jg
dec
xchg
je
jae
stos
loope
cmp
mov
sti
adc
jbe
(bad)
hlt
sbb
dec
add
out
in
sub
cli
mov
pop
adc
fisub
mov
movs
add
cdq
sbb
out
cwde
aas
xchg
mov
mov
repz
mov
mov
jmp
jmp
xchg
and
jo
mov
xor
fs
fidivr
clc
int
sub
lock
push
iret
int3
pop
push
mov
xchg
add
gs
mov
sbb
je
lock
imul
(bad)
or
int
jmp
gs
jb
jecxz
shr
(bad)
test
fldenv
mov
jl
cmp
popf
shl
mov
stc
xlat
push
pop
fisub
popf
jecxz
or
xchg
cmps
jl
pop
int
mov
pop
loop
sub
xor
stos
mov
nop
xor
jle
pop
sub
movs
mov
push
fsubr
xchg
sbb
dec
mov
(bad)
js
mov
push
mov
mov
int3
pop
shl
ja
xor
push
sbb
cdq
aad
or
xchg
mov
inc
sbb
pusha
pop
push
aad
sub
rcr
jecxz
mov
push
sbb
jae
jb
inc
popa
jnp
retf
retf
fstp
fld
inc
mov
adc
and
test
sub
mov
or
push
add
sbb
scas
mov
jb
shl
sbb
pushf
stos
test
movs
lods
outs
push
aaa
pop
lea
gs
jg
mov
clc
mov
mov
pop
adc
out
mov
push
mov
pop
sbb
or
es
mov
outs
idiv
daa
jg
inc
mov
repz
xchg
ins
movs
cmp
in
inc
aad
push
pop
out
inc
test
(bad)
jp
sahf
(bad)
and
and
mov
pop
sub
int
or
dec
mov
out
(bad)
adc
jbe
adc
xchg
retf
stos
dec
add
scas
enter
jnp
cwde
outs
cld
scas
jns
iret
ror
push
fisttp
mov
fisub
pop
add
jo
ror
in
and
(bad)
test
jl
sbb
int
cmp
push
mov
push
(bad)
pop
ficom
loopne
lods
dec
pop
imul
fdivp
jmp
(bad)
ins
pop
test
in
in
fiadd
fistp
gs
mov
les
pop
popa
push
mov
loop
scas
and
pop
inc
test
jl
fs
or
ds
xor
shl
movs
les
out
jl
and
stos
dec
xchg
repnz
ror
js
xchg
pop
mov
or
shl
mov
pop
int
push
push
jb
adc
add
cmp
cmc
fst
out
outs
(bad)
jbe
sub
push
test
cmc
aam
ret
ds
fldenv
sbb
call
jg
dec
test
ins
outs
loope
js
xchg
cmc
jge
pop
dec
xor
sbb
inc
adc
pop
call
addr16
clc
inc
pop
(bad)
sar
daa
jge
mov
aad
pop
ja
pop
sbb
imul
ins
xlat
das
mov
jbe
scas
call
adc
repz
ins
xchg
push
cs
icebp
jmp
pop
ins
sbb
and
mov
out
mov
in
and
sbb
and
jbe
xchg
xchg
cwde
out
out
xchg
jne
(bad)
jmp
jno
shl
sub
call
aas
es
jbe
mov
arpl
dec
mov
push
xchg
pop
mov
out
cmp
aaa
in
mov
outs
into
or
jnp
std
mov
adc
pop
jl
shl
dec
adc
loope
jg
adc
movs
jl
ffreep
pop
dec
mov
and
(bad)
add
inc
jecxz
(bad)
jmp
lock
pop
mov
aas
stos
test
xor
mov
rol
(bad)
cld
dec
add
and
lods
sbb
add
hlt
mov
cli
cwde
jecxz
addr16
imul
repnz
xchg
hlt
pop
mov
and
jmp
dec
sti
les
push
sub
cmp
shl
or
cs
add
int3
(bad)
mov
pop
ret
stos
aam
xchg
aam
cdq
sahf
jge
(bad)
bound
js
clc
call
xchg
mov
mov
sbb
movs
popf
(bad)
jnp
movs
aas
test
push
daa
repnz
dec
cmp
cli
repnz
popa
adc
aam
fstp
dec
inc
lea
dec
mov
and
inc
jae
cwde
inc
popf
adc
push
inc
mov
mov
push
sub
in
je
dec
out
add
dec
lea
adc
dec
push
aaa
pop
cmps
lods
mov
mov
xchg
mov
xor
pop
jb
hlt
outs
cmp
stos
retf
jne
sub
mov
jle
aaa
fist
sbb
sub
jae
sbb
mov
sub
movs
xor
jle
mov
std
mov
fsubr
lock
adc
in
push
jle
loopne
pop
leave
inc
rcl
cwde
movs
or
ins
dec
outs
dec
sbb
int
inc
add
mov
mov
test
push
add
xchg
inc
cmp
sbb
adc
inc
cmc
bound
sbb
nop
jbe
imul
xchg
push
sub
push
sar
mov
push
stos
aas
call
inc
push
rcl
cmp
inc
out
es
push
push
jno
pop
dec
test
ss
adc
leave
bound
dec
jo
shl
(bad)
pop
cmp
mov
repz
mov
(bad)
icebp
lock
lahf
(bad)
call
mov
nop
fidivr
std
inc
mov
popa
sbb
jle
mov
mov
pop
mov
sbb
lods
adc
lds
mov
clc
and
sar
sbb
mov
mov
inc
mov
cmc
bound
pop
outs
div
imul
jae
lahf
ror
ins
je
popf
and
cli
icebp
xor
push
adc
cmp
adc
ds
jo
mov
push
mov
sub
add
add
iret
mov
dec
push
pusha
jb
xor
js
repnz
adc
(bad)
in
(bad)
pop
arpl
jae
mov
(bad)
shl
lahf
and
lods
sub
jae
jnp
cmps
dec
sub
jecxz
sbb
lock
data16
cmp
mov
aaa
push
xchg
(bad)
loop
sub
(bad)
(bad)
std
iret
lods
out
jmp
scas
push
push
loope
mov
test
inc
pop
or
pop
test
mov
jge
out
cmc
sbb
rcr
sbb
jecxz
sub
neg
jcxz
ins
data16
inc
inc
xchg
dec
out
or
push
ins
popa
xor
dec
mov
stc
cmp
out
fwait
mov
lock
fmul
mov
inc
cmp
scas
lahf
inc
cmps
aam
push
movs
xchg
push
pop
je
push
add
pop
icebp
(bad)
mov
cmp
in
outs
and
pop
inc
push
inc
scas
add
scas
xor
lock
aas
mov
(bad)
xchg
sub
call
scas
sub
push
or
shl
movs
in
arpl
sbb
imul
ror
call
frstor
addr16
jle
scas
cmps
stos
mov
loope
cmp
in
sti
shl
stos
sub
dec
hlt
daa
cmp
sub
lock
push
ins
idiv
cs
pop
or
xor
pop
or
xor
test
xor
outs
xchg
test
mov
adc
test
xor
aad
test
lds
or
mov
xor
sub
pusha
rol
sbb
ins
das
dec
inc
mov
clc
mov
das
adc
sar
dec
mov
stc
ins
cwde
sbb
xchg
jmp
cdq
fwait
add
or
sub
mov
addr16
push
adc
retf
and
ss
cmp
add
pop
dec
jns
(bad)
(bad)
and
pop
call
pop
inc
jae
daa
stc
retf
inc
jbe
ret
sub
popf
xchg
in
ins
push
pushf
loope
mov
sbb
xchg
hlt
inc
in
repnz
int3
or
mov
fdivr
or
mov
mov
mov
mov
jl
mov
ret
mov
test
pop
fisub
cmp
das
in
xchg
ins
adc
xchg
addr16
add
inc
js
(bad)
retf
fucomip
test
cmp
push
xor
clc
inc
sub
mov
sbb
aam
mov
pop
xchg
mov
xchg
mov
and
les
cwde
popf
daa
and
movs
and
shl
adc
or
movs
mov
lock
(bad)
pop
enter
and
btc
xor
jmp
and
lods
push
or
jge
(bad)
jno
sub
dec
(bad)
sti
inc
movs
dec
mov
addr16
mov
sub
xlat
mov
cmp
je
je
popf
mov
cmc
int3
push
arpl
and
pop
mov
pop
add
push
stc
out
or
ja
ret
lahf
or
jl
lods
movs
stc
mov
dec
xor
repnz
aaa
jp
test
popf
mov
push
and
sbb
cmps
ret
scas
adc
mov
dec
sub
in
mov
(bad)
mov
(bad)
pop
sar
bnd
in
sbb
mov
lahf
stos
sub
push
sbb
das
imul
pop
mov
xchg
movs
mov
sub
adc
sbb
lods
pushf
mov
mov
sbb
test
test
sbb
aas
add
xor
es
or
or
hlt
jle
dec
aad
imul
out
test
sbb
sahf
out
adc
sub
jge
pop
jmp
ins
jmp
dec
ins
(bad)
aad
and
arpl
test
add
call
add
sub
push
sub
sar
imul
imul
sbb
jp
add
test
xchg
push
mov
jno
push
(bad)
fsubr
ret
cmps
ja
ret
repz
xchg
pop
push
test
mov
movs
dec
rol
jae
movs
clc
cmp
pushf
out
retf
lds
stc
loopne
pop
int3
cmps
xor
rcr
add
push
shr
adc
mov
not
push
push
push
or
adc
sbb
lock
mov
fwait
cmp
mov
xchg
hlt
das
pusha
js
adc
movs
(bad)
cld
jmp
nop
test
cmp
arpl
pop
idiv
ds
dec
xchg
hlt
movs
jno
mov
mov
dec
clc
sbb
push
int3
mov
pushf
sub
mov
adc
xor
push
or
aas
ss
iret
mov
xchg
pusha
push
mov
pushf
mov
inc
push
je
cli
sbb
push
jle
pop
popf
scas
loope
mov
sbb
lods
xor
out
ret
in
inc
adc
inc
sub
arpl
cli
ror
ret
pop
jbe
sahf
or
leave
push
mov
mul
pop
lock
sub
push
push
nop
(bad)
(bad)
div
lock
ja
mov
sbb
jmp
cld
mov
imul
test
repz
stc
fwait
or
(bad)
push
xchg
sub
mov
sbb
push
inc
dec
scas
xor
sub
jp
sti
or
cmc
loope
mov
mov
sbb
test
test
adc
xor
rcr
and
call
sbb
dec
inc
xchg
je
pop
or
add
fucomi
add
adc
cmps
out
xchg
sbb
mov
mov
gs
out
out
out
es
fist
mov
clc
into
sub
lahf
out
inc
mov
mov
inc
jo
ins
sar
sar
mov
xor
and
dec
add
sbb
test
and
inc
ret
retf
loope
fwait
repz
mov
mov
xor
fmul
(bad)
pop
jae
xor
outs
xchg
bound
leave
pop
leave
ret
dec
popf
mov
sub
adc
ror
dec
jnp
int3
ds
sbb
xor
mov
shr
(bad)
ins
xor
sar
shr
ins
sbb
or
adc
in
push
xadd
adc
adc
and
inc
ins
out
jmp
(bad)
add
leave
inc
cmp
xor
ins
jmp
cmp
test
in
inc
nop
cmp
push
jmp
je
retf
leave
jb
(bad)
cmp
adc
pop
xchg
shl
push
lahf
mov
jnp
xchg
xchg
in
mov
dec
and
test
dec
mov
retf
cld
inc
jmp
pushf
xor
pop
lock
cmp
fisttp
xchg
or
std
lods
cld
std
inc
jecxz
call
jmp
jge
add
sbb
sbb
pop
xchg
push
in
xchg
mov
rcr
sub
mul
in
arpl
ds
fwait
icebp
adc
cmp
pop
rcl
in
sahf
scas
movs
push
and
mov
jle
xor
popa
adc
mov
sub
out
retf
ss
pop
out
ins
inc
fst
sub
lea
sub
xor
mov
imul
xchg
in
mov
das
mov
out
push
mov
ror
and
out
or
ss
mov
xor
push
fisub
mov
loop
mov
sbb
or
scas
sub
imul
int
add
jae
add
jp
ins
imul
rol
sbb
mov
push
mov
xor
or
sub
jmp
jae
popa
aad
retf
sub
xchg
(bad)
adc
aam
jno
(bad)
(bad)
mov
int
ss
leave
inc
das
cwde
sar
add
xchg
mov
ret
xchg
sbb
jae
ja
push
mov
jle
out
test
sub
dec
aaa
call
(bad)
ins
mov
mov
aas
cld
mov
mov
mov
jg
jo
daa
int
loop
jl
and
repz
in
adc
cmp
jnp
std
sti
add
rcr
lahf
movs
(bad)
cmp
fimul
mov
mov
movs
jbe
test
mov
jnp
mov
ja
dec
imul
cmp
das
ret
pop
jns
sbb
cmp
test
pop
addr16
jmp
adc
adc
adc
sub
hlt
in
ficom
push
cld
inc
push
ficomp
jmp
xor
mov
dec
push
dec
xchg
xor
jmp
outs
ja
les
clc
ss
xor
cmp
pop
in
rol
pushf
dec
mov
ja
(bad)
mov
(bad)
aaa
cmp
cli
dec
jno
push
imul
jnp
push
ins
ror
sub
js
div
dec
(bad)
pop
and
jmp
repz
inc
mov
xlat
and
add
aaa
shl
sbb
arpl
test
mul
mov
daa
repz
rcl
test
sbb
sbb
mov
iret
pop
(bad)
sti
adc
call
sbb
jp
or
fstp
push
add
in
sub
ror
test
popf
fistp
ror
adc
add
hlt
movs
push
fcomp
retf
leave
cs
xchg
cmp
inc
or
xchg
inc
(bad)
in
mov
and
std
adc
mov
call
pusha
add
sbb
stos
pop
jmp
dec
mov
sahf
fadd
push
in
adc
aam
mov
mul
cmp
popf
mul
lea
or
stos
cli
in
push
movs
adc
dec
mov
jns
cmp
out
push
adc
xlat
jle
or
mov
sbb
std
push
shl
call
clc
gs
pop
sub
sbb
sub
or
ins
mov
popa
sub
xlat
or
or
lock
sbb
loopne
ret
(bad)
xlat
fs
jecxz
ret
out
cmp
pop
dec
call
leave
xchg
nop
call
jg
loopne
mov
mov
test
or
add
and
mov
ret
adc
ret
cmp
inc
ja
push
inc
pop
sub
mov
(bad)
jp
pop
push
and
or
aas
fld
stc
jg
add
mov
call
out
sub
pop
and
dec
xchg
aas
aad
out
push
cmps
into
adc
scas
mov
(bad)
out
fs
test
mov
sbb
xor
sub
and
xchg
mov
pop
into
dec
aaa
xor
sub
mov
in
scas
cdq
push
repz
adc
pusha
scas
push
sub
cmp
or
mov
outs
or
pop
retf
loope
pop
push
int3
aaa
inc
in
das
xchg
int3
sbb
loop
(bad)
into
push
xor
mov
call
shl
das
jo
retf
jmp
aas
(bad)
out
aad
jmp
jbe
mov
xlat
shl
jbe
cmp
and
into
inc
xor
mov
out
scas
fs
repnz
jl
dec
xor
mov
xchg
sbb
adc
(bad)
inc
and
or
into
xor
push
add
jecxz
mov
pushf
mov
sub
adc
lds
bound
in
add
xlat
xor
cmp
mov
mov
mov
out
fst
je
fisttp
ss
xor
aad
mov
mov
repnz
mov
mov
fild
xlat
jbe
sub
mov
or
stos
fs
addr16
or
pop
or
sbb
rcl
(bad)
push
rcl
fiadd
(bad)
pop
pop
push
cmp
stc
adc
stos
loope
fs
dec
pop
adc
js
ret
into
sub
push
and
cs
add
sbb
jg
sar
ficom
dec
jnp
push
loope
sub
mov
sub
dec
mov
push
ret
loopne
pusha
pop
lds
mov
inc
cmp
jo
pop
mov
mov
bound
lods
retf
and
mov
ror
mov
dec
mul
push
inc
mov
in
mov
scas
and
dec
(bad)
loope
sub
push
dec
push
xchg
push
jns
inc
aam
mov
jb
xor
add
push
sub
das
jnp
mov
in
mov
inc
xchg
ret
sar
adc
or
dec
push
mov
dec
mul
jae
sub
sub
push
cmc
xchg
fwait
xor
stos
dec
jmp
gs
jns
push
xor
inc
dec
xor
cmp
in
ja
enter
out
sahf
popf
mov
or
jmp
mov
xchg
jbe
call
call
xchg
sub
and
fs
sub
outs
xchg
mov
leave
test
mov
leave
fwait
aaa
ds
or
lahf
out
xor
adc
lock
xchg
push
jns
dec
push
aad
sahf
test
cwde
call
add
inc
adc
or
sub
js
dec
add
add
mov
push
movs
xchg
fbld
lea
sub
xor
xchg
ja
nop
sbb
xor
movups
sti
shl
(bad)
aad
arpl
jmp
mov
sub
push
je
sbb
inc
pop
(bad)
mov
mov
dec
cmp
lods
mov
jmp
push
sar
xchg
cdq
cmp
add
jl
add
mov
push
arpl
(bad)
outs
xor
int3
fsub
inc
stos
into
dec
adc
pop
xchg
pop
add
stos
test
sbb
movs
push
push
xor
add
daa
in
out
mov
or
push
pop
sbb
mov
(bad)
sub
cmp
push
retf
pop
int
xlat
dec
cmp
gs
hlt
mov
sub
lods
dec
rcr
pop
(bad)
(bad)
mov
dec
ins
jo
mov
fst
and
shl
adc
repz
call
(bad)
inc
inc
ins
dec
outs
mov
call
or
sub
sbb
mov
inc
xchg
jp
xchg
lahf
mov
xor
push
scas
sub
dec
mov
sub
repnz
xchg
mov
out
ins
add
cmp
push
fmul
rcl
loop
or
mov
mov
or
cmp
sbb
jae
int3
(bad)
bound
xor
jbe
loope
les
sbb
stc
xchg
das
aam
push
sar
jge
or
inc
outs
or
dec
jmp
add
aad
popa
rcl
(bad)
xchg
aam
jo
xchg
in
push
dec
or
outs
imul
jmp
aas
xchg
clc
dec
or
je
dec
ret
sub
aam
scas
jle
aas
add
mov
or
sbb
int3
pop
or
cmp
(bad)
fld
cmp
aas
adc
retf
xor
movs
pop
movs
shl
dec
lods
dec
mov
bound
jno
sbb
and
in
push
mov
mov
loopne
fisubr
cmp
add
pop
push
mov
pop
or
dec
adc
inc
shl
sbb
add
inc
sub
cmps
stc
xor
adc
ficom
(bad)
pop
xchg
pop
xor
sbb
test
call
shl
add
xchg
imul
imul
dec
movs
xor
in
or
sbb
cli
ins
adc
sub
in
out
test
cmp
dec
movs
rcr
jo
stos
int3
xor
jbe
add
jo
mov
fs
stos
fsubrp
leave
mov
inc
push
cli
sub
push
mov
stos
mov
adc
dec
add
in
stos
and
sbb
mov
pop
call
jmp
scas
push
cld
not
test
or
and
test
(bad)
aam
xor
in
mov
pop
mov
rcr
jle
add
scas
pop
inc
push
cmps
lods
push
in
add
push
je
inc
xchg
ja
sub
cld
jg
(bad)
pop
jb
xchg
jo
lea
mov
movs
pushf
and
out
mov
pop
cli
inc
or
call
call
push
xor
push
ss
xor
ins
and
(bad)
out
cmp
dec
(bad)
out
or
push
clc
mov
add
jge
pop
pop
mov
add
repz
gs
dec
mov
dec
test
mov
inc
inc
mov
out
in
loop
jge
jg
push
es
push
int3
sbb
lods
out
call
push
movs
push
aas
(bad)
push
xor
push
int3
mov
js
jg
or
pushf
add
outs
arpl
xor
cmp
cmp
ror
dec
jl
and
sub
ja
add
sub
movs
retf
mov
inc
xor
js
aad
fst
adc
ins
xchg
xchg
ins
mov
jge
xor
cwde
sbb
out
xlat
sub
push
xchg
jge
enter
or
lods
dec
shl
inc
lods
loop
add
mov
push
jle
fidiv
(bad)
aaa
inc
out
cli
popf
xor
test
js
out
xchg
(bad)
sti
xor
mov
sti
xor
out
ins
dec
push
lds
ficom
xchg
ret
dec
cli
cli
dec
sbb
dec
mov
scas
sahf
mov
mov
jnp
or
or
jno
sti
cmc
mov
(bad)
mov
das
pop
mov
push
mov
daa
shl
rcr
adc
lock
and
sub
sub
add
int
cmp
ds
inc
xchg
sbb
adc
in
pop
arpl
stos
outs
jl
adc
scas
shr
lods
iretw
scas
ja
movs
aad
lahf
outs
sbb
(bad)
xchg
sahf
outs
(bad)
(bad)
mov
push
ins
inc
xchg
cdq
push
cmp
xor
mov
test
jle
movs
and
xor
push
lock
gs
ins
(bad)
mov
pop
punpckhdq
jae
lahf
sub
ror
mov
cs
repnz
jbe
call
imul
jg
cmc
push
test
pushf
sub
add
mov
pop
fsubp
iret
fist
cmc
sub
jle
test
dec
add
and
test
pop
and
(bad)
ror
pop
mov
xchg
mov
addr16
xchg
mov
jbe
inc
push
popf
mov
ja
rcl
imul
add
cwde
adc
in
aas
pushf
mov
jb
retf
lock
jmp
mov
ficomp
jmp
lock
imul
mov
inc
rcr
aas
jg
inc
jge
scas
inc
jne
mov
mov
lock
mov
cs
lea
dec
push
fcomip
cmp
in
mov
push
ss
je
in
fxtract
mov
lahf
jno
leave
outs
adc
mov
push
mov
ins
in
ror
ins
dec
pop
ror
adc
push
pop
gs
lock
out
cmp
mov
and
cmp
sahf
cmp
jp
jecxz
outs
push
cmp
popf
sbb
imul
or
inc
ret
sub
fwait
mov
or
pop
outs
or
adc
fcom
jmp
xchg
mov
jmp
dec
(bad)
(bad)
sub
fldenv
pusha
xchg
call
push
push
or
push
pop
clc
cmp
stos
ja
xor
mov
out
fwait
cmp
movs
leave
into
jnp
push
jno
fimul
pushf
ret
cmp
mov
outs
repnz
int3
ret
stos
test
(bad)
sahf
movs
mov
inc
inc
add
mov
cdq
int
xchg
imul
cmp
mov
pop
dec
movs
dec
dec
aad
in
or
sbb
mov
push
sub
sti
push
in
and
mov
repz
sub
inc
inc
in
cli
nop
(bad)
in
rcl
clc
xor
sub
pop
jg
mov
xchg
push
push
pop
mov
xor
or
repnz
outs
(bad)
div
and
fsqrt
xchg
cmps
jle
fld
push
or
idiv
fld
sbb
add
leave
fcom
fadd
fadd
pop
cmp
adc
mov
dec
test
sbb
and
jecxz
daa
je
or
sbb
dec
ret
(bad)
xor
jl
mov
cld
xchg
and
addr16
ins
sti
mov
dec
pop
inc
sahf
ret
sbb
or
test
dec
mov
xchg
jbe
imul
jne
add
xor
aam
lahf
inc
mov
xor
out
jbe
mov
jnp
aas
jmp
jns
xor
push
mov
inc
test
ins
test
sub
out
sti
push
imul
out
and
cs
out
mov
js
mov
out
push
nop
cmp
xor
sbb
shr
jae
pop
sub
mov
inc
test
mov
pop
inc
cwde
xor
mov
mov
sbb
mov
cmp
cmp
daa
shl
and
loope
and
jae
js
retf
sahf
pop
ds
call
sub
inc
out
mov
std
dec
lahf
pop
lea
or
pop
add
retf
pop
jle
and
inc
mov
cmps
cmp
inc
pop
cmp
inc
daa
retf
sbb
jg
test
cld
add
push
cmp
rol
jmp
ret
xor
push
cwde
pop
add
rep
inc
(bad)
mov
jno
lds
mov
pop
retf
imul
or
(bad)
cwde
jb
call
xor
les
dec
adc
(bad)
pop
inc
mov
dec
neg
push
inc
add
adc
push
test
outs
xchg
dec
fcmove
adc
out
hlt
mov
(bad)
ret
icebp
dec
dec
iret
test
ror
ins
cmps
sub
movs
pop
push
ret
adc
pop
popa
mov
xor
dec
aaa
ret
dec
pop
cmps
pop
jmp
ror
xor
stos
jecxz
pusha
pushf
and
movs
retf
ds
jmp
retf
loopne
popf
and
mov
push
sbb
(bad)
rol
call
mov
add
rol
inc
sub
xlat
jp
push
addr16
jp
mov
gs
mov
mov
(bad)
jp
add
mov
das
aaa
pop
mov
sar
jne
push
imul
jg
shr
retf
push
adc
push
mov
mov
loopne
cmp
mov
cwde
lahf
outs
cmp
retf
daa
outs
rcr
add
popf
and
mov
fidiv
shr
mov
icebp
cdq
fwait
dec
fstp
adc
mov
(bad)
jmp
rol
inc
outs
fwait
mov
not
dec
stc
cs
push
jmp
inc
les
idiv
pop
div
xchg
ds
inc
mov
and
into
sti
push
pop
jbe
mov
push
sahf
test
pop
dec
mov
in
adc
call
push
das
lock
mov
test
or
in
imul
(bad)
sbb
mov
pop
retf
or
push
mov
push
xchg
lock
mov
and
ret
popa
cmps
mov
movs
fdiv
fist
inc
call
xchg
fdivr
pusha
std
ss
bound
retf
mov
repz
jo
mov
lock
mov
cs
bound
(bad)
sar
jb
and
outs
daa
hlt
and
pop
loope
ror
add
or
mov
cwde
push
icebp
mov
sbb
sub
inc
test
es
push
stos
mov
shl
sbb
jmp
loopne
or
xchg
cdq
int
(bad)
push
mov
dec
and
jmp
pop
jnp
dec
inc
(bad)
jmp
or
popf
outs
or
test
(bad)
fcomp
out
addr16
mov
cwde
fs
stc
jae
je
push
rcl
add
in
pop
repnz
or
mov
or
xor
in
add
lock
pop
jbe
out
jae
fmul
sub
pop
movs
sahf
sti
out
and
movs
inc
lods
out
lods
dec
ret
dec
adc
or
loope
lods
push
fmul
icebp
push
sub
push
push
and
push
in
dec
outs
push
dec
jl
aaa
out
jne
test
shl
inc
xor
enter
or
mov
mov
jg
pop
stc
adc
ss
mov
mov
push
dec
or
cmp
push
bound
pop
ins
out
cli
aaa
sahf
cmp
test
add
push
add
sbb
inc
rol
pop
vpsadbw
jmp
cmp
mov
xchg
jmp
int3
xor
push
adc
or
retf
pop
sbb
push
retf
mov
fwait
pop
push
sub
sbb
mov
movs
jns
retf
scas
(bad)
pop
imul
cmp
and
or
leave
mov
xchg
mov
aam
(bad)
rol
xchg
fst
aam
inc
(bad)
sbb
push
les
sar
push
test
mov
ret
push
pop
add
sbb
mov
xor
xor
fdiv
daa
mov
xchg
cmp
jp
sbb
call
or
mov
sub
data16
lock
sbb
push
in
movs
pop
jnp
push
pop
loopne
mov
or
or
clc
inc
scas
loope
imul
jb
xor
stos
stos
popa
scas
pop
mov
ss
lds
or
cmp
add
fs
or
adc
mov
(bad)
mov
xor
jmp
dec
js
and
xor
inc
adc
aad
and
icebp
shl
sar
adc
std
cmp
jnp
dec
cmps
iret
lods
mov
cmp
cmp
cmps
push
es
test
pop
xor
data16
jb
in
and
jae
or
mov
mov
sahf
or
push
pop
ret
jne
push
scas
mov
add
bound
in
dec
xchg
adc
xor
outs
out
push
push
fldenv
js
and
lods
ds
rcr
or
pop
or
popf
push
dec
hlt
jb
cdq
aam
jg
dec
push
frstor
andnps
out
add
sahf
je
addr16
adc
push
or
pop
inc
push
jnp
sub
pop
sbb
scas
daa
xor
scas
pop
out
ja
jge
push
dec
jl
test
fwait
lea
xor
imul
aaa
xchg
pop
mov
es
pusha
scas
jb
sbb
pop
in
or
sbb
sar
push
push
push
outs
mov
add
movs
mov
stos
repz
sbb
int
aad
pushf
inc
sub
lea
xchg
jl
adc
scas
pushf
int3
jnp
mov
aaa
pop
or
and
leave
adc
into
and
cmps
push
movs
sbb
(bad)
scas
push
or
ins
ja
fldenv
push
add
mov
sqrtps
mov
or
jne
sbb
xor
push
js
imul
sbb
push
mov
loop
mov
push
pop
inc
ss
ret
xchg
addr16
cmp
arpl
call
cmp
sbb
shl
inc
mov
loop
imul
inc
fnsave
sar
dec
or
cmp
icebp
sti
xor
hlt
loopne
xor
ror
push
ffreep
clc
outs
sbb
jmp
sub
or
fwait
mov
ja
addr16
shl
lods
dec
inc
or
sub
pop
mov
jmp
lea
xchg
cmp
cwde
repnz
(bad)
fisttp
pusha
jne
push
(bad)
ins
stc
lods
sti
movs
pop
cmp
and
xlat
test
jl
xchg
xchg
and
arpl
inc
stos
pop
pop
xchg
inc
and
fs
inc
ds
mov
fsub
dec
adc
loopne
or
call
push
inc
pop
fisttp
in
push
jne
xchg
xor
mov
test
aam
in
je
adc
test
push
mov
ja
sti
retf
in
movs
add
xchg
push
xor
cld
jae
add
test
mov
xor
inc
ins
pop
sub
sbb
mov
pusha
daa
push
ss
xor
pop
in
push
ret
js
out
mov
(bad)
stos
mov
inc
xchg
dec
pop
mov
jp
aad
out
shl
adc
icebp
out
or
movs
pushf
inc
jecxz
fucomip
outs
jnp
aam
jae
repz
or
dec
loopne
pop
outs
aas
(bad)
iret
or
dec
arpl
xor
retf
mov
popf
bound
shl
jg
stos
sar
lds
cs
aas
jae
and
shl
push
push
test
xor
inc
lea
(bad)
add
out
mov
rol
dec
dec
push
fstp
inc
in
pop
fwait
sbb
popf
sbb
and
ins
div
aaa
pushf
pop
add
or
iret
dec
push
mov
cmp
ins
and
loop
or
push
pop
adc
sub
add
(bad)
fisubr
into
loop
test
sbb
mov
aas
aas
fstp
leave
repz
lods
or
jns
mov
rcr
aam
aad
sbb
ds
fnsave
xor
adc
mov
leave
xchg
pop
aas
pop
inc
fsub
mov
aam
lods
int
test
xor
(bad)
(bad)
dec
adc
mov
push
out
xor
mov
mov
(bad)
sub
cmp
repnz
clc
(bad)
scas
aas
xchg
sar
jg
loop
xor
push
cmps
xchg
add
into
push
mov
cmps
sub
push
mov
mov
xor
add
and
fbstp
mov
neg
mov
test
or
enter
stos
sub
xor
sub
cmp
lods
ret
xchg
push
xor
mov
ins
mov
xchg
pop
movs
xchg
ret
idiv
(bad)
pop
cmp
sti
clc
xor
vsqrtss
xchg
xchg
and
js
adc
lahf
xchg
or
lock
sub
inc
icebp
mov
cmp
push
js
icebp
push
add
xor
stos
pop
shl
mov
mov
in
out
mov
arpl
inc
imul
or
sbb
ret
retf
mov
adc
xor
das
pop
adc
xchg
cmp
mov
std
mov
sbb
fadd
mov
and
dec
call
inc
add
add
push
lock
(bad)
shl
dec
test
add
gs
mov
test
jbe
lea
(bad)
arpl
or
inc
popa
jbe
and
sub
adc
mov
or
mov
lds
loope
frstor
sub
fldenv
add
mov
(bad)
jae
cmc
or
in
scas
ret
pop
push
cmp
pop
lea
xor
push
inc
inc
movs
lea
fs
push
fcmovnbe
dec
and
push
sbb
and
bound
(bad)
rol
or
cmove
dec
and
mov
push
int3
fidiv
xchg
iret
mov
movs
jnp
in
cmp
push
lock
rcl
dec
stos
mov
inc
dec
stos
repz
stos
movs
cdq
(bad)
fadd
mov
sbb
inc
mov
and
(bad)
and
aam
shl
das
xor
and
call
call
call
(bad)
adc
out
jp
cmp
clc
mov
lahf
mov
arpl
xor
loopne
lea
(bad)
les
dec
out
jmp
dec
icebp
stos
jg
inc
pusha
mov
inc
inc
or
jg
data16
cmp
mov
loope
repnz
push
sub
push
mov
scas
sub
cmp
outs
mov
push
pop
fdiv
and
loopne
sub
hlt
push
aas
adc
fnstcw
popf
mov
retf
pop
pop
pop
jne
iret
in
fwait
movs
or
push
ret
loopne
mov
jecxz
inc
mov
lods
inc
mov
add
xchg
cmp
jns
inc
jecxz
call
add
dec
fild
push
lock
out
xor
loope
lock
and
cmps
cmp
sbb
cli
(bad)
adc
pop
mov
xor
add
dec
hlt
push
jae
movs
sbb
mov
pop
push
mov
out
iret
jecxz
repz
leave
sub
mov
dec
mov
stos
push
imul
mov
ret
cmp
adc
pop
mov
imul
xchg
cs
push
pop
pop
dec
pop
fistp
loop
loop
arpl
call
xchg
adc
pop
and
pusha
push
and
das
push
mov
aam
add
inc
bound
xchg
pop
lahf
jne
(bad)
xor
push
push
sti
sar
add
sbb
fdiv
mov
jae
sar
nop
ret
dec
jecxz
(bad)
aaa
sub
rol
retf
leave
movs
cmp
jb
or
int3
adc
or
pop
das
mov
mov
cld
not
fld
(bad)
xchg
xor
mov
outs
rol
leave
and
dec
push
jne
xor
fdiv
sahf
out
in
inc
bound
lds
adc
loopne
push
pop
and
xchg
mov
dec
lds
jp
ror
mov
inc
xchg
call
sbb
inc
push
je
jnp
ss
adc
mov
mov
lods
add
dec
mov
popa
add
xor
iret
into
dec
jecxz
push
jo
mov
enter
imul
adc
shl
or
push
retf
hlt
imul
xor
fistp
(bad)
jns
das
push
push
aad
mov
cld
std
sub
icebp
adc
sub
fwait
mov
ret
repnz
dec
jmp
xchg
sub
push
pusha
inc
add
rcr
mov
ins
(bad)
jnp
mov
sar
mov
mov
push
sbb
pop
iret
xchg
jno
xchg
xchg
ins
ror
dec
lahf
vcvttss2si
push
inc
or
loopne
scas
xchg
mov
mov
outs
push
xor
ins
mov
sbb
jb
adc
call
sahf
mov
mov
std
rcr
inc
mov
fadd
aam
xchg
mov
movaps
ins
push
call
(bad)
or
cmc
out
xor
push
les
push
pop
movs
ret
sub
ins
stc
sbb
popa
arpl
popf
test
hlt
push
ret
xchg
cmc
push
out
push
int3
adc
or
iret
outs
sub
ins
jmp
adc
inc
loopne
inc
into
shl
mov
pop
pop
pop
adc
sbb
mov
inc
cwde
mov
(bad)
cmps
(bad)
(bad)
xchg
call
jg
or
jmp
add
cmp
and
cmp
mov
cmc
dec
or
add
sbb
cwde
nop
movs
fld
cmc
jns
add
push
(bad)
mov
cmps
(bad)
repz
ss
mov
(bad)
ret
lock
inc
lea
ins
adc
and
clc
fistp
mov
jg
or
cs
addr16
ins
fist
pop
iret
popa
adc
jge
out
push
dec
mov
mov
cmc
ret
push
or
jecxz
ss
xchg
stos
xchg
or
pop
pop
test
std
mov
adc
jo
shl
ja
xor
fs
push
lahf
sub
xchg
adc
loope
pop
mov
jnp
test
into
push
mov
imul
inc
xchg
mov
add
loopne
and
xor
mov
pop
inc
popa
mov
inc
scas
not
pop
(bad)
dec
fld
xor
mov
lahf
xor
inc
scas
sub
mov
push
inc
and
sub
shr
scas
push
pusha
add
mov
mov
outs
xor
cmp
mov
ret
not
ja
cld
mov
mov
ret
idiv
addr16
dec
dec
and
xor
adc
lods
sbb
dec
inc
sub
pusha
lahf
and
inc
in
in
(bad)
mov
push
jns
mov
and
add
mov
dec
mov
push
(bad)
js
outs
cmp
mov
mov
add
dec
xor
outs
fbstp
leave
jns
test
hlt
push
idiv
movs
adc
div
sti
inc
adc
sub
jecxz
icebp
lea
inc
jno
mov
mov
push
fldenv
push
mov
push
push
in
mov
fmul
js
test
dec
aas
neg
sbb
popf
or
out
inc
(bad)
int
fldcw
jp
call
ret
loope
jg
mov
pop
js
int
pop
sahf
outs
or
xlat
cmp
aas
mov
xchg
stos
mov
add
ss
fsubr
or
lea
and
nop
popa
fdivp
lods
sbb
pop
mov
cld
and
int3
and
xchg
ins
mov
sbb
jl
xlat
xor
fisub
push
sub
pop
mov
pop
cdq
(bad)
imul
push
sbb
adc
pop
jbe
cmps
ror
loop
in
dec
mov
lods
jbe
mov
mov
arpl
mov
adc
movaps
pop
arpl
sbb
fst
add
sti
sub
std
test
sbb
out
or
xchg
xor
aam
mov
std
hlt
inc
ins
pushf
(bad)
xor
sbb
mov
mov
jnp
rcl
(bad)
lock
xchg
xchg
push
mov
ss
add
add
popa
and
cmc
sbb
and
les
push
mov
call
xor
fdivr
paddusb
iret
add
pop
not
inc
stos
sbb
and
rcl
or
add
mov
scas
push
mov
add
dec
and
xchg
xchg
mov
int3
mov
call
fwait
ins
sbb
es
cmps
jecxz
fnstsw
jne
xchg
xchg
dec
mov
ficomp
movs
inc
inc
sar
cmp
push
mov
add
daa
add
xlat
jbe
(bad)
in
pop
out
xor
add
cmps
add
std
sub
xchg
out
jp
sbb
lahf
(bad)
cmp
in
dec
mov
aas
stc
mov
add
enter
leave
pop
sub
clc
or
push
pop
mov
jle
gs
mov
ins
lahf
jnp
repnz
adc
dec
jg
and
rcr
mov
add
rol
bound
push
mov
(bad)
shl
enter
(bad)
mov
call
cld
or
das
xor
aas
adc
mov
scas
add
aad
jl
push
inc
fsubr
mov
cwde
leave
push
ds
loope
dec
xor
push
ss
mov
stos
dec
pop
or
out
icebp
mov
dec
pop
dec
mov
pop
sub
add
data16
or
stos
mov
jl
lds
(bad)
jb
push
sub
in
aas
mov
xor
stos
sub
bound
sbb
es
sti
xchg
push
jmp
push
jnp
ret
and
popf
and
sbb
inc
aas
in
ss
mov
retf
dec
in
sub
jge
imul
pop
mov
mov
fdiv
jne
or
cdq
jmp
xchg
sbb
mov
or
xchg
or
(bad)
out
aaa
and
arpl
dec
add
imul
mov
data16
fcmovnu
sub
in
add
xchg
push
outs
xor
test
pop
loope
pushf
push
adc
test
pop
inc
pop
add
jg
xchg
aad
pop
mov
dec
add
xchg
mov
jbe
mov
stos
mov
push
imul
out
std
or
cld
push
mov
mov
sti
sahf
into
lock
jle
lea
sub
jecxz
repnz
fwait
dec
sbb
gs
loopne
mov
or
jnp
inc
movs
out
or
outs
cld
(bad)
dec
jbe
fwait
jb
push
xor
pop
cmps
xchg
hlt
arpl
rol
and
addr16
rol
cmps
test
and
and
mov
arpl
xor
sub
jg
mov
add
retf
jp
cmc
retf
xlat
xor
mov
rcr
dec
pop
mov
out
ss
push
cmc
dec
test
call
(bad)
push
clc
aas
repz
aad
pop
idiv
and
mov
aas
nop
in
and
test
xor
outs
add
xlat
add
imul
add
out
cs
fucomip
pop
imul
xchg
and
sbb
call
xor
push
inc
iret
jge
mov
mov
daa
in
fcom
push
pop
sub
mov
fisttp
sub
test
mov
jo
cmps
sub
pop
jmp
mov
les
imul
in
ror
pop
cmp
inc
sub
loop
pusha
dec
div
xor
rcl
dec
push
in
xor
or
scas
mov
adc
sar
push
dec
int3
cmp
and
mov
clc
inc
iret
mov
outs
sbb
inc
dec
scas
xchg
mov
(bad)
fidivr
jge
pop
mov
loopne
mov
sbb
mov
xchg
jp
imul
adc
repnz
in
xchg
call
pop
jge
(bad)
data16
adc
sub
ret
mov
sub
push
push
test
jbe
test
jns
addr16
inc
fmul
dec
mov
scas
(bad)
xor
out
out
lahf
addr16
push
stc
ficomp
rcl
and
test
mov
call
stos
xchg
popa
aaa
popa
imul
pushf
mov
xchg
xchg
dec
shr
(bad)
adc
jg
pop
fwait
mov
vcvtss2si
(bad)
sub
sar
cli
xchg
or
outs
jb
or
jae
les
inc
mov
adc
sub
mov
dec
loope
cmp
mov
lods
mov
popf
xor
outs
dec
aad
inc
pop
xlat
fcomip
xchg
xor
sub
xor
imul
test
adc
sub
jp
and
jmp
sbb
adc
mov
xor
push
inc
data16
loop
je
xchg
pop
xchg
pop
jae
int
rcl
xchg
cmp
lds
out
(bad)
ss
es
arpl
mov
fisttp
lahf
mov
(bad)
push
push
lock
lods
test
mov
je
fcom
in
fldenv
out
sub
mov
int3
inc
imul
dec
adc
sbb
js
scas
nop
push
icebp
xor
fiadd
popw
fidiv
push
push
mov
mov
jge
inc
dec
mov
ds
dec
repz
jg
mov
cld
xchg
xor
lods
cmp
or
mov
xchg
mov
mov
aam
aam
shr
jmp
sbb
sbb
gs
mov
stc
sbb
dec
sub
nop
mov
jl
xor
in
in
aam
and
sub
mov
jle
loope
fild
in
cmp
fadd
cdq
jno
call
shr
and
(bad)
dec
inc
fbstp
fistp
ret
sub
ffree
mov
add
(bad)
adc
lds
imul
mov
inc
inc
loopne
cmp
sbb
dec
int3
call
call
jae
retf
out
cmps
in
mov
pop
add
mov
pop
aad
data16
and
xchg
sti
lea
outs
(bad)
sub
lods
or
ins
or
imul
push
adc
and
rcr
adc
int
adc
imul
imul
scas
loop
mov
sbb
lds
or
js
mov
outs
push
dec
in
xchg
out
cmp
(bad)
mov
test
jbe
dec
sbb
pop
mov
enter
ja
inc
cwde
mov
ret
or
jge
hlt
dec
xchg
push
cmp
call
loop
sar
ret
mov
push
or
repz
call
dec
and
cs
loopne
cwde
in
inc
mov
outs
push
sub
out
fld
cmp
mov
add
pushf
push
xchg
out
bound
popf
pop
push
js
aas
jae
sbb
test
inc
mov
movs
xchg
pop
sub
sbb
pop
dec
popa
in
pop
scas
retf
movs
js
cmc
mov
push
xchg
jae
imul
pop
push
out
sbb
inc
jmp
in
lock
in
push
out
cmps
cwde
out
cmp
ins
add
jg
out
cmp
xor
into
push
mov
popf
mov
pop
pop
sbb
ret
nop
push
mov
sub
cmps
clc
sbb
imul
add
push
cmc
cmp
push
mov
(bad)
clc
inc
and
dec
rcl
mov
mov
addr16
mov
xchg
push
cmc
ret
mov
dec
mov
dec
clc
mov
pop
retf
(bad)
adc
adc
pop
inc
repnz
or
nop
or
rcl
aaa
fstp
ret
std
call
and
int
rcl
mov
cmp
pop
push
cdq
jo
or
test
and
lods
sub
int
pop
jne
push
outs
sar
fsub
ror
aam
cmp
xchg
push
xchg
add
push
ss
es
mov
std
aam
sub
sub
cmc
cli
js
mov
repz
sbb
inc
sbb
adc
leave
mov
dec
jl
ins
xchg
pop
pop
xchg
aas
(bad)
push
les
cmp
inc
icebp
test
(bad)
lods
pop
mov
aas
sbb
std
mov
dec
inc
and
jmp
aad
dec
jl
scas
add
pop
xchg
inc
dec
ret
ss
es
mov
add
ss
mov
pop
inc
bound
add
mov
lea
out
sub
lock
add
in
pop
out
test
mov
lahf
push
dec
and
aad
out
xor
xor
loop
xchg
xor
(bad)
sbb
aad
dec
or
sbb
fwait
adc
pop
aaa
inc
mov
mov
push
das
xor
add
cmps
mov
fwait
add
mov
int3
test
cmp
(bad)
in
data16
xchg
fst
ins
loop
(bad)
xchg
rol
push
test
cmp
mov
mov
(bad)
push
and
jl
aas
push
cmc
mov
inc
mov
mov
retf
add
(bad)
lock
dec
add
fstp
mov
ret
movs
cmc
xor
cld
sub
ret
int
fucomip
xchg
pop
je
mov
arpl
lahf
nop
pop
in
sbb
out
shl
pop
arpl
invd
(bad)
fwait
push
hlt
scas
out
daa
jmp
ins
jnp
icebp
shl
pop
lock
lds
push
dec
cmp
xor
add
and
cld
push
or
push
xchg
mov
jmp
ror
retf
adc
aad
stos
es
and
dec
adc
aam
fwait
jns
ret
inc
mov
sub
mov
adc
das
pop
push
jecxz
mov
add
adc
popf
hlt
call
pusha
mov
sub
add
xor
sub
sysret
xchg
mul
sub
mov
or
jmp
cmc
jae
pop
je
add
(bad)
mov
xor
inc
add
out
pop
mov
bound
pop
data16
xchg
xor
cmps
std
xchg
mov
cmps
(bad)
and
ss
cwde
lahf
pop
cwde
enter
daa
adc
mov
xchg
ins
dec
fidiv
jb
in
jnp
sub
test
and
add
int
cmps
push
js
dec
mov
ds
es
retf
fisttp
rol
mov
icebp
das
push
in
(bad)
cmps
cwde
push
pop
push
xor
sar
int3
out
adc
xlat
cmp
mov
mov
mov
mov
in
imul
in
lea
mov
loope
mov
dec
bnd
rol
pushf
sbb
ins
xchg
cmp
jg
adc
xor
dec
inc
mov
push
in
adc
cdq
mov
fmul
adc
popf
sub
or
mov
lods
or
and
cmc
add
cmp
faddp
movs
fisttp
in
mov
xchg
fistp
mov
pop
mov
je
xchg
dec
mov
inc
lods
adc
push
cli
aaa
sbb
arpl
jle
push
lods
inc
cwde
call
push
xchg
iret
pop
(bad)
cmp
cmp
cmp
out
mov
mov
dec
inc
mov
shl
inc
xor
sbb
mov
sbb
xchg
and
add
add
jmp
add
ja
cs
push
adc
ret
cmp
inc
xor
or
dec
xor
cmc
adc
xchg
pop
cmps
outs
(bad)
icebp
inc
pop
and
adc
adc
lea
pop
cmps
mov
mov
push
scas
mov
dec
or
mov
pop
xor
retf
jbe
push
dec
or
pop
int3
mov
into
adc
adc
mov
outs
mov
cwde
dec
cmp
push
in
lds
xchg
push
ficomp
addr16
sar
aam
and
sti
out
leave
cmp
sbb
pop
cmc
xchg
push
dec
mov
pop
aam
xchg
mov
imul
les
in
sbb
inc
test
mov
and
jns
or
push
dec
iret
ret
mov
or
je
call
in
mov
fcomp
jp
push
push
cdq
in
rep
hlt
push
mov
mov
sbb
add
adc
div
jmp
mov
retf
push
jp
shl
int3
xchg
repnz
pop
jb
outs
mov
mov
mov
pop
dec
(bad)
xlat
sbb
call
pop
cmps
lds
inc
mov
test
add
mov
cmp
xchg
mov
cli
out
aam
jae
adc
jp
mov
das
out
push
ss
or
(bad)
out
sti
in
sbb
or
into
jmp
fwait
ins
jns
arpl
push
ficom
es
out
push
and
cmps
add
push
xchg
out
cmp
movs
aas
rcr
push
sbb
xlat
(bad)
push
fs
mov
ja
adc
sbb
ficomp
mov
sbb
sub
or
pop
shl
jb
in
add
addr16
mov
scas
adc
mov
(bad)
or
mov
adc
int
aaa
xchg
je
mov
ror
cwde
mov
lock
movs
fs
and
icebp
ins
and
and
xchg
fs
adc
xchg
dec
pop
int
mov
call
ltr
stos
dec
mov
fnsave
xor
inc
retf
hlt
pop
jae
inc
ror
push
fdiv
adc
pop
(bad)
adc
test
inc
mov
inc
imul
out
mov
sbb
imul
push
cmp
sbb
xor
mov
and
jbe
retf
cwde
loop
adc
xor
test
es
mov
pop
mov
ins
bound
pop
add
inc
aam
jmp
stos
xor
mov
xor
pop
fst
jp
sti
aad
repz
rcl
cmp
(bad)
sti
in
or
sbb
imul
test
xchg
cdq
mov
data16
lahf
adc
imul
sub
adc
std
mov
jge
shr
mov
in
shr
xchg
jp
pop
push
and
les
xor
cmp
repnz
sub
or
cmc
(bad)
and
cmp
sub
add
jnp
jmp
dec
das
stc
or
cmp
lahf
jle
repnz
dec
sub
sub
mov
retf
cmp
mov
mov
mov
xchg
mov
push
inc
lahf
xor
adc
(bad)
ja
sbb
ficomp
loopne
loope
ficom
test
lock
shl
mov
test
popa
mov
adc
int
mov
(bad)
in
aad
sub
cdq
inc
sub
lods
in
xchg
shl
(bad)
(bad)
adc
push
mov
xlat
xor
push
cmp
push
mov
sti
repnz
mov
pop
stc
mov
cmc
push
and
mov
retf
sahf
pop
cmps
pushf
fnsave
mov
xchg
(bad)
mov
(bad)
loop
ret
out
adc
shr
ins
mov
jne
fnstcw
sub
cs
push
cmp
ss
mov
or
mov
loop
add
sbb
and
inc
mov
xor
add
xchg
mov
rcr
dec
test
cmc
scas
push
mov
push
pop
mov
nop
das
gs
outs
in
jmp
pandn
jecxz
pushf
(bad)
push
scas
in
mov
inc
gs
movs
fstp
(bad)
cmp
add
clc
rol
or
sbb
aaa
movs
push
pop
bound
lods
pop
repnz
stc
jnp
imul
add
mov
sub
jle
and
adc
cmps
out
cmp
cwde
adc
(bad)
scas
mov
mov
inc
push
add
fiadd
not
imul
jmp
and
mov
xor
inc
mov
sbb
dec
mov
adc
fisubr
sub
(bad)
or
add
xchg
adc
jne
sub
adc
int3
cmp
and
cwde
xor
sbb
or
mov
jmp
dec
push
xchg
and
cs
mov
scas
add
hlt
sub
push
(bad)
cdq
(bad)
idiv
mov
adc
push
mov
inc
xor
sbb
inc
loopne
sub
addr16
(bad)
cdq
push
adc
neg
mov
in
sti
xchg
cdq
retf
je
xchg
icebp
add
lods
jno
je
cli
mov
addr16
jle
out
and
loop
jecxz
push
lea
sar
mov
cmps
jno
ja
aam
mov
or
mov
push
jp
dec
mov
je
push
xor
pop
(bad)
ss
loop
pusha
add
out
pop
pop
out
push
clc
pop
std
in
out
mov
xor
push
xor
jae
fwait
push
test
push
jmp
stos
add
iret
cmps
pop
bound
lea
ja
out
mov
cmp
hlt
sbb
sbb
mov
jb
out
or
(bad)
gs
adc
inc
jnp
lock
pushf
pusha
gs
ins
mov
adc
nop
mov
push
push
movs
fcmovne
xor
xchg
jo
mov
sub
imul
test
sub
mov
rol
shr
enter
scas
cwde
repnz
cmps
xchg
inc
cs
outs
xor
lahf
pusha
mov
sub
fmul
adc
or
outs
inc
ret
shl
xor
test
out
loope
jp
mov
stos
in
aas
xor
lahf
shl
stos
mov
push
jge
push
popf
cli
ret
cmovl
mov
mov
adc
pop
sub
cmp
push
push
or
cld
add
pop
cmp
jecxz
cmc
add
test
ret
fdiv
push
popf
adc
loope
mov
fwait
push
(bad)
retf
inc
aam
mov
frstor
loope
push
ds
pop
push
cmps
ins
pavgb
das
ret
pop
popa
mov
push
sub
adc
in
mov
jmp
sub
test
js
xchg
mov
js
imul
loopne
scas
iret
mov
pop
xchg
les
jmp
mov
ins
or
push
xor
loopne
(bad)
jne
popf
int3
in
jo
add
or
out
add
ficom
sbb
or
or
rcr
pop
out
jne
mov
outs
lds
adc
fucomip
add
xchg
popf
push
ins
test
push
cmp
and
add
or
xor
xor
int
adc
jmp
sub
mov
call
test
int3
inc
sub
cmp
cmp
inc
ja
and
mov
into
sbb
pushf
enter
xchg
adc
ror
iret
inc
into
popa
cmp
mov
inc
mul
mov
jecxz
call
mov
inc
and
dec
in
jmp
(bad)
mov
jmp
gs
retf
mov
sub
cmp
mov
lods
js
pop
int
retf
adc
xor
sar
fs
xor
xlat
jmp
xor
pop
pop
adc
or
lods
mov
(bad)
lahf
(bad)
mov
loop
mov
jmp
xor
cs
adc
jbe
push
or
and
arpl
cwde
aam
adc
mov
leave
jmp
rol
xchg
aad
in
lds
cmp
mov
cmp
pop
jg
mov
sub
jae
xchg
adc
mov
shl
mov
js
rol
fldenv
xchg
cmps
cli
stc
add
cs
ja
ror
shl
aad
sub
sbb
adc
in
test
lods
push
sbb
les
push
movs
xchg
push
add
scas
cmps
fistp
outs
jns
dec
lods
jae
movs
int
cmps
clc
pop
shl
ret
inc
jb
mov
lds
int
add
mov
lea
inc
dec
lock
fwait
jne
outs
jle
xchg
ja
xchg
push
fwait
and
cmp
xchg
mov
popa
(bad)
idiv
jns
fisub
out
repnz
rcr
pop
adc
inc
rol
fisubr
cdq
cmps
jge
and
add
mov
inc
gs
sti
mov
int3
sbb
mov
cmc
shl
mov
rcl
cli
xor
cdq
movs
arpl
sub
xor
ret
or
std
and
bound
inc
mov
shl
sbb
enter
lea
shl
add
cmps
leave
push
mov
es
add
mov
jecxz
mov
mov
jno
push
sahf
push
mov
cmp
or
pop
sbb
nop
jecxz
stc
sysenter
shl
push
mov
xchg
sbb
nop
xchg
div
nop
sahf
xchg
sbb
ret
adc
into
jg
xlat
iret
xchg
xchg
push
ja
jl
fcompp
sub
and
aad
cmps
lods
mov
xor
mov
mov
je
in
sbb
jecxz
cli
mov
fisub
xor
and
(bad)
movs
push
rcl
mov
dec
xchg
inc
in
sbb
ss
movs
mov
xchg
div
outs
loope
in
das
add
add
cmc
aad
jae
cwde
data16
push
test
dec
cs
and
jb
out
and
ss
or
sar
sub
mov
inc
adc
pop
push
pop
and
inc
(bad)
dec
call
loope
or
xchg
inc
or
mov
leave
add
pop
inc
dec
xchg
call
jb
lea
inc
jb
xchg
rol
loopne
mov
sub
adc
sub
cmp
(bad)
int3
rol
stc
pop
shr
add
xchg
aam
sub
(bad)
lock
jg
int
xlat
sbb
jbe
lahf
sbb
xlat
cmps
test
mov
shl
xor
cwde
int
adc
xchg
test
push
(bad)
ins
adc
into
les
mov
sub
dec
sar
jmp
shr
push
adc
jae
mov
in
cmp
(bad)
dec
mov
mov
sbb
ror
mov
pop
je
rol
pop
jo
in
aaa
inc
pusha
pop
out
ret
mov
mov
and
hlt
adc
ds
xchg
jecxz
hlt
je
jmp
jle
cmp
mov
cwde
jb
or
cmps
adc
inc
cwde
lea
mov
push
sbb
test
xchg
inc
push
inc
and
dec
sub
std
test
test
and
dec
adc
mov
fidiv
cmp
or
xor
mov
pop
add
imul
jns
push
(bad)
pop
inc
ror
mov
adc
and
test
inc
shr
cmp
icebp
aaa
loopne
je
iret
es
test
loopne
or
mov
call
in
es
sbb
mov
push
adc
dec
out
push
imul
or
and
out
xor
fsub
stos
mov
mov
fisttp
or
arpl
fild
fild
test
int
lahf
push
(bad)
inc
pop
(bad)
sub
xchg
xor
fidiv
mov
mov
retf
sbb
pop
das
ja
call
ins
ins
mov
int3
xor
pop
imul
adc
or
jne
sbb
call
pop
xor
sub
mov
lahf
add
lock
push
cmp
dec
aaa
xchg
test
pop
mov
fwait
push
mov
xchg
sbb
fwait
addr16
dec
mov
push
stos
in
imul
mov
mov
pop
das
mov
call
pop
aaa
jle
push
sbb
or
sub
ret
ss
jl
push
aad
add
inc
rcl
enter
sar
pop
nop
adc
popa
jmp
lds
data16
ror
int3
cli
jg
retf
sar
push
pop
dec
pop
lods
int3
xor
fucomp
xchg
out
lahf
push
ins
mov
dec
loopne
frstor
pop
or
nop
jns
sub
mov
out
push
fnstsw
mov
lahf
add
ds
mov
and
fistp
sub
test
ret
imul
aas
sbb
jne
test
cmps
sbb
push
hlt
pop
and
push
and
jbe
sub
inc
jle
enter
mov
dec
mov
adc
outs
call
fmul
inc
shl
cmovl
dec
inc
test
sub
sar
inc
jb
jp
aad
sbb
fld
fstp
push
iret
icebp
pop
pop
fistp
push
inc
add
jl
mov
test
out
xor
push
das
out
jns
(bad)
fldenv
and
test
adc
sbb
cmp
pop
fcomp
add
mov
aaa
dec
push
xor
pop
adc
sbb
jmp
iret
addr16
or
movs
aam
add
enter
cdq
sbb
or
dec
int3
xor
cmc
xchg
pop
aaa
push
ds
popf
fdivr
in
or
xchg
jmp
psrlw
push
cmc
js
pop
jae
fdiv
pop
add
fadd
mov
sub
jbe
into
jnp
lds
cs
pushf
pop
repz
ds
jns
xor
adc
dec
jg
adc
xchg
scas
fnsave
and
cmp
cmp
sbb
sbb
int3
xor
lock
xlat
adc
out
sub
xchg
mov
dec
jl
scas
and
mov
std
push
jnp
xor
retf
sbb
imul
jb
sbb
pop
dec
cld
xchg
sar
push
call
sahf
xlat
mov
inc
gs
ins
cmp
pop
cmp
xchg
and
mov
cmc
jmp
add
jbe
int
lods
xor
jp
bound
push
movs
xor
in
dec
(bad)
retf
xor
pop
daa
leave
test
pop
and
dec
lods
jmp
jne
mov
nop
aas
mov
into
mov
mov
dec
fisub
out
int
out
sub
sahf
or
xor
loope
in
stos
cmps
arpl
push
xchg
test
loopne
cmps
ja
std
cld
sbb
dec
mov
js
clc
aas
pop
(bad)
xchg
frstor
cs
ss
movs
add
jns
mov
cmc
jnp
stos
fwait
call
mov
pop
xor
ret
inc
mov
add
cwde
lods
ret
inc
cmp
fwait
jl
nop
cs
popf
out
call
(bad)
rol
shr
mov
shl
dec
mov
push
outs
xor
test
retf
call
pop
adc
iret
sub
xchg
sbb
xchg
cwde
mov
or
inc
movs
inc
stos
pushf
popa
aaa
lea
sub
pop
mov
lods
std
clc
add
emms
stos
xchg
movs
int3
(bad)
pushf
push
push
sub
inc
or
mov
and
and
xchg
pop
addr16
sbb
and
jo
retf
in
inc
js
sub
mov
frstor
mov
jmp
xchg
mov
pop
lds
mov
aas
xchg
imul
fidiv
cmp
cmp
push
scas
sub
out
cmp
aam
xor
fwait
arpl
lock
and
and
leave
loope
sub
inc
xlat
(bad)
cmps
jl
push
xor
sub
push
popa
daa
movs
jne
movs
ins
push
dec
loope
xlat
enter
test
retf
xchg
add
jne
sub
ja
adc
mov
les
stc
add
jae
xchg
shl
dec
adc
add
jbe
aaa
mov
pushf
enter
(bad)
repnz
jo
dec
inc
mov
out
jmp
(bad)
fnstsw
xor
(bad)
xor
mov
ds
push
lods
add
add
addr16
sbb
sbb
mov
mov
sbb
popf
xor
js
(bad)
test
dec
ins
jg
stos
xchg
aad
mov
dec
cmp
add
in
cmp
mov
mov
in
mov
inc
sbb
adc
ror
mov
movs
or
jne
mov
aaa
sbb
cmps
(bad)
mov
ret
mov
dec
stc
cmp
cmp
adc
adc
fwait
pop
icebp
add
aas
(bad)
cmps
mov
mov
xchg
test
jg
add
xlat
add
mov
dec
xchg
jp
mov
ins
ja
mov
xchg
sbb
sub
xor
das
out
add
call
scas
adc
stc
xchg
push
outs
sbb
inc
and
sub
mov
or
addr16
dec
mov
ss
mov
jle
add
clc
adc
cmp
mov
pop
cli
pusha
scas
xchg
push
or
adc
sar
fsubr
inc
xor
getsec
mov
pop
cld
add
stos
loopne
push
cli
call
jae
adc
sub
mov
jle
popf
xchg
cmp
popf
out
ins
enter
dec
loope
sbb
jnp
fwait
mov
add
cmps
or
jmp
fsubr
jmp
mov
fwait
pop
daa
xor
ins
out
ja
imul
dec
cdq
daa
inc
cmp
hlt
jecxz
vaddpd
cmc
stos
mov
imul
imul
mov
cmp
add
jne
xor
jmp
test
in
pop
pop
jg
and
push
(bad)
repz
ret
dec
or
cmc
cmp
cmc
cmp
sbb
cmp
fild
and
mov
xchg
inc
pop
cmps
xchg
ret
arpl
aas
pushf
jae
gs
fwait
and
sahf
mov
dec
jmp
mov
ins
data16
jmp
rol
sub
or
dec
shl
stos
jae
out
mov
ret
fstp
call
inc
xchg
test
jns
push
or
sar
and
jp
imul
pop
call
out
xchg
jle
adc
fidiv
mov
cmp
jecxz
cs
jne
test
push
(bad)
cmp
sub
pop
lods
add
push
dec
mov
daa
loopne
inc
inc
mov
push
pop
retf
lock
in
xor
bound
adc
int3
imul
sbb
jmp
sub
mov
out
lds
inc
ss
dec
jne
popa
inc
mov
add
bound
sbb
cmp
pop
add
mov
lods
xlat
jg
movs
dec
rol
or
mov
fcom
lods
dec
test
push
lock
rol
push
movs
or
sbb
hlt
fnstenv
rcr
xor
xor
pop
in
adc
pop
jecxz
(bad)
icebp
sbb
jg
sub
xor
retf
mov
cmp
cmp
stos
pop
xor
jge
cmp
or
xor
js
mov
inc
mov
in
dec
cmps
sub
jno
push
ins
sub
cmp
and
xchg
jle
cmp
ins
hlt
in
push
sub
sbb
pop
mov
push
adc
mov
fmul
and
or
ror
jnp
or
mov
rol
dec
dec
push
pop
push
xchg
cdq
(bad)
ds
xchg
and
outs
and
jmp
stos
popa
inc
adc
enter
mov
jb
xchg
hlt
pop
mov
aad
sub
(bad)
jno
dec
jo
cmps
ss
or
and
xchg
das
retf
cld
mov
mov
aad
inc
loop
dec
(bad)
stc
adc
sub
repz
adc
push
sbb
cdq
cmps
mov
shl
cmp
imul
xor
jle
ret
fisub
xchg
fdivr
jno
jo
retf
test
cmp
shr
lods
lods
inc
jo
out
fs
inc
mov
and
in
mov
into
lea
test
xchg
pop
addr16
popa
jg
fwait
cmp
push
rol
jo
fidivr
in
cdq
leave
jle
call
cwde
in
jne
add
mov
fwait
and
ja
sti
cmc
shl
mov
or
es
inc
add
retf
rol
(bad)
int
retf
data16
adc
es
(bad)
out
inc
(bad)
stc
push
mov
pusha
into
ins
mov
add
push
or
push
pop
xor
xchg
and
pop
push
daa
cmp
mov
sub
xor
jae
sar
je
f2xm1
mov
mov
inc
dec
mov
ds
cdq
adc
(bad)
cmps
or
mov
xor
in
pop
xor
int
mov
lods
push
add
sar
xor
iret
ja
je
fild
and
outs
sub
sbb
dec
fstp
mov
fidiv
(bad)
mov
addr16
std
mov
std
arpl
aam
in
add
pop
retf
sbb
jbe
adc
loop
push
push
mov
arpl
dec
cmp
add
jp
dec
retf
inc
movs
xor
dec
jmp
xor
test
fidivr
mov
(bad)
das
adc
push
inc
push
stc
rol
sbb
call
pop
out
cmc
std
or
adc
cmp
push
mov
nop
sbb
pmullw
ins
ins
je
(bad)
jmp
std
add
bound
jmp
inc
sar
push
mov
jg
lds
aas
mov
in
aam
fdivr
sub
inc
repz
push
jle
mov
int
push
dec
fsub
jbe
ins
sub
dec
mov
mov
or
push
outs
dec
mov
lods
arpl
bound
(bad)
push
mov
and
dec
es
in
pop
fidivr
cmps
sbb
add
test
sti
sub
sub
call
mov
out
aas
ret
test
(bad)
(bad)
cmps
mov
fdivr
popf
adc
mov
int
and
inc
and
clc
loop
mov
(bad)
pop
cs
repnz
ret
fldcw
js
inc
fs
(bad)
push
bound
sbb
mov
adc
lods
call
ret
jg
xchg
movs
lea
mov
mov
lock
mov
xchg
sbb
pop
inc
cmp
mov
aas
cmp
xchg
daa
bnd
xlat
xchg
repnz
dec
test
ss
sub
in
add
mov
dec
mov
inc
fs
jl
test
xlat
daa
jmp
stos
xchg
jmp
push
jno
pop
xchg
fidivr
mov
add
cmp
out
sbb
or
or
lods
dec
or
inc
ss
mov
xor
mov
push
loop
pop
mov
lock
stos
(bad)
xchg
cmp
mov
retf
jmp
ds
call
inc
mov
lock
mov
jae
sub
mov
jo
mov
dec
or
mov
mov
pop
pop
inc
cmp
js
pop
mov
pusha
cdq
repz
mov
mov
and
inc
std
adc
or
(bad)
cmps
or
fcomp
cmp
ficom
jae
or
pop
jmp
out
jbe
sbb
jb
sub
add
dec
iret
lock
in
inc
dec
nop
out
daa
mov
and
iret
dec
(bad)
mov
xchg
jmp
push
or
pop
inc
add
adc
les
call
mov
ins
test
dec
fidiv
xor
or
std
repnz
jb
sub
lods
mov
loopne
cmp
out
popf
js
jno
movs
hlt
mov
mov
ins
iret
add
mov
retf
fwait
inc
inc
pusha
sti
(bad)
pop
leave
outs
in
push
popa
mov
mov
fs
pop
jae
mov
hlt
mov
mov
mov
or
fldenv
icebp
xchg
mov
add
jmp
xor
pop
out
pushf
retf
pop
mov
and
mov
or
cmps
or
sub
jmp
dec
fld
adc
mov
push
imul
jecxz
sub
stc
inc
push
jecxz
adc
jb
jg
add
cmp
scas
push
inc
out
inc
loopne
adc
dec
add
je
emms
shr
repz
push
int
movs
inc
pop
and
stc
dec
jnp
in
and
into
add
std
std
add
mov
xchg
mov
cmp
push
es
pusha
retf
add
(bad)
pop
stos
or
mul
enter
cmp
mov
cdq
mov
js
in
dec
lods
inc
cmp
retf
movs
or
sub
cld
int3
and
add
inc
ret
pop
dec
clc
sbb
fild
sbb
add
cmp
xchg
jb
test
test
cmp
repz
fdivr
pop
inc
addr16
xor
jns
(bad)
into
sbb
pop
mov
sbb
adc
or
fldz
fstp
in
cli
aad
mov
jnp
stos
ja
xchg
fucomp
stos
adc
in
add
shl
mov
nop
jg
pop
inc
enter
push
mov
and
dec
or
xor
adc
cmps
cld
cld
addr16
cmp
or
out
push
fmul
retf
pop
outs
jg
nop
add
sub
neg
xor
dec
(bad)
xor
pop
dec
pop
pop
mov
adc
std
inc
adc
nop
fnstcw
and
jae
test
jno
push
fld
outs
xchg
fwait
out
cmp
and
fiadd
dec
pop
xlat
push
inc
fadd
and
mov
popf
mov
mov
xor
jg
xchg
test
adc
lds
outs
addr16
test
leave
cli
push
add
fcom
pop
clc
mov
xor
sahf
ins
pusha
and
xchg
jle
pop
cli
add
sbb
cmp
add
js
pop
(bad)
pop
cmp
mov
jl
mov
dec
mov
movs
xor
mov
in
stos
ds
jp
stos
xchg
and
adc
fist
stc
jmp
ja
mov
pop
stos
and
dec
imul
cmp
sar
in
or
fwait
(bad)
js
push
das
pushf
bound
cmps
fs
xor
mov
pop
iret
jecxz
scas
je
jmp
stos
imul
cmp
(bad)
aam
lods
jns
imul
(bad)
cdq
repz
neg
(bad)
ins
jbe
sub
push
daa
fs
dec
cmc
cs
add
lods
push
lds
arpl
push
push
out
jecxz
outs
push
mov
int
sar
movs
fucomip
push
pushf
inc
dec
test
pusha
bound
jne
retf
jns
jle
daa
in
sar
popf
mov
inc
fisub
cld
mov
jo
test
sahf
and
movs
scas
push
dec
jl
or
xor
xchg
in
inc
mov
push
xor
mov
popf
xchg
sti
push
mov
push
mov
jnp
xchg
xchg
mov
cmp
or
adc
clc
mov
sub
icebp
ins
pop
fimul
icebp
jns
push
sub
mov
ss
sub
sbb
mov
adc
jmp
rcl
int3
dec
stos
jge
mov
xchg
pop
mov
cmp
push
scas
push
mov
jg
outs
mov
or
adc
cmp
ret
shl
inc
mov
cmp
cli
inc
xor
gs
fmul
sbb
sahf
int
jo
xlat
mov
maskmovq
neg
jmp
sub
adc
sbb
push
jg
mov
xchg
mov
mov
pop
mov
sbb
mov
xchg
dec
int3
xor
stos
mov
mov
cli
xchg
xchg
out
xor
adc
aad
call
sbb
je
icebp
xlat
push
rol
scas
xor
sbb
jno
ins
xchg
mov
fsubr
(bad)
jns
jo
lods
movs
inc
add
or
mov
pop
pop
inc
shl
lea
mov
jae
int3
mov
pop
mov
fisttp
cdq
aaa
and
lea
add
imul
mov
stos
call
lea
jae
dec
mov
out
es
pop
(bad)
mov
pop
pop
xchg
pushf
loope
aad
pop
and
outs
ins
mov
adc
inc
mov
xchg
cs
mov
jmp
or
xor
mov
jmp
test
std
xchg
inc
lods
retf
pop
push
push
cmp
jns
add
sbb
or
out
stos
test
(bad)
push
push
dec
pop
pusha
les
lfs
and
movs
push
pop
push
jnp
pop
not
push
pop
cmp
jle
pop
add
cld
sbb
push
movs
popa
add
mov
(bad)
sbb
dec
mov
sbb
inc
in
test
mov
pusha
sub
pop
pop
aad
or
stos
adc
pop
or
xor
rol
jno
(bad)
mov
or
xchg
cs
adc
hlt
fwait
and
loopne
pop
mov
in
jecxz
retf
std
div
sub
loope
inc
inc
jae
jmp
xchg
popa
or
jge
(bad)
std
cmp
pop
jbe
sbb
mov
mov
and
dec
push
mul
pop
sub
outs
mov
(bad)
push
add
test
repnz
pop
xchg
jg
mov
sub
inc
popa
mov
sbb
jmp
xchg
or
imul
(bad)
aam
push
push
pop
ret
fs
mov
jo
imul
scas
push
sbb
mov
cs
pop
adc
out
push
mov
enter
and
sub
pushf
pop
mov
and
push
add
pop
js
(bad)
jecxz
mov
int
scas
mov
inc
mov
sub
mov
cmc
movs
add
sbb
stos
xor
adc
mov
and
jecxz
ret
adc
je
fwait
jecxz
call
out
mov
sub
push
or
cmps
mov
shr
adc
and
in
call
add
xchg
lods
cmp
jecxz
adc
add
adc
pusha
inc
pop
jl
shl
add
sub
xor
hlt
pop
inc
sbb
xor
dec
adc
dec
fbstp
out
or
movs
push
add
ins
and
xor
add
pop
int
and
aaa
push
(bad)
ins
fist
adc
dec
enter
or
aam
jnp
lea
jne
mov
push
pop
ret
cli
scas
daa
cmp
sub
test
mov
inc
mov
rol
lock
(bad)
ficom
mov
or
adc
cdq
cmp
aas
pusha
jno
inc
pop
int
pop
sbb
cmp
sub
push
test
mov
mov
push
inc
movs
jmp
(bad)
and
mov
pusha
fstp
cvttps2pi
or
ror
inc
fist
out
cwde
inc
lods
xchg
sar
outs
sbb
pop
mov
xchg
popa
(bad)
sar
mov
sub
das
xchg
inc
call
and
shr
mov
and
mov
mov
test
dec
adc
(bad)
jns
sub
sbb
adc
mov
jp
pop
xchg
adc
inc
mov
in
bnd
cmps
inc
mov
call
in
push
pop
stos
cmps
andps
call
in
test
mov
aam
outs
inc
test
in
sar
mov
retf
int3
adc
pop
retf
outs
fmul
dec
imul
mov
dec
test
and
push
scas
and
jmp
push
pop
push
push
xchg
add
cs
pop
mov
aam
mov
xchg
add
loop
fdiv
xchg
xchg
add
pop
outs
inc
pop
pop
jge
test
cmp
mov
inc
pop
daa
sbb
push
call
sub
jb
lods
lods
jle
rep
lahf
inc
add
fisttp
xor
xchg
cmp
aaa
or
adc
dec
clc
enter
into
xchg
movs
sbb
jmp
cs
push
lahf
pop
pop
jb
aad
ss
xor
pop
mov
or
mov
mov
fild
mov
adc
xchg
fs
dec
and
sub
ret
in
iret
push
push
cmp
or
lahf
rol
movs
push
clc
cwde
adc
push
jle
and
sbb
ss
test
cld
pop
mov
int
xchg
jne
jmp
mov
add
xchg
loopne
cmp
leave
xor
repz
or
in
dec
aam
imul
mov
aam
ss
adc
jne
fs
mov
mov
pop
cmp
xor
stos
xchg
pop
test
mov
cmp
xchg
imul
mov
pop
dec
jb
push
push
movs
jmp
adc
jg
sbb
ss
and
xchg
pop
shl
fstp
out
add
das
cmp
sbb
cmc
sbb
cld
xchg
rol
adc
jns
(bad)
out
sbb
jge
shl
mov
xchg
(bad)
push
push
idiv
ja
inc
add
push
dec
(bad)
mov
cmp
xor
arpl
pop
stos
xor
push
cwde
inc
je
xor
push
loope
cmp
add
in
push
xchg
test
call
xor
hlt
(bad)
cs
push
(bad)
leave
and
(bad)
jg
fs
or
push
dec
adc
xchg
add
fnstenv
and
inc
imul
cmc
stos
scas
mov
cmc
cld
cmc
mov
dec
(bad)
push
(bad)
and
jo
jl
aaa
jge
jns
aas
pushf
ins
sub
loope
xor
push
out
ds
mov
jle
inc
add
outs
fmul
sbb
lods
mov
addr16
or
stc
shl
ret
movs
cmps
add
push
xor
(bad)
push
push
xchg
push
test
sbb
adc
fild
mov
std
call
push
or
stos
jb
mov
xchg
(bad)
fsub
repz
inc
sub
clc
sbb
adc
es
inc
test
je
fisubr
(bad)
bound
sub
and
xchg
pop
inc
fwait
and
fwait
or
sbb
int
cs
dec
aas
push
mov
mov
mov
and
xor
pop
jnp
mov
inc
les
sub
hlt
fidiv
into
neg
or
jns
push
and
int3
(bad)
shr
pop
jae
fdiv
aam
js
jnp
xchg
ror
mov
jo
lods
ret
push
mov
mov
xchg
fidivr
hlt
rol
rep
arpl
lods
test
enter
inc
jns
in
add
std
jae
mov
popf
int
mov
inc
pop
push
push
or
out
(bad)
in
mov
hlt
std
cmp
outs
lds
xlat
xor
addr16
mov
mov
or
and
outs
sub
das
stc
inc
and
fst
retf
push
icebp
ja
or
mov
out
adc
dec
xchg
jmp
test
jecxz
jge
mov
js
cmp
push
push
pop
stos
fldz
push
jnp
pop
adc
push
inc
inc
hlt
sbb
(bad)
je
cmps
xchg
retf
lods
inc
mov
scas
call
mov
cli
xor
mov
movs
push
jg
jns
lock
bound
jmp
ss
push
arpl
mov
out
push
xchg
loop
pop
pop
and
and
fisttp
int
test
push
sub
pop
adc
gs
shl
int3
and
call
dec
imul
mov
mov
dec
xchg
ins
push
aas
iret
stos
aad
dec
jae
call
jmp
sbb
scas
arpl
shr
ja
(bad)
not
sti
jmp
xlat
icebp
cmc
mov
inc
dec
jg
out
jmp
mov
inc
push
jle
sbb
jge
fwait
imul
jnp
retf
push
addr16
imul
les
repnz
xor
jnp
arpl
and
bnd
es
xchg
les
cld
jg
int3
mov
fs
mov
cmp
unpcklps
int3
xchg
mov
mov
sub
lea
pushf
pop
int
pop
inc
lea
dec
xchg
sar
iret
frstor
jbe
popa
gs
jmp
les
dec
dec
dec
mov
aad
adc
mov
push
cmp
fisttp
sbb
loope
fisttp
lods
jae
popf
ja
cli
mov
push
test
out
jmp
hlt
adc
pop
std
jle
retf
clc
ins
and
push
xor
pop
repz
pop
pop
pop
fcmovnbe
sysret
xchg
jns
and
mov
out
adc
add
scas
leave
in
lock
lds
int
imul
jmp
push
adc
sub
lock
mov
sub
bound
out
leave
fs
or
mov
push
sbb
fwait
mov
scas
js
test
fimul
push
ret
sti
ret
mov
data16
stos
inc
daa
cs
sbb
cdq
pop
cwde
jmp
sbb
mov
call
sub
addr16
scas
mov
mul
ror
mov
mov
lock
mov
fsubr
fsub
push
test
jnp
into
mov
mov
ret
xchg
int
xchg
jmp
fist
les
cli
inc
cmp
in
out
movs
mov
pop
loop
dec
cld
jbe
adc
add
loopne
scas
hlt
popa
cmp
and
ds
dec
mov
jmp
jmp
push
outs
push
xor
lea
pop
ds
enter
fisub
dec
cmc
(bad)
lods
push
bound
ins
iret
(bad)
fisub
repnz
out
adc
add
cld
int
daa
hlt
xchg
cwde
rcl
sub
ret
imul
cwde
jge
clc
and
jge
stc
xor
je
clc
mov
les
sub
aad
rcr
bound
in
loope
push
pop
bound
outs
(bad)
mov
js
shl
xchg
fld
sar
cmp
add
or
push
(bad)
mov
ja
mov
scas
push
cld
adc
jns
jns
aam
mov
jns
xor
out
in
add
jbe
es
pop
loope
loop
cdq
int3
test
push
int3
mov
push
hlt
sbb
adc
hlt
sbb
shl
sub
xlat
call
dec
movs
das
lock
and
add
dec
pop
aam
and
push
push
pop
cmp
lods
repnz
xor
sub
sti
mov
nop
push
and
xor
mov
mov
add
les
mul
or
test
bound
repz
call
iret
repnz
and
pop
int
jmp
fwait
repnz
mov
iret
cmp
mov
mov
(bad)
ficom
cmps
loope
fnop
enter
dec
or
mov
lahf
(bad)
push
clc
adc
js
ja
loopne
sub
mov
aaa
xchg
aaa
pop
dec
or
jmp
(bad)
lahf
iret
pop
pop
mov
dec
push
cmp
popf
mov
mov
inc
retf
cmp
fimul
or
jle
fbld
mov
pop
and
inc
scas
xlat
jmp
(bad)
push
pushf
xchg
(bad)
mov
pop
retf
sar
jno
sub
add
fsubrp
ret
mov
test
or
cmp
dec
out
test
fs
stos
iret
aas
icebp
jg
pop
inc
enter
sub
xchg
leave
mov
cmp
aas
test
mov
inc
stos
and
retf
stos
adc
data16
stos
test
ins
inc
aaa
add
movs
iret
add
outs
test
es
jbe
(bad)
lods
shld
mov
add
mov
and
or
mov
cs
scas
test
out
arpl
out
sub
ror
ret
jnp
add
or
test
jge
loopne
retf
loopne
mov
(bad)
xchg
stc
cld
jo
jb
mov
ins
das
out
mov
push
pop
inc
mov
mov
add
ss
pop
test
pop
mov
inc
or
cmps
mov
aad
and
pushf
xchg
jb
or
mov
mov
sbb
in
movs
fldlg2
je
(bad)
pop
jge
out
mov
dec
pop
leave
adc
pop
(bad)
out
rol
jae
dec
pop
dec
push
and
xchg
and
scas
xor
sti
adc
fs
and
dec
imul
rol
push
jmp
push
ret
ds
sbb
shr
push
data16
mov
jne
fwait
mov
call
lods
mov
pushf
aas
paddd
(bad)
pop
rcl
jmp
out
jg
cs
out
stos
rcr
js
mov
pop
mov
inc
lods
(bad)
sub
pop
ds
jp
icebp
mov
or
das
add
cmp
dec
mov
stos
dec
imul
arpl
add
rep
mov
clc
jbe
jae
xor
mov
mov
jmp
sub
sub
mov
fmul
(bad)
sbb
les
adc
into
add
outs
lahf
sbb
aaa
add
(bad)
sbb
jl
mov
out
das
and
cld
(bad)
repz
pop
dec
or
jle
xor
sub
outs
cmp
test
sbb
inc
xchg
and
lea
stc
pop
jl
ficom
les
ss
dec
popf
aad
pop
xor
cs
fbld
mov
and
sahf
mov
inc
push
inc
fucompp
cmps
cwde
out
neg
jno
and
mov
ss
lock
mov
xor
lods
lods
push
retf
rcr
fist
jmp
inc
in
out
(bad)
adc
loopne
mov
push
retf
aaa
sbb
xchg
push
xchg
mov
ss
dec
jp
push
(bad)
adc
or
popf
dec
jp
or
fld
pop
mov
pop
dec
iret
push
jle
icebp
ret
aad
lahf
cmp
xor
ins
adc
push
jge
push
std
inc
push
jne
sub
xchg
inc
xchg
mov
jg
fidivr
xor
pop
cs
lea
mov
inc
fsub
jmp
or
xor
jge
lock
jg
sbb
sbb
sbb
xor
xchg
mov
xor
xchg
pusha
cwde
into
stos
pop
add
xor
push
inc
and
dec
and
jg
fsubr
mov
dec
into
inc
enter
cmps
js
pop
(bad)
jge
mov
xchg
call
push
ret
gs
mov
icebp
cwde
cmp
push
dec
popa
push
int3
or
daa
imul
mov
mov
mov
fisttp
nop
ret
inc
(bad)
and
jne
les
dec
sbb
mov
xchg
std
or
add
cs
jbe
push
pop
not
in
mov
cmp
dec
jns
es
or
jo
lds
sub
pop
or
sti
or
js
mov
push
js
and
cdq
sub
xchg
in
jge
mov
call
cli
mov
lds
jecxz
sbb
sbb
retf
pusha
les
mov
cli
loop
iret
inc
stc
jne
cs
outs
mov
push
mov
xlat
cmp
jmp
pop
xchg
jmp
call
ss
movs
mov
dec
and
shr
mov
shr
xchg
lods
pop
inc
clc
push
adc
bound
std
lods
in
inc
cmc
pusha
ret
mov
sub
sbb
retf
ds
fidivr
dec
sbb
cld
sub
push
and
push
mul
add
mov
dec
sbb
arpl
std
and
in
adc
(bad)
arpl
xchg
stos
out
cli
dec
sub
sub
mov
fcmove
cmp
cwde
maxps
sbb
test
jecxz
cli
xlat
arpl
nop
sub
cmps
mov
adc
xchg
add
scas
jae
sti
pop
pop
int
push
ret
sahf
bnd
cwde
arpl
rol
add
or
movs
out
xchg
imul
mov
inc
leave
neg
mov
(bad)
fsubp
mov
jmp
xchg
scas
std
stos
push
sbb
cmps
rol
cmp
push
or
nop
int
cmps
es
dec
or
sbb
(bad)
gs
jne
dec
jmp
inc
xor
push
out
xchg
stos
mov
idiv
retf
imul
pop
das
daa
je
repnz
int
xchg
push
bnd
sub
dec
push
inc
xchg
adc
out
loopne
xor
mov
mov
(bad)
pop
add
mov
stos
mov
aad
sbb
ins
sub
call
jmp
dec
lds
sub
cmp
div
(bad)
out
arpl
xor
fstp
adc
xor
mov
cmp
sub
mov
in
rcl
mov
mov
jb
mov
pushf
jmp
(bad)
(bad)
(bad)
inc
xchg
mov
dec
repz
cmp
movs
fdivr
outs
dec
sar
cdq
outs
add
clc
mov
xchg
cmps
loopne
jo
sub
addr16
sbb
loope
scas
fmul
js
in
xlat
int
int3
add
xor
(bad)
sbb
test
stos
pop
push
mov
mov
(bad)
mov
push
fbstp
xor
(bad)
pop
jge
leave
adc
adc
sbb
push
mov
scas
stos
mov
pop
aad
add
dec
pop
mov
movs
(bad)
fdivr
ds
int3
jl
aaa
outs
mov
bound
sbb
mov
nop
shl
push
in
inc
mov
outs
jno
xchg
in
inc
push
mov
dec
dec
cld
or
add
fcom
lahf
test
and
or
mov
xor
or
jo
retf
iret
retf
sub
clc
push
dec
cmp
xchg
and
xchg
sub
stos
pop
inc
push
lods
jp
dec
call
xor
adc
loopne
mov
popa
loopne
mov
mov
cdq
dec
stc
sbb
cwde
idiv
or
ficomp
or
inc
xchg
aas
and
test
mov
ja
pushf
xor
out
sar
dec
fld
xor
xor
mov
sbb
loope
push
(bad)
push
pusha
inc
std
xlat
shr
add
sti
sub
outs
inc
mov
dec
jb
out
iret
mov
dec
dec
bound
shl
add
std
idiv
enter
sub
xchg
pop
(bad)
and
xor
rol
stc
cmps
jmp
js
sub
push
sbb
repz
ins
cmp
(bad)
das
xchg
imul
jb
(bad)
cmps
iret
or
sub
cmp
nop
push
sbb
cmc
sti
pop
in
push
retf
sar
cmc
(bad)
xchg
add
imul
cmp
and
sahf
xlat
mov
pusha
xor
xchg
fisubr
pop
test
mov
int3
test
xchg
movs
push
or
(bad)
push
and
fisubr
inc
sbb
in
or
addr16
mov
leave
jl
jg
mov
daa
jg
push
jmp
pop
aaa
and
test
push
dec
push
div
in
mov
jge
add
mov
xor
fisub
repnz
stos
gs
repz
mov
outs
in
jbe
out
xchg
(bad)
fmul
loop
fld
pushf
popf
push
ret
loope
add
cwde
(bad)
jg
jmp
int3
inc
icebp
push
push
pop
sub
mov
inc
sub
mov
pop
addr16
cdq
ret
cmps
in
xchg
loopne
jle
xor
or
cwde
lahf
and
shl
in
and
std
adc
xchg
push
inc
push
cmc
mov
jne
fst
(bad)
and
jl
add
and
push
and
jno
(bad)
push
es
imul
inc
pop
fwait
shl
scas
inc
cmp
ret
fnstenv
aad
repz
imul
mov
inc
das
mov
add
add
stos
cld
leave
dec
sub
xchg
jp
jbe
xor
push
jp
xchg
cmp
jmp
sbb
lea
int3
cdq
into
push
fld
fwait
push
test
retf
cmp
or
mov
call
jg
inc
fld
mov
bound
dec
(bad)
in
push
adc
mov
or
mov
cmp
adc
push
dec
enter
push
pop
pop
ja
std
leave
out
mov
shl
out
adc
pop
mov
push
mov
cmp
retf
sub
cmp
ss
fcomp
dec
scas
mov
movs
ss
and
xchg
int3
pusha
sub
dec
jo
popa
inc
and
sahf
pop
adc
add
movs
int3
pop
sbb
inc
mov
dec
sub
clc
(bad)
cmp
xchg
cli
int3
and
cs
cmc
retf
outs
mov
ret
mov
je
psubusb
add
push
mov
in
aad
pop
int3
(bad)
(bad)
call
sbb
pop
repnz
in
push
test
js
sub
jg
inc
pop
mov
test
xor
int
cmps
dec
(bad)
aad
lahf
or
scas
add
push
(bad)
xchg
fdivr
inc
es
outs
into
shl
add
(bad)
in
mov
jge
pusha
cmps
icebp
das
push
mov
dec
sahf
xor
push
adc
xor
lea
imul
dec
call
arpl
in
pop
ds
fdiv
jnp
fadd
dec
dec
out
sti
int
push
sub
cmp
jmp
test
inc
xchg
xor
aam
xlat
lahf
(bad)
scas
and
mov
xchg
fwait
sbb
adc
loop
dec
dec
std
ds
mov
in
out
mov
sahf
mov
push
jmp
imul
and
dec
and
add
mov
add
movs
pop
mul
sbb
fsubr
or
xor
or
(bad)
fdiv
aam
mov
sbb
cmp
or
call
mov
(bad)
std
shr
ret
adc
push
xor
test
iret
rol
adc
fisub
aad
xor
loopne
jg
cmp
retf
inc
imul
lds
cmp
cmps
xor
sub
call
sahf
fwait
test
mov
push
mov
retf
sbb
push
dec
mov
cs
gs
push
shr
add
mov
cmp
std
cwde
addr16
nop
ror
iret
fistp
add
cmp
inc
add
adc
mov
shl
jg
push
aaa
mov
cmp
nop
lods
lods
imul
stos
pop
cmp
cmp
jmp
jns
push
or
div
inc
mov
dec
push
cmp
mov
je
out
cmp
movs
xchg
mov
add
lock
adc
xor
xor
mov
mov
inc
iret
xchg
psrlw
mov
repnz
mov
add
shl
dec
pop
psllq
lea
or
cmps
mov
fild
jmp
mov
aaa
popf
sar
pop
mov
sub
retf
inc
xor
xor
mov
mov
imul
bound
repz
rcr
ja
mov
mov
aad
pushf
arpl
stc
inc
ins
and
mov
call
jg
jne
lods
adc
add
jne
jmp
fwait
into
sub
cs
inc
ins
jmp
stc
mov
idiv
pop
iret
push
sub
fimul
aas
mov
sbb
jb
pop
lock
mov
jo
call
cs
cmps
ja
add
xor
mov
xchg
jl
mov
ror
(bad)
out
or
rol
pop
push
rcl
mov
mov
mov
push
push
add
popa
int
(bad)
(bad)
jge
mov
ficom
fimul
sub
mov
(bad)
dec
loopne
xor
iret
jae
xchg
jg
mov
(bad)
frstor
int
inc
(bad)
jno
lods
hlt
xchg
jmp
sbb
stc
loope
and
mov
dec
xor
js
add
pop
xchg
or
pop
mov
jbe
dec
pop
frstor
pop
repnz
fistp
add
inc
cmc
inc
js
gs
lods
jnp
jmp
fild
push
mov
into
mov
pusha
ret
sbb
mov
(bad)
ror
out
cmc
push
dec
(bad)
hlt
popf
dec
cmp
mov
xchg
test
push
sub
pop
pop
loope
adc
cmc
mov
arpl
call
and
cmp
cld
dec
loopne
fsubr
push
xchg
cld
mov
pop
stos
xor
adc
add
add
lock
xchg
xchg
jmp
imul
(bad)
lock
and
or
fs
sti
mov
popa
aaa
iret
mov
lods
sub
dec
cmps
das
fsub
fdivr
ins
mov
inc
cli
add
add
adc
pop
mov
ss
stos
es
mov
mov
add
nop
xor
sub
test
mov
push
test
mov
in
mov
cmp
jp
loope
sub
mov
mov
jmp
add
outs
into
cmp
push
clc
xor
mov
xor
sub
rcr
mov
inc
stos
(bad)
mov
and
pop
xchg
scas
dec
mov
add
mov
xchg
fucompp
push
jns
hlt
call
xor
js
add
popf
bound
lea
(bad)
pop
xor
pop
xor
out
or
dec
adc
push
enter
nop
cs
sub
retf
fistp
fld
and
sti
cdq
sub
call
lock
pop
dec
mov
mov
cdq
test
sahf
mov
mov
rcl
push
fwait
jle
scas
aas
inc
pop
or
xchg
or
arpl
fs
and
sbb
add
ret
test
or
dec
pop
xchg
addr16
addr16
push
je
(bad)
fstp
jmp
cdq
mov
shl
dec
mov
stc
ins
mul
or
(bad)
dec
jnp
jge
dec
push
add
xchg
(bad)
and
outs
jae
pushf
cmc
push
push
shl
cmp
push
loope
mov
jne
adc
sbb
xor
adc
int3
xchg
nop
test
enter
push
fsubr
iret
movs
sbb
out
push
jecxz
jle
xor
pop
(bad)
int3
div
int
popa
jecxz
jns
xchg
xor
mov
jp
jno
adc
or
jne
ins
out
push
pop
in
shr
mov
fsubr
or
loope
push
mov
cmp
cli
add
ror
mov
or
mov
cmps
xchg
out
aam
stos
mov
test
cmp
mov
dec
pop
inc
ja
hlt
xchg
cmp
sbb
sub
int
jnp
cmp
mov
cli
xor
inc
pop
pop
fisubr
lods
into
repnz
xor
inc
(bad)
mov
ins
in
shr
lds
das
mov
add
inc
add
neg
xchg
ins
sti
xchg
lods
dec
lock
jns
aaa
add
pop
mov
fst
jmp
pop
(bad)
mov
cmp
jbe
or
inc
push
and
and
pop
push
add
stc
pop
inc
pop
or
or
mov
stos
and
fist
push
int
dec
sbb
push
sub
bound
fldcw
ins
mov
xchg
ins
xor
(bad)
mov
jmp
xor
dec
jmp
cmps
fs
in
repz
dec
dec
pop
dec
jns
loope
loop
les
mov
or
dec
hlt
pop
and
lock
jb
sbb
out
jcxz
cld
sbb
vpandn
adc
mov
push
dec
cmp
dec
(bad)
xor
jg
lods
mov
retf
test
rol
xchg
cmp
into
test
inc
mov
popf
scas
dec
fisubr
fst
pushf
xchg
jmp
push
movs
ins
jle
ror
or
cmps
sbb
add
mov
push
push
ss
mov
dec
xchg
fsub
lods
pop
lods
add
cs
in
dec
add
data16
pushf
cmp
jl
out
popf
jl
ficomp
push
pop
mov
repz
xchg
mov
dec
xchg
leave
push
push
call
inc
in
cmp
mov
test
pop
dec
test
pop
cwde
inc
dec
int3
test
pop
cmp
inc
cmp
jno
hlt
mov
inc
enter
pop
dec
push
add
stos
lods
fld
jae
cmp
dec
scas
push
cli
aad
push
or
es
adc
test
xor
or
mov
lods
mov
jb
ja
in
lods
cli
mov
inc
xor
int
sub
ret
and
and
movs
scas
call
mov
(bad)
in
sti
xor
mov
iret
dec
fisubr
div
lods
std
pop
jne
cmc
call
fisub
das
mov
inc
(bad)
sub
mov
xchg
pop
push
and
imul
jbe
ss
fcomp
out
test
jge
push
leave
mov
push
cmps
add
(bad)
mov
ret
hlt
inc
pop
lahf
rcl
sub
cmovae
out
xor
add
shr
jo
fnstsw
mov
scas
pop
call
push
scas
jnp
mov
inc
cmps
xor
add
mov
cmps
in
pop
out
pop
(bad)
pop
mov
enter
jle
int
outs
js
jmp
add
mov
sub
ins
bound
(bad)
mov
stos
xor
iret
push
add
inc
enter
cmp
mov
cmp
and
scas
ss
retf
in
adc
out
mov
cmc
xchg
shl
dec
push
je
add
addr16
and
dec
or
dec
mov
mov
mov
nop
push
mov
out
or
xlat
xchg
jl
fwait
sbb
cmps
movs
add
xor
or
fsub
add
push
dec
mov
mov
sbb
gs
dec
aas
push
lock
pop
pop
prefetch
fs
outs
jmp
out
and
sub
or
xor
mov
mov
fist
gs
xchg
into
jne
retf
sub
mov
sub
mov
gs
pop
pop
dec
leave
adc
addr16
bnd
xor
repz
arpl
dec
jle
push
inc
fidivr
adc
pop
mov
xor
out
in
imul
pop
test
xlat
push
ss
dec
adc
adc
xchg
add
jno
scas
out
xor
stos
fstp
out
rcr
mov
das
jmp
(bad)
adc
das
fs
sub
lock
(bad)
bound
and
pop
sbb
repnz
sti
cmps
jbe
inc
pop
xchg
pop
and
adc
push
sbb
sahf
dec
jnp
pop
into
mov
sbb
ret
call
xchg
xchg
adc
nop
mov
pushf
mov
mov
add
dec
adc
(bad)
imul
int3
shr
data16
push
sahf
push
cmp
ret
mov
scas
jns
fld
je
ins
jmp
inc
mov
inc
mov
loop
inc
test
in
sbb
jl
clc
daa
fnstenv
test
or
shl
inc
xchg
cwde
test
mov
hlt
dec
adc
or
call
in
mov
pop
ret
(bad)
mov
cmps
loope
out
sub
aam
cli
sbb
lock
adc
jmp
push
ss
mov
hlt
idiv
xchg
scas
mov
shr
dec
jge
or
imul
and
jns
or
fldcw
sbb
jl
xchg
sub
dec
adc
int
inc
inc
mov
test
sub
cwde
sbb
sbb
pop
aad
xor
out
xlat
lods
pop
push
and
scas
cmp
mov
push
push
fldcw
sbb
outs
pop
scas
fcom
xchg
mov
repz
adc
fsub
ret
jae
and
ror
mov
cli
out
cmp
sub
mov
iret
scas
push
cmp
jno
mov
jmp
push
ins
lahf
xchg
mov
or
add
jle
and
cmp
jg
dec
fiadd
lock
jl
test
mov
js
adc
out
jne
add
jns
sahf
jae
mov
mov
std
jae
retf
cmps
pop
jmp
mov
mov
pushf
ret
xor
mov
dec
xchg
xor
push
pop
jae
push
cmps
cmp
pop
sub
movs
leave
aam
dec
or
push
out
mov
dec
jb
push
js
ins
add
xor
xchg
pop
(bad)
cli
xchg
inc
and
repz
ret
push
or
jae
dec
(bad)
repnz
jns
(bad)
popf
popa
fwait
mov
and
cmp
mul
inc
sub
(bad)
std
cmp
or
jmp
stos
or
cmps
ja
je
scas
xchg
mov
dec
fcmovnbe
push
push
test
mov
jmp
inc
or
mov
pop
jns
push
mov
sub
aaa
dec
nop
sbb
hlt
jae
pop
popa
popa
mov
mov
ret
adc
xor
mov
cwde
and
cmp
int
loopne
sbb
xchg
mov
and
xchg
stc
sub
add
movs
mov
mov
aad
daa
mov
int
int3
movs
in
loop
cld
and
adc
fild
(bad)
xor
inc
adc
sbb
sahf
add
xor
clc
rcl
mov
es
sbb
add
stos
repz
jg
rcr
and
or
push
lock
out
sub
movs
push
mov
fild
xchg
fnstcw
dec
inc
inc
or
dec
xlat
push
test
inc
pushf
fsub
jg
adc
mov
hlt
or
gs
mov
iret
mov
inc
test
mov
test
sbb
data16
ja
cld
fucomip
sub
sbb
sbb
add
fwait
gs
xchg
cmp
jmp
scas
ins
mov
xor
sahf
cmp
dec
push
pop
cmp
jns
mov
rcl
popa
in
addr16
mov
mov
jmp
cmp
sar
sbb
jge
pop
jge
cdq
jbe
xchg
xor
jg
push
cld
jg
pop
arpl
aam
sub
aam
mov
xchg
rol
jle
jecxz
push
jmp
mov
sbb
outs
inc
out
sub
fbld
push
int
imul
mov
lods
out
ret
pop
ins
std
jno
lods
cmp
arpl
test
movs
jmp
inc
or
push
dec
stos
(bad)
in
imul
lods
loope
xchg
xor
outs
arpl
jecxz
icebp
adc
js
shl
and
jmp
daa
cmps
into
(bad)
out
repz
repnz
jnp
mov
mov
fsub
dec
adc
xlat
mov
jnp
push
adc
jmp
mov
xchg
(bad)
mov
mov
std
clc
add
(bad)
aad
pusha
rcl
or
scas
adc
and
xchg
or
fs
pop
push
cld
adc
arpl
inc
push
push
cs
ins
sub
sub
fadd
and
test
in
cwde
sub
movs
mov
push
xor
lock
(bad)
cli
rcr
mov
(bad)
push
cmp
xor
xchg
inc
push
aad
std
mov
or
jl
inc
cmp
ja
ins
in
mov
and
int3
xchg
scas
mov
repz
push
imul
or
push
cmc
sar
cmp
(bad)
push
mov
mov
push
or
cmp
mov
ja
sahf
push
and
mov
push
sti
jae
xlat
imul
lea
inc
jno
cmp
sbb
test
clc
xchg
pusha
jge
sbb
call
test
sbb
xchg
sbb
aam
call
imul
mov
std
mov
jg
ins
mov
pusha
ds
int3
push
out
sar
pop
push
pop
out
jl
pop
push
xor
lock
retf
lds
pop
jno
cmp
lds
inc
adc
jns
fldcw
xchg
xchg
mov
jbe
mov
mov
es
mov
jge
pop
inc
or
push
jge
leave
(bad)
(bad)
cld
retf
pop
test
retf
(bad)
imul
adc
jmp
iret
clc
jmp
shr
ret
push
movs
call
push
push
dec
or
mov
daa
neg
sbb
sbb
jo
mov
adc
cmps
push
xchg
sub
(bad)
in
dec
adc
cmps
rol
loop
loopne
lock
(bad)
sbb
sbb
cmp
clc
and
pop
jge
in
fmul
aam
pop
clc
pop
psrlq
fsub
lea
aad
pop
adc
and
rcr
jp
jbe
jmp
ds
das
jmp
neg
ss
jne
lods
lea
jne
or
dec
mov
pop
dec
inc
or
ja
and
xor
mov
add
fld
mov
int
mov
std
sub
cmp
dec
push
xchg
outs
clc
mov
sbb
retf
jge
jecxz
or
mov
je
push
ins
cmc
fcomip
sbb
fwait
adc
fcom
call
iret
xchg
push
mov
jbe
jno
sahf
adc
out
outs
test
mov
jg
pop
iret
es
push
xchg
push
inc
mov
jo
fs
pop
dec
jb
mov
cmp
dec
adc
enter
cli
movs
push
fadd
xor
pop
retf
push
sub
pop
push
(bad)
data16
jne
or
xchg
mov
je
movs
cs
cmps
das
data16
sbb
sub
pop
push
outs
pop
fcom
mov
xchg
mov
cmp
mov
jecxz
pop
je
pop
imul
rol
jnp
push
jecxz
sbb
mov
inc
ror
ja
gs
ins
out
add
xchg
fdivr
por
push
jle
stc
and
xor
mov
test
jno
mov
div
xchg
cmp
cmp
push
mov
mov
ja
ret
js
jmp
cld
les
shl
in
pop
fist
in
movs
sahf
in
(bad)
pop
jmp
popa
cmp
inc
jno
(bad)
lock
mov
pop
pop
and
mov
sbb
xchg
jmp
mov
or
sub
xchg
sbb
cmp
fidiv
mov
cmp
std
data16
aad
dec
mov
mov
aas
mov
inc
retf
pop
(bad)
fucomi
inc
addr16
int
je
out
mov
sti
mov
loope
adc
jno
mov
sbb
xor
or
pushf
pop
dec
rol
inc
loopne
je
(bad)
loop
sbb
jecxz
(bad)
arpl
xchg
leave
xchg
push
ss
and
shl
fbstp
jle
sbb
push
ins
fnsave
repz
cs
push
cli
mov
xchg
shl
xchg
lods
rcl
daa
adc
out
dec
ret
fadd
out
xor
cdq
repz
sub
(bad)
ds
lods
aam
push
pop
pop
jmp
in
sbb
jo
xchg
adc
adc
ret
int3
call
jg
call
jmp
cwde
loopne
lock
jb
cmp
pop
cdq
sbb
cmp
lods
dec
push
dec
shl
clc
icebp
stos
sub
mov
ss
cli
out
lock
lods
mov
jecxz
int
inc
shl
cli
shl
mov
in
shl
call
cli
fcmovnb
cmps
add
retf
mov
(bad)
or
mov
dec
xor
out
(bad)
mov
add
mov
(bad)
into
popf
dec
in
sbb
(bad)
pop
mov
bound
or
dec
mov
inc
mov
xor
inc
add
jbe
mov
cmp
push
retf
push
stos
mov
stc
ins
lods
mov
js
stos
push
lods
push
js
daa
sub
out
adc
sti
sar
test
dec
int3
fs
pop
stc
out
imul
movs
mov
bound
js
test
xor
or
cwde
hlt
test
and
jnp
mov
jmp
dec
or
pop
lods
lds
cwde
mov
outs
inc
shl
(bad)
ret
int3
call
pop
mov
(bad)
lods
mov
inc
cld
mov
sub
inc
out
inc
sub
pop
ffreep
xor
retf
std
jg
pushf
push
mov
shl
sbb
dec
xchg
in
jle
test
icebp
popa
mov
pop
or
mov
and
mov
cld
inc
mov
push
sbb
fwait
push
retf
call
mov
and
adc
ins
iret
cmp
dec
ss
and
es
out
sub
or
cs
dec
into
xchg
adc
pushf
les
xor
retf
in
dec
push
xchg
jge
sub
in
lock
dec
sbb
aam
iret
xchg
ret
mov
stc
sbb
sti
or
mov
aaa
jl
pushf
data16
fwait
test
(bad)
lock
add
fmul
lds
gs
psrld
sub
stos
jb
jp
mov
add
jne
pop
shr
xlat
loope
imul
stos
mov
and
lods
lock
jae
js
push
push
dec
adc
jne
call
jne
sbb
adc
inc
pop
jl
rcl
mov
mov
add
cmps
sub
ficom
mov
adc
push
sahf
cmp
xchg
mov
mov
nop
jno
xchg
data16
cmp
js
ja
popf
or
or
dec
hlt
gs
push
add
or
std
cmp
push
aaa
dec
cmp
loopne
outs
clc
mov
fcom
pop
mov
inc
mov
sar
test
lock
(bad)
add
mov
dec
jg
cli
lods
adc
jnp
retf
adc
inc
or
lock
xchg
push
dec
inc
mov
jno
inc
push
imul
xor
mov
daa
add
dec
cmp
add
aad
ret
mov
cmp
pushf
stos
pop
add
adc
scas
daa
xor
xchg
lds
aam
mov
mov
or
cmp
daa
cmps
mov
imul
cli
(bad)
cmps
into
arpl
inc
cs
cs
xchg
cwde
adc
mov
repz
jmp
cmp
mov
imul
mov
movs
es
and
inc
add
ja
int
push
loopne
inc
je
fmul
push
push
imul
xchg
in
mov
sub
fist
cmp
int3
icebp
mov
fistp
push
repnz
xchg
and
jmp
out
xor
push
repnz
inc
mov
pushf
pop
xchg
lock
cld
jl
jle
add
daa
repz
and
or
bound
bound
mov
dec
xchg
fadd
jle
ins
loope
mov
outs
and
shl
inc
dec
call
not
mov
xor
xor
scas
adc
repz
mov
pop
ja
rcr
xchg
stos
fimul
cmps
mov
test
jo
jmp
into
push
jmp
pop
call
fcomi
pop
push
dec
dec
dec
bound
sbb
enter
mov
inc
sar
cmp
popa
scas
dec
out
xchg
mov
push
mov
inc
or
cmp
int3
js
arpl
mov
aam
push
sub
addr16
push
ss
fst
pop
ret
xor
push
cwde
out
(bad)
mov
retf
mov
push
pop
and
mov
pop
lock
cwde
sub
into
inc
mov
jno
pop
pop
cmp
call
adc
imul
rcl
data16
std
adc
cwde
xchg
fcom
adc
jmp
mov
and
fidiv
pop
or
xor
jmp
adc
jo
adc
xor
jns
sti
dec
mov
imul
pop
mov
retf
cwde
into
loop
pop
popa
clc
cmps
sbb
stos
jmp
mov
mov
mov
push
in
arpl
call
adc
or
jns
out
jecxz
in
ret
pop
mov
jl
jg
ja
lds
sub
pop
adc
les
dec
popa
sbb
in
aas
sbb
dec
(bad)
bound
hlt
jecxz
fs
inc
movs
pop
imul
jno
cdq
jge
inc
adc
xchg
and
adc
pop
rcl
mov
ins
and
popf
and
pop
mov
cmp
xchg
jmp
jl
out
jge
adc
sbb
sub
push
out
pushf
mov
test
(bad)
sti
dec
div
inc
jno
data16
mov
test
dec
dec
jle
leave
and
push
mov
cmp
imul
mov
add
cmp
xchg
fadd
shr
lods
in
jmp
aaa
adc
int
xor
pop
pop
xor
adc
pop
xchg
xchg
pop
gs
mov
std
or
test
jge
test
fistp
jne
(bad)
or
repnz
push
adc
stc
inc
mov
jae
ror
shl
jecxz
sbb
ja
stos
pop
xor
std
add
imul
sahf
nop
xchg
cmps
jmp
ins
or
push
movs
adc
cmp
outs
mov
gs
sbb
dec
adc
(bad)
fcomp
cld
jmp
sub
idiv
in
popf
inc
sbb
dec
adc
outs
or
mov
inc
and
sub
aam
dec
or
dec
xchg
mov
mov
ins
daa
add
fdivp
test
xchg
in
and
icebp
and
mov
jge
dec
jmp
lahf
out
sbb
sub
xor
popa
out
adc
in
jge
arpl
jecxz
and
std
fdiv
mov
out
mov
in
std
lahf
fist
and
jmp
xlat
in
je
or
sbb
stos
stos
in
shl
iret
daa
movs
ret
mov
aaa
loop
mov
iret
dec
jae
mov
iret
int3
in
lods
push
add
js
int
cmps
and
xor
fld
jg
xor
dec
(bad)
fcmovu
call
xchg
loopne
(bad)
cmp
inc
cmp
loop
xchg
push
in
xor
sub
rcl
jne
pop
add
shr
mov
scas
or
pop
(bad)
jmp
ret
and
call
xchg
mov
xor
fld
jg
rol
in
popa
mov
inc
or
and
ret
inc
(bad)
rol
fs
cs
push
mov
mov
outs
cwde
push
into
in
cwde
in
push
clc
imul
retf
cdq
push
sbb
(bad)
idiv
mov
lods
mov
push
loopne
mov
jg
and
in
pushf
je
dec
cmc
fwait
test
test
adc
idiv
pushf
lahf
xchg
xor
pop
fwait
hlt
adc
shr
add
xchg
jnp
jae
rol
icebp
in
pop
pop
jnp
stc
jo
jle
adc
sti
and
mov
xor
(bad)
push
and
push
jg
es
rcr
pop
pop
adc
add
cmp
inc
add
and
mov
dec
dec
ja
or
sub
inc
fdiv
sahf
xchg
aaa
cli
and
inc
shl
ins
jp
push
aam
stc
jge
adc
scas
aad
xchg
mov
fdivr
xor
fist
adc
iret
pop
call
xor
dec
mov
xchg
dec
add
das
pop
xor
mov
clc
and
test
push
ds
pop
mov
and
pop
fild
dec
mov
stc
pop
dec
arpl
jae
add
shr
sbb
push
jecxz
pop
iret
jge
aam
(bad)
retf
adc
lahf
mov
and
int
bound
add
jmp
adc
test
push
rcr
icebp
cmp
mov
dec
pop
xchg
mov
cmp
or
shr
adc
adc
enter
test
stos
mov
mov
sub
push
mov
sti
cld
jmp
mov
mov
xor
data16
in
jno
xor
call
pop
pushf
scas
lock
mov
lock
ins
addr16
inc
dec
sub
lods
das
and
add
in
dec
les
out
jbe
repnz
and
mov
pop
xchg
gs
jmp
(bad)
jmp
or
push
ins
pop
imul
adc
mov
bswap
pushf
xchg
mov
xchg
repnz
jge
xor
pop
adc
out
adc
adc
rcl
dec
sub
cmc
imul
pop
mov
test
push
and
inc
pop
sbb
mov
les
leave
das
lods
push
adc
ds
mov
xor
mov
cs
in
ficomp
aaa
les
fcom
push
test
movs
fiadd
repz
pop
jg
mov
or
add
pop
test
mov
shr
sub
jne
shl
lock
mov
retf
push
pop
clc
adc
mov
lahf
pop
cmp
xchg
push
mov
int
(bad)
(bad)
push
add
and
add
call
xchg
cmp
dec
xlat
or
out
outs
cld
dec
cdq
push
fld
ins
fs
jno
and
pop
sbb
mov
call
shl
test
and
imul
jmp
pop
adc
adc
and
shl
dec
addr16
adc
dec
popa
mov
(bad)
mov
(bad)
cmc
mov
push
pop
iret
adc
lea
stos
mov
and
in
movs
out
outs
inc
mov
mov
adc
xchg
push
cmp
inc
xor
dec
into
stos
stos
ins
mov
inc
mov
push
cmp
jmp
ss
hlt
mov
xor
lds
ja
and
fst
and
into
xchg
add
cwde
icebp
fwait
jecxz
outs
(bad)
inc
add
scas
ja
mov
xor
in
mov
(bad)
out
xchg
call
shr
push
daa
stos
mov
and
fdivr
mov
mov
repz
or
idiv
aad
out
cmps
and
aad
xor
mov
retw
adc
inc
push
inc
push
sbb
pop
(bad)
dec
cli
xchg
(bad)
jmp
adc
sub
ja
(bad)
inc
fdiv
pop
xor
divps
cmp
adc
sub
daa
jnp
enter
push
rol
ret
inc
stc
pop
sbb
jmp
pop
stc
dec
mov
je
ss
dec
add
push
adc
cmc
push
xor
shl
jbe
arpl
addr16
pop
jnp
fcmovne
and
cmps
(bad)
std
test
jmp
xor
push
dec
xor
mov
dec
dec
lods
cli
add
cwde
mov
lods
and
mov
xor
cmp
out
inc
jge
in
mov
scas
mov
jo
enter
call
cdq
cmp
jno
sbb
cmps
mov
mov
dec
div
iret
push
sbb
pop
daa
fld
stc
xor
and
jb
dec
gs
pop
xchg
in
dec
scas
sub
call
push
stc
push
push
jl
cmp
xor
pop
scas
add
adc
aaa
xor
test
cmps
pop
ret
js
sbb
enter
mov
retf
out
jno
ins
stc
test
push
mov
mov
add
ret
xchg
pop
cmp
jle
jmp
xchg
jne
jnp
loopne
cwde
cmp
fsubrp
add
sub
mov
fistp
dec
cwde
ins
inc
cmps
js
adc
mov
mov
inc
out
test
inc
je
push
test
jb
pushf
rcl
test
xor
adc
or
ds
mov
stc
(bad)
addr16
pop
popa
rol
cmps
dec
jns
popa
mov
test
pop
push
gs
es
sub
stos
pusha
sub
fidivr
ror
sar
das
or
in
xchg
fisubr
iret
lea
jno
adc
push
fadd
push
and
xchg
(bad)
in
dec
loopne
push
repz
jg
stos
int3
ins
or
call
popa
stos
add
aaa
dec
adc
add
xor
inc
mov
repz
arpl
xor
icebp
aaa
sub
lea
frstor
add
test
add
and
mov
out
cmp
sbb
jns
mov
lods
inc
mov
movs
mov
jns
mov
xor
jmp
int
xor
aad
shr
dec
sbb
arpl
addr16
or
jp
xchg
popa
jl
mul
mov
adc
pop
sbb
ins
shl
shl
add
neg
xor
lods
cmc
adc
add
repnz
dec
pop
pop
je
and
cmps
jmp
movs
sar
dec
or
mov
mov
aam
fwait
rol
aaa
mov
inc
pop
sbb
aas
mov
fstp
movs
in
mov
test
inc
xor
hlt
pop
and
or
cmp
inc
xchg
sbb
leave
mov
ins
scas
sbb
adc
jne
push
int
xor
and
sbb
xchg
jae
mov
in
mov
add
adc
into
ror
sbb
push
jns
inc
in
ror
loope
jns
add
leave
adc
sahf
push
push
sbb
xchg
lods
mov
js
mov
sbb
iret
mov
test
add
push
inc
adc
cmp
stc
out
repz
push
dec
adc
xor
std
add
bound
adc
fucom
jbe
lds
mov
push
rol
(bad)
fisubr
icebp
lock
stc
fstp
push
xchg
daa
cmps
inc
lods
pop
call
(bad)
fnstcw
jns
cmc
add
mov
push
mov
movzx
xor
xor
jl
(bad)
pop
ret
xchg
les
lods
enter
mov
js
mov
cwde
pop
push
jmp
dec
pop
sub
leave
mov
mov
xor
out
lock
jo
ds
(bad)
repz
mov
xor
jg
loope
sub
add
push
imul
pop
cdq
xchg
cli
mov
movs
add
test
mov
cmp
jbe
and
not
adc
(bad)
push
maxps
pusha
jno
outs
movs
push
inc
popa
or
dec
push
adc
outs
mov
push
mov
mov
cld
mov
scas
inc
outs
retf
cmc
pushf
fs
stos
xor
in
scas
ja
or
mov
pushf
nop
cmp
es
xor
add
outs
das
cs
in
bound
and
sub
and
adc
adc
mov
lods
push
lods
mov
or
js
je
push
mov
outs
cli
aas
mov
in
dec
bound
shl
and
mov
jp
(bad)
mov
mov
fchs
cmps
fwait
push
pusha
xchg
jno
shl
hlt
mov
test
mov
arpl
pusha
sub
jo
sub
xor
je
popf
and
mov
push
xchg
aam
pushf
mov
jmp
push
clc
movs
or
xchg
or
sahf
ins
xor
xchg
add
out
push
jmp
xor
mov
pop
hlt
popa
pop
repnz
lea
fsubp
jle
xchg
retf
pop
ds
add
or
outs
jp
jo
call
ficomp
pop
sti
shl
sti
jo
dec
inc
aad
push
or
jmp
outs
mov
rcr
(bad)
outs
ss
xor
les
in
test
setno
jecxz
test
repz
ror
inc
pop
aas
xchg
dec
and
adc
jecxz
movs
push
out
pop
cmp
add
sti
sahf
jno
fld
pop
pop
or
mov
stos
xor
sbb
xchg
cld
call
aas
sbb
stc
movs
or
mov
retf
xor
fisttp
jno
stos
jmp
push
(bad)
ds
add
(bad)
push
fisub
retf
int
inc
or
nop
sub
psrad
pop
jecxz
and
mov
add
xlat
pop
inc
out
pop
xor
push
lds
push
stos
or
loope
retf
push
ret
ror
dec
pop
movhps
push
lock
or
movs
out
push
pusha
inc
sti
fdivr
push
movs
and
es
and
and
jl
jmp
xor
push
in
mov
hlt
xor
inc
and
mov
xor
fwait
inc
pop
cmp
pop
sbb
popf
pop
lods
ror
cld
sti
pop
aam
call
aaa
cmp
add
xor
test
push
cmp
rcr
in
lock
fwait
aaa
jns
adc
cdq
out
adc
dec
xor
pop
mov
mov
les
mov
nop
push
mov
xor
inc
jecxz
ds
inc
push
and
pop
ror
test
add
arpl
xchg
movs
enter
jp
mov
sub
dec
icebp
in
adc
pop
jg
or
aad
ret
jg
mov
mov
mov
mov
and
cs
je
popa
or
retf
xor
add
sub
outs
neg
mov
jl
sbb
cdq
in
mov
sbb
inc
aaa
mov
and
(bad)
call
dec
jle
es
rcl
(bad)
nop
iret
sbb
mov
sub
xchg
inc
pop
mov
xchg
cmovne
cmps
icebp
sub
mov
sub
sub
xchg
add
sub
push
dec
enter
fisubr
mov
mov
imul
jb
xchg
repz
cmp
inc
xor
or
mov
mov
lods
sub
push
jle
retf
push
loop
clc
aaa
icebp
loope
dec
pop
adc
dec
out
hlt
dec
dec
or
push
ins
outs
(bad)
jg
(bad)
stos
xchg
movs
or
dec
loop
mov
(bad)
jnp
cmps
sub
ror
movs
imul
loopne
hlt
and
in
test
push
push
cmc
mov
pop
jl
mov
inc
xchg
jmp
nop
or
dec
mov
nop
mov
outs
outs
dec
jg
mov
hlt
mov
mov
mov
and
nop
ror
jmp
nop
push
or
clc
pushf
std
cmp
sub
ins
outs
fsub
pop
mov
or
clc
cmc
inc
js
xlat
mov
cmc
dec
ins
cmp
lock
sbb
mov
inc
push
add
inc
push
add
data16
or
int
jl
retf
adc
dec
adc
adc
test
fs
push
stos
jbe
pcmpeqd
push
aas
mov
mov
loop
pop
dec
addr16
test
jmp
xchg
jle
mov
pop
mov
xchg
hlt
mov
aaa
ja
push
ins
aad
sbb
and
std
push
sbb
dec
jecxz
aam
adc
into
cmp
dec
dec
jne
pop
jae
int
xchg
test
mov
repnz
shr
lock
mov
jmp
push
push
adc
sahf
dec
adc
jmp
add
nop
push
cmp
jb
push
fwait
sub
mov
stc
int
in
pusha
mov
call
lahf
out
(bad)
enter
jb
addr16
xchg
movs
outs
and
push
loopne
cld
pop
loope
or
stc
test
mov
ret
mov
(bad)
repnz
pusha
mov
pop
int
cld
pop
cdq
mov
ret
xor
fisttp
fwait
mov
nop
pop
iret
imul
iret
imul
iret
imul
iret
imul
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
aas
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
push
ins
mov
mov
sub
sub
sub
sub
shl
or
out
shl
or
out
shl
or
out
shl
or
out
shl
or
out
shl
or
out
shl
or
test
adc
adc
adc
adc
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
pusha
jns
std
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
test
aam
or
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
je
sahf
(bad)
mov
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
jl
pop
jl
pop
jl
pop
jl
pop
jl
pop
jl
pop
jl
pop
jl
pop
jl
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
test
test
test
test
test
test
test
test
test
test
test
test
test
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
ficom
movs
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
dec
aad
fsub
fsub
fsub
fsub
fsub
fsub
ss
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
sub
cli
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
loope
pop
stos
hlt
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
out
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
in
ficom
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
fs
cs
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
enter
add
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
ror
rcl
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
rcl
adc
rcl
dec
rol
or
rol
or
rol
or
rol
or
rol
or
rol
or
rol
or
mov
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
push
cmps
aaa
into
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
test
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
fnstcw
fnstcw
fnstcw
fnstcw
fnstcw
fnstcw
fnstcw
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
pop
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
cmp
ds
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
aad
scas
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
and
loopne
arpl
aam
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
cmp
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
test
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
stc
and
stc
and
stc
and
stc
and
stc
and
stc
and
stc
and
stc
and
stc
and
stc
and
stc
and
stc
jmp
js
loop
jmp
js
loop
jmp
js
loop
jmp
js
das
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
imul
imul
imul
imul
imul
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
popf
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
ins
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
scas
mov
daa
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xlat
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
es
es
es
es
es
es
es
es
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
jae
movs
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fsubr
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
div
leave
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
hlt
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
or
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
jns
out
xchg
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
(bad)
icebp
fbstp
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
inc
fcmovne
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
add
add
add
add
add
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
cli
jo
les
ins
cmc
les
ins
cmc
les
ins
cmc
les
ins
cmc
les
ins
cmc
les
ins
cmc
les
ins
cmc
les
ins
cmc
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lds
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
out
mov
fistp
fistp
fistp
fistp
fistp
jo
add
add
add
add
add
add
add
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
sub
stos
mov
sbb
mov
mov
sbb
mov
mov
sbb
mov
mov
sbb
mov
mov
sbb
mov
mov
sbb
mov
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
push
fwait
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
test
scas
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
stos
sahf
iret
and
std
and
std
and
std
and
std
and
std
and
std
and
std
and
std
and
std
and
std
and
std
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
or
nop
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
jb
jae
mov
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
popa
and
mov
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
pop
in
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
inc
(bad)
test
inc
(bad)
test
inc
(bad)
test
inc
(bad)
test
inc
(bad)
test
inc
(bad)
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
outs
xor
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
cmp
(bad)
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
push
jge
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
jns
sti
icebp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
aad
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdiv
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
jne
dec
fst
fst
fst
fst
fst
fst
fst
fst
fst
fst
pop
es
es
es
es
es
es
es
es
es
ret
add
add
add
add
add
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
clc
mov
shr
lods
repnz
lods
repnz
lods
repnz
lods
repnz
lods
repnz
stc
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
(bad)
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
cdq
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
into
out
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
ins
or
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
pop
jp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
mov
loop
or
mov
loop
or
mov
loop
or
mov
loop
or
mov
loop
or
mov
loop
or
mov
loop
or
mov
loop
or
mov
dec
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
inc
cs
jmp
lahf
(bad)
jmp
lahf
(bad)
jmp
lahf
(bad)
jmp
lahf
(bad)
jmp
lahf
(bad)
jmp
lahf
(bad)
jmp
lahf
(bad)
jmp
pop
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
sub
test
xor
xor
xor
xor
xor
adc
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
je
cwde
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aas
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
sar
pop
neg
jns
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
fdivr
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
xchg
mov
jmp
(bad)
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
cmp
scas
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
aaa
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
(bad)
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
(bad)
out
inc
inc
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
les
icebp
mov
icebp
mov
icebp
mov
icebp
mov
icebp
mov
mov
sub
mov
sub
mov
sub
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
push
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
lds
movs
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
fld
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
and
and
and
and
and
and
and
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
dec
jmp
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
rcr
mov
mov
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
movs
and
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
retf
mov
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
inc
lods
push
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
loopne
test
or
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
hlt
mov
xchg
rcl
rcl
rcl
rcl
rcl
ror
add
inc
or
or
or
or
or
or
or
or
or
aam
push
aam
push
aam
push
aam
push
aam
push
aam
push
aam
push
aam
push
aam
push
aam
push
stos
enter
aad
enter
aad
enter
aad
enter
aad
enter
not
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
push
out
popf
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cs
cli
cdq
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
sub
sub
sub
sub
and
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
cmc
jno
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
sbb
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
xchg
std
outs
pop
clc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
and
and
and
and
and
and
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
loope
adc
int
loope
adc
int
loope
adc
int
loope
adc
int
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
pushf
mov
ret
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
pop
out
inc
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
sub
ins
sub
ins
sub
ins
sub
ins
sub
ins
sub
ins
sub
ins
sub
ins
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
int3
push
std
int3
push
std
int3
push
std
int3
push
std
int3
push
std
int3
push
std
int3
push
std
int3
push
std
arpl
test
int
arpl
test
int
arpl
test
sahf
mov
sahf
mov
sahf
mov
sahf
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pusha
xchg
xchg
xchg
jmp
fidivr
jmp
fidivr
jmp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
fisttp
push
shr
shr
shr
shr
shr
shr
shr
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
xchg
aam
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
jg
pop
add
or
or
or
or
or
or
or
or
mov
sar
sar
sar
or
in
or
in
or
in
or
in
or
in
or
in
or
in
or
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
xchg
sub
sub
sub
sub
sub
sub
sub
sub
clc
test
clc
test
clc
test
clc
test
clc
test
clc
test
clc
test
clc
test
jns
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
jge
xchg
jge
xchg
jge
xchg
jge
xchg
jge
xchg
jge
xchg
jge
sub
sub
sub
sub
dec
push
addr16
push
addr16
push
addr16
push
addr16
push
addr16
push
addr16
push
addr16
push
push
cli
fstp
cli
fstp
cli
fstp
cli
fstp
cli
fstp
cli
fstp
cli
fstp
cli
(bad)
repz
repz
repz
repz
repz
repz
repz
repz
push
aas
pop
push
aas
pop
push
aas
pop
push
aas
pop
push
aas
pop
push
aas
pop
push
aas
pop
push
aas
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
sti
mov
push
test
push
test
push
test
push
test
push
test
push
test
push
test
push
test
dec
rcr
pop
dec
rcr
pop
dec
rcr
pop
dec
rcr
pop
xchg
cmps
arpl
arpl
arpl
arpl
inc
add
test
test
test
test
test
mov
mov
add
add
add
add
jp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
jl
ret
jl
ret
jl
ret
jl
ret
jl
ret
jl
ret
jl
ret
jl
ret
gs
gs
gs
gs
mov
aad
test
mov
aad
test
mov
aad
(bad)
xlat
std
(bad)
xlat
std
(bad)
xlat
std
(bad)
xlat
std
(bad)
xlat
std
(bad)
xlat
std
(bad)
xlat
std
(bad)
xlat
mov
push
mov
push
mov
push
mov
push
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
loope
jmp
loope
jmp
test
or
or
or
cwde
cld
xor
xor
xor
xor
cmp
jnp
cmp
jnp
cmp
ins
dec
xchg
ins
dec
xchg
ins
dec
xchg
ins
dec
xchg
ins
dec
xchg
ins
dec
xchg
ins
dec
xchg
fs
fs
fs
fs
fs
fs
fs
fs
jle
popa
jle
popa
jle
popa
jle
popa
jle
popa
jle
popa
jle
popa
jle
popa
frstor
frstor
frstor
frstor
frstor
frstor
frstor
frstor
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
int
mov
push
int
mov
push
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
sahf
xchg
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
push
push
fcom
fcom
fcom
fcom
fcom
fcom
fcom
retf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
lds
sub
lds
sub
rcl
xchg
xchg
rcl
xchg
xchg
rcl
mov
imul
mov
imul
mov
imul
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
daa
mov
sub
or
sub
or
sub
dec
cmps
mov
cmps
mov
cmps
mov
cmps
mov
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
out
pop
mov
pop
mov
pop
mov
pop
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sbb
pop
dec
sbb
pop
dec
sbb
jmp
shr
aam
jmp
shr
aam
jmp
in
fwait
in
fwait
in
fwait
in
fwait
in
fwait
in
fwait
in
fwait
in
xor
pushf
js
pushf
js
pushf
js
pushf
js
pushf
js
pushf
js
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
outs
mov
fmul
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
push
mov
push
mov
push
mov
push
mov
mov
pop
mov
pop
mov
pop
mov
pop
shr
shr
shr
shr
shr
shr
shr
shr
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
jecxz
push
pusha
mov
pusha
mov
pusha
mov
pusha
mov
xchg
push
in
push
in
push
in
push
in
push
in
push
in
push
in
push
in
jge
sar
sar
sar
sar
sar
sar
sar
and
and
and
and
mov
out
(bad)
mov
out
(bad)
mov
out
or
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
ja
push
jns
jecxz
pop
jecxz
pop
jecxz
pop
jecxz
pop
jecxz
pop
jecxz
pop
jecxz
pop
jecxz
lahf
scas
lahf
scas
lahf
scas
lahf
scas
lahf
scas
lahf
scas
lahf
scas
lahf
imul
imul
imul
imul
imul
imul
imul
imul
xchg
scas
(bad)
xchg
scas
(bad)
xchg
scas
(bad)
xchg
scas
(bad)
xchg
scas
(bad)
xchg
scas
(bad)
xchg
call
aas
call
aas
call
aas
call
aas
mov
mov
mov
mov
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
and
pop
ss
es
es
es
es
es
es
es
es
leave
in
in
leave
in
in
leave
in
in
leave
in
in
leave
in
in
leave
in
in
leave
in
in
leave
in
mov
cmp
mov
cmp
and
and
and
and
and
and
and
and
retf
retf
retf
retf
retf
retf
retf
retf
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
(bad)
pop
cmps
sti
outs
or
outs
or
outs
or
outs
or
outs
or
outs
or
outs
or
outs
or
adc
adc
adc
adc
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
movs
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
aaa
mov
sub
sub
sub
sub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
fisub
repz
repz
repz
repz
repz
repz
repz
repz
addr16
addr16
addr16
addr16
shr
shr
shr
shr
shr
shr
shr
shr
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
push
call
push
call
push
call
push
call
mov
push
mov
push
mov
push
mov
push
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
cmp
sahf
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
out
jg
dec
jg
dec
jg
dec
jg
dec
jg
dec
jg
dec
jg
dec
jg
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
cwde
daa
mov
daa
mov
daa
mov
daa
mov
fnsave
fnsave
fnsave
fnsave
scas
adc
scas
adc
scas
adc
scas
adc
scas
adc
scas
adc
scas
adc
scas
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
dec
xchg
mov
xchg
mov
xchg
mov
xchg
mov
cli
out
pusha
cli
out
pusha
cli
out
pusha
cli
out
pusha
cli
out
pusha
cli
out
pusha
cli
out
pusha
cli
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
and
and
and
(bad)
(bad)
jmp
add
jb
gs
ins
gs
xor
add
enter
add
add
into
or
add
add
add
add
or
push
outs
ins
jns
gs
imul
or
push
dec
add
or
adc
push
popa
ins
addr16
imul
gs
xor
adc
add
add
add
add
or
dec
jo
popa
je
jbe
jb
cmp
adc
setp
and
in
add
add
inc
sbb
add
add
add
popa
push
add
pop
mov
add
or
add
add
add
bound
outs
arpl
add
add
add
add
lahf
add
add
fisttp
add
inc
sbb
or
inc
ins
popa
outs
ins
imul
push
out
pop
sub
retf
add
add
sbb
add
inc
add
xchg
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
jl
inc
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
and
enter
shl
add
and
pop
and
aam
inc
add
and
je
inc
add
jae
add
and
nop
and
fdiv
add
and
mov
jae
add
and
in
inc
add
and
test
inc
add
jae
add
and
les
inc
add
jae
add
jmp
in
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
pop
call
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
call
mov
call
cmp
je
call
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
call
fld
fadd
fstp
push
call
call
fld
fcomp
fnstsw
sahf
je
jmp
fld
push
push
fstp
call
movsx
mov
fild
fstp
fld
fcomp
fnstsw
sahf
je
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
push
lea
push
call
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
xor
xor
or
push
inc
pop
cmp
jne
push
ret
add
(bad)
call
mov
ror
(bad)
call
lea
push
push
lea
push
lea
push
call
push
call
mov
mov
lea
lea
call
lea
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
push
lea
push
call
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
fwait
push
jmp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
call
mov
lea
call
mov
push
lea
call
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
int3
sahf
sahf
sahf
sahf
dec
push
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
sbb
add
add
xor
add
add
push
imul
jbe
add
test
add
imul
into
imul
in
imul
adc
add
add
ja
add
cmp
add
push
push
add
add
add
jl
add
xchg
push
add
add
leave
add
or
add
fsubr
add
push
add
imul
imul
imul
imul
imul
imul
imul
add
and
outs
imul
imul
imul
imul
imul
imul
imul
add
add
push
inc
push
dec
xor
inc
dec
dec
add
push
add
dec
arpl
add
mov
pop
popa
fs
data16
popa
outs
add
js
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
bound
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
sbb
pop
pop
jbe
popa
push
cmp
outs
add
mov
pop
popa
fs
data16
gs
xor
sub
bound
gs
jns
je
ins
inc
jb
outs
jb
rol
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
push
popa
jb
test
pop
popa
fs
imul
xor
inc
pop
pop
jbe
popa
dec
bound
gs
cmps
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
pop
imul
xor
imul
dec
jae
outs
add
outs
add
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
gs
add
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
push
data16
je
outs
add
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
push
add
dec
jae
jb
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
mov
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
push
data16
gs
add
scas
add
fs
imul
ss
add
bound
push
inc
js
gs
imul
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
push
add
dec
ins
outs
add
test
popa
dec
gs
add
push
imul
xor
add
push
imul
xor
imul
fs
imul
xor
add
stos
add
fs
imul
push
add
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
mov
pop
popa
ins
ins
ins
jne
add
pop
inc
dec
je
outs
add
push
add
dec
gs
add
lods
add
jbe
popa
inc
jb
gs
bound
add
bound
jb
gs
je
add
