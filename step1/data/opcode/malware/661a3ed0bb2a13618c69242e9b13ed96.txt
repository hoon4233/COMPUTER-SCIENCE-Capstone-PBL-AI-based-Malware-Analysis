lea
mov
add
je
adc
xor
mov
cmp
outs
xchg
inc
sub
int3
dec
repz
or
sub
mov
inc
xor
xchg
inc
dec
mov
ds
and
push
sahf
das
or
push
xor
mov
mov
and
into
(bad)
clc
test
scas
(bad)
pop
call
cdq
clc
xor
xor
in
outs
sub
push
mov
and
in
inc
fmul
js
js
sub
push
in
pop
cwde
inc
add
mov
mov
stc
mov
cmps
jmp
adc
pop
out
inc
mov
cdq
mov
test
xchg
cli
or
fnstcw
push
mov
sub
ins
popf
dec
sbb
mov
sub
or
sub
xor
xor
sub
and
(bad)
adc
xor
inc
inc
mov
leave
adc
pop
xchg
fld
out
out
cs
ss
xchg
or
xor
sbb
dec
mov
add
jmp
gs
push
xchg
push
das
push
xchg
or
enter
xlat
popf
cmp
test
xor
jle
cmp
mov
cdq
dec
xchg
push
test
sub
sbb
inc
fisubr
xor
loopne
lods
mov
in
pop
lahf
cdq
mov
lahf
mov
or
inc
adc
ret
movs
sub
mov
lods
cmp
(bad)
mov
outs
mov
sub
mov
mov
xchg
xchg
test
out
xchg
jno
daa
shl
xchg
sbb
mul
neg
cmova
pop
sbb
out
lahf
popa
mov
mov
inc
pop
xchg
mov
imul
or
mov
ret
dec
mov
cmc
push
sub
jns
fild
cmp
add
hlt
cmps
cmps
xor
pop
push
or
and
push
out
jmp
sbb
loopne
(bad)
mov
adc
int
cmc
inc
jb
mov
or
cmp
mov
repz
jns
xchg
aam
fisttp
out
imul
mov
jo
stos
sahf
ret
test
mov
aaa
dec
add
mov
jmp
in
retf
or
sbb
scas
sar
ds
xor
inc
cmps
jae
test
lds
imul
mov
fwait
(bad)
repz
xor
push
fsub
(bad)
xor
pushf
push
jmp
add
push
rcr
ja
jae
or
sti
add
loope
jge
lahf
jl
out
aad
leave
jecxz
int
addr16
iret
cmps
stc
bound
or
or
jp
out
xor
lds
call
inc
aaa
jmp
add
and
cmp
popf
cwde
push
mov
ds
sbb
scas
adc
movs
push
cmp
pop
adc
push
pop
jl
lods
sar
cld
mov
add
dec
and
mov
push
push
sub
push
and
push
push
mov
xchg
in
xchg
mov
mov
add
int
mov
xchg
aam
mov
pop
nop
mov
or
popf
mov
pop
cdq
mov
xchg
ret
xchg
mov
xchg
push
mov
push
ins
inc
jo
mov
add
(bad)
fnsave
pusha
iret
imul
ins
fwait
mov
sub
mov
dec
cmps
stos
mov
and
and
xlat
js
es
or
loope
cmp
call
mov
push
jle
or
xchg
sub
add
ins
aam
in
push
call
push
inc
stc
pop
jo
fidiv
popf
hlt
loop
and
lods
pusha
(bad)
icebp
stos
jecxz
pop
pushf
fucomi
call
push
push
in
pop
sbb
(bad)
out
mov
mov
xchg
enter
arpl
inc
lock
cmp
(bad)
movs
inc
mov
jne
outs
outs
cmps
xor
aam
ds
ret
and
push
inc
repz
or
mov
jo
stos
inc
jne
rol
mov
sub
xchg
inc
inc
ss
clc
loop
dec
xchg
sub
arpl
cmp
sub
xor
outs
inc
push
pusha
sub
mov
push
bound
mov
hlt
sbb
mov
(bad)
and
shl
dec
mov
xchg
ins
push
mov
xor
pop
xchg
mov
dec
jne
add
imul
jo
mov
in
jle
fnstenv
ins
lods
xchg
or
call
stos
pop
inc
add
inc
sbb
in
or
movs
popf
mov
sbb
push
cwde
popa
or
add
sub
or
jo
loop
dec
add
std
mov
or
xchg
adc
addr16
enter
test
xlat
ins
rol
loope
sti
cdq
jecxz
cdq
shl
cld
push
jle
push
dec
mov
mov
cmp
or
jl
cmp
push
cwde
pop
call
xor
loopne
scas
xlat
ss
not
sbb
(bad)
or
lods
aad
test
arpl
loop
push
push
pushf
mov
imul
pop
aaa
sub
jo
mov
or
aad
sub
mov
mov
movs
xchg
js
sub
sub
sub
push
movs
sbb
or
std
inc
push
mov
scas
call
sbb
pop
inc
imul
mov
xlat
lods
jmp
jp
dec
xchg
movs
jnp
rcr
xor
pushf
push
popa
jle
cmp
ret
push
iret
fld
hlt
jmp
mov
or
lock
(bad)
mov
scas
call
sbb
test
add
call
pop
lock
pop
cmp
mov
lea
call
stos
aam
pushf
adc
(bad)
es
and
call
popa
mov
adc
pusha
outs
(bad)
nop
cmc
sbb
inc
ret
loopne
xor
fstp
addr16
add
(bad)
sub
cmp
pop
imul
das
or
pop
and
adc
mov
data16
(bad)
jecxz
fcom
jg
dec
jns
rcl
popa
adc
jg
mov
int3
(bad)
cmps
sub
xchg
jne
sbb
arpl
mov
and
daa
out
xchg
leave
lods
sub
icebp
je
scas
sahf
xchg
push
jl
movs
call
popf
stc
adc
inc
cld
pop
test
dec
mov
or
rcr
sbb
xchg
push
inc
or
and
ins
pop
cmp
scas
(bad)
xor
pop
mov
arpl
arpl
xor
jecxz
xchg
(bad)
or
call
and
xor
mov
pmulhuw
push
xchg
movs
jmp
jp
pop
aad
mov
aaa
int3
inc
push
fldenv
mov
out
jnp
cmp
dec
arpl
xchg
pop
lock
push
inc
cmp
pop
enter
xor
fbld
mov
dec
mov
xchg
ja
movs
shl
mov
rcr
lea
retf
add
push
daa
cld
xchg
test
retf
lds
scas
mov
pop
pop
inc
mov
pushf
or
xchg
xchg
or
stos
or
cld
movs
das
imul
jae
rol
add
sbb
push
ror
xchg
dec
xor
dec
jle
int3
push
pop
dec
ficom
dec
pop
adc
dec
aaa
inc
das
jg
cmp
inc
sbb
call
cld
mov
push
mov
mov
mov
repz
add
xor
dec
call
fisttp
pop
cmps
push
mov
mov
pop
fucom
inc
adc
jl
add
mov
out
pushf
cmc
sub
sbb
(bad)
lods
dec
and
imul
adc
(bad)
popa
sbb
mov
add
clc
mov
sbb
repnz
dec
loope
jp
lock
xor
shl
lock
or
sbb
jae
ror
jne
adc
or
call
xchg
fisubr
push
les
adc
repz
mov
push
jmp
xor
fwait
sub
in
in
add
fwait
xor
push
push
dec
out
cmp
sbb
movs
call
data16
mov
jle
adc
mov
nop
or
add
dec
nop
stc
xchg
fst
pushf
in
nop
pop
pop
dec
sub
adc
or
mov
add
popa
dec
fwait
fs
je
pop
inc
pop
pop
dec
xchg
push
cmp
pop
jns
inc
mov
push
test
inc
jne
xor
jl
rep
dec
sbb
xchg
sbb
fadd
dec
dec
loope
jg
lea
and
add
icebp
inc
test
dec
mov
mov
test
in
sub
sub
sahf
dec
fs
movs
xchg
sub
loop
in
mov
mov
mov
js
jo
stc
icebp
pusha
into
cmp
loopne
push
int3
cmp
xchg
or
test
push
mov
xor
js
scas
out
pop
add
adc
(bad)
lods
mov
popf
inc
jno
scas
fs
ret
xlat
inc
jl
or
ins
(bad)
jnp
and
test
jl
jmp
xchg
pop
in
(bad)
enter
sbb
scas
call
(bad)
cmps
push
mov
or
dec
or
js
jge
mov
mov
dec
xchg
sbb
xor
loopne
shr
pop
movs
cmp
and
leave
lock
mov
icebp
mov
sbb
test
ror
in
lahf
mov
xor
or
cmps
or
jbe
inc
ss
stos
jecxz
mov
add
mov
sahf
push
adc
(bad)
mov
push
clc
je
out
cs
test
cmc
xchg
adc
jmp
(bad)
and
dec
cmp
cld
xor
and
ds
push
ds
dec
test
and
mov
imul
sub
sub
adc
loop
(bad)
mov
pop
aaa
out
mov
sub
mov
out
test
int3
dec
jp
mov
mov
sbb
sub
mov
movs
test
sub
ret
gs
(bad)
hlt
push
mov
push
dec
push
pop
aad
in
mul
and
cli
nop
xor
pop
retf
push
aaa
and
sahf
and
mov
dec
xchg
lfs
pop
ja
fwait
repnz
int3
int
out
rcr
mov
jl
repz
mov
pusha
popa
in
or
sub
adc
ret
inc
icebp
or
jbe
push
test
push
loop
cmp
mov
test
ja
xor
mov
mov
fisubr
in
sub
cmp
dec
pop
mov
mov
retf
imul
call
in
in
and
out
sub
jne
(bad)
iret
push
enter
push
inc
adc
pop
mov
push
or
jmp
jmp
xor
stos
mov
fnstenv
dec
and
scas
or
adc
xchg
xchg
stc
call
dec
lea
cld
cmp
or
adc
adc
push
xor
test
popf
xlat
arpl
jo
jb
push
das
jns
pop
mov
dec
into
mov
hlt
nop
mov
pop
mov
add
pop
jle
dec
pop
mov
neg
test
mov
and
ins
mov
rcl
mov
mov
adc
mov
pushf
jmp
ins
push
lock
jge
je
jne
call
mov
mov
call
cmp
jge
add
jmp
dec
adc
inc
mov
ins
pop
add
jmp
(bad)
out
xor
pop
pop
lods
xor
ins
je
dec
fst
les
and
or
push
add
sbb
(bad)
fldcw
es
iret
xchg
push
(bad)
ja
popa
push
(bad)
xchg
outs
(bad)
jmp
inc
mov
loopne
es
cmp
push
in
je
adc
retf
retf
adc
test
inc
aad
idiv
jo
(bad)
fistp
jb
icebp
add
dec
inc
pop
adc
jb
aad
in
sub
inc
add
jge
fisubr
push
push
outs
shr
and
ror
outs
add
in
jb
sub
jbe
les
or
scas
jmp
int3
xchg
and
cdq
out
outs
popf
xchg
jb
mov
pop
pop
call
inc
or
fdiv
xor
pushf
dec
pop
out
fcom
jne
jae
jnp
dec
mov
adc
cmp
cmc
inc
mov
pop
ret
imul
jae
add
repz
ins
bound
setae
push
das
add
shr
ja
mov
dec
dec
adc
stc
mov
mov
sbb
ds
into
iret
cdq
enter
sahf
sbb
fild
pop
leave
inc
outs
mov
mov
mov
addr16
mov
mov
loop
rcr
in
out
gs
stos
or
leave
(bad)
fcom
push
adc
pop
inc
adc
call
pop
shl
dec
jns
cmps
arpl
xchg
xor
jge
ror
add
push
jmp
cld
add
clc
dec
mov
cmp
ds
(bad)
jbe
inc
mul
std
in
lock
mov
mov
icebp
cli
xor
xchg
in
mov
xor
mov
adc
push
das
inc
lods
xor
fs
add
mov
or
rol
ret
pop
in
cmp
push
xchg
(bad)
cdq
aam
adc
hlt
stos
jnp
test
aaa
mov
adc
sbb
std
inc
mov
ret
loope
loopne
cld
xor
sub
icebp
in
gs
push
clc
cmp
popa
test
nop
stos
pop
test
dec
int
inc
xor
cmp
cmp
icebp
inc
xor
jmp
pop
ror
jnp
dec
mov
nop
retf
out
sbb
adc
pop
popa
cdq
xrelease
data16
dec
inc
loope
lock
loopne
adc
repz
sahf
lea
mov
not
or
test
out
ins
dec
outs
shl
sub
xchg
add
jp
mov
(bad)
fld
jmp
add
add
and
mov
fwait
sahf
xchg
daa
in
jns
push
fldcw
jge
aad
adc
jb
es
mov
jno
popa
cld
push
and
and
jmp
mov
call
cmp
popf
outs
cmp
jne
(bad)
sub
stos
adc
enter
jno
cli
mov
jae
stc
mov
mov
dec
fcomip
int3
call
movs
push
mov
xor
lock
push
mov
stos
push
jecxz
and
mov
int3
sti
(bad)
push
cmp
in
dec
(bad)
jg
mov
sbb
xor
mov
repnz
ret
or
dec
pop
int3
ds
inc
add
or
sbb
movs
lock
mov
clc
(bad)
arpl
sahf
sub
add
cmp
push
popa
or
mov
pop
push
and
mov
inc
sub
sbb
retf
push
and
adc
mov
pop
jecxz
leave
pusha
and
sbb
jge
cmp
shr
enter
in
fadd
fsubr
daa
mov
xor
outs
inc
aam
mov
xchg
sbb
cmp
pop
cld
dec
sub
sub
xchg
push
push
in
ss
mov
jne
or
mov
cmp
xor
cs
in
sbb
push
jno
push
fistp
fdivr
inc
sbb
ror
jns
test
ror
mov
outs
or
adc
mov
fwait
adc
mov
ins
push
push
mov
lock
std
ja
or
fadd
mov
dec
arpl
jb
mov
mov
out
mov
out
cwde
xchg
movs
or
push
add
ins
push
push
mov
fild
push
pushf
cmp
pop
out
xor
js
mov
and
mov
sub
xchg
shl
cmp
(bad)
je
add
or
jne
lea
inc
or
jg
xchg
lea
push
outs
jp
jnp
push
cmp
sub
xor
mov
sub
cwde
imul
add
imul
out
jp
outs
(bad)
fstsw
add
out
imul
cmp
ins
inc
mov
test
and
inc
out
mov
pop
pop
mov
fild
mov
xor
adc
xchg
ficomp
push
mov
ret
sub
(bad)
mov
jp
cmps
add
jne
xor
or
lock
jl
ins
cmp
sub
popf
sub
ret
idiv
xchg
stos
sahf
mov
cs
std
jnp
test
pop
mov
scas
rcl
mov
xchg
aad
lock
add
add
xor
iret
pop
(bad)
mov
in
nop
loop
mov
sar
sub
push
cmc
pop
mov
mov
sub
mov
push
adc
push
adc
fbstp
loope
bound
xor
push
out
add
inc
push
or
inc
cdq
and
or
imul
mov
jns
ss
jnp
icebp
sbb
in
lea
stc
mov
sbb
cwde
imul
test
sbb
ss
dec
out
loop
popa
icebp
xchg
(bad)
enter
into
popa
adc
jg
jno
xor
not
cmp
and
or
push
ins
xchg
int3
xchg
out
jmp
or
dec
jge
fwait
sbb
lods
dec
cmp
cmc
enter
dec
lahf
xchg
cmp
jo
idiv
and
scas
movs
leave
cmp
jne
pop
mov
xor
push
call
xor
rcl
dec
lods
fsubr
ins
mov
adc
xor
in
call
jns
popa
jp
loop
out
(bad)
fdiv
rcl
xchg
in
ins
aaa
loop
or
cld
fistp
(bad)
mul
popa
lea
adc
xor
adc
jb
cmp
jmp
pop
sbb
mov
dec
mov
int3
cmp
xor
scas
jg
jg
mov
pop
xchg
pop
inc
pusha
push
xchg
out
mov
mov
mov
retf
or
popf
jne
daa
jo
in
xor
adc
sbb
mov
mov
aad
xlat
dec
add
xchg
inc
hlt
sbb
pop
cmp
xor
dec
lds
jg
test
retf
imul
(bad)
and
pop
mov
rol
test
mov
(bad)
(bad)
lds
lods
les
adc
mov
daa
mov
xor
cmps
jg
cli
pop
imul
push
push
into
outs
and
(bad)
daa
xchg
enter
(bad)
popa
mov
dec
rcr
adc
add
jnp
jecxz
in
retf
pop
xor
and
test
ss
out
aas
mov
test
aaa
jno
ins
das
sar
push
imul
sbb
inc
pusha
jno
jg
jo
in
and
inc
pop
adc
mov
sub
mov
out
mov
loopne
popf
jne
jle
push
cmp
cmp
movs
sbb
cmp
and
out
jo
xor
stos
jb
ins
jmp
cmp
cdq
pop
jns
popa
ins
inc
clc
add
add
pop
mov
popa
js
shr
and
(bad)
test
mov
call
pop
jae
ins
repnz
sub
pop
cmp
call
in
adc
lea
leave
iret
gs
inc
inc
in
pushf
mov
hlt
inc
ins
add
rcl
xchg
(bad)
(bad)
and
mov
inc
dec
frstor
xor
leave
repz
ja
repz
mov
(bad)
cmps
mov
xchg
inc
sahf
je
cs
mov
xchg
or
in
movs
mov
fst
jp
fisttp
retf
sti
mov
icebp
mov
add
add
(bad)
jbe
jle
addr16
xchg
jno
push
pop
dec
scas
jg
in
icebp
mov
repz
retf
stos
test
xchg
fdivr
sub
adc
retf
retf
mov
idiv
test
mov
shl
inc
mov
fst
in
into
test
and
rcr
xchg
dec
dec
jae
push
adc
mov
bound
mov
ds
arpl
dec
cmp
xchg
pop
iret
xchg
popa
ss
imul
loop
jge
stc
in
fsubr
les
and
push
popa
or
sbb
std
cld
cdq
and
dec
(bad)
lods
movs
(bad)
xor
jge
fs
sub
mov
clc
jo
xlat
xor
pop
fdiv
dec
pop
ficomp
adc
js
shr
xor
in
fdivr
mov
pusha
pop
or
dec
jno
jmp
pop
xchg
mov
shl
movs
mov
icebp
xchg
inc
push
mov
pop
or
or
lahf
es
mov
shl
sbb
out
out
rep
and
mov
fisttp
xchg
sbb
or
out
push
xor
inc
jg
xchg
push
xchg
fs
mov
lods
adc
aaa
add
cdq
push
inc
mov
mov
lea
jae
inc
mov
clc
stc
mov
popa
lea
ins
lds
adc
jg
outs
loopne
leave
(bad)
loop
lods
or
mov
pop
arpl
inc
sub
sti
rcr
dec
cmp
jo
mov
(bad)
mov
not
cmps
xchg
fdiv
arpl
push
xchg
jae
jecxz
add
push
fldenv
mov
pop
ret
sbb
xor
cmp
std
leave
xor
push
or
mov
fdivr
and
test
jp
int
pusha
mov
mov
aad
push
push
push
inc
xchg
dec
sbb
pop
push
jmp
mov
rcl
dec
sub
repnz
push
sub
pop
inc
cwde
adc
aam
mov
fcmovnb
ficomp
cld
add
jecxz
pop
mov
sub
push
repz
pop
sub
mov
cmp
sbb
adc
sti
jns
ds
add
pop
xor
ins
dec
fadd
xchg
mov
test
and
xor
jnp
daa
dec
int
mov
cli
ins
sub
popf
jge
and
xor
bound
dec
mov
dec
mov
clc
(bad)
scas
pop
pop
test
int3
jge
or
mov
push
retf
pop
in
psllq
(bad)
xor
lock
cmp
stos
push
je
or
nop
or
or
add
cmp
outs
ins
sbb
int3
jg
in
in
mov
pop
push
push
push
mov
cmps
sbb
cdq
jl
pop
adc
cmps
xor
adc
(bad)
arpl
stos
lea
dec
mov
mov
sub
mov
xchg
ret
in
xor
mov
mov
out
mov
push
ds
sub
movs
in
ins
loope
outs
mov
adc
xor
or
dec
pop
jae
(bad)
aad
les
mov
adc
fmul
or
nop
ss
add
inc
ret
mov
mov
xchg
add
test
jl
jnp
ror
adc
outs
gs
mov
push
push
jns
scas
jle
jl
cmc
hlt
push
sbb
cld
rcr
add
dec
jnp
sub
push
jnp
stos
xchg
(bad)
outs
fild
xchg
rsm
ret
adc
inc
push
jmp
sahf
pop
scas
sbb
clc
enter
push
pop
xor
xchg
nop
or
cmp
jg
fisubr
sub
jnp
mov
pop
stos
cmp
and
adc
mov
mov
outs
(bad)
xlat
fisubr
leave
movs
shl
or
cmp
or
push
das
cmp
clc
mov
push
rcl
lock
xor
xor
jbe
bound
add
bound
pop
test
(bad)
adc
pushf
inc
push
cmp
mov
xchg
nop
cmp
clc
mov
push
popf
leave
mov
push
sbb
fisub
cmp
leave
fdiv
jg
sbb
adc
clc
and
jg
xchg
mov
sahf
add
adc
sbb
xchg
cmp
daa
loop
dec
inc
lock
in
cmp
cmp
fistp
xor
fisttp
cld
sahf
xchg
rcl
rcl
jmp
icebp
call
push
or
jp
cmps
daa
push
xchg
mov
mov
ins
sub
adc
cmp
lods
xor
dec
jecxz
inc
ret
(bad)
std
jge
push
ret
adc
add
cmp
je
leave
mov
imul
jecxz
add
lea
and
ret
cs
lock
rcr
push
jl
push
iret
sub
cld
fldcw
mov
xchg
mul
sub
dec
hlt
xchg
add
add
shl
sub
mov
loopne
sbb
outs
mov
cld
aaa
jp
cmp
fdiv
mov
imul
and
xlat
cdq
xor
cdq
into
xor
cdq
mov
retf
jns
or
pushf
sub
xchg
xor
or
xlat
sbb
rcr
test
xchg
and
js
mov
jb
fidiv
imul
ja
dec
inc
js
ins
pop
xchg
shr
test
jb
(bad)
lahf
dec
push
inc
retf
xchg
push
mov
or
jae
iret
push
ret
pop
inc
in
cmc
jle
push
inc
into
mov
(bad)
or
jnp
mov
into
hlt
dec
xor
and
out
sub
sti
sbb
aad
mov
sahf
sbb
sbb
clc
bswap
pushf
xchg
cwde
or
clc
mov
(bad)
push
mov
(bad)
pop
mov
(bad)
rcl
pmulhw
cwde
imul
inc
test
cwde
es
dec
jne
retf
outs
jbe
mov
push
jae
not
hlt
int
imul
dec
nop
out
retf
pop
or
adc
xchg
or
push
and
push
popa
mov
retf
adc
aaa
hlt
sbb
adc
pusha
mov
shl
rcr
pop
inc
frstor
rol
mov
sahf
dec
div
push
push
mov
cld
std
mov
sub
mov
push
push
enter
pop
push
call
jecxz
push
sbb
popf
ror
push
imul
cmps
cld
aas
dec
jmp
js
push
jmp
lea
pop
or
lahf
out
mov
or
test
push
cli
fs
movs
gs
inc
test
dec
inc
out
ja
cli
pop
call
mov
pop
sti
jb
jp
ins
dec
gs
and
pop
xor
cld
in
or
inc
cmp
lods
cmp
sub
push
push
data16
fadd
cwde
(bad)
xchg
mov
mov
pop
imul
mov
adc
and
xchg
jbe
jbe
and
sbb
sub
mov
in
loop
call
inc
sub
jmp
clc
pop
jecxz
pop
test
push
cmp
sbb
ror
pop
es
fld
lock
adc
jb
jb
loop
rcr
in
clc
sub
jecxz
sbb
mov
cmp
pop
ja
imul
cmp
inc
fistp
ret
sbb
in
xchg
out
or
iret
movs
lea
jp
sbb
inc
cmp
mov
xor
xor
mov
push
pop
cmps
mov
popa
pop
push
pop
cmps
xor
mov
loop
adc
mov
lahf
and
adc
or
cli
and
and
nop
fwait
jns
inc
jl
das
pop
and
jmp
push
pop
in
adc
dec
lahf
repz
imul
aad
mov
mov
cld
pop
mov
ins
cmps
jbe
adc
xchg
jle
(bad)
mov
std
mov
int3
mov
jp
gs
call
imul
pop
add
ret
js
rcr
rcr
xchg
das
imul
repnz
dec
push
adc
mov
mov
(bad)
jge
test
sahf
push
or
(bad)
out
jge
pushf
aas
(bad)
jmp
push
sub
mov
cmp
inc
ss
std
ds
dec
(bad)
loope
xor
stos
(bad)
jbe
ja
jno
mov
dec
lahf
pop
cmp
outs
gs
jae
retf
and
stos
adc
lds
xchg
outs
fwait
xor
aas
sar
jl
sbb
dec
adc
cmp
movs
scas
xor
inc
(bad)
dec
cmp
add
or
fmul
add
mov
leave
xchg
out
repz
loope
popa
inc
pop
xor
adc
aam
dec
jns
jge
ja
ret
xor
cld
mov
mov
jge
loop
jnp
sbb
fisttp
or
shl
pushf
xchg
sbb
out
retf
mov
dec
adc
movs
mov
in
dec
movs
add
inc
rol
dec
into
xor
icebp
(bad)
sbb
jle
push
push
and
sub
add
int
or
jno
pop
std
mov
lods
cmp
mov
int
xor
xor
lahf
ror
sbb
adc
or
wrmsr
movs
sub
xlat
ins
xchg
xchg
push
hlt
mov
fidivr
xor
and
aaa
mov
rol
das
fimul
xor
daa
mov
imul
mov
cmp
int3
or
retf
ret
pop
sbb
shr
or
cmp
xchg
(bad)
enter
push
vmovhps
inc
xchg
ret
fbld
ficomp
(bad)
push
pushf
pop
xchg
pop
and
pop
add
xchg
hlt
aad
push
jmp
popf
xor
push
test
lods
js
or
call
push
dec
mov
movs
(bad)
lahf
sbb
inc
movs
hlt
fcmovne
loopne
scas
scas
mov
jno
nop
jge
ss
jp
sbb
pop
or
push
add
or
rol
xlat
adc
pop
fmulp
scas
jl
sahf
jb
fmul
fst
test
jb
lock
lods
shr
jnp
shl
fsubr
mov
dec
sub
les
mov
mov
xor
(bad)
xchg
jb
pop
adc
idiv
push
and
(bad)
push
rcl
jns
and
and
cmp
call
mov
adc
dec
dec
sbb
adc
pop
out
je
and
rol
lods
std
cwde
scas
imul
mov
clc
jle
add
imul
mov
retf
or
enter
scas
fs
out
ja
add
out
and
lahf
arpl
aad
test
jb
jge
pushf
push
in
jl
(bad)
mov
jecxz
jnp
push
sub
push
scas
enter
or
arpl
imul
push
sbb
adc
std
dec
arpl
cmp
jmp
and
mov
out
out
or
sub
ins
xchg
sbb
mov
dec
rcl
repnz
dec
sub
or
xchg
mov
out
das
mov
retf
popf
and
mov
push
pushf
vcvtdq2pd
mov
pop
pop
jl
cmp
jmp
mov
xor
jnp
push
jno
out
mov
imul
push
cdq
(bad)
into
xor
mov
mov
xor
stos
jo
push
aad
jmp
mov
and
shl
movs
sbb
cmc
movs
mov
into
sahf
dec
in
fmul
jmp
out
cmps
inc
fdiv
popa
cmp
dec
add
shl
push
rol
clc
retf
sub
adc
and
inc
mov
pop
rol
or
cld
out
sahf
mov
xlat
inc
push
cmps
mov
cwde
mov
adc
neg
ja
cmp
stc
push
(bad)
ffree
movs
aam
(bad)
stos
sub
mov
push
test
mov
and
jno
adc
loopne
inc
sbb
xchg
fnsave
stos
loope
call
repnz
dec
lahf
and
fadd
add
retf
pop
js
pop
and
es
jl
jp
daa
imul
push
sbb
pop
js
xchg
cmp
sub
jno
inc
xor
ins
sbb
rcr
ins
loop
shl
popa
mov
in
jbe
bound
cmps
mov
(bad)
push
fcom
fisttp
(bad)
arpl
mov
pop
cmp
scas
(bad)
(bad)
adc
retf
inc
sub
adc
call
jno
xchg
(bad)
cmp
push
data16
in
jmp
in
xor
jl
lds
push
imul
mov
or
test
pushf
stos
inc
sbb
mov
mov
push
jnp
jmp
xchg
hlt
jmp
ja
mov
stos
jmp
cmp
push
stos
xchg
or
bnd
add
fadd
jno
cmps
test
in
ret
sbb
(bad)
out
popf
xchg
cmp
jmp
inc
inc
cmp
movs
in
ins
das
mov
aas
aad
xchg
mov
sub
stos
(bad)
push
gs
and
add
(bad)
pop
(bad)
scas
jmp
sti
jno
mov
lds
add
test
(bad)
mov
dec
push
dec
xchg
das
jle
xor
imul
adc
and
xlat
push
rep
dec
mov
neg
push
(bad)
int
cmp
popf
dec
cmp
mov
and
lods
xchg
dec
test
sbb
scas
mov
ss
or
retf
cdq
mov
push
out
cmp
push
pusha
push
jecxz
inc
jae
fisttp
mov
lea
add
add
mov
sbb
js
(bad)
and
mov
sbb
xor
lea
inc
sub
test
cli
mov
jle
rcl
sbb
pusha
in
pushf
or
jg
mov
int3
push
daa
lea
aas
xor
push
aam
adc
(bad)
xor
test
dec
ja
scas
xor
addps
mov
cwde
adc
(bad)
jecxz
add
dec
cmp
cli
sub
or
jbe
xchg
jns
imul
sub
jo
sbb
add
aad
push
adc
add
add
cmp
push
mov
pop
mov
shl
mov
shl
jae
xor
stos
int3
loopne
cmps
xchg
stos
leave
rcl
adc
mov
xchg
test
inc
push
shl
mov
repnz
mov
and
dec
in
fstp
ss
je
push
mov
and
jle
sbb
and
cmp
(bad)
mov
ds
daa
cmps
out
mov
(bad)
xchg
and
jle
shl
or
jne
jno
loopne
and
cmp
or
in
mov
or
not
cmp
and
dec
or
mov
outs
sub
mov
xchg
push
jle
mov
clc
jae
stos
ds
inc
es
mov
in
movs
fistp
inc
sub
test
push
lds
ins
repz
add
mov
fnstenv
sub
pop
in
mov
mov
mov
fild
mov
js
push
cdq
push
pop
frstor
jecxz
xchg
shl
leave
lea
cwde
int3
add
in
dec
ja
test
outs
pop
mov
or
fwait
icebp
add
nop
sbb
fnstsw
pop
pop
adc
inc
xchg
mov
fistp
sbb
daa
jecxz
fmulp
outs
arpl
int
cmps
aaa
lock
dec
int3
push
shr
add
push
inc
pop
cmps
dec
xchg
shr
out
mov
pop
test
mov
push
push
xchg
adc
cmps
pop
ret
mov
shr
(bad)
pop
adc
retf
mov
fnstcw
xor
lods
call
test
xor
or
and
bound
dec
(bad)
cmp
xchg
test
sti
pop
adc
and
mov
or
jae
inc
and
mov
aad
cld
pop
mov
mov
jle
jbe
mov
or
loop
xlat
int3
loopne
dec
in
cmc
loop
repnz
mov
or
popa
add
out
mov
in
call
xchg
mov
movs
or
rcr
ficom
mov
pusha
ffreep
add
mov
jmp
fmul
push
mov
mov
mov
pusha
mov
cmp
pop
dec
jb
dec
fadd
add
test
jne
and
jl
mov
xor
cmc
fbld
mov
mov
mov
pop
add
stos
inc
cmp
dec
fwait
addr16
cmp
cmp
test
jnp
xchg
xchg
jl
fisub
cs
movs
push
jp
pushf
mov
push
jnp
inc
clc
fldenv
scas
adc
repz
mov
mov
and
inc
or
push
into
xchg
jae
outs
push
pop
push
mov
sub
fxch
xchg
mov
pop
lea
data16
mov
cmp
cmp
fdivr
(bad)
(bad)
es
movs
add
inc
add
xchg
xchg
and
in
jg
aad
(bad)
push
cs
sub
and
das
lahf
adc
inc
jmp
mov
jle
xor
jbe
pop
outs
in
mov
lods
cli
dec
dec
es
inc
or
out
push
imul
add
pop
mov
daa
and
daa
xor
in
movs
adc
add
pop
stc
add
into
mov
retf
inc
cmps
pop
push
cdq
cdq
in
movs
test
(bad)
fstp
lods
jle
pop
mov
mov
adc
or
clc
scas
jge
dec
fnstenv
out
pop
xchg
inc
add
mov
sbb
enter
sub
push
add
mov
jnp
pop
(bad)
sub
lods
adc
push
sbb
xchg
or
or
mov
inc
call
inc
pop
loop
es
mov
push
push
push
aas
or
mov
xor
pop
inc
test
inc
cdq
shr
xchg
ret
jae
(bad)
das
lods
dec
cs
sbb
pop
out
push
sbb
ret
pop
test
lods
lods
mov
rcl
enter
test
sbb
pushf
xor
popa
mov
popf
and
inc
or
cmc
daa
dec
out
jp
mov
sbb
in
cmc
cld
cmp
add
and
(bad)
test
add
outs
push
add
inc
mov
dec
lods
test
dec
push
stos
cmc
add
lahf
dec
mov
dec
fstp
je
loope
xchg
bound
iret
add
mov
add
sub
jae
mov
ins
jecxz
cmp
outs
call
and
scas
cmps
lea
nop
mov
in
mov
lea
dec
jmp
outs
mov
xor
(bad)
loope
retf
inc
pop
jle
call
xor
dec
or
scas
cld
or
mov
retf
aas
xor
xor
xadd
mov
mov
neg
or
pop
jb
imul
or
or
popa
dec
fiadd
push
pop
cmps
jge
call
sbb
mov
cdq
or
hlt
xchg
xchg
inc
fistp
ins
ins
pop
add
hlt
mov
retf
xchg
out
imul
mul
jo
cdq
popa
mov
lahf
jmp
xor
inc
mov
inc
xor
add
sti
and
xchg
cli
mov
ins
or
das
and
loopne
mul
mov
cli
ret
sbb
outs
jne
cld
test
shl
sub
push
enter
ds
dec
and
push
(bad)
aas
dec
sub
sub
std
adc
gs
nop
push
adc
movs
cmp
out
mov
enter
push
xor
fwait
loop
jge
or
adc
loopne
cwde
call
pop
pusha
add
aaa
dec
mov
nop
popa
in
lods
cli
sbb
outs
pop
lods
dec
push
shr
lods
mov
add
add
mov
or
scas
mov
gs
jecxz
sub
stos
cli
daa
and
push
xor
and
mov
mov
adc
stc
lahf
not
push
jle
fldcw
call
and
ss
xchg
pop
sub
mov
push
push
in
mov
or
lds
sbb
movs
xchg
inc
push
ror
xor
xchg
pop
xchg
in
idiv
add
dec
xchg
imul
(bad)
pop
cmps
mov
pop
xchg
pop
pop
rol
call
pushf
ins
xchg
leave
pop
sar
mov
pop
lods
fldcw
test
mov
inc
cmp
add
ja
jmp
lds
xor
or
sar
pop
push
and
and
call
push
and
sbb
stc
retf
scas
call
daa
mov
pop
mov
cdq
mov
dec
adc
sti
pop
and
add
fsubr
outs
pop
cmc
gs
loope
mov
imul
mov
mov
xor
fdiv
div
pop
ror
jno
stos
(bad)
sti
push
call
add
inc
(bad)
xchg
mov
sbb
inc
(bad)
fsubr
mov
pop
xor
jmp
jnp
or
sbb
xor
aas
lods
cdq
mov
(bad)
fbstp
movs
shr
fs
out
mov
(bad)
in
out
mov
(bad)
mov
imul
dec
js
add
int
imul
and
or
push
xor
sub
and
push
pop
(bad)
nop
fisub
mov
pop
(bad)
(bad)
aas
mov
sub
push
dec
(bad)
xor
sbb
fstp
sbb
adc
enter
and
aas
sbb
das
xchg
mov
xchg
pop
xchg
jo
pop
in
pusha
scas
sbb
test
pop
pop
outs
cmp
cmp
imul
dec
xchg
ja
add
int
mov
or
stc
lea
cmp
scas
rcl
jmp
cmp
fcomp
movs
data16
pop
adc
ja
inc
retf
arpl
(bad)
mov
jno
fcomp
ret
je
push
sub
sub
xchg
xor
and
popa
mov
inc
inc
rol
jo
fwait
sbb
movs
in
cmp
sub
sbb
repz
cs
outs
mov
test
test
loope
repz
cmps
inc
nop
cmp
je
xor
dec
sbb
jno
push
add
mov
out
jmp
mov
pop
and
bound
scas
dec
(bad)
cmp
or
ror
inc
add
aaa
test
stos
push
cmp
rol
xor
xchg
fdivr
scas
mul
xor
iret
rcr
mov
popa
fcomi
lods
jl
mov
clc
mov
adc
dec
mov
pop
dec
aam
in
fisubr
fwait
pop
cmp
cmp
pop
mov
jge
pusha
leave
ret
aas
jmp
push
jnp
aaa
pop
xor
ins
pop
sbb
inc
test
add
push
mov
mov
and
cmps
or
cdq
cdq
pop
mov
in
xchg
sbb
pop
loopne
sub
push
imul
jmp
(bad)
retf
nop
inc
mov
mov
leave
push
in
aaa
mov
test
stc
movs
outs
mov
xchg
int3
xlat
lahf
pushf
xchg
xchg
into
pmuludq
cli
mov
clc
mov
cmp
in
stos
fdivr
mov
sbb
or
jae
mov
in
hlt
sbb
pop
(bad)
jns
mov
add
jmp
ret
or
lods
lods
and
cmc
daa
cmp
inc
xchg
cmp
int3
ret
adc
sbb
inc
(bad)
mov
add
or
inc
jae
xlat
mov
cmp
add
mov
div
fst
push
xor
xchg
jmp
shr
and
inc
xlat
cmp
ss
lea
mov
mov
add
xchg
mov
or
call
push
and
jno
enter
or
inc
and
add
(bad)
sti
bound
sbb
pop
cmp
pop
ins
arpl
lds
or
icebp
ror
push
cmp
adc
cli
cmp
daa
and
jno
inc
pop
jnp
aaa
jae
enter
int3
mov
push
jl
sub
outs
inc
jbe
sub
(bad)
sub
fadd
pop
and
or
aam
dec
sbb
inc
lock
hlt
mov
stos
mov
mov
jbe
mov
fs
fild
bnd
mov
adc
inc
pop
fld
das
dec
(bad)
jecxz
mov
xchg
(bad)
adc
xchg
enter
push
cdq
sub
fisub
addr16
adc
retf
push
jl
pop
idiv
mov
push
add
adc
cmp
or
fld
cmc
js
push
mov
fnstsw
lahf
jae
push
(bad)
xor
dec
mov
retf
les
or
cmp
js
(bad)
mov
repz
mov
sbb
addr16
pop
xor
sahf
aaa
in
jbe
sbb
mov
aam
and
test
pop
dec
inc
pop
in
pop
sbb
cmp
(bad)
sar
mov
(bad)
fcom
test
add
cmps
push
mov
les
pop
mov
adc
into
xchg
dec
test
push
outs
jmp
mov
or
(bad)
lock
(bad)
scas
pusha
and
fmul
mov
jae
push
call
into
movs
mov
add
and
mov
test
adc
pop
in
out
xchg
dec
call
call
xchg
and
cmp
or
pop
data16
cmp
push
outs
mov
pushf
into
push
cld
dec
movs
div
fld
nop
mov
pop
ret
ficomp
popf
ret
mov
mov
pop
fbstp
pop
sahf
mov
sub
xchg
dec
mov
(bad)
and
rol
xor
add
js
pop
test
adc
in
push
rol
fist
sbb
ins
jg
push
(bad)
in
cdq
mov
push
(bad)
mov
into
jle
mov
aad
add
push
pop
or
mov
or
push
and
ret
xlat
and
ret
cld
imul
xchg
jno
lds
jmp
retf
xchg
sub
(bad)
sub
xchg
adc
stos
mov
in
xchg
jnp
cmp
xor
xor
push
sbb
xor
and
add
dec
in
sbb
pop
std
(bad)
xchg
out
clc
dec
daa
mov
and
stos
sar
(bad)
cwde
xchg
imul
dec
mov
sbb
aas
xchg
in
sub
lahf
icebp
adc
push
cmp
cld
xchg
or
std
or
xor
push
loopne
iret
lahf
aam
adc
pop
or
int
ret
and
fiadd
inc
dec
test
pop
scas
sbb
into
lods
jnp
mov
or
push
dec
loope
adc
not
shl
push
imul
pop
arpl
mov
dec
cmps
fdiv
jns
cmp
jb
sub
push
pop
loope
pusha
adc
stos
inc
pop
aas
and
and
fs
dec
mov
xchg
dec
cwde
xor
pop
xchg
ror
ja
pop
dec
fnsave
mov
sub
lock
out
mov
stc
sbb
cmc
inc
daa
adc
push
enter
xchg
sub
fwait
xchg
out
je
call
lods
hlt
movs
xchg
adc
(bad)
mov
or
scas
call
ja
xchg
sar
inc
pop
sbb
test
dec
rcr
jb
lods
and
cmp
repnz
jbe
stos
or
xor
jl
xchg
ficomp
jb
jl
pop
je
dec
mov
jp
(bad)
(bad)
ss
cmp
add
xchg
mov
mov
int
lock
test
and
jmp
push
and
add
jge
pusha
lds
aas
test
loopne
sar
sub
sub
or
mov
psadbw
ror
push
outs
in
lods
inc
mov
push
push
fs
jp
inc
in
(bad)
xchg
rcl
or
adc
jl
cmp
sub
mov
sub
aam
in
ret
pop
dec
fwait
add
popa
sub
clc
bound
sbb
and
push
xchg
xchg
movs
retf
mov
xchg
xlat
xor
mov
iret
mov
ss
loopne
push
push
out
xchg
mov
mov
mov
and
xchg
mov
shl
addr16
imul
sub
xlat
inc
add
ficomp
cmps
cwde
fsub
in
cs
fld
test
iret
push
sub
jle
jecxz
push
or
and
add
icebp
sbb
repz
mov
sbb
add
mov
and
test
mov
in
in
jge
mov
fsub
sar
shl
cmp
into
ficom
fs
das
mov
add
pop
shl
push
sti
sub
cmps
push
stc
add
leave
and
aas
mov
mov
jno
in
mov
mov
push
xor
(bad)
xchg
xchg
mov
(bad)
mov
mov
inc
jmp
xlat
push
pop
in
mov
cmp
out
jo
or
movs
xchg
cmp
aam
repnz
mov
mov
xchg
(bad)
cmp
(bad)
or
mov
icebp
xor
bound
jg
xchg
cmp
or
sahf
adc
push
push
push
imul
push
mov
sahf
dec
in
or
mov
xor
xchg
int3
jl
dec
push
mov
fs
stos
adc
in
jno
mov
dec
pop
js
mov
hlt
js
jecxz
jnp
cmc
cmp
js
add
loop
mul
xchg
cmp
movs
nop
scas
inc
and
int3
hlt
xlat
push
dec
sar
and
dec
fnstsw
jmp
adc
mov
jmp
gs
mov
adc
mov
pop
push
xchg
sbb
jmp
sub
movs
movs
and
or
shl
push
ja
add
jmp
bnd
sbb
xchg
cmp
and
mov
loop
pop
pop
mov
sbb
mov
dec
lahf
dec
inc
xchg
nop
std
fmul
inc
inc
lods
call
outs
jbe
add
push
call
fist
ins
stos
clc
and
add
loope
stos
sub
imul
add
sbb
xchg
or
pop
add
retf
sbb
pushf
or
or
jecxz
dec
hlt
pop
dec
lock
ja
dec
shr
mov
js
xchg
les
mov
out
mov
cli
ins
loop
retf
sbb
xor
mov
imul
adc
mov
out
daa
mov
push
dec
push
fwait
mov
inc
cmp
add
and
mov
add
pop
jmp
loopne
repnz
pushf
jmp
pop
mov
cmovl
(bad)
and
jnp
add
loope
ds
ja
pop
add
es
sbb
in
outs
or
or
ficomp
mov
xchg
ret
and
outs
bound
add
dec
in
hlt
jge
ret
fsub
and
enter
jl
pop
xchg
push
pop
fdiv
popa
push
rcl
call
imul
jae
xor
adc
fs
lahf
pop
xchg
xchg
cmc
xchg
test
lock
jne
mov
retf
(bad)
mov
imul
push
or
popa
sbb
clc
cdq
mov
cmp
scas
leave
mov
or
test
mov
push
push
into
cmp
lods
push
dec
pminub
mov
fisub
xchg
xchg
fisttp
div
(bad)
and
pop
jns
in
jecxz
aaa
mov
adc
fdiv
retf
imul
xchg
test
and
(bad)
js
outs
pop
int3
sub
sbb
jmp
cmp
rol
pop
jecxz
loop
adc
(bad)
clc
lahf
mov
dec
inc
scas
cmp
lods
into
in
push
sub
fcomp
std
(bad)
xor
sar
iret
or
xchg
and
sbb
sub
inc
mov
in
jae
and
add
sahf
(bad)
sub
push
es
hlt
adc
pop
arpl
ja
sbb
int3
stc
add
xchg
xchg
sub
aas
push
adc
push
xor
inc
hlt
in
jno
sbb
das
bound
rcl
dec
mov
mov
jmp
mov
pop
out
int3
push
int
out
jne
nop
and
(bad)
push
retf
xchg
dec
pop
adc
jne
cmp
pop
xor
lods
std
call
call
iret
(bad)
addr16
xor
clc
sbb
inc
cmps
jmp
shufps
mov
push
mov
xchg
dec
mov
pop
xor
sub
sbb
sbb
dec
pop
stos
fisubr
pop
push
push
and
mov
lods
mov
mov
xchg
leave
sar
dec
mov
in
xchg
and
cmp
xchg
and
out
pop
enter
(bad)
and
outs
int3
hlt
inc
jmp
mov
mov
aas
push
test
mov
add
dec
cmps
jle
test
adc
inc
call
sub
es
stc
dec
push
mov
xor
push
pop
test
add
mov
sahf
neg
ja
jmp
cmp
dec
repz
das
cli
data16
call
xor
sahf
fisttp
clc
mov
test
in
and
pause
mov
lods
ss
(bad)
xchg
inc
sub
sub
xchg
es
sbb
and
and
scas
in
enter
nop
cmp
and
pop
dec
pop
mov
push
push
sub
push
ss
pop
call
xor
xchg
dec
imul
inc
(bad)
popa
std
dec
ins
dec
stos
std
sti
dec
in
js
adc
nop
fsubr
push
jl
lods
push
mov
std
sbb
fistp
add
add
test
add
pop
das
and
pop
ds
sbb
jge
push
leave
push
cmp
jmp
xchg
xchg
jmp
maxps
xchg
aad
xchg
retf
push
xchg
sahf
inc
pop
inc
or
pop
xor
aaa
mov
jg
shr
je
ret
mov
jae
adc
xchg
mov
jbe
int3
inc
stos
pop
mov
cmp
inc
xchg
jmp
and
ret
xor
cs
jnp
jp
cld
push
stos
fldenv
ds
and
jecxz
pop
jno
adc
mov
pop
imul
mov
out
push
loopne
jae
ja
xor
push
movs
sub
ja
shl
add
push
lock
inc
rcl
cdq
xchg
fnstenv
dec
sbb
xor
mov
push
mov
mov
ins
xor
push
sub
out
jge
jae
in
push
out
adc
aad
dec
push
std
not
loop
sbb
adc
jbe
dec
inc
rcl
add
shl
jmp
or
or
repnz
jg
xor
addr16
outs
xchg
pop
adc
clc
and
pop
and
cmp
or
add
dec
sbb
xor
dec
ins
pop
es
and
lds
pop
daa
sti
int
pop
or
std
xchg
cwde
adc
lahf
jo
mov
les
mov
jns
mov
pop
test
mov
xor
or
popa
(bad)
cdq
sub
lods
push
icebp
popa
cmc
out
inc
cmp
or
out
push
ins
jno
imul
xchg
pop
cmp
dec
jo
mov
hlt
sbb
fdiv
and
shl
(bad)
stos
adc
pop
mov
lods
outs
xchg
pop
in
mov
cli
xchg
add
mov
lods
in
or
xor
adc
mov
mov
jnp
or
push
adc
xchg
nop
sub
pop
fs
jl
ror
jo
ret
clc
mov
push
dec
jnp
pop
in
mov
mov
movs
ror
retf
mov
loop
adc
xchg
ficomp
cmp
aaa
push
aad
cmps
nop
sub
imul
cld
mov
ss
std
aam
xchg
pop
mov
not
xchg
sub
xor
cmp
stos
nop
add
ret
mov
cmp
xchg
fisttp
push
adc
sub
aas
scas
sti
sub
mov
adc
aad
ret
in
not
test
inc
xor
xchg
out
dec
push
xchg
push
push
inc
addr16
xor
fs
jo
arpl
test
jp
fsubr
jnp
es
mov
xchg
jge
out
outs
mul
add
lock
sbb
fwait
stos
jo
aas
sub
gs
adc
inc
adc
mov
mov
xor
and
xor
test
push
iret
std
ds
bnd
lods
movs
mov
xchg
dec
adc
pop
jle
dec
inc
jae
and
arpl
loope
retf
push
mov
xchg
retf
add
sub
or
cwde
push
jno
fisttp
int
or
out
adc
outs
into
ret
arpl
lea
ja
add
fs
clc
jb
shr
rcr
in
pop
inc
retf
cs
dec
fild
dec
std
add
fadd
test
(bad)
mov
in
stos
pop
xchg
ins
mov
mov
xchg
leave
pop
or
push
js
call
fisub
call
sbb
jle
std
mov
dec
or
hlt
jmp
push
idiv
dec
(bad)
sbb
pop
loope
out
(bad)
frstor
and
pushf
jg
push
mov
loope
mov
sub
stc
cwde
cmp
in
(bad)
in
pop
adc
cli
push
jmp
test
mov
mov
mov
push
leave
fiadd
lock
xchg
mov
pop
mov
push
fnstenv
repz
xlat
inc
jne
into
ficom
inc
loop
add
dec
push
ins
int3
retf
inc
adc
push
das
and
and
js
call
adc
mov
add
sahf
push
hlt
jmp
jp
adc
sub
dec
inc
loope
sub
pop
jae
adc
imul
icebp
stos
mov
jge
movs
sbb
xchg
jl
push
push
js
or
js
call
dec
cmps
pop
iret
sub
xchg
mov
stos
lods
sub
sub
xlat
call
mov
out
dec
movs
adc
xchg
pop
mov
ss
xor
je
inc
lds
and
lods
push
pop
sar
lods
mov
leave
mov
and
mov
dec
test
mov
neg
in
fisub
out
leave
add
and
xor
pop
addr16
xor
lods
lods
movs
and
das
iret
and
imul
dec
mov
les
ret
in
aam
xchg
inc
inc
bound
in
lds
repz
sti
inc
dec
repnz
(bad)
pop
cmp
jmp
(bad)
ficomp
movs
xchg
int
mov
cmp
scas
lock
sbb
outs
xor
gs
bound
jns
inc
test
in
mov
(bad)
cmp
push
push
push
push
jne
rol
xor
push
pop
sub
adc
aam
arpl
in
sbb
inc
mov
in
add
pop
push
push
push
shr
push
sbb
ret
jne
jno
and
mov
fldcw
inc
icebp
inc
mov
mov
cli
adc
loope
xchg
adc
outs
ins
out
int
fbstp
xchg
aad
repz
mov
dec
mov
out
or
icebp
int3
call
xor
pop
(bad)
rol
and
test
fnstsw
inc
pop
adc
fcomp
xlat
outs
push
mov
aaa
xchg
hlt
stos
lds
mov
jecxz
inc
outs
cmp
in
lods
add
jns
xlat
das
rcr
xchg
cli
popa
aas
adc
pop
pusha
icebp
adc
ins
scas
jecxz
adc
std
test
push
fsub
ss
mov
jge
mov
retf
into
cdq
aam
xor
(bad)
mov
test
mov
aas
push
mul
retf
push
adc
out
adc
xchg
push
outs
push
pop
mov
ret
ret
stc
mov
mov
mov
xor
outs
adc
mov
jo
iret
jmp
cmp
xchg
sahf
shr
das
(bad)
cmp
and
mov
js
cmp
pop
pop
je
sbb
xchg
sahf
hlt
sbb
push
out
sti
jecxz
mov
addr16
or
jae
dec
sbb
retf
mov
repnz
and
pop
pop
inc
mov
xchg
push
test
jl
xor
xchg
cmps
stos
jno
push
push
lods
scas
push
lea
stos
fbld
test
daa
mov
mov
fcomi
fst
es
sub
arpl
bound
dec
adc
inc
jg
mov
mov
xchg
pop
mov
xchg
in
retf
adc
out
ins
int
mov
add
enter
push
sbb
sar
in
das
xchg
push
stos
fnstenv
cmp
jp
addr16
icebp
cmp
ret
sub
shl
stos
dec
call
test
dec
test
mov
add
pop
mov
ret
sbb
push
test
mov
xor
cmp
inc
add
sub
xchg
fwait
push
call
push
ror
jecxz
movs
popa
(bad)
pop
das
dec
in
mov
or
mov
mov
push
out
aad
sbb
outs
hlt
pop
jle
sub
push
test
scas
popa
sub
jmp
pop
sub
push
shr
or
jno
mov
dec
data16
and
in
adc
fbld
push
in
(bad)
dec
jecxz
lods
fild
cmps
pop
test
enter
pop
fldenv
out
ficom
lds
xchg
cdq
xlat
psubb
ja
lahf
aad
adc
imul
mov
sbb
pop
cli
cwde
mov
test
loopne
pop
and
fild
mov
cmp
fwait
mov
frstor
cmp
mov
pusha
jmp
inc
popa
int3
(bad)
cmp
mov
xchg
sub
xor
mov
sub
mov
push
xor
stc
movs
mov
in
sbb
(bad)
jne
scas
sub
hlt
retf
mov
inc
and
sub
mov
cwde
pop
or
push
sub
push
jl
xchg
ds
xchg
xchg
mov
add
jle
push
mov
psubb
fist
imul
pop
ja
ret
mov
pop
in
sbb
call
frstor
jp
mul
les
or
adc
dec
sub
adc
hlt
xor
dec
jle
cmp
sub
data16
push
mov
bound
mov
and
call
mov
or
ret
mov
adc
aad
and
xchg
mov
mov
outs
addr16
out
xchg
sbb
pop
or
sub
icebp
sbb
and
das
shr
cdq
and
mov
sub
stc
popa
push
xchg
(bad)
cs
scas
ins
pushf
xlat
iret
(bad)
or
adc
xor
pushf
(bad)
hlt
dec
push
arpl
jl
sbb
add
mov
sbb
push
sar
push
mov
jp
cmp
push
scas
xchg
test
fs
ds
push
pop
pusha
adc
cmp
loope
ja
pop
xchg
jecxz
cmp
pop
dec
adc
lds
jmp
xchg
or
mov
mov
xor
rol
xchg
adc
add
aad
retf
mov
mov
cld
adc
jmp
jecxz
jl
xlat
test
es
into
int
mov
or
imul
mov
cmc
push
test
or
outs
fwait
or
cmp
icebp
movs
adc
data16
jnp
lea
lock
cmc
retf
movntq
add
xchg
fimul
in
int3
out
mov
into
out
aaa
and
idiv
arpl
push
sbb
mov
or
jno
or
imul
mov
adc
test
into
xor
test
leave
xor
and
dec
dec
aad
lea
jmp
pop
in
repz
retf
cmps
cs
fist
(bad)
dec
xchg
lea
ret
xor
frstor
std
inc
neg
jle
ds
mov
iret
inc
inc
mov
add
ins
scas
mov
sbb
(bad)
loop
aaa
repz
fild
bound
sbb
xchg
inc
xor
nop
jg
jae
shl
out
iret
add
ds
pusha
or
sbb
loope
push
inc
push
xchg
mov
push
jns
(bad)
xlat
xchg
add
mov
ss
cmp
cs
adc
into
aaa
inc
shr
fidiv
dec
cmc
mov
aam
cwde
lds
sub
dec
jne
jl
mov
add
rol
pop
mov
hlt
xchg
or
dec
test
jnp
or
and
pop
mov
js
cwde
jmp
sbb
sub
aam
and
idiv
(bad)
pop
mov
arpl
pop
or
cmp
lods
neg
cmp
sbb
cmp
xor
add
test
fidivr
mov
pop
sub
adc
in
cs
or
jns
ss
xor
or
(bad)
fistp
pushf
clc
add
leave
and
stos
sahf
push
ins
aas
das
out
out
add
movs
lea
ins
popf
loop
push
push
sbb
jle
push
push
or
or
imul
add
xchg
push
inc
add
dec
std
inc
in
mov
jmp
bound
loope
sbb
mov
jp
add
push
pop
or
inc
adc
and
test
or
add
arpl
mov
jae
adc
inc
xchg
mov
daa
es
fisubr
int
popf
fadd
xchg
xor
push
or
mov
mov
jnp
xor
inc
add
dec
jo
lods
arpl
adc
not
sub
and
push
mov
retf
test
add
cmp
mov
xor
mov
lods
mov
mov
push
mov
pop
mov
(bad)
mov
inc
dec
mov
pop
adc
push
mov
xor
cmps
mov
out
and
leave
popa
loopne
aad
sub
add
jle
inc
jae
pop
(bad)
pop
cdq
mov
movs
sti
pop
jmp
gs
test
adc
cmp
cld
aas
adc
push
mov
ins
xchg
lods
sbb
cwde
test
sub
fnsave
cli
push
outs
aam
pop
push
sub
adc
cwde
pop
mov
pusha
pushf
sbb
movs
in
sbb
in
or
lock
cmp
aaa
and
mov
aas
mov
int3
xor
pusha
jecxz
jnp
pushf
cmp
jo
adc
dec
cmp
dec
jnp
jno
and
pop
dec
and
sub
mov
cmps
pusha
retf
push
bound
mov
fnsave
ror
sti
(bad)
xor
adc
cmp
add
cmp
es
mov
and
fldenv
and
xor
mov
cmp
inc
sbb
adc
mov
retf
neg
les
mov
call
ret
nop
mov
lds
jno
mov
outs
push
inc
adc
(bad)
lock
and
sub
sbb
fcomp
movs
dec
out
punpckhdq
sbb
nop
retf
test
and
(bad)
mov
cmp
mov
ins
inc
rcr
mov
lods
jmp
push
jecxz
sub
fs
jno
cmp
js
bound
mov
jl
pop
inc
mov
pop
mov
push
fwait
(bad)
xlat
outs
dec
test
jmp
frstor
or
ss
cmps
inc
jmp
push
push
cli
pop
cli
sahf
adc
jg
hlt
imul
js
and
fidivr
(bad)
mov
xchg
sub
retf
test
ds
xchg
call
pop
and
mov
jp
repnz
sar
movs
pop
pop
gs
rcr
xor
xchg
mov
stos
rol
(bad)
into
(bad)
mov
js
add
jbe
in
cmc
stc
push
cmc
xchg
into
rol
sub
call
push
je
popf
pop
jns
or
jno
movs
add
ret
add
mov
push
out
mov
inc
push
ss
jae
fsubrp
(bad)
lahf
mov
int
(bad)
dec
push
push
mov
mov
loopne
loope
repz
movs
enter
scas
mov
mov
les
daa
mov
jmp
mov
dec
fs
mov
jmp
sbb
jbe
gs
pop
fwait
out
clc
mov
data16
in
add
sahf
or
dec
cmp
jg
btr
aad
add
inc
sbb
add
xlat
(bad)
jne
xchg
cli
pop
(bad)
xor
mov
pop
push
outs
addr16
mov
jbe
adc
sub
cmp
imul
sbb
jb
sub
es
xchg
adc
and
pop
pop
inc
sub
mov
xchg
mov
add
repnz
sbb
jecxz
pop
stc
fcomp
shr
imul
ja
inc
cmp
jmp
jo
call
cs
mov
mov
sub
das
cmp
mov
shl
cld
cdq
or
mov
popf
cmp
jle
call
xor
lds
dec
cmp
cmp
pusha
(bad)
inc
mov
ja
cmps
out
test
push
jne
aas
into
fcmovnu
pop
(bad)
jle
mov
lea
js
dec
mov
push
out
data16
outs
pop
out
cmp
(bad)
dec
inc
mov
into
test
addr16
mov
mov
jge
hlt
cld
sub
sahf
lahf
mov
loopne
xor
xlat
or
xchg
inc
xchg
jb
mov
ret
sar
push
push
dec
mov
pop
jne
retf
lods
adc
lds
inc
mov
sti
jle
pop
cmps
cmp
and
adc
ret
jecxz
bound
fisubr
aaa
(bad)
cmp
cmp
push
mov
repz
jg
out
cmp
into
inc
std
sub
cwde
popa
adc
idiv
jmp
xor
hlt
and
inc
push
movs
mov
test
push
jne
cmps
mov
xor
xchg
dec
add
xchg
das
in
cmp
imul
aaa
rcl
push
or
push
retf
jecxz
cmps
shr
cmps
aas
inc
cmp
push
movs
mov
sbb
loopne
in
xchg
push
ret
sti
pop
ror
std
push
ret
sub
jecxz
cwde
pop
ds
cmp
mov
xchg
shr
xchg
sub
imul
push
std
xor
test
sub
cmp
js
cmp
das
sub
sbb
sub
inc
adc
bound
in
xchg
sbb
or
xor
xor
xchg
(bad)
jge
stos
(bad)
xchg
fcom
jmp
push
push
sbb
dec
inc
data16
add
outs
push
pop
lock
ror
aam
aad
stc
add
jno
in
push
jo
or
fisttp
fnstsw
clc
into
push
shl
jnp
js
cmp
mov
out
cmp
fimul
jb
pop
lahf
cdq
fidiv
mov
mov
mov
lock
call
mov
mov
(bad)
je
adc
lea
push
dec
loop
cli
retf
cmp
fs
sbb
fwait
aas
cs
je
and
cmp
fwait
stc
sar
mov
xchg
jns
pop
scas
dec
mov
xchg
pop
(bad)
pop
xchg
sbb
dec
dec
pop
inc
mov
sbb
ret
or
inc
dec
pop
push
pop
sub
repnz
cmp
push
pop
ins
shl
sub
nop
lea
aaa
in
dec
cmp
loopne
mov
jb
mov
xchg
loopne
xchg
cmc
fist
pusha
(bad)
aad
cmc
push
into
es
(bad)
and
sub
jle
xlat
divps
movs
jmp
jnp
add
ins
outs
sbb
retf
push
mov
xor
sbb
aad
out
in
das
dec
cld
dec
inc
pop
shl
xor
test
cmps
lea
sub
and
xor
inc
sub
(bad)
call
adc
mov
aaa
sar
mov
test
in
mov
bound
iret
pop
push
jns
cmp
or
sar
ret
sbb
sbb
test
pop
ins
xor
call
lods
pop
cmp
mov
inc
cmps
(bad)
jp
mov
aad
(bad)
(bad)
lahf
mov
or
ret
and
add
sub
adc
mov
sahf
fnstsw
sub
dec
xchg
jp
loope
sub
js
xor
push
fs
add
inc
(bad)
mov
in
(bad)
push
test
mov
cmps
inc
into
sbb
inc
mov
push
mov
or
and
lock
jp
mov
and
mov
ret
push
dec
mov
fisubr
loopne
movs
or
xchg
and
mov
cdq
movs
mov
je
sahf
push
sti
xor
add
cmp
xchg
pushf
push
and
pop
pushf
adc
fmul
ins
pop
jae
cmp
imul
(bad)
xor
dec
sub
scas
add
dec
loop
movs
in
out
add
shl
and
aaa
xor
jmp
sub
in
ret
mov
inc
fisub
mov
mov
outs
(bad)
std
sub
std
loopne
or
jge
mov
call
out
push
mov
add
jae
(bad)
sbb
dec
fisub
lds
xor
in
xor
xor
out
inc
push
inc
sub
sub
pop
add
out
inc
mov
mov
pop
in
jo
stc
push
test
sub
or
push
aas
cld
inc
adc
lods
in
out
mov
aas
mov
mov
or
push
pop
fs
js
inc
mov
mov
das
stos
test
jg
and
cmp
nop
cdq
fist
cmc
sbb
js
xlat
repnz
data16
iret
aam
out
push
cld
sub
mov
inc
or
pop
retf
add
push
mov
xlat
pop
pushf
jnp
xchg
mov
jno
pusha
adc
hlt
jns
xlat
mov
and
repz
loope
nop
add
in
adc
inc
jo
and
pop
and
fnsave
imul
or
adc
lahf
movs
data16
scas
(bad)
jb
(bad)
in
outs
mov
push
ds
add
dec
mov
retf
fs
xchg
bound
inc
cmp
cld
mov
and
mov
out
cli
add
dec
test
mov
ja
mov
sbb
pop
jle
and
rol
nop
lahf
retf
stc
sub
aad
(bad)
sbb
sahf
and
cmp
es
mov
movs
cmp
jp
xchg
mov
mov
retf
pop
bound
cmp
xchg
pusha
ror
ret
cs
je
or
jge
inc
add
push
adc
outs
xor
xor
retf
cmp
inc
adc
shr
scas
inc
std
or
popf
sbb
test
or
jne
dec
mov
cdq
icebp
jle
xchg
lods
and
mov
lahf
pop
repz
or
or
xchg
xchg
pop
loop
mov
and
jb
pop
rol
hlt
xchg
scas
movs
cmp
mov
fiadd
add
aad
and
pop
push
fwait
xor
out
rcl
retf
sub
mov
fsubr
jmp
(bad)
sti
xor
push
in
adc
daa
gs
xor
mov
add
or
movs
in
enter
(bad)
fnsave
inc
adc
mov
push
or
inc
adc
sbb
adc
retf
(bad)
and
out
(bad)
dec
int3
and
push
mov
fisub
fsubr
jo
(bad)
shr
pushf
mov
push
jmp
dec
cmps
mov
jb
sub
inc
push
mov
imul
dec
sbb
mov
sub
add
push
(bad)
dec
rcl
mul
hlt
xchg
repnz
out
mov
and
dec
test
out
and
std
loop
push
retf
cld
or
mov
fs
rep
push
add
sub
and
aam
mov
push
shl
push
dec
jg
sbb
inc
add
sub
or
test
dec
cmp
adc
ja
neg
pop
lahf
iret
fwait
add
push
mov
push
fidiv
gs
pop
fdivr
rcr
ret
pop
test
mov
jmp
in
mov
fld
lods
add
inc
mov
pushf
pop
int
(bad)
in
(bad)
cdq
jmp
loop
clc
cmp
pop
jo
das
inc
ror
mov
out
pop
and
mov
mov
inc
or
scas
pop
int
pop
lock
sub
and
adc
mov
sbb
loop
aaa
add
stos
pop
push
dec
clc
jp
xor
aad
xchg
clc
and
adc
ret
mov
mov
dec
sbb
jbe
(bad)
mov
jo
or
dec
das
push
mov
out
xchg
mov
sub
xor
into
sub
gs
add
or
dec
sub
pop
sbb
dec
cmc
sub
movs
gs
lock
sub
adc
adc
inc
rcr
pop
ret
mov
pusha
dec
cmps
xchg
not
pop
leave
cmp
test
lahf
dec
cli
xchg
stos
mov
pop
sbb
arpl
mov
sub
iret
mov
xor
fld
in
outs
inc
in
mov
movs
jo
push
cmp
xor
movs
mov
ins
jmp
daa
mov
popa
sti
scas
cld
mov
rcr
fcomp
sti
shr
scas
fild
sbb
sub
hlt
sub
xor
mov
sbb
test
sar
es
test
pop
mov
in
mov
jp
mov
fs
push
mov
adc
jmp
stc
gs
mov
mov
push
iret
ins
mov
inc
leave
or
jne
push
je
xor
inc
pop
sub
shl
jns
jp
in
mov
shl
iret
gs
mov
les
sbb
mov
push
leave
xor
fs
(bad)
or
pop
loopne
lods
jnp
inc
fwait
mov
enter
popf
aad
outs
mov
mov
ins
movs
ret
es
mov
gs
cli
mov
arpl
xor
inc
ror
sbb
push
mov
pop
and
mov
test
jb
lock
xor
fwait
xor
and
jle
xor
push
aaa
sub
aas
ror
test
xlat
cmp
mov
movs
cli
mov
push
mov
ja
xchg
pop
popf
cmp
ficomp
addr16
adc
sbb
cs
repnz
ds
pop
aad
push
mov
es
scas
inc
(bad)
call
repz
(bad)
or
shr
pop
daa
cs
mov
outs
fsubr
mov
stc
out
or
fsubr
jno
sub
(bad)
dec
lahf
sbb
retf
inc
push
dec
mov
push
mov
xlat
sahf
adc
les
fwait
icebp
jmp
push
mov
add
mov
cmp
scas
imul
imul
lock
mov
jb
sub
mov
jl
loopne
mov
mov
push
xchg
mov
call
or
pop
xchg
and
push
sub
mov
inc
ret
outs
in
stos
fsubp
xchg
ret
popa
inc
add
push
fbstp
mov
int3
jge
jle
cwde
xor
shl
out
int3
ss
mov
and
fwait
movs
adc
arpl
icebp
aaa
sub
and
fcomip
cs
cld
or
repnz
jmp
sti
retf
fild
sbb
push
sahf
(bad)
mov
outs
test
ins
mov
inc
aad
aad
mov
jecxz
in
fs
pop
push
or
int3
rol
inc
cmp
ss
loop
bound
shl
and
jge
mov
aad
adc
add
xor
dec
pop
xor
inc
mov
test
mov
push
push
and
jecxz
cmps
mov
adc
cmps
pop
adc
dec
dec
mov
arpl
cwde
and
push
jp
adc
enter
xor
dec
add
inc
cld
dec
out
cmps
pop
scas
sbb
cmp
shl
lock
mov
cmc
popa
pop
ficomp
mov
mov
push
loope
xchg
sbb
and
jg
loope
js
mov
in
cmp
fsubr
cmp
cmps
pop
cld
test
cmc
rcl
sbb
dec
shl
xor
pop
cmp
dec
fstp
pop
push
(bad)
mov
dec
adc
and
xor
cmp
sbb
mov
daa
xchg
movzx
mov
aam
pop
and
or
clc
xchg
call
(bad)
mov
mov
jp
jg
mov
jge
xchg
cmps
es
repz
out
cmp
loope
push
push
cli
dec
sbb
jns
and
inc
sahf
mov
or
xlat
shr
shl
fistp
pop
mov
lahf
or
shl
inc
push
out
push
push
and
push
xor
mov
and
mov
jl
js
bound
fst
mov
mov
test
test
shl
sti
and
leave
je
shl
std
xchg
add
push
sahf
jge
icebp
and
dec
stc
mov
mov
enter
xchg
ror
jbe
dec
stos
sbb
into
lods
inc
cwde
mov
retf
xchg
sub
cmps
rol
movs
not
outs
xchg
ja
ficom
xchg
pop
inc
adc
adc
jns
or
jecxz
cmps
rcl
sub
stc
and
shr
xchg
iret
sbb
bound
add
dec
mov
mov
mov
test
outs
sub
(bad)
out
mov
sbb
inc
xchg
xchg
daa
aad
adc
pop
push
outs
mov
or
ss
sub
mov
add
or
adc
gs
shl
pop
fisttp
dec
mov
lods
enter
cmp
cmp
into
aas
icebp
mov
cmp
rcr
test
mov
call
aaa
scas
jle
pop
mov
xchg
rcl
push
sub
out
js
mov
and
sti
cmp
push
pop
add
dec
mov
cs
das
je
push
jge
dec
mov
cmp
push
aas
jnp
(bad)
rol
mov
stos
mov
inc
sar
adc
pop
mov
movs
in
pop
add
pop
aam
xchg
sub
fchs
pop
pop
lea
cs
xchg
in
cli
lods
pop
pop
jmp
mov
jle
(bad)
or
jnp
dec
call
call
add
mov
pop
sbb
inc
pusha
mov
addr16
pop
pop
push
push
int
mov
retf
xor
sub
ficom
xchg
xchg
adc
push
sbb
pop
stos
cwde
xor
fisttp
pop
sub
fnsave
out
inc
call
movs
inc
mov
fs
mov
mov
aaa
ins
add
mov
(bad)
test
cmp
sahf
fst
shl
inc
cli
cdq
popf
cmp
pop
push
or
dec
cdq
push
jmp
pop
and
sti
bnd
mov
dec
xor
cmp
das
in
cmp
jae
mov
in
dec
outs
xor
sti
(bad)
xchg
xchg
stc
icebp
fcomp
pop
inc
cmps
cld
(bad)
(bad)
push
cs
les
inc
shl
mov
push
jl
pop
mov
popf
clc
(bad)
cmc
(bad)
iret
scas
stos
out
fimul
sbb
(bad)
imul
adc
call
mov
ins
mov
add
inc
int3
mov
stos
or
in
loop
sub
cmp
xchg
(bad)
pop
pop
(bad)
mov
cli
int
cmp
xchg
lock
dec
mov
fwait
xchg
(bad)
hlt
sub
cmp
cmps
outs
mov
xor
xchg
pop
mov
mov
imul
pop
sbb
rcr
push
add
xor
mov
mov
pop
cmp
mov
mov
ins
sub
push
push
out
pop
repnz
addr16
pop
scas
(bad)
mov
xchg
adc
out
adc
jno
lahf
pop
loopne
xor
jl
jnp
xlat
jno
lahf
fiadd
dec
push
ficomp
inc
test
bound
add
nop
add
adc
aad
sub
lea
push
dec
pop
and
jbe
lahf
and
les
and
js
xchg
add
or
pop
xchg
cmp
jmp
mov
xor
add
mov
add
fsubp
out
test
dec
jnp
cmps
lea
out
out
fdiv
jnp
xchg
jnp
(bad)
push
scas
xor
mov
xchg
dec
shr
outs
dec
(bad)
clc
add
xchg
shr
cmp
lock
lds
xor
in
and
and
ins
shl
push
pop
sub
xlat
add
and
mov
sar
stos
or
or
xchg
(bad)
mov
dec
mov
fstp
neg
aad
loopne
les
xchg
mov
xchg
inc
pushf
jne
or
lock
jne
ss
add
ds
jns
add
dec
bound
rcl
mov
iret
push
das
retf
dec
push
aas
add
or
jecxz
cmp
stos
bound
and
inc
jg
jb
mov
dec
add
mov
push
loop
ror
sub
jns
int
popf
inc
in
pop
jnp
ins
push
fst
pop
mov
sub
and
data16
add
stos
cmps
or
shl
mov
mov
push
inc
jns
push
stos
cmps
cld
popa
icebp
push
mov
rol
xchg
aaa
and
leave
dec
mov
mul
das
les
push
fmul
cmp
jmp
cmp
cmp
mov
bound
and
aas
movs
and
sti
(bad)
or
push
adc
jl
popf
jne
cmc
pusha
jl
test
mov
ins
mov
push
xor
jns
sub
add
jmp
mov
sbb
xchg
enter
ss
cmp
mov
jmp
inc
add
(bad)
les
pop
jmp
mov
aaa
movs
mov
es
(bad)
or
ss
sbb
clc
test
cmp
ss
xchg
jae
test
es
outs
mov
push
js
pop
add
jecxz
cmps
ins
xor
mov
ins
mov
cmps
xchg
lea
cmc
jmp
jle
into
iret
aam
jo
push
pop
xchg
hlt
push
push
sbb
xor
gs
mov
add
int3
stos
inc
pop
cld
xchg
push
adc
push
dec
fsub
lods
mov
js
inc
rol
out
add
in
mov
dec
lahf
xor
dec
push
sbb
(bad)
lods
cwde
push
sub
cmps
adc
arpl
xchg
jns
xor
icebp
mov
stc
sbb
push
jg
xchg
push
cld
lods
add
dec
ss
inc
jb
or
cld
cld
dec
fiadd
(bad)
cmc
mov
pop
imul
movs
fld
stos
fdivr
out
mov
adc
pusha
cmps
or
mov
add
push
adc
push
fwait
test
jo
add
lds
push
popf
stc
dec
pop
call
mov
xor
and
loopne
mov
inc
jmp
je
jmp
retf
test
mov
xchg
call
call
fisub
dec
pusha
jecxz
pop
adc
adc
mov
mov
mov
mov
das
mov
in
mov
push
mov
in
sbb
mov
ins
adc
test
sbb
xlat
sub
inc
out
add
adc
stos
push
int
ins
sbb
sbb
sub
push
icebp
push
popf
test
xchg
cmp
in
leave
jbe
sahf
push
lahf
pop
mov
push
aaa
arpl
out
pop
pop
cld
jno
mov
push
and
not
adc
dec
mov
jbe
pop
repnz
mov
test
xchg
addr16
gs
test
jb
punpcklbw
hlt
jo
and
aaa
out
mov
push
sbb
ja
je
push
dec
inc
(bad)
(bad)
push
push
pop
and
out
fwait
jmp
jge
es
dec
xchg
or
scas
cdq
jmp
jl
ss
pop
jne
dec
int
xchg
mov
enter
or
lods
pop
cmp
pop
test
stos
ins
leave
repnz
sbb
sbb
mov
sar
mov
sar
add
push
mov
mov
movs
cmp
test
inc
pop
pop
inc
xchg
in
and
add
sbb
or
inc
aad
loopne
adc
add
mov
stos
imul
not
retf
inc
fistp
mov
test
xor
enter
add
add
mov
je
sti
popf
repz
add
cmc
push
sbb
xchg
idiv
mov
pop
push
xchg
mov
push
dec
or
fbld
clc
push
pushf
mov
cwde
mov
iret
add
aad
jmp
stos
mov
mov
in
sti
aas
ins
fsubrp
cdq
sub
adc
adc
repz
pop
push
mov
mov
mov
icebp
push
fist
adc
dec
into
mov
dec
cmp
sub
ins
fld
inc
sbb
jp
test
mov
cmp
push
mov
cs
add
out
(bad)
outs
(bad)
stos
dec
jo
cmp
pop
ficomp
add
lods
mov
mov
add
cmp
stos
sar
loopne
ror
sqrtps
push
cmps
ss
rol
movs
jno
mov
mov
mov
xlat
sub
jo
adc
std
ja
mov
bound
xchg
mov
jmp
mov
xchg
adc
int3
sub
mov
mov
or
inc
mov
fist
mov
out
mov
jle
stc
daa
push
xor
push
cmp
mov
cli
sbb
xor
xchg
int3
sahf
mov
mov
pop
push
jg
mov
iret
sbb
dec
dec
rcr
addr16
xor
shl
mov
sti
out
scas
cmps
sub
stc
lea
xchg
mov
push
jg
lock
pushf
add
ffreep
mov
and
aam
pop
test
idiv
jle
sub
sahf
div
in
jp
inc
sub
add
das
pop
push
or
adc
jecxz
adc
pushf
cdq
test
adc
pop
adc
xor
out
scas
mov
jbe
pop
ret
mov
aas
shr
out
retf
cmc
popf
sbb
mov
dec
fsubr
mov
mov
imul
mov
jmp
test
sbb
out
test
mov
mov
push
mov
ja
dec
jne
fisubr
movs
add
and
push
adc
mul
add
jge
inc
movs
shl
mov
clc
sbb
dec
cmc
in
mov
je
inc
aam
repnz
pop
xchg
retf
pop
fild
mov
pop
pop
pop
sub
cmp
jns
pop
cmp
pop
shl
std
pop
xor
mov
mov
inc
test
test
ds
pop
aam
dec
xchg
cmp
dec
fsin
add
push
shl
dec
in
test
aas
add
cmp
pop
lahf
cmp
cdq
ja
inc
mov
push
jae
call
popf
add
push
and
int
lods
bnd
std
imul
inc
into
rol
gs
bound
in
loop
xor
jbe
enter
dec
dec
addr16
ror
loopne
les
retf
xchg
test
mov
mov
push
push
xchg
cwde
movs
fisubr
mov
mov
dec
xchg
mul
packsswb
int
stc
jns
push
cmp
(bad)
xchg
pop
pop
dec
pop
sbb
adc
mov
rcl
or
xor
pop
ret
or
inc
adc
lods
sbb
and
mov
or
mov
inc
neg
jle
icebp
adc
movs
or
jo
loopne
ficom
imul
out
mov
pop
stos
and
je
bound
(bad)
fdiv
xor
ja
pop
ds
(bad)
int3
xlat
mov
xchg
pop
shl
dec
xor
rcr
sti
lods
scas
icebp
ja
push
inc
popf
pusha
pop
mov
pop
movs
or
aam
xchg
(bad)
pop
or
sbb
mov
pop
xor
jl
sub
aas
mov
push
add
cmc
pop
outs
je
fist
js
inc
pop
jl
test
add
push
push
dec
push
retf
cmps
lods
out
jae
push
mov
mov
dec
lods
nop
mov
inc
add
mov
and
sbb
lahf
pop
aam
push
retf
das
sub
and
adc
int
ret
mov
mov
add
jne
mov
test
call
jae
and
mov
call
xchg
adc
fnstsw
popf
icebp
push
xchg
xor
or
out
out
(bad)
xchg
mov
push
loopne
idiv
jb
nop
ror
pop
xchg
es
into
adc
mov
js
test
ins
mov
mov
movs
pop
(bad)
mov
(bad)
fimul
xchg
pop
cmps
fwait
in
ficom
imul
pushf
jno
dec
mov
pop
jecxz
not
rcl
mov
test
or
push
inc
lods
adc
cld
mov
push
jmp
movs
mov
(bad)
ret
pusha
cwde
dec
xchg
mov
jbe
scas
cmp
repnz
icebp
arpl
mov
test
in
jbe
jmp
add
xor
or
rep
retf
push
shl
cli
mov
lods
lea
aas
jo
jo
adc
push
ins
push
cld
ins
imul
mov
(bad)
jl
lahf
cmp
in
cmps
sbb
rcr
outs
xor
(bad)
cmp
mov
shr
pop
sbb
adc
cmp
in
inc
jnp
pop
or
jg
sbb
push
mov
sub
es
mov
fnstsw
mov
out
addr16
adc
daa
sub
push
jae
sbb
jmp
daa
cmp
pop
xor
xchg
pop
icebp
arpl
jge
mov
nop
mov
fwait
jae
ret
xchg
jecxz
sbb
pop
enter
adc
adc
fwait
pusha
inc
mov
jl
lods
lods
pslld
les
fild
in
in
jge
bound
inc
push
add
fisub
inc
jg
loop
fadd
xchg
(bad)
adc
push
push
ja
arpl
sbb
jnp
xor
sti
adc
xchg
add
out
dec
mov
add
jne
jbe
scas
inc
pop
cld
fidiv
ret
popf
adc
aam
iret
sub
adc
sbb
dec
dec
inc
repz
fild
hlt
dec
stos
punpcklbw
and
popf
jecxz
int3
stos
or
scas
adc
push
(bad)
imul
push
mov
sub
outs
aaa
rcr
jo
push
neg
gs
dec
pop
aad
icebp
pusha
int3
sar
or
xchg
xor
xor
fwait
adc
paddusb
adc
cmps
xor
loope
cmp
out
xchg
ret
mov
dec
push
mov
mov
jmp
add
cwde
je
jmp
fcom
enter
ret
in
aam
(bad)
jno
imul
movs
jnp
inc
imul
pop
ror
call
jmp
ss
cmp
fld
and
outs
fst
sbb
imul
test
out
cmp
loop
ins
sahf
out
mov
popf
adc
in
cmp
sub
fbstp
mov
sub
mov
test
mov
cmp
and
mov
lds
out
in
movs
sub
jmp
icebp
mov
push
cmp
pop
xchg
jno
pop
sub
sbb
xlat
mov
and
stc
push
sbb
xor
xor
retf
mov
inc
int
outs
push
call
xchg
loop
sbb
adc
mov
ins
pop
sbb
leave
movs
ret
xchg
loopne
dec
jmp
call
push
jae
jg
jno
jl
stos
add
in
out
fist
jne
stos
inc
sub
pop
imul
push
movs
xchg
lock
aad
cli
in
leave
fistp
ficomp
mov
in
inc
pop
xchg
fist
call
and
or
pop
and
inc
jae
sub
or
repnz
dec
pop
add
clc
xor
fist
(bad)
test
mov
ror
jae
and
test
dec
aas
stos
test
push
data16
in
push
out
mov
push
in
loop
repnz
(bad)
mov
arpl
cmps
push
and
and
aas
iret
sub
lods
mov
pop
sub
mov
cwde
xchg
mov
mov
xchg
outs
scas
jno
mov
and
jb
leave
sub
push
js
into
movs
lea
das
test
add
test
and
stos
jne
sub
mov
test
sub
ja
mov
std
add
loopne
or
mov
hlt
mov
mov
cmp
or
pop
cmp
cmp
mov
xor
pop
loopne
rcr
inc
adc
cmp
mov
mov
ja
jmp
push
cmp
adc
inc
push
ja
dec
cld
test
push
hlt
ss
cs
imul
jo
dec
mov
lahf
push
adc
and
(bad)
lahf
retf
or
xor
pop
mov
retf
shr
icebp
test
in
mov
add
or
pop
ss
pop
cmc
lock
jp
and
call
jp
in
mov
mov
test
add
or
aas
rcl
inc
xchg
out
scas
daa
addr16
mov
xchg
in
inc
mov
retf
sti
leave
push
cld
or
jne
cmp
out
add
or
(bad)
mov
jo
sar
ins
fcom
test
push
dec
sub
cmp
out
dec
std
push
test
mov
push
pushf
aam
or
test
cdq
lods
adc
or
push
dec
and
(bad)
repnz
jno
xlat
jg
xor
icebp
push
shr
test
imul
stos
mov
je
scas
ss
xor
jecxz
fisttp
mov
xchg
popf
ret
icebp
mov
pop
in
mov
or
mov
add
mov
fs
sub
inc
and
pop
push
pop
je
nop
loopne
cmp
scas
xchg
or
push
and
rcl
ret
sti
shl
not
in
xchg
repnz
outs
sbb
and
jmp
call
stos
adc
add
mov
jl
and
mov
aad
int
xchg
mov
mov
stos
sbb
xchg
sub
xor
mov
push
jmp
cmp
sbb
cmc
ss
enter
mov
pop
cmp
movs
retf
(bad)
(bad)
add
shl
sub
aad
push
adc
loop
test
cmp
(bad)
jg
pop
aaa
adc
jne
call
shr
idiv
dec
(bad)
sbb
lock
pop
mov
push
adc
mov
add
cs
push
fucomp
add
loop
in
or
out
into
rcr
in
push
sar
clc
ja
mov
xchg
xlat
cmps
dec
lea
push
(bad)
push
and
xchg
pusha
mov
pushf
jl
or
arpl
icebp
mov
pop
js
nop
idiv
xor
jge
call
push
dec
jo
leave
xchg
test
in
scas
aad
inc
pop
sub
inc
sti
ja
adc
sbb
aam
pop
mov
iret
loope
and
mov
sbb
cdq
bound
syscall
jp
dec
mov
mov
je
daa
sub
imul
jne
mov
mov
push
push
sbb
pushf
in
leave
bound
fadd
push
repnz
outs
jns
rcl
stos
fnstenv
mov
jmp
jecxz
fdiv
js
test
adc
fimul
mov
out
into
jo
mov
sti
push
or
and
ins
data16
cmp
mov
movs
div
out
clc
imul
loop
xchg
xor
xor
sar
fstp
mov
mov
push
inc
push
adc
retf
lods
sub
mov
inc
test
arpl
jnp
and
das
out
cmps
outs
cmp
xor
scas
aad
mov
clc
call
test
dec
sub
mov
rol
add
nop
mov
rol
jnp
xchg
movs
rcr
mov
fbld
jg
(bad)
xchg
sub
cwde
dec
push
rcr
cmp
daa
ficom
mov
pushf
rol
test
loop
pop
(bad)
loop
aad
cmp
jmp
mov
fwait
les
not
stc
xor
cli
out
push
lds
xor
dec
stos
and
lock
idiv
pop
jae
mov
sub
pop
jns
or
int
cmp
das
cdq
ret
mov
mov
mov
fcmovnbe
(bad)
dec
scas
adc
push
and
(bad)
scas
xchg
mov
or
inc
mov
and
jmp
jae
pop
lock
gs
shr
scas
and
inc
and
lods
mov
je
and
je
lods
pop
shl
shr
stos
arpl
not
in
and
mov
popa
mov
test
call
imul
jns
pop
fbld
out
sbb
daa
sub
loope
cmps
cs
(bad)
jle
ret
repz
test
ds
xchg
loopne
pop
(bad)
mov
xor
add
test
sbb
and
imul
movs
loop
lock
out
pop
sub
fcomp
pop
inc
and
lahf
lock
mov
in
push
add
dec
dec
retf
or
or
jnp
cwde
das
jns
test
and
in
add
aam
stc
fnstcw
inc
cmp
sub
je
imul
sahf
gs
jb
fs
mov
fdivrp
xor
stos
add
mov
sub
add
mov
xchg
or
xor
lahf
fild
inc
iret
mov
sbb
adc
jmp
add
das
repz
jge
mov
xrelease
cli
mov
jno
pop
push
sbb
movs
(bad)
lods
(bad)
mov
jb
pop
sti
mov
imul
sub
xor
fdiv
outs
ins
push
bound
push
mov
stos
mov
mov
call
dec
into
scas
retf
push
lods
loop
ins
or
fstp
int
adc
mov
cmp
sub
aaa
imul
push
call
retf
popa
mov
lahf
enter
scas
imul
mov
mov
int3
cdq
in
in
xchg
pop
shl
adc
adc
out
dec
loop
and
xor
(bad)
(bad)
and
js
ss
and
push
inc
pushf
mov
gs
(bad)
out
or
call
fdiv
test
sub
dec
pop
cmp
xchg
addr16
cld
and
xor
in
sbb
xchg
addr16
inc
je
inc
jbe
xor
and
xor
dec
loop
in
aam
stc
les
mov
outs
jl
push
and
xor
or
sbb
sub
fbstp
sub
sahf
or
scas
fs
jno
xchg
rol
mov
sub
call
arpl
retf
lods
call
ret
shr
test
xchg
xor
jle
aas
inc
pop
pop
lahf
icebp
adc
fbstp
(bad)
xchg
xchg
hlt
std
jl
pusha
dec
test
pop
add
nop
adc
outs
add
fmul
aaa
movs
sub
neg
mov
int3
fnstcw
in
xor
adc
cmp
test
cmp
fiadd
ins
or
mov
cs
jl
fimul
ret
inc
xchg
cmps
dec
pop
sub
lock
cmc
jge
ins
dec
lods
bound
les
pop
pop
dec
out
xchg
in
dec
jmp
stos
mov
dec
pop
pop
sti
into
and
call
jp
dec
dec
test
(bad)
hlt
and
sub
jle
pop
cmp
nop
add
je
xchg
popf
xchg
xor
retf
(bad)
mov
pushf
inc
retf
xchg
jp
push
xor
mov
sar
outs
loopne
test
push
mov
in
and
ret
adc
lahf
shr
cwde
mov
out
cli
in
sbb
inc
cli
xchg
and
test
xchg
sbb
daa
jmp
add
or
adc
or
push
fisub
and
mov
in
aad
cli
in
test
inc
sbb
xchg
xor
mov
aas
dec
inc
gs
add
repnz
jno
(bad)
scas
sub
xor
push
mov
lds
test
aad
jp
xchg
div
jg
test
mov
icebp
mov
lods
test
pop
sbb
jg
jmp
fild
loopne
sub
push
(bad)
and
dec
xor
push
mov
call
dec
and
ds
jb
push
in
rcl
lods
retf
jno
mov
stos
aaa
mov
inc
jge
add
xor
adc
fcomip
pop
adc
push
xor
lods
pop
and
ins
pop
xchg
mov
jbe
fldcw
jae
push
add
add
push
jb
sahf
cmp
aad
aam
arpl
and
xor
ficomp
jnp
push
pop
or
(bad)
mov
pop
movq
xor
es
sahf
(bad)
(bad)
cmps
mov
loop
adc
jg
test
and
pop
mov
jb
(bad)
mov
mov
mov
test
repnz
mov
xchg
adc
xchg
dec
test
int3
cmp
retf
loop
ins
mov
push
add
dec
(bad)
fsubr
out
ret
adc
enter
mov
dec
dec
mov
and
sub
mov
mov
(bad)
jg
push
das
cmps
or
inc
push
jae
lea
mov
and
push
ficomp
fsubr
xor
jge
mov
jp
loope
mov
adc
xchg
imul
aas
lock
fbstp
rol
js
aas
enter
xchg
outs
(bad)
rcl
js
rol
icebp
mov
cmp
cwde
jbe
cmp
push
ja
xchg
shl
xor
cs
xor
sbb
mov
xor
push
lods
pop
xchg
les
test
(bad)
mov
arpl
int3
or
adc
aam
in
popf
out
xchg
mov
das
mov
sub
inc
stc
hlt
fs
test
(bad)
outs
retf
xlat
int
or
in
xor
aad
adc
pop
lea
pop
xor
pop
movs
fdivr
adc
and
retf
sub
dec
fs
test
xchg
sub
inc
xor
fcomi
ds
jns
scas
shl
or
(bad)
mov
jle
jle
mov
push
(bad)
or
sbb
outs
inc
dec
mov
inc
test
sub
and
dec
fisttp
lods
iret
int3
xchg
pop
sbb
push
mov
adc
adc
fld
mov
mov
sub
cmc
aam
out
sbb
sahf
cmp
xchg
lock
das
pusha
fldl2t
dec
(bad)
outs
dec
nop
std
cld
test
rol
add
sub
add
in
in
sbb
push
mov
(bad)
in
xor
rcl
ja
ins
xor
outs
movs
inc
in
out
adc
inc
mov
sar
cmp
jp
xchg
pop
mov
in
loop
pop
aas
movs
push
outs
js
lea
mov
pushf
pop
(bad)
div
xor
stc
xor
lds
dec
test
or
fild
les
push
push
clc
mov
push
cmps
push
lds
iret
loope
jge
call
lds
call
inc
pop
pop
mov
lahf
xor
or
push
std
pop
mov
inc
es
(bad)
out
add
xor
adc
or
push
ss
push
popa
pushf
ja
mov
and
call
mov
ror
cdq
mov
aad
ror
aam
add
ins
jge
mov
dec
rcl
loopne
arpl
inc
retf
adc
popa
jnp
hlt
hlt
addps
push
lock
addr16
cmp
outs
fidiv
mov
je
les
pop
aad
inc
jns
lods
mov
xor
jnp
cwde
sbb
adc
xor
add
int3
pop
hlt
add
ja
jle
daa
push
in
mov
xor
popa
push
cs
inc
add
jno
or
stc
dec
adc
int
mov
fdiv
and
ret
stos
push
rcl
stos
xchg
pop
xchg
aaa
xchg
stos
cmp
adc
jbe
adc
call
mov
jnp
mov
lods
mov
pop
test
pop
sahf
jbe
lods
loope
leave
call
push
xor
scas
dec
aad
fs
dec
test
dec
es
movzx
mov
out
ret
(bad)
test
mov
adc
lahf
aam
mov
cmp
(bad)
push
into
test
mov
popf
push
push
or
mov
out
scas
iret
sahf
lahf
test
push
jbe
iret
inc
ret
xlat
ds
mov
fdivr
mov
xchg
aam
push
ja
mov
or
xchg
loop
jo
mov
call
aas
inc
std
sti
adc
inc
fstp
fsub
xor
jp
dec
pop
(bad)
sub
js
mov
imul
out
or
fs
es
popa
push
fs
fld
jge
dec
add
mov
sbb
icebp
shr
(bad)
adc
dec
dec
lock
in
jae
xrelease
out
sbb
ja
enter
add
xchg
cld
push
mov
or
enter
pop
add
iret
dec
cmps
sbb
dec
stos
add
sub
rcl
xor
mov
dec
mov
push
or
dec
mov
ja
sub
imul
xchg
(bad)
pop
out
cmp
adc
and
mov
mov
or
mov
(bad)
cmp
test
push
mov
and
xchg
out
inc
xor
aad
bound
mov
scas
leave
add
gs
mov
ficom
mov
in
cmp
or
enter
pop
stc
pop
les
or
enter
pop
lock
adc
sub
mov
and
cmp
loope
idiv
inc
adc
pop
mov
aaa
xor
adc
enter
cld
retf
xchg
fild
leave
and
sub
stc
sahf
jmp
daa
fs
cdq
mov
aas
movs
into
pop
xchg
add
and
mov
(bad)
fistp
lods
xchg
cld
fmul
jge
or
xchg
stos
imul
inc
leave
add
rcl
(bad)
(bad)
ror
call
lock
jg
pop
arpl
add
icebp
or
movs
fist
lahf
call
xor
pusha
in
ret
jecxz
add
in
in
ret
mov
pop
push
ret
sub
jns
(bad)
out
fistp
jb
xchg
or
xor
addr16
mov
sub
test
mov
xchg
ret
mov
js
pmulhuw
aad
push
jb
mov
add
inc
dec
cmp
inc
sub
jnp
popf
adc
bound
(bad)
mov
cld
ss
icebp
push
aad
lock
imul
ins
jmp
out
dec
dec
xor
ins
movs
xor
hlt
push
pop
adc
mov
in
inc
jmp
jns
(bad)
cli
out
stos
aaa
mov
nop
jb
and
mov
cmp
aaa
xor
xchg
dec
enter
mov
cwde
test
cmc
push
sub
push
(bad)
daa
push
dec
mov
cli
out
fcomp
push
dec
out
sbb
mov
jle
adc
fdiv
cdq
xor
sub
mov
cmc
pusha
jmp
stos
or
mov
inc
popa
movs
outs
pop
call
add
sub
xchg
jbe
dec
pop
call
jge
pop
(bad)
out
pop
fcomp
popf
(bad)
movs
jmp
inc
iret
pusha
rcr
out
sub
push
xchg
fidiv
or
clc
mov
test
jbe
sbb
add
pop
cmp
pop
pop
into
fwait
dec
mov
adc
xor
stos
outs
sbb
inc
loope
pop
mov
bound
lods
sbb
and
dec
inc
or
xor
mov
push
cmp
cmp
popa
dec
(bad)
rcr
adc
mov
push
mov
loope
sbb
pop
dec
fsubp
mov
clc
aam
inc
xchg
stc
jae
pop
out
cs
mov
dec
pop
inc
outs
nop
push
sar
sub
xchg
pop
cwde
adc
mov
push
mov
mov
popf
retf
adc
sbb
div
fsub
shrd
push
bnd
out
(bad)
stos
push
cmp
ret
sti
jo
xchg
add
test
mov
inc
pop
sbb
and
mov
cmp
xchg
dec
pop
inc
push
adc
outs
(bad)
cmp
pop
bnd
jmp
test
lea
lods
add
ja
pop
xchg
sbb
jo
outs
imul
mov
fadd
lahf
in
es
jmp
push
sbb
fiadd
test
and
add
adc
sbb
or
or
xchg
cmp
mov
add
sbb
outs
out
gs
les
or
shr
es
and
pushf
repnz
cmp
cmp
jne
sbb
cmp
xor
(bad)
dec
xlat
popf
iret
jne
push
int3
ins
ror
cs
jae
jne
lods
loopne
xchg
das
jo
jno
sar
aas
sbb
mov
sub
mov
adc
or
scas
cmp
add
adc
pop
das
movs
adc
mov
cmp
cmp
loopne
mov
mov
fadd
test
outs
daa
pushf
loop
lea
lahf
loopne
add
ror
cmps
and
int
cmc
cmp
adc
inc
xchg
dec
sbb
repz
cmp
sbb
mov
jno
mov
jmp
xchg
shl
push
hlt
inc
mov
fisub
sahf
outs
xor
enter
pop
test
inc
pop
dec
pop
dec
call
rol
mov
outs
ja
das
add
mov
std
ja
das
jne
add
jmp
fwait
sar
cdq
or
mov
jno
cmp
shl
adc
int3
xchg
dec
into
test
mov
ret
pop
arpl
adc
or
push
inc
cli
pushf
(bad)
and
xlat
cmc
jmp
ret
mov
loopne
cmp
xchg
pushf
xchg
or
icebp
xor
out
xor
fisub
stos
clc
mov
dec
ror
enter
pusha
addr16
xchg
iret
mov
push
sub
les
jg
inc
inc
jg
(bad)
fcomip
push
pop
dec
pop
mov
in
adc
xor
jbe
or
jmp
or
jle
fistp
pushf
loope
pop
and
xor
retf
xchg
add
pop
lock
cmps
out
nop
sbb
nop
shl
or
xor
mov
mov
repnz
xabort
or
movs
data16
add
outs
xchg
stos
shl
add
pop
lahf
adc
push
lods
xchg
jp
xchg
mov
lea
movs
cwde
lock
es
dec
inc
xchg
fwait
xor
jae
sahf
pop
xor
xchg
mov
jecxz
push
mov
retf
out
rcr
ss
mov
push
dec
push
rcr
imul
sbb
jne
mov
or
in
mov
xor
sub
into
push
push
lds
pop
clc
sbb
test
fadd
or
cmp
fwait
mov
adc
cmp
or
adc
lods
xchg
cmp
bound
or
out
dec
into
mov
mov
inc
cdq
xchg
sbb
xchg
xlat
inc
pop
cli
je
adc
ret
mov
test
push
aas
icebp
add
pop
pop
push
dec
jnp
stos
paddsb
aam
mov
xor
cmp
test
test
lds
fistp
dec
dec
cmp
mov
movs
sbb
nop
xor
lahf
out
call
ficomp
clc
pop
in
jecxz
pusha
scas
dec
call
out
fs
fisttp
sub
imul
ror
fild
mov
imul
jge
repnz
dec
mov
inc
jle
or
xchg
into
js
dec
mov
sub
cmp
imul
cmpxchg
sar
stos
push
mov
movs
mov
ret
in
ins
cmp
xchg
add
aam
call
inc
test
aas
jmp
ds
popf
jmp
mov
fstp
test
fistp
loop
out
dec
loope
xlat
popf
xchg
stos
adc
cld
jnp
leave
imul
dec
jl
mov
or
xchg
imul
push
pop
sbb
adc
ficom
loop
dec
push
fs
aad
and
daa
mov
std
pop
pop
sar
test
gs
outs
fisttp
mov
dec
xchg
bound
or
jl
sbb
ret
cwde
and
jecxz
fs
push
pop
dec
and
xor
cld
jge
ret
dec
mov
mov
mov
out
dec
iret
push
ja
dec
adc
mov
mov
xchg
or
jmp
sub
(bad)
rcr
jg
xlat
dec
inc
dec
je
mov
aad
test
jecxz
mov
retf
inc
dec
dec
fcmovbe
test
jle
sub
loopne
add
or
mov
stos
cmp
fmul
mov
xor
clc
(bad)
push
pop
dec
outs
(bad)
cmps
jbe
pop
mov
addr16
fwait
mov
inc
mov
into
pop
call
stos
mov
add
and
and
mov
sub
pushf
pop
push
jl
daa
mov
push
in
int3
mov
mov
pop
xlat
out
out
jle
ins
into
pop
loop
push
jmp
mov
fsub
loope
sub
cmp
in
mov
inc
push
mov
lahf
push
and
mov
pop
or
sbb
push
and
jp
fmul
push
mov
or
sbb
jno
test
stos
cmp
repz
mov
lock
and
pusha
inc
shl
fcomp
(bad)
ja
dec
ins
pop
cmp
loop
push
call
dec
cmp
mov
(bad)
addr16
cmp
dec
or
sub
sahf
mov
ud2
add
mov
and
sbb
out
sahf
sbb
cmps
cmp
mov
adc
shl
xchg
stos
sahf
adc
cli
blcmsk
or
aaa
movs
cs
push
mov
js
in
pop
sbb
sbb
dec
xchg
mov
cli
push
sub
xor
imul
inc
(bad)
jmp
sbb
addr16
hlt
inc
popf
or
or
stc
dec
pop
xchg
pop
test
push
adc
cmp
jo
mov
jo
into
dec
lahf
add
popf
jl
sbb
std
mov
push
xor
mov
push
mov
ins
xor
mov
pop
mov
cmp
movs
stc
out
mov
nop
mov
jne
mov
shr
lods
and
cmp
out
neg
retf
dec
sub
les
(bad)
sub
fld
pop
inc
jns
adc
loope
mov
xor
call
movs
in
ss
dec
or
mov
enter
sar
test
pop
dec
inc
jne
push
cmp
dec
jae
inc
retf
jmp
xchg
mov
inc
add
pusha
ret
ss
aas
je
dec
mov
xchg
scas
ret
xor
push
inc
cdq
iret
fwait
jecxz
sbb
fwait
pushf
mov
mov
popa
mov
loope
iret
mov
je
cmp
xlat
out
pop
test
fild
adc
inc
dec
push
mov
vpmacsswd
dec
imul
retf
inc
(bad)
es
xchg
in
or
sbb
fimul
ficomp
dec
icebp
mov
sbb
call
lods
adc
int
jle
retf
xchg
or
add
ins
and
cmp
mov
rol
push
add
cs
out
mov
xchg
(bad)
xchg
and
imul
xchg
cs
loope
icebp
lods
aad
jb
repnz
xchg
ds
mov
shl
aaa
add
and
or
jl
add
pusha
jg
pushf
psubsb
jno
dec
popf
pop
xchg
and
pop
(bad)
mul
aas
data16
inc
mov
into
and
cmc
add
leave
pop
gs
mov
or
xor
xchg
mov
and
pop
mov
sub
or
ds
mov
int3
and
mov
pop
(bad)
push
or
shl
adc
out
pop
inc
(bad)
mov
inc
mov
mov
pushf
mul
std
and
js
cmp
leave
fstp
add
nop
push
repz
adc
and
mov
lods
pop
mov
pop
push
movs
out
jo
outs
fadd
push
cmc
adc
push
xor
popf
ins
call
push
cwde
imul
sbb
sbb
lea
fs
fneni(8087
add
cdq
cdq
sbb
jne
and
mov
pop
mov
out
inc
mov
pop
sbb
test
call
mov
cmp
repz
and
push
ja
movs
add
pusha
repnz
fisubr
pop
(bad)
xchg
(bad)
cmp
mov
pop
int
add
mov
(bad)
and
jnp
lea
jno
jae
out
retf
pop
xchg
lea
jnp
sub
lds
fstp
pop
std
cmp
jmp
mov
call
js
cs
and
mov
addr16
(bad)
cwde
mov
arpl
imul
xor
xor
dec
jmp
adc
loope
imul
sub
fdivr
push
scas
lods
xchg
pop
sbb
dec
call
adc
test
jo
fld
nop
loopne
or
stos
popa
add
mov
inc
jmp
adc
mov
fsub
sahf
nop
out
les
xor
lock
mov
out
and
(bad)
pop
pop
dec
in
vpaddsw
loopne
call
mov
retf
iret
sbb
or
stos
je
mov
lea
dec
pop
sar
jne
cmc
sub
push
ja
inc
pop
out
lods
jp
inc
push
push
popf
mov
xchg
or
xchg
mov
imul
jae
scas
pop
cmc
int
cli
movs
fwait
mov
push
dec
fsub
cmp
xor
cmp
cmp
(bad)
fist
int3
(bad)
pop
xor
test
jg
cwde
or
cmp
mov
fldenv
push
loop
mov
(bad)
ja
push
mov
js
out
into
loop
aas
popf
xlat
movs
and
sahf
mov
rcr
repz
jmp
mov
push
push
cmp
mov
push
add
cmp
dec
mov
mov
lahf
cmp
and
xchg
icebp
in
xor
mov
fs
retf
scas
movs
sub
fimul
(bad)
xlat
dec
jg
pop
in
mov
int3
leave
add
movs
jns
rcr
cld
xor
inc
push
popa
inc
sub
xor
and
push
cli
pop
js
push
cmp
je
or
loopne
fiadd
mov
ins
mov
outs
add
cmp
cmps
mov
leave
out
lds
sub
lods
jbe
in
retf
mov
jno
iret
rcr
dec
pop
mov
clc
test
add
dec
lods
cmps
jp
iret
jmp
rcr
xor
sub
pop
mov
cmc
jmp
add
jmp
jno
daa
adc
add
call
mov
psubsw
inc
int3
out
mov
daa
addr16
cmps
mov
xor
jo
sub
push
and
adc
mov
cmp
into
pusha
ret
or
pop
retf
movs
mov
rcl
sbb
mov
jecxz
mov
inc
mov
xor
xchg
jmp
pop
es
mov
jg
xchg
mov
(bad)
xchg
loopne
mov
ja
sar
cdq
out
mov
std
movs
jbe
out
nop
dec
jns
mov
xor
sub
and
pop
aam
les
and
push
mov
sub
jecxz
ins
pop
lea
dec
pop
repnz
xchg
adc
xchg
push
pop
add
(bad)
call
lods
push
push
repz
sar
call
pusha
adc
jl
nop
cmp
mov
add
inc
sbb
push
iret
mov
mov
mov
mov
sub
xor
movs
mov
xor
daa
popf
jmp
push
cmp
mov
ins
xchg
cli
pop
sub
jae
ret
jmp
inc
mov
sub
inc
jnp
pop
cmp
adc
ret
and
and
jbe
mov
push
mov
cwde
ss
aam
mov
xor
pop
add
or
dec
push
test
mov
ror
push
std
pusha
jae
imul
fisub
cs
inc
sbb
mov
ins
out
adc
inc
dec
sub
jb
jb
in
xchg
pop
sub
out
mov
shl
xchg
sub
stos
pushf
sbb
test
enter
mov
aas
or
inc
pop
ds
fwait
adc
sbb
je
outs
mov
cld
fild
idiv
fst
pop
cmps
or
inc
scas
mov
mov
leave
fdiv
test
int
(bad)
dec
jmp
popa
cmp
or
sub
xchg
leave
mov
sub
mov
jne
jnp
bound
ret
cwde
out
and
adc
mov
sbb
lahf
out
fxch
xor
or
push
repnz
mov
int3
pop
dec
xchg
and
sub
test
and
imul
sub
adc
mov
pop
std
push
adc
fdiv
jo
xchg
and
mov
mov
xchg
mov
mov
ret
xchg
pop
out
js
sbb
scas
outs
lea
stos
jle
fndisi(8087
sub
aad
xor
mov
mov
xchg
push
mov
in
mov
and
xor
jp
adc
or
push
mov
jecxz
ret
data16
jb
repz
icebp
xchg
test
imul
push
jp
xor
mov
daa
jge
cli
push
dec
cmp
and
ins
js
dec
pop
push
add
out
pop
adc
sub
pop
pop
ja
lahf
inc
or
int3
lds
cmp
repnz
jecxz
xor
jbe
sub
and
inc
mov
mov
(bad)
adc
fld
mov
leave
iret
mov
rcl
xor
or
inc
shl
dec
add
fadd
mov
mov
jns
and
push
test
adc
fimul
pop
stc
movs
out
cmp
test
xchg
mov
xor
pop
sar
(bad)
jmp
sbb
call
imul
sbb
leave
in
test
jle
dec
std
push
dec
cmp
mov
ins
jmp
loopne
jp
stos
xor
push
cmps
mov
outs
jne
shl
mov
jo
and
fsubr
fbstp
hlt
arpl
sti
jp
pop
stos
push
std
shr
push
aaa
fwait
div
or
sub
xchg
(bad)
fmul
ds
fs
mov
test
test
adc
and
lahf
push
jl
inc
xchg
sbb
test
mov
rcr
loope
jge
aad
in
inc
inc
or
test
sbb
cmp
adc
rol
jecxz
test
inc
(bad)
sti
das
leave
inc
daa
addr16
leave
(bad)
loop
xor
mov
addr16
iret
icebp
jmp
mov
aad
xchg
shr
inc
test
mov
or
mov
jne
xchg
sbb
fcomp
outs
dec
aad
enterw
fisubr
or
jecxz
xor
cmp
push
stc
and
(bad)
lods
(bad)
mov
sub
sbb
mov
out
sar
test
iret
js
cs
lods
inc
icebp
sbb
or
push
scas
inc
mov
ret
sub
mov
mov
sub
push
call
push
call
push
mov
call
retf
adc
shl
cmp
in
ins
dec
(bad)
icebp
jmp
test
jmp
int
add
or
pop
mov
mov
pop
(bad)
dec
icebp
imul
xor
outs
cmp
xchg
and
jle
ficom
push
sahf
(bad)
dec
(bad)
lock
lock
or
mov
adc
jp
sbb
out
sbb
(bad)
call
and
pop
and
mov
cmps
cmp
aas
cmp
mov
fsubrp
xor
dec
dec
xor
out
rol
inc
ins
and
push
xchg
retf
sub
fcmovnu
cld
mov
xor
aaa
ins
inc
jg
lahf
dec
push
jnp
cmp
scas
movs
(bad)
add
push
and
aas
jmp
or
(bad)
xchg
ret
pop
fwait
push
cmp
push
in
enter
arpl
(bad)
int
out
test
pop
scas
mov
test
jns
ss
shl
mov
cmp
rol
sub
aas
push
and
sbb
call
aam
shl
dec
sbb
or
or
in
or
pop
cmps
adc
or
repnz
dec
rol
stos
inc
lea
inc
and
call
outs
in
inc
jbe
outs
pop
pop
sahf
mov
mov
hlt
rol
dec
mov
pop
iret
outs
xlat
outs
mov
mov
les
pop
inc
mov
jp
inc
push
mov
leave
(bad)
mov
xchg
dec
lods
ja
(bad)
and
fisttp
popa
mov
cwde
cmp
sub
dec
lahf
das
fild
mov
push
jno
push
cmp
inc
sub
xor
aas
cmc
pusha
loopne
call
sar
fist
jg
xor
pop
jecxz
mov
pop
push
pop
jmp
inc
lods
icebp
cmps
pop
dec
sub
push
adc
mov
(bad)
jno
out
xchg
xor
ret
push
loop
xchg
push
in
pop
repz
or
push
xchg
test
sub
cmp
cwde
fnsave
fild
movs
jg
addr16
jl
hlt
pop
inc
and
pop
cwde
jb
lds
inc
test
jl
xlat
sub
iret
push
outs
jne
pusha
outs
icebp
(bad)
popa
arpl
or
ins
ror
mov
ja
test
outs
sar
push
mov
daa
and
aad
cli
mov
adc
xchg
mov
ficomp
fmul
jmp
movs
inc
xlat
xchg
adc
idiv
lods
cmps
sbb
ins
(bad)
mov
iret
loop
mov
push
icebp
ins
out
imul
test
xor
mov
push
and
xchg
pop
jge
jmp
int
sub
jmp
idiv
daa
in
test
and
fxch
pop
fisttp
scas
gs
sbb
movs
add
sub
ficomp
add
inc
pushf
rcr
add
inc
dec
out
jne
pop
dec
add
dec
out
mov
add
addr16
mov
pusha
int
cmp
scas
cmps
sbb
mov
xchg
fs
xchg
(bad)
xchg
outs
adc
dec
sub
pop
xlat
inc
add
or
test
adc
cmp
pop
ror
es
cdq
xor
inc
sub
inc
sar
dec
mov
dec
pop
sub
xlat
cmp
xchg
int
sub
mov
popf
mov
sub
call
fimul
push
(bad)
lahf
daa
dec
jae
mov
and
ret
rcl
iret
pop
cmc
clc
inc
push
sbb
ja
stos
xor
mov
push
dec
xor
cwde
and
es
xchg
xchg
mov
dec
or
imul
push
jl
cld
das
adc
xor
xor
js
jle
sahf
or
dec
xor
push
add
sbb
or
and
loope
js
push
pop
push
lods
xchg
xchg
(bad)
loop
cmp
popf
mov
ds
inc
and
adc
mov
cmps
xchg
ret
aas
sti
pop
dec
fadd
call
push
fnstsw
jg
mov
or
ret
add
xchg
(bad)
pop
in
push
jl
adc
arpl
cmps
data16
sub
push
ror
dec
sbb
gs
test
shr
xlat
gs
xor
scas
daa
push
nop
shl
fild
mov
pop
leave
sub
push
call
jle
dec
dec
nop
lahf
mov
jbe
fild
das
call
imul
adc
outs
loopne
retf
call
test
xchg
icebp
push
sub
xlat
sbb
push
or
retf
popf
shl
(bad)
mov
and
add
jnp
mov
cmps
das
xchg
pushf
push
sub
daa
xor
fmul
in
cmp
mov
scas
add
call
(bad)
mov
ja
lds
call
(bad)
or
xchg
stc
mov
hlt
mov
or
into
fidiv
and
aad
icebp
lods
iret
rcl
iret
pop
lock
cmp
and
lahf
(bad)
cli
arpl
into
sub
mul
cld
jecxz
inc
aas
xor
mov
xchg
es
div
pop
add
test
mov
mov
lods
(bad)
popf
sbb
add
stc
push
mov
call
dec
aas
inc
cmp
add
pop
pop
inc
test
cmps
lahf
mov
nop
push
dec
jmp
xchg
out
dec
out
or
inc
aaa
and
xor
rcl
sbb
cmp
sub
xlat
mov
pop
or
mov
ds
jge
jp
test
mov
sub
fs
inc
or
mov
adc
or
imul
dec
cmp
xor
jo
fdiv
repz
movs
leave
dec
cmp
mov
xor
mov
or
cdq
imul
movs
mov
mov
push
cli
outs
cmp
and
jnp
xchg
cmovg
mov
pushf
(bad)
fild
mov
fwait
fwait
pop
xor
push
pop
repnz
inc
int
shl
std
daa
mov
push
inc
adc
idiv
dec
cwde
cld
and
push
push
xchg
sti
xchg
gs
add
cmps
sub
sub
arpl
cmps
xlat
or
push
arpl
jge
cmps
repz
xchg
mov
jge
sub
cmp
push
sub
sbb
pop
pusha
retf
cmp
mul
fimul
inc
outs
add
mov
int
test
imul
inc
xchg
cmp
vsubps
inc
push
and
push
out
or
outs
addps
cmp
cmp
int
xchg
leave
and
test
cmp
cli
push
retf
jb
outs
or
ins
jmp
pop
and
mov
dec
xlat
enter
scas
(bad)
fstp
sti
xor
bound
std
sub
pop
inc
in
inc
and
popa
pop
retf
inc
pop
loopne
jge
or
popf
adc
mov
push
ins
popa
push
xchg
cmc
aaa
mov
dec
mov
fiadd
adc
nop
sub
dec
inc
cmps
imul
test
clc
inc
adc
dec
popa
dec
lods
out
lea
xor
jno
and
cmp
icebp
repnz
pusha
xchg
(bad)
mov
mov
cmp
push
fmul
mov
push
es
movs
sub
mov
pushf
test
mov
push
popa
call
repz
inc
dec
dec
ja
and
test
(bad)
mov
loopne
mov
sbb
call
loope
pop
sub
inc
xchg
sub
add
retf
in
cmps
and
into
pop
(bad)
cmp
rcl
xchg
aad
mov
sbb
hlt
jnp
sub
nop
jae
lods
mov
adc
pop
pop
lods
(bad)
cmps
and
jo
pop
test
rcl
push
ret
ret
sbb
scas
push
jo
jbe
mov
or
xchg
mov
cmp
push
in
mov
in
xchg
and
adc
xor
push
and
sar
or
mov
add
pop
in
call
sar
cmps
mov
xchg
psrld
push
vpmaddwd
xor
addr16
and
cmp
sbb
jns
ficomp
enter
jno
fild
mov
mov
mov
cdq
push
fidiv
add
imul
ficomp
xor
cmp
test
iret
in
xor
cmp
lahf
into
scas
mov
retf
push
outs
push
movs
ffreep
xchg
mov
push
pop
add
ret
ss
sahf
mov
fistp
retf
neg
inc
jne
push
push
xchg
jo
pop
shl
pop
mov
(bad)
mov
out
push
test
in
adc
inc
cmp
or
scas
mov
adc
aad
sbb
pop
dec
xor
movs
mov
xlat
xor
in
mov
(bad)
fisttp
aaa
ins
mov
ins
cld
data16
and
outs
mov
ja
push
cmps
mov
int
rcl
sbb
pop
dec
mov
add
push
ss
ins
xor
in
inc
test
rcr
jae
mov
pop
xor
pop
popa
or
pop
mov
daa
dec
or
mov
into
rol
pop
or
call
mov
xchg
not
mov
add
aaa
scas
xchg
shr
(bad)
jle
iret
xor
mov
cmp
aam
fstp
int3
daa
mov
into
inc
cld
cmps
jp
sub
sbb
sbb
iret
loope
test
inc
mov
(bad)
out
xchg
(bad)
cmps
and
lock
rcl
add
add
cli
adc
sbb
stos
lea
data16
adc
mov
inc
aam
push
cmc
call
and
inc
adc
push
pop
mov
xchg
iret
jb
mov
sbb
sbb
test
ja
popf
adc
retf
movs
dec
add
add
ja
gs
sub
(bad)
int
ret
fs
push
sti
dec
mov
mov
mov
ins
dec
gs
cmps
jb
stos
adc
xor
xchg
jmp
imul
cli
and
les
stos
test
in
lea
adc
scas
les
adc
cli
dec
push
jmp
pop
xchg
mov
sub
(bad)
(bad)
jg
xchg
js
sti
pop
inc
out
aas
into
push
les
call
in
dec
imul
scas
nop
movs
inc
and
outs
adc
(bad)
mov
push
cmc
jnp
int3
or
imul
lds
push
les
int
pop
xor
ds
je
xchg
sti
imul
push
leave
bound
clc
into
shr
out
push
rcl
xchg
idiv
push
sti
push
int
add
push
imul
je
jl
sub
inc
cmp
and
int3
add
ins
imul
dec
or
imul
mov
ss
sub
pop
lahf
(bad)
mov
not
jae
inc
fs
jle
xor
mov
sub
jmp
fbstp
stos
xor
mov
pop
xchg
push
mov
jmp
xor
ins
fisub
dec
test
out
mov
adc
mov
cli
push
jno
inc
and
or
sar
shl
ja
or
sub
xor
xor
mov
aaa
daa
fs
aas
ss
mov
dec
inc
cs
cld
xchg
push
pop
(bad)
iret
dec
dec
mov
and
pop
lds
mov
ds
adc
inc
scas
adc
mov
inc
jmp
jae
jge
xchg
popa
xor
mov
ja
add
aad
mov
dec
popf
push
pop
push
out
mov
sahf
sub
push
sbb
push
cmp
mov
jecxz
sbb
idiv
mov
cmc
fst
jmp
dec
cmp
das
inc
mov
div
je
jmp
out
mov
inc
jo
or
fnstcw
push
mov
sub
es
jmp
cmps
std
mov
scas
and
scas
mov
and
aam
jmp
ja
movs
mov
shr
sbb
pop
adc
xor
push
pop
pop
xchg
jmp
call
pop
cmc
dec
test
out
cdq
push
std
dec
bound
push
push
dec
stc
xchg
jne
daa
dec
xchg
js
add
push
add
jbe
aaa
iret
xor
jne
jecxz
out
adc
pushf
(bad)
cmp
(bad)
repz
add
js
sti
adc
jle
cld
rcl
repnz
mov
or
dec
inc
mov
mov
call
imul
mov
ffreep
clc
jl
cld
stc
pop
movs
jl
hlt
dec
fs
lods
sub
jmp
sbb
test
fwait
ret
mov
cmps
outs
sbb
(bad)
aad
ja
dec
scas
leave
clc
push
adc
aad
xor
push
lahf
push
pusha
ret
mov
sbb
xlat
or
cmp
mov
push
popa
sahf
in
xor
push
xchg
test
mov
hlt
sub
xlat
int3
jb
in
pop
adc
mov
sbb
(bad)
sbb
loopne
jnp
popf
movs
jl
xchg
repnz
or
mov
test
adc
leave
sub
aad
mov
sti
imul
jae
add
sub
call
inc
mov
xchg
lfence
xor
jnp
fadd
repnz
ret
cli
pop
jnp
or
push
jbe
adc
frstor
dec
mov
inc
fwait
pop
sub
jb
data16
xchg
pop
std
pop
dec
cld
jecxz
xor
dec
xchg
dec
cmp
adc
add
jg
mov
xor
ja
push
xchg
push
repnz
mov
adc
jg
enter
and
xchg
xchg
js
add
jnp
sub
mov
cmp
pop
and
adc
push
xchg
fcom
and
lea
or
lea
add
and
mov
fprem
cmp
jb
scas
jle
cmps
jne
mov
mov
daa
aad
xchg
lock
xor
pusha
jnp
movs
add
jge
jmp
and
jmp
call
sbb
and
mov
loop
js
lds
mov
fild
cmp
add
lea
inc
push
mov
add
test
(bad)
inc
ss
or
sti
sbb
clc
adc
punpckhbw
ret
cmps
dec
xor
repz
loope
push
pop
enter
mov
mov
mov
mov
retf
in
xor
inc
popa
pop
jmp
stos
xchg
jns
je
fdiv
xchg
enter
lea
mov
ss
movs
in
hlt
pop
loop
jne
jne
cmps
stc
les
(bad)
jb
mov
out
or
cmc
xor
pop
mov
nop
jecxz
mov
xchg
mov
retf
in
pop
sub
hlt
push
cmps
sub
or
sub
push
mov
icebp
test
or
popa
jg
(bad)
jecxz
mov
xchg
sub
adc
call
enter
in
sub
cmp
out
push
in
xchg
test
xor
cdq
mov
sbb
jnp
push
sbb
sar
popa
inc
(bad)
sub
push
stc
jno
mov
dec
cmp
aaa
inc
fisttp
push
sbb
pop
mov
xchg
fadd
xsave
shl
sbb
stc
xlat
xchg
fwait
pop
sub
pusha
and
test
mov
call
fucomp
leave
loopne
syscall
push
cli
jmp
rol
jp
cld
neg
mov
cwde
push
mov
invlpg
inc
push
or
test
xchg
and
xchg
ss
jo
ja
dec
cmp
or
dec
in
sub
mov
lock
push
inc
jns
push
adc
stos
into
sar
ror
add
push
xchg
ds
cmp
push
repz
mov
retf
cmp
add
push
bound
lock
push
xor
mov
int3
popa
shl
xchg
add
jns
aam
outs
(bad)
cmps
lods
retf
icebp
aas
mov
mov
inc
(bad)
cdq
mov
jl
mov
and
mov
je
mov
add
pop
mov
jecxz
or
ins
jnp
sub
int3
into
mov
es
sub
and
scas
fstp
jmp
push
inc
xor
push
outs
add
mov
ss
pop
test
jmp
fwait
mov
xor
sti
xor
addr16
dec
sub
xlat
test
mov
sbb
aas
nop
pop
adc
push
mov
lds
lods
in
lock
mov
mov
cmps
je
in
cmc
mov
lahf
retf
jge
xlat
sub
xchg
(bad)
loope
je
xchg
int
cwde
leave
dec
jae
sbb
jg
jmp
rol
adc
daa
pop
mov
add
mov
and
(bad)
into
aam
and
aas
cdq
les
sbb
add
sbb
and
sub
fs
push
bound
jle
outs
adc
inc
mov
jle
test
test
push
sub
push
and
loopne
int3
push
sbb
and
and
rcl
and
ins
jp
(bad)
retf
pop
les
je
or
jnp
jno
int3
cmp
sbb
or
loopne
xchg
pop
test
mov
aaa
bnd
mov
push
cmp
and
jb
leave
add
(bad)
cmc
into
movs
lods
pop
dec
push
retf
repnz
jbe
and
sahf
mov
iret
xor
adc
iret
sahf
and
js
lods
mov
pop
lods
in
cdq
mov
jb
cdq
retf
in
mov
cmp
cli
push
xor
pop
test
mov
and
add
xor
xchg
shl
fstp
ret
loope
loope
xlat
sbb
stc
mov
fsqrt
or
mov
and
sbb
push
mov
add
sbb
retf
jb
cs
jmp
mov
data16
xchg
stos
push
leave
sub
and
jp
cmps
xchg
adc
imul
sbb
add
add
add
scas
inc
or
aas
ja
inc
push
je
outs
push
pavgw
or
fwait
add
add
jmp
jl
dec
adc
dec
inc
mov
sbb
ins
sbb
pop
jns
aam
out
popa
repz
(bad)
xchg
mul
fistp
push
push
mov
xor
cmp
dec
imul
cli
inc
mov
cmp
pop
scas
fsubr
movs
test
stos
pop
je
into
pop
push
loope
scas
cwde
mov
in
test
mov
ret
std
in
dec
push
inc
retf
xor
mov
retf
jge
pop
mov
sti
sub
add
sub
mov
add
mov
fcmovnbe
or
outs
fsub
sub
(bad)
add
mov
mov
push
add
aam
lock
mov
lds
leave
adc
pusha
das
dec
cs
out
(bad)
jp
into
xor
cld
add
mov
outs
pushf
ss
cmps
sahf
adc
sbb
mov
cmps
dec
adc
sahf
xchg
push
and
xchg
push
mov
movs
mov
mov
inc
enter
sahf
fld
inc
out
loope
push
push
pop
je
xchg
xchg
xchg
dec
scas
cmps
cmp
gs
retf
call
sub
ret
jae
cli
movs
adc
mov
xchg
push
inc
mov
rcl
pop
xchg
fld
push
mov
sub
jno
stc
adc
in
pop
fucomip
jg
jb
jge
test
fbstp
or
push
lahf
cmp
sbb
push
mov
data16
inc
cmp
inc
repnz
mov
pop
sub
fmul
movs
shr
push
(bad)
fcmovbe
fdiv
clc
mov
mov
push
jle
in
sbb
or
bound
shl
retf
lods
fnsave
leave
clc
in
pushf
mov
jae
mov
sub
cmp
lahf
mov
nop
jns
or
pop
cmps
(bad)
in
jne
movs
jmp
out
sub
fst
mov
loop
push
mov
fcmove
and
aam
das
clc
das
call
pop
xor
int3
jbe
xchg
and
scas
pop
dec
pop
in
adc
in
push
pop
sub
jbe
in
lahf
stos
inc
xchg
jne
call
inc
mov
mov
ds
or
lahf
sahf
jb
push
dec
sbb
jl
xor
pop
sub
mov
pop
dec
xchg
mov
movs
imul
ficom
jbe
push
fdiv
add
dec
xchg
jecxz
cmp
lods
push
addr16
add
sub
scas
cdq
pop
js
loop
int3
test
vunpckhpd
test
xchg
repz
sbb
aas
stc
and
sar
das
neg
iret
addr16
jns
es
icebp
inc
fucom
mov
mov
fsub
call
lahf
sbb
push
or
xchg
jecxz
fnstsw
mov
inc
sub
mov
mov
leave
jae
mov
(bad)
jno
push
stos
xchg
pushf
jg
lods
fisubr
outs
cmc
sub
push
(bad)
leave
retf
mov
adc
out
dec
adc
into
cmc
sbb
adc
imul
mov
add
fmul
in
mov
test
ja
(bad)
pmaxub
es
xchg
clc
loopne
or
dec
mov
push
(bad)
push
sbb
mov
add
push
sbb
inc
ins
push
adc
js
xor
ret
je
ss
cmc
aam
loop
popf
fwait
cmp
sbb
jge
and
(bad)
aad
addr16
loop
or
xchg
adc
aas
push
(bad)
fcmovnb
jmp
fimul
ret
cmp
cmc
call
in
loop
push
(bad)
mov
addr16
adc
imul
fimul
ficomp
loop
inc
ficom
xchg
daa
sbb
sub
and
outs
lea
ss
xchg
mov
shl
jecxz
adc
add
retf
sub
jae
mov
push
and
pop
cmp
adc
and
aam
sbb
call
mov
nop
xchg
cli
nop
out
jg
mov
push
mov
add
inc
jb
add
rcl
adc
movs
jp
out
mov
and
stc
stc
or
xchg
retf
dec
push
cmp
add
mov
ret
add
push
(bad)
imul
dec
std
inc
dec
mov
sub
daa
jp
stc
hlt
(bad)
cmp
xchg
nop
pop
or
test
jns
out
sub
and
pop
cmp
lds
shl
idiv
movs
dec
popa
xchg
jl
pop
aas
pop
lods
fisubr
and
call
mov
add
mov
inc
mov
mov
cdq
dec
ror
test
std
add
add
or
stos
cmc
or
jb
inc
xor
dec
cmp
dec
sbb
jp
or
pop
sub
pop
lds
push
test
cmps
ret
inc
stos
cmp
ficom
mov
in
cmp
dec
sbb
loopne
call
push
pop
call
aam
mov
jmp
adc
cwde
fs
aas
jg
mov
xor
mul
inc
sub
shl
stos
and
cwde
push
popa
pop
adc
xchg
mov
cmps
aad
pushf
mov
or
test
jo
mov
dec
ins
mov
inc
inc
push
mov
push
cmp
paddb
aas
mov
jae
outs
add
xor
push
popf
lods
fstp
dec
xlat
push
test
fcmovb
jbe
scas
(bad)
xchg
cwde
stos
push
retf
(bad)
pop
mov
je
popf
cld
pop
mov
cld
mov
sub
push
adc
pusha
xor
jb
bound
mov
cld
and
push
cdq
jmp
mov
jge
dec
or
cmps
adc
jg
arpl
mov
inc
cdq
xor
call
sub
xor
sbb
mov
adc
pushf
fdivr
dec
dec
cmp
push
outs
cmps
pop
fisttp
or
movs
(bad)
lods
push
repnz
cdq
inc
retf
pop
xlat
push
pop
pop
xor
and
push
out
ret
bound
mov
inc
mov
mov
cmp
cmp
into
call
lahf
out
(bad)
jmp
pop
lahf
imul
lods
add
addr16
push
adc
cli
xchg
jns
stc
nop
pop
mov
imul
sub
outs
sbb
stos
ficom
or
imul
mov
sbb
stos
sbb
dec
test
out
mov
mov
sub
xchg
lahf
mov
scas
jbe
loop
(bad)
jns
mov
sar
mov
and
jecxz
add
jmp
gs
fdiv
add
ds
repnz
aam
mov
dec
dec
nop
jno
mov
push
call
mov
loopne
mov
outs
sub
mov
shr
pop
(bad)
div
jecxz
push
ror
mov
jbe
push
jb
sti
xchg
mov
xor
pop
ret
inc
push
mov
xchg
iret
dec
inc
cld
pop
gs
inc
xchg
pusha
enter
in
gs
push
out
imul
les
xchg
jmp
jb
jo
les
inc
out
imul
xchg
setns
sti
push
or
jl
(bad)
ins
retf
pop
inc
pop
js
jmp
jl
mov
dec
adc
into
lds
push
out
fiadd
test
lods
push
jg
test
push
mov
xor
movs
call
dec
movs
sbb
mov
mov
dec
sub
mov
repz
push
sbb
jl
sbb
inc
xor
mov
test
push
add
into
retf
push
bound
pop
adc
xlat
push
lea
xor
test
movs
or
pop
dec
fxch
mov
sub
cmp
pop
sbb
sti
mov
jnp
ja
xor
dec
fild
imul
call
add
sahf
pop
jl
jl
cmp
xchg
(bad)
dec
data16
dec
cmp
add
je
sub
das
inc
mov
hlt
jmp
adc
stos
push
lds
jp
mov
cmp
cmc
test
sar
retf
pop
in
(bad)
xchg
cdq
push
cmp
cld
sbb
inc
cs
or
sub
sbb
jae
sahf
pinsrw
cmp
call
retf
sbb
mov
xchg
inc
sbb
mov
nop
add
scas
add
pop
jnp
test
hlt
leave
mov
add
lea
retf
rcr
call
daa
xchg
dec
ja
repnz
jge
mov
das
ja
cwde
pop
popf
scas
int
sbb
gs
or
inc
inc
inc
adc
xchg
inc
bound
jl
cmp
and
inc
and
js
jnp
lods
loopne
push
test
dec
setb
jmp
arpl
mov
fld
popf
lock
dec
rcl
mov
xchg
xchg
imul
cmp
xchg
jne
int3
or
or
cmps
ds
mov
xchg
test
hlt
inc
js
push
xchg
(bad)
rol
xor
pop
cwde
mov
mov
pandn
in
jno
xchg
jae
fwait
adc
jnp
fisub
ja
push
and
xchg
dec
popf
sbb
test
ret
out
dec
sub
movs
lea
lock
mov
mov
jmp
movs
sbb
pop
jae
adc
inc
mov
sub
and
mov
jecxz
sbb
cmp
stc
nop
les
xlat
mov
shl
xor
mov
ret
pushf
daa
inc
add
icebp
or
ss
push
adc
stos
gs
push
push
pop
enter
xor
neg
cmp
and
(bad)
aaa
dec
rcl
(bad)
pop
iret
cmp
cli
xlat
dec
add
sahf
adc
test
hlt
push
or
out
lea
fistp
sti
in
push
add
and
mov
jge
sub
push
push
cwde
or
out
cmp
mov
enter
lds
and
pop
cmp
das
adc
js
outs
jns
sbb
push
imul
(bad)
pop
push
dec
sub
mov
xor
xchg
call
inc
retf
in
out
jnp
cmp
push
mov
pop
pop
mov
movs
lods
cdq
movs
adc
repnz
sub
ds
cmp
or
sbb
pop
inc
sar
daa
adc
lock
jg
pop
jp
loop
fisttp
inc
push
inc
cli
lods
inc
and
scas
xor
call
aas
inc
pop
push
(bad)
jno
test
mov
cmc
fmul
sub
mov
dec
out
push
jae
cdq
(bad)
aad
sbb
jnp
inc
add
sub
xchg
sbb
and
ss
sbb
dec
xor
inc
lods
dec
cwde
clc
sbb
enter
mov
mov
or
je
mov
js
jmp
lods
scas
popf
(bad)
push
mov
fneni(8087
push
mov
xchg
lods
jp
stc
out
mov
ds
inc
lea
jge
adc
out
sbb
mov
jp
jbe
addr16
int
sbb
mov
(bad)
mov
xor
outs
mov
adc
push
mov
cmp
sti
cmc
test
mov
out
hlt
mov
jae
mov
jo
push
dec
imul
and
xchg
xchg
retf
test
cwde
cli
lea
inc
pop
lahf
and
cmps
pop
and
fsubr
adc
loop
xor
sub
xchg
leave
push
ret
jp
xchg
mov
mov
adc
mov
jle
movs
xlat
push
retf
mov
xlat
movs
(bad)
out
div
sub
xchg
outs
outs
cld
enter
add
sub
clc
(bad)
push
cmp
test
adc
xchg
jno
enter
fld
xchg
and
push
inc
in
not
pop
adc
or
cmps
push
ror
test
push
jl
cmps
loop
test
int3
and
jnp
loop
inc
jno
rcr
sbb
popa
lea
dec
sar
rol
les
cwde
cmps
mov
jnp
xchg
jae
sbb
xchg
xlat
scas
test
and
dec
and
fistp
jmp
mov
or
das
sbb
push
jo
mov
push
and
jmp
jno
outs
pop
adc
add
adc
push
mov
mov
mov
mov
ins
jns
sbb
addr16
adc
xchg
fdiv
popa
imul
ins
ins
inc
pop
pusha
das
in
mov
dec
(bad)
lods
mov
mov
rcr
pusha
pop
push
mov
nop
stc
aad
pop
out
and
jne
jnp
pop
stc
add
adc
cmc
push
mov
inc
cmp
mov
outs
sub
cmc
popf
sub
test
clc
cmp
adc
(bad)
lahf
int3
jmp
dec
scas
xlat
mov
je
jge
lock
and
sub
fmul
mov
mov
outs
inc
scas
fadd
cmp
push
arpl
cmp
cmp
fcmovu
cmp
ret
enter
jae
adc
loop
push
cmp
inc
jmp
jl
cmps
inc
mov
mov
push
or
push
int3
and
dec
adc
push
jns
(bad)
mov
push
call
jle
jns
push
test
enter
sub
dec
mov
and
sbb
imul
sub
push
mov
mov
dec
fisttp
neg
mov
pop
ins
push
xor
jb
adc
(bad)
ja
ja
pop
not
cmp
scas
mov
lock
sahf
jmp
add
cli
xchg
fistp
call
je
int3
in
fbld
xlat
xchg
mov
xchg
test
jae
outs
inc
fbld
push
das
das
test
pop
out
fadd
push
into
pop
(bad)
test
imul
and
cld
je
nop
xor
fldcw
sbb
adc
pop
ud0
in
retf
es
ror
pop
jle
mov
push
lea
je
rdmsr
bound
jns
outs
dec
sbb
xor
clc
test
dec
cwde
pop
(bad)
popa
push
mov
xor
push
out
inc
les
cmp
xchg
cwde
shr
les
pop
mov
xchg
pop
mov
(bad)
shr
push
and
dec
leave
popf
rsm
addr16
or
push
out
xor
lds
dec
sub
cmp
shl
jnp
retf
hlt
call
push
push
sbb
ds
out
ficomp
mov
outs
jle
xchg
or
sub
call
jl
dec
mov
jg
or
lods
xor
jno
test
pop
push
outs
test
or
and
lods
stc
cmpxchg
fld
jge
push
cmp
lea
adc
lods
fnsave
xchg
mov
sbb
pop
jne
(bad)
shl
jbe
mov
data16
mov
(bad)
int3
repnz
ret
ds
dec
stos
inc
mov
test
ficomp
jg
aaa
ins
cld
in
dec
jecxz
cmc
dec
loopne
jl
xchg
dec
adc
or
xor
std
mov
mov
and
mov
jns
and
mov
dec
movs
adc
pop
push
data16
inc
cwde
fild
sub
xor
fstp
and
jmp
and
cmp
lds
mov
adc
cmp
lock
fadd
test
dec
out
xor
xchg
xlat
or
and
sbb
jno
add
sub
mov
pop
cli
sar
add
jmp
mov
call
mov
jo
enter
inc
movs
inc
cli
push
ins
dec
inc
sub
pop
aad
xchg
mov
jmp
push
cmp
adc
dec
fs
push
test
ss
mul
jl
jno
scas
mov
xchg
add
push
add
ret
dec
cdq
clc
out
add
jecxz
mov
mov
sahf
xor
in
out
dec
push
push
or
ins
xor
jns
xchg
loopne
add
rcl
pop
es
imul
cmc
call
retf
mov
mov
ficom
data16
inc
rcl
push
xchg
jg
int
fiadd
mov
jns
mov
(bad)
xchg
mov
ror
iret
cdq
mov
mov
mov
enter
mov
shr
int
inc
mov
aad
ds
pop
fist
repz
scas
out
push
cli
dec
mov
sti
xor
outs
xchg
je
loop
xchg
les
dec
rol
jp
mov
in
pop
cmps
sbb
or
jmp
mov
mov
cwde
imul
cmp
dec
int
dec
push
jge
aad
aam
dec
push
enter
mov
jmp
idiv
mov
stos
jnp
stc
add
or
ret
fbld
pop
mov
out
jno
mov
pop
(bad)
inc
sahf
mov
or
cs
sub
or
call
(bad)
cwde
dec
pop
imul
cmp
push
push
pop
adc
cwde
aaa
add
push
imul
shl
sbb
lock
or
add
int3
xor
cmps
outs
stos
jo
jl
imul
shl
mov
push
in
cmp
jmp
ins
shr
retf
mov
je
or
mov
and
sub
cmp
mov
pop
cmp
out
aad
in
mov
push
leave
mov
sub
jns
xor
push
dec
sub
das
stos
pop
ficomp
mov
fwait
adc
sbb
ret
xor
rcl
jecxz
out
std
test
std
or
or
jg
loope
inc
call
mov
rol
jle
out
aam
sti
je
dec
into
or
inc
mov
jle
xlat
mov
xchg
scas
adc
mov
cmp
(bad)
(bad)
push
push
imul
dec
sbb
shr
ss
xchg
xchg
loopne
mov
in
dec
daa
test
inc
bound
ret
push
jle
cmps
inc
iret
call
dec
les
xchg
and
rol
mov
sub
add
lods
and
call
pushf
das
adc
and
sub
jl
retf
repnz
aam
pop
test
fs
push
cmp
mov
stc
push
push
loope
jp
push
es
(bad)
daa
shl
lea
inc
jmp
sbb
pop
ds
retf
mov
das
(bad)
xor
imul
aam
pop
inc
adc
mov
or
xor
adc
in
or
scas
and
add
jp
fwait
dec
(bad)
test
scas
sahf
iret
in
pop
sub
jb
sbb
mov
lods
mov
jg
sub
scas
aad
lods
cmp
inc
clc
fsubrp
std
iret
setnp
out
push
sahf
mov
sbb
xchg
das
add
pop
xor
bound
lock
cmp
outs
and
cld
rcl
icebp
push
shr
test
inc
jecxz
cmp
push
mov
imul
dec
dec
ret
jge
mov
inc
pop
xchg
mov
jmp
cld
test
ror
iret
or
inc
movs
mov
es
add
jge
mov
sbb
fld
retf
add
or
cwde
cmp
rcl
es
cwde
sar
xor
dec
and
sar
in
mov
sub
ins
jle
xchg
pop
mov
inc
push
cmp
mov
inc
inc
push
push
sub
push
jmp
jp
mov
jl
call
sbb
mov
stos
test
mov
sub
pop
(bad)
rcr
mov
mov
xchg
or
je
push
out
mov
lahf
outs
nop
xchg
gs
xor
test
add
mov
int3
lods
add
inc
fbld
jp
shr
fld
push
fucomi
sbb
shr
xor
iret
loope
xor
jle
std
or
inc
mov
ss
inc
mov
cli
sbb
(bad)
call
pop
xor
xor
lods
jne
adc
xchg
jmp
scas
rcr
arpl
sahf
shl
das
sub
sub
cmc
js
repnz
jl
jo
mov
movs
sbb
mov
mov
cmp
aaa
mov
dec
lock
daa
or
push
out
sub
cmc
or
sti
ret
jge
cld
or
mov
mov
test
push
int
mov
inc
gs
jb
pusha
cmp
xchg
test
jecxz
mov
xchg
inc
mov
sub
inc
pusha
lods
(bad)
and
mov
and
(bad)
push
and
or
jb
shl
mov
enter
leave
jecxz
repz
lods
es
pop
cmps
ret
push
inc
daa
inc
shr
xor
in
ja
ret
xchg
inc
push
or
jb
out
std
inc
cmp
xor
mov
mov
inc
sahf
dec
das
jns
ds
loope
inc
push
mov
into
pop
fistp
bound
imul
inc
hlt
mov
es
or
bound
rol
ja
sub
jno
push
cmp
push
mov
inc
jmp
jns
sbb
mov
lahf
mov
and
mov
push
adc
pop
push
lds
jno
mov
das
nop
push
dec
retf
and
cmp
not
mov
(bad)
int
push
lods
sub
shl
mov
int3
xor
or
pop
pop
adc
call
repnz
mov
pop
jge
xchg
jo
push
cmp
mov
int
adc
pop
adc
inc
retf
into
fwait
add
push
fwait
(bad)
push
loopne
adc
ret
scas
push
rol
sub
sbb
mov
(bad)
stc
pop
and
xor
ins
mov
inc
push
sub
mov
mov
mov
(bad)
fucomi
sbb
div
and
rcr
sub
pop
and
(bad)
sbb
inc
mov
or
je
cmp
imul
and
pushf
sbb
test
xchg
ret
mov
ins
sbb
div
xor
ror
cmp
cmps
push
scas
jae
push
mov
lods
scas
repz
shl
dec
das
mov
mov
mov
xor
mov
shr
ret
add
gs
xlat
adc
nop
stos
cmc
scas
repnz
mov
out
mov
jl
out
push
and
add
std
dec
fwait
xchg
retf
and
inc
mov
jg
push
jecxz
stos
mov
push
lahf
xor
cmp
lock
pop
or
mov
fstp
call
adc
or
mov
rol
cwde
xchg
inc
sub
push
pop
shr
add
out
and
repz
out
push
fs
or
inc
push
outs
ds
cwde
sub
int
iret
stc
(bad)
xor
dec
or
sar
retf
push
sahf
jg
cmp
fadd
sub
call
dec
hlt
mov
pop
adc
xor
add
(bad)
dec
shl
jbe
add
popf
add
xor
cmp
cmp
(bad)
fsubr
dec
jmp
inc
jae
or
mov
push
add
cwde
clc
xor
mov
aaa
push
pop
or
outs
ds
enter
(bad)
inc
jbe
shl
scas
push
cmp
popa
cmps
(bad)
ja
mov
retf
jmp
xor
push
or
fsub
sahf
popa
call
not
mov
ss
cdq
sub
cmc
test
into
bound
je
jmp
jmp
sti
pusha
xor
push
inc
mov
sbb
loope
and
data16
daa
out
mov
fnstcw
stc
push
mov
cmp
shl
inc
sub
sbb
es
mov
data16
pop
sub
rol
cmps
loopne
data16
dec
inc
std
(bad)
fistp
stc
fist
outs
jb
not
call
mov
mov
shl
ins
mov
jbe
and
ret
mov
jae
out
mov
inc
lahf
(bad)
sub
sar
or
fucom
and
addr16
sub
popf
add
jge
add
js
test
inc
shl
outs
scas
or
jo
cmp
sub
mov
mov
push
push
dec
mov
jb
movs
push
iret
icebp
scas
loop
pop
jb
adc
pop
movs
mov
sub
jb
pop
xor
dec
lock
mov
loopne
lahf
xor
and
jmp
(bad)
ret
scas
pushf
in
ss
jmp
out
and
scas
daa
imul
mov
rol
scas
mov
mov
shl
mov
stc
in
mov
movs
gs
xlat
cwde
out
mov
(bad)
cmp
adc
fcom
add
(bad)
cmp
push
stc
outs
dec
daa
(bad)
cmp
pop
mov
push
inc
sub
xchg
mov
int3
in
mul
out
dec
xor
sbb
cwde
xchg
xchg
(bad)
mov
pop
rcr
sbb
pop
xor
fadd
sub
cmp
jge
cld
or
out
and
pop
scas
jl
push
test
ins
add
aam
test
mov
pusha
rcl
lods
sbb
retf
dec
jmp
dec
push
pop
lods
pop
jmp
aas
sub
test
ss
xchg
adc
in
pop
addr16
ins
add
xchg
dec
stc
pop
cmp
jno
test
cs
sub
mov
mov
dec
lahf
addr16
mov
mov
mov
and
xor
jp
lds
xor
in
dec
call
loope
xor
dec
xchg
mov
jmp
pop
add
int3
xlat
aad
shl
sbb
xchg
mov
aaa
pop
fsub
dec
sar
add
sar
ins
and
push
mov
jbe
nop
xor
(bad)
loopne
pusha
lods
jo
aas
stos
loop
and
xchg
push
adc
test
sbb
lea
pop
daa
sub
test
or
cld
and
ret
leave
or
leave
bound
and
push
(bad)
jmp
jp
test
mov
adc
mov
pushf
fld
sub
mov
loop
iret
cli
das
popa
shl
mov
jns
adc
mov
sub
mov
xchg
mov
out
add
rcl
js
lahf
fdiv
fcmovne
in
dec
dec
mov
int3
aaa
lds
adc
xchg
mov
sbb
jle
aam
pop
mov
popf
in
stos
inc
jmp
and
mov
fld
and
mov
cmp
cs
adc
mov
pop
sub
loop
and
pop
mov
cli
arpl
lahf
and
cmps
leave
ins
repnz
mov
xchg
fcomp
in
xor
leave
retf
sbb
push
or
jbe
xlat
xchg
cld
loopne
adc
dec
out
icebp
dec
xchg
shl
ins
mov
leave
loope
xor
xlat
cs
idiv
add
push
sbb
data16
popa
dec
out
sbb
daa
lahf
jmp
pop
fs
jnp
jmp
les
or
sub
retf
outs
ins
icebp
ds
inc
xor
sub
or
fsub
mov
cmp
and
cwde
jge
arpl
or
in
ins
shl
adc
pop
imul
xchg
adc
rcl
lahf
addr16
push
iret
cmp
imul
std
pop
repnz
xor
cmps
bnd
push
out
inc
ror
adc
in
into
sub
sub
mov
ss
retf
cs
(bad)
pop
lods
or
mov
dec
push
rcl
inc
mov
dec
push
and
xor
and
jb
sub
jmp
je
hlt
push
mov
sub
add
adc
sub
ins
xchg
leave
out
rcl
xlat
push
popf
push
lea
(bad)
into
push
imul
jbe
or
dec
lods
cld
mov
nop
mul
in
and
jp
fsubr
bound
cli
push
(bad)
or
movaps
frstor
int3
push
dec
cmp
(bad)
movs
pop
outs
fwait
mov
clc
xchg
pop
cmp
out
xor
cli
push
inc
(bad)
pop
jmp
stos
shr
fcom
(bad)
(bad)
sbb
loopne
pop
jnp
cmps
(bad)
mov
xor
cmp
adc
hlt
pop
jmp
or
movs
in
xchg
mov
lods
add
mov
or
mov
mov
sti
push
jmp
fs
jp
rcr
dec
jg
in
gs
add
fadd
aaa
fisttp
fs
out
scas
cmp
or
pop
xor
ror
dec
jmp
mov
jnp
test
and
sub
add
xchg
mov
dec
dec
xlat
mov
(bad)
in
in
std
bound
push
sar
sbb
repnz
add
popa
stos
and
push
jecxz
lahf
fistp
push
movs
out
sahf
mov
aad
mov
rol
loop
jecxz
push
xchg
(bad)
fisubr
sub
es
iret
in
inc
sub
in
out
ins
fcom
sub
sub
lea
sbb
mov
mov
aaa
int
in
ds
adc
je
test
movs
cmc
mov
mov
pop
(bad)
xchg
cmps
leave
mov
leave
pop
sbb
push
jp
cmps
ret
into
push
xor
mov
sub
test
mov
push
loope
(bad)
mov
test
jmp
push
or
pop
ins
sbb
repz
mov
push
adc
sbb
scas
sbb
dec
push
int3
jmp
icebp
or
js
and
retf
mov
loop
nop
xchg
adc
call
adc
stos
out
pop
push
cmp
leave
or
retf
es
movs
jb
xchg
sub
mov
jecxz
adc
pop
test
sub
ins
repnz
mov
ins
lds
push
inc
jno
mov
aaa
mov
rol
push
daa
and
ficomp
loope
jmp
push
mov
out
ds
add
or
jae
sti
pop
inc
sbb
inc
enter
fwait
aas
push
jbe
ror
rcr
xchg
sbb
cmp
mov
sbb
push
hlt
test
and
pushf
test
add
push
mov
or
les
fild
sbb
ins
dec
cmp
lock
aas
sbb
jecxz
test
out
fmulp
in
test
stos
ins
scas
shl
or
add
sar
or
fldenv
inc
daa
jge
movs
and
dec
mov
mov
test
xchg
ficom
and
fwait
push
stos
(bad)
shl
add
(bad)
loopne
std
aam
(bad)
cmps
pop
ss
clc
call
fistp
test
shr
mov
mov
repz
dec
push
cwde
iret
les
pop
and
cmps
in
loop
scas
sbb
inc
loop
test
mov
jmp
push
xchg
xchg
out
mov
not
or
or
clc
add
or
mov
mov
idiv
cwde
mov
xor
inc
stc
stos
aaa
cld
mov
mov
mov
cmc
pop
push
stc
inc
sub
rcl
outs
xor
out
sar
iret
cmp
or
push
mov
mov
xchg
cwde
(bad)
jg
mov
add
and
leave
enter
adc
fist
fimul
pop
lahf
inc
test
or
cmp
pop
xor
cmp
mov
es
jle
aas
pop
ror
dec
daa
test
out
cli
push
retf
mov
pop
rol
pop
mov
addr16
add
clc
mov
lock
(bad)
pop
mov
xor
and
xor
fstp
cli
sub
(bad)
popf
rol
ins
xor
inc
(bad)
lods
sbb
dec
xor
pop
loope
daa
sbb
sub
mov
inc
outs
in
add
xlat
and
mov
scas
xchg
pushw
jl
in
xor
inc
out
xchg
fdiv
adc
xor
shl
popa
(bad)
pushf
pop
arpl
mov
(bad)
xchg
cmp
jmp
lea
push
cld
mov
fs
jnp
in
pop
ja
imul
movs
test
mov
lahf
xor
sbb
mov
add
js
or
lds
adc
das
dec
mov
cwde
pop
leave
pop
movs
or
scas
adc
leave
(bad)
out
fimul
lods
mov
pop
xchg
push
and
mov
add
sysexit
or
shl
dec
repz
pop
and
mov
movs
inc
xchg
fisubr
inc
repz
mov
stc
(bad)
push
mov
sub
push
xor
popa
sub
and
dec
mov
dec
daa
(bad)
xchg
mov
test
nop
test
in
in
fstp
js
lods
add
in
dec
je
sbb
fcom
sub
mov
xchg
jp
mov
inc
js
xchg
stos
xchg
out
(bad)
stos
sbb
mov
stos
jbe
cs
sti
aaa
rol
jne
sar
pop
in
and
xchg
or
inc
lods
cli
xlat
or
cmp
adc
iret
bound
fsubr
(bad)
fcmove
dec
sub
adc
cli
mov
and
(bad)
imul
xchg
push
ret
shr
in
out
mov
and
xor
jns
push
mov
inc
fwait
cmp
mov
call
mov
sub
idiv
mov
test
lahf
retf
push
das
repz
add
lds
mov
pop
cli
jmp
cmp
fiadd
push
sbb
sbb
in
(bad)
mov
(bad)
leave
enter
inc
sub
mov
mov
add
cwde
je
mov
ds
push
mov
mov
push
and
jmp
ja
pushf
dec
mov
jmp
push
test
frstor
jo
mov
adc
rol
pop
loopne
push
push
mov
add
les
sub
xor
into
jbe
xchg
mov
add
stos
mov
dec
push
and
jg
call
add
dec
jl
cmp
xor
test
dec
jo
rcl
fbstp
or
out
dec
cmp
lds
psadbw
jb
ret
bound
mov
mov
cmp
sub
add
stos
pop
mov
inc
pop
jmp
sub
fbstp
mov
xchg
dec
loop
mov
inc
jmp
bnd
fst
add
stc
repnz
add
mov
adc
ret
add
lds
lods
and
in
pop
sub
cmp
xchg
sbb
xchg
pop
inc
ficomp
sub
jmp
mov
xchg
sub
push
cmps
pop
push
push
stos
cdq
xor
pop
sub
and
or
sbb
fld
(bad)
jns
cmps
jmp
ret
mov
fwait
ret
retf
fisubr
inc
outs
fld
jae
lds
pop
jp
cmp
add
xor
sub
ds
adc
cmp
or
dec
call
xchg
xlat
ja
movs
and
xor
call
pop
(bad)
push
test
gs
mov
(bad)
mov
outs
dec
fsubr
pop
enter
and
mov
sub
jbe
ror
popf
scas
jno
adc
push
test
lahf
es
out
xor
or
xor
aad
loop
repnz
pop
das
cdq
fwait
jecxz
push
inc
sub
jmp
adc
cld
push
inc
cmp
scas
cmps
mov
mov
bound
adc
pop
outs
jg
and
mov
jge
sbb
dec
mov
sbb
adc
(bad)
pushw
leave
adc
dec
and
jge
in
or
add
adc
leave
inc
retf
jne
loope
jecxz
loope
jno
mov
jo
dec
push
add
mov
jo
mov
call
push
fldcw
inc
js
fcom
test
inc
outs
xor
pop
pop
stos
retf
je
pop
std
xor
enter
ficom
or
and
es
fisttp
add
shl
mov
mov
mov
hlt
pop
repz
mov
pop
cmp
into
xor
xchg
jmp
pop
jnp
push
sub
sti
jge
cmc
mov
xor
stos
push
xchg
push
pop
dec
jge
movs
in
call
jae
(bad)
call
cmps
xlat
adc
retf
sub
xchg
addr16
sub
add
loope
aaa
push
(bad)
int3
sar
movs
sbb
(bad)
fimul
out
retf
sbb
jne
sbb
ret
sar
cmp
adc
popa
mov
push
dec
sbb
pop
test
xchg
cld
xchg
mov
dec
sar
mov
iret
push
ret
in
inc
adc
stos
and
aad
or
sbb
mov
mov
test
xlat
arpl
and
push
xchg
cld
stos
retf
pop
int
sub
xchg
jl
(bad)
xor
jns
push
lahf
jmp
xchg
mov
movs
xor
adc
shr
cmp
movs
mov
cdq
or
mov
loopne
rcl
mov
int3
out
cmps
xor
stc
leave
jo
popa
js
jle
outs
stc
aad
outs
test
mov
out
out
push
push
jmp
jb
out
cmp
sub
fist
int
ins
jns
mov
xchg
and
test
mov
mov
test
mov
and
jecxz
mov
inc
lahf
int3
push
(bad)
out
dec
stos
mov
ret
das
add
sub
pop
push
lahf
mov
or
inc
xchg
jge
jno
jle
push
repnz
sub
movs
xor
pop
daa
cmp
pop
shl
cmc
icebp
inc
inc
xor
push
add
or
scas
push
cs
mov
scas
(bad)
les
outs
cs
nop
xor
aas
(bad)
cmp
es
or
jno
pop
ror
test
sbb
pop
lock
aam
push
jmp
xchg
addr16
pushf
fdiv
cmp
dec
ror
mov
aad
in
adc
add
jae
pop
enter
leave
mov
or
inc
leave
and
(bad)
fisubr
fcomi
jl
jb
mov
int
aad
xchg
ss
sbb
mov
lea
scas
xchg
pop
mov
add
ins
jnp
cmps
sub
jbe
or
mov
cmp
push
test
inc
test
push
inc
jge
cmps
inc
xchg
add
(bad)
pusha
ins
not
mov
jp
and
je
sahf
gs
(bad)
loope
cmps
pop
mov
fisttp
sar
push
xor
and
pop
or
sub
movs
imul
and
rcr
lds
test
outs
lds
and
imul
jmp
call
ds
sbb
mov
out
mov
inc
inc
dec
fld
imul
out
cmovns
push
loop
in
xor
aas
adc
jmp
pop
sbb
jbe
push
mov
scas
sub
sub
lds
jmp
mov
rol
data16
sub
aad
fdivr
iret
and
sbb
dec
push
in
cwde
bound
fild
push
inc
mov
inc
xor
adc
iret
or
push
or
pop
cmps
mov
in
sub
push
xlat
js
pop
test
jle
pop
jp
inc
xchg
test
and
ja
fucomp
xchg
jb
ins
call
repnz
cmps
sbb
sbb
jns
xor
into
mov
movs
aas
fnstenv
loopne
sub
inc
jmp
adc
hlt
gs
aad
outs
xor
repnz
push
dec
scas
les
or
or
dec
mov
cwde
or
jl
in
fnsave
(bad)
fiadd
jbe
pop
mov
mov
xchg
mov
jp
xor
and
or
movs
dec
dec
xchg
xor
add
mov
dec
xchg
xor
test
mov
or
or
call
iret
or
mov
les
lods
push
ficomp
leave
push
clc
adc
push
add
inc
mov
inc
add
mov
loope
inc
add
adc
xchg
cmps
jmp
jge
mov
push
jne
sbb
xor
repnz
fcom
dec
mov
fcomp
mov
pop
push
cs
inc
pop
jae
sbb
(bad)
inc
jge
cmp
mov
out
adc
inc
and
jo
jl
sub
push
xchg
inc
and
icebp
cmp
iret
outs
mov
jae
sub
xchg
shl
adc
add
lea
pop
mov
dec
xor
push
fdivr
mov
jnp
pusha
cwde
pop
pop
popa
imul
fstp
pop
ins
cmc
mov
cwde
mov
xchg
pop
push
sub
mov
mov
mov
inc
(bad)
mov
jmp
and
jo
int
mov
sub
in
mov
inc
icebp
movs
ret
mov
call
clc
mov
popf
leave
sbb
repnz
xchg
mov
pop
xchg
mov
outs
jbe
or
and
adc
es
call
mov
mov
aam
pop
sub
imul
imul
cmp
test
inc
sub
icebp
cld
and
pop
push
or
jbe
adc
gs
dec
jae
dec
jae
das
ret
jb
add
shr
mov
jge
push
cmp
xchg
(bad)
dec
ss
cmps
gs
inc
mov
mov
scas
push
data16
out
mov
mov
adc
push
push
jo
addr16
adc
mov
lahf
pop
cli
retf
inc
fdiv
lock
sub
jb
inc
and
xor
sbb
mov
int3
jmp
popf
jp
xchg
sahf
inc
sbb
sti
stc
fs
addr16
imul
sbb
inc
and
loop
leave
fild
(bad)
imul
mov
or
cli
outs
sti
mov
mov
and
imul
fs
js
lea
push
shl
pop
xchg
or
sub
int
mov
sahf
jae
push
loop
lods
retf
icebp
and
adc
inc
out
lods
jns
into
shr
cmp
aad
jae
popf
call
stos
lods
leave
add
fnstenv
dec
jns
aad
test
push
adc
test
sub
in
clc
mov
jns
dec
push
or
shl
cli
hlt
les
pop
call
cmp
loopne
mov
mov
jae
mov
pop
and
dec
out
pop
repz
adc
fild
fs
in
add
loopne
imul
and
xor
xor
clc
(bad)
ficom
mov
call
in
mov
outs
xchg
dec
and
sub
mov
add
jno
sbb
jge
fisubr
cmp
inc
sub
push
and
addr16
pop
pop
xchg
das
adc
cmp
popf
cmp
fisub
xchg
cmp
and
lods
sbb
pop
dec
aam
jo
call
or
into
sub
inc
adc
test
cmp
shl
je
dec
ret
enter
mov
mov
inc
sbb
mov
fs
fdivr
or
jnp
stc
scas
mov
iret
arpl
icebp
sub
and
inc
dec
lods
mov
mov
and
pushf
add
mov
(bad)
mov
xor
test
sbb
mov
repnz
jne
or
mov
(bad)
mov
icebp
pop
pop
mov
outs
dec
pop
inc
cmp
cli
and
out
stos
test
mov
sbb
dec
dec
int3
cld
adc
ins
jge
sahf
cld
movs
inc
cmp
cmc
xchg
ins
dec
out
sti
fcmovnu
bound
xchg
inc
fisubr
sub
fisubr
push
stos
pop
out
repnz
aaa
into
pop
mov
lods
fnstenv
mov
lods
mov
dec
push
stc
aad
ja
xor
test
push
pop
jg
xor
jge
lods
or
arpl
sub
add
sub
pusha
mov
and
cwde
das
mov
jo
jnp
cmp
inc
dec
xor
push
inc
stos
test
jp
mov
mov
mov
clc
bound
test
xchg
bound
icebp
xor
mov
enter
inc
push
bound
aam
dec
out
jb
push
jp
push
fisub
fdiv
in
inc
jg
add
shl
adc
push
xchg
push
pop
push
lds
xor
push
(bad)
dec
jno
mov
and
pop
sbb
sbb
fwait
call
pop
icebp
cmp
ins
inc
aas
push
ror
jle
jle
mov
data16
mov
sbb
sti
or
ds
aas
call
inc
rcr
(bad)
sbb
xchg
pop
mov
or
mov
es
test
ret
bound
mov
out
ficomp
je
pop
pop
xchg
cwde
sub
shl
daa
mov
ins
mov
cmp
mov
xor
in
xchg
jmp
dec
mov
and
into
mov
or
add
sub
xchg
jne
fs
push
or
pop
xor
jmp
rcr
rol
sbb
les
mov
retf
(bad)
aad
and
div
and
and
pop
adc
(bad)
retf
daa
(bad)
ror
lods
cwde
xor
or
push
pop
in
sahf
nop
dec
sub
or
jg
dec
ficom
xchg
mov
xchg
sbb
jmp
inc
adc
sub
arpl
daa
sbb
push
popf
imul
cmc
sub
es
sub
xchg
xchg
cs
test
cli
retf
cdq
add
out
and
mov
push
fbstp
jne
dec
dec
ret
jbe
mov
pop
ds
or
or
adc
in
cmps
mov
out
lds
shr
jbe
test
pushf
mov
shl
int3
xchg
sub
pop
(bad)
sub
stc
into
push
aas
in
sub
cmp
jl
fst
imul
mov
pop
dec
push
xchg
out
jle
in
dec
adc
fsub
dec
add
xchg
xchg
mov
scas
pop
lock
jnp
pop
sub
cli
sub
jo
xor
jno
ja
aam
xchg
mov
test
mov
loope
or
out
mov
sbb
sbb
jns
sbb
out
inc
cdq
int
inc
push
or
ret
fimul
outs
sbb
sbb
out
jle
fs
scas
pop
dec
sbb
add
dec
retf
push
jmp
xchg
and
pop
ror
mov
cmp
add
push
idiv
dec
sub
fwait
push
inc
pop
add
(bad)
sbb
pushf
outs
pop
push
inc
jmp
pop
cs
sbb
test
xlat
adc
scas
xlat
out
mov
loopne
push
popf
sub
adc
not
jle
loopne
lods
sbb
int3
test
jl
mov
dec
pop
adc
adc
or
mov
xchg
sub
push
push
inc
push
(bad)
and
dec
xor
nop
js
xor
mov
dec
jns
iret
mov
in
(bad)
rol
(bad)
xlat
loop
lds
sbb
mov
loopne
cmp
push
jno
test
js
rcl
lods
mov
ins
pop
adc
arpl
sub
mov
adc
cmps
sub
stos
mov
es
mov
ret
stos
mov
(bad)
cld
sbb
mov
pop
ss
sub
dec
cmp
das
retf
mov
mov
jge
sti
add
mov
cld
data16
mov
and
movs
scas
cmp
fwait
in
leave
mov
ja
and
out
sub
mov
mov
adc
or
xor
sbb
add
popf
xor
push
mov
pop
inc
mov
jae
aad
jp
div
pop
div
cmp
ret
cmp
js
cmps
xchg
or
add
pop
leave
clc
std
popa
push
inc
repnz
aam
xchg
std
(bad)
fmul
sub
jb
push
int3
call
xchg
shl
in
gs
dec
xchg
cld
fs
dec
xchg
stos
imul
cmc
xchg
and
shl
mov
add
fld
into
sbb
gs
arpl
and
mov
jmp
mov
push
sbb
mov
outs
das
ds
pop
inc
adc
mov
dec
fwait
cdq
lahf
aas
test
lahf
es
aaa
dec
add
das
(bad)
ds
jle
push
in
cs
sbb
jno
std
loopne
jae
jo
sub
mov
xchg
fwait
scas
rcr
outs
push
fadd
cmp
fsubr
lods
jge
mov
add
mov
push
scas
add
fadd
xor
adc
pop
lea
or
adc
xchg
add
jo
sahf
mov
and
sbb
jae
ror
cmc
mov
(bad)
xchg
push
xchg
sahf
in
lods
mov
ret
ins
imul
jecxz
hlt
and
sahf
mov
scas
or
popa
adc
imul
pushf
pusha
test
add
gs
add
in
xor
push
inc
leave
lods
movs
ds
and
xor
test
lea
pop
pop
fdivr
in
fldcw
stos
fstp
outs
mov
cld
sbb
stc
sbb
dec
(bad)
inc
dec
sbb
jo
outs
cmp
rcr
xor
inc
out
dec
jmp
and
push
(bad)
lea
pop
out
scas
ins
jl
cmp
aas
or
repnz
shl
mov
pop
and
sbb
repnz
add
mov
mov
mov
cwde
adc
loopne
xlat
sar
pusha
pop
pop
dec
pop
pop
shl
fisubr
adc
dec
pop
mov
outs
jge
cmp
enter
mov
or
push
inc
mov
(bad)
call
ss
inc
inc
sub
mov
cmps
sub
mov
adc
pop
sub
push
pusha
mov
jmp
clc
retf
in
xor
lahf
mov
scas
jp
adc
out
test
fisub
shl
add
jmp
cmc
sbb
sbb
daa
scas
rol
mov
fsubr
jecxz
sub
jno
in
or
and
cmp
out
fild
js
inc
clc
push
jb
or
frstor
fdivr
movs
iret
cmps
mov
xor
and
aad
(bad)
shl
mov
push
jl
lahf
loope
test
add
xor
retf
push
xor
enter
(bad)
retf
or
jg
bound
arpl
jno
hlt
xor
call
sbb
ins
add
dec
aad
dec
(bad)
ins
mov
cmp
fiadd
repnz
pop
fsubr
sar
les
fsub
aam
push
fcmovnb
mov
fidiv
xlat
add
aas
jg
push
lods
and
int
push
shl
mov
xchg
inc
pop
in
mov
in
dec
mov
mov
call
out
or
and
fs
mov
xchg
ret
or
pop
addr16
mov
ficomp
inc
aam
push
xchg
adc
xor
stc
xor
inc
jmp
xchg
cmps
xchg
aam
mov
mov
mov
push
outs
imul
imul
je
cli
addr16
in
mov
ror
sbb
jp
into
aam
or
movs
movaps
adc
clc
stos
in
push
mov
ficomp
add
sub
mov
push
pop
add
lods
mov
push
adc
sub
(bad)
dec
push
sub
adc
jecxz
jmp
loopne
pop
jmp
push
jge
or
mov
sub
cmp
mov
repz
nop
fldenv
imul
cmp
fistp
cmc
inc
add
jecxz
into
sub
fmul
inc
cmp
adc
jbe
or
mov
dec
pushf
fidivr
enter
ret
inc
mov
fidivr
lahf
jns
ds
stos
ins
cmc
mov
rcl
push
push
adc
cmp
push
mov
push
mov
mov
xor
sti
lahf
imul
dec
fucomip
pushf
jmp
and
out
in
jmp
xor
fwait
add
pop
popa
lods
pop
loope
adc
mov
ret
fist
adc
mov
push
aaa
and
dec
rep
inc
cmp
cmc
sbb
add
clc
jbe
sbb
inc
xor
jmp
(bad)
sub
jecxz
mov
jnp
dec
cmp
sbb
jb
stos
push
out
hlt
mov
retf
sub
call
adc
pop
xchg
(bad)
cmps
cmp
popf
shl
xchg
mov
ss
popf
(bad)
into
bound
mov
sbb
cld
pop
sahf
mov
ins
cmp
loope
arpl
int
fstp
inc
cld
std
cmc
xchg
leave
cli
test
ins
das
and
adc
or
retf
cmps
ds
stos
outs
pop
cmc
test
hlt
dec
int
test
pop
ror
getsec
outs
in
or
mov
fsubr
inc
pop
nop
sbb
xchg
lahf
je
rcr
pop
outs
xchg
adc
or
mov
jbe
cmp
in
out
push
mov
xchg
test
rcl
aaa
xor
out
and
(bad)
ins
push
jecxz
test
mov
cmps
jb
loop
pop
arpl
cmp
cld
fstp
jmp
jo
mov
stc
lahf
adc
push
inc
nop
mov
fwait
mov
add
neg
jge
movs
mov
fstp
call
test
shr
lea
out
cld
sbb
add
dec
xchg
outs
dec
jmp
push
test
push
rcr
mov
push
addr16
adc
popf
fnstcw
pushf
fs
(bad)
and
fs
or
in
fbstp
sbb
stc
add
adc
imul
push
xor
repz
ds
sub
push
or
sub
xor
(bad)
lds
pop
cmps
sbb
daa
out
test
stc
sbb
adc
imul
push
enter
push
push
retf
data16
xchg
in
je
ja
sub
ss
shl
lods
pop
ret
sahf
cmp
xchg
mov
(bad)
enter
adc
hlt
fsub
int3
aaa
jmp
sub
jns
les
jne
add
dec
fucomp
lock
cmp
mov
gs
xchg
pop
jmp
sub
hlt
fsub
cdq
lock
inc
mov
sub
inc
les
sub
hlt
nop
add
and
xchg
lods
mov
out
push
fist
jmp
push
xchg
xchg
push
pop
mov
add
push
movs
jbe
cdq
and
std
jg
jge
mov
mov
pop
pop
inc
xchg
cmp
retf
gs
xchg
xchg
jp
dec
jmp
mov
sbb
popa
in
test
add
stos
mov
(bad)
fwait
push
cmp
(bad)
cmps
fsubr
add
adc
(bad)
leave
mov
cmp
or
jmp
(bad)
mov
daa
xor
cmp
push
in
test
test
pop
sbb
lock
inc
clc
enter
push
and
and
pop
xchg
push
jl
jno
jne
mov
xchg
cwde
push
cli
jne
and
cdq
sbb
rcr
xchg
add
fmul
test
shl
jmp
retf
jne
pop
push
es
in
add
ins
push
dec
sahf
xor
xor
inc
icebp
inc
dec
push
outs
add
sti
xchg
cmp
xchg
loope
pop
mov
lea
or
push
xchg
lock
or
pop
mov
aad
fld
sub
popa
push
dec
ss
inc
imul
gs
mov
add
int3
(bad)
xchg
jge
repnz
pop
fild
add
xor
les
int
fcmovne
loop
outs
sbb
std
(bad)
sbb
dec
les
and
int3
and
mov
dec
fisttp
pop
sbb
mov
mov
adc
sbb
jg
ret
add
add
fdivr
test
jl
jno
std
pop
test
push
xor
enter
cs
fidivr
sbb
ds
jae
stos
cmp
cmp
icebp
popf
mov
pop
mov
adc
out
sbb
adc
pop
je
scas
sub
mov
adc
lahf
arpl
fwait
mov
pop
ja
sbb
mov
sahf
jg
mov
pop
idiv
lea
sbb
aaa
xchg
sub
pop
cmp
xor
imul
mov
test
and
loope
pop
dec
ret
dec
push
push
sub
inc
cmp
mov
xchg
inc
outs
lds
int3
mov
xor
call
fsubr
retf
aam
pop
cmp
cmc
cmp
jmp
cmp
cmp
add
push
jne
shr
jle
jecxz
xchg
mov
xlat
sub
lds
add
dec
stos
repz
jmp
xor
clc
dec
hlt
sar
sub
jb
xor
iret
shl
test
mov
mov
and
ret
mov
cdq
mov
mov
lods
bound
jae
inc
adc
sbb
(bad)
nop
lds
pop
jno
mov
inc
mov
or
mov
call
lahf
outs
or
out
inc
out
sahf
test
nop
adc
out
pop
cs
ins
pop
iret
inc
les
mov
mov
les
pop
and
jmp
lods
dec
icebp
pop
and
xor
xor
push
lods
xchg
and
shr
xor
push
mov
sahf
xor
xchg
mov
rcl
sbb
mov
pop
test
rcr
cmp
cmp
adc
mov
sbb
add
mov
daa
mov
fmul
dec
shl
mov
cmp
cmp
ins
(bad)
outs
and
cmp
cmc
add
out
ins
mov
ret
lods
push
scas
cli
cmp
mov
mov
and
sub
shr
clc
out
gs
cmps
test
xlat
inc
out
xchg
repnz
mov
push
movs
retf
and
xor
fs
xchg
mov
push
mov
mov
sub
sbb
enter
aam
adc
test
cmps
xchg
xor
dec
and
jp
sub
jle
ja
adc
mov
outs
add
sbb
call
ret
xor
mul
cmp
outs
or
mov
xchg
jnp
sub
out
xor
pushf
loopne
and
pusha
mov
scas
mov
cld
jb
sbb
sub
add
cwde
and
mov
jecxz
ret
xchg
fwait
xchg
inc
es
gs
jp
sbb
dec
mov
xchg
lods
jnp
or
sar
xchg
in
push
or
inc
fidivr
repz
mov
pusha
retf
mov
sbb
adc
mov
xor
popa
outs
push
scas
gs
adc
xchg
push
imul
cmp
or
adc
adc
pusha
and
and
hlt
fbld
pop
add
sub
jns
jnp
sub
sub
cli
int3
cmp
clc
mov
xchg
dec
in
jae
inc
jne
loop
mov
and
int
not
mov
iret
out
test
xchg
inc
mov
jne
ss
cli
(bad)
dec
ins
pusha
retf
mov
xchg
xor
jmp
sahf
aas
mov
jno
push
fistp
mov
jb
pop
mov
or
sub
repz
lods
shr
or
sub
pop
sub
ficom
cmp
lock
xor
movs
mov
sbb
fisttp
lahf
xchg
mov
das
out
pop
push
sub
pushf
ret
xchg
jo
sbb
jns
push
dec
loopne
mov
dec
daa
inc
mov
pop
mov
mov
fs
and
dec
jae
aam
scas
cmp
ss
inc
xchg
neg
inc
ss
hlt
leave
js
pop
in
cmp
jo
mov
dec
mov
scas
pop
xor
and
add
gs
dec
jge
fstp
xor
xor
cwde
mov
shr
mov
icebp
push
mov
and
mov
jl
push
sti
test
sub
shr
into
push
in
jns
enter
das
cmp
jo
push
out
xor
mov
xchg
push
pop
push
pop
adc
cmp
rol
lock
push
inc
xchg
inc
out
scas
and
jne
ins
xchg
outs
stos
cmp
in
add
bound
aas
arpl
jmp
and
mov
hlt
mov
jmp
mov
inc
loope
(bad)
mov
sub
push
pusha
jge
fnstsw
in
adc
xor
pushf
loopne
rol
xchg
in
sub
push
rcr
out
nop
(bad)
outs
jns
loope
sbb
push
adc
rcl
(bad)
popf
cmp
adc
pop
ss
shr
mov
fmul
shr
int
mov
jmp
data16
mov
loope
call
jno
ret
xchg
sub
inc
fistp
pop
stos
sbb
adc
sbb
jecxz
sahf
or
in
int
movs
imul
sar
sbb
sbb
and
sbb
lea
fwait
jae
xchg
test
es
adc
xor
adc
ficomp
out
add
cld
int3
(bad)
aaa
mov
rol
cld
mov
push
adc
dec
arpl
aad
dec
sbb
mov
bound
pop
icebp
pushf
inc
cmp
dec
add
xor
cmps
xor
add
add
add
cmp
aad
std
cmps
fldcw
push
and
repnz
sbb
stos
stos
ss
inc
lods
pushf
jo
mov
inc
fadd
icebp
jno
cmp
lea
jb
mov
jge
test
jbe
jb
call
cmps
add
inc
mov
adc
cld
xchg
push
scas
or
jl
scas
outs
adc
adc
sti
repnz
dec
cli
repz
fcmovne
jecxz
pop
add
lods
bound
out
mov
imul
movs
sbb
sbb
jb
stos
pop
data16
push
and
ins
jno
cs
jg
or
(bad)
icebp
ret
imul
jno
js
dec
jb
jl
push
mov
retf
cmps
push
imul
inc
xchg
idiv
pop
inc
mov
xlat
xchg
xchg
sahf
xchg
lods
inc
adc
mov
adc
mov
imul
mov
mov
and
xor
rol
mov
sbb
cdq
ja
ret
or
repz
add
(bad)
cli
movs
jns
jb
sbb
pop
dec
inc
jae
mov
adc
scas
jbe
and
js
shl
add
mov
push
sub
pop
leave
push
dec
cwde
mov
rcl
push
retf
jmp
cmp
push
and
stos
push
mov
xchg
mov
nop
cmp
xchg
jns
and
jmp
cmp
(bad)
outs
sbb
imul
lea
test
mov
lods
pop
fcmovne
enter
mov
or
imul
xchg
jg
rol
cld
aam
or
push
add
jo
call
lahf
jmp
or
in
and
add
push
std
cli
inc
cli
xchg
pop
and
call
push
and
shr
stos
xchg
pusha
mov
sub
jns
pop
pop
addr16
xchg
imul
xchg
loope
adc
adc
xchg
pop
or
mov
out
repnz
push
xor
icebp
std
sub
jo
dec
adc
fnstcw
repnz
add
cmps
fiadd
and
lahf
mov
daa
inc
cmp
mov
sahf
dec
cld
xchg
mov
fnstenv
mov
aas
cld
and
push
xchg
jno
add
push
rol
mov
loop
push
xchg
mov
pop
(bad)
call
cmps
push
mov
sbb
in
or
push
ficomp
jnp
test
and
retf
leave
(bad)
outs
mov
cmc
pop
mov
int3
jo
call
dec
aad
rcr
mov
mov
into
jns
adc
inc
jecxz
out
mov
popa
sbb
add
popf
mov
xor
sub
dec
div
das
cs
pop
test
mov
mov
add
cmp
sub
les
mov
push
out
call
jmp
sub
hlt
or
sbb
cs
inc
cmp
imul
jmp
xchg
enter
pop
stc
or
repnz
sub
cs
(bad)
repnz
inc
mov
gs
leave
xchg
popa
ins
inc
mov
clc
push
sbb
jle
pop
inc
pop
dec
mul
fucomip
adc
and
ins
add
dec
jmp
cwde
repnz
call
mov
cmp
push
je
cmp
out
cmp
adc
lea
out
addr16
fisub
xchg
sub
add
movs
gs
or
pop
pop
stc
in
repnz
call
push
jmp
jno
nop
shl
jg
xchg
sbb
add
aas
shl
add
jae
cli
loopne
xchg
rcr
fs
test
jecxz
adc
mov
rcr
es
xor
loopne
cmp
fdiv
stos
adc
repz
mov
nop
add
and
aam
dec
cmp
stos
and
aad
cli
push
add
cmp
repnz
sahf
xor
fs
loope
jns
or
test
pop
imul
or
push
imul
jmp
and
out
aam
and
or
lea
pop
xchg
sbb
xchg
xor
outs
dec
and
loopne
mov
movs
inc
test
mov
and
test
push
cmp
cwde
and
mov
hlt
push
aad
out
jne
jae
addr16
rcl
ins
and
xchg
lahf
push
push
sar
jmp
aam
cwde
or
inc
dec
shl
sbb
cld
call
mov
xor
sub
xchg
cmc
mov
sbb
in
xchg
clc
or
mov
rcr
xor
fdiv
int
shr
imul
push
mov
add
in
mov
call
mov
xchg
xor
xchg
xchg
fmul
sahf
pop
add
push
mov
push
lods
out
or
addr16
lock
cmp
or
movs
or
fs
ins
imul
loop
aam
jmp
xor
xchg
mov
xlat
and
(bad)
fld
or
push
dec
jmp
loop
ins
pop
aam
daa
or
je
test
pop
adc
data16
mov
dec
cli
sti
or
(bad)
js
movs
inc
lock
repnz
push
push
call
pop
sub
push
outs
jp
sbb
add
daa
jmp
jmp
ret
fstp
cmp
div
sbb
sub
add
leave
das
xor
(bad)
sub
xor
inc
cld
retf
scas
dec
stos
pop
sub
jne
and
mov
ret
and
push
ror
fimul
jmp
fs
push
sar
inc
xchg
das
(bad)
dec
fnsave
sub
sub
movs
and
adc
pop
or
mov
sti
xor
sbb
jae
mov
jb
cmp
and
pop
data16
int
xor
fs
cmp
inc
dec
rol
bound
(bad)
fidiv
sub
mov
fnstsw
gs
ret
jnp
and
test
es
mov
lahf
scas
fnstcw
dec
cmp
push
mov
out
sbb
add
dec
retf
inc
mov
xor
add
(bad)
mul
mov
fs
adc
(bad)
sahf
adc
adc
xor
bound
pop
xor
cmp
test
mov
sub
sbb
fistp
aaa
leave
mov
xor
in
pop
out
cmp
adc
inc
inc
clc
dec
sbb
jl
cwde
dec
sar
mov
xchg
pop
mul
loopne
pusha
dec
icebp
std
lahf
cld
mov
or
dec
mov
pop
pop
dec
loope
mov
call
ss
das
sub
pop
and
adc
test
xor
call
rcl
add
movs
retf
stc
or
in
dec
out
pop
sahf
adc
inc
sub
ret
mov
ins
hlt
repz
rcr
gs
das
mov
jbe
mov
ja
fiadd
or
inc
cmc
std
(bad)
not
pop
jae
fninit
jecxz
add
sbb
mov
loopne
not
xor
imul
fisub
and
jae
mov
and
fstp
leave
ret
outs
push
sub
sub
add
jle
(bad)
clc
pusha
mov
into
out
or
cmp
imul
repz
in
jo
and
sub
clc
aam
inc
arpl
add
dec
or
into
jl
jg
sub
fwait
ret
aas
cmp
inc
clc
or
dec
sar
xor
sub
inc
mov
psllq
push
shl
adc
push
pushf
hlt
mov
cwde
sub
pop
mov
cmp
or
(bad)
out
int3
in
adc
mov
popf
mov
fsubr
ret
pushf
or
cld
mov
test
push
xchg
jo
loopne
pop
push
in
pop
ror
fistp
mov
push
inc
out
sbb
es
retf
bound
enter
lods
cli
leave
loop
xchg
xor
xor
lods
cmps
jge
sub
sti
jnp
(bad)
pushf
adc
sub
cmp
jg
fmul
jno
fbstp
xchg
repz
retw
jge
or
xor
push
lock
ins
into
adc
movs
push
aad
scas
sbb
cli
sbb
jbe
adc
cli
xor
dec
or
pop
movs
sti
out
mov
inc
leave
test
jno
daa
test
aam
rcl
cmc
outs
mov
cmps
inc
push
and
cmps
adc
jae
(bad)
jle
dec
rcl
cmp
fstp
mov
sbb
xor
in
cmp
aam
mov
jle
xor
popa
mov
js
pop
out
pop
outs
jle
stos
mov
dec
push
aas
mov
cwde
xchg
push
lods
lds
fistp
lock
gs
mulps
stos
pop
ja
jge
inc
pop
xor
ss
leave
(bad)
and
sti
mov
mov
in
popa
into
or
inc
sub
out
sub
add
dec
shr
or
cwde
fsubr
mov
cld
inc
fdivr
sub
push
sbb
and
add
cmp
ficom
rol
inc
dec
mov
movs
push
outs
xor
pop
xor
movs
lea
mov
(bad)
mov
inc
xor
scas
call
cmp
jmp
dec
add
and
xchg
push
push
jecxz
inc
mov
xchg
retf
cmp
fiadd
int3
mov
test
icebp
out
push
add
ins
sti
neg
push
cmp
popa
mov
stos
cmc
xor
dec
iret
jl
jno
aam
ret
(bad)
pop
dec
popf
jb
clc
jecxz
sub
pop
fbld
loop
and
or
or
cmc
jo
loopne
or
mov
push
push
ds
jno
sbb
cmp
cmps
push
adc
outs
pushf
daa
shr
pop
push
sub
jle
jl
mov
xchg
icebp
push
adc
icebp
push
arpl
jmp
and
xor
loope
popa
mov
paddw
je
jo
movs
xchg
mov
into
(bad)
add
add
xchg
inc
sar
dec
mov
push
imul
push
shl
test
add
aaa
out
add
test
ds
pushf
mov
jp
sub
jg
fild
div
and
dec
cld
(bad)
in
jo
aad
dec
ds
retf
inc
xor
rol
xchg
xchg
sub
stc
xor
mov
retf
in
shr
rcl
jno
dec
aaa
push
out
cs
data16
pop
xlat
dec
enter
and
push
in
and
dec
movs
shl
call
pop
int3
xlat
adc
pusha
mov
adc
mov
jmp
xchg
jg
les
adc
frstor
call
shl
add
mov
and
adc
pop
fsub
in
and
pop
pop
inc
fdivr
cmp
mov
adc
xchg
mov
add
add
dec
fcmovnbe
into
in
sbb
mov
loopne
mov
jle
pop
hlt
sbb
aad
out
mov
aaa
ins
imul
int
or
pop
jb
pop
(bad)
out
mov
sar
jmp
test
and
popa
push
es
cwde
movs
std
jp
push
and
push
xchg
mov
mov
push
addr16
xchg
sbb
fist
mov
sti
sahf
(bad)
(bad)
mov
test
mov
lahf
adc
pop
sub
dec
imul
cmc
int3
fwait
sbb
add
test
xchg
add
cmp
mov
int3
push
jg
sbb
and
jmp
in
stc
sbb
aam
cmps
jne
xor
dec
dec
mov
pop
pop
outs
ret
mov
lods
stos
rcr
cmovg
xchg
mov
xchg
mov
inc
xchg
dec
stos
jl
in
xchg
adc
imul
cdq
push
xchg
test
stc
and
rol
push
popa
jl
js
xchg
outs
pop
inc
sbb
or
rcl
adc
lds
inc
cmp
dec
test
mov
lods
jo
das
jg
add
jmp
dec
aas
and
and
jns
nop
lods
sub
mov
lahf
jbe
lds
nop
imul
lock
mov
inc
sub
mov
stc
push
push
iret
xchg
sbb
adc
aaa
addr16
ins
mov
mov
loopne
mov
lods
rcl
(bad)
or
mov
jge
dec
jecxz
in
xchg
jge
and
or
stc
mov
jl
ret
test
xor
mov
adc
ins
cmps
pop
sbb
pop
(bad)
pminub
(bad)
cmp
clc
add
call
mov
lods
add
sar
daa
or
gs
xchg
mov
push
cmp
xlat
push
and
and
add
mov
jp
xor
or
mov
xor
mov
pusha
jnp
aad
mov
push
scas
mov
sub
ficom
in
std
mov
call
push
cmp
inc
dec
xchg
xor
add
ins
iret
hlt
(bad)
fmul
xchg
shl
mov
xlat
dec
pop
xchg
mov
(bad)
pop
xor
int
hlt
xor
enter
dec
adc
mov
adc
add
xor
test
jo
push
mov
test
retf
cli
sahf
sti
cli
mov
push
fstp
cmp
mov
mov
jp
sbb
cld
mov
icebp
cmps
lea
push
mov
inc
push
inc
inc
pop
and
mov
mov
dec
loope
dec
adc
jno
sub
ins
stos
mov
jp
or
retf
enter
call
adc
push
in
or
pop
leave
add
push
into
call
daa
jl
jne
ficom
mov
xchg
mov
mov
in
fbstp
mov
mov
and
pop
ins
gs
jle
adc
lods
nop
fwait
sbb
mov
xor
jle
les
out
jmp
jp
(bad)
push
xchg
ds
shl
(bad)
pushf
and
mov
xor
xchg
fcmovu
mov
mov
cs
dec
adc
ins
rol
xchg
xor
test
dec
xchg
xor
xchg
stos
mov
jo
adc
pop
xchg
fmul
mov
stos
add
jne
pop
sub
push
daa
inc
je
dec
fcomi
outs
xor
daa
xchg
or
push
add
mov
movs
aad
out
imul
test
or
stos
mov
pop
out
xchg
jmp
push
sub
dec
sbb
iret
xlat
shl
sahf
cmp
in
push
or
dec
and
sbb
push
mov
cli
cmp
push
sbb
pop
mov
cmp
push
cmp
and
lods
ret
in
jmp
lahf
pop
jge
lahf
xchg
cs
in
inc
rol
data16
push
push
mov
ror
stc
pop
push
pop
retf
ss
dec
(bad)
mov
cs
xchg
(bad)
scas
add
outs
mov
rol
(bad)
dec
ss
addr16
cmps
push
sub
popf
jne
data16
cmps
fcom
and
retf
push
lods
xor
ret
out
or
fstp
cwde
aad
outs
test
sbb
adc
cmp
pop
(bad)
repz
or
add
mov
pusha
fiadd
dec
inc
jns
add
cmp
or
dec
loope
mov
bound
pushf
test
shr
xlat
cdq
ds
adc
jmp
mov
pop
mov
mov
fdivr
fidivr
dec
jecxz
adc
pop
pop
int
into
mov
sbb
cdq
cmp
sbb
xchg
mov
popa
and
sub
ins
sbb
out
dec
rcl
dec
push
mov
jo
das
rcl
jae
mov
pop
out
out
lea
mov
addr16
dec
jne
gs
scas
xor
dec
and
adc
imul
fild
or
xor
daa
(bad)
jbe
test
mov
cmp
mov
fistp
cdq
jmp
inc
cdq
mov
push
int3
push
imul
fsubr
mov
(bad)
lahf
shl
mov
test
cwde
adc
in
adc
fiadd
cmps
outs
int
out
std
rcl
or
into
test
jecxz
sub
(bad)
out
jno
xchg
xchg
repnz
lods
xchg
push
fucomi
fbld
pop
adc
popf
dec
hlt
jb
adc
xchg
jne
cmc
addr16
shl
or
test
pop
(bad)
(bad)
mov
leave
jmp
das
into
cmp
jmp
mov
inc
add
inc
adc
mov
ror
sub
dec
and
jp
ret
adc
popf
inc
(bad)
in
fisttp
xor
jno
or
mov
jb
out
adc
pop
dec
call
std
cs
sbb
inc
das
add
outs
xchg
rcr
adc
ds
lock
rcr
shr
out
fisub
imul
push
push
push
and
ret
jnp
mov
mul
mov
cdq
mov
pop
pop
faddp
jge
mov
idiv
arpl
pop
call
scas
sub
or
pusha
fmul
aam
mov
mov
les
xchg
add
mov
neg
inc
jno
inc
lods
push
std
cmp
mov
(bad)
test
fwait
dec
xchg
xor
clc
clc
js
imul
sbb
sub
(bad)
in
mov
rcr
dec
mov
and
sub
idiv
test
fisttp
mov
aam
mov
xchg
jbe
call
aad
bound
cld
outs
repnz
mov
and
movs
test
pop
xlat
mov
aaa
sub
gs
mov
dec
repnz
aas
sbb
mov
mov
mov
sbb
mov
jle
js
mov
adc
enter
not
lahf
sub
jne
sti
xor
push
dec
xchg
into
sti
fwait
dec
and
pop
xor
mov
les
xchg
into
loop
enter
stos
popa
bnd
sub
push
cmovns
aaa
cmps
mov
mov
mov
push
xchg
pop
jb
call
cli
nop
pop
pop
cld
icebp
and
aaa
enter
xchg
jno
repz
sbb
cmp
ret
rcr
out
xchg
and
or
add
lock
pop
or
std
mov
pop
test
xor
out
lods
sub
in
xchg
xchg
idiv
inc
xor
pop
leave
fs
cli
(bad)
jge
imul
nop
lods
dec
pusha
add
mov
sbb
cmp
jbe
lods
call
add
inc
call
xchg
jb
push
and
xor
push
mov
jp
adc
(bad)
jmp
cmp
mov
imul
jne
fild
mov
popf
jmp
dec
in
mov
sahf
aad
xchg
cmp
pop
add
arpl
jae
aad
ds
sti
xchg
test
(bad)
and
gs
pop
xor
rep
ror
and
jp
cdq
and
mov
outs
enter
ficom
fsub
pop
lock
fild
icebp
sub
mov
or
sub
in
dec
mov
cld
popf
mov
dec
add
int3
dec
int3
pop
aaa
test
push
xor
movs
idiv
loope
and
mov
xlat
mov
outs
movs
in
psadbw
jmp
inc
adc
dec
sub
imul
inc
in
sub
push
sbb
adc
mov
fbstp
fdivr
or
jne
and
sub
(bad)
jb
or
call
sbb
xchg
pop
mov
inc
popa
bound
aam
retf
fld
push
add
mov
mov
hlt
pop
add
sub
ins
or
mov
pop
mov
pop
mov
jp
mov
mov
mov
clc
cmp
push
mov
fwait
mov
aam
das
and
(bad)
mov
das
jg
jmp
out
dec
xor
js
mov
add
popa
push
arpl
dec
adc
pop
fdiv
mov
and
jno
fisttp
test
xor
lods
inc
or
jp
mov
imul
pop
loopne
imul
mov
adc
out
mov
mov
jmp
out
test
or
inc
cmp
mov
mov
adc
and
mov
jge
cdq
xchg
in
inc
outs
jbe
mov
cwde
mov
fdivr
test
iret
aam
in
cwde
out
test
out
pusha
xchg
lds
retf
add
jo
in
retf
push
stos
mov
sub
jb
int
loope
mov
xchg
sar
ficom
or
pop
push
xchg
push
fisub
and
mov
aad
push
cmp
jo
dec
sbb
xchg
xor
adc
and
fidivr
inc
jmp
stos
ret
(bad)
xor
push
(bad)
rcr
hlt
and
call
xchg
das
mov
push
cmps
xchg
fstp
int
mov
scas
dec
fldcw
mov
jne
inc
outs
adc
jl
jae
pop
aad
mov
inc
and
ret
inc
js
je
dec
adc
mov
bound
aas
(bad)
xchg
xlat
lea
mov
stos
in
mov
jb
push
push
popf
xchg
std
icebp
or
ret
push
mov
mov
mov
leave
ret
mov
jmp
mov
pop
ret
push
push
push
lea
sub
mov
cld
mov
rep
call
pop
pop
pop
ret
push
mov
call
mov
jmp
mov
pop
ret
push
mov
mov
pop
ret
push
call
add
mov
mov
mov
lods
stos
lods
stos
push
call
add
mov
mov
mov
xor
mov
rep
mov
push
mov
push
call
mov
push
call
mov
push
call
pop
push
call
add
mov
mov
mov
xor
mov
rep
mov
push
add
push
push
call
add
pop
push
mov
mov
mov
mov
pop
pop
push
call
add
mov
mov
mov
xor
mov
rep
mov
push
mov
push
call
pop
push
call
add
