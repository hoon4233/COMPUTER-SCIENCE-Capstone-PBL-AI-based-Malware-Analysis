(bad)
add
mov
ret
int3
push
mov
sub
push
xor
idiv
std
dec
hlt
mov
push
push
adc
xlat
mov
push
push
call
call
sub
test
add
push
hlt
push
push
mov
cmp
ror
or
std
frstor
rcl
cmp
mov
mov
or
inc
clc
mov
test
jne
rol
jmp
enter
test
out
(bad)
std
leave
jne
shr
xor
cmp
jne
mov
cmp
fdiv
fstp
mov
push
cmp
mov
test
jne
and
cwde
jmp
add
cmp
add
mov
mov
jmp
push
call
movzx
push
dec
cld
fnstsw
ja
sti
push
sbb
push
sbb
push
sbb
push
push
push
lea
mov
in
test
adc
inc
adc
call
add
mov
add
inc
data16
(bad)
std
stc
sub
push
lea
add
in
pop
mov
pop
pop
mov
pop
ret
adc
add
cwde
push
xchg
sub
sti
(bad)
(bad)
pusha
cwde
addr16
fstp
pushf
adc
sbb
push
push
xor
push
ins
add
imul
push
pop
clc
mov
add
cmp
int
(bad)
push
push
(bad)
push
in
xor
cmp
bound
call
pop
dec
clc
push
(bad)
sub
xchg
stc
loopne
sub
mov
(bad)
daa
(bad)
loopne
mov
mov
fistp
retf
lock
inc
xchg
(bad)
jne
xchg
xor
or
in
add
clc
push
or
push
dec
adc
sbb
push
or
xchg
sub
xchg
push
fld
jge
mov
(bad)
pop
and
xchg
inc
cld
jbe
nop
arpl
clc
cld
pusha
push
jnp
push
push
adc
lock
clc
cmp
xchg
inc
xor
jne
jae
shr
mov
ror
pushf
xor
pop
test
cs
add
lea
push
cmp
dec
xchg
cmp
outs
hlt
sahf
cmps
inc
mov
or
jo
and
jns
inc
push
cmps
in
aas
or
push
fs
and
ficomp
fwait
test
lds
lahf
push
mov
mov
or
shl
nop
xor
std
(bad)
mov
sar
jae
mov
test
je
push
adc
cmp
jb
mov
jmp
dec
lods
and
adc
add
push
add
mov
or
add
cmp
mov
push
pop
or
mov
(bad)
repnz
add
add
lods
lods
inc
sbb
loopne
or
out
pop
or
and
add
inc
adc
sti
cmp
(bad)
push
sbb
inc
sti
push
ret
add
push
mov
jbe
mov
sub
(bad)
jbe
add
cmp
cs
sub
imul
ret
xor
adc
scas
or
dec
movhps
jmp
xor
mov
clc
adc
or
sbb
adc
fiadd
push
push
rol
jle
punpcklbw
push
pusha
enter
mov
(bad)
adc
shr
jp
std
xchg
out
push
pop
mov
or
je
push
xchg
pop
repz
lahf
mov
cmp
inc
push
push
pop
inc
jno
aas
out
jmp
xor
test
je
cmp
ja
push
cwde
dec
scas
sub
pop
inc
sub
or
jmp
dec
adc
jbe
cmovl
jnp
push
add
loopne
ja
push
mov
enter
sub
or
stc
mov
mov
cmp
(bad)
lods
add
jmp
mov
mov
out
retf
shr
shr
cmp
jbe
mov
cmp
ret
sbb
fdiv
mov
pop
dec
lea
mov
adc
adc
mov
push
cs
loopne
xor
pop
imul
push
fadd
push
pusha
dec
pop
lock
fs
adc
xlat
mov
sbb
lods
add
mov
std
pop
sbb
jne
fiadd
jg
movs
loop
sbb
jp
pop
fld
fidiv
or
mov
pop
test
adc
pop
ds
sbb
xchg
pop
and
ins
(bad)
jne
jle
push
push
retf
sub
or
sar
or
sub
jae
push
jne
leave
cmp
mov
rcr
pop
iret
sbb
dec
data16
aad
test
inc
sti
jne
xchg
dec
pop
ret
xor
push
adc
push
bswap
adc
pop
nop
(bad)
push
fcomp
cmps
and
fsubr
ss
loope
push
(bad)
in
or
je
cld
mov
dec
adc
lea
(bad)
out
out
pop
pop
lods
jb
sbb
cmp
jbe
daa
push
(bad)
aaa
cwde
pop
bound
sub
fs
add
push
sub
sbb
fwait
sbb
cmp
rcr
jg
dec
push
nop
repnz
push
xor
pop
push
jnp
or
push
std
mov
push
stos
scas
ror
and
pop
(bad)
push
jp
mov
jg
imul
je
out
scas
les
mov
mov
jge
loopne
in
pushf
xchg
push
enter
outs
setno
or
mov
push
call
jmp
add
push
sub
data16
mov
or
je
mov
test
sub
adc
mov
(bad)
mov
sbb
sbb
call
mov
fadd
cmc
call
fcomi
push
imul
pop
rol
ror
ins
push
je
pop
xor
jo
xor
cmps
or
add
mov
or
nop
add
jae
bnd
sti
xor
mov
mov
ret
call
xbegin
or
push
jb
test
push
xor
movs
(bad)
jns
or
mov
push
add
rcl
push
or
sbb
add
fdivr
mov
lea
lea
ds
mov
add
xor
push
sbb
mov
sub
loop
mov
test
adc
dec
pop
fadd
dec
mov
icebp
add
sub
add
rcl
mov
stos
sbb
xchg
ret
xchg
popa
enter
iret
jmp
stc
cmp
ds
clc
jae
faddp
sbb
add
inc
data16
jae
mov
cwde
lea
jmp
sub
iret
in
fmul
sub
push
popa
mov
shl
mov
cld
push
xor
loope
pop
pop
or
rcl
and
mov
sub
sub
stc
cwde
xchg
outs
mov
add
ret
pop
sub
es
cmp
or
or
push
push
add
jo
in
dec
js
cmp
aam
or
add
push
mov
push
push
sti
je
mov
push
je
push
push
outs
ins
out
cmps
fisttp
adc
repz
pop
pop
fadd
mov
or
inc
sbb
push
je
inc
mov
xchg
(bad)
cmp
div
idiv
mov
shl
je
sbb
inc
cmp
lea
pushf
mov
shl
ficomp
mov
or
int
aaa
lea
adc
outs
jmp
mov
add
cmp
jne
push
mov
neg
movzx
mov
or
fisttp
mov
mov
pop
cmp
inc
fdivr
add
add
dec
in
dec
cld
jmp
sub
mov
sbb
add
inc
into
adc
das
push
rol
loopne
ror
mov
push
or
pop
and
push
fs
js
add
out
aad
mov
mov
push
and
sub
int3
push
mov
cmp
jb
mov
cmp
clc
inc
push
hlt
jne
sub
rol
jae
ins
inc
pop
jo
mov
jne
and
iret
int
cld
jbe
movzx
jns
and
add
add
jae
cmp
lsl
add
stos
(bad)
mov
pop
pop
or
mov
pop
dec
pop
sub
or
inc
adc
rol
mov
and
mov
shl
xor
(bad)
jbe
ror
ja
rol
stos
aas
inc
adc
push
call
fwait
shr
and
call
in
pushw
xchg
push
setne
and
fbld
(bad)
mov
div
push
ret
mov
cli
mov
dec
adc
push
push
ins
shr
or
stos
ss
cmps
pop
movs
inc
inc
adc
push
inc
imul
or
jno
pop
movs
pusha
fist
es
xchg
fdivr
pop
loopne
ficom
lock
pop
nop
inc
mov
or
ror
cmc
adc
cli
add
hlt
lea
into
clc
inc
outs
fbstp
jb
mov
into
cld
xor
add
add
inc
and
ja
cmp
mov
cmps
mov
cmp
pop
(bad)
rcr
(bad)
jp
jge
jge
cmp
inc
jge
in
jle
out
mov
xor
nop
mov
xor
inc
inc
scas
add
adc
dec
clc
jne
adc
scas
fiadd
in
je
rcl
je
(bad)
js
inc
or
fild
or
or
adc
mov
add
cld
cmps
jmp
adc
xor
inc
mov
jge
pop
dec
and
ret
mov
mov
or
dec
adc
push
pop
sub
cld
push
jle
jnp
lea
adc
iret
lea
lock
sub
xor
pop
leave
lahf
lock
fisttp
push
icebp
push
push
dec
pop
lods
in
push
cmp
push
push
lock
in
jp
xlat
fwait
mov
add
hlt
call
lea
shr
in
and
test
push
xor
xchg
push
mov
push
outs
hlt
dec
test
mov
push
popa
pmaddwd
jl
and
sub
into
push
loope
addr16
mov
push
mov
sbb
add
or
inc
les
scas
add
jge
dec
inc
and
adc
fsub
lods
mov
add
loopne
push
sbb
scas
or
push
fdivr
jo
in
dec
mov
call
or
mov
or
bnd
xchg
jge
mov
push
int3
xor
add
cs
inc
rcr
int3
mov
in
mov
aaa
clc
xor
push
fdiv
or
push
data16
sbb
cmp
ffreep
test
jle
nop
adc
clc
(bad)
push
test
jb
rol
xor
hlt
sbb
inc
test
js
inc
loopne
cli
jg
push
mov
mov
cmp
mov
jno
push
pop
push
add
jnp
add
fisttp
inc
ds
bnd
mov
cdq
push
and
jge
sub
pushf
lock
(bad)
outs
or
stc
push
xchg
sub
mov
inc
xlat
ficomp
or
xor
xchg
not
push
lock
add
lds
add
test
push
shl
push
add
outs
leave
mov
pop
(bad)
icebp
sbb
xchg
dec
ja
jbe
xor
pop
fbld
jl
inc
lds
push
test
push
iret
test
in
clc
aaa
rol
hlt
or
cmp
jne
lock
add
movs
test
cmp
fdivrp
add
add
in
push
packsswb
sar
and
dec
push
cmc
mov
mov
adc
sti
dec
sbb
pusha
mov
and
es
jg
sti
mul
dec
push
and
or
mov
pop
jmp
pop
jo
push
mov
xor
mov
aaa
jl
mov
or
inc
pop
daa
mov
jecxz
push
or
sbb
inc
push
mov
push
adc
jmp
sbb
mov
loop
js
pop
lahf
mov
jno
jne
jle
push
in
mov
cmp
mov
mov
mov
dec
mov
ins
push
inc
cli
or
push
mov
in
out
mov
push
jmp
jl
cmp
and
push
add
xor
dec
adc
test
inc
inc
mov
sub
frstor
mov
jne
(bad)
adc
lds
in
lea
pop
xor
lods
lahf
sbb
cmp
adc
fs
and
lea
push
or
mov
or
jne
push
mov
add
push
test
into
jp
cmp
lahf
dec
lods
in
add
xchg
sbb
xchg
mov
mov
sub
xor
push
push
xchg
dec
rcr
mov
xor
push
cmc
jmp
mov
jl
sub
add
dec
je
rcl
cld
lea
and
pop
add
dec
mov
imul
test
push
add
aas
cmc
adc
mov
adc
fcmovnb
inc
sbb
adc
mov
mov
call
std
inc
fistp
ret
je
test
push
clc
jmp
or
mov
mov
mov
outs
or
add
dec
add
push
(bad)
xor
dec
in
dec
hlt
xchg
xor
mov
inc
lock
loopne
lock
pusha
mov
loop
rcl
sbb
in
xchg
jb
int3
mov
pop
jnp
jbe
mov
fcom
mov
sbb
inc
jg
cmc
pushf
mov
cmp
jb
ret
pop
mov
or
pop
jb
dec
in
add
jl
add
pusha
jo
or
loopne
sbb
rcr
fnsave
test
std
and
mov
cli
ss
sub
sbb
push
sti
cmp
pop
jl
push
jno
into
je
push
mov
ins
imul
or
xor
or
sbb
jge
in
mov
clc
sbb
hlt
and
push
jmp
push
frstor
dec
shl
push
or
xor
popa
gs
lahf
outs
add
xchg
sbb
and
mov
cmp
xchg
dec
and
mov
rol
lgdtd
test
pop
pushf
sahf
aam
xor
push
mov
(bad)
push
ins
dec
jg
xor
ins
sbb
lahf
pop
call
rcr
inc
add
(bad)
fadd
push
push
int3
mov
cvtps2pd
jno
call
inc
dec
pop
adc
sbb
stc
inc
gs
inc
mov
mov
fild
push
lods
out
loope
repnz
cmp
int3
ins
add
mov
mov
fucomp
mov
xor
test
mov
shl
inc
call
xor
test
adc
push
sbb
shl
sbb
cmp
jne
ffree
shl
push
push
movs
sbb
or
and
jg
and
sbb
and
jbe
mov
and
cmp
je
cmp
lea
dec
adc
mov
outs
sbb
hlt
jg
push
xlat
cmp
push
sub
cli
adc
push
xor
push
cmc
in
inc
cli
fstp
clc
jae
clc
jmp
xor
adc
mov
mov
xor
pushf
sar
test
add
imul
(bad)
jl
sub
push
adc
into
sbb
mov
in
cmp
push
dec
rep
ffreep
cmp
sub
scas
je
push
cmp
adc
pusha
push
(bad)
lea
xor
dec
rcr
js
sub
push
or
xchg
sbb
mov
mov
mov
or
cmp
adc
jbe
push
repz
imul
inc
inc
xor
jge
sbb
lea
push
ins
mov
pop
in
xchg
das
and
shr
push
shr
add
xchg
add
xlat
cmp
push
xor
and
pop
xor
push
das
mov
xchg
mov
adc
jno
pusha
div
push
fild
dec
sbb
jae
push
push
xor
sets
scas
push
not
mov
and
jmp
push
fnstsw
(bad)
cmp
jne
inc
(bad)
ror
mov
sbb
and
cmp
aas
dec
xchg
jl
dec
sub
pop
cmp
sub
or
cmp
in
sbb
ds
idiv
pop
inc
je
xchg
imul
mov
sbb
jne
cmp
jne
inc
add
adc
xor
or
adc
aam
add
repz
mov
int
je
cmp
jne
mov
cmp
push
ret
mov
fisttp
mov
adc
jmp
push
sbb
fcomi
mov
jmp
dec
add
adc
dec
or
sub
inc
in
sahf
push
mov
or
adc
hlt
mov
imul
outs
jnp
cmp
inc
hlt
jne
or
mov
adc
rcl
scas
jmp
push
sub
lock
dec
test
in
ficom
jmp
iret
mov
pop
(bad)
or
xor
dec
movzx
pop
scas
cld
sub
pop
aaa
movzx
add
retf
mov
repz
add
shl
adc
sub
mov
stc
pop
or
jmp
add
mov
test
repnz
jb
push
dec
mov
push
inc
rcr
xor
cmp
pop
mov
mov
cmps
mov
shl
jge
or
cmp
jb
div
inc
mov
adc
mov
rol
sub
jne
xor
push
cld
mov
shr
sbb
mov
cmp
ds
jbe
inc
shr
fst
cli
jmp
xor
inc
jb
jg
div
das
div
jne
mov
cld
cwde
cmp
fcmovne
icebp
pop
mov
jmp
cmp
jne
ins
xor
or
mov
or
jl
jmp
push
xchg
sbb
pop
pusha
je
dec
sbb
push
or
cmp
jnp
pop
mov
fsubr
and
mov
push
out
push
push
jne
push
sub
sahf
cmp
jo
hlt
push
in
repz
add
dec
mov
inc
mov
inc
fwait
out
add
add
mov
mov
cmp
add
inc
je
add
pop
inc
xchg
or
add
xor
mov
(bad)
lock
aas
movs
test
jg
fild
push
cmp
jne
dec
pusha
scas
div
inc
mov
rcl
jmp
mov
jl
je
adc
pop
inc
in
enter
sub
je
jne
sub
pop
inc
data16
push
mov
mov
mov
call
je
adc
push
rcl
push
rol
movs
jo
mov
mov
ins
lods
adc
xor
adc
mov
cmp
in
add
pushf
add
loopne
mov
mov
rcl
div
js
mov
lock
call
jmp
fdiv
add
aaa
pop
cmp
movs
sbb
sar
mov
xor
inc
jo
cmp
push
jb
adc
pop
cmp
or
jp
loope
retf
aam
jne
ja
mov
mov
mov
xor
push
mov
push
out
pop
xor
mov
rcl
shr
or
or
dec
js
pop
pop
(bad)
fwait
jmp
nop
retf
cmc
int3
out
ins
jae
aas
cmp
test
cmps
lock
cmps
fisttp
je
and
adc
movs
xor
push
adc
jge
in
push
aam
(bad)
sub
(bad)
iret
mov
sub
ror
dec
std
inc
scas
pop
mov
jbe
out
cmp
ins
push
push
outs
cmp
cmp
outs
add
push
outs
test
fisubr
out
mov
push
daa
mov
je
and
add
sar
adc
ins
enter
es
jae
inc
daa
pop
sbb
in
sar
sti
(bad)
rcl
ret
pop
cmp
or
push
and
push
mov
adc
pop
mov
sub
int3
dec
xor
movs
or
push
data16
lock
cli
je
lea
dec
xor
ds
dec
jp
sbb
mov
add
fs
jg
shl
sub
ss
mov
adc
ss
xor
and
jo
mov
inc
mov
xor
and
es
and
in
pop
sti
daa
cmp
je
cmp
mov
xor
jbe
dec
and
cmp
jae
jge
adc
jae
mov
pop
or
cdq
shr
inc
mov
push
gs
mov
sbb
push
icebp
jno
shr
inc
in
dec
or
xor
popf
adc
or
imul
stos
cwde
rcr
sbb
shl
sub
xor
inc
cmp
jne
push
push
loop
push
ds
push
mov
mov
jbe
pop
inc
xor
addr16
xchg
or
vunpckhpd
push
push
cmp
in
ss
xor
es
ucomiss
xor
scas
ins
pop
mov
pop
mov
aaa
xlat
or
pop
or
and
xchg
add
pop
sbb
pop
cmp
add
mov
stc
les
test
and
jns
xchg
push
mov
lock
fldenv
test
dec
push
add
jl
adc
test
mov
mov
ret
jp
cmp
add
ror
out
ss
push
xchg
cmp
push
sbb
pop
add
jp
push
mov
fnstenv
mov
mov
jp
add
push
cmp
cmp
push
xchg
lods
jbe
add
pusha
cmp
cmps
sbb
mov
sbb
sub
lods
adc
jno
loop
in
pop
add
jb
push
pushf
or
cmp
(bad)
mov
mov
push
add
inc
call
xor
test
cmp
ret
jp
xor
sar
push
or
test
jmp
or
outs
and
aaa
cmp
push
jne
(bad)
ja
mov
mov
mov
rol
cmp
xor
into
adc
sbb
or
cmp
mov
test
and
imul
jp
shr
push
jle
push
(bad)
aad
je
mov
(bad)
mov
inc
mov
js
pop
inc
cmps
loope
mov
add
xchg
movs
repnz
adc
ss
jl
loop
movs
rcl
add
adc
and
and
xchg
cwde
jo
and
jae
(bad)
stc
leave
sbb
adc
sbb
fld
cmp
je
add
lock
sahf
dec
or
aad
(bad)
mov
push
push
mov
dec
shr
mov
cld
cmp
pop
dec
dec
daa
xor
push
popa
inc
mov
test
shr
test
sbb
sbb
inc
pop
or
(bad)
xchg
data16
sub
in
stos
mov
outs
jne
push
ret
ror
les
cmp
add
mov
out
cmp
cmp
push
push
mov
adc
lds
push
and
and
mov
cmp
adc
aam
cmps
jns
in
adc
fsub
jmp
enter
jmp
xor
test
mov
cmp
jae
mov
mov
jae
jb
cmps
or
inc
repnz
out
stc
retf
and
push
push
push
adc
outs
mov
leave
jmp
push
rol
add
push
push
ret
rol
cmp
inc
push
int3
aas
cmps
lock
pop
mov
xchg
xchg
pusha
add
loop
xchg
pusha
sbb
mov
cmc
(bad)
push
push
sbb
cmp
sbb
mov
por
add
push
add
add
add
mov
xor
into
jecxz
aam
mov
pop
and
xor
sbb
xchg
push
mov
and
adc
cdq
or
lock
(bad)
cmp
test
jmp
mov
sar
dec
mov
pop
mov
enter
adc
mov
jmp
enter
or
pop
mov
in
adc
add
add
push
jo
inc
pop
sar
cmp
sbb
cmp
inc
shl
or
shl
fiadd
(bad)
and
je
inc
xchg
movs
adc
dec
or
mov
out
sub
and
push
fiadd
je
xchg
pop
pushfw
and
adc
adc
xor
mov
and
adc
add
mov
ins
cmp
and
xor
and
or
imul
or
aam
add
shl
mov
or
xor
jo
mov
add
je
push
push
xor
inc
daa
pop
push
fnstenv
mov
fcomp
or
nop
ror
add
mov
or
pop
or
cdq
ins
mov
adc
call
or
(bad)
shl
xor
je
int3
xlat
pop
int3
inc
push
je
into
mov
sbb
mov
add
mov
push
retf
push
rcr
ret
cli
mov
popa
inc
or
dec
idiv
push
jne
and
push
sbb
dec
movs
sub
stc
mov
or
js
sub
and
(bad)
mov
cwde
adc
add
sti
add
pushf
inc
push
inc
(bad)
lea
inc
add
scas
lock
lods
jecxz
or
cmp
ja
neg
jo
sbb
mov
pop
jg
or
xchg
icebp
push
shl
and
retf
cmps
jp
mov
iret
push
push
push
das
or
pushf
mov
cmp
jbe
sub
inc
mov
add
inc
test
add
(bad)
sub
jae
sti
or
and
push
cmp
push
add
dec
cwde
lods
sub
add
test
push
xor
loope
loope
call
push
add
(bad)
fdivr
add
(bad)
ds
mov
cmp
adc
fucomp
sub
(bad)
mov
push
cmp
jne
and
mov
clc
call
cmp
jne
add
add
(bad)
test
add
pop
sbb
cmp
pop
cmps
add
je
adc
fld
test
add
mov
dec
or
mov
push
push
(bad)
bound
pushf
add
add
jmp
mov
dec
lea
mov
pushf
add
cld
cmp
add
adc
dec
dec
inc
outs
icebp
push
push
sbb
icebp
mov
lods
sbb
ror
sbb
scas
and
inc
cwde
jmp
mov
fsub
mov
push
or
loopne
pop
je
xchg
add
or
cmp
pusha
(bad)
retf
xchg
fst
mov
and
add
mov
sbb
call
or
pop
add
mov
mov
sbb
inc
fcomip
test
push
xor
cmp
inc
retf
push
sbb
sbb
inc
xor
and
mov
test
mov
and
jg
mov
mov
pop
sub
sbb
adc
inc
push
sbb
lods
mov
imul
push
add
cmp
js
stos
or
adc
add
push
xor
scas
xchg
(bad)
cld
retf
push
jo
mov
xchg
xor
inc
jmp
push
mov
ret
jae
int3
mov
sub
mov
inc
retf
add
in
mov
inc
call
cmp
sbb
mov
lahf
mov
hlt
and
adc
push
je
or
scas
push
fistp
push
mov
cmp
push
sbb
or
xchg
nop
jle
in
pop
popf
cmp
nop
(bad)
jp
add
pop
lods
push
adc
sbb
add
mov
push
mov
push
test
gs
mov
fisub
inc
nop
aam
enter
movsx
mov
aas
sbb
mov
lods
repz
nop
nop
cmp
test
imul
adc
imul
sbb
(bad)
pop
shl
fbld
(bad)
cmc
xlat
ins
sbb
stos
gs
sub
xor
pushf
inc
or
jmp
sbb
ret
xchg
dec
sbb
xchg
and
mov
mov
push
cmp
and
bnd
stos
push
mov
push
(bad)
push
sub
sub
push
mov
in
xor
aam
bound
or
or
(bad)
and
mov
sar
add
mov
sets
mov
(bad)
sub
mov
or
lea
stos
ss
cmp
mov
cmp
ret
into
in
sub
pusha
loopne
in
push
retf
sbb
cs
ret
test
pop
push
retf
pop
xchg
dec
xchg
ret
add
xchg
hlt
sub
cli
adc
add
cmp
je
inc
xchg
jmp
dec
cmp
push
mov
fcomp
inc
mov
and
or
cmp
into
mov
into
je
inc
jb
call
pop
jmp
mov
mov
pop
ret
pop
push
push
ret
outs
mov
arpl
fild
out
retf
xor
in
dec
and
adc
loope
sti
push
cmp
je
adc
cmp
cli
shl
es
and
or
add
push
mov
mov
xchg
lock
jmp
push
sub
cmc
dec
cmp
mov
push
push
mov
jno
fwait
push
leave
or
inc
jne
jbe
mov
in
ds
int
ins
pop
mov
cli
fld
mov
inc
int3
mov
fldcw
push
add
push
push
shr
or
add
mov
inc
mov
lahf
es
fmul
icebp
lea
push
inc
and
cmp
std
push
out
lock
dec
push
mov
sar
jnp
out
xchg
clc
add
jge
enter
add
retf
jle
in
sub
je
sbb
and
pop
add
dec
int3
mov
cdq
test
mov
cmp
jne
outs
(bad)
mov
ins
cwde
fsub
mov
mov
sbb
xchg
push
cld
daa
push
jno
inc
cmp
jb
push
sahf
add
in
adc
stos
sbb
mov
jle
popa
int3
and
or
aas
adc
add
push
cmp
sub
cmp
sbb
pop
cmp
jl
push
sbb
xchg
sub
or
arpl
jmp
pop
add
call
add
shr
mov
xchg
and
fisub
fsubrp
mov
ret
sbb
push
sbb
cmps
je
mov
dec
mov
jge
dec
test
or
inc
add
cmps
jo
sbb
add
pop
jne
dec
loope
push
pop
dec
call
add
adc
fcom
mov
pop
aad
pop
fwait
retf
je
dec
mov
or
cmp
enter
or
push
mov
cld
push
mov
ret
cmp
fdivr
dec
cmps
xchg
daa
cmp
shl
fisttp
push
aaa
xlat
test
mov
call
pop
mov
pushf
pop
sbb
imul
ins
push
add
(bad)
jecxz
cmp
int3
dec
call
stc
cmps
dec
lahf
jbe
push
push
hlt
repz
pop
inc
shr
enter
jle
outs
mov
ins
pop
pop
out
mov
jb
or
adc
shl
into
repz
ret
cmp
loope
cli
push
shr
cmp
dec
xchg
jmp
push
add
cmps
imul
or
jge
adc
sub
push
jle
hlt
mov
in
dec
pop
dec
push
and
fadd
xor
dec
inc
dec
push
or
or
and
push
imul
sbb
mov
adc
push
retf
ret
sub
out
fidivr
xlat
(bad)
jmp
adc
ss
adc
ins
add
jbe
ror
xlat
jne
jge
push
mov
call
inc
sbb
xor
test
pop
aaa
rcl
xor
dec
(bad)
adc
call
mov
xor
int
adc
xor
xor
movs
cmp
add
sub
mov
(bad)
add
ins
mov
or
ss
leave
pop
push
jb
push
mov
push
dec
call
xor
adc
sbb
icebp
test
stos
data16
push
and
xchg
mov
pop
cmp
lods
imul
adc
push
out
lds
push
out
dec
add
mov
pop
lds
cmp
je
xor
adc
ins
pop
adc
dec
add
mov
dec
push
and
lds
mov
shl
jne
mov
mov
rcr
jno
and
fs
adc
shl
ror
and
ror
dec
and
cmps
xchg
adc
rcr
xchg
jns
add
jl
mov
add
cmp
jl
outs
out
int3
inc
aas
add
test
sub
sbb
adc
lahf
cmp
pop
xor
dec
aaa
ret
mov
jae
ficom
sub
loopne
add
jg
mov
enter
cmp
xor
or
dec
cmp
rcr
inc
adc
or
pop
dec
les
or
pop
and
and
mov
mov
je
push
xor
mov
xor
sahf
movs
push
sbb
lea
fwait
or
push
(bad)
mov
add
loop
push
and
stos
imul
inc
adc
sub
sub
mov
bound
out
mov
test
mov
sbb
xor
mov
and
int3
jb
ror
inc
aam
push
push
inc
pop
dec
cmps
mov
loop
(bad)
cmps
xor
or
and
sbb
sete
mov
and
imul
add
inc
cmps
cmps
mov
push
dec
push
sbb
and
and
adc
unpcklps
sbb
push
iret
add
js
dec
test
cmp
mov
jo
adc
arpl
push
repnz
pop
les
push
shr
cmp
push
add
hlt
mov
dec
adc
sahf
cmp
icebp
adc
ror
pushw
jmp
aam
dec
cli
or
jno
dec
(bad)
popa
and
adc
xchg
push
adc
jo
inc
call
inc
push
dec
clc
mov
lea
add
inc
sbb
inc
call
and
and
add
aam
jnp
pushf
xor
mov
dec
mov
enter
and
hlt
or
mov
jne
add
jg
je
scas
test
ficom
inc
or
inc
sub
sbb
mov
cmc
mov
test
fcomp
sub
inc
add
add
iret
ins
lahf
fiadd
fmul
mov
(bad)
jle
out
inc
dec
or
fisub
xor
dec
xchg
push
inc
dec
nop
mov
rol
sbb
xor
or
aaa
loope
jno
in
mov
cwde
inc
push
mov
sbb
and
mov
test
pop
pop
dec
xor
int
push
je
mov
mov
scas
and
in
add
pop
sbb
jo
shr
rcl
ret
push
inc
dec
mov
movs
and
or
pop
mov
jg
sbb
aas
cmp
mov
jg
sub
mov
retf
and
sbb
pop
push
mov
cmp
or
jp
mov
inc
in
aaa
jne
aaa
xlat
mov
inc
mov
loopne
push
mov
cwde
cmp
jae
mov
or
sbb
cmp
push
call
xor
sahf
xor
jmp
xor
jmp
jne
inc
mov
sar
jmp
call
add
sbb
shl
mov
rcl
xchg
xchg
pop
jbe
adc
cs
jmp
dec
pop
push
out
in
or
and
xor
outs
das
es
pop
jb
sar
stos
sub
jmp
cmp
sub
cs
push
xor
and
pop
xchg
add
push
or
sbb
add
rcr
je
jg
push
int3
mov
push
pop
mov
ins
sbb
test
pop
sar
xor
ret
add
mov
dec
dec
inc
ja
mov
push
inc
sbb
or
pop
div
and
mov
xlat
(bad)
lds
lahf
push
pop
hlt
ja
push
or
mov
cmp
ja
xor
or
ret
sub
sahf
(bad)
(bad)
fcmovnbe
sub
jbe
mov
shr
or
sub
icebp
test
fidivr
(bad)
mov
add
dec
mov
rol
pushf
mov
js
xchg
hlt
pop
mov
jmp
add
push
sub
mov
cmp
mov
pop
test
fimul
fistp
(bad)
aam
jg
xor
adc
and
enter
push
(bad)
or
adc
fst
inc
cmp
dec
bound
sub
inc
jle
mov
push
push
das
dec
ins
cmp
pusha
test
iret
fdivr
and
mov
loopne
gs
pop
mov
out
loop
adc
in
inc
ja
out
push
sub
or
ror
pop
iret
sbb
test
clc
sub
mov
push
mov
in
stc
add
and
aam
and
push
out
dec
fadd
ins
test
pop
cmc
(bad)
push
adc
pusha
fcomp
test
adc
push
sbb
push
mov
dec
sub
or
mov
mov
(bad)
mov
cmp
mov
jp
or
(bad)
xor
dec
xor
jg
imul
int
cmp
push
in
pop
or
repnz
mov
out
xchg
push
fs
pop
sbb
retf
fs
dec
sub
retf
cmp
jl
inc
pusha
out
ins
lea
(bad)
inc
pop
inc
sbb
push
fcomp
jae
and
or
adc
cli
aam
mov
jne
je
mov
retf
inc
pop
adc
inc
rol
iret
(bad)
cdq
sbb
pop
or
shl
cmp
out
inc
test
xchg
pop
jnp
(bad)
xchg
adc
push
out
or
shl
sti
push
dec
enter
fnstenv
jecxz
mov
adc
aam
adc
or
lds
sub
pop
dec
and
inc
add
or
mov
or
mov
in
push
dec
iret
add
push
retf
dec
mov
mov
adc
mov
fs
ins
int
jne
dec
es
and
daa
iret
dec
and
inc
or
push
xor
and
pop
ret
sub
jmp
mov
or
push
(bad)
and
dec
sbb
dec
fimul
ret
(bad)
pop
sbb
or
aas
mov
dec
je
or
pop
sbb
inc
cmp
mov
jae
fbstp
not
or
mov
mov
(bad)
clc
push
mov
mov
add
or
cmovp
adc
or
mov
cmp
or
ins
pop
(bad)
and
push
add
pop
enter
ja
call
dec
mov
push
mov
sub
xor
pop
xchg
aaa
dec
sbb
or
pop
push
fdiv
and
inc
xor
push
into
test
(bad)
xor
mov
ret
lods
add
in
mov
(bad)
cmp
inc
xor
xor
out
fstp
xchg
sub
pop
cmp
sahf
aam
test
das
adc
add
loopne
xlat
add
mov
dec
das
or
sub
ret
xchg
repnz
or
jg
adc
into
xor
push
int
shl
stos
les
push
adc
add
pop
shl
or
mov
pushf
(bad)
cmp
cwde
and
sbb
sbb
pop
ja
gs
stos
mov
imul
jle
(bad)
push
or
ror
push
lea
mov
outs
dec
(bad)
je
stos
jne
out
sbb
ror
ins
cmp
xchg
leave
push
clc
dec
sub
dec
lock
or
jmp
xor
adc
cmps
add
sbb
dec
shl
and
sub
cmp
add
fmul
addr16
std
mov
cmp
mov
jmp
test
fldenv
dec
dec
adc
sbb
cmp
cmp
bound
out
pop
push
fwait
sbb
adc
nop
sub
push
imul
jle
retf
adc
dec
or
dec
js
sub
outs
adc
xor
push
push
mov
fisttp
jne
(bad)
pop
jbe
add
or
inc
lahf
in
repnz
adc
push
dec
dec
test
out
(bad)
push
mov
adc
xchg
or
adc
inc
(bad)
mov
jne
push
push
push
call
mov
or
push
call
sbb
data16
in
adc
or
jp
push
retf
test
mov
push
inc
cmp
test
or
mov
les
ror
jg
fwait
imul
push
test
(bad)
lahf
dec
jae
(bad)
xchg
mov
dec
int3
pop
or
fiadd
lahf
mov
mov
out
lahf
cmp
test
xchg
sbb
push
mov
test
dec
aaa
call
xor
dec
jl
push
and
dec
add
xchg
inc
cs
mov
lahf
add
fsub
in
pushf
add
add
add
mov
pop
add
call
sub
mov
add
sub
cld
dec
fsub
cs
hlt
cmp
sub
sbb
push
ja
test
sbb
ds
sub
div
mov
push
(bad)
rcr
adc
push
sbb
xor
push
mov
call
jecxz
aaa
adc
popa
aad
mov
stos
pop
pop
or
pop
add
dec
mov
stos
movs
jge
add
mov
pushf
mov
jmp
aad
mov
and
cmps
mov
dec
adc
enter
and
or
std
sbb
push
ror
cmp
cmp
mov
call
sbb
enter
push
imul
cmp
and
adc
cmps
mov
in
mov
push
xchg
and
and
inc
push
sbb
xor
ja
push
sub
xor
push
pop
loope
pop
xchg
in
mov
ret
pop
ret
mov
pop
dec
test
jbe
nop
cld
sar
mov
add
(bad)
fistp
pop
cmp
sbb
cld
cmp
cld
pop
push
nop
mov
push
mov
rcr
jp
mov
jge
mov
in
jmp
ret
pushf
sub
mov
dec
sbb
sar
cmp
xchg
jge
sub
push
aas
sub
mov
add
xlat
push
nop
mov
jb
inc
pop
dec
xor
xor
mov
(bad)
and
mov
cdq
cmp
xor
fs
lahf
enter
dec
fstp
push
sbb
and
inc
invd
lea
xchg
mov
cmp
mov
jecxz
test
mov
jg
cmp
jo
adc
adc
shr
jl
mov
repnz
out
push
inc
pop
cmp
jg
jl
cmp
jae
shl
sbb
mov
push
fld
add
xor
imul
adc
sbb
sub
push
sbb
sub
add
jmp
mov
adc
adc
inc
sbb
ins
stos
test
inc
adc
dec
pop
hlt
aas
and
push
or
push
adc
dec
jnp
pop
jl
push
or
push
dec
dec
or
and
in
popa
inc
dec
pop
stos
push
leave
add
add
add
out
mov
xchg
les
mov
mov
or
je
std
add
daa
dec
dec
rol
in
fs
pop
push
push
loope
xor
push
add
pop
and
and
add
lahf
and
dec
dec
clc
jp
pop
out
cld
call
pop
stos
stos
nop
call
or
ins
ret
popa
adc
aad
hlt
stos
add
xor
pop
push
cdq
(bad)
stc
lock
std
inc
inc
push
sub
lock
adc
jle
ins
mov
inc
and
and
jg
fiadd
adc
lock
aaa
inc
adc
mov
mov
jne
and
and
call
fldcw
stos
or
push
imul
popf
shr
mov
jecxz
test
pop
pop
dec
sub
push
cmp
add
mov
jnp
sbb
dec
xchg
call
aam
(bad)
sahf
outs
jl
jmp
push
mov
lock
pop
pop
(bad)
mov
inc
add
mov
call
xor
not
mov
adc
jno
imul
push
mov
dec
(bad)
inc
add
xchg
mov
(bad)
jne
sub
or
dec
adc
push
in
stos
jno
cvttps2pi
cwde
pop
adc
retf
fcom
xchg
push
push
fisubr
imul
push
test
rep
ror
push
jg
ret
nop
cmp
jg
rol
lea
mov
add
push
dec
ret
outs
dec
mov
and
push
jg
push
add
call
inc
or
dec
dec
sbb
push
add
mov
xor
jne
add
push
push
(bad)
adc
das
call
push
pop
hlt
mov
add
int3
jae
mov
mov
sub
xor
imul
loopne
into
stos
add
adc
aam
fmul
push
adc
push
inc
push
or
adc
(bad)
neg
inc
sub
adc
aaa
stos
or
dec
xor
jmp
mov
add
jb
mov
push
cmps
push
push
push
push
ds
or
xchg
bound
xor
add
xchg
sbb
aas
jb
jne
push
rcr
xlat
add
sbb
push
fisttp
mov
sahf
in
add
mov
push
int3
xchg
pop
push
cld
inc
mov
xchg
js
push
push
pop
mov
sahf
or
pop
xor
and
sbb
mov
push
or
test
adc
cwde
dec
xchg
push
das
repnz
(bad)
retf
mov
xchg
push
add
fcom
cmp
push
dec
lods
mov
call
inc
cmp
in
sub
sub
cdq
mov
mov
ret
or
or
jb
push
ja
adc
or
out
or
jmp
or
js
or
and
clc
mov
adc
sbb
call
ins
mov
add
inc
jge
or
shl
mov
jmp
pop
fdivr
shr
jmp
xor
(bad)
add
push
ins
outs
loopne
test
aam
inc
in
shl
dec
xchg
out
cdq
nop
dec
call
mov
inc
in
xchg
test
sbb
adc
push
and
cmp
xchg
add
fidivr
push
pop
shr
js
(bad)
push
dec
pusha
xor
or
repnz
pop
enter
sahf
push
shl
mov
int3
cdq
push
dec
inc
pop
sbb
and
xchg
push
adc
fistp
fdivr
pop
push
jle
cmc
mov
xchg
fmul
sub
icebp
push
add
test
jg
jmp
cmp
lock
push
cmp
lahf
adc
movs
sbb
mov
cmp
sub
or
dec
scas
xlat
stc
je
inc
push
push
lock
test
mov
add
and
pop
cli
cli
xor
test
mov
push
and
jmp
sbb
push
pop
and
popa
mov
pop
fdivr
mov
cmp
mov
add
sub
mov
jne
adc
xchg
add
mov
(bad)
in
jbe
lock
jmp
cmps
or
inc
mov
push
icebp
dec
mov
mov
sub
jne
fwait
push
xchg
push
xchg
push
push
jnp
inc
jge
add
add
mov
adc
scas
mov
add
mov
and
lods
inc
or
pop
push
or
push
pop
test
xor
add
push
test
jno
jmp
adc
cld
inc
adc
ret
in
lods
inc
cmps
xor
jg
pop
sub
or
sub
in
sbb
push
cmp
fst
sbb
aaa
xor
ss
pop
xor
in
out
sti
xor
jl
outs
inc
jl
xor
shl
pop
mov
inc
sub
lds
nop
xchg
sbb
or
movs
neg
pop
xchg
outs
bound
xor
inc
(bad)
shl
xor
aas
jo
xchg
or
or
imul
add
call
xchg
sbb
mov
sbb
sbb
or
push
push
mov
mov
test
push
(bad)
push
(bad)
dec
pop
pop
push
(bad)
cmp
jmp
mov
lock
jg
imul
ja
adc
inc
mov
jmp
or
in
cmp
xlat
jbe
or
cmp
aaa
xor
ds
mov
dec
stos
inc
push
fiadd
inc
and
pusha
scas
repnz
mov
rep
mov
sub
js
sbb
mov
cdq
mov
fsub
or
sbb
fdivrp
mov
push
sbb
xor
add
add
clc
adc
mov
inc
add
dec
loop
push
icebp
ds
push
cmp
lea
test
jns
movs
push
or
cmp
iret
pop
lock
sub
fsub
popa
pop
dec
fs
into
mov
mov
pusha
inc
or
leave
jno
inc
inc
aas
push
adc
jecxz
je
std
ror
pop
and
je
cmp
call
inc
or
jns
sbb
or
jmp
test
sub
jae
popa
in
pusha
cli
mov
jle
sbb
jbe
xchg
xchg
fmul
jns
push
push
or
add
add
lock
pop
in
test
adc
jge
and
push
jg
add
or
xchg
ret
dec
imul
add
je
jmp
es
xchg
in
push
adc
mov
or
push
test
jae
into
jbe
xchg
jge
sar
outs
inc
(bad)
mov
adc
add
rcl
addr16
mov
out
add
add
leave
sbb
stos
mov
loopne
ficomp
ins
ins
mov
add
mov
nop
adc
or
mov
pop
movs
icebp
adc
push
mov
sub
adc
std
push
ja
add
push
movs
test
data16
or
add
push
adc
std
les
xchg
std
mov
sub
dec
mov
jge
mov
pop
push
jns
jge
mov
ret
push
inc
dec
mov
add
mov
jnp
and
xor
xor
dec
fisub
jge
pop
pop
fcom
sub
fldenv
jecxz
mov
sub
scas
push
mov
push
rcr
pop
add
aam
cli
sar
jne
add
clc
add
das
and
and
sub
inc
sar
xlat
mov
jno
fstp
jbe
pop
add
mov
jmp
cmp
adc
push
cmps
ja
lahf
sub
das
adc
in
push
pop
in
or
sbb
lea
pop
int
push
pop
push
and
push
mov
cmp
pop
ins
pop
push
add
imul
jmp
xor
sub
and
inc
aad
test
pop
outs
mov
je
mov
push
iret
clc
outs
pop
fdivr
push
cmp
xor
push
sbb
mov
inc
mov
inc
push
ret
push
ret
(bad)
rcl
and
or
(bad)
mov
jae
mov
lock
imul
add
pop
lock
sar
repnz
add
cmp
jne
inc
(bad)
int
iret
mov
lea
adc
retf
add
pushf
ds
mov
pop
aas
fcom
jmp
addr16
xchg
jns
jne
adc
adc
mov
inc
add
ins
dec
pusha
xor
ret
es
and
aas
lock
outs
add
cmp
jae
ror
ja
mov
icebp
sar
inc
or
(bad)
data16
rol
jl
and
aam
mov
adc
(bad)
sbb
aas
fnsave
test
fidivr
mov
mov
mov
and
inc
je
sbb
or
xchg
push
cmp
adc
xlat
push
les
outs
ja
cli
add
in
jmp
enter
add
push
cmps
inc
rcr
fdivr
sbb
pop
mov
outs
xchg
pop
mov
mov
push
xor
jno
mov
xor
inc
or
pusha
lea
ror
lea
push
jg
call
mov
aas
lock
and
pusha
bound
ins
ret
fisttp
sub
fs
or
dec
int
add
mov
jno
push
jmp
adc
add
push
shl
and
add
jne
mov
pushf
inc
dec
inc
in
data16
or
je
out
add
or
rcr
or
aas
adc
xchg
rcr
push
test
test
in
mov
pop
mov
mov
inc
pop
push
(bad)
sbb
es
test
jmp
mov
jg
dec
shl
xchg
test
jns
push
popa
cdq
sti
jmp
mov
mov
or
or
popf
ja
out
aam
push
sbb
push
push
pusha
push
pop
sti
mov
pop
mov
sub
retf
xchg
cli
bound
pop
sbb
cli
cli
sbb
fld
inc
or
push
inc
imul
movs
fld
lea
sbb
jp
fyl2xp1
iret
mov
or
mov
or
pop
sbb
mov
add
or
xchg
rcl
(bad)
iret
jo
cmp
sti
and
add
sahf
jmp
shr
jbe
stos
xchg
clc
nop
shl
nop
adc
mov
(bad)
push
jns
or
xchg
popa
adc
cwde
stc
dec
std
cdq
or
sar
rol
leave
je
or
add
dec
sbb
push
lock
and
ja
sub
push
add
cli
sbb
btr
cmp
adc
add
add
test
je
and
mov
push
jg
enter
push
inc
pop
pop
dec
or
retf
push
cld
inc
repnz
int
and
push
push
fs
rcr
push
mov
push
lea
and
icebp
xor
mov
xor
add
or
or
nop
jno
xlat
add
sbb
cs
ret
rol
jbe
jns
and
push
jg
sub
cmp
ja
xchg
sub
add
rcr
add
mov
xchg
ficomp
push
or
xor
sub
je
lock
sbb
adc
fimul
pop
push
push
ins
pop
add
retf
adc
aaa
inc
add
retf
dec
and
shr
popa
mov
add
int3
pop
aaa
xchg
stos
mov
pop
adc
jmp
aaa
mov
cdq
sub
sar
lea
in
mov
cmp
je
dec
push
sbb
xor
inc
push
pop
push
jbe
jae
setno
add
bnd
stos
mov
or
add
(bad)
push
xor
shr
jge
jne
lea
cmp
imul
std
ja
add
lea
add
pop
(bad)
pop
inc
rol
mov
jg
add
add
popf
retf
pop
jle
ds
aas
adc
into
rol
mov
or
inc
inc
push
repz
push
add
adc
adc
xchg
jg
xchg
inc
ret
clc
inc
call
pop
mov
add
mov
adc
mov
loop
and
sub
mov
mov
je
dec
call
sub
push
jp
lods
add
push
fisttp
pop
dec
push
dec
push
pop
add
mov
pop
ss
xor
or
cmps
fnsave
push
inc
push
jmp
sub
jnp
xchg
dec
sbb
nop
je
movs
cmp
pushf
push
add
mov
sbb
ins
jnp
fimul
scas
sbb
push
ins
lods
mov
pop
add
addr16
fmul
jae
in
sahf
and
jno
push
mov
mov
push
daa
and
jno
push
push
and
imul
sub
inc
push
sub
inc
jmp
int3
inc
pop
cmc
lods
mov
or
lea
scas
shl
xchg
or
pop
in
in
cmp
scas
nop
scas
sub
push
cmp
daa
jl
xor
add
mov
icebp
adc
mov
push
pop
mov
test
movs
cs
mov
and
push
mov
jbe
push
mov
mov
push
sbb
push
lock
mov
add
test
mov
lock
loope
dec
cmp
cmps
pop
inc
bound
xchg
mov
mov
pop
scas
sbb
pop
sub
ds
jne
mov
cs
fld
dec
pusha
adc
push
add
pop
mov
add
mov
jne
sub
jle
add
inc
and
cli
test
jbe
nop
add
mov
inc
mov
fnsave
jge
call
mov
xor
pop
push
fs
push
es
and
enter
jo
pop
cmp
mov
mul
shr
imul
push
aam
add
and
ret
je
aas
pop
cmps
nop
lea
push
xor
add
jl
ror
jmp
cmp
jne
mov
mov
lea
rcl
je
stos
(bad)
sbb
push
jne
inc
mov
or
popa
loopne
mov
sub
in
je
sahf
data16
(bad)
fs
cmp
ret
push
inc
stos
and
aad
sub
fcom
mov
and
inc
pop
adc
xchg
pushf
jl
jo
scas
add
into
neg
jb
popa
xchg
call
mov
jb
out
cmp
sub
inc
cmp
push
scas
pop
mov
cmp
pop
cmp
lahf
into
sbb
stos
fidivr
mov
ss
jle
into
ret
lods
aas
add
pop
adc
(bad)
add
dec
stos
mov
mov
and
fcomp
and
fnstcw
add
add
cmp
add
inc
push
repz
add
imul
and
adc
test
cmp
jmp
cs
mov
cmp
xchg
(bad)
mov
add
jge
cmp
ffreep
fbld
(bad)
out
jne
cmp
je
inc
lock
fadd
lea
cld
sbb
push
xor
push
and
rcr
cmc
cmp
push
pop
jg
cmps
lock
xchg
je
pusha
sub
aaa
sub
sar
and
fcomp
sub
imul
cmp
outs
arpl
fild
inc
jno
add
jmp
hlt
sbb
inc
sbb
out
repz
jmp
jmp
dec
inc
dec
mov
test
ins
scas
adc
in
jl
enter
jnp
std
xchg
or
cli
hlt
add
js
add
ins
fwait
addr16
sub
add
mov
and
or
ror
lock
cmp
or
and
ins
jg
mov
add
jne
xor
sub
xor
sub
not
and
mov
xor
add
push
add
and
sbb
xor
out
cmp
xchg
jne
mov
inc
dec
cmp
or
dec
jnp
cmp
pop
push
ror
xor
cmp
aad
cmp
xchg
ret
retf
push
inc
sbb
add
sbb
mov
mov
xor
clc
inc
inc
cmp
(bad)
jecxz
adc
outs
sahf
xchg
nop
add
lock
or
shl
cli
(bad)
cmp
push
add
push
push
push
clc
aaa
and
enter
push
inc
and
mov
arpl
addr16
push
cmps
mul
sub
clc
sahf
(bad)
fcomp
pop
ret
das
add
ret
pop
add
push
addr16
ret
adc
mov
mov
cmp
fcomip
xor
dec
dec
or
dec
repz
(bad)
and
cmp
mov
dec
add
and
loope
add
lods
inc
push
fidivr
mov
ror
scas
or
xchg
jbe
das
or
push
cld
pop
jmp
dec
add
test
jns
test
mov
jns
loopne
jmp
test
sbb
aam
stc
mov
or
mov
pop
(bad)
dec
or
adc
loop
shl
or
adc
mov
or
movs
add
test
sub
ror
and
xor
std
add
xchg
scas
jg
adc
mov
daa
cmp
loopne
lahf
pop
sbb
cmp
mov
and
shl
push
cmp
hlt
add
idiv
and
fisttp
daa
adc
rcl
lds
push
retf
jnp
cmp
and
rcr
cmp
push
mov
xchg
popa
push
pop
xchg
fisubr
ja
or
cmp
cmc
mov
je
outs
pop
cmp
cmp
cmp
inc
cmp
loopne
push
cmp
sti
adc
fwait
add
sti
out
mov
push
and
inc
je
jmp
cmp
pop
mov
pop
mov
sbb
je
sar
inc
add
xchg
add
imul
mov
loop
dec
pusha
ss
mov
add
cmps
add
and
inc
inc
add
clc
xchg
test
out
lahf
bound
mov
push
aam
cmp
in
or
lock
(bad)
cmp
mov
and
fucomp
cli
cmp
lods
jle
add
pop
push
add
out
mov
cmp
mov
shr
push
fdivr
sbb
mov
call
das
jb
adc
mov
sbb
pop
cmp
mov
mov
jae
push
sub
pop
fiadd
xchg
daa
stc
add
fcom
and
mov
cld
pop
add
mov
cmp
add
adc
jb
push
mov
pushf
mov
icebp
fisttp
test
sbb
in
pusha
add
mov
add
add
push
xor
cmp
imul
xor
ins
mov
scas
add
sub
sti
loop
mov
xchg
push
mov
add
mov
adc
pushf
mov
jne
and
fist
ficom
mov
xor
es
add
mov
pop
pop
fcom
(bad)
sbb
and
pop
leave
or
inc
inc
add
or
push
mov
sub
xchg
add
push
cmp
sbb
js
ror
mov
cmp
clc
xchg
pop
pop
fisttp
push
inc
mov
jle
nop
mov
mov
ret
inc
inc
dec
clc
jl
pop
push
cmp
pop
inc
cdq
xlat
pop
add
inc
add
mov
xor
add
rcr
sbb
pushf
in
or
icebp
fild
cmp
jg
lea
add
popf
leave
pop
add
ret
int3
fsubr
adc
push
dec
test
scas
add
xor
sub
cli
and
cmps
pop
sbb
outs
(bad)
loope
sub
mov
or
jge
jge
cmp
mov
and
mov
xor
rol
loop
mov
jl
mov
pop
lock
and
add
cmp
and
rol
sbb
xchg
add
ins
dec
int3
cmp
jne
call
dec
shl
push
xchg
hlt
adc
bts
xor
mov
outs
adc
test
mov
push
mov
daa
xchg
lds
and
sub
bound
je
(bad)
data16
dec
les
mov
push
test
mov
mov
inc
xor
fist
mov
or
mov
scas
push
sub
xor
js
add
pop
cwde
mov
enter
xor
outs
add
fidiv
push
mov
sub
add
shl
jbe
neg
les
shr
push
fimul
clc
nop
int3
push
xor
lahf
push
js
dec
add
jno
pop
arpl
sub
mov
(bad)
mov
loop
popf
sub
push
add
pavgb
and
mov
sbb
xor
sub
cmp
jl
cmp
jg
pop
xchg
or
mov
add
inc
dec
nop
je
sbb
push
cmp
sbb
xor
push
lock
cmp
and
dec
or
jnp
ror
or
sub
cmp
push
mov
sbb
movs
out
mov
in
adc
jg
mov
(bad)
jo
xor
cs
and
call
inc
xlat
je
out
leave
jmp
ss
ss
aaa
push
dec
(bad)
cmps
xchg
jmp
or
imul
push
push
mov
jge
cmp
bound
jno
fimul
(bad)
cld
fs
mov
mov
push
clc
test
or
dec
(bad)
mov
ds
cmp
je
cmp
je
mov
push
xor
cmp
xor
lahf
jmp
xchg
and
pop
xchg
rol
(bad)
ss
mov
fsubr
aaa
mov
clc
adc
jle
pop
lahf
adc
or
pop
lock
push
pop
xor
fadd
add
push
push
ss
add
and
push
or
sar
jecxz
adc
inc
or
mov
dec
sub
pop
repz
cmp
ret
add
retf
mov
cld
les
in
mov
in
cdq
cmc
mov
mov
pop
inc
jp
arpl
inc
pop
setb
cmps
add
lock
cmp
adc
lea
rol
std
add
cmp
mov
fist
js
aam
fisubr
dec
(bad)
pusha
or
out
add
pop
sub
dec
sbb
push
sbb
mov
sbb
cmp
test
hlt
jmp
xchg
push
and
lock
pop
push
add
mov
arpl
std
ins
adc
cmp
data16
sub
xchg
mov
imul
mov
out
lock
nop
mov
js
test
loope
enter
rol
and
mov
shl
mov
cmp
or
arpl
jmp
call
xchg
and
adc
cmp
cmp
sbb
mov
mov
sahf
fld
jecxz
(bad)
loopne
call
addr16
jp
dec
xchg
xor
jge
mov
adc
leave
jne
retf
scas
sub
push
mov
retf
push
xchg
and
ret
fwait
sbb
js
push
mov
xchg
push
test
jae
pop
sbb
sub
push
sbb
jecxz
scas
mov
cwde
inc
cs
cmps
and
inc
or
adc
jae
and
dec
loopne
inc
adc
add
(bad)
push
add
sub
mov
dec
or
mov
and
cmp
cmps
mov
cmp
inc
add
js
mov
jo
adc
lods
cmp
sub
nop
loope
push
push
sbb
fisttp
push
fdiv
sbb
lahf
test
cmp
xor
cmp
je
push
xor
fadd
repz
mov
inc
jl
cmp
jg
add
inc
ds
pop
mov
mul
shr
imul
rcl
in
ret
sahf
and
inc
js
mov
icebp
ret
add
sbb
pop
pusha
add
mov
push
lea
nop
in
mov
rcl
dec
add
adc
mov
inc
adc
push
mov
inc
xor
or
pop
sub
adc
add
pop
sbb
pop
lea
rcr
dec
xchg
pop
inc
pop
mov
data16
push
adc
loopne
imul
xchg
cmp
inc
xchg
dec
test
pop
mov
das
cli
call
mov
lds
cs
aaa
pusha
push
and
mov
inc
and
int
cmp
inc
add
adc
enter
xor
jne
gs
mov
popa
dec
xchg
stos
adc
cmp
sub
jns
add
pop
sub
push
pop
pop
mov
jmp
loopne
cmc
out
stos
push
pop
mov
clc
sub
pop
dec
lds
jge
inc
inc
and
or
adc
dec
pop
pop
pop
jmp
and
sub
push
jne
push
sub
inc
ins
jae
test
(bad)
sbb
jnp
pop
mov
je
cmp
retf
loopne
lock
push
sar
loopne
pop
xchg
loop
jb
sbb
inc
xlat
xchg
cmps
mov
hlt
inc
(bad)
xor
inc
mov
add
push
lock
sbb
mov
int
iret
xchg
adc
outs
mov
fwait
cld
inc
(bad)
sbb
adc
popa
mov
add
dec
clc
xchg
xor
aaa
es
dec
popa
cmp
pop
adc
sub
pop
test
scas
or
pusha
adc
and
fsubr
push
mov
add
adc
sub
bound
gs
repnz
lock
mov
pusha
jge
cmp
inc
mov
je
pop
or
cmp
jl
ins
pop
jno
pushf
cwde
rcl
push
fwait
sub
jle
adc
cld
into
je
cmp
pusha
aam
cwde
inc
sub
cmp
push
push
pop
push
and
rcl
mov
hlt
mov
adc
repnz
cmp
int3
popa
xor
repnz
add
in
push
(bad)
ss
pop
lods
push
add
les
xor
add
js
inc
and
data16
dec
ret
xor
das
ret
inc
jg
pop
test
fimul
rol
push
movs
call
jbe
mov
dec
int
out
mov
push
int
jmp
or
lea
jno
pusha
jl
or
push
call
movs
(bad)
and
mov
ror
sar
xor
cmp
cmp
pop
jmp
push
mov
pop
ds
or
adc
scas
retf
mov
das
mov
rcr
stc
out
jns
add
push
sbb
loope
into
push
adc
psubsb
xchg
adc
repnz
xchg
sub
add
or
inc
add
jmp
pop
in
and
sub
dec
lods
add
or
mov
add
xchg
xchg
jmp
movs
rcr
pop
imul
and
rcl
test
pcmpeqb
int3
pop
add
mov
iret
stos
mov
cwde
sub
test
push
mov
mov
cmp
fistp
and
test
(bad)
sbb
push
sub
add
xchg
std
scas
xchg
daa
mov
push
imul
xor
adc
cmp
or
dec
aas
sbb
int3
das
or
shr
aam
int3
lods
loopne
int3
pop
mov
or
inc
jb
mov
int3
jmp
cmp
xchg
js
lock
mov
not
rol
xchg
adc
xchg
xchg
(bad)
(bad)
xor
adc
mov
add
add
xor
adc
mov
mov
cmp
jns
jb
inc
mov
xor
test
xor
mov
xor
jns
sbb
rcl
inc
ret
int
ja
sbb
push
icebp
pushf
jne
popa
stos
push
hlt
stos
dec
add
icebp
lock
pusha
pop
lock
sbb
cmps
and
adc
scas
lock
mov
add
enter
mov
stos
(bad)
adc
test
inc
and
push
aam
dec
test
leave
call
hlt
xor
data16
sub
imul
inc
out
bound
imul
xchg
push
mov
push
ins
loopne
dec
scas
inc
mov
and
xchg
adc
cmp
test
push
imul
sar
cmp
(bad)
sub
aad
add
mov
mov
push
inc
mov
sbb
and
push
retf
rol
mov
sub
push
lock
xchg
test
sbb
adc
pop
jnp
pop
repz
ins
(bad)
stos
aam
add
xchg
hlt
dec
mov
adc
inc
adc
dec
cmp
in
test
xor
sub
loopne
call
retf
sub
xor
mov
jb
inc
push
push
repnz
mov
fidivr
cmp
aad
sbb
push
push
(bad)
loopne
mov
dec
fwait
ror
sub
adc
dec
jmp
adc
inc
push
int
add
enter
dec
xor
cmp
jge
push
jo
sub
add
ret
push
imul
push
dec
call
xchg
jne
jo
mov
sbb
jo
mov
push
jb
ins
pop
add
lea
adc
pushf
pop
jmp
outs
scas
dec
movs
jmp
add
lea
shl
sbb
or
test
push
jno
movs
fcom
push
loopne
add
fist
lea
mov
jl
test
add
push
aas
lods
ins
push
sbb
xor
mov
adc
in
leave
call
mov
or
or
add
(bad)
in
sub
call
scas
push
mov
call
js
adc
or
mov
hlt
inc
sahf
dec
or
mov
test
push
mov
mov
push
shl
push
push
mov
push
adc
mov
dec
and
sub
cmp
inc
mov
shr
xchg
xchg
(bad)
retf
int3
mov
cli
cmp
aas
fbstp
jge
push
cmp
in
dec
int3
push
sub
push
or
mov
rol
imul
push
or
fsubr
push
adc
mov
enter
cld
ror
por
mov
(bad)
sti
imul
cli
stos
or
push
in
pop
pusha
adc
mov
push
jno
aas
mov
add
or
imul
push
sahf
(bad)
lock
add
fisubr
sahf
test
jns
adc
mov
out
xor
js
add
outs
adc
mov
adc
fbld
nop
das
(bad)
inc
mov
inc
dec
rol
or
test
retf
(bad)
and
jne
pop
lea
push
rcl
nop
movs
push
dec
adc
das
lods
and
test
sbb
leave
mov
and
xchg
loope
enter
and
pop
mov
sub
pop
jb
loope
jg
pushf
test
les
iret
fld
and
push
fiadd
jl
xchg
pop
jo
adc
daa
push
jle
adc
mov
sahf
inc
ins
test
loope
mov
cmp
gs
mov
mov
dec
cld
xchg
mov
das
push
push
push
in
popa
add
xor
pop
adc
aaa
or
lea
gs
shr
popf
adc
push
js
ja
add
ficom
jmp
(bad)
jge
pmaddubsw
cs
push
aaa
sbb
dec
mov
push
ret
mov
sub
js
mov
or
ror
jg
and
xor
cwde
mov
lahf
daa
mov
push
sbb
movs
loope
adc
pop
or
inc
jns
and
in
movs
movs
call
mov
jmp
movs
xor
inc
mov
in
pop
fst
dec
adc
push
sar
mov
nop
cmp
pop
mov
cmp
sub
add
sub
cmp
out
movs
pop
loope
lea
(bad)
sar
pop
rol
in
dec
(bad)
pop
add
(bad)
aam
jb
cmp
jle
xchg
or
dec
sub
ins
retf
inc
mov
mov
gs
or
cmp
fsub
xchg
imul
data16
push
loop
xor
repnz
into
sub
rcr
movs
pop
movs
clc
ss
int3
add
inc
sub
enter
mov
xchg
push
cwde
fsub
mov
arpl
cmp
inc
movs
fstp
pop
retf
jb
(bad)
mov
and
pop
or
retf
pop
clc
and
or
shl
lods
mov
and
xchg
ins
loopne
into
cmp
jle
movs
inc
jle
jg
ja
cmp
cmps
retf
push
dec
and
and
loopne
lock
ss
push
in
sbb
pusha
ror
shl
je
push
mov
mov
mov
adc
and
out
loope
sub
xor
mov
dec
enter
ret
je
or
sub
outs
adc
push
jnp
imul
out
jno
(bad)
repz
int3
push
int3
cmp
loope
ss
xchg
or
mov
add
mov
pop
inc
or
sbb
test
mov
xchg
push
test
call
pusha
dec
mov
cmp
pop
xlat
rol
or
inc
or
push
dec
or
push
mov
cmp
je
cmp
adc
push
loop
mov
cmp
mov
mov
cmp
je
into
fucom
add
js
repz
xor
jp
push
push
jo
lods
scas
cld
dec
sbb
add
pop
push
sti
push
cmp
pop
push
ret
xchg
je
aas
cmp
add
sub
jne
retf
jno
or
ret
lahf
push
cmp
das
xchg
add
and
(bad)
test
jp
das
or
jmp
rol
xchg
les
jo
cdq
ret
xor
loopne
nop
out
fucomi
xchg
mov
jne
jg
adc
cli
xor
mov
or
jg
xor
cmp
ss
bound
lock
sub
jne
and
int
jne
and
or
ins
jne
mov
push
dec
loopne
pop
push
cmp
je
stos
or
push
or
dec
add
data16
imul
(bad)
adc
iret
mov
mov
test
jne
xor
pop
mov
mov
movs
jecxz
cmp
jl
push
pop
adc
jnp
pop
push
push
cmp
call
mov
add
lods
retf
inc
cmp
xchg
push
inc
add
mov
mov
push
ja
jp
loopne
test
jl
fiadd
in
cmove
push
sub
sub
je
rcl
jne
pop
mov
sub
push
sub
or
test
call
xchg
daa
or
and
xor
repnz
push
jnp
mov
fdivr
push
ds
dec
pop
mov
inc
push
mov
adc
ret
mov
mov
ret
cmp
ror
push
sub
es
push
jl
data16
sub
xchg
sbb
scas
imul
sub
add
pop
mov
outs
cdq
mov
dec
pop
jae
adc
call
loopne
inc
sub
mov
dec
bound
dec
test
es
mov
cmp
inc
mov
retf
mov
jmp
push
add
(bad)
mov
imul
pusha
unpcklps
sub
cmp
ficomp
mov
push
jb
push
lock
push
mov
test
jne
ret
cmp
jne
ret
adc
test
rsm
xchg
push
ja
or
push
repnz
mov
inc
fsub
jmp
dec
es
mov
sbb
dec
je
outs
push
cmp
mov
inc
cmp
je
jmp
mov
xor
jb
inc
push
mov
shl
imul
jne
dec
add
adc
cmp
call
cs
push
sbb
add
loopne
shr
push
sbb
cmp
mov
xor
pop
jmp
nop
fsubr
adc
xor
cmp
push
xor
enter
sub
mov
ss
pop
dec
leave
out
test
add
and
push
or
movs
sti
dec
je
inc
inc
push
and
sbb
pop
(bad)
sbb
fisttp
ror
(bad)
xor
pop
pop
ja
inc
and
mov
pop
add
jmp
inc
xchg
inc
push
bnd
sub
sbb
push
sbb
js
adc
inc
cmp
jl
adc
call
pop
push
sub
mov
shr
pop
loopne
or
lock
mov
mov
push
ins
test
mov
mov
rol
lea
jbe
pop
jb
aas
xor
jg
cmp
push
ret
or
cmp
and
adc
push
mov
enter
in
add
fcomp
jns
xor
adc
add
loopne
cs
loopne
mov
jmp
jb
jbe
xor
clc
stc
test
dec
or
(bad)
sub
call
mov
imul
nop
xchg
mov
push
cmps
lods
mov
add
cmp
mov
push
imul
inc
out
nop
or
push
adc
adc
shl
daa
cmps
sbb
call
push
dec
add
ins
cmp
bound
stos
enter
xlat
inc
rcl
inc
scas
in
xlat
rcl
xor
in
cmp
or
inc
or
or
ins
(bad)
push
rcl
icebp
xlat
sbb
add
test
add
xor
loop
add
mov
cmp
out
sub
ss
sahf
clc
adc
rcr
shl
mov
jb
retf
movs
dec
mov
pusha
cmp
mov
popf
push
xchg
jb
inc
pop
mov
jae
out
mov
ja
(bad)
out
jae
cmps
add
and
add
mov
and
sbb
pusha
imul
jo
xor
push
imul
adc
sub
pop
fs
or
push
jbe
xchg
add
or
jmp
add
push
adc
mov
lahf
xor
imul
mov
outs
lods
fcom
lock
sub
cmp
add
push
bound
mov
sub
inc
push
inc
xor
retf
inc
push
jg
inc
inc
ss
inc
lock
pop
dec
add
scas
adc
inc
mov
add
pop
xor
shl
pop
test
nop
adc
push
sbb
jo
xor
xlat
jg
fmul
push
dec
cmp
inc
(bad)
inc
pop
nop
push
cld
mov
push
sahf
jle
cmp
dec
ja
push
mov
mov
dec
xor
cmp
rol
clc
jle
aas
push
dec
sbb
fisttp
pushf
sbb
lds
cmp
fcomp
pop
mov
inc
ja
cmp
(bad)
ret
mov
inc
pop
pusha
push
dec
or
jb
inc
rcl
sbb
add
push
ins
jbe
inc
movs
add
inc
sub
and
and
dec
adc
push
in
mov
push
fisub
jne
adc
outs
or
and
pop
pusha
push
add
lods
sub
mov
pop
and
aam
push
xchg
add
push
dec
sub
xchg
jns
inc
in
pop
jne
xchg
mov
nop
add
cmp
mov
dec
push
push
popf
add
add
pushf
lea
push
cmp
mov
sbb
outs
adc
or
jl
sar
mov
out
out
mov
xchg
inc
add
adc
mov
push
es
mov
(bad)
or
sar
mov
push
mov
cmp
jne
stos
add
push
xchg
std
dec
js
mov
add
adc
cmp
pop
jne
cmp
ja
pop
xor
sbb
or
and
test
or
mov
lea
sub
lock
ins
inc
add
ror
cmps
mov
cmp
xor
enter
ror
inc
(bad)
cmp
adc
je
cmp
jne
mov
ja
mov
mov
call
pop
test
sahf
mov
dec
push
xchg
cmps
std
call
cmp
ror
pop
jb
cmp
and
aad
(bad)
sub
inc
call
and
inc
jmp
inc
lahf
test
add
mov
test
push
dec
push
push
xchg
lock
popa
pop
mov
push
jg
(bad)
xor
sub
or
dec
xor
mov
dec
aam
pop
cmp
cdq
fcom
or
and
mov
imul
pop
adc
stos
mov
cmp
aas
ins
mul
es
or
clc
cmps
call
ret
lds
(bad)
adc
setne
shl
and
fdivp
repnz
and
adc
jle
test
mov
es
dec
pop
xor
les
mov
cmp
xchg
loopne
pushf
sbb
push
fmul
imul
xor
and
push
or
or
mov
sbb
test
sti
cmps
or
jne
cmps
mov
xchg
clc
iret
jbe
div
mov
and
ret
push
jmp
push
mov
sahf
mov
(bad)
std
ror
adc
ror
inc
sub
call
sub
push
test
inc
xor
stos
jne
test
pop
jne
xchg
push
push
rol
ficom
in
pop
mov
rcr
pop
xor
stos
add
adc
or
or
loop
add
loopne
jmp
push
pop
add
sub
popf
cmp
lahf
adc
arpl
xor
push
mov
push
fidivr
inc
sub
dec
sti
and
add
loope
ds
cmp
pop
jne
and
push
inc
mov
xor
je
add
inc
addr16
cmp
push
cmp
jg
test
sbb
pusha
mov
and
cs
add
or
jmp
outs
je
push
mov
jmp
addr16
mov
jp
in
js
push
jmp
sbb
sbb
pop
lock
adc
pop
in
cmp
mov
stos
mov
dec
(bad)
jle
fmul
cmp
ja
adc
pop
or
mov
push
shr
mov
inc
xchg
push
push
jns
je
xor
scas
inc
test
cmp
cmp
cdq
dec
es
inc
sub
loope
and
hlt
inc
pop
pop
cmp
sete
mov
xor
icebp
jne
xor
inc
inc
cmp
subps
aaa
pop
push
mov
sbb
daa
loopne
retf
xchg
retf
je
adc
das
or
cwde
push
mov
jecxz
ret
cdq
inc
(bad)
aaa
mov
adc
or
inc
lock
mov
ret
inc
ret
push
jb
sub
mov
push
ins
call
pop
and
or
mov
xor
jbe
sbb
jb
pop
call
int
repz
cs
pop
loopne
rcl
jnp
inc
sahf
sbb
add
test
movs
imul
xor
mov
enter
icebp
jg
sbb
daa
pop
js
mov
sbb
popa
movs
dec
adc
inc
push
xchg
and
mov
dec
or
test
lods
jns
sbb
or
mov
mov
mov
jb
or
out
or
jmp
fild
or
pop
test
lods
je
mov
mov
fiadd
int
and
mov
push
mov
rol
xor
or
mov
xor
mov
scas
lea
adc
mov
sbb
pop
and
dec
mov
std
cmp
jg
movs
stc
into
dec
cmp
aam
jl
popf
stos
pop
jp
sti
enter
sbb
pusha
pusha
cmp
shr
outs
pop
scas
jo
das
mov
inc
add
movs
js
and
xor
dec
jae
inc
dec
inc
dec
inc
cs
pushf
push
cmps
sbb
outs
repz
xor
xchg
add
add
and
xchg
pop
jmp
add
in
ret
popa
scas
ja
loope
jne
jl
nop
add
xchg
test
daa
xchg
movs
and
sub
add
pop
(bad)
mov
jmp
xchg
and
or
mov
icebp
pop
rcl
out
cmovs
inc
push
cmp
je
mov
and
in
adc
popa
adc
loop
xor
shl
inc
pop
or
push
out
add
lea
cwde
mov
sub
xchg
add
pop
enter
xor
adc
stos
ja
pop
cmp
fmul
and
daa
push
mov
sbb
xor
inc
xchg
dec
loopne
(bad)
mov
lods
mov
fbld
or
and
adc
and
push
lock
lock
add
les
repnz
inc
adc
or
mov
xchg
push
push
mov
inc
dec
(bad)
cmp
inc
mov
jp
pop
out
fs
lods
icebp
sbb
xor
and
(bad)
inc
mov
idiv
lods
in
mov
push
pop
retf
mov
cmp
int
in
imul
adc
push
pusha
sub
adc
repnz
ret
adc
xchg
push
inc
mov
pusha
mov
cmp
inc
push
push
dec
and
call
jmp
pop
or
inc
inc
sbb
leave
add
(bad)
dec
cmp
jge
ins
mov
xchg
dec
call
fs
push
pop
inc
add
xor
lods
xor
ss
sbb
cmp
mov
push
dec
pop
shr
retf
ins
pop
mov
sbb
das
sbb
cmp
es
(bad)
push
sub
ret
in
in
or
push
aam
sbb
adc
inc
clc
cmp
je
jmp
push
dec
xor
arpl
in
sub
push
jmp
xor
cmp
js
fwait
fwait
js
xor
sub
adc
add
retf
inc
or
outs
jmp
push
or
inc
nop
push
push
or
int3
jmp
jo
shl
cli
nop
jmp
mov
or
xor
add
pop
or
and
sbb
les
(bad)
aam
add
jae
fbld
lock
dec
inc
mov
add
lds
mov
push
push
cmp
jbe
lea
push
inc
adc
xchg
pop
pop
pop
mov
sbb
mov
add
mov
inc
sbb
and
cmp
(bad)
dec
adc
xchg
pop
pop
sbb
rol
and
mov
call
cld
mov
mov
sbb
xchg
loopne
mov
pop
or
or
xor
js
(bad)
or
jo
lea
mov
shl
inc
int3
add
sub
dec
xor
push
sahf
push
or
push
test
or
xor
test
data16
mov
das
mov
test
movs
sbb
hlt
lock
add
or
xor
push
sub
mov
icebp
mov
fistp
into
jne
add
and
push
mov
scas
cwde
hlt
movs
mov
hlt
and
inc
ins
lods
pop
push
popa
loope
shr
mov
stos
sub
adc
(bad)
icebp
xor
push
mov
or
mov
jnp
pop
ret
test
(bad)
push
or
ret
mov
xor
mov
loop
sbb
sub
xchg
dec
xchg
mov
pop
and
enter
outs
mov
mov
inc
sub
pushf
inc
lds
xor
fmul
mov
mov
cmp
jl
or
std
imul
and
sti
and
add
xchg
jne
clc
pop
(bad)
xor
ja
dec
call
sub
xor
es
and
add
inc
out
out
pusha
push
lock
sub
jae
in
es
add
jbe
call
les
ficomp
cwde
or
addr16
push
cdq
test
movs
jnp
f2xm1
fiadd
ins
jo
jns
push
sbb
push
fsub
push
scas
popf
mov
and
test
sub
test
pop
in
cmp
jle
or
outs
jns
pop
inc
out
and
and
push
sar
jbe
sub
cdq
mov
and
rol
test
icebp
push
inc
xor
pop
scas
sbb
push
outs
mov
or
pop
mov
push
(bad)
mov
xlat
shr
adc
fcomp
dec
push
ja
add
cli
jbe
test
mov
mov
dec
sti
and
push
fisttp
push
sbb
xor
xor
push
mov
in
dec
loope
test
loopne
xor
jge
push
stos
adc
leave
mov
loop
mov
mov
test
xor
pop
cli
sbb
xor
sub
and
aaa
pop
and
test
aaa
scas
popa
cmp
(bad)
mov
dec
mov
cmp
neg
shl
jl
stc
aam
mov
sbb
(bad)
and
jl
mov
pusha
adc
stc
push
rcl
test
cld
mov
(bad)
mov
ror
cdq
pop
js
ret
ror
inc
lds
inc
cmc
std
sub
mov
cmp
retf
(bad)
lock
out
sub
xchg
int
add
jl
dec
std
movs
and
loop
jge
gs
sub
xor
push
and
shl
stc
in
loop
jno
jecxz
sub
aad
push
add
ret
sub
ins
push
and
adc
ret
xor
add
or
mov
add
fadd
sbb
lods
mov
push
and
and
jmp
lds
arpl
cmp
loope
out
je
adc
ret
adc
dec
outs
sub
jb
(bad)
jp
repnz
ror
fcmove
jl
cmp
call
sub
fidiv
cli
fmul
fadd
inc
mov
inc
js
popa
cmps
mov
ja
or
repnz
and
outs
mov
push
and
mov
jb
add
push
or
mov
push
or
xor
pop
jne
daa
push
or
mov
not
mov
push
add
retf
inc
lods
mov
push
retf
stos
adc
push
pop
sub
test
cmp
scas
push
pop
push
and
jp
xor
icebp
jo
pop
inc
ret
fdiv
inc
push
sbb
add
fs
ret
cmps
fwait
push
(bad)
fdiv
sub
dec
sbb
push
stos
call
inc
dec
sbb
in
lods
pop
inc
dec
pop
call
cmp
push
xchg
loopne
sbb
loopne
loop
pop
in
int3
sub
loop
mov
dec
push
or
mov
add
dec
cmc
cmp
js
inc
add
sbb
sbb
jno
mov
inc
cmp
pop
cmp
je
mov
jne
pop
pusha
add
push
adc
sbb
pop
movs
xor
ffreep
ds
sub
inc
add
push
xor
xchg
ret
add
ins
in
pop
adc
sbb
pop
sbb
push
adc
pop
push
adc
test
add
sbb
xor
mov
cmp
fld
xchg
loope
xor
cmp
ins
or
dec
and
cmp
push
adc
das
adc
into
hlt
add
jg
pop
add
iret
cmp
and
xchg
xor
sbb
sbb
jmp
inc
retf
cmp
ds
dec
mov
lds
in
push
and
loope
rcl
fs
fnstcw
sub
mov
shl
inc
xor
xchg
mov
sbb
loope
lock
pop
(bad)
fwait
add
imul
add
retf
push
ret
and
sbb
cmc
pop
out
retf
push
cmp
push
push
xor
dec
inc
push
inc
add
call
and
loopne
add
outs
or
adc
jg
or
lock
push
add
stc
mov
or
loope
mov
mov
xor
push
adc
and
clc
or
or
push
sahf
rol
mov
sub
pop
sub
cmp
and
dec
jle
pop
pop
fs
lahf
sbb
inc
test
pop
cmp
sbb
ret
jmp
xchg
jne
fimul
mov
xchg
push
add
popa
in
mov
std
imul
push
ror
pusha
mov
cmp
mov
retf
adc
js
add
add
cli
add
jl
push
ror
push
das
mov
add
sar
pop
loop
or
fidiv
fidivr
add
outs
ret
jmp
or
aaa
cmp
mov
sub
xor
inc
jmp
inc
lods
(bad)
dec
int
pop
add
and
popf
inc
mov
test
mov
sbb
data16
es
popa
jno
or
inc
loopne
(bad)
mov
or
in
aad
lock
stc
aad
lock
aaa
sbb
dec
dec
push
fst
pop
ins
jle
int3
or
mov
jnp
inc
shr
(bad)
sbb
jmp
scas
stc
push
aam
jno
test
fadd
inc
imul
test
pop
fdiv
sbb
lea
cmc
push
loope
(bad)
mov
add
bound
aas
sbb
push
sbb
pop
vpshufhw
add
mov
cmp
mov
jg
cmp
inc
push
cmp
add
add
or
int
stc
and
ss
bound
sbb
enter
call
dec
push
jae
cs
cld
jbe
or
int
push
hlt
ret
add
push
xor
fadd
jbe
lock
inc
call
adc
push
sti
jmp
push
pop
mov
sub
std
push
test
dec
add
jb
(bad)
je
mov
mov
mov
mov
retf
xchg
add
xor
data16
pop
pop
fisttp
fcmovu
fidivr
adc
xlat
add
push
out
push
ins
add
and
loop
add
lea
and
and
in
shr
push
aam
popf
jo
jmp
or
inc
pop
mov
add
xchg
or
sbb
hlt
sbb
jns
ror
pop
inc
push
clc
push
pusha
push
mov
mov
cdq
push
pop
ja
add
and
add
pop
cmp
lods
movs
cs
sub
addr16
lea
adc
xchg
cmp
cmps
mov
ins
mov
pop
jnp
push
nop
push
jnp
ins
jmp
jnp
cmp
jne
(bad)
enter
jl
aam
mov
fisub
pop
hlt
push
push
or
ret
xor
or
push
push
xor
mov
sbb
cmpxchg
add
push
sub
jecxz
cmp
test
subps
dec
mov
pop
shl
push
or
mov
call
mov
mov
cmp
fcom
or
cmp
push
dec
mov
push
push
cli
and
dec
pusha
push
jmp
fnsave
les
cmpxchg8b
push
test
dec
inc
add
jbe
imul
adc
mov
mov
ret
mov
(bad)
cmps
or
mov
and
cmp
lea
(bad)
mov
and
push
(bad)
push
inc
add
or
mov
rcl
sahf
push
out
repnz
mov
nop
inc
out
add
xlat
loop
lahf
add
outs
cwde
ins
vmaxpd
or
push
call
mov
call
jl
sub
add
and
adc
jl
adc
mov
jmp
std
pop
and
retf
mov
mov
push
cmp
retf
pop
cmps
sub
inc
xor
es
ja
mov
cmp
sahf
je
sbb
adc
jo
jne
arpl
or
lahf
jg
or
call
dec
nop
call
ss
dec
pmaddwd
inc
mov
and
jo
xor
jo
xchg
lods
or
push
fadd
inc
inc
data16
push
fisttp
shl
inc
adc
inc
or
aas
or
imul
retf
add
div
inc
jne
jmp
cmc
outs
test
cmp
add
daa
mov
sti
and
dec
sub
push
xor
cmp
jmp
sbb
ret
jl
add
push
ss
ror
xlat
or
jae
push
mov
loope
push
stc
(bad)
adc
mov
adc
fcmovu
daa
sub
xor
fbld
sub
repnz
mov
or
test
(bad)
(bad)
cmp
repnz
je
hlt
add
adc
out
jne
shl
jmp
out
pop
sbb
push
in
fs
rol
mov
inc
outs
and
add
ror
pop
nop
inc
ret
frstor
pop
rol
pop
mov
add
les
fistp
push
and
(bad)
mov
sub
xchg
(bad)
imul
inc
lock
push
adc
pop
imul
fcom
inc
adc
mov
lds
je
pop
inc
sub
jne
pop
xor
or
sbb
mov
or
add
cs
cmp
pop
or
lods
loope
ins
sbb
add
sub
add
push
js
sahf
dec
lock
adc
add
dec
lds
jmp
fistp
xor
push
xchg
lea
je
pop
or
nop
sbb
jb
ins
dec
cwde
sbb
sbb
cmp
add
(bad)
bound
ret
mov
fild
push
pop
push
icebp
sub
shl
and
stos
add
out
inc
mov
pop
stos
and
fwait
dec
daa
call
or
sub
adc
loop
pop
mov
mov
dec
push
add
into
sub
mov
push
push
and
test
add
inc
jl
and
cwde
(bad)
cmovo
push
push
(bad)
xor
jge
mov
and
aas
fidiv
mov
inc
retf
cld
dec
and
adc
les
inc
mov
mov
push
lea
je
mov
ficom
pop
sti
cmp
sar
add
push
inc
movs
lock
mov
sbb
rcr
nop
push
cmp
pusha
sub
push
movs
call
cvttps2pi
xor
je
lea
push
push
test
push
push
dec
fimul
mov
out
add
outs
push
or
adc
adc
adc
shl
ins
out
je
or
dec
mov
push
pop
je
jge
xor
sub
cmp
lods
mov
push
inc
enter
aad
pop
cs
bound
nop
or
leave
sub
sub
cmp
and
js
popa
pop
xor
inc
popf
int
cmp
push
icebp
add
sbb
js
jl
lock
je
or
push
retf
pusha
xchg
mov
and
test
scas
mov
aam
adc
jp
mov
js
ja
js
add
push
pop
mov
dec
inc
dec
lods
or
int
in
cmp
add
sbb
cmp
cmp
lods
inc
inc
mov
inc
inc
movs
popa
pop
dec
rcl
and
sbb
std
adc
inc
int3
adc
pop
inc
mov
or
dec
fs
frstor
popf
xor
jecxz
add
sub
jnp
sub
jp
outs
stos
movs
inc
pop
xor
and
add
push
ret
dec
mov
sub
sbb
inc
pop
in
es
sub
clc
stos
push
sub
cmps
lods
cli
sub
inc
cmp
mov
push
jg
add
popa
mov
mov
push
pop
js
push
push
call
pop
add
add
cmp
shl
sbb
cmp
mov
daa
or
test
ds
sbb
or
add
sub
into
(bad)
jae
gs
loop
inc
xchg
sahf
xlat
mov
jo
fs
push
lock
jge
mov
add
clc
shl
xchg
xor
pop
ret
pop
and
(bad)
jae
sbb
mov
dec
add
mov
sub
push
jle
push
push
cmps
inc
pop
jae
push
add
jnp
mov
loopne
adc
sbb
test
adc
bound
inc
xchg
or
fdivrp
shr
leave
aaa
add
add
sub
aam
imul
dec
aaa
mov
xchg
pushf
test
je
jbe
add
(bad)
aam
xor
int3
add
add
pop
or
cmp
fild
and
dec
jl
sub
inc
lahf
fnsave
jge
(bad)
mov
js
(bad)
xor
fnstcw
lods
pop
sahf
and
push
jl
xor
mov
xchg
sub
push
gs
inc
add
pop
nop
push
cmp
add
das
lea
xor
je
sub
fdivr
dec
xchg
jecxz
mov
pop
cmp
aaa
(bad)
cmp
ja
cmp
je
xchg
mov
dec
mov
mov
cli
cmp
and
mov
sbb
push
je
int
push
push
inc
cmp
addr16
or
jmp
push
bswap
rol
shr
or
popa
das
xchg
imul
nop
push
daa
in
mov
cmp
mov
das
sbb
mov
adc
lods
sbb
stos
je
jmp
ja
out
shl
test
xor
ss
hlt
push
xor
ins
cli
inc
pop
dec
cdq
mov
jmp
and
xor
sbb
xchg
jl
sub
retf
jl
xlat
push
adc
in
mov
test
xor
and
or
cdq
push
cwde
cmc
jmp
cmp
mov
mov
inc
cmp
jmp
adc
sub
cmp
popa
xrelease
cmp
scas
add
push
(bad)
mov
adc
repnz
mov
sbb
mov
inc
dec
cwde
cmp
pushf
cmp
ret
js
add
adc
pop
dec
mov
in
fadd
sbb
xchg
jo
mov
or
jle
jmp
push
cs
aaa
xchg
(bad)
js
pop
add
xor
jns
cmps
imul
jno
push
fimul
cmp
jns
dec
inc
adc
scas
pop
and
push
mov
mov
adc
mov
les
aaa
mov
sti
and
idiv
ret
call
cld
adc
cs
xor
jle
add
cli
aam
mov
and
into
inc
lds
push
and
jno
xchg
loopne
cmc
mov
sbb
add
sub
imul
dec
sahf
mov
add
rol
jbe
movzx
leave
xor
cwde
or
call
or
xor
xchg
add
mov
aas
clc
cmp
cmp
mov
or
push
add
movs
es
in
das
add
das
sub
adc
xor
mov
inc
mov
ins
xchg
sar
test
mov
mov
js
or
dec
scas
cmp
(bad)
mov
or
pop
call
shl
ss
loop
inc
jmp
or
mov
mov
jae
pop
dec
ret
enter
fcom
push
dec
loopne
stc
sub
xor
xlat
setbe
and
push
cmp
cwde
fadd
sub
adc
ins
cmps
cmp
dec
cmp
ins
popf
hlt
add
cs
adc
inc
div
cmp
aas
mov
jmp
push
sbb
add
aad
test
sub
add
test
dec
ds
and
cmp
cmp
jb
aaa
mov
jle
or
ins
jbe
daa
push
imul
js
xchg
inc
ror
repnz
(bad)
shr
jp
div
dec
retf
jae
in
xchg
je
cmp
cmp
push
cdq
mov
add
add
push
push
mov
add
rcr
push
sub
frstor
jno
pushf
jbe
mov
jmp
push
pop
clc
xchg
int
ret
das
(bad)
jmp
jmp
and
popa
leave
xchg
sbb
sbb
or
mov
inc
jl
sbb
adc
(bad)
cld
aas
sub
push
sub
(bad)
mov
ror
dec
(bad)
adc
rcr
sbb
mov
add
pop
cmp
sub
scas
jbe
jno
jns
lock
xor
mov
add
or
or
push
movs
int3
add
lock
sub
(bad)
pop
retf
dec
in
xor
shl
adc
les
xor
xor
lds
xor
dec
dec
sub
add
sub
jg
push
imul
jmp
push
sahf
xchg
clc
inc
loope
add
enter
sbb
push
jbe
jnp
rcr
loop
and
lahf
mov
and
cmp
or
jmp
mov
add
outs
bound
ret
(bad)
(bad)
or
dec
and
sub
inc
and
dec
add
fstp
xchg
cmps
lahf
and
sbb
add
adc
dec
or
lahf
inc
push
mov
imul
mov
xchg
sbb
push
int3
outs
pop
pusha
jb
mov
mov
pusha
sbb
das
mov
mov
mov
sub
sbb
mul
test
push
add
adc
pop
push
add
mov
lds
mov
add
sub
dec
jmp
mov
mov
jg
mov
int
cld
aam
cwde
pusha
pusha
leave
jae
out
add
(bad)
xor
je
inc
int3
sub
cmp
jge
lea
les
pusha
gs
cmp
sub
sub
push
push
xor
sbb
sbb
test
and
jge
sbb
out
ret
hlt
lods
mov
mov
cwde
pop
pop
rcr
shr
or
loopne
je
inc
or
cmps
and
pop
xor
cmp
push
or
(bad)
sub
add
ret
nop
cmp
push
mov
mov
sub
or
add
sub
test
loopne
loope
cmps
mov
mov
test
cmp
sub
xlat
sub
in
xor
pop
lea
inc
dec
das
push
cmp
sbb
add
loopne
xchg
fdiv
cmp
or
mov
loope
mov
dec
shl
sbb
cmps
test
aaa
mov
cs
pop
movs
int3
add
dec
cwde
cmp
stos
sbb
inc
and
add
test
push
sub
lods
out
int3
push
aad
dec
jne
mov
push
cmc
aam
sbb
or
xlat
add
cmp
ror
push
xor
add
adc
fwait
dec
push
and
sbb
xor
push
repnz
retf
add
arpl
std
pushf
in
mov
cwde
or
ja
stos
stos
adc
pop
(bad)
(bad)
jle
retf
nop
loopne
mov
ins
mov
imul
shl
pusha
pop
dec
and
in
xlat
pop
mov
xchg
stos
push
and
xchg
jbe
(bad)
jge
push
xor
adc
pop
inc
sbb
es
xchg
cmp
not
sbb
or
dec
adc
xor
or
jg
jo
xchg
jne
not
xor
test
sub
adc
(bad)
rcr
ins
ret
pusha
aad
dec
xchg
inc
repz
cmovbe
pop
repz
and
test
mov
sbb
adc
and
cmc
or
mov
ss
jne
mov
test
jmp
jecxz
jo
retf
sbb
dec
xchg
test
jge
loop
in
ret
pushf
push
pop
sub
mov
add
cmp
leave
jne
cmps
mov
mov
test
xor
or
pop
push
dec
and
fs
mov
xchg
adc
outs
dec
sub
js
adc
aas
(bad)
enter
pusha
shl
sub
ds
jae
fadd
push
pop
jmp
pusha
cmp
sbb
sub
sub
les
or
inc
pushf
xor
repz
lds
and
enter
cwde
push
mov
or
xor
int
push
cwde
inc
dec
cmps
dec
add
adc
stos
data16
sbb
jmp
leave
repz
mov
fbld
aaa
jge
add
and
fcomp
pop
cmp
add
pushf
stos
adc
sbb
aas
xchg
push
popa
dec
dec
jg
dec
pop
jge
fs
sbb
push
pop
(bad)
adc
in
cmp
push
inc
jo
clc
adc
add
and
add
dec
adc
adc
sbb
stc
add
inc
jne
fldcw
dec
sahf
sbb
sbb
sbb
cmp
jb
rcl
jo
jle
lds
shl
push
call
ret
or
cmp
pop
ret
inc
lock
mov
clc
or
dec
add
and
mov
cmp
pop
lock
push
sbb
jne
mov
xor
cli
mov
iret
pop
(bad)
mov
add
and
inc
and
test
stos
dec
mov
je
mov
mov
or
jnp
mov
call
push
add
xor
or
cmp
mov
stc
fdivr
jl
ds
test
jne
push
cmp
xchg
dec
iret
fcomp
or
out
xor
jns
fidivr
in
and
dec
nop
push
into
mov
push
pop
xor
inc
mov
cmp
test
xchg
lock
out
push
push
nop
push
jmp
test
std
lea
dec
lea
imul
stos
cmp
xor
and
sbb
mov
ss
or
push
mov
jmp
int
sub
dec
xchg
lods
mov
pop
sub
xbegin
dec
rol
lds
lods
or
and
adc
shl
rcr
test
adc
mov
inc
mov
es
lahf
push
jo
push
adc
ss
mov
sub
sbb
inc
add
push
push
add
test
mov
add
adc
push
jmp
jb
mov
adc
adc
push
fisub
xchg
push
add
in
dec
js
adc
leave
and
xor
es
sub
sbb
adc
or
enter
pusha
or
rcr
xchg
mov
sub
pop
nop
call
inc
push
shl
or
dec
shr
ret
mov
xor
adc
jmp
retf
cmp
or
inc
aas
cmp
sbb
push
push
movzx
mov
in
out
call
call
jnp
dec
mov
jne
loop
mov
rol
inc
scas
mov
rol
jecxz
and
sub
mov
ins
out
js
inc
or
pop
test
mov
xchg
pushf
test
in
and
pop
sub
mov
(bad)
stc
jl
inc
sub
dec
sub
push
sub
sbb
pop
fisttp
push
adc
xchg
fmul
push
inc
mov
inc
push
shl
or
jno
or
test
mov
lods
stc
xor
(bad)
mov
lock
ret
mov
or
enter
inc
cmp
or
push
daa
inc
jne
cmp
jle
lods
add
jl
stos
inc
mov
(bad)
xor
(bad)
retf
adc
bound
ret
xchg
in
cmp
sub
mov
and
push
fs
pop
in
mov
pushf
and
into
xor
mov
push
inc
mov
es
or
(bad)
xchg
idiv
(bad)
shr
lea
inc
cmp
dec
jbe
lock
mov
scas
sbb
mov
mov
fsub
ucomiss
xor
xor
mov
sbb
xchg
sbb
lea
or
mov
popf
lods
cmp
dec
js
js
adc
adc
jg
dec
inc
push
mov
les
sbb
cmp
xor
dec
jne
adc
cli
pop
setne
pop
sub
cmp
xor
call
sbb
mov
push
or
dec
jns
out
push
push
pop
pop
pusha
xor
out
push
mov
js
iret
and
ror
mov
cwde
inc
shl
lds
dec
mov
jge
sbb
loopne
(bad)
cmps
lock
lods
sbb
in
sub
adc
cli
jo
mov
mov
mov
fistp
xchg
idiv
mov
ss
xchg
or
sar
and
aas
adc
or
daa
ltr
ss
add
xor
add
iret
adc
push
es
xor
push
popa
or
sbb
and
call
xchg
inc
les
fwait
(bad)
mov
mov
add
mov
add
dec
inc
enter
call
jl
jno
clc
xor
dec
and
pop
(bad)
jle
jle
fisubr
inc
add
jne
jo
xor
mov
movs
aaa
sub
arpl
das
adc
adc
cdq
mov
sbb
lods
(bad)
add
pop
outs
cmp
loope
arpl
fist
and
rcr
jle
push
mov
hlt
jb
fdivrp
ds
and
add
das
mov
arpl
mov
lea
push
mov
(bad)
shl
adc
adc
fadd
or
pop
sbb
inc
sub
mov
adc
out
push
push
loopne
xchg
jecxz
enter
loope
mov
pop
and
mov
test
test
and
call
(bad)
push
mov
jmp
push
je
inc
push
les
retf
pop
mov
push
inc
or
mov
or
call
les
test
jno
jmp
nop
cmp
pop
mov
sbb
sbb
dec
fst
rcr
dec
aam
enter
adc
xor
adc
jle
sub
xchg
push
cmp
rcl
dec
push
stos
popf
idiv
sbb
shl
cmp
add
imul
add
push
rcl
adc
popa
xor
ins
into
inc
test
jecxz
inc
pushf
rcr
sbb
adc
add
rep
rcr
lods
ds
inc
adc
xchg
sbb
adc
mov
popa
mov
and
ins
sar
aam
or
mov
add
mov
sub
pop
inc
aad
(bad)
dec
adc
mov
bound
lods
adc
and
mov
fcom
mov
fdiv
push
push
push
or
or
add
pop
das
test
adc
add
mov
cmp
lea
xor
xchg
push
icebp
sbb
and
or
inc
add
scas
mov
or
bound
mov
add
push
stos
dec
lock
pop
lea
xor
cmp
jne
cmp
add
inc
fdivr
add
push
mov
popa
cld
and
add
mov
push
inc
and
(bad)
xchg
jp
pop
(bad)
sbb
add
icebp
push
sbb
sbb
pop
or
push
(bad)
out
and
dec
pop
ds
fstp
and
or
push
ret
dec
pop
xor
into
jl
sub
add
std
test
sar
shl
mov
inc
xor
popa
cdq
(bad)
scas
add
sub
mov
or
or
xor
pusha
clc
je
jmp
aas
and
pop
mov
test
or
xchg
test
adc
inc
cmp
pop
sbb
clc
mov
inc
loopne
outs
lock
out
test
faddp
lds
cmp
inc
cpuid
or
(bad)
adc
test
call
test
adc
jno
push
cmp
pop
js
retf
sub
lods
add
scas
mov
xchg
mov
lds
cmp
or
cmps
jns
pop
or
adc
jb
test
lods
or
ror
inc
or
jo
or
test
pop
xchg
test
(bad)
jle
(bad)
mov
mov
sbb
scas
add
or
dec
xor
fist
or
add
add
je
cmp
jmp
add
inc
xor
inc
nop
aam
fsub
cmp
mov
mov
add
sbb
adc
cmp
rcl
sub
jp
and
and
test
mov
add
jns
movs
fisttp
xor
jns
dec
sbb
or
pop
jle
dec
mov
xor
retf
xchg
xor
dec
cmp
(bad)
clc
sbb
int
jmp
inc
sub
pushf
setp
mov
jl
adc
inc
cli
into
push
pop
je
and
push
in
pusha
hlt
loopne
mov
sbb
rcl
jg
push
rcl
pop
ror
scas
or
inc
push
xchg
mov
test
push
iret
sbb
call
addr16
xchg
inc
jns
fcom
loope
cmp
dec
or
mov
in
cmps
inc
jnp
mov
pop
xacquire
jl
jg
adc
or
stos
aas
test
into
jmp
add
jb
jne
nop
mov
dec
into
dec
pop
adc
adc
mov
or
push
fidiv
into
adc
push
or
and
inc
cmp
pop
sbb
jo
out
rcl
cmp
inc
std
push
ror
or
dec
sbb
or
cmp
dec
sbb
adc
rcl
and
repnz
dec
call
pop
sub
adc
and
or
int3
jns
push
adc
out
sbb
xchg
mov
mov
xchg
jb
push
(bad)
enter
sub
push
mov
test
push
jl
ins
fs
js
adc
or
leave
adc
push
aaa
pop
lods
ins
or
iret
and
jbe
jmp
cmp
add
(bad)
cmc
or
hlt
mov
rep
mov
cmps
movs
in
out
or
test
je
push
sub
mov
jmp
loopne
add
sbb
sbb
xor
cmp
rol
loop
in
mov
xor
fbstp
mov
mul
xchg
movs
push
push
sub
sbb
fld
mov
dec
movs
push
(bad)
psubq
cmp
cs
call
gs
cmp
call
jne
inc
ficomp
aaa
add
cmp
add
pop
in
fst
or
xchg
push
fisubr
or
fmul
adc
adc
lahf
sbb
idiv
cmp
or
sub
in
shl
jle
ret
inc
inc
xchg
or
adc
gs
jl
je
adc
stos
xchg
lahf
rol
das
es
pop
dec
cs
adc
test
sbb
xchg
mov
pop
adc
jae
jo
pop
shl
dec
push
fwait
add
mov
dec
inc
sahf
addr16
adc
pop
aaa
xchg
fimul
lds
or
fsubr
inc
jg
pop
rcr
outs
mov
xor
mov
and
aaa
dec
push
sbb
nop
cli
mul
push
ja
adc
mov
lahf
mov
js
jae
add
xor
cmp
pop
call
push
and
bound
jl
jge
mov
mov
sub
fadd
add
jp
push
push
ins
sub
pop
pop
mov
pop
mov
dec
push
add
(bad)
xchg
cmp
je
sub
movs
and
pushf
test
push
jns
cwde
push
cmp
retf
and
jg
or
add
scas
xor
into
dec
cmp
aaa
and
add
sti
mov
and
sbb
loopne
mov
sub
xor
mov
mov
inc
cmp
xchg
int3
mov
lahf
sar
adc
jo
add
fs
push
sbb
add
hlt
and
data16
xlat
dec
adc
jno
sbb
adc
add
dec
cmp
inc
fbld
push
retf
or
sbb
rol
adc
cmp
or
inc
scas
leave
jnp
adc
and
aaa
cmp
jg
or
adc
xor
prefetchnta
adc
(bad)
repnz
and
inc
stos
add
adc
pop
sbb
lds
fidiv
sti
mov
dec
sub
mov
or
iret
and
inc
and
mov
add
add
aam
mov
leave
nop
shr
xor
mov
xchg
outs
or
or
mov
adc
mov
movs
or
push
and
dec
dec
add
das
add
or
inc
lock
inc
loopne
mov
fld
out
inc
jecxz
mov
es
xlat
scas
arpl
je
pusha
adc
mov
and
push
or
push
shl
add
add
add
pop
test
xchg
out
out
arpl
mov
mov
lahf
and
sbb
inc
jb
adc
mov
es
and
add
push
mov
xor
xchg
cmp
ins
jle
cdq
xchg
lock
inc
mov
xchg
ret
sbb
test
add
mov
fistp
sub
popf
jmp
sar
adc
pusha
sub
ins
call
pop
mov
sub
test
repz
sbb
loop
mov
(bad)
inc
xor
into
push
add
xchg
push
inc
int3
and
inc
pop
cmc
into
dec
cmp
add
lahf
rol
pop
sbb
or
and
(bad)
push
and
or
pminsw
sub
pop
sub
pop
pushf
sub
inc
mov
add
pusha
mov
dec
cmp
or
or
or
sub
inc
popf
inc
mov
enter
dec
jne
pop
and
xor
lods
adc
mov
mov
fisttp
popf
add
ret
and
neg
rol
inc
aaa
mov
push
or
inc
add
call
clc
add
and
(bad)
or
mov
ret
imul
outs
xchg
aas
add
cwde
sub
pop
(bad)
mov
jnp
pop
mov
push
dec
inc
xlat
cmps
mov
je
inc
mov
lock
lds
or
(bad)
xchg
mov
xor
mov
test
scas
xchg
sbb
sub
fdivr
adc
xchg
or
dec
adc
adc
lock
adc
je
pushf
ins
xchg
adc
int3
jne
lods
shl
adc
outs
repnz
adc
pop
or
jbe
lea
push
mov
or
test
sub
test
add
xchg
shl
js
and
add
push
fsub
sahf
dec
sbb
lods
comiss
imul
add
cmp
int
push
outs
adc
cmp
das
add
pop
add
sub
fild
pop
mov
or
jbe
je
and
or
lods
sbb
push
loop
adc
imul
and
frstor
or
inc
neg
push
dec
je
mov
lds
sub
mov
nop
sub
out
popa
and
ss
(bad)
test
cmp
and
fist
jns
sub
ret
lods
sti
jle
add
dec
pushf
mov
pusha
rol
mov
inc
loope
cmp
mov
sub
test
lds
push
mov
cwde
jbe
sub
cmp
mov
inc
retf
push
cld
hlt
push
dec
ins
ss
push
cwde
dec
pop
js
rol
sub
std
jmp
(bad)
hlt
into
push
jle
add
push
call
adc
adc
adc
data16
xor
data16
jne
push
mov
pop
ja
push
or
dec
xchg
mov
je
adc
lds
test
fstp
fcom
call
sbb
push
(bad)
sub
and
fst
push
call
inc
push
jle
xchg
(bad)
push
add
or
push
imul
pusha
aam
pop
(bad)
push
fiadd
add
mov
imul
push
add
xchg
rol
out
add
xor
mov
push
xchg
lock
sbb
push
ins
mov
lock
sub
xor
mov
mov
sub
xor
pusha
inc
in
add
fistp
out
jmp
ret
call
cmc
push
and
mov
ret
adc
add
js
out
mov
enter
(bad)
in
pop
adc
sar
test
mov
rcl
ror
mov
jo
fild
cmp
mov
mov
mov
cli
adc
push
mov
rcl
pop
cmp
pop
add
push
dec
push
stos
loopne
jg
gs
test
pop
push
push
push
movs
jle
test
mov
test
fisttp
cwde
pop
cmp
fs
mov
sti
jg
(bad)
fstp
mov
enter
xor
add
sub
push
stc
and
adc
inc
inc
movs
ret
add
lds
lods
fimul
mov
inc
sahf
adc
jecxz
test
mov
rcr
pop
adc
jne
sbb
adc
mov
mov
icebp
(bad)
sbb
fprem
das
sub
mov
push
mov
lock
movs
add
inc
cmp
mov
dec
mov
xchg
add
adc
sbb
dec
lock
push
inc
(bad)
aaa
mov
call
call
enter
push
add
mov
cwde
icebp
or
cs
add
and
inc
cmp
push
sbb
or
pop
pop
test
add
cmp
cdq
jne
(bad)
iret
pop
fld
mov
imul
mov
dec
inc
inc
arpl
test
add
cmp
push
mov
cdq
jg
or
add
and
xor
clc
call
mov
pop
mov
mov
aas
and
xor
add
mov
call
xor
out
push
or
push
or
sub
fst
xor
shl
xchg
clc
(bad)
sbb
cwde
sub
shl
sbb
xor
mov
or
jle
sub
sbb
fistp
dec
(bad)
mov
adc
lods
push
int
test
js
push
mov
sbb
jle
push
in
push
sbb
sbb
mov
fiadd
pop
js
mov
jecxz
push
(bad)
lock
fmul
repz
test
dec
cmp
jb
bound
jmp
mov
cmp
inc
push
fwait
inc
jns
push
mov
xchg
jo
les
jl
cmp
adc
push
push
ins
jp
pop
outs
nop
add
pop
out
dec
bound
fbstp
mov
cmp
aam
fmul
rcr
mov
mov
xchg
or
xlat
mov
cwde
xor
out
cmp
sbb
cmp
and
push
inc
add
ins
cdq
dec
sub
and
dec
cmps
dec
inc
cmp
and
inc
dec
push
jecxz
dec
leave
leave
xchg
dec
push
xchg
push
jl
and
xchg
push
and
jb
pop
movs
pop
xchg
dec
leave
leave
pop
lods
pop
pusha
pop
leave
and
enter
leave
xchg
pushf
in
push
hlt
push
in
adc
popf
dec
mov
je
in
xchg
test
push
call
repnz
aaa
xchg
mov
add
mov
dec
push
mov
aam
jb
nop
mov
dec
push
mov
pop
pop
pop
fild
adc
dec
cmp
jno
mov
imul
icebp
fmul
aaa
sbb
inc
mov
sar
ret
test
aam
or
and
add
push
sbb
cmp
fldenv
test
mov
imul
cmps
push
add
mov
or
sti
fmul
arpl
mov
sub
inc
add
dec
mov
jo
mov
push
cmp
inc
sbb
adc
lock
pop
inc
and
shr
int3
dec
push
push
hlt
outs
fmul
lea
dec
loope
add
jl
hlt
mov
rol
xor
mov
cmp
jecxz
call
test
and
xchg
inc
stos
or
fs
push
mov
gs
mov
and
xchg
push
cmp
add
jns
outs
test
ss
cmp
jne
push
retf
add
(bad)
sahf
push
in
adc
ficomp
test
rcr
aaa
or
lods
ja
jb
push
or
mov
cli
cmp
js
jo
pop
sub
ja
sub
xchg
ss
and
test
not
sahf
inc
add
pop
cmp
dec
jecxz
in
(bad)
pop
adc
js
push
adc
sar
ja
pop
mov
or
mov
repnz
xchg
push
retf
loope
cmp
sub
pop
pop
faddp
lahf
(bad)
fnstenv
test
xchg
js
mov
call
js
ins
loop
cli
jle
lods
adc
loop
loopne
pop
ins
mov
xchg
mov
sbb
mov
pop
adc
iret
and
mov
mov
sub
sub
or
xchg
and
xchg
ins
outs
dec
fdiv
sub
aam
pop
xor
mov
dec
stc
(bad)
test
add
sbb
stc
(bad)
clc
inc
and
xchg
push
std
fiadd
imul
clc
sbb
jg
push
mov
cmp
push
test
xor
mov
pop
ficomp
sub
jno
mov
mov
(bad)
ror
lea
lds
jne
movs
loop
pop
cmovo
and
int
sbb
test
test
ins
fnstsw
and
inc
aam
push
aam
aam
and
pop
mov
sub
xor
dec
push
das
clc
test
pop
mov
xchg
add
or
pop
addr16
nop
paddq
jg
daa
dec
ins
pop
pop
or
es
or
mov
scas
imul
aam
sub
or
push
fucomi
push
gs
jne
lods
mov
xchg
lahf
cs
data16
xchg
sbb
cli
add
sbb
out
pop
mov
and
dec
sub
mov
push
or
inc
loopne
adc
in
imul
adc
mov
sbb
mov
scas
push
mov
cmc
cmp
je
push
lea
jne
pop
xchg
nop
or
bound
cmps
sub
mov
lock
add
mov
dec
cli
add
or
and
inc
push
or
jge
push
dec
add
push
ins
sbb
mov
mov
jb
in
xor
jmp
lock
adc
mov
or
das
lock
into
movs
or
adc
idiv
cmp
push
pop
and
cwde
sub
cmps
jno
pushf
inc
lea
push
aam
mov
and
adc
stos
cwde
inc
mov
push
jb
aas
adc
inc
shl
xor
cwde
pop
pushf
pop
popa
jg
popa
out
jnp
sub
sbb
cmc
je
cmp
cmps
scas
loopne
sbb
jbe
push
lea
pusha
and
sbb
retf
repnz
ins
add
or
mov
in
push
xor
frstor
mov
push
sub
fadd
ja
adc
std
out
xchg
rcr
shr
and
mov
xor
movzx
add
push
jbe
stos
or
leave
add
add
xchg
sti
sbb
retf
dec
bound
adc
fdivr
xchg
cmp
ret
jg
mov
call
adc
push
and
loop
adc
inc
xor
mov
pop
inc
ret
int3
dec
int3
(bad)
xchg
sub
sub
sub
test
inc
mov
enter
out
and
push
jp
jo
cmp
inc
xchg
dec
out
das
or
xchg
cmp
les
stos
je
cs
add
mov
xchg
adc
cmps
mov
push
sbb
call
xchg
inc
adc
xchg
ins
add
call
outs
push
movs
bswap
push
xchg
shl
or
repz
push
call
add
les
ja
inc
or
and
xor
jb
movs
cmp
push
inc
inc
dec
sub
xor
aas
outs
adc
xor
inc
outs
enter
push
or
dec
jns
pop
push
push
enter
out
or
fldcw
cmp
xor
push
aas
adc
das
popa
aad
lock
adc
jmp
mov
add
or
mov
hlt
jo
ret
lock
fdivr
jg
movs
ret
mov
inc
add
or
inc
push
pop
lea
enter
push
lea
adc
and
shl
movs
mov
push
sbb
xchg
adc
sub
jnp
and
or
push
jns
inc
jmp
inc
inc
jmp
shl
or
mov
rcl
fld
aad
int3
fiadd
jmp
mov
stos
mov
sub
mov
mov
inc
lea
(bad)
loopne
push
adc
sar
mov
push
cmp
jl
jle
push
and
ins
test
add
retf
les
and
xor
inc
xchg
add
mov
loop
aad
add
jo
in
fcom
in
loope
lock
push
bound
push
or
lods
sbb
add
jmp
or
pop
cmp
pushf
lds
jle
je
aam
sbb
or
int3
xchg
(bad)
(bad)
fisubr
in
test
push
in
sub
or
hlt
(bad)
and
adc
mov
test
ja
jb
cmp
jp
js
and
push
add
aas
or
loopne
rcr
xchg
mov
ja
cmp
jbe
loop
xchg
and
cmp
ror
retf
add
mov
or
mov
push
mov
cld
mov
repz
sbb
sub
sbb
ja
add
mov
stc
jbe
mov
or
pusha
pusha
inc
cmc
and
push
or
jo
push
dec
and
popa
ds
mov
pop
test
sbb
push
jno
xchg
clc
sub
inc
enter
and
mov
and
push
lea
adc
ror
xor
sahf
mov
jne
cmp
jne
or
add
add
cmps
out
frstor
mov
add
adc
xchg
add
fdiv
cmp
and
into
ja
call
scas
sbb
(bad)
mov
pop
(bad)
lods
cmp
adc
mov
cmps
add
pop
lahf
inc
outs
call
mov
jne
push
cmp
inc
adc
inc
call
movs
xchg
inc
in
xor
and
sbb
(bad)
das
pop
ja
sbb
and
fdiv
adc
cmp
hlt
push
pusha
mov
(bad)
fisub
sbb
adc
sbb
add
repnz
add
(bad)
jne
jmp
inc
(bad)
push
xor
pop
in
iret
push
ret
enter
mov
xor
xchg
ret
mov
fimul
sub
jno
std
sbb
push
sbb
sbb
sbb
inc
add
xor
cmp
and
pop
sub
rcl
pop
(bad)
ss
(bad)
push
daa
dec
fmul
test
es
sbb
xchg
sub
inc
mov
in
outs
sub
jl
or
in
mov
outs
daa
idiv
push
cmp
jle
xor
out
push
push
xchg
xor
shl
xlat
std
addr16
data16
mov
add
mov
or
or
aaa
test
cmp
sub
cmp
fld
sub
push
pop
lods
mov
out
add
cld
xchg
push
push
mov
add
mov
(bad)
fdivr
(bad)
mov
loopne
in
int
xor
pusha
in
mov
adc
xor
ror
daa
loopne
test
push
mov
(bad)
sub
in
cmp
inc
push
ror
dec
dec
jns
cmp
out
push
stos
test
push
inc
push
arpl
add
mov
retf
in
sub
fs
pop
popf
pop
push
imul
pusha
mov
je
and
and
xor
jp
jns
ja
xor
gs
pop
pop
std
rol
sub
nop
cwde
add
adc
push
or
adc
adc
test
test
scas
add
cmp
mov
sar
daa
jne
xchg
sbb
lock
fadd
xor
mov
retf
jne
pusha
pop
jg
inc
mov
xchg
xchg
shl
push
dec
lea
mov
mov
ins
mov
mov
ror
inc
inc
pushf
xlat
mov
dec
jne
not
in
xor
xor
hlt
mov
xor
jo
test
cdq
fisttp
div
leave
cmp
adc
add
or
mov
and
sbb
xor
sbb
mov
call
add
adc
sbb
inc
cmp
lds
xor
push
and
xchg
inc
push
into
add
adc
lods
inc
cmps
push
adc
out
jb
jne
jl
cld
and
adc
cmp
pop
or
sub
mov
sbb
repz
je
inc
and
test
and
test
xchg
xor
mov
or
push
push
call
pushf
sub
repz
ror
fs
mov
out
inc
mov
clc
lods
leave
fiadd
jecxz
add
fild
inc
inc
adc
es
and
out
pushf
or
or
lock
cmps
jns
int
push
and
push
add
adc
cld
cmp
sbb
mov
mov
add
mov
add
mov
and
push
lock
push
out
lea
pop
ret
cmp
test
push
inc
call
cld
mov
xchg
sub
mov
xor
inc
pop
add
mov
ins
adc
inc
xor
mov
push
clc
push
dec
js
in
fcom
mov
sbb
pop
xor
adc
xchg
push
hlt
mov
je
es
xor
push
je
mov
cmp
push
dec
mov
stc
test
mov
movs
movs
in
nop
push
adc
adc
aam
mov
jb
shrd
jp
fidivr
loopne
jecxz
addr16
clc
in
loop
fiadd
push
mov
inc
test
xchg
mov
sbb
je
jmp
adc
xor
repnz
dec
inc
popa
lock
outs
sbb
add
enter
shr
lods
fwait
mov
or
jmp
or
push
xor
push
jb
pop
push
fdivr
add
jo
adc
mov
test
add
inc
mov
add
(bad)
repnz
ins
mov
clc
push
xor
fidiv
clc
pop
add
sbb
(bad)
jne
out
std
dec
inc
outs
xchg
lock
mov
dec
leave
add
xchg
in
sub
adc
push
cmps
(bad)
xor
test
sub
push
pop
mov
ret
mov
cs
pop
pop
hlt
jp
icebp
sub
mov
ret
push
jp
jo
mov
mov
popa
and
mov
push
cdq
ficom
xchg
push
inc
clc
in
lock
clc
or
dec
and
jne
jne
and
loop
add
push
jo
push
push
dec
movs
mov
mov
mov
inc
loopne
push
xchg
push
inc
xor
clc
mov
in
push
push
out
and
jmp
push
push
dec
or
cmps
add
out
push
mov
sbb
push
adc
mov
call
mov
aas
test
add
pop
mov
mov
je
mov
lea
sbb
push
in
adc
add
fcomp
ror
add
pop
mov
dec
(bad)
pop
fs
dec
jl
jb
dec
popf
inc
pop
clc
xchg
fcom
xchg
js
(bad)
and
(bad)
or
push
xlat
push
jo
xchg
lock
xchg
inc
leave
fs
stos
add
cdq
outs
pusha
mov
shl
mov
jg
or
sbb
pavgb
das
sbb
cmp
sub
add
shl
add
xchg
adc
ror
rol
mov
sub
inc
add
push
lea
outs
add
sub
and
dec
lahf
mov
add
aam
jns
adc
mov
aam
sub
jae
inc
mov
rol
push
mov
push
push
mov
(bad)
aam
sbb
adc
call
(bad)
hlt
in
or
in
pop
sbb
mov
mov
imul
fsub
pushf
dec
mov
add
push
dec
lahf
cmp
inc
inc
mov
pmullw
xchg
sbb
inc
ins
jno
sar
ins
mov
jns
scas
sub
dec
push
mov
or
dec
push
push
sub
adc
mov
pop
fdiv
pop
loopne
push
adc
xchg
pop
pop
push
pop
and
daa
add
mov
dec
in
gs
sbb
xchg
cmp
add
(bad)
sar
and
mov
shl
dec
dec
mov
push
fsub
aam
fsubr
and
push
retf
add
dec
add
clc
add
inc
hlt
clc
mov
push
cmps
es
sbb
or
inc
jne
xor
ret
jbe
je
or
rcr
arpl
loopne
pop
clc
cmp
mov
fsub
jae
cmp
clc
push
dec
pop
and
add
pop
push
mov
dec
scas
fiadd
lea
inc
push
dec
pop
std
pop
dec
es
adc
cmc
ins
(bad)
xor
sub
add
out
or
(bad)
cmp
dec
adc
fadd
mov
rol
sub
or
call
sbb
adc
icebp
or
cmps
call
(bad)
div
mov
mov
loopne
mov
xor
jp
and
ror
jae
xchg
(bad)
pop
inc
or
cdq
dec
xor
add
sar
fbstp
test
push
scas
inc
and
cmps
int3
and
push
cmp
in
mov
add
mov
ficom
in
push
sar
xchg
jo
push
mov
inc
out
fcomp
aad
mov
jmp
cld
inc
mov
fmul
lahf
mov
pop
sar
test
dec
or
xchg
cwde
pop
fcmovnb
pop
push
js
(bad)
int3
jl
pop
inc
clc
call
push
movs
cmp
adc
sub
push
pop
inc
jl
into
int3
inc
mov
frstor
lahf
loopne
mov
call
test
add
push
ror
ins
push
ds
and
sbb
mov
clc
xchg
inc
adc
mov
mov
cmp
pop
push
push
mov
mov
lods
dec
fld
ret
je
jmp
sbb
inc
and
sub
lahf
loopne
sub
cmp
push
pop
scas
add
xor
xor
inc
dec
or
xchg
cmp
arpl
arpl
test
sbb
pop
mov
push
dec
xor
call
xor
mov
ror
pushaw
sbb
shl
sbb
fistp
or
push
inc
leave
mov
add
adc
in
jb
mov
cmp
cmc
xchg
add
in
neg
sbb
mov
cmp
or
cmp
mov
sbb
loopne
lds
mov
sbb
jno
push
jl
jecxz
cmp
pop
mov
dec
data16
dec
js
inc
push
jbe
mov
stc
jbe
dec
sbb
add
mov
dec
jecxz
pop
jbe
dec
cmp
lods
outs
add
jb
cs
loopne
mov
xor
jle
loopne
push
jb
jae
inc
js
push
in
adc
push
ds
les
ret
jne
inc
popf
dec
mov
clc
sbb
sbb
cmp
retf
adc
mov
sub
xchg
jmp
dec
out
push
bound
inc
cmp
test
and
mov
cmps
enter
sbb
lds
sbb
mov
add
mov
xchg
push
add
adc
sbb
nop
jb
pop
ret
push
enter
or
inc
inc
sub
sbb
and
add
stos
push
mov
push
mov
stos
or
aas
pop
push
adc
add
push
mov
sbb
scas
sbb
or
jnp
mov
imul
jne
mov
sbb
add
lods
sbb
ins
mov
fmul
ror
push
sub
mov
add
mov
mov
sub
push
pop
jge
por
outs
sub
ret
or
je
(bad)
in
les
(bad)
jb
or
add
sti
push
add
adc
inc
adc
out
push
jo
mov
cmp
fsubr
add
imul
jae
pop
xchg
cmp
scas
add
add
xchg
mov
mov
lock
jp
ins
(bad)
pop
add
jg
push
or
call
hlt
(bad)
(bad)
pop
(bad)
cmc
sahf
xor
xchg
jne
mov
mov
cmp
jo
dec
je
dec
arpl
xchg
repnz
sub
sub
ins
cmp
mov
or
rcr
or
pop
cld
mov
cmp
and
aam
out
mov
jg
ret
add
not
jp
mov
sbb
shr
movzx
pop
inc
loope
sar
pusha
inc
dec
jne
push
mov
and
or
add
lock
jb
xor
jmp
ret
(bad)
(bad)
leave
in
jne
mov
adc
or
sar
fimul
pop
push
(bad)
push
jle
imul
gs
mov
xchg
enter
bnd
add
leave
inc
in
cmp
or
ins
leave
inc
adc
jg
and
ror
xor
add
sub
push
pop
push
and
ret
cld
cmp
xchg
dec
xor
and
cmp
push
push
js
adc
pop
pop
cwde
in
jnp
adc
fdivr
in
sub
jg
aam
mov
jne
pop
pop
sub
nop
adc
out
lahf
mov
push
add
mov
les
mov
mov
repnz
adc
dec
add
repnz
mov
es
dec
loope
dec
mov
cmps
lock
and
cmovne
leave
cmp
ud1
hlt
fsubr
push
imul
pop
xchg
mov
add
aaa
mov
dec
mov
adc
or
fldcw
addr16
cmp
pop
dec
or
pop
std
mov
pop
aas
leave
dec
sbb
add
and
dec
ror
mov
nop
loope
sub
aaa
push
pop
sub
in
pusha
lods
nop
pop
fbld
or
pusha
imul
and
pushf
add
and
sbb
je
dec
movs
lea
adc
js
in
push
aam
(bad)
leave
push
cmc
and
xchg
mov
mov
pop
sbb
not
and
mov
sahf
push
pushf
dec
mov
inc
and
xchg
cli
dec
gs
clc
jbe
or
mov
push
cmp
sti
add
or
jg
lods
xchg
dec
jmp
in
jle
add
and
mov
mov
pop
adc
push
jno
bound
sbb
inc
popf
sar
shr
push
or
add
test
sbb
jbe
inc
jne
add
or
and
add
cdq
loop
xchg
dec
mov
xor
inc
mov
inc
inc
loop
xchg
push
inc
sbb
mov
xchg
dec
adc
or
mov
ja
dec
inc
mov
rol
xchg
cmp
mov
add
dec
in
push
ins
fisub
mov
mov
je
call
out
repz
les
mov
stos
aaa
fadd
push
stos
add
sbb
xchg
dec
and
jno
xchg
push
sbb
dec
aas
mov
ins
(bad)
xlat
pop
ss
pushf
xchg
inc
add
and
push
push
into
bound
jmp
push
pop
lea
pop
ret
mov
cmp
call
or
jne
and
xor
push
push
pusha
or
(bad)
and
or
adc
mov
cs
int
ret
data16
dec
pushf
dec
retf
sbb
dec
ins
inc
and
inc
mov
push
cmc
adc
sub
push
and
loopne
sbb
int3
retf
sbb
cmp
(bad)
xor
sub
lock
pop
loop
push
inc
cmp
and
ret
or
xor
jb
pop
mov
aad
push
xor
fcmove
sub
imul
push
ja
je
(bad)
jbe
push
rcr
add
jb
dec
cld
push
and
jne
ds
xor
js
xor
movs
cmps
push
fistp
sub
into
test
dec
xor
stos
jbe
dec
sub
and
shr
pop
push
test
push
push
mov
adc
dec
js
aad
test
js
adc
pop
movs
movs
stos
or
test
sub
shl
retfw
sbb
mov
nop
scas
add
cmp
adc
(bad)
pop
arpl
enter
xchg
mov
and
mov
push
add
xchg
xchg
cmp
scas
jae
aam
mov
add
(bad)
dec
xchg
aam
fs
adc
add
xor
mov
inc
jb
not
xchg
xor
jo
movs
inc
cwde
adc
xor
add
sbb
mov
icebp
sbb
les
xor
rol
pushf
mov
and
sbb
pop
lods
ins
and
fild
lock
add
cwde
mov
jp
retf
dec
mov
mov
and
xchg
out
push
cmove
jl
or
sti
fld
sbb
xchg
test
cmc
cs
in
fadd
or
and
sbb
mov
xchg
and
repnz
pushf
sub
jnp
mov
or
dec
mov
pop
pop
add
pusha
pop
dec
dec
movs
mov
enter
xlat
pop
adc
inc
sbb
addr16
jne
adc
jbe
dec
mov
sti
jb
dec
adc
in
test
test
adc
xchg
mov
and
adc
jecxz
push
mov
cwde
sbb
or
push
mov
je
popa
push
fstp
popf
push
(bad)
or
jae
inc
inc
inc
(bad)
aas
sti
adc
jecxz
lock
into
xor
das
add
outs
call
xor
call
push
out
hlt
sbb
inc
out
add
lahf
xchg
jmp
sahf
or
xchg
and
retf
into
inc
fs
dec
inc
pusha
and
add
dec
and
sahf
add
std
pop
push
les
test
inc
in
adc
jmp
xchg
jbe
call
add
addr16
(bad)
inc
and
mov
xchg
add
ret
xor
mov
aam
sub
cli
sub
aam
mov
enter
fld
add
loope
aam
pmuludq
enter
loopne
xor
and
pop
dec
dec
add
loopne
sub
call
sbb
inc
cmp
push
shl
test
dec
pop
push
or
mov
or
inc
dec
cmp
or
inc
dec
in
out
je
cmp
aam
pop
mov
dec
mov
mov
adc
cmp
test
loopne
sub
add
mov
jb
dec
push
add
mov
inc
pop
sub
jne
cwde
imul
inc
pop
mov
nop
retf
gs
adc
es
and
invd
sbb
test
push
lahf
inc
pop
repnz
jnp
movzx
jmp
fcomp
mov
ret
dec
dec
adc
stc
or
pushf
dec
add
or
dec
add
or
loop
jb
mov
cli
or
dec
xor
aam
(bad)
xchg
enter
adc
in
aad
or
mov
add
mov
in
pop
jg
pop
or
jo
adc
imul
or
es
jp
shr
sub
cmp
adc
add
nop
cmp
or
shr
es
and
sbb
stos
xor
sub
data16
out
lods
mov
mov
retf
add
test
or
or
push
sbb
dec
pop
adc
lds
xchg
xor
sbb
xor
and
cmps
or
xchg
dec
not
ja
adc
xchg
inc
loope
mov
adc
iret
inc
push
das
pop
inc
int3
pop
mov
push
xchg
ins
fldenv
push
lock
xchg
mov
mov
dec
sbb
clc
dec
add
mov
pop
lock
sub
jae
add
pop
jne
or
retf
retf
mov
lods
add
lods
lock
pusha
sbb
loopne
les
mov
add
cmp
or
in
fstp
pusha
cmps
paddsw
adc
push
ins
inc
jae
fucomip
and
(bad)
cmp
sub
inc
mov
inc
xchg
js
pop
pop
mov
jmp
xchg
mov
popf
mov
add
cmp
mov
xchg
mov
fld
ds
push
sub
dec
pop
aas
jecxz
inc
jb
lea
(bad)
sbb
out
inc
sbb
add
not
push
sub
into
add
or
push
fcomp
retf
push
sub
push
rcl
and
fimul
and
mov
mov
dec
dec
dec
dec
add
fdiv
cld
and
leave
ror
jbe
push
pop
nop
xor
pop
or
stos
sbb
ss
pop
test
ja
sbb
ret
mov
add
test
pusha
jne
dec
int3
jb
or
inc
sbb
lods
neg
ret
fs
(bad)
out
jnp
shl
lea
lock
test
fwait
or
dec
fcomp
clc
adc
inc
fwait
mov
inc
jo
push
shr
add
int3
scas
sti
inc
sub
out
add
stos
ficom
mov
shl
test
ficomp
sub
add
mov
ja
bound
enter
pop
daa
mov
pop
pop
loopne
jae
jg
pop
mov
add
or
xor
push
mov
dec
mov
hlt
ficomp
inc
cld
ss
inc
shl
mov
mov
inc
aas
jne
dec
sbb
cli
test
in
jl
jo
cmp
xor
test
and
pusha
adc
imul
or
cmps
sbb
adc
xchg
xor
jne
adc
lea
inc
ins
mov
neg
push
push
mov
dec
mov
push
loopne
addr16
xor
lahf
mov
gs
jb
cmp
bnd
jp
call
test
sbb
enter
or
push
or
aam
clc
push
mov
mov
cmps
or
sbb
rol
lods
push
hlt
or
sar
cmps
or
xchg
pop
cmp
push
dec
and
push
add
(bad)
add
test
lock
mov
cmp
fimul
cmp
lods
push
xchg
cmp
mov
lods
adc
mov
call
push
and
dec
(bad)
iret
call
jg
cmp
jbe
pop
xor
push
dec
inc
inc
cs
rol
jle
leave
add
mov
xchg
fisub
add
mov
mov
mov
fbstp
(bad)
fisttp
das
jnp
or
mov
add
sub
adc
fstp
test
int
rol
clc
push
mov
dec
adc
push
rol
add
add
int3
cmp
ja
js
sub
pop
or
add
cmp
sti
aam
rcl
enter
pop
push
lds
mov
nop
aad
nop
or
jmp
pop
push
and
add
push
push
mov
xor
add
sbb
enter
loopne
mov
cmps
js
mov
popa
stos
add
sbb
sub
inc
test
mov
inc
mov
or
sbb
sbb
or
movntps
psubsb
dec
sub
enter
pop
cwde
int
sbb
mov
daa
push
mov
adc
sbb
mov
scas
out
jnp
sbb
xchg
js
inc
sub
xor
fadd
push
popf
jecxz
dec
sub
cmp
adc
mov
jl
loopne
in
inc
jne
xchg
push
add
in
pushf
sub
jl
lock
in
ret
test
ret
inc
sub
lock
cmp
jp
mov
push
xchg
outs
sbb
dec
push
loopne
rol
ins
dec
jmp
repnz
sbb
rcr
xor
sub
cld
mov
scas
mov
loope
int3
ror
test
icebp
cli
pop
sbb
xlat
clc
cmp
lock
in
cmp
push
pushf
sbb
mov
push
xor
jno
aas
cmp
je
mov
aad
add
mov
jbe
push
in
mov
pop
pop
pop
ja
mov
push
andps
ret
pop
or
sub
dec
popf
fld
inc
je
jmp
add
lock
add
jge
out
inc
add
mov
adc
jnp
mov
je
add
enter
jmp
xor
pop
push
and
inc
pop
pop
sub
and
mov
pop
mov
sub
js
movs
adc
cmp
xor
sub
cmp
pop
inc
xor
dec
and
lds
add
loopne
inc
push
mov
mov
jl
retf
hlt
inc
sub
retf
adc
(bad)
call
jne
scas
adc
xchg
scas
pusha
mov
xchg
inc
lea
mov
shl
pop
(bad)
(bad)
pop
pop
push
pop
test
pop
inc
rcr
out
cmp
gs
sbb
pop
dec
test
shl
cmc
sti
popa
push
ins
sahf
int
shl
gs
ficomp
fldcw
imul
imul
sub
push
imul
mov
loop
xor
push
push
add
test
mov
call
sub
jae
fisttp
sub
push
out
nop
(bad)
add
mov
or
push
mov
add
adc
add
adc
xor
fadd
inc
add
fdiv
in
mov
adc
pop
mov
sbb
mov
movs
add
rol
sbb
fs
jb
jl
or
inc
into
lock
clc
push
sar
mov
sahf
cmp
js
sub
inc
js
pop
std
or
(bad)
add
cmp
daa
xchg
js
push
or
mov
mov
sbb
mov
sbb
cmp
adc
pusha
mov
clc
add
jg
cdq
dec
or
sbb
add
mov
cmp
movs
cdq
outs
daa
or
push
(bad)
cmp
pushf
add
xchg
jbe
cmp
adc
add
adc
enter
lahf
and
cmp
jne
adc
jne
and
xor
push
mov
pop
jne
xchg
or
sbb
shl
js
jb
mov
mov
mov
jne
mov
mov
in
jo
pop
jge
mov
and
hlt
dec
mov
and
jmp
mov
fsubr
pop
lock
fld
sub
and
dec
dec
je
cmp
push
inc
dec
pop
or
inc
or
xor
mov
mov
push
fdiv
loope
or
aam
fmul
sub
inc
ret
sub
push
inc
fwait
or
push
dec
and
popf
push
or
sub
inc
sub
mov
xchg
push
jmp
fcmovbe
cmp
add
ret
dec
or
pushf
in
add
lds
jmp
xchg
fsubr
jp
test
in
dec
scas
xor
jp
cmp
push
mov
xor
loop
int
sbb
sbb
and
mov
sub
mov
cmp
pop
into
pop
or
es
fiadd
sti
add
sbb
pop
mov
pop
dec
shl
push
dec
add
shl
push
sbb
mov
cmp
das
inc
inc
jl
xchg
cmp
add
mov
jo
dec
lock
iret
push
pop
add
mov
jg
push
add
push
xchg
mov
mov
dec
shr
sub
daa
sub
add
xor
sbb
in
enter
mov
pop
ins
pop
xchg
mov
sti
ins
xchg
or
cmp
mov
inc
je
ja
(bad)
jo
sbb
add
xor
(bad)
sub
jno
or
les
add
add
adc
ins
js
inc
and
push
rcr
pop
les
or
pop
mov
mov
mov
inc
loop
inc
ror
inc
jecxz
pop
dec
aad
dec
pop
pop
pop
xor
pop
jg
int3
pop
cs
sub
(bad)
das
ret
rcl
sub
mov
sub
and
or
sbb
test
movs
xchg
add
ret
pop
lock
sub
sysexit
adc
repnz
add
popa
add
stc
cmp
mov
sub
pusha
mov
push
sbb
loopne
imul
push
cmp
jne
ja
adc
jns
adc
and
je
and
fist
mov
push
cmp
xor
fwait
push
jmp
imul
xchg
jb
push
shl
dec
cwde
enter
mov
add
add
test
sbb
xor
mov
popf
mov
mov
dec
xor
cmp
(bad)
je
inc
xor
ins
cmp
sub
loop
inc
and
push
enter
retf
(bad)
mov
lods
lods
and
lds
pop
ss
add
shl
dec
dec
xchg
mov
pop
mov
mov
xchg
or
sbb
ss
sub
mov
sub
sbb
sbb
add
sbb
mov
inc
ins
or
loope
test
or
push
add
out
shl
mov
mov
cmps
pop
retf
fisttp
loopne
mov
dec
je
fmulp
cmp
dec
push
dec
pop
rol
push
mov
lds
dec
inc
or
jns
jecxz
pop
jbe
push
xor
arpl
pop
movzx
fimul
cmp
dec
bound
inc
ins
test
dec
mov
xchg
popf
pushf
jle
jne
retf
js
pop
out
add
jmp
call
xchg
mov
mov
inc
mov
test
cwde
and
or
mov
cmp
add
(bad)
js
loopne
push
sbb
shr
mov
je
push
aaa
shr
xchg
push
ins
out
pop
push
or
xchg
imul
rcl
push
inc
dec
xchg
xchg
fwait
inc
push
cmp
xchg
mov
test
jne
jg
dec
sbb
cmp
ficom
cwde
jp
mov
add
cmp
les
or
pusha
jo
ret
shr
mov
mov
jp
ins
hlt
dec
cmp
call
sbb
sar
loop
pop
dec
mov
add
mov
add
adc
pop
mov
cmps
jmp
into
ins
mov
and
cmp
xchg
add
jl
std
push
push
inc
inc
mov
adc
pop
or
retfw
inc
(bad)
sub
sbb
in
sbb
pop
nop
pushf
ret
xor
or
popa
or
ins
mov
rol
dec
add
mov
dec
test
ds
push
pop
ror
and
inc
mov
jne
pop
ja
jne
cwde
fisub
call
add
repz
push
dec
ror
leave
lds
(bad)
cmp
pop
dec
cmp
jg
test
xchg
mov
sbb
mov
inc
push
xchg
add
cmps
xchg
aaa
push
shl
xor
adc
ja
push
sub
fdivr
popf
and
push
ins
lock
jbe
out
inc
pop
add
inc
add
and
xchg
xchg
pop
mov
inc
inc
dec
adc
je
jle
pop
imul
add
mov
enter
scas
mov
and
mov
add
cmp
pop
jmp
out
pop
xor
cmp
ja
or
mov
div
ins
stos
cmp
or
pusha
mov
jl
jne
mov
pop
xor
dec
lea
jle
push
lods
add
(bad)
push
scas
test
push
or
out
or
jmp
mov
dec
imul
bswap
leave
leave
leave
add
add
leave
leave
leave
leave
push
pop
or
leave
leave
leave
leave
or
or
stos
outs
retf
clts
add
je
dec
test
loope
ror
add
and
test
and
cli
pop
sbb
loope
or
outs
push
pop
(bad)
xchg
push
mov
or
sahf
lahf
mov
rol
jmp
movs
movs
js
sbb
xchg
sub
ret
cmp
push
add
jns
stos
lds
xor
dec
cwde
cmp
or
lea
or
jg
test
dec
add
lea
inc
jl
int3
(bad)
shl
push
fdiv
enter
xor
in
dec
fcom
push
xor
mov
pop
cwde
mov
cmps
js
mov
or
loopne
les
or
jae
jp
add
push
inc
adc
xor
dec
mov
and
adc
fwait
adc
and
mov
out
lods
add
xchg
ss
or
push
sar
add
nop
jne
or
add
es
test
mov
ror
add
mov
ret
jne
inc
pop
adc
test
mov
jmp
dec
add
add
test
js
inc
ins
add
cli
jnp
mov
aam
add
or
loopne
xchg
jae
cmp
sbb
and
mov
sub
enter
sub
ret
inc
and
cmp
jb
add
inc
sbb
mov
jmp
mov
xchg
je
adc
jge
pop
add
not
rol
lods
inc
dec
iret
js
add
adc
xor
movs
jno
fwait
(bad)
sbb
clc
ret
or
mov
dec
int3
mov
xchg
xor
pop
sub
jbe
lock
push
sub
add
fsubr
shl
add
xchg
sub
je
or
loop
or
loopne
dec
mov
jne
jmp
mov
aas
cmp
mov
dec
sub
mov
cdq
inc
jbe
dec
addr16
mov
pop
mov
pop
xor
and
retf
push
std
jmp
shr
inc
in
fst
push
sub
mov
inc
add
or
outs
sub
cmp
add
add
leave
fisubr
push
jne
aas
push
xchg
inc
xchg
or
add
dec
cmp
sahf
div
add
push
dec
add
ins
push
dec
aaa
adc
ror
stc
lods
pop
jg
stc
add
rcl
inc
jge
or
test
adc
aaa
adc
dec
cmp
jae
sbb
popa
push
push
xor
std
fs
push
adc
sbb
call
add
jmp
aaa
stos
cmp
popa
mov
jle
sbb
mov
add
nop
pop
jl
add
add
sub
pop
inc
cmp
pop
aam
mov
mov
sub
lods
add
push
and
add
mov
jmp
mov
aas
xlat
add
adc
push
push
and
jle
inc
lods
data16
add
test
lods
fsubr
cmp
fwait
in
js
pushf
mov
fist
pop
inc
inc
cld
outs
push
jl
inc
cmp
jb
mov
mov
fcomp
cmp
fidiv
mov
test
lods
fistp
(bad)
or
mov
pop
push
sbb
inc
add
add
and
mov
out
retf
or
enter
pop
sub
add
repz
mov
cli
inc
add
je
add
sub
js
push
inc
cmp
jbe
push
dec
push
je
sahf
ja
adc
sti
not
add
fldcw
sbb
jmp
les
pop
fdivr
jb
mov
inc
push
push
push
mov
retf
lock
arpl
imul
inc
add
je
mov
add
pop
or
cwde
fmul
loopne
movs
mov
add
xchg
sbb
mov
sbb
loop
add
sbb
fsub
adc
dec
mov
mov
nop
mov
xor
pop
pop
sbb
(bad)
nop
add
jle
mov
sub
push
add
sti
add
cmp
in
outs
in
ret
jne
push
or
aaa
pop
adc
mov
ret
mov
scas
cli
cmp
jge
jbe
lds
(bad)
and
and
and
mov
dec
push
xchg
mov
pusha
adc
or
pop
jp
jmp
inc
pusha
inc
push
inc
mov
inc
mov
(bad)
call
retf
shr
sub
pusha
movs
sahf
(bad)
sub
fimul
inc
mov
std
pop
add
mov
dec
jmp
or
jmp
shr
or
ror
and
test
and
inc
repnz
cmp
jne
cmp
test
test
arpl
inc
test
sbb
sar
neg
cmp
xchg
int
and
mov
push
jmp
es
inc
cli
jle
daa
(bad)
rol
adc
lock
sbb
jae
lea
dec
out
mov
jle
inc
inc
les
in
std
or
xor
mov
loope
adc
add
in
add
ss
cmp
adc
ror
or
in
das
push
inc
dec
mov
mov
dec
or
dec
xchg
sub
fidiv
lds
das
mov
sub
inc
sub
add
push
js
push
imul
fcomp
stos
(bad)
cmp
sub
mov
jp
xor
and
(bad)
push
cmp
leave
mov
jb
or
mov
add
mov
or
sub
add
movs
mov
mov
jecxz
test
inc
jmp
inc
pop
xor
mov
push
pop
ins
mov
dec
jne
iret
sbb
sub
push
push
cmp
sbb
repz
lods
push
or
out
aas
push
mov
fadd
nop
push
js
pushf
mov
jle
add
ror
(bad)
mov
pop
sub
sbb
pusha
sub
mov
movs
lahf
cmp
jb
pop
xchg
push
fcomp
cmp
and
sahf
sbb
pusha
xchg
mov
jne
inc
mov
pushf
add
pushf
jbe
add
mov
pop
sbb
cmp
retf
ret
mov
sub
jp
jle
rcr
mov
or
adc
sub
les
xor
loopne
push
sbb
imul
jo
(bad)
push
frstor
mov
mov
cs
retf
movs
or
dec
dec
push
push
ss
mov
xchg
and
add
cmp
adc
push
enter
rcl
cmp
es
xor
sub
dec
inc
or
mov
adc
or
mov
jle
inc
push
jle
and
jg
xor
outs
push
mov
dec
sar
push
mov
sub
sub
call
add
xchg
add
imul
add
or
mov
add
lods
stos
or
add
ja
mov
add
call
add
js
ret
aas
loopne
cmp
adc
sub
cmp
scas
dec
cmp
add
pop
push
test
cs
inc
sub
add
jge
sbb
call
lea
xor
mov
pop
gs
dec
jle
pop
cmps
pusha
jg
in
jl
push
xlat
push
sub
fisttp
cmp
push
mov
mov
rcl
popa
popf
nop
pushaw
mov
dec
das
push
add
into
jne
sub
and
lea
cdq
enter
(bad)
push
aas
push
sub
mov
mov
add
add
mov
into
int3
inc
(bad)
movd
pop
pop
cs
cmp
cmp
mov
xchg
sub
mov
push
xchg
cmp
test
(bad)
and
or
dec
shr
xchg
or
lock
fcom
pop
fwait
sbb
iret
pushf
adc
pop
inc
cmp
lods
faddp
mov
sbb
call
cld
mov
cmp
mov
call
or
(bad)
xchg
mov
add
jl
jmp
or
dec
fdivr
jl
cmp
jge
and
xchg
ficom
xchg
push
dec
icebp
and
add
xchg
jl
sbb
push
jge
xchg
push
jp
jmp
enter
ja
adc
xchg
dec
mov
in
inc
add
and
stc
mov
inc
aam
dec
mov
push
sub
ret
fst
loopne
xchg
xor
or
mov
test
xchg
inc
inc
ret
es
add
lods
mov
mov
push
jae
or
inc
inc
mov
popa
out
or
stos
add
jo
outs
lahf
loopne
test
in
or
pop
call
mov
cld
lea
sahf
add
adc
adc
inc
mov
pop
inc
cli
add
push
add
mov
jbe
jo
mov
lahf
push
rcr
push
movs
mov
add
mov
add
add
rol
aaa
rcr
cmp
jge
cmp
jge
or
pop
scas
sbb
outs
jnp
pop
adc
or
push
xchg
adc
or
rol
les
add
or
jb
jmp
loopne
imul
push
jno
jmp
pop
adc
cld
hlt
jne
loope
pusha
cwde
add
mov
push
into
mov
in
add
les
add
nop
jp
push
inc
push
js
push
jp
dec
sbb
mov
mov
shr
in
dec
adc
addr16
les
fiadd
movs
mov
pop
mov
mov
or
sub
mov
or
mov
mov
xchg
and
add
(bad)
nop
mov
pop
jns
clc
mov
inc
push
mov
mov
add
iret
push
adc
dec
cmp
sub
xor
mov
sub
ret
adc
jnp
pop
test
xchg
jnp
retf
nop
push
or
pop
mov
cmp
pop
mov
nop
mov
test
xor
mov
pop
mov
lahf
dec
sbb
inc
mov
and
mov
xor
(bad)
aam
jbe
out
out
or
shl
mov
enter
jmp
js
out
xchg
ins
sub
xor
or
fwait
test
sbb
add
inc
adc
mov
jle
lfs
and
repnz
add
and
and
or
push
aas
xchg
jg
or
push
and
shl
in
add
and
push
nop
xchg
mov
add
jle
in
nop
pop
div
xor
sub
repz
hlt
or
jne
push
pop
pop
pop
bnd
push
cmp
and
or
jne
xchg
and
call
mov
fadd
fiadd
das
in
add
sub
ins
and
mov
test
xor
push
mov
add
bound
in
mov
inc
sahf
cmps
push
lock
and
xchg
int3
inc
loop
loope
ror
mov
dec
inc
sar
dec
sbb
mov
inc
adc
or
pushf
mov
rol
adc
push
or
mov
dec
adc
xchg
scas
call
push
add
or
adc
pop
sub
popa
dec
push
xchg
xor
xchg
xchg
fwait
call
loopne
or
xchg
xchg
dec
xor
inc
shr
adc
rcl
sub
add
movs
push
push
and
shr
pop
jo
add
cmp
mov
mov
sbb
rcl
adc
inc
adc
sahf
inc
and
or
adc
and
xchg
xchg
cmp
adc
jl
add
cmp
mov
xchg
add
stos
les
pusha
es
mov
cs
and
fidivr
and
sbb
(bad)
pop
test
adc
push
in
in
hlt
popf
pop
mov
mov
jae
inc
imul
repnz
arpl
dec
inc
jl
push
mov
cwde
shl
jle
jnp
add
stos
mov
mov
sbb
xchg
addr16
cwde
mov
or
clc
shl
hlt
xchg
int3
mov
cmp
or
jmp
mov
or
mov
add
mov
or
xor
arpl
mov
mov
jae
mov
mov
and
xchg
test
jnp
and
add
mov
sub
call
add
push
inc
push
inc
pop
xchg
dec
adc
pushf
sbb
push
out
call
jge
and
gs
enter
jns
add
(bad)
inc
inc
cmp
imul
xchg
sub
or
std
clc
or
iret
push
loope
push
jg
push
and
pop
adc
adc
push
ror
adc
xchg
adc
sub
xchg
jmp
xor
add
xor
cmp
mov
fiadd
jle
push
mov
mov
push
cmc
xchg
mov
and
inc
add
dec
dec
aas
mov
push
loope
mov
add
imul
cmps
or
and
adc
mov
pop
and
or
js
fisub
je
jl
add
pop
loopne
in
mov
inc
repz
mov
sbb
outs
mov
cmp
sub
push
sub
test
outs
and
jmp
jmp
sub
adc
ins
popa
sbb
sbb
jbe
call
xchg
cmp
and
dec
inc
jnp
jnp
je
xchg
cmp
push
in
nop
mov
dec
shl
and
ret
xchg
dec
or
xlat
dec
retf
adc
add
mov
mov
(bad)
jmp
pushf
mov
fdiv
dec
aaa
mov
cmc
jp
pusha
cmp
or
cmp
lock
js
sbb
mov
jecxz
fdivp
mov
mov
mov
add
dec
and
xchg
cmp
sbb
mov
shl
in
push
inc
or
sub
ds
mov
popf
loopne
inc
jmp
xchg
(bad)
je
dec
cmp
push
and
push
add
sbb
and
and
mov
xor
enter
cdq
in
imul
movs
(bad)
repnz
mov
(bad)
in
pop
mov
xor
cli
pop
xchg
nop
das
mov
data16
and
sbb
inc
loope
data16
retf
(bad)
aam
clc
pop
jle
and
fbstp
adc
jge
mov
jne
adc
in
popa
jl
mov
xchg
or
lahf
or
sub
mov
movs
mov
cli
and
push
pop
or
add
push
ins
mov
in
adc
and
ret
dec
pusha
les
clc
mov
add
add
mov
sbb
ret
cmp
and
sti
(bad)
jle
shl
rcr
inc
not
inc
lock
push
mov
in
add
or
or
xor
xor
lahf
shl
sbb
lahf
add
cmp
(bad)
fsubr
xchg
add
mov
stos
push
push
push
or
sub
les
int3
push
lods
jb
pop
sub
popf
fisubr
sbb
out
mov
(bad)
or
pop
and
pop
xor
mov
ret
lea
(bad)
jno
add
inc
inc
sbb
inc
inc
add
lea
lods
call
xor
movs
cmp
sub
shl
sar
mov
and
das
adc
dec
rol
xchg
pusha
mov
inc
mov
scas
xchg
mov
cmp
pop
cmps
adc
popa
jecxz
retf
add
cmp
mov
or
mov
sub
cmp
mov
xchg
xor
sar
es
ror
ins
test
cmps
adc
out
and
daa
loop
les
movs
xor
pop
test
add
jl
inc
xchg
or
dec
pop
sub
jne
sbb
retf
push
jb
dec
and
push
pop
push
loope
add
aad
or
adc
push
repnz
or
inc
or
or
das
pusha
pop
lea
inc
add
es
cmp
mov
icebp
(bad)
sbb
rcl
mov
lea
ffreep
mov
xchg
xlat
xchg
adc
add
sub
inc
push
sub
ins
dec
sbb
data16
lock
push
dec
mov
and
adc
loope
mov
pop
inc
pop
nop
push
push
enter
das
in
shl
std
in
(bad)
sub
movs
mov
push
jp
mov
int
cs
int
pusha
push
mov
add
retf
fiadd
push
push
loopne
movs
es
sbb
add
inc
(bad)
pop
test
xor
cmp
and
sub
push
mov
adc
aam
mov
mov
stos
dec
add
dec
nop
dec
mov
dec
sti
sub
inc
mov
mov
mov
and
retf
sbb
add
or
rcr
xchg
pop
popf
sbb
mov
ret
aas
inc
dec
push
fs
dec
dec
inc
cs
dec
dec
dec
dec
xchg
(bad)
aam
sub
aam
and
mov
je
mov
push
rol
pop
xor
adc
test
inc
(bad)
popa
adc
(bad)
add
nop
stos
push
add
mov
add
adc
add
add
add
add
inc
adc
and
push
pop
cmp
je
mov
inc
push
cmp
mov
pushf
mov
(bad)
and
sub
cmp
enter
outs
pop
mov
cmp
sub
fidivr
pop
pop
sub
rol
not
and
pop
or
xor
bound
fidivr
or
inc
dec
test
aas
stos
xor
fxtract
sbb
pop
icebp
mov
inc
in
inc
dec
push
mov
adc
mov
sar
push
nop
js
rcr
(bad)
movs
inc
adc
jg
adc
pop
je
cmc
add
xrelease
mov
pop
sub
pop
push
call
sbb
dec
inc
inc
adc
and
or
ficom
fimul
sbb
jg
mov
mov
je
and
adc
and
or
dec
xor
or
and
lahf
pop
cmp
cmp
jbe
fiadd
div
push
or
test
jne
inc
sar
mov
arpl
xchg
inc
xchg
sbb
sti
jo
push
scas
xchg
add
adc
add
xor
jns
pop
mov
jae
push
pop
mov
sub
es
mov
jno
jbe
cmp
lock
les
mov
cmps
iret
xchg
(bad)
test
rol
push
push
or
add
or
jg
sbb
adc
or
jg
cwde
adc
ret
rcl
rcr
rol
add
adc
jmp
xor
sub
cmp
aaa
das
pop
pop
outs
sbb
xor
dec
sbb
xor
or
or
(bad)
cs
in
cmp
jp
sbb
ja
add
cld
mov
and
cmp
add
and
and
stos
ret
imul
ss
adc
(bad)
mov
test
xchg
jmp
mov
inc
dec
test
push
sbb
push
movs
or
and
mov
jg
jl
xor
fwait
push
ja
jle
xor
and
cmp
jo
mov
rcl
(bad)
dec
add
xchg
les
cdq
xchg
mov
mov
adc
adc
mov
repz
int
je
xor
push
cmps
mov
add
sbb
mov
cld
test
and
je
stc
mov
push
adc
icebp
jmp
push
cmovge
and
dec
xor
ret
les
sub
pop
dec
adc
shl
nop
and
adc
push
or
test
mov
jg
test
aam
cmp
sub
pop
and
sbb
xor
dec
jmp
push
cmp
je
ror
lods
inc
adc
test
js
mov
push
retf
cmp
(bad)
ret
mov
cmp
sbb
ins
ret
ds
or
lods
cwde
push
adc
xor
lods
sub
es
and
es
mul
adc
stos
sub
xchg
nop
cmp
xchg
xor
or
dec
cmpps
add
mov
push
inc
add
and
mov
gs
xor
push
inc
mov
fwait
dec
push
inc
cmp
cmp
test
xchg
test
cmc
sbb
or
dec
xchg
and
rol
outs
outs
push
xor
push
nop
test
add
add
or
mov
mov
push
pop
in
and
or
pop
or
inc
add
sbb
sti
and
sub
xor
jle
pop
out
rcl
mov
pop
gs
inc
je
sub
shr
stos
inc
cmps
or
out
bound
push
sbb
lea
xlat
shr
ja
shl
dec
adc
fst
cmp
fwait
dec
cmps
mov
mov
les
and
hlt
lock
(bad)
mov
push
cmp
push
add
and
outs
(bad)
xchg
inc
mov
call
cmp
lods
aam
ds
aas
(bad)
inc
aaa
sahf
xchg
outs
xor
rcl
retf
add
popf
add
cmp
xor
and
and
xor
std
gs
pop
add
add
fistp
jae
lods
dec
fiadd
mov
shl
mul
stos
mov
or
pop
add
mov
test
xor
and
adc
inc
jne
push
and
mov
pushf
repz
jbe
push
pop
mov
pop
inc
stos
xchg
ror
jo
adc
sbb
fsub
pop
dec
add
add
add
ret
inc
xchg
push
push
sub
movs
pushf
pop
sub
or
lahf
in
add
push
pop
dec
ror
pop
or
lods
into
nop
add
cmp
adc
sub
sub
lea
into
xrelease
retf
xor
pop
push
mov
mov
sub
or
mov
push
xor
or
sbb
iret
mov
sbb
mov
mov
and
mov
add
mov
pop
xor
cmp
dec
jbe
cmps
lods
pop
mov
je
mov
(bad)
cmps
adc
adc
inc
nop
mov
aad
in
sbb
mov
sub
addr16
mov
mov
inc
dec
jne
ret
mov
dec
sbb
mov
lock
bound
inc
lock
fstp
fmul
mov
ret
ror
pop
sti
test
mov
ja
pop
push
je
adc
add
sbb
rcl
aas
adc
cmc
loope
fistp
nop
adc
mov
mov
test
inc
push
push
lock
leave
movs
and
and
and
shr
sar
mov
dec
adc
arpl
(bad)
sub
xor
push
sbb
mov
mov
into
push
jl
and
pushf
or
bound
cmps
xchg
jmp
loope
mov
and
cmps
adc
adc
mov
or
stos
cmp
mov
inc
sbb
call
or
push
xor
ins
mov
sbb
lods
add
test
scas
mov
mov
cmp
cdq
test
ret
jg
sub
mov
push
in
sbb
pop
inc
enter
dec
test
inc
addr16
test
or
sbb
mov
jns
les
cdq
(bad)
cs
stos
or
pop
dec
push
imul
mov
xchg
add
adc
xor
retf
gs
and
and
sbb
inc
and
pusha
test
inc
sub
jo
test
fadd
pop
shl
test
adc
push
inc
ds
push
nop
retf
or
or
dec
adc
or
push
fdiv
adc
retf
je
not
js
pop
pop
adc
movs
leave
nop
dec
leave
test
test
sub
push
mov
movs
sbb
or
cs
stc
ret
div
and
dec
test
inc
mov
cmp
inc
push
test
or
or
dec
or
fs
adc
aaa
add
pop
pmulhuw
cmp
adc
lds
mov
cmp
xchg
fmul
push
mov
mov
xchg
and
xor
dec
add
je
imul
and
and
pushaw
rcl
jb
lea
inc
mov
xchg
xor
nop
or
jg
xor
add
test
jmp
fs
cmp
add
push
push
dec
mov
jb
mov
aaa
test
push
sbb
jbe
xlat
push
ds
cmp
arpl
or
sbb
(bad)
ins
mov
(bad)
jge
or
retf
(bad)
mov
nop
sbb
ins
xor
cmp
xor
and
jb
xor
sub
mov
adc
call
xchg
call
push
mov
movs
cmp
cli
inc
xor
(bad)
(bad)
icebp
cmp
out
xor
or
les
inc
dec
fsub
adc
call
js
xor
into
out
sub
jno
mov
in
inc
adc
je
add
or
dec
loopne
les
sar
lock
cwde
enter
(bad)
cmp
xlat
rcl
sti
pop
iret
test
inc
shl
nop
inc
aad
cmp
mov
pop
out
push
mov
fdivr
add
push
push
add
pop
sbb
mov
adc
cmp
setl
bound
fdivr
scas
sub
xchg
rol
mov
add
push
and
xor
mov
daa
fadd
mov
xlat
mov
scas
aam
rcl
loope
jmp
mov
hlt
jmp
push
mov
clc
js
jmp
sbb
jge
pusha
mov
sub
inc
inc
sti
enter
sub
add
adc
mov
enter
mov
add
adc
fild
and
rcr
sub
adc
inc
mov
jbe
pushf
stos
add
ja
(bad)
rol
add
or
xor
jge
leave
mov
push
rol
in
pop
xchg
movs
sub
add
push
pushf
cmp
or
popa
add
add
(bad)
movs
movs
gs
jbe
aad
cmp
movs
cmps
sbb
ret
in
add
jae
shl
shr
push
sahf
and
ins
arpl
les
aad
pusha
ja
adc
movs
pop
adc
cmp
or
sub
or
ror
ror
xor
mul
cmps
push
push
sub
push
daa
jp
sbb
pop
xchg
je
mov
push
dec
and
sub
inc
aam
ds
ret
xchg
scas
xor
mov
test
jne
ror
dec
es
adc
mov
xor
shr
mov
mov
push
cmp
je
or
jle
sahf
fs
inc
mov
fcom
ds
mov
sar
pop
push
add
and
xchg
ficom
sbb
mov
xchg
and
pop
lods
and
add
cmp
jl
jg
add
pushf
pop
jno
lods
daa
fs
mov
test
sbb
push
xchg
movs
pop
jmp
inc
faddp
jmp
bound
add
xchg
and
loopne
neg
push
push
std
sbb
pushf
xchg
jmp
cmp
jbe
cwde
imul
mov
inc
dec
pop
fs
test
add
push
adc
xchg
push
jmp
loop
js
dec
mov
fistp
lods
xor
sub
push
inc
dec
adc
jb
and
into
and
mov
jg
adc
and
ss
adc
test
cdq
mov
or
daa
and
xchg
inc
sub
mov
test
adc
mov
pusha
or
add
es
add
adc
daa
push
add
jb
repnz
jle
lea
enter
dec
pop
outs
test
adc
sti
loopne
jo
inc
adc
adc
(bad)
xlat
test
xor
xchg
mov
or
ret
movs
sbb
dec
mov
sbb
push
pop
or
xchg
in
inc
dec
push
in
push
pop
and
hlt
out
mov
dec
sbb
jle
and
les
adc
push
sub
and
push
enter
xor
dec
push
fiadd
add
in
and
sbb
stc
shl
pop
jo
mov
shl
add
retf
cmps
jle
push
imul
pop
iret
shr
ret
int3
or
xchg
adc
jb
mov
and
je
cmp
jne
mov
cmp
inc
es
inc
dec
pop
and
xchg
out
mov
call
lods
call
or
sub
jge
das
jmp
pop
sbb
shl
mov
mov
into
inc
inc
xchg
iret
ss
add
sub
add
rol
xchg
push
xor
bound
mov
pop
cmp
fidivr
mov
mov
and
pop
test
jns
call
gs
dec
add
jmp
loopne
pop
mov
je
mov
das
shl
mov
test
loope
dec
shl
mov
dec
sbb
cmp
dec
ror
and
sub
aam
xor
push
enter
repz
or
mov
leave
lods
test
jmp
sub
aam
aaa
and
mov
xchg
jo
out
jne
mov
jns
adc
mov
dec
adc
pop
add
cmp
or
xchg
sub
ret
push
adc
adc
jl
cmp
adc
pop
adc
pop
rcr
mov
rol
imul
sub
jae
call
or
xchg
jbe
jns
add
ja
jae
rcr
mov
and
aas
ret
inc
call
mov
mov
or
(bad)
mov
mov
adc
dec
inc
pop
push
or
fsub
or
jmp
daa
or
inc
push
adc
ins
lea
fnop
dec
out
mov
xchg
dec
cmp
ins
addr16
or
and
xor
jecxz
sub
jne
cmp
dec
jno
aad
xor
movs
inc
lahf
dec
add
lahf
(bad)
pusha
xchg
icebp
cld
push
cmp
adc
sbb
fdivr
push
pop
or
or
pop
fisttp
sbb
sbb
or
add
xchg
xor
sti
push
dec
push
mov
jo
sbb
stc
push
pop
lds
repnz
fld
or
or
pop
mov
test
mov
sub
dec
cmp
shr
(bad)
ror
dec
push
add
call
ins
push
fadd
dec
pop
mov
push
push
mov
loope
dec
jl
inc
inc
cmp
pop
inc
fidivr
jmp
(bad)
or
xchg
hlt
pushf
or
es
or
inc
bound
(bad)
adc
rcr
dec
rep
inc
scas
push
or
push
mov
sbb
push
dec
pop
push
(bad)
jmp
and
or
sbb
mov
sbb
or
gs
test
mov
push
or
adc
enter
mov
inc
pop
dec
add
popa
mov
sbb
cmp
movaps
cmp
push
xchg
pop
rep
mov
add
inc
push
cmp
add
sbb
or
call
jno
xchg
not
mov
sbb
ins
clc
fldenv
mov
jne
inc
xchg
adc
loop
mov
lea
cmp
dec
cmp
push
hlt
retf
cmp
jecxz
test
inc
movs
jb
xor
movs
sbb
pop
push
cmp
inc
sbb
jmp
cmp
cmp
lock
dec
int
cmp
lods
rcl
not
je
sbb
outs
sub
xchg
mov
mov
mov
bound
daa
dec
dec
mov
or
inc
mov
lea
pop
mov
push
movs
or
stc
sahf
stc
test
ret
adc
loop
cli
inc
and
sbb
bound
mov
push
stc
es
push
xchg
inc
test
add
cmp
daa
movs
mov
add
push
in
push
push
push
cmps
xor
push
mov
add
mov
xchg
scas
ret
call
adc
rol
xchg
ins
sbb
jb
aam
dec
mov
ds
adc
loope
loope
ds
xchg
bndldx
push
fld
inc
push
sbb
test
or
push
test
jnp
sbb
stc
jmp
inc
nop
sbb
test
sub
pop
cmp
or
retf
outs
inc
iret
xchg
push
dec
adc
jbe
adc
pop
xor
mov
cmp
fs
or
adc
add
mov
out
sti
inc
sbb
pusha
add
add
outs
push
sbb
ja
repnz
xor
add
mov
or
dec
cmp
jl
jg
and
or
add
and
ja
cmps
sahf
jmp
sub
inc
mov
int3
mov
and
lock
xor
rcr
leave
fld
fucompp
fnstsw
test
xor
mov
rcr
out
pop
cmp
add
loopne
push
xor
arpl
adc
sti
out
dec
dec
jnp
fstp
jmp
xor
mov
jge
xor
add
fcom
mov
fstp
fst
add
add
ds
cmp
jg
neg
push
fild
jne
cmp
imul
adc
fmul
add
sub
jl
aad
(bad)
test
rcr
loopne
hlt
and
in
cwde
call
test
xor
inc
inc
or
ret
(bad)
mov
cmp
jmp
adc
mov
push
xor
popa
jmp
mov
lea
push
mov
dec
nop
jmp
(bad)
add
(bad)
sahf
scas
test
scas
js
push
push
cmc
sbb
sbb
sbb
mov
repz
loop
sbb
mov
mov
xchg
mov
jno
lods
jmp
adc
inc
xchg
loop
pop
in
fisttp
cmps
mov
loope
jmp
pushf
mov
bound
je
adc
xchg
push
out
pop
mov
sti
add
add
cdq
test
sbb
add
inc
mov
and
sub
sbb
push
pusha
mov
rol
jle
xchg
or
shl
sub
adc
sub
add
nop
fstp
adc
dec
and
fcmovnbe
adc
inc
cwde
cdq
adc
scas
xchg
in
xchg
sub
(bad)
les
or
sar
xchg
stos
inc
leave
aam
pop
sbb
pop
pop
pop
aas
pop
or
push
lahf
pop
sbb
rcr
pushf
(bad)
xlat
inc
nop
pushf
nop
mov
or
es
pusha
aam
mov
and
inc
jecxz
sbb
dec
cdq
dec
xchg
push
push
dec
and
es
pop
xor
dec
and
push
jmp
push
aas
in
inc
inc
sub
inc
push
out
mov
mov
or
and
js
clc
add
cld
aas
ja
mov
push
cmp
mov
and
push
sub
rol
(bad)
aad
xlat
push
jle
mov
or
push
dec
add
pop
adc
sbb
sbb
xchg
jbe
movs
sbb
xor
add
shrd
rol
push
sub
mov
or
inc
aas
call
adc
inc
cmp
push
aaa
call
cmp
scas
push
add
push
lods
and
mov
inc
mov
or
sub
pop
and
sbb
and
inc
and
add
cmp
iret
ret
ret
add
fs
mov
(bad)
dec
shl
jnp
mov
scas
js
pop
and
inc
push
inc
mov
mov
ret
push
cmp
rol
(bad)
je
or
shr
cmp
mov
push
sbb
pop
cmp
sub
adc
jo
cdq
imul
scas
add
ss
mov
sbb
push
and
repnz
cmps
push
jmp
cmp
mov
or
fnsave
mov
sbb
mov
pop
jp
test
xor
xchg
mov
in
in
or
push
xor
pusha
push
inc
adc
push
cmp
adc
cmps
les
pusha
or
jg
inc
inc
add
and
inc
push
lods
or
loopne
xor
inc
popf
mov
and
ins
sub
add
call
pop
adc
adc
pop
into
int3
xor
cmp
(bad)
xor
pop
mov
cmp
add
push
xchg
cmp
push
xor
frstor
mov
dec
aam
pop
dec
jns
push
xchg
adc
add
aaa
cmp
jg
or
adc
cmp
stos
pusha
adc
push
lds
mov
test
mov
inc
ins
inc
pop
push
clc
push
fimul
pop
in
push
add
mov
frstor
cmps
and
inc
or
mov
mov
lods
outs
or
repnz
sub
fisttp
fwait
mov
sub
mov
call
push
cdq
push
movs
rol
adc
clc
aad
and
and
jb
dec
jnp
call
add
and
push
push
sbb
inc
xchg
dec
dec
jp
enter
js
or
adc
iret
imul
add
jecxz
int
or
dec
cld
pop
add
dec
mov
dec
dec
stos
adc
int3
data16
mov
int3
jmp
nop
and
dec
dec
add
and
dec
dec
dec
dec
sbb
arpl
int
sbb
pop
add
cdq
xor
and
jmp
ret
adc
sahf
retf
leave
or
dec
dec
dec
dec
sbb
adc
cmps
mov
jmp
sub
xchg
rol
and
push
cdq
add
scas
jecxz
or
xor
cmp
popa
dec
mov
cld
cld
nop
pushf
dec
enter
lock
add
cld
add
dec
adc
push
add
and
push
pop
and
cdq
lahf
xor
jns
cld
xor
jge
loopne
mov
lods
or
push
popf
and
mov
aad
adc
push
xchg
loope
or
nop
ins
mov
gs
test
add
lods
stos
lahf
push
lahf
dec
dec
sbb
dec
dec
repnz
dec
dec
add
or
mov
adc
cmp
and
push
cwde
adc
movs
lock
mov
cmp
mov
push
and
jmp
shl
pusha
push
xor
inc
aas
push
mov
dec
pop
call
(bad)
cmp
popf
jecxz
sub
sub
jae
lds
and
jne
mov
pop
into
scas
(bad)
mov
ficom
xchg
push
mov
and
test
xor
add
jecxz
or
cmp
es
loope
ja
out
sbb
dec
sub
and
(bad)
icebp
je
xor
and
inc
xor
or
scas
push
push
stos
xor
mov
nop
jno
int3
out
dec
adc
fs
adc
mov
mov
xor
fs
sbb
push
inc
add
inc
dec
sbb
push
loope
push
add
in
push
push
adc
xor
mov
jmp
inc
sub
jg
je
je
or
stc
bound
adc
mov
add
dec
test
xchg
jbe
push
push
out
xchg
stos
out
pushf
xor
mov
sbb
movs
pushf
or
(bad)
push
aam
ret
(bad)
and
adc
mov
adc
push
mov
jnp
test
push
fidiv
leave
adc
out
push
cwde
mov
dec
cmp
or
dec
cmp
xchg
nop
test
packuswb
jp
repz
jmp
pop
pop
(bad)
xlat
sbb
ss
nop
xor
jo
inc
test
stc
push
cmp
and
xor
mov
pushf
mov
dec
jmp
jb
fucomi
cmp
jne
ror
push
inc
ror
xor
xchg
push
ret
inc
add
pop
movs
imul
dec
pop
push
push
adc
push
push
fs
add
pop
stc
fwait
add
lock
lods
pushf
(bad)
popa
or
add
adc
adc
xchg
cmps
call
and
sub
mov
es
pop
pop
lea
ret
cmp
or
mov
push
(bad)
fldenv
sub
xchg
sbb
sub
cmp
aaa
add
je
push
nop
pop
adc
cmps
add
add
push
push
sti
outs
popa
jmp
pop
push
dec
xor
add
and
push
cmp
cmp
push
jge
icebp
movzx
push
dec
scas
aaa
mov
pusha
or
pop
cmp
mov
mov
or
adc
outs
pusha
sbb
add
jo
and
hlt
inc
dec
shl
ror
fidivr
dec
adc
sub
add
nop
inc
sbb
pop
jmp
fbld
test
loopne
ror
movs
or
dec
pop
imul
and
test
mov
lods
(bad)
adc
inc
in
out
ds
imul
sbb
cmp
jne
stos
jae
jb
dec
and
sbb
push
inc
cmp
rcr
rol
lahf
sub
fidivr
xchg
mov
aas
out
xchg
rol
sub
push
in
and
inc
dec
cwde
adc
cmp
loope
mov
sbb
inc
enter
or
jmp
or
in
inc
push
movzx
add
sub
rol
xchg
frstor
xlat
add
fsub
or
and
pop
je
(bad)
addr16
jge
aaa
and
cmp
push
xor
and
pop
sub
inc
or
nop
and
icebp
sub
push
jno
xor
xchg
inc
js
push
mov
imul
test
(bad)
cmp
test
dec
les
movs
mov
lea
mov
jl
mov
push
xchg
enter
add
add
and
iret
xor
push
jbe
adc
test
mov
push
in
xlat
xlat
mov
or
inc
int3
enter
imul
add
or
mov
push
mov
push
push
or
nop
ror
push
retf
mov
leave
inc
cmp
dec
push
mov
nop
mov
rcr
cwde
xchg
sub
sbb
fwait
pop
mov
inc
mov
sbb
mov
je
mov
call
push
mov
nop
jnp
sbb
mov
xor
jo
daa
lock
mov
push
call
or
popa
pop
mov
add
adc
add
in
mov
adc
mov
rcr
lea
jnp
sub
or
mov
jle
adc
cmp
jb
cli
icebp
jg
repnz
push
xchg
jle
push
dec
jnp
dec
pusha
pop
dec
add
inc
in
xor
sbb
mov
mov
mov
shl
pop
pop
lahf
dec
sbb
in
add
call
fisttp
xor
jmp
xor
imul
xchg
push
add
enter
movsx
add
xchg
jge
rcl
pushf
add
leave
les
lds
loopne
mov
sub
ficomp
push
lea
repnz
mov
mov
add
adc
loopne
inc
mov
shl
sub
dec
int3
cmp
add
lods
scas
sar
mov
cli
nop
lea
sbb
data16
test
inc
scas
sbb
hlt
sub
call
add
xor
ror
adc
mov
dec
icebp
push
mov
add
push
mov
fstp
(bad)
shl
and
movs
sub
cmp
push
inc
mov
and
js
adc
push
jae
nop
or
pop
into
lock
mov
pop
mov
sbb
jne
inc
stos
repnz
loopne
lahf
push
jo
sub
js
add
pop
mov
int3
rcr
add
inc
rcl
rol
popa
lds
test
jge
js
(bad)
jg
in
ret
pop
add
xchg
cmp
lock
into
loop
xchg
ret
(bad)
cmps
mov
ret
push
and
mov
adc
aaa
pop
enter
sbb
ins
nop
mov
hlt
jp
call
aam
je
push
push
xchg
jl
push
sti
ret
pop
shl
jle
mov
mov
aam
xor
shr
add
retf
sbb
out
fs
icebp
add
or
rol
pop
loope
mov
dec
push
sub
cdq
push
retf
retf
cmp
pop
pop
mov
sbb
mov
inc
or
adc
mov
nop
jp
pop
iret
jl
mov
xor
out
arpl
and
add
test
push
mov
dec
jmp
cmp
je
cwde
popa
mov
popf
(bad)
mov
mov
aam
mov
pop
mov
aas
shl
pop
push
xchg
inc
add
jge
std
mov
add
push
and
add
add
inc
inc
cmp
push
push
push
pusha
cmp
push
sbb
jmp
push
je
mov
push
fwait
pop
sbb
scas
inc
jo
adc
out
jo
jo
jo
pop
mov
pop
dec
xor
add
xchg
das
dec
sbb
add
out
cmp
lock
add
mov
lock
fimul
or
pop
xchg
add
mov
dec
sub
mov
call
or
dec
cdq
inc
or
add
cmp
xor
(bad)
adc
mov
sbb
inc
jmp
aad
sbb
pop
stc
mov
adc
outs
inc
and
mov
push
push
sbb
movs
dec
dec
inc
call
ret
pop
mov
ret
dec
aad
add
lods
sbb
scas
pop
inc
cwde
int3
int3
sti
ror
loop
int3
add
xchg
xor
push
out
cmp
mov
mov
push
add
and
mov
sub
inc
push
mov
test
cmp
sbb
adc
mov
into
push
imul
dec
daa
pop
sti
loope
mov
fsub
add
mov
push
dec
loopne
push
jne
outs
nop
pop
xor
pusha
mov
imul
cmp
push
push
xchg
outs
jo
movs
mov
add
add
leave
adc
dec
push
fdiv
and
xor
and
test
push
cmp
sbb
xchg
nop
imul
lea
sbb
and
xchg
mov
sbb
sar
push
je
movs
mov
test
mov
and
push
lods
inc
pop
mov
retf
push
js
inc
or
push
rcl
push
xchg
adc
mov
xchg
pushf
stos
lods
xchg
adc
stc
imul
imul
std
loop
rcr
pusha
scas
pop
popa
and
push
pop
movs
push
push
inc
fsubr
movs
fwait
inc
ds
xchg
pop
cmps
fwait
je
jl
imul
mov
fld
inc
call
lods
pop
pop
loope
test
pop
inc
cmp
jmp
inc
jo
mov
inc
lea
idiv
xor
cmp
sub
shl
or
push
xor
aad
jbe
xchg
mov
pop
fadd
ror
and
sub
pop
push
adc
scas
xor
mov
nop
clc
mov
je
inc
sub
dec
inc
xor
gs
aam
push
and
pop
mov
inc
shl
sub
xor
or
sub
adc
popa
adc
xchg
nop
adc
sbb
adc
dec
dec
test
mov
xchg
inc
jne
inc
and
sub
cs
test
or
in
in
movs
xchg
sub
adc
sub
test
sub
pushf
cmp
outs
out
jb
inc
adc
mov
add
ds
cmp
movs
or
sbb
push
les
(bad)
in
xchg
jmp
inc
cmp
sar
add
and
mov
push
cmp
je
pop
mov
mov
inc
pushf
pusha
pop
push
nop
pop
sti
test
dec
xor
xchg
js
repz
mov
aam
lods
sub
xchg
jne
fild
sbb
js
sub
and
test
dec
push
sub
pop
push
cdq
or
xchg
ret
fstp
mov
aad
inc
or
push
mov
and
xor
mov
adc
std
sbb
(bad)
sub
fdivr
add
inc
adc
inc
dec
lods
leave
popw
inc
mov
or
fwait
and
dec
dec
mov
sbb
mov
sub
or
xor
or
and
xor
pop
jge
or
mov
and
adc
call
mov
sbb
xchg
stos
mov
nop
das
push
sub
out
pushf
push
rcl
push
or
sbb
push
ins
or
call
mov
inc
ror
pushf
icebp
nop
pop
inc
mov
mov
mov
sub
pushf
inc
ss
push
adc
sub
lahf
jo
hlt
sbb
add
xchg
call
mov
add
lods
int3
shr
sub
xchg
and
inc
inc
ja
sahf
jl
and
and
push
adc
xor
inc
jp
pop
mov
lahf
jns
lahf
mov
pop
mov
jne
or
jle
mov
and
out
and
xchg
push
sbb
fmul
bndldx
add
or
aam
aam
cmp
push
dec
sbb
xchg
jb
(bad)
and
(bad)
in
in
pop
jg
mov
add
cmc
int3
ins
sbb
neg
pop
cli
push
cdq
pop
je
cmp
ror
aas
pop
movs
xor
aas
push
sub
pop
and
imul
mov
popa
movs
mul
jmp
cmp
ffreep
add
out
jne
shl
shr
or
lahf
inc
sub
ds
pop
and
loope
inc
retf
push
xchg
(bad)
or
jmp
add
push
out
xchg
push
sar
push
xadd
nop
push
mov
push
clc
inc
test
inc
add
in
inc
jnp
pop
or
fdiv
sbb
les
loopne
jbe
mov
push
retf
add
add
add
cmp
pop
shl
push
enter
adc
and
push
in
inc
enter
sbb
retf
lods
inc
sbb
popa
inc
xor
push
enter
mov
dec
push
xchg
adc
adc
xor
adc
movs
movs
enter
loope
push
arpl
sbb
dec
sbb
ret
shl
cs
pop
ror
jmp
add
add
and
pop
push
sti
outs
dec
mov
push
icebp
dec
push
push
xor
iret
push
push
pop
xchg
adc
pop
cmp
fcom
add
jge
mov
mov
jae
fldcw
mov
ins
mov
int
test
or
xor
push
data16
sub
add
mov
or
sbb
sub
std
ins
mov
sti
ja
data16
cmp
rcr
sub
sbb
pop
and
or
xor
arpl
lods
mov
adc
or
pop
inc
add
out
lods
nop
inc
aas
dec
add
std
out
inc
push
xor
push
test
scas
pop
xchg
adc
push
popf
rcr
cmp
mov
gs
call
jno
icebp
scas
js
push
xchg
retf
call
movs
adc
pop
mov
push
or
jecxz
pushf
mov
inc
mov
sbb
or
push
loopne
xor
mov
jl
xchg
cmp
lea
push
mov
fcmovu
push
or
fwait
adc
jae
mov
pop
in
test
sub
or
outs
lea
ret
(bad)
bound
imul
jmp
and
pop
and
mov
xchg
mov
iret
add
test
xor
add
rol
aad
sub
mov
push
mov
int3
lods
stos
pusha
push
ins
cmp
add
nop
add
adc
xor
or
xlat
sahf
add
fadd
test
pop
add
sbb
stc
arpl
stos
cdq
test
nop
inc
pop
mov
mov
rcl
dec
inc
mov
add
outs
adc
loope
enter
sub
mov
or
ror
outs
push
pop
sbb
aas
push
xor
sub
int
call
adc
xchg
(bad)
cmp
add
push
add
and
int
sub
dec
repz
imul
(bad)
(bad)
lea
adc
or
or
adc
sbb
xchg
hlt
jne
add
rol
mov
push
add
adc
add
xchg
push
push
leave
(bad)
outs
call
pop
xchg
mov
pusha
xchg
rcl
and
div
xchg
in
xor
cmc
sbb
sub
aam
push
call
jns
adc
and
push
adc
mov
jbe
mov
rol
push
jo
lea
scas
mov
(bad)
xor
sbb
jnp
fstp
sbb
or
sub
cmp
add
push
sub
ins
sbb
or
add
lds
jp
int
popa
cmc
nop
dec
push
adc
ds
or
loop
(bad)
loope
mov
adc
or
scas
or
shr
dec
adc
xchg
mov
sub
cmp
ret
cmp
xor
xor
xchg
or
fwait
or
mov
add
popa
lods
xor
push
mov
mov
enter
stos
rcr
int
retf
test
fdivr
scas
shl
mov
xchg
pop
fiadd
jecxz
rol
sbb
jae
sbb
ror
jmp
cld
loop
clc
push
pop
adc
cmp
jmp
add
retf
popf
test
shl
push
xchg
shl
jecxz
push
sbb
mov
shl
sub
pop
in
add
loope
xchg
adc
push
(bad)
imul
repz
add
adc
mov
cmp
leave
int
test
mov
ja
fmul
adc
fwait
idiv
int
mov
cmp
jne
or
sbb
sbb
xor
mov
inc
inc
ficomp
les
outs
retf
retf
scas
(bad)
rol
cld
sub
mov
push
jne
inc
lods
adc
dec
repnz
imul
add
sbb
inc
push
retf
mov
or
sbb
je
add
mov
cwde
ret
or
paddsb
cwde
xor
pop
leave
rcl
cmps
adc
pop
ret
enter
(bad)
das
sub
sub
leave
inc
add
cmp
nop
xchg
push
inc
mov
inc
add
fwait
pop
sbb
mov
dec
push
add
mov
and
add
pushf
push
nop
sti
retf
push
xor
mov
popa
movs
or
pop
or
imul
add
xor
sbb
and
addr16
neg
mov
and
das
cmp
lea
pop
outs
aas
sub
inc
or
xchg
test
sub
test
push
sub
pop
(bad)
ja
pop
je
or
cmp
sbb
add
sar
inc
mov
shl
add
mov
scas
adc
out
cmp
loopne
add
cmp
sbb
push
test
push
and
fs
and
cmc
jl
andps
loope
pop
in
sbb
dec
in
cmp
xchg
sbb
cli
or
test
add
pop
add
jb
push
pop
sti
rcr
or
aaa
mov
jne
fisttp
icebp
add
pusha
jmp
jbe
jb
nop
sbb
sub
mov
xchg
jo
dec
push
adc
(bad)
cmps
test
imul
or
inc
sub
mov
lea
(bad)
mov
mov
lahf
mov
ret
xchg
or
jns
xchg
add
inc
loopne
aas
dec
push
icebp
repnz
out
dec
cwde
sti
lods
mov
dec
or
mov
mov
mov
aaa
mov
cwde
leave
in
das
push
mov
or
adc
push
stos
nop
adc
ins
aaa
js
jae
push
lea
push
ins
imul
add
push
mov
adc
sub
add
xchg
push
sbb
or
mov
dec
or
sbb
mov
in
add
sub
jle
push
arpl
cmps
addr16
xchg
push
add
dec
adc
test
nop
inc
test
mov
fist
scas
mov
xor
movs
mov
inc
xchg
into
movs
lds
xchg
rol
add
inc
jl
mov
rcl
mov
imul
pop
mov
inc
(bad)
or
cs
test
dec
xchg
mov
je
dec
xchg
or
icebp
shr
(bad)
pop
iret
or
mov
sbb
or
or
adc
and
push
or
loop
or
xchg
jecxz
dec
push
pop
xor
mov
xor
mov
test
adc
dec
add
enter
inc
sub
and
xchg
test
adc
rcr
xor
adc
and
cmp
sub
cmp
movs
xor
pop
xor
lahf
push
push
pusha
dec
cmps
or
loopne
fs
mov
jl
lock
clc
pop
mov
cvttps2pi
stos
push
xor
add
inc
xchg
cs
rcl
jge
(bad)
ficomp
test
xor
sti
jg
push
xchg
mov
pop
dec
push
push
sbb
lock
les
push
dec
jmp
mov
push
push
xchg
push
scas
or
sub
in
daa
mov
sub
jge
push
mov
sbb
je
pusha
ins
inc
pusha
mul
push
sbb
sbb
push
sahf
adc
xor
call
mov
ins
iret
mov
inc
movs
xchg
sbb
push
pmaxsw
adc
pop
ret
daa
fist
loopne
movd
das
mov
aam
stos
jmp
sahf
push
jno
mov
push
ja
in
inc
push
sub
and
mov
pop
inc
adc
dec
cmp
adc
pushf
add
cmp
aas
push
bound
in
push
push
js
icebp
je
jb
mov
add
xchg
sub
push
in
imul
sbb
xlat
fimul
adc
jbe
pop
mov
das
call
ret
ja
adc
adc
inc
cmp
pop
int3
or
xchg
fwait
(bad)
aam
push
adc
pusha
cmps
jmp
ret
lea
fst
pop
sbb
add
adc
loopne
mov
pop
dec
ins
mov
(bad)
xor
lea
aas
sti
cld
dec
sbb
loopne
std
adc
sbb
xchg
lock
rcl
sub
jp
(bad)
cmp
adc
add
push
push
adc
test
nop
aas
and
pushf
and
nop
push
lea
out
stc
push
adc
sub
lea
aam
add
enter
dec
sub
inc
push
xor
test
xchg
xchg
sub
push
adc
push
daa
in
add
aam
cwde
imul
dec
sbb
sbb
sub
jg
xor
sbb
outs
inc
rol
add
xor
dec
or
pop
xor
adc
and
jno
adc
xor
aas
enter
add
push
add
lods
jns
call
add
aaa
inc
cmp
and
xchg
lods
xchg
push
push
lahf
mov
sub
xor
xchg
daa
movs
ror
loopne
int3
paddd
or
inc
aaa
and
push
cmp
sbb
mov
lods
les
sbb
inc
add
jne
hlt
dec
and
int3
das
jl
ret
pop
cmp
dec
sub
cmp
gs
aaa
rcr
adc
or
dec
mov
or
mov
and
or
dec
sbb
or
(bad)
xchg
xchg
pop
fild
iret
add
js
adc
loop
mov
mov
xchg
ret
imul
pop
mov
mov
xor
jne
repz
push
enter
imul
test
leave
inc
and
inc
shl
push
jne
retf
hlt
sbb
xchg
daa
in
fst
adc
mov
lea
mov
dec
cmp
or
or
or
cmp
pop
adc
mov
push
adc
cli
cmp
xchg
mov
add
in
in
adc
(bad)
stos
adc
and
mov
prefetchw
add
add
js
jecxz
jo
stc
xchg
pop
std
push
loopne
hlt
in
or
or
pop
icebp
xchg
and
sub
add
adc
and
in
sbb
and
leave
cmp
dec
pushf
movs
mov
retf
or
ror
and
push
sbb
push
push
mov
mov
aaa
xor
in
out
jo
add
mov
xor
lock
clc
sbb
pop
adc
push
pop
cmp
in
pop
sbb
jae
pop
or
cmps
ja
les
mov
movs
movs
test
lds
fsub
or
movs
sub
and
xor
sbb
sbb
add
cmp
test
in
mov
xor
pop
add
test
loope
pusha
mov
ins
mov
mov
daa
mov
xor
jmp
dec
xchg
cmps
sahf
clc
repz
dec
cmp
nop
dec
sbb
sbb
repnz
cmps
fnstsw
pop
pop
sbb
inc
dec
and
mov
fstp
cmps
rcl
push
aad
int
jecxz
adc
(bad)
push
cmps
mov
aas
add
sub
test
frstor
out
ds
sti
sbb
fbld
and
stos
out
out
popa
and
cmc
push
sub
dec
outs
sub
icebp
sbb
inc
xchg
dec
pop
jle
out
in
adc
adc
jge
push
ins
fsub
adc
into
mov
pushf
dec
sbb
push
adc
cmp
int
jne
jno
in
enter
mov
mov
xchg
push
adc
test
push
adc
loopne
fwait
jns
popf
inc
retf
sub
jne
mov
js
fsubr
xchg
dec
xchg
(bad)
push
das
pop
xchg
dec
or
push
mov
mov
mov
es
dec
arpl
in
fs
sub
test
sbb
push
sub
mov
add
adc
add
adc
xchg
xlat
call
sbb
sbb
fwait
pop
out
dec
mov
(bad)
sub
pop
mov
out
adc
dec
cmp
add
inc
mov
daa
or
les
push
add
sub
psllq
stos
das
add
xchg
adc
and
cmp
jo
imul
in
loope
mov
push
(bad)
jmp
outs
lds
sub
(bad)
jno
jmp
jl
outs
push
popa
adc
cmp
sub
pop
mov
js
mov
xchg
adc
outs
leave
sbb
dec
pop
dec
mov
int
push
pushf
push
jae
cmp
inc
adc
jmp
adc
xchg
add
add
stc
xor
sbb
mov
pop
or
fcomi
push
xchg
mov
push
nop
das
sbb
xchg
add
push
mov
mov
xchg
nop
xchg
mov
and
stos
movs
jb
sub
xchg
xchg
push
test
jecxz
dec
sbb
xor
icebp
or
sbb
inc
inc
dec
fidiv
js
adc
inc
sub
dec
xor
cmp
ret
mov
or
ds
xchg
adc
adc
cwde
cmp
icebp
sub
pop
push
stos
or
cmp
cdq
sub
lock
xor
add
add
adc
cmp
dec
enter
cmc
jge
cmp
int3
adc
jecxz
fistp
or
push
push
pop
sub
je
lock
adc
fs
mov
hlt
push
mov
arpl
sbb
in
push
mov
sub
sbb
les
shr
loopne
mov
pushf
test
add
dec
sar
mov
jp
push
rcr
and
lods
sub
add
mov
add
shr
and
repnz
sub
or
or
push
push
add
mov
or
mov
lods
ror
jb
mov
dec
cld
cmp
fcomp
push
stos
push
or
jmp
sar
push
xor
jl
or
std
xchg
rol
ret
push
jo
jne
add
and
or
or
in
fidiv
pop
pop
adc
pop
sub
xor
push
and
sub
nop
popf
ret
sti
imul
and
or
mov
mov
shr
push
in
jecxz
push
cmp
add
fst
inc
jbe
mov
sbb
(bad)
fidiv
sub
push
call
pop
inc
push
movs
stc
push
add
sub
and
sub
pop
and
imul
add
dec
in
cmp
cmp
cmps
mov
push
clc
sub
or
popa
xchg
ret
mov
rol
and
adc
push
and
sti
jle
and
test
push
inc
push
pop
mov
outs
jo
push
fcom
and
mov
and
add
daa
mov
sub
push
pop
dec
call
pop
pop
(bad)
lock
sti
out
sub
mov
ret
lock
or
ja
inc
or
add
inc
mov
cmp
or
push
or
mov
movs
fdivr
ret
inc
push
add
out
fcom
mov
fwait
dec
jecxz
and
inc
adc
jo
in
arpl
adc
dec
xor
or
add
cs
mov
pop
and
sub
aas
fidiv
push
movs
lock
(bad)
call
aas
and
scas
push
push
pop
or
cmp
scas
into
shl
sbb
shl
mov
nop
cmp
cmp
les
pop
xor
call
xor
or
cmp
push
fnstcw
das
punpckhbw
int3
add
int3
mov
jne
cdq
push
push
adc
(bad)
inc
and
mov
addss
out
data16
inc
mov
popa
cdq
gs
ret
pop
jnp
pop
push
push
jns
clc
cld
sub
shr
lds
shl
adc
sbb
rcl
ret
and
mov
popf
into
mov
bound
or
fisttp
and
inc
jecxz
add
mov
in
adc
or
sbb
cmp
arpl
or
test
inc
push
push
sbb
sahf
std
loopne
or
call
cmp
leave
mov
int3
test
pop
inc
add
cmps
cmp
push
je
adc
inc
in
add
ja
les
cli
sbb
fistp
loope
fst
aas
fnstcw
scas
fisttp
pop
xchg
inc
mov
add
add
nop
call
ss
xchg
mov
pop
repz
pop
push
popf
cmp
hlt
inc
pmulhw
(bad)
fimul
sub
sub
xor
fdiv
and
xchg
out
jbe
and
hlt
lds
or
mov
mov
push
push
adc
jmp
pop
jmp
repz
int
aas
push
cmp
loope
inc
jmp
test
es
xchg
cmp
add
push
push
mov
add
mov
dec
xor
lock
cdq
call
lock
xor
adc
and
push
adc
mov
sub
mov
mov
(bad)
rol
mov
jmp
inc
push
push
push
or
call
test
xchg
or
mov
sub
or
sub
mov
xlat
xor
sub
xor
jle
or
add
inc
mov
arpl
cs
push
es
adc
(bad)
xor
daa
or
adc
sbb
ds
sbb
add
sti
movsx
inc
adc
push
push
mov
xchg
loopne
and
mov
clc
push
push
xor
mov
sbb
push
rcl
rcl
jp
int3
sub
lods
mov
loopne
ror
adc
or
push
pop
je
call
push
fs
enter
mov
pop
stos
js
inc
imul
jg
out
shl
cmp
jb
stos
jbe
xchg
div
(bad)
hlt
je
mov
cmps
lea
add
adc
add
xchg
repz
xor
sub
(bad)
pop
out
jnp
test
jmp
sbb
cmp
or
(bad)
(bad)
orps
aaa
xchg
push
xchg
mov
jecxz
or
mov
and
and
int3
add
enter
pusha
or
leave
nop
cmps
movs
add
or
add
nop
loopne
inc
mov
lock
add
push
fucomp
and
add
je
loop
sar
add
inc
lock
or
xor
push
aaa
dec
call
inc
mov
push
fs
add
pop
aad
jmp
adc
inc
invd
mov
push
es
add
xchg
cmc
add
sbb
js
test
push
enter
mov
xchg
add
pop
xchg
test
push
pop
in
aaa
or
into
sbb
fwait
adc
pop
enter
sbb
inc
add
mov
cmps
push
xchg
xor
and
pop
mov
pop
mov
ins
mov
push
push
and
call
fwait
ins
inc
or
or
mov
outs
dec
ds
lods
push
inc
mov
rol
je
or
pop
data16
(bad)
mov
fmul
call
cs
rcl
shl
fadd
pusha
mov
inc
mov
loopne
enter
push
scas
pop
add
je
xchg
popf
inc
pop
mov
neg
adc
push
in
adc
mov
sub
pop
sti
and
jmp
and
xor
or
mov
mov
jne
push
scas
cmp
aam
jge
or
sub
push
test
(bad)
imul
cmp
sub
out
pusha
jmp
dec
add
or
push
dec
sbb
test
pop
out
adc
sbb
test
pop
add
add
mov
cmp
sub
pop
or
movs
fcmovnb
(bad)
sbb
pop
and
inc
popa
xor
push
jnp
cli
pop
mov
test
push
and
stc
or
rep
jmp
inc
inc
nop
mov
adc
jb
sbb
enter
out
rcr
lea
nop
cmovne
(bad)
jns
push
je
ror
mov
repnz
lods
adc
fistp
dec
add
movs
shl
add
dec
cmp
jns
neg
test
int3
jns
lahf
out
mov
in
inc
(bad)
in
out
sahf
out
in
in
lock
out
sahf
hlt
hlt
clc
clc
cld
cld
xchg
call
popa
xor
sbb
jmp
(bad)
repz
(bad)
mov
ret
nop
shl
and
cmp
and
lea
xchg
sub
jl
cld
pop
and
std
test
out
inc
pushf
neg
rol
xchg
cmp
xor
stc
sub
inc
inc
jnp
cmp
cld
fiadd
jl
retf
fisub
add
sahf
inc
push
out
push
add
xchg
push
mov
rol
pop
add
not
xor
push
push
sahf
out
sahf
pop
pusha
push
out
js
ss
sbb
jns
out
adc
adc
or
jns
out
or
add
cmp
cmp
les
ret
(bad)
push
add
pusha
mov
sub
adc
inc
ja
add
rcr
fst
dec
test
nop
(bad)
shl
fiadd
es
push
shl
nop
sbb
jns
jo
jo
iret
jnp
xchg
push
push
dec
inc
xor
sub
fcomip
push
out
dec
jo
push
mov
add
xchg
test
dec
or
push
and
dec
mov
shl
pop
nop
push
and
inc
ins
fist
or
dec
or
or
jns
das
mov
rol
ror
sahf
fsub
call
jns
and
or
and
add
adc
mov
ror
outs
cli
mov
shr
adc
(bad)
dec
mov
cmp
mov
push
outs
inc
xchg
jbe
rcl
sbb
add
mov
jmp
addr16
cli
or
mov
push
cmp
out
jo
adc
xchg
mov
mov
push
mov
(bad)
dec
or
loopne
cmp
pop
jmp
mov
in
add
and
add
(bad)
clc
mov
and
mov
pop
mov
loopne
jge
movs
ins
ja
lods
and
or
add
hlt
int
movs
out
add
in
add
xchg
ds
xadd
shr
mov
ins
add
lods
ins
cld
mov
loopne
arpl
xchg
rol
fsub
stos
loopne
xor
mov
(bad)
rcr
or
clc
and
test
data16
loope
pop
loopne
mov
push
pop
dec
int
add
xchg
inc
cmp
add
js
sub
or
rcr
cld
adc
mov
mov
fs
test
cld
pop
push
shr
jbe
mov
push
jbe
jbe
jns
adc
mov
dec
not
cmp
or
mov
jo
pop
aas
add
dec
inc
and
cs
or
adc
push
fdiv
shl
in
call
sbb
lds
cmp
pop
into
push
clc
stos
fist
pop
mov
mov
xor
lea
enter
add
lods
sub
or
push
mov
add
add
xor
pop
inc
aam
pop
xchg
jmp
sub
int3
xor
dec
and
and
inc
dec
maskmovq
mul
xor
push
xchg
data16
xor
jnp
rcl
adc
jo
or
pop
xchg
adc
adc
adc
xor
es
sub
xchg
push
xchg
cs
jo
or
jl
jo
arpl
imul
cmp
xor
mov
(bad)
mov
mov
mov
imul
add
cmp
jge
cwde
add
popf
dec
jle
aas
ins
jl
mov
fs
mov
mov
or
xchg
test
cmp
mov
push
ins
xlat
(bad)
sbb
ret
mov
add
mov
and
sbb
or
(bad)
inc
dec
sti
mov
test
jg
adc
fidivr
pop
call
xchg
cmp
mov
jo
lods
imul
adc
push
jp
push
out
push
xor
adc
pop
cmp
lock
fadd
in
inc
sub
fmul
inc
cld
mov
test
lock
sbb
add
lahf
in
mov
push
xlat
mov
ret
in
fdivr
loopne
sbb
fld
movs
pop
call
lods
jp
xor
adc
icebp
add
test
pop
movs
jle
push
loopne
push
adc
ret
mov
and
cmp
(bad)
jmp
aam
inc
lock
fisttp
retf
sbb
dec
push
add
pop
das
or
aad
es
and
lahf
push
push
imul
lods
es
add
adc
cli
sub
cdq
cli
sbb
push
rcl
jb
neg
rol
shr
inc
test
jbe
jmp
lock
retf
cmp
push
in
mov
dec
jmp
ret
or
js
arpl
ficomp
inc
push
push
jo
sar
push
pusha
push
lock
(bad)
xrelease
add
cmp
retf
pop
repnz
or
jb
mov
jo
inc
into
jno
scas
sub
enter
loop
push
sub
cmp
add
loop
and
std
mov
cmp
ja
mov
jmp
xlat
inc
sbb
ins
push
or
mov
retf
cmps
(bad)
cwde
jo
push
sub
xor
jle
shr
cmp
push
fwait
jmp
test
or
mov
adc
imul
sbb
mov
jnp
ja
inc
sub
sbb
or
xor
jne
outs
fiadd
pop
lods
add
shl
mov
mov
ret
mov
xchg
xchg
jb
add
mov
sub
jne
sbb
adc
sti
shl
add
or
and
jne
into
mov
arpl
pop
ret
push
in
hlt
sub
retf
mov
outs
adc
adc
push
iret
inc
add
dec
inc
(bad)
inc
xor
xor
je
es
push
add
enter
mov
(bad)
pop
or
cld
push
pop
sub
stos
gs
cmp
adc
inc
mov
aaa
rcl
and
das
sbb
(bad)
invd
push
test
fild
xchg
and
(bad)
sub
push
(bad)
xor
mov
daa
add
(bad)
les
cmp
jae
mov
jne
hlt
add
ret
jb
std
je
pushf
pop
ret
inc
lea
and
pmulhuw
ds
dec
out
movs
fisub
repz
scas
adc
(bad)
cli
pusha
shl
add
cmp
pop
push
push
xor
dec
jg
lahf
dec
mov
pop
loopne
inc
mov
test
gs
cmps
cmps
or
sahf
jmp
sbb
dec
not
push
idiv
dec
in
fiadd
push
mov
shr
rol
mov
in
dec
sub
adc
adc
add
add
fsub
xchg
mov
cmp
dec
push
and
scas
ss
cmps
pusha
xor
pop
sbb
ja
lock
jmp
mov
div
stc
sub
adc
(bad)
pop
inc
pop
(bad)
adc
mov
ficomp
sub
cs
and
shl
sbb
outs
inc
add
pusha
or
movs
add
push
fimul
out
movs
adc
jle
pop
repnz
sbb
xor
test
mov
cmp
ret
shl
lock
add
loopne
xchg
mov
mov
dec
or
add
les
pop
jmp
loope
mov
fadd
data16
push
mov
pop
inc
sbb
and
arpl
add
jle
cmp
shl
cwde
sbb
mov
jecxz
jl
sbb
pop
jmp
xor
stc
loopne
addr16
shl
(bad)
push
psubsb
adc
add
and
not
pop
push
add
or
cli
add
lahf
xchg
push
mov
mov
or
jne
pop
in
pop
xlat
add
call
enter
add
add
test
xchg
push
sbb
mov
push
loopne
mov
mov
inc
in
in
sbb
dec
add
or
push
clc
mov
jmp
xor
inc
mov
jnp
push
(bad)
lock
add
in
out
or
push
xchg
mov
add
les
into
mov
scas
sub
inc
jmp
push
ja
cmp
neg
or
cdq
push
jb
rol
jns
out
mov
mov
clc
mov
add
das
or
push
jle
dec
ret
nop
mov
ja
jp
mov
je
mov
test
jne
test
or
out
out
jecxz
rol
inc
pusha
adc
cmps
sbb
add
push
int3
pusha
mov
dec
push
sub
sti
mov
pop
and
mov
sbb
or
out
mov
mov
xchg
sub
add
test
push
pop
inc
iret
cmp
sub
xchg
inc
into
xor
dec
pop
leave
xchg
dec
xchg
or
ins
dec
xchg
mov
and
xor
cmp
test
sbb
loope
fcomp
sub
push
push
retf
push
mov
in
or
movd
pslld
add
call
stos
and
loope
fsubr
push
test
add
pop
(bad)
adc
into
jae
test
push
mov
jle
fstp
dec
and
and
adc
adc
jmp
sbb
js
leave
xchg
in
cmp
push
jo
loope
lea
xor
cmps
mov
fsub
cmp
xor
inc
push
popa
ds
jbe
mov
test
das
cmp
adc
pop
jge
cmp
std
sbb
push
sbb
and
sub
mov
inc
pusha
loope
mov
inc
jmp
mov
cli
popf
push
leave
stos
ret
pop
sub
add
sbb
je
pop
xchg
mov
adc
jns
and
movs
mov
popa
and
daa
mov
xchg
(bad)
pop
add
pop
call
dec
call
dec
in
xchg
pop
pop
loope
inc
sub
shl
retf
add
pop
xchg
adc
(bad)
jg
sahf
xlat
add
inc
(bad)
cmp
scas
sub
jmp
sbb
out
push
getsec
cmp
and
repz
or
adc
or
inc
aas
outs
or
sub
adc
add
xor
inc
in
adc
or
or
test
sbb
pop
or
push
mov
in
out
xchg
dec
push
sbb
das
inc
ins
or
sub
or
loop
and
hlt
adc
outs
sbb
in
popa
mov
cld
jmp
sbb
mov
or
int3
clc
hlt
rcr
les
fstp
add
js
fadd
push
fidiv
add
xor
sbb
into
jmp
cmp
jb
hlt
or
inc
loop
sub
mov
sub
lock
sub
sub
jge
dec
popa
mov
fld
xchg
push
sbb
mov
fst
or
sub
scas
sub
adc
push
push
or
ins
xchg
mov
jbe
js
push
add
xchg
mov
aad
adc
pop
and
int3
je
or
inc
cmps
jmp
sti
nop
mov
or
and
adc
pop
xor
mov
(bad)
mov
sub
adc
inc
or
cmps
cmps
js
nop
push
pop
mov
inc
mov
popa
mov
jne
fldcw
pop
push
lock
inc
(bad)
jmp
rcl
ss
push
sub
scas
jmp
stc
scas
test
mov
push
mov
jae
xchg
and
outs
jmp
fiadd
mov
pop
cmc
sar
add
js
inc
xor
pop
xor
sbb
es
dec
add
dec
pop
not
hlt
jns
pushf
or
into
and
rol
pop
or
push
into
stos
push
out
mov
(bad)
rol
inc
xchg
pop
adc
das
jo
cli
or
jo
adc
test
pop
test
mov
iret
cmc
cmp
cmp
ins
and
fcomp
shld
repnz
shl
test
inc
and
outs
(bad)
(bad)
(bad)
adc
int
xchg
pusha
mov
ja
les
dec
cmc
in
jo
nop
das
lods
loope
mov
cs
cmp
adc
(bad)
jmp
push
mov
cmp
loop
pop
push
dec
jmp
mov
jmp
push
adc
jmp
add
shl
sbb
dec
lock
enter
mov
adc
or
les
sbb
jle
shr
test
and
or
adc
adc
std
bts
jmp
pusha
sub
add
ins
call
mov
les
add
adc
jg
bound
mov
out
inc
inc
ins
cmp
push
mov
or
pop
cld
fild
loope
pop
add
loopne
add
adc
frstpm(287
mov
lock
repnz
mov
sub
xor
sti
fdivr
mov
cmp
int3
adc
add
add
mov
jg
gs
xlat
cld
cmps
in
aam
fnclex
jmp
sub
add
dec
in
adc
dec
outs
mov
add
rep
pop
jle
xchg
test
and
mov
shl
add
lea
or
inc
push
imul
or
fsubr
std
nop
push
push
sbb
add
data16
pop
fmul
push
add
outs
pop
out
add
jmp
sub
mov
lods
xor
loopne
or
cmp
push
mov
xchg
jmp
mov
xchg
jb
sub
mov
ret
and
inc
or
add
aas
mov
test
mov
dec
add
pop
je
mov
cld
mov
push
mov
push
mov
fcom
sbb
add
mov
xor
or
ret
vpcmpeqb
outs
or
int
mov
ret
and
in
jmp
popa
add
les
mov
fstp
sti
xor
data16
je
jmp
bound
pop
ret
jge
or
sbb
(bad)
or
ret
leave
adc
fist
lds
sub
dec
repz
ret
adc
fiadd
rcl
rol
enter
xor
and
enter
dec
mov
push
or
aaa
(bad)
xor
sub
enter
adc
mov
jmp
sub
popf
pop
fsubr
push
enter
dec
and
pop
sti
sub
or
xchg
stc
jne
adc
add
sbb
fs
or
add
mov
(bad)
scas
stos
and
add
in
add
clc
mov
xchg
or
pop
inc
add
aas
inc
push
adc
push
cmp
mov
push
(bad)
loop
inc
dec
jne
cs
jno
nop
in
sub
mov
mov
and
adc
mov
sbb
mov
gs
sub
mov
rcl
jb
lea
sub
cdq
push
outs
inc
mov
inc
lods
adc
lock
out
(bad)
out
push
cmp
jne
mov
push
cmp
jne
(bad)
xor
repz
jne
call
out
gs
imul
ret
lahf
push
rcr
int3
inc
adc
(bad)
jmp
jns
sahf
cmp
std
jmp
cld
xchg
sbb
cmp
test
leave
adc
adc
inc
push
mov
es
scas
data16
dec
add
jmp
add
bound
or
pop
add
clc
jo
imul
sub
(bad)
xchg
arpl
sub
adc
daa
sbb
je
push
das
push
or
dec
jne
add
xchg
mul
add
inc
aaa
sub
jne
mov
pop
jle
test
ret
sub
inc
je
ins
mul
movs
jge
mov
out
lahf
mov
pop
adc
xor
xor
mov
inc
test
push
fsubr
sub
push
test
jmp
or
jbe
sbb
adc
mov
dec
shr
shr
sahf
or
nop
retf
push
shl
rcr
or
and
mov
jmp
repz
lock
xchg
or
lods
xchg
dec
shl
xchg
jbe
xchg
xchg
repnz
and
and
mov
adc
outs
aaa
push
std
add
in
out
or
and
out
jl
and
retf
push
mov
mov
dec
or
mov
add
add
inc
loop
sbb
push
add
call
pop
fsub
xchg
mov
dec
jmp
fmul
cmp
mov
outs
add
jne
sub
jae
and
pop
inc
cmp
push
xor
adc
mov
out
or
push
and
adc
adc
dec
add
outs
mov
call
mov
sub
sub
sub
mov
add
xor
fadd
add
cld
cmps
idiv
cs
leave
cmp
jae
push
int
push
outs
or
into
sub
add
lock
clc
jbe
add
and
or
dec
dec
and
retf
ins
add
push
ds
jp
fadd
shl
std
mov
adc
cmp
mov
or
sub
mov
scas
push
jbe
aas
mul
xor
or
mov
test
and
pop
enter
loope
shl
int
in
pop
cld
pop
push
mov
or
bound
pushf
add
sbb
or
add
dec
test
(bad)
bnd
lahf
dec
mov
cmp
test
sub
xchg
xchg
dec
inc
jbe
sbb
imul
fild
mov
sahf
add
inc
pop
adc
idiv
mov
mov
mov
mov
sbb
jmp
rcr
mov
mov
pushf
or
mov
ss
adc
sti
cmp
cmp
mov
mov
loope
inc
mov
cwde
jp
xchg
xor
shl
mov
call
push
test
cmps
in
add
push
imul
mov
enter
mov
movd
sbb
iret
neg
push
adc
mov
in
inc
mov
or
std
xor
push
and
inc
or
rol
sahf
sbb
sbb
lock
pop
push
xchg
inc
test
aam
add
jbe
sub
test
imul
outs
mov
push
xchg
cs
into
mov
and
fcomp
mov
pop
std
and
jle
js
mov
dec
mov
jae
icebp
pop
jecxz
repz
push
push
data16
mov
dec
mov
add
xchg
inc
sti
inc
adc
adc
fdiv
xchg
cmp
or
and
or
sub
ins
movs
ret
xchg
movs
or
lds
push
and
lahf
sbb
push
sti
movs
jne
lahf
and
jle
push
jle
div
push
out
icebp
inc
jg
aaa
lea
cmp
ins
mov
dec
dec
sub
xchg
(bad)
mov
mov
or
shl
add
adc
push
lods
les
jge
mov
cdq
fiadd
loopne
aam
and
(bad)
bound
mov
mov
je
add
movs
mov
or
mov
(bad)
retf
pop
adc
jle
jns
jg
es
and
jae
cmp
je
mov
sahf
pop
mov
mov
fcmovbe
(bad)
clc
lock
mov
xchg
add
jne
or
rol
dec
mov
fistp
push
stos
sbb
sub
in
mov
popf
mov
sub
mov
jae
scas
jmp
pop
jmp
les
popa
data16
push
fld
pop
pop
loopne
gs
fld
sbb
or
push
jle
adc
cmp
push
scas
test
xor
push
repz
cmp
sbb
pop
pusha
pop
inc
mov
mov
sbb
pop
add
inc
and
or
or
add
xchg
and
dec
push
inc
push
or
lods
push
les
pop
jp
jp
es
sbb
add
and
mov
aad
sbb
inc
or
rcr
cwde
and
inc
jle
movs
or
push
push
cld
hlt
adc
add
hlt
jb
inc
jp
fisubr
movs
adc
jne
pushf
adc
loopne
mov
dec
sbb
mov
pop
imul
jbe
div
loopne
gs
xchg
xor
cdq
mov
(bad)
std
aaa
test
mov
inc
push
bnd
inc
or
inc
pop
scas
push
add
pop
ja
sar
cmp
mov
pop
out
mov
add
movzx
jg
stos
dec
leave
jmp
sahf
mov
or
stc
jle
or
mov
and
pop
xchg
jl
fcom
mov
iret
cli
add
push
test
mov
cs
adc
retf
xor
(bad)
xlat
adc
ss
rol
adc
cmp
gs
or
gs
mov
jp
add
push
daa
test
push
movs
std
bound
or
add
ficomp
pop
(bad)
les
jg
pop
add
lock
adc
and
jle
outs
inc
and
cmp
scas
mov
shl
push
rcr
loopne
retf
icebp
nop
xchg
ror
mov
fdiv
es
push
or
jle
xor
fist
in
mov
push
and
pop
addr16
repnz
out
ret
lea
and
inc
sahf
data16
lods
add
fcomp
fiadd
les
mov
and
mov
arpl
and
xchg
fnstcw
hlt
adc
mov
jnp
rcr
enter
jae
cs
pop
cmp
mov
loope
nop
outs
sbb
push
cdq
xchg
xchg
xchg
in
fsubr
js
jecxz
inc
push
mov
fucomi
int3
cmp
fld
imul
loope
mul
out
shl
enter
xchg
mov
lods
sub
test
xchg
and
add
inc
inc
sub
out
inc
cmp
xor
jmp
jbe
and
fnstenv
sar
sub
inc
pop
stos
adc
pshufw
adc
adc
fcom
shl
movs
mov
(bad)
lods
push
sub
je
jg
mov
rol
int
add
ret
adc
stc
sub
push
sti
out
mov
push
adc
push
pop
dec
aaa
xor
add
push
push
pop
cmp
sbb
and
(bad)
adc
ror
dec
mov
in
cs
cwde
ret
es
sbb
inc
inc
cmp
and
rcl
retf
xchg
clc
and
jmp
add
fs
dec
and
mov
xlat
push
(bad)
push
add
adc
or
sbb
hlt
adc
test
push
xor
adc
push
mov
clc
rep
and
fdiv
in
pop
ret
and
or
add
in
add
cli
push
cmps
js
fcom
sbb
adc
call
jmp
xchg
push
mov
cmp
add
or
or
push
xor
ss
out
dec
aam
sub
icebp
jmp
iret
mov
and
aaa
jo
sub
sub
pop
dec
mov
xor
bound
pop
adc
jno
pop
stos
not
and
or
inc
xlat
cwde
and
jl
adc
sub
or
mov
cld
arpl
popf
call
jmp
sti
jns
cmp
jne
inc
fmul
jo
sub
mov
test
sahf
add
push
in
shld
ficom
jmp
shl
popa
int3
mov
pop
popf
xor
sbb
lea
mov
jne
clc
mov
int3
cmp
je
push
push
push
in
imul
push
cmp
xor
inc
les
ss
jmp
add
dec
jmp
sub
sub
fdivr
sub
inc
imul
sbb
push
adc
cmp
push
inc
mov
or
sub
dec
push
xchg
fst
jne
adc
add
push
push
mov
inc
dec
mov
push
lahf
pop
js
mov
fmul
popw
mov
cmps
inc
frndint
sbb
lods
outs
pop
mov
inc
push
dec
cmp
xor
mov
sbb
push
cmp
sub
adc
loopne
dec
(bad)
out
pop
mov
loopne
(bad)
adc
add
sbb
xor
sub
cmp
and
jecxz
sbb
xchg
les
stos
xor
adc
xor
mov
test
push
retf
out
dec
into
ss
or
xor
out
mov
mov
push
push
inc
jl
add
pushf
jmp
je
dec
int
xchg
(bad)
mov
xor
int3
inc
mov
push
dec
pop
mov
ss
jmp
sti
daa
push
mov
mov
fs
mov
sub
int
add
push
dec
xlat
adc
(bad)
fidiv
gs
xchg
cmc
dec
leave
mov
cmp
pop
test
lea
or
sti
or
push
xchg
lea
add
pop
pop
push
xchg
sar
xchg
clc
adc
cmp
jne
cmp
xchg
mov
mov
add
pop
(bad)
adc
add
add
add
or
xor
xor
cmp
(bad)
jge
pop
push
adc
mov
sub
pop
fimul
push
mov
fiadd
sub
xor
out
pusha
movs
dec
xchg
dec
inc
(bad)
outs
xor
mov
sbb
test
sub
test
pop
sbb
pushf
mov
sub
mov
dec
push
jmp
cmp
addr16
js
or
iret
mov
push
inc
loopne
pop
imul
outs
fsub
jg
je
push
push
call
movs
xor
xor
xor
stos
or
xor
xchg
fsubp
sbb
enter
ror
fst
loope
sub
dec
or
clc
push
popa
movs
popf
add
push
push
repnz
js
dec
jnp
cld
sbb
(bad)
pop
lds
lock
push
popa
sbb
mov
(bad)
dec
jmp
sub
push
xor
je
ret
out
(bad)
ins
(bad)
and
mov
(bad)
lea
mov
add
or
movs
and
push
imul
add
mov
outs
test
or
jae
(bad)
lea
iret
push
mov
mov
add
fcom
into
fcompp
jmp
jno
add
pop
leave
loop
and
mov
add
and
ss
inc
adc
fs
jo
push
cmps
adc
add
dec
adc
icebp
gs
sbb
push
xchg
(bad)
lock
call
adc
sbb
int3
jo
icebp
inc
inc
ja
mov
inc
sti
push
mov
popf
pop
or
inc
or
inc
add
dec
popa
jl
mov
jge
outs
or
test
fwait
adc
aam
jp
int
lahf
mov
jb
jbe
dec
jbe
adc
sbb
enter
lea
je
push
dec
mov
je
mov
fs
and
and
in
push
jbe
lods
in
adc
mov
xor
and
out
cmps
(bad)
mov
cs
sub
dec
add
or
mov
adc
xor
xor
ins
test
pop
mov
or
scas
add
test
ins
inc
xor
mov
stos
push
sbb
vmwrite
jo
hlt
cmp
fisub
popf
add
std
scas
rol
xchg
jg
adc
outs
repnz
sub
movs
adc
ins
jge
pop
mov
ja
out
inc
into
dec
adc
jl
mov
cmp
xor
js
inc
adc
add
ins
add
sbb
rcr
fiadd
mov
test
mov
cld
push
sub
lahf
cmp
movs
adc
enter
jle
loopne
dec
push
rcr
hlt
inc
adc
repnz
cmp
fiadd
(bad)
or
(bad)
scas
inc
jle
inc
add
pop
outs
pop
shl
int
cmc
fld
jg
push
push
xchg
or
test
cmp
xor
xchg
inc
mov
mov
dec
sbb
loopne
xor
xchg
mov
js
ins
xor
add
mov
test
loope
push
and
push
(bad)
push
sbb
sub
test
inc
call
inc
jl
rol
jmp
and
pop
inc
cmp
jle
or
in
or
adc
mov
pop
jae
pop
pop
loopne
cmp
add
add
and
mov
sbb
jo
adc
inc
push
js
dec
xor
test
test
xchg
push
dec
ret
mov
aaa
popa
les
out
mov
mov
rcr
out
pop
cmp
push
cmp
stos
and
dec
inc
(bad)
mov
xlat
jmp
add
mov
hlt
inc
nop
mov
pop
xchg
inc
mov
enter
sub
or
or
add
push
movs
fisub
push
aam
sbb
mov
push
icebp
push
outs
jno
outs
adc
out
popa
popa
and
ret
pop
mov
test
push
add
popf
jle
and
push
ret
test
pop
adc
out
and
imul
rcl
or
mov
test
pop
jge
cs
es
jb
ret
or
or
fcmove
lea
dec
sub
ret
adc
std
cmp
js
and
fbstp
jl
adc
pop
mov
xchg
add
stos
xchg
jbe
loopne
and
xchg
and
sbb
mov
and
inc
push
prefetch
inc
jbe
loope
jne
scas
mov
push
loope
sbb
fisttp
(bad)
xchg
push
sbb
call
xor
push
ins
fidiv
es
mov
cmp
add
and
or
stos
add
pop
retf
mov
mov
adc
sbb
xchg
jne
rcr
daa
pop
imul
sbb
sar
lods
sahf
pusha
cdq
sub
jae
jmp
xchg
lahf
data16
mov
mov
test
(bad)
xchg
cmps
sub
mov
sub
std
add
popa
and
add
push
(bad)
cmp
push
sbb
ds
(bad)
imul
pop
mov
popa
xor
jmp
mov
ja
push
jo
push
add
test
and
mov
mov
adc
pop
push
sbb
sbb
mov
clc
inc
je
cmp
adc
loopne
or
jo
int
add
mov
pop
jne
cdq
push
pop
jl
jl
push
pop
mov
call
cmp
or
rol
test
movs
mov
jmp
les
(bad)
jne
xor
mov
adc
adc
mov
sub
(bad)
and
add
mov
jno
mov
or
push
test
sbb
xchg
mov
pop
mov
outs
xchg
(bad)
in
xchg
fwait
and
sub
test
pop
add
and
inc
outs
je
pop
adc
or
in
mov
push
xor
clc
inc
sbb
test
pusha
test
repnz
lock
or
test
call
pop
adc
fld
push
inc
inc
loopne
add
mov
dec
dec
or
cmp
jne
rol
xchg
cmp
out
and
jle
sbb
mov
test
add
dec
lahf
push
jg
ret
cwde
add
cli
jae
dec
or
jmp
movs
int
jle
test
jle
mov
jbe
adc
xor
test
dec
push
scas
ret
jl
cmps
adc
or
push
pop
or
in
sar
sbb
call
push
sbb
aaa
mov
fadd
pop
push
in
add
ds
cmp
add
dec
sti
pop
sbb
cmp
je
push
and
jne
or
pop
js
cli
(bad)
cmp
sbb
inc
mov
xor
inc
inc
out
setno
cmp
call
test
and
dec
dec
lods
xor
adc
mov
or
faddp
out
sub
cli
push
sbb
rol
(bad)
push
adc
in
dec
push
dec
or
test
push
xchg
rol
mov
xor
pop
inc
pop
jmp
aas
xchg
dec
jnp
sti
jle
jmp
add
sbb
xor
adc
add
bound
xor
push
and
mov
xchg
and
jg
jmp
nop
add
xor
jg
cmp
jl
pop
pop
mov
leave
mov
push
sub
cmp
jmp
cmp
sub
test
push
rol
push
xchg
xor
push
dec
popa
in
jo
sahf
push
push
fdiv
add
inc
cld
ss
adc
jbe
hlt
lods
xor
fsub
dec
pop
fcom
mov
mov
in
out
dec
pop
aaa
loope
fsub
sbb
aaa
mov
ds
cld
ror
push
lods
(bad)
clc
adc
outs
ret
retf
mov
aas
jnp
loopne
ret
dec
push
sub
pop
dec
enter
mov
sbb
mov
nop
outs
mov
jle
cmp
dec
sbb
jg
dec
rol
push
sbb
mov
in
(bad)
xchg
inc
in
sbb
aaa
mov
dec
repnz
mov
cmps
jmp
add
sbb
dec
lods
pop
mov
shl
dec
shl
int3
ds
cmp
(bad)
mov
cld
adc
retf
push
cmp
loope
lock
and
sahf
test
mov
push
pmuludq
lods
test
or
sub
mov
fs
scas
mov
xchg
call
adc
mov
adc
add
mov
mov
mov
fs
or
or
push
loopne
adc
repz
das
test
dec
push
sub
mov
imul
and
jae
lods
sub
jp
addr16
mov
fisub
test
je
mov
and
(bad)
pop
dec
sbb
movs
mov
ins
add
xchg
jo
push
jl
push
jmp
cmp
(bad)
mov
xchg
je
mov
xchg
sbb
ficom
outs
sub
jle
or
add
pop
add
or
cli
movs
add
dec
xlat
call
push
ss
mov
sbb
xchg
loope
repnz
pop
pop
call
adc
mov
xchg
inc
iret
push
xchg
je
dec
push
add
add
add
add
or
adc
adc
sub
sbb
pop
(bad)
cmp
sbb
xlat
adc
fld
fmul
shr
and
jne
add
xchg
aaa
or
icebp
enter
xor
arpl
imul
mov
test
inc
pop
icebp
stos
add
sbb
sbb
nop
jnp
pop
loope
ds
cvtpi2ps
and
(bad)
mov
sub
retf
in
xchg
xchg
pop
adc
ficom
ja
es
jb
dec
out
lods
movs
jg
fmul
jae
rcr
js
cmp
jl
cmp
jg
mov
bound
bound
loop
dec
jecxz
cmp
lea
test
jne
add
jecxz
and
rol
adc
cmp
(bad)
je
mov
retf
pop
pop
mov
mov
xor
or
neg
and
push
mov
cmp
adc
inc
mov
stos
lods
or
ret
mov
aad
and
xor
pop
xor
adc
or
imul
sbb
adc
sar
mov
xchg
psubw
add
mov
fisttp
and
outs
fwait
mov
push
aad
loope
and
add
adc
pop
(bad)
mov
mov
and
push
mov
jne
and
jle
imul
les
xor
inc
call
test
push
nop
pop
cmp
scas
dec
fcom
add
mov
xor
jno
ret
sub
mov
sar
je
pop
adc
add
ds
retf
je
mov
mov
arpl
(bad)
cmp
test
ret
mov
or
(bad)
hlt
pop
mov
pop
dec
mov
dec
dec
push
call
pop
push
nop
(bad)
fiadd
and
dec
js
call
ret
cmp
dec
adc
call
dec
jg
jmp
fld1
mov
inc
call
adc
adc
mov
mov
and
mov
cs
js
(bad)
adc
cmp
(bad)
pusha
ret
je
xchg
xchg
mov
call
add
dec
sub
pop
pushf
and
mov
adc
push
jae
scas
or
pop
and
jp
sbb
jns
inc
bound
sub
fadd
pusha
push
and
mov
add
es
adc
inc
retf
rol
pop
sti
(bad)
cmp
jo
sub
dec
ret
sub
outs
pusha
aad
mov
das
aas
test
cmp
int3
pop
mov
adc
xlat
je
add
cli
es
and
pusha
imul
inc
and
aaa
popf
pop
xchg
test
cmp
dec
ins
or
and
mov
iret
bound
dec
jb
je
sub
mov
xor
or
add
stos
jbe
or
(bad)
clc
push
push
or
sbb
inc
(bad)
nop
pxor
fist
jmp
das
xor
(bad)
nop
fld
pop
jecxz
mov
add
push
jne
icebp
pop
adc
pop
or
inc
mov
pop
shr
mov
inc
or
aaa
pushf
xchg
fisttp
add
push
and
mov
add
je
jle
mov
cmp
ror
stc
cmps
clc
mov
and
add
in
pop
(bad)
dec
inc
out
inc
inc
stos
cmp
shr
jb
or
jo
sub
dec
mov
mov
cmp
mov
jo
mov
jae
lods
ret
adc
data16
loopne
cmp
push
and
jmp
idiv
jecxz
rcr
sbb
push
movs
add
daa
clc
ss
js
arpl
push
add
into
jmp
push
test
add
std
push
ret
or
mov
and
not
and
loopne
and
inc
ins
push
in
js
imul
(bad)
mov
pusha
clc
cmp
test
add
call
cld
jp
and
test
sbb
jge
sbb
sub
mov
ret
je
push
ss
movs
adc
stos
inc
cli
mov
out
test
push
shr
call
in
adc
cmp
jne
inc
inc
cmp
jb
outs
test
add
loopne
js
dec
es
fcmovnbe
jmp
pushf
xchg
dec
mov
inc
movs
fcomp
repnz
push
jmp
pop
rol
loopne
jge
cli
ror
pop
adc
add
xor
loopne
add
in
cdq
cmp
adc
and
add
jmp
push
push
rol
fstp
jmp
inc
arpl
jne
push
imul
cmp
fidiv
and
aad
or
or
shl
push
icebp
jmp
popw
outs
add
movs
out
sub
or
add
add
pop
or
sub
pop
mov
mov
xor
outs
imul
adc
and
mov
les
ror
mov
adc
xchg
addr16
mov
xchg
callw
dec
mov
cwde
in
mov
cmp
add
xchg
mov
mov
add
mov
sub
arpl
aaa
ds
jb
mov
add
add
or
test
mov
test
or
(bad)
adc
jmp
pop
mov
or
ret
xor
dec
push
add
cmc
push
mov
lea
add
fsub
xchg
xchg
push
scas
mov
xchg
cmp
add
or
jbe
mov
es
push
mov
push
push
pop
adc
xchg
push
sub
mov
and
in
mov
mov
jbe
sbb
or
sub
jne
mov
push
mov
inc
sbb
jne
sbb
mov
call
cmp
ins
mov
sar
pop
and
jmp
xchg
jb
push
out
lods
mov
daa
in
mov
sbb
movs
and
imul
push
cld
fwait
pop
push
or
cmp
mov
jl
cdq
sbb
loop
jmp
dec
and
push
jae
mov
mov
stos
sub
or
rol
sbb
cmp
int
mov
add
cmp
xchg
mov
ret
push
ja
int3
mov
or
leave
inc
and
jbe
add
inc
jo
and
jns
sbb
jmp
mov
enter
loopne
ror
rol
jne
data16
popf
dec
js
pop
loope
sbb
mov
dec
jmp
call
jae
test
xchg
xchg
add
or
add
loopne
jg
test
cmps
add
xchg
mov
mov
push
out
int
adc
in
sub
and
push
adc
mov
push
mov
call
sub
or
ins
mov
and
adc
scas
(bad)
hlt
out
lock
outs
adc
pop
jle
mov
lods
push
adc
xchg
retf
lock
mov
mov
bts
sub
pop
push
sub
retf
push
xchg
pusha
add
mov
xor
jo
(bad)
jno
and
add
xchg
jp
outs
rep
mov
mov
mov
add
ror
mov
loop
sub
test
jo
jle
iret
push
adc
add
jmp
and
jb
sbb
cmp
jle
jmp
pop
les
lahf
xor
test
cli
mov
mov
cmp
or
es
sub
je
in
mov
add
data16
(bad)
div
inc
dec
in
dec
dec
and
dec
dec
cld
in
into
dec
and
test
jne
or
sub
addr16
fst
xor
nop
cmps
imul
retf
sub
pushf
sub
and
popf
in
mov
lock
shl
mov
outs
add
xor
push
les
adc
jle
sbb
cmp
xchg
push
enter
pusha
hlt
adc
(bad)
call
sub
sbb
loopne
push
aaa
or
ss
shl
scas
or
inc
dec
(bad)
icebp
and
pop
pop
xor
and
or
out
cmc
lods
jno
add
or
add
push
or
ins
mov
xor
inc
add
pop
outs
sub
sbb
lahf
xchg
push
mov
frstor
mov
jp
std
ret
or
push
adc
cmp
sahf
pop
out
mov
push
(bad)
xor
sbb
mov
adc
add
or
dec
test
add
add
(bad)
shr
lea
ins
add
cmp
xchg
lods
adc
cmp
jp
sub
pop
pop
mov
cli
adc
in
mov
sub
push
or
xor
or
into
sub
jbe
or
xor
sbb
jno
(bad)
cmps
dec
add
rol
(bad)
jg
je
push
pop
jns
adc
mov
nop
jb
inc
cld
loopne
jge
retf
push
mov
adc
jbe
adc
in
loopne
dec
sbb
ret
loopne
lods
mov
(bad)
push
enter
ret
cmp
scas
js
cmp
sub
mov
lock
pushf
popa
add
dec
inc
bound
push
ret
xchg
sbb
test
inc
nop
lea
mov
mov
cwde
(bad)
add
nop
aad
and
retf
shl
and
adc
pop
dec
lahf
mov
test
xchg
inc
fs
add
retf
es
mov
adc
mov
sahf
push
xlat
jmp
fcom
dec
push
adc
mov
xor
add
lods
jnp
pop
xchg
or
xor
xchg
mov
test
jne
and
out
inc
retf
cmp
inc
cld
push
ss
out
cmp
je
mov
sahf
out
adc
xchg
pop
into
enter
outs
or
cld
mov
push
pop
jns
sbb
push
stc
fwait
sbb
lea
inc
cmp
ss
lahf
sub
cmps
adc
jno
dec
leave
cwde
add
test
test
repnz
mov
pop
xor
out
add
lock
test
clc
js
adc
imul
je
sub
js
jo
push
mov
mov
daa
mov
add
aam
mov
div
daa
rcl
mov
in
dec
sub
ror
(bad)
and
xchg
dec
clc
push
pop
add
jb
shr
ficomp
sbb
add
xchg
push
fsubr
fadd
mov
cmc
and
ins
leave
and
add
push
xor
enter
enter
nop
adc
scas
loope
scas
mov
dec
mov
dec
push
jmp
or
dec
stos
add
fwait
sub
loope
sbb
(bad)
loopne
retf
push
jmp
movs
mov
fadd
data16
loop
pushf
jp
dec
jb
pop
push
xor
les
or
(bad)
adc
or
fs
add
iret
ret
loope
adc
ds
rol
cmove
mov
cld
add
shr
dec
aad
and
imul
cmp
xchg
mov
add
shl
in
test
les
inc
xchg
mov
sbb
or
or
sbb
and
rcl
daa
add
jnp
in
xor
push
push
and
inc
xchg
in
mov
mov
adc
push
(bad)
dec
push
add
(bad)
jb
test
or
sbb
shl
inc
add
dec
or
add
sub
push
cmp
scas
mov
mov
dec
movs
test
xlat
icebp
sub
ds
push
cmc
cdq
aam
xor
adc
cmp
jb
cmp
mov
push
ins
and
inc
rcr
dec
or
add
out
fdiv
jge
out
pop
add
stos
outs
push
add
jge
js
or
mov
ins
adc
jmp
inc
loopne
loopne
cdq
movs
repnz
loopne
jo
or
pop
sub
jmp
mov
sbb
imul
or
xor
leave
inc
add
sbb
add
pop
sbb
pop
rcr
fisub
or
rcl
jae
enter
adc
mov
lock
xor
and
add
aaa
or
inc
bound
push
xor
push
dec
push
shr
mov
pop
push
push
mov
jno
pop
enter
inc
dec
or
repz
add
jb
and
xor
shl
fidiv
push
sub
pop
adc
add
add
sbb
mov
add
pushf
cmp
call
cmp
into
cmp
or
das
or
mov
push
xor
jmp
xabort
jno
sub
mov
out
mov
mov
inc
mov
mov
mul
cmp
cmp
cmp
lea
sbb
dec
lea
rcl
xor
clc
pop
mov
mov
outs
iret
shr
(bad)
jne
ret
pusha
dec
lods
in
pop
push
mov
push
pop
cmp
sub
aaa
or
inc
mov
xchg
sti
pop
pop
(bad)
pop
mov
pop
pop
enter
lods
push
lock
in
cmp
add
jmp
xor
pop
jne
mov
mov
and
mov
sub
jae
dec
push
xchg
icebp
or
or
stc
addr16
imul
(bad)
les
xchg
mov
dec
push
dec
pop
add
cmp
addr16
dec
sub
into
and
push
sbb
repz
and
cmps
movs
sbb
(bad)
iret
out
sbb
std
xchg
add
adc
xor
and
(bad)
add
xchg
mov
mov
mov
imul
std
enter
xor
pop
xchg
add
jmp
jne
cld
frndint
push
sbb
jmp
mov
(bad)
test
push
cmp
test
push
adc
adc
das
add
pop
lods
jae
shr
nop
sbb
cld
cmp
sub
mov
adc
call
push
call
mov
mov
mov
and
sti
daa
inc
pop
repnz
jmp
lods
inc
cmp
jne
int3
scas
out
leave
adc
je
sar
hlt
xor
xor
or
cmp
loopne
gs
outs
push
add
popa
pop
frstor
inc
jecxz
mov
push
push
out
retf
js
push
xor
cmc
sub
std
sbb
loop
pop
push
in
and
xor
out
mov
aam
daa
outs
nop
(bad)
push
push
inc
inc
push
mov
data16
sti
add
clc
pop
lahf
sbb
stos
fdivr
mov
and
xchg
ss
inc
jmp
and
sbb
mov
rcr
call
out
xchg
out
ins
daa
movs
jo
mov
mov
dec
les
push
push
adc
push
test
jmp
ror
add
(bad)
lock
sub
in
mov
push
add
mov
add
sar
sar
stos
pop
mov
cwde
rcl
(bad)
cld
popf
cdq
sub
sbb
mov
xchg
push
xchg
shr
stc
sub
in
mov
push
mov
outs
cmp
sbb
adc
jge
push
xor
psrlw
push
loopne
push
rol
dec
sar
dec
mov
in
fistp
add
jle
or
popf
int3
cmp
sti
push
mov
cmp
cmps
xor
jl
xchg
jo
sbb
sub
imul
pop
pop
push
sub
fldcw
scas
adc
push
jl
shl
popf
aad
mov
xchg
jne
test
mov
aaa
lea
mov
or
outs
xchg
enter
jae
mov
ret
cwde
jmp
cmps
sub
in
stc
hlt
loopne
test
outs
cmps
shl
sub
sbb
mov
test
sbb
mov
pop
mov
adc
out
xchg
cmp
dec
xor
sahf
pop
xor
jecxz
jns
pop
mov
test
or
xchg
pop
xchg
mov
or
lea
xchg
es
stos
add
add
cmp
sbb
xor
sbb
or
jmp
mov
ret
loope
cmc
test
sbb
aaa
mov
in
arpl
or
dec
push
push
or
out
jle
ret
(bad)
rol
inc
sbb
shr
pop
jne
ins
jne
dec
sub
xchg
inc
shr
add
ins
adc
int
movs
push
sub
fst
sahf
add
sbb
add
(bad)
loope
jmp
mov
jmp
popa
lods
add
cmp
jbe
pop
jmp
push
jae
inc
add
call
or
inc
add
not
jmp
pusha
mov
mov
push
in
inc
xor
xchg
adc
in
mov
scas
cmps
dec
call
mov
and
neg
stos
pop
(bad)
stc
jne
adc
int3
ror
pusha
mov
xlat
es
pop
mov
inc
jmp
in
xor
xor
jne
cmp
inc
aam
pop
or
sub
inc
xor
out
and
push
fimul
cld
cmp
sbb
push
add
popa
fisttp
inc
xchg
mov
rcr
ret
rol
loop
or
push
or
add
sahf
aaa
add
(bad)
call
push
push
pop
sub
push
inc
mov
sbb
test
out
xor
pop
and
lahf
cmp
mov
adc
call
int3
jae
xchg
call
mov
ja
cmp
jb
repnz
sub
js
xor
xor
fdiv
push
dec
inc
retf
or
push
retf
push
(bad)
adc
fwait
jp
sbb
clc
mov
or
fcomp
push
lds
scas
sar
push
test
imul
out
mov
push
mov
popf
call
daa
push
or
outs
js
test
ja
sub
jl
js
add
jp
cmp
mov
and
jbe
mov
es
push
lock
jmp
xchg
or
test
xor
and
sar
dec
push
lock
sbb
adc
add
fdivr
div
xor
rol
mov
aas
pop
call
in
or
sub
repnz
pop
mov
nop
mov
mov
jnp
mov
or
jbe
cmp
sub
dec
add
cmps
shr
sar
popf
mov
push
shr
lds
jbe
push
and
les
pusha
dec
dec
add
ds
cmp
and
adc
xchg
test
call
jne
jne
rcl
sbb
shl
sub
inc
cmp
xchg
(bad)
sbb
xchg
test
push
mov
leave
sahf
retf
into
mov
dec
mov
mov
xor
and
jle
lods
dec
xchg
je
(bad)
movdqa
mov
dec
adc
push
and
jg
push
dec
lahf
out
out
and
push
jg
outs
inc
or
jbe
lahf
iret
idiv
jle
xor
jg
jg
jg
xchg
sub
loop
lea
div
dec
mov
sub
ffreep
lea
sbb
in
lea
inc
out
or
adc
or
in
pop
xor
add
mov
xor
and
(bad)
movs
dec
adc
push
sbb
retf
ret
mov
sahf
inc
xor
ret
xor
cmp
js
hlt
or
movs
das
or
push
push
or
ret
xchg
add
je
push
jno
add
adc
push
cld
imul
sbb
sub
fmul
fwait
inc
add
fsubr
retf
mul
std
or
aam
out
iret
retf
mov
clc
or
retf
retf
popf
enter
shr
out
test
ins
fs
sbb
imul
data16
jbe
dec
cld
xor
adc
loopne
hlt
ret
cmp
in
or
aas
and
adc
lea
sbb
add
test
or
lods
jmp
ror
addr16
imul
pop
stc
add
push
or
pop
add
pop
ret
adc
mov
test
xchg
xor
jp
lahf
rcl
sar
call
jns
or
sbb
sahf
dec
push
sbb
cs
test
sahf
clc
sbb
mov
rcr
out
or
shr
inc
push
xor
(bad)
cmp
shr
rcr
shr
rcr
or
jne
or
push
scas
xor
adc
jle
dec
ja
jb
cmp
add
add
fcomp
add
mov
sar
jnp
adc
push
sbb
ss
into
repz
sbb
push
push
pop
pop
jo
loopne
xor
jmp
cmp
out
cwde
in
popa
enter
adc
lahf
popf
or
push
push
jbe
sub
adc
repz
adc
push
or
call
pop
mov
jp
jno
adc
or
es
psubsw
fcmovne
in
jl
leave
repz
ja
jb
or
jmp
sbb
sbb
enter
pusha
add
xchg
push
or
shl
ret
pop
in
add
hlt
and
dec
retf
xchg
scas
sbb
jmp
rcl
xor
push
fmul
jmp
or
push
sub
das
or
mov
adc
adc
mov
cmp
adc
mov
fwait
adc
mov
into
(bad)
nop
dec
inc
or
add
jmp
sti
cmp
push
jmp
test
fisub
inc
ins
and
inc
mov
add
bound
add
adc
mov
mov
lock
pop
xor
ss
mov
push
hlt
add
ss
cmp
aas
aam
adc
adc
mov
mov
or
xchg
ret
test
lds
not
test
frstor
xchg
dec
dec
imul
cmp
xchg
bound
push
jmp
cmp
nop
add
inc
inc
dec
aam
lds
pop
cmp
push
push
inc
jle
dec
push
scas
test
dec
xchg
jno
mov
mov
cmc
imul
cmp
outs
adc
cmp
add
sbb
mov
pop
imul
push
xor
push
fstp
adc
rol
add
inc
gs
imul
push
mov
sbb
inc
cwde
retf
enter
xor
gs
inc
sub
fdiv
mov
adc
out
out
cmp
pop
and
mov
adc
mov
cmp
mov
jae
or
ins
sbb
push
jl
int3
and
pop
dec
mov
(bad)
fistp
test
out
sub
into
xchg
arpl
push
pop
sub
dec
fwait
call
push
pop
jne
stos
inc
lahf
xor
inc
adc
xchg
sbb
sbb
or
pop
push
fimul
jb
push
inc
js
push
sub
push
outs
or
and
jl
cdq
pop
je
sub
lahf
mov
lahf
add
fsub
push
push
sbb
push
or
jae
icebp
add
pop
add
(bad)
xchg
jno
sar
jmp
cmps
aam
fidiv
add
jge
push
inc
pop
pop
pop
leave
cdq
stc
ins
mov
mov
sti
stc
stc
stc
loopne
sbb
mov
dec
jmp
adc
dec
hlt
or
shr
div
sub
les
add
out
sub
cmp
bound
inc
xlat
adc
inc
cmp
mov
loopne
shl
xchg
lock
push
rcl
mov
movs
popf
xor
push
mov
out
mov
xor
lods
inc
xor
and
push
or
ret
xchg
int3
cmps
test
cmp
data16
or
les
dec
dec
cmp
jecxz
mov
ret
push
mov
test
mov
loopne
cmps
push
and
pusha
cdq
and
mov
dec
add
test
push
test
mov
adc
or
inc
cwde
shl
inc
xor
adc
push
cmp
daa
out
sbb
pop
mov
fwait
and
sub
sbb
clc
dec
mov
adc
inc
sbb
xchg
jle
jno
pushf
div
dec
jmp
xchg
stc
inc
stc
and
add
js
add
xchg
jo
and
mov
push
inc
jmp
jmp
call
cmp
add
and
hlt
bound
pop
dec
test
cmp
cmps
jg
sub
dec
add
or
mov
mov
add
int
push
and
mov
outs
push
outs
fild
ret
push
rcr
test
sti
dec
(bad)
add
push
jmp
xor
sub
mov
adc
inc
pop
cmp
ins
xchg
sub
mov
xor
repnz
xchg
adc
or
test
fldenv
add
push
inc
mov
dec
iret
jge
movs
jb
fnstenv
fadd
retf
in
call
retf
scas
nop
mov
mov
inc
rcl
cld
fisttp
sbb
shl
pop
mov
push
lock
rol
rol
push
jne
push
dec
(bad)
mov
adc
mov
mov
or
push
in
repz
mov
cmp
xor
mov
cmp
mov
xor
lea
cmp
ja
xchg
add
sbb
push
pop
add
call
sbb
push
sar
pop
or
push
xchg
test
lock
lods
sar
lea
mov
int3
shl
inc
pop
xchg
pop
and
mov
mov
add
xor
je
sbb
jne
pushf
pop
or
add
xchg
retf
and
sbb
cmp
sub
mov
push
shl
neg
and
add
sub
pop
dec
mov
or
push
lock
retf
or
add
nop
outs
lods
es
nop
pop
(bad)
addr16
jge
and
push
stos
mov
pop
jl
test
add
cmp
jne
inc
sub
pop
mov
adc
and
mov
aaa
mov
add
xor
sbb
ja
add
jnp
xor
movs
fnstenv
mov
mov
pop
test
imul
imul
rcr
and
movs
xchg
mov
ret
pop
cmp
dec
jl
dec
adc
lea
lods
jne
(bad)
sbb
lea
out
push
dec
push
pop
jo
sub
mov
jns
sbb
or
mov
inc
je
pop
push
or
pusha
xor
test
nop
push
lea
cmp
in
pushf
adc
out
in
push
lea
jb
push
mov
loopne
adc
xor
imul
cmp
loopne
cwde
xchg
jecxz
push
push
leave
jo
adc
add
add
jp
or
rol
or
(bad)
mov
int3
pop
in
rol
(bad)
jns
rcl
jmp
scas
shl
xor
adc
cmp
imul
xchg
add
pop
enter
jnp
jmp
mov
sub
jno
jmp
jge
add
mov
jmp
int3
dec
add
or
adc
call
fiadd
sub
pop
sub
jns
hlt
fadd
gs
mov
mov
addr16
jno
clc
fisub
jae
je
inc
test
popa
lds
popa
sbb
push
jl
xchg
xor
xor
mov
cmp
ins
ret
adc
push
pusha
pop
sbb
data16
adc
fidiv
leave
pop
add
rol
in
cmp
mov
aaa
adc
int
jne
mov
cli
std
nop
popf
mov
push
and
jb
and
mov
inc
sub
in
sbb
dec
add
xchg
inc
jbe
adc
sub
or
imul
dec
mov
push
mov
xchg
push
mov
sub
add
hlt
xor
fs
mov
or
push
ret
push
movs
in
outs
outs
add
outs
mov
dec
addr16
js
mov
inc
add
sub
pop
sbb
retf
cmp
adc
jmp
pop
push
sub
mov
cvttps2pi
das
mov
push
inc
daa
imul
push
jo
mov
out
mov
push
mov
jno
jne
call
adc
and
shl
sbb
adc
jbe
popf
imul
sbb
xchg
gs
dec
sbb
mov
adc
jl
jae
loop
adc
sub
add
fidivr
lods
loop
fiadd
outs
(bad)
or
or
jae
call
mov
or
cmp
lea
test
mov
cmp
xor
push
mov
popf
add
cmp
inc
cmp
dec
jmp
lea
mov
repz
inc
xor
mov
adc
dec
scas
inc
(bad)
into
mov
cmp
je
(bad)
cmp
pop
or
add
inc
jmp
dec
cs
cmps
xor
out
rol
mov
and
push
pushf
jmp
push
add
adc
dec
cmp
inc
push
cmc
dec
sub
xor
and
sahf
loop
sub
or
jmp
adc
sbb
jmp
cwde
adc
or
shr
jo
div
popf
loopne
sub
test
push
dec
lea
pop
mov
dec
mov
fmul
dec
jg
mov
ror
xor
cmp
loope
lods
or
adc
in
inc
div
jmp
fwait
cli
xor
lock
movs
loopne
jg
mov
mov
je
dec
out
js
push
push
mov
push
je
dec
cmp
data16
push
jmp
ficomp
add
or
xlat
hlt
imul
int
adc
lahf
loopne
mov
inc
mov
inc
pop
add
cmp
mov
mov
pop
dec
mov
out
xchg
in
adc
sbb
ret
pop
ds
inc
mov
test
lea
xor
mov
inc
cmp
adc
or
push
(bad)
iret
mov
sahf
arpl
mov
mov
push
push
nop
push
ror
jg
loop
adc
dec
push
pop
je
jns
movs
sti
mov
adc
and
stc
repz
jb
inc
inc
jo
mov
inc
clc
dec
jne
sbb
or
adc
sbb
jg
adc
imul
mov
je
xchg
movs
push
ja
or
jne
out
add
dec
jmp
pop
pop
ret
mov
neg
add
sub
ja
xchg
add
sysenter
dec
cmps
push
add
adc
fstp
movs
sub
adc
or
adc
sub
mov
adc
or
mov
mov
mov
mov
inc
sbb
(bad)
test
leave
ret
cdq
add
mov
lea
stos
add
and
sub
mov
mov
imul
inc
mov
xchg
nop
sar
add
or
bound
and
icebp
sbb
or
pop
add
call
lahf
adc
add
cld
mov
test
hlt
mov
inc
addr16
lea
mov
push
fist
mov
push
xchg
inc
or
sbb
ins
clc
cmps
adc
pop
out
sahf
lods
cli
jnp
push
cmp
xor
mov
sub
ja
cmp
leave
in
sub
sbb
and
mov
cmp
and
push
or
mov
call
dec
adc
imul
nop
mov
or
js
xlat
mov
pop
cmp
jl
sub
mov
test
test
cmp
lea
xor
add
enter
and
push
pop
mov
cli
sbb
and
mov
xchg
cld
shl
xchg
in
or
jo
arpl
clc
mov
sbb
ins
ja
arpl
add
and
or
or
dec
pop
cmps
cmp
loopne
sbb
iret
(bad)
xor
out
jb
mov
mov
push
dec
add
or
gs
daa
and
and
push
add
push
pop
pop
push
push
adc
rcl
inc
add
cmp
std
jne
rcr
dec
cmp
cmp
lods
retf
cmp
(bad)
(bad)
sub
mov
push
imul
add
aaa
(bad)
ins
mov
jmp
(bad)
cmp
out
mov
cmp
or
std
sbb
jmp
shr
xor
cmps
and
sbb
push
and
push
sub
cmp
aaa
inc
push
cmc
stos
data16
push
aas
rol
jnp
rol
stos
cmp
and
jbe
addr16
out
mov
jp
adc
jg
pop
xor
lea
imul
loopne
mov
dec
sahf
pushf
adc
sub
aad
xchg
cmp
or
push
xchg
mov
jp
mov
sbb
dec
ins
jle
push
or
mov
cmp
loopne
inc
mov
(bad)
mov
out
inc
dec
push
repnz
mov
adc
pop
mov
jb
mov
cwde
and
fsub
mov
loop
aam
jle
sbb
data16
mov
jle
fild
push
mov
inc
dec
jne
mov
stos
mov
add
add
sahf
addr16
(bad)
data16
retf
cmps
cmp
pop
aad
push
loop
mov
adc
mov
jbe
cs
aaa
inc
mov
out
xor
adc
push
and
xchg
add
add
push
addr16
add
or
and
and
jne
add
jno
pop
cmps
cmp
test
pop
and
pop
or
push
mov
push
sbb
fidiv
fld
jle
jmp
add
add
movs
test
sbb
lock
jp
clc
add
mov
ror
xor
or
mov
push
add
sub
jmp
retf
add
sub
xor
jmp
out
and
sbb
add
fsubr
xor
jmp
clc
and
jne
push
popa
add
and
in
lds
push
and
jnp
mov
js
inc
sub
ret
dec
mov
enter
mov
mov
or
cmp
aaa
cmp
loope
cld
xchg
ret
popf
jnp
inc
pusha
or
aam
movs
sub
fsubr
pop
add
add
pop
sbb
xchg
test
adc
inc
loopne
mul
cmp
mov
pop
add
xchg
(bad)
bound
mov
mov
add
scas
inc
pushf
cdq
push
dec
mov
push
sbb
das
adc
push
sbb
and
add
sbb
sbb
aam
jle
call
or
adc
cmp
mov
and
add
add
(bad)
jns
dec
pop
inc
(bad)
pop
cmp
xor
or
(bad)
div
mov
add
add
std
add
cmp
js
xchg
push
mov
test
push
add
lock
stos
inc
and
sub
add
aaa
xor
jge
jo
(bad)
ins
leave
fisub
(bad)
mov
push
test
and
sub
mov
rcr
or
movs
push
inc
mov
xor
lds
sub
lods
mov
mov
and
sub
mov
fistp
add
mov
add
ins
pop
sub
pop
add
jne
pop
shr
cld
xor
cmp
jecxz
adc
push
cwde
and
dec
sbb
arpl
fwait
aaa
or
push
push
data16
in
mov
call
xor
or
dec
test
dec
rcr
push
inc
shr
sbb
ins
outs
or
js
movs
icebp
inc
(bad)
sar
mov
push
mov
fmul
sub
sub
loopne
mov
daa
xchg
push
sbb
sub
jge
pop
push
add
fadd
lock
inc
(bad)
std
dec
(bad)
into
dec
add
sbb
je
ss
jl
jb
mov
cs
mov
sti
dec
lock
and
dec
xchg
mov
jecxz
je
in
or
xor
push
sbb
mov
je
rol
add
mov
adc
shl
sub
sub
inc
add
iret
jle
pusha
jle
cdq
or
sub
rol
lea
loopne
xor
cmp
jo
mov
mov
sub
fs
leave
lock
push
ficomp
jg
test
pop
inc
xor
dec
mov
clc
xchg
add
mov
ins
loope
xor
push
mov
pop
inc
xchg
retw
mov
cmc
push
adc
fs
sbb
jp
ret
dec
xchg
cmc
loope
or
xlat
ror
mov
loop
inc
push
lahf
and
jmp
(bad)
push
push
add
push
cmp
mov
repz
ss
pop
xor
lea
pusha
jmp
mov
mov
pop
add
test
retf
and
pop
fldcw
fistp
fidiv
or
pushf
dec
xor
adc
ror
sub
dec
mov
sub
pop
jl
mov
rol
aaa
cmp
fstp
lods
or
adc
sub
rcr
and
cmp
bound
push
je
pop
push
sti
scas
xor
and
cld
loop
lea
push
jecxz
js
in
lock
or
mov
sub
adc
mov
xor
or
pop
fimul
add
dec
out
push
imul
add
icebp
adc
sbb
sub
ins
(bad)
ret
mov
lock
shr
sbb
xchg
add
je
pusha
inc
aas
mov
inc
(bad)
ja
lea
daa
dec
mov
jmp
pusha
or
pusha
pop
or
add
rol
das
ror
and
into
sub
mov
cmps
adc
mov
jns
jp
inc
jb
add
jmp
dec
call
lock
idiv
xor
push
inc
sahf
outs
add
(bad)
movs
jns
inc
push
cdq
repnz
adc
lea
mov
or
add
jo
add
cmp
jl
add
test
mov
ins
in
or
push
and
lods
test
mov
shl
enter
loopne
fs
cmc
adc
sub
rol
ins
push
aaa
xor
xor
xor
inc
jmp
adc
pop
or
je
push
mov
dec
mov
jl
push
out
shl
and
xchg
lds
les
push
sbb
pop
pop
inc
mov
cmp
aam
push
dec
sub
ror
cmp
inc
inc
adc
ret
test
inc
call
sub
dec
adc
call
movs
or
loop
clc
(bad)
aaa
adc
xor
ins
adc
cmp
pop
inc
xchg
push
sbb
adc
mov
sti
jp
(bad)
adc
or
and
rol
js
push
jns
and
(bad)
jmp
cmp
push
xor
push
mov
dec
fmul
adc
sub
rol
in
out
daa
cmp
shl
loopne
fcom
and
jne
push
aas
out
loopne
inc
dec
dec
mov
pop
xor
mov
mov
mov
pusha
ret
and
sub
inc
in
popa
cmp
je
mov
dec
sbb
clc
icebp
add
push
push
xor
dec
pop
jne
pop
push
pextrw
pop
push
loop
pop
and
sub
pop
sbb
or
or
jo
mov
mov
mov
xchg
ret
ret
out
xchg
push
or
add
mov
in
ins
add
pushf
es
out
mov
adc
fucom
lar
repz
inc
loope
ret
xchg
or
pusha
adc
jbe
inc
dec
(bad)
clc
aaa
bound
adc
adc
test
ss
jne
xor
adc
adc
aam
cmp
xchg
shl
pop
out
loop
aas
mov
mov
cmp
or
cmp
mov
imul
dec
popa
loope
add
adc
loopne
mov
adc
movs
dec
ret
fst
add
ret
adc
in
lock
or
push
mov
mov
jmp
out
cmps
retf
adc
add
inc
adc
and
mov
dec
add
and
adc
sbb
pusha
and
lea
fild
sub
or
jae
xor
push
paddsb
repnz
mov
loope
cmp
inc
mov
ds
push
lea
add
popf
and
fldcw
test
shr
mov
in
ror
jmp
pop
mov
or
(bad)
push
clc
ss
out
push
dec
xor
loope
sbb
add
sti
loopne
add
sbb
xchg
mov
jmp
push
inc
ds
mov
outs
mov
sub
sahf
out
mov
scas
icebp
pop
cmp
or
loope
mov
sub
cld
mov
mov
ds
sbb
mov
pop
shl
mov
aad
popf
fsub
xchg
(bad)
jg
xor
jp
push
xor
push
hlt
mov
mov
loope
and
adc
or
dec
mov
test
or
mov
xor
mov
je
enter
push
test
ins
hlt
push
(bad)
lds
in
inc
call
jmp
dec
dec
mov
cdq
pop
inc
outs
sbb
mov
push
jo
loopne
mov
jnp
push
or
(bad)
pop
mov
cmp
jecxz
xor
inc
mov
cmp
sbb
jecxz
add
fs
out
xor
sar
jno
mov
fstp
pop
or
inc
cmps
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
xor
add
aaa
test
mov
test
add
add
sbb
or
and
sbb
fisubr
lock
push
push
jmp
adc
pop
cmp
dec
iret
test
add
repnz
int
pusha
pop
sbb
lea
and
sbb
fisttp
cmp
in
jns
push
enter
inc
xchg
xor
mov
inc
(bad)
dec
xor
lods
mov
or
mov
outs
hlt
je
shl
xor
sub
sbb
adc
xor
imul
inc
mov
and
shufps
fild
cmp
cdq
mov
sub
xchg
out
sub
lea
dec
imul
rol
cmp
call
xchg
add
les
dec
rol
lock
add
outs
xchg
jae
in
pop
jns
push
sub
adc
fiadd
into
jg
sbb
mov
int3
and
loopne
data16
pushf
test
sub
and
and
aaa
enter
add
daa
loopne
out
(bad)
dec
jne
lea
mov
stc
cmp
std
fnstenv
mov
cmp
or
test
test
or
fucomip
mov
dec
or
cwde
cmp
and
and
mov
jge
push
xor
mov
pavgw
push
jo
retf
jmp
lods
mov
or
pop
and
adc
das
mov
xor
or
inc
lods
cmp
push
ja
add
imul
ins
mov
inc
sub
mov
or
dec
stos
sub
cmp
pop
and
cwde
inc
jmp
addr16
cmp
(bad)
mov
pop
and
sbb
shl
jbe
mov
sub
mov
test
rcr
popa
add
test
aad
xchg
retf
sbb
and
sub
shl
cld
pop
cmp
pop
movsx
enter
add
es
fwait
pop
test
in
sub
lahf
push
das
mov
or
pop
mov
(bad)
adc
scas
and
and
lods
int3
pop
cmps
repnz
nop
pusha
adc
adc
adc
retf
push
into
sub
xor
pop
int
sbb
cwde
add
call
sbb
lods
in
mov
adc
mov
scas
sbb
and
mov
or
fcom
push
daa
in
stos
idiv
mov
fwait
cmp
add
or
push
xchg
ins
loope
mov
cld
push
or
push
popa
mov
(bad)
(bad)
sbb
dec
daa
outs
push
mov
jb
cwde
dec
lock
adc
lea
iret
mov
jp
loopne
dec
lea
pop
sub
shl
mov
das
retf
(bad)
jmp
sbb
and
aas
ss
fdiv
inc
test
add
rcr
fmul
lock
loope
pop
add
mov
cmps
push
loopne
sbb
sbb
and
pop
mov
xchg
ret
nop
sub
(bad)
adc
push
mov
adc
test
sbb
inc
mov
mov
add
pusha
xchg
jne
clc
addr16
push
and
dec
or
clc
ds
ds
pop
(bad)
mov
add
jle
push
stos
(bad)
aam
fistp
rol
nop
mov
std
push
lock
pop
daa
ud0
xchg
inc
mov
jno
mov
ins
das
fidiv
adc
pushf
es
int
pop
mov
cmp
js
add
fst
mov
and
or
mov
ror
repz
cmp
and
push
xor
mov
xor
lock
loop
xchg
adc
or
ror
inc
cs
or
ss
gs
popa
dec
loop
inc
xor
mov
call
je
mov
cmp
pop
jne
dec
mov
inc
adc
pop
fld
inc
div
pop
add
jmp
(bad)
jp
push
lea
cdq
shl
je
cmps
mov
pop
add
sahf
lock
mov
xor
jnp
out
sub
sub
inc
push
add
loope
dec
fs
dec
sub
lock
xor
neg
(bad)
or
xchg
adc
dec
pop
pop
push
icebp
mov
repnz
icebp
lock
jle
mov
cmp
push
add
xchg
add
inc
sbb
sbb
or
add
inc
adc
adc
pop
sbb
(bad)
test
lahf
shr
mov
aas
lods
sub
mov
dec
repz
mov
sub
add
mov
adc
cld
mov
adc
or
mov
call
pop
adc
xchg
lods
pop
data16
das
inc
hlt
add
sbb
test
add
pop
sbb
inc
leave
inc
or
fdiv
jg
jns
neg
mov
push
jl
cdq
push
pop
sub
fdiv
(bad)
mov
sahf
xor
pop
add
cmp
loopne
adc
into
mov
push
out
add
dec
sub
push
jge
bound
mov
int3
rep
loope
pop
xchg
xlat
adc
xor
xor
ficom
into
ret
popa
jno
mov
loopne
dec
js
aaa
sbb
stos
ins
and
(bad)
dec
push
pop
into
(bad)
jmp
xchg
jge
xchg
cmp
lahf
adc
push
push
adc
shl
mov
jnp
add
inc
push
mov
(bad)
push
jmp
add
cmp
ror
hlt
retf
pop
add
stc
and
push
fadd
out
and
in
dec
cld
xor
mov
stos
cmp
inc
or
mov
or
jne
mov
call
add
rcr
fsub
or
adc
sbb
scas
xor
cli
adc
(bad)
mov
or
xchg
jp
aad
fist
mov
fadd
sbb
loopne
pop
mov
xchg
imul
enter
jb
pop
in
and
pop
fimul
push
xor
in
clc
and
add
mov
push
cli
sub
xlat
inc
dec
sub
leave
and
add
ins
sbb
mov
pop
sar
je
mov
inc
popf
neg
sbb
mov
or
and
pop
hlt
mov
nop
ret
daa
xor
or
jne
bound
xor
push
fs
movs
repnz
ret
sub
jmp
idiv
loopne
inc
test
stos
cmp
jb
adc
add
adc
cmps
or
mov
fmul
mov
and
pushw
sub
adc
rcl
cmp
mov
xchg
rol
mov
aaa
add
lods
cmp
add
(bad)
fcomi
pop
enter
push
mov
lods
enter
add
dec
mov
cdq
adc
inc
(bad)
jge
sbb
or
cwde
xor
jp
add
dec
jmp
inc
ja
or
sub
leave
and
cmp
loopne
ffree
inc
sub
inc
push
add
mov
in
mov
push
popa
mov
sbb
test
sbb
or
fsub
imul
push
retf
sbb
js
jg
jb
ja
mul
xor
scas
jmp
adc
(bad)
adc
loop
mov
cmp
sar
movs
scas
pop
mov
push
shl
pusha
data16
pusha
sub
xor
pop
mov
sar
add
jnp
xchg
out
fs
dec
inc
dec
pop
dec
and
or
or
adc
cmp
rcr
shr
in
loopne
add
fstp
push
loopne
je
movs
fisub
cmp
cli
and
adc
lods
and
sub
add
sbb
(bad)
mov
or
jg
in
inc
rcr
jle
in
push
ss
jmp
mov
call
inc
ret
bound
sahf
fwait
adc
sbb
jns
neg
call
inc
or
or
add
aaa
push
xor
mov
lods
push
fstp
adc
mov
pop
mov
push
jge
sbb
mov
mov
rol
jle
aad
das
sub
loopne
jbe
fmul
imul
and
pusha
movs
mov
push
pop
mov
and
frstor
cmp
sub
pop
push
inc
mov
div
cmp
nop
sti
retf
sbb
lods
out
es
add
mov
ins
cmp
mov
and
or
push
push
push
pop
pop
mov
shr
fmul
setl
sbb
jl
push
push
jge
inc
or
sbb
dec
sbb
rol
popf
jmp
xor
(bad)
lea
sahf
clc
gs
or
pop
sub
popf
fcomp
xlat
lods
cli
sub
fadd
fld
sbb
jmp
xor
inc
pop
leave
pmaddwd
adc
popa
popf
sbb
sti
add
mov
nop
mov
mov
mov
cld
sbb
pop
sar
sub
data16
xchg
mov
and
in
sbb
add
js
stos
pop
xor
cmp
imul
mov
adc
out
add
xor
sar
jo
push
mov
(bad)
add
jae
outs
shl
add
and
sbb
bound
jnp
sbb
frstor
push
call
jle
and
cmp
outs
stos
in
or
fs
ret
jle
dec
inc
cmp
pop
sub
xchg
test
xchg
test
xchg
inc
scas
dec
cmp
(bad)
push
push
mov
xchg
mov
cmp
xchg
add
pusha
mov
fs
push
fadd
jmp
rcl
pop
mov
sahf
pop
shl
test
test
in
sbb
mov
mov
je
inc
pop
shl
push
movs
lods
pop
xor
mov
sti
and
mov
or
or
inc
or
or
sub
adc
pop
jecxz
push
out
xchg
pop
inc
or
(bad)
mov
out
movs
popa
das
enter
lods
mov
mov
push
les
test
xchg
dec
xor
scas
add
les
adc
adc
sti
or
lock
inc
push
add
xor
stc
or
pusha
cmp
add
call
xchg
call
and
mov
(bad)
and
jge
(bad)
pop
cmp
and
inc
or
adc
repnz
in
aad
push
xor
int
inc
shl
test
ficomp
repnz
push
xchg
jmp
sbb
scas
dec
inc
push
and
add
sahf
dec
ss
movs
test
add
test
es
leave
inc
and
movs
add
rcl
xchg
test
je
rcr
shr
(bad)
nop
pop
lea
dec
dec
sub
scas
xor
sbb
and
and
dec
and
jb
add
dec
sahf
inc
(bad)
push
clc
mov
pop
push
xchg
add
jb
enter
cmps
adc
mov
out
mov
inc
mov
cmp
jb
push
dec
mov
and
nop
(bad)
and
pop
add
nop
add
mov
dec
sub
and
xchg
fild
pop
enter
test
xchg
pop
and
add
leave
lods
lods
lods
ror
mov
(bad)
inc
xor
or
hlt
or
sbb
push
cmps
mov
sbb
add
fcom
push
test
(bad)
add
dec
imul
sbb
inc
bound
dec
in
ja
loope
adc
push
add
jne
pop
shr
shr
xchg
cli
xor
and
xchg
test
mov
add
xchg
xchg
into
std
mov
or
or
inc
xor
jmp
in
inc
dec
or
in
push
loopne
jmp
add
push
dec
adc
mov
and
inc
adc
pop
adc
ss
pop
loop
add
pop
fist
movs
ins
int3
and
jge
fnstcw
je
clc
ror
mov
popa
loope
add
or
add
in
dec
mov
rcl
pusha
adc
xchg
add
add
jmp
push
pop
inc
mov
xchg
bound
inc
out
jbe
int
mov
mov
mov
mov
inc
mov
cmp
jbe
push
adc
clc
test
or
retf
fadd
sahf
cmp
push
jmp
popa
cmp
cmp
ins
into
and
rcl
push
push
push
pop
mov
push
sbb
add
cmp
shl
adc
adc
add
rol
and
repnz
(bad)
pop
in
pop
mov
ins
dec
adc
jmp
sub
mov
shr
or
mov
adc
ins
lods
out
repnz
nop
call
pusha
cmp
ins
push
pop
aad
or
add
jb
push
sbb
inc
popf
adc
xor
cmp
aam
test
ret
sub
mov
rcr
add
xchg
xor
test
shr
fnsave
xchg
add
push
xor
pop
pop
int3
push
jae
cmp
add
jl
xor
dec
jmp
xor
xchg
adc
and
adc
shl
jbe
inc
inc
sti
and
fadd
stc
pop
es
data16
mov
cmp
push
add
hlt
xchg
ja
adc
xchg
jmp
mov
cld
pop
sbb
xchg
mov
js
xor
add
je
movzx
xor
leave
or
add
jp
into
inc
icebp
jp
mov
inc
pop
idiv
jne
and
retf
sub
js
fcomp
jmp
cwde
mov
dec
arpl
out
sbb
xlat
icebp
adc
adc
inc
mov
popa
in
in
dec
add
sub
mov
sbb
outs
enter
imul
call
(bad)
pusha
jmp
stc
push
sub
ror
lea
ss
inc
ret
pop
pop
xor
ins
les
xchg
inc
pop
jge
dec
mov
fadd
pop
or
cmps
jne
sub
mov
adc
outs
mov
cmp
je
push
jp
jmp
lock
cld
add
clc
xchg
out
ret
push
sar
inc
push
adc
test
div
pop
sbb
sub
mov
pop
or
hlt
dec
cmp
or
cld
imul
push
out
push
or
and
cmps
or
or
test
dec
dec
jl
xor
bound
dec
push
push
mov
adc
test
(bad)
lods
inc
mov
jmp
push
or
shr
dec
mov
lock
ja
pusha
dec
pop
pushf
pop
add
push
xor
and
pop
mov
jg
jmp
test
sahf
or
push
(bad)
mov
not
cmc
mov
iret
push
push
pop
test
ret
cmp
shl
es
xor
data16
jmp
sar
lock
ja
adc
add
or
aas
push
xor
pusha
ret
cmp
lods
rcr
js
clc
mov
popf
and
test
and
push
xor
and
sbb
popf
add
(bad)
sub
add
mov
xor
mov
add
aaa
cmps
test
pop
je
std
and
sub
mov
mov
push
mov
mov
xchg
cmp
jne
fdiv
mov
mov
dec
dec
mov
push
sub
push
sti
rol
aaa
mov
inc
jmp
cmp
into
aad
jne
pop
adc
ret
je
aad
mov
xor
or
and
mov
ret
lea
scas
rol
adc
(bad)
retf
pop
mov
sbb
dec
rol
hlt
repz
pop
sbb
add
jle
sbb
add
adc
out
mov
mov
aaa
cmps
and
add
(bad)
mov
ins
mov
jmp
scas
sti
int3
and
adc
inc
neg
inc
mov
xor
adc
add
shl
dec
imul
add
push
aam
push
or
xor
sub
sbb
sahf
mov
dec
add
cmp
loope
push
push
rcl
xor
fstp
and
movzx
(bad)
or
inc
movs
or
or
or
or
jmp
pop
sub
or
icebp
xor
dec
xor
pop
adc
xor
adc
js
push
adc
dec
sbb
movs
cdq
fsubr
lahf
and
jbe
ins
scas
and
push
cmp
or
sub
es
xor
nop
mov
sbb
xor
inc
pop
dec
xor
inc
inc
nop
xor
rol
inc
dec
xor
xor
rcr
push
dec
xor
inc
rcr
pusha
dec
fs
nop
xor
push
xor
cmp
nop
xor
je
js
dec
dec
xor
cmp
pop
pop
ds
test
mov
push
and
or
inc
xchg
inc
in
and
cwde
sub
mov
cdq
xchg
out
movs
xor
test
add
aaa
mov
les
loop
sub
mov
mov
xor
add
xor
and
add
rcl
mov
retf
fsubr
fsubr
gs
cs
loopne
in
mov
cs
and
in
das
aam
retf
nop
pop
xchg
inc
hlt
xchg
mov
inc
cld
xchg
retf
sub
stc
scas
jbe
add
mov
push
mov
leave
dec
adc
scas
gs
mov
xor
sbb
mov
retf
nop
and
sub
stc
xchg
cmp
mov
cmp
cmp
cmp
xchg
xor
inc
inc
and
xchg
pop
inc
dec
popa
inc
ds
aaa
dec
sub
jp
gs
push
sub
push
outs
pop
repnz
pop
add
xchg
pop
and
test
xchg
push
dec
fwait
cmp
mov
xor
add
daa
daa
sub
adc
outs
and
sbb
sbb
pushf
pushf
pushf
sub
xor
popf
pushf
pushf
sbb
cmp
in
movs
dec
mov
inc
inc
cmovs
leave
leave
leave
dec
push
push
pop
add
pop
pusha
fs
ins
jo
js
or
jb
test
sbb
mov
xchg
cwde
and
dec
xor
leave
test
ror
(bad)
enter
and
sar
es
fsub
in
es
fs
fs
lock
clc
cld
dec
jb
dec
add
add
in
or
cmp
xor
adc
adc
sbb
es
and
es
fs
sub
xor
cmps
pusha
xchg
dec
cmp
gs
dec
cmp
push
xor
and
push
pop
pop
in
test
jle
add
and
push
mov
arpl
add
xchg
mov
stos
push
adc
iret
jo
or
push
psubsb
push
lahf
loope
test
in
pop
jmp
(bad)
push
jb
push
test
push
sti
add
push
fistp
mov
xor
je
add
in
add
pop
cs
and
inc
xor
dec
cs
push
jo
lods
add
stos
xchg
cmp
jl
cmp
aaa
(bad)
outs
or
jne
sbb
add
mov
and
and
lods
imul
fbld
xor
sti
sub
push
rep
xchg
fisttp
out
jmp
enter
jbe
mov
ins
add
dec
sbb
test
push
retf
stc
(bad)
mov
movzx
cli
push
mov
sbb
cmps
mov
fmul
daa
or
adc
mov
jl
sub
adc
(bad)
jb
cmp
daa
and
(bad)
movs
inc
loop
(bad)
jmp
cmps
xor
in
push
test
jg
sub
mov
mov
cmp
pusha
xor
xchg
lock
xchg
add
(bad)
(bad)
cmc
jmp
mov
outs
mov
or
inc
or
xchg
push
inc
js
sbb
push
cld
call
xchg
adc
fld
and
push
adc
inc
pop
inc
stos
jge
mov
loopne
xor
arpl
cdq
cmp
ja
movs
jb
inc
adc
dec
jb
in
adc
sbb
cs
pop
xchg
dec
cs
and
cmp
in
and
cs
jl
dec
cs
pop
or
push
sbb
das
nop
inc
and
lea
sbb
ror
jmp
stos
xchg
or
mov
and
dec
mov
or
sbb
mov
and
rcl
movs
push
xchg
dec
call
ins
jae
sub
push
xor
outs
dec
xor
push
daa
sub
and
push
sub
xchg
push
cs
das
and
cmp
jo
outs
add
push
sbb
dec
dec
call
adc
mov
pop
(bad)
in
add
in
jb
add
and
repnz
popa
cmp
ret
cmp
mov
adc
dec
add
push
jns
sbb
hlt
repnz
sub
push
add
mov
xlat
movs
add
enter
mov
push
inc
pop
sub
cmp
mov
cmp
cmp
push
sub
leave
sti
ja
gs
icebp
pop
mov
xor
adc
xchg
mov
lock
fld
out
je
jmp
jne
push
mov
je
dec
or
add
pop
dec
jle
mov
mov
pushf
mov
lods
dec
mov
pop
or
lods
aad
pop
ja
test
cmp
dec
or
sbb
inc
jb
ds
pushw
push
cs
ss
sahf
ror
push
dec
pop
push
adc
pop
movs
mov
push
out
mov
inc
mov
cli
push
dec
mov
into
push
pop
xchg
cmp
jle
(bad)
jmp
jbe
mov
call
add
and
cmp
jl
sub
sbb
or
sbb
mov
cld
into
push
mov
xor
adc
mov
pop
ret
mov
mov
push
dec
es
jmp
inc
movs
cmps
nop
ret
jmp
ja
add
ins
mov
mov
add
lea
inc
push
fidivr
push
jl
pop
jle
add
sbb
push
mov
sti
xor
int3
xlat
lods
push
fwait
pop
fsub
iret
push
sbb
rol
push
pcmpeqw
test
cmc
mov
and
lods
inc
pop
push
mov
push
push
xchg
stos
data16
test
or
add
or
ja
and
dec
shl
rcr
push
xchg
xchg
mov
add
pop
(bad)
hlt
or
push
or
jmp
xchg
and
icebp
call
or
clc
sub
cmp
sbb
pop
je
(bad)
leave
add
add
or
sbb
inc
adc
dec
loopne
adc
clc
nop
sti
or
add
fst
and
or
nop
retf
adc
fcomi
je
imul
or
and
rcl
inc
mov
dec
and
push
push
fcmove
pusha
popa
aas
push
sbb
xor
(bad)
pop
add
push
jne
jno
sbb
dec
cmps
push
jne
jmp
xor
mov
and
test
ret
pop
test
pop
les
xor
loope
push
sub
ds
inc
mov
adc
jmp
add
dec
sbb
je
pop
daa
das
call
xor
jne
aaa
das
mov
arpl
out
mov
or
push
ret
mov
push
pusha
sbb
ret
call
movs
push
add
inc
lahf
clc
retf
add
push
and
mov
fmul
or
data16
xchg
xchg
pusha
and
enter
mov
push
push
or
sub
pop
xor
jp
sbb
mov
xchg
dec
ins
iret
mov
fsub
pop
jbe
in
jg
cmp
xchg
adc
pop
mov
pop
movs
mov
sub
outs
loope
add
into
dec
sbb
add
pop
inc
inc
ret
pop
leave
or
int
xchg
adc
repnz
ja
jo
push
retf
lea
xor
sub
and
je
fist
push
add
in
dec
mov
addr16
jbe
out
retf
mov
inc
sub
jg
rcl
leave
xchg
inc
sbb
cmp
mov
jns
ds
push
adc
je
jmp
add
or
push
shr
or
jmp
mov
mov
inc
sbb
pop
push
mov
or
push
and
lods
(bad)
sbb
xchg
sbb
or
sidtd
mov
mov
es
cmp
mov
lea
pushf
jl
sbb
add
jo
xor
mov
test
inc
adc
and
repnz
jmp
test
xor
push
stos
rcl
imul
test
neg
push
shl
dec
add
jbe
sub
xor
icebp
fld
dec
pop
mov
cdq
mov
pushf
mov
jbe
lahf
mov
and
inc
adc
mov
outs
stos
push
mov
je
mov
add
sub
mov
pop
mov
lea
adc
sbb
add
pop
add
or
add
add
repz
add
movsx
xor
retf
add
sub
je
xchg
add
mov
add
push
repnz
gs
pop
pop
call
repnz
scas
in
or
or
xchg
cmp
push
cld
add
or
enter
or
or
add
or
or
sbb
pop
xchg
or
iret
enter
push
cs
enter
xor
mov
pop
adc
or
sbb
adc
and
adc
adc
adc
push
pop
and
jb
out
adc
adc
adc
xchg
adc
sahf
pop
scas
inc
add
pop
pop
mov
sbb
sbb
xchg
call
push
repnz
sbb
enter
mov
xor
sub
jns
jo
sbb
dec
sahf
push
and
ja
sbb
addr16
push
push
inc
neg
mov
cmp
jne
add
add
push
dec
out
sub
mov
pusha
mov
call
movs
lods
(bad)
jnp
and
inc
sbb
outs
mov
cmp
je
dec
in
imul
repnz
adc
sub
in
in
repz
leave
repz
mov
enter
in
call
call
adc
and
mov
cmp
pop
leave
xor
jmp
jmp
jmp
or
in
fsubp
aad
in
xchg
aad
in
cmp
xchg
addr16
mov
out
add
sbb
leave
and
in
lock
repnz
icebp
das
enter
repnz
iret
repz
std
hlt
push
jnp
aam
imul
xchg
stos
cmp
cmp
sahf
div
mov
call
std
clc
clc
inc
scas
add
aas
stc
sahf
xchg
sub
and
cli
nop
addr16
add
sti
inc
outs
sub
fdivrp
cld
cld
je
cld
in
ffreep
push
push
nop
shl
mov
xor
ins
leave
repz
sbb
(bad)
(bad)
xor
add
jmp
mov
int
jnp
shl
ror
add
or
inc
adc
push
imul
xchg
pop
leave
mov
cmp
push
mov
cmp
dec
inc
or
out
out
xchg
jns
xor
(bad)
sti
and
and
or
dec
jmp
jmp
das
test
scas
daa
in
cdq
or
add
push
and
cli
or
(bad)
cli
out
out
out
sub
xchg
mov
inc
repnz
xor
aas
repz
xchg
sbb
add
stc
(bad)
push
cmp
mov
mov
stos
dec
div
mov
xchg
and
xor
pushf
pusha
pop
repnz
stc
sbb
movs
test
or
sub
cld
cmp
jmp
push
in
push
mov
fiadd
test
hlt
add
mov
pusha
lods
mov
push
and
loop
arpl
loope
setb
inc
clc
and
or
out
stos
or
fdiv
pop
leave
or
sahf
in
rcl
sub
pop
push
retf
push
mul
test
test
xchg
das
test
adc
mul
scas
test
and
test
repnz
inc
mul
sub
test
rcl
mov
mov
jo
dec
leave
xor
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
pusha
rcr
push
(bad)
data16
pop
inc
xchg
adc
add
stos
adc
adc
push
mov
pop
in
mov
(bad)
jp
pop
jo
loop
pop
hlt
daa
sbb
sbb
jo
imul
loopne
dec
repz
repz
nop
mov
or
xchg
repz
mov
repz
repz
or
in
cmp
repnz
repnz
repnz
test
icebp
cmp
and
aad
jo
repnz
shl
repnz
repnz
sbb
nop
pushf
mov
xchg
sub
mov
icebp
cwde
icebp
xchg
add
daa
test
xor
mov
push
and
icebp
movups
xlat
or
pop
(bad)
and
add
ret
xchg
adc
pushf
out
push
loopne
rcl
jge
push
cmp
aaa
inc
cmp
cmp
ret
mov
add
mov
(bad)
mov
add
cs
inc
jne
stc
xor
iret
icebp
dec
add
movs
xchg
dec
inc
add
mov
sbb
mov
ret
lds
sbb
cmp
cmp
ins
inc
out
xor
pop
fwait
int
jns
sbb
out
inc
fdiv
sahf
out
cmp
addr16
ins
cmp
aas
leave
xor
aaa
xchg
sahf
pop
inc
push
add
rol
ds
xor
out
push
dec
xor
add
adc
call
add
push
nop
mov
ss
adc
fcomip
ror
and
add
cmp
or
(bad)
adc
xchg
sub
jb
gs
mov
(bad)
fs
add
mov
sub
test
pop
mov
push
in
inc
lock
mov
adc
test
add
adc
ss
push
sahf
xchg
or
lods
icebp
xchg
xor
je
cmp
mov
outs
adc
je
dec
je
push
sbb
or
ds
popa
call
rol
add
inc
adc
push
sub
ja
fisttp
idiv
popa
pushf
cmps
jmp
jo
enter
inc
jmp
adc
push
sub
or
and
outs
jmp
inc
xor
pushf
push
push
stos
inc
fild
or
inc
or
jmp
mov
cmp
or
inc
sub
jmp
and
pop
adc
dec
ins
inc
movs
(bad)
ja
test
or
test
sub
addr16
push
lods
push
pop
loopne
imul
push
fwait
rol
sbb
imul
cmp
push
jne
push
add
fnstsw
sahf
test
add
push
outs
sub
sar
push
sub
adc
adc
sbb
jp
por
jb
add
xchg
iret
or
test
jmp
mov
dec
mov
int3
and
adc
fst
jmp
jo
pop
add
and
and
or
or
lods
ja
pop
mov
push
pop
push
lahf
mov
dec
test
sbb
call
adc
out
or
ror
ins
pop
dec
call
push
clc
das
add
inc
jmp
cli
in
arpl
cdq
jo
or
or
call
pushf
arpl
lock
js
jne
popf
mov
sbb
sbb
mov
ds
hlt
ret
rcl
and
fst
clc
mov
sbb
dec
adc
movaps
cld
add
mov
cmc
sub
sub
jno
popa
sbb
xor
fisubr
push
inc
ss
mov
dec
pop
or
xchg
rcr
push
xor
adc
sub
sbb
inc
add
mov
je
xchg
adc
xor
dec
hlt
mov
jbe
pop
mov
or
jnp
sbb
xor
imul
mov
push
add
mov
sub
pop
add
aas
inc
mov
xor
lock
enter
sbb
jo
arpl
mov
loopne
fstp
mov
imul
ret
dec
dec
and
retf
call
xchg
pop
ret
mov
es
sub
push
add
inc
inc
jo
cmp
cmp
xor
out
movs
sbb
not
mov
shl
adc
or
add
push
(bad)
imul
push
mov
inc
adc
mov
repnz
or
sbb
pop
mov
shl
loopne
dec
inc
add
and
inc
or
add
dec
ins
mov
adc
and
sub
or
lock
loopne
(bad)
into
mov
jmp
push
pop
push
push
inc
push
cmps
and
cmp
or
push
jbe
dec
sub
sbb
loope
mov
adc
or
int
into
push
mov
fcomp
iret
pop
sar
lods
or
mov
push
or
pop
cmp
cmp
add
div
scas
xchg
leave
popa
test
adc
cmp
mov
lock
xor
fmul
or
or
add
and
pop
fistp
or
jne
cmp
mov
jecxz
inc
adc
dec
add
inc
mov
ja
mov
jmp
lea
jmp
nop
push
loopne
jl
call
je
dec
gs
out
dec
aaa
mov
push
pop
mov
inc
adc
mov
push
out
les
retf
and
lds
sbb
pop
ins
push
cdq
add
inc
pusha
add
or
sti
(bad)
sub
gs
or
jp
fidiv
cs
sbb
inc
fs
inc
mov
movs
and
mov
add
inc
and
pop
mov
adc
adc
fnsave
mov
push
jecxz
retf
push
fs
cmp
pop
add
jecxz
in
mov
mov
add
shr
inc
rol
fs
mov
sub
push
mov
pop
lahf
ret
jne
cmp
adc
stos
jle
repz
xor
xlat
sub
or
aad
sub
hlt
add
jns
push
mov
rcl
xor
or
add
xchg
add
inc
adc
add
rcr
inc
or
outs
mov
aam
sub
or
ret
push
mov
shl
imul
sbb
dec
push
fidiv
inc
rcr
test
sub
adc
cdq
jb
jl
imul
or
or
(bad)
es
push
(bad)
mov
or
sub
jg
push
push
sub
add
fs
les
jp
dec
ror
je
retf
or
fadd
or
adc
adc
(bad)
jb
inc
push
in
dec
mov
and
push
and
or
pop
shl
push
add
enter
sbb
add
cmp
loopne
or
pop
mov
push
push
jnp
nop
js
add
js
mov
or
fs
pop
add
inc
dec
jbe
aas
cmps
xchg
mov
xchg
or
adc
mov
cmp
cwde
or
rol
and
gs
sbb
ret
push
in
cmp
or
js
and
cmp
add
dec
push
mov
ds
cld
mov
lea
pop
dec
cmp
xchg
call
fimul
xor
pop
(bad)
sub
jmp
(bad)
jmp
cld
fisub
or
jmp
nop
or
pop
into
ret
adc
call
pop
retf
inc
xor
push
mov
mov
rcr
out
mov
dec
inc
fbld
add
and
mov
loope
inc
pop
jl
adc
cwde
test
and
inc
and
mov
xchg
sar
aaa
push
dec
das
enter
test
js
inc
cmovno
xor
(bad)
dec
(bad)
fucomi
or
adc
jb
dec
push
or
mov
xor
mov
xchg
xchg
mov
dec
xchg
aaa
jl
xchg
dec
sub
sub
add
dec
and
movs
xor
add
jbe
jl
jo
sbb
and
add
push
ficomp
es
sub
neg
cdq
aam
xchg
adc
sub
test
xor
cmp
dec
add
sar
adc
mov
es
adc
mov
ja
inc
or
mov
call
add
nop
mov
jmp
xchg
call
sub
and
sbb
(bad)
mov
mov
mov
adc
sub
ret
push
bnd
mov
(bad)
dec
aam
(bad)
stos
push
mov
mov
or
mov
inc
mov
and
dec
add
pop
ret
pop
push
sub
push
dec
dec
mov
add
out
xchg
clc
adc
and
cmp
pop
pop
test
or
mov
mov
jle
stos
retf
sbb
cmps
je
adc
fwait
dec
push
push
or
add
add
adc
inc
or
hlt
lock
xor
mov
(bad)
ins
mov
push
lock
jno
loopne
pop
jae
add
add
lock
retf
shl
jne
pop
cmp
dec
push
push
xchg
add
push
stos
stc
nop
and
xor
push
mov
div
icebp
popa
sub
je
mov
and
and
mov
add
xchg
test
jl
or
fmulp
sahf
retf
cmp
or
shr
clc
xchg
mov
icebp
mov
movs
ret
adc
dec
enter
fistp
sbb
sbb
addr16
sub
js
cmc
sti
push
dec
pop
fstp
js
cmp
xor
push
ds
pop
push
pop
inc
push
xor
movs
or
mov
mov
call
clc
in
and
cmp
xchg
adc
dec
iret
add
xor
in
jmp
in
lods
lahf
jmp
mov
lods
popf
mov
cmp
sub
jle
popf
jne
sub
repnz
sbb
mov
sub
mov
out
rol
xchg
call
xchg
(bad)
and
push
push
repz
add
add
lahf
bnd
leave
xchg
nop
mov
data16
jl
add
or
movs
sti
add
sar
mov
rcr
clc
aam
xchg
test
pusha
(bad)
retf
fldpi
xchg
xchg
ret
into
pop
or
inc
retf
in
add
add
or
dec
add
mov
add
cmps
adc
sahf
jo
jo
pop
cmp
not
arpl
add
xor
rcr
mov
mov
hlt
inc
mov
jb
sbb
loopne
stc
clc
dec
je
or
inc
xor
add
cmp
dec
outs
dec
and
je
ds
mov
pusha
sub
imul
adc
and
outs
lahf
add
add
mov
inc
xor
movs
pop
cmp
push
sbb
fs
cmps
cdq
sbb
imul
sub
js
dec
ret
imul
push
add
call
test
int
add
das
add
xor
xor
ret
or
inc
xchg
imul
jecxz
ds
mov
xor
hlt
sti
loopne
sbb
lock
add
xchg
je
push
pop
sub
test
xor
pop
das
pop
pusha
loop
mov
add
push
push
or
dec
and
ret
adc
mov
cs
xchg
es
sub
in
clc
or
cs
push
mov
or
imul
push
xchg
clc
stos
mov
mov
lahf
jl
rcl
pop
hlt
(bad)
loope
jo
sub
jne
sub
repnz
adc
mov
fsubrp
adc
mov
adc
test
mov
(bad)
jge
test
jbe
iret
pop
fcmovb
inc
inc
push
data16
jne
sbb
mov
inc
enter
mov
dec
mov
dec
add
cs
inc
cmp
stos
fadd
outs
dec
inc
addr16
or
or
cmp
jns
push
sbb
ret
out
test
jns
mov
sub
retf
cmp
jmp
nop
retf
clc
sti
sti
clc
sti
aaa
cmp
push
gs
imul
ror
in
adc
stos
sbb
adc
sti
out
rcr
shl
mov
jne
mov
cmp
popa
mov
xor
and
dec
xlat
add
mov
pusha
adc
sti
adc
push
shr
push
push
mov
push
or
pop
lea
inc
cld
adc
add
sti
loope
jo
push
push
xchg
sub
inc
sbb
clc
sti
hlt
sti
add
cmp
pushf
inc
push
adc
sti
clc
sti
inc
xchg
sqrtps
stc
retf
out
mov
cdq
mov
imul
repz
repz
das
push
pop
sub
xor
in
retf
inc
ret
(bad)
jb
test
ins
dec
movs
inc
inc
dec
push
or
icebp
mov
ret
sti
push
lock
hlt
sti
(bad)
mov
mov
cmp
in
or
mov
xchg
das
sbb
rol
jno
ja
inc
push
nop
sti
mov
mov
add
sti
in
sti
jne
dec
repz
pop
dec
shl
loopne
ja
cmc
cmps
jmp
jmp
out
sbb
or
aas
popa
sub
cld
mov
mov
sub
dec
hlt
add
sub
movs
pop
jno
add
push
test
fmul
pusha
or
sub
or
jne
in
or
cmp
loop
aas
dec
xor
pop
xchg
popf
add
mov
jae
mov
push
pop
test
or
adc
xor
shl
int3
inc
aam
adc
rol
jle
aam
data16
scas
inc
mov
dec
loope
mov
adc
jle
sub
icebp
hlt
loope
retf
call
xchg
cmp
jmp
pop
int
into
mov
js
mov
or
fimul
mov
outs
push
or
add
movs
add
lahf
add
mov
cli
mov
jns
ficom
add
sbb
pop
mov
pop
pushf
aad
jge
adc
xor
add
xlat
pop
ret
lods
(bad)
jnp
addr16
cmp
cmp
sbb
dec
or
adc
xchg
add
(bad)
nop
push
dec
mov
call
test
shl
xchg
cmp
jne
js
and
addr16
dec
mov
or
lods
mov
ror
push
sti
pop
test
jne
inc
jmp
push
mov
cs
aam
xor
xchg
ins
(bad)
test
push
cmp
ja
push
pop
inc
fisttp
xor
test
rol
cmp
sub
push
mov
jl
into
inc
adc
mov
cmp
out
and
mov
mov
popf
outs
sub
cmp
and
inc
mov
mov
cwde
cmp
jle
sub
cmp
xor
cld
scas
movs
and
push
jmp
dec
push
jmp
cmp
mov
mov
xchg
xchg
je
test
dec
jae
mov
sar
cmp
jg
mov
(bad)
jg
sbb
inc
sub
xchg
jmp
adc
pop
jge
(bad)
neg
mov
add
push
shl
je
jae
retf
imul
fld
cmp
mov
or
xchg
shl
or
lea
bound
jne
out
lahf
and
cmp
add
stc
add
dec
ror
and
xor
into
sub
scas
mov
lods
sub
mov
push
je
stos
loopne
je
add
les
test
and
mov
aad
push
jbe
test
jl
inc
dec
mov
jecxz
je
mov
fld
xchg
or
jge
sub
dec
or
iret
mov
fiadd
inc
ret
sbb
and
sub
mov
rol
adc
jecxz
in
rcl
jmp
push
jg
push
mov
icebp
sub
push
mov
mov
loopne
jne
lea
xchg
(bad)
pushf
ins
xor
jge
int
or
add
mov
ror
sbb
test
jmp
in
cmp
pop
inc
shl
mov
lods
iret
pop
fstp
sbb
jle
clc
ret
mov
push
mov
jp
stos
les
inc
lds
es
call
push
cdq
adc
cli
in
mov
or
data16
popa
pusha
mov
cmp
shl
adc
movs
add
add
mov
pop
dec
add
into
mov
adc
shl
rol
or
sub
stos
adc
je
call
(bad)
pop
scas
cld
mov
sbb
ja
into
ja
out
xor
xchg
mov
mov
pop
inc
test
fld
les
test
mov
jne
inc
or
cmp
pusha
add
or
jbe
jne
jne
xchg
nop
fmul
sbb
stos
push
test
jmp
test
pushf
xchg
push
sbb
call
or
sbb
push
inc
pusha
mov
mov
pusha
dec
lea
cmp
jb
inc
or
fist
add
js
sub
(bad)
sub
mov
add
out
ror
push
(bad)
sbb
sti
jg
add
lods
xor
jo
mov
js
fmul
shl
cmp
jle
imul
jmp
or
daa
gs
and
jg
or
xchg
icebp
adc
inc
in
push
fwait
or
lock
lods
aaa
add
or
push
fcom
mov
mov
ins
fadd
loopne
shr
fidiv
pop
data16
jne
inc
shl
je
mov
scas
jo
sub
push
cmp
sub
jne
pusha
fisubr
lock
xor
(bad)
add
ficomp
add
mov
fiadd
push
out
push
daa
ror
(bad)
fisubr
clc
(bad)
fdivr
and
or
mov
mov
clc
mov
jl
outs
scas
ss
cli
jmp
mov
dec
nop
xor
(bad)
lahf
or
push
dec
into
jmp
lods
cli
xchg
mov
mov
jno
inc
loope
sbb
mov
mov
rcr
dec
ins
int
xor
retf
das
lock
adc
neg
xor
sub
movups
dec
xor
pop
test
inc
mov
(bad)
inc
xor
and
js
mov
dec
sahf
lods
push
outs
sahf
mov
push
bound
test
out
mov
arpl
inc
push
mov
mov
push
lods
int3
add
imul
inc
push
add
mov
sbb
pop
push
inc
adc
sub
xchg
outs
add
xor
(bad)
cmp
sub
dec
or
and
jl
aaa
or
frstor
mov
pop
xchg
mov
push
push
mov
add
cmps
mov
jne
push
int
push
xchg
inc
add
add
pop
outs
dec
xchg
pop
or
pop
cmp
aas
or
mov
add
ficomp
mov
adc
pop
imul
jge
jecxz
dec
inc
mov
je
xchg
(bad)
out
mov
xor
adc
xchg
jmp
fadd
sbb
push
push
aaa
aam
dec
dec
push
movs
inc
cmp
call
nop
and
or
dec
outs
ret
lods
ins
jne
das
pusha
ret
popa
jecxz
retf
fisttp
cmp
jno
push
cmp
mov
dec
or
or
ss
xchg
xor
aam
and
sub
(bad)
inc
push
xchg
or
inc
or
lds
lock
mov
mov
cmc
(bad)
sbb
mov
daa
push
xor
test
inc
and
push
add
xchg
fbstp
xor
inc
push
nop
cmp
dec
sbb
lods
je
inc
imul
retf
repz
mov
xor
call
or
inc
dec
xor
xchg
push
stos
add
xor
sbb
adc
sub
or
in
mov
popa
adc
jmp
(bad)
arpl
adc
sahf
add
sti
jno
or
mov
add
dec
jle
sbb
dec
js
je
inc
push
xchg
test
lea
mov
sbb
pop
push
nop
add
xlat
sbb
and
mov
and
movs
xor
loopne
pop
push
xchg
add
add
int3
push
jne
jle
mov
xor
jg
adc
add
cmp
test
xlat
mov
cli
push
(bad)
xor
and
cmp
pop
rol
aam
fsub
inc
jo
in
xor
push
daa
fsub
xchg
lds
jae
jbe
je
inc
rcl
fadd
xor
sbb
and
pop
repnz
mov
movs
bound
and
cli
or
nop
xor
sub
cmp
rcl
xor
push
inc
mov
in
push
mov
daa
push
iret
cmp
add
or
rol
mov
enter
adc
push
cli
jb
push
inc
xlat
lds
push
pushf
adc
cmp
sbb
or
xor
mov
stos
push
adc
xchg
xor
(bad)
es
or
jl
or
mov
sbb
push
cmovb
add
add
lock
popf
push
and
inc
out
leave
xchg
jne
pop
sub
or
mov
or
rol
das
out
dec
jne
lock
and
push
xchg
or
inc
fiadd
sahf
xchg
and
in
xchg
cmp
jmp
jbe
xor
xor
xor
dec
je
dec
jne
fmulp
mov
sbb
test
mov
stos
adc
loop
dec
xchg
outs
xor
rol
jge
stos
sar
shl
add
aas
popf
add
ror
add
add
data16
shl
daa
popf
and
cwde
push
jns
and
cdq
jo
adc
adc
lahf
loopne
mov
xchg
adc
xchg
clc
dec
inc
xor
pop
sub
and
lea
mov
cmp
sub
lahf
xchg
or
pop
pushf
ret
lods
pusha
das
jmp
jmp
cmp
nop
sbb
lock
xor
dec
sar
sbb
fdivr
or
hlt
add
iret
stos
or
add
pop
rol
enter
dec
hlt
and
xchg
sbb
arpl
sar
rcr
add
ret
sub
sub
jmp
test
mul
test
push
or
and
sub
loope
rcr
mov
aas
or
call
test
jb
pop
loope
push
or
mov
dec
aas
xor
push
aas
xor
mov
fld
push
push
and
inc
jb
pop
adc
cmp
inc
dec
mov
xor
xlat
cwde
xor
loopne
lea
push
sbb
out
sub
into
cmp
sub
push
cmp
adc
or
mov
js
es
int3
jl
into
pop
inc
mov
cmp
cwde
rcl
sub
ins
adc
xor
cmp
xor
or
push
mov
jp
jmp
adc
sub
push
push
push
pop
pop
dec
je
sub
rcl
or
enter
popa
add
pop
xchg
xchg
(bad)
cmps
push
adc
dec
add
pop
jno
mov
adc
sti
jbe
(bad)
loop
data16
pop
jnp
add
pop
sbb
repnz
rcl
adc
jmp
adc
adc
mov
dec
inc
jge
or
lahf
sub
(bad)
xchg
mov
fnsave
iret
dec
xlat
push
cwde
and
mov
cdq
jmp
repz
dec
push
push
cs
stc
mov
jae
mov
int
hlt
adc
pop
inc
jo
cwde
sbb
loop
xor
inc
test
movs
or
mov
add
or
lods
loopne
cmp
xchg
mov
sbb
mov
call
icebp
or
xchg
jmp
mov
mov
mov
add
pop
xchg
loop
or
addr16
lock
js
adc
jne
sti
test
dec
seta
fcomip
lds
in
jne
inc
movzx
push
imul
mov
popa
imul
fist
jge
mov
cld
push
and
movs
jl
sar
and
push
mov
push
mov
dec
xchg
pop
(bad)
call
jb
gs
cmp
xor
mov
pop
dec
popa
add
push
mov
out
mov
lea
rol
push
dec
dec
int3
jo
sub
push
sub
mov
add
cmp
in
dec
pop
jae
adc
sub
vmload
aad
dec
sbb
test
and
test
inc
movs
cmp
adc
inc
mov
hlt
jmp
or
jmp
mul
jl
sbb
adc
jo
jmp
dec
xchg
shl
lea
ret
(bad)
fxch
jl
cmp
and
loop
icebp
fnstenv
sub
pop
ss
push
rcl
sbb
dec
or
and
sbb
mov
mov
pop
test
cmp
xchg
popf
jecxz
shl
add
adc
imul
dec
and
xor
push
sub
push
sbb
xchg
les
bound
add
sub
ret
scas
je
mov
rcr
aad
fcomp
sbb
int3
or
xchg
sbb
sub
adc
mov
jmp
and
jp
daa
(bad)
mov
jmp
test
xor
lods
lahf
mov
or
inc
and
(bad)
or
mov
mov
cmp
in
adc
sbb
call
adc
add
add
sub
mov
and
push
out
cmps
loopne
mov
fdiv
loop
arpl
(bad)
dec
jp
add
sub
inc
cwde
loopne
ret
jp
add
inc
cmp
jmp
mov
aas
mov
popa
lea
rol
or
ret
push
and
ret
cmp
ficom
ss
or
add
push
mov
jae
iret
sub
adc
jecxz
jno
adc
clc
mov
xor
int
or
ret
outs
xlat
(bad)
fcom
xchg
cmp
jo
add
sbb
iret
mov
adc
push
sbb
test
neg
add
push
inc
push
cmp
in
xchg
das
sub
jne
add
call
pusha
push
jmp
or
push
enter
popa
inc
or
or
int3
or
mov
mov
cmps
mov
aad
ror
inc
movs
add
or
fsubr
je
cmps
sbb
add
pop
fidivr
adc
xor
dec
push
jmp
adc
js
cmp
jl
ss
sar
cmp
je
(bad)
push
xor
push
dec
and
test
push
adc
push
lea
adc
cdq
jl
or
jmp
push
adc
or
call
or
push
js
mov
ds
mov
test
mov
and
cmp
mov
ret
add
sub
arpl
aas
jmp
mov
es
int3
push
mov
in
(bad)
and
mov
jmp
dec
add
lea
sbb
mov
adc
or
dec
test
or
dec
into
loop
sub
ror
rol
leave
add
test
(bad)
je
mov
iret
pop
cmp
add
or
dec
imul
fdiv
or
jl
adc
(bad)
push
push
dec
leave
hlt
mov
movs
xor
aam
scas
cmps
rol
add
add
mov
dec
push
je
mov
xor
jb
mov
outs
adc
call
jl
or
add
add
inc
jb
mov
inc
in
inc
cmps
ss
push
sbb
add
xchg
jno
cmps
out
ins
push
adc
sbb
aad
push
sbb
jns
pop
retf
push
retf
or
xor
inc
jae
or
jae
lods
rcl
jmp
add
and
clc
add
ss
in
jecxz
sbb
jmp
enter
cmp
mul
cld
lock
je
mov
fs
inc
mov
mov
dec
cmp
dec
or
adc
pop
inc
retf
dec
or
sub
pop
xchg
adc
clc
es
loopne
xlat
div
rcr
lea
pop
mov
or
repz
icebp
cmp
dec
dec
push
imul
fdivr
fidiv
add
(bad)
lock
ins
popa
lea
push
sbb
xor
push
ins
pop
test
out
repnz
jmp
not
or
pusha
adc
scas
adc
jno
lea
sbb
push
dec
outs
sbb
stos
xor
adc
mov
stos
(bad)
and
shl
or
(bad)
fadd
sbb
aam
or
mov
sub
cmp
ins
test
leave
add
jmp
xchg
mov
test
inc
pop
(bad)
loop
adc
je
or
stos
or
mov
adc
adc
in
and
and
add
mov
adc
mov
jb
add
mov
xchg
xchg
lock
jmp
mov
pushf
out
inc
xor
push
sub
xchg
inc
jne
cmp
dec
das
push
mov
jmp
adc
or
push
adc
mov
outs
xchg
xchg
mov
ret
push
sahf
test
jg
inc
dec
and
pop
add
xchg
pop
cmp
jle
mov
jne
hlt
adc
add
stos
bound
xor
pop
adc
dec
push
je
je
ret
or
addr16
mov
out
pop
adc
fild
popa
nop
inc
jle
lock
mov
call
dec
sbb
test
pop
jnp
int
adc
sbb
mov
test
jle
or
test
pop
aas
push
or
push
loop
adc
repz
(bad)
cmps
push
pop
and
cmps
pop
push
add
clc
je
xor
(bad)
inc
xor
inc
xlat
lods
lock
rol
mov
jnp
dec
jecxz
rcr
pop
mov
add
inc
cli
je
and
jno
sbb
repz
mov
inc
test
jp
xchg
push
xor
(bad)
jl
xchg
lods
mov
dec
lods
movs
mov
and
mov
repnz
call
pop
mov
jbe
mov
sbb
push
pop
mov
add
imul
fdivr
add
mov
and
or
sub
rol
cli
sbb
outs
jmp
pop
sti
cmp
out
and
cli
in
or
and
add
and
fild
in
inc
sub
std
adc
test
xchg
movs
pop
fild
mov
mov
and
lock
retf
mov
imul
(bad)
pusha
or
xor
or
sbb
cmp
inc
cmp
and
add
add
push
xchg
movs
dec
cs
pop
add
xchg
call
stos
idiv
or
es
add
add
xor
pop
sbb
dec
mov
jo
pop
pop
xor
(bad)
das
and
mov
shr
or
or
(bad)
jbe
cmp
sub
inc
xor
pop
les
mov
enter
inc
clc
xor
cs
dec
jbe
push
sbb
add
stos
cmp
or
push
and
add
ret
pop
adc
lahf
shr
fucomip
das
ja
je
cmp
mov
mov
adc
pop
sar
add
inc
ins
adc
adc
xchg
add
stos
test
icebp
or
rol
or
push
push
or
jmp
jne
pop
or
or
(bad)
mov
adc
jnp
std
ds
xor
call
int3
pop
xchg
pop
inc
inc
cmp
pushf
ss
mov
shr
jne
jg
push
lods
xlat
(bad)
(bad)
scas
push
dec
and
or
dec
inc
inc
mov
daa
sub
mov
and
or
dec
std
add
call
std
stos
retf
shl
js
js
ret
adc
and
bound
iret
cmp
sub
add
jge
into
dec
and
adc
dec
cmps
sub
mov
enter
push
adc
pop
hlt
sub
loopne
shl
adc
loopne
and
ins
or
add
jb
push
call
and
sahf
sbb
and
mov
stos
mov
test
aam
jae
or
mov
or
mov
push
loope
or
call
push
push
leave
je
jge
inc
mov
mov
add
pop
push
into
es
mov
je
mov
push
test
cmp
jb
cmp
ja
add
cmp
adc
(bad)
cmp
jne
jmp
popa
sti
push
shl
leave
adc
or
(bad)
xchg
pop
push
adc
adc
or
push
cwde
ss
jae
cmp
push
repz
or
icebp
imul
xchg
dec
cmp
cmp
add
mov
add
out
adc
dec
std
add
jmp
xor
lock
push
dec
lahf
xor
mov
cmp
cmp
push
mov
loopne
inc
enter
jl
push
add
dec
jmp
sar
js
adc
addr16
sbb
push
add
(bad)
rcr
test
inc
pop
sub
add
popa
mov
imul
aad
add
(bad)
aas
stos
mov
bound
jecxz
int
add
ret
fcomi
pop
test
sbb
inc
cmps
inc
jp
hlt
add
adc
xchg
(bad)
stos
stos
push
stos
pop
pop
and
lea
mov
call
inc
adc
sub
sub
pop
push
rcl
adc
in
loopne
mov
je
push
ins
sub
xchg
push
dec
sub
test
aam
mov
adc
call
loop
rol
or
sbb
pop
out
ja
loope
jmp
pop
ins
pop
and
mov
out
add
outs
mov
inc
adc
iret
pand
dec
data16
je
adc
cmp
call
fdiv
cmp
fdivr
cmp
jb
inc
sub
dec
jp
lea
adc
xchg
mov
jns
jp
push
sub
adc
mov
adc
lea
enter
push
stos
sbb
in
div
inc
xchg
mov
or
mov
sub
pop
aam
jne
dec
xor
dec
add
loop
dec
(bad)
xchg
aad
dec
iret
ss
sub
fsub
jmp
push
fdiv
xlat
pop
lea
or
in
adc
dec
cli
ds
push
or
and
sbb
js
aam
out
mov
xor
rcr
out
jno
dec
fdivrp
pop
sub
loope
test
je
lahf
or
dec
jns
mov
xchg
mov
and
xor
push
fadd
pop
out
inc
jno
loop
adc
jl
mov
out
or
inc
sbb
sbb
xor
push
cmp
xor
mov
push
ds
mov
and
pop
pop
inc
mov
jb
jp
push
cld
dec
adc
inc
jle
mov
dec
jns
into
and
and
(bad)
lds
hlt
push
aas
mov
repnz
test
push
add
sbb
inc
dec
leave
movs
addr16
cmp
test
loop
fild
jmp
arpl
inc
pusha
jns
sbb
pusha
test
jne
test
dec
in
dec
into
out
mov
es
iret
and
cmp
icebp
es
out
and
les
jge
int
or
bound
add
dec
dec
sbb
in
pop
lods
shl
test
loope
ret
or
fisttp
pop
or
add
sub
into
pop
add
clc
fcom
jmp
and
jne
mov
jns
or
mov
xchg
mov
push
mov
mov
inc
cs
xchg
mov
xchg
mov
xchg
mov
push
xchg
cwde
inc
sbb
ss
inc
push
lock
mov
mov
and
xchg
add
call
stos
test
or
je
cmp
clc
shr
xchg
fs
xchg
test
mov
test
test
add
(bad)
js
xor
and
cli
add
jns
lock
jp
pop
push
loope
push
(bad)
shr
mov
or
je
inc
jl
in
xor
cmp
dec
fimul
jmp
ins
push
repnz
cmp
dec
cld
mov
bound
outs
xor
xor
clc
xor
push
sbb
scas
retf
fiadd
rol
dec
push
mov
ret
cmp
shl
and
cmps
adc
or
ja
sub
sub
push
or
arpl
cli
mov
sbb
popa
push
push
xchg
adc
popa
loopne
fsubr
test
lds
mov
sbb
sub
mov
add
push
cmps
or
xchg
or
xor
sub
and
dec
inc
call
push
sub
(bad)
movs
jo
ret
push
je
rol
outs
inc
push
adc
aad
adc
inc
inc
sar
in
sub
mov
fwait
sub
lea
adc
test
push
mov
mov
aam
add
mov
cmc
or
add
push
inc
hlt
mov
cmp
xchg
push
adc
out
mov
pusha
mov
inc
or
inc
add
xor
out
shl
lea
cmp
es
sbb
xchg
sar
rol
retf
test
fsubr
push
rcl
adc
sbb
or
sub
sbb
sub
sub
xchg
out
and
sbb
fwait
ret
ret
mov
jae
fucomp
sbb
les
je
mov
or
leave
adc
dec
sbb
adc
es
push
inc
imul
or
in
mov
jne
push
call
movsx
out
fld
es
jmp
outs
jecxz
sbb
fstp
mov
fild
cmp
sub
adc
mov
nop
and
add
lods
adc
jns
aad
add
inc
loop
mov
mov
lods
jmp
in
mov
push
loop
ss
sti
mov
jmp
adc
xor
jo
and
mov
dec
xchg
and
cs
call
jnp
iret
leave
inc
call
lods
push
mov
inc
or
cmp
ins
xchg
adc
and
jne
rol
lods
xor
cli
inc
mov
or
and
lea
sbb
xor
cdq
out
jmp
push
gs
enter
push
scas
outs
inc
or
ret
movs
sub
imul
int
pushw
mov
xchg
mov
jge
jl
dec
stos
push
mov
mov
sbb
lea
mov
shl
add
mov
sar
rol
mov
xor
and
xor
sbb
cdq
push
loopne
push
push
retf
cmps
mov
mov
lock
cmps
hlt
push
shr
loope
shr
or
mov
popa
stos
les
xor
(bad)
xchg
retf
lock
lock
stc
repnz
add
cli
cli
inc
cli
imul
(bad)
repnz
or
in
or
or
call
data16
push
or
mov
or
jp
inc
ficomp
or
hlt
jbe
dec
dec
pop
fidiv
fldenv
enter
add
or
rcl
div
inc
scas
sbb
lock
jg
lock
stos
inc
sahf
mov
shr
or
pushw
sbb
mov
out
jge
and
ss
mov
jne
jo
ret
out
pop
mov
out
mov
aam
daa
xchg
mov
sbb
shl
retf
jae
ror
and
sbb
dec
or
jp
aam
int3
xchg
cmp
and
jge
push
call
mov
add
xor
mov
cwde
inc
push
xor
fsub
mov
sahf
mov
mov
push
test
mov
mov
mov
sbb
cld
sbb
add
inc
add
sbb
in
test
xor
(bad)
test
inc
mov
out
or
add
fs
inc
xchg
mov
leave
pop
(bad)
cmp
jne
test
jmp
add
xchg
cs
adc
pusha
mov
scas
push
push
sbb
je
cwde
sbb
sub
and
mov
cmp
sbb
mov
test
push
xchg
mov
add
pop
outs
call
adc
inc
and
or
mov
pop
jo
shl
add
pop
mov
pop
inc
rcr
or
(bad)
std
pusha
inc
test
pop
je
shr
out
jmp
loopne
call
push
addr16
fcomp
inc
loop
push
and
call
lea
fbld
push
adc
pusha
add
lock
sar
jnp
dec
or
inc
les
enter
jb
or
lea
or
xchg
out
sub
out
clc
test
pop
mov
loopne
inc
dec
enter
sahf
mov
mov
jae
add
and
push
mov
mov
sar
lock
inc
push
test
sub
dec
push
jg
(bad)
cmp
jge
sub
cmp
or
or
clc
mov
dec
cmp
cmp
add
dec
add
add
fadd
cmp
mov
(bad)
or
mov
pop
bound
in
jp
jne
dec
mov
and
or
jbe
or
add
xchg
push
xchg
dec
adc
push
icebp
loop
add
push
mov
pop
mov
add
data16
inc
mov
cmps
or
adc
and
adc
mov
or
jl
retf
test
pop
cmp
or
jle
stos
add
or
or
cmp
out
sbb
add
or
xor
pop
scas
add
in
and
mov
sbb
inc
sar
mov
push
sub
add
add
xchg
mov
jecxz
ret
sbb
jo
(bad)
mov
mov
iret
xor
push
pusha
inc
and
hlt
pop
outs
imul
and
pop
pop
jo
mov
add
pop
cmpps
dec
shl
and
ret
or
loopne
dec
adc
fstcw
xor
loope
jbe
inc
push
pop
jne
dec
movs
test
add
add
xchg
rcr
retf
mov
mov
(bad)
loopne
lods
add
adc
int
dec
or
adc
or
jne
jmp
ins
add
iret
sbb
jne
mov
jmp
add
jns
ror
(bad)
dec
jge
(bad)
movs
pop
pop
xchg
and
push
or
mov
add
mov
and
pop
add
nop
clc
mov
enter
test
sbb
push
inc
scas
add
push
or
mov
push
and
es
test
jne
add
push
in
stmxcsr
lock
bound
cdq
ss
or
add
xor
int
or
adc
mov
jo
repz
mov
mov
pusha
cmps
retf
je
and
sbb
inc
cmp
jns
jg
into
into
into
int
in
push
mov
pop
sub
sar
push
pop
nop
pop
xor
call
or
or
pop
ins
sub
sbb
sub
xchg
xor
add
and
jno
pop
or
xchg
out
sahf
xchg
ja
adc
add
add
sbb
add
test
movs
stc
and
sbb
je
and
repnz
ret
jne
or
pop
mov
inc
(bad)
sub
jmp
(bad)
jmp
retf
ret
inc
push
adc
sbb
cmp
mov
inc
lods
mov
sbb
add
push
xor
or
inc
add
cmp
std
and
add
xchg
xor
inc
lea
rol
adc
cli
xor
stc
xor
mov
jecxz
fbstp
rcl
pop
push
jbe
push
sbb
push
in
inc
enter
add
js
push
cmps
cmp
clc
inc
ja
cmp
div
push
jg
pop
sub
mov
clc
xchg
add
and
xchg
movs
fiadd
inc
adc
adc
mov
add
hlt
jmp
pushf
jno
in
xchg
add
jae
push
sti
daa
dec
cmps
pushf
test
pop
push
add
sub
js
sbb
inc
and
push
mov
ret
or
stos
and
out
mov
push
imul
and
clc
ja
push
sar
lea
dec
sub
push
push
(bad)
and
retf
xchg
in
lock
mov
add
jns
shr
jns
sbb
rol
imul
add
add
pop
les
xchg
cmp
adc
xchg
mov
loop
cmp
bound
dec
mov
jmp
sub
popa
add
jmp
inc
icebp
mov
xor
mov
in
mov
push
xchg
add
push
pop
loopne
fadd
pop
das
pop
and
push
sbb
pop
rol
ss
xor
and
push
mov
lea
add
shl
pop
or
xchg
inc
push
jmp
shr
retf
cmp
sbb
cmps
and
add
adc
xor
sub
fadd
sti
and
movs
xor
jo
add
movs
lods
or
mov
mov
push
push
call
push
cld
scas
dec
sbb
js
inc
inc
jge
cli
mov
jmp
fdiv
sbb
das
pop
scas
and
mov
jmp
sahf
out
ret
and
out
and
inc
dec
arpl
outs
clc
pop
movs
push
mov
dec
mov
adc
push
inc
pop
repnz
hlt
or
stos
int3
or
nop
or
add
mov
das
sbb
and
sbb
ret
fidiv
or
push
push
sub
ror
jbe
inc
xchg
or
sub
dec
add
ins
repnz
or
nop
and
push
mov
add
adc
or
dec
add
push
or
test
sub
int3
add
ins
pop
scas
dec
cmp
jmp
lock
cwde
pusha
inc
fiadd
in
aam
push
sub
scas
(bad)
call
cmps
fisubr
xchg
sbb
mov
nop
add
test
or
call
fmul
mov
enter
call
mov
in
repz
(bad)
add
sbb
mov
and
pushf
das
(bad)
stos
sub
icebp
push
fadd
nop
pop
mov
nop
push
jecxz
jmp
movs
jle
outs
dec
test
dec
or
int3
add
and
inc
nop
pandn
test
pop
sub
jl
push
pop
pop
adc
dec
push
adc
inc
sti
mov
or
lahf
movs
popa
leave
inc
mov
test
ret
xor
scas
mov
or
lods
aam
shl
add
dec
inc
fwait
pop
pop
lods
and
mov
or
test
jmp
fcom
(bad)
pop
pop
addr16
pushf
dec
aam
cmp
mov
lods
fsub
adc
leave
jb
ret
es
jb
add
push
jns
leave
mov
dec
xchg
outs
clc
xchg
sbb
jb
cmp
pop
push
pop
jns
add
dec
(bad)
fild
imul
ins
xchg
adc
pusha
xor
xor
movs
pop
leave
cwde
loope
cdq
add
mov
sbb
mov
mov
out
cld
inc
mov
mov
stos
int3
xchg
xchg
mov
or
lmsw
pop
nop
cpuid
jl
add
(bad)
pop
movs
in
push
aaa
fs
idiv
adc
xor
cdq
in
sbb
xchg
int3
cmp
jo
adc
jb
push
add
loop
sbb
test
es
pop
stos
sub
adc
in
in
in
hlt
dec
repnz
adc
ins
push
lock
adc
inc
inc
mov
jmp
push
fld
imul
sbb
xor
mov
push
pop
aas
cwde
cmps
add
leave
pop
enter
lahf
mov
xchg
ret
xor
or
add
sub
les
push
jl
dec
or
inc
pop
sub
add
add
pushf
jl
push
mov
pop
test
mov
das
in
jns
adc
stos
cmp
xor
imul
add
mov
adc
mov
add
and
(bad)
adc
mov
add
mov
nop
pop
adc
std
adc
fs
jecxz
mov
xchg
fcomp
pop
inc
outs
jl
or
mov
nop
mov
pushf
adc
cwde
mov
in
cmp
adc
(bad)
xor
inc
pop
adc
cli
(bad)
nop
(bad)
fld
lea
popf
mov
int
sub
mov
jbe
cwde
pushf
inc
mov
add
pop
and
dec
jnp
push
cwde
cld
lods
aas
test
lods
adc
mov
fisttp
dec
mov
mov
xchg
sub
shl
sbb
mov
add
sub
sub
mov
mov
xchg
xor
(bad)
rol
adc
or
pusha
mov
nop
add
mov
fsubr
add
xchg
and
(bad)
cmp
or
push
inc
or
mov
push
ins
shr
add
fst
jecxz
dec
rcr
test
aaa
mov
mov
cwde
call
mov
xlat
add
push
imul
pop
mov
gs
jo
pop
mov
pop
in
pop
push
ins
pop
movs
xor
mov
add
cdq
in
adc
(bad)
in
add
dec
cmps
cs
sub
popf
test
movs
mov
push
inc
cld
inc
movs
nop
or
sahf
ret
dec
add
xchg
pop
dec
out
pop
fs
mov
sbb
nop
lahf
repnz
dec
dec
pop
xchg
pop
loopne
pop
cmp
popf
lods
movs
sub
pop
loop
je
jmp
frstor
push
or
aas
xor
jmp
aad
leave
cmp
dec
mov
and
hlt
addr16
mov
jg
mov
in
movs
add
lds
pop
lods
clc
mov
push
mov
ret
push
popf
add
outs
dec
jle
add
popa
test
ds
xchg
ss
fdivr
(bad)
cmps
pop
jmp
in
mov
pop
shl
mov
(bad)
or
in
cmp
add
add
movs
ins
dec
or
xchg
sbb
mov
into
jne
adc
pop
inc
ds
enter
add
pusha
lahf
sbb
sar
mov
mov
int3
mov
pop
adc
fbld
ds
lea
xchg
or
sub
add
(bad)
aas
pop
inc
lods
ret
jge
ins
mov
int3
pop
es
sub
jno
retf
inc
cs
mov
es
add
pop
in
ins
in
or
pop
das
sub
lahf
outs
nop
xchg
out
or
mov
rcr
pusha
jo
adc
sbb
pop
out
push
mov
ins
pop
jmp
lahf
aas
loopne
pop
aad
(bad)
int3
adc
ret
or
and
push
sar
test
in
fnsave
test
int3
(bad)
xchg
mov
ss
fstp
or
sbb
call
fldcw
mov
pusha
int
pcmpeqb
int
mov
iret
jne
ror
scas
mov
mov
sbb
in
idiv
into
iret
pop
and
fiadd
nop
xchg
outs
lods
nop
fild
rol
mov
cwde
xchg
push
add
inc
pusha
xor
mov
xchg
push
push
mov
lahf
std
pop
shl
pop
mov
pop
lods
mov
das
stc
into
push
inc
fcomp
rol
into
jo
test
in
xchg
mov
jmp
(bad)
xchg
dec
out
shl
xchg
bound
dec
push
and
pop
pop
adc
and
std
lock
ins
push
dec
jb
mov
ins
fcomp
sbb
aam
xchg
jl
(bad)
in
pop
popa
test
mov
test
mov
icebp
push
xchg
or
add
call
loopne
pop
cmp
mov
pop
dec
inc
pop
(bad)
xchg
dec
arpl
add
and
sbb
in
lock
pusha
pop
mov
mov
add
rcr
add
dec
enter
add
lock
jmp
add
adc
add
ret
adc
mov
imul
xchg
inc
mov
xchg
cmp
daa
xchg
pop
add
or
pop
sahf
out
stos
add
ins
mov
jns
(bad)
fwait
cmps
mov
div
push
xor
push
movs
push
push
cs
mov
ds
add
or
cld
mov
xchg
ds
xor
sahf
or
push
inc
add
inc
xor
sti
(bad)
fst
jb
data16
popa
jae
pop
adc
out
jge
iret
adc
jae
ss
add
xor
pop
xor
popa
arpl
push
dec
outs
fs
dec
outs
gs
pop
dec
std
leave
(bad)
out
outs
popa
fs
dec
popa
imul
arpl
mov
out
mov
inc
outs
ja
ins
push
pop
push
jns
pop
(bad)
dec
lahf
imul
jb
pop
push
arpl
gs
cld
mov
(bad)
push
push
jne
pop
push
je
jb
fdivr
(bad)
inc
outs
fs
popa
ins
xchg
outs
je
push
jo
outs
ins
scas
mov
mov
mov
ins
gs
ja
(bad)
dec
jne
jo
je
(bad)
push
outs
jo
pop
dec
gs
test
dec
inc
gs
push
inc
pop
repnz
adc
inc
pop
dec
outs
ins
gs
popa
addr16
push
sbb
shl
dec
jns
retf
outs
mov
mov
je
push
fadd
out
(bad)
adc
mov
stos
les
inc
xor
popa
bound
(bad)
mov
fs
data16
xor
push
fwait
stc
jb
sub
outs
adc
jb
xchg
jl
ins
inc
ss
add
cld
push
pop
pusha
mov
sahf
in
es
push
pop
lock
push
nop
mov
addr16
test
and
sar
fnstcw
rcl
out
push
dec
lock
ins
jae
je
jne
xlat
lods
es
sahf
int
push
push
lock
ror
jnp
clc
es
adc
retf
push
shl
fidivr
push
adc
pop
cs
nop
push
ss
faddp
dec
and
sahf
rcl
iret
enter
dec
pop
pop
mov
addr16
pop
cmps
pop
xchg
push
daa
scas
bound
mov
push
xor
cmp
jg
scas
outs
add
mov
enter
stos
add
or
outs
or
cmp
iret
out
jns
push
aas
scas
push
aas
nop
loopne
lahf
aaa
add
inc
and
mov
mov
jo
push
fild
fidivr
jae
ss
and
icebp
iret
ds
and
push
data16
outs
xor
jbe
enter
ret
lods
add
push
scas
jle
mov
leave
shl
inc
jb
mov
outs
outs
test
push
jns
add
jbe
fimul
cdq
xor
dec
retf
lock
dec
(bad)
clc
mov
xchg
stos
cmp
(bad)
out
enter
dec
(bad)
jb
inc
xor
aas
and
push
fild
push
inc
dec
inc
inc
cmp
iret
mov
shr
mov
into
les
pop
and
mov
or
inc
(bad)
es
into
push
mov
into
repz
int
pop
mov
imul
ret
ret
call
outs
sbb
mov
out
fiadd
lahf
pop
pusha
repz
das
data16
cdq
push
clc
out
cld
mul
and
mov
adc
mov
es
and
xor
xor
je
data16
pop
(bad)
(bad)
xor
jae
imul
ja
jb
daa
sbb
ret
fild
ja
add
ins
neg
push
dec
ss
std
cs
das
pshufw
pop
das
pop
pop
xlat
and
outs
cmps
xor
loopne
adc
das
xor
dec
jbe
add
jl
cdq
jl
mov
push
pushf
or
ss
jae
push
add
push
rcr
add
inc
inc
inc
dec
ins
bound
jmp
push
ins
outs
mov
jb
and
js
jp
xor
imul
sbb
pop
imul
jp
sub
sbb
sub
push
inc
add
arpl
(bad)
sub
inc
inc
jne
sub
pop
dec
out
sbb
pop
cli
sub
cmp
or
sub
bound
inc
inc
cwde
outs
mov
cs
pop
inc
xor
jle
mov
jb
cmps
ja
jp
pop
sahf
stos
js
clc
je
push
aas
adc
pop
unpcklps
fbstp
js
ins
sub
or
in
fild
push
xor
mov
push
pop
sbb
clc
inc
pop
push
inc
push
push
dec
dec
dec
es
or
xor
cli
dec
adc
mov
test
sbb
xor
das
and
sbb
mov
sub
clc
cs
mov
push
inc
lds
push
push
ins
fs
or
xor
fiadd
mov
ficomp
dec
inc
jo
outs
jae
gs
inc
repnz
push
dec
or
inc
clc
arpl
inc
inc
dec
or
pop
and
sbb
syscall
(bad)
(bad)
mov
aam
rcl
mov
mov
xchg
jmp
sar
iret
ret
aaa
inc
in
pop
(bad)
pop
jne
cvtps2pd
ja
jle
shl
sbb
jae
jp
loope
mov
aad
(bad)
fcmove
clc
scas
imul
fucomp
add
fbld
into
fidiv
lods
add
retf
loop
icebp
xchg
mov
mov
pop
cmp
sub
push
dec
dec
ja
ja
sar
icebp
enter
add
push
push
dec
mov
(bad)
mov
lahf
int
adc
aam
inc
dec
inc
push
ficom
dec
dec
pop
inc
mov
pop
mov
sbb
sub
pop
(bad)
jo
test
pop
fs
enter
jne
je
sbb
int3
push
add
arpl
dec
lahf
or
cmp
or
daa
icebp
and
aaa
xor
xor
mov
sub
cs
adc
ja
cs
popf
lock
addr16
and
jmp
das
bound
ins
imul
(bad)
push
cs
test
cmp
jne
ins
imul
mov
jle
test
outs
pop
or
(bad)
fwait
cwde
push
cmp
inc
in
fiadd
xor
js
ins
xchg
lods
mov
sub
add
push
int3
cld
inc
sbb
mov
ins
add
add
cmp
dec
xchg
fadd
and
ret
add
and
add
cmp
dec
in
out
add
adc
or
or
or
inc
cmp
enter
fs
or
(bad)
pop
loopne
psubusb
aaa
mov
es
or
xchg
mov
jnp
jne
push
popa
jb
push
sub
mov
push
add
cmp
repz
and
xor
push
cmp
or
imul
call
push
loope
retf
inc
and
outs
imul
in
mov
es
jo
push
dec
jo
ins
xchg
test
or
arpl
pop
fadd
fild
jmp
bound
and
mov
and
adc
adc
inc
cmp
xchg
dec
add
stos
arpl
ja
add
add
adc
fild
fiadd
add
ja
or
mov
je
adc
aaa
add
test
mov
pop
rcr
sub
out
and
add
(bad)
(bad)
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
mov
rol
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
jg
dec
sar
nop
adc
add
push
pop
or
(bad)
(bad)
(bad)
dec
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
loope
es
sub
sub
cs
(bad)
cmp
ds
inc
push
add
xor
stos
sbb
jle
(bad)
call
adc
inc
inc
inc
inc
inc
inc
inc
pop
or
dec
dec
dec
dec
dec
dec
dec
push
push
push
mov
aaa
mov
pop
pop
pop
(bad)
aas
inc
pusha
dec
dec
push
dec
dec
aas
daa
fild
push
dec
push
push
dec
cmp
dec
dec
dec
mov
push
inc
push
pop
inc
push
pop
push
aam
dec
dec
lods
cmps
(bad)
repnz
inc
push
inc
sub
add
mov
test
es
sbb
call
fadd
and
and
enter
xchg
push
adc
xor
add
or
outs
(bad)
aaa
fistp
push
cmp
jne
ins
and
sub
cmp
push
add
dec
outs
je
outs
jne
and
jb
and
ja
je
and
ins
gs
adc
cmp
dec
fadd
mov
mov
push
in
sub
imul
mov
shr
arpl
outs
add
add
add
idiv
add
or
add
cld
fidivr
pop
bound
data16
mov
sbb
ins
sbb
pop
mov
push
push
and
imul
gs
dec
jb
popa
push
jns
mov
sub
jae
data16
mov
outs
and
and
push
mov
add
ret
push
xor
mov
dec
add
push
push
ins
data16
in
mov
push
outs
push
bound
cmps
sub
sti
sahf
jbe
inc
idiv
imul
int
or
ja
jne
push
jl
pop
jo
addr16
ins
push
arpl
in
ja
outs
repnz
push
jae
or
fdiv
or
push
imul
gs
cmps
loope
fld
jle
jne
lods
rcl
push
fucomi
loope
jmp
ret
push
(bad)
push
cmp
cmp
jmp
pop
inc
sbb
retf
ret
mov
mov
push
cs
or
pop
push
pop
mov
vmovaps
and
and
outs
dec
cmp
push
gs
push
push
fwait
ins
jmp
dec
popa
outs
inc
bound
jb
jo
or
dec
add
inc
jnp
inc
dec
adc
call
gs
sbb
dec
or
or
push
xor
adc
jae
gs
scas
imul
jne
inc
cwde
aam
call
loopne
xchg
fmul
sub
mov
dec
sub
ins
gs
add
fucomi
mov
add
add
add
xor
and
push
pop
sahf
add
xor
push
push
cmp
inc
loop
and
add
pusha
push
fidiv
jo
add
pop
sub
add
(bad)
jne
push
ja
arpl
push
push
add
add
and
add
das
das
xor
pop
ins
and
dec
cmovno
repz
gs
daa
je
mov
jbe
dec
dec
add
push
push
jo
dec
inc
ds
push
daa
(bad)
addr16
arpl
icebp
cmp
pop
scas
test
push
mov
outs
popa
and
inc
jo
pop
inc
das
ss
add
pop
imul
(bad)
mov
fcmovne
jns
out
out
stos
rcr
iret
(bad)
jle
fs
mov
jo
pop
pop
xchg
push
fidiv
push
jae
sub
rol
mov
xlat
ins
fcmovnbe
outs
push
ds
neg
iret
(bad)
mov
ins
mov
(bad)
jg
pop
loopne
inc
dec
cmp
cmp
fs
in
jne
and
adc
add
das
das
jle
lods
lds
dec
inc
dec
gs
bound
jp
fild
cmps
mov
test
cmps
shl
rol
jne
add
xchg
arpl
pop
jne
xor
push
inc
dec
adc
into
mov
jne
mov
xchg
addr16
xor
retf
xor
scas
in
jb
daa
sbb
sbb
mov
push
and
into
cmp
fadd
inc
aas
sbb
jae
dec
test
add
push
mov
popf
jge
dec
bound
inc
cmp
shr
(bad)
xor
dec
add
ja
inc
inc
aas
add
scas
xor
sub
dec
outs
inc
pop
je
cmps
jns
sbb
jecxz
arpl
pop
mov
scas
ins
cmp
iret
and
loopne
inc
scas
es
mov
pop
push
repz
aas
and
or
imul
xor
push
das
push
mov
lods
ret
out
pop
aas
ja
test
xchg
sub
outs
sub
cmp
imul
and
inc
mov
mov
imul
mov
call
or
rol
rcr
jbe
(bad)
jnp
pop
or
hlt
cmp
iret
popa
enter
fbstp
loope
jge
inc
je
adc
ficomp
pop
fbstp
arpl
inc
mov
(bad)
iret
stos
pop
je
xor
inc
retf
inc
mov
mov
jae
xor
fidivr
push
xor
mov
das
(bad)
lock
or
daa
outs
nop
das
jbe
and
cmp
ror
mov
push
push
pop
ds
sahf
jmp
jg
ret
inc
push
pop
mov
rcr
lods
dec
fbstp
scas
jne
jbe
jb
jne
push
sub
push
mov
jg
pop
mov
inc
jnp
and
das
mov
mov
jg
push
sub
(bad)
loopne
in
stos
lahf
outs
aas
or
xchg
or
iret
arpl
sbb
addr16
pop
mov
out
rol
jecxz
stos
mov
scas
fs
imul
rcl
xor
fidivr
(bad)
mov
out
outs
inc
sub
cwde
inc
lahf
sbb
pop
inc
rcl
cmp
inc
sub
addr16
scas
cmp
or
jae
dec
pop
xchg
test
add
mov
cmp
pusha
cmp
or
add
lsl
repnz
push
or
clc
or
and
add
mul
jb
retf
add
not
rcr
and
sbb
sbb
push
hlt
rcr
or
retf
xchg
and
mov
mov
mov
jo
push
cld
dec
jmp
imul
jns
(bad)
sub
add
iret
in
ror
add
iret
and
mov
and
leave
and
add
add
add
add
add
adc
mov
push
add
fs
aam
add
push
push
and
int3
sub
mov
in
aad
add
add
in
outs
adc
push
je
fs
jae
inc
clc
imul
mov
stos
push
xchg
add
bound
addr16
jae
push
inc
outs
add
popa
data16
xor
push
sbb
and
fiadd
pop
ins
outs
jbe
dec
adc
jb
sub
sub
jb
arpl
aas
push
and
fild
jp
gs
jp
popa
fst
mov
in
idiv
pop
les
jbe
addr16
mov
scas
test
cmp
arpl
mov
imul
inc
shl
adc
cwde
loopne
cli
push
jae
imul
mov
adc
jae
or
jbe
mov
pop
ins
mov
jne
and
loopne
pop
sub
and
and
pusha
mov
mov
popa
jb
imul
cmp
popa
pop
or
inc
ins
or
push
adc
outs
pop
test
jge
jnp
pop
cs
jae
inc
shl
stos
xor
add
jb
push
mov
dec
arpl
loopne
imul
adc
xlat
push
ds
inc
and
ins
and
(bad)
outs
bound
popa
neg
add
jbe
pop
dec
xor
ror
jo
pop
(bad)
mov
gs
test
ret
jo
outs
imul
sbb
rol
sti
sbb
jns
jae
daa
mov
ins
mov
imul
fsub
and
push
inc
cvtdq2ps
jmp
js
imul
mov
daa
enter
dec
mov
jb
data16
popa
int3
inc
scas
inc
shl
xor
push
fcmovnbe
(bad)
pop
(bad)
daa
inc
jno
jo
mov
sbb
pop
sub
cmps
and
imul
sub
test
jecxz
sub
push
cmp
mov
pop
fisubr
fsub
daa
outs
pop
inc
call
rol
mov
xchg
pop
add
pop
inc
je
out
test
or
jbe
xchg
pop
ret
daa
jae
popa
lock
daa
push
cmps
push
pusha
xor
repnz
scas
lods
shl
(bad)
dec
jnp
adc
clts
call
or
sub
sub
mov
std
daa
and
xchg
icebp
add
cwde
inc
dec
push
je
jo
fs
pop
dec
dec
inc
push
xlat
push
fidiv
dec
dec
dec
dec
das
out
jbe
jns
inc
dec
push
sub
pop
add
mov
push
push
pavgb
(bad)
mov
push
mov
movs
mov
push
nop
inc
test
imul
pop
push
push
jmp
push
sub
sbb
jl
cmp
sldt
inc
(bad)
lock
scas
xor
cmps
fmul
mov
push
imul
das
ja
cdq
test
out
dec
pop
fs
push
pop
dec
scas
xor
fisttp
cmove
dec
sbb
push
imul
dec
std
hlt
push
inc
in
push
call
test
inc
nop
inc
jl
sub
inc
push
call
and
cmps
ror
inc
cld
cld
pop
sub
test
enter
imul
cmps
mov
mov
xchg
fbstp
mov
add
js
xchg
ja
outs
dec
das
jo
pop
inc
push
outs
(bad)
ins
inc
lahf
inc
dec
dec
cmp
jbe
push
cmp
sysenter
sub
sysenter
push
pop
or
stc
xlat
dec
push
sti
clc
pop
inc
inc
in
dec
sahf
push
dec
not
push
push
dec
fistp
sti
lods
setl
(bad)
or
or
adc
xor
std
add
or
adc
sbb
add
dec
add
and
cmps
dec
dec
ins
ins
and
movs
add
jo
jns
mov
lods
push
dec
das
inc
dec
int3
mov
sub
outs
outs
xchg
sub
loope
cmp
dec
xchg
pop
test
and
pusha
adc
pop
aas
and
imul
ja
adc
(bad)
ins
popa
bound
cmp
adc
cmp
pop
xchg
push
mov
and
dec
dec
dec
arpl
mov
mov
jne
je
inc
add
and
push
outs
call
push
imul
popf
fldcw
jo
xor
imul
movs
sub
and
or
dec
push
gs
push
push
adc
dec
data16
sub
sbb
sti
adc
add
outs
dec
mov
and
das
dec
add
ins
data16
fimul
mov
out
jae
movs
add
rcl
imul
push
push
imul
jmp
add
push
pop
ins
rcr
jle
mov
out
les
pop
xor
inc
inc
adc
add
fs
push
mov
mov
mov
imul
inc
stos
xor
movs
cmps
test
sub
int3
push
fld
hlt
mov
bswap
add
add
cwde
adc
arpl
adc
ret
adc
je
inc
push
xchg
pop
sar
jp
out
loope
inc
pusha
dec
imul
div
es
jne
pusha
sar
sub
push
aad
fadd
aaa
mov
xor
dec
mov
shl
je
btc
xchg
inc
sub
ins
fs
dec
sub
dec
dec
(bad)
ds
sub
add
es
cmp
xchg
(bad)
pop
or
pop
es
jmp
dec
push
inc
out
and
ret
adc
rcl
das
mov
push
xor
push
pop
xchg
dec
bound
sar
shl
xor
dec
popa
je
loopne
gs
cmp
daa
pop
lea
mov
push
out
test
or
push
and
adc
aas
int
dec
dec
rcl
sbb
add
sbb
mul
inc
lahf
daa
sub
and
xchg
sub
and
daa
pop
and
bound
sub
sbb
loop
sub
in
fadd
inc
je
js
pushf
fisub
jb
cmp
jle
shr
inc
jbe
adc
sbb
loop
and
pop
pusha
inc
ficomp
mov
jbe
(bad)
push
push
lahf
scas
rol
fs
and
cmp
adc
push
push
dec
pushw
or
rcr
popa
and
pusha
gs
and
push
and
pop
es
dec
xchg
(bad)
les
lock
push
sbb
pop
pop
pop
push
aad
popa
push
push
inc
or
dec
add
mov
pusha
ins
call
pop
mov
sub
mov
mov
data16
and
xchg
inc
shr
push
push
push
dec
test
dec
push
into
gs
lock
cmp
xchg
(bad)
fild
dec
jge
add
push
movs
shl
and
fistp
mov
fs
push
sbb
xor
das
gs
stos
push
sbb
jg
test
mov
or
stos
outs
aad
das
je
outs
xchg
push
mov
mov
popw
stc
iret
rcr
pop
cmp
cmp
add
ds
push
das
push
sub
call
push
jle
sub
sub
ds
jnp
ja
and
push
sub
sub
imul
rol
cmp
call
mov
xchg
dec
pop
xchg
call
loope
jb
imul
push
or
pop
shl
pop
test
int
test
sbb
(bad)
mov
xchg
inc
jo
and
(bad)
(bad)
jl
repz
xlat
sub
or
jns
iret
adc
clc
in
loopne
sar
rol
push
call
cmp
mov
jne
inc
popf
test
addr16
jns
movs
inc
adc
ins
in
push
ins
push
cmp
push
pop
out
sahf
out
push
push
dec
dec
sahf
out
sahf
inc
inc
cmp
xor
jns
out
sub
and
sbb
cmp
out
add
cld
lock
repz
int3
mov
sahf
out
cmp
or
fdiv
ins
push
inc
cmp
repz
out
add
clc
in
fmul
repz
shl
out
sahf
cld
loopne
cwde
ins
inc
rep
addr16
jg
adc
pop
hlt
loopne
out
or
shl
xchg
inc
dec
cmovns
add
das
push
and
or
inc
es
inc
push
push
inc
push
inc
pop
dec
adc
cmp
imul
js
adc
je
and
jae
adc
mov
adc
enter
and
pop
inc
es
or
data16
jp
inc
sahf
jp
outs
and
ds
gs
or
call
dec
push
push
outs
ja
xor
test
or
mov
popa
rcl
xor
push
xchg
lea
jae
mov
cmp
fidivr
ins
dec
outs
addr16
bound
retf
add
add
jl
das
mov
std
inc
jbe
inc
test
jbe
mov
mov
aaa
icebp
cwde
or
dec
jne
daa
dec
jo
jo
cmps
sub
push
sbb
mov
outs
xor
push
int3
je
sti
mov
dec
inc
cmp
pop
cmp
(bad)
jae
test
add
ds
js
fs
lahf
inc
xor
cmp
and
outs
pop
aaa
scas
jp
bound
xor
xor
aas
ds
mov
or
push
das
jb
jbe
mov
ss
mov
jl
repz
xchg
jb
imul
aaa
mov
imul
push
je
in
daa
mov
cmp
sbb
ror
retf
cmp
push
dec
inc
cmp
jmp
sub
sub
dec
push
push
push
das
push
call
in
rcr
aaa
xor
xor
fisubr
ret
ss
dec
push
push
add
add
inc
sub
inc
xor
inc
ins
das
js
ja
sub
add
ins
(bad)
add
pop
push
les
xor
sub
gs
loope
ror
xor
xor
scas
fld
xor
xor
sahf
aas
mov
push
rcr
mov
fmul
push
jns
jl
call
or
jp
arpl
outs
ins
push
push
inc
push
push
pop
and
and
push
dec
dec
push
inc
push
inc
jmp
pop
inc
push
inc
dec
sar
fdivrp
fdivrp
retf
jge
shl
cmp
xor
xor
ins
cmp
xor
jo
adc
jo
mov
jb
aaa
xor
jne
bound
cmp
mov
ds
xor
xor
xchg
xor
cmp
mov
cmp
jae
xor
inc
inc
xor
adc
xor
xor
cmp
xor
pusha
retf
sub
pushf
fcom
imul
sub
push
imul
shl
popa
and
xor
loopne
aam
mov
outs
sub
xor
adc
cmp
xor
jmp
out
lods
dec
xchg
ins
out
pop
push
in
cmp
cmp
xor
xor
xor
sbb
xor
xor
xor
xor
cmp
fs
xor
js
mov
outs
jbe
pop
xor
(bad)
jmp
adc
shr
bound
jb
xor
popa
cmps
rcr
mov
jo
repnz
xor
sub
xor
pop
div
adc
pusha
xor
jl
das
outs
xor
gs
xor
add
xchg
shl
or
mov
inc
ins
popa
data16
popa
scas
test
dec
sub
scas
xor
outs
mov
cs
mov
xor
xor
dec
ja
test
shl
pop
mov
cmp
data16
ins
mov
cwde
aaa
aaa
je
je
add
add
dec
daa
(bad)
adc
outs
jne
in
jl
xor
ss
(bad)
sub
ss
xor
xor
sub
cmp
icebp
rol
je
cmp
retf
or
cmp
adc
out
into
push
je
(bad)
rcl
addr16
xor
mov
scas
cmp
or
xor
cmp
jp
ret
dec
mov
push
jmp
mov
xor
inc
cli
lods
mov
cmp
xor
cmp
in
sbb
push
out
inc
gs
xor
mov
outs
jbe
cmp
cmp
xor
cmp
xor
test
mov
ss
hlt
push
(bad)
out
getsec
jb
cmps
inc
test
jne
xor
bound
push
aaa
mov
push
mov
sub
outs
jo
mov
cs
and
pusha
jmp
xor
cld
xor
inc
imul
jns
xor
aad
out
xor
gs
imul
imul
xor
ss
cld
xor
test
xor
popf
adc
iret
push
xchg
cmovg
cmp
out
cmp
xor
loope
cmp
dec
outs
pusha
jmp
add
jae
xchg
jne
sar
and
adc
xor
fisttp
push
outs
push
xor
gs
fcom
adc
or
lods
in
or
int3
mov
jo
cmp
adc
xor
shl
xor
xchg
jo
xor
daa
xor
cmp
lock
pop
scas
cmp
adc
retf
pop
pop
xor
popa
ds
loopne
and
xor
ds
mov
cmps
ins
pusha
popf
ss
cmp
inc
loope
stos
int3
ss
and
cdq
cmp
adc
loop
pusha
inc
xchg
(bad)
jae
pusha
popa
add
xchg
out
push
adc
mov
test
jae
or
cmp
loopne
and
ja
cmp
aaa
les
lds
adc
xor
aaa
ror
xor
xor
cmp
out
sub
adc
xchg
outs
arpl
fsubr
cmp
cmp
cwde
or
clc
add
jp
fsubp
xor
cmps
jo
fs
or
add
mov
int3
or
pop
(bad)
cmp
stos
cmp
pop
dec
xor
fmul
sbb
cmp
add
mov
(bad)
xor
dec
and
xor
mov
jp
sub
xor
xor
test
sub
out
sub
cmp
push
ins
jg
into
(bad)
shr
mov
(bad)
ins
push
jge
adc
xor
not
scas
xor
sub
ss
gs
outs
sub
sbb
push
movs
or
xor
daa
ja
arpl
inc
scas
add
fcomp
jb
dec
jno
push
sub
sub
mov
add
dec
out
mov
(bad)
ss
ins
adc
fsub
or
sbb
test
call
ja
cmp
mov
xor
jmp
adc
shl
call
or
ds
and
adc
daa
add
cmp
add
cmp
fisub
outs
mov
xchg
loope
mov
push
loop
xor
test
daa
xor
das
in
retf
cmp
out
cmp
mov
push
adc
cmp
push
inc
and
into
inc
sub
and
adc
out
call
pop
scas
inc
cmps
mov
ins
sub
test
jmp
clc
imul
lock
sub
xor
loopne
rol
xor
jo
(bad)
mov
ins
sub
xor
cmps
xor
in
(bad)
xor
imul
xor
ss
xor
inc
movs
inc
aaa
and
xor
mov
inc
sbb
out
jns
mov
ins
inc
in
lahf
cmp
cmp
ins
inc
inc
jae
adc
ins
pop
and
push
mov
or
xor
das
jmp
mov
inc
(bad)
dec
push
adc
rcr
xchg
mov
outs
or
jbe
ss
cmp
and
add
into
shl
mov
jns
sub
inc
(bad)
sub
nop
xor
bound
mov
cmp
and
or
shl
arpl
imul
cmps
stos
not
xor
je
ins
adc
jnp
test
adc
inc
sub
or
lds
sbb
imul
add
and
sub
add
inc
cmp
stos
xor
push
aaa
xchg
arpl
mov
mov
bswap
and
push
lods
xor
ins
sub
cmp
test
arpl
xor
add
jae
sub
add
xchg
xor
push
and
aaa
sbb
xor
xor
dec
sub
xor
xlat
mov
mov
add
jmp
cmps
cmp
sub
xchg
adc
add
adc
mov
push
movq
arpl
lds
into
cmps
mov
and
cmp
add
xor
xchg
lea
add
cmp
xor
inc
dec
pop
loopne
rcl
cmp
inc
dec
aam
das
xor
push
push
outs
pop
push
lock
fisub
cld
imul
or
aas
shl
push
test
adc
jl
loopne
mov
out
adc
sub
inc
cmp
in
mov
not
pusha
jno
mov
cmps
xchg
shl
pusha
lock
mov
pop
rcr
xor
jo
inc
or
(bad)
test
xor
adc
push
cmp
lahf
ss
or
nop
xor
add
inc
mov
out
arpl
test
xchg
xor
shl
sbb
push
xor
rcl
cmp
pop
fiadd
(bad)
and
clc
push
pop
les
sbb
xor
cdq
cmp
rol
mov
sub
inc
xor
sbb
hlt
ja
adc
jae
gs
xor
int
xor
and
xor
xor
nop
cdq
lods
ss
xchg
(bad)
mov
xchg
xor
xor
dec
push
inc
loope
aas
xor
pop
aaa
ja
aas
aaa
sbb
adc
cmp
nop
sbb
jno
add
mov
mov
inc
xor
imul
aaa
mov
xor
xor
popa
jo
gs
mov
in
clc
push
sub
sub
pop
xor
ss
add
movs
mov
imul
ss
jnp
pop
aaa
fadd
es
jae
rcl
jnp
sbb
cmp
ret
ret
pop
pop
pop
sbb
pusha
add
xchg
xor
loopne
cmp
xor
sbb
neg
pop
ins
jbe
imul
xor
xchg
mov
pop
cdq
push
pop
aas
sub
fstp
push
ds
inc
aaa
shl
retf
sbb
arpl
adc
add
lds
int3
ins
sbb
jno
mov
lahf
xor
call
push
fs
push
xor
xchg
inc
sbb
pop
mov
dec
push
fiadd
mov
dec
mov
pop
xor
xor
(bad)
leave
add
daa
scas
jb
xchg
xor
gs
xor
and
cmp
aaa
adc
adc
push
je
test
pop
push
dec
cwd
xor
sbb
je
ret
aaa
or
in
aaa
jbe
xchg
inc
es
pop
xor
rol
out
xor
adc
aad
dec
mov
adc
ins
cmps
adc
sub
jb
xor
jge
mov
and
out
int
psllq
add
imul
jb
inc
cwde
sbb
xor
das
cwde
mov
xchg
loope
xor
mov
cld
add
push
fsubr
or
cmp
jmp
sub
jnp
out
mov
adc
cmp
mov
xor
or
sub
or
mov
xor
fdiv
fild
jb
jne
fs
jo
ins
mov
lods
push
sub
sub
pop
dec
xor
jo
inc
cmp
imul
std
ret
shl
ss
ret
or
sub
ja
enter
xor
xor
dec
sbb
adc
sub
loope
and
cmp
xor
sub
pmaxub
sub
shl
mov
jae
or
or
push
pop
mov
loope
mov
ins
gs
in
imul
pop
fild
xlat
fwait
ss
jle
mov
xor
imul
aaa
rcr
rcr
inc
mov
call
js
xor
xor
shl
imul
jne
xchg
ror
xor
cmp
xor
cmp
jo
mov
xor
fild
xor
add
les
mov
lds
xor
pop
xor
pop
cmp
out
cmp
rcr
jae
sbb
or
pop
sbb
mov
cdq
xor
mov
xchg
retf
mov
mov
add
push
jo
sbb
push
dec
xor
in
or
(bad)
call
xor
xor
xor
push
js
out
loopne
push
into
js
rcr
arpl
xor
jbe
cmp
or
out
or
and
es
cdq
push
retf
sbb
xor
jns
test
xor
ja
xor
xor
mov
lods
je
mul
jg
inc
jns
jns
xor
hlt
test
sbb
dec
sbb
fs
push
js
or
inc
or
xor
jp
movs
xor
inc
mov
add
loopne
mov
nop
pop
cmp
jb
mov
dec
sbb
add
cmp
adc
icebp
and
adc
stos
sbb
fdiv
aaa
aaa
call
mov
daa
fmul
xor
neg
loope
sbb
fidiv
repnz
div
xor
fild
outs
push
add
pop
std
sar
int
out
loope
mov
stos
pop
mov
sub
dec
xor
fld
pop
push
xor
es
or
xor
movs
or
out
cmp
leave
ins
xor
inc
xor
inc
inc
or
ss
popf
pusha
inc
inc
inc
push
jle
sbb
jo
push
es
out
xor
jge
adc
cmp
dec
out
xchg
mov
cmp
fldcw
push
pop
sub
mov
iret
push
ins
cmp
pusha
inc
nop
fldenv
cmp
fcomp
sub
jbe
mov
push
mov
pop
mov
jge
or
sub
outs
ss
out
dec
jae
add
cmps
and
cmp
xchg
popa
inc
xor
or
or
pop
sub
inc
xor
enter
sub
xor
xor
mov
popf
fs
push
movs
sahf
mov
jmp
test
and
jmp
and
push
fwait
cmps
sub
xor
dec
test
push
fdiv
mov
mov
xor
cmp
jle
pop
xor
mov
or
cmp
outs
mov
xor
out
ja
xor
imul
jae
xor
push
mov
sub
mov
sahf
push
arpl
mov
popa
hlt
xor
push
cmp
outs
jb
xor
ss
jp
mov
inc
sub
repz
int
pop
ss
mov
mov
jb
dec
test
addr16
fdiv
inc
adc
pusha
mov
fistp
enter
pop
nop
xor
repnz
sbb
mov
or
aaa
mov
icebp
sub
ins
aas
std
xor
inc
dec
or
stc
xchg
or
xor
and
aaa
in
jb
aam
in
das
ret
xor
cmp
stos
or
inc
in
adc
fnstcw
nop
dec
add
xor
out
in
rol
ret
mov
xor
jns
pop
mov
cmp
adc
jg
sub
mov
imul
or
fcomp
dec
pop
xor
sub
cmp
fldenv
aas
xlat
xor
imul
cmc
adc
sub
sbb
dec
inc
add
loope
xor
inc
mov
aas
ss
and
add
sub
pop
xor
jecxz
stos
test
cdq
jne
arpl
dec
cmp
les
cmp
xor
adc
xchg
repz
scas
push
gs
xor
pushf
inc
mov
or
js
mov
adc
xor
les
xor
and
pusha
sbb
dec
adc
mov
xor
popa
imul
test
jb
gs
(bad)
mov
xor
jno
sub
cdq
xor
sbb
int3
mov
jbe
in
push
addr16
xor
xor
ja
adc
mov
cmp
and
sub
and
enter
ins
xor
jb
cmp
jo
fs
xor
add
inc
cmp
dec
bound
add
push
mov
jo
outs
pop
dec
inc
repz
outs
or
popa
addr16
sub
ror
ss
lods
test
rdmsr
sub
cld
lahf
mov
push
and
lods
add
bound
dec
aaa
add
mov
xor
pop
in
movs
jae
add
add
add
add
dec
add
push
mov
xor
sbb
push
out
fdiv
scas
aas
adc
jl
jae
ins
mov
dec
rol
das
mov
or
dec
mov
mul
jmp
or
sbb
je
mov
outs
pop
jae
ret
pop
xchg
mov
add
pop
or
sbb
dec
add
mul
jle
xchg
data16
out
add
es
ss
pop
cmp
cmp
xor
adc
lea
pop
inc
sub
add
push
sub
mov
ins
popf
out
or
mov
cmps
aad
mov
jns
popa
js
add
inc
outs
add
mov
fnstcw
xor
pop
fidivr
inc
mov
push
inc
div
das
sub
popa
sub
ds
fist
pusha
xchg
sub
inc
movs
lahf
mov
aas
pop
les
aaa
nop
ss
dec
push
mov
or
mov
(bad)
out
add
call
int
push
inc
aaa
ss
sub
imul
dec
add
ins
ins
les
xchg
dec
stos
hlt
and
sub
loopne
pop
push
inc
loope
mov
je
sub
sbb
out
push
dec
sbb
sub
dec
add
test
inc
mov
lds
adc
addr16
loop
xchg
mov
adc
push
push
cmp
dec
scas
and
cmc
loopne
sbb
loopne
cs
lods
add
dec
cld
call
add
add
add
mov
or
or
or
or
or
add
out
iret
leave
leave
ins
push
or
leave
leave
leave
or
or
movs
push
or
mov
cli
mov
dec
int3
sub
sahf
out
lods
ins
in
sbb
out
sahf
out
fdivr
jl
out
sahf
cld
add
sahf
out
mov
out
sahf
out
shl
mov
sahf
out
sahf
repnz
sahf
out
stos
push
sbb
pop
fidivr
mov
sahf
cli
push
xchg
es
out
cmps
data16
xchg
out
sahf
out
(bad)
ss
sahf
out
sahf
test
dec
into
cs
out
scas
outs
out
push
sahf
out
sahf
out
fidivr
mov
sahf
inc
add
jns
popa
loope
xchg
out
sahf
out
shl
mov
sahf
out
sahf
icebp
or
sahf
out
test
out
sahf
out
fnstcw
mov
sahf
stc
add
jns
out
movs
gs
xchg
out
sahf
out
aad
mov
sahf
out
sahf
cmc
or
jns
out
lods
ins
in
sbb
out
fnstsw
call
xchg
push
xchg
push
cmp
repz
rcl
xor
repz
repz
jae
repz
repz
repz
mov
cmp
retf
retf
sub
repz
rep
stos
imul
repz
jmp
sbb
repz
fcmovnu
cmp
repz
repz
iret
repz
sti
pop
pop
xchg
cmp
mov
iret
repz
cmps
addr16
repz
out
pop
xchg
xchg
push
cmp
repz
xlat
xlat
aaa
aaa
repz
repz
ja
test
(bad)
jg
repz
iret
iret
das
das
repz
repz
scas
outs
outs
out
iret
repz
out
pop
pop
lahf
lahf
pop
cmp
repz
(bad)
aas
aas
repz
repz
out
mov
push
and
out
sahf
adc
jo
dec
jns
out
sub
pop
cmp
jns
out
add
and
mov
push
xor
add
out
inc
ret
and
pushf
jecxz
adc
or
iret
repz
add
or
add
cmp
repz
sbb
push
push
repz
repz
add
or
iret
repz
add
adc
iret
repz
sbb
pop
dec
sahf
test
add
or
cs
dec
or
or
and
mov
repnz
adc
adc
pop
jb
sbb
and
sbb
push
and
mov
dec
outs
ret
adc
in
dec
dec
adc
push
pop
sbb
and
mov
add
test
or
sahf
out
sahf
or
adc
sbb
sahf
out
and
xor
inc
out
sahf
out
pusha
jo
mov
shl
out
(bad)
fild
fisttp
sbb
sub
lahf
sar
jmp
data16
fdiv
xor
xor
and
addr16
xor
sub
and
clc
aad
movs
ins
shl
jmp
adc
or
cmp
xlat
pop
mov
mov
mov
inc
daa
jmp
sbb
mov
daa
daa
daa
pop
adc
adc
xlat
es
adc
ret
add
inc
or
pop
call
faddp
ds
fistp
add
push
add
add
adc
sbb
and
pop
jns
mov
out
(bad)
push
add
out
sahf
out
sbb
sbb
fidiv
sbb
push
in
iret
repz
mov
cmp
in
scas
scas
mov
lock
jne
and
shr
sbb
pushf
hlt
loopne
or
cmp
sbb
jmp
in
sub
sbb
push
loop
mov
aas
iret
add
jbe
or
das
pop
or
fmulp
add
cmp
mov
pop
add
adc
fstp
push
sub
or
fiadd
pop
push
jo
mov
adc
jns
pop
or
pusha
and
out
ds
loopne
push
pop
sbb
cmp
ret
nop
fiadd
cmp
cmp
add
pop
adc
repz
sub
iret
repz
lock
out
sahf
test
xor
sahf
out
sahf
or
test
jne
jns
call
loopne
ficom
push
jl
fmul
repz
sahf
pop
(bad)
ins
sub
or
cmp
repz
clc
add
repz
repz
iret
repz
or
movs
add
inc
in
pop
sbb
cmp
repz
inc
jp
aam
out
ficom
jle
sub
jns
hlt
add
push
ss
xchg
(bad)
xor
iret
repz
int3
pcmpgtd
lods
push
cmp
repz
inc
in
or
cmp
repz
pushf
arpl
mov
sbb
outs
cs
sahf
out
mov
call
jns
sub
xor
jns
out
popa
and
xchg
out
loop
sbb
jns
shr
jns
out
mov
mov
mov
mov
(bad)
jns
sahf
addr16
retf
in
sahf
out
add
dec
sahf
out
sbb
sahf
out
fisubr
mov
out
dec
cli
push
adc
out
ret
jae
(bad)
arpl
out
and
sahf
out
out
sbb
jns
(bad)
imul
dec
sahf
out
or
jns
jns
ja
into
out
sahf
out
daa
scas
pop
xchg
jns
sahf
inc
out
pop
pop
sahf
repz
sahf
out
aas
fisubr
das
stos
sahf
xlat
fnstsw
dec
(bad)
jmp
in
shl
xchg
sar
icebp
leave
or
nop
or
cs
mov
cs
in
in
cs
mov
or
nop
or
cs
or
cs
mov
in
shl
repz
nop
or
mov
mov
and
cmps
in
cs
xchg
xlat
mov
inc
cs
nop
or
mov
fistp
(bad)
jle
sahf
pop
push
out
int
pop
inc
add
adc
or
sbb
push
add
repz
sbb
adc
add
mov
push
jle
sbb
movs
pop
push
popa
pusha
add
call
or
pop
and
ror
dec
sbb
data16
dec
out
push
mov
mov
push
fucomip
and
mov
xor
aad
xor
inc
ins
push
push
inc
mov
shl
xor
das
inc
adc
inc
stos
fimul
jg
rcl
jp
imul
add
popa
push
out
mov
(bad)
(bad)
(bad)
jmp
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
jmp
jle
sub
mov
sbb
dec
jno
repz
(bad)
(bad)
inc
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
jmp
mov
add
ins
push
arpl
psubd
or
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
cmc
(bad)
(bad)
call
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
(bad)
(bad)
(bad)
ffreep
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
(bad)
jmp
or
or
and
or
adc
stos
sbb
data16
inc
fdivr
(bad)
(bad)
push
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
(bad)
(bad)
mov
hlt
mov
push
loope
or
ins
or
pop
pop
fild
arpl
hlt
push
imul
fdiv
test
push
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
cld
fistp
ficom
gs
aam
pop
popa
mov
into
pop
cmp
jg
(bad)
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
(bad)
(bad)
inc
lods
sar
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
(bad)
call
adc
mov
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
(bad)
(bad)
(bad)
jmp
cwde
shl
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
dec
mov
call
jmp
fild
push
fdiv
or
test
fs
rol
cld
(bad)
ds
or
or
push
in
inc
daa
scas
inc
(bad)
mov
pop
jge
xchg
(bad)
shl
push
inc
push
imul
icebp
(bad)
cmp
xor
sbb
push
imul
aam
loopne
(bad)
(bad)
fld
pop
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
mov
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
(bad)
jmp
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
mov
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
cmp
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
cli
(bad)
(bad)
inc
fs
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
jmp
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
jmp
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
(bad)
push
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
(bad)
jmp
cli
clc
sar
imul
push
js
or
push
add
mov
cmp
(bad)
jmp
push
pusha
ror
dec
(bad)
ds
push
scas
fcomp
fldenv
fild
(bad)
(bad)
(bad)
(bad)
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
(bad)
(bad)
(bad)
jmp
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
outs
sub
mov
or
sbb
add
sub
xchg
xor
sbb
push
sub
hlt
ja
(bad)
(bad)
(bad)
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
(bad)
(bad)
(bad)
push
iret
sbb
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
adc
push
xlat
mov
sbb
test
sub
ja
call
call
out
lock
fistp
inc
aam
push
pop
int
and
(bad)
(bad)
inc
and
cmps
popa
ja
mov
out
repz
gs
fisubr
outs
(bad)
jmp
inc
inc
sub
push
std
jo
scas
imul
dec
(bad)
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
mov
test
mov
cld
jmp
xor
pop
nop
sti
mov
(bad)
(bad)
(bad)
jg
fisubr
cmp
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
(bad)
call
jmp
(bad)
sbb
adc
push
lea
fnstcw
mov
(bad)
jmp
and
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
jg
pop
retf
mov
mov
lea
push
cwde
xlat
ficom
test
add
sar
loope
xchg
retf
les
jb
out
imul
push
inc
lahf
test
fcomip
(bad)
call
push
push
sbb
adc
and
inc
and
inc
out
and
mov
ror
scas
lods
loop
mov
and
cmps
xor
mov
lods
out
sar
(bad)
jg
aas
mov
adc
stos
and
leave
jmp
sti
push
(bad)
(bad)
(bad)
(bad)
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
(bad)
(bad)
(bad)
push
out
mov
xchg
rcl
cmp
mov
js
mov
test
(bad)
jg
movs
cwde
fsubr
mov
mov
scas
adc
out
pop
(bad)
(bad)
(bad)
dec
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
(bad)
(bad)
(bad)
inc
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
call
ss
sub
add
adc
cwde
mov
push
bound
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
ret
fcomip
test
sbb
inc
xor
push
retf
jo
outs
sbb
jg
call
sub
loope
fisub
lds
push
call
dec
in
mov
movs
(bad)
(bad)
(bad)
inc
test
xor
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
(bad)
(bad)
call
cdq
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
icebp
das
cli
call
imul
inc
jp
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
(bad)
fisttp
dec
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
les
adc
xor
cwde
dec
add
sar
push
or
cmp
popf
cmps
push
(bad)
(bad)
(bad)
push
sbb
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
(bad)
jnp
sbb
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
stos
inc
cld
jmp
push
jne
adc
test
cwde
sub
(bad)
fcomip
aas
adc
jns
movs
dec
mov
movs
daa
sub
repnz
(bad)
(bad)
inc
out
mov
shl
es
xchg
aas
mov
inc
imul
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
popf
movs
(bad)
push
mov
or
xor
aas
mov
and
xchg
push
fcomip
inc
add
test
pop
mov
mov
ret
mov
xor
out
and
push
dec
add
(bad)
(bad)
(bad)
xchg
data16
test
or
stc
sbb
sub
(bad)
(bad)
jg
mov
inc
leave
in
push
ja
pop
sub
das
sbb
(bad)
call
ret
sbb
mov
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
(bad)
(bad)
(bad)
call
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
ds
cmp
cmp
push
add
outs
jge
aaa
ss
fidiv
test
xchg
mov
imul
fld
adc
nop
in
and
(bad)
mov
fsub
leave
(bad)
(bad)
(bad)
call
es
dec
bound
jnp
mov
and
mov
sub
fidivr
sub
(bad)
(bad)
dec
ds
sbb
sub
call
das
ror
jno
pop
(bad)
(bad)
(bad)
out
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
(bad)
(bad)
call
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
jmp
sub
cmp
nop
es
xchg
pop
in
ja
add
mov
push
or
bound
stos
sub
shr
aam
cmps
gs
std
(bad)
jmp
mov
and
imul
dec
pop
mov
outs
jns
(bad)
inc
push
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
(bad)
(bad)
(bad)
inc
dec
inc
inc
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
(bad)
(bad)
call
mov
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
(bad)
dec
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
(bad)
(bad)
push
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
(bad)
(bad)
(bad)
jmp
out
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
das
rcl
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
stc
jne
pop
clc
dec
jmp
es
test
adc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
(bad)
(bad)
(bad)
cld
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fdivr
(bad)
(bad)
(bad)
out
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
jg
sub
fcmovb
dec
inc
sbb
mov
ret
mov
call
rcl
dec
retf
lahf
lds
adc
jmp
pop
inc
int3
inc
ins
xchg
sbb
ror
mov
xchg
(bad)
(bad)
(bad)
push
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
mov
dec
lods
jle
xchg
adc
pushf
mov
outs
mov
adc
xor
xor
dec
inc
pop
dec
mov
or
popf
or
test
(bad)
mov
(bad)
(bad)
(bad)
mov
mov
adc
fadd
arpl
pop
xchg
shl
test
xchg
mov
data16
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
(bad)
jmp
jmp
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
(bad)
(bad)
jmp
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
(bad)
(bad)
call
adc
mov
mov
fidivr
pop
pop
mov
lock
mov
mov
out
scas
mov
push
xchg
bound
dec
stos
fdivp
pop
imul
lds
loopne
outs
(bad)
(bad)
(bad)
inc
xchg
xlat
mov
fsubr
xor
loopne
adc
lahf
push
sbb
xor
cli
(bad)
(bad)
(bad)
push
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
(bad)
(bad)
(bad)
call
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
(bad)
(bad)
(bad)
call
add
das
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
(bad)
(bad)
(bad)
fstp
sub
xchg
in
jecxz
pop
push
or
mov
sub
les
loop
push
loop
outs
dec
jg
or
(bad)
jge
aad
sar
(bad)
mov
xor
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
dec
test
adc
pop
aas
test
mov
sbb
mov
(bad)
jmp
mov
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
ja
(bad)
(bad)
mov
adc
shl
cmp
das
retf
jnp
dec
ja
prefetchw
or
inc
push
add
dec
mov
outs
inc
nop
call
cld
(bad)
(bad)
call
ds
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
cmp
sub
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
pop
xchg
(bad)
(bad)
(bad)
jmp
push
pusha
inc
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
(bad)
(bad)
fcomip
in
mov
dec
leave
xor
inc
arpl
adc
push
shl
jns
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
adc
fcomip
add
and
push
cdq
scas
xlat
pop
lock
mov
xor
mov
in
pop
shl
push
mov
inc
aad
in
(bad)
(bad)
(bad)
(bad)
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
idiv
inc
outs
xor
or
xchg
movs
loope
mov
sub
dec
dec
(bad)
(bad)
(bad)
push
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
inc
sbb
xchg
idiv
sub
sbb
repnz
and
sbb
(bad)
(bad)
(bad)
jmp
xlat
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
jmp
dec
stc
(bad)
and
push
mov
rol
outs
mov
push
or
adc
(bad)
(bad)
(bad)
(bad)
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fdivr
(bad)
(bad)
call
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
(bad)
(bad)
jmp
icebp
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
stc
mov
mov
lock
imul
ss
test
(bad)
outs
(bad)
(bad)
jmp
cdq
mov
call
mov
loope
into
cs
out
add
(bad)
(bad)
(bad)
inc
loopne
adc
pop
pop
std
pop
jmp
icebp
and
sub
aam
into
mov
iret
(bad)
(bad)
(bad)
jmp
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
test
xlat
imul
stos
pop
mov
jle
cmp
pushf
in
adc
(bad)
(bad)
push
add
sbb
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
(bad)
(bad)
(bad)
jnp
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
(bad)
call
xchg
popa
mov
fdivrp
ja
xor
cdq
or
pop
ins
les
(bad)
(bad)
(bad)
push
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
sub
(bad)
(bad)
(bad)
jle
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
inc
ins
fucom
jmp
aam
push
sub
push
imul
mov
(bad)
(bad)
(bad)
(bad)
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
(bad)
(bad)
push
add
ror
aam
ror
mov
xor
mov
ins
fstp
stc
pop
cld
(bad)
inc
fsubr
fistp
(bad)
or
pop
fnstenv
lods
push
mov
enter
(bad)
call
mov
mov
mov
mov
and
mov
movs
movaps
mov
inc
add
or
mov
or
and
outs
jl
pop
push
(bad)
(bad)
(bad)
call
cmp
add
jno
cwde
shl
mov
jno
test
lahf
mov
in
mov
leave
les
and
(bad)
(bad)
call
push
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
push
push
test
fdiv
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
pop
(bad)
(bad)
inc
cmc
pinsrw
fld
adc
mov
jl
fstp
cli
jmp
repz
aam
gs
mov
test
into
mov
(bad)
(bad)
call
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
(bad)
(bad)
(bad)
fisub
rol
jae
add
pop
fisttp
jno
daa
add
mov
pop
icebp
dec
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
(bad)
(bad)
(bad)
call
(bad)
xlat
test
pop
mov
pop
cs
xor
mov
mov
(bad)
fcomip
mov
mov
sub
inc
cmp
(bad)
adc
jecxz
(bad)
call
or
xchg
cmp
pop
test
push
iret
or
add
(bad)
inc
sahf
mov
setae
mov
push
mul
pop
and
sbb
outs
(bad)
(bad)
(bad)
jmp
out
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
loopne
sar
mov
aad
(bad)
mov
push
fadd
les
repnz
sar
pop
call
mov
fisttp
ss
fmul
sbb
dec
(bad)
mov
fbld
ret
test
fist
outs
mov
inc
imul
fisub
(bad)
(bad)
jmp
shl
int3
or
xchg
mov
add
mov
(bad)
(bad)
(bad)
mov
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
jmp
in
arpl
es
mov
or
ss
jb
addr16
(bad)
mov
xchg
mov
jp
jnp
sub
xchg
ror
loope
aad
repnz
mov
fcmovnu
and
aam
inc
push
fiadd
outs
cmp
ja
sbb
out
punpckhdq
push
push
add
cmp
dec
pop
(bad)
gs
(bad)
clc
bound
(bad)
(bad)
(bad)
call
push
ins
iret
inc
mov
or
adc
ret
es
shl
test
inc
dec
outs
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
(bad)
(bad)
(bad)
dec
jg
mov
jmp
retf
mov
xchg
xor
mov
add
push
fdivrp
jmp
fldenv
data16
les
mov
sub
xchg
mov
mov
jmp
fistp
sub
sbb
xor
jmp
sub
add
ja
inc
push
pop
cmps
xchg
xchg
(bad)
enter
(bad)
dec
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
dec
ret
(bad)
call
push
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
(bad)
(bad)
call
sbb
ss
call
ins
sbb
inc
aas
(bad)
pop
push
sahf
xchg
test
(bad)
(bad)
jmp
mov
inc
and
call
shl
ret
fiadd
gs
(bad)
(bad)
mov
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
call
(bad)
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
sbb
lock
(bad)
push
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
(bad)
(bad)
dec
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
inc
lea
mov
cmp
lds
or
xchg
into
pop
int3
add
xchg
xor
cli
bound
pop
push
mov
mov
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
(bad)
jmp
cli
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
mov
fidivr
std
imul
and
add
scas
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
xchg
(bad)
(bad)
dec
mov
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
(bad)
push
std
adc
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
(bad)
(bad)
call
rcl
cmp
call
js
cmps
cmp
sbb
(bad)
(bad)
(bad)
dec
mov
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
(bad)
(bad)
(bad)
inc
ins
jo
fdiv
adc
out
movs
add
test
mov
push
mov
inc
call
fst
ss
daa
mov
fnstsw
gs
mov
nop
xchg
mov
rcr
hlt
(bad)
pop
std
push
(bad)
out
hlt
push
out
rcl
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
lods
(bad)
(bad)
(bad)
push
ret
test
es
scas
mov
(bad)
repz
cmp
call
(bad)
(bad)
jmp
pop
std
mov
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
dec
(bad)
(bad)
push
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
(bad)
fbstp
scas
xchg
adc
lea
or
mov
pop
inc
sbb
(bad)
(bad)
fstp
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
call
cwde
and
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
(bad)
mov
cli
jle
jnp
sub
sub
xchg
mov
xchg
push
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
(bad)
(bad)
jg
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
mov
add
out
and
loope
or
mov
jle
shl
jmp
(bad)
jmp
adc
cmp
ja
fsub
push
jle
hlt
out
push
or
test
jbe
or
lock
int3
xor
ret
sar
push
add
pop
lods
test
push
retf
ret
lea
dec
push
test
loopne
(bad)
call
push
mov
or
push
out
loope
sbb
fs
xchg
push
or
call
call
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
(bad)
jmp
mov
adc
cwde
call
mov
cmps
(bad)
(bad)
(bad)
mov
pop
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
(bad)
(bad)
dec
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
fcmovb
ss
test
test
xchg
aad
xor
imul
adc
frstor
in
(bad)
jmp
mov
aam
es
dec
dec
and
cdq
and
and
(bad)
(bad)
(bad)
call
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
lods
jo
(bad)
shl
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
(bad)
(bad)
(bad)
inc
mov
js
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
popa
xlat
ja
std
ins
mov
xchg
cli
fisub
nop
jmp
fiadd
pop
push
repz
arpl
popa
sub
pushaw
jmp
xlat
aam
fs
mov
dec
xlat
retf
and
mov
scas
outs
pop
dec
dec
fs
arpl
dec
sbb
(bad)
(bad)
dec
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
ud0
(bad)
call
inc
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
stos
mov
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
(bad)
push
cld
cmp
pop
out
fldcw
jp
add
out
in
paddsb
(bad)
(bad)
in
pusha
hlt
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
(bad)
(bad)
(bad)
(bad)
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
push
inc
push
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
(bad)
(bad)
(bad)
(bad)
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
aad
mov
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
(bad)
(bad)
inc
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
call
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
(bad)
(bad)
jg
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
icebp
(bad)
jg
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
jmp
push
clc
dec
call
dec
pop
pop
mov
call
iret
mov
sbb
dec
or
and
sbb
sbb
out
(bad)
rol
cmps
arpl
aad
(bad)
(bad)
push
test
and
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
and
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
xchg
popf
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
jmp
mov
adc
test
xchg
pushf
xor
loopne
mov
cwde
(bad)
(bad)
mov
mov
or
mov
mov
out
(bad)
bound
xor
(bad)
pop
fcomp
jl
jge
dec
mov
loopne
xlat
(bad)
(bad)
(bad)
mov
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
(bad)
(bad)
(bad)
clc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
(bad)
(bad)
jmp
sahf
sbb
call
inc
mov
and
xor
pop
or
(bad)
(bad)
(bad)
cmp
mov
add
das
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
(bad)
(bad)
in
(bad)
dec
pop
loop
aas
jmp
jecxz
in
fmul
lock
mov
ret
(bad)
inc
pop
and
sub
sahf
push
dec
jg
outs
test
or
(bad)
(bad)
(bad)
jg
sbb
and
lds
sub
mov
inc
and
(bad)
xchg
test
(bad)
(bad)
dec
neg
test
pop
xor
not
adc
iret
push
retf
mov
cmps
(bad)
(bad)
inc
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
jnp
das
push
ret
ja
imul
setl
(bad)
sub
mov
cwde
(bad)
(bad)
(bad)
push
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
mov
call
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
(bad)
(bad)
(bad)
call
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
(bad)
(bad)
(bad)
push
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
(bad)
(bad)
dec
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
(bad)
jg
ja
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
sbb
in
pop
inc
pop
mov
in
sbb
bound
and
inc
sbb
mov
out
mov
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
loopne
(bad)
push
outs
out
xchg
or
inc
loope
add
sub
scas
cmc
(bad)
(bad)
call
test
and
mov
mov
sbb
ror
sar
add
push
cld
inc
push
movs
not
cmp
and
dec
imul
cmc
xlat
es
(bad)
jle
out
ror
ret
push
jp
jmp
aam
fnop
add
arpl
and
stc
popa
call
add
mov
mov
ss
dec
call
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
(bad)
(bad)
(bad)
(bad)
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
dec
retf
clc
icebp
mov
inc
fdivr
inc
call
inc
(bad)
jmp
push
es
jmp
fdiv
inc
mov
bound
(bad)
(bad)
(bad)
cmp
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
push
ja
(bad)
(bad)
jmp
mov
add
out
mov
loopne
jbe
pop
not
dec
jmp
ds
(bad)
(bad)
(bad)
jmp
and
ds
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
(bad)
(bad)
(bad)
call
(bad)
outs
loope
mov
repz
in
test
adc
ja
mov
ret
add
cmp
mov
inc
cld
or
pushw
cmps
fidiv
sub
(bad)
(bad)
jmp
sub
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
(bad)
fcomi
ret
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
mov
mov
pop
adc
into
dec
es
or
add
das
bound
mov
pop
pop
fwait
mov
les
pop
sub
push
adc
test
daa
xchg
or
data16
aaa
leave
add
push
pop
aas
jg
repz
inc
(bad)
(bad)
call
retf
(bad)
(bad)
(bad)
out
shr
ss
outs
iret
jnp
adc
push
pop
das
jo
dec
stos
fmul
xor
rcl
popf
pushf
pushf
pusha
and
jb
jb
inc
loopne
aas
cmp
in
pop
sbb
pushf
pushf
pushf
js
rcl
leave
leave
leave
adc
mov
leave
leave
leave
or
fcmovne
add
unpcklps
push
jb
sub
jb
jb
or
jb
jb
test
in
jbe
aas
pop
sbb
dec
dec
dec
sahf
push
push
jl
fsub
in
sub
pop
jmp
in
in
or
dec
in
in
clc
add
in
in
mov
in
in
or
in
in
movs
add
in
pop
pop
sbb
in
in
inc
jp
in
in
aam
push
in
in
mov
mov
in
in
add
dec
sahf
rol
jbe
dec
dec
dec
dec
int3
pcmpgtd
dec
dec
dec
dec
lods
push
xchg
dec
dec
dec
in
or
dec
dec
dec
dec
pushf
arpl
pushf
fmul
fcomp
aas
outs
cs
mov
aas
mov
lds
cld
call
adc
leave
inc
jne
push
pushf
pushf
pop
enter
mov
add
leave
test
xchg
test
leave
leave
leave
leave
imul
leave
leave
mov
push
adc
retf
das
inc
add
and
daa
xor
jb
and
pop
jb
inc
jmp
call
fisubr
mov
or
jb
and
ret
and
daa
pop
jae
(bad)
jb
jb
arpl
cmps
add
jb
jb
inc
out
jb
daa
daa
sbb
jb
(bad)
imul
daa
daa
daa
mov
mov
jb
daa
not
enter
ja
into
pushf
pushf
pushf
pop
addr16
scas
pop
test
pop
enter
pop
sahf
jg
test
dec
outs
mov
das
mov
dec
xor
dec
(bad)
inc
and
leave
inc
mov
dec
xchg
rcl
and
leave
xor
and
leave
inc
cdq
fst
xchg
dec
mov
xor
movs
in
xchg
dec
and
aad
adc
inc
mov
xchg
dec
and
int
adc
inc
xor
popf
fnsave
xchg
dec
and
std
leave
inc
xor
mov
jecxz
adc
inc
xor
mov
dec
and
and
xor
and
fstp
sti
(bad)
dec
and
leave
cmps
out
leave
inc
xor
and
xor
and
leave
lahf
fistp
(bad)
jmp
repnz
in
push
fistp
adc
jns
cmps
adc
pop
add
stos
cmp
push
inc
pop
inc
jg
push
retf
xchg
pop
add
dec
in
call
leave
lods
repnz
shl
xor
enter
sbb
and
pusha
add
enter
xor
xchg
mov
or
rcl
adc
add
enter
push
add
enter
push
add
xor
push
aam
push
out
cmps
out
xlat
cmovg
iret
repz
pop
sbb
and
cmp
repz
cmp
arpl
cmp
repz
mov
dec
xchg
popa
iret
lds
push
outs
pop
add
and
add
pop
cmps
pop
das
push
pop
scas
idiv
and
shr
mov
(bad)
fistp
inc
pop
mov
leave
popa
pop
mov
dec
xchg
dec
and
adc
dec
and
and
or
scas
xor
xor
movs
inc
mov
add
dec
retf
int
std
mov
dec
fsub
push
mov
fidivr
call
push
mov
mov
xlat
(bad)
sub
daa
mov
mov
xor
loope
fisttp
jecxz
es
nop
push
inc
push
mov
fdiv
fdivrp
(bad)
aas
push
(bad)
idiv
div
mov
fcmovnu
mov
daa
push
dec
or
dec
adc
aaa
shl
lods
add
dec
xor
xchg
inc
add
adc
pop
add
jle
jns
pop
or
mov
add
inc
rcr
ins
sahf
out
mov
push
mov
loopne
pop
pop
and
movlps
dec
and
and
clc
(bad)
es
cli
xchg
add
ja
adc
add
sbb
dec
jae
imul
jae
fcom
mov
loop
mov
mov
inc
popa
add
mov
inc
or
xchg
or
ins
xchg
ins
das
sbb
js
(bad)
and
(bad)
aaa
pop
adc
sub
das
add
pop
cmp
sub
xor
inc
out
fadd
cdq
sbb
aaa
test
push
inc
cmp
xor
adc
fcom
nop
ja
push
jl
xor
imul
idiv
mov
jmp
and
cli
pop
nop
icebp
jo
mov
jnp
add
jnp
or
add
cs
ret
iret
mov
sub
mov
js
lahf
test
xchg
lock
sub
mov
and
xor
mov
daa
push
push
outs
add
gs
push
adc
mov
(bad)
xlat
fidivr
dec
sbb
push
push
jne
xchg
inc
add
adc
jne
sub
in
cdq
jns
or
mov
pop
arpl
sub
popa
in
fld
inc
ret
jbe
sub
mov
push
ret
out
aaa
cdq
cmp
popa
movs
xchg
iret
xlat
or
cmc
(bad)
jp
xchg
cmp
pusha
js
mov
es
aas
ss
mov
daa
or
into
cmps
and
lock
inc
ja
data16
adc
or
test
inc
bound
imul
and
jmp
sbb
aas
cmps
pop
add
inc
test
fs
ret
lahf
cmp
add
iret
add
add
and
cmps
outs
sub
shr
bound
ret
cmps
(bad)
mov
ret
daa
daa
adc
xchg
pop
shr
lea
pop
inc
cmp
aaa
sub
mov
outs
sub
ins
je
aad
lea
retf
mov
test
push
scas
shl
daa
fwait
sub
add
das
inc
xchg
pop
sahf
jo
das
div
mov
cld
daa
add
mov
adc
add
bsf
out
addr16
xor
(bad)
repnz
aaa
repnz
xor
js
in
xchg
inc
lods
nop
mov
out
daa
mov
jae
dec
nop
daa
loopne
ins
fsub
pop
call
inc
add
fsub
cmp
adc
cmp
popf
imul
adc
cwde
mov
mov
pop
add
repnz
add
jo
fmul
lock
cmp
fsub
fild
movs
jb
inc
enter
or
or
cwde
adc
and
cmp
movs
js
or
cdq
mov
scas
push
ins
inc
adc
mov
push
xor
push
and
test
loopne
ss
jb
mov
jnp
adc
push
and
(bad)
fild
pop
test
dec
dec
add
add
das
xchg
fisubr
push
nop
inc
sbb
push
push
mov
pop
add
jecxz
fsubr
cwde
xchg
cdq
in
push
hlt
aas
(bad)
in
and
fdivr
call
push
inc
xchg
call
xchg
push
jo
in
jecxz
or
mov
out
int3
es
jbe
inc
daa
fcomp
daa
add
mov
inc
fwait
sbb
sub
jecxz
cmp
jb
fwait
or
pop
jb
iret
test
lock
enter
lods
mov
fwait
mov
add
xor
xchg
lods
fdivr
fcomp
cmp
pushf
or
adc
pop
inc
es
cld
inc
daa
dec
pop
repnz
pushf
push
xchg
pop
cld
add
iret
fcmovnu
outs
xchg
in
mov
cmp
jae
test
sub
cs
push
fdiv
ret
pop
jb
pushf
call
out
mov
add
test
sub
(bad)
mov
lods
lods
addr16
stc
jl
sahf
push
inc
lock
test
sar
mov
test
xchg
ror
mul
iret
loopne
inc
xchg
adc
adc
cwde
sbb
sahf
mov
xchg
dec
push
sahf
ins
sahf
xchg
dec
jnp
sbb
xlat
fs
jnp
jbe
call
(bad)
(bad)
loopne
add
repnz
dec
mov
pushf
add
(bad)
in
inc
hlt
push
lahf
or
in
fwait
sub
mov
in
jecxz
adc
sbb
cmp
sahf
dec
dec
mov
ja
cld
sahf
mov
stos
out
cwde
push
test
mov
rcr
adc
call
out
les
loope
(bad)
cmp
jg
mov
jmp
ins
xchg
pusha
mov
mov
int3
pusha
push
mov
fucomi
mov
mov
pop
js
shr
mov
loopne
call
das
movs
or
or
add
add
inc
add
enter
add
ja
cs
cwde
mov
aas
enter
idiv
les
mov
pop
fsubr
mov
loopne
(bad)
fst
shl
jg
mov
or
dec
sub
push
out
daa
mov
push
push
in
fs
pushf
pop
shl
sbb
push
cmps
or
ja
enter
nop
rol
xchg
and
pushf
sbb
test
mov
push
or
out
ja
mov
fs
add
pop
pop
adc
pop
mov
aas
(bad)
push
mov
cdq
pushf
jo
movs
inc
adc
mov
fisub
movs
sbb
pop
sub
out
dec
push
jo
and
push
movs
daa
adc
scas
jg
or
jae
pop
push
int3
fsub
aas
int
es
int3
(bad)
and
ins
lods
fwait
nop
adc
daa
sub
(bad)
in
nop
pop
movs
adc
pop
add
jnp
ins
je
(bad)
pop
repnz
enter
mov
or
add
jns
ins
in
nop
or
mov
cmps
add
(bad)
in
neg
(bad)
cmps
inc
dec
aas
(bad)
imul
pop
mov
dec
pop
push
pusha
out
push
pop
add
jo
push
mov
xor
fmul
mov
cmp
add
xor
push
mov
iret
repz
mov
mov
adc
push
rol
dec
mov
sar
adc
scas
push
ror
out
ds
mov
out
imul
add
mov
dec
clc
stc
leave
sub
push
jb
sti
cmp
(bad)
(bad)
adc
test
stc
cmp
repz
out
sahf
cmps
xor
mov
shl
clc
and
jle
pop
out
sahf
out
mov
sahf
out
adc
xchg
push
jo
mov
xor
out
call
out
cmp
pusha
mov
jmp
jns
inc
jns
leave
clc
sbb
out
sahf
ja
push
arpl
out
sbb
mov
shl
or
repz
shl
bound
call
cmp
add
test
bound
scas
add
movs
mov
xchg
add
lea
int3
sahf
cwde
add
mov
xchg
and
add
or
push
in
leave
enter
sti
inc
icebp
test
imul
jmp
test
sbb
sub
adc
fmul
stos
push
push
inc
xlat
inc
jb
sbb
nop
sbb
sub
jge
mov
movs
jb
add
leave
inc
cmp
stos
add
xchg
jb
xchg
mov
and
daa
mov
scas
mov
dec
cs
xchg
inc
popa
repnz
(bad)
stos
or
xchg
lods
push
pop
push
daa
sbb
and
mov
out
xchg
in
ss
call
lock
add
fld
mov
pusha
push
mov
push
ucomiss
jmp
lods
and
loopne
jb
inc
cld
lods
pop
push
lods
xor
out
inc
jb
movs
push
inc
dec
xchg
push
lock
sub
xchg
lods
sbb
dec
pop
jb
lods
scas
lods
dec
sbb
add
add
punpckhbw
add
mov
(bad)
push
loopne
scas
sub
inc
scas
push
pop
push
daa
je
inc
pop
sub
xchg
push
cmp
inc
add
add
dec
mov
mov
sub
jb
mov
les
jb
cmp
iret
fisubr
call
sub
push
sub
inc
scas
fs
cmp
(bad)
out
mov
scas
sub
test
mov
push
cwde
add
and
sub
add
pop
mov
ds
sub
rol
jb
jbe
repz
cmp
dec
fimul
cmp
jbe
xchg
mov
jb
movs
scas
or
add
shr
mov
cmps
cmp
dec
mov
push
or
sbb
push
or
leave
xor
cmovo
xchg
xchg
xchg
push
pop
pusha
push
mov
dec
mov
mov
add
or
in
jns
inc
lock
jl
push
add
add
add
dec
inc
sahf
pushf
es
ds
in
dec
inc
push
mov
pushf
leave
and
enter
pop
loopne
call
and
or
mov
mov
jbe
inc
das
mov
lahf
mov
push
imul
das
test
pushf
fadd
pop
pop
rcr
xchg
dec
inc
sbb
add
ins
lgs
mov
dec
fidiv
(bad)
inc
xor
popf
dec
cmps
pop
push
in
in
(bad)
mov
mov
int3
sahf
mov
mov
or
cdq
push
mov
enter
push
or
adc
push
add
repnz
add
or
jb
push
lahf
shl
fbstp
xchg
out
dec
adc
mov
push
or
cmp
enter
add
add
add
xor
ds
dec
or
enter
or
jb
mov
cmp
adc
pushf
test
pop
push
xchg
xchg
add
sub
dec
mov
ss
mov
cs
push
add
pop
push
popa
outs
(bad)
inc
mov
mov
fmul
pextrw
loope
inc
mov
adc
adc
mov
mov
unpckhps
sbb
sbb
jb
sbb
dec
int
mov
push
jmp
and
bound
pcmpeqw
and
int3
das
test
cld
sti
pop
daa
scas
adc
test
stos
ret
mov
aas
xor
adc
xchg
in
dec
ins
aaa
xor
mov
adc
jo
ja
and
pop
cmp
nop
cwde
in
push
test
mov
adc
iret
mov
inc
inc
sub
xchg
(bad)
fcomip
js
jbe
nop
push
je
xchg
adc
adc
and
pop
bswap
pop
in
fwait
mov
iret
pop
in
add
jmp
pop
mov
adc
popa
cmp
jg
scas
cmp
pop
rcr
cs
sub
lods
mov
aas
xchg
mov
push
leave
adc
add
mov
jp
inc
lock
iret
pop
push
mov
and
mov
fild
and
xor
mov
mov
fisttp
dec
push
inc
test
mov
push
pop
aaa
mov
pop
push
pop
pop
addr16
mov
daa
sbb
jmp
call
or
xchg
ss
outs
mov
add
movs
xchg
aas
shl
mov
test
mov
mov
adc
mov
or
pop
ins
dec
or
ffree
adc
sbb
sahf
arpl
aam
push
loopne
(bad)
jb
popf
loop
jg
inc
mov
pop
out
scas
jg
fimul
icebp
scas
aas
add
sbb
push
lahf
inc
jno
fnstcw
enter
ss
jge
push
push
lahf
sbb
js
enter
and
iret
jns
(bad)
push
enter
mov
test
pop
sub
scas
(bad)
in
inc
dec
aaa
cwde
add
jo
in
dec
outs
jb
and
push
push
cmp
aam
or
outs
pop
rcr
je
(bad)
ret
adc
scas
mov
jnp
aaa
pusha
add
nop
push
lods
mov
fsubr
enter
(bad)
or
add
mov
or
mov
mov
and
movs
inc
and
mov
jns
sysret
sar
addr16
add
loopne
enter
mov
dec
ret
fisttp
movs
rcr
test
jbe
add
mov
fs
or
push
or
das
imul
cmovg
test
adc
mov
jne
ins
mov
ret
cmp
adc
sti
sbb
and
fwait
dec
dec
jb
ret
ins
mov
jnp
or
cwde
mov
xchg
xchg
and
int3
in
popf
add
add
mov
sbb
in
mov
iret
xchg
pushf
xchg
lldt
(bad)
rol
daa
bound
dec
mov
sbb
or
sub
mov
scas
sbb
mov
push
jne
call
xlat
cmp
lods
outs
psubusb
(bad)
dec
repnz
push
(bad)
stos
and
fild
xchg
outs
cmp
and
pushf
add
nop
(bad)
js
jb
and
mov
fiadd
push
mov
xor
dec
mov
addr16
dec
cmp
cmp
cmp
mov
mov
enter
mov
mov
enter
inc
mov
mov
mov
cmp
addr16
dec
jns
adc
jnp
in
fisub
leave
nop
scas
and
pop
leave
or
mov
daa
pop
mov
fucom
inc
mov
xchg
dec
dec
rol
xor
sar
movs
pop
or
daa
pop
leave
dec
add
nop
fwait
adc
ja
ror
mov
ja
inc
pop
ds
push
iret
add
adc
inc
xor
fs
loopne
dec
inc
sahf
call
dec
inc
mov
add
mov
fdiv
addr16
pop
push
cvtdq2ps
iret
outs
in
in
js
add
xchg
cs
xchg
add
mov
mov
add
add
mov
shl
ins
and
or
je
adc
cmp
add
iret
ret
in
xchg
xchg
add
add
and
in
fs
pusha
das
push
outs
pop
add
mov
mov
shrd
mov
(bad)
into
and
and
jp
into
fs
leave
add
je
lock
mov
ret
pop
into
lods
jbe
pop
and
push
sub
call
mov
push
addr16
sbb
rcr
dec
cs
jbe
inc
xor
movs
repnz
mov
add
add
dec
xor
dec
shl
iret
cld
xchg
ins
cmp
push
sbb
mov
cs
shr
xchg
and
in
inc
(bad)
ins
pusha
leave
in
in
in
jae
jle
jns
xchg
add
pop
lods
push
sbb
or
in
stos
aas
lds
jmp
jmp
outs
in
repz
int
daa
push
loopne
push
lea
aas
rcr
sub
xor
fs
push
inc
add
sbb
add
out
add
push
pushf
cmps
movs
repz
push
mov
add
sbb
fs
sbb
push
popa
inc
add
cmps
dec
push
push
pop
cs
inc
push
aas
and
push
outs
outs
pop
fprem
add
pop
ins
ins
or
mov
pop
cmp
aaa
aam
push
ror
sar
jns
xchg
test
jns
out
dec
xor
or
repz
shl
in
les
cmp
mov
pop
pop
inc
(bad)
inc
adc
dec
gs
and
or
outs
data16
jne
pop
xor
push
sub
ins
xchg
lea
cs
(bad)
fdivr
jb
je
imul
mov
pop
push
push
sub
movs
or
push
les
inc
xor
outs
mov
mov
jno
mov
or
cld
push
dec
push
inc
pop
xor
cmp
ficomp
pop
data16
ja
lds
fnsave
inc
xchg
pop
xchg
and
inc
xor
mov
mov
pop
dec
mov
(bad)
xchg
cmp
(bad)
jg
sub
ins
std
aas
fild
inc
imul
mov
cmp
aas
das
neg
dec
sbb
pop
jl
mov
rcr
ror
out
test
pop
inc
pusha
and
sbb
mov
dec
ja
push
bound
xchg
out
ins
(bad)
call
push
fbstp
or
fcomip
push
ds
add
sub
and
xor
and
dec
or
addr16
add
pop
xor
dec
push
inc
push
cli
ja
int3
call
pop
nop
std
aad
and
inc
dec
push
push
or
inc
mov
call
mov
lea
add
mov
mov
neg
out
xor
push
mov
add
mov
pop
ds
into
sub
inc
sgdtd
je
dec
and
adc
add
test
add
dec
jbe
mov
xchg
test
shl
dec
jae
jb
(bad)
sbb
or
in
jb
or
or
or
mov
or
daa
daa
mov
add
adc
and
pop
inc
inc
push
addr16
fucomi
jbe
das
push
xorps
xor
mov
jo
jbe
ins
shl
and
jae
leave
in
cmp
test
xchg
outs
daa
daa
iret
sub
daa
mov
dec
mov
into
aas
xlat
sbb
ret
xchg
xchg
data16
les
push
pop
lea
imul
sbb
cmp
and
mov
ins
outs
iret
sti
(bad)
push
jo
cmp
jo
and
lock
daa
push
je
dec
dec
rol
jle
popa
fild
mov
inc
push
mov
lahf
in
je
add
adc
jb
inc
add
adc
movs
rcl
adc
jmp
adc
mov
sbb
jp
add
movs
add
xchg
(bad)
pushf
cmp
movs
sbb
add
mov
fldenv
cmp
(bad)
jg
pop
inc
mov
iret
mov
in
call
popf
inc
jle
adc
sti
sub
not
pop
fidivr
xor
fcomp
loopne
jb
pop
inc
xor
out
das
and
sahf
out
sahf
sbb
adc
or
cmp
rep
lock
in
loopne
int3
repz
repz
mov
mov
pop
lods
test
mov
pushf
xchg
mov
cmp
push
repz
inc
xor
sub
or
sub
aas
add
add
out
clc
out
sahf
out
lock
out
sahf
enter
test
sahf
out
pusha
dec
inc
cmp
out
sahf
out
and
adc
iret
repz
add
cld
hlt
in
fmul
sahf
ja
cmp
mov
out
movs
push
cwde
mov
out
je
push
cmp
and
sbb
lock
dec
add
rcr
push
aam
bound
xchg
in
lods
fsubp
enter
icebp
cwde
mov
lock
add
and
adc
push
add
add
push
add
cmp
push
les
lods
sahf
out
sahf
nop
and
cmp
mov
or
clc
in
lods
repz
repz
mov
int
cmp
push
inc
xor
or
into
cmp
in
fdiv
repnz
jmp
dec
cmp
sahf
ja
or
add
push
loopne
mov
push
movs
fucom
jl
(bad)
inc
fiadd
add
add
lock
jns
ja
cmp
pop
js
sar
mov
repz
xor
mov
dec
ins
add
push
pop
ja
jns
out
mov
repnz
test
cmp
das
dec
ins
mov
lahf
sahf
add
retf
cmps
imul
add
inc
add
out
jg
in
das
mov
add
enter
or
ret
(bad)
call
push
sub
ret
pop
and
sbb
(bad)
(bad)
dec
into
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
(bad)
(bad)
call
add
inc
stc
mov
adc
mov
dec
js
(bad)
jmp
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
inc
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
(bad)
(bad)
(bad)
push
mov
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
pop
cli
outs
dec
leave
fwait
xchg
and
pusha
les
add
int3
add
aas
jno
(bad)
(bad)
jg
or
mov
pop
fs
dec
lea
aas
ret
shr
mov
(bad)
(bad)
call
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
(bad)
(bad)
jmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
(bad)
(bad)
(bad)
inc
push
cmp
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
cmp
mov
sub
jle
push
jl
mov
(bad)
(bad)
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
(bad)
(bad)
(bad)
inc
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
pop
call
mov
fdivr
sbb
jmp
xchg
inc
inc
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
inc
push
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
loopne
(bad)
pop
ds
jge
call
mov
xchg
cmp
push
and
jg
call
dec
dec
gs
std
or
pop
ficomp
frstor
das
cmp
adc
pop
add
push
sub
xchg
(bad)
daa
pusha
push
imul
ss
addr16
cmp
repz
inc
push
push
(bad)
inc
inc
adc
movs
sub
and
adc
push
pushf
retf
or
call
cmp
loopne
push
xor
fnstcw
js
sbb
fcom
pop
and
rol
fnstcw
xor
jo
xor
js
xor
mov
ins
(bad)
adc
push
push
adc
aam
cmp
pause
dec
xor
call
mov
pop
dec
addr16
out
in
ret
sub
cmp
repz
je
sub
mov
clc
shl
push
jns
int
sub
sub
mov
iret
out
sub
fstp
cmp
rep
sahf
out
test
adc
enter
cmp
fs
es
fcomp
out
in
push
int3
mov
jns
int
cmp
cmp
out
adc
cwde
jo
jns
iret
dec
sbb
call
jns
nop
je
cmp
jnp
(bad)
inc
and
fcom
and
jns
iret
push
inc
xor
adc
enter
iret
test
and
cwde
iret
mov
sahf
dec
and
in
fadd
rcr
repz
cwde
mov
cmp
push
inc
add
lock
int3
fidivr
daa
phsubd
sbb
sbb
sub
push
mov
add
jl
mov
lods
xchg
js
xor
sahf
out
mov
push
sbb
test
test
iret
out
cmp
sbb
shl
jl
inc
cmp
jo
int
sbb
in
sbb
push
movs
out
sbb
fcomi
pusha
inc
das
sub
or
loopne
out
popf
out
nop
addr16
dec
sbb
repz
loopne
pushf
sbb
repz
and
inc
pop
in
push
fdiv
in
jns
test
das
xchg
outs
pop
xchg
div
cs
pop
inc
cvttps2pi
jnp
test
into
push
push
push
xchg
fsubrp
in
push
cwde
mov
fidivr
fbstp
daa
dec
lahf
push
sub
ror
aas
adc
shl
sahf
out
mov
aas
push
imul
mov
and
or
dec
jnp
lahf
adc
int3
daa
adc
push
pushf
push
adc
jns
(bad)
push
ins
xor
adc
aam
xchg
imul
pusha
dec
and
loopne
sahf
and
lahf
adc
hlt
dec
sub
mov
push
and
xor
xor
mov
mov
lods
sub
mov
aas
cmps
arpl
xor
or
mov
inc
dec
dec
js
and
push
push
sbb
ja
bound
lds
imul
pop
test
outs
add
es
inc
icebp
jnp
shr
movs
xor
xor
fs
adc
fldenv
push
sbb
in
inc
pop
jae
ret
lea
inc
arpl
push
sbb
jbe
or
ret
mov
mov
or
and
imul
dec
sbb
xlat
cli
push
sub
out
pusha
and
dec
clc
push
xor
dec
jae
lock
dec
arpl
jns
push
fs
xchg
popa
dec
mov
push
arpl
push
inc
mov
add
xor
add
and
inc
pop
cmp
inc
add
inc
add
ss
fisttp
or
xor
add
jg
adc
div
in
add
inc
les
mov
mov
or
xor
mov
mov
add
out
dec
vmovaps
dec
xor
add
mov
add
inc
adc
dec
sub
mov
mov
stos
mov
sub
push
adc
or
popf
shl
les
jnp
lock
inc
dec
inc
push
ss
fld
clc
(bad)
hlt
mov
dec
dec
loope
ret
jbe
dec
push
push
inc
lahf
xor
and
mov
pop
cwde
(bad)
fcmovu
mov
jl
add
mov
mov
repz
adc
mov
enter
push
loope
(bad)
adc
dec
icebp
cwde
adc
pop
test
in
inc
into
mov
jae
inc
dec
inc
push
dec
push
dec
inc
dec
push
js
loopne
sub
xchg
mov
mov
shl
add
xchg
xor
into
fidiv
mov
dec
xchg
xor
and
jae
and
pop
adc
dec
inc
dec
sbb
cmp
daa
or
fisubr
push
sbb
pop
aaa
and
imul
mov
fdivr
dec
xlat
xor
cmp
(bad)
cli
cmp
std
pop
out
loope
pop
push
inc
inc
inc
and
dec
pop
xor
push
cmp
pop
jno
rol
jbe
or
pop
arpl
ror
cmp
add
pushf
adc
pop
xor
pop
adc
pop
ins
ror
add
xchg
aad
(bad)
not
jle
retf
dec
mov
pushf
fisub
popa
mov
sbb
mov
push
sbb
iret
rcl
lock
fwait
add
dec
push
pop
repz
enter
mov
mov
xor
mov
test
inc
push
inc
cmc
xor
repz
jbe
jmp
jmp
xor
imul
enter
add
pop
jge
push
inc
lahf
inc
sub
aaa
push
lea
vpavgw
jmp
icebp
push
jmp
cwde
pop
inc
push
cmp
jno
pop
push
jg
and
(bad)
mov
out
xor
mov
pop
imul
or
mov
push
pusha
je
or
dec
sar
sbb
mov
pop
es
dec
xchg
das
mov
stos
test
push
jle
dec
add
push
xor
jo
enter
mov
in
lds
push
loope
adc
push
mov
outs
(bad)
dec
inc
pop
inc
inc
inc
mov
ins
xor
ins
mov
movs
(bad)
fild
mov
push
jl
sub
inc
stos
inc
mov
cmp
popa
dec
arpl
sbb
push
push
fsub
mov
sbb
pop
and
mov
imul
loope
push
dec
push
mov
pop
push
dec
push
pusha
sbb
cmc
retf
scas
push
adc
sar
fsub
or
jns
into
mov
push
lods
mov
sub
movs
stos
inc
dec
inc
xor
xor
and
cmps
popf
add
ret
das
fcomp
pop
cmp
rcr
cs
call
or
ins
scas
clc
aas
leave
xor
fadd
clc
mov
rol
mov
mov
gs
push
jne
dec
xor
in
cld
pop
mov
mov
mov
leave
push
je
leave
lods
bound
popa
xor
and
call
loopne
mov
pop
inc
inc
dec
jns
and
mov
jmp
mov
int3
fcmovbe
mov
into
iret
mov
ins
push
push
pop
daa
stc
lods
jecxz
mov
jno
shl
test
mov
ins
stos
cmp
retfw
ins
dec
inc
outs
mov
sbb
xor
mov
aad
pop
pop
dec
pop
xor
jns
jno
js
push
mov
ins
pop
add
cmp
ss
clc
aaa
(bad)
jmp
repz
ret
cmp
scas
rcr
sub
xchg
jl
xor
bound
adc
(bad)
clc
pop
xor
mov
mov
mov
(bad)
mov
ds
mov
movs
jp
outs
sbb
outs
xor
sub
in
lock
data16
xor
movs
mov
xor
test
mov
in
mov
push
dec
dec
lods
push
push
adc
fcomp
cmp
mov
sar
ja
call
std
sub
nop
mov
xor
loopne
in
(bad)
push
push
dec
dec
push
xor
mov
(bad)
(bad)
mov
mov
dec
imul
sbb
ficom
or
xor
iret
inc
test
idiv
mov
mov
mov
gs
push
push
mov
sub
pop
test
fld
mov
push
test
push
test
lods
mov
cmp
dec
das
add
add
and
outs
stc
dec
enter
xor
shl
repnz
rol
fadd
and
cmp
add
xor
mov
mov
pop
jnp
jmp
or
xor
repnz
pusha
jae
jno
mov
not
ret
pop
xchg
pop
call
dec
mov
popa
in
or
daa
fld
cmp
mov
mov
adc
ret
ja
div
movs
je
shl
push
push
mov
popf
xor
mov
sbb
pop
popa
inc
dec
push
inc
push
outs
pusha
mov
xor
std
mov
add
ret
push
jns
xor
push
mov
push
lock
or
out
ficom
xor
push
lahf
popf
loopne
(bad)
mov
and
sar
not
mov
test
retf
add
fwait
std
dec
push
dec
or
inc
sub
add
fisub
mov
stc
je
pusha
adc
dec
xchg
(bad)
xor
sbb
push
leave
xchg
add
jl
xchg
lahf
push
inc
push
cmp
fwait
add
xor
fisubr
rcl
(bad)
push
sbb
pop
xor
std
push
stc
addr16
dec
mov
outs
mov
dec
mov
xor
push
dec
ja
(bad)
inc
mov
pop
jbe
pop
xlat
shl
mov
add
aas
cmp
(bad)
mov
jp
jbe
scas
mov
int
push
inc
xchg
imul
push
push
cmp
adc
nop
imul
xor
xchg
push
fld
xor
not
xor
mov
add
jb
scas
inc
adc
or
(bad)
sub
push
pop
cs
imul
sbb
mov
add
pop
push
push
cld
das
sbb
(bad)
mov
(bad)
ins
(bad)
hlt
pop
mov
retf
shr
mov
movs
or
xor
mov
into
adc
lock
or
dec
sbb
add
(bad)
push
cmps
push
adc
sub
add
adc
pop
adc
sub
dec
push
adc
xchg
or
nop
mov
jo
fiadd
xor
outs
mov
aad
lods
inc
push
movs
sbb
loop
adc
data16
push
mov
sahf
add
pop
dec
push
imul
inc
ins
popa
ds
jb
pop
add
xchg
cs
dec
push
jnp
or
fs
xor
xchg
push
int
push
dec
xor
and
fild
mov
pop
add
fmul
outs
gs
dec
jne
jns
or
add
rcl
mov
push
push
or
out
div
test
xor
dec
cmp
xchg
adc
inc
(bad)
in
mov
mov
dec
jae
fwait
pop
add
adc
push
ins
add
add
shl
jae
enter
sbb
add
ret
jb
mov
inc
inc
push
sub
lea
and
ret
xchg
push
push
loopne
movq
fistp
inc
xor
mov
jbe
outs
outs
mov
addr16
dec
mov
add
pop
or
pusha
push
adc
out
and
pop
xor
mov
and
xchg
and
inc
push
sbb
or
cmp
ret
push
jg
pop
push
jo
das
sub
push
cmp
push
jo
movs
enter
jg
mov
into
add
dec
inc
(bad)
adc
mov
xor
pop
rol
adc
sbb
xchg
add
or
mov
jne
push
data16
dec
jl
add
sub
push
sbb
imul
sub
repz
outs
jne
push
(bad)
pushfw
mov
js
or
outs
dec
fisubr
jns
and
sar
jns
imul
ins
sub
push
push
sub
sub
mov
int3
(bad)
xchg
lods
rcr
dec
ins
rcr
sub
adc
arpl
rcr
sbb
pop
sti
fstp
cmp
leave
and
popf
popa
push
mov
jp
cmp
stos
mov
ins
loope
xchg
adc
pop
inc
xchg
cmps
inc
and
mov
test
push
push
adc
jp
pop
dec
in
cmps
mov
xor
push
outs
mov
mov
ss
add
sbb
push
mov
aaa
test
fdiv
jno
or
(bad)
pop
jae
lds
rol
dec
mov
inc
pop
pop
inc
mov
dec
jmp
shr
sar
pop
lods
rcr
test
sbb
push
xchg
aad
jo
mov
ins
jmp
push
mov
push
xchg
jmp
hlt
inc
loope
mov
and
push
dec
lds
push
(bad)
mov
add
xor
adc
xor
arpl
aas
lea
add
push
popa
imul
lock
je
or
add
dec
outs
push
fwait
sub
and
fst
inc
enter
push
xor
fidivr
arpl
xor
adc
push
mov
retf
mov
cmps
or
popa
add
inc
mov
fnstenv
sbb
addr16
les
sbb
jbe
mov
or
pushf
jge
test
shl
add
adc
xor
and
jne
jns
aam
inc
lds
test
or
popa
xor
rcr
cmps
jg
das
cld
shl
dec
out
jo
sar
mov
inc
cmp
pop
iret
pop
add
dec
inc
rdmsr
inc
(bad)
or
jge
jae
retf
jo
je
inc
push
sbb
pop
or
mov
test
push
jnp
jb
and
adc
pusha
pop
xor
pop
pushf
pop
addr16
mov
je
imul
(bad)
mov
(bad)
and
dec
lods
mov
fsub
data16
(bad)
outs
mul
(bad)
mov
dec
gs
sti
clc
ret
mov
shl
loopne
dec
inc
shl
(bad)
or
xchg
adc
adc
je
dec
shl
jae
or
xor
ror
adc
cmp
xor
adc
(bad)
dec
sub
and
dec
sbb
push
pop
sbb
adc
adc
push
xor
or
push
cmp
addr16
sbb
call
or
(bad)
or
test
push
inc
adc
inc
or
lock
lock
dec
add
or
xor
add
adc
add
out
inc
adc
or
or
scas
push
or
mov
or
or
or
or
adc
or
jo
or
(bad)
(bad)
push
or
sbb
sbb
and
and
sbb
sbb
jb
dec
(bad)
(bad)
(bad)
push
call
add
or
add
cdq
push
or
push
inc
push
stos
push
and
mov
(bad)
fistp
sbb
sbb
and
(bad)
out
pop
lods
jno
push
daa
sub
sbb
and
pop
or
rcl
or
adc
add
fisttp
push
mov
add
clc
sub
adc
(bad)
(bad)
call
pop
dec
lods
pop
push
mov
adc
bound
and
mov
lock
add
in
push
push
adc
(bad)
inc
or
and
xor
push
or
push
mov
lods
adc
aaa
in
or
push
jae
jo
es
sub
mov
iret
sbb
dec
mov
xor
or
rol
mov
div
xor
or
xor
iret
push
and
adc
(bad)
adc
xor
jmp
xor
mov
data16
sub
sbb
lock
add
or
pop
mov
clc
dec
clc
mov
test
arpl
push
imul
push
add
push
or
and
sbb
push
mov
add
stos
mov
xor
addr16
add
test
jmp
pop
add
dec
add
(bad)
(bad)
(bad)
jmp
sbb
stos
dec
aaa
mov
cwde
and
sub
or
lods
std
(bad)
jmp
sub
xor
push
pop
cvtps2pi
loopne
mov
and
fwait
(bad)
inc
test
mov
xor
inc
or
mov
call
push
or
add
daa
add
sbb
sub
cld
(bad)
push
(bad)
lock
cmp
push
push
or
push
sbb
es
or
jmp
sbb
je
sbb
lock
add
add
scas
clc
(bad)
push
lock
xor
ins
sysenter
xor
arpl
lock
lock
add
or
(bad)
push
xchg
add
add
ja
cmp
jae
ret
add
(bad)
push
dec
add
es
and
sub
sbb
sub
and
jb
mov
(bad)
push
xor
adc
xor
or
jg
inc
pop
adc
sub
and
push
pop
or
arpl
or
pop
mov
pop
rcl
rcr
push
aaa
jl
(bad)
cmp
sub
and
cld
add
adc
sbb
lock
lods
loope
add
cli
mov
mov
mov
and
and
pop
idiv
push
(bad)
and
or
aaa
cli
push
rdpmc
sub
adc
das
dec
xor
jg
sbb
sub
inc
sub
adc
ins
push
sbb
or
arpl
sub
pop
and
or
or
test
push
stos
dec
dec
cmps
and
inc
or
sbb
mov
pop
dec
and
adc
lock
repz
xor
lea
adc
jge
mov
hlt
add
sbb
cmp
or
test
cmps
add
das
add
push
pop
push
je
push
stos
inc
sti
or
adc
add
fcom
or
mov
or
int
sub
or
jae
lahf
add
cmovae
mov
js
add
push
xor
cmp
add
cmovns
push
add
mov
popf
lock
pop
add
stos
scas
mov
lock
push
sub
add
mov
sbb
scas
or
je
adc
mov
loopne
add
jmp
add
pushf
adc
pop
mov
aaa
inc
pop
inc
adc
scas
xchg
lds
(bad)
adc
adc
mov
and
add
dec
mov
push
dec
push
dec
or
pusha
jne
and
or
cmp
jle
int
inc
sbb
sbb
push
adc
sub
jbe
adc
fisttp
mov
ins
pop
and
pop
add
std
add
cmp
xor
into
xor
and
push
dec
mov
or
std
push
mov
pop
and
xor
inc
lock
cwde
or
add
mov
xadd
mov
adc
sbb
and
and
cwde
adc
push
rol
add
xchg
or
rol
fcomp
cmp
push
adc
adc
adc
sbb
pop
cmp
(bad)
sti
push
adc
in
sbb
push
and
jo
add
push
adc
pop
mov
jge
(bad)
inc
inc
mov
es
adc
or
push
sbb
or
call
adc
or
aaa
loopne
adc
sbb
daa
and
in
push
adc
out
and
adc
nop
setno
jl
or
adc
dec
lock
mov
or
adc
sub
pop
mov
xchg
mov
add
test
inc
push
inc
sbb
int
sti
pop
addr16
sbb
(bad)
adc
ds
add
fdivr
inc
jg
dec
lahf
adc
push
popa
jbe
push
or
xchg
pop
adc
or
daa
inc
pop
push
add
mov
call
inc
pop
or
lock
add
adc
data16
add
mov
ficomp
(bad)
sbb
sbb
lock
push
xor
adc
stos
sets
ret
idiv
mov
push
adc
push
aaa
or
push
pop
sbb
push
aas
add
fmul
sbb
sahf
std
jge
int3
daa
sbb
cmp
cmp
ss
jl
or
dec
lea
pop
inc
ins
adc
in
movs
dec
and
adc
jp
sbb
add
ds
add
int3
inc
push
push
sbb
ror
or
mov
dec
jo
es
or
dec
sahf
lock
add
dec
or
or
aad
jne
outs
adc
or
add
arpl
je
or
xor
xor
sub
push
pop
test
data16
sub
sub
sbb
pop
popf
push
ins
fmul
adc
push
adc
xor
sbb
cmp
cmp
test
adc
push
push
adc
or
scas
jo
mov
pop
push
push
sbb
push
adc
clc
or
push
adc
and
or
fbstp
pop
and
pop
or
add
or
dec
cmp
mov
sub
add
push
cmps
fadd
add
daa
lock
dec
jbe
(bad)
push
cli
adc
or
fmul
or
or
dec
cdq
sar
ins
or
scas
pop
loopne
add
lock
add
push
push
push
mov
aaa
add
and
adc
and
xchg
push
and
jmp
cmp
adc
cmp
add
xor
push
push
shl
jmp
out
xor
rcr
or
dec
add
jnp
aad
hlt
loop
adc
out
xor
add
add
or
lock
and
add
mov
ins
jae
adc
and
cmp
aam
das
adc
sbb
fmulp
jne
adc
add
jo
sbb
or
or
cmp
jg
mov
sub
sbb
sbb
sbb
cmps
cli
add
pop
push
dec
pop
or
sub
lock
jg
add
adc
adc
loopne
or
sbb
pop
xor
push
add
or
adc
jp
adc
mov
mov
sbb
jp
or
or
add
lods
enter
push
add
and
add
sbb
and
sbb
or
and
xchg
sbb
add
or
mov
or
outs
adc
or
jmp
pop
cmp
es
setp
lock
lock
add
and
or
cmp
dec
and
jo
cmp
(bad)
mov
push
or
or
and
xor
outs
pop
jne
adc
sbb
pop
sbb
adc
sub
dec
dec
push
ret
cs
pop
ret
js
sub
ss
sbb
cmp
xor
mov
sbb
cs
push
fimul
sbb
push
and
outs
cli
pop
icebp
inc
pop
adc
and
adc
and
adc
or
sub
pop
sbb
mov
movs
call
cld
outs
rol
and
and
sub
outs
add
shl
push
inc
pop
popa
scas
(bad)
call
and
or
or
call
clc
pop
jl
push
inc
lock
add
(bad)
lock
call
fnsave
sub
mov
inc
retf
inc
psignd
adc
je
test
ror
movs
sub
sbb
mov
dec
or
and
sub
adc
cdq
outs
(bad)
jbe
icebp
dec
retf
outs
and
or
mov
aaa
lock
(bad)
ficomp
add
lock
imul
sub
jg
(bad)
adc
ins
cmp
inc
and
dec
inc
dec
or
push
adc
(bad)
ret
inc
adc
daa
dec
jo
cld
mov
pop
pop
pop
sub
or
adc
adc
or
add
(bad)
lock
push
or
push
call
outs
cmp
add
popa
sub
xor
test
mov
mov
ja
aad
mov
stc
fbstp
sahf
fmulp
sbb
pop
add
and
rcl
sbb
retf
test
adc
clc
mov
xchg
movs
push
push
sub
fwait
pop
push
xchg
pop
cmp
sbb
loope
dec
sub
(bad)
push
gs
or
sbb
push
push
or
adc
and
push
sub
sub
inc
adc
pop
clc
xor
ds
test
add
push
call
adc
dec
xor
repnz
and
daa
and
pop
and
and
dec
mov
hlt
add
mov
cwde
push
mov
pop
cmp
cmp
adc
ret
sbb
mov
pusha
add
pop
jl
pop
sub
or
(bad)
(bad)
inc
xor
sub
xor
cmp
pop
xor
aaa
cmp
inc
std
scas
push
xlat
or
fs
inc
es
dec
dec
pop
push
pop
sti
push
xchg
xor
ins
adc
adc
and
ds
pop
dec
add
jb
dec
cwde
or
ss
pop
(bad)
std
add
add
or
and
sbb
sbb
mov
sbb
and
xor
sbb
sbb
push
or
out
jb
hlt
push
xor
sbb
add
sub
mov
cmp
xor
cmp
sub
inc
sbb
sub
fidiv
adc
retf
repz
mov
or
adc
or
add
push
in
mov
or
or
or
loop
adc
mov
dec
ins
add
add
ins
sti
jns
lea
mov
lock
add
lods
add
mov
repnz
rol
pusha
and
or
fdivr
inc
aam
push
push
dec
and
sbb
je
add
ror
add
ffree
or
jl
ins
sbb
pop
push
es
lock
jmp
or
les
jge
enter
or
or
sbb
in
fimul
add
movs
bts
ins
or
pusha
jns
jge
mov
ins
add
xor
lahf
adc
sbb
or
cmp
xor
mov
cmps
js
or
or
or
and
pop
ins
mov
scas
adc
sbb
add
fnsave
sbb
or
mov
and
movs
data16
jnp
(bad)
dec
ins
ins
in
scas
sub
inc
sub
or
in
push
test
add
or
adc
or
or
adc
adc
pusha
xchg
adc
ficomp
add
and
gs
lods
add
xor
or
add
add
outs
fcmovnu
ds
int
adc
add
jne
xor
jns
sbb
fiadd
add
fst
ret
and
xchg
cmp
and
xchg
mov
mov
addr16
cwde
loope
push
xor
xor
add
lods
das
xor
push
mov
cmp
call
or
sub
and
ins
xor
xor
xor
mov
js
adc
pop
data16
pop
pop
daa
dec
ror
xchg
xchg
or
enter
or
out
lods
jmp
add
or
dec
xor
or
push
xchg
jno
cmp
sub
sub
inc
in
sub
es
dec
add
shr
es
fild
loopne
or
or
enter
mov
push
nop
add
mov
add
in
fldenv
and
aas
(bad)
mov
mov
out
add
add
imul
or
push
jl
cmps
in
lea
adc
popf
jmp
movs
adc
pusha
lods
mov
dec
mov
enter
push
mov
cdq
fadd
cs
in
xor
cmps
mov
add
imul
sbb
int3
add
inc
cs
add
push
nop
and
add
rcr
mov
xchg
jb
jns
int
mov
inc
pusha
inc
mov
inc
lock
test
push
or
dec
inc
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
cmc
inc
add
inc
add
