sub
cmp
dec
sbb
out
xchg
pop
mov
xchg
dec
mov
xchg
sbb
dec
sbb
xchg
mov
vaddss
sbb
pop
xchg
sub
sub
les
push
xchg
dec
sbb
(bad)
imul
out
daa
push
imul
sahf
(bad)
xchg
push
mov
xchg
push
sahf
into
pusha
lods
xchg
dec
imul
jns
js
xchg
dec
sbb
xchg
into
fcom
int
inc
ffree
(bad)
stc
dec
les
dec
je
daa
sbb
add
push
ins
cmp
aam
sbb
iret
adc
sbb
xchg
sti
adc
dec
xchg
iret
inc
xchg
pop
call
add
lea
gs
sbb
pop
icebp
sbb
xchg
les
sbb
or
xlat
mov
mov
sbb
xlat
mov
pop
outs
(bad)
outs
adc
ss
ins
mov
call
push
out
ret
out
dec
dec
pop
es
xlat
mov
mov
xchg
(bad)
mov
fcomp
pop
sbb
jne
pop
xchg
sbb
sub
push
xchg
shl
push
nop
xchg
mov
fcomp
and
push
nop
adc
dec
sbb
adc
pop
push
cmp
cmps
(bad)
addr16
shl
ficom
push
hlt
(bad)
popf
push
inc
xchg
adc
(bad)
sbb
mov
xchg
jmp
(bad)
sub
ins
jl
cmc
jecxz
xchg
jne
daa
jecxz
jp
loop
ins
into
fcom
clc
dec
fistp
or
push
clc
inc
hlt
inc
in
dec
sbb
push
inc
adc
push
push
dec
or
ror
push
xchg
dec
jbe
jp
arpl
xchg
into
fcom
fwait
lea
sub
xchg
cmps
cmp
ret
push
push
nop
mov
sbb
adc
fcomp
loopne
xchg
dec
lahf
ficom
dec
inc
inc
int3
push
xchg
repnz
mov
push
xchg
cmp
cmps
xchg
dec
sbb
jns
mov
je
mov
inc
sub
xchg
cmps
retf
jp
dec
sbb
xchg
sbb
add
sbb
or
push
ret
cmp
mov
xchg
jnp
sbb
popf
adc
imul
(bad)
dec
je
push
nop
lea
jp
bound
xchg
mov
ss
nop
cmps
imul
ds
nop
xchg
movs
push
addr16
dec
lahf
fimul
mov
div
mov
xchg
dec
sbb
push
dec
dec
xchg
ja
or
xchg
dec
hlt
cdq
jmp
sbb
les
mov
lahf
jge
push
push
xchg
daa
sbb
xchg
daa
pop
je
daa
sbb
xchg
dec
sbb
cli
ins
mov
fs
dec
xchg
fstp
mov
out
mov
das
push
cmps
ins
je
rcr
cli
inc
push
pop
xchg
rcr
shl
jmp
shl
call
and
sbb
push
js
lods
ins
mov
idiv
mov
and
sbb
out
sub
lahf
fdivr
xchg
into
fimul
test
mov
shl
and
push
xchg
mov
scas
loopne
(bad)
fild
push
aad
mov
dec
dec
sub
(bad)
in
jne
pop
jmp
xchg
pop
push
xchg
pop
outs
sbb
sbb
xchg
daa
sbb
xchg
daa
sbb
out
jecxz
call
fcomp
(bad)
neg
cmp
out
jecxz
mov
sbb
out
jecxz
outs
movs
mov
fsubr
loopne
in
sbb
fwait
mov
test
out
movs
sbb
dec
sbb
sahf
(bad)
in
jne
pop
out
sbb
inc
xlat
push
sbb
mov
sbb
xchg
pop
outs
sbb
sbb
xchg
mov
adc
adc
movs
xor
sbb
sub
imul
add
imul
mov
sbb
sbb
sbb
xchg
dec
adc
fidivr
sub
lahf
push
jp
push
xchg
adc
push
sbb
dec
les
xchg
imul
mov
adc
in
fimul
loope
xor
jns
xchg
into
jns
xchg
cmps
jno
dec
(bad)
pop
out
(bad)
xor
loope
xor
jecxz
(bad)
(bad)
pop
loop
mov
dec
call
or
xchg
out
adc
sbb
fucom
pop
jecxz
data16
pop
push
stos
or
imul
movs
pop
out
dec
sbb
div
pop
out
(bad)
in
popf
pop
mov
sahf
scas
dec
sbb
imul
mov
loop
or
push
into
aam
ror
and
xchg
cmp
daa
xlat
mov
pushf
jmp
mov
push
xchg
cmps
push
xchg
xlat
mov
fsub
adc
pop
mov
ja
sbb
xchg
dec
hlt
or
dec
sbb
les
xchg
imul
xchg
(bad)
xchg
xchg
xchg
(bad)
fs
dec
xchg
(bad)
xchg
xchg
xchg
fstp
or
push
into
aam
ror
and
xchg
cmp
daa
push
cmp
loope
dec
div
sbb
xor
xchg
xchg
mov
or
arpl
jl
xchg
push
(bad)
pop
push
mov
dec
sbb
ins
dec
xchg
fwait
xchg
dec
jecxz
jns
xchg
(bad)
mov
adc
push
sbb
dec
sbb
adc
xlat
mov
adc
fidiv
push
les
mov
je
push
xchg
(bad)
popa
push
sub
xchg
fbld
fucom
xchg
mov
add
(bad)
ficomp
movs
or
pop
outs
(bad)
fisubr
push
les
sbb
adc
xchg
push
sbb
int3
push
aad
mov
dec
xchg
iret
inc
fistp
in
sti
xchg
pop
loop
or
idiv
jp
pushw
xchg
(bad)
popa
push
sub
xchg
fbld
fucom
xchg
mov
add
(bad)
ficomp
movs
or
sbb
mov
sbb
adc
xchg
push
sbb
out
dec
sub
dec
inc
inc
leave
test
dec
sbb
xchg
imul
loopne
out
daa
lahf
xlat
mov
inc
xchg
dec
jecxz
jmp
add
or
sub
and
push
inc
adc
out
sub
pop
stos
xchg
pusha
(bad)
sbb
loopne
push
dec
ficom
int
inc
xlat
push
sbb
dec
(bad)
push
sub
(bad)
in
push
fndisi(8087
xchg
xor
imul
xchg
sbb
push
xlat
mov
inc
sahf
push
dec
jbe
mov
jg
ins
mov
xchg
iret
mov
dec
les
lahf
fidiv
jne
push
gs
xchg
pop
push
fild
push
aad
mov
xchg
inc
sahf
repnz
out
mov
fldcw
adc
aam
sbb
sbb
je
lea
dec
les
jbe
jp
push
xchg
int3
jmp
ror
fcom
adc
iret
mov
ja
dec
dec
sbb
adc
dec
or
sbb
and
(bad)
pop
push
xchg
cmp
mov
ret
loope
inc
xchg
pop
xchg
mov
sbb
push
jecxz
call
xchg
xchg
mov
xchg
mov
outs
push
xchg
adc
iret
mov
ja
lock
sbb
out
mov
lahf
gs
cmp
sbb
lahf
js
dec
jbe
jp
outs
push
xchg
rcr
and
hlt
mov
push
int3
jmp
loope
sbb
push
inc
(bad)
adc
lea
imul
je
popa
nop
sbb
xlat
mov
sbb
sbb
adc
fwait
lea
sbb
je
popa
nop
xor
push
sbb
sbb
mov
rcr
xchg
xlat
test
sub
xchg
push
in
push
sbb
sbb
mov
test
dec
sbb
sbb
inc
ds
rcr
movs
mov
xchg
xor
and
mov
ins
mov
push
out
lahf
cmp
mov
xchg
in
pusha
fcmovbe
dec
and
les
inc
mov
xchg
dec
dec
les
and
sbb
out
mov
dec
sbb
dec
call
push
sbb
(bad)
xchg
fst
mov
je
ins
dec
sbb
pop
lods
jecxz
ins
sbb
lods
imul
out
pop
xchg
rcr
jp
out
ins
into
fcom
scas
mov
push
xchg
cmp
popf
mov
scas
pop
xchg
dec
cmc
jl
dec
sbb
dec
jl
xchg
push
rcr
(bad)
pop
push
sbb
jecxz
mov
pop
loop
xor
push
popf
leave
and
xchg
dec
lahf
arpl
adc
adc
in
adc
fcmovbe
dec
jecxz
xchg
dec
push
(bad)
sbb
pop
push
sbb
call
pop
xchg
cmp
popf
mov
fcomp
mov
xchg
xlat
mov
(bad)
mov
cmps
or
xchg
dec
jbe
jp
imul
adc
jle
dec
sbb
jno
cdq
(bad)
ins
mov
xchg
push
sub
pop
jb
sbb
xlat
mov
pop
jp
pushf
fcmovbe
dec
xchg
pop
bound
lock
sbb
sbb
aaa
(bad)
popa
push
sbb
sbb
jb
dec
mov
pop
loop
cmps
add
fsubp
cs
and
sbb
jp
pop
push
sbb
in
dec
sbb
or
les
sbb
enter
xchg
fst
xor
push
out
xchg
fwait
dec
mov
loope
in
sub
mov
mov
mov
cmc
dec
xor
push
fwait
lea
push
dec
pushf
fcmovbe
dec
jecxz
xchg
dec
xchg
pop
sahf
je
ret
jecxz
scas
int3
test
xchg
dec
push
pop
xchg
sbb
adc
xlat
mov
(bad)
gs
xchg
fwait
inc
mov
loope
mov
out
iret
adc
ins
mov
cmp
(bad)
pop
push
xchg
adc
pop
mov
ja
lock
rcr
mov
sbb
sub
imul
or
or
xchg
push
(bad)
pop
push
adc
sbb
dec
adc
pop
outs
dec
sbb
xchg
(bad)
out
cmps
lea
sbb
gs
xchg
pop
data16
fcomi
jmp
add
jg
xlat
inc
xchg
pop
xchg
dec
and
out
and
out
lahf
jnp
dec
xchg
pop
call
mov
nop
mov
sbb
adc
in
push
mov
mov
jp
jmp
ins
inc
fsubr
into
jns
xchg
(bad)
in
jne
pop
jmp
push
pop
xchg
out
je
ror
push
sbb
lahf
jnp
dec
sub
fldcw
xchg
push
sbb
pop
xchg
pop
call
sbb
sub
push
adc
pop
xchg
xlat
inc
pushf
and
mov
loope
sub
push
adc
loopne
out
jecxz
call
int
dec
sbb
adc
push
sbb
lock
push
daa
sbb
xchg
daa
sbb
sbb
xchg
dec
sbb
cli
dec
mov
xchg
movs
add
xchg
pop
data16
push
je
daa
sbb
jp
outs
push
xchg
(bad)
pop
push
sbb
and
(bad)
jbe
pop
add
dec
shl
imul
aas
sbb
sub
sti
xchg
xlat
movs
xchg
pop
jp
(bad)
pop
out
ret
jbe
mov
call
push
ins
cmp
mul
sbb
int
inc
xlat
push
sbb
sbb
movs
add
dec
dec
dec
(bad)
inc
retf
fisttp
xchg
xor
fwait
outs
mov
loope
and
hlt
jge
dec
sbb
pop
mov
cdq
fisubr
jecxz
jp
out
ins
adc
ficomp
dec
movs
mov
jno
cdq
stos
ins
mov
xchg
push
int3
test
cmp
xchg
dec
hlt
inc
loopne
sbb
pop
and
fwait
push
mov
loope
movs
aad
ins
mov
ficomp
nop
out
popf
fnsave
sbb
sbb
lods
loope
mov
fstp
enter
mov
mov
ret
loope
add
fsubr
int3
out
and
pop
xchg
jecxz
ins
sbb
sbb
pop
lods
jecxz
ins
sbb
and
xchg
dec
sbb
xlat
mov
ficomp
dec
popf
in
rcr
push
pop
enter
mov
mov
ret
loope
xor
fcom
pop
cmp
xchg
and
jecxz
push
mov
loope
stos
in
ins
into
fcom
sbb
jecxz
ins
(bad)
les
dec
(bad)
fist
ins
out
dec
scas
ror
in
repz
sbb
pop
enter
mov
mov
ret
loope
xor
adc
push
lahf
mov
xchg
inc
cwde
jmp
jecxz
ins
dec
adc
clc
dec
je
popa
nop
ins
sbb
jecxz
push
inc
xchg
fxtract
les
lahf
jns
dec
push
xchg
inc
stos
fwait
cmp
jecxz
xchg
inc
cwde
xchg
enter
mov
dec
pop
enter
mov
jbe
std
pop
push
jp
outs
push
xchg
into
fcom
popf
cli
cdq
mov
mov
fcom
dec
sbb
aaa
loope
loopne
dec
movs
leave
ret
dec
sbb
jno
cdq
mov
push
into
and
nop
popf
enter
dec
jbe
cli
dec
out
pop
xchg
and
hlt
sub
popf
push
inc
and
ins
dec
sbb
mov
sbb
push
pop
lock
ins
mov
test
adc
ins
mov
push
out
fistp
xchg
dec
sbb
sbb
jbe
cli
mov
dec
scas
ror
lock
popf
push
inc
and
ins
dec
sbb
mov
sbb
push
pop
lock
ins
mov
test
loope
mov
and
sbb
out
fistp
xchg
dec
sbb
clc
dec
je
pusha
nop
std
pop
push
jp
jmp
adc
cmp
je
and
xchg
mov
lds
lahf
ficomp
dec
push
loope
mov
push
xchg
dec
jbe
cli
sub
xchg
and
hlt
je
mov
popf
push
inc
and
ins
dec
sbb
mov
sbb
push
pop
lock
ins
mov
neg
mov
adc
ins
mov
push
out
fistp
xchg
dec
sbb
adc
jbe
cli
repnz
pop
xchg
and
hlt
cmp
mov
popf
push
inc
and
ins
dec
sbb
cwde
mov
pop
xchg
dec
sbb
xchg
and
je
and
imul
jecxz
adc
sbb
out
fistp
xchg
dec
sbb
clc
dec
je
pusha
nop
std
pop
push
jp
call
adc
cmp
xchg
and
xchg
mov
lds
lahf
ficomp
dec
imul
pusha
nop
ins
sbb
and
popf
push
inc
and
ins
dec
sbb
cwde
mov
pop
xchg
dec
sbb
mov
push
gs
xchg
fwait
xor
lahf
mov
xchg
daa
sbb
push
cli
sbb
jg
ins
mov
ficomp
dec
push
outs
pusha
nop
std
pop
push
jp
call
adc
cmp
fst
loope
loopne
dec
sbb
xchg
int3
(bad)
xchg
dec
sbb
das
loope
loopne
dec
imul
ror
xchg
pop
mov
loopne
sbb
jecxz
jns
ficomp
out
pop
push
xchg
in
dec
scas
ror
jbe
nop
xchg
mov
push
jnp
sbb
xchg
(bad)
les
dec
(bad)
fist
push
rcr
sbb
shl
mov
xchg
stos
mov
inc
sbb
loopne
push
inc
cdq
loope
dec
sbb
pop
cmc
jecxz
ins
sbb
loop
ret
loope
ins
xchg
pop
outs
int3
fistp
xchg
dec
sbb
push
inc
cdq
rcl
cdq
jecxz
ins
dec
xchg
(bad)
mov
call
sbb
das
cmc
jecxz
ins
dec
adc
sub
imul
pop
shl
ins
(bad)
fistp
enter
mov
push
push
enter
mov
push
xchg
dec
xchg
fwait
add
cdq
mov
sbb
(bad)
dec
xchg
mov
xchg
sub
fwait
inc
mov
loope
and
xchg
fwait
or
and
xchg
push
xchg
dec
xchg
pop
outs
inc
fcom
pop
or
push
xchg
rcr
sbb
enter
dec
xchg
stos
mov
into
xchg
dec
sbb
xlat
mov
(bad)
gs
xchg
fwait
sbb
lahf
arpl
adc
pop
enter
mov
xchg
pop
popf
jecxz
ins
sbb
and
xlat
mov
ficomp
dec
popf
fld
sbb
jns
xchg
fwait
jp
loop
ret
ret
jecxz
sbb
dec
stos
les
sbb
lahf
arpl
adc
adc
xchg
fwait
jbe
loop
ret
imul
jecxz
sbb
dec
mov
pop
loop
lea
fwait
clc
dec
sbb
adc
lahf
mov
xchg
mov
out
mov
jbe
std
pop
push
pop
enter
mov
neg
sbb
adc
jecxz
ins
dec
cmc
adc
movs
cwde
jo
dec
xchg
(bad)
mov
clc
lock
mov
fwait
outs
mov
loope
and
xchg
fwait
outs
mov
loope
movs
les
dec
lahf
fiadd
(bad)
fistp
enter
mov
push
sbb
lock
mov
fwait
or
mov
xchg
daa
fucom
loopne
into
lock
sbb
sbb
aaa
shr
jle
xchg
stc
sub
push
xchg
mov
jecxz
ins
sbb
xchg
xlat
mov
(bad)
xchg
xchg
xchg
fst
xor
push
popf
enter
dec
lahf
mov
xchg
(bad)
les
dec
(bad)
fist
ins
sbb
sbb
pop
in
jecxz
ins
sbb
and
xchg
dec
sbb
xlat
mov
ficomp
dec
popf
cmc
or
pop
enter
mov
xchg
pop
in
loopne
sbb
jo
xlat
mov
ficomp
dec
lahf
mov
xchg
movs
rcr
dec
jbe
jp
jno
xchg
adc
(bad)
mov
xchg
xchg
(bad)
mov
sbb
(bad)
cdq
mov
mov
xchg
pop
int
loopne
rcr
pop
clc
fs
mov
repnz
cmps
xchg
dec
sbb
popa
call
loop
adc
sbb
xchg
dec
out
mov
ins
mov
xchg
lods
mov
push
or
xchg
dec
jl
xchg
push
into
popa
loop
inc
cdq
jnp
dec
sbb
aaa
shl
ins
dec
xchg
fwait
push
mov
loope
and
xchg
fwait
sbb
and
xchg
push
xchg
dec
xchg
pop
outs
int3
neg
push
inc
cdq
or
shl
ins
dec
adc
pop
enter
mov
je
mov
jmp
jecxz
ins
sbb
cmp
xlat
mov
(bad)
xchg
xchg
xchg
fst
xor
push
popf
enter
dec
jp
das
and
adc
adc
ins
loope
mov
adc
lea
xchg
rcr
ins
clc
ins
loope
mov
jecxz
mov
popf
push
inc
xchg
(bad)
les
xchg
dec
dec
les
ins
mov
push
popf
leave
xchg
push
xchg
dec
fistp
xchg
dec
sbb
sbb
jbe
ins
clc
mov
ins
mov
fwait
outs
mov
loope
and
xchg
fwait
outs
mov
loope
movs
lods
jb
dec
lahf
fiadd
mov
popf
pop
mov
sahf
scas
dec
sbb
imul
out
mov
loope
sub
jecxz
rcr
sbb
in
ins
mov
call
hlt
xor
dec
sbb
push
inc
xchg
(bad)
mov
dec
xchg
fwait
outs
mov
loope
and
xchg
fwait
outs
mov
loope
movs
dec
jb
dec
lahf
fiadd
(bad)
fistp
ins
dec
push
loope
mov
xchg
mov
enter
mov
fwait
ss
loope
enter
mov
pushf
xor
loope
mov
xchg
mov
xchg
jmp
sbb
nop
loope
mov
fstp
enter
mov
xchg
mov
enter
mov
fwait
jbe
loop
stos
enter
mov
pushf
dec
mov
loope
lock
loope
mov
imul
jecxz
adc
xchg
fwait
jp
loop
ret
loope
inc
lahf
mov
xchg
cmp
xchg
pop
popf
jecxz
ins
sbb
adc
push
in
push
xchg
into
mov
push
out
xchg
fwait
inc
mov
loope
(bad)
sub
les
fwait
dec
mov
loope
(bad)
sub
les
fwait
dec
mov
loope
(bad)
sub
les
(bad)
mov
enter
mov
xchg
mov
icebp
jmp
mov
ja
jecxz
sbb
or
xchg
sub
dec
test
push
xchg
dec
sbb
jle
dec
dec
(bad)
not
clc
pop
clc
sbb
xchg
out
test
xchg
imul
loop
dec
sbb
sbb
clc
xchg
ins
dec
loop
out
je
nop
dec
sbb
add
sbb
adc
jecxz
adc
fcmovbe
dec
sbb
nop
cmps
push
xchg
out
test
xchg
imul
(bad)
mov
loope
mov
sub
cld
pop
xchg
dec
sbb
xlat
lods
fist
dec
(bad)
sub
ret
jmp
sbb
les
dec
cmps
sbb
outs
mov
loope
adc
add
pop
out
imul
sbb
xchg
dec
(bad)
xlat
push
dec
sbb
(bad)
and
pop
xchg
out
mov
fsqrt
leave
fcomp
sbb
xchg
and
jbe
clc
dec
hlt
std
cmc
dec
sbb
push
sbb
inc
hlt
dec
sbb
push
in
push
adc
mov
dec
dec
sbb
adc
push
add
call
or
xchg
push
mov
push
nop
xor
jmp
sbb
in
push
jl
mov
xor
pop
xchg
out
adc
ror
(bad)
xchg
test
mov
dec
sbb
xchg
dec
fistp
(bad)
in
push
xchg
dec
sbb
sbb
pop
mov
dec
adc
xchg
inc
fcom
push
ficomp
push
xchg
jo
push
xchg
dec
adc
ins
imul
pop
xchg
or
sbb
xchg
xor
fcomp
push
add
xchg
pop
bound
cmp
dec
sbb
adc
mov
dec
pop
call
(bad)
dec
sbb
fs
pop
mov
dec
sbb
mov
dec
sbb
push
jns
jecxz
stos
loop
push
sub
std
xchg
xlat
mov
push
push
xchg
mov
es
dec
sbb
ins
dec
fs
dec
jmp
cmp
das
push
movs
dec
sbb
xchg
dec
sbb
jae
pop
neg
mov
sub
mov
dec
mov
idiv
dec
add
ror
push
jl
div
movs
stc
cmp
loop
push
xchg
movs
sbb
ins
mov
sbb
cmp
das
push
movs
loop
xchg
dec
popf
imul
sbb
adc
mov
dec
adc
shl
pop
push
xor
(bad)
loopne
mov
sbb
cmp
das
push
movs
into
sbb
dec
popf
imul
adc
adc
mov
dec
sbb
pop
xchg
dec
sbb
xchg
(bad)
aam
pop
(bad)
(bad)
cmp
add
ror
push
jl
div
dec
sbb
adc
mov
dec
push
xchg
pop
jl
xchg
push
mov
pop
cmp
sbb
dec
sbb
out
mov
loope
dec
fs
dec
jecxz
stos
loop
push
adc
adc
movs
push
pop
xchg
dec
mov
pop
xchg
jne
pop
xchg
cmc
pop
cs
dec
jmp
sbb
clc
xchg
push
int
push
cmp
stos
sbb
xchg
in
lock
dec
lahf
ficom
or
test
mov
xchg
dec
sbb
xor
sbb
xor
sbb
cmp
dec
sbb
ins
dec
fs
dec
lahf
sbb
movs
mov
out
imul
mov
dec
pop
test
(bad)
cmc
sti
xchg
dec
sbb
lahf
push
mov
xchg
ins
xchg
(bad)
xchg
test
xchg
xchg
out
dec
scas
ror
test
sbb
fsub
into
in
in
dec
jecxz
pop
(bad)
pop
xchg
jo
push
xchg
dec
pusha
pop
scas
sbb
xor
loope
enter
dec
pushf
adc
cmps
and
xchg
xor
sub
xchg
dec
and
ror
ss
dec
and
ror
(bad)
mov
inc
add
ror
cmc
cmp
sub
std
xchg
xlat
xchg
xchg
fild
fs
dec
jmp
inc
cwde
aam
dec
sbb
bound
xchg
push
xor
aam
pop
(bad)
fst
and
ins
scas
ror
ficom
mov
lods
pop
xchg
into
cld
sbb
or
adc
out
and
sbb
popf
leave
xchg
push
xchg
dec
pushf
arpl
imul
ror
div
sti
pop
in
scas
int
push
xchg
cmp
mov
xchg
dec
adc
ror
and
in
push
nop
cmp
sahf
out
mov
popa
in
xchg
cmp
xchg
inc
mov
push
adc
out
sbb
addr16
adc
cmc
mov
xchg
dec
jmp
sbb
lock
push
(bad)
in
pop
sbb
cli
aas
or
adc
clc
mov
dec
lahf
(bad)
xchg
lds
adc
out
sbb
inc
pushf
arpl
imul
ror
lahf
jnp
sbb
xchg
into
cmp
xor
xchg
out
aam
or
xor
sbb
stos
in
push
ins
dec
adc
xor
mov
xchg
pop
mov
xchg
fist
push
sbb
mov
in
pop
sbb
mov
sbb
mov
nop
xchg
inc
mov
mov
dec
and
push
loopne
jecxz
jmp
(bad)
xor
pop
xchg
jl
pop
jns
xchg
(bad)
xchg
test
ffree
sbb
xchg
push
in
push
mov
push
nop
xchg
jp
jge
xchg
(bad)
fidiv
xchg
les
mov
xchg
push
in
push
and
dec
mul
sbb
xor
pop
xchg
and
dec
div
sbb
xor
push
aam
dec
dec
test
push
xor
pop
xchg
(bad)
in
push
(bad)
xchg
les
mov
inc
int3
mov
ja
lock
sbb
pop
sub
sbb
jecxz
jmp
pop
xchg
rcr
mov
inc
and
sbb
xlat
movs
add
xchg
dec
popf
cmc
pop
js
push
adc
lock
pop
or
or
xchg
into
jns
xchg
(bad)
les
dec
(bad)
fistp
xchg
xor
jns
xchg
cmc
stc
sub
or
xchg
mov
xchg
dec
sbb
sub
xchg
xlat
fst
pop
xchg
dec
sbb
xchg
xor
pop
(bad)
ins
dec
fs
dec
fistp
dec
sbb
xchg
int3
imul
test
stc
sbb
jnp
dec
xchg
(bad)
mov
xor
sbb
rcr
and
xchg
pop
jbe
jecxz
data16
push
sub
xchg
mov
xchg
fstp
or
pop
ss
jbe
clc
dec
jecxz
jbe
sar
xchg
pop
xor
pop
scas
ret
div
sbb
ins
dec
fs
dec
jbe
ins
cmp
xchg
daa
sbb
out
hlt
movs
icebp
dec
sbb
dec
les
jp
jl
xchg
mov
push
nop
out
xchg
pop
jbe
jecxz
data16
push
sbb
clc
cmc
fwait
(bad)
(bad)
jmp
sbb
fisttp
test
repnz
add
and
or
xchg
xlat
test
jns
sbb
rcl
les
sbb
or
fbstp
sub
xchg
xlat
movs
jbe
clc
dec
jbe
pop
or
dec
pop
or
dec
ins
cmp
je
rcr
daa
jecxz
out
jecxz
mov
or
cmc
pushf
cmc
xlat
xor
les
sbb
loopne
push
sbb
adc
jbe
out
mov
fldcw
fs
dec
jecxz
call
pop
xchg
int3
(bad)
xchg
dec
sbb
iret
mov
ja
lock
sbb
out
xchg
inc
sahf
mov
push
nop
ins
inc
stos
sbb
imul
xchg
jo
push
xchg
dec
imul
nop
jo
push
xchg
dec
imul
xchg
jo
push
xchg
dec
imul
xchg
jo
push
xchg
dec
adc
sbb
or
(bad)
dec
sbb
mov
xchg
inc
stos
pop
ins
inc
stos
sbb
inc
stos
or
sbb
xchg
(bad)
out
popf
sti
or
stos
(bad)
adc
sbb
stos
or
out
js
adc
out
xchg
out
movs
sbb
and
sbb
jp
sbb
out
adc
popf
rcr
inc
add
adc
xchg
or
inc
sbb
int3
dec
sbb
xlat
mov
(bad)
ins
(bad)
dec
push
pop
sbb
sbb
fs
sbb
xchg
les
sbb
or
(bad)
dec
sbb
push
hlt
sbb
sbb
xchg
xchg
push
xchg
dec
idiv
popf
sti
pop
loope
lea
sahf
scas
dec
retf
dec
sbb
popf
int
loope
movs
sub
ins
mov
sbb
mov
adc
sbb
sbb
sbb
into
hlt
sbb
jno
sbb
or
pop
sahf
scas
dec
sbb
(bad)
in
jp
adc
out
and
cdq
(bad)
in
jp
pushf
and
pop
pop
add
es
into
neg
adc
sbb
and
push
sahf
scas
dec
push
imul
in
jp
pushf
and
lahf
not
cmp
push
hlt
sbb
movs
sbb
xchg
cmp
and
sbb
out
lahf
(bad)
ins
(bad)
dec
push
pop
sbb
sbb
fs
pop
dec
into
hlt
sbb
or
xchg
xlat
pop
xchg
pop
xchg
dec
sbb
xchg
(bad)
mov
or
int
and
add
imul
int
sbb
into
hlt
sbb
out
xchg
out
movs
sbb
and
sbb
scas
cmp
and
push
out
and
xchg
dec
sbb
mov
xchg
dec
add
or
js
xchg
sbb
or
push
popf
iret
stos
jecxz
mov
inc
leave
test
dec
sbb
dec
dec
ins
dec
fs
dec
xchg
imul
sbb
fwait
or
push
in
popf
loope
dec
sbb
loope
pop
xchg
xlat
inc
xor
xchg
dec
sbb
push
cmp
idiv
sbb
adc
fcomp
stos
dec
or
xor
in
dec
sbb
jecxz
ins
dec
fs
dec
adc
xchg
dec
sbb
mov
cmc
push
xchg
dec
push
push
jns
xchg
(bad)
xchg
or
xchg
xchg
or
mov
loop
movs
idiv
sbb
xchg
xchg
push
xchg
pop
lea
sbb
in
pusha
dec
(bad)
aaa
inc
(bad)
out
dec
dec
int3
xchg
xlat
mov
xchg
dec
les
xchg
into
out
loopne
lahf
(bad)
ins
(bad)
out
pop
dec
fs
xchg
push
into
hlt
sbb
or
fcom
push
sbb
push
ins
dec
fs
dec
lahf
(bad)
ins
fs
(bad)
push
sbb
inc
into
hlt
sbb
or
fcom
dec
sbb
xchg
push
dec
adc
or
jo
jecxz
xchg
rcr
push
ficomp
mov
ja
inc
cmp
dec
sbb
les
hlt
jmp
jecxz
pop
scas
ret
loope
dec
hlt
in
dec
sbb
xchg
dec
sbb
loope
ficomp
xchg
mov
push
adc
fcmovbe
dec
sbb
ins
dec
imul
jge
jecxz
scas
dec
js
ror
push
int
std
dec
mov
push
out
adc
ins
int
sbb
sbb
int3
inc
stos
mov
jecxz
sbb
mov
ins
mov
aam
rcl
scas
sbb
xchg
dec
xchg
mov
xchg
jecxz
sbb
dec
cmp
adc
out
icebp
ins
mov
aam
rcl
jo
pop
push
ret
mov
sbb
fdivr
sub
movs
xor
xchg
dec
xchg
mov
xchg
jecxz
sbb
xor
repz
dec
adc
ins
fadd
adc
cld
pop
nop
popf
enter
mov
fwait
popa
mov
stos
mov
jecxz
push
scas
push
popf
scas
pop
cmp
ror
adc
xlat
sbb
xchg
inc
stos
mov
jecxz
push
scas
push
xchg
xchg
mov
dec
xchg
mov
jecxz
ins
dec
fs
dec
pushf
mov
xchg
inc
cwde
mov
mov
loope
enter
mov
sbb
mov
sbb
enter
xchg
int
cmps
or
jno
xchg
(bad)
xchg
dec
sbb
xchg
les
das
ins
cmps
cmp
push
shl
fcom
mov
xchg
stos
das
mov
loope
or
push
test
mov
leave
pop
enter
mov
div
pop
sbb
ins
dec
fs
dec
lahf
mov
xchg
movs
nop
push
xchg
dec
je
ins
dec
sbb
daa
mov
test
neg
mov
xchg
xlat
mov
fsubp
das
lahf
mov
xchg
mov
sar
dec
mov
sbb
scas
push
sbb
sub
cli
sbb
mov
imul
sbb
loopne
popf
loope
dec
sbb
loopne
xchg
(bad)
xchg
dec
or
xchg
les
cmc
fmul
fistp
or
imul
loope
mov
or
mov
inc
adc
lock
ins
mov
push
xchg
dec
xchg
fwait
push
xchg
jecxz
mov
je
bnd
jecxz
adc
jecxz
ins
mov
push
nop
daa
xchg
ret
loope
movs
pusha
inc
xchg
dec
cmc
pop
xchg
dec
sbb
and
out
icebp
ins
mov
cld
nop
(bad)
or
mov
pop
push
sbb
call
mov
xchg
(bad)
mov
jge
jecxz
jo
xchg
(bad)
push
movs
push
fbstp
pop
push
outs
(bad)
adc
sbb
or
dec
mov
xchg
pop
mov
(bad)
sbb
xchg
(bad)
nop
mov
sbb
add
pop
pop
int
sbb
enter
mov
mov
xchg
dec
sbb
loopne
jecxz
jmp
shr
imul
jle
ror
cmc
retf
xchg
pop
in
ret
(bad)
ficomp
xchg
dec
xchg
mov
xchg
jecxz
adc
cdq
xchg
xchg
pop
in
ret
(bad)
mov
push
push
pop
sbb
enter
mov
fwait
xor
mov
ins
mov
sbb
enter
mov
fwait
ds
jecxz
sbb
enter
xchg
fwait
dec
xchg
jecxz
clc
push
xchg
fwait
sub
test
div
sbb
sbb
enter
and
loope
push
xchg
fwait
push
xchg
jecxz
sbb
test
ins
mov
fwait
dec
xchg
jecxz
adc
inc
ins
mov
imul
push
xchg
ins
jbe
sbb
test
ins
mov
hlt
sahf
pop
xchg
mov
xchg
jecxz
push
cmps
adc
sbb
xchg
mov
mov
mov
cmc
or
sbb
and
out
icebp
ins
mov
cld
nop
(bad)
xchg
ret
jecxz
pop
cdq
ret
loope
les
or
sti
mov
jge
jecxz
jo
xchg
or
les
jbe
pop
sbb
shl
fwait
and
adc
adc
adc
popf
leave
es
xchg
dec
xchg
fwait
data16
sbb
jnp
sbb
out
pushf
arpl
dec
sbb
jnp
sbb
jmp
sbb
hlt
ins
rcr
les
fcom
out
ret
dec
lahf
mov
xchg
jecxz
xchg
(bad)
test
xchg
bound
xor
(bad)
into
hlt
sbb
jne
imul
es
cmp
xchg
(bad)
into
hlt
sbb
jne
imul
pushf
es
cmp
sbb
mov
popf
sti
mov
jo
xchg
stos
xchg
(bad)
loope
int
mov
popf
sti
sbb
jnp
sbb
out
xchg
sbb
into
hlt
loope
or
sbb
clc
shr
pushf
sbb
call
out
mov
pop
and
ins
aas
cmc
sahf
aas
out
ret
dec
adc
ins
mov
sbb
icebp
or
xchg
dec
pushf
and
dec
imul
xchg
dec
sbb
out
pushf
and
dec
imul
xchg
dec
sbb
out
pushf
and
dec
push
adc
mov
fsubrp
call
push
in
jge
jecxz
ins
clc
rol
mov
stos
inc
xchg
jecxz
jp
in
ins
into
fcom
adc
inc
ins
mov
push
into
mov
push
sbb
call
cld
nop
(bad)
(bad)
dec
(bad)
nop
dec
push
loop
leave
or
dec
mov
xchg
xchg
pop
jecxz
data16
call
sbb
dec
fs
dec
cmc
xor
jecxz
pop
mov
adc
ins
fadd
adc
cld
pop
nop
popf
enter
mov
inc
leave
test
dec
sbb
dec
dec
sbb
adc
xlat
mov
add
xor
push
push
xchg
mov
xchg
shl
js
rcl
dec
movs
setb
in
ss
pop
loop
(bad)
sbb
xchg
out
xchg
xchg
sub
sbb
inc
sbb
xchg
mov
xchg
sub
sbb
dec
sbb
xchg
mov
xchg
fdivr
int
jns
inc
pop
sahf
xlat
mov
lahf
push
ficomp
dec
test
(bad)
mov
pop
xchg
out
jns
pushf
pop
push
pop
outs
cli
adc
loopne
mov
sbb
xlat
mov
mul
dec
sbb
sbb
test
mov
pop
xchg
sbb
adc
loopne
mov
mov
adc
sbb
push
out
and
test
dec
cmp
xchg
dec
sbb
push
imul
sbb
loopne
push
jl
xchg
(bad)
mov
test
dec
xchg
fcom
scas
sbb
adc
in
out
dec
pushf
pop
imul
xchg
lea
adc
imul
sbb
loopne
push
jl
xchg
(bad)
mov
test
dec
cmp
xchg
dec
sbb
adc
push
out
pushf
pop
imul
push
xchg
inc
stos
sbb
xchg
cmp
call
xchg
int
in
int
out
int
out
inc
sahf
pop
ins
mov
fcom
mov
cmc
test
pop
adc
in
(bad)
pop
int
xchg
int
in
cmps
push
sahf
xlat
mov
sahf
out
mov
ins
jbe
pop
loop
or
xchg
xlat
test
jnp
les
sbb
loopne
and
and
xchg
int
in
inc
stos
pop
imul
dec
xchg
ja
dec
dec
les
xchg
imul
xchg
(bad)
gs
xchg
pop
outs
(bad)
fbstp
dec
sbb
les
sbb
mov
mov
pushf
and
mov
adc
jno
inc
out
ficomp
dec
sbb
xchg
add
cmps
loopne
sbb
gs
xchg
pop
push
fild
push
aad
mov
sbb
jp
dec
push
xchg
sbb
pop
push
add
mov
stc
sbb
loopne
ins
mov
fst
mov
xchg
imul
cdq
push
jb
jecxz
jp
inc
push
xchg
rcr
jp
sbb
xchg
into
fmul
sbb
sub
out
mov
pop
mov
ja
mov
lahf
jge
bound
xchg
daa
sbb
xchg
mov
push
clc
dec
hlt
lods
(bad)
dec
sbb
iret
mov
ja
lock
sbb
out
push
add
mov
out
mov
cli
int
push
xchg
daa
pop
je
daa
pop
jbe
dec
sbb
ins
cmp
mov
mov
popf
out
inc
sbb
xchg
(bad)
pop
adc
ins
sbb
jge
cmp
xchg
jl
cmc
icebp
daa
sbb
jp
dec
push
xchg
(bad)
fbld
gs
xchg
pop
data16
fist
ret
neg
push
sbb
loopne
push
in
push
daa
sbb
out
inc
sbb
call
cmc
xchg
rcr
or
loope
mov
dec
test
push
les
xchg
pop
outs
cmps
adc
xchg
xlat
mov
inc
xlat
push
sbb
dec
sub
int3
fistp
mov
sbb
xchg
and
jbe
clc
dec
jbe
cli
dec
sbb
push
mov
push
jp
dec
push
xchg
(bad)
ficom
push
into
loop
out
sub
sbb
dec
jbe
les
popf
fxch
and
sbb
adc
ror
and
xchg
cmp
xchg
push
daa
sbb
(bad)
mov
dec
ins
cmp
dec
jp
dec
push
xchg
daa
sbb
xlat
mov
je
and
dec
imul
push
sbb
les
popf
icebp
loopne
sbb
sub
xchg
adc
pop
mov
ja
dec
dec
(bad)
or
mov
fldcw
jne
push
xchg
mov
xchg
fprem
dec
je
xchg
dec
sbb
xchg
daa
sbb
xchg
and
jecxz
call
fcom
mov
imul
push
je
daa
sbb
jp
dec
push
xchg
(bad)
in
push
(bad)
pop
loop
mov
push
ins
cmp
dec
jp
dec
push
xchg
sbb
(bad)
sbb
push
in
push
jl
pop
int
aad
mov
dec
xchg
out
fistp
inc
jp
(bad)
int3
pop
loop
cmp
mov
(bad)
ficomp
push
les
mov
sti
sbb
xchg
mov
out
inc
pusha
jmp
out
pop
xchg
movs
ins
dec
xchg
dec
je
pusha
nop
hlt
sbb
adc
movups
add
js
pop
xchg
movs
dec
dec
xchg
dec
lahf
ficomp
xor
xchg
xlat
mov
fsub
jl
cmc
cdq
int
and
jae
pop
test
sbb
nop
mov
sbb
adc
aad
mov
dec
dec
sbb
adc
out
fistp
cmp
aam
lea
dec
jmp
outs
les
sbb
loopne
test
movs
dec
push
xchg
adc
loope
pop
adc
cmps
mov
dec
push
xchg
into
fcom
aad
jmp
jnp
jno
push
aaa
sbb
cli
imul
xchg
movs
mov
inc
int3
push
aad
mov
dec
dec
vrcpss
sub
sbb
jno
pop
ret
jp
xlat
scas
sbb
push
adc
hlt
push
adc
clc
push
pop
xor
xchg
cmps
rcl
pop
xchg
hlt
pop
push
xchg
dec
out
mov
xchg
dec
pushf
arpl
mov
mov
pop
call
loope
fs
in
rol
popf
sti
pop
loope
sti
pop
sbb
fadd
xchg
or
sahf
out
mov
imul
les
dec
(bad)
fistp
out
mov
imul
adc
or
cmc
mov
(bad)
fist
and
loop
and
sbb
adc
pushf
arpl
sbb
and
sbb
test
push
xchg
mov
xchg
fst
and
pop
adc
loop
out
movs
sti
(bad)
jmp
sbb
stos
push
sbb
adc
and
lea
xchg
dec
adc
push
dec
pop
cli
sbb
hlt
xchg
pop
pop
repnz
cli
push
cld
lods
xchg
pop
inc
dec
pop
cli
sbb
adc
and
inc
adc
popf
cli
dec
cld
popf
loop
pop
xlat
test
sbb
jno
pop
into
sbb
stos
pop
call
push
mov
(bad)
pop
cli
jns
xchg
(bad)
mov
adc
push
sub
mov
add
inc
(bad)
ror
cmps
loopne
xchg
pop
add
fmul
mov
jl
mov
fisttp
add
mov
fisttp
add
mov
dec
fisttp
add
mov
add
in
ror
cmps
mov
push
jb
enter
fisttp
add
add
mov
add
add
mov
fisttp
add
mov
les
mov
fisttp
xchg
dec
inc
mov
fisttp
xchg
fnsave
push
lods
or
mov
xchg
fisttp
add
sub
mov
mov
mov
frstor
mov
mov
lahf
ficomp
jne
mov
(bad)
add
mov
add
jnp
and
xchg
pop
pop
push
into
fcomp
sub
pop
push
push
pop
push
mov
push
jb
sub
mov
add
sbb
add
mov
add
mov
fisttp
ror
xchg
dec
fisttp
add
mov
inc
fisttp
add
mov
add
mov
add
mov
add
add
mov
push
mov
add
mov
add
in
add
mov
fisttp
ror
xchg
dec
fisttp
add
mov
inc
fisttp
add
mov
add
mov
add
mov
add
add
mov
push
mov
add
mov
fisttp
xchg
mov
fst
xchg
sti
adc
xchg
pop
sahf
sub
aaa
jmp
xchg
(bad)
xchg
xchg
xchg
frstor
xchg
xchg
(bad)
mov
xchg
dec
cmc
sti
xchg
dec
sbb
jns
jo
xchg
(bad)
pop
push
xchg
mov
jecxz
retf
(bad)
ficom
ins
dec
imul
jns
hlt
sub
dec
sbb
xlat
mov
sbb
xchg
dec
sbb
popf
sti
dec
loope
mov
iret
or
pop
out
or
dec
loopne
or
xchg
dec
and
pop
and
pop
xchg
pop
call
adc
loop
pop
lds
xchg
dec
and
xchg
dec
sbb
add
push
xchg
mov
adc
sbb
(bad)
cmp
push
clc
inc
je
xchg
dec
sbb
xlat
mov
sbb
popf
sti
pop
loope
(bad)
pop
push
xchg
mov
adc
ret
dec
xchg
dec
xchg
(bad)
mov
dec
xchg
pop
fs
in
dec
jp
dec
push
xchg
into
fdivr
sbb
lock
push
into
ficomp
hlt
mov
jmp
ficom
adc
loope
adc
pop
mov
ja
lock
sbb
add
mov
hlt
push
ret
movs
lahf
dec
pop
faddp
(bad)
fucomp
js
(bad)
fild
fucom
lea
inc
adc
fcomp
sbb
xchg
bound
push
into
and
pop
nop
out
sub
push
xchg
(bad)
in
das
(bad)
(bad)
ficom
out
hlt
gs
jecxz
push
inc
xchg
fstp
dec
sbb
popf
sti
popa
icebp
push
stos
push
xchg
xchg
rcl
dec
aaa
or
(bad)
retf
push
sbb
hlt
dec
popf
sti
popa
icebp
push
stos
push
loope
jo
rcl
dec
xchg
rcl
dec
test
push
clc
inc
jbe
sbb
pop
push
xchg
or
dec
jp
push
push
xchg
into
fadd
xor
pop
loop
pop
popf
lock
add
pop
pop
outs
(bad)
or
pop
nop
or
loop
in
rcl
ror
sbb
pop
push
stos
or
ins
dec
in
(bad)
rcl
dec
xchg
pop
push
or
sbb
rcl
dec
sub
out
sbb
mov
sbb
xchg
je
out
xchg
hlt
pop
fisttp
xchg
xlat
xchg
hlt
and
dec
sbb
out
xchg
adc
and
inc
retf
xchg
scas
cdq
rcr
repnz
xchg
dec
sbb
mov
sbb
sbb
(bad)
test
adc
cli
into
fbstp
adc
rcl
dec
jbe
cli
icebp
rcr
les
xchg
sbb
sbb
push
inc
mov
xchg
xlat
mov
jmp
sbb
enter
les
inc
sbb
pop
lahf
pop
dec
mov
sbb
xchg
je
jmp
sbb
xlat
mov
pop
pop
(bad)
(bad)
or
pop
nop
or
out
xchg
in
(bad)
rcl
dec
pop
sbb
pop
push
stos
or
ins
dec
(bad)
test
pop
xchg
inc
stos
dec
jge
(bad)
xchg
xchg
clc
rcl
dec
xchg
adc
pop
push
sbb
lahf
fs
(bad)
test
pop
xchg
inc
stos
dec
jge
(bad)
xchg
xchg
hlt
rcl
dec
xchg
adc
pop
push
sbb
sahf
out
mov
jno
mov
pop
jp
xchg
(bad)
xchg
dec
aam
ror
test
jecxz
adc
sbb
nop
daa
sbb
xchg
and
jecxz
call
pop
jbe
repnz
dec
sbb
xchg
rcr
mov
inc
mov
cli
jp
push
push
xchg
mov
cli
jp
push
push
xchg
push
hlt
sbb
mov
xchg
fsub
push
aad
mov
push
push
xchg
push
dec
dec
sub
push
jge
cmc
adc
jmp
sbb
lock
mov
fcom
dec
fs
dec
mov
xchg
dec
xchg
add
pop
push
adc
hlt
test
dec
sbb
inc
add
ret
(bad)
fucomp
js
out
push
mov
aaa
pop
(bad)
int3
inc
sbb
out
pop
mov
loope
(bad)
in
pop
(bad)
(bad)
fcmovu
xlat
mov
cmc
mov
dec
adc
fild
or
sbb
fild
xor
xchg
push
into
fidivr
fldenv
loope
mov
sahf
xlat
mov
xchg
xlat
mov
push
in
ficomp
xchg
movs
xor
dec
xchg
fsub
imul
sub
ins
mov
xchg
bound
push
rcr
cli
(bad)
out
ror
fwait
imul
jbe
clc
dec
jbe
clc
dec
jbe
cli
dec
sbb
rol
cdq
in
mov
dec
jp
push
push
xchg
les
loope
inc
movs
xchg
dec
nop
nop
push
push
xchg
int3
ficom
dec
sbb
xchg
rcr
cli
dec
push
push
xchg
and
jecxz
data16
loope
dec
push
push
xchg
mov
jmp
sbb
ins
dec
fs
dec
dec
jbe
mov
jecxz
ins
mov
test
push
adc
xchg
fwait
imul
xchg
fwait
ins
mov
loope
and
hlt
push
xchg
dec
sbb
xchg
xor
fucomip
ror
shl
sbb
pop
mov
loope
sbb
pushf
idiv
mov
cli
xchg
pop
movs
loope
ins
(bad)
fimul
and
pop
xchg
and
je
xchg
dec
pushf
neg
mov
int3
push
aad
mov
dec
dec
(bad)
or
int3
jmp
(bad)
dec
sbb
xchg
xor
in
jne
pop
jmp
xchg
pop
push
xchg
pop
outs
sbb
sbb
xchg
daa
sbb
xchg
daa
sbb
out
jecxz
call
jecxz
dec
sbb
jne
pop
out
sbb
jecxz
adc
push
out
xchg
pop
push
imul
xchg
mov
push
ins
cmp
imul
sbb
ins
cmp
neg
push
adc
inc
inc
leave
test
dec
sbb
push
je
mov
jecxz
xchg
jbe
ret
or
or
out
jecxz
call
fimul
(bad)
stc
dec
sub
int3
fist
dec
sbb
xchg
daa
sbb
out
jecxz
sahf
mov
push
jp
sbb
xchg
into
fadd
jns
popf
(bad)
adc
dec
sbb
mov
cmps
pop
pop
sbb
gs
xchg
pop
data16
fistp
xchg
rcr
rcr
daa
sbb
xchg
dec
push
push
clc
dec
jbe
clc
dec
jecxz
sahf
mov
push
jp
push
push
xchg
inc
fsubr
jl
cmc
scas
mov
push
ins
cmp
loope
push
jbe
ins
cmp
out
hlt
cmp
dec
sbb
push
cmp
loope
mov
jmp
push
cmps
or
out
hlt
cmc
fisttp
cmps
gs
push
gs
xchg
pop
(bad)
(bad)
fld
push
or
xchg
sti
adc
imul
sbb
add
mov
mov
out
mov
jne
pop
out
sbb
pop
loop
and
jbe
ins
cmp
loope
inc
hlt
mov
push
cmp
das
push
cmps
sub
clc
dec
jbe
ins
cmp
out
hlt
(bad)
fisttp
pop
push
cmp
loope
mov
jno
dec
sbb
push
cmps
push
xchg
push
in
push
mov
loop
adc
xchg
inc
stos
pop
mov
inc
xlat
push
sbb
dec
(bad)
aas
dec
or
fst
jo
not
dec
sbb
mov
dec
dec
test
sbb
sbb
in
je
sbb
gs
xchg
pop
data16
fstp
stos
or
imul
jbe
cli
mov
xchg
daa
sbb
xchg
daa
sbb
repz
push
push
xchg
out
sbb
ror
out
mov
rcr
(bad)
test
sbb
pop
push
jp
pop
push
xchg
les
int
aad
mov
push
repnz
aam
jae
pop
loop
mov
jg
nop
in
sbb
pop
mov
ja
lock
rcr
xchg
out
xchg
inc
sahf
mov
or
add
or
sbb
dec
sbb
dec
cmps
and
scas
jae
imul
xchg
out
xchg
xchg
dec
loope
pop
hlt
loope
dec
sbb
push
inc
xchg
out
xchg
xchg
dec
or
loop
sub
sbb
pushf
push
xchg
dec
pop
sahf
scas
jae
imul
push
int
and
add
imul
xchg
dec
movs
pop
mov
mov
pop
push
pop
loop
xchg
pop
cmc
ffreep
in
pop
dec
sbb
sbb
push
(bad)
pop
loop
(bad)
sub
pop
ins
cmp
xchg
bound
ins
cmp
test
sbb
sbb
loopne
push
dec
ficom
xchg
mov
or
or
xchg
xlat
mov
pop
mov
sbb
in
xchg
xlat
mov
inc
leave
test
dec
sbb
dec
dec
sbb
adc
xlat
mov
xchg
pop
(bad)
les
sbb
hlt
jmp
jbe
pop
out
shl
pop
push
fcmovne
jne
fist
lds
pop
imul
sbb
sbb
call
addr16
dec
sub
test
jle
out
jecxz
fsubr
inc
stos
sbb
dec
das
pop
test
sub
pop
ins
dec
sbb
fiadd
arpl
and
dec
sbb
or
fidivr
(bad)
in
mov
push
sub
lock
mov
xchg
dec
jb
retf
popf
push
sub
xchg
out
mov
pop
push
lds
lahf
fiadd
inc
stos
pop
ins
jbe
out
loop
pop
(bad)
les
sbb
(bad)
jmp
inc
les
sbb
call
ffree
(bad)
stc
cmps
fimul
push
jp
pop
push
xchg
push
dec
dec
sub
push
popf
mov
fcmove
call
mov
lahf
mov
xchg
(bad)
in
aaa
(bad)
(bad)
ficom
ins
sbb
clc
icebp
ins
mov
ficomp
cmp
das
push
movs
outs
adc
push
loop
xchg
cmp
dec
jp
pop
push
xchg
jl
test
mov
jecxz
xchg
xchg
fwait
dec
mov
loope
push
sbb
xchg
mov
jecxz
pop
cdq
jecxz
ins
(bad)
mov
jne
xchg
jecxz
ins
jg
mov
loope
pop
icebp
es
xchg
dec
sbb
clc
or
sbb
pop
mov
loopne
int3
jmp
inc
je
xchg
dec
sbb
test
sbb
sbb
adc
pop
popf
jecxz
ins
(bad)
fstp
scas
dec
sbb
imul
je
(bad)
mov
ins
mov
pop
push
mov
popf
push
inc
popf
fmul
cmp
push
cli
sbb
pop
xchg
mov
push
jp
pop
push
xchg
into
fcom
cli
add
pop
xchg
mov
loop
mov
mul
sbb
adc
sbb
sub
push
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
clc
pop
push
xchg
into
fcom
jp
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
outs
hlt
inc
aam
sbb
icebp
dec
sbb
or
loopne
ins
mov
jbe
mov
inc
pop
xchg
dec
lahf
fiadd
dec
sbb
movs
or
sub
push
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
sbb
xchg
into
fcom
cli
jp
pop
xchg
mov
loop
mov
not
or
adc
sbb
sub
push
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
push
pop
push
xchg
into
fcom
adc
hlt
int
dec
sbb
cwde
dec
sbb
or
popa
cmp
xchg
hlt
jg
xchg
dec
test
imul
mov
lds
dec
imul
sbb
adc
je
arpl
sbb
pop
mov
loopne
sbb
sbb
jp
pop
push
xchg
into
fmul
adc
hlt
xlat
dec
sbb
cwde
dec
sbb
or
popa
or
xchg
mov
loop
mov
test
sbb
adc
pop
push
ins
clc
loopne
ins
mov
cdq
xlat
dec
sbb
push
inc
hlt
pop
xlat
dec
sbb
cwde
dec
sbb
or
popa
or
xchg
mov
loop
mov
div
or
adc
push
push
xchg
and
jecxz
outs
mov
loope
add
push
xchg
into
fcom
jp
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
outs
hlt
in
(bad)
dec
sbb
icebp
dec
sbb
or
loopne
ins
mov
jbe
mov
in
pop
xchg
dec
lahf
fiadd
(bad)
(bad)
pop
or
sub
jmp
shl
mov
lds
xchg
fwait
dec
mov
loope
mov
push
sbb
loopne
ins
mov
jbe
mov
mov
xchg
dec
lahf
fidiv
dec
movs
adc
dec
sbb
gs
in
xor
imul
or
sub
sbb
xchg
aam
out
(bad)
mov
dec
cli
jae
pop
xchg
sbb
imul
pop
popf
fdiv
push
sbb
jp
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
daa
mov
loopne
movs
ins
pop
xchg
dec
lahf
ficomp
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
push
(bad)
dec
sbb
push
inc
hlt
sbb
dec
sbb
cwde
dec
sbb
or
popa
or
xchg
mov
loop
mov
div
adc
fs
mov
ror
imul
jecxz
cli
xlat
in
pop
xchg
sbb
sbb
push
pop
hlt
mov
cwde
dec
sbb
or
popa
or
xchg
mov
loop
mov
test
adc
cli
xchg
pop
and
neg
sbb
sub
push
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
loopne
push
xchg
into
fcom
jp
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
outs
hlt
dec
ror
cmps
icebp
dec
sbb
or
loopne
ins
mov
jbe
mov
dec
pop
xchg
dec
lahf
fiadd
inc
cwde
cdq
xchg
dec
sbb
aaa
test
jecxz
dec
cmc
inc
xchg
dec
sbb
pop
dec
sbb
ins
dec
xchg
out
mov
call
sbb
in
(bad)
cdq
(bad)
ins
mov
sbb
ins
jbe
out
mov
ins
jmp
dec
jmp
sbb
fsub
outs
mov
fcomp
lock
outs
mov
mov
popf
sti
and
xchg
dec
sbb
gs
fdiv
pop
xchg
out
push
sbb
xchg
not
push
add
cld
push
cmps
pop
xchg
pop
icebp
jecxz
ins
(bad)
retf
popf
push
sub
xchg
das
dec
sbb
ins
sbb
nop
ins
sbb
mov
dec
sbb
push
pop
jecxz
push
mov
loope
lock
outs
mov
push
xchg
dec
adc
clc
call
imul
jecxz
sbb
loopne
ins
mov
jbe
mov
push
fimul
dec
jmp
sbb
fsub
outs
mov
fdivr
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
bound
sbb
daa
mov
loopne
movs
js
xchg
dec
lahf
ficomp
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
and
dec
sbb
push
inc
hlt
in
dec
sbb
cwde
dec
sbb
or
popa
or
xchg
mov
loop
mov
test
adc
pop
test
jecxz
int
push
xchg
mov
jmp
jecxz
ins
je
(bad)
ins
mov
adc
fnclex
loope
les
xchg
bound
push
movs
fwait
pop
xchg
dec
xchg
pop
mov
cdq
out
mov
test
lock
ins
mov
adc
add
jmp
push
sbb
pop
dec
sbb
pop
mov
loopne
inc
lahf
dec
xchg
dec
sbb
pop
mov
loopne
les
loope
pop
je
bound
sbb
pop
mov
hlt
jne
dec
sbb
push
inc
xchg
xchg
data16
loope
test
pop
adc
push
out
xchg
fxtract
les
xchg
bound
jecxz
ins
(bad)
cdq
fisubr
jecxz
push
rcr
popf
cli
cdq
aam
mov
xchg
push
dec
call
idiv
jno
push
pop
enter
mov
mul
mov
loope
mov
xchg
pop
mov
test
loope
push
jecxz
bound
loopne
ins
mov
jbe
mov
lock
xchg
dec
lahf
fimul
(bad)
(bad)
push
or
sbb
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
test
push
xchg
into
fcom
jp
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
bound
sbb
daa
mov
loopne
movs
fcomp
dec
lahf
ficomp
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
test
dec
sbb
push
inc
xchg
out
mov
clc
in
loope
mov
sbb
pop
mov
cdq
push
xchg
mov
dec
ins
clc
in
ins
mov
neg
jecxz
adc
jecxz
ins
inc
fcom
pop
retf
ins
and
jecxz
outs
mov
loope
add
into
fcom
jp
pop
push
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
bound
sbb
daa
mov
loopne
movs
xor
xchg
dec
lahf
ficomp
(bad)
(bad)
dec
jb
push
sub
push
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
mov
push
xchg
into
fcom
jp
and
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
daa
mov
loopne
movs
les
xchg
dec
lahf
ficomp
dec
jecxz
outs
mov
loope
mov
push
xchg
into
fcom
sub
adc
xchg
mov
jecxz
ins
(bad)
(bad)
loopne
sbb
sub
push
xchg
aam
out
mov
arpl
dec
movs
jge
dec
sbb
gs
xchg
das
mov
loopne
sbb
nop
adc
push
xchg
into
fmul
jp
and
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
bound
sbb
daa
mov
loopne
movs
inc
and
movs
add
xchg
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
sub
inc
xchg
out
gs
xchg
fwait
push
mov
loope
mov
stc
lods
dec
sbb
cwde
dec
sbb
or
popa
or
xchg
mov
loop
mov
not
adc
push
jae
push
sub
push
xchg
aam
out
mov
arpl
dec
movs
jge
dec
sbb
gs
xchg
das
mov
loopne
sbb
nop
loopne
push
xchg
into
fmul
cli
fs
pop
xchg
mov
loop
mov
imul
sbb
adc
in
xchg
push
movs
push
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
lea
je
bound
sbb
daa
mov
loopne
movs
pushf
and
movs
and
xchg
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
inc
lods
dec
sbb
push
inc
je
bound
sbb
daa
mov
loopne
movs
push
and
cmc
push
daa
xchg
dec
jmp
sbb
fsub
outs
mov
fdivr
and
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
daa
mov
loopne
movs
or
xchg
dec
lahf
ficomp
mov
dec
sbb
loopne
ins
mov
jbe
mov
enter
lahf
fiadd
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
int
dec
sbb
push
inc
xchg
out
xchg
mov
in
pop
xchg
mov
loop
mov
imul
jo
push
adc
sbb
sub
push
xchg
aam
out
mov
arpl
dec
jecxz
outs
mov
loope
fsub
push
xchg
into
fcom
jp
and
xchg
hlt
hlt
sbb
imul
lahf
push
pop
cmp
xchg
sbb
loope
and
dec
not
jo
push
adc
in
xchg
push
movs
cmp
xchg
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
and
inc
je
jge
sbb
daa
mov
loopne
movs
xor
xchg
dec
lahf
ficomp
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
loopne
ins
mov
sbb
inc
popf
lock
jp
and
xchg
hlt
push
push
xchg
dec
test
imul
sbb
outs
hlt
mov
dec
sbb
icebp
dec
sbb
or
loopne
ins
mov
jbe
mov
mov
xchg
dec
lahf
fiadd
dec
jecxz
outs
mov
loope
hlt
and
xchg
into
fcom
clc
dec
jbe
clc
dec
jbe
clc
dec
je
xchg
dec
pop
loope
inc
hlt
sub
pop
movs
jecxz
ins
(bad)
in
pop
(bad)
(bad)
(bad)
daa
mov
loopne
movs
movs
daa
xchg
dec
jbe
pop
lock
dec
ins
clc
loopne
ins
mov
stos
jp
loope
jp
and
imul
jecxz
mov
clc
loopne
ins
mov
int
dec
sbb
in
sbb
gs
xchg
fwait
cs
loope
mov
sub
sbb
sbb
lock
mov
adc
mov
movs
loope
mov
fmul
adc
push
sbb
pop
xchg
dec
dec
mov
sbb
in
ins
mov
fst
push
jns
xchg
out
mov
fstp
and
xchg
fwait
ins
mov
loope
movs
aam
xchg
dec
jbe
cli
retf
repz
xchg
rcr
cli
dec
sbb
adc
lahf
fimul
(bad)
pop
loope
dec
outs
mov
jge
sbb
fsub
sbb
adc
je
jl
sbb
dec
mov
repnz
xchg
and
hlt
(bad)
jge
jecxz
push
ins
xchg
out
mov
fxch
test
dec
sbb
sbb
rcr
mov
sub
push
xchg
mov
loope
ins
(bad)
fistp
ins
dec
xchg
pop
call
popf
jb
xchg
fwait
add
adc
sahf
dec
sbb
xchg
push
mov
loope
mov
lds
mov
inc
stos
dec
sbb
mov
xchg
pop
in
loope
ins
(bad)
in
push
fisttp
or
xchg
les
loope
in
loope
ins
movs
sub
xchg
dec
xchg
dec
call
xchg
mov
(bad)
dec
sbb
jecxz
mov
test
jecxz
mov
stos
xor
and
xchg
les
loope
aad
loope
movs
call
dec
call
xchg
mov
pop
cmp
dec
adc
ror
setne
sub
push
xchg
mov
loope
ins
(bad)
(bad)
movs
pop
push
jp
sub
xchg
les
xchg
push
in
push
daa
or
xchg
rcr
jp
es
xchg
movs
jl
xchg
dec
dec
neg
ja
push
cli
dec
sbb
stos
outs
mov
dec
cli
loop
pop
xchg
and
je
xchg
dec
pushf
idiv
mov
cmp
push
cmp
dec
jp
sub
xchg
jl
imul
dec
sbb
adc
hlt
in
mov
xchg
push
in
push
and
xchg
fwait
outs
mov
loope
rcr
jp
sub
xchg
mov
mov
jecxz
daa
fucom
loope
mov
xchg
outs
mov
loope
vpsraw
test
loope
in
loope
ins
sbb
loope
movs
cli
out
ins
mov
fidiv
mov
pop
push
cmp
dec
jp
sub
xchg
(bad)
in
push
fld
push
movs
sbb
xchg
dec
je
jl
sbb
pop
mov
loope
sbb
sbb
push
in
push
rcr
pop
enter
mov
neg
je
push
jp
repz
les
xchg
push
in
push
daa
pop
je
rcr
jp
and
add
mov
out
mov
fwait
sub
sbb
push
enter
mov
push
xchg
dec
jp
pop
movs
loop
ins
dec
sbb
push
sti
xchg
pop
and
fistp
ins
dec
push
imul
pop
xchg
(bad)
in
push
fist
ins
sbb
jecxz
pop
enter
mov
xchg
pop
cmc
loop
ins
sbb
jbe
clc
dec
jbe
clc
dec
xchg
fwait
outs
mov
loope
daa
sbb
dec
js
push
fwait
lea
call
mov
ins
mov
and
mov
mov
jecxz
cmp
xchg
rcr
jp
and
xchg
into
fmul
push
enter
mov
cmc
mov
dec
sbb
pop
mov
loope
sbb
sbb
cwde
jnp
push
sbb
je
xchg
dec
sbb
sar
adc
jnp
ins
mov
xchg
pop
sub
loope
jno
ins
pop
inc
(bad)
push
and
hlt
sub
push
adc
mov
jecxz
out
je
bound
test
sbb
loop
mov
dec
shl
pop
cli
daa
repnz
xchg
rcr
jp
cmps
loope
into
fcom
scas
mov
push
xchg
cmp
popf
aaa
shl
loope
dec
test
ins
mov
lahf
push
adc
push
xchg
cmps
adc
ins
dec
popf
fldcw
sbb
pop
enter
mov
imul
jmp
sbb
js
ins
mov
fld
movs
dec
sub
clc
mov
mov
push
in
push
mov
mov
adc
push
sbb
and
mov
inc
leave
test
sbb
mov
xchg
inc
xchg
mov
cmc
inc
xchg
out
stos
xchg
pop
(bad)
(bad)
(bad)
gs
xchg
pop
jle
fndisi(8087
out
hlt
mov
dec
sbb
push
sub
adc
sub
xchg
(bad)
fidivr
sbb
xchg
push
sti
xchg
xlat
movs
xchg
fldcw
or
sbb
push
sbb
dec
imul
jns
push
sbb
popf
icebp
mov
cli
pop
loopne
cli
dec
loop
popf
adc
popf
cli
dec
jmp
sbb
add
push
sbb
sbb
mov
dec
adc
sbb
sbb
or
sbb
sub
xchg
into
fcom
ins
cmp
(bad)
into
fcomp
ret
sub
dec
xchg
out
mov
fldcw
adc
and
dec
sbb
movs
in
xchg
dec
jecxz
add
ins
rcr
inc
stos
dec
outs
rcr
sbb
sbb
popf
cli
pop
loopne
or
sbb
popf
adc
or
push
jl
push
pop
or
dec
clc
dec
dec
jbe
sbb
dec
jbe
jp
das
push
xchg
(bad)
ficom
push
daa
jecxz
jp
das
push
xchg
rcr
sbb
sbb
jl
push
xchg
(bad)
in
push
fist
leave
test
dec
sbb
sbb
sar
sbb
iret
inc
mov
cmps
call
stos
xchg
fwait
sub
sbb
fwait
lods
jecxz
rcl
push
pop
enter
mov
xchg
pop
(bad)
cld
loope
sbb
sbb
add
sbb
sbb
mov
xchg
dec
xchg
out
mov
fld
mov
fidiv
jecxz
lock
push
adc
add
loope
mov
adc
sub
pop
push
fld
push
or
mov
add
inc
sbb
pop
enter
mov
xchg
pop
(bad)
cld
loope
sbb
sbb
fwait
lea
shl
neg
adc
push
cmp
loope
mov
adc
sub
xchg
(bad)
in
push
fld
push
or
sub
icebp
inc
pop
sbb
int
inc
xlat
push
sbb
push
xchg
movs
js
xchg
dec
dec
dec
(bad)
push
sub
and
test
(bad)
fisub
gs
xchg
fwait
xchg
jecxz
sbb
sbb
jp
sub
aaa
(bad)
(bad)
ficom
ror
and
xchg
cmp
xchg
push
daa
adc
dec
dec
out
jp
movs
loope
into
fcom
cli
sbb
pop
xchg
push
hlt
sbb
inc
xchg
out
gs
xchg
fwait
bound
in
shr
fdivr
add
pop
xchg
rcr
jp
sub
xchg
into
fcom
jp
sub
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
movs
xchg
xchg
dec
sbb
je
cdq
repnz
mov
xchg
push
movs
je
xchg
dec
movs
adc
dec
sbb
gs
in
xor
push
sub
sbb
xchg
aam
out
shl
cli
adc
mov
dec
jp
sub
xchg
into
fmul
jp
sub
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
je
arpl
sbb
pop
dec
cld
loope
sbb
sbb
push
inc
xchg
out
mov
mov
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
hlt
fldenv
dec
sbb
or
popa
aaa
jp
das
push
xchg
hlt
jg
xchg
dec
test
imul
mov
lds
xchg
mov
lds
lahf
fiadd
pop
in
pop
xchg
rcr
cli
ins
in
pop
xchg
rcr
jp
das
push
xchg
into
fmul
adc
hlt
jge
dec
sbb
cwde
dec
sbb
or
popa
or
push
out
pop
xchg
rcr
jp
das
push
xchg
into
fcom
cli
inc
in
pop
xchg
rcr
jp
das
push
xchg
into
fcom
adc
hlt
cmp
cwde
dec
sbb
or
popa
or
push
out
pop
xchg
rcr
jp
das
push
xchg
into
fcom
cli
dec
in
pop
xchg
rcr
jp
das
push
xchg
into
fcom
jp
cs
xchg
hlt
push
push
xchg
dec
test
imul
sbb
fs
leave
mov
dec
sbb
or
sbb
ins
mov
jbe
mov
sbb
ins
mov
neg
push
adc
pop
push
pop
enter
mov
test
adc
sbb
gs
xchg
fwait
jp
jecxz
sbb
sbb
cwde
dec
sbb
or
popa
or
push
out
pop
xchg
rcr
jp
cs
xchg
into
fcom
cli
push
repnz
xchg
rcr
jp
cs
xchg
into
fcom
jp
cs
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
je
bound
sbb
pop
dec
cld
loope
sbb
sbb
push
inc
xchg
out
mov
pop
cs
xchg
hlt
push
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
jecxz
sahf
rcr
cli
arpl
pop
xchg
rcr
jp
sub
push
jp
sub
push
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
je
bound
sbb
pop
dec
cld
loope
sbb
sbb
push
inc
xchg
out
mov
shr
xchg
dec
test
imul
sbb
pop
je
popa
nop
ins
sbb
sbb
push
inc
hlt
jns
dec
sbb
jp
sbb
or
fisttp
mov
sbb
pop
lock
ins
mov
jbe
mov
sbb
ins
mov
test
sbb
adc
sbb
sub
push
xchg
aam
out
mov
arpl
dec
xchg
fwait
xchg
lods
jecxz
ret
das
xchg
dec
lahf
ficomp
les
xchg
push
and
xchg
fwait
xchg
lods
jecxz
ret
das
xchg
dec
lahf
ficomp
dec
movs
adc
dec
sbb
gs
in
xor
jbe
mov
sbb
ins
mov
neg
adc
pop
jge
push
sub
push
xchg
aam
out
mov
arpl
dec
movs
jge
dec
sbb
gs
xchg
das
dec
cld
loope
sbb
nop
ins
sbb
mov
dec
sbb
push
pop
je
jge
sbb
pop
dec
cld
loope
sbb
sbb
push
inc
jbe
clc
dec
jbe
clc
dec
jbe
cli
dec
sbb
rcr
hlt
and
pop
mov
loope
int3
repnz
ror
pop
dec
cld
loope
sbb
sbb
xchg
shl
ret
push
jb
jecxz
ins
clc
loopne
ins
mov
mov
mov
loope
movs
sub
xchg
dec
movs
fist
les
xchg
push
jl
pop
jns
xchg
out
xchg
mov
inc
xlat
push
sbb
sbb
repnz
jo
movs
ss
les
xchg
push
into
mov
push
sbb
sub
dec
jp
xor
xchg
(bad)
dec
push
pop
sbb
pop
sbb
mov
ins
mov
icebp
xchg
fs
sbb
pushf
in
mov
fnstcw
aaa
push
xchg
sbb
sbb
sub
sub
sbb
sbb
and
sbb
mov
push
clc
dec
xchg
fwait
ss
loope
movs
inc
xor
dec
sbb
pop
stc
loope
ins
sbb
sbb
mov
sbb
adc
lahf
fidiv
hlt
push
push
xchg
and
xchg
fwait
outs
mov
loope
rcr
jp
ss
xchg
(bad)
in
push
fndisi(8087
daa
in
loope
ins
push
xchg
fwait
es
loope
movs
out
out
mov
ficomp
xor
push
xchg
and
xchg
fwait
outs
mov
loope
movs
pop
xor
mov
loope
rcr
jp
xor
xchg
movs
(bad)
cli
ins
mov
fwait
or
sbb
pop
clc
dec
xchg
fwait
sub
lods
xor
(bad)
in
push
fcmovnu
pop
cmc
loop
ins
or
xchg
mov
pop
xchg
dec
sbb
das
aad
loope
dec
push
imul
pop
xchg
int3
repz
aad
sbb
pop
cmc
loop
ins
sbb
jecxz
pop
enter
mov
xchg
pop
cmc
loop
ins
sbb
jbe
clc
dec
jbe
clc
dec
xchg
fwait
outs
mov
loope
daa
sbb
or
push
fwait
lea
call
mov
ins
mov
inc
mov
xchg
jp
xchg
mov
mov
cmp
xchg
rcr
jp
xor
xchg
into
fmul
push
enter
mov
cmc
mov
dec
sbb
pop
mov
loope
sbb
sbb
push
data16
sbb
je
xchg
dec
sbb
pushf
data16
adc
arpl
ins
mov
xchg
pop
xor
loope
jno
ins
pop
inc
jmp
and
hlt
cmc
mov
dec
in
push
and
xchg
fwait
add
hlt
jge
dec
sbb
xchg
and
xchg
fwait
add
pop
scas
ins
mov
ficomp
dec
adc
pop
enter
mov
dec
jp
jmp
ins
into
fcom
fwait
lea
call
jecxz
push
mov
loope
enter
mov
idiv
sbb
adc
xchg
fwait
push
mov
loope
mov
mov
jecxz
inc
cwde
jecxz
sbb
sbb
ins
clc
mov
ins
mov
sar
pop
push
jp
ss
xchg
sbb
sbb
jp
xor
xchg
into
fmul
fwait
lea
cli
inc
repnz
xchg
movs
mov
dec
xchg
or
jecxz
adc
sbb
mov
jecxz
pop
fwait
jecxz
adc
cdq
sub
popf
jp
dec
dec
ins
clc
mov
ins
mov
mov
mov
popf
push
inc
popf
(bad)
js
push
les
fistp
xchg
dec
sbb
adc
xchg
fwait
es
loope
movs
inc
xor
dec
xchg
out
mov
fprem
dec
jecxz
ss
loope
xor
outs
mov
idiv
and
mov
sbb
mov
out
mov
leave
test
sbb
mov
xchg
inc
call
icebp
sar
sbb
shl
pop
push
imul
xchg
(bad)
dec
out
sbb
push
shl
neg
mov
push
rcr
mov
dec
sbb
jp
xor
adc
sbb
pop
shl
idiv
push
pop
or
dec
clc
dec
dec
jbe
sub
jbe
jp
xor
cmps
rol
push
gs
xchg
pop
data16
(bad)
hlt
pop
mov
mov
dec
jp
cmp
xchg
sbb
loope
dec
sbb
push
in
push
(bad)
pop
loop
adc
push
sbb
push
xchg
movs
cmp
xchg
dec
dec
dec
sub
int3
fist
xchg
mov
push
jp
xor
pop
cmp
das
push
cmps
push
xchg
push
in
push
and
xchg
fwait
xchg
mov
hlt
ins
mov
mov
adc
enter
mov
idiv
jecxz
adc
sbb
out
xchg
out
jns
xchg
out
mov
fprem
dec
dec
imul
mov
mov
adc
ffree
(bad)
stc
popf
jle
dec
mov
sbb
in
push
sub
pop
ins
dec
sbb
cli
(bad)
in
push
fist
and
dec
repnz
xchg
rcr
movs
dec
xor
jl
jbe
cli
push
sbb
sahf
and
sbb
and
popf
cli
pop
loopne
lea
dec
cli
mov
pop
xchg
rcr
movs
xor
xchg
dec
lahf
fimul
daa
sbb
ror
ins
js
mov
dec
hlt
popf
mov
jne
push
xchg
sub
pop
ins
inc
stos
pop
ins
into
in
out
ret
push
sbb
dec
sub
(bad)
in
push
(bad)
push
je
daa
sbb
xchg
daa
sbb
je
and
jbe
clc
dec
jbe
clc
pop
hlt
fnstcw
int3
repz
sbb
ins
js
scas
ror
add
sbb
ins
js
mov
dec
hlt
adc
jl
xchg
push
daa
sbb
sub
cld
pop
push
jp
xor
xchg
daa
sbb
sub
movs
xor
xchg
daa
sbb
sub
xchg
xor
xchg
(bad)
in
push
(bad)
jbe
ins
js
mov
dec
hlt
fnstsw
sbb
ins
js
mov
dec
hlt
lods
mov
sbb
ins
js
lods
ror
mov
xchg
sbb
ins
js
scas
ror
lea
add
push
xchg
daa
sbb
sub
xor
xchg
daa
sbb
sub
pop
push
jp
xor
xchg
(bad)
in
jne
pop
loop
mov
les
sub
cmps
fldcw
ss
dec
jbe
les
sub
cmps
aad
pop
xchg
movs
pop
ss
dec
movs
cmps
ret
dec
sbb
jne
pop
out
mov
pop
mov
ja
dec
mov
sbb
jbe
ins
js
mov
dec
hlt
fnsave
call
xchg
pop
xchg
daa
loopne
cmps
movs
mov
xchg
movs
movs
cmp
js
scas
ror
xor
cwde
xchg
pop
xchg
daa
loopne
cmps
int
pop
xchg
movs
mov
xchg
dec
xchg
out
stos
xchg
pop
outs
(bad)
(bad)
sub
cmp
push
push
xor
pop
xchg
and
jbe
ins
js
mov
dec
hlt
jns
dec
sbb
outs
mov
add
or
sbb
xor
pop
xchg
and
jbe
ins
js
mov
mov
sbb
outs
mov
ss
push
push
xor
leave
xchg
ror
loop
js
mov
dec
hlt
add
rcl
loope
ins
mov
xchg
movs
sbb
xchg
dec
mov
jbe
les
mov
sub
mov
loopne
cmps
leave
lods
pop
xchg
movs
sar
dec
mov
jbe
les
mov
sub
cld
pop
push
jp
cmp
xchg
(bad)
in
push
fild
mov
ja
lock
sbb
xchg
push
in
push
and
jecxz
call
fdivr
mov
hlt
je
mov
popf
push
pop
mov
lahf
gs
xchg
daa
sbb
jp
cmp
xchg
int3
repz
xlat
mov
cmp
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
sbb
loopne
xlat
mov
aaa
pop
bound
je
xchg
int
jbe
mov
icebp
pop
xchg
and
hlt
mov
dec
sbb
(bad)
std
pop
push
clc
dec
jecxz
cmps
loop
push
clc
dec
dec
je
(bad)
pop
out
or
popf
jp
dec
je
daa
or
dec
pushf
dec
cli
xor
repz
push
jp
cmp
xchg
out
sbb
gs
xchg
pop
jle
(bad)
sub
cmp
mov
pop
and
jbe
dec
sbb
sbb
in
xlat
mov
jbe
clc
pop
je
xchg
int
jbe
mov
icebp
pop
xchg
daa
sbb
mov
sub
sbb
nop
daa
sbb
xchg
daa
sbb
sbb
xchg
daa
sbb
cs
sbb
clc
dec
jbe
clc
inc
jbe
jp
cmp
xchg
(bad)
fidiv
jbe
ins
js
mov
dec
hlt
shl
mov
sub
mov
pop
and
je
and
jbe
clc
gs
xchg
dec
dec
jbe
mov
icebp
pop
xchg
daa
sbb
push
push
lods
pop
xchg
int3
repz
dec
sbb
xchg
mov
sub
mov
pop
and
je
and
jbe
clc
gs
xchg
dec
dec
jbe
mov
icebp
pop
xchg
daa
sbb
adc
sbb
xor
scas
pop
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
or
inc
dec
sbb
cli
in
sbb
xchg
daa
xor
xchg
dec
sbb
cli
fwait
lock
xchg
and
jbe
jp
cmp
xchg
out
adc
ins
js
mov
dec
jbe
ins
js
scas
ror
push
cli
xor
mov
ss
dec
sbb
ret
repnz
cld
jg
sbb
xchg
movs
or
xchg
dec
mov
je
mov
sub
mov
jle
nop
js
cmp
push
clc
pop
je
xchg
int
jbe
mov
lock
xchg
daa
sbb
dec
imul
xchg
int3
(bad)
test
push
clc
dec
je
xchg
dec
sbb
jp
cmp
xchg
and
jbe
cli
push
sbb
idiv
or
not
sbb
clc
dec
jecxz
cmps
loop
push
clc
dec
jecxz
repnz
pop
push
cli
popa
sbb
jbe
dec
sbb
clc
aaa
je
xchg
int
jbe
mov
lock
xchg
daa
sbb
in
sbb
xor
lods
pop
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
sub
xor
xchg
dec
jbe
cli
out
push
xchg
and
je
xchg
int
jbe
mov
lock
xchg
daa
sbb
test
sbb
xor
pop
xchg
cmc
movaps
or
xchg
push
movs
push
in
mov
push
ins
js
mov
dec
jbe
ins
js
scas
ror
push
clc
jbe
clc
xchg
dec
sbb
cli
dec
sbb
cli
dec
sbb
ret
repnz
cld
jg
sbb
xchg
movs
in
cmp
and
sbb
jge
pop
push
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
or
adc
push
cli
mov
push
xchg
and
je
xchg
dec
dec
jbe
mov
icebp
pop
xchg
daa
sbb
cmp
sbb
xor
lods
pop
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
or
cmc
and
je
xchg
dec
sbb
xchg
dec
sbb
cli
pop
lock
xchg
and
jbe
jp
aas
push
xchg
out
sub
ror
push
ins
js
mov
dec
jbe
ins
js
scas
ror
push
cli
mov
push
xchg
and
jbe
cli
dec
sbb
ret
repnz
cld
jg
sbb
xchg
movs
and
aas
or
xchg
push
in
push
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
or
les
je
xchg
dec
sbb
xchg
dec
sbb
cli
inc
lock
xchg
and
jbe
jp
ds
xchg
out
mov
ins
js
mov
dec
jbe
ins
js
scas
ror
push
cli
popa
sbb
push
xchg
dec
jbe
cli
dec
sbb
ret
out
ror
pop
jle
sbb
xchg
dec
sbb
jp
ds
xchg
out
cwde
scas
ror
push
ins
js
mov
dec
jbe
ins
js
scas
ror
push
cli
iret
sbb
xchg
and
jbe
cli
dec
sbb
ret
lods
ror
pop
jle
sbb
xchg
dec
sbb
jp
ds
xchg
out
add
mov
dec
jecxz
cmps
loop
push
clc
dec
jecxz
repnz
pop
push
clc
push
jbe
cli
xchg
sbb
xchg
daa
or
dec
pushf
dec
cli
xchg
in
pop
xchg
and
je
nop
dec
sbb
aam
sbb
xor
pop
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
sub
add
mul
jbe
cli
dec
sbb
ret
out
ror
pop
jle
sbb
xchg
dec
sbb
jp
ds
xchg
out
cmp
ror
push
ins
js
mov
dec
jbe
ins
js
scas
ror
or
(bad)
sbb
xchg
and
jbe
cli
dec
sbb
ret
cmc
ror
sbb
nop
enter
mov
imul
cwde
xor
xchg
mov
xchg
fnstcw
in
ins
adc
push
sbb
dec
(bad)
or
jne
push
cli
mov
imul
ins
(bad)
fidiv
mov
imul
ins
mov
fiadd
dec
xchg
out
mov
fprem
dec
jecxz
call
push
xchg
(bad)
in
jne
pop
repnz
dec
test
sbb
clc
dec
jecxz
cmps
loop
push
clc
dec
dec
xchg
xlat
mov
pop
sbb
push
pop
out
ret
je
and
je
arpl
sbb
jnp
pop
push
cli
dec
push
push
xchg
movs
cmp
xchg
dec
mov
je
mov
sub
sbb
in
xlat
mov
jbe
clc
pop
je
xchg
int
jbe
cmps
pop
push
cli
scas
icebp
pop
xchg
daa
sbb
jl
sbb
xor
pop
xchg
(bad)
in
push
(bad)
sub
cmp
mov
pop
and
jbe
dec
sbb
sbb
in
xlat
mov
jbe
clc
pop
je
xchg
int
jbe
mov
icebp
pop
xchg
daa
sbb
cmp
push
xor
sbb
nop
daa
sbb
xchg
daa
sbb
sbb
xchg
daa
sbb
cs
sbb
clc
dec
jbe
clc
inc
jbe
jp
cmp
xchg
(bad)
fidiv
jbe
ins
js
mov
dec
hlt
push
mov
sbb
xchg
mov
sub
mov
jle
nop
js
xchg
or
dec
pushf
dec
cli
xchg
in
pop
xchg
and
jbe
jp
cmp
xchg
out
hlt
mov
dec
xchg
out
mov
fsqrt
iret
lock
xchg
daa
sbb
ror
ins
js
mov
dec
hlt
in
dec
sbb
out
mov
je
xchg
dec
sbb
cmps
movs
mov
xchg
movs
clc
add
call
cmps
cmp
je
daa
sbb
push
ins
js
mov
dec
hlt
(bad)
daa
sbb
xchg
and
jecxz
jp
pop
push
jp
add
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
sub
xor
xchg
dec
jbe
clc
pop
jbe
cli
dec
sbb
ret
out
ror
xchg
jle
sbb
xchg
movs
mov
sahf
and
sbb
jg
sbb
gs
xchg
pop
jp
(bad)
sub
cmp
mov
jle
nop
dec
sbb
clc
jno
or
jecxz
push
xchg
and
je
arpl
sbb
pop
mov
hlt
inc
lea
mov
jp
jmp
loope
jns
pop
xchg
daa
sbb
cmps
or
adc
push
clc
and
dec
sbb
xchg
dec
sbb
cli
push
lock
xchg
and
jbe
jp
add
xchg
out
push
jmp
clc
dec
jecxz
cmps
loop
push
clc
dec
jecxz
(bad)
std
pop
push
clc
pop
jbe
cli
retf
xchg
and
je
xchg
dec
dec
jbe
mov
icebp
pop
xchg
daa
sbb
jo
sbb
xor
pop
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
or
outs
dec
sbb
cli
in
sbb
xchg
daa
js
xchg
dec
sbb
cli
push
lock
xchg
and
jbe
jp
add
xchg
out
in
mov
dec
popf
fst
sbb
clc
dec
jecxz
cmps
loop
push
clc
dec
jecxz
(bad)
std
pop
push
clc
pop
jbe
cli
hlt
sbb
xchg
and
je
xchg
dec
dec
jbe
mov
icebp
pop
xchg
daa
sbb
clc
push
sbb
xor
scas
pop
xchg
daa
sbb
cmps
jns
pop
xchg
daa
sbb
cmps
or
jbe
sbb
cli
stos
sbb
xchg
daa
add
dec
sbb
cli
retf
neg
(bad)
repz
push
jp
add
xchg
out
pusha
scas
ror
push
ins
js
mov
dec
jbe
ins
js
scas
ror
push
cli
mov
push
xchg
and
jbe
cli
dec
sbb
ret
cmc
ror
cld
jg
sbb
xchg
movs
in
xchg
dec
mov
je
mov
sub
mov
jle
nop
sahf
push
xchg
dec
jbe
clc
pop
je
xchg
int
jbe
call
cli
inc
lock
xchg
and
hlt
mov
mov
pop
push
sbb
jbe
ins
js
mov
dec
jbe
ins
js
scas
ror
push
clc
gs
clc
pop
je
xchg
int
jbe
mov
lock
xchg
and
hlt
popf
(bad)
dec
sbb
mov
dec
jecxz
cmps
loop
push
clc
dec
jecxz
repnz
pop
push
clc
push
jbe
clc
adc
cli
dec
sbb
ret
out
ror
pop
jle
sbb
xchg
dec
sbb
jp
add
xchg
out
cmp
ror
push
ins
js
mov
dec
jbe
ins
js
scas
ror
or
(bad)
sbb
xchg
and
jbe
cli
dec
sbb
ret
cmc
ror
sbb
nop
or
xchg
dec
mov
imul
mov
sub
mov
int3
test
dec
sbb
dec
dec
sub
int3
repz
xchg
and
jbe
clc
dec
jbe
cli
dec
sbb
adc
push
push
xchg
(bad)
ficomp
push
dec
sbb
clc
dec
dec
idiv
sbb
sbb
sbb
les
lahf
jnp
dec
fistp
dec
sbb
xchg
int3
(bad)
xlat
mov
dec
xchg
xlat
mov
loope
pop
je
push
nop
dec
sbb
jp
mov
push
stos
adc
ins
aad
sbb
out
je
jns
sbb
into
cmps
pop
push
ins
cmp
loope
inc
hlt
and
mov
popf
push
push
xchg
pop
push
fsubr
daa
sbb
pop
out
mov
push
cli
jb
pop
xchg
and
hlt
repz
push
xchg
out
mov
fxch
adc
push
sbb
pop
xchg
dec
dec
dec
sub
inc
rol
cmc
xchg
dec
xchg
dec
jmp
sbb
loopne
ins
mov
fcom
mov
dec
je
push
nop
ins
sbb
sbb
lods
push
sbb
sub
push
xchg
aam
out
sahf
xchg
inc
ins
int
loope
cmp
push
pop
enter
mov
imul
push
sbb
adc
jecxz
out
je
push
nop
ins
sbb
sbb
bound
push
int
loope
cmp
push
pop
enter
mov
not
push
sbb
adc
jecxz
out
je
push
nop
ins
sbb
sbb
out
mov
imul
xchg
fwait
xchg
mov
loope
movs
add
xchg
dec
popf
fmul
add
adc
jecxz
out
je
push
nop
ins
sbb
sbb
out
mov
imul
xchg
fwait
xchg
mov
loope
movs
clc
or
inc
imul
xchg
rcr
jp
or
xchg
int
loope
cmp
push
pop
enter
mov
mul
sbb
adc
pushf
arpl
imul
xchg
rcr
jp
or
xchg
int
loope
cmp
push
pop
enter
mov
not
pop
sbb
adc
jecxz
out
je
push
nop
ins
sbb
sbb
fs
adc
xchg
int
loope
cmp
push
pop
enter
mov
neg
pop
sbb
adc
jecxz
out
je
push
nop
ins
sbb
sbb
xchg
daa
sbb
fsub
neg
cdq
push
ins
mov
dec
cli
dec
mov
xchg
movs
pop
cli
ins
mov
pop
jns
sbb
inc
lea
cli
or
inc
jecxz
mov
fidiv
push
sbb
adc
in
xchg
push
movs
cs
mov
inc
pop
(bad)
sbb
mov
dec
dec
sbb
adc
lods
dec
fs
sub
push
xchg
mov
xchg
fstp
mov
sbb
les
xchg
dec
xchg
dec
xchg
dec
outs
push
dec
imul
mov
adc
push
cmp
je
push
hlt
lea
sub
xchg
adc
pop
(bad)
sbb
mov
adc
xchg
push
dec
dec
sub
sub
(bad)
in
jmp
gs
xchg
push
(bad)
in
pop
(bad)
(bad)
fidiv
(bad)
pop
push
pop
enter
mov
test
sbb
jp
push
push
xchg
hlt
adc
xchg
dec
test
imul
in
push
jecxz
das
mov
imul
xchg
rcr
jp
or
xchg
(bad)
in
das
(bad)
(bad)
ficomp
ins
dec
imul
xchg
rcr
jp
or
xchg
int
in
push
jecxz
out
je
push
nop
ins
sbb
sbb
das
mov
imul
xchg
rcr
jp
or
xchg
cmc
sar
dec
jmp
sbb
cld
jmp
adc
out
out
mov
imul
xchg
fwait
jg
jecxz
ret
or
mov
loope
cmp
push
pop
enter
mov
test
sbb
adc
out
out
mov
imul
xchg
fwait
jg
jecxz
ret
or
mov
out
out
mov
imul
xchg
fwait
jg
jecxz
ret
or
mov
loope
cmp
push
pop
enter
mov
not
pop
sbb
adc
out
out
mov
imul
xchg
fwait
jg
jecxz
ret
or
mov
out
out
mov
imul
xchg
fwait
jg
jecxz
ret
or
mov
loope
cmp
push
pop
enter
mov
mul
sbb
adc
out
out
mov
imul
xchg
fwait
jg
jecxz
ret
or
mov
loope
cmp
push
pop
enter
mov
imul
sbb
cli
cmp
cdq
repz
dec
jp
lock
int3
repnz
(bad)
dec
sbb
loop
pop
push
cli
inc
fistp
mov
fiadd
mov
sahf
das
mov
push
jmp
cdq
movs
cmp
in
and
adc
popf
fdivr
sub
(bad)
je
and
sbb
lock
loope
mov
pop
mov
fcom
pop
mov
push
xchg
movs
neg
dec
pushf
mov
xchg
inc
cwde
lods
nop
dec
sbb
das
mov
loope
ja
fwait
cmps
dec
sbb
adc
jecxz
ins
mov
adc
gs
loope
mov
push
sbb
xchg
fwait
push
jecxz
ret
cmc
ror
fwait
outs
mov
loope
movs
fadd
xchg
dec
lahf
ficomp
mov
push
out
hlt
popa
mov
movs
push
fiadd
jl
(bad)
fucomp
js
out
push
mov
aaa
pop
(bad)
int3
inc
sbb
in
ins
inc
fwait
and
sub
imul
xchg
and
xchg
fwait
outs
mov
loope
movs
dec
push
xchg
dec
popf
lock
sbb
cli
(bad)
cmc
ror
fwait
outs
mov
loope
movs
and
xchg
dec
lahf
fimul
dec
sbb
pop
enter
mov
div
pop
sbb
adc
xchg
fwait
outs
mov
loope
and
xchg
fwait
outs
mov
loope
movs
sbb
xchg
dec
je
jns
sbb
pop
mov
loope
sbb
sbb
push
pop
xchg
fwait
outs
mov
loope
movs
inc
or
mov
loope
lea
dec
pop
enter
mov
jbe
cmps
pop
push
pop
enter
mov
not
sbb
adc
cdq
loop
mov
dec
jp
or
xchg
(bad)
in
jmp
gs
xchg
push
daa
sbb
push
pop
enter
mov
test
loope
mov
pop
push
inc
cdq
dec
xchg
dec
sbb
pop
mov
loope
into
fcomp
ret
or
mov
loope
int3
jmp
inc
adc
ins
clc
in
ins
mov
mov
nop
cmps
pop
push
pop
enter
mov
not
pop
sbb
adc
pop
push
pop
enter
mov
imul
pop
sbb
pop
enter
mov
imul
pop
sbb
sbb
shr
mov
cmp
enter
mov
mov
ins
bound
sbb
shr
mov
call
not
ins
rol
ins
mov
mov
xchg
cmp
xchg
bound
push
mov
out
mov
xchg
pop
mov
loope
sbb
sbb
pop
mov
loope
sbb
sbb
push
pop
xchg
fwait
outs
mov
loope
movs
or
xchg
dec
xchg
fwait
dec
mov
loopne
ins
mov
imul
push
sbb
(bad)
jmp
xchg
pop
dec
je
movs
xor
data16
loope
enter
mov
loope
mov
aam
xchg
dec
xchg
out
mov
enter
mov
not
sbb
pop
lock
ins
mov
xchg
das
mov
pusha
sbb
dec
sbb
pop
mov
loope
sbb
call
je
or
sbb
xor
sbb
ret
or
dec
xchg
fwait
outs
mov
loope
push
jecxz
jle
jecxz
jp
shl
ins
into
fcom
sbb
cmp
ins
mov
stos
jle
jecxz
jp
push
push
xchg
(bad)
in
aaa
(bad)
(bad)
fidiv
cmp
push
jp
or
xchg
adc
fsubr
jecxz
int3
push
aad
xchg
dec
dec
xchg
ja
js
xchg
dec
hlt
sbb
sbb
xchg
dec
les
ret
dec
sbb
push
lea
clc
dec
je
xchg
push
sbb
hlt
pop
sbb
sbb
mov
fsubp
pop
dec
test
push
clc
dec
hlt
push
xchg
inc
adc
xchg
pop
call
sbb
loopne
push
push
dec
sbb
sbb
je
aas
or
idiv
sbb
cli
mov
push
xchg
and
hlt
jno
dec
sbb
adc
ret
or
xchg
xchg
(bad)
dec
sbb
scas
jl
jecxz
ins
cmp
mov
clc
dec
je
and
sbb
pop
cld
repnz
sbb
jecxz
push
pop
and
ins
dec
sbb
pop
pusha
sbb
push
nop
inc
push
jecxz
jmp
push
xchg
mov
lock
(bad)
fcomip
je
sbb
sub
xchg
fbld
fucom
xchg
mov
add
(bad)
fistp
sbb
mov
fwait
and
cmps
sub
and
sbb
popf
sti
mov
movs
inc
add
ret
(bad)
fucomp
js
out
push
mov
aaa
pop
(bad)
int3
inc
sbb
out
xchg
push
jo
rep
mov
fwait
and
(bad)
cdq
test
call
loope
dec
hlt
jno
dec
sbb
push
mov
ficomp
mov
mov
sub
mov
xchg
fwait
xor
and
je
js
sbb
pop
out
lock
sbb
sbb
xchg
rcr
pop
enter
mov
test
sbb
pop
enter
mov
idiv
jecxz
pop
enter
mov
mul
mov
push
pop
pop
push
xchg
daa
sbb
pop
out
lock
sbb
sbb
dec
les
loopne
sbb
sbb
je
js
sbb
add
pop
push
cli
xor
xchg
and
hlt
rol
repnz
shr
jp
sbb
mov
sbb
popa
sub
push
xchg
and
je
and
sbb
pop
cmps
pop
push
cli
cmp
mov
xchg
dec
xchg
mov
pop
js
not
dec
movs
add
call
sbb
jno
cdq
stos
jg
jecxz
push
and
je
and
sbb
pop
cmps
pop
push
cli
ins
mov
or
jo
jecxz
pop
js
not
dec
movs
cmp
hlt
call
sbb
cli
jmp
pop
xchg
and
je
js
sbb
xchg
jecxz
push
jp
nop
lock
sub
pop
push
sub
xchg
mov
sbb
gs
xchg
fwait
and
jbe
clc
dec
jbe
clc
dec
jbe
cli
dec
sbb
shl
hlt
test
xlat
stc
popf
fisttp
sbb
clc
dec
jbe
clc
dec
dec
not
push
push
or
xlat
cmc
dec
xchg
pop
clc
repz
sbb
sbb
pop
clc
repz
into
aam
ror
and
xchg
cmp
je
shr
sbb
jecxz
lds
adc
xchg
daa
sbb
xlat
cmc
dec
je
and
jecxz
movs
cld
adc
sub
push
push
or
xlat
cmc
dec
xchg
pop
clc
repz
sbb
sbb
pop
clc
repz
into
aam
ror
and
xchg
cmp
je
shr
sbb
jecxz
lds
adc
xchg
daa
sbb
xlat
cmc
dec
je
and
jecxz
movs
xchg
adc
movs
cmp
xchg
dec
movs
inc
mov
les
xchg
pop
loope
loope
(bad)
fist
xchg
les
xor
pop
xchg
les
pop
dec
stos
sahf
ror
pop
push
(bad)
les
dec
(bad)
fbstp
xor
clc
dec
hlt
rcr
cdq
je
in
dec
sbb
xchg
movs
rcl
xchg
dec
xchg
pop
inc
mov
xchg
dec
sbb
sbb
jbe
jp
or
xchg
les
push
or
(bad)
mov
xchg
dec
popf
fld
aam
xchg
dec
sbb
xlat
icebp
dec
div
sbb
clc
dec
jecxz
cmps
loop
push
clc
dec
jbe
clc
dec
jbe
clc
dec
jbe
cli
dec
sbb
xchg
and
je
jg
sbb
xchg
movs
add
xchg
dec
mov
jbe
lea
clc
dec
jbe
jp
adc
xchg
daa
sbb
loopne
jecxz
adc
sbb
scas
dec
sbb
adc
xor
cmps
pop
push
jp
adc
xchg
and
dec
imul
enter
mov
(bad)
mov
cwde
adc
xchg
daa
sbb
rep
mov
fwait
mov
sbb
adc
xchg
fwait
sub
cdq
mov
mov
dec
cli
cmp
popa
hlt
ror
dec
push
nop
dec
sbb
jp
(bad)
loope
into
fadd
fwait
lea
adc
fcmovbe
dec
sbb
shr
jecxz
sbb
xchg
fwait
cmp
sbb
xchg
and
jbe
clc
dec
hlt
xor
jp
adc
xchg
rcr
clc
dec
jbe
cli
repz
movs
adc
xchg
dec
dec
not
sbb
clc
dec
je
xchg
dec
sbb
xchg
mov
push
cmp
inc
sbb
jns
xchg
pop
jbe
hlt
leave
pushf
dec
sbb
push
ja
push
xchg
rcr
movs
enter
jbe
clc
dec
jbe
pop
or
dec
jp
adc
xchg
inc
fsubr
adc
pop
(bad)
or
mov
push
push
xchg
push
dec
dec
sub
int3
fild
mov
sbb
xlat
inc
lahf
out
inc
cwde
xchg
into
in
popf
leave
jb
xchg
dec
cmc
retf
sbb
or
leave
pusha
sbb
dec
and
mov
pop
xchg
dec
adc
scas
jne
push
xchg
inc
cwde
xchg
xchg
dec
sbb
xor
jo
fcmovbe
dec
sbb
push
xchg
sbb
xchg
and
jecxz
dec
jmp
ins
les
lahf
push
sti
js
xchg
and
dec
imul
scas
jecxz
adc
loope
ins
(bad)
in
push
fist
ins
sbb
jecxz
jp
adc
xchg
inc
fcom
push
(bad)
sbb
xchg
rcr
ins
js
scas
ror
or
push
cmp
pop
lods
loope
ins
cwd
(bad)
outs
mov
popf
jp
xchg
mov
jecxz
mov
mov
into
out
xchg
fwait
jbe
jecxz
mov
mov
not
mov
xor
ins
je
push
daa
sbb
loope
cwd
ret
jecxz
sbb
cld
jecxz
mov
fwait
dec
mov
loope
daa
sbb
xchg
mov
pop
and
not
push
sbb
fsub
ins
mov
fst
jo
fcmovbe
dec
sbb
push
mov
push
xchg
in
je
ror
jb
nop
xchg
into
cmp
nop
adc
fcmovbe
dec
sbb
xchg
sbb
jecxz
adc
fcmovbe
dec
sbb
jb
nop
mov
jecxz
retf
(bad)
in
push
fcomi
out
dec
sbb
sbb
mov
daa
xlat
inc
adc
clc
dec
hlt
add
into
dec
sbb
sub
jne
xchg
mov
loope
ins
(bad)
fstp
stos
or
pop
jb
push
xchg
mov
push
jp
adc
xchg
movs
sbb
stos
xchg
fwait
jp
jecxz
sbb
cdq
out
mov
and
xchg
cmp
xchg
cmp
and
xchg
cmp
and
xchg
cmp
and
xchg
cmp
and
xchg
cmp
and
xchg
cmp
and
xchg
cmp
and
xchg
inc
cdq
iret
xchg
dec
sbb
xchg
mov
push
jp
adc
xchg
(bad)
cdq
out
mov
and
xchg
cmp
xchg
cmp
xchg
cmp
jbe
pop
or
ins
cmp
push
inc
sbb
cli
mov
loope
mov
push
jp
adc
xchg
int3
fstp
cld
dec
sbb
aaa
xchg
loope
ins
dec
lahf
mov
xchg
(bad)
in
push
fist
ins
sbb
sbb
pop
test
inc
sbb
pop
sbb
cli
mov
push
xchg
rcr
ins
js
mov
dec
hlt
loope
dec
sbb
das
dec
jecxz
ins
dec
imul
cli
sbb
pop
xchg
daa
sbb
clc
inc
sbb
ins
js
mov
dec
hlt
or
dec
sbb
adc
xchg
fwait
xchg
mov
loope
enter
mov
fwait
fs
loope
int
push
nop
popf
enter
dec
je
xchg
dec
sbb
pop
dec
jecxz
ins
sbb
pop
push
jp
push
push
xchg
rcl
pop
mov
sahf
scas
dec
sbb
imul
sbb
push
jbe
cli
retf
out
pop
xchg
rol
jp
mov
ins
into
fcom
scas
mov
push
xchg
cmp
xchg
daa
sbb
movs
cmps
pop
push
clc
dec
hlt
lds
leave
lods
pop
xchg
movs
xchg
adc
dec
cmc
je
dec
sbb
gs
sbb
gs
xchg
fwait
jbe
jecxz
sbb
jecxz
ret
jmp
mov
dec
cli
jl
pop
xchg
rcr
jp
adc
xchg
into
fmul
cli
mov
push
xchg
rcr
ins
js
mov
fwait
dec
sbb
das
dec
jecxz
ins
dec
imul
cli
pop
neg
sbb
clc
inc
sbb
ins
js
mov
cwde
dec
sbb
imul
pop
rcr
ins
or
imul
mov
sbb
xchg
and
jbe
jp
push
push
xchg
mov
add
or
sbb
jnp
sbb
xchg
mov
push
jns
adc
ins
(bad)
cwde
sbb
jge
sbb
dec
jbe
cli
cmps
cmc
pop
xchg
daa
sbb
fs
sbb
ins
js
mov
fwait
dec
sbb
pop
dec
sbb
adc
sbb
ins
mov
xchg
pop
dec
jecxz
ins
jno
ins
sub
in
push
fist
ins
sbb
jecxz
ret
hlt
ror
fwait
addr16
loope
movs
mov
xchg
dec
lahf
fiadd
dec
xchg
fwait
xchg
mov
loope
mov
sahf
and
sbb
add
lock
imul
xlat
not
dec
jbe
jp
adc
sahf
and
sbb
mov
inc
sbb
xchg
(bad)
in
jne
cdq
cli
outs
mov
xchg
push
rcr
pop
enter
mov
jbe
cmps
pop
push
pop
enter
mov
imul
mov
ins
dec
sbb
pop
enter
mov
loope
popa
mov
xchg
movs
mov
mov
xchg
cmp
xchg
daa
sbb
movs
pop
push
clc
dec
hlt
adc
popa
mov
xchg
movs
mov
adc
in
push
rcr
pop
enter
mov
jbe
movs
pop
push
pop
enter
mov
test
push
adc
sbb
pop
enter
mov
loope
gs
xchg
movs
and
xchg
dec
pushf
mov
xchg
cmp
xchg
daa
sbb
std
movs
pop
push
clc
dec
hlt
mov
cmps
gs
xchg
movs
dec
push
xchg
dec
cmc
sub
dec
jecxz
ins
into
aam
ror
and
xchg
cmp
popf
push
push
push
cli
jge
pop
xchg
daa
sbb
loopne
sbb
ins
js
mov
dec
hlt
add
dec
sbb
push
enter
mov
cmc
scas
inc
stos
fwait
ins
mov
loope
leave
sbb
ins
mov
and
xor
xchg
daa
sbb
mov
dec
hlt
sub
cmps
gs
xchg
movs
cld
sbb
dec
sbb
pop
mov
loope
dec
xchg
fwait
ins
mov
loope
dec
outs
cmps
sbb
xchg
fwait
xchg
mov
loope
rcr
cli
jl
pop
xchg
rcr
jp
adc
push
cli
mov
push
xchg
rcr
ins
js
mov
dec
hlt
push
xchg
dec
sbb
das
dec
jecxz
ins
dec
imul
cli
pop
cmc
pop
xchg
daa
sbb
sub
push
ins
js
mov
dec
hlt
jns
dec
sbb
fisttp
push
push
enter
mov
cmc
scas
inc
stos
fwait
ins
mov
loope
leave
sbb
ins
mov
and
xor
xchg
daa
sbb
pusha
movs
pop
push
clc
dec
hlt
gs
dec
sbb
cmps
ins
mov
xchg
movs
xor
xchg
dec
cmc
adc
dec
sbb
pop
mov
loope
dec
xchg
xchg
xchg
mov
loope
test
pop
adc
push
out
adc
ins
je
ins
cmp
repz
mov
dec
jecxz
ins
sbb
jecxz
ret
hlt
ror
fwait
addr16
loope
movs
add
xchg
dec
lahf
fiadd
daa
sbb
sbb
xchg
dec
sbb
cli
or
movs
sbb
mov
loope
mov
stc
sbb
cld
jecxz
mov
fwait
jb
jecxz
sbb
jbe
ins
clc
call
lods
xchg
dec
sbb
scas
cmp
pop
xchg
dec
imul
dec
lahf
(bad)
ins
or
imul
pop
fsubr
jecxz
mov
dec
cli
jge
pop
xchg
mov
jmp
sbb
clc
dec
xchg
fwait
bound
push
jbe
mov
call
rcl
mov
aam
ror
and
xchg
cmp
je
ror
ret
jmp
mov
dec
ins
clc
call
mov
xchg
rcr
clc
dec
je
popa
nop
daa
mov
xchg
sbb
jne
push
ins
clc
call
add
cmps
or
xchg
dec
jbe
clc
dec
jbe
clc
dec
jbe
cli
dec
sbb
shl
hlt
fst
mov
repz
nop
daa
sbb
xchg
mov
jmp
sbb
pop
inc
mov
or
imul
pop
fsubr
jecxz
mov
dec
cli
(bad)
jmp
sbb
clc
dec
xchg
fwait
bound
sbb
push
ins
clc
call
icebp
xchg
dec
sbb
push
in
push
mov
jmp
sbb
push
dec
ins
fcmovbe
dec
sbb
fst
dec
jbe
cli
cmp
popa
hlt
ror
dec
push
nop
dec
sbb
jp
xchg
loope
into
fadd
clc
dec
jecxz
call
push
xchg
(bad)
in
jne
cdq
ret
jecxz
push
cmps
or
imul
adc
fs
sbb
int
inc
xlat
push
pop
sbb
sbb
dec
dec
sbb
adc
outs
jno
adc
mov
stc
sbb
loopne
push
(bad)
pop
adc
inc
cdq
les
jl
xchg
push
into
popa
push
fwait
inc
cdq
aam
dec
sbb
cmps
leave
lods
pop
xchg
cmp
loope
movs
mov
xchg
movs
mov
xchg
dec
xchg
out
mov
fldcw
dec
imul
xchg
dec
sbb
cmps
int
pop
xchg
cmp
loope
popa
mov
xchg
movs
pusha
sbb
loop
push
out
jecxz
mov
pop
push
jp
sbb
xchg
(bad)
in
push
(bad)
xchg
cmp
loope
gs
xchg
movs
dec
sbb
loop
push
out
jecxz
mov
pop
push
jp
sbb
xchg
cmc
mov
stc
sbb
call
ds
int
push
nop
out
jecxz
jp
pop
push
jp
sbb
xchg
jbe
ds
int
push
nop
out
jecxz
push
cld
pop
push
jp
pop
push
xchg
cmps
sbb
push
jl
and
xchg
cmp
xchg
(bad)
ins
mov
pop
push
(bad)
xchg
cmp
xchg
(bad)
jno
pop
xchg
jbe
xor
mov
cmp
dec
in
push
jbe
add
or
add
xor
mov
xchg
cmp
xchg
(bad)
xor
sub
cmp
mov
cmp
lods
pop
xchg
cmp
xchg
(bad)
push
mov
xchg
inc
(bad)
push
mov
or
or
out
dec
dec
jp
sbb
xchg
cmps
sbb
push
adc
pop
(bad)
or
xchg
dec
jecxz
call
push
xchg
dec
jecxz
sahf
dec
pop
push
add
sbb
xchg
dec
jecxz
or
add
sbb
xchg
dec
jecxz
xchg
push
add
sbb
xchg
dec
jecxz
mov
pop
push
add
sbb
xchg
dec
jecxz
mov
fstp
xchg
dec
jecxz
mov
fstp
xchg
dec
jecxz
cmps
dec
pop
push
add
sbb
xchg
dec
dec
xchg
ja
dec
imul
pushf
and
(bad)
in
ret
sbb
les
fwait
lea
sbb
pushf
and
or
mov
xchg
into
in
out
neg
aad
mov
sbb
mov
push
daa
sbb
push
dec
sbb
clc
dec
dec
je
sbb
jecxz
pop
mov
jle
or
xchg
pusha
sbb
xchg
dec
cdq
sbb
dec
outs
cmc
mov
mov
push
xchg
dec
xchg
dec
mov
sub
loope
retf
cmp
lds
mov
mov
fistp
sbb
sbb
xchg
dec
jecxz
ror
push
add
sbb
xchg
dec
jecxz
(bad)
dec
pop
push
add
sbb
xchg
dec
jecxz
fimul
push
add
sbb
xchg
dec
jecxz
fimul
push
add
sbb
xchg
dec
jecxz
ret
push
add
sbb
xchg
dec
jecxz
(bad)
dec
pop
push
add
sbb
xchg
dec
jecxz
retf
push
add
sbb
xchg
dec
jecxz
into
dec
pop
push
add
sbb
xchg
dec
jecxz
repnz
pop
push
add
sbb
xchg
dec
jecxz
test
add
sbb
xchg
dec
jecxz
cli
dec
pop
push
add
sbb
xchg
dec
jecxz
dec
push
add
sbb
xchg
dec
jecxz
loop
pop
push
add
sbb
xchg
dec
jecxz
out
pop
push
add
sbb
xchg
dec
jecxz
jmp
push
xchg
dec
jecxz
out
dec
pop
push
add
sbb
xchg
dec
jecxz
adc
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
sbb
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
add
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
or
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
xor
push
add
sbb
xchg
dec
jecxz
ss
pop
push
add
sbb
xchg
dec
jecxz
cmp
push
add
sbb
xchg
dec
jecxz
ds
pop
push
add
sbb
xchg
dec
jecxz
and
push
add
sbb
xchg
dec
jecxz
es
pop
push
add
sbb
xchg
dec
jecxz
sub
push
add
sbb
xchg
dec
jecxz
cs
pop
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
pop
dec
pop
push
add
sbb
xchg
dec
jecxz
pop
dec
pop
push
add
sbb
xchg
dec
jecxz
inc
dec
pop
push
add
sbb
xchg
dec
jecxz
inc
dec
pop
push
add
sbb
xchg
dec
jecxz
dec
dec
pop
push
add
sbb
xchg
dec
jecxz
dec
dec
pop
push
add
sbb
xchg
dec
jecxz
jb
pop
push
add
sbb
xchg
dec
jecxz
jbe
pop
push
add
sbb
xchg
dec
jecxz
jp
pop
push
add
sbb
xchg
dec
jecxz
jle
pop
push
add
sbb
xchg
dec
jecxz
push
pop
push
add
sbb
xchg
dec
jecxz
outs
dec
pop
push
add
sbb
xchg
dec
jecxz
xchg
dec
pop
push
add
sbb
xchg
dec
jecxz
xchg
dec
pop
push
add
sbb
xchg
dec
jecxz
call
push
xchg
dec
jecxz
sahf
dec
pop
push
add
sbb
xchg
dec
jecxz
or
add
sbb
xchg
dec
jecxz
xchg
push
add
sbb
xchg
dec
jecxz
mov
push
add
sbb
xchg
dec
jecxz
mov
push
add
sbb
xchg
dec
jecxz
mov
pop
push
add
sbb
xchg
dec
jecxz
mov
pop
push
add
sbb
xchg
dec
jecxz
mov
fstp
xchg
dec
jecxz
mov
fstp
xchg
dec
jecxz
mov
fstp
xchg
dec
jecxz
cmps
dec
pop
push
add
sbb
xchg
dec
jecxz
stos
dec
pop
push
add
sbb
xchg
dec
jecxz
scas
dec
pop
push
add
sbb
xchg
dec
jecxz
ror
push
add
sbb
xchg
dec
jecxz
(bad)
dec
pop
push
add
sbb
xchg
dec
jecxz
fimul
push
add
sbb
xchg
dec
jecxz
fimul
push
add
sbb
xchg
dec
jecxz
ret
push
add
sbb
xchg
dec
jecxz
(bad)
dec
pop
push
add
sbb
xchg
dec
jecxz
retf
push
add
sbb
xchg
dec
jecxz
into
dec
pop
push
add
sbb
xchg
dec
jecxz
repnz
pop
push
add
sbb
xchg
dec
jecxz
test
add
sbb
xchg
dec
jecxz
loop
pop
push
add
sbb
xchg
dec
jecxz
out
pop
push
add
sbb
xchg
dec
jecxz
jmp
push
xchg
dec
jecxz
out
dec
pop
push
add
sbb
xchg
dec
jecxz
adc
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
add
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
or
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
xor
push
add
sbb
xchg
dec
jecxz
ss
pop
push
add
sbb
xchg
dec
jecxz
cmp
push
add
sbb
xchg
dec
jecxz
ds
pop
push
add
sbb
xchg
dec
jecxz
sub
push
add
sbb
xchg
dec
jecxz
cs
pop
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
push
dec
pop
push
add
sbb
xchg
dec
jecxz
pop
dec
pop
push
add
sbb
xchg
dec
jecxz
pop
dec
pop
push
add
sbb
xchg
dec
jecxz
inc
dec
pop
push
add
sbb
xchg
dec
jecxz
inc
dec
pop
push
add
sbb
xchg
dec
jecxz
dec
dec
pop
push
add
sbb
xchg
dec
jecxz
dec
dec
pop
push
add
sbb
xchg
dec
jecxz
jb
pop
push
add
sbb
xchg
dec
jecxz
jbe
pop
push
add
sbb
xchg
dec
jecxz
jp
pop
push
add
sbb
xchg
dec
jecxz
jle
pop
push
add
sbb
xchg
dec
jecxz
bound
push
add
sbb
xchg
dec
jecxz
dec
pop
push
add
sbb
xchg
dec
jecxz
push
pop
push
add
sbb
xchg
dec
jecxz
outs
dec
pop
push
add
sbb
xchg
dec
