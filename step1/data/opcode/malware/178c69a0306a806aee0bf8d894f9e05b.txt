add
add
ret
push
add
add
cmp
add
add
add
add
add
add
add
sub
add
xor
add
cmp
add
aam
add
adc
add
add
dec
adc
add
add
add
ins
fs
ins
add
xor
dec
push
xor
add
adc
or
sbb
mov
cmp
stos
psubsb
push
or
and
dec
into
xchg
sub
push
jno
jp
mov
shl
add
hlt
pushf
adc
cmps
outs
cmp
push
pop
ins
dec
xchg
push
fnstenv
ja
mov
outs
mov
pop
imul
mov
hlt
stos
dec
mov
mov
push
add
lods
mov
js
out
imul
adc
push
ins
mov
xchg
sbb
xor
les
stc
sbb
add
cmp
adc
mov
pop
ins
lods
loop
sub
add
jecxz
and
js
enter
jns
jp
pushf
retf
rol
in
add
push
jge
jo
shl
push
sub
(bad)
jno
in
inc
xchg
aad
mov
sbb
pop
sbb
inc
popa
cmp
fs
jecxz
stos
jl
adc
cmp
repz
sahf
lahf
cmps
sar
dec
test
or
pop
push
jge
fimul
mov
push
push
pop
add
jns
inc
push
xor
bound
stos
add
push
arpl
stos
push
xchg
out
(bad)
or
pop
cmp
or
popf
mov
jmp
ss
and
rcr
jnp
addr16
ror
popa
lods
pusha
retf
mov
cmps
in
or
sub
dec
mov
mov
adc
sbb
push
dec
cmps
adc
imul
pop
sar
pop
ss
icebp
or
lahf
scas
sti
outs
pop
in
(bad)
leave
sub
test
jb
mov
movs
push
mov
(bad)
je
js
(bad)
fnstsw
add
xlat
sub
gs
test
dec
enter
je
mov
sbb
out
repnz
jl
imul
repnz
xor
mov
adc
pop
and
pop
fisub
xlat
sub
xlat
mov
sbb
or
rcr
mov
jmp
or
xchg
test
push
arpl
jmp
sbb
mov
and
cli
rol
mov
push
cmp
movs
stos
(bad)
out
retf
movs
or
sbb
ds
inc
jne
sbb
mov
pop
lahf
pop
xor
loope
sub
add
or
add
sub
pop
jp
push
xor
loope
popa
stos
sub
mov
outs
repz
mov
xchg
fwait
mov
add
inc
pop
mov
popf
sbb
adc
aad
aaa
dec
nop
xlat
pop
mov
push
gs
dec
add
fs
mov
retf
pop
adc
adc
fwait
adc
pop
fidivr
sub
and
pop
es
mov
test
xor
mov
adc
add
xor
mov
jno
jecxz
mov
stc
mov
mov
imul
es
sti
loope
and
fld
push
and
(bad)
adc
push
int
test
mov
leave
add
xchg
mov
dec
cdq
outs
pop
jo
sub
mov
mov
jne
inc
push
mov
cmp
mov
dec
inc
nop
jp
add
fwait
idiv
fisub
out
icebp
and
cmp
fs
sti
pop
mov
push
(bad)
std
push
call
(bad)
daa
sub
sub
lods
idiv
mov
mov
mov
ins
mov
scas
and
mov
loop
adc
dec
mov
dec
pushf
push
fisub
shl
mov
and
aad
push
inc
call
dec
daa
add
imul
mov
aaa
cmps
pushf
dec
pop
sti
push
xchg
jns
ret
cmps
xchg
cmp
pop
push
jnp
pop
dec
pushf
sbb
frstpm(287
or
inc
ret
out
pop
ins
aam
ret
imul
push
outs
inc
dec
push
pop
frstor
data16
pop
jns
test
xor
icebp
dec
jp
inc
cmps
mov
popf
popa
std
mov
sbb
fstp
call
cmp
aad
sahf
sub
jns
std
jno
ds
sub
pusha
mov
dec
add
scas
out
(bad)
mov
sbb
ja
pop
cmp
and
cmp
inc
lea
jne
bound
cmp
call
pop
fild
mov
cmp
jae
pop
mov
lds
push
lods
jae
scas
mov
pop
cld
cmp
mov
cmp
jae
sbb
dec
fidivr
adc
sahf
fwait
loope
in
aaa
lods
sub
lea
sbb
lods
sub
lea
jmp
in
test
iret
scas
xchg
aad
and
dec
icebp
push
data16
das
test
inc
push
fisub
pushf
xor
loop
popf
cmps
push
cld
or
mov
inc
movs
sbb
add
cmp
dec
popf
xchg
aad
(bad)
call
popf
rol
or
in
mov
(bad)
mov
lahf
movs
and
inc
in
pushf
pop
imul
sbb
xchg
mov
sbb
fucomp
retf
aaa
mov
lea
mov
out
or
cmp
xor
dec
add
and
into
int3
xchg
mov
dec
push
mov
outs
test
cmp
sub
push
pop
sub
xor
into
div
popa
(bad)
cld
sub
dec
push
out
imul
mov
mov
push
dec
fisub
ins
cmp
sbb
mov
pop
push
push
cmp
jp
ret
cld
push
jp
imul
xor
dec
stos
add
and
(bad)
dec
into
push
int3
cmp
fistp
adc
add
hlt
xor
inc
mov
add
mov
jp
xchg
popf
pop
popa
iret
(bad)
mov
push
and
xchg
jmp
push
add
sbb
fbld
lods
ds
dec
and
jb
and
mov
call
loope
cwde
fdiv
xchg
loope
pop
push
sub
clc
mov
cli
cmps
push
and
std
push
je
fidiv
in
cmp
cmp
ds
pop
popa
cli
jle
mov
addr16
xor
ins
jecxz
xlat
pop
push
sub
mov
jg
pop
retf
imul
jge
loop
aad
aaa
addr16
mov
or
ins
cmps
das
jle
ss
xchg
fnstsw
push
push
pop
xchg
dec
pop
jge
mov
les
icebp
adc
pusha
and
aaa
jae
aas
(bad)
mov
adc
in
iret
add
adc
mov
push
(bad)
call
loopne
scas
fwait
jmp
fucomp
leave
inc
inc
loopne
retf
fst
sub
aad
rcl
sub
add
scas
add
test
jp
nop
ror
sti
dec
rcr
(bad)
pop
aad
adc
adc
(bad)
sbb
mov
add
xor
or
inc
add
std
mov
add
arpl
retf
xor
iret
popf
icebp
out
loopne
ins
sbb
daa
jge
mov
push
push
sub
movs
pop
push
pop
sti
rcr
cmps
dec
and
fistp
pop
aas
out
pusha
test
clc
xlat
mov
mov
sbb
inc
dec
ins
sti
jmp
imul
dec
sub
ja
nop
sub
pop
mov
in
pop
rcr
test
outs
push
mov
xor
cld
push
mov
mov
jmp
sbb
idiv
loop
push
aaa
fisttp
fwait
pop
xor
ret
cmp
jle
jl
cmp
popf
(bad)
hlt
movsx
mov
mov
and
sub
inc
cmp
sahf
and
call
push
les
cmp
(bad)
mov
out
xchg
push
push
into
in
sbb
inc
adc
stos
jge
inc
jmp
adc
popf
das
imul
ret
push
push
jae
mov
cmps
popf
sti
test
push
push
fisttp
add
jno
out
aaa
push
push
push
scas
test
mov
lods
jo
inc
xchg
add
cmps
jo
inc
into
lods
adc
arpl
push
(bad)
inc
sub
mov
xor
or
lods
stos
and
mov
xor
or
cli
mov
sahf
jae
div
jo
dec
dec
mov
das
sahf
mov
std
mov
fimul
repz
imul
mov
imul
push
mov
dec
cmp
xor
dec
jae
or
aam
aas
sahf
pop
xor
mov
jb
or
out
cmp
mov
jnp
or
and
aaa
addr16
mov
ret
ror
xchg
pop
cs
cwde
mov
aad
mov
xchg
sub
outs
or
or
cwde
xchg
outs
jb
cmp
ins
lods
xchg
and
(bad)
or
fsubr
xchg
es
jb
jl
rcl
add
mov
cmp
mov
icebp
std
cli
mov
dec
out
fs
imul
or
cmps
ds
and
in
inc
dec
xchg
or
ds
mov
enter
loop
ret
ins
das
pushf
ds
repnz
sub
js
or
mov
xchg
or
mov
scas
loope
xor
pop
dec
pop
pop
sbb
fwait
or
adc
pop
inc
and
lea
push
popa
outs
mov
mov
inc
xor
and
sbb
or
jbe
stc
cmp
test
sbb
jbe
pop
sets
jns
pcmpeqb
lds
rcl
and
out
push
inc
xchg
shl
movs
or
push
jbe
aas
xchg
push
movs
cli
fidiv
std
xor
rol
and
mov
out
scas
adc
jg
xchg
pop
cmp
mov
push
call
je
jbe
push
jns
or
xor
sub
out
aam
jno
jnp
xchg
popf
inc
mov
scas
xchg
test
sti
fsubr
sub
jg
xchg
(bad)
mov
test
dec
loope
or
clc
(bad)
mov
dec
test
lods
jno
inc
enter
fcom
push
iret
mov
(bad)
dec
or
mov
push
adc
mov
cmp
pop
push
test
(bad)
and
or
fst
test
out
inc
pop
pop
push
sti
lahf
sub
mov
adc
sub
pop
addr16
lahf
xor
add
bound
and
xor
adc
out
mov
(bad)
cmp
repz
mov
adc
test
mov
xchg
sbb
fcom
sar
or
sub
cmp
sahf
(bad)
pusha
xlat
adc
sbb
movs
push
xor
iret
ins
adc
nop
addr16
movs
sub
setge
xchg
test
cs
jmp
push
sub
mov
cs
dec
fidiv
dec
sub
push
and
out
xor
jecxz
jne
dec
xchg
mov
lea
nop
sbb
xchg
mov
aad
xchg
add
fidiv
mov
xchg
imul
repz
mov
pop
shr
ja
mov
push
jo
cmps
fnstcw
and
stos
xlat
outs
dec
and
cmp
lock
dec
cmp
mov
loope
and
ss
stc
mov
cmc
stc
aad
(bad)
int3
mov
mov
jl
clc
into
aam
sbb
and
jle
mov
dec
or
jno
je
mov
retf
or
loop
les
and
and
ds
daa
mov
jae
sbb
add
mov
push
push
jmp
xchg
jb
out
cmp
stos
movs
cmp
in
pusha
pop
ret
mov
or
in
mov
repz
call
lock
adc
xchg
mov
loope
or
sub
or
inc
push
repnz
call
aad
adc
test
pop
popf
add
test
sub
add
mov
gs
je
inc
push
out
cli
arpl
daa
push
jnp
dec
call
dec
movsx
gs
mov
push
push
hlt
out
sar
mov
mov
dec
inc
in
pop
sub
pop
dec
inc
fistp
loopne
cmp
dec
mov
xchg
sub
dec
mov
fidivr
fdivr
xor
add
test
dec
retf
push
mov
lods
inc
cdq
(bad)
cmp
pop
or
popf
sub
repz
push
xchg
push
aaa
xchg
pushf
push
js
out
(bad)
cmp
dec
and
xor
mov
mov
ins
(bad)
stc
or
push
mov
dec
xor
test
es
or
and
fsub
dec
outs
mov
fisttp
push
pop
dec
call
ret
iret
xlat
sub
mov
dec
popa
lea
and
push
(bad)
mov
lods
mov
cld
imul
mov
fld
xchg
cmps
xor
dec
out
push
inc
or
ja
ret
inc
cwde
pop
push
dec
mov
and
cmp
jnp
outs
jno
cmc
mov
das
aam
cmc
test
mov
fwait
out
(bad)
mov
test
fsub
dec
movs
loopne
xchg
sar
xor
mov
hlt
pop
sub
dec
add
and
bound
ss
inc
mov
popf
(bad)
sub
out
lds
cmp
call
mov
in
leave
fiadd
addr16
xchg
loope
push
sbb
call
popa
jmp
mov
jb
adc
push
pop
mov
not
mov
dec
or
jl
retf
in
jge
jg
dec
jmp
pop
inc
xchg
sbb
mov
xor
sbb
inc
xlat
adc
or
mov
pusha
sub
fs
add
push
cdq
mov
and
inc
cwde
mov
ja
adc
outs
xchg
lods
retf
jo
pop
les
arpl
retf
cmp
das
dec
mov
inc
and
jae
mov
leave
pop
xor
pop
add
add
std
lds
out
leave
and
adc
gs
arpl
inc
xchg
inc
inc
(bad)
fsub
push
sti
sub
retf
mov
xchg
icebp
mov
adc
adc
sub
add
lea
push
call
xor
sub
adc
push
push
call
test
jne
adc
add
adc
call
or
mov
add
adc
add
cmp
adc
mov
adc
push
push
push
call
cmp
jne
add
sub
mov
add
push
push
push
call
sbb
or
and
call
adc
xor
and
add
add
add
sub
mov
add
push
push
push
call
add
adc
sbb
call
or
adc
add
add
add
mov
adc
push
push
push
call
cmp
jne
and
xor
sub
call
mov
adc
add
and
add
add
adc
push
push
call
cmp
jne
sub
xor
sub
call
xor
add
adc
sub
or
add
push
push
push
call
add
adc
or
call
sbb
xor
adc
add
mov
add
and
adc
push
push
push
call
sbb
xor
sub
push
push
push
call
test
jne
adc
add
mov
add
call
adc
xor
xor
add
fist
sbb
sub
lea
push
call
sub
mov
add
sbb
call
and
sub
sbb
add
and
and
mov
adc
lea
push
call
sub
sub
sub
push
push
call
test
jne
mov
add
or
sub
call
adc
mov
adc
xor
add
add
add
adc
mov
add
and
push
push
push
call
adc
and
mov
add
push
push
push
call
add
mov
adc
sub
call
and
or
mov
add
and
adc
adc
push
push
push
call
cmp
jne
xor
sub
sub
push
push
push
call
cmp
jne
mov
add
sub
add
call
adc
and
mov
add
add
sbb
sub
or
push
push
push
call
cmp
jne
sbb
sbb
mov
add
call
add
mov
add
adc
sbb
sbb
adc
push
push
call
test
jne
add
adc
sub
call
add
or
mov
add
add
jo
inc
add
dec
add
xor
aad
add
add
and
sub
push
push
push
call
adc
adc
sub
call
mov
add
adc
sbb
add
add
sbb
adc
adc
push
push
call
test
jne
mov
add
sbb
adc
call
adc
add
add
and
add
sbb
push
push
call
test
jne
mov
add
sub
sub
call
adc
mov
add
add
add
jmp
mov
adc
mov
add
push
push
push
call
cmp
jne
or
adc
add
call
sbb
adc
mov
add
adc
and
or
push
push
call
test
jne
add
sub
sub
call
mov
adc
adc
sub
add
jmp
mov
add
sbb
adc
push
push
push
call
sub
adc
or
lea
push
call
sbb
sbb
mov
add
call
xor
or
add
add
jmp
mov
push
call
cmp
jne
xor
add
adc
call
sbb
and
xor
add
add
adc
sbb
push
push
call
cmp
jne
mov
adc
xor
add
push
push
call
cmp
jne
sbb
add
or
call
and
adc
adc
add
mov
add
mov
adc
mov
push
push
call
test
jne
adc
adc
adc
call
adc
or
add
adc
sbb
sbb
push
push
push
call
adc
sub
sbb
push
push
call
test
jne
mov
add
add
adc
call
sub
adc
sub
add
add
add
mov
adc
add
add
push
push
push
call
sub
sub
sub
call
mov
add
sub
xor
add
sub
xor
sbb
lea
push
call
mov
add
or
and
push
push
call
test
jne
and
sub
sbb
call
xor
mov
add
xor
add
add
add
adc
adc
lea
push
call
and
mov
adc
adc
call
mov
add
adc
xor
add
add
cmp
and
sub
push
push
call
cmp
jne
xor
sub
mov
call
xor
adc
or
add
add
add
jmp
adc
adc
adc
push
push
push
call
test
jne
sub
and
sub
call
mov
add
sbb
or
add
add
add
mov
adc
and
lea
push
call
xor
or
mov
add
call
sbb
mov
add
adc
add
add
add
or
adc
and
lea
push
call
or
adc
mov
add
call
sbb
or
mov
add
add
add
add
fist
(bad)
and
push
push
push
call
and
adc
mov
push
push
push
call
cmp
jne
mov
xor
or
call
adc
add
add
add
add
add
add
add
and
add
push
push
push
call
cmp
jne
adc
adc
mov
add
push
push
push
call
test
jne
add
or
adc
call
mov
add
or
add
adc
adc
sbb
push
push
push
call
test
jne
mov
add
sbb
mov
push
push
push
call
sub
sbb
mov
add
call
adc
sbb
mov
add
add
or
sub
or
push
push
call
cmp
jne
adc
sub
mov
add
push
push
push
call
cmp
jne
adc
and
or
call
sub
sbb
mov
adc
add
add
sub
and
lea
push
call
or
adc
xor
push
push
call
cmp
jne
adc
adc
or
call
mov
add
sub
adc
add
add
sbb
and
push
push
push
call
test
jne
or
adc
sub
call
mov
add
and
mov
add
xor
adc
sbb
push
push
push
call
xor
mov
add
xor
call
or
add
adc
add
add
sub
and
lea
push
call
or
sub
mov
add
call
add
adc
mov
add
sub
and
adc
push
push
push
call
mov
add
adc
call
or
mov
add
sbb
add
sub
or
or
push
push
call
test
jne
mov
add
or
add
push
push
call
cmp
jne
add
add
sub
call
and
sub
or
add
add
add
adc
and
xor
push
push
push
call
cmp
jne
adc
adc
sub
push
push
push
call
cmp
jne
and
mov
add
adc
call
mov
add
add
adc
add
add
add
add
add
adc
push
push
push
call
adc
adc
or
call
adc
mov
add
adc
add
add
add
xor
adc
lea
push
call
xor
xor
or
push
push
push
call
or
adc
or
call
adc
adc
and
add
add
or
mov
adc
push
push
call
test
jne
add
or
or
push
push
push
call
add
or
or
call
adc
sub
sbb
add
add
add
add
cmp
mov
add
and
push
push
push
call
cmp
jne
adc
adc
sbb
push
push
push
call
adc
and
sub
call
and
mov
adc
adc
add
add
imul
jp
inc
add
fmul
add
ss
adc
or
adc
push
push
push
call
cmp
jne
or
mov
sbb
call
add
mov
add
mov
add
add
xor
sbb
sub
push
push
call
cmp
jne
and
add
adc
push
push
call
cmp
jne
adc
mov
adc
or
call
adc
and
adc
add
adc
adc
xor
push
push
push
call
adc
adc
sub
push
push
push
call
cmp
jne
xor
add
adc
call
mov
add
adc
and
add
mov
add
adc
adc
lea
push
call
xor
and
adc
call
mov
add
adc
sub
add
add
sbb
and
ror
add
xor
adc
add
or
add
sub
push
push
push
call
sbb
or
mov
add
call
sbb
mov
adc
adc
add
add
fdiv
xor
adc
push
push
push
call
test
jne
sub
mov
add
sub
lea
push
call
add
or
adc
call
mov
adc
mov
add
sub
add
(bad)
add
push
push
push
call
test
jne
xor
add
mov
adc
call
and
xor
add
add
add
and
sbb
adc
add
push
push
push
call
test
jne
adc
add
xor
push
push
call
test
jne
xor
sub
or
call
xor
or
adc
add
add
add
add
adc
adc
push
push
push
call
cmp
jne
and
add
mov
adc
push
push
push
call
cmp
jne
and
mov
adc
sbb
call
sbb
adc
adc
add
add
add
and
adc
sbb
push
push
push
call
test
jne
mov
sub
mov
adc
call
or
adc
add
adc
sbb
sub
push
push
call
cmp
jne
mov
adc
and
sbb
call
sub
and
and
adc
mov
add
sbb
lea
push
call
mov
adc
add
mov
add
lea
push
call
mov
add
sbb
add
call
sub
sub
or
add
adc
mov
adc
push
push
call
test
jne
adc
adc
mov
add
push
push
push
call
mov
adc
or
add
call
mov
add
xor
or
add
sbb
mov
or
push
call
sub
xor
xor
call
add
and
adc
add
mov
add
adc
push
push
push
call
test
jne
mov
add
sub
add
push
push
push
call
cmp
jne
mov
add
mov
adc
add
call
add
xor
and
xor
adc
sbb
push
push
push
call
test
jne
mov
add
or
add
push
push
call
cmp
jne
add
mov
add
sbb
call
and
mov
add
sbb
mov
mov
add
mov
add
push
push
push
call
add
xor
xor
call
add
xor
or
add
add
mov
adc
add
push
push
push
call
test
jne
adc
sbb
mov
add
call
sbb
xor
sub
add
xor
sub
adc
push
push
call
test
jne
and
and
xor
push
push
push
call
add
add
xor
call
sbb
add
adc
xor
sub
or
push
push
push
call
test
jne
adc
or
mov
adc
push
push
push
call
xor
mov
add
sub
call
sub
and
add
add
sub
add
mov
push
push
mov
not
push
mov
not
push
mov
not
push
mov
push
call
pop
pop
cmp
je
lea
lea
push
add
adc
adc
sub
dec
and
adc
adc
add
sub
sub
add
add
not
xor
or
xor
lea
add
adc
or
rol
add
adc
xor
ror
adc
and
xor
add
adc
sub
adc
dec
xor
xor
adc
xor
sub
neg
adc
adc
or
rol
sub
sbb
sub
ror
add
adc
add
push
pop
mov
adc
adc
lea
xor
or
adc
clc
sbb
adc
sub
or
cmp
jne
pop
mov
push
add
sub
or
adc
adc
sbb
call
mov
adc
and
xor
push
push
call
cmp
jne
adc
sbb
sub
call
or
add
adc
add
add
add
add
cmp
add
mov
adc
push
push
push
call
test
jne
sub
adc
or
lea
push
call
or
xor
or
call
adc
adc
mov
adc
add
add
add
or
adc
mov
push
push
call
test
jne
adc
add
mov
add
call
xor
adc
add
add
add
sub
or
mov
add
push
push
call
test
jne
adc
add
sbb
call
sub
or
xor
add
add
mov
adc
adc
push
push
push
call
and
xor
sub
lea
push
call
sbb
adc
adc
call
or
mov
add
adc
add
sbb
and
or
lea
push
call
adc
add
xor
call
add
mov
add
sub
sbb
adc
or
push
push
call
test
jne
and
or
mov
add
call
adc
mov
add
sbb
add
adc
adc
or
push
push
push
call
and
sbb
adc
call
xor
mov
adc
and
add
add
push
push
push
call
sub
sub
mov
lea
push
call
adc
add
or
call
sub
adc
mov
adc
add
sbb
mov
add
lea
push
call
mov
add
sub
or
call
sub
mov
add
sub
sbb
sub
sub
push
push
call
cmp
jne
add
xor
mov
add
lea
push
call
sub
mov
adc
call
xor
add
and
add
mov
add
or
mov
adc
push
push
push
call
cmp
jne
add
or
adc
call
mov
add
adc
or
add
adc
xor
sbb
lea
push
call
sbb
mov
adc
sub
call
and
add
add
add
sub
and
or
push
push
push
call
cmp
jne
adc
or
mov
add
call
add
add
or
pusha
push
xor
mov
lea
mov
mov
adc
mov
add
mov
adc
push
push
push
call
mov
add
sub
mov
add
push
push
push
call
sbb
adc
sub
call
or
sbb
adc
add
xor
and
sub
push
push
call
test
jne
adc
sbb
mov
add
push
push
push
call
mov
adc
sbb
or
call
mov
add
adc
xor
adc
sub
mov
push
push
push
call
xor
adc
and
push
push
push
call
add
or
sub
call
adc
add
adc
add
sbb
adc
mov
add
lea
push
call
add
add
mov
add
push
push
call
cmp
jne
add
adc
sbb
call
adc
add
mov
adc
add
add
add
add
add
push
push
push
call
test
jne
add
or
xor
call
adc
and
and
mov
add
adc
sub
push
push
push
call
cmp
jne
mov
adc
add
sbb
call
or
and
adc
add
add
add
adc
adc
add
push
push
push
call
adc
sub
xor
call
adc
xor
adc
add
sbb
sub
mov
add
push
push
call
test
jne
and
mov
and
push
push
push
call
and
sub
or
call
adc
mov
add
adc
add
mov
adc
sub
adc
push
push
push
call
test
jne
adc
mov
add
or
push
push
push
call
test
jne
mov
add
mov
mov
add
call
sub
adc
adc
mov
add
adc
or
push
push
push
call
test
jne
adc
or
and
push
push
push
call
sub
mov
add
mov
add
call
add
adc
adc
and
sub
sbb
lea
push
call
sbb
adc
mov
push
push
call
cmp
jne
or
sub
or
call
sub
adc
adc
add
add
add
add
add
mov
add
push
push
call
cmp
jne
adc
adc
sub
call
sbb
adc
sub
or
mov
adc
or
push
push
push
call
mov
adc
adc
push
push
push
call
sub
or
sub
call
mov
add
mov
adc
xor
add
add
add
adc
mov
add
push
push
push
call
or
adc
xor
call
and
add
or
add
add
add
sbb
adc
or
push
push
push
call
sbb
mov
add
xor
call
or
sbb
and
xor
add
adc
push
push
push
call
xor
add
adc
push
push
push
call
mov
add
add
mov
add
call
sub
adc
adc
add
adc
or
adc
push
push
push
call
test
jne
or
and
sbb
lea
push
call
and
sub
adc
call
sub
sbb
xor
add
add
xor
and
or
push
push
call
cmp
jne
add
add
adc
lea
push
call
mov
add
or
mov
call
adc
sub
adc
add
add
add
xor
and
and
lea
push
call
xor
sbb
sub
call
sub
and
mov
add
add
sub
add
add
push
push
push
call
cmp
jne
mov
adc
adc
and
push
push
push
call
xor
mov
add
sub
call
adc
add
sub
add
add
add
add
adc
or
adc
lea
push
call
adc
adc
sub
call
mov
adc
sbb
add
add
adc
or
adc
lea
push
call
and
adc
sbb
call
adc
or
and
add
sub
or
adc
push
push
push
call
add
mov
sub
call
adc
adc
mov
add
add
add
add
add
add
xor
and
push
push
call
test
jne
mov
add
sub
call
mov
adc
add
sub
add
add
add
xor
add
push
push
call
test
jne
sub
and
adc
push
push
push
call
add
mov
adc
mov
adc
call
adc
or
and
xor
xor
mov
add
push
push
call
test
jne
xor
add
or
push
push
call
cmp
jne
mov
adc
sub
and
call
add
add
adc
add
add
add
mov
adc
mov
add
push
push
push
call
mov
add
add
adc
push
push
push
call
test
jne
mov
add
xor
mov
call
mov
add
or
adc
add
add
add
add
push
push
push
call
cmp
jne
adc
mov
add
mov
adc
push
push
push
call
adc
add
xor
call
adc
mov
add
sbb
add
cmp
sub
add
lea
push
call
or
mov
add
xor
push
push
push
call
test
jne
sub
or
mov
adc
call
xor
adc
and
or
sbb
adc
push
push
call
test
jne
adc
mov
add
adc
call
sbb
mov
add
sub
add
add
adc
mov
adc
push
push
push
call
or
sub
mov
call
or
sub
sbb
add
add
add
sbb
mov
adc
mov
adc
push
push
push
call
test
jne
mov
add
sub
adc
push
push
push
call
test
jne
sub
add
mov
add
call
sbb
add
sub
adc
or
mov
add
push
push
call
test
jne
or
mov
add
adc
call
xor
and
adc
add
add
add
adc
add
push
push
push
call
test
jne
sbb
sub
adc
push
push
push
call
and
and
xor
call
mov
add
and
adc
add
add
add
add
add
add
add
adc
xor
push
push
call
cmp
jne
xor
sbb
xor
call
mov
sub
adc
add
add
mov
adc
adc
push
push
call
test
jne
or
sbb
xor
call
adc
add
add
add
xor
adc
sub
push
push
push
call
sub
adc
mov
add
call
add
xor
and
add
sbb
sub
and
push
push
push
call
cmp
jne
sub
mov
adc
or
push
push
push
call
add
add
add
call
sbb
or
xor
add
add
mov
add
add
push
push
call
test
jne
sub
and
add
lea
push
call
add
sub
or
call
adc
sub
adc
add
add
add
add
mov
adc
add
push
push
push
call
mov
add
add
mov
add
call
add
adc
sub
add
add
add
add
push
push
push
call
cmp
jne
adc
sub
and
push
push
push
call
cmp
jne
add
mov
mov
call
sub
mov
add
xor
add
add
add
mov
adc
adc
lea
push
call
or
add
sub
call
add
sub
add
mov
add
add
push
push
push
call
cmp
jne
mov
add
xor
adc
push
push
push
call
mov
add
sub
mov
add
call
sub
add
or
add
mov
add
sub
and
push
push
push
call
adc
sub
sub
lea
push
call
mov
add
add
mov
add
call
add
adc
adc
add
add
add
mov
add
add
sbb
lea
push
call
sbb
mov
add
or
call
xor
mov
adc
adc
add
add
add
adc
xor
lea
push
call
and
and
add
call
and
or
sbb
add
adc
sub
push
push
call
test
jne
sbb
adc
adc
push
push
push
call
test
jne
adc
mov
sub
call
sbb
add
mov
add
add
add
sbb
sbb
push
push
push
call
and
adc
add
push
push
call
cmp
jne
mov
add
sub
or
call
sub
and
sbb
add
add
add
add
sub
mov
add
push
push
push
call
cmp
jne
mov
add
mov
adc
xor
call
and
sbb
xor
add
aas
add
lea
push
call
xor
adc
xor
lea
push
call
adc
adc
sub
call
mov
add
add
adc
add
add
add
mov
add
add
push
push
call
test
jne
mov
add
add
adc
call
adc
sub
adc
add
add
add
sbb
mov
add
push
push
push
call
sbb
add
adc
call
mov
add
or
add
add
add
sub
or
push
push
push
call
cmp
jne
sub
or
mov
add
push
push
push
call
test
jne
mov
add
or
adc
call
adc
sub
sbb
mov
add
add
adc
push
push
push
call
mov
add
sbb
sub
call
adc
sbb
adc
add
add
add
xor
push
push
call
cmp
jne
mov
adc
sbb
sub
lea
push
call
mov
add
sub
and
call
and
add
xor
add
sub
sbb
adc
push
push
push
call
mov
adc
mov
adc
push
push
push
call
test
jne
xor
sbb
add
call
mov
sub
xor
add
add
and
push
push
push
call
or
adc
xor
call
add
mov
adc
adc
add
add
and
or
adc
push
push
call
cmp
jne
add
or
mov
add
call
or
xor
or
sbb
and
adc
lea
push
call
add
or
mov
adc
call
sbb
xor
add
add
mov
add
xor
adc
push
push
call
cmp
jne
adc
sub
sbb
push
push
call
cmp
jne
sbb
xor
sub
call
add
mov
add
mov
add
adc
adc
adc
push
push
call
cmp
jne
mov
add
adc
sub
push
push
call
test
jne
adc
mov
add
add
call
mov
xor
adc
add
sar
ret
shr
push
call
test
jne
xor
xor
or
call
mov
and
adc
add
add
add
xor
sub
or
push
push
push
call
test
jne
sub
mov
adc
mov
adc
push
push
call
test
jne
and
sub
adc
call
adc
and
add
add
cmp
mov
add
sub
push
push
call
test
jne
sbb
adc
add
push
push
push
call
cmp
jne
adc
adc
adc
call
mov
add
adc
adc
add
add
mov
add
sbb
add
push
push
push
call
sub
and
add
call
and
adc
adc
add
adc
mov
adc
and
push
push
call
test
jne
adc
and
sub
call
or
add
mov
adc
add
add
adc
sub
or
push
push
push
call
sub
sub
adc
push
push
push
call
test
jne
mov
adc
adc
mov
add
call
or
or
add
add
add
mov
add
push
push
push
call
cmp
jne
adc
add
and
push
push
push
call
test
jne
or
mov
add
sbb
call
adc
adc
sub
add
add
cmp
sub
add
lea
push
call
adc
mov
add
add
lea
push
call
adc
sub
sub
call
or
sub
adc
add
add
pop
mov
add
and
push
push
push
call
cmp
jne
mov
add
add
or
push
push
push
call
cmp
jne
xor
xor
adc
call
adc
add
adc
add
add
mov
add
add
push
push
call
cmp
jne
xor
sbb
or
push
push
call
cmp
jne
adc
xor
mov
adc
call
sbb
mov
sub
add
sub
sub
or
push
push
push
call
cmp
jne
sbb
mov
adc
lea
push
call
or
sbb
or
call
add
adc
adc
add
sub
or
mov
adc
push
push
call
cmp
jne
add
sbb
sub
call
add
adc
add
add
or
adc
add
push
push
push
call
or
add
xor
push
push
call
test
jne
adc
or
and
call
adc
mov
add
sub
or
add
mov
add
push
push
call
cmp
jne
and
add
mov
add
lea
push
call
mov
add
adc
add
call
sub
adc
and
add
add
add
add
add
sub
add
push
push
push
call
cmp
jne
mov
add
sbb
mov
add
push
push
call
test
jne
xor
and
or
call
mov
add
add
sub
add
add
add
add
add
mov
adc
adc
push
push
push
call
test
jne
mov
add
xor
adc
call
sub
sbb
sub
add
faddp
add
ins
add
add
xor
push
push
push
call
cmp
jne
mov
add
adc
adc
push
push
call
cmp
jne
mov
add
adc
sbb
call
xor
mov
add
sbb
mov
add
or
and
push
push
push
call
adc
mov
add
add
call
sub
sbb
add
add
sub
sub
push
push
push
call
add
mov
add
xor
lea
push
call
sub
mov
add
add
call
adc
add
sbb
add
lock
add
and
lea
push
call
adc
mov
add
sbb
call
and
mov
add
sub
add
add
add
add
adc
push
push
push
call
test
jne
sub
or
mov
adc
push
push
push
call
test
jne
adc
sub
mov
add
call
sbb
mov
adc
adc
add
add
inc
add
adc
arpl
movs
inc
add
movs
inc
add
call
add
add
adc
call
adc
adc
mov
add
add
add
add
add
(bad)
mov
add
xor
push
push
call
test
jne
and
mov
add
xor
call
add
or
mov
add
add
mov
add
mov
adc
and
push
push
push
call
mov
mov
adc
sub
call
add
sbb
add
add
add
mov
adc
and
add
lea
push
call
sub
mov
adc
sub
push
push
push
call
test
jne
adc
adc
sbb
call
sub
sub
mov
adc
add
sub
mov
add
mov
add
push
push
call
cmp
jne
adc
and
add
call
mov
add
sbb
adc
add
add
add
clc
adc
adc
push
push
push
call
cmp
jne
mov
add
or
sbb
call
and
or
or
add
lea
push
call
lea
push
call
adc
add
mov
adc
lea
mov
xor
mov
add
or
push
sub
sub
xor
lea
call
mov
xor
add
sub
lea
inc
push
or
or
and
push
xor
sub
and
push
mov
mov
sub
adc
sbb
push
sbb
and
or
lea
call
adc
add
xor
mov
push
lea
push
call
pop
mov
lea
inc
push
call
push
test
je
sbb
mov
add
xor
mov
add
sub
or
lea
inc
push
add
add
add
call
test
jne
or
mov
adc
adc
sbb
or
sub
push
add
or
or
push
push
push
call
adc
sub
sub
dec
jne
or
sub
adc
add
mov
push
push
push
call
cmp
jne
push
push
push
call
sub
adc
add
pop
adc
add
and
add
sbb
adc
sbb
add
mov
sub
adc
sub
sub
and
sbb
mov
call
mov
adc
adc
mov
add
lea
sub
push
sub
lea
inc
pop
lea
push
inc
push
lea
call
push
push
push
push
push
call
push
push
push
call
test
jne
or
and
sbb
lea
sub
xor
mov
add
sbb
jb
cs
call
or
sub
add
add
or
sbb
sub
xor
call
sbb
or
adc
jmp
add
add
add
add
add
xor
sub
push
push
push
call
add
adc
sub
push
push
push
call
test
jne
and
sbb
sbb
call
sub
mov
add
add
add
sub
adc
push
push
push
call
cmp
jne
and
mov
add
sub
push
push
push
call
mov
add
and
or
call
sbb
and
adc
add
add
add
or
xchg
add
add
cmp
push
push
push
call
or
add
or
push
push
push
call
test
jne
xor
sbb
add
call
sub
adc
adc
add
add
add
sbb
mov
add
push
push
push
call
adc
mov
add
add
push
push
push
call
cmp
jne
add
xor
add
call
adc
mov
adc
adc
add
or
sub
adc
push
push
call
cmp
jne
and
adc
sub
push
push
push
call
cmp
jne
and
and
sub
call
mov
add
or
xor
add
mov
sub
adc
lea
push
call
sub
adc
adc
call
mov
adc
add
and
add
add
add
and
add
push
push
push
call
adc
adc
add
lea
push
call
add
mov
adc
add
call
sub
adc
adc
add
adc
mov
add
add
push
push
call
cmp
jne
mov
add
adc
sub
call
sub
or
adc
add
add
sbb
xor
add
lea
push
call
mov
add
sub
and
push
push
push
call
cmp
jne
sub
sub
and
call
or
adc
mov
add
add
add
and
sbb
push
push
push
call
cmp
jne
xor
or
adc
call
and
adc
sub
add
cmp
or
adc
push
push
call
test
jne
or
sub
mov
add
call
adc
or
adc
add
add
add
mov
add
sbb
push
push
call
cmp
jne
mov
add
add
mov
add
push
push
push
call
cmp
jne
mov
add
and
mov
add
call
adc
sbb
sub
add
add
add
adc
mov
add
mov
add
push
push
push
call
test
jne
adc
sub
adc
push
push
call
cmp
jne
mov
adc
sbb
sbb
call
xor
adc
sub
add
add
adc
add
push
push
call
test
jne
sub
adc
add
call
xor
xor
sub
add
sub
mov
adc
sbb
push
push
push
call
cmp
jne
xor
add
adc
push
push
push
call
sub
mov
add
and
call
mov
adc
add
sub
xor
mov
adc
add
push
push
push
call
and
adc
sub
push
push
call
cmp
jne
sbb
or
mov
add
call
mov
adc
xor
sub
add
add
sbb
sub
sub
push
push
call
test
jne
add
xor
sub
push
push
push
call
mov
adc
adc
or
call
xor
adc
adc
mov
add
sbb
add
push
push
push
call
test
jne
xor
adc
or
push
push
push
call
test
jne
sub
add
mov
add
call
adc
adc
adc
add
add
add
add
add
push
push
push
call
mov
adc
sub
add
lea
push
call
adc
mov
adc
adc
call
sbb
sub
or
add
add
add
add
cmp
sub
lea
push
call
sub
mov
adc
sub
lea
push
call
add
sub
mov
add
call
or
mov
add
sub
add
add
sub
mov
adc
push
push
push
call
cmp
jne
add
xor
mov
add
lea
push
call
adc
xor
sbb
call
sbb
sbb
add
add
add
add
add
and
xor
mov
adc
push
push
push
call
test
jne
adc
sub
sbb
push
push
push
call
add
sbb
add
call
adc
sub
mov
add
add
add
add
sbb
mov
adc
adc
push
push
call
test
jne
mov
adc
adc
add
call
sbb
and
adc
xor
mov
adc
mov
lea
push
call
sbb
and
mov
adc
call
add
sub
adc
add
add
add
cmp
adc
push
push
call
test
jne
adc
add
adc
call
sub
mov
add
adc
xor
adc
mov
add
push
push
call
cmp
jne
or
xor
and
lea
push
call
add
add
add
call
or
mov
add
adc
add
cmp
mov
add
add
push
push
call
cmp
jne
adc
sub
mov
add
call
adc
xor
add
add
add
add
add
push
push
push
call
or
xor
or
call
mov
add
sbb
sub
sub
or
sub
push
push
call
cmp
jne
mov
add
adc
adc
call
add
sub
and
xor
xor
mov
add
push
push
push
call
add
and
sub
lea
push
call
add
sub
adc
call
add
mov
add
adc
add
add
ret
and
mov
adc
push
push
push
call
test
jne
adc
and
and
push
push
push
call
test
jne
and
sub
adc
call
add
mov
add
add
add
add
sbb
adc
sub
push
push
call
test
jne
and
mov
add
add
call
xor
adc
mov
add
xor
sub
mov
add
push
push
push
call
cmp
jne
adc
mov
add
adc
push
push
push
call
cmp
jne
sub
sbb
sub
call
adc
add
mov
add
add
add
add
mov
add
adc
push
push
call
cmp
jne
or
adc
xor
call
mov
adc
add
add
add
add
add
mov
adc
or
lea
push
call
adc
and
mov
add
call
adc
sub
and
add
add
add
out
xlat
adc
lea
push
call
sbb
mov
add
sbb
push
push
call
test
jne
mov
add
sbb
add
call
xor
xor
add
add
add
add
sbb
mov
add
push
push
push
call
test
jne
and
sub
mov
adc
call
mov
add
xor
xor
adc
sbb
sub
push
push
push
call
adc
sub
sub
push
push
push
call
cmp
jne
mov
add
add
or
call
mov
and
adc
add
add
add
sbb
sbb
add
lea
push
call
add
sbb
mov
add
lea
push
call
or
mov
adc
add
call
sub
xor
sbb
add
sbb
out
inc
add
add
xor
push
mov
xchg
mov
ret
or
inc
add
add
add
call
sbb
or
and
or
xor
add
push
push
push
call
mov
add
sbb
xor
push
push
push
call
sbb
mov
add
or
call
mov
sub
mov
add
add
add
add
lds
jno
or
sbb
mov
cmp
stos
psubsb
push
or
and
dec
into
xchg
sub
push
jno
jp
mov
shl
add
hlt
pushf
adc
cmps
outs
cmp
push
pop
ins
dec
xchg
push
fnstenv
ja
mov
outs
mov
pop
imul
mov
hlt
stos
dec
mov
mov
push
add
lods
mov
js
out
imul
adc
push
ins
mov
xchg
sbb
xor
les
stc
sbb
add
cmp
adc
mov
pop
ins
lods
loop
sub
add
jecxz
and
js
enter
jns
jp
pushf
retf
rol
in
add
push
jge
jo
shl
push
sub
(bad)
jno
in
inc
xchg
aad
mov
sbb
pop
sbb
inc
popa
cmp
fs
jecxz
stos
jl
adc
cmp
repz
sahf
lahf
cmps
sar
dec
test
or
pop
push
jge
fimul
mov
push
push
pop
add
jns
inc
push
xor
bound
stos
add
push
arpl
stos
push
xchg
out
(bad)
or
pop
cmp
or
popf
mov
jmp
ss
and
rcr
jnp
addr16
ror
popa
lods
pusha
retf
mov
cmps
in
or
sub
dec
mov
mov
adc
sbb
push
dec
cmps
adc
imul
pop
sar
pop
ss
icebp
or
lahf
scas
sti
outs
pop
in
(bad)
leave
sub
test
jb
mov
movs
push
mov
(bad)
je
js
(bad)
fnstsw
add
xlat
sub
gs
test
dec
enter
je
mov
sbb
out
repnz
jl
imul
repnz
xor
mov
adc
pop
and
pop
fisub
xlat
sub
xlat
mov
sbb
or
rcr
mov
jmp
or
xchg
test
push
arpl
jmp
sbb
mov
and
cli
rol
mov
push
cmp
movs
stos
(bad)
out
retf
movs
or
sbb
ds
inc
jne
sbb
mov
pop
lahf
pop
xor
loope
sub
add
or
add
sub
pop
jp
push
xor
loope
popa
stos
sub
mov
outs
repz
mov
xchg
fwait
mov
add
inc
pop
mov
popf
sbb
adc
aad
aaa
dec
nop
xlat
pop
mov
push
gs
dec
add
fs
mov
retf
pop
adc
adc
fwait
adc
pop
fidivr
sub
and
pop
es
mov
test
xor
mov
adc
add
xor
mov
jno
jecxz
mov
stc
mov
mov
imul
es
sti
loope
and
fld
push
and
(bad)
adc
push
int
test
mov
leave
add
xchg
mov
dec
cdq
outs
pop
jo
sub
mov
mov
jne
inc
push
mov
cmp
mov
dec
inc
nop
jp
add
fwait
idiv
fisub
out
icebp
and
cmp
fs
sti
pop
mov
push
(bad)
std
push
call
(bad)
daa
sub
sub
lods
idiv
mov
mov
mov
ins
mov
scas
and
mov
loop
adc
dec
mov
dec
pushf
push
fisub
shl
mov
and
aad
push
inc
call
dec
daa
add
imul
mov
aaa
cmps
pushf
dec
pop
sti
push
xchg
jns
ret
cmps
xchg
cmp
pop
push
jnp
pop
dec
pushf
sbb
frstpm(287
or
inc
ret
out
pop
ins
aam
ret
imul
push
outs
inc
dec
push
pop
frstor
data16
pop
jns
test
xor
icebp
dec
jp
inc
cmps
mov
popf
popa
std
mov
sbb
fstp
call
cmp
aad
sahf
sub
jns
std
jno
ds
sub
pusha
mov
dec
add
scas
out
(bad)
mov
sbb
ja
pop
cmp
and
cmp
inc
lea
jne
bound
cmp
call
pop
fild
mov
cmp
jae
pop
mov
lds
push
lods
jae
scas
mov
pop
cld
cmp
mov
cmp
jae
sbb
dec
fidivr
adc
sahf
fwait
loope
in
aaa
lods
sub
lea
sbb
lods
sub
lea
jmp
in
test
iret
scas
xchg
aad
and
dec
icebp
push
data16
das
test
inc
push
fisub
pushf
xor
loop
popf
cmps
push
cld
or
mov
inc
movs
sbb
add
cmp
dec
popf
xchg
aad
(bad)
call
popf
rol
or
in
mov
(bad)
mov
lahf
movs
and
inc
in
pushf
pop
imul
sbb
xchg
mov
sbb
fucomp
retf
aaa
mov
lea
mov
out
or
cmp
xor
dec
add
and
into
int3
xchg
mov
dec
push
mov
outs
test
cmp
sub
push
pop
sub
xor
into
div
popa
(bad)
cld
sub
dec
push
out
imul
mov
mov
push
dec
fisub
ins
cmp
sbb
mov
pop
push
push
cmp
jp
ret
cld
push
jp
imul
xor
dec
stos
add
and
(bad)
dec
into
push
int3
cmp
fistp
adc
add
hlt
xor
inc
mov
add
mov
jp
xchg
popf
pop
popa
iret
(bad)
mov
push
and
xchg
jmp
push
add
sbb
fbld
lods
ds
dec
and
jb
and
mov
call
loope
cwde
fdiv
xchg
loope
pop
push
sub
clc
mov
cli
cmps
push
and
std
push
je
fidiv
in
cmp
cmp
ds
pop
popa
cli
jle
mov
addr16
xor
ins
jecxz
xlat
pop
push
sub
mov
jg
pop
retf
imul
jge
loop
aad
aaa
addr16
mov
or
ins
cmps
das
jle
ss
xchg
fnstsw
push
push
pop
xchg
dec
pop
jge
mov
les
icebp
adc
pusha
and
aaa
jae
aas
(bad)
mov
adc
in
iret
add
adc
mov
push
(bad)
call
loopne
scas
fwait
jmp
fucomp
leave
inc
inc
loopne
retf
fst
sub
aad
rcl
sub
add
scas
add
test
jp
nop
ror
sti
dec
rcr
(bad)
pop
aad
adc
adc
(bad)
sbb
mov
add
xor
or
inc
add
std
mov
add
arpl
retf
xor
iret
popf
icebp
out
loopne
ins
sbb
daa
jge
mov
push
push
sub
movs
pop
push
pop
sti
rcr
cmps
dec
and
fistp
pop
aas
out
pusha
test
clc
xlat
mov
mov
sbb
inc
dec
ins
sti
jmp
imul
dec
sub
ja
nop
sub
pop
mov
in
pop
rcr
test
outs
push
mov
xor
cld
push
mov
mov
jmp
sbb
idiv
loop
push
aaa
fisttp
fwait
pop
xor
ret
cmp
jle
jl
cmp
popf
(bad)
hlt
movsx
mov
mov
and
sub
inc
cmp
sahf
and
call
push
les
cmp
(bad)
mov
out
xchg
push
push
into
in
sbb
inc
adc
stos
jge
inc
jmp
adc
popf
das
imul
ret
push
push
jae
mov
cmps
popf
sti
test
push
push
fisttp
add
jno
out
aaa
push
push
push
scas
test
mov
lods
jo
inc
xchg
add
cmps
jo
inc
into
lods
adc
arpl
push
(bad)
inc
sub
mov
xor
or
lods
stos
and
mov
xor
or
cli
mov
sahf
jae
div
jo
dec
dec
mov
das
sahf
mov
std
mov
fimul
repz
imul
mov
imul
push
mov
dec
cmp
xor
dec
jae
or
aam
aas
sahf
pop
xor
mov
jb
or
out
cmp
mov
jnp
or
and
aaa
addr16
mov
ret
ror
xchg
pop
cs
cwde
mov
aad
mov
xchg
sub
outs
or
or
cwde
xchg
outs
jb
cmp
ins
lods
xchg
and
(bad)
or
fsubr
xchg
es
jb
jl
rcl
add
mov
cmp
mov
icebp
std
cli
mov
dec
out
fs
imul
or
cmps
ds
and
in
inc
dec
xchg
or
ds
mov
enter
loop
ret
ins
das
pushf
ds
repnz
sub
js
or
mov
xchg
or
mov
scas
loope
xor
pop
dec
pop
pop
sbb
fwait
or
adc
pop
inc
and
lea
push
popa
outs
mov
mov
inc
xor
and
sbb
or
jbe
stc
cmp
test
sbb
jbe
pop
sets
jns
pcmpeqb
lds
rcl
and
out
push
inc
xchg
shl
movs
or
push
jbe
aas
xchg
push
movs
cli
fidiv
std
xor
rol
and
mov
out
scas
adc
jg
xchg
pop
cmp
mov
push
call
je
jbe
push
jns
or
xor
sub
out
aam
jno
jnp
xchg
popf
inc
mov
scas
xchg
test
sti
fsubr
sub
jg
xchg
(bad)
mov
test
dec
loope
or
clc
(bad)
mov
dec
test
lods
jno
inc
enter
fcom
push
iret
mov
(bad)
dec
or
mov
push
adc
mov
cmp
pop
push
test
(bad)
and
or
fst
test
out
inc
pop
pop
push
sti
lahf
sub
mov
adc
sub
pop
addr16
lahf
xor
add
bound
and
xor
adc
out
mov
(bad)
cmp
repz
mov
adc
test
mov
xchg
sbb
fcom
sar
or
sub
cmp
sahf
(bad)
pusha
xlat
adc
sbb
movs
push
xor
iret
ins
adc
nop
addr16
movs
sub
setge
xchg
test
cs
jmp
push
sub
mov
cs
dec
fidiv
dec
sub
push
and
out
xor
jecxz
jne
dec
xchg
mov
lea
nop
sbb
xchg
mov
aad
xchg
add
fidiv
mov
xchg
imul
repz
mov
pop
shr
ja
mov
push
jo
cmps
fnstcw
and
stos
xlat
outs
dec
and
cmp
lock
dec
cmp
mov
loope
and
ss
stc
mov
cmc
stc
aad
(bad)
int3
mov
mov
jl
clc
into
aam
sbb
and
jle
mov
dec
or
jno
je
mov
retf
or
loop
les
and
and
ds
daa
mov
jae
sbb
add
mov
push
push
jmp
xchg
jb
out
cmp
stos
movs
cmp
in
pusha
pop
ret
mov
or
in
mov
repz
call
lock
adc
xchg
mov
loope
or
sub
or
inc
push
repnz
call
aad
adc
test
pop
popf
add
test
sub
add
mov
gs
je
inc
push
out
cli
arpl
daa
push
jnp
dec
call
dec
movsx
gs
mov
push
push
hlt
out
sar
mov
mov
dec
inc
in
pop
sub
pop
dec
inc
fistp
loopne
cmp
dec
mov
xchg
sub
dec
mov
fidivr
fdivr
xor
add
test
dec
retf
push
mov
lods
inc
cdq
(bad)
cmp
pop
or
popf
sub
repz
push
xchg
push
aaa
xchg
pushf
push
js
out
(bad)
cmp
dec
and
xor
mov
mov
ins
(bad)
stc
or
push
mov
dec
xor
test
es
or
and
fsub
dec
outs
mov
fisttp
push
pop
dec
call
ret
iret
xlat
sub
mov
dec
popa
lea
and
push
(bad)
mov
lods
mov
cld
imul
mov
fld
xchg
cmps
xor
dec
out
push
inc
or
ja
ret
inc
cwde
pop
push
dec
mov
and
cmp
jnp
outs
jno
cmc
mov
das
aam
cmc
test
mov
fwait
out
(bad)
mov
test
fsub
dec
movs
loopne
xchg
sar
xor
mov
hlt
pop
sub
dec
add
and
bound
ss
inc
mov
popf
(bad)
sub
out
lds
cmp
call
mov
in
leave
fiadd
addr16
xchg
loope
push
sbb
call
popa
jmp
mov
jb
adc
push
pop
mov
not
mov
dec
or
jl
retf
in
jge
jg
dec
jmp
pop
inc
xchg
sbb
mov
xor
sbb
inc
xlat
adc
or
mov
pusha
sub
fs
add
push
cdq
mov
and
inc
cwde
mov
ja
adc
outs
xchg
lods
retf
jo
pop
les
arpl
retf
cmp
das
dec
mov
inc
and
jae
mov
leave
pop
xor
pop
add
add
std
lds
out
leave
and
adc
gs
arpl
inc
xchg
inc
inc
(bad)
fsub
push
sti
sub
retf
mov
xchg
icebp
mov
adc
mov
xor
dec
dec
push
mov
nop
js
retf
rcr
xchg
jg
sahf
mov
pop
adc
fxch
dec
cmp
js
jl
xor
add
sahf
inc
dec
cld
xor
je
fwait
inc
inc
pop
push
in
pushf
mov
mov
mov
jg
mov
clc
xor
sbb
mov
loopne
ja
cmps
mov
rol
icebp
in
add
call
call
pop
sbb
sbb
jo
bound
stc
cmps
adc
push
pop
pop
inc
cmps
xchg
push
and
push
pop
ja
jmp
cmp
pop
xor
mov
mov
mov
loop
ret
aas
loop
push
xchg
js
sbb
into
inc
movs
into
adc
sbb
in
imul
and
aad
(bad)
enter
and
cmp
int
mov
fsub
pop
cmp
dec
sbb
or
std
les
add
shr
sbb
jle
dec
dec
aam
mov
rep
inc
imul
sub
mov
cmp
or
mov
mov
shl
sahf
push
xor
mov
jp
or
or
int
dec
add
mov
int
add
jo
jns
dec
mov
sbb
addr16
sbb
dec
movs
ret
jnp
ss
sub
and
push
mov
and
call
dec
xchg
scas
(bad)
push
mov
sbb
scas
lods
or
dec
mov
nop
test
inc
inc
inc
(bad)
xchg
xor
jmp
ds
ret
outs
fmul
sub
or
mov
jecxz
ffreep
xlat
sti
add
mov
dec
mov
xor
add
arpl
mov
mov
mov
or
cmp
ja
daa
mov
and
cmp
pop
sub
in
ret
inc
mov
xor
rcr
call
inc
in
mov
scas
ins
int3
dec
iret
ret
xchg
push
mov
(bad)
push
mov
xor
cmp
add
sahf
addr16
ficomp
push
scas
loopne
pop
in
aad
xor
mov
dec
in
mov
je
xor
mov
xor
push
inc
push
ins
adc
add
add
mov
nop
cmp
jmp
xor
pop
js
xchg
out
arpl
inc
cmp
test
xor
xchg
jl
cmps
movs
pop
scas
sti
pusha
add
adc
dec
add
xchg
daa
xor
(bad)
sub
mov
loopne
xchg
loopne
dec
repnz
test
inc
jmp
lods
loopne
mov
mov
pop
int
sbb
pop
mov
rol
dec
pop
imul
jae
sub
xor
dec
xor
or
cmps
inc
mov
out
jno
mov
dec
hlt
pop
jp
rcl
cmps
fsub
shl
sbb
mov
dec
pop
sbb
int3
in
loope
enter
pop
dec
lea
ins
jecxz
mov
fcom
xor
out
mov
push
outs
fs
js
pop
inc
xchg
in
xor
popa
xchg
sbb
mov
mov
push
cli
cdq
fdivr
sub
or
and
mov
in
xor
iret
jg
pop
add
jge
mov
cwde
lock
out
push
fidivr
call
mov
ja
bnd
pop
adc
push
cmps
push
push
and
popa
cmc
pop
mov
jne
cwde
add
inc
sub
movs
mov
int
shl
repz
dec
outs
fadd
not
pop
mov
fsubr
xor
mov
and
mov
sub
adc
add
mov
mov
or
jbe
lods
mov
sbb
ja
(bad)
lods
mov
or
stos
push
das
or
mov
push
sub
arpl
bound
sub
jge
dec
cmp
pusha
xchg
push
sbb
fdiv
or
cmp
in
xchg
xchg
xor
xlat
xlat
bound
stc
sub
pushf
fsubr
cwde
xchg
popa
push
dec
fiadd
push
es
mov
loope
les
add
xchg
push
dec
adc
(bad)
push
push
or
je
push
enter
and
mov
cmps
mov
and
push
pop
imul
mov
push
inc
and
sub
mov
outs
test
mov
leave
addr16
mov
fs
cmp
repnz
push
and
arpl
outs
stos
cmp
rep
aaa
jbe
scas
mov
dec
in
bound
cmp
test
xchg
cdq
out
pop
mov
jno
(bad)
out
xchg
(bad)
inc
mul
mov
mov
mov
xor
std
xor
inc
push
scas
mov
das
outs
jbe
je
int3
jb
mov
sub
call
dec
xor
pop
js
ror
or
and
and
xchg
scas
js
or
pop
mov
sti
mov
pop
rol
outs
pop
aam
lea
adc
adc
dec
gs
jae
pop
pop
retf
sar
xchg
fwait
push
inc
pusha
mov
cld
cmps
dec
mov
xor
inc
pop
les
mov
xor
in
sub
cmps
stos
adc
sbb
mov
pusha
dec
cli
sbb
adc
mov
mov
pop
xlat
retf
cmp
or
jl
ret
daa
pop
sbb
jo
iret
lahf
(bad)
mov
les
xchg
pop
xchg
out
pop
fild
inc
fcmovbe
js
outs
add
xlat
dec
dec
xor
push
jo
cmp
xchg
fdivp
adc
repz
mov
iret
pop
into
jecxz
mov
sub
cmp
xchg
xchg
scas
popf
sub
add
push
int3
cmp
aaa
mov
mov
std
jae
imul
mov
push
or
frstor
fcomip
(bad)
jns
cmp
ror
xchg
fcmovnu
sbb
out
jo
test
imul
mov
fld
imul
jg
call
test
push
xchg
dec
mov
and
shl
test
aad
inc
inc
add
jmp
sub
jne
movs
sub
sbb
movs
inc
shl
nop
mul
sub
jo
pop
hlt
inc
out
xor
dec
fsubrp
sub
push
mov
add
js
mov
and
or
enter
std
dec
or
(bad)
cmps
mov
jbe
xor
int3
ins
jnp
sbb
outs
pop
lds
dec
neg
fwait
jo
and
push
mov
xchg
fs
add
mov
xchg
sbb
inc
frstor
jle
mov
(bad)
(bad)
aas
mul
dec
xchg
les
(bad)
mov
fmul
stos
scas
(bad)
jp
lods
mov
call
rcr
sub
popf
fwait
mov
sar
test
idiv
call
xlat
mov
rcr
fsubr
push
lods
xchg
mov
out
(bad)
pusha
aam
mov
push
cmps
push
mov
std
or
xor
xchg
lds
or
rol
lahf
xor
and
sbb
push
add
xchg
mov
rcr
fstp
mov
mov
rcl
sub
adc
mov
pop
xchg
lea
mov
fist
add
cli
sti
scas
or
lods
mov
ins
add
xchg
(bad)
xchg
outs
rol
mov
das
shl
jmp
inc
mov
scas
xchg
mov
in
dec
mov
mov
rcl
or
je
and
mov
lods
inc
jl
lahf
fld
xor
bound
js
mov
jle
cmp
jnp
adc
pop
jns
test
dec
inc
pusha
pusha
arpl
stos
cmp
mov
dec
jmp
cmp
add
sub
pop
aas
or
dec
mov
into
sahf
jo
in
int3
xchg
cmps
iret
pop
sub
add
nop
mov
test
jle
enter
icebp
xor
retf
sbb
sbb
popf
sub
repz
cmp
dec
sbb
cmp
adc
out
xchg
dec
pop
push
add
mov
cmp
pusha
or
ins
movs
mov
cli
push
repnz
aam
(bad)
xchg
sbb
cmp
inc
mov
fnstsw
loopne
pop
add
adc
and
or
and
xchg
jecxz
ins
pop
frstor
movs
push
imul
leave
mov
inc
cmp
jg
mov
daa
ret
jecxz
dec
sbb
lds
outs
leave
sbb
inc
rcr
jg
rcl
or
out
add
pop
out
xchg
pop
push
push
out
pop
jl
pushf
push
push
pusha
mov
dec
or
das
imul
mov
test
xlat
and
mov
and
sbb
jp
push
test
enter
test
lods
mov
(bad)
(bad)
push
adc
cmps
stos
std
imul
arpl
fimul
mov
les
loopne
mov
pop
test
cmps
sbb
out
aam
sbb
addr16
mov
and
das
dec
xchg
or
pusha
pusha
hlt
sbb
adc
adc
push
adc
int
mov
mov
jne
dec
neg
cmp
pop
mov
xor
mov
out
les
mov
mov
xchg
dec
dec
nop
adc
clc
fdiv
clc
pop
es
or
and
cld
xchg
xor
inc
ficom
and
mov
xchg
jmp
cmp
mov
out
or
push
adc
(bad)
pop
push
xchg
mov
or
je
jbe
mov
mov
inc
dec
call
mov
mov
jl
push
scas
ins
fsin
hlt
pop
jo
pop
dec
mov
push
ret
dec
popf
xor
jb
push
out
pop
(bad)
sub
icebp
mov
xchg
int
push
cli
neg
mov
repnz
xchg
push
push
jp
(bad)
adc
xchg
mov
push
xor
sbb
js
xor
pop
adc
push
jl
(bad)
pop
sbb
mov
push
mov
push
push
pushf
(bad)
mov
mov
fld
push
dec
pop
fdivr
xchg
div
mul
mov
push
bound
(bad)
test
xor
retf
adc
xchg
dec
cld
repnz
jbe
push
push
call
mov
push
rcl
inc
jb
addr16
mov
push
rol
(bad)
sbb
xor
out
adc
ss
pop
(bad)
jl
repnz
out
push
push
or
(bad)
push
adc
mov
bound
(bad)
mov
je
xlat
cmp
push
xor
and
xor
mov
adc
(bad)
in
sub
xlat
mov
adc
sar
add
mov
mov
pop
push
ficomp
(bad)
and
mov
inc
jno
mov
sbb
(bad)
cmp
mov
stos
fidivr
(bad)
ffreep
(bad)
sbb
push
mov
(bad)
(bad)
(bad)
jo
daa
push
mov
mov
(bad)
in
rcr
ret
ja
lds
push
test
and
rcl
repz
es
in
pop
arpl
inc
sub
cli
mov
addr16
shr
out
push
jmp
in
popa
adc
and
mov
rcr
aam
xchg
pop
mov
das
sbb
(bad)
pop
cmp
in
jmp
dec
jp
loopne
sub
retf
mov
push
retf
lock
imul
pop
mov
xchg
pusha
add
inc
daa
shl
gs
cld
push
in
jl
fbld
gs
rcl
or
fs
lds
push
(bad)
cli
lods
test
aam
jge
call
add
adc
sbb
push
inc
jnp
mov
push
pusha
das
pop
pusha
push
sbb
imul
ins
mov
loope
cdq
inc
jl
add
(bad)
cdq
jge
xchg
cmp
scas
inc
es
js
loopne
xchg
ss
and
dec
xor
jnp
jb
jmp
idiv
fnstcw
inc
sti
xor
push
xchg
ret
in
fcom
hlt
cs
out
sahf
jp
in
mov
arpl
jmp
cwde
pop
shr
jae
call
(bad)
outs
mov
mov
lea
sbb
xchg
test
mov
adc
mov
hlt
xlat
jmp
sbb
iret
ret
jmp
xor
(bad)
cmp
add
mov
and
in
outs
push
mov
jl
stos
pop
xor
inc
xlat
push
dec
pushf
ret
shl
adc
cmp
aaa
mov
mov
push
jne
test
mov
mov
stc
jecxz
mov
mul
into
ss
dec
xor
mov
pop
loopne
xor
jg
lds
fwait
jo
mov
fimul
idiv
repz
or
stos
push
cmps
mov
iret
call
jp
out
inc
sti
retf
xlat
xchg
sub
xor
xchg
mov
hlt
dec
inc
or
out
jb
in
hlt
mov
not
jl
or
jp
inc
mov
push
mov
in
cmovne
ds
les
inc
and
je
int3
in
push
or
into
mov
sub
sti
fisttp
jbe
xor
dec
xchg
sub
xchg
test
push
in
scas
mov
jmp
mov
pop
push
jge
lods
xor
jnp
lea
shr
dec
jo
pop
leave
mov
sub
movs
repz
mov
mov
add
xchg
mov
adc
das
fisub
mov
or
lods
sbb
xchg
out
mov
mov
dec
mov
cmp
dec
push
xlat
or
fdivrp
pop
pop
adc
cmp
lock
loopne
mul
cmp
mov
pop
scas
pop
das
cmp
cwde
cld
vmwrite
cwd
push
mov
adc
xchg
dec
mov
jnp
and
cli
mov
pop
mov
cmc
in
rcr
dec
mov
adc
js
jl
rol
(bad)
push
test
mov
in
call
fisub
lahf
fcmove
xchg
out
xor
sbb
or
retf
and
fbld
push
mov
call
or
jo
cmp
out
cmps
cmps
pop
fdivr
xchg
iret
shl
mov
dec
sbb
in
(bad)
mov
dec
dec
or
fdivr
popa
pop
dec
retfw
cmp
adc
pop
push
mov
xchg
daa
out
and
fst
dec
inc
sub
mov
and
jb
and
xor
mov
jmp
outs
sbb
cmps
jo
and
sub
scas
jge
clc
hlt
mov
mov
ror
jb
sahf
add
test
out
jge
aam
jmp
jbe
push
enter
ror
mov
pop
inc
mov
mov
fmul
dec
(bad)
movs
into
adc
or
cmp
dec
dec
inc
cmp
loope
pop
int
cmc
cmp
rol
mov
scas
jmp
xchg
xchg
push
(bad)
(bad)
inc
inc
test
mov
ror
mov
loopne
gs
add
data16
jns
inc
lahf
(bad)
(bad)
arpl
inc
xlat
loopne
xor
shl
outs
or
add
addr16
sub
mov
and
ins
rcr
cmp
jmp
fsub
sub
sbb
mov
fsub
push
push
jb
lock
jo
mov
(bad)
pop
std
les
aad
sub
pusha
(bad)
pop
movs
xor
mov
push
and
jo
test
dec
pop
sub
pop
lods
aaa
sbb
jge
jg
dec
or
aad
mov
sbb
out
and
outs
mov
(bad)
mov
xchg
aas
loop
aam
jp
out
cmps
mov
mov
jge
adc
in
sub
lds
inc
cli
xchg
pop
pop
mov
inc
sbb
dec
cdq
sbb
xchg
sahf
push
xchg
in
rcl
test
sbb
call
(bad)
dec
mov
sub
dec
push
and
pop
jo
(bad)
inc
push
call
dec
dec
cmp
bnd
fst
lods
mov
push
sbb
pushf
pop
lods
add
stc
aas
loop
retf
loope
sub
addr16
pop
dec
stos
dec
mov
icebp
ins
cmp
push
mov
jmp
pop
inc
inc
hlt
out
jnp
add
les
mov
sbb
ins
push
das
cli
int3
xchg
push
push
add
cdq
jb
(bad)
mov
popa
movs
ins
addr16
lods
or
xor
(bad)
cmp
push
das
call
adc
nop
pop
mov
or
or
popf
test
hlt
mov
mov
repz
sub
outs
sub
(bad)
sbb
retf
repz
mov
stos
idiv
inc
out
pop
xchg
xor
pop
jne
dec
sar
loop
repz
jns
aaa
and
mov
pop
adc
leave
xchg
xor
or
mov
jno
imul
scas
(bad)
(bad)
push
mov
mov
cwde
mov
jb
cwde
retf
cmp
add
cmp
pushf
retf
push
hlt
add
pop
fdivr
out
pop
mov
xor
in
pop
mov
dec
push
push
in
jle
mov
and
add
test
mov
jecxz
sbb
dec
int
inc
xchg
xchg
sbb
movs
jb
test
retf
gs
sub
mov
imul
pmulhuw
mov
mov
jg
adc
inc
add
jne
aam
ficom
push
inc
cs
cmps
add
lods
retf
ds
push
rcr
popa
pusha
(bad)
mov
fisttp
mov
lods
repz
push
fwait
sub
cld
gs
arpl
mov
adc
stos
inc
sub
fbstp
stos
stc
push
js
fist
pop
test
adc
(bad)
xchg
pop
pop
dec
into
jne
arpl
adc
and
jp
in
sub
imul
fiadd
cmp
mov
outs
sub
jns
jmp
and
lods
dec
push
dec
cdq
push
push
loopne
pop
cmp
inc
sti
lods
adc
lock
cmp
test
imul
in
adc
dec
mov
xor
cmc
sub
cmp
in
test
movs
int3
add
jecxz
push
pop
sahf
jmp
dec
sbb
adc
call
and
sbb
popa
iret
and
mov
mov
(bad)
int
out
push
stc
mov
ror
stc
sbb
mov
aad
loop
sar
mov
add
jmp
sub
fcomp
inc
dec
xchg
jo
push
movs
sbb
lds
call
mov
shr
and
or
jge
xor
test
xor
je
pop
leave
push
add
mov
out
jecxz
dec
inc
inc
imul
or
std
in
add
push
pop
ss
lods
fild
loopne
inc
sub
aam
test
pop
scas
sub
inc
mov
push
sti
aas
ret
inc
test
js
ret
push
xlat
xchg
cs
(bad)
out
push
(bad)
ins
dec
pop
fistp
xor
push
cmc
inc
jae
adc
dec
cdq
scas
(bad)
and
clc
cmc
out
dec
add
push
hlt
sbb
push
cld
jge
sbb
mov
stc
xor
addr16
sub
je
mov
mov
pop
and
mov
push
imul
dec
shl
nop
and
sub
lahf
fidivr
inc
pcmpeqw
inc
icebp
jae
adc
call
xor
out
adc
jp
xchg
jge
jmp
test
mov
xchg
fcom
mov
adc
pop
sub
arpl
sub
out
cwde
xor
retf
mov
mov
ret
js
mov
stos
jo
push
cmp
add
jbe
jbe
xlat
enter
xchg
xor
sbb
push
dec
movs
cmp
aas
push
test
loopne
jmp
sbb
call
mov
mov
ins
test
fwait
and
pop
jl
sub
sbb
sbb
movs
cld
and
stos
test
arpl
jle
and
ja
in
stos
inc
cmp
shr
jns
sbb
test
pop
lods
mov
mov
and
loop
stos
inc
in
pusha
add
dec
push
test
jo
inc
ret
sbb
cli
fnstcw
inc
dec
inc
pop
int3
fs
jae
xchg
fsub
fist
cmps
pop
rol
pop
and
loope
xchg
and
dec
mov
and
icebp
xchg
lods
push
inc
popf
xchg
pop
popf
xor
iret
mov
inc
repz
sbb
xor
xor
retf
mov
shl
adc
jge
imul
adc
dec
in
ja
mov
pop
xor
sbb
jno
je
pop
js
adc
in
pop
test
push
xchg
cmp
and
sbb
stc
dec
sti
stos
add
jbe
cs
mov
mov
pusha
mov
jno
mov
enter
js
jmp
mov
mov
add
fidivr
add
adc
(bad)
call
out
jae
mov
daa
xlat
out
call
in
dec
(bad)
ror
shl
dec
in
xchg
fstp
push
cli
stos
cmp
hlt
or
push
loop
(bad)
mov
cdq
pop
(bad)
dec
lods
jns
or
fild
nop
mov
sbb
cmp
jnp
es
ss
or
sub
mov
xor
inc
sub
fdivrp
mov
fadd
dec
adc
adc
movs
sub
(bad)
dec
cmp
mov
push
dec
(bad)
mov
das
mov
jp
fisub
fisub
xchg
movs
mov
sbb
pop
fcomp
adc
inc
cmp
jmp
xor
fld
shr
popa
pop
inc
mov
mov
shr
movs
(bad)
fbstp
mov
xchg
xchg
pop
jmp
xor
sbb
xchg
cmp
out
and
(bad)
jecxz
iret
movs
cmp
dec
inc
and
stos
repz
es
js
add
rcr
mov
xchg
fidiv
mov
jge
mov
xchg
rcr
sbb
(bad)
mov
mov
iret
inc
xchg
push
arpl
jne
mov
xor
jns
cmps
mov
push
jne
inc
or
jnp
icebp
daa
mov
pop
gs
jecxz
fmul
jmp
xor
leave
push
shl
outs
add
out
clc
leave
push
dec
fldl2e
adc
jb
inc
and
pop
xchg
fist
out
es
fdivr
pop
mov
imul
jmp
sub
rcl
xchg
xor
adc
movs
xor
mov
fcmovne
(bad)
sbb
addr16
out
pop
xchg
arpl
lds
fnstsw
pop
jg
sub
jbe
in
ror
(bad)
out
and
mov
jmp
add
dec
xchg
cld
popa
cwde
lea
and
or
pop
lods
and
inc
inc
inc
push
fimul
jns
inc
shr
fsub
jge
mov
mov
out
mov
scas
or
xchg
loope
iret
mov
push
push
shl
jo
xor
retf
lods
sub
xchg
mov
dec
sbb
mov
pop
stos
test
jecxz
or
in
out
mov
jno
std
popa
push
sbb
hlt
mov
clc
mov
sub
mov
push
loope
mov
sub
mov
push
lahf
(bad)
mov
mov
je
arpl
ret
adc
inc
inc
pop
fisttp
daa
push
mov
hlt
add
jmp
inc
xor
xchg
and
jmp
sbb
xchg
leave
xor
test
gs
or
cdq
in
ins
sub
pop
xchg
add
lods
movs
shl
inc
jmp
mov
rcr
dec
clc
pusha
scas
cmp
iret
fsubr
loope
(bad)
xchg
mov
mov
cmp
jns
adc
jmp
add
sub
inc
push
and
adc
in
movzx
mov
repnz
fidivr
mov
sub
aas
sbb
enter
pop
add
addr16
jnp
adc
shl
or
(bad)
sar
push
das
sub
js
arpl
xchg
gs
push
ins
(bad)
xchg
js
jo
mov
fs
xor
outs
cs
and
loop
sub
(bad)
sti
adc
movs
xlat
fcom
movs
in
cdq
pop
mov
jo
(bad)
retf
clc
mov
lahf
jp
je
aaa
mov
das
pop
pop
lods
jmp
aad
cmc
mov
mov
sub
mul
js
retf
inc
push
mul
mov
mov
sti
adc
addr16
pusha
cmp
pop
std
push
cmp
icebp
std
aaa
push
jns
adc
cmp
xchg
xchg
xchg
test
add
mov
lahf
xchg
ins
aad
pop
mov
adc
stos
xchg
scas
ds
mov
mov
(bad)
imul
retf
cmps
push
fsubr
mov
retf
or
push
dec
sub
xchg
int3
stos
sub
imul
sub
push
mov
test
sti
pop
sub
cmp
jo
jmp
lahf
je
jns
mov
mov
xchg
fwait
cli
cmp
test
retf
or
mov
mov
std
mov
push
push
cmp
add
mov
cmp
xlat
xchg
pushf
ror
push
shr
push
dec
mov
add
sub
xor
jmp
mov
mov
retf
hlt
xchg
push
loopne
jmp
dec
in
adc
jecxz
pop
jae
jmp
movs
(bad)
jo
lea
pop
ret
les
nop
movs
cmp
daa
push
dec
imul
and
push
dec
pusha
in
fld
cdq
mov
rdpmc
imul
in
jp
xor
cs
xchg
aaa
jmp
mov
sbb
sub
mov
pop
(bad)
ss
dec
xor
daa
fsub
inc
jmp
cmp
jg
mov
mov
fadd
cmp
push
rdpmc
adc
xchg
repnz
test
int
mov
hlt
and
mov
pushf
int3
mov
in
cmp
(bad)
pop
movs
outs
jg
mov
jne
test
push
mov
out
mov
popa
imul
mov
and
jmp
loopne
xor
cdq
xor
out
push
stos
push
pushf
pop
pop
loop
rcr
mov
loope
sub
pop
mov
mov
sbb
dec
and
push
mov
push
or
ror
cld
jle
push
and
jmp
int3
pop
call
addr16
loopne
mov
xlat
cli
stos
xchg
xchg
inc
in
dec
xchg
lea
sbb
inc
(bad)
mov
and
push
add
aad
mov
out
jns
outs
pop
rcl
out
push
pop
das
inc
sbb
pop
aam
sub
xlat
retf
lods
in
push
mov
dec
es
mov
sar
push
sahf
retf
into
addr16
nop
cli
in
jp
lahf
or
xor
mov
cmps
test
xchg
lods
inc
cdq
push
out
fidivr
cmp
daa
mov
xlat
push
or
aam
mov
neg
inc
(bad)
faddp
push
nop
cld
and
sbb
jnp
pop
arpl
and
adc
pop
call
in
sub
and
dec
aad
jp
push
(bad)
leave
loopne
xchg
mov
xchg
rcr
outs
inc
dec
cs
bound
(bad)
ret
xchg
xchg
jne
and
xor
inc
pop
cmp
push
in
jne
stc
cmp
and
sbb
pushf
pop
lea
add
ror
adc
adc
adc
mov
iret
dec
rol
inc
out
je
cld
xor
cmp
jno
pop
xchg
out
outs
clc
sub
in
pusha
jbe
cmp
mov
jle
in
outs
scas
push
popf
xor
jns
pusha
shr
aas
pop
dec
call
cmp
ret
cmps
lods
cmps
add
cwde
mov
mov
mov
js
pop
push
push
sbb
jnp
cdq
sbb
mov
mov
and
out
mov
push
ss
adc
mov
jns
scas
repz
push
outs
pop
pop
(bad)
dec
cmp
(bad)
into
xchg
aad
jo
nop
rcr
aaa
xchg
inc
pop
std
xor
mov
jnp
scas
test
movs
sar
sbb
pop
mov
mov
adc
or
or
cld
in
push
and
pushf
adc
or
mov
mov
cli
push
jp
mov
arpl
dec
adc
mov
xchg
iret
imul
retf
add
rol
add
cmp
mov
stos
aaa
dec
dec
div
cmp
xchg
inc
ja
jb
retf
cmp
pop
popf
sub
aad
pushf
cld
push
and
sub
mov
adc
sub
(bad)
shl
ds
sub
inc
and
clc
daa
(bad)
xchg
xchg
xor
mov
movs
les
aas
pusha
mov
pop
mov
les
iret
(bad)
sbb
cmp
add
(bad)
add
add
cmps
data16
sahf
jns
ss
pop
test
cmc
mov
cmp
gs
pop
push
jecxz
xor
jb
xor
rol
cmp
xchg
(bad)
mov
inc
or
(bad)
leave
ins
or
arpl
test
jbe
push
shr
jmp
mov
pop
pop
outs
in
test
jno
jecxz
inc
into
cmp
push
add
mov
xlat
jnp
out
jle
int
(bad)
adc
jno
in
in
in
pop
mov
jmp
aam
pop
sub
jne
js
lock
xor
mov
push
lahf
jno
adc
enter
push
sub
call
clc
mov
loop
sub
xchg
inc
hlt
mov
test
aas
test
cdq
pop
lods
dec
lods
std
stos
ret
cdq
and
in
loop
test
fcomi
into
aad
stos
and
cwde
ret
sub
xchg
pushf
gs
stos
aam
and
sub
sti
fisttp
addr16
popa
dec
fwait
mov
js
fs
je
scas
out
das
ficomp
ins
mov
pop
xor
mov
je
outs
pop
aam
dec
popa
dec
xor
xor
xor
sbb
cwde
xchg
pop
imul
sbb
popa
test
ins
in
cmps
push
jmp
gs
shr
adc
popa
rcl
pop
add
sti
retf
xchg
xor
int
cmp
out
jae
or
jle
ss
xchg
cdq
mov
cmp
inc
lods
sbb
push
sub
and
push
sub
jp
sbb
jmp
adc
mov
or
cmp
movs
sub
mov
xchg
dec
scas
ret
push
fsub
aam
mov
mov
and
popa
push
movs
scas
stos
aad
cwde
jbe
jnp
adc
mul
jmp
mov
dec
xchg
push
mul
cmps
lea
sub
dec
mov
or
movs
pop
ret
ds
jle
sbb
popf
ficom
and
adc
call
mov
push
fwait
jp
add
cmps
dec
jecxz
ds
cmp
jno
dec
fmul
add
(bad)
cs
sub
retf
mov
je
in
mov
retf
dec
es
xchg
jg
leave
(bad)
adc
push
sub
cmp
xchg
and
push
jnp
mov
fiadd
(bad)
repz
mov
and
sar
fmul
movs
inc
sub
out
or
inc
ins
stc
popf
add
out
frstor
adc
in
movs
lahf
popa
sti
ja
out
fidivr
pop
call
xor
adc
jae
and
test
sbb
xor
cs
sbb
jl
push
mov
mov
movs
adc
jmp
fistp
(bad)
leave
repz
fdiv
fwait
in
mov
push
loope
sbb
das
pusha
outs
xchg
outs
popf
jns
mov
lods
(bad)
pop
rol
int
mov
sub
call
xchg
(bad)
adc
outs
xchg
sub
sub
out
jo
cmps
push
rol
mov
bound
fsubr
cmp
pushf
jg
cld
addr16
pushf
lock
(bad)
pop
movhlps
bound
mov
xor
stc
les
retf
ja
inc
push
mov
adc
out
or
mov
sub
xor
jne
xor
js
and
push
or
sbb
mov
cs
adc
cwde
push
int3
xchg
les
and
and
xchg
imul
das
add
sub
inc
mov
daa
xchg
call
aas
(bad)
out
test
sbb
xchg
sar
in
sti
aad
out
les
inc
sbb
xor
sti
(bad)
std
add
inc
lods
lock
inc
mov
dec
and
inc
mov
dec
ins
(bad)
cmp
sbb
movs
pop
mov
and
(bad)
loop
and
push
inc
icebp
jno
xchg
outs
rol
inc
out
mov
mov
lods
hlt
iret
mov
mov
mov
ins
das
jo
int
push
inc
in
aas
adc
test
ret
sbb
(bad)
xchg
mov
ret
cmc
(bad)
or
lods
loopne
push
xchg
adc
xchg
ja
lds
dec
cmp
add
push
mov
jle
inc
repnz
div
add
and
aam
sbb
xchg
adc
sbb
mov
inc
and
inc
xchg
loope
cmc
cmps
shl
push
mov
adc
ins
outs
sbb
jns
sbb
ror
or
sbb
add
cmp
xchg
sbb
fdivr
mov
cmovbe
pop
sbb
mov
(bad)
and
sub
push
jns
outs
adc
(bad)
adc
inc
push
xchg
pop
pop
or
cmps
cld
outs
sub
cmps
outs
pop
call
jno
es
(bad)
mov
mov
imul
jmp
xchg
add
mov
mov
fwait
sub
jmp
call
sub
mov
outs
inc
aad
in
not
mov
pop
and
mov
and
xor
mov
dec
dec
inc
jo
(bad)
push
xchg
cwde
call
cwde
jmp
push
enter
shufps
out
jmp
cmp
pop
cdq
and
add
stc
xor
cli
pop
mov
(bad)
enter
inc
jg
mov
ret
lods
int3
sbb
addr16
ror
ficom
(bad)
pop
and
push
add
xchg
call
sahf
sub
rcl
jbe
arpl
jmp
push
adc
neg
sahf
adc
jp
ss
(bad)
movs
jne
int
rcl
sub
je
fisub
arpl
stos
add
retf
mov
add
pusha
push
sahf
jmp
inc
retf
neg
into
and
xor
repz
iret
mov
xchg
stc
(bad)
daa
adc
mov
outs
retf
sub
sub
dec
jg
fs
push
outs
repnz
movs
cmp
xor
pop
movaps
das
aam
cmp
cmp
ss
push
cmp
and
sub
aam
fadd
adc
imul
xor
(bad)
push
jb
push
jns
adc
xor
fwait
rol
adc
or
xlat
inc
cmps
rcr
arpl
bound
or
outs
xlat
je
cmps
push
and
(bad)
into
sub
adc
shr
sbb
push
sahf
gs
pop
dec
sbb
sub
popa
(bad)
jmp
out
xchg
xor
and
in
cwde
xor
test
in
jnp
popa
adc
nop
jmp
mov
mov
jmp
xchg
cmp
or
ret
add
adc
mov
aaa
dec
inc
sbb
in
cmp
adc
enter
out
mov
pop
xchg
addr16
push
xor
mov
addr16
out
cmc
jns
cmp
dec
pop
sbb
cmp
mov
dec
pop
les
mov
or
aad
pop
jo
cs
jl
adc
sbb
les
push
mov
pop
mov
mov
or
cmp
sub
jge
in
arpl
push
out
imul
inc
and
mov
repnz
sub
adc
iret
cmp
and
aam
imul
fnsave
pop
cmps
push
stos
dec
les
gs
in
test
jg
and
and
inc
into
in
xlat
in
cmc
and
daa
lahf
daa
inc
out
imul
sbb
gs
or
cmp
fnstsw
jge
enter
cwde
sbb
push
add
pusha
fstp
shl
mul
dec
jns
inc
jge
mov
inc
pop
ret
in
xchg
dec
cmp
xor
retf
mov
xchg
fidivr
dec
sub
mov
push
mov
(bad)
in
cmp
cmp
inc
(bad)
dec
mov
fstp
ja
jno
sbb
xchg
bound
xchg
xchg
xchg
push
xchg
fnsave
mov
retf
ret
sub
dec
xor
sub
push
sbb
call
mov
push
loope
cmp
push
pop
in
div
push
xlat
retf
sub
add
aaa
xor
inc
fidiv
test
js
loope
xchg
xor
jecxz
das
mov
out
jge
mov
fld
(bad)
popf
dec
pop
add
mov
retf
cli
and
xchg
icebp
dec
in
pop
push
popa
fcomp
adc
cld
adc
aaa
jb
xchg
jo
xor
cli
fwait
or
inc
mov
cld
jne
mov
mov
rol
push
fdivr
xlat
ficomp
xlat
inc
and
imul
mov
pop
and
ret
lds
imul
dec
and
or
cmp
adc
ss
loop
mov
shl
pop
dec
stos
jmp
or
and
mov
ins
adc
xor
jnp
les
sti
push
xchg
arpl
shl
cmps
xor
leave
aas
add
paddq
retf
enter
jbe
mov
xor
int
sub
ins
ss
movs
add
lea
std
cdq
cmp
add
mov
push
add
fsub
jmp
nop
std
push
loopne
push
test
and
ret
call
or
fwait
and
ret
mov
xchg
repz
ret
(bad)
popa
mul
mov
dec
xor
push
cs
jmp
xor
jmp
fwait
movs
aam
test
dec
lea
mov
out
xor
(bad)
push
jnp
test
dec
shl
inc
sbb
icebp
xor
ss
loop
or
popf
and
hlt
pop
addr16
mov
shr
push
or
sub
and
out
enter
call
rol
ds
imul
jmp
add
xor
movs
xor
loopne
int
pop
out
jecxz
mov
push
aas
sub
inc
mov
fxch
push
sub
dec
xchg
imul
or
inc
dec
les
ja
in
add
popa
std
pop
sub
pop
jo
xor
xchg
push
pop
sub
scas
hlt
and
retf
and
mov
adc
scas
movs
push
or
mov
sahf
sub
jge
jg
cdq
(bad)
ins
fisttp
jl
imul
ins
cli
rcl
call
xor
lods
sbb
pop
into
mov
(bad)
cdq
test
rol
data16
xchg
sub
jno
std
jge
enter
adc
rcl
addr16
inc
int3
test
sub
in
pop
pmuludq
out
bound
pop
jnp
rcr
fld
jp
and
hlt
pop
imul
and
cld
or
xor
or
lods
or
add
cmp
ja
xchg
xor
addr16
test
test
(bad)
lahf
mov
loopne
and
jmp
xor
das
ins
mov
loop
loope
sbb
add
xlat
push
pop
retf
pop
(bad)
pop
pop
repnz
cs
(bad)
bnd
dec
adc
push
cwde
or
and
xchg
nop
mov
scas
nop
(bad)
aam
std
push
dec
or
push
mov
pop
jl
inc
in
in
add
lea
sbb
or
jnp
sbb
adc
movs
stos
or
cmp
das
adc
cmp
mov
out
xchg
(bad)
mov
sbb
(bad)
pop
mov
daa
mov
push
inc
ret
lock
in
mov
mov
mov
mov
sti
daa
ins
sete
repnz
les
jbe
lahf
cli
lock
(bad)
shr
in
xor
mov
outs
das
fst
sub
add
pop
push
and
(bad)
adc
cmp
and
push
add
mov
sub
add
and
pop
xchg
(bad)
pop
cmp
jg
xchg
enter
mov
data16
movs
les
(bad)
mov
ins
mov
inc
xchg
jge
aas
pop
sahf
mov
in
aas
push
push
dec
add
xor
add
jne
sbb
call
cld
xchg
mov
cmps
or
xor
(bad)
(bad)
jns
rol
test
ret
data16
mov
cmps
rcl
xchg
clc
xor
jl
(bad)
(bad)
leave
cmp
push
and
gs
and
and
hlt
mov
loope
lods
fwait
test
xlat
xchg
sti
sub
push
(bad)
and
jns
push
cmp
and
xchg
inc
aam
ja
inc
inc
into
fiadd
in
sbb
shl
cli
iret
ficom
cmc
(bad)
cmps
ja
cmps
je
push
enter
push
mov
push
mov
inc
adc
inc
jl
mov
iret
mov
and
imul
fwait
sub
dec
sbb
sub
adc
dec
fbstp
cmp
pop
std
cmp
dec
sti
xchg
mov
sbb
xchg
push
inc
int
fcomi
jecxz
in
mov
jg
pop
fcmovnb
ds
aam
retf
sbb
xchg
rcr
sbb
push
call
retf
and
inc
mov
call
movs
pushf
mov
push
jle
sub
popf
stc
add
mov
xchg
mov
call
mov
dec
mov
inc
call
call
pop
xor
iret
imul
adc
sar
scas
jecxz
mov
dec
sbb
cmp
pushf
add
test
aad
xor
scas
push
addr16
fwait
dec
imul
jle
in
in
xlat
sbb
xor
repnz
pop
jmp
cmps
pop
jecxz
movs
jb
(bad)
jecxz
repz
mov
leave
push
mov
or
adc
test
hlt
sti
lock
mov
add
cwde
sub
aam
dec
and
test
test
sbb
dec
jl
mov
lock
cmps
adc
jae
xor
test
jp
dec
cmp
pusha
add
call
xor
aaa
jno
(bad)
scas
pop
repnz
pusha
scas
sub
push
mov
lods
pop
jge
add
aas
ja
xchg
or
or
cmps
cmp
sbb
lock
std
shl
ficomp
fwait
cdq
mov
retf
push
push
fs
aas
sete
aad
aaa
cwde
dec
xor
ds
out
inc
repnz
shl
test
and
leave
dec
fiadd
test
inc
inc
xor
fs
les
jl
movs
pop
(bad)
mov
inc
std
pop
(bad)
xchg
int3
fdiv
mov
pop
pop
cdq
sub
xlat
addr16
inc
jge
cmp
mov
jmp
sub
in
retf
stc
sub
mov
lods
pop
xlat
test
adc
test
rcl
aas
(bad)
sub
mov
xchg
pop
into
test
mov
data16
ds
in
pop
jle
xor
sub
les
jbe
aad
jge
sub
fcmovnb
sub
push
sub
pop
pop
pop
push
outs
jnp
lods
sub
mov
in
pop
dec
pushf
addr16
push
pop
pop
jbe
pusha
sti
jecxz
gs
in
sub
xchg
jle
mov
lds
in
sbb
jg
sub
dec
fisttp
jl
fistp
sbb
lgs
and
mov
dec
pop
jae
ins
jne
mov
sbb
call
stos
cdq
mov
scas
mov
icebp
outs
push
enter
(bad)
mov
jge
jg
outs
or
int3
daa
xlat
add
outs
rcl
js
push
(bad)
repnz
shl
ins
mov
xor
sbb
inc
mov
fiadd
cld
and
fwait
scas
repnz
mov
jo
mov
mov
or
movs
add
hlt
inc
aas
cmp
xchg
loopne
es
ficomp
sbb
lds
cmc
inc
loope
pop
faddp
aad
xor
test
ret
fimul
xor
mov
mov
inc
jp
mov
dec
jmp
add
and
test
inc
enter
jecxz
jb
(bad)
in
iret
ret
xlat
retf
mov
sub
mov
fcom
sub
adc
and
loopne
dec
xchg
pop
push
mov
sub
push
inc
sbb
test
repz
push
js
xchg
jmp
outs
leave
jp
mov
daa
adc
add
in
sti
pop
mov
jl
push
mov
or
ins
lea
aad
cmps
xor
(bad)
jmp
data16
dec
mov
jp
mov
fsub
test
sbb
inc
ficom
xchg
cdq
pop
push
sub
loop
push
(bad)
adc
adc
aam
hlt
jae
dec
clc
mov
mov
test
outs
push
xor
dec
push
test
jo
inc
push
pop
fs
push
loopne
test
(bad)
push
inc
scas
fld
cmc
mov
cdq
hlt
fcmove
in
mov
pop
int
xor
call
dec
shl
add
fistp
push
es
mov
mov
jmp
in
inc
js
rcl
sar
jp
pop
cmc
je
(bad)
pop
inc
aaa
jmp
in
std
ins
mov
mov
jp
stos
push
xchg
(bad)
mov
or
jg
dec
mov
dec
lock
hlt
div
stc
cmp
inc
jb
and
arpl
dec
dec
mov
push
iret
adc
icebp
gs
jmp
scas
push
imul
fld
xchg
or
ret
(bad)
shl
jecxz
add
and
aad
fst
fs
and
xchg
rcl
imul
stos
adc
outs
loopne
add
jns
cdq
jl
pop
call
xor
mov
dec
test
icebp
xor
mov
add
icebp
or
push
ins
xor
pop
lea
pop
cwde
std
mov
inc
and
ss
test
or
adc
popa
adc
iret
arpl
jbe
pusha
sub
sbb
das
dec
add
jmp
outs
push
sbb
pop
fidiv
inc
aad
hlt
fwait
jmp
cmp
mov
push
ficom
mov
inc
imul
repz
jge
cmp
fisttp
cmp
test
sub
sbb
mov
sti
jmp
pop
mov
into
jmp
xor
fs
std
retf
fbstp
aas
inc
inc
lods
cli
xchg
popf
jne
mov
push
fbstp
or
push
sub
adc
stc
adc
pushf
dec
btr
inc
daa
mov
add
movs
or
xchg
mov
push
sub
add
push
xor
into
lahf
(bad)
jns
jo
dec
pushf
aad
sbb
xchg
ja
icebp
outs
mov
adc
repz
sub
dec
xlat
dec
popf
iret
pusha
movs
movs
std
or
test
retf
and
dec
sti
movs
pop
ret
xor
push
xor
nop
dec
inc
push
sbb
nop
outs
sub
mov
sub
xchg
inc
xor
stos
int3
xor
test
out
mov
inc
retf
inc
aad
mov
lock
ror
dec
jle
xor
dec
retf
pop
movs
aad
retf
dec
pop
(bad)
movs
popf
out
cmp
sar
aam
mov
outs
bound
add
rcr
call
xchg
dec
fist
mov
outs
push
mov
mov
or
push
sbb
lahf
stos
and
cmp
sub
add
retf
sub
dec
jno
mov
outs
jno
xor
scas
xchg
xchg
adc
add
sar
lds
leave
cld
pop
aaa
std
inc
hlt
dec
xor
pop
xor
inc
mov
add
push
lahf
add
push
sbb
dec
stc
jo
ins
sbb
sub
jmp
pop
in
loopne
pop
rol
mov
sub
dec
dec
(bad)
push
orps
xchg
xchg
fsubrp
(bad)
push
dec
inc
rcr
mov
or
mov
sub
xor
add
jl
test
or
fild
aaa
mov
rcr
addr16
test
imul
xchg
fadd
fsubr
outs
and
iret
sub
pop
rcl
xchg
scas
dec
and
call
xchg
mov
mov
stos
cld
fild
xchg
jmp
xchg
(bad)
pop
xchg
dec
or
je
add
add
into
xchg
xlat
sbb
sbb
ss
dec
mov
fcomp
(bad)
jae
add
dec
nop
and
jb
mov
outs
nop
and
sub
xor
sub
mov
jns
inc
jp
(bad)
fsub
(bad)
mov
test
rcl
jl
mov
mov
stos
call
jmp
mov
and
pop
neg
movs
sahf
out
loop
xchg
data16
dec
push
jmp
sbb
adc
or
inc
out
daa
jl
cmp
cmps
aam
adc
lds
jge
jecxz
adc
imul
push
cdq
(bad)
(bad)
outs
stos
adc
add
fsub
inc
inc
stc
jo
ficomp
jb
aam
inc
rcl
inc
mov
adc
mov
xor
push
xchg
cmc
int3
sbb
dec
cli
cld
cmp
(bad)
daa
inc
shl
mov
pop
jmp
sar
pop
jp
adc
lahf
cdq
sbb
xchg
adc
push
or
jns
ja
add
fist
addr16
jmp
int3
push
jge
arpl
add
mov
mov
xor
mov
in
jl
jnp
fisttp
ret
xor
pusha
cmp
scas
push
sbb
push
rcl
hlt
pusha
inc
push
cmp
and
(bad)
adc
dec
mov
fwait
scas
stos
ret
xor
and
lahf
out
mov
in
push
mov
sub
sub
rcl
or
je
jle
das
xchg
mov
int3
xor
imul
mov
inc
fld
call
jmp
cmp
xchg
jae
bound
sub
std
dec
mov
or
aad
mov
movs
mov
push
bnd
leave
and
aas
dec
imul
mov
or
inc
mov
xchg
mov
call
ins
push
test
sub
(bad)
inc
(bad)
cli
cmp
repnz
dec
lock
loopne
ja
mov
je
ret
fdivr
mov
in
mul
xchg
in
bound
inc
mov
sti
(bad)
lock
pop
out
loop
div
jecxz
and
fimul
pop
adc
cmp
(bad)
in
and
fadd
scas
test
xchg
jmp
xchg
mov
dec
test
mov
pop
pop
cmps
jmp
js
cmps
mov
jne
int
xor
int
addr16
inc
std
test
mov
sub
sbb
xchg
add
in
ss
and
icebp
fcmovnbe
dec
xor
fwait
jp
clc
push
frstor
in
pop
dec
mov
popf
inc
ror
in
ret
xor
jl
dec
sbb
sbb
pop
push
fbstp
xchg
int
shl
cmc
fstp
ins
jmp
or
popf
sbb
repz
js
push
dec
pop
xchg
pop
pop
inc
jae
ins
add
and
in
in
data16
mov
inc
aam
inc
outs
cmp
in
pop
mov
push
mov
call
push
jmp
outs
lahf
cmps
mov
(bad)
dec
xor
sbb
and
xchg
cmps
fld
inc
push
xchg
test
and
inc
scas
jb
sahf
mov
movs
dec
fmul
inc
in
aad
pop
out
cmp
jg
jae
repz
shl
and
inc
movhps
inc
push
out
add
mov
and
sbb
(bad)
shl
call
test
ins
scas
mov
push
stos
and
sub
sub
ss
ficom
pop
call
xor
jecxz
mov
nop
call
or
mov
push
mov
nop
or
mov
shl
jmp
sub
ds
shl
fs
dec
pop
xor
inc
or
addr16
mov
jns
test
jmp
jno
sahf
pop
jbe
push
lahf
xchg
bound
mov
or
dec
cmp
sub
addr16
(bad)
xchg
out
add
sti
push
sub
push
int3
dec
cmps
push
mov
inc
mov
xchg
aad
push
movs
lods
aam
dec
cmp
aam
add
popa
xor
mov
aaa
add
lds
aaa
jmp
sti
cmp
stos
loop
mov
jae
sbb
fcom
mov
(bad)
jl
(bad)
loopne
mov
pop
jb
imul
mov
xchg
pushf
out
dec
fwait
and
cli
xchg
pop
dec
fs
jecxz
cmp
jb
adc
add
data16
or
or
jbe
pop
xor
lods
sbb
pop
into
outs
ins
xchg
cs
test
xor
and
mov
sbb
icebp
mov
mov
sub
or
add
xor
dec
je
sub
mov
dec
or
add
push
cmps
cmps
mov
dec
fs
ret
add
pop
jp
rol
outs
mov
out
pop
(bad)
jnp
fs
test
ret
and
sbb
in
pop
fisubr
les
push
sbb
sub
push
jmp
std
jo
fild
mov
pop
push
dec
sti
clc
cmp
mov
rcl
xlat
jb
iret
daa
aas
hlt
jo
xchg
or
xor
sbb
gs
fisub
sbb
xchg
int3
push
(bad)
and
outs
cmp
adc
mov
mov
dec
fidiv
or
mov
(bad)
test
fisttp
cmc
(bad)
stos
test
sbb
jmp
sub
or
adc
ret
cwde
fs
pop
xchg
int
add
cld
out
jae
sub
sbb
fist
jmp
out
mov
daa
pop
addr16
dec
mov
push
sub
(bad)
push
div
and
out
and
idiv
daa
jmp
sbb
aad
nop
push
xlat
or
in
add
mov
pop
inc
ret
xor
add
mov
push
retf
(bad)
sub
out
cmp
inc
pop
jle
jne
add
or
sbb
ds
mov
sub
xor
shl
xor
cs
(bad)
cdq
add
ror
hlt
push
push
xor
fld
sbb
stc
outs
pop
ds
sbb
or
cmp
inc
sti
shr
sbb
lea
xchg
ds
inc
in
inc
adc
into
into
pop
mov
inc
mov
xchg
mov
push
(bad)
ja
daa
ret
adc
push
in
jns
push
dec
aas
ja
jo
cmp
ss
and
int
inc
mov
out
xor
inc
xchg
and
pop
dec
xchg
lahf
pop
enter
mov
add
into
lds
movs
dec
les
imul
push
out
dec
push
outs
outs
mov
(bad)
int3
inc
mul
out
int
mov
call
das
xor
bound
xchg
sub
sar
sub
mov
jl
test
mov
inc
xor
mov
push
sbb
push
fist
cmp
mov
sub
sbb
and
push
adc
push
les
in
idiv
gs
rol
aas
ret
xchg
xor
push
(bad)
push
clc
dec
sbb
pop
mov
xor
ja
scas
xor
adc
daa
ret
sub
and
xor
sub
ds
(bad)
push
jmp
pop
xchg
(bad)
dec
icebp
lods
inc
test
jnp
jnp
pushf
jp
xor
ins
ins
xlat
pop
ret
cli
mov
or
in
pop
cmc
xchg
movs
xor
adc
clc
arpl
pusha
mov
leave
cmp
dec
jecxz
int
adc
aaa
or
lods
out
add
add
add
(bad)
retf
xor
mov
sub
xchg
add
and
inc
jbe
push
sbb
push
arpl
lds
repz
sbb
mov
lahf
sbb
mov
les
sub
fcom
inc
and
push
pop
jae
jbe
ss
or
fisttp
imul
outs
and
dec
and
dec
cmc
pushf
mov
sbb
jecxz
into
das
mov
fnstenv
aaa
jno
out
lea
scas
add
mov
or
mov
(bad)
call
push
xchg
repz
loopne
dec
imul
ret
dec
ficom
sbb
cmps
mov
in
scas
inc
cmp
mul
cmps
fistp
mov
mov
shr
xchg
add
sbb
mov
dec
push
push
push
cld
xor
test
pop
inc
(bad)
sar
sahf
sub
jb
cwde
mov
mov
gs
jae
xchg
xor
lods
sbb
daa
dec
pushfw
ss
sub
fisub
xchg
sbb
loopne
fwait
stos
inc
jae
jbe
(bad)
out
cmp
push
(bad)
fdivr
in
or
push
outs
(bad)
pop
imul
into
test
pushf
adc
enter
or
dec
pop
sbb
xchg
inc
outs
jg
fs
jl
jns
mov
or
cmc
cmp
sbb
loope
(bad)
push
sub
pop
neg
pop
add
push
sti
mov
cwde
imul
cs
out
mov
jecxz
(bad)
pusha
inc
mov
pushf
arpl
pop
stos
test
mov
mov
retf
mov
pop
jp
adc
xor
xchg
fistp
or
(bad)
loope
scas
pop
sbb
das
jecxz
dec
pop
pop
out
pusha
in
and
(bad)
xor
inc
mov
push
stos
xor
in
jmp
push
sbb
jecxz
pop
or
pop
mov
mov
aas
push
frstpm(287
sub
sub
xor
int3
daa
dec
popf
scas
cld
data16
cmp
clc
fsubr
scas
pop
out
jb
aam
sub
sbb
loop
aad
add
repnz
or
les
lods
data16
fiadd
and
xchg
push
lahf
xor
pop
dec
cmp
mov
es
test
mov
jmp
and
aaa
sti
mov
lahf
mov
push
jmp
int3
xor
adc
fisubr
adc
enter
push
daa
pop
mov
loop
rcl
xchg
mov
push
jnp
mov
fxam
mov
mov
adc
call
mov
test
push
mov
mov
add
retf
icebp
cmc
out
sbb
dec
retf
cmp
jns
stos
inc
lods
sbb
xchg
gs
xor
xchg
cwde
xchg
mov
js
cmp
adc
and
in
push
out
lds
inc
(bad)
int
mov
inc
loop
mov
pop
pop
test
cmp
xchg
mov
push
sub
fld
and
shr
aad
mov
nop
sbb
rcr
inc
lods
xor
adc
cmp
mov
mov
xchg
sub
(bad)
sbb
ds
fcmovbe
test
add
sbb
lods
jmp
cmp
outs
in
fisub
in
jecxz
in
into
cmp
in
xor
dec
loopne
push
sti
sub
fdiv
pop
add
frstpm(287
adc
mov
test
and
adc
nop
pusha
xchg
loope
adc
mov
dec
inc
jg
(bad)
xchg
loop
jp
sub
and
xor
std
imul
mov
mov
mov
neg
sub
jns
jecxz
inc
jnp
cmp
rcr
nop
and
xchg
(bad)
imul
adc
sbb
jg
dec
das
and
adc
cmp
xchg
popf
lods
call
movs
jle
cmp
fcom
push
leave
clc
add
add
lds
mov
and
mov
dec
lds
out
das
and
sar
xor
mov
sub
nop
into
add
push
pop
cdq
push
mov
lds
push
xchg
inc
jns
sub
fimul
pop
std
movs
sub
mov
popf
sbb
out
jb
clc
push
mov
pop
add
xchg
dec
dec
repz
call
mov
movs
aam
out
pusha
(bad)
sub
jmp
jg
mov
cli
push
fdiv
pop
jns
xor
cli
in
push
ins
add
pop
imul
ffree
dec
push
ins
out
les
ins
add
les
sub
push
and
enter
push
jp
mov
sbb
lds
mul
cmps
sbb
popw
jae
loopne
leave
dec
daa
cli
xchg
stos
outs
sbb
gs
cmp
add
fwait
call
add
sub
int3
jle
mov
dec
dec
test
adc
mov
pushf
int3
stos
jae
and
push
cmp
add
cmp
pmaddwd
dec
cmp
dec
fidiv
popa
cdq
pop
dec
test
pop
mov
out
push
sub
mov
xor
mov
mov
hlt
je
cmp
sbb
mov
xor
and
fwait
imul
shl
inc
and
in
ja
lea
test
je
seta
(bad)
sbb
dec
ins
add
jmp
push
sbb
in
sbb
mov
aam
scas
dec
sbb
std
jns
pop
pop
jl
jns
aaa
xchg
adc
ja
pop
pop
mov
sahf
jne
sbb
xor
pop
cmc
inc
add
pop
jbe
out
pushf
push
push
movs
mov
ja
add
dec
shl
ins
sub
jmp
sahf
mov
rcr
mov
leave
nop
outs
scas
popa
(bad)
test
add
jmp
sbb
adc
jmp
ja
mov
(bad)
out
mov
dec
inc
sbb
jno
inc
xchg
push
daa
push
mov
loop
mov
or
bound
scas
push
mov
sub
mov
push
dec
or
add
xchg
(bad)
int3
pop
call
xor
icebp
es
cmp
mov
lock
or
daa
rol
hlt
push
push
or
add
addr16
jae
js
stos
sub
les
jb
push
pushf
xchg
hlt
dec
pop
hlt
dec
pop
fsubrp
mov
aad
mov
sub
js
shl
mov
fisttp
outs
fist
mov
dec
(bad)
xor
or
and
ds
xor
retf
ins
in
int3
(bad)
int3
out
cmps
aam
test
inc
mov
jecxz
popf
mov
rcl
cmps
std
lds
push
pushf
scas
inc
popf
out
push
jle
icebp
out
dec
lods
cs
retf
lahf
mov
scas
fild
sbb
mov
mov
enter
pop
mov
loopne
push
inc
(bad)
aas
nop
sub
push
pop
mov
dec
fadd
(bad)
mov
jecxz
int
mov
push
adc
std
std
in
iret
xchg
inc
pop
jl
mov
cmp
stos
scas
mov
fdiv
mov
mov
mov
mov
sti
fadd
popa
inc
(bad)
pop
lahf
adc
mov
fnstcw
(bad)
jecxz
xor
hlt
int3
xor
lds
add
jle
cmp
cmp
cld
aam
dec
int
outs
fs
test
add
nop
pop
out
cmp
jge
fsubp
pop
pop
push
inc
nop
push
popa
and
shl
xchg
aas
daa
in
pushf
jmp
aaa
mov
jmp
jnp
lahf
xchg
mov
sbb
adc
call
dec
and
aad
jne
in
pop
aam
scas
enter
jmp
add
fstp
xor
or
mov
pop
and
fstp
aaa
out
sbb
cmp
ds
mov
test
sbb
retf
cld
arpl
cmc
cwde
mov
fcmovne
mov
xchg
push
and
shr
push
fld
aad
jmp
cmp
sub
xor
shr
mov
cmp
dec
push
aad
dec
test
mov
outs
xchg
sbb
cli
fs
(bad)
mov
repnz
pop
enter
or
pop
idiv
call
movs
xchg
mov
or
in
lahf
adc
repnz
outs
adc
fst
dec
retf
mov
(bad)
xchg
inc
pop
dec
in
adc
cmp
retw
sub
cmp
sub
pushf
mov
sbb
iret
push
inc
scas
fsubr
mov
jecxz
xchg
cmps
sbb
mov
dec
icebp
jbe
movs
inc
mov
and
push
xor
ja
imul
cmp
and
ret
cmp
mov
popa
cmp
jns
and
jecxz
xchg
fst
in
imul
xchg
push
fdivr
cmp
mov
xlat
test
call
mov
fisubr
lods
(bad)
mov
xor
pop
pop
imul
sbb
pop
jle
in
dec
leave
xor
fadd
fimul
sbb
inc
add
mov
(bad)
fild
dec
test
mov
seto
mov
cmp
mov
or
(bad)
jmp
(bad)
sbb
mov
mov
dec
(bad)
or
ins
lock
inc
shl
jo
and
(bad)
push
jbe
sbb
or
outs
test
popf
sbb
mov
jnp
push
inc
aas
mov
cdq
cli
mov
(bad)
sbb
inc
fwait
sub
pop
xor
addr16
dec
icebp
mov
dec
jecxz
sub
mov
inc
stos
mov
repz
sar
sub
mov
lods
add
lock
xchg
es
imul
(bad)
sbb
pop
jp
scas
mov
out
jecxz
std
add
js
dec
inc
push
mov
js
sub
call
fwait
inc
xor
(bad)
cld
call
and
push
cmp
hlt
push
sbb
sub
cmp
add
dec
sub
mov
mov
dec
loopne
add
mov
jno
or
retf
dec
xchg
scas
xchg
add
inc
(bad)
rcl
sbb
aas
pushf
pop
push
xor
je
xchg
ja
bound
jecxz
loopne
arpl
test
cdq
dec
jmp
fsubr
hlt
sbb
cwde
add
add
bound
jmp
sub
hlt
(bad)
idiv
or
cmp
sahf
out
imul
and
(bad)
mov
sbb
fisttp
adc
ror
cmp
cmp
xchg
jg
fstp
fwait
shl
cmc
pop
cmp
in
out
or
fimul
je
shl
ins
stos
cmp
iret
adc
push
xor
ss
popa
add
and
jp
sub
(bad)
push
data16
rol
pushf
int3
loope
dec
adc
adc
jne
mov
xor
nop
inc
push
and
push
push
fwait
cmp
inc
mov
mov
jmp
sub
stos
test
gs
inc
fisttp
(bad)
sar
fmul
sub
and
push
jmp
mov
(bad)
push
idiv
mov
add
push
adc
adc
into
cmp
les
scas
mov
fst
(bad)
repnz
ss
push
test
cmp
mov
cmp
and
outs
std
fist
xor
or
inc
dec
push
ret
retf
xchg
push
cmp
mov
inc
jecxz
jnp
in
mov
rcr
cmp
adc
sub
mov
dec
imul
in
cmc
inc
sub
cdq
mov
fstp
fcom
imul
inc
cmp
addr16
cmp
add
jnp
ins
repnz
lods
mov
xchg
mov
push
xcrypt-ofb
cmps
lods
fs
add
retf
inc
xor
idiv
fist
push
call
lock
xlat
cmp
or
stos
jb
cmps
call
inc
adc
cmc
retf
mov
aam
push
sbb
cmp
sub
jl
cs
loop
(bad)
mov
sub
and
test
cld
std
inc
aam
xchg
adc
and
aas
retf
inc
inc
xor
xchg
arpl
bswap
cs
push
shr
nop
xchg
xchg
not
push
std
xchg
pop
(bad)
jae
pop
and
fisttp
arpl
cmp
push
mov
cmp
cmp
in
retf
mov
cmc
mov
mov
into
push
pop
leave
add
pop
sbb
xor
inc
fnstenv
popa
jns
xchg
xchg
pop
out
push
cld
dec
inc
push
scas
sub
pop
fs
sub
aam
hlt
push
xlat
popa
push
arpl
mov
inc
fidiv
sub
std
fisubr
inc
inc
jno
push
mov
stos
shl
lfs
fmul
fst
int
xchg
(bad)
and
fistp
pushf
sub
movzx
or
jne
mov
loopne
cwde
mov
xor
cwde
jmp
xchg
mov
jecxz
or
jp
mov
dec
xor
lea
mov
push
pop
out
and
in
cvtdq2ps
mov
cmps
lods
shr
adc
adc
jnp
inc
xchg
out
sar
or
push
push
cmp
dec
push
sub
fdiv
ror
aad
cdq
or
mov
push
mov
data16
rcr
adc
jno
sub
mov
fstp
push
xlat
dec
imul
shl
inc
sub
jge
bnd
lods
push
adc
arpl
mov
(bad)
shl
sub
mov
mov
push
and
add
mov
ud0
ss
inc
ror
push
(bad)
out
push
and
fs
push
xor
jmp
push
and
movs
movs
imul
mov
push
xor
cmp
repnz
clc
rol
xchg
sub
add
test
xchg
(bad)
pop
xchg
(bad)
(bad)
cdq
cdq
stos
fisub
jl
xor
and
cdq
call
popf
fs
cli
shr
fwait
inc
adc
test
dec
xchg
sti
and
jbe
arpl
adc
aaa
push
rcr
xor
(bad)
push
retf
ret
out
add
aas
pushf
scas
xchg
xchg
das
push
cmp
popa
pop
fst
test
fcmovbe
inc
pop
fbstp
xchg
xor
sbb
jo
shr
xchg
in
stos
sahf
or
cmp
popa
arpl
push
loope
cdq
int
fimul
xor
xchg
into
xchg
sbb
mov
dec
mov
pop
pop
jns
scas
or
shl
icebp
xchg
xchg
pop
pop
or
hlt
pop
int3
push
rcl
int
test
push
(bad)
fadd
mov
pop
rcr
shl
dec
adc
shr
or
fdiv
xor
jae
and
mov
mov
xchg
xchg
adc
mov
fsub
stc
shl
shl
dec
inc
pop
cmp
pop
test
jno
mov
mov
cmps
cmp
push
adc
lods
repz
jle
sub
mov
push
pusha
push
mov
push
cwde
or
push
mov
std
out
test
clc
test
push
cmps
icebp
pop
int
ret
dec
rol
or
jg
ret
(bad)
push
mov
pop
lods
mov
imul
pop
inc
lock
bswap
mov
dec
sub
in
mov
add
sbb
lods
xor
(bad)
mov
pop
shufps
pop
popf
outs
mov
adc
jecxz
mov
out
jp
mov
inc
scas
ror
or
ficom
es
pop
pop
sub
jge
add
adc
cmps
cmp
add
fsub
loopne
fcomi
cmp
aad
std
jmp
xchg
retf
into
adc
add
call
xor
inc
push
and
das
ds
push
xlat
pop
sub
mov
pop
jle
mov
sub
out
ror
in
test
call
addr16
outs
xchg
lds
into
jae
mov
(bad)
jne
adc
mov
imul
(bad)
lock
inc
ja
jge
int
cmp
mov
mov
fs
push
ret
enter
inc
in
mov
fwait
inc
daa
outs
mov
call
xlat
data16
dec
ret
jno
cmp
scas
repnz
cs
mov
xchg
or
inc
jp
dec
push
imul
or
jl
sub
mov
dec
dec
xchg
cmp
cmps
fdivr
cs
mov
xchg
jecxz
xor
ds
out
xor
shl
sub
xchg
mov
cmp
pop
and
xchg
sbb
mov
mov
xchg
pop
mov
and
mov
add
inc
jnp
push
push
test
mov
inc
inc
movs
scas
mov
mov
mov
and
adc
(bad)
sub
jnp
dec
ds
xor
pusha
add
dec
and
rcl
push
in
ds
arpl
test
mov
dec
stc
ins
add
jbe
in
scas
mov
cmp
inc
(bad)
btc
cld
pop
int3
mov
stc
add
jle
xchg
lahf
stc
sbb
mov
sbb
jge
jmp
ret
jnp
sub
push
shl
lods
pop
xor
shl
cmps
mov
test
mov
push
sub
clc
push
jmp
aad
lea
dec
int3
or
and
aam
and
sub
mov
mov
dec
inc
outs
mov
in
add
add
xor
fbstp
cmp
mov
jmp
dec
js
mov
and
adc
data16
daa
lock
add
mov
push
inc
jo
dec
push
xchg
xchg
jnp
mov
gs
mov
xor
dec
(bad)
sub
cdq
cmp
stos
inc
test
rol
repnz
test
cwde
dec
lods
inc
xor
mov
adc
out
xchg
std
sbb
stc
leave
mov
add
outs
mov
sbb
movs
jecxz
jne
out
fist
cmc
jns
(bad)
mov
lods
xadd
fild
movs
and
pop
mov
xchg
cli
add
cmp
lds
sbb
clc
mov
dec
push
cli
push
retf
xchg
dec
jmp
nop
dec
add
fwait
and
jae
arpl
rcl
loope
push
add
add
icebp
ss
pop
inc
sbb
push
xchg
xlat
sbb
and
(bad)
xchg
(bad)
inc
data16
push
dec
inc
dec
pop
sbb
mov
add
jo
xchg
nop
scas
jno
dec
and
stos
mov
xor
mov
jge
mov
push
inc
lahf
outs
repnz
ret
stc
(bad)
xor
cs
sahf
pop
mov
inc
mov
mov
pop
cld
inc
cmp
(bad)
int
xor
sar
loop
or
dec
mov
adc
mov
cld
inc
cdq
mov
test
aad
outs
je
push
(bad)
in
fnstcw
(bad)
cmp
add
das
pop
pop
loope
(bad)
mov
cmp
xor
lahf
xchg
or
nop
in
lahf
sti
outs
retf
mov
in
push
pop
push
pusha
jnp
push
pop
fnsave
sbb
or
repnz
loop
retf
nop
fs
push
jmp
scas
push
push
jmp
push
hlt
sti
pop
push
leave
pop
in
and
cmc
out
add
imul
test
outs
push
icebp
stos
xchg
es
or
in
idiv
dec
inc
in
bnd
pop
add
out
or
mov
leave
lds
js
int
(bad)
fidivr
les
icebp
lods
add
(bad)
frstor
pop
dec
jb
pop
pop
ror
lock
popf
and
mov
test
sti
inc
addps
imul
push
pop
enter
(bad)
lgs
rol
daa
and
lods
(bad)
mov
and
add
or
adc
mov
cdq
lods
sbb
lods
add
mov
xor
ror
add
mov
fincstp
ja
inc
(bad)
pop
jp
push
popa
add
inc
sub
dec
pop
cdq
rol
sbb
fld
push
test
jmp
dec
aas
xchg
inc
inc
in
xor
fisttp
stos
dec
mov
pop
jg
pop
ficom
cmps
sub
test
xchg
hlt
adc
scas
mov
mov
pop
cmp
push
into
pop
or
and
push
push
out
call
shl
int
push
out
or
jmp
dec
add
rcl
call
(bad)
or
repz
cmp
popa
out
fidivr
fidivr
out
dec
cmp
(bad)
call
add
and
jns
dec
push
mov
push
lock
push
jno
nop
test
add
add
push
dec
std
mov
fisttp
jmp
jo
sub
lods
xchg
(bad)
jecxz
lea
shr
and
shl
sub
nop
iret
sbb
lds
and
pop
inc
sub
and
(bad)
retf
or
movs
and
call
lods
sub
inc
(bad)
daa
les
add
movs
in
outs
mov
(bad)
data16
stos
adc
xor
push
jnp
sbb
jb
adc
and
inc
out
dec
and
in
mov
xchg
pop
xchg
out
adc
mov
lahf
sub
mov
adc
cmp
or
out
sub
inc
ror
mov
inc
sub
je
pop
xor
not
jb
cmc
pop
test
push
jmp
mov
push
dec
stos
sar
and
dec
mov
aad
dec
aas
out
xchg
out
and
push
outs
hlt
or
aad
or
dec
dec
add
or
fcomp
popa
jp
sti
xchg
dec
fstp
pop
push
fsubr
ss
call
inc
mov
stos
mov
and
ins
icebp
and
lods
int
sbb
sahf
push
and
jecxz
test
xlat
test
jl
lods
inc
dec
pop
inc
push
icebp
inc
popf
out
adc
jecxz
ss
pop
push
rol
nop
mov
lods
or
pop
dec
push
scas
and
mov
push
mov
dec
xor
mov
cmp
iret
iret
les
mov
pop
shr
jecxz
push
push
sub
ds
push
ds
push
inc
test
test
push
mov
mov
sub
add
push
repnz
and
popf
out
mov
push
stos
add
mov
xor
ins
imul
mov
mov
pop
js
push
cmps
loope
loope
add
loopne
add
je
cmp
rcr
adc
lahf
hlt
dec
adc
mov
cwde
mov
inc
hlt
ds
gs
mov
push
sub
cwde
cmp
adc
aaa
jo
or
ret
and
div
add
sti
loopne
pusha
inc
mov
mov
or
sub
push
arpl
idiv
jle
and
pop
xchg
sub
popa
push
push
mov
aam
lahf
cld
inc
or
cmp
shr
inc
nop
shr
call
xchg
sbb
xor
call
jmp
aaa
shr
push
jnp
popa
adc
sub
repnz
dec
inc
retf
dec
jl
jecxz
lahf
cli
mov
inc
xchg
aad
retf
jl
sub
sub
aad
ret
out
mov
add
add
inc
aaa
mov
scas
sub
es
stc
les
mov
xor
jmp
pop
push
shl
sar
jb
add
jmp
jge
sub
jmp
xchg
cmp
mov
sub
mov
pop
and
movs
add
cmc
dec
jnp
sbb
ret
pop
ds
xchg
movs
jo
mov
jmp
retf
stos
sbb
push
push
mov
push
dec
das
iret
or
je
fucomp
or
inc
xchg
or
loope
xchg
or
icebp
mov
push
ja
js
addr16
jge
rcl
test
cmp
fcomp
enter
bnd
pop
bound
movs
fs
neg
or
aas
repz
sbb
in
test
pop
pop
aam
cld
and
xacquire
popf
xor
enter
fs
push
push
lea
fwait
jle
mov
cmc
imul
test
sbb
mov
adc
xchg
cwde
sub
or
bound
repnz
and
aad
add
and
pop
test
jns
ret
imul
sbb
mov
pop
xchg
adc
test
dec
popa
jns
mov
loopne
nop
adc
mov
lods
fidiv
dec
int
xor
ror
ins
and
call
pop
pop
mov
adc
sub
ja
out
mov
and
inc
rol
popa
xlat
test
sub
cli
add
cmp
test
sub
nop
nop
mov
jge
jne
aaa
cmps
xchg
aas
call
fmul
pop
add
jae
ja
xor
and
adc
mov
jno
in
mov
cwde
neg
and
and
mov
sub
cli
pop
fimul
sbb
ret
sub
or
arpl
dec
dec
add
call
cmps
fnstenv
xchg
js
std
outs
fs
jmp
pop
test
popf
out
mov
mov
cdq
cs
lods
repnz
inc
(bad)
mov
je
xor
dec
and
pushf
imul
mov
sub
add
jl
lock
frstor
int3
dec
repz
es
inc
fiadd
and
pop
movs
dec
jmp
fimul
popa
nop
inc
dec
pop
fs
mov
push
ds
lods
push
jle
or
lds
aam
mov
add
aad
adc
int3
mov
push
in
or
es
loop
cdq
jne
cs
push
rol
and
mov
jle
sub
or
fist
dec
in
fs
(bad)
add
cmp
mov
test
scas
cdq
(bad)
dec
sub
scas
inc
out
push
stos
popa
dec
hlt
push
out
in
ror
call
imul
out
mov
jmp
jns
cdq
push
enter
xchg
aas
movs
aad
jo
adc
cmp
sbb
cmc
in
ret
mov
test
inc
enter
jle
(bad)
in
pusha
test
aas
adc
dec
inc
sbb
jns
push
out
jns
shl
dec
lods
ds
pop
cdq
rol
int
push
dec
mov
idiv
gs
addr16
adc
push
and
fst
fwait
xor
inc
push
in
mov
xchg
xchg
lea
mov
popf
in
jmp
shr
cmp
add
inc
cwde
add
xchg
push
xlat
int
addr16
jle
jmp
cmp
mov
pop
or
scas
push
int3
test
mov
ror
adc
jp
call
jmp
sar
mov
push
or
cmp
lods
iret
dec
jmp
sub
pop
adc
fwait
neg
xor
mov
jle
test
(bad)
imul
lods
dec
loope
popf
add
pushf
xchg
mov
stos
mov
xchg
xor
(bad)
mov
js
cwde
test
sbb
push
cdq
sub
or
addr16
adc
aas
mov
xchg
push
pop
pop
cmp
aas
inc
pop
aad
pop
sub
or
imul
adc
adc
inc
pop
lahf
in
dec
and
sub
(bad)
(bad)
cmp
xor
ins
or
jge
and
mov
in
push
mov
push
int
sti
cmp
adc
sbb
cdq
mov
pop
pop
(bad)
push
xor
xlat
pop
not
xor
inc
xor
imul
jmp
rcl
xor
mov
push
icebp
mov
fs
imul
arpl
inc
or
out
sbb
mov
push
cmp
or
mov
jge
mov
dec
dec
pushf
xor
fistp
loopne
push
fsub
pushf
jmp
jmp
xor
push
push
xchg
cmp
and
nop
or
imul
xor
sbb
fmul
inc
pusha
xchg
dec
out
mov
fisttp
jbe
mov
mov
jmp
pop
repnz
popa
repz
enterw
in
imul
jp
mov
lods
popa
push
pop
xchg
stos
repnz
push
adc
lods
nop
imul
xchg
xchg
repnz
pusha
gs
ficom
dec
fst
out
lds
(bad)
adc
popf
mov
pop
or
jmp
pop
mov
and
inc
pop
fucom
test
loope
sar
shl
push
mov
stc
out
adc
jnp
aad
push
icebp
pop
mov
push
stos
popf
int3
fld
adc
je
push
or
xchg
std
mov
push
cmp
pop
inc
hlt
sar
mov
pop
out
jp
es
sub
aam
mov
inc
in
jmp
add
pop
push
iret
add
inc
inc
enter
imul
pop
and
or
push
or
jno
xor
push
addr16
pop
not
call
shl
mov
cwde
mov
mov
pop
mov
lds
and
jae
sbb
and
adc
test
or
mov
aaa
das
fistp
sub
mov
cmps
(bad)
fucomip
push
adc
daa
in
outs
test
push
lahf
dec
movlhps
cmp
(bad)
imul
test
inc
and
jae
daa
push
ins
lds
push
jnp
mov
dec
mov
pop
loop
sar
(bad)
push
adc
sbb
push
movsx
mov
jnp
ins
mov
push
xor
call
inc
jle
xchg
or
push
xlat
inc
sbb
outs
sbb
mov
pop
xor
in
jge
push
xchg
aas
or
mov
pop
nop
cli
sahf
outs
mov
or
push
loopne
je
stos
mov
dec
outs
xchg
jmp
jle
jle
lds
mov
pusha
xchg
mov
dec
jb
xor
(bad)
sti
fs
mov
nop
aas
xchg
(bad)
xchg
push
push
rol
(bad)
and
mov
sbb
xchg
int
xchg
es
test
xchg
adc
add
bound
sub
sbb
ud1
or
jmp
rcl
mov
mov
dec
push
push
aad
adc
push
int3
repz
mov
dec
stos
push
cmp
inc
xchg
xor
retf
outs
xor
add
and
sub
fwait
rcr
xor
mov
push
jo
cmps
gs
leave
in
xchg
sub
(bad)
sbb
shr
enter
add
adc
cli
out
add
push
xor
fisub
xchg
mov
inc
mov
imul
mov
fidivr
daa
cmps
pop
mov
mov
adc
xchg
aad
ins
aad
mov
mov
test
call
shr
je
adc
mov
adc
sbb
movs
lds
imul
adc
pop
sbb
cmovp
inc
(bad)
fdiv
sar
pop
in
sbb
imul
mov
mov
xor
fwait
lods
fld
test
stos
sub
imul
pop
jle
push
jl
test
fdiv
test
mov
ror
mov
dec
push
fmul
add
out
xor
clc
cmovle
das
or
xchg
sbb
cmp
push
daa
mov
cs
jmp
inc
adc
xchg
adc
lds
mov
ret
test
dec
scas
outs
sbb
xlat
sub
xor
es
cwde
mov
dec
mov
push
cmps
bound
mov
mov
outs
push
data16
cmp
movs
ror
sub
xchg
add
add
mov
in
or
dec
mov
fldcw
fisubr
out
ret
pop
adc
xor
cli
scas
mov
shl
mov
xchg
add
dec
shl
push
enter
pop
bound
es
jp
pusha
pop
jmp
lahf
mov
sub
lahf
sti
test
push
movs
je
mov
push
lods
retf
sub
adc
jl
and
aam
cmp
retf
ds
loope
aam
xor
ins
add
js
in
jl
add
push
adc
sbb
fsubr
loop
stos
adc
mov
mov
add
and
fwait
sub
and
in
out
jge
test
lahf
and
pop
sar
sub
mov
lock
movs
inc
push
aam
lds
pusha
or
hlt
and
mov
sbb
sbb
and
bnd
not
push
sbb
pop
je
sub
jb
mov
sbb
jl
push
aam
lea
pop
inc
nop
mov
xchg
add
iret
lahf
xor
neg
popf
jecxz
mov
adc
movs
mov
dec
scas
sar
loop
loopne
inc
add
rcr
test
shl
xchg
xchg
loope
jne
or
out
mov
xor
ret
daa
push
mov
mov
jne
lods
cmp
cmp
sub
pop
loope
cli
add
(bad)
es
neg
jp
data16
shl
aas
data16
xchg
enter
and
ror
pop
mov
test
or
dec
xor
xchg
push
pop
pop
mov
popf
sbb
mov
xlat
sahf
call
mov
add
sbb
cwde
mov
mov
jp
cli
jo
mov
mov
inc
mov
imul
retf
ja
test
int3
jg
adc
push
pand
pop
sub
call
jecxz
mov
into
push
imul
in
dec
das
jbe
mov
mov
push
xchg
mov
push
stos
pusha
dec
data16
lahf
xor
pop
xchg
push
les
push
rol
(bad)
jno
jb
fs
inc
sahf
push
add
adc
outs
pop
(bad)
pop
les
dec
inc
stos
cmc
pop
cdq
data16
enter
dec
xchg
ins
(bad)
mov
clc
and
into
xchg
pop
sub
ins
xor
scas
ret
push
xchg
push
sub
pop
sub
push
pop
lahf
mov
pop
xor
add
(bad)
adc
test
xchg
fld
bound
jmp
inc
cmp
mov
test
and
push
sub
push
mov
in
aad
jmp
xor
cmp
dec
aad
aas
stos
xor
ja
sbb
push
iret
jmp
daa
cmps
ja
xchg
lahf
adc
mov
adc
mov
call
cmc
movs
sti
pop
push
loopne
jae
xchg
shrd
mov
dec
inc
xor
pop
cmps
mov
jg
ja
(bad)
push
cmp
sbb
fcmovbe
jl
xchg
sbb
mov
shl
mov
add
fiadd
mov
inc
push
es
jne
ja
pop
in
inc
pop
cmp
xchg
sbb
mov
jg
inc
push
out
sbb
mov
ja
cmp
iret
jg
or
push
mov
xchg
aad
cld
push
ffreep
int
dec
test
push
inc
jge
popf
jmp
inc
mov
or
(bad)
bound
jg
mov
repz
gs
push
add
stos
inc
ret
jge
(bad)
in
pop
mov
hlt
mov
xchg
add
fistp
and
mov
mov
mov
fisttp
fldcw
(bad)
push
mov
cmc
push
or
fnsave
cdq
gs
xchg
out
lock
push
and
cmp
ja
out
cmp
sbb
sbb
jno
cmp
clc
stos
push
or
fs
ins
push
mov
and
mov
daa
out
fild
inc
inc
ins
jge
adc
scas
xor
idiv
xchg
jl
mov
mov
call
lods
or
cmp
jmp
outs
pop
add
dec
and
loopne
shr
retf
popa
push
sub
jns
mov
mov
mov
into
jae
aaa
addr16
and
mov
lds
ret
bswap
out
xor
xor
sbb
gs
ret
push
in
sbb
add
adc
push
xor
pusha
dec
ret
je
push
xor
(bad)
movs
mov
out
outs
rol
pop
addr16
fild
outs
in
sahf
mov
sub
call
repnz
inc
test
fld
aad
sti
stos
or
mov
xor
rol
mov
xor
or
cdq
scas
cmc
push
pop
rcl
push
clc
jl
sar
xchg
leave
mov
ja
cmps
dec
and
mov
aad
sbb
dec
mov
pop
mov
xchg
cmp
jo
das
mov
test
sub
les
xchg
pop
retf
rcl
in
xchg
sbb
jb
jo
push
pusha
iret
test
sub
lods
repnz
fimul
jne
and
(bad)
hlt
xchg
fdivr
add
xor
dec
add
enter
jnp
btr
ror
das
mov
in
or
out
fdivrp
xor
add
or
or
dec
das
mov
nop
push
xchg
out
out
outs
inc
xor
dec
push
lock
leave
sub
(bad)
fisubr
and
adc
cwde
mov
arpl
sbb
lahf
call
ja
mov
mov
sub
pop
cwde
sbb
int3
sub
xchg
fcmovne
call
mov
mov
ss
clc
inc
xchg
dec
adc
cwde
test
sub
mov
jo
and
mov
xor
jb
push
dec
(bad)
mov
inc
out
xchg
add
imul
mov
shl
inc
retf
mov
inc
add
out
pop
call
popf
add
in
jle
ret
adc
adc
sub
lods
pop
xchg
mov
jg
mov
call
inc
outs
adc
mov
mov
xlat
mov
in
sbb
inc
(bad)
xchg
xchg
and
cmp
nop
(bad)
fisttp
xchg
jp
xlat
add
mov
shl
popa
repz
fsub
pop
dec
push
(bad)
in
loopne
rcr
cmp
mov
popa
cmps
jl
pop
mov
xchg
mov
arpl
fsubrp
push
fst
adc
loop
(bad)
loop
movs
inc
cmp
mov
iret
cmp
and
jle
pop
loop
xor
fsubr
xchg
inc
sub
in
imul
movs
dec
xor
push
icebp
popf
push
add
and
fbstp
dec
mov
(bad)
sbb
mov
sbb
jno
pop
xchg
pop
hlt
iret
ret
xchg
pop
es
je
xor
outs
jmp
adc
jmp
mov
push
mov
out
data16
hlt
xchg
(bad)
jo
(bad)
mov
ja
sub
cdq
in
push
jb
and
in
cmp
out
imul
adc
ret
sub
cs
pop
out
call
pop
xchg
stos
arpl
inc
test
cmp
inc
mov
sub
pshufw
mov
rcr
push
sti
push
jns
inc
jns
push
jne
loopne
cmp
xchg
jne
scas
xchg
jns
xchg
cs
stos
sub
sbb
scas
xor
xchg
xchg
xor
scas
sub
ss
lahf
mov
jge
iret
jo
les
xlat
out
retf
ss
sub
sub
cdq
lahf
pop
sbb
stos
xchg
push
mov
mov
(bad)
leave
sub
in
popa
mov
mov
xchg
movs
(bad)
int3
dec
jmp
and
leave
jmp
jp
mov
adc
stos
das
xlat
adc
test
and
xor
stc
mov
mov
jl
sub
out
fisub
imul
mov
out
ss
out
frstor
sbb
pop
pushf
xchg
test
or
fisub
mov
push
aas
mov
ins
adc
ja
jns
mov
jg
push
adc
sbb
out
jbe
fwait
pop
dec
dec
or
addr16
lds
or
inc
imul
(bad)
and
cmps
(bad)
jecxz
and
neg
out
stc
les
inc
pop
stc
jg
xchg
cdq
inc
lods
jb
add
test
shl
xchg
fst
push
jmp
cld
jmp
scas
mov
or
pop
pusha
imul
inc
add
js
and
out
sub
fidiv
adc
xchg
or
inc
in
cmps
imul
das
imul
inc
fild
mov
shr
inc
ins
int
(bad)
stc
into
cmps
or
in
int
inc
xchg
add
imul
pop
mov
cdq
xlat
and
jmp
dec
or
test
pop
cmp
(bad)
mov
add
and
inc
and
inc
jmp
pusha
mov
into
pop
add
push
push
and
jns
jg
out
bound
dec
jmp
jne
adc
aaa
add
or
add
jle
dec
xor
pop
mov
sub
pushf
(bad)
dec
imul
ror
out
scas
(bad)
aad
jbe
sbb
cmc
into
sub
pop
fyl2x
imul
xchg
mov
and
pop
push
cmc
push
fild
shr
mov
shl
mov
adc
push
daa
add
mov
xlat
imul
jns
das
inc
(bad)
jle
jp
dec
and
aas
stos
inc
push
pop
repnz
adc
and
dec
push
ja
loop
cmp
popf
loope
add
add
mov
inc
popf
nop
cmp
mov
bound
mov
xchg
leave
cli
inc
jmp
push
retf
jae
cmp
int
jl
addr16
push
retf
test
xor
jg
(bad)
sbb
or
adc
xchg
je
mov
jne
pop
lock
fimul
addr16
cli
add
loope
test
fimul
rcl
(bad)
xor
cmps
adc
popa
popf
adc
xchg
sub
call
or
sbb
xor
pop
aas
xor
or
repnz
sbb
test
lahf
out
sbb
inc
sub
fld
(bad)
ficom
test
stc
dec
test
xor
xchg
pop
pop
mov
xor
pop
lahf
scas
mov
lods
std
sub
push
mov
and
cli
pop
jmp
test
or
retf
hlt
xlat
data16
jne
fbld
and
pop
pop
aad
jmp
fld
mov
xor
repz
add
loopne
mov
rol
push
jbe
cdq
cli
or
jns
dec
mov
ins
dec
outs
pop
mov
jb
jae
(bad)
jbe
mov
jl
scas
sub
imul
hlt
pop
sti
fs
(bad)
pop
stos
loope
mov
sub
nop
fist
dec
ja
das
xlat
push
pusha
and
adc
jecxz
xor
jmp
sbb
scas
jge
or
ja
aaa
retf
repnz
mov
pop
xchg
add
sub
push
imul
pop
and
addr16
imul
xor
push
or
push
pushf
jge
clc
fwait
adc
lahf
push
push
push
nop
mov
js
movs
xlat
xchg
mov
jp
inc
pop
xor
sbb
add
adc
xchg
or
and
shr
lea
mov
inc
or
mov
cdq
jmp
rcl
and
jp
inc
jmp
push
aad
ret
das
cmc
cdq
or
xchg
retf
cmp
out
test
lock
aas
add
xchg
aad
xor
test
pop
adc
(bad)
lock
enter
pcmpeqd
jmp
push
sub
scas
jmp
popa
(bad)
ins
sti
out
nop
or
mov
mov
xor
pop
cmp
lahf
sub
jmp
retf
in
push
cmp
es
sub
jnp
pop
retf
iret
jnp
dec
xor
mov
into
bound
aam
(bad)
int3
add
push
xchg
dec
push
retf
xor
adc
jns
ja
int
fiadd
aaa
out
cmp
jle
(bad)
(bad)
popf
inc
mov
lods
outs
mov
repz
scas
push
xchg
cmps
push
sbb
scas
push
ret
xlat
call
add
push
mov
clc
cdq
or
arpl
push
cli
mov
ror
dec
aad
sahf
enter
mov
inc
mov
mov
or
cmp
mov
lods
out
sub
cmp
mov
stos
xchg
(bad)
aad
cmp
sbb
adc
test
icebp
lea
push
in
popf
ret
lock
sub
fcomip
xchg
push
rcr
lods
popf
jae
ret
iret
mov
dec
das
out
cld
cmp
mov
stos
cs
sub
cmp
jae
sub
dec
rol
in
xchg
mov
mov
stos
dec
cmp
mov
mov
or
faddp
jb
int3
lock
jg
out
sbb
aam
fidivr
ror
jg
hlt
mov
cdq
pop
int3
aas
cmp
xchg
pop
pop
ret
lock
or
jo
cmp
stos
in
jbe
stc
(bad)
rol
rcl
repz
(bad)
ds
lea
cli
dec
and
push
(bad)
in
or
ret
push
pop
movs
sbb
test
jnp
mov
stc
stos
pop
adc
jl
fstp
shl
(bad)
mov
cmp
mov
pop
jecxz
pushf
adc
or
cmps
stc
sbb
lea
sub
cld
jno
in
scas
mov
fcomp
jo
movs
pop
ja
sub
jle
outs
test
mov
sbb
jns
daa
jb
test
sbb
or
cwde
sbb
test
out
adc
js
cmps
pop
pop
add
adc
ins
sbb
mov
jp
cmp
call
push
fdivp
pop
xor
push
retf
xor
jg
mov
sub
lods
sub
mov
(bad)
xor
in
xor
mov
(bad)
scas
or
sbb
aas
and
mov
in
xor
pusha
fbstp
jmp
cld
sbb
jle
jl
sbb
mov
ror
fwait
(bad)
cmp
ret
retf
xchg
xchg
in
jno
aas
dec
cmp
cli
hlt
jge
jae
adc
jb
inc
mov
gs
data16
mov
call
cld
adc
cmp
adc
pop
cmps
in
or
jmp
xchg
jl
mov
cmp
xchg
sbb
xor
pop
(bad)
sbb
dec
cmps
mov
not
test
nop
jge
in
nop
fcom
scas
ins
repnz
popa
int
sub
jbe
push
ds
xchg
sar
cmps
cmp
push
sbb
add
jge
dec
jl
pusha
or
les
inc
cmps
mov
addr16
(bad)
sbb
and
jb
in
ins
shr
cli
ja
add
stos
mov
imul
xor
jp
inc
pop
dec
inc
add
call
xchg
dec
mov
or
gs
movs
loope
test
stos
inc
xor
or
push
or
icebp
push
repz
shl
enter
add
out
out
inc
int3
mov
adc
cmp
imul
jae
div
rol
clc
addr16
(bad)
mov
push
cdq
dec
retf
jl
scas
ret
imul
outs
xchg
pop
fsubr
in
push
jecxz
sbb
pusha
outs
adc
pop
xlat
or
gs
mov
and
push
dec
fadd
pop
rcl
dec
es
xor
(bad)
outs
mov
je
pop
push
mov
lock
adc
add
inc
stc
fild
rcl
push
(bad)
adc
xchg
push
or
dec
push
sbb
ins
inc
mov
cwde
cs
icebp
push
sti
push
mov
push
cli
xor
xchg
dec
in
add
xchg
pop
pop
hlt
fs
or
jnp
fisttp
div
xchg
ja
aas
mov
ret
aam
inc
sbb
ret
ret
inc
test
xchg
xor
ss
jbe
out
pop
call
push
call
mov
sub
es
mov
cwde
ret
test
pop
mov
fist
dec
sub
movs
dec
xor
test
mov
ret
dec
xchg
aas
idiv
mov
mov
mov
mov
xchg
mov
sub
add
pop
sub
cli
dec
nop
mov
mov
cs
adc
cmps
imul
add
inc
sbb
xor
call
stos
inc
mov
pushf
fwait
xchg
movs
repnz
fadd
dec
int3
add
pop
pop
mov
pusha
cli
push
fild
stc
cld
jg
mov
in
add
aaa
mov
or
sahf
or
ss
dec
mov
push
or
xor
mov
adc
cmp
jg
sub
inc
add
cmps
sub
xor
mov
lock
nop
add
inc
(bad)
push
dec
mov
sub
iret
xor
fs
aas
out
nop
cli
xchg
fwait
xlat
mov
scas
jmp
and
movs
jl
mov
dec
imul
sub
inc
inc
neg
cli
xor
ret
dec
arpl
jns
outs
push
call
sub
scas
mov
retf
xchg
pop
pusha
adc
pop
ret
call
(bad)
retf
push
push
arpl
mov
(bad)
sub
cs
fwait
mov
mov
mov
or
mov
jle
dec
and
add
ins
sub
mov
shl
ss
popf
out
cmp
pop
and
ret
jo
hlt
inc
retf
xchg
repnz
mov
cmps
push
cmps
aaa
sti
xchg
sub
sub
lods
stos
call
int3
(bad)
cdq
adc
mov
jecxz
xor
sahf
push
sti
sbb
sets
into
stos
mov
dec
das
fld
jno
jecxz
ja
ret
jmp
add
dec
xor
gs
dec
addr16
adc
rol
dec
addr16
pop
pop
jp
sub
std
sub
jae
or
add
lds
add
mov
call
stos
add
mov
xchg
cdq
cmc
cmp
pushf
mov
jecxz
pop
pusha
pop
imul
loopne
(bad)
cwde
fwait
leave
call
pushf
mov
pop
and
test
xor
hlt
frstor
or
push
pushf
or
cs
enter
ja
sahf
or
(bad)
div
or
aas
mov
sbb
cmp
pop
cmp
xlat
adc
call
or
mov
in
push
add
pop
jmp
xor
in
fdiv
and
cwde
lock
pop
dec
inc
hlt
dec
pop
call
pop
inc
and
sbb
scas
jp
pop
div
sahf
sbb
add
fist
lahf
mul
pop
dec
rcr
stc
cli
jecxz
mov
cmps
fbstp
out
fild
ja
jmp
(bad)
shr
stos
out
pop
fild
inc
movs
int3
push
out
jmp
lods
pop
xor
add
mov
movs
add
xchg
xchg
into
mov
fcmovne
pop
nop
and
pop
mov
fdiv
repz
mov
and
rcl
lds
iret
popf
fisub
in
mov
cdq
jno
movs
mov
or
jg
mov
mov
mov
rcr
imul
shr
pop
add
cli
sub
aad
sar
mov
pushf
dec
xor
mov
inc
fbld
fnstenv
out
hlt
push
sub
add
or
shl
shl
fild
ins
ja
ror
call
push
mov
pop
rcl
xchg
cmp
sti
mov
ja
fsubr
call
and
and
add
and
adc
div
(bad)
xchg
data16
and
movs
and
jmp
jmp
cld
adc
(bad)
div
sbb
cmp
dec
and
shl
sbb
gs
js
test
ja
jbe
inc
cli
and
xchg
dec
mov
xlat
nop
shl
es
mov
ficomp
outs
push
mov
loope
test
gs
xchg
sub
enter
pop
push
lods
adc
xor
push
push
and
sbb
lds
mov
sub
sbb
jns
loope
imul
jb
hlt
movs
jg
pop
sbb
mov
sbb
pop
xor
xlat
in
add
push
pushf
cmps
push
shl
cmp
shl
mov
aad
movs
pop
cmp
lea
sar
add
inc
xor
pusha
or
fiadd
icebp
push
cwde
and
int
mov
out
lods
shl
jecxz
outs
addr16
jnp
or
sbb
dec
inc
push
mov
dec
push
and
fidiv
mov
sub
mov
xchg
das
jne
mov
lods
jecxz
mov
push
jno
mov
jle
add
cmc
repnz
test
cwde
pop
popa
movs
stos
pop
sbb
data16
jnp
sar
ins
out
test
(bad)
cs
or
dec
test
cld
aad
cwde
aad
retf
in
cmp
mov
es
push
add
iret
out
adc
arpl
inc
mov
test
clc
mov
or
mov
mov
cmp
mov
(bad)
shl
adc
mov
in
inc
shl
test
mov
mov
xchg
jge
inc
call
call
ret
inc
icebp
mov
(bad)
pop
std
sbb
out
cmps
or
in
mov
les
jne
dec
mov
mov
fwait
loop
outs
pop
jbe
sub
and
mov
stos
pop
and
jb
aaa
in
repnz
and
repnz
or
or
(bad)
in
jb
lods
mov
sti
fsubr
and
jl
imul
in
mov
push
test
les
fisttp
jmp
adc
xor
je
xchg
out
out
leave
sub
or
les
cmp
push
pop
daa
data16
scas
loopne
add
mov
lods
xor
cmp
out
adc
(bad)
scas
cmp
mov
in
adc
outs
jle
add
lds
pop
pop
mov
dec
push
scas
ja
cwde
and
jmp
das
cmp
push
mov
cmp
pop
(bad)
ins
jecxz
call
jbe
add
gs
iret
stos
lock
loope
outs
xor
mov
ret
push
mov
leave
int
nop
sbb
stc
mov
(bad)
mov
xor
shr
mov
and
test
push
xchg
les
ss
sub
mov
cmp
xchg
into
lock
add
aam
dec
or
push
jnp
aam
out
dec
inc
enter
(bad)
test
jns
push
and
cmp
jmp
and
sbb
or
jecxz
test
popf
mov
jl
out
cmp
retf
jae
xor
enter
fld
pusha
loope
int3
cmp
aas
push
sbb
icebp
dec
imul
cmp
push
adc
push
cli
add
push
pop
sbb
sbb
stc
cmp
sar
push
mov
dec
xchg
add
push
repz
or
arpl
add
sbb
out
sbb
adc
push
iret
inc
mov
mov
mov
mov
pop
mov
jns
adc
outs
bound
ins
data16
fadd
dec
fcom
or
rcl
cmp
or
icebp
pop
test
adc
or
fisubr
std
ret
and
inc
retf
sbb
jo
cmp
movs
inc
add
je
sbb
test
icebp
adc
xchg
icebp
mov
dec
in
dec
mov
rol
loopne
lods
sahf
xchg
jne
cmc
rcl
lahf
aas
adc
repnz
stc
scas
cmps
mov
dec
dec
aam
jmp
jecxz
fdiv
push
xor
xchg
or
popa
aam
dec
mov
sub
xchg
in
in
nop
outs
test
dec
test
cs
inc
mov
not
cs
pusha
mov
pop
xchg
clc
xchg
(bad)
(bad)
sbb
outs
sbb
pop
add
sbb
or
push
dec
aaa
mov
ins
mov
shl
jb
vcvttpd2dq
jmp
les
fst
xchg
sbb
fdiv
mov
jns
stos
mov
mov
jmp
hlt
leave
add
sub
ds
test
es
gs
push
mov
movs
cmps
cs
pop
adc
hlt
in
cs
pop
and
add
xchg
jp
aas
cmp
jecxz
mov
pop
mov
dec
fdiv
mov
push
lods
int3
xchg
xchg
mov
aam
mov
sbb
lahf
inc
cmp
sbb
xchg
dec
xor
mov
and
imul
stos
cmp
sbb
pop
clc
adc
lea
mov
cld
fisub
ss
mov
shl
or
pminub
aaa
lods
mov
pop
shl
cmp
mov
inc
push
fnsave
jo
and
mov
cs
pushf
jmp
inc
cmp
sahf
es
neg
jns
lods
loope
pcmpgtw
jb
push
out
fwait
xchg
xchg
das
out
int
mov
pop
add
ss
mov
and
jo
pop
addr16
mov
fbld
(bad)
aam
pop
jmp
int
pop
movs
pop
or
ret
bound
sbb
xor
pushf
xor
push
dec
test
(bad)
sbb
push
cli
cmp
push
ret
aad
fs
std
mov
sbb
mov
(bad)
imul
lods
cmp
aam
add
add
or
enter
mov
mov
push
jmp
cmc
leave
mov
push
out
shl
aam
xlat
sub
mov
invlpg
xor
or
aam
inc
push
cmps
scas
sahf
add
ins
pop
pop
dec
adc
xor
cmp
lock
push
inc
add
out
adc
cmc
daa
cmp
mov
(bad)
not
shl
and
or
sti
mov
loop
sub
or
jbe
gs
dec
icebp
das
rol
pop
int3
jmp
cmps
jg
lahf
gs
pop
lods
add
repz
into
(bad)
aaa
mov
inc
jo
add
ss
cmps
daa
cld
cmp
addr16
leave
pop
or
mov
lds
push
repnz
jmp
add
add
xchg
sbb
sub
dec
pop
loope
add
div
jge
rol
and
mov
loop
fdivr
sub
addr16
and
jp
in
sub
xor
mov
(bad)
push
(bad)
xor
fist
sub
inc
add
push
les
xchg
(bad)
mov
test
out
mov
scas
int3
xchg
aad
add
(bad)
test
fxsave
mov
lods
scas
dec
inc
imul
dec
and
aam
and
xlat
aad
call
into
mov
sbb
sar
jae
arpl
inc
inc
sbb
data16
pop
rol
(bad)
retf
mov
pop
ins
fadd
xlat
loop
jp
push
rcr
cmp
call
out
(bad)
rol
ror
jmp
aam
dec
push
cmps
test
stc
(bad)
xchg
pop
fisttp
stos
int
jae
and
pop
loop
shl
mov
add
rcl
aam
cmp
dec
lahf
push
dec
les
sbb
pop
rol
call
out
mov
je
mov
adc
imul
sar
xchg
cdq
xchg
arpl
jmp
xor
sub
xchg
into
jmp
xchg
push
inc
out
repnz
addr16
cwde
test
push
aam
test
sbb
mov
push
cld
mov
in
or
movs
in
pop
in
jle
rcr
lahf
dec
lea
lahf
dec
pop
pop
cmc
cld
popa
or
loop
sub
cli
add
xchg
lahf
retf
and
icebp
jns
xchg
cvttps2pi
xchg
jae
cmp
aad
and
pop
jns
dec
jne
arpl
repz
or
ja
sbb
iret
push
jle
fsubr
adc
pop
mov
in
sahf
(bad)
pop
mov
dec
push
cmp
mov
inc
jae
int
sahf
into
repz
mov
out
xor
mov
cmp
xchg
jne
mov
test
jne
test
ret
stos
push
pop
sbb
fdecstp
(bad)
cmp
dec
mov
neg
sbb
adc
push
sahf
ins
sub
sub
(bad)
push
cdq
push
ficomp
nop
push
inc
and
fcomp
lock
push
bound
(bad)
mov
scas
push
jle
les
adc
fsubrp
sar
adc
jg
pop
bound
fimul
out
fsubr
dec
push
mov
in
ficomp
fisub
repz
dec
or
push
xchg
in
sar
pop
push
(bad)
aad
xor
sub
push
jae
dec
imul
jmp
stc
aam
cdq
daa
test
xchg
icebp
xlat
mov
cmp
inc
shl
add
mov
mov
outs
jmp
cmps
push
enter
jle
ret
rcr
dec
xor
adc
dec
cmc
lahf
pop
push
imul
mov
adc
std
int
adc
sti
inc
popa
jo
inc
xor
mov
jae
jo
aam
push
adc
sub
add
sbb
mov
retf
dec
lock
lea
add
inc
lock
addr16
inc
(bad)
enter
xchg
int
shl
push
out
xchg
sbb
sbb
add
sbb
in
push
imul
aam
outs
jne
inc
fnsave
pop
iret
dec
mov
jmp
push
jno
outs
fidivr
xchg
daa
(bad)
xchg
push
mov
movs
sbb
lds
sub
jae
xchg
cli
addr16
div
jo
dec
jp
sbb
jae
mov
js
repz
adc
(bad)
fdivr
sbb
cwde
imul
movs
fs
lds
and
aam
aaa
push
lods
call
enter
inc
dec
lock
pusha
xchg
push
mov
sbb
das
mov
jecxz
push
xchg
shl
push
sub
ficomp
idiv
adc
repz
xor
bnd
jns
xchg
fcomp
cli
repz
add
mov
(bad)
lock
(bad)
sub
push
pop
and
or
add
addr16
mov
inc
sti
(bad)
add
call
repz
add
call
in
and
loop
cmps
jg
inc
out
mov
in
test
popf
mov
test
add
or
enter
cld
fcom
movs
and
and
pop
sbb
lock
ss
sub
in
mov
inc
out
cld
addr16
push
push
scas
mov
call
sbb
ds
ins
fistp
cli
rcr
inc
dec
enter
jbe
fistp
leave
sahf
mov
and
add
and
aad
aas
inc
sub
cld
in
dec
in
lahf
(bad)
jle
dec
lahf
xlat
rcl
dec
cmp
mov
inc
stos
sbb
shr
ror
out
mov
adc
and
cmc
fwait
in
push
(bad)
dec
lods
xor
in
hlt
cdq
sbb
mov
sub
inc
xchg
sub
xchg
push
enter
loop
ins
xchg
mov
sub
mov
fwait
lock
and
test
out
or
xchg
repz
je
pop
adc
sub
add
mov
clc
dec
rcr
jecxz
cdq
mov
xor
xchg
mov
mov
mov
rcr
push
das
adc
cli
sbb
stos
adc
fcmove
repz
xchg
mov
ins
dec
push
shl
xchg
push
sbb
and
loop
ror
or
hlt
sub
push
mov
cmp
loop
das
ret
sbb
pop
sbb
retf
cli
adc
ss
bound
inc
imul
mov
int3
or
or
dec
cmps
lahf
xor
sbb
loop
dec
xchg
push
mov
movs
xor
or
xor
jae
jnp
lods
pushf
lods
xor
xchg
std
sub
inc
jmp
inc
jbe
pop
pushf
mov
xchg
or
mov
in
cmp
pop
xchg
daa
dec
push
mov
sub
adc
xchg
mov
jns
mov
rol
sub
dec
aad
inc
jg
jg
mov
inc
call
loopne
xor
add
adc
lahf
push
outs
mov
push
call
inc
add
xlat
sub
push
push
or
pop
sub
shr
out
imul
repnz
cmp
inc
xchg
jb
push
ins
adc
and
add
sbb
jle
and
imul
nop
jae
addr16
arpl
ins
add
ret
mov
adc
adc
loopne
loope
cmp
ffreep
nop
sub
outs
inc
out
dec
lahf
jb
cmp
sub
dec
fmul
sub
cmp
sub
inc
xchg
iret
pop
shl
inc
cmp
loop
and
cmp
adc
shl
adc
or
popf
stos
push
add
cwde
and
dec
add
jbe
xor
cmp
adc
push
addr16
pop
test
pop
ds
sbb
aaa
dec
into
iret
mov
push
pop
movs
jecxz
jmp
xor
inc
mov
sub
int3
shr
xor
test
in
jne
pop
cmps
imul
retf
or
mov
jl
not
dec
shl
jl
cdq
jg
call
sub
scas
ja
icebp
cmc
dec
mov
les
adc
mov
or
cmp
push
ja
pop
call
into
rcr
ret
call
stc
push
inc
mov
test
mov
ficomp
fdivr
scas
aam
xchg
lods
shl
add
mov
pop
jbe
push
(bad)
(bad)
push
in
repnz
sahf
stc
and
cld
div
mov
out
xchg
or
pop
sbb
cmps
push
sbb
jecxz
push
lods
xor
jge
mov
(bad)
out
sbb
pop
inc
xchg
add
push
cmc
pop
retf
cmp
mov
sub
push
sbb
cwde
sbb
fs
fwait
cmp
data16
frstor
mov
fisub
adc
xchg
loopne
jmp
mov
int
arpl
mov
xchg
and
je
xchg
int
lods
fsubp
mov
loop
jmp
in
adc
sub
pop
cmp
popf
sar
pop
dec
add
sbb
imul
(bad)
push
test
jle
outs
adc
xchg
add
adc
int
or
aam
idiv
mov
inc
addr16
sbb
add
or
rcr
add
aaa
retf
pusha
adc
jmp
bound
lods
in
xor
inc
jmp
jp
sbb
shl
lahf
sub
in
pop
mov
int
or
xchg
or
and
out
test
movs
inc
loopne
cmps
push
(bad)
mov
sbb
sub
mov
cwde
lds
aam
mov
sub
mov
retf
aam
ins
add
pushf
(bad)
pop
add
adc
add
mov
in
xor
mov
imul
scas
loope
cmp
pusha
fistp
repnz
or
arpl
lahf
and
dec
cmc
xchg
in
das
dec
push
xor
or
sub
dec
pop
lahf
add
push
inc
sub
inc
lea
movs
data16
push
inc
cmp
pushf
push
push
lahf
repnz
shr
push
aas
jo
pop
push
(bad)
mov
sbb
lods
mov
push
mov
jo
cwde
mov
imul
inc
mov
call
push
jp
sub
sbb
dec
(bad)
sub
add
dec
dec
mov
inc
das
outs
mov
arpl
pop
bound
in
sti
cwde
aaa
adc
mov
adc
test
test
fst
inc
cwde
cdq
loope
mov
aad
jg
enter
sbb
nop
or
push
lods
addr16
add
jae
sbb
mov
mov
aad
jb
xlat
xor
jb
xlat
sub
out
sbb
mov
cmps
add
lsl
mov
or
mov
push
inc
mov
sbb
jmp
fdivp
iret
jle
aas
inc
lds
jne
xor
iret
mov
lea
cmp
jmp
aam
iret
sahf
mov
inc
in
test
test
jmp
das
mov
scas
cmp
inc
cmc
aam
call
cmp
rcl
or
loopne
dec
(bad)
jns
mov
mov
aad
stos
sub
pop
inc
inc
outs
ror
aad
cmp
scas
aam
outs
rcr
mov
dec
mov
fsubr
mov
inc
in
into
scas
loopne
outs
movs
pop
and
cmp
(bad)
adc
nop
xor
lahf
out
sub
mov
nop
or
sub
xor
nop
outs
inc
int3
nop
mov
bound
xlat
sbb
sub
mov
aad
leave
jle
sub
cwde
leave
sub
pop
nop
cmps
push
popf
nop
in
sti
mov
nop
sub
sbb
add
sub
push
sub
fild
and
cmps
and
mov
nop
repnz
cmp
sub
jno
stos
pop
pop
nop
(bad)
shl
sbb
mov
xlat
nop
sub
push
nop
jno
sub
fwait
les
nop
push
retf
push
bound
mov
popa
sub
jge
nop
and
ss
imul
sub
(bad)
(bad)
nop
inc
int3
es
lea
sub
int
sub
push
(bad)
nop
mov
enter
gs
jle
(bad)
nop
lds
sub
hlt
mov
nop
xchg
cmp
nop
(bad)
mov
inc
mov
sub
lock
cmc
popa
(bad)
push
arpl
jmp
mov
arpl
push
loope
pop
cmc
les
aas
loope
inc
pushf
jae
fadd
nop
pop
push
fsubrp
stos
data16
sub
sbb
mov
mov
adc
adc
shr
stos
ins
sar
xchg
jnp
jmp
test
mov
xchg
cdq
jmp
aaa
xchg
xchg
jmp
ret
shr
cmp
call
push
or
push
push
mov
pop
call
push
popf
dec
push
gs
in
jge
jecxz
xchg
jecxz
sbb
aas
sbb
jle
jb
mov
sbb
inc
lahf
sahf
pop
lock
(bad)
jno
adc
sbb
cmps
outs
mov
test
hlt
jmp
cmps
dec
push
mov
sbb
(bad)
sbb
retf
mov
adc
or
mov
lea
jbe
or
popa
lea
dec
xchg
or
aas
pop
cmps
sti
ins
pop
sahf
inc
or
sbb
call
pop
sub
ret
adc
adc
cmps
jae
jle
mov
sbb
sub
dec
sahf
xchg
cmp
sbb
or
sub
cmps
stos
lahf
push
sahf
repnz
jns
gs
outs
sahf
into
sub
xor
cmps
mov
aas
push
sbb
mov
scas
cmps
mov
xor
mov
(bad)
lahf
cmps
fist
fistp
dec
stos
mov
cmps
test
test
test
add
push
sbb
leave
push
adc
arpl
cmps
das
cdq
push
sahf
jbe
out
call
cmps
or
and
mov
jbe
cmps
addr16
jno
scas
cmp
sbb
pop
data16
repz
cmps
xor
sahf
retf
sbb
inc
push
adc
out
sub
lahf
cmp
sbb
inc
push
adc
jmp
pusha
sahf
add
neg
dec
ss
in
cmps
xlat
and
(bad)
sbb
sub
cmp
xor
sahf
jp
xchg
sbb
pusha
(bad)
adc
or
cmps
paddd
sahf
push
xchg
addr16
jnp
adc
adc
imul
sahf
mov
mov
fidiv
adc
pop
(bad)
cmps
inc
add
sahf
mov
adc
loopne
cmps
arpl
sahf
stos
pop
push
sbb
les
cmps
jg
adc
sub
adc
in
cmps
fwait
ins
loope
loop
js
push
vunpcklps
pop
cmps
mov
mov
sbb
and
imul
bound
inc
scas
inc
adc
inc
(bad)
ss
cmp
xor
adc
loopne
cld
jo
and
fwait
jmp
xlat
xor
outs
cli
sub
outs
call
gs
outs
lock
lods
rcr
or
(bad)
ins
ins
xchg
push
sub
xor
mov
loop
ins
out
jne
dec
push
pop
or
push
dec
les
addr16
ins
(bad)
popf
adc
mov
arpl
sar
mov
in
(bad)
clc
(bad)
and
cmp
xchg
mov
xor
or
lods
inc
lahf
popf
es
jecxz
mov
sub
jp
popa
xchg
stc
cmp
jnp
sub
pushf
push
jne
or
jo
mov
jno
fdivr
imul
retf
and
imul
and
imul
jl
fmul
sub
jg
dec
das
aad
fmul
ja
or
dec
dec
sub
rcr
test
imul
xchg
fcom
outs
cld
adc
mov
imul
cmp
push
in
std
sbb
dec
cmp
std
imul
xchg
dec
dec
(bad)
jmp
lds
cmp
(bad)
out
test
scas
inc
push
dec
iret
call
int
cmps
cld
stos
pushf
or
repnz
mov
movs
imul
hlt
or
dec
add
mov
test
aad
lahf
cld
mov
sub
fnstsw
dec
pushf
cld
mov
cli
sbb
imul
cld
imul
test
imul
push
dec
dec
out
rcr
add
imul
lods
cmp
(bad)
pop
mov
jmp
add
dec
out
pop
or
imul
pop
or
mov
fst
or
cld
(bad)
mov
dec
test
cwde
imul
or
dec
repz
cld
(bad)
mov
dec
cld
fisub
(bad)
mov
cmp
data16
std
fidivr
fsub
push
or
adc
xchg
fsub
rol
add
outs
jge
add
fucomi
sbb
push
jno
std
outs
(bad)
pop
dec
(bad)
sbb
shr
inc
std
push
dec
dec
mov
fcomi
int3
lds
and
jns
dec
xchg
iret
rcr
and
aas
std
jb
lods
dec
xchg
sub
sbb
cld
cld
jle
out
dec
lahf
sbb
sbb
test
dec
fisub
add
lea
xchg
fisttp
fild
lock
loopne
std
xor
dec
mov
jecxz
imul
adc
mov
int
or
xor
aaa
test
xchg
xor
clc
xchg
inc
dec
dec
mov
rcr
out
cmp
inc
das
stc
xchg
call
sbb
outs
cmp
into
dec
mov
mov
iret
stc
call
fsub
stc
cmp
stc
movs
dec
dec
inc
sti
rcl
push
and
cmps
daa
cli
and
cmp
xlat
sub
(bad)
stc
cs
push
dec
dec
stos
or
outs
dec
push
out
sub
add
xor
ins
push
scas
in
ss
add
xor
push
div
pop
sub
sar
or
pop
pop
fdiv
ds
push
pop
or
jb
mov
hlt
cmp
pusha
aam
mov
pushf
cmc
inc
gs
mov
nop
jae
addr16
test
dec
arpl
lods
fimul
cmc
imul
dec
sahf
dec
outs
imul
ins
pop
push
std
dec
ins
mov
ret
sbb
sbb
imul
mov
sbb
push
push
sbb
jl
pop
leave
popf
push
pop
jne
dec
jg
cmp
imul
sub
and
fisub
pop
push
out
or
ins
leave
rcl
jecxz
adc
mov
adc
loope
iret
mov
or
stc
sbb
inc
mov
lea
(bad)
outs
xchg
mov
sbb
in
add
pop
cmp
cli
fild
xor
scas
dec
ds
pop
mov
movs
add
bound
int
xchg
jno
cwde
movs
mov
rcl
std
or
out
aad
sbb
jg
sub
sub
pop
jbe
and
popf
js
add
scas
imul
aas
lock
das
stos
xor
stc
add
mov
nop
xchg
aaa
enter
pop
enter
cli
les
or
pop
loope
xchg
leave
ss
fcom
(bad)
xchg
fs
(bad)
retf
mov
adc
aas
mov
shl
movs
mov
mov
mov
adc
cld
jae
cmove
test
cmp
(bad)
sbb
dec
pop
inc
pusha
sub
fcmovnb
in
sub
inc
arpl
sar
and
push
aad
mov
adc
je
(bad)
lods
jg
sbb
xchg
jge
cmp
(bad)
in
jp
dec
inc
jno
pop
leave
jg
data16
sbb
das
jge
jmp
test
push
dec
leave
inc
aad
mov
jg
dec
lea
dec
dec
sbb
inc
es
aaa
gs
repz
adc
and
inc
pop
sub
call
cmp
and
mov
and
sti
mov
jecxz
loope
int3
fwait
fs
sub
loop
mov
(bad)
push
fs
(bad)
cmp
push
sti
sti
mov
dec
clc
mov
imul
and
xor
inc
and
xchg
ficomp
dec
imul
or
xchg
push
mov
outs
jl
xlat
mov
jae
pop
dec
sub
inc
lahf
xor
(bad)
je
and
dec
mov
retf
sub
lahf
mov
in
mov
dec
(bad)
jmp
jae
nop
cmp
(bad)
or
jmp
cmp
and
inc
jns
push
push
in
jmp
fistp
sub
xor
lahf
pop
inc
xor
je
adc
xchg
addr16
leave
imul
stc
rcr
loopne
sbb
jo
movs
sbb
nop
jo
xor
sar
add
jecxz
retf
push
adc
xchg
dec
es
aas
cmps
pop
jne
(bad)
push
enter
xchg
imul
or
mov
push
pop
jmp
push
push
js
cmp
jmp
xchg
inc
pop
sbb
pusha
rcr
mov
xlat
xchg
sbb
pop
es
int
pop
aaa
inc
inc
cmp
ret
push
xchg
repz
pusha
cli
adc
outs
shr
pop
ins
int3
mov
imul
add
jge
push
cmp
or
cmps
cld
test
inc
outs
adc
arpl
mov
sbb
call
cmp
xor
inc
cmp
jbe
aaa
loope
retf
xor
jecxz
out
xor
gs
add
cmp
and
sahf
jmp
adc
scas
add
sbb
mov
(bad)
sbb
jno
and
hlt
and
out
cli
inc
rcl
pop
adc
pop
jl
out
push
jge
pop
ds
pop
xchg
sbb
add
inc
gs
aam
jae
repnz
out
scas
and
mov
daa
scas
sbb
sub
pop
add
adc
or
test
jle
daa
dec
mov
mov
sbb
nop
test
push
stc
ss
rcl
jmp
mov
adc
ins
jge
push
imul
imul
fxch
data16
out
jne
add
inc
adc
pusha
cmp
pusha
jle
scas
dec
mov
sub
mov
sbb
test
adc
ins
scas
pop
mov
cmp
std
push
mov
jo
loope
repz
add
stc
jge
inc
ins
jl
pusha
fistp
jle
jns
mov
ja
sbb
stc
test
adc
ss
push
repz
jg
aaa
rcr
cmp
xor
and
repz
(bad)
out
(bad)
movs
sbb
ja
psubusb
add
dec
jle
out
mov
cmc
mov
sti
add
test
xchg
into
ss
test
fs
add
out
imul
lods
inc
scas
(bad)
cs
shl
icebp
fst
(bad)
fld
dec
push
sbb
inc
mov
pop
pusha
mov
cmp
jle
mov
jl
test
jnp
ss
jp
aad
jns
repz
scas
add
retf
xchg
out
ret
out
ror
movs
(bad)
fbld
in
dec
pusha
push
fimul
rcl
test
out
ss
hlt
adc
dec
add
mov
and
cmp
mov
sub
call
xchg
sub
mov
sub
push
mov
or
icebp
les
je
dec
sbb
loope
cmps
jp
nop
inc
in
(bad)
stc
arpl
rol
data16
adc
jmp
not
iret
add
sub
lds
add
in
mov
scas
mov
or
mov
dec
mov
cmp
push
xchg
aaa
ret
(bad)
stos
(bad)
cdq
aad
push
mov
ins
lods
jg
inc
cmp
add
enter
(bad)
clc
push
repz
imul
mov
call
push
xchg
push
imul
cmp
dec
mov
xchg
inc
jmp
(bad)
pop
mov
dec
pop
sbb
mov
pop
pop
sub
pop
xor
dec
test
not
push
loopne
mov
xchg
xor
iret
xchg
fisttp
xor
stc
lock
jmp
idiv
popa
in
mov
jno
shl
xor
fcom
enter
(bad)
mov
jg
adc
jp
mov
jnp
imul
inc
test
xchg
add
xor
mov
das
mov
out
(bad)
push
popa
fmulp
je
fsub
xor
fldenv
pop
fmul
rcl
daa
jmp
in
stc
(bad)
repz
pop
pop
add
movs
int3
nop
mov
bound
sahf
jg
xor
pushf
xor
call
adc
mov
adc
cmps
jnp
or
les
pop
add
xchg
imul
add
icebp
imul
loop
test
sti
in
jo
stc
(bad)
mov
scas
sbb
test
inc
add
dec
mov
mov
cmp
mov
stos
int
mov
outs
jmp
xor
adc
hlt
inc
sbb
frstor
aad
jle
jecxz
lea
js
hlt
add
ja
cmp
cli
or
(bad)
repz
fcom
arpl
sbb
imul
aaa
call
inc
push
or
cmp
push
cs
and
jge
pop
out
daa
pop
rcr
sub
cmps
sbb
data16
adc
adc
cmp
mov
push
push
jb
inc
imul
mov
lock
(bad)
shl
mov
push
(bad)
sbb
xlat
aam
or
jecxz
call
mov
push
inc
or
dec
xchg
cmp
daa
das
das
mov
dec
and
push
mov
xchg
xor
and
ret
jmp
loopne
loope
dec
lock
std
(bad)
ins
fwait
jo
inc
sub
sti
das
mov
cli
mov
clc
loope
ins
test
das
push
xchg
or
dec
pop
mov
pop
retf
aas
cmp
mov
std
xchg
xor
(bad)
xor
cmp
sar
mov
add
and
inc
cdq
es
das
daa
sub
mov
sbb
loope
psllq
add
add
or
addr16
outs
sub
xchg
data16
test
test
and
rol
mov
ficom
add
rcl
sti
push
popa
inc
or
outs
cs
dec
outs
xchg
mov
fyl2x
mov
mov
mov
push
pop
mov
xchg
test
je
mov
mov
iret
adc
fld
fiadd
jl
sub
out
fild
inc
in
les
xlat
lods
jg
in
mov
outs
sbb
add
inc
xchg
and
(bad)
pop
mov
dec
sahf
in
mov
fwait
test
mov
add
mov
imul
sbb
lods
xchg
cs
xchg
mov
adc
cwde
push
movs
push
mov
jo
jno
mov
jg
sbb
jle
stos
idiv
jp
jmp
js
add
jbe
mov
jmp
mov
mov
inc
mov
into
adc
mov
mov
push
mov
xchg
stos
stos
push
add
popf
fs
xchg
sub
xchg
adc
aas
mov
enter
mov
jmp
dec
push
imul
inc
push
mov
pusha
aam
aam
push
push
mov
sbb
jg
shr
inc
ins
xor
(bad)
push
repz
imul
scas
scas
jbe
cmp
movs
adc
fisubr
xor
test
std
mov
(bad)
push
xchg
mov
jge
fdiv
lock
jae
xor
jns
cmc
arpl
hlt
fiadd
rcl
jnp
fsubr
fdivr
sub
add
mov
inc
inc
mov
xchg
(bad)
mov
jecxz
pop
test
add
(bad)
nop
pop
jb
pop
cmp
mov
aam
out
sbb
addr16
add
pop
ret
lods
(bad)
rol
out
push
loopne
cld
(bad)
out
dec
or
and
aas
jmp
xor
out
lahf
sub
addr16
adc
push
pop
mov
jne
inc
xlat
xchg
or
pop
test
fiadd
pop
imul
pop
inc
cli
cld
pop
sub
xchg
loop
out
xor
enterw
mov
bswap
adc
mov
daa
mov
retf
gs
sub
shl
sbb
mov
in
sub
ret
cli
pop
push
lods
or
arpl
xor
or
xor
(bad)
sahf
call
(bad)
ja
mov
cli
cwde
and
pop
mov
movs
jecxz
arpl
xor
bswap
(bad)
push
jmp
fsubr
stc
inc
fild
movs
cmp
lds
xlat
scas
popa
and
pop
and
lods
sub
popf
enter
(bad)
adc
hlt
push
dec
leave
adc
dec
mov
dec
dec
pop
jb
dec
imul
es
inc
pop
pop
fs
jb
loope
add
sahf
pop
mov
int
xor
ret
or
push
inc
mov
je
push
mov
cmp
pop
xor
and
iret
and
cmp
sub
stc
sbb
pop
push
outs
xlat
movs
add
inc
add
test
or
imul
imul
data16
jbe
out
(bad)
stc
or
ins
adc
mov
das
gs
aad
dec
pop
pop
sub
imul
cmp
test
and
aaa
mov
loop
inc
jno
sub
arpl
sub
jb
mov
sub
fist
lahf
mov
xchg
add
push
iret
or
cwde
jmp
cwde
icebp
stc
loope
fild
movs
mov
out
push
inc
push
ja
fst
pusha
adc
push
rcr
and
(bad)
enter
(bad)
mov
out
adc
add
dec
stos
xchg
sub
and
jns
inc
enter
mov
les
dec
dec
add
dec
mov
dec
out
jl
ror
inc
mov
jne
arpl
push
cmp
ror
cli
(bad)
mov
dec
or
xor
push
lock
xor
push
mov
shl
lahf
loope
mov
xchg
jmp
test
cld
dec
shl
and
je
(bad)
in
div
out
jp
ror
in
xchg
mov
xor
inc
push
icebp
jmp
dec
cwde
popf
iret
dec
icebp
sub
fidivr
dec
inc
sbb
mov
fs
and
and
stos
mov
dec
or
sub
stc
rcr
stos
mov
sahf
repnz
jg
jne
pop
mov
imul
push
fsubp
hlt
je
lock
push
std
pop
iret
(bad)
lahf
add
clc
mov
inc
idiv
fmul
jge
mov
mov
push
mov
dec
add
in
pusha
fwait
dec
lds
dec
scas
mov
dec
jo
xchg
aaa
mov
aad
inc
fwait
repz
hlt
adc
(bad)
jns
pop
int3
in
vmwrite
pop
mov
ror
not
xchg
adc
or
mov
mov
push
mov
xchg
sbb
and
mov
inc
cmp
mov
outs
rol
test
ins
jle
(bad)
imul
push
fadd
push
jmp
out
jne
inc
popa
test
ins
addr16
jmp
pop
shr
push
(bad)
sub
jno
test
(bad)
int3
mov
lods
xor
xor
bound
(bad)
sub
hlt
push
sub
adc
les
pop
or
pop
mov
test
data16
jle
call
pop
sbb
jns
call
push
sbb
adc
ffreep
bound
sbb
or
loopne
bound
inc
sbb
cli
inc
call
aas
sbb
cmc
mov
bound
aaa
sbb
cld
mov
adc
in
jo
das
sbb
stos
call
daa
sbb
mul
bound
pop
sbb
icebp
fwait
call
pop
sbb
clc
adc
ins
sti
bndldx
sti
or
test
mov
repnz
(bad)
in
call
cmps
icebp
sbb
loope
jnp
and
pushf
bound
neg
lahf
out
and
call
jmp
bound
out
sbb
sub
mov
imul
clc
out
dec
out
loop
cld
arpl
cmp
loopne
dec
pop
xor
mov
(bad)
sbb
sub
mov
ins
call
icebp
sbb
and
mov
jne
shl
bound
bound
loop
cmp
ficom
sbb
loop
test
call
jnp
push
pop
pushf
loop
xor
(bad)
and
push
pop
jecxz
loop
(bad)
out
call
ins
sbb
cmps
loop
test
call
jne
push
push
sahf
loop
mov
call
jle
pop
pop
cdq
loop
xchg
call
ja
pop
pop
mov
call
jo
push
pop
mov
call
jns
push
push
call
rcl
bound
push
sbb
push
adc
call
sti
sbb
cmps
mov
mov
stos
pusha
cld
push
xchg
mov
jl
loope
cmps
jl
lods
ret
add
push
or
rcl
pop
pop
or
xor
scas
xchg
pop
aad
inc
mov
cmp
popa
add
movntps
adc
loope
bts
lahf
fs
cmp
stc
ret
aas
inc
mov
push
int3
xchg
ins
stc
adc
ret
call
jmp
mov
xchg
outs
mov
add
sbb
dec
movs
jb
xchg
ss
and
and
xor
retf
sbb
ficomp
addr16
cmp
or
es
int
jnp
adc
inc
sub
movs
xor
add
cmc
fcomp
js
mov
or
retf
nop
lds
mov
push
nop
cdq
push
arpl
lock
cmps
aaa
dec
sub
clc
mov
push
jns
push
sub
push
aad
dec
dec
sbb
xchg
push
stos
in
(bad)
fwait
add
or
lods
js
mov
cmp
cmp
mov
xchg
mov
pop
loopne
aad
loope
and
inc
mov
sub
push
jbe
pusha
icebp
mov
adc
(bad)
fs
or
inc
ins
xchg
gs
jmp
outs
mov
dec
mov
mov
mov
adc
xchg
pop
push
fidivr
inc
pop
iret
sbb
jae
scas
loope
adc
add
idiv
rcl
push
test
cwde
push
jmp
xor
(bad)
lea
pop
push
loopne
pop
jmp
jmp
adc
(bad)
stos
adc
cmp
scas
fdiv
fucomip
leave
dec
sbb
sub
loopne
inc
or
(bad)
pushf
xchg
jmp
clc
pushf
in
sub
lahf
dec
pop
cmp
mov
push
push
out
cmp
and
cmc
cmp
call
int
inc
ficom
mov
aam
mov
in
mov
in
lea
lds
scas
sbb
add
pop
mov
adc
jecxz
cli
cs
les
ret
jnp
jmp
rcl
(bad)
pop
icebp
pop
jnp
cmp
iret
push
jg
and
add
jae
sahf
xchg
mov
cmp
jne
xchg
and
ja
scas
mov
pop
cmp
(bad)
mov
jle
adc
jo
or
mov
cmps
stos
jb
add
inc
sbb
loop
arpl
rcr
daa
inc
xor
imul
push
and
call
jp
addr16
sbb
outs
push
inc
cmp
ins
mov
jae
sbb
(bad)
fstp
sbb
mov
rol
cmp
pop
ja
imul
and
adc
jae
push
mov
jbe
pop
push
mov
cmps
js
inc
repz
dec
sub
fcomp
test
sub
jmp
fisub
test
mov
cld
mov
jmp
movs
bound
loopne
jecxz
jmp
and
push
cmp
cwde
xchg
sub
push
fcom
stos
dec
cwde
sar
(bad)
push
ds
xor
push
mov
popa
loop
lds
test
sar
mov
push
cld
imul
xor
xchg
shl
repnz
test
pusha
(bad)
mov
sub
push
sbb
arpl
cmp
push
xchg
push
aas
psraw
xchg
xor
xor
rcl
jg
and
es
xor
cmp
shl
xchg
push
sbb
inc
imul
daa
push
fiadd
dec
cli
shl
dec
outs
jne
call
ret
cmp
pop
fmul
cli
(bad)
sub
sar
pop
popa
retf
add
jae
cdq
sbb
jbe
dec
sahf
and
fdiv
test
jg
mov
(bad)
jnp
dec
pop
(bad)
mov
xchg
jge
mov
mov
pcmpgtb
push
inc
retf
adc
and
ret
inc
xchg
mov
ret
pop
sub
pop
cmps
std
push
xchg
aaa
dec
neg
test
add
in
ins
pop
stos
cmp
jecxz
(bad)
fmul
sbb
leave
pop
jnp
sbb
dec
and
call
sti
enter
pop
or
popa
push
jmp
xlat
or
stos
and
cmp
outs
(bad)
pusha
fmul
icebp
sub
ins
hlt
leave
sub
sbb
xor
sub
outs
cmp
pop
jae
stos
sahf
ds
add
add
mov
fdiv
pop
xchg
cmp
fimul
loope
and
mov
mov
or
bound
nop
push
xchg
out
into
mov
cmp
cmp
inc
nop
lods
cs
xlat
ds
sbb
loop
fistp
je
aad
push
inc
mov
pop
xchg
loopne
imul
(bad)
push
inc
fidiv
mov
aad
cmp
and
ja
cmp
sbb
ficomp
sub
into
mov
pop
lahf
adc
push
outs
lods
loopne
mov
and
push
mov
les
pop
fbld
cmp
mov
cmp
outs
add
bnd
pop
inc
icebp
xor
mov
out
cmp
sbb
mov
dec
cmps
adc
in
adc
fisubr
push
mov
in
ret
cli
fbstp
lods
dec
cmps
sub
repz
mov
mov
test
pop
aas
sbb
paddb
out
scas
scas
sub
add
jo
pop
movs
mov
(bad)
adc
cmp
leave
mov
call
dec
popf
rol
xchg
sahf
sub
xchg
(bad)
push
xor
in
loopne
int
and
call
lds
fimul
daa
jg
popf
call
daa
retf
jnp
jne
iret
sar
ja
push
mov
push
movs
ja
ins
out
mov
jmp
jb
push
enter
xor
mov
scas
pop
pop
pusha
cmp
and
das
pop
jecxz
call
adc
sbb
mov
outs
xchg
ds
cld
fdiv
scas
mov
aas
add
mov
ror
std
adc
out
adc
push
popf
mov
ins
out
push
mov
jge
mov
mov
or
mov
inc
loope
aas
xchg
and
mov
cmp
test
cmp
cmp
cli
pop
in
ds
inc
xor
jle
mov
pop
les
mov
popf
pop
or
iret
xchg
arpl
pop
adc
add
xchg
les
js
push
fwait
or
sub
dec
push
jle
xchg
aad
sub
push
xchg
jp
gs
into
jge
jmp
cmp
xor
push
inc
les
popa
adc
inc
mov
xchg
repz
cmp
dec
iret
clc
jmp
mov
fdivr
jmp
and
cdq
inc
out
lods
aam
push
daa
pop
arpl
sbb
fidivr
or
mov
mov
mov
cmps
rcr
jmp
mov
xchg
(bad)
es
mov
test
jmp
icebp
out
aas
dec
inc
jecxz
arpl
in
fwait
adc
sub
aam
sub
cld
or
aad
mov
lds
pop
push
pop
and
loope
cld
in
and
aas
movs
outs
ret
lds
and
pop
push
jb
mov
scas
jmp
sub
adc
cdq
(bad)
mov
or
and
fwait
dec
jl
loopne
aam
sub
jb
test
stc
ss
push
or
xor
pushf
cmp
aad
or
ret
int3
cmp
sbb
call
pop
hlt
retf
pushf
jecxz
dec
hlt
enter
jecxz
dec
movs
push
add
dec
jmp
add
(bad)
fcom
push
inc
bound
cmp
add
mov
div
sub
dec
sbb
add
dec
test
mov
and
pop
outs
and
int
jg
add
or
ins
fisttp
into
adc
push
mov
mov
mov
scas
pop
push
mov
or
shl
push
outs
or
mov
jo
shl
mov
call
or
arpl
lock
adc
inc
out
adc
adc
push
pop
icebp
adc
or
fsubr
mov
mov
or
push
pop
xchg
inc
fnstenv
jge
fistp
or
mov
dec
pop
or
xchg
bound
fstp
mov
repz
ins
into
cmps
jecxz
pushf
jmp
cld
ja
mov
pop
add
jecxz
mov
fucom
ins
sbb
pop
mov
or
add
pop
adc
fstp
mov
ins
imul
mov
mov
arpl
repnz
pop
jl
mov
mov
inc
add
iret
inc
addr16
nop
mov
mov
lock
push
loop
mov
int3
add
sbb
add
arpl
pop
imul
cmp
ja
cld
pop
push
xor
cmp
aas
or
adc
ds
mov
ds
xor
mov
ret
mov
pop
cs
lods
pop
push
cmp
movs
movs
test
popf
cmp
in
inc
xchg
cmp
mov
push
imul
dec
push
mov
popf
outs
ret
mov
dec
sti
push
jne
aaa
add
sbb
adc
int3
daa
pop
stc
push
ret
movs
div
call
imul
jg
jb
mov
aad
iret
xor
fwait
jge
shr
sbb
or
jne
push
add
and
xlat
xchg
pop
pop
repz
daa
mov
mov
fist
add
and
push
push
stc
push
shl
mov
pop
call
imul
call
jle
mov
pop
(bad)
aad
dec
mov
xchg
adc
retf
and
idiv
lods
shr
imul
xchg
push
xor
mov
adc
aam
xchg
lahf
xchg
leave
ins
ins
(bad)
call
jne
pop
or
adc
lock
pop
xchg
add
xchg
xor
repnz
nop
sbb
lock
cmp
test
int3
mov
pop
sahf
(bad)
jmp
xchg
xchg
push
pop
loop
mov
mov
mov
inc
or
mov
mov
dec
bound
movs
cmp
std
adc
lods
mov
xchg
mov
xchg
dec
pop
ss
scas
icebp
push
pop
add
movs
xchg
icebp
sub
pop
cdq
je
mov
mov
or
cld
pop
pop
xor
dec
mov
add
mov
xlat
pushf
xchg
js
push
and
xchg
mov
inc
add
mov
adc
dec
push
mov
fisttp
das
inc
movs
push
jne
sti
dec
mov
cmps
inc
inc
(bad)
cld
and
in
sbb
jae
push
adc
mov
pop
pop
outs
and
(bad)
jecxz
and
cmp
mov
out
clc
imul
ins
xlat
not
jecxz
add
ja
test
inc
dec
mov
mov
jmp
jno
lds
cmc
add
dec
mov
xor
sub
jo
out
xor
loopne
(bad)
push
pop
cmc
xchg
into
dec
adc
xchg
pushf
not
in
pop
cwde
inc
js
mov
sbb
or
imul
dec
ins
int
mov
nop
pop
das
mov
aam
mov
jne
jl
mov
iret
fxtract
pop
and
test
daa
mov
out
js
push
pop
aam
popf
das
daa
neg
inc
js
and
jb
and
ret
fisttp
out
pop
dec
lea
jne
iret
das
rol
adc
mov
jp
mov
aad
jmp
lea
stc
ficomp
lds
fst
cmp
cmp
loope
xor
fistp
sub
repnz
jmp
cmp
adc
jge
rcr
call
mov
add
retf
xchg
jle
inc
call
repnz
jmp
xchg
int3
cmp
out
xchg
sub
fldenv
mov
jnp
(bad)
inc
mov
mov
loope
sti
sbb
cmp
scas
push
jmp
out
jb
fnstsw
stos
or
or
mov
mov
push
js
pcmpeqw
mov
sahf
lods
nop
xor
int3
fdivp
sbb
sbb
dec
cvtdq2ps
cmp
in
push
outs
xor
mov
cmc
sbb
(bad)
dec
sar
icebp
mov
pop
int
arpl
punpcklbw
cwde
mov
ror
add
mov
call
clc
sbb
shr
ret
repz
jge
inc
or
or
call
jo
mov
xchg
daa
imul
rcl
dec
imul
fidivr
fisttp
jne
xchg
xor
loopne
shl
es
xor
or
rcl
jbe
popa
loopne
icebp
stos
or
scas
out
sub
xor
retf
and
sbb
mov
mov
pop
cmp
and
jp
adc
pop
loopne
add
cmp
pop
dec
jg
xchg
push
fcomp
nop
sub
popa
rcl
sbb
adc
adc
enter
jg
mov
cs
fst
mov
sbb
cmp
mov
lods
pop
adc
out
outs
dec
cmp
adc
(bad)
les
or
add
or
inc
leave
mov
data16
jo
jns
mov
(bad)
sub
inc
loop
cmp
sbb
stc
loope
cs
pop
sub
fldcw
mov
xor
repnz
jp
sub
lds
add
or
cli
inc
in
bound
push
xchg
stc
mov
in
mov
ds
xor
push
idiv
dec
ret
push
jg
aad
enter
sbb
fs
popf
sbb
int3
loopne
adc
jo
ret
idiv
stos
jae
push
(bad)
aad
lahf
in
sub
fld
jge
sbb
rcl
inc
and
mov
test
sub
lock
inc
inc
xor
fcom
shl
xchg
sbb
fisttp
xchg
aad
mov
and
fidiv
push
pop
and
cwde
xor
xchg
mov
loopne
fdiv
mov
jno
cmps
and
pop
inc
mov
cmps
sahf
add
icebp
mov
movs
scas
outs
in
std
addr16
push
sbb
sub
test
popf
mov
adc
adc
pop
fsubr
call
int3
adc
addr16
dec
dec
enter
xor
call
rcr
jp
das
pop
mov
sub
das
dec
sahf
ins
jle
loopne
iret
mov
jno
outs
sub
add
test
mov
imul
lea
sub
adc
or
pop
fisttp
cmc
dec
jge
aas
(bad)
mov
nop
and
add
in
mov
iret
and
xor
inc
cmp
movs
popf
sub
loope
inc
push
sub
in
mov
es
dec
out
mov
inc
outs
fld
out
fisubr
inc
xchg
mov
call
daa
dec
aad
dec
mov
dec
sti
mov
inc
scas
test
mov
add
lock
cmp
sbb
mov
fidiv
push
fwait
div
pop
mov
lahf
push
std
out
cmp
inc
lea
sbb
xchg
int3
lods
(bad)
in
xchg
out
cmp
add
scas
mov
jnp
sbb
rcr
fsubr
push
jno
pop
mov
add
jno
jmp
fidiv
jo
pop
test
mov
ss
xor
lock
sub
ret
jo
mov
xor
xor
fwait
icebp
mov
sub
mov
stos
jne
test
call
outs
(bad)
retf
cmc
push
jo
sbb
inc
cmp
jmp
jp
adc
into
sbb
and
movs
(bad)
jmp
pop
pop
(bad)
jge
data16
pop
shl
sbb
cmp
shr
or
jnp
inc
sub
jecxz
dec
push
pushf
shl
pop
sbb
pop
iret
test
sti
mov
repz
push
pop
pop
scas
push
fcomp
jmp
jae
mov
nop
cld
imul
mov
aas
mov
add
cmp
sub
icebp
fwait
dec
dec
mov
movs
ja
(bad)
(bad)
xor
push
in
cmps
int3
cmps
stos
repz
cli
arpl
cmovg
and
pop
dec
push
xchg
jmp
or
inc
adc
inc
pushf
or
add
cs
ret
mov
cmp
cli
cmps
mov
aaa
into
or
jecxz
pop
aad
ret
fcomp
push
jno
stos
jno
adc
xchg
and
cmp
aam
retf
or
xchg
rcr
popf
pop
inc
cmp
sub
cmc
lods
jb
dec
gs
std
clc
fiadd
push
mov
push
push
jmp
sbb
lods
lods
pop
mov
add
stc
repz
inc
adc
push
iret
push
add
adc
ss
ffree
in
das
cld
sbb
pop
mov
int3
adc
jl
cwde
mov
or
push
fisub
pop
std
mov
cmp
inc
imul
jb
or
mov
(bad)
icebp
ss
mov
push
jb
retf
and
adc
fcomp
jnp
movs
xchg
dec
in
cmps
es
xor
ja
jl
(bad)
jns
add
cmp
jne
push
inc
enter
and
es
int3
sub
adc
xor
xchg
inc
xchg
stos
jecxz
jmp
adc
mov
icebp
mov
cli
push
inc
push
pop
mov
lahf
cmp
retf
push
aas
sbb
mov
loope
jp
or
pop
cli
sti
dec
lods
stos
xor
xchg
pop
pop
ret
mov
fmul
aad
call
mov
(bad)
and
jl
xchg
ss
sbb
test
lea
sub
sub
jmp
push
outs
inc
pop
mov
movs
hlt
fsub
lds
jmp
repz
inc
dec
mov
nop
pushw
fld
fwait
mov
fsubp
inc
cmp
adc
call
sahf
pop
pop
pop
retf
jbe
add
mov
ror
pop
cdq
mov
lods
dec
enter
or
daa
xchg
pop
lea
cld
(bad)
gs
movs
sbb
xchg
push
mov
push
call
sbb
xor
mov
and
cdq
into
stos
loopne
jge
add
sub
xor
xchg
lods
jae
pop
call
into
retf
cmc
es
fild
ss
xor
jb
jl
scas
xchg
mov
fstp
retf
test
ror
sbb
mov
scas
imul
jmp
sub
dec
mov
inc
adc
lods
push
and
dec
lea
out
loopne
daa
lea
pop
mov
jmp
mov
jle
shl
mov
push
aam
cdq
mov
test
sub
fldenv
stos
es
out
(bad)
(bad)
bound
xchg
test
in
or
aas
mov
pushf
sub
sub
dec
cs
ins
and
lods
xor
push
int3
mov
pop
jmp
popf
mov
sub
xor
lds
sub
push
stos
fild
push
int
rcr
shl
arpl
stos
ins
fidiv
mov
xor
lods
mov
or
mov
jmp
dec
sub
loope
pop
and
inc
lahf
jecxz
xchg
mov
loope
fbld
data16
inc
aaa
test
mov
clc
dec
add
inc
outs
pop
bound
scas
or
sbb
popa
call
adc
ret
cmp
xchg
sbb
int
jne
adc
enter
es
mov
push
in
das
jae
jne
xchg
xchg
sub
out
aad
popf
xor
cdq
push
jle
cmc
or
repz
mov
dec
adc
rcr
out
jle
jmp
cwde
lock
lock
xor
pop
and
enter
adc
test
pushf
out
adc
in
push
pop
jbe
sbb
enter
test
and
or
sti
aad
sbb
jg
cmp
cli
std
xor
cmp
hlt
and
add
push
inc
pop
and
pushf
adc
dec
stos
push
push
jmp
or
outs
daa
shl
inc
sub
clc
push
retf
cmp
test
je
push
sti
mov
pop
psubw
cmp
loope
movs
shr
cmp
push
mov
call
pop
xchg
xchg
mov
(bad)
pop
pop
push
or
pop
(bad)
push
popf
mov
call
jmp
add
pop
mov
gs
rol
dec
enter
or
call
outs
mov
mov
iret
or
call
(bad)
je
sbb
iret
jo
sbb
cmp
pop
mov
arpl
mov
ficomp
aad
xchg
arpl
pop
push
test
scas
push
icebp
dec
stc
mov
xchg
mov
(bad)
adc
inc
xchg
push
lock
xchg
or
or
xorps
nop
dec
jno
push
mov
rol
sbb
sub
mov
sar
add
push
xchg
pop
mov
or
xchg
cmp
dec
rcr
and
jge
adc
pop
fs
or
mov
mov
or
add
add
mov
test
cs
gs
in
mov
mov
pushf
lds
sbb
cmp
push
lods
pop
pop
or
imul
xchg
iret
xchg
outs
stos
sub
(bad)
jge
in
in
mov
test
test
in
fdiv
sub
xchg
jbe
test
fsubr
cli
cmp
test
shl
inc
and
popa
movs
jmp
(bad)
movs
dec
addr16
sahf
and
loope
movs
adc
lock
jmp
rcl
out
push
pusha
aad
push
lods
hlt
mov
(bad)
sbb
xchg
xor
sub
jge
shl
fisub
lahf
and
rcr
sbb
add
fmul
or
push
add
mov
push
shl
sub
hlt
test
inc
adc
popf
mov
xor
push
lea
sbb
gs
xor
jmp
cli
ss
and
sbb
arpl
retf
pop
cmp
mov
and
xor
or
jg
sub
push
dec
sub
imul
addr16
jns
das
into
shl
jo
sub
div
enter
and
jg
jl
rcl
or
jae
mov
int3
xchg
sbb
cmp
bound
mov
repnz
test
(bad)
fdivr
sar
xchg
pusha
sbb
inc
fadd
arpl
dec
adc
sar
in
dec
dec
or
fcom
xlat
push
xor
popf
fisttp
mov
sbb
out
fdiv
xor
leave
inc
jnp
pop
or
jg
mov
sub
mov
loopne
enter
xchg
mov
cmp
push
adc
scas
imul
push
fisub
stos
xchg
(bad)
ss
out
jno
mov
test
pusha
fidiv
mov
dec
in
sbb
cmps
add
push
or
arpl
mov
mov
fbstp
fsub
js
mov
adc
ss
push
pop
mov
pop
push
xchg
jb
inc
mov
xor
call
(bad)
dec
mov
push
or
mov
leave
test
retf
pop
(bad)
push
sbb
ds
es
dec
dec
js
mov
mov
dec
jecxz
sbb
sar
mov
fld
les
add
(bad)
push
mov
pusha
inc
sbb
rol
or
inc
xchg
add
fidivr
lods
(bad)
inc
sti
mov
dec
dec
xchg
xchg
test
aam
or
adc
push
dec
test
adc
mov
push
ret
imul
test
pop
fld
and
call
mov
ds
pop
jmp
imul
scas
les
xchg
cmp
aas
dec
push
popa
mov
out
add
mov
out
enter
mov
push
push
push
or
xlat
pop
xchg
adc
xchg
aam
inc
in
and
movs
sbb
push
arpl
or
push
push
lea
ins
dec
sahf
ror
adc
jmp
ret
sbb
das
repz
cwde
push
aas
or
jo
int
mov
nop
int
adc
clc
ja
adc
xchg
push
aas
xor
pop
sbb
jge
mov
pop
shl
xlat
add
adc
jl
push
inc
mov
rcl
xchg
pop
cmps
lahf
dec
pop
fstp
push
(bad)
call
ins
mov
sub
inc
arpl
sbb
imul
mov
cdq
rol
stc
in
cdq
push
pop
cmp
cs
add
xlat
pusha
ins
cs
cwde
mov
mov
pop
int
jmp
and
rol
ds
stos
inc
nop
mov
inc
xchg
dec
daa
mov
into
or
js
sar
sar
pushf
and
cmp
fistp
mov
cmp
fst
shl
push
dec
pop
xor
or
rcl
sub
pop
push
arpl
lea
or
das
mov
das
sbb
out
retf
mov
cmp
xchg
or
imul
stc
xchg
sbb
ja
mov
int3
jmp
pop
cdq
cmp
call
outs
dec
test
cdq
stos
jns
mov
sub
inc
test
call
enter
xchg
fs
inc
mov
jmp
inc
or
mov
xchg
call
mov
fadd
pop
and
pop
or
test
xlat
dec
mov
lock
and
in
push
adc
add
shr
add
sbb
arpl
pop
imul
xor
(bad)
mov
mov
xor
in
push
inc
mov
fld
dec
jmp
enter
jmp
popa
loop
push
push
daa
das
stos
aam
dec
add
lock
stos
add
leave
in
scas
xor
adc
in
push
and
aad
loopne
pop
or
pop
fisubr
movs
mov
fiadd
pop
pop
icebp
imul
mov
inc
pusha
inc
sub
enter
xor
int3
mov
xchg
sbb
repnz
or
sub
cdq
cmp
cld
push
test
bswap
call
dec
fldcw
in
add
pop
and
fs
inc
(bad)
push
nop
jb
ret
enter
and
push
push
xlat
repz
or
jl
aas
xor
add
lea
cmp
mov
add
pop
push
push
retf
add
dec
jnp
and
inc
jg
and
mov
fcom
ins
dec
add
fucomi
pop
icebp
(bad)
sub
push
js
movs
add
stc
int3
jno
cmp
or
adc
inc
jmp
sbb
pop
ret
dec
cwde
push
in
pop
xchg
add
sbb
es
enter
or
mov
test
sbb
fadd
stos
sbb
leave
inc
pop
daa
jge
jp
cmp
cdq
iret
repz
fbstp
mov
pop
es
ss
mov
push
shl
adc
call
(bad)
ds
icebp
pop
out
adc
lahf
xchg
aaa
or
ficom
sti
or
sahf
push
lea
call
aam
dec
cwde
jo
arpl
mov
ror
adc
or
sub
sti
mov
mov
call
add
stos
(bad)
ds
fwait
pop
hlt
and
or
pop
and
or
hlt
cmp
cmc
mov
pusha
push
jns
nop
mov
push
test
pop
nop
lahf
in
mov
fistp
cld
add
cmp
pop
lods
je
je
cs
xchg
push
in
mov
sahf
jge
add
pop
push
or
dec
std
jo
addr16
xor
pop
movs
cmc
mov
(bad)
dec
ins
xchg
out
xor
or
out
push
cs
movs
dec
pop
sahf
ins
xchg
jg
sub
cdq
dec
jmp
jne
add
rol
sub
pop
push
add
out
xchg
mov
inc
mov
pop
cwde
fild
cmps
dec
sbb
add
pop
inc
ins
ror
test
push
ds
or
int3
sar
imul
mov
rcl
cwde
pop
nop
sbb
test
push
cwde
add
cwde
xchg
and
push
dec
push
scas
xchg
movs
(bad)
jmp
rcl
jns
mov
rcl
mov
inc
pop
jne
outs
stos
xor
mov
les
out
and
push
(bad)
fstp
sub
mov
cmp
cld
loopne
in
stos
xor
popf
and
in
cmc
fimul
mov
icebp
add
mov
fwait
mov
and
loopne
fdiv
add
cdq
ja
or
inc
bound
push
movq
retf
sbb
or
scas
xor
out
jae
lahf
adc
movhlps
pop
lds
mov
cmps
sbb
pusha
icebp
das
fs
mov
pop
add
mov
dec
jecxz
test
and
outs
bound
xchg
aam
(bad)
pop
mov
pop
or
sbb
arpl
lods
bound
daa
xacquire
cmp
das
push
enter
and
(bad)
js
pop
(bad)
ror
or
push
popa
nop
add
mov
rcl
xor
adc
mov
and
bound
push
sub
repz
cmp
aaa
jbe
jmp
sub
outs
ins
push
in
scas
mov
pop
ds
pop
push
sub
int3
int
or
pop
dec
mov
mov
sahf
inc
ins
xor
or
lahf
out
and
push
xor
or
outs
int
mov
xchg
repz
cmp
jb
or
mov
adc
jl
pop
js
out
mov
test
out
or
mov
inc
fbstp
push
gs
mov
pusha
daa
leave
pop
xor
hlt
push
fmulp
montmul
cmps
sbb
adc
pop
data16
jp
leave
in
cdq
adc
jge
retf
hlt
push
sahf
adc
mov
stos
add
sahf
pushf
add
loopne
mov
sbb
dec
dec
daa
popf
call
jge
pop
or
add
mov
loope
ds
add
dec
mov
dec
mov
and
jnp
mov
ror
inc
or
push
sti
push
push
test
call
and
imul
into
scas
pusha
dec
adc
mov
les
xor
imul
push
stos
mov
cmps
fs
mov
push
inc
(bad)
push
aam
repnz
mov
push
add
sbb
pop
add
mov
sahf
jae
jne
xchg
xor
sar
aam
mov
hlt
jns
add
xor
mov
jle
gs
fwait
cmp
aam
in
xchg
or
cmp
sub
adc
sub
test
repnz
lds
mov
daa
or
xor
daa
sbb
cmps
inc
outs
scas
jmp
ret
test
sub
jb
mov
in
pusha
xor
leave
fcmovnb
inc
xor
dec
lahf
ror
xchg
mov
js
sbb
int
pop
push
and
movs
cmp
int3
jae
jle
aaa
outs
xchg
imul
jmp
out
push
popf
sbb
sbb
pop
jge
repnz
cwde
or
ins
and
repnz
ret
movs
pop
daa
test
pop
dec
cli
and
mov
outs
dec
int
sbb
ficomp
fst
fs
pop
sbb
fwait
popf
(bad)
or
rcr
or
adc
les
aas
pop
and
mov
mov
retf
jo
ja
iret
cmp
or
mov
xchg
sbb
out
ins
loopne
lds
push
pop
cs
pop
dec
adc
in
mov
adc
stos
pop
sar
push
push
pop
adc
rcl
adc
daa
mov
rol
stos
in
es
push
xchg
xor
or
lds
sahf
loop
inc
mov
sahf
mov
sbb
cmp
pop
aaa
(bad)
out
pop
fsubr
sbb
jmp
test
and
daa
or
(bad)
ins
xchg
fwait
adc
scas
inc
add
out
repz
or
xor
rcl
or
addr16
lahf
cdq
sub
fisttp
xor
adc
sub
cmp
call
data16
push
idiv
cli
test
cli
push
push
sub
fsubr
arpl
clc
scas
sbb
int3
je
xchg
ret
jl
adc
clc
pusha
push
mov
pusha
add
call
(bad)
outs
push
popa
inc
push
int3
mov
jno
push
mov
sub
movs
xor
mov
out
ds
or
in
outs
es
mov
retf
push
jp
mov
sub
out
jle
push
or
daa
mov
dec
xchg
dec
push
imul
pop
mov
lds
int3
jecxz
sbb
adc
sti
dec
inc
daa
sub
loopne
nop
hlt
popf
mov
retf
cs
jae
pop
jno
xor
add
out
arpl
xchg
add
xlat
mov
jne
fs
test
cmp
pop
es
xchg
imul
scas
xor
inc
cmp
jmp
mov
adc
das
pop
dec
cmp
mov
xchg
jmp
adc
cdq
retf
mov
lock
sbb
cmp
pop
icebp
mov
jnp
jne
xchg
movs
das
dec
mov
fisttp
lock
inc
sub
(bad)
jno
xor
repz
sub
xchg
sbb
cmps
(bad)
aad
popa
push
neg
sbb
jbe
popf
cmp
(bad)
jecxz
and
jg
add
into
mov
cld
fistp
inc
add
jmp
and
movs
rol
pop
addr16
pop
xchg
shl
(bad)
(bad)
inc
xor
sub
mov
pop
dec
das
das
dec
outs
test
xchg
(bad)
(bad)
and
xchg
push
(bad)
mov
xor
div
mov
pop
loopne
and
jmp
cmps
add
jne
push
cli
mov
or
pop
cs
dec
mov
fldcw
cmps
pop
mov
mov
push
stos
ror
(bad)
hlt
pop
xchg
cmp
mov
xor
push
enter
vmread
inc
fwait
mov
mov
jbe
and
inc
fwait
out
sub
inc
pushf
loope
sub
add
out
and
mov
mov
fistp
std
mov
(bad)
inc
ret
xchg
rol
xor
sbb
(bad)
popa
inc
loopne
cmps
push
mov
xor
cmp
in
(bad)
or
in
push
xor
cmps
xchg
push
xchg
(bad)
fnsave
and
xchg
xchg
mov
jmp
push
inc
sbb
xchg
pop
inc
inc
adc
(bad)
pop
lahf
out
mov
call
add
out
ja
dec
stos
mov
addr16
and
dec
fimul
(bad)
not
call
mov
mov
dec
dec
inc
cmp
add
sti
mov
or
cmps
ss
hlt
cld
repnz
push
push
scas
loope
stos
push
pop
add
push
jnp
loop
fwait
lods
sahf
or
push
xchg
add
mov
mov
test
jle
(bad)
leave
cmp
or
adc
int
pop
dec
and
movs
ins
jns
jmp
into
mov
ja
jp
mov
adc
jl
xchg
push
ror
fidiv
(bad)
and
aam
lods
fisubr
cli
repnz
xor
aas
das
cs
jmp
xor
les
fisubr
or
jo
mov
dec
loopne
add
retf
mov
rcl
cmp
sbb
(bad)
mov
test
cmp
lock
xchg
out
aaa
je
stos
jge
cmp
and
fucomi
fimul
ds
in
adc
pop
inc
into
ins
jle
mov
ret
aas
in
mov
int3
and
sahf
repnz
push
dec
push
lods
mov
loop
out
dec
sahf
mov
xor
push
dec
push
dec
rcl
xchg
sti
dec
sbb
fldenv
jle
sbb
cmp
mov
jle
outs
or
add
xchg
loope
mov
and
sbb
pop
(bad)
mov
mov
sti
mov
dec
inc
stos
pop
or
jmp
adc
ds
cs
mov
jb
jb
xchg
mov
jmp
mov
push
xchg
cmp
fstp
pop
jg
push
gs
push
stos
mov
push
xchg
add
and
inc
inc
sbb
push
xchg
xor
(bad)
jb
es
pop
and
dec
retf
call
ja
iret
mov
into
adc
and
movs
push
rol
in
cmp
mov
jns
shl
mov
mov
aam
xchg
add
fsub
and
inc
fcomp
scas
test
cmp
xor
retf
push
adc
mov
ins
fidivr
in
xor
mov
shl
outs
mov
adc
in
(bad)
push
cmp
jne
sbb
xchg
out
pusha
mov
xchg
dec
lock
jmp
(bad)
jg
xchg
add
jmp
or
xchg
mov
(bad)
in
jb
out
sub
cdq
jmp
inc
(bad)
sti
imul
xchg
into
into
popf
push
push
icebp
repnz
pop
adc
movs
xor
inc
xor
(bad)
jbe
mov
jbe
(bad)
dec
stc
movs
out
xchg
sbb
stos
fstp
push
and
and
cld
fisubr
test
cmp
call
test
push
into
retf
and
inc
push
push
add
stos
add
int
ss
scas
repnz
sub
mov
mov
loop
xchg
pop
sahf
sbb
or
test
popa
shr
adc
or
jnp
arpl
sar
push
popf
movd
cmp
std
adc
imul
out
test
cmp
rcr
pop
sbb
out
(bad)
adc
les
lahf
dec
jo
in
mov
jb
jae
mov
repnz
mov
adc
jb
ss
pop
and
sbb
cmps
pusha
fwait
int
test
and
lock
aaa
cld
into
xchg
jge
es
ret
inc
jge
or
retf
sub
faddp
aad
and
push
xor
fnstenv
test
stos
test
xor
adc
xchg
pop
lock
out
mov
sub
ja
mov
mov
aaa
mov
xlat
push
in
sbb
popa
nop
scas
stos
and
es
xchg
loop
in
sahf
mov
xchg
push
push
dec
in
rcr
mov
push
jo
inc
ret
fwait
jle
adc
cmp
inc
test
repnz
sbb
out
fdiv
mov
xor
stc
(bad)
mov
jle
dec
dec
mov
push
(bad)
fucom
cmps
and
(bad)
imul
stos
mov
add
mov
xchg
add
pop
imul
lahf
das
add
in
pop
xchg
sub
mov
je
pop
push
mov
xlat
mov
dec
test
(bad)
aam
mov
sbb
or
fs
xor
rsm
cmp
fs
mov
fimul
inc
push
push
call
into
sub
ror
or
sti
sub
mov
mov
rcl
sbb
mov
adc
loop
xor
sahf
jbe
retf
js
push
push
fwait
jbe
dec
mov
and
sti
jns
pop
sbb
ret
and
lods
pusha
jnp
hlt
adc
cmp
jl
(bad)
in
sub
sub
call
sbb
pop
xchg
mov
sub
or
fcmovb
mov
xor
sbb
cli
pop
xchg
xor
jmp
fisubr
xor
xor
cmps
mov
pop
aaa
push
dec
jg
ficom
mov
(bad)
push
addr16
retf
cmp
cmp
out
or
jbe
retf
push
in
ds
call
data16
and
cdq
fidivr
mov
push
inc
aam
adc
sbb
sbb
pushf
inc
pusha
pop
repz
fwait
lahf
jp
mov
dec
repnz
scas
or
imul
inc
dec
es
arpl
sahf
and
(bad)
movs
push
mov
cli
shl
or
ds
inc
into
ins
push
ret
stos
jle
mov
cmp
hlt
lods
mov
pop
add
aaa
pop
sub
js
mov
xchg
mov
pop
(bad)
sbb
pop
xchg
and
or
popa
pop
(bad)
cmp
or
mov
mov
push
or
jb
sub
in
mov
cmps
jno
bound
rcl
fiadd
imul
sbb
popa
jbe
xchg
mov
ret
mov
ret
xor
ds
out
push
pusha
sbb
xchg
xor
movs
enter
pop
fisubr
je
mov
int3
push
clc
daa
and
inc
dec
js
xchg
mov
mov
adc
sar
out
jge
cs
bnd
sub
add
sub
mov
sbb
cmp
mov
jle
dec
aaa
mov
ffree
ret
jle
add
neg
push
loop
imul
mov
inc
or
sbb
push
out
adc
xchg
xchg
or
sar
sub
xchg
ds
in
cli
mov
pop
cwde
jb
jnp
cs
fwait
inc
jmp
lock
push
lods
and
xchg
cmp
push
jg
sahf
push
lds
dec
xchg
mov
(bad)
loope
dec
mov
ins
outs
clc
xor
scas
movs
stos
inc
sar
data16
push
and
adc
ficom
aaa
call
mov
xchg
add
cs
lods
inc
mov
pop
pop
mov
xchg
pop
add
repnz
mov
push
push
in
test
loop
sub
sahf
or
leave
imul
pushf
into
mov
in
or
sub
fs
mov
cmp
jae
test
mov
push
out
sbb
pop
out
pop
rcr
jl
(bad)
jp
ins
xchg
ret
dec
or
sbb
push
add
cdq
and
sbb
sbb
and
xchg
mov
test
jb
retf
inc
in
enter
and
adc
jo
fisub
mov
push
xor
and
js
jnp
mov
cmp
inc
dec
pop
jge
nop
jl
mov
and
jle
push
add
stos
cmc
and
and
xchg
push
push
leave
das
adc
or
mov
sub
inc
jno
mov
mov
fistp
inc
mov
ss
loopne
shl
aaa
scas
sbb
movs
pop
cmp
jmp
pop
jp
cmp
ret
ror
(bad)
out
dec
and
dec
xchg
inc
xchg
push
(bad)
and
xchg
cmp
out
mov
or
sub
dec
inc
out
outs
popf
mov
sahf
scas
dec
sbb
iret
sahf
(bad)
sub
adc
mov
push
test
mov
clc
cli
sbb
dec
mov
cld
movs
jb
push
cld
cs
inc
push
jmp
jmp
mov
stos
ficom
add
(bad)
scas
push
and
retf
pop
xchg
lods
pop
(bad)
aas
into
pop
mov
retf
adc
xor
xor
mov
sahf
jne
data16
popa
and
mov
fidiv
or
push
add
adc
mov
mov
jge
inc
sbb
adc
shr
loop
jp
add
ss
daa
ins
bnd
ret
sbb
mov
push
stos
(bad)
int3
sbb
daa
adc
push
ins
xor
mov
jae
cli
jno
dec
inc
xchg
pop
push
mov
jle
stc
and
pop
sbb
mov
pop
and
xor
sub
shl
sar
pop
dec
add
sbb
inc
adc
test
mov
add
enter
jmp
or
cli
enter
adc
pop
outs
xchg
mov
mov
cmps
sub
cmc
ficomp
mov
xor
loop
mov
push
(bad)
call
arpl
cmp
std
xchg
(bad)
out
sbb
cmp
jle
xchg
xor
sub
or
lds
fild
xchg
call
inc
adc
mov
mov
out
call
xor
mov
jbe
repnz
mov
es
dec
loop
sbb
sahf
nop
ds
pop
fsub
push
and
sti
mov
jecxz
push
cmp
jle
dec
test
not
push
mov
stos
stos
outs
loope
add
daa
in
push
out
push
scas
mov
cld
push
pop
sbb
(bad)
mov
pop
dec
pop
(bad)
mov
pop
clc
or
mov
cmp
xor
cli
jns
pusha
mov
lahf
mov
add
loop
jmp
push
bound
dec
gs
push
mov
xchg
cmc
test
mov
retf
push
push
xor
inc
push
push
push
(bad)
popf
jno
mov
sub
outs
out
mov
lds
inc
cmp
mov
(bad)
jnp
call
enter
pop
into
jmp
inc
jp
and
ret
mov
dec
test
ss
retf
(bad)
into
scas
and
es
das
jge
mov
shl
stc
outs
sub
test
sub
adc
or
call
js
jle
call
add
(bad)
nop
pop
mov
fdivr
(bad)
pop
pusha
xor
or
icebp
(bad)
aaa
(bad)
ss
in
(bad)
sub
or
dec
nop
(bad)
push
ins
out
fwait
mov
loope
xchg
cli
es
mov
repz
jb
adc
jmp
xchg
(bad)
cwde
in
push
pop
mov
cdq
xchg
movs
sti
out
push
in
sbb
xor
popf
retf
repnz
or
mov
cmc
mov
fadd
mov
out
imul
mov
movs
test
or
call
push
adc
test
mov
je
inc
sub
mov
mov
add
lods
ss
sbb
(bad)
cmp
scas
aad
mov
sbb
pop
loop
shl
add
jle
mov
lds
mov
imul
xchg
test
fs
jmp
mov
data16
push
mov
sub
mov
mov
pop
imul
mov
cmp
xchg
das
pop
outs
dec
jne
lds
mov
mov
(bad)
ds
add
cli
xlat
and
mov
inc
retf
and
jbe
out
cmps
int
ss
jmp
or
dec
jnp
cdq
outs
ror
fisttp
jl
ins
rcl
inc
mov
sub
sti
push
cmp
pop
sub
int
sub
call
mov
add
fidiv
and
call
fist
add
mov
jmp
addr16
cmp
rep
mov
cmp
cmp
rcl
loop
adc
xchg
pop
jecxz
jmp
cwde
xchg
mov
fadd
inc
call
jle
aas
inc
cmp
pusha
fwait
neg
lock
movs
inc
outs
out
(bad)
pushf
sub
jmp
dec
mov
or
sbb
dec
(bad)
xchg
mov
dec
and
dec
or
(bad)
mov
cli
cmp
push
ds
push
cmps
cli
test
mov
cwde
push
jb
mov
(bad)
jmp
stos
bound
cmp
push
jne
push
fidivr
mov
pop
push
xchg
jecxz
retf
add
inc
gs
mov
stos
push
pop
jbe
lods
mov
or
out
leave
in
pop
stos
femms
mov
push
xor
fsubp
je
call
adc
not
mov
addr16
mov
mov
mov
pop
lahf
mov
repnz
fild
xor
shr
push
es
addr16
xchg
pop
xchg
cmps
outs
push
fadd
(bad)
call
jb
scas
sub
push
cmc
dec
push
ret
jne
adc
cmc
adc
jbe
push
cmc
int3
pop
sahf
push
and
in
jns
sub
lods
jb
and
and
mov
daa
cwde
(bad)
(bad)
jge
aam
aam
sbb
leave
popa
arpl
aas
out
movs
sub
xor
call
das
sub
cmp
mov
ficomp
ffree
imul
jge
add
repz
inc
ss
xchg
imul
mov
mov
call
ds
retf
jne
out
mov
cwde
xchg
cld
dec
mov
aas
inc
xlat
cmc
xchg
std
sbb
cmp
stos
push
cwde
cs
jmp
jg
call
add
push
and
dec
loope
dec
push
sub
cmc
jl
int
aaa
cld
call
clc
in
mov
dec
test
dec
movs
arpl
push
push
test
jmp
cld
pop
xor
push
fidivr
test
push
push
inc
push
or
stos
es
pop
loope
mov
pushf
and
lods
push
push
adc
int
xor
push
push
cmp
retf
leave
adc
pop
dec
sahf
std
mov
in
or
sub
mov
mov
repz
inc
adc
adc
sbb
sbb
cmps
stos
push
dec
xor
packssdw
ret
(bad)
dec
push
jae
add
fnsave
outs
xchg
imul
mov
sbb
stos
jno
aas
int3
mov
adc
retf
push
and
jb
sub
xchg
int3
in
mov
lahf
jne
js
mov
imul
nop
stos
rol
xlat
int3
rcr
shl
stos
inc
sub
icebp
popa
jg
cmp
sub
mov
fimul
xlat
cdq
push
or
push
call
retf
xor
mov
fdivr
sti
leave
xor
mov
sub
sub
mov
jo
sub
jmp
lea
jns
cmp
rol
les
sub
jg
dec
cmp
xchg
push
cmc
fimul
ds
push
out
jmp
xor
repnz
je
lods
adc
out
xor
jmp
bnd
dec
pop
mov
outs
hlt
xchg
inc
nop
dec
push
lea
mul
bound
stc
xlat
out
inc
dec
xchg
imul
mov
int
outs
push
(bad)
std
sub
inc
stos
lahf
and
adc
movs
lods
sar
lds
mov
pop
jbe
dec
mov
iret
ins
pop
lods
push
(bad)
pop
addr16
add
jge
inc
pop
cmp
fs
jbe
or
mov
cmp
int3
nop
jp
xchg
fwait
mov
std
fisub
stos
(bad)
mov
cmp
jmp
mov
push
pop
shl
pop
ins
fwait
sub
push
jo
sbb
mov
outs
int3
std
faddp
xchg
inc
mov
jb
rol
mov
pop
test
cmps
retf
(bad)
and
xor
jbe
jns
int
rcl
mov
xchg
iret
and
mov
push
push
jle
cmc
gs
cmp
sub
test
add
leave
(bad)
mov
push
or
xor
sub
sub
jne
xchg
fnstenv
mov
das
jmp
rol
popa
mov
xor
aaa
mov
sbb
mov
cmps
mov
shl
into
mov
mov
adc
adc
xor
iret
dec
push
(bad)
in
fcom
xchg
retf
imul
cmp
cld
cmp
pop
inc
jb
jle
sub
pop
rol
loop
pop
out
out
sbb
inc
fwait
jg
cmc
icebp
sbb
out
adc
(bad)
leave
stc
imul
push
es
mov
push
push
icebp
jmp
int
push
pop
mov
jae
inc
or
add
mov
loop
pop
out
sub
pop
stos
outs
cmp
std
jge
fild
mov
mov
bound
repz
and
mov
arpl
push
ret
mov
adc
push
shr
push
and
imul
outs
adc
out
int3
test
sbb
adc
std
pop
fistp
mov
jecxz
enter
push
jmp
mov
retf
mov
jbe
mov
int3
or
and
sub
pop
dec
iret
shl
jnp
lods
shl
je
daa
lods
mov
cwde
rol
dec
mov
jg
aad
aad
sbb
sub
bound
push
aas
fadd
icebp
jo
add
add
jbe
inc
cmp
or
xchg
cmps
call
sbb
outs
xchg
cmp
out
cli
aad
test
mov
xchg
pop
iret
cmp
ficom
jl
push
mov
mov
call
in
sbb
push
mov
(bad)
lea
mov
shl
jnp
sbb
cld
icebp
xor
sub
fnsave
pop
add
or
push
ficom
lods
jmp
jl
pop
(bad)
scas
scas
retf
add
mov
adc
mov
push
pop
add
js
mov
or
mov
xor
pop
arpl
or
into
push
bound
stc
xor
movs
mov
mov
or
jmp
dec
push
push
outs
rcl
nop
push
int3
jl
ins
xchg
rol
inc
or
sbb
adc
(bad)
push
sbb
xchg
call
in
jae
sub
leave
inc
mov
and
clc
inc
jbe
jmp
pop
inc
and
dec
movs
js
xchg
vxorps
out
adc
jnp
addr16
cmps
scas
dec
daa
adc
jge
sahf
mov
mul
sub
push
out
aad
sahf
adc
push
push
fmul
pop
jae
les
mov
stos
scas
(bad)
xor
sahf
sbb
(bad)
xor
xor
popf
xor
jp
(bad)
inc
mov
and
dec
cmp
xchg
mov
leave
cmp
leave
jmp
add
xchg
jle
outs
jmp
mov
mov
scas
add
in
push
cmc
inc
jne
push
call
pop
inc
inc
leave
jp
imul
ficomp
jne
and
add
mov
ss
test
cmp
enter
jmp
cmps
lods
cmp
dec
push
arpl
outs
test
dec
nop
(bad)
xchg
mov
shr
adc
adc
lods
jo
pop
add
or
mov
fwait
scas
add
ficomp
or
mov
push
and
in
xor
pop
test
fs
or
pusha
stc
xor
mov
jnp
or
or
mov
pop
dec
unpcklps
xchg
mov
pop
jae
cmps
ret
std
in
dec
adc
stos
adc
add
mov
cdq
lods
mov
mov
pop
mov
dec
sbb
pop
jmp
pop
mov
mov
mov
mov
jb
or
dec
and
or
jae
bound
dec
test
fs
jb
mov
adc
xchg
dec
mov
xchg
mov
mov
fcom
repz
xor
outs
repz
les
dec
mov
(bad)
fbstp
sbb
mov
cmp
pop
fidivr
push
and
and
jecxz
xlat
xor
and
add
(bad)
push
es
xchg
ror
push
out
sub
movq
mov
push
sub
jb
pop
xor
ds
stc
(bad)
neg
xor
sbb
adc
(bad)
div
sbb
mov
popf
enter
push
(bad)
je
mov
and
fcom
fs
mov
cmps
jns
xchg
(bad)
iret
repz
and
sbb
rcl
xchg
dec
sub
jb
jle
mov
scas
sub
xchg
iret
or
lock
xchg
xor
xlat
jb
das
xchg
mov
mov
or
xor
push
sbb
sub
pop
mov
and
mov
out
loop
mov
add
jb
and
in
or
mov
mov
or
and
xchg
movs
stos
push
jmp
push
xchg
neg
in
leave
stos
xchg
inc
test
mov
cmp
aad
idiv
test
cmp
sbb
fidivr
loope
repz
sub
lahf
aam
add
test
and
inc
mov
xlat
nop
xchg
jne
movs
lods
mov
jmp
cmps
fidiv
std
cdq
mov
ins
test
jmp
stos
adc
add
nop
adc
jne
scas
mov
push
add
dec
jne
mov
xchg
mov
jbe
push
mov
dec
stc
mov
nop
sbb
out
jne
pop
test
dec
jge
iret
nop
sahf
popa
cli
jne
mov
mov
add
and
sar
cmps
nop
cmps
adc
jbe
push
clc
dec
or
(bad)
jne
sar
lea
nop
scas
ret
or
sbb
mov
adc
stos
nop
xor
not
sar
push
inc
or
retf
cli
and
and
pop
and
bnd
mov
mov
and
aad
add
mov
sub
inc
jle
bound
mov
das
stos
adc
int3
(bad)
loopne
in
sub
ret
push
and
fstp
adc
sbb
xchg
fist
mov
adc
xchg
mov
fst
stc
sbb
inc
pop
pusha
push
xchg
popf
mov
sbb
cmp
add
cmps
ss
mov
jge
or
pop
pop
push
test
mov
retf
jge
popa
pop
or
push
sahf
ss
fs
jge
mov
pop
push
mov
stos
ss
mov
push
or
imul
ss
adc
cmp
lahf
shl
rcl
ss
jge
add
dec
or
jo
ss
sbb
or
enter
push
jne
pcmpeqw
xor
sti
dec
push
and
ss
cmp
and
dec
fdivr
push
stc
iret
dec
popf
sbb
cmp
jl
push
rol
mov
rcl
xchg
loope
outs
jno
sub
dec
inc
sub
jp
xchg
xor
dec
enter
jmp
xor
sub
daa
xchg
ins
xor
jno
mov
scas
loopne
dec
shl
xor
adc
cmp
push
(bad)
aas
xchg
jne
mov
cmp
mov
jo
fsub
sub
sbb
dec
pop
inc
pop
xchg
jge
rcr
sahf
in
lea
rol
loope
rep
add
scas
xor
sbb
data16
xlat
lds
popf
cmp
cdq
jmp
lahf
loopne
mov
std
sub
jo
push
sti
xchg
clc
xor
mov
in
dec
aam
mov
cli
inc
xchg
push
push
jo
aaa
cmps
sub
pop
std
xchg
iret
jp
push
push
pushf
test
pop
aaa
fist
iret
add
lock
pop
and
gs
mov
xchg
push
test
add
leave
mov
mov
or
test
dec
or
arpl
or
popa
aaa
ja
mov
jge
push
cdq
les
mov
cmps
cwde
cdq
popaw
fistp
adc
mov
mov
mov
pusha
imul
sar
pop
idiv
ret
ins
ret
ret
jge
add
jo
cli
inc
(bad)
scas
mov
imul
mov
(bad)
xor
in
mov
jmp
aam
enter
cmps
scas
repnz
push
jg
das
pop
mov
out
retf
push
xor
xor
lock
add
adc
ins
or
cdq
sbb
inc
inc
mov
fsin
in
loop
and
pop
iret
imul
add
sbb
mov
imul
loopne
push
xor
adc
sbb
shr
mov
dec
aaa
push
push
jle
rol
xchg
push
or
ins
dec
rcl
ret
neg
xlat
lahf
sbb
out
lds
pop
sbb
xor
jno
mov
mov
jae
iret
add
(bad)
and
mov
xchg
div
cmps
js
aaa
leave
into
push
mov
or
adc
sub
daa
push
fldcw
or
xchg
xchg
cmps
mov
jmp
hlt
hlt
push
fdivr
push
ins
push
shl
leave
pop
pop
mov
lock
aam
fidivr
adc
call
iret
sub
sub
mov
fldcw
test
and
cmps
test
cmp
pop
ret
ret
jle
sub
inc
nop
dec
loopne
(bad)
outs
ss
nop
mov
mov
cmp
push
push
in
fs
cmp
pop
xchg
add
jp
scas
sbb
mov
jmp
fwait
sbb
inc
in
popa
mov
test
xchg
ss
jmp
icebp
mov
ror
sbb
push
nop
dec
jnp
mov
ss
shl
in
repz
mov
shl
test
dec
(bad)
lea
dec
aam
cli
sub
mov
cmps
jge
(bad)
cld
cmp
pop
push
retf
cmc
inc
test
addr16
adc
movs
stos
leave
nop
mov
xlat
out
fimul
scas
and
dec
pop
xchg
ins
mov
stc
lea
sub
inc
shl
popa
adc
pop
sbb
xor
jecxz
push
or
ficom
or
pop
repnz
mov
enter
xchg
(bad)
pop
mov
adc
fcmovb
mov
sub
imul
daa
rcr
imul
dec
lods
sbb
pop
out
lds
adc
stos
push
enter
push
push
jns
je
jg
retf
xlat
and
clc
jbe
adc
int
call
xor
jge
out
cs
and
cmp
loope
rol
add
mov
jle
push
inc
aam
xchg
data16
sbb
test
sub
mov
adc
or
das
jns
dec
test
xchg
xor
mov
inc
in
aam
cld
xor
xor
rcl
mov
in
pop
ss
rcr
cmp
in
loopne
hlt
xor
in
shl
cmp
inc
xchg
inc
in
out
xor
xchg
data16
jmp
or
push
xchg
mov
das
in
jb
push
inc
cmp
xor
jle
xlat
call
sbb
sar
popf
push
pop
repz
cmps
lahf
lahf
sub
loop
iret
jnp
mov
pop
leave
inc
dec
push
adc
cmc
xchg
mov
mov
test
cmps
adc
in
cld
fbstp
cs
and
push
into
dec
xchg
stos
mov
aad
xor
lods
mov
scas
cmp
fcomp
add
jnp
mov
in
mov
or
cmp
pop
lahf
shl
pop
pop
inc
or
mov
aam
mov
(bad)
arpl
test
or
lahf
imul
pop
cmp
outs
adc
or
mov
sti
push
hlt
push
gs
pop
mov
out
js
xor
mov
lds
(bad)
sbb
rcr
jb
(bad)
inc
enter
push
sbb
retf
lds
inc
cmp
jbe
mov
sub
scas
mov
push
ins
iret
or
lea
out
gs
stos
lods
icebp
daa
xor
jle
jp
aam
adc
(bad)
jbe
dec
into
xchg
(bad)
add
mov
add
sbb
adc
ds
mov
fstp
xor
add
xchg
dec
ret
fnsave
cwde
add
loopne
gs
or
push
les
loop
push
lods
cmp
and
in
adc
fistp
xor
and
jbe
fsub
xchg
out
mov
aas
or
addr16
inc
scas
gs
cwde
sbb
sub
addr16
push
lds
and
sub
dec
xrelease
dec
xor
mov
xlat
push
ror
repnz
fsub
dec
jecxz
push
movs
sahf
gs
sub
call
push
(bad)
mov
push
xor
addr16
(bad)
mov
test
cld
addr16
push
(bad)
push
jmp
add
and
call
push
outs
push
mov
pop
cmp
mov
hlt
ror
iret
sahf
hlt
pop
mov
adc
or
out
popa
mov
in
or
cld
out
mov
and
sub
mov
rcr
mov
adc
out
push
sahf
add
jp
and
ins
add
addr16
mov
jne
outs
inc
adc
vxorps
sbb
cs
xor
sub
push
jae
shr
xchg
retf
mov
cmp
fdiv
push
stc
int3
mov
jne
jns
adc
add
and
data16
rcl
in
or
add
aam
cmc
inc
sub
inc
mov
fwait
dec
stos
sub
nop
int3
add
out
fdivr
xor
shl
xor
xchg
jg
fst
(bad)
mov
test
(bad)
loopne
mov
movs
jl
stos
in
popf
cmp
loopne
in
movs
add
xchg
in
and
fsub
arpl
mov
call
rep
or
scas
in
sub
call
fbld
lods
call
out
inc
retf
movs
adc
xor
jae
xlat
movs
xchg
cmc
xchg
in
mov
sbb
loopne
div
cmp
sti
jl
cmp
dec
mov
push
jle
add
add
inc
push
scas
mov
xchg
push
add
lods
fwait
cmp
or
mov
leave
dec
push
cmps
mov
xchg
mov
xor
ret
iret
cmc
mov
push
pop
or
popf
cmp
jecxz
mov
jmp
cmp
sbb
(bad)
jmp
dec
aad
adc
gs
push
test
push
aad
push
sbb
rcr
cs
popa
aad
ret
sbb
jno
cmps
jmp
dec
aad
sbb
sbb
jno
jmp
pop
aad
je
sbb
retf
sahf
and
lock
pop
aaa
add
fstp
inc
iret
imul
test
xchg
pop
retf
cmps
jmp
pop
in
or
fcomip
sub
and
(bad)
sbb
xchg
sub
mov
fsub
cs
and
test
test
pop
xor
ds
pop
mov
fisttp
jle
add
fldenv
ss
inc
mov
es
fild
mov
hlt
jmp
adc
dec
mov
cmp
nop
jmp
imul
es
repz
sbb
push
outs
adc
js
adc
cdq
call
fadd
loopne
sbb
out
jae
sub
popa
pop
jno
xor
add
lahf
dec
out
pop
xchg
pop
into
int
sub
arpl
jl
imul
mov
adc
cmp
push
sub
adc
push
xor
sub
or
mov
xor
push
fnstcw
mov
xor
sbb
fdivr
mov
popf
mov
mov
xor
mov
and
dec
mov
shl
fcomp
xchg
xchg
pop
test
dec
cmps
leave
pop
repz
cmp
call
jmp
jmp
cmc
xchg
(bad)
dec
push
in
adc
jp
sub
inc
in
mov
icebp
fwait
aaa
inc
dec
and
hlt
jo
dec
scas
mov
mov
aad
lds
out
fwait
mov
stc
es
sub
xchg
dec
movs
int3
jo
sti
xchg
lods
cmps
in
xchg
int
fdiv
push
xchg
mov
stos
push
dec
xor
fst
jb
lahf
mov
add
dec
mov
in
aad
jl
test
imul
pop
add
jl
mov
test
pop
loope
add
lea
fs
in
test
xchg
mov
jmp
into
sub
(bad)
dec
adc
mov
mov
(bad)
out
shr
xchg
ss
and
mov
xchg
sar
rcl
call
movs
fnstsw
(bad)
ror
icebp
pop
sub
mov
test
mov
aaa
fcmovu
out
xchg
pop
or
sub
ret
xchg
jge
mov
scas
retf
rcl
scas
mov
imul
(bad)
fdiv
dec
and
mov
ja
ins
icebp
cwde
sbb
mov
cmp
push
or
aas
enter
(bad)
loopne
xor
scas
les
in
xlat
cli
push
mov
cmp
mov
mov
pop
lods
ds
(bad)
into
xchg
jmp
adc
xor
sub
push
(bad)
out
jne
shr
xchg
jb
jne
enter
push
repnz
sti
je
cs
and
pusha
ja
push
or
test
jns
adc
iret
jmp
jl
jne
rcr
adc
push
lea
cs
aam
jne
sub
adc
and
adc
int
xor
adc
ja
into
xlat
cwde
das
jmp
jne
fisttp
xchg
cld
xor
xlat
sbb
ficom
xor
stos
or
bound
push
mov
stos
inc
mov
pop
push
dec
ins
and
bound
outs
ds
vpcmpeqd
sbb
adc
les
enter
push
cmc
adc
cwde
xchg
or
fbstp
test
sbb
sub
cmp
scas
dec
jle
inc
dec
lahf
add
rcr
sbb
add
pop
mov
repnz
addr16
cdq
jle
pop
rol
xchg
or
jmp
lds
or
das
mov
in
jo
std
xor
xchg
in
cmc
xor
xor
mov
push
cmp
(bad)
call
add
outs
mov
mov
cmp
in
and
lods
or
addr16
fs
push
test
mov
jmp
and
xchg
fnstsw
dec
inc
outs
xchg
push
or
mov
mov
mov
adc
popf
dec
jne
repz
lahf
mov
mov
dec
je
(bad)
mov
mov
inc
dec
movs
sub
pusha
jb
mov
mov
out
ins
lea
adc
adc
imul
test
jmp
cs
inc
mov
push
mov
icebp
lods
ins
ret
adc
xor
cmps
cwde
jbe
popa
fist
push
sub
rcr
push
sbb
sbb
mov
ds
outs
push
pop
sbb
and
push
test
int
cmp
and
test
es
jg
fwait
add
sub
dec
in
int3
cmp
aad
and
sub
mov
lods
sbb
into
(bad)
dec
out
das
in
adc
sub
je
sar
mov
ss
cli
loopne
cmp
ja
cmp
jecxz
retf
jg
enter
add
in
add
add
call
cmp
mov
mov
lods
inc
imul
push
sub
adc
adc
cdq
push
pop
push
out
bound
xchg
fwait
test
mov
inc
dec
sub
sbb
mov
cmp
mov
icebp
mov
mov
mov
inc
movs
inc
inc
dec
sti
dec
mov
das
vrcpps
or
test
nop
inc
xor
inc
push
lods
(bad)
mov
jp
pop
pushf
shl
loop
stc
pop
int
sbb
xor
pop
out
mov
fnstcw
or
loop
fimul
add
in
and
mov
(bad)
mov
cmp
pop
int
mov
out
out
je
cmp
adc
jmp
pop
je
xchg
arpl
mov
inc
test
je
out
dec
adc
inc
or
call
mov
pushf
neg
adc
movs
daa
mov
jbe
imul
movs
stos
pop
(bad)
pusha
int3
ins
and
sbb
movs
das
jo
pusha
push
(bad)
mov
xchg
jb
movs
mov
mov
daa
div
pop
retf
lock
cmp
(bad)
sti
pop
ja
inc
jnp
cmp
and
(bad)
mov
iret
and
mov
and
inc
shl
sub
pop
xchg
sub
sub
jmp
sbb
xlat
cmps
sub
sub
dec
push
jno
pop
pop
xchg
das
mov
mov
ins
jo
fistp
div
adc
mov
jo
xor
push
jge
pop
pop
sahf
loopne
sub
ss
mov
add
or
cmp
jo
in
push
mov
neg
ret
out
jo
cmp
add
jmp
jae
push
push
xchg
in
minps
cwde
jne
clc
out
xor
sbb
cmp
pop
icebp
pop
or
cmp
shl
(bad)
dec
cmp
lods
and
(bad)
inc
or
cli
data16
retf
inc
mov
inc
test
in
dec
jns
inc
add
or
scas
(bad)
sub
inc
push
stc
jo
adc
icebp
fwait
inc
mov
push
(bad)
aad
popa
jns
repz
pop
dec
cmps
(bad)
cmp
dec
jns
dec
or
pushf
mov
mov
xchg
add
adc
inc
push
retf
sub
scas
test
inc
mul
test
or
push
lds
dec
add
ret
(bad)
scas
ror
mov
fdivr
rcr
inc
hlt
mov
ret
adc
pop
cwde
nop
pop
mov
xlat
jns
push
ficomp
mov
stos
fisttp
aaa
repnz
popa
into
clc
pop
mov
js
bound
test
loopne
(bad)
cmps
sub
out
in
or
fisubr
test
ss
push
icebp
daa
(bad)
stos
mov
and
rep
std
daa
adc
pop
and
push
jmp
fidivr
cmp
call
daa
and
jnp
fs
inc
loope
mov
sub
arpl
jmp
sub
mov
ds
push
(bad)
(bad)
adc
and
pop
rol
pop
ins
imul
sbb
sub
lds
add
loope
jb
sub
test
pushw
arpl
test
and
cs
jbe
jne
int
adc
and
jb
ret
and
test
(bad)
rcl
das
clc
daa
into
jne
jle
adc
aam
push
pop
sub
cs
mov
adc
sub
push
loop
jmp
add
cmps
jne
das
adc
inc
test
push
push
xor
cld
retf
(bad)
inc
in
xor
dec
push
mov
pop
push
ss
pop
jb
xchg
fs
loop
stos
mov
xor
js
in
jg
cmp
(bad)
cmp
dec
int
daa
push
adc
jge
fwait
popf
ror
loope
test
adc
add
mov
lods
ret
cld
inc
add
gs
and
out
or
xchg
enter
jmp
ins
sub
into
mov
repz
cmp
ret
inc
xchg
stos
out
shl
add
lahf
ss
pushf
out
and
and
repnz
jecxz
mov
or
iret
mov
ror
sub
push
inc
push
ror
lods
jmp
pop
into
inc
or
xchg
lds
xor
push
call
xchg
inc
mov
mov
inc
adc
repnz
sbb
imul
mov
add
dec
sub
dec
add
mov
and
bound
inc
cmps
sbb
push
test
(bad)
fnstsw
mov
retf
or
dec
push
(bad)
pop
jno
xchg
sahf
xchg
add
mov
adc
aam
iret
xor
add
dec
add
mov
xchg
(bad)
int
pop
mov
sbb
pusha
cmc
call
and
imul
test
mov
cmps
outs
jg
mov
cmc
int3
or
shr
mov
or
pop
xchg
out
mov
dec
xor
repz
adc
outs
cmp
ss
inc
jge
jno
cmp
ins
sar
jae
sbb
retf
inc
and
in
or
xor
movs
add
into
push
into
sub
aam
shl
mov
scas
shr
out
iret
sub
mov
xor
test
fmul
cs
pop
mov
ficomp
sbb
fstp
or
jnp
xor
push
leave
add
cmp
popf
imul
mov
int3
out
popf
in
cmp
in
xchg
call
aas
adc
xchg
retf
mov
jmp
cmp
(bad)
xchg
in
or
in
cmps
push
sbb
cmp
hlt
and
sahf
pushf
bound
repnz
inc
add
push
push
inc
dec
adc
mov
ja
test
and
retf
outs
jmp
mov
push
inc
mov
dec
cld
ror
xchg
test
pop
mov
sbb
push
aad
cmc
stos
test
add
jae
push
fidivr
lods
xchg
sar
(bad)
fwait
pop
sub
mov
add
sbb
and
lods
scas
arpl
test
inc
(bad)
pusha
jbe
call
or
scas
pop
dec
mov
xor
xor
adc
repnz
aas
xor
push
or
cdq
push
movs
pop
mov
ret
std
sbb
outs
push
outs
nop
jne
lds
pusha
sbb
inc
xor
mov
sbb
sub
retf
sub
mov
dec
jbe
push
ins
int3
outs
scas
lea
sub
scas
js
cld
or
jnp
pop
lods
inc
test
jmp
pop
xor
mov
add
movhps
scas
aaa
lods
xor
lea
repnz
mov
cmp
shl
mov
sub
pop
aam
stos
jl
adc
popf
cmp
(bad)
cmp
test
add
imul
test
jno
xor
retf
xchg
pop
in
fnstsw
push
xor
jno
mov
pop
jb
mov
xchg
mov
loop
adc
clc
mov
jno
cmp
pop
xchg
push
pop
jle
mov
jno
xchg
addr16
add
lea
es
dec
jno
in
xlat
ja
inc
xchg
mov
stos
outs
cmp
sbb
push
jno
lds
(bad)
es
sbb
dec
inc
xchg
leave
ja
mov
xor
retf
cmp
sbb
add
js
or
into
mov
jge
inc
inc
lahf
jp
inc
rcl
mov
es
jp
jge
shl
lds
push
or
jg
cli
mov
pop
inc
stos
sub
int3
and
jp
cs
shr
jae
push
fisubr
or
xor
xchg
xchg
xchg
aad
and
test
ja
pop
mov
inc
jl
in
popf
aaa
mov
push
loopne
xor
cmp
arpl
nop
mov
gs
js
xchg
fstp
leave
and
or
xchg
into
sub
push
adc
outs
in
shl
nop
inc
jnp
mov
ss
out
fnsave
adc
repnz
movs
push
jns
pusha
cwde
call
frstor
or
inc
mov
sub
or
movs
movs
mov
(bad)
push
psraw
test
daa
sub
xchg
scas
dec
push
push
cmc
ins
stos
(bad)
sti
lea
mov
dec
shr
push
adc
pop
xor
adc
stos
jbe
lods
xor
pop
and
cld
mov
sbb
pop
into
pop
mov
adc
mov
mov
(bad)
outs
push
gs
std
dec
adc
or
cli
dec
mov
jo
int
xor
mov
mov
mov
je
(bad)
test
les
sbb
pop
stc
jo
mov
cmp
outs
pop
jae
jne
leave
mov
dec
shl
loope
in
je
and
dec
inc
into
into
xchg
gs
je
jp
mov
test
fidivr
imul
add
mov
dec
punpckldq
pop
and
mov
inc
cmp
jp
js
stc
push
mov
jae
add
push
jmp
int3
loope
xchg
dec
add
pushf
xchg
push
fadd
pop
fidiv
fbstp
fcmovbe
and
cmps
inc
cwde
jno
data16
dec
lahf
xchg
or
stos
xchg
sub
mov
nop
xchg
inc
dec
xor
jae
fst
data16
pop
dec
int3
out
pushf
sbb
cmps
movs
sbb
mov
cmp
pop
mov
js
cwde
mov
(bad)
jbe
loop
(bad)
aaa
mov
sbb
arpl
push
(bad)
imul
ins
cmc
or
imul
sub
pop
arpl
pop
daa
and
cmp
xor
push
stos
jl
push
mov
xchg
mov
add
xor
xor
xor
mov
call
lods
arpl
and
pop
xor
sahf
enter
cmps
jae
sub
shr
loope
in
mov
ss
rol
jo
into
xor
add
pushf
movs
xor
adc
inc
aaa
scas
push
jge
inc
adc
pop
out
add
stos
jle
sbb
mov
fwait
jg
xor
fcom
popa
sub
and
(bad)
in
movs
aam
jbe
and
ja
mov
add
repnz
cld
add
cdq
retf
inc
mov
mov
mov
or
fwait
dec
pop
cwde
xor
rcl
xchg
(bad)
int
lock
jge
adc
and
xor
xchg
cwde
fwait
push
cdq
push
dec
push
push
jl
stos
add
jnp
mov
mov
addr16
xchg
mov
fidivr
cmp
movs
mov
mov
jno
scas
push
test
or
dec
gs
dec
sub
test
ja
not
push
aam
adc
pop
rcl
pop
mov
add
mov
pop
test
popf
mov
xlat
cli
push
fcomp
jns
push
dec
pop
or
and
dec
add
or
dec
pop
popa
sub
and
lahf
or
cmp
movs
mov
shl
dec
add
mov
sub
popa
std
inc
adc
adc
cmp
pop
sar
ins
test
sub
sbb
lods
outs
sar
(bad)
push
and
nop
jb
ins
cmc
enter
push
jle
hlt
je
adc
mov
adc
fnstenv
pushf
mov
and
cdq
iret
out
mov
and
data16
jl
add
jp
jne
pusha
aam
jmp
sub
mov
and
repz
sub
fcom
inc
cs
and
xor
mov
xchg
repnz
int3
sti
outs
mov
push
div
pop
sahf
stc
loope
sbb
aaa
ret
lea
loopne
pop
call
movs
(bad)
push
cmp
in
mov
push
xchg
push
pop
sub
dec
mov
out
xchg
mov
imul
mov
dec
inc
xlat
shr
sbb
(bad)
fwait
jg
mov
jb
adc
sahf
inc
ret
aas
(bad)
repz
repnz
mov
sub
mov
adc
(bad)
clc
imul
xor
push
xor
cmc
cmps
in
test
(bad)
adc
je
mov
shl
aam
push
cmps
ss
lods
bound
add
xchg
popf
scas
pop
fstp
pop
aad
jl
nop
jno
pop
out
cmp
loop
fnsave
adc
nop
dec
mov
rcr
pop
fsub
pop
jle
mov
gs
sbb
dec
add
pop
or
(bad)
fnstenv
sbb
fiadd
jge
addr16
jae
test
cli
adc
leave
mov
push
push
add
(bad)
movs
lods
cmc
daa
push
add
pop
xor
mov
sub
push
inc
and
xchg
ficomp
jae
adc
pop
jns
jae
iret
retf
and
xchg
adc
ret
into
fisub
repnz
mov
add
fs
cmp
shl
hlt
call
jmp
xor
imul
mov
lahf
xchg
inc
(bad)
push
mov
push
fsub
dec
popf
std
aaa
xor
fisttp
stos
mov
cmp
adc
push
movs
xchg
add
(bad)
call
cmp
or
or
xchg
push
xor
(bad)
mov
inc
mov
xchg
cdq
js
hlt
out
sti
das
(bad)
inc
xchg
mov
sbb
in
sar
dec
pop
sahf
cwde
xchg
jge
push
fcomp
pop
or
scas
lds
mov
dec
xor
std
lahf
jmp
pop
in
push
or
sub
and
outs
or
and
fs
sar
call
lods
sbb
add
dec
fmul
xor
aam
mov
mov
inc
mov
adc
sar
mov
mov
ror
out
dec
cmp
std
outs
xchg
inc
push
mov
and
shl
scas
cli
outs
mov
and
push
sbb
mov
sar
rcr
jmp
pop
push
jmp
in
adc
ja
aaa
fwait
jge
lea
xchg
ds
in
mov
mov
mov
add
inc
ror
test
sahf
jmp
popa
leave
xor
push
inc
mov
in
xchg
xchg
test
hlt
daa
sbb
xor
das
xor
push
imul
push
and
cs
mov
sar
push
mov
adc
stos
imul
xchg
lock
cwde
jle
ins
test
dec
dec
shld
stos
mov
repnz
scas
adc
push
push
retf
sub
and
mov
pop
(bad)
fcomp
mov
xchg
and
ror
cdq
add
or
inc
icebp
(bad)
jnp
push
pop
or
jne
call
test
jno
or
pop
call
int3
sbb
dec
jns
cmp
or
jp
ret
in
rcr
pop
je
pop
push
movs
lods
sbb
(bad)
pop
out
mov
fninit
(bad)
in
add
or
sub
loope
pushf
movs
lds
pop
mov
in
ds
into
push
inc
cli
add
jne
mov
test
mov
sub
push
or
mov
repnz
outs
push
lods
adc
mov
push
pusha
in
pop
add
mov
es
jmp
sahf
inc
push
lahf
cwde
push
cmp
push
arpl
push
mov
popa
ror
enter
add
ins
mov
xor
loopne
xchg
mov
push
mov
push
loope
mov
jmp
dec
cdq
xor
cdq
fsub
lods
repnz
and
inc
rcl
pop
pop
mov
scas
call
fsin
iret
cmps
cs
mov
jecxz
into
mov
cmps
mov
and
inc
pop
mov
and
scas
xor
or
test
clc
sbb
je
push
(bad)
xchg
out
test
dec
in
xchg
mov
mov
dec
repnz
jno
mov
inc
sbb
(bad)
in
mov
mov
add
aad
mov
adc
lea
cdq
imul
pushf
nop
lods
idiv
call
xchg
fcom
cmp
lea
sbb
add
sub
ja
test
sub
sbb
inc
sbb
xor
mov
adc
jnp
cmc
push
adc
fistp
dec
pop
push
dec
outs
pop
xchg
push
xor
daa
ret
mov
pop
adc
lods
push
or
sub
ds
jno
jae
adc
(bad)
fldenv
mov
inc
mov
rcl
scas
jnp
xchg
add
pop
mov
jnp
adc
adc
xor
ja
fisubr
mov
lods
add
nop
mov
add
mov
cs
repz
push
push
xor
jb
in
and
(bad)
addr16
out
(bad)
sar
movs
lock
in
fidiv
ret
inc
xchg
jnp
pushf
and
in
nop
lds
push
loopne
leave
jnp
adc
outs
in
mov
dec
fstp
dec
jmp
cmp
aas
nop
jg
xchg
sub
nop
das
add
adc
(bad)
sahf
inc
fist
mov
imul
and
lahf
(bad)
rcl
aad
lea
sbb
inc
xor
cld
test
mov
xor
pusha
pop
add
call
in
(bad)
js
iret
sub
push
lock
adc
cdq
div
and
test
mov
xchg
inc
sbb
jg
cmp
in
mov
neg
ss
mov
jecxz
lea
(bad)
pop
mov
in
pop
cmps
cmp
and
imul
ds
sub
xchg
stos
inc
sbb
int3
xchg
aam
cmps
fimul
ret
xor
lods
in
(bad)
fnstsw
daa
jmp
ror
push
push
push
xchg
xor
loop
jns
fwait
sbb
add
sti
add
in
sub
ja
add
mov
adc
or
ret
aam
dec
int
leave
inc
and
cs
cmc
loope
popf
and
jne
arpl
fnstcw
push
inc
sub
xor
mov
mov
xor
neg
sub
fldcw
mov
sub
scas
jbe
cli
mov
iret
sbb
or
(bad)
loop
addr16
and
inc
ficomp
bound
push
in
movs
ins
lahf
je
out
sbb
or
(bad)
mov
and
es
add
pop
xchg
xchg
(bad)
fs
in
test
adc
ins
sbb
in
cs
sbb
sbb
xor
dec
mov
lahf
dec
fsub
sbb
or
xchg
repz
test
outs
fdiv
in
adc
dec
jo
mov
mov
mov
push
mov
and
or
inc
sbb
cmp
arpl
hlt
sbb
int3
or
(bad)
pop
(bad)
push
es
pop
adc
mov
xor
lods
pop
jg
hlt
test
mov
test
retf
stos
inc
jno
add
mov
pop
mov
dec
sub
jb
outs
ror
lods
(bad)
icebp
jg
dec
adc
adc
xor
retf
cmp
inc
nop
push
mov
xlat
jno
cmc
sbb
imul
inc
sub
mov
mov
xor
outs
test
retf
xchg
jne
test
xor
adc
fmul
mov
das
lods
aad
fldcw
rcl
arpl
xor
stos
xlat
mov
out
push
cld
call
jg
cmp
aad
gs
fldcw
scas
adc
mov
mov
ret
ret
mov
fdivr
jmp
(bad)
lods
sar
ret
enter
xchg
dec
cmp
les
cmp
cli
repz
jne
std
xor
mov
fiadd
rcr
sbb
repnz
xlat
inc
mov
and
dec
inc
push
jmp
push
pop
fmul
xor
xchg
mov
nop
fiadd
aad
inc
dec
imul
jge
(bad)
in
aad
pavgb
cmps
mov
hlt
out
stos
mov
push
pop
xor
jns
cs
pop
jb
ss
xor
jl
(bad)
push
outs
mov
adc
sti
std
jae
ds
loop
(bad)
cmp
push
or
or
(bad)
in
clc
inc
movs
inc
mov
pop
lods
scas
shl
pop
ficomp
in
lock
cmp
adc
in
sbb
aas
dec
mov
mov
sbb
xor
xchg
mov
fbstp
jb
imul
aaa
shl
test
xor
in
ins
js
ffreep
xor
inc
cmp
pop
jb
in
and
mov
and
cmp
push
imul
dec
push
test
inc
dec
ret
mov
jmp
icebp
fistp
fcmovne
mov
(bad)
fsubp
fild
xchg
(bad)
and
adc
push
test
cmps
pop
cmp
hlt
popf
repnz
imul
add
pusha
stos
mov
mov
jne
jecxz
aam
ret
ret
enter
jmp
sub
stos
mov
mov
scas
iret
jp
push
pushf
dec
and
arpl
bound
shufps
jmp
pushf
sti
aam
and
call
dec
popf
fidiv
mov
mov
adc
and
daa
test
inc
fcmovnbe
aas
dec
xor
xchg
fsub
adc
daa
shr
add
repnz
and
sub
jle
pop
xchg
shl
test
or
lea
mov
in
sub
test
or
fwait
outs
(bad)
addr16
fs
scas
sub
imul
dec
fidivr
arpl
js
jns
ins
or
outs
ret
test
test
bound
push
into
aas
stos
fcom
push
mov
mov
rol
int
and
out
pop
out
cli
movzx
outs
cmp
clc
mov
mov
ret
aad
or
sub
dec
or
aas
jno
pop
aaa
gs
retf
xchg
push
enter
adc
xchg
or
adc
xor
mov
inc
mov
sbb
jl
lds
mov
or
test
sti
add
inc
cmp
pusha
mov
sti
pushf
xor
sbb
jmp
jno
inc
lds
retf
out
jge
out
les
mov
pop
jae
icebp
pop
jp
dec
ret
push
stos
inc
ds
lods
inc
(bad)
fld
or
cwde
mov
and
jo
inc
fstp
push
jmp
and
or
jns
mov
ins
xchg
sbb
sub
mov
fldcw
jo
nop
sub
(bad)
jecxz
in
dec
mov
push
aaa
inc
les
icebp
sahf
cmp
pop
ja
pushf
or
mov
mov
stos
add
mov
sbb
push
xchg
pop
sbb
sub
popf
stos
lods
jo
sub
pop
repz
mov
add
add
jecxz
jns
stc
jns
sub
cmp
ret
cmp
inc
jp
adc
shr
dec
je
jecxz
xchg
cmp
loope
jae
sub
(bad)
push
cwde
mov
je
cld
cs
ror
call
push
cwde
cmp
sub
mov
cwde
dec
lea
fucomip
jecxz
and
out
ja
(bad)
pop
aam
les
les
mov
(bad)
in
push
pop
cmp
jnp
sbb
pushf
out
sub
cmp
sbb
xchg
mov
js
jg
sub
mov
add
jmp
lods
sub
in
repnz
jmp
xchg
scas
cmc
jmp
add
inc
xchg
stc
mov
dec
inc
fldln2
or
sbb
adc
or
pop
popa
cmp
outs
ja
dec
(bad)
int
mov
jns
sbb
adc
mov
or
fisttp
mov
and
or
movs
movs
mov
jmp
or
xor
bound
lds
gs
sub
adc
stos
addr16
or
adc
sub
mov
int
push
adc
hlt
ins
loopne
aad
xchg
fdiv
outs
int
js
cmp
pop
sbb
cmp
fisub
lahf
(bad)
pop
fcos
sbb
iret
inc
retf
jb
inc
cld
xchg
add
mov
call
retf
mov
xchg
jae
jns
xchg
mov
inc
or
dec
sahf
cs
mov
(bad)
js
cdq
ins
pusha
add
test
inc
add
(bad)
mov
jmp
test
repnz
xlat
sbb
inc
push
mov
into
push
adc
mov
adc
repnz
cmps
lock
sbb
mov
xor
cmp
jmp
aaa
pop
cdq
jmp
es
nop
fwait
mov
adc
mov
movs
mov
rcl
xchg
bswap
jbe
dec
in
inc
jne
aaa
cwde
and
cdq
out
retf
xchg
cli
inc
mov
xchg
mov
inc
pop
xchg
repz
adc
dec
jo
movs
lahf
jmp
add
dec
pop
das
dec
pop
retf
mov
pop
popa
ret
mov
add
or
dec
ins
loope
ror
outs
jle
cli
jmp
jnp
lahf
stc
pop
or
(bad)
adc
jmp
frstor
in
pushf
pop
and
repnz
dec
shl
xor
mov
xchg
dec
mov
hlt
mov
arpl
dec
mov
add
stc
inc
outs
fimul
cmp
out
repz
out
ret
(bad)
sub
movs
push
into
jmp
mov
inc
push
out
jmp
mov
or
or
scas
ret
push
lock
aaa
dec
and
cdq
inc
enter
adc
loop
add
push
push
es
mov
xor
es
pop
into
mul
in
inc
inc
ret
cmp
push
cwde
dec
mov
retf
fs
in
rcr
ror
in
imul
in
xor
xchg
push
dec
fcmovnbe
pop
ins
xor
mov
xchg
xchg
xor
test
loopne
push
ja
inc
push
js
mov
pop
cmp
jl
jno
pop
in
dec
aas
cmp
arpl
out
mov
sbb
fild
mov
ins
ret
jmp
iret
lods
inc
mov
mov
push
inc
adc
xchg
lock
clc
pop
std
cmp
jp
movs
shl
loopne
dec
mov
shr
pop
mov
adc
inc
aam
dec
push
rdtsc
movs
mov
ja
into
cdq
pop
in
push
dec
add
xor
and
outs
mov
xchg
push
jg
fwait
popf
mov
dec
adc
ret
stc
dec
test
dec
push
out
add
cld
call
(bad)
dec
jmp
inc
sub
repnz
scas
add
movups
mov
push
add
shl
pop
or
xchg
mov
into
cmc
push
jle
(bad)
pop
add
mov
call
iret
jns
jp
pop
mov
cwde
cmp
cwde
jo
popa
xchg
or
mov
pop
xchg
push
mov
dec
mov
inc
push
push
out
clc
jno
cmc
adc
cmp
mov
mov
ret
sub
cmp
gs
mov
loopne
push
(bad)
fld
push
shl
(bad)
adc
in
out
xchg
push
ror
push
or
ins
les
int3
sbb
jg
les
shl
xor
(bad)
pop
jnp
sbb
xchg
mov
jmp
movs
js
jg
pop
jne
dec
cmp
aad
pushf
and
fmulp
cs
mov
jp
adc
loop
cmps
repz
cmps
rcr
sub
pop
lock
or
movs
fdiv
jmp
addr16
pop
sbb
imul
xor
jb
(bad)
or
daa
repnz
mov
out
int3
pop
or
mov
dec
(bad)
sbb
imul
mov
add
nop
push
leave
push
rep
test
add
jbe
and
cwde
scas
mov
jl
nop
test
or
inc
aas
pop
out
cmp
or
popa
sub
es
mov
jmp
bswap
mov
gs
inc
jno
ret
mov
xor
lock
inc
in
mov
in
fcom
pusha
push
mov
jp
xor
bnd
jecxz
sbb
fsub
shl
sti
enter
jbe
or
pop
nop
ror
dec
sbb
ds
pusha
stc
lods
jo
mov
xchg
or
cmp
mov
call
inc
mov
adc
pop
cmp
stos
xchg
adc
(bad)
jge
rcr
pop
and
data16
scas
xchg
sbb
cmps
outs
adc
push
addr16
jb
ret
cs
push
ins
add
xchg
ins
aad
push
outs
enter
jmp
inc
arpl
lods
push
fsubrp
gs
mov
ja
pop
mov
fstp
add
xchg
add
fmul
dec
rcl
outs
sub
push
jno
push
not
sbb
aaa
cs
not
ficom
sbb
xor
fld
jmp
xor
fisttp
or
and
hlt
sti
or
mul
fild
inc
xchg
std
nop
daa
out
push
test
in
cmc
lds
loop
mov
js
xlat
mov
pop
push
(bad)
in
outs
jb
inc
fs
mov
adc
fsubp
xor
mov
outs
xor
js
stos
shl
mov
pop
js
cmc
stos
pop
aaa
mov
jnp
imul
jecxz
cmp
xchg
dec
inc
out
mov
inc
xchg
mov
sub
inc
in
inc
outs
cmp
xchg
cmp
adc
mov
cdq
dec
ss
out
sbb
sub
icebp
dec
mov
mov
hlt
inc
jo
dec
cld
mov
gs
push
inc
arpl
mov
bound
jne
and
push
push
fimul
cdq
jp
jge
ret
cmp
xchg
xchg
dec
xchg
in
imul
sbb
mov
(bad)
jo
iret
stos
outs
dec
add
lds
dec
lock
nop
adc
icebp
jno
jns
xchg
push
xor
mov
out
(bad)
retf
and
div
and
dec
mov
into
push
lock
jnp
add
sbb
pop
daa
(bad)
jmp
and
inc
cmc
sub
repz
(bad)
(bad)
aad
in
movs
sub
fmul
inc
lds
dec
fidivr
lds
jmp
call
mov
inc
sub
jle
ins
mov
clc
pushf
adc
inc
xor
or
jns
loopne
das
inc
inc
mov
jae
mov
shl
dec
pop
pop
out
push
dec
cmp
xchg
pop
fwait
add
cmp
mov
push
cmp
out
icebp
ds
mov
pusha
lahf
add
inc
cmc
dec
and
ja
mov
in
call
pop
call
enter
pop
adc
cld
call
test
jl
(bad)
repz
stos
addr16
clc
or
aas
into
adc
sub
shl
pop
cli
stos
sahf
icebp
shl
push
dec
add
or
jl
ret
push
add
popf
push
or
cli
xchg
scas
out
sbb
imul
mov
inc
and
popf
add
popa
repz
fucom
lahf
sbb
pop
push
mov
jnp
retf
icebp
stos
movs
adc
ins
push
inc
les
cs
std
rol
xchg
push
mov
cmp
dec
mov
push
icebp
dec
adc
add
cmp
fiadd
xchg
inc
xchg
clc
adc
push
sub
cmp
push
cmp
in
push
xchg
and
enter
add
cmp
jp
add
pop
pop
push
iret
scas
pop
sub
aam
repnz
push
adc
push
mov
pop
sar
xchg
mov
or
or
push
sbb
mov
mov
cld
fwait
or
or
fnstsw
pop
rcr
gs
cmp
into
ret
fisub
adc
fbld
cwde
rol
pop
test
push
ds
mov
in
ret
push
sbb
adc
test
xor
or
xchg
addr16
std
sbb
cwde
jno
xor
(bad)
lods
push
fistp
int3
xor
(bad)
xchg
inc
dec
cmps
pop
cld
xchg
(bad)
scas
mov
out
cmps
cs
jmp
pop
xlat
add
int
scas
or
pusha
pop
test
mov
add
bound
(bad)
aam
mov
adc
lods
clc
sar
fidivr
dec
aaa
sbb
ror
imul
ins
out
lock
imul
int
arpl
fdiv
retf
mov
shl
je
adc
retf
rcr
pop
ret
jg
mov
mov
xchg
jecxz
das
fld
or
jmp
icebp
or
xor
lods
xchg
or
repz
lods
cmp
mov
cmp
arpl
dec
(bad)
mov
dec
add
data16
fs
(bad)
sub
push
sbb
test
mov
xor
scas
dec
pop
call
lods
nop
ret
bound
sbb
scas
shr
inc
mov
mov
int
jb
ret
pop
enter
push
aad
xchg
mov
test
daa
div
mov
cmp
jnp
stc
cmp
push
xchg
and
div
xor
shr
mov
mov
shl
dec
xchg
hlt
dec
hlt
inc
mov
in
sar
cmp
jl
out
ret
and
xlat
jl
jmp
jmp
mov
and
sub
inc
dec
xchg
jecxz
cs
xor
nop
inc
imul
shr
add
mov
out
les
xchg
in
repnz
mov
call
data16
jmp
mov
fdiv
and
sar
lahf
ror
cmc
xchg
mov
or
daa
scas
mov
mov
mov
je
int3
loop
lock
or
(bad)
xlat
mov
pop
lock
leave
in
jmp
jbe
ret
test
and
push
into
into
daa
popf
out
and
and
jp
imul
sub
shl
out
bnd
aas
aad
pop
xchg
sub
fdivr
call
sbb
add
jnp
into
jmp
xlat
mov
out
sub
add
ret
xor
inc
xchg
xchg
inc
aas
jmp
fidivr
jmp
xor
dec
mov
shl
cwde
or
sub
push
jg
dec
and
xchg
push
jl
push
sbb
push
inc
es
cwde
popf
addr16
mov
and
(bad)
cmps
pusha
(bad)
int
mov
mov
movs
in
(bad)
cli
mov
loopne
imul
cmps
es
and
loope
inc
push
mov
inc
mov
sub
outs
dec
stos
xchg
add
dec
push
adc
lods
iret
int
add
loop
pop
mov
shr
or
jne
jge
push
or
cdq
mov
sbb
or
(bad)
mov
or
and
pop
jl
ret
push
pusha
add
pop
pop
and
pop
or
lods
outs
sbb
(bad)
iret
inc
xchg
mov
repnz
push
jg
mov
loope
push
int
mov
add
loop
dec
sti
cmp
sbb
nop
sbb
dec
popa
mov
xchg
shr
out
cmc
les
push
(bad)
enter
jmp
fsubr
jmp
xor
inc
jecxz
scas
xchg
cmp
out
mov
jb
push
test
xor
inc
cdq
xor
pushf
jo
fptan
shl
mov
lahf
test
daa
popa
dec
imul
mov
fild
or
adc
out
xchg
push
pop
or
loop
sub
xchg
mov
push
mov
sub
inc
mov
setne
jle
push
or
inc
inc
xor
sub
sbb
xchg
adc
outs
call
bound
repz
sbb
mov
push
xchg
ror
pop
inc
mov
and
test
pop
fwait
cli
or
icebp
sub
sbb
aad
dec
xchg
shl
neg
iret
addr16
out
fmul
inc
shr
clc
or
dec
aaa
ret
in
movs
mov
loope
mov
pushf
xchg
shl
aad
mov
mov
ss
leave
sahf
out
popa
cmp
sbb
mov
or
pop
nop
jnp
out
inc
call
mov
push
repz
xchg
cmc
not
sbb
cmp
ins
popa
pop
clc
sub
popa
movs
jp
cmp
and
in
add
std
pusha
sbb
test
loope
test
lods
jnp
imul
loop
pop
in
add
scas
nop
lahf
pop
or
shl
mov
sahf
js
jb
pop
or
add
jo
or
out
dec
sub
pop
lods
dec
aas
mov
lds
cmps
fadd
xor
mov
jmp
leave
mov
loope
sub
call
jl
inc
xor
sub
bnd
fadd
mov
sub
ss
dec
xor
pusha
pushf
dec
loope
es
aaa
push
ins
push
lea
mov
xor
mov
cmc
cmp
fwait
aad
int
mov
mov
or
cmp
cmp
xchg
stos
adc
in
adc
bound
mov
es
jg
inc
inc
cmp
js
xor
sub
add
data16
imul
stos
add
ins
add
cmp
ins
in
jo
dec
aas
inc
jo
movs
dec
jb
pop
adc
pusha
xchg
sub
push
mov
call
lods
out
pusha
add
push
loope
ds
add
mov
inc
mov
test
pop
scas
out
inc
pop
cdq
repnz
ffree
sub
jl
dec
mov
ins
xor
scas
adc
aam
ror
or
adc
adc
or
cmp
call
mov
mov
imul
shl
outs
fisub
xor
add
cwde
jle
or
push
js
push
jne
das
stos
sub
out
and
paddsw
cmps
and
fwait
cld
xchg
or
push
push
push
adc
in
adc
pop
cdq
retf
loopne
sub
or
dec
icebp
mov
or
scas
test
jle
fidivr
leave
rol
retf
sbb
xor
jmp
test
cmp
mov
iret
cmp
adc
retf
lahf
fcmovu
(bad)
outs
retf
shl
cmp
test
call
popa
jnp
xchg
sbb
dec
jmp
ds
inc
cmps
mov
(bad)
out
aas
dec
inc
sub
inc
sbb
dec
scas
cmp
mov
int3
fwait
push
sti
jo
pushf
hlt
fadd
jecxz
pop
movs
loopne
jo
xor
jecxz
add
imul
in
(bad)
int3
cmp
fldcw
out
lods
mov
jmp
rcl
lahf
inc
aad
or
pop
in
sbb
das
xor
cli
mov
out
test
sahf
inc
ins
mov
call
ret
inc
movs
pushf
mov
add
dec
push
retf
rol
sub
mov
dec
dec
dec
dec
jg
aad
cmp
pop
ja
out
push
dec
pop
gs
out
stos
sahf
rcr
xor
sub
push
and
nop
test
mov
mov
adc
outs
es
arpl
pusha
imul
push
xchg
cmp
dec
jg
add
(bad)
mov
mov
or
inc
pop
je
addr16
and
or
imul
mov
dec
pusha
sbb
outs
mov
out
push
or
(bad)
xor
out
xchg
mov
pop
inc
(bad)
sub
mov
pushf
outs
jns
imul
mov
push
imul
fcomp
adc
leave
mul
rol
test
lods
cmp
jns
cmps
adc
test
pop
nop
cmps
(bad)
stc
sub
inc
and
inc
retf
pop
psllq
inc
js
movs
dec
popa
movs
jmp
mov
xor
arpl
dec
aaa
adc
nop
pop
and
cmp
push
push
(bad)
cmp
adc
and
or
shl
test
in
imul
cmps
outs
fcmovnbe
or
sahf
iret
imul
ror
(bad)
jmp
mov
(bad)
pop
and
pop
adc
jne
mov
xchg
std
pop
daa
cmp
push
sub
mov
sbb
adc
(bad)
loopne
(bad)
je
aas
loopne
in
xchg
in
int
repz
out
mov
push
loopne
mov
aad
js
and
xchg
mov
test
stos
xchg
out
xor
push
pop
jnp
lods
xchg
sbb
retf
or
popf
scas
(bad)
push
mov
pop
inc
lods
inc
mov
xor
or
js
pop
lods
xchg
mov
int
or
shl
pusha
and
fucomip
or
mov
(bad)
out
lods
mov
pusha
xor
adc
xor
dec
stos
xchg
test
mov
push
mov
shl
inc
test
pop
cmp
leave
in
sub
dec
and
lds
js
fnstcw
adc
mov
jg
aas
aam
dec
xchg
fsubr
sub
fisttp
jb
mov
imul
sahf
push
outs
fnstsw
xlat
into
cs
add
(bad)
xor
sbb
xchg
xchg
jb
and
enter
pop
jns
cmp
hlt
pop
retf
mov
cmp
ja
dec
inc
int
nop
popa
and
data16
arpl
and
rcr
jne
daa
xor
outs
jno
rcl
jl
cmp
(bad)
sar
sub
jno
sub
shr
push
mov
and
and
cmc
addr16
test
int
xchg
stos
xadd
int3
les
or
ja
sbb
ja
fs
sbb
jae
fisubr
xchg
outs
inc
xchg
pop
jno
inc
dec
js
jp
(bad)
les
jg
mov
cmp
scas
sub
bsr
xor
adc
mov
push
adc
jg
push
sar
ja
adc
ins
retf
ret
aad
pop
sbb
cmc
cmp
jmp
jne
loopne
add
(bad)
out
and
retf
inc
and
xchg
sub
imul
js
cmp
add
pop
sub
or
cmps
iret
loop
enter
stos
jnp
and
xchg
sbb
push
movs
and
mov
sti
das
jmp
inc
jno
push
mov
jae
rcl
imul
and
sub
sub
mov
aas
jmp
xchg
mov
pop
pop
mov
enter
repz
rcr
adc
js
gs
xchg
pop
xchg
leave
jmp
mov
ss
das
mov
sub
ret
or
std
and
adc
cwde
imul
push
aas
dec
sub
mov
aaa
inc
sbb
scas
mov
sub
(bad)
and
pop
push
sbb
scas
popf
stc
xchg
idiv
pop
test
sub
pop
mov
lds
xchg
inc
call
sbb
sub
pop
sti
aad
dec
lock
ds
fdiv
sub
or
sub
pop
loope
and
repz
(bad)
dec
xchg
or
lahf
movs
mov
cmc
arpl
adc
loopne
xchg
cmp
cmc
in
fidivr
xor
push
(bad)
xchg
push
repz
inc
lahf
cmp
sub
lock
jno
addr16
xor
jp
pusha
fcmovnu
inc
jo
movs
mov
mov
sbb
sar
inc
jecxz
xchg
mov
cmps
add
gs
enter
dec
ja
jmp
sub
lock
dec
xchg
mov
(bad)
inc
fwait
repz
mov
and
adc
lock
leave
rcr
lahf
add
cmp
inc
mov
stos
(bad)
in
sub
push
push
mov
cmps
cmp
cld
jecxz
mov
pusha
inc
in
mov
push
shl
lahf
ins
sbb
test
xchg
cwde
sbb
mov
cmp
mov
rcr
add
call
retf
xor
repz
movs
or
dec
(bad)
pop
std
dec
test
scas
mov
jle
pop
sbb
jl
pop
mov
inc
fimul
xor
sahf
in
xchg
or
test
cmp
arpl
popa
push
sub
(bad)
mov
xchg
in
jecxz
cmp
cmp
mov
iret
vmovupd
add
cmp
adc
pop
js
mov
cdq
(bad)
ins
add
adc
loop
jle
popf
mov
out
adc
inc
into
xlat
jle
mov
cmc
inc
jmp
es
inc
dec
mov
mov
jmp
pop
dec
sbb
and
out
pop
or
xor
call
xor
cs
mov
test
mul
cwde
jns
mov
jg
scas
test
xor
pop
gs
inc
jg
push
pop
outs
int3
inc
sub
fisub
mov
jp
sti
xchg
int
loopne
(bad)
aas
int3
cdq
hlt
or
push
repnz
ret
push
jb
or
push
movs
cmp
out
cmp
(bad)
dec
xchg
add
loope
and
test
or
or
mov
iret
and
movs
jbe
jns
xor
lea
in
jae
push
mov
sar
mov
(bad)
mov
lock
das
cmps
retf
cmc
test
addr16
xor
mov
mov
push
mov
sub
push
fwait
push
neg
lods
dec
add
add
jmp
xor
adc
imul
mov
sub
fimul
cmps
scas
xchg
or
loop
les
aas
mov
sbb
enter
loop
bound
xchg
mov
mov
xor
mov
sub
cmp
xchg
add
or
imul
aam
(bad)
pusha
jne
rol
fwait
xchg
pop
test
call
adc
lea
adc
scas
(bad)
iret
(bad)
scas
and
fsincos
xor
xchg
cmp
adc
mov
lods
test
jmp
cmp
adc
xchg
sbb
loopne
out
add
mov
sub
jns
in
rcr
sub
rol
sbb
lahf
imul
inc
cmp
jo
pop
mov
mov
sub
fdiv
or
mov
inc
call
fadd
sub
and
add
and
and
or
sahf
popa
adc
ret
sti
xlat
sub
jmp
jmp
or
cdq
push
dec
ror
inc
stc
loopne
push
out
jbe
add
pop
push
ret
push
add
movs
out
stos
mov
test
in
in
lahf
mov
cmps
pop
cli
out
cld
push
jge
adc
sar
addr16
sub
cs
push
jne
adc
daa
sub
scas
jns
mov
jo
in
push
xor
lea
cmps
(bad)
jecxz
adc
into
push
dec
(bad)
out
bound
jge
(bad)
pushf
pop
daa
in
cmps
push
mov
xchg
daa
or
(bad)
adc
jg
xchg
in
mov
xor
or
hlt
test
mov
jg
adc
sbb
sub
add
ret
jmp
call
out
sar
loope
loopne
clc
fldcw
xor
lods
xchg
movs
lods
test
push
cmp
cmp
retf
sub
(bad)
ds
jl
jnp
es
add
push
xchg
test
adc
movs
(bad)
pop
sbb
in
sub
jo
jae
xabort
call
outs
retf
fs
inc
in
(bad)
mov
sti
cli
jno
call
or
or
inc
add
mov
mov
inc
daa
sub
or
jns
add
jae
add
adc
mov
mov
test
pop
mov
mov
pop
(bad)
ins
call
bound
fisttp
inc
xchg
fwait
sbb
add
in
xchg
mov
sbb
or
adc
pusha
out
aas
mov
int3
push
imul
push
or
sub
adc
mov
cs
mov
pop
push
jp
dec
out
mov
test
in
jae
mov
sub
lock
in
in
mov
(bad)
pop
jl
push
fisub
add
sbb
mov
(bad)
aaa
push
xor
shl
fisttp
dec
arpl
dec
ins
repz
add
aad
pop
inc
das
stos
pop
pop
adc
dec
adc
outs
and
out
xchg
ja
stos
mov
fistp
aad
sub
lods
mov
inc
xor
mov
push
sub
push
retf
mov
enter
or
dec
dec
dec
dec
pop
movs
jle
shr
sbb
call
jae
cs
mov
repz
pop
cmp
cmps
or
adc
push
(bad)
push
pusha
and
fisubr
mov
pop
loopne
cld
push
loop
add
cmp
jnp
fmul
mov
sbb
push
rol
jmp
lods
mov
jp
jbe
fwait
ins
inc
jge
ret
xchg
add
out
pop
and
pop
cmps
jno
neg
mov
ja
mov
jne
fucomp
inc
dec
mov
mov
sub
(bad)
xor
outs
and
adc
cld
push
xchg
xor
(bad)
(bad)
into
ins
xchg
mov
retf
test
adc
add
jg
inc
ror
loopne
dec
inc
inc
pop
rcr
fs
fptan
push
outs
jge
loop
pop
jmp
and
lds
cmp
or
xchg
scas
mov
jae
sbb
push
inc
or
out
iret
mov
clc
gs
sti
cmc
push
mov
shl
movs
mov
inc
jmp
out
cmp
sub
repnz
leave
push
xchg
adc
mov
and
ins
popf
fild
push
push
inc
imul
and
mov
cmp
(bad)
fisttp
pop
icebp
stos
pop
mov
in
test
je
or
fimul
lock
cmp
push
push
mov
cmps
ins
sbb
fisubr
cmps
fldcw
call
nop
pop
sub
into
ja
pop
xchg
mov
out
mov
or
cmc
pop
sub
mov
rol
outs
out
push
mov
pop
jecxz
and
sahf
adc
xchg
(bad)
cmps
mov
jp
jno
iret
cmp
push
mov
mov
xchg
mov
jecxz
jmp
cmp
sub
jo
and
push
mov
inc
lods
fwait
aas
int
sbb
shr
call
hlt
loopne
movs
mov
fwait
push
pusha
outs
cmp
out
sbb
xlat
(bad)
out
sbb
lock
push
jl
fbld
mov
mov
retf
mov
fimul
mov
mov
dec
lods
inc
push
das
scas
xor
sbb
pop
pop
sbb
sub
cmp
cmp
clc
sahf
xchg
jle
or
fadd
push
cmp
jnp
addr16
ss
and
inc
(bad)
pop
pop
pop
lahf
pop
mov
inc
retf
push
and
mov
sti
lahf
ins
das
popf
cmc
sub
ficom
addr16
ds
adc
mov
imul
xchg
ins
mov
cmp
jb
pop
call
mov
mov
sub
inc
mov
pop
popf
jno
jg
(bad)
jl
mov
push
fldcw
inc
sbb
dec
xchg
out
int
mov
push
fs
fisttp
pop
pop
movs
add
in
fsubr
xor
add
adc
cmp
xor
lea
or
mov
in
sbb
and
add
sti
pop
jle
jae
cmp
sbb
sar
sbb
or
jmp
call
addr16
popa
cmp
jmp
add
push
push
jle
(bad)
cmc
mov
sub
mov
scas
pop
ds
test
adc
fsub
int3
cdq
sub
in
(bad)
push
cli
jbe
ja
mov
int
(bad)
into
pusha
mov
retf
mov
nop
pop
xchg
ret
ds
in
in
xchg
int3
inc
in
mov
js
shl
cmc
aad
imul
jbe
scas
xchg
fisubr
fsub
mov
pop
xor
dec
inc
rol
mov
adc
or
or
and
add
xchg
into
and
mov
(bad)
adc
xchg
sbb
sub
cmp
out
add
push
push
ror
mov
aas
push
(bad)
ss
(bad)
mov
ror
jae
movs
sub
(bad)
and
neg
mov
fbstp
sbb
mov
cmps
ror
rcr
pushf
mov
lds
xchg
sub
rcr
out
popa
mov
mov
push
push
clc
outs
cmp
inc
ficom
call
and
push
jns
and
mov
(bad)
fdiv
sub
xchg
retf
les
fwait
repnz
mov
pop
dec
lea
pop
inc
in
cmc
repnz
cli
sti
mov
dec
dec
adc
imul
jmp
xchg
out
mov
aam
push
push
push
into
(bad)
push
push
push
in
in
add
pop
cs
inc
adc
push
push
stc
or
das
movs
push
sbb
jns
pop
dec
int
pop
rcl
pushf
int
jg
dec
jp
mov
imul
jne
jl
and
test
push
ja
pusha
mov
fs
neg
inc
cdq
dec
inc
sbb
xor
sbb
loope
xchg
repnz
xchg
cmp
scas
in
je
push
mov
and
dec
(bad)
out
cmc
lahf
cmp
nop
dec
rol
ret
mov
outs
pop
aaa
push
jl
push
arpl
xor
mov
dec
test
into
lods
into
sti
popf
fwait
jns
push
push
cmp
cmps
mov
xor
xor
out
xor
iret
dec
cmp
jae
jle
push
hlt
aam
pop
mov
push
fidivr
jns
imul
test
sbb
dec
dec
call
cli
stos
enter
push
call
into
push
fidiv
je
mov
pop
push
mov
cmp
dec
add
sub
pop
rol
fwait
ret
arpl
sub
outs
test
mov
in
inc
mov
pop
push
sub
(bad)
pusha
and
sub
dec
mov
(bad)
lock
xchg
sub
cmp
xor
fwait
mov
mov
add
leave
loope
add
ins
popf
(bad)
or
or
sbb
popa
and
mov
out
daa
outs
mov
and
pop
sti
icebp
and
adc
test
mov
dec
and
and
(bad)
mov
shl
pop
in
test
test
mov
mov
push
inc
adc
mov
xchg
test
in
popf
mov
loop
and
stos
sub
xchg
rcr
(bad)
push
cs
retf
ret
mov
cdq
sbb
lds
popa
push
out
je
cld
aam
cmp
out
and
mov
cmc
xor
adc
xor
jecxz
pushf
xlat
aam
push
mov
in
xchg
or
adc
add
lds
daa
push
cli
pop
lods
and
dec
and
dec
int3
lds
out
sti
adc
aad
test
jecxz
push
sbb
icebp
xchg
mov
mov
or
pop
push
jns
adc
mov
mov
push
dec
jl
mov
jp
adc
in
shl
dec
and
sub
fstp
jno
outs
or
sub
pop
sub
sbb
popa
or
mov
les
mov
in
mov
div
xchg
das
inc
sahf
xor
std
jl
adc
ret
ret
in
xchg
xchg
cmc
or
loope
push
daa
inc
fs
mov
test
loop
(bad)
repnz
mov
add
cmovnp
imul
retf
or
ja
imul
das
rep
sub
dec
push
cmp
adc
ja
pop
inc
mov
repnz
sbb
dec
cmp
or
mov
pop
pop
sti
ret
mov
inc
enter
jmp
mov
jae
lahf
cmps
mov
jbe
mov
mov
or
add
and
add
sub
inc
out
ss
outs
and
shl
adc
sbb
jp
jp
in
pop
xchg
mov
ror
rcl
cmp
dec
scas
sbb
data16
call
cli
jno
in
push
iret
or
cmps
int3
dec
xchg
or
aad
shl
mov
xor
mov
xchg
cmp
lds
jp
mov
fwait
sub
shl
cwde
or
pop
hlt
test
retf
dec
sub
push
mov
jg
addr16
mov
mov
push
ss
pop
out
mov
lahf
adc
fucomip
xlat
data16
imul
popa
aaa
xor
inc
lea
in
shl
movs
inc
xor
stos
adc
icebp
popf
sbb
push
xor
ret
cmc
and
fldenv
add
rol
dec
adc
sbb
xor
pop
rcr
dec
stos
sub
sub
push
or
lods
dec
mov
mov
std
fimul
scas
xlat
sub
adc
ds
out
mov
ss
imul
inc
fwait
adc
and
xchg
push
jns
fld
iret
jmp
shl
jne
xrelease
scas
adc
imul
xor
jmp
jns
loop
iret
fwait
sub
add
sub
fs
jb
jl
dec
mov
ret
xlat
lahf
inc
enter
rol
mov
dec
imul
push
mov
adc
inc
mov
cmp
retf
pop
xchg
jg
scas
sbb
int
data16
jns
mov
(bad)
mov
or
pop
leave
outs
imul
out
xchg
xor
add
fcmovb
es
xchg
or
push
push
imul
sbb
mov
scas
out
jne
gs
in
or
push
jnp
or
inc
push
mov
jns
imul
or
jbe
call
cmp
hlt
gs
mov
fwait
outs
jp
fimul
inc
test
jno
test
(bad)
push
dec
and
cmps
rol
pop
lea
xchg
shl
mov
cmps
xor
and
stos
sbb
xor
test
jmp
pop
or
mov
ins
jmp
scas
into
fs
sar
push
fstp
cli
cld
loop
pop
out
dec
sbb
std
jecxz
cli
vcomisd
iret
mov
mov
pop
and
adc
hlt
pop
xchg
cli
popa
fwait
fwait
xor
push
stos
in
inc
js
fnstenv
cmp
dec
cmp
push
jl
jnp
mov
mov
or
ins
cmp
sbb
test
jo
aaa
sub
pop
pushf
xchg
out
enter
xchg
pop
pop
pop
mov
inc
and
out
push
cmp
inc
push
pop
xchg
cld
mov
scas
cmps
jb
lods
mov
and
enter
ret
mov
loopne
sub
push
sub
push
xchg
test
loop
lods
dec
cdq
fild
mov
imul
jl
jecxz
ds
sbb
aam
push
retf
adc
push
adc
push
call
pop
daa
mov
jo
or
inc
push
frstor
push
jp
inc
imul
jne
mov
lods
ficom
push
pop
inc
xor
xchg
jmp
ret
(bad)
mov
pop
fnstsw
fld
fs
mov
add
scas
xchg
inc
dec
pop
ret
jns
jmp
pop
mov
pop
add
inc
ja
cmp
into
pop
or
xchg
or
lock
add
leave
cmps
ret
out
jg
sar
mov
ror
test
mov
and
inc
sti
repnz
and
test
sub
jmp
mov
hlt
lods
or
hlt
(bad)
call
push
sub
xchg
fsubr
test
inc
xor
into
cmp
sbb
aad
fsub
pop
add
or
pop
cdq
sbb
test
sbb
test
xor
jmp
movs
mov
or
ret
bound
jecxz
in
sub
inc
movs
cmp
adc
mov
cvttps2pi
dec
adc
mov
push
leave
or
rol
inc
cmps
push
mov
pusha
lock
jne
stos
xchg
xchg
mov
leave
popf
sub
or
ins
pop
fs
fstp
addr16
cs
jecxz
in
mov
daa
movs
cmp
jne
aam
fdivr
mov
pushf
fist
fnsave
outs
inc
sub
xchg
or
cmp
cmp
cmp
and
shl
adc
aas
push
je
ins
pop
test
pop
ret
outs
in
test
inc
inc
xchg
add
mov
mov
jns
aam
push
inc
popf
(bad)
jmp
popf
lods
jecxz
sbb
mov
lea
jns
loop
call
jmp
push
test
jmp
jo
mov
mov
jecxz
(bad)
xor
(bad)
int3
xchg
fsubr
aam
adc
fimul
or
jl
fwait
test
cmc
and
daa
les
lea
(bad)
mov
int
fcomip
inc
sub
jbe
xor
inc
sub
mov
out
(bad)
not
xor
sub
sub
test
rcl
(bad)
xor
or
mov
test
xchg
sar
out
fst
mov
cmp
jmp
or
xor
push
imul
dec
push
cli
push
repz
jmp
mov
xor
push
lea
fs
add
add
sub
(bad)
(bad)
dec
test
adc
les
es
jo
inc
lods
mov
mov
fisub
xor
pop
or
push
jmp
mov
ret
call
shl
aaa
xor
imul
push
or
js
mov
fdivr
ds
add
fidivr
adc
add
push
or
sbb
add
mov
out
xchg
cmp
jno
dec
adc
mov
in
sbb
mov
ins
mov
sahf
xor
lea
hlt
aam
xchg
add
cwde
mov
cld
stc
or
mov
mov
scas
or
push
icebp
call
ins
ret
jbe
test
inc
push
mov
jno
pop
leave
(bad)
imul
outs
in
ror
jne
pop
sbb
dec
xlat
xchg
dec
bound
stos
dec
int3
add
sbb
iret
out
out
inc
push
mov
ror
aaa
mov
xor
clc
pusha
fadd
add
add
cmp
shr
not
mov
shr
xor
ret
jb
mov
sti
mov
dec
inc
push
repz
adc
and
addr16
cmp
inc
xchg
mov
jmp
clc
mov
imul
hlt
push
fldcw
inc
mov
pop
dec
sub
repz
outs
or
sub
push
mov
pop
push
cdq
pop
ret
dec
mov
test
xor
jp
add
call
jne
into
clc
mov
call
cmp
mov
sub
sbb
out
addr16
pop
adc
das
and
jge
repz
sub
push
ja
push
mov
jne
cmp
neg
sti
ror
aas
enter
cdq
rcl
dec
sub
sahf
cmp
dec
pushf
outs
inc
sbb
movs
mov
lock
out
mov
outs
test
cwde
mov
xor
mov
xor
dec
sub
add
retf
(bad)
int
push
and
lock
jae
hlt
adc
xor
aas
mov
in
push
mov
fdivr
inc
push
out
fisubr
and
cmp
icebp
mov
and
ss
ret
dec
pop
outs
adc
(bad)
dec
mov
ins
mov
dec
mov
fcmovb
dec
mov
test
les
into
lock
xchg
shr
test
or
mov
mov
inc
inc
add
mov
fmulp
jecxz
and
test
in
push
es
pop
sbb
fild
dec
shl
retf
rol
dec
hlt
loope
pusha
sahf
mov
dec
pop
daa
cmp
push
and
iret
push
sub
xor
pop
xchg
cmp
xchg
loop
mov
repnz
div
xor
(bad)
push
xchg
xor
inc
das
and
leave
scas
mov
dec
lods
sar
push
pushf
out
jo
mov
loop
or
jae
(bad)
inc
pop
push
movs
movs
mov
out
adc
pop
sbb
lods
jg
aad
add
sub
push
push
fisubr
and
loope
sub
pusha
push
inc
mov
call
adc
ja
mov
mov
dec
movs
pop
jg
daa
mov
daa
cmp
pop
xor
mov
xchg
inc
push
mov
cdq
rcl
xchg
scas
inc
loope
push
test
lods
push
retf
pop
cld
aas
jmp
dec
rcr
or
inc
lock
mov
loope
cmp
jmp
or
or
and
and
inc
js
push
in
push
jns
and
loope
push
push
jmp
dec
xor
repnz
call
mov
xlat
push
cmps
pop
test
out
retf
enter
repnz
or
xor
cmp
inc
add
and
clc
pop
arpl
pop
rcr
jae
pusha
in
push
dec
test
jge
dec
inc
xchg
lock
mov
push
xchg
loope
test
ja
push
out
inc
or
fisttp
icebp
xor
push
adc
or
mov
xchg
or
retf
xchg
inc
ss
push
cmps
fiadd
mov
pop
pop
xchg
add
outs
test
dec
fldenv
jo
rcl
dec
sahf
and
loopne
push
pop
fwait
outs
sub
retf
repnz
mov
outs
mov
hlt
ss
inc
dec
pop
inc
jl
dec
xchg
mov
sbb
lea
mov
mov
sahf
loop
or
cld
xchg
in
cwde
pushf
sub
mov
arpl
in
inc
in
nop
inc
icebp
test
leave
cmps
(bad)
push
push
cmp
test
js
jbe
ss
aaa
jo
movs
adc
xchg
ins
fwait
or
jge
mov
jecxz
mov
push
mov
or
jl
sbb
xchg
push
and
int3
xor
stos
sbb
dec
add
add
lahf
mov
sbb
and
aad
push
(bad)
jno
in
mov
ror
cli
je
jno
dec
rcl
and
or
mov
dec
push
int
pop
mov
and
mov
add
iret
cmp
xchg
(bad)
out
xchg
adc
popa
ret
cmp
repnz
xor
inc
inc
test
call
loop
das
cdq
aaa
adc
fidiv
jns
pop
xchg
ds
and
xor
dec
fnsave
adc
pop
pop
adc
cmp
ss
jb
cld
push
inc
hlt
aad
test
jnp
gs
fstp
(bad)
fst
xor
cmps
xchg
adc
cmp
(bad)
push
mov
xor
inc
lock
add
xchg
fstp
mov
push
js
and
es
dec
int
sub
push
dec
mov
push
enter
jmp
pop
sahf
js
inc
rol
mov
and
daa
je
data16
test
iret
(bad)
or
scas
(bad)
mov
cld
inc
clc
popa
adc
(bad)
pop
and
jns
sbb
add
adc
xor
icebp
std
jge
xchg
adc
lods
jmp
pop
adc
push
lds
pop
outs
push
lock
inc
add
in
fwait
sti
(bad)
(bad)
cmp
cmp
rol
sub
and
cmp
sub
push
mov
jg
imul
test
inc
xchg
mov
mov
fwait
rol
sub
sub
shl
in
and
xchg
dec
pusha
pop
add
cmps
gs
vmovntdq
inc
ss
dec
push
retf
adc
xor
bnd
ja
pop
leave
rcr
retf
icebp
loope
pusha
dec
xor
cli
cmp
mov
xor
sub
pop
int3
adc
jg
rcl
push
call
(bad)
ficom
movs
push
sub
and
scas
dec
in
je
movs
(bad)
and
jmp
mov
psubsw
dec
je
mov
arpl
cwde
lahf
mov
xchg
out
in
push
ja
dec
(bad)
cmc
sub
mov
sub
clc
not
repnz
imul
inc
xchg
aam
jns
jle
sub
mov
adc
addr16
push
mov
in
xor
rsqrtps
sub
mov
shl
xchg
gs
push
pop
dec
adc
cmps
inc
adc
inc
out
push
cwde
jl
pop
ins
jmp
fwait
mov
fwait
xchg
and
(bad)
push
cdq
adc
out
(bad)
scas
pop
aaa
sub
and
push
lock
sbb
call
call
mov
ret
ins
dec
(bad)
cmc
mov
shl
ins
mov
ss
into
or
iret
leave
aas
sbb
cmps
aaa
lock
xlat
pop
sbb
ins
in
pop
push
rcr
ins
mov
(bad)
adc
hlt
and
and
dec
cdq
jecxz
in
scas
pop
cmp
sbb
xor
lock
sahf
ins
and
int
mov
pop
nop
push
pushf
lods
xchg
imul
inc
and
mov
dec
std
jnp
pop
sub
dec
pop
pop
xor
leave
and
dec
jmp
pop
aas
xchg
or
loope
inc
push
inc
add
sar
xor
test
daa
sub
dec
sahf
addr16
test
popf
inc
ins
outs
ins
mov
pusha
sub
lahf
add
call
inc
add
movs
jg
cs
mov
dec
data16
push
jecxz
sub
stc
cmp
adc
into
push
xchg
xchg
add
stos
cmp
stos
and
xor
and
push
adc
dec
imul
and
xor
cmp
loope
clc
and
adc
push
push
out
dec
sbb
out
dec
es
push
bound
mov
mov
mov
sub
(bad)
call
sbb
cmc
ja
xor
pushf
outs
std
xchg
in
fs
stos
dec
mov
jecxz
inc
repnz
inc
aaa
rcr
shl
nop
add
movs
stos
xchg
pop
jmp
xchg
sbb
dec
std
dec
out
movs
movs
pop
ins
(bad)
jg
mov
xor
out
jb
or
popf
sbb
aad
cmp
mov
(bad)
(bad)
sub
xchg
std
mov
push
call
jecxz
test
fcmovne
xchg
and
cmp
mov
leave
sub
mov
or
mov
imul
loopne
fs
pop
pop
push
pushf
xchg
sahf
aaa
mov
push
jg
sub
cmp
sub
inc
addr16
or
jmp
mov
jns
dec
xchg
fdivr
repnz
mov
jnp
(bad)
inc
dec
mov
das
push
xchg
in
adc
pop
inc
mov
lds
add
icebp
jp
(bad)
dec
sbb
pushf
outs
out
dec
arpl
sti
jmp
test
mov
push
out
add
lahf
(bad)
pusha
(bad)
arpl
cdq
lods
add
sub
dec
sti
xchg
(bad)
xlat
(bad)
(bad)
xor
call
loopne
icebp
jo
or
cli
sub
jl
out
daa
lods
add
das
and
sub
or
xchg
and
in
or
adc
xor
clc
add
or
sub
adc
(bad)
sub
mov
adc
ins
ret
ret
jmp
or
int3
repz
sahf
scas
dec
in
cmp
mov
lods
cmp
clc
popf
xor
out
xchg
clc
mov
cmp
movs
mov
inc
sbb
cmps
ret
bound
push
push
cmp
test
cmp
stos
lahf
test
popf
loopne
popf
iret
jbe
or
ins
xor
jno
movs
aam
xchg
clc
adc
(bad)
pop
and
repz
push
mov
mov
in
push
jg
pop
adc
add
nop
adc
es
sbb
jb
pop
sub
ins
xchg
xchg
test
(bad)
jno
mov
neg
mov
das
cmp
dec
ficom
fcomip
jmp
jbe
add
mov
xor
fcmovbe
adc
call
mov
call
cld
sub
mov
stos
jle
mov
retf
jle
push
and
and
dec
int3
and
shr
lock
mov
push
jb
mov
pop
mov
xchg
xlat
inc
out
leave
lock
xchg
dec
xor
ins
fild
sbb
fcom
stos
pop
dec
shl
icebp
outs
(bad)
mov
push
scas
(bad)
std
retf
inc
in
repnz
jno
jle
fcomp
adc
std
fwait
add
mov
dec
lods
xchg
pop
jg
push
inc
fstp
ins
scas
mov
arpl
sub
stos
daa
jg
sti
lds
das
aad
repz
jmp
mov
pop
and
or
sub
cmp
pop
add
pop
sub
inc
std
jmp
sti
push
aas
popa
push
pop
pusha
fdivr
pop
sbb
push
jae
in
js
aam
and
clc
pop
dec
add
imul
push
outs
outs
outs
push
lods
pusha
mov
daa
stc
xchg
loope
xchg
ins
mov
mov
sbb
mov
aam
adc
cmps
mov
pop
xor
(bad)
mov
inc
pop
pop
or
xor
js
les
sub
add
inc
lea
inc
add
out
int3
cli
outs
cld
push
shl
dec
push
call
xor
mov
sbb
stos
loop
cmc
inc
mov
jmp
(bad)
out
cmps
jnp
or
xlat
ficomp
ficom
pop
dec
aad
pop
mov
imul
fisubr
mov
cmps
xor
in
mov
loopne
cmps
sbb
push
stos
hlt
push
xchg
jbe
arpl
xchg
test
pushf
rep
(bad)
push
xchg
push
hlt
out
mov
clc
push
sub
add
je
js
mov
xchg
cmp
push
mov
lods
sahf
and
jns
xchg
adc
pushf
mov
enter
pop
sub
es
pop
scas
and
cmc
movs
xor
mov
repnz
and
fdiv
mov
sahf
inc
je
or
fsubr
push
(bad)
jbe
inc
cmps
mov
mov
fidivr
pop
cmp
stos
xor
mov
pop
push
adc
xchg
leave
pop
sar
sbb
cdq
retf
cmc
xor
push
or
ds
jmp
hlt
mov
jl
mov
lods
das
in
xchg
inc
pop
cdq
lahf
mov
loopne
(bad)
cld
jle
sbb
cmps
push
lar
jb
mov
into
mov
test
repnz
jo
in
mov
cmp
or
add
or
push
(bad)
popf
xor
stos
fcom
call
popf
sbb
mov
imul
stos
sub
sahf
imul
xor
idiv
cmp
dec
clc
or
pop
paddb
ins
ss
jle
add
rol
fs
add
rcr
jle
aas
xchg
lods
(bad)
xchg
jge
sbb
fs
adc
lahf
push
jle
xlat
mov
dec
outs
imul
into
push
dec
rol
fisub
aad
mov
mov
cwde
aam
inc
dec
push
adc
dec
mov
stc
rcr
int3
mov
mov
mov
test
xor
outs
pop
sbb
out
movs
lock
mov
add
mov
xchg
cmp
aaa
leave
das
mov
jl
pop
in
leave
fwait
popa
retf
addr16
jmp
and
xor
jmp
and
and
mov
in
cmps
retf
movs
fld
sahf
xchg
ins
pop
inc
dec
cmps
rcr
mov
mov
(bad)
sub
xor
push
push
ja
mov
ret
int
cmps
test
xor
push
jl
and
cdq
in
pop
rol
das
imul
retf
mov
shr
jecxz
and
ret
cli
inc
(bad)
enter
jle
push
mov
xor
xor
jns
punpckhwd
mov
jb
mov
dec
cs
pop
mov
pop
dec
pop
mov
out
cmp
xchg
out
lods
cmp
in
ror
into
xchg
es
(bad)
cmc
adc
mov
aaa
sub
pop
push
pop
pop
adc
ret
add
dec
pop
lods
and
in
xchg
ss
dec
mov
xor
imul
xchg
add
push
leave
out
jg
jecxz
jmp
js
iret
aas
adc
loopne
imul
inc
xlat
mov
jmp
push
sbb
mul
fisub
dec
gs
jne
mov
xchg
mov
lods
repz
test
push
je
ret
stos
aad
push
cmp
mov
cdq
push
pop
cld
fistp
enter
adc
sub
cmps
fist
pop
pushf
inc
cmps
ret
jmp
dec
test
push
cmp
(bad)
cli
jae
mul
sub
dec
imul
(bad)
fsubr
std
jl
js
mov
adc
int
fsubr
movs
xor
shl
or
pop
pop
mov
push
push
push
clc
scas
pop
mov
in
inc
(bad)
into
ret
jns
fist
push
pop
xchg
test
repz
mov
ror
sbb
(bad)
fcom
sub
sub
fidiv
mov
add
jae
push
popf
push
call
cmps
mov
or
push
mov
xchg
pop
mov
jne
mov
retf
push
xchg
jnp
fmul
popa
mov
jp
call
push
pusha
mov
xchg
loope
lock
scas
dec
fstp
addr16
movs
or
in
pushf
enter
out
mov
cmp
adc
ret
xchg
jb
in
lods
nop
pop
lock
pusha
out
int3
cmps
or
fmul
cmc
fadd
mov
ret
pusha
(bad)
xchg
imul
test
clc
mov
mov
lods
mov
and
lods
or
dec
adc
mov
xchg
and
iret
mov
jg
in
(bad)
push
inc
fnstsw
nop
xor
jno
bound
lea
arpl
movs
jge
test
aam
out
ins
sub
dec
adc
add
iret
push
sub
mov
sub
out
mov
mov
je
jns
inc
jmp
and
inc
sbb
movs
outs
adc
leave
mov
rcr
(bad)
sti
stc
popf
aam
inc
nop
or
icebp
rol
movs
cmp
pop
mov
inc
push
data16
aam
fdivr
repz
repnz
mov
fidivr
dec
lea
sub
mov
imul
push
fild
out
test
shl
js
js
test
(bad)
lock
mov
in
dec
push
jno
jo
jmp
cld
movs
stc
jle
in
jmp
jl
jno
in
adc
repnz
cs
inc
cmp
in
sub
jp
(bad)
jmp
es
push
mov
call
push
inc
jae
(bad)
sbb
and
ret
jle
mul
mov
and
and
jg
shl
popa
call
outs
mov
jno
dec
fs
out
addr16
push
cld
loop
xchg
daa
fisttp
clc
test
adc
push
dec
cmps
ret
mov
mov
fs
pop
dec
mov
dec
inc
mov
cwde
add
mov
aam
sbb
push
(bad)
es
or
arpl
stos
inc
or
dec
mov
jecxz
mov
pop
mov
hlt
jp
sub
icebp
mov
push
(bad)
push
inc
push
adc
xor
pop
push
das
es
mov
xchg
push
adc
add
jp
mov
mov
movs
or
pop
mov
adc
test
retf
into
mov
sub
or
push
mov
push
mov
mov
push
movs
lods
mov
stc
ins
(bad)
mov
pop
xchg
test
es
sbb
in
mov
push
gs
cmp
jmp
neg
push
popa
sbb
ja
push
dec
cwde
sbb
retf
xor
mov
or
fcomp
cs
bound
fidiv
mov
loopne
rol
rcl
por
xor
test
xchg
out
fiadd
jge
add
sahf
out
je
cld
leave
in
cdq
adc
inc
jp
dec
sub
and
mov
dec
ja
pop
push
mov
add
shl
(bad)
mov
call
(bad)
mov
jb
jmp
ins
ins
loop
clc
xor
in
test
sub
inc
xor
mov
(bad)
sub
push
mov
(bad)
int3
(bad)
je
push
dec
shr
mov
mov
fadd
add
lea
aas
sub
inc
add
sub
push
lods
(bad)
mov
xor
and
jae
inc
jp
lahf
pop
sub
push
test
add
sub
retf
mov
or
call
or
push
aas
repnz
mov
add
dec
pop
outs
retf
test
inc
mov
push
mov
stos
jns
inc
retf
dec
scas
adc
mov
test
sub
ins
dec
jmp
mov
test
xchg
mov
xchg
ins
jo
clc
xchg
sub
das
xchg
jge
les
inc
dec
mov
dec
cmp
fadd
cmp
jns
icebp
pop
dec
retf
sub
cmps
xchg
lds
(bad)
in
sbb
out
mov
jo
push
or
(bad)
jmp
push
xor
sub
mov
push
stos
xlat
fcom
hlt
ds
push
xchg
jno
mov
adc
pop
cmp
and
xor
jg
adc
adc
sar
jb
ja
arpl
cmp
sub
inc
int3
jle
adc
mov
and
inc
sbb
(bad)
cld
inc
repz
fs
sub
cmp
ret
call
jae
ret
sub
shl
mov
jmp
mov
inc
fdiv
stc
shl
xchg
mov
sbb
dec
dec
xor
and
pusha
pop
jle
in
ss
pop
dec
enter
sbb
outs
pusha
cmp
mov
xchg
ins
jno
lods
fcomp
pop
ins
jecxz
ds
push
ss
hlt
mov
test
cmp
push
push
pop
cmps
mov
dec
sbb
pop
xchg
or
ds
inc
mov
adc
scas
push
(bad)
rcr
(bad)
sub
push
xor
ja
gs
jns
or
fwait
add
mov
in
bound
sbb
enter
mov
jmp
repz
or
jb
mov
sahf
inc
pop
por
stos
and
imul
ret
sbb
ja
mov
in
or
cmp
push
call
scas
xchg
xor
push
dec
push
out
and
add
fwait
pop
push
out
mov
mov
add
js
add
fsub
mov
jl
xor
rol
leave
shr
pop
(bad)
out
and
ja
retf
sar
xlat
hlt
invd
imul
sub
jecxz
pop
mov
and
push
add
xchg
call
xchg
ror
mov
inc
popf
xchg
mov
push
mov
push
xchg
les
rcl
ds
mov
xlat
add
adc
xor
cmp
inc
(bad)
push
repnz
cmp
push
pop
aam
cmp
jae
sbb
add
out
scas
mov
ja
cmps
jmp
xchg
aam
mov
or
retf
xchg
bound
jnp
(bad)
sub
or
test
sub
ret
and
shr
lea
dec
xchg
mov
mov
das
fidiv
dec
stos
inc
jecxz
cdq
sbb
adc
push
jnp
cmp
xor
and
bound
push
push
int
fs
aaa
xor
xchg
inc
pop
movs
pop
fs
lods
fcmovnb
out
loope
imul
mov
lds
cmc
inc
lahf
cmp
in
cmp
shl
xor
mov
and
dec
sbb
cmc
test
sub
mov
push
out
aas
or
pop
push
xchg
mov
das
retf
aad
push
and
sub
popf
mov
add
and
outs
je
jnp
mov
jnp
ret
rcr
jno
and
inc
cmpps
xor
test
and
push
pop
mov
test
bound
retf
outs
leave
pop
ror
mov
ja
dec
pop
rol
sbb
fstp
fstp
jecxz
lahf
mov
(bad)
cdq
and
in
lock
pop
sti
jecxz
adc
fsub
xchg
or
outs
fsub
add
xchg
imul
test
call
retf
daa
das
test
rol
inc
sbb
outs
cli
xchg
dec
in
mov
jl
fwait
(bad)
in
inc
loope
les
(bad)
int3
mov
ins
lahf
and
xor
imul
fidivr
ins
mov
jo
fadd
mov
int
daa
pop
xchg
pop
and
sbb
(bad)
in
adc
rcr
cmp
mov
out
je
loope
mov
aad
loope
jge
sar
pop
add
mov
pop
cmp
or
xchg
cwde
out
dec
jg
add
lock
add
sti
adc
jb
popf
pop
inc
push
ins
data16
mov
xor
imul
loope
add
or
adc
fisttp
pop
adc
add
enter
mov
dec
lds
or
xchg
in
xlat
fsub
mov
loopne
movs
fdiv
sti
mov
loopne
push
movs
aas
sub
int3
add
mov
jp
sbb
push
loope
jae
and
scas
sbb
scas
repz
int3
and
jg
aam
aad
leave
data16
(bad)
enter
outs
fmul
add
icebp
test
xor
xchg
fild
add
cmp
mov
push
pop
test
lahf
sti
ja
pop
fmul
jmp
push
movs
jmp
sbb
popw
lahf
cmp
mov
add
mov
mov
pop
idiv
cmc
retf
mov
into
jge
fdiv
mov
xchg
retf
push
push
test
push
pop
push
mov
xchg
dec
movs
ss
add
dec
test
xchg
clc
pusha
xchg
jmp
cmps
mov
imul
in
mov
movs
cs
cmps
in
dec
sbb
push
mov
lods
fdiv
(bad)
pop
dec
fs
sahf
lods
hlt
mov
jg
xor
add
adc
sub
pushf
jo
outs
push
fwait
repnz
(bad)
nop
gs
dec
popa
pop
dec
aad
or
mov
push
or
jg
mov
pop
mov
retf
push
mov
ins
push
cmp
mov
popf
sbb
aam
cmp
xor
lds
jmp
xor
xchg
push
aam
mov
jnp
adc
lock
retf
stos
or
xchg
pop
out
cmp
sti
push
jl
adc
(bad)
ds
imul
imul
stos
pushf
in
btc
and
xchg
adc
lahf
call
loope
out
out
sub
scas
push
jae
add
retf
lods
pushf
cmps
mov
sub
cmp
cmps
mov
data16
gs
in
mov
or
popa
or
loope
pusha
lds
es
and
aas
mov
jmp
adc
lea
sahf
pop
sti
cmp
shl
mov
mov
xchg
retf
push
adc
cdq
mov
mov
std
mov
mov
add
inc
push
imul
mov
or
cmp
xlat
lods
outs
xchg
xchg
xor
pop
jae
mov
loop
push
and
pop
inc
pop
lock
mov
xchg
push
inc
dec
fwait
xor
dec
mov
ret
mov
sbb
xor
ins
sub
jo
shl
cmps
sub
in
or
push
stos
cs
xchg
(bad)
sbb
imul
daa
fnstsw
dec
fldenv
rol
sub
mov
adc
inc
cmc
imul
mov
sbb
test
test
xor
dec
icebp
rcr
or
xor
sub
or
mov
int3
jmp
mov
in
lea
out
enter
pusha
xor
jns
sbb
mov
xchg
retf
pop
jl
jb
sbb
jns
inc
lods
into
fdiv
gs
sub
mov
push
sub
jnp
frstor
xchg
jge
(bad)
fcmovnu
retf
jmp
leave
adc
xor
jno
xor
push
cmp
idiv
mov
sub
pop
das
out
es
ja
mov
pop
lods
or
or
nop
call
mov
aaa
cmps
icebp
addr16
or
rol
movs
jns
xchg
cmp
call
mov
push
shl
or
adc
(bad)
pop
ss
mov
push
ins
sbb
mov
dec
mov
repnz
mov
sbb
hlt
mov
pushf
xor
push
repz
cmp
pop
sar
les
push
pop
xchg
scas
clc
xor
cwde
rcl
and
sub
and
xchg
mov
js
mov
pushf
bound
adc
xchg
cld
xor
xchg
add
cmp
das
cld
cmp
lea
mov
pop
ret
fdiv
icebp
mov
mov
pop
lods
jns
or
call
retf
cmp
lods
jmp
mul
xor
pop
and
mov
or
imul
mov
pop
scas
dec
mov
loopne
outs
out
fidiv
push
adc
aas
ins
scas
bound
nop
mov
mov
dec
mov
push
mov
pop
bound
aas
leave
inc
unpcklps
and
sub
fmul
nop
push
jb
(bad)
fld
stc
stos
rcl
add
cmps
add
mov
(bad)
out
jne
xchg
jno
fucomp
mov
adc
inc
fiadd
sub
xchg
adc
pop
mov
ret
ror
add
out
push
ja
not
movs
cmp
das
jmp
push
xchg
pop
mov
jb
cmp
inc
jl
fcom
inc
lods
rcl
inc
fist
push
lods
mov
mul
into
aaa
push
cwde
jge
inc
out
xchg
outs
shl
jge
or
ret
mov
mov
mov
xor
xchg
lock
sub
cmp
mov
vpmulhw
inc
cmp
pop
push
outs
fs
xchg
xchg
ret
call
and
nop
cmp
mov
or
cmc
sbb
xchg
push
loop
pop
fdivr
inc
hlt
xor
inc
jb
inc
and
(bad)
in
push
sub
jmp
xor
mov
fwait
mov
push
mov
mov
test
jne
jne
xchg
dec
sbb
out
call
std
pop
bound
push
je
adc
mov
cmp
outs
jns
push
ds
xchg
aas
sub
xor
(bad)
rcl
and
mov
adc
ins
dec
stos
sbb
(bad)
int3
jmp
sbb
inc
enter
push
(bad)
iret
ja
cdq
adc
add
and
dec
or
mov
jecxz
ror
pop
xchg
pop
cli
or
stos
mov
pop
repnz
fisub
dec
(bad)
pop
test
pop
adc
sbb
xor
out
clc
iret
call
mov
xor
popa
sbb
or
xor
(bad)
mov
mov
neg
push
cmp
xor
push
and
mov
push
icebp
and
xchg
cmp
inc
jb
inc
fdiv
push
xor
mov
fst
or
idiv
scas
cs
mov
pop
loopne
add
sub
adc
add
pop
aaa
push
mov
repz
or
push
jl
push
icebp
movs
sbb
cmp
jo
jg
(bad)
in
(bad)
je
xor
imul
bound
fldenv
test
sub
push
mov
(bad)
sbb
stc
cdq
mov
rcr
mov
je
stos
push
push
pop
fmul
mov
add
fiadd
(bad)
(bad)
dec
mov
inc
retf
add
ins
push
imul
fild
sub
fstp
in
dec
shr
and
jmp
in
and
mov
out
mov
ins
sti
ror
das
xchg
sbb
inc
shl
add
icebp
cmp
lods
fsub
jbe
imul
dec
sahf
pop
aam
(bad)
pop
cmps
add
push
scas
push
subps
push
jmp
sahf
mov
cmp
les
enter
sbb
aam
sbb
jno
aas
inc
jno
xor
clc
pusha
xchg
inc
test
cwde
add
iret
out
call
jl
sbb
and
xor
aaa
fnstsw
and
cmp
pop
and
push
ror
test
lahf
scas
call
jnp
or
ins
push
inc
cmp
and
pop
shl
pusha
fimul
iret
daa
mov
fsubr
adc
addr16
aaa
sub
add
sub
retf
xor
outs
dec
retf
stc
rcr
sti
mov
inc
jmp
mov
pop
jecxz
and
add
pop
and
dec
adc
ja
inc
add
adc
lock
pop
pop
jb
repz
les
je
ja
stos
jae
dec
fstp
push
mov
mov
xchg
mov
cs
cwde
add
xchg
shr
addr16
mov
jmp
pop
xchg
mov
loopne
sti
out
in
or
lods
or
fild
sbb
inc
mov
sbb
and
xor
out
mov
push
retf
mov
fstp
(bad)
lock
lods
std
jb
hlt
push
leave
cmp
jmp
enter
adc
pop
sbb
retf
jne
lahf
lock
pop
push
xor
jge
aad
cmp
xchg
cmp
push
mov
(bad)
(bad)
jg
(bad)
movs
pop
xchg
inc
mov
mov
mov
xor
adc
mov
in
lahf
adc
and
xor
push
mov
clc
dec
mov
pop
rol
adc
popf
(bad)
xchg
cmc
ss
lds
or
cli
out
dec
retf
mov
jg
lods
test
pop
ret
(bad)
mov
xchg
sub
sbb
jl
jb
loope
jecxz
(bad)
aad
cmps
dec
dec
hlt
mov
mov
mov
inc
das
push
add
mov
jl
or
jne
mov
pop
test
xchg
retf
sub
push
sub
std
not
mov
jl
inc
enter
jle
adc
mov
cdq
fcmovne
retf
cwde
jmp
int3
pop
jns
cwde
inc
inc
and
push
mov
dec
loopne
and
inc
xlat
and
aam
mov
and
or
fild
mov
or
dec
push
call
dec
(bad)
mov
test
rcr
xor
or
inc
or
(bad)
adc
and
xor
push
inc
push
in
jns
cmps
xor
(bad)
sar
in
hlt
pop
scas
or
mov
mov
adc
adc
and
stos
arpl
lea
in
add
(bad)
call
jge
mov
mov
fnstsw
inc
inc
fs
lock
jmp
push
and
adc
arpl
dec
or
stos
adc
outs
data16
fwait
in
push
pop
in
aaa
dec
add
aaa
mov
inc
push
sbb
mov
mov
and
gs
fnsave
inc
add
(bad)
cld
das
dec
mov
pop
jmp
test
test
loope
int
mov
into
fild
or
stos
aad
mov
inc
ret
cmps
sbb
in
adc
pop
or
std
xor
sbb
mov
in
cmc
aam
push
sbb
loope
mov
jecxz
jg
dec
push
inc
xor
cmp
push
push
les
in
or
iret
add
stc
xor
test
mov
(bad)
mov
fidiv
jno
jmp
cmp
(bad)
scas
sub
lea
sbb
xor
dec
adc
xchg
xchg
bound
sbb
shl
mov
mov
aam
dec
sub
pop
pop
cmps
fcmovb
std
cmps
shl
not
mov
fld
cmp
mov
mov
mov
shr
add
pop
addr16
mov
adc
pusha
dec
and
push
xor
rcr
iret
std
call
sahf
jg
jnp
iret
fld
add
jmp
xchg
cmp
jl
jnp
jo
nop
ins
(bad)
test
repz
mov
pop
shr
(bad)
rcr
mov
into
mov
sub
popa
lea
mov
cmps
adc
or
mov
pop
sbb
mov
pop
(bad)
sbb
in
in
pop
mov
fst
sbb
inc
mov
scas
call
(bad)
in
push
jl
mov
or
das
leave
scas
movs
nop
sub
repnz
mov
cmp
xor
mov
push
sub
or
sbb
mov
add
(bad)
scas
mov
(bad)
iret
movs
cmovns
lods
test
add
or
mov
cmp
mov
mov
pop
into
dec
bound
add
sub
adc
pushf
mov
cmps
xchg
pop
mov
stos
repnz
push
mov
pop
adc
in
push
mov
sub
xlat
out
sub
test
add
icebp
inc
inc
xchg
push
fnsave
push
push
into
(bad)
pop
scas
and
movs
stc
adc
inc
int3
mov
push
mov
std
arpl
stc
addr16
push
imul
repnz
sbb
mov
cmp
imul
push
mov
cmovns
inc
add
mov
sub
and
pop
clc
dec
std
xor
sub
sti
adc
jnp
cdq
neg
pop
dec
add
sbb
adc
stc
mov
fdivr
hlt
jle
fwait
sub
ss
jnp
cmp
mov
clc
aaa
xor
mov
pop
(bad)
leave
jne
pop
test
jnp
stos
jbe
adc
dec
jmp
fs
(bad)
pop
ret
rcl
xchg
ins
and
dec
push
and
pushf
lahf
sub
pop
push
call
cmps
and
and
fs
cmc
dec
fmul
mov
(bad)
pop
push
sahf
out
fldcw
xchg
push
mov
out
clc
cmps
ret
mov
aaa
out
pop
add
sbb
aas
pop
xor
push
sar
je
mov
aam
fisub
call
sbb
mov
in
pop
add
and
movs
fcmovnu
sub
out
mov
and
mov
bound
mov
rol
push
mov
cmp
push
pop
stos
test
pop
xchg
sub
jae
xchg
add
xchg
mov
or
aaa
xor
xchg
adc
sub
and
or
jg
add
les
ins
mov
push
mov
out
xchg
cmps
mov
cmp
inc
int3
int3
ins
popf
xchg
cmps
imul
xor
pusha
mov
mov
(bad)
in
push
in
movs
fadd
into
inc
push
xor
enter
jl
jno
inc
xchg
int
(bad)
xor
(bad)
push
daa
jnp
es
jae
fadd
aam
jge
pop
jne
mov
cdq
xchg
test
dec
mov
fmul
(bad)
cmp
fisttp
mov
sahf
sti
mov
out
(bad)
mov
test
scas
mov
repz
aad
(bad)
nop
inc
cmps
in
into
xor
rol
nop
daa
das
addr16
inc
test
js
cli
jecxz
cmp
add
jle
jne
cmp
ins
lea
xchg
stos
fidivr
jmp
pop
retf
js
cdq
and
les
fidivr
or
dec
fldln2
pop
pop
inc
dec
mov
ss
out
jo
sub
in
dec
imul
aaa
mov
test
enter
aam
test
rol
pop
int
adc
fwait
arpl
pop
mov
or
retf
fisttp
data16
xlat
test
in
mov
jne
std
pop
xor
add
mov
aam
add
(bad)
mov
push
or
or
sub
or
jecxz
cmp
cmp
je
mov
out
or
pop
xchg
cmc
call
xor
inc
mov
into
add
ret
movs
call
jg
clc
mov
fmulp
add
jmp
imul
movs
fist
push
out
inc
in
sub
fsub
cmp
std
rol
push
out
movs
loop
xchg
adc
dec
shl
cmp
push
sahf
outs
mov
test
(bad)
push
push
int3
jmp
adc
fcomp
rcr
xor
sahf
jge
clc
pop
test
ret
pop
cli
jmp
movs
xor
pop
push
inc
fsubr
jecxz
fld
pop
in
int3
sub
movs
mov
div
nop
or
xor
mov
add
and
mov
jg
clc
in
cld
mov
jnp
idiv
mov
inc
cmp
cld
adc
addr16
ret
icebp
dec
or
retf
clc
shl
ret
dec
jno
add
add
pop
mov
xchg
cmc
mov
mov
xchg
outs
movs
test
push
(bad)
pop
test
out
out
stc
push
cmp
fiadd
sub
out
enter
mov
fldenv
out
(bad)
icebp
gs
fwait
mov
push
jmp
out
das
cli
mov
mov
int
hlt
sti
out
in
sub
xor
mov
pop
mov
push
fisttp
(bad)
jle
adc
cmp
mov
ret
std
test
mov
stc
dec
call
pop
jecxz
pop
sar
test
mov
std
loopne
adc
aaa
out
pop
inc
lea
into
enter
adc
mov
pop
jo
sar
call
inc
cmp
enter
jnp
inc
cwde
div
sub
jmp
inc
in
pop
retf
call
add
xchg
xor
mov
arpl
rcr
aas
mov
mov
mov
mov
inc
fmul
mov
repz
mov
into
jb
pusha
scas
enter
mov
jl
or
push
ja
daa
lods
aad
outs
int
and
addr16
test
add
xchg
(bad)
xchg
or
jmp
xlat
mov
out
retf
inc
cmp
xchg
into
cmp
lds
repnz
mov
aas
and
mov
stc
lods
adc
push
jo
fld
push
lea
jge
mov
lds
or
mov
push
xor
ret
mov
clc
scas
dec
inc
push
fbstp
push
mov
xor
clc
inc
fstp
xchg
push
sar
in
mov
cli
inc
adc
stc
push
cmp
pop
mov
cmc
cli
or
shl
mov
dec
jb
sbb
sahf
pop
cmp
pop
movs
aam
push
lds
aam
push
pop
add
mov
icebp
pop
mov
iret
pop
and
sub
jg
clc
mov
dec
shl
pop
pop
jnp
adc
std
add
or
fistp
aaa
sub
mov
mov
(bad)
in
dec
fnstcw
mov
push
inc
test
sub
cli
jmp
mov
out
out
pop
pop
fldenv
dec
xchg
push
xor
icebp
movs
rol
sbb
js
into
iret
test
jne
lock
movs
jle
or
dec
push
movs
cs
outs
mov
loopne
out
scas
sub
leave
movs
scas
pop
mov
and
movs
jp
in
lods
adc
inc
sub
add
loop
jno
hlt
mov
inc
retf
add
shl
cmp
cmc
dec
xchg
cmp
sbb
outs
out
pusha
fisub
and
mov
inc
addr16
push
test
mov
jae
movs
sub
mov
rcl
inc
mov
push
and
aas
xchg
xchg
les
or
jp
xlat
adc
adc
xor
or
vmovapd
aas
imul
stos
test
test
lea
inc
in
xchg
jb
sbb
das
iret
jge
mov
mov
stos
xor
inc
sub
inc
fdivr
popf
shl
fwait
jmp
adc
cmp
sar
xchg
add
jae
jg
ds
mov
jmp
and
xchg
add
ins
ins
push
pop
jg
cdq
mov
sub
dec
sbb
mov
mov
push
or
cmp
xchg
xor
daa
add
jbe
movs
and
xor
les
inc
enter
addr16
pop
or
call
cmp
sub
fdiv
pop
out
add
ret
imul
cwde
adc
cli
add
dec
in
movs
movs
push
dec
jmp
mov
pop
or
sbb
jae
cmp
stos
not
dec
mov
imul
shl
test
sub
gs
test
std
inc
push
cdq
pop
test
and
dec
xlat
jmp
sti
les
shr
xchg
xor
dec
(bad)
std
xchg
inc
sbb
add
jle
movs
(bad)
movs
ret
test
dec
mov
add
adc
jne
fiadd
xchg
je
pop
int
push
leave
(bad)
add
inc
or
rcr
leave
pop
dec
sub
push
gs
pop
sti
mov
shr
fidivr
mov
pop
ret
test
and
repnz
cmc
sbb
cwde
pop
push
les
sub
dec
nop
ins
popf
sub
shl
adc
pop
mov
lds
pop
cmp
popa
cdq
push
in
mov
fidivr
pop
lods
retf
adc
mov
mov
dec
mov
jns
mov
fwait
mov
xor
js
adc
popf
xchg
fs
adc
mov
cli
scas
adc
dec
popa
pop
dec
enter
inc
mov
dec
fiadd
cmc
sub
(bad)
fcom
out
ror
(bad)
and
data16
int3
lea
test
movs
xor
loopne
retf
add
push
mov
xchg
adc
(bad)
cmp
pushf
mov
fs
out
xor
(bad)
iret
mov
jae
inc
mov
fnstcw
lgs
mov
test
or
mov
inc
pop
xchg
push
sbb
fldcw
inc
(bad)
ins
dec
and
(bad)
test
fs
jmp
mov
loopne
xor
pop
inc
sub
push
cmp
push
sbb
push
sub
sbb
aad
add
enter
xchg
or
sub
xchg
mov
cmps
mov
mov
push
inc
dec
xchg
or
inc
mov
sti
mov
out
jmp
sbb
sahf
mov
xchg
sar
in
and
mov
and
cmp
outs
ss
repnz
pop
scas
mov
add
push
sbb
mov
test
adc
adc
or
jg
mov
xchg
(bad)
xor
daa
(bad)
push
in
loop
push
mov
rol
and
cdq
imul
js
dec
xor
int
sbb
in
retf
jecxz
push
aad
push
add
ret
dec
sbb
lahf
mov
adc
mov
xor
cmp
enter
cmpxchg8b
push
les
in
loop
imul
sahf
clc
jne
mov
mov
arpl
jmp
fwait
cwde
cmp
inc
scas
add
in
into
js
fwait
in
lahf
jns
sbb
dec
and
and
add
lods
mov
sub
lods
out
sahf
mov
sti
mov
dec
dec
jne
mov
pop
or
xor
mov
div
cmps
jbe
inc
jno
sti
add
push
jo
xchg
jbe
xor
mov
fstp
or
addr16
push
lds
inc
and
fnstsw
pop
and
mov
fdivr
ins
shl
jmp
cmp
mov
mov
out
clc
adc
jae
dec
jbe
arpl
push
add
retf
and
in
mov
lods
aad
xchg
int
sub
jns
pop
dec
adc
retf
sub
out
xor
gs
dec
xor
lods
and
inc
jne
into
enter
bsr
aaa
loop
cmps
ror
test
and
mov
ficomp
test
sti
fs
fcomp
add
test
cmp
and
jmp
rcl
out
les
fcomp
es
mov
push
not
fistp
or
and
ins
pop
jle
ret
in
leave
xchg
push
(bad)
pop
jmp
jg
jb
cmp
mov
(bad)
fistp
sti
enter
pop
shr
ja
js
pop
sbb
mov
hlt
test
test
loope
bound
mov
mov
inc
pop
fimul
fdivr
mov
not
into
fldenv
add
inc
mov
ret
or
repnz
cmp
in
jp
xor
sbb
push
xchg
aam
stc
mov
dec
pop
inc
cmp
add
sbb
sbb
pop
jg
jmp
push
mov
mov
adc
jle
adc
cmp
cmp
adc
ins
mov
cmps
loope
(bad)
lea
push
mov
call
jne
jge
(bad)
fs
xor
out
dec
into
pop
jne
in
and
pop
and
div
xchg
js
and
cmp
push
or
loop
fimul
inc
adc
(bad)
pop
push
adc
data16
mov
xor
call
xchg
adc
cwde
test
scas
add
loopne
clc
fld
add
mov
pop
add
inc
loopne
xchg
add
push
and
cmc
mov
and
mov
mov
push
dec
jbe
movs
or
pop
cli
jge
xchg
sub
mov
aas
out
aad
pusha
aam
leave
mov
in
jmp
add
add
jmp
mov
outs
mov
aaa
adc
test
icebp
or
xor
int
fist
rol
out
mov
les
repnz
jmp
repnz
mov
in
in
pop
xchg
or
inc
sub
mov
push
dec
jecxz
mov
mov
mov
xchg
mov
retf
mov
in
sahf
push
cmps
push
push
adc
fsub
pop
sbb
xchg
cmc
scas
mov
sahf
rcl
aam
adc
adc
(bad)
push
jle
xchg
and
lock
cdq
and
mov
ror
lock
mov
dec
mov
push
push
in
mov
not
scas
popa
lea
xor
(bad)
ret
repz
cmps
jne
pop
pop
pushf
cmp
sbb
std
lahf
jnp
aaa
out
dec
fisttp
or
in
xchg
ss
repz
fild
lods
mov
jae
push
pop
loop
pushf
jge
mov
sub
jg
xchg
cmp
ror
jno
pop
push
enter
push
aad
pusha
je
cmps
lods
jnp
cmp
add
inc
xor
jmp
es
ins
cmp
add
xor
stos
pop
add
mov
dec
lds
repz
shl
fs
and
cmp
mov
add
into
mov
fs
js
retf
dec
loope
pop
sub
mov
arpl
dec
lods
inc
outs
xor
adc
lahf
aam
or
push
pop
adc
test
or
ss
mov
jge
or
xchg
dec
sbb
pushf
mov
cmc
popa
dec
pop
push
mov
in
jmp
xchg
mov
ja
inc
jge
clc
mov
mov
retf
shr
arpl
inc
pusha
adc
mov
inc
and
test
sbb
inc
sar
push
mov
cs
out
mov
sub
int
mov
mov
xchg
push
cmp
mov
std
adc
aaa
add
cwde
fnsave
scas
cmovnp
or
shr
xor
mov
ror
jbe
movs
jb
(bad)
mov
jbe
xor
inc
into
jecxz
mov
mov
iret
adc
lods
and
test
shr
adc
dec
les
sub
sbb
aas
cmps
gs
or
jnp
ror
sub
scas
call
jmp
sub
xor
imul
(bad)
js
in
push
inc
movs
leave
adc
arpl
jecxz
stos
test
sbb
inc
cmp
out
aam
sbb
xchg
xor
repnz
clc
pusha
shl
inc
mov
sbb
aad
xlat
je
dec
fcmovbe
in
or
and
and
lods
push
mov
repnz
add
push
add
mov
pop
dec
cmps
in
mov
fcom
test
setae
movs
pop
pop
adc
adc
aaa
and
in
mov
gs
fisttp
scas
xchg
cmp
push
and
dec
pop
frstor
adc
cmp
cld
das
or
pop
cmp
push
stos
int
js
lods
out
jge
into
inc
cmp
add
inc
int3
sub
inc
push
push
mov
mov
cmp
inc
mov
aam
std
test
and
sbb
movzx
jbe
push
or
jp
pusha
sub
scas
mov
data16
pushf
idiv
add
push
out
call
test
xchg
lock
push
out
adc
jo
pushf
out
jbe
and
mov
ja
sbb
fisub
repz
outs
ins
(bad)
jb
outs
daa
lock
add
xor
inc
sahf
out
jb
and
jmp
pop
nop
cmps
inc
pop
out
mov
jbe
bound
fbstp
test
sub
and
repnz
and
or
fist
popf
arpl
sbb
xor
xor
loopne
js
ss
bound
mov
sub
pusha
mov
hlt
ins
movs
je
dec
mov
rol
call
pop
(bad)
or
push
and
lock
add
enter
sub
sbb
jmp
mov
inc
(bad)
fcom
sub
call
xchg
out
outs
pushf
movs
add
(bad)
sti
mov
shl
dec
cmp
or
(bad)
fild
int3
cld
cvtps2pd
mov
lock
jno
retf
repnz
(bad)
sub
imul
adc
cmp
push
in
ficom
jae
sbb
leave
(bad)
popa
in
ja
loopne
jmp
push
aaa
stc
mul
xchg
xchg
jne
ffree
jecxz
arpl
bound
loope
jmp
lahf
adc
mov
neg
pop
mov
dec
int
cs
and
jno
jns
aad
fcom
mov
mul
mov
mov
repnz
in
xor
ss
mov
js
loope
int
je
adc
retf
jg
cdq
and
mov
xchg
into
aas
das
aam
add
jp
mov
cli
sbb
jge
clc
pop
fstp
sub
cli
test
mov
xchg
ror
xor
aaa
jnp
mov
pushf
jp
lds
sar
or
daa
inc
dec
push
jge
test
cs
enter
jle
jp
lds
shl
or
daa
icebp
push
mov
sar
lock
fcom
aaa
inc
cs
jle
test
or
pop
ds
jnp
int3
test
add
pop
sub
pop
sub
movs
dec
aam
mov
not
sub
mov
add
std
fnstenv
aam
rol
bound
aad
out
and
dec
stos
lock
or
adc
sbb
add
jge
jecxz
shr
mov
add
sub
mov
int3
pop
sbb
xchg
sub
adc
xor
add
xor
ds
or
les
cmp
gs
sub
inc
cmp
cmp
xchg
jmp
repnz
push
xchg
push
cmc
jmp
call
pop
cmps
ss
cld
call
ds
mov
cdq
or
cmp
test
adc
adc
cmps
lock
mov
test
push
cdq
out
(bad)
or
push
enter
inc
mov
xchg
xor
sub
rcl
ins
xchg
cmps
cmps
pop
add
lods
dec
std
mov
scas
push
jnp
inc
fidivr
sbb
jge
mov
mov
stos
dec
addr16
or
adc
sub
movs
jge
dec
adc
rcl
inc
into
dec
mov
push
test
push
dec
pop
adc
mov
mov
(bad)
out
std
cdq
dec
stos
inc
mov
sub
out
dec
mov
inc
pop
dec
dec
out
fs
(bad)
jmp
push
xchg
sahf
push
xor
cmps
retf
cmp
xchg
cwde
sbb
scas
mov
rcr
loope
mov
sbb
lds
addr16
lahf
sub
repnz
add
std
pop
cdq
jl
jnp
cmp
stos
xor
mov
adc
cwde
daa
mov
mov
call
or
stos
lds
adc
push
in
jmp
pop
sub
sub
dec
mov
call
adc
inc
ror
inc
dec
sub
push
ins
pop
pop
test
in
addr16
pop
out
fld
bound
shl
push
cmp
std
mov
xchg
xor
fs
inc
sti
push
xlat
out
or
jb
outs
and
xchg
popa
push
das
aas
fwait
and
enter
push
clc
jg
dec
xchg
cmp
ret
jmp
movs
cld
pop
das
push
call
nop
push
or
push
push
rol
and
sar
aam
popa
and
cmps
xrelease
push
cld
xor
pop
xor
mov
adc
mov
or
(bad)
dec
xchg
fcomp
imul
or
mov
or
mov
jno
or
mov
out
cmps
jb
faddp
enter
push
sub
leave
je
push
jmp
push
cmp
enter
std
or
push
(bad)
mov
push
test
fimul
movs
mov
sub
stos
pusha
jecxz
int3
mov
sbb
loop
inc
mov
cdq
(bad)
int3
dec
aas
add
sbb
inc
inc
xchg
mov
pop
aaa
nop
xor
out
mov
(bad)
jbe
xchg
and
retf
repz
fcmovnb
cwde
in
mov
in
xchg
enter
add
inc
pop
mov
gs
pop
jb
xlat
dec
xchg
loope
aam
push
xor
inc
mov
shl
pop
cs
xor
mov
pop
jbe
cld
ins
ficom
mov
add
jp
jle
test
mov
or
leave
or
div
cmp
dec
xchg
ret
ins
or
aas
add
cli
jbe
add
aad
mov
dec
add
imul
(bad)
push
pop
adc
addr16
pop
pop
dec
cmp
mov
and
and
xchg
xor
mov
ss
in
xor
bound
fwait
mov
inc
aaa
vmovupd
pushf
mov
pop
cmp
cmps
jmp
add
cmp
out
mov
or
pop
sub
inc
fldenv
push
neg
mov
mul
test
loopne
icebp
cmp
adc
fidivr
cdq
mov
and
and
out
or
mov
mov
pusha
rcr
mov
inc
mov
jb
mov
mov
test
call
es
push
loope
pop
cmp
push
lds
shl
outs
xor
jp
or
mov
fdiv
push
ins
adc
into
adc
(bad)
jle
cmp
cmp
int
mov
popf
pop
push
adc
pop
jae
jp
cwde
sub
mov
test
add
cmps
out
push
cmp
xor
mov
adc
scas
rcr
jnp
pop
or
mov
int
std
sub
outs
das
jge
or
les
pop
pusha
xor
mov
push
add
fcomp
and
stc
fstp
pop
inc
or
icebp
sub
stc
dec
push
dec
outs
sbb
dec
push
xchg
test
adc
xor
mov
leave
xchg
mov
jmp
cmp
sub
ins
jnp
jecxz
cld
movs
cmp
in
pop
mov
pusha
or
mov
ins
loope
fisubr
imul
ror
es
test
and
sub
push
lahf
mov
dec
icebp
loopne
scas
dec
ficom
jb
push
mov
mov
and
mov
and
pop
std
fld
int
xor
and
jge
imul
repz
in
aas
mov
inc
inc
mov
in
adc
jge
or
mov
stos
adc
mov
sub
xor
(bad)
xor
loopne
jg
cmp
and
sub
inc
es
and
repz
sub
iret
test
and
mov
xor
pop
sbb
scas
stc
test
dec
jnp
stos
mov
test
ret
(bad)
in
ror
arpl
adc
cmps
pop
ss
mov
dec
mov
dec
pop
addr16
out
cwde
jmp
and
or
sub
xor
and
add
repz
and
(bad)
push
xchg
mov
cmps
and
cmp
push
and
lea
xor
les
loopne
outs
adc
pushf
cmp
(bad)
sysret
pop
mov
adc
pop
cmp
daa
stos
das
test
lock
mov
jmp
mov
mov
outs
sbb
das
les
dec
stos
sub
das
sbb
sub
add
cs
and
jmp
(bad)
xor
xchg
jmp
fwait
call
movs
xor
into
fcom
or
inc
xlat
mov
xor
mov
and
imul
push
test
xor
xchg
mov
sbb
dec
dec
fistp
push
lods
jae
shl
push
in
ud0
add
dec
lea
fcomp
stc
loopne
repnz
stos
in
test
gs
dec
cmp
cli
pusha
xchg
retf
int3
push
sub
and
jmp
fbld
test
and
mov
and
xchg
push
in
cmps
and
xor
pop
push
aas
add
popf
(bad)
push
xchg
push
shl
mov
ret
aad
test
dec
sahf
add
pop
and
ret
rcl
jecxz
adc
fdivr
pushf
jmp
repz
and
fcmovne
and
iret
xor
scas
leave
add
bound
test
jle
inc
popa
ja
cld
xor
cmp
push
cmp
inc
(bad)
cmp
and
lods
jmp
mov
mov
fadd
jno
mov
ret
movs
pop
mov
ins
fnsave
(bad)
or
out
mov
(bad)
aam
(bad)
hlt
test
or
lea
fsub
cmps
fnstcw
imul
sub
jb
add
xchg
sbb
sub
imul
pop
mov
sti
cmc
and
(bad)
data16
js
aam
dec
shr
aas
jge
mov
imul
and
mov
lea
les
mov
arpl
cmp
inc
data16
aas
mov
ss
pusha
jmp
in
jmp
retf
sbb
inc
shl
aam
add
cli
adc
(bad)
mov
dec
imul
mov
pusha
ret
xchg
loopne
vphaddbw
push
test
arpl
(bad)
in
xor
scas
xchg
gs
and
or
xlat
shl
xchg
push
(bad)
(bad)
xor
push
xchg
fild
iret
inc
ins
leave
and
sub
or
xchg
dec
pop
test
cmp
in
bound
pop
sbb
pop
fcomp
jge
pop
lahf
mov
jns
sub
(bad)
and
xor
inc
adc
(bad)
into
jo
mov
xchg
xchg
outs
jns
xor
adc
jl
push
push
rol
cmp
add
in
fstp
or
mov
cmps
mov
push
xchg
cli
loopne
fcom
adc
jne
pop
arpl
mov
add
repz
dec
movs
int3
sbb
jl
cmp
pop
jnp
sub
ss
enter
shr
or
movs
cli
add
ret
or
pusha
and
pop
jae
dec
mov
add
add
mov
mov
adc
jp
movs
rcl
ins
xor
mov
mov
jb
mov
ret
(bad)
jecxz
or
cmp
xchg
dec
shl
cdq
and
ret
xor
xchg
push
xchg
ja
repz
or
test
or
push
inc
pop
int
jnp
inc
ins
dec
cmp
sbb
lea
inc
fwait
jmp
mov
and
mul
outs
jecxz
xor
cmp
aaa
xor
jmp
cmp
aam
and
lahf
xchg
ins
mov
mov
xchg
cmp
fwait
neg
xchg
test
cwde
rcl
xchg
xchg
ret
mov
inc
xchg
xor
pop
ret
dec
dec
sbb
pop
iret
cmp
push
inc
sbb
xchg
outs
cmp
addr16
dec
outs
jl
cmp
inc
cli
fild
jbe
push
cdq
xchg
and
je
sahf
push
push
add
fild
add
loope
inc
js
ror
sub
loop
push
sub
imul
add
mov
out
jmp
pop
mov
inc
imul
(bad)
popf
iret
inc
jg
mov
int
movs
into
adc
mov
push
icebp
and
gs
pop
pop
lea
std
sub
xchg
aam
cld
and
adc
lods
push
sar
stos
data16
test
movs
jge
jne
mov
xchg
mov
xchg
mov
jmp
xchg
sbb
leave
or
sbb
cmp
mov
dec
and
outs
lock
imul
fcmovnbe
jle
mov
daa
or
ret
mov
in
or
sbb
and
add
xchg
mov
fsubr
xchg
test
test
xchg
mov
mov
fistp
imul
in
or
aas
fadd
and
sub
cs
pop
mov
aam
cmp
push
(bad)
ins
push
nop
sbb
gs
fs
push
rcr
jmp
cmp
xlat
out
inc
mov
dec
out
adc
clc
fistp
xchg
(bad)
cld
cmp
outs
movs
fdiv
mov
stc
and
mov
outs
or
sti
test
pop
mov
int3
push
sub
mov
push
xchg
(bad)
cmps
fnsave
shld
dec
mov
(bad)
lock
xor
cmp
mov
adc
cmps
mov
push
and
mov
or
test
sahf
icebp
cmps
cmp
cmp
push
sub
lea
js
mov
jp
jp
cmps
cwde
inc
inc
sub
xchg
xchg
cmp
xchg
mov
scas
test
push
cmp
mov
out
fcomp
xchg
push
mov
retf
lods
fs
xor
ret
xor
pop
mov
mov
add
jo
sub
mov
movs
loopne
test
(bad)
sbb
inc
cmp
ret
mov
out
sub
pop
adc
dec
jno
mov
mov
lea
inc
pop
popa
ret
xchg
stos
fdivr
sub
lods
cmc
out
into
das
mov
in
push
stc
mov
es
and
mov
ss
lahf
retf
sti
jbe
(bad)
ja
push
fcmovnbe
aad
dec
xchg
adc
rol
pop
js
outs
mov
imul
(bad)
(bad)
nop
cmp
ret
sub
repz
(bad)
into
push
(bad)
daa
pop
jbe
mov
inc
inc
push
bound
(bad)
jne
push
lds
fmul
enter
sub
test
imul
sar
jae
mov
cmp
in
sti
out
inc
mov
and
movs
gs
mov
repz
test
sbb
daa
movs
push
or
cmps
inc
inc
push
jnp
test
adc
retf
cmp
stos
add
(bad)
icebp
xchg
fdiv
movs
out
in
test
ins
movs
sbb
push
sub
fwait
cmp
retf
fimul
mov
push
adc
into
dec
test
ins
cmps
gs
call
inc
dec
adc
push
loopne
push
pop
xchg
(bad)
or
sbb
rcr
in
aas
aad
or
iret
xor
loopne
int3
mov
jb
xchg
push
ror
je
lahf
repz
popa
pop
lds
or
aad
and
test
popf
xchg
cmp
repz
pushf
cmp
and
iret
xor
sahf
sti
in
xchg
mov
cmp
mov
or
scas
inc
jecxz
xchg
cmc
dec
retf
pop
icebp
jge
pusha
les
ja
jecxz
push
leave
xor
jns
and
jge
je
push
pushf
fcomp
idiv
pop
out
cmc
jle
mov
sub
cmc
push
fsubr
dec
rcr
cwde
mov
js
movs
stos
fisub
inc
loop
stc
xlat
mov
pop
(bad)
stc
fistp
sar
dec
test
pop
(bad)
push
inc
pop
adc
(bad)
jbe
test
shr
fst
out
adc
gs
xchg
pop
inc
mov
jmp
cmp
inc
jmp
push
mov
or
aad
sub
mov
fstp
cwde
dec
sbb
mov
in
cmps
or
xchg
popa
adc
(bad)
mov
xchg
or
and
(bad)
ss
movs
lds
loop
es
add
loope
loope
and
test
je
lahf
inc
jge
pavgw
std
in
aam
mov
leave
sub
cmp
dec
add
test
aad
sbb
sbb
jbe
inc
outs
stos
mov
imul
adc
outs
pusha
push
push
sub
inc
inc
mov
mov
and
mov
fisubr
lds
dec
cmovl
xor
jg
mov
push
gs
test
pop
inc
mov
test
add
loope
enter
pop
mov
and
xchg
mov
adc
icebp
pop
mov
fwait
out
std
data16
dec
push
sub
retf
push
jmp
lahf
push
push
mov
dec
lea
jge
lahf
jmp
and
fist
sahf
adc
mov
cmp
jnp
das
stos
dec
imul
repnz
pop
aam
out
adc
cmp
(bad)
mov
mov
clc
imul
clc
loopne
pop
ret
sbb
mov
dec
lods
mov
add
cmps
add
dec
aam
lods
jmp
fsub
mov
mov
xor
lds
(bad)
push
mov
es
dec
hlt
mov
sti
push
pop
aas
xchg
push
sub
cdq
into
rcr
(bad)
aad
stos
cmps
mov
(bad)
rcl
sbb
pop
test
adc
inc
test
ret
fdivr
retf
push
xchg
and
push
scas
fnstsw
jg
in
outs
ins
mov
scas
adc
sbb
out
cmp
mov
push
es
push
sbb
inc
scas
and
lahf
dec
xor
in
mov
push
in
add
stc
push
mov
fbld
mov
es
call
imul
inc
sub
cmp
sub
jb
repnz
jle
retf
mov
(bad)
pop
dec
cmp
inc
adc
inc
lock
(bad)
mov
in
into
mov
ja
shl
rol
mov
dec
mov
adc
mov
outs
test
add
mov
sbb
mov
jnp
nop
lock
inc
aam
add
scas
pop
(bad)
dec
mov
dec
lea
stos
call
nop
xchg
ror
cmp
sub
mov
mov
pop
sub
or
(bad)
adc
cwde
(bad)
sti
add
add
je
or
shl
aaa
lods
mov
cmp
nop
std
in
scas
mov
and
push
leave
loopne
push
mov
arpl
pop
push
pop
hlt
scas
or
jecxz
aas
test
xor
std
lods
fcom
pop
test
mov
xchg
dec
ret
loope
xor
clc
dec
mov
mov
mov
mov
and
cli
jl
add
cmp
pop
sub
out
adc
popa
scas
or
xchg
test
stos
fdivr
push
mov
or
cdq
inc
out
(bad)
adc
xor
dec
ins
cmp
push
outs
lods
adc
xchg
shr
cdq
imul
pushf
call
cmp
add
cmp
or
push
in
inc
cmps
mov
stos
mov
cmp
mov
scas
out
scas
or
inc
mov
xlat
ja
outs
fwait
inc
mov
cmp
in
pop
pusha
inc
lds
iret
and
ja
sub
mov
xor
jmp
cld
inc
xor
mov
cmps
lock
in
jmp
or
cmp
fdiv
outs
js
mov
popf
cmp
add
neg
fnstenv
jne
push
dec
out
cmp
cli
sbb
push
sub
pop
popa
push
adc
std
daa
in
add
pushf
daa
xor
cs
or
test
(bad)
mov
jmp
test
cwde
icebp
jp
push
ds
ja
jns
push
rol
jge
scas
ss
mov
dec
sbb
ror
push
and
sub
aaa
in
out
imul
mov
sbb
mov
mov
jb
xchg
into
pop
and
or
cdq
cmp
fmul
inc
ss
and
adc
es
(bad)
dec
push
jge
enter
jecxz
fidiv
inc
jne
add
mov
jle
inc
cmc
adc
push
outs
sub
test
push
xchg
xchg
call
nop
hlt
rcr
stos
jecxz
jbe
jns
inc
iret
push
aas
fistp
sub
sbb
int3
mov
imul
and
inc
xor
popa
mov
dec
push
stc
xor
jp
fild
verr
mov
retf
push
push
cld
mov
in
adc
add
jg
pop
pop
mov
inc
add
enter
fisttp
add
enter
cld
sbb
mov
fsubr
jno
and
inc
sbb
sahf
lahf
movs
sub
xchg
xchg
test
mov
enter
pop
push
jno
enter
mov
pop
jl
adc
mov
jbe
rol
xchg
sbb
je
cld
cs
imul
jmp
test
rcl
arpl
scas
mov
fs
mov
push
pop
jg
mov
xor
clc
mov
push
out
test
popf
je
adc
ds
repz
mov
inc
cmc
mov
xor
mov
mov
push
imul
xchg
ds
ret
jne
fsub
clc
paddsb
xchg
imul
mov
pop
jnp
dec
sti
jnp
pop
jg
pop
jg
or
mov
pushf
dec
fstp
inc
mov
jg
add
js
jmp
jbe
pop
adc
pop
in
lea
cmps
or
dec
scas
mov
data16
sub
xchg
add
in
aad
arpl
push
inc
push
popa
dec
out
lods
sahf
pop
dec
xchg
xchg
pop
in
mov
xchg
daa
aam
mov
cmps
ss
push
scas
jp
sbb
cmps
pop
ins
shr
gs
in
cli
cmc
or
xchg
mov
push
jle
sbb
sar
imul
or
lds
cmp
push
mov
adc
(bad)
in
jmp
pop
cmp
adc
jne
mov
ja
push
sbb
rep
ror
cmp
jecxz
in
pop
rol
pop
push
stos
ins
mov
outs
or
in
push
pop
or
cmp
add
xchg
xchg
shl
aad
stos
mov
lahf
sub
test
fiadd
loope
adc
mov
adc
add
push
inc
push
pop
idiv
addr16
sahf
adc
loop
pmulhuw
loopne
in
jne
mov
fistp
int3
std
push
bnd
add
add
push
sbb
sbb
fs
mov
lods
xchg
rcl
inc
mov
fs
jae
rol
jnp
cmc
sub
loope
fist
push
push
int3
sub
jae
out
sbb
sub
xor
aam
aas
jmp
dec
nop
add
test
out
pop
mov
or
and
pop
pushf
xchg
inc
jno
dec
adc
pop
ins
xor
or
push
xchg
mov
arpl
aad
out
mov
or
jb
inc
es
outs
cmp
cmps
cmp
pop
std
(bad)
mov
and
adc
popa
imul
cmps
mov
pop
fadd
xchg
aas
jp
sub
fcmovbe
xor
mov
loope
dec
jecxz
inc
pop
xor
test
fadd
xor
xlat
call
lahf
pop
and
dec
xchg
fwait
test
mov
inc
xor
xchg
jae
and
mov
cld
adc
push
fidiv
test
in
jmp
xchg
cmc
fldenv
ins
rol
shr
push
xor
and
sub
gs
pop
das
mov
xor
stos
xchg
iret
(bad)
ins
jecxz
xor
daa
in
leave
popa
and
jl
vunpcklpd
push
push
adc
fwait
inc
inc
push
gs
fcom
xchg
aas
mov
jbe
cmp
mov
test
enter
ret
stos
in
bound
dec
lods
and
lahf
(bad)
jp
xor
jns
dec
outs
fild
push
stos
inc
aad
nop
retf
leave
pop
sahf
sti
add
clc
rcl
dec
ss
inc
mov
fwait
xor
jbe
sbb
pop
iret
or
popa
mov
call
dec
mov
(bad)
xchg
jns
repnz
cmp
int3
push
mov
sub
rcr
dec
in
addr16
cmp
sti
cld
sbb
out
fwait
(bad)
call
test
sub
inc
xor
repz
lods
imul
fmul
mov
dec
(bad)
dec
hlt
hlt
mov
fnsave
mov
shr
push
pop
mov
js
xlat
shr
push
lea
clc
adc
arpl
outs
sbb
cmps
ins
cmps
adc
pop
sub
jmp
jmp
ret
pushf
inc
in
mov
out
xchg
mov
pop
cmp
sub
mov
(bad)
scas
lock
call
test
push
and
ror
xchg
mov
push
xchg
pop
in
cwde
dec
mov
sbb
dec
pop
lahf
mov
pop
(bad)
xor
fst
xchg
gs
dec
inc
or
cli
mov
leave
shl
imul
xor
xchg
xchg
out
xchg
sub
(bad)
in
jge
xchg
test
jmp
popf
mov
scas
dec
mov
cmc
gs
push
(bad)
ret
test
push
dec
jns
jmp
push
ficom
fcmovb
out
jecxz
lock
call
push
in
pop
dec
xor
retf
inc
test
aas
fwait
or
xor
mov
inc
mov
dec
stos
xchg
mov
dec
push
or
fdivrp
scas
out
push
(bad)
fist
mov
sbb
inc
adc
pop
push
xchg
jg
cld
test
jge
lahf
dec
adc
mov
push
jnp
and
jge
inc
ins
cmp
mov
std
adc
lock
(bad)
mov
es
mov
sahf
add
dec
add
pusha
cmps
ins
jl
xor
(bad)
cmps
xor
in
mov
ret
and
(bad)
fisub
xchg
shl
iret
xlat
loop
fwait
iret
clc
adc
icebp
pop
out
push
pop
sbb
ds
pop
dec
loop
pop
adc
out
ins
ja
xor
jp
or
loope
mov
dec
pop
push
push
or
movs
(bad)
repnz
dec
xor
(bad)
std
dec
xchg
add
jmp
add
out
push
bound
pop
int
push
int
dec
stos
adc
gs
dec
popa
cdq
lods
movs
jnp
push
aaa
ss
sbb
test
adc
repz
mov
mov
or
push
and
xlat
in
sti
iret
pop
jbe
les
in
movs
inc
xchg
pop
es
adc
mov
rcr
lods
push
mov
hlt
xchg
test
sub
adc
adc
sbb
and
and
in
add
popf
bound
sbb
or
stos
pusha
push
(bad)
mov
inc
ins
and
mov
sbb
xchg
jae
mov
adc
movs
ja
pop
mov
cmp
inc
lock
cmp
pop
test
sti
mov
push
lea
push
ja
xor
test
xor
test
push
(bad)
jp
call
add
adc
cmovno
and
(bad)
loop
xor
dec
ret
stc
add
sbb
aaa
(bad)
sub
cdq
shr
xchg
pop
popf
sub
shr
mov
jp
xchg
inc
xchg
pop
sti
push
dec
(bad)
adc
and
loope
es
adc
mov
pusha
dec
xchg
and
out
test
cmp
sbb
ds
jo
fst
sub
jae
ds
lods
outs
add
ret
cs
pop
sahf
cmp
mov
jae
nop
add
push
dec
jecxz
lds
(bad)
push
jge
mov
mov
clc
pop
scas
mov
jg
push
sbb
mov
push
add
xlat
pop
or
add
cli
ja
ins
ret
test
popf
pop
and
das
xchg
sbb
or
aas
pop
mov
add
cli
dec
cmp
int3
xchg
and
push
push
pushf
hlt
das
int3
cdq
imul
sub
sbb
loope
pushf
fs
pop
push
xchg
cwde
(bad)
pop
pushf
mov
fist
xor
sub
and
ret
dec
push
inc
shr
call
mov
stos
pop
div
sar
loop
inc
pop
cmps
loopne
dec
lahf
call
xchg
imul
sar
fmul
dec
stos
in
inc
in
int3
add
leave
inc
push
sbb
inc
shl
lahf
addr16
mov
dec
ins
jo
xor
push
sbb
mov
in
sub
ds
mov
nop
xor
leave
aad
arpl
jge
(bad)
scas
adc
out
addr16
fisub
adc
int
mov
pop
or
(bad)
(bad)
pusha
add
inc
in
daa
jge
imul
nop
mov
mov
mov
or
inc
xlat
cmps
in
out
lods
mov
lock
aad
dec
mov
(bad)
in
mov
jl
xchg
outs
iret
hlt
ror
pop
and
mov
add
add
inc
fninit
ds
je
out
and
xchg
pushf
adc
and
ds
sbb
pop
idiv
gs
push
maskmovq
imul
pushf
dec
test
xchg
lahf
outs
lahf
ins
xor
and
sub
iret
(bad)
add
jmp
mov
cs
pop
mov
dec
ins
repz
add
pop
(bad)
adc
add
addr16
pushf
daa
mov
call
hlt
adc
and
js
daa
xor
inc
cmps
lock
ret
dec
jecxz
bound
lds
add
jbe
inc
sbb
out
pushf
add
push
add
and
fcomp
(bad)
call
xor
fsub
jle
jb
add
dec
pushf
sbb
mov
test
dec
fnsave
(bad)
push
adc
push
ret
scas
dec
aas
fist
sub
sahf
loope
call
add
adc
mov
mov
into
loopne
push
mov
(bad)
stos
mov
outs
cwde
lock
jmp
inc
cmp
adc
stos
sbb
jle
mov
out
call
ret
cmps
push
pop
or
lahf
sbb
lods
mov
cmp
mov
xchg
fucom
adc
xor
ret
jg
and
in
jae
imul
mov
(bad)
sbb
loope
in
lods
mov
loop
adc
push
retf
je
and
inc
out
cmp
cmp
sub
xor
push
lea
outs
cmp
in
sbb
xchg
ins
rol
dec
out
cmp
pop
and
cmp
cmp
sti
bound
(bad)
push
fild
adc
and
std
cmp
sub
iret
jl
and
outs
test
in
pop
scas
(bad)
retf
ds
fild
inc
jge
(bad)
js
movs
dec
xor
shr
movs
data16
xchg
mov
xchg
push
xor
bound
hlt
sub
mov
ja
lods
cmc
mov
leave
push
sub
inc
in
add
mov
mov
xchg
xor
push
sbb
mov
pop
shr
cmps
pop
leave
dec
push
aas
xor
mov
or
cmp
fstp
gs
add
jae
xor
cli
lock
sbb
iret
or
pop
xchg
aam
ret
sar
pop
daa
cmp
jge
mov
shr
aas
pushf
jg
xchg
ret
xchg
sbb
sbb
fiadd
mov
push
test
rol
mov
out
xchg
mov
lea
mov
pop
pop
xchg
dec
mov
shl
jae
fwait
cmp
push
pop
pushf
sub
jns
inc
rcr
(bad)
aad
fbld
jl
jle
add
mov
loopne
mov
sti
(bad)
cdq
add
and
mov
and
js
(bad)
pop
ret
mov
shr
aam
(bad)
in
ret
mov
int
or
mov
fsub
outs
in
iret
push
jmp
outs
stos
and
fs
(bad)
and
or
mov
mov
shl
cmp
call
icebp
das
inc
push
or
mov
sbb
add
adc
sbb
cmc
xor
sbb
pop
xor
lea
xchg
outs
and
ins
and
mov
(bad)
mov
nop
or
sub
bnd
daa
aam
int3
jge
js
dec
mov
cmp
std
popf
and
bnd
mov
push
cmp
inc
mov
inc
xor
rcl
rcl
(bad)
fsub
jp
fs
stos
jmp
xchg
xchg
sbb
cmp
dec
mov
dec
das
lea
ins
push
fucomp
dec
cmp
dec
cli
fcom
mov
add
daa
dec
cmps
fs
retf
pop
xchg
stc
and
test
std
or
out
int3
jb
data16
loope
mov
fbstp
inc
pop
leave
or
std
xchg
mov
dec
call
push
retf
cs
je
or
les
pop
(bad)
ror
xor
repnz
sti
jo
loope
ficomp
dec
sahf
lods
call
mov
push
sbb
sub
je
mov
and
pop
out
fsub
mov
sbb
sbb
in
add
xor
fsubr
push
pop
hlt
xchg
jb
push
mov
xor
push
fs
push
call
mov
ja
pop
andps
js
jne
xor
mov
mov
arpl
cld
inc
cmp
sti
int3
sub
cmp
subps
imul
rcl
push
and
xchg
das
popa
mov
retf
and
cmc
mov
jmp
jge
mov
pushf
or
lfs
(bad)
js
pop
out
in
add
push
or
enter
sub
movs
push
ja
jl
cmp
cmp
sbb
out
cmp
xchg
je
idiv
imul
ins
daa
adc
dec
pop
or
adc
in
pusha
rol
sbb
jno
sub
sar
mov
ret
shr
in
sar
push
arpl
xchg
fs
jne
mov
xchg
mov
std
or
inc
add
test
jb
lock
or
dec
xlat
inc
add
add
or
je
mov
push
nop
pop
shl
sub
add
push
jl
mov
ret
xchg
or
popf
addr16
mov
imul
inc
sub
jno
rcl
mov
cwde
aas
ins
jmp
jl
pop
mov
mov
cmp
fbstp
clc
mov
xchg
popf
test
sub
sub
mov
daa
mov
pop
and
add
and
outs
add
adc
or
cmp
cmp
or
mov
in
mov
mov
xchg
xchg
je
cmp
fsub
js
lea
add
sbb
jnp
xchg
fist
(bad)
loop
ficom
ins
or
test
mov
lods
je
call
idiv
xchg
and
cmp
js
push
mov
dec
ret
adc
jl
dec
cld
fucom
ja
mov
jae
or
mov
dec
mov
add
jb
cdq
scas
ins
sar
add
adc
in
adc
dec
or
push
iret
cmp
sahf
loop
pop
mov
loop
xchg
push
inc
ins
in
loope
pop
nop
imul
cli
mov
add
fldenv
rol
mov
in
sub
nop
jge
in
cmc
shr
sub
inc
jecxz
aaa
mov
fnstsw
xchg
aam
aam
sbb
xchg
sahf
xor
imul
pop
or
mov
and
xchg
adc
repz
cmc
push
into
and
jmp
jbe
icebp
push
mov
add
and
loop
mov
cmp
pop
xchg
fdivr
push
lods
jg
xor
jmp
ins
sahf
xor
into
cld
nop
mov
stos
dec
lods
push
fwait
push
test
loop
icebp
xchg
pop
out
jle
add
cmc
loope
ins
pop
or
cmp
jecxz
(bad)
push
xchg
movs
mov
mov
dec
dec
push
loope
daa
popf
mov
cmps
test
bound
rol
in
mov
sbb
mov
ins
add
mov
mov
sub
repnz
stos
mov
movs
push
loope
(bad)
push
dec
adc
jmp
sti
sahf
bound
and
fidivr
icebp
ds
xchg
push
pushf
and
hlt
mov
nop
xor
push
push
jle
ins
shr
movs
and
xchg
fidivr
dec
lea
mov
(bad)
(bad)
sti
push
and
push
mov
push
test
shl
sub
test
imul
push
add
stos
daa
mov
add
aam
push
pusha
sbb
add
test
pop
(bad)
mov
xor
or
mov
or
or
xchg
pusha
fist
test
cmp
imul
sub
cmp
mov
mov
inc
mov
scas
icebp
stos
cmp
fwait
shl
mov
dec
xchg
jnp
jp
(bad)
retf
sar
adc
jmp
cmp
std
ins
mov
inc
repz
jae
test
mov
dec
hlt
and
mov
inc
imul
jb
mov
jo
mov
xchg
fiadd
xlat
lods
jne
mov
int3
sbb
mov
mov
enter
cmp
mov
les
xchg
sbb
icebp
sub
clc
fistp
sub
and
mov
adc
sbb
out
dec
mov
(bad)
or
arpl
jne
adc
in
loope
bound
adc
scas
imul
add
dec
mov
sub
imul
inc
add
(bad)
lock
xchg
dec
add
dec
aad
bound
(bad)
adc
rcl
jmp
(bad)
loopne
mov
rol
dec
movs
cwde
lods
add
dec
adc
push
pop
sbb
jo
dec
das
push
in
add
scas
arpl
jo
es
(bad)
int3
inc
xlat
and
push
mov
push
in
xchg
imul
ror
fcom
jae
dec
popf
shl
xchg
pop
inc
(bad)
fcomp
int3
mov
pop
(bad)
(bad)
push
jp
fcom
cmp
xor
push
jb
andnps
sbb
pop
pop
dec
sbb
ret
xchg
popa
sbb
jmp
outs
stos
retf
cmps
adc
rdtsc
repnz
in
cmp
retf
or
mov
hlt
pop
jp
sub
je
pop
mov
mov
test
push
enter
repnz
jmp
scas
or
cs
mov
dec
lods
or
hlt
(bad)
stos
cmp
push
inc
sub
jp
imul
xor
inc
hlt
and
daa
lds
jnp
or
push
cmp
and
fimul
aas
movs
ja
(bad)
into
int
sbb
and
push
pop
sbb
bnd
sbb
loopne
cmp
retf
mov
sbb
mov
cmp
and
inc
push
mov
inc
cmp
jmp
in
test
aad
jmp
ins
sbb
enter
(bad)
fisub
push
rcl
fs
ret
pop
es
lahf
adc
pop
mov
pop
test
inc
xchg
mov
push
clc
imul
jno
xchg
mov
or
jle
(bad)
dec
xchg
sbb
jmp
cmp
out
jg
gs
or
mov
adc
aas
sbb
jns
sub
jmp
sub
test
or
mov
addr16
int3
jle
adc
sbb
lds
cmp
jmp
push
rcr
ret
cli
inc
call
mov
jp
mov
inc
scas
pop
lods
and
fstp
test
sub
add
leave
sub
xor
adc
cmp
clc
movs
test
leave
orps
mov
push
inc
lds
adc
push
mov
in
mov
inc
ret
test
fmul
jns
push
jp
not
aaa
imul
push
test
ret
push
pop
pop
mov
div
push
mov
jne
imul
leave
repz
jecxz
push
jb
pop
xchg
xchg
pop
jb
mov
jg
jbe
dec
inc
aad
sbb
outs
mov
test
or
ins
inc
and
in
out
push
cmovae
pop
mov
test
lea
xchg
out
pop
movs
(bad)
pop
and
or
mov
and
outs
inc
sub
out
ss
pusha
push
xor
xor
aam
sub
cwde
out
xchg
sti
sbb
ret
cmc
add
push
mov
test
aas
cdq
or
adc
cmp
mov
inc
in
cmc
fadd
ror
out
mov
or
adc
leave
adc
jl
clc
adc
shl
cmc
mov
or
loopne
push
iret
inc
fcom
stos
in
sub
jb
ins
test
or
out
pop
stos
cld
fstp
adc
pop
sar
into
and
adc
les
pushf
out
sub
cmp
imul
or
push
dec
cmp
jmp
xor
fwait
mov
fsubr
or
loop
push
leave
jecxz
scas
popa
ja
push
stc
fisttp
add
jmp
bound
cwde
repz
retf
and
sub
and
(bad)
sbb
cmp
adc
push
and
xor
test
movs
mov
jb
(bad)
ins
add
sbb
in
and
pop
dec
repnz
pop
lods
push
dec
sub
repz
inc
(bad)
pop
push
lea
pop
push
fcomp
cs
fst
jne
mov
js
retf
mov
cmc
adc
mov
push
sbb
fstp
xor
dec
mov
xchg
lods
mov
retf
int
pop
xchg
add
push
sub
jo
(bad)
pusha
stos
repnz
mov
cmp
or
adc
ficom
out
test
mov
pushf
push
pop
jecxz
mov
in
pusha
adc
iret
mov
push
arpl
add
dec
mov
nop
in
sar
ret
mov
out
adc
mov
ja
test
fisubr
ins
jl
inc
add
adc
add
js
hlt
or
and
pop
xchg
xchg
je
jge
fnstsw
loope
and
aam
cld
push
dec
fistp
xor
jecxz
or
cld
jno
pop
imul
pushf
mov
out
push
sbb
clc
xchg
add
mov
adc
sti
push
and
inc
inc
fwait
jecxz
retf
mov
leave
int3
dec
jbe
jns
cld
xor
cmp
jmp
aam
mov
cmp
mov
cmc
fcom
push
lods
call
out
mov
mov
mov
aad
jmp
in
dec
xchg
cdq
dec
sub
jo
call
sbb
jo
sti
jne
fimul
loopne
inc
lea
out
fist
dec
pop
inc
stos
call
sahf
dec
push
or
cmp
les
jbe
stc
call
xchg
std
xchg
loopne
and
mov
push
into
add
fiadd
pop
fisttp
xchg
in
inc
xchg
xchg
scas
mov
push
dec
sti
loop
int3
jmp
mov
cmps
push
xor
adc
mov
mov
cmps
pop
mov
or
imul
push
xchg
sub
xchg
jle
cmc
or
fdivr
outs
lea
or
(bad)
cwde
sbb
mov
fnstcw
add
leave
sub
push
pop
mov
sar
jle
les
out
or
xor
cmp
or
retf
lods
hlt
je
dec
fs
fsub
cs
into
cld
pusha
out
movs
sub
push
adc
jp
mov
fdiv
jmp
mov
lock
mov
std
or
jle
or
push
push
cmp
outs
xlat
mov
outs
cmp
xchg
fcmovnb
nop
mov
mov
or
mov
jg
sub
pushf
jp
mov
fisttp
iret
cld
sbb
enter
jge
mov
pop
test
push
and
xchg
xor
inc
xor
dec
mov
dec
dec
inc
sub
push
mov
push
sar
daa
ins
push
in
sbb
scas
and
ins
pop
mov
mov
xor
mov
inc
mov
pop
mov
stc
xor
enter
push
pop
fadd
sbb
ss
(bad)
fiadd
sbb
imul
jge
xchg
xchg
add
pop
aas
js
ds
pop
jmp
mov
cwde
xchg
add
mov
fwait
popf
inc
gs
pop
lea
popf
nop
mov
dec
pop
mov
lods
cmc
in
into
dec
out
stos
mov
and
xor
int3
xchg
movs
cmp
loopne
push
xchg
daa
cmps
ins
mov
clc
push
dec
mov
stos
adc
jg
sbb
pop
push
xlat
inc
jle
mov
add
pop
inc
pop
mov
bound
mov
and
mov
bound
push
ja
mov
stos
mov
dec
wbinvd
rcr
ins
pop
mov
mov
push
jmp
in
shl
pop
repnz
dec
xlat
or
imul
xcrypt-cbc
cmps
push
sbb
pop
cmp
pop
std
push
call
imul
rcr
pop
dec
lds
push
out
fmul
sbb
sbb
outs
mov
jl
sbb
sub
enter
push
cmp
stos
adc
das
inc
ja
jmp
int
ins
push
and
cmp
jns
jg
iret
leave
jo
and
fstp
push
jo
sub
xor
mov
sub
xor
xchg
dec
jne
sub
bnd
fld
iret
das
je
lods
test
jns
fistp
jae
xor
jns
ficom
xchg
xor
xor
mov
jne
aaa
sub
pop
(bad)
out
jp
cmp
cmp
pop
in
sbb
sbb
adc
out
mov
ds
pop
test
aaa
add
mov
popa
xchg
jb
sub
test
inc
mov
cdq
inc
(bad)
rcl
retf
inc
dec
mov
shl
add
adc
mov
xlat
xchg
dec
fisttp
sbb
cdq
(bad)
jge
in
lahf
pop
mov
mov
stos
inc
movs
adc
data16
out
inc
push
jle
sub
mov
mov
lods
jmp
or
dec
outs
lods
adc
pop
xor
shr
jnp
rcr
jne
mov
mov
mov
mov
cmp
or
call
popf
and
adc
mov
fisttp
inc
mov
outs
pop
movs
js
dec
out
sub
push
setg
mov
stos
push
mov
sub
lds
sbb
mov
int3
movs
lods
inc
out
xchg
and
cli
xchg
xor
rol
in
push
and
ret
imul
out
inc
fcomp
loopne
arpl
idiv
and
jmp
sub
jecxz
xchg
jnp
je
adc
xor
jmp
add
mov
push
jae
xor
and
sbb
mov
(bad)
call
loopne
or
lahf
inc
dec
push
out
cs
dec
mov
and
add
and
(bad)
push
pop
push
std
mov
je
aam
lods
jmp
xchg
jae
ja
xchg
inc
pop
inc
aas
jecxz
jp
jge
jo
sahf
cmp
popa
sbb
push
retf
hlt
lds
scas
dec
lods
cmp
jae
mov
sbb
mov
fs
dec
adc
mov
adc
in
movs
into
shl
mov
inc
(bad)
popa
je
cmps
je
call
lods
call
add
shr
and
sub
leave
icebp
rol
dec
(bad)
push
aaa
ja
in
xchg
mov
pop
rol
xchg
jp
ret
xchg
fldenv
pop
push
or
pop
lods
scas
cld
(bad)
ins
fs
stos
lods
or
jae
xchg
mov
jb
int3
nop
clc
stos
bound
inc
adc
(bad)
fistp
les
sub
(bad)
ror
rcr
mov
inc
xchg
inc
mov
out
scas
lea
xchg
scas
enter
jns
outs
jno
clc
fist
xchg
push
fnsave
aam
cmp
push
xchg
xlat
mov
stc
sbb
sub
xor
jns
jl
iret
add
and
das
mov
add
out
cld
add
adc
lock
cdq
sbb
das
xor
jmp
and
into
daa
xchg
and
or
daa
inc
call
scas
ret
pop
xchg
sbb
into
lea
and
test
push
daa
stos
cli
lock
add
cwde
popf
imul
mov
push
cmps
mov
add
out
lods
push
cmc
push
add
mov
jecxz
ins
sti
icebp
xchg
mov
ds
xchg
nop
sar
add
mov
pop
xor
shr
add
push
and
mov
mov
repz
add
stos
popa
and
push
cli
retf
inc
xor
pushf
mov
inc
les
xchg
ins
jle
mov
dec
push
push
cdq
or
add
mov
inc
std
adc
push
cmp
movs
fdiv
lds
mov
pop
push
std
jmp
xor
jg
rcr
lock
(bad)
adc
mov
inc
xor
retf
push
or
les
js
ds
test
jbe
aam
retf
out
lods
dec
loop
or
push
les
sub
stos
jne
stos
retf
cwde
sbb
outs
and
in
pop
cs
sbb
clc
jb
cmp
or
iret
ret
add
or
stc
push
movs
adc
mov
aad
add
sub
push
adc
rol
std
jp
push
mov
(bad)
cmps
mov
push
inc
movs
jno
in
dec
out
cmp
sbb
mov
jecxz
mov
sbb
out
fsub
push
pusha
retf
loope
or
and
cmc
sbb
mov
clc
or
retf
pusha
call
(bad)
and
mov
fisub
pop
out
(bad)
ficom
and
sbb
jge
rcl
xchg
in
cmc
mov
ins
mov
inc
xchg
xor
cdq
jne
pop
test
in
loop
sub
movs
cmps
(bad)
daa
mov
jbe
jmp
cli
sbb
(bad)
fs
lahf
or
jno
aaa
jp
out
xchg
js
add
mov
das
xchg
cwde
pop
xor
xor
and
les
jle
jg
fstp
int
mov
adc
lock
ins
mov
(bad)
(bad)
repnz
jge
dec
or
cmpxchg
inc
js
cdq
popa
dec
jb
mov
jnp
pop
inc
sar
and
ja
imul
inc
xor
add
pop
loope
add
inc
sub
call
mov
push
mov
lahf
or
lds
test
xor
push
and
lods
xor
mov
xlat
mov
and
(bad)
cli
int3
dec
jmp
je
xor
or
xchg
and
fnstenv
fwait
and
aas
fistp
test
outs
push
shr
into
cwde
retf
xor
jo
js
(bad)
xchg
jmp
sub
sub
or
add
or
or
loopne
sbb
pop
les
scas
ror
jnp
call
shr
add
jg
or
mov
cmps
js
daa
popa
xchg
arpl
pop
call
or
pop
adc
mov
pop
or
sub
add
ret
mov
and
fstp
jo
fild
fstp
fistp
or
cmp
add
adc
add
cwde
push
pop
cmp
movs
adc
pop
mov
in
leave
push
push
xor
push
lods
or
stc
sbb
sub
ja
push
fimul
cmps
xor
clc
vcomisd
in
xlat
int3
popa
ret
jle
out
fdiv
jl
adc
xor
pop
popa
leave
pushf
arpl
psrlw
pop
retf
xor
xlat
jnp
int
je
jae
scas
outs
inc
sti
dec
and
ror
mov
lock
and
stos
ja
jmp
xor
push
bound
add
push
and
inc
test
aam
jno
mov
in
push
je
or
mov
adc
imul
(bad)
jg
dec
fadd
sbb
sbb
sar
pop
mov
(bad)
sub
out
rol
aas
in
mov
loopne
xor
es
and
pusha
jecxz
inc
dec
scas
mov
xchg
pop
xor
mov
mov
mov
dec
cdq
dec
and
movs
int
xchg
stos
(bad)
cmps
sbb
enter
inc
and
cwde
adc
mov
xor
xor
mov
arpl
pop
das
stos
out
call
xchg
xchg
arpl
stos
jge
pop
std
add
and
mov
xor
fisubr
adc
adc
into
movs
(bad)
pop
addr16
(bad)
fimul
adc
aam
imul
jp
push
pop
sbb
push
mov
scas
pop
ror
movs
cmp
pop
xlat
call
aad
sbb
out
mov
hlt
adc
mov
mov
test
call
jno
or
or
int
fadd
push
mov
jl
ds
icebp
inc
mov
neg
jmp
mov
and
pop
es
pushf
xor
(bad)
retf
pop
xchg
jno
mov
and
jo
les
ds
outs
loopne
sub
pop
add
fidiv
xor
out
mov
xchg
int3
loope
xchg
push
cmp
cmp
cmps
add
sbb
push
cs
ror
scas
fisub
enter
pusha
pop
fist
mov
lahf
(bad)
enter
movntq
push
or
ins
xchg
mov
retf
pop
mov
cmp
(bad)
out
adc
aad
and
mov
jmp
inc
pop
pop
jae
pop
loope
retf
push
sub
inc
xor
mov
bound
stos
pop
cdq
arpl
xchg
(bad)
mov
mov
dec
inc
xchg
in
arpl
cmp
add
imul
adc
dec
movs
sbb
jmp
ja
sub
inc
push
dec
pop
xor
adc
out
pop
mov
mov
loop
xchg
sbb
adc
data16
cmp
lea
aam
mov
in
xor
push
test
icebp
push
inc
stos
(bad)
je
out
cmps
xchg
jmp
jbe
cmps
add
mov
nop
test
mov
sub
sbb
or
xchg
inc
cmc
ss
or
leave
jb
shl
xchg
push
xchg
cmp
in
hlt
pop
xor
ret
mov
sti
cmp
pop
jg
xchg
mov
push
sbb
mov
mov
bound
sahf
push
movaps
adc
dec
and
das
jecxz
pop
adc
sub
bound
push
fadd
xor
es
mov
and
pop
pop
xor
fwait
icebp
inc
fldenv
sbb
pop
cmp
ret
out
inc
or
mov
mov
scas
outs
jecxz
dec
add
sub
out
cld
outs
mov
add
pop
lods
out
sbb
loop
retf
out
lods
in
sub
cmp
cld
dec
or
push
inc
sub
xor
in
mov
sub
shl
cmp
jno
pop
aad
rol
or
sbb
hlt
stc
icebp
out
push
sbb
pop
push
push
fs
aas
(bad)
or
jge
mov
and
pop
lock
mov
or
add
sar
fidiv
cmp
or
xchg
or
sbb
cs
xchg
jo
xlat
jae
ins
scas
pop
jmp
xor
cli
jae
push
jae
lahf
aaa
leave
inc
mov
xchg
dec
das
cdq
(bad)
call
call
mov
stos
movs
ja
add
int
xor
imul
div
jmp
shl
mov
imul
push
push
push
xchg
or
popa
fsubr
jg
call
mov
jbe
icebp
push
and
shr
cmp
mov
cmps
(bad)
stc
scas
popa
inc
sbb
std
rol
xchg
std
daa
in
fimul
mov
imul
cdq
pop
mov
aad
dec
sub
pop
xor
sub
cmp
sub
lea
retf
inc
in
and
push
push
stos
aam
mov
fmul
mov
inc
outs
jae
mov
jle
mov
and
adc
int3
adc
jo
(bad)
xchg
mov
test
in
sub
fst
xor
or
rol
add
mov
cmp
xchg
shld
sti
(bad)
mov
sub
fcom
mov
loopne
outs
sbb
sub
push
aam
jg
cmc
js
(bad)
push
dec
or
call
dec
popa
pop
jecxz
(bad)
les
fadd
cmp
inc
pop
hlt
cmp
adc
or
mov
sub
xlat
imul
adc
push
jmp
inc
daa
outs
int
ins
(bad)
(bad)
sar
ins
fistp
aam
call
pop
aad
xchg
ror
mov
repnz
mov
fisttp
nop
adc
dec
sahf
mov
jne
out
mov
fidiv
mov
inc
test
xchg
adc
sub
sub
push
sbb
mov
iret
push
xchg
dec
lods
test
xchg
inc
pop
popf
dec
mov
push
or
out
push
(bad)
es
les
imul
sar
ja
mov
push
jb
push
pop
in
test
inc
push
rcl
jne
aaa
xchg
sub
inc
xchg
mov
xchg
lahf
fwait
int
mov
or
stos
call
and
mul
cmp
lds
test
div
jno
mov
jo
movs
cld
(bad)
repz
fs
sub
clc
test
xor
fidiv
adc
xchg
ds
cmp
pop
pop
cld
inc
inc
and
rcl
jmp
test
adc
jno
outs
mov
jno
or
iret
stc
les
mov
fs
sub
mov
outs
aad
test
mov
pop
pusha
vmovd
cmp
dec
fcomip
push
shl
mov
cli
ss
push
push
jo
xchg
jle
les
fdivr
(bad)
stos
mov
hlt
jp
mov
hlt
or
enter
repnz
push
enter
sbb
mov
pushf
sti
gs
mov
mov
mov
jnp
aaa
inc
ss
push
sbb
mov
call
sub
in
adc
movs
arpl
in
(bad)
ins
inc
sbb
pop
jae
jae
pop
hlt
inc
push
js
add
dec
inc
or
(bad)
fs
mov
jmp
(bad)
adc
push
push
sbb
sahf
mov
adc
adc
jb
pop
fnstcw
in
sub
outs
mov
int3
sub
add
or
cmp
hlt
mul
jns
mov
sbb
sar
test
push
sahf
jle
sbb
outs
and
fnclex
cmc
shl
cmp
outs
and
cmc
out
scas
fidivr
sub
out
or
push
int3
cmp
jo
in
mov
stos
pusha
push
jg
and
or
sub
gs
jmp
add
add
inc
lods
sbb
ins
jge
jno
stos
add
retf
frstor
retf
iret
aam
or
out
fld
push
ja
mov
xor
call
sbb
or
iret
cmp
mov
push
dec
into
adc
pop
jg
punpckhdq
jg
jmp
dec
xchg
mov
mov
int3
or
adc
jmp
pop
mov
jle
dec
pop
lds
jge
cli
add
push
adc
cmp
fs
sbb
pusha
call
mov
and
mov
mov
ins
stos
pop
mov
out
(bad)
jae
mov
adc
movs
fimul
ins
jg
xchg
mov
dec
xchg
cmp
div
in
dec
and
lods
sub
aaa
js
mov
ret
or
pusha
cmps
call
imul
outs
or
dec
sub
outs
ins
cmp
(bad)
fdiv
pop
out
and
test
test
sub
fs
inc
paddusb
inc
js
jno
lods
sahf
mov
pop
adc
mov
in
fnstsw
xchg
or
jne
pop
jl
dec
mov
call
test
imul
mov
inc
shl
mov
or
push
jo
pusha
movzx
jl
xor
push
imul
lods
std
loop
inc
nop
fs
aam
mov
xchg
mov
mov
dec
dec
fs
mov
shl
loopne
jne
mov
dec
add
xor
popa
add
clc
pop
movs
push
shl
add
(bad)
dec
sub
push
xor
mov
or
idiv
jecxz
sub
fimul
adc
push
cmp
mov
dec
in
mov
cmc
xor
sbb
add
mov
or
clc
ud1
push
mov
imul
xchg
popf
(bad)
xor
pop
(bad)
fsubr
ret
pop
out
shl
mov
ins
test
sub
out
daa
neg
cmp
mov
xlat
xor
add
loopne
jb
ficom
outs
sbb
dec
into
test
inc
gs
shl
movs
mov
sub
mov
pop
xor
popa
mov
das
mov
rcl
div
loop
loope
movs
iret
retf
out
loope
add
mov
inc
cmp
and
call
test
and
sbb
je
dec
or
sar
test
sub
jb
popf
(bad)
pop
repnz
xchg
pop
in
hlt
jmp
cmp
cwde
push
pushf
lods
mov
sbb
or
jb
cdq
addr16
int
sahf
hlt
loopne
xchg
popa
fcmovb
js
movs
dec
adc
add
mov
loopne
sar
clc
add
bndldx
add
and
mov
(bad)
mov
mov
loop
jl
dec
mov
adc
shl
add
les
or
adc
xchg
call
ret
pop
fdiv
fwait
xor
icebp
(bad)
xor
pop
mov
dec
in
lds
(bad)
mov
mov
out
xchg
cwde
vmovmskps
out
xchg
arpl
inc
aas
stos
push
and
and
mov
dec
das
ficomp
or
cmp
sti
mov
bound
adc
sub
pop
or
dec
jae
or
cwde
(bad)
cmps
(bad)
popa
and
int
dec
push
ds
in
aad
enter
ins
pusha
push
inc
out
js
lea
mov
out
daa
aas
jmp
or
cs
push
fwait
mov
pop
je
pop
imul
mov
push
push
dec
xchg
cmp
mov
out
xor
jmp
mov
xor
pop
push
je
outs
inc
mov
sub
aam
or
inc
iret
inc
fidivr
into
or
lahf
jne
les
xor
mov
stos
mov
sbb
movs
rcr
cmp
cmp
jmp
xlat
sub
push
inc
arpl
push
push
in
ins
jl
ins
add
mov
stc
mov
sahf
cmc
or
js
jmp
add
mov
mov
xchg
(bad)
cmp
clc
and
stos
cld
jg
scas
lea
mov
cdq
inc
inc
sub
js
and
shl
scas
cmp
rcl
lds
sti
bound
shr
ror
movs
jmp
pop
pusha
xor
mov
sub
push
jmp
pushf
or
call
in
shr
fld
push
ja
inc
xchg
(bad)
mov
je
(bad)
lock
jle
xor
pop
fadd
mov
daa
ret
and
add
int
pop
(bad)
cmp
test
sar
jnp
repnz
mov
fwait
(bad)
aam
es
dec
and
adc
(bad)
ins
cmps
test
jl
shl
mov
out
arpl
cli
sar
mov
jle
ficomp
lods
dec
loop
test
pop
loopne
jb
jbe
jae
sbb
test
(bad)
hlt
xchg
xchg
inc
mov
loop
push
test
xlat
fdiv
pop
shr
and
pop
xchg
push
bswap
mov
(bad)
jge
ret
adc
inc
pop
push
xchg
pop
jmp
mov
pop
div
cmp
repz
daa
push
xor
cwde
rol
pop
sti
stos
loopne
popf
cmps
in
sub
mov
xchg
int3
add
lea
dec
push
mov
fisttp
cbw
xchg
ss
sub
nop
and
dec
out
shl
mov
sti
inc
test
pushf
cwde
arpl
mov
sub
mov
sub
jle
sub
dec
mov
and
movs
imul
dec
lds
sbb
push
xor
ret
cld
cld
adc
aas
daa
ss
(bad)
pusha
and
addr16
sub
or
dec
dec
sub
in
adc
gs
in
inc
inc
loopne
fcom
push
cs
push
dec
dec
xor
div
rcl
sahf
lahf
pop
fbld
mov
idiv
cdq
and
xchg
push
bnd
call
or
xchg
jg
leave
les
cs
pusha
and
xchg
scas
mov
ror
push
add
stc
xchg
xchg
mov
jb
in
call
pop
dec
sbb
in
jno
jmp
sbb
cwde
leave
and
jmp
arpl
int
sub
pop
and
sub
leave
retf
jle
pop
fwait
push
fadd
hlt
or
and
xor
ins
xchg
out
sbb
mov
or
adc
les
rol
in
or
arpl
xchg
loope
ret
jae
sub
rcr
cmp
rol
push
addr16
in
dec
aad
or
dec
and
mov
or
jmp
mov
sti
add
std
xor
imul
xchg
(bad)
aas
fwait
hlt
inc
lahf
push
mov
dec
stc
adc
push
and
adc
test
ja
lea
mov
rcl
mov
leave
jmp
fwait
bound
push
inc
test
pop
xchg
inc
sub
loop
aas
add
jge
loope
les
test
ds
sbb
push
cmp
jle
or
inc
jecxz
ret
outs
mov
push
bound
nop
dec
mov
sahf
xor
and
sahf
xor
loopne
push
(bad)
add
mov
or
add
imul
out
ret
cmp
(bad)
mov
fisttp
je
ror
(bad)
aas
mov
sub
es
icebp
mov
out
mov
mov
lock
inc
sbb
aas
jns
mov
adc
cmp
jp
jle
(bad)
jmp
and
add
lds
lods
int
pop
arpl
sub
jbe
mov
aaa
xchg
pop
ja
push
xor
xor
int
xor
sub
loop
dec
jle
movs
jns
and
adc
in
cmp
mov
inc
mov
mov
fdiv
cmp
xchg
sub
fbld
sbb
scas
fsub
leave
and
dec
pop
arpl
adc
mov
fidiv
inc
ror
xchg
mov
(bad)
jge
(bad)
cwde
ficom
mov
xchg
add
std
push
into
dec
push
call
pop
xor
icebp
call
xor
test
in
bnd
pop
jnp
sub
stos
adc
(bad)
in
leave
and
push
sbb
loop
loopne
in
jmp
inc
pop
movs
in
mov
add
cmp
pop
mov
dec
test
in
icebp
jae
add
fcmovnu
idiv
add
or
add
cmp
pop
xlat
jb
fwait
test
hlt
shl
data16
or
into
xchg
shl
lds
push
fsub
xor
sub
pop
imul
or
ins
ror
adc
adc
or
cmps
test
int3
ret
fwait
scas
or
or
mov
inc
sar
aam
enter
enter
pop
std
sub
jecxz
(bad)
mov
cld
cmps
sbb
push
sub
mov
mov
je
push
fnsave
adc
scas
repnz
and
xor
mov
ins
das
repz
jmp
inc
push
fstp
bound
mov
sub
pushf
test
inc
push
jo
and
scas
cs
xor
je
das
in
es
dec
into
into
push
sbb
cwde
dec
jp
imul
mov
push
cmp
add
out
call
add
xor
xchg
and
scas
add
xchg
mov
push
sahf
sbb
xchg
adc
jno
imul
and
and
and
xor
arpl
xor
cmc
xchg
push
pushf
call
pop
in
jbe
ss
std
clc
dec
repnz
jp
rcl
xor
xlat
mov
lds
pop
pop
mov
push
aad
out
sub
call
jnp
sbb
mov
cmc
iret
jnp
fst
in
xchg
push
push
mov
pop
adc
lods
mov
aam
or
mul
jmp
or
ss
jo
out
rcl
jecxz
jno
out
dec
and
(bad)
test
xchg
out
mov
aad
mov
ja
in
jae
push
leave
ror
test
jp
rcr
jecxz
scas
test
retf
or
pop
(bad)
das
fisubr
adc
data16
inc
js
ret
adc
arpl
mov
enter
icebp
(bad)
nop
ficomp
cmp
out
rcl
push
test
mov
imul
mov
mov
outs
(bad)
or
add
cmps
inc
clc
push
mov
stos
(bad)
mov
jecxz
xchg
mov
mov
pop
sbb
xor
hlt
out
ins
das
(bad)
faddp
pop
shr
popf
jns
xor
sub
cmp
cs
jno
int3
pop
ror
data16
jns
imul
(bad)
cdq
mov
push
psubw
das
add
sbb
test
dec
scas
cmp
adc
xor
imul
in
push
adc
or
pop
sub
hlt
fisub
cmp
pushf
mov
adc
cwde
(bad)
movs
out
call
and
jp
inc
push
in
inc
icebp
jb
push
pop
pop
and
cmp
sbb
rol
arpl
mov
mov
add
push
inc
ret
(bad)
ins
adc
fcomp
cmp
ror
jne
cmp
cmps
scas
inc
xchg
xor
and
sti
jmp
mov
add
call
loop
(bad)
rol
add
jl
loope
sbb
push
icebp
adc
mov
sub
adc
iret
pop
mov
inc
gs
stos
adc
(bad)
sbb
xor
fnstsw
inc
push
cmc
mul
dec
mov
xchg
and
and
icebp
mov
mov
jbe
inc
xchg
(bad)
mov
lahf
sbb
sbb
inc
hlt
jge
fistp
test
repnz
sbb
adc
xchg
pop
add
push
mov
lds
adc
mov
adc
sub
in
loop
dec
into
mov
sbb
xchg
and
test
gs
xchg
xor
lock
not
out
push
xor
adc
push
dec
loopne
sti
or
add
sti
sub
and
jecxz
inc
ror
fdivrp
push
pop
and
mov
into
int3
icebp
pop
bound
and
jne
shl
adc
xchg
out
push
(bad)
inc
dec
add
sub
push
and
inc
or
xchg
aam
inc
daa
lods
push
mov
cmp
or
xchg
mov
sbb
inc
test
aaa
pushf
and
ja
pop
sub
push
repz
fisttp
pop
ret
test
fimul
shl
jnp
cld
add
jp
inc
fwait
inc
ficom
fwait
idiv
out
inc
movs
mov
stc
adc
mov
xchg
jmp
adc
fldcw
(bad)
xchg
int3
out
fiadd
addr16
fwait
push
pop
sub
nop
mov
nop
jle
(bad)
iret
xchg
adc
mov
imul
adc
aam
outs
repnz
mov
xchg
sbb
mov
sub
xchg
add
out
mov
sbb
aaa
mov
jmp
adc
dec
dec
push
std
fsubr
stos
mov
iret
lahf
mov
inc
inc
dec
scas
mov
or
rol
sbb
xor
nop
in
in
mov
lock
movs
retf
in
bound
rcl
cmp
sahf
mov
xchg
inc
cld
and
mov
inc
ret
data16
jmp
(bad)
inc
cwde
xchg
ret
fcomip
sahf
pcmpeqd
adc
add
xchg
lea
pusha
mov
xchg
stos
loope
rol
mov
mov
(bad)
cmc
push
out
in
in
les
mov
jecxz
jecxz
es
cmp
popa
outs
push
xor
and
fdivr
mov
call
push
cmp
mov
dec
mov
ss
retf
sbb
fwait
sub
xchg
dec
jno
dec
test
iret
call
jg
ret
jno
cdq
mov
xor
es
(bad)
xchg
sub
aad
jae
lods
and
hlt
mov
imul
inc
shr
scas
out
jl
cli
je
iret
mov
push
pusha
push
es
mov
jmp
test
jle
mov
retf
sbb
mov
enter
leave
adc
cdq
icebp
xor
pushf
std
int3
cmps
dec
xor
leave
rcl
sar
(bad)
arpl
dec
stos
jnp
(bad)
clc
pop
xlat
jbe
leave
sub
sub
pop
or
test
sar
pop
dec
sub
lahf
dec
outs
add
out
out
inc
cmp
shl
scas
mov
mov
arpl
scas
sbb
mov
pop
jmp
add
ins
add
cmp
pop
xor
xchg
cmp
pop
pop
in
sbb
hlt
dec
pop
aas
push
sbb
jge
cmp
shr
sbb
add
xlat
aaa
sbb
push
(bad)
pop
adc
sbb
and
mov
push
or
mov
in
mov
rol
dec
mov
mov
xchg
adc
mov
or
fild
push
cmp
xor
dec
rcr
sbb
mov
xchg
in
ffreep
cmp
adc
mov
iret
(bad)
xor
adc
fimul
push
movs
sbb
mov
pop
ins
jecxz
mov
push
pop
dec
dec
adc
cld
xlat
inc
movs
out
xor
test
add
mov
popa
loope
push
outs
mov
inc
fmul
sub
(bad)
mov
sub
les
dec
sub
adc
js
mov
dec
fidiv
pop
mov
push
fnsave
jnp
jb
xchg
jnp
adc
test
leave
loope
nop
inc
stos
ja
pop
addr16
pop
stos
xchg
gs
fsubr
(bad)
pop
pop
stos
mov
(bad)
cmp
push
fadd
imul
shl
fadd
sub
popa
lds
push
add
js
movs
push
loopne
ss
lock
and
mov
push
es
cmp
xchg
xchg
hlt
pop
mov
xchg
out
hlt
inc
mov
inc
test
stos
adc
push
out
ficom
mov
mov
jo
mov
das
inc
add
mov
mov
and
jnp
(bad)
mov
xlat
imul
cmp
sbb
out
push
(bad)
and
xchg
enter
(bad)
int3
and
and
dec
cmps
mov
aaa
shl
jmp
dec
icebp
loop
mov
push
sub
int3
push
in
adc
iret
outs
out
jae
das
jo
dec
icebp
ficom
shl
jo
and
dec
jbe
int3
jo
and
punpckhwd
dec
mov
hlt
jmp
ss
ja
out
and
loop
out
retf
jae
test
shr
ret
mov
mov
cli
lds
mov
mov
cld
mov
cli
pop
call
xchg
mov
xor
pop
fisubr
popa
push
test
adc
xchg
out
jge
or
jmp
cmp
and
jns
push
(bad)
pushf
add
dec
push
aam
sbb
inc
dec
int
add
push
lea
jae
jecxz
inc
push
sub
pop
dec
call
add
xchg
xchg
adc
int3
adc
and
ins
aas
ds
inc
test
stos
ficomp
ja
inc
mov
mov
push
popa
xchg
ins
mov
jno
jge
mov
inc
mov
mov
into
inc
loop
push
mov
test
jge
dec
aad
xor
inc
cs
bsr
and
ja
fldenv
ja
pusha
lea
arpl
fdiv
cmp
and
cli
add
inc
test
push
lahf
xchg
cdq
aaa
arpl
loopne
mov
pop
icebp
xchg
popa
add
retf
inc
test
in
addr16
mov
out
jo
loope
inc
inc
(bad)
popa
cmp
add
dec
pop
dec
push
stc
jne
sahf
jmp
inc
push
nop
popa
(bad)
call
lods
cmp
(bad)
sub
xor
adc
in
aas
fnstenv
popa
mov
clc
div
(bad)
mov
(bad)
in
sub
dec
nop
push
test
test
dec
cdq
daa
mov
jecxz
jg
cmc
bnd
dec
xor
pushf
sbb
xchg
shr
dec
jno
xor
jo
enter
(bad)
mov
jo
mov
mov
pop
aad
dec
dec
jg
loope
(bad)
push
jge
push
adc
xchg
(bad)
pushf
xchg
xchg
and
jecxz
xor
dec
add
cmp
dec
jne
sahf
stos
int
in
popf
xchg
and
pop
jb
push
cmps
lds
add
daa
sub
pop
inc
xor
push
cmp
cmp
push
xor
(bad)
scas
mov
mov
and
and
cmp
jle
(bad)
lock
mov
icebp
jecxz
adc
sub
test
jp
dec
fwait
push
(bad)
and
pop
adc
retf
jae
clc
dec
inc
jb
adc
adc
lods
add
aad
fld
push
add
fld
cmps
pusha
jmp
ja
xor
mov
scas
inc
retf
mov
aas
inc
std
push
xchg
add
sahf
mov
jae
fistp
test
and
fidiv
cmp
jne
push
jmp
enter
cmc
lock
movs
pop
data16
add
retf
loope
ss
test
or
adc
add
dec
mov
mov
das
mov
and
pop
cmp
mov
pop
mov
inc
push
add
push
fdiv
xor
mov
xchg
adc
dec
sti
xor
test
sub
rcl
xor
xlat
(bad)
xchg
and
sub
mov
push
outs
cli
imul
fist
stc
(bad)
lahf
js
popa
std
sub
add
xchg
mov
mov
shl
mov
and
aam
fs
mov
call
rol
or
clc
mov
cld
cli
add
mov
lea
mov
mov
add
push
fild
ss
(bad)
(bad)
mov
aas
outs
xlat
and
cmps
je
jne
xchg
or
sbb
xchg
dec
data16
(bad)
pop
sar
or
jp
fwait
lock
ret
push
or
xchg
xor
xchg
pop
jae
mov
xor
mov
cmp
mov
fstp
cmc
jecxz
xchg
ins
and
cwde
pushf
dec
dec
mov
int
lods
div
js
ret
aad
sbb
popa
rsm
cmps
in
inc
xor
mov
xor
fnsave
repz
xor
mov
mov
sti
add
inc
sti
lods
into
shl
in
fnstsw
jmp
inc
fcomip
movs
popf
xchg
imul
pusha
arpl
in
in
stos
mov
out
push
cli
push
and
mov
and
cwde
add
adc
xchg
sbb
dec
imul
dec
and
push
sub
retf
pop
pusha
bound
sbb
jbe
aam
xchg
jb
mov
shr
outs
mov
sbb
and
add
dec
mov
mov
outs
cmp
into
leave
sub
or
call
out
push
mov
mov
int3
cmp
jmp
or
stc
lock
sub
adc
cwde
sub
leave
lock
(bad)
call
test
out
xor
mov
and
scas
push
dec
lods
or
xchg
jecxz
test
and
retf
out
daa
mov
movs
loop
pop
mov
arpl
push
cdq
sar
out
cmp
pop
sti
add
cmp
push
inc
pop
shl
and
jno
adc
int3
ins
rcr
popf
loop
ja
jns
(bad)
inc
lods
pop
(bad)
aaa
outs
jne
out
add
dec
xchg
sbb
inc
ss
mov
mov
mov
retf
cmp
sbb
mov
adc
call
mov
xor
loop
(bad)
sub
ja
out
ins
push
movs
and
pop
pop
pop
mov
sub
xor
adc
dec
fiadd
jnp
das
ds
push
or
dec
push
call
aad
repnz
pop
xlat
mov
adc
test
xor
pop
and
rcr
iret
add
mov
int3
or
enter
jmp
xchg
mov
std
pop
xchg
xor
out
fsqrt
jbe
sub
aaa
xor
nop
bound
pop
push
mov
jle
in
lock
ret
scas
sbb
out
xchg
gs
push
lods
mov
mov
mov
push
push
cmps
mov
inc
fdivr
mov
jle
fbld
scas
js
stos
add
inc
iret
inc
dec
leave
movs
mov
sub
and
dec
jns
adc
sti
sti
je
pop
data16
jle
out
inc
cmp
jmp
mov
int
fidiv
lods
scas
sub
add
movs
cmp
jne
mov
sub
sub
idiv
jno
les
(bad)
and
pop
dec
in
or
inc
adc
mov
pop
repnz
inc
stc
adc
pop
jl
fbstp
or
cs
jmp
mov
stc
std
(bad)
sbb
loop
pop
int
dec
shr
jb
jge
xchg
(bad)
imul
cwde
push
or
lds
push
ins
push
add
mov
pusha
sbb
xchg
outs
ss
test
fs
push
add
fs
in
dec
fwait
jne
mov
pushf
add
pop
push
inc
fcomp
add
xchg
in
sbb
scas
not
(bad)
sbb
inc
fistp
jp
ret
pusha
or
iret
pop
ror
das
adc
push
xchg
mov
jne
aam
push
inc
out
addr16
das
mov
jnp
push
xor
cs
loopne
test
and
mov
adc
mov
push
not
push
push
sbb
push
fldcw
inc
or
lds
data16
jno
pop
or
retf
or
icebp
sub
rol
(bad)
adc
pop
or
push
ret
sbb
retf
pop
das
test
or
scas
test
inc
jle
inc
in
mov
sub
popa
mov
aam
test
loope
fisubr
scas
push
push
pop
push
(bad)
nop
popa
stos
cmp
or
das
les
jmp
pop
sub
aad
idiv
je
popf
dec
das
addr16
jae
fwait
pop
leave
adc
mov
or
dec
pop
movs
sub
mov
add
xor
cmp
mov
mov
dec
loop
jnp
les
arpl
cmps
xchg
dec
es
mov
pop
mov
imul
pop
repnz
mov
dec
es
mov
iret
in
bound
mov
(bad)
pop
push
ficomp
(bad)
repz
loope
mov
mov
jecxz
lods
jbe
pop
les
push
retf
inc
(bad)
lods
(bad)
push
(bad)
stos
repnz
pop
pusha
mov
cs
mov
fs
pushf
jo
int3
and
gs
pavgb
xor
bound
cmc
cmp
mov
cld
mov
test
add
retf
fsub
movs
pop
jecxz
mov
imul
test
or
mov
movs
fsub
push
sti
xchg
imul
sbb
or
cmc
mov
cdq
pop
scas
mov
fcom
jno
mov
cwde
mov
jb
or
loopne
xchg
scas
mov
shl
cmp
daa
sub
sub
jmp
adc
(bad)
push
mov
xchg
adc
mov
or
jge
xlat
mov
xor
cmc
loope
data16
out
and
fbld
out
push
ja
cmps
sar
cmc
je
mov
loop
cmps
push
leave
(bad)
fucom
fst
test
mov
mov
(bad)
call
shl
sub
js
int3
bound
jle
test
mov
pop
call
enter
sti
out
dec
sub
fdivr
mov
arpl
pop
push
add
mov
inc
mov
fadd
cli
adc
aas
cmp
dec
stos
stc
call
sub
pop
pop
and
shl
leave
ins
(bad)
cli
popa
into
jno
or
fsubr
inc
fiadd
xor
les
mov
mov
xor
or
mov
pop
xor
cmp
dec
js
mov
adc
push
xor
adc
xchg
mov
or
sbb
pop
pop
mov
cli
sbb
arpl
cmp
xlat
call
cli
(bad)
mov
inc
mov
les
mov
add
cs
mov
dec
mov
cdq
pop
popa
mov
mov
leave
stc
in
mov
fidiv
in
in
push
add
and
test
bound
add
rcl
fldenv
mov
cmps
pop
jmp
mov
(bad)
inc
jge
pop
add
inc
pushf
ins
sbb
daa
fimul
test
push
xchg
stos
nop
rcr
(bad)
jge
add
and
lock
push
push
mov
call
sbb
adc
ss
cmp
jge
or
stos
mov
js
jo
push
out
xchg
inc
inc
push
retf
fld
dec
xchg
pop
inc
rol
std
mov
fidivr
xchg
and
xlat
mov
(bad)
nop
aaa
dec
adc
daa
jg
inc
sbb
pop
pop
lock
push
xor
lock
js
cmp
cmp
std
mov
in
dec
das
sti
inc
pop
pop
or
sbb
sar
mov
push
xchg
pushf
js
les
pop
adc
dec
xchg
cdq
jp
sbb
push
push
idiv
pop
xor
mov
pop
cdq
mov
in
xor
mov
jno
xchg
cmps
sub
ds
sti
push
mov
xchg
xchg
sbb
pop
add
(bad)
loopne
push
dec
daa
xor
and
add
(bad)
pop
shl
inc
sub
lock
and
mov
ja
les
lahf
cmc
repz
test
lods
shr
mov
cmps
sbb
(bad)
or
in
(bad)
fiadd
inc
mov
jecxz
mov
(bad)
out
aad
sub
repnz
mov
jl
stos
bound
mov
imul
pop
aaa
pop
pop
lods
fnsave
cmc
cs
or
rol
sub
jmp
test
cmp
ret
test
jno
js
rol
pop
inc
sbb
jmp
out
ins
mov
out
add
xchg
cvtps2pd
rol
cmp
add
idiv
pop
les
or
retf
push
loopne
and
fist
fwait
mov
movs
lock
push
stos
int
js
add
push
mov
mov
fnstsw
mov
ss
push
jg
jge
mov
loop
into
fsub
and
dec
dec
test
jno
xchg
sbb
dec
and
sub
cmps
ss
add
sbb
push
fsubrp
or
popf
inc
push
sahf
xchg
popf
mov
mov
popf
add
ins
ins
ret
jmp
sahf
jns
cmp
imul
pop
xor
and
les
fild
js
jge
scas
cs
test
pusha
jb
jl
xchg
mov
aaa
push
es
sbb
mov
jmp
sahf
jns
or
nop
(bad)
test
cmps
sub
mov
jnp
mov
jmp
add
hlt
loop
sti
fcom
jb
ins
cmp
add
pop
pop
dec
adc
jle
xor
mov
xchg
and
enter
ret
outs
in
stc
jge
or
popa
fsub
push
dec
dec
div
jae
retf
call
movs
inc
cmp
sub
cld
add
mov
xor
cli
add
scas
out
cmp
xchg
pop
jg
jb
sub
cmp
mov
repz
leave
pop
add
sbb
push
movs
xchg
mov
adc
or
mov
pop
xor
(bad)
repz
pop
repnz
inc
mov
dec
xor
(bad)
mov
mov
adc
test
jmp
pushf
ins
call
call
fwait
dec
cmps
adc
jp
jbe
and
xchg
call
push
scas
inc
out
cdq
lea
or
inc
call
sbb
mov
lds
cs
ins
xchg
mov
loope
dec
in
dec
adc
outs
popa
push
adc
ins
mov
pop
and
inc
popa
cld
out
addr16
mov
idiv
test
iret
ins
retf
fsubr
and
in
jmp
popf
mov
sbb
out
cmp
sbb
clc
inc
imul
packuswb
fst
jns
fld1
call
jb
arpl
imul
imul
fadd
lock
das
xchg
mov
aaa
sub
cmp
fsub
rol
ja
stos
loope
mov
add
and
pop
jecxz
sub
stos
rcr
iret
loope
movs
gs
push
leave
rol
or
sub
fs
mov
pop
add
jge
pop
fcmovnb
shl
(bad)
test
das
dec
pop
mov
cmps
(bad)
jmp
dec
mov
aad
xchg
mov
(bad)
sub
pop
xlat
out
push
or
push
cmps
mov
sahf
push
mov
and
inc
sub
into
jmp
mov
mov
push
mov
movs
nop
cdq
xchg
dec
cmp
push
pop
dec
sub
or
addr16
lea
and
imul
pop
ins
fs
mov
and
(bad)
out
rcl
mov
in
daa
mov
jmp
push
call
stos
enter
jmp
xor
aam
or
sbb
pop
jo
xchg
call
push
pop
fdivp
cs
leave
popa
dec
repnz
xor
(bad)
fldenv
movs
dec
xor
fidiv
sub
into
fs
jns
jns
dec
pop
loop
or
loop
std
pop
(bad)
out
sbb
(bad)
pop
in
repz
mov
imul
add
xchg
jl
(bad)
or
js
iret
sahf
dec
dec
call
xchg
push
aas
mov
iret
and
test
push
(bad)
adc
add
inc
aaa
ror
dec
mul
inc
fldcw
inc
sbb
push
xlat
imul
int
jns
adc
xchg
fnsave
out
and
test
not
pop
xchg
je
jecxz
popf
sub
test
inc
cmp
xor
test
shl
cmp
fimul
fisttp
fadd
adc
mov
push
push
jmp
jb
mov
xchg
fbld
jmp
and
mov
imul
out
and
pop
pop
dec
fld
fwait
pop
lahf
(bad)
xchg
fcomp
mov
iret
mov
cmp
test
gs
cmp
cs
add
(bad)
out
lods
jle
xchg
int
xor
jle
mov
call
mov
fisttp
hlt
push
mov
sub
in
retf
out
mov
fimul
loopne
out
xor
cli
pop
or
test
(bad)
jnp
cmp
inc
ja
aam
dec
mov
imul
test
mov
xchg
es
cmp
into
icebp
sub
jns
gs
inc
sbb
in
es
out
jbe
xor
push
fcomp
mov
movs
(bad)
jnp
xchg
mov
fbstp
jg
clc
mov
hlt
xchg
ss
ss
rol
aam
mov
push
cmp
dec
cwde
mov
push
add
pop
int3
sar
mov
mov
pop
call
fcomp
xlat
test
adc
lods
ins
push
aad
mov
(bad)
xchg
xchg
imul
dec
mov
dec
rcr
pop
push
pop
aas
jnp
into
mov
imul
sar
out
push
jnp
xchg
adc
retf
adc
popf
retf
xor
mov
rol
sti
push
push
xor
enter
push
cmp
into
gs
(bad)
jb
dec
fs
fwait
adc
push
loop
pop
sub
mov
in
jns
out
ss
popa
clc
imul
into
movs
xchg
add
test
xchg
loope
nop
imul
or
or
jno
inc
jne
or
push
dec
push
loop
cli
out
xchg
push
retf
daa
movs
cmps
xchg
js
mov
into
enter
inc
adc
jnp
inc
icebp
stos
rol
test
lahf
setle
mov
jmp
ins
mov
lahf
daa
bnd
loop
mov
xchg
ret
cmps
add
sub
fisttp
push
pop
adc
adc
cwde
xor
ds
adc
pusha
push
mov
mov
stc
mov
mov
pop
dec
sbb
or
loope
out
in
hlt
pop
xlat
test
cmps
jmp
sar
push
inc
and
sub
outs
mov
add
inc
dec
or
repnz
dec
sub
add
mov
push
pusha
das
sbb
lds
adc
les
xor
ror
jae
retf
dec
shr
or
rcr
aad
dec
mov
jp
push
dec
(bad)
std
loop
mov
cdq
pusha
cmp
adc
test
adc
mov
pop
sbb
loopne
dec
rcr
inc
mov
pop
xchg
jb
out
add
lahf
je
push
mov
sub
enter
pop
enter
cmps
mov
add
mov
test
xchg
xchg
adc
fst
push
or
(bad)
ror
or
fmul
or
push
xchg
call
mov
leave
imul
div
push
jbe
lea
jnp
fnstsw
mov
inc
scas
inc
test
and
jmp
(bad)
popf
push
sbb
aad
shl
cmp
cs
ja
xchg
sar
xchg
mov
cmc
shl
int
add
je
inc
jmp
dec
dec
adc
in
hlt
dec
das
cmp
je
iret
push
sti
mov
inc
dec
push
frstor
stos
xchg
mov
jbe
fild
cmps
mov
jbe
xchg
cli
ret
lods
enter
data16
cmps
adc
sbb
pop
and
push
and
ret
pop
inc
enter
stos
jmp
repnz
jmp
xor
loope
xor
mov
cs
enter
xchg
ja
(bad)
jl
sub
loope
aas
fild
inc
sub
push
(bad)
cld
cdq
pop
mov
hlt
lods
lahf
xchg
dec
ins
push
mov
dec
xor
or
xchg
dec
gs
enter
push
and
adc
retf
jmp
neg
ror
enter
iret
gs
mov
dec
sbb
add
xor
in
xacquire
std
sti
inc
add
mov
jbe
xchg
push
sbb
push
jns
jns
sbb
clc
fdivr
shr
cmp
mov
mov
xchg
stos
mov
cmp
addr16
xchg
add
cmc
push
jmp
repz
mov
push
imul
cmp
stos
ss
xchg
or
jge
mov
add
sbb
and
pop
sub
(bad)
jo
out
pop
mov
scas
loopne
bound
shr
ret
movs
push
or
pop
xor
aad
ss
arpl
repz
dec
dec
mov
push
xchg
(bad)
lods
call
or
movs
and
pop
pop
or
idiv
(bad)
and
icebp
add
mov
call
jns
push
stos
dec
inc
mov
sub
mov
out
cmp
in
fsubr
clc
sbb
enter
fs
mov
dec
fbld
mov
pop
(bad)
scas
out
mov
and
push
clc
mov
sbb
ret
shl
int
mov
icebp
sub
cli
jb
std
sbb
inc
dec
fbld
in
add
add
cli
fnstenv
fnsave
int3
call
and
pop
iret
pop
or
xchg
push
sub
jg
imul
fnstsw
aam
pop
ret
arpl
mov
xchg
inc
nop
cmps
add
popf
jo
pop
mov
clc
jg
test
in
jno
pop
sub
pop
jge
cwde
out
mov
mov
xchg
mov
lahf
jmp
adc
test
mov
call
leave
dec
add
shl
int3
sbb
js
inc
jecxz
mov
xor
rcr
stc
xchg
rcl
fcmove
add
aad
xor
xchg
inc
cs
xor
popa
retf
pop
cmp
das
sbb
scas
sub
lds
add
push
mov
lods
and
stos
jne
sub
and
scas
aad
push
pop
adc
xchg
pop
cmp
call
jno
add
dec
xor
clc
nop
adc
xchg
jp
push
sahf
mov
fdivr
push
xor
test
fld
addr16
enter
retf
stc
out
mov
inc
inc
cmp
inc
movs
imul
inc
repz
ret
sbb
add
mov
mov
and
mov
push
loop
push
leave
stos
and
and
scas
sbb
sub
mov
das
out
adc
sub
adc
push
cld
data16
and
in
aad
jno
jg
scas
jg
mov
ror
sub
cmps
shr
xchg
push
xor
mov
xchg
fdivr
and
and
jo
rol
sub
or
outs
mov
sbb
inc
jmp
pusha
neg
jno
sar
sub
push
popa
cmps
test
clc
sbb
pop
push
es
daa
and
jb
inc
xchg
cs
ret
and
cmp
in
xor
add
adc
movs
sub
xchg
push
mov
jae
ret
add
shl
repz
js
sub
sbb
popf
sub
jge
xchg
addr16
rcr
out
out
or
inc
push
mov
and
daa
es
pop
cmp
sar
fimul
pop
sub
sets
dec
repnz
lea
mov
scas
pop
mov
add
inc
cmp
jmp
retf
push
mov
dec
cld
push
(bad)
xchg
popa
loop
cmp
jo
mov
cmp
adc
and
pop
fisttp
mov
daa
adc
add
mov
fbstp
and
jmp
lods
mov
cmp
mov
jmp
cmp
mov
push
aam
ds
xchg
test
jae
ds
pop
cld
out
idiv
push
mov
mov
cmp
(bad)
add
out
fmulp
mov
mov
retf
mov
sub
pop
popf
gs
mov
loop
and
and
pop
vhaddpd
xchg
movs
into
js
icebp
sbb
das
cmp
xchg
xchg
cmp
cmp
cdq
cwde
add
and
cmp
fist
sbb
lods
jns
xchg
imul
daa
jl
cwde
jp
les
xchg
pop
lods
aad
imul
push
add
fild
popf
sub
mov
movs
mov
and
jge
sbb
cld
xchg
adc
mov
or
and
add
test
pop
cmps
sub
movs
enter
sub
lock
ins
js
gs
xor
dec
inc
jns
xchg
jmp
pop
and
out
inc
lods
fs
ret
lods
cmp
out
xor
ins
jno
(bad)
inc
cs
jl
daa
push
xchg
imul
jecxz
adc
adc
add
pushf
ja
jmp
jecxz
mov
js
inc
nop
cmc
sbb
xor
imul
mov
pop
xor
fild
push
arpl
call
cvtdq2ps
mov
or
repz
pop
shr
push
push
xchg
or
push
pop
jno
hlt
sub
mov
or
cmp
xlat
outs
nop
mov
int3
imul
in
lods
xchg
ins
cmp
fsubr
and
je
pop
sar
fnstenv
adc
jecxz
jl
ss
mov
push
mov
test
aaa
scas
mov
rcl
jge
jns
sbb
(bad)
and
sbb
jbe
test
xor
push
lock
lahf
js
cmc
mov
mov
sahf
jb
fcmovbe
out
and
adc
popf
adc
jge
(bad)
movs
or
movs
or
mov
cwde
inc
and
pop
xor
push
xor
mov
adc
pop
or
xchg
hlt
mov
int3
cwde
cmps
gs
jnp
cmps
or
pop
jmp
scas
cli
cli
out
xor
sub
aaa
outs
pop
iret
xor
dec
add
sbb
mov
dec
data16
xor
cdq
cdq
push
inc
fild
arpl
pop
cs
push
cmp
stc
aas
push
jo
das
mov
popfw
popa
loope
shr
jmp
loopne
jo
mov
cdq
push
retf
int
repnz
comiss
cmp
hlt
add
lods
sub
repz
cmp
xor
loopne
add
cwde
sub
fwait
iret
jg
retf
sar
fmul
mov
cmps
out
(bad)
gs
pop
cmc
pop
(bad)
sub
xchg
pop
(bad)
jns
aas
sub
cmp
jb
scas
adc
idiv
mov
mov
dec
fs
int3
xor
jae
ss
jecxz
or
rol
test
push
adc
dec
icebp
out
push
ret
cmp
xchg
ret
sub
fs
test
jb
cs
shr
dec
movs
sbb
in
mov
fiadd
ja
mov
inc
ins
xchg
enter
jecxz
cs
scas
enter
xchg
push
xchg
into
mov
dec
mov
nop
push
daa
cmp
pop
inc
and
lods
sub
cmc
or
push
or
retf
dec
push
xchg
jle
les
scas
in
cmp
repz
lods
sbb
nop
hlt
dec
icebp
aad
inc
(bad)
out
or
mov
fist
out
cmps
retf
cmp
clc
mov
push
in
rol
out
repz
test
inc
mov
jg
pushf
idiv
addr16
scas
xor
sub
push
in
xchg
fld
pop
fist
xchg
adc
xchg
jmp
cmp
mov
popa
mov
mov
dec
pop
jg
fs
and
ins
and
jl
lahf
add
mov
pop
mov
or
in
in
cmp
arpl
sti
xor
repz
iret
hlt
push
dec
outs
ret
sbb
imul
add
jg
push
in
fist
mov
add
sbb
xchg
mov
push
fwait
sahf
cmp
retf
xchg
xlat
add
movs
and
ins
push
into
push
fnstenv
adc
push
clc
and
pop
adc
sbb
shr
sbb
test
xchg
add
(bad)
jbe
mov
fidivr
or
sbb
xor
leave
fdivrp
xor
addr16
inc
(bad)
cmp
cs
mov
or
mov
xchg
out
cmps
int3
(bad)
jmp
popa
nop
xor
(bad)
or
lds
dec
and
dec
loop
(bad)
xchg
cli
movs
outs
fst
fst
pop
lea
mov
and
cmps
xor
ins
fdiv
lahf
scas
pop
mov
mov
ret
lods
fdiv
ror
mov
or
into
jno
es
sbb
rcl
push
fnsave
pop
shl
pop
add
ins
loop
pop
shl
inc
cmp
mov
daa
inc
push
jmp
(bad)
mov
retf
mov
jp
jp
hlt
in
add
pusha
ins
fisubr
addr16
add
test
fstp
cld
mov
xor
jl
jge
ror
cmc
jg
dec
jns
daa
add
sbb
jle
in
aam
cmps
daa
xor
adc
xchg
ins
movs
fs
fld
cli
out
hlt
mov
pop
scas
xchg
or
xchg
outs
adc
stc
xchg
adc
add
adc
das
sti
jnp
jmp
xchg
adc
mov
or
pop
jp
pop
repz
out
cwde
cld
mov
adc
jg
add
mov
cmp
dec
fs
cmp
dec
xchg
retf
ror
ret
(bad)
adc
add
stos
test
dec
call
loopne
xor
jns
je
fbstp
add
xchg
ret
push
(bad)
aad
adc
jno
fcom
add
aad
dec
sbb
(bad)
repnz
sub
scas
ret
into
pop
xor
sbb
leave
mov
mov
lea
daa
js
pop
scas
fs
jmp
inc
je
stos
dec
jno
mov
add
dec
pop
jb
jecxz
rcr
and
addr16
and
dec
daa
mov
loop
push
push
rcl
std
jmp
ficomp
lock
sbb
xor
ins
push
or
outs
adc
mov
sub
pop
jle
ror
repnz
scas
sub
or
jae
scas
rcr
jne
sbb
pushf
inc
ficom
adc
addr16
xchg
cmp
in
xchg
loopne
push
push
dec
lea
test
rcl
inc
fcmovne
jnp
sbb
ret
js
fwait
or
xchg
leave
push
dec
and
push
jb
and
fbstp
pop
mov
bound
jbe
xchg
(bad)
xchg
sti
cwde
mov
dec
inc
pop
or
sub
bound
cmps
sar
mov
xor
jo
cli
dec
inc
sub
and
jne
mov
inc
mov
enter
jecxz
jp
std
mov
add
popa
cmp
test
xor
fcmovbe
xchg
dec
jb
ins
movs
aam
xor
mov
cwde
fcmovu
cld
mov
add
push
sbb
sti
pop
mov
test
sub
inc
pop
dec
sub
mov
jmp
mov
pop
inc
xchg
std
lods
cld
fistp
jle
push
mov
push
test
std
cwde
sbb
arpl
les
jp
add
movs
jle
loopne
pop
dec
stos
inc
cmp
fnstsw
(bad)
call
jb
rcl
fstp
lock
or
(bad)
mov
shl
in
out
add
jl
lods
sbb
(bad)
push
aad
inc
mov
mov
dec
mov
and
enter
cmps
ficom
sbb
sub
scas
fst
iret
fmul
lock
jno
ss
mov
jecxz
cmp
mov
fisubr
mov
ds
add
jne
mov
fldenv
std
mov
call
mov
inc
daa
inc
std
xchg
mov
push
dec
mov
icebp
(bad)
movs
nop
sub
sti
dec
jmp
pop
mov
fnstsw
push
repnz
push
test
mov
mov
mov
cmp
xor
mov
xor
cmp
push
neg
mov
les
xchg
add
inc
jne
gs
cmps
push
xchg
fnstsw
cld
iret
mov
xor
stos
js
adc
xchg
cli
aaa
out
sub
sbb
movs
xor
adc
mov
daa
(bad)
call
test
mov
inc
shr
fnstsw
dec
xor
sbb
sbb
test
mov
mov
xchg
and
sub
mov
mov
rcl
cmp
jmp
dec
ret
cmps
dec
stos
push
fs
int3
ins
stos
or
push
mov
lock
mov
xor
jmp
mov
adc
stos
cli
sub
and
jo
cmp
mov
adc
sub
push
pop
es
add
mov
lods
add
dec
test
jo
push
ficomp
xor
aas
nop
rol
xor
xchg
je
adc
sub
jmp
rol
jp
and
fistp
bound
xlat
sub
sbb
shl
out
jmp
add
mov
andnps
rcl
sbb
push
cli
jno
popf
xchg
js
mov
mov
out
lahf
jbe
dec
cdq
inc
jae
adc
call
adc
push
or
retf
mov
fst
dec
aad
or
mov
les
outs
mov
js
repz
sub
xchg
jge
pop
es
push
sub
inc
mov
fmul
jbe
lods
ret
push
adc
imul
pop
movs
cdq
xchg
movs
add
xor
sub
dec
inc
sub
dec
sbb
test
popf
or
push
into
or
addr16
test
mov
push
sub
add
loope
push
loop
jmp
loopne
mov
icebp
popa
fisubr
xlat
and
popa
jmp
je
mov
lods
dec
scas
mov
pop
dec
mov
in
or
sub
test
clc
push
ja
leavew
div
and
sbb
sbb
repz
mov
dec
test
int
neg
ds
sbb
or
adc
xchg
shl
add
sub
int3
fiadd
loope
adc
add
pop
stos
jecxz
mov
add
lea
cmp
cmp
or
pop
pop
outs
pop
fxch
scas
mov
xor
push
xchg
or
in
mov
ins
data16
dec
rcl
sub
fsubr
stc
xchg
ret
data16
xchg
outs
dec
test
sub
adc
(bad)
jmp
pop
dec
and
cmp
pop
out
pop
jne
cmp
xchg
bswap
popf
ds
sti
push
pusha
test
inc
add
in
pop
(bad)
fcos
sbb
aam
nop
outs
pop
pop
add
out
into
cwde
out
xlat
pop
push
pop
ret
xchg
lea
jo
jno
imul
adc
jp
es
sbb
pop
adc
cmp
push
xor
popf
mov
xchg
push
dec
stos
dec
and
imul
(bad)
int
cmps
dec
adc
fnstenv
cmp
lods
test
lock
dec
mov
rcr
xchg
sub
pushf
(bad)
xor
dec
ret
lods
and
ja
retf
in
push
in
cmp
pop
in
int
mov
je
fdiv
mov
xor
add
mov
inc
fmul
(bad)
outs
int3
sbb
jns
sub
mov
xchg
test
outs
add
and
stos
mov
jmp
and
fdiv
ins
fbstp
sbb
dec
retf
in
jns
and
loope
xor
popf
dec
mov
shl
jp
cs
sub
jb
loop
mov
stos
or
xlat
mov
js
clc
in
imul
lock
sub
clc
mov
fnstcw
cld
das
ss
sbb
movs
(bad)
sub
add
scas
or
es
imul
enter
(bad)
push
fisubr
mov
jb
nop
mov
cli
mov
and
dec
cdq
cmp
and
call
test
in
shl
sub
daa
repz
in
fsub
div
ss
das
jmp
cmp
adc
adc
xor
adc
cmp
push
mov
movs
scas
sbb
add
inc
mov
adc
jge
xor
enter
or
mov
cs
and
mov
cmp
mul
xchg
mov
mov
imul
outs
int3
mov
mov
ror
es
mov
pop
adc
imul
pop
js
and
mov
cdq
stos
jl
(bad)
mov
retf
push
cli
and
xor
das
pop
in
(bad)
or
or
cld
movs
mov
mov
fdiv
scas
loope
mov
movs
(bad)
loopne
pusha
push
test
and
add
mov
dec
icebp
data16
cmp
xlat
out
mov
fild
popf
xor
dec
pop
cli
mov
cdq
leave
mov
xor
addr16
neg
leave
shl
dec
in
pop
push
into
cwde
aad
or
mov
(bad)
fadd
das
jbe
push
sub
adc
lods
movhps
out
sub
and
push
dec
(bad)
js
adc
pop
les
pop
rol
pop
pop
test
push
pop
ret
jle
sub
pop
mov
jl
sahf
pop
jle
imul
aad
popf
lods
pop
adc
cs
mov
jns
shr
adc
sar
push
retf
jae
push
mov
xlat
pop
xor
iret
shr
mov
div
js
(bad)
mov
loope
cwde
mov
xchg
loope
jmp
dec
pop
movs
cmc
ins
ins
pop
cmp
in
mov
push
pop
xchg
xchg
outs
jmp
rcr
jp
int
jne
cli
push
mov
dec
aas
jno
fst
call
push
cmp
mov
jge
pop
xlat
pop
push
push
sbb
xlat
ss
cmps
es
out
cld
cmp
out
sti
ds
adc
and
or
stos
addr16
add
inc
jmp
add
shl
jge
sahf
push
lods
stos
hlt
sbb
daa
repz
imul
movs
and
repz
std
push
pop
test
xchg
shr
scas
xchg
(bad)
nop
cwde
mov
loop
lods
int
jno
clc
sbb
mov
mov
arpl
fcomp
sub
mov
pop
fistp
enter
movs
mov
pop
mov
sbb
jo
shl
xor
mov
ja
cli
fisttp
xor
add
pop
retf
jecxz
(bad)
(bad)
test
hlt
xor
add
jae
inc
gs
sahf
addr16
fnstenv
mov
stos
test
je
repz
cwde
hlt
xor
or
gs
add
adc
sbb
dec
div
or
call
pushf
enter
loop
cmp
dec
cdq
stc
mov
and
jmp
jmp
add
out
hlt
push
add
icebp
cwde
or
iret
clc
jne
pusha
dec
stos
js
mov
add
les
comiss
fcmovne
mov
loope
pop
ror
push
sbb
inc
or
cdq
fs
sub
aaa
std
xchg
fisttp
mov
jmp
mov
sbb
cmp
mov
cmp
dec
jo
mov
xchg
clc
or
lods
push
xchg
or
sub
pusha
dec
mov
gs
in
(bad)
in
call
pop
test
adc
adc
enter
sahf
test
stos
iret
inc
ret
loope
sbb
push
inc
pop
add
(bad)
popa
jne
xchg
mov
add
sti
aaa
jbe
cmps
das
inc
adc
out
mov
jg
ret
mov
pop
sbb
cmp
pop
pop
mov
fwait
xor
and
popf
punpcklbw
sbb
test
(bad)
sbb
cmc
dec
mov
pop
clc
mov
imul
shl
cmp
arpl
(bad)
jb
sbb
jle
push
add
mov
movs
jo
loop
mov
test
cmps
pop
out
rol
shl
stos
mov
out
cmp
and
leave
pop
add
test
adc
gs
in
fwait
sbb
push
xchg
cmps
mov
scas
or
lods
pop
inc
stc
repz
dec
sub
clc
jp
neg
shl
cmp
es
sub
sbb
hlt
les
mov
jp
shl
aad
das
pop
test
sub
mov
or
push
lods
lods
sub
daa
xor
xchg
cmp
inc
test
jae
mov
dec
aas
mov
(bad)
fnstsw
xchg
mov
xor
mov
stos
outs
ret
pop
bound
push
dec
loopne
je
cmps
enter
sub
mov
loopne
dec
mov
out
jns
mov
push
mov
cwde
mul
loop
stc
mov
or
push
movs
sub
(bad)
int
mov
and
les
pop
mov
lea
popf
mov
push
push
rol
inc
dec
xchg
xchg
adc
repz
and
mul
and
loopne
cmps
jmp
push
in
xor
mov
xchg
loope
inc
movs
add
int3
into
frstor
lods
sbb
jnp
popa
inc
stos
xchg
pushw
stos
(bad)
lahf
jne
xor
ja
jo
jp
inc
ss
or
pop
cld
mov
jp
pop
jmp
xor
popa
fldcw
iret
push
jp
imul
shr
adc
dec
jne
(bad)
inc
int3
push
cmp
mov
cld
sbb
dec
int
adc
pop
cmp
fst
fimul
inc
nop
sbb
shl
sub
out
jnp
pop
push
retf
or
jmp
in
pop
iret
xchg
mov
push
jnp
xchg
sbb
add
sub
mov
sbb
or
jge
sti
mov
popf
pop
or
mov
mov
mov
(bad)
jmp
cmc
int
test
(bad)
imul
rcr
or
mov
movs
call
adc
or
dec
mov
mov
xchg
push
sub
(bad)
mov
fsubr
mov
sub
movs
icebp
xor
fs
xchg
jecxz
xchg
movs
sahf
adc
jne
xchg
mov
int3
lahf
add
or
(bad)
pushf
mov
sbb
xlat
and
pop
jo
inc
popa
loopne
xchg
sbb
jae
mov
scas
jmp
add
lock
(bad)
mov
pop
int3
dec
mov
popf
sbb
push
push
dec
pop
inc
(bad)
pop
lock
xchg
nop
call
jp
xor
inc
cli
mov
call
dec
xchg
aad
sahf
(bad)
loopne
lods
sbb
or
mov
gs
mov
sub
stos
sub
mov
(bad)
loop
dec
in
inc
sbb
push
or
cmps
dec
sub
lahf
das
and
daa
lds
cmp
mov
mov
mov
hlt
xor
add
jnp
dec
cdq
push
mov
and
mov
sti
inc
cmp
xchg
push
addr16
mov
jle
sbb
cmp
and
mov
jo
ret
push
push
inc
xchg
add
lods
loope
sbb
or
(bad)
pop
xchg
sub
loope
mov
aad
imul
cli
aad
mov
dec
push
ror
mov
fnstenv
or
xor
sub
sbb
imul
xchg
fidivr
mov
pop
dec
xlat
out
pop
sbb
leave
sbb
lahf
sbb
loopne
lea
jo
cmp
loope
in
enter
and
xrstor
iret
jmp
xor
xor
stos
mov
int3
cmp
inc
retf
sub
rol
es
pusha
imul
or
push
enter
bnd
push
xor
retf
mov
es
sbb
leave
mov
ret
xchg
out
mov
hlt
ins
cmp
cmp
das
dec
cmp
call
or
imul
pop
jle
ffree
popa
pusha
lods
pop
hlt
pop
call
and
in
ja
movs
rol
les
or
push
fst
fcomp
sbb
sbb
test
cmp
xchg
inc
repnz
add
xor
leave
clc
pushf
jb
ja
cmp
mov
dec
cdq
scas
xchg
sub
mov
sub
cld
mov
or
popa
dec
scas
int3
dec
shl
daa
stos
cs
clc
and
add
call
dec
ror
xchg
loope
push
adc
and
xchg
cmps
cmp
inc
sbb
ins
inc
mov
sub
sub
aam
aas
addr16
in
test
jno
sahf
mov
xchg
stc
jecxz
clc
test
mov
aad
adc
stc
adc
jle
fsub
sbb
out
(bad)
int
cdq
test
cmovo
push
aad
ins
(bad)
std
fsub
inc
pop
xor
add
loop
ror
mov
cmps
cmp
stos
xor
leave
jle
(bad)
cli
push
jnp
ja
pop
mov
std
pop
leave
adc
cmp
sub
sub
movs
push
ja
test
rcl
fsub
sub
int3
cmp
cmps
aam
mov
jp
fwait
inc
js
inc
and
test
jg
mov
in
div
mov
cmp
movs
push
call
sar
mov
pop
ret
(bad)
icebp
stos
sub
adc
mov
xchg
pusha
inc
jg
dec
test
mov
jg
jg
cdq
aaa
int3
jnp
inc
fild
cmps
pop
or
iret
cmc
inc
test
jae
arpl
jle
cmp
inc
push
inc
retf
pop
div
je
and
mov
or
lods
sub
addr16
mov
lock
fdiv
js
inc
and
pop
add
adc
jge
loopne
mov
js
rdtsc
jge
loopne
push
pusha
ror
ffreep
add
jle
xchg
(bad)
aam
adc
sbb
xchg
loop
cmps
arpl
popf
adc
push
ins
cmps
inc
sbb
aas
or
push
pop
add
dec
and
fst
sbb
or
out
inc
iret
dec
call
ins
xchg
sbb
dec
out
and
pop
lods
sub
leave
daa
pop
add
jns
fsub
push
cmp
test
imul
pop
lea
imul
jl
sbb
sbb
adc
movs
push
or
stos
mov
inc
sahf
add
fld
repz
aad
rol
pop
mov
shl
sti
jae
rol
lahf
es
add
inc
sub
inc
shl
jnp
test
cwde
mov
push
jecxz
and
std
out
adc
int3
pusha
jge
and
les
imul
loopne
mov
dec
pushf
(bad)
pop
loop
cmp
bnd
xchg
add
(bad)
jne
jmp
inc
sbb
out
inc
xlat
addr16
jl
xchg
mov
xchg
outs
frstor
bound
and
mov
rcr
mov
int3
xchg
inc
les
push
sbb
push
push
ror
mov
cmc
(bad)
mov
iret
mov
and
lds
cdq
retf
shl
loope
ficom
lock
adc
cmps
inc
gs
in
jnp
or
out
test
dec
pop
and
cmp
cmp
or
arpl
popf
push
dec
aas
repz
inc
ror
cmp
mov
xchg
shr
pop
(bad)
call
hlt
sbb
ret
dec
dec
add
inc
mov
pushf
mov
mov
pop
mov
fidiv
shl
sub
and
lea
xor
xor
cmp
(bad)
hlt
shr
in
mov
sub
pop
call
ins
fcmovnbe
dec
icebp
mov
jns
stc
jo
mov
add
cmp
inc
nop
or
sahf
mov
mov
imul
ss
jb
jmp
mov
les
mov
xchg
loope
lods
fld
mov
repnz
rcr
retf
sbb
fist
mov
aaa
aad
aas
sub
movs
lea
sbb
scas
pop
xlat
fwait
shl
ret
daa
fstp
dec
imul
or
push
das
(bad)
adc
push
mov
and
push
mov
push
and
(bad)
pop
aaa
xor
and
data16
jns
mov
jge
rcl
fistp
fsubr
xchg
in
mov
mov
sar
sub
je
stos
sbb
jp
fidiv
fwait
outs
fwait
call
daa
mov
push
lock
xchg
pop
in
cmps
retf
das
add
xor
and
jecxz
xor
inc
push
call
mov
jp
ja
into
mov
adc
or
xlat
ja
jne
push
add
ins
cli
xchg
or
data16
clc
jecxz
jmp
jns
mov
iret
in
popf
and
sbb
adc
cmps
xor
xchg
cmps
xchg
out
in
mov
into
pop
push
inc
loopne
fsub
mov
mov
popa
dec
sbb
rcl
out
sub
(bad)
aad
outs
mov
into
or
pop
mov
inc
in
or
xchg
arpl
xor
pop
lea
pop
inc
jno
sbb
add
add
mov
fisttp
repz
js
add
xor
xchg
mov
mov
out
sub
mov
(bad)
imul
std
fs
fcom
mov
repnz
push
idiv
rcl
inc
add
loope
add
xchg
retf
lahf
outs
frndint
inc
cmp
shl
adc
pop
mov
xchg
cwde
cmp
adc
cmp
ss
(bad)
out
in
imul
push
ret
push
fstp
not
jmp
push
fiadd
push
movs
test
icebp
sub
fstp
loop
fidivr
cmp
jmp
das
mov
test
aas
lds
add
js
rol
mov
jb
ss
fcmovne
mov
and
shr
popf
mov
ret
pop
(bad)
mov
ins
rcr
dec
add
in
dec
or
mov
xchg
dec
adc
pop
inc
inc
mov
(bad)
jo
(bad)
std
sbb
xor
aaa
xchg
push
(bad)
inc
xchg
pop
(bad)
inc
or
adc
movs
mov
and
adc
call
icebp
aaa
mov
mov
scas
test
test
pop
jne
repz
ds
nop
jg
mov
or
mov
cs
inc
out
fcmovbe
loopne
pop
mov
out
add
ss
pop
mov
mov
push
std
jl
xchg
inc
xor
aad
out
xlat
call
or
mov
push
pop
fs
cmp
les
iret
adc
pushf
loope
sbb
mov
xor
outs
aad
mov
inc
cmp
dec
(bad)
mov
jl
popa
(bad)
jmp
loope
and
mov
aas
or
jbe
cld
in
and
out
ins
imul
cmp
mov
inc
sub
addr16
mov
enter
xchg
xor
sub
out
cmps
scas
bound
mov
inc
fdiv
add
fstp
test
push
pop
inc
sub
cdq
push
into
cmps
loopne
sahf
popf
daa
mov
mov
push
inc
pop
out
(bad)
cmp
retf
sub
jmp
inc
call
loopne
mov
and
mov
imul
into
sbb
sub
adc
fistp
ret
fistp
sbb
sub
adc
mov
cmp
sahf
and
sahf
loope
sub
mov
lods
enter
retf
jbe
add
enter
or
loopne
mov
ss
cld
loop
xor
pop
mov
push
mov
xchg
inc
scas
shl
repnz
jae
mov
sar
popf
mov
xor
xchg
jge
sbb
mov
movs
aaa
push
inc
enter
xor
mov
daa
mov
cmp
cld
adc
cmp
sbb
test
dec
or
out
retf
addr16
dec
ror
iret
jp
(bad)
sbb
rol
addr16
dec
mov
ds
pop
test
or
add
scas
leave
add
push
mov
inc
jl
test
inc
stos
arpl
mov
jecxz
(bad)
cmc
sti
adc
out
icebp
or
mov
cli
scas
stc
stos
sbb
sub
sub
push
adc
in
inc
aas
sbb
shl
jg
push
pop
mov
stos
inc
aam
int3
cdq
sbb
or
test
sti
shl
inc
cmp
je
mov
daa
cli
mov
adc
out
imul
in
mov
pop
loope
sub
lahf
mov
cwde
enter
push
and
movs
push
ror
pop
and
inc
or
cmps
mov
jno
aad
loopne
pop
cs
(bad)
cmp
daa
pop
and
loop
push
je
jo
dec
ffree
repz
ds
push
dec
stc
pop
and
sub
push
cmc
(bad)
pop
test
pushf
mov
ret
mov
jmp
hlt
mov
sbb
idiv
xor
sbb
repnz
mov
jp
cmps
dec
adc
(bad)
xor
and
inc
cmp
retf
inc
add
popa
(bad)
loop
jl
pop
mov
icebp
aaa
pop
or
sbb
and
xchg
add
push
loope
adc
xor
scas
dec
adc
retf
pop
mov
push
dec
push
and
(bad)
hlt
adc
xor
leave
ja
into
cwde
(bad)
stc
div
mov
outs
jg
add
int3
add
nop
repz
pop
(bad)
enter
mov
iret
sbb
loope
lods
mov
dec
sub
(bad)
cmp
std
mov
dec
dec
shl
mov
push
ror
mov
(bad)
(bad)
sub
mov
sub
pop
outs
imul
xchg
mov
mov
xchg
or
cmp
lds
dec
scas
pop
mov
mov
(bad)
cmp
outs
jp
fisub
jg
adc
jo
in
push
nop
stos
and
or
sti
shr
aaa
retf
adc
mov
mov
xor
dec
xchg
mov
sub
in
jo
sub
pushf
jcxz
push
mov
jle
dec
pop
adc
push
mov
xor
es
out
adc
pop
mov
mov
add
cmp
pop
inc
pop
pop
hlt
movntps
mov
dec
jg
cmps
and
icebp
mov
out
cmc
add
repnz
jl
pop
out
dec
cli
push
jge
or
rcl
mov
scas
fild
jge
lods
fmul
aad
push
test
ja
or
lods
rcr
pop
jmp
mov
enter
push
sub
jb
jo
retf
push
mov
and
xor
inc
arpl
mov
aaa
mov
mov
lods
adc
(bad)
pusha
sub
mov
inc
mov
adc
fsub
or
dec
mov
mov
pop
in
push
sub
jb
mov
mov
adc
mov
push
lea
pop
fcomip
mov
sbb
pop
out
add
jne
add
sar
or
cmc
xchg
icebp
jp
jmp
jge
cmp
sar
call
lahf
pusha
push
loop
mov
inc
arpl
mov
loop
inc
jmp
test
lock
leave
movs
jge
pop
or
pop
das
add
cmp
mov
mov
mov
out
xchg
jb
rcr
xor
sbb
inc
and
or
xchg
push
les
add
lds
dec
add
lahf
mov
mov
xchg
mov
mov
or
clc
and
inc
xchg
retf
mov
push
shl
cmps
jl
or
add
fxch
inc
lock
ss
js
sar
mov
sub
mov
lahf
sbb
mov
jno
mov
sbb
mov
bound
pop
mov
stos
aas
(bad)
jmp
jne
adc
cmp
xor
mov
ret
hlt
jns
in
cmp
sub
jg
ins
xchg
(bad)
adc
shr
cmp
lea
push
push
mov
cmovp
cmp
test
inc
(bad)
enter
cld
sub
hlt
inc
icebp
test
(bad)
(bad)
jae
shr
popf
shl
out
and
fld
adc
adc
cdq
(bad)
jecxz
enter
or
ins
jo
sti
mov
rcr
test
mov
mov
adc
adc
pop
(bad)
sbb
inc
(bad)
lods
(bad)
jg
fwait
js
aad
cdq
pop
out
mov
cs
and
jno
jle
enter
sbb
xor
mov
popa
dec
inc
fadd
sbb
aas
dec
mov
pop
aam
test
sbb
rol
and
repz
test
out
xor
imul
adc
data16
rcr
pop
out
cs
mov
cmp
cmp
push
dec
or
adc
cmp
mov
jl
xor
cmc
cmps
les
cmp
inc
jno
push
je
add
xchg
inc
inc
out
adc
sbb
fwait
push
add
push
and
push
leave
push
loope
lods
fadd
into
loope
push
call
and
mov
test
jno
push
cdq
xchg
sub
xor
in
push
mov
cmp
dec
nop
cmc
ss
loope
pmaxsw
clc
retf
pop
jl
cmp
mov
mov
movs
sbb
adc
or
lea
call
scas
movs
loop
imul
popf
push
jmp
pop
and
push
(bad)
shr
sub
loopne
add
mov
push
dec
in
xor
outs
mov
push
clc
sub
pop
ss
xchg
mov
arpl
popa
scas
add
adc
push
xor
sbb
mov
fadd
movs
push
push
loopne
ret
jecxz
cwde
pop
mov
mov
ja
xchg
mov
push
pop
test
xchg
mov
test
sbb
adc
xchg
mov
xor
ins
movs
push
call
xchg
push
adc
movs
xor
repnz
xchg
call
cdq
sahf
and
or
cmp
loope
mov
and
push
xchg
mov
fucomip
inc
int3
call
cmp
outs
xchg
stos
shr
mov
jnp
test
in
adc
mov
in
xchg
lahf
sub
(bad)
sbb
adc
mov
adc
or
ja
bound
cmp
push
push
repnz
fnstcw
pop
arpl
push
or
xchg
icebp
inc
push
jb
setge
and
call
aam
sbb
leave
scas
(bad)
cmp
jbe
sar
jmp
or
sar
push
sahf
ja
dec
cmp
cmp
in
lahf
inc
push
sbb
fldcw
cmc
and
dec
ret
mov
popf
mov
cmps
outs
shl
lds
int
add
and
push
mov
xor
cmp
call
sbb
test
fcom
and
call
scas
cmp
je
sar
sbb
inc
dec
sbb
ret
retf
pop
mov
mov
sub
xchg
pop
mov
(bad)
jns
aaa
ror
mov
dec
imul
pop
add
hlt
daa
jmp
mov
adc
xchg
es
and
xor
fst
mov
outs
psubd
and
stos
pop
inc
xchg
fisubr
jns
cdq
xchg
retf
pop
mov
sub
jmp
test
push
or
daa
popa
push
mov
mov
or
(bad)
mov
das
movs
ret
xor
or
xchg
push
add
dec
fwait
out
sti
jns
dec
mov
sub
pop
xchg
push
jg
xchg
cmp
push
add
pop
mov
gs
push
jne
das
mov
imul
jmp
xor
cmps
rol
popa
sbb
mov
outs
in
clc
mov
cmps
loope
(bad)
test
cmp
daa
test
aas
pop
cmp
fiadd
mov
and
push
or
lods
daa
icebp
dec
and
lahf
adc
shl
push
loop
jnp
cmp
or
xchg
shr
mov
or
repz
push
adc
stc
jp
mov
popa
xchg
add
jns
sbb
cmp
sbb
in
pop
popa
hlt
inc
xchg
(bad)
sub
xchg
push
leave
mov
jb
(bad)
in
mov
mov
(bad)
in
sbb
(bad)
jp
push
xchg
shr
hlt
ret
sbb
sar
dec
jp
cli
cmc
sbb
inc
pop
repnz
xor
imul
sub
cmps
xchg
sbb
les
sbb
arpl
stc
push
add
jae
movs
cs
push
pop
xchg
mov
inc
cwde
movs
ret
jb
pusha
or
cmps
jmp
cmc
rcl
xchg
sbb
aad
lahf
xchg
fistp
mov
xor
push
jecxz
shr
sub
mov
pop
cmp
mov
xchg
mov
mov
pop
or
rol
psraw
not
mov
gs
fmul
xor
xchg
mov
and
(bad)
xor
dec
(bad)
loopne
fisttp
xchg
ins
xlat
fcomp
dec
xor
mov
dec
cld
adc
sub
adc
bound
jne
mov
pop
clc
cmp
mov
imul
jb
mov
stc
scas
cdq
das
jb
xlat
test
dec
push
retf
push
push
xchg
(bad)
and
mov
xor
sbb
ins
inc
outs
adc
sbb
sub
add
jg
add
mov
arpl
push
(bad)
cmp
xor
push
mov
push
shl
stos
mov
sbb
push
ret
stos
arpl
add
cdq
mov
inc
sub
pusha
mov
mov
repnz
gs
xchg
and
in
adc
fnstcw
das
das
xor
mov
inc
iret
cmp
mov
push
push
cwde
test
mov
xchg
mov
jae
cmc
into
lods
(bad)
lds
push
or
push
inc
xor
mov
iret
sub
pop
mov
push
out
pusha
pop
outs
popf
cmps
sub
lea
shl
xchg
fdiv
mov
sbb
pop
jge
adc
and
gs
add
aam
jno
aam
out
stos
pop
push
popa
mov
pop
xor
inc
or
bound
mov
mov
sub
xchg
in
aad
dec
stc
jbe
xchg
or
(bad)
in
(bad)
pop
(bad)
cmps
mov
rol
mov
pop
pop
out
cs
cmp
pop
rcl
hlt
mov
inc
push
fisttp
jle
mov
nop
movs
push
mov
lds
outs
cld
(bad)
push
dec
dec
sub
or
lea
adc
mov
pop
sub
push
retf
dec
push
ins
xchg
sbb
sbb
fucompp
shr
mov
jmp
in
pop
in
and
retf
dec
and
int3
pushf
lock
xchg
loopne
adc
xlat
add
fnstcw
jae
sbb
rcl
jl
out
cmp
or
mov
jno
nop
or
(bad)
daa
push
push
sbb
inc
mov
dec
jp
hlt
mov
cmc
test
lods
les
out
push
hlt
dec
aaa
push
push
fcomp
addr16
ds
mov
adc
or
mov
sub
lods
or
call
fidiv
out
lahf
jns
ins
cmc
lods
add
or
push
das
popa
enter
sbb
adc
dec
into
mov
ret
cli
imul
fst
sbb
cwde
lods
inc
ror
jne
cmps
cmps
fmul
bound
xor
ret
add
pushf
enter
xchg
sub
mov
xor
test
loopne
jns
add
arpl
aaa
pop
leave
mov
idiv
xor
leave
push
sbb
jge
and
aaa
mov
call
(bad)
mov
mov
bound
pop
mov
popa
cld
mov
retf
add
adc
stc
or
popa
retf
sub
inc
inc
(bad)
sbb
int
movs
(bad)
dec
lods
add
cmp
clc
scas
cmp
and
adc
pop
pop
cs
lock
pop
ret
jns
mov
or
xor
add
out
xchg
int
sbb
mov
jle
mov
nop
aad
cmp
cmp
mov
dec
cmp
sub
jbe
stos
or
ja
lods
push
into
cmps
xchg
adc
push
arpl
cld
mov
in
neg
sub
inc
es
cwde
push
pop
gs
cdq
jge
sbb
sahf
out
pop
(bad)
cmp
sub
dec
mov
push
jns
or
inc
stc
mov
pop
out
push
mov
sti
call
mov
jl
xchg
dec
sub
dec
or
jge
xor
call
jno
rcl
sar
xchg
push
(bad)
push
push
movs
ret
pop
sub
add
cmc
pop
aas
add
sti
adc
mov
add
cli
mov
aas
push
getsec
xchg
aad
add
jge
cld
stc
pop
cmp
xor
pop
jge
fld
jno
xchg
pushf
mov
mov
in
pop
addr16
test
inc
scas
es
adc
jae
push
imul
dec
add
je
and
and
leave
gs
sub
jbe
fdiv
mov
aas
push
inc
adc
or
int
jo
dec
inc
into
fild
fwait
pop
(bad)
adc
nop
or
jmp
mov
and
jo
retf
dec
and
in
sbb
sbb
sbb
xchg
(bad)
pop
das
adc
out
aas
xor
push
pop
sub
jmp
popf
dec
ret
cmp
nop
(bad)
neg
mov
ret
dec
xor
hlt
mov
movs
in
mov
jo
push
rol
popa
nop
ins
retf
mov
mov
into
je
lahf
fs
push
es
ins
push
pop
imul
mov
enter
cmp
mov
shl
nop
call
stos
dec
jno
mov
(bad)
mov
gs
aad
xchg
sbb
(bad)
jb
inc
xchg
sub
pusha
adc
cdq
pop
or
push
jae
fs
mov
int3
xchg
xchg
dec
and
outs
js
or
daa
popf
xor
jnp
jae
call
mov
inc
outs
sub
sub
cmp
sbb
and
leave
push
mov
and
cmp
dec
jg
rcr
mov
ins
mov
xor
fdiv
in
xor
or
pop
mov
adc
mov
ficomp
inc
mov
loope
out
sti
rol
push
pop
ret
inc
pop
xchg
jo
add
xchg
stos
push
lods
test
adc
bound
mov
bound
pop
mov
(bad)
xor
xchg
ret
or
xor
stc
mov
jmp
arpl
inc
popf
in
jle
in
dec
jns
stos
mov
xchg
(bad)
sub
lahf
xchg
add
push
cwde
jp
lds
imul
and
xchg
push
add
mov
repnz
mov
leave
cmp
push
call
(bad)
int3
dec
cld
sbb
enter
dec
xlat
dec
add
dec
jg
ret
push
sar
mov
leave
dec
dec
cmp
cmp
jnp
neg
rol
and
cs
jecxz
test
sub
pop
outs
loope
xchg
cs
loope
test
aaa
mov
popf
mov
adc
call
inc
pop
cmp
loop
cmp
push
clc
jno
mov
xor
dec
jae
in
add
dec
and
ret
ins
nop
fs
cmp
aaa
test
inc
fs
jmp
(bad)
xor
test
push
stos
sub
pop
mov
push
mov
and
sub
loopne
dec
stos
push
pop
fiadd
dec
sub
push
add
push
xor
and
add
pop
xor
out
scas
daa
outs
cs
cmc
xor
dec
pop
adc
(bad)
aam
mov
mov
fsqrt
mov
cmp
test
js
scas
and
dec
sub
aam
adc
or
int
addr16
test
pop
jne
add
pop
or
or
rcr
adc
sbb
dec
fs
out
std
adc
ret
jge
repz
cs
and
std
mov
add
stos
pop
ds
ret
xor
jne
jmp
sahf
jae
imul
adc
ins
sbb
dec
push
mov
repz
mov
sbb
mov
div
pusha
retf
mov
rol
in
es
add
xchg
pushf
jle
call
mov
xor
sub
jno
mov
je
repnz
cli
pop
imul
sbb
push
mov
loop
adc
add
mov
cmc
push
sub
sub
rcl
arpl
mov
pusha
daa
enter
sub
mov
into
ror
test
and
or
fcomp
add
ins
idiv
(bad)
dec
rcr
clc
and
adc
and
xor
or
jg
bound
push
ret
pop
mov
test
push
push
sub
imul
out
movs
ins
je
in
lea
aas
xchg
ins
(bad)
sti
adc
mov
jmp
popa
inc
or
sub
aad
enter
mov
inc
lds
pop
xchg
mov
je
lods
mov
daa
fwait
mov
sti
addr16
xchg
mov
xchg
jno
in
lods
in
cmp
test
xor
shl
xor
repz
lock
mov
push
int
or
lea
jnp
aam
inc
push
xchg
sub
sahf
mov
mov
test
mov
push
sbb
mov
pop
cli
xchg
vmulps
cmc
dec
std
jge
xchg
xchg
adc
adc
push
mov
push
jne
test
xchg
mov
mov
(bad)
or
test
mov
sub
xchg
inc
xor
pushf
push
int
xchg
add
aam
jge
call
enter
jns
jne
pop
dec
mov
mov
mov
pop
jns
xor
push
test
(bad)
jbe
mov
mov
xchg
lahf
gs
and
data16
test
loope
xchg
mov
loopne
adc
mov
sub
std
pop
es
mov
or
cmps
and
adc
mov
push
xchg
jmp
push
xlat
or
lock
aam
dec
dec
sbb
pop
movs
push
hlt
ins
jmp
inc
out
in
mov
xor
cwde
fidivr
or
adc
sbb
jo
in
sub
adc
jne
inc
jecxz
add
call
inc
xchg
jbe
mov
fdivp
lods
jp
int3
adc
ja
dec
ret
(bad)
sahf
imul
xor
clc
into
int3
jns
out
popf
in
xor
mov
jnp
stc
out
out
xor
xchg
ins
arpl
adc
mov
and
rol
xchg
sbb
leave
repz
dec
repnz
push
add
push
adc
xchg
jmp
daa
stos
or
or
mov
stos
and
ja
sahf
movs
xchg
imul
aas
fst
lock
int3
pop
stos
cwde
pushf
loope
in
aaa
cmps
mov
push
push
daa
shl
pop
es
xchg
mov
(bad)
movs
dec
loop
test
imul
inc
xchg
sub
xor
ds
lods
sbb
sahf
es
aaa
(bad)
adc
aam
pop
xchg
cli
mov
adc
mov
imul
hlt
cmp
sbb
retf
test
sub
movs
iret
or
outs
(bad)
(bad)
push
inc
push
ins
or
sbb
fcomp
stos
mov
push
cmp
push
cdq
leave
add
pop
push
iret
imul
xchg
ror
push
xor
mov
lea
sub
ins
loop
xchg
sub
push
dec
jae
push
dec
cmps
daa
jecxz
or
lock
cli
or
pusha
ins
xchg
cld
cmps
lea
bnd
add
or
stc
pop
retf
sti
mov
aam
push
(bad)
int
stc
mov
leave
dec
add
(bad)
dec
jmp
and
dec
adc
into
or
nop
out
fidivr
imul
div
lds
jmp
repnz
fstp
repnz
cdq
push
mov
xor
cmps
mov
leave
inc
lods
clc
xor
aad
xlat
fisubr
adc
xor
shl
lahf
sbb
sbb
ins
test
add
xor
sub
(bad)
mov
loopne
pusha
mov
or
(bad)
jo
mov
mov
jmp
in
test
arpl
xchg
xchg
mov
jmp
inc
pop
push
jo
(bad)
int3
sbb
es
enter
(bad)
adc
push
cmp
stos
hlt
mov
data16
imul
out
or
mov
scas
out
fild
shl
push
lods
xchg
enter
sti
cmp
iret
mov
xor
fidiv
leave
xchg
push
mov
ds
stos
ss
mov
movs
fisubr
jmp
push
(bad)
mov
ret
jp
pop
in
addr16
sahf
bound
pop
xor
inc
mov
adc
(bad)
push
test
call
push
cmp
ror
and
mov
loop
ins
loope
xchg
ret
jnp
fild
cmc
call
mov
pop
das
in
inc
adc
stc
(bad)
leave
retf
pop
imul
mov
and
add
inc
push
enter
jnp
shl
inc
lock
jns
or
xor
adc
mov
std
adc
dec
adc
cmp
call
ror
push
out
cmps
xchg
mov
pop
dec
std
cmp
arpl
push
lock
cmp
push
jmp
in
cmp
push
jae
and
pop
push
test
adc
jp
jle
rcl
xchg
dec
mov
pop
sbb
mov
jb
cmp
aas
sub
(bad)
adc
adc
ins
mov
jmp
call
jbe
push
lock
jmp
push
inc
cmp
pop
mov
out
mov
lds
mov
(bad)
mov
out
std
jl
mov
aaa
shl
sahf
sbb
es
push
inc
push
(bad)
and
mov
movs
adc
jmp
lahf
jle
fidivr
out
push
push
mov
sub
mov
out
cli
lock
cld
fs
pop
xchg
push
test
xchg
xchg
addr16
in
push
scas
jmp
pop
and
ja
test
in
cmp
dec
or
xchg
lods
ffree
stos
stc
sub
sbb
pop
out
ds
fmul
jg
xchg
adc
ds
xor
arpl
and
mov
xor
test
add
out
or
jae
add
dec
sub
dec
push
daa
push
pop
sti
add
xor
dec
mov
xchg
fadd
jg
lea
ret
pusha
repz
mov
outs
not
nop
int3
imul
es
mov
xchg
daa
icebp
inc
(bad)
in
fwait
jg
adc
mov
es
test
mov
jmp
stos
mov
arpl
ret
xor
rcr
lea
adc
cmps
int3
arpl
leave
and
jae
loop
mov
mov
and
and
mov
pop
mov
test
push
popf
retf
cmc
addr16
sti
xchg
stos
bound
mov
leave
jo
pop
pop
mov
push
push
sbb
lahf
cmp
mov
adc
jb
mov
xchg
outs
gs
pop
dec
xor
bound
xchg
or
sub
sbb
out
pop
in
mov
pop
les
popa
xor
mov
not
and
pop
out
mov
add
mov
dec
cmps
pop
dec
cmp
pop
push
push
fxch
lahf
(bad)
and
sbb
cmp
(bad)
pop
or
cli
call
push
rol
inc
cmp
das
xchg
imul
push
std
push
cmc
push
cmp
cmp
lea
sub
shl
enter
jmp
mov
cmp
xchg
outs
dec
push
and
je
mov
sbb
xor
xor
jmp
push
mov
pop
inc
add
scas
mov
imul
fsubr
sbb
inc
jl
jno
aaa
addr16
lock
sub
adc
mov
iret
cmp
pop
cmp
fadd
mov
push
xchg
adc
cdq
imul
xchg
mov
cmp
pusha
fdivr
fucom
or
ror
dec
icebp
mov
ret
dec
mov
(bad)
imul
mov
mov
inc
xchg
ds
dec
add
mov
lahf
add
jno
jae
xchg
mov
in
push
popa
pop
pushf
mov
xchg
mov
jmp
xchg
mov
movzx
adc
leave
mov
aam
aad
cmp
bound
pop
test
xchg
enter
push
in
lods
sbb
daa
jl
xchg
mov
and
ja
cli
jecxz
lea
and
pushf
data16
adc
add
mov
in
shr
into
sub
mov
aad
xchg
jg
push
xor
dec
mov
fldenv
mov
or
popa
mov
mov
mov
dec
das
dec
imul
cmp
and
(bad)
xchg
mov
mov
mov
dec
das
(bad)
(bad)
outs
add
ret
ret
in
ja
leave
mov
ds
mov
and
icebp
lds
pop
int3
xor
in
sbb
fwait
les
mov
jmp
ja
(bad)
int3
xor
out
mov
and
jmp
ja
(bad)
sbb
xchg
aaa
jmp
ja
lds
out
mov
adc
jmp
ja
(bad)
xor
(bad)
jbe
pop
iret
mov
lock
dec
shr
dec
loop
mov
mov
sub
stos
push
mov
or
push
std
adc
sbb
inc
mov
cs
push
icebp
rol
sub
mov
(bad)
mov
cwde
inc
cld
inc
mov
pop
mov
pop
enter
jmp
test
in
and
call
push
jno
out
lods
sub
pop
inc
out
inc
popf
stos
pop
xor
icebp
push
pusha
aaa
scas
dec
or
fld
out
std
add
stos
les
retf
sbb
popf
test
and
jle
ret
xchg
(bad)
inc
xor
cli
jecxz
mov
rcr
or
into
inc
or
shl
mov
jnp
pop
or
xchg
push
cmp
movs
jmp
xor
inc
push
xchg
jmp
sar
test
dec
enter
xchg
sbb
add
idiv
xchg
mov
pop
fsubr
movs
outs
sbb
dec
mov
(bad)
call
jnp
leave
int
xchg
adc
loop
xchg
out
sub
cdq
loopne
call
js
inc
shl
push
leave
push
or
adc
mov
aam
mov
(bad)
jge
stc
test
repnz
icebp
inc
aaa
bswap
ins
xor
jbe
jle
xchg
pop
loope
add
rcl
jnp
clc
fldcw
test
dec
jne
test
xor
retf
and
in
in
jbe
sub
jne
xchg
mov
ror
add
ins
ret
add
sbb
push
xor
jbe
test
xchg
and
test
inc
dec
ror
mov
push
dec
and
cwde
fs
inc
sahf
movs
add
mov
mov
jae
mov
js
sub
iret
pop
popf
and
inc
fmulp
invd
(bad)
ret
or
std
dec
mov
icebp
add
into
call
add
push
mov
xchg
fwait
jnp
dec
mov
fstp
push
inc
push
dec
adc
test
movs
mov
mov
xchg
inc
mov
add
pop
mov
sar
retf
ret
imul
or
in
dec
stc
push
aaa
call
jecxz
inc
add
cmp
ret
inc
mov
mov
arpl
lahf
shl
sub
pop
dec
pop
adc
imul
cmp
pop
pop
xchg
sbb
push
or
dec
push
sub
push
call
loop
sbb
ins
xchg
mov
cwde
pop
scas
mov
cmp
and
xor
push
into
xor
aam
sub
hlt
sub
sbb
add
cmp
inc
ds
pop
popf
sub
pusha
sbb
sbb
ficom
aam
adc
push
arpl
xor
push
jp
aam
in
ror
lds
mov
cmp
fwait
mov
rep
cmp
sahf
jne
push
pop
mov
jg
inc
jns
cmps
add
sar
xlat
movs
push
and
adc
xchg
sahf
pop
inc
or
fild
movs
fimul
clc
test
sub
fnstenv
pop
mov
fdivr
add
sar
(bad)
and
jb
inc
xchg
cmps
xor
cmp
mov
add
adc
and
retf
cmovbe
cmp
pop
fdiv
mov
mov
inc
dec
popf
dec
add
mov
jle
mov
stc
dec
test
(bad)
outs
inc
in
sub
mov
and
das
fldenv
pushf
mov
dec
icebp
push
lods
stos
outs
sahf
dec
shl
inc
mov
fstp
rcl
mov
adc
in
int
push
fcmovnu
fimul
xchg
loop
jg
popf
cdq
mov
add
push
or
cmp
inc
popa
dec
xor
sbb
loopne
xlat
mov
into
es
mov
and
(bad)
in
sub
or
sbb
into
fiadd
jno
and
add
mov
and
jg
cmc
mov
retf
nop
and
mov
out
lods
outs
mov
shr
and
xor
xchg
aaa
in
jns
es
cmp
mov
and
lods
mov
jmp
mov
nop
mov
mov
test
mov
pop
sub
outs
rcr
lahf
jo
out
iret
out
mov
xchg
push
pop
outs
cmp
shl
(bad)
fcmovnu
and
fst
int3
stos
mov
jp
jno
out
pop
shl
xsavec
push
cmps
in
cmps
pop
pop
repnz
in
out
test
cmp
inc
pop
cdq
popf
mov
mov
xchg
lods
retf
popa
lahf
retf
jecxz
pop
push
push
cli
ins
fs
xchg
(bad)
pop
(bad)
test
sahf
pusha
mov
jg
or
nop
mov
sub
pop
repz
cmp
fnstsw
sub
jmp
in
mov
retf
push
jmp
je
scas
sub
pop
inc
das
shr
sub
ror
mov
sbb
enter
popa
push
adc
inc
leave
popf
dec
(bad)
push
add
btc
shr
sub
mov
or
mov
inc
rol
pop
int3
popa
dec
or
jmp
call
gs
jne
(bad)
data16
retf
cld
pop
sbb
xchg
xchg
in
pop
cdq
sar
movs
xor
inc
ins
push
xchg
jmp
aad
outs
sub
cmp
(bad)
mov
pop
ror
xchg
leave
bound
(bad)
jb
add
outs
jecxz
jo
adc
call
sbb
movs
movs
(bad)
aam
jl
inc
inc
inc
or
sub
mov
loopne
pusha
daa
jne
jmp
jl
dec
mov
lods
xchg
adc
mov
cmp
fnstcw
mov
ins
into
jmp
push
mov
dec
and
ficom
sbb
pop
xor
clc
mov
cmp
cmp
fwait
shr
cmps
stos
dec
mov
scas
loopne
stos
fucomip
xchg
(bad)
push
sub
adc
mov
jmp
sbb
xor
inc
cld
jp
inc
stc
fistp
mov
cmp
pop
sbb
jmp
test
(bad)
and
arpl
fidiv
pop
add
dec
pop
nop
mov
rol
xchg
fdivrp
sbb
in
and
mov
dec
add
aad
inc
pop
jb
adc
add
mul
jns
jl
sar
mov
sbb
mov
jmp
xor
retf
stc
mov
sbb
adc
mov
cld
test
fs
ins
push
test
(bad)
ss
mov
inc
out
xor
ror
fsub
fcom
fmul
mov
sub
pop
xchg
es
dec
and
or
test
push
mov
mov
mov
push
jb
push
retf
cmps
les
ret
movs
jo
pop
scas
dec
mov
aam
sub
rol
mov
sbb
adc
outs
shl
push
lds
call
sbb
push
icebp
icebp
fld
(bad)
std
inc
bound
retf
mov
bound
fist
sub
jg
retf
ss
adc
loopne
call
jl
ret
(bad)
fidivr
int3
sbb
dec
loop
in
or
push
xchg
dec
in
xor
dec
and
loopne
repnz
pop
popf
push
fdiv
rcl
push
int3
out
iret
popf
jmp
sbb
fidiv
sub
push
or
adc
cmc
icebp
or
push
xchg
arpl
gs
push
fist
ja
inc
mov
es
sub
aam
jg
pop
movhps
repz
ret
ret
into
inc
jb
mov
adc
mov
and
pop
jge
cmp
xor
sbb
push
test
les
fs
loope
std
pop
dec
xchg
dec
loope
fadd
hlt
mov
dec
mov
aaa
out
add
aaa
int3
and
push
xor
push
or
xlat
ss
jmp
inc
ins
arpl
imul
and
jnp
add
or
daa
cmp
xacquire
(bad)
out
mov
mov
icebp
cmc
dec
ror
push
sahf
pop
add
mov
dec
sub
cmp
xchg
or
mov
in
popa
cwde
push
ja
mov
ret
sti
adc
mov
cs
sub
cli
movs
inc
sbb
mov
aad
and
or
(bad)
sti
vmulss
(bad)
jbe
(bad)
mov
fst
mov
jmp
fbstp
test
scas
mov
(bad)
std
ss
(bad)
jmp
ret
xor
in
mov
add
out
dec
mov
xchg
mov
jae
imul
mov
lods
cwde
add
xor
ficom
cmp
rcl
(bad)
lahf
hlt
sbb
les
lds
pop
nop
jb
enter
push
mov
add
or
cmp
jmp
fdiv
cmp
arpl
xor
mov
fwait
and
jno
scas
jne
fdiv
pop
dec
fwait
dec
pop
in
xchg
sbb
push
cmp
lock
or
mov
xor
pop
gs
jle
mov
mov
retf
push
loope
cld
push
fmul
and
jmp
dec
bswap
pop
ss
inc
mov
sub
mov
xor
xchg
stos
sub
push
pusha
jae
(bad)
xor
mov
mov
cmp
pop
mov
lods
lea
push
repz
push
pop
xor
dec
(bad)
jecxz
scas
jmp
hlt
mov
cmp
cmp
xchg
jl
xor
mov
das
push
and
mov
repnz
xor
stc
addr16
push
inc
adc
xor
adc
test
sbb
(bad)
xlat
sbb
jle
gs
retf
dec
adc
ret
popa
mov
xchg
ret
push
pop
push
retf
arpl
(bad)
ins
pop
stos
pop
add
rol
push
in
mov
(bad)
adc
shl
jp
push
jno
shl
xchg
inc
js
shl
jle
or
xlat
push
daa
gs
dec
add
lds
mov
in
pop
sbb
rol
mov
xchg
sahf
mov
int
nop
mov
mov
lock
dec
inc
add
mov
clc
dec
or
dec
mov
inc
inc
inc
repz
sub
jns
dec
mov
mov
lock
sar
icebp
out
sti
lds
xchg
pop
jns
repz
(bad)
lds
lds
frstor
hlt
dec
cwde
push
fild
retf
sub
dec
push
xchg
jnp
(bad)
inc
adc
int
mov
adc
mov
fcmovbe
or
xchg
movs
jno
cmp
mov
push
push
add
out
cs
aad
arpl
cmp
jge
add
nop
cli
clc
mov
push
sti
fcmovne
(bad)
cmps
pop
mov
jmp
mov
dec
adc
xlat
int
lods
loopne
enter
mov
(bad)
and
push
inc
pushf
mov
dec
pop
xchg
popa
retf
hlt
test
scas
pop
dec
outs
or
mov
mov
cmp
push
lods
jo
je
jmp
les
mov
push
dec
push
or
js
out
mov
fidiv
int
and
mov
sub
stos
fld
mov
cs
stc
dec
push
mul
sub
pop
xchg
dec
out
or
stc
and
mov
xlat
fimul
loopne
pushf
xor
push
mov
div
inc
rcr
call
outs
js
xchg
sub
iret
pop
imul
or
xchg
mov
icebp
jmp
dec
fistp
adc
neg
inc
scas
ins
mov
xchg
aas
scas
dec
(bad)
iret
jecxz
nop
push
daa
or
xchg
lods
call
adc
pop
sbb
int
iret
test
lahf
and
and
mov
mov
add
out
ror
jbe
out
shr
movs
das
out
out
ret
lock
jo
sbb
cmp
xchg
clc
mov
movs
lods
in
js
jp
cmp
mov
rol
addr16
scas
es
cmp
iret
jle
scas
ja
call
or
sbb
pop
sbb
xchg
nop
adc
fsubr
jb
push
pop
outs
jp
bound
js
or
push
mov
scas
mov
pushf
lods
(bad)
js
fiadd
xchg
pop
ja
call
in
cs
lds
je
movs
and
jge
xchg
sbb
xchg
xchg
cmps
test
jg
int3
arpl
popf
pop
or
ins
or
gs
pop
adc
popf
(bad)
push
ds
mov
mov
mov
bound
rcl
dec
cmp
add
pop
mov
scas
pop
dec
loope
retf
pop
repnz
sub
lock
jnp
rcl
mov
sub
jne
daa
mov
(bad)
out
pop
inc
fmul
push
pusha
retf
add
pop
cmp
in
pop
(bad)
ficom
pop
and
lock
repnz
ret
int
rol
aad
add
dec
loopne
push
jbe
pop
add
sub
outs
xor
stos
clc
arpl
popf
out
sub
mov
push
mov
je
xchg
out
call
out
sbb
aaa
pop
nop
fild
push
mov
jl
xchg
movs
sub
adc
clc
ds
dec
mov
out
sahf
mov
add
fsubp
pop
and
ss
cmc
push
push
loopne
cmp
faddp
daa
jo
call
xchg
(bad)
adc
or
hlt
cdq
cmc
test
mov
cmp
mov
xchg
int3
dec
sbb
or
push
les
(bad)
pop
sub
dec
xor
cmps
jg
ss
ds
sub
rol
(bad)
cmp
xchg
jg
outs
jecxz
add
jns
sub
jne
arpl
movs
cmp
(bad)
fdiv
sbb
cli
je
sub
loope
jo
rcr
movs
out
aad
mov
pusha
push
(bad)
(bad)
adc
(bad)
loop
or
hlt
xor
jbe
mov
rcr
xchg
stc
mov
pop
xor
xor
sub
scas
mov
jbe
je
xchg
js
jmp
ss
ret
ficomp
es
inc
cmp
ss
xchg
lea
push
outs
dec
xchg
sub
loopne
adc
dec
leave
sub
inc
jmp
push
retf
outs
mov
dec
push
inc
jmp
fst
adc
sahf
sbb
sub
ret
xlat
out
inc
add
das
xchg
sbb
xor
hlt
xor
ror
mov
retf
jo
sbb
neg
enter
repnz
into
mov
stos
(bad)
sbb
loop
das
xchg
jno
push
repnz
and
cmp
mov
or
rcr
sbb
inc
mov
or
xor
dec
ins
jp
sbb
inc
hlt
popa
mov
bound
jno
push
mov
cmp
repz
jmp
add
ja
ret
stc
inc
push
out
fiadd
sbb
(bad)
cmp
dec
in
ja
imul
iret
ficomp
add
sub
rcl
in
jns
inc
mov
mov
or
push
ds
xor
mov
std
mov
daa
cmp
mov
xor
(bad)
jbe
sbb
loope
sub
in
iret
jnp
mul
pushf
add
pusha
test
stos
cmc
das
or
ret
or
das
loopne
push
cli
loope
aas
push
and
pop
sub
call
inc
scas
or
push
(bad)
clc
xchg
xor
mov
call
ins
xchg
fsub
sbb
inc
jb
inc
ret
aas
pop
and
inc
mov
js
pop
pushf
daa
sub
daa
fcom
das
fwait
call
cs
call
xchg
cmps
dec
xor
push
or
in
fld
repnz
xchg
inc
push
fisubr
dec
enter
fld
movs
fild
push
dec
btr
sbb
rcr
sahf
sti
or
mov
mov
cmps
or
push
and
shl
push
xor
cmp
push
bound
les
ret
add
js
(bad)
mov
outs
cmc
repz
cli
(bad)
fcomp
jne
shl
sub
enter
jbe
xchg
out
fisttp
cmp
or
jmp
pop
mov
xchg
cld
adc
add
xchg
shl
mov
mov
push
mov
loope
push
mov
(bad)
or
lds
je
and
lods
jb
mov
or
mov
sub
mov
and
hlt
jns
xchg
cmp
fisub
ja
retf
test
jl
add
adc
inc
mov
inc
push
add
test
int3
(bad)
ja
cli
jecxz
and
arpl
out
cmps
or
out
call
mov
fmulp
and
inc
fwait
mov
fsubrp
repnz
iret
pop
scas
mov
outs
sbb
test
dec
sbb
mov
imul
sbb
repz
push
arpl
push
xchg
das
out
jecxz
jmp
bound
pop
add
pop
cmps
jae
aad
pop
fstp
push
cld
dec
sub
int
jmp
jmp
mov
jl
loope
ja
stos
icebp
pop
dec
sub
xor
cmp
mov
jb
xor
add
xor
mov
dec
inc
add
push
out
fild
icebp
sbb
jg
aaa
je
dec
cmp
mov
fadd
push
fcomip
cmp
stos
scas
mov
inc
inc
retf
push
test
(bad)
retf
stos
imul
icebp
sti
pushf
mov
xchg
leave
clc
pop
repz
mov
mov
fstp
xchg
fstp
scas
pop
push
fdivrp
xor
ret
fsub
fimul
push
mov
lods
retf
leave
xor
sbb
lahf
sub
outs
inc
lock
push
retf
pop
push
inc
movs
shr
lock
nop
jmp
jns
or
inc
add
cld
test
inc
sar
nop
xor
inc
js
jb
jge
sbb
mov
sar
daa
dec
lea
lock
sbb
ss
jp
add
das
mov
test
retf
ds
xor
or
je
test
or
cmp
push
dec
pop
dec
push
loop
xchg
cld
lahf
rol
pop
xor
mov
sub
push
(bad)
jmp
cli
movs
jae
into
inc
mov
data16
stos
push
fwait
sahf
mov
out
fcom
lods
psrlq
mov
mov
addr16
or
mov
(bad)
retf
dec
adc
jno
xchg
xor
adc
out
sti
mov
int
mov
xchg
push
pop
mov
mov
ror
sbb
xlat
push
jge
out
movs
or
cli
in
xchg
and
push
ror
xor
inc
and
cmp
fwait
stos
mov
mov
jg
xchg
mov
inc
bound
test
adc
les
push
out
dec
or
test
pop
arpl
mov
mov
pop
sbb
add
test
in
int3
add
xor
inc
fidiv
shl
out
test
pop
gs
imul
or
js
xor
cmp
test
out
call
fnstsw
fwait
(bad)
aam
jmp
(bad)
(bad)
(bad)
sub
aad
loope
pop
rcl
in
jecxz
arpl
xor
repnz
dec
ret
xor
or
enter
xchg
scas
xor
out
ins
mov
push
xor
gs
call
add
and
jg
mov
out
dec
movs
dec
dec
fst
push
mov
hlt
rcl
cmp
mov
push
push
stos
xor
push
out
les
xor
ret
pop
mov
fwait
inc
xchg
(bad)
in
sbb
ins
xchg
inc
in
cmp
cmp
pushf
pop
sbb
mov
push
inc
(bad)
xchg
pop
(bad)
mov
mov
xor
je
adc
scas
rcl
repnz
dec
jo
inc
loop
mov
es
mov
inc
xor
mov
dec
in
inc
sbb
div
push
fstp
xlat
imul
lods
pop
addr16
test
ins
fwait
sub
inc
lods
not
mov
bound
push
imul
rcr
movs
test
add
sub
cmc
shr
in
jmp
cmp
xchg
jge
pop
sti
push
mov
movs
scas
pusha
add
pop
pop
xchg
pop
adc
mov
dec
dec
push
in
outs
movs
pop
xor
or
push
cld
rcr
in
dec
pop
push
sbb
cli
stos
pop
std
sbb
enter
dec
mov
(bad)
add
pop
bound
pop
xor
lea
push
add
jnp
mov
push
lea
inc
add
es
push
push
mov
stos
mov
inc
je
pushf
xchg
add
adc
fnstenv
or
inc
push
adc
sub
rcl
sub
inc
lods
inc
repnz
add
cmp
inc
jg
scas
mov
or
pop
mov
shl
in
pop
cmp
cmps
inc
dec
ja
mov
data16
push
out
mov
push
dec
adc
fs
adc
pop
test
dec
outs
cdq
push
adc
call
add
mov
scas
adc
pop
xchg
pop
movs
mov
in
jnp
push
xor
push
inc
rcl
rol
repz
sbb
std
push
add
pop
(bad)
inc
pop
ficomp
pop
sbb
dec
jmp
pop
or
js
je
fwait
or
test
cmps
mov
pop
sahf
jl
or
inc
movs
add
sti
stc
jb
push
mov
inc
cmps
mov
inc
mov
scas
mov
pop
add
mov
movs
sub
push
in
call
jle
or
inc
dec
adc
arpl
jne
sub
loop
movs
ja
cli
cli
xor
push
cmp
mov
scas
rol
add
punpcklbw
or
xor
(bad)
in
push
pop
xor
jne
mov
lods
mov
and
cmps
dec
fldl2e
or
sub
push
out
adc
test
mov
add
sbb
(bad)
pop
aas
mov
cmps
jo
and
inc
pop
fnsave
gs
jle
or
bt
pushf
gs
(bad)
jecxz
cmps
jge
dec
cld
std
jo
push
mov
stc
cmp
dec
popf
push
mov
fiadd
add
and
mov
scas
push
push
dec
mul
pop
add
inc
mov
sub
(bad)
mov
mov
out
cdq
or
loopne
cmps
cmc
es
cld
bound
push
lea
xchg
lods
loop
mov
imul
pop
repnz
hlt
test
cmp
pop
or
jge
jo
mov
dec
sbb
mov
cli
sti
call
sub
push
push
arpl
xchg
add
sbb
mov
test
push
cmp
pop
pop
sub
jl
or
sbb
or
or
cmp
mov
ja
cmps
dec
test
xchg
push
ja
cwde
call
xlat
popa
gs
test
push
test
jmp
jge
or
jecxz
std
or
mov
push
hlt
or
fwait
pop
popa
imul
sub
cmp
mul
or
aad
mov
scas
sub
scas
test
cmp
or
cmps
adc
or
mov
inc
mov
pop
fistp
adc
(bad)
dec
adc
cmps
mov
add
add
mov
mov
mov
add
push
ds
mov
test
xchg
retf
dec
pop
fcom
mov
xchg
ja
div
or
movs
mov
xchg
cli
mov
mov
add
push
ds
rol
pop
stc
adc
xlat
mov
pop
mov
fisub
repz
sbb
mov
push
jle
daa
pop
sbb
aas
mov
test
xor
fnstenv
ja
neg
mov
pop
mov
jae
pushf
dec
inc
mov
push
(bad)
mul
mov
test
or
loope
fwait
push
add
mov
mov
and
mov
out
(bad)
mov
mov
lea
repz
(bad)
fs
fisub
std
mov
dec
mov
ds
stc
test
out
mov
xchg
ror
fstp
mov
ins
dec
xor
and
pop
inc
mov
test
mov
stos
aaa
xlat
stc
(bad)
cmovp
imul
jecxz
pop
sub
mov
jno
or
retf
pusha
jb
push
cmc
xor
jbe
int3
pop
pop
mov
mul
mov
ja
fisttp
adc
mov
adc
mov
jp
or
lds
add
(bad)
mov
(bad)
pushf
fisttp
cli
mov
inc
scas
inc
or
cmc
sub
cmp
mov
xor
nop
jns
hlt
dec
shr
pop
inc
mov
fcom
mov
dec
mov
or
std
dec
pop
sbb
xchg
mov
mov
popa
cwde
jno
hlt
push
mov
inc
mov
lock
sti
into
test
jbe
mov
pusha
adc
arpl
cmp
cmps
bound
mov
dec
sbb
neg
add
pop
mov
push
lds
or
or
mov
cdq
sbb
push
(bad)
out
adc
imul
dec
rol
sub
mov
popa
cmp
movs
push
or
xor
in
sahf
int3
cs
jne
dec
add
test
pop
add
aam
or
xchg
popa
sbb
lods
ror
adc
outs
sahf
in
es
hlt
ins
and
mov
mov
outs
dec
mov
mov
fdiv
bound
push
mov
ja
mov
popf
leave
push
mov
inc
gs
add
test
pop
add
in
or
stos
popa
push
jb
mov
mov
ss
sbb
push
sahf
repz
cmp
outs
pop
mov
movs
test
mul
push
pop
sbb
in
pop
or
xor
jp
mov
lds
push
sub
hlt
outs
push
add
pushf
and
push
fild
data16
scas
cli
mov
hlt
(bad)
or
mov
sbb
fdiv
push
jns
dec
adc
inc
lahf
in
push
sub
ins
dec
mov
xchg
lods
mov
nop
push
jno
sub
pop
or
cmp
inc
mov
into
addr16
js
dec
pop
mov
mov
and
or
sub
sub
dec
clc
nop
push
repnz
neg
or
cmp
(bad)
mov
into
out
movs
js
dec
pop
mov
mul
mov
clc
nop
push
xor
cmp
add
mov
mov
jae
pop
dec
dec
dec
pop
xchg
imul
push
mov
repnz
sbb
imul
mov
into
mov
dec
sub
repnz
push
dec
loopne
push
xchg
add
inc
push
sbb
or
pop
pusha
cld
cmp
int
or
jns
dec
jb
cmps
lahf
or
dec
arpl
test
mov
pop
dec
mov
mov
std
test
inc
aad
hlt
mov
mov
aam
or
jno
dec
jp
sub
adc
inc
jmp
mov
icebp
ja
pop
mov
sbb
ror
pop
mov
mov
ret
imul
mov
test
stc
jmp
mov
or
ret
pop
(bad)
call
shl
jg
cmp
add
loop
mov
mov
(bad)
pop
mov
pop
mov
adc
inc
pop
xchg
xchg
enter
xchg
adc
dec
scas
je
movs
fnstenv
js
mov
sbb
loopne
fldcw
and
xchg
push
cld
dec
dec
cwde
sbb
clc
sub
pop
dec
and
movs
dec
mov
cli
ins
xchg
sbb
and
or
mov
mov
cld
mov
adc
dec
rcl
loope
scas
push
fisttp
gs
mov
and
in
mov
sub
pop
fs
or
inc
jmp
jmp
test
xchg
stc
or
scas
mov
xor
pop
arpl
xchg
mov
or
or
ins
dec
jecxz
lea
in
or
clc
mov
call
mul
mov
cmp
repnz
test
adc
retf
xor
dec
mov
mov
jmp
mov
jmp
mov
inc
sbb
pusha
test
test
retf
sub
mov
lahf
gs
cmc
jmp
mov
jmp
mov
dec
lahf
or
xchg
icebp
pusha
inc
ficom
mov
and
out
dec
retf
lahf
movs
scas
jge
popf
cmc
push
dec
pop
cmp
mov
pop
(bad)
mov
or
or
movs
fwait
push
popa
pusha
loop
mov
sub
mov
pop
lods
sahf
and
mov
div
pop
pop
cs
xor
jmp
dec
adc
dec
push
pop
sub
pop
in
dec
pop
sub
mov
pop
xlat
lock
pop
push
adc
stos
push
pusha
sub
ja
push
cmp
mov
push
stos
lahf
stc
xchg
or
jae
dec
cs
mov
popa
fbstp
and
xchg
mov
ins
cld
or
cli
sti
mov
inc
sbb
add
dec
test
xchg
mov
inc
sbb
mov
or
hlt
pop
ret
sub
jnp
jge
pop
pop
cmp
xor
cs
sahf
mov
push
int
dec
or
mov
inc
out
or
xor
or
ret
stc
pop
inc
or
mov
push
cmp
icebp
out
(bad)
aaa
or
mov
pop
dec
jb
jnp
jge
call
cmp
add
pusha
dec
adc
or
jmp
xchg
lahf
push
jbe
cmc
(bad)
mov
cld
mov
int
add
aas
and
int3
in
pusha
jnp
movzx
call
adc
xchg
cmc
lea
mov
pop
clc
jne
sar
mov
test
or
sbb
mov
aaa
loope
aad
add
mov
jo
inc
or
test
ss
mov
jge
or
push
popa
mov
aas
jecxz
fadd
push
inc
adc
call
test
mov
mov
mov
ja
or
(bad)
mov
sahf
lods
lea
dec
ret
sbb
mov
movs
lods
adc
push
call
test
xor
mov
bound
dec
stc
popf
rcl
dec
mov
imul
or
fcomp
mov
lods
add
lock
adc
popf
rcr
dec
mov
jno
mul
mov
pop
lods
pop
adc
pop
movs
fwait
bound
pop
popfw
shl
dec
mov
jns
cmc
out
or
push
or
adc
jbe
and
loopne
mov
clc
lods
std
repnz
repz
cmp
hlt
mov
jp
or
ror
pop
and
or
xchg
fcomp
mov
loope
addr16
dec
dec
icebp
inc
cmp
icebp
sar
leave
jae
or
add
push
xchg
mov
mov
cwde
mov
into
inc
hlt
dec
mov
scas
nop
(bad)
repz
cmc
dec
loopne
sub
mov
bound
and
cmps
xchg
fs
in
call
les
inc
or
inc
les
popf
das
pushf
jb
mov
iret
mov
sub
gs
das
mov
lods
rol
repz
mov
pushf
push
movs
(bad)
repnz
inc
mov
mov
mov
mov
rcl
and
push
inc
fisttp
lock
popa
pop
pushf
sub
stc
loopne
mov
cwde
outs
push
push
mov
mov
sbb
rol
xchg
repz
scas
fcmovnu
out
mov
imul
icebp
jmp
mov
mov
lods
mov
test
rcl
ss
dec
inc
in
pushf
jo
mov
pop
out
mov
es
inc
jno
fwait
mov
data16
or
fstp
pushf
pop
pop
addr16
movs
sub
sbb
inc
fldenv
out
mov
mov
cmps
jns
fwait
(bad)
shr
lea
dec
inc
sub
cmp
mov
imul
mov
(bad)
dec
out
mov
or
jl
into
inc
xor
cmc
js
fs
mov
xor
dec
dec
push
data16
jb
push
mov
cdq
mov
inc
movs
inc
(bad)
mov
pushf
xchg
shl
fcomp
pop
dec
fisubr
leave
or
jo
enter
lods
montmul
cmps
inc
into
ror
xor
inc
dec
cmp
xchg
sbb
ret
dec
and
out
imul
xor
setb
push
fld
test
lock
push
cmps
inc
in
cdq
or
shr
push
dec
call
(bad)
bound
loopne
xlat
out
retf
push
xchg
ss
fnstsw
mov
xchg
adc
icebp
outs
pop
mov
sahf
cmps
call
dec
dec
call
pop
mul
mov
cmps
or
fnsave
mov
xchg
sbb
repnz
arpl
dec
in
test
test
sar
int3
dec
call
push
jbe
inc
cdq
pop
mov
fbld
or
(bad)
mov
xchg
and
repnz
imul
clc
sub
rol
dec
call
dec
repnz
inc
xchg
loopne
(bad)
retf
or
push
in
(bad)
fbld
mov
call
dec
in
sbb
jmp
or
mov
mov
iret
stos
or
int3
popa
xchg
pop
out
mov
in
xor
mov
ror
aaa
dec
push
dec
inc
xchg
xor
mov
sti
or
rol
pop
inc
mov
or
dec
(bad)
mov
stc
idiv
mov
mov
cmp
pop
stc
mov
cwde
or
pop
mov
(bad)
or
imul
das
mov
mov
push
aas
push
dec
or
leave
xchg
clc
inc
jge
pop
add
mov
fmul
pop
or
imul
fisubr
dec
ja
cwde
lahf
adc
div
add
fisttp
xchg
mov
lock
pop
scas
ret
push
mov
or
int
outs
pusha
mov
mov
(bad)
ins
ins
dec
jle
mov
cld
inc
iret
dec
mov
lock
clc
jl
pop
mov
cs
or
pusha
adc
or
xchg
js
hlt
inc
inc
dec
scas
xchg
fcmove
mov
loopne
xchg
pop
lahf
ret
mov
jp
sbb
popa
cwde
xchg
lea
xlat
ins
jo
mov
std
hlt
jmp
leave
dec
cmps
xchg
mov
jmp
ret
cmp
rcl
bound
fld
ins
fadd
mov
popf
push
cli
shl
cld
inc
mov
lahf
ret
cmc
clc
jl
pusha
mov
inc
mov
or
or
push
pushf
bound
fchs
push
fsubr
xchg
mov
popf
outs
cli
dec
repz
dec
xchg
xchg
loop
data16
fdivr
xchg
ret
(bad)
clc
push
aam
add
sub
or
and
add
(bad)
popa
cmc
(bad)
or
or
retf
sbb
sbb
jmp
mov
iret
mov
(bad)
repnz
xor
dec
call
mov
or
inc
sbb
mov
rcl
or
adc
repz
pop
loop
repnz
or
stc
sahf
jmp
sbb
push
stc
cmp
dec
out
pop
xchg
or
(bad)
xor
push
fwait
mov
jbe
cmps
repnz
push
dec
pop
push
xor
icebp
mov
or
pusha
das
jecxz
mov
sub
or
jo
bound
mov
add
sub
lea
pusha
in
lahf
fisub
xor
lock
pusha
daa
jmp
mov
xor
loopne
bound
ret
xchg
retfw
add
adc
pop
imul
lea
or
pop
pop
repz
cmp
or
sub
xor
or
ds
(bad)
lahf
dec
dec
dec
jmp
fldcw
dec
inc
ins
test
mov
pop
xchg
cli
jle
cwde
inc
pop
or
jg
sahf
rcr
sahf
aam
mov
dec
mov
mov
out
jno
sahf
mov
cli
mov
dec
enter
jmp
mov
imul
mov
cmc
js
mov
mov
aam
push
dec
out
rol
popf
(bad)
icebp
pop
js
fnsave
cmps
cwde
and
shl
inc
mov
arpl
lahf
movs
stos
cli
cmc
inc
icebp
ror
aaa
repz
mov
push
pop
dec
adc
mov
pop
fwait
or
mov
sbb
or
arpl
lahf
jmp
push
dec
sub
je
push
jp
mul
mov
adc
or
out
mov
sub
or
cmc
bound
nop
test
xor
mov
add
stos
pop
rcl
mov
pop
cmps
or
out
mov
push
sbb
inc
aad
in
popf
mov
enter
mov
ins
aaa
fstp
and
and
loope
inc
mov
pop
sub
bound
sub
push
(bad)
sbb
addr16
push
stos
dec
repz
icebp
aaa
dec
mov
pop
lahf
cmc
cmp
movs
pusha
jnp
(bad)
mov
push
lods
or
cwde
push
arpl
fbstp
mov
pop
and
inc
adc
mov
repnz
clc
and
aas
inc
lahf
push
and
les
mov
push
int3
or
cwde
lods
bound
(bad)
mov
jle
xor
imul
mov
repz
clc
sahf
dec
or
rcr
les
mov
push
ss
cwde
pushf
bound
mov
push
add
inc
shr
fwait
mov
repz
clc
sub
aas
dec
lahf
pushf
sub
les
mov
push
mov
lods
cwde
sbb
fistp
mov
sub
inc
call
mov
bnd
movs
dec
in
ds
sahf
pop
and
popa
popa
or
mov
push
cmp
neg
mov
add
xlat
ud1
inc
ja
imul
xor
inc
push
sahf
pop
mov
pop
mov
shl
imul
push
adc
jne
fwait
or
inc
mov
xchg
(bad)
repz
mov
bound
inc
sub
mov
mov
(bad)
dec
inc
lds
mov
or
inc
test
popf
lock
jle
retf
bound
cmp
fs
(bad)
mov
(bad)
sub
test
int3
daa
icebp
retf
inc
test
popf
lock
inc
bound
xor
cmc
jbe
fs
pop
mov
inc
inc
mov
les
leave
sbb
dec
test
sahf
out
stos
pop
hlt
retf
call
gs
or
scas
mov
mov
loopne
and
pushf
jp
sub
dec
pushf
imul
xchg
fldenv
ins
and
jmp
xor
lods
push
mov
jmp
popf
int
inc
in
repnz
or
jno
lahf
fistp
(bad)
pusha
call
or
pop
test
sahf
movs
leave
mov
rcr
inc
lea
inc
repz
xor
sbb
lahf
mov
adc
or
push
lods
bound
mov
sbb
ror
addr16
repnz
pop
das
icebp
adc
inc
in
lods
cmp
sub
test
lahf
(bad)
dec
mov
or
dec
inc
bound
fmul
cmps
pop
outs
adc
mov
shr
inc
lods
mov
popf
mov
or
mov
mov
in
mov
stc
or
inc
aam
and
iret
or
xchg
das
xor
dec
jbe
dec
es
lahf
hlt
hlt
dec
ror
jecxz
mov
clc
pop
or
xchg
or
mov
dec
repnz
jle
dec
push
lds
add
hlt
mov
pushf
je
repnz
int
inc
aaa
test
mov
shr
add
sahf
sbb
pop
cdq
dec
shl
test
push
or
das
sub
mov
mov
mov
(bad)
aad
sahf
std
sbb
hlt
bound
mov
outs
push
cmp
cdq
pop
mov
fbstp
or
xchg
popa
add
mov
mov
or
add
ins
sahf
fisub
dec
hlt
dec
push
dec
or
jno
inc
dec
scas
pop
std
nop
shl
nop
push
or
dec
gs
push
add
rol
in
popf
push
sub
repz
jno
dec
xchg
mov
repnz
fld
pusha
xchg
mov
outs
sar
loop
cwde
bound
mov
inc
inc
xchg
in
gs
ins
xor
loopne
ds
fwait
rcr
or
aam
mov
mov
leave
test
arpl
cwde
dec
psubusb
neg
and
hlt
in
aas
popa
fwait
jp
mov
ror
cmp
dec
pop
mov
call
cld
lds
mov
dec
ja
cmp
sbb
cmc
cmp
shl
loop
xchg
mov
mov
mov
or
pop
popf
mov
xchg
xchg
dec
push
fdiv
cmc
sbb
dec
pusha
fsubr
mov
mov
or
idiv
bound
add
or
popf
dec
push
push
hlt
iret
cdq
aaa
dec
cmp
push
mov
aas
test
shl
stos
mov
jl
or
mov
xor
ins
into
push
dec
pop
adc
xchg
iret
mov
(bad)
mov
aas
mov
push
popa
aas
sub
dec
or
mov
mov
imul
dec
push
push
mov
cmc
push
movs
sub
out
mov
sbb
fbld
xor
or
lds
arpl
sbb
dec
mov
push
add
pop
pushf
and
inc
mov
int
std
or
cmp
or
jns
hlt
fdivr
inc
mov
arpl
mov
jecxz
xlat
or
mov
mov
mov
or
ror
aad
shl
mov
loope
test
dec
mov
jbe
mov
mov
mov
mov
xchg
aas
or
shr
jg
jecxz
sbb
int3
sahf
adc
mov
retf
test
dec
ss
jle
mov
lds
(bad)
or
popa
push
push
cdq
mov
cdq
mov
arpl
inc
repnz
inc
sahf
nop
ss
dec
jge
dec
mov
jns
add
cmps
mov
int3
enter
mov
mov
mov
add
sbb
dec
jno
xchg
sahf
clc
das
int3
hlt
mov
in
dec
mov
lea
mov
aam
or
fwait
popa
mov
test
push
xor
fs
push
out
out
cdq
pop
dec
mov
jo
and
hlt
cmp
dec
inc
mov
mov
sub
mov
(bad)
and
bound
jbe
add
mov
dec
dec
push
add
fsub
popf
push
out
dec
dec
test
adc
mov
jno
mov
xchg
add
gs
mov
inc
mov
push
repz
arpl
mov
sahf
mov
jmp
or
xor
arpl
mov
xchg
inc
or
lock
fwait
inc
(bad)
enter
bswap
repnz
dec
outs
cdq
setg
mov
hlt
xor
dec
and
adc
sub
inc
xor
out
cld
jns
inc
xchg
sar
pop
dec
repnz
dec
ins
dec
sahf
xchg
(bad)
sahf
sbb
xchg
mov
sti
mov
scas
inc
sbb
mov
ror
cli
sub
mov
mov
(bad)
icebp
xchg
inc
jmp
sahf
fidivr
ss
je
lahf
not
pop
adc
and
out
mov
sbb
mov
fwait
ret
imul
mov
sub
lods
or
push
dec
push
(bad)
fs
cdq
loop
mov
add
mov
sbb
out
mov
pop
inc
push
test
data16
mov
mov
js
popf
ret
int
mov
pop
pop
add
mov
jl
fdiv
mov
out
xchg
pop
mov
fwait
icebp
out
icebp
lods
cs
xlat
jo
popf
jecxz
mov
cmp
stos
inc
mov
cld
cmp
out
jne
mov
fwait
adc
inc
icebp
int3
es
aaa
imul
push
sbb
mov
mov
sbb
mov
add
inc
xor
jg
in
push
mov
popf
mov
sub
push
cld
jb
fs
ds
cmp
and
popf
out
xor
mov
pushf
push
iret
jno
or
pop
mov
inc
in
outs
mov
xor
or
push
rcl
adc
subss
pop
repz
lock
sbb
sub
push
cmp
mov
cmp
or
jo
(bad)
mov
aas
xor
idiv
pushf
xchg
mov
aad
dec
dec
neg
push
mov
popa
mov
inc
xchg
nop
rol
mov
fild
inc
jb
pushf
jno
js
out
inc
test
mov
popa
popf
add
mov
dec
adc
fs
(bad)
mov
jmp
jb
mov
xchg
fwait
push
mov
icebp
int
call
sahf
repz
mov
sbb
adc
loopne
mov
lahf
sbb
fwait
xor
jb
xor
xchg
sahf
cmp
mov
jle
imul
pop
in
dec
mov
call
adc
adc
pushf
loop
lahf
bnd
ret
dec
xor
in
cmp
int3
sbb
adc
mov
pop
xchg
or
pop
out
mov
dec
sbb
inc
pop
arpl
pushf
loop
mov
dec
xor
ficomp
jge
and
adc
iret
pop
cs
pop
out
mov
dec
sbb
inc
or
pushf
jecxz
scas
bnd
adc
xor
scas
int
pusha
data16
mov
pop
fimul
mov
ret
xor
push
call
popf
xor
dec
repz
bound
scas
aad
pusha
data16
mov
arpl
arpl
lock
pushf
or
inc
push
push
neg
loopne
dec
call
imul
popa
pop
and
mov
imul
fdivrp
idiv
xchg
add
inc
dec
dec
sub
sub
fisttp
push
std
sahf
cmp
cmc
and
popa
aas
sub
mov
jb
or
idiv
hlt
mov
mov
dec
sub
(bad)
dec
mov
popa
sbb
lock
popa
scas
sub
mov
jb
or
xchg
jmp
adc
add
inc
mov
pushf
arpl
dec
pop
and
loopne
fsub
sub
mov
jb
or
mov
loopne
arpl
xorps
sbb
popf
jmp
iret
test
sbb
jp
in
cmp
mov
jp
or
rcr
pop
jl
add
push
mov
add
mov
sbb
popa
dec
rcl
and
in
jle
push
xor
or
shl
pop
xchg
mov
mov
inc
mov
cld
ror
dec
jo
mov
cmc
adc
cmp
imul
xor
or
shl
icebp
cmp
mov
jo
dec
enter
push
sub
mov
mov
repnz
aad
lea
mov
or
or
push
mov
data16
repnz
(bad)
dec
push
or
sub
lock
mov
push
popa
and
mov
mov
push
sbb
mov
sub
bnd
mov
dec
inc
(bad)
and
inc
or
mov
popa
or
mov
xchg
pop
push
mov
cmp
pop
mov
mov
scas
rol
cmc
mov
mov
repz
jle
dec
rol
or
push
dec
bound
and
mov
mov
hlt
sub
mov
jge
ins
icebp
sbb
cmp
xor
dec
mov
mov
bound
pop
stos
mov
fucomi
and
mov
dec
pop
stc
lock
rol
out
pushf
xlat
sub
repnz
dec
cwde
xlat
daa
or
xor
mov
jmp
movs
gs
cmp
pop
call
push
inc
sub
ss
out
pop
repnz
dec
test
movs
or
add
mov
gs
xor
inc
push
mov
jmp
mov
inc
xchg
aad
fwait
push
sbb
icebp
fwait
pop
call
push
(bad)
sub
xor
stos
mov
shl
jecxz
sub
cmp
out
test
cwde
fwait
push
adc
icebp
fwait
push
fld
out
inc
push
(bad)
xor
inc
mov
or
nop
push
jns
sub
cmps
cdq
jmp
jle
inc
xchg
lds
pushf
dec
or
repnz
neg
or
pop
test
ror
adc
outs
data16
lea
xor
inc
sar
xacquire
dec
xor
jle
jmp
mov
mov
push
sbb
mov
(bad)
daa
mov
inc
cmps
mov
pushf
mov
mov
sar
dec
cli
pop
jae
mov
xchg
(bad)
mov
test
jecxz
out
ins
add
and
pop
sub
lods
dec
pushf
sub
push
mov
arpl
xlat
mov
xor
sbb
jno
mov
mov
shl
cdq
cmp
shr
sub
inc
push
mov
or
and
sub
data16
scas
mov
cmp
je
xchg
adc
push
xor
sahf
push
fwait
mov
gs
fldcw
stos
adc
sub
jg
dec
adc
jnp
inc
cli
shl
xchg
or
out
call
call
xor
mov
mov
mov
mov
adc
jae
inc
cli
mov
pop
out
mov
inc
dec
mov
mov
lock
jne
gs
add
push
loopne
inc
adc
je
inc
cdq
mov
fsubrp
in
mov
cdq
retf
sar
out
out
je
movs
mov
and
push
mov
je
inc
fdivr
push
in
test
xor
arpl
js
sub
test
jecxz
leave
mov
fild
imul
jne
inc
xchg
mov
shr
call
xchg
adc
pop
stc
xor
cmp
imul
int
push
and
aaa
ins
xchg
ss
les
sub
push
jo
adc
mov
cmp
or
jg
rcr
mov
or
jmp
out
repnz
jns
into
jmp
pop
out
inc
aas
mov
adc
into
xor
shl
inc
aas
(bad)
xchg
mov
inc
jmp
pusha
sub
cmps
dec
xchg
or
push
mov
mov
outs
movs
xlat
mov
add
shr
jge
ror
xchg
push
adc
loope
cmp
popf
xchg
xchg
and
mov
dec
daa
fadd
pop
dec
adc
pushw
shr
les
xchg
push
cmp
sbb
aas
fcmovb
xchg
mov
inc
jmp
dec
and
outs
xchg
inc
xchg
cdq
fldcw
and
push
mov
inc
and
mov
fcom
fs
loop
mov
xchg
cmp
mov
inc
in
mov
xchg
pop
rcl
mov
mov
retf
dec
mov
rol
push
mov
ds
ins
mov
cmp
std
dec
lea
(bad)
scas
xchg
ret
ror
in
div
scas
mov
push
adc
dec
ds
(bad)
pop
rol
mov
xchg
xchg
add
inc
push
(bad)
ds
pushf
rcr
push
je
addr16
in
mov
lds
mov
mov
outs
(bad)
aad
call
inc
fistp
xor
mov
xchg
(bad)
ror
out
cmp
mov
push
adc
(bad)
push
mov
jno
scas
inc
xor
stos
in
inc
dec
push
inc
add
push
out
dec
je
data16
jmp
fild
into
adc
movs
push
pop
shl
adc
je
inc
adc
cmp
inc
fimul
fsubr
xchg
jne
dec
mov
inc
adc
xchg
dec
mov
push
push
inc
cmpxchg
xchg
jmp
inc
and
push
lock
jle
gs
ror
adc
test
adc
in
adc
xor
sbb
xor
gs
test
dec
ror
outs
xchg
and
adc
push
pop
cmp
mov
jp
fwait
pop
cmps
inc
pop
mov
mov
inc
in
cmp
stos
(bad)
(bad)
fs
ret
bound
mov
pushf
push
cmp
call
int
das
inc
mov
fwait
repz
icebp
(bad)
xchg
lods
fs
into
mov
loopne
or
mov
mov
aam
(bad)
inc
mov
aam
in
stos
inc
lahf
retfw
call
ss
in
mov
loopne
mov
mov
retf
inc
push
inc
mov
pop
out
jecxz
daa
inc
addr16
dec
call
mov
out
(bad)
mov
mov
addr16
ror
scas
or
adc
cmp
inc
leave
sbb
mov
push
rcr
lods
cmp
scas
hlt
pop
mov
rol
mov
xor
push
inc
in
jns
cwde
xchg
push
out
mov
aaa
inc
jge
pop
call
movs
gs
sti
(bad)
mov
xchg
sub
adc
sub
inc
lds
xchg
mov
jmp
test
in
out
adc
push
mov
movs
xchg
nop
push
stos
and
adc
and
imul
movs
mul
pusha
ds
cdq
mov
mov
mov
jnp
adc
loopne
mov
jns
into
inc
cmp
xchg
shr
adc
add
ss
outs
jns
out
dec
int
add
adc
mov
cmp
mov
arpl
xchg
adc
test
cwde
cs
out
mov
ss
adc
pop
pop
cmp
imul
fcom
mul
xchg
xchg
test
sub
aaa
dec
cwde
mov
jo
or
mov
retf
mov
mov
pop
push
out
shl
mov
xchg
movs
test
pop
inc
jo
sub
aas
int3
aam
not
idiv
mov
(bad)
mov
or
inc
retf
xchg
movs
test
cmp
aaa
pop
cwde
ret
out
clc
int3
mov
mov
(bad)
mov
jmp
mov
xchg
inc
mov
xor
xor
out
add
dec
adc
outs
addr16
dec
mov
les
jg
mov
xchg
dec
call
aaa
sub
cdq
repnz
sub
std
mov
inc
mov
fdiv
data16
mov
iret
mov
push
or
aas
xchg
pop
in
fcmovu
ds
dec
pop
xchg
cdq
push
data16
jno
fadd
popf
dec
adc
in
data16
dec
mov
lock
push
mov
xchg
(bad)
adc
rol
scas
cdq
shl
out
sbb
repz
sahf
pushf
sub
data16
sub
adc
mov
push
mov
xchg
jb
adc
pop
inc
push
and
cdq
shl
out
sbb
add
popf
adc
mov
mov
icebp
mov
imul
dec
jg
jne
mov
inc
push
and
shl
out
sbb
mov
sahf
pushf
imul
xor
icebp
mov
in
mov
push
mov
xchg
and
cld
fld
cdq
xor
push
lock
stos
sub
(bad)
adc
aad
jae
push
jo
adc
jae
ja
xchg
mov
add
or
sbb
pop
pushf
pop
nop
and
out
jo
ficom
sub
push
mov
sbb
xchg
jmp
icebp
pop
stos
sub
pushf
test
mov
jo
adc
js
mov
dec
test
test
and
addr16
icebp
xchg
stos
mov
sub
sub
mov
inc
mov
lods
cli
or
ret
xchg
ss
sahf
fst
fwait
outs
addr16
dec
and
fs
jo
adc
xchg
cli
mov
cdq
loop
sahf
out
jge
std
inc
in
pop
leave
fwait
cmps
jmp
dec
call
in
fs
sub
jle
push
mov
ss
lock
mov
outs
inc
jge
inc
fwait
cmp
icebp
inc
mov
cwde
push
cs
mov
mov
add
and
mov
cwde
or
add
(bad)
fwait
sbb
icebp
arpl
popa
push
push
hlt
and
mov
and
(bad)
dec
adc
mov
and
out
mov
pop
in
jae
add
dec
cmp
clc
or
mov
mov
inc
shr
scas
sbb
cdq
retf
out
movs
mov
inc
pushf
jno
addr16
xchg
mov
mov
mov
inc
fcom
or
imul
fwait
cmp
div
inc
adc
fs
push
nop
mov
or
push
addr16
cs
std
popa
adc
cwde
test
inc
jge
inc
fwait
cmp
fs
inc
jns
inc
ja
cdq
push
cs
fs
pop
sbb
or
xchg
addr16
mov
inc
adc
(bad)
pop
mov
cdq
mov
ret
cs
inc
jno
inc
ja
sbb
cs
gs
bound
adc
lock
jae
cmp
(bad)
push
or
cdq
cwde
imul
imul
imul
shr
mov
add
xchg
inc
cmps
mov
push
dec
fwait
in
loope
cli
inc
jae
enter
jmp
in
adc
sub
mov
mov
bound
or
dec
sub
sub
inc
push
in
jg
jne
jecxz
inc
cdq
sahf
adc
test
out
fwait
adc
jl
mov
dec
push
imul
fiadd
lds
out
outs
push
aaa
inc
cdq
sahf
push
fwait
and
jmp
jnp
retf
jl
mov
(bad)
or
push
mov
dec
inc
dec
(bad)
sub
out
in
push
movs
inc
sbb
pop
mov
cld
cmp
add
inc
adc
mov
inc
(bad)
mov
loop
scas
dec
add
(bad)
pop
adc
inc
inc
movs
mov
mov
pusha
sbb
mov
out
outs
in
sub
cdq
inc
std
push
out
scas
inc
je
or
lods
adc
dec
into
movs
xchg
scas
mov
pusha
and
imul
and
in
and
cwde
inc
cmc
int
scas
cmp
inc
or
xor
retf
movs
fwait
xor
pusha
sub
das
rcl
out
jae
sbb
cwde
inc
in
dec
out
scas
xor
or
mov
ret
pop
aad
sahf
mov
fcom
clc
xor
imul
pop
inc
inc
pop
lahf
es
retf
in
out
xchg
inc
icebp
outs
retf
call
ja
bound
addr16
repnz
adc
or
inc
xchg
sbb
inc
scas
addr16
fwait
or
ret
and
enter
mov
adc
add
in
mov
mov
aam
out
xchg
sbb
fisub
fsub
mov
adc
shl
mov
adc
inc
add
add
in
xchg
inc
inc
inc
ins
mov
cdq
loop
inc
out
or
das
mov
data16
mov
pop
adc
dec
cmp
xchg
pop
mov
sbb
out
idiv
mov
retf
(bad)
out
add
out
mov
ja
addr16
cmp
ror
imul
imul
ds
inc
and
dec
out
sub
jno
xchg
xor
addr16
add
inc
push
(bad)
rol
xchg
(bad)
std
fucomp
call
xchg
(bad)
rol
in
cli
sbb
inc
shr
adc
mov
mov
push
inc
mov
rcr
inc
xchg
fadd
dec
inc
scas
xchg
daa
xchg
push
dec
in
xchg
and
mov
fsub
push
stos
cmc
pop
adc
xchg
jg
shr
les
push
mov
mov
in
inc
sub
sbb
imul
in
repnz
ss
ret
jmp
jmp
dec
xchg
or
ins
in
jbe
xchg
inc
inc
sbb
imul
xor
ret
pusha
xchg
ret
jmp
cwde
pushf
fist
sahf
cs
sbb
std
adc
pop
push
push
movs
jle
test
xor
(bad)
jle
ret
call
push
and
pushf
lea
in
sub
push
adc
pop
mov
xchg
xor
fistp
rcr
mov
call
inc
out
pushf
push
xchg
stos
jecxz
in
aad
dec
inc
in
rcl
pushf
pop
repz
in
or
imul
dec
rcl
rcl
push
fadd
pushf
add
aad
dec
inc
in
fst
pushf
pop
cli
push
in
mov
lahf
xor
push
jge
rcl
and
jmp
push
and
xchg
stos
jecxz
in
aad
iret
inc
in
push
adc
push
mov
lahf
xor
jmp
xchg
(bad)
bswap
jmp
push
lods
inc
out
pushf
push
cwde
stos
jecxz
out
aad
dec
inc
in
rcl
pushf
pop
repz
sar
mov
jge
mov
cmps
cmovs
inc
push
sub
fcomp
out
stos
cs
prefetchnta
lds
addr16
mov
inc
xor
imul
push
pop
in
lahf
push
cmp
cwde
cmp
mov
inc
cs
inc
ja
dec
adc
pop
ins
addr16
movs
push
mov
or
pop
imul
cmps
xchg
cld
push
leave
in
xchg
push
stos
inc
mov
out
scas
inc
and
ret
pop
inc
addr16
movs
sub
cmp
movs
imul
pop
xchg
sub
jp
(bad)
push
pop
inc
pop
pushf
aaa
cwde
adc
cs
pop
sbb
addr16
movs
cmps
mov
and
cmp
jle
shr
and
call
inc
mov
jecxz
in
test
sbb
push
mov
test
xor
sar
jl
(bad)
push
pusha
inc
xchg
pushf
dec
xchg
dec
jecxz
in
mov
sbb
fwait
movs
pop
mov
inc
xor
ror
xchg
lahf
push
call
xchg
dec
jecxz
in
mov
push
inc
pop
sbb
adc
movs
lea
mov
sbb
cmp
vmovntdq
pop
push
push
sbb
fs
push
daa
mov
pop
cdq
adc
mov
shl
je
fstp
xchg
ins
test
xchg
dec
or
aas
sub
icebp
jmp
pop
adc
adc
outs
sub
sar
stc
push
mov
sbb
mov
ret
clc
mov
or
push
inc
imul
xchg
ins
jmp
push
nop
inc
leave
das
xchg
adc
jbe
push
mov
imul
dec
mov
xchg
scas
ret
pop
mov
xchg
(bad)
not
ds
test
xchg
data16
out
jmp
adc
add
rcr
adc
popf
xor
sbb
push
call
movs
jge
xchg
pop
les
inc
adc
jae
iret
test
mov
jmp
movs
sub
and
pop
call
fdiv
xchg
mov
test
adc
jb
cli
shr
aam
movs
pop
cmc
ins
shl
or
inc
mov
xlat
je
xchg
xchg
mov
sbb
adc
outs
into
xchg
repz
pop
scas
pop
adc
movs
xor
loope
in
xchg
mov
outs
sub
xchg
in
gs
cwde
adc
add
sbb
add
mov
(bad)
icebp
mov
jle
dec
cs
cmp
jl
sahf
jmp
xor
push
xacquire
jnp
(bad)
sbb
pop
pop
outs
inc
cmps
lds
loop
cmp
add
shr
adc
push
lds
pop
inc
pop
push
sbb
pop
ret
cmp
cs
pop
outs
pop
cmps
jl
popa
mov
(bad)
sub
add
push
inc
inc
and
adc
jge
ffreep
jmp
movs
pop
cmps
pop
(bad)
ins
shl
xchg
test
pop
call
les
xchg
jg
mov
mov
fadd
inc
dec
adc
mov
dec
sar
pop
bound
inc
lods
(bad)
jns
mov
call
push
ins
movs
xchg
(bad)
(bad)
imul
inc
inc
dec
cmp
call
pop
inc
push
ins
mov
fcmovb
or
addr16
movs
gs
xchg
pop
lods
pop
jmp
movs
adc
stos
in
rcr
cmp
mov
lds
mov
leave
cmp
outs
movs
aad
call
push
fbld
sub
lods
xor
outs
xchg
(bad)
daa
adc
mov
push
cs
addr16
dec
jmp
sub
push
out
shr
mov
jl
sbb
outs
inc
int
lds
ret
nop
cmp
in
rol
(bad)
cmp
dec
cmps
xchg
rcl
ds
inc
scas
pop
ins
and
cmp
cmp
scas
outs
dec
into
lds
mov
push
cmp
dec
cmp
mov
fld
pop
scas
scas
shr
mov
sbb
dec
mov
ror
pop
push
aad
mov
xchg
shl
sbb
cmp
imul
sub
sbb
jo
into
ffree
or
(bad)
in
add
sub
sbb
cmp
stc
scas
fsubr
cmc
mov
sbb
jno
into
push
(bad)
or
mov
mov
iret
cmp
xchg
retf
fsubrp
cmp
push
pop
outs
xchg
cmc
cmp
mov
sbb
jno
into
mov
js
mov
mov
pop
cmp
xchg
inc
out
fisub
cmp
sbb
scas
fild
cmc
mov
sbb
sub
scas
into
dec
enter
(bad)
retf
jecxz
add
test
jae
leave
in
fsubrp
cmp
xor
repz
push
jo
cmc
xor
sbb
sub
js
(bad)
ret
jecxz
add
cmp
inc
fidivr
jne
cmps
sbb
enter
stos
(bad)
pop
cmp
sbb
pop
into
inc
leave
pop
js
mov
mov
fistp
pop
dec
stos
mov
xchg
retf
in
fsubrp
cmp
sbb
scas
push
jno
cmc
aaa
(bad)
js
popf
sbb
ds
(bad)
jl
inc
mov
mov
inc
cmp
and
adc
push
sbb
scas
fnstenv
cmc
mov
push
sbb
inc
retf
fisttp
out
les
xchg
dec
sbb
mov
push
call
(bad)
push
cmp
sbb
and
lock
xchg
jns
mov
push
loop
pop
xor
fimul
mov
(bad)
push
fisubr
sbb
std
stos
(bad)
inc
sbb
(bad)
aam
leave
div
mov
push
cmp
inc
pushf
mov
loop
add
push
and
or
sbb
mov
jno
cld
inc
(bad)
and
sbb
outs
mov
mov
(bad)
in
rol
xchg
dec
sub
or
sbb
mov
jo
cld
leave
(bad)
fild
sbb
lea
jae
mov
cmp
sub
(bad)
and
sbb
pop
cmp
dec
jbe
sbb
mov
inc
(bad)
fisttp
sbb
xchg
mov
mov
jecxz
clc
mov
sub
or
fcmovne
cdq
cmp
bsr
push
jle
sbb
or
(bad)
addr16
cmp
cmp
ds
out
retf
pusha
cmp
adc
call
pop
xor
sbb
inc
jo
add
mov
sbb
call
(bad)
aam
shl
rcr
xchg
jp
pop
call
jmp
in
call
jo
cld
sub
mov
pop
aad
ror
pushf
xchg
leave
in
(bad)
mov
in
or
cmp
pop
pop
les
lods
call
aaa
fistp
cmovbe
jmp
pushf
pop
in
jecxz
cmp
sub
dec
jne
out
sar
(bad)
retf
sbb
stos
jo
jmp
(bad)
or
jmp
mov
cmp
push
(bad)
or
sub
add
xchg
mov
jne
out
rcl
pop
jbe
dec
pop
dec
sbb
movs
and
jge
inc
(bad)
mov
imul
push
(bad)
and
and
jae
fisubr
pop
add
int
jg
inc
movs
pop
jo
jmp
mov
cmp
pop
movs
(bad)
or
sbb
add
jl
mov
outs
mov
ins
mov
test
dec
gs
sbb
stos
ret
repnz
mov
push
cmp
dec
aas
nop
mov
stc
cmp
and
xchg
inc
addr16
jae
out
xor
or
int
ja
inc
mov
outs
cld
stc
pop
pop
inc
scas
sbb
dec
xchg
nop
or
xlat
(bad)
cmp
sbb
or
repz
ins
mov
ss
dec
je
sbb
mov
or
sbb
cli
lock
inc
adc
or
cmp
adc
mov
je
xchg
ins
sub
or
dec
ret
add
nop
(bad)
outs
push
mov
dec
repnz
cmp
cmp
in
(bad)
sar
and
adc
ins
test
and
nop
sbb
adc
(bad)
xchg
pop
sub
loop
sbb
lock
je
(bad)
inc
xchg
out
dec
les
push
sbb
sar
mov
mov
sbb
mov
outs
inc
in
mov
cmp
ds
outs
xchg
dec
fcmovb
outs
xchg
movs
sbb
fild
jb
and
enter
push
rcr
aam
nop
and
lea
leave
jecxz
lods
mov
(bad)
into
ss
in
(bad)
jo
push
inc
(bad)
ds
cmp
xor
and
out
sub
sbb
push
mov
sbb
lea
pop
movs
jecxz
cmps
mov
(bad)
(bad)
cs
in
pop
daa
jo
pop
dec
(bad)
push
movs
aaa
sbb
in
sub
xor
retf
push
lock
mov
scas
adc
lea
lods
jecxz
popf
add
and
nop
out
es
out
pop
fild
data16
pop
lods
jg
shl
push
jb
cmp
scas
test
aaa
retf
lea
xchg
jle
pop
fcomp
out
daa
bound
ins
add
mov
sbb
inc
jmp
(bad)
lea
push
sub
aaa
mov
idiv
in
rcl
xchg
sbb
aaa
out
sub
outs
popa
outs
or
cld
mov
sbb
dec
jno
inc
outs
(bad)
pop
mov
cmp
inc
pmulhw
xor
or
xchg
cmp
(bad)
stc
mov
shl
dec
test
sbb
fucomp
jb
imul
cmp
daa
(bad)
sar
in
cmp
ror
sbb
lahf
xor
ins
push
jns
les
sar
pop
pushf
jo
dec
mov
(bad)
and
in
mov
cmp
pop
cli
out
pop
sbb
cmp
pop
sbb
xor
outs
xchg
jns
les
pop
adc
mov
aaa
mov
or
push
mov
ror
push
xchg
mov
je
neg
cmp
xor
pop
jnp
(bad)
jbe
xchg
or
(bad)
fdiv
mov
cli
cmp
mov
out
push
add
sar
inc
outs
stos
cmp
cmps
leave
mov
popa
adc
(bad)
cs
mov
xor
cmp
jl
xor
inc
dec
js
js
test
aaa
inc
retf
mov
sbb
sbb
jb
arpl
inc
jecxz
(bad)
(bad)
sub
jecxz
jo
cmp
dec
in
inc
lock
add
push
jo
xchg
sub
sbb
and
enter
lea
imul
cmp
or
aaa
enter
pop
sbb
jp
adc
lahf
sbb
sub
jb
jne
enter
lea
pop
jecxz
pop
and
sti
movs
(bad)
(bad)
jae
mov
jle
aam
cmp
dec
sbb
pop
outs
jo
movs
push
(bad)
mov
xor
xor
mov
js
or
test
enter
mov
popf
or
jle
dec
cmp
pop
xlat
sbb
gs
outs
(bad)
lods
mov
mov
fnsave
test
enter
mov
inc
in
dec
cmp
nop
adc
mov
cmp
es
sbb
ins
sub
inc
push
(bad)
sbb
mov
enter
mov
add
in
inc
mov
push
mov
nop
rcl
adc
sbb
xor
push
jbe
outs
xor
push
sbb
dec
js
inc
xchg
fwait
(bad)
jne
test
(bad)
cmp
jae
adc
xchg
out
push
mov
sbb
ja
outs
icebp
mov
aam
jmp
cmc
jo
xchg
sbb
movs
mov
(bad)
addr16
sub
add
cdq
cmp
xchg
xchg
cld
int3
shl
popa
adc
movs
add
push
mov
inc
ret
inc
sbb
outs
daa
mov
sbb
inc
mov
xchg
ret
out
sbb
xchg
pop
lods
(bad)
jmp
adc
inc
ret
sbb
pop
outs
cdq
mov
les
xchg
mov
out
and
xchg
pushf
mov
jmp
retf
xchg
jmp
ins
(bad)
shr
mov
ins
sub
xchg
stc
jecxz
call
test
xchg
aas
mov
(bad)
inc
jo
dec
adc
retf
rcl
push
pop
ss
(bad)
pop
push
ins
and
stos
xchg
pop
in
retf
call
sub
xchg
in
sub
(bad)
dec
inc
stos
cmp
adc
xor
shl
mov
and
ins
sub
mov
outs
push
pop
pop
out
data16
jmp
inc
xchg
jno
ds
push
test
shl
mov
outs
mov
fmul
jo
daa
jo
shr
cmp
xlat
out
inc
stc
cmp
and
and
outs
loop
in
les
sbb
lock
outs
adc
addr16
xchg
idiv
xchg
out
aas
mov
mov
dec
lea
xchg
hlt
les
and
jo
ins
adc
(bad)
(bad)
pop
xor
and
cmp
in
xchg
out
hlt
push
call
mov
push
adc
cmp
pop
sbb
sub
and
(bad)
xchg
rol
in
pop
sbb
cmps
js
out
cdq
call
test
pop
test
movs
cld
ret
adc
xor
outs
sbb
(bad)
lahf
leave
add
xor
cmp
sahf
loope
fsubp
add
sub
and
xchg
pop
call
push
data16
lods
lahf
ret
cmp
in
repz
jo
test
(bad)
jp
sbb
cmp
xchg
test
mov
js
jno
cdq
ret
or
call
outs
into
mov
(bad)
cmp
cmp
jb
cmp
push
nop
sbb
jp
or
cmp
lea
xor
xchg
call
dec
mov
pop
sbb
dec
push
out
mov
adc
stos
sbb
push
cmp
xchg
pop
clc
jmp
test
xchg
cmp
sbb
cmp
aas
lds
(bad)
fimul
cdq
sbb
stc
jo
cwde
out
sbb
daa
jae
and
loop
imul
pusha
mov
(bad)
in
dec
in
aas
push
retf
or
sbb
pop
jno
cwde
outs
(bad)
js
nop
sbb
aaa
and
loop
push
cmp
clc
(bad)
aas
out
mov
les
(bad)
cmp
pushf
push
test
cwde
hlt
(bad)
fist
je
and
loope
imul
shl
pop
in
aas
cmp
and
or
lahf
sbb
push
in
addr16
add
push
sub
aaa
out
sbb
mov
dec
cmp
outs
nop
scas
ror
ret
retf
mov
sahf
adc
sbb
pop
outs
jb
mov
scas
push
or
aaa
(bad)
mov
lock
das
iret
cmp
lock
mov
or
(bad)
jle
xchg
sbb
pusha
out
jb
cmps
bswap
shr
cs
call
mov
jo
leave
xor
ja
vprotb
jno
nop
jo
shl
sbb
cld
cmps
xchg
leave
pop
jmp
imul
movs
mov
xor
cmp
ret
repnz
mov
push
(bad)
dec
adc
push
dec
jae
sahf
jo
movs
loope
pop
adc
stos
scas
mov
cmp
arpl
mov
sub
imul
or
sbb
dec
ret
jb
xchg
in
xlat
xlat
pop
pop
jecxz
sbb
mov
cld
xchg
das
inc
in
cmp
mov
nop
adc
jb
outs
pop
mov
push
cmp
jb
lea
iret
xchg
mov
mov
or
or
xchg
xchg
xchg
outs
ds
vmaskmovdqu
sbb
into
jno
test
(bad)
pop
enter
jle
cmp
lds
mov
or
cmp
cwde
sbb
scas
arpl
outs
gs
pop
lds
icebp
jl
add
inc
jno
jle
(bad)
enter
repnz
mov
in
pop
jg
and
pop
outs
test
inc
sbb
das
sub
jbe
(bad)
jecxz
push
xlat
lea
(bad)
in
popa
or
test
xchg
int3
repnz
call
test
bnd
inc
loope
sbb
imul
stos
and
out
push
cmp
mov
xchg
jl
sbb
xchg
inc
aas
xor
push
repnz
add
cdq
jg
mov
push
sbb
js
mov
fwait
lds
fadd
out
imul
xchg
mov
xor
mov
icebp
ret
int3
sbb
out
outs
mov
or
xchg
mov
pusha
mov
jp
pminsw
push
repnz
xchg
pop
sbb
jg
fwait
jl
les
retf
(bad)
adc
cmps
sahf
je
(bad)
in
jmp
push
imul
rcr
retf
pop
cwde
cmp
ins
jecxz
adc
xlat
ret
adc
imul
xchg
stos
ficom
aad
cmp
and
or
mov
shl
dec
pop
mov
mov
xchg
cmps
add
aas
ror
pop
jmp
je
push
mov
xlat
push
das
dec
mov
ret
(bad)
sbb
mov
inc
jmp
jecxz
dec
xchg
push
shr
lods
je
push
mov
lods
push
pop
dec
sbb
sbb
pusha
sbb
sar
loope
out
fucomip
ja
sar
(bad)
loope
cmp
je
imul
ror
adc
dec
loopne
or
add
ja
and
inc
je
cmp
mov
arpl
aas
dec
inc
ds
mov
add
jne
imul
pop
add
outs
leave
nop
add
(bad)
cmp
clc
sbb
add
ret
jmp
jle
fimul
inc
pop
popf
push
daa
ins
sbb
sbb
arpl
xchg
popa
icebp
lods
call
sar
xchg
sbb
test
push
int3
lock
iret
push
sbb
ins
(bad)
mov
in
sbb
mov
sub
aaa
xor
xchg
std
mov
dec
push
aam
ror
push
push
sti
popa
xor
push
ret
jb
stc
push
scas
cmp
push
loope
jmp
dec
outs
cs
mov
xchg
shr
fcomi
mov
xchg
imul
add
ds
xchg
popf
fsub
inc
jl
lods
xchg
xchg
push
imul
sub
jnp
and
ss
imul
cmp
movs
jmp
es
pop
mov
fld
in
cld
mov
jae
movs
push
rol
pop
or
push
popa
cmp
aas
and
and
mov
add
movs
xchg
xchg
cdq
(bad)
in
and
jp
jge
dec
adc
xor
(bad)
push
rcl
jns
jmp
or
inc
retf
leave
adc
inc
test
cwde
out
cdq
push
out
retf
lods
int
mov
out
mov
jecxz
lods
imul
cmp
inc
nop
adc
sub
fcom
mov
push
test
out
fsubr
mov
repz
scas
mov
cmp
inc
mov
retf
sub
or
cdq
adc
shl
repz
mov
add
stos
push
outs
adc
adc
xor
inc
or
xchg
in
xor
push
mov
dec
lods
cdq
push
xchg
iret
out
push
push
sub
jb
les
adc
xor
rcl
jo
jne
dec
sub
in
mov
call
inc
and
call
ret
add
mov
mov
movs
ins
fadd
mov
and
cmp
imul
lock
(bad)
jg
lock
push
mov
push
dec
adc
fwait
ins
addr16
out
mov
cmp
or
fwait
or
icebp
jne
cmps
inc
inc
cmp
(bad)
fwait
fs
or
rcl
xchg
fwait
hlt
data16
pop
mov
cdq
cmps
sub
je
cwde
inc
in
xor
fwait
cmps
jnp
icebp
rol
or
adc
cmps
(bad)
cmp
xchg
jge
std
data16
and
icebp
cmps
and
mov
popf
inc
test
pushf
aas
jnp
repnz
mov
fmul
retf
mov
(bad)
call
mov
xor
or
das
inc
add
xchg
mov
push
or
dec
adc
sub
dec
mov
ins
mov
rcr
inc
cdq
sub
das
repz
mov
dec
sbb
repz
arpl
fs
cmc
icebp
mov
loope
push
icebp
jl
cs
stc
and
popf
mov
mov
mov
nop
dec
or
xlat
ins
bound
push
mov
mov
cmp
xchg
shl
fidivr
sahf
push
imul
sbb
ror
(bad)
loope
scas
sbb
movs
or
mov
call
pushf
jecxz
pop
bnd
and
sahf
mov
lods
hlt
shl
mov
pop
push
mov
gs
or
jmp
cmp
sahf
mov
dec
cli
sub
mov
xchg
cmc
sar
mov
pop
out
mov
pop
retf
movs
jmp
jmp
or
xchg
mov
xor
lahf
mov
adc
rol
dec
cli
sub
pusha
push
movq
sbb
iret
mov
scas
repz
cmc
adc
cmp
mov
(bad)
test
scas
dec
cli
jns
or
pop
lock
dec
int
adc
iret
outs
adc
popa
std
mov
inc
call
idiv
jno
or
jmp
lds
or
into
lea
cmp
dec
mov
xchg
push
idiv
and
stc
cmp
push
pop
in
and
push
sub
not
xchg
test
popa
loopne
inc
mov
jg
sahf
cdq
(bad)
std
hlt
je
ret
push
pop
mov
jmp
popa
mov
pop
imul
mov
xor
inc
popa
fdivr
mov
hlt
cmp
mov
mov
and
pusha
dec
cdq
pop
ror
mov
fnsave
je
pusha
movzx
mov
(bad)
(bad)
dec
cmc
add
fs
mov
cmp
fmul
push
dec
or
ficom
cmp
push
mov
xor
adc
or
mov
movs
inc
add
dec
jge
fisttp
sub
std
sbb
or
pop
ins
pop
mov
mov
jno
aad
or
test
stc
int3
add
movs
cmp
mov
inc
cli
push
sbb
into
mov
mov
push
icebp
pop
repnz
das
div
jge
mov
mov
mov
not
ret
icebp
dec
mov
cmp
pop
jg
pop
ret
mov
or
or
imul
dec
mov
cli
dec
adc
push
mov
dec
cmps
add
shr
popf
jbe
pop
cmp
pop
dec
inc
cld
pop
jb
and
xor
dec
int3
mov
push
rol
push
ja
retf
cmps
inc
loope
scas
add
ja
(bad)
pop
inc
mov
mov
sti
pop
pop
or
pop
mov
mov
dec
or
mov
sti
int
cmp
pop
cmps
and
scas
inc
daa
out
sbb
mov
mov
sti
loope
push
inc
add
stc
imul
push
mov
sti
aam
adc
data16
fwait
loopne
lods
pop
daa
push
add
outs
je
sub
jle
push
inc
sahf
pop
lods
add
dec
dec
je
sbb
xchg
push
addr16
push
loopne
lods
adc
lea
in
ins
icebp
pop
outs
mov
scas
idiv
cli
add
mov
dec
sub
(bad)
xchg
cmps
add
sbb
push
sub
test
inc
inc
and
pop
xor
add
dec
out
pop
mov
inc
push
push
cld
xchg
cmps
gs
std
and
push
dec
push
retf
test
es
sar
ret
and
js
push
sti
add
ficom
jle
cmps
inc
lds
inc
or
push
imul
dec
test
add
test
push
jb
scas
lods
sub
pop
hlt
pop
(bad)
jmp
dec
push
mov
mov
mov
mov
stos
das
dec
out
outs
add
sar
lods
xor
pop
add
sbb
mov
push
into
outs
mov
push
sti
aaa
push
add
stos
mov
inc
jmp
adc
scas
lods
rcr
rol
push
data16
pop
pushf
loopne
std
push
daa
dec
push
outs
xor
(bad)
fdivr
dec
push
and
stos
xchg
add
add
mov
fistp
sub
es
pop
xchg
loopne
cld
dec
daa
repz
outs
retf
mov
(bad)
loopne
int3
push
or
stos
scas
add
stos
inc
push
add
mov
push
pop
aad
lods
ret
add
loopne
cld
inc
daa
popa
push
pop
outs
pop
test
mov
dec
sti
push
push
ss
jbe
test
stos
stos
cmp
add
lea
scas
adc
xor
loopne
sti
sbb
out
push
hlt
ins
(bad)
cmps
jp
idiv
test
push
push
xor
xchg
sub
fcom
add
push
pop
lods
mov
mov
xchg
cli
movs
ret
xlat
sbb
sahf
push
arpl
gs
cmps
test
push
retf
add
adc
sbb
ror
cli
push
pop
jmp
das
pop
shl
fucomp
loope
sub
add
lods
push
push
cmp
pop
and
shr
es
pop
xchg
ror
cli
dec
pop
sub
pop
xchg
cmps
sub
and
ss
test
imul
pop
or
mov
ret
sub
add
jbe
pop
mov
sub
inc
pop
dec
push
push
pop
xor
into
jmp
push
cmp
shr
inc
push
outs
add
sahf
push
pop
sbb
sub
push
jbe
pop
pushf
shl
push
cs
mov
(bad)
fucomip
sub
stos
nop
adc
stos
push
push
icebp
add
sahf
int3
push
daa
in
lods
sub
add
out
xlat
cmp
sbb
pop
push
mul
outs
stos
call
cmp
inc
stos
sbb
xchg
pop
push
jne
xor
cmp
pop
jg
test
ss
ins
mov
dec
mov
dec
cli
ds
je
pop
stos
inc
add
stos
add
add
mov
push
push
aad
lods
sahf
sbb
sbb
std
push
shl
scas
mov
jnp
arpl
stos
mov
push
jecxz
sub
test
push
mov
repnz
mov
aaa
rcpps
lds
push
adc
out
pushf
cmp
int3
test
push
stos
pop
aaa
jle
fdivr
push
xchg
les
fiadd
mov
fdivr
xchg
push
xchg
xchg
add
adc
mov
movs
mov
push
stos
call
add
shl
sub
fsubr
and
push
sbb
mov
add
hlt
out
cwde
push
cmp
push
cdq
pop
push
xor
and
loop
scas
push
or
xchg
push
test
jmp
dec
push
pop
push
stos
pop
mov
add
ins
push
pop
dec
mov
pop
xchg
aam
repnz
scas
stos
imul
das
push
dec
test
lods
imul
inc
sub
push
pop
jb
stos
adc
cmc
push
pop
inc
sub
adc
cmp
cs
movs
push
pop
mov
pop
test
in
jns
mov
jp
stos
cld
rcl
or
cmp
push
or
movlps
cmps
push
xor
rcr
leave
cmps
test
jmp
add
dec
xor
out
jns
push
mov
xchg
dec
or
xchg
sub
ja
hlt
cmps
cs
adc
push
cmp
dec
test
add
mov
xor
add
mov
adc
adc
ror
pop
sbb
shr
sti
cmp
inc
std
push
sub
in
(bad)
adc
adc
xor
add
xor
ret
std
or
add
xchg
and
movs
scas
sti
sbb
dec
inc
imul
iret
jns
mov
popf
push
xor
add
jp
push
mov
pop
scas
test
addr16
dec
mov
xchg
stos
mov
mov
movs
(bad)
cli
xchg
sti
mov
mov
cmps
jne
out
adc
push
cmp
add
jp
pop
xchg
rol
aas
dec
and
xchg
inc
mov
mov
movs
xor
(bad)
cli
retf
inc
(bad)
push
dec
mov
cld
inc
adc
push
jp
sub
cmp
pop
aad
aaa
scas
dec
or
pop
ss
(bad)
mov
mov
movs
cmp
jp
(bad)
inc
inc
push
movs
mov
cld
stos
sbb
push
adc
inc
add
jno
pop
test
push
retf
inc
xchg
pop
out
add
cli
cmps
dec
mov
inc
xchg
or
sbb
push
out
popa
mov
lods
sub
add
add
mov
lahf
add
mov
push
sbb
aad
retf
push
xor
in
lods
cmp
sub
xlat
jno
pop
push
mov
adc
pop
inc
xor
stc
adc
push
in
xchg
jbe
pop
fadd
rcr
push
cmp
pushf
test
stos
mov
push
mov
xchg
popa
push
adc
pop
lods
adc
pop
pop
cmp
movs
cmps
inc
xlat
(bad)
cld
sbb
rcl
lods
test
stos
into
(bad)
xor
in
push
mov
add
push
push
and
sub
add
imul
xchg
nop
push
cmps
push
xlat
jno
sub
dec
push
sbb
test
stos
dec
(bad)
and
imul
add
(bad)
push
xor
scas
lods
ss
sub
mov
mov
nop
xlat
movs
jbe
clc
sti
adc
ret
gs
std
outs
out
jmp
add
sahf
pop
pop
fsubp
and
adc
pop
pop
mov
pop
movs
adc
jl
out
push
inc
push
push
movs
push
std
dec
out
push
ins
pop
scas
add
cmps
rcr
in
test
add
jg
push
mov
or
cli
xchg
push
(bad)
push
(bad)
push
mov
cld
mov
call
and
mov
hlt
cmp
jg
mov
mov
xlat
mov
jp
movs
out
shr
pop
push
push
(bad)
dec
inc
cmps
dec
xchg
popa
cld
mov
test
outs
pushf
add
sti
push
mov
inc
addr16
inc
mov
mov
jae
mov
lahf
add
dec
jle
iret
movs
cmp
adc
jne
add
mov
cwde
mov
dec
repz
or
aaa
mov
imul
cld
mov
stc
xchg
clc
jae
test
pop
movs
add
add
or
not
pop
pop
cwde
cwde
pop
cmps
jecxz
mov
arpl
shr
dec
aaa
fisub
rcr
sub
and
adc
pop
push
mov
sub
sbb
mov
mov
outs
dec
movs
das
push
movs
lods
jbe
cli
fdivr
mov
cmp
adc
or
test
pop
sub
ret
mov
push
pop
mov
daa
loope
dec
cmp
imul
sub
pusha
adc
inc
cmps
imul
xor
dec
jno
cwde
mov
sti
jmp
sar
stc
retf
mov
pop
(bad)
or
sahf
stos
pop
xchg
in
mov
daa
lock
push
xor
gs
mov
xrelease
cmp
stc
loope
push
pop
mov
push
push
or
xchg
ss
in
fst
sbb
ja
mov
ins
retf
mov
imul
dec
es
xor
mov
lock
inc
retf
mov
mov
pop
jmp
popf
das
ss
push
jbe
mov
push
add
dec
(bad)
movs
and
(bad)
xchg
mov
pop
dec
clc
fs
aas
pop
pop
and
pop
mov
(bad)
or
lds
daa
or
dec
loop
xor
or
test
jmp
jge
pop
sub
int
push
pop
icebp
or
dec
sbb
push
mov
ja
xchg
pop
test
shld
stos
mov
jbe
add
ja
pop
ret
mov
add
lea
dec
inc
(bad)
(bad)
adc
and
bound
lods
popa
cld
push
cdq
mov
scas
out
fild
sbb
pop
push
dec
xor
movs
jmp
and
cmps
dec
mov
cld
outs
xchg
aas
pop
and
push
pop
add
sub
out
jb
bound
dec
and
mov
mov
jb
cmps
cmp
pop
stc
iret
loopne
xchg
push
fild
pop
movs
pop
dec
movs
lds
add
dec
mov
in
and
shl
inc
push
sbb
leave
mov
add
push
ficomp
sahf
sti
mov
loope
pop
push
push
dec
sub
sti
push
cmp
push
adc
or
pop
jnp
pop
push
ret
icebp
or
pop
and
(bad)
pop
push
adc
mov
movs
(bad)
cli
mov
push
inc
(bad)
push
adc
push
(bad)
pop
jae
pop
push
mov
xchg
add
inc
into
pop
and
ror
pop
push
adc
mov
mov
push
dec
in
adc
sub
pop
imul
push
mov
scas
icebp
clc
popa
add
aas
dec
pop
and
leave
lea
push
xchg
dec
sub
mov
les
paddb
gs
adc
movs
(bad)
pop
arpl
push
stos
pushf
lods
icebp
lock
push
rcr
jle
scas
push
rcl
push
(bad)
sub
xor
push
pop
jmp
jmp
call
not
mov
outs
add
push
pop
and
mov
mov
aam
cmps
les
adc
push
popa
imul
repz
push
push
call
push
fstp
outs
(bad)
scas
push
mov
add
sub
and
les
lahf
std
push
imul
stos
jns
cmp
inc
dec
out
add
jb
inc
pop
popa
pop
cld
sub
sahf
jg
jb
mov
dec
jae
push
(bad)
mov
mov
mov
push
dec
mov
add
pop
loope
hlt
pop
add
mov
in
and
add
push
mov
or
add
cmp
push
mov
add
int3
push
dec
push
xchg
lods
repnz
xchg
add
scas
lea
cmc
scas
test
cmp
push
cmp
popf
stos
mov
xor
mov
sub
loop
cmc
lods
or
mov
push
fs
sub
jge
or
shr
lods
inc
sbb
add
(bad)
push
cs
test
inc
(bad)
mov
stos
pop
xchg
mov
sbb
je
ds
cmovge
push
jb
ret
lods
out
rol
cmps
pop
sbb
(bad)
scas
addr16
out
push
push
cmp
pushf
pop
cmps
in
loop
std
bound
test
jo
test
push
mov
adc
jns
in
sbb
popa
pop
xor
sbb
push
scas
addr16
test
adc
std
xor
or
add
scas
mov
push
arpl
inc
lods
(bad)
sbb
add
test
cmps
out
cmps
in
or
jmp
pop
push
push
inc
movs
popa
cmps
mov
xor
cmp
retf
not
mov
xchg
push
add
sahf
push
inc
in
add
or
jbe
enter
mov
repnz
cld
push
cmp
push
mov
ret
fmul
xor
mov
test
xchg
in
scas
pushf
fisttp
push
out
cs
shl
repz
xchg
ins
adc
ins
mov
cmps
jmp
push
ror
sahf
lods
test
dec
mov
ror
push
xchg
push
pop
xor
sar
bnd
dec
lea
mov
inc
dec
fcom
xchg
sti
cmps
or
inc
add
aas
xor
xchg
push
aam
aad
out
dec
stc
sahf
jge
dec
jns
pop
movs
test
sti
jo
inc
push
jnp
cmps
aas
stos
mov
add
aaa
scas
pop
lea
mov
lds
pop
fnstcw
enter
jmp
movs
in
adc
cli
cmps
pop
std
push
shl
add
inc
xor
mov
mov
sub
inc
clc
imul
aam
movs
mov
popa
ins
push
iret
stos
nop
cmps
jmp
nop
scas
stos
loope
add
ret
mov
mov
or
dec
outs
div
xchg
nop
dec
mov
out
mov
(bad)
stc
inc
imul
cmps
or
ss
movs
pop
sbb
mov
lods
add
jnp
and
push
(bad)
div
pushf
pop
dec
xchg
jecxz
mov
inc
jno
dec
mov
cdq
movs
or
test
movs
pop
and
pop
lahf
mov
movs
ror
call
cmp
dec
mov
sub
dec
jns
dec
mov
sub
pop
movsx
push
add
fiadd
int3
addr16
sub
mov
jg
(bad)
dec
mov
cmc
mov
out
mov
cmp
mov
xchg
ror
xlat
in
je
cmp
sub
sub
add
aam
dec
jno
mov
mov
pop
pop
pop
inc
cmp
iret
jg
push
ja
cmc
push
mov
mov
outs
dec
or
sub
dec
movs
gs
pop
div
rcr
mov
or
call
jg
mul
inc
dec
mov
push
xchg
clc
clc
cdq
mov
add
xlat
movs
mov
dec
mov
test
pop
pop
add
xor
or
jne
pop
test
dec
repz
stc
das
mov
pop
movs
pusha
pop
lds
cli
call
shl
mov
sbb
sub
cmp
mov
cli
cmps
add
cmps
mov
clc
scas
ins
mov
outs
pop
sti
xor
mov
jae
sar
div
sbb
cli
inc
cmps
test
jmp
enter
mov
xor
mov
pop
test
sti
mov
and
cli
fwait
out
pop
push
cli
stos
repz
dec
in
sub
retf
das
icebp
mov
adc
mov
xor
rcr
inc
mov
mov
fwait
test
fs
adc
fcmovnu
jp
inc
mov
lock
cdq
dec
movlps
cmp
and
imul
call
xor
mov
add
push
int
stos
aam
xor
(bad)
xor
into
scas
in
lods
add
repnz
js
jb
mov
call
inc
xor
or
mov
xchg
imul
cmp
out
inc
or
mov
lds
xlat
pop
mov
out
inc
jno
or
aad
jmp
mov
inc
test
sbb
movs
imul
xchg
in
mov
in
fsubr
jg
cmp
fwait
inc
mov
das
push
and
stos
push
add
push
adc
pop
sbb
sub
stos
jb
icebp
adc
rcl
pop
mov
mov
adc
mov
add
xchg
test
mov
jmp
push
cdq
stos
in
jecxz
mov
inc
mov
mov
mov
xchg
dec
or
xlat
in
iret
xchg
clc
mov
jo
dec
test
and
pop
fsubr
inc
and
movs
fstp
jnp
push
jb
popf
cmps
loop
xchg
je
fdiv
mov
mov
or
dec
test
xchg
push
jnp
jge
dec
inc
rol
std
(bad)
jne
adc
mov
xchg
xchg
bnd
xor
and
dec
rcl
sbb
jl
mov
fisubr
inc
dec
sub
es
jg
scas
push
cmp
push
scas
pop
xlat
fwait
dec
rcl
mov
movs
pop
pop
in
fcomp
fcmovnbe
lods
aas
(bad)
mov
or
lods
jecxz
adc
xchg
add
mov
iret
adc
mov
test
mov
jmp
add
arpl
ins
out
clc
sub
ins
mov
push
imul
fwait
mov
jle
dec
popa
xlat
cmc
push
mov
mov
or
jle
test
in
sbb
jmp
retf
xor
adc
and
ficomp
pop
or
ja
xchg
mov
jb
movs
(bad)
xor
and
rol
rol
aad
sbb
pop
xchg
jmp
je
mov
cmps
xlat
mov
sbb
hlt
mov
mov
pop
aad
xchg
mul
push
les
popf
cmova
fisttp
bound
jl
test
out
xor
daa
pop
jmp
pusha
xor
fadd
out
test
imul
es
mov
es
xchg
push
push
ret
and
fisttp
daa
pop
pusha
adc
xor
aam
inc
ficomp
adc
(bad)
std
adc
aas
hlt
test
or
jno
pop
push
sub
and
and
sahf
repnz
pop
add
jge
inc
popa
outs
xor
lock
imul
bswap
jl
jnp
dec
mov
dec
mov
jns
jb
fdivr
hlt
and
ret
inc
pusha
mov
adc
retf
scas
mov
mov
sbb
(bad)
(bad)
dec
push
fst
dec
fucomip
call
leave
cmps
mov
fmul
mov
(bad)
mov
push
sbb
imul
fadd
push
out
pop
dec
xchg
je
test
into
inc
inc
imul
xor
and
mov
inc
popf
push
cmp
shr
fidiv
inc
fadd
adc
movs
add
push
sbb
data16
and
jge
(bad)
xlat
cmp
repnz
ror
jle
adc
mov
or
add
test
mov
jmp
cld
cdq
pop
in
pop
adc
dec
xchg
inc
addr16
test
cmps
xchg
shl
sub
mov
sub
test
call
leave
pop
dec
pop
jge
adc
js
rcr
mov
xor
daa
inc
pop
xchg
daa
sti
jo
xchg
jmp
jnp
jecxz
lods
scas
and
cmc
test
pop
enter
into
icebp
out
cmc
sub
pop
(bad)
pop
push
or
aam
inc
xchg
jnp
and
pop
adc
mov
(bad)
xor
outs
movs
fwait
inc
jl
sbb
cmp
(bad)
sti
inc
(bad)
sbb
ins
xchg
push
mov
push
and
jg
mov
cmp
shl
stc
out
ror
stos
and
mul
clc
sbb
mov
jg
daa
xor
loope
sti
jnp
mov
xchg
std
xor
pop
(bad)
stos
inc
les
mov
cmp
mov
mov
pushf
scas
xor
div
push
cmp
leave
into
sbb
imul
shl
mov
mov
inc
push
cmps
popa
inc
fnsave
mov
xchg
and
rol
repz
adc
pop
frstor
rcr
cmps
mov
sbb
xchg
lahf
pusha
into
sbb
pop
(bad)
cmp
rcr
mov
jmp
fisttp
xchg
in
lock
and
inc
mov
dec
call
mov
mov
fwait
xor
and
mov
and
(bad)
push
mov
inc
leave
ret
int
stc
repz
mov
rcr
and
imul
les
jl
out
sub
outs
sbb
fistp
jnp
jecxz
addr16
jns
mov
dec
inc
cli
sub
or
movs
daa
inc
xlat
jp
xchg
clc
aam
fld
and
cmp
mov
xchg
inc
mov
scas
retf
jmp
int
mov
jnp
dec
mov
jo
into
sbb
and
mov
lds
movs
addr16
pop
lock
rol
mov
xchg
es
push
mov
adc
inc
xchg
add
in
fsub
and
test
pop
in
pop
jmp
ins
add
iret
adc
push
outs
sub
imul
fiadd
out
jbe
ja
(bad)
(bad)
popf
pop
jecxz
xor
xchg
daa
push
jp
mov
out
repnz
ror
dec
shr
fdivr
mov
xchg
rcr
test
jle
pop
in
ficom
fstp
xor
add
xchg
mov
loopne
fmul
pushf
and
jbe
pop
mov
popa
jbe
push
mov
mov
je
ret
loopne
sbb
add
cmp
sahf
mov
lea
lods
push
jo
adc
push
movs
retf
jnp
outs
xchg
sahf
add
or
mov
mov
fcmovbe
cmp
fdivr
or
jmp
mov
push
xchg
add
inc
mov
sbb
gs
sbb
pusha
pop
fstp
pop
dec
shr
mov
ret
and
popa
sbb
xor
popf
xor
stc
js
stos
mov
into
stc
xor
xchg
xchg
cld
into
in
cmp
push
inc
jle
mov
jno
add
out
xchg
or
retf
mov
sub
push
xor
ficom
psraw
stos
les
clc
mov
int3
add
and
or
cmp
aaa
or
push
movs
adc
or
push
mov
in
adc
push
or
sbb
mov
outs
fisttp
and
mov
loope
test
jo
inc
shr
test
sub
cli
or
mov
jbe
xchg
lock
mov
retf
aad
push
lock
popa
push
out
jp
clc
call
adc
sar
xchg
inc
outs
jge
add
sbb
jl
xor
cmp
cs
xor
jecxz
dec
fstp
sub
dec
sbb
sbb
ret
(bad)
adc
aam
repz
ins
aad
sbb
jno
fwait
stos
fadd
dec
lds
mov
pop
push
repz
jmp
loop
movs
jbe
add
aad
mov
mov
test
push
call
fwait
mov
stos
scas
sbb
mov
inc
jmp
cwde
in
lock
test
les
xchg
clc
movs
mov
stos
ds
int3
xchg
popf
int3
fbld
scas
add
jge
cmps
xchg
mov
mov
mov
outs
lods
xor
(bad)
mov
popf
fild
push
out
ret
fwait
mov
lahf
scas
mov
inc
aam
inc
dec
(bad)
and
fs
mov
adc
ror
retf
pop
pop
sbb
sbb
retf
lahf
fbld
in
mov
enter
jne
xchg
xchg
mov
scas
jmp
xchg
xor
jmp
test
add
jbe
mov
jnp
push
stos
shl
mov
jmp
sbb
hlt
add
add
xchg
pop
xor
add
sti
(bad)
mov
push
stc
adc
mov
adc
xchg
shr
test
sbb
add
bound
jmp
repnz
inc
xor
pop
ins
or
cmp
ss
xor
cmp
or
nop
hlt
jo
mov
cmps
cdq
adc
push
js
outs
pop
pusha
xchg
mov
inc
cmp
mov
add
lea
mov
pusha
and
punpckhbw
xor
(bad)
hlt
aas
or
pop
jbe
mov
loop
aas
sub
adc
add
xchg
cdq
push
ja
cld
je
scas
(bad)
imul
fbstp
cmp
int
and
mov
push
gs
add
dec
jmp
push
push
jle
mov
inc
dec
iret
inc
pop
into
scas
cdq
ficom
out
xchg
pop
icebp
inc
and
aam
mov
mov
or
push
dec
lds
sahf
pop
ss
hlt
or
dec
cmp
xor
ret
imul
movs
stc
mov
aas
cmps
cmp
sub
mov
test
sub
(bad)
in
je
push
add
adc
inc
dec
je
lds
cmp
xchg
mov
mov
scas
popa
push
fdiv
inc
pop
push
std
and
rol
xchg
mov
out
mov
cmps
or
es
popa
aad
sub
dec
(bad)
jnp
push
or
add
out
in
sub
mov
aad
sti
mov
enter
inc
mov
popa
aad
add
sbb
ret
fsub
fsub
lods
cs
retf
test
fldcw
xor
jnp
fcom
inc
int
dec
shl
xor
and
mov
imul
bound
mov
mov
cmp
and
enter
bound
add
pop
enter
pop
xchg
in
scas
nop
fucom
and
pop
inc
sub
or
mov
push
ror
in
add
test
jb
arpl
repz
add
daa
lock
retf
xchg
jecxz
fs
jae
es
leave
mov
add
pop
cmps
lds
cmp
sbb
mov
jg
mov
cmc
dec
cwde
inc
rcr
mov
imul
cdq
push
sub
mov
add
lahf
jno
fstp
pop
cdq
and
mov
push
stos
cmps
mov
lock
into
ficomp
ja
js
mov
adc
xor
xchg
arpl
dec
sub
and
jo
jp
mov
(bad)
jecxz
loopne
cmp
test
iret
aaa
push
cdq
lock
in
aas
sbb
int
sub
push
sub
lods
in
mov
cmc
mov
xchg
jecxz
pop
popf
cmp
call
mov
mov
popf
lods
add
hlt
xor
push
sar
js
bound
js
mov
aam
and
std
daa
mov
push
loopne
inc
imul
call
cwde
sub
jbe
test
adc
rcl
loope
mov
or
dec
ins
or
jl
outs
pop
aad
(bad)
ins
inc
mov
push
fst
xor
or
sbb
(bad)
mov
clc
jo
pop
push
sub
mov
push
mov
mov
cmp
test
cmp
out
dec
imul
out
add
cmp
loop
xor
jecxz
mov
movs
and
ds
imul
loop
call
or
or
mov
xchg
mov
or
iret
rcr
icebp
sbb
sti
jge
sbb
pop
pop
add
imul
xchg
movhps
(bad)
ss
test
pop
adc
sub
xchg
sub
jb
sub
cmps
fs
xor
out
xor
jl
sti
push
cmp
cmp
lahf
jae
dec
mov
push
xchg
xchg
xor
xchg
test
cmp
xchg
push
jg
jmp
ret
adc
inc
cmp
enter
into
inc
push
xchg
out
lods
mov
sbb
cmps
xlat
(bad)
shr
or
or
xchg
add
test
sub
icebp
dec
popf
cdq
cmp
loopne
cwde
dec
movs
pop
sbb
lods
mov
mov
ss
and
shl
aam
xchg
aad
pushf
mov
movs
aaa
div
ins
enter
jmp
mov
imul
jmp
mov
push
and
retf
jp
xor
cmp
mov
call
and
ss
jbe
dec
jo
sub
mov
add
imul
cmp
outs
hlt
or
stos
sbb
dec
(bad)
dec
or
sub
mov
jle
jmp
aas
push
push
test
xchg
adc
jno
mov
in
data16
dec
pushf
outs
stos
stc
aam
ds
out
push
cmps
in
push
sub
pop
mov
in
sub
jl
mov
sar
clc
mov
or
ret
mov
cmp
jge
xchg
pop
cmps
cmc
pop
sub
mov
dec
push
imul
sbb
popa
mov
imul
xor
jmp
mov
mov
sub
pop
push
mov
mov
pushf
pextrw
xchg
jecxz
sbb
jno
jno
(bad)
sahf
add
je
push
retf
movups
test
jle
mov
imul
xchg
jle
and
in
sub
ins
cmps
and
inc
imul
sub
sub
(bad)
cmc
mov
into
mov
sub
rol
ror
jmp
add
cmp
jmp
add
fisubr
(bad)
push
mov
xor
aas
imul
cmp
push
mov
dec
in
and
das
inc
lds
mov
call
les
dec
inc
or
mov
cwde
cmp
stos
inc
scas
xor
call
rol
xor
shl
ss
dec
imul
sahf
xor
hlt
hlt
inc
mov
mov
imul
pusha
jns
mov
and
sub
popf
dec
into
(bad)
movs
popf
int
sti
mov
rcl
mov
dec
ss
stos
ret
jl
add
fwait
in
push
dec
aas
int
jae
add
xchg
mov
add
aas
or
repz
xchg
dec
pop
dec
dec
fidiv
mov
lahf
inc
aad
sti
mov
stos
inc
ins
push
retf
(bad)
jmp
mov
cmps
sub
out
fnstcw
stos
xor
int3
xchg
(bad)
in
(bad)
or
outs
mov
nop
fbld
mov
xor
inc
ins
mov
std
mov
aaa
jl
mov
aaa
lock
xor
cmp
scas
ror
push
lods
push
cmp
inc
js
sub
pop
call
xor
jmp
ret
sub
add
cdq
call
inc
push
sub
xor
adc
bound
mov
lea
imul
data16
add
inc
lods
cmp
and
dec
and
sti
cmp
inc
sahf
pop
inc
push
and
sbb
loope
sub
pop
scas
cli
in
xor
xchg
je
fnstsw
mov
mov
idiv
fistp
and
test
in
and
mov
jl
mov
ret
jmp
sub
mov
dec
nop
shr
out
lds
xchg
outs
mov
call
les
ja
dec
mov
cmp
outs
xlat
cld
inc
dec
scas
ficomp
mov
mov
fwait
cld
stos
hlt
xor
adc
push
mov
mov
aaa
and
fwait
test
mov
outs
push
adc
and
cmp
pop
repz
mov
mov
sbb
pop
fsubr
push
push
aaa
iret
lods
sar
clc
cmp
ins
stos
or
pop
mov
mov
out
sar
pop
cmp
rep
cmc
or
sbb
in
jo
sub
sbb
sub
mov
jbe
add
and
sar
mov
and
adc
inc
shl
jl
daa
push
jo
jge
ins
call
sub
stos
jg
scas
or
mov
cmp
mov
pop
adc
(bad)
div
push
loopne
cmp
dec
pop
pop
aas
push
sbb
xchg
adc
sbb
addr16
iret
add
add
push
cmp
push
jno
(bad)
dec
out
inc
adc
add
xchg
jne
rol
pop
xchg
inc
pop
mov
push
mov
pop
jae
add
div
mov
addr16
mov
cmp
fs
xlat
aas
mov
adc
adc
jl
push
xchg
pop
in
adc
movs
into
push
inc
mov
mov
xor
and
mov
xchg
outs
and
test
out
mov
fld
dec
in
fsubr
outs
rol
inc
aad
fild
dec
jbe
out
mov
cli
or
mov
mov
loopne
inc
mov
fs
add
mov
gs
outs
push
xchg
adc
call
jp
dec
loopne
mov
and
inc
repnz
ror
push
or
popa
sub
loopne
dec
neg
or
enter
sub
sti
and
outs
push
push
nop
dec
cmps
or
hlt
test
cmp
push
pop
lods
mov
js
push
push
pop
pop
stc
dec
cmp
jg
cld
pop
sahf
repz
push
shl
pop
adc
sbb
mov
and
es
and
inc
or
ja
cwde
dec
push
lods
mov
pop
and
cmps
inc
mov
jp
nop
jle
sub
loopne
jo
stc
clc
mov
dec
mov
or
xchg
cmp
shr
in
dec
es
movs
test
cli
inc
(bad)
(bad)
push
sti
shl
cmps
mov
sbb
imul
sahf
test
inc
pop
pop
push
ja
jg
es
mov
pop
xchg
push
arpl
repnz
daa
pop
popf
pusha
mov
pop
and
pop
jmp
or
push
mov
(bad)
xor
mov
icebp
mov
test
sub
xchg
out
das
mov
jecxz
and
add
inc
xchg
mov
xchg
dec
scas
(bad)
in
or
dec
adc
(bad)
inc
(bad)
or
and
xor
icebp
inc
inc
and
push
mov
shl
mov
pop
jmp
push
xchg
inc
call
(bad)
mov
sar
or
jo
ds
imul
mov
xchg
mov
je
aas
jmp
and
jmp
cld
test
cwde
icebp
mov
out
add
mov
out
call
mov
loopne
adc
jp
push
dec
std
(bad)
cmc
lahf
jecxz
dec
(bad)
cld
fsub
xor
sbb
das
and
jmp
adc
mov
fdivp
sahf
std
mov
ficom
jno
mov
and
rcr
sbb
ret
into
push
mov
fs
xchg
stos
out
push
push
aas
mov
jmp
or
add
inc
scas
loopne
and
pop
push
shl
pop
mov
cmp
in
pop
neg
mov
iret
ins
or
push
(bad)
pop
push
pop
out
mov
dec
adc
push
jb
or
mov
popa
sbb
mov
sahf
les
mov
sbb
inc
mov
mov
push
loope
outs
sahf
add
daa
in
mov
retf
push
or
aas
aad
fist
mov
dec
sbb
jnp
adc
repnz
ins
mov
mov
dec
sbb
aas
(bad)
push
aaa
cmp
and
cmp
push
or
add
mov
jnp
pop
(bad)
rcl
gs
(bad)
lods
push
jle
repz
aam
push
sub
lods
push
xlat
xor
daa
sub
bound
or
shl
fcomp
add
fidivr
pop
mov
int
adc
pusha
pusha
jae
lahf
jl
lea
adc
jecxz
jmp
test
mov
fs
inc
xor
pushf
imul
dec
inc
add
push
push
mov
je
pop
ds
outs
js
inc
popa
dec
push
fistp
mov
pop
inc
icebp
inc
dec
cmp
mov
lods
mov
inc
clc
mov
sbb
stos
and
jo
mov
mov
int
idiv
out
enter
pop
js
jae
xor
xchg
retf
call
js
popa
jnp
cmp
(bad)
jp
scas
loopne
(bad)
ds
aad
jl
rol
sub
iret
inc
jg
fsubr
aad
int3
mov
xchg
jmp
xchg
stos
sub
pop
sbb
lea
mov
in
clc
mov
mov
leave
cmps
(bad)
push
outs
iret
cmp
shr
push
aad
hlt
xor
retf
retf
mov
aaa
jmp
je
lock
xchg
clc
and
xabort
push
add
mov
or
adc
aas
xor
pop
mov
jp
sub
xor
inc
add
mov
dec
inc
mov
into
fisub
jb
mov
jmp
sub
or
add
mov
les
xchg
fcomp
inc
clc
jbe
or
loope
push
mov
xor
push
jg
aas
repnz
mov
dec
sub
fwait
ror
fs
ins
sub
ins
arpl
aas
sub
int3
clc
cmps
rcl
sbb
jp
adc
mov
push
(bad)
iret
addr16
test
mov
dec
daa
xor
inc
arpl
pop
sahf
jl
sub
adc
mov
xor
or
and
je
jl
call
fdiv
push
xchg
(bad)
in
fcomi
cmp
jns
add
int3
cmp
(bad)
call
lahf
mov
jne
sahf
dec
pop
mov
inc
jg
enter
loopne
cmps
iret
es
adc
sahf
rcl
movs
mov
pop
das
mov
pop
hlt
push
xor
out
lea
mov
mov
ss
std
dec
lds
loop
mov
cmp
mov
mov
test
cmp
clc
pop
sar
jecxz
cmp
popa
xchg
mov
test
pushf
jb
inc
add
jnp
mov
cli
call
mov
inc
stc
inc
vpaddusw
pop
bound
ins
sub
lock
fdivr
cmc
or
pop
retf
in
(bad)
in
bound
xor
mov
clc
xchg
ins
jmp
iret
cmps
repz
push
movs
push
in
mov
imul
and
mov
dec
pop
fiadd
fidivr
loop
sbb
inc
xchg
call
inc
sub
mov
sbb
adc
or
scas
js
stos
mov
or
in
sub
into
ss
cs
inc
fcomp
push
mov
cmp
test
(bad)
cs
pop
loope
lods
in
cmps
xor
jb
psubq
daa
dec
mov
adc
(bad)
mov
dec
cmp
xchg
mov
in
repz
jb
sub
loop
add
cmps
xchg
or
xor
and
inc
aad
jne
nop
jecxz
arpl
mov
jmp
sbb
pop
sub
movs
ror
sbb
les
adc
aas
inc
les
repnz
aas
mov
out
jne
push
ss
sar
add
cmp
push
outs
int
test
in
out
sbb
or
xchg
mov
adc
sbb
push
cmc
daa
jmp
stos
jp
out
inc
cld
or
push
sar
cmp
retf
xor
push
mov
sbb
bound
mov
ficom
fstp
and
cmp
stos
repz
popf
arpl
sub
lds
scas
sahf
fcmovu
das
in
xor
ins
into
sti
xchg
addr16
lahf
push
or
scas
std
(bad)
repz
leave
shl
xchg
leave
cmps
push
repnz
sub
or
inc
sbb
jno
mov
mov
das
mov
xrelease
jae
or
cs
fs
movs
sub
dec
popf
dec
sbb
mov
fadd
mov
mov
aaa
mov
jl
mov
add
ds
pop
push
xchg
or
add
sub
jecxz
sbb
int3
dec
bound
fcmove
scas
lods
dec
iret
fwait
mov
push
mov
mov
(bad)
in
ja
ficomp
lahf
test
repnz
push
ret
fnstsw
and
dec
or
movs
fmul
fmul
sbb
addr16
xchg
repnz
lea
imul
mov
hlt
dec
cmps
stos
push
arpl
icebp
dec
(bad)
les
push
data16
xor
dec
and
sub
dec
xor
loop
jmp
jge
call
and
dec
rcr
les
call
xlat
or
sbb
jmp
cdq
popf
retf
adc
les
jne
outs
pop
test
stos
push
dec
hlt
retf
leave
or
in
(bad)
inc
sti
push
add
in
cmp
adc
aam
out
sbb
(bad)
std
icebp
pop
clc
xor
nop
pop
mov
movs
jp
loope
int3
pop
cmp
clc
stc
loope
mov
pop
or
jmp
sbb
xor
fisubr
mov
fiadd
ss
je
stos
jnp
mov
push
ins
fwait
leave
sbb
cmp
repnz
sbb
sti
cmp
xchg
sbb
pop
add
sub
or
dec
fucom
adc
adc
add
stos
inc
sbb
in
test
adc
jmp
mov
jno
add
jnp
sub
jecxz
pushf
xchg
ins
dec
test
stos
je
outs
push
or
pop
sbb
ins
and
cli
sub
jg
add
lods
retf
sub
jmp
inc
sbb
pop
jp
xchg
adc
out
daa
mov
or
push
cwde
cmp
lods
ja
xchg
inc
xor
call
sbb
or
outs
jmp
jb
inc
test
imul
fwait
imul
inc
xchg
data16
loope
sbb
xchg
das
jno
pop
or
sub
sbb
mov
movs
inc
sub
pop
jo
pop
or
push
push
fcomp
imul
fwait
jge
mov
push
xor
push
cmp
and
pop
lds
jge
(bad)
div
pushf
sbb
rcr
xor
sbb
xchg
int3
mov
and
xlat
inc
mov
aad
and
call
push
cmps
sti
add
(bad)
fcom
ret
leave
jge
mov
out
fmulp
daa
cmp
jecxz
xlat
mov
ret
test
and
pusha
or
mov
sti
mov
aam
mov
fnstcw
ja
loope
(bad)
sub
sub
(bad)
xlat
loope
sbb
or
sub
adc
jmp
adc
(bad)
sti
jp
cli
mov
ret
aam
cmp
ins
fsub
clc
push
int
sbb
cmp
push
jne
sbb
pop
ja
mov
fsubr
das
cs
mov
ins
mov
pop
dec
(bad)
fs
int
push
cmp
dec
xor
imul
imul
adc
fidivr
aaa
inc
jl
sub
aam
in
jl
add
loop
push
(bad)
div
cld
mov
inc
pop
fcom
dec
repnz
mov
lahf
and
and
adc
nop
xlat
or
mov
pop
clc
jns
test
lods
xchg
loope
pop
mov
push
imul
push
lahf
xchg
scas
jg
retf
mov
into
cld
fisubr
jg
test
scas
loop
or
push
pop
mov
je
out
pop
cs
sub
pusha
out
ret
adc
pop
pop
inc
imul
push
dec
and
push
mov
rcl
inc
pushf
jl
add
mov
stos
cld
cwde
ins
psllq
or
ficomp
pop
inc
cli
imul
jb
dec
scas
inc
outs
cli
jb
cmps
popa
scas
xor
mov
pop
test
out
jne
aam
xchg
adc
scas
adc
mov
(bad)
jbe
out
outs
shl
jmp
and
adc
xor
sahf
sbb
sbb
lahf
cmp
push
adc
cmps
xchg
push
or
ficomp
adc
sub
inc
add
pop
leave
les
mov
in
mov
adc
ror
ja
mov
(bad)
sub
fild
retf
push
push
adc
push
repnz
mov
push
lds
cli
dec
cmp
push
adc
cwde
adc
loope
inc
xor
cld
jb
pop
pop
dec
jmp
mov
pop
cmp
pop
pop
or
xor
jmp
mov
push
lahf
pop
mov
fs
not
and
mov
shl
dec
pop
xchg
stc
not
pop
mov
pop
out
jle
lea
or
inc
adc
call
fisub
out
adc
xchg
dec
out
shr
clc
and
les
add
inc
dec
into
xchg
out
cmp
xchg
jecxz
push
dec
cdq
in
xchg
ds
and
stc
push
xor
fs
test
hlt
icebp
pop
xchg
cmp
shl
xor
sub
inc
in
js
mov
jmp
mov
or
mov
sub
jl
outs
in
jge
out
popa
cli
xor
outs
adc
xor
pop
clc
retf
dec
xor
or
(bad)
arpl
adc
dec
outs
xchg
or
(bad)
out
inc
xchg
xchg
mov
add
jbe
xchg
sbb
sbb
xor
mov
mov
add
mov
xchg
push
ffree
and
fld
aaa
in
in
jl
stc
daa
cld
sub
gs
lds
jae
repz
pop
sub
dec
xor
je
xlat
daa
pop
es
jge
pop
mov
mov
mov
jmp
fxch
das
inc
dec
fs
addr16
push
push
stc
xchg
movs
ret
repz
mov
jns
jbe
cmps
cmp
push
ror
cmp
jno
jg
or
(bad)
xor
mov
inc
dec
cmp
(bad)
lods
xchg
dec
xchg
call
or
mov
ds
xchg
mov
aad
fidiv
mov
xor
xchg
inc
and
push
cmp
jmp
shr
das
fsqrt
or
icebp
(bad)
fld
sub
pop
fs
movs
jecxz
movs
mov
out
scas
and
push
cdq
xor
adc
ds
rol
pop
inc
mov
adc
push
ret
bound
mov
jp
or
mov
xchg
cmp
xchg
sub
movs
pop
adc
mov
xor
sub
sbb
xchg
add
mov
neg
xchg
popa
int3
inc
and
arpl
jbe
outs
sub
int
and
adc
mov
mov
stos
ja
mov
data16
repnz
adc
mov
mov
and
mov
inc
jb
sbb
push
mov
mov
sbb
inc
stos
push
mov
xor
idiv
xchg
movs
fldcw
idiv
shl
lods
call
mov
xlat
pop
mov
retf
xor
adc
outs
inc
arpl
xchg
pushf
mov
das
inc
mov
xchg
fistp
jmp
enter
fild
lock
imul
gs
scas
ins
mov
push
push
jnp
mov
ret
jne
lahf
inc
pop
push
int
retf
(bad)
push
inc
mov
xchg
cs
(bad)
cmp
jo
movq
(bad)
fst
mov
cli
pop
call
pop
inc
dec
out
sub
mov
add
mov
retf
repz
push
gs
jg
xchg
push
mov
mov
popa
xchg
call
jo
ins
hlt
dec
cmp
cmc
xchg
mov
adc
aam
loop
scas
je
dec
inc
mov
xchg
mov
inc
sub
fsubr
add
push
outs
mov
mov
push
cli
cs
and
jle
mov
ds
int3
adc
mov
xchg
or
and
sub
rcl
and
lahf
push
cld
mov
(bad)
in
adc
lods
loop
iret
lahf
and
pop
push
pop
xor
aaa
fs
popf
sbb
jns
mov
push
inc
fisubr
test
popf
push
xchg
mov
cwde
mov
xchg
les
test
push
call
and
movs
rol
cmp
pop
adc
lds
mov
sub
gs
and
cmp
ret
xchg
jge
mov
and
js
xchg
and
nop
sbb
xchg
mov
or
lds
imul
js
imul
cmp
xor
mov
adc
popf
pop
popf
fcmovnbe
xlat
jecxz
lea
add
dec
mov
adc
aam
pop
and
sar
cmp
mov
fldz
inc
pop
pop
adc
lea
push
sar
xchg
cld
jmp
in
add
cmp
and
sub
pop
enter
inc
outs
mov
fistp
xchg
mov
jmp
jg
(bad)
adc
dec
test
push
in
add
movs
sti
xor
mov
inc
cmp
pushf
and
pop
cdq
or
popa
mov
inc
push
stos
sub
jbe
cmp
out
stc
pop
and
jo
xor
mov
xlat
(bad)
div
sar
lock
fiadd
push
mov
repz
ret
inc
scas
sbb
movs
sahf
sub
ficomp
cmp
(bad)
psllw
xchg
cmp
shl
popf
dec
sub
test
sar
rcl
pop
pop
(bad)
fisub
xchg
or
cmps
lds
out
pop
data16
pop
dec
les
or
ret
scas
mov
int
pop
mov
out
push
pop
mov
scas
push
mov
call
add
in
mov
push
(bad)
(bad)
pop
pop
and
adc
sbb
hlt
cmp
loop
or
fimul
adc
cs
loope
jne
aaa
cmps
push
add
jnp
dec
test
stos
ss
loop
fdivp
xor
mov
mov
push
cmp
fidivr
mov
mov
ss
jb
and
loope
jl
sub
jg
ins
cwde
xchg
test
jp
pop
pop
cmp
nop
mov
jb
add
cmp
mov
mov
cmp
dec
test
out
movs
or
je
sbb
clc
out
mov
or
shl
adc
into
scas
dec
bound
or
mov
add
test
neg
push
add
or
inc
and
pop
repnz
mov
popa
mov
dec
ja
test
out
int3
arpl
adc
fisttp
xor
imul
adc
das
or
ret
hlt
aam
pop
popa
sbb
(bad)
outs
pushf
imul
not
xor
mov
push
dec
adc
dec
cmps
outs
push
popa
popa
mov
or
jge
pop
jle
sub
adc
aam
les
or
xchg
add
(bad)
fidiv
mov
retf
mov
(bad)
mov
jecxz
xlat
in
stos
outs
cmp
loop
sub
xor
(bad)
mov
test
bswap
shl
jge
mov
fld
pushfw
out
push
mov
(bad)
test
mov
sbb
inc
mov
daa
add
xchg
mov
ja
push
xor
movs
ja
imul
test
movs
pop
arpl
mov
pop
xchg
dec
mov
or
mov
pop
jne
(bad)
xor
jge
mov
mov
adc
lds
clc
sahf
sub
xor
out
cld
ret
lahf
push
sbb
imul
scas
adc
cmp
jg
inc
aaa
lahf
repz
add
mov
ret
jb
inc
sbb
in
ret
and
mov
xchg
add
lock
inc
icebp
stos
shl
xlat
pcmpeqw
mov
(bad)
cs
dec
adc
jnp
stos
pop
movs
outs
daa
sub
vpshufhw
aam
in
sbb
sbb
cld
les
pusha
movs
mov
imul
idiv
aad
dec
into
mov
and
das
das
sbb
sbb
pop
fbld
sbb
mov
xchg
mov
jns
lds
ud1
ficomp
mov
retf
(bad)
cmps
mov
cmp
loop
xor
(bad)
and
outs
cmp
push
xor
call
adc
movs
test
in
cwde
jg
rol
push
movs
repnz
sahf
jo
pusha
into
cmp
repnz
cmp
xchg
lahf
sub
aaa
sub
ja
mov
xor
je
jb
and
pushf
out
vmread
test
stos
mov
aam
pop
mov
into
(bad)
leave
ret
mov
idiv
into
xor
nop
inc
pop
jmp
stc
cli
pop
xchg
mov
mul
xchg
push
or
loop
popa
leave
arpl
jmp
pop
icebp
mov
hlt
adc
leave
or
push
pop
push
cmps
(bad)
sub
cmp
ja
cdq
icebp
out
mov
icebp
xchg
xchg
adc
jno
push
loope
movs
xor
rol
mov
mov
add
mov
out
loopne
sbb
out
pusha
push
xor
popa
xchg
dec
aam
sbb
aam
cmp
ret
and
xchg
call
add
push
iret
xchg
ficomp
xor
ins
and
cmp
jno
sahf
ret
dec
xchg
lods
aad
jmp
add
ins
xchg
(bad)
mov
xor
jge
sub
mov
retf
fiadd
mov
int
cmps
mov
dec
movs
js
jo
xor
mov
mov
jg
inc
xchg
in
(bad)
into
cmp
out
sub
call
retf
stos
repz
sbb
add
or
cmc
test
push
adc
rcr
add
out
push
pop
add
inc
pop
out
and
(bad)
imul
cs
mov
and
test
sbb
fs
lahf
add
sub
inc
push
cli
cwde
inc
xor
mov
pop
xchg
mov
mov
stos
inc
dec
mov
test
retf
ja
mov
cmp
jge
icebp
inc
call
aaa
fist
pop
or
das
pop
mov
cmp
add
mov
xchg
add
mov
ret
out
mov
lock
xor
pop
in
lods
popa
pop
xor
fild
cld
push
jbe
add
and
inc
aas
jns
jmp
ficom
out
and
push
lods
xchg
out
fwait
sub
jo
jnp
dec
aaa
stos
xchg
dec
mov
add
(bad)
adc
fsub
fidiv
jae
mov
stc
xchg
xor
cmc
mov
jmp
stos
mov
pop
scas
xor
(bad)
mov
fs
in
fwait
jg
int3
mov
mov
sub
push
ror
push
pop
fld
sbb
jmp
pop
ss
out
xchg
hlt
dec
push
sbb
jb
or
jecxz
cmp
jecxz
fdiv
xchg
dec
loop
out
and
xor
gs
xchg
retf
xor
cmps
data16
out
push
aaa
xor
rcr
lods
jge
mov
repz
jl
gs
pushf
enter
or
xor
push
pushf
mov
inc
popf
or
jns
dec
neg
add
test
sub
fldenv
gs
xchg
and
stos
sar
xor
xor
adc
jbe
inc
outs
inc
and
inc
pop
rcl
ss
clc
and
fidivr
retf
sub
sti
cs
mov
enter
bnd
lock
dec
or
inc
sub
xchg
xchg
inc
daa
sahf
cmp
or
cmp
or
lods
aaa
out
or
ret
xchg
rol
mov
test
sub
xor
mov
inc
pop
inc
or
inc
adc
push
inc
mov
imul
push
pop
sub
ins
add
loope
inc
and
cwde
fs
imul
mov
mov
jmp
mov
inc
subps
stos
js
jmp
mov
jbe
sub
mov
push
movs
inc
gs
shr
movs
outs
cdq
pusha
adc
xor
mov
fidiv
adc
jmp
call
xchg
mov
add
xor
popf
cdq
aas
sbb
push
push
fcom
aad
jns
sub
mov
mov
mov
add
mov
repz
xchg
cmp
(bad)
jmp
or
adc
enter
iret
mov
or
push
movs
lock
mov
cli
adc
test
mov
repnz
cmps
cwde
pop
setle
cmp
adc
xlat
jp
mov
xchg
pop
sbb
call
loopne
sbb
push
and
pop
or
sbb
xchg
mov
xchg
or
add
pop
mov
hlt
sbb
jmp
sqrtps
pop
push
push
movq
inc
pop
xchg
nop
jg
sub
push
loopne
fcmovnb
jbe
lock
adc
mov
mov
rcr
(bad)
cwde
test
push
and
out
sar
outs
(bad)
and
mov
cwde
jmp
scas
pop
hlt
shr
mov
sbb
push
outs
dec
rcr
cmps
adc
addr16
repnz
test
xor
(bad)
or
arpl
cmps
mov
xor
mov
add
movs
not
jmp
sahf
pop
pop
push
jge
test
push
call
test
cli
pushf
popa
ret
sub
mov
(bad)
sub
or
mov
bound
out
dec
jns
call
mov
mov
repz
sub
push
pop
xchg
jmp
mov
js
dec
mov
mov
sbb
ins
rcl
jmp
dec
xor
xchg
inc
pop
and
not
popf
mov
sar
jae
test
ds
add
mov
inc
or
in
push
mov
jne
jmp
in
push
outs
sub
mov
mov
popa
add
jnp
arpl
jle
loope
shr
je
int
push
ins
ins
test
dec
fimul
cmp
add
fmul
clc
aad
xor
push
push
lds
loope
std
jnp
dec
ins
mov
jmp
sub
push
adc
xchg
or
shl
fstp
out
mov
push
hlt
aad
out
cmp
pop
(bad)
mov
mov
ss
(bad)
stos
xor
pop
xlat
and
or
dec
jnp
sbb
aad
aad
dec
fist
or
or
mov
jecxz
mov
cmps
loop
cmc
scas
dec
or
dec
mov
call
imul
xchg
and
mov
xchg
pop
xlat
test
test
pop
push
icebp
stos
in
repz
or
adc
movs
pop
mov
inc
clc
add
dec
push
mov
out
sub
ins
push
push
fcmovb
out
mov
in
push
sbb
mov
arpl
mov
imul
push
inc
test
jl
jne
fild
in
imul
inc
fs
(bad)
pushf
and
push
pop
arpl
aad
loop
or
popf
loop
sub
mov
stos
push
retf
pop
movs
sbb
mov
cmps
add
push
jbe
sbb
add
jecxz
pop
mov
lods
repz
add
add
inc
add
sbb
sbb
cmp
push
jmp
push
sub
loop
adc
sahf
inc
ss
dec
or
mov
push
lods
adc
sub
imul
push
push
jg
cmps
cmc
in
in
push
pop
scas
xor
jne
mul
pop
ds
(bad)
lea
in
lahf
fnstsw
(bad)
into
lods
or
loope
mov
adc
ins
loope
loope
loop
and
fisub
jmp
pop
adc
inc
sub
out
cdq
push
fnstenv
stos
pop
pop
xchg
sub
std
jae
cwde
adc
push
xchg
cmp
call
mov
mov
sbb
and
das
or
cs
dec
push
jl
or
push
dec
adc
bswap
out
xchg
inc
jp
lea
ffreep
jp
call
ror
ins
xchg
mov
aam
fisttp
push
test
jns
adc
cmps
jno
gs
imul
ret
lahf
fld
mov
ss
inc
push
pop
push
(bad)
sbb
js
push
pop
inc
pop
movs
mov
jl
jns
jo
aas
sub
sub
sub
push
push
cmps
adc
or
push
mov
imul
std
pop
push
xor
jmp
dec
fs
inc
cmps
sub
cmp
aad
data16
pop
inc
xor
ret
frstor
cmp
jb
and
push
gs
inc
inc
in
inc
and
and
push
push
xchg
ret
mov
nop
cmp
ret
lds
movs
cld
sar
lods
lods
retf
inc
call
jp
xchg
ins
aas
iret
cmp
push
push
clc
sub
xchg
dec
hlt
ss
adc
pop
sbb
gs
sub
je
adc
adc
addr16
push
mov
hlt
inc
sub
mov
test
movs
popf
add
shl
add
data16
pop
js
shl
out
popf
sbb
adc
adc
inc
dec
pop
clc
fild
mov
out
out
jle
push
xor
inc
fdivr
call
(bad)
sub
scas
xchg
jae
dec
ret
dec
lahf
cmp
cmp
jb
hlt
(bad)
stos
gs
scas
xor
cmp
ret
cmps
out
not
push
mov
push
or
lock
or
mov
sbb
(bad)
jbe
in
adc
inc
call
das
fnstenv
shr
addr16
sbb
rcr
jmp
sbb
mov
loop
iret
fs
push
inc
loop
push
push
outs
or
pop
fst
cmp
(bad)
fisttp
pop
jb
cmps
test
push
(bad)
inc
icebp
cmp
inc
cmc
and
xchg
ret
and
data16
pop
out
jnp
jp
ss
in
xchg
sub
or
sub
mov
dec
je
pop
std
mov
les
(bad)
mov
clc
leave
imul
add
dec
aam
hlt
outs
jb
jae
arpl
mov
stos
jae
dec
adc
pop
repz
sti
cs
sub
loope
popa
lods
xor
sbb
jbe
cld
popf
fldln2
sub
stos
mov
shr
or
and
inc
das
xchg
and
jg
imul
push
jo
adc
add
adc
and
imul
neg
mov
pop
inc
fs
and
xor
xchg
(bad)
push
xor
jne
mov
add
xchg
(bad)
jb
jbe
loope
mov
mov
daa
or
xchg
fucom
dec
call
retf
mov
mov
in
dec
lea
cmp
fldcw
mov
imul
test
mov
push
bound
inc
cmp
dec
pushf
ins
ror
retf
push
mov
fdivr
cmp
imul
das
(bad)
hlt
push
enter
push
pop
xchg
(bad)
std
mov
pop
ins
stos
xor
loope
and
ja
xchg
push
loope
fstp
mov
cli
adc
xor
push
lds
or
fist
jns
es
in
ins
and
hlt
sar
xchg
pop
dec
inc
repz
xchg
pop
mov
pop
mov
scas
call
jbe
movs
jbe
sti
mov
add
not
xor
mov
scas
jne
and
test
rcl
hlt
adc
push
dec
in
mov
pop
xor
mov
lock
retf
push
or
popa
dec
xchg
lods
mov
jns
adc
sub
jmp
xor
adc
mov
addr16
jmp
mov
pop
xor
jns
cs
or
xlat
mov
mov
add
xchg
mov
adc
push
pop
pop
(bad)
clc
js
inc
arpl
idiv
loopne
ss
or
adc
jmp
enter
lods
pop
jns
sahf
fidiv
sar
pop
sbb
stos
loop
dec
fwait
lds
add
clc
leave
movs
or
push
push
mov
add
out
fiadd
sub
pop
popf
aas
xor
jg
dec
jmp
pop
mov
and
cmp
jnp
cs
test
bnd
add
xor
arpl
retf
test
mov
cmp
adc
div
pop
push
retf
adc
call
mov
push
xchg
push
cmp
data16
adc
cwde
inc
jno
jmp
sub
ss
(bad)
addr16
adc
push
mov
xchg
adc
xchg
int
jmp
cdq
call
xor
mov
add
jae
sahf
cmp
dec
mov
pop
jae
inc
or
loope
data16
movs
and
gs
sti
inc
int3
push
dec
(bad)
movs
jle
dec
(bad)
in
sbb
push
sahf
in
or
pusha
imul
pop
in
mov
test
jmp
ins
pop
cmp
mov
cmp
jmp
jg
or
xchg
inc
sub
mov
mov
int
xchg
call
ficom
adc
mov
retf
add
jecxz
push
and
loop
cmp
cmp
add
xchg
cmp
pushf
sbb
jae
aam
mov
and
in
jle
fiadd
out
jae
xor
mov
adc
pop
fwait
inc
jmp
mov
inc
adc
shl
ja
das
sub
mov
or
inc
cmp
cmps
inc
pop
dec
jns
(bad)
xchg
call
mov
into
pop
stos
dec
xchg
movups
loopne
lds
push
adc
fs
dec
aaa
ss
xor
mov
xor
(bad)
retf
adc
in
xor
xchg
mov
ins
call
rol
xchg
add
jmp
loope
add
(bad)
sbb
adc
cmp
pop
sbb
les
lods
jecxz
sub
int3
mov
out
loop
sub
ss
imul
adc
inc
push
push
pop
or
ins
mov
btr
add
stc
int
fiadd
cdq
adc
mov
push
pop
imul
outs
or
dec
mov
packsswb
sbb
pop
push
xor
xchg
in
cmp
movs
or
mov
ret
into
pop
jns
aas
pop
fsub
pop
jle
mov
pop
movs
inc
mov
int3
dec
scas
or
aam
fist
ins
sbb
mov
cmp
dec
xchg
or
dec
pop
or
(bad)
neg
xlat
fistp
mov
dec
loopne
mov
loope
loopne
(bad)
cld
cld
jae
push
mov
xchg
leave
add
cmp
js
jecxz
push
aaa
jb
in
enter
cli
inc
xchg
cmp
iret
jge
jp
ds
or
fld
sbb
push
dec
adc
outs
jae
fcomp
dec
sub
shl
cmp
xor
push
jbe
sti
into
inc
and
add
adc
shr
stos
xor
fxch
das
mov
movs
push
das
aad
stc
aas
clc
mov
lock
jge
pushf
xor
mov
loope
movs
adc
xchg
clc
test
mov
outs
xchg
mov
lahf
pushf
test
push
lock
xor
push
xor
xlat
aas
cld
mov
or
shl
pop
jle
imul
sub
mov
call
sahf
xchg
or
add
xchg
xchg
movs
icebp
or
adc
movs
mov
xchg
jne
xchg
adc
ins
shr
(bad)
push
loope
pop
jns
pop
mov
push
xchg
or
jmp
sub
add
sub
aaa
ret
jge
addr16
or
bswap
adc
cmp
mov
cmp
jb
jle
scas
dec
cmp
mov
inc
call
mov
imul
xchg
in
push
jnp
dec
repz
xchg
lahf
call
stos
or
test
sar
cmps
ret
push
lods
and
add
es
adc
out
cmps
xor
out
or
xor
into
mov
ret
cwde
in
inc
sub
mov
pop
jle
xchg
sti
push
sar
xchg
jae
outs
les
loope
aas
xadd
leave
jae
mov
rcl
push
dec
out
add
xchg
repnz
es
stc
and
add
sahf
mov
inc
mov
pushf
(bad)
jg
cs
or
rcl
arpl
mov
sbb
int
lods
inc
fist
lods
movs
dec
fs
movs
inc
xchg
fsubr
test
ss
jge
fmul
dec
data16
pusha
add
out
inc
and
movs
push
dec
out
dec
cwde
or
or
xchg
sbb
inc
xor
cmp
mov
jl
mov
imul
jbe
mov
mov
cli
popa
and
scas
mov
xchg
ror
push
imul
sahf
push
cmp
jae
js
xchg
mov
add
or
test
or
loop
fdivr
lods
shl
pushf
out
dec
repnz
cmps
push
dec
in
push
sahf
push
xor
hlt
pushf
ja
dec
push
iret
test
rcl
out
mov
mov
in
arpl
xor
mov
mov
adc
in
pop
pushf
repnz
lahf
pop
dec
cli
in
lahf
mov
mov
dec
cli
xlat
inc
or
cmp
scas
repz
and
icebp
ret
rol
icebp
dec
xchg
lods
xchg
test
xlat
(bad)
retf
mov
mov
std
cmp
inc
mov
je
cmp
pop
mov
out
outs
call
inc
sar
repz
imul
ret
mov
dec
jle
add
xor
(bad)
pop
out
jno
mov
mov
add
inc
and
cmps
mov
adc
fld
add
pushf
inc
dec
mov
jecxz
cli
dec
inc
fdivr
adc
in
or
inc
popa
(bad)
jb
mov
mov
inc
arpl
mov
test
aaa
mov
mov
repnz
mov
sahf
out
sbb
cs
mov
sub
xchg
mov
mov
lahf
fs
xchg
jecxz
push
mov
inc
or
pop
fwait
jecxz
nop
icebp
pusha
xchg
popf
das
jl
mov
ins
or
fs
xchg
pusha
adc
and
mov
fild
cdq
bound
shl
cmc
fwait
test
or
nop
nop
adc
pop
push
inc
mov
pop
in
inc
fisubr
fstp
cli
mov
fistp
nop
mov
dec
fcmovne
and
xchg
mov
jo
sahf
dec
addr16
nop
fisubr
out
out
xchg
inc
ins
cmc
add
add
dec
in
data16
dec
and
dec
jbe
mov
(bad)
add
inc
fmul
sbb
imul
xchg
out
cmp
mov
in
out
gs
sub
je
jge
repnz
or
mov
xchg
loop
mov
xchg
sub
dec
and
pop
or
sahf
mov
hlt
sbb
xor
(bad)
fimul
push
cmp
jl
xchg
inc
fisttp
mov
xor
outs
pop
pop
ins
cmp
sub
sub
cmps
add
rcl
and
lods
addr16
cdq
lods
mov
sbb
push
and
push
push
fld
sbb
push
adc
rcr
ja
sub
out
lods
mov
ret
ror
mov
jmp
sub
(bad)
and
mov
sti
push
jmp
mov
push
push
dec
jnp
inc
pusha
pusha
loope
sbb
call
push
pop
fcomp
(bad)
movs
push
mov
push
cdq
sbb
jmp
inc
movs
out
inc
adc
fs
ret
(bad)
or
xchg
dec
popa
rcr
test
fidiv
xchg
xchg
inc
cmc
jmp
hlt
xchg
mov
leave
in
jg
fadd
movs
rcr
jl
sbb
adc
adc
push
sub
popf
gs
xor
cmps
imul
cmps
setns
xor
inc
bnd
fwait
std
les
repnz
enter
push
imul
push
das
data16
push
adc
xor
sbb
scas
out
push
add
pop
inc
scas
cli
pop
lock
inc
repz
jns
test
neg
push
mov
pushf
pop
bound
icebp
mov
sub
and
push
or
mov
(bad)
pop
retf
aaa
mov
cmps
push
mov
xchg
sbb
push
sub
sub
push
push
shr
(bad)
je
call
jne
or
movs
icebp
dec
pop
and
and
pop
pop
jns
jne
or
mov
test
(bad)
fsub
push
inc
in
adc
add
inc
mov
pop
and
sbb
cmp
mov
and
repz
loope
pop
call
(bad)
xlat
mov
xchg
mov
mov
xor
xor
aas
movs
ret
fs
ret
gs
cdq
imul
imul
mov
sahf
lods
stc
inc
shl
cmp
dec
sbb
and
pop
cmp
out
hlt
dec
mov
xor
xor
push
or
stc
xor
gs
mov
cmp
sahf
jnp
pusha
cli
rol
mov
jmp
jp
xor
data16
inc
mov
loop
nop
mov
mov
ds
je
icebp
inc
pop
or
nop
aaa
into
aas
js
les
mov
push
xor
repz
or
mov
(bad)
sbb
adc
imul
xlat
jle
(bad)
mov
jg
rcl
js
jbe
cmp
inc
lahf
out
mov
pop
lock
mov
addr16
inc
scas
sub
cdq
mov
push
test
out
mov
jp
xchg
pop
loope
jns
in
xchg
out
mov
xchg
xor
in
(bad)
outs
sub
lods
sbb
fwait
mov
dec
push
adc
fsubr
retf
popf
mov
add
fiadd
pop
cdq
xor
pop
adc
add
jecxz
dec
daa
in
mov
cwde
mov
cli
mov
sahf
fidivr
pop
(bad)
fs
icebp
sub
pop
xor
mov
cmps
mov
outs
rcr
leave
fucomi
adc
sbb
cmp
jg
sti
into
in
pop
fdiv
mov
dec
jb
sbb
adc
inc
inc
dec
cli
push
mov
mov
cmp
or
(bad)
fsubr
fdiv
popa
sahf
stc
xchg
mov
cmp
sbb
out
or
cmps
scas
push
out
lds
icebp
pop
shl
sub
jb
or
clc
sbb
cmp
fistp
add
cli
mov
(bad)
nop
xchg
lahf
and
inc
loope
(bad)
sub
mov
loope
test
cmp
mov
mov
in
cmps
adc
mov
mov
fist
mov
bound
imul
sub
jbe
jno
int3
mov
je
or
mov
mov
pop
mov
rol
inc
jecxz
in
je
cmps
ins
das
and
pop
jnp
jge
rol
ret
lahf
test
adc
mov
mov
cmp
lahf
int
mov
ja
(bad)
xchg
rol
and
mov
xchg
sub
outs
into
cmp
mov
xor
stc
xor
add
mov
stc
outs
addr16
pop
cmp
(bad)
mov
aam
movs
fwait
jb
ss
dec
int3
loope
jg
mov
out
jge
mov
push
loopne
add
cmp
adc
jo
jge
lock
mov
call
push
hlt
jo
fcom
test
push
in
popf
add
inc
push
call
(bad)
push
es
xchg
(bad)
cmp
cmp
es
pop
jge
mov
mov
mov
bound
inc
inc
mov
cmps
or
stc
adc
xor
jle
xchg
inc
xor
fsub
bound
fnstsw
lods
je
cld
bound
dec
push
jno
pop
lds
inc
jo
out
cdq
loopne
inc
mov
imul
inc
dec
sub
sbb
ret
mov
push
sub
push
ins
(bad)
mov
or
pop
xor
sub
mov
push
fcompp
jmp
jp
popa
lahf
cli
jbe
push
inc
mov
stos
add
pop
cld
arpl
(bad)
lock
jns
mov
xor
mov
push
cs
jno
nop
pop
fnstsw
cmp
outs
clc
repz
addr16
cdq
sub
repnz
rol
xlat
cmp
sahf
sbb
sub
pop
leave
mov
adc
movs
fisub
test
fs
ja
sbb
sbb
addr16
out
lds
test
mov
movs
mov
mov
pop
pop
pop
lods
stc
mov
lods
lds
jmp
inc
call
ror
cdq
pop
push
xor
in
nop
fsub
lds
out
shr
xchg
adc
div
nop
retf
or
scas
mov
bound
sub
leave
mov
(bad)
fadd
scas
pop
retf
mov
sbb
movs
push
jns
mov
dec
mov
add
jg
dec
outs
aad
or
cmp
(bad)
cli
mov
push
mov
(bad)
test
aam
scas
jmp
in
mov
aad
adc
jecxz
inc
ins
jno
pop
shr
pop
xchg
call
lahf
mov
cmp
push
sbb
cmps
les
daa
mov
xor
aas
or
mov
mov
add
lock
pop
retf
in
or
leave
pop
fstp
pop
inc
test
dec
aas
xor
push
mov
push
xor
fstp
les
and
add
sbb
inc
or
aad
pop
mov
mov
rcl
cld
mov
sub
xor
push
hlt
pushf
jle
lods
mov
test
test
adc
xchg
inc
push
xor
mov
mov
popa
div
or
inc
lods
pusha
popa
fdivr
pop
pop
or
push
adc
ja
daa
jmp
ret
into
adc
sbb
leave
je
cmp
movs
xchg
jp
das
dec
shr
cwde
jp
fs
xchg
outs
cmp
ret
gs
retf
jl
mov
jno
aaa
clc
call
ret
xchg
fsin
loope
push
cwde
fwait
mov
out
scas
sti
mov
test
jle
mov
jns
mov
dec
outs
sub
retf
test
mov
fisub
mov
add
xchg
jl
dec
imul
sar
and
pusha
inc
ss
imul
xchg
es
add
and
jl
aaa
dec
iret
out
pop
mov
cld
int
jae
and
inc
enter
inc
mov
fild
and
fsubr
fist
std
adc
hlt
jns
enter
dec
in
sar
push
mov
xlat
aas
inc
pop
scas
jg
ins
add
outs
sub
cmp
sub
mov
rcr
sub
imul
dec
out
inc
and
dec
push
icebp
lods
inc
pusha
mov
push
jp
cwde
jg
jle
pop
test
fdiv
mov
pop
mov
cli
sub
cdq
inc
arpl
dec
dec
test
or
in
in
popf
out
sub
repz
movs
adc
cld
jne
lods
iret
mov
pop
clc
imul
jae
aaa
mov
shr
cli
or
push
shl
adc
fstp
pop
and
push
push
xor
add
mov
add
lods
mov
xchg
push
pop
(bad)
pop
scas
call
pop
lods
lods
jb
xchg
hlt
cmp
cmp
pop
test
ss
leave
je
ror
es
pushf
push
xor
or
sub
mov
mov
push
mov
and
sbb
adc
bound
aaa
test
mov
imul
scas
shl
stc
ins
test
ret
test
mov
(bad)
fistp
push
mov
jno
cli
add
adc
mov
jne
iret
inc
retf
adc
inc
and
pop
push
ja
mov
add
mov
xchg
jp
js
rcr
mov
mov
aad
not
je
test
add
mov
aad
test
xor
pushf
fdivr
cmp
das
add
jge
sbb
xor
adc
adc
xchg
sahf
adc
xor
sub
mov
push
loope
mov
lea
inc
xor
loope
push
cmp
(bad)
mov
popa
push
cmp
out
out
out
xor
fst
lea
sar
mov
xchg
adc
je
js
fsub
cwde
imul
mov
inc
ja
or
jno
and
retf
xor
dec
adc
pop
lahf
jae
adc
xchg
idiv
sub
dec
inc
jae
movs
loopne
sbb
mov
dec
push
add
lods
mov
xchg
aad
push
sbb
stos
arpl
test
xor
cmp
les
jo
dec
add
push
pop
pop
pop
cwde
pusha
scas
sub
jae
sub
cmp
push
ins
jo
sbb
sti
pop
pop
sub
mov
mov
or
iret
pop
popa
pop
push
pop
mov
pop
dec
or
mov
and
mov
js
gs
es
pop
dec
and
xchg
xchg
mov
movs
and
imul
jmp
pushf
hlt
cli
imul
(bad)
pop
mov
out
cmc
loop
xchg
sbb
ror
inc
dec
fadd
push
stc
outs
push
fucomp
add
int
jmp
sub
add
cmps
std
mul
dec
imul
ss
leave
(bad)
xor
out
push
outs
test
cmovnp
xchg
scas
ror
loope
push
leave
adc
mov
stc
adc
pop
pushf
cmp
in
in
scas
jns
(bad)
cmc
cmp
add
cli
push
(bad)
std
test
aam
fs
out
mov
popa
pop
mov
cld
clc
imul
push
rol
retf
fsub
mov
xchg
cld
xor
jo
pop
adc
aad
into
cwde
and
adc
cmp
mov
ja
adc
pop
loope
fcomp
xchg
adc
fld
dec
out
je
or
das
not
mov
loope
enter
jmp
inc
xchg
xor
mov
xor
pushf
cld
jmp
xor
sub
(bad)
loope
call
int3
cwde
mov
xchg
sbb
mov
add
shl
lea
not
and
mov
mov
dec
ins
xchg
stos
ret
stc
popf
addr16
retf
jl
or
push
sub
mov
ucomiss
sub
test
adc
mov
mov
cld
mov
es
dec
jno
push
jmp
loope
push
jmp
test
xor
lahf
retf
retf
sbb
fisub
jae
inc
test
and
call
std
cs
ins
dec
mov
mov
or
and
inc
pushf
add
sbb
stc
(bad)
add
sub
aam
xchg
fwait
push
dec
nop
mov
aad
(bad)
jle
and
jno
dec
add
(bad)
ds
idiv
lock
add
jo
cmp
js
es
and
lahf
cmp
and
cld
push
pop
movs
cdq
test
push
mov
pop
imul
xchg
ret
test
pop
and
cmc
adc
mov
cmps
xor
movs
mov
xchg
pop
ror
pop
jns
jne
mov
mov
jg
stc
jne
pop
dec
mov
xor
adc
inc
out
dec
jae
xor
loope
(bad)
jmp
inc
fs
and
fisubr
sbb
cmps
fsubr
inc
out
clc
ror
(bad)
mov
mov
arpl
pop
aad
sub
(bad)
mov
enter
(bad)
cmp
inc
inc
fsubr
xchg
jb
in
in
ins
sbb
inc
enter
inc
inc
mov
cmp
movs
and
push
js
lods
add
mov
inc
adc
mov
pop
mov
sub
out
aad
adc
adc
push
push
in
mov
aam
jnp
xchg
ficomp
test
and
jno
iret
test
add
and
dec
movzx
push
sahf
and
in
add
les
(bad)
pop
dec
dec
ret
or
int3
cmp
adc
adc
mov
mov
cdq
sar
movs
mov
js
fld
pop
cmp
popa
mov
cmps
(bad)
iret
test
push
xor
fidivr
adc
mov
gs
mov
jae
aas
cdq
cs
mov
es
jb
mov
dec
dec
cmc
push
popf
in
sahf
in
sahf
aad
xor
mov
and
push
pop
les
out
sar
(bad)
xlat
or
rol
inc
dec
int
fst
mov
mov
xchg
fnstcw
push
data16
cwde
jp
add
ins
xor
mov
jns
inc
cwde
int
(bad)
mov
pop
sbb
sahf
xor
out
dec
(bad)
aas
cmp
mov
cld
xor
push
inc
push
mov
and
dec
stos
pop
adc
retf
and
sbb
inc
ror
mov
stc
and
jmp
inc
cmp
div
(bad)
mov
rcl
jecxz
pop
or
fmul
test
call
mov
mov
rcl
cmps
in
out
sub
fnstsw
sbb
pop
cmp
jno
cs
imul
std
inc
jle
pop
iret
fadd
std
jmp
imul
adc
sub
retf
sub
(bad)
(bad)
(bad)
ins
pop
loope
outs
fild
inc
jno
lods
cmp
jle
mov
fld
jnp
jb
xor
inc
test
(bad)
adc
xchg
cdq
sub
inc
and
shr
cmp
pop
cmp
adc
frstor
fistp
pop
dec
sub
mov
ret
stos
test
push
out
mov
retf
pop
and
and
nop
push
add
fidiv
cmp
or
cmp
sbb
not
pushf
out
cmp
cdq
adc
mov
xchg
push
sbb
lock
mov
cmp
lahf
or
and
inc
int3
xchg
gs
daa
loope
test
(bad)
cmp
ins
ss
cmp
cmps
lahf
movs
cmp
movs
mov
adc
cmp
cs
and
jns
xchg
fwait
cmps
fst
mov
xchg
retf
mov
test
sub
jb
daa
psubb
popa
movs
(bad)
ficom
arpl
into
dec
xor
add
out
push
cmp
call
ins
leave
xor
sbb
das
call
or
add
mov
xchg
outs
retf
cmps
jmp
loop
les
mov
out
arpl
dec
xchg
push
adc
inc
popa
int
dec
xor
mov
sub
add
inc
jnp
xchg
jp
xor
push
add
ss
aam
test
push
(bad)
push
push
xchg
jmp
jecxz
dec
push
fstp
xchg
mov
arpl
jae
fild
dec
cmps
add
sub
test
jo
cdq
popa
mov
mov
or
(bad)
leave
nop
lods
push
push
mov
movs
cdq
adc
fcomp
fisttp
hlt
ficomp
stc
stos
out
and
in
pop
mov
push
mov
ins
gs
(bad)
xor
addr16
cwde
push
call
inc
in
mov
jp
or
scas
add
add
inc
ins
jae
fs
mov
inc
icebp
pop
inc
sysexit
pop
loopne
sbb
loopne
sti
cmps
es
jo
xor
lea
dec
dec
mov
stc
xchg
xchg
rol
mov
cli
pop
pushf
loopne
rcl
fs
mov
sbb
pop
xor
push
fwait
mov
dec
jnp
and
mov
sti
fistp
sti
enter
imul
shl
(bad)
test
jge
inc
and
add
mov
into
cmp
les
retf
inc
push
std
inc
es
pop
js
loop
scas
aas
inc
pushf
jns
fidivr
mov
dec
pushf
ins
pushf
(bad)
mov
jl
add
mov
lods
hlt
sub
das
cmp
std
in
ret
push
popa
stos
clc
add
loopne
stos
or
in
rol
pop
push
jge
mov
cmp
push
cmps
jle
mov
pop
clc
add
mov
mov
or
test
mov
sub
dec
xchg
mov
ds
add
mov
inc
std
in
pusha
addr16
test
inc
arpl
lods
shl
add
test
push
out
cmp
ds
rcl
mov
ins
dec
mov
jo
cmp
jns
fdivr
cwde
xor
jl
jnp
pop
xlat
add
jecxz
add
push
xchg
xchg
mov
dec
adc
gs
push
jmp
mov
jmp
pop
sbb
mov
rcl
imul
pop
cdq
(bad)
dec
rcl
pop
pop
jns
adc
data16
xchg
push
jb
es
mov
aaa
mov
jmp
idiv
cmp
xor
or
imul
sbb
or
out
push
test
leave
sub
cwde
mov
stos
out
pop
xor
adc
dec
loopne
cmp
out
mov
outs
bnd
test
or
add
or
mov
adc
jne
cld
(bad)
out
and
data16
mov
lock
push
mov
in
hlt
jns
(bad)
push
cmps
ins
dec
clc
dec
ds
ins
rcl
test
hlt
mov
test
inc
jne
xchg
out
mov
jnp
mov
loopne
xchg
dec
pop
cmps
arpl
or
xor
mov
mov
dec
mov
arpl
sbb
in
in
cmp
sub
(bad)
xchg
or
push
daa
and
mov
cmp
loope
lahf
pop
inc
(bad)
sub
pop
xchg
cmc
repz
dec
cmp
(bad)
sti
clc
pop
push
mov
clc
push
sub
sub
dec
scas
dec
xchg
push
ins
xor
adc
int3
les
mov
xor
sub
int
push
push
enter
jle
scas
aad
inc
jp
arpl
add
das
dec
stc
pop
xchg
xor
cmc
push
inc
rol
int
sbb
stc
cmp
sbb
sbb
pop
pop
mov
das
jnp
mov
movs
fwait
xlat
(bad)
cli
shl
jmp
in
shl
int3
mov
imul
xchg
xor
add
jbe
adc
shr
dec
mov
inc
jne
cdq
and
mov
cld
sbb
fwait
push
mov
and
hlt
ficom
rcl
xchg
fwait
movs
scas
mov
inc
cmps
addr16
movs
jp
mov
les
and
popa
ds
loopne
fild
jbe
mov
adc
retf
push
pop
rol
sbb
fldcw
mov
cli
mov
clc
addr16
and
xchg
rol
icebp
movs
mov
pushf
mov
mov
hlt
jae
xchg
scas
sub
jbe
shr
(bad)
fcom
fnstsw
iret
push
cwde
sub
dec
cmps
stc
mov
mov
sub
arpl
test
pop
lods
or
imul
adc
and
push
inc
retf
inc
in
imul
xchg
inc
hlt
dec
outs
shr
mov
pop
cmp
mov
push
mov
(bad)
sub
dec
pop
sub
push
jns
and
(bad)
mov
jo
jno
shl
adc
or
xor
movs
inc
int
pop
lods
cmc
jo
out
into
xor
pop
fistp
out
std
cmps
shl
call
outs
in
pop
out
mov
dec
and
lahf
ins
(bad)
push
push
pop
mov
xor
adc
and
pop
(bad)
call
push
ins
dec
cmps
iret
call
retf
push
or
dec
mov
sbb
mov
cmp
mov
cdq
inc
repz
cs
mov
movs
jmp
pushf
cdq
ins
sbb
mov
test
cmp
stos
es
retf
adc
mov
ret
cmp
jmp
sub
push
mov
add
fdiv
retf
inc
sub
sub
mov
in
test
sahf
stos
mov
mov
cmp
call
(bad)
mov
cmps
mov
ret
ret
in
ins
mov
xchg
repnz
call
lea
popw
xchg
adc
rol
retf
ss
dec
and
pop
xor
popf
gs
mov
jecxz
xor
loopne
push
push
fimul
loope
frstor
jl
fcomp
push
mov
mov
xor
xchg
les
shl
jbe
test
fucompp
add
sbb
cmovle
(bad)
jae
stc
lods
jo
dec
fdivr
jne
test
lds
adc
fcomp
cld
and
mov
iret
sub
pushf
mov
gs
out
and
xchg
jb
sub
inc
mov
popf
fistp
mov
mov
popf
loope
xor
jl
pop
in
and
cmp
test
int
fs
out
neg
sti
jno
enter
jnp
add
rcr
inc
mov
lds
xchg
fisttp
in
pop
cli
iret
jae
push
mov
aaa
sgdtd
mov
jge
rcl
mov
es
adc
ins
out
ret
mov
fmul
jmp
addr16
(bad)
test
(bad)
xchg
mov
dec
fdiv
mov
loop
sbb
mov
dec
cli
imul
arpl
pop
test
mov
pushf
ins
jbe
call
icebp
mov
je
pop
movs
retf
mov
adc
jb
mov
aad
mov
cmps
ins
ficom
mov
push
sub
push
sbb
xlat
push
popa
push
mov
aaa
inc
xor
mov
fistp
retf
push
retf
sahf
jl
pop
jns
into
stc
dec
mul
js
pop
lahf
scas
pop
and
mov
lea
or
cmp
mov
ja
dec
push
pop
in
rcr
jmp
or
outs
push
sbb
push
arpl
and
or
call
cmps
mov
lock
fnstsw
arpl
ss
in
in
pop
and
retf
inc
adc
fst
mov
arpl
xor
sbb
daa
into
fisttp
aas
js
dec
aad
push
stc
inc
inc
gs
fsubr
add
jnp
cli
add
dec
push
(bad)
lods
pop
cs
xchg
out
icebp
and
sti
leave
adc
pop
out
xor
scas
outs
push
inc
dec
shl
lahf
jmp
jbe
sub
inc
rol
jne
mov
mov
jg
movs
bound
pop
pop
jne
fxch
imul
jnp
loop
sbb
not
xchg
sub
mov
push
jbe
dec
lock
inc
push
dec
pop
fstp
cmps
hlt
ret
xor
jmp
fwait
sbb
retf
pop
lock
pop
fisubr
jmp
(bad)
gs
enter
mov
pop
mov
pop
mov
jmp
and
lds
enter
inc
and
retf
sbb
fadd
add
mov
push
(bad)
adc
and
push
mov
cwde
std
retf
jb
adc
aad
add
jns
popf
dec
rol
(bad)
push
fisttp
cmp
into
mov
ret
mov
(bad)
loope
push
pop
pop
imul
shl
push
pop
dec
sbb
xchg
jecxz
dec
push
pop
pop
sub
inc
stos
and
push
pop
pushf
sub
call
xor
adc
aaa
jp
popa
test
scas
or
jbe
jne
out
jbe
and
out
arpl
fiadd
sbb
xor
jmp
jge
jmp
jecxz
aad
std
aam
jae
sbb
mov
xchg
ret
dec
enter
aas
mov
jae
rol
xchg
cli
pusha
or
mov
adc
adc
call
mov
aas
cli
pusha
(bad)
adc
jmp
add
mov
cmp
mov
lods
sbb
jg
cmp
or
mov
pop
add
data16
cmp
mov
cld
sub
neg
pusha
xchg
sbb
push
in
dec
mov
xor
out
fs
ss
arpl
xor
mov
mov
mov
add
sbb
and
popa
fistp
xchg
and
add
bound
or
gs
mov
test
or
inc
jne
pop
fsubp
loopne
fdiv
xor
xchg
xchg
imul
sbb
fidiv
loope
cld
mov
pop
fadd
jge
mov
jg
cmp
jmp
sbb
inc
sbb
add
inc
adc
scas
mov
sbb
ror
out
dec
fwait
ss
xor
sub
push
and
jo
(bad)
cmp
bound
jno
lds
cdq
sub
cmc
je
jmp
jg
pop
and
adc
mov
adc
sbb
pushf
adc
js
jb
push
in
or
or
sub
inc
or
mov
or
sub
cld
mov
retf
ins
push
imul
jmp
outs
adc
(bad)
(bad)
sbb
xor
movs
(bad)
push
cmps
(bad)
sbb
je
jp
les
jbe
fidivr
sub
stos
dec
jno
mov
jno
mov
outs
xchg
out
cmp
dec
icebp
pop
inc
mov
jnp
pop
or
adc
xlat
fst
shl
pop
and
outs
jle
cmp
cmp
call
call
daa
pusha
dec
xchg
xchg
out
ror
pop
rol
ins
dec
xchg
sub
jg
inc
jne
fmul
mov
jbe
sbb
(bad)
jp
(bad)
aas
xor
rol
outs
jmp
retf
sbb
(bad)
mov
xchg
aad
aam
outs
movs
in
repz
xchg
lds
sub
cmp
sbb
outs
ror
xlat
fwait
mov
jecxz
pop
xchg
(bad)
imul
xchg
add
xchg
xor
xchg
add
stos
test
fdivr
jp
push
aas
cmp
push
scas
xor
aaa
cmp
imul
popa
cld
or
test
xchg
in
loope
out
or
mov
xor
in
push
xor
sub
xchg
xor
or
(bad)
xor
out
and
inc
fsubr
or
and
out
test
or
js
mov
out
mov
sub
(bad)
sahf
ss
mov
sub
nop
lock
mov
stos
pop
test
enter
cdq
(bad)
daa
adc
mov
jle
out
jb
ret
jmp
das
cmp
push
dec
je
inc
jnp
inc
and
(bad)
sbb
(bad)
mov
mov
inc
mov
sub
icebp
mov
xor
mov
and
int3
mov
inc
fisubr
xchg
jp
mov
(bad)
and
mov
inc
lods
outs
in
mov
push
jmp
push
pop
xchg
mov
cli
(bad)
popa
dec
pop
in
in
test
push
xchg
push
(bad)
inc
cmc
adc
jg
adc
movs
aam
jb
xchg
inc
jo
ret
xchg
xchg
xor
dec
je
sub
loope
imul
xchg
retf
dec
adc
pop
push
ss
clc
call
stc
fist
jno
ss
data16
imul
push
js
push
adc
and
test
cmp
and
jae
enter
pop
jge
rol
dec
ins
jo
cld
sbb
pop
out
addr16
jp
push
int
push
cmp
sub
jl
movs
shr
scas
out
(bad)
mov
ror
pop
adc
jl
stos
rcr
cmp
imul
leave
(bad)
(bad)
jl
cmc
mov
imul
add
popa
(bad)
clc
test
pusha
push
push
pop
xchg
dec
and
(bad)
out
cmps
ror
jnp
in
or
sbb
sub
jnp
cld
mov
xchg
in
enter
cdq
cwde
xchg
lahf
xor
test
cli
cs
leave
ss
loop
fnsave
xchg
jne
outs
xor
inc
cmp
pop
xchg
in
sbb
ficomp
test
sub
lock
popf
mov
mov
into
push
jo
push
xchg
iret
adc
test
cs
inc
ret
push
enter
aas
dec
ja
mov
add
jmp
movs
idiv
rcl
mov
cmps
scas
adc
jge
inc
dec
scas
(bad)
jmp
cmp
bound
mov
imul
sub
pop
or
dec
(bad)
jno
and
cmps
or
movs
jo
pop
mov
adc
add
mov
mov
dec
push
jg
xchg
aas
movs
cmp
cwde
dec
faddp
and
cmp
fisub
test
mov
and
inc
and
sub
(bad)
pop
inc
in
pop
add
xchg
mov
add
les
push
xor
sub
jb
cmp
dec
mov
dec
stos
jmp
add
add
jle
or
mov
lea
aam
popf
int3
mov
cmps
push
pop
sbb
stc
mov
pop
addr16
aas
jmp
jb
lock
xchg
mov
and
mov
mov
scas
pop
fstp
dec
mov
pop
out
push
dec
pop
jno
out
aam
out
(bad)
in
xor
push
and
push
add
push
scas
in
add
mov
and
push
xor
cmps
ss
pop
fist
pushf
ror
imul
jno
sbb
sbb
cmp
iret
jb
jecxz
and
ja
and
xor
scas
mov
int
cmc
inc
push
aam
loop
jg
mov
loope
(bad)
mov
shr
jmp
mov
jmp
pop
adc
mov
shl
sbb
dec
rcr
cdq
or
and
jl
(bad)
loopne
aaa
xchg
sub
pop
push
and
fstp
pop
fld
pushf
lock
frstor
jae
mov
mov
bound
mov
lods
in
xchg
jnp
push
push
dec
or
imul
es
xchg
addr16
rol
movs
mov
cmp
stos
jg
mov
bound
(bad)
cmps
jle
or
nop
jle
dec
mov
push
jo
outs
imul
es
adc
sti
retf
in
pop
mov
pop
push
mov
sar
fcmovnbe
lea
fiadd
jbe
rol
clc
ror
sbb
aaa
out
push
fnsave
shl
(bad)
jge
std
dec
mov
pop
lods
ror
xchg
call
icebp
les
sti
inc
in
call
(bad)
pop
cmp
popa
rol
hlt
in
loopne
inc
adc
fsub
aam
xor
pop
das
and
mov
jmp
sub
aam
mov
shl
popf
inc
in
data16
ficomp
loopne
xchg
sti
test
adc
cmp
icebp
pop
or
inc
outs
add
adc
cli
mov
mov
gs
dec
pop
push
fist
jmp
xchg
jno
pusha
lds
cmc
add
movs
out
dec
sti
sbb
outs
push
aam
add
cli
stos
in
jns
sub
(bad)
bound
and
lods
xchg
lods
dec
inc
lahf
mov
jb
and
gs
fmul
fcom
ins
xor
test
in
loopne
or
or
in
and
out
jp
ret
test
hlt
sbb
mov
adc
xor
inc
(bad)
jmp
ror
push
inc
adc
fild
xchg
cld
mov
xor
fistp
mov
daa
pop
(bad)
cs
jmp
mov
pop
fnstcw
jg
les
dec
jmp
(bad)
addr16
xchg
cdq
add
ret
in
or
scas
imul
lock
nop
pop
sti
xlat
mov
mov
mov
sti
adc
scas
push
pop
aas
iret
cmps
pop
pop
push
scas
adc
jae
out
xchg
sub
(bad)
mov
push
jp
mov
inc
fldcw
call
nop
dec
call
cld
outs
hlt
movs
push
call
lods
loopne
jns
jnp
inc
pop
mov
sub
in
test
rcr
push
push
cmps
xchg
jle
cmps
push
mov
(bad)
test
lock
jnp
mov
arpl
movs
jl
pop
adc
adc
test
sahf
xchg
inc
mov
mov
shr
(bad)
outs
add
nop
push
shl
sub
in
sub
sbb
mov
sub
inc
call
into
dec
push
mov
mov
and
cmp
(bad)
xchg
in
in
stc
ficom
adc
xor
mov
ja
push
shl
je
jns
aad
(bad)
movs
mov
dec
aas
pushf
mov
test
xor
dec
adc
jno
add
mov
xchg
into
movs
cwde
clc
jmp
cmp
popa
popa
push
dec
hlt
inc
loopne
pop
jbe
mov
sub
lods
loop
nop
ins
out
imul
and
imul
je
push
lds
test
call
outs
mov
in
je
call
jg
jl
mov
xchg
inc
mov
mov
ret
jne
loopne
xor
lds
xchg
lahf
les
cmps
ror
ficomp
cmps
shl
outs
enter
ficomp
dec
in
test
aaa
pop
push
adc
sub
(bad)
data16
sbb
retf
in
cli
cmp
int
dec
dec
in
push
cs
cmps
cmps
psubw
je
aaa
loop
sbb
(bad)
push
into
and
jno
and
adc
iret
cmp
push
aad
mov
gs
add
lahf
inc
dec
dec
(bad)
dec
scas
and
ins
jns
imul
popa
jl
add
rcl
dec
xchg
add
(bad)
test
ror
lods
pop
or
pop
or
enter
push
xor
pop
jne
es
push
imul
and
mov
mov
aaa
icebp
xchg
jmp
pop
cdq
retf
and
and
xor
clc
mov
dec
add
jmp
lea
add
and
cld
add
retf
inc
nop
gs
sbb
and
out
out
sar
ds
sbb
stos
sub
push
adc
ins
cdq
xchg
dec
ret
test
jmp
adc
(bad)
in
popa
cmp
ss
stos
jo
repz
pop
xor
push
dec
adc
into
or
fcomp
(bad)
popf
movs
jle
mov
call
(bad)
loop
add
aam
stos
xor
xor
pop
addr16
mov
cmps
mov
sbb
scas
out
pushf
adc
cmp
movs
mov
ss
mov
cmps
mov
mov
add
pushf
clc
xor
rcl
cs
sub
xor
fs
mov
fs
mov
jns
ret
xor
sbb
sahf
out
push
pop
cmp
xchg
neg
dec
fwait
sub
jp
shr
ror
(bad)
mov
lods
mov
pop
mov
int
retf
push
push
mov
xchg
cdq
jb
sbb
push
xor
daa
cs
ins
dec
ficom
in
jae
or
fiadd
mov
sbb
cmp
add
enter
mov
jae
in
inc
jne
cmc
call
leave
fld
out
fst
out
inc
(bad)
jmp
inc
xlat
idiv
adc
jmp
xor
out
sub
inc
push
popf
adc
or
retf
ja
sub
pusha
mov
and
inc
rcl
xchg
sub
test
add
daa
aas
ds
cs
adc
ss
push
xor
mov
mov
push
fcomp
adc
or
or
mov
sahf
add
add
adc
xor
stos
pop
imul
adc
test
or
fmul
ret
mov
or
fist
pop
xor
and
scas
retf
out
loopne
and
add
push
aad
jmp
shl
in
push
(bad)
in
jmp
and
dec
xlat
or
dec
shr
mov
ins
mov
adc
jmp
xlat
add
retf
(bad)
mov
lock
cmps
fcomi
dec
or
or
adc
pusha
xor
jl
push
leave
xor
mov
adc
mov
call
pop
xlat
loopne
ret
mov
ret
out
rcl
inc
jmp
jnp
fisttp
or
ins
ret
out
jo
pop
int
mov
in
movs
xchg
loopne
cmp
push
ins
xchg
call
or
call
pop
mov
add
and
nop
lock
add
enter
stos
mov
aas
sti
test
nop
inc
push
sub
xchg
shl
sbb
dec
jmp
and
pushf
or
ja
stos
xor
in
jecxz
jle
add
inc
mov
cmp
add
jl
aas
shl
sbb
icebp
ins
and
fs
cmp
lock
jmp
repz
jae
push
jp
jge
inc
and
xchg
adc
imul
scas
(bad)
dec
imul
ja
lea
add
imul
cdq
and
xchg
mov
(bad)
out
scas
(bad)
cmp
adc
jmp
cmp
mov
jmp
push
jmp
xchg
inc
in
in
shl
xchg
jmp
cmps
sbb
es
or
mov
sbb
outs
outs
push
adc
scas
xor
ds
and
shl
fdivrp
push
stc
inc
pop
nop
or
push
leave
(bad)
xchg
sub
and
(bad)
stc
lea
push
aad
jne
dec
dec
pop
pusha
xchg
pop
bound
rol
iret
hlt
hlt
sbb
movs
cwde
dec
mov
mov
inc
jmp
adc
and
daa
inc
push
xchg
mov
pop
stos
jno
sbb
rcr
addr16
movs
in
stos
(bad)
jbe
adc
sbb
stc
repnz
jbe
call
mov
jmp
inc
jg
jl
cmp
mov
test
jmp
mov
mov
jmp
clc
jbe
inc
pusha
(bad)
cs
jecxz
add
and
jmp
or
push
test
shl
inc
js
pop
in
not
(bad)
inc
adc
test
pop
retw
pop
out
mov
aas
xor
xchg
xchg
fidiv
mov
jl
out
cmp
fmulp
sub
jl
mov
movs
push
aam
jp
out
mov
inc
cmps
(bad)
mov
fnsave
xor
inc
sbb
fild
push
push
push
jns
add
or
mov
jns
xchg
cmp
or
inc
and
fnstcw
add
push
push
jge
push
lods
cmps
jns
inc
jns
cmps
(bad)
movs
in
push
pusha
dec
jle
pop
sti
fsubp
mov
inc
cmp
adc
sti
xor
mov
adc
sub
xchg
adc
fld
mov
cmp
mov
aam
int
push
inc
retf
iret
sbb
jo
imul
retf
shr
pop
xchg
retf
rol
xchg
retf
sub
push
mov
aaa
jno
adc
push
pop
sub
add
(bad)
retf
sbb
xor
add
jmp
test
lods
jae
call
lahf
data16
hlt
mov
pushf
sub
sbb
pop
aam
add
push
pop
stos
sbb
ret
or
cdq
xlat
jge
mov
loope
adc
fistp
sbb
inc
lods
jp
and
push
dec
jne
mov
dec
add
pop
or
xchg
or
pop
test
test
bound
hlt
in
inc
out
add
lock
inc
aad
mov
pop
enter
push
inc
pop
bound
js
dec
pop
dec
lods
cwde
cmp
(bad)
and
loope
js
lds
dec
push
sbb
outs
fst
sti
push
or
jg
xchg
(bad)
loopne
cmps
xor
ins
std
mov
mov
inc
(bad)
aad
fisubr
pop
pop
mov
cmp
push
pushf
(bad)
fistp
adc
loop
mov
nop
and
out
lods
lahf
pop
rcr
rol
add
aaa
cmp
sbb
daa
add
scas
je
pop
or
cld
mov
pop
xor
inc
adc
sbb
push
xchg
mov
jmp
iret
cwde
hlt
lods
xor
out
jmp
push
pusha
shl
mov
call
retf
jno
not
push
retf
aaa
or
pushf
mov
inc
ins
dec
push
mov
js
push
enter
pause
cld
aam
push
and
int
fldenv
mov
dec
lods
stos
nop
mov
mov
pop
sbb
sbb
sub
dec
and
mov
jmp
push
sub
mov
dec
sbb
sub
call
cwde
shr
repnz
cs
shr
js
ret
popa
xchg
add
inc
mov
pop
js
mov
add
pop
mov
(bad)
or
mov
mov
dec
sar
xchg
adc
in
int3
cmps
pop
inc
dec
out
inc
cdq
fldcw
mov
dec
mov
fmul
rcl
xor
jo
jge
mov
outs
scas
pushf
pop
outs
cmc
call
xchg
mov
int
jb
or
cmp
sbb
mov
jnp
pop
sbb
cmp
jae
push
dec
push
das
inc
jmp
jbe
(bad)
mov
icebp
clc
sbb
adc
sub
fwait
out
jmp
clc
xor
mov
xchg
sbb
adc
sub
outs
test
jbe
aam
jns
xor
adc
test
pop
jmp
test
je
add
sub
sbb
add
dec
or
out
fmulp
xchg
push
(bad)
mov
cmp
jmp
cmp
jne
arpl
ror
mov
adc
inc
inc
rol
and
inc
inc
in
repnz
push
or
aam
push
mov
retf
movs
push
rol
push
and
push
mov
hlt
ins
sub
dec
mov
clc
push
push
popf
cs
je
pop
inc
cwde
or
mov
dec
stos
mov
mov
sbb
movs
mov
add
ss
jae
and
inc
pushf
das
loopne
ret
fld
add
mov
push
shl
mov
cwde
push
inc
push
enter
out
fwait
mov
mov
mov
imul
test
xchg
sar
ins
xchg
cmp
jnp
inc
sahf
adc
cwde
pop
shl
pop
call
imul
rcl
aam
inc
mov
outs
mov
rcl
pop
call
cwde
mov
cmp
test
xchg
cmp
dec
sbb
cld
dec
movs
fwait
or
mov
fmul
test
shl
and
arpl
enter
pop
xchg
stos
dec
and
mov
push
dec
ds
jle
mov
mov
mov
(bad)
push
cld
cmp
ficomp
out
loop
loope
enter
adc
ja
out
fnstcw
outs
push
les
test
xchg
mov
inc
lods
aam
popf
push
jb
mov
push
(bad)
jl
push
inc
sahf
mov
adc
jmp
sub
sub
cmp
sub
in
sub
push
fistp
test
das
fistp
pop
mov
mov
and
pop
adc
(bad)
stc
nop
adc
sbb
pop
mov
push
push
fcom
rol
push
xor
mov
and
mov
shl
icebp
jp
aaa
shl
jo
xor
sub
ret
cmp
outs
into
jno
inc
sbb
and
enter
data16
cmc
fbld
push
pop
jae
and
outs
push
cwde
mov
ja
(bad)
jae
call
and
ja
sar
jl
jmp
add
loop
dec
scas
out
mov
pop
test
pop
xchg
jmp
dec
push
mov
mov
jl
sti
lods
xor
ja
icebp
in
loop
xchg
jmp
sbb
add
jne
test
adc
sub
adc
add
mov
aam
inc
mov
pop
jle
stc
shr
push
or
(bad)
idiv
movs
ja
push
mov
pop
add
repz
adc
in
jmp
jl
js
out
cmp
imul
sub
sahf
cdq
outs
jb
push
mov
in
movs
mov
(bad)
mov
leave
xchg
fisttp
ret
push
imul
cmc
xchg
test
push
jno
test
addr16
mov
lahf
pop
push
imul
sub
cmp
scas
in
into
mov
fst
int3
scas
popa
sbb
add
cdq
aaa
mov
sbb
adc
cmp
mov
sbb
cmc
mov
sub
sbb
sub
mov
cmp
pop
mov
jmp
rcr
xchg
sbb
jno
jmp
in
loop
sbb
sub
repnz
jo
out
sbb
fcmovnbe
dec
das
xor
test
xchg
shr
sar
cmc
leave
adc
daa
ja
mov
xor
adc
js
imul
fistp
sbb
cmp
pop
outs
pop
mov
jae
outs
xchg
mov
cmp
in
dec
pop
mov
adc
lahf
scas
scas
imul
test
cmp
call
cdq
xor
jle
xchg
aas
sbb
mov
mov
movs
mov
int
jo
pushf
(bad)
fidivr
mov
xor
lahf
stos
ucomiss
add
cmp
push
pusha
test
add
sub
movs
retf
daa
pop
in
les
adc
pop
shr
cmp
lahf
hlt
stc
and
inc
es
out
icebp
jb
push
cmp
jle
shl
push
xchg
mov
mov
xor
outs
mov
pop
hlt
popf
xor
mul
mov
loop
outs
mov
mov
enter
jge
push
mov
sti
fisub
iret
dec
inc
imul
cmp
imul
mov
out
mov
and
in
leave
shr
or
mov
lahf
stos
fisttp
jae
or
mov
arpl
pushf
icebp
inc
cmps
jne
out
jp
sbb
dec
repnz
xor
jmp
bound
jae
icebp
test
stos
jns
loope
xchg
cmc
daa
fist
rcr
fcomp
push
mov
inc
test
lea
sub
or
mov
sbb
das
inc
mov
cmp
dec
ret
mov
pop
sti
outs
inc
mov
jns
jecxz
fwait
rcr
scas
sbb
iret
in
or
gs
mov
movs
mov
xchg
push
xor
lods
movs
jp
leave
test
mov
and
mov
push
rcl
and
jne
call
inc
test
xchg
rol
out
call
scas
sbb
xor
xor
cli
or
hlt
jbe
mov
xchg
fimul
fabs
enter
scas
xchg
rol
inc
sbb
rol
outs
fst
push
imul
rcr
movs
mov
mov
repnz
mov
out
fimul
or
add
dec
or
mov
dec
sbb
jae
sub
mov
neg
adc
(bad)
jmp
mov
icebp
(bad)
cmps
or
outs
jo
movs
fnstenv
mov
mov
cmp
add
fwait
into
xchg
stc
xchg
add
nop
dec
and
push
pop
xchg
add
popf
cmp
movs
stc
and
lea
jmp
paddusw
ins
xchg
cli
mov
inc
(bad)
inc
aas
and
add
iret
jo
mov
test
mov
add
shl
sub
lock
imul
sbb
and
xchg
and
loopne
mov
xchg
out
jbe
mov
sub
push
push
xlat
or
push
xchg
adc
movups
(bad)
push
or
cli
jnp
xor
add
cmp
out
in
or
jnp
stos
xchg
mov
mov
push
gs
mov
fs
lahf
mov
ins
in
pop
xor
pop
pusha
push
dec
ret
fistp
inc
cmp
cmp
or
push
inc
dec
adc
into
cmp
ins
enter
sbb
loope
imul
and
pop
popf
push
bound
add
xlat
mov
arpl
call
(bad)
fistp
aam
lahf
xor
add
call
or
(bad)
jg
push
xchg
rcr
xchg
sahf
stos
add
adc
retf
xor
ins
cmc
inc
lock
int3
xor
cld
cmps
adc
imul
lds
movs
js
pop
mov
lahf
jbe
outs
mov
adc
pusha
inc
adc
xor
or
int3
les
jne
leave
repnz
adc
int
xchg
dec
pusha
ins
mul
dec
sub
cmc
lods
dec
jmp
test
xlat
es
fimul
xchg
fiadd
(bad)
mov
dec
retf
sar
pusha
cmps
callw
mov
mov
add
adc
cmp
mov
add
nop
cs
sub
sub
xchg
mov
std
pop
jge
lods
clc
cmp
in
inc
pusha
jmp
fwait
mov
mov
cmp
stos
icebp
(bad)
dec
sahf
das
adc
dec
lods
push
push
xchg
nop
(bad)
out
add
repz
and
push
jae
mov
imul
test
xor
push
test
test
sahf
xor
pushf
pop
jp
repnz
shl
je
sahf
xchg
inc
xlat
out
jne
push
loopne
(bad)
imul
mov
stos
or
aad
add
into
arpl
pop
imul
pop
dec
adc
stos
push
cwde
cli
and
pop
dec
dec
fdivr
jno
std
int3
scas
imul
or
(bad)
sub
push
out
add
dec
mov
enter
ret
sti
push
retf
jns
idiv
dec
jp
aas
ins
shl
mov
mov
or
cmp
aad
push
cmc
sub
and
mov
out
stc
pop
inc
and
rcr
add
mov
movd
sub
pop
je
add
imul
sub
push
dec
jp
mov
jo
in
ins
mov
js
mov
fldcw
call
mov
leave
jmpw
mov
jmp
pop
std
mov
inc
cdq
aad
pop
cld
retf
mov
mov
rcl
push
jle
movs
xor
lods
scas
imul
adc
push
enter
jecxz
cmps
pushf
cmp
cmp
push
fwait
cmp
sub
js
pop
ret
retf
aas
pop
or
jmp
or
push
sub
iret
cmp
ds
shl
adc
push
xchg
push
add
gs
fisttp
(bad)
pop
fst
retf
or
imul
adc
fst
jl
mov
mov
xlat
imul
dec
dec
sub
pop
xor
push
clc
daa
pop
or
cld
ss
jae
jle
xchg
cmp
mov
pop
and
cmp
in
cmps
jecxz
pop
add
mov
cmps
sub
dec
or
add
sbb
xor
(bad)
enter
ret
hlt
sbb
add
mov
jae
push
push
xchg
aaa
xor
adc
pop
mov
fild
out
mov
add
adc
ret
cmp
xchg
adc
jl
cmc
bound
dec
inc
xchg
mov
push
and
mov
addr16
lock
aam
dec
inc
(bad)
(bad)
out
ss
xor
mov
cs
ins
sbb
(bad)
pop
lock
xlat
xchg
xor
mov
xchg
adc
jnp
dec
mul
or
sbb
repnz
call
jne
pop
(bad)
pop
shr
push
push
rcl
daa
sub
add
xor
mov
cmps
(bad)
jns
mov
mov
jl
pop
(bad)
jnp
ds
dec
retf
ins
mov
push
scas
cmp
div
or
push
sub
sub
dec
adc
mov
inc
es
xchg
adc
bound
mov
push
mov
mov
cmp
es
and
pusha
and
pop
iret
jo
jno
cmp
in
xor
jge
dec
movs
repz
rol
mov
sub
xchg
mov
test
int
mov
test
push
sti
mov
ds
shl
mov
in
lds
test
cmp
jno
fsubr
rcl
sbb
jae
ins
iret
icebp
inc
movs
loopne
add
retf
cmc
jnp
jnp
outs
xchg
inc
mov
loop
inc
aam
push
jge
aad
ret
sub
cmp
ss
push
pop
mov
(bad)
inc
jne
pop
pushf
xor
jnp
ret
cld
rcr
frstor
adc
and
leave
leave
lds
pop
retf
cmp
cs
xchg
lds
clc
adc
mov
pop
prefetch
or
jmp
mov
popf
inc
scas
arpl
rcr
and
shl
push
movs
jge
xlat
adc
je
xlat
push
data16
sbb
xchg
push
mov
les
aam
mov
js
fmul
mov
outs
add
add
push
cmc
cld
push
mov
arpl
in
loopne
pop
add
and
add
ret
call
scas
sbb
jmp
pop
push
lods
or
mov
cmps
iret
icebp
iret
cmps
aam
jle
pop
psubusb
stc
xor
lods
int
fwait
daa
ins
pushf
in
fidiv
(bad)
push
out
mov
imul
dec
lahf
ficomp
sti
mov
aam
into
popf
es
repz
pushf
or
ins
jmp
fcompp
lds
call
xor
ffreep
std
xor
outs
add
fild
mov
std
xchg
fcmovnu
mov
and
scas
leave
loope
add
inc
mov
mov
pop
ret
dec
jecxz
mov
push
(bad)
ss
lea
ins
mov
add
ret
fcomp
shr
out
loop
xchg
jbe
scas
ds
jns
jmp
fcom
xor
loopne
int
dec
push
das
xor
call
add
inc
jne
inc
fwait
xor
mov
and
daa
in
cli
loop
add
sbb
es
shl
iret
outs
into
push
mov
in
aaa
out
mov
aad
jmp
ret
ficom
mov
xor
shl
dec
xor
add
addr16
jge
cmps
mov
es
aad
ficomp
sbb
ins
cld
dec
fimul
retf
fiadd
mov
das
xchg
adc
mov
pop
mov
xor
je
fsubr
fldenv
push
mov
dec
xchg
jmp
int
cmp
and
cld
fcom
lock
pop
push
out
xor
(bad)
imul
xchg
pcmpgtd
adc
retf
cmovb
pop
pop
fmul
pusha
jl
cli
lods
mov
inc
outs
mov
xchg
outs
sbb
outs
push
enter
inc
data16
sub
add
xchg
addr16
(bad)
jmp
fwait
std
xor
and
add
and
push
jae
jge
jp
jg
or
or
adc
ss
sub
mov
cmp
mov
in
movs
imul
add
loop
sub
es
movs
stos
adc
fdiv
popf
nop
out
int
jno
ins
push
cwde
data16
pop
mov
ret
sub
iret
cld
fdivr
scas
jnp
mov
int3
mov
mov
daa
aad
inc
aam
scas
jne
nop
ss
push
stc
mov
leave
sar
out
sub
pop
or
in
pop
fcomp
retf
test
add
mov
or
push
pop
mov
call
mov
cmc
mov
dec
add
neg
loopne
repnz
nop
out
icebp
(bad)
scas
lods
add
mov
xchg
jne
push
icebp
adc
bound
jno
mov
and
inc
mov
and
repnz
mov
fisub
pop
shl
pusha
adc
stc
pop
adc
sbb
test
mov
sbb
div
cmp
ja
mov
cmp
rcr
arpl
call
ret
dec
data16
sahf
and
sub
inc
test
lea
popa
retf
mov
sbb
in
pop
arpl
out
mov
jl
shl
adc
jo
jno
ss
or
data16
ss
or
push
sahf
ja
jbe
inc
mov
mov
sbb
arpl
cmps
repz
je
push
push
das
xor
jnp
test
neg
sbb
inc
inc
call
int
in
inc
mov
mov
sub
in
mov
mov
inc
add
(bad)
and
xor
aaa
addr16
jns
jo
xchg
push
addr16
xor
scas
imul
gs
leave
sahf
mov
lods
rcl
xchg
imul
mov
and
shl
movs
push
xor
dec
je
lea
retf
fiadd
aaa
jecxz
mov
fs
aad
ins
mov
es
scas
cmp
imul
cmp
ret
cmps
jge
aam
scas
jmp
shl
(bad)
loopne
push
mov
ins
xchg
stc
lea
push
jae
rol
mov
cli
adc
sbb
xor
cwde
clc
mov
ins
mov
std
pop
sbb
jo
add
popf
(bad)
sub
push
fist
add
or
rcl
and
push
cmp
and
int
cld
lds
addr16
(bad)
hlt
mov
and
test
aaa
out
movs
call
(bad)
jp
mov
pop
dec
int3
xor
outs
and
sub
js
sbb
xor
test
mov
out
fstp
add
cmps
xor
pop
ret
loop
fisttp
movs
aaa
jo
out
int
sti
jecxz
(bad)
cmp
imul
iret
mov
cmp
nop
xor
mov
push
dec
(bad)
mov
stos
push
jb
repnz
lock
inc
jg
jne
lds
int3
inc
or
and
push
mov
call
lock
bound
outs
adc
mov
daa
and
lds
mov
ins
jo
dec
daa
(bad)
mov
push
add
sbb
jle
and
stc
imul
or
dec
ror
dec
rcr
ret
mov
mov
push
test
jns
mov
jno
push
and
cmps
leave
test
test
hlt
movs
pop
test
dec
xor
addr16
(bad)
out
push
mov
add
in
mov
cmp
mov
mov
stos
mov
mov
or
je
dec
jnp
js
mov
rcr
dec
stc
mov
cmps
scas
movs
mov
add
xchg
(bad)
int3
in
dec
or
ss
or
or
ds
sbb
aam
xlat
adc
sub
pop
(bad)
and
xor
fld
movs
hlt
push
ret
aaa
out
(bad)
ficomp
inc
inc
test
sub
dec
xchg
test
cmp
fmul
mov
push
jle
mov
cmp
adc
(bad)
stc
push
inc
sub
push
pop
and
aad
repnz
daa
pop
adc
popf
jo
int3
outs
aam
xchg
test
or
push
jno
pop
sbb
inc
xchg
sbb
mov
dec
pop
jae
popa
fsub
pop
sahf
inc
and
xor
shl
ins
mov
push
add
inc
cdq
inc
aaa
add
lea
jno
aam
sbb
or
add
movs
ror
sbb
outs
in
pop
dec
mov
inc
xor
pop
and
mov
aaa
xchg
inc
or
add
call
pop
loope
and
cmps
cmp
test
push
out
cmp
inc
and
cwde
fld
push
(bad)
cmps
mov
test
jmp
sbb
sub
sub
mov
mov
jno
lods
sbb
cmc
lock
stc
cmp
cmp
and
movs
les
lock
xor
hlt
and
jp
and
cmps
inc
push
and
sub
inc
test
ds
jmp
xor
sub
mov
sbb
jno
jecxz
in
mov
mov
and
and
mov
jno
pop
adc
neg
arpl
xchg
fisttp
sahf
es
mov
in
mov
mov
and
out
and
jge
leave
and
out
add
jns
mov
and
(bad)
push
sub
ror
add
addr16
scas
aad
sub
jno
dec
or
add
stc
rcr
mov
jmp
pop
into
aas
cmc
mov
pop
mov
xchg
add
inc
sbb
cs
cmp
jb
test
inc
sub
mov
pop
xchg
adc
dec
jmp
ret
sub
mov
(bad)
dec
inc
out
sbb
ret
push
pop
pop
mov
sbb
inc
and
lock
ret
cmp
mov
ret
adc
imul
add
push
cwde
lds
xchg
or
dec
popa
scas
fidivr
lods
and
jb
adc
jecxz
xor
cmp
ds
dec
sbb
and
sub
inc
dec
bound
inc
pop
inc
in
int3
pop
jmp
nop
fwait
mov
sbb
mov
call
in
xchg
xchg
outs
mov
add
icebp
mov
sub
adc
pop
pushf
(bad)
cs
icebp
pop
daa
pushf
sti
aam
mov
jnp
cld
pop
xor
ins
jmp
je
sub
push
push
outs
sbb
rol
jmp
sar
iret
mov
cmp
mov
pop
lahf
cdq
inc
leave
mov
(bad)
fucomp
pop
retf
or
or
test
sub
and
or
mov
fsubr
outs
xchg
es
cmp
shl
inc
pushf
and
mov
icebp
ficom
sbb
cmp
icebp
jno
or
lock
push
test
in
scas
sub
mov
ins
mov
inc
nop
fwait
and
outs
mov
jbe
mov
shl
(bad)
push
inc
loopne
and
and
xor
cmps
xchg
cld
out
out
sub
aad
inc
in
sbb
retf
and
xchg
or
sti
fiadd
daa
ja
pop
hlt
int
xchg
mov
repz
stos
pop
pop
call
outs
lods
loop
xlat
dec
std
lds
ins
mov
inc
pop
inc
xchg
push
cmps
mov
loop
sbb
arpl
xor
jg
mov
fmul
retf
adc
cmp
xchg
out
lea
xchg
push
mov
(bad)
dec
ds
sti
jge
push
(bad)
xchg
lock
ficom
pop
sub
call
sahf
imul
daa
dec
daa
lea
ret
push
pop
(bad)
cmps
mov
push
cmps
mov
fs
das
icebp
out
push
cld
inc
push
xchg
add
ins
in
sbb
outs
test
adc
pop
inc
xor
sbb
sub
mov
out
adc
lock
movs
sbb
test
or
inc
jge
push
lock
xchg
pop
sti
mov
les
movs
leave
test
adc
repz
repz
push
fwait
cmp
fsubr
jo
dec
push
shl
add
pop
dec
dec
popa
icebp
jmp
jl
add
mov
movs
push
mov
xor
adc
arpl
dec
into
in
sbb
scas
xor
mov
sub
sbb
les
imul
mov
pusha
xor
movs
test
push
nop
fwait
fwait
clc
xchg
pop
mov
push
inc
jns
dec
xchg
arpl
mov
jecxz
xor
add
pop
xchg
mov
fild
aad
je
les
lods
jo
adc
mov
and
adc
sub
mov
inc
push
mov
sub
mov
ficom
sbb
inc
push
and
leave
xor
push
lods
sbb
or
jo
pusha
loop
imul
sbb
adc
inc
adc
dec
test
add
(bad)
test
mov
stc
scas
mov
inc
std
call
nop
sub
shl
xor
lahf
aaa
mov
mov
adc
xor
fwait
mov
scas
leave
inc
repnz
jecxz
fst
aam
add
cmc
mov
jp
and
pop
xor
jns
xchg
xor
dec
jne
inc
sahf
test
iret
out
(bad)
adc
call
or
mov
aaa
jl
cs
movs
call
into
mov
jmp
xor
mov
into
outs
in
or
dec
and
adc
sbb
out
outs
int
xor
sub
cmp
cdq
imul
lods
mov
mov
xor
mov
push
movs
jbe
jae
pop
test
add
cmps
inc
out
fisubr
ss
cmp
adc
pusha
cmps
xor
inc
outs
aam
xchg
sub
adc
and
jmp
xchg
jg
jmp
mov
inc
adc
aas
jmp
fstp
movs
lahf
(bad)
xor
mov
dec
jmp
push
inc
sbb
jnp
aam
in
push
push
push
inc
lods
mov
mov
popa
test
lds
mov
xchg
xor
fist
push
lahf
sbb
icebp
sub
pop
popa
inc
jb
mov
call
test
dec
arpl
mov
adc
or
ins
push
stc
jecxz
xor
pop
xchg
jnp
push
and
shl
imul
push
mov
call
adc
xchg
sub
cmp
jg
adc
sub
movlps
sbb
xor
fiadd
mov
mov
fiadd
xor
mov
fistp
xor
cmps
xchg
loop
in
jmp
mov
jns
in
rol
rol
nop
dec
dec
add
xlat
xchg
addr16
shl
jns
outs
xor
ret
lods
jp
jp
fwait
jmp
aaa
mov
adc
push
xchg
popf
jmp
push
xor
lods
ins
sub
ret
ss
push
outs
xor
lds
mov
jno
sbb
(bad)
or
sbb
std
lock
and
jge
jbe
les
int
or
outs
push
push
jns
xchg
push
iret
pop
ficomp
loope
dec
jnp
imul
mov
daa
xor
clc
jge
inc
mov
sub
into
lods
jg
adc
mov
adc
ja
cmp
call
es
mov
push
jnp
cli
sahf
mov
mov
lods
pushf
outs
(bad)
mov
xor
mov
jne
cmp
xor
or
sub
lock
xchg
je
jno
mov
mov
scas
mov
sbb
xchg
dec
push
adc
push
ficomp
xchg
in
hlt
jbe
int
inc
xchg
into
fst
pop
mov
push
mov
pop
jl
mov
xor
mov
pop
int3
xor
scas
push
and
and
(bad)
pop
cmp
dec
imul
call
and
test
pop
sub
lock
add
sahf
aas
and
ror
fsubp
xor
inc
jo
mov
cli
dec
arpl
test
leave
repnz
fild
xor
scas
hlt
sti
js
xlat
push
push
jecxz
retf
imul
cmp
fsincos
daa
mov
aas
pusha
sub
(bad)
xchg
pop
add
rol
jo
faddp
xchg
pop
cdq
or
std
arpl
push
push
iret
je
(bad)
fisub
adc
addr16
stos
fs
jmp
fucomp
push
outs
pop
fwait
jno
jno
call
inc
xor
outs
iret
hlt
dec
jecxz
int3
lahf
je
lods
cmc
lock
jno
in
cs
pop
jbe
dec
hlt
mov
xor
in
dec
mov
nop
out
clc
(bad)
(bad)
cld
pusha
sbb
ret
stos
(bad)
(bad)
(bad)
lock
and
or
jp
cmp
neg
(bad)
lods
cli
and
mov
mov
stc
push
call
xchg
mov
int3
or
repnz
fbstp
out
pusha
push
sub
clc
or
mov
add
icebp
lea
mov
jecxz
retf
inc
popf
jbe
cdq
pop
mov
add
(bad)
push
and
jnp
aas
adc
shl
movs
lock
imul
mov
mov
adc
inc
sbb
cwde
adc
sbb
or
dec
or
or
push
movs
fisttp
jge
inc
ja
adc
xlat
inc
push
xlat
arpl
outs
mov
xchg
popa
xchg
pop
(bad)
es
stos
hlt
loope
movs
jmp
mov
pop
mov
dec
push
dec
sub
adc
pusha
add
lods
mov
aad
jmp
xchg
dec
out
addr16
mov
scas
push
xchg
xchg
inc
les
jb
adc
mov
fwait
popf
movs
xchg
in
dec
outs
push
xchg
inc
das
fwait
xor
push
sar
and
xchg
jmp
jl
mov
sbb
ror
push
cmp
popa
xchg
(bad)
pop
inc
int3
je
adc
(bad)
in
push
xlat
adc
mov
out
push
bound
and
rep
mov
cmp
push
dec
inc
imul
cdq
loop
xchg
mov
mov
cmp
mov
xchg
xor
push
sbb
jno
jmp
fcom
rol
inc
and
into
in
xchg
xchg
(bad)
scas
xchg
mov
je
add
xchg
sahf
xchg
push
adc
mov
mov
adc
push
mov
mov
xchg
ins
adc
cmp
es
cmp
adc
loope
mov
mov
jecxz
movs
jae
lock
dec
leave
sar
jge
adc
push
retf
xor
das
leave
push
clc
gs
pop
push
adc
mov
pop
daa
xor
jmp
dec
jmp
add
iret
xchg
mov
sti
dec
ss
cwde
sbb
out
sub
xchg
clc
mov
cmp
pop
dec
push
or
mov
mov
mov
mov
jnp
xlat
repnz
push
sub
mov
or
dec
lahf
nop
mov
cmc
dec
aad
dec
push
sbb
clc
movs
ja
pop
jmp
or
std
dec
cmp
retf
jp
jp
fild
icebp
nop
pop
retf
idiv
mov
cmp
(bad)
loop
repnz
pop
(bad)
(bad)
pop
std
fisubr
mov
(bad)
in
mov
hlt
out
sub
(bad)
xlat
mov
mov
jo
loopne
sub
sub
lods
push
idiv
sub
add
data16
jnp
inc
pop
fcmovu
in
in
mov
pushf
(bad)
jae
mov
mov
push
ror
mov
sbb
cmp
cmp
pop
and
adc
cs
das
inc
mov
pop
in
jle
aad
lds
iret
ja
cmp
push
mov
adc
call
add
nop
add
into
xchg
inc
lods
or
ror
sbb
adc
sbb
icebp
xchg
stos
arpl
jae
mov
fs
aad
aad
sub
push
fwait
cmp
pop
sub
bound
icebp
dec
mov
jp
mov
stc
sti
nop
stc
add
rdpmc
inc
(bad)
cmp
and
out
daa
sub
mov
in
mov
pop
inc
jmp
scas
jp
dec
cwde
sbb
cmp
mov
in
sub
inc
pop
jno
(bad)
cmps
out
sub
add
gs
out
lock
outs
mov
out
mov
aaa
cwde
out
xor
xchg
and
push
in
lods
sub
mov
call
fisub
lahf
iret
sub
xchg
push
(bad)
(bad)
rol
call
inc
jns
xchg
ja
(bad)
int
outs
(bad)
in
jmp
into
int
cmp
ins
add
test
js
mov
cli
js
call
sti
jg
enter
lock
sub
lods
mov
out
mov
icebp
sbb
sbb
and
scas
or
cdq
push
mov
retf
fs
sub
pop
(bad)
push
fild
cmp
in
mov
in
movs
ja
xchg
push
iret
jg
movs
ja
pop
xor
jb
push
sub
xor
push
out
and
cmc
xor
mov
and
xchg
sar
or
push
bound
pop
cmc
pop
mov
xlat
pop
mov
jmp
xchg
cmps
xor
outs
and
(bad)
inc
int3
sub
add
in
rcl
bound
sbb
xor
pavgw
dec
xlat
mov
push
adc
push
mov
cmp
ds
test
stc
mov
xor
movs
int3
int
outs
jecxz
jle
jbe
js
loope
fisub
adc
enter
push
out
popf
in
push
hlt
aad
adc
lock
jg
es
jnp
ins
or
adc
push
arpl
cdq
sub
and
mov
imul
fnsave
pop
lock
aas
mov
xchg
repnz
push
arpl
jno
pop
or
ficom
sub
call
fadd
jle
popf
mov
sub
mov
xlat
or
test
bound
in
mov
outs
pop
sub
lock
adc
popf
idiv
out
sbb
fcmovnbe
dec
mov
mov
int
jb
enter
pop
imul
fnstcw
pop
or
adc
lods
cdq
cmp
push
out
mov
mov
pop
and
outs
out
mov
or
test
cmp
dec
in
cs
sub
pusha
inc
neg
fbld
dec
into
fsubr
and
popa
jecxz
loop
mov
sub
xchg
fwait
out
mov
(bad)
outs
sub
and
ret
mov
jnp
mov
push
mov
addr16
push
adc
pop
or
ins
dec
out
call
xchg
hlt
adc
sbb
push
pushf
jge
push
aam
and
jl
retf
sbb
outs
shr
jns
lock
movs
movs
jle
and
add
cdq
inc
xor
cmps
sbb
enter
jg
mov
out
inc
stos
(bad)
mov
sti
ins
dec
mov
inc
sbb
inc
loope
mov
shl
jmp
xchg
ds
(bad)
push
sub
add
std
mov
cmp
add
push
mov
inc
stos
fadd
add
stc
enter
sbb
inc
cmp
sub
mov
sbb
mov
int
std
sub
and
lock
repnz
cmps
sbb
test
iret
mov
pop
ja
icebp
pop
jne
mov
inc
mov
fst
out
dec
mov
adc
sbb
aaa
sbb
lds
dec
or
sbb
jmp
mov
mov
iret
sbb
jne
in
clc
mov
xor
or
loope
push
loop
adc
sahf
cmps
or
call
cdq
stc
and
test
rcr
loopne
inc
mov
mov
and
and
or
repnz
dec
sub
jl
xlat
ret
cdq
mov
jl
mov
call
cdq
(bad)
loop
(bad)
mov
jne
shr
(bad)
mov
es
(bad)
jmp
mov
xchg
push
sbb
push
pop
inc
pop
push
cmc
cli
jmp
mov
ins
(bad)
adc
sbb
cld
in
je
dec
call
je
mov
xor
test
daa
outs
pop
iret
pop
xor
adc
push
je
mov
call
(bad)
in
int
xor
ss
and
sbb
push
retf
jp
iret
or
scas
xchg
push
xor
xor
dec
fsubr
sti
pop
arpl
xchg
jne
jge
loope
leave
xchg
push
adc
xchg
sbb
adc
cmp
bound
mov
sub
adc
push
lods
pop
push
add
loopne
mov
mov
lahf
jge
std
mov
imul
scas
lods
inc
loopne
pop
sahf
jo
rcl
pop
sbb
lock
push
out
out
in
aam
jmp
pop
iret
xchg
cmp
inc
cdq
cs
fisub
adc
mov
ss
xchg
ss
pop
test
push
jg
in
mov
cdq
repz
scas
cmp
cmp
xor
int3
adc
jp
jae
in
dec
leave
(bad)
lods
scas
ja
push
inc
xchg
xor
adc
fbstp
test
add
xlat
add
sub
mov
std
movs
xchg
imul
sbb
add
jbe
icebp
repz
dec
dec
dec
iret
imul
add
mov
mov
out
xor
add
shl
mov
retf
adc
icebp
xor
dec
leave
adc
loope
sub
cmp
dec
sub
add
popf
mov
add
test
icebp
xchg
jnp
int3
es
pop
xchg
jmp
in
fild
dec
pop
in
dec
ds
mov
xchg
sbb
jbe
out
hlt
out
or
and
or
fst
mov
mov
out
push
in
dec
add
test
or
test
push
or
std
xchg
mov
cmps
mov
lds
addr16
ins
xchg
mov
jne
xchg
xchg
dec
call
mov
mov
mov
call
mov
call
into
mul
dec
cmp
in
cmp
add
push
pop
cmp
inc
call
cwde
imul
jns
push
iret
xchg
into
inc
ret
push
and
jno
mov
and
cwde
mov
lea
mov
stos
in
jns
retf
std
push
adc
inc
js
push
mov
xlat
shl
adc
pop
nop
push
pop
cld
sar
scas
ins
and
icebp
ret
mov
aaa
shr
and
xlat
les
dec
fcomp
and
enter
cmps
sbb
push
jb
mov
enter
push
add
stos
je
xchg
retf
mov
ja
pop
popf
int
mov
jge
xor
and
sbb
mov
cdq
rcr
dec
repnz
mov
int
sti
aad
pop
test
stc
gs
cmp
call
cmp
fild
ret
mov
aas
and
retf
pusha
jp
adc
mov
xor
fsub
push
push
mov
xchg
popf
xor
fist
mov
imul
movs
div
in
ds
nop
retfw
movs
out
adc
cmp
out
sahf
sbb
inc
int3
sub
in
(bad)
mov
ins
call
jg
out
shl
aas
sbb
sub
dec
adc
test
xor
jl
mov
cmp
enter
ret
mov
add
ror
es
movs
xor
sti
add
cmps
inc
inc
or
ja
sbb
inc
cmp
cmp
jns
xor
pop
mov
retf
cmps
xchg
dec
(bad)
xchg
ret
push
test
leave
test
shl
popa
lods
mov
add
xor
mov
retf
add
push
sbb
push
cmps
jecxz
pop
lahf
sub
mov
jno
or
inc
loope
push
pop
xlat
jp
loop
fild
scas
mov
and
cmp
jp
pop
je
sbb
jecxz
add
pushf
push
xchg
in
in
out
test
push
popf
daa
fcompp
and
inc
scas
das
xor
rcl
sbb
push
sub
pop
jb
stos
mov
dec
jge
ds
xor
jle
std
jle
out
and
aas
repnz
out
sbb
lds
call
xor
cdq
mov
mov
add
fbstp
enter
(bad)
hlt
cmps
inc
fwait
les
jne
jnp
fsubr
inc
mov
cmp
bound
xor
push
mov
dec
outs
xor
sub
inc
pop
ret
cmp
jle
jo
sbb
dec
lahf
add
add
jge
mov
cmp
les
out
and
cmp
and
dec
push
add
iret
add
clc
jbe
loope
shl
mov
fistp
(bad)
into
mov
pop
pop
sti
arpl
es
mov
jo
xchg
in
pop
add
adc
jge
cmp
mov
and
dec
movs
mov
dec
test
mov
inc
or
cmps
jg
inc
jb
sti
mov
movs
in
fucom
ret
adc
jmp
mov
dec
and
jmp
dec
out
pop
mov
enter
ja
xchg
cmc
fidivr
lahf
outs
fisubr
ss
xor
ja
add
popf
pop
sub
imul
jnp
mov
lock
cmps
inc
push
inc
jle
xchg
ins
(bad)
or
dec
pop
cmps
pushf
xchg
pop
scas
addr16
mov
nop
repnz
lds
sub
fstp
dec
adc
or
adc
ror
lods
jge
jmp
cmp
adc
imul
stos
jne
rol
xlat
pop
cdq
add
and
xor
imul
pop
test
jp
fwait
hlt
jmp
pop
xchg
(bad)
rol
cmp
dec
fbld
cmp
ja
aas
fwait
in
pop
clc
inc
scas
out
pop
movs
(bad)
les
inc
mov
adc
jge
xor
daa
pop
inc
jg
bound
outs
jmp
xor
in
icebp
sbb
dec
lock
sti
imul
loopne
xchg
in
cmp
jno
push
ins
sub
and
leave
shr
mov
cmp
pop
gs
repz
mov
adc
call
and
mov
cdq
pop
add
pop
dec
inc
cmp
jae
outs
adc
xor
bound
adc
mov
pop
sub
add
ins
sub
jl
push
sub
xor
pop
nop
dec
popa
pop
mov
int3
mov
or
(bad)
sbb
jmp
cmps
add
fndisi(8087
xchg
leave
cmps
shr
jecxz
mov
jb
test
(bad)
mov
arpl
cli
(bad)
repnz
scas
dec
xlat
xlat
mov
in
jnp
jbe
inc
pop
jo
bound
aas
inc
lahf
dec
out
mov
movs
push
rol
sti
loopne
retf
push
dec
pop
int
cmc
movs
add
dec
in
popf
push
jmp
jge
add
adc
push
cmp
pop
popf
js
lock
lods
push
sub
xor
mov
addr16
mov
mov
cmps
aas
fsqrt
cld
adc
lds
dec
sbb
lahf
ins
enter
clc
push
scas
call
cs
mov
or
or
or
test
or
jnp
cmp
xor
(bad)
aas
pop
jo
or
push
jp
dec
inc
das
add
leave
stos
(bad)
test
inc
ror
pop
movs
cs
add
add
xlat
retf
adc
push
shl
loopne
in
data16
xor
lods
pop
test
into
add
and
movs
xor
xchg
sti
mov
mov
(bad)
sbb
and
mov
inc
icebp
push
push
dec
std
(bad)
jmp
fisttp
xchg
outs
adc
out
pop
and
xchg
inc
jp
mov
push
add
lods
ret
aas
icebp
mov
jle
mov
cmp
pushf
lahf
nop
xor
mov
outs
mul
cmp
pop
les
add
sub
add
jmp
jno
pusha
fimul
jnp
inc
into
stc
loope
fwait
mov
test
sbb
imul
mov
sub
sbb
dec
repz
jae
arpl
in
xlat
aaa
or
adc
in
or
mul
jb
push
sbb
mov
and
aas
jge
sbb
cmp
and
pop
mov
enter
jle
mov
fld
mov
movs
cmp
push
cld
repz
pop
xor
xor
or
push
and
cs
stc
xchg
pop
jnp
popf
jg
sbb
mov
jge
jo
ror
jmp
jecxz
push
sahf
mov
lods
push
or
stos
xchg
adc
ror
stos
dec
cmps
pusha
dec
fdiv
or
dec
in
mov
scas
pop
sub
jb
or
jae
inc
jb
xchg
test
shl
mov
rcr
add
bnd
push
imul
fwait
mov
lds
pop
cmps
retf
fidiv
dec
adc
pop
in
and
pop
inc
fstp
push
out
lds
push
sub
ror
sub
pusha
call
pusha
mov
ret
lods
mov
pusha
jb
faddp
mov
lock
xor
mov
or
add
icebp
jne
add
aas
mov
pop
sbb
getsec
div
and
mov
mov
movs
jle
mov
xchg
inc
mov
jnp
mov
mov
out
pop
xchg
mov
scas
fist
add
cmps
and
adc
cmp
nop
popf
pop
pop
sbb
es
add
pop
xchg
mov
mov
dec
adc
mov
jnp
mov
lock
(bad)
aam
or
add
adc
arpl
pop
fild
push
mov
jnp
(bad)
popa
movs
nop
movs
test
out
out
mov
movs
add
mov
push
aas
mov
sub
mov
sti
inc
mov
aam
mov
shr
outs
mov
call
lock
dec
mov
pushf
cs
repnz
pop
icebp
dec
inc
pop
neg
imul
add
cdq
xor
cmp
dec
jne
cmp
or
cmp
rcr
jecxz
pop
mov
pop
cmp
pop
sti
or
movs
lods
pop
aaa
jmp
mov
xor
arpl
ror
sbb
sbb
push
adc
pop
push
in
mov
adc
test
pop
inc
retf
bound
adc
ret
pop
jno
mov
pop
lahf
sub
mov
retf
fmul
push
loope
clc
int3
mov
cmp
mov
dec
inc
sti
int3
xchg
jp
push
aaa
or
(bad)
lahf
or
mov
lds
scas
and
cli
hlt
mov
or
sar
aas
mov
fistp
pop
push
in
sub
sti
sbb
lods
imul
test
dec
(bad)
push
xchg
sub
fsub
cmp
jo
stos
or
add
jne
adc
jns
xor
arpl
pop
adc
aad
pop
ds
jg
hlt
int
pop
push
aad
ds
sbb
xchg
mov
add
je
fwait
adc
lods
and
push
fwait
xchg
mov
inc
test
push
int
sbb
pusha
icebp
inc
and
push
call
dec
sbb
(bad)
cld
mov
push
repz
jmp
jb
and
js
push
(bad)
aaa
fcomi
pop
push
imul
and
pop
js
inc
mov
cmp
pop
outs
aas
mov
arpl
lods
mov
push
aas
push
mov
push
lods
jbe
scas
addr16
aad
clc
adc
arpl
jnp
jl
pop
jb
jecxz
enter
push
xor
jns
loop
imul
xchg
(bad)
mov
push
inc
and
xchg
mov
push
call
pop
add
pusha
(bad)
adc
adc
or
lods
in
mov
lahf
jb
pop
add
mov
int3
xor
xchg
rol
pop
lods
aam
int
in
mov
add
cld
outs
inc
add
inc
pop
xchg
adc
xor
dec
ja
sbb
adc
sub
inc
out
addr16
je
arpl
adc
outs
xor
sub
test
sbb
push
loop
mov
lds
outs
test
cmp
xchg
adc
aaa
sub
lock
jg
ss
fmul
dec
std
push
stos
mov
jmp
and
or
ficom
mov
xor
sbb
jne
xchg
sbb
mov
das
cli
push
push
cdq
je
pusha
pop
rcr
sub
int
push
jmp
pop
xor
sub
push
sahf
dec
and
dec
jno
sbb
mov
call
jl
fidivr
mov
inc
dec
push
fs
test
jmp
xchg
sbb
out
inc
lahf
das
mov
pop
push
and
xchg
out
fwait
mov
in
add
xor
je
adc
loope
xor
les
ficomp
mov
cmps
addr16
adc
and
jmp
mov
icebp
sbb
stos
inc
adc
enter
dec
jmp
test
push
jmp
mov
and
sub
gs
mov
and
inc
addr16
cwde
dec
mov
sub
ret
jno
aam
and
dec
mov
sbb
pop
cmp
push
cmp
sbb
or
out
idiv
pop
int3
repz
mov
sar
or
jp
inc
popa
cdq
sbb
mov
movs
lahf
fsubr
fiadd
repz
lods
pop
div
mov
mov
jno
fwait
push
xor
xchg
lods
daa
outs
dec
mov
das
add
call
jg
cmps
sbb
and
out
push
or
stc
sbb
adc
jae
fld
mov
fdivr
bound
dec
ret
repz
mov
popf
sub
mov
inc
mov
or
jp
sub
stos
jg
or
aad
stc
push
int3
stos
inc
fsubr
push
jp
inc
push
aad
fcmovne
outs
pop
lods
inc
loope
lahf
(bad)
bound
push
in
xchg
xchg
test
shl
push
imul
cs
bound
movs
jmp
sti
bound
or
(bad)
push
or
mov
popf
push
mov
cmp
ins
(bad)
jmp
mov
popa
ror
rcr
cmps
mov
std
shl
aam
dec
push
jo
sbb
adc
jae
push
loopne
aam
add
nop
mov
loop
adc
clc
dec
sub
daa
pop
sti
dec
movs
call
(bad)
fdiv
pushf
mov
inc
(bad)
test
js
xchg
mov
js
fmul
into
jle
mov
imul
adc
aad
pusha
xchg
in
xchg
mov
xor
scas
(bad)
or
inc
scas
add
icebp
bound
shr
add
(bad)
leave
push
add
dec
jmp
test
sub
inc
cmp
adc
cmp
in
push
mov
mov
(bad)
es
mov
add
push
xlat
xchg
mov
dec
push
mov
(bad)
push
cmc
mov
sti
or
out
test
mov
xchg
push
mov
scas
sbb
popa
sub
pushf
xor
stos
sbb
push
cli
rcr
push
sub
cmps
mov
(bad)
ret
cmp
cdq
(bad)
adc
mov
cmp
pop
push
scas
mov
rcr
(bad)
mov
test
xor
jp
inc
loope
ss
lea
imul
out
and
xchg
add
add
les
lods
inc
mov
dec
push
xor
cmp
sub
dec
push
pop
sub
cld
xchg
cs
pop
sub
es
add
and
jb
ds
mov
les
or
popf
jae
cld
pop
inc
cmps
and
rcl
mov
jne
dec
mov
sub
cmp
push
cmp
popf
mov
xor
add
mov
adc
push
xor
(bad)
fadd
fucomp
push
dec
(bad)
push
cmc
push
neg
xor
jl
and
gs
pushf
sar
mov
(bad)
fst
jg
repnz
loopne
bound
jmp
cmc
stos
or
xor
adc
fistp
xchg
daa
cmp
and
xor
dec
retf
mov
call
fld1
mov
push
cmp
cmp
cmpxchg
rol
or
in
xchg
sti
pop
inc
dec
inc
ror
add
or
or
jno
dec
lock
or
stc
in
idiv
es
jl
and
call
icebp
in
cmp
mov
xor
mov
cmp
add
pop
jno
mov
outs
ins
cmp
(bad)
aas
mov
(bad)
jnp
jb
aas
mov
inc
add
mov
ss
sti
out
jnp
xor
add
jmp
jnp
push
pop
mov
bound
sub
inc
cmp
cmp
sub
mov
dec
cmp
xlat
sbb
inc
sbb
shr
mov
push
scas
icebp
push
add
push
or
sbb
aam
scas
loop
mov
and
mov
sahf
aas
sub
hlt
ins
jmp
bound
fsub
neg
mov
movs
sbb
push
mov
dec
movs
xchg
push
push
mov
sub
and
add
shl
add
ins
sahf
inc
popa
aas
jl
hlt
jnp
xor
aas
jl
sub
iret
leave
mov
sbb
push
out
sub
sub
add
mov
xchg
pop
jmp
lea
js
cwde
pushf
pop
adc
push
gs
jmp
pop
(bad)
cmp
rcr
aaa
push
rcr
into
pop
rcl
mov
add
stc
sub
repnz
xor
inc
jae
lds
adc
and
fs
mov
xchg
xor
cmp
nop
aaa
pop
and
cmp
add
mov
xchg
in
(bad)
xlat
in
leave
cmp
iret
pop
and
jne
stos
pop
int3
inc
bnd
lds
inc
js
jg
into
leave
lds
jp
push
in
dec
call
dec
daa
test
sub
mov
jle
sti
mov
sub
iret
out
inc
push
mov
fstp
outs
mov
mov
lea
cmc
test
mov
jmp
popf
ror
dec
sbb
rol
popa
inc
daa
mov
jmp
cdq
sub
std
cs
test
ficomp
mov
out
ss
scas
fcom
xchg
mov
mov
and
xor
scas
jmp
inc
cmc
lods
loopne
cmp
ss
and
es
or
push
adc
cmp
cmc
sbb
jns
jae
mov
pop
pop
int3
dec
jle
out
std
mov
ss
(bad)
mov
or
ficom
test
stos
pop
adc
test
fistp
xor
xchg
mov
shr
mov
sbb
xchg
mov
in
pusha
xchg
mov
fmul
cdq
push
imul
pushf
add
sbb
das
ds
dec
sti
test
idiv
adc
cmp
or
sub
or
and
(bad)
test
repz
push
cwde
aad
stos
sbb
jne
dec
pop
std
test
mov
ret
cmp
pop
test
push
mov
fild
or
xor
ins
jp
add
push
and
stos
sti
mov
nop
iret
aas
push
mov
sub
movs
sbb
or
jmp
mov
add
popa
in
int3
mov
fmul
or
jecxz
int
pop
lods
retf
pmuludq
ret
gs
cmp
mov
je
mov
dec
loop
lahf
fwait
mov
mov
outs
sub
ret
outs
cld
dec
sbb
inc
inc
outs
jp
dec
lds
rol
or
enter
push
xchg
jmp
je
xor
retf
jno
mov
pop
jle
stos
dec
cmp
jg
cmp
fld
imul
and
push
imul
cmc
pop
es
cmp
jl
add
leave
pop
sub
cmovne
push
inc
aam
pushf
push
sub
dec
adc
dec
(bad)
lods
jo
sub
mov
xchg
shl
sbb
jg
pusha
cld
aad
cmps
mov
sub
ret
out
add
mov
jne
cli
das
rcl
push
fsub
pop
ss
es
aas
ins
or
retf
mov
rcr
inc
pop
jge
xchg
sub
adc
xor
xlat
mov
adc
fnstenv
or
pop
mov
jp
daa
dec
xor
fdiv
adc
cmp
data16
push
lods
ds
hlt
xor
sbb
jl
sbb
arpl
adc
push
mov
cmp
in
xchg
fld
cdq
out
jno
cmp
jae
stos
jmp
xor
mov
or
sbb
inc
std
popa
cmps
xchg
push
test
in
ss
movs
inc
adc
lock
cli
jl
out
inc
ret
jmp
fwait
dec
push
in
and
add
sahf
imul
mov
push
mov
push
fs
inc
fwait
mov
dec
int
data16
(bad)
mov
and
addr16
ret
jne
imul
rol
xchg
pop
arpl
outs
leave
pop
sbb
arpl
(bad)
mov
loopne
xchg
cmps
jae
cmp
leave
sar
test
or
retf
stos
push
out
sbb
int
sub
jns
mov
iret
jb
cld
and
xor
scas
daa
outs
pop
out
leave
pop
jmp
sub
rcl
ja
sub
(bad)
cmp
xchg
or
sub
cwde
fisttp
and
xor
scas
vpaddw
loopne
push
cmp
fistp
leave
test
mov
mov
cmp
in
mov
sbb
(bad)
xchg
cmp
mov
hlt
out
inc
sbb
movs
add
sbb
dec
sub
xchg
les
sub
out
fs
gs
in
stos
push
jb
cmp
jge
cmp
rol
ss
or
retf
and
loopne
int3
mov
outs
xor
mov
into
dec
sti
jg
out
sub
mov
mov
push
jo
scas
pop
xor
jg
ds
jmp
adc
sub
mov
imul
dec
sub
xchg
and
fdivr
pop
ss
data16
xor
hlt
xor
cmp
xchg
and
enter
jno
fild
popf
xchg
cmp
and
jo
cmp
lea
adc
cmp
mov
push
rcl
aas
cwde
pusha
into
xchg
mov
out
int
pop
xor
add
js
test
pop
fwait
and
xchg
loop
push
and
repz
hlt
dec
call
neg
cmc
fistp
call
clc
aad
adc
mov
or
sub
fwait
fs
loope
or
sub
lock
daa
mov
push
cld
pop
fs
aas
jl
sbb
movs
fwait
inc
dec
(bad)
icebp
aad
enter
or
lock
xchg
mov
adc
add
int
sbb
pop
push
mov
addr16
push
xlat
sub
stos
jne
add
js
xlat
lods
aam
fadd
fs
pop
or
sbb
add
cmps
xchg
daa
xor
pusha
les
mov
ror
dec
dec
test
std
fild
mov
dec
mov
imul
xchg
pop
cmp
fsubr
retf
rcl
sbb
je
pushf
jo
popf
adc
arpl
fwait
sbb
movs
jno
leave
xchg
mov
lea
inc
adc
mov
pop
and
sbb
jl
pop
and
jp
outs
shl
xor
sub
ret
pop
or
sub
dec
ret
xchg
push
(bad)
int
dec
sub
and
push
fcom
push
cs
test
lock
cdq
retf
push
xchg
pop
xor
mov
sbb
or
mov
mov
fidivr
jnp
sti
mov
mov
jno
stc
daa
(bad)
jmp
jno
add
leave
ins
adc
pop
mov
mov
add
sub
js
jbe
iret
jo
mov
pop
dec
adc
nop
add
cmp
push
jg
push
popa
aad
gs
sub
stos
and
retf
sub
(bad)
lds
js
xor
adc
test
call
push
cs
ins
frstorw
sti
push
mov
mov
xor
mov
data16
pop
cs
mov
bound
stos
xor
nop
fwait
mov
les
dec
ficom
rcr
aas
pop
and
in
inc
scas
dec
inc
clc
hlt
inc
cwde
dec
cmp
inc
or
fwait
cmps
nop
inc
push
lea
pushf
pop
lahf
pop
jecxz
cmc
out
sub
dec
jo
mov
cdq
std
adc
stos
inc
fwait
movs
jl
push
sti
rcl
push
pop
sbb
repz
inc
std
cwde
movs
dec
push
jno
push
test
jne
dec
push
sar
ja
test
(bad)
std
mov
xchg
inc
lods
push
or
out
push
clc
pop
mov
inc
cmps
test
in
mov
scas
out
jns
add
push
pop
jbe
fwait
dec
xchg
pop
pop
cld
mov
inc
lods
movs
xlat
mov
cli
data16
push
rcl
cmps
ja
in
cld
adc
mov
and
xor
push
push
shl
sbb
mov
sbb
out
push
sbb
in
add
and
scas
leave
mov
add
idiv
mov
test
pop
sbb
pop
call
pop
jb
fdiv
jae
popa
leave
mov
ror
(bad)
(bad)
mov
cmps
sbb
xchg
bound
adc
inc
imul
jge
adc
inc
or
ret
dec
sbb
test
fisttp
lds
inc
sbb
push
jno
mov
(bad)
adc
push
sbb
pop
xchg
add
lea
pop
adc
adc
(bad)
jns
xor
iret
and
and
das
add
les
cwde
xchg
or
(bad)
sub
mov
inc
hlt
dec
cs
or
mov
rol
cmc
cmp
mov
pop
iret
dec
adc
(bad)
adc
(bad)
popf
jecxz
mov
sub
in
pop
stc
sub
lods
sbb
or
ret
or
pop
dec
and
xchg
iret
jge
fadd
aam
and
and
cmp
shr
push
mov
jle
loopne
aam
daa
loope
pushw
adc
sub
imul
xlat
aad
pop
sub
sbb
das
(bad)
adc
test
jbe
movsx
and
push
sub
lods
jle
mov
xlat
ret
cld
xchg
sub
int3
mov
xor
pop
call
movs
push
xor
in
pop
mov
xor
jp
ss
mov
dec
inc
cmp
xchg
dec
(bad)
push
fcom
hlt
and
imul
push
neg
clc
cmp
xchg
push
adc
leave
cdq
inc
inc
adc
xchg
in
test
inc
popf
or
mov
retf
jo
inc
gs
pushf
ret
bnd
or
(bad)
mov
test
pop
dec
jne
inc
mov
pop
jmp
dec
sbb
lods
movs
gs
cli
push
leave
push
pop
leave
(bad)
mov
push
jle
dec
popf
jno
ret
mov
sub
iret
jo
pop
pop
mov
mov
(bad)
or
inc
jle
loopne
cmp
cld
sbb
arpl
ins
mov
push
in
ins
gs
jp
adc
sar
push
pop
push
adc
fsub
stc
and
xchg
imul
inc
idiv
ins
pop
test
test
dec
outs
call
sahf
sbb
in
jb
sub
jmp
dec
push
cmp
pop
retf
dec
and
dec
int3
lods
sbb
popa
pusha
js
test
into
(bad)
out
cmp
cmps
cmp
or
ffree
sub
jge
cmp
fsub
icebp
cs
add
je
pop
xor
cdq
push
xchg
sahf
fstp
shl
bound
mov
mov
fistp
xor
bound
in
and
mul
sub
mov
(bad)
jmp
mov
out
jbe
cmp
xchg
ret
out
dec
in
cmp
or
pop
cmps
aas
adc
xchg
lods
mov
inc
cld
cmp
aas
mov
es
outs
push
fsub
push
and
push
out
jge
xor
sbb
test
jnp
cmp
int3
adc
bound
(bad)
ficomp
jge
enter
cmps
jae
push
jnp
daa
je
add
inc
inc
jnp
sbb
sar
mov
mov
into
xor
movs
nop
and
fwait
push
lahf
(bad)
jo
push
out
stos
mov
repnz
stos
add
mov
mov
mov
inc
mov
rcr
sub
inc
shl
stos
mov
icebp
mov
retf
inc
sahf
inc
in
popf
jmp
mov
xor
movs
xchg
sub
jne
lods
and
xchg
addr16
mov
popa
cmp
rol
pop
adc
cmovae
push
pusha
rcl
and
sub
outs
ins
add
(bad)
sbb
dec
inc
inc
push
sbb
mov
mov
pop
(bad)
movs
sbb
cdq
popa
push
jb
test
enter
push
jle
pop
je
jge
retf
pop
and
or
int
cwde
test
add
and
es
adc
es
cmp
jbe
cmp
sub
shl
aam
pop
je
loopne
aaa
cmp
(bad)
adc
data16
xor
add
(bad)
fcomp
mov
mov
sar
lahf
daa
add
fistp
es
std
ins
(bad)
sub
mov
jg
cli
sbb
cmp
sub
mov
jmp
adc
push
xchg
mov
shl
adc
sbb
inc
mov
inc
mov
xchg
ret
fcom
lea
pop
(bad)
jecxz
gs
cmp
nop
nop
in
repnz
pop
cmp
xchg
test
(bad)
jmp
cmp
sbb
in
mov
sub
cwde
cmp
out
sbb
adc
push
mov
dec
out
rcl
cmc
out
pop
lahf
dec
mov
adc
jg
ja
or
rcr
or
pop
dec
push
cmps
xor
pushf
push
jmp
and
push
mov
push
and
arpl
dec
test
xor
inc
lods
adc
inc
add
pop
test
mov
sbb
push
cs
pop
cli
je
mov
mov
dec
pop
add
mov
nop
lahf
or
sbb
add
xchg
stos
xchg
fs
repnz
jns
fst
sar
pushaw
(bad)
fidivr
push
punpckhwd
loope
push
xchg
sub
lods
outs
dec
ret
inc
sbb
inc
push
(bad)
stc
mov
dec
rcr
sbb
sub
pop
sbb
cmps
push
jb
in
pop
enter
push
xchg
jp
je
rcl
or
jbe
xchg
sbb
mov
and
push
iret
lea
adc
enter
ja
adc
fxch
lahf
jg
adc
aad
pop
sbb
add
fldcw
cs
das
or
test
mov
cwde
xor
dec
and
add
sbb
mov
xchg
loop
test
dec
(bad)
push
aaa
inc
in
jle
cmp
les
outs
or
(bad)
push
mov
aad
mov
stos
and
or
sub
pop
inc
and
cdq
mov
dec
fwait
jne
xchg
icebp
fsub
pushf
sahf
mov
jne
dec
call
add
loopne
dec
dec
dec
pop
out
popf
cli
inc
sbb
push
in
bound
(bad)
and
mov
adc
add
pop
pop
stc
or
aas
push
push
add
cdq
push
pop
sub
daa
or
sub
pop
push
mov
mov
cld
xchg
or
inc
push
popa
out
push
mov
rol
arpl
pop
fidivr
mov
xor
mov
jno
aad
fld
retf
xchg
or
(bad)
push
pop
or
lods
mov
outs
hlt
adc
sar
lea
or
je
push
dec
retf
inc
and
loope
jbe
sub
sub
mov
jns
cld
or
inc
shl
in
iret
enter
ret
daa
call
mov
(bad)
cdq
xor
jg
js
(bad)
pop
mov
inc
adc
repz
dec
cs
fld
in
pop
fiadd
push
xchg
cmp
aad
inc
mov
pop
fidivr
push
push
mov
pushf
dec
loopne
jecxz
ss
jno
loop
mov
cmp
push
mov
inc
nop
in
mov
cmp
sbb
out
pusha
aam
mov
pop
jmp
mov
or
sahf
or
cmps
push
cs
sbb
sub
lock
mov
inc
stos
sti
xchg
pushf
test
repz
xchg
dec
ror
mov
iret
pop
or
mov
sbb
sbb
cdq
push
sub
mov
pop
push
cs
pusha
test
sub
ds
or
jl
push
imul
push
ret
lods
jne
bound
rol
bound
mov
sahf
sub
stos
sub
test
mov
mov
cs
pop
inc
jg
in
lea
or
sbb
mov
bound
or
sbb
sub
and
(bad)
add
adc
push
fisub
cdq
int
jmp
loopne
dec
movs
imul
mov
adc
ds
nop
ret
retf
sbb
into
int
sti
adc
les
mov
add
ins
jbe
je
mov
test
xchg
jbe
xchg
fcmovne
fcom
les
addr16
or
fs
iret
cwde
stos
add
movs
repnz
test
pop
(bad)
or
jmp
test
dec
push
loopne
out
mov
dec
loope
fsub
daa
test
test
cld
in
xor
mov
xor
pop
pop
(bad)
movs
outs
xor
pop
xor
xor
shl
pop
sub
(bad)
dec
jg
fs
xor
(bad)
jns
pop
push
and
dec
cmc
imul
in
cs
cdq
comiss
or
cmp
test
mov
jbe
sub
inc
enter
pop
shl
icebp
in
sbb
inc
pusha
and
xor
in
arpl
xor
lahf
push
inc
cmc
fcmovnb
and
or
div
fmul
mov
push
imul
movs
stos
neg
xchg
cmp
fldcw
cdq
adc
stos
call
push
sub
inc
add
scas
push
dec
out
fmul
cmps
mov
sbb
push
lods
arpl
pop
push
stos
test
or
aaa
(bad)
pop
push
jle
mov
lds
pusha
fs
mov
or
loopne
bound
daa
mov
sub
push
sti
mov
fs
sti
out
das
inc
cmc
adc
mov
mov
sub
push
fs
push
ja
rcl
adc
data16
outs
retf
lds
xchg
(bad)
xlat
fdiv
push
or
js
popf
push
mov
repnz
retf
ret
or
inc
(bad)
push
int
push
mov
jns
pushf
lods
iret
in
push
es
lea
add
push
mov
sub
std
stc
jg
inc
movs
aad
mov
sub
shl
xlat
add
cmps
ret
in
rcr
div
loopne
cmp
shr
ss
mov
fstp
fdiv
mov
mov
xor
mov
xchg
aaa
js
cmps
(bad)
int3
adc
jecxz
pop
mov
(bad)
pop
out
out
sub
push
xchg
xor
add
popa
dec
dec
xchg
push
(bad)
mov
inc
pusha
sbb
xchg
(bad)
bound
inc
and
out
cdq
retf
ss
jge
inc
sti
ret
mov
push
or
icebp
fst
inc
inc
xchg
rcr
and
dec
push
imul
xor
retf
cmc
adc
aas
aad
push
xchg
div
int3
leave
dec
test
or
jb
nop
cli
add
les
mov
mov
sbb
cwde
dec
xchg
push
mov
fadd
add
push
mov
scas
mov
pop
push
cmp
mov
and
jmp
push
cli
or
call
fsub
leave
or
fisub
mov
mov
sti
or
pop
mov
mov
dec
adc
inc
mov
std
call
repnz
jg
mov
or
movs
shr
icebp
push
xchg
nop
mov
ret
mov
outs
cmps
lods
mov
jl
mov
or
cmps
jo
add
sbb
orps
sbb
push
jne
sub
sti
jno
and
ja
dec
and
mov
jnp
ror
cld
sbb
pusha
pop
jge
cmps
inc
rcl
dec
sub
xor
inc
jp
aad
ror
sti
pop
retf
dec
adc
sub
push
test
pushf
fcmovnu
push
ins
mov
cmp
xor
add
leave
push
loope
adc
lea
(bad)
jecxz
jecxz
cmp
les
ins
mov
cmp
std
adc
mov
xchg
cmp
pop
pop
inc
jno
cmp
cmp
ret
jns
call
mov
in
dec
out
aas
xchg
test
push
fucomi
dec
sbb
hlt
sahf
out
cmc
hlt
nop
scas
cmps
dec
mov
cmp
out
dec
xchg
retf
scas
adc
stc
mov
dec
je
xchg
mov
push
pop
jae
test
mov
aam
and
(bad)
stos
xor
push
push
adc
pop
add
stos
cwde
pop
dec
icebp
sbb
push
jle
pop
repz
pop
or
xor
pop
pop
cdq
dec
mov
loopne
or
es
popa
popa
ins
push
mov
mov
or
push
inc
push
mov
inc
into
dec
jmp
pop
das
adc
mov
aaa
mov
adc
push
mov
push
cld
dec
jns
ins
xchg
and
aam
sbb
xor
les
lods
daa
sbb
repz
xor
(bad)
daa
jb
push
sub
push
push
jp
jecxz
jnp
dec
loop
retf
jle
jl
outs
jbe
mov
int3
loop
shl
mov
jns
mov
iret
or
ins
and
push
pop
xor
in
jle
cmp
popa
jge
xor
gs
sub
add
jb
stos
xchg
xor
mov
push
push
outs
sub
fld
cmc
ds
xor
test
or
retf
adc
test
jbe
data16
in
mov
jb
ss
inc
add
movs
lea
inc
aam
in
sbb
popa
dec
nop
sub
out
push
cmp
cmp
jmp
dec
loopne
aas
push
ret
xchg
add
fiadd
out
pop
imul
das
stc
lods
icebp
sbb
dec
out
push
or
hlt
jl
js
adc
mov
aad
imul
and
repz
and
xchg
imul
jo
xor
ds
adc
push
out
lods
ds
repz
(bad)
icebp
cmp
lea
sub
add
jno
loop
jbe
jl
cmp
sbb
ds
hlt
sub
xchg
outs
jl
ins
mov
pop
or
sub
in
ja
or
mov
sbb
or
pop
js
mov
jge
dec
in
cmp
sub
aas
pusha
les
mov
shl
aas
bound
xchg
daa
push
paddusb
(bad)
jp
ins
imul
mov
mov
retf
jle
cli
adc
inc
pop
push
push
lahf
xchg
shl
adc
or
test
je
ret
fstp
mov
lds
mov
jb
sbb
push
adc
call
jl
js
ret
adc
mov
push
enter
(bad)
sti
(bad)
(bad)
push
aam
mov
sub
or
(bad)
(bad)
test
sub
pop
adc
fidivr
pop
lea
adc
inc
(bad)
sub
mov
inc
add
jmp
xor
aad
cmp
sbb
mov
sbb
cmp
out
rcl
scas
jge
ds
xchg
push
rol
cwde
sbb
adc
add
call
mov
inc
add
stos
mov
dec
iret
mov
adc
and
dec
xor
mov
mov
mov
outs
cli
cld
dec
ins
push
call
cld
aad
inc
push
mov
xchg
jmp
stos
bound
pop
pop
cmps
push
test
xlat
ficomp
loop
mov
sub
pop
in
lea
mov
mov
std
or
pusha
ret
mov
mov
ror
jae
inc
arpl
pop
cmp
pop
xor
xor
adc
ror
lahf
pop
or
adc
icebp
fisttp
ret
call
mov
les
neg
sbb
cmp
mov
sbb
mov
lahf
movs
pop
data16
jne
sub
retf
cwde
jae
and
add
int
inc
mov
jns
aad
iret
or
and
mov
out
daa
pusha
aaa
cmc
jge
jle
rcr
vmovapd
or
jg
push
in
aad
cdq
test
cmp
fmul
ins
add
test
stc
(bad)
fld
xlat
xor
xchg
xchg
mov
and
and
mov
mov
sbb
loop
and
jecxz
mov
mov
xchg
dec
mov
jb
mov
rcr
cli
xchg
bound
cld
out
gs
cwde
lods
jecxz
cmps
repz
jmp
or
fsubr
add
or
icebp
push
push
cwde
inc
pushf
xchg
jmp
out
inc
test
repnz
in
inc
dec
std
call
mov
dec
xchg
ror
mov
pusha
cmc
dec
pop
sub
movs
jp
jg
jg
pop
xor
dec
out
jns
mov
movs
pop
jns
cmp
movs
sbb
push
push
xchg
and
inc
mov
push
fcomip
ret
cmp
or
lods
and
xchg
add
pop
sbb
lahf
pop
mov
out
push
call
mov
mov
inc
pop
xchg
dec
xchg
mov
(bad)
ror
sti
aad
bound
mov
push
in
test
cmps
mov
add
data16
mov
adc
push
mov
mov
pop
es
cmp
rcl
repz
sbb
inc
mov
ror
outs
mov
in
les
out
sbb
jmp
(bad)
adc
call
jb
mov
scas
push
push
dec
scas
je
xchg
jmp
mov
stos
and
mov
add
int3
fld
add
cmp
iret
adc
retf
out
adc
sar
(bad)
push
sahf
sbb
cs
aam
sub
data16
cmp
gs
pop
jmp
cmp
add
cs
sbb
jmp
fimul
xor
and
aaa
xchg
xor
fsubr
les
pop
ret
and
dec
fisttp
push
mov
inc
fstp
loope
and
cmp
push
mov
clc
loop
or
rcl
or
cmp
cmp
jmp
pushf
out
xchg
pusha
cs
in
push
test
xchg
out
dec
dec
int3
inc
mov
(bad)
add
das
sbb
rcr
jp
ror
cmp
mov
dec
(bad)
es
movs
add
mov
and
leave
push
mov
daa
mov
push
dec
mov
test
ret
push
pushf
mov
stos
jp
movs
add
push
test
lods
xchg
movs
add
jmp
pop
push
xor
mov
js
push
dec
mov
pusha
mov
dec
or
ins
mov
and
bnd
cmp
jae
pop
cmp
mov
jp
jbe
sbb
mov
int3
jecxz
stos
sub
inc
jno
adc
mov
fs
xor
xor
shr
ja
ins
pop
push
pusha
outs
ins
and
outs
sbb
outs
outs
or
lds
ret
or
int
outs
(bad)
pop
xchg
outs
sbb
xor
jl
mov
mov
jne
clc
or
leave
ds
and
int3
into
into
imul
and
mov
out
sub
sub
inc
aam
mov
int
(bad)
dec
(bad)
(bad)
ins
pop
sbb
adc
xchg
aaa
xchg
pop
jle
mov
les
ss
cdq
or
je
dec
cmp
es
(bad)
jno
push
in
mov
cmp
xchg
leave
inc
outs
out
xchg
cmp
or
es
push
mov
jno
sub
outs
xchg
cmp
add
mov
ss
push
xchg
xor
fdivr
mov
gs
call
bnd
test
cmp
mov
rcl
fwait
add
inc
sub
dec
pop
jo
movs
sub
mov
inc
push
or
test
leave
stos
es
or
or
(bad)
lods
xor
add
adc
rcl
or
out
dec
and
xor
adc
xor
not
popa
push
adc
add
mov
loop
retf
fs
fnstsw
mov
out
mov
add
cs
enter
into
ins
xchg
dec
sbb
sbb
or
xchg
aad
pop
cmp
stc
jle
pop
dec
vpcmpeqw
bswap
ret
and
loopne
into
std
lea
ins
iret
jp
mov
rol
cli
(bad)
mov
mov
shr
push
adc
mov
mov
jle
xor
ret
ja
cs
cmp
popa
dec
xchg
xor
xchg
push
xchg
pop
frstor
pop
xor
gs
adc
ss
fisttp
(bad)
enter
pop
(bad)
fst
push
loope
xchg
pop
sub
daa
outs
ja
push
mov
xchg
cmp
inc
jmp
mov
fcom
loope
push
inc
call
out
adc
jne
and
ja
mov
shl
ss
aaa
pushf
ror
repnz
xchg
or
les
sub
pop
scas
(bad)
mov
sar
dec
ins
and
add
call
dec
(bad)
push
mov
sti
lods
in
push
inc
sub
cmps
aaa
jae
std
sar
mov
jp
mov
adc
add
aam
lods
mov
pop
add
cdq
scas
sbb
adc
xlat
jge
mov
les
pop
addr16
xchg
mov
xchg
xlat
or
pusha
daa
and
jecxz
loop
loope
push
stc
mov
sub
xchg
movs
int
mov
push
pop
jge
clc
mov
ds
cs
imul
add
or
shl
jp
rcl
jg
scas
push
sub
sbb
sub
lds
cmp
sbb
jg
jno
(bad)
das
mov
call
jg
cmp
outs
cmp
xor
test
inc
(bad)
int
mov
and
rol
jmp
and
xor
mov
retf
js
jg
mov
pop
sub
dec
mov
dec
fimul
and
shl
sahf
scas
push
xor
push
mov
cmp
fsubp
sbb
or
push
loope
push
xchg
aaa
aad
push
mov
inc
in
sub
nop
xchg
mov
inc
cmp
test
mov
inc
rol
inc
loopne
inc
xchg
cmp
sub
js
enter
(bad)
sbb
sbb
rcr
or
xor
inc
int
or
or
mov
push
mov
pop
neg
mov
mov
inc
dec
dec
adc
movs
sub
sti
lds
repnz
stos
sub
icebp
push
xlat
mov
movs
push
(bad)
lods
stos
mov
sbb
pop
xor
and
iret
test
jno
aas
aaa
ss
jle
push
out
ss
cmp
push
ja
jmp
je
sbb
mov
es
ins
ins
pusha
retf
mov
mov
cli
xor
mov
bound
cmp
stos
adc
cmp
imul
imul
and
mov
sub
dec
mov
cs
es
cs
fldcw
pop
ds
and
pop
lods
outs
ret
ins
sbb
cmp
outs
jae
xor
adc
cmp
ss
jo
push
aas
(bad)
imul
enter
pop
xor
retf
push
inc
adc
repz
xchg
rcl
and
lods
cmps
xchg
rol
shl
fnsave
ret
jp
rcl
push
sub
or
(bad)
test
enter
or
mov
das
arpl
(bad)
fsubr
into
xor
test
mov
int3
popf
fist
pop
in
inc
mov
div
imul
mov
cmp
add
(bad)
lahf
dec
in
movs
(bad)
mov
xchg
jmp
ds
stos
push
xchg
movs
icebp
cwde
jmp
fst
adc
push
cdq
cdq
inc
call
cs
pushf
lds
repz
mov
dec
int
inc
lahf
je
test
or
(bad)
mov
movs
je
push
jmp
cli
sbb
js
cmps
imul
sub
cmc
and
stos
xchg
add
scas
ret
cmc
add
lahf
adc
ja
(bad)
mov
sysret
pop
mov
popf
inc
mov
in
or
sub
mov
mov
frstor
inc
aam
push
mov
push
xor
ret
sbb
mov
jg
ret
out
add
leave
jnp
imul
xor
ins
sub
fnstsw
arpl
outs
(bad)
push
lds
clc
ds
ds
(bad)
lahf
test
jae
adc
leave
adc
pop
in
mov
aaa
retf
stos
cmp
cwde
jne
ja
mov
and
xor
jns
xchg
outs
iret
(bad)
imul
gs
jmp
jnp
mov
jns
mov
and
(bad)
bound
or
jae
loop
jno
and
jne
stos
outs
ja
dec
mov
fdecstp
cld
ja
lea
test
shl
mov
pop
(bad)
movs
imul
jmp
mov
jns
xor
out
push
inc
loope
dec
xchg
xchg
and
frstor
push
nop
cwde
scas
sub
mov
outs
cmp
cmp
xor
adc
xor
out
adc
xchg
push
pop
cmp
xor
outs
xchg
xchg
sub
in
jo
test
mov
mov
inc
xchg
mov
fwait
mov
div
dec
sbb
inc
frstor
popf
mov
lock
dec
fnsave
dec
mov
push
les
dec
icebp
or
nop
push
cdq
stc
mov
fimul
fistp
cmps
ins
es
cld
fisubr
jo
loopne
psubd
(bad)
sbb
out
cs
stos
vcvtdq2pd
imul
lods
loopne
jecxz
jle
cmps
pop
sbb
movs
scas
div
add
mov
call
push
add
fdiv
mov
pop
hlt
or
gs
pop
push
lods
stos
mov
repz
(bad)
cmp
pusha
lahf
sub
ja
test
bound
fwait
mov
fs
adc
mov
data16
stc
mov
jmp
shr
adc
pop
std
push
mov
mov
xor
and
js
ret
cmp
nop
outs
and
(bad)
sbb
fndisi(8087
jb
and
enter
push
sub
add
cmps
cmp
push
ja
retf
pusha
adc
and
push
xchg
sahf
(bad)
arpl
mov
jl
jb
sar
(bad)
mov
aam
mov
or
pusha
(bad)
sub
add
(bad)
fcmovu
xor
xor
ret
imul
xor
dec
and
sbb
and
and
mov
imul
or
clc
mov
cmp
xor
int
mov
adc
cmp
mov
pop
out
mov
xchg
scas
mov
jmp
xchg
int
in
jmp
(bad)
mov
xchg
xchg
arpl
in
jb
scas
inc
shl
cdq
lahf
aaa
scas
out
stos
jle
inc
xchg
(bad)
outs
or
icebp
pop
push
mov
popf
adc
mov
dec
pop
outs
repnz
xor
cld
mov
out
mov
inc
mov
mov
sti
mov
fbld
mov
xor
sti
pop
js
push
cmp
mov
push
inc
xchg
ret
fld
add
push
ret
data16
repz
dec
cmp
add
popf
push
mov
jns
add
(bad)
fwait
inc
pop
popf
loop
mov
sub
popa
ins
mov
mov
std
into
or
xor
dec
mov
lock
mov
mov
xlat
in
dec
imul
adc
pop
push
ret
dec
sbb
xchg
lea
fcmovne
les
dec
jno
scas
inc
(bad)
pop
test
or
inc
retf
dec
and
pop
and
in
sahf
and
and
jns
sub
iret
mov
and
add
arpl
sub
daa
les
sar
sbb
sub
arpl
imul
cmp
imul
add
les
stos
or
dec
push
jbe
jecxz
inc
das
jnp
test
xor
mov
mov
or
cmp
xor
ret
into
imul
adc
push
sub
jmp
in
(bad)
cmps
ja
in
mov
add
push
xchg
jo
sub
pop
jbe
mov
lods
rcl
cmp
into
add
(bad)
push
out
xchg
xchg
inc
pop
push
aad
call
loop
dec
pusha
sub
hlt
movs
mov
dec
jl
dec
mov
lahf
mov
dec
stos
ror
movs
dec
sbb
cli
pop
pop
push
xchg
movs
pop
cmps
jno
pushf
cld
or
jp
test
lods
pop
fist
dec
leave
stos
lods
xchg
or
xchg
fmul
sahf
push
add
mov
pop
shl
in
lods
ds
push
mov
sti
mov
adc
or
mov
les
xor
retf
jbe
mov
mov
add
dec
cmp
fcomp
mov
xor
mov
cs
push
sti
and
ret
mov
outs
ficomp
mov
jo
outs
mov
sbb
cld
cli
jb
inc
ror
mov
push
je
shl
adc
and
mov
dec
into
shl
and
ja
jp
mov
or
iret
dec
lea
xchg
into
ror
fcom
sub
adc
mov
sbb
imul
fidivr
(bad)
iret
xchg
push
into
xor
jecxz
fbld
jno
mov
push
jecxz
(bad)
xchg
cmp
fmul
mov
cdq
cmp
sbb
xchg
mov
jmp
aas
out
sbb
sbb
repz
mov
pop
out
pop
push
pop
inc
icebp
xchg
dec
fwait
mov
mov
imul
popf
xor
(bad)
iret
clc
fimul
aas
fstp
nop
int3
push
dec
xchg
adc
stc
mov
imul
cs
push
loop
cmps
add
dec
(bad)
(bad)
xchg
add
sbb
push
jp
test
xor
mov
cmp
mov
jle
pop
js
dec
pop
(bad)
or
mov
push
vpshaw
pop
cmc
(bad)
mov
es
test
popa
mov
sti
repnz
inc
mov
mov
cmp
scas
gs
mov
call
mov
mov
add
sti
adc
add
lock
lock
cmp
scas
rol
mov
cmp
jo
cmp
leave
pop
sbb
adc
push
sahf
neg
cmc
in
je
sub
retf
in
and
mov
cmps
int3
leave
inc
in
and
sar
push
iret
movs
sbb
jnp
cmps
cmps
rol
dec
jle
jnp
aam
ret
jno
xlat
adc
ret
xchg
add
ss
(bad)
push
das
js
dec
test
neg
mov
mov
xchg
mov
jbe
mov
or
out
ss
jne
loop
mov
js
pop
dec
gs
nop
and
adc
jne
call
fs
jbe
je
int
ds
adc
xchg
out
lds
inc
or
inc
out
push
js
dec
cdq
xor
inc
push
es
sub
out
add
call
dec
inc
xor
inc
pushf
adc
xor
aaa
pop
call
in
ins
cmc
repnz
xchg
mov
mov
dec
ins
mov
popa
fistp
movs
dec
push
jmp
cmps
les
out
imul
test
inc
push
dec
push
pop
popf
xchg
lods
xor
les
(bad)
sub
(bad)
mov
add
(bad)
jmp
mov
pop
push
sbb
or
in
jecxz
jge
mov
ret
jns
pusha
jb
mov
or
dec
mul
xchg
mov
push
xlat
and
fs
xlat
mov
mov
cmp
mov
inc
leave
sbb
pop
mov
lock
mov
shl
mov
ins
and
mov
es
rep
lds
sbb
sbb
jno
pusha
repnz
in
mov
leave
dec
jp
pop
cmc
shl
dec
pop
lods
retf
in
jmp
cmp
int
and
and
mov
sbb
mov
add
test
sar
retf
mov
jge
pop
mov
sub
out
jg
sub
(bad)
sub
mov
call
push
dec
mov
or
(bad)
sbb
xchg
test
push
xor
ss
mov
(bad)
les
mov
pop
loop
cwde
xchg
fcmovnu
adc
mov
stos
mov
xchg
inc
cli
push
out
inc
push
cmp
sub
xchg
pop
adc
mov
in
sub
dec
inc
add
pusha
cdq
push
out
cwde
mov
jae
call
inc
das
fidiv
popf
and
dec
sub
jg
imul
adc
outs
clc
cmp
and
push
and
in
push
imul
data16
xor
bound
sub
sub
inc
lea
push
fwait
aam
stos
mov
bound
push
sbb
cmp
pop
aaa
jno
in
je
les
add
or
imul
rcl
pop
aam
mov
xchg
mov
pop
fwait
stc
xlat
mov
inc
sbb
xchg
and
adc
clc
shl
adc
clc
data16
mov
mov
imul
adc
pop
fmul
cmp
(bad)
ret
rcr
mov
fild
repz
jbe
dec
sbb
adc
push
fwait
push
fs
pushf
cmp
int
jp
pop
sub
outs
xor
push
mov
and
cld
jg
jnp
push
into
(bad)
cmp
adc
inc
pop
xchg
daa
jmp
hlt
jge
jmp
adc
mov
push
sub
dec
cwde
add
ret
fsub
and
sub
(bad)
cmc
sub
fstp
leave
cmp
fbld
popf
(bad)
ret
aaa
addr16
mov
mov
push
cmp
inc
cwde
nop
popf
mov
out
rcl
xchg
pusha
fucompp
ins
cmps
sbb
out
push
xchg
sub
add
lds
arpl
inc
lds
cmc
icebp
dec
and
inc
sub
mov
repz
mov
jb
repz
mov
int3
movs
dec
sub
jmp
test
out
movs
dec
cs
cli
fdiv
inc
mov
and
jbe
jns
repnz
mov
jne
arpl
push
sti
bound
pop
test
cmp
ss
sbb
add
or
add
push
mov
sbb
mov
mov
stc
inc
or
xchg
mov
int
or
arpl
mov
xchg
call
arpl
call
add
popa
dec
sub
std
nop
das
imul
sub
lods
sub
sbb
push
idiv
jo
nop
xor
outs
(bad)
aaa
sbb
push
outs
and
(bad)
sbb
ss
sub
outs
popa
sbb
sar
sub
ins
inc
sub
add
sub
shr
retf
cli
pop
sub
pop
pop
sub
movs
sub
add
xor
je
or
rol
in
push
fdivr
dec
sbb
sub
fcmovu
jle
and
aad
push
fwait
adc
cmp
cs
leave
(bad)
pminub
mov
xchg
in
xor
fmul
stos
mov
outs
mov
ins
loop
mov
cmp
and
push
popa
and
in
cmps
and
retf
xor
cmp
jnp
xchg
pop
ret
and
sub
mov
xchg
(bad)
jmp
arpl
jnp
sub
cwde
jmp
jno
push
test
xor
jno
adc
jae
sbb
jno
repz
aaa
repnz
xor
sahf
inc
mov
je
push
dec
addr16
test
xor
shl
clc
scas
stos
xor
icebp
sub
cli
pushf
jle
push
jae
data16
repnz
cld
mov
push
push
push
(bad)
push
and
ins
stos
or
push
inc
inc
outs
lods
loope
ins
add
adc
gs
mov
sub
push
imul
mov
add
or
cmp
xchg
cmp
push
cmp
cmp
cmp
cmp
cmp
mov
jg
dec
(bad)
jl
sub
xor
mov
loop
mov
outs
pop
imul
cld
fist
sti
mov
xchg
rol
outs
or
rol
aaa
movs
aam
adc
adc
(bad)
push
jp
push
cmp
push
je
pop
cmp
and
xchg
lock
fstp
and
mov
iret
in
xchg
and
pop
test
shl
retf
adc
jle
pop
pop
aam
lahf
fwait
sub
sub
xlat
pushf
jae
sub
or
xchg
(bad)
inc
sbb
dec
mov
es
fcom
sbb
xor
arpl
fsubr
inc
xor
aaa
test
dec
les
sub
test
jno
dec
cmp
fisttp
out
ins
push
cmp
mov
inc
push
aas
pusha
mov
in
inc
adc
xchg
cwde
sub
sbb
xor
ja
icebp
jmp
lea
add
popf
mov
loopne
jg
in
push
fld1
lahf
and
scas
cmc
mov
lods
jmp
int
mov
mov
pop
fxrstor
push
mov
sti
sbb
mov
cmps
mov
mov
push
mov
inc
mov
(bad)
in
xchg
sbb
add
stc
push
add
mov
iret
xor
pop
fs
mov
rcl
and
pop
mov
xchg
push
or
and
or
mov
popa
div
add
cmps
test
fs
add
lock
xlat
mov
mov
adc
jne
shl
push
(bad)
add
ins
pop
dec
test
cmp
into
outs
je
rol
adc
in
stos
xor
or
pop
clc
jle
jne
lds
and
push
fdiv
cdq
sbb
sbb
pusha
and
daa
bound
outs
sub
repnz
es
jbe
addr16
ss
mov
sub
push
aaa
aam
pop
xor
and
(bad)
clc
xor
sub
js
sub
fdivr
add
mov
fimul
mov
xchg
scas
cmps
xor
cmc
jmp
add
adc
cmp
popf
dec
mov
sub
xchg
and
sahf
cmp
or
retf
inc
sbb
xchg
lods
popa
pop
in
dec
test
inc
imul
add
lock
inc
dec
ret
clc
or
xchg
dec
push
dec
stos
xchg
xor
xchg
and
dec
pop
imul
push
clc
clc
dec
and
mov
or
mov
pop
adc
movs
xor
mov
hlt
cmps
push
cs
aad
rcl
stos
test
cmp
push
add
mov
push
mov
shr
lock
jle
pop
push
lds
mov
push
(bad)
or
loopne
mov
es
lea
arpl
sti
push
adc
inc
push
data16
push
iret
sahf
adc
adc
sbb
adc
fdiv
fcmovb
gs
sbb
mov
pop
les
dec
mov
jo
fdiv
(bad)
outs
pop
neg
gs
enter
push
cmp
retf
cmc
and
push
repz
push
hlt
int3
jl
mov
js
sub
into
dec
jo
and
add
pop
shl
inc
fwait
daa
mov
pop
aam
sbb
add
xlat
ss
push
sub
ss
fnop
ror
scas
or
xchg
xchg
fcom
xchg
push
xor
fadd
mov
xchg
outs
push
shl
jecxz
ds
cmp
int3
inc
out
adc
pop
push
xchg
das
mov
lea
pop
sub
mov
inc
in
fst
retf
lea
inc
movs
aam
cdq
push
sbb
cmc
popa
pop
inc
nop
test
fwait
mov
pop
icebp
jg
dec
inc
std
jl
popf
jne
sbb
mov
push
pusha
mov
in
(bad)
mov
mov
push
dec
xchg
stc
xchg
movs
mov
add
dec
xchg
test
ret
push
popa
mov
sbb
arpl
ja
int3
je
scas
mov
add
pop
xor
mov
(bad)
arpl
test
push
mov
cmp
mov
icebp
jae
pop
cmp
hlt
jle
popa
dec
lds
sub
or
ficomp
jo
push
daa
es
mov
mov
inc
imul
iret
aaa
imul
mov
jnp
xchg
jp
pop
js
ins
cli
mov
sub
outs
fcom
jns
dec
and
and
(bad)
mov
hlt
lds
cmp
leave
std
adc
jbe
addps
dec
push
popf
and
push
iret
(bad)
xchg
and
adc
pop
shr
(bad)
push
sub
dec
jle
mov
popf
sbb
jns
inc
xlat
aad
sub
pop
jnp
xor
ror
or
dec
nop
xor
aam
jecxz
loopne
jle
jecxz
sbb
mov
mov
loopne
mul
ss
cmps
mov
test
cmp
in
mov
pop
test
cmp
sub
hlt
cmp
mov
imul
rol
ds
mov
xchg
test
clc
jmp
mov
in
fs
inc
sti
ss
cwde
dec
jge
out
sub
std
inc
pop
or
lock
loop
int
lods
bnd
mov
adc
scas
hlt
jl
in
dec
rol
mov
dec
das
pop
mov
or
cmps
dec
aam
cmps
movs
stos
jbe
cli
push
mov
add
sub
into
test
pop
mov
add
idiv
(bad)
ds
lds
xchg
or
cmps
arpl
dec
cdq
fwait
push
pop
loopne
stos
repz
dec
ins
ret
mov
lods
xchg
cli
add
inc
or
mov
pop
pusha
push
jle
int3
pop
jge
lods
mov
mov
mul
out
mov
jns
ror
mov
adc
dec
inc
cvtdq2ps
xor
popa
adc
cld
mov
lahf
pop
or
add
and
jp
out
test
movs
jae
adc
push
pop
xchg
push
cmps
popa
mov
scas
and
in
add
inc
into
pop
sbb
adc
adc
push
pop
retf
pop
jae
mov
mov
scas
mov
dec
jp
dec
in
stos
movs
test
(bad)
cli
lahf
dec
cmps
push
sahf
xchg
test
cld
mov
cmps
push
scas
push
test
mov
(bad)
test
aas
stc
stos
stc
test
push
push
adc
add
mov
mov
add
je
pop
(bad)
mov
inc
sbb
pop
xor
(bad)
lods
or
fs
or
repz
xor
mov
fidivr
or
cs
gs
in
mov
ja
pushf
lock
out
push
inc
dec
xor
adc
ss
call
push
mov
adc
xchg
movs
shl
push
xlat
mov
cmps
mov
fs
lea
push
pop
xchg
stc
int
jmp
daa
push
fcomp
stos
pop
mov
jg
xchg
cs
mov
mov
inc
scas
mov
add
mov
pop
add
dec
push
pop
sub
repz
or
pop
popa
cmc
adc
(bad)
pop
or
lea
mov
lock
gs
sub
adc
test
(bad)
sar
pop
mov
ret
xchg
sbb
pusha
or
cmps
add
shl
js
sbb
adc
test
or
jbe
push
inc
int3
adc
(bad)
js
and
iret
dec
imul
clc
xchg
shl
adc
inc
test
call
adc
add
cmp
jbe
sbb
jp
retf
dec
cmp
rcl
cs
aaa
test
fs
fs
jp
into
icebp
cmp
jo
(bad)
fcomp
jg
xor
(bad)
xchg
mov
or
push
xor
add
sub
xor
gs
add
das
lea
mov
jecxz
(bad)
push
sub
pop
mov
daa
sar
cmp
sbb
out
cmps
clc
cmp
mov
(bad)
jmp
js
adc
sub
inc
or
push
out
sbb
push
fwait
iret
mov
icebp
push
push
inc
(bad)
aas
dec
popf
xchg
int
dec
ss
lahf
rcr
cmc
sbb
xchg
dec
sahf
mov
mov
inc
das
shl
mov
jg
xor
(bad)
xchg
and
(bad)
fmul
adc
data16
xlat
lods
aad
ja
retf
cmp
push
add
cs
cmps
ins
or
ret
mov
lock
outs
push
sub
sbb
push
cld
repnz
sbb
mov
jb
shl
push
add
movs
mov
push
jmp
and
xor
fidivr
cmc
js
dec
mov
and
adc
push
shr
mov
jmp
xchg
aad
cmp
sub
cmp
push
xor
pop
push
imul
sub
xchg
jno
fdiv
(bad)
aas
mov
inc
xor
adc
jns
das
sbb
loopne
bound
daa
test
imul
or
int
(bad)
jmp
pop
fdiv
mov
popf
and
add
je
int
mov
xchg
jp
dec
adc
daa
mov
sbb
dec
sub
repnz
aad
cmp
pop
jg
xor
or
cs
or
fild
loope
xor
sub
fidivr
mov
xor
cld
(bad)
test
iret
ss
ror
mov
pop
retf
pop
add
(bad)
xchg
jmp
out
xor
xchg
cld
mov
clc
add
xchg
jmp
fidiv
xchg
imul
inc
and
inc
call
aas
inc
bswap
xor
pop
cmp
lahf
jbe
pop
out
hlt
loopne
jns
push
jae
mov
inc
add
mov
xchg
ins
dec
mov
bound
sti
sub
cmps
jle
jp
or
push
sbb
push
test
sbb
pop
(bad)
sub
cmp
rcl
add
push
xor
les
jae
pop
inc
(bad)
fs
adc
mov
mov
fwait
mov
(bad)
sbb
and
cmp
cmp
fistp
popf
in
or
pop
int
das
adc
dec
pop
adc
(bad)
aam
adc
mov
ja
jo
gs
jl
adc
cli
stc
jge
gs
adc
jo
push
adc
stos
pushw
inc
and
sbb
jmp
nop
test
push
pop
ja
xor
in
lods
or
cdq
hlt
sbb
iret
xchg
retf
(bad)
inc
mov
xor
or
aam
mov
sbb
scas
das
cs
adc
mov
mov
idiv
cmp
cmp
daa
mov
xlat
push
call
inc
dec
xchg
sub
add
ins
add
dec
push
pop
and
mov
and
inc
or
ja
and
add
xor
mov
mov
ins
dec
addr16
(bad)
sahf
out
imul
cmps
mov
cwde
mov
inc
or
outs
xchg
jp
mov
rol
bound
ja
jo
mov
into
add
dec
in
pop
sub
xchg
into
jno
sbb
mov
bound
or
outs
mov
or
maskmovq
test
mov
cmp
xor
js
push
or
inc
test
loope
sbb
add
inc
mov
cmps
bound
in
and
and
ret
rcr
outs
xchg
movs
jns
jg
pop
cs
cdq
bound
repz
mov
pop
pusha
dec
in
inc
les
xchg
pop
fwait
dec
loop
call
test
adc
es
mov
lea
loope
sub
mov
lods
push
mov
cdq
push
jno
xchg
pop
sbb
sbb
add
ins
jno
cmc
add
sub
inc
and
pop
xchg
aas
das
sbb
push
in
clc
movs
xor
pop
adc
out
dec
xor
xor
inc
and
shr
lods
imul
shr
inc
xchg
int
shl
inc
in
jo
(bad)
add
sub
rcr
sbb
out
mov
sub
movs
not
pop
ror
push
sub
outs
mov
mov
sahf
mov
and
cdq
sub
aam
mov
xor
ins
adc
test
pop
ins
and
mov
mov
mov
mov
mov
daa
inc
fwait
popf
or
lahf
or
nop
pusha
js
lea
xor
push
jecxz
lods
in
and
retf
sub
scas
add
les
push
mov
je
(bad)
rcl
sahf
jg
adc
mov
adc
mov
and
int3
pop
lock
pop
repz
mov
mov
add
jl
pop
adc
popa
out
inc
sbb
mov
test
hlt
and
xchg
or
pop
movs
inc
cs
scas
sub
add
pop
xchg
push
push
mov
dec
les
imul
pop
ins
(bad)
inc
dec
neg
faddp
arpl
mov
mov
jmp
mov
lahf
popf
dec
mov
add
addr16
mov
or
sub
mov
outs
jecxz
aaa
fnstcw
in
je
inc
out
lods
pop
pushf
ret
mov
je
add
iret
mov
pop
cmp
ja
outs
in
enter
fs
outs
add
add
in
jg
loopne
xchg
inc
mov
and
adc
dec
mov
daa
(bad)
xchg
cmc
hlt
mov
mov
push
arpl
daa
inc
or
mov
fisubr
nop
cli
pop
popf
mov
sti
imul
loop
jnp
xchg
cmp
cmc
sbb
js
inc
jmp
sub
xchg
js
cmp
test
nop
cmp
or
dec
cmp
stc
in
jge
les
lods
ins
push
push
add
mov
popf
into
stc
jl
or
retf
sub
pushf
std
ds
es
or
xor
or
add
xor
mov
and
aas
push
mov
add
int
xchg
aas
js
shl
shl
push
push
aas
(bad)
(bad)
(bad)
xor
xchg
cmp
push
hlt
scas
push
je
cs
js
and
push
or
pop
jmp
pop
outs
stc
(bad)
test
sub
push
out
add
popa
mov
mov
jle
(bad)
repnz
fwait
int
out
jl
mov
xlat
aaa
mov
movs
cmp
shl
sti
xor
inc
cmp
out
mov
mov
mov
aaa
jo
leave
jle
repz
push
retf
gs
fisub
jnp
xchg
dec
adc
lahf
pushf
mov
inc
out
(bad)
sub
push
inc
mov
loope
pop
sar
mov
add
xchg
pop
mov
iret
call
out
mov
mov
mov
push
xor
out
jmp
cld
aas
xor
mov
push
inc
leave
fcmovnbe
jbe
inc
(bad)
mov
test
mov
repz
adc
sar
movs
jbe
jl
shl
stos
pop
sar
gs
adc
jmp
cmp
add
outs
jecxz
pop
dec
arpl
and
mov
loope
xchg
aas
sub
adc
sub
aas
dec
cmp
inc
ds
mov
jecxz
ds
xchg
sub
fld
cli
test
xor
add
out
cdq
mov
cmp
bound
mov
dec
das
cwde
ss
scas
lods
gs
cmc
into
jecxz
adc
dec
push
fcom
pop
inc
outs
xor
jns
cmc
cmp
sar
sub
not
(bad)
push
gs
arpl
cdq
addr16
fs
ds
dec
rcr
stc
aam
jne
adc
clc
mov
jg
mov
push
sbb
mov
nop
mov
inc
cmc
loop
sbb
sbb
in
loop
sub
pop
sti
xchg
dec
sub
popf
in
cli
sahf
mov
shl
pop
sub
(bad)
mov
out
(bad)
not
fs
push
test
dec
shr
js
pusha
pop
fnstsw
out
pop
cmp
pop
push
mov
xor
shl
fist
and
es
dec
jle
xor
sti
test
jg
jmp
out
push
add
mov
cld
int
repz
mov
mov
sahf
mov
or
les
loopne
push
div
int3
xchg
in
jp
or
jp
inc
add
sub
or
xchg
and
lahf
push
nop
sti
pusha
cmp
inc
dec
clc
cmc
iret
and
dec
push
sti
in
xchg
mov
adc
lea
outs
movs
mov
fidivr
dec
and
pushf
xchg
psubsb
gs
sbb
call
jnp
loop
push
mov
je
cmc
repz
rcl
pop
pop
push
inc
shl
xchg
add
int
xlat
xchg
in
mov
in
movs
jmp
push
ins
xchg
fmul
push
and
loope
mov
test
sbb
out
ror
xor
(bad)
(bad)
inc
xchg
loope
aas
sar
loope
je
minps
and
mov
cwde
out
xchg
icebp
push
ror
ret
sbb
cmps
pusha
add
lods
repz
mov
ret
sub
leave
sbb
movs
push
lods
stc
mov
pop
and
aam
cdq
mov
cmps
mov
pop
lahf
(bad)
call
inc
pop
cmp
and
sub
and
xor
cs
jle
daa
xchg
inc
add
aas
adc
cmps
mov
dec
adc
push
cmp
dec
add
inc
psubsw
push
mov
mul
dec
adc
mov
sub
inc
adc
ss
sar
aaa
adc
pop
add
rcr
ret
pushf
lods
pop
test
sub
(bad)
and
sub
and
iret
retf
adc
push
js
ficomp
fst
ins
ret
mov
xor
jg
xor
test
cdq
(bad)
repnz
(bad)
fnstsw
adc
retf
les
mov
jle
jo
mov
loop
fadd
cmp
sub
xor
int
inc
fisttp
pop
popf
lock
imul
and
in
adc
jmp
cmc
push
xchg
dec
sbb
jne
pop
dec
retf
enter
fistp
cmp
(bad)
jmp
test
jno
sub
jmp
out
pusha
in
pop
iret
imul
inc
aad
mov
inc
cmps
and
adc
add
adc
stc
pop
(bad)
lods
dec
pop
sub
fidiv
cmp
mul
fcom
sbb
sti
and
inc
fnstenv
push
lock
jge
gs
aaa
les
minps
cmp
mov
movs
loopne
mov
add
aas
test
jnp
mov
cmp
outs
shl
inc
mov
mov
xor
lahf
enter
lea
add
enter
or
jo
mov
call
and
aad
xor
inc
mov
sar
dec
and
push
retf
aas
and
movs
jmp
(bad)
and
or
xchg
mov
push
rol
call
cmc
popf
call
cmp
aaa
cdq
test
(bad)
std
xchg
jg
test
add
mov
push
stos
mov
or
mov
inc
daa
sar
mov
add
xchg
adc
leave
retf
and
and
inc
in
les
rcr
call
int
in
push
fild
(bad)
stc
pushf
movs
cdq
mov
lock
iret
pop
dec
jp
bound
fs
cmp
jecxz
inc
push
jae
out
or
jne
push
daa
outs
mov
aad
sub
jns
and
(bad)
in
(bad)
fimul
cmp
jmp
scas
jmp
push
cld
lock
and
repnz
out
andps
mov
shl
mov
out
pop
xchg
test
pop
mov
hlt
outs
ins
xchg
cmps
addr16
rol
sub
push
push
push
mov
sahf
sbb
add
addr16
adc
push
push
mov
push
in
sub
lock
cmp
pminsw
movs
jmp
adc
mov
(bad)
aad
mov
jno
or
rol
ror
das
xor
ja
xor
das
and
fisub
and
sti
xchg
mov
lds
sbb
shl
xor
push
aam
jp
or
sbb
fld
mov
push
xchg
push
mov
adc
sbb
push
cmp
jmp
jnp
and
aas
push
std
or
mov
icebp
pop
push
dec
sub
push
hlt
fs
retf
popa
and
or
xchg
icebp
aas
jae
dec
int3
mov
xor
inc
mov
mov
scas
arpl
push
mov
imul
add
jg
sbb
xor
jecxz
dec
(bad)
fcmovbe
jecxz
jmp
scas
into
iret
xchg
inc
pop
cwde
xchg
add
out
fisttp
cmc
clc
nop
sbb
inc
es
out
into
adc
ins
in
xor
sub
push
(bad)
jmp
xor
jge
inc
xchg
push
call
jmp
fsubrp
popf
pop
cli
retf
jecxz
aas
add
test
addps
clc
jnp
fwait
mov
in
dec
jg
in
lods
pushf
inc
xor
stos
sar
hlt
icebp
jle
mov
out
adc
sub
push
repnz
int3
in
(bad)
and
or
push
stos
jle
popa
leave
aam
in
xor
jb
sub
int3
js
push
shr
dec
sub
sbb
inc
and
fadd
jmp
hlt
shl
arpl
stos
jecxz
mov
and
fsubr
jmp
push
outs
cmps
jmp
mov
xor
adc
and
and
adc
cld
mov
pop
lea
call
cwde
adc
sub
mov
or
cmps
das
test
mov
mov
loope
(bad)
inc
les
lea
xor
lea
push
fs
rcr
xor
mov
std
cmp
test
scas
(bad)
(bad)
jbe
or
xchg
sbb
outs
pop
call
mov
movs
jb
ret
fwait
aad
pop
out
nop
pusha
nop
dec
cmp
cmp
adc
dec
or
jl
dec
mov
push
mov
sub
fs
imul
jge
sub
mov
fstp
and
cmp
jge
mov
shl
popa
pop
sub
ror
shl
lock
adc
lock
inc
outs
inc
sbb
or
add
and
and
mov
in
sub
dec
jmp
int
sub
test
stos
fisub
aas
pop
cmps
iret
xchg
sbb
gs
jmp
repnz
gs
dec
mov
sbb
push
(bad)
and
js
jne
scas
push
addr16
mov
or
call
gs
xchg
int
push
les
mov
rcl
lea
hlt
in
jp
loopne
cmps
jecxz
cmps
sub
xchg
mov
pop
enter
mov
leave
pop
nop
xor
into
std
into
pop
xchg
or
cmp
push
and
js
inc
int3
arpl
adc
arpl
mov
hlt
cmp
sbb
add
call
mov
ror
iret
xor
out
cwde
jno
jno
dec
je
pop
jo
pop
xor
(bad)
and
ins
js
rol
std
xor
ror
in
add
cmp
rol
or
or
out
stc
pop
mov
mov
mov
outs
push
call
mov
(bad)
leave
mov
sbb
dec
test
lods
push
aas
push
int
cli
cwde
jmp
(bad)
pushf
jns
(bad)
push
bound
push
ds
add
ds
test
outs
in
stos
xchg
push
adc
mov
xchg
or
pusha
fidiv
pop
sub
push
mov
(bad)
mov
mov
mov
add
hlt
not
fldenv
rol
retf
push
test
add
inc
dec
mov
arpl
mov
mov
pop
xor
ret
sub
jbe
mov
cmp
shr
aad
mov
sub
pop
ret
loop
sbb
(bad)
jns
mov
outs
mov
push
xchg
xor
mov
in
cmp
mov
jb
adc
inc
fistp
jl
sbb
sub
pop
pop
jge
jg
cmp
adc
jo
dec
rcl
dec
mov
adc
retf
leave
arpl
and
bound
scas
cmp
mov
scas
cmp
(bad)
dec
sub
popa
arpl
imul
lds
(bad)
mov
add
dec
iret
cmp
or
mov
repz
(bad)
fsubrp
sbb
sbb
fwait
aam
sbb
jecxz
dec
stos
pop
mov
or
xchg
not
js
je
shl
xchg
cli
sub
daa
rcr
jge
and
mov
xchg
adc
ds
jbe
pop
and
cmp
inc
test
adc
aad
in
lds
cld
mov
xchg
sti
mov
jbe
mov
fwait
lock
jp
int
int
jge
(bad)
idiv
sbb
repz
es
repz
pusha
mov
and
fst
in
ins
ja
and
js
retf
clc
hlt
mov
push
(bad)
int3
sar
mov
sar
in
cwde
pop
(bad)
cld
sbb
mov
and
nop
adc
dec
daa
xor
pop
pop
and
mov
mov
or
adc
xchg
das
push
and
pop
pop
stc
push
data16
add
call
mov
in
movs
int3
or
push
rcr
pop
inc
(bad)
in
call
imul
adc
ins
mov
xchg
test
aad
rol
movs
jmp
cmp
add
daa
cmps
iret
adc
sub
inc
dec
mov
jl
loop
pop
mov
push
cs
sahf
dec
xor
in
and
sub
mov
bound
int3
pop
out
clc
jo
xchg
pushf
dec
aaa
mov
push
pushf
aam
int3
cli
jle
and
ret
pop
stc
xlat
loopne
enter
pop
mov
push
fidivr
add
gs
int
out
retf
sti
xor
lods
out
add
push
pop
dec
fwait
adc
mov
or
mov
stos
nop
xchg
leave
gs
xor
xchg
push
in
inc
cld
dec
sar
pop
jl
dec
cld
dec
retf
and
xchg
xchg
retf
dec
std
fiadd
ss
lea
xchg
sub
call
jmp
push
std
inc
lods
out
xchg
inc
pushf
paddq
loop
div
icebp
sub
sub
dec
jo
pop
add
aam
or
sbb
jae
jbe
in
(bad)
out
sub
sahf
das
cmp
jne
jle
hlt
add
int3
nop
jmp
(bad)
dec
cmp
or
fcomp
lods
hlt
inc
add
adc
sub
cli
arpl
hlt
xor
jb
push
xlat
dec
les
repz
lock
je
sbb
mov
adc
jbe
repnz
rcl
nop
(bad)
test
pop
ret
call
add
adc
pop
scas
gs
in
fst
outs
mov
mov
dec
les
or
mov
or
in
lods
(bad)
cs
sub
push
pop
push
mov
aam
pushf
adc
les
mov
xchg
sbb
addr16
(bad)
loope
xchg
shl
and
pop
or
inc
fidiv
je
jne
stos
push
mov
(bad)
mov
mov
xor
xchg
in
adc
pusha
leave
jo
addr16
add
mov
mov
and
rcr
mov
ss
ficomp
mov
stc
cld
cmp
and
sbb
es
xchg
mov
ret
cmps
into
and
shl
cli
shr
jecxz
push
add
adc
loop
or
xor
or
push
pushf
jne
jae
inc
xor
mov
xchg
jnp
loop
fimul
fst
frstor
push
fs
jae
and
leave
shl
add
mov
dec
xor
mov
ins
inc
in
dec
mov
neg
in
xor
add
in
pop
sbb
or
test
repz
mov
sbb
jns
popf
adc
mov
in
xchg
cmp
add
rcr
in
sub
int3
pop
and
rol
mov
fisubr
push
adc
jl
ds
sub
xor
jge
dec
addr16
int
loop
mov
inc
outs
jecxz
adc
addr16
or
xchg
push
jmp
rcr
out
sub
mov
push
sub
adc
mov
cmc
int3
push
or
jns
cmp
and
mov
(bad)
sbb
fwait
mov
std
push
or
hlt
jne
lock
ret
push
jmp
mov
sbb
cmp
sbb
pusha
jmp
sbb
cdq
rcr
sbb
mov
sti
push
rol
repnz
adc
jno
es
out
adc
push
pcmpgtd
ss
pop
adc
mov
push
jp
push
inc
cmp
dec
pop
and
push
fwait
cmps
ds
loope
xchg
pop
inc
imul
xlat
adc
mov
jae
lahf
jno
add
cld
xor
and
jb
sub
repz
movs
push
sub
dec
hlt
push
cli
jmp
movs
loopne
dec
fs
sahf
and
pop
outs
and
mov
sbb
cmp
jnp
sub
cli
sub
push
mov
popf
inc
aaa
rol
fucomi
dec
repnz
sti
cs
daa
cmp
stos
dec
xor
jo
mov
fdivr
cmp
aas
aad
jne
sbb
stos
mov
loop
push
movs
push
jg
jmp
push
pop
call
imul
add
pop
mov
pop
mov
jne
(bad)
paddusb
inc
outs
cmps
out
mov
loope
ror
pop
or
imul
movs
dec
rcr
adc
scas
pop
adc
nop
mov
out
mov
jns
cmp
cmp
or
jg
ins
sub
out
push
sub
mov
jb
mov
movs
push
in
pop
cdq
cmp
movs
adc
ja
or
out
rol
scas
setno
out
mov
xchg
jl
pop
xchg
inc
add
lahf
pop
sbb
xchg
nop
fstp
push
loope
xchg
sub
loop
bound
movs
jmp
lock
pop
pop
pop
xor
pop
mov
xchg
ss
mov
loop
addr16
in
ins
inc
jo
hlt
xor
jge
les
leave
(bad)
not
jno
dec
dec
les
adc
add
iret
pop
jp
loopne
push
jmp
xor
or
test
dec
adc
fwait
or
retf
movs
movs
mov
dec
xor
add
mov
pop
lea
bound
(bad)
ja
test
into
int3
xchg
push
push
mov
xchg
aam
sbb
cmp
mov
push
push
hlt
hlt
sbb
xor
in
cmps
sbb
cmp
loope
jo
push
dec
hlt
or
ret
jmp
sub
pop
(bad)
jnp
and
pop
dec
stos
ret
loopne
cmp
rcl
jmp
xor
test
push
cmp
jo
enter
jo
rcr
shl
loop
mov
mov
and
pushf
jo
dec
push
icebp
icebp
cmp
add
adc
enter
pop
dec
pop
cmp
fsubr
or
(bad)
(bad)
movsx
push
fidivr
cmc
pop
arpl
leave
inc
retf
xchg
add
test
rcr
and
mov
pusha
outs
and
aas
sub
(bad)
cli
jno
shl
dec
push
fdiv
out
add
push
stos
test
mov
adc
push
push
sbb
test
fadd
es
pop
jl
adc
pop
fist
js
dec
xchg
call
push
cdq
ret
pop
and
sub
mov
fadd
inc
fisub
retf
mov
mov
xor
les
clc
jmp
call
inc
add
call
mov
add
test
push
cmp
cld
adc
ucomiss
dec
mov
or
test
mov
dec
lods
repnz
and
das
cli
sar
aas
jmp
fiadd
xchg
jmp
cmc
sbb
mov
xchg
pop
sub
hlt
and
(bad)
repz
inc
jo
jb
push
sub
jecxz
int
pop
sub
mov
mov
xor
sub
sub
pushf
cmp
inc
out
lods
sub
xchg
xor
arpl
mov
stos
cdq
retf
xchg
(bad)
xchg
sub
jg
jle
(bad)
lods
adc
dec
jge
push
std
dec
lods
adc
add
std
xchg
mov
aas
sbb
les
fild
or
jmp
dec
push
sub
popf
repz
cmc
loope
and
cmps
mov
(bad)
fsubr
test
jno
jecxz
adc
pusha
adc
fld
call
adc
out
cmps
aaa
jae
cmps
adc
fcom
mov
xchg
aaa
aam
push
out
mov
ins
loop
sahf
pop
xor
sbb
rcr
jmp
hlt
ins
scas
call
in
mov
pop
sbb
cmps
(bad)
sub
xor
pop
xor
les
repz
xchg
test
ss
jb
aad
mov
shr
dec
mov
push
pop
pop
push
add
loope
jle
ret
popf
dec
cld
jo
sub
gs
adc
adc
inc
loope
xchg
jg
and
aad
and
pop
add
cwde
mov
mov
add
mov
test
fsub
stos
inc
out
jg
sbb
cmp
push
adc
shl
sub
add
push
sbb
jl
pop
jg
repnz
loop
leave
dec
inc
jmp
(bad)
(bad)
sbb
ds
mov
add
jae
inc
and
frstor
sub
or
loope
adc
or
cli
pop
jge
dec
cmp
outs
call
aam
jno
cmc
(bad)
in
ret
lahf
cli
adc
rcl
mov
pop
loop
repz
jne
fcom
fisubr
cdq
test
mov
adc
das
aaa
jo
xchg
fbstp
add
push
dec
push
jne
inc
inc
rol
outs
(bad)
cmp
repnz
leave
std
pop
mov
ss
mov
loop
test
je
ret
and
sbb
xchg
and
out
jp
cmp
or
xchg
sub
mov
das
cmp
fadd
out
fild
fs
sub
in
ret
scas
test
mov
and
sub
(bad)
cmp
cmp
ja
cwde
pop
jae
mov
in
(bad)
loope
inc
mov
fwait
es
cld
inc
mov
or
into
es
retf
pop
pop
add
sub
loopne
cs
fisub
cli
cli
pop
ror
outs
repnz
push
dec
mov
pushf
out
retf
dec
dec
pushf
mov
pop
out
call
sbb
cmp
jg
mov
pop
sub
add
or
ds
mov
(bad)
in
inc
add
mov
mov
ds
mov
and
ss
mov
fmul
icebp
jno
sub
cld
je
pop
dec
gs
mov
pop
and
pop
jle
fnstsw
or
je
push
stos
bnd
stos
cmps
ss
enter
jmp
mov
pop
sbb
test
lahf
aam
(bad)
repz
add
xchg
repnz
out
mov
add
dec
inc
mul
ficom
mov
int
scas
push
cmps
imul
or
std
mov
pop
cwde
jmp
xchg
jo
sar
mov
or
mov
leave
in
movs
js
es
fsqrt
ret
xor
mov
(bad)
shl
in
out
call
cli
into
add
push
pusha
aas
sbb
mov
ins
sbb
call
test
repz
inc
lock
aas
cld
loopne
or
fldlg2
cmc
mov
xchg
cmps
aaa
rcl
pop
test
arpl
push
or
test
pop
mov
(bad)
aad
and
std
rcl
xor
push
jns
add
adc
ja
aas
inc
int
push
xchg
jmp
ins
(bad)
mov
outs
pop
outs
xor
jmp
jp
(bad)
dec
mov
adc
out
or
(bad)
repz
clc
push
mov
pop
xchg
cdq
sti
lods
xor
ins
out
lahf
lea
lahf
jmp
push
mov
popa
fwait
sub
and
enter
cwde
(bad)
inc
inc
pop
pop
mov
mov
call
cli
cmps
mul
sbb
call
(bad)
int
jp
jmp
shr
sub
inc
and
mov
test
sbb
loope
gs
adc
sub
dec
js
(bad)
pop
xlat
aad
pop
outs
aaa
pop
xchg
cmp
dec
xor
add
sub
mov
ins
int
sub
sub
jmp
stc
dec
pop
mov
jnp
neg
aaa
imul
mov
(bad)
ror
mov
xor
addr16
mov
push
dec
mov
add
xchg
adc
call
sub
jnp
xor
fdivr
adc
aaa
push
into
bnd
push
and
wrmsr
and
mov
aaa
test
scas
add
mov
inc
and
les
jge
retf
js
scas
sahf
movs
push
movs
and
(bad)
mov
push
sub
or
mov
ss
or
icebp
test
jge
push
call
sbb
and
push
in
(bad)
xchg
out
mov
push
std
add
push
nop
into
sahf
cwde
xlat
out
hlt
aam
inc
sub
aaa
bound
jle
stos
fnstenv
inc
adc
jns
mov
lds
js
mov
test
xchg
cld
push
call
ins
js
push
lds
aas
jo
sar
fdivr
dec
gs
jmp
mov
pop
mov
(bad)
cmp
out
ror
xor
mov
xor
scas
sbb
in
mov
sbb
sub
add
stos
mov
test
test
pop
iret
dec
add
mov
cmps
leave
adc
xor
cs
in
xor
lods
mov
test
mov
mov
mov
sub
mov
icebp
jae
xchg
pop
sahf
jmp
adc
stos
pop
push
out
inc
mov
outs
xchg
mov
or
(bad)
cmp
cli
test
(bad)
xchg
lods
loope
repnz
or
mov
push
xchg
or
dec
cli
test
xor
fwait
mov
dec
test
inc
jno
(bad)
pop
dec
pop
out
aas
sbb
dec
xchg
pop
ror
scas
and
neg
jmp
ds
sub
push
sbb
mov
cmp
add
and
arpl
test
dec
jne
inc
outs
loopne
std
sub
jo
lahf
ins
loop
mov
jnp
cdq
fstp
sar
fldcw
test
es
rcl
dec
jmp
inc
sub
add
xchg
mov
xchg
sbb
mov
loope
mov
or
iret
mov
ret
scas
in
sub
iret
jne
xor
cmps
push
mov
retf
addr16
adc
clc
sahf
out
and
mov
and
leave
(bad)
sbb
lahf
push
popf
in
add
in
inc
sub
adc
jecxz
out
mov
fisttp
dec
fmul
pop
std
or
jae
js
mov
ss
pop
and
ja
mov
jmp
cli
retf
aas
(bad)
pop
(bad)
pusha
(bad)
pop
stc
mov
adc
mov
or
jb
popa
mov
jg
loop
out
outs
outs
ret
daa
or
inc
mov
repnz
mov
inc
cmc
loopne
adc
mov
mov
sahf
popf
cdq
sbb
jl
adc
lock
and
enter
jmp
ret
lahf
xchg
fwait
aaa
pop
(bad)
sar
test
dec
cmc
pop
mov
xor
and
test
cmp
xor
push
pop
or
xchg
cmp
outs
mul
ins
mov
mov
jp
cs
xor
mov
fisubr
popf
call
add
lds
inc
movs
div
xchg
pop
mov
test
mov
sub
(bad)
lahf
jo
mov
xchg
sub
add
sub
fmul
daa
sub
ss
loope
cmp
retf
repz
lods
leave
jle
into
pop
push
or
push
push
push
shr
je
jl
inc
inc
fmulp
fisub
xchg
test
mov
xchg
inc
mov
clc
std
and
out
pop
xchg
sar
imul
or
add
sub
adc
loope
nop
mov
adc
sub
inc
in
fistp
ins
test
imul
inc
test
aam
aaa
leave
dec
inc
jne
or
inc
mov
pop
cmp
or
xor
xchg
stos
cmp
stos
and
cmp
pop
dec
mov
pop
mov
push
fxch
nop
(bad)
dec
popf
or
pop
in
ret
std
jp
xor
dec
sub
lods
popa
fst
loopne
(bad)
outs
dec
pop
pop
lds
call
sti
arpl
jge
mov
jmp
test
cdq
ins
mov
fwait
push
jo
pop
add
movs
movs
ss
xchg
push
in
mov
push
stc
js
push
(bad)
cwde
data16
mov
push
(bad)
lods
into
mov
sar
cmp
push
inc
lock
mov
jmp
add
test
push
mov
int
sub
adc
and
popa
je
lea
push
pop
(bad)
and
mov
cmp
cmps
sbb
inc
hlt
scas
aad
and
ins
sbb
pusha
mov
out
mov
popa
fistp
push
xor
jo
imul
or
pop
sbb
cmps
cmp
in
hlt
in
pop
sub
(bad)
in
dec
call
mov
pop
cmc
mov
out
std
sub
inc
pop
in
ja
inc
xchg
mov
fadd
and
fst
shr
popf
iret
push
sbb
push
xor
loopne
xchg
scas
inc
aad
xor
loopne
mov
pop
sbb
lods
mov
xor
inc
pop
shl
cmp
dec
stc
mov
daa
movs
popa
in
sub
rcr
ins
fldcw
dec
ins
add
xchg
xlat
push
inc
rcr
dec
stos
fisubr
sbb
or
mov
and
or
and
(bad)
ins
dec
pop
push
addr16
jb
mov
adc
shl
fld
fstp
jo
popf
xchg
mov
loop
add
add
rol
(bad)
jl
stos
out
sbb
test
mov
cmp
(bad)
push
cvtdq2ps
add
mov
inc
xor
mov
in
xlat
xlat
pop
cmps
push
mov
mov
sub
or
dec
or
popa
cli
add
dec
retf
(bad)
mov
pop
std
(bad)
clc
mov
sar
add
fwait
mov
mov
cwde
push
inc
ret
dec
enter
inc
js
push
adc
inc
(bad)
int3
pop
pop
mov
inc
in
jo
rcr
xchg
dec
sti
push
cwde
push
out
and
xor
mov
mov
shrd
popf
je
mov
movs
into
add
mov
push
lods
sub
cdq
xor
shl
jp
inc
mov
(bad)
lock
pop
hlt
push
xchg
mov
push
jne
adc
hlt
push
xchg
push
ja
jbe
inc
(bad)
cmc
sar
push
fistp
loopne
or
pop
retf
(bad)
jp
imul
out
adc
push
jmp
push
or
pop
gs
and
pop
leave
and
push
add
jle
scas
push
popa
add
stos
hlt
scas
(bad)
xchg
les
dec
mov
xor
movs
inc
inc
jmp
scas
add
imul
jb
icebp
fnstsw
xor
(bad)
fisubr
sub
out
dec
ror
sbb
xor
jecxz
inc
ja
mov
int
dec
jns
mov
iret
ret
shl
and
push
push
in
push
shl
shl
mov
call
dec
xchg
aad
loope
push
(bad)
xchg
jl
test
jp
(bad)
cmp
sbb
and
ins
clc
retf
sub
and
aaa
sbb
push
pand
mov
add
or
es
sub
cmp
into
xchg
jmp
jmp
outs
add
es
cmp
add
dec
(bad)
pop
out
jmp
xchg
push
ret
xor
int3
pop
gs
dec
or
pop
loopne
loopne
jo
dec
mov
cli
pop
or
mov
sbb
sbb
and
sub
fcomp
pop
jmp
sub
iret
pop
mov
push
std
mov
loopne
in
pop
repnz
xchg
lods
mov
test
call
call
in
in
sbb
xchg
dec
add
cli
lods
sbb
dec
addr16
ror
in
outs
in
(bad)
mov
or
adc
cli
and
(bad)
rol
lods
inc
js
js
aas
push
idiv
add
sub
mov
gs
push
cld
adc
sbb
mov
nop
aad
mov
mov
outs
enter
pop
cmp
jnp
aas
loop
mov
int3
jmp
mov
mov
(bad)
push
int
int
jmp
js
pop
jp
jecxz
lods
cmp
push
push
or
mov
cwde
push
outs
add
adc
mov
xchg
add
mov
data16
imul
test
rol
push
sti
out
sbb
xchg
pop
add
ins
push
ins
in
not
sbb
imul
adc
hlt
or
or
outs
popf
fcmovbe
call
fwait
scas
stos
cmp
imul
jo
fnstenv
sub
or
xchg
xchg
cli
jns
cmp
dec
int3
mov
jp
jg
xor
mov
test
mov
jnp
dec
mov
imul
ins
int
pusha
dec
xchg
outs
mov
push
imul
dec
(bad)
cli
pop
cs
mov
test
mov
retf
sbb
dec
in
xlat
fs
retf
outs
mov
sub
ins
push
dec
mov
icebp
xlat
(bad)
movs
cld
dec
(bad)
adc
jmp
add
xor
or
es
loope
dec
nop
les
(bad)
leave
dec
lds
cmp
lock
aad
inc
jmp
dec
inc
popa
dec
pop
jae
jge
test
sahf
out
and
push
push
inc
xlat
repz
sbb
into
or
add
jb
div
sbb
jno
jle
xchg
pop
cmp
mov
(bad)
cmc
cmp
sub
inc
pop
ins
dec
(bad)
mov
and
cmc
inc
lods
lock
push
cmc
adc
sbb
inc
in
repnz
daa
out
or
or
and
(bad)
icebp
or
stc
sub
(bad)
out
loopne
daa
sbb
fld
lea
ss
test
ss
pause
les
pop
cmp
fwait
repz
sahf
js
fidivr
mov
mov
dec
jmp
or
sbb
and
cmp
cld
and
xchg
movs
dec
sub
xchg
mov
sbb
xor
pop
ds
xor
(bad)
icebp
and
and
in
inc
and
cmc
jl
clc
ins
ret
or
daa
or
out
inc
stos
jno
adc
rol
in
stc
fnstenv
movs
imul
and
mov
test
repnz
inc
or
pop
jmp
ds
adc
dec
cmp
mov
cli
dec
xchg
outs
xchg
cmp
dec
pusha
loopne
imul
aam
mov
jle
xchg
in
mov
push
vmread
gs
mov
push
ds
leave
retf
adc
xor
pusha
popa
out
ret
loopne
daa
mov
data16
mov
ret
inc
jno
popf
adc
push
stos
ds
sbb
dec
daa
or
es
sub
pusha
test
loope
xor
ja
aas
push
loope
pop
sub
out
div
or
jp
lods
xor
dec
call
mov
cli
dec
jbe
sar
sub
into
out
sbb
fwait
xchg
pop
dec
icebp
mov
fs
(bad)
pop
push
add
sbb
ins
shr
mov
adc
hlt
mov
pop
sub
icebp
lods
mov
arpl
and
xchg
(bad)
and
ret
call
or
test
sbb
mov
push
jne
movs
repz
dec
pop
out
dec
adc
push
mov
xor
neg
push
les
fistp
mov
inc
jno
dec
cmovns
adc
cmp
jne
stos
pop
loopne
fwait
js
mov
movs
xchg
or
push
repz
fiadd
jnp
xor
sar
pop
test
jmp
popf
or
or
dec
loope
jmp
mov
ja
pop
retf
push
and
push
cli
and
clc
int
outs
sub
(bad)
sbb
js
cmp
push
ror
push
repnz
adc
(bad)
repz
les
(bad)
stos
xchg
mov
pushf
mov
sub
mov
ins
push
xchg
mov
pop
and
cmp
test
ret
add
mov
mov
add
rcl
sbb
mov
cdq
(bad)
mov
call
cs
addr16
inc
or
mov
ins
stos
cmp
ins
loopne
or
(bad)
fwait
mov
ins
je
repnz
pop
call
retf
call
div
fs
or
push
xor
rcr
inc
stos
sub
fsubr
data16
fld
adc
or
call
popf
lea
jnp
inc
add
mov
addr16
mov
arpl
bound
push
xor
sbb
jns
out
shr
mov
mov
(bad)
prefetch
rol
xchg
or
xchg
fdiv
scas
repz
jb
pop
not
(bad)
aad
hlt
sbb
ds
aas
adc
cli
inc
mov
pop
fadd
or
mov
(bad)
in
or
(bad)
cmps
movs
call
scas
pop
push
out
xchg
push
test
frstor
xchg
(bad)
ret
cld
mov
stc
mov
pop
lock
addr16
jecxz
cs
jne
cmp
stos
push
xor
stc
sbb
ss
mov
in
cmp
or
inc
jmp
dec
in
xchg
ret
or
les
jmp
xor
mov
in
sar
add
inc
push
sub
lods
cmp
mov
dec
pop
ret
loope
mov
repnz
out
pop
sub
or
mov
bswap
out
das
push
mov
jo
push
sbb
in
sahf
mov
sahf
test
test
daa
jg
sahf
ret
sub
cmps
out
jle
or
adc
mov
sbb
pushf
sahf
repz
scas
and
es
pop
repz
sub
inc
movs
or
inc
and
(bad)
data16
dec
out
fild
test
fistp
pushf
(bad)
inc
iret
ret
cmp
lods
sbb
ss
mov
inc
std
adc
push
sub
adc
pop
imul
aad
xchg
xchg
scas
stc
mov
add
sbb
dec
jns
push
jno
mov
call
lea
sub
sar
mov
pop
cmp
adc
or
xchg
aam
xor
loope
jb
cmp
jbe
jo
test
sbb
lock
pop
aaa
(bad)
test
out
dec
lods
mov
xchg
jno
dec
fs
fild
loopne
scas
mov
and
fst
sti
push
or
es
jo
jecxz
sub
hlt
outs
cdq
jl
cmp
push
cmp
mov
bound
jmp
(bad)
std
cmps
cmp
daa
scas
sub
aaa
inc
addr16
adc
pusha
es
arpl
cli
outs
jge
test
repz
inc
xor
xchg
and
rcl
inc
xor
retf
cmp
sbb
test
movs
fs
jl
fisubr
pop
xchg
xor
xchg
dec
js
shr
and
xchg
cld
xchg
rcr
or
(bad)
xchg
jmp
mov
add
sbb
xor
and
adc
addr16
pop
je
sbb
popf
push
in
test
jo
popf
adc
or
mov
cmp
cwde
pop
repz
sbb
cmp
cmps
cmc
adc
popa
push
jnp
in
dec
push
int
push
arpl
jl
mov
sar
add
jg
dec
sbb
lahf
arpl
ja
xor
gs
mov
(bad)
dec
ins
and
pop
pop
repz
pop
call
dec
lock
xor
rcl
out
xor
add
add
adc
pop
jle
cmps
push
std
sbb
in
mov
push
(bad)
(bad)
mov
sbb
cmp
imul
sahf
push
pop
loope
cmp
sahf
mov
jge
add
jge
pop
dec
(bad)
pop
aas
aam
adc
jb
mov
rcl
sub
mov
jmp
mov
dec
cmp
jo
mov
pop
push
mov
mov
mov
inc
pushf
stc
inc
pop
out
mov
jo
popa
or
sbb
scas
add
jno
lea
(bad)
inc
mov
(bad)
or
lods
nop
xchg
in
repnz
cli
sbb
jmp
test
iret
xchg
xchg
pushf
cdq
mov
call
repnz
call
(bad)
retf
shl
scas
jnp
sub
lds
sub
pop
stos
(bad)
fcmovu
fwait
pop
scas
sbb
sbb
ret
(bad)
sbb
enter
sbb
and
pop
stos
jmp
enter
lea
and
and
dec
retf
dec
out
xchg
das
dec
retf
mov
ja
aaa
rcr
cli
add
mov
mov
(bad)
push
cli
jb
fs
or
mov
pop
push
in
mov
jge
in
nop
fsubr
and
mov
(bad)
loop
cmp
pusha
fiadd
cmc
movs
shl
sbb
xchg
jae
sub
inc
movs
sub
cmp
scas
pusha
pop
add
cmp
and
add
and
retf
shl
inc
jl
sub
cmc
or
xor
add
lock
inc
push
rcl
sub
xchg
inc
cmp
mov
pop
fwait
xor
ins
jo
imul
dec
add
(bad)
push
and
mov
in
cmp
loope
retf
(bad)
inc
in
pop
xchg
mov
loopne
push
test
hlt
ins
xchg
pop
or
(bad)
add
lahf
pop
jecxz
stos
rol
nop
pop
xchg
leave
arpl
adc
loop
push
or
repz
or
jae
push
clc
xchg
retf
xor
out
inc
popa
ror
fwait
inc
xor
push
fisttp
iret
inc
cmp
dec
and
mov
inc
push
add
jno
pop
ficom
adc
cmc
or
cmps
push
sbb
pop
clc
mov
and
jae
outs
in
repz
lods
out
adc
addr16
push
dec
push
xor
push
jnp
leave
jl
mov
add
push
pop
adc
pop
sbb
jg
jg
or
push
lods
aam
aas
arpl
daa
xchg
inc
jmp
mov
dec
lahf
cmps
pop
jno
jp
mov
adc
sub
mov
sbb
ret
(bad)
pop
jmp
(bad)
aas
mov
cwde
iret
and
xchg
sub
ja
fcomp
adc
mov
ret
xlat
jge
xchg
adc
pop
mov
aas
xlat
sub
cmp
popa
cmps
push
nop
inc
cld
movs
out
iret
jae
xor
test
cmp
sbb
pop
clc
outs
mov
retf
cmps
add
mov
clc
movs
inc
fistp
jl
inc
ds
out
jge
mov
hlt
jge
test
add
inc
dec
push
loope
repnz
xchg
push
pop
hlt
mov
sbb
add
aam
adc
and
push
ficom
and
(bad)
mov
repz
ficomp
(bad)
mov
inc
adc
mov
push
fild
inc
xchg
mov
cdq
cmp
inc
add
sti
inc
push
push
(bad)
xor
push
add
xor
dec
jmp
xchg
or
aam
in
inc
sbb
xor
popa
fist
inc
shr
loope
and
push
pop
ffreep
aad
call
jnp
mov
sub
sbb
bound
inc
dec
sar
cmp
mov
(bad)
(bad)
retf
dec
mov
dec
outs
(bad)
enter
cmova
inc
mov
inc
popf
xor
hlt
cmps
out
addr16
adc
or
cmp
push
jo
(bad)
or
retf
popf
xor
push
add
vpmaxub
scas
push
xor
xchg
mov
dec
inc
jge
arpl
cmp
inc
xor
in
xchg
lahf
fsubr
test
stos
lea
cwde
movs
mov
jp
xor
rol
js
daa
ror
ror
adc
pop
xor
fld
push
test
mov
aaa
pushf
inc
push
ja
in
xlat
mov
jne
jb
push
sbb
nop
sbb
cmp
adc
cli
inc
pusha
dec
(bad)
cld
jbe
sbb
rcr
aam
cmp
sbb
(bad)
jecxz
push
xchg
jb
push
mov
sahf
add
(bad)
and
in
mov
data16
sub
movs
(bad)
test
out
test
(bad)
jmp
loop
pop
bound
cld
ret
shl
sbb
inc
add
stos
cmp
sar
mov
into
mov
mov
retf
and
xchg
stc
xchg
ins
inc
sbb
cmc
(bad)
cmc
xchg
push
xchg
push
sub
pop
dec
mov
add
sahf
out
bound
jne
int3
mov
pop
das
cs
push
lea
dec
mov
fldcw
mov
add
shl
cmc
cmp
fs
adc
out
mov
mov
and
mov
pop
jge
dec
sbb
sahf
inc
push
jg
and
ret
sub
adc
jne
imul
mov
lods
repnz
push
cmc
sbb
hlt
cdq
hlt
push
push
xchg
fwait
test
pop
mov
(bad)
imul
ds
xchg
loop
pusha
gs
jne
sbb
ds
fnstcw
dec
xchg
cvtps2pd
cmp
pushf
fnstsw
push
stos
inc
fist
icebp
xor
out
scas
fidiv
and
mov
pop
sbb
mov
cmp
pop
pop
loope
mov
dec
pop
sub
adc
(bad)
sub
movs
cs
pop
mov
push
push
push
inc
cwde
daa
cmp
pop
cld
sbb
inc
cmp
lahf
jnp
push
push
add
inc
mov
fdivr
shr
adc
adc
rol
jnp
push
loopne
test
jne
mov
dec
mov
mov
xor
outs
pop
rcr
jmp
cmp
mov
push
into
and
xlat
and
mov
fs
ins
shl
enter
fwait
cwde
fcmovne
mov
cdq
int3
xor
js
std
in
ror
test
lea
(bad)
and
scas
xchg
mov
ror
lahf
(bad)
dec
xor
sbb
(bad)
das
arpl
scas
test
jb
adc
add
(bad)
rcr
dec
sbb
imul
out
das
ss
call
xor
sbb
push
aam
lahf
lea
cmp
jecxz
or
dec
push
or
xchg
adc
jne
and
retf
call
js
stc
pushf
into
cdq
inc
push
and
push
into
popf
shl
adc
sub
cs
cmps
dec
aam
mov
hlt
xlat
jo
movs
sub
pop
mov
fidiv
pop
dec
mov
and
pop
mov
arpl
jae
pop
xor
jmp
mov
je
push
lahf
retf
loopne
nop
mov
ja
xchg
sbb
xor
pop
cmp
lods
xchg
aaa
pop
repz
(bad)
sar
fsubp
mov
(bad)
or
mov
pushf
cmp
inc
sub
sbb
xchg
repz
jmp
(bad)
xchg
inc
xchg
inc
repz
xchg
mov
in
xchg
shl
call
test
xor
or
inc
ret
les
push
cmc
inc
dec
aas
dec
aam
xchg
mov
call
imul
stc
data16
fdivr
cmps
inc
add
leave
daa
push
dec
adc
dec
lock
aam
in
stos
dec
sub
add
jo
push
push
mov
lods
idiv
lods
add
pop
repz
shl
pop
ja
fdiv
inc
jmp
pop
shl
add
popa
js
or
mov
push
mov
dec
sub
xchg
xor
mov
std
gs
mov
addr16
addr16
(bad)
mov
push
push
push
shl
cmp
gs
inc
sbb
mov
outs
inc
sti
push
loop
inc
sbb
iret
or
adc
sbb
add
pop
fnstenv
into
jne
js
retf
sbb
fbld
ss
les
dec
iret
int
xchg
cmps
and
out
and
lods
iret
adc
and
add
push
shl
cmp
sub
jle
retf
cmp
push
sub
pop
push
and
mov
(bad)
in
sub
movs
jae
fstp
add
fwait
dec
sahf
fisttp
(bad)
int
mov
mov
xor
stos
call
cmp
(bad)
stc
lds
mov
cmp
loope
jmp
cmp
adc
js
xor
push
sti
xor
mov
xchg
jne
mov
in
push
inc
pop
mov
dec
out
push
das
xor
jne
fwait
mov
xor
push
add
inc
or
popf
jbe
jb
inc
mov
bound
aas
fmul
add
ret
mov
daa
pop
push
or
pop
jmp
fisubr
jbe
mov
scas
add
imul
rcl
add
fcomi
and
test
xor
adc
inc
daa
lahf
adc
arpl
fwait
sbb
pushf
(bad)
jle
or
and
xor
sub
call
call
pop
mov
fisttp
fild
cmps
dec
in
mov
mov
aas
sub
xchg
(bad)
push
adc
xchg
loop
leave
mov
imul
lahf
add
jo
jg
in
(bad)
cmp
jbe
add
jne
imul
(bad)
fadd
mov
jmp
fdivr
in
push
pop
xchg
stos
sub
mov
dec
retf
jb
or
fucom
sti
cmp
mov
mov
push
sub
jno
or
inc
(bad)
jg
loopne
out
ret
repz
jg
dec
ja
mov
mov
loopne
mov
jno
int
not
xchg
add
xor
xor
mov
inc
dec
std
dec
jmp
jns
dec
push
ins
ret
push
iret
mov
and
sub
outs
xchg
cmps
(bad)
sub
sti
fisttp
mov
ror
push
(bad)
ins
sbb
pop
mov
mov
inc
mov
push
sub
(bad)
mov
push
mov
ret
or
sti
pop
xor
push
pop
sub
mov
retf
cmc
jmp
xor
test
push
xor
push
or
jge
sbb
pop
add
jbe
pop
xchg
mov
ret
add
dec
in
jbe
shl
std
ret
pop
scas
inc
in
push
push
or
sbb
fwait
pop
push
push
cmps
mov
in
lods
mov
xor
or
inc
rcl
std
pop
xor
in
xchg
mov
fcom
adc
pop
adc
cmps
scas
pop
imul
call
mov
mov
outs
pop
cmp
and
retf
mov
arpl
inc
pop
test
ds
je
push
(bad)
retf
in
jecxz
push
ja
sub
int
outs
dec
and
push
iret
cld
mov
mov
and
adc
or
data16
xor
ins
sub
dec
in
(bad)
ins
enter
inc
lods
xor
xor
sub
pusha
jae
mov
out
mov
sbb
clc
xor
or
loopne
push
pop
rcl
loop
and
cmp
push
mov
and
and
inc
xchg
fld
xchg
push
pop
retf
mov
or
aas
cs
cli
je
inc
mov
jo
jo
xchg
out
sub
inc
out
aam
mov
sbb
jbe
ss
cmp
mov
lahf
ja
cld
cmc
xor
jnp
xchg
inc
dec
lods
scas
and
lods
in
out
daa
ret
mov
cld
fs
add
test
mov
loope
popa
and
stos
sub
movs
add
sub
pop
mov
daa
inc
add
mov
pop
jecxz
mov
jns
retf
xchg
jmp
fisub
ror
mov
adc
call
or
jno
mov
test
arpl
cmc
mov
data16
xchg
xchg
mov
push
sbb
adc
xchg
jae
sar
pop
sbb
sub
in
sbb
sbb
jns
outs
(bad)
jl
(bad)
pop
ja
sbb
or
adc
enter
push
es
je
pushf
fmul
pushf
pop
mov
ja
xor
out
js
enter
stos
iret
mov
call
mov
jb
jle
xchg
lock
out
shr
fwait
sbb
add
adc
sub
scas
sbb
cwde
das
popa
pushf
cli
test
(bad)
mul
mov
sbb
push
in
ja
lds
in
xchg
or
lock
xor
sub
xchg
cmps
mov
out
int3
cmp
retf
or
imul
iret
dec
xchg
ret
jmp
jmp
iret
enter
(bad)
mov
ins
(bad)
adc
pop
out
out
jmp
pop
inc
mov
ds
popa
xchg
fwait
icebp
sub
add
scas
data16
mov
lods
and
daa
xchg
scas
inc
ret
dec
cmps
mov
out
dec
popa
dec
mov
push
and
xor
push
fld
cmps
xchg
std
push
ins
scas
push
cld
addr16
cmps
jb
add
dec
push
sbb
mov
out
pop
ds
jmp
in
pop
pop
lock
xchg
ss
and
mov
mov
or
inc
xlat
pop
rcl
mov
or
jbe
bound
adc
cwde
cmps
sahf
fs
xor
mov
fxch
mov
mov
sbb
in
vcmppd
out
add
out
popa
ret
inc
sbb
outs
pop
repnz
rol
sbb
retf
jo
or
sbb
dec
xchg
push
leave
adc
aaa
pop
mov
sub
retf
xor
daa
mov
pushf
outs
(bad)
int
imul
shl
push
sbb
cwde
ror
(bad)
jle
push
rcl
dec
mov
xor
inc
sub
mov
cmc
call
test
stos
fist
adc
inc
dec
dec
fiadd
sbb
loopne
mov
ss
or
mov
sbb
inc
fnstsw
adc
push
cmps
cmp
mov
xor
xchg
pop
(bad)
(bad)
ret
cmp
adc
jmp
cmp
fdiv
add
add
dec
xchg
inc
out
sbb
sub
jnp
fwait
imul
inc
pop
cwde
mov
loopne
adc
xor
jne
mul
mov
pop
cmp
mov
fnsave
dec
mov
jl
(bad)
mov
aas
cmps
je
pushf
std
pop
sar
push
retf
test
inc
add
push
or
add
retf
mov
add
jno
inc
mov
into
es
(bad)
enter
retf
call
or
enter
retf
movzx
ins
or
leave
dec
(bad)
cld
sbb
mov
jb
mul
sar
xchg
cwde
push
sbb
jmp
sbb
imul
cli
adc
sbb
ror
sbb
sbb
les
test
add
(bad)
int
imul
mov
leave
push
aas
xchg
pop
fnstcw
xlat
retf
dec
mov
and
inc
adc
push
ja
nop
pop
push
and
mov
shl
xchg
es
adc
jl
movs
mov
sub
sub
aad
cmps
shr
xor
fsub
iret
popa
cs
retf
jp
and
leave
push
test
xchg
mov
(bad)
fdiv
movs
xor
jo
mov
push
inc
xor
test
je
aaa
xchg
jg
lea
test
or
nop
or
dec
out
sub
xchg
ins
sub
call
es
mov
or
stos
jge
mov
pop
xchg
push
(bad)
cmp
add
mov
call
inc
inc
dec
lds
pushf
sbb
xchg
ret
loop
dec
mov
rcr
xchg
add
iret
and
inc
not
dec
lea
(bad)
dec
iret
dec
or
cld
pop
dec
outs
push
ret
test
dec
xor
pop
dec
xchg
push
add
stos
into
dec
xlat
add
dec
adc
fiadd
pop
test
scas
push
fs
add
cmp
fbstp
push
test
mov
mov
jne
dec
pusha
and
xchg
or
(bad)
repz
fnstcw
test
pop
adc
mov
jecxz
call
push
(bad)
mov
push
mov
or
ret
enter
scas
outs
xchg
jno
cld
scas
push
jno
shl
(bad)
push
cdq
sbb
loopne
fmul
stos
push
mov
jbe
pop
jnp
in
pop
pusha
and
inc
js
sub
into
sub
retf
rol
es
lea
je
add
sub
dec
ss
dec
xchg
aad
inc
clc
sub
push
fld
popa
loop
cs
jl
idiv
pop
fisub
std
fwait
xchg
clc
add
hlt
and
lahf
mov
in
push
add
ret
mov
(bad)
loope
add
(bad)
mov
in
in
out
or
inc
jmp
(bad)
das
cmp
aas
cmp
inc
mov
jno
pusha
mov
xor
in
push
cwde
mov
xor
pop
mov
(bad)
call
rol
movs
pushf
repnz
add
popf
add
dec
xchg
dec
lahf
adc
sub
mov
inc
mul
fbld
dec
mov
movs
push
xchg
add
pusha
push
retf
mov
and
inc
ror
xlat
fmulp
inc
fmul
sbb
imul
mov
sub
add
cmc
pop
iret
cld
shr
inc
add
mov
pop
pop
or
cmp
mov
xchg
add
xchg
popaw
push
mov
mov
aas
sub
jae
in
mov
leave
cmp
mov
jmp
mov
sub
lock
mov
mov
ins
mov
jle
loop
pop
sbb
mov
test
out
mov
mov
das
cmp
je
mov
retf
inc
and
and
pop
xchg
(bad)
pop
in
xchg
pop
sar
cmps
into
out
add
pop
jg
ror
jp
daa
sar
jle
in
shr
or
hlt
adc
jg
lahf
or
dec
sbb
adc
pop
sub
cs
xor
aad
int3
shl
xchg
je
or
xchg
aaa
mov
mov
xor
les
loope
arpl
cmp
jg
add
adc
cmp
lahf
nop
es
out
ret
fidivr
(bad)
mov
jmp
mov
stc
cmp
xor
mov
cwde
mov
arpl
push
xchg
dec
inc
call
cs
icebp
inc
and
mov
mov
adc
aas
ja
sub
push
cmc
idiv
dec
mov
inc
cmc
idiv
push
ror
pop
mov
scas
pop
adc
jns
jno
and
push
cmps
out
pop
xor
mov
pop
std
test
pop
(bad)
fistp
push
xchg
stos
push
pop
jns
cld
pop
pop
push
cmps
pop
cmp
sbb
pop
bound
ds
and
jmp
pop
out
pop
pop
ret
pop
or
mov
pop
or
popa
dec
pop
dec
mov
pop
sub
rcl
mov
mov
add
gs
adc
adc
push
push
fst
adc
lahf
imul
sbb
rcr
mov
lds
sbb
mov
pop
sbb
mov
lds
sbb
cmp
jno
mov
lods
sbb
repz
sahf
mov
sub
mov
in
and
retf
cmp
and
jbe
pop
shl
ds
in
mov
add
bound
inc
cmp
and
mov
mov
ret
mov
cs
inc
add
(bad)
pop
and
fwait
pop
sbb
adc
mov
or
mov
jl
loop
ja
cmp
mov
test
sbb
out
pop
ins
cmp
inc
xor
xchg
aas
(bad)
shl
xchg
and
mov
pop
add
cwde
ret
out
lea
push
inc
pop
mov
call
std
inc
cdq
arpl
pushf
inc
jbe
bnd
jp
test
cmp
mov
(bad)
(bad)
loopne
pop
iret
lds
into
int3
pop
push
cdq
(bad)
cmps
inc
rol
pmulhw
push
(bad)
sub
in
int
sti
out
stos
cmps
repnz
ins
push
sbb
dec
lods
(bad)
and
add
inc
repz
call
gs
mov
cmp
adc
cmp
lds
mov
jecxz
or
loope
cmp
lds
mov
mov
mov
popa
dec
mov
stc
jle
push
jns
shr
push
cmp
ins
in
adc
mov
jbe
pop
lahf
push
outs
push
sbb
(bad)
sahf
sbb
jno
mov
mov
je
cmp
adc
cmp
int3
xor
jmp
(bad)
fdivr
fidivr
and
retf
fisub
xchg
fld
inc
fsub
jge
fild
sub
(bad)
sub
fsubr
mov
dec
fadd
mov
cs
inc
mov
pop
into
xor
pop
adc
adc
dec
bound
sbb
ffreep
jg
xor
pop
jge
loope
js
aaa
sar
mov
jge
es
cmp
jp
nop
pushf
jge
out
js
cmp
jnp
xchg
mov
js
aas
xor
xchg
fidivr
jmp
js
inc
push
jnp
xchg
(bad)
jge
out
stos
js
inc
jne
inc
call
lea
jnp
pushf
popa
jle
repnz
lods
dec
idiv
lahf
mov
jns
dec
cmp
jecxz
xchg
imul
adc
mov
out
sbb
push
mov
pop
out
xor
test
call
ins
push
cld
mov
das
add
mov
aad
lods
enter
xchg
fisubr
mov
xlat
jne
mov
push
pop
pop
cmc
aaa
mov
add
pop
and
or
inc
sbb
push
xor
jae
arpl
xchg
adc
ss
mov
(bad)
mov
out
mov
sbb
push
mov
rcl
dec
ins
out
xor
mov
xchg
sbb
outs
pop
scas
fadd
shr
mov
jb
daa
or
sahf
inc
les
mov
and
inc
dec
int
push
sub
jns
outs
out
iret
jbe
int3
and
in
addr16
shl
test
sub
mov
stc
sub
(bad)
cmp
mov
sub
jecxz
and
and
xor
jno
adc
fidivr
cwde
mov
cmp
mov
cmps
loop
ret
add
test
loope
in
hlt
sub
retf
xchg
xchg
stc
in
out
cld
leave
cmp
(bad)
add
adc
in
ret
inc
lea
int
add
adc
inc
cmp
cmp
test
loope
sti
mov
movs
dec
jno
add
(bad)
mov
and
cmp
ret
cmp
push
aam
imul
ds
cmc
mov
stc
add
ficom
cmp
lods
ds
ja
pop
mov
cmp
push
in
mov
pop
mov
push
fimul
cs
mov
mov
pop
jns
outs
push
pop
popa
cmp
mov
je
or
pop
jp
mov
shl
data16
cmp
sbb
adc
mov
sbb
lea
sbb
ret
mov
mov
add
jns
xchg
cwde
pop
jb
sbb
or
cdq
push
xlat
sbb
je
fmul
dec
push
mov
ja
sbb
mov
inc
jns
pushf
and
and
inc
xor
rcl
mov
adc
mov
push
sub
shl
xchg
xchg
(bad)
push
fcomip
sub
(bad)
sub
sbb
push
loop
test
hlt
pop
fist
sahf
xchg
cld
sti
fnsave
add
mov
xchg
mov
mov
sbb
sub
loop
(bad)
mov
sbb
cmp
fwait
scas
nop
out
sbb
push
sbb
das
sahf
xor
aas
movs
fwait
clc
xchg
jo
fsubrp
sbb
and
cmp
in
out
rcr
cdq
add
or
popf
rcl
and
lahf
hlt
ds
dec
dec
cmp
mov
rol
mov
push
pop
cmp
add
push
int3
pop
cli
cmps
xchg
push
(bad)
inc
bound
fdivr
inc
jge
stos
sbb
add
jp
push
(bad)
jge
lods
pop
js
add
jge
mov
js
push
es
pop
icebp
jge
mov
js
or
out
pop
adc
mov
js
or
push
popa
xor
mov
js
or
push
jle
mov
stos
jnp
gs
mov
and
adc
jnp
push
popa
jns
adc
jl
push
jbe
shl
mov
ret
jecxz
jge
scas
pushf
pop
outs
jns
inc
lds
and
jno
mov
into
sbb
(bad)
adc
xchg
jbe
push
aad
jbe
fistp
int3
cmps
ficomp
js
fcomp
into
enter
xchg
fstp
jnp
fdivr
jmp
fld
pop
fsub
sub
fucom
jg
fadd
aad
(bad)
add
arpl
mov
dec
cs
fisubr
fcmove
fucomi
xor
fldcw
xor
(bad)
imul
hlt
xor
mov
stc
mul
nop
cld
aam
cmp
mov
out
pop
in
xchg
je
pop
pop
push
nop
pop
call
jge
repnz
sub
fsubr
repz
ds
aas
sbb
adc
out
mov
inc
test
inc
loopne
imul
pop
xor
pushf
in
pop
div
mov
aam
bound
sahf
sub
pop
jae
mov
pop
cmp
dec
in
jmp
jp
mov
cmps
lock
jnp
fwait
pop
pusha
push
inc
pop
inc
test
pop
and
mov
popa
in
xor
fnstsw
push
mov
lods
push
jl
add
jbe
pop
test
adc
add
retf
mov
pushf
mov
pop
or
popa
or
cmp
pop
mov
out
(bad)
ret
pop
aad
push
add
push
gs
repnz
inc
nop
cs
mov
test
imul
or
cmps
jo
ins
jno
dec
ret
xor
(bad)
mov
hlt
les
shl
(bad)
pop
idiv
or
pop
jae
xchg
cmp
jg
mov
jbe
inc
fs
mov
popa
es
je
into
loope
call
jp
jl
shl
ja
daa
in
sub
lahf
das
sub
sbb
aad
pop
shr
outs
mov
adc
in
js
mov
pop
test
cmp
push
cmp
xchg
frstor
mov
daa
mov
cmp
xor
mov
mov
push
in
cmp
cmp
nop
nop
add
mul
retf
mov
mov
jmp
xlat
mov
aas
jmp
mov
cli
xchg
ret
mov
in
mov
inc
pop
push
sbb
iret
pop
pop
inc
call
repnz
dec
mov
jg
hlt
xor
dec
fdivr
xchg
not
inc
dec
std
adc
mov
jae
loop
push
popf
(bad)
movs
leave
pop
movs
sti
xchg
mov
push
(bad)
mov
sub
nop
stos
sub
test
mov
mov
add
cmp
mov
aas
add
and
cli
mov
mov
mov
mov
cmp
pusha
movs
ds
mov
mov
push
arpl
mov
mov
cmp
ss
xchg
mov
pop
pop
frstor
push
mov
adc
je
push
jg
shl
ds
lahf
jl
ins
dec
ja
ret
adc
adc
outs
mov
mov
add
rol
xchg
mov
adc
or
rcl
and
jbe
lock
int3
sbb
(bad)
and
xchg
fstp
and
into
pop
mov
and
inc
add
rcl
sar
inc
daa
es
jge
or
inc
cmps
retf
jg
xor
sub
(bad)
jae
xor
pop
fcomp
repz
test
(bad)
and
stos
mov
xchg
sub
and
jmp
jmp
mov
rcr
popa
pop
mov
sub
adc
je
cmp
xor
jecxz
repz
cmp
out
lahf
adc
popf
ret
aas
xor
test
in
xchg
dec
cwde
cld
sbb
out
cmps
popf
mov
jmp
sbb
or
jmp
sbb
lahf
pop
fwait
cwde
cmc
or
dec
cwde
(bad)
dec
sahf
cmps
dec
push
sbb
rcr
push
push
cdq
and
add
cld
int
out
cwde
and
test
mov
dec
aas
or
mov
dec
add
xor
inc
xchg
lods
lds
nop
pop
fcomp
pop
mov
push
mov
jg
pop
bound
jne
or
jg
pop
jge
sti
mov
jge
or
ja
pusha
sahf
and
adc
ins
arpl
lds
sysexit
rcl
mov
jbe
mov
and
js
mov
pop
push
inc
cmp
sub
pusha
add
ret
outs
xchg
cmp
and
lds
ror
and
fimul
push
fldcw
fmul
adc
and
lock
xor
aad
(bad)
mov
mov
pop
iret
push
div
add
test
pop
xchg
daa
pop
call
xchg
xchg
mov
or
adc
aas
out
cmp
push
das
ret
test
cmp
xor
mov
jmp
cmp
loopne
cmp
test
xor
sti
mov
dec
sbb
sar
mov
add
cmp
cmp
mov
and
pop
cmp
xchg
aam
(bad)
shl
cmc
fisub
fld
imul
call
call
pushf
ja
stos
repnz
cmovns
cld
ins
lahf
mov
add
dec
cs
mov
movs
call
sub
hlt
outs
stos
dec
lahf
imul
cld
adc
jno
test
test
add
mov
xchg
xchg
push
inc
adc
or
das
cmp
stos
mov
push
sbb
dec
mov
lods
or
mov
stos
jmp
or
lods
pusha
sub
mov
lods
outs
or
inc
stos
sub
mov
sub
mov
fisubr
push
push
push
cs
adc
test
push
sub
jne
adc
jmp
(bad)
mov
outs
sub
gs
inc
sbb
les
sbb
scas
int3
lods
leave
jns
or
and
outs
jbe
in
int3
mov
jmp
(bad)
xlat
and
repnz
inc
cmp
ror
sbb
sar
aam
sub
fild
(bad)
fldenv
sub
out
add
hlt
mov
test
cli
arpl
icebp
cld
dec
xor
mov
adc
(bad)
mov
mov
xor
jle
mov
pop
loope
mov
aaa
(bad)
aas
lahf
lea
cmp
mov
out
mov
pusha
xchg
sub
inc
call
mov
cmp
jmp
mov
scas
mov
je
and
push
cdq
out
cmp
out
mov
cmp
fwait
xor
inc
xchg
adc
cld
ficom
fnstenv
mov
sbb
loope
mov
call
dec
jmp
cld
pop
sti
pop
idiv
push
sbb
pop
cmps
rol
push
sub
popf
call
adc
stos
adc
das
mov
scas
push
sub
dec
pop
int3
sub
mov
lods
xchg
push
inc
sub
pop
or
sub
adc
dec
sub
sbb
xor
mov
cs
or
shr
mov
adc
sub
mov
pop
jne
push
into
adc
push
pop
stos
rol
adc
retf
popa
jne
xchg
je
ret
inc
jg
sbb
xchg
outs
xlat
jl
lds
xor
ret
lahf
jle
mov
pop
je
popf
cmp
add
lahf
and
call
inc
cwde
mov
jns
popf
jp
data16
xor
and
xchg
out
jge
popf
retf
shr
fwait
push
sbb
je
leave
cwde
push
sub
sbb
cmp
xchg
fsubr
sbb
cs
xlat
test
clc
fidivr
cmc
fnsave
in
mov
fstp
jl
push
clc
pop
mov
cli
fistp
xor
repnz
gs
std
inc
cmp
daa
mov
sti
test
int
cmps
cmp
or
cmp
jae
dec
jmp
leave
mov
jmp
mov
inc
jmp
out
pusha
push
jl
sub
aas
lock
or
pushf
aaa
mov
repnz
mov
lahf
js
xor
scas
in
out
sub
mov
fs
push
dec
das
mov
movs
cli
inc
push
cli
movs
dec
ss
jo
xchg
cmps
sbb
cld
mov
xchg
push
mov
jmp
outs
jl
mov
pop
stos
pop
ins
add
push
add
sub
pop
hlt
push
mov
ins
test
dec
push
add
jl
dec
pop
cmp
outs
mov
add
sub
and
or
mov
data16
xor
data16
sub
push
mov
out
mov
jb
test
ror
imul
jmp
xor
sbb
aad
or
sbb
mov
dec
pop
pop
push
push
xchg
inc
je
and
retf
and
sub
jbe
lods
into
int3
int
lods
and
inc
outs
iret
push
push
dec
and
test
ror
jmp
sbb
sar
movs
mov
nop
xor
cmp
jno
out
push
(bad)
mov
xor
repz
add
(bad)
fcom
nop
fld
jge
rol
add
sahf
push
popa
xchg
inc
fst
and
mov
push
out
fbstp
xor
loop
shl
and
pop
mov
out
cmp
cmp
call
clc
icebp
mov
xchg
outs
(bad)
jl
cmp
pop
aas
in
aas
xchg
scas
pop
popf
jmp
xchg
cli
inc
and
scas
(bad)
sub
call
dec
inc
addr16
xchg
repnz
hlt
dec
mov
mov
(bad)
stos
adc
test
test
neg
sub
mov
inc
stos
fisttp
cs
cld
sub
jecxz
pop
sub
inc
stos
scas
push
lea
or
pop
test
dec
push
into
cmps
sub
cdq
xor
pop
bswap
int3
scas
fcmove
test
pop
push
(bad)
imul
in
pop
jno
xchg
mov
jmp
xchg
out
mov
repnz
or
mov
push
mov
or
repnz
sub
adc
imul
shl
mov
ins
ja
arpl
and
dec
sbb
lods
outs
mov
stos
jmp
jno
test
(bad)
movs
sub
push
outs
scas
outs
je
sub
in
sub
mov
nop
jbe
test
shl
shl
push
iret
daa
les
repnz
pusha
jnp
leave
inc
ror
and
adc
xchg
shl
shr
shr
out
cmps
jg
jmp
push
add
sub
retf
add
cs
(bad)
cmc
test
rcr
or
mov
xchg
and
inc
mov
inc
and
mov
xor
add
ret
loope
test
mov
imul
ss
cmp
rcl
cmp
lock
push
xchg
and
std
and
jmp
inc
leave
inc
push
push
scas
xchg
leave
arpl
out
xchg
jbe
inc
aas
adc
mov
cwde
inc
pusha
xor
pushf
sub
fcomi
test
dec
mov
int3
add
aaa
(bad)
addr16
loop
inc
mov
js
xchg
jmp
mov
repnz
cli
(bad)
push
push
movs
or
test
lea
push
(bad)
mov
stos
xchg
or
cmps
push
out
add
mov
popa
add
inc
pop
or
add
or
mov
lea
pop
dec
mov
adc
mov
pusha
mov
xchg
mov
mov
or
or
(bad)
int3
mov
cmovb
pop
mov
adc
addr16
movs
(bad)
mov
les
and
pop
cmps
test
add
(bad)
enter
lods
sbb
retf
icebp
int3
outs
lds
sub
in
(bad)
mov
jmp
fsubp
adc
mov
ja
push
add
xor
stos
or
into
and
(bad)
mov
jp
or
add
sub
imul
or
ins
mov
aad
mov
sub
mov
fsub
ins
cs
mov
mov
mov
xchg
xchg
fadd
movs
sbb
cmps
test
les
enter
xchg
les
iret
inc
in
leave
cmp
call
cmp
in
xchg
sub
jmp
push
in
dec
xchg
shl
jmp
repnz
add
(bad)
in
int
mov
cwde
mov
call
push
inc
fldenv
pushf
test
repnz
xor
sbb
fstp
nop
xor
cmp
jns
out
pop
div
mul
cli
rcl
dec
cmps
sub
mov
push
jmp
(bad)
adc
stos
push
mov
jns
add
jbe
lods
stos
adc
in
sbb
pop
bound
js
sub
xor
pop
mov
cmp
or
mov
dec
mov
ret
jp
mov
loopne
mov
fwait
add
sbb
mov
push
xor
adc
sub
call
push
(bad)
adc
adc
je
jbe
pop
(bad)
push
outs
retf
lds
idiv
jno
add
(bad)
(bad)
xchg
lds
dec
mov
retf
outs
and
dec
dec
jbe
dec
xor
pop
dec
xchg
and
inc
bnd
push
xlat
into
cdq
fs
inc
outs
adc
push
rcr
ins
push
daa
test
jge
jb
sar
test
sub
mov
aad
or
or
cmp
das
xor
sub
rol
jg
adc
sub
jb
cmc
stos
push
fbld
test
mov
sub
loope
lods
fnsave
lods
sub
in
xchg
in
test
nop
mov
scas
scas
cmp
sub
stc
stos
imul
outs
test
mov
in
out
inc
mov
int
pop
les
inc
ror
ins
call
cs
repnz
repnz
out
aad
adc
mov
mov
out
dec
xor
push
mov
mov
repnz
retf
pop
mov
xchg
xchg
adc
or
pop
push
xlat
inc
cmp
dec
pusha
add
stos
ret
test
mov
and
lods
add
call
pop
call
push
adc
ins
pop
mov
xchg
das
or
and
mov
inc
ror
push
push
mov
std
arpl
mov
jbe
or
push
adc
mov
xchg
sbb
gs
pushf
sar
mov
sbb
mov
idiv
inc
push
mov
mov
aaa
ret
loop
retf
ret
mov
js
adc
(bad)
push
sbb
cmc
xchg
(bad)
das
add
sbb
movs
and
pop
and
inc
jne
(bad)
push
push
int3
xchg
pusha
aaa
and
xchg
js
test
into
mov
xlat
and
mov
adc
rol
ja
jle
push
jge
out
shl
lock
sub
xchg
rcl
adc
mov
or
push
add
int3
outs
xchg
ficom
ins
rol
fdiv
xor
punpcklbw
sbb
and
pop
adc
aaa
add
das
mov
jnp
push
cmp
sub
push
out
xor
cmp
lds
mov
cmc
mov
xor
sbb
ficom
pop
xchg
push
mov
in
inc
inc
stos
push
cld
cdq
jne
(bad)
and
inc
jmp
sbb
mov
les
mov
out
mov
jecxz
cs
popf
dec
dec
mov
adc
dec
mov
dec
retf
sti
xor
mov
fisttp
test
dec
jb
push
dec
push
push
add
stos
retf
dec
xchg
add
dec
shr
dec
sbb
scas
dec
dec
pop
add
ret
dec
cdq
mov
dec
inc
pop
dec
fistp
dec
shl
push
add
fs
outs
inc
or
imul
mov
fdiv
xchg
adc
mov
test
push
mov
push
adc
mov
aas
stos
mov
ret
jl
pusha
xor
sub
aas
(bad)
test
sbb
int
(bad)
aaa
enter
retf
lods
int
leave
js
loop
and
(bad)
jne
int
retf
mov
retf
data16
into
inc
into
cli
enter
retf
lea
into
jmp
retf
lods
jl
into
or
cmp
outs
sub
retf
dec
jg
into
xor
pop
leave
xchg
sub
int3
repnz
shl
hlt
out
jbe
lahf
jmp
cmp
shl
xor
pop
fiadd
or
mov
xchg
dec
aaa
or
scas
xchg
jecxz
sub
cmp
ror
les
jb
pop
test
call
shr
clc
jmp
mov
in
inc
sub
cdq
mov
stos
scas
inc
xor
or
fisubr
dec
dec
push
scas
sub
jmp
mov
stos
stos
out
dec
jne
int
and
adc
scas
jne
popa
sub
sub
cmp
es
movs
mov
inc
loope
cmp
cmps
jecxz
mov
push
jns
ins
stos
and
dec
add
fs
push
mov
push
add
ins
into
pop
(bad)
scas
xchg
add
cld
rcpps
jb
sahf
pop
sbb
or
or
or
mov
bound
inc
mov
aad
xchg
in
dec
mov
adc
push
test
rcl
jge
scas
adc
pop
or
pop
jo
sahf
push
push
adc
adc
xchg
sar
shr
jge
ret
loopne
adc
stos
cmp
adc
cmp
xor
leave
(bad)
shl
sub
cmc
sub
and
lock
es
int
mov
and
push
jle
and
jae
jl
xchg
sub
movs
call
aam
test
adc
mov
push
sub
dec
xchg
fldcw
int3
fadd
retf
xor
out
pop
fimul
jmp
and
loopne
pop
add
mov
cmp
outs
pop
or
mov
cmp
mov
out
or
cmp
test
or
inc
sti
or
xor
inc
sbb
clc
cwde
(bad)
or
out
xchg
mov
fwait
call
or
inc
pop
mov
popf
or
cmps
repz
add
jg
bound
cmc
or
mov
ss
dec
loope
stos
movs
lods
xchg
adc
ja
jbe
and
cmp
mov
daa
cld
test
stc
inc
mov
lods
outs
dec
jns
cmp
pop
in
cmp
pop
gs
mov
add
adc
xor
vmaxpd
stos
mov
jecxz
or
cmc
ins
bound
dec
mov
fbld
jmp
push
mov
retf
pusha
adc
inc
xchg
adc
mov
xor
imul
rcr
mov
ret
ficom
mov
jno
pop
fcom
add
xor
loope
(bad)
call
jb
cli
mov
pop
idiv
xor
pop
retf
fcom
ja
call
test
mov
rcr
mov
es
aas
jecxz
xchg
mov
scas
sub
mov
jg
inc
jno
pusha
push
push
sub
pusha
xor
mov
adc
xor
rcr
xor
add
and
dec
xor
lock
fs
cmc
xor
and
mov
mov
loopne
inc
push
aaa
jo
jnp
sbb
(bad)
outs
inc
cmp
ins
xchg
out
in
mov
rcl
(bad)
ror
inc
jmp
adc
das
lds
stos
mov
out
mov
dec
fwait
add
xor
int3
iret
xchg
inc
xchg
retf
inc
int
repz
retf
or
test
dec
sbb
cmp
(bad)
pop
retf
fbld
enter
retf
jle
es
pop
std
icebp
enter
retf
and
call
leave
out
mov
into
mov
pop
fmulp
arpl
push
leave
sub
mov
into
out
push
jne
int3
pop
and
test
or
in
mov
out
xor
popa
mov
out
or
jecxz
pop
mov
jns
push
data16
aaa
mov
mov
and
mov
imul
in
cld
jb
ins
cmps
test
sbb
xor
sub
jb
in
enter
push
pop
add
retf
aad
ins
and
inc
xor
push
push
xchg
and
arpl
jns
jbe
iret
push
xor
cwde
sbb
inc
pushf
xor
pop
cwde
aam
mov
fild
sbb
cmps
sub
mov
imul
out
sub
pop
(bad)
xor
fst
xchg
xlat
mov
jge
adc
sub
jno
repz
sahf
cli
xor
dec
std
cwde
mov
std
loop
cli
fidivr
push
mov
in
cli
jns
stos
std
pop
xchg
jbe
cmp
and
mov
xchg
mov
(bad)
jmp
and
clc
clc
sub
outs
inc
cwde
cmp
test
in
or
fwait
jp
dec
icebp
and
test
inc
xchg
int3
dec
adc
stos
lahf
mov
sbb
dec
xor
xor
mov
movs
(bad)
mov
mov
cmps
pop
inc
cmp
xchg
pop
ret
test
or
push
(bad)
push
push
and
pop
pop
or
lea
stos
mov
ret
sysret
into
aad
pop
cdq
loopne
mov
repz
push
mov
nop
jmp
or
lods
popa
sti
inc
or
jno
dec
fs
sub
xchg
push
in
cmp
mov
mov
or
pop
shr
or
dec
adc
jg
nop
shr
cmc
pop
cmc
out
ins
mov
add
sbb
(bad)
jb
loope
pop
(bad)
lods
mov
jb
xchg
add
in
and
pop
mov
sub
retf
lods
mov
stc
daa
in
ja
mov
int
inc
scas
and
push
or
in
imul
pop
sub
push
adc
sub
jle
ret
mov
repnz
sub
repz
xlat
adc
ds
imul
and
out
ins
xchg
jl
lds
daa
ins
mov
fistp
test
adc
daa
loope
mov
inc
or
jecxz
and
nop
pop
sub
out
inc
inc
cmp
frstor
xchg
repnz
test
popf
dec
loope
inc
out
xchg
dec
jp
jmp
gs
mov
cld
sub
cdq
loope
lock
lods
xchg
aad
ja
mov
and
cmp
repz
sahf
push
push
cld
hlt
call
mov
imul
std
cmp
mov
jo
gs
sbb
inc
cmps
(bad)
mov
cld
xchg
inc
mov
push
jmp
out
sar
mov
mov
pop
adc
or
js
shl
cmp
hlt
aad
pop
lahf
loopne
mov
repz
push
adc
nop
xor
mov
pop
add
mov
push
adc
xchg
data16
inc
jno
mov
test
or
or
nop
sbb
das
out
add
sub
adc
cmps
push
imul
ins
shl
dec
pop
pushf
iret
cs
inc
retf
adc
lock
shl
sbb
out
je
mov
push
enter
push
jmp
xchg
je
repnz
retf
fisub
and
and
mov
xchg
popa
inc
in
sub
ror
cmps
and
ins
sub
push
dec
sub
mov
xchg
aam
(bad)
imul
and
rol
mov
add
xor
das
xchg
mov
cld
xchg
out
xor
mov
fstp
mov
dec
loopne
mov
ss
push
jmp
pop
lods
mov
pop
or
adc
dec
bound
push
jne
out
jg
cmp
push
jge
jmp
int
adc
inc
js
inc
push
jnp
cwde
fnstcw
out
test
inc
dec
jnp
call
sbb
jnp
popf
cmp
repz
inc
dec
mov
and
cmc
pop
jns
dec
sar
mov
sub
dec
repz
movs
lods
ret
js
loope
and
(bad)
cmps
out
repnz
push
fs
outs
test
jmp
in
push
mov
leave
stos
popa
jmp
pop
idiv
jo
mov
add
pop
cmp
inc
scas
call
and
cmps
or
sbb
mov
sbb
xor
xor
sbb
arpl
popf
mov
adc
ins
sbb
mov
xchg
sbb
mov
mov
mov
ror
jns
aad
pop
ins
sbb
sbb
pushf
jmp
push
ffree
mov
and
mov
jecxz
cwde
mov
scas
retf
or
(bad)
jo
test
push
int
fidiv
and
fst
iret
xor
popf
rcl
or
sub
loopne
sub
(bad)
aam
mov
or
dec
sub
mov
(bad)
fst
in
das
add
retf
mov
xor
push
or
mov
mov
clc
loopne
or
les
and
pop
movs
xchg
add
test
cmps
cmp
cmps
add
icebp
xor
pushf
les
inc
iret
and
adc
sub
push
shr
inc
mov
push
push
jmp
stos
out
fwait
jne
out
icebp
and
test
hlt
popa
lea
or
test
jmp
lea
movs
jns
js
and
pop
push
out
mov
cmps
mov
mov
push
xor
fs
in
dec
test
mov
loop
bound
lods
sub
dec
add
dec
scas
outs
dec
inc
add
in
lea
jp
iret
pop
and
dec
or
fwait
dec
outs
pusha
inc
dec
dec
mov
dec
xor
dec
xchg
bound
repnz
fisttp
mov
mov
dec
addr16
dec
popf
adc
dec
cli
imul
push
mov
ins
or
ret
pop
sbb
addr16
sbb
test
jo
pextrw
mov
jae
xchg
cdq
adc
inc
movs
xor
xor
and
loopne
int
repnz
add
in
sbb
ret
es
mov
jl
inc
push
sar
gs
jg
jo
aad
adc
aam
fst
jg
mov
test
rol
xor
mov
lods
es
fbld
inc
sub
mov
dec
shl
cs
mov
stc
push
adc
movs
fs
outs
outs
push
nop
cmp
out
ins
cwde
cmp
addr16
xchg
pop
jb
call
sar
xchg
mov
call
xchg
mov
mov
inc
xor
cdq
fcom
out
xchg
inc
push
jo
fwait
std
cmp
test
loopne
jae
lds
leave
lds
dec
xchg
shr
aas
jecxz
imul
cmc
das
dec
mov
lea
sub
ror
mov
movs
mov
push
js
aaa
popa
pop
cmps
loop
cmp
lods
xchg
test
out
rcl
movs
stos
fs
add
cmps
push
scas
movs
les
add
iret
nop
pop
sbb
cmc
mov
int3
rol
xchg
(bad)
mov
cmp
adc
out
jno
mov
push
pop
pop
jmp
shl
std
popa
jle
fidiv
hlt
(bad)
movs
arpl
lea
adc
mov
mov
push
mov
push
int3
lea
push
fbstp
pop
test
xlat
push
ret
pop
loop
sbb
hlt
cwde
outs
xchg
(bad)
std
lds
ficomp
or
mov
enter
push
dec
xchg
pop
je
and
and
push
gs
arpl
into
jne
jns
add
cmps
(bad)
jnp
xor
sub
or
jmp
sub
les
imul
sub
aaa
sub
das
loop
lea
js
shl
and
mov
out
lods
adc
mov
stos
pop
mov
cs
cli
test
movs
sub
mov
fsub
sbb
mov
(bad)
xchg
cs
cmp
pop
cmp
sub
mov
and
cmp
shl
into
jmp
sub
hlt
dec
jbe
lahf
dec
push
inc
dec
dec
cmp
rcl
mov
push
outs
mov
inc
int3
ins
jle
xchg
addr16
repz
jb
dec
or
jae
dec
dec
or
stos
test
lea
pop
or
mov
push
ror
hlt
cld
es
push
icebp
lea
inc
jb
adc
pop
stos
mov
or
scas
fimul
data16
mov
push
push
sub
stos
or
pop
jne
leave
mov
or
pop
mov
push
popa
mov
sub
sub
mov
adc
or
cmp
mov
jecxz
sbb
scas
sub
data16
pop
mov
out
les
push
gs
xor
int
fcmovnb
stos
rol
ins
ins
cld
out
dec
ret
cmps
jmp
sbb
jmp
ds
je
mov
push
je
call
xchg
and
in
clc
jbe
call
mov
jns
call
pop
and
add
fwait
ror
jmp
sub
jmp
daa
sub
out
add
sub
(bad)
movs
add
add
nop
mov
cmp
inc
test
xchg
and
mov
mov
pop
scas
in
xchg
sub
ffree
jo
xor
scas
fild
mov
push
cwde
(bad)
dec
loop
shr
push
in
mov
out
out
in
jmp
mov
or
shl
aam
mov
jg
adc
sub
jno
cmc
cmc
push
aas
mov
xchg
xchg
jmp
test
inc
mov
ja
pop
inc
and
call
ss
arpl
xchg
pushf
movs
icebp
repnz
xlat
dec
movs
test
adc
cmp
push
mov
pop
iret
xchg
dec
push
retf
ror
sar
jl
mov
daa
rcl
cmps
repnz
cld
popf
out
pop
push
dec
jmp
mov
repnz
fisttp
jp
push
lea
add
cmp
scas
xchg
or
gs
or
inc
mov
lea
or
mov
mov
push
ror
ret
mov
mov
mov
add
push
arpl
mov
call
adc
adc
sbb
movs
jge
fsubr
pop
adc
test
es
adc
xor
ins
jae
into
ret
stos
sbb
leave
adc
int3
jne
aas
(bad)
push
sbb
shl
jno
in
(bad)
pusha
out
icebp
sbb
imul
mov
mov
bnd
aaa
add
inc
and
lea
and
mov
jp
or
or
das
or
cli
lea
or
sub
(bad)
jg
push
in
aad
mov
sub
mov
cs
pop
test
fimul
mov
xchg
data16
or
mov
mov
mov
xor
rol
cmp
bound
int3
test
mov
or
les
jmp
sbb
pop
xchg
(bad)
(bad)
aas
jmp
rcr
add
add
and
icebp
mov
inc
pushf
inc
cmp
arpl
dec
mov
cmp
fisub
pop
not
dec
call
cdq
mov
jne
fisttp
push
shl
and
popa
mov
test
inc
inc
(bad)
not
push
mov
jno
add
test
push
jecxz
test
add
ins
pop
and
dec
scas
out
adc
add
gs
jmp
sub
pop
xchg
jo
cld
les
cmps
iret
xor
sbb
(bad)
sar
ds
gs
jmp
or
lahf
mov
sub
imul
sbb
shr
ins
mov
in
push
jmp
sbb
out
cmps
outs
int
add
cwde
jmp
sbb
inc
jno
jmp
mov
dec
jmp
scas
pop
(bad)
jbe
icebp
imul
out
sub
mov
mov
pop
mov
and
pop
int
rcl
adc
sub
push
rcr
daa
sahf
jg
mov
aad
inc
loope
push
mov
dec
or
stos
inc
ins
test
dec
fisub
gs
xor
outs
mov
bound
xor
push
fbld
push
aaa
loope
ins
xchg
aaa
scas
push
(bad)
jecxz
outs
mov
lock
jge
inc
outs
pop
cmp
imul
call
xor
xchg
(bad)
jmp
test
test
imul
xchg
jno
pushf
inc
test
repnz
mov
mov
sahf
or
dec
pop
adc
ret
test
sub
test
lds
push
(bad)
je
test
push
(bad)
push
add
push
sti
xchg
xchg
stos
cmps
and
xlat
push
sbb
mov
(bad)
push
adc
xchg
pusha
ja
cmp
test
add
pop
mov
rol
aam
mov
jg
adc
sub
jno
cmc
lock
pusha
mov
xchg
xchg
or
and
(bad)
mov
mov
ja
pop
and
in
outs
push
adc
ins
xchg
mov
stc
jno
imul
test
jecxz
mov
enter
scas
outs
push
movs
or
shr
jno
jl
push
jno
sub
xchg
sbb
dec
(bad)
adc
mov
mov
cmc
jae
xor
pop
and
xchg
ds
and
stc
and
inc
fistp
push
mov
daa
inc
jae
jge
xchg
xlat
adc
and
aad
shl
ret
rol
or
add
test
mov
call
xchg
pop
hlt
fdivr
and
mov
scas
adc
fsubr
jb
xchg
loope
mov
aaa
test
clc
lea
fucom
push
dec
mov
nop
xchg
inc
jl
aas
push
pop
cmp
fs
mov
fwait
call
sub
xchg
mul
jmp
jb
inc
ins
test
loop
mov
rol
and
addr16
out
in
pushf
mov
add
sahf
cli
and
hlt
movs
mov
dec
jo
add
test
jbe
mov
out
out
mov
les
or
pop
push
ror
fs
leave
inc
(bad)
sub
es
hlt
mov
dec
in
push
adc
jmp
ins
pop
push
out
scas
add
cs
xchg
(bad)
or
pop
(bad)
push
lock
test
jbe
or
adc
mov
cmps
push
or
in
jae
jmp
push
pusha
cdq
xchg
sub
mov
mov
mov
mov
dec
xor
xor
leave
xchg
adc
jbe
fadd
xor
cli
pop
out
mov
mov
xlat
imul
pop
pusha
fsub
out
stos
(bad)
mov
int3
scas
ret
(bad)
or
jmp
sar
repz
sar
pop
add
push
fidivr
jl
aad
xor
outs
mov
add
jbe
and
loopne
jne
inc
lods
jl
hlt
and
fst
ss
sub
xor
hlt
cmp
dec
pushf
push
mov
xor
xor
adc
or
jne
ret
sub
and
ja
lods
push
popa
inc
dec
add
and
sbb
mov
je
xchg
cwde
push
and
pop
xor
mov
ins
jmp
jbe
cmp
scas
fst
mov
push
lods
loopne
ins
jge
ret
pop
retf
mov
out
sub
lods
mov
mov
xor
add
cmp
aad
stos
cmp
and
mov
pop
rcr
adc
add
xor
jp
push
je
mov
cmp
mov
pop
pop
mov
jle
xchg
jb
cmp
ins
movs
int3
push
sub
dec
jno
lds
scas
dec
pop
jo
jmp
or
xchg
jge
sbb
popa
jg
imul
sub
jp
scas
mov
dec
aas
(bad)
jecxz
outs
push
cmp
cmp
arpl
sbb
ja
mov
push
jno
xchg
cwde
jne
sub
mov
mov
adc
mov
shr
mov
(bad)
data16
jmp
pop
xor
dec
icebp
pusha
sbb
adc
ja
popa
push
aaa
dec
and
xchg
pop
cmp
(bad)
out
mov
push
xchg
add
stc
cmp
add
mov
jne
stos
sbb
imul
push
jae
ss
or
adc
adc
(bad)
gs
mov
in
pusha
dec
scas
sahf
jle
push
mov
add
mov
jnp
pop
popa
push
add
imul
jge
popa
stc
sahf
outs
sbb
rol
xchg
sbb
adc
(bad)
or
sbb
jle
xchg
cmp
test
jne
mov
or
js
nop
dec
into
fwait
xlat
jo
push
push
xchg
jp
jp
sbb
lods
cld
ret
push
sbb
test
or
loopne
pop
pop
ret
pop
imul
in
push
jb
mov
jo
into
outs
out
jp
lahf
push
sub
add
out
pushf
test
jno
rcr
daa
xchg
aaa
pop
mov
test
jmp
sbb
sbb
or
dec
rcr
cli
test
jp
mov
ret
ins
push
fs
cmc
stos
(bad)
mov
nop
ins
imul
mov
push
in
in
xor
(bad)
test
dec
jno
(bad)
xor
xchg
rcl
cmp
loop
lds
enter
push
cdq
(bad)
out
std
fistp
test
cmp
xor
scas
fmul
into
xchg
adc
sub
mov
mov
pop
leave
push
rcl
dec
dec
adc
cmc
and
pop
fmul
mov
xchg
sbb
cld
mov
dec
ins
lods
ror
into
or
movs
bswap
outs
cmps
lock
cld
lahf
mov
push
pop
int
push
adc
inc
xchg
adc
xchg
push
pop
pop
and
out
(bad)
cmp
adc
inc
mov
and
call
pushf
sar
js
daa
outs
cmp
inc
sbb
test
sub
in
mov
fiadd
and
xchg
ficom
mov
(bad)
call
in
pusha
jno
(bad)
fimul
or
jle
out
(bad)
leave
push
stos
inc
adc
mov
sti
and
inc
dec
shl
xchg
mov
sub
std
jno
retf
repnz
call
sub
sub
scas
dec
jmp
inc
sbb
pop
clc
mov
xchg
add
sbb
cmc
in
sub
les
mov
xchg
fidiv
retf
ins
inc
push
jle
gs
jl
cmp
lahf
pop
out
sub
pop
xor
inc
and
push
adc
xor
iret
or
push
fist
xor
popf
cmc
xlat
or
xchg
pop
xor
jae
and
fs
mov
movsx
and
sbb
pop
dec
test
cmc
lods
call
dec
xchg
aaa
fdiv
sahf
and
imul
out
cmp
test
out
ins
out
adc
in
int3
jmp
jp
(bad)
shl
test
clc
adc
imul
stos
jno
in
pusha
pushf
mov
mov
inc
(bad)
mov
into
outs
pop
(bad)
sub
mov
or
xor
sub
leave
push
dec
push
ja
dec
sub
ror
retf
(bad)
mov
(bad)
xchg
mov
and
push
ss
pop
bound
and
outs
shl
mov
lahf
xchg
loope
cmp
jl
pushf
jns
sbb
inc
jle
in
inc
xchg
sti
xor
jns
fwait
pop
xor
arpl
lds
pop
mov
stos
ins
mov
xchg
dec
xor
dec
push
add
mov
and
clc
cdq
mov
dec
cmp
jb
lahf
xor
repz
rol
pop
cmp
xor
inc
xlat
adc
or
adc
xchg
cmp
ss
mov
xor
cmp
mov
scas
(bad)
mov
adc
imul
fld
cmps
repz
add
icebp
fiadd
imul
xlat
push
adc
repnz
lock
movs
cmp
cmp
inc
inc
lods
jmp
add
mov
fsubr
cs
out
push
inc
mov
es
sbb
(bad)
push
push
lods
jecxz
mov
jno
jnp
ins
inc
xor
or
ret
inc
mov
into
stos
xlat
arpl
push
std
xchg
jbe
push
mov
jl
pushf
repz
repnz
xchg
dec
dec
int
adc
iret
in
xchg
xchg
pop
push
sub
les
leave
adc
xchg
xchg
mov
fs
enter
and
clc
test
push
div
push
call
inc
push
xchg
je
aas
sar
test
jecxz
inc
arpl
adc
sbb
popf
(bad)
adc
ss
outs
mov
pop
out
inc
cli
add
bound
popf
mov
or
or
ins
xlat
cmp
mov
mov
das
dec
cmp
inc
in
sbb
cmp
ins
xchg
cmp
sti
test
es
clc
add
jge
jbe
jle
jnp
nop
and
idiv
xor
and
dec
jne
mov
(bad)
xchg
inc
add
stc
ror
push
int3
cmps
pop
add
jae
or
ins
sbb
movs
mov
fistp
(bad)
push
mov
jbe
jg
cmp
not
dec
imul
mov
dec
not
test
add
pop
or
stc
fdiv
lds
cli
adc
out
ins
imul
fimul
gs
ins
(bad)
loop
out
addr16
test
cdq
imul
cmc
xchg
or
aaa
mov
mul
pushf
add
sub
cmps
or
pop
push
hlt
inc
jl
lods
mov
push
sbb
lods
and
add
cmps
push
pop
xchg
out
je
push
xor
mov
mov
cli
push
cmp
xchg
cmp
mov
pop
or
jg
sub
mov
mov
or
aas
add
adc
int3
inc
mov
push
adc
mov
retf
mov
xor
imul
add
arpl
imul
xchg
rcr
mov
xchg
sbb
test
(bad)
jo
cmp
cmp
sbb
lds
enter
push
and
loopne
retf
fwait
daa
inc
and
gs
les
and
mov
into
or
or
shl
or
daa
nop
sahf
jns
pushf
outs
pop
lahf
fsubrp
sahf
(bad)
mov
xchg
fdivr
jmp
fwait
jecxz
push
stc
les
fadd
call
jnp
dec
scas
pushf
pushf
add
mov
dec
jns
add
out
cmovae
ins
and
xor
mov
stc
ins
into
loop
sub
and
push
xchg
inc
test
inc
jmp
push
ret
stos
jge
dec
add
popa
outs
push
repz
(bad)
lods
cmps
aam
add
cli
pop
sbb
sbb
xchg
out
pop
pop
dec
ss
or
or
ret
rcr
mov
or
add
mov
dec
sbb
movs
fcomp
pop
pop
jl
idiv
gs
xchg
daa
push
leave
addr16
jmp
and
push
imul
mov
push
adc
nop
ins
int3
adc
rcr
inc
mov
adc
sbb
pop
jno
movs
cmp
cmp
xor
outs
mov
sbb
dec
cmp
lahf
xchg
pop
and
add
icebp
inc
(bad)
into
lods
lea
jp
sbb
rcr
popa
adc
cwde
test
jge
out
push
ror
ss
leave
jl
jg
ret
jo
aas
or
xor
and
cmp
mov
stc
call
xchg
xor
adc
fild
pop
inc
xor
jns
sub
xor
dec
aaa
out
jne
lea
add
(bad)
fist
adc
push
push
xchg
(bad)
stos
enter
jmp
jmp
jg
inc
mov
dec
xchg
outs
or
cmp
call
pop
sub
shl
inc
inc
and
mov
pop
add
imul
movs
inc
dec
test
push
stc
push
jns
dec
fnstcw
data16
dec
dec
xchg
xchg
test
(bad)
std
and
push
cmp
stos
imul
ficom
cmp
lods
daa
and
loop
inc
pop
popf
adc
push
test
into
in
mov
sub
pop
(bad)
mov
in
jne
push
pusha
xor
dec
or
sbb
popa
popa
jmp
sbb
or
xlat
out
sub
mov
or
xchg
addr16
or
adc
xchg
test
frstor
adc
and
clc
sub
fwait
aas
dec
outs
push
xchg
adc
iret
sbb
adc
jo
pop
adc
inc
mov
push
jae
cs
jae
xchg
pop
cs
mov
movs
dec
stos
and
int3
ja
xlat
in
int
sbb
xor
stos
push
rol
bnd
sar
jl
jg
shl
(bad)
imul
repnz
jg
push
cmp
push
loope
sbb
outs
mov
paddb
fxch
inc
repnz
test
xor
sti
push
push
xor
movs
cwde
fild
mov
mov
mov
aas
mov
dec
pusha
in
xchg
cmp
add
aam
mov
scas
push
xchg
xor
cmp
stos
cmp
leave
fwait
in
and
fld
push
(bad)
cdq
xchg
popf
pop
lock
in
inc
or
jno
repnz
sahf
stc
inc
pop
div
pop
mov
in
pushf
dec
mov
out
fdivrp
push
xor
popa
cmps
mov
cmp
or
mov
fld
push
xor
stos
out
push
add
clc
ins
lods
pop
aas
mov
fiadd
shr
or
pop
(bad)
mov
aad
cmp
neg
sbb
ins
add
sub
mov
(bad)
popf
or
sbb
popa
or
stos
and
mov
push
add
fs
or
adc
push
or
cdq
sub
bound
outs
imul
sti
shr
inc
repz
xor
(bad)
iret
push
ins
jg
ja
cmp
sbb
mov
fcmovb
imul
sbb
js
jno
mov
push
pop
push
dec
jno
adc
mov
mov
aad
inc
addr16
lods
pop
and
hlt
js
je
call
enter
paddd
pusha
push
pop
sub
popf
inc
adc
sub
sub
add
(bad)
xchg
sub
cmp
das
scas
sbb
imul
xor
in
pop
xchg
jnp
xor
ret
retf
or
xor
cld
fsubr
mov
mov
jb
stos
(bad)
sub
imul
cmp
test
call
aam
push
xchg
(bad)
pop
je
dec
mov
mov
shr
inc
ss
mov
lods
dec
lods
dec
addr16
into
mov
fstp
dec
cwde
arpl
movs
push
stos
push
cli
push
icebp
je
leave
aaa
(bad)
test
aas
lds
push
cli
or
lods
mov
pop
add
jl
sub
popf
scas
out
mov
push
pop
mov
lods
pop
sti
add
rol
pop
lea
add
mov
pop
test
or
imul
lea
gs
icebp
mov
xchg
xchg
xor
ftst
mov
(bad)
data16
sub
adc
cmp
mov
sub
iret
ins
in
lock
adc
pop
jecxz
outs
adc
jo
sbb
(bad)
mov
add
sbb
mov
sbb
pop
(bad)
jo
cmps
pop
(bad)
arpl
inc
sbb
fnstcw
retf
xchg
rcl
jbe
or
int
xchg
mov
jns
and
iret
imul
es
sub
int
ds
loop
xchg
jns
retf
mov
pop
adc
and
into
lahf
push
ror
sub
cmp
mov
add
xor
(bad)
mov
xchg
and
arpl
nop
xchg
lock
dec
aaa
pop
cmp
ret
les
jle
imul
push
pop
mov
cwde
jge
scas
fistp
mov
mov
cmp
inc
inc
out
mov
cdq
xchg
cli
inc
std
mov
cmp
jae
pop
dec
cs
sahf
jmp
add
inc
pop
dec
mov
sbb
cmc
inc
nop
pop
pop
cdq
dec
data16
push
lods
pop
inc
shl
movs
jl
lods
sti
aaa
or
cmps
lods
push
adc
push
pushf
push
stos
fsubp
jae
or
ins
lods
mov
clc
pop
std
sbb
scas
push
addr16
and
in
(bad)
out
cwde
jl
mov
jmp
xor
xchg
dec
and
push
pop
or
arpl
hlt
imul
int
sahf
pop
and
in
inc
mov
xor
push
jne
pop
mov
jae
imul
sbb
mov
add
inc
push
loop
mov
or
or
jmp
int3
lds
push
bound
fisubr
mov
(bad)
aam
fistp
adc
dec
mov
push
cmps
shl
shr
or
adc
adc
or
clc
ins
push
mov
xchg
ds
daa
clc
mov
fdivr
(bad)
mov
out
out
add
les
test
pop
mov
cld
xor
rol
gs
stos
dec
ins
out
jne
lods
icebp
mov
es
fldenv
jge
cmp
jle
jmp
sub
and
cmp
retf
je
scas
mov
dec
push
adc
inc
xchg
cmp
addr16
stos
pop
pop
sub
pop
pop
test
fistp
iret
loopne
add
pusha
xchg
sbb
in
std
out
cdq
inc
dec
enter
cmp
push
or
lea
repz
mov
jbe
xchg
jo
mov
lea
add
inc
stos
cmp
mov
cli
int3
pusha
sbb
out
mov
fidivr
outs
ficomp
pusha
out
mov
sub
push
or
movs
xchg
jnp
and
jbe
imul
jmp
add
fbld
dec
mov
loop
pop
aam
movs
stos
jge
xchg
ins
(bad)
mov
pop
sub
cmp
ret
add
mov
out
inc
or
xchg
mov
ja
(bad)
rol
sbb
sbb
inc
push
movs
rcl
push
pop
sbb
inc
shr
xchg
ins
jns
xlat
sti
jge
sbb
sub
add
jmp
cmp
push
mov
arpl
lds
repz
cmc
std
sub
sti
push
pop
mov
stos
push
or
std
dec
daa
xchg
out
aam
fdivr
cmp
dec
div
pop
pop
mul
(bad)
pusha
mov
movs
mov
mov
push
aam
mov
std
(bad)
addr16
test
ja
loop
mov
ret
fisttp
out
mov
jmp
pop
mov
jmp
retf
pop
enter
mov
add
pop
(bad)
shl
cmp
rcr
inc
cmc
mov
adc
or
xor
mov
cmp
jmp
mov
fimul
fld
jmp
(bad)
loopne
scas
into
add
dec
mov
into
mov
imul
shl
pop
int
jmp
les
inc
mov
(bad)
(bad)
data16
inc
push
neg
push
xchg
jbe
push
js
jae
cdq
and
cli
js
call
dec
mov
rcl
cmps
pop
sub
mov
aam
add
shl
and
dec
frstor
test
std
daa
fiadd
fisubr
fstp
add
push
aam
mov
inc
scas
fist
adc
xor
push
mov
adc
pop
xchg
in
push
cdq
cmp
xchg
inc
push
sbb
sbb
ds
cmp
jmp
inc
xchg
ficom
in
mov
inc
inc
pusha
sub
out
stc
outs
daa
inc
mov
sbb
icebp
fisubr
sub
mov
dec
repz
das
dec
ror
xor
jecxz
push
dec
stos
cmp
movs
mov
dec
dec
ss
fidivr
mov
and
cmp
sbb
ds
ret
lods
pop
cmps
outs
outs
inc
std
das
pop
popa
push
rcr
inc
test
test
push
gs
stos
add
dec
add
lods
imul
bound
mov
dec
pop
xchg
xchg
outs
scas
push
dec
add
jne
push
mov
xchg
jae
ins
pusha
push
pop
mov
xor
cmc
jbe
pop
(bad)
test
stos
mov
dec
xchg
dec
or
shld
adc
sti
jle
push
push
cmp
xchg
std
iret
xchg
cmc
push
outs
jge
test
je
sbb
adc
lods
jmp
pop
pusha
out
scas
sbb
loope
xchg
mov
and
pop
dec
inc
pop
fimul
xchg
push
sbb
pop
packsswb
mov
test
or
inc
aaa
cs
mov
jo
jno
xchg
mov
out
aam
mov
es
adc
ins
cmp
mov
mov
dec
inc
pushf
imul
sar
add
pop
and
lock
js
jp
pop
daa
addr16
jbe
clc
jecxz
push
cmp
xor
js
jl
cmps
pusha
mov
pop
inc
movs
pop
or
in
outs
push
push
push
and
mov
popf
inc
cli
mov
jnp
sbb
hlt
aam
in
mov
add
cld
jle
dec
mov
imul
fisub
or
pusha
vmwrite
mov
mov
jnp
inc
dec
pushf
mov
retf
jne
sbb
mov
push
clts
adc
pop
mov
push
jo
jb
sar
or
inc
mov
int
leave
inc
sbb
xchg
in
jmp
lock
pop
jge
call
xor
int3
add
test
cmp
xchg
arpl
(bad)
adc
push
jp
sub
(bad)
ds
es
add
dec
mov
sbb
rol
push
xlat
and
add
sbb
pop
out
rol
hlt
mov
jae
adc
and
inc
pop
cmps
and
jne
scas
xchg
pop
xor
and
cmp
into
and
adc
rcl
lahf
push
jl
out
rol
sub
sub
mov
cmp
cli
sub
mov
sbb
pop
sub
mov
fld
shr
lock
lds
add
xchg
xor
inc
mov
or
mov
cwde
stos
mov
(bad)
loopne
and
push
lea
jecxz
cli
push
cmp
inc
jb
add
(bad)
xchg
retf
out
mov
cmp
jbe
inc
push
add
in
fmul
inc
mov
and
adc
inc
inc
iret
gs
cdq
lods
xchg
push
repz
inc
add
leave
popf
mov
(bad)
or
push
sub
mul
loop
mov
fsubr
dec
xchg
mov
movs
dec
std
adc
push
les
jns
sbb
xchg
pop
mov
(bad)
(bad)
jmp
push
pushf
xor
lods
cmp
mov
js
sbb
xchg
mov
mov
and
push
mov
sbb
scas
cmp
sub
pop
or
cmp
mov
leave
ror
adc
popa
rcl
mov
pop
cmps
xchg
fdivr
sahf
jnp
addr16
loopne
fisttp
imul
and
imul
jmp
pop
aas
clc
in
ins
leave
ds
mov
push
sbb
adc
(bad)
mov
add
(bad)
leave
scas
sub
sbb
and
add
js
(bad)
sbb
adc
dec
and
cmps
arpl
rcl
push
sub
aaa
adc
jle
sub
pop
or
cdq
xlat
xor
(bad)
es
xor
mov
fdivr
cli
sbb
add
jb
lahf
fild
iret
int
lock
dec
loop
mov
into
mov
inc
cmp
mov
(bad)
out
dec
pop
arpl
xchg
jmp
and
cmp
and
cmp
cdq
lods
sub
inc
push
movntps
nop
pushf
cs
popa
jecxz
popf
adc
sub
fbstp
dec
movs
mov
lahf
dec
(bad)
cmp
dec
mov
shr
imul
pop
sub
popf
cmps
cmp
gs
sub
movs
cmc
jp
sti
jge
cmp
cmps
repz
aas
std
xchg
ds
jg
cmp
mov
stos
cmc
idiv
add
test
add
adc
xchg
pop
xchg
scas
arpl
sbb
mov
jae
or
retf
pop
sbb
inc
dec
or
aad
mov
sbb
push
retf
bound
mov
lea
sub
adc
jge
mov
dec
or
rol
jp
scas
fistp
pop
es
ret
es
mov
outs
mov
inc
add
jno
into
mov
mov
pop
adc
inc
retf
xchg
and
retf
jbe
ja
int
mov
push
jns
dec
xor
mov
fdiv
jnp
pop
aam
fsub
sub
repz
sbb
(bad)
in
or
pop
push
js
daa
push
jo
rcr
jno
push
push
test
jo
fcmovnu
mov
xor
inc
(bad)
pop
mov
mov
pop
scas
xor
xchg
stos
loope
xor
aaa
pop
jp
mov
rcl
pop
mov
dec
dec
aam
aaa
xchg
mov
mov
and
das
imul
lahf
mul
jmp
test
jnp
cmps
in
or
inc
stc
sahf
cmps
cdq
mov
mov
ja
cmps
inc
(bad)
jb
fwait
test
jge
adc
sahf
loop
inc
hlt
xchg
aam
dec
pusha
sbb
div
test
dec
jnp
in
or
clc
clc
idiv
jge
stc
movs
add
out
cli
icebp
push
stc
push
jg
out
cmps
add
and
push
cdq
imul
addr16
dec
aas
push
add
sub
adc
lods
fstp
add
call
inc
add
mov
add
or
inc
pop
aad
cdq
mov
xlat
stc
or
frstor
gs
or
pop
cmp
and
fbld
or
pop
adc
call
push
sub
adc
outs
lock
mov
ror
shr
mov
adc
sbb
jns
adc
(bad)
cmp
mov
xor
(bad)
sub
sbb
scas
push
sub
pop
and
xor
fisubr
retf
stos
and
and
sub
xor
in
and
xor
iret
adc
mov
push
inc
sahf
jl
xor
sub
mov
mov
push
aas
inc
jg
ror
inc
sbb
aaa
popa
cmp
out
stc
xor
fiadd
sub
stos
xor
or
ficom
cwde
movs
xor
fbstp
loopne
ins
mov
push
shl
inc
sbb
ins
xchg
out
pop
in
adc
cmp
pop
mov
call
dec
cs
lds
inc
mov
arpl
mov
outs
inc
scas
(bad)
jns
cmps
sbb
imul
push
lock
cmp
pushf
mov
hlt
xacquire
ror
push
mov
neg
mov
out
cmps
mov
xlat
mov
dec
dec
cld
mov
clc
aas
mov
movs
das
pop
stos
cli
daa
pop
or
pop
movs
outs
cmps
pop
in
dec
std
rdpmc
sub
jp
test
jbe
cld
push
in
dec
out
stos
fs
std
add
(bad)
push
pop
and
lods
fldenv
add
add
hlt
pop
mov
cmp
pop
cmp
mov
or
push
jle
xor
aas
or
sub
mov
mov
dec
fs
inc
sahf
mov
add
pop
add
dec
mov
jne
(bad)
imul
adc
jl
ins
pop
ret
ret
or
outs
iret
xchg
imul
mov
push
(bad)
stos
mov
sbb
test
xchg
jbe
adc
int
pop
dec
and
jmp
icebp
and
cmp
sub
inc
pop
aam
mov
cmp
fwait
inc
not
mov
sub
movs
inc
in
inc
das
mov
adc
das
call
mov
ins
adc
out
and
inc
(bad)
int
iret
sbb
inc
ror
inc
es
sbb
inc
mov
jle
and
xor
movs
sub
add
sbb
out
fldcw
in
das
sbb
adc
push
push
je
call
ficomp
xchg
cwde
xor
imul
loopne
(bad)
mov
lea
pop
pusha
cmp
movs
and
stos
pop
cmp
xor
xchg
leave
int3
(bad)
out
mov
or
loop
inc
call
outs
(bad)
in
and
inc
adc
rcr
mov
inc
hlt
call
ss
mov
pop
popf
inc
pop
jns
std
mov
mov
cmc
push
js
dec
repnz
inc
clc
or
xchg
and
les
lock
cmps
push
nop
or
or
push
ret
mov
test
cmp
push
and
mov
aaa
(bad)
adc
adc
push
scas
lock
je
and
xchg
leave
enter
sub
push
xchg
sbb
(bad)
cmp
xchg
es
sbb
push
adc
pop
xchg
push
jecxz
std
rcl
xchg
out
(bad)
loopne
neg
dec
push
dec
pop
cmps
pop
test
int
sbb
add
sbb
movs
push
dec
xchg
mov
push
and
repnz
rcr
in
out
fisub
in
fadd
clc
(bad)
lods
push
fistp
and
aad
push
push
fmul
sub
int
sub
test
ins
and
aad
test
popa
inc
in
lods
jns
ins
aaa
clc
int
lods
stos
jmp
call
fbstp
lds
out
and
pop
pop
fxtract
jmp
shr
dec
fwait
lock
mov
push
mov
scas
xor
sub
mov
sbb
rdpmc
sub
cmp
ja
push
xchg
xor
inc
lods
in
test
or
sbb
aaa
add
mov
popf
adc
adc
std
pop
inc
mov
call
sub
inc
pop
in
dec
push
int3
rol
test
fst
jmp
ins
push
dec
jmp
cmps
jge
out
faddp
test
pop
jbe
adc
lds
iret
sub
xor
push
cmc
or
pop
sar
ret
cmc
loop
mov
push
sbb
int3
jbe
sub
push
addr16
mov
imul
sahf
shl
nop
cmc
sbb
cdq
pop
cmp
xor
mov
loop
test
add
push
(bad)
and
jo
(bad)
push
cmp
push
pop
stc
jno
iret
movs
test
(bad)
(bad)
shl
mov
mov
shr
mov
mov
movs
and
out
sti
cmps
cdq
jnp
push
or
repnz
jae
push
imul
mov
inc
in
lods
fnsave
dec
loope
push
fsave
dec
inc
adc
fwait
out
push
push
xlat
scas
or
mov
jmp
jno
stos
sti
and
push
cld
xlat
xchg
mov
iret
jg
xchg
jmp
mov
(bad)
jne
mov
mov
push
dec
movs
sar
xchg
inc
mov
in
jecxz
xlat
mov
jmp
lock
fadd
test
add
dec
mov
arpl
imul
shl
fs
push
or
das
dec
push
cmp
push
dec
mov
or
mov
or
mov
pop
retf
mov
and
push
arpl
scas
mov
sub
test
and
in
pop
outs
sar
and
inc
pop
cmp
iret
scas
fild
cwde
xchg
dec
aad
push
and
jne
sbb
inc
in
mov
imul
sbb
push
lds
add
xchg
ror
(bad)
cmp
fnsave
mov
push
das
retf
call
inc
clc
sub
mov
sub
jnp
xor
popf
clc
into
int3
or
dec
stos
movs
je
sbb
addr16
adc
xchg
mov
lahf
test
in
loope
rcl
dec
(bad)
jg
inc
inc
cmc
lds
dec
outs
jnp
popa
add
out
mov
fldl2t
imul
(bad)
loope
rcr
fidiv
sub
mov
(bad)
in
outs
inc
stos
jns
and
fnstsw
lock
rcl
data16
add
jmp
(bad)
xor
(bad)
sti
jecxz
es
push
mov
inc
xchg
(bad)
jno
push
and
imul
and
mov
imul
ins
test
pop
mov
fsub
or
push
pop
mov
adc
sbb
enter
cmp
es
mov
aas
pop
xor
stos
inc
xor
es
jne
(bad)
sub
xchg
mov
adc
dec
xchg
(bad)
cmp
xchg
pop
pusha
mov
cs
and
mov
sub
pop
jecxz
in
jmp
rdtsc
addr16
cld
daa
sub
xchg
into
pop
mov
pop
pop
stos
jbe
and
add
or
or
sbb
(bad)
jmp
inc
jmp
push
cmp
sahf
fbld
mov
sub
jp
addr16
(bad)
jne
jge
inc
xlat
pop
dec
scas
pop
and
call
out
or
mov
adc
jecxz
add
push
mov
cmc
add
es
jp
inc
popf
stos
pop
mov
mov
stos
cmp
ret
and
cdq
imul
xor
inc
pop
mov
mov
cmp
movs
mov
rcr
cli
sbb
push
fwait
(bad)
mov
jge
mov
mov
std
inc
outs
test
xchg
xchg
loopne
pop
cmp
jo
out
imul
xchg
add
test
inc
push
in
pop
test
cwde
movs
cmp
scas
add
addr16
or
push
mov
mov
ins
shl
sbb
xchg
jmp
sbb
sub
xchg
es
rol
mov
ds
rcl
mov
jg
or
hlt
ds
cmp
xchg
cdq
lahf
push
stc
push
cs
ss
movs
and
cmp
sbb
test
aam
add
aaa
lock
xchg
lods
xchg
mov
sub
add
xchg
js
bound
popa
xor
sar
xor
or
fstp
in
pop
jl
adc
hlt
jl
ret
cli
dec
ds
and
push
adc
jno
loop
sub
fnsave
outs
out
mov
push
jne
ds
sub
ins
push
ja
jecxz
popa
sbb
xor
and
pop
arpl
outs
test
das
push
pop
pop
xlat
mov
or
popa
sub
pop
inc
pushf
or
cmps
sbb
mov
aas
leave
aaa
sub
adc
hlt
xchg
jae
and
mov
sub
(bad)
enter
in
pop
or
xchg
fcomp
movs
push
fcmovnu
in
mov
movs
not
rcr
icebp
pusha
fcom
lods
test
jb
gs
add
adc
cmps
mov
rcr
mov
dec
daa
je
int3
dec
jae
and
mov
jge
out
movs
inc
cmps
arpl
ins
sahf
inc
push
(bad)
push
jae
xor
jae
mov
sahf
mov
xchg
(bad)
jne
fiadd
and
lahf
inc
xchg
data16
jp
xor
sbb
(bad)
loopne
jb
movs
inc
lods
(bad)
loop
sub
fsub
inc
sub
cmps
adc
mov
(bad)
cwde
inc
sub
mov
mov
(bad)
rcl
lds
mov
pop
lds
dec
cs
ins
xchg
dec
int3
rol
sbb
push
xchg
dec
adc
dec
sbb
jne
add
cld
enter
pop
dec
xchg
xor
pop
xchg
or
push
pop
add
inc
cmp
sar
add
push
shl
in
xchg
mov
aad
js
cmps
cwde
leave
mov
(bad)
xor
aam
inc
dec
retf
or
xchg
xchg
xor
mov
pop
pop
cmps
or
pop
mov
call
out
sub
mov
pop
push
in
dec
xchg
ins
pop
fwait
jmp
in
in
fld
(bad)
js
jecxz
out
pop
repz
jge
dec
push
sbb
frstor
in
aaa
out
pop
fld
xchg
xor
in
dec
pop
das
push
or
cmp
or
shr
xor
test
xor
neg
jb
aas
xor
inc
xor
xchg
mov
scas
cmp
out
ret
iret
shr
in
clc
call
push
test
adc
fisttp
inc
fnsave
(bad)
in
fwait
sub
xchg
popf
loope
(bad)
daa
push
mov
into
jg
jmp
mov
xchg
out
and
es
lahf
or
cs
cmp
stos
xor
scas
xchg
add
(bad)
jmp
addr16
in
aam
xchg
mov
out
xor
adc
sbb
loopne
or
cmp
pop
jo
hlt
mov
fwait
adc
(bad)
xchg
adc
out
mov
loope
mov
push
loop
cmp
aam
pop
xchg
push
mov
test
ficomp
out
call
sbb
out
fidivr
call
cmc
iret
sbb
in
add
and
je
mov
inc
jb
pop
inc
ret
(bad)
mov
and
cmp
mov
pop
pop
sub
add
sbb
sbb
inc
inc
cld
std
ins
loop
lock
xor
iret
nop
aaa
in
repnz
div
mov
mov
mov
imul
dec
fs
xchg
clc
xor
inc
repz
mov
add
and
cs
data16
mov
add
inc
xchg
lock
imul
(bad)
xor
sub
jl
fst
clc
cld
xor
daa
shl
push
(bad)
cmp
mov
scas
mov
mov
push
inc
lahf
mov
jnp
cmp
fistp
jge
fadd
call
cmp
call
dec
xchg
push
int
ja
popa
mov
rol
pop
rol
add
pop
cmp
fdivr
and
add
fld
or
xor
xlat
sar
js
jne
push
mov
xor
fstp
inc
cwde
inc
jg
rol
xchg
(bad)
jmp
inc
mov
loop
ret
push
cmp
pushf
inc
add
out
les
cmp
and
sub
packuswb
mov
mov
xor
mov
lock
cmps
cmp
xor
push
ja
or
xlat
add
loopne
out
push
sbb
pop
and
jg
adc
aas
push
mov
pop
outs
outs
movs
cmp
xchg
out
lods
popa
addr16
push
aad
outs
and
fs
ror
jo
pop
dec
callw
lahf
call
addr16
push
stc
outs
nop
call
mov
shl
xchg
pushf
cmc
das
push
das
inc
inc
scas
fld
jmp
mov
inc
(bad)
lods
sbb
in
outs
add
(bad)
lods
mov
fdivr
imul
and
dec
test
rol
lods
js
shl
loop
stc
aad
imul
pop
in
jns
adc
sub
adc
cmc
aas
fs
call
retf
inc
add
mov
jae
xchg
push
fiadd
xchg
inc
add
lock
mov
xor
add
out
inc
mov
adc
sbb
out
rol
push
js
call
jb
les
es
xor
inc
cmc
inc
xor
push
or
fcompp
xchg
push
sub
leavew
ror
je
(bad)
in
sbb
clc
push
mov
adc
stos
test
cmp
sbb
xchg
mov
jl
clc
enter
push
adc
add
scas
lock
mov
mov
sbb
inc
sar
cwde
cld
mov
popf
ins
adc
out
fimul
sub
ins
(bad)
sahf
sub
sbb
(bad)
outs
bound
jg
xor
xchg
cmps
mov
mov
repnz
push
or
push
and
call
out
xchg
dec
scas
aas
(bad)
cwde
leave
add
daa
loope
inc
pop
es
(bad)
push
push
in
mov
es
push
sbb
xchg
arpl
outs
test
fwait
pop
test
and
das
cmp
dec
mov
add
dec
mov
test
call
sub
sbb
adc
movq
and
jne
in
fnstsw
sbb
gs
scas
push
stc
adc
jle
in
inc
push
lods
in
xor
gs
call
xor
fistp
sbb
mov
push
cmp
fdiv
add
jbe
rcl
lahf
pop
push
dec
push
sbb
js
push
aaa
aas
mov
sbb
push
dec
and
cmps
std
(bad)
out
cwde
sti
retf
pop
out
and
xchg
xchg
outs
popf
mov
xor
mov
aam
out
or
add
cli
xchg
jb
adc
adc
imul
mov
std
mov
push
ror
clc
(bad)
test
in
adc
int3
sbb
cmp
daa
sti
add
inc
fmul
sar
cmp
fdiv
pop
xchg
or
setnp
ins
je
adc
jo
adc
lahf
jp
or
mov
mov
mov
loopne
dec
sbb
adc
std
xchg
mov
mov
leave
sbb
stc
ss
fs
adc
mov
ss
lea
mov
cmc
mov
push
cmp
pop
pop
jnp
rol
push
aaa
add
inc
test
daa
loopne
jae
lahf
push
cmp
fnstsw
data16
mov
lahf
fcomp
shr
xchg
clc
aas
inc
xchg
mov
mov
frstor
mov
adc
mov
imul
loopne
pop
lea
outs
cmp
mov
dec
mov
frstor
sbb
call
mov
aaa
adc
jo
in
dec
or
adc
adc
pop
cmp
repz
jmp
xchg
ret
mov
rol
or
cmc
out
mov
cli
or
fwait
ss
cmp
pop
sahf
out
pop
xor
movs
mov
shl
popf
push
in
fs
or
xchg
shl
add
inc
loopne
add
(bad)
fcom
loopne
sub
add
cdq
mov
xchg
push
js
push
dec
push
inc
bound
sub
cld
outs
push
mov
(bad)
adc
ror
gs
repz
in
pushf
or
xor
clc
aaa
jmp
test
sub
es
sub
ins
jnp
mov
push
dec
or
pop
push
mov
inc
out
in
mov
jne
test
fmulp
test
enter
je
inc
daa
mov
ret
movs
into
cmp
sub
cmc
push
and
xlat
out
mov
(bad)
dec
hlt
pop
dec
rol
cmp
cmp
or
in
into
jbe
stos
rol
dec
push
fidivr
xor
loopne
cmp
xchg
sub
xchg
in
mov
sub
mov
adc
xor
imul
pushf
pop
push
je
adc
pop
mov
dec
mov
ret
sub
std
ins
xlat
and
push
ficom
xlat
inc
test
push
movs
pop
and
push
retf
rcr
out
sar
dec
bound
(bad)
jae
bound
jae
(bad)
dec
xchg
push
test
outs
sub
hlt
loopne
retf
mul
jmp
fsubr
or
mov
mov
outs
arpl
xchg
int3
sub
into
(bad)
xchg
mov
mov
mov
xchg
in
movs
adc
push
pop
mov
or
sub
shr
ss
mov
pop
aam
mov
xchg
inc
ins
sar
in
add
add
inc
lea
(bad)
fwait
mov
out
jmp
cli
sbb
and
stos
mov
mov
and
(bad)
cld
cmp
push
movs
pop
dec
clc
ins
pop
jle
test
jnp
int3
sbb
mov
jbe
cmc
hlt
(bad)
and
mov
mov
pop
push
inc
ss
(bad)
pop
push
sbb
dec
pop
jne
imul
ins
dec
xor
jl
(bad)
popa
pop
adc
out
das
fbstp
(bad)
(bad)
mov
enter
adc
mov
xor
retf
mov
xchg
outs
pop
xor
frstor
mov
data16
mov
xlat
fdiv
jno
mov
enter
cmp
call
je
add
add
mov
inc
xchg
mov
aad
sahf
mov
sbb
xchg
aam
in
add
cmps
pop
sub
popa
ret
inc
adc
jae
popa
sbb
test
mov
enter
or
inc
hlt
popa
sbb
xchg
mov
cdq
mov
leave
rcr
stc
call
or
repnz
xor
mov
push
push
pop
cmc
fnstenv
fisub
nop
sub
mov
out
dec
ds
cs
lea
cmps
loope
mov
jmp
(bad)
inc
adc
xchg
aam
sbb
push
aam
scas
or
lods
cmc
idiv
adc
cmp
inc
inc
xchg
fstp
add
clc
lods
jg
in
mov
imul
and
dec
cmp
out
imul
inc
push
dec
lock
adc
lods
dec
mov
add
adc
imul
jmp
ja
retf
sub
rcl
movs
dec
and
repnz
lock
push
imul
fs
int3
xlat
sti
bound
pextrw
dec
xchg
pop
cmps
jbe
sub
adc
xchg
or
aaa
cmp
loopne
jle
stos
lods
rcl
mov
jge
fidiv
lods
xchg
adc
in
int
xchg
je
xor
mov
sbb
xchg
xchg
add
inc
sbb
je
(bad)
sbb
push
test
sbb
adc
stc
add
dec
fucomi
xchg
jo
cwde
sub
inc
jno
retf
sub
std
or
test
or
in
xor
adc
popa
(bad)
pop
(bad)
out
retf
cwde
enter
and
leave
mov
or
xor
xchg
nop
and
jne
out
mov
in
inc
cmps
xchg
inc
sbb
bswap
mov
or
mov
dec
jne
jge
js
sbb
fs
mov
jne
mov
out
mov
in
push
test
inc
inc
lea
cld
pop
mov
pop
cmp
jo
outs
xchg
loopne
and
lea
pop
mov
mov
mov
bnd
sub
pop
jecxz
xlat
pop
std
stos
aad
adc
sti
adc
push
sub
jmp
sub
movs
or
xchg
mov
jmp
cwde
mov
xlat
(bad)
dec
push
ja
xchg
sbb
scas
dec
xchg
sahf
cmp
cs
pop
bound
mov
mov
(bad)
xchg
pop
dec
and
adc
aaa
dec
out
add
dec
xchg
and
rol
dec
data16
dec
loop
lea
sub
pop
fs
jae
jp
dec
jne
imul
int3
out
loopne
and
jb
ret
repz
mov
mov
push
pop
les
jp
or
mov
mov
mov
outs
stos
lds
sub
fstp
es
inc
dec
push
and
jno
aad
dec
cmp
push
push
jne
fild
ret
enter
cmps
ins
adc
push
xchg
jno
jmp
cmp
rcr
jle
dec
cmp
(bad)
push
lds
mov
fwait
clc
xchg
mov
jg
aam
mov
dec
dec
add
jns
xchg
and
cmps
pop
push
sbb
shl
mov
addr16
push
sbb
push
test
adc
rcl
jne
fyl2xp1
call
fcmovb
pop
dec
jne
xlat
aad
sub
sub
pop
ds
sbb
enter
lahf
push
adc
xor
pop
pop
or
in
out
ins
mov
cmp
in
jmp
enter
push
fsubr
inc
pop
jmp
lods
push
push
sbb
jge
in
sbb
adc
or
call
sbb
dec
int3
popf
int3
add
ss
sbb
inc
int3
rcr
(bad)
fld
and
mov
jl
mov
adc
sub
imul
mov
cmp
fwait
(bad)
cmp
sbb
ror
mov
test
xchg
xor
pop
cmp
jnp
sbb
cmp
test
jno
pop
push
mov
mov
outs
enter
xchg
in
jne
inc
cmc
int3
push
shl
push
add
or
inc
xchg
cmps
push
shl
imul
pop
add
mov
mov
mov
pop
shl
jecxz
or
int3
popa
in
mov
push
mov
cmp
push
push
(bad)
ss
movs
addr16
xor
js
xchg
xor
mov
int
xor
outs
mov
jne
les
repnz
cli
cld
dec
cmp
aaa
pop
add
mov
or
lods
pop
mov
add
sahf
pop
adc
mov
dec
jle
adc
and
aad
out
inc
std
add
movs
mov
ds
xor
dec
push
and
(bad)
or
aas
inc
lods
dec
cwde
ss
and
xlat
xchg
rol
xchg
shr
jae
sub
sbb
adc
xchg
add
xchg
xor
adc
xor
pop
cld
nop
aad
int
(bad)
fs
xchg
push
fs
pop
ss
mov
inc
aad
jb
cmp
cmp
lahf
dec
lahf
mulps
push
or
inc
leave
enter
and
dec
cmp
add
sbb
out
call
cmp
mov
bound
pop
fstp
sub
mov
into
add
pushf
and
test
cli
jne
inc
mov
xor
fidiv
or
ja
add
or
adc
jae
mov
mov
mov
fmul
jb
mov
dec
sbb
aam
mov
mov
push
aaa
sbb
inc
ror
push
mov
dec
icebp
int3
hlt
mov
enter
ins
sbb
push
push
hlt
mov
movs
or
and
sti
lods
lea
stc
jae
or
(bad)
fisub
or
aaa
sbb
mov
push
push
mov
pop
add
retf
repz
dec
pop
sbb
xor
sub
xor
xor
mov
sti
add
cmc
repnz
in
fmul
add
sbb
ins
inc
sbb
cmp
or
add
and
xor
mov
push
or
loope
(bad)
ret
jecxz
call
and
cmp
lods
push
cld
(bad)
sti
xor
cwde
sbb
push
shl
sbb
arpl
(bad)
in
aad
ret
xor
fdivr
loopne
xor
jbe
aaa
repnz
xor
popa
dec
xor
dec
loope
clc
repnz
cmp
mov
dec
mov
xor
add
mov
gs
cmp
popa
shl
std
push
push
pop
sbb
sub
xchg
inc
adc
pop
push
call
or
xor
out
sbb
jo
mov
sbb
or
in
mov
js
test
js
dec
mov
shl
push
dec
clc
pop
lods
vmread
fnstsw
jo
addr16
fs
pop
mov
loope
pop
dec
loop
jno
sahf
sti
push
pushf
mov
jp
mov
pop
and
pusha
cmp
fild
mov
dec
test
outs
and
jnp
mov
xor
jl
xchg
sub
sub
xor
or
sbb
cli
fcomp
sbb
sub
clc
fidivr
mov
fcom
ret
mov
cmp
fadd
cmp
ret
mov
and
mov
adc
fcom
xchg
rcl
movs
shr
xor
icebp
popa
jne
sbb
jle
mov
addr16
popf
pop
sbb
sub
cmp
dec
neg
dec
cmp
(bad)
cmp
jle
mov
mov
and
mov
inc
les
mov
mov
xor
test
pop
dec
push
addr16
mov
test
fdivr
sub
hlt
jns
push
mov
aaa
jno
and
pop
ja
sbb
out
inc
mov
xor
sbb
mov
outs
test
test
xchg
scas
jl
sub
idiv
sbb
jne
cdq
jmp
in
movs
sub
pop
jae
repnz
imul
add
add
mov
push
lahf
adc
aaa
adc
and
xor
sub
scas
dec
enter
inc
pop
jns
jge
gs
adc
inc
xor
sahf
push
dec
cmp
adc
pop
xor
dec
loope
pop
or
xchg
fs
or
fimul
es
sub
and
addr16
mov
push
pop
lds
enter
jne
inc
jle
outs
mov
loope
les
loope
xor
sbb
fs
mov
xor
inc
outs
jns
repnz
adc
jle
and
stos
mov
je
retf
mov
push
inc
fstp
pop
sbb
bound
loop
cwde
mov
mov
fistp
adc
sub
adc
repnz
fs
mov
gs
jmp
push
pop
pop
addr16
and
call
(bad)
adc
fwait
adc
add
xor
cdq
pop
lea
pop
out
repz
dec
aam
dec
adc
mov
pop
inc
sbb
mov
inc
xor
mov
out
ror
mov
loop
sbb
rcr
sub
fnstsw
test
push
jb
adc
scas
and
adc
mov
dec
mov
push
sub
rol
push
mov
pop
pop
mov
shr
pop
jecxz
out
shr
inc
lods
lods
add
jae
push
and
aam
lock
adc
(bad)
mov
fs
call
(bad)
lock
shl
repnz
loop
imul
cmp
ds
push
adc
test
inc
imul
cli
ds
mov
outs
outs
xchg
mov
lock
xor
in
and
push
(bad)
push
push
(bad)
adc
inc
je
cmp
enter
rcl
icebp
mov
push
outs
(bad)
shr
pop
gs
repz
scas
mov
(bad)
out
mov
xlat
adc
icebp
ja
into
jp
cmp
pop
sub
repz
lds
xchg
cmps
repz
mov
jmp
cwde
aam
jmp
mov
push
out
enter
mov
sbb
cmp
ror
ror
mov
mov
add
push
dec
adc
inc
pusha
aaa
fmul
loop
pop
push
add
aas
inc
les
in
outs
push
xchg
call
retf
into
jne
(bad)
mov
inc
int3
mov
jl
or
add
das
popa
cmp
cmp
cmp
sbb
mov
outs
pop
hlt
and
sti
mov
(bad)
repz
sbb
push
out
leave
dec
daa
push
stc
xor
push
adc
mov
scas
mov
call
ins
add
lods
pop
mov
out
inc
ss
mov
mov
and
cmp
adc
pop
sti
retf
xor
stos
js
loopne
or
mov
sbb
scas
add
lods
ins
add
mov
cmp
mov
mov
and
mov
push
push
push
and
or
cmps
inc
pop
and
daa
cmp
dec
adc
sbb
or
mov
(bad)
into
adc
dec
inc
mov
cld
pop
dec
jne
fnstsw
xchg
sub
and
push
sbb
dec
fisub
jmp
mov
into
aas
(bad)
inc
pop
or
cmp
inc
pop
cmp
gs
fs
je
push
sbb
popf
add
and
cmp
fs
mov
push
cdq
dec
sub
inc
int
lea
jg
es
loopne
pusha
cmp
hlt
and
in
or
retf
test
or
dec
cs
enter
aas
ja
scas
ror
mov
int3
(bad)
jmp
fucomi
ud0
test
loopne
push
mov
add
(bad)
cli
inc
mov
call
mov
mov
pusha
push
xor
push
in
nop
add
ret
xor
jnp
ins
inc
inc
push
aas
in
out
leave
arpl
(bad)
adc
movs
icebp
inc
lds
add
jne
and
cmp
cmp
inc
sub
adc
dec
xchg
push
mov
out
std
outs
cmp
call
fild
xchg
lea
pop
inc
jg
cmp
xor
out
inc
jl
rcr
push
xor
push
xchg
pushf
pop
cdq
xor
dec
jo
cmp
(bad)
idiv
push
pop
xchg
int
lea
mov
iret
retf
mov
push
mov
dec
adc
push
dec
dec
xor
adc
pushf
js
dec
ja
xchg
test
call
clc
sahf
outs
lea
sahf
scas
sbb
fild
imul
jecxz
or
push
rol
lahf
cld
nop
jns
loope
bound
adc
nop
or
adc
icebp
xchg
imul
push
fnstenv
add
ret
pop
push
adc
leave
xor
sbb
mov
jmp
dec
mov
adc
iret
pop
and
mov
sbb
arpl
add
(bad)
retf
dec
lock
enter
pop
xor
mov
push
jb
movs
test
hlt
xlat
push
call
mov
and
or
ja
inc
mov
mov
mov
ins
(bad)
jmp
iret
jecxz
inc
and
push
daa
cmp
fidiv
cdq
ret
ret
rcl
sub
popa
inc
jg
scas
xlat
aad
lock
sub
ret
jle
xlat
fnstcw
add
fsincos
lahf
sub
(bad)
bound
mov
sbb
mov
add
dec
cmp
into
mov
mov
fs
sub
in
repz
loope
cmp
stos
nop
or
out
lods
xchg
cmp
jmp
lahf
rcr
setne
adc
mov
mov
adc
inc
or
add
call
mov
pushf
adc
repnz
stc
(bad)
sahf
xor
pop
cmc
in
ja
dec
mov
and
sub
mov
pop
sti
pop
inc
cmps
push
sbb
add
jg
es
cmp
stos
cmc
scas
test
mov
pop
push
pop
xor
sbb
sbb
js
cmp
sahf
pop
pop
mov
dec
mov
sbb
sub
pop
in
fidiv
pop
and
xchg
jnp
add
mov
pop
leave
fs
or
inc
fst
jnp
imul
(bad)
mov
icebp
and
adc
je
push
ret
pop
shl
cli
push
frstor
ins
cwde
mov
ret
jl
(bad)
cmp
outs
mov
mov
lea
push
adc
xchg
mov
mov
retf
int3
and
mul
int
inc
adc
xchg
mov
shl
xor
sub
jge
jle
mov
mov
dec
cmp
test
sar
sub
and
or
fst
mov
jg
mov
sbb
ja
xor
(bad)
arpl
js
data16
mov
mov
cld
(bad)
loopne
cmp
mov
mov
outs
cmp
mov
push
cmp
xor
dec
lods
jno
add
sub
jmp
seta
out
out
pushf
daa
cmp
push
jbe
call
in
imul
repz
mov
call
cmc
add
or
xor
mov
imul
cs
cmps
jmp
push
inc
push
pop
mov
int
shr
jl
adc
loopne
sbb
scas
push
xchg
loopne
adc
jnp
int3
xor
push
inc
mov
xchg
arpl
es
sbb
inc
bound
push
mov
sar
inc
ror
addr16
scas
xor
push
sub
push
jae
xchg
ins
cs
ret
push
sbb
add
sub
jb
cmps
xor
push
add
dec
je
test
and
jno
int
shl
movs
jns
pop
ret
pushf
mov
cmps
fcmovnb
jnp
sbb
shr
daa
daa
mov
jge
add
sub
test
add
lock
or
sub
js
xor
dec
sub
fs
add
das
xchg
sub
jmp
fsub
push
xor
int
mov
or
movs
dec
xchg
xor
mov
aam
loopne
and
aaa
mov
mov
es
cmp
nop
(bad)
jnp
out
mov
sahf
xchg
mov
mov
je
sar
inc
dec
mov
scas
out
iret
inc
mov
or
add
retf
ins
jmp
jbe
mov
xor
in
dec
in
sub
lahf
mov
dec
cmc
jb
xor
adc
mov
mov
out
jno
mov
stc
out
cdq
dec
mov
test
sti
daa
ss
push
loop
jle
popf
aam
std
pop
and
adc
test
cdq
or
outs
lods
jnp
mov
scas
cmp
cli
add
mov
pop
mov
dec
mov
dec
pushw
sbb
sub
dec
push
enter
ins
mov
repz
or
lds
(bad)
out
mov
retf
ror
or
bound
mov
mov
xor
adc
mov
in
outs
cmp
adc
jl
push
lahf
stc
dec
adc
cmp
push
js
rol
sbb
jnp
ins
ins
arpl
sbb
cmp
(bad)
outs
sbb
add
(bad)
push
push
mov
jae
out
and
dec
cs
pop
or
jne
stos
(bad)
retf
sub
and
addr16
test
rcl
and
jp
ins
jb
fisubr
xor
push
daa
add
add
sub
js
xor
in
mov
mov
arpl
das
push
nop
or
test
xor
pop
mov
fsubp
jecxz
xor
xor
adc
push
mov
jp
cmc
loop
mov
cmp
retf
jp
stos
or
cmp
mov
out
pop
mov
push
clc
xchg
std
movs
pop
jmp
addr16
xchg
and
jmp
mov
inc
cwde
add
mov
inc
mov
push
ins
out
xor
inc
in
mov
fwait
cmps
add
inc
mov
fidiv
dec
loope
bound
imul
inc
mov
mov
int3
dec
inc
or
movs
add
sti
mov
enter
pop
mov
in
push
lock
cmps
mov
push
jmp
push
out
imul
push
es
test
add
mov
add
mov
jmp
out
addr16
pop
stos
mov
mov
push
xchg
or
dec
mov
jmp
pop
mov
aad
or
and
arpl
test
adc
xor
ficom
aad
loopne
nop
push
out
dec
push
ins
adc
movs
mov
repz
push
aaa
xchg
sub
ret
sbb
pop
pop
outs
adc
scas
sbb
cmc
jno
je
(bad)
repz
push
sbb
push
dec
sub
adc
mov
retf
inc
fs
(bad)
mov
ja
add
int
dec
call
jns
leave
lock
mov
push
and
shld
sub
(bad)
fcmovbe
or
fisubr
lds
sbb
cmp
popf
xor
or
aaa
test
xchg
out
(bad)
or
retf
sub
xor
push
(bad)
call
lea
sar
and
push
(bad)
fcomp
out
popf
ins
cmp
fstp
mov
rcr
out
push
std
jmp
mov
in
jmp
popa
scas
cwde
outs
mov
out
sub
out
inc
in
arpl
pop
mov
test
js
dec
ss
lahf
icebp
add
(bad)
(bad)
jmp
pop
in
jno
and
sub
jo
out
and
sbb
and
mov
mov
or
aad
aad
in
mov
add
test
es
xchg
(bad)
cmp
ins
mov
ins
(bad)
fiadd
cld
in
push
inc
push
rcl
sub
adc
jne
pop
in
retf
es
mov
mov
xlat
iret
pop
xor
sub
int3
rol
or
inc
push
movs
seta
dec
and
jmp
mov
inc
(bad)
sbb
sbb
sbb
dec
std
int
imul
in
push
sub
push
mov
clc
stos
jae
sbb
cmp
cmp
repnz
cs
jnp
cmp
int
jnp
jp
aas
push
leave
loop
leave
arpl
ds
hlt
ja
pop
out
adc
inc
add
or
scas
dec
rol
pop
pavgw
push
cs
mov
push
lock
pop
in
cmc
cmp
jmp
lock
inc
and
stos
mov
jmp
mov
popf
scas
(bad)
inc
xchg
test
arpl
ja
pop
imul
ins
imul
mov
data16
mov
push
sbb
or
aaa
xchg
jle
cdq
mov
sub
aaa
cli
jge
jp
les
jl
jno
cmp
mov
cmp
xor
or
aas
pop
xor
or
xchg
fld
mov
stos
and
mov
aas
and
movs
mov
jno
test
out
jge
test
cmp
je
inc
push
cmp
push
loop
stos
lock
aaa
mov
xchg
mov
mov
xchg
scas
pop
scas
mov
push
sbb
pop
cwde
pop
xor
dec
or
out
mov
jmp
std
fsub
pop
mov
mov
or
mov
arpl
call
cmp
push
hlt
enter
hlt
mov
loopne
repz
inc
repz
and
(bad)
mov
or
push
out
cli
stc
out
aam
call
cmp
out
(bad)
lahf
push
out
cmps
mov
mov
popa
pushf
(bad)
cmps
pop
mov
xchg
in
push
inc
(bad)
add
lods
lods
and
mov
in
movs
pop
movs
adc
add
rcl
lods
pushf
mov
test
sub
or
(bad)
adc
loopne
push
arpl
sbb
gs
fidivr
bound
mov
fwait
or
dec
dec
mov
push
(bad)
fsub
ins
lea
push
ret
jle
jae
cmp
mov
lods
rcr
pusha
test
jb
int3
cmp
enter
inc
pop
ins
je
mov
ins
and
xor
aam
mov
hlt
mov
pop
pop
adc
pop
pop
or
jne
jb
retf
jg
stos
and
add
ja
inc
jmp
and
aam
jp
sbb
popa
ins
es
test
jl
out
lods
rcr
fldcw
mov
ret
and
sti
or
jbe
inc
adc
sub
rcr
repnz
es
retf
mov
(bad)
adc
pop
je
or
mov
inc
inc
adc
mov
push
js
sbb
into
mov
test
aad
in
mul
cmps
jge
jge
les
rcr
or
ficom
jg
cwde
popf
aad
fistp
add
mov
cs
inc
test
inc
fidiv
into
cmps
xchg
adc
jmp
jmp
dec
xor
xchg
mov
mov
adc
(bad)
int
hlt
jecxz
fcom
nop
(bad)
gs
out
lods
jns
jae
call
sbb
mov
push
and
adc
inc
rcr
sub
sub
cdq
mov
std
or
inc
sub
shr
sbb
hlt
int
ror
in
icebp
mov
add
dec
ret
rcl
pop
ja
inc
dec
cwde
dec
pop
xchg
mov
sti
and
push
cmp
test
scas
ds
mov
pop
push
ins
cmp
mov
push
popf
adc
lods
pop
pop
push
add
lahf
daa
pop
into
in
scas
mov
add
(bad)
mov
into
pop
jne
out
pop
xor
xor
cmps
sbb
bound
test
mov
mov
sub
sbb
or
into
push
pop
adc
fstp
adc
shr
mov
mov
out
ds
(bad)
test
(bad)
int3
sbb
adc
les
in
sbb
out
jno
cs
(bad)
shl
out
mov
mov
loopne
movs
pop
ins
mov
jne
aad
retf
add
and
js
test
jnp
cmps
ss
jp
jl
rcr
xlat
es
or
jge
push
sub
push
cwde
inc
sub
fisubr
and
aad
imul
inc
clc
loope
pop
aas
or
sbb
dec
(bad)
adc
(bad)
pop
nop
xchg
out
xor
cld
mov
adc
xor
adc
nop
call
push
fucom
mov
idiv
and
out
cmp
std
jg
xchg
mov
call
enter
inc
cdq
add
dec
loopne
inc
pop
daa
inc
xchg
ins
outs
ins
in
mov
sti
scas
cdq
retf
inc
enter
loope
or
or
pop
dec
dec
xchg
movs
data16
movs
jmp
hlt
push
xor
mov
or
add
mov
jle
jo
fisub
call
scas
fcom
hlt
cmc
cmps
jp
pop
(bad)
data16
adc
push
stos
pop
adc
jmp
lods
call
pop
inc
jo
scas
inc
mov
add
ds
test
mov
(bad)
pop
push
icebp
mov
popa
sbb
mov
xor
out
pop
mov
xor
lahf
bound
ret
mov
push
dec
push
sti
xchg
cmp
addr16
ins
cmp
cli
ret
inc
in
mov
out
cs
outs
adc
ret
popa
sbb
mov
mov
sbb
mov
sub
push
xchg
imul
fadd
ss
retf
xchg
lods
lock
sbb
cmp
into
xchg
jne
out
lahf
rcl
push
mov
jl
in
rol
adc
jg
mov
jle
nop
inc
cwde
cmp
fsubr
add
(bad)
test
xor
out
pop
xchg
js
sar
xor
mov
ficom
push
xchg
pop
mov
fdivr
loope
and
inc
imul
ds
mov
mov
loope
test
out
retf
scas
adc
rcr
mov
test
push
sub
jmp
push
mov
sub
mov
inc
rcl
call
fstp
div
sbb
sahf
outs
and
(bad)
mov
or
mov
ficomp
or
stc
mov
inc
mov
movs
jl
xchg
sti
mov
mov
cmps
cmps
sar
std
sbb
sbb
xor
push
in
jbe
pop
xor
add
or
(bad)
xchg
dec
pop
jl
push
pop
ins
imul
pushf
clc
jmp
xchg
pusha
or
cs
int
or
adc
bound
pop
mov
mov
retf
fs
in
(bad)
ja
adc
mov
inc
mov
push
pop
mov
push
fs
imul
or
aam
and
(bad)
ss
outs
mov
les
lea
mov
cmps
jo
push
rol
je
cli
sbb
fist
hlt
and
push
pop
test
xchg
retf
test
shl
test
ja
int3
add
(bad)
adc
and
pop
inc
jp
sahf
outs
shl
mov
movs
jb
rcl
mov
pop
jg
inc
aaa
aad
lea
(bad)
shl
xchg
sbb
sub
ret
(bad)
jnp
xchg
push
fmul
or
or
fisub
shl
and
mov
mov
aaa
arpl
push
(bad)
(bad)
ds
lea
enter
icebp
in
pop
pop
cmp
mov
push
call
out
je
xchg
test
mov
inc
pusha
dec
repnz
pop
(bad)
sbb
cmp
xor
push
sbb
ja
into
test
(bad)
fwait
push
aaa
in
pop
jle
dec
retf
sahf
mov
inc
hlt
pop
push
push
mov
xchg
retf
dec
push
ins
out
mov
retf
dec
xchg
movs
dec
mov
std
into
nop
push
sahf
adc
sar
push
mov
adc
inc
ja
push
push
mov
fwait
add
mov
scas
(bad)
fdivr
add
pop
sbb
dec
data16
into
xrelease
cmp
or
(bad)
jmp
push
sub
(bad)
in
loop
mov
imul
mov
jle
push
sub
clc
rcr
fwait
sbb
inc
pop
fwait
mov
lock
(bad)
xor
sar
and
jns
inc
outs
in
arpl
aas
dec
test
or
(bad)
mov
imul
leave
jno
dec
pop
sub
ins
jne
test
and
shl
pop
repnz
lahf
adc
out
jp
sub
ja
icebp
mov
mov
sub
mov
jle
aad
aad
sbb
sub
arpl
mov
out
mov
sub
fldcw
rol
in
sub
pop
xchg
push
fimul
fimul
out
mov
adc
loope
mov
aaa
pusha
jp
lea
aas
cmc
jecxz
test
cmp
adc
mov
ds
test
xchg
pop
out
mov
ds
add
jmp
xchg
xchg
xchg
adc
in
push
pop
jmp
call
pop
dec
daa
push
popf
cli
mov
cmp
test
test
add
add
pusha
and
cmps
mov
cmc
movs
retf
rcl
ss
sti
jb
fist
iret
mov
pop
push
and
out
xchg
pop
test
mov
mov
mov
sbb
stos
sbb
cld
rcr
xchg
mov
sbb
rcl
adc
push
ss
sbb
jp
cwde
pop
cdq
push
push
pop
mov
sbb
repz
pop
pop
rcl
xor
fnstenv
push
pushf
push
pop
push
mov
adc
icebp
jb
inc
and
cmp
push
xor
fidivr
sahf
pop
xchg
repz
pusha
mov
mov
add
adc
push
xor
mov
nop
xor
aas
rcl
add
imul
mov
ds
adc
dec
mov
scas
xor
cmp
in
lock
mov
sub
adc
sub
ficomp
in
dec
(bad)
dec
ja
repnz
iret
push
cli
(bad)
push
xor
call
(bad)
loopne
mov
mov
mov
out
aaa
movs
cld
dec
jmp
bound
pop
ins
mov
jge
out
mov
mov
mov
push
jmp
out
repnz
push
dec
mov
mov
or
hlt
jne
repz
lods
sub
and
in
repz
dec
mov
mov
adc
hlt
xchg
arpl
cs
aad
jns
pop
lods
in
(bad)
sbb
je
and
scas
push
cdq
stc
xchg
in
sub
dec
pop
ja
test
mov
or
das
sub
adc
xor
lods
imul
xor
shl
std
push
xor
add
sbb
cmc
mov
das
mov
mov
lods
repnz
clc
adc
in
das
sub
(bad)
jno
and
cwde
das
out
mov
cmps
cmps
fcmove
data16
not
es
sbb
jecxz
xor
jb
outs
inc
sbb
cmps
ror
xchg
(bad)
in
xor
mov
addr16
scas
mov
imul
pushf
(bad)
push
mov
jecxz
push
and
fld
jle
and
mov
lea
inc
call
(bad)
fmul
push
in
outs
aaa
pop
sbb
fist
pop
pusha
dec
and
call
push
fucom
push
gs
add
pop
movs
(bad)
and
adc
loopne
into
(bad)
xchg
sub
cmp
pop
cmp
mov
imul
jnp
dec
jb
out
sar
mov
xor
(bad)
cmc
inc
stos
mov
sub
xor
push
mov
xchg
ret
addr16
stos
cs
ror
mov
adc
sub
out
imul
ins
repz
jmp
mov
pop
sub
out
rol
push
ret
ins
int3
sahf
push
ret
or
sbb
xchg
sar
sub
dec
mov
jecxz
pop
adc
jnp
(bad)
in
mov
inc
jg
hlt
jmp
fwait
repz
lods
jle
xchg
bound
and
mov
arpl
adc
mov
jp
cmp
lds
jbe
stc
jp
loop
sar
out
cmp
fst
xchg
or
iret
pop
mov
sbb
or
cdq
ins
sti
jmp
dec
inc
ins
push
ins
xchg
sub
aam
sahf
sub
loope
outs
pop
js
mov
into
iret
cld
pop
and
inc
jnp
inc
mov
cmp
fistp
add
mov
and
ins
in
inc
jg
xor
jns
sub
pop
enter
jmp
test
and
jmp
xchg
div
mov
xor
cmps
retf
popa
adc
mov
push
stc
aaa
retf
lea
rcr
cmp
sti
jge
jbe
pusha
out
mov
fwait
rol
ds
into
cmps
jmp
push
in
cld
loope
inc
ret
int
cdq
xchg
icebp
in
out
imul
scas
fwait
inc
scas
push
repnz
adc
adc
and
hlt
imul
mov
and
dec
pop
mov
mov
mov
cmp
sti
jmp
test
pop
inc
(bad)
aaa
jge
push
push
pop
mov
pusha
push
retf
test
add
jo
cmp
push
scas
imul
xchg
pop
push
test
(bad)
pop
jae
mov
mov
mov
mov
or
pusha
pusha
xchg
and
dec
loope
add
push
repnz
cmps
fs
push
mov
pop
mov
sub
fdiv
out
imul
add
ins
mov
or
mov
pop
fwait
(bad)
les
fidiv
(bad)
mov
sbb
outs
sub
leave
ss
pop
aad
cmps
jne
xchg
push
int3
retf
inc
data16
inc
js
bound
into
rcl
and
jg
jp
pop
leave
sar
jp
es
(bad)
arpl
adc
sub
jle
jg
push
xchg
aad
jg
sub
pop
rol
cmp
pop
cs
jnp
test
pop
push
(bad)
jns
xor
jns
(bad)
pop
fnstenv
ins
jp
mov
jle
add
mov
pop
and
(bad)
jns
lea
loope
xor
pop
cmps
(bad)
pop
jne
out
dec
gs
or
cmp
mov
daa
out
xchg
mov
scas
inc
test
push
inc
mov
cdq
mov
xchg
out
mul
inc
adc
fwait
fs
mov
dec
inc
pop
jns
jns
pop
hlt
sub
mov
jne
mul
add
mov
mov
dec
and
movs
mov
inc
sti
sti
push
and
scas
imul
push
aaa
jno
test
push
sub
pause
sub
imul
lea
mov
aam
scas
mov
pop
inc
pop
pop
mov
mov
push
pop
mov
cdq
or
mov
pop
sub
loopne
mov
ret
or
cld
mov
mov
outs
mov
sub
cmp
and
dec
cwde
into
mov
sbb
jno
inc
js
adc
in
xchg
ror
ins
fisub
ret
popa
pop
sbb
mov
jns
xlat
dec
pop
(bad)
into
test
sbb
cmp
enter
push
push
movs
mov
retf
cmp
call
int
stc
stos
and
aam
jp
jmp
dec
es
cs
call
lock
cmc
sar
aam
aam
repnz
pop
shl
lock
xlat
xchg
iret
ss
mov
sti
fld
add
mov
fcomp
jl
cli
cmc
pop
mov
icebp
popf
xor
iret
add
imul
and
repnz
cmp
lock
in
ror
cmp
icebp
imul
out
sub
scas
fmul
mov
in
lods
xchg
pmaxub
in
out
jmp
inc
jne
push
cdq
aam
xor
or
xchg
inc
push
repnz
and
mov
jg
sbb
or
out
cmp
mov
xlat
fisub
xlat
shl
dec
sub
and
hlt
rcl
movs
cmps
xchg
pop
(bad)
jno
push
hlt
cld
inc
stos
arpl
sub
sar
mov
int
lods
js
leave
add
lods
pop
repz
outs
add
fwait
(bad)
xor
loope
repnz
inc
lock
push
icebp
pop
pusha
ins
(bad)
jbe
fs
push
or
fdivr
bound
fwait
mov
call
fidivr
mov
jle
in
jmp
mov
pop
jmp
imul
loope
inc
fcmovnb
imul
cmps
rcr
push
sbb
outs
ret
cmc
inc
les
sub
mov
dec
jmp
xlat
test
leave
fsub
pop
jnp
dec
jne
icebp
cs
add
lock
inc
aam
dec
or
jp
xchg
jp
jnp
pop
es
and
shl
scas
add
xchg
jae
jg
cmp
movs
add
sub
leave
add
mov
cmps
or
xor
dec
xchg
add
xor
into
xrelease
xchg
rcr
jns
mov
xchg
and
mov
in
js
repnz
aaa
aad
cmp
inc
or
cmp
(bad)
(bad)
xor
pop
cmp
daa
jg
push
jmp
cmp
xchg
lahf
inc
add
es
push
xchg
jl
sub
sti
mov
sub
cdq
shl
out
add
adc
or
movs
aad
sahf
adc
test
in
imul
jae
mov
xor
inc
dec
cmp
and
or
push
lods
sbb
cmps
ja
test
sbb
push
or
dec
add
push
sub
enter
xchg
in
add
push
iret
pop
jecxz
scas
scas
ret
add
test
push
mov
xor
pop
cmp
cwde
pop
sbb
mov
mov
mov
inc
bound
cmp
push
std
sti
add
mov
inc
adc
inc
daa
imul
out
xlat
mov
imul
dec
or
lock
ins
mov
dec
ret
sub
xor
outs
sbb
lock
leave
rcr
push
mov
lods
inc
adc
fcom
jne
retf
fistp
out
cmp
fst
pop
test
cli
jne
out
fxch
loop
mov
js
sub
add
pop
and
test
mov
daa
jg
addr16
lods
inc
rcr
and
xor
aad
iret
shr
mov
adc
aaa
pop
jb
inc
rcl
dec
movs
xor
pop
jo
xor
inc
test
mov
adc
fild
sar
mov
sahf
loope
jo
aaa
adc
mov
in
cmp
mov
nop
test
cmp
and
call
mov
mov
lahf
sbb
xchg
lds
cmp
sbb
out
mov
fadd
pop
mov
repnz
ins
cdq
pop
sahf
cmp
inc
hlt
repz
stos
retf
pop
mov
lds
test
stc
adc
xchg
push
movs
imul
outs
and
cmps
or
aam
out
mov
call
add
mov
fwait
add
add
mov
pop
popa
dec
jl
cld
push
pusha
pop
jg
inc
pop
jmp
or
in
cmps
into
enter
stos
or
sub
mov
fisubr
or
out
adc
iret
data16
clc
scas
mov
je
jo
jnp
push
mov
push
rcr
shl
fst
(bad)
cmp
and
int3
stos
sbb
test
jo
pop
rol
adc
jae
mov
dec
pop
mov
sub
jmp
add
scas
int
or
and
out
jp
mov
xor
jl
xchg
jl
push
repz
xlat
shr
jmp
pop
adc
jg
js
into
leave
pop
add
sub
adc
loope
mov
les
or
push
fdiv
cli
inc
mov
mov
inc
jmp
cmp
retf
loopne
shr
lea
ins
jecxz
inc
push
cmp
and
stos
call
cmp
sub
out
cli
sbb
push
test
pop
jmp
sahf
xchg
sub
std
in
leave
(bad)
mov
ret
cwde
lahf
and
fwait
xor
dec
icebp
cmp
popf
adc
repz
leave
dec
ja
lods
lahf
push
pop
psadbw
fmul
xor
nop
dec
cdq
pop
hlt
movs
loopne
xlat
cli
out
mov
adc
std
and
pop
push
retf
scas
aas
test
loope
(bad)
push
pop
std
(bad)
xchg
push
or
bound
lods
inc
pop
ret
mov
xor
pop
mov
jp
or
sub
pop
or
jo
ja
push
or
xor
xor
or
fisubr
mov
shr
outs
mov
mov
cmc
xor
mov
mov
sar
out
(bad)
je
ret
pop
xor
jo
mov
(bad)
push
dec
sbb
xor
jb
icebp
mov
aas
mov
push
out
outs
int3
je
aaa
mov
je
adc
(bad)
push
int
ss
jns
mov
iret
xchg
outs
fisub
nop
out
sbb
cmp
pop
jle
and
aam
leave
sahf
sub
std
cmp
les
in
xor
gs
rcr
dec
test
(bad)
xor
dec
out
xchg
fisubr
mov
push
push
ss
xor
xchg
cmp
imul
pop
adc
cmp
dec
pop
out
xor
jbe
(bad)
jmp
add
rcl
sahf
pop
inc
test
outs
inc
out
stos
adc
inc
idiv
mov
xchg
dec
into
inc
pop
xor
or
dec
adc
xor
dec
cmp
mov
jnp
mov
xchg
pop
movs
or
ja
movs
jmp
xor
cld
movs
sbb
push
push
add
test
in
ret
(bad)
xchg
nop
mov
stos
or
dec
push
jbe
sub
ins
cmp
leave
scas
fimul
subps
sbb
outs
add
or
xchg
lea
and
pusha
and
mov
loope
push
or
aas
inc
pop
mov
or
mov
bound
scas
or
and
pop
and
rol
add
ret
dec
push
sbb
or
outs
xor
mov
push
xchg
jmp
jno
je
(bad)
js
nop
shr
(bad)
mov
xor
pushf
ds
jbe
fdivp
int3
jmp
js
cmp
iret
inc
xlat
jl
pop
lds
pop
mov
rol
popf
daa
jecxz
add
add
stc
icebp
dec
sub
sub
xchg
sub
sub
int3
leave
sub
lods
fdivr
outs
test
int3
dec
fcmovne
lods
sub
xchg
sub
xlat
xor
mov
fwait
dec
adc
ss
pop
mov
sahf
cmp
in
in
pop
cmp
mov
out
out
cmp
pop
xchg
lea
out
pop
aad
jmp
mov
or
add
dec
inc
dec
mov
call
icebp
inc
mov
mov
dec
cdq
jo
lahf
pusha
and
cmp
(bad)
pushf
mov
movs
dec
fimul
sub
mov
loope
adc
jecxz
xchg
ret
cld
enterw
lods
add
add
sub
ror
push
mov
leave
mov
lds
jb
pop
sub
xor
xchg
mov
jo
or
pop
xlat
pop
jbe
mov
ins
xchg
adc
popa
push
and
fnstcw
or
and
mov
loope
sahf
test
(bad)
push
adc
gs
inc
add
nop
push
nop
repz
rcl
and
adc
mov
je
out
arpl
sub
icebp
xchg
sbb
cmc
jno
jg
(bad)
pop
adc
sbb
out
jle
xchg
push
pop
and
inc
jbe
fisub
add
js
inc
(bad)
into
and
cmps
and
aam
jnp
scas
push
daa
test
sub
test
push
or
cwde
jle
aad
adc
sub
jmp
or
xor
shl
xchg
test
ret
in
mov
sbb
cli
inc
jl
and
rol
cmp
mov
sbb
loope
lock
stos
lea
jnp
cmp
call
xchg
cmp
pop
repnz
pop
xor
call
sub
adc
in
mov
push
inc
mov
ss
cmps
jecxz
in
cdq
fwait
clc
inc
les
cdq
daa
or
out
mov
cld
jp
cwde
xchg
pop
repnz
jno
dec
push
adc
cmc
pop
popf
bound
imul
sbb
dec
lock
jmp
out
jne
stc
out
adc
cmps
xchg
(bad)
ins
cld
imul
adc
das
test
stc
mov
sub
shr
rol
lods
xlat
or
add
sti
cmp
mov
add
add
mov
or
jg
scas
push
pop
mov
repnz
mov
mov
push
fs
jno
sub
lock
gs
mov
mov
adc
adc
mov
inc
cmp
and
push
outs
lahf
fsubr
mov
sbb
mov
inc
sbb
jmp
mov
lds
and
and
movs
outs
jbe
pop
dec
int3
pusha
sub
and
lods
lock
fst
and
xor
rol
jno
cmp
jge
xor
sar
rcr
jg
push
(bad)
mov
mov
sbb
sbb
push
loop
mov
ret
shl
xor
addr16
xor
mov
xor
xchg
and
out
fild
or
adc
dec
enter
push
out
mov
adc
jae
push
cmp
call
test
fist
mov
xchg
jl
retf
mov
jmp
xchg
ds
movs
mov
xchg
jl
add
mov
arpl
inc
call
test
mov
pushf
or
dec
cwde
xchg
or
or
imul
cmc
stos
dec
cli
cmp
mov
popa
in
pop
mov
ds
gs
enter
push
sahf
test
cmp
cmp
dec
fisubr
sti
mov
cwde
or
dec
mov
mov
stc
stc
xchg
gs
xchg
outs
inc
movs
xchg
and
sti
adc
mov
mov
cmps
or
imul
cmp
stos
cmp
rcr
xchg
cmps
lods
push
pop
lahf
add
movs
sti
pop
jl
fsubr
xor
pop
adc
jl
pop
lds
xchg
popf
mov
idiv
or
cmp
pop
mov
scas
pop
or
popa
and
out
jmp
les
outs
sbb
pop
mov
pop
or
fisttp
mov
nop
add
imul
lods
adc
call
dec
dec
sbb
ds
les
out
sbb
das
mov
popa
out
sbb
scas
outs
push
leave
pop
es
add
xchg
jne
and
retf
jecxz
xlat
and
lods
mov
into
push
ss
imul
jp
mov
and
pop
sub
in
sbb
cmps
jle
aas
or
xchg
shr
xchg
sub
add
mov
cmps
cs
lea
das
mov
fnstsw
inc
mov
xor
outs
aas
mov
mov
xor
cmp
mov
fimul
jecxz
popf
into
cmp
outs
scas
(bad)
jnp
adc
push
fidiv
add
xor
pop
ds
cmp
fldl2e
pop
test
inc
pop
arpl
xchg
push
sbb
test
mov
cdq
out
pushf
out
repnz
inc
aaa
loopne
or
icebp
mov
mov
push
dec
dec
mov
mov
mov
outs
int
mov
or
lds
dec
sub
sub
cmps
or
fwait
int
mov
scas
test
add
lods
arpl
popf
pop
sbb
scas
mov
loopne
ja
rcr
cmps
mov
pusha
add
sbb
gs
aaa
test
mov
or
test
in
out
ja
(bad)
or
fbld
mov
mov
shl
adc
leave
mov
add
shr
dec
adc
shr
nop
ror
shr
mov
sbb
adc
shl
jb
xor
enter
push
(bad)
mov
sbb
or
jnp
(bad)
mov
cmp
pop
add
movs
and
outs
jmp
sub
fs
js
rcr
push
enter
jmp
sub
and
add
sub
ja
mov
xor
das
in
xor
test
adc
arpl
xor
push
push
mov
popf
js
xchg
in
xor
sub
loopne
mov
push
lea
inc
inc
jecxz
mov
mov
or
popa
lds
loop
out
popf
out
pop
call
adc
into
ret
mov
lea
push
scas
xchg
call
lock
jne
adc
jmp
push
inc
cmps
clc
jne
popa
aas
xchg
icebp
sbb
mov
popf
xchg
adc
repz
pop
sbb
or
pop
idiv
or
mov
scas
add
dec
push
add
sti
loopne
inc
push
fwait
sbb
mov
adc
int3
test
inc
jg
push
std
lds
lods
mov
push
jae
cs
movs
daa
xlat
pop
pop
outs
clc
mov
mov
pop
aad
cmp
inc
pop
mov
mov
push
rcr
mov
pop
loope
aaa
movs
add
jmp
push
mov
test
data16
movlps
sub
cmc
jae
mov
mov
xchg
imul
sar
xlat
pop
inc
cmps
rep
push
std
pop
les
inc
cmp
int
pop
jo
fiadd
sbb
dec
ret
jb
xchg
in
in
fild
jne
fs
retf
push
mov
nop
ja
dec
mov
push
sahf
aad
(bad)
jns
and
rcl
mov
jl
hlt
jle
mov
cmp
sub
push
sbb
mov
sub
fstp
xchg
int
test
test
sbb
fdiv
popa
das
xor
into
jbe
test
xchg
xor
jp
mov
or
ss
jae
lea
cmp
mov
xor
(bad)
das
jnp
in
movs
lds
mov
xchg
push
push
or
rcr
xchg
inc
or
jmp
xchg
cwde
iret
shr
push
push
hlt
inc
sbb
cdq
and
pop
inc
ins
xor
icebp
iret
xchg
lds
(bad)
loope
dec
or
hlt
add
daa
dec
mov
imul
scas
lea
test
clc
js
jmp
mov
push
ss
xlat
xchg
into
jne
dec
adc
mov
out
test
test
jno
adc
lods
sub
sub
or
mov
pop
mov
stos
es
mov
dec
data16
xchg
xchg
jnp
mov
mov
xchg
or
int3
punpckldq
adc
loope
sub
xchg
mov
sahf
mov
pop
cld
idiv
mov
pop
mov
loopne
call
gs
inc
add
or
(bad)
sbb
xchg
arpl
(bad)
xchg
es
int
xor
or
jne
test
test
jbe
gs
xchg
ja
mov
(bad)
and
(bad)
hlt
jns
mov
cmp
test
jnp
fnstcw
mov
aam
ins
push
sub
and
add
inc
xlat
sti
cmp
sub
out
test
das
mov
test
sahf
adc
das
int3
xor
mov
dec
jno
mov
int3
mov
int3
push
(bad)
loopne
push
hlt
ss
xchg
adc
adc
pop
cmp
dec
jnp
adc
mov
xchg
sub
call
xor
inc
xchg
call
inc
in
test
in
inc
pop
in
inc
xor
xor
jmp
cmp
jecxz
icebp
cli
inc
mov
popf
cmp
(bad)
repz
pusha
sbb
mov
cmp
sahf
test
mov
dec
mov
dec
add
add
mov
mov
fisttp
push
cld
pop
aad
cmp
ficom
lods
fcomp
add
mov
rcr
pushf
scas
cmc
or
pop
outs
mov
mov
fistp
pop
ror
cmp
mov
mov
pop
xchg
or
mov
push
out
xchg
xchg
add
ret
mov
push
push
ins
fs
xchg
mov
cdq
push
retf
push
lock
push
std
xor
add
dec
ja
popa
mov
imul
sar
rcl
push
test
ins
(bad)
in
adc
dec
xor
jo
shl
es
sbb
dec
mov
enter
push
stos
inc
sbb
test
retf
adc
pop
and
aaa
xor
cmps
int
ret
mov
jecxz
mov
pop
shl
mov
inc
jl
inc
ror
aad
jle
cmp
aam
popa
jmp
rol
sub
dec
adc
xor
sub
fnstcw
(bad)
mov
push
sub
test
std
fist
loop
mov
pop
fimul
xchg
cmps
mov
and
ss
inc
pop
lea
inc
cmp
cmp
pop
and
ret
adc
push
jmp
push
mov
sub
jb
inc
inc
cwde
xchg
xchg
add
mov
int
xlat
inc
stos
nop
repz
push
sti
pop
out
shl
push
fwait
adc
sahf
inc
xchg
inc
mov
repz
std
dec
jg
sbb
inc
xchg
jbe
test
jmp
movs
add
pop
sti
or
and
(bad)
jne
cmps
gs
popa
std
test
test
and
(bad)
jmp
shrd
dec
pop
icebp
mov
mov
push
pop
(bad)
xchg
retf
mov
fldlg2
push
lods
inc
or
cmps
das
mov
out
push
or
push
cwde
mov
mov
or
popa
imul
sbb
ins
in
inc
fs
addr16
dec
mov
ret
mov
or
imul
dec
adc
pop
jp
shl
leave
ins
mov
jnp
sbb
call
xchg
imul
(bad)
jb
lea
push
push
in
je
push
xor
in
push
ja
cmp
int
ins
sahf
and
mov
fcmove
movs
xor
and
xor
sub
mov
push
int3
sub
cmc
jmp
push
push
or
jbe
mov
xchg
das
jno
mov
and
icebp
xor
outs
xor
cmps
mov
js
mov
ins
mov
mov
cmp
cmp
mov
cmp
cmp
out
mov
or
jmp
jbe
repz
mov
jg
xlat
cwde
pop
mov
pop
inc
and
fwait
icebp
push
icebp
nop
sar
and
popf
call
test
sti
lahf
sbb
jns
dec
lods
mov
ja
test
movs
gs
cli
sub
or
cmps
cwde
jns
std
gs
jbe
loop
xchg
test
jle
aam
leave
(bad)
repnz
push
sub
add
cmp
scas
sar
jge
sub
call
jecxz
push
movs
inc
add
mov
in
or
lea
retf
pusha
shl
(bad)
fldenv
adc
fs
ficom
add
jb
push
pusha
cwde
data16
mov
adc
in
mov
imul
ror
mov
ins
mov
add
mov
sub
sub
jge
jo
cmps
stos
xchg
jb
cli
mov
les
rcr
mov
lods
adc
test
aaa
and
sub
ja
jp
int
mov
mov
iret
gs
stc
and
aaa
add
push
push
sub
cmp
aas
leave
sub
mov
xlat
mov
sbb
mov
call
mov
in
rcr
mov
adc
gs
pop
xor
idiv
sbb
loopne
test
mov
add
pop
jl
cmp
inc
(bad)
ins
int3
(bad)
in
xor
cmp
pop
lods
xchg
sahf
vmovntdq
out
cmp
ins
mov
jmp
ja
and
xchg
in
inc
lea
cwde
das
sbb
out
mov
push
inc
adc
cmp
test
pop
icebp
jne
jg
sbb
mov
dec
ret
dec
cli
lahf
data16
mul
inc
mov
jo
movs
dec
ja
ret
push
call
push
push
fisubr
leave
inc
dec
std
cmps
cmps
outs
push
dec
retf
(bad)
xor
call
(bad)
push
idiv
adc
jp
cmp
push
scas
call
neg
mov
and
stos
out
push
pop
popa
adc
or
mov
xor
rcr
push
push
imul
mov
imul
jbe
mov
pop
stos
mov
movs
retf
pusha
adc
mov
ficomp
jb
cwde
or
ins
outs
mov
cld
sbb
push
jo
push
cmp
push
add
js
mov
push
add
in
fldenv
add
cmps
dec
daa
and
fisub
addr16
lods
jns
(bad)
into
iret
into
out
in
and
push
jle
rcr
dec
sub
into
outs
jle
adc
aam
xor
or
cmc
(bad)
fild
sub
pop
in
fxch
adc
push
adc
pop
fnstenv
adc
cli
xchg
push
sar
adc
mov
pop
inc
popf
mov
dec
pop
xchg
scas
jo
sub
je
jno
retf
sub
out
or
fisub
jge
add
pop
and
mov
rcl
mov
xlat
jo
jge
aas
imul
push
(bad)
jp
pop
cld
aaa
sbb
inc
pop
jo
outs
pop
ja
push
dec
fs
inc
addr16
xchg
and
popf
mov
mov
pop
(bad)
lahf
cmp
sub
lds
ss
dec
mov
dec
xchg
inc
add
test
mov
int3
mov
mov
mov
ss
ins
push
dec
test
mov
xor
xchg
bound
push
imul
sbb
es
inc
and
dec
push
stos
push
jb
inc
pop
pop
pop
cwde
fisub
jl
pushf
push
addr16
inc
xor
sub
xchg
call
in
mov
xor
stos
cmps
cs
push
and
and
ds
cmp
pop
pop
xchg
and
lds
adc
cmp
xor
js
push
add
pop
jae
jne
jbe
dec
pop
imul
ja
popa
ds
or
sti
(bad)
inc
mov
not
jnp
test
ror
mov
aaa
icebp
sbb
fdivr
and
pop
fild
mov
fcomp
shr
dec
adc
lds
push
out
xchg
repz
push
fisubr
jle
clc
imul
aas
dec
pop
cwde
mov
retf
push
in
ret
int3
cld
and
in
mov
les
dec
mov
mov
dec
int
mov
inc
popf
outs
imul
push
xor
xchg
cmp
mov
das
dec
stc
mov
ins
dec
outs
push
pop
jl
test
ss
int
jnp
pop
es
cmc
ins
inc
popf
jae
dec
aas
aad
push
mov
mov
xchg
dec
mov
cli
fbld
inc
imul
sub
enter
add
sub
lea
jbe
and
sub
or
xlat
(bad)
mov
ds
imul
mov
mov
push
out
push
sbb
adc
into
js
shl
or
dec
sbb
mov
sub
mov
in
test
xchg
fist
xor
mov
mov
cmps
xor
mov
jg
mov
popa
test
inc
aaa
rcl
dec
mov
mov
sub
and
movs
jae
outs
sti
lock
sub
ja
outs
(bad)
push
aaa
xor
adc
test
mov
hlt
(bad)
pop
call
daa
pushf
loopne
xchg
adc
fadd
out
ja
cmp
(bad)
xor
test
in
aam
int
cli
adc
xor
int3
xor
nop
pop
mov
sub
mov
xor
add
jno
or
inc
and
dec
out
inc
push
arpl
add
jp
pop
xor
test
inc
daa
jge
add
out
daa
push
dec
loopne
addr16
jmp
inc
(bad)
das
popa
dec
push
jmp
sbb
mov
leave
inc
sbb
push
lock
icebp
aaa
inc
sub
xchg
jle
movs
pop
xchg
and
push
push
pop
nop
xchg
hlt
mov
jmp
xchg
adc
aam
push
mov
or
mov
sbb
fadd
inc
push
gs
push
data16
xlat
push
xchg
mov
jne
dec
pop
xchg
sub
jae
mov
jl
xor
push
out
and
enter
call
dec
push
daa
cmp
test
push
xchg
mov
jae
jno
inc
in
stos
es
adc
xor
cld
jnp
fwait
push
ret
into
in
push
or
xabort
or
movs
ins
add
inc
adc
test
cmp
xor
xchg
jg
retf
fldenv
cli
loope
mov
inc
(bad)
inc
out
stos
test
fnstcw
mov
dec
sbb
leave
pop
cmovns
sahf
adc
rcr
jle
btr
xchg
lods
pop
std
sahf
push
adc
jmp
clc
mov
push
popf
mov
jecxz
xor
movs
sub
fimul
test
(bad)
daa
fisttp
push
(bad)
test
pusha
popa
daa
in
sbb
shl
sub
mov
pop
add
mov
or
push
pushf
mov
cmps
push
std
dec
pop
out
loop
mov
aad
sub
jp
xor
movs
dec
mov
cli
stc
or
imul
pop
js
push
pop
mov
push
in
push
aad
jne
neg
fld
add
mov
js
push
jmp
xor
push
mov
loope
sbb
jecxz
and
cli
push
xor
leave
fldenv
popa
icebp
xchg
cmp
pop
sub
pop
fisttp
xchg
mov
push
jmp
mov
dec
repz
pop
cmp
sub
or
inc
sub
dec
loopne
(bad)
jmp
les
ja
out
stc
stos
rcl
push
fistp
vpunpckhwd
aaa
mov
loop
cli
mov
adc
lods
cmp
mov
rcl
ins
rcr
xor
adc
dec
sub
sbb
xchg
(bad)
in
dec
rcl
movs
jl
xchg
push
ret
fwait
adc
xchg
pop
leave
mov
adc
retf
cmps
test
mov
push
stc
repnz
push
call
in
jge
std
xor
inc
movs
aas
jecxz
sbb
dec
cmps
xor
or
inc
push
xchg
and
add
ret
fwait
jmp
xchg
xor
in
mov
push
jecxz
add
jno
pop
out
sbb
test
dec
add
or
pop
aaa
stos
xor
sub
stc
cmc
ja
jmp
mov
cli
imul
jle
adc
bound
sbb
scas
mov
mov
shr
in
cmps
cmp
add
xor
sbb
jle
dec
retf
nop
mov
ret
cmp
in
repz
sbb
out
fild
mov
mov
in
mov
cmp
cld
push
xor
outs
mov
aaa
sub
addr16
pop
jecxz
push
cld
sar
sbb
add
sbb
enter
ja
jbe
xor
and
dec
adc
dec
xor
or
mov
pop
es
cdq
aam
inc
sbb
outs
push
loop
fiadd
xor
repz
je
out
retf
pop
fisttp
imul
dec
mov
mov
or
add
cld
adc
icebp
or
jo
jo
fiadd
jnp
mov
mov
ja
xor
test
gs
scas
xor
clc
mov
mov
and
rcl
(bad)
mov
ficom
fidivr
mov
int3
mov
fsubr
js
aam
xor
(bad)
dec
xor
repz
dec
stc
inc
addr16
(bad)
out
dec
pop
(bad)
sub
bound
retf
pushf
fs
repnz
les
icebp
sub
data16
div
das
mov
inc
dec
inc
movs
jbe
jnp
mov
sub
cmp
and
sub
push
and
sti
pop
mov
push
add
loop
jnp
popf
dec
test
add
cmps
mov
xchg
xchg
xchg
push
cmps
les
ror
sbb
xchg
xchg
pop
lods
mov
push
mov
lea
sbb
outs
movs
push
(bad)
jle
pop
add
(bad)
mov
loop
call
dec
loope
sub
push
ins
or
aas
pop
add
mov
sub
cmp
jno
cmc
push
xchg
or
adc
fisttp
mov
dec
nop
addr16
enter
fadd
xchg
mov
adc
jnp
jp
(bad)
stc
xor
pop
cmc
push
or
cmp
mov
sub
and
dec
int3
test
inc
ins
iret
fwait
(bad)
mov
dec
pop
sbb
(bad)
in
mov
mov
scas
xchg
mov
jbe
sahf
imul
sbb
scas
xchg
mov
hlt
mov
inc
loop
adc
shl
dec
and
adc
or
lods
and
xchg
ins
add
push
xchg
xlat
adc
call
cmp
out
test
xor
sbb
lea
cmp
xchg
xchg
push
bndldx
lods
xchg
jbe
hlt
mov
adc
icebp
mov
out
arpl
inc
fisttp
pusha
jnp
mov
gs
rcl
mov
inc
inc
mov
loope
outs
pushf
aam
lds
cs
mov
push
ss
loop
cdq
pop
cmp
cli
dec
xor
add
push
mov
loop
ins
out
(bad)
addr16
(bad)
pop
jb
rcl
jbe
jecxz
in
fs
retf
mov
sub
(bad)
pop
push
rcl
outs
pusha
loop
push
mov
sbb
clc
les
push
out
stos
repnz
sbb
repnz
pop
sbb
xor
iret
xchg
mov
xor
push
or
inc
pop
sbb
cld
jno
add
enter
ficom
and
fstp
nop
xor
mov
out
and
inc
cmp
push
jp
sub
push
sbb
sbb
mov
pop
xor
hlt
sbb
sbb
ds
mov
daa
and
mov
test
leave
(bad)
inc
movs
add
pop
xchg
stos
fistp
adc
nop
xchg
out
test
adc
mov
and
call
mov
sbb
mov
cld
pop
cmp
adc
inc
sub
or
mov
iret
dec
aad
and
dec
push
loop
fmul
push
test
mov
sub
cli
out
adc
mov
fnstenv
clc
mov
jmp
fdivr
push
inc
rcl
bound
leave
lock
pop
jno
mov
repnz
loop
inc
sbb
into
inc
call
push
ror
call
and
fnstcw
xchg
(bad)
push
adc
mov
add
add
(bad)
mov
and
cli
aas
mov
pop
xchg
mov
inc
jge
movs
fist
xchg
fwait
movs
jmp
sahf
fstp
push
call
std
repz
mov
hlt
pusha
mov
aad
jno
fidivr
idiv
mov
add
outs
dec
sub
hlt
sub
clc
mov
push
adc
pop
cmps
int3
adc
fs
jno
dec
mov
addr16
cwde
pusha
mov
popf
sub
sub
sub
mov
jns
rcr
int3
test
aam
popf
inc
sbb
adc
(bad)
lods
mov
ja
cmp
pop
xor
push
xchg
daa
ss
push
mov
mov
sbb
mov
and
xor
mov
dec
(bad)
jge
fstp
sahf
sbb
stos
mov
pmulhuw
scas
xchg
mov
and
xor
adc
mov
add
dec
loopne
rol
stos
das
dec
mov
xchg
sub
inc
sub
pushf
jecxz
jg
aas
inc
xor
imul
and
and
mov
sahf
inc
xor
mov
(bad)
inc
retf
movs
lds
sbb
bound
pop
enter
into
xchg
daa
and
cli
push
add
in
ret
test
(bad)
icebp
xchg
ret
sub
in
retf
jmp
ds
ffree
push
dec
xchg
inc
sbb
xchg
jl
stos
add
and
movs
mov
int
xor
sbb
sti
xor
ins
xor
les
cdq
inc
repz
outs
dec
call
or
enter
sub
jg
mov
retf
jmp
push
lds
jmp
cmp
(bad)
(bad)
ja
cmp
(bad)
xor
and
popa
ins
and
jo
pop
push
mov
aad
and
xchg
push
daa
cmps
mov
dec
cld
fwait
cmp
out
rcr
cld
dec
adc
jg
mov
ins
ret
pop
int3
and
add
push
dec
inc
mov
retf
aaa
imul
xor
jmp
and
arpl
push
je
add
imul
jne
push
dec
push
pop
mov
lods
push
clc
pop
and
in
cmps
adc
cmp
lock
cli
fs
push
jmp
arpl
push
and
jne
les
pusha
pop
jge
retf
rol
es
mov
fwait
and
or
fisttp
cmps
dec
or
int
mov
sbb
ror
fimul
and
leave
pop
or
ret
mov
(bad)
fs
push
adc
pop
sar
inc
pop
hlt
sbb
aas
call
lea
mov
mov
lds
mov
xor
mov
push
outs
sub
rcr
xor
lds
fiadd
sti
mov
fwait
loopne
cmps
push
daa
mov
rcr
xchg
call
popa
sub
(bad)
jp
xchg
icebp
ret
stc
adc
stos
adc
add
cmp
or
scas
add
mov
(bad)
sub
add
pusha
(bad)
ficomp
ror
into
ss
add
pop
jmp
push
out
pop
adc
mov
inc
lea
fmul
cld
pop
shl
jmp
jl
cmp
jp
pop
inc
shl
in
sti
mov
push
(bad)
push
adc
ret
(bad)
cs
push
jmp
int
dec
enter
js
cli
jmp
cmp
in
fs
inc
pop
sub
out
xchg
mov
add
or
repnz
mov
adc
mov
mul
dec
mov
int3
mov
sub
xor
pop
or
adc
xchg
movs
iret
xchg
mov
mov
(bad)
push
inc
and
cmps
add
(bad)
mov
clc
pop
stos
xor
jge
in
test
lods
bound
loope
sbb
mov
inc
add
or
mov
mov
retf
dec
jmp
cmc
(bad)
or
mov
sub
mov
fs
loope
xchg
bound
aam
adc
fs
push
mov
inc
push
pop
addr16
cdq
jp
mov
daa
mov
mov
movs
sti
and
inc
ret
arpl
(bad)
iret
test
push
cmps
les
sbb
movs
call
(bad)
jge
sub
repz
(bad)
pop
imul
(bad)
repnz
addr16
and
hlt
ja
xchg
cdq
rol
mov
jl
paddw
jb
push
sub
jecxz
aad
sub
sbb
(bad)
in
pop
test
sub
add
sbb
jnp
mov
cmps
lods
xor
in
into
mov
adc
fisttp
push
loope
dec
jne
push
xchg
xchg
lea
xor
cmp
dec
repnz
jbe
sbb
mov
dec
pop
xchg
sbb
jg
(bad)
or
xchg
sub
push
inc
xor
sub
in
mov
ins
inc
enter
and
out
ds
fwait
mov
push
repnz
cmp
push
sahf
in
jb
mov
pop
mov
push
lahf
(bad)
not
in
dec
mov
mov
xchg
sub
dec
cmp
adc
mov
adc
mov
std
scas
sbb
push
imul
add
xor
cdq
add
ret
cmps
or
scas
bound
add
xchg
push
pop
fcomp
aas
mov
and
pop
out
push
inc
pop
lea
push
xor
pop
retf
mov
and
xor
xchg
adc
ds
mov
mov
add
mov
es
xchg
stos
rol
imul
pop
mov
imul
jns
push
xor
dec
or
pop
pop
push
dec
xor
loope
mov
push
cld
add
loopne
jge
fistp
bound
iret
xchg
icebp
or
out
cmps
xor
mov
fst
stc
or
aas
sub
lea
outs
add
mov
mov
repz
cs
cmp
push
xchg
and
jns
fisttp
cmp
push
xlat
fsubr
or
(bad)
aas
(bad)
fs
xchg
sub
inc
clc
cmp
out
outs
mov
sub
or
lahf
call
adc
outs
lea
mov
lahf
inc
cld
iret
cmc
add
dec
mov
shl
clc
xor
push
dec
in
pop
jbe
test
xchg
cli
arpl
mov
cmps
fnstcw
cld
xchg
mov
ds
lds
mov
add
addr16
mov
add
add
cmp
pop
loop
imul
sbb
shl
xchg
movs
adc
jne
xor
repz
and
or
pop
enter
push
and
jo
outs
rcr
push
sub
test
inc
jne
pop
pop
push
stos
shl
stos
add
jne
lods
add
push
add
dec
push
scas
xor
(bad)
xchg
pop
stos
sbb
(bad)
pop
and
sbb
jg
pusha
or
or
or
push
mov
mov
mov
and
outs
inc
mov
in
xchg
inc
test
pop
mov
adc
shr
imul
pop
sub
ins
add
outs
ret
xchg
sbb
mov
xor
cmc
sbb
xchg
aaa
(bad)
pop
ficomp
fisub
jp
xchg
addr16
leave
push
scas
mov
jne
cmp
retf
add
arpl
mov
test
in
shl
sub
es
jno
jge
mov
dec
sub
inc
ins
jg
mov
sub
sbb
cmp
out
xor
in
xor
fisub
ret
sbb
dec
(bad)
xchg
xchg
cld
mov
sbb
xor
jg
and
cmc
les
imul
cmp
adc
nop
loope
dec
out
mov
mov
int
into
mov
adc
dec
inc
mov
(bad)
je
das
sbb
mov
movs
stos
fsubr
pusha
icebp
stc
inc
sbb
sbb
lds
dec
or
sahf
pop
push
mov
dec
jge
loop
cmp
add
rep
and
mov
and
mov
mov
sti
push
push
in
push
adc
test
mov
push
push
inc
xor
cld
inc
cwde
add
add
shl
xchg
and
aaa
retf
xchg
adc
imul
cmps
push
aaa
in
popa
gs
xor
pop
sbb
jbe
es
out
test
sub
push
adc
cdq
push
ins
add
shl
cmp
repz
ss
pop
adc
clc
ja
aad
fwait
push
ja
aaa
fs
rcr
stos
jmp
xor
cld
rcr
push
sub
mov
lahf
or
and
mov
xchg
xchg
mov
clc
in
daa
retf
pop
pop
rcl
and
js
cmc
inc
push
jnp
(bad)
pop
xchg
out
sbb
adc
les
and
test
xchg
dec
jo
out
iret
retf
jno
push
jbe
icebp
mov
fdiv
daa
aaa
mov
mov
jp
(bad)
jmp
ds
shl
int3
jp
cwde
push
popa
dec
popf
mov
(bad)
mov
out
push
add
dec
lods
xchg
fwait
and
add
sbb
mov
jb
adc
lock
out
push
or
cmp
sti
addr16
sbb
nop
xchg
enter
mov
mov
jmp
add
add
inc
imul
sub
add
inc
adc
xor
pop
pop
inc
or
mov
sbb
mov
cld
ret
push
mov
and
sbb
mov
mov
in
js
cmp
mov
push
fdivr
mov
or
mov
mov
dec
cld
stc
mov
push
or
dec
fidivr
or
cld
repz
xchg
or
push
jl
mov
pop
std
adc
or
inc
cmp
add
xchg
sbb
xchg
pop
add
inc
fwait
xchg
aad
add
inc
cmc
data16
sub
ja
aam
push
pop
inc
jb
mov
push
jmp
adc
jno
ins
sti
xchg
mul
shl
movs
xor
scas
idiv
dec
pop
xchg
sub
mov
cdq
jl
stc
icebp
ret
or
or
stc
mov
ja
push
jecxz
cdq
fdiv
and
ins
cmp
scas
add
xor
cmp
sbb
ret
mov
dec
mov
jl
cmp
lahf
lea
add
mov
adc
jno
mov
leave
add
idiv
pop
scas
xchg
call
dec
adc
pop
cmp
jmp
lods
popa
inc
loopne
into
mov
push
adc
popa
xchg
ficomp
push
and
data16
stc
mov
cmp
ja
pop
in
out
mov
hlt
mul
mov
fidiv
xchg
jb
pusha
mov
lock
jle
stos
in
mov
inc
sub
jge
imul
sti
sbb
pushf
pop
lods
xor
or
popf
or
ss
std
pusha
cld
add
in
jmp
push
push
xchg
in
jmp
outs
jecxz
scas
cmps
sahf
ja
std
fnstsw
mov
xchg
sub
fistp
xchg
ret
retf
adc
and
jmp
inc
ss
inc
loopne
push
mov
int3
loope
sub
sub
mov
cdq
lock
sbb
cmp
adc
ret
and
movs
mov
mov
daa
(bad)
lods
sbb
cmps
add
out
mov
mov
out
test
jcxz
or
mov
mov
add
loopne
xchg
pusha
sub
add
loopne
xchg
scas
add
xchg
je
retf
add
and
push
adc
mov
sub
ds
xchg
popf
fs
std
stos
pop
and
lock
popa
pop
(bad)
scas
lds
xchg
jbe
xor
pop
add
ins
jns
dec
cmp
jno
pop
and
push
pop
ret
stos
mov
leave
xor
pop
pop
mov
mov
aaa
inc
sahf
sub
iret
xchg
inc
sub
stc
pusha
pusha
repnz
aas
ins
outs
lock
scas
push
or
icebp
lahf
adc
jle
(bad)
sahf
push
jg
inc
mov
icebp
cld
jo
cmps
or
call
mov
xchg
leave
adc
pop
mov
lea
in
sahf
mov
ror
test
mov
inc
in
sar
xchg
dec
mov
sti
test
sub
mov
jne
xor
sub
pop
sbb
push
lods
jo
xchg
mov
pop
xor
sbb
and
sti
dec
pop
push
sub
adc
sub
rep
jecxz
xlat
(bad)
cmp
mov
push
js
pop
mov
clc
or
push
dec
lds
sub
or
or
outs
aad
imul
xchg
jns
xchg
in
cmp
out
stc
pop
and
mov
sub
aas
scas
mov
push
sub
enter
adc
jbe
mov
jg
pushf
dec
inc
repnz
cmp
test
push
sub
mov
loopne
cli
hlt
sbb
inc
jb
fwait
xchg
mov
or
(bad)
sub
ja
(bad)
test
out
jmp
or
imul
pushf
jmp
xchg
pop
nop
imul
adc
and
imul
xchg
pop
mov
out
fwait
and
outs
and
call
mov
xchg
inc
push
sub
add
ror
loop
cwde
jmp
pop
dec
popa
jbe
shr
xchg
inc
adc
cmps
les
jbe
dec
mov
ins
mov
outs
and
inc
push
out
mov
xor
dec
rcl
daa
inc
ss
jge
in
sbb
pusha
xor
sub
dec
das
jo
rcl
sbb
lds
mov
sub
cmp
loopne
jnp
sbb
add
mov
xchg
add
fdivr
(bad)
call
jge
pop
and
xchg
push
xor
es
mov
jb
std
ss
in
gs
and
mov
pusha
jecxz
cmp
loop
push
stc
pop
addr16
lods
push
add
jmp
cmps
ins
cmp
mov
iret
pop
inc
cmp
sbb
xchg
adc
mov
xchg
scas
inc
push
mov
push
push
loop
jnp
sbb
sahf
or
add
mov
lea
add
jl
loopne
xor
in
xor
push
and
pop
adc
mov
mov
fwait
inc
jmp
pop
mov
push
mov
inc
sub
sub
aad
enter
push
pop
pop
mov
push
mov
in
retf
pop
inc
lods
je
mov
push
add
xchg
push
test
mov
inc
(bad)
(bad)
std
or
cmp
mov
dec
pusha
or
mov
push
or
cmp
prefetch
mov
inc
pop
mov
xchg
mov
jmp
int
cmp
mov
imul
or
jg
push
push
push
test
sub
jb
das
adc
xchg
pop
fcomip
fld
ins
jne
fstp
out
iret
sbb
and
fwait
or
sti
rep
nop
sbb
jnp
and
fwait
push
arpl
sti
fbld
jl
je
mov
cli
lock
inc
jns
and
pushf
jge
nop
stc
(bad)
lahf
pop
sbb
cwde
pop
cs
leave
sar
sub
aas
js
and
sahf
push
data16
imul
and
push
out
js
popf
and
or
sbb
mov
mov
xchg
(bad)
sbb
(bad)
cmp
adc
scas
test
mov
shl
jo
or
loopne
ret
aad
int
sub
push
jmp
mov
fucomp
fiadd
es
or
mov
stos
inc
test
int
push
pop
inc
push
mov
mov
mov
add
fisub
pop
mov
jmp
enter
inc
pop
je
mov
jno
gs
repz
mov
jl
int3
movs
rol
mov
dec
pop
call
dec
rcr
dec
cmp
mov
std
push
hlt
scas
adc
xchg
fcomp
xchg
fwait
ss
cld
push
dec
dec
and
xor
pop
mov
push
jg
dec
test
shl
push
add
xchg
movs
push
sbb
sub
lahf
gs
adc
and
out
add
mov
mov
int3
loopne
les
xor
push
push
cwde
mov
loopne
mov
sbb
movnti
nop
inc
mov
push
ins
ss
iret
dec
(bad)
push
cmp
popa
jg
rol
sub
bound
dec
(bad)
cmps
daa
mov
and
arpl
outs
das
xchg
mov
(bad)
test
jb
gs
mov
cmps
and
adc
xor
ins
sub
mov
push
loope
xor
sub
les
stc
or
jg
add
cmp
mov
push
cmp
aam
push
pop
in
(bad)
xchg
pop
loope
aad
xchg
ror
movs
push
cmp
xchg
xor
shr
and
mov
jmp
pop
in
pop
clc
ret
sbb
int
rcl
pop
cmp
mov
(bad)
stos
fwait
sub
repz
adc
nop
jle
xor
mov
retf
and
mov
mov
call
int3
mov
sahf
test
and
jno
mov
pushf
adc
pop
add
inc
or
out
cmp
sub
pop
mov
and
inc
ins
dec
push
add
jnp
retf
jmp
jno
cvtps2pd
xchg
pusha
mov
inc
adc
inc
icebp
jb
shl
xchg
rol
lock
into
or
jle
icebp
mov
dec
mov
pop
out
push
in
ffree
dec
add
push
test
fsub
add
push
or
data16
mov
stos
sti
dec
imul
repz
mov
pop
cli
in
jnp
pop
pop
xchg
jae
mov
push
test
call
xchg
or
adc
js
jle
mov
fwait
mov
inc
neg
enter
jmp
mov
xor
cmp
jl
outs
and
out
jmp
sub
test
popa
jmp
cld
or
(bad)
jl
jno
mov
jmp
pop
mov
xchg
sub
or
sub
xchg
sub
std
add
sahf
sbb
ins
push
jle
call
test
pop
sbb
adc
xor
mov
push
or
jmp
movs
jb
sub
push
mov
das
inc
mov
adc
cmp
sub
xchg
cdq
daa
das
inc
out
and
mov
add
leave
stc
jbe
push
sub
and
out
ins
add
jo
fnstsw
add
(bad)
ja
push
pushf
mov
mov
fcom
sub
sbb
cmps
mov
sub
iret
xor
and
lahf
push
mov
lods
(bad)
mov
pop
mov
lods
hlt
int3
sub
aas
xor
bound
pop
jle
popf
les
xchg
inc
and
leave
rep
mov
jbe
add
dec
ss
sub
dec
lahf
je
ret
or
or
inc
mov
lods
hlt
punpckhdq
jns
(bad)
sbb
sti
sub
and
mov
addr16
add
test
jle
hlt
ret
sbb
adc
or
ins
pop
xchg
mul
cmp
lock
call
fild
leave
hlt
pop
arpl
scas
movs
mov
jmp
pop
push
cwde
(bad)
(bad)
add
movs
pop
call
js
loopne
movs
push
push
shr
jo
xor
push
add
pop
jge
inc
push
xchg
dec
(bad)
ja
outs
push
cs
ret
jb
dec
cdq
pop
mov
dec
es
cmp
fs
pop
dec
mov
or
inc
and
(bad)
(bad)
popf
fsubrp
sub
pop
jmp
sar
inc
xor
shl
mov
pop
into
ja
cmp
dec
push
sbb
(bad)
mov
inc
out
mov
add
ret
mov
ds
jge
add
fptan
ds
cmp
jbe
clc
mov
mov
div
cmp
mov
mov
mov
shl
or
dec
mov
jbe
xchg
dec
popa
int
(bad)
cmp
mov
mov
or
jmp
dec
adc
(bad)
retf
test
cwde
jb
dec
add
sub
das
in
mov
mov
sub
jl
dec
es
inc
fs
mov
popa
in
and
push
div
imul
stc
in
out
sbb
jle
arpl
pop
cmps
ss
stc
loopne
sbb
and
mov
fsubp
ja
stc
and
outs
int3
pop
jp
imul
je
test
xchg
dec
pop
mov
loop
fstp
mov
bound
pop
aaa
mov
cmps
aam
shl
jns
cld
and
push
gs
jp
xor
(bad)
jmp
sub
sti
ins
sbb
loop
out
das
xor
bound
ins
ds
cdq
daa
loop
out
mov
nop
pop
loop
xchg
jo
mov
xchg
lods
loop
icebp
in
xor
bound
test
jmp
(bad)
call
xchg
jne
out
stos
xor
outs
std
mov
xchg
mul
shr
jmp
arpl
ins
cld
mov
cdq
xchg
jecxz
in
xor
ins
popa
mov
call
xchg
in
adc
mov
dec
or
imul
mov
xlat
mov
(bad)
(bad)
fs
jns
push
shr
icebp
jnp
ja
push
pop
jmp
dec
sub
rcl
and
cmp
pop
cmp
scas
cli
les
in
dec
mov
in
add
ss
pop
pop
outs
add
sbb
xchg
(bad)
into
mov
test
mov
fwait
loope
mov
es
add
ins
inc
js
mov
nop
clc
f2xm1
out
ds
sbb
gs
jae
stos
loope
(bad)
icebp
int3
(bad)
mov
adc
add
pop
xor
push
dec
es
ret
sub
xor
sti
dec
shr
das
shl
cmp
mov
push
cmp
cmp
aaa
pop
jb
jmp
inc
js
push
retf
aaa
aaa
jge
test
cdq
rcl
popa
cmp
pop
int3
dec
sar
aaa
sbb
lea
push
mov
scas
repnz
cs
pop
mov
popf
jecxz
jmp
pop
xor
push
jp
cvtpi2ps
lahf
sti
sub
cmc
and
es
test
and
mov
addr16
dec
jg
lods
mov
or
sbb
push
mov
loop
adc
sub
or
pop
fstp
sub
popa
es
jg
jns
add
xchg
and
pop
jne
add
jae
dec
jnp
mov
or
jnp
xor
xor
ret
jns
adc
cdq
shr
or
gs
xor
icebp
cmc
les
adc
test
xchg
loope
mov
pushf
sbb
and
cmc
ins
sbb
inc
fcomp
test
xchg
sti
int3
outs
in
mov
mov
cmp
xchg
jb
inc
jae
cmp
push
mov
sub
xor
pmuludq
jbe
dec
pop
cmp
cli
ins
mov
push
or
sbb
push
push
fist
movs
not
xor
pmuludq
js
adc
jno
add
pop
xchg
jmp
mov
nop
leave
jnp
dec
sbb
neg
jnp
adc
cwde
hlt
jae
idiv
icebp
inc
je
adc
push
cli
hlt
mov
mov
mov
jge
hlt
(bad)
mov
and
lahf
or
movs
mov
mov
and
mov
out
movs
and
mov
outs
imul
jns
adc
std
call
cmp
aad
into
nop
xchg
ucomiss
jo
mov
mov
jne
mov
xchg
loopne
jne
mov
scas
andps
ja
mov
nop
lock
cs
or
adc
mov
jb
mov
mov
xor
leave
jp
adc
mov
loope
leave
inc
sub
inc
pop
jae
mov
sub
test
fisttp
add
setge
jb
or
iret
or
fistp
push
pop
sub
mov
xchg
adc
sub
ds
mov
xchg
xor
jg
push
dec
call
sub
mov
inc
imul
mov
iret
aad
sub
pusha
pop
and
loopne
fsubr
pusha
and
mov
cmps
and
pop
int
stos
mov
lods
pop
adc
and
pop
lods
popf
dec
mov
lea
(bad)
xor
clc
mov
clc
sbb
mov
cdq
inc
ins
imul
mov
and
inc
add
hlt
retf
adc
leave
in
xchg
inc
fist
xchg
sbb
aad
ins
cmovne
popf
fcmovne
mov
pop
test
mov
pop
ror
add
pop
adc
ret
imul
push
leave
mov
test
sbb
adc
call
rol
jecxz
cs
rol
hlt
hlt
mov
ss
jo
adc
mov
ins
xchg
pop
and
repz
pop
adc
in
cld
mov
outs
das
test
ins
fdiv
xor
ss
pop
pop
dec
(bad)
mov
mov
jae
ins
dec
iret
imul
test
mov
sub
mov
cmc
test
repz
movs
sub
fnstenv
pop
pop
inc
xor
fcomi
mov
sub
in
pop
jge
mov
push
retf
mov
push
out
icebp
ja
es
popf
and
add
mov
packssdw
xchg
daa
mov
outs
and
add
pop
adc
or
and
enter
push
(bad)
lods
out
int
pop
loope
sbb
sub
je
jo
mov
cdq
jle
iret
add
xchg
push
adc
out
jns
sbb
mov
jp
dec
mov
retf
push
inc
jge
mov
sub
cmp
pop
and
jne
pop
in
movs
test
imul
ins
and
es
mov
jae
lahf
and
sub
sbb
mov
mov
pop
sub
push
mov
mov
cld
push
xor
stos
lahf
mov
push
xchg
dec
jp
mov
sbb
push
call
inc
test
sti
and
imul
imul
in
jnp
in
shl
pop
pop
pop
push
dec
and
sub
and
mov
(bad)
mov
sub
jecxz
push
xor
add
and
imul
cld
(bad)
cmc
call
jg
push
arpl
mov
mov
rcr
cmp
and
xor
sub
dec
add
mov
push
loope
cmp
xor
sub
xor
push
xchg
mov
ret
xchg
iret
pop
push
cli
cmp
rol
xor
ret
xor
movs
aas
sahf
push
mov
pop
ret
jae
popf
iret
out
loop
or
popf
cmp
dec
lds
adc
ror
(bad)
adc
pop
mov
imul
xor
add
imul
adc
push
xchg
lock
xor
inc
add
loope
pop
pop
in
adc
mov
jl
int3
shl
fs
call
dec
push
repnz
mov
push
stos
aam
jnp
ss
sti
push
je
les
ret
or
push
mov
scas
mov
or
das
mov
dec
mov
mov
das
fisttp
ja
dec
mov
adc
jns
cld
xchg
dec
push
arpl
inc
push
ins
das
loope
dec
push
add
pop
into
and
ss
inc
mov
ins
outs
adc
fcmovu
pushf
xor
adc
rol
cmp
sub
sub
call
arpl
addr16
icebp
xchg
lods
dec
or
sbb
xchg
cmp
push
movs
and
in
pop
pop
jecxz
dec
mov
pop
dec
enter
aas
push
in
push
shr
or
cmc
jno
in
xchg
pop
sbb
xor
xchg
push
mov
outs
retf
cmps
iret
and
mov
adc
ret
in
aas
cmp
push
dec
jmp
mov
cmp
adc
stos
push
push
fist
and
shr
cmp
fcomp
les
leave
into
cmp
push
and
mov
or
loopne
hlt
shl
pusha
jne
mov
jmp
pcmpeqb
sbb
(bad)
(bad)
(bad)
mov
or
cdq
pop
mov
not
stc
data16
pop
xor
test
mov
retf
sub
ins
pop
jg
lods
retf
mov
scas
or
ins
and
lods
xchg
xchg
in
fadd
int3
sub
mov
lahf
lods
std
jg
in
cwde
mov
es
std
mov
mov
js
pop
push
and
add
jmp
sub
sub
xchg
cmps
push
fisttp
fadd
pop
fistp
xor
cmp
push
mov
xchg
dec
inc
clc
inc
dec
and
mov
hlt
cmps
push
ds
pop
dec
add
pop
jmp
pushf
mov
ja
cli
sbb
rcr
das
push
fwait
mov
stos
outs
sbb
mov
cmp
dec
xchg
test
enter
dec
add
aas
retf
adc
mov
(bad)
cmp
lahf
dec
dec
xor
mov
push
dec
lds
pusha
dec
sub
aam
mov
mov
mov
stc
(bad)
mov
dec
sub
out
sti
arpl
lods
mov
call
pop
or
retf
push
push
sahf
xchg
cwde
mov
out
mov
cmp
mov
push
push
fwait
cli
ret
(bad)
call
popf
enter
dec
nop
cdq
pop
mov
es
sahf
dec
fdivr
aaa
push
push
sbb
push
xlat
sar
shr
out
(bad)
lods
das
outs
push
rol
and
cmp
sbb
cdq
push
cmp
loope
sub
sub
bound
and
out
repnz
and
and
arpl
outs
inc
cmps
stos
test
loopne
jmp
bnd
scas
mov
jecxz
loop
and
call
mov
call
push
or
fist
sub
mov
push
mov
cmp
iret
(bad)
mov
aaa
cmps
sar
mov
or
(bad)
shl
push
mov
mov
shl
push
lea
adc
lea
push
lods
cmps
and
repz
rcl
stos
stos
xlat
cmp
in
push
std
cli
out
mov
sub
outs
in
ja
adc
fistp
stc
xlat
(bad)
ror
pop
dec
xchg
test
pop
sti
jb
int
and
push
lods
dec
leave
(bad)
push
and
lds
loop
inc
call
jmp
mov
rcl
outs
cmp
in
dec
and
jl
lea
das
stc
or
rcr
mov
shr
stc
test
jns
sub
dec
mov
adc
cmps
pusha
lahf
dec
mov
cdq
les
in
mov
popf
xor
mov
inc
pop
ss
int
dec
jnp
and
cmp
arpl
inc
loop
xor
push
fcmovnb
dec
mov
fwait
into
adc
push
in
shl
push
jo
adc
fisubr
cwde
jbe
xor
mov
and
dec
lds
mov
(bad)
(bad)
or
dec
and
inc
fwait
mov
enter
push
adc
mov
std
rol
sub
sub
frstor
pushf
call
mov
or
mov
ds
test
jl
jle
sub
rol
jle
push
dec
add
mov
iret
cmp
push
jge
cmps
stos
(bad)
in
sbb
je
adc
xchg
or
icebp
dec
popf
dec
adc
sbb
in
stos
movs
adc
repz
ins
xchg
and
pushf
scas
jo
in
mov
mov
outs
jnp
mov
dec
jno
call
push
icebp
lahf
push
and
xchg
jmp
mov
jnp
leave
and
out
inc
mov
ja
(bad)
push
jb
and
jmp
jae
and
dec
xchg
inc
or
cmc
jbe
fcom
adc
xchg
inc
call
push
(bad)
je
outs
sub
dec
stos
mov
(bad)
cmp
jmp
loopne
call
mov
not
fbstp
je
pop
adc
(bad)
xlat
jo
add
jp
ror
and
cli
jp
fs
or
jp
int
mov
cli
jg
inc
or
aaa
jl
into
push
mov
sub
dec
into
js
add
and
imul
mov
sbb
add
iret
inc
add
inc
xchg
adc
adc
inc
mov
add
fwait
ds
retf
icebp
stc
xchg
or
test
push
jle
and
nop
jmp
stos
push
cmp
in
adc
loop
lods
out
sub
in
outs
push
dec
mov
jb
fiadd
pop
inc
(bad)
(bad)
jne
scas
push
xchg
rcl
cmps
add
mov
xor
xor
xlat
sar
aam
adc
pop
fs
ret
lods
dec
push
hlt
popf
into
inc
or
push
pop
test
loope
adc
es
ins
int3
push
movs
push
scas
ficomp
sbb
scas
sub
or
dec
xchg
cmp
inc
and
adc
push
(bad)
mov
stos
push
(bad)
xor
and
push
and
cmp
cs
test
sub
retf
mov
adc
xchg
xchg
fild
das
xchg
adc
mov
sub
fcomp
mov
pop
mov
pop
adc
xlat
adc
cdq
outs
rol
add
in
setno
jb
or
xlat
sti
jg
cmp
push
or
or
mov
xchg
pop
stc
stc
ds
bound
push
pop
out
xor
xor
pop
cmp
lds
cmp
cmp
leave
clc
push
adc
dec
mov
popa
xor
inc
dec
dec
ss
les
push
clc
cmp
mov
imul
add
push
jbe
ja
dec
add
xchg
push
mov
std
adc
pop
retf
mov
jmp
add
sub
xor
pop
dec
fld
rol
call
inc
or
icebp
xchg
sbb
or
or
pop
movs
push
std
xchg
fisub
ins
mov
les
cmp
ror
out
mov
or
arpl
leave
mov
in
rcr
cmp
iret
inc
lds
push
ret
mov
mov
gs
test
in
inc
sbb
cli
rcl
mov
ret
sub
inc
call
inc
sub
push
pop
out
add
data16
pusha
fwait
add
iret
jecxz
int3
push
jmp
stos
xchg
fst
cmp
mov
cmps
int
je
dec
retf
rcl
stc
idiv
inc
adc
popf
ins
std
cmps
out
sahf
jo
adc
jmp
push
and
outs
adc
ins
outs
mov
inc
mov
nop
test
popa
push
rcr
(bad)
stos
pop
adc
fcom
sub
inc
push
fldenv
fbld
pop
mov
and
mov
mov
cli
nop
inc
and
add
xchg
cmp
sbb
or
popa
daa
(bad)
push
pop
loope
pop
and
push
xchg
(bad)
retf
movs
add
pop
loop
mov
and
mov
jecxz
mov
pop
daa
sbb
outs
popa
xchg
mov
xchg
fadd
aas
push
and
jb
test
lock
sbb
jnp
jo
cmps
out
mov
xor
jns
pop
and
out
dec
mov
or
in
mov
arpl
mov
(bad)
ja
xrelease
and
nop
or
ja
xchg
in
xchg
jecxz
test
xchg
out
sub
jmp
mov
std
div
or
jle
mov
mov
bswap
jle
ficom
mov
mov
cmp
out
fs
sub
pushf
or
into
fwait
repnz
mov
pushf
adc
adc
push
push
mov
pop
repz
xor
aas
jb
jnp
xchg
daa
(bad)
push
sti
add
xor
lea
jmp
adc
xchg
push
jge
in
lock
aam
and
out
jno
mov
xchg
mov
jl
adc
mov
jge
cmp
jno
loope
pop
mov
outs
push
rol
loopne
xchg
jmp
(bad)
data16
ret
sub
loop
pop
ja
fisubr
ret
mov
inc
push
sbb
push
mov
pop
jbe
or
dec
xor
xlat
add
inc
fidiv
int
mov
dec
dec
stos
retf
test
mov
inc
lods
shl
lds
inc
ins
inc
ins
aad
ret
jae
jg
lods
rcr
xor
fst
inc
jecxz
push
ret
mov
pop
mov
leave
addr16
inc
out
out
rol
sbb
fsub
shl
cld
push
push
add
pop
js
sbb
inc
bound
int3
and
fistp
push
mov
lds
inc
jecxz
push
mov
std
xchg
xchg
cmp
add
inc
inc
xchg
mov
inc
bound
adc
leave
push
popf
xor
push
imul
frstor
repz
je
cld
xor
mul
jnp
dec
mov
jmp
repnz
fbstp
ret
xor
mov
pusha
jge
push
hlt
(bad)
jno
adc
in
ficom
nop
into
retf
cli
push
cwde
and
(bad)
cmps
test
jb
pop
sbb
push
jecxz
mov
loope
add
push
mov
stos
push
stc
adc
or
(bad)
ja
jae
xchg
imul
mov
xchg
add
inc
pop
int3
sbb
xchg
ret
in
loop
add
inc
mov
ror
cmp
fadd
gs
jmp
push
lods
jb
mov
repnz
pop
daa
adc
sub
pop
movs
in
js
test
mov
sti
dec
mov
dec
(bad)
xchg
mov
or
das
hlt
lds
cmp
(bad)
stos
mov
push
jmp
test
mov
cmc
dec
dec
lods
pop
ss
(bad)
call
outs
sbb
mov
or
sbb
push
int3
inc
mov
loop
push
dec
pop
inc
mov
cmp
dec
push
sar
mov
push
into
outs
daa
jb
mov
mov
test
mov
push
cli
xchg
enter
inc
(bad)
jp
shr
add
pop
enter
pop
add
dec
add
jne
dec
mov
in
dec
sti
cmc
sub
jp
test
mov
(bad)
cmp
push
push
pop
push
stos
add
in
retf
das
into
jl
gs
mov
jbe
fldcw
lock
or
hlt
(bad)
mov
adc
cmps
gs
cmc
cmps
out
xchg
pop
lods
xor
xchg
mov
lods
jmp
dec
fisub
adc
aaa
pop
mov
push
dec
retf
jno
cmp
dec
or
mov
push
mov
inc
(bad)
mov
(bad)
pop
enter
push
dec
lock
retf
jae
les
es
cmp
jns
pop
aaa
fwait
add
dec
stos
mov
dec
addps
lods
xchg
pop
dec
sar
ss
add
sub
dec
sub
fdivr
sar
pop
daa
in
int3
mov
scas
ret
mov
xor
jo
imul
jns
aas
cmps
xchg
cmp
out
stos
cld
sbb
pop
out
test
mov
jl
out
ror
pop
int3
jp
lds
std
inc
sahf
jmp
jmp
test
repnz
les
jae
mov
fild
or
jge
int
xchg
popf
push
add
fs
pop
pusha
shr
xor
jne
mov
dec
jmp
mov
test
movs
jbe
pop
call
fwait
jg
xlat
clc
pop
jb
sbb
xchg
imul
sbb
repz
jne
shr
in
mov
les
cmps
cdq
lods
jb
jmp
fnstenv
push
std
pop
add
repnz
push
push
stc
mov
(bad)
aaa
sahf
pop
push
push
in
stos
mov
jmp
add
ret
mov
pop
pop
popa
and
test
jno
fimul
mov
imul
das
lods
jns
fcom
stos
sub
sub
aad
test
push
mov
jg
dec
rcl
jno
icebp
sub
out
jno
sbb
xchg
pop
je
cld
fimul
mov
lods
retf
xchg
xlat
hlt
xor
pop
sbb
pop
lahf
test
add
mov
cmp
dec
push
sbb
mov
fdivr
js
jl
rcl
nop
adc
popf
sbb
sub
mov
not
sub
jae
pop
xchg
std
fadd
push
push
stos
in
clc
(bad)
mov
imul
shl
sub
xor
aad
jg
sub
in
jle
fsub
pop
cld
cld
push
fisub
stos
and
mov
xor
mov
mov
mov
inc
out
cdq
mov
pop
inc
add
int
mov
cmp
or
xchg
mov
jl
dec
cmp
aam
out
xor
ret
out
pop
mov
dec
(bad)
fadd
(bad)
loope
fadd
mov
ret
mov
cs
and
cmp
push
das
and
ins
cs
mov
dec
or
ret
xchg
mov
push
call
leave
mov
je
int3
push
fwait
pop
inc
les
mov
rcl
xchg
cmp
stc
test
jge
lahf
inc
fnsave
rcl
rol
sub
enter
push
sbb
lock
loope
or
jbe
clc
push
cdq
mov
xor
pop
ins
sub
std
icebp
push
xchg
scas
push
ins
std
push
jg
and
(bad)
push
ins
pop
add
mov
jge
fadd
mov
sub
int3
hlt
and
mov
lods
dec
dec
(bad)
std
int3
fldcw
cmp
fist
leave
push
mov
inc
xchg
(bad)
aad
ss
into
mov
fisttp
iret
mov
(bad)
cmp
mov
leave
xchg
cmp
xchg
mov
retf
cmp
sub
dec
jno
xchg
mov
sar
and
mov
mov
iret
cmp
inc
ja
mov
jmp
push
cmp
push
mov
mov
cs
aam
in
and
mov
xor
xchg
scas
jg
mov
sbb
call
mov
mov
xor
or
xchg
out
mov
inc
pop
sub
cdq
jo
pop
clc
mov
ret
lmsw
rol
add
popa
retf
jge
lods
adc
sbb
and
or
hlt
xchg
vandnps
mov
mov
imul
das
popf
mov
xchg
icebp
outs
push
dec
adc
iret
popf
fidivr
mov
sbb
sbb
add
xchg
jmp
fild
rcl
es
inc
cwde
gs
xchg
retf
lods
and
jl
inc
mov
out
cli
ret
mov
imul
ds
pop
pop
mov
or
ret
inc
shl
ror
pop
out
inc
xlat
lods
pop
iret
(bad)
fcmovnu
dec
(bad)
push
retf
in
push
les
mov
(bad)
jmp
ret
pusha
dec
test
mov
test
pop
cmp
pop
or
mov
xor
push
arpl
mov
scas
not
pop
in
dec
xor
fmul
push
fcmove
repnz
sbb
pushf
and
sub
lahf
sahf
aad
cld
cmc
xor
adc
bnd
mov
xchg
mov
xor
xchg
test
pop
add
mov
mov
xor
mov
dec
sub
repz
push
adc
push
jno
lgs
and
push
push
mov
rcl
in
and
ret
push
mov
push
mov
icebp
out
into
mov
inc
cmp
jb
inc
xchg
sahf
dec
les
sti
mov
pop
mov
inc
(bad)
(bad)
(bad)
mov
dec
pop
test
inc
fadd
rol
and
int3
and
xchg
jle
and
push
mov
cmp
pop
cmp
sbb
dec
or
cdq
cwde
retf
cmp
ins
sbb
dec
push
mov
leave
je
aaa
cmp
xor
js
mov
xchg
clc
xor
out
sbb
dec
lods
js
mov
mov
das
cmp
sbb
mov
mov
sar
or
jno
dec
idiv
mov
lock
pop
inc
outs
sbb
retf
sub
add
sbb
frstpm(287
cwde
jl
xor
aas
arpl
sbb
movs
adc
popf
js
push
neg
ins
and
mov
movs
fs
pop
popa
push
adc
lods
add
xchg
out
pop
out
xor
test
arpl
fndisi(8087
mov
cs
mulps
cmp
mov
xlat
es
jmp
imul
fisub
xchg
sub
dec
loop
ret
retf
in
xor
xor
sti
dec
mov
int3
int
pushf
aaa
pop
rcr
push
enter
in
aad
iret
add
pop
cmp
pop
sti
dec
inc
mov
jns
iret
aaa
add
sbb
mov
mov
mov
pusha
cmp
imul
mov
leave
es
inc
fbstp
(bad)
sub
(bad)
cmc
pop
dec
nop
int3
inc
fwait
cmp
std
dec
dec
int3
push
mov
cdq
add
cmp
test
inc
mov
rol
jle
ret
inc
les
faddp
dec
(bad)
in
aas
xlat
push
int3
dec
clc
mov
retf
sbb
pop
pop
hlt
dec
cdq
(bad)
xchg
mov
seto
inc
pop
nop
adc
sub
inc
xchg
nop
sbb
push
add
pinsrw
ss
stos
xchg
add
aas
out
imul
mov
leave
mov
add
cmp
mov
xor
push
in
add
repnz
inc
int
enter
fild
out
inc
(bad)
aad
arpl
mov
mov
jmp
pop
push
rol
inc
xchg
pop
mov
inc
scas
pop
xor
or
and
inc
(bad)
cmp
push
sbb
dec
(bad)
das
inc
pusha
push
push
sar
and
shl
push
pop
fidivr
inc
pop
pusha
aas
or
out
mov
gs
test
iret
pop
dec
inc
push
xchg
mov
jp
test
mov
inc
push
(bad)
mov
(bad)
mov
std
cmp
rcr
ret
clc
test
push
push
les
add
pushf
or
push
fst
cmp
inc
sbb
mov
ret
imul
push
pop
sbb
test
sbb
dec
mov
ret
clc
jp
cmp
out
test
sub
fisub
add
cmp
ret
pop
and
cmp
mov
test
(bad)
imul
cmp
ss
bound
aad
push
les
addr16
xor
push
add
ret
mov
pop
dec
arpl
gs
dec
push
xchg
ret
outs
mov
pop
dec
bound
sbb
inc
ins
or
push
call
fisub
inc
dec
mov
pop
xor
cmp
mov
repz
push
xor
ins
fwait
mov
stc
add
ss
dec
les
cmp
stc
retf
dec
in
out
and
hlt
push
cmp
(bad)
cmps
loope
sbb
sbb
sub
adc
mov
sahf
cmp
dec
imul
cmp
push
inc
cmp
cs
clc
loope
ret
pop
sbb
inc
imul
retf
pop
mov
mov
aaa
xchg
sbb
xor
push
or
scas
add
sar
mov
adc
inc
dec
lahf
lods
int3
cmp
or
(bad)
sti
inc
sub
adc
je
imul
loop
dec
jo
and
pop
movs
mov
cmp
xor
fild
cmp
xor
cmp
xchg
cmp
lods
mov
test
fiadd
jb
xchg
pusha
mov
and
and
sbb
adc
sub
int
fwait
sub
and
es
sbb
mov
or
add
dec
cmp
sar
arpl
pop
test
stos
cmp
xchg
cmp
sbb
sub
or
sbb
xchg
cli
and
add
push
cld
cmp
xchg
psrld
rol
sub
or
cld
inc
test
sbb
mov
push
or
jmp
lahf
adc
cli
pushf
jnp
adc
movs
aam
xchg
out
pushf
sub
or
popf
xor
and
pop
ins
adc
shl
adc
sbb
mov
mov
pushf
adc
dec
sbb
lds
add
cdq
lea
cmp
xchg
and
cli
jae
push
es
fld
xor
(bad)
adc
push
stc
pusha
pop
push
push
stos
dec
lods
mov
pop
data16
js
jo
mov
inc
add
outs
lds
in
out
inc
pop
adc
push
jo
pop
icebp
mov
dec
(bad)
jge
sar
test
js
loopne
fistp
icebp
jbe
ficomp
fs
lds
adc
jg
push
daa
adc
push
mov
mov
leave
sbb
inc
inc
rol
mov
retf
iret
(bad)
pop
push
retf
mov
sub
fnstenv
sub
test
pushf
inc
mov
or
adc
adc
ins
cdq
pop
shl
add
xor
fimul
dec
ret
fdivr
mov
hlt
push
stos
fwait
sbb
jecxz
test
mov
aaa
jae
xchg
jb
mov
push
loopne
jecxz
xor
mul
pop
inc
ja
mov
xchg
stos
leave
cli
neg
mov
xchg
xchg
cmps
sub
pop
mov
xor
lahf
xchg
ret
add
push
xchg
out
add
sbb
fimul
pop
(bad)
mov
xchg
sbb
mov
jp
cli
sbb
lods
js
and
fwait
push
lahf
mov
cdq
add
push
movs
add
xchg
add
stc
adc
push
test
mov
add
xchg
adc
jle
js
popf
or
push
sbb
cmps
ja
add
movs
inc
sbb
push
or
jmp
jecxz
arpl
mov
mov
xor
popa
pop
js
scas
sbb
xlat
sub
or
cmps
push
xchg
lahf
hlt
stc
repnz
inc
adc
mov
jne
push
sub
repz
test
popa
clc
push
mov
les
ja
mov
xchg
jle
(bad)
shr
enter
retf
outs
push
stos
out
adc
leave
jmp
daa
hlt
sbb
je
sub
push
out
inc
in
sub
mov
bound
fbstp
mov
cld
sbb
push
jg
mov
cli
popf
adc
out
jg
clc
sbb
pop
addr16
mul
cmp
in
push
push
popa
aaa
rcl
jns
add
sqrtps
mov
scas
test
mov
push
dec
push
mov
dec
mov
push
cmp
rcl
push
rol
sub
xchg
xor
push
daa
dec
and
loop
dec
push
movs
enter
cmp
sar
mov
push
fisttp
rcr
push
int
rcr
push
mov
int3
outs
push
mov
dec
jb
mov
das
shl
int3
push
xor
push
pop
push
mov
lods
mov
and
cmps
aaa
dec
pop
xor
scas
test
scas
sub
mov
popf
sub
pop
shl
test
lahf
es
cli
mov
sub
xor
inc
inc
fisttp
add
pop
xchg
lea
fidiv
add
lods
(bad)
cmp
or
sub
push
pop
xchg
sbb
addr16
sbb
sub
mov
mov
or
les
ror
adc
and
in
push
cmp
lfs
sti
std
cmp
dec
fnstenv
mov
jecxz
jmp
ret
out
out
cmp
mov
leave
jbe
xor
test
dec
mov
loop
int3
mov
fdiv
test
mov
(bad)
aad
cmp
das
not
pop
retf
rcl
rcl
(bad)
(bad)
les
retf
dec
ja
ins
enter
dec
fst
mov
add
push
push
push
push
adc
mov
fimul
aad
enter
dec
dec
pop
mov
inc
stos
lahf
inc
inc
fnsave
dec
daa
retf
popa
dec
aam
mov
push
pop
jo
iret
mov
(bad)
popf
sbb
sbb
ins
xchg
fadd
cwde
fidivr
in
mulps
pop
mov
push
pushf
xchg
cmp
cld
sbb
fcmovnu
cli
call
clc
sbb
mov
jbe
adc
push
hlt
push
pusha
mov
bound
call
sbb
jmp
ret
cdq
das
ds
in
sbb
int3
sbb
mov
retf
aas
cmc
in
cmp
sbb
mov
inc
cdq
sub
adc
pop
push
les
fs
jb
outs
ds
in
jnp
sbb
mov
mov
mov
sbb
mov
retf
inc
ins
out
test
test
and
ins
rcl
push
cdq
gs
pop
in
sbb
mov
loopne
xlat
ins
ins
push
push
call
or
sar
ins
ss
or
adc
sbb
shl
sbb
shl
push
clc
sub
jl
jbe
xchg
fsub
repnz
ds
or
fs
jg
stos
bound
adc
and
jge
pop
retf
mov
jmp
call
push
bsr
stos
mov
sub
pushf
mov
movs
and
inc
test
xor
mov
mov
sbb
lods
sub
inc
cmps
mov
xor
or
mov
sbb
test
jo
sti
add
sbb
and
pushf
cmp
hlt
and
jmp
stc
frstor
push
cmps
test
xchg
out
(bad)
xor
adc
pop
retf
push
dec
inc
mov
out
clc
das
cwde
push
daa
and
(bad)
icebp
sub
mov
push
pop
xchg
pop
mov
push
es
inc
aas
pop
mov
push
xor
inc
fcomp
mov
loope
popa
sub
dec
sub
aam
cwde
inc
cmp
icebp
xchg
shr
xchg
pop
sbb
leave
and
xchg
iret
mov
std
dec
retf
in
stos
ins
inc
push
sti
mov
cmps
movs
fst
inc
inc
xchg
xor
mov
mov
lods
push
aam
mov
loopne
mov
sbb
(bad)
mov
xchg
pop
lahf
cld
jecxz
(bad)
adc
inc
aad
out
retf
hlt
movs
aas
dec
mov
xor
and
(bad)
push
mov
push
push
outs
daa
(bad)
jns
push
xor
sub
pop
sub
sahf
lahf
das
inc
call
xchg
aas
mov
or
adc
cmps
mov
(bad)
call
bound
ss
jecxz
dec
repnz
stos
pushf
or
out
jecxz
xor
stc
enter
and
jg
in
sub
sub
cdq
push
dec
cmp
pop
shl
bound
add
push
sub
call
fldenv
data16
mov
inc
popa
push
mov
imul
daa
dec
and
pop
data16
lock
inc
mov
and
shr
adc
xor
mov
push
cwde
int
mov
push
push
dec
sub
lods
add
mov
sbb
inc
stc
xchg
(bad)
lock
sub
adc
aaa
adc
fist
(bad)
or
inc
sub
cmp
pop
(bad)
pop
ror
mov
aad
into
dec
adc
pop
jmp
dec
loopne
mov
outs
mov
mov
in
xchg
inc
dec
(bad)
push
int3
repnz
sar
jmp
and
or
mov
xor
aas
jp
fst
loope
stos
and
mov
sbb
call
or
and
jbe
xchg
pop
xchg
test
outs
div
cwde
push
es
fnstenv
cmps
adc
xor
(bad)
ja
(bad)
xlat
xchg
shl
test
xchg
test
sbb
les
imul
and
sub
pop
arpl
mov
pushf
pushf
fcmovbe
lock
inc
sub
or
inc
sti
xchg
mov
cmp
sub
xlat
push
pushf
jle
sbb
push
adc
cmp
sbb
inc
adc
cld
ins
xlat
adc
fstp
stos
inc
sub
mov
push
stos
dec
pop
mov
mov
push
cmp
scas
jl
test
xor
mov
pop
mov
loope
icebp
dec
ds
pop
mov
xchg
sbb
and
arpl
pop
call
ficom
dec
aas
pop
faddp
add
cmc
cmp
sbb
fld
and
mov
aaa
popf
mov
fs
mov
or
movs
loopne
xchg
mov
ins
mov
dec
jmp
mov
je
movs
adc
mov
stos
(bad)
cmp
xchg
(bad)
fnstcw
or
fwait
sbb
cli
inc
mov
jbe
pop
mov
repnz
and
xchg
outs
jns
jle
jo
iret
jmp
cli
xchg
mov
mov
std
in
jnp
xor
pop
pop
add
mov
xchg
push
mov
inc
jbe
push
sbb
cmc
scas
push
xchg
adc
or
cmp
stos
jns
pop
jge
xor
imul
jmp
add
in
addr16
sub
cli
mov
cmc
arpl
and
xchg
jno
cli
jnp
cmp
sar
lahf
jp
sbb
mov
jns
cli
sub
jnp
and
stc
add
movs
adc
adc
mov
data16
scas
mov
mov
fbld
push
push
outs
jp
ret
retf
dec
pop
add
retf
call
mov
rol
or
adc
mov
or
mov
test
mov
pop
repz
ins
adc
pop
pop
jno
mov
push
lock
cmp
adc
test
mov
xor
cmps
cmp
adc
push
nop
cmps
fmul
icebp
add
inc
adc
int3
jo
ret
cmp
out
or
sbb
dec
lock
inc
movs
sub
jle
(bad)
and
dec
hlt
gs
and
call
fs
mov
in
jecxz
es
jl
mov
cmps
mov
push
es
push
pusha
fs
jnp
cmps
mov
push
loope
idiv
data16
xor
sahf
clc
mov
popa
or
movs
push
fild
and
pop
mov
or
mov
and
sbb
daa
lods
and
pop
xlat
int
lea
jg
aam
or
add
cmp
xchg
clc
push
or
xchg
not
inc
add
fmul
or
int3
mov
add
adc
iret
rcl
dec
or
xchg
mov
xchg
sbb
fadd
(bad)
mov
dec
jne
push
xchg
mov
nop
push
sub
fwait
add
mov
daa
mov
popa
and
arpl
sub
jmp
push
push
pop
sahf
push
xchg
push
jmp
cmp
fimul
fwait
sahf
pop
mov
jmp
and
adc
out
push
std
pop
pop
xchg
xchg
jmp
mov
push
outs
pushf
mov
pcmpgtw
pop
packssdw
pop
punpcklwd
dec
xchg
addr16
packuswb
popf
bswap
and
xchg
fmul
inc
lahf
cdq
xchg
sbb
mov
imul
mov
and
mov
ror
icebp
and
mov
gs
or
scas
in
or
add
fmul
mov
push
or
and
or
lahf
mov
inc
out
or
dec
push
push
mov
pusha
or
jo
imul
jmp
je
lock
pushf
jno
ret
or
sbb
cmc
or
popf
push
mov
jmp
xchg
mov
push
stos
mov
call
mov
loopne
outs
or
popf
nop
bound
sbb
push
pushf
jo
xchg
dec
xchg
sti
sbb
and
imul
(bad)
fmul
sbb
ds
cmps
popf
xchg
mov
or
js
adc
mov
adc
adc
popf
nop
jbe
hlt
cmp
add
clc
std
push
sti
push
jae
push
test
cli
jns
jne
je
shl
push
lods
bound
mov
push
das
nop
jle
popfw
movs
ds
mov
xor
rcl
repnz
lea
dec
sub
jo
popf
xlat
xchg
repnz
mov
jb
mov
sub
out
xchg
cmc
jne
pop
sbb
pushf
mov
pop
jmp
adc
loope
mov
fwait
lahf
out
pop
add
stc
adc
adc
mov
lahf
or
imul
fmul
mov
out
and
jg
add
xchg
cmp
push
and
sbb
mov
xchg
retf
ins
aas
or
push
pop
rol
in
stc
sbb
cmp
shl
mov
icebp
adc
imul
or
pop
xchg
sub
mov
pop
cwde
xor
icebp
mov
popf
or
fldlg2
jle
inc
adc
sbb
and
mov
pop
inc
fisubr
mov
bound
mov
jmp
aam
xor
xchg
clc
(bad)
push
cld
cmps
add
and
or
(bad)
and
mov
outs
sahf
int3
int
repz
pop
xlat
enter
retf
pusha
ret
sub
call
mov
outs
add
sbb
out
jge
sbb
sbb
pop
(bad)
xor
lds
dec
or
aad
ds
mov
sub
pop
cmc
xor
ret
je
jle
xchg
in
stc
cmp
xor
push
call
xchg
pop
push
push
xchg
call
or
popa
xchg
nop
out
mov
xor
ret
push
fistp
lods
ins
les
adc
leave
fisttp
cs
stos
fbld
gs
xchg
fwait
(bad)
push
add
das
mov
or
fnstenv
test
inc
xchg
imul
int
or
rcl
jnp
dec
xchg
mov
clc
stos
call
mov
lahf
mov
loope
or
test
sub
xor
daa
cmp
adc
jo
and
or
sbb
adc
xchg
push
sub
jmp
or
sub
idiv
fs
xor
daa
or
cmc
pop
sub
mov
dec
jge
into
mov
ror
pushf
shr
push
mov
(bad)
add
pop
mov
mov
rol
push
pop
ficom
jmp
pop
cmp
mov
dec
inc
dec
ds
sbb
rol
mov
les
inc
iret
pushf
dec
shl
inc
push
in
or
mov
jmp
fsubr
adc
mov
popf
cmp
mov
out
mov
adc
adc
rol
cmp
inc
cld
pop
shr
lahf
xlat
sbb
inc
popa
push
fisttp
jl
sar
jmp
(bad)
push
popf
call
and
data16
pop
mov
pop
jle
inc
push
mov
adc
xor
fs
add
movs
aas
xor
imul
sar
or
lods
ja
pop
js
lods
mov
not
sbb
jb
shl
inc
pop
lock
adc
mov
int3
add
pop
enter
inc
add
aam
mov
clc
pop
ror
(bad)
ds
xchg
pop
test
and
push
add
fs
add
mov
jle
loope
mov
das
in
pop
outs
lock
lods
jecxz
push
jmp
pop
pushfw
adc
mov
jno
loop
mov
(bad)
cdq
pop
pop
push
scas
mov
xchg
mov
cmp
pop
pop
add
mov
jb
mov
cmc
sbb
add
repz
fimul
push
cmp
or
sar
xlat
adc
pop
sar
inc
xchg
js
iret
cli
xchg
dec
add
and
jae
inc
(bad)
jbe
mov
popa
lea
push
dec
or
mov
dec
xchg
fidivr
jo
inc
pop
sub
gs
mov
les
lar
mov
pushf
cmp
rcr
cmps
mov
rol
inc
(bad)
fistp
scas
jb
dec
jmp
inc
jb
jge
sahf
out
lea
push
pop
or
xor
inc
mov
or
xchg
push
ja
call
adc
cmc
in
push
push
pop
pushf
outs
jae
cld
inc
nop
sub
jl
adc
pushf
or
std
mov
icebp
xchg
jge
adc
std
stos
xchg
cmps
sbb
lock
sub
stos
pushf
and
(bad)
es
sbb
lock
jbe
adc
mov
push
fwait
and
fucom
jbe
pusha
and
mov
leavew
fmulp
mov
adc
sub
dec
mov
into
xor
cmp
shl
mov
fnsave
(bad)
dec
call
push
into
repnz
xor
bnd
push
and
sar
inc
nop
test
mov
stos
sub
cmp
data16
mov
loop
inc
or
adc
mov
pop
inc
jbe
xor
cmp
ds
inc
dec
cs
jnp
retf
lds
inc
push
retf
mov
(bad)
call
ret
mov
xchg
inc
xchg
mov
add
pop
scas
inc
in
mov
shl
lods
inc
div
adc
dec
scas
jle
addr16
in
mov
scas
cmps
push
movs
lock
mov
je
(bad)
or
jno
pop
and
mov
outs
aas
shr
adc
jmp
push
jae
and
mov
xor
jecxz
dec
adc
pop
int3
sub
test
clc
mov
push
repz
push
loope
fcmovb
hlt
scas
daa
dec
iret
fsub
leave
loop
sub
pop
dec
lock
and
stos
loopne
into
pop
and
pushf
into
int3
mov
cmps
into
dec
and
inc
xor
movs
cmps
inc
inc
loop
iret
(bad)
and
push
arpl
les
or
and
dec
cmp
mov
lods
int
and
dec
mov
movs
test
loop
int
and
dec
movs
fs
mov
jg
(bad)
and
dec
shl
mov
sbb
ret
dec
in
fs
into
shl
cmp
and
jmp
mov
fmulp
sub
adc
aad
inc
int
mov
test
mov
mov
mov
dec
mov
mov
lock
stc
int
and
and
pop
inc
jp
lahf
popa
sar
or
pop
mov
cli
push
dec
rcl
and
outs
outs
push
aam
push
mov
dec
or
ins
xor
adc
aas
ficomp
stos
enter
ins
and
movs
lods
add
imul
sub
(bad)
les
adc
(bad)
xchg
dec
sub
cmp
clc
cwde
and
(bad)
or
sbb
add
cli
test
(bad)
imul
xor
push
xlat
dec
dec
mov
pop
lea
test
dec
std
lods
jecxz
mov
sbb
push
jbe
in
mov
add
out
jge
mov
nop
jnp
loopne
and
and
sub
cmp
dec
pop
or
out
cmovae
add
inc
cdq
cs
call
dec
and
pminub
cmp
inc
fcomp
ret
or
dec
mov
rol
mov
repz
mov
into
aaa
mov
mov
mov
(bad)
xchg
loopne
inc
xor
icebp
mov
xchg
ds
mov
lods
mov
xor
dec
mov
pusha
ror
adc
inc
dec
and
lds
sbb
dec
dec
push
xor
sub
pop
ds
pop
mov
mov
fimul
cs
pop
mov
stos
xor
mov
das
sub
daa
inc
pop
mov
mov
retf
and
js
mov
ss
pop
and
pop
stos
cmp
call
cld
sub
mov
push
sbb
push
in
sbb
cs
jmp
jle
cwde
xchg
mov
or
xchg
retf
cmp
std
bound
shl
xchg
cmps
xor
xchg
out
ret
sar
cmp
add
out
sbb
adc
pop
call
movs
shr
cdq
(bad)
xor
mov
mov
out
ror
jge
xchg
pop
hlt
popa
call
dec
shr
inc
aad
pop
cld
cmp
in
nop
out
cmp
(bad)
pop
pop
xor
fiadd
out
sub
mov
pusha
aam
ror
add
rol
pop
push
jo
mov
(bad)
pop
ret
ds
xlat
or
xlat
ret
aas
sub
add
lahf
das
in
push
pop
dec
rcl
xchg
fld
add
lods
xchg
push
loopne
mov
xlat
sub
mov
in
add
mov
inc
push
push
pop
mov
cmp
push
ret
push
ret
xor
xlat
mov
stos
das
or
shl
nop
shl
fcmovnb
or
(bad)
adc
push
loop
mov
push
js
stos
sar
push
jbe
shl
push
pop
aad
sar
icebp
push
call
push
adc
shl
push
pop
repnz
ins
jmp
pop
mov
addr16
iret
xor
in
push
in
adc
iret
pushf
sub
inc
retf
mov
je
fild
pop
inc
dec
pusha
das
(bad)
int
xchg
dec
push
and
popa
mov
(bad)
ss
aaa
fdiv
bound
pop
mov
push
rcl
rol
sbb
push
inc
xchg
fisubr
ins
retf
retf
cmp
(bad)
mov
xor
fdiv
dec
call
enter
dec
pop
sub
cmp
lock
add
inc
out
out
jg
xor
xchg
iret
pop
mov
lods
sar
dec
jmp
push
enter
pop
sbb
out
push
daa
pop
mov
xchg
add
mov
ja
fadd
lea
aas
push
add
fs
mov
push
push
pop
sbb
int3
jg
xchg
sub
es
xor
mov
mov
xchg
inc
fldcw
sub
arpl
jb
cmps
mov
int
jns
inc
mov
xor
sub
sub
mov
(bad)
ror
fmul
in
movs
shr
and
mov
inc
mov
test
xor
pusha
sbb
or
push
cmc
in
mov
push
add
xchg
jle
lahf
test
xchg
(bad)
mov
frstor
ret
pop
inc
outs
retf
mov
mov
leave
pop
xlat
leave
inc
(bad)
cmp
or
adc
aas
dec
lds
aam
call
or
sar
repz
xchg
es
mov
sbb
lahf
lods
jbe
add
push
jns
cmps
jl
(bad)
cdq
xchg
jae
aam
sbb
pop
mov
inc
jae
call
lock
lds
adc
fbld
ficomp
(bad)
xor
iret
jge
jb
pop
cmp
ficom
mov
bound
popf
lods
out
mov
mov
(bad)
xor
std
pop
add
(bad)
inc
mov
in
jno
cli
push
in
pop
fistp
int
inc
dec
inc
jg
call
aad
mov
sub
fnstcw
arpl
sahf
sbb
mov
mov
loop
inc
mov
push
stc
jle
mov
hlt
push
rcr
ds
or
mov
mov
imul
or
sub
sub
jo
cwde
add
pop
cmp
cmp
outs
xchg
sub
xlat
or
cwde
cmp
jo
arpl
ret
(bad)
mov
xor
push
pop
data16
out
(bad)
mov
enter
push
cmp
fbstp
sub
inc
push
pusha
xor
sahf
pushf
mov
mov
and
iret
pop
icebp
inc
fidiv
dec
sbb
adc
push
lods
fwait
gs
xor
es
movs
ds
cmps
inc
dec
inc
out
rcl
mov
sbb
lahf
fucomip
sbb
dec
test
test
in
xchg
jnp
mov
and
lods
movs
push
neg
test
cmp
nop
add
push
repz
mov
add
pop
sub
jne
push
dec
cdq
jp
mov
mov
adc
mov
add
cmps
xor
nop
int3
pop
xchg
out
stc
les
pop
dec
and
rol
scas
mov
scas
(bad)
arpl
add
int3
pop
popa
repnz
mov
sbb
into
cmp
or
cmp
sbb
pusha
xchg
sahf
and
or
sbb
jo
loopne
xchg
adc
fisubr
and
int
rdmsr
and
std
shl
fdivr
adc
push
lock
lods
and
jmp
addr16
dec
data16
xchg
sub
xor
or
test
test
ins
ss
fist
dec
mov
vpsrlw
push
push
dec
or
xchg
push
fdivp
cmp
bound
adc
inc
dec
inc
xor
push
sar
inc
aam
inc
ret
cmp
outs
dec
scas
rol
cmp
xor
dec
bswap
cmp
add
cmp
inc
mov
aam
mov
inc
rcl
cmp
inc
mov
into
mov
out
rcl
inc
(bad)
gs
in
mov
inc
ret
mov
or
enter
pop
dec
pop
jmp
mov
or
inc
scas
cmps
xlat
ret
add
and
(bad)
jo
inc
dec
lahf
rol
add
push
aas
fcomp
popa
dec
test
mov
iret
add
cmp
mov
xchg
sub
or
xchg
das
sbb
in
and
cmps
fimul
jb
jg
and
test
jle
(bad)
fwait
dec
sub
push
and
pop
aad
stos
or
shl
push
mov
pop
sti
sar
xlat
stc
push
mov
xor
pop
iret
ja
cmc
dec
mov
dec
inc
push
adc
retf
cmp
push
cld
mov
not
cmp
fisttp
push
clc
mov
mov
idiv
(bad)
leave
dec
mov
rol
push
adc
pop
rol
cmp
mov
aas
aaa
push
cs
and
shl
sahf
sar
rol
mov
push
mov
sti
rcr
out
rcr
pop
rcl
not
push
add
mov
push
lock
dec
pop
pop
mov
inc
sbb
sbb
(bad)
pop
clc
sbb
pop
jge
mov
pop
repz
imul
cs
jnp
imul
cmps
and
aad
out
cli
and
or
stc
jecxz
aas
sbb
test
xchg
in
call
xchg
retf
add
call
test
or
je
push
adc
cli
mov
push
js
cdq
mov
cmp
mov
pop
aaa
ja
adc
mov
mov
or
mov
push
or
(bad)
adc
jge
adc
add
add
adc
sbb
cmp
push
int
in
jle
repz
mov
xchg
(bad)
in
outs
(bad)
or
jmp
lea
rcl
xchg
mov
jae
loop
xchg
fnstenv
into
sbb
jmp
pushf
pop
cmp
fwait
pop
sub
fnstcw
test
push
cmp
sbb
jecxz
movs
fwait
loopne
jg
movs
pop
rcr
jmp
pop
ins
rcr
cdq
fnstsw
sbb
jp
dec
pop
sbb
xchg
push
cmp
lock
pop
cmp
mov
mov
hlt
mov
mov
call
(bad)
aam
psubb
mov
jp
fnstenv
sti
neg
or
leave
jp
xlat
mov
push
or
mov
mov
rcl
or
or
test
cmp
mov
ror
cs
jne
pushf
lea
cmp
sbb
test
cwde
mov
ds
in
push
xchg
push
inc
mov
xchg
mov
or
mov
nop
mov
xchg
sar
in
xor
add
pusha
aaa
mov
test
and
outs
(bad)
pop
adc
mov
enter
aas
test
mov
lods
into
aam
in
cmp
fisub
std
(bad)
push
pop
pop
ins
mov
jle
push
in
ficom
or
pop
fmul
scas
jns
test
call
sbb
mov
inc
sub
inc
xor
popf
bound
pop
sub
mov
mov
or
dec
inc
sub
mov
sbb
out
cmps
sar
out
icebp
xchg
xor
and
fadd
push
xchg
xchg
or
push
push
cwde
inc
or
fstp
in
and
imul
mov
pop
inc
outs
aas
sbb
adc
sahf
pop
pop
push
cmc
push
mov
dec
mov
inc
jne
dec
add
stc
js
out
dec
out
pop
pop
pop
test
jmp
mov
xor
cwde
add
bound
inc
mov
mov
repnz
dec
mov
xor
jne
or
dec
dec
cdq
mov
jbe
fcmovne
imul
push
cli
jp
aas
sar
add
es
cmp
mov
sub
out
and
push
fcom
and
or
popf
arpl
movs
out
mov
pop
jae
push
cmps
dec
xchg
cmps
jmp
sbb
mov
test
push
xchg
add
popf
mov
mov
(bad)
lods
jno
clc
add
cmp
xchg
jno
xchg
dec
mov
jae
arpl
xchg
push
mov
cli
retf
pop
movs
push
xchg
cld
lods
xor
push
addr16
test
mov
clc
pop
in
aas
cmp
dec
int3
ret
out
(bad)
xor
pop
ss
icebp
stos
cwde
push
fdiv
mov
mov
stos
sub
cmps
or
jg
push
jecxz
mov
sahf
or
(bad)
nop
sahf
and
in
bound
sub
mov
in
mov
retf
mov
(bad)
jmp
fdiv
dec
xchg
mov
in
shl
push
xor
push
pushf
ret
(bad)
cmps
std
ret
push
sbb
jnp
lds
xchg
imul
jno
scas
enter
jmp
je
fild
retf
push
and
jbe
adc
and
mov
stc
into
xor
ds
adc
or
daa
pop
cmp
rcr
adc
sub
xor
ss
push
sub
lea
lods
aam
fcom
hlt
rol
adc
sub
xchg
ret
push
fnsave
push
cwde
mov
sub
fistp
jne
xor
mov
and
ins
dec
mov
test
in
sbb
cmp
(bad)
nop
xlat
test
or
cmp
inc
jmp
clc
or
dec
push
pop
jmp
xchg
push
inc
dec
fimul
sub
jo
aaa
mov
cdq
add
aaa
out
in
inc
sub
xchg
fwait
dec
into
(bad)
icebp
fist
sahf
enter
mov
das
cmp
jnp
or
shl
mov
and
mov
stos
pop
stos
mov
pusha
add
xor
(bad)
and
push
push
xor
scas
in
dec
add
loop
pop
mov
outs
push
push
mov
xchg
pop
dec
std
mov
add
mov
pop
jnp
sbb
icebp
pop
pop
popa
lods
movs
jg
pop
in
dec
or
cmp
mov
push
pop
jno
adc
mov
paddusb
addr16
mov
out
mov
test
(bad)
cmp
pop
jno
jne
ret
ret
imul
jg
imul
aas
jno
jno
(bad)
mov
jne
inc
leave
call
jbe
sbb
dec
cmps
test
in
push
ror
mov
and
jge
ret
sbb
retf
push
int3
jg
xchg
or
sub
and
retf
fdiv
mov
psubd
fild
into
aad
sahf
adc
enter
or
(bad)
xor
ss
ja
lea
mov
sub
daa
dec
outs
pop
xchg
imul
fldcw
cld
pop
outs
xchg
test
out
lods
cmp
cmp
jmp
sbb
mov
fld
pushf
fstp
dec
sub
xor
mov
out
jne
mov
ror
dec
add
mov
test
dec
and
xor
stc
mov
inc
dec
scas
rcl
or
mov
xchg
shl
cmps
and
push
cmp
mov
add
ds
cmp
les
adc
add
mov
out
mov
sub
clc
pop
stos
mov
mov
xchg
dec
icebp
pop
mov
xlat
jmp
xchg
mov
xchg
fs
mov
adc
data16
icebp
mov
rcr
mov
dec
outs
xchg
imul
adc
dec
sti
test
hlt
inc
(bad)
outs
bound
(bad)
sbb
(bad)
jo
pop
adc
sbb
xor
leave
test
mov
pop
int3
push
dec
ins
and
fldenv
pushf
and
and
cmp
scas
jle
xor
jge
jp
jo
add
adc
gs
jb
and
inc
sub
in
and
dec
(bad)
or
sub
mov
loope
pop
inc
or
(bad)
lea
fadd
sbb
mov
cmps
test
scas
out
or
fwait
jl
loop
ret
xor
mov
daa
in
xchg
imul
fisubr
nop
mov
imul
mov
xchg
scas
stc
inc
call
xchg
xchg
xchg
mov
adc
jg
pop
mov
pusha
inc
push
xor
cwde
out
jbe
out
push
mov
push
fwait
mov
icebp
jl
jb
int
xchg
popf
push
push
or
in
sub
stos
outs
mov
push
cmp
dec
fdivr
mov
test
sbb
cld
jo
push
fldenv
push
xor
inc
stos
cmp
add
xchg
push
lods
retf
add
aaa
pop
retf
mov
pop
add
cs
pop
inc
jne
mov
mov
addr16
pop
dec
inc
mov
nop
push
or
(bad)
cmp
js
addr16
fs
or
stos
inc
pusha
mov
cmp
inc
jg
(bad)
out
lds
or
push
mov
fs
call
sahf
daa
aas
data16
outs
push
push
dec
adc
sti
dec
push
movs
mov
mov
sub
pop
jne
ins
pop
push
push
les
ret
push
sbb
ja
fstp
jbe
(bad)
dec
xchg
jo
xchg
add
sbb
sub
leave
or
hlt
xor
or
fiadd
xor
push
push
iret
mov
and
jl
ds
sub
addr16
jge
mov
shr
(bad)
and
ret
inc
jns
jno
sub
mov
sbb
cmps
pop
jno
jp
inc
sub
jb
push
(bad)
jns
das
popa
rcl
push
xchg
(bad)
pop
xor
ficom
fild
push
dec
loope
idiv
repz
lea
arpl
jmp
cmp
fs
and
in
sahf
bound
xor
xor
sub
cmp
js
dec
jmp
inc
lea
jmp
dec
jmp
sbb
push
popa
xchg
add
add
fs
inc
inc
mov
push
push
repz
push
dec
dec
ficomp
fisub
cmc
mov
mov
mov
jnp
dec
dec
fld
sub
mov
push
xchg
pop
cmp
mov
ds
xor
(bad)
jbe
std
jo
cmp
rol
jnp
ins
dec
cmp
mov
xlat
ss
in
sbb
sub
fild
pop
add
aaa
pop
pop
jp
dec
scas
adc
or
pop
sbb
mov
call
sub
push
mov
outs
push
or
mov
pusha
daa
std
adc
sub
push
mov
or
cmps
inc
mov
std
xor
imul
push
push
push
or
ret
sbb
or
push
and
sbb
fdecstp
pop
retf
popf
and
test
jbe
retf
mov
and
lahf
call
and
sub
cmps
rcr
mov
test
pop
dec
std
shr
(bad)
sbb
sbb
add
stos
inc
xor
cs
push
test
fcmovu
or
xor
xchg
cdq
xchg
push
es
mov
mov
aaa
aam
sbb
pop
inc
cs
mov
aam
ja
lods
adc
daa
cmp
mov
sub
shl
xor
jno
cmp
add
test
inc
(bad)
mov
push
lock
lea
hlt
setge
and
inc
leave
ja
jmp
dec
lock
mov
xor
jo
movs
pop
mov
cli
idiv
adc
inc
and
rcl
push
jb
fild
jne
jo
int3
jmp
lods
pop
xor
ss
pop
into
mov
inc
add
dec
test
xchg
(bad)
mov
fcmovnb
push
mov
push
ret
or
push
mov
xor
push
retf
clc
adc
push
(bad)
popf
cmp
jnp
fild
popf
adc
mov
out
jo
les
mov
mov
push
pusha
ret
shr
push
shr
ins
popa
xor
ret
sar
sbb
adc
pop
mov
sbb
xchg
icebp
jb
(bad)
push
loope
call
retf
sti
and
cmp
mov
push
retf
add
xor
nop
jns
pop
ror
sub
fdivr
sub
loope
pop
mov
not
dec
inc
clc
sub
lea
aad
sbb
sub
mov
xlat
js
in
adc
std
fst
mov
test
push
(bad)
fistp
cwde
iret
xor
ret
and
xchg
xor
mov
mov
cli
test
push
inc
(bad)
aaa
cmp
aad
xor
pop
test
pop
jmp
inc
ja
jmp
and
in
call
cwde
nop
pop
jnp
lods
ss
xchg
lods
aaa
call
sub
push
enter
(bad)
dec
fcom
sahf
ins
pushf
xor
loop
dec
scas
sub
mov
mov
repnz
xchg
(bad)
repz
test
dec
shl
cli
jg
in
aad
mov
outs
out
in
shl
faddp
call
push
retf
stos
imul
icebp
lods
mov
scas
add
not
push
fiadd
sbb
dec
push
lahf
pop
clc
popf
(bad)
movs
sub
imul
push
push
(bad)
fisub
int3
mov
or
aad
and
leave
mov
and
retf
mov
mov
ret
pop
shr
fwait
pop
adc
mov
sbb
dec
ficom
push
imul
loope
add
jae
aas
sbb
add
adc
adc
js
and
(bad)
mov
outs
iret
into
sub
jp
sar
aaa
daa
iret
inc
outs
jge
mov
rcl
sbb
mov
aad
test
and
adc
lds
adc
das
xor
loopne
(bad)
xor
ins
jnp
xchg
mov
fstp
inc
inc
mov
rol
ss
pop
nop
mov
movs
pusha
cmp
jmp
(bad)
jno
and
in
ficom
add
ds
rcl
and
inc
or
xchg
jecxz
int
dec
cmc
int
in
ret
cwde
cmp
adc
and
sahf
inc
pop
adc
fwait
and
sahf
cld
inc
loope
rcr
jno
dec
push
mov
sahf
mul
dec
ror
stc
(bad)
sbb
dec
popa
pop
enter
or
pusha
in
mov
xor
test
test
or
pop
dec
lods
xchg
dec
dec
add
fcom
and
outs
imul
xor
jnp
adc
inc
pop
out
test
cmp
inc
or
adc
jae
inc
mov
sahf
inc
or
pop
pusha
or
mov
jae
or
mov
pop
mov
xchg
mov
mov
inc
arpl
and
(bad)
lock
aaa
lahf
push
jge
shl
outs
test
pop
les
cdq
popf
sbb
loopne
jo
es
sbb
mov
jb
cli
repz
push
pop
xchg
retf
cmc
and
pop
mov
int3
out
mov
js
je
into
mov
in
xchg
add
rcl
xlat
loop
ret
sbb
mov
jle
icebp
cmc
aam
cmp
and
(bad)
iret
or
or
mov
dec
daa
mov
cmc
ins
mov
xor
xchg
inc
sbb
jns
(bad)
xor
iret
add
sub
cmp
movs
(bad)
mov
jmp
in
xor
cmp
jns
nop
daa
rcr
inc
push
cmp
clc
xchg
sbb
push
ficomp
xchg
test
arpl
sub
inc
out
dec
sbb
leave
dec
fwait
dec
adc
push
pop
inc
jl
dec
popf
shl
repz
sub
lahf
adc
std
dec
std
inc
mov
push
mov
dec
inc
sbb
stc
dec
cmps
dec
in
mov
aas
xor
cld
or
push
out
push
test
fisttp
push
fs
pop
stos
fstp
push
push
push
jo
pop
cmc
jno
in
inc
scas
dec
or
enter
invd
mov
push
fwait
or
sbb
loop
mov
sub
or
mov
mov
(bad)
movs
or
stos
mov
mov
les
cmps
gs
pusha
jmp
in
mul
xor
adc
or
mov
mov
pop
ins
jnp
mov
int
or
je
lea
mov
lds
fistp
(bad)
cmp
fadd
ret
retf
push
push
stos
leave
gs
jmp
(bad)
in
jne
sub
and
mov
int
inc
in
repz
iret
repz
jl
movs
cwde
sar
or
(bad)
xor
imul
mov
push
push
sub
fisttp
test
mov
into
push
lea
pop
cmp
xor
adc
scas
adc
aaa
jl
mov
jecxz
in
cmp
sub
(bad)
pop
jae
in
mov
rcl
xchg
(bad)
sar
jp
(bad)
jmp
pop
test
xchg
in
(bad)
jmp
xor
stos
xchg
xor
in
in
or
test
cdq
dec
xchg
mov
inc
push
and
fwait
loop
(bad)
icebp
pop
mov
inc
in
neg
popf
pop
ds
icebp
test
dec
ins
retf
pusha
mov
outs
pop
pop
dec
cli
sahf
dec
mov
loop
push
dec
inc
jb
movs
loop
push
cli
jge
pop
push
into
inc
dec
cmps
jne
pop
cld
mov
sbb
pusha
pop
inc
aas
push
imul
jge
dec
xor
add
jp
push
push
shr
xor
xor
dec
pop
push
xchg
jge
sub
and
inc
imul
jg
outs
pop
sbb
xor
(bad)
retf
movs
adc
or
sahf
adc
in
mov
sub
or
or
add
cmp
or
adc
sbb
popf
mov
aaa
bnd
push
cmp
rcr
push
test
xchg
ret
gs
rcr
(bad)
call
mov
outs
lods
jno
mov
(bad)
dec
cld
mov
loopne
div
mov
cmp
mov
retf
aaa
movs
mul
sti
jmp
and
mov
mov
add
and
cmp
(bad)
rcl
and
sub
cwde
jg
scas
push
(bad)
jb
cdq
sub
cmp
and
fmul
enter
setnp
outs
pushf
test
or
les
mov
xor
cmps
(bad)
sbb
add
mov
(bad)
sahf
sbb
cmp
fsub
loope
aad
dec
xor
(bad)
call
loop
leave
xchg
push
push
(bad)
fst
ret
xchg
retf
in
mov
inc
cmps
mov
cwde
jle
pop
out
xor
inc
inc
add
inc
icebp
push
adc
inc
and
popf
mov
call
pop
mov
fdivr
mov
in
adc
adc
jg
and
jne
fs
xor
mov
jle
lods
icebp
les
aas
or
ficom
scas
mov
fisttp
out
nop
mov
ins
sbb
lods
mov
pop
jle
push
mov
inc
xchg
or
fsub
int
mov
adc
or
pop
push
arpl
mov
(bad)
cs
sbb
mov
sub
mov
dec
or
xor
(bad)
imul
xlat
ror
ret
pop
pop
lods
(bad)
ins
sub
aam
(bad)
cmp
sbb
add
(bad)
mov
jp
adc
ss
push
retf
xchg
and
scas
jbe
jno
int3
adc
jmp
into
xor
lock
sbb
es
test
jl
out
mov
sbb
cmc
sub
jge
jle
ret
cmc
aam
or
sbb
xlat
iret
fld
adc
ret
mov
das
test
fiadd
xchg
xchg
xor
adc
(bad)
mov
repz
xor
mov
and
add
cmp
dec
mov
in
xlat
repnz
mov
out
lods
mov
sbb
out
les
ret
or
enter
fs
adc
call
sbb
outs
push
popf
push
mov
repz
or
push
mov
pop
rcr
mov
(bad)
cmps
shl
sahf
cld
stos
js
push
jge
xchg
test
push
dec
leave
push
fcom
mov
and
push
int3
data16
lods
inc
lods
mov
icebp
repz
pop
pop
cmp
add
hlt
or
cli
pop
fstp
mov
fisub
in
imul
mov
sti
jmp
mov
mov
adc
mov
sub
mov
ret
addr16
xor
adc
mov
xadd
pop
pop
xchg
add
ficom
aad
bound
scas
aaa
(bad)
into
hlt
jno
cmp
leave
xor
das
pop
sti
packssdw
push
and
and
ja
sub
int
jo
and
mov
jns
std
sub
cli
inc
ins
and
loop
arpl
jge
xor
jge
movs
sub
cmp
sub
and
aad
shr
mov
add
jo
cmp
mov
push
sub
lea
scas
mov
sub
stos
ins
jp
lock
or
std
pop
jno
mov
retf
test
cld
push
xor
out
repz
inc
sahf
adc
test
rcl
mov
jnp
dec
fwait
jle
xor
mov
adc
and
sbb
jnp
dec
jb
mov
arpl
mov
mov
inc
mov
or
mov
lahf
pop
jb
xchg
pop
(bad)
fcom
xchg
jns
leave
xchg
xor
jmp
(bad)
add
scas
jae
mov
popf
stc
shr
xor
mov
mul
cdq
pop
arpl
inc
cmc
push
jmp
outs
fstp
arpl
mov
icebp
mov
cmps
inc
out
sub
fcom
jp
es
cmp
jp
or
jmp
dec
or
cs
pop
movs
pop
in
in
sar
dec
jmp
jo
mov
cmp
cmp
push
sub
and
sbb
mov
push
lahf
push
mov
rcl
or
into
out
leave
mov
loop
out
cmps
fldenv
sbb
not
and
and
sar
jb
mov
sbb
pop
mov
or
xchg
sbb
dec
xor
adc
sbb
gs
out
mov
and
or
ror
sbb
cmp
pop
push
clc
add
mov
add
out
mov
stos
xlat
mov
xlat
xchg
leave
arpl
outs
pop
push
mov
add
cmp
pusha
mov
adc
push
in
mov
jns
pop
add
inc
in
js
out
sub
jmp
cmps
jle
jo
(bad)
mul
mov
outs
inc
in
sub
int
push
cli
js
popf
or
push
cmps
inc
and
imul
add
pop
xchg
jnp
scas
lahf
pushf
jmp
mov
(bad)
pop
fld
shl
int3
inc
and
movs
jbe
fidiv
ss
ror
mov
in
gs
lods
mov
inc
cs
pop
xchg
sub
cmp
outs
add
dec
outs
or
xchg
mov
jno
hlt
dec
mov
dec
mov
lds
and
push
mov
orps
in
adc
push
mov
xchg
mov
mov
iret
int
cs
out
push
jmp
mov
push
sbb
xor
ja
lds
add
stc
mov
fnstcw
je
and
bnd
lods
lods
lahf
jbe
hlt
ror
cmp
and
add
iret
push
cmovbe
retf
rol
sub
jge
jo
shl
(bad)
sub
sub
rcl
fcomp
pusha
aad
shl
pop
fisttp
cmp
add
pop
xchg
or
mov
xchg
(bad)
stos
fadd
and
mov
push
loop
mov
cmp
cmps
in
test
cmp
retf
jmp
out
pop
sub
stc
lahf
dec
xchg
mov
outs
jmp
sub
in
shr
mov
dec
adc
out
rcl
push
inc
mov
call
mov
pushf
js
(bad)
repnz
dec
out
les
test
push
or
movs
mov
or
push
nop
addr16
sub
mov
inc
mov
pop
mov
push
sub
cmps
add
or
stos
iret
sub
fdivr
jae
dec
or
add
std
jmp
sti
cwde
mov
jno
scas
inc
imul
push
(bad)
inc
clc
lock
(bad)
fisttp
add
test
aam
(bad)
div
(bad)
sti
aaa
addr16
pop
in
add
mov
aam
fisttp
fisubr
out
inc
inc
add
xchg
dec
cmp
je
out
fadd
lods
dec
movs
mov
movs
pop
jecxz
enter
mov
and
stos
cld
push
in
add
(bad)
test
retf
push
lea
mov
inc
dec
shl
leave
ret
sbb
adc
mov
(bad)
sub
cld
imul
push
add
mov
and
in
popa
add
imul
test
into
clc
add
fs
cli
or
std
sbb
cmp
push
test
cmps
dec
add
jl
popf
jbe
cwde
call
call
mov
int3
test
fdiv
test
cs
repz
dec
jg
xchg
ds
pop
pusha
mov
out
or
add
jp
inc
mov
inc
sbb
cmps
pop
pop
sar
push
push
ja
js
fidiv
std
push
call
(bad)
(bad)
ins
add
add
add
std
js
push
push
jne
pop
add
cmp
add
xchg
cmp
or
addr16
inc
and
je
icebp
inc
pop
imul
sub
xor
enter
mov
or
sub
inc
and
add
mov
jg
lock
add
xor
clc
hlt
idiv
std
je
jno
or
imul
cmp
in
mov
test
push
pop
mov
ins
dec
push
lods
call
leave
fsubrp
dec
push
push
and
mov
outs
fisub
loop
adc
xor
clc
shl
dec
mov
xor
into
pop
stos
bound
ins
dec
cmp
sbb
jae
outs
jae
sub
fimul
cmp
ins
jns
or
test
sub
pop
(bad)
sub
enter
pusha
mov
fmul
pushf
iret
xchg
ror
out
pop
inc
add
sbb
lock
jg
pxor
clc
pop
out
mov
rol
pop
dec
in
gs
push
cmps
jl
push
gs
push
cmps
jle
in
and
jmp
test
sti
lock
in
xchg
xchg
cmp
mov
test
ror
push
adc
retf
or
cmp
sub
jmp
adc
cdq
sti
scas
sub
add
xor
cs
call
inc
add
mov
push
ret
loop
loopne
outs
shr
jae
jnp
call
inc
cs
add
add
cmps
sub
sbb
push
rol
add
mov
(bad)
mov
std
rol
inc
pop
mov
xor
retf
scas
test
push
mov
mov
push
stc
outs
mov
(bad)
push
es
call
out
fdivp
jmp
mov
push
call
mov
pop
pop
scas
dec
jecxz
sub
xor
bound
shl
std
inc
mov
ins
fild
(bad)
jo
pop
gs
inc
iret
(bad)
jo
pop
pop
mov
int3
pop
push
sti
inc
(bad)
jo
pop
dec
mov
int3
cwde
jae
out
in
pusha
or
in
pop
or
(bad)
(bad)
fdiv
aas
hlt
je
cmp
dec
mov
enter
in
sub
(bad)
pop
les
mov
fiadd
sbb
cvtdq2ps
arpl
adc
mov
stc
outs
mov
xor
add
sahf
(bad)
div
add
xchg
aas
mov
cmp
dec
call
add
(bad)
call
dec
pop
(bad)
push
jnp
cmp
lds
test
cmp
dec
loopne
in
inc
xor
xchg
or
add
push
mov
mov
repz
mov
mov
loopne
arpl
dec
xchg
add
out
jo
or
or
xor
xchg
movs
xchg
shl
pushf
cs
out
sti
(bad)
jg
xor
fild
sub
test
ficomp
pop
leave
push
xor
test
push
aas
cmp
jns
mov
mov
add
push
ss
xchg
lock
jno
iret
xchg
push
fwait
in
ret
(bad)
and
sbb
add
pop
mov
loope
call
fs
das
jmp
mov
sbb
dec
movs
or
jbe
jae
ror
xlat
mov
jl
jmp
push
or
test
(bad)
rcl
push
adc
pop
jnp
mov
call
or
fistp
sbb
mov
pushf
mov
xor
ror
in
int3
pop
pushf
mov
pusha
xor
shl
adc
jno
ficom
jb
adc
std
fdivp
jmp
add
pusha
cld
adc
jae
push
sbb
mov
push
inc
scas
add
out
imul
ret
(bad)
pop
jmp
sbb
or
(bad)
mov
xchg
adc
cmp
inc
imul
mov
xchg
ret
push
cmp
cmp
mov
pushf
mov
pop
inc
and
(bad)
(bad)
(bad)
call
cmp
sbb
repnz
movs
lock
int
push
add
test
aaa
test
lods
xor
mov
mov
int3
xchg
lods
lods
adc
mov
adc
mov
sub
data16
ss
jge
push
add
cs
pop
cmp
std
std
mov
ror
xor
inc
test
mov
rcr
(bad)
ror
fs
repz
lods
mov
cmp
repnz
xor
call
ret
movhps
ret
imul
and
pushf
in
into
idiv
xor
ss
lea
cli
jg
jp
and
cmp
out
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
or
jne
std
sti
.byte
test
.byte
