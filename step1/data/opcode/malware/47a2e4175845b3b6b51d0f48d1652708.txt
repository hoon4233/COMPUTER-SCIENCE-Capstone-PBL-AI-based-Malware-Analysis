ss
enter
cmp
mov
enter
mov
enter
mov
mov
ss
add
enter
mov
cmp
mov
mov
mov
mov
ss
mov
cmp
mov
mov
mov
mov
mov
add
mov
cmp
mov
mov
cmp
mov
enter
enter
enter
mov
enter
enter
mov
ss
enter
cmp
cmp
enter
mov
mov
enter
enter
mov
enter
ss
mov
cmp
mov
mov
mov
mov
cmp
enter
mov
mov
enter
enter
mov
enter
cmp
mov
enter
mov
ss
add
push
or
jb
cmovns
jb
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
xor
add
dec
dec
add
jne
pop
pop
leave
ret
inc
dec
sbb
ret
ins
add
add
push
(bad)
pop
pop
pop
ret
inc
call
je
les
ret
add
lea
jne
ror
add
adc
pop
pop
retf
ret
inc
mov
pop
pop
pop
ret
call
dec
add
outs
or
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
mov
push
lea
mov
lea
mov
and
lea
mov
sar
and
mov
mov
mov
mov
mov
sub
sub
mov
imul
sub
xor
xor
mov
imul
sar
xor
cmp
setne
add
lea
sub
cmp
jl
xor
cmp
setl
and
mov
pop
shl
or
sub
pop
add
cmp
jl
xor
cmp
setne
add
and
pop
ret
nop
nop
nop
nop
dec
adc
(bad)
cmovo
add
mov
in
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jge
mov
xor
sar
or
mov
xor
mov
mov
mov
mov
mov
push
push
push
lea
push
push
call
mov
mov
mov
mov
lea
push
push
push
push
push
call
mov
mov
mov
push
call
mov
push
call
mov
mov
mov
mov
push
push
push
call
mov
jmp
mov
ret
mov
mov
lea
mov
and
mov
mov
sar
mov
sar
mov
xor
and
xor
cmp
setne
and
mov
mov
sub
or
mov
xor
add
xor
cmp
setl
add
mov
mov
shl
sar
add
test
je
sar
mov
cmp
jge
add
lea
or
xor
cmp
setl
shl
cmp
jle
mov
neg
shl
sub
lea
shl
xor
cmp
sete
xor
cmp
jge
xor
mov
mov
shl
mov
sar
mov
mov
or
add
mov
test
je
mov
xor
sub
mov
mov
imul
test
je
mov
mov
shl
add
mov
mov
test
je
lea
sub
neg
lea
and
mov
cmp
jne
mov
mov
imul
test
je
xor
cmp
setne
and
mov
mov
sub
je
xor
cmp
sete
shl
mov
xor
cmp
setne
shl
mov
mov
or
shl
mov
cmp
jle
xor
cmp
setl
or
mov
lea
shl
sub
je
mov
mov
xor
cmp
setne
add
mov
mov
mov
shl
mov
shl
mov
mov
mov
xor
cmp
setge
shl
mov
mov
mov
shl
or
mov
mov
mov
sar
and
mov
cmp
jne
mov
imul
sar
mov
xor
cmp
sete
and
mov
sar
mov
mov
mov
mov
and
push
mov
shl
push
xor
cmp
setl
push
push
push
call
mov
mov
mov
sar
or
mov
xor
cmp
setl
sub
mov
push
call
lea
sub
lea
shl
mov
and
mov
mov
or
xor
mov
xor
cmp
setl
shl
mov
test
je
shl
mov
mov
xor
sar
mov
xor
cmp
setne
or
mov
mov
sar
add
mov
mov
mov
mov
mov
shl
or
mov
cmp
je
mov
shl
mov
jmp
mov
ret
mov
mov
mov
mov
xor
or
je
lea
mov
sub
cmp
jle
lea
imul
mov
or
sar
xor
cmp
setge
sar
cmp
jge
lea
or
xor
cmp
setge
sub
mov
xor
and
xor
xor
mov
mov
shl
add
mov
mov
sar
test
je
imul
shl
cmp
je
mov
mov
sar
xor
xor
cmp
setg
sar
sar
cmp
jge
lea
sar
xor
mov
lea
mov
mov
sar
test
je
xor
cmp
setle
shl
inc
jmp
mov
and
add
mov
mov
shl
and
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
cmp
jle
mov
xor
cmp
mov
setl
sar
mov
mov
mov
xor
sar
mov
test
mov
jge
xor
cmp
setl
add
or
xor
shl
xor
sar
cmp
setg
sar
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
shl
mov
push
mov
push
mov
or
or
mov
sub
xor
cmp
mov
setg
mov
shl
mov
lea
imul
lea
and
lea
xor
xor
cmp
setne
or
inc
mov
shl
and
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
mov
push
cmp
push
mov
jle
mov
mov
mov
or
sar
mov
mov
push
mov
mov
xor
mov
cmp
mov
setl
shl
mov
or
xor
cmp
mov
mov
mov
je
mov
mov
sub
add
jmp
mov
mov
mov
sar
shl
cmp
jg
mov
mov
xor
shl
mov
add
shl
cmp
mov
jne
xor
xor
cmp
setl
xor
xor
cmp
mov
setl
mov
sar
xor
cmp
setg
mov
and
mov
sar
mov
mov
or
add
mov
add
add
or
xor
cmp
mov
setg
sar
and
cmp
jne
or
xor
cmp
setne
lea
add
sar
test
pop
je
xor
cmp
setne
and
mov
mov
sar
add
add
pop
pop
pop
ret
nop
nop
push
mov
mov
mov
or
mov
shl
push
mov
mov
mov
and
or
mov
shl
mov
mov
mov
sar
or
mov
sar
mov
xor
mov
sub
pop
je
and
mov
shl
add
sar
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
test
nop
nop
nop
nop
nop
nop
nop
rol
test
sub
call
or
jmp
rol
mov
cmps
dec
inc
push
adc
dec
xor
sbb
jmp
repnz
(bad)
inc
add
gs
mov
imul
mov
icebp
push
add
mov
add
xchg
cmp
jae
add
add
lock
(bad)
add
add
sar
add
add
or
jmp
dec
lock
call
jne
in
add
add
call
fild
ret
add
iret
add
(bad)
jp
and
add
icebp
jmp
jmp
add
cs
sar
add
cld
inc
lods
sub
rcl
mov
inc
test
ins
shr
push
maskmovq
add
sbb
add
add
or
xabort
add
call
sldt
hlt
rcl
sub
inc
add
and
in
add
ret
shl
add
fild
dec
je
(bad)
pop
add
div
hlt
rcr
jmp
sbb
jmp
adc
enter
or
test
add
rdtsc
fisttp
add
xor
or
jmp
movs
call
imul
cmp
add
rcl
pop
(bad)
ret
mov
fucomi
xlat
int3
call
hlt
data16
add
adc
and
dec
xor
push
bnd
add
popf
jmp
mov
fs
mov
sti
xchg
add
add
xchg
imul
add
jae
sbb
lock
leave
jge
or
adc
jp
test
add
cmp
inc
sub
call
fcmovnu
add
fld
lea
add
lock
pop
inc
add
test
add
gs
inc
add
add
pop
xchg
or
js
call
xlat
add
inc
add
add
jae
je
sub
sbb
add
add
jmp
imul
jmp
fcomp
je
fcmovbe
pop
add
ret
fcomip
enter
jne
test
xor
rcr
enter
jge
adc
inc
add
add
call
jne
sti
adc
sub
pslld
jmp
mov
iret
cwde
aam
call
sub
call
cmp
leave
jne
xchg
test
jmp
jmp
push
add
xor
gs
fadd
mov
dec
add
add
jmp
mov
movs
inc
xor
and
inc
add
pop
jne
add
add
rol
retf
dec
jmp
out
mov
inc
or
add
ja
add
(bad)
inc
repz
push
ins
jmp
inc
add
add
mov
jmp
add
mov
add
dec
add
mov
cld
cmp
dec
pop
call
leave
add
sbb
dec
add
add
add
jmp
cmp
add
push
rol
add
add
inc
adc
add
sub
xchg
fs
scas
jne
jne
xchg
imul
add
cmp
add
add
clc
fild
add
xchg
iret
dec
add
pop
popf
push
jne
or
dec
jmp
add
hlt
dec
add
xor
add
add
and
popa
add
and
pop
add
mov
inc
and
jmp
xor
enter
pop
mov
or
leave
call
ins
add
jnp
jae
or
add
push
add
iret
jp
ins
add
add
xor
(bad)
jo
mov
(bad)
aas
add
sub
add
retf
sub
retf
add
test
fsubr
mov
div
sub
ins
repz
add
add
or
add
push
sbb
or
push
and
inc
mov
add
sti
fadd
push
inc
dec
xor
xchg
ret
call
(bad)
clc
dec
mov
jmp
add
shl
add
jo
xchg
add
test
loop
xor
enter
xor
adc
(bad)
push
ror
mov
add
add
push
pop
test
add
xchg
rol
je
jmp
inc
add
or
sbb
push
add
mov
call
fcom
sbb
add
add
add
xor
or
repnz
jl
add
xchg
add
add
sti
idiv
fiadd
nop
add
and
dec
add
add
lock
add
repnz
add
dec
icebp
rcr
add
repz
leave
push
pop
leave
add
add
mov
repnz
cmp
scas
dec
retf
mov
test
push
add
inc
add
add
mov
pop
add
push
add
dec
movs
popf
add
arpl
pop
lock
fild
retf
add
add
sbb
add
aas
jmp
mov
add
jmp
or
add
xchg
rol
push
add
and
push
(bad)
test
test
fiadd
mov
popf
mov
rol
lock
dec
or
in
retf
mov
call
loope
(bad)
jmp
add
jmp
cmp
or
jmp
add
stc
in
add
jb
test
xchg
add
test
add
add
(bad)
mov
add
xchg
shl
add
call
sbb
lock
ins
pop
add
mov
inc
add
rol
push
call
adc
add
push
add
jmp
xchg
xor
inc
pop
push
lods
add
faddp
je
add
sbb
inc
jge
push
inc
add
inc
add
add
mov
mov
add
lock
add
and
icebp
push
mov
add
add
add
add
repz
or
test
call
in
pop
inc
push
sgdtd
xchg
rol
add
push
add
jne
jmp
add
xlat
dec
sbb
jae
test
out
add
rol
jmp
call
sar
adc
add
jmp
add
fild
inc
dec
fistp
inc
sti
div
add
scas
add
not
shl
sub
(bad)
fcompp
movlps
add
add
shl
jmp
mov
(bad)
mov
add
add
jne
scas
or
mov
add
jmp
int3
jmp
ret
clc
add
add
add
callw
inc
sub
sub
imul
sub
fcmovne
add
xor
(bad)
(bad)
push
mov
jae
leave
movs
movs
add
hlt
add
jmp
add
add
adc
mov
inc
add
jae
imul
add
add
add
or
sbb
add
lods
retf
add
add
pop
or
fld
inc
add
jne
mov
inc
jmp
inc
test
mov
cmp
aam
push
ret
jae
add
adc
mov
dec
sub
rol
add
mov
ficom
add
inc
pcmpgtw
pop
and
sub
add
iret
call
call
jmp
or
inc
add
add
pop
add
rol
add
iret
pop
xor
jmp
add
add
xchg
add
jmp
add
mov
int
add
and
sbb
add
(bad)
push
add
in
mov
add
add
jb
jbe
dec
add
sub
sub
pop
ret
cmp
dec
add
add
add
je
add
push
adc
mov
in
gs
jmp
cwde
inc
push
dec
jmp
add
scas
sub
call
mov
add
xor
and
add
add
or
add
pop
dec
add
add
add
enter
add
fisttp
dec
add
ret
mov
add
add
dec
shr
jmp
pop
jp
add
adc
add
add
dec
retf
add
cmps
(bad)
dec
fsub
(bad)
push
jmp
icebp
call
push
sub
xor
inc
jmp
add
and
enter
leave
dec
add
add
jnp
scas
rol
xor
add
mov
jmp
repnz
add
xor
call
add
call
jmp
jbe
inc
sar
add
add
cli
imul
inc
inc
in
add
add
add
xor
rcr
inc
add
inc
(bad)
cmp
mov
pop
inc
inc
sbb
sbb
leave
add
je
fdivp
(bad)
fcmove
movhps
mov
inc
jmp
cmovs
add
shl
pop
push
shl
shr
jne
jbe
adc
dec
add
add
add
leave
add
ins
and
out
fiadd
pmaxub
push
sar
or
outs
add
mov
add
test
or
rol
mov
lock
scas
add
mov
inc
add
add
retf
add
push
add
add
add
add
rol
fstp
mov
add
shr
xchg
sldt
add
add
pushf
add
jmp
add
pop
outs
je
push
add
add
sub
(bad)
jg
push
add
mov
fs
add
add
jmp
cmp
lock
adc
add
fimul
xchg
add
rol
repnz
jmp
repnz
push
or
aas
jne
jmp
fs
jmp
rcl
mov
add
add
jge
sar
add
add
add
aas
repnz
pop
retf
add
add
sldt
add
out
jne
and
or
loopne
add
add
clc
push
cmp
cmp
sub
sub
add
push
xor
mov
add
(bad)
push
not
add
popf
mov
loop
push
dec
push
adc
lods
inc
or
repnz
or
jge
rol
js
add
mov
scas
add
add
iret
add
repnz
inc
mov
add
mov
add
pop
icebp
repz
sbb
pop
add
xor
jmp
xchg
test
add
add
xor
jae
rol
repnz
xor
test
add
add
add
pop
add
nop
sbb
add
add
test
fld
call
xor
test
dec
sbb
rol
xchg
add
jae
or
dec
(bad)
fbstp
mov
dec
adc
add
or
into
inc
cmp
push
jmp
jmp
add
xchg
popa
inc
add
and
sub
in
in
fdivr
add
clc
add
add
push
add
ins
inc
inc
fucomip
add
add
(bad)
pop
add
fist
add
sti
inc
add
test
popf
jmp
imul
call
ret
je
mov
sub
push
xor
out
jge
add
mov
add
xor
int
xor
inc
add
rol
add
mov
or
dec
neg
add
ret
add
inc
mov
pop
pop
add
call
clc
(bad)
cmp
add
psubusw
retf
ror
adc
add
enter
add
mov
or
add
test
add
pop
mul
leave
or
sbb
xchg
or
xor
nop
add
add
sbb
add
add
xchg
dec
leave
leave
rol
mov
mov
xchg
rol
test
push
adc
loopne
add
imul
div
adc
dec
add
neg
add
(bad)
cld
rol
inc
cmp
inc
xor
(bad)
sti
retf
add
push
xor
mov
out
add
add
rol
xor
clc
jmp
add
push
rep
inc
punpckhdq
mov
sbb
add
and
mov
add
mov
add
fnstcw
add
add
adc
icebp
add
mov
add
add
loope
int3
jmp
mov
xlat
add
test
add
cmps
add
je
mov
rol
and
fdiv
add
and
test
in
rol
leave
lods
fidiv
clc
dec
jmp
add
add
shl
ror
add
cmp
jmp
sbb
xchg
push
sbb
rol
add
inc
imul
(bad)
add
add
xchg
pop
xor
pop
push
inc
add
add
rol
call
retf
(bad)
lock
add
pop
jecxz
test
xor
add
xor
xor
add
add
inc
add
call
jmp
dec
add
mov
fstp
idiv
adc
ins
add
jb
mov
add
ret
inc
scas
fiadd
add
add
jne
push
sub
add
push
jmp
pop
push
and
retf
add
stc
add
add
shr
add
jge
dec
repnz
sub
div
add
call
jmp
adc
repnz
dec
ret
inc
add
movs
push
fild
imul
hlt
mov
inc
call
pop
xchg
call
arpl
mov
xchg
rol
cmp
add
bnd
pushf
pop
mov
ror
inc
add
xor
inc
mov
or
inc
dec
push
add
add
inc
ficom
jmp
inc
div
sub
xor
jno
cdq
push
jge
jmp
ficomp
mov
inc
add
add
adc
and
scas
add
sti
add
add
xor
jmp
mov
xlat
(bad)
fsub
dec
inc
add
add
push
push
add
add
jne
repnz
add
jp
rol
fstp
repnz
lock
xor
add
add
dec
call
rol
push
sub
popf
mov
add
xchg
adc
mov
mov
push
fadd
add
and
ficom
add
add
add
sbb
or
call
add
shl
add
push
add
add
add
push
lock
mov
add
add
aas
add
adc
add
call
pop
add
add
out
movs
mov
icebp
popa
add
sbb
dec
or
rcr
add
aas
and
add
add
add
add
push
fld
add
or
add
sar
jb
add
pop
dec
add
pop
shr
inc
fdiv
or
adc
call
shl
call
sbb
xor
and
add
fimul
fldenv
add
add
call
bsf
or
add
xchg
add
(bad)
dec
test
scas
adc
ror
je
shl
push
pop
rol
pop
(bad)
f2xm1
shl
jmp
add
sbb
sti
in
sub
popa
ret
jmp
add
jge
add
pop
movs
push
sti
add
mov
add
mov
ror
add
icebp
ret
inc
push
pop
mov
or
add
add
in
mov
xor
mov
aas
add
jmp
jae
shr
mov
ins
sub
(bad)
xor
or
sub
add
repnz
leave
dec
push
add
movs
test
add
add
(bad)
jmp
shl
int3
add
stos
add
push
idiv
mov
scas
add
fiadd
sbb
je
or
rol
mov
add
xor
inc
rol
jo
jmp
mov
clc
add
add
add
popa
pop
scas
add
dec
inc
xor
leave
call
mul
add
test
add
enter
add
add
add
sldt
xor
icebp
retf
cmps
call
add
ret
mov
add
dec
sub
push
xlat
add
add
ret
inc
add
add
repnz
push
mov
jmp
add
add
add
inc
jne
aas
add
(bad)
jbe
rol
test
adc
push
inc
add
leave
sub
inc
dec
sbb
mov
leave
dec
adc
adc
add
sbb
add
test
dec
mov
push
push
inc
cmps
lock
cmp
enter
mov
dec
call
test
test
cli
sub
push
jne
xchg
add
add
or
add
or
dec
push
fld
add
jmp
mov
add
add
inc
jae
add
mov
shr
icebp
lds
fist
push
inc
add
leave
add
jb
pop
call
xchg
retf
mov
add
sti
jne
inc
jmp
sub
clc
pop
inc
hlt
add
or
inc
call
add
sub
xlat
and
push
xchg
mov
dec
add
add
or
adc
add
jmp
adc
retf
call
retf
add
add
stc
xchg
in
add
leave
leave
lods
sldt
fild
jmp
jne
idiv
sub
sub
(bad)
cs
sbb
sub
test
add
xor
jne
test
dec
ja
ret
xor
fcmovnu
dec
fisubr
cld
add
fnstenv
xor
mov
rcl
add
add
(bad)
(bad)
imul
dec
mov
mov
xor
jge
pop
add
aad
rcl
(bad)
jmp
in
sub
add
sub
loopne
(bad)
add
mov
add
push
jmp
dec
add
test
(bad)
fnstcw
mov
imul
inc
add
add
loopne
add
push
mov
test
call
add
test
jge
jmp
ror
adc
test
and
(bad)
repnz
add
gs
(bad)
push
(bad)
cmp
rol
add
fiadd
pusha
in
and
cmps
push
push
hlt
add
add
sbb
xor
add
mov
mov
sbb
pop
psubsb
mov
mov
cmp
add
add
call
add
gs
cmp
add
cli
mov
add
jmp
add
jmp
pop
jmp
jmp
add
fcompp
xchg
add
add
or
jmp
add
xor
add
add
add
call
jmp
add
adc
add
out
jmp
inc
push
add
add
outs
add
push
add
add
sbb
jmp
adc
inc
add
add
call
and
loopne
add
add
dec
dec
jne
shr
or
ror
sbb
inc
jne
and
shr
sub
add
push
call
adc
add
test
add
add
add
rol
stos
jmp
jmp
jmp
rol
fld
add
inc
xor
test
and
push
add
add
adc
add
add
test
add
adc
add
add
and
add
je
sbb
call
add
add
or
(bad)
(bad)
dec
inc
inc
add
add
rcl
call
test
repnz
mov
push
mov
push
add
movs
dec
mov
or
icebp
add
jmp
add
popf
push
pop
call
jmp
fadd
repnz
jmp
dec
sbb
xchg
add
add
rol
add
add
mov
mov
sbb
inc
add
jmp
inc
pop
add
add
add
jne
popa
and
jmp
xlat
mov
fadd
inc
call
fiadd
add
add
push
add
add
add
popa
add
add
mov
mov
in
ud0
xor
mul
add
les
rol
lods
and
test
add
add
clc
or
cmp
rcl
add
add
inc
dec
add
cli
add
add
or
mov
inc
sub
sar
dec
mov
add
add
cmp
add
inc
xor
add
rol
fdivr
add
jmp
add
mov
(bad)
push
add
call
push
fild
xchg
add
dec
mov
call
test
add
add
add
push
add
add
adc
add
jns
add
add
add
xor
xchg
add
mov
adc
add
inc
add
add
or
imul
idiv
dec
add
cmps
fild
add
add
add
lock
(bad)
jo
cmovs
or
add
iret
and
jmp
aam
dec
add
mov
add
add
mov
mov
add
aam
add
add
and
add
mov
fbstp
add
or
lock
add
xchg
call
pop
rcr
jmp
btc
inc
jb
mov
add
jmp
cmp
fild
dec
jbe
(bad)
inc
add
add
add
jmp
sar
popa
dec
add
neg
add
test
push
add
xchg
test
lock
push
xor
add
sti
arpl
sub
add
jne
je
jge
mov
hlt
mov
enter
add
rol
and
add
jmp
jae
jne
scas
jge
inc
pop
test
inc
push
add
inc
jmp
inc
arpl
fucomi
(bad)
inc
pop
push
shr
repnz
(bad)
fild
add
rcl
rol
add
std
enter
add
or
push
or
imul
jmp
into
mov
add
add
out
add
inc
jmp
add
cmp
jge
mov
push
add
add
ret
imul
mov
dec
hlt
add
add
xor
add
cmp
sub
loopne
adc
add
retf
add
in
fld
add
add
jmp
pop
add
add
sbb
rcl
add
mov
mov
add
add
gs
inc
cmp
jmp
mov
add
push
not
fldcw
js
xor
add
pop
shr
fild
lock
jmp
mov
jmp
jge
ins
xchg
inc
std
fiadd
add
test
loope
pop
add
and
ror
int3
adc
out
add
add
cmp
add
xor
add
add
repz
outs
test
leave
inc
add
ret
add
add
inc
dec
jmp
add
add
jbe
ror
add
cmp
rol
inc
push
inc
push
push
add
das
cli
out
arpl
icebp
add
adc
add
jne
mov
mov
dec
add
ret
add
sub
add
jo
add
in
adc
xor
mov
add
data16
test
add
push
add
add
sbb
sbb
mov
add
add
fnstenv
xchg
lock
and
add
add
xchg
inc
add
push
jmp
add
es
(bad)
and
add
add
jmp
outs
pcmpeqb
jbe
xor
shr
add
pop
or
or
add
(bad)
jmp
add
add
xor
mov
lock
(bad)
fiadd
jmp
push
add
movs
rol
inc
or
inc
add
add
fisttp
jne
add
add
inc
repz
add
add
lock
pop
add
add
inc
fiadd
add
mov
repnz
add
inc
add
add
enter
add
aam
inc
dec
pop
imul
add
rcr
div
jmp
inc
fild
dec
xchg
call
push
pop
push
nop
add
popa
xlat
xlat
imul
add
inc
add
add
add
bound
inc
add
add
int3
repnz
pop
popf
(bad)
rcl
add
inc
xchg
xor
pop
popa
call
jmp
sbb
or
call
jmp
imul
or
add
arpl
mov
jmp
add
cmp
cmp
add
push
(bad)
mov
fiadd
add
call
mov
mov
inc
cdq
rol
inc
loopne
jb
dec
inc
loope
pop
add
add
add
push
add
shr
(bad)
loope
inc
cmp
add
add
add
bnd
xchg
dec
add
inc
sub
add
loope
js
jmp
push
sub
add
retf
pop
dec
push
adc
fiadd
sti
call
and
mov
mov
mov
add
push
repnz
push
imul
push
mov
add
ins
push
ret
add
add
or
dec
arpl
fld
mov
add
add
add
sub
sbb
popa
xor
inc
dec
fmul
add
mov
sbb
adc
add
call
jnp
add
or
add
fld
push
add
jmp
rcr
inc
add
scas
add
add
add
inc
add
push
add
icebp
call
add
shr
add
jne
sldt
push
push
add
add
mov
add
add
repnz
fld
cmp
add
mov
shl
or
sub
add
add
mov
inc
cli
test
rol
retf
add
hlt
cld
mov
idiv
les
xor
shl
or
jne
(bad)
add
cmovs
jbe
add
add
(bad)
push
dec
lock
mov
ficom
xlat
scas
dec
pop
fimul
mov
add
add
mov
pop
xor
mov
pop
mov
and
add
add
inc
jmp
jno
aaa
retf
fmul
cmovbe
add
inc
call
pop
add
and
mov
cli
add
push
lock
jne
call
add
or
div
lar
dec
add
cmp
add
mov
dec
dec
jne
bnd
test
enter
cmp
dec
add
or
add
add
mov
jmp
push
rol
retf
add
(bad)
test
xchg
ins
add
add
div
stc
adc
call
add
pop
mov
(bad)
or
add
add
add
push
jbe
std
cmp
inc
dec
(bad)
ret
add
call
sub
add
jmp
jmp
add
jmp
add
xor
add
sub
and
jae
test
ret
imul
fcmovnb
in
xchg
jmp
jge
add
add
add
jmp
add
add
push
push
inc
dec
dec
add
push
add
add
ror
mul
xor
test
jbe
add
add
jmp
add
dec
add
add
leave
mov
inc
ret
add
dec
mov
add
call
sbb
rol
pop
cmp
pop
add
xor
or
add
add
add
add
add
inc
inc
sub
cmp
int3
add
jmp
add
add
add
add
add
call
add
dec
adc
cli
dec
mov
jge
add
add
add
add
pop
and
push
mov
add
add
sub
add
mov
adc
add
mov
push
or
mov
inc
iret
pop
imul
or
xlat
add
add
add
sbb
test
add
add
jmp
add
mov
sti
je
add
add
int3
jmp
inc
dec
add
inc
add
add
add
add
or
xchg
push
fldenv
xor
lock
int3
add
jmp
pop
fild
pop
add
inc
adc
xor
retf
add
fwait
xchg
add
mov
add
add
enter
push
jb
add
rol
add
out
mov
lock
dec
(bad)
mov
dec
test
clc
cld
jmp
add
add
add
test
jne
add
add
rcr
(bad)
in
add
dec
add
add
push
add
and
add
rol
sqrtps
sub
jmp
push
add
ret
add
add
jne
leave
ret
rol
cmp
add
add
call
push
cmp
jb
add
dec
add
test
xchg
push
push
mov
dec
add
dec
bound
add
jb
in
xor
je
mov
adc
xor
add
rol
jb
iret
push
fadd
call
add
dec
add
test
mov
std
add
adc
mov
mov
add
clc
dec
shl
mov
call
mov
cmovns
nop
div
mov
jmp
xchg
les
mov
scas
adc
dec
add
sbb
jmp
iret
add
and
shl
jge
mov
xor
or
cmp
(bad)
add
call
push
clc
add
inc
repz
xor
mov
rol
into
clc
pop
retf
pop
dec
fiadd
fild
out
xor
add
xchg
add
xchg
pop
add
or
or
mov
mov
add
dec
add
and
add
fld
or
add
jmp
lock
fisttp
movs
add
sub
jge
fild
add
mov
add
xlat
add
test
leave
(bad)
scas
cmp
push
add
pop
outs
add
xor
fild
add
add
add
add
icebp
aas
inc
sub
aad
xchg
add
jb
or
add
jne
and
add
gs
jae
call
mov
leave
cmp
ret
jae
xchg
mov
push
cmps
ror
add
fst
je
inc
mov
(bad)
in
add
or
bnd
jne
add
fisub
lock
mov
repz
cld
loop
inc
cld
or
jmp
add
add
mov
dec
out
add
add
jmp
mov
test
jmp
add
and
inc
add
sub
leave
hlt
rol
sti
fmul
test
xor
add
mov
mov
call
push
add
jmp
rol
push
add
add
fimul
stc
add
leave
push
add
add
sbb
into
add
add
bswap
pop
and
jmp
inc
jmp
mov
arpl
add
mov
cmp
sbb
mov
bnd
nop
neg
ret
ins
add
or
jbe
inc
rol
dec
neg
fild
sti
jne
fiadd
shl
and
aam
fcom
add
inc
add
rcl
add
mov
push
add
inc
add
add
imul
pop
scas
je
rol
add
xchg
add
jmp
inc
rol
pop
sbb
shl
pop
mov
add
add
idiv
jmp
add
mov
or
jmp
ds
add
pop
rol
cmp
add
sbb
sbb
fdivr
cli
retf
dec
fld
add
fiadd
ror
or
inc
aam
es
not
test
add
test
add
add
push
pop
add
push
jmp
and
jmp
jnp
add
xor
jmp
and
add
or
push
sti
jmp
leave
xchg
or
or
(bad)
fmul
(bad)
jmp
add
and
or
add
add
add
add
dec
cmp
xchg
xchg
dec
inc
jne
add
inc
add
sar
add
add
retf
call
add
mov
popf
add
dec
add
dec
rol
fwait
jmp
add
rol
add
and
add
add
add
add
add
and
add
cld
add
add
jae
call
jmp
gs
add
push
add
add
pop
add
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
ds
scas
push
mov
mov
mov
(bad)
push
(bad)
das
sbb
add
jo
lds
popf
fs
and
test
xchg
mov
bound
add
inc
jp
cmc
xchg
xor
xchg
das
les
loope
sbb
out
stc
outs
outs
xor
outs
call
int3
xor
loopne
push
cld
clc
test
repz
(bad)
test
jg
sbb
cmps
mov
(bad)
xchg
cmp
jmp
lods
inc
das
fnstenv
adc
pop
jmp
push
out
inc
aad
and
push
outs
jbe
lods
jb
or
mov
cmps
jb
sar
fild
lahf
sbb
cmp
not
ins
dec
test
adc
imul
fidiv
dec
out
sub
stos
ins
sub
stc
mov
int3
mov
pop
loope
(bad)
or
scas
cmp
inc
hlt
mov
jns
xor
jo
pop
jne
in
add
cmps
push
dec
iret
lods
jmp
push
push
and
in
and
xchg
mov
movs
in
add
xchg
mov
out
cmc
sti
je
inc
adc
inc
push
jno
leave
dec
xchg
jns
pop
adc
in
mov
dec
inc
add
sahf
fstp
xchg
lea
sub
dec
dec
popa
lds
mov
leave
enter
arpl
fld
jg
mov
or
xchg
push
sub
sti
pop
sti
jge
(bad)
in
outs
pop
jo
mov
sbb
push
mov
mov
aam
dec
hlt
xor
test
dec
pop
jmp
xchg
push
push
movs
icebp
sub
mov
push
sahf
sar
stos
xor
out
cmp
jmp
ins
adc
push
mov
sahf
mov
fnstsw
cmp
or
sahf
(bad)
cdq
scas
jne
add
mov
cmps
rol
sub
add
mov
or
mov
or
mov
mov
shl
sbb
call
gs
repz
add
adc
sub
icebp
mov
int
ret
popf
leave
and
loope
repnz
sub
stc
mov
jmp
mov
jp
inc
mov
iret
outs
daa
dec
out
xchg
rcl
imul
(bad)
sub
dec
dec
push
pop
(bad)
aad
nop
fbld
ret
leave
jo
add
adc
rol
pop
sub
push
cli
mov
pop
jne
push
mov
test
jmp
es
test
mov
adc
imul
in
xor
mov
(bad)
dec
adc
mov
pop
fwait
mov
jno
scas
mov
fcomp
and
sahf
push
sub
inc
jno
call
js
sti
push
call
and
mov
mov
mov
push
test
sub
mov
ret
popf
inc
mov
dec
je
sub
xchg
sbb
(bad)
fsub
inc
mov
in
adc
test
or
jecxz
fwait
mov
mov
cmps
sub
push
sub
in
sbb
dec
mov
mov
retf
fcmovnbe
fisub
in
jl
lods
nop
(bad)
std
mov
xchg
sub
ficomp
rol
sahf
or
in
cmps
inc
les
pop
mov
out
test
(bad)
out
mov
aas
pop
call
jmp
push
and
mov
jo
mov
(bad)
ss
ret
div
bound
mov
pop
sbb
xchg
ret
mov
jne
les
stc
mov
push
in
sbb
xor
inc
add
add
nop
sbb
jle
call
jg
ins
in
push
enter
push
dec
je
cmp
push
xchg
jbe
mov
dec
jae
idiv
inc
and
mov
jmp
jmp
adc
int
cmp
mov
fimul
ins
outs
mov
and
mov
jb
mov
ja
inc
push
rcr
sub
jbe
fistp
sub
push
lahf
push
jae
xchg
addr16
ss
out
sbb
inc
jmp
pop
jae
cmp
push
sub
(bad)
jp
add
sar
cmc
and
int
sbb
cmp
sbb
(bad)
test
in
std
pop
imul
inc
pop
div
mov
loop
repz
stc
pop
and
pop
jb
add
fisubr
es
mov
ja
adc
jo
or
mov
adc
xor
add
arpl
inc
test
ds
cmps
jnp
pop
outs
shl
sub
sub
jb
push
sub
jle
jo
push
mov
in
push
adc
or
es
mov
repnz
lds
sbb
cmc
cmps
push
add
not
js
out
adc
daa
mov
push
nop
arpl
xchg
xchg
adc
xchg
test
call
or
xor
xchg
push
ret
repnz
pop
jp
(bad)
ins
xor
out
repz
repz
pop
enter
ss
sahf
pusha
rcr
ret
inc
sbb
pop
mov
and
xor
fimul
ffree
int3
pop
cmps
adc
pop
mov
pop
mul
mov
repnz
mov
aas
cmp
dec
dec
enter
por
jno
add
ins
add
and
add
push
xchg
call
lods
out
sahf
pushf
rol
stc
jne
add
pop
shl
jmp
mov
loope
imul
iret
sub
cmp
xchg
fldcw
push
fstp
mov
push
and
mov
cmp
pop
sub
scas
xor
jmp
cwde
cli
dec
sub
jb
xor
rol
vcvtsi2sd
movs
aam
outs
hlt
mov
pop
add
dec
pop
and
into
or
not
or
jmp
mov
pop
jp
sbb
fbstp
sub
push
and
dec
mov
mov
mov
(bad)
cmp
loop
dec
rol
out
mov
mov
rcr
ja
cmps
inc
mov
jnp
jnp
or
mov
push
sbb
fcom
sub
cmp
lahf
sbb
jns
sub
add
mov
test
test
icebp
das
xchg
or
fstp
xchg
cmp
int
dec
aas
lahf
push
pop
(bad)
lods
sub
lahf
aad
mov
and
pushf
mov
stc
sbb
and
sbb
sbb
dec
ror
add
es
icebp
add
ret
mov
xchg
sahf
dec
stc
inc
aas
dec
shr
lds
loop
push
mov
in
lea
imul
adc
push
dec
cmps
jg
pop
jno
mov
ficom
cmp
mov
and
clc
ss
cmc
push
cwde
test
jmp
cmp
in
jp
push
ret
jb
pop
(bad)
jmp
test
push
cld
stos
adc
dec
cmps
push
xchg
movs
xor
and
fdivp
call
fild
inc
sbb
not
scas
pop
sub
addr16
sub
pushf
out
ds
mov
lods
js
add
and
inc
popf
xlat
js
xchg
int3
neg
aad
mov
es
daa
mov
or
mov
xchg
repz
jle
push
mov
in
jbe
fadd
sbb
push
pop
inc
or
add
(bad)
hlt
or
mov
or
mov
stc
sub
mov
xor
or
jnp
jns
ret
mov
arpl
inc
retf
inc
hlt
sub
jmp
or
xchg
dec
test
xchg
pop
stos
lahf
in
leave
mov
repz
loopne
in
repnz
lods
out
test
out
(bad)
fisttp
clc
lods
push
mov
out
pop
mov
scas
push
jmp
cmp
cdq
push
loop
xor
push
popfw
lods
add
cmp
movs
nop
xor
add
pop
icebp
pop
bound
lea
inc
and
call
dec
cmp
jae
push
outs
or
or
xor
and
push
lods
aad
add
scas
or
and
cmc
stos
mov
push
jns
call
std
mov
and
dec
inc
mov
icebp
sar
mov
lds
sub
cmp
pop
mov
(bad)
mov
sahf
imul
call
mov
inc
dec
jmp
shrd
xor
das
sbb
sbb
push
xor
ss
push
(bad)
jle
mov
jmp
and
int
movs
(bad)
xor
movs
sub
shr
ret
add
mov
push
pop
pop
std
sub
ins
popf
cmp
cmp
adc
clc
cmp
ins
add
je
pusha
dec
test
mov
mov
mov
mov
out
mov
dec
dec
sbb
pop
jbe
adc
fisub
cdq
dec
retf
or
xchg
loopne
test
ret
(bad)
xchg
mov
push
sbb
jb
out
add
cld
push
call
pop
inc
mov
mov
test
xchg
pop
lods
sbb
pop
(bad)
push
rol
into
adc
or
pop
arpl
push
outs
(bad)
sub
pop
data16
in
mov
push
rol
std
in
pop
cld
test
fsubr
nop
push
sbb
add
cwde
fcom
ss
sbb
sbb
xchg
dec
xchg
fadd
cs
vandnps
xor
pop
jge
pop
movs
sahf
xchg
dec
xchg
fxch
cmp
mov
fistp
mov
test
(bad)
dec
push
sub
not
or
out
daa
fild
push
push
into
xchg
mov
jnp
jl
(bad)
lock
push
clc
test
push
push
fild
lock
(bad)
adc
shl
mov
pop
cmp
mov
test
cdq
sub
or
dec
ds
mov
imul
and
bound
and
bound
fiadd
mov
in
mov
pop
mov
jl
dec
or
sbb
pop
(bad)
xchg
mov
dec
sub
add
xor
add
push
or
inc
iret
popf
jbe
and
jne
out
mov
call
test
das
add
cmp
je
xor
je
xor
daa
sbb
fisubr
dec
or
lahf
cmp
jae
pop
retf
mov
ins
add
stos
nop
and
push
xor
or
mov
stc
call
pop
mov
xor
or
adc
and
enter
xchg
adc
mov
mov
movsx
mov
jnp
xchg
int3
je
ins
leave
outs
xchg
cmp
(bad)
push
iret
sbb
sub
repz
sub
cmp
call
dec
fucom
sub
jecxz
jle
mov
stos
or
cmp
div
fadd
cld
push
iret
fild
add
data16
int
push
adc
adc
loope
push
push
dec
cmp
mov
stos
sbb
push
adc
das
add
loopne
pop
loope
pop
inc
call
pop
bound
or
xchg
sub
ret
lds
jo
popa
mov
data16
fwait
sahf
ja
jb
not
(bad)
test
sub
sbb
push
ror
mov
in
cld
xchg
sahf
mov
adc
fdiv
and
or
dec
mov
lahf
jnp
in
rcl
push
and
mov
stc
jmp
dec
scas
fdiv
fbstp
cmp
dec
sahf
cld
pushf
xchg
add
into
sub
sub
sahf
sbb
xchg
mov
imul
(bad)
jl
cmp
leave
cli
repnz
jbe
adc
xor
adc
fdiv
xor
fiadd
add
mov
mov
cmp
pop
sbb
sub
jbe
dec
xlat
out
pop
mov
and
in
inc
mov
push
or
pop
mov
mov
cmps
push
aas
xchg
mov
dec
add
test
adc
sub
loope
ds
in
fwait
in
cmp
push
and
loope
jmp
adc
pop
dec
push
adc
outs
not
je
xor
les
cmps
sub
rcr
out
xchg
stos
shl
loope
xchg
dec
cmc
inc
cwde
dec
stos
mov
test
or
mov
imul
jecxz
mov
out
xchg
in
inc
jno
sbb
arpl
ror
(bad)
jo
call
jge
adc
clc
aaa
popa
je
stos
or
jge
int3
mov
dec
or
or
sub
mov
or
inc
lea
pop
mov
mov
loop
mov
xor
adc
data16
xor
clc
retf
mov
mov
cmp
arpl
mov
fistp
mov
popf
cmp
daa
ins
jmp
scas
dec
jns
vpcmpgtd
cmp
cli
dec
jae
sbb
loop
std
js
jecxz
aaa
stos
mov
or
cmc
dec
mov
adc
sbb
movs
scas
ss
and
test
mov
fbld
mov
inc
ror
dec
inc
sbb
xchg
dec
out
test
ret
fldenv
test
in
adc
xchg
retf
adc
add
in
jno
iret
add
daa
jne
lahf
out
mov
jae
jne
fwait
sbb
xor
lods
out
mov
jg
ins
inc
out
push
mov
jnp
das
call
aad
dec
sar
push
ret
les
rol
xchg
rcr
mov
in
pop
sahf
icebp
add
or
sub
push
scas
adc
push
add
mov
dec
inc
or
fucomp
mov
rcl
test
loope
sbb
and
test
rcr
jo
gs
adc
xchg
pop
pop
pop
retf
test
nop
movs
mov
push
int
cld
adc
movs
mov
jge
xlat
cmp
aad
ins
mov
sbb
xchg
xor
sub
xchg
les
push
ja
pop
cmp
mov
jmp
imul
jge
inc
push
jno
cmp
mov
mov
daa
movs
push
cdq
ret
or
adc
loop
cmp
xchg
jl
or
fsubr
push
movs
jmp
aas
push
gs
xchg
adc
and
adc
xchg
push
int3
cmps
je
sahf
nop
adc
fldenv
mov
inc
or
ins
jae
dec
pop
fisttp
cmp
ja
shr
mov
mov
dec
or
inc
sbb
pop
pop
cmc
retf
scas
fstp
inc
outs
(bad)
call
mov
lea
iret
data16
xor
in
mov
jne
retf
adc
adc
push
mov
lock
inc
div
dec
ins
je
ret
fiadd
into
scas
aam
xchg
pop
inc
stc
xor
sub
adc
test
xchg
(bad)
or
jmp
sbb
out
fst
in
out
fstp
iret
xor
dec
mov
xchg
shl
or
fld
jo
ror
xchg
or
cs
sub
div
jno
test
arpl
push
cdq
popf
repz
imul
push
xor
push
sub
xlat
test
pop
in
cmps
lea
xchg
mov
cmp
hlt
inc
fwait
cmp
aam
dec
sub
adc
repz
hlt
push
sub
neg
xchg
(bad)
retf
pushf
mov
mov
cmp
pop
xor
adc
aaa
scas
push
dec
and
xchg
jno
inc
lea
stos
fild
pushf
sar
and
jecxz
int
and
in
mov
imul
or
xchg
jge
jne
mov
add
xor
imul
(bad)
mov
cmps
xchg
es
or
hlt
outs
icebp
mov
fnstenv
jmp
(bad)
dec
loop
push
jb
pop
push
mov
mov
hlt
adc
clc
mov
mov
ror
sti
hlt
shr
pop
cmps
loopne
pop
and
test
retf
mov
adc
pushf
pop
or
cmps
pop
jno
push
aaa
fdivr
sbb
and
mov
lea
fldcw
or
cs
mov
ins
sbb
dec
or
add
in
lea
mov
fsub
jp
add
dec
call
std
push
pop
mov
dec
xchg
sbb
xchg
mov
cmps
jno
mov
push
adc
pop
repnz
mov
dec
stos
pop
mov
pop
push
bnd
dec
push
ss
inc
dec
mov
inc
push
add
xor
daa
inc
repz
dec
push
push
mov
sahf
sbb
jnp
mov
and
scas
iret
and
loop
or
xchg
sub
pop
loop
push
and
(bad)
daa
sub
and
loop
fst
ror
hlt
(bad)
xor
mov
inc
mov
jbe
jle
outs
int3
pushf
pop
mov
inc
or
test
mov
cmp
ds
std
push
push
or
aad
jno
sub
jmp
xor
aam
xor
push
mov
addr16
arpl
addr16
adc
ficom
ja
outs
sbb
xchg
nop
sub
aad
push
xchg
xchg
leave
(bad)
mov
xor
and
xchg
inc
adc
sub
(bad)
xchg
loope
idiv
pop
mov
mov
and
xlat
pop
sbb
mov
loope
push
jl
loopne
and
sbb
int
push
xor
add
imul
add
out
test
or
repnz
ds
fmul
inc
mov
cmp
arpl
add
(bad)
popa
cdq
je
lds
stos
jle
xor
add
cdq
jp
mov
sbb
xchg
adc
(bad)
push
mov
shr
jns
test
out
aad
sbb
aam
lea
mov
mov
ret
jle
repz
jnp
imul
mov
mov
loop
adc
inc
push
fisub
dec
cld
aas
lahf
or
mov
neg
jl
cwde
pop
jg
shl
outs
mov
lods
adc
xchg
and
das
sub
ins
xchg
mov
pop
cmps
sti
push
lock
aad
xor
fdivrp
lods
shl
jg
mov
or
sbb
cmps
dec
inc
and
inc
mov
in
imul
fadd
inc
sbb
cli
mov
cmp
pop
out
jge
in
lds
adc
clc
push
sbb
or
mov
xor
cld
xor
out
jp
add
cwde
add
js
dec
mov
sub
cmp
sub
cmc
xor
sub
pop
out
das
shl
in
loopne
mov
jl
dec
adc
dec
jle
xchg
in
add
mov
fucomip
imul
psrlq
xor
mov
hlt
add
mov
sbb
pop
inc
outs
fiadd
adc
mov
jbe
mov
jnp
xor
aaa
jmp
vpsrld
stos
jmp
cmps
enter
jl
retf
outs
push
inc
xor
jb
or
test
jg
push
(bad)
js
push
outs
adc
push
cmc
dec
(bad)
call
and
(bad)
xchg
sub
xor
movs
(bad)
mov
rcr
call
js
mov
punpckldq
push
xchg
xchg
frstor
push
mov
fwait
dec
inc
xchg
xchg
popa
movs
out
pusha
stos
shr
jno
mov
cmp
inc
cmps
je
(bad)
stc
adc
and
mov
jb
test
fadd
mov
xor
inc
sti
push
mov
and
aad
mov
sub
pop
mov
call
sbb
sahf
mov
pop
(bad)
sub
xchg
shl
test
xor
in
jbe
clc
dec
inc
mov
adc
leave
or
pop
adc
popf
out
bound
mov
inc
movs
lahf
mov
adc
mov
adc
add
inc
jecxz
jmp
ror
test
cmp
sbb
add
pop
imul
and
cmp
fidivr
clc
lea
inc
call
addr16
dec
inc
cmc
sub
add
or
mov
jnp
pop
push
jnp
jae
std
adc
inc
stos
jbe
retf
mov
adc
call
repz
add
mov
add
ja
mov
push
mov
jno
dec
iret
inc
cmp
pop
jae
out
pop
enter
xchg
das
cld
retf
xor
adc
cmp
in
and
call
push
(bad)
repnz
mov
push
lds
and
jl
test
pop
cwde
pushf
xchg
adc
jb
inc
(bad)
mov
int
cmp
pcmpgtb
dec
push
mov
loope
rol
call
je
dec
pop
neg
pop
mov
sub
test
pusha
call
pop
aas
sub
xchg
je
push
pop
dec
dec
retf
pop
mov
mov
cmp
fidivr
mov
pop
xchg
sub
mov
cmp
cmps
loope
outs
xchg
sub
inc
neg
push
mov
leave
popf
cmp
or
cmp
repnz
call
pop
das
sub
test
stos
lods
jg
iret
ret
stc
and
es
sbb
and
imul
gs
push
retf
imul
push
lods
pop
ins
sti
mov
mov
sub
xchg
xchg
pop
ins
ds
inc
pop
pop
out
lds
jne
js
popa
test
push
and
(bad)
pop
into
in
ds
ret
call
(bad)
cli
retf
(bad)
cmp
mov
push
daa
movs
std
lahf
xchg
popf
xor
sub
sub
rcr
pop
stos
retf
jbe
popf
push
mov
mov
xchg
repz
inc
pop
(bad)
cmp
or
sub
mov
jnp
and
xchg
retf
sub
mov
dec
xchg
mov
mov
pop
enter
xchg
push
pop
xchg
push
pop
pop
or
dec
mov
cmps
mov
inc
mov
int
sbb
pop
add
pusha
cmp
shl
shr
xor
or
fwait
dec
(bad)
shl
mov
xchg
xor
cli
adc
xchg
daa
mov
cmp
push
push
xchg
and
or
loop
sub
cmp
add
dec
retf
mov
(bad)
and
and
(bad)
cwde
or
gs
or
push
sbb
sub
sti
inc
add
sub
pop
pop
je
arpl
sub
push
cdq
adc
imul
and
imul
(bad)
jmp
(bad)
mov
jo
jp
pop
sti
fnstsw
mov
das
cdq
jmp
icebp
mov
mov
mov
movs
retf
test
fisub
retf
push
mov
mov
adc
mov
push
cli
out
fsubr
imul
xor
push
push
sub
test
mov
sub
mov
mov
jg
jnp
cmp
xchg
sub
mov
xchg
outs
cmc
push
adc
sub
or
xor
movs
dec
sti
mov
xchg
mov
outs
loopne
mov
sbb
out
pusha
mov
movs
jo
shr
ins
enter
push
lods
pop
sub
pop
aad
ret
(bad)
push
nop
jb
in
out
pop
sub
jb
ins
and
inc
je
jmp
lods
fs
out
lods
idiv
mov
push
ja
adc
repz
fnstsw
aas
push
mov
cmps
adc
cmp
add
adc
loope
ja
cmp
dec
fwait
in
sub
shl
stos
push
xchg
fist
fstp
xchg
enter
cmc
adc
cli
imul
xor
mov
add
jnp
nop
lock
imul
loop
test
(bad)
xor
jmp
mov
mov
call
jno
cmp
inc
mov
sti
ss
imul
fadd
pop
sbb
sub
lds
ret
jae
xchg
pop
dec
add
cmps
pop
out
(bad)
lahf
jae
sub
dec
sbb
pop
xlat
inc
cmp
add
inc
dec
inc
mov
test
mov
xor
xlat
out
ins
test
test
or
jo
shr
push
jmp
push
ins
dec
jo
jle
ins
lahf
dec
les
and
push
sbb
jne
mov
mov
and
xchg
add
sub
adc
in
(bad)
cwde
xchg
or
lea
les
rol
cmp
dec
sub
js
ss
pop
fs
xchg
pop
add
(bad)
jo
inc
push
nop
fcmovnu
lahf
dec
dec
push
(bad)
jmp
neg
or
cmps
xchg
das
jle
dec
pop
fistp
scas
sbb
cld
scas
mov
lds
aas
push
xchg
push
push
fcomip
sahf
in
addr16
xchg
leave
mov
mov
data16
pop
mov
nop
sub
test
loope
arpl
or
es
test
xor
adc
out
retf
imul
mov
lods
popf
fadd
sub
sbb
mov
das
or
(bad)
pop
push
lods
sahf
or
mov
xchg
jo
aad
sbb
dec
inc
xchg
test
cmp
mov
pusha
sub
jo
pop
sub
test
mov
sub
sub
ficom
int3
xor
pop
in
jg
inc
bound
cmp
call
push
adc
scas
stos
out
lods
sti
retf
adc
add
outs
pop
add
sub
sub
push
mov
call
inc
add
or
ins
jp
jmp
fsub
jecxz
mov
dec
mov
adc
repz
cmp
and
lea
(bad)
dec
sbb
adc
add
jmp
ret
fadd
mov
scas
pop
(bad)
sahf
pop
sar
shl
aas
(bad)
mov
push
and
or
mov
pusha
mov
fwait
lds
mov
and
int
cmp
adc
shl
leave
mov
cmp
je
ins
int3
aas
jae
fcom
mov
sbb
call
push
push
neg
adc
dec
es
sbb
nop
movs
mov
(bad)
out
xor
push
sbb
and
lea
shl
pop
fs
test
retf
push
mov
movs
cmc
or
lods
jle
xor
aaa
mul
add
mov
and
call
fild
aad
xchg
inc
das
cmp
xchg
xor
adc
adc
in
ds
mov
shl
or
add
or
lock
push
push
inc
inc
gs
sti
adc
stos
adc
lock
dec
loop
cmps
jmp
fdivr
adc
mov
aam
ins
(bad)
aam
adc
and
cmp
(bad)
jns
sub
xor
(bad)
imul
mov
(bad)
mov
mov
mov
pop
fidivr
shl
mov
call
push
fld
sub
arpl
pop
loopne
lock
(bad)
int
test
add
cmp
push
dec
jp
outs
aad
clc
pop
sbb
repz
push
add
in
sub
dec
out
iret
mov
ins
add
cld
pushf
pop
mov
out
call
cmp
les
xor
push
inc
jmp
and
add
scas
xlat
cmp
mov
cmps
pop
push
push
dec
(bad)
in
retf
lea
xchg
push
popa
stc
stos
and
jmp
adc
icebp
in
(bad)
cs
sub
outs
jle
test
repz
pop
mov
pop
pop
pushf
mov
out
bound
dec
cmps
leave
cmc
xchg
shl
and
out
xchg
std
out
mov
cmp
mov
loopne
cld
sahf
adc
aam
ret
jae
pop
call
cmp
hlt
jae
out
xor
mov
(bad)
je
inc
or
fsub
pop
ja
lock
pop
add
jbe
sub
cmps
loopne
repz
pop
ins
mov
or
es
mov
sti
inc
xchg
xchg
xchg
mov
jmp
in
in
sbb
and
xchg
cld
or
inc
jge
jmp
jno
xor
xchg
iret
aaa
mov
ins
vmread
or
and
cmp
push
outs
xlat
popa
mov
xchg
sub
out
test
(bad)
jnp
sti
(bad)
leave
push
(bad)
out
jle
movs
fsub
test
fdiv
fsubrp
mov
xchg
or
stos
rol
xchg
jecxz
std
hlt
jne
fs
xor
hlt
test
push
in
les
fnstsw
pop
adc
sub
js
xor
lods
hlt
lahf
jb
mov
push
xor
ror
outs
mov
inc
clc
cmps
retf
inc
ror
push
jecxz
loope
mov
mov
sbb
in
out
nop
lock
sar
inc
jmp
xor
daa
fcmovb
xchg
add
jnp
fsub
pushf
cdq
call
adc
xchg
cmp
(bad)
movs
cdq
adc
cmp
lea
push
in
imul
or
ror
push
adc
dec
mov
xchg
mov
test
mov
(bad)
shr
mov
sub
leave
add
scas
mov
push
vpmacsww
inc
push
inc
and
test
jbe
inc
dec
sub
shl
jp
mov
movs
gs
mov
aad
pop
sub
fiadd
outs
movs
jp
jl
sbb
or
cs
inc
pop
sub
mov
xor
inc
mov
xlat
xchg
popf
scas
lds
(bad)
aaa
popf
push
mov
lods
mov
retf
pop
sub
cmp
std
mov
push
or
retf
sbb
dec
(bad)
bound
test
fsubrp
into
mov
imul
mov
or
cmp
and
or
out
repnz
test
lods
lock
pushf
stos
push
xchg
mov
mov
add
xchg
ds
rcl
lock
ins
repnz
and
call
inc
mov
out
pop
(bad)
int
imul
mov
xchg
and
pop
dec
adc
push
fld
or
jmp
xor
xor
lahf
push
retf
repnz
sbb
sbb
push
mov
ret
jno
fcom
jmp
dec
dec
inc
dec
cmps
fistp
mov
fdiv
and
xor
mov
adc
jle
shl
lea
in
fild
push
jae
pop
out
mov
jno
push
xlat
or
movs
add
stc
and
sar
pushf
adc
movs
mov
dec
fadd
xor
rcl
xor
aad
mov
pop
leave
inc
mov
lahf
xchg
push
call
into
push
xchg
pop
sti
mov
pop
or
jb
rol
xor
dec
mov
cdq
call
jmp
mov
stos
and
xchg
mov
jnp
xor
mov
pushf
inc
out
retf
addr16
repnz
mov
inc
mov
mov
pop
(bad)
xlat
call
push
and
or
jge
and
xlat
mov
in
or
inc
jno
cmp
adc
out
jg
cmp
outs
pop
mov
sar
pushf
ds
push
xchg
ja
xchg
cmp
pop
stos
mov
aad
fwait
jbe
clc
repnz
dec
sub
and
sbb
cmp
mov
jg
rol
sbb
outs
mov
mov
lea
or
repnz
and
xchg
cmps
or
arpl
aad
jne
mov
add
sub
sbb
xchg
inc
jno
mov
dec
mov
hlt
cmp
sub
fimul
dec
stc
sar
inc
mov
imul
dec
add
dec
push
movs
sbb
lahf
out
pop
jmp
hlt
xor
int3
mov
push
push
mov
mov
js
cli
test
sbb
mov
add
mov
fisub
arpl
int3
sbb
bound
mov
push
fcmovnbe
xchg
pusha
or
enter
test
and
popf
and
stos
iret
into
cmp
mov
sub
in
jnp
xchg
lods
je
ja
call
in
sub
push
loop
cdq
fbstp
push
xchg
sbb
dec
pop
xlat
in
shl
push
dec
jns
in
test
cmps
leave
jle
daa
mov
mov
aad
js
std
sub
and
das
pop
mov
jmp
sub
xchg
mov
pusha
jne
dec
cdq
cmp
push
outs
adc
push
mov
mov
enter
sbb
pop
gs
mov
aaa
sbb
adc
sub
mov
lds
mov
sub
mov
sbb
pop
inc
push
lock
cmp
cld
xchg
mov
mov
sbb
loopne
jg
mov
mov
push
cld
es
pop
or
dec
fxch
fbstp
(bad)
xor
mov
out
sti
lahf
lods
jmp
pop
maskmovq
test
pop
gs
stos
add
dec
ins
mov
xor
ret
cli
mov
fstp
sar
fistp
mov
inc
xchg
sahf
inc
int
mov
imul
inc
and
xor
sbb
push
loop
and
mov
rol
and
daa
out
add
and
push
mov
shr
sar
lock
call
aam
imul
jp
push
retf
ins
mov
popa
dec
or
ins
or
getsec
xor
mov
inc
and
jmp
add
in
fsubr
icebp
push
xor
out
movs
test
imul
cmc
inc
aas
dec
pop
cmp
sbb
sub
mov
mov
enter
jb
sbb
out
pusha
lds
inc
add
(bad)
in
outs
push
test
retf
xchg
cmp
jle
xor
shl
(bad)
sub
dec
sti
mov
mov
pop
and
xor
add
jmp
test
and
fpatan
sub
xor
clc
xchg
movs
push
sub
and
mov
test
adc
dec
cmc
icebp
and
dec
icebp
mov
sbb
sub
in
not
repnz
adc
retf
dec
rcl
loope
mov
mov
cmp
ret
mov
mov
pop
xor
into
pusha
aad
std
pusha
xchg
sub
test
sti
ins
xlat
push
pop
adc
or
sbb
and
cmps
fwait
and
push
inc
aad
fcmove
(bad)
jns
in
lods
adc
jno
(bad)
sahf
jecxz
and
outs
mov
pop
fdivrp
xor
imul
sbb
mov
ucomiss
ss
inc
hlt
or
or
inc
and
sub
sbb
pop
pusha
or
pop
test
mov
rol
sbb
jnp
jae
xchg
push
(bad)
js
fwait
and
mov
pop
sbb
sbb
inc
cmp
fnsave
cs
daa
and
outs
mov
aas
push
clc
out
mov
popf
in
repnz
int
or
mov
pop
ds
sub
push
mov
xlat
push
push
jne
ret
ins
mov
xor
push
stc
push
mov
cli
popf
mov
(bad)
sahf
fistp
push
or
pop
adc
pop
cmp
inc
push
(bad)
retf
(bad)
inc
cmp
je
xlat
mov
pop
shr
ja
adc
xor
pushf
and
ret
ins
retf
and
sar
les
outs
addr16
push
mov
mov
mov
mov
push
inc
jl
pop
(bad)
iret
pcmpgtw
adc
mov
xchg
mov
jp
movs
movs
in
jb
in
inc
mov
fisttp
jns
push
(bad)
(bad)
fiadd
cmc
mov
pop
aad
pop
jne
sbb
mov
sbb
ds
movs
xchg
inc
or
out
jne
test
or
imul
add
mov
movs
shl
mov
pop
repz
aaa
inc
jbe
inc
adc
mov
retf
jb
jl
mov
aaa
push
cmp
nop
je
xchg
test
jmp
loope
mov
mov
test
and
movs
mov
fdivr
aas
jmp
push
push
div
dec
sbb
mov
jmp
jmp
stc
ss
push
pop
add
cmp
repz
push
dec
out
call
ds
ins
call
std
and
cmp
imul
mov
or
(bad)
ins
inc
jl
ja
xchg
scas
cld
mov
cdq
jae
enter
pop
popf
(bad)
les
jnp
sub
(bad)
rol
enter
mov
xchg
into
jbe
mov
sub
leave
mov
mov
scas
out
cmps
shl
call
inc
inc
stos
fcom
sar
sbb
or
xor
push
or
aad
xchg
inc
push
mov
sub
dec
movs
jbe
dec
cmp
jl
add
sbb
inc
imul
inc
push
inc
adc
(bad)
cli
cdq
lock
pop
push
inc
aad
movs
ds
pop
icebp
cli
in
adc
mov
ja
and
dec
mov
jmp
popa
bound
(bad)
xchg
popf
xor
dec
or
pop
and
jg
popa
push
mov
daa
jle
rol
xchg
scas
xchg
xor
out
cmc
or
or
div
add
ret
pop
stc
pop
mov
jnp
pop
sub
and
fidiv
dec
addr16
loopne
push
add
cdq
and
xchg
inc
jmp
inc
inc
fdivr
data16
inc
pop
xchg
fmulp
xchg
jecxz
retf
mov
fld
cmp
pusha
xor
push
xor
mov
dec
jb
int
sub
sahf
mov
adc
push
shr
or
or
ficom
int
ins
in
cmp
ret
adc
inc
dec
shl
mov
and
gs
and
sub
rol
out
into
push
xchg
fwait
push
mov
movs
mov
je
and
in
call
sbb
fs
and
call
sbb
movs
adc
and
div
cdq
out
sar
mov
test
(bad)
mov
xor
mov
stc
test
addr16
xchg
clc
inc
shr
xor
xchg
and
repnz
pop
out
test
sahf
test
(bad)
dec
jb
bt
ror
clc
inc
jmp
nop
jnp
cmc
sbb
jmp
sbb
fucomi
cli
mov
sbb
cmp
mov
jmp
aam
mov
jne
adc
retf
sbb
arpl
sahf
xor
std
test
gs
aas
cmc
cmp
or
mov
int
jmp
mov
inc
pop
nop
int
cmp
dec
mov
(bad)
push
adc
push
jb
and
popa
aaa
ins
ret
pop
neg
data16
cmp
rcr
bound
adc
jbe
add
pop
rol
ret
frstor
(bad)
push
and
je
in
dec
sub
and
cmps
xor
cmp
nop
mov
push
push
jnp
cmp
pop
scas
mov
push
pop
push
fsqrt
into
pushf
ficom
sub
push
bnd
das
sub
mov
mov
push
xor
not
(bad)
(bad)
shl
ret
test
xchg
(bad)
and
jb
dec
das
cmp
jle
or
sub
outs
ss
or
push
not
das
and
mov
sbb
rol
sub
mov
sub
push
scas
inc
out
rol
push
(bad)
ins
lock
jmp
je
inc
mov
push
je
xor
mov
sub
cmp
push
repnz
ss
xchg
out
mov
fnsave
repz
sbb
xchg
cmc
imul
jb
or
cmp
add
mov
lods
cdq
rcr
mov
or
cmps
jne
sti
xchg
mov
xor
jbe
dec
or
shl
popa
out
xor
mov
arpl
adc
les
cli
xor
sub
mov
int
cmp
add
adc
dec
dec
ds
stos
imul
mov
push
push
jno
les
fidiv
(bad)
frstor
add
cdq
mov
(bad)
das
popf
das
mov
sub
dec
xchg
adc
cmc
outs
cmp
fadd
out
sahf
sbb
nop
cdq
pop
lods
xchg
ficom
ja
scas
sub
sar
dec
(bad)
loope
inc
je
sti
jmp
mov
xchg
inc
mov
popf
fiadd
lods
stc
shl
fadd
pop
iret
outs
mov
jmp
jnp
or
and
ins
es
jp
vcvtdq2ps
out
ror
xchg
or
mov
xlat
push
out
or
pop
sahf
pop
and
adc
or
pop
jne
dec
mov
push
daa
pop
push
push
dec
out
jb
mov
(bad)
(bad)
cmp
lock
aaa
dec
xlat
js
mov
loope
and
lock
mov
mov
movs
inc
out
inc
fst
outs
inc
call
stc
jno
mov
movs
mov
je
arpl
fcomip
xchg
or
add
ds
cmp
movs
xor
jne
rcl
(bad)
(bad)
fcmovu
or
xor
es
and
mov
or
mov
cld
int3
jecxz
les
(bad)
clc
sbb
mov
xchg
adc
sahf
rol
lock
push
inc
into
addr16
inc
fcom
xchg
das
sti
mov
push
test
jmp
mov
mov
sub
popa
push
push
xor
xor
mov
adc
adc
mov
jbe
cmp
and
xor
cmp
pop
or
sub
fiadd
jno
out
pop
sti
xor
jb
jo
jmp
loopne
sbb
xchg
xor
mov
jnp
mov
leave
push
loope
xchg
jmp
sar
cmps
fsubr
mov
test
jnp
fistp
inc
pop
fwait
xor
lods
in
fmul
mov
cmp
sub
push
mov
into
push
mov
ss
and
int3
adc
adc
cdq
cmp
push
outs
lea
pop
scas
lock
push
fisttp
in
or
lds
mov
(bad)
bnd
push
cdq
cmc
cld
hlt
ds
retf
push
inc
aad
inc
dec
mov
popa
sub
or
or
or
imul
clc
cli
jl
fld
lea
xchg
xor
jbe
(bad)
fldenv
push
in
jbe
or
cmp
jge
jmp
ret
sub
jne
dec
mov
cli
push
jecxz
icebp
mov
sub
or
popa
ds
or
out
push
shl
call
mov
es
inc
cs
pushf
icebp
inc
pop
jle
fnstsw
mov
xchg
cmps
pushf
jg
xchg
and
jecxz
ins
dec
out
movs
xchg
call
popa
push
data16
mov
cmps
push
pop
je
pop
and
daa
ficom
cli
add
mov
(bad)
inc
mov
scas
inc
loopne
movs
(bad)
cmp
xor
sub
xor
mov
mov
jge
sub
push
inc
arpl
fldenv
jecxz
or
cmp
movaps
mov
out
(bad)
xchg
jbe
dec
ja
lods
aam
sub
or
inc
or
cmp
jno
fs
icebp
and
(bad)
cld
stos
test
nop
jl
push
mov
jne
jnp
js
add
(bad)
and
add
sahf
and
enter
push
inc
(bad)
pop
or
outs
sub
mov
jnp
inc
pop
and
pop
fistp
push
clc
push
sbb
(bad)
cmps
mov
and
mov
test
fsubr
xchg
leave
add
jne
mov
xor
sub
mov
outs
(bad)
repz
mov
push
test
(bad)
sbb
inc
rcr
pop
int3
mov
adc
scas
loope
push
mov
call
dec
jecxz
or
clc
rcl
xchg
in
xor
push
(bad)
mov
dec
jp
ins
pop
popa
sbb
shr
pop
sbb
(bad)
adc
ja
dec
and
(bad)
jle
adc
imul
cmps
stos
sub
xchg
add
iret
hlt
in
movs
adc
retf
fmul
retf
xor
or
pop
dec
push
pusha
in
mov
pop
mov
sti
jb
sub
out
push
xor
faddp
sub
pop
push
mov
jle
inc
push
mov
adc
lods
add
or
test
jg
jns
push
sbb
leave
pop
jmp
push
jb
or
retf
or
mov
cmp
jl
jns
jmp
push
mov
dec
xlat
push
fs
pop
cmps
dec
adc
loop
inc
mov
mul
pop
mov
cmps
jge
loope
sbb
stos
iret
sbb
call
pop
xor
dec
shr
cmps
cwde
jle
cmp
add
pop
xor
icebp
cmps
jno
hlt
stc
cmps
push
fstp
out
mov
loopne
fld
sbb
adc
out
(bad)
jo
mov
out
and
jp
jmp
mov
je
inc
sbb
retf
xor
add
pop
rol
nop
loop
in
aas
arpl
stos
inc
mov
or
jge
out
cmp
aas
push
(bad)
xor
xor
fstp
dec
(bad)
mov
stos
sub
mov
ffreep
out
jmp
test
pusha
sub
jno
inc
enter
(bad)
cmps
scas
lods
cmp
cli
inc
pop
adc
xchg
push
push
ja
jmp
xchg
adc
cmc
or
lds
cmps
cdq
or
retf
add
and
inc
sub
jne
pop
std
jbe
sahf
in
mov
lods
xor
inc
push
daa
push
scas
dec
sbb
or
dec
push
cmp
push
test
stos
icebp
retf
or
add
test
stos
(bad)
mov
or
xchg
jmp
int
aas
adc
pop
jns
inc
adc
stos
cmp
retf
f2xm1
cmp
iret
and
cdq
inc
mov
adc
pop
push
js
jg
ror
cmp
dec
cld
xchg
bound
jmp
jmp
mov
xor
mov
(bad)
clc
ret
imul
sub
test
mov
dec
push
xchg
and
jecxz
inc
ficom
mov
pushf
lea
mov
ret
ja
dec
jp
bound
es
call
jb
test
(bad)
sbb
das
push
scas
loope
inc
sbb
and
out
xchg
call
ss
push
(bad)
outs
add
fwait
nop
pusha
dec
das
inc
loop
sub
sub
and
xchg
icebp
mov
out
sub
lea
(bad)
les
pop
out
jbe
test
retf
jbe
jp
mov
jecxz
jge
sub
sub
data16
pop
sahf
lahf
mov
dec
pop
dec
pop
aas
xchg
leave
in
mov
sahf
cmp
pusha
push
adc
outs
div
cmp
leave
or
fwait
or
adc
scas
xor
add
push
sbb
repz
or
pop
mov
or
sbb
nop
add
mov
add
jo
stc
sar
loopne
mul
pop
scas
sahf
and
int3
mov
aas
in
test
test
xchg
int
retf
dec
call
pop
cmps
adc
call
push
mov
mov
pop
jnp
mov
cmp
gs
mov
sbb
fld
cmp
jge
cli
aaa
dec
cmc
sub
or
aad
test
mov
fisttp
je
xchg
xor
fwait
loope
add
pop
outs
imul
xor
and
pop
mov
sbb
test
sbb
mov
mov
xchg
ins
cmp
call
xor
jle
xor
jl
inc
pop
dec
cli
out
and
ins
add
scas
and
call
cli
lea
lea
mov
jge
jnp
loope
dec
int3
sub
cwde
push
xor
mov
lods
or
test
add
shl
shl
mov
arpl
ins
lahf
adc
sbb
sbb
mov
scas
dec
sbb
add
or
outs
jmp
shld
retf
pop
sbb
pop
loopne
inc
inc
ss
cs
push
shl
ss
jb
push
cmp
and
pusha
cmp
adc
push
jns
sub
scas
ja
jmp
push
jo
nop
inc
loope
outs
jns
pusha
inc
ins
repnz
adc
jns
daa
sahf
loopne
imul
hlt
lods
sub
push
jb
repz
mov
arpl
add
push
in
inc
jb
fsub
in
movs
cmc
add
loop
pushf
sub
mov
mov
jp
into
push
mov
retf
push
call
test
sub
xor
sbb
pop
sub
mov
imul
in
add
jns
sub
mov
lods
pop
js
dec
fwait
push
xchg
dec
into
imul
cld
fs
pusha
dec
es
jle
les
xor
mov
fucomp
sbb
pop
cwde
add
scas
cmp
sbb
add
mov
cmc
and
xchg
imul
mov
in
ror
cmp
sbb
loop
pop
push
inc
cs
sbb
fld
scas
xchg
daa
test
cs
loop
adc
fwait
arpl
stos
inc
psubb
int
and
cmc
sub
mov
stos
cld
in
outs
sbb
dec
bound
mov
adc
or
in
and
add
int3
jae
jb
fimul
pop
jb
ret
pusha
pop
jmp
dec
mov
sti
add
aaa
add
mov
inc
and
lea
sub
outs
push
sbb
inc
stc
mov
inc
cli
xor
lock
pop
scas
or
hlt
pop
mov
cmp
cli
lods
aaa
mov
or
pop
mov
mov
mov
adc
mov
jmp
inc
ins
pop
enter
popa
add
pusha
cld
mov
call
repz
or
sbb
push
mov
xchg
mov
jle
mov
push
xlat
cmp
retf
push
or
jmp
cmps
xchg
xchg
jne
jb
adc
pushf
movs
sbb
dec
add
(bad)
xchg
popa
jl
mov
mov
aaa
add
popa
jbe
pop
dec
sbb
dec
(bad)
out
cmp
sbb
dec
inc
xchg
call
je
push
leave
sbb
ret
bound
jnp
dec
cwde
pusha
les
mov
jns
hlt
pop
dec
cmp
lods
and
mov
dec
sahf
addr16
add
dec
test
cld
pushf
fisttp
sahf
in
jle
(bad)
cmp
dec
retf
data16
into
enter
lahf
add
(bad)
(bad)
or
std
or
xor
push
je
adc
loope
aad
fistp
xchg
cmp
mov
lock
imul
mov
imul
mov
mov
jno
sahf
inc
cmp
loope
jmp
and
dec
mov
imul
je
xor
fcomp
mov
imul
jl
enter
out
mov
sbb
mov
push
iret
mov
jecxz
dec
in
pop
mov
add
jl
mov
pop
xor
(bad)
sti
xchg
test
out
cwde
cmps
xchg
mov
movs
out
ret
aas
jae
shl
cmc
out
aaa
mov
jp
lahf
sub
sub
push
jnp
ficom
rol
test
push
enter
in
fimul
int
fld
xchg
mov
ins
inc
(bad)
ins
jae
test
or
fld
fsubr
ret
mov
adc
push
or
adc
dec
shl
add
jmp
outs
mov
and
(bad)
jns
or
jne
jle
xchg
cmps
mov
fcomp
out
push
pop
pop
or
call
loopne
repnz
and
jo
add
lahf
add
es
jb
mov
pushf
xor
out
adc
pushf
push
jnp
push
nop
test
add
jae
enter
push
sbb
ret
movs
int3
push
mov
test
mov
push
dec
jmp
mov
mov
popf
pop
mov
jle
inc
cmp
jg
test
loope
fwait
sub
stos
inc
inc
movs
test
push
dec
lea
iret
shl
mov
setnp
(bad)
sahf
mov
xor
cld
mov
xor
jecxz
pop
pop
fist
std
sbb
pmulhuw
lds
sti
fldenv
jmp
xor
(bad)
jae
nop
shl
cs
jns
push
push
retf
sbb
aas
call
inc
push
cmp
fistp
ds
out
pop
(bad)
and
push
ret
dec
test
loop
mov
mov
fsub
pusha
das
gs
mov
(bad)
repnz
imul
repz
jae
ror
pop
adc
test
mov
jne
xchg
sub
addr16
jmp
cmc
(bad)
inc
std
fstp
jns
sub
(bad)
fidiv
sbb
xor
xor
fisubr
std
inc
retf
popf
jb
adc
push
xor
call
es
sbb
jge
sub
jbe
loope
movs
out
les
cmp
int3
sub
sbb
sar
rcr
sbb
adc
push
push
mov
out
das
sub
js
adc
jo
int
cmp
xchg
das
mov
lea
sbb
add
mov
mul
push
pop
psubq
cs
push
xchg
aam
je
scas
sub
lods
sbb
sub
stos
shl
int3
push
(bad)
cmc
dec
pop
add
inc
or
mov
stos
arpl
mov
or
sub
lods
push
ins
fidiv
lock
push
xor
hlt
inc
std
dec
ss
sub
mov
push
jns
adc
int
dec
push
cmps
xchg
ins
sub
mov
shl
in
add
mov
add
sub
push
adc
out
mov
push
dec
movs
stos
pop
test
and
inc
aad
or
sbb
sti
mov
jmp
jae
mov
out
in
or
ins
pop
jnp
stos
dec
push
daa
imul
push
leave
icebp
imul
aad
stos
mov
mov
mov
adc
ins
shl
mov
cmp
xchg
and
cmp
fmul
aam
adc
stos
stos
fsubr
mov
nop
inc
test
inc
mov
ret
adc
fsubr
out
repnz
fs
push
cwde
call
push
add
(bad)
rcr
push
jge
rol
adc
or
fistp
(bad)
sub
jb
sub
sbb
xchg
mov
adc
sub
rol
xchg
cmps
out
or
in
xor
ss
outs
fldcw
in
fwait
imul
or
xchg
sbb
xlat
(bad)
pop
(bad)
sub
adc
mov
sub
pop
sbb
cs
jp
lods
adc
data16
into
mov
or
cmp
fisub
jmp
lds
inc
jmp
add
gs
mov
xchg
mov
int3
pop
push
lds
rcl
cmp
cmp
out
sub
nop
scas
sub
pop
out
mov
call
and
or
je
cmp
jle
add
pop
test
mov
and
(bad)
cmp
ja
lock
sub
push
test
aam
ins
loop
xor
mov
ret
jg
push
push
cmp
fisttp
pop
xchg
add
sbb
cmp
js
mov
jle
add
cmps
loopne
rcr
xchg
test
repz
and
xor
cmp
or
pop
mov
mov
jne
mov
(bad)
inc
cmp
mov
fdiv
pop
fwait
mov
pusha
dec
push
packuswb
xor
sbb
int
dec
retf
test
lahf
add
aam
and
xchg
ja
xchg
or
lods
dec
sub
xor
arpl
mov
inc
jmp
sar
rcr
clc
mov
fs
shr
fld
add
outs
cmp
sbb
cli
sub
(bad)
mov
xor
hlt
in
in
gs
mov
nop
mov
adc
jmp
mov
hlt
out
sbb
int3
pusha
pop
and
es
inc
add
mov
jge
adc
test
push
(bad)
js
inc
dec
push
fmul
in
test
test
repnz
jg
cli
mov
push
adc
js
add
adc
mov
bound
xchg
inc
fadd
jbe
aam
pop
scas
jp
movs
(bad)
je
retf
loop
repnz
jge
sub
ins
retf
inc
call
adc
jmp
inc
push
push
dec
lea
outs
push
lods
xchg
shl
inc
mov
call
adc
push
dec
mov
xchg
sbb
inc
xor
stos
pop
inc
int3
jp
xor
fdivr
cld
pop
cmp
stos
mov
shr
pop
add
mov
sahf
sub
dec
lock
sar
push
iret
jp
push
icebp
icebp
ret
pop
ss
repnz
lods
mov
jle
(bad)
jae
hlt
dec
in
ss
dec
or
mov
call
prefetch
inc
aaa
pop
jbe
mov
jl
ss
xchg
and
imul
dec
hlt
call
cmp
adc
ror
addr16
jns
sub
not
or
(bad)
sbb
push
rol
inc
imul
or
stos
jmp
mov
das
movs
repnz
test
xchg
sbb
adc
sti
xchg
out
mov
mov
mov
pop
sbb
and
or
push
test
jnp
leave
femms
push
jp
sub
inc
cmp
jge
sub
test
repnz
cmp
lahf
iret
js
in
out
lock
fs
xchg
xchg
mov
(bad)
test
dec
movs
lods
sbb
jg
inc
sbb
jae
loopne
jge
fdecstp
xchg
mov
stos
mov
enter
cdq
push
xlat
das
add
inc
xor
ja
xor
rol
jno
adc
outs
inc
push
call
movs
mov
mov
inc
aaa
add
mov
sub
sbb
push
(bad)
imul
xor
push
vaddps
push
dec
push
and
dec
dec
(bad)
mov
push
or
cmc
jne
lahf
and
mov
das
dec
test
jmp
popa
test
rcr
dec
shr
lods
jmp
stos
jnp
push
dec
lock
adc
cmps
xchg
jmp
fild
mov
pusha
fidiv
sbb
cmc
test
dec
retf
pop
jmp
ret
scas
popa
jae
add
jge
sti
jecxz
push
gs
or
lock
dec
repz
(bad)
jo
sub
or
nop
stos
inc
dec
mov
mov
and
add
stos
sbb
xor
call
jmp
addr16
std
mov
and
and
cmps
mov
and
mov
mov
dec
movs
call
hlt
mov
scas
or
je
shr
or
retf
inc
xor
fld
rol
stc
jb
test
xchg
shr
in
leave
adc
cmp
push
cmps
jle
or
icebp
mov
mov
dec
push
(bad)
cmp
xchg
or
in
imul
mov
addr16
or
jbe
xor
sbb
(bad)
xchg
sbb
jo
in
ins
add
mov
mov
ja
ss
push
data16
xchg
mov
push
cmps
lock
push
cmp
enter
clc
ror
and
stos
or
fbld
out
not
jae
shl
in
dec
test
mov
add
mov
pop
cmp
cmp
xchg
out
leave
stc
push
(bad)
push
retf
(bad)
or
sub
pop
push
mov
pop
dec
cli
pop
sub
adc
dec
nop
mov
jmp
jns
out
jno
cli
fist
adc
cmp
mov
inc
sbb
stos
hlt
sbb
xor
xchg
test
je
cs
mov
inc
fcomp
mov
aad
push
mul
in
pop
mov
out
aas
scas
cmp
shr
add
cdq
pusha
jecxz
pop
pop
jge
daa
test
jae
mov
and
dec
inc
sub
mov
shr
inc
and
repnz
mov
add
inc
dec
loope
and
aad
inc
adc
imul
cld
mov
neg
loopne
sub
mov
inc
cli
outs
and
popf
mov
jmp
sbb
popa
cmovl
loope
ficom
add
mov
lock
pop
in
(bad)
dec
cmp
lods
(bad)
push
ins
sahf
mov
pop
sar
push
xchg
mov
out
mov
clc
and
clc
xchg
jbe
test
fld
dec
sbb
add
aad
xchg
(bad)
and
pop
inc
xor
adc
xor
call
xchg
in
enter
sub
cmps
rcl
add
push
rcl
movs
xchg
rol
cdq
repz
xchg
jp
xchg
push
neg
xchg
push
pop
retf
rcr
inc
shr
inc
mov
jbe
push
lea
and
dec
ret
dec
or
jno
xchg
and
popa
ins
clc
mov
mov
or
mov
inc
mov
mov
lods
rol
jge
sbb
fst
cs
sbb
adc
pop
daa
mov
and
or
pop
push
push
add
sub
(bad)
push
mov
jo
out
dec
jmp
fsubr
mov
(bad)
or
fmul
shl
rcl
imul
sti
jae
mov
mov
pop
mov
aam
xchg
jns
retf
clc
shrd
loopne
cmp
mov
cmps
add
xor
adc
jg
sbb
std
cli
in
inc
mov
mov
xchg
or
mov
jge
lods
jo
hlt
mov
leave
or
loopne
jmp
pop
xchg
jmp
and
je
and
jne
mov
jae
setle
movs
jmp
test
mov
stc
sub
ss
jno
test
scas
lods
xlat
sub
in
mov
xor
and
fst
push
daa
add
mov
rol
pop
or
or
call
(bad)
lods
scas
push
and
int
les
call
pop
push
xchg
lea
fwait
lea
cdq
xchg
aam
jne
(bad)
jns
inc
sub
sbb
rol
cmp
mov
frstor
push
ret
jbe
mov
(bad)
inc
add
ss
js
jg
std
jbe
mov
inc
aas
in
popf
retf
push
inc
mov
cmp
mov
jae
add
mov
sbb
rol
ret
js
xor
cmc
daa
cmc
sub
lea
ror
jmp
aaa
fbld
or
mov
cmp
pop
pop
xor
xchg
loopne
pop
int3
je
jle
push
movs
pop
fisubr
mov
fisub
fsubr
outs
cwde
leave
xchg
push
inc
xchg
mov
les
sbb
stos
mov
in
xchg
pop
xchg
imul
nop
push
xchg
int
add
mov
jno
mov
lahf
mov
int
xchg
push
outs
jmp
push
lds
lea
dec
xchg
cmc
lds
mov
aam
lock
sar
pop
iret
stos
fisub
sbb
xchg
fwait
mov
ja
rcl
push
ss
inc
(bad)
test
mov
movs
sub
and
js
push
or
cmps
scas
xchg
leave
add
push
pop
in
lock
stos
aad
mov
imul
push
xlat
mov
clc
mov
repnz
imul
cmp
outs
sbb
inc
inc
cmps
xchg
mov
add
ds
adc
mov
and
pusha
cwde
rcr
and
mov
or
mov
mov
or
add
pop
fsubr
repnz
fldpi
nop
cmp
aas
in
sbb
aas
jle
mov
mov
inc
xor
xor
dec
jge
fsubp
in
mov
inc
sbb
ins
(bad)
or
test
push
rcr
call
push
fst
mov
jb
and
into
sbb
adc
xchg
or
ror
xchg
retf
pop
inc
mov
imul
sahf
jb
test
cdq
add
mov
call
pop
adc
retf
inc
adc
cmps
inc
pop
daa
xchg
mov
aas
aad
lds
sbb
ret
fistp
add
cmps
sar
pop
push
push
jmp
sbb
mov
pop
adc
add
or
xor
icebp
(bad)
stos
xchg
test
ss
xor
aad
into
cmc
fst
loop
xrstor
xor
mov
scas
scas
dec
sub
in
sti
xor
retf
mov
aam
jno
or
pop
mov
sub
mov
push
out
rcr
dec
fcomp
pushf
dec
sub
push
enter
stos
dec
push
fdivr
gs
imul
adc
inc
pop
push
pop
imul
fdivr
mov
xor
mov
inc
lock
jns
or
xchg
test
cmp
push
mov
dec
(bad)
sub
addr16
dec
hlt
(bad)
fisubr
sbb
in
cmp
inc
test
mov
sbb
xor
push
lods
pop
cmc
sbb
fbld
or
movs
jge
clc
arpl
xlat
arpl
and
imul
mov
adc
das
std
ds
sbb
retf
ret
fwait
out
mov
leave
iret
mov
jnp
pop
cs
pop
mov
pop
aam
sub
(bad)
rcl
js
sar
fist
inc
sbb
jnp
push
push
cs
adc
mov
ret
lods
(bad)
into
call
jecxz
pavgw
movs
ficomp
jno
aas
es
fmul
lahf
lahf
sahf
pusha
retf
push
outs
out
add
ins
pusha
in
pop
mov
in
das
lods
mov
or
or
pop
dec
add
and
sbb
jecxz
xor
out
(bad)
jb
imul
test
int
fs
adc
adc
xchg
call
ret
dec
shl
cmp
sbb
cmp
std
loope
out
test
push
pop
lahf
pop
mov
cmps
cli
mov
js
dec
mov
mov
js
loopne
pusha
or
sbb
pop
addr16
jae
enter
inc
add
or
pop
rcr
enter
movs
out
pop
pop
mov
mov
mov
jl
movs
dec
xchg
test
es
mov
or
inc
or
cs
jne
and
lods
jnp
je
loopne
pop
test
inc
test
das
retf
mov
cli
inc
xchg
aaa
dec
popf
jl
shl
aam
xchg
icebp
ds
int3
sbb
mov
fwait
leave
movs
clc
pop
shl
push
xor
xor
not
fsubr
xor
adc
jno
adc
mov
mov
shl
test
xor
xchg
xor
cli
sub
ins
xchg
(bad)
mov
xchg
popf
xchg
gs
dec
inc
push
mov
or
daa
into
movs
nop
call
mov
pop
mov
dec
adc
push
or
xor
int3
pop
cmps
mov
sub
stos
inc
sub
movs
dec
add
test
movs
stc
icebp
mov
jecxz
jl
ss
mov
pop
jmp
stos
push
mov
jg
xchg
mov
adc
mov
call
cld
xor
inc
jbe
pop
in
push
inc
xor
mov
pop
fwait
jmp
int
sbb
aaa
les
sbb
test
adc
xchg
ret
ja
mov
test
in
xlat
rol
dec
jecxz
mov
and
add
jne
addr16
pop
(bad)
fyl2xp1
(bad)
jmp
xchg
mov
jno
aaa
idiv
dec
pop
add
sbb
jns
stos
dec
(bad)
dec
jbe
inc
mov
or
fiadd
ficomp
or
mov
dec
mov
inc
ins
mov
cmp
lock
movs
cwde
push
in
cmc
add
and
fadd
mov
xchg
or
push
(bad)
xchg
fild
shl
ja
dec
sub
lahf
jmp
sbb
push
repz
aam
mov
adc
stc
push
ds
xor
dec
cld
repz
adc
jo
sbb
je
retf
dec
int3
push
imul
sbb
push
mov
enter
sbb
mov
in
pop
ds
outs
mov
repz
mov
jnp
(bad)
stc
adc
ds
dec
jmp
lods
idiv
cmp
mov
and
xchg
std
test
movs
xlat
inc
xchg
dec
aad
jne
das
dec
jecxz
inc
int3
stos
mov
dec
jne
mov
sub
sbb
not
out
mov
xchg
aaa
lods
(bad)
in
dec
jnp
and
loope
dec
push
into
test
mov
cmp
push
ja
retf
(bad)
fldenv
rcl
adc
pop
adc
pop
dec
cmc
imul
cmp
imul
push
and
and
mov
cdq
mov
retf
ins
mov
jns
shl
pop
fsubp
mov
push
ins
fsubr
loope
popa
inc
cld
mov
lods
mov
cli
loopne
mov
mov
inc
aas
enter
repz
gs
cs
push
in
mov
adc
das
adc
mov
retf
ss
push
cwde
fild
jl
ss
in
call
or
(bad)
(bad)
xor
lahf
sub
aad
push
call
fs
ror
stos
sti
cmp
and
(bad)
inc
rcl
mov
add
xor
adc
out
(bad)
mov
inc
jl
add
(bad)
mov
xlat
inc
mov
adc
cmps
scas
xchg
aad
leave
jmp
adc
loop
cwde
push
test
dec
mov
push
xchg
xlat
cmp
lds
xchg
pop
xchg
push
jnp
push
push
in
rcl
sub
mov
ss
(bad)
dec
daa
add
xor
fistp
push
loop
pop
pop
cmc
and
push
retf
dec
inc
fst
rdpmc
ds
sub
out
aad
daa
jns
mov
dec
(bad)
sbb
inc
aaa
lahf
xor
dec
ins
aaa
or
mov
inc
inc
cmp
inc
les
int3
xchg
inc
loop
dec
xchg
cmps
cmp
sub
xchg
fsubr
lods
aad
imul
pop
mov
jb
sbb
and
jge
mov
push
dec
and
add
fucomip
mov
cmp
add
ror
ficom
in
inc
push
into
add
push
icebp
mov
in
pop
sub
cdq
mov
mov
fisubr
mov
fsub
jne
xchg
add
fs
test
daa
sub
mov
add
jl
(bad)
mov
std
arpl
cmp
(bad)
mov
inc
sar
or
add
ja
adc
outs
xchg
(bad)
call
hlt
mov
aaa
aaa
call
adc
push
and
jp
test
pushf
or
fwait
retf
inc
hlt
mov
and
push
test
pop
pop
inc
jg
loope
push
mov
dec
repz
imul
(bad)
add
(bad)
nop
mul
add
loop
fimul
test
and
xchg
cmp
popa
dec
mov
or
dec
jg
sbb
jb
ss
sbb
(bad)
(bad)
call
or
into
sbb
xchg
sub
(bad)
call
xchg
or
mov
lahf
je
imul
fnstcw
mov
sar
xor
fsubr
idiv
js
sub
das
or
into
mov
sub
mov
cmp
push
or
out
xchg
outs
push
xchg
dec
imul
or
int3
inc
in
lea
push
test
icebp
inc
retf
sub
enter
test
dec
in
mov
dec
or
sbb
xor
int
sub
mov
mov
sub
rol
jnp
and
jp
dec
xlat
iret
call
dec
push
lea
sar
push
out
dec
iret
hlt
or
jns
xchg
scas
out
dec
mov
stos
idiv
stos
sub
js
cmp
mov
sbb
(bad)
daa
(bad)
mov
aas
pop
popa
xor
push
div
loope
push
hlt
push
pop
sbb
fcmovb
or
retf
cmp
pop
lods
add
out
ja
stc
ret
push
mov
fidivr
lahf
mov
call
and
jnp
mov
xchg
std
out
aas
add
fwait
sub
sub
inc
or
inc
jno
aas
sub
leave
push
xchg
mov
lahf
inc
rcr
into
xor
out
push
sahf
inc
outs
cmc
aad
clc
cmp
cmp
mov
cmps
out
and
out
mov
test
shl
pop
or
(bad)
sbb
les
push
stc
data16
mov
jo
aad
add
(bad)
sub
inc
push
inc
dec
imul
cmp
dec
data16
mov
mov
pop
test
je
push
push
sub
repz
mov
out
push
or
jmp
dec
lock
lea
shl
mov
or
mov
(bad)
stos
adc
mov
push
push
aam
cwde
cmc
push
jecxz
sub
sbb
scas
mov
jae
mov
pop
xor
stc
adc
enter
sbb
inc
dec
test
mov
mov
add
fcmove
jecxz
push
mov
popf
push
repnz
retf
lahf
test
std
sbb
jne
in
add
iret
mov
in
daa
pop
and
fistp
xchg
or
ja
cmp
jbe
aaa
mov
ins
frstor
dec
pusha
clc
jp
jne
fs
rol
ror
inc
cwde
xor
inc
aas
push
xchg
push
sbb
mov
pop
pushw
retf
or
mov
jp
sub
mov
cmc
fldenv
inc
(bad)
cmps
cdq
sub
jl
inc
aas
dec
pop
jl
out
xor
dec
mov
xor
out
pop
mov
cmp
and
dec
sti
les
addr16
(bad)
shl
out
sbb
out
outs
addr16
xrelease
mov
out
cmp
mov
repz
popf
cmps
jl
jae
pshufw
shl
mov
lods
and
xchg
push
pop
adc
cmp
and
sahf
rcr
out
push
fwait
mov
out
push
add
xchg
dec
movs
cwde
aam
(bad)
leave
sub
enter
mov
xchg
push
sbb
sbb
lahf
xor
dec
push
and
fist
cli
sti
inc
dec
imul
(bad)
adc
clc
cs
or
jb
das
mov
and
mov
mov
jae
sbb
xlat
inc
js
sub
pop
addr16
mov
and
xor
in
inc
jbe
jb
add
pop
inc
xchg
clc
ret
cmps
push
jmp
inc
xor
sbb
bound
clc
mov
mov
dec
mov
mov
ja
fs
mov
not
jnp
into
mov
jl
or
out
stc
jp
lea
push
jecxz
inc
hlt
mov
pop
add
jmp
popf
mov
lds
ficomp
adc
xor
xchg
xlat
outs
sub
mov
psllw
iret
rcr
jbe
not
outs
push
daa
int
jo
fisttp
mov
xor
test
not
mov
mov
inc
mov
and
xor
rcr
mov
(bad)
int3
cmp
mov
adc
pop
xor
jnp
cmps
and
ins
xchg
jmp
cmp
mov
xchg
cmp
(bad)
stos
cmps
jns
ds
cwde
xchg
sub
adc
aam
mov
js
cmp
mov
dec
fwait
mov
pop
stos
mov
and
add
mov
(bad)
cmps
cmps
jge
add
std
scas
xchg
cmp
nop
jnp
mov
push
pop
not
cwde
mov
cwde
inc
test
hlt
or
jle
fst
ins
iret
mov
adc
test
xchg
test
repnz
adc
add
popf
xor
push
cmps
inc
test
sbb
jb
lea
and
and
fimul
adc
mov
dec
sar
pop
ss
mov
(bad)
loope
loop
push
push
ins
sbb
adc
lahf
scas
mov
imul
sub
out
stos
mov
in
push
and
push
mov
(bad)
repz
push
push
jmp
popa
popf
pop
xchg
out
mov
sub
mov
fdivr
jle
mov
out
inc
xchg
call
mov
jmp
pop
lods
cmovp
iret
or
gs
mov
out
mov
cdq
nop
dec
test
iret
popa
sbb
es
cmc
retf
cmp
inc
xchg
rep
shl
mov
and
xor
mov
aad
add
(bad)
mov
xchg
clc
adc
inc
or
jnp
(bad)
(bad)
mov
sub
pop
rcl
xchg
aad
sub
imul
shr
lods
adc
mov
mov
movs
sbb
or
into
mov
ds
mov
sub
pop
mov
push
(bad)
or
pop
dec
jae
ds
(bad)
frstor
jecxz
mov
int
inc
cs
lahf
sbb
movs
jmp
inc
sub
add
inc
add
mov
popa
aad
pusha
xor
sub
test
cli
push
mov
add
sub
adc
loop
push
cmp
and
(bad)
loope
mov
aad
ja
xor
jns
jbe
xchg
(bad)
in
mov
add
pop
sub
sbb
mov
arpl
stos
cs
add
cmp
add
clc
es
test
ret
js
xchg
nop
shl
add
push
cmp
xor
mov
mov
sbb
xchg
inc
sub
sub
(bad)
fstp
in
aaa
(bad)
movs
mov
fwait
repz
rcl
rcr
mov
(bad)
cli
adc
pop
cli
cmps
add
outs
cmps
push
js
jmp
mov
and
sbb
sbb
ror
ins
ret
imul
dec
int3
xchg
movs
es
inc
sub
jb
xor
pop
call
adc
inc
mov
fst
nop
mov
jmp
xchg
or
ror
sub
sub
test
or
aad
cmps
pop
xchg
int
adc
call
in
vcomisd
xchg
add
imul
add
retf
call
xor
cdq
push
mov
dec
(bad)
in
(bad)
in
pop
push
push
ins
sti
xchg
cmps
dec
cmps
nop
call
mov
inc
ja
(bad)
mov
test
div
mov
popa
jnp
hlt
adc
sub
sbb
mov
repnz
push
jne
pop
mov
fld
fbstp
imul
jmp
mov
sub
rol
push
jl
xchg
jns
sbb
lea
sar
pusha
loopne
jo
or
xchg
ror
ins
cdq
div
jecxz
xor
bound
mov
das
icebp
dec
mov
adc
aad
xchg
pushf
arpl
and
adc
retf
xchg
jecxz
test
jmp
ror
sub
cmps
shl
sbb
cdq
lock
sub
movq
test
sub
xchg
lock
xor
jecxz
push
xchg
into
jg
cmps
shr
sub
jbe
div
mov
retf
out
inc
je
shl
sub
and
inc
arpl
push
cdq
mov
mov
inc
jne
(bad)
sub
dec
js
cmp
call
ins
sbb
adc
jns
icebp
outs
jle
adc
and
stos
sbb
fwait
mov
mov
aaa
adc
jnp
mov
shr
inc
in
fs
scas
adc
cmp
xor
mov
sti
jmp
out
xchg
fnsave
outs
mov
and
pop
cdq
(bad)
dec
std
and
sbb
in
cmp
mov
(bad)
adc
dec
xchg
pop
ja
dec
pop
shl
or
fneni(8087
xchg
jge
in
inc
cmps
shufps
fcom
call
inc
xchg
pop
lds
fdivr
adc
jb
jmp
add
jg
mov
scas
lahf
push
xor
addr16
sbb
xor
sub
(bad)
xchg
or
cmp
or
mov
stos
and
mov
cmp
sub
(bad)
sub
cld
ret
mov
hlt
xchg
test
and
div
pop
ins
adc
xor
sbb
cmp
or
pop
in
loopne
ins
aaa
cmp
scas
jg
and
dec
mov
shl
repz
fwait
enter
out
sbb
or
jbe
jle
mov
mov
ret
cwde
or
(bad)
(bad)
sub
push
pop
fs
or
sbb
cmp
fwait
push
shl
int3
dec
adc
dec
mov
test
outs
inc
or
lods
in
xchg
in
lods
xor
and
jnp
push
out
or
cs
fstp
call
xor
mov
int
out
mov
mov
call
lods
ins
test
pushf
jle
inc
retf
xchg
xor
pop
loope
jne
jmp
fnstenv
pusha
cmp
adc
ins
ror
cdq
fnstsw
sbb
sbb
mov
out
leave
popf
add
retf
sub
jne
cmp
pop
inc
jno
adc
cmp
test
push
ins
lahf
sti
mov
es
lods
imul
pop
pushf
dec
xor
mov
inc
push
popa
mov
ins
mov
test
lea
cvtps2pi
jmp
stos
pop
outs
hlt
mov
retf
xchg
or
adc
xchg
xchg
scas
cmps
movs
and
mov
sar
dec
dec
sbb
sbb
jle
fidivr
sub
adc
sbb
mov
xchg
fdiv
test
cmps
data16
cmp
mov
test
adc
dec
jns
inc
inc
mov
and
jg
jo
(bad)
mov
add
mov
in
lods
push
dec
ss
mov
sbb
repnz
daa
in
sub
loope
clc
ss
ins
imul
mov
or
push
nop
sahf
sbb
mov
jecxz
repnz
push
imul
stos
push
mov
adc
mov
retf
mov
ins
mov
addr16
add
dec
jge
ror
push
mov
addr16
add
clc
mov
sub
ret
adc
movs
dec
shl
arpl
mov
mov
test
push
mov
dec
pop
sti
ficom
adc
mov
(bad)
mov
jmp
dec
add
idiv
loop
jecxz
jle
dec
jl
fsubr
test
mov
push
mov
test
loop
pop
push
cs
pop
sbb
stc
jb
adc
jecxz
sub
out
dec
cmp
push
repz
cmp
out
sbb
fldcw
mov
addr16
ja
pop
mov
faddp
jnp
jmp
xchg
mov
push
test
cmc
leave
ins
mov
or
ret
jo
mov
sub
iret
add
lods
jae
push
into
vpmovswb
cmp
dec
add
pop
out
mov
rep
pop
fldcw
jae
dec
js
sub
sub
adc
shl
mov
xchg
into
sub
and
xor
jne
mov
add
ficomp
inc
stc
mov
jo
xchg
ins
ret
push
and
mov
or
(bad)
mov
enter
and
sbb
sbb
ja
sub
add
push
pop
pop
dec
retf
fwait
jp
scas
pop
sub
jmp
repz
sub
push
js
sbb
aas
std
popf
(bad)
and
out
xor
cld
xchg
pusha
bound
(bad)
mov
push
jne
out
or
aad
call
fist
jmp
in
call
cdq
adc
stc
clc
sbb
ret
inc
push
call
jge
call
pop
mov
push
pop
retf
mov
aam
leave
inc
inc
es
sub
popa
sbb
and
mov
loop
jg
inc
sbb
popa
inc
int3
add
fisub
sbb
retf
aaa
push
shl
mov
jno
adc
or
lock
addr16
out
lds
pop
imul
dec
and
jp
xchg
sub
mov
xor
mov
mov
inc
xchg
push
mov
xchg
sub
ins
fimul
or
push
push
mov
push
inc
out
ja
mov
call
imul
cmp
pop
daa
cmc
dec
cdq
xor
add
push
mov
scas
in
push
mov
dec
inc
data16
mov
int
xchg
pushf
outs
jne
lahf
fdivr
arpl
xor
or
mov
fucom
and
imul
repnz
fs
stos
and
movs
jb
je
retf
xlat
loope
aas
(bad)
jb
add
or
jle
xor
dec
fwait
(bad)
push
rol
cmc
adc
out
and
je
and
jp
into
leave
outs
or
jmp
fnstenv
fisttp
sahf
(bad)
retf
dec
add
cmps
adc
retf
push
sbb
mov
push
in
out
ins
mov
cmp
xchg
cwde
xchg
jae
(bad)
shl
cmp
(bad)
or
jecxz
dec
leave
repnz
cmc
dec
jo
ins
sbb
sahf
in
into
cdq
dec
and
and
push
bound
xor
dec
adc
lea
movdqu
nop
sbb
in
in
pop
stos
adc
pop
add
pop
outs
retf
push
into
ja
adc
jo
sbb
mov
shl
pop
aas
and
push
lods
icebp
bound
ds
iret
mov
int
push
iret
icebp
mov
mov
pop
cwde
push
xchg
sbb
cmc
adc
dec
aam
xor
aaa
jl
in
or
ss
in
xchg
push
vunpckhpd
adc
mov
lods
pop
pop
fbstp
mov
mov
scas
loop
stos
frstor
dec
mov
sub
cmp
sti
pop
jmp
in
(bad)
sbb
hlt
xor
hlt
adc
cmp
mov
bound
dec
and
sahf
xor
mov
outs
loopne
ja
xchg
or
mov
cmps
cwde
cmp
fwait
mov
pop
daa
mov
addr16
cmp
ret
xchg
les
xchg
call
mov
and
in
hlt
ins
pushf
xchg
retf
push
sti
push
shr
mov
mov
mov
and
and
xor
xchg
add
jle
pop
inc
sub
mov
retf
sbb
jmp
bound
(bad)
mov
xchg
rol
sbb
mov
cwde
fs
inc
pop
fld
arpl
iret
mov
jmp
inc
inc
mov
out
movs
mov
jecxz
pop
outs
hlt
pop
lods
sbb
mov
in
xchg
ja
mov
fs
test
ins
cmp
sub
mov
xchg
ins
mov
sbb
shl
shl
cmps
push
pusha
mov
pushf
xor
mov
xchg
cwde
call
clc
lods
xchg
xchg
mov
and
rcr
loope
cmp
dec
inc
pushf
and
cmc
pop
adc
mov
sub
les
xlat
out
fsubr
sub
push
outs
popf
jg
mov
sbb
add
push
and
out
cmp
and
das
mov
ficomp
lea
xor
stos
push
mov
adc
cwde
add
fwait
cld
xchg
or
fwait
pushf
into
pop
dec
test
mov
jl
push
nop
pop
aas
jmp
push
xchg
pushf
mov
ja
jnp
jae
hlt
(bad)
pushf
popa
mov
or
sar
outs
aaa
and
imul
fs
retf
jae
sub
pushf
(bad)
fbld
out
ror
jns
add
adc
ret
pop
dec
fcom
movs
das
mov
and
imul
pop
xlat
movs
ret
ficom
pop
pop
bound
cmps
mov
xchg
fstp
sbb
push
mov
idiv
pusha
int
(bad)
arpl
xchg
xor
(bad)
and
adc
clc
in
inc
pop
sub
cmp
jnp
in
fnstsw
add
jle
out
cmps
or
clc
cmp
push
xchg
(bad)
into
xor
(bad)
fnsave
test
sub
add
call
push
jmp
dec
clc
stos
mov
mov
mov
test
dec
dec
sub
fiadd
sbb
cmp
sub
push
fwait
in
ret
mov
push
mov
in
or
ret
clc
(bad)
pop
pop
add
mov
or
icebp
nop
add
mov
cmp
shl
ja
adc
popa
jno
add
mov
xor
adc
xlat
jbe
loop
inc
into
(bad)
dec
imul
arpl
jmp
cmps
mov
retf
sub
test
aaa
xchg
in
das
neg
rol
mov
jb
leave
pop
out
and
or
das
add
scas
mov
cld
sbb
cli
repnz
outs
jge
pushf
and
in
mov
lods
jge
or
out
mul
cs
cmc
movs
mov
push
push
test
sbb
stc
push
adc
repz
scas
push
add
xchg
outs
xor
xchg
repz
jne
lahf
add
mov
icebp
pop
inc
out
les
mov
and
outs
add
jp
in
mov
or
stos
mov
sti
ins
mov
call
clc
test
sti
pop
cwde
mov
mov
je
and
ja
sbb
les
call
rol
mov
push
out
mov
push
aaa
sub
sbb
out
pop
dec
or
fwait
jb
inc
inc
unpckhps
or
mov
jmp
pop
ins
sysret
clc
add
outs
mov
xchg
lods
adc
pushf
movs
les
mov
jge
cmp
bound
mov
sbb
jbe
pop
pop
dec
dec
lea
jb
out
out
(bad)
and
push
aad
(bad)
ja
jg
jb
xchg
(bad)
popa
ficom
sbb
mov
mov
movs
sbb
add
mov
cmp
sub
cmp
das
mov
cmp
stos
retf
or
or
sub
out
or
cmp
pusha
or
dec
jge
sbb
add
cli
and
mov
adc
shl
lods
rol
mov
ret
jb
push
lds
sbb
out
mov
test
rol
jmp
mov
repnz
leave
scas
xor
xchg
test
int
pop
xchg
scas
xchg
mul
inc
or
pop
mov
mov
dec
mov
cmps
jno
scas
jecxz
xchg
lds
sar
rcr
hlt
push
(bad)
test
clc
push
adc
adc
adc
cmp
aad
sub
mov
call
or
jecxz
jmp
std
xlat
into
lds
push
call
pop
fwait
xlat
mov
mov
push
ficom
movs
div
clc
xor
mov
sub
or
enter
aaa
push
imul
lahf
dec
pop
test
xor
in
and
ins
ja
rcr
ret
mov
adc
shl
xchg
scas
aad
or
pushf
test
inc
in
push
retf
je
adc
pushf
pop
mov
inc
out
mov
and
dec
daa
pop
outs
sahf
sub
pop
cmp
mov
xor
out
xchg
sub
push
pop
pop
(bad)
push
mov
mov
xchg
int3
sbb
fst
mov
nop
xor
stos
pop
sub
add
mov
mov
aaa
in
rcl
(bad)
not
clc
in
mov
sbb
adc
clc
loopne
xchg
lahf
scas
arpl
mov
stos
sar
and
jnp
push
dec
(bad)
dec
mov
test
cmc
push
xchg
aad
fmul
or
mov
xchg
pop
ret
mov
or
xor
mov
add
fwait
and
pop
sub
mov
daa
xlat
fst
inc
cmp
push
rcr
jp
int
mov
dec
ss
push
outs
cs
ins
cmp
fsubr
jnp
ret
in
pop
xor
mov
jp
inc
mov
in
push
adc
ret
adc
loop
leave
jmp
icebp
(bad)
and
inc
xor
js
jbe
int
inc
cmps
fidivr
lock
dec
mov
mov
idiv
or
fmul
pusha
shl
outs
lds
xchg
test
cmps
in
adc
sub
jns
adc
pop
pop
stos
cmp
or
or
push
call
sahf
sbb
push
cmc
xor
xchg
push
scas
push
mov
stc
dec
inc
bnd
push
or
scas
cdq
jecxz
xchg
mov
push
xor
lds
ret
(bad)
sbb
add
fstp
jge
aas
pop
cmps
push
mov
int
test
xchg
pop
inc
cmps
push
jne
ret
mov
push
out
out
in
xor
test
(bad)
jl
mov
idiv
dec
repnz
imul
fidivr
mov
add
retf
jle
sub
dec
push
popf
xchg
or
sbb
push
pop
pop
shl
dec
jns
cld
dec
adc
and
mov
sbb
in
cmc
or
jmp
pop
jbe
xor
jae
cmps
cmp
pop
pop
xchg
adc
cs
inc
cmp
shl
sbb
outs
repz
ins
dec
xlat
add
jle
mov
mov
pop
xchg
or
out
push
mov
movs
push
mov
cmps
sahf
push
add
jle
fcomp
(bad)
xchg
or
out
mov
jb
(bad)
in
sbb
or
je
scas
test
bound
ret
and
mov
fldcw
psrlw
imul
ins
in
mov
add
or
xor
int
repz
popa
mov
sar
push
cmc
pop
xchg
xchg
je
outs
out
jmp
push
aad
xchg
inc
cmps
cld
or
popfw
outs
dec
std
inc
nop
jg
and
inc
cmp
push
in
cmc
retfw
adc
jle
mov
pop
movs
jmp
xlat
es
mov
test
ror
in
jne
rol
mov
mov
data16
inc
adc
test
or
or
in
loopne
mov
out
add
dec
pushf
sbb
push
les
mov
data16
test
in
popf
xchg
dec
or
cmps
retf
jae
dec
bound
mov
push
int3
sub
push
rol
and
ins
pop
fild
retf
mov
mov
cmps
pusha
mov
dec
stos
hlt
pop
pop
xchg
xor
xor
outs
iret
je
jmp
push
mov
lea
les
and
outs
dec
push
xchg
pop
and
sbb
jl
std
jnp
xchg
es
inc
jbe
xchg
sbb
hlt
add
ja
test
jecxz
shl
adc
mov
dec
jnp
xchg
sbb
das
je
ror
push
xor
mov
sub
or
packuswb
clc
mov
ds
cmp
repnz
inc
ins
fdivr
data16
mov
mov
xlat
push
sub
cdq
mov
jb
xor
mov
movs
cmps
jb
sub
scas
mov
cmps
lea
push
or
adc
in
sub
aaa
(bad)
xchg
pop
out
pop
push
mov
arpl
cmp
lock
mov
outs
inc
popa
cmp
call
xchg
mov
dec
in
cmc
sbb
ret
sti
jae
stos
ins
and
mov
push
mov
add
aam
mov
jo
lods
mov
ret
in
call
mov
jp
int
cwde
mov
loope
add
fprem
nop
leave
pop
jo
ins
jl
mov
push
int
ret
int3
push
add
jg
call
or
retf
icebp
call
sbb
cmp
add
jle
cld
sub
pop
dec
push
mov
popf
mov
hlt
ret
pusha
repz
neg
and
fldenv
cwde
xor
pop
(bad)
out
data16
es
(bad)
(bad)
xchg
jae
xchg
xchg
jmp
add
jl
jae
popa
rcr
fwait
dec
(bad)
imul
in
mov
cmps
in
(bad)
or
ja
jno
fnstcw
loop
mov
gs
out
dec
js
and
or
ja
inc
add
push
cld
inc
push
push
repnz
test
xor
(bad)
in
repz
xor
lods
push
(bad)
mov
pusha
(bad)
xchg
ins
in
pop
add
sub
std
test
adc
loopne
in
dec
dec
les
pusha
adc
dec
xor
xor
dec
out
jmp
xor
loope
test
push
cmps
or
test
pop
mov
xchg
iret
mov
out
repnz
call
or
mov
std
fs
repz
jmp
daa
adc
std
sbb
mov
push
call
jns
mov
pop
mov
(bad)
cmps
sahf
sbb
out
add
fstp
pop
shl
inc
call
int3
imul
adc
call
js
sbb
retf
int
or
scas
mov
imul
les
xor
pusha
sahf
pop
sbb
(bad)
jbe
fwait
adc
in
pop
add
xchg
or
out
imul
mov
xchg
sub
inc
gs
push
and
dec
mov
pop
adc
pop
inc
sub
mov
sti
pop
pop
jns
mov
mov
jae
xor
or
push
jmp
arpl
or
cmp
push
fwait
stc
lahf
jmp
lea
in
push
stos
mov
or
jg
mov
cmps
jb
xchg
or
or
mov
dec
mov
pushf
pop
js
in
loop
je
xchg
jae
pop
or
inc
jl
(bad)
fld
mov
and
rcl
cmp
mov
sub
mov
jbe
call
mov
cmp
jp
call
outs
push
mov
das
jno
in
mov
inc
cmps
sub
add
jecxz
mov
adc
lock
jecxz
sti
push
icebp
lds
mov
fsubr
(bad)
dec
fiadd
dec
or
hlt
mov
retf
mov
(bad)
pop
sar
sbb
ror
mov
fdiv
xadd
fcom
pop
xchg
outs
jmp
mov
dec
cmps
adc
xchg
xor
add
mov
popf
rol
push
sbb
xor
add
mov
cmp
ss
out
inc
mov
mov
sbb
(bad)
xchg
sbb
xor
mov
enter
inc
jmp
jb
push
mov
adc
enter
not
fadd
and
fucomi
(bad)
xor
fwait
sub
and
clc
adc
or
cld
pop
enter
jecxz
outs
adc
jge
test
inc
add
sub
pusha
aam
or
in
pop
daa
(bad)
das
jo
sub
cmps
icebp
and
sub
xchg
push
or
jae
out
adc
sbb
sti
xor
sar
xor
gs
pop
(bad)
push
cli
popa
in
adc
jl
test
cmp
pop
xchg
xor
sbb
jl
lods
xor
(bad)
fst
xchg
loope
jnp
mov
push
dec
push
push
ja
(bad)
sahf
dec
outs
or
into
sbb
fld
loopne
jno
pop
mov
adc
scas
pusha
mov
cdq
(bad)
jbe
xlat
es
adc
call
call
push
xor
rcr
pushf
sahf
shr
inc
jno
and
rcl
dec
or
push
fucom
pop
dec
push
mov
add
mov
and
mov
test
sbb
es
jmp
pop
outs
jo
or
dec
mov
mov
fidiv
je
scas
xor
dec
call
sub
sbb
mov
(bad)
mov
(bad)
xchg
xor
and
jns
pop
mov
jns
sbb
js
mov
lods
call
push
xchg
clc
pop
mov
fadd
mov
dec
lods
mov
sti
mov
xchg
std
retf
dec
out
outs
adc
pop
and
sti
sbb
ins
fbld
int
fsub
sub
(bad)
ja
cmps
xchg
rcl
shr
cdq
aam
int
inc
daa
stos
sub
mov
ret
in
out
lea
dec
jecxz
mov
leave
sti
(bad)
scas
pop
mov
(bad)
sub
(bad)
pop
sbb
call
dec
ins
mov
je
and
fs
xchg
inc
push
pop
jbe
push
xor
(bad)
xchg
jnp
jge
sub
mov
mov
adc
mov
fidiv
dec
add
(bad)
ss
inc
fcmovnu
hlt
mov
hlt
or
dec
inc
sbb
or
test
push
mov
aam
sbb
jmp
xor
sub
mov
arpl
add
or
mov
dec
sub
popa
jo
lods
(bad)
not
sub
je
(bad)
jmp
or
movs
xchg
add
mov
cdq
mov
aad
fld
cmp
adc
push
test
adc
push
pop
retf
pop
push
sub
push
repz
mov
das
mov
inc
dec
mov
stc
mov
fstp
and
js
imul
sbb
aas
pop
clc
push
mov
ds
nop
xchg
pop
pop
xor
adc
jbe
xchg
loop
mov
sar
mov
outs
iret
pusha
push
dec
fdivr
jge
push
sti
and
pop
movs
jg
jmp
or
outs
xchg
stos
xchg
mov
xor
sub
and
jecxz
enter
loopne
movs
mov
imul
(bad)
(bad)
shr
arpl
test
inc
sub
jne
dec
pop
js
out
in
fst
int3
les
daa
(bad)
and
hlt
inc
jl
or
mov
imul
ss
loope
sbb
aam
outs
in
mov
ja
and
jne
dec
xor
mov
sbb
loop
cwde
call
ret
fwait
mov
adc
pop
lds
xchg
and
adc
xor
fs
push
cmc
cmp
scas
bound
aas
cmp
jns
xchg
cmp
inc
and
jecxz
out
cmp
outs
mov
push
out
pop
fistp
dec
xchg
(bad)
in
fiadd
test
scas
(bad)
xor
mov
cld
dec
xor
add
sub
pop
add
mov
out
add
pop
repnz
xor
adc
add
loop
and
sbb
popf
test
jg
add
in
and
push
nop
jae
pop
popa
mov
test
sub
pop
cmps
aam
cmp
gs
aaa
out
dec
pop
inc
ret
cmp
outs
enter
dec
std
inc
xor
mov
xlat
dec
push
stos
mov
shl
lahf
add
out
sar
inc
sbb
popf
das
popa
push
pop
jge
jbe
mov
repz
enter
out
mov
cmp
test
sub
jmp
cs
call
cwde
loop
jne
pushf
sub
jl
ja
int
push
scas
xchg
aad
fistp
jo
cwde
xor
add
or
popa
inc
dec
bound
mov
and
jo
ins
int3
mov
loop
adc
xlat
or
test
call
push
retf
(bad)
cmp
stc
push
sub
ror
ss
call
inc
retf
aaa
push
ins
adc
data16
rcr
mov
inc
jge
xor
cmp
push
cmp
stc
inc
pop
enter
push
xor
shl
push
add
imul
xor
and
(bad)
mov
xchg
xchg
stos
retf
aaa
cmp
sbb
cmps
vorps
sbb
or
outs
je
xchg
pusha
push
icebp
es
lods
mov
push
add
(bad)
mov
(bad)
cmp
fidiv
out
sbb
stc
pusha
jno
rol
ja
int
jae
ret
add
fwait
mov
push
inc
out
mov
sbb
push
lea
mov
xor
fs
out
inc
stc
sbb
aad
fld
(bad)
leave
xchg
(bad)
mov
mov
mov
inc
or
lods
push
mov
clc
xchg
call
cwde
xchg
mov
add
jb
pmullw
jne
out
jl
shl
xchg
push
sbb
pop
and
in
fnstsw
mov
xchg
neg
in
cmps
call
js
push
outs
push
out
scas
and
imul
shl
inc
mov
cmp
adc
(bad)
retf
sbb
pop
dec
inc
cdq
xor
sbb
mov
cmc
push
sbb
lds
mov
inc
js
call
jl
and
or
mov
mov
outs
jmp
inc
sbb
cwde
adc
mov
mov
sub
out
jg
loopne
sti
pop
div
in
retf
ror
mov
into
pop
mov
icebp
cmp
hlt
jle
xchg
jae
dec
and
mov
(bad)
out
mov
js
push
pop
pop
rol
inc
les
jnp
add
je
fimul
push
mov
cli
call
dec
mov
jl
dec
cwde
lahf
or
xor
stc
push
sub
scas
addr16
and
mov
jmp
loope
cdq
out
inc
xor
cmp
stc
test
call
ret
imul
outs
je
scas
adc
retf
push
mov
cdq
dec
jp
jb
aam
mov
xor
mov
xor
cmp
xchg
mov
mov
mov
bound
icebp
(bad)
xor
inc
dec
call
cmp
xchg
xchg
adc
retf
and
xor
inc
jnp
dec
std
push
or
cmp
sub
cmp
sahf
(bad)
jns
arpl
cmp
cs
div
loope
push
jg
pop
mov
mov
ins
inc
int3
(bad)
mov
jno
or
shl
lock
pop
int3
test
cmp
call
in
cwde
push
jmp
ins
into
mov
dec
and
jo
fcom
jns
inc
jnp
cwde
mov
ret
xchg
xor
xchg
xchg
out
mov
mov
mov
cli
rcr
or
adc
mov
jg
ret
out
loopne
add
aad
mov
sub
xchg
shl
xor
test
mov
pop
aas
xchg
jmp
cdq
daa
mov
sahf
movs
inc
mov
cmps
xchg
inc
test
cmp
dec
in
call
imul
neg
xchg
push
xor
mov
retf
adc
xchg
in
inc
pusha
jmp
push
(bad)
jae
imul
sub
pop
xlat
out
stos
xchg
mov
leave
and
fild
mov
jp
xor
into
hlt
imul
adc
mov
scas
add
xchg
cdq
pop
enter
add
gs
dec
test
call
sub
jl
(bad)
pop
pop
sti
fiadd
jle
lahf
call
adc
mov
jae
sbb
jae
xchg
xchg
push
movs
arpl
xchg
fs
jb
add
fld
mov
out
mov
pop
leave
sub
clc
sbb
jmp
ds
lahf
jp
lods
rcl
nop
jns
(bad)
push
addr16
ds
xchg
ret
ret
repnz
popf
sbb
retf
daa
or
inc
push
sbb
sbb
les
ss
add
cmc
jg
adc
and
xor
sahf
adc
xchg
movs
scas
lods
loop
fist
and
or
cmp
or
addr16
push
jno
dec
jecxz
add
add
js
enter
stos
add
clc
xlat
cdq
push
(bad)
mov
daa
outs
mov
pop
scas
jge
mov
sub
pop
iret
(bad)
test
js
add
jnp
push
and
loopne
hlt
fbld
fistp
inc
popf
jle
rcr
test
mov
pop
mov
mov
add
in
out
push
mov
jns
cmp
iret
clc
sub
stos
clc
fidivr
inc
test
lods
xchg
push
sbb
xor
retf
(bad)
out
aaa
xchg
or
mov
sbb
xchg
fsubr
sub
inc
and
xor
(bad)
push
dec
fmul
loope
adc
cmp
sbb
loopne
test
fcom
rcr
test
pusha
xchg
and
jmp
neg
mov
jnp
dec
adc
inc
ja
jl
aad
jns
retf
pop
bswap
clc
adc
rcr
bound
mov
aaa
and
xchg
out
push
popa
imul
inc
sbb
pop
pop
mov
stos
fiadd
and
or
mov
xchg
fldenv
(bad)
jge
sub
jp
test
ret
lods
and
icebp
cmp
stc
repnz
fs
fbstp
jmp
imul
imul
cmp
push
imul
sub
dec
(bad)
scas
and
dec
xor
lea
mov
das
bnd
scas
ret
jmp
mov
xor
push
mov
and
or
lock
sbb
in
(bad)
mov
pop
mov
jle
cmp
in
mov
jl
add
imul
pushf
loopne
int
mov
test
retf
sbb
fnstenv
xor
and
std
aaa
and
lahf
mov
shr
sbb
dec
inc
xchg
push
push
ret
xor
add
pusha
lea
pop
psllq
mov
mov
stc
jbe
mov
mov
add
clc
jle
add
icebp
or
test
or
test
test
test
jb
aaa
dec
pop
mov
ficom
push
add
adc
ins
push
stc
stos
lods
ja
lods
cmp
test
sbb
imul
lea
sbb
mov
mov
push
jmp
sub
push
and
gs
stos
les
jp
retf
sbb
test
gs
addr16
aam
xchg
mov
xbegin
push
clc
aad
fisttp
xchg
idiv
int3
gs
mov
mov
mov
aas
xchg
dec
call
push
ret
sbb
mov
int
and
push
repnz
pop
jno
adc
pop
out
xchg
jae
in
pop
push
xchg
xor
rcl
xchg
scas
fcomp
icebp
clc
and
mov
loope
rol
leave
mov
xlat
ror
jne
leave
jmp
lds
out
jp
inc
stc
cmp
ror
dec
mov
inc
cmps
in
fsub
inc
xchg
or
jle
adc
push
push
and
jp
mov
js
ja
jo
jp
icebp
imul
aas
lahf
push
push
imul
into
arpl
ret
fs
push
cld
cmp
mov
mov
dec
pushf
mov
add
dec
leave
lods
fcomp
call
mov
jo
cmps
xor
lods
add
pop
js
jmp
sahf
test
push
sub
lods
and
cmc
fcom
mov
loop
jl
cmp
fbld
xchg
pushf
pusha
ja
sti
xchg
(bad)
daa
xor
adc
push
xchg
jmp
and
(bad)
outs
stos
pop
sub
rcl
mov
dec
movs
adc
jo
mov
jmp
call
and
jg
fisubr
xchg
sub
add
cmc
mov
shl
rcr
dec
popf
cmps
sahf
scas
jp
ror
add
loop
pop
stos
and
or
js
jle
sbb
and
das
out
push
xor
push
arpl
mov
test
movs
test
adc
push
inc
int
mov
mov
int
cmc
or
xchg
test
sbb
arpl
inc
sahf
dec
pop
xchg
retf
cmp
pusha
movs
rol
dec
and
int3
test
popa
dec
pop
adc
adc
sahf
pop
jmp
mov
cwde
mov
dec
and
fldenv
or
dec
inc
shl
inc
push
in
jp
fisttp
push
cs
out
and
inc
mov
push
lea
movs
cwde
ror
hlt
popa
mov
mov
xor
out
sar
retf
jbe
or
out
outs
sub
pop
in
js
adc
xor
and
loope
mov
mov
dec
mul
mov
call
scas
mov
enter
mov
repnz
cwde
add
out
aam
cmps
js
in
or
gs
push
adc
jge
xor
cs
rcr
mov
stc
and
and
ror
mov
and
or
jp
inc
add
jb
icebp
xor
outs
into
scas
jno
in
leave
add
xchg
les
pop
push
add
sbb
lahf
ret
leave
xchg
in
loopne
jmp
rol
push
xor
jmp
pop
jb
or
ret
addr16
nop
bound
adc
pop
gs
push
dec
shr
jl
sbb
out
ds
push
push
jo
sbb
sub
inc
xlat
ret
or
xor
pushf
push
dec
lea
test
cmp
mov
cmp
cmp
fstp
mov
cmp
ror
adc
sub
fcmovnu
push
call
stos
inc
(bad)
or
and
or
push
push
cmp
mov
icebp
jae
(bad)
aam
or
sbb
ins
movs
jnp
cmp
sbb
xor
adc
sar
and
jb
das
mov
aad
mov
ret
and
inc
push
push
inc
loope
hlt
cld
jmp
shl
lods
leave
pop
dec
cmp
aas
sbb
ja
sub
ret
adc
jne
jge
push
xlat
pop
aad
movs
add
(bad)
fst
inc
push
test
mov
or
test
jmp
sub
jnp
ins
imul
sahf
adc
dec
loope
outs
jnp
mov
(bad)
xor
inc
and
xchg
imul
push
xchg
outs
jge
imul
cwde
mov
retf
push
mov
xchg
mov
xor
hlt
mov
cdq
test
sub
cmc
jecxz
cdq
xor
add
sub
mov
jno
test
xor
je
scas
fdiv
mov
dec
imul
inc
sahf
and
fild
adc
(bad)
lock
mov
inc
fstp
lods
in
(bad)
sbb
ins
and
aad
mov
inc
push
add
clc
inc
mov
(bad)
xchg
test
xchg
jb
sti
inc
xlat
js
jbe
mov
(bad)
and
jnp
aad
ds
sar
push
enter
sbb
sbb
inc
jns
scas
inc
xchg
jmp
imul
sar
adc
xchg
jmp
xor
add
xor
jmp
hlt
xchg
dec
dec
test
into
sbb
sbb
ds
inc
cs
mov
test
dec
out
mov
nop
dec
js
(bad)
fild
push
cwde
int
loop
fimul
sbb
mov
gs
push
int
ret
push
mov
mov
leave
pinsrw
jnp
pop
jns
jmp
dec
cmc
xor
ficom
movs
jle
fwait
lods
outs
push
xchg
mov
test
ret
in
push
mov
add
outs
arpl
mov
and
xor
jae
pusha
jle
or
shl
inc
ds
cmp
inc
imul
int3
sbb
push
inc
or
mov
sub
stc
fwait
sbb
cmp
or
or
fimul
popa
bound
aaa
out
fwait
mov
scas
adc
push
dec
cwde
cld
loopne
inc
retf
rcl
stos
jmp
xchg
dec
es
xchg
dec
inc
add
pushf
les
outs
mov
scas
outs
mov
imul
aad
(bad)
sub
push
jmp
imul
adc
or
test
inc
clc
push
mov
repz
mov
dec
xor
enter
xor
sub
sbb
sbb
scas
add
jmp
stos
mov
adc
push
sti
repz
add
mov
xchg
xchg
mov
sub
(bad)
(bad)
popa
js
or
xchg
out
push
inc
dec
ret
mov
mov
fdivr
ins
test
mov
push
jne
mov
jl
fisttp
or
and
sub
pusha
sbb
xchg
scas
cwde
jmp
cli
pop
aad
pop
mov
outs
jno
(bad)
jle
sbb
push
sub
pop
dec
adc
adc
inc
into
inc
and
mov
imul
pop
dec
outs
mov
add
fnstenv
mov
ja
jae
inc
xor
pop
cmp
in
cmc
and
and
pop
dec
fcmove
xor
ror
mov
ss
outs
pop
jge
mov
bound
out
aas
retf
test
test
push
jne
stc
idiv
sbb
popa
mov
mov
jne
xchg
paddsb
(bad)
add
fld
jp
shr
call
adc
mov
push
pop
loopne
aas
jmp
xchg
outs
cli
cmc
lahf
push
icebp
push
jne
mov
push
sbb
jecxz
sub
jbe
dec
adc
xchg
fadd
jp
sbb
nop
mov
inc
mov
jae
pop
(bad)
sub
inc
cwde
jmp
add
mov
xchg
and
fld
rcr
fdivr
dec
hlt
test
pop
hlt
jns
push
loop
jmp
imul
add
jno
dec
cmp
test
inc
push
ror
push
test
push
lahf
aam
xor
jmp
ja
(bad)
cmp
dec
aam
cmp
xchg
in
jnp
push
push
jl
cmp
adc
or
fsub
enter
add
fwait
movs
leave
xchg
pop
pop
lahf
xor
adc
pop
fs
cdq
arpl
ins
xchg
(bad)
mov
shl
adc
push
mov
pop
icebp
je
repnz
add
push
mov
data16
loope
inc
mov
mov
mov
xchg
int
lods
(bad)
movs
mov
imul
jl
data16
add
int
mov
ss
rcr
mov
xor
aas
add
xchg
lock
adc
jecxz
lahf
sbb
in
cmp
xchg
push
dec
lods
outs
es
movs
mov
movs
xor
cmp
sub
sti
fadd
jno
mov
sbb
push
xchg
and
pop
cmp
test
mov
mov
test
cmps
into
mov
jb
and
sub
ret
and
lods
dec
int
inc
push
sbb
push
or
out
mov
cdq
push
les
loope
push
or
mov
ret
pop
mov
aam
out
sbb
popa
mov
mov
imul
cmp
ss
adc
(bad)
mov
pop
lock
std
cmps
call
jns
(bad)
loop
xchg
retf
add
mov
cmp
fcom
jp
addr16
jle
pushf
cmp
icebp
test
enter
pop
adc
mov
rol
add
(bad)
aam
ja
push
mov
add
sub
lods
es
jle
sbb
aam
or
lods
pop
dec
ins
cli
rol
push
ds
add
sub
popa
imul
push
cmps
pushf
mov
xor
mul
mov
outs
and
rcr
mov
outs
cmp
cmc
pop
cmps
pop
out
outs
retf
adc
shl
xor
add
and
mov
mov
shl
popf
bound
jmp
mov
adc
mov
dec
(bad)
inc
divps
popa
dec
sbb
cmp
xchg
mov
fdivr
call
pmulhw
loopne
ds
sahf
gs
gs
ret
rcl
cli
out
mov
je
pushf
inc
or
mov
xchg
xor
in
ja
dec
pop
mov
(bad)
dec
jmp
outs
jge
mov
retf
pusha
sti
and
jge
add
icebp
cmp
movs
xchg
mov
fist
(bad)
xchg
ret
add
daa
icebp
push
push
sahf
dec
aaa
movs
or
dec
loopne
adc
push
addr16
push
add
adc
jnp
mov
cmp
fsub
mov
jae
je
sub
retf
lods
test
mov
jp
shl
out
lahf
inc
pop
add
mov
enter
mov
mov
data16
pop
add
gs
call
(bad)
add
js
scas
cmps
mov
mov
fild
test
loope
adc
add
push
popf
mov
mov
mov
test
rcr
out
shl
adc
add
mov
cmps
mov
mov
mov
jne
inc
stos
mov
sti
ret
xchg
sbb
fidiv
and
cmc
cmp
push
jbe
cmp
xor
xor
or
inc
lea
xchg
mov
cdq
mov
sbb
jnp
adc
push
fld
ins
sub
push
dec
(bad)
pop
sub
mov
iret
pop
cmp
in
mov
xor
pop
push
dec
arpl
pop
test
iret
push
cmp
addr16
adc
loope
mov
push
rol
xor
xchg
pusha
mov
out
mov
jns
push
gs
fdivrp
sub
pusha
add
xor
cmps
dec
jmp
pop
push
push
lds
xlat
mov
jmp
push
cmp
into
push
pop
xchg
lea
rol
xor
jecxz
hlt
inc
pop
shr
shl
jmp
in
nop
sbb
cmp
and
xor
(bad)
sub
sub
sub
mov
cmp
cwde
into
inc
jb
shr
adc
dec
sub
mov
in
scas
into
xchg
test
push
das
jg
and
std
push
fldcw
sub
xor
xchg
push
xchg
ret
fwait
mov
inc
adc
loopne
aam
dec
inc
sub
aas
inc
dec
jg
nop
inc
enter
and
cmp
cmps
out
js
sub
mov
enter
sub
(bad)
dec
dec
add
pop
push
add
add
xor
adc
cvtps2pi
cmp
rol
int
out
inc
sbb
xchg
inc
mov
inc
enter
cmps
inc
popf
clc
popf
push
iret
pop
ret
(bad)
leave
clc
push
sbb
pop
repnz
imul
push
xchg
xchg
xchg
and
out
frstor
xlat
or
sub
movs
popa
leave
ror
inc
push
rol
pop
xlat
loope
sub
ret
aaa
sbb
imul
and
ins
add
xchg
movs
fbstp
dec
and
in
out
retf
call
out
xchg
stos
shl
mov
sbb
mov
add
test
arpl
enter
leave
div
sbb
inc
add
dec
jmp
lods
inc
stc
hlt
jnp
xor
fadd
mov
lods
dec
pop
sbb
out
jae
pop
popf
mov
adc
xor
cli
or
cmp
cmps
xchg
mov
imul
pop
xor
cmp
fwait
in
mov
cmp
sbb
(bad)
pop
jp
pop
popf
pop
adc
ins
test
jae
fld
mov
dec
in
mov
adc
jno
mov
mov
push
call
out
mov
stos
aas
mov
or
in
fisttp
xchg
cmps
push
lock
rol
mov
in
and
in
lds
dec
xlat
and
lock
inc
jmp
mov
and
bound
shr
mov
nop
popa
inc
sub
mov
cmp
jnp
(bad)
adc
leave
xlat
imul
test
cwde
test
movs
and
adc
loope
mov
jle
pusha
xchg
adc
xlat
push
je
je
test
jns
int3
out
leave
mov
add
inc
pop
retf
adc
mov
pop
inc
cmp
jg
adc
pushf
and
dec
xlat
add
push
pop
fidiv
mov
lahf
ret
or
mov
adc
cmp
test
mov
mov
aas
scas
lods
mov
ins
mov
daa
int
cmp
jne
dec
fmul
hlt
adc
xor
pushf
xor
xchg
mov
jb
jecxz
imul
mov
outs
and
cwde
mov
xchg
fmul
test
and
nop
push
jns
xor
pop
int3
cmc
cmps
int
xchg
(bad)
mov
add
and
mov
mov
cmc
inc
sahf
mov
push
ja
mov
fs
out
mov
xchg
adc
xchg
cmps
test
jno
sbb
xor
cmps
push
enter
or
ins
xor
jb
sar
aaa
mov
adc
or
clc
push
in
xor
mov
sbb
xchg
mov
sbb
retf
dec
jl
gs
aas
xchg
or
adc
repz
dec
pop
add
retf
jecxz
sub
dec
imul
lock
shl
loop
ret
and
mov
adc
push
sbb
lock
sbb
fisttp
and
jmp
aam
adc
sar
(bad)
es
imul
rcl
fmul
test
xor
bound
daa
out
je
(bad)
fsubr
sbb
xchg
and
icebp
fsub
xchg
enter
aaa
cmps
jne
retf
retf
lds
mov
stos
out
test
jp
into
cld
in
imul
lahf
(bad)
stos
lock
ret
or
jne
mov
jle
sti
xor
pop
xchg
iret
gs
test
cmp
jnp
js
fdivr
xor
(bad)
or
lods
and
xchg
jne
dec
or
jmp
cmp
and
pop
and
xor
pushf
or
fs
je
mov
xchg
cmp
mov
inc
lds
arpl
adc
call
add
push
test
outs
push
sub
rol
jno
mov
aad
jl
cmp
lahf
pop
fild
and
pop
push
div
push
mov
fadd
xor
or
leave
sbb
jb
jns
xor
mov
xchg
add
pop
mov
mov
cmps
or
or
movlps
sub
adc
stos
imul
movs
sbb
push
mov
shr
fs
pop
cmp
dec
adc
xchg
test
push
mov
and
adc
push
or
dec
cmp
pop
push
mov
xchg
fadd
add
lea
push
and
push
call
inc
repnz
or
pop
pop
adc
jle
pusha
push
xchg
push
repnz
jb
dec
or
sub
retf
lahf
jmp
cmp
add
sub
in
xor
dec
hlt
mov
imul
dec
xor
jge
mov
cld
call
clc
mov
ins
sub
(bad)
sub
test
repz
dec
test
call
clc
cmp
push
pop
inc
enter
or
push
ror
cmc
cmc
mov
mov
mov
inc
jo
lock
fs
mov
jno
pushf
out
loope
cmps
movs
fwait
jmp
mov
call
stos
cmp
pop
xchg
mov
icebp
and
leave
ja
mov
inc
adc
mov
mov
xchg
scas
mov
ret
dec
sub
dec
icebp
shl
xchg
repz
pop
adc
aas
inc
test
ins
sti
lods
das
jnp
(bad)
push
call
ret
jp
inc
es
sahf
add
frstor
inc
gs
jmp
sbb
inc
pop
(bad)
(bad)
sbb
sti
cmp
icebp
sub
lock
jnp
(bad)
aad
into
ds
fldcw
gs
dec
in
inc
xor
add
int
out
gs
xchg
mov
mov
test
les
(bad)
aad
movs
imul
mov
dec
jmp
mov
pop
popa
xor
ins
sub
fwait
bound
inc
cmp
mov
mov
jb
mov
push
sbb
mov
inc
inc
push
inc
mov
fld
dec
jmp
imul
aaa
or
mov
add
jmp
inc
sahf
jns
test
icebp
push
jmp
mov
xor
dec
stos
inc
popf
and
mov
jno
push
push
lea
push
fcmovne
jo
push
add
jmp
cmps
shr
test
(bad)
push
in
add
sub
scas
mov
in
icebp
out
jo
fild
xor
xlat
xor
shr
aaa
sbb
adc
inc
fstp
xchg
test
cmp
pop
pop
mov
add
inc
inc
into
fdiv
loop
iret
mov
repnz
icebp
hlt
out
repnz
cmp
fmul
or
test
cmp
test
cwde
jl
xor
in
push
sbb
cmp
arpl
mov
inc
pop
pusha
pop
xor
xchg
stc
ins
lods
jmp
cmps
in
addr16
pop
int
test
retf
stos
xchg
shl
dec
sbb
sbb
rol
and
push
xor
pop
sahf
cmc
inc
or
loopne
js
cmp
lea
sahf
fwait
(bad)
cmp
cmp
cmc
dec
inc
rcr
sub
pop
or
pusha
test
push
mov
dec
dec
cwde
outs
enter
mov
mov
mov
jp
mov
out
fwait
(bad)
popf
push
loopne
ror
(bad)
pop
int3
daa
in
xchg
xor
enter
xlat
imul
(bad)
mov
cli
inc
sub
jl
inc
rol
retf
mov
(bad)
rcl
(bad)
test
mov
add
sbb
dec
out
mov
in
inc
or
and
mov
jns
fdiv
mov
cmc
xchg
sti
iret
push
(bad)
clc
scas
jb
mov
mov
jo
mov
popf
(bad)
js
and
clc
adc
out
jg
xor
xchg
jp
inc
xchg
jbe
retf
jmp
or
std
and
retf
adc
inc
popa
dec
repnz
loope
loopne
jne
lds
imul
jne
(bad)
sub
dec
not
adc
push
jne
test
repnz
outs
mov
jns
loopne
mov
xor
outs
test
test
jp
(bad)
xchg
in
sub
test
das
add
or
in
adc
fld
push
in
xchg
jns
adc
aas
lahf
pop
xchg
lsl
(bad)
mul
cld
push
pop
cs
sub
pop
mov
inc
mov
test
sbb
out
sbb
popf
or
xchg
push
xchg
push
popa
xor
mov
into
xchg
or
jp
popf
jb
push
mov
repnz
les
mov
(bad)
iret
lock
push
mov
movs
sar
cmp
nop
jmp
ret
or
xchg
fsubr
outs
sub
mov
daa
mov
leave
fist
aam
shl
mov
mov
push
fimul
(bad)
call
rcl
repnz
outs
outs
push
pop
mov
jle
call
jnp
test
inc
leave
pop
push
xchg
mov
imul
(bad)
(bad)
mov
push
pop
mov
sub
(bad)
push
inc
outs
xchg
repnz
push
into
xor
idiv
pop
cmps
sbb
inc
loop
mov
sbb
cmp
mov
jb
jae
lock
in
movs
pop
xchg
jae
xchg
fs
dec
outs
xor
ins
pop
sub
sub
rol
pop
sub
ret
fcmovne
ja
loopne
sbb
jne
sbb
inc
mov
(bad)
push
cwde
repz
dec
add
pop
fstp
scas
std
movs
bswap
call
jo
mov
lods
jbe
(bad)
mov
sahf
pop
arpl
shl
inc
enter
nop
xchg
and
out
xchg
or
mov
les
pop
mov
ds
int3
push
pop
sub
pop
nop
mov
jae
sub
sar
and
and
xor
cs
cwde
mov
or
not
int3
bound
ficomp
pop
out
retf
sbb
outs
inc
and
add
test
inc
xchg
(bad)
mov
xor
repz
xchg
mov
jo
mov
nop
mov
adc
xchg
adc
jne
cdq
mov
repz
jno
icebp
lea
mov
adc
shl
push
xor
ror
cmp
dec
test
push
ins
mov
sbb
inc
and
push
sub
out
bound
sbb
pop
sbb
cmp
sbb
repz
lods
fstp
or
cmp
sub
sti
dec
fcmovb
adc
push
and
cdq
and
jae
pop
pushf
push
pop
push
cmp
push
sbb
jno
or
loop
div
cwde
ss
and
std
iret
push
push
xchg
dec
push
(bad)
int
push
dec
add
cmp
xchg
or
jb
xor
pop
fnstcw
push
dec
xchg
(bad)
les
leave
dec
sbb
into
xlat
mov
aam
(bad)
rcl
out
push
push
pushf
pop
mov
and
rol
add
push
mov
call
add
(bad)
sbb
jo
adc
jbe
sub
sub
in
test
jbe
movs
add
div
shl
cmp
push
jmp
jnp
test
jmp
in
push
leave
jnp
push
sbb
and
icebp
daa
outs
dec
jnp
xchg
loopne
mov
dec
mov
sbb
xor
sbb
mov
add
mov
in
jecxz
jae
inc
mov
or
sbb
fwait
out
mov
push
sub
add
xchg
xchg
in
dec
test
ja
pop
ret
ret
push
jo
jb
ret
xor
fcmovne
pop
adc
rcr
push
js
or
or
push
or
xchg
out
sbb
stos
push
add
dec
push
inc
jle
xor
scas
fst
jo
mov
pusha
sbb
rol
js
push
cmc
int
dec
cmp
mov
popa
or
mov
sub
mov
dec
retf
sbb
push
call
lds
loop
sub
jecxz
push
rcl
jnp
cmp
hlt
pushf
jmp
or
stos
or
mov
mov
add
aad
fiadd
and
adc
iret
xchg
lock
jmp
adc
leave
sub
xchg
retf
pop
in
pop
and
cmp
gs
in
arpl
iret
pop
push
repnz
and
jbe
cmp
cwde
jb
xchg
cmps
dec
jno
sub
inc
and
pop
mov
(bad)
pop
jae
in
ins
adc
and
xor
les
inc
and
cld
in
mov
xlat
or
add
aad
add
sub
cmc
mov
nop
mov
xchg
neg
dec
pop
imul
mov
bound
push
inc
adc
sub
les
repz
sub
sub
int
out
test
jns
mov
sub
jp
retf
addr16
mov
popf
jmp
and
inc
popf
js
jne
fisubr
push
inc
jmp
or
sbb
movs
cmps
lahf
in
pop
loopne
cli
dec
lea
cwde
repz
fild
fild
and
cmp
scas
aas
jo
sub
adc
(bad)
call
push
push
jae
cmp
(bad)
bound
fsubr
enter
mov
mov
xchg
cmps
leave
jecxz
pop
add
int
mov
add
mov
push
dec
mov
in
cmp
cmps
sbb
mov
ss
sub
les
in
daa
in
mov
popa
pop
sub
aad
adc
and
dec
outs
adc
out
jno
(bad)
push
repz
sbb
imul
cmp
mov
mul
adc
scas
mov
xchg
mul
call
add
in
dec
jg
sub
out
shr
daa
adc
retf
mov
outs
mov
adc
fistp
add
mov
enter
(bad)
and
jnp
test
mov
rcl
and
dec
in
rcr
retf
inc
pusha
mov
push
xchg
push
mov
add
test
jle
cmp
xchg
int3
aaa
out
arpl
add
or
mov
xor
int
cld
neg
pop
out
dec
mov
jbe
aaa
mov
lds
mov
outs
div
adc
loope
(bad)
mov
repz
add
outs
push
fisttp
js
ret
fdiv
xor
pop
inc
in
push
lds
cmps
loop
into
sbb
and
cmp
dec
mov
jb
mov
dec
inc
das
rcr
(bad)
mov
int3
mov
sub
xchg
(bad)
mov
lods
cli
push
sub
xlat
xchg
inc
test
mov
sbb
cs
rcl
sbb
retf
jge
jbe
lahf
pop
(bad)
cmp
lods
sub
(bad)
retf
sub
in
sbb
add
inc
cmp
or
loope
xchg
fnstenv
and
ja
pop
ins
inc
and
sub
fs
adc
sbb
jle
xchg
mov
push
daa
add
push
mov
scas
test
repnz
sbb
xor
js
mov
mov
or
int3
cmps
fwait
outs
cld
ss
mov
call
repnz
dec
pop
repz
jb
in
inc
mov
div
stos
and
pop
cmp
pushf
fcom
mov
xchg
ja
push
add
xor
push
cmps
mov
(bad)
imul
cld
push
lods
test
lahf
push
movs
in
into
pop
popa
or
fadd
lock
bound
in
xchg
and
push
sahf
xchg
loop
push
je
lds
push
pop
mov
push
std
cs
les
xor
popa
and
enter
sbb
(bad)
std
shr
xchg
enter
or
mov
adc
lds
lahf
daa
push
repnz
call
movs
sahf
sub
test
out
scas
imul
push
dec
sti
das
mov
dec
xor
iret
stc
and
(bad)
xor
cmps
into
push
call
fwait
clc
shl
cdq
outs
fist
sub
mov
daa
call
fs
xor
test
inc
adc
or
test
repnz
ror
lods
pop
das
jecxz
in
stos
xor
lods
mov
xchg
pop
or
pushw
ja
cmp
movs
xchg
and
rol
mov
sar
lds
and
xchg
movs
les
cli
ja
test
ss
ins
add
pop
bound
daa
xchg
iret
add
xchg
scas
mov
inc
xor
ret
iret
es
into
(bad)
and
shl
nop
push
mov
adc
pop
inc
lea
test
push
mov
je
mov
xchg
cmps
sar
jnp
adc
mov
ss
(bad)
mov
mov
pop
loope
(bad)
jmp
sbb
mov
popf
push
movs
mov
js
sbb
sub
mov
dec
test
(bad)
mov
js
outs
mov
stos
(bad)
or
sti
add
neg
xor
int3
mov
cld
ja
ret
data16
pop
pop
retf
sub
aaa
dec
sbb
inc
jle
xor
js
push
aam
mov
lock
and
cmps
pop
fidivr
and
push
or
sub
arpl
mov
rol
mov
fsub
hlt
push
stc
retf
ss
dec
das
jge
jbe
mov
fimul
rcr
add
inc
dec
retf
(bad)
mov
inc
and
pop
(bad)
aaa
out
fsub
push
xchg
fldcw
rcl
and
adc
mov
pop
inc
mov
call
jmp
(bad)
ficomp
add
std
in
cmp
scas
test
repz
dec
out
out
push
outs
sub
aas
js
data16
dec
test
stc
cwde
cmps
xlat
add
les
xchg
or
mov
and
cwde
push
jmp
xchg
push
mov
mov
sbb
push
pushf
xor
adc
mov
mov
mov
cmp
cmps
retf
fs
xchg
jo
cwde
and
daa
dec
dec
dec
outs
pop
inc
cmp
leave
mov
scas
lock
xor
pop
xor
dec
(bad)
rcr
(bad)
das
mov
dec
cmps
dec
fwait
ret
sub
retf
dec
push
(bad)
stc
mov
and
int
(bad)
mov
inc
mov
out
mov
icebp
mov
(bad)
adc
jmp
ds
test
imul
mov
inc
or
xor
jmp
pop
sbb
(bad)
mov
inc
imul
hlt
jb
gs
fldenv
adc
fs
push
mov
sbb
pop
pop
(bad)
fldcw
(bad)
outs
jno
adc
sbb
dec
imul
inc
xchg
jge
push
pop
cmps
scas
jbe
pop
in
pushf
xchg
adc
push
in
mov
movs
adc
fsubr
shl
sub
ins
mov
push
xor
pusha
jp
(bad)
or
push
mov
add
fs
adc
sub
lea
pop
xchg
ins
dec
aam
sub
jne
addr16
stos
mov
loop
pop
lds
push
jg
adc
clc
xchg
mov
ret
inc
(bad)
jmp
ds
inc
pop
lahf
aaa
jg
push
add
mov
xchg
mov
inc
(bad)
mov
push
jg
leave
push
in
push
(bad)
adc
xchg
into
loope
jmp
jmp
sbb
push
dec
mov
loopne
ins
(bad)
scas
test
fld
cmps
cdq
push
cld
push
jmp
mov
mov
pushf
xor
ss
scas
mov
in
inc
test
leave
(bad)
out
ds
xchg
shl
or
add
dec
sbb
push
out
cmp
sbb
icebp
cmc
fld
mov
mov
add
sub
mov
leave
repz
add
sub
dec
icebp
adc
sub
pop
cwde
bts
mov
push
es
pop
movs
je
lock
imul
xchg
stos
test
pop
lds
xor
popf
add
inc
nop
push
outs
iret
jge
mov
push
or
retf
stos
mov
jbe
mov
inc
rcr
adc
das
mov
pop
dec
shl
mov
outs
dec
xbegin
jae
xchg
ja
arpl
mov
mov
ror
push
jp
or
shr
xchg
loope
dec
pop
jne
inc
cdq
dec
ins
sbb
(bad)
out
mov
dec
int3
mov
ja
jp
mov
outs
add
fwait
xor
sahf
gs
aad
pop
lds
stos
fs
aad
fstp
sbb
add
mov
pop
cmp
adc
fdiv
push
sub
in
jnp
sub
adc
push
xchg
inc
icebp
add
fdiv
fisubr
lea
pop
pop
(bad)
mov
add
or
dec
mov
and
arpl
push
retf
bound
push
pop
dec
xor
out
cmc
or
fs
inc
or
rol
mov
dec
add
push
loope
adc
push
fcom
cmp
cmp
in
shr
push
fcmovu
pop
pop
aad
retf
add
mov
rol
js
pop
jmp
add
das
pop
les
xchg
push
xchg
jg
push
pop
inc
(bad)
mov
cli
cmp
es
aaa
cmp
xchg
js
or
add
mov
dec
test
fwait
shr
push
ja
xor
lock
cmp
bound
retf
sub
jo
lock
aad
test
add
pop
sub
mov
push
test
(bad)
into
lea
movs
mov
pop
mov
sahf
(bad)
mov
mov
mov
sti
sub
std
dec
mov
xchg
inc
adc
cmp
loop
gs
adc
dec
fdiv
mov
mov
(bad)
pop
sub
imul
mov
cld
pop
lock
push
pusha
shl
push
inc
stos
ret
push
cmp
add
bound
add
call
mov
xchg
(bad)
mov
fs
into
push
loopne
add
cmps
jb
sbb
in
cmp
and
xor
and
retf
les
dec
push
mov
sub
fst
xchg
sti
dec
outs
ins
mov
cmps
in
pop
push
jle
xchg
adc
sahf
or
cmp
(bad)
push
stos
repnz
nop
mov
xor
cmp
push
ret
jg
and
fbstp
or
push
sbb
test
std
imul
dec
imul
mov
popa
or
mov
not
call
sub
sbb
das
out
(bad)
and
popa
out
sub
mov
fldenv
mov
adc
mov
loop
mov
add
cmp
call
data16
in
xchg
dec
test
cmps
(bad)
out
push
cmp
sub
push
xor
or
lods
cmp
jo
dec
and
jae
sub
mov
add
add
ins
jecxz
sub
imul
push
sub
jne
adc
out
xor
inc
xlat
stc
push
xor
pop
stc
jne
sbb
ret
xchg
aam
xor
pop
mov
aam
loope
push
push
rcl
aam
adc
mov
ss
push
test
(bad)
xor
sti
mov
(bad)
xchg
loope
jmp
mov
xchg
sbb
loope
(bad)
test
or
push
sbb
fs
mov
nop
outs
mov
dec
push
mov
(bad)
fisubr
loop
pop
cld
pop
mov
xchg
outs
stc
push
xor
enter
in
push
mov
data16
call
ret
mov
xchg
xchg
in
std
jo
and
icebp
mov
inc
and
and
mov
sbb
popf
or
jne
mov
cmc
mov
jp
or
jl
inc
push
cmp
clc
test
pushf
ins
cmp
out
into
add
cmp
jnp
mov
cmps
pop
xor
into
scas
jb
xchg
jns
push
iret
xlat
cmp
pop
and
neg
xchg
lahf
cwde
call
sbb
adc
mov
imul
loopne
aas
xchg
retf
jo
jge
data16
in
or
call
(bad)
add
int3
shr
mov
test
inc
push
inc
mov
bound
or
ss
jecxz
add
push
inc
aaa
aad
sbb
pop
sbb
xor
mov
add
adc
mov
sub
stc
outs
(bad)
mov
mov
ins
dec
xor
scas
mov
xchg
inc
lods
pop
adc
mov
sbb
inc
fdivr
cmp
xchg
cmp
or
jmp
not
inc
ret
jmp
jle
mov
js
cwde
fdivrp
xor
mov
add
inc
dec
xor
mov
push
cmp
add
push
out
sbb
shl
sahf
mov
cmp
and
mov
repz
inc
mov
xchg
inc
aam
mov
mov
sbb
jmp
stc
adc
sub
daa
dec
cmp
sbb
aaa
rcl
mov
outs
inc
stos
mov
ds
jnp
cli
ffree
fistp
cmp
inc
nop
adc
xchg
movs
or
or
jns
test
adc
in
es
imul
cmp
test
out
icebp
out
les
les
xchg
(bad)
call
push
ss
cmps
xor
adc
jmp
test
aam
dec
in
stc
daa
sub
mov
mov
pop
call
addr16
ss
rol
add
je
and
fsub
iret
inc
inc
add
ficomp
and
inc
add
dec
and
pop
sbb
xlat
cs
add
pop
and
iret
stc
push
sub
retf
sbb
pushf
push
je
pop
mov
lds
push
imul
ret
cmps
fs
push
mov
stc
pop
xlat
inc
adc
sub
mov
dec
jmp
jmp
lods
dec
xchg
test
aam
push
cmp
fwait
sub
dec
js
push
jg
ror
add
xor
cmp
mov
aas
bnd
loopne
adc
xchg
loopne
es
xchg
push
cli
sub
adc
xor
fistp
push
mov
or
or
add
xor
or
inc
ret
dec
dec
and
add
ds
mov
cmp
pop
mov
outs
mov
jg
ja
rol
je
xchg
and
cmp
arpl
dec
cmps
jl
mov
rol
add
or
and
int
repz
pop
add
xchg
imul
retf
ss
inc
sbb
dec
mov
mov
ret
loop
or
pop
push
xchg
(bad)
xchg
xchg
xchg
push
ret
add
stos
push
or
or
jle
fdivr
in
sbb
mov
or
test
mov
into
mov
dec
in
call
jns
mov
mov
jne
mov
rol
or
dec
in
xchg
repz
xor
adc
arpl
fmul
inc
pop
xor
mov
mov
adc
movs
nop
(bad)
cmps
mov
aas
lods
popa
dec
adc
enter
xchg
adc
push
leave
shl
cld
lds
jmp
call
call
mul
dec
sub
xor
dec
leave
in
sbb
ja
in
xor
pop
imul
pop
clc
or
cmp
dec
jg
xchg
xor
aas
ret
in
sub
repnz
add
lods
add
mov
dec
icebp
imul
cmps
and
loopne
scas
adc
rcl
cmc
push
jno
jmp
es
xchg
mov
pusha
sbb
mov
xor
mov
push
xchg
fist
cld
lock
mov
imul
xchg
push
mov
not
adc
call
cmp
retf
inc
and
fild
cdq
push
mov
mov
and
jge
pop
adc
in
inc
test
add
xchg
add
add
call
loop
cmp
mov
xor
mov
dec
arpl
xor
dec
push
outs
out
jno
adc
cmc
lock
jmp
icebp
fst
xchg
out
pop
cmps
ss
pop
lahf
adc
add
add
lahf
push
sar
repz
inc
in
jnp
sub
add
pushf
mov
cmp
lea
and
jns
repnz
into
mov
or
and
inc
aaa
iret
mul
or
ins
pop
aaa
fistp
push
loopne
mov
pushf
add
xchg
sbb
lahf
pop
fsubr
leave
int
mov
and
fs
push
(bad)
cmp
jnp
inc
fs
pop
ror
mov
in
cmp
jb
loop
jb
mov
jns
mov
adc
mov
(bad)
in
sbb
or
xchg
call
leave
jl
jnp
repz
xor
shl
pop
adc
jns
mov
cmp
int
jge
(bad)
xchg
std
xchg
ins
mov
push
scas
jecxz
sub
cmp
mov
aas
icebp
sti
and
or
(bad)
ds
call
xor
pop
dec
pusha
in
sub
push
mov
xor
loop
fdivr
push
pusha
test
fsubr
aas
pop
adc
in
movs
cmp
push
pop
stos
add
mov
rcl
jae
popf
adc
ret
inc
add
or
sub
stos
out
mov
and
stos
inc
cmp
not
mov
add
dec
or
adc
movs
inc
rol
inc
xor
sub
into
in
fld
push
pop
(bad)
arpl
loop
int
jmp
out
mov
sbb
movs
add
(bad)
mov
dec
jle
ins
mov
xchg
das
pop
hlt
pop
jge
xor
test
pushf
out
cmp
push
push
imul
mov
or
test
sti
cmp
es
shl
cmp
cmc
pusha
xchg
xrelease
mov
mov
das
mov
loope
ror
dec
(bad)
aam
jo
xlat
push
into
cs
cmp
xchg
int
xchg
xchg
lds
dec
lods
inc
adc
xor
setb
sub
jb
xchg
mov
xor
aad
lock
iret
dec
xchg
fs
add
push
dec
pop
inc
inc
into
loope
mov
dec
sti
fwait
add
mov
cmps
icebp
hlt
loope
jecxz
adc
das
clc
in
dec
inc
cli
push
outs
sbb
pop
leave
lods
push
pop
inc
aas
pushf
(bad)
mov
stos
jae
or
adc
loopne
cmp
outs
add
sbb
imul
dec
push
scas
vcvttsd2si
xchg
lods
pop
add
data16
pop
imul
lahf
imul
cwde
lods
dec
or
push
inc
neg
dec
mul
gs
into
xor
xchg
mov
xor
xchg
pop
jecxz
iret
cmp
enter
stos
sub
cmp
mov
sbb
addr16
js
mov
jg
xor
dec
mov
int
mov
lods
sti
cli
cmp
nop
mov
mov
call
sar
cmp
pusha
or
push
(bad)
js
cmp
xlat
sar
outs
lahf
inc
mov
outs
loopne
push
es
mov
je
cli
sbb
pop
mov
pushw
pushf
sti
mov
or
int
in
int
cwde
mov
in
add
dec
push
mov
in
cdq
nop
push
xor
mov
mov
jbe
ret
sar
or
mov
dec
or
xchg
sbb
pop
xor
ret
out
(bad)
push
in
icebp
push
imul
push
fdiv
mov
adc
enter
or
xor
jae
iret
stc
mov
adc
arpl
(bad)
dec
bound
fwait
add
(bad)
aam
hlt
or
push
mov
fsubp
leave
sbb
sbb
hlt
data16
retf
repnz
pop
pop
and
sub
and
xchg
aaa
xor
out
inc
cmc
idiv
dec
jno
sbb
inc
faddp
xor
push
adc
dec
dec
stos
jp
fidivr
jo
xor
xor
fwait
push
(bad)
jnp
sub
and
and
add
xchg
mov
leave
mov
pop
lea
pop
jge
gs
mov
jne
mov
shl
dec
imul
jle
add
mov
push
xchg
mov
mov
ret
(bad)
push
fsubr
jp
mov
inc
popa
je
mov
dec
push
mov
jbe
sbb
out
sub
in
add
shl
or
xor
sbb
jo
daa
ds
scas
cmp
add
inc
hlt
pop
inc
jo
leave
and
and
fstp
ins
int3
les
mov
jbe
adc
jo
mov
loopne
xchg
jmp
push
cmps
cs
mov
sbb
retf
cwde
dec
cmp
loope
mov
adc
cwde
iret
dec
dec
lds
leave
jg
rol
push
repz
mov
xor
inc
sti
mov
stos
sbb
mov
cmp
call
push
pop
in
jmp
mov
les
clc
icebp
fidiv
cmc
imul
jp
in
jbe
jno
pop
test
in
das
fcom
test
movs
(bad)
fimul
shl
adc
out
mov
ret
add
mov
fdivrp
push
add
inc
pop
pop
inc
or
les
int
pop
imul
mov
push
or
cmp
jmp
inc
gs
mov
lahf
scas
ror
xchg
mov
mov
jo
fs
push
xchg
push
mov
and
fcompp
xor
cld
xchg
jns
add
call
cmp
push
sbb
test
pop
inc
hlt
jmp
inc
jmp
cmp
fbld
jecxz
mov
mov
push
pusha
add
in
inc
pop
mov
xchg
ret
sub
icebp
enter
sbb
add
pop
cmp
icebp
retf
jmp
das
fdiv
fdivr
jmp
cmp
jge
retf
add
cld
fidiv
mov
movs
mov
sub
add
add
sub
data16
push
aad
loope
or
movs
ret
mov
jl
ins
cmp
(bad)
(bad)
and
fld
add
outs
shr
dec
pop
in
icebp
pop
stc
cmp
outs
lea
jae
and
scas
adc
gs
sub
sbb
rcl
adc
pop
sub
fidivr
hlt
cmp
icebp
xchg
ins
aam
mov
dec
pushf
fwait
ins
imul
fwait
add
dec
scas
inc
lahf
pop
inc
loop
xor
inc
or
dec
xor
cmps
nop
mov
xchg
mov
hlt
in
outs
je
(bad)
jp
jecxz
idiv
push
jp
ds
inc
jp
inc
fmul
inc
fsubr
cmp
les
pushw
das
icebp
leave
call
fisubr
xchg
je
jecxz
call
cmp
stos
sub
mov
add
inc
dec
jp
in
mov
mov
aaa
dec
mov
js
ror
shl
cld
pop
retf
jmp
je
fwait
mov
pushf
imul
aas
aad
pop
add
add
stos
xchg
pop
adc
sbb
push
or
dec
(bad)
xor
pop
(bad)
sub
data16
xor
pop
jns
test
arpl
pop
mov
push
out
fs
cmp
jmp
cmp
ins
call
cmp
mov
ret
test
jnp
mov
aas
xor
sbb
in
out
or
jg
vmovaps
icebp
mov
cmc
or
xchg
(bad)
jae
lods
jge
sbb
and
sub
adc
jmp
ss
cmp
pushf
pop
leave
leave
or
xor
ja
fwait
(bad)
(bad)
aaa
jge
jl
into
add
mov
add
cmp
jnp
add
dec
jne
add
xchg
cld
inc
loope
add
fsubrp
cmp
jecxz
and
mov
cmp
xchg
dec
push
adc
push
into
cmc
adc
(bad)
inc
div
test
pop
arpl
jns
add
imul
lahf
push
or
mov
out
dec
das
(bad)
adc
cmp
arpl
jmp
sub
js
xchg
call
sbb
xor
or
push
sahf
inc
and
rcr
cwde
and
test
test
xchg
pop
hlt
out
fwait
lods
xchg
sub
or
outs
pop
jo
pop
out
or
mov
into
sar
mov
ret
dec
sti
pusha
mov
sbb
test
jne
in
cli
jl
daa
or
push
js
and
in
pop
dec
jo
shl
rcr
test
sbb
pop
pop
pop
mov
lds
dec
retf
daa
popa
add
jmp
xor
mov
std
lds
bound
and
pop
rol
retf
fbstp
enter
mov
ins
or
ror
push
push
sub
jo
out
aad
es
out
adc
mul
inc
ins
es
pop
add
mov
(bad)
mov
test
stc
and
popa
out
jmp
in
adc
cli
inc
add
fdivr
jbe
add
sub
jne
rol
ins
sub
mov
adc
and
ss
or
or
and
xchg
test
test
sbb
mov
es
cmp
jbe
out
test
outs
test
xlat
push
ins
adc
push
mov
lahf
mov
mov
push
in
sub
jnp
js
adc
lahf
data16
call
xor
stc
pop
pop
adc
or
bound
lea
call
push
push
jp
into
addr16
adc
pop
adc
shl
int3
inc
(bad)
dec
mov
cmp
call
jnp
jae
jmp
ret
call
cmp
sub
or
shl
jno
dec
mov
cmps
pop
pop
add
retf
or
add
xor
push
cmp
dec
stc
dec
ficomp
cmp
sub
sbb
mov
jo
xor
adc
test
dec
cwde
add
mov
aam
add
adc
jo
jo
adc
repz
jle
call
sub
cwde
out
cs
mov
div
js
sbb
iret
add
mov
push
cmp
fsub
jae
or
inc
or
or
mov
ror
addr16
jbe
jp
xor
into
ins
sub
pop
cli
fist
fst
inc
pushf
xchg
add
clc
jge
mov
lea
add
inc
daa
fadd
push
fadd
mov
dec
inc
test
daa
or
lods
test
xchg
cdq
fist
inc
loope
mov
xchg
retf
int
sbb
test
iret
out
rol
sahf
push
pop
adc
cmp
push
popf
es
mov
add
cmp
mov
retf
stc
inc
das
mov
xchg
lock
add
jmp
mov
jmp
xor
xchg
retf
pop
ins
fsub
call
rcl
pusha
jnp
cli
bound
out
rcl
mov
rcl
push
jl
sub
push
cmps
out
cmps
add
mov
sbb
pop
scas
mov
rcl
movs
les
fmul
imul
movs
repnz
loopne
aad
jae
mov
mov
outs
lahf
lock
sti
inc
cld
inc
leave
aad
jnp
icebp
int3
in
xchg
xchg
test
mov
in
xor
lea
pushf
aaa
xchg
xor
sbb
nop
pop
arpl
fwait
icebp
adc
or
mov
arpl
shl
fisttp
cmp
ret
jnp
lods
xchg
sub
std
sbb
add
lods
add
dec
inc
pushf
jl
dec
aad
movs
xchg
or
sub
cwde
stos
mov
adc
push
or
fs
push
xchg
inc
icebp
jmp
leave
mov
sti
jno
aas
xor
xchg
cmps
and
mov
jo
xchg
fnstsw
add
cmp
daa
into
sbb
cmps
inc
and
xchg
sub
inc
mov
pop
sbb
leave
add
or
mov
or
cs
loope
ss
mov
ins
sub
or
ret
call
ret
pusha
ror
cmp
sub
loop
jle
jno
sub
push
mov
sbb
or
mov
fwait
adc
sbb
xor
push
pop
dec
mov
push
es
mov
repnz
sub
cs
cs
and
ss
imul
jg
(bad)
(bad)
jns
mov
add
mov
call
pop
jecxz
cmp
dec
test
ficom
call
not
out
shr
xchg
(bad)
mov
popf
bound
adc
and
loop
pop
or
xor
cwde
dec
pop
cmps
xlat
shl
daa
int3
test
sahf
and
and
dec
jecxz
outs
dec
mov
or
push
sub
in
adc
int3
and
inc
pop
dec
push
jb
sub
sub
repnz
push
dec
shl
outs
loopne
or
leave
xchg
inc
clc
xor
imul
gs
push
fcomp
jb
pop
jecxz
dec
neg
inc
mov
xchg
sbb
sub
mov
loope
aas
std
fs
cdq
adc
(bad)
add
sub
add
rol
imul
sub
xchg
adc
bound
or
jmp
stos
pop
imul
jnp
and
mov
cmp
push
or
je
lods
adc
and
lahf
lods
jp
ss
lods
jp
cmp
sub
ins
xchg
add
dec
repnz
ret
inc
jmp
mov
outs
jle
leave
pop
popa
mov
sar
int3
sbb
cmps
mov
test
mov
mov
cwde
not
push
jle
inc
scas
cmc
push
pop
push
sub
(bad)
popa
ins
bound
sub
and
sbb
(bad)
adc
lods
mov
sbb
xor
xor
cs
or
psllq
cmp
jge
add
outs
mov
jge
lds
cdq
adc
add
test
cmp
mov
xor
jle
jg
ds
and
sub
ja
add
mov
add
and
popf
jp
push
aam
outs
mov
push
xor
(bad)
imul
jle
sub
jmp
mov
xchg
jnp
dec
pop
lods
retf
movs
maxps
mov
push
jecxz
mov
mov
scas
fstp
retf
push
jno
rol
adc
shl
loope
cmp
pop
pop
sti
pop
pop
mov
or
call
cmp
call
(bad)
mov
enter
sbb
enter
ror
ret
int
xchg
scas
jnp
lahf
jmp
jmp
mov
sub
adc
add
rcl
movs
(bad)
dec
pusha
sbb
lods
mov
push
aaa
sub
icebp
jge
not
cmp
ret
jp
or
fistp
pop
inc
jne
mov
fldcw
ins
outs
loope
xchg
ja
dec
je
(bad)
xchg
mov
pop
xchg
into
lods
inc
pop
push
jnp
mov
pop
mov
jb
lahf
dec
add
add
aam
inc
xor
arpl
fistp
push
inc
sbb
inc
out
inc
dec
jp
xchg
mov
repnz
pop
retf
cmp
cmps
das
repz
dec
rcr
sar
es
pop
pop
call
je
adc
dec
xchg
mov
(bad)
js
(bad)
rcr
lahf
push
call
xlat
jae
inc
pusha
gs
jp
xor
lods
jge
xchg
call
cmc
dec
bound
imul
popa
fst
stos
sub
in
push
mov
jg
ins
icebp
mov
pusha
push
mov
cmp
pop
push
sti
sbb
pop
inc
cmc
xor
ss
jo
(bad)
push
dec
mov
(bad)
xor
push
dec
sbb
leave
(bad)
cmp
or
sub
xchg
dec
add
es
push
dec
dec
ins
lods
pop
out
sub
shr
and
cs
in
dec
imul
call
and
mov
std
enter
das
in
aaa
bound
addr16
pusha
fwait
mov
shl
xor
out
mov
adc
cld
pushf
jb
(bad)
mov
dec
shr
jae
lea
jo
popf
cmp
pop
push
mov
fistp
adc
rol
lahf
jp
repnz
sbb
jmp
in
inc
mov
push
or
fistp
inc
(bad)
mov
add
jmp
in
cmps
lea
add
sub
mov
xchg
pushf
lods
adc
cmps
aam
xor
in
out
push
xor
push
sbb
push
xchg
je
ds
pop
and
mov
mov
in
loopne
retf
mov
jmp
mov
std
dec
pop
xor
mov
je
aas
mov
stos
cld
lock
xchg
xor
and
or
inc
mov
or
push
and
jl
adc
mov
sbb
dec
xor
sbb
xor
mov
ins
cmp
jle
mov
cmp
dec
test
cmc
dec
js
cmps
or
jge
jge
je
inc
pusha
mov
fcomp
xchg
sub
scas
dec
out
and
xchg
xor
sub
js
int3
hlt
push
mov
sti
push
xchg
push
or
sub
call
inc
sub
dec
mov
jmp
adc
jmp
jmp
sub
fsub
jo
jge
shl
shl
arpl
popa
sub
sbb
cmps
push
ror
es
test
sahf
call
lods
cmp
jg
rcl
retf
dec
out
ja
jb
xlat
icebp
jmp
mov
mov
cli
xchg
inc
dec
sar
pop
cmp
inc
fiadd
add
daa
data16
icebp
jo
mov
shr
lods
jbe
mov
iret
dec
cmp
xchg
inc
xor
xchg
sti
mov
mov
xor
add
js
cmp
cmp
jo
imul
jne
out
and
fadd
xor
outs
dec
js
xchg
movs
jp
fs
(bad)
(bad)
and
test
mov
out
into
push
ret
mov
mov
and
adc
or
shr
loop
je
cs
movs
mov
pop
movs
jns
or
ja
mov
jmp
xor
arpl
retf
retf
stos
ret
lods
(bad)
sub
pmulhw
gs
ret
cmp
data16
push
push
add
mov
push
ret
gs
sahf
retf
sar
mov
test
mov
ret
mov
sar
jnp
repz
cmp
pusha
stc
xor
pop
xchg
clc
mov
mov
aad
xchg
clc
scas
mov
std
inc
shr
xchg
into
dec
icebp
or
shl
xor
add
jae
ficomp
mov
cld
fisttp
ja
push
push
cmp
rol
arpl
int
outs
call
rcr
lods
jg
pop
add
dec
js
sbb
mov
mov
push
gs
xor
xor
iret
adc
push
mov
sbb
lea
mov
stos
fisttp
call
aas
push
pop
arpl
mov
push
mov
movs
inc
pop
lahf
push
mov
xor
cmp
adc
xchg
in
retf
inc
add
jecxz
retf
je
dec
push
sbb
pop
xor
dec
push
arpl
(bad)
outs
(bad)
or
sub
and
adc
jbe
ins
inc
sbb
retf
jmp
pop
dec
movs
jecxz
adc
imul
imul
jb
in
call
or
js
out
xchg
mov
or
add
mov
pop
aaa
dec
sub
mov
add
mov
push
shr
cmp
xchg
sub
repnz
call
dec
jbe
(bad)
jns
call
mov
mov
mov
sbb
repz
add
or
(bad)
or
inc
movs
repnz
lock
sub
retf
dec
fwait
shr
(bad)
adc
cs
adc
ror
cmc
push
mov
dec
jmp
not
mov
test
sbb
mov
div
stos
jmp
xchg
or
push
out
or
in
cli
jl
(bad)
mov
shl
lock
fld
mov
test
jo
and
ror
or
pop
push
enter
das
or
sbb
addr16
bound
add
das
pop
and
adc
in
mov
mov
daa
int3
xor
push
ror
ins
mov
jle
es
xchg
xchg
movs
push
mov
mov
mov
je
in
or
retf
push
mov
inc
out
test
sbb
mov
xchg
iret
sti
pop
jne
fwait
xor
jl
mov
sub
sbb
xlat
mov
das
cdq
push
test
xor
mov
sahf
jge
lods
cld
ror
out
(bad)
je
aad
outs
dec
repnz
fild
shl
rcr
pop
pushf
inc
dec
push
push
clc
cli
(bad)
hlt
mov
push
inc
cdq
rcr
push
ds
push
out
adc
or
add
sub
test
mov
fild
mov
jp
xchg
bound
data16
pop
dec
adc
push
and
mov
rcl
ja
(bad)
push
and
pushf
dec
sbb
xor
retf
in
fild
add
mov
(bad)
cmp
cmp
mov
adc
popf
adc
pop
sbb
pop
jmp
in
xor
aaa
cmp
repz
mov
in
cld
inc
cs
lock
mov
jl
pop
fwait
arpl
jae
pop
aaa
inc
movs
add
scas
push
push
fs
xchg
jbe
or
mov
or
(bad)
daa
mov
pop
dec
imul
movs
sbb
jns
sahf
(bad)
fdivr
inc
cmp
jl
enter
cmp
jmp
pusha
pop
addr16
cmp
add
js
xor
xchg
mov
xor
or
ja
add
mov
adc
xchg
iret
cmp
int3
ror
popa
push
repnz
jno
imul
inc
data16
int3
mov
jl
fisttp
cmp
or
(bad)
xchg
leave
pop
cmp
push
push
cmc
fidivr
mov
(bad)
cmp
and
add
xor
xor
ret
fxch
mov
cmp
movs
jns
shl
fcom
stos
mov
daa
shr
jae
ficom
mov
icebp
sahf
cmp
sbb
hlt
ss
pop
sbb
inc
test
in
mov
fcomp
jmp
and
xor
add
xchg
out
movs
dec
and
imul
sub
cmc
dec
sbb
mov
cmp
rcr
cld
fcmove
call
mov
call
jmp
(bad)
adc
sbb
mov
jns
mov
mov
dec
int
dec
mov
and
cmp
xor
xor
push
jnp
sub
jno
stos
loop
mov
push
dec
popa
sub
push
call
ja
enter
sub
pop
rol
outs
jecxz
mov
mov
pop
sbb
adc
sub
enter
mov
mov
mov
pop
sbb
xchg
icebp
scas
hlt
out
int3
mov
movs
arpl
xor
cmp
scas
sub
js
jge
xchg
cwde
aas
(bad)
adc
mov
add
cmps
and
mov
sub
or
test
mov
xchg
mov
data16
jp
jmp
mov
or
xchg
add
xlat
lahf
pushf
mov
mov
icebp
scas
mov
aas
sbb
outs
inc
xchg
mov
aas
mov
sub
imul
loope
adc
(bad)
mov
adc
out
jge
mov
adc
pop
xchg
outs
les
arpl
jle
fcomp
cwde
ja
icebp
pop
add
xchg
out
stos
ret
xor
mov
lock
lock
repz
or
cmps
aam
loopne
sbb
popf
mov
sahf
sub
je
shl
mov
or
in
cmps
inc
daa
pop
push
cmc
cwde
repz
inc
cwde
adc
push
or
jmp
jne
add
pop
jbe
in
aaa
xor
add
xchg
sbb
sbb
mov
push
and
gs
int3
(bad)
adc
dec
clc
cmp
neg
cwde
mov
lea
scas
popa
ja
fstp
mov
lods
push
dec
sub
sbb
aam
cmp
retf
out
sti
aam
aam
jecxz
daa
xchg
or
or
jns
xor
outs
jns
xchg
xor
adc
into
sub
stc
pop
add
dec
bound
pop
pop
mov
jbe
mov
mov
mov
inc
jns
movs
adc
cmps
cmp
push
ja
retf
stc
nop
sbb
pop
fwait
shl
fld
pusha
popf
or
push
jbe
xor
stc
adc
shl
movs
fistp
mov
das
fdiv
mov
or
pop
push
aad
jo
sti
clc
cmp
movs
mov
ins
xchg
jnp
fs
fucomi
jecxz
stos
imul
jns
mov
ret
mov
inc
jb
leave
je
sahf
lods
stc
xor
stc
inc
rcr
jg
push
into
(bad)
inc
fcom
cmp
(bad)
jmp
push
inc
ss
test
cmps
pop
dec
jl
je
in
dec
inc
xor
idiv
mov
push
push
sub
mov
cs
push
sbb
jmp
xchg
fistp
gs
cmp
adc
out
dec
push
dec
sbb
lahf
xchg
sbb
pop
jns
mov
or
jb
icebp
push
xchg
test
arpl
xchg
jle
aam
inc
jo
or
push
dec
xchg
data16
lahf
sub
fistp
push
aaa
retf
test
(bad)
(bad)
fisttp
pop
jns
jns
inc
shl
lahf
xchg
test
sub
movs
ret
shl
adc
and
mov
es
mov
clc
jno
jp
adc
jns
daa
push
sub
bound
mul
inc
inc
jl
shr
push
scas
(bad)
es
(bad)
xor
jnp
jno
jle
mov
out
rol
fsubr
jne
test
dec
pop
bound
push
loop
adc
lods
shr
pop
cld
inc
dec
xchg
sbb
icebp
repnz
neg
add
hlt
imul
jmp
call
xlat
nop
xor
adc
jnp
aas
add
stos
or
iret
sbb
jecxz
fimul
imul
add
les
mov
aaa
mov
inc
cs
dec
pop
shl
mov
sub
ins
adc
ficom
shl
jns
add
push
pop
fwait
adc
mov
jbe
mov
loope
pop
test
adc
xchg
outs
aas
xor
in
sub
push
sahf
adc
scas
jmp
pop
dec
pmaxub
jno
aaa
in
cdq
jbe
ror
rcr
call
out
mov
sar
pop
and
rcr
lock
arpl
dec
dec
pop
push
call
rol
cmp
lods
mov
adc
fild
inc
cdq
push
xchg
pusha
xor
jle
cmp
jns
jns
stc
add
dec
mov
xor
fidiv
adc
sbb
loope
jo
push
(bad)
(bad)
bound
mov
repz
adc
pop
pop
push
nop
test
fsub
adc
inc
mov
sub
cmp
ret
bound
in
fsubr
cwde
cmp
pop
es
jo
movs
xchg
mov
cs
xor
hlt
push
or
mov
cwde
fcomp
stos
cs
pop
pop
inc
ror
leave
int
outs
xchg
jno
fdiv
push
inc
inc
cmc
jne
dec
xchg
jae
(bad)
jns
es
xor
xchg
dec
add
or
cmp
div
shl
pushf
or
inc
push
test
scas
mov
adc
(bad)
in
in
mov
pop
push
push
fisubr
adc
push
sub
data16
stos
xlat
(bad)
jbe
(bad)
add
xchg
fcom
js
int
dec
jl
aam
sbb
push
add
xchg
rcr
test
pop
xor
rol
hlt
sbb
pop
es
cdq
clc
out
adc
pop
out
mov
xor
(bad)
cmp
ret
int
addr16
jbe
enter
add
aam
cmps
(bad)
and
shl
push
mov
pop
dec
fdivr
retf
jae
imul
sub
dec
rol
xchg
jae
pop
inc
mov
popf
or
xchg
xchg
dec
push
cmp
mov
mov
(bad)
cld
jg
cmps
cmp
sbb
jge
retf
aaa
add
popa
mov
cmp
mov
mov
xchg
jg
cmp
into
cdq
les
ret
jbe
(bad)
idiv
rcr
and
stos
popf
sti
lods
inc
loop
jno
into
pop
enter
mov
retf
sub
pop
or
int3
xchg
xor
pop
mov
daa
add
inc
sbb
pusha
arpl
mov
or
push
pop
std
cmc
nop
inc
inc
inc
xor
sti
pop
shl
xchg
jb
stos
pop
and
(bad)
fcom
add
xor
test
loope
push
push
cmp
scas
pop
loope
call
xchg
ja
sbb
jo
loopne
aas
mov
scas
add
call
push
sbb
cmovbe
sub
xor
push
in
cmp
xor
jae
sahf
xor
out
dec
sbb
cld
add
sub
ficom
mov
sbb
mov
pop
and
pop
add
xchg
int
jg
lahf
pop
jle
aad
xchg
add
aas
test
push
inc
ret
lahf
jg
sti
ret
jecxz
jne
not
xchg
push
aam
jno
pop
cmps
retf
push
imul
add
pop
mov
push
addr16
mov
fsubr
and
mov
pop
sti
xchg
mov
dec
jmp
stc
addr16
lds
xlat
dec
ins
les
pop
or
push
adc
adc
cs
and
fwait
mov
scas
fcomp
psubd
xchg
ret
outs
mov
hlt
mov
sbb
mov
les
js
xchg
pop
sbb
lea
add
jge
movs
push
and
push
jmp
push
fs
mov
aas
imul
mov
add
ror
test
xchg
mov
pop
jb
sbb
mov
lahf
pop
sbb
dec
inc
pop
and
call
stos
adc
sar
push
sbb
lods
or
xlat
mov
adc
adc
jne
sub
test
jo
inc
mov
mov
mov
clc
push
std
jns
jg
inc
dec
xor
inc
aad
lock
xor
mov
sub
jb
stc
scas
cmps
iret
or
fucomip
push
lods
and
inc
xor
xor
mov
xor
jns
fdivr
cld
ret
xchg
lods
mov
lahf
mov
(bad)
cld
push
lock
scas
adc
clc
jge
mov
out
pop
movs
jae
test
cmps
std
pop
repnz
pop
fwait
inc
mov
dec
gs
push
cmp
inc
pop
push
lea
mov
inc
pop
xor
pop
mov
push
arpl
das
cmp
adc
enter
leave
cdq
stc
test
xchg
push
movs
mov
jne
dec
adc
cdq
dec
cmps
mov
jne
mov
mov
inc
(bad)
pop
sub
stos
add
mov
cmp
add
add
adc
jns
xor
fnstsw
xlat
add
(bad)
pop
popf
add
cli
adc
xchg
(bad)
and
xchg
pop
mov
mov
cmc
retf
pop
test
mov
int
jl
adc
rcl
gs
cmps
lea
cmp
loope
aaa
push
popa
loope
add
cmp
ud1
or
inc
inc
xchg
xchg
in
out
icebp
ja
add
pop
fwait
add
cmp
dec
js
pop
inc
call
(bad)
aam
std
enter
jae
dec
loop
sub
jo
jge
add
mov
movs
push
dec
jb
bound
add
addr16
xor
bound
push
or
aaa
mov
push
arpl
xor
div
and
cmp
sub
jle
movs
pslld
jnp
xor
jmp
out
jmp
or
mov
rcr
xchg
mov
out
or
pop
mov
cmps
or
mov
xlat
shr
sub
dec
push
lahf
sub
call
ja
push
aad
bts
test
xchg
ret
and
enter
addr16
sub
push
mov
in
stos
or
jmp
imul
adc
les
(bad)
cmp
cmp
fimul
push
sahf
rcl
xchg
inc
clc
jae
jmp
jl
mov
push
mov
mov
push
std
cli
add
fwait
add
pop
mov
dec
add
adc
ins
ret
mov
sbb
xchg
inc
mov
push
retf
pop
enter
mov
mov
fldl2t
loope
stc
bound
and
leave
xor
inc
xor
lahf
mov
pop
sti
fwait
pushf
fld
sbb
ror
aaa
(bad)
add
(bad)
sbb
pop
mov
scas
and
call
fdiv
mov
hlt
mov
mov
pop
mov
jle
mov
dec
js
sbb
jno
lahf
jno
call
icebp
out
cmp
int
inc
nop
add
add
call
jp
ins
cmps
cmp
addr16
loop
lahf
mov
sti
cmp
add
jmp
in
dec
in
add
scas
mov
pop
and
movs
out
cwde
arpl
add
and
jno
aam
pusha
xlat
jo
aam
and
arpl
leave
pop
add
add
imul
fs
push
mov
cmp
mov
sub
and
xor
cmps
xor
push
xchg
lods
sub
push
sub
fisubr
iret
das
adc
stc
in
mov
repnz
dec
or
or
in
sbb
add
neg
jle
push
push
test
mov
hlt
xchg
imul
jmp
cmp
or
fbld
dec
sbb
jl
push
mov
xor
out
mov
out
int3
mov
push
mov
or
jg
das
mov
mov
dec
and
push
fnsave
push
jns
std
scas
jl
nop
js
les
or
push
dec
lea
push
mov
fsubr
jl
nop
jbe
sub
add
xchg
das
fstp
leave
sar
in
mov
mov
adc
pop
push
test
and
scas
pop
retf
shl
fcomp
imul
mov
(bad)
sub
aaa
xchg
jp
loop
adc
mov
mov
jmp
or
adc
sahf
inc
in
(bad)
pop
jge
push
rcr
imul
(bad)
bound
shl
cmps
cmp
push
mov
int3
inc
out
push
or
jne
xchg
xchg
cli
or
and
call
es
loope
shl
push
sbb
xor
mov
mov
and
(bad)
fdiv
push
adc
sub
mov
int3
mov
xchg
mov
dec
ja
jmp
fbstp
xchg
xchg
ret
xor
push
jge
inc
mov
movs
jmp
lods
sub
repnz
or
xlat
fstp
xlat
mov
retf
xchg
test
mov
mov
aad
xor
lock
(bad)
fstp
ins
adc
add
cli
push
push
inc
and
fwait
xor
push
push
pop
adc
mov
sbb
jmp
pop
test
jae
cmps
rol
in
xchg
fistp
jmp
rep
loopne
in
push
cld
or
sub
iret
scas
pop
add
dec
(bad)
rol
iret
jmp
push
cli
mov
int
repnz
in
mov
mov
sti
int
clc
jge
mov
inc
inc
mov
das
push
sub
add
push
inc
mov
pop
adc
pusha
jmp
xor
xchg
and
test
retf
adc
cmp
out
xor
call
or
out
sub
pop
mov
sbb
dec
mov
mov
and
inc
sysret
fld
shl
int
mov
sub
mov
push
xchg
jmp
sbb
cmp
sbb
fisubr
mov
mov
fcomp
popa
push
test
sbb
lods
dec
xor
imul
hlt
stc
inc
add
aas
call
ret
cmp
pop
dec
push
iret
inc
push
ins
pop
sbb
aad
inc
mov
mov
or
test
lods
mov
mov
pop
adc
je
rcr
arpl
and
xchg
mov
xor
sbb
jo
dec
mov
push
stc
jmp
adc
mov
mov
xor
push
out
push
fwait
ins
(bad)
(bad)
cmp
mov
cwde
mov
jmp
mov
jge
in
xchg
ret
je
pop
mov
mov
mov
mov
xor
arpl
inc
in
mov
and
out
out
ins
loop
idiv
push
popf
cmps
lods
in
mov
rcl
adc
pop
pop
mov
jl
pop
imul
xchg
and
and
fsub
int
cmp
(bad)
ja
jmp
pop
int3
and
jge
jecxz
add
clc
jbe
or
adc
in
dec
cdq
movs
push
xor
inc
pop
dec
or
xchg
xchg
jne
sbb
test
xor
out
outs
push
movs
movs
mov
popf
repz
mov
sbb
into
add
sub
scas
push
fdiv
imul
data16
sbb
pop
or
jne
mov
movs
jp
mov
adc
inc
adc
or
jle
mov
cmovb
and
pop
mov
adc
cmp
fstp
pop
test
xlat
sub
mov
btr
in
dec
jbe
cld
and
stc
dec
push
ret
dec
and
inc
retf
into
shrd
xor
add
sbb
inc
xlat
cmps
stc
inc
cmp
mov
or
aas
stc
stos
jle
call
pop
jno
mov
inc
(bad)
fsubr
movs
fcomp
ret
xor
mov
cmp
xor
jns
adc
sbb
fstp
sub
ret
jge
mov
sub
add
(bad)
adc
test
mov
sbb
stc
mov
pop
pop
sbb
pop
pop
xchg
ret
in
xchg
iret
call
mov
xchg
xchg
xchg
mov
cmc
imul
rol
mov
lea
jno
cmc
push
jns
mov
ja
pop
aam
out
inc
sub
xor
rcr
xor
mov
dec
outs
ins
and
lods
jmp
loope
repnz
sub
fwait
and
cmp
jns
not
jbe
mov
xchg
pop
sbb
cmp
sub
sub
push
xlat
aad
mov
es
(bad)
push
or
mov
loop
and
xor
test
xlat
out
xchg
add
mov
movs
mov
add
inc
test
clc
pop
adc
mov
mov
out
mov
push
push
xchg
(bad)
hlt
inc
xchg
add
cwde
mov
ins
sbb
mov
inc
mov
into
push
mov
and
mov
scas
sub
(bad)
cmp
dec
and
dec
fmul
lods
pop
popf
das
test
out
out
pop
xchg
cmc
mov
icebp
push
push
cmc
das
hlt
das
imul
pop
inc
jae
pop
(bad)
xchg
jg
je
or
retf
pop
jmp
xchg
nop
cwde
imul
aas
fdivr
fwait
push
popf
push
cld
int3
dec
mov
int
ja
xor
rol
test
mov
push
lock
jmp
jmp
cmp
xor
sub
(bad)
adc
sbb
dec
and
inc
cli
xchg
inc
outs
ds
aas
xor
adc
dec
sbb
in
jmp
rol
aad
div
push
xlat
pop
sub
sub
cdq
mov
sub
int
push
mov
fisub
cdq
sbb
fcom
and
inc
shl
rcl
dec
addr16
push
int
ds
xor
aad
ja
hlt
pop
aam
mov
pop
leave
sub
out
inc
outs
dec
cmc
add
shl
shl
xchg
cmp
inc
fsub
cmp
packuswb
mov
and
rcl
scas
xchg
pop
xchg
adc
pop
test
sub
jg
mov
cmc
out
cmp
pop
add
add
leave
fs
ins
clc
mov
pushf
jmp
inc
fisub
jp
xchg
les
aad
adc
jmp
mov
mov
stos
inc
lock
and
pop
mov
loop
or
pop
lock
jb
xchg
outs
mov
pop
or
cdq
lds
push
iret
sahf
sub
cmp
push
xor
push
mov
push
mov
pusha
or
and
xchg
sbb
add
cmp
mov
push
jl
stos
cli
jmp
sub
mov
bound
jmp
inc
mov
movs
push
push
cmp
movs
mov
jmp
jmp
xchg
imul
jae
jmp
daa
and
or
mov
sub
or
sbb
sbb
xchg
jno
inc
xchg
or
shl
repnz
mov
inc
ret
stc
out
arpl
dec
(bad)
dec
mov
jmp
mov
jge
dec
jle
ds
pop
jmp
into
movntps
adc
les
inc
inc
jmp
jmp
stos
ds
daa
lods
scas
int3
fisub
sub
push
ror
add
xor
dec
add
mov
mov
sub
pop
xor
add
dec
mov
shl
pop
push
mov
mov
push
dec
test
cmp
jg
adc
cld
test
iret
inc
cmp
jmp
mov
test
cmp
in
dec
adc
test
mov
cmp
mov
repz
dec
cmp
adc
sbb
cmp
aaa
mov
adc
dec
pop
xor
dec
inc
push
dec
int3
sar
or
sti
and
cmc
je
cdq
add
jg
icebp
addr16
push
ins
scas
sbb
pusha
push
nop
jns
and
push
cmp
idiv
fidivr
jecxz
and
and
mov
sar
sub
sub
pop
js
fdiv
test
mov
push
movs
inc
pop
in
mov
stc
int
jg
inc
mov
jmp
loopne
ins
(bad)
cwde
cdq
mov
idiv
popa
(bad)
xchg
in
pop
scas
(bad)
adc
call
aas
cmp
dec
mov
leave
cs
or
mov
daa
add
or
cmp
dec
(bad)
xchg
pop
pop
or
push
add
and
retf
std
push
xchg
xchg
dec
outs
cmp
xor
cdq
and
inc
dec
xor
or
push
outs
mov
cmp
inc
idiv
adc
cmp
cs
call
sub
imul
push
movs
lahf
xchg
xor
gs
dec
xchg
cmps
sub
stc
fisub
test
jnp
cmps
pop
sti
stc
sbb
push
shl
sbb
js
jae
jno
repnz
movs
mov
xor
and
inc
xlat
fs
mov
jo
ficom
fcomp
dec
sub
(bad)
jmp
cmp
push
retf
dec
(bad)
dec
test
and
pop
outs
push
pop
lods
xchg
test
aas
ja
xor
out
fsubr
jp
push
stos
je
adc
mov
pop
test
loop
lods
sbb
mov
(bad)
push
ins
mov
loope
jnp
inc
pop
out
test
lods
add
mov
pusha
(bad)
inc
adc
pusha
aad
rcr
cmps
leave
leave
mov
jecxz
call
out
rcr
cmp
add
cmc
ins
adc
ins
stos
pop
aam
loope
ss
sub
outs
retf
pop
jg
test
mov
lods
pop
mov
mov
mov
repz
dec
push
retf
inc
mov
scas
stc
pop
mov
jnp
xor
lds
jmp
inc
xor
mov
cmp
mov
outs
inc
loope
mov
popf
and
mov
jmp
xchg
mov
mov
scas
(bad)
ins
xchg
in
push
pusha
sub
je
pop
xlat
cmp
out
and
xchg
mov
in
in
or
xchg
mov
jo
adc
movs
inc
fs
xor
xchg
push
test
cmp
fild
test
mov
into
popf
mov
lds
shl
rcl
data16
xor
pop
shr
push
ja
scas
mov
aad
int
push
in
into
pop
not
das
inc
out
sub
xchg
xchg
xor
sti
mov
or
arpl
movs
mov
push
and
xchg
add
jb
lods
fiadd
test
sbb
mov
test
outs
or
dec
sbb
addr16
test
shl
stc
mov
arpl
xchg
test
push
jbe
dec
sub
add
mov
(bad)
out
mov
mov
and
fisubr
jmp
pop
(bad)
or
shr
retf
push
nop
jae
in
cdq
and
push
loope
int3
mov
sub
mov
mov
lods
mov
sub
xor
mov
sahf
cmp
jmp
mov
jge
cli
and
xlat
jne
imul
dec
push
stos
repz
aam
add
adc
pop
fiadd
mov
mov
iret
jae
loope
stc
sbb
jmp
dec
and
leave
stos
retf
stc
in
fldcw
jnp
dec
ror
addr16
dec
movs
cmps
jmp
test
xchg
dec
sbb
cmp
(bad)
sbb
and
scas
aas
xor
sub
pop
ds
test
lea
cmp
ror
sub
or
push
jnp
lea
xchg
pop
sbb
pop
jmp
dec
mov
mov
arpl
jne
jns
shl
test
sbb
fcmovnu
xchg
test
jae
push
icebp
cwde
ja
cmc
push
es
loopne
enter
push
cli
bswap
jo
nop
cmp
xchg
sbb
push
xchg
mov
and
or
push
mov
mov
mov
inc
inc
push
iret
push
fnstsw
push
shl
sbb
sub
or
sub
jb
add
or
loop
aas
push
imul
adc
xor
mov
sar
fmul
inc
adc
jbe
mov
inc
sub
shl
or
jb
sbb
rcl
cmp
rol
(bad)
pop
jb
push
adc
call
icebp
mov
aam
pop
xchg
xor
mov
inc
inc
jmp
sub
cmps
fidiv
inc
adc
aas
dec
push
mov
sub
shl
mov
dec
cmp
test
mov
jl
mov
mov
inc
mov
pop
push
aas
hlt
std
ficom
ss
pop
jg
inc
(bad)
mov
fs
fsub
jecxz
jb
jno
push
test
out
or
xchg
ja
data16
dec
cmp
fnsave
jns
and
or
push
arpl
(bad)
fdiv
or
mov
ret
mov
pop
pop
or
jle
lock
test
pop
loope
mov
cmp
fidivr
xor
or
mov
js
stos
movs
inc
(bad)
out
adc
enter
cmp
and
cmp
shl
aam
inc
adc
into
cmp
mov
mov
retf
sbb
sbb
add
xor
aad
mov
aad
jno
inc
clc
cmp
mov
push
jne
jno
push
xchg
in
das
dec
ret
and
and
adc
xor
add
pop
das
pop
in
mov
sahf
cli
or
cwde
movs
push
call
xor
ss
pop
movs
dec
push
pop
or
dec
push
shl
sar
dec
ret
inc
gs
mov
aaa
(bad)
inc
jb
outs
loope
inc
shl
push
and
push
imul
mov
icebp
add
dec
inc
push
add
repnz
inc
inc
jle
leave
pop
retf
sbb
fwait
je
pop
xchg
jo
in
inc
pushf
jb
add
push
sub
loop
mov
add
das
sahf
addr16
pushf
push
scas
sub
sub
xchg
cs
xrelease
pop
sbb
out
clc
xor
pusha
adc
cmp
adc
sbb
rcr
jno
push
lods
fcomp
mov
and
in
cmc
sbb
int3
fwait
push
push
(bad)
sti
cmp
pop
sbb
test
xor
push
sbb
jl
je
pop
adc
xchg
inc
gs
xor
loopne
push
ret
and
xor
mov
push
jp
iret
mov
loop
cmps
fisubr
inc
movs
loope
shl
cmc
xor
or
fmulp
jecxz
mov
sub
movs
retf
inc
lahf
das
hlt
sti
test
xchg
nop
inc
jb
gs
or
movs
fcom
and
inc
inc
(bad)
rcl
movs
dec
lods
dec
jo
inc
and
cdq
fisttp
jl
adc
fcomi
sahf
push
xchg
cli
add
test
mov
out
pop
mov
inc
sti
js
mov
add
adc
jnp
xchg
out
xchg
xchg
pop
fist
xchg
inc
jmp
adc
mov
and
mov
into
lock
aad
or
jge
movhps
dec
inc
or
fldenv
cmp
pushf
in
xchg
ret
(bad)
movs
push
test
inc
mov
in
pop
or
push
push
xor
(bad)
jno
out
out
cmc
fstenv
inc
push
fimul
loop
(bad)
nop
inc
push
inc
daa
fnstenv
ret
jecxz
lock
div
xor
push
into
pusha
mov
in
ss
shr
int3
mov
repnz
xchg
or
idiv
fistp
rol
pop
addr16
mov
sbb
out
dec
repz
push
xchg
mov
outs
cli
out
(bad)
add
pop
jae
test
scas
cmp
xchg
jmp
cmp
pop
test
pop
test
cmp
push
dec
add
add
pop
fsubr
out
mov
and
inc
mov
dec
mov
mov
mov
icebp
mov
sub
(bad)
xchg
mov
popa
nop
and
mov
outs
aam
fimul
icebp
sbb
mov
stos
adc
ror
dec
movs
in
movs
pop
mov
mov
xorps
pop
mov
sahf
xor
push
sbb
aas
out
sbb
sbb
dec
jmp
and
(bad)
jle
inc
pop
adc
cmp
mov
dec
rcr
and
pushf
inc
sub
add
dec
enter
push
dec
xchg
(bad)
sub
push
(bad)
test
outs
fsubr
enter
shr
mov
movs
push
out
mov
pop
mov
pop
out
data16
push
adc
pop
mov
add
inc
sub
push
loope
jl
sub
jp
imul
push
adc
inc
addr16
loopne
cmc
push
or
fwait
jle
(bad)
(bad)
aad
xchg
push
inc
and
int3
sbb
cmc
in
cmps
xor
xchg
rcl
jo
(bad)
cld
dec
icebp
push
fdivrp
mov
and
mov
scas
imul
arpl
mov
mov
dec
mov
cmovae
jge
ret
mov
fnsave
xor
and
jne
movs
xor
aaa
mov
pushf
fild
loope
mov
jnp
fs
push
mov
jnp
dec
out
jl
aas
lea
sub
dec
push
outs
call
stc
movs
dec
cld
pop
jg
or
out
sub
int
pop
sub
test
(bad)
jmp
lods
cdq
test
xchg
and
or
(bad)
out
cmp
push
sub
adc
add
iret
jnp
xchg
mov
and
xor
cli
inc
mov
out
mov
shl
leave
mov
bound
push
and
sbb
movs
and
push
sub
push
outs
into
sbb
leave
push
rcr
lods
adc
jge
add
cmp
cmp
or
pop
fwait
scas
cmp
and
mov
jmp
shr
ds
push
and
adc
xlat
push
xlat
jg
stos
pop
fdivr
pop
repz
aad
push
sub
push
xor
cmps
add
nop
int3
in
out
jge
in
lock
(bad)
loop
add
dec
xchg
aam
scas
jmp
stos
fimul
xchg
sbb
add
mov
mov
clc
pop
rol
(bad)
jns
pop
out
pop
repnz
push
mov
popa
mov
pop
lods
xor
mov
adc
inc
dec
and
or
cmp
jb
jmp
popa
inc
push
cld
dec
xchg
add
sti
ss
addr16
outs
mov
or
pop
(bad)
test
jg
inc
popa
arpl
sub
test
sbb
mov
into
in
sbb
jg
sbb
add
pop
push
add
lock
pop
pop
mov
inc
cmp
mov
je
jns
or
scas
loopne
pop
pop
push
adc
nop
loopne
daa
pop
mov
fdivrp
loopne
mov
(bad)
jge
adc
mov
fimul
sub
inc
xor
fild
and
jle
hlt
popf
mov
in
sbb
ins
jne
test
cmc
lea
lods
inc
ja
mov
jb
mov
mov
and
push
dec
jns
xor
mov
mov
mov
xchg
scas
repz
cmp
xchg
in
or
sbb
xchg
(bad)
add
les
dec
and
clc
xchg
or
shl
ins
xchg
enter
cmp
mov
aaa
out
sbb
cmp
push
icebp
int3
mov
out
fmul
sub
cmc
and
sti
cmps
aaa
push
test
mov
in
mov
mov
imul
scas
les
fs
clc
push
ret
sar
test
stos
xor
dec
cmps
sbb
retf
pop
mov
mov
cmp
cli
and
xchg
xor
cmp
fcmovbe
mov
cmp
xchg
jl
sbb
adc
or
adc
lahf
(bad)
xchg
pop
mov
ret
cmps
mov
jg
sub
rcl
inc
movs
aas
dec
inc
xchg
mov
je
out
pop
cmp
sbb
inc
push
test
add
jmp
fcom
cwde
sub
dec
adc
fisub
sub
outs
sub
mov
push
fsubp
cmp
mov
leave
jbe
pusha
jle
test
test
pop
add
iret
retf
scas
sbb
fild
jns
data16
fwait
fwait
ja
pop
inc
sbb
fisubr
mov
retf
pop
mov
xchg
out
pop
aas
loope
cmp
hlt
jb
hlt
inc
cmc
cmp
aad
rcl
into
aad
push
jns
mov
xchg
mov
mov
(bad)
ins
dec
cmp
jb
call
imul
sbb
pop
push
xor
push
icebp
jmp
aam
fidiv
ret
pop
pop
cld
push
in
sbb
es
pop
add
xor
ds
sbb
orps
add
loope
fs
test
js
ds
xor
mov
xlat
(bad)
repnz
dec
lock
das
jo
sub
clc
push
and
les
into
xor
data16
mov
es
fwait
cli
cmp
xchg
mov
(bad)
xor
ja
fcom
mov
cmp
xlat
sub
mov
mov
pop
fadd
sub
jle
pop
ins
addr16
loopne
jge
mov
imul
aad
ja
xor
adc
mov
cmps
outs
cld
xor
mov
pop
jle
xor
inc
(bad)
aad
or
cli
aad
(bad)
xchg
jae
xor
test
lea
rol
push
ss
jno
mov
aam
inc
xchg
retf
bound
jae
and
shr
and
rcr
cli
cmc
xlat
pop
jne
test
les
ds
mov
xor
test
jmp
mov
popa
stos
cmc
mov
adc
inc
sub
and
(bad)
sub
sbb
aas
in
call
pusha
push
inc
push
test
jecxz
pop
loope
js
sub
scas
add
push
add
inc
ins
jbe
push
jmp
int3
and
jb
fnstcw
les
and
lds
pop
dec
xchg
daa
xor
int
dec
into
in
cmp
push
les
jmp
inc
cs
inc
pop
fcomp
mov
jno
movs
fiadd
cdq
sub
inc
in
sbb
sub
and
fs
test
fwait
xchg
out
mov
aad
inc
in
or
enter
movs
xor
or
in
pop
jecxz
addr16
push
xchg
jmp
mov
jg
shl
inc
xchg
push
jbe
leave
inc
fwait
stos
in
mov
inc
xchg
ins
push
jp
loope
xlat
dec
mov
or
cmps
mov
and
inc
xchg
sbb
(bad)
imul
popf
inc
aaa
mov
test
and
les
mov
mov
xchg
inc
aad
cmp
ds
mov
and
dec
sahf
lea
stos
mov
mov
aas
fdivr
stos
xlat
and
cdq
icebp
std
or
push
(bad)
fdiv
outs
mov
loope
mov
movs
scas
and
mov
movd
scas
inc
(bad)
fwait
push
sbb
das
lea
jbe
push
ud1
mov
and
jae
bound
sub
fisttp
and
dec
clc
ins
add
adc
pop
cmp
test
lock
xchg
pop
xacquire
xlat
push
repz
lock
xchg
addr16
sbb
fs
jmp
push
cmp
hlt
test
jns
call
xchg
clc
movs
cmp
loopne
add
jno
mov
and
loope
xchg
push
sbb
out
xchg
fwait
cmp
mov
scas
rol
imul
aas
mov
xchg
pushf
outs
fsubr
xor
add
xor
pop
shl
(bad)
pop
pop
mov
lock
mov
jns
push
add
outs
xor
sahf
push
jl
pop
mov
adc
adc
fwait
dec
inc
fdivr
fcmovb
jnp
sbb
jecxz
pop
ins
mov
ja
xchg
adc
xor
movs
sub
jno
imul
out
add
loopne
je
ret
sbb
add
lea
call
xor
aad
push
mov
(bad)
mov
lods
add
fisttp
idiv
sub
pop
pop
pop
out
pushf
sub
enter
cmc
pop
std
mov
sti
fs
inc
pusha
jle
sbb
or
int
in
inc
fwait
(bad)
sar
dec
mov
jne
pop
jl
mov
mov
fmul
aad
shl
in
stos
loope
jo
fwait
jecxz
dec
sbb
mov
cdq
dec
sahf
lahf
jmp
push
sbb
dec
imul
jmp
jo
pop
jl
mov
pop
es
test
pop
in
or
(bad)
ins
add
fdivr
sbb
sbb
fdivp
pop
and
sub
sahf
pop
scas
xor
call
outs
ds
mov
shl
lds
push
ins
in
repnz
lea
add
test
add
(bad)
je
xor
xchg
div
jle
sub
pop
out
ja
inc
movs
mov
dec
imul
lods
fwait
lods
jne
aad
cmp
mov
sub
mov
mov
test
dec
aam
jp
(bad)
sbb
sub
pop
xor
mov
or
jns
sbb
push
pop
mov
sub
pop
mov
imul
hlt
ret
pop
xor
inc
call
cdq
pop
jp
cli
adc
in
cmp
mov
sub
cmp
loop
or
mov
cmp
or
mov
mov
fdivr
add
cmp
cmc
xor
retf
lock
mov
pop
push
pop
sub
push
iret
scas
ss
xchg
mov
dec
mov
mov
or
xor
pop
mov
mov
push
adc
aas
jle
mov
xor
ja
test
cld
std
fucompp
aas
jo
gs
stos
and
jae
inc
push
xchg
in
push
ds
ds
in
push
test
adc
push
mov
loop
pop
stos
inc
jo
mul
push
or
mov
(bad)
jns
dec
sub
pop
mov
pop
aad
push
push
xchg
mov
mov
inc
(bad)
jo
repz
mov
mov
ins
(bad)
sbb
push
mov
test
jae
mov
sub
(bad)
and
lods
sahf
bnd
daa
scas
cmp
pop
inc
adc
cdq
aaa
pop
mov
adc
jne
xchg
mov
pop
cdq
mov
jne
and
loope
cmp
mov
sub
dec
pop
rcr
pop
mov
test
outs
mov
jbe
test
mul
aaa
sub
ins
mov
std
shrd
fdiv
mov
(bad)
fs
mov
(bad)
xlat
xlat
jp
call
xor
shl
jns
jecxz
mov
or
aas
out
lock
es
je
sti
add
scas
hlt
mov
xchg
mov
pop
in
push
jmp
scas
cwde
shl
pop
bound
outs
mov
cmps
and
push
or
daa
sti
std
loop
and
movs
or
addr16
mov
in
scas
add
cmps
in
dec
push
lea
jns
stos
sub
dec
(bad)
movs
push
mov
push
stos
bound
cs
(bad)
ins
mov
(bad)
mov
xor
or
mov
cld
jmp
movs
xchg
cld
fwait
sub
sbb
loopne
std
pop
jp
neg
push
pop
(bad)
cdq
jb
adc
test
xor
inc
cli
cmps
or
xchg
and
inc
mov
add
sbb
pop
mov
frstor
movs
add
cmp
stc
inc
and
inc
test
adc
popa
out
and
lods
jle
call
adc
push
js
cmp
pop
push
(bad)
mov
jns
sub
icebp
mov
xor
fcomp
push
add
pop
push
or
ins
mov
inc
clc
mov
pop
mov
mov
rol
or
jecxz
leave
jmp
mov
fsubp
or
pop
pop
mov
xchg
enter
dec
mul
jb
sub
gs
or
stc
jg
(bad)
xor
pop
xchg
pop
mov
icebp
je
xchg
fistp
jnp
mov
and
push
xor
dec
jo
sbb
into
popa
popa
xchg
retf
push
je
push
sbb
cdq
adc
and
leave
pop
call
jmp
mov
ret
or
jmp
push
lahf
push
push
add
pop
or
mov
(bad)
push
fincstp
jmp
xor
fcmovne
cdq
loop
xchg
jl
fsubrp
sub
sbb
jmp
pop
jnp
test
mov
sub
out
or
aad
(bad)
pop
(bad)
pushf
pusha
pop
and
xor
call
imul
adc
cs
addr16
data16
add
jl
pushf
aad
xchg
ror
popa
nop
loope
adc
adc
fadd
cmp
jg
inc
push
jmp
iret
mov
(bad)
xchg
push
xor
in
popf
pushf
xor
jo
and
fdiv
inc
mov
xlat
ret
sti
inc
push
jne
rcr
cs
xor
push
test
pop
jp
gs
xor
sbb
ss
imul
fidivr
or
rol
inc
inc
daa
ret
shl
or
add
repnz
pop
aam
mov
dec
push
push
or
adc
aas
out
mov
retf
lds
iret
in
pop
mov
cmps
sbb
xor
jae
fwait
and
out
hlt
push
cli
popf
test
pop
sbb
dec
test
outs
js
arpl
repnz
xor
mov
or
rol
mov
scas
mov
inc
sbb
push
jmp
mov
mov
shl
and
stos
xchg
dec
ins
push
cmps
repz
aad
xchg
and
daa
push
dec
test
pop
scas
cmp
sub
jmp
and
jns
iret
dec
retf
das
(bad)
mov
cmps
cwde
rol
mov
stc
inc
mov
mov
xchg
cmp
cmp
pusha
jmp
aam
je
mov
mov
mov
and
movs
icebp
push
ja
(bad)
push
and
dec
arpl
ficomp
mov
sbb
and
fistp
fidiv
cld
in
or
dec
add
or
dec
jne
push
in
mov
pop
mov
and
inc
ret
div
fs
mov
mov
and
loopne
pushf
sub
cs
xchg
push
bound
icebp
pop
movs
add
iret
fdivr
enter
add
add
xchg
(bad)
outs
xor
sahf
arpl
adc
lds
mov
mov
retf
and
mov
(bad)
shl
lods
mov
inc
mov
js
rcr
fsubr
lods
jmp
int3
call
call
push
nop
cs
leave
icebp
cmps
mov
dec
sbb
sbb
ror
sbb
and
jmp
push
stos
push
dec
fnstcw
popa
ins
pop
les
jp
adc
jne
mov
into
outs
vpsubd
pop
dec
sub
mov
movs
push
xor
mov
cld
push
jge
sub
jg
sbb
stos
rcl
add
mov
dec
push
clc
xchg
sub
das
nop
aam
mov
mov
or
and
je
fisubr
test
add
pop
cwde
mov
sbb
cmp
mov
pop
outs
push
vpshlb
mov
call
cmp
xor
stc
repz
mov
jl
sbb
push
mov
xchg
out
(bad)
or
add
das
dec
mov
fld
scas
sub
mov
cmp
bound
pop
pop
mov
enter
(bad)
loopne
mov
inc
(bad)
bound
adc
inc
hlt
mov
adc
add
jmp
inc
and
add
add
and
movs
imul
or
leave
mov
out
pop
mov
jae
mov
fsub
inc
dec
inc
mov
jecxz
xor
inc
aas
jns
jmp
add
outs
push
mov
inc
sbb
jecxz
mov
mov
mov
stc
mov
fdiv
gs
arpl
jge
cmp
(bad)
push
aad
fmul
adc
(bad)
(bad)
mov
inc
fsin
pop
aas
les
cwde
jno
cmp
xchg
push
push
jb
(bad)
xor
adc
jno
popa
(bad)
enter
mov
dec
adc
jmp
sub
movs
inc
mov
dec
mov
xor
pop
dec
in
xchg
sub
sub
rol
cmp
add
push
sar
mov
xchg
jge
pop
mov
push
adc
aas
cs
cmp
mov
loop
and
jno
and
jo
inc
es
pop
jg
cmps
nop
mov
inc
mov
sbb
mov
jp
cld
fild
mov
cmp
cmp
xchg
dec
or
out
or
aad
in
jecxz
test
pop
aaa
add
stos
pop
adc
stos
pop
hlt
test
add
shr
out
dec
xchg
(bad)
stc
pop
jb
in
stos
push
cmp
add
mov
and
out
adc
(bad)
mov
and
mov
mov
dec
ins
sbb
xchg
cmp
mov
mov
mov
stos
jmp
(bad)
fisubr
mov
jb
out
and
xchg
xchg
jnp
mov
push
dec
and
pop
mov
jo
dec
mov
and
(bad)
push
iret
mov
addr16
movs
cmps
dec
pop
or
cmps
sub
push
xor
mov
add
mov
push
fisttp
outs
pop
fadd
push
cmp
mov
jno
out
sub
push
imul
push
(bad)
imul
stc
mov
ret
(bad)
(bad)
mov
add
repnz
jnp
sbb
shr
inc
sbb
or
imul
cwde
dec
xchg
ins
xchg
mov
outs
enter
and
loop
jp
adc
xor
test
aad
scas
mov
ins
ficomp
xlat
ds
int3
xchg
mov
(bad)
push
loope
lock
sahf
mov
mov
inc
push
int
dec
pushf
xor
aad
fs
stos
cld
repz
jge
mov
lods
int3
test
sub
inc
hlt
cmps
inc
fcomp
inc
std
sbb
ds
mov
jno
jns
mov
cld
adc
pop
cli
xchg
addr16
ins
lock
push
and
in
(bad)
xor
psubsb
out
mov
xchg
or
push
xchg
mov
addr16
cld
or
loop
jl
add
loopne
outs
push
cmc
test
add
inc
loop
jne
aam
inc
mov
cmp
fcom
icebp
adc
pop
xchg
add
ret
mov
jo
cmp
out
xor
push
sbb
icebp
lea
cmp
lods
cmp
push
ret
cmp
push
dec
or
sub
cwde
xchg
cmp
sbb
sbb
inc
sbb
jg
xor
and
lock
mov
fild
repz
stos
inc
mov
lods
inc
dec
in
cmp
clc
scas
or
push
call
push
xor
pop
out
sub
dec
mov
scas
imul
sub
mov
inc
or
mov
or
stc
sti
xchg
add
cmps
inc
dec
or
test
xor
and
xor
test
or
movs
inc
mov
or
xor
sub
mov
ror
push
add
(bad)
jecxz
pop
jecxz
bound
pushf
in
and
gs
rol
cwde
fiadd
pop
ins
xchg
(bad)
js
fdivr
into
fsubr
cmc
loopne
pop
and
jg
dec
jl
pop
sub
xchg
loope
ret
add
aaa
dec
(bad)
jmp
adc
mov
pop
and
mov
fs
or
jb
lock
in
outs
xchg
bound
enter
and
fisubr
adc
neg
push
sbb
or
mov
les
mov
scas
fs
mov
jg
cmps
lahf
ret
sbb
jne
fild
ficomp
jmp
inc
(bad)
rcr
data16
mov
movs
aaa
mov
inc
jmp
repnz
outs
fisubr
ret
mov
xchg
ret
shl
pop
xchg
pop
mov
scas
in
jne
mov
fdivr
pop
sub
shr
push
jo
enter
nop
mov
pop
pop
sub
xchg
mov
daa
in
inc
mov
xor
movs
mov
jnp
adc
cwde
fld
lock
retf
xor
cmp
jmp
ss
addr16
loope
mov
mov
dec
mov
cmp
ret
pop
clc
test
inc
mov
pop
je
mov
push
mov
mov
mov
loope
push
jmp
cmp
imul
xor
mov
(bad)
sub
scas
add
dec
mov
je
dec
out
in
sbb
mov
data16
fnstcw
mov
in
push
aam
stc
lds
pushf
outs
sub
mov
into
lahf
mov
xor
dec
cmp
jno
pop
jg
lds
sub
gs
sti
push
gs
test
mov
mov
ret
pop
and
fwait
add
push
popa
sbb
xchg
test
and
xor
mov
cmp
jecxz
cli
sub
out
and
adc
icebp
jmp
xchg
fisttp
daa
dec
sub
xor
mov
add
cs
mov
jb
mov
retf
nop
jo
mov
add
xchg
fsub
stos
mov
fidivr
xchg
mov
dec
push
sub
push
cs
addr16
sti
jbe
sub
ror
xor
push
loop
cld
dec
dec
hlt
es
loope
mov
fild
push
jg
clc
jb
mov
enter
sbb
push
fisub
test
pop
leave
jns
pop
mov
outs
pop
add
clc
jb
lahf
xchg
push
sub
mov
pop
cmp
adc
jle
imul
push
retf
sub
fsub
xor
sub
nop
adc
xor
mov
call
mov
jmp
jecxz
mov
mov
call
lock
fstp
sbb
sub
add
imul
xor
adc
ret
int3
or
and
loope
mov
push
ja
sti
cmp
enter
mov
xchg
lea
mov
and
and
inc
mov
dec
aas
cmps
repnz
ja
mov
(bad)
imul
rol
ffree
and
pop
pop
jbe
pushf
or
in
movs
mov
stc
inc
movs
pusha
xchg
inc
div
add
das
add
ja
push
std
mov
xchg
call
sub
in
leave
jecxz
out
add
jle
shl
push
xchg
out
mov
mov
lea
ror
mov
xchg
mov
cmps
mov
iret
shr
jnp
pop
cmp
scas
imul
outs
adc
lods
cmc
add
adc
and
cld
imul
add
and
mov
mov
out
aaa
jl
mov
dec
add
dec
jmp
out
jo
cmp
outs
fnstcw
or
push
shl
push
hlt
xchg
or
dec
dec
lds
sbb
or
loope
sbb
call
mov
int
fld
jle
xchg
jg
pop
imul
and
into
xchg
movs
mov
or
ret
fistp
dec
sbb
dec
push
dec
mov
mov
ficom
or
mov
fcomp
cmps
sub
jmp
push
aad
inc
movs
and
movs
out
push
iret
jae
mov
mov
pop
mov
push
push
mov
mov
mov
sub
movs
pop
int
movhps
push
stos
out
and
mov
icebp
add
or
jb
mov
out
pop
push
xor
cld
mov
xor
out
jbe
and
pop
sbb
dec
jo
les
or
sbb
mov
das
jb
popa
push
mov
jnp
inc
pop
js
sbb
movs
scas
ret
mov
aas
loop
(bad)
arpl
(bad)
repnz
clc
dec
mov
leave
lahf
lock
imul
mov
sub
fcomp
stos
outs
or
pusha
push
enter
inc
jge
xchg
add
bnd
mov
loop
and
loope
fwait
lds
pop
cmp
arpl
shl
test
mov
xor
xor
xor
fidiv
dec
in
call
call
pop
cmp
iret
inc
pusha
mov
pushf
jnp
es
add
xchg
pop
or
cmp
xor
jb
xchg
mov
push
(bad)
loopne
lods
in
adc
shr
rol
call
mov
(bad)
sub
fcomp
or
or
into
sar
jle
inc
add
xchg
call
mov
cmp
std
(bad)
inc
push
sar
xor
imul
and
pop
xchg
sar
call
popf
lods
adc
jmp
fiadd
jl
div
mov
sbb
test
sub
push
movs
mov
add
retf
pop
push
adc
mov
mov
inc
push
cs
or
jmp
(bad)
movs
neg
mov
xor
in
in
shr
dec
add
(bad)
sub
jge
mov
movs
scas
loope
push
fisttp
iret
(bad)
cld
sub
pop
unpcklps
dec
mov
jno
into
das
adc
or
sbb
cmp
cmp
mov
ins
aam
fiadd
mov
lods
movs
sbb
mov
jae
nop
sbb
or
xchg
mov
dec
add
push
sub
jns
aas
test
rcr
xor
mov
xchg
(bad)
adc
jmp
mov
test
add
jg
dec
pop
fst
inc
push
aam
shl
leave
sbb
test
mov
jne
aad
cmp
dec
cmp
xor
retf
cld
pop
aad
pop
jle
(bad)
jecxz
pop
xor
loop
es
cmp
in
fbld
adc
mov
mov
xor
(bad)
popa
mov
dec
fucom
aad
cmps
gs
in
jle
cmp
cmps
and
mov
dec
jmp
(bad)
pop
xchg
loop
cdq
call
into
nop
je
mov
sub
push
pop
pop
mov
loopne
jns
adc
xor
imul
sbb
call
push
jl
jmp
in
or
xlat
imul
mov
xor
fcomp
loop
les
int3
xor
out
and
(bad)
ja
xor
inc
and
jle
arpl
sbb
leave
xchg
scas
push
sub
cs
xor
ja
jge
out
push
xchg
iret
pop
xor
mov
ret
and
cmp
lds
fsub
loope
ds
jb
popa
popf
xchg
xchg
mov
in
cmp
fisubr
enter
add
mov
icebp
jg
inc
test
add
retf
int3
inc
and
loop
imul
or
jmp
add
call
fsubr
jbe
and
ins
in
retf
scas
lods
add
and
je
pop
and
ja
pop
and
loopne
movs
xor
mov
das
mov
adc
ins
iret
jl
outs
push
cmc
fmul
sahf
jl
jno
or
out
jle
and
pop
pop
push
in
lods
in
jae
aaa
cmp
mov
stos
lods
(bad)
jg
fidivr
push
pop
adc
aas
lods
(bad)
and
xor
neg
jmp
ja
cmc
mov
test
ja
push
inc
xchg
cs
sub
jmp
pop
xor
sar
stos
cmps
pop
add
fsub
ins
xchg
or
jg
or
hlt
and
in
rep
adc
adc
icebp
fdiv
jne
push
sub
mov
pop
jbe
push
int3
mov
(bad)
jge
es
out
test
push
jge
adc
cmp
in
dec
mov
sub
inc
addr16
mov
retf
daa
pop
out
inc
sub
sar
ficom
pop
or
adc
jle
fisubr
stc
mov
pop
inc
mov
add
(bad)
sub
cmp
sbb
sbb
or
add
pop
bound
push
push
retf
sti
fs
and
inc
push
pop
pop
pop
mov
std
or
dec
ss
cdq
scas
xchg
jno
jl
jl
fmul
cli
pop
xchg
test
or
int
rol
leave
fbstp
pusha
cmp
sub
ds
clc
jmp
jb
inc
and
mov
jmp
xlat
dec
mov
adc
sbb
mov
js
and
popa
adc
shl
ror
add
fs
cmp
and
mov
inc
jbe
inc
neg
pop
loop
dec
aad
xchg
mov
test
dec
loopne
test
repz
jbe
mov
mov
inc
(bad)
or
rcr
mov
or
cmc
ret
adc
test
xchg
mov
scas
jbe
xor
shr
mov
fisub
or
out
test
xchg
push
aaa
lds
mov
lea
sub
and
es
xchg
outs
or
pop
aaa
loopne
jmp
sub
sti
jne
jbe
cmp
ins
jo
cmc
loopne
sub
retf
aaa
push
int3
ins
jmp
arpl
jae
jo
sub
imul
dec
mov
dec
sbb
(bad)
mov
shr
dec
mov
cli
mov
mov
pop
jae
push
outs
push
mov
stc
repnz
nop
sub
or
in
xchg
je
pop
mov
sub
cli
js
ret
aaa
fs
nop
fmul
dec
sub
icebp
nop
mov
lods
and
adc
in
add
loop
scas
(bad)
lods
retf
xchg
movs
add
stos
(bad)
jb
mov
sub
in
xchg
mov
mov
adc
cli
dec
pop
xor
push
sbb
outs
test
xor
dec
fnstcw
jne
jle
fistp
call
jnp
ffreep
add
aas
lods
adc
popa
dec
fild
fnstsw
popf
(bad)
pop
or
gs
fldcw
jae
pusha
add
in
out
(bad)
cmp
dec
xchg
jle
mov
aam
xchg
fisttp
jle
xchg
jl
aam
push
pushf
(bad)
aam
lea
loop
or
(bad)
mov
cli
xchg
repz
lods
pop
mov
pop
pop
cmc
inc
or
jge
dec
inc
ret
nop
(bad)
scas
and
cmp
call
nop
and
scas
jecxz
push
xor
jmp
mov
mov
stc
test
pop
hlt
ficomp
icebp
dec
sbb
pop
popf
mov
and
inc
mov
inc
lds
dec
mov
(bad)
pop
mov
int3
mov
push
jg
dec
je
jmp
jae
call
mov
fstp
daa
xchg
pop
jnp
push
shr
imul
sbb
(bad)
(bad)
push
(bad)
aad
pop
cmps
dec
out
cmp
enter
mov
lds
mov
and
jno
xor
ret
xor
rcl
in
add
div
sbb
test
(bad)
daa
call
(bad)
xchg
add
mov
imul
cmps
xor
stos
add
sti
mov
sub
cmp
xlat
sbb
dec
stc
das
inc
mov
popa
push
fdivr
cdq
jmp
push
push
iret
(bad)
push
out
icebp
push
pusha
sbb
imul
fxch
xchg
push
bound
xlat
sub
hlt
and
fld
xchg
lea
mov
xchg
lods
aam
push
les
nop
leave
and
mov
pop
or
test
test
push
cmp
adc
out
jge
adc
fwait
xor
adc
vpmulhuw
cs
lods
xor
pop
stos
mov
pop
lods
sub
stc
mov
imul
repnz
loopne
sti
in
neg
bound
mov
imul
in
dec
cmp
pusha
sbb
inc
cmp
adc
mov
pop
pushf
pop
jns
sbb
repz
mov
shr
rcl
xlat
sub
and
mov
push
inc
das
jge
jns
push
into
fwait
mov
xchg
pop
outs
mov
xchg
xchg
test
mov
int3
jo
out
and
cwde
sub
mov
dec
dec
daa
push
sbb
mov
(bad)
out
movs
(bad)
add
test
(bad)
mov
fisubr
mov
pop
leave
into
fild
mov
in
lock
fisub
test
in
movs
retf
fcom
mov
mov
aaa
pop
aam
push
mov
inc
data16
cmp
mov
and
stos
imul
stc
(bad)
scas
mov
sub
or
repnz
nop
mov
xor
jns
sti
arpl
sti
xchg
cmp
jnp
cmps
cld
cld
pushw
es
mul
xor
retf
inc
pusha
adc
push
cs
int3
(bad)
gs
fistp
hlt
shl
cmp
inc
dec
or
xchg
pusha
repz
add
pop
in
out
sub
mov
ins
jo
mov
xor
cwde
add
inc
jmp
xchg
xchg
mov
mov
push
or
ds
dec
xchg
std
xchg
mov
repz
(bad)
push
stos
and
pusha
ja
lds
imul
jno
addr16
mov
mov
jne
or
stc
lods
push
fs
ss
mov
fs
and
push
adc
sub
pop
loop
dec
cdq
leave
(bad)
aaa
out
sub
pop
loope
and
mov
fwait
nop
mov
pop
(bad)
retf
pop
push
mov
adc
shl
adc
mov
mov
fistp
into
cmp
push
mov
xor
cli
pusha
clc
xchg
popa
ret
fcmovb
xchg
movs
mov
sbb
sbb
sub
fcom
es
adc
mov
test
pushf
push
out
xor
cmp
ficom
outs
stos
lods
xor
fadd
push
jne
lock
sub
icebp
push
sti
mov
movs
mov
sbb
leave
clc
test
and
add
and
xchg
xchg
lock
cmp
push
add
popa
rol
imul
sub
jl
ror
in
and
(bad)
rol
shl
aas
test
inc
sbb
add
jns
jno
cmps
sbb
test
(bad)
imul
mov
push
sbb
xchg
stos
or
or
scas
loop
mov
jo
fist
test
cmps
jl
mov
and
dec
mov
and
paddd
push
in
retf
icebp
scas
xchg
jne
test
mov
sbb
inc
rol
xchg
mov
mov
movsx
mov
mov
mov
push
repz
pop
daa
sahf
mov
push
call
ret
(bad)
sbb
cmps
lods
dec
or
add
sar
shl
je
rcl
mov
or
imul
(bad)
adc
test
enter
pop
icebp
ror
sbb
es
adc
push
cdq
out
dec
mov
ret
push
add
cmp
or
(bad)
(bad)
mov
cdq
cmp
cmc
data16
mov
xchg
imul
nop
mov
mov
and
pop
or
stc
xchg
lods
aad
xchg
xchg
push
mov
hlt
movs
dec
repnz
push
in
pop
xchg
xor
div
mov
inc
leave
mov
pop
adc
mov
in
mov
jmp
pop
cmp
push
mov
sub
adc
mov
dec
cwde
cmp
imul
(bad)
cmp
push
cmp
das
cmp
sub
(bad)
xor
dec
shr
xor
cmp
fadd
jmp
push
mov
sahf
clc
aam
cmp
push
dec
push
idiv
ins
jmp
cmp
fcomi
xor
xchg
push
add
imul
adc
cs
int
repnz
adc
outs
retf
jnp
aad
jbe
push
js
mov
pop
into
lds
outs
jnp
xlat
sbb
inc
clc
gs
add
sbb
in
push
mov
lahf
mov
jl
ss
lahf
dec
sub
ret
push
add
or
cmp
jg
add
(bad)
ss
sub
clc
ss
mov
jne
xor
out
mov
mov
sub
dec
shr
dec
pop
in
jecxz
aam
imul
add
in
push
mov
adc
int
stos
adc
xor
mov
pop
jo
ds
pop
scas
add
adc
xchg
(bad)
mov
mov
inc
push
dec
and
popf
jb
add
outs
inc
jl
mov
mov
cmp
or
into
jge
stc
mov
ret
js
pop
iret
push
rol
xor
jle
in
in
xchg
or
mov
fcmovnu
pop
mov
cdq
cmps
mov
fimul
or
and
dec
push
xchg
bound
jge
repz
adc
xor
ret
(bad)
cli
aaa
mov
sub
xor
cmc
jns
mov
int3
fstp
retf
pop
repz
adc
in
add
call
dec
adc
fs
(bad)
sar
jbe
mov
push
sbb
mov
sbb
and
lods
(bad)
bound
(bad)
jns
push
jae
mov
xor
xchg
jge
mov
std
ja
mov
xlat
and
inc
xor
mov
mov
add
fsub
adc
icebp
jo
mov
inc
push
test
inc
cmp
mov
dec
mov
stc
jg
dec
adc
in
mov
sub
cli
retf
inc
sbb
jnp
popf
ret
push
sub
push
jbe
jae
push
test
add
cli
adc
cmp
mov
push
gs
call
sahf
js
ret
push
test
push
mov
adc
or
int3
xchg
cwde
loope
(bad)
imul
pop
mov
jb
ss
into
cmp
mov
and
or
jmp
frstor
inc
inc
pop
pushf
cmp
cli
clc
es
sub
(bad)
add
pop
sbb
(bad)
push
jp
jp
push
sbb
icebp
data16
jle
rcr
js
icebp
mov
mov
out
dec
pusha
and
retf
xor
mov
or
and
scas
repz
sub
int
dec
cmp
pop
mov
arpl
js
loopne
dec
xchg
in
sti
aam
pop
fldenv
and
mov
and
jb
popa
adc
jae
imul
jo
dec
in
or
sbb
mov
nop
dec
mov
pusha
cmp
pop
pop
lea
and
jae
mov
mov
push
repz
mov
cmp
mov
sub
xchg
ins
shr
inc
and
sbb
and
cld
ins
mov
call
cmps
dec
shl
mov
and
dec
(bad)
scas
add
fimul
retf
mov
(bad)
mov
cmp
in
sub
lahf
cli
sub
xor
loop
in
push
mov
jae
dec
pop
fld
cli
or
cmp
mov
cmc
(bad)
outs
mov
mov
xor
push
add
ret
imul
scas
idiv
rcl
sub
or
jne
cli
add
jl
cwde
mov
call
(bad)
(bad)
cmp
ins
mov
push
push
pop
rcl
iret
test
cdq
jmp
lods
gs
lock
daa
sbb
mov
dec
rcl
das
mov
mov
push
xchg
lods
je
ret
in
call
cmp
shl
in
pushf
ins
or
cmp
popa
fiadd
push
and
repnz
fdiv
fisttp
jge
(bad)
adc
jg
and
xor
and
or
rcr
xchg
jp
ss
mov
lea
in
out
sbb
in
add
sbb
scas
iret
jb
pop
cwde
lahf
push
push
xchg
enter
cmp
and
(bad)
leave
fistp
sysexit
jae
xchg
adc
jp
jbe
sbb
fisttp
pusha
test
pusha
iret
jg
idiv
aas
out
(bad)
cmc
pop
and
dec
fnsave
arpl
push
xor
je
dec
mov
in
in
and
cmp
mov
mov
in
stos
push
loope
ds
pushf
xchg
and
mov
popf
sti
sahf
mov
jb
out
cmp
mov
push
jns
xchg
(bad)
mov
ins
nop
std
pusha
out
sub
les
mov
retf
std
xchg
ret
jno
jmp
mov
sub
adc
or
fwait
cld
push
mov
adc
loopne
xchg
jmp
ja
repz
cmp
jmp
push
jle
adc
inc
or
fcmovu
xchg
fld
adc
mov
lds
jle
jl
cmp
adc
xor
sbb
add
inc
mov
cmp
mov
and
out
mov
bswap
imul
adc
aas
loopne
lds
or
cwde
mov
data16
and
aas
mov
and
(bad)
iret
pop
inc
stos
enter
mov
adc
sbb
jns
imul
add
xor
pop
movs
sub
icebp
jmp
and
inc
sub
jmp
add
ja
clc
enter
pop
mov
adc
add
push
popf
xor
pop
pop
and
adc
(bad)
xchg
cdq
not
imul
jecxz
cmpxchg
imul
xchg
jns
aad
adc
ins
rol
in
repz
pop
add
bound
jl
inc
adc
cld
push
add
cli
sbb
fwait
add
leave
push
retf
sub
fcmove
inc
xor
int3
dec
mov
sbb
retf
adc
movs
cmp
out
or
ja
adc
mov
hlt
pop
xchg
repnz
inc
fsubr
js
repz
xor
mov
fisttp
dec
dec
hlt
repz
inc
cld
in
or
pusha
mov
lahf
(bad)
or
mov
mov
xor
inc
lods
lods
sti
pusha
ficom
nop
ds
jg
int3
mov
mov
dec
adc
dec
pop
sub
jp
outs
in
jno
(bad)
xchg
and
mov
mov
(bad)
icebp
push
retf
mov
lods
adc
mov
mov
xor
pop
mov
jae
loope
fnsave
dec
xor
lds
cmp
iret
sbb
ret
mov
sar
imul
pushf
stc
shl
pushf
fisttp
sbb
pusha
lods
fistp
inc
pop
push
sbb
and
cli
inc
inc
or
neg
ret
aam
retf
jo
adc
mov
cdq
inc
jo
sbb
test
sahf
push
clc
xor
cwde
jecxz
shl
or
fwait
mov
pop
xchg
push
stos
cmp
imul
outs
movs
lds
shl
pusha
xor
mov
jg
push
xchg
push
imul
sbb
mov
shl
mov
xchg
fcom
xchg
and
jae
push
bound
mov
test
mov
push
aas
dec
mov
xor
js
mov
xchg
or
lock
std
rcr
xchg
xchg
xchg
mov
xchg
mov
sbb
push
xor
cmp
in
xchg
or
pusha
pop
popf
mov
fnstenv
add
ficomp
or
scas
jmp
push
movs
es
shl
out
xchg
test
or
iret
push
sbb
pop
sbb
pushf
int3
sahf
neg
inc
in
cmp
cmp
and
out
enter
out
ins
mov
out
dec
and
sbb
rcl
pop
lea
jge
in
in
fs
dec
scas
xor
into
clc
movs
addr16
pop
mov
add
mov
imul
pop
adc
aad
xchg
sub
iret
lahf
test
(bad)
jmp
sub
(bad)
cld
mov
or
imul
rcr
out
and
push
sub
and
sub
push
ds
jg
add
or
ins
out
fs
pop
outs
sub
stos
dec
pop
cdq
jne
cli
rcr
imul
imul
pop
or
cld
scas
sub
(bad)
fcmovb
out
aad
jle
int3
icebp
cli
lock
ins
pop
or
aam
jge
test
mov
or
loopne
cmp
jne
sbb
fnsave
aas
lods
sbb
scas
(bad)
jmp
and
push
les
shl
ret
test
pop
mov
jp
adc
test
cli
(bad)
pop
fst
mov
dec
js
into
jmp
aad
dec
mov
jmp
and
mov
pop
div
mov
mov
loope
jo
cmovl
and
and
jmp
mov
mov
mov
test
add
pop
sbb
icebp
mov
mov
jae
out
(bad)
enter
add
push
ja
imul
fcomp
pop
popf
fwait
xchg
inc
inc
add
mov
pop
xor
movs
jae
lods
sbb
lods
push
jbe
mov
jnp
mov
repnz
pop
and
sbb
les
aad
xor
mov
sbb
mov
pop
data16
ror
scas
xchg
sub
stos
jp
push
ss
xchg
mov
push
(bad)
pop
lods
inc
pop
push
(bad)
adc
inc
cmp
push
mov
push
int3
mov
and
xchg
cdq
jl
mov
xor
test
shr
repz
inc
retf
ss
xchg
lock
sub
scas
add
mov
stos
adc
jmp
out
rcl
mov
arpl
jl
push
mov
sbb
int
ret
push
mov
out
inc
dec
add
faddp
sub
pop
add
not
pop
add
jne
cmps
push
push
std
pop
push
and
push
shl
mov
ret
pop
and
sub
mov
inc
data16
out
out
rcl
push
loopne
push
mov
adc
aam
sbb
xchg
mov
jnp
jecxz
sbb
test
jb
(bad)
loop
adc
fild
stos
jg
sbb
(bad)
jmp
lds
mov
fisttp
shl
jge
xor
(bad)
pop
and
jecxz
jnp
inc
push
push
dec
mov
mov
or
ss
xor
add
jno
mov
or
cld
out
inc
outs
adc
sbb
out
mov
sti
push
fst
mov
mov
lds
xor
push
adc
loop
gs
(bad)
sub
pop
aas
mov
mov
add
jo
sbb
jae
push
pusha
mov
sbb
fwait
dec
inc
enter
sbb
jmp
mov
stos
fisubr
xor
pop
lods
inc
pop
shl
xchg
mov
inc
push
inc
movs
cs
cmp
mov
test
jmp
adc
loope
call
mov
popa
out
sahf
lods
push
or
inc
xchg
sbb
(bad)
int3
inc
ds
sbb
adc
arpl
sub
retf
outs
add
call
jp
cli
jo
int3
js
add
out
jb
cmps
and
mov
rol
stos
sub
xor
xchg
inc
imul
xlat
sub
push
fdivr
add
shrd
cmp
mov
fnstsw
xchg
cli
cdq
retf
fwait
adc
cmp
fwait
cmps
xchg
push
out
frstor
(bad)
fs
in
adc
outs
adc
pop
pop
cld
adc
adc
lea
in
ins
rol
dec
scas
inc
inc
repz
mov
lock
int3
xchg
loope
sahf
arpl
icebp
xor
ror
and
sbb
aad
inc
dec
int3
sbb
pop
rcr
cdq
jb
lahf
(bad)
cmp
jge
out
sub
mov
fidiv
pop
push
imul
sbb
adc
aad
retf
ja
push
mov
ficom
xchg
movs
sbb
dec
jne
inc
ret
inc
imul
pop
or
test
adc
or
or
jmp
lahf
fld
xchg
test
or
sbb
out
mov
test
call
lods
je
adc
(bad)
fisttp
stos
add
lahf
aam
xor
xchg
xchg
fwait
and
dec
scas
xor
dec
je
into
add
addr16
rcl
daa
nop
jg
(bad)
jge
rcr
scas
or
mov
fdiv
sub
dec
push
repnz
dec
xchg
rcr
outs
push
push
test
iret
xchg
dec
aaa
cmp
mov
out
stos
loop
bound
add
mov
pop
jns
cli
(bad)
movs
fmul
ja
aad
sbb
cs
add
popa
cld
add
jo
mov
in
fs
sbb
mov
loop
cmp
add
or
mov
sub
gs
fiadd
add
add
push
mov
loope
jo
pop
call
inc
retf
fcomi
stos
mov
sbb
push
popf
push
rcl
fdivr
sbb
xchg
sub
fild
cli
repnz
fild
jbe
iret
adc
int3
test
sbb
adc
addr16
push
add
push
jle
sbb
call
arpl
sub
push
or
test
fidiv
sub
scas
mov
bound
cmps
aam
adc
stos
pop
sub
push
ins
(bad)
mov
cmp
xor
fs
inc
jge
mov
mov
icebp
sub
outs
stos
retf
pop
mov
mov
outs
inc
sub
outs
cmp
(bad)
sub
in
dec
and
jecxz
add
mov
adc
dec
sbb
cwde
movs
repnz
fst
lahf
dec
lods
sbb
leave
push
adc
sahf
adc
or
xor
das
mov
sub
cdq
rcr
stos
sbb
and
test
pop
adc
cmp
pop
push
xchg
jp
or
mov
pop
js
idiv
add
call
rcl
inc
mov
ret
jge
sub
lds
aam
test
sahf
xchg
mov
jg
lock
jns
aas
ret
or
lahf
iret
jg
jl
jae
lea
push
sub
push
scas
dec
sub
test
push
and
pop
adc
push
xor
xor
jo
sub
in
xlat
in
xchg
xchg
(bad)
inc
mov
in
add
pusha
mov
mov
cmps
sub
sub
pop
xor
into
js
stos
les
sub
xor
adc
jb
sub
mov
lods
mov
mov
outs
imul
aad
mov
repnz
movs
mov
jecxz
xchg
cmps
(bad)
not
sbb
xchg
sbb
sar
call
xchg
addr16
call
loopne
adc
jecxz
sbb
iret
jmp
scas
(bad)
xchg
enter
sbb
mov
pop
push
call
cmps
neg
cmp
inc
out
inc
repz
fcomp
sbb
push
stos
(bad)
ja
ficom
push
pop
mov
(bad)
mov
push
(bad)
(bad)
adc
loop
push
push
cmp
frstor
(bad)
sub
jecxz
or
mov
js
mov
mov
lea
scas
jnp
js
adc
or
sub
mov
mov
dec
mov
dec
cs
out
movs
push
iret
out
(bad)
xchg
shr
movs
inc
mov
dec
mov
sub
xchg
dec
ja
test
cmp
(bad)
jecxz
les
jp
(bad)
xor
movs
adc
mov
adc
pop
adc
lock
enter
sub
inc
in
dec
push
fild
inc
sub
repz
stos
lahf
dec
mov
mov
adc
aam
push
xor
outs
int3
(bad)
pop
push
lock
call
inc
test
xor
and
mov
push
bound
lmsw
out
xchg
and
popa
and
sbb
sbb
cli
dec
mov
xchg
(bad)
sub
mov
inc
ja
and
mov
jmp
out
jge
ja
push
mov
or
push
xchg
repnz
cmp
loop
inc
xchg
push
push
or
adc
ret
and
xor
test
jg
sub
cmp
mov
shl
mov
jecxz
outs
ja
jnp
movs
pop
div
icebp
mov
mov
xchg
jns
test
ins
mov
jl
ins
ja
jns
mov
(bad)
lahf
and
movs
icebp
fmul
add
add
mov
int3
into
sbb
or
retf
shl
add
jmp
pop
test
lahf
mov
into
push
xor
in
pop
call
mov
mov
out
push
mov
pop
arpl
or
out
push
xchg
jnp
cmp
(bad)
sub
push
(bad)
jl
in
in
jns
pop
xchg
aad
arpl
out
inc
(bad)
aad
sub
mov
loop
cmps
cdq
cmps
add
jl
push
call
jne
add
xchg
enter
pusha
cmps
mov
pop
cdq
dec
loop
ins
adc
add
pop
xlat
jbe
push
out
cmp
adc
or
jmp
js
add
add
hlt
xchg
ficom
cmp
les
xchg
inc
or
cs
call
popa
jg
fld
(bad)
dec
cmp
or
leave
sbb
or
ss
leave
out
mov
sti
inc
mov
jecxz
sbb
push
inc
pusha
les
outs
mov
(bad)
xor
push
movs
jp
mov
stos
and
sbb
stos
jae
push
push
(bad)
push
aam
inc
and
clc
sub
cmp
lock
aas
jno
adc
sbb
inc
jle
retf
cwde
fisubr
sbb
xor
les
shl
sub
xchg
push
xlat
mov
lock
and
inc
test
call
(bad)
jecxz
iret
or
hlt
pop
jmp
mov
pop
sbb
dec
sbb
fcomi
dec
pop
test
jne
ins
in
mov
xchg
push
shl
nop
ss
and
lods
jae
push
and
add
in
mov
mov
mov
jl
lea
jae
in
rol
(bad)
sti
fldenv
in
test
lahf
xor
xchg
jmp
je
inc
and
mov
inc
aas
leave
out
push
sbb
adc
pop
mov
dec
test
movs
cwde
push
fcom
cmp
xchg
push
xor
and
adc
popa
inc
mov
aad
ret
(bad)
pop
pusha
xor
cmp
mov
loope
pop
xor
js
jo
loope
dec
lahf
sbb
ja
mov
sub
ss
loop
sbb
cli
hlt
xchg
pusha
mov
es
idiv
lfs
dec
mov
dec
loope
mov
xor
dec
out
or
jbe
lods
xor
iret
sbb
iret
inc
adc
retf
sub
loope
rol
dec
out
mov
inc
push
jl
mov
cmp
mov
pop
dec
fdiv
inc
jge
aad
xor
cmp
or
sub
sub
adc
adc
add
push
cwde
(bad)
lods
cmp
outs
push
in
shl
or
ins
mov
leave
xchg
ret
out
mov
or
(bad)
cmc
sub
sbb
fisttp
in
mov
les
pushf
popa
xchg
xchg
jne
outs
fwait
aaa
xchg
push
shl
pusha
fs
adc
jb
cmp
movs
out
ja
sub
fistp
popf
jae
push
dec
dec
xchg
inc
mov
dec
scas
pusha
jge
xor
mov
loopne
data16
sbb
sbb
dec
cmc
enter
inc
pusha
or
cmps
push
mov
mov
push
das
xchg
add
daa
aaa
in
sub
std
retf
dec
idiv
div
jl
fwait
add
mov
mov
xor
mov
xchg
aam
xchg
dec
jecxz
into
in
push
xor
jge
xchg
into
cmps
sub
dec
fisttp
jbe
xchg
mov
cld
push
pushf
(bad)
imul
sbb
retf
lds
rol
cli
cmp
mov
dec
cli
jns
push
jne
fs
push
aas
inc
add
loope
pop
push
inc
out
je
out
pop
jns
(bad)
mov
push
push
mov
adc
retf
push
mov
dec
mov
out
js
or
int
mov
push
pusha
xchg
repz
mov
retf
inc
sti
xchg
xor
jae
aaa
jmp
in
in
ret
rcr
cmp
and
test
mov
xor
scas
bsr
ja
adc
int3
retf
inc
xor
enter
push
into
icebp
out
jl
repnz
in
je
pop
outs
xor
mov
aad
jne
jbe
mov
retf
out
push
pop
and
stos
sub
jns
sbb
sub
mov
add
lods
dec
fs
out
sub
mov
lea
push
scas
mov
mov
pushf
sub
movs
xchg
mov
pop
push
lods
and
popf
xor
out
inc
cli
ficom
and
dec
xchg
inc
fnsetpm(287
jnp
jg
nop
div
mov
add
or
sub
mov
sar
mov
or
xlat
lock
pop
push
in
or
dec
repz
rol
push
adc
cmc
sub
xor
inc
nop
pusha
aaa
lds
mov
mov
inc
pop
das
inc
adc
mov
js
push
mov
dec
in
pusha
dec
in
adc
sbb
push
or
popa
pop
push
cmp
jmp
sub
jo
xlat
cli
and
pop
(bad)
xchg
sbb
inc
jnp
adc
sub
jne
data16
ret
jle
adc
mov
xchg
jo
loopne
mov
mov
arpl
sub
and
outs
xchg
push
dec
push
(bad)
and
shr
retf
xchg
not
idiv
nop
cmps
pop
imul
lods
sbb
or
mov
mov
push
mov
or
popf
jnp
sub
call
pop
dec
int3
test
inc
sbb
es
fnsave
dec
lds
cmp
pop
push
dec
or
cmps
lahf
xor
in
mov
add
out
push
sub
dec
nop
loope
cs
fwait
lds
sbb
inc
jle
bnd
daa
loope
and
cmps
fmulp
inc
dec
sub
arpl
lea
ror
es
push
push
pop
pusha
jle
push
ins
jne
dec
and
inc
mov
cmp
fwait
daa
shr
dec
sbb
in
popa
(bad)
fiadd
enter
shl
adc
mov
fwait
mov
ret
and
jmp
xor
xor
js
add
pushf
add
xchg
(bad)
pop
mov
dec
or
arpl
pslld
or
jp
xchg
adc
and
in
sar
xor
clc
and
push
popf
xchg
arpl
mul
and
pop
cwde
int3
out
ret
popf
sbb
rcr
add
sbb
mov
inc
in
fmul
call
mov
call
pop
fcmovb
jns
sar
jb
dec
clc
arpl
or
(bad)
jne
mov
jb
inc
jl
test
push
ja
jbe
pop
mov
sbb
lahf
xchg
into
ss
clc
inc
fdivr
in
adc
adc
adc
inc
jns
enter
dec
adc
pop
retf
inc
fdiv
pop
icebp
sub
leave
pop
xor
push
imul
sub
mov
and
gs
jge
data16
xor
out
dec
call
js
fbld
pop
rcl
rol
add
jne
push
dec
mov
rcr
repnz
js
jmp
mov
outs
ror
sub
outs
fadd
fbld
inc
add
mov
mov
cmp
data16
cmp
shr
add
(bad)
retf
(bad)
xchg
jmp
inc
or
xor
push
mov
jg
xchg
out
push
lock
repz
adc
fisubr
cli
cs
(bad)
xor
aad
in
mov
retf
in
outs
xchg
fisub
push
inc
jb
pusha
rcr
inc
jnp
cmp
xchg
lods
std
xchg
(bad)
aas
and
mov
sbb
cmp
add
mov
inc
cmp
mov
sub
pop
sub
or
dec
clc
data16
stos
ficom
cdq
pop
dec
sbb
fs
nop
test
std
xchg
mov
add
inc
jmp
cmp
rol
add
sub
fwait
and
sub
fidiv
xor
mov
cmp
jg
mul
ror
test
push
mov
mov
pop
add
nop
push
jns
mov
xchg
cmc
fst
pop
push
into
loopne
adc
cli
aaa
sti
icebp
jbe
(bad)
enter
rol
stc
sub
repz
shr
sub
ret
jle
mov
pop
xchg
scas
fnstenv
pop
mul
pop
stos
ret
dec
int
jl
jg
mov
push
test
jg
je
cmc
xchg
pop
xchg
mov
mov
cmp
mov
call
cwde
pusha
dec
mov
outs
test
dec
fsubp
and
cmp
mov
and
xchg
jb
ret
test
mov
outs
rcr
mov
fcomp
stos
dec
arpl
cwde
pop
nop
dec
addr16
xchg
icebp
mov
xchg
inc
mov
mov
mov
les
(bad)
or
push
lods
jmp
dec
sub
in
out
mov
pop
xor
inc
jmp
loope
pop
fist
pop
inc
cmp
adc
fidivr
in
out
ins
sbb
pusha
out
adc
pop
imul
xor
add
sub
test
add
aam
cmp
(bad)
lock
sar
sti
popa
cmps
rcr
inc
dec
and
les
int
ret
push
cmp
movs
(bad)
mov
adc
xchg
data16
call
shld
mov
out
sbb
shr
xor
jo
sub
xsavec
cmp
mov
stc
dec
add
jno
outs
dec
inc
nop
jl
(bad)
inc
je
jl
cmc
cmp
mov
enter
fld
jae
add
repz
call
mov
jno
and
loop
jo
int3
repz
xlat
jge
rcr
add
add
aaa
inc
arpl
inc
xor
shl
call
inc
inc
sub
stos
push
and
jmp
ins
dec
imul
outs
test
jns
(bad)
lods
scas
loopne
mov
xor
dec
(bad)
lahf
addr16
sti
repz
xlat
dec
(bad)
cmp
dec
(bad)
frstor
pop
and
mov
icebp
ja
scas
and
mov
nop
jmp
mov
leave
dec
xor
jns
hlt
adc
jecxz
add
cmc
clc
add
ffree
or
sahf
jnp
sbb
pop
xchg
sub
fucom
inc
and
add
dec
in
not
pop
pop
imul
cmp
sub
pop
jo
dec
mov
jmp
test
out
test
cld
inc
add
fnstcw
pop
mov
icebp
sahf
je
push
mov
test
xor
in
ret
mov
sbb
xchg
out
mov
sar
add
js
xchg
xor
or
ins
jg
das
inc
sbb
jno
pop
sbb
ja
jbe
jb
lods
cmps
movs
aam
xchg
neg
retf
mov
fld
mov
cmc
mov
out
xor
jb
and
adc
mov
dec
inc
cwde
inc
add
jle
popa
push
jne
icebp
add
mov
cmc
movs
sbb
movs
add
pushf
jge
jecxz
pushf
fsin
fwait
cmp
ja
ret
imul
pop
movs
sub
mov
hlt
push
stc
loope
lods
pop
retf
mov
sub
popf
dec
xchg
mov
lea
push
ficom
mov
mov
mov
pop
cmp
out
(bad)
fs
xor
pop
aaa
(bad)
cmps
loop
jp
jg
sahf
fwait
call
mov
mov
inc
cmp
repnz
mov
mov
repnz
outs
inc
int
stos
pop
test
pop
ja
adc
movs
inc
(bad)
adc
packsswb
retf
mov
dec
fwait
cmps
popf
test
xchg
mov
popf
ds
cld
add
add
pop
mov
int3
or
mov
ror
jo
adc
sub
(bad)
(bad)
repnz
cmc
xchg
jmp
cmp
inc
jno
push
mov
cwde
inc
loope
push
mov
movs
xchg
push
pop
push
in
sub
fldenv
or
pop
pop
arpl
xor
adc
jecxz
das
jp
dec
xlat
inc
sbb
cmps
stos
in
ret
mov
sbb
mov
pop
xchg
sub
sub
(bad)
aad
push
cli
or
jg
mov
gs
adc
add
mov
pop
ds
push
push
jle
dec
shl
xor
out
xor
or
pop
sbb
adc
push
aam
cwde
jp
pop
test
add
and
mov
sub
and
data16
xor
pushf
inc
mov
mov
test
mov
aad
retf
push
xchg
push
popa
imul
outs
jge
stos
test
push
mov
stos
dec
dec
int
dec
repz
stos
stos
inc
adc
mov
stos
fisttp
pop
adc
and
xor
pop
push
push
adc
test
fcmovne
rcr
frstor
fild
movs
adc
adc
add
or
or
mov
repnz
jb
jle
and
outs
ins
inc
or
mov
loopne
xchg
loop
cmc
fyl2x
sbb
stos
push
sub
pusha
std
cmp
fadd
mov
sub
xchg
into
mov
jmp
inc
in
xchg
mov
sbb
or
sbb
out
xor
jne
pop
dec
in
fidivr
and
xor
(bad)
es
loopne
lahf
and
pop
pop
iret
sbb
and
pop
sub
push
adc
or
sub
mov
cmp
add
mov
cwde
dec
shl
pop
(bad)
sub
arpl
jle
jmp
out
mov
sub
push
ret
sbb
sub
mov
sbb
cmp
ins
icebp
lds
iret
shl
xor
mov
test
xchg
int
xchg
mov
js
push
cmp
or
shl
pushf
std
mov
aam
xor
movs
sub
out
inc
pop
adc
aam
inc
out
aaa
mov
push
fstp
xchg
cmc
sti
lods
imul
clc
jae
cmp
lea
pop
aaa
mov
mov
lods
or
(bad)
push
cmc
fchs
aam
cmps
mov
xchg
es
in
fwait
ss
enter
adc
loop
push
adc
inc
sub
dec
sub
push
int
sbb
aaa
outs
pop
cmp
mov
pop
or
stos
xor
dec
sub
lods
imul
or
mov
dec
and
jbe
mov
or
inc
mov
int
bswap
shl
add
out
xchg
scas
stos
or
jp
cs
mov
jle
(bad)
loope
fmul
and
dec
inc
nop
push
jle
mov
stos
repnz
stc
stos
jns
movs
int
retf
movs
daa
mov
inc
ret
fidiv
add
cmps
fs
in
xor
sub
lea
sbb
adc
mov
sub
fimul
loopne
iret
push
and
cdq
xchg
mov
leave
es
xlat
fldl2t
xchg
mov
sub
sahf
mov
lock
mov
mov
jl
xlat
pusha
call
push
xchg
push
lods
mov
hlt
aam
mov
ror
fild
in
inc
in
fild
add
in
add
push
stos
sub
mov
cmp
push
nop
mov
popa
cmp
jle
fisubr
dec
dec
aaa
and
or
mov
rol
mov
outs
inc
cmp
pop
pop
mov
jnp
jmp
push
movs
fcomi
adc
cli
ja
(bad)
mov
inc
mov
and
cs
lock
bound
imul
aam
jmp
test
xor
cmp
add
loope
pusha
pop
movs
je
ret
jno
mov
add
adc
jb
cdq
sahf
nop
pop
inc
lods
sbb
xor
sub
jno
sbb
sbb
loope
xchg
cmp
ins
jo
outs
lahf
mov
icebp
mov
jne
xchg
dec
ret
push
and
and
jbe
ss
xchg
mov
cmps
dec
call
out
pop
mov
mov
sbb
out
int3
push
imul
jmp
push
jns
shl
pop
pop
dec
dec
call
movs
add
dec
daa
ins
cmp
sbb
movs
xor
(bad)
ins
push
repz
adc
sub
xchg
cmp
iret
int3
mov
fnstenv
ret
(bad)
sub
(bad)
sti
jns
test
shr
rcl
pop
mov
xchg
xchg
repnz
retf
je
adc
cmps
popa
xchg
xor
pop
test
xchg
cmp
mov
push
pop
mov
bsf
es
mov
test
inc
int3
rcr
and
(bad)
out
dec
fcom
sysexit
adc
enter
mov
mov
cli
arpl
inc
push
into
and
ret
fucomi
lahf
push
inc
pop
movs
pop
aaa
or
xchg
test
int3
sub
mov
mov
pop
stos
fadd
in
fcomp
cmp
push
sbb
push
leave
fwait
jb
xlat
test
xchg
pop
leave
inc
fnsave
sbb
cmp
das
jb
push
sbb
sub
sti
daa
adc
fisubr
fidivr
shl
adc
inc
xchg
cmp
cli
jl
lock
cmp
fistp
pop
outs
out
fidivr
cmp
es
or
jns
enter
in
adc
cld
xchg
test
lea
cmp
pop
mov
jg
mov
xchg
icebp
inc
mov
into
mov
adc
pop
jne
dec
xor
dec
movs
adc
enter
lods
inc
ror
retf
xor
cmc
popa
out
into
stos
call
js
and
ror
mov
mov
push
pop
fs
fcomp
jl
rol
mul
and
dec
jno
pop
add
loope
adc
fistp
cmp
lea
into
cld
mov
jo
dec
retf
iret
cmc
adc
adc
mov
pop
ins
into
lahf
dec
(bad)
pop
enter
or
nop
push
and
into
call
movs
adc
xor
jb
out
fsubr
pop
push
cld
push
inc
clc
aam
dec
sbb
jo
shr
(bad)
aaa
mov
fcomp
leave
shr
les
(bad)
stos
adc
and
(bad)
push
cmp
test
mul
add
fisub
imul
fld
add
sahf
xor
cmp
mov
mov
aam
sbb
ret
icebp
in
xor
cmc
jle
fisubr
and
(bad)
jo
fcmovnu
shl
cmp
push
inc
leave
shr
fdiv
or
mov
in
or
xor
xchg
adc
leave
mov
aad
stc
sar
mov
jno
mov
add
aam
imul
ins
aad
loop
iret
lock
into
dec
push
popa
mov
mov
jl
dec
add
gs
test
add
mov
mov
jae
xchg
mov
int
movs
add
ja
xlat
cmp
dec
mov
push
push
or
sahf
inc
repnz
jge
popf
pop
and
fwait
sub
or
pop
ret
fs
sar
std
and
in
retf
sub
push
inc
(bad)
fucom
imul
xchg
cli
or
enter
fimul
mov
fmul
adc
lahf
pop
xor
outs
inc
cmp
cmc
or
sbb
sub
out
pushw
test
cmp
push
idiv
test
dec
mov
daa
pop
ret
mov
cmp
scas
xor
cmp
push
push
shl
icebp
xchg
repz
es
cmc
inc
mov
xor
mov
(bad)
hlt
jnp
xor
shl
ffree
pop
or
not
fidiv
xor
and
xor
pop
adc
sub
jb
daa
lahf
jbe
es
rol
ins
(bad)
or
push
leave
mov
jb
mov
movs
inc
ins
jp
mov
jno
xchg
in
jge
mov
lahf
push
cmc
jae
aas
jb
pop
lods
outs
(bad)
pop
cmp
dec
(bad)
in
or
mov
inc
jbe
(bad)
xchg
push
mov
or
int
jae
cmp
push
cs
shl
cdq
mov
bound
mov
out
rol
xor
loop
mov
sub
addr16
sub
std
and
sub
xor
mov
xor
hlt
gs
mov
pop
xchg
iret
mov
rcl
dec
hlt
pop
mov
pop
movs
jnp
mov
call
or
jmp
cmc
xchg
retf
push
inc
clc
push
sbb
xor
pop
mov
dec
aad
aaa
leave
popa
jge
(bad)
sub
jg
cmps
lods
mov
mov
cmp
ins
test
ror
out
fs
or
rcr
pop
(bad)
(bad)
mov
repnz
mov
dec
sar
cwde
(bad)
jmp
call
pop
pop
mov
mov
test
mov
jno
jle
pop
lahf
push
mov
lock
sub
xor
imul
cdq
jbe
int
ds
scas
frstor
in
rol
aam
xor
mov
xchg
adc
push
cmp
js
push
in
arpl
pop
aad
aas
out
mov
enter
(bad)
cmp
das
cld
cwde
aaa
inc
push
lea
(bad)
gs
scas
call
jl
dec
sub
xchg
stos
xchg
das
or
int3
cmp
xor
les
add
iret
das
test
fimul
xchg
xor
pushf
inc
jb
xchg
mov
fcom
aas
fxch
adc
mov
ins
sub
mov
inc
mov
leave
or
or
cmp
sub
ins
mov
cmp
mov
dec
ds
add
aad
xchg
and
out
adc
enter
stos
ins
push
pop
pop
retf
aas
lahf
ja
nop
pop
ja
add
cmc
inc
jle
add
pushf
mov
jecxz
adc
push
sti
les
dec
sub
ins
jne
dec
add
hlt
sbb
mov
arpl
mov
shr
adc
pop
fbstp
mov
xchg
test
sub
aas
dec
inc
ret
pop
retf
xchg
repz
inc
xchg
sub
stos
mov
sbb
mov
mov
retf
jns
stos
aaa
into
or
sub
fwait
loop
cmps
xor
ret
repnz
fwait
and
adc
adc
jne
fcomp
cmp
dec
cmps
fs
repnz
pushf
pop
adc
call
cld
xor
or
adc
cld
jb
mov
jp
pop
in
fucomp
and
ins
(bad)
sbb
adc
clc
cld
xchg
daa
fs
cmp
in
mov
cmps
inc
mov
dec
dec
sbb
jecxz
add
cmp
or
xchg
cmp
jmp
inc
add
ret
cmps
mov
jb
add
xchg
xchg
cmp
lahf
(bad)
mov
pop
cmp
adc
daa
cs
fnsave
add
jmp
lea
mov
inc
push
(bad)
fdiv
xchg
loope
inc
dec
or
imul
enter
mov
pop
xor
and
loopne
cs
mov
mov
ffree
leave
stos
aas
mov
fcom
loopne
outs
mov
retf
mov
inc
mov
call
cdq
or
mov
jbe
adc
in
and
daa
fld
mov
mov
movs
clc
and
cdq
xchg
lea
dec
push
leave
jl
cmps
push
pusha
std
xchg
mov
xchg
js
div
dec
inc
fcmovb
inc
pop
outs
out
xor
je
cmp
push
pop
in
dec
or
addr16
in
sub
fwait
mov
iret
fnsave
dec
jb
fs
inc
jmp
imul
add
mov
dec
mov
inc
xlat
inc
push
adc
aad
mov
fldenv
fsub
add
mov
pop
rcl
es
push
jbe
jnp
mov
cmp
dec
dec
sub
cmp
lea
mov
pop
shr
push
shr
jns
leave
shl
jo
icebp
add
mov
mov
movs
(bad)
xchg
cli
test
icebp
xor
dec
retf
mov
(bad)
or
mov
fisttp
aaa
fmul
es
pop
lods
retf
jns
test
xor
adc
dec
fist
test
jbe
push
dec
inc
dec
cmps
pushf
mov
mov
mov
or
sti
(bad)
std
mov
or
neg
xchg
cmps
cmp
and
inc
je
xchg
push
(bad)
mov
or
popa
fwait
(bad)
push
fs
pusha
sbb
call
and
pop
xchg
mov
adc
imul
and
dec
jmp
sub
js
lea
adc
push
push
push
cmp
mov
loopne
jno
adc
mov
jno
mov
jne
scas
xchg
popa
or
mov
cmovo
sbb
fst
cmps
hlt
jge
in
jbe
into
repnz
adc
cmps
lahf
pop
lods
mov
and
mov
sub
push
push
mul
call
sbb
push
fcom
sub
or
out
sbb
popf
cmps
sbb
movs
or
movs
ins
hlt
lds
or
add
mov
and
outs
sbb
shr
fxch
xor
enter
jmp
or
inc
aaa
daa
fcmovu
jns
or
mov
and
ficom
xor
add
push
inc
call
xor
xchg
rcl
inc
pop
jp
mov
pop
sub
adc
add
fnstsw
xlat
sbb
mov
ret
jecxz
inc
test
xor
das
fsubr
sahf
cmps
mov
xchg
mov
sub
repnz
dec
ds
jns
loope
stos
movs
mov
cdq
int3
popa
jne
pop
mov
ss
aam
retf
nop
(bad)
mov
popf
repz
call
sti
dec
mov
push
nop
jae
mov
jge
cmc
inc
aad
push
lea
in
div
sub
fistp
cmp
mov
repz
jp
in
pusha
das
scas
repnz
mov
xchg
or
inc
add
jbe
sub
mov
sbb
call
loop
cwde
jle
test
aam
jl
sub
addr16
xchg
neg
push
add
or
cmps
add
mov
popf
xchg
clc
(bad)
(bad)
jne
leave
mov
mov
and
cmp
ret
loopne
or
mov
or
mov
xchg
fist
scas
cld
inc
test
fmul
lods
fdivr
inc
fst
adc
push
in
cmp
nop
shl
cmp
imul
xor
int
jmp
fidiv
repnz
or
xchg
out
das
sub
shl
shl
stos
in
pop
arpl
cwde
mov
movs
mov
push
pop
sbb
dec
icebp
xchg
into
iret
fmul
cmp
xchg
push
pop
ret
sub
mul
push
and
mov
loopne
mov
repnz
dec
imul
mov
rol
test
gs
data16
es
jns
daa
cdq
shl
lods
push
push
das
imul
les
iret
ret
xlat
xor
inc
xor
mov
not
test
inc
loopne
mov
mov
enter
scas
jbe
icebp
dec
repz
xor
xor
loope
lock
inc
fs
xchg
and
xchg
sbb
xchg
adc
sub
or
into
jecxz
out
(bad)
push
cmp
into
in
call
jno
sub
dec
mov
lea
sbb
call
data16
into
jno
test
mov
repz
sub
test
stos
jo
daa
into
xchg
push
jle
dec
and
xchg
lock
cmp
mov
aad
add
into
pusha
add
int3
inc
cmc
out
fld
(bad)
xor
jne
xor
movs
test
dec
repz
ja
mov
pushf
(bad)
jns
xor
fadd
movs
stc
dec
les
cld
rcl
or
dec
out
fild
sbb
pop
jo
int
jnp
and
adc
lock
loopne
pop
dec
and
jnp
(bad)
pop
xchg
add
and
pop
leave
je
fmul
xor
addr16
sahf
push
xor
pop
mov
xchg
sahf
xor
jno
jb
xchg
test
movs
dec
sub
mov
icebp
jnp
repz
nop
hlt
das
jp
jo
xor
retf
pop
ss
mov
mov
ret
xchg
loope
inc
xor
aad
daa
dec
call
sbb
xlat
in
cmp
sar
aas
cmp
repz
and
fisttp
xchg
fs
or
mov
jnp
mov
mov
mov
retf
push
int
std
lea
mov
xchg
int
mov
popf
dec
mov
lods
push
xchg
test
nop
xchg
xor
ss
cmp
jmp
and
add
mov
xor
mov
sub
fsubr
fdiv
inc
repz
mov
ins
xchg
into
and
sub
neg
test
test
inc
clc
push
pushf
test
ret
push
in
out
(bad)
push
in
jb
mov
lahf
dec
ins
lea
sub
stos
push
push
jae
ss
cmp
pop
lods
sahf
push
sub
xor
pop
jge
pushf
sub
js
lock
fwait
xchg
pop
mov
fs
mov
loope
(bad)
jl
push
daa
ror
bound
jecxz
and
sbb
jno
add
mov
jecxz
aad
jecxz
in
call
add
and
mov
mov
loope
lahf
xor
push
fs
aaa
dec
sbb
js
xchg
and
adc
cwde
mov
or
mov
and
(bad)
in
sub
lds
mov
mov
adc
in
fbstp
xchg
xor
inc
outs
pop
and
push
fcomip
inc
inc
mov
xchg
cmpps
inc
mov
cmps
imul
ins
ret
pop
fisub
pop
mov
(bad)
xor
adc
popa
inc
push
pop
call
ja
inc
jnp
mov
std
jp
xchg
push
call
sbb
mov
loopne
popa
neg
repz
xor
mov
clc
and
sbb
sbb
mov
pop
adc
mov
xchg
fs
pop
daa
(bad)
sub
jg
sbb
adc
jge
jne
mov
xor
retf
pop
sub
or
out
mov
dec
lahf
mov
ss
aam
hlt
test
in
test
mov
fiadd
arpl
test
jns
test
fcom
sti
sahf
daa
xchg
dec
les
mov
in
cwde
dec
cli
cmp
xchg
push
xor
xor
mov
push
cmp
ret
(bad)
add
in
out
mov
adc
pop
and
push
fucomp
in
mov
fs
sub
xchg
out
push
sbb
pop
fs
out
jns
cmp
das
push
dec
inc
f2xm1
out
cmp
cld
push
movs
dec
(bad)
sbb
xchg
outs
mov
shl
cdq
fisub
fstp
push
js
xchg
adc
mov
sbb
sub
loopne
(bad)
ins
int
xchg
jmp
aad
xchg
jb
rcl
sbb
and
in
adc
hlt
data16
dec
hlt
jl
arpl
cli
loope
mov
movs
scas
cmp
jae
in
sbb
jne
sub
(bad)
cmps
data16
pop
pop
jmp
fdivr
ins
imul
xchg
mov
call
out
sbb
xchg
imul
push
das
(bad)
stc
and
adc
sahf
shr
(bad)
icebp
test
inc
mov
gs
add
and
retf
repnz
xchg
and
shr
imul
sub
test
fs
mov
pop
cdq
xchg
dec
xchg
mov
push
lods
and
es
or
sub
imul
push
push
ret
shl
es
inc
add
cmp
in
pop
and
shr
sub
mov
add
xor
in
outs
test
xchg
int3
or
in
mov
inc
xchg
mov
sub
adc
cmps
adc
addr16
lock
shr
xchg
retf
pushf
jge
adc
ins
and
dec
sbb
mov
repnz
ss
xchg
in
pop
mov
mov
jmp
ret
jle
pop
call
dec
xlat
push
mov
shl
xor
mov
mov
stos
call
adc
mov
sbb
sar
inc
cld
imul
cwde
leave
imul
fnstcw
clc
jb
push
sub
test
or
cdq
mov
xchg
mov
adc
test
and
imul
sub
into
test
nop
pop
adc
cmp
adc
mov
push
xchg
ja
aad
inc
hlt
sub
pop
mov
shl
adc
cli
fwait
scas
adc
loope
aas
and
daa
cld
fdiv
dec
pop
dec
adc
outs
jge
ror
mov
and
test
inc
fbld
mov
or
cmp
xor
jp
lahf
jmp
addr16
addr16
pop
cli
or
test
cmp
xchg
xchg
add
and
dec
mov
mov
(bad)
pushf
mov
aas
adc
xchg
xor
sbb
sbb
cmp
rcr
cmp
(bad)
jmp
xchg
fwait
mov
sar
push
ficom
mov
mov
cmc
fwait
jge
enter
mov
pop
outs
mov
sbb
test
in
retf
mov
cmp
mov
xchg
stc
push
mov
shr
cdq
pop
in
jno
xor
(bad)
fs
je
sbb
movs
xchg
pop
sbb
lods
test
or
inc
popf
push
pop
or
das
int3
icebp
out
repz
mov
or
cmc
lods
mov
cld
cmc
xor
cld
pop
jo
mov
adc
xor
and
call
and
daa
fs
stos
xchg
dec
imul
jecxz
test
out
add
cmp
outs
adc
pop
test
popf
or
jo
in
xor
xchg
aas
ds
push
xor
xchg
shl
pusha
push
push
in
sub
jo
jge
push
shl
inc
in
jne
cli
scas
mov
popa
mov
out
and
add
imul
push
push
mov
in
mov
jae
bound
push
cdq
push
hlt
sub
dec
or
clc
push
out
push
sbb
retf
pop
pop
mov
sahf
mov
inc
sub
test
and
sub
cmp
or
sub
loope
loop
inc
gs
mov
movs
adc
mov
ret
movs
je
dec
push
adc
and
(bad)
jge
mov
das
xor
push
aam
jge
mov
xor
ror
mov
jne
jl
lea
lock
outs
clc
jmp
cmp
sbb
jmp
push
jg
ret
cmp
loopne
imul
aam
int3
fdiv
pop
jo
(bad)
fs
add
push
ins
(bad)
jmp
xor
cmp
test
pop
jle
je
pop
jne
sub
fsub
je
sahf
sub
sub
jge
or
imul
test
dec
mov
ins
addr16
push
pop
and
(bad)
jp
mov
or
sti
adc
push
aaa
inc
aad
cmp
or
mov
xchg
xor
xor
inc
xchg
dec
push
inc
jmp
sbb
pop
push
mov
fild
ins
pop
adc
out
cdq
scas
lods
(bad)
fxch
rcl
pop
test
lods
shl
cmp
pop
sbb
fdiv
xor
cmc
jae
mov
mov
cmp
xchg
in
xor
ror
sub
pop
(bad)
aaa
jb
pop
imul
in
lahf
or
imul
xchg
js
imul
pushf
jmp
pop
mov
jl
and
jmp
imul
xor
(bad)
sub
mov
add
mov
test
or
add
push
or
call
retf
or
repnz
push
adc
hlt
jp
pop
icebp
adc
xchg
xchg
sbb
dec
mov
xor
xor
push
sbb
and
ins
retf
push
pushf
mov
jl
cmp
jmp
add
into
in
and
cmp
sar
aam
in
pop
ins
dec
in
cmps
leave
data16
jnp
lods
mov
lahf
mov
push
in
pop
fsubr
jne
jb
lahf
je
cmps
call
cld
call
pushf
push
mov
icebp
loop
imul
rol
mov
mov
sbb
gs
or
test
inc
fsubr
or
and
ret
lahf
jbe
jns
pop
cmp
and
mov
cmp
mov
or
popa
inc
xchg
push
imul
and
data16
js
ss
dec
js
in
sti
and
call
dec
inc
inc
dec
je
call
pop
pop
stos
mov
ret
mov
add
xlat
adc
shl
movs
aas
sbb
jp
pusha
out
xchg
jbe
jecxz
push
call
and
fcom
cs
pop
int3
data16
cmp
jbe
add
and
pop
data16
loope
mov
mov
jp
iret
sbb
pop
or
adc
sbb
adc
les
add
bound
fadd
repnz
clc
sub
cmp
add
sbb
cmp
jbe
push
(bad)
jns
jo
sbb
scas
aas
(bad)
mov
call
cwde
xchg
test
int
(bad)
ds
xor
push
lods
sub
imul
cmp
xchg
jl
cmp
mov
ret
sub
cwde
aaa
sbb
into
paddd
pop
das
mov
popa
out
or
int3
js
les
mov
adc
dec
stos
sbb
push
jmp
jnp
out
cmps
mov
mov
stc
out
push
not
sti
ret
aas
adc
int
sbb
in
rsm
and
mov
sahf
shl
pop
jb
mov
pusha
mov
pop
mov
xor
xor
jbe
and
scas
daa
cmp
je
in
sbb
dec
retf
jnp
mov
retf
outs
mov
repnz
mov
out
sti
xchg
cmps
xchg
or
shl
xchg
inc
push
pop
add
pop
mov
(bad)
pop
xchg
mov
clc
pop
dec
or
loope
pop
sub
xor
mov
mov
ds
in
mov
inc
adc
lds
xor
ins
imul
xor
pushf
(bad)
fbstp
mov
jle
shr
and
scas
jmp
out
retf
xlat
outs
mov
cmps
mov
sahf
ficomp
stc
loop
push
sbb
movs
gs
push
outs
popa
cmps
cmp
repnz
test
jmp
mov
mov
sahf
mov
pop
(bad)
push
mov
mov
repnz
lock
outs
jo
inc
stc
in
lock
lock
mov
xor
inc
retf
(bad)
fidiv
call
adc
fadd
cmp
loope
loop
imul
(bad)
mov
aas
sub
shl
push
sbb
xor
rcr
and
cmc
mov
or
mov
xchg
inc
add
xor
pop
bound
or
xchg
(bad)
out
stc
popf
movs
retf
pop
in
cmp
ins
gs
test
sbb
or
outs
pusha
and
(bad)
xor
mov
ret
sti
jbe
and
push
pop
adc
push
stos
xchg
shr
jle
pop
cdq
(bad)
pop
dec
int3
cs
xor
mov
js
(bad)
cmp
mov
jmp
lods
ret
or
mov
adc
mov
inc
xchg
aam
std
(bad)
mov
cli
sub
push
cmc
inc
pop
push
out
ins
(bad)
jmp
add
pop
pop
aam
lods
xchg
loope
int3
lods
ss
push
fild
adc
enter
jg
cmp
and
jne
cmp
cmp
jnp
repnz
xchg
xchg
and
add
pop
aam
mov
add
mov
push
jge
mov
inc
pop
fs
mov
in
pop
rol
retf
(bad)
pusha
push
cdq
jnp
dec
lock
(bad)
js
dec
(bad)
mov
inc
frstor
jo
cs
cmp
(bad)
imul
(bad)
ror
xor
or
fistp
jno
xchg
push
ffree
mov
fdivr
or
pop
rcr
dec
adc
inc
mov
mov
out
pop
adc
sbb
das
mov
pop
rcr
inc
nop
cli
jnp
dec
adc
movs
popf
call
adc
jmp
cmp
int3
xchg
mov
inc
mov
pop
lock
lahf
mov
shl
shl
adc
push
jnp
add
in
adc
stos
loopne
in
xchg
fstp
add
and
sbb
into
cmp
lahf
test
ins
or
add
pop
repz
xchg
mov
jo
xchg
in
push
add
jb
fidiv
jp
cwde
sub
mov
ret
xchg
sbb
call
cmp
xor
daa
scas
add
pop
in
mov
adc
pop
push
(bad)
lahf
mov
mov
adc
cmp
push
and
cli
xor
ret
dec
and
xor
and
push
mov
ins
xchg
scas
pop
in
clc
inc
push
sub
inc
movs
or
add
sbb
ins
aaa
mov
loop
ds
jnp
dec
dec
dec
xchg
out
add
xor
dec
push
retf
dec
add
sub
jb
xlat
dec
or
adc
mov
jo
fwait
ins
and
push
inc
test
mov
jns
push
es
scas
mov
pop
add
in
pushf
sbb
pop
pop
adc
sbb
lahf
fist
or
nop
push
or
mov
(bad)
arpl
jne
aam
ret
stos
fld
gs
imul
xchg
or
xor
ins
xchg
loope
xor
retf
and
adc
cmp
mov
mov
cwde
jg
lods
stc
out
xchg
adc
add
mov
leave
ret
pop
(bad)
pop
adc
mov
es
into
or
jb
or
cmp
mov
repz
jecxz
mov
or
lods
js
sbb
(bad)
pop
data16
mov
jecxz
cli
sbb
pop
mov
loop
popf
in
jle
fwait
inc
sbb
les
test
mov
in
xchg
clc
daa
lods
adc
out
jl
cs
fnstenv
sbb
aas
test
sbb
aam
dec
data16
int
push
rcr
push
das
mov
mov
ss
(bad)
test
enter
scas
pop
xchg
jb
xor
ret
loope
adc
xchg
sub
add
xor
cmps
pop
not
iret
jo
mov
out
sbb
adc
inc
jmp
(bad)
or
push
out
sub
scas
jle
sbb
push
(bad)
pop
test
movs
pop
and
mov
fs
or
loope
pusha
(bad)
and
call
cmps
xchg
lds
sub
cdq
push
dec
sub
inc
sar
or
push
cmp
adc
fisttp
out
test
loopne
and
pop
sub
xchg
dec
cmp
adc
dec
and
and
lock
div
dec
ret
xchg
cmp
xor
and
out
xor
push
jbe
int
pop
push
adc
ret
in
shl
retf
xor
popa
imul
mov
ds
ficom
(bad)
lock
ret
cs
mov
sbb
jg
jo
ret
repz
lea
jp
fs
aam
in
push
mov
and
push
ficom
and
stc
rol
call
pusha
in
cmc
retf
js
sbb
cmps
xor
add
sbb
add
jns
push
jae
test
jnp
loop
adc
push
sbb
add
cs
rep
shl
call
jmp
stc
aad
jo
mov
jo
cmps
ja
aad
mov
jno
mov
test
nop
mov
or
enter
pushf
js
cmp
xor
jg
add
push
and
jmp
or
imul
mov
arpl
jb
test
call
and
jge
sub
xor
jne
mov
jecxz
lods
add
outs
mov
mov
mov
and
jno
je
or
and
aaa
lea
push
sti
fdivrp
int3
iret
sbb
fs
push
mov
add
and
adc
jno
std
push
pushf
loope
retf
push
jno
inc
sub
push
or
add
dec
jg
jp
(bad)
cmp
inc
ja
or
ffree
xchg
cmp
jg
sbb
dec
pusha
inc
mul
mov
fld
popa
inc
fidivr
fwait
add
adc
pusha
adc
pop
cs
(bad)
retf
xchg
(bad)
xor
out
xor
sub
or
out
or
dec
stos
push
out
pop
sub
pushf
in
dec
jl
xchg
and
idiv
lock
fs
in
push
loopne
pop
iret
lods
xchg
pop
cmp
arpl
leave
fsub
es
test
addr16
call
aam
xor
rol
(bad)
sti
js
inc
addr16
das
aas
push
test
cmp
outs
shl
sti
sbb
xchg
sub
and
add
cmps
bound
rcl
push
inc
nop
enter
sahf
cmps
cmp
xchg
jecxz
movs
mov
pushf
cmps
rcr
add
scas
mov
loopne
popf
lods
jle
xor
loop
test
mov
cmc
and
aaa
addr16
test
mov
pop
ins
loope
pop
popa
popa
and
mov
lods
sbb
or
adc
call
xchg
addr16
arpl
lods
push
adc
add
stos
xor
dec
dec
jl
cmp
shr
(bad)
jg
mov
mov
hlt
jg
ins
mov
push
jmp
pop
jl
sub
pop
push
jecxz
sub
in
pop
out
mov
lahf
mov
sar
push
imul
or
fidiv
ror
xchg
cli
jmp
test
pop
ja
(bad)
inc
cmp
or
inc
daa
int
nop
retf
jbe
mov
out
mov
or
xchg
cmps
xchg
xor
and
rcl
sub
daa
add
jns
or
(bad)
lds
sub
mov
stc
mov
popa
jmp
aad
mov
xor
jnp
or
repz
js
push
out
ret
jnp
test
outs
(bad)
loop
repnz
call
aad
sub
pusha
hlt
and
out
rcl
and
push
pusha
xchg
jmp
mov
xor
dec
je
enter
add
fisubr
sti
inc
cmp
lock
add
loopne
bound
jecxz
std
push
in
push
jne
sub
in
pop
mov
pop
outs
leave
sbb
test
fistp
inc
pop
pop
into
sbb
adc
mov
int3
mov
and
jge
lahf
cli
test
popf
std
xor
add
sbb
ja
int3
xor
jbe
add
cld
mov
jge
(bad)
aas
dec
mov
push
jecxz
fs
push
push
mov
or
movs
adc
inc
imul
mov
xor
mov
mov
fimul
or
das
sbb
mov
hlt
inc
mov
daa
push
sub
cmc
daa
scas
or
sub
cmp
add
push
inc
mov
mov
rol
repnz
push
inc
je
fsubr
imul
add
(bad)
out
mov
mov
push
adc
push
jne
pop
loope
and
xchg
push
sbb
frstor
inc
cmp
cmp
xor
mov
std
enter
push
xor
popf
aaa
jmp
in
push
jno
push
jecxz
mov
(bad)
sbb
xor
adc
fmul
outs
push
addr16
jb
push
add
fwait
jl
test
pusha
pushf
cs
pmulhw
sbb
pop
scas
mov
ss
xchg
(bad)
and
shr
or
in
inc
popf
aam
add
sbb
mov
(bad)
inc
repz
or
cmp
xor
ins
push
call
sbb
inc
stc
jmp
inc
xchg
mov
out
jmp
repz
xlat
test
(bad)
call
cld
dec
scas
xor
cld
jg
cmps
pop
mov
fisubr
cmc
or
lods
fsub
test
mov
loope
mov
inc
ds
mov
in
dec
sub
movs
sahf
jo
jae
lods
and
in
scas
mov
arpl
push
daa
pop
jg
ja
sub
sub
aaa
mov
fnstenv
gs
sub
fwait
fs
repz
jmp
mov
stos
leave
jnp
inc
popa
dec
popa
jnp
fisttp
sub
fcomp
cli
fs
pop
scas
and
repnz
fisubr
jl
jmp
or
cmp
or
loope
sbb
inc
imul
call
and
add
jns
add
je
add
lahf
sub
push
out
mov
cmps
jb
pop
fsub
movs
aas
inc
js
scas
sbb
and
mov
sbb
adc
push
jg
sbb
sbb
repz
in
inc
stc
and
xchg
mov
pop
sbb
std
cmp
jae
jns
scas
jnp
popa
fcomip
fimul
fisub
jp
fwait
mov
sub
and
fimul
push
jp
call
push
rcl
(bad)
push
lock
gs
sub
aad
jb
ret
icebp
mov
aam
sbb
ins
popa
in
fcmovbe
lods
or
lods
into
dec
inc
stc
adc
inc
mov
add
dec
and
nop
(bad)
jbe
push
mov
sbb
and
push
jae
pop
pop
inc
cs
adc
sbb
out
push
mov
inc
out
jge
addr16
or
mov
pop
ret
scas
and
int
dec
jmp
arpl
pop
dec
aam
adc
fadd
cmp
mov
cmp
push
mul
adc
ja
sbb
cdq
ficomp
enter
and
xchg
movs
push
push
or
ins
(bad)
imul
xor
(bad)
jmp
xlat
enter
call
mov
and
mov
ret
les
xchg
xor
sbb
dec
out
inc
xor
(bad)
js
mov
mov
les
and
adc
add
xor
call
ins
ja
pop
test
aad
fcom
das
mov
inc
ret
mov
adc
arpl
test
test
movs
pop
(bad)
test
xchg
mov
scas
enter
aam
mov
ss
push
and
pop
das
(bad)
or
cwde
popa
cmp
sub
xchg
mov
pop
std
(bad)
jmp
sahf
sbb
loop
sar
push
stc
pop
cmps
dec
loope
repz
(bad)
hlt
outs
call
mov
call
or
out
int
or
ins
call
dec
xor
push
retf
out
fisttp
inc
mov
cs
xlat
nop
movs
sbb
repz
xchg
adc
fldcw
inc
jmp
sub
mov
inc
jecxz
adc
add
je
jb
pop
inc
aaa
repnz
sbb
xchg
sbb
int
xor
leave
sbb
jae
cmp
outs
adc
stc
jmp
movs
imul
pop
mov
push
(bad)
adc
push
push
addr16
adc
cmps
mov
data16
cwde
push
mov
adc
or
jp
es
xchg
pop
pminsw
add
sbb
pop
(bad)
mov
xor
and
ins
sub
mov
lds
mov
dec
ror
sbb
cmc
push
scas
cmp
add
aaa
retf
in
(bad)
inc
mov
push
pop
iret
mov
lock
add
cmps
repz
lods
adc
and
mov
or
xchg
xor
mov
add
push
mov
push
sbb
cmp
jns
aad
movs
fwait
scas
add
sub
rcl
add
or
lds
cmp
mov
je
sbb
cmps
adc
sub
jno
push
xor
pop
cmc
cmp
popf
xchg
scas
cmp
dec
sbb
mov
jge
fidivr
inc
adc
dec
mov
outs
inc
push
je
sbb
inc
pop
push
xchg
(bad)
ins
std
mov
and
cmp
dec
xor
fimul
add
pop
(bad)
retf
sar
inc
mov
ret
xor
loop
sbb
add
and
xor
push
retf
stos
sahf
xchg
or
mov
inc
dec
mov
stos
jmp
mov
sbb
pop
dec
int3
cwde
gs
adc
sti
nop
out
inc
cmp
cdq
ss
xchg
inc
and
or
mov
fiadd
jge
xchg
jle
sbb
jmp
sbb
lock
jmp
pusha
and
stos
das
mov
inc
iret
fwait
xchg
jo
int3
(bad)
repnz
or
dec
les
loop
mov
daa
nop
dec
leave
sbb
daa
jne
xor
data16
adc
xor
pop
into
in
jmp
mov
movs
test
mov
cmc
js
aam
fnstcw
sub
fist
mov
pop
enter
test
lock
stos
aam
or
jmp
or
iret
pushf
jmp
pop
push
adc
fisubr
push
mov
call
les
div
jo
mov
mov
xchg
cwde
je
dec
(bad)
lahf
lea
mov
clc
fwait
push
es
dec
xor
pop
stos
je
or
es
loop
jmp
add
dec
out
nop
jno
outs
call
cmps
sbb
(bad)
sbb
push
inc
cli
mov
xchg
cmps
mov
mov
inc
(bad)
loopne
sbb
scas
call
or
push
xlat
das
ror
push
mov
or
xchg
xlat
rcl
jnp
mov
je
push
idiv
mov
add
mov
mov
dec
xchg
add
dec
xor
dec
aas
sub
jno
add
mov
pop
ds
push
jg
push
cdq
fst
aam
pop
cmp
dec
(bad)
xchg
fistp
stos
mov
sbb
push
push
ins
add
gs
adc
scas
sub
stos
enter
loopne
hlt
lahf
shl
sahf
xchg
mov
out
jmp
and
mov
loopne
bound
in
and
das
jle
test
pop
sbb
enter
xor
loop
loopne
bound
push
and
stos
xor
shl
mov
or
rol
mov
xor
push
jge
outs
sbb
call
sbb
sub
mov
inc
xchg
xlat
call
jmp
add
sbb
xor
add
retf
cmp
or
hlt
cmp
jge
mov
inc
xor
enter
mov
sub
nop
iret
jmp
mov
call
mov
jns
nop
ss
dec
mov
cmp
rcl
cmps
push
pop
xor
add
pusha
mov
mov
mov
(bad)
sti
jnp
int
out
std
(bad)
daa
fisub
jp
retf
push
repnz
pop
lds
rol
and
xor
into
scas
out
cmp
sbb
push
daa
popa
mov
mov
out
jae
imul
mov
call
test
jb
addr16
rol
adc
mov
(bad)
or
shl
sub
pop
outs
add
popf
xor
lods
nop
push
mov
xchg
call
ins
adc
outs
mov
inc
test
in
jge
mov
stos
sub
cld
sti
aas
lods
test
bound
iret
loope
cmc
jae
mov
pop
xlat
rcl
shr
ret
daa
(bad)
sub
jno
dec
rcl
and
jo
jmp
pushf
sub
mov
or
das
sub
jae
ret
pop
fstp
fild
lods
stos
xor
stc
retf
jge
cmp
cmp
lahf
fs
xchg
shr
test
arpl
loopne
sub
mov
shr
mov
inc
xchg
adc
(bad)
jl
aas
mov
test
int3
js
sub
test
push
cmp
xchg
fstp
cli
jno
pop
or
dec
pop
mov
(bad)
cld
sti
pop
jne
test
int3
xlat
jnp
add
pop
addr16
push
cld
push
inc
inc
push
push
outs
out
or
outs
xchg
cmp
mov
ins
ins
psraw
scas
add
dec
add
jle
xor
add
add
push
sbb
rcl
pop
shl
icebp
test
xchg
jl
(bad)
dec
cmp
pop
mov
aam
pop
test
repz
dec
and
jnp
loop
push
pusha
sub
jnp
scas
cmps
cmc
sar
stos
call
xor
mov
outs
retf
xor
gs
sub
xor
aas
mov
(bad)
mov
jmp
ret
iret
push
push
mov
push
imul
lea
lods
cmps
dec
fiadd
enter
xchg
test
ins
fwait
pop
sar
rcr
cmp
push
add
mov
mov
push
retf
fsub
jl
mov
mov
aas
jp
xor
jecxz
sti
pushf
jne
dec
pusha
sub
popfw
inc
fwait
das
scas
jecxz
inc
or
sub
xchg
loope
sub
mov
cmp
xor
aam
pusha
mov
test
ins
mov
cmp
shr
jbe
jno
push
push
mul
and
cmps
ins
leave
pop
iret
(bad)
jg
mov
pop
outs
shr
sub
inc
jns
int
pop
cdq
fsub
mov
dec
add
mov
adc
fs
ins
jmp
cmp
cmps
cli
or
std
jno
pop
dec
gs
popf
ret
test
in
xor
ins
sub
repnz
pop
ins
adc
movs
adc
movs
aam
gs
not
sub
rcl
mov
mov
addr16
jno
movs
arpl
pushw
out
aad
xor
dec
lock
pusha
jg
xchg
addr16
retf
jo
mov
cs
sbb
push
aam
xchg
sub
cmps
jle
or
mov
jno
emms
cmp
pop
mov
gs
(bad)
sbb
stc
in
push
call
mov
jb
cmp
inc
pop
gs
ins
fstp
shl
sbb
nop
xchg
jl
fmul
cld
sar
call
fcom
cmps
sahf
test
mov
push
cmp
dec
push
mov
mov
sbb
loope
lods
jno
mov
mov
push
ds
pop
inc
adc
fs
push
mov
and
mov
test
jmp
in
xor
push
jne
fld
mov
in
stos
fisub
bound
pop
or
ret
jb
xchg
stos
adc
or
or
push
mov
adc
push
pushf
add
in
out
arpl
pop
adc
outs
cmps
jmp
dec
and
mov
mov
xchg
in
sti
dec
or
pop
aaa
lods
jae
mov
aas
dec
(bad)
cmp
cmp
pop
(bad)
dec
in
jg
hlt
add
or
imul
es
mov
xor
imul
mov
push
test
dec
daa
adc
mov
cmp
std
add
scas
(bad)
push
sub
sar
shl
mov
jle
(bad)
sbb
mov
in
jo
inc
repnz
pop
or
dec
aad
push
or
out
adc
push
popf
mov
jns
jmp
xchg
xor
mov
pop
(bad)
and
stos
js
push
mov
ja
into
je
in
jecxz
push
and
ret
jge
inc
es
add
adc
outs
sbb
dec
in
and
dec
loopne
dec
and
push
xor
push
sub
in
dec
mov
loope
and
cmp
ins
mov
add
js
cmp
cmp
inc
mov
repz
icebp
mov
cmp
jle
cld
cs
xchg
fnstenv
imul
fbld
icebp
mov
pop
aad
push
jl
(bad)
lea
inc
pop
call
pop
adc
xchg
fisub
adc
add
xchg
dec
mov
adc
retf
xchg
xchg
mov
mov
push
mov
dec
(bad)
fld
int3
fisub
mov
pop
bndldx
mov
mov
jmp
das
xlat
cmp
pusha
and
test
sbb
inc
stos
lock
adc
add
xchg
lods
sub
adc
sub
je
mov
add
mov
or
jne
ficom
in
(bad)
adc
jae
jbe
push
push
arpl
mov
pop
xchg
aam
popa
add
adc
std
lahf
rcr
pop
cmc
jbe
ds
outs
test
mov
push
pop
inc
jmp
mov
ins
mov
pusha
ja
cmp
jnp
inc
xchg
xor
and
mov
add
into
xchg
daa
push
stc
call
mov
pop
mov
(bad)
xor
retf
out
and
xor
test
sbb
adc
aam
je
outs
rol
sub
test
adc
add
push
mov
xlat
call
and
mov
and
test
leave
push
leave
sbb
push
into
arpl
mov
add
inc
test
jns
mov
mov
lea
retf
sub
loope
out
repnz
std
mov
pushf
(bad)
mov
aad
dec
mov
mov
js
mov
mov
scas
xchg
and
repz
add
les
ss
xchg
xchg
xor
and
ds
(bad)
popf
daa
data16
sbb
fiadd
xchg
push
jno
dec
cmps
inc
cmp
inc
mov
rcr
xchg
mov
and
mov
clc
and
mov
out
clc
test
aas
dec
jno
mov
ins
cmp
pop
fisttp
loop
call
sub
lds
aaa
adc
xchg
fldcw
lods
pop
sub
fimul
arpl
repz
sub
push
and
ins
fidiv
xchg
scas
call
fidiv
sub
fild
(bad)
jecxz
add
dec
cmp
jnp
icebp
leave
sbb
inc
pop
fs
adc
inc
pop
xor
in
push
es
test
mov
jb
push
inc
mov
aad
cmp
lock
pop
(bad)
aad
add
retf
std
and
loope
push
push
fisttp
add
imul
inc
aaa
or
test
jae
cmp
cld
pop
sar
push
addr16
push
mov
xchg
dec
scas
scas
sub
or
cmp
xchg
dec
or
imul
cli
imul
lds
and
mov
clc
mov
or
add
jmp
jl
ins
test
ins
push
jne
cmp
mov
xchg
outs
mov
mov
stos
xchg
stos
jo
dec
enter
adc
jnp
cmp
lods
bound
push
mov
xor
push
out
lds
shl
inc
push
push
addr16
dec
cmp
jmp
cld
jnp
scas
mov
or
loope
ror
dec
dec
adc
inc
call
jns
jmp
dec
pop
pop
and
out
cmp
popa
mov
adc
popf
loope
sahf
adc
daa
lahf
mov
inc
sbb
jns
cs
test
mov
scas
rcr
popa
adc
gs
loopne
dec
add
jg
dec
loope
mov
xchg
cli
cmp
inc
stos
dec
lahf
dec
out
pop
xor
scas
pop
dec
loopne
and
in
outs
mov
xchg
xchg
dec
push
inc
cmovs
cld
cmp
push
inc
fdivrp
xchg
movs
popw
lods
xor
cmp
jg
and
hlt
mov
in
mov
adc
popf
(bad)
int3
(bad)
dec
pop
cwde
int
push
outs
and
imul
push
cld
test
jmp
adc
in
add
sub
dec
out
cmps
adc
stos
loopne
adc
retf
fdivr
pushf
dec
adc
add
pop
xchg
jmp
jnp
icebp
adc
sub
scas
jge
cmp
adc
test
mov
jecxz
cs
cwde
cli
leave
dec
dec
lock
(bad)
ffree
dec
enter
iret
inc
fwait
inc
jmp
and
mov
add
fs
add
ret
loop
jle
adc
call
in
sub
lock
jmp
xchg
les
jne
mov
pop
mov
sbb
es
mov
iret
add
or
dec
dec
inc
or
lods
cmp
lods
add
dec
daa
(bad)
cs
push
xchg
lods
pop
add
mov
(bad)
movs
xlat
sub
mov
neg
je
mov
mov
cli
mov
and
cdq
pop
cmp
loope
mov
rcl
js
addr16
iret
scas
ret
jle
sti
pop
nop
stos
popf
mov
adc
add
nop
cmp
cmc
ficomp
adc
scas
dec
push
mov
rol
mov
jg
pop
fcmovbe
dec
in
test
mov
fnstenv
fisttp
push
pusha
lea
dec
cdq
push
xor
movs
(bad)
dec
imul
xchg
sub
or
leave
xor
lods
fldenv
gs
popa
push
sahf
mov
ret
inc
or
stc
push
call
mov
cwde
xlat
inc
mov
ret
pop
test
adc
test
add
pop
sub
jno
push
pop
xor
pushf
mov
mov
jp
or
test
dec
lods
xor
test
imul
imul
xchg
les
into
sbb
sbb
sub
aam
out
imul
sbb
jge
mov
aam
push
adc
cmps
mov
stos
add
pushf
stc
enter
and
cmc
sub
and
push
pusha
jno
nop
shr
outs
pop
(bad)
cmp
int3
jl
call
xlat
dec
sub
cmp
and
in
xchg
sbb
pop
push
mov
push
mul
popf
leave
into
in
push
mov
addr16
cmps
add
sbb
mov
rep
push
arpl
mov
jecxz
shl
psubsb
ja
inc
jle
mov
pop
int3
retf
nop
das
aad
data16
sbb
fidivr
and
jns
mov
or
xchg
cli
imul
mov
cmp
cmps
inc
lods
or
cmp
movs
xor
push
mov
mov
xchg
pop
xchg
inc
call
ror
push
sbb
mov
and
jg
push
push
lock
inc
push
fimul
mov
mov
lods
mov
adc
popf
push
rol
mov
or
xchg
(bad)
mov
adc
ja
shr
test
fiadd
add
cli
inc
popf
nop
sub
inc
repz
mov
adc
sbb
or
sbb
imul
add
mov
neg
sub
push
and
(bad)
loop
jl
xchg
out
mov
push
out
and
push
cmps
(bad)
jl
ss
fisubr
jmp
add
mov
std
dec
cmp
and
call
or
lods
rcr
es
retf
add
ins
ret
cmc
call
add
in
xchg
add
cdq
push
outs
aam
jmp
sti
cli
retf
in
add
loopne
or
sbb
add
xchg
cmp
or
out
jge
in
les
rcl
add
inc
push
jmp
mov
cmps
mov
jecxz
lock
fwait
mov
adc
fcom
push
sbb
fcomi
lock
xor
cmp
mov
and
add
repz
ins
outs
dec
das
inc
mov
jmp
mov
adc
retf
mov
(bad)
adc
stos
pop
fidivr
gs
int3
into
inc
int
stos
and
xlat
aam
xor
enter
cmps
and
inc
inc
test
cmc
add
xor
or
mov
test
pusha
repnz
fiadd
dec
daa
or
movs
pop
jmp
adc
mov
mov
xor
mov
stos
aam
loop
nop
aas
add
call
ja
int
aad
push
jmp
daa
(bad)
mov
inc
cld
sbb
jnp
out
test
out
addr16
inc
jl
and
ja
sar
retf
fmul
jbe
popf
idiv
nop
xchg
jecxz
pop
add
push
dec
jle
mov
inc
jo
mov
mov
add
loopne
loope
pop
test
into
cmp
adc
stos
or
or
mov
in
cdq
lods
ss
icebp
mov
and
movs
bound
loope
mov
push
mov
push
adc
inc
adc
je
dec
xor
movs
jne
dec
xchg
add
clc
sbb
or
sub
jle
shr
lea
cmp
inc
mov
cmp
clc
push
inc
div
mov
fisub
cwde
dec
cmp
ror
out
push
out
cmps
push
and
adc
faddp
mov
mov
ds
inc
push
mov
push
adc
imul
mov
sar
dec
adc
sbb
clc
neg
outs
in
cmp
mov
sbb
ja
and
sbb
push
mov
sub
rep
cdq
xor
mov
push
jns
int
cmp
add
cdq
add
stos
jle
push
lock
cmp
shl
sub
mov
pop
iret
addr16
dec
fldenv
jae
mov
loopne
pop
test
pop
inc
mov
pop
hlt
ds
mov
mov
popa
and
xor
and
(bad)
mov
or
jbe
push
pop
cli
sbb
mov
xor
mov
aad
addr16
lahf
mov
sti
daa
jae
cs
jne
jmp
sub
fiadd
mov
push
add
fidivr
mov
mov
cwde
xchg
fs
lods
adc
js
inc
add
dec
jae
dec
inc
movs
mov
lahf
fs
cmp
fistp
pop
gs
push
pop
dec
xor
and
div
rcr
sbb
mov
inc
mov
dec
add
or
mov
test
cmps
(bad)
jl
and
movs
call
mov
and
mov
ja
add
in
imul
ins
push
fld
cmp
mov
and
jmp
pop
stos
pop
cmc
sub
xor
mov
and
lds
frstor
xor
nop
cmp
ins
inc
inc
xor
inc
mov
dec
cld
out
or
xchg
or
push
add
fimul
pop
sub
push
out
sub
aas
jge
enter
outs
sbb
xor
mov
push
push
ja
mov
sbb
test
and
retf
push
fidivr
xor
call
ins
stos
les
inc
inc
pop
iret
mov
movs
ja
or
pushf
xchg
sbb
push
stos
cmp
mov
scas
jmp
mov
cwde
inc
cli
sub
jmp
push
adc
cwde
pop
xor
xlat
cmp
aad
cmps
or
jl
push
stos
sub
aaa
jmp
into
mov
inc
std
mov
ins
jne
in
in
jl
jle
stos
jmp
sti
out
lods
xchg
mov
pushf
pop
hlt
imul
or
or
jnp
leave
pop
mov
mov
jp
cmp
mov
setge
xchg
in
in
lods
cld
ss
aad
dec
pop
or
or
pop
stos
mov
(bad)
call
sar
xchg
sub
xor
xchg
mov
repnz
test
xor
dec
sub
movs
movs
mov
icebp
sbb
push
xor
push
retf
ja
jnp
sub
lods
outs
aas
dec
dec
or
or
xor
mov
and
rcl
cmp
lods
ret
sti
jmp
cmps
mov
test
mov
jns
or
leave
in
adc
dec
mov
scas
jecxz
dec
mov
push
imul
jb
adc
iret
push
cdq
sbb
aam
clc
mov
cmp
add
in
fsub
and
dec
fs
ret
bound
pop
int3
mov
out
dec
jns
mov
cs
lods
mov
adc
dec
mov
fld
cmp
xchg
sub
icebp
loope
inc
mov
push
shl
test
ror
jno
je
sbb
pop
adc
adc
imul
rol
mov
mov
js
xchg
mov
push
aad
xchg
cmp
adc
movs
mov
xchg
push
and
mov
outs
cmp
inc
xor
add
nop
int3
pusha
fadd
jl
or
adc
mov
cmp
nop
or
mov
mov
cld
xchg
add
ret
dec
push
(bad)
iret
pop
xor
sub
sahf
inc
and
in
xchg
and
fild
rcr
xchg
xchg
shr
adc
pop
jmp
test
jo
inc
add
cdq
or
(bad)
(bad)
jmp
push
push
loop
(bad)
sbb
push
arpl
sub
push
mov
(bad)
add
outs
sbb
(bad)
push
pop
add
mov
mov
mov
mov
movs
dec
sar
xor
lods
inc
das
push
bound
push
lock
cmp
and
dec
dec
lods
aam
xchg
fnstcw
stos
fwait
sub
push
loope
pushf
hlt
repnz
es
jb
hlt
cmp
das
ror
fnstenv
push
jle
popf
cmp
jae
sbb
sahf
in
imul
cmp
test
fwait
enter
lods
pop
jns
popa
pop
pop
test
test
lods
lds
adc
lock
addr16
fisttp
test
fidivr
sub
dec
in
mov
test
cdq
sub
cmps
and
xor
(bad)
js
fldl2t
sti
pop
es
push
jge
push
daa
cmps
rcl
or
dec
cmp
iret
aam
enter
shl
ja
pop
lock
jge
mov
in
inc
mov
cmps
inc
jno
and
shr
inc
jo
dec
cmps
popa
pushf
cmps
repnz
bound
adc
and
loop
sbb
cmp
jno
cmp
stos
hlt
xchg
xchg
adc
ss
lea
dec
mov
rcr
jmp
shl
sti
add
sub
sbb
inc
push
out
repz
jecxz
sbb
cmps
fbstp
leave
shl
jns
repz
inc
lods
cwde
xchg
out
xor
nop
fcom
lds
sbb
aam
jmp
jecxz
dec
jno
out
mov
into
or
xor
xchg
jl
adc
cmp
js
mov
push
aam
aaa
std
inc
ins
dec
mov
inc
cmps
fadd
add
rcr
(bad)
ja
dec
in
lods
push
aaa
inc
push
imul
or
cmp
fwait
and
dec
jne
push
jg
(bad)
fisub
loopne
jge
and
daa
jne
aad
inc
ror
pop
cmps
and
test
rol
imul
neg
pop
loopne
(bad)
cdq
movs
xchg
xor
pop
adc
into
xchg
in
outs
adc
dec
data16
lods
stos
shl
pop
xchg
fsubp
xlat
adc
fldcw
jb
sbb
in
xchg
jmp
dec
mov
jmp
(bad)
stos
call
dec
mov
mov
dec
shl
and
call
sub
inc
enter
hlt
mov
movs
add
pop
(bad)
add
xor
and
mov
fnstcw
in
enter
ss
xor
int3
sbb
pop
mov
mov
rol
push
cwde
mov
jno
xchg
sbb
xchg
shl
add
loope
pusha
imul
loop
(bad)
ds
jecxz
mov
loope
cmovs
sahf
rol
push
rcl
push
adc
inc
add
into
(bad)
jmp
out
or
push
push
inc
mov
(bad)
mov
fstp
xchg
jno
sub
pop
aas
hlt
aaa
daa
shl
sub
out
ret
pop
mov
jne
mov
leave
shl
cld
push
bound
ja
stos
jl
cdq
jecxz
std
rol
not
popa
scas
fisttp
jecxz
(bad)
lods
test
rcr
icebp
add
arpl
(bad)
mov
inc
xchg
arpl
(bad)
stos
sbb
clc
inc
js
popf
out
adc
lahf
cli
retf
(bad)
sbb
je
stos
loopne
loop
stc
bts
lods
xchg
cmps
push
dec
xlat
cdq
popa
je
mov
sbb
shr
lock
sbb
xchg
cmp
popa
movs
retf
adc
out
shl
add
mov
leave
dec
nop
pop
inc
adc
inc
in
je
ja
rcr
in
or
stos
add
xlat
(bad)
int
mov
fucomp
cmc
cli
aas
adc
and
dec
out
mov
and
int
sbb
sub
dec
rcr
repz
jge
iret
in
aas
test
push
add
mov
mov
mov
lahf
ins
das
cmp
imul
aad
mov
ins
dec
cld
das
fs
sub
mov
cmp
sub
pop
mov
in
ins
jmp
adc
ret
(bad)
jl
push
fnstenv
scas
mov
xsha256
cmps
push
sub
jbe
mov
fild
ret
inc
je
cmp
(bad)
nop
dec
test
cmp
movs
xor
enter
scas
inc
jbe
mov
cmp
sbb
adc
fcmove
add
inc
inc
cdq
jg
add
or
cmc
xchg
push
in
push
test
loopne
outs
mov
lea
arpl
jge
mov
addr16
mov
in
(bad)
in
xchg
mov
scas
jmp
pushf
push
mov
xchg
sbb
mov
pushf
dec
xor
(bad)
jge
test
inc
mov
xor
sahf
fild
jb
mov
jecxz
adc
fwait
out
dec
mov
rol
les
arpl
mov
inc
sbb
mov
mov
call
cld
mov
jb
push
jns
push
in
push
xor
lds
ret
mov
or
aam
or
jle
fisubr
loope
cmp
sub
in
es
mov
push
pop
jns
adc
std
dec
(bad)
cmp
lds
and
or
adc
div
es
mov
into
nop
xchg
xor
out
div
inc
lods
xor
mov
mov
xchg
xor
fwait
scas
ret
ins
outs
fisttp
sub
lahf
iret
push
mov
jae
inc
mov
repnz
push
test
pop
dec
xchg
sahf
cmps
bound
or
cmp
leave
in
push
adc
lahf
test
sub
imul
add
adc
(bad)
dec
xchg
push
imul
dec
pusha
jp
or
aaa
sbb
push
pop
dec
xchg
pop
test
pop
cmp
das
adc
adc
jle
jbe
mov
adc
loop
mov
out
xchg
xchg
mov
das
and
or
sub
lock
add
(bad)
or
pop
jo
lahf
jmp
jne
push
dec
es
sub
ret
and
adc
and
mov
hlt
scas
jl
ins
jnp
inc
inc
fidiv
xor
in
in
test
clc
mov
push
fadd
cmp
mov
stos
pop
mul
sub
arpl
push
or
xchg
xor
lock
xchg
cmps
jns
outs
mov
jne
retf
dec
xchg
xchg
adc
adc
call
shl
dec
pop
(bad)
cmps
dec
(bad)
xchg
ficomp
das
imul
and
fcmovnb
cs
cmp
js
sahf
pop
(bad)
rcr
pop
ret
(bad)
and
clc
iret
retf
ins
movs
lds
cmp
ins
lods
shr
sbb
inc
loope
lods
data16
ret
adc
mov
in
push
push
fs
aas
add
scas
cmc
out
pop
mov
lods
pushf
clc
pop
push
or
shr
shl
in
mov
inc
lods
inc
dec
or
std
jns
in
cmps
jns
fstp
push
jnp
mov
add
mov
mov
hlt
sbb
pop
sahf
in
and
sub
imul
cld
in
and
and
retf
int
push
(bad)
std
icebp
or
pop
nop
sub
fcomp
mov
dec
sbb
adc
mov
and
std
mov
and
lods
mov
(bad)
adc
mov
or
cld
push
dec
fs
sbb
add
ss
jmp
loope
jle
movs
nop
test
xchg
lods
cmps
pop
shr
icebp
cld
test
mov
push
sbb
jnp
mov
cs
in
shr
pop
test
cmc
das
mov
dec
sbb
push
adc
xor
iret
aas
movs
mov
jle
xor
in
sbb
or
data16
retf
cld
push
or
dec
mov
adc
out
jns
stos
jmp
jbe
push
retf
mov
adc
sbb
or
dec
cmps
sti
lods
add
stos
test
js
jae
mov
jg
lahf
js
ja
inc
(bad)
sahf
add
div
popa
mov
leave
into
mov
cli
jmp
and
scas
(bad)
xchg
loope
or
push
lods
dec
jne
shl
xchg
jmp
aaa
mov
mov
pop
das
aas
daa
out
xor
scas
cld
jno
sub
outs
aas
push
mov
addr16
loop
loopne
scas
push
cdq
out
adc
test
add
sub
lods
fldpi
mov
and
jecxz
push
add
xchg
ficom
popf
pop
inc
imul
lods
and
sar
pop
cmp
dec
pop
mov
sub
adc
add
add
(bad)
mov
dec
sbb
or
cmps
mov
push
inc
jo
sbb
ja
(bad)
jmp
cmp
xchg
outs
outs
test
mov
call
cmp
cmp
pop
dec
sub
cmp
or
daa
ins
neg
cs
scas
pop
cmps
or
pop
add
jno
jns
in
xor
in
and
inc
das
inc
mov
ss
aas
mov
add
enter
lods
int3
idiv
pop
jae
sub
mov
dec
std
cmp
out
mov
loop
mov
mov
or
xor
in
inc
dec
dec
cmps
(bad)
scas
ror
sbb
movs
sub
xor
lock
inc
aaa
adc
dec
in
sbb
(bad)
arpl
fbld
mov
add
and
daa
xor
sbb
mov
mov
clc
pop
fwait
neg
push
xchg
lock
xor
into
jno
ror
xor
or
mov
push
in
jmp
mov
mov
mov
popa
cmp
movs
retf
sahf
jge
dec
aas
cmc
xor
scas
rcr
das
popa
xchg
stc
hlt
push
mov
out
dec
xchg
jge
fdivp
cmps
ret
fs
push
cld
sbb
nop
sub
push
push
fidivr
jl
xchg
mov
and
xlat
or
pop
fidivr
icebp
addr16
mov
inc
shl
ret
(bad)
fnstsw
clc
and
sbb
repnz
dec
add
jge
imul
cld
push
out
(bad)
hlt
cwde
mov
data16
mov
sub
call
icebp
or
mov
(bad)
push
sbb
mov
mov
mov
setle
push
js
call
lods
out
dec
jmp
repnz
xchg
adc
and
lods
movs
inc
fs
jne
xor
mov
loopne
mov
mov
jl
jno
xchg
nop
mov
icebp
fadd
int
xchg
or
jne
bound
pextrw
inc
jg
push
xchg
sub
mov
mov
in
in
lods
sti
mov
enter
call
fcmove
mov
call
imul
or
movs
and
(bad)
fs
xchg
pop
fidiv
pop
cmp
sbb
pop
fbstp
jns
push
test
dec
push
and
mov
sbb
(bad)
aaa
addr16
shl
les
push
dec
cld
inc
adc
add
pop
imul
int
cdq
mov
fisubr
or
fsubr
xor
xchg
mov
cmp
inc
mov
sub
test
(bad)
xchg
and
sub
mov
sub
sbb
dec
fisub
jg
mov
dec
pop
pop
push
xchg
mov
movs
out
data16
dec
xlat
push
sti
test
sub
cld
cmp
repz
in
inc
push
and
scas
stos
fisub
movs
pop
lods
jmp
dec
pop
adc
in
stos
ins
data16
or
(bad)
dec
mov
fistp
in
push
rcr
int3
xor
xchg
das
fcom
fcom
stos
lahf
bnd
push
(bad)
(bad)
mov
stos
cmp
pop
sbb
mov
adc
add
mov
js
in
repnz
mov
jmp
mov
inc
(bad)
test
test
lock
xchg
push
mov
test
cmc
jo
outs
inc
mov
sub
ret
push
or
shl
jecxz
and
int3
xor
retfw
ja
xchg
xlat
or
clc
mov
ret
pop
iret
jae
adc
sub
push
cld
popa
dec
pop
fist
xor
je
inc
mov
dec
movs
sbb
lds
icebp
retf
movs
mov
push
outs
add
iret
das
outs
jns
sti
jmp
icebp
(bad)
fs
std
pop
loop
sbb
sub
in
add
pop
loopne
pushf
mov
mov
aam
data16
sbb
jmp
xchg
sar
stos
jb
pusha
pop
pop
xor
pop
dec
aas
add
cmp
push
rcl
ss
scas
bound
push
cmps
xor
loope
out
mov
mov
push
cwde
or
jbe
pop
(bad)
push
in
loop
jge
into
bound
sbb
lea
or
clc
pushf
pushf
jb
div
xchg
shl
stc
stos
inc
cmp
mov
arpl
mov
xchg
clc
mov
pop
dec
jmp
mov
xchg
imul
mov
(bad)
jmp
pushf
rol
mov
aaa
push
out
cld
out
sahf
fcmovu
inc
and
(bad)
sbb
cmp
test
je
idiv
call
fsub
adc
mov
push
dec
mov
je
jns
(bad)
loope
out
xchg
test
test
jo
das
in
test
stos
push
fiadd
leave
es
scas
(bad)
xor
mov
fiadd
inc
fst
ret
sub
cmps
fidiv
rcr
retf
inc
stos
(bad)
mov
adc
sbb
mov
xor
cs
fmul
xor
adc
loopne
inc
(bad)
data16
dec
mov
bound
into
ret
sbb
adc
mov
jp
jge
not
int3
mov
xchg
pop
pop
mov
and
popf
cmc
xor
leave
aas
pusha
xchg
shl
scas
and
int3
xor
xor
cmp
push
push
loopne
cmp
dec
jno
adc
lods
dec
pop
lea
test
fldcw
dec
xchg
out
adc
mov
inc
cmp
call
loopne
sbb
ret
cmc
cld
stc
test
xchg
sub
dec
sti
fldcw
push
pop
das
cld
xchg
cmps
and
stos
rep
xor
cmps
jno
rol
mov
and
loopne
and
retf
fcmovu
sti
mov
movs
xor
(bad)
jmp
add
enter
sub
mov
push
or
fist
mov
cs
or
xor
ss
mov
cmps
cmp
and
mov
(bad)
mov
loop
sti
xchg
xchg
or
xchg
data16
mov
cwde
inc
xchg
lods
cld
push
rol
jmp
pop
pop
stos
and
outs
call
push
mov
lods
fld
test
retf
or
shl
in
(bad)
adc
cmp
popa
repnz
aas
repz
sbb
cmp
subps
jo
ins
pop
call
(bad)
ror
call
(bad)
cmp
popa
fist
dec
stos
push
hlt
not
and
mov
cwde
add
dec
mov
dec
jge
and
jl
rol
fnstcw
mov
shr
and
push
das
push
call
dec
les
mov
xor
sar
cmp
push
pop
add
adc
push
mov
call
add
(bad)
sub
(bad)
pop
inc
mov
adc
std
jno
lods
inc
push
in
mov
psrlw
cs
and
arpl
jle
hlt
std
jo
pop
cwde
xchg
dec
inc
sbb
push
mov
lods
adc
shl
fs
xchg
jmp
retf
mov
enter
or
add
sbb
enter
xchg
out
mov
aam
inc
aam
dec
jmp
mov
jb
jb
in
icebp
mov
push
addr16
in
jle
les
mov
push
sub
inc
xor
ja
(bad)
fcomip
das
int
popf
sub
xchg
(bad)
pop
div
sub
out
add
std
mov
xchg
mov
pop
in
loopne
pop
mov
cmc
jo
push
pop
stc
xor
enter
jmp
int
cmp
add
cmp
adc
adc
mov
fdivr
push
ficomp
jge
or
cmp
mov
loope
xchg
dec
sbb
and
or
scas
jnp
xchg
xchg
outs
fnstsw
and
scas
test
xchg
jmp
fwait
iret
push
cmp
in
repz
retf
pop
ds
xchg
dec
sbb
mov
inc
push
gs
sahf
ins
push
push
cdq
outs
daa
push
repz
dec
adc
or
sbb
cmc
dec
pop
ret
push
test
sbb
add
inc
and
ret
cmp
jmp
outs
loope
addr16
scas
call
cmps
stc
loop
stos
dec
fcomp
sahf
jl
mov
inc
inc
lods
cmp
cmp
pop
adc
push
addr16
test
sub
mov
or
mov
out
xchg
shl
adc
idiv
jecxz
sub
push
and
out
or
test
jns
pop
cmp
jmp
int
(bad)
out
xchg
xchg
sbb
push
inc
xor
popa
cld
mov
adc
and
pop
xchg
ret
pop
stos
and
inc
inc
inc
mov
in
mov
mov
iret
outs
pushf
fiadd
jge
ins
rcr
push
push
sub
and
mov
pushf
pop
add
push
jle
ins
idiv
xor
(bad)
sub
sti
repnz
pop
outs
dec
sahf
adc
js
and
loopne
pop
data16
pop
mov
lods
mov
cmp
fist
in
repnz
cld
mov
push
pop
(bad)
jle
loop
cmp
sbb
xchg
sub
aas
jne
mov
test
mov
push
sub
mov
jge
fnsave
dec
mov
and
push
xlat
mov
push
or
inc
mov
jo
add
cmp
imul
dec
jp
mov
dec
jbe
imul
fcom
xchg
xor
pop
inc
adc
fcmovnb
jle
std
mov
in
in
adc
pop
adc
ret
jge
aas
xchg
push
cmp
fisub
xchg
or
sbb
adc
mov
dec
sub
add
iret
mov
jp
lods
out
xlat
imul
icebp
push
and
loopne
out
xor
mul
push
mov
sbb
mov
xor
dec
iret
loope
xchg
stc
inc
dec
mov
xchg
mov
movs
cdq
push
or
pop
pop
and
inc
push
push
pusha
push
mov
movntq
xor
test
iret
dec
bound
js
bound
jns
or
(bad)
mov
stc
fwait
pusha
mov
or
mov
adc
add
jnp
dec
or
outs
push
mov
pop
mov
sbb
cmc
push
fld
adc
mov
xchg
shl
cmp
scas
mov
mov
ins
add
clc
js
pop
frstor
inc
inc
pop
aam
xchg
mov
hlt
push
std
sub
out
mov
out
pushf
sbb
ss
xchg
ret
mov
add
retf
imul
or
and
push
dec
lock
test
lock
jmp
or
mov
(bad)
adc
dec
or
(bad)
fsubr
dec
pop
fisub
or
clc
mov
sbb
js
out
cmp
add
sub
fnstsw
retf
movs
xchg
pusha
bound
xor
out
test
sub
adc
bound
test
mov
in
mov
jnp
je
xor
std
hlt
iret
jns
cmps
inc
cwde
push
push
xchg
pop
jmp
out
and
test
mov
mov
(bad)
std
pop
hlt
lods
test
mov
repnz
dec
repnz
jae
shr
das
call
dec
xor
shl
enter
sub
pushf
test
vsubss
rcr
call
std
sub
scas
test
ss
cli
add
jge
call
pop
xor
dec
movs
clc
mov
mov
xchg
or
pusha
add
xchg
dec
pop
pop
sub
push
push
ja
dec
leave
dec
icebp
lods
pop
xlat
xchg
xor
aad
dec
sub
iret
and
xor
sbb
lock
jge
xchg
loope
inc
dec
shl
lock
daa
addr16
push
repz
les
(bad)
or
fadd
mov
or
mov
outs
ss
cmps
mov
cmp
std
movs
fild
inc
push
xchg
jp
jnp
mov
sub
(bad)
xchg
out
call
push
loop
hlt
into
inc
and
or
retf
or
and
jo
jns
rol
inc
xchg
cmp
shr
mov
hlt
adc
rcr
push
adc
jl
in
fnstcw
push
or
arpl
adc
movs
push
ret
retf
fdivr
dec
push
jb
mov
mov
inc
adc
test
ins
outs
dec
fwait
or
adc
scas
loopne
inc
xor
jmp
ins
inc
ja
std
shl
aam
jl
iret
(bad)
pop
jb
push
ret
out
cmp
ret
out
push
(bad)
fcomp
sbb
push
mov
push
cmps
cmp
rcr
push
cmp
mov
cs
test
mov
xor
fimul
mov
enter
ret
enter
lahf
outs
es
xchg
or
inc
adc
(bad)
and
mov
adc
inc
or
xchg
mov
in
add
(bad)
leave
aas
cmps
add
cmps
loopne
(bad)
lock
sbb
mov
mov
das
dec
xchg
pusha
lods
xchg
mov
jns
push
in
cmp
jle
mov
jno
cmps
sbb
add
mov
out
sub
or
fadd
stos
and
push
je
std
aad
or
or
ret
push
lea
gs
(bad)
xchg
sbb
not
xchg
hlt
cmp
inc
std
cld
rol
test
and
cmp
fbld
lock
cmp
add
add
jbe
in
xchg
cmp
cmps
nop
jns
xor
cs
int
ds
push
sbb
xchg
or
js
iret
add
imul
cld
shl
pop
movs
xchg
arpl
std
(bad)
xlat
ins
jbe
loop
pop
arpl
stos
pop
add
jae
aas
es
sbb
jecxz
sti
scas
mov
ss
sbb
imul
cmc
pop
dec
push
sbb
jp
push
or
cwde
push
xor
sub
in
mov
and
cmps
xor
into
xor
push
inc
out
ins
rcr
jg
shr
mov
add
mov
and
adc
(bad)
cli
imul
pusha
fsub
(bad)
jo
out
out
fist
fs
xor
inc
jo
imul
xor
add
sub
pop
adc
pusha
lods
cld
sti
idiv
xor
fwait
popf
xchg
adc
idiv
pop
and
mov
inc
xor
dec
inc
test
push
fldenv
add
sahf
jno
lods
dec
mov
test
add
sub
leave
fisub
inc
adc
fidivr
pop
and
inc
js
sub
sti
test
dec
dec
lods
inc
xchg
fcmovne
inc
daa
call
arpl
daa
sbb
ja
ret
xchg
mov
repnz
int3
jae
inc
and
sbb
mov
aad
jns
jae
in
xchg
(bad)
push
mov
test
cwde
sar
cmps
push
and
popa
pushf
loopne
into
sbb
enter
movs
or
mov
ret
inc
xchg
xor
ja
ror
pop
sub
test
adc
push
or
jae
pop
dec
fst
aaa
add
xor
mov
test
(bad)
pop
and
inc
jg
and
dec
pop
and
xor
test
sti
loope
mov
pop
sbb
popa
push
mov
lea
ss
repz
rcr
dec
ret
pop
inc
outs
pop
scas
movs
dec
ret
enter
popf
sbb
ins
aaa
stos
mov
lea
sahf
test
pop
sub
sub
(bad)
dec
rcl
inc
pop
pop
jbe
mov
xchg
pop
pop
aaa
shr
xchg
adc
xchg
ror
or
or
mov
shl
mov
xlat
daa
gs
call
dec
fcmove
sbb
je
xor
xlat
add
fcomp
in
sub
imul
push
inc
les
pop
into
lods
cmp
mov
pop
imul
adc
sar
xor
jns
push
fwait
mov
sub
call
mov
mov
nop
sbb
pop
and
mov
rsqrtps
or
loopne
retf
inc
nop
jb
xor
iret
ins
aas
xchg
mov
mov
inc
outs
xchg
or
mov
mov
mov
(bad)
daa
sar
or
lods
sbb
std
xchg
fstp
icebp
sub
in
sti
push
bound
cmp
loop
xchg
fstp
(bad)
cmc
bound
mov
test
lock
xor
or
push
ja
mov
cwde
loope
fdivr
(bad)
jge
xor
add
jecxz
cmp
arpl
je
cmp
cdq
lds
mov
dec
ror
adc
inc
movs
pop
cli
add
jmp
bound
add
cmp
imul
movs
push
fcomp
in
lods
xchg
jg
jp
pop
xchg
add
jbe
das
icebp
mov
jbe
push
jge
sbb
sbb
scas
inc
pop
or
(bad)
shl
stc
scas
sbb
or
dec
lods
retf
adc
jns
and
pop
sbb
sbb
imul
jns
mov
inc
or
mov
jne
sbb
push
adc
and
jno
mov
mov
int
jmp
or
call
push
out
pop
(bad)
repz
xchg
cmp
and
pop
pop
pop
ret
stos
lds
pop
jle
cmp
(bad)
pushf
xchg
push
push
xor
and
fwait
repz
(bad)
icebp
jno
adc
leave
xor
sub
mov
dec
sub
or
and
adc
dec
add
jae
xor
jbe
in
addr16
cdq
jp
adc
leave
outs
(bad)
xchg
dec
push
jne
push
xlat
adc
mov
mov
nop
jp
inc
mov
or
cld
test
jge
or
pop
ret
ins
(bad)
cmps
(bad)
js
int3
out
mov
inc
xor
and
(bad)
repz
pop
test
and
movs
les
(bad)
xchg
push
pop
adc
jmp
into
lods
stc
or
aad
xlat
mov
mov
imul
mov
adc
jle
cli
cld
pop
stos
stos
fadd
adc
add
or
sbb
(bad)
add
jae
(bad)
push
loope
clc
pop
sub
pop
dec
out
clc
clc
adc
or
mov
mov
in
sar
fdivr
sub
or
sbb
xchg
ror
jp
cmc
xchg
into
fld
mov
pop
lahf
fld
cmp
jae
xchg
sbb
pop
sbb
dec
fwait
ret
push
push
inc
push
cmp
jmp
jo
sub
sub
cmps
fistp
lahf
fadd
inc
inc
(bad)
push
jmp
fstp
ret
pop
pushf
xchg
(bad)
js
xchg
or
out
mov
or
aaa
cmps
call
shl
jns
fist
inc
imul
movs
aas
jmp
jae
outs
jmp
mov
xchg
fs
push
push
mov
loope
xor
jp
mov
hlt
mov
fisttp
ja
rol
xchg
das
and
add
and
ss
sbb
pop
cs
pop
(bad)
out
in
out
stc
cld
leave
aad
call
add
cs
sti
rol
iret
add
xchg
dec
mov
test
retf
fdecstp
inc
cwde
loopne
mov
mov
push
retf
nop
xlat
rol
mov
shl
pop
add
nop
pop
rcl
int3
(bad)
or
int3
mov
sbb
(bad)
lahf
adc
fwait
sahf
enter
arpl
add
dec
in
xchg
cmp
sar
mov
(bad)
(bad)
xchg
or
pop
(bad)
and
cli
inc
frstor
pop
mov
nop
mov
dec
xor
push
fdiv
pop
jno
inc
sar
cmc
in
xchg
sub
fiadd
movs
pop
(bad)
clc
or
cmps
into
mov
adc
adc
out
je
test
stc
int
mov
pop
stos
stc
or
repz
ja
out
popa
inc
and
repz
dec
inc
xor
sub
lds
push
mov
fistp
not
fwait
cmps
cmps
out
jmp
out
adc
mov
pop
sub
icebp
test
jecxz
dec
nop
retf
and
pop
ja
scas
pop
pop
pusha
mov
xchg
fs
fld
call
dec
jne
push
mov
mov
push
jb
jle
cwde
pop
push
mov
(bad)
push
ret
jb
movs
cmp
jecxz
retf
pop
pop
mov
lahf
fstp
inc
ret
push
mov
jg
xchg
dec
dec
cmc
inc
sbb
aaa
ds
xchg
push
mov
(bad)
cld
cmp
cmp
push
(bad)
hlt
mov
sub
hlt
xchg
push
aas
add
lds
dec
mov
jae
fadd
push
(bad)
call
call
jo
(bad)
ja
sub
lods
scas
mov
xor
adc
in
cwde
mov
xchg
in
jle
adc
or
and
or
movs
iret
mov
movs
loope
lods
movs
push
sti
leave
fdivr
test
call
fidivr
inc
dec
inc
nop
inc
cmc
sbb
setg
in
add
stc
out
movs
xchg
or
push
in
jno
add
repz
into
ss
pop
mov
loopne
xchg
ret
lock
sub
xor
pop
aam
into
and
pop
sub
mov
jb
inc
add
gs
mov
in
pop
jmp
inc
les
pop
fisttp
adc
and
into
mov
push
cmps
(bad)
pusha
stc
add
fldcw
mov
(bad)
mov
mov
dec
daa
add
push
out
pusha
test
jne
es
cmp
je
(bad)
loope
(bad)
popa
cld
pusha
inc
cmp
push
mov
scas
sbb
sbb
and
shl
mov
and
sbb
xchg
or
movs
(bad)
ficom
sbb
pop
xchg
in
pop
mov
nop
cld
pop
dec
ror
rcl
and
cli
adc
sbb
push
gs
xchg
bound
in
and
loop
fucomp
jns
aad
in
xor
jl
dec
add
(bad)
ds
and
xchg
adc
mov
mov
push
sub
push
ins
lods
test
jp
daa
jbe
xor
out
inc
mov
adc
pop
or
pop
mov
mov
loopne
push
fcomp
jp
jmp
pusha
and
scas
cmps
ins
add
in
add
fistp
push
adc
hlt
cli
jnp
pop
mov
scas
dec
out
mov
aam
out
out
fidiv
push
addr16
retf
or
das
dec
loope
mov
add
retf
sbb
imul
jmp
in
xlat
(bad)
shl
adc
mov
cmps
int3
out
outs
and
mov
nop
(bad)
mov
rol
cmp
sbb
fwait
mov
fsubr
mov
pop
lock
iret
sti
in
stos
xor
jae
scas
pop
call
outs
xchg
bound
in
enter
enter
ins
inc
xchg
arpl
jae
movs
fbstp
push
add
sbb
aas
in
xor
add
pushf
sbb
stos
(bad)
jle
mov
pop
add
jb
xchg
aaa
inc
push
scas
idiv
and
sbb
xlat
jp
jno
mov
aas
fcmove
jg
xchg
mov
fldcw
scas
jg
and
loopne
cwde
outs
push
dec
mov
adc
xchg
cmps
in
fdiv
fs
not
ja
scas
lock
push
popf
movs
jo
js
sti
mov
fdivr
lds
mov
fisub
jns
div
fist
cmp
shl
xor
test
fisub
push
scas
and
push
jnp
mov
mov
pop
jno
retf
push
pop
(bad)
fcomp
xor
fst
jne
xor
or
push
jns
fwait
pop
mov
jb
js
cs
out
jl
loop
int
gs
loopne
retf
in
mov
and
pop
push
addr16
push
and
icebp
adc
jp
pop
jo
push
xlat
aad
outs
dec
mov
xor
outs
stos
loop
dec
xchg
fiadd
pop
and
repz
inc
les
pop
sbb
repnz
pop
push
jae
movs
int
push
lahf
mov
pop
int
inc
shl
jo
into
xchg
das
jp
cmps
push
and
mov
inc
sbb
maskmovq
dec
test
add
mov
popa
cld
and
cmps
push
cmp
cmp
xchg
adc
adc
(bad)
popf
call
mov
mov
cmp
or
call
ja
es
and
neg
adc
adc
ror
lock
inc
mov
in
(bad)
cwde
mov
retf
psraw
mov
pop
jl
mov
fcomip
(bad)
repnz
jmp
scas
sub
jnp
jecxz
sbb
(bad)
sub
ins
mov
inc
and
in
(bad)
fbstp
fcmovnbe
cmp
push
cmp
cli
mov
adc
int
mul
xlat
mov
jg
or
fadd
popfw
jbe
jge
test
inc
xchg
fs
cmps
out
xchg
mov
push
push
lea
sahf
loop
push
ret
sub
pop
add
cmp
push
sub
sti
cmps
fsubr
and
imul
popf
jno
mov
adc
fldcw
mov
out
cmp
pop
shl
push
or
jbe
movs
add
add
daa
ret
scas
jae
pop
sti
ins
call
push
add
mov
sbb
out
daa
push
ins
sar
aam
adc
or
dec
or
mov
jo
pushf
in
fidiv
(bad)
es
adc
jecxz
mov
sahf
xor
repz
inc
jecxz
int
pop
mov
xlat
call
cwde
out
and
popa
inc
dec
cmps
fidivr
mov
or
pop
jge
sbb
jge
(bad)
fnstsw
adc
jmp
out
call
pop
push
sbb
mov
pop
cmp
add
jo
jmp
nop
inc
fnstenv
sahf
push
test
repnz
adc
pop
clc
add
fcom
imul
(bad)
ins
scas
xchg
sub
rcl
jmp
sbb
fdivr
int3
xchg
or
or
ins
push
xchg
dec
and
pop
or
add
add
(bad)
in
jg
ret
mov
push
cld
loop
addr16
mov
or
int
cmp
(bad)
xchg
mov
and
pop
leave
cld
push
sub
push
aam
cmps
ror
pop
das
ins
mov
imul
cmp
jmp
std
pop
lods
jnp
popa
(bad)
xor
arpl
xchg
xchg
and
pop
in
sti
jmp
or
cmp
cmp
push
xor
arpl
out
dec
pop
xlat
int
in
and
call
add
loop
and
pop
jg
sar
xchg
xor
mov
jge
pminsw
xor
in
jbe
ss
fild
cmp
add
pmaddwd
lods
outs
cmp
ins
dec
lods
mov
jmp
mov
push
sub
jge
jae
sbb
adc
ins
dec
scas
fwait
popa
jnp
push
pusha
cmp
das
dec
into
inc
fnsave
test
idiv
pop
cmp
fnstsw
inc
xchg
sub
and
int
lock
pusha
mov
cmp
mov
push
or
jbe
xor
jb
aaa
sub
ins
xlat
cmp
(bad)
repz
hlt
jb
adc
cmps
add
retf
sub
cld
adc
mov
cmps
jmp
loope
aad
jno
push
mov
gs
and
jmp
mov
data16
push
sub
aas
jp
cmp
sub
call
xor
jno
aas
cmp
add
xchg
adc
add
jae
xchg
test
fnstsw
cdq
mov
vpslld
push
push
aad
int3
jne
shl
push
fs
aam
pop
cmps
xor
push
scas
js
sbb
fdivr
out
les
mov
es
pop
cmp
mov
add
inc
mov
cmps
ss
(bad)
iret
xor
mov
out
scas
jo
dec
ja
jno
fisub
or
mov
mov
mov
lahf
cmp
stos
dec
bnd
movs
pop
push
scas
mov
push
sub
movs
(bad)
stc
mov
cmp
mov
fs
push
das
mov
aas
in
mov
or
xchg
ss
es
int
mov
rcr
xchg
fidivr
out
int
xchg
call
xchg
js
mov
push
push
add
cli
dec
outs
mov
pop
push
stos
mov
pop
retf
mov
mov
inc
dec
js
or
xchg
shl
mov
movs
loop
or
movs
iret
nop
adc
pop
arpl
add
and
push
sbb
aaa
xchg
mov
pop
mov
and
pop
fld
iretw
adc
push
lods
mov
loopne
std
inc
mov
gs
pop
rol
or
iret
xchg
mov
jo
cld
or
cmp
mov
lods
aas
or
xchg
jno
(bad)
push
cmp
rcl
in
adc
fs
ror
xor
stc
test
lds
imul
xor
test
add
aam
(bad)
dec
pop
test
mov
or
mov
ja
dec
lods
sbb
sub
push
int3
sub
mov
jp
hlt
in
(bad)
je
cld
add
add
imul
sub
sbb
jb
not
adc
or
fwait
mov
popf
js
push
adc
xor
into
in
loopne
sbb
xchg
cmps
movs
out
(bad)
cli
adc
and
add
inc
ins
out
pop
dec
dec
inc
pop
lea
inc
mov
add
xchg
retf
add
adc
mov
popa
push
push
pop
jno
and
imul
mov
jp
outs
xchg
push
dec
in
addr16
mov
add
js
pop
and
lds
push
idiv
xchg
inc
pop
std
loop
rcr
pop
mov
fcompp
mov
xchg
mov
push
inc
mov
or
jne
ins
sbb
jp
pop
dec
add
aaa
adc
xlat
or
xchg
call
pop
(bad)
in
sub
lds
xor
mov
sbb
push
jge
in
sbb
push
(bad)
cld
xchg
fisub
ret
call
xor
mov
icebp
outs
fwait
les
xor
mov
fidivr
ror
inc
jns
rcl
sub
cs
jle
rcr
ficom
adc
clc
mov
inc
inc
mov
test
sti
mov
(bad)
js
ficom
loope
and
shl
retf
dec
and
sbb
int3
pop
xor
sub
jns
jnp
data16
stos
lahf
inc
push
leave
out
push
sub
int3
sbb
dec
dec
cwde
test
mov
jmp
gs
and
jb
and
test
pop
stos
pop
imul
(bad)
arpl
int
jge
jns
push
mov
sub
jnp
mov
jle
xlat
icebp
cmovp
adc
sub
push
loope
push
ins
fnstsw
jg
push
xor
aas
xor
pop
jne
cli
jo
add
mov
mov
repnz
or
push
js
aaa
dec
pop
aaa
push
or
std
jmp
sub
sub
and
pop
sahf
sub
lock
push
les
dec
inc
out
add
mov
in
das
out
cli
sbb
gs
cmps
push
fwait
addr16
ret
add
mov
inc
sbb
loopne
leave
in
cmp
pop
jge
adc
cmp
ret
xor
pop
xchg
in
movs
cmp
push
inc
mov
(bad)
out
sub
hlt
fld
add
jmp
bound
push
sbb
loope
sbb
add
mov
jl
leave
push
sti
dec
xchg
adc
ins
adc
sahf
mov
cmp
sbb
rcl
cmp
xchg
ss
ja
xchg
push
cld
(bad)
mov
gs
loopne
inc
ds
es
pop
ror
and
push
or
jp
mov
imul
xor
cld
jp
jmp
sub
mov
ror
cmp
lods
push
push
mov
sti
xchg
nop
ja
ins
xor
loope
cdq
mov
pushf
jb
jmp
outs
ins
mov
fidiv
push
push
xor
pop
jns
and
sub
bound
mov
pop
jns
mov
imul
and
(bad)
sub
retf
pop
stos
outs
std
lea
push
cmp
and
(bad)
int
ja
enter
sbb
and
xchg
mov
rcl
sbb
inc
jecxz
cwde
in
inc
test
sub
sbb
cmc
dec
pop
(bad)
mov
push
push
ret
sub
xchg
neg
in
(bad)
xor
dec
jp
sub
ds
cmp
inc
jmp
out
push
and
idiv
adc
out
cmps
imul
mov
in
xchg
jecxz
movs
jp
imul
sar
dec
push
in
aas
fimul
dec
lods
jb
in
punpcklbw
scas
inc
sbb
pop
scas
sub
or
ja
adc
jno
les
dec
out
jae
cwde
lods
dec
loope
in
(bad)
fisttp
dec
add
xchg
aaa
jns
lea
mov
test
mov
mov
(bad)
nop
cmp
(bad)
outs
shl
rcl
std
mov
mov
les
jecxz
mov
push
or
lods
jmp
jg
push
hlt
push
call
stos
(bad)
jg
mov
mov
clc
cmps
xor
sbb
inc
icebp
inc
aam
ins
arpl
scas
imul
cmp
std
mov
or
and
jo
mov
mov
inc
adc
sbb
pop
mov
call
and
pop
add
jle
aam
outs
add
cmp
push
push
sbb
jbe
(bad)
mov
lea
fdivp
pop
sahf
xor
addr16
inc
inc
inc
in
sbb
inc
add
add
mov
sub
sbb
stc
or
fbstp
jg
retf
jnp
fucom
ror
cmps
retf
dec
(bad)
push
pushf
mov
(bad)
stos
mov
mov
jne
mov
mov
push
jge
fst
loopne
inc
push
icebp
sbb
push
or
cmp
cmp
pop
xor
lods
cs
push
jl
sub
(bad)
out
jecxz
dec
push
movs
fwait
push
add
hlt
dec
icebp
and
and
or
jns
fcomp
(bad)
cmp
lds
jle
mov
adc
lds
mov
test
fs
fist
sub
lock
sbb
xor
adc
pop
popa
push
rcl
inc
fild
leave
clc
(bad)
dec
xchg
push
fwait
mov
jbe
add
(bad)
xchg
pop
es
test
mov
or
out
dec
xchg
movs
das
loop
lahf
mov
jl
imul
mov
dec
ss
dec
jnp
das
pop
adc
adc
xchg
inc
add
ror
repz
lahf
scas
cld
leave
in
push
lods
shl
test
cli
mov
rol
test
adc
xchg
movs
dec
inc
pop
scas
test
repz
repnz
mov
cwde
jnp
jb
sub
aad
out
ret
or
push
or
stc
mov
push
bnd
cmp
sub
adc
enter
push
std
push
lds
jl
jmp
dec
aaa
and
adc
jg
data16
xor
push
test
mov
loop
call
mov
inc
shr
jo
mov
cmps
sbb
or
xor
arpl
stos
cmc
add
xor
mov
inc
icebp
pop
adc
sub
stc
add
loopne
xchg
scas
ins
cmp
leave
cli
jecxz
push
inc
fsub
xor
mov
xchg
in
test
cmps
inc
fsubr
retf
adc
push
dec
push
sti
jbe
ja
and
(bad)
bound
pop
dec
ror
push
loop
sbb
push
mov
pop
in
jnp
jecxz
outs
push
dec
imul
call
ds
and
inc
loopne
loopne
pop
pop
cmps
int3
jge
retf
dec
fcom
sbb
inc
pop
fstp
cmp
in
call
jnp
jle
cmp
sub
mov
mov
jbe
adc
inc
mov
rol
or
dec
mov
in
das
sub
clc
(bad)
or
push
mov
pusha
lds
stos
adc
fcomp
cmp
int3
mov
aaa
out
mov
cwde
cmps
shl
stos
lock
(bad)
inc
dec
scas
pop
fild
pop
sub
es
popa
push
xchg
mov
je
or
xor
add
mov
mov
jmp
jp
int
add
leave
int
int3
cdq
mov
jno
xchg
ins
lea
or
pop
xchg
xor
shr
dec
pop
cmp
and
mov
push
and
push
daa
cmp
jmp
xchg
or
test
jno
xchg
icebp
int3
cmp
jns
and
and
out
sub
loope
pop
aaa
sti
aam
aas
pop
ret
inc
dec
je
jne
outs
sbb
das
jge
pop
jle
adc
lock
mov
add
sti
out
jbe
sti
push
inc
xchg
dec
imul
rol
loope
jge
or
jnp
ds
cmp
cmp
loope
push
inc
mov
push
cmp
fadd
pop
stc
pop
ins
cwde
loopne
mov
dec
cdq
lahf
xlat
dec
jle
mov
aad
mov
pop
push
out
repz
sbb
ins
fstp
mov
push
xor
push
adc
dec
sbb
sub
test
push
das
rcl
retf
or
imul
dec
leave
pop
inc
or
sbb
adc
ficomp
imul
add
scas
call
and
sahf
jbe
mov
sbb
cmp
and
loope
clc
inc
outs
out
xor
xor
sti
retf
mov
and
cdq
es
sbb
stc
inc
inc
inc
ror
(bad)
ins
push
cmp
jg
add
inc
mov
push
shr
push
or
adc
jb
adc
daa
sbb
inc
push
test
jnp
std
xchg
out
add
(bad)
mov
je
cld
ret
sbb
adc
push
cmp
add
nop
mov
cmp
cmp
sbb
std
(bad)
aam
jnp
loop
out
inc
fiadd
fstp
sbb
enter
imul
add
pop
imul
shl
mov
aas
xchg
out
fisub
sub
adc
sbb
iret
xchg
jae
jns
rol
(bad)
sub
push
adc
dec
xor
xor
pusha
mov
xor
sbb
mov
mov
(bad)
push
jp
imul
push
mov
inc
cmp
cwde
fdiv
or
sbb
retf
mov
je
push
shl
outs
mov
xchg
mov
btr
cmp
xchg
les
(bad)
inc
lods
ja
jmp
cwde
sub
sbb
and
pop
fs
push
dec
xchg
mov
retf
cmp
clc
jb
sub
add
mov
pusha
jmp
in
mov
cmps
cmp
(bad)
ss
push
sub
out
add
mov
adc
aad
jmp
fsubr
jl
sahf
add
imul
push
push
mov
mov
inc
lock
jg
outs
xor
mov
jge
xor
je
jo
out
(bad)
xor
movs
pop
aaa
test
dec
or
adc
push
aad
add
hlt
mov
push
xchg
inc
xor
adc
pop
jb
xchg
fdivr
jnp
in
push
xor
xchg
and
or
sub
imul
jmp
js
sbb
add
cmp
in
sahf
pop
sbb
dec
push
scas
std
iret
dec
hlt
mov
cld
push
cmc
es
and
int3
mov
jecxz
(bad)
clc
pop
aaa
push
mov
pusha
lea
jmp
retf
push
push
mov
aam
pop
push
mov
rcr
imul
fsub
adc
or
jb
retf
(bad)
fucom
jmp
pop
xor
add
rcr
mov
std
(bad)
mov
jns
xor
mov
and
pop
mov
pop
pop
sbb
neg
shl
dec
ret
jmp
cld
sub
inc
bound
dec
sub
mov
inc
mov
(bad)
out
aas
sbb
fucomi
add
scas
outs
jne
xchg
xor
pop
jne
dec
mul
mov
mov
imul
adc
adc
xor
ficomp
bound
mov
mov
mov
arpl
addr16
rol
pop
lahf
test
clc
add
ins
and
pop
pushf
leave
and
mov
dec
std
je
lods
mov
lahf
adc
fcomp
sti
cmp
imul
iret
jns
xchg
fild
mov
inc
mov
push
out
cli
fsubr
scas
xchg
add
lea
js
xchg
adc
pop
xchg
mov
cmp
rcl
ins
inc
mov
dec
xchg
jb
mov
scas
in
ror
inc
and
call
bound
or
(bad)
mov
loope
scas
in
cmp
xor
push
popa
adc
inc
inc
ins
leave
retf
rol
wrmsr
stc
nop
cmc
mov
pusha
add
repnz
xor
pop
add
jno
shl
sbb
into
daa
xor
ins
adc
xchg
ss
xchg
inc
sub
inc
adc
add
into
cmp
cmps
fmul
nop
and
retf
dec
mov
(bad)
loop
or
ins
mov
out
xor
jae
and
pop
icebp
push
(bad)
in
push
dec
int
cmp
dec
pop
hlt
cdq
movs
in
xchg
repz
add
ds
pusha
call
fist
mov
push
xor
xchg
mov
not
mov
jmp
mov
sub
aas
fimul
sti
dec
or
pop
ror
pop
push
cmp
push
sub
sbb
cmp
mov
aam
or
adc
mov
cmp
call
or
cmps
push
or
pop
lock
jnp
rol
sti
sub
pop
les
ins
fcmovu
inc
xchg
add
ret
pop
mov
adc
inc
icebp
or
jb
adc
mov
test
sbb
inc
pop
pop
mov
leave
test
and
aam
or
int
cmp
mov
out
dec
push
sahf
sub
or
push
retf
inc
pusha
dec
adc
in
inc
xchg
jp
stos
retf
ja
ss
inc
in
and
add
sub
cmp
sbb
push
je
and
rcr
movs
aaa
mov
inc
dec
and
inc
xor
xor
mov
mov
hlt
out
cmp
jle
test
dec
and
mov
push
pop
jp
test
mov
xchg
in
sbb
add
mov
retf
fcmovnbe
mov
stc
adc
push
stc
mov
push
sbb
out
loop
outs
fcmovb
or
dec
fs
jmp
jmp
mov
sub
call
cmp
dec
stc
out
arpl
stos
cmovg
add
or
sbb
movs
and
shl
xor
iret
cmp
clc
mov
inc
dec
cmps
stc
jno
fstp
fst
loop
loope
outs
repz
ret
or
(bad)
pop
dec
add
sbb
jne
xor
mov
jns
pop
jae
shl
cmp
jo
jnp
and
dec
jmp
and
std
jbe
jge
call
cld
(bad)
add
in
repnz
(bad)
daa
or
mov
sub
adc
dec
push
clc
adc
push
sub
movaps
mov
xor
xor
movs
sbb
sar
retf
test
es
dec
mov
fs
adc
fbstp
(bad)
fld
xchg
ins
leave
sahf
mov
pmulhuw
add
loope
mov
(bad)
out
gs
stos
scas
add
lods
adc
mov
jmp
jp
adc
into
outs
sub
inc
sub
add
sbb
or
stos
movs
nop
loope
je
cdq
sahf
idiv
mov
call
ins
mov
sub
nop
stos
out
scas
push
pop
xchg
fstp
data16
ins
mov
leave
pop
push
nop
hlt
es
in
test
sub
leave
and
jae
mov
push
pop
(bad)
in
inc
pop
and
add
mov
mov
popf
rcl
push
adc
mov
inc
(bad)
pop
shl
inc
sub
sbb
adc
and
dec
movs
mov
dec
add
jge
cmp
pop
stc
dec
add
das
pop
stos
pusha
bound
lahf
iret
pusha
(bad)
jp
cmps
xchg
cld
arpl
retf
add
in
or
inc
xor
mov
pop
call
in
mov
jecxz
fldcw
and
(bad)
xor
or
fist
push
jmp
out
jge
add
aam
fdivr
das
and
adc
mov
ret
cli
lock
inc
inc
loopne
pop
jg
imul
pop
jnp
int3
sar
sbb
cmp
mov
and
rol
xlat
mov
les
ret
inc
adc
cmc
shl
dec
cmp
fdivr
loope
xchg
rol
mov
mov
scas
mov
lea
inc
(bad)
les
aaa
cmp
mov
xor
test
push
inc
jmp
xchg
mov
js
cli
push
ret
sti
fistp
dec
push
cmps
stc
jp
cld
sti
dec
xchg
mov
xchg
(bad)
js
xor
mov
pop
jbe
mov
cs
jmp
out
outs
sti
mov
mov
or
shr
sahf
(bad)
in
xor
nop
push
push
sub
lahf
fadd
cmp
pop
pop
jne
add
dec
lahf
and
jg
cmp
imul
ss
cmp
pop
icebp
mov
(bad)
fsubrp
dec
loopne
add
scas
mov
aad
fidiv
cmps
es
movs
sub
shl
jge
jo
in
push
ret
bound
mov
addr16
into
dec
add
sub
sbb
cs
jmp
dec
pushf
mul
(bad)
gs
cld
mov
push
in
jbe
loope
stos
gs
push
jns
enter
stc
fist
cdq
imul
xchg
mov
das
cmps
inc
inc
and
jge
and
and
retf
lods
adc
cwde
sbb
push
xor
add
dec
xchg
ficom
fisub
adc
in
dec
jae
lods
sahf
pop
xlat
repz
mov
dec
adc
popf
sbb
mov
or
neg
inc
fsub
test
lods
inc
mov
push
sar
fucomip
xchg
loop
mov
adc
nop
mov
fs
mov
jnp
lock
fs
movs
js
push
jmp
mov
jno
and
dec
repz
push
mov
aas
jns
aaa
push
mov
ds
std
sub
lods
jb
je
cmps
xchg
xor
mov
mov
(bad)
sub
jge
cmps
and
enter
push
ss
gs
adc
xor
mov
mov
shl
gs
add
mul
test
movs
in
or
adc
xor
cli
std
lods
loopne
fcomp
add
push
jb
ss
adc
(bad)
pop
es
push
imul
mov
push
out
sbb
in
loopne
inc
push
cmps
arpl
jnp
je
mov
inc
shr
js
ret
inc
or
or
cmp
call
cmp
jecxz
jp
hlt
ins
pop
sbb
fmul
jo
pop
or
neg
aaa
dec
gs
dec
cmovb
or
and
push
mov
fwait
aam
sub
enter
mov
inc
sbb
mov
(bad)
test
pop
inc
jge
mov
pop
push
fbld
xor
imul
mov
mov
and
mov
aaa
mov
jp
pusha
in
pop
mov
ins
xchg
fnstenv
test
mov
push
loope
add
pushf
and
and
lahf
stos
out
xchg
lahf
fcmovne
retf
cwde
jecxz
ss
sidtd
mov
inc
push
and
mov
in
jne
jo
out
ja
and
push
mov
ret
add
int
in
shr
jo
lods
mov
leave
mov
or
rol
jp
and
inc
ss
push
adc
adc
or
sub
scas
sub
or
or
cwde
leave
mov
inc
xor
shl
sti
(bad)
push
cmp
sub
push
call
(bad)
mov
sub
popa
stos
mov
mov
mov
mov
xchg
mov
adc
stos
in
in
and
sahf
fwait
jmp
mov
loop
push
push
cmp
mov
clc
xchg
call
push
mov
mov
adc
retf
lea
jne
cmp
iret
xchg
fisub
add
xor
sub
add
inc
fs
retf
cmps
pop
jno
popa
cli
cmp
fistp
call
push
xchg
inc
fstp
sub
xchg
xor
sbb
test
cmps
jnp
stc
xor
ja
mov
sets
rol
das
xchg
das
dec
stos
test
ja
mov
call
sub
pop
mov
adc
std
sub
jbe
or
xchg
fimul
sbb
stos
sub
pop
mov
daa
fcomp
fwait
push
into
cmp
fwait
push
repz
jae
sub
inc
repnz
and
sar
test
pop
int3
inc
dec
mov
add
movs
leave
jno
loop
or
repnz
(bad)
xor
stos
xchg
out
aam
fnstcw
mov
stos
mov
in
xchg
xchg
cdq
test
hlt
jmp
shl
cdq
inc
outs
inc
or
les
push
rcr
int3
mov
sub
fisttp
jl
test
pop
into
mov
push
loopne
mov
mov
mov
call
sub
popf
aad
jnp
(bad)
cmc
rep
mov
jo
ins
jns
inc
pop
addr16
not
int
jmp
xchg
test
neg
inc
xchg
fs
adc
sbb
sub
jno
in
mov
mov
push
cmp
jge
inc
ins
mov
lods
call
inc
jle
sbb
icebp
xchg
xor
(bad)
xlat
jne
push
imul
fdivr
sahf
arpl
push
push
cmps
mov
adc
add
call
lea
(bad)
fidiv
jne
sub
cmc
sahf
sub
ret
adc
inc
add
enter
adc
rcl
adc
xor
or
or
xchg
out
pop
add
adc
es
dec
adc
hlt
bound
or
push
sbb
in
or
mov
fnstcw
push
adc
loop
mov
lods
xor
xchg
add
jp
pushf
neg
mov
mov
push
fs
ins
(bad)
cwde
or
(bad)
or
push
sub
test
shl
mov
imul
push
cmp
push
fst
pushf
jmp
inc
shl
js
rcl
gs
mov
or
or
(bad)
sub
clc
jmp
jae
sub
rcl
ds
rcl
push
imul
fwait
(bad)
xchg
movs
jns
cwde
fwait
mov
popa
xor
stos
mov
push
dec
inc
pop
dec
nop
mov
(bad)
(bad)
mov
or
or
mov
mov
cmp
mov
push
pop
enter
sub
pop
adc
lods
jp
movs
or
jg
add
lock
(bad)
and
iret
xchg
jns
or
push
cs
dec
dec
mov
mov
leave
out
icebp
push
(bad)
jg
rcl
adc
scas
jp
add
dec
loop
out
add
icebp
push
inc
adc
xchg
jns
sbb
xchg
loopne
cmps
or
cdq
dec
mov
cmc
mov
scas
repnz
push
sbb
ror
sbb
mov
(bad)
jmp
inc
scas
jecxz
push
outs
dec
xor
adc
xchg
xchg
xchg
sbb
cli
popf
out
stos
jecxz
cmp
xor
arpl
je
ins
xor
xlat
sbb
push
or
or
mov
imul
das
int
ins
nop
dec
mov
enter
and
or
jmp
ret
clc
sub
je
rcl
(bad)
sub
dec
retf
xchg
sbb
test
in
stc
xchg
mov
push
sub
ret
push
in
dec
scas
jae
enter
movd
adc
jmp
out
call
jns
xor
xor
retf
pop
dec
dec
xchg
sub
out
pop
xchg
(bad)
or
and
mov
mov
fldenv
push
mov
adc
scas
dec
cmc
fwait
push
dec
adc
cli
mov
sbb
jecxz
shl
mov
popa
mov
lea
popf
dec
and
cmps
mov
push
test
icebp
nop
fidivr
mov
arpl
or
dec
bound
cld
mov
sbb
out
push
cmps
fdivr
imul
adc
cwde
pushf
push
inc
int3
lahf
movs
sbb
lods
mov
pop
scas
nop
jmp
aas
fiadd
or
sti
add
ret
idiv
sbb
fninit
rcr
stos
sub
pop
sbb
lahf
fucom
inc
mov
sub
jnp
inc
ror
jbe
mov
mov
int
pop
push
and
sti
sub
mov
in
mov
mov
leave
pop
inc
push
mov
ins
out
dec
into
fwait
vhsubpd
add
pop
sub
imul
ror
xor
into
push
mov
sub
add
(bad)
push
js
jl
rcr
and
cmp
or
arpl
add
fiadd
push
out
fsubr
repnz
daa
rcl
cmp
into
cwde
pop
aad
mov
lods
mov
push
mov
js
dec
call
fidiv
in
lods
sub
sti
mov
in
jp
pushf
cmp
jecxz
cmps
pop
cmp
mov
fs
push
test
pop
inc
mov
ins
mov
aad
(bad)
pop
ins
sbb
jnp
enter
mov
lods
push
ds
pop
les
sub
ja
inc
inc
cmps
fcmovne
outs
jns
and
retf
loopne
mov
test
cmp
clc
dec
pop
and
sub
dec
retf
in
adc
ss
repz
scas
pop
leave
aam
dec
and
mov
popa
(bad)
test
fldcw
jp
and
jecxz
out
mov
xor
push
jbe
mov
sbb
idiv
cmps
and
jmp
mov
popa
push
sar
push
outs
(bad)
dec
call
dec
test
mov
cmp
iret
inc
sbb
dec
push
pop
fsubr
dec
sti
lahf
out
and
cmp
aaa
inc
arpl
pop
jp
in
pop
es
(bad)
pushf
mov
pusha
pop
test
mov
imul
dec
les
ins
test
clc
and
jmp
fidiv
pop
xor
rcr
sbb
dec
cmp
imul
(bad)
ja
enter
inc
jle
mov
scas
mov
pop
pop
js
sub
(bad)
out
ret
aaa
retf
jae
dec
pop
adc
jle
hlt
pop
cs
(bad)
popf
dec
lds
test
jns
mov
scas
ins
fnstenv
sbb
pop
dec
mov
mov
jmp
inc
jp
sbb
outs
jecxz
cmps
mov
mov
pop
fsub
pop
push
aaa
mov
lods
stos
pop
add
stc
xchg
mov
sub
mov
dec
aas
push
add
adc
aaa
jmp
fwait
sbb
jae
movs
sahf
rcl
mov
jno
push
cmp
push
ds
daa
or
sub
jmp
inc
inc
addr16
jb
cmp
pop
shl
gs
nop
aaa
cmp
inc
push
pop
pop
and
or
mov
add
clc
pop
jb
push
ds
dec
pop
xchg
enter
xchg
jg
call
ds
fwait
enter
movs
jg
inc
inc
mov
xchg
outs
je
les
leave
(bad)
and
mov
pop
and
mov
pop
in
clc
xchg
outs
sub
fist
retf
sub
cmp
push
repz
jbe
aam
push
add
push
inc
and
fwait
xchg
jne
fsub
mov
pop
xchg
mov
gs
dec
lahf
mov
sub
(bad)
mov
bound
and
xor
aas
scas
sti
push
inc
ins
dec
in
jb
test
pop
cmps
adc
fistp
mov
arpl
cmps
iret
popa
jne
mov
popw
push
push
stos
cmp
(bad)
out
ret
cmp
jae
pusha
data16
aam
cs
pop
mov
cmp
adc
pop
ss
addr16
xor
cmp
mov
push
aas
cld
(bad)
call
leave
cmp
addr16
push
xor
ficom
repnz
sub
adc
cwde
add
pop
cmp
and
addr16
imul
cld
(bad)
out
add
cmp
repz
repnz
pop
xor
sub
cmp
cmps
adc
cwde
mov
mov
and
dec
inc
scas
addr16
mov
cmp
pop
int3
xchg
cld
xchg
cmp
out
loop
mov
arpl
push
inc
xor
pop
pop
je
fs
xlat
sbb
test
shl
inc
cmp
push
aas
mov
dec
jle
pop
cld
mov
les
in
inc
jbe
cmp
jae
inc
pop
(bad)
aam
jbe
jl
mov
inc
out
dec
and
mov
popa
cmp
xor
bound
mov
pop
mov
call
fiadd
jmp
and
les
push
aas
mov
jge
ins
pop
and
or
es
add
clc
in
push
enter
stos
jg
pop
push
inc
in
inc
push
adc
jl
xchg
fnstsw
rcl
rol
movs
ins
jno
test
pop
jle
sub
daa
jmp
imul
cmp
push
lods
(bad)
and
mov
lds
pop
push
js
cmp
or
inc
pop
mov
test
xchg
je
and
xchg
(bad)
and
pop
jge
mov
scas
xchg
mov
pop
dec
test
sub
jg
or
(bad)
jmp
push
jp
les
stc
jecxz
jbe
loopne
xchg
(bad)
pop
xchg
and
dec
pop
xchg
mov
test
xchg
daa
push
fistp
mov
adc
mov
adc
push
fs
and
aaa
vmptrld
push
mov
scas
mov
out
push
aas
adc
bound
cli
(bad)
push
and
mov
pop
adc
hlt
sub
pop
pop
xlat
inc
adc
inc
mov
fst
cdq
(bad)
mov
mov
ins
scas
mov
pop
(bad)
cmp
or
out
mov
imul
bound
(bad)
fs
call
ds
daa
sbb
xchg
and
cmps
lds
test
rcr
aas
sub
stos
shr
int3
inc
(bad)
(bad)
js
je
jl
clc
(bad)
(bad)
out
ficomp
jmp
jae
mov
pop
aam
push
fsubr
push
das
fwait
daa
inc
fwait
dec
movs
mov
fs
mul
xor
xor
sub
dec
and
add
push
add
imul
sbb
pop
fidivr
mov
mov
dec
mov
push
mov
push
jl
pop
out
sbb
lahf
push
int
cmp
dec
inc
inc
jg
in
jl
in
fcmovnb
out
(bad)
and
cmp
jnp
loopne
into
in
cmp
add
sub
inc
(bad)
mov
fs
mov
mov
sbb
and
(bad)
xor
pop
test
dec
call
aas
lods
imul
in
enter
enter
data16
xor
cmp
(bad)
dec
test
shl
add
loopne
out
retf
sbb
dec
cmp
imul
(bad)
daa
mov
sbb
cmc
fdivr
cmp
pop
loop
pop
and
push
mov
dec
jnp
pop
ja
in
es
cmps
mov
fs
popa
aaa
jo
mov
pop
dec
sub
add
mov
push
enter
retf
jg
push
ds
(bad)
dec
imul
pushf
daa
in
outs
cmps
mov
gs
fadd
xor
lods
fist
mov
pop
ret
pop
jge
pushf
jne
call
and
lods
jo
push
xor
pop
jg
fcomp
sahf
stos
leave
std
mov
pusha
ret
cmp
jae
shl
aam
mov
adc
or
pushf
jbe
xor
cmps
fyl2xp1
push
cmp
xor
mov
imul
outs
frndint
mov
arpl
mov
push
pop
push
push
in
nop
sub
(bad)
xadd
mov
bound
push
ds
iret
cmc
xchg
push
mov
adc
pop
push
push
jae
cld
stos
or
and
ret
add
mov
jne
mov
scas
xchg
cmp
test
shl
loopne
jp
fs
dec
dec
xor
pop
jle
push
or
jmp
fwait
cli
pop
jb
movs
loop
sar
mov
rcl
pop
push
jo
enter
xchg
jge
cwde
lea
test
shr
jmp
inc
nop
ja
int3
jno
fdiv
ror
and
mov
pop
mov
add
div
sub
dec
es
or
movs
adc
cwde
stc
lds
pop
lahf
loopne
push
and
dec
das
xchg
dec
jge
dec
xchg
sub
xchg
call
shl
mov
xchg
xor
pop
push
sbb
mov
cmps
sbb
test
rol
sar
enter
cmp
enter
cld
jle
xor
jmp
dec
jb
les
mov
fs
add
adc
sbb
xchg
and
dec
mov
fsub
cmp
scas
add
mov
(bad)
cmp
fmul
cs
pop
push
xor
stos
cli
push
cmp
pop
bnd
pushf
sar
imul
mov
gs
jo
mov
gs
ror
pop
inc
int3
sti
lea
jl
in
ret
ss
jae
call
ds
pop
xor
je
push
lds
test
jns
sbb
ins
add
stc
dec
and
fisttp
(bad)
push
(bad)
enter
sbb
inc
xchg
mov
mov
cmp
fwait
push
and
out
mov
ror
pop
test
ror
out
mov
or
or
and
dec
(bad)
ror
(bad)
jmp
inc
adc
out
out
push
hlt
retf
or
and
sbb
xor
neg
test
rcl
mov
imul
sbb
(bad)
adc
retf
(bad)
cmp
jecxz
fisubr
xor
sub
sti
push
xchg
inc
and
adc
xor
xchg
(bad)
push
test
rcl
jo
mov
pop
add
outs
(bad)
adc
push
mov
ret
add
outs
(bad)
je
call
ds
je
adc
into
aad
push
jns
sbb
or
add
stos
retf
rol
fisttp
(bad)
xchg
(bad)
rol
xchg
sbb
adc
outs
xchg
mov
cmp
fwait
push
adc
movs
sbb
das
repnz
adc
pop
stos
adc
add
xchg
pop
fmul
into
adc
push
dec
add
stc
adc
add
out
push
repz
dec
or
xchg
bound
not
call
mov
mov
imul
lahf
(bad)
mov
lods
lods
or
pop
(bad)
jp
js
or
out
out
xor
sub
sti
push
bound
adc
ja
xor
push
fstp
adc
daa
sbb
mov
push
aas
ror
sar
push
mov
or
(bad)
fdivrp
jb
in
sub
rol
mov
jae
js
xchg
aam
fmulp
xchg
adc
cwde
popa
inc
add
sahf
xor
mov
push
loope
push
ret
and
jae
push
mov
aad
mov
sbb
or
push
lahf
add
stc
push
mov
mov
mov
push
out
inc
push
adc
out
jnp
xchg
(bad)
int
add
fwait
push
add
movs
xchg
icebp
and
mov
shl
pop
lock
mov
mov
ins
lock
(bad)
into
std
xchg
bnd
call
ds
adc
repz
(bad)
aad
add
cwde
push
mov
mov
sbb
inc
xchg
(bad)
popa
lods
js
or
inc
fistp
lods
sti
xchg
loop
inc
jecxz
xor
xor
push
(bad)
push
push
adc
aaa
sbb
xchg
mov
movs
in
push
sub
pop
pop
rcl
dec
mov
push
idiv
ins
jmp
jae
jl
or
dec
out
(bad)
push
cmp
jmp
repnz
les
mov
pusha
push
xor
daa
das
or
mov
fs
add
ss
not
pop
fisubr
adc
and
xchg
mov
jge
xchg
push
pop
call
aas
pop
fwait
lahf
mov
lods
movs
lods
push
leave
inc
mov
xchg
jg
pop
jl
in
out
out
(bad)
cmp
shl
outs
aaa
add
push
retf
pop
in
pop
xchg
test
daa
adc
mov
mov
push
aas
or
ins
push
fadd
test
sbb
test
and
mov
pusha
inc
cwde
ret
inc
sub
dec
fsubr
inc
sbb
or
pop
fnstcw
pop
sti
loopne
scas
sub
dec
aaa
dec
rol
hlt
jmp
not
popf
sbb
and
mov
ins
push
push
and
hlt
jge
or
out
dec
add
mov
pop
ja
push
popa
pop
fadd
std
or
mov
fs
add
ss
xor
sub
push
and
adc
push
pop
call
aas
addr16
mov
scas
jno
push
cmp
push
ds
sar
inc
outs
add
jb
cmp
push
rol
cmp
adc
pop
jmp
or
ret
add
jb
push
cmp
imul
jno
cmp
ret
shr
dec
cmp
inc
sbb
jmp
jbe
or
ret
push
jns
and
loopne
scas
cmp
imul
pop
xchg
(bad)
sar
arpl
test
adc
pop
sub
and
(bad)
sbb
test
dec
shl
mov
push
ds
out
adc
push
int3
adc
fadd
cld
or
mov
fs
add
ss
fcomip
adc
sub
xchg
and
sbb
xchg
push
loope
mov
sbb
aas
pop
fwait
mov
scas
xchg
leave
mov
dec
adc
pop
mov
in
sbb
dec
(bad)
mov
mov
leave
or
push
outs
jg
xor
adc
hlt
jp
add
(bad)
loop
out
push
sbb
inc
retf
or
mov
fxtract
test
(bad)
fisttp
add
xchg
jp
pop
fstp
lahf
xor
mov
fs
dec
pop
(bad)
aaa
test
or
imul
cmps
push
sub
(bad)
mov
arpl
jo
call
cmp
push
lods
idiv
xchg
push
fsub
call
icebp
mov
cmp
nop
cmp
pushf
pcmpgtw
lods
cmps
or
pop
popa
cmp
repnz
out
sar
pop
cmp
xchg
ss
std
xchg
pop
pop
pop
call
aas
cmps
mov
mov
push
aas
jl
cwde
(bad)
out
sahf
or
cmp
stos
add
clc
out
xor
ja
int3
push
sub
sub
sti
xchg
outs
mov
imul
sub
hlt
jno
sub
xlat
shr
mov
pop
movs
adc
sub
psubusw
inc
pop
or
ret
add
jb
mov
pop
fisttp
call
xchg
mov
popa
shr
jge
xor
adc
dec
mov
les
add
jbe
call
ds
and
imul
xor
pop
sbb
sub
dec
xchg
inc
inc
cmps
jg
je
mov
data16
adc
and
jnp
mov
scas
push
cmp
pop
dec
xchg
pop
pop
cld
test
sub
out
adc
cmp
xchg
jp
sub
xor
pop
xor
cmps
sbb
test
pop
in
mov
imul
pop
ins
les
enter
clc
jle
call
ds
imul
xchg
outs
jno
sub
retf
shl
mov
pop
fidivr
pop
sbb
ret
ret
pcmpeqw
mov
pop
add
xchg
jmp
imul
dec
adc
and
std
xchg
es
call
ds
arpl
clc
imul
push
xchg
sub
arpl
adc
xor
stos
or
mov
mov
jns
ins
push
movs
fucomip
(bad)
xchg
mov
inc
jnp
pop
dec
jo
xchg
push
or
lea
inc
rol
sbb
stos
fst
out
ret
cmp
mov
ins
push
cmp
pop
(bad)
or
pushf
jns
sub
adc
push
cmp
push
ds
sbb
call
xchg
cmp
adc
push
das
adc
call
mov
or
push
mov
add
xchg
pop
int3
lock
mov
mov
pop
loop
mov
sub
inc
or
jmp
add
(bad)
aam
loop
jbe
shl
adc
call
sbb
mov
add
clc
scas
add
xchg
fisttp
adc
dec
sti
adc
xchg
jge
xchg
jp
call
ds
fwait
xor
imul
push
mov
push
mov
push
ja
pop
movs
nop
fisttp
mov
sub
stos
pop
or
pop
outs
loop
mov
int
fst
mov
adc
call
mov
push
cmp
xchg
inc
test
shr
into
jno
sar
add
cvtpi2ps
pop
retf
jmp
repz
into
jb
aam
mov
sub
aas
add
mov
push
enter
mov
popa
in
mov
aad
(bad)
dec
test
rcr
cmp
retf
mov
bound
xor
div
dec
fist
mov
sbb
adc
pop
lods
fsubr
xchg
and
aas
fwait
mov
lods
ins
movs
push
icebp
dec
(bad)
mov
sar
pop
cwde
nop
in
loopne
sahf
bswap
cs
pusha
inc
or
sub
dec
repnz
(bad)
jmp
rol
out
mov
scas
fnstcw
push
or
or
sub
inc
neg
rol
cmc
loope
mov
fnstenv
mov
arpl
cwde
scas
xchg
xor
push
push
lods
mov
sbb
inc
dec
cmps
mov
mov
leave
push
popa
push
inc
jg
xor
adc
(bad)
xor
pop
add
fiadd
retf
popf
and
test
ror
fsubr
adc
retf
add
or
bound
and
xor
das
lods
ret
push
xchg
dec
dec
jae
adc
std
jmp
mov
fs
jo
mov
loope
xchg
push
pop
xor
xchg
sahf
mov
std
xchg
stos
push
or
xchg
ret
cmp
jae
lock
mov
adc
add
stc
push
or
fs
xor
repz
adc
pop
xor
xchg
xchg
mov
popa
cdq
call
aas
test
rcl
outs
adc
cwde
or
or
and
stos
inc
mov
inc
jmp
xchg
push
fdiv
adc
push
mov
bound
mov
mov
loope
xchg
push
inc
xor
xchg
adc
movs
xchg
xchg
loope
mov
cdq
xor
pop
xchg
mov
scas
xchg
icebp
mov
dec
adc
push
mov
adc
mov
mov
leave
push
loope
add
xor
adc
(bad)
xor
add
call
mov
mov
ror
fsubr
adc
stos
xchg
or
ret
(bad)
loop
loop
jmp
xchg
push
dec
je
adc
jle
pushf
push
popf
jmp
mov
fs
jo
jo
loopne
xchg
int
sub
dec
pop
xchg
(bad)
mov
std
xchg
jmp
ret
cmp
jae
je
mov
scas
pop
adc
bound
shld
test
mov
fs
xor
das
ss
adc
xor
xchg
idiv
popa
call
test
rcl
jo
adc
jbe
cwde
or
or
pop
stos
inc
out
push
out
inc
int3
adc
fbstp
xchg
pusha
sub
dec
pop
jecxz
dec
sbb
shl
pop
mov
scas
dec
test
mov
ins
mul
repnz
fisubr
dec
adc
jecxz
jle
jl
push
jmp
out
mov
pushf
cmp
or
pusha
mov
fnstsw
bound
fstp
push
clc
or
cmp
cwde
sub
and
lahf
inc
jmp
inc
push
adc
outs
push
xchg
jg
int3
fwait
xchg
in
imul
jno
pop
stos
lock
and
mov
pop
aam
push
out
sub
(bad)
sti
retf
in
in
jb
enter
scas
jle
rcl
jmp
mov
fwait
out
jns
add
xor
retf
pop
icebp
push
and
(bad)
mov
or
sbb
add
retf
cmc
in
xor
scas
pop
adc
adc
xchg
or
jp
pushf
add
loop
cmps
out
and
jecxz
retf
xor
push
xor
(bad)
push
sbb
xlat
or
cmps
sbb
test
shr
xor
inc
and
int3
outs
lods
adc
xchg
dec
xchg
xchg
std
mov
pushf
jmp
inc
icebp
ret
stos
mov
pusha
rcl
(bad)
into
dec
or
or
add
(bad)
test
loope
fidiv
xor
rcl
dec
jae
adc
mov
push
xchg
cwde
add
stc
mov
mov
mov
pop
adc
push
adc
iret
or
xchg
jp
add
call
add
dec
mov
icebp
and
push
adc
mov
adc
cwde
cdq
or
or
or
dec
dec
out
iret
bnd
int3
mov
call
ds
stc
push
push
in
or
aaa
add
pop
dec
hlt
shl
es
sar
shr
mov
ins
mov
xor
mov
and
dec
in
jle
mov
dec
jmp
push
pop
xchg
cld
stc
and
ja
loopne
loop
cmp
push
xor
arpl
push
mov
ins
push
clc
pushf
xchg
leave
sbb
test
sar
inc
pop
(bad)
rol
pop
or
outs
enter
retf
clc
pop
sub
fdivrp
repnz
fisubr
out
jb
inc
cmp
rol
jbe
xchg
adc
fstp
xchg
xchg
fldenv
mov
popa
inc
mov
pop
fs
push
fsubr
ss
or
jbe
add
(bad)
fidivr
pop
fucomi
push
mov
and
mov
pop
les
lahf
cwde
inc
dec
fld
inc
stos
iret
icebp
mov
inc
mov
pop
fnstcw
mov
and
sti
push
stos
scas
sub
dec
aaa
jecxz
add
es
pop
aam
mov
arpl
scas
mov
ins
mov
ins
dec
mov
jge
mov
out
dec
(bad)
call
pop
ja
mov
and
ja
xor
dec
mov
fs
data16
loop
cmp
xor
arpl
push
mov
jge
adc
push
call
aas
out
xchg
test
ror
mov
jno
inc
pop
mov
icebp
ins
push
pop
(bad)
ror
test
sar
add
inc
retf
push
inc
enter
jne
les
push
nop
push
inc
fisttp
push
stos
outs
and
mov
pusha
fdivr
shl
cs
fist
ror
sub
cdq
xchg
stc
jne
mov
scas
xchg
xor
and
dec
mov
test
mov
pop
cli
adc
mov
mov
sbb
not
push
iret
stos
fstp
cmps
xchg
or
mov
xchg
lock
icebp
arpl
mov
pusha
cld
adc
sbb
out
add
mov
imul
pop
xchg
shr
adc
cdq
jge
mov
pop
cwde
mov
and
lahf
dec
jno
inc
lods
mov
dec
jne
add
xchg
jl
or
push
out
push
loop
cmp
mov
pusha
aaa
sbb
push
cs
lahf
adc
dec
daa
stos
xchg
test
mov
ins
loope
fidivr
ins
jnp
enter
lea
js
or
push
ficomp
les
mov
mov
cmp
mov
test
sub
clc
xchg
push
clc
sub
inc
xor
sub
hlt
mov
imul
fwait
sbb
test
shl
mov
imul
dec
lods
ret
mov
or
jle
cmp
(bad)
jmp
cmp
(bad)
jno
fs
rcl
(bad)
mov
or
inc
add
stos
jp
hlt
test
jb
inc
sbb
rcl
movs
mov
gs
cwde
test
mov
scas
lods
loope
sub
das
outs
inc
mov
int3
jae
in
xchg
call
ds
jecxz
call
mov
popa
sbb
push
xlat
xor
stos
imul
mov
push
ds
das
and
enter
lds
push
xor
jmp
mov
(bad)
fimul
sbb
ja
add
mov
sub
push
xor
fild
clc
fwait
mov
inc
frstor
mov
add
mov
push
fmul
mov
movs
pop
lea
mov
pop
inc
add
pushf
add
retf
cmps
icebp
sub
shl
mov
jo
cmp
(bad)
into
and
or
scas
sub
pop
add
xlat
std
repnz
shl
inc
cmps
aas
adc
cdq
adc
arpl
mov
scas
cwde
mov
scas
and
xchg
inc
xchg
out
cli
mov
fninit
push
jp
and
sti
jecxz
mov
in
bound
cmp
and
pop
sbb
test
rcr
shr
mov
inc
enter
jo
cld
and
call
cmp
pop
imul
not
out
ret
cmp
jae
test
test
mov
pop
imul
sub
pop
sub
dec
mov
addr16
jbe
cmp
dec
fcmovnb
cwd
mov
mov
popa
sbb
dec
out
mov
mov
stc
xchg
loopne
cli
pop
jbe
fs
fimul
xor
mov
addr16
lock
pop
mov
mov
rol
dec
imul
mov
int3
in
add
cmp
repz
pop
jle
and
sub
pop
scas
xor
fwait
dec
push
ja
movs
sbb
xlat
mov
mov
mov
test
mov
ins
pop
loopne
dec
(bad)
sub
dec
jmp
loop
jle
aam
(bad)
jbe
push
and
fistp
mov
scas
add
clc
scas
mov
mov
stc
sub
cli
adc
das
jbe
xchg
cmp
xor
fwait
xor
mov
movs
push
icebp
pop
call
test
ror
dec
dec
outs
or
jg
add
add
xchg
enter
fnstcw
js
and
adc
xor
dec
je
rcr
xlat
pushf
outs
mov
mov
test
mov
ins
xor
pop
sub
dec
pop
jae
test
std
aam
mov
imul
cdq
adc
ja
mov
scas
xchg
loope
jle
cwde
das
shr
sahf
dec
jno
clc
test
sar
(bad)
sub
adc
mov
push
pop
or
jb
lods
jmp
xchg
dec
js
mov
pushw
add
push
cmp
out
ret
add
stc
xchg
mov
loope
xchg
dec
sub
out
mov
dec
cmp
push
cmp
push
mov
mov
adc
inc
push
adc
cmp
scas
shr
mov
ins
bound
cld
adc
xor
out
jp
enter
adc
adc
jmp
push
push
xchg
les
sbb
ja
add
mov
addr16
jb
cmp
outs
sar
pushw
int3
adc
cmp
xchg
sub
cld
adc
push
fdivr
ret
adc
test
xchg
xlat
cdq
mov
imul
mov
jno
mov
gs
loopne
jle
or
push
jmp
push
dec
cli
ret
sub
xchg
je
loopne
xor
jae
call
adc
mov
stc
lds
call
jno
xor
push
inc
nop
dec
(bad)
call
or
mov
add
jb
mov
cmp
mov
pusha
xchg
add
xchg
adc
sahf
cli
dec
push
fld
ret
add
pop
rcr
int
and
xchg
lods
add
mov
ins
add
lods
cmp
jnp
dec
popa
pmulhuw
add
dec
push
pop
repnz
add
mov
(bad)
cs
xchg
sub
dec
and
xchg
ins
adc
dec
xchg
(bad)
adc
mov
mov
mov
adc
pop
bound
les
sbb
test
or
or
adc
add
imul
adc
jb
jo
sub
jmp
push
inc
adc
mov
js
je
add
adc
repnz
sub
sbb
retf
ret
adc
stc
aad
pop
xchg
loopne
or
adc
sahf
add
dec
stos
repz
test
aam
adc
jae
xor
xchg
and
mov
mov
mov
mov
push
pop
fisttp
(bad)
lods
sub
mov
dec
inc
pop
push
push
cmp
cli
out
loop
xchg
loop
xor
fwait
xor
add
mov
icebp
xchg
dec
pop
fwait
rcr
test
ror
pop
or
shl
std
iret
add
or
pop
sar
sub
jmp
jae
pushf
jae
aam
cmps
aam
push
xor
pop
gs
push
movs
pop
cmp
mov
addr16
xor
cmp
dec
loop
data16
xor
ss
push
mul
adc
aaa
and
xchg
and
cmp
mov
push
addr16
rcr
mov
ins
pushf
shr
dec
push
ds
addr16
lock
cmp
iret
inc
jns
inc
mov
cmp
pop
aam
retfw
cld
adc
cwde
and
sahf
repz
stos
aam
sbb
pop
xor
mov
fldenv
mov
addr16
test
mov
cmp
push
aas
arpl
cwde
bound
cmp
xor
push
lods
push
sbb
pop
jge
int3
mov
imul
outs
outs
push
cmp
push
ds
pop
xlat
fisubr
cld
sbb
test
shl
data16
aam
push
cmp
pop
lods
stos
test
jle
pop
fdivr
inc
xor
arpl
mov
xor
pop
pop
pop
push
ins
lods
cld
and
mov
jge
cmp
jmp
inc
sub
fs
enter
movs
jg
fcomp
in
add
push
pop
(bad)
lock
rol
jmp
inc
or
into
sub
dec
enter
jle
(bad)
fdiv
jmp
fld
inc
or
into
mov
add
clc
cmps
add
mov
pusha
ret
adc
jae
pusha
xchg
dec
aad
cs
xchg
les
sti
mov
mov
stc
scas
ss
and
dec
pop
(bad)
mov
test
or
inc
clc
mov
sbb
test
sub
dec
fwait
xor
and
adc
iret
test
rol
or
rol
call
ds
repz
push
push
aam
stos
inc
xor
pop
pushf
je
shl
movs
xlat
(bad)
or
cmps
mov
test
mov
data16
loopne
jb
or
shl
dec
mov
bound
pop
jns
push
call
xor
mov
push
cmp
push
ficom
(bad)
(bad)
cmps
mov
sbb
adc
cdq
out
sub
dec
xchg
cmp
cld
out
push
ss
int3
or
cmp
add
xor
hlt
scas
push
cmp
addr16
pop
cmps
hlt
xchg
and
sbb
cmps
scas
xor
pop
(bad)
xchg
or
cmp
scas
push
cmp
xor
xchg
cmp
addr16
xor
adc
push
cmp
cmp
cmps
xor
addr16
mov
addr16
sar
movs
outs
cmp
imul
outs
(bad)
cmp
out
jmp
shl
je
nop
cmp
xlat
sub
addr16
or
push
je
fs
mov
addr16
pop
sar
das
and
mov
pusha
xchg
push
aas
popa
out
call
push
gs
mov
xchg
cmp
push
ficom
pop
ss
movntps
mov
inc
and
fs
cmps
out
sub
dec
adc
xchg
out
push
push
(bad)
call
aas
xchg
mov
scas
xchg
leave
in
dec
adc
sbb
hlt
xchg
(bad)
sub
rcr
mov
ror
mov
push
ds
scas
push
(bad)
dec
cli
daa
inc
inc
xchg
mov
rcr
out
cmp
cmp
arpl
popf
inc
cmp
pop
sbb
out
cmps
outs
cmp
imul
outs
(bad)
pop
pop
in
int3
jmp
mov
std
jo
push
call
aas
aas
mov
imul
sahf
(bad)
leave
cmc
aad
jbe
fcomp
ret
push
sahf
jae
shr
inc
rcl
or
pushf
xor
stc
sub
repnz
xor
xor
dec
ficom
push
inc
mov
xchg
sbb
mov
movs
fscale
push
call
mov
movs
mov
push
outs
mov
dec
nop
retf
pop
adc
cwde
out
or
or
bound
ret
push
scas
push
jne
ror
xlat
les
or
push
cmps
fiadd
stc
mov
pusha
mov
add
not
dec
xchg
dec
fst
adc
test
aad
fidiv
sbb
mov
xchg
mov
push
pop
addps
push
mov
lods
inc
or
pop
mov
jl
cld
push
xor
adc
sti
push
cmp
cmp
push
test
shl
cmps
fwait
jno
nop
mov
push
aas
pop
pshufw
and
jmp
push
clc
or
adc
call
sub
fwait
inc
leave
xchg
jno
js
xchg
sar
popa
sub
fwait
or
mov
push
mov
pop
retf
imul
(bad)
fiadd
or
or
push
sub
popf
and
mov
pop
mov
adc
xchg
rol
stos
pushf
xchg
jns
inc
cmps
psraw
jbe
or
jmp
xor
(bad)
jb
push
in
rcl
cmp
adc
fwait
pop
std
xchg
mov
mov
dec
inc
fwait
push
popa
xor
xor
iret
mov
push
int
pop
cwde
nop
mov
sahf
lmsw
scas
stos
or
pop
shl
xor
out
push
into
sbb
or
mov
lods
cs
xchg
repnz
dec
fistp
movs
adc
repz
mov
rcl
jns
xchg
nop
sbb
and
fwait
or
or
pop
mov
xchg
repnz
push
in
adc
inc
sbb
setno
jl
adc
scas
out
push
xor
dec
push
and
xchg
repnz
not
rcl
fcom
xchg
sbb
daa
push
xchg
mov
mov
imul
hlt
lahf
xchg
adc
adc
(bad)
sbb
(bad)
mov
mov
cdq
push
inc
push
sub
lods
jecxz
adc
xor
xchg
fdivr
or
push
jmp
inc
movs
sti
popf
ret
in
jb
pusha
xor
pop
outs
adc
dec
push
retf
xchg
or
or
ret
(bad)
loope
fcmovb
jmp
adc
push
test
or
fwait
call
dec
ret
mov
push
xor
mov
int3
push
mov
pusha
add
stc
jmp
mov
loope
xor
das
les
hlt
dec
jbe
adc
xchg
xchg
push
sbb
test
shl
mov
mov
rcl
xchg
dec
sbb
xchg
jle
jl
xchg
jmp
cmp
fwait
jb
fs
movs
rcl
xor
pop
jp
adc
push
loop
push
rsm
xor
imul
hlt
call
adc
in
xchg
adc
sbb
xchg
adc
icebp
mov
cdq
push
rcl
mov
scas
add
clc
movhlps
sbb
adc
repnz
cli
xchg
rcr
imul
xor
pop
lods
xchg
push
rcr
inc
xchg
(bad)
xchg
lods
js
or
inc
fisub
mov
in
xor
cmp
push
shl
adc
aaa
sub
xchg
adc
cld
popf
adc
jb
test
rcl
mov
imul
mov
mov
loope
(bad)
push
push
mov
addr16
adc
cmp
(bad)
cli
gs
or
loop
sbb
or
pop
mov
mov
stc
xchg
ret
loopne
jb
push
ds
xchg
adc
push
(bad)
xchg
xchg
jns
mov
pop
mov
mov
push
loop
dec
or
or
(bad)
add
push
xchg
sbb
(bad)
adc
mov
mov
pusha
push
cwde
adc
das
sbb
stos
popf
ror
add
mov
ins
push
shr
and
sti
lea
jnp
or
in
(bad)
ror
add
les
popf
sar
popa
xor
mov
imul
lea
les
or
jbe
sub
rcr
and
imul
mov
lds
push
sbb
test
mov
mov
dec
imul
mov
(bad)
in
js
or
(bad)
fistp
(bad)
push
jp
mov
scas
ret
cdq
xor
je
push
jmp
inc
hlt
sbb
outs
(bad)
movs
jp
int3
sbb
pop
xor
pop
das
in
stos
and
adc
xchg
je
cld
daa
xchg
xlat
mov
mov
mov
mov
sar
popa
push
ins
nop
pusha
xor
cvtps2pi
jnp
dec
mov
fs
repnz
out
(bad)
rcr
int3
ja
and
dec
std
daa
push
dec
mov
mov
add
repnz
(bad)
cmp
sub
arpl
sbb
xchg
xor
jnp
push
xchg
mov
addr16
cmp
imul
mov
pop
or
push
cld
daa
push
iret
xchg
in
cli
lea
cmp
or
pop
cmp
xchg
sub
in
xchg
ret
(bad)
xchg
jno
test
popf
shl
mov
push
ds
add
push
int3
test
daa
(bad)
shl
push
cmp
cwde
xchg
gs
lahf
adc
data16
lods
push
popa
cmp
or
bound
mov
fs
sti
xchg
ss
in
pop
cmp
and
pop
xchg
mov
std
daa
xchg
push
push
call
aas
mov
mov
adc
pop
push
ins
adc
in
mov
jge
enter
or
sar
adc
lock
leave
cmp
ja
and
adc
xor
daa
push
retf
push
jmp
inc
fs
adc
hlt
fist
retf
sub
and
inc
xchg
repz
jge
aam
stos
call
aas
mov
mov
push
fld
dec
mov
and
or
out
push
push
dec
cmp
stos
cli
lea
inc
loop
xor
ja
cld
push
mov
bound
sbb
xchg
xor
imul
jge
ins
cmps
shr
inc
(bad)
mov
or
in
dec
sub
pop
and
mov
pop
fucomp
mov
sub
aas
or
shr
push
enter
retf
jg
cwde
jb
in
sub
test
rcr
push
cmp
test
popa
aam
mov
imul
call
jns
or
push
pop
xor
jmp
and
ret
fwait
mov
lods
je
push
or
mov
add
or
out
es
stc
lea
fisttp
xor
or
adc
daa
jp
xchg
icebp
mov
imul
push
aas
mov
mov
ror
lds
nop
add
fmul
repnz
mov
or
xchg
jb
js
pushf
rcr
mov
mov
add
push
push
cmp
pop
pop
add
xchg
pop
sar
inc
into
sti
xchg
loop
mov
adc
fiadd
ss
push
sub
pop
or
xlat
and
mov
pop
aad
xchg
shr
mov
ins
xchg
shl
enter
dec
jge
or
adc
ds
jmp
inc
push
les
inc
in
push
shl
fdivr
mov
pop
and
mov
popa
pop
clc
xchg
ret
fist
popf
rcl
adc
jbe
xchg
adc
stc
and
fwait
psraw
push
ret
mov
push
xchg
jae
clc
nop
adc
fimul
adc
mov
gs
or
xchg
mov
loope
xchg
push
xor
(bad)
fwait
xchg
push
dec
jnp
adc
adc
ss
or
loop
sbb
xor
mov
mov
or
xchg
xchg
sbb
int
adc
push
(bad)
jmp
or
push
(bad)
jnp
or
jp
lock
adc
ss
sti
adc
pop
mov
adc
add
push
adc
push
frstor
add
popf
adc
data16
adc
sbb
ins
xchg
nop
cmp
mov
push
mov
push
inc
cmp
(bad)
jb
mov
or
ss
clc
fdivr
push
and
daa
loop
mov
mov
push
aas
sbb
xchg
shr
sub
adc
stos
inc
test
mov
ins
xchg
shl
sub
fwait
lea
sar
push
outs
jecxz
(bad)
xchg
retf
jmp
adc
psllw
mov
imul
sub
or
mov
ins
vmovups
bnd
sub
shl
sub
imul
popf
xchg
fnstenv
adc
xlat
sub
imul
(bad)
rcr
xchg
or
loopne
(bad)
sar
bound
ret
adc
jle
je
push
jmp
sbb
or
movs
add
rcr
mov
stc
xchg
and
loopne
mov
and
mov
pop
xchg
lahf
xchg
icebp
dec
out
call
icebp
pusha
jbe
or
fst
nop
dec
and
sti
jb
repnz
mov
or
sbb
adc
and
out
xchg
shl
pop
pusha
mov
mov
imul
add
add
or
out
into
(bad)
xchg
cmp
mov
adc
add
push
xor
ja
push
sbb
add
or
mov
aad
xchg
pop
popa
sbb
xchg
and
lahf
fist
cdq
push
xchg
dec
inc
lahf
adc
jg
lods
xchg
adc
fiadd
bswap
and
or
mov
movs
push
icebp
push
cs
rcl
adc
out
mov
imul
mov
scas
in
test
mov
ins
adc
out
faddp
push
or
or
bnd
clc
jmp
ror
ret
xchg
xchg
sub
mov
push
cwde
or
adc
lods
stc
adc
dec
inc
fisttp
xchg
cmp
xchg
repnz
push
xchg
shl
jns
xchg
xchg
push
loopne
xchg
adc
adc
mov
mov
adc
mov
mov
test
ror
adc
dec
retf
adc
add
(bad)
(bad)
adc
sar
adc
adc
inc
push
adc
xchg
push
fadd
adc
push
neg
movs
adc
push
jne
pusha
xchg
nop
fldcw
mov
dec
popf
or
push
loop
mov
imul
push
les
or
or
cwde
xor
pop
jmp
push
shr
js
adc
jbe
jl
mov
sub
or
and
push
clc
in
inc
aaa
fbstp
xchg
jae
sub
xchg
aam
inc
daa
xchg
pop
sar
popf
jno
push
cmp
push
ds
adc
pop
jl
mov
out
(bad)
jb
cmp
jmp
pop
gs
xchg
and
push
mov
in
fcom
dec
sub
daa
adc
add
clc
sar
ds
adc
add
adc
inc
test
adc
daa
out
xchg
adc
cdq
imul
lahf
mov
jno
lods
pop
push
shr
inc
daa
(bad)
(bad)
dec
js
or
xchg
fs
or
sub
sti
jmp
ret
in
xor
cmp
push
shl
sub
xchg
push
sbb
test
rol
cmc
jno
sub
in
(bad)
push
lea
enter
xchg
jle
sar
jmp
retf
les
dec
ror
fstp
mov
and
or
push
mov
add
clc
in
and
fbstp
jb
and
dec
and
mov
popf
test
pop
xchg
test
leave
es
mov
ins
xor
arpl
dec
jg
mov
or
push
out
mov
stc
inc
mov
mov
inc
cs
push
aad
dec
test
sbb
xor
sahf
(bad)
cmc
fcom
call
icebp
mov
mov
ror
push
and
syscall
mov
mov
(bad)
jmp
mov
fs
sbb
xchg
pop
push
lods
or
push
or
aas
stos
add
ins
ret
rol
jno
inc
xchg
jnp
sbb
in
sahf
enter
stos
jle
pop
adc
push
adc
lods
stos
adc
jb
inc
(bad)
sar
or
adc
fiadd
data16
and
cmp
pop
mov
adc
aaa
cmp
xchg
jl
and
xchg
out
mov
popf
cmp
push
and
mov
ins
pop
adc
and
or
addr16
sub
push
jg
inc
adc
xlat
outs
cmp
jl
xor
sahf
cmp
retf
and
sar
adc
jle
cmp
daa
jmp
cmp
addr16
fs
adc
and
mov
popa
cmps
push
aas
mov
pusha
cmp
aaa
les
subps
cmp
daa
fiadd
std
sub
addr16
inc
fidivr
push
aas
js
adc
ss
(bad)
sub
dec
sbb
lahf
out
sahf
mov
cmp
push
aas
mov
in
ins
push
fsubr
dec
jnp
loopne
and
cs
repz
dec
sub
pop
jp
rcl
xor
pop
and
mov
mov
mov
fstp
push
and
pop
inc
(bad)
mov
lods
jne
pop
dec
fadd
cmp
cld
mov
gs
inc
cmp
push
jg
pusha
pop
adc
out
es
(bad)
cmp
imul
jno
pop
pop
ins
rol
mov
pop
dec
call
aas
cld
stos
ret
out
jb
enter
sbb
arpl
adc
jmp
push
xchg
mov
gs
shl
pusha
xor
sub
dec
(bad)
sti
hlt
data16
in
cmp
pop
sbb
cld
pop
mov
mov
fnstcw
push
sbb
test
cmp
imul
ins
es
gs
sar
cmp
(bad)
jg
inc
dec
sub
pop
outs
mov
leave
add
in
repnz
ss
rcr
and
adc
mov
test
popf
outs
sbb
test
mov
mov
dec
imul
jle
(bad)
aam
jmp
fistp
mov
scas
lds
xor
js
push
and
mov
sub
dec
cli
add
sbb
hlt
mov
arpl
push
jg
mov
scas
sbb
cmps
lahf
jge
cmp
inc
out
retf
cmp
int3
test
int3
xchg
xor
xchg
fmul
sti
jecxz
mov
cmc
ss
inc
hlt
xlat
pop
sbb
and
mov
test
shl
mov
ins
int
lods
dec
leave
xchg
dec
jle
in
out
jmp
jns
inc
je
loopne
outs
xlat
and
push
retf
sbb
dec
sbb
test
mov
imul
ins
jne
xor
jle
clc
retf
push
jmp
inc
dec
sub
mov
mov
add
push
xor
mov
popa
fmul
or
dec
mov
pusha
inc
lock
add
jbe
sbb
dec
fimul
add
mov
mov
gs
dec
fidiv
add
mov
pop
repz
add
push
mov
bound
lods
aas
cdq
mov
mov
add
jge
sbb
dec
lea
loopne
xchg
ins
cs
sti
inc
dec
jne
in
jp
fdiv
jecxz
push
push
jnp
shr
inc
mov
scas
pop
test
mov
ins
ffree
repnz
sub
cmp
enter
ins
jle
sub
pop
jge
test
and
ja
inc
mov
(bad)
push
ins
daa
(bad)
retf
(bad)
lds
fdivr
(bad)
fidivr
push
fucomip
sub
sub
inc
xor
ja
push
je
(bad)
mov
in
push
or
ss
movs
clc
mov
popa
mov
pop
sub
push
das
sub
adc
jnp
xchg
test
or
fiadd
icebp
and
mov
shl
pop
inc
sub
nop
pushf
or
or
(bad)
mov
pop
call
ds
adc
ret
imul
xchg
fnstenv
cwde
dec
and
jmp
xor
mov
inc
ror
or
fisttp
push
scas
mov
bound
jecxz
xor
repnz
out
push
rcl
inc
sbb
xchg
arpl
xchg
popf
xor
pop
inc
pop
fwait
shl
daa
movs
outs
mov
mov
addr16
mov
paddd
in
or
or
jae
add
aam
out
into
push
adc
cwde
test
sahf
ss
test
or
and
daa
add
push
mov
addr16
xchg
or
imul
jno
jl
sub
push
in
inc
xchg
adc
dec
jnp
xchg
pop
(bad)
in
xchg
sub
aaa
push
fwait
ret
cli
movs
jb
sub
mov
sar
imul
pextrw
mov
push
ds
push
rol
mov
xchg
xchg
je
js
adc
mov
or
sbb
sub
or
mov
jns
hlt
push
shl
xor
adc
xchg
dec
xchg
mov
mov
cdq
add
push
call
rcl
mov
mov
mov
or
adc
push
push
mov
in
or
add
mov
repnz
xor
xchg
loope
dec
xchg
xchg
xor
mov
xchg
xchg
xchg
mov
cdq
call
xchg
sbb
push
movups
push
loop
push
or
or
push
inc
jecxz
adc
adc
push
(bad)
xchg
adc
sbb
adc
in
push
xor
push
pop
mov
ins
not
adc
pop
jnp
or
xchg
mov
ins
jmp
push
popa
mov
ja
adc
fstp
imul
bound
pop
ja
or
fcmovnu
(bad)
xchg
mov
sub
inc
lds
xchg
adc
out
xchg
push
push
cmp
fwait
or
adc
jbe
hlt
adc
pop
(bad)
adc
xchg
mov
movs
or
or
mov
scas
adc
punpckldq
adc
(bad)
push
push
push
and
or
adc
push
jp
xor
adc
fisttp
xchg
xor
dec
add
xchg
sbb
icebp
fst
cdq
mov
xchg
mov
ins
scas
sbb
shufps
or
or
repnz
imul
push
xchg
ret
loopne
xchg
adc
mov
xchg
push
and
repnz
cdq
lock
xchg
fsub
scas
mov
adc
bound
repnz
add
sub
repz
xchg
inc
loopne
adc
ja
adc
xchg
fisttp
xchg
xchg
sub
add
mov
pop
mov
mov
adc
dec
or
or
inc
add
push
loop
repnz
cli
xor
rol
loop
xchg
adc
nop
xchg
xchg
loope
push
xchg
xchg
xor
or
popf
mov
mov
push
(bad)
mov
ins
adc
cpuid
(bad)
xchg
or
or
push
loop
inc
xchg
xor
ret
iret
adc
adc
(bad)
push
push
push
xor
sti
or
push
mov
mov
stc
repz
(bad)
adc
xchg
movs
dec
popf
xchg
xchg
mov
popa
icebp
rcl
mov
xchg
retf
mov
scas
mov
or
dec
dec
push
fiadd
repnz
push
jecxz
shl
xor
adc
jecxz
xchg
xchg
sbb
test
shl
xchg
test
rcl
sub
dec
mov
data16
or
cmp
paddd
fisttp
jb
and
inc
rcl
cld
jne
adc
out
adc
fwait
lods
imul
jno
pushf
pop
icebp
shl
movs
ror
or
or
sub
ud0
pop
or
or
repnz
pop
call
ds
xchg
or
push
inc
(bad)
xchg
cmc
xchg
jb
pushf
fcom
shl
cmps
push
adc
cmp
gs
adc
pushf
push
popa
fmul
adc
es
mov
adc
rdpmc
ss
xchg
or
pop
sub
pop
sbb
inc
xchg
sti
mov
mov
jmp
aas
mov
ins
and
xchg
(bad)
leave
mov
popf
jp
pop
or
mov
ins
push
nop
inc
inc
(bad)
adc
or
retf
(bad)
sub
repnz
les
cmp
rcr
push
sub
adc
mov
push
push
aas
(bad)
fbstp
ins
jmp
adc
xchg
in
ficom
fwait
fwait
popa
mov
movs
mov
mov
xchg
fistp
adc
sbb
movzx
bound
pop
inc
mov
sub
inc
(bad)
retf
xchg
adc
adc
out
test
cmp
fisttp
or
and
add
push
mov
cmc
push
xchg
pop
(bad)
xchg
adc
mov
popa
imul
lahf
pushf
push
jno
lods
cmps
xchg
rol
inc
mov
pusha
or
fcmovu
cs
mov
dec
sti
or
push
jb
cmp
adc
fistp
xchg
xchg
sub
dec
shl
test
icebp
rcl
mov
push
ds
(bad)
xrstor
or
dec
inc
out
pop
push
xor
stc
repnz
cli
cmp
adc
xchg
xor
pop
push
hlt
fwait
xchg
and
adc
cmps
pop
mov
adc
mov
or
or
pop
xor
xchg
cld
push
adc
inc
out
adc
jae
xchg
xchg
cmp
imul
mov
mov
mov
pop
mov
imul
or
sub
add
ret
test
rcl
and
adc
xchg
lds
cwde
xchg
jns
jo
cwde
loope
into
lods
popf
xor
inc
test
xchg
add
adc
out
push
adc
cmp
bndldx
in
mov
mov
sbb
push
xchg
mov
scas
mov
popf
xchg
dec
pop
pop
test
mov
sub
xchg
add
inc
ins
fwait
lock
enter
loope
mov
xchg
xor
pop
(bad)
adc
and
jp
add
ja
lock
fdivr
into
shl
mov
leave
add
clc
adc
add
(bad)
sub
dec
add
shl
jge
adc
xor
retf
xchg
adc
test
movs
push
mov
mov
sub
sar
ins
mov
pop
sbb
test
xchg
loop
mov
imul
push
icebp
ret
jbe
nop
shl
push
(bad)
(bad)
and
or
scas
jmp
push
mov
mov
jns
loopne
repnz
cs
das
mov
arpl
hlt
lahf
xchg
add
lods
call
mov
jge
mov
out
push
nop
dec
cmp
sti
jp
add
inc
aaa
pop
repz
cld
aam
loop
out
push
xor
fs
sbb
imul
(bad)
cmps
dec
jno
jl
mov
ins
in
(bad)
nop
(bad)
cmp
push
ds
xor
imul
dec
jb
sub
mov
je
cmp
clc
xchg
sbb
sub
xchg
mov
mov
jns
movs
push
xor
imul
popf
nop
dec
je
test
mov
mov
or
or
mov
mov
jns
mov
(bad)
(bad)
xchg
dec
sub
jmp
mov
ret
push
add
je
lock
(bad)
add
xor
sbb
mov
mov
mov
stc
adc
add
(bad)
das
or
mov
mov
mov
adc
mov
fst
call
mov
mov
mov
dec
sar
mov
mov
popa
cli
adc
xor
psrad
repnz
push
rol
not
test
out
and
mov
mov
jno
sbb
iret
icebp
popf
mov
dec
push
(bad)
mov
push
lock
inc
mov
xor
jae
mov
shl
push
mov
adc
sti
add
adc
repz
xchg
popa
sbb
mov
xor
mov
sbb
pop
or
or
pop
inc
mov
or
pop
mov
(bad)
(bad)
cld
push
xor
jnp
nop
push
cld
in
push
adc
aaa
bound
xchg
cmp
add
bound
push
neg
push
jno
sub
imul
jo
or
push
lods
add
clc
iret
jb
jl
mov
clc
out
push
adc
cmp
sti
xchg
sub
in
ret
aaa
sahf
jae
sbb
xor
stos
mov
fild
mov
ins
jecxz
and
xor
mov
jge
mov
sbb
pop
push
aas
movs
jmp
sbb
les
shl
lock
ins
test
sar
(bad)
jp
call
ds
dec
je
lock
adc
ja
sbb
fwait
add
stc
ror
mov
jno
js
sub
repz
inc
(bad)
shr
stos
jnp
adc
ret
in
xchg
push
cmp
fwait
inc
fstp
movs
jb
sub
mov
mov
test
push
js
and
(bad)
(bad)
mov
or
or
mov
bound
pop
pop
enter
stos
jg
nop
inc
inc
jmp
push
jns
les
add
and
mov
gs
nop
push
mov
test
nop
push
pop
clc
or
sbb
fild
or
mov
dec
call
aas
aam
push
out
ins
push
xchg
adc
(bad)
cdq
xchg
xchg
mov
cwde
cdq
add
scas
sahf
mov
scas
shl
inc
dec
(bad)
iret
lock
or
into
fdivr
push
push
mov
loopne
cli
add
ret
xor
jae
pusha
push
adc
repz
xchg
pop
aad
call
test
shl
xor
and
(bad)
dec
lods
mov
or
or
jp
cld
(bad)
jmp
mov
mov
adc
pop
push
sbb
pushf
or
mov
popa
mov
imul
or
ins
icebp
mov
test
rol
clc
add
loop
fsubrp
and
add
retf
cmc
inc
adc
je
adc
pop
(bad)
rcl
fwait
add
xchg
movs
cmc
xor
rcl
mov
pusha
dec
push
or
pushf
dec
add
mul
mov
(bad)
nop
fidiv
dec
push
xchg
or
mov
cwde
cmps
std
and
lahf
mov
bound
adc
outs
(bad)
xchg
jl
int3
or
out
xchg
cwde
cmp
mov
jmp
aas
inc
push
(bad)
pop
ins
je
or
(bad)
xlat
xchg
push
mov
imul
xor
ins
inc
pusha
iret
adc
ja
mov
fisubr
jle
movs
sub
jmp
mov
jno
cmp
sar
and
(bad)
fisubr
scas
pop
or
pop
inc
push
test
jns
hlt
mov
ins
cmp
rcr
(bad)
arpl
mov
mov
pop
(bad)
pushf
push
cmp
jmp
sbb
les
addr16
mov
cmp
(bad)
jmp
mov
mov
add
clc
cld
jp
xor
out
mov
sub
dec
fs
adc
jg
adc
imul
pop
xchg
pushf
(bad)
and
mov
scas
push
aas
iret
(bad)
popf
sub
test
leave
push
add
clc
push
lock
inc
repnz
sub
mov
rcl
cwde
sti
cmc
retf
in
sbb
mov
push
push
pop
push
inc
push
(bad)
fwait
sbb
(bad)
or
cmps
(bad)
or
pop
bound
dec
out
aaa
mov
(bad)
int3
pop
push
adc
xchg
nop
xchg
cld
std
mov
bound
test
inc
xor
mov
ins
xor
pop
aad
push
lea
sahf
jmp
inc
cdq
jmp
ret
les
iret
mov
jno
mov
iret
mov
clc
(bad)
stos
push
add
stc
sub
jecxz
ret
xor
jae
sbb
aam
sahf
sbb
stc
popf
xchg
inc
mov
popa
sub
mov
mov
push
jnp
push
dec
nop
jecxz
push
mov
xor
fwait
dec
or
and
pop
jne
mov
sub
iret
push
xchg
rcr
movs
push
int
std
mov
pusha
add
xor
das
repz
push
push
aam
xchg
inc
test
test
xchg
into
loope
ficomp
mov
mov
xchg
sub
cmpps
pop
or
call
dec
cli
pop
mov
and
xor
mov
pusha
xchg
xor
or
xchg
dec
add
dec
call
rcl
icebp
mov
xchg
sbb
push
fst
mov
mov
cdq
scas
or
or
repnz
add
ror
out
cmps
xchg
mov
int3
mov
pusha
adc
or
cs
iret
add
dec
or
add
dec
icebp
repz
adc
(bad)
push
and
xchg
aad
mov
mov
mov
mov
rcr
ror
(bad)
mov
mov
or
push
dec
or
dec
cli
mov
in
and
repnz
repnz
sar
push
ficom
loop
mov
xchg
xor
cdq
add
call
mov
mov
lods
push
sub
inc
nop
mov
ins
push
cwde
out
(bad)
cli
popf
cmp
jnp
test
add
xor
imul
xchg
les
or
imul
add
ins
push
js
rol
xchg
fisttp
or
push
mov
imul
ret
xor
jae
js
sub
rcr
xchg
mov
imul
popf
jns
je
test
mov
mov
xchg
imul
lds
cli
or
loopne
(bad)
sbb
das
xor
mov
mov
mov
je
push
add
xchg
sbb
rol
add
mov
xchg
sub
push
add
inc
jle
lock
jmp
mov
xor
add
dec
shl
mov
rol
adc
nop
repz
stos
pmullw
mov
mov
or
lods
repnz
adc
jle
lods
adc
inc
jnp
in
jb
in
(bad)
rol
xor
pop
shl
adc
push
xchg
aaa
adc
add
push
sub
div
rol
rol
ins
repnz
adc
jle
push
adc
lods
jb
les
inc
rcr
lods
fist
ficom
xchg
jnp
or
xchg
jecxz
push
js
xor
sti
fist
push
dec
in
adc
xor
xchg
mov
mov
sub
xchg
push
and
and
test
push
int
mov
push
ds
dec
or
bound
pop
test
jo
cld
not
retf
in
xchg
mov
stc
pop
scas
xchg
cmc
loope
dec
xchg
xlat
xor
sbb
cmps
xchg
aad
mov
imul
call
pop
or
and
xchg
scas
jmp
xchg
inc
dec
ret
out
jp
je
adc
cli
(bad)
pushw
xor
sbb
or
movs
arpl
stc
cmps
xchg
pop
push
loopne
adc
pop
das
addr16
rcr
mov
int3
sar
xchg
xchg
jo
cld
sar
int
in
push
mov
adc
(bad)
push
pop
adc
sub
xlat
inc
sahf
inc
or
or
xchg
jns
in
pop
adc
sahf
(bad)
and
mov
popa
push
mov
xor
call
push
dec
add
xchg
sbb
(bad)
fnsave
mov
sub
xchg
dec
lds
ins
mov
add
div
jp
test
push
loop
mov
imul
or
or
lods
mov
sbb
inc
push
mov
ins
lods
js
adc
inc
fnstsw
push
jnp
sub
loop
mov
pop
push
(bad)
xchg
ja
sub
inc
xchg
daa
and
cwde
mov
push
js
test
xchg
fistp
imul
inc
cmp
pop
or
or
xor
inc
(bad)
cmp
jnp
fs
movs
in
adc
pop
pop
loopne
push
daa
and
mov
mov
push
aas
xchg
(bad)
mov
addr16
xchg
lds
imul
jno
jl
rcl
in
outs
(bad)
clc
cmp
or
pop
loop
push
sub
xor
sti
mov
push
sbb
aaa
inc
rcr
lods
imul
xchg
inc
lds
ins
test
in
(bad)
mov
imul
in
ds
dec
or
(bad)
les
and
ja
clc
mov
ffree
ficomp
sub
and
loopne
scas
adc
js
xchg
(bad)
dec
fld
hlt
fwait
out
mov
imul
arpl
les
mov
pop
paddusb
pop
or
or
addr16
call
adc
imul
inc
push
ret
fs
jl
je
cwde
out
(bad)
pop
sahf
cmp
sbb
stos
addr16
movs
mov
ins
jns
or
(bad)
loopne
push
daa
jp
push
ds
xor
inc
push
gs
ja
cmp
popf
jl
mov
test
mov
ins
rol
sub
or
mov
push
mov
pop
les
sbb
aas
rcr
lods
js
les
inc
fidivr
ins
(bad)
faddp
(bad)
and
mov
pop
mov
imul
push
inc
les
popf
sbb
inc
test
loope
jbe
mov
sub
imul
and
sbb
or
push
fnstsw
pop
jmp
mov
mov
dec
js
push
inc
jg
test
or
mov
mov
and
add
fisubr
dec
sbb
push
ret
sbb
jae
mov
pop
mov
arpl
dec
scas
outs
jns
test
sbb
test
std
cli
inc
mov
push
inc
xor
pop
xor
sbb
pop
push
xlat
movs
jle
sbb
cmps
pop
lds
out
shl
int
cmp
mov
pusha
int
std
sub
xchg
hlt
dec
(bad)
sti
ds
sub
push
hlt
inc
ss
mov
mov
fldenv
(bad)
push
sahf
and
pop
movs
test
dec
pop
mov
jns
lods
pop
ins
loopne
inc
es
das
in
jnp
jl
enter
mov
xor
(bad)
jmp
dec
fs
sbb
add
fdiv
dec
retf
mov
ins
mov
add
neg
jp
push
ds
xor
imul
in
push
ja
cmp
lods
movs
sub
sub
mov
ins
mov
jmp
aas
mov
lea
ins
pop
in
mov
imul
in
vpabsd
ja
sub
inc
in
daa
mov
enter
(bad)
jge
add
call
ds
sub
imul
inc
push
ret
pop
cmc
jl
je
fsub
or
inc
push
cmp
sbb
fs
movs
loop
xlat
mov
jns
sbb
push
loopne
cmps
daa
adc
cdq
dec
pop
arpl
mov
xor
scas
inc
push
ins
dec
in
outs
sbb
xchg
int3
mov
mov
jmp
aas
sub
mov
inc
xor
ret
(bad)
jne
hlt
je
fcomp
(bad)
xlat
loop
sahf
sbb
test
mov
ins
mov
scas
sub
dec
mov
ins
xor
(bad)
jmp
push
pop
in
les
sub
ja
mov
scas
imul
dec
dec
ret
aas
mov
push
ds
fistp
jp
fsubr
jecxz
push
inc
mov
jns
js
push
loopne
ficom
push
das
ja
pushf
fwait
dec
fld
mov
mov
rcl
push
lock
cmp
iret
iret
mov
mov
mov
pop
std
add
add
aas
retf
repz
ins
test
shl
vunpckhps
or
and
add
sub
pop
inc
fsubr
dec
sar
ins
sub
xchg
mov
pushf
jp
call
ds
mov
fs
push
les
mov
test
rol
sbb
inc
int
ins
mov
mov
push
fld
data16
sub
cmp
xchg
mov
imul
pop
into
mov
addr16
mov
imul
stos
or
into
cmp
push
ds
out
repnz
gs
je
cmp
xchg
(bad)
aad
inc
pushf
sbb
sub
movs
mov
mov
sbb
loopne
ss
mov
pop
pop
mov
sub
jmp
push
inc
call
aas
les
in
jbe
mov
leave
fist
cwde
mov
in
mov
add
clc
jno
sub
(bad)
loop
outs
sub
dec
or
or
imul
(bad)
xchg
inc
ffree
jmp
rol
out
scas
adc
cmp
dec
xchg
iret
gs
test
movs
push
popa
mov
push
pusha
jecxz
inc
mov
fs
pop
or
xchg
add
pop
sti
lods
neg
cmps
mov
jge
mov
adc
push
cmp
lahf
mov
movs
xor
pop
dec
cld
out
pop
push
and
and
ror
stc
push
outs
mov
pop
retf
cs
sub
dec
movs
repz
jle
mov
pop
push
lock
into
sub
mov
scas
add
out
fisttp
scas
retf
fisttp
lock
mov
pop
loopne
mov
arpl
dec
dec
stos
xor
jg
inc
push
pop
in
repz
lods
(bad)
aad
call
jmp
inc
cmps
dec
pop
aaa
jo
test
pop
iret
fs
mov
lea
fmul
pop
pop
push
mov
sub
ret
cmp
and
aam
scas
xor
push
test
cmp
imul
mov
movs
cmp
xor
pop
xor
mov
push
iret
mov
addr16
js
add
(bad)
mov
mov
inc
ret
and
jl
mov
aad
sahf
push
lea
cmp
inc
movs
jmp
dec
ret
mov
rol
jecxz
mov
xor
or
ds
inc
push
in
test
jb
jl
lock
ror
sbb
outs
mov
popf
scas
cmp
(bad)
fdivr
push
push
(bad)
mov
fs
or
ss
lahf
add
clc
pop
and
ficomp
mov
jge
lods
push
fucomp
ret
daa
aas
jae
cwde
mov
leavew
sbb
pop
inc
fs
lods
push
jns
int3
inc
test
shr
out
inc
shl
retf
xor
and
push
cmp
push
ds
test
shl
jbe
cmp
mov
ins
and
mov
inc
jle
pop
call
ds
ss
pusha
les
and
ja
sbb
test
les
inc
mov
scas
sub
and
dec
inc
jg
sub
clc
in
push
imul
sub
dec
sub
mov
add
push
and
iret
ficomp
mov
scas
and
mov
pop
int3
enter
xchg
rol
jmp
mov
les
loopne
jbe
add
dec
and
retf
jle
mov
test
rcl
clc
lds
or
scas
dec
dec
das
repz
cmp
xor
xchg
hlt
rol
cli
cdq
(bad)
adc
cdq
jecxz
scas
mov
mov
pop
and
sbb
cmps
cli
dec
xchg
mov
xor
data16
xor
arpl
int3
push
popa
xor
xchg
cmps
dec
sbb
test
shl
cmp
outs
pop
inc
xlat
int3
and
sbb
mov
pop
movs
cld
push
jle
mov
pop
cmp
push
cmp
push
ds
cmps
mov
inc
ds
outs
push
xor
retf
ret
gs
dec
test
sbb
cld
fst
sub
inc
cmp
push
ds
push
sbb
test
(bad)
mov
imul
push
pop
les
sub
dec
mov
mov
sub
lds
or
scas
jp
sub
dec
loop
mov
imul
push
inc
les
inc
sub
pushf
xor
pop
shl
gs
pop
fnstsw
mov
imul
sub
dec
js
enter
in
jb
sub
jmp
ds
pop
ret
adc
jnp
je
inc
in
(bad)
popf
outs
cmp
retf
popa
and
mov
pop
pop
enter
and
das
or
jmp
(bad)
jae
les
inc
mov
in
outs
call
mov
popa
in
clc
dec
sahf
das
leave
fisttp
add
xchg
inc
out
jae
shl
aam
mov
adc
or
out
fwait
dec
add
stc
push
cmp
out
xor
mov
mov
xor
fdecstp
mov
mov
mov
push
scas
xlat
push
loop
dec
sbb
xor
and
cmps
sbb
xlat
bound
arpl
dec
iret
mov
ins
adc
test
push
lods
(bad)
jp
dec
and
jecxz
jle
cmp
repz
push
aam
xchg
cmp
test
shl
shl
clc
xchg
ss
pop
jle
sub
jmp
imul
jb
(bad)
aas
jbe
test
ins
fist
leave
and
mov
popa
sahf
js
enter
sar
sub
nop
outs
inc
rol
or
or
out
and
sbb
retf
mov
movs
inc
test
mov
pop
aam
xchg
retf
das
fwait
or
movs
repz
rol
fnstenv
call
fldcw
dec
or
mov
add
mul
mov
arpl
cwde
mov
bound
int3
lods
xor
lahf
xchg
scas
stos
std
or
int3
add
fisub
hlt
loopne
cmp
xlat
cs
in
dec
push
xor
cmps
adc
push
sub
dec
cmp
imul
pop
cld
and
cli
lea
dec
pop
xchg
sub
push
out
ret
cmp
jae
test
sbb
test
rcr
jns
enter
mov
addr16
jle
cmp
outs
jmp
inc
add
clc
fs
retf
fidiv
pop
mov
stc
inc
push
push
addr16
stos
adc
das
xlat
inc
xchg
addr16
sbb
fwait
cmp
cmps
aam
add
call
cmp
or
xchg
add
mov
dec
idiv
add
xchg
fs
and
shl
mov
adc
cwde
addr16
sbb
lahf
cmp
push
aas
scas
addr16
mov
ins
int3
cmp
mov
enter
out
dec
shl
jmp
outs
push
push
cmp
push
sub
mov
addr16
and
cmp
scas
retf
sub
cmp
push
fsub
sub
pop
cmp
jae
lods
arpl
push
ds
sbb
imul
cmps
cmps
lds
movs
mov
fs
das
dec
sub
dec
mov
retf
xchg
clc
(bad)
pop
imul
ficomp
and
aas
sub
mov
mov
pusha
jg
sbb
stos
dec
leave
stos
test
shl
jbe
fdiv
(bad)
fcmove
es
and
out
gs
cmp
aaa
jmp
inc
sub
mul
outs
inc
hlt
fstp
bound
cmc
aas
sahf
pop
push
fsubr
sbb
mov
jne
mov
jmp
aas
sbb
mov
ins
cmps
inc
add
stc
jl
pusha
fsub
out
cs
das
cmp
dec
stos
dec
gs
test
adc
ja
pop
xchg
(bad)
fisub
call
shl
cmp
rcr
pop
pop
ins
(bad)
lods
sub
inc
jge
js
jl
cld
fiadd
aas
out
jb
ins
cmp
(bad)
fs
xor
aaa
fcom
pushf
sbb
daa
stos
cmps
movs
popa
mov
imul
aas
es
outs
and
mov
gs
clc
jmp
ficomp
in
mov
sub
dec
inc
jnp
jo
js
xchg
into
in
fnsave
xchg
mov
sub
add
mov
push
mov
pop
daa
nop
jae
sub
pmullw
inc
or
retf
add
and
imul
rcr
and
adc
mov
xchg
inc
cmc
pop
ss
jnp
and
lahf
in
mov
lods
aaa
mov
mov
pop
dec
and
jg
mov
pop
cmps
enter
mov
(bad)
in
sub
xor
out
dec
ds
jg
sub
xchg
inc
xchg
(bad)
std
leave
outs
cdq
jl
or
in
out
sub
pop
iret
test
sub
neg
out
ret
push
fstp
stos
sbb
mov
imul
dec
(bad)
dec
xor
mov
fcom
call
loope
bound
push
fist
push
sbb
(bad)
jmp
cmps
inc
or
or
jmp
inc
out
sbb
push
test
test
pop
push
loopne
ficomp
or
cli
and
ret
xor
add
aam
out
adc
mov
mov
cmp
loope
mov
xor
pusha
pause
cli
mov
aam
loop
dec
push
or
jmp
mov
mov
mov
mov
test
mov
ins
mov
popa
lods
add
inc
loop
jle
jl
mov
test
push
push
ret
idiv
mov
je
pusha
or
(bad)
and
add
sbb
push
test
and
pop
stc
pop
mov
popf
loopne
pop
adc
xchg
mov
ins
mov
push
cmps
enter
mov
pusha
in
sar
mov
mov
or
add
mov
int3
test
aad
fiadd
out
rcr
test
rcl
lahf
outs
sbb
dec
sbb
test
mov
ins
cmp
sti
inc
(bad)
arpl
dec
aaa
xlat
jecxz
jle
sbb
sbb
daa
cmps
push
movs
les
imul
mov
ins
dec
ror
lds
enter
fidivr
sub
and
and
imul
pop
ficomp
outs
pop
lods
sub
inc
add
jl
jl
fsub
(bad)
out
cmp
cmp
mov
cmp
pop
pop
and
daa
scas
daa
inc
inc
mov
test
call
aas
pop
fld
and
mov
pop
pop
call
aas
pop
sub
imul
jne
je
jl
cmp
(bad)
push
sbb
stos
cmp
mov
cmp
pop
daa
pusha
fistp
das
sub
dec
mov
fs
(bad)
in
ss
aas
in
(bad)
pop
sbb
and
scas
jge
cmp
out
pop
mov
data16
jp
fsub
jecxz
push
mov
xor
pop
mov
addr16
pushf
lods
cmp
imul
mov
data16
(bad)
iret
cmp
pop
jbe
pusha
cmp
pop
cs
inc
and
dec
sub
in
ret
ss
jae
sub
aam
mov
imul
jge
push
jns
call
ds
fwait
xor
enter
ret
jge
mov
lock
ds
jmp
sbb
les
pop
mov
jns
cld
dec
retf
out
sub
add
clc
aam
sub
pop
loop
push
sub
dec
cmps
push
fldenv
jmp
xchg
mov
lds
dec
sub
mov
scas
add
clc
iret
mov
(bad)
call
fild
push
push
je
adc
inc
xlat
xor
fwait
aam
cmps
push
movs
pop
inc
mov
movs
pusha
test
ror
xor
xchg
add
stos
sti
(bad)
test
jb
add
jmp
and
push
jno
mov
sbb
test
lods
sbb
mov
ins
add
in
ret
aam
jb
lock
jle
loopne
call
cdq
dec
add
stc
push
retf
loope
or
call
or
ret
cli
pop
xchg
lock
and
mov
mov
mov
test
or
push
out
add
call
or
mov
bound
lock
xor
cdq
stos
lea
addr16
mov
add
dec
(bad)
data16
mov
gs
push
cli
aaa
mov
nop
loop
or
xor
add
push
mov
(bad)
xlat
push
aas
shl
mov
gs
jo
mov
lods
pop
mov
scas
pop
jno
inc
dec
sti
iret
jmp
sti
ss
jae
in
cli
aam
ss
mov
pusha
push
test
mov
popa
dec
test
popf
xor
stc
imul
loope
fisubr
xor
enter
mov
lds
(bad)
mov
(bad)
dec
call
dec
outs
add
mov
(bad)
iret
clc
sbb
stos
push
or
inc
sbb
inc
dec
jae
in
jge
aam
(bad)
jmp
aas
rcr
movs
loopne
(bad)
or
pop
dec
xor
neg
or
stos
repnz
inc
rol
sbb
pop
fstp
lahf
cmp
shr
cmp
dec
pushf
xchg
sub
stc
mov
push
cmp
push
ds
pop
sbb
imul
cmps
retf
in
cmp
imul
aam
dec
sub
dec
add
test
je
movs
clc
(bad)
cli
mov
and
jecxz
sub
dec
mov
mov
pusha
xlat
or
cmps
das
sbb
test
rol
xor
outs
jbe
push
lock
fisubr
dec
or
add
dec
jmp
(bad)
push
repz
bound
sbb
dec
push
mov
lods
sbb
lahf
es
int3
lods
mov
pusha
aas
enter
ins
jg
loopne
(bad)
jmp
cmp
dec
hlt
jecxz
push
adc
fisubr
inc
retf
cmps
sbb
pop
(bad)
data16
and
fistp
dec
scas
mov
ins
inc
cmp
xchg
jl
aam
jp
sub
out
cmp
imul
and
pop
push
ds
cmps
daa
mov
imul
js
cmp
outs
fucomip
pop
(bad)
int3
sub
sub
xchg
inc
push
sti
jnp
je
in
sub
or
ss
sbb
pop
pop
je
hlt
and
mov
pusha
push
test
movs
das
adc
cdq
imul
mov
scas
jbe
dec
call
test
int3
jmp
div
cli
js
and
(bad)
scas
movs
xor
push
dec
hlt
sbb
xlat
hlt
sub
mov
arpl
(bad)
outs
scas
and
int3
dec
lods
pop
lds
std
lock
fsub
into
jmp
mov
pusha
cmp
xlat
dec
cs
sbb
dec
xor
cmps
repz
mov
addr16
mov
mov
imul
outs
mov
pop
in
call
dec
pop
or
cmp
inc
neg
(bad)
iret
je
movs
xor
or
pop
adc
xchg
out
mov
imul
shr
mov
pusha
jmp
or
clc
dec
jbe
lock
icebp
and
mov
shl
pop
and
ror
push
scas
fist
xchg
repz
add
jns
jl
adc
shl
mov
arpl
movs
(bad)
mov
mov
and
sbb
dec
mov
imul
call
outs
cmp
xchg
xor
arpl
pushf
push
mov
js
nop
add
push
icebp
push
sub
rcr
mov
mov
inc
fld
push
mov
cld
adc
iret
mov
push
cwde
ror
inc
pop
lahf
adc
jae
lods
xchg
icebp
aad
inc
popf
iret
sbb
test
mov
mov
cmp
push
or
in
add
aaa
or
inc
inc
pop
pop
aam
jb
cld
pop
loop
mov
popf
xor
cdq
and
mov
ins
xchg
mov
popa
enter
das
jg
mov
dec
in
mov
fs
inc
(bad)
jecxz
pop
outs
or
ds
pop
push
push
test
sbb
imul
sahf
jb
fdivr
stos
shr
sar
sbb
into
cmp
pop
sahf
mov
lods
test
shl
jmp
retf
es
or
pop
mul
and
aaa
jmp
push
mov
pop
mov
ins
pop
call
cmp
push
ds
aaa
rcr
imul
mov
gs
jmp
sbb
mov
ins
ror
jnp
nop
jge
in
push
call
ds
add
and
(bad)
repnz
fnsave
pop
push
fcom
push
inc
mov
ins
mov
popfw
js
jl
test
mov
gs
imul
pop
les
es
or
fdivr
push
aas
lds
pop
nop
inc
(bad)
fbld
mov
pop
add
push
push
sub
les
rcr
jbe
jo
mov
pop
and
scas
add
clc
iret
push
mov
mov
jmp
dec
cli
ror
jg
adc
jnp
xor
cdq
sar
jp
mov
scas
xchg
xor
pop
fild
mov
mov
fst
push
pop
daa
sbb
(bad)
and
lods
pop
or
pop
call
bound
in
popf
xor
inc
(bad)
cmps
push
leave
jnp
mov
pushw
lock
iret
pop
dec
add
mov
pop
(bad)
cld
push
retf
out
cmp
scas
push
cmp
push
ds
cmps
iret
fldcw
mov
addr16
mov
xor
push
gs
sbb
pop
repz
pop
pop
cld
aam
sub
out
(bad)
sar
test
fxch
ds
push
movs
dec
jmp
inc
fadd
pop
add
clc
iret
mov
bound
js
add
sahf
fild
push
stos
sub
fist
inc
loope
xchg
jae
xor
mov
mov
jno
movs
push
lods
sar
mov
dec
(bad)
fistp
or
inc
stos
push
int
jns
adc
out
loopne
xchg
add
rcr
mov
mov
icebp
lock
ror
add
inc
(bad)
mov
mov
scas
ror
cmc
mov
(bad)
fadd
or
push
repnz
stos
rcl
add
nop
sbb
jecxz
push
mov
lods
mov
add
add
push
idiv
lods
or
jmp
jnp
mov
data16
lahf
pop
mov
mov
cdq
inc
mov
popa
mov
lods
out
push
mov
imul
in
loop
push
aaa
jbe
push
ds
and
imul
mov
lds
push
test
sub
pop
mov
ins
sub
dec
int
mov
push
ds
jmp
push
mov
mov
scas
jo
cld
fisttp
pop
in
or
inc
pop
imul
jp
les
fucom
ret
sub
pop
aad
mov
imul
popf
pop
lds
test
jns
mov
imul
jmp
cmp
ret
je
mov
je
xor
(bad)
(bad)
sbb
jnp
mov
scas
add
stc
fistp
test
sub
mov
sub
mov
fld
push
hlt
sub
adc
mov
ins
xor
movs
leave
push
sbb
test
pop
icebp
mov
scas
imul
mov
ins
int3
or
retf
std
call
ds
ds
xor
imul
ret
les
sbb
ja
cwde
cmps
(bad)
push
sahf
mov
gs
inc
inc
aaa
dec
outs
ja
pop
mov
(bad)
es
xchg
sub
gs
bound
cmp
xor
pop
pop
ins
push
je
sub
pop
aad
mov
imul
sahf
jmp
inc
jns
push
ds
sub
imul
inc
pop
ret
sub
clc
in
(bad)
ins
fidivr
ret
sub
movs
add
mov
jns
adc
retf
loopne
xchg
sub
stc
dec
outs
mov
mov
xor
adc
call
ds
sub
or
call
(bad)
fidiv
push
stos
scas
mov
inc
dec
push
je
in
fmul
(bad)
cli
(bad)
add
loop
mov
arpl
mov
pop
nop
pusha
push
add
push
das
push
test
add
mov
inc
aad
push
pop
jo
and
and
lahf
mov
mov
lods
pop
cdq
pop
or
lahf
pop
add
lods
lods
icebp
in
ret
iret
(bad)
jno
or
mov
enter
dec
jle
pusha
add
inc
push
dec
aam
jb
test
and
mov
mov
test
shl
pop
mov
popa
int
dec
dec
das
xchg
mov
cld
stos
(bad)
in
xchg
inc
jmp
loope
fidiv
cs
cmp
mov
mov
push
mov
stc
fcomp
mov
mov
or
ss
iret
call
lods
(bad)
in
and
mov
mov
icebp
out
dec
cmp
cmp
mov
rol
push
aaa
mov
pusha
cli
pop
or
cs
add
dec
xor
fs
repnz
pop
aas
rcr
lods
and
mov
ins
call
aas
dec
sub
dec
jecxz
(bad)
jne
xor
jmp
cli
push
out
push
loope
cmp
xor
mov
sub
pop
push
rcr
es
outs
daa
clc
mov
mov
mov
inc
mov
push
sbb
iret
inc
inc
lahf
jnp
jo
lods
in
into
fiadd
dec
add
fisub
mov
pop
in
mov
cmp
ins
add
push
enter
inc
jg
test
jns
and
shl
(bad)
mov
adc
cwde
dec
in
outs
lahf
mov
mov
lods
add
clc
das
sbb
jg
dec
mov
mov
leave
ret
stc
push
mov
jne
sbb
fsubr
sahf
and
pop
dec
stos
mov
lods
add
dec
out
ja
in
jg
fcomp
mov
scas
in
into
pusha
dec
cmp
mov
sbb
dec
out
sub
stc
fucomi
xor
retf
cs
aad
dec
pop
repz
dec
cmc
mov
lods
sbb
call
fldcw
arpl
mov
xor
push
cmps
in
lea
sbb
(bad)
or
arpl
cmp
push
inc
int3
retf
xor
outs
xchg
mov
dec
idiv
push
add
cmc
and
ret
aad
mov
jne
and
fcomp
stos
dec
cdq
push
lods
inc
test
lods
cmps
sbb
sub
jnp
int3
sar
cmp
int3
cs
pop
in
dec
sub
inc
pop
out
push
sub
ret
fidivr
push
ds
ins
cmps
and
pop
lds
dec
loopne
fidivr
jle
jl
fs
out
ss
xchg
je
je
pusha
(bad)
and
out
sbb
pop
movs
push
aas
stc
push
mov
ins
loopne
pop
das
enter
dec
jg
mov
pop
push
add
imul
push
out
jg
rcr
mov
mov
mov
or
out
sbb
iret
add
cmps
imul
outs
add
xor
out
movs
adc
mov
pop
shl
scas
sub
or
aas
outs
add
std
add
aad
bnd
sbb
shl
retf
adc
cdq
push
cmc
inc
outs
lahf
sbb
ja
lods
movs
and
add
sub
jnp
dec
rcl
sub
sti
int
pop
jne
mov
arpl
push
sub
push
inc
dec
mov
ins
fsubr
mov
push
ds
outs
sub
(bad)
ret
sub
jae
js
clc
rcr
stos
sub
sub
fwait
jae
jo
movs
aam
into
(bad)
mov
xor
add
stc
mov
mov
pusha
or
sbb
add
ror
mov
push
xchg
inc
stc
fimul
mov
mov
xor
dec
repz
xor
or
or
call
cdq
lock
push
push
scas
mov
sbb
push
popf
xchg
mov
test
jmp
inc
cli
repz
jo
aam
push
iret
xor
jae
mov
aam
push
sbb
test
rol
mov
jno
rcl
aam
mov
mov
enter
fwait
jle
mov
movs
jmp
jmp
pop
jae
les
aam
jbe
mov
(bad)
fist
mov
shl
mov
mov
shl
push
sub
rcpps
pushf
jbe
adc
cmps
fimul
xchg
inc
mov
imul
sbb
sub
dec
or
ret
add
sub
repz
ret
fst
xchg
rol
sahf
scas
xchg
adc
xchg
rol
lahf
pushf
xchg
jns
lods
cmps
adc
into
inc
mov
pusha
or
add
cs
(bad)
repnz
sti
or
push
and
aaa
not
xchg
mov
sub
xchg
push
adc
scas
popf
adc
xchg
adc
cmp
cmps
adc
sar
mov
arpl
xchg
inc
xor
(bad)
adc
cld
or
into
sbb
pop
adc
add
pop
sub
shl
ret
adc
jae
test
push
aad
mov
imul
or
or
fbstp
xor
jmp
push
inc
sbb
sti
xchg
jp
je
adc
mov
cmp
xor
pusha
or
das
add
stc
fwait
push
pop
xchg
movs
xchg
sub
das
mov
shr
pop
xchg
jo
mov
xchg
iret
jno
mov
(bad)
shr
push
call
adc
mov
adc
push
leave
adc
sbb
(bad)
jb
lock
or
xchg
pop
mov
add
sub
out
out
adc
jmp
adc
jb
hlt
push
mov
call
sbb
add
push
hlt
cmc
adc
xlat
fst
jb
sbb
xchg
shl
mov
adc
xchg
and
mov
scas
cmps
push
popa
test
or
es
xor
(bad)
mov
bound
sbb
pop
xor
xor
push
and
sbb
test
popf
adc
mov
ins
jnp
cwde
jno
in
sahf
rol
icebp
pop
jle
or
push
jmp
inc
fucomp
push
ret
(bad)
sti
jno
shl
sub
mov
enter
aam
stos
sub
stc
popf
inc
jne
loopne
jb
les
mov
push
ds
dec
and
mov
popa
es
clc
xor
bound
pop
sub
rcpps
je
adc
inc
(bad)
pop
xchg
and
cld
fwait
mov
movs
out
push
inc
mov
pop
fs
xchg
shr
dec
pop
dec
pushf
or
icebp
stos
idiv
imul
and
shr
dec
retf
push
add
clc
lahf
repnz
cmps
fisubr
dec
adc
arpl
xchg
dec
xor
pop
aam
xchg
stc
and
xchg
movs
cs
mov
mov
popa
adc
data16
movhps
dec
xlat
or
mov
mov
add
and
xchg
iret
cmp
push
dec
xchg
pop
xor
or
cmps
out
add
mov
bound
aam
xor
pop
and
or
mov
sbb
cmps
std
mov
imul
xchg
dec
cmp
imul
xchg
cld
sahf
(bad)
loop
stos
sub
rcpps
je
adc
xlat
xlat
push
xchg
ret
sti
fwait
jb
test
movs
rol
mov
imul
rol
sub
dec
dec
fwait
or
jle
movs
add
jmp
pop
fst
psrlq
mov
or
or
pushf
mov
stc
in
cmps
push
popa
(bad)
mov
arpl
push
inc
jmp
push
(bad)
jp
push
or
jbe
add
xor
fwait
out
std
push
and
mov
inc
adc
clc
jo
adc
(bad)
or
cwde
mov
or
sahf
push
cmp
in
push
ret
leave
cdq
jno
nop
and
ror
scas
(bad)
xchg
add
jmp
ror
cli
jno
adc
jecxz
cli
xchg
repnz
pop
or
adc
add
xchg
mov
sbb
cmps
jb
nop
and
adc
xchg
outs
add
stc
or
or
cld
xor
adc
push
jmp
push
imul
add
call
rcr
movs
mov
xchg
and
pop
adc
cwde
das
or
or
xchg
ror
out
xchg
xchg
sub
xchg
mov
xchg
inc
loopne
or
jb
sbb
psrld
repz
or
repnz
push
add
xchg
xchg
dec
mov
scas
test
scas
push
rol
repnz
stc
cmc
push
xchg
dec
loopne
cli
adc
repnz
cmps
xor
cdq
adc
arpl
mov
scas
popf
rcr
dec
test
ror
std
outs
push
push
mov
int3
cli
lea
cmp
jecxz
repnz
xor
sar
loop
jmp
xor
je
push
sbb
fs
test
mov
ins
xchg
or
push
jp
dec
jmp
xor
je
push
leave
ret
aad
mov
icebp
(bad)
sahf
scas
add
stc
(bad)
mov
mov
stc
xor
push
retf
cli
adc
repnz
(bad)
xor
call
icebp
jne
mov
rcr
mov
mov
ror
dec
movs
outs
or
or
or
es
out
(bad)
sar
bound
mov
adc
dec
push
push
mov
aam
mov
les
add
bnd
lock
stc
xchg
and
dec
add
clc
dec
or
add
xchg
xchg
repnz
dec
loope
call
icebp
push
xchg
mov
rcl
adc
scas
call
or
xor
push
out
push
rcl
adc
xchg
adc
cs
xor
xchg
dec
in
or
repnz
xchg
hlt
popf
shl
cdq
xlat
test
rcl
adc
iret
cdq
or
or
and
scas
(bad)
adc
push
loop
inc
or
xor
jae
xchg
push
in
sar
xchg
xchg
leave
adc
fwait
adc
icebp
popf
dec
mov
popa
xchg
nop
rol
xchg
(bad)
out
push
call
xchg
or
not
repnz
psrld
mov
or
inc
add
push
cli
cwde
rcr
adc
cdq
xor
dec
xchg
dec
mov
adc
int3
test
shl
(bad)
cli
jo
adc
loop
dec
or
or
pop
repz
xchg
xchg
std
aam
call
inc
popf
jae
xchg
jno
aam
xchg
rol
adc
cwde
mov
or
pop
xchg
stos
mov
adc
(bad)
xor
(bad)
jmp
arpl
jb
xor
xchg
rol
stc
sbb
cmps
xchg
loope
mov
xchg
xor
push
adc
lahf
(bad)
xchg
xchg
ins
lods
or
xchg
(bad)
dec
add
clc
or
loop
fiadd
mov
shr
stc
push
push
nop
inc
loopne
xchg
pcmpeqw
xchg
xchg
or
or
sbb
xchg
icebp
push
shl
pop
mov
scas
movups
mov
bound
repnz
repnz
shr
stc
rcl
adc
ja
adc
xchg
or
or
add
repnz
clc
cdq
rcl
xchg
frstor
scas
xchg
adc
mov
push
cwde
or
inc
repnz
push
adc
lods
cli
adc
adc
setb
xchg
loope
push
xchg
adc
push
sti
xchg
adc
jecxz
adc
adc
rcl
and
mov
test
mov
ins
jmp
xchg
mov
(bad)
jmp
inc
pop
jmp
push
jno
les
mov
xchg
jbe
pop
push
adc
push
or
and
ret
or
aaa
loopne
xchg
rcr
in
xchg
xchg
sub
xchg
adc
jle
xchg
adc
call
cmp
push
ds
adc
adc
daa
setae
mov
gs
cwde
xchg
cmp
pop
out
adc
sub
inc
xchg
pop
jnp
or
cs
push
loope
ss
sti
xor
repnz
pop
pop
adc
and
seta
mov
or
or
mov
push
adc
or
out
push
pop
loop
outs
or
xor
add
push
xor
hlt
fcomp
adc
daa
sub
xchg
popf
test
rol
mov
imul
lods
inc
lds
or
jle
fadd
(bad)
jmp
mov
cmp
shl
pop
fist
pop
sub
or
mov
popa
inc
call
aas
ins
sbb
imul
lea
cdq
jbe
pop
(bad)
mov
scas
and
les
das
inc
ja
push
dec
ja
cld
mov
cli
es
add
clc
xor
and
fist
mov
sub
dec
cmps
adc
test
shr
ss
outs
inc
sbb
jno
and
xchg
enter
(bad)
jle
sub
jmp
leave
ins
stc
je
or
aad
out
sub
ror
out
dec
sahf
adc
stc
test
rcl
xor
or
dec
xor
sub
dec
or
push
cmc
inc
push
mov
mov
and
jecxz
mov
and
push
movs
adc
dec
sbb
xchg
or
or
bound
bound
rcl
retf
dec
or
mov
(bad)
inc
or
jbe
lock
fiadd
repz
jne
aam
mov
add
clc
fwait
or
cdq
mov
bound
shl
dec
push
out
dec
xchg
mov
cdq
xchg
mov
scas
fidiv
dec
xor
mov
push
int3
hlt
push
push
sbb
cli
sbb
test
mov
ins
je
in
pop
(bad)
xlat
lods
(bad)
popf
jns
dec
jnp
loopne
jle
mov
dec
jo
pusha
cmp
mov
dec
fild
sbb
and
mov
mov
stc
pop
ss
jae
and
pop
aam
mov
lods
pop
dec
pop
mov
popf
xchg
mov
popa
call
leave
pusha
dec
mov
sub
dec
(bad)
sbb
sub
fimul
or
outs
pop
mov
test
and
clc
sub
sahf
xchg
dec
mov
shl
or
outs
cmp
add
retf
hlt
cdq
xor
(bad)
sbb
shl
jmp
sbb
xchg
cmp
scas
cli
and
dec
jecxz
cmp
mov
pop
xchg
out
cli
push
es
jecxz
mov
arpl
imul
in
cmps
cmp
test
rol
inc
pop
mov
in
sub
ss
pop
jle
fsub
and
xlat
push
ss
sbb
test
and
mov
pusha
lods
test
test
dec
jle
in
loopne
jmp
jns
inc
jae
loopne
outs
aam
cs
push
mov
lds
hlt
mov
scas
stos
loope
sbb
das
dec
mov
mov
fld
cli
retf
push
sbb
dec
xor
pop
fdiv
xor
mov
popa
cmps
fmul
or
dec
stos
add
push
add
sbb
aaa
fiadd
cld
mov
gs
dec
cmp
push
cmp
push
bound
mov
gs
mov
scas
aad
pop
jge
sbb
dec
inc
aas
sti
stos
xchg
in
cli
ffreep
ss
sub
pop
fdiv
jecxz
push
push
jnp
mov
sbb
test
sbb
test
shl
rol
cmp
enter
ins
jle
sub
jmp
mov
imul
cmp
imul
push
(bad)
retf
aad
stos
jne
sbb
fdivr
sahf
fidiv
loopne
sub
stos
cs
inc
pop
inc
dec
ja
lods
je
(bad)
inc
(bad)
mul
push
jnp
fdivr
mov
mov
popa
fs
pop
sub
aaa
das
pop
inc
dec
pop
dec
lods
jnp
and
inc
in
mov
jge
cld
pop
(bad)
pop
out
and
and
mov
ins
mov
pop
push
enter
pop
jg
pop
mov
ins
cmps
enter
mov
imul
ds
retf
cmp
mov
cs
clc
fmul
fcmovnu
push
add
stos
repz
inc
inc
rcl
pop
jbe
adc
and
fist
fwait
mov
arpl
pusha
jg
xor
das
in
pop
push
push
dec
(bad)
sub
pop
std
out
scas
add
cmp
dec
idiv
bound
test
ins
xor
fdivr
pop
jecxz
sahf
mov
imul
pop
inc
ja
in
lods
jbe
int3
mov
xchg
and
in
sub
aaa
pop
inc
test
sub
div
inc
xlat
fist
jl
and
arpl
test
movs
xor
pop
imul
sub
dec
dec
retf
out
jle
test
jmp
mul
(bad)
enter
ja
and
fsubr
scas
cs
enter
mov
fs
out
cmps
ss
mov
arpl
loopne
out
xor
dec
dec
out
push
add
data16
movs
retf
sbb
pop
cmc
jo
mov
fxch
dec
push
mov
fs
or
sahf
ss
call
stos
pop
mov
sbb
and
(bad)
cmps
jno
lock
rcr
call
aas
xor
scas
(bad)
ins
dec
add
jmp
add
div
hlt
push
fcmovbe
cmp
stos
and
xchg
xor
pop
mov
popa
daa
mov
scas
gs
push
addr16
cmp
cmp
pop
in
or
imul
pop
cmp
inc
jp
pusha
and
cs
xor
pop
pop
test
pop
and
xchg
lods
mov
popf
pop
dec
pop
daa
test
and
mov
push
aas
pusha
jg
or
in
inc
inc
dec
lds
jl
js
inc
out
fidiv
outs
cmp
sub
fs
cwde
ja
hlt
pop
sahf
fcomp
sub
ret
mov
push
cmp
push
ds
idiv
(bad)
fsub
xor
ja
cmp
fdivr
arpl
cwde
mov
xor
pop
js
and
pop
fild
outs
lods
sub
pop
int3
dec
inc
out
xchg
cmp
sti
in
fisub
in
sub
sbb
jg
pusha
mov
mov
leave
xlat
dec
push
mov
fs
test
movs
ss
leave
mov
pusha
and
(bad)
out
sub
dec
dec
retf
out
jle
test
jmp
mul
(bad)
leave
fnstcw
mov
and
fsubr
scas
cs
daa
retf
xlat
mov
fs
out
cmps
ss
retf
sbb
arpl
mov
scas
jge
push
dec
dec
out
push
add
inc
movs
xlat
jmp
inc
arpl
pop
cmps
jo
xor
mov
lea
sbb
or
dec
stos
addr16
xchg
cmp
(bad)
std
jno
jo
call
cmp
push
ds
jmp
ret
fsub
mov
pop
adc
cwde
outs
movs
cmp
lahf
retf
mov
popa
cmp
inc
imul
pop
das
jl
dec
sub
and
sti
jne
push
sbb
pop
and
pop
lods
mov
mov
dec
push
ja
mov
pop
out
test
lods
sub
mov
imul
cld
les
in
(bad)
jbe
enter
cmp
and
jmp
cs
(bad)
push
sbb
sbb
fbstp
pop
retf
mov
pop
and
out
dec
(bad)
inc
dec
retf
xchg
jl
test
mov
scas
cmp
fstp
dec
arpl
and
xor
xor
push
fcomp
daa
sbb
cmps
jecxz
cmps
lods
mov
imul
outs
aaa
in
outs
cmps
int3
pop
(bad)
test
js
pusha
clc
rcr
fisubr
call
cmp
push
ds
ficom
push
sbb
fwait
inc
inc
cmps
mov
jne
mov
pushw
pusha
pop
xor
fwait
das
lods
dec
mov
mov
add
es
iret
fidivr
pusha
mov
or
dec
sbb
sbb
lahf
(bad)
int
icebp
lods
jbe
mov
pop
mov
out
scas
mov
dec
jns
lock
icebp
cs
ror
add
mov
pop
add
dec
sbb
repz
and
jbe
inc
rcl
mov
scas
fistp
lahf
mov
and
pop
inc
cmp
dec
int3
inc
loope
xchg
sti
out
jbe
in
mov
xor
arpl
and
pop
xor
mov
and
mov
pop
test
sar
inc
mov
lods
in
mov
dec
(bad)
jle
js
and
jmp
(bad)
scas
inc
lds
jns
jo
inc
loopne
into
fdiv
hlt
mov
fmul
add
arpl
ret
sbb
sub
mov
mov
sbb
push
dec
mov
scas
cmp
fwait
test
movs
fimul
add
pop
mov
xor
pop
loope
push
lea
xor
or
dec
mov
in
add
icebp
data16
cmp
mov
or
cs
inc
dec
mov
in
test
daa
rcl
pop
loop
mov
cwde
scas
push
cmp
imul
cmp
inc
repnz
sub
cmp
ins
cmp
sti
xor
pop
jp
test
and
addr16
imul
push
les
cmp
or
cmp
mov
ins
(bad)
sar
jl
enter
mov
sub
jmp
mov
imul
(bad)
mov
cmp
push
aas
js
xchg
clc
ins
fidivr
(bad)
sub
sub
inc
cmp
mov
rcl
sub
nop
push
rcr
setnp
push
cmp
push
ds
daa
ror
retf
mov
adc
outs
idiv
dec
fisub
in
and
add
repnz
cmc
jl
push
sub
out
mov
sbb
xchg
or
push
cmp
push
ds
daa
adc
dec
mov
addr16
jb
cmp
lahf
shr
gs
lods
xchg
inc
cmp
inc
adc
xor
xchg
int3
sub
dec
sbb
xchg
sti
sbb
rol
mov
ins
daa
adc
scas
(bad)
mov
or
cmp
mov
ins
shl
(bad)
(bad)
xchg
sub
dec
cs
push
jle
and
or
xor
ss
ja
and
fcom
xchg
dec
mov
mov
addr16
clc
xchg
out
xchg
fist
cmp
sub
arpl
movs
inc
adc
bound
pop
out
push
push
daa
cmp
fwait
adc
imul
call
cmp
daa
adc
(bad)
lds
adc
push
fidivr
call
sub
in
xchg
ret
(bad)
adc
clc
jl
sar
fucom
adc
or
pop
push
cwde
mul
inc
addr16
fdiv
push
shl
mov
addr16
in
push
lahf
cmp
addr16
lods
bound
in
xor
addr16
jl
dec
cmp
out
xchg
cmp
sti
cmp
imul
addr16
ins
daa
rcl
enter
cmp
or
mov
ins
ret
inc
(bad)
jae
push
ds
out
jle
cmp
(bad)
sahf
les
cmp
rcr
out
sub
push
retf
inc
leave
mov
fs
(bad)
out
ss
fistp
retf
sub
and
outs
jge
aam
retf
push
das
cmp
fwait
dec
cmc
imul
mov
and
pop
icebp
mov
jne
ror
xlat
stos
mov
pop
dec
cmps
ja
cld
mov
bound
loopne
repnz
bound
pop
xor
std
sub
cmps
sbb
inc
call
mov
jmp
aas
push
pop
nop
mov
sysret
(bad)
sahf
mov
std
jp
pop
or
loop
push
add
xor
lock
push
aam
into
(bad)
xchg
adc
cwde
(bad)
add
stc
cmp
stos
mov
mov
cmp
ja
dec
pop
rcr
xchg
xchg
dec
xchg
mov
fs
cmp
mov
mov
mov
xchg
push
and
bndstx
dec
or
or
pop
repnz
and
out
cmp
mov
int
push
pop
xchg
mov
pop
push
mov
addr16
push
lock
xchg
into
cmp
(bad)
jns
add
push
out
out
bound
cmp
retf
xor
addr16
push
lock
not
into
addr16
fcom
xchg
add
mov
addr16
shl
gs
xchg
aad
push
inc
adc
pop
adc
sub
cdq
cmp
push
cmp
push
mov
adc
push
mov
addr16
jb
cmp
aas
shl
gs
xchg
push
cmp
(bad)
adc
cwde
sub
dec
test
shl
outs
ss
ror
pop
dec
fmul
or
scas
(bad)
mov
addr16
cmp
bnd
xor
xlat
cmp
adc
arpl
add
stc
cmp
pop
and
addr16
das
cmp
addr16
pop
nop
mov
daa
ud0
mov
addr16
bound
mov
icebp
in
push
dec
cmp
(bad)
xchg
mov
adc
ss
out
out
pop
cli
cmp
retf
and
add
cmp
addr16
xchg
mov
imul
jno
cmp
pop
shl
push
cmp
movhps
jl
pushf
sub
or
push
xor
adc
imul
mov
nop
and
mov
pop
call
push
repz
mov
xchg
aam
push
les
adc
cwde
sbb
cdq
and
mov
pop
icebp
js
dec
sub
fist
xchg
sub
sti
jp
inc
push
jecxz
cli
jbe
xor
jecxz
add
xor
repz
adc
test
shr
ror
jno
xor
test
jmp
jmp
cli
jne
les
xlat
jb
test
sbb
fcomi
dec
cmps
adc
mov
pusha
mov
popa
fistp
dec
xor
pop
mov
push
inc
stos
push
std
nop
jbe
adc
pminub
cmp
and
fwait
or
mov
gs
sbb
pop
aaa
shl
mov
addr16
cmp
imul
int3
xor
aas
xacquire
imul
xchg
scas
lds
xchg
cmp
cdq
hlt
xor
mov
arpl
sysexit
(bad)
(bad)
mov
pop
sbb
push
and
mov
mov
pusha
xor
call
cmp
add
fcmovb
dec
sar
fs
add
test
(bad)
and
pop
es
shr
bound
adc
xor
lahf
xchg
ins
push
adc
fwait
leave
sbb
cwde
jge
in
mov
jmp
aas
xor
shr
outs
(bad)
nop
xor
pop
test
(bad)
stos
and
push
jmp
push
mov
data16
fsubr
xchg
cmp
dec
lods
outs
movs
cmp
icebp
jl
pop
sub
out
es
push
push
cmp
push
ds
push
(bad)
imul
cdq
jge
nop
mov
scas
aas
loope
pop
dec
ins
das
add
add
cmc
inc
bnd
fdiv
cli
push
(bad)
adc
jecxz
sbb
xchg
and
mov
pusha
mov
sbb
cmps
gs
nop
imul
add
cmp
out
pop
fisub
int3
std
and
imul
cmp
push
add
pushf
mov
bound
sbb
xor
fbld
mov
pop
inc
mov
scas
add
ret
idiv
jb
mov
ins
shl
jmp
jp
pop
lds
cwde
push
jns
xor
stos
inc
xor
cld
add
mov
hlt
ficomp
push
cmp
and
mov
cmp
mov
sbb
push
cmps
mov
scas
dec
mov
movs
ss
in
mov
add
(bad)
pop
and
xchg
mov
std
loope
dec
(bad)
out
dec
mov
cmp
add
data16
hlt
out
add
(bad)
cmp
sbb
arpl
aam
mov
mov
sbb
cmp
imul
ins
dec
cld
jmp
mov
in
cmp
cmp
arpl
cld
pop
jp
xor
sub
push
dec
cmp
xor
mov
push
movs
add
(bad)
pop
mov
imul
mov
mov
mov
pusha
jo
sbb
das
iret
call
test
mov
les
push
lock
cmp
push
ds
pop
idiv
push
pushf
fsub
inc
add
mov
bound
sbb
cmp
dec
lahf
fwait
gs
mov
mov
mov
mov
jmp
aas
mov
lea
in
ss
pop
xor
pop
in
and
cmps
push
leave
mov
mov
push
aas
je
mov
data16
sbb
clc
gs
fidivr
add
sub
jl
shr
cmp
retf
jp
fs
test
test
fincstp
xor
push
mov
adc
xchg
jne
mov
fsubr
push
aas
cmps
pop
sar
mov
bound
aaa
jge
js
pop
call
ds
sub
mov
arpl
ja
xor
mov
ins
es
adc
mov
mov
pop
sahf
inc
popa
jmp
stos
outs
xor
inc
ror
jne
jo
nop
fsub
into
test
stos
pop
add
stc
mov
jne
loopne
inc
fcom
sub
adc
mov
ins
adc
fwait
test
sbb
shl
pop
inc
push
aaa
or
outs
(bad)
pop
add
retf
test
mov
pop
and
shl
sub
push
ins
cwde
fs
enter
xchg
jle
pop
and
lds
icebp
rol
inc
es
retf
loopne
mov
arpl
clc
fild
bnd
push
sub
jae
sar
mov
mov
inc
popf
fwait
pop
test
movs
and
iret
mov
push
push
xor
ret
push
lea
jae
or
or
push
jae
add
aam
out
xor
mov
loope
mov
das
stc
or
or
xor
add
cli
dec
(bad)
repz
lea
aam
xor
mov
mov
cdq
adc
cdq
leave
sbb
test
ror
add
cli
cli
xchg
enter
retf
xor
sub
dec
xor
ret
mov
add
push
xlat
add
call
test
shl
push
dec
jo
loopne
mov
dec
sub
dec
pushf
repz
jle
aam
loop
mov
arpl
movs
(bad)
sbb
push
mov
mov
mov
test
mov
ins
ret
rol
jb
add
ror
out
xchg
loop
jle
cwde
xor
mov
mov
loope
or
das
outs
add
or
or
push
loop
call
cdq
push
dec
mov
mov
mov
add
push
dec
or
call
or
xchg
push
dec
lock
loop
mov
dec
xor
xchg
repz
mov
call
rcl
mov
xchg
sbb
push
mov
mov
scas
or
mov
ins
add
cli
rol
icebp
in
loop
jp
enter
mov
adc
or
mov
push
add
or
push
bnd
add
mov
mov
ror
clc
mov
int3
add
or
xchg
sub
add
sar
push
fdiv
adc
(bad)
sbb
test
xchg
aam
mov
imul
call
jns
dec
mov
loope
jle
or
push
jmp
push
dec
or
or
xchg
je
loopne
repnz
repnz
sbb
dec
xor
mov
mov
stc
adc
cdq
call
mov
mov
rcl
push
outs
nop
add
call
or
mov
add
xor
out
ret
push
mov
je
add
xlat
adc
xchg
cli
sbb
test
rol
mov
jno
loopne
mov
aam
xchg
add
or
mov
mov
mov
mov
xchg
sbb
dec
mov
mov
mov
or
push
dec
add
stos
cli
(bad)
repnz
ret
rol
jb
add
jp
push
out
xchg
loop
mov
xchg
xor
mov
mov
loope
or
das
mov
xchg
sbb
adc
mov
cdq
push
or
or
cdq
push
dec
mov
mov
mov
add
xchg
out
call
or
xchg
push
dec
out
repz
mov
aam
adc
xchg
push
xchg
repz
call
cdq
push
inc
mov
mov
mov
rcr
aad
mov
mov
mov
or
cdq
cli
(bad)
ret
loop
jb
mov
add
jp
push
out
adc
mov
or
cli
call
xor
xor
push
hlt
nop
mov
mov
cdq
sbb
test
rol
mov
jno
mov
lods
xchg
add
cli
jle
int3
cli
loope
or
sti
xor
repz
mov
aam
xchg
add
cdq
call
cdq
sbb
test
push
das
mov
xchg
sbb
push
xchg
or
dec
loop
(bad)
jle
in
and
jmp
(bad)
mov
lds
jns
push
js
loopne
mov
xchg
cs
rol
call
rcl
in
mov
xchg
sbb
push
sbb
mov
mov
cdq
scas
or
or
jb
test
lods
ror
out
inc
xchg
xchg
int3
jp
cld
push
xchg
adc
stos
cli
xor
pop
or
and
aaa
rcl
hlt
pop
xchg
sbb
xlat
daa
adc
mov
push
aas
sub
lods
(bad)
rol
clc
cmp
fsubrp
jmp
sti
inc
xor
ja
aam
ss
push
dec
pop
daa
adc
and
popfw
mov
pop
and
arpl
imul
push
les
sbb
out
mul
mov
bound
push
outs
js
push
sbb
fbld
mov
pop
add
jg
hlt
jg
in
ret
(bad)
in
mov
jne
enter
mov
scas
jmp
lods
dec
lds
lods
add
(bad)
es
int3
sbb
pusha
xor
pop
(bad)
dec
dec
pop
sub
add
inc
jbe
aam
jp
mov
data16
test
mov
movs
mov
ins
and
aaa
pop
(bad)
mov
pop
sub
inc
out
jle
jl
add
data16
test
cmp
(bad)
pusha
ins
and
xor
(bad)
mov
push
dec
jl
mov
pop
lahf
clc
cmp
imul
ja
inc
ins
mov
in
jbe
push
and
mov
pop
in
mov
pop
dec
mov
pop
je
inc
out
sub
iret
jbe
inc
sbb
add
out
fld
dec
fistp
mov
pop
out
mov
pop
jns
inc
sub
lahf
jbe
inc
cs
fcmovnu
jbe
inc
and
fild
cmc
fist
mov
pop
sbb
mov
mov
dec
mov
fs
and
out
aaa
jbe
inc
int
(bad)
and
xchg
cld
mov
std
and
mov
and
mov
pop
xlat
enter
sbb
arpl
dec
cmps
jmp
sahf
jg
les
in
imul
scas
outs
jge
and
int
test
mul
test
fdivr
jmp
inc
mov
arpl
(bad)
xor
pop
fwait
lods
cmp
imul
jo
jl
cmp
mov
cmp
jmp
sub
aaa
fisub
ret
and
aad
mov
imul
cmp
push
ds
out
push
imul
dec
stos
ret
push
mov
cmp
ja
pushf
pop
std
fcomp
cmps
sub
daa
mov
mov
jns
fs
cmp
iret
ss
cwde
sub
pop
and
stos
jge
in
ret
sbb
rcr
aam
mov
pop
leave
or
pop
mov
mov
ins
jp
rcl
loop
outs
adc
in
push
inc
call
mov
sub
jne
test
psadbw
sahf
sbb
test
and
mov
pusha
push
fadd
into
sub
dec
adc
inc
sbb
jmp
jbe
fadd
add
mov
jns
and
(bad)
scas
xchg
gs
dec
lahf
adc
es
inc
(bad)
lahf
mov
arpl
(bad)
scas
jnp
or
dec
in
push
mov
out
push
jp
cmp
stos
jecxz
xchg
inc
xor
pop
mov
data16
test
mov
pop
mov
ins
addr16
cmp
jl
or
out
inc
cmp
xor
in
ss
cmp
push
and
daa
sub
mov
mov
push
aas
fstp
mov
ins
sub
adc
mov
ins
js
xchg
in
leave
ficomp
enter
fwait
jg
sar
mov
pop
jg
sub
pmaxsw
mov
imul
(bad)
out
shr
in
retf
xchg
leave
rol
adc
out
retf
push
retf
sub
xor
mov
imul
fstp
adc
cmc
int
inc
xchg
xlat
mov
cwde
sbb
inc
ficomp
lods
mov
gs
and
cmp
into
in
push
dec
mov
sub
xchg
pop
mov
push
call
aas
adc
jae
ins
xchg
xor
mov
ins
jnp
sbb
mov
cmp
push
jmp
aas
sub
ja
ins
inc
(bad)
fild
clc
jnp
fdiv
pop
sub
push
stos
and
pop
adc
sub
dec
xchg
fld
es
and
mov
gs
cmp
and
cvtps2pi
inc
dec
or
jnp
add
inc
in
mul
jb
(bad)
cmp
pop
es
adc
mov
xchg
mov
pop
pop
cwde
pop
cmp
pop
lahf
daa
popa
mov
ins
inc
dec
addr16
enter
mov
call
ds
(bad)
pop
imul
out
outs
pop
pop
cmp
retf
sub
mov
pop
push
cmp
push
ds
imul
addr16
lods
outs
lds
inc
retf
inc
jl
fdivr
outs
out
es
retf
cmp
mov
fs
clc
cmp
push
ds
daa
pop
inc
imul
jge
aam
inc
call
aas
fcomp
movs
sub
(bad)
mov
fs
js
in
push
fisttp
pop
stos
sub
pop
and
inc
pop
and
pop
fucomp
out
and
aas
cmp
mov
ins
movs
push
ins
enter
leave
jg
pop
pushf
sub
push
cmps
out
leave
mov
imul
outs
aas
add
outs
leave
ins
in
mov
add
add
clc
lock
fmulp
sub
sub
add
outs
retf
adc
sbb
xchg
xor
push
repz
push
mov
pop
mov
scas
(bad)
fstp
dec
or
cmps
jnp
add
mov
bound
loopne
jp
pop
das
and
push
es
mov
adc
cwde
fs
sub
lahf
aaa
jmp
inc
ins
mov
mov
ror
push
call
ds
sti
cmp
push
ds
ja
pop
push
fsubr
push
inc
xlat
daa
(bad)
stos
jno
mov
gs
mov
pop
pusha
sub
cmp
das
inc
mul
dec
jge
xor
xchg
and
sar
ds
adc
cwde
cmp
imul
push
push
dec
outs
das
sbb
jg
dec
movs
inc
in
xchg
stc
pop
(bad)
and
sub
out
cmp
inc
mov
mov
cmp
out
sbb
fld
retf
and
mov
pusha
add
ss
das
out
pop
pop
or
cmc
xchg
cli
jbe
sbb
jecxz
mov
mov
cmp
push
xlat
cmp
sbb
pop
xor
sub
dec
sbb
data16
out
scas
imul
xchg
cld
scas
(bad)
sbb
cmps
cmp
imul
xlat
push
cmp
sbb
ja
movs
movs
xor
pop
sub
pop
pop
and
out
sub
dec
retf
addr16
je
test
xlat
push
mov
fstp
push
enter
mov
addr16
pusha
dec
fdivr
(bad)
das
mov
fs
add
inc
pop
aaa
cld
retf
jbe
pop
out
fidiv
dec
mov
gs
push
add
mov
pop
cmp
sub
dec
xor
test
push
in
mov
imul
pop
cmp
imul
out
dec
ins
daa
cmp
add
gs
data16
loopne
pop
fistp
arpl
sub
dec
xor
pop
je
fs
and
out
(bad)
scas
sbb
addr16
mov
pusha
pop
call
aas
scas
arpl
imul
les
cmp
call
out
(bad)
sahf
cmp
imul
sbb
mov
movs
gs
dec
mul
pop
pop
sbb
and
out
daa
push
mov
int
sbb
mov
(bad)
ss
lahf
sub
pop
dec
lods
mov
ins
jg
lock
in
pop
into
call
aas
loopne
mov
imul
dec
xor
pop
je
call
ds
stos
sbb
imul
jne
mov
data16
push
cmp
pop
stos
repz
lods
inc
aad
jp
je
pop
jecxz
(bad)
pushf
es
pop
cmp
push
aas
pop
aaa
pusha
dec
ins
daa
pop
das
mov
mov
mov
in
pop
(bad)
call
aas
pop
xor
and
les
dec
cwde
daa
cmp
imul
outs
pop
fdivr
int3
sub
fbstp
xchg
sub
jl
inc
sbb
out
jbe
xor
inc
fld
inc
sbb
xlat
mov
movs
ins
sbb
test
sar
pusha
dec
cmp
sub
dec
jmp
div
les
jmp
fld
dec
pop
xlat
mov
pop
pop
clc
mov
pop
mov
arpl
inc
dec
xor
das
jbe
push
les
push
jbe
and
fscale
scas
jbe
and
dec
fidiv
pop
dec
jo
mov
test
fcom
clc
lea
sbb
or
arpl
ret
(bad)
push
jno
lock
rol
out
mov
cmp
or
(bad)
data16
add
jmp
sbb
jb
hlt
daa
xchg
pop
(bad)
mov
jcxz
stos
movs
cmp
addr16
lods
je
cmp
inc
xlat
das
scas
jl
dec
cmp
cmps
xchg
cmp
sti
cmp
addr16
fidivr
aaa
das
and
pop
dec
mov
xor
pop
mov
addr16
pop
lods
cmp
mov
ins
mov
cmp
push
aas
cmp
cmps
jle
pusha
cmp
jmp
cs
cmp
sbb
int3
out
sub
daa
xchg
rcr
test
push
cmp
push
ds
xlat
repz
jl
aam
cmp
cmps
push
jne
cmp
fstenv
pop
cmp
scas
and
pop
dec
mov
cmp
addr16
addr16
mov
arpl
push
aas
cmp
push
xor
sbb
(bad)
cmp
cmps
mov
cmp
add
pop
sub
outs
and
int3
mov
cmp
push
aas
pop
out
stos
ins
and
mov
lods
je
pop
cmp
out
es
jg
int3
mov
gs
stc
cmp
push
cmp
push
add
push
ss
retf
out
pop
jne
cmp
and
mul
mov
fnstsw
dec
push
scas
sub
sbb
mov
ins
pop
fdivr
jecxz
mov
arpl
imul
ins
scas
cld
sbb
cmps
retf
cmp
hlt
inc
fisubr
cmp
outs
sub
int3
ret
jne
movs
xchg
pop
mov
fstp
push
pop
out
stos
stos
and
mov
dec
je
pop
cmp
xlat
fsub
call
mov
gs
cmp
xor
in
cmp
das
sub
mov
jnp
add
cld
fidiv
ss
out
pop
pop
test
and
mov
cmp
push
aas
cmc
cmps
mov
(bad)
leave
enter
cmp
push
out
in
mov
imul
shr
call
cmp
push
ds
fsubr
push
sbb
ret
inc
xor
pop
mov
data16
sbb
cmp
scas
cmps
inc
gs
dec
mov
fsub
cld
cmp
das
cmp
pop
mov
arpl
sti
pop
ss
in
pop
out
ss
and
cmps
pop
jge
fs
push
aas
pop
outs
test
ins
daa
int3
mov
ins
pop
sub
push
in
aas
fidivr
enter
ret
jle
rol
jmp
inc
out
retf
ficomp
test
test
sar
clc
loopne
retf
das
stos
xor
ret
repz
push
fcom
scas
inc
in
call
fstp
mul
es
fdiv
dec
arpl
test
lea
pop
es
aaa
add
mov
bound
enter
mov
imul
mov
les
push
ds
aaa
and
imul
mov
lds
clc
mov
pop
or
sub
add
mov
bound
les
in
push
jbe
cmp
fist
cdq
sub
mov
inc
jmp
inc
and
dec
fild
movs
lea
dec
xchg
pop
inc
out
loop
stos
enter
inc
jg
push
mov
scas
aam
out
dec
push
jg
add
hlt
mov
mov
popa
sbb
das
out
cmps
mov
pop
xchg
ss
scas
loop
pop
retf
daa
and
cmc
std
mov
fsubr
or
push
pop
aas
add
lods
ins
cmc
xor
inc
leave
xlat
push
mov
sbb
sahf
adc
cdq
imul
jo
pop
retf
out
and
mov
pop
shr
jmp
inc
jecxz
or
xor
add
retf
hlt
jbe
sbb
xlat
fcomi
sahf
sahf
sbb
test
mov
ins
xor
lods
sub
jnp
dec
inc
scas
jecxz
jle
dec
xor
jmp
xchg
les
stc
sbb
ja
loopne
mov
arpl
sbb
xor
lahf
test
dec
push
retf
inc
fnstsw
test
in
mov
mov
inc
push
pop
and
in
scas
iret
jne
lods
dec
(bad)
xlat
pop
inc
test
sbb
jnp
cld
cmps
stos
in
out
ret
cmp
pusha
shl
outs
aaa
pop
pop
dec
retf
pop
sbb
test
std
stc
mov
mov
push
aas
ins
dec
mov
ins
enter
enter
push
jg
clc
sahf
call
jns
shl
lock
sbb
dec
leave
sbb
dec
out
(bad)
mov
imul
iret
hlt
mov
(bad)
sbb
or
inc
fidiv
pop
repz
ret
es
xor
sbb
xlat
fs
mov
cdq
cmps
pop
inc
in
lahf
mov
popa
shl
inc
xor
call
cmp
push
ds
mul
fisubr
fdiv
and
mov
mov
sub
pop
pop
rcr
pop
sub
test
inc
int
mov
push
ds
das
out
push
dec
cmp
ret
jnp
pusha
mov
in
cs
xlat
cmp
dec
sbb
pop
sub
mov
dec
jns
push
pop
and
push
and
das
mov
mov
dec
pop
mov
mov
add
scas
push
lods
lock
dec
sbb
mov
out
dec
cmp
cmp
add
(bad)
aaa
icebp
test
loop
mov
lock
pop
add
mov
and
aas
add
lods
dec
sub
rol
mov
ins
out
(bad)
(bad)
cmp
test
mov
mov
pop
imul
push
pop
les
lea
lods
ja
or
mov
pop
loop
lds
outs
cmp
push
retf
arpl
jl
test
out
not
cmp
fistp
push
clc
and
inc
cmp
imul
daa
adc
outs
jnp
xchg
lods
int
gs
dec
mov
cmp
movs
in
icebp
sub
pop
jge
pusha
jo
call
cmp
push
ds
mul
fs
rol
imul
nop
nop
nop
nop
nop
nop
mov
mov
mov
xor
add
mov
mov
mov
lea
sub
mov
call
call
xor
ret
push
mov
mov
mov
xor
cmp
mov
push
sete
xor
mov
mov
xor
cmp
mov
push
mov
sete
sub
xor
mov
mov
sar
cmp
mov
setne
shl
mov
sub
or
test
je
lea
sub
shl
sub
neg
shl
mov
sub
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
mov
push
sar
push
push
mov
mov
sar
mov
mov
sar
add
mov
cmp
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
shl
test
je
mov
shl
sub
mov
mov
mov
mov
sub
xor
mov
or
sub
cmp
jle
mov
lea
xor
shl
mov
sar
or
cmp
pop
pop
pop
setne
pop
ret
nop
push
mov
mov
mov
mov
sub
mov
mov
xor
push
mov
add
and
xor
or
cmp
pop
setg
add
xor
cmp
setne
pop
ret
push
mov
mov
push
mov
mov
lea
or
mov
lea
mov
shl
sar
xor
mov
mov
dec
cmp
setle
sar
lea
sub
neg
lea
shl
mov
je
mov
shl
or
mov
and
sub
cmp
je
sub
xor
cmp
setne
sub
add
shl
xor
xor
and
pop
cmp
setne
pop
ret
nop
outs
jne
inc
test
nop
add
inc
rol
outs
push
add
lea
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
xor
cmp
setne
add
mov
mov
push
lea
push
shl
sub
mov
neg
shl
sar
push
mov
push
push
push
ret
mov
push
push
push
push
ret
mov
push
push
push
push
push
push
ret
mov
push
push
push
push
push
push
ret
push
push
ret
int3
xor
mov
mov
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
push
push
push
call
mov
mov
mov
push
push
push
call
push
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
push
call
mov
mov
push
push
push
call
push
push
push
call
mov
mov
push
push
call
push
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
mov
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
call
mov
mov
push
push
call
push
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
or
mov
mov
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
mov
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
mov
mov
push
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
push
call
mov
push
push
call
push
push
call
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
mov
push
push
push
call
push
push
push
call
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
push
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
mov
push
push
push
call
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
mov
push
push
push
call
mov
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
mov
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
call
mov
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
call
push
push
call
mov
push
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
mov
push
push
call
mov
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
mov
mov
push
push
push
call
push
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
mov
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
call
mov
push
push
call
push
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
call
mov
push
push
push
call
push
push
call
push
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
call
mov
mov
push
push
push
call
mov
push
push
push
call
mov
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
mov
push
push
push
call
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
lea
nop
dec
clts
seto
mov
sub
mov
mov
xor
push
sub
push
mov
mov
or
push
je
mov
mov
xor
sub
mov
mov
mov
cmp
je
mov
add
mov
xor
mov
mov
push
pop
mov
xor
mov
mov
add
mov
mov
xor
mov
sub
xor
cmp
setl
add
je
and
mov
sub
and
lea
test
je
xor
cmp
setl
sub
mov
mov
sar
mov
xor
mov
or
cmp
setg
sar
lea
xor
shl
je
xor
cmp
setl
add
mov
mov
or
or
xor
cmp
setl
add
xor
cmp
setl
xor
xor
cmp
setne
or
mov
shr
shl
or
mov
sar
xor
mov
je
mov
mov
sar
mov
mov
sar
and
or
or
xor
cmp
jl
xor
cmp
sete
sub
mov
add
mov
mov
test
jne
xor
cmp
setl
or
mov
sub
lea
xor
xor
cmp
setne
or
xor
cmp
setg
shl
mov
xor
cmp
je
mov
or
je
lea
sub
neg
lea
lea
mov
mov
mov
mov
sar
mov
test
je
mov
sar
mov
sar
lea
shl
cmp
je
jmp
mov
mov
pop
pop
pop
mov
pop
ret
pop
pop
xor
pop
mov
pop
ret
nop
nop
push
mov
mov
mov
push
push
mov
and
and
mov
xor
cmp
push
mov
setl
and
mov
mov
mov
shl
mov
mov
mov
mov
imul
or
or
add
mov
lea
or
mov
mov
mov
sar
xor
mov
test
je
lea
and
mov
mov
mov
sar
test
je
xor
cmp
setg
shl
mov
mov
lea
lea
sar
xor
mov
test
je
sub
mov
mov
mov
cmp
je
dec
mov
mov
pop
pop
or
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
mov
xor
cmp
setge
sar
push
push
push
mov
mov
mov
mov
mov
sub
mov
mov
sar
mov
mov
sar
mov
mov
xor
mov
mov
mov
mov
xor
cmp
setl
xor
mov
mov
lea
mov
sar
lea
shl
add
sar
xor
cmp
sete
sub
lea
test
je
mov
mov
shl
or
mov
test
je
sar
mov
mov
shl
mov
or
and
xor
test
je
sar
xor
cmp
setg
xor
mov
mov
sar
mov
sar
lea
test
je
mov
or
add
mov
mov
shl
mov
add
sub
je
mov
xor
cmp
mov
setg
sar
jmp
mov
mov
or
add
cmp
lea
jne
xor
cmp
setne
sar
xor
cmp
setne
add
xor
cmp
mov
setg
sub
pop
pop
pop
shl
mov
pop
ret
nop
nop
push
mov
mov
mov
xor
cmp
push
mov
sete
mov
shl
mov
sub
add
mov
mov
mov
cmp
mov
jge
mov
mov
xor
cmp
sete
and
mov
mov
mov
xor
cmp
sete
add
mov
mov
mov
xor
je
mov
imul
and
mov
mov
mov
mov
mov
mov
xor
mov
lea
lea
lea
mov
lea
lea
test
je
xor
mov
add
shl
add
mov
pop
je
mov
not
and
xor
cmp
setg
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
dec
jne
push
push
je
jae
inc
inc
dec
sar
popa
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
push
mov
push
push
mov
add
mov
xor
xor
cmp
setg
add
mov
mov
mov
test
mov
mov
jle
mov
mov
sub
mov
mov
jmp
mov
mov
lea
xor
cmp
sete
add
mov
mov
shl
test
je
or
and
xor
cmp
setne
sar
xor
mov
mov
shl
sar
cmp
setl
and
mov
mov
shl
mov
xor
inc
dec
mov
jne
mov
test
mov
je
mov
mov
sub
lea
mov
xor
cmp
setne
shl
cmp
jl
and
mov
xor
div
mov
mov
or
sar
mov
xor
cmp
mov
setge
sub
mov
mov
shl
or
mov
lea
shl
lea
shl
sub
neg
and
mov
mov
mov
neg
shl
sub
mov
shl
sub
mov
xor
mov
sub
or
mov
or
add
mov
mov
shl
cmp
jge
lea
xor
lea
and
mov
imul
or
lea
sub
shr
mov
or
mov
mov
sub
shl
sub
mov
sar
mov
xor
xor
cmp
setge
lea
and
shl
dec
add
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jae
unpckhps
imul
nop
nop
nop
push
mov
sub
mov
mov
xor
cmp
setne
sub
mov
cmp
mov
jg
mov
mov
mov
sar
add
mov
push
push
mov
push
mov
mov
add
mov
xor
add
mov
mov
mov
mov
add
cmp
mov
mov
jle
jmp
mov
mov
xor
and
cmp
jne
xor
xor
cmp
setl
and
mov
mov
mov
sar
xor
sub
cmp
setl
add
xor
cmp
setge
shl
add
and
xor
xor
lea
cmp
sete
xor
xor
lea
or
mov
cmp
jge
mov
imul
xor
mov
and
sub
mov
movsx
shr
shl
or
or
xor
xor
cmp
mov
sete
shl
mov
sub
and
xor
cmp
setge
xor
mov
and
sub
inc
mov
mov
test
jne
mov
xor
xor
xor
cmp
je
lea
xor
and
mov
cmp
mov
setne
xor
add
shl
lea
mov
and
xor
cmp
setg
add
xor
cmp
setl
or
mov
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
mov
sar
mov
mov
mov
sar
xor
cmp
setne
sub
add
mov
or
je
xor
cmp
setne
sar
mov
mov
sar
xor
mov
or
cmp
sete
xor
xor
mov
add
lea
mov
xor
cmp
mov
jge
mov
mov
pop
shl
add
pop
add
pop
mov
add
mov
pop
ret
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
push
push
call
xor
push
mov
call
cmp
jne
mov
add
cmp
jne
movzx
cmp
je
cmp
je
mov
jmp
cmp
jbe
xor
cmp
jmp
cmp
jbe
xor
cmp
setne
mov
mov
push
call
pop
or
or
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
push
lea
push
lea
push
lea
push
call
mov
push
push
call
add
mov
mov
mov
cmp
jne
inc
mov
mov
cmp
je
cmp
jne
cmp
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
test
je
movzx
jmp
cmp
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmp
jne
push
call
call
or
mov
call
ret
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
int3
int3
int3
push
mov
push
mov
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
mov
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
jmp
