lods
aam
add
add
add
add
add
add
add
sldt
or
add
add
add
pusha
xor
add
add
rcl
add
add
add
xor
add
add
jb
add
jo
sub
add
push
es
add
jo
sub
add
push
es
add
jo
sub
add
push
outs
sldt
or
add
add
outs
adc
add
sub
add
sub
outs
adc
add
je
add
sbb
jb
add
jo
sub
add
push
outs
adc
add
adc
adc
lea
add
add
adc
add
outs
adc
ficom
or
add
jo
pop
adc
pop
add
or
fiadd
sub
adc
add
add
add
add
push
add
sbb
add
sub
add
jae
add
push
jnp
add
add
add
sbb
add
add
add
adc
sub
add
or
add
add
sub
add
or
add
or
outs
sbb
add
or
or
ja
adc
and
add
sbb
add
adc
adc
sub
adc
sub
adc
push
adc
pop
xchg
adc
adc
push
adc
pop
adc
or
push
pop
adc
pop
xchg
pushf
adc
or
push
pop
adc
pop
adc
pushf
adc
pop
pop
adc
adc
sbb
retf
adc
sbb
push
adc
push
xor
or
add
push
add
or
add
jae
add
or
jae
add
or
push
jae
add
or
or
or
outs
and
add
fimul
or
adc
outs
and
add
fmul
push
push
and
add
or
add
or
lea
add
add
mov
add
or
add
sub
add
or
add
add
sub
add
add
push
add
sub
add
outs
sub
add
add
add
add
sub
add
sub
add
sub
add
or
inc
add
sub
add
outs
sub
or
sub
push
outs
and
add
fsubr
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
or
jnp
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
lock
add
push
add
and
jb
outs
addr16
add
add
or
add
add
and
add
or
add
add
add
inc
push
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
popf
add
or
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
ret
add
add
add
add
out
fld
add
fld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
mov
mov
fld
add
add
add
add
add
push
mov
ret
add
mov
mov
and
push
add
add
add
jbe
fld
add
add
cli
add
push
add
add
pop
push
sbb
push
sbb
add
push
push
add
add
add
add
add
add
add
add
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
mov
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
push
mov
xor
sub
mov
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
jl
add
add
add
push
add
add
add
push
add
add
inc
add
adc
add
inc
add
add
add
dec
add
sbb
or
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
icebp
add
jbe
and
add
fiadd
inc
add
add
add
push
add
add
add
jno
imul
jl
add
imul
add
push
xchg
add
add
add
mov
cmps
add
jno
lods
add
imul
add
imul
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
rcl
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
call
add
addr16
add
in
add
add
add
cmp
add
adc
add
add
add
adc
add
add
add
add
add
add
outs
jne
gs
bound
xor
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
cmp
xor
cmp
xor
cmp
inc
inc
xor
ss
xor
inc
xor
cmp
aaa
xor
aaa
cmp
cmp
outs
fs
gs
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
je
ins
cs
dec
add
arpl
ins
imul
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
gs
add
add
add
jns
je
push
je
gs
ins
dec
outs
fs
ins
jo
gs
imul
add
jbe
imul
outs
jne
gs
bound
dec
inc
imul
ins
add
outs
je
ins
gs
imul
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
dec
popa
ins
add
je
inc
jne
ins
dec
popa
ins
add
jae
popa
ins
add
ins
jne
push
jns
add
jae
gs
cs
outs
jb
add
je
inc
jne
jb
outs
je
jne
je
jb
add
je
outs
fs
popa
jae
add
jo
jae
add
gs
je
add
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
ins
outs
jbe
pop
inc
jae
gs
bound
gs
ins
jbe
add
jb
outs
je
outs
ins
popa
imul
gs
bound
gs
ins
jbe
add
fs
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
outs
push
je
imul
pop
dec
outs
addr16
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
ins
popa
je
push
je
gs
ins
add
jns
je
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
outs
addr16
ins
add
jae
gs
add
ins
ins
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
imul
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
outs
popa
fs
push
gs
jne
arpl
cs
outs
je
jb
jo
dec
push
push
push
inc
dec
imul
dec
jb
dec
outs
popa
fs
push
gs
jne
arpl
cs
js
outs
je
jb
jo
dec
push
push
push
inc
dec
imul
dec
jb
dec
outs
popa
fs
push
gs
jne
arpl
bound
bound
add
fs
outs
popa
fs
push
gs
jne
arpl
cs
jb
ins
popa
imul
dec
gs
popa
addr16
outs
js
arpl
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
je
ins
cs
ins
outs
bound
imul
add
jae
gs
cs
gs
arpl
outs
add
je
push
outs
jae
je
outs
outs
add
arpl
je
outs
outs
add
jo
push
outs
add
je
outs
fs
outs
outs
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
imul
dec
outs
popa
fs
inc
jae
gs
bound
outs
popa
fs
jae
outs
fs
inc
imul
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
arpl
add
gs
je
inc
arpl
jo
outs
jb
push
jns
je
ins
cs
imul
imul
dec
gs
outs
fs
inc
gs
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
bound
imul
jae
inc
gs
jns
gs
inc
imul
ins
popa
addr16
push
gs
ins
jbe
inc
jbe
outs
je
jb
jae
popa
jb
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
push
jne
je
ins
gs
gs
jo
jb
add
push
arpl
imul
jae
ins
je
addr16
inc
outs
je
jns
outs
imul
jae
add
outs
ja
dec
gs
popa
addr16
outs
js
dec
outs
imul
inc
jb
popa
jns
imul
push
jns
je
ins
cs
arpl
imul
je
addr16
jo
jns
addr16
inc
jae
gs
bound
popa
jae
gs
bound
outs
jo
inc
jno
popa
ins
imul
add
add
add
add
jb
add
add
outs
add
jb
arpl
add
add
outs
add
add
outs
add
add
push
add
add
dec
add
bound
add
imul
dec
add
add
add
add
jb
add
add
outs
add
jb
arpl
add
add
js
dec
add
je
add
outs
add
add
push
add
add
dec
add
bound
add
imul
dec
add
add
add
add
jb
add
add
outs
add
jb
arpl
add
add
jae
imul
add
imul
dec
add
add
add
add
jb
add
add
outs
add
jb
arpl
add
add
jb
add
popa
add
outs
add
add
imul
dec
add
inc
add
add
add
xlat
lds
mov
mov
adc
add
add
or
and
add
adc
add
push
add
add
add
add
sbb
add
push
add
add
add
gs
jno
or
adc
and
sbb
sbb
add
add
jno
add
adc
and
adc
jns
and
push
or
mov
push
adc
adc
or
dec
adc
dec
sbb
push
or
add
add
adc
adc
and
adc
or
add
adc
add
test
push
sbb
and
add
dec
adc
xor
dec
adc
add
dec
add
add
or
and
or
and
or
add
adc
add
add
and
add
push
and
add
add
add
adc
add
push
or
xor
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
pop
add
out
inc
cmps
xchg
out
push
test
sbb
test
lods
retf
scas
fsubr
sbb
jno
mov
add
sub
pusha
and
sub
pop
push
pop
lock
je
add
sub
push
ds
mov
cs
push
stos
cmp
sbb
push
pop
jmp
cmp
je
or
movs
aas
sub
(bad)
cld
xor
test
pop
jb
je
cmp
and
sbb
repnz
in
add
add
add
push
adc
push
adc
push
pop
add
adc
sbb
add
sbb
adc
adc
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
add
or
add
ins
jb
add
add
add
add
inc
outs
jo
jb
addr16
and
je
imul
je
arpl
and
xor
cmp
add
add
sub
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
add
add
pusha
daa
pushf
and
scas
sub
cli
fst
adc
xor
shl
mov
nop
jno
dec
push
dec
mov
test
idiv
pop
test
fisttp
lods
inc
mov
jl
xor
in
outs
dec
mov
scas
aad
jl
rcl
mov
add
cmp
cmp
call
stc
add
pop
aam
pop
pop
nop
daa
(bad)
aad
lock
out
test
adc
adc
cmp
mov
arpl
fucomp
jge
xchg
sub
movs
dec
or
add
sbb
lds
daa
adc
adc
int
aaa
or
sub
pop
cs
inc
aaa
addr16
mov
inc
sbb
fstp
out
stos
ret
test
cli
inc
rcr
lahf
inc
adc
pusha
sar
add
and
adc
cwde
or
ret
test
add
adc
push
adc
dec
sub
push
popa
add
xor
adc
icebp
nop
nop
test
dec
mov
mov
into
addr16
xchg
out
repz
lods
dec
xchg
mov
push
js
mov
jl
(bad)
xor
push
mov
popa
aaa
or
mov
adc
stos
fnsave
push
out
xchg
jecxz
into
xchg
in
lahf
push
bound
mov
iret
int
mov
xchg
popf
imul
arpl
cmp
test
std
push
or
lock
lahf
ret
dec
pusha
rcl
cmp
mov
cmp
mov
shl
rol
mov
add
xchg
leave
lods
and
cmp
mov
les
sti
adc
sahf
and
mov
add
xchg
movs
mov
pop
inc
and
push
mov
ret
outs
dec
test
imul
cli
sbb
out
stos
mov
mov
mov
jp
in
xchg
mov
dec
(bad)
mov
and
sub
fld
jb
xor
jp
dec
fwait
push
add
add
pop
int
dec
pop
loop
cli
xor
jno
xchg
cmp
repnz
dec
push
cmps
das
sbb
rol
jns
test
fisub
cmps
add
and
and
cli
retf
mov
(bad)
sub
loop
push
sub
movs
and
mov
cmp
push
cmps
sti
loop
jecxz
(bad)
idiv
sbb
inc
mov
sti
mov
xchg
inc
stos
test
pop
aas
cmp
sub
stos
add
in
jmp
jo
fucom
ret
mov
fcom
xchg
jb
fstp
dec
scas
xlat
jae
and
jecxz
inc
fdiv
hlt
pop
pop
sub
out
mov
dec
pop
sub
or
test
push
inc
sub
test
je
(bad)
xor
xchg
push
fdiv
cdq
aam
test
les
popa
out
mov
cdq
inc
popf
inc
xchg
mov
add
jb
mov
leave
sbb
add
push
clc
enter
fwait
adc
mov
or
cmp
ins
out
in
arpl
jb
outs
sbb
not
test
adc
cmc
sbb
rcr
cmp
inc
aas
or
dec
(bad)
xchg
outs
xor
push
test
cs
jp
movs
jl
cmp
dec
into
mov
jmp
mov
movs
mov
rol
inc
mov
lods
inc
je
sbb
(bad)
lods
aam
or
pop
jge
xor
jmp
push
add
repz
push
dec
sbb
neg
sbb
adc
mov
and
in
outs
rcr
jne
adc
cmp
lds
pop
jno
pop
cs
jns
ret
add
xchg
and
jo
mov
in
inc
cmp
int
shl
xchg
test
mov
fiadd
inc
movs
jecxz
in
imul
mov
mov
and
pop
xchg
ror
hlt
bnd
adc
in
fdiv
cmp
inc
xchg
sahf
push
mov
sbb
sbb
mov
jl
stc
shl
mov
xor
push
movs
jae
push
push
imul
jle
(bad)
lock
mov
stc
push
jo
and
js
and
mov
pop
and
sbb
sar
push
fidiv
dec
pop
jo
inc
scas
loop
mov
outs
sub
mov
push
add
jae
mov
out
imul
jg
jae
inc
sbb
loopne
(bad)
push
test
cmp
call
and
push
mov
retf
pop
jle
loop
cld
(bad)
popf
(bad)
sub
xor
or
push
lahf
mov
loopne
popa
(bad)
push
cmp
daa
retf
data16
jbe
xchg
nop
xor
fisub
test
jecxz
xchg
daa
shl
xor
or
imul
xor
xor
dec
sub
and
(bad)
mov
jne
cmp
jnp
push
xor
mul
xchg
push
repz
dec
repz
or
mov
ja
sbb
jbe
inc
pop
sbb
push
rcl
out
or
xor
lods
push
push
sbb
into
xchg
(bad)
or
add
jl
loop
jno
test
jmp
push
push
scas
pusha
xchg
xchg
out
adc
std
push
jnp
lea
pop
imul
aas
call
fld
pop
mov
inc
js
sahf
lods
adc
xor
sbb
stos
daa
das
out
and
fstp
aaa
jnp
aam
ds
std
call
add
std
dec
std
test
and
inc
shl
push
or
test
push
pop
pop
push
jne
dec
stc
test
sbb
test
push
lahf
mov
fild
push
ret
outs
lea
add
jp
pop
inc
cmp
or
push
jnp
sbb
sub
dec
test
sbb
sar
(bad)
pusha
pop
imul
in
jne
aam
xchg
(bad)
outs
mov
jmp
xchg
fild
push
xor
shld
out
lock
loopne
cmp
pop
push
push
ss
pop
dec
in
imul
cmps
inc
pop
cld
mul
in
push
(bad)
fild
cs
pop
arpl
dec
jmp
bnd
sbb
mov
add
pop
ror
push
xor
push
je
test
xor
sbb
fld
sti
jb
mov
or
pop
xor
sub
sbb
movs
iret
push
ja
mov
outs
xchg
hlt
rcr
or
mov
jns
sub
adc
push
mov
ja
xor
(bad)
test
add
(bad)
(bad)
pop
mov
push
leave
fxch
loope
cmp
cmp
push
mov
xlat
pop
es
setle
push
mov
jns
mov
fcom
call
dec
dec
(bad)
in
scas
jmp
ret
es
int3
inc
jmp
(bad)
cmovl
cmp
inc
xchg
xor
lock
jmp
outs
hlt
call
mov
test
cwde
std
stc
daa
jp
fwait
jb
jmp
je
mov
xchg
(bad)
xchg
inc
xor
inc
aaa
bound
xor
mov
or
fcmovnbe
xchg
scas
das
(bad)
sbb
(bad)
outs
jl
cs
mov
fs
(bad)
mov
cmc
(bad)
pop
call
mov
(bad)
and
gs
idiv
mov
inc
and
pop
movs
js
fs
mov
lods
sti
xor
cmp
clc
das
inc
add
xchg
sub
iret
pmaxub
dec
xchg
push
push
jno
out
jnp
call
aam
push
fwait
add
xlat
add
jmp
xchg
push
pop
shr
aad
scas
xchg
mov
jge
push
out
jb
xchg
clc
xchg
movs
test
sbb
cmp
retf
cmp
nop
pop
pop
jnp
stos
dec
xchg
and
mov
leave
adc
pop
push
mov
dec
inc
js
test
mov
ret
mov
mov
ds
mov
lahf
adc
cmp
or
out
mov
adc
movs
mov
xor
clc
xor
addr16
cmp
sbb
xchg
adc
sti
jbe
sbb
stos
das
push
dec
in
leave
jo
fnstenv
jge
fwait
loopne
(bad)
cs
retf
jbe
mov
popf
scas
mov
inc
adc
(bad)
out
mov
mov
jecxz
push
imul
inc
sub
int
and
xchg
jo
jmp
inc
mov
jb
out
into
xor
adc
and
add
and
jne
mov
jmp
xor
fwait
idiv
sub
movs
mov
call
adc
push
mov
push
sbb
in
xor
imul
aad
mov
popf
pop
cmp
nop
and
push
les
xor
push
fdivr
dec
fcmove
out
je
pop
pusha
fsubr
loopne
mov
call
fidiv
imul
nop
ins
or
inc
xchg
pop
mov
xor
leave
mov
xchg
js
mov
out
loopne
mov
in
mov
icebp
or
xchg
movs
adc
test
movs
push
pop
adc
retf
mov
mov
and
ss
push
loope
arpl
mov
aaa
mov
(bad)
sbb
pop
or
inc
loope
popa
sub
xchg
pop
scas
das
push
mov
out
push
mov
push
call
enter
pop
and
leave
mov
pop
in
(bad)
fidiv
aaa
pop
add
sbb
mov
cdq
mov
sub
outs
ins
int
(bad)
sbb
(bad)
mov
sbb
mov
loope
popf
je
outs
call
lods
sub
pop
(bad)
imul
dec
fistp
sbb
cmp
dec
in
jno
jl
push
in
pop
add
cmp
adc
daa
and
and
aam
je
pop
lods
dec
xchg
or
mov
mov
into
jbe
sbb
(bad)
fs
mov
mov
pusha
in
int3
mov
pop
repnz
jmp
(bad)
mov
and
fld
ds
sub
mov
sbb
push
ins
pop
cmp
hlt
push
movs
dec
nop
not
or
sub
xchg
mov
lods
jg
in
repnz
fneni(8087
pop
cs
mov
push
hlt
aam
in
repz
ss
(bad)
pop
retf
loope
aad
push
sbb
(bad)
xchg
mov
mov
xchg
xchg
dec
jae
push
inc
outs
je
ffree
fdiv
mov
(bad)
test
xchg
mov
jno
stos
pop
out
pusha
hlt
and
jb
cld
push
and
mov
and
sub
mov
sbb
outs
(bad)
jmp
mov
(bad)
or
mov
pop
xor
imul
popa
push
cmp
adc
dec
ins
mov
int3
shr
(bad)
jp
retf
lods
mov
mov
mov
push
cmp
ror
jns
cmp
dec
(bad)
daa
(bad)
test
push
adc
add
js
add
ins
mov
or
cmps
jbe
retf
adc
stos
mov
adc
xor
bound
and
xchg
pop
nop
jmp
sbb
aas
xchg
retf
push
or
or
jae
mov
lock
ficomp
leave
icebp
fidiv
push
mov
push
sub
icebp
test
into
adc
nop
jge
cli
inc
push
psrlw
nop
cmp
sahf
mov
shl
pusha
leave
pop
fld
(bad)
rep
das
push
frstor
push
lds
rol
loope
lods
jne
and
test
adc
movs
mov
stos
aaa
dec
call
pushf
dec
lds
fstp
ins
dec
jno
stos
mov
shl
mov
in
vmread
xor
fs
(bad)
outs
into
xor
add
not
xor
mov
or
jle
xchg
mov
pop
data16
imul
iret
fs
arpl
dec
fs
mov
mov
nop
adc
mov
mov
push
ins
dec
cmp
ficomp
and
ja
les
ss
out
outs
add
inc
mov
cmc
retf
rcl
gs
addr16
clc
retf
push
inc
ror
repnz
(bad)
jecxz
mov
lods
neg
mov
call
xor
xchg
mov
mov
imul
cmp
out
pop
adc
mov
fisubr
mov
xchg
or
push
js
adc
retf
sar
cdq
and
pop
fist
pop
movs
in
add
pop
and
mov
add
fs
stc
inc
xor
imul
inc
add
hlt
push
(bad)
enter
retf
inc
add
inc
adc
leave
push
mov
inc
pop
and
xor
shl
imul
daa
test
xor
cmps
sti
call
sbb
pushf
fucomi
and
cmp
pop
or
lods
repnz
ins
cmp
into
(bad)
sbb
repnz
push
gs
mov
xchg
adc
test
sti
jno
arpl
icebp
rcl
sub
iret
fcom
sti
inc
inc
fild
gs
retf
cmps
(bad)
lds
mov
test
ficom
fwait
xor
stos
fild
push
int
cmp
shl
mov
sub
mov
sbb
(bad)
xor
fs
mov
pop
xchg
mov
lds
pop
pop
xchg
mov
dec
out
inc
ror
cmp
imul
jmp
mov
and
pop
inc
mov
mov
addr16
movs
aas
cmp
sbb
dec
mov
movs
fwait
pop
jns
dec
mov
pop
mov
mov
push
aas
sub
test
test
imul
or
dec
out
fwait
sbb
shl
sub
ffree
adc
jge
pop
jmp
lock
pop
dec
ret
popa
out
in
les
imul
addr16
mov
cmp
push
mov
sub
das
jne
adc
pop
add
xchg
add
das
out
dec
ins
sbb
pop
mov
cs
iret
adc
sub
sar
or
enter
mov
mov
pop
cmp
in
inc
nop
inc
scas
shl
cwde
mov
xor
rcr
mov
sbb
imul
mov
sub
dec
add
outs
cmp
sbb
push
lods
mov
or
pop
mov
sbb
enter
sar
mov
mov
pop
sub
add
pop
fild
pop
sub
mov
ja
gs
int
mov
nop
iret
dec
jp
repz
or
test
add
jmp
lods
shr
push
mov
cld
sub
hlt
or
adc
repz
retf
add
push
pop
sbb
xlat
aam
test
add
jp
mov
mov
repz
lock
js
xlat
xchg
fisttp
shl
movs
js
push
mov
mov
arpl
in
push
fisubr
cmps
xchg
test
push
(bad)
pop
xor
mov
pop
test
adc
addr16
inc
fst
test
sbb
mov
je
(bad)
or
aad
movs
popf
inc
xor
mov
(bad)
jecxz
sbb
push
out
es
xchg
pop
mov
sub
popa
ret
call
push
int
in
dec
adc
imul
mov
sbb
es
add
lahf
jle
les
sub
cmp
adc
or
adc
les
jg
cmps
or
enter
jmp
add
pop
test
mov
adc
rol
mov
call
mov
and
mov
sbb
sub
add
outs
xchg
pop
sub
pop
xchg
add
cmp
jmp
dec
pop
mov
(bad)
sub
push
leave
fldenv
arpl
mov
(bad)
dec
xor
das
ss
inc
(bad)
ror
xor
idiv
rcl
push
icebp
or
ss
push
pop
mov
mov
lds
inc
sti
scas
loop
push
push
inc
jae
in
cmp
cli
test
loopne
dec
loopne
fwait
lock
nop
dec
shl
push
das
pop
mov
adc
vminsd
fbld
mov
leave
cmp
aad
xor
mov
(bad)
je
add
fnstsw
test
inc
and
or
mov
push
jne
mov
shl
jns
out
dec
and
jo
inc
hlt
ss
dec
movs
lea
add
les
aas
add
xchg
pop
cli
pushf
loope
inc
push
scas
mov
in
pop
sbb
aaa
sub
xchg
lods
cmp
jmp
mov
add
cld
test
ins
iret
cld
and
out
lods
call
mov
repz
popf
dec
xchg
out
call
sub
out
outs
add
pop
retf
in
(bad)
popa
pop
mov
mov
mov
jmp
push
cmps
outs
sbb
push
sub
ins
in
push
inc
fmul
je
dec
cli
in
test
pop
dec
jno
jmp
add
retf
jmp
outs
jg
bound
cld
movs
ds
push
xchg
ins
in
cmc
stc
pop
jb
or
cmp
adc
pop
rol
push
(bad)
sbb
loopne
sti
sub
dec
sub
push
or
nop
rol
jg
mov
nop
stc
popa
inc
mov
sub
jmp
inc
ds
and
jp
mov
mov
call
mov
rcr
push
sti
out
js
jge
or
mov
out
xor
pop
push
inc
mov
push
call
dec
add
ins
jne
dec
sbb
mov
adc
stos
hlt
dec
stc
lods
cmp
adc
xchg
dec
sbb
sbb
and
scas
lds
push
mov
(bad)
outs
pop
(bad)
aam
es
push
data16
pushf
sbb
xchg
jno
test
loopne
pop
xchg
mov
test
jge
pop
mov
mov
mov
pop
test
pop
fucompp
push
xor
lods
(bad)
sbb
jns
xor
adc
cmp
test
fwait
rep
pop
pop
sahf
cmp
push
mov
mov
pop
pop
dec
retf
sti
push
and
jmp
scas
lock
leave
dec
popa
cmp
out
rcl
cld
pop
sahf
xchg
inc
mov
inc
scas
mul
dec
pushf
lock
add
fwait
sub
inc
lods
or
cmp
pushf
fdivr
nop
mov
and
in
add
xchg
xchg
loop
out
imul
not
or
jecxz
retf
nop
xchg
ds
adc
xchg
jb
stos
and
xchg
ins
pop
mov
lahf
les
xchg
popa
dec
mov
mov
out
pushf
mov
push
daa
or
xor
inc
adc
int
(bad)
(bad)
dec
mov
push
sub
xlat
mov
push
popf
jecxz
dec
jnp
sub
cmp
pop
mov
jb
dec
or
xor
adc
sbb
inc
das
aaa
jl
jge
xlat
(bad)
es
xor
mov
sbb
mov
or
or
or
rcl
mov
rol
stos
pop
inc
out
(bad)
les
rol
adc
fldcw
fsub
ds
into
(bad)
call
mov
cmp
xor
int
dec
xchg
ret
inc
pusha
dec
and
test
shl
fcomp
jno
ins
and
mov
ret
lods
jnp
ret
jmp
dec
pop
push
scas
lock
or
loopne
inc
je
or
fisub
fmul
mov
mov
in
mov
sub
dec
inc
fnstenv
mov
test
enter
(bad)
adc
fstp
scas
(bad)
loope
(bad)
(bad)
pop
and
(bad)
adc
mov
sbb
leave
or
push
adc
fisttp
xor
push
popa
int3
movs
xchg
mov
mov
sbb
push
cmp
repnz
mov
jne
sub
lds
inc
sub
lds
ret
je
vaddss
adc
and
repnz
test
loopne
adc
push
add
std
(bad)
out
push
jns
enter
ror
adc
and
test
ja
jg
push
dec
call
ds
gs
bnd
mov
fs
pushf
fcmovnbe
(bad)
repz
das
cmc
ror
pushf
das
jbe
mov
into
or
out
inc
cmp
sub
lahf
loopne
xchg
add
and
push
dec
xchg
mov
call
cmps
xchg
mov
add
cli
(bad)
mov
(bad)
fcmovnbe
ffree
test
jae
add
mov
out
mov
inc
dec
push
fsub
(bad)
stos
sahf
inc
adc
and
jae
fmul
pop
add
sahf
cmc
mov
cmc
scas
das
frstor
sbb
sub
cwde
inc
fadd
jl
call
pop
retf
sbb
push
push
mov
ds
inc
sub
lds
aaa
inc
xchg
push
cmp
pop
mov
jno
retf
lock
fmul
inc
fsubr
xchg
ret
sahf
int
xor
mov
ja
stos
adc
xchg
lods
sub
inc
jnp
jecxz
push
test
mov
adc
aam
data16
jge
sar
or
mov
push
and
(bad)
xor
inc
ror
loope
add
cmp
retf
pushf
or
fwait
add
xchg
inc
int
call
or
lea
fs
push
cmp
cmp
xor
sbb
jge
(bad)
jle
mov
sbb
imul
call
out
mov
fdivr
movs
and
adc
retf
sbb
test
es
pop
scas
jle
outs
jb
fs
pop
xchg
aam
jp
mov
mov
lahf
xlat
pop
sub
xchg
push
mov
mov
mov
mov
jmp
adc
neg
js
xchg
test
sar
sahf
lea
pop
rol
pop
dec
es
lfs
dec
adc
js
(bad)
cdq
(bad)
xor
xor
adc
call
push
in
push
std
sub
push
dec
mov
in
or
(bad)
bound
mov
inc
ficom
dec
ins
dec
fisubr
cdq
add
adc
es
lods
add
lods
dec
std
(bad)
ficomp
ins
loopne
pushf
into
int3
fild
push
or
inc
shl
aaa
add
test
shr
out
ss
rcl
loopne
inc
push
xchg
sub
fs
lock
(bad)
pop
xchg
sub
pop
adc
xchg
mov
into
inc
sbb
sahf
repnz
(bad)
sti
daa
int3
fidivr
xlat
inc
xor
popa
xor
mul
inc
gs
mov
pop
mov
fisubr
dec
dec
push
(bad)
fisubr
sub
jae
pop
test
cmps
arpl
addr16
out
adc
pop
lock
movs
cmp
(bad)
fimul
jns
notrack
xor
adc
int
xchg
add
sbb
lahf
lea
pusha
cs
or
into
inc
mov
sbb
cmp
mov
xor
repnz
inc
jmp
lds
push
xor
leave
mov
fwait
jl
dec
push
mov
lock
cs
sub
hlt
int3
add
xchg
sub
nop
push
outs
xchg
sub
sbb
jo
add
rcr
sbb
push
cmpxchg
mov
inc
call
(bad)
mov
xor
dec
jle
jno
call
xchg
mov
mov
sbb
sbb
sbb
mov
sub
mov
xor
je
fld
popf
or
cmp
clc
mov
rcr
dec
movs
sbb
in
(bad)
lods
out
fwait
jp
test
into
push
les
adc
not
mov
jae
add
repz
cmp
inc
inc
stc
movs
mov
pop
mov
push
inc
out
dec
sub
cwde
mov
sbb
mov
dec
xor
cmps
and
sub
cmps
add
aaa
pop
out
out
mov
lea
inc
adc
das
je
mov
push
pop
aad
mov
inc
gs
repz
pushf
aam
addr16
jae
mov
repz
ror
or
icebp
mov
fisttp
pop
push
shl
sub
call
sbb
(bad)
push
cdq
and
xchg
adc
cmp
in
cwde
add
out
loop
adc
scas
(bad)
scas
pop
dec
inc
mov
mov
sahf
std
sbb
xor
jg
push
mov
stc
sbb
jae
or
nop
pop
mov
loop
or
jae
test
popf
adc
loope
out
mov
das
in
pop
sub
sub
push
jne
stos
mov
and
jnp
pop
setbe
add
(bad)
(bad)
je
pop
call
into
pop
sub
mov
dec
cmc
arpl
jo
jp
shl
lds
or
jmp
mov
jnp
xchg
repnz
mov
test
push
movs
or
ja
jbe
push
push
out
(bad)
imul
cmp
test
ret
enter
std
push
pop
mov
jp
push
push
outs
mov
fwait
sbb
push
js
and
movq
mov
jmp
cwde
in
loope
enter
aad
cdq
call
dec
pop
cld
and
xchg
out
add
push
xchg
mov
dec
scas
(bad)
or
shl
add
cmps
test
sub
jnp
addr16
jge
je
aaa
pusha
push
ins
mov
jecxz
jg
sub
ret
dec
cmps
or
mov
mov
adc
inc
sub
and
or
add
mov
daa
in
inc
popa
sub
push
xor
aas
fwait
enter
sar
xor
fisubr
rol
das
sbb
popf
inc
in
aad
fs
pop
(bad)
lods
xor
mov
mov
and
sbb
inc
les
jns
mov
pop
dec
test
xchg
pop
lock
pop
dec
test
jns
aas
inc
fdiv
fadd
in
push
test
imul
push
pop
xchg
mov
push
xor
nop
pop
sbb
dec
mov
sbb
mov
and
sub
aaa
add
mov
cmps
xor
jns
sbb
test
add
mov
scas
inc
or
jmp
mov
mov
(bad)
mov
popf
xor
adc
mov
in
or
fwait
and
inc
mov
mov
rol
sahf
dec
push
sub
or
mov
push
pop
imul
jl
jmp
outs
cwde
xchg
mov
jl
mov
jecxz
jmp
aad
or
out
std
jg
sub
ja
jae
sub
push
fstp
or
sbb
sar
push
pop
and
or
jb
ret
mov
into
(bad)
pop
mov
test
or
add
xchg
push
push
push
in
dec
mov
or
push
out
jecxz
add
jp
inc
cmps
aad
jecxz
iret
js
jnp
jl
mov
and
fild
push
xor
test
arpl
cmp
std
mov
xchg
pop
add
not
sbb
aam
mov
bnd
out
sbb
js
mov
loope
fild
add
pop
lock
mov
sub
lods
xchg
inc
jno
push
pop
sub
inc
test
cdq
adc
push
add
dec
jne
jnp
pop
fs
dec
movs
pop
imul
icebp
or
sti
adc
ret
test
in
push
imul
loop
sub
adc
pop
or
cmp
les
loopne
rol
adc
retf
aaa
movq
loope
sar
xchg
mov
scas
pusha
mov
inc
pop
repnz
js
mov
je
out
loop
and
fwait
retf
mov
int
or
and
mov
jge
jecxz
jb
hlt
shr
movs
pushf
jl
movs
cdq
loop
leave
shl
cmp
push
xchg
pusha
cmc
xchg
fwait
pop
xlat
(bad)
and
pop
pop
enter
imul
enter
lahf
adc
mov
and
int
pop
(bad)
xchg
mov
lea
adc
stos
cmp
xchg
retf
ins
dec
lea
xchg
(bad)
inc
pop
mov
push
jge
push
push
pop
mov
aad
imul
in
enter
mov
cld
dec
outs
repnz
pop
mov
pop
jmp
xchg
idiv
sbb
fld
push
in
call
(bad)
push
adc
mov
inc
cs
test
cmp
sbb
test
loopne
rol
dec
xchg
imul
lea
cmp
cmp
sub
mov
xor
mov
push
xchg
out
push
add
pop
out
xor
ja
inc
inc
xor
sub
sbb
xchg
repz
xor
sub
pop
and
cmp
push
push
bound
jo
sbb
shl
add
dec
fistp
cmps
sahf
loope
and
sub
cmp
icebp
dec
out
add
idiv
dec
adc
sbb
sub
push
stos
popf
(bad)
rcr
inc
das
fnstcw
fcomip
jb
cmps
dec
push
adc
lods
sbb
mov
sub
dec
(bad)
outs
push
cdq
mov
xor
fcmovnu
(bad)
pop
leave
sti
bound
jno
rcr
jb
inc
gs
hlt
dec
lods
or
sbb
gs
leave
int3
clc
or
lahf
enterw
popa
mov
les
push
xor
mov
(bad)
(bad)
jmp
iret
sbb
mov
xchg
fistp
push
data16
fnstsw
mov
outs
call
jmp
inc
jnp
push
mov
out
fidivr
sbb
push
lea
imul
leave
out
adc
(bad)
jnp
jo
dec
cmp
(bad)
push
jno
bound
pop
les
data16
or
cmp
jge
repnz
loope
sub
add
test
retf
sar
retf
movs
mov
sbb
sub
mov
jg
mov
test
shl
int
out
mov
das
dec
test
xlat
jmp
test
rcr
in
lock
mov
test
test
imul
mov
int
pop
and
or
mov
and
sbb
test
mov
test
pop
jmp
pop
test
loopne
xor
adc
mov
lods
add
fcom
mov
cmp
ins
(bad)
jle
sbb
ja
lods
and
scas
mov
push
jmp
xor
mov
out
xor
mov
add
or
(bad)
dec
xchg
out
(bad)
or
js
inc
jmp
cwde
mov
sbb
in
(bad)
mov
and
push
sub
retf
call
mov
or
enter
rcr
pop
mov
ret
jmp
ins
std
sub
or
fidivr
call
jbe
stos
or
push
sar
dec
cs
popf
lds
mov
xchg
int
arpl
xor
or
stc
xor
call
stos
arpl
xor
mov
sar
add
jb
mov
pop
sbb
sbb
inc
lods
repnz
adc
std
and
out
(bad)
lahf
in
and
rcl
mov
fdiv
ins
dec
mov
and
std
and
int3
mov
stos
(bad)
fs
int
or
push
aad
mov
dec
xor
clc
cwde
push
and
test
sub
and
repnz
jmp
jns
mov
add
xor
add
add
fwait
jnp
icebp
fdivr
sub
inc
(bad)
xchg
data16
xchg
xchg
neg
sub
mov
mov
jo
mov
mov
xor
sahf
dec
mov
loop
mov
add
retf
(bad)
inc
sbb
aas
jl
loop
out
rol
cmps
jp
mov
mov
mov
daa
jae
and
ins
push
xor
pop
cmp
inc
cmps
retw
add
in
adc
sar
(bad)
mov
adc
scas
xor
out
inc
clc
jbe
cmp
and
mov
in
scas
inc
jmp
fimul
or
mov
mov
sbb
test
xor
xor
mov
mov
mov
pop
jg
imul
dec
push
clc
adc
stc
lahf
cld
xchg
aam
js
sti
outs
movs
mov
lea
dec
sbb
xchg
(bad)
cs
push
cs
outs
dec
stos
jg
xor
add
out
enter
mov
xchg
loop
ds
shr
jmp
jg
xchg
sub
jge
push
dec
xor
mov
sub
pop
sti
or
add
cli
test
xchg
mov
lods
daa
repnz
pop
cld
call
add
repz
add
fadd
aam
aaa
push
popa
out
test
jno
(bad)
scas
push
out
out
out
or
or
jmp
jbe
bnd
cmp
retf
ret
pop
xor
xchg
pushf
add
cmc
jmp
inc
imul
pusha
and
repnz
pushf
lea
jae
ins
dec
jge
pusha
inc
int
cdq
mov
add
xchg
into
lods
loopne
aam
sub
daa
push
das
adc
cmps
shl
test
aas
jbe
lahf
ffreep
xchg
add
push
cmp
xchg
cmps
scas
add
fwait
push
sti
jae
inc
sar
rcr
jmp
pop
(bad)
fwait
sti
aaa
and
push
xchg
das
retf
and
or
jo
rcr
stos
in
and
inc
push
push
rcr
add
repz
add
or
clc
(bad)
fcmovu
pop
dec
fist
jne
mov
scas
xchg
jno
mov
mov
inc
cmp
mov
jbe
pop
ins
int3
cmp
xor
ins
arpl
ret
ror
push
jle
jge
scas
push
pop
aas
pop
daa
sub
push
fidiv
xor
or
imul
jecxz
adc
jge
lods
fnstsw
cmp
mov
fcomi
scas
test
push
mov
cmp
test
dec
mov
mov
dec
mov
bound
or
pop
mov
lock
lock
out
push
inc
pop
mov
mov
fcomi
sbb
jge
jle
sub
sbb
mov
or
jno
push
(bad)
pop
pushf
ja
movs
dec
mov
adc
test
pop
fwait
or
test
push
cmp
js
jecxz
mov
cmc
es
gs
mov
sar
jns
ficomp
inc
pop
xor
ins
outs
out
adc
aaa
push
into
or
jmp
xchg
stos
sub
push
in
fnsave
inc
cmp
fstp
cmp
jmp
sbb
call
sbb
sbb
or
sbb
sub
inc
fstp
add
jb
inc
mov
push
arpl
dec
inc
hlt
clc
sbb
jae
neg
in
pop
cmp
cmp
(bad)
cmps
int
and
and
dec
ror
stc
fisub
push
jl
adc
or
mov
mov
std
xor
inc
fidivr
pop
adc
clc
dec
mov
(bad)
ss
and
and
std
dec
pushf
movs
jl
mov
sbb
jb
nop
sbb
ins
jmp
push
xchg
retf
sub
pop
inc
inc
sub
push
mov
pop
add
(bad)
sub
dec
jno
fucom
push
mov
jp
js
inc
adc
cmp
sbb
jns
mov
sub
sbb
pusha
or
loop
push
jmp
stos
into
and
scas
mov
ss
dec
pop
in
push
mov
into
sbb
mov
jmp
pop
out
sub
jb
sub
test
push
int
arpl
hlt
outs
jl
cs
push
fld
or
lods
test
inc
in
aad
cmp
or
test
mov
mul
adc
xchg
mov
pop
ret
inc
shl
test
out
pop
aaa
jnp
xor
inc
mov
cmp
les
loop
popa
push
adc
(bad)
into
aam
ss
pop
gs
jl
xor
addr16
call
pop
shl
js
mov
div
nop
(bad)
pop
mov
mov
into
call
sbb
call
lods
fdivp
stos
xchg
inc
mov
push
pop
cwde
mov
jno
ror
jmp
push
adc
fisub
inc
and
in
fsub
mov
popf
call
mov
and
add
mov
lea
ds
jae
push
add
fs
ret
or
jmp
test
adc
xor
stc
in
xchg
hlt
stc
call
xchg
sub
push
dec
xchg
in
mov
pop
xchg
lock
repnz
add
cli
adc
nop
outs
out
mov
push
lds
mov
jne
add
aas
adc
xchg
xor
jge
movs
xchg
popf
add
xor
rcl
add
adc
adc
mov
(bad)
clc
adc
sbb
cmp
lea
ja
mov
scas
(bad)
push
xchg
(bad)
iret
xchg
shl
addr16
xchg
pop
loop
add
aas
jg
cmps
pop
outs
icebp
out
ja
sti
mov
cwde
cmps
into
jg
xchg
push
add
sar
adc
mov
call
mov
mov
adc
sub
mov
ja
cmps
push
retf
and
push
mov
retf
loopne
or
xchg
movs
push
xchg
jge
loope
jnp
adc
mov
xor
pop
jp
push
lods
daa
adc
jmp
das
cmp
hlt
sbb
mov
(bad)
es
iret
(bad)
mov
gs
ds
jo
iret
mov
bound
loop
xchg
jae
push
shl
mov
jge
jmp
jp
adc
pop
jo
test
bswap
std
xchg
repz
stc
pop
scas
xor
pop
adc
jmp
sbb
jne
and
dec
mov
push
jl
push
not
mov
push
enter
stos
lahf
outs
cld
cmp
leave
mov
popa
push
repz
or
xchg
fnstenv
push
shl
lds
(bad)
mov
scas
in
out
daa
popf
xchg
mov
(bad)
(bad)
je
mov
pop
push
cli
xor
ins
push
lahf
push
mov
icebp
ins
out
test
cwde
sbb
test
std
and
jp
pop
sub
mov
bound
inc
nop
inc
popf
xchg
leave
ins
mov
pop
or
sbb
mov
mov
adc
xchg
push
(bad)
shl
mov
fimul
jns
ror
jge
and
dec
mov
lds
cli
in
push
cdq
in
clc
int3
fmul
cmps
in
rcr
fwait
or
std
or
adc
or
pop
fsub
jnp
shl
inc
mov
int
xchg
push
inc
cmp
jmp
fdiv
lahf
mov
aam
xlat
jae
adc
int3
inc
add
and
sar
adc
shl
fldenv
scas
fldcw
jmp
dec
jae
add
jle
in
ins
push
pop
and
fst
xchg
sbb
mov
inc
aas
outs
cmp
mov
std
pop
push
sbb
jbe
shl
dec
pop
pop
hlt
adc
mov
xchg
cmc
jp
push
dec
cli
cdq
mov
sub
or
int3
les
sub
and
mov
popa
dec
adc
mov
clc
fnstcw
fwait
pop
iret
stos
enter
stc
xchg
bnd
and
mov
xlat
std
adc
ss
iret
icebp
mov
inc
mov
sbb
out
fstp
mov
pop
lock
jae
outs
pop
call
sti
loopne
in
arpl
pushf
bound
dec
call
cmp
dec
daa
das
ins
adc
sub
sub
cwde
push
xchg
and
std
sbb
and
js
cmps
fldcw
outs
dec
fdivp
mov
rcl
inc
into
mov
xlat
fnstsw
bound
sbb
sub
xchg
nop
jno
add
retf
scas
mov
jb
or
int
(bad)
ret
mov
dec
push
ja
inc
mov
or
cmp
and
pop
je
test
sub
sbb
add
pop
dec
ja
add
push
lods
xor
or
dec
enter
ret
inc
sbb
xchg
push
pop
cs
mov
sahf
sbb
mov
cli
das
sbb
pop
retf
mul
dec
into
push
jp
mov
dec
clc
(bad)
rcr
pop
push
std
sbb
fidivr
stc
xchg
ins
lds
jmp
mov
push
retf
jge
ins
jl
or
jl
inc
adc
pop
jne
sbb
js
out
imul
dec
shr
div
xor
icebp
nop
sbb
jmp
ret
gs
mov
test
out
mov
pop
add
in
push
mov
jp
mov
mov
lods
jno
loop
retf
nop
loopne
add
call
cmps
dec
jg
cmp
sbb
inc
in
xchg
sbb
mov
mov
mov
lds
leave
test
cld
cld
hlt
xchg
imul
rcr
and
js
sar
push
or
xor
adc
cld
addr16
push
cmp
js
sbb
(bad)
aad
or
ins
movs
mov
popf
loopne
dec
push
mov
sbb
jg
loopne
push
mov
sbb
or
stos
in
jmp
inc
mov
and
cmp
or
push
adc
xor
or
jno
mov
sbb
aaa
jmp
push
aad
push
dec
les
fldenv
pop
pop
add
vpcmpeqd
push
das
(bad)
add
fbstp
dec
inc
shl
inc
sub
into
in
dec
mov
rcl
push
rdpmc
aaa
out
iret
int
add
xchg
mov
mov
test
sti
mov
daa
mov
js
(bad)
outs
in
outs
sti
jns
and
dec
adc
or
fidivr
inc
call
xchg
fs
scas
fdivr
nop
mov
cmps
pop
stos
scas
mov
inc
mov
mov
jmp
add
push
or
call
cmp
adc
fdiv
stos
add
and
jnp
(bad)
xor
rcl
mov
fdivp
loopne
adc
cld
imul
pop
xchg
(bad)
push
cld
data16
cmp
rcr
icebp
xchg
or
sbb
jmp
xor
pop
retf
stos
fs
xchg
dec
mov
push
cdq
dec
ins
or
stos
push
adc
pusha
sahf
cmp
addr16
xor
xlat
jp
repnz
daa
popf
cmp
jno
xlat
jp
lods
mov
jns
out
out
aam
mov
add
ins
js
rcr
add
cmps
shl
mov
clc
jg
sub
cmp
pop
cwde
inc
(bad)
or
dec
dec
xchg
sub
dec
pop
and
xchg
cwde
cmp
adc
sub
addr16
sbb
mov
fadd
hlt
jb
loopne
push
adc
pop
adc
retf
dec
ss
ins
stos
scas
cmp
icebp
popa
or
test
dec
js
cmp
movs
fstp
retf
xlat
and
pop
pop
mov
sub
dec
je
cmp
jmp
lock
sub
push
mov
xchg
add
or
mov
push
cmc
cs
hlt
mov
mov
dec
mov
dec
push
sub
or
push
sbb
daa
outs
xchg
inc
mov
pop
ins
outs
xlat
seto
sahf
rcl
xor
es
(bad)
icebp
inc
or
loop
sub
(bad)
sub
sar
cmp
mov
repnz
repnz
pop
push
movs
sbb
hlt
je
je
or
scas
adc
or
pop
neg
xor
rcl
ds
add
cmps
xlat
test
lods
mov
fisubr
mov
push
jb
fisubr
mov
pop
imul
jecxz
into
rol
aam
stos
out
sub
and
add
stc
jp
sti
mov
inc
ja
push
fidivr
push
sub
not
lahf
dec
movq
outs
(bad)
daa
push
call
es
sahf
xchg
inc
call
lods
push
jmp
mov
into
fsubr
sbb
iret
imul
sbb
dec
int
xchg
push
rcl
retf
sub
inc
mov
xchg
fcom
cdq
loopne
pop
(bad)
mov
and
add
shl
xchg
push
sti
test
dec
mov
mov
out
imul
xor
xor
rol
dec
cwde
ret
or
fwait
pop
fwait
mov
jae
or
push
add
and
pop
sbb
adc
dec
mov
add
xchg
iret
xchg
push
(bad)
adc
in
dec
and
iret
push
test
test
or
xor
inc
sub
ret
lods
mov
dec
jmp
int
das
jmp
mov
mov
jl
jno
addr16
push
loop
loopne
push
mov
jecxz
stc
dec
imul
pushf
and
sbb
in
fwait
dec
mov
pop
add
jge
mov
mov
adc
imul
dec
push
js
xchg
cmp
and
imul
ins
sub
mov
je
inc
xor
pop
cmp
sub
inc
out
add
mov
dec
cmp
ins
xor
pop
dec
push
pop
xor
inc
sub
xchg
mov
jecxz
jl
push
hlt
and
sub
scas
sub
mov
inc
push
(bad)
jb
inc
pusha
in
jg
inc
sub
cdq
lods
in
mov
cmp
cli
and
repnz
push
arpl
jge
xchg
mov
daa
or
xlat
lds
cmp
imul
aaa
jg
push
stc
ret
icebp
mov
in
sti
fs
dec
cmp
sbb
dec
mov
aad
popa
lahf
test
int3
dec
repz
jnp
fidiv
xchg
enter
ins
(bad)
out
push
outs
xor
add
clc
int3
add
sti
lods
xlat
popf
mov
into
outs
les
retf
repnz
data16
jbe
imul
lahf
pop
out
jno
pop
cmp
shl
or
stos
imul
in
push
dec
sub
jmp
mov
sub
mov
mov
xchg
and
and
push
sub
jb
loope
ret
and
lock
leave
aam
cmp
scas
fcmovnu
sub
xor
cli
sbb
ins
mov
sbb
out
aad
mov
add
push
push
push
sbb
outs
int3
mov
jne
dec
daa
xor
pop
mov
cli
not
xchg
gs
(bad)
fistp
ins
je
mov
jae
fist
mov
leave
add
jecxz
in
mov
jb
adc
popf
hlt
and
shr
fcomp
pop
lock
scas
pop
xor
xor
mov
jbe
inc
sbb
ret
fucomip
fnsave
mov
iret
dec
pop
js
mov
sub
cs
sbb
jno
call
stos
cmp
shr
mov
int
nop
inc
call
push
test
mov
pop
pop
lahf
mov
fidivr
and
jbe
jge
or
cs
sbb
mov
mov
adc
dec
and
lea
xor
clc
jg
or
xor
or
ins
jecxz
ror
leave
xor
jmp
adc
add
xchg
daa
rcl
(bad)
movs
mov
mov
mov
data16
sub
test
pop
mov
jmp
sbb
inc
mov
mov
sbb
pushf
imul
or
test
mov
stos
xchg
add
lea
pop
sub
push
fdivr
pop
addr16
jns
aam
push
hlt
imul
sub
pop
xor
dec
add
outs
sbb
cmp
cmp
mov
push
sub
test
jno
scas
int3
jge
ja
pop
or
push
add
push
jmp
cmp
lds
sahf
jle
lods
mov
(bad)
sti
enter
lock
mov
iret
dec
add
pop
jb
cs
push
xor
(bad)
lock
mov
mov
in
jbe
inc
mov
pop
inc
call
les
outs
add
xchg
aas
test
pop
loop
push
jecxz
adc
leave
js
mov
push
inc
jns
push
stc
ja
ja
mov
and
xchg
out
sbb
mov
pop
xor
adc
push
loop
mov
aad
test
push
pop
and
sti
ja
jmp
dec
xor
inc
cmps
lds
nop
(bad)
cs
cmc
sbb
xchg
dec
test
push
mov
and
jge
clc
pusha
iret
(bad)
cmc
int3
and
xchg
xor
out
fild
pop
aas
js
fsub
into
mov
neg
jne
xchg
lahf
dec
leave
inc
jp
movs
arpl
(bad)
adc
das
fs
and
adc
shr
adc
test
jns
pop
mov
xor
mov
or
mov
mov
mov
scas
xchg
lods
xchg
add
and
add
in
lds
(bad)
jno
mov
bndldx
xchg
or
call
arpl
xchg
cmp
and
popa
lea
scas
fisub
out
mov
aad
dec
mov
adc
leave
sub
les
in
push
pop
pop
movs
out
push
popa
call
fistp
repz
push
(bad)
xchg
mul
mov
mov
es
mov
outs
mov
inc
push
mov
shl
call
arpl
test
mov
cdq
push
fidiv
xor
and
mov
inc
pop
and
cdq
inc
arpl
and
repnz
call
sbb
dec
sbb
pop
stos
loope
sbb
sub
into
das
fild
sub
jnp
repnz
scas
out
(bad)
mov
enter
stc
mov
out
ret
call
aad
call
loop
cmp
sub
aas
dec
mov
movs
mov
mov
jae
sub
or
imul
sub
push
test
push
xor
inc
xor
dec
pop
ret
sub
test
fcomip
dec
jp
into
jmp
inc
cmp
jmp
iret
repz
pop
outs
(bad)
mov
jge
lods
lock
mov
aad
adc
and
fcmovbe
sub
dec
cld
pusha
cmp
(bad)
push
xlat
push
mov
dec
inc
sar
push
push
rcr
repnz
sub
ds
imul
call
or
ins
push
mov
popa
adc
leave
aad
rol
(bad)
mov
call
adc
scas
cmp
mov
fidiv
in
mov
cmp
mov
aad
or
pop
and
outs
fdiv
daa
sbb
(bad)
cmp
addr16
cmp
fisttp
imul
sbb
mov
push
cmp
dec
adc
and
push
sub
fs
and
outs
in
fmul
sbb
pop
pop
and
jns
arpl
mov
cmp
ret
push
xchg
sub
adc
test
popf
mov
lods
xchg
push
in
aam
out
scas
test
adc
movs
jmp
pusha
(bad)
jb
cdq
lea
xchg
arpl
ss
inc
inc
test
add
mov
ins
ins
dec
fdivr
or
js
lods
mov
fisubr
ja
inc
sub
add
aam
or
inc
and
add
data16
sub
pop
aaa
mov
test
adc
mov
test
(bad)
sbb
loop
sbb
and
pop
fs
pop
cmp
push
sub
mov
mov
dec
jg
leave
push
sub
dec
mov
and
mov
inc
inc
xor
mov
mov
sub
xor
pop
sub
jle
(bad)
adc
mov
hlt
or
mov
push
inc
in
mov
fld
jo
in
jle
cmps
add
mov
repnz
mov
rcr
push
in
cdq
mov
pop
movs
rol
xor
add
push
cmp
xor
dec
add
mov
cmp
fmul
mov
and
jbe
add
xor
in
dec
push
xchg
popa
inc
inc
lds
xchg
dec
mov
sbb
pop
push
mov
repnz
push
shl
aaa
pop
sub
adc
es
shl
adc
inc
push
adc
les
lea
dec
fdiv
mov
std
loopne
pop
adc
ret
sub
(bad)
or
or
rcl
and
enter
aad
(bad)
sbb
inc
jecxz
inc
test
nop
sti
es
clc
jle
dec
dec
jnp
ins
out
or
and
xor
dec
cmp
inc
add
fcmovb
xchg
cmp
inc
mov
hlt
mov
es
adc
sub
dec
pop
int
adc
int3
cli
test
imul
hlt
xchg
pop
xlat
dec
adc
cmps
sti
and
out
cmp
sbb
loopne
xor
loopne
dec
cmp
sbb
test
mov
mov
xchg
sbb
xor
pop
bound
outs
aas
outs
xor
in
pop
push
jmp
jnp
xor
je
mul
pop
adc
mov
outs
in
pop
pop
jmp
mov
sbb
or
stos
jbe
jae
out
xchg
pop
jae
cmp
mov
push
adc
jmp
and
push
bound
cwde
cmp
test
pop
sub
(bad)
pop
add
cmp
push
xor
sbb
rcl
mov
(bad)
div
dec
xor
loopne
cmp
adc
dec
dec
cmp
dec
jo
xchg
ret
enter
int3
popf
sub
dec
into
push
and
pop
(bad)
nop
pop
xchg
adc
pop
push
mov
mov
xchg
pusha
out
cmp
sub
les
repnz
push
add
rcr
jbe
inc
loope
mov
adc
or
gs
jmp
mov
aas
sub
mov
and
mov
test
call
(bad)
add
je
nop
and
ret
jo
nop
cmp
adc
stos
mov
into
add
jb
fbld
imul
iret
aaa
xchg
(bad)
mov
inc
xor
movs
cwde
or
es
jns
push
pop
pop
push
dec
sub
inc
shl
js
inc
daa
inc
sbb
xor
inc
cmp
les
ins
pop
mov
add
cmp
stc
jnp
jmp
call
out
xlat
cmps
push
inc
xor
lods
cld
sti
dec
movs
cmp
cmovns
mov
leave
daa
(bad)
dec
lods
int
psrad
add
xchg
mov
fsubr
pop
mov
enter
or
popf
shl
(bad)
dec
gs
call
out
inc
push
aam
or
and
(bad)
pop
(bad)
movs
inc
inc
or
push
scas
enter
or
enter
sub
sub
push
imul
sbb
pop
mov
movs
loop
adc
cmp
jl
fldcw
es
imul
pop
push
jb
fcom
ret
stos
gs
aam
pop
inc
shl
mov
xchg
(bad)
mov
imul
pop
dec
mov
call
aam
div
mov
adc
mov
or
mov
adc
mov
pop
and
jb
fsub
dec
add
mov
dec
mov
loopne
rol
jg
xchg
dec
sbb
setno
mov
jle
mov
jmp
xor
push
jmp
in
iret
cmc
(bad)
mov
jae
cmp
das
sbb
adc
mov
(bad)
mov
dec
inc
pop
xor
add
pop
(bad)
jb
retf
inc
mov
gs
inc
shl
clc
and
cli
les
inc
mov
xor
add
clc
dec
dec
inc
imul
je
xchg
push
mov
ret
adc
loope
or
shl
mov
mov
cmp
pop
xor
mov
adc
fild
push
sbb
jns
inc
pop
adc
std
(bad)
test
dec
test
pop
mov
push
xchg
dec
and
js
push
fcmovbe
mov
cli
loopne
sbb
jecxz
retf
cwde
add
(bad)
xor
jl
xchg
mov
add
adc
call
jg
dec
cmp
mov
arpl
sbb
std
inc
mov
int
xchg
ret
movs
mov
push
push
in
cli
sahf
scas
lds
leave
mov
adc
mov
mov
add
cs
fimul
out
sbb
mov
or
pop
pop
or
std
and
pop
adc
enter
nop
adc
outs
je
arpl
cmp
xor
fcmovnb
pop
or
stos
cmc
nop
icebp
or
rcl
pop
cmc
shl
not
dec
add
xor
sub
mov
inc
stos
jne
ffreep
pop
adc
stos
and
mov
or
mov
xchg
ins
or
js
add
aaa
iretw
repnz
sub
xor
push
xlat
pop
and
mov
jne
add
inc
jo
mov
mov
inc
in
aad
or
inc
mov
add
pop
rcl
jp
dec
retf
push
loop
in
popf
in
imul
test
push
xchg
xor
adc
popa
jo
sbb
inc
outs
leavew
leave
inc
jbe
cmp
pop
and
inc
pusha
jne
sub
jno
ins
adc
add
bound
retf
mov
mov
or
jbe
stos
sbb
pop
jne
scas
cmp
jb
imul
pop
out
aam
clc
mov
push
call
sub
jp
and
icebp
inc
cwde
repnz
in
inc
sbb
je
adc
add
ss
retf
addr16
adc
in
js
mov
test
lock
xchg
test
cld
test
retf
call
dec
aaa
fs
cld
loope
lea
adc
sbb
push
mov
arpl
push
lea
xchg
lahf
sub
dec
icebp
push
add
inc
jae
xchg
dec
fstp
push
inc
jno
sbb
jmp
pop
es
inc
pop
sar
retf
mov
add
sar
xor
add
pop
cmp
ret
jg
sar
sub
loop
popf
sbb
lahf
lea
(bad)
pop
xchg
pop
pop
ss
arpl
loopne
and
mov
push
mov
xor
or
cwde
js
xchg
cwde
mov
dec
loope
pop
(bad)
cld
cld
std
(bad)
cwde
mov
jmp
sub
shl
nop
mov
push
cmp
sti
loopne
mov
lds
popa
pop
mov
jl
and
inc
xor
push
dec
imul
icebp
ins
and
and
push
jg
aas
into
enter
enter
xor
(bad)
pop
bound
sti
adc
jne
into
pop
and
xor
sti
xlat
cmp
std
movs
jb
std
jnp
fsub
xchg
mov
mov
cmc
sub
or
or
mov
xchg
xchg
fs
adc
jae
or
aas
call
jno
(bad)
popf
icebp
test
rcl
popa
out
cmc
adc
and
in
movs
es
shl
shr
xchg
iret
cmp
retf
cli
cld
ja
xchg
cmps
pop
movs
dec
xchg
jnp
ficom
xor
xchg
xchg
xor
or
lahf
dec
xor
inc
push
shr
jbe
dec
add
sub
sbb
loope
pusha
inc
xor
push
mov
aam
mov
mov
and
fisub
je
mov
daa
jo
in
(bad)
jae
je
sbb
mov
dec
adc
xor
dec
sahf
dec
scas
or
xor
push
stos
sub
test
idiv
xor
dec
in
jbe
nop
push
dec
mov
jle
loopne
mov
out
fidiv
fisubr
rcl
pushf
xchg
push
lahf
adc
adc
mov
push
ins
daa
and
mov
jge
xor
and
(bad)
clc
cdq
retf
adc
in
add
or
into
jle
test
vcmppd
es
test
pop
icebp
scas
(bad)
in
jae
leave
lods
int
les
mov
cmp
jbe
jb
jb
out
sbb
(bad)
mov
cdq
adc
pop
ss
pop
cld
dec
mov
arpl
into
sbb
retf
pop
mov
rol
ret
mov
mov
gs
and
pop
or
pop
jbe
out
sub
inc
std
stos
mov
test
out
in
dec
retf
mov
push
push
mov
xor
xchg
int
and
xor
jg
sub
(bad)
and
imul
shl
(bad)
loopne
leave
xor
(bad)
xchg
jecxz
addr16
dec
out
or
xchg
cld
jmp
mov
mov
push
mov
pop
xor
aam
lahf
in
add
pop
xchg
mov
xchg
mov
addr16
imul
cwde
mov
jle
mov
loope
push
je
mov
push
test
mov
sbb
(bad)
fisubr
mov
(bad)
js
enter
rol
or
fnstenv
ja
sub
les
mov
outs
pop
dec
sar
mov
fwait
lods
pop
ret
mov
jmp
stc
sbb
jmp
jb
mov
jo
fidiv
(bad)
retf
pushf
cmps
nop
rcl
cmp
fidivr
test
mov
out
in
dec
cdq
dec
or
int3
mov
dec
enter
and
xchg
jne
sbb
rcr
fcmovbe
xor
ret
sbb
les
test
mov
fwait
rcl
ss
(bad)
dec
call
retf
and
sbb
jecxz
mov
in
mov
sub
in
imul
sbb
add
inc
fmul
xor
lods
dec
in
inc
xchg
repz
xor
dec
sahf
mov
inc
repnz
fwait
inc
outs
or
xchg
cmp
sub
out
cmp
mov
inc
adc
in
pop
cmp
mov
(bad)
sti
cmps
mov
ins
xchg
out
dec
push
stc
cmp
and
out
jecxz
or
aam
push
mov
push
fisub
dec
jl
mov
sub
loope
and
loope
mov
js
jno
and
xchg
or
dec
xchg
call
ret
fnsave
nop
test
out
(bad)
mov
(bad)
cld
cmps
shl
pop
dec
or
ror
inc
call
xchg
add
bound
xchg
aad
mov
dec
out
popf
jo
mov
cld
popa
mov
jns
hlt
sub
stos
cmc
pop
xchg
push
in
in
jno
call
out
push
add
add
cli
mov
shl
ficom
scas
inc
pop
stos
xchg
xchg
or
ficomp
mov
and
adc
mov
std
iret
jl
and
dec
mov
jmp
popa
addr16
dec
adc
movs
mov
loop
xor
fidiv
hlt
out
and
aas
sub
scas
sub
sub
sbb
cmp
xor
xchg
imul
retf
push
aad
jmp
jp
pop
adc
popf
shr
scas
and
ret
aas
fild
pop
jecxz
js
push
add
push
bound
(bad)
scas
adc
jmp
dec
mov
mov
repz
retf
pushf
push
push
mov
mov
leave
inc
mov
or
iret
mov
cmp
jecxz
or
je
dec
add
jp
sub
and
and
adc
out
icebp
dec
sbb
in
mov
loope
pop
scas
adc
(bad)
push
push
stc
adc
push
push
mov
imul
pop
rcr
add
movs
jo
sbb
stc
repnz
arpl
cmp
(bad)
xchg
mov
mov
int3
and
daa
in
or
adc
pop
cmp
jp
in
sar
ds
sub
aaa
loopne
in
arpl
jbe
pop
or
mov
cli
xchg
push
hlt
imul
mov
sar
mov
loop
xchg
ret
out
and
lods
out
add
(bad)
inc
mov
pop
cmc
(bad)
ss
xor
rol
jns
dec
(bad)
mov
xchg
enter
jp
jno
mov
aaa
add
data16
dec
adc
cmp
cmp
dec
ins
add
mov
mov
adc
enter
(bad)
retf
movs
push
daa
scas
dec
dec
repz
dec
mov
mov
sbb
mov
cmp
mov
add
cmp
dec
push
cwde
clc
xor
test
mov
sbb
sub
inc
xor
leave
jbe
jnp
fistp
cdq
cmp
xchg
jne
or
icebp
loopne
or
out
jns
imul
mov
pop
dec
push
gs
aas
and
lock
fwait
in
js
aad
xchg
out
test
mov
pop
inc
stos
xchg
mov
ins
jns
or
inc
mov
mov
dec
mov
pop
out
dec
(bad)
or
shl
rcr
mov
ror
xchg
adc
pop
call
jl
dec
scas
stos
push
push
jo
mov
icebp
pop
shl
push
fbld
test
imul
add
pusha
jno
add
dec
call
ja
cld
sbb
pop
add
pop
shl
adc
(bad)
fld
push
daa
pop
inc
mov
push
jns
ins
rcr
leave
movs
xchg
hlt
jo
mov
jecxz
(bad)
and
inc
push
push
cmps
pusha
jecxz
mov
inc
cli
pop
in
xchg
or
mov
sbb
or
or
inc
xlat
test
pop
xchg
scas
and
pop
sub
loope
fst
cmc
leave
push
xor
push
je
dec
cmp
lahf
scas
mov
das
xchg
hlt
lods
outs
jecxz
xor
retf
shr
loopne
test
pushf
push
pusha
cmp
xchg
and
lods
cmc
movs
sub
sub
and
and
cmc
pop
add
fidiv
pusha
fld
in
call
pop
adc
call
xchg
and
mov
sahf
lods
jo
or
fwait
and
jmp
(bad)
jns
mov
cmp
cmp
scas
mov
jle
inc
cmc
iret
rcl
dec
mov
dec
ror
test
and
out
mov
ins
scas
dec
cwde
and
mov
in
jge
push
pop
adc
inc
adc
fisubr
cwde
ja
add
scas
mov
jg
push
out
clc
nop
mov
fstp
test
sub
adc
nop
punpckhdq
cmp
jge
push
inc
sti
inc
in
add
jns
call
fisubr
dec
and
sbb
sbb
nop
test
out
mov
add
fisubr
adc
mov
enter
jmp
sbb
test
lahf
sub
cmps
outs
pop
aas
xor
iret
(bad)
xor
dec
or
or
jecxz
push
and
xchg
sbb
mov
lods
jne
xchg
std
aam
mov
outs
je
cmp
mov
sub
mov
dec
enter
add
push
iret
loope
shl
cmp
inc
cmps
lds
pop
das
addr16
imul
je
or
xor
sub
out
mov
or
push
shr
pop
and
minps
mov
inc
pushf
dec
repnz
bound
jbe
shl
fwait
add
cmp
test
or
ja
or
lock
jg
jg
imul
fadd
and
icebp
mov
dec
dec
sbb
xchg
dec
sub
fmul
push
aas
add
add
mov
scas
stc
fwait
in
push
shr
pop
stos
mul
daa
or
xchg
nop
push
push
mov
sbb
stos
out
pop
push
out
unpcklps
push
gs
(bad)
cmc
into
inc
mov
fild
inc
cmp
push
push
cdq
pusha
stos
mov
bound
or
cmp
shl
mov
adc
fiadd
invd
mov
aas
es
xchg
fdiv
and
(bad)
fst
stos
dec
mov
cmp
fst
cmp
mov
adc
pop
addr16
mov
or
mov
lea
cmp
xor
lods
(bad)
mov
jne
cmp
movs
int
mov
mov
or
xor
stos
xchg
dec
arpl
addr16
lea
dec
aam
lds
push
rol
sbb
into
scas
add
outs
lahf
and
adc
xchg
(bad)
iret
push
icebp
jae
mov
dec
cmps
dec
repz
sar
loopne
xchg
jg
jmp
cmps
fstp
cmp
pop
sbb
cmp
ss
mov
sti
or
movs
aas
test
xchg
popa
and
iret
std
scas
int3
fdivr
daa
mov
jb
mov
mov
mov
xchg
jb
fisttp
xchg
inc
stos
adc
(bad)
mov
and
outs
cmp
lods
ja
push
mov
jnp
xchg
mov
push
dec
xor
idiv
out
or
pop
jp
pop
sbb
jno
jle
push
mov
push
(bad)
fsub
iret
sti
xchg
dec
out
mov
call
daa
adc
call
inc
push
adc
call
mov
dec
xchg
push
rcl
push
jbe
iret
push
mov
sahf
mov
(bad)
or
aaa
imul
ret
ret
mov
jmp
lods
or
hlt
imul
pop
(bad)
imul
mov
pop
inc
sar
inc
leave
push
jle
daa
jb
and
mov
cmc
sbb
pop
xor
hlt
sbb
mov
hlt
pop
jmp
movs
je
es
xchg
outs
nop
je
mov
cwde
jmp
stos
push
int
int
push
cmps
xchg
mov
pop
jle
cwde
movs
mov
cmps
addps
or
out
daa
mov
adc
or
and
int
in
ins
xor
add
ins
fdiv
frstor
icebp
push
xchg
mov
imul
sbb
push
in
pop
mov
sbb
cwde
pcmpeqw
cli
sub
push
test
out
mov
mov
loope
push
mov
jnp
not
pop
adc
sub
jp
jg
ja
push
pushf
retf
ret
push
sub
out
xor
sub
test
sbb
xor
sbb
movs
push
cmc
addr16
out
sub
or
pop
mov
mov
fld
dec
ret
addr16
sbb
pop
mov
push
fidiv
jmp
test
inc
xchg
leave
pop
mov
pop
mov
or
mov
add
pop
fisttp
pusha
add
push
sbb
lahf
fs
mov
and
ret
in
fwait
or
(bad)
jns
out
mov
test
cs
les
cmps
jmp
and
or
jmp
jne
mov
sbb
mov
push
pop
and
mov
fldcw
sbb
repnz
add
hlt
pop
in
and
mov
xor
outs
icebp
repz
pop
add
xchg
adc
sbb
pop
stos
xor
jns
mov
pusha
aad
imul
pop
xchg
fstp
inc
outs
imul
xor
jmp
sbb
rol
pop
push
mov
popf
pop
cmp
test
inc
scas
dec
xor
jnp
pop
push
popf
lods
pop
arpl
adc
mov
fnstsw
jmp
cmp
retf
cdq
inc
push
aad
repz
adc
fistp
and
mov
jno
inc
add
(bad)
sbb
addr16
pop
fisub
mov
je
lds
pop
(bad)
add
or
les
test
popa
shr
xor
shr
or
outs
sbb
pop
stos
inc
mov
add
inc
cmp
jmp
and
push
mov
or
mov
pop
inc
stos
mov
jge
inc
ins
enter
shl
mov
push
jbe
mov
mov
cmp
out
push
and
loopne
call
add
add
fdivr
(bad)
pop
or
cmps
test
cmps
(bad)
sahf
shr
ja
aad
and
push
stos
xor
mov
pushf
aad
lods
repz
imul
stos
test
(bad)
sbb
imul
adc
jbe
cld
sbb
imul
scas
out
xor
out
imul
fdivrp
mov
mov
mov
icebp
inc
dec
aas
mov
test
fs
xchg
mov
push
call
test
outs
adc
cmp
aad
xor
mov
dec
movs
or
mov
cdq
sar
gs
jmp
mov
call
shr
in
push
xor
inc
or
inc
(bad)
stos
jl
repnz
cmp
adc
jno
ss
pop
inc
push
imul
fisub
cmc
stc
fisubr
add
call
stos
cwde
lea
mov
jmp
jmp
jmp
(bad)
mov
addr16
jmp
iret
xchg
inc
stos
mov
xchg
mov
mov
imul
icebp
iret
movs
xor
mov
ss
pop
adc
mov
scas
xchg
pushf
xlat
hlt
cmp
inc
movs
push
mov
inc
aas
add
pop
dec
jno
nop
push
aas
jno
and
dec
popf
(bad)
xor
mov
int
jge
and
out
adc
out
retf
push
sbb
mov
test
out
push
retf
rol
add
sub
push
mov
mov
xchg
out
sbb
or
adc
rcl
fstp
(bad)
(bad)
mov
fcomp
ret
or
daa
push
int3
cmp
pop
mov
jo
or
dec
or
push
push
add
jo
or
mov
stos
mov
repz
imul
rcl
mov
and
pop
pop
add
pop
dec
std
loop
test
mov
fldcw
loopne
retf
mov
icebp
dec
jo
test
test
pusha
test
and
pop
sbb
out
push
cmp
pop
mov
push
xor
dec
sbb
sub
out
cmps
ins
call
in
or
push
sbb
sar
mov
test
sbb
lahf
outs
jmp
adc
ds
fidiv
mov
stos
xor
rcr
pop
ja
js
das
mov
add
das
ret
mov
xchg
or
xchg
icebp
lods
cmp
push
rol
mov
fcomp
xor
movs
dec
outs
pop
jb
adc
inc
cmc
push
cmp
pop
push
ret
dec
xchg
aaa
lds
call
add
popa
xor
test
cli
xchg
in
scas
push
push
lods
arpl
das
sub
jns
in
mov
pop
push
fwait
adc
stos
sub
jg
mov
push
xchg
dec
push
fcmovne
shl
xor
jl
or
into
test
out
jne
sar
cwde
test
xchg
push
nop
out
push
jb
outs
mov
sahf
popa
fwait
outs
lods
(bad)
iret
sbb
jae
pusha
cmp
push
inc
mov
cmp
test
pop
ja
call
inc
add
xor
imul
sti
mov
mov
test
jno
sub
push
push
int3
push
cdq
aam
jb
hlt
(bad)
stos
inc
ds
test
cmp
lock
push
or
loop
xor
cmp
ja
mov
mov
aas
dec
(bad)
test
xor
adc
das
push
popa
xchg
das
mov
out
test
ins
adc
lea
xchg
mov
out
or
adc
mov
push
ss
pop
outs
call
jmp
sub
pushf
sub
sub
test
xchg
cmp
ins
daa
shl
in
dec
pop
add
loopne
jae
ins
int3
jecxz
xlat
leave
out
and
jne
test
and
sub
pusha
(bad)
popa
in
add
mov
rol
and
(bad)
adc
xchg
mov
mov
and
leave
and
adc
outs
adc
or
push
mov
arpl
push
inc
fld
jmp
push
cmps
mov
cwde
mov
retf
push
jp
popa
movs
dec
fisttp
inc
fsub
std
mov
mov
outs
xchg
imul
mov
or
loopne
add
lods
sti
adc
mov
xchg
pushf
mov
mul
adc
data16
out
add
pusha
xchg
mov
pminub
cmp
xchg
ja
adc
out
(bad)
sub
je
xlat
push
aas
fst
aaa
or
enter
cwde
lea
jg
aas
shl
movs
aaa
or
cs
and
shl
loop
xchg
(bad)
xor
loopne
xchg
idiv
add
xor
push
sub
jmp
lea
mov
jp
sbb
or
repnz
cmc
cs
les
sub
imul
and
fiadd
xor
out
or
popa
inc
repnz
cmp
int
cli
fs
or
lock
push
cmp
ins
mov
xchg
or
xchg
lahf
sbb
mov
or
std
ins
scas
mov
mov
jb
fcomp
sbb
ja
out
(bad)
mov
dec
ror
pop
jne
int
ds
call
mov
or
std
std
imul
out
pop
je
jmp
jmp
aaa
pop
aas
cmp
mov
and
and
das
jb
jmp
jae
ja
sub
mov
mov
xchg
or
cwde
pop
pop
nop
pop
mov
inc
mov
xchg
pop
test
std
std
jb
inc
xchg
xchg
fdivr
call
cmp
cli
cmp
ins
sbb
loop
nop
inc
test
sub
dec
nop
scas
lea
icebp
pop
sti
xchg
xchg
dec
jmp
and
scas
mov
mov
cmp
iret
int
(bad)
(bad)
frstor
loopne
or
dec
push
xchg
sbb
jno
cwde
push
adc
inc
pop
shl
and
xor
std
movs
sti
push
pop
pushf
xchg
sub
add
jmp
add
aam
(bad)
pop
js
test
and
xchg
dec
lds
scas
ins
cwde
cdq
and
arpl
adc
test
mov
fsub
jmp
mov
add
push
(bad)
fs
cmp
test
jge
lods
cmps
sub
call
push
sbb
lds
pop
sar
je
cmp
jb
add
scas
mov
jecxz
pop
and
cli
in
xor
loope
loope
sub
push
fwait
and
jbe
or
(bad)
iret
das
xchg
mov
sbb
mov
(bad)
pop
jle
daa
pop
lods
pop
push
call
outs
jne
cmp
ins
sub
xchg
mov
jle
inc
in
push
lods
and
test
or
xor
icebp
dec
xchg
mul
popf
in
sahf
mov
mov
mov
sahf
mov
xor
test
jo
cmps
and
std
mov
into
lods
mov
shl
xchg
cmp
fistp
je
lahf
cmp
dec
mov
mov
mov
lods
std
fld
add
mov
pop
ds
(bad)
xchg
cmp
imul
xchg
outs
push
retf
add
call
mul
stos
xchg
xor
or
xchg
leave
push
cmc
pop
out
jg
push
std
sub
in
movs
cmp
push
add
or
icebp
lahf
int3
inc
mov
add
mov
sbb
push
or
rol
push
ja
jb
(bad)
retf
dec
mov
or
dec
ret
mov
ret
mov
out
xchg
rol
imul
retf
out
fwait
pop
call
movs
jae
mov
lods
ret
lar
sub
sub
cmp
lock
and
adc
popa
xchg
test
dec
xor
mov
cwde
cdq
imul
mov
push
sbb
arpl
jbe
cld
or
lahf
jge
or
or
stos
lods
xchg
sbb
aam
call
mov
ins
rcl
inc
call
dec
jb
cmp
dec
push
std
push
or
pushf
data16
mov
inc
call
jns
cmp
es
(bad)
inc
xchg
adc
mov
inc
jno
jg
mov
jl
loope
mov
fld
or
stos
adc
sti
pop
sbb
push
arpl
mov
ret
lahf
dec
pop
scas
mov
fwait
gs
sahf
dec
sahf
icebp
or
inc
dec
aaa
and
mov
adc
jno
jle
xor
lahf
ds
addr16
mov
inc
xor
lea
sub
clc
retf
pop
jae
popa
jle
ins
add
pushf
dec
es
retf
sub
adc
movs
cli
(bad)
iret
or
enter
mov
mov
add
ja
xor
mov
push
daa
lock
jo
jmp
adc
nop
je
(bad)
or
repz
and
dec
mov
sub
mov
lds
adc
fistp
test
xlat
mov
dec
adc
(bad)
mov
sahf
xor
jo
add
sub
lods
push
add
loopne
out
xor
inc
movs
push
rol
push
pusha
dec
rcr
shl
scas
ds
cli
mov
test
mov
loopne
es
pop
inc
sub
imul
movs
mov
(bad)
cmc
add
dec
repz
jbe
sahf
ins
cmp
ins
ror
jl
mov
out
jno
inc
outs
jno
cmp
add
mov
and
test
add
adc
sbb
cmps
mov
(bad)
push
cmp
mov
call
loop
and
les
popa
mov
cmc
bound
mov
pop
iret
cmp
mov
xchg
(bad)
call
shr
loop
mov
pop
fucom
mov
jmp
stc
pop
fwait
shl
mov
add
adc
dec
dec
sub
jnp
pop
rcr
mov
loop
dec
cld
mov
(bad)
dec
lea
cli
ds
ror
iret
int3
pop
mov
inc
repnz
mov
inc
sbb
enter
in
ret
fwait
cdq
adc
je
or
or
imul
ins
mov
mov
push
test
lods
mov
sub
cmp
test
nop
cmp
test
jmp
call
rol
pusha
or
in
std
mov
fsubp
mov
adc
(bad)
jmp
mov
jo
mov
push
(bad)
add
sbb
imul
sbb
push
(bad)
dec
retf
and
into
sub
pop
sub
(bad)
sar
xlat
pop
add
imul
cmp
or
popa
fcmovb
ds
lods
xchg
or
test
das
outs
xor
mov
in
test
sub
hlt
sbb
inc
mov
sbb
shl
and
mov
mov
jae
mov
in
lods
(bad)
addr16
cld
xchg
push
adc
mov
aam
enter
jecxz
test
sub
pop
sub
out
inc
push
arpl
sar
sub
inc
mov
stc
les
pop
pop
cli
(bad)
repz
jecxz
push
int
movs
not
dec
xchg
mov
mov
xchg
(bad)
dec
mov
es
outs
jb
push
push
into
lods
fidivr
fwait
mov
cmp
xchg
dec
pop
je
xor
push
lock
fwait
xor
push
arpl
test
mov
add
jno
nop
sar
push
pop
inc
push
pusha
pop
gs
adc
mov
pop
shl
mov
sti
ins
and
(bad)
mov
sub
mov
mov
push
gs
rol
scas
jo
push
mov
adc
mov
pop
in
mov
mov
jns
les
or
add
mov
xor
stc
xchg
jmp
push
lds
clc
ja
hlt
sahf
test
xchg
stos
add
cli
dec
inc
aam
jmp
pop
(bad)
ror
dec
xor
hlt
fisub
imul
cdq
sbb
or
pop
test
adc
xlat
dec
cmp
cdq
pop
mov
xor
push
or
test
call
pop
mov
dec
in
pusha
cmp
loopne
shr
fcomp
movntps
and
stos
inc
hlt
mov
and
cmp
xchg
mov
popa
addr16
int3
or
pop
stos
push
cmp
push
sbb
mov
jmp
aam
xor
jl
cmp
or
nop
adc
xchg
push
enter
jl
aas
out
imul
movs
sub
retf
fwait
cld
cmc
ffreep
loopne
xchg
sub
mov
pop
adc
cwde
pop
int
scas
sub
cdq
and
retf
mul
in
cmps
shl
inc
mov
pop
movs
arpl
mov
fs
mov
inc
mov
cli
call
jge
std
neg
sbb
adc
or
sub
aam
jb
test
mov
out
add
sub
std
pop
pushf
xor
push
push
pop
mov
pop
dec
mov
(bad)
(bad)
jb
or
pop
popa
out
rol
sub
(bad)
cmp
push
adc
aad
loopne
and
into
mov
(bad)
push
std
mov
rcl
ds
nop
in
adc
xchg
inc
retf
ror
test
out
push
(bad)
ror
(bad)
cld
sub
popf
inc
mov
cmp
inc
je
add
mov
mov
pushf
and
rcl
loope
xor
fptan
outs
sti
fidiv
(bad)
fisttp
out
fwait
cmc
xchg
adc
xor
mov
xchg
jno
push
arpl
fst
in
sub
jbe
adc
imul
retf
pop
cs
daa
hlt
jnp
pop
mov
jg
jl
cmp
ins
movs
ret
pop
push
push
mov
outs
xchg
jmp
cmps
mov
mov
mov
xchg
sub
(bad)
adc
dec
iret
mov
repnz
fmul
dec
mov
sti
out
lds
pop
xchg
xchg
shr
es
adc
mov
movs
ror
inc
mov
jmp
and
mov
out
outs
mov
mov
and
adc
add
dec
and
pop
pusha
outs
popa
in
cmp
xchg
pop
leave
jecxz
pop
(bad)
iret
daa
mov
fmul
stos
inc
stc
arpl
and
pop
bnd
xchg
into
bound
int
outs
dec
std
mov
(bad)
xor
jns
or
mov
out
in
test
fisttp
in
test
lods
aad
sub
ds
and
add
call
dec
cli
fdiv
sahf
lahf
push
push
popa
inc
adc
out
pop
pop
mov
movs
mov
pusha
arpl
clc
inc
aas
sahf
adc
fstp
inc
inc
adc
cmp
test
push
lahf
and
call
bound
sbb
test
fistp
movs
and
dec
add
inc
xor
mov
enter
repnz
xchg
pushf
add
ja
mov
cmp
pop
inc
or
enter
push
mov
sbb
pushf
cwde
mov
sti
rol
pop
je
in
sub
and
iret
add
mov
mov
out
stc
dec
mov
mov
push
cmp
lock
cmp
das
loope
mov
xor
jecxz
xor
(bad)
fstp
mov
out
scas
push
cmp
lds
movs
outs
jbe
stos
sub
mov
sahf
(bad)
(bad)
pop
(bad)
or
scas
sub
mov
jmp
das
(bad)
out
push
adc
sbb
pop
dec
mul
cmps
aaa
fnstenv
mov
sbb
jp
sbb
in
mov
mov
adc
mov
enter
rcl
xchg
aas
neg
lock
aaa
cmp
adc
je
adc
aas
out
mov
pop
sub
fst
push
neg
sub
and
push
push
mov
adc
call
xchg
dec
mov
and
shl
sbb
jns
mov
dec
sub
mov
outs
das
fdivr
fisubr
jnp
call
int
sbb
xlat
inc
(bad)
cdq
leave
push
stos
jg
xchg
ds
dec
adc
pop
add
popa
sbb
lods
pushf
adc
and
(bad)
push
xchg
jp
in
in
sub
jb
ins
cmps
mov
out
jne
push
aam
ror
jg
imul
adc
mov
lea
mov
dec
clc
fcomip
fdivrp
mov
mov
sub
dec
sub
add
fmul
cmp
add
xor
inc
push
mov
adc
mov
mov
jns
add
mov
out
cmp
cdq
cmc
inc
xor
xor
bound
mov
jnp
not
adc
xor
mov
sahf
cmp
mov
shl
pop
int
lock
(bad)
gs
scas
sbb
(bad)
and
mov
sub
sub
ins
push
call
cli
jbe
(bad)
sar
or
mov
enter
adc
jae
cld
xor
push
les
mov
push
xor
pushf
mov
sar
sti
and
push
fs
clc
mov
and
sbb
pushf
stos
adc
xchg
and
popf
iret
mov
loope
clc
add
or
lods
in
lods
sbb
xchg
ja
jno
jle
sub
es
mov
xchg
js
cmp
mov
xor
mov
lods
repz
mov
movs
jb
aad
inc
push
ds
jle
test
leave
sbb
push
pop
ins
add
jb
fwait
aas
add
sbb
dec
(bad)
cmps
push
test
jnp
dec
rcr
mov
cmps
mov
mov
pop
movs
cli
ret
js
repz
lods
addr16
or
clc
jmp
adc
in
ret
inc
aas
loopne
fisubr
repz
inc
dec
cmp
lods
int3
call
sbb
shr
mov
retf
neg
fimul
nop
bound
ffree
sub
stc
mov
scas
and
push
jmp
ret
aam
sbb
adc
dec
push
cmp
adc
imul
out
pop
scas
dec
mov
mov
mov
shl
inc
test
imul
mov
fwait
daa
popf
add
cmps
mov
mov
push
xchg
(bad)
bound
push
ror
mov
mov
or
(bad)
cli
cli
push
adc
inc
xor
and
bound
aaa
aam
test
mov
push
hlt
cwde
jns
mov
jno
(bad)
lds
out
dec
mov
xor
jp
into
mov
movs
dec
stos
test
jnp
inc
idiv
jne
mov
and
push
shl
sub
fnstsw
movs
cdq
sub
xchg
and
repnz
pushf
cmps
xchg
stos
xchg
dec
jae
cli
push
push
cwde
pop
push
aaa
mov
sbb
jmp
lods
fs
scas
and
xchg
aam
push
out
fwait
cmps
or
xchg
imul
push
ror
push
dec
push
jp
xor
cmp
inc
push
jg
and
(bad)
jo
pop
das
inc
adc
lods
push
mov
retf
mov
outs
mov
inc
sub
cmp
fst
cmp
and
outs
mov
(bad)
xlat
cli
cmp
cli
mov
call
cmp
jmp
sbb
int
daa
add
sbb
retf
fdivr
or
lea
out
cmp
dec
push
int3
mov
fsubr
add
jg
mov
pop
add
jnp
jnp
mov
mov
cmp
mov
pop
sub
mov
jnp
imul
stc
repnz
lods
mov
icebp
std
aas
dec
jp
in
pop
mov
aas
inc
repz
hlt
test
pusha
shl
in
mov
xchg
or
or
retf
or
xchg
sar
xchg
push
add
and
pop
mov
test
inc
(bad)
popa
in
clc
repnz
xchg
shr
push
call
punpckhbw
(bad)
retf
add
push
adc
mov
mov
test
jae
out
outs
adc
xor
jmp
sbb
cmp
stc
mov
pop
sub
fdivr
mov
cmp
fwait
push
fsubr
test
mov
ffreep
mov
fisub
xchg
bnd
sbb
pusha
aas
fcmovu
inc
hlt
push
call
xor
(bad)
aad
cmp
jmp
test
sahf
scas
mov
mov
inc
pop
bound
adc
mov
ror
shr
out
add
dec
fs
jmp
aaa
mov
call
scas
aaa
das
xchg
xchg
and
sar
pop
adc
add
fsub
fild
push
in
sbb
jns
mov
cs
cs
inc
hlt
pop
mov
inc
mov
xor
cli
xchg
jecxz
or
jmp
pop
dec
sub
cmps
leave
add
mov
push
icebp
or
sar
xor
jns
fisttp
jno
lock
pusha
mov
shl
mov
jmp
imul
and
dec
(bad)
jg
jns
add
(bad)
sbb
jne
cmc
jae
loope
ror
cmp
imul
addr16
js
push
(bad)
cwde
xchg
push
pop
test
(bad)
into
mov
pop
pop
jp
pop
adc
and
mov
dec
mov
(bad)
rol
pop
mov
or
adc
sub
sahf
jo
fiadd
jno
je
xor
jne
popw
fnstenv
in
mov
call
dec
fisttp
sub
mov
out
inc
fnstcw
adc
jns
std
xchg
add
ins
mov
ins
aaa
das
mov
call
push
sub
inc
aad
xor
push
add
inc
sub
and
or
push
sbb
push
mov
pop
inc
sub
add
ins
or
mov
fdivrp
gs
lods
mov
cmp
jne
and
push
xlat
add
inc
pop
mul
push
outs
sti
call
pop
fwait
jecxz
enter
mov
test
jl
fadd
jg
in
jg
loopne
sub
cwde
(bad)
lock
adc
popa
neg
xor
pushf
call
mov
mov
xchg
loop
mov
(bad)
int
(bad)
lods
rcr
in
lds
push
mov
ins
xchg
ds
std
rcr
rcr
sahf
adc
mov
inc
jg
cmp
out
adc
retf
sbb
xchg
xor
xchg
dec
ror
clc
dec
sub
mov
pop
(bad)
iret
les
lock
add
call
jnp
xor
dec
jg
stc
mov
xor
loope
es
pop
gs
xchg
stos
push
dec
aam
push
ss
sbb
jle
sbb
sbb
push
cmp
push
jo
pop
mov
scas
mov
pusha
adc
call
mov
pushf
mov
fdiv
test
adc
or
pop
aam
lahf
jns
mov
pop
test
arpl
daa
pop
mov
sub
add
dec
cmp
repz
cwde
je
imul
lods
xchg
(bad)
in
ja
xchg
sub
js
mov
jae
repnz
pop
or
push
push
xor
in
add
push
call
rol
mov
adc
ret
push
fnop
in
lods
sahf
mov
xor
enter
mov
cwde
mov
repz
int3
ins
mov
pop
and
sub
les
xchg
outs
arpl
mul
retf
mov
mov
paddq
icebp
aaa
test
fs
retf
shl
dec
(bad)
call
dec
(bad)
cmp
imul
xchg
xchg
jp
jns
cmps
sbb
or
and
cmps
inc
and
or
pop
icebp
call
faddp
or
cmp
or
mov
jle
loopne
fmul
hlt
fucom
fbld
inc
inc
mov
mov
into
jo
icebp
adc
dec
not
mov
adc
pop
adc
(bad)
fisubr
aas
or
sub
pop
pop
adc
cmp
dec
mov
je
xor
call
add
out
push
hlt
test
test
or
into
out
ds
rol
xchg
ss
dec
sbb
pop
xchg
fwait
mov
xor
jb
and
in
xchg
fs
sbb
bound
movs
xchg
mov
mov
stos
scas
out
scas
(bad)
xlat
jb
ss
lods
inc
popf
lahf
add
jb
ins
push
shr
mov
cmp
out
jecxz
(bad)
mov
add
dec
fcmovu
mov
stos
mov
jb
lea
gs
cmc
es
lock
mul
in
dec
or
cmp
sbb
in
daa
jno
xor
lods
sbb
es
loop
mov
push
je
icebp
int3
mov
stos
mov
and
or
es
dec
and
mov
xlat
std
dec
push
sbb
mov
pop
ins
inc
mov
cmp
mov
push
lahf
stos
push
fistp
imul
hlt
ret
test
popa
lahf
and
mov
jnp
nop
or
sar
dec
data16
push
fiadd
in
cld
jns
xor
cmc
pop
xchg
sub
pop
jne
jecxz
mov
push
in
imul
enter
cmp
jae
aam
in
adc
in
adc
cli
dec
or
shl
mov
sub
xor
imul
lock
js
adc
or
ror
and
mov
daa
jl
push
data16
pop
in
cmp
fs
add
dec
push
cmps
cmp
gs
adc
jbe
push
adc
mov
in
imul
(bad)
jnp
mov
xchg
and
push
sub
call
mov
scas
ret
stc
es
mov
dec
(bad)
mov
adc
mov
(bad)
repnz
cmc
aad
adc
bound
adc
std
mov
loope
mov
les
push
fs
data16
adc
cmp
and
jmp
dec
(bad)
cmp
xchg
and
clc
jmp
repz
adc
jecxz
stos
jmp
inc
in
test
sub
inc
inc
movs
cmp
dec
loop
arpl
out
add
cld
push
retf
pop
mov
cli
mov
loope
jge
pop
scas
fcom
add
xchg
sub
xchg
ins
arpl
int
shl
jmp
mov
jl
push
mov
sbb
xchg
jecxz
dec
das
jg
(bad)
cmp
adc
inc
(bad)
js
aaa
cdq
cmp
pop
sub
xor
inc
sar
shr
pop
(bad)
mov
lods
add
(bad)
mov
jge
sub
adc
inc
xchg
loop
push
cmp
fadd
pop
add
cmp
sti
dec
(bad)
test
add
push
dec
mov
add
inc
es
dec
repnz
lods
xlat
sbb
sbb
adc
sbb
and
pop
stc
call
mov
jnp
scas
fcomp
sub
int3
loop
xchg
mov
bound
cmp
mov
enter
dec
cmps
pop
jae
outs
ffreep
xchg
lods
mov
mov
outs
stos
add
xor
sub
and
ret
icebp
xchg
faddp
pop
dec
cmp
cmps
mov
idiv
fild
xchg
xor
neg
in
push
imul
jbe
(bad)
in
hlt
cdq
into
xor
jo
mov
int3
jmp
pop
test
int3
xchg
xchg
jae
push
cmc
xchg
and
arpl
sub
mov
mov
xchg
xchg
and
fadd
sub
jecxz
ins
lea
mov
mov
stc
in
mov
xor
xchg
ds
add
fdivr
or
push
adc
dec
cmp
(bad)
and
mov
test
dec
sbb
sub
jmp
jg
pop
in
cmp
cdq
dec
lods
les
mov
(bad)
fwait
lods
mov
jnp
movs
xor
lods
or
jnp
jp
mov
scas
fisttp
sub
or
inc
cli
sar
jge
pop
sbb
fs
fisttp
ret
jb
(bad)
popa
aad
shr
sbb
or
(bad)
sbb
js
mov
jae
cmp
ds
loope
xchg
xor
cwde
and
or
movs
rcl
jno
scas
sar
cmp
pop
out
adc
das
cmp
dec
out
mov
jbe
xchg
in
stos
sub
xchg
adc
mov
xchg
mov
ja
mov
fld
or
xor
lods
in
cwde
leave
adc
out
and
xor
outs
mov
push
adc
xchg
rdmsr
inc
loope
jb
and
mov
sub
xor
lock
mov
mov
or
adc
fcmovnbe
fdivp
pop
sti
push
jg
jl
dec
aam
sbb
fld
ins
test
je
mov
jp
jae
jno
ret
ror
les
adc
ins
xor
loop
out
jae
out
xchg
fwait
push
shl
mov
int3
dec
rcl
mov
sbb
loop
test
in
mov
icebp
push
jb
mov
xchg
jbe
add
out
jae
and
cmc
retf
push
xchg
aaa
xchg
push
or
test
xchg
cdq
cmp
sahf
popf
ret
mov
inc
call
xor
not
push
dec
push
sub
loope
push
push
iret
cmps
push
xor
ins
(bad)
nop
adc
aam
and
jo
fist
add
xor
cmp
jno
inc
mov
inc
fs
push
xchg
addr16
pushf
mov
data16
inc
cmc
retf
cmps
(bad)
fs
sub
std
shl
xchg
(bad)
out
dec
push
inc
mov
jl
inc
or
test
adc
outs
adc
mov
jbe
mov
sti
mov
into
cmp
push
mov
mov
mov
push
mul
jp
cmc
lods
mov
xor
cld
inc
add
std
push
xor
leave
mul
adc
fs
xor
sbb
jne
test
or
cmp
fisttp
mov
sbb
inc
and
nop
into
fsub
adc
pop
xor
imul
jg
ret
icebp
and
gs
(bad)
cmp
xchg
test
sub
out
icebp
out
xor
mov
and
xchg
popf
cdq
push
mov
repz
jns
mov
loopne
xchg
mov
test
inc
push
test
pop
lock
sar
mov
nop
jb
cmp
xchg
or
or
clc
ret
push
nop
and
es
sub
mov
add
and
and
or
pop
pusha
in
cld
jg
push
rol
sub
mov
out
int3
loop
daa
pop
test
or
or
cld
dec
test
sub
out
lods
inc
(bad)
mov
cmc
shl
cwde
inc
bound
cmp
adc
lea
aad
setl
mov
xchg
inc
add
out
xchg
ror
add
call
add
mov
inc
lds
and
fistp
(bad)
sbb
test
scas
cs
pop
jb
fistp
scas
jae
in
or
or
std
dec
iret
xchg
(bad)
jecxz
sbb
nop
cwde
jge
imul
pop
mov
sbb
cld
cmp
and
cmp
xchg
mov
push
push
imul
xchg
jb
mov
mov
cmp
icebp
cmp
mov
arpl
xor
inc
add
lahf
stos
xlat
pop
xchg
dec
pop
(bad)
mov
jmp
mov
and
cmp
mov
xlat
lods
adc
xor
fstp
cli
mov
jae
inc
inc
sub
adc
pop
adc
dec
popf
xlat
pop
sahf
jne
xlat
xor
fdiv
inc
add
sbb
dec
dec
inc
sbb
lock
push
and
in
or
enter
test
dec
xchg
mov
sub
or
cmp
out
ror
adc
popa
add
pop
xchg
dec
cmp
jle
or
popf
movs
jmp
pop
jge
fisub
jmp
cmp
gs
or
es
outs
xor
test
cwde
fmul
fcomp
scas
sar
sbb
imul
push
and
es
add
fwait
bound
dec
(bad)
in
nop
into
pop
push
imul
stos
adc
ror
leave
ds
sahf
fcmovnb
inc
jb
mul
mov
mov
jno
mov
rol
mov
(bad)
gs
add
(bad)
dec
push
adc
cld
test
pop
rcr
jb
daa
shl
jmp
loopne
mov
js
int3
call
(bad)
dec
mov
nop
repnz
enter
pop
jno
ja
jecxz
xor
fidivr
fdivr
cmp
imul
cld
mov
mov
and
adc
xchg
sbb
imul
cmps
stos
sub
jmp
xor
out
out
retf
in
sti
add
sbb
rcl
cs
mov
adc
jbe
retf
rcr
(bad)
out
call
mov
push
adc
cmp
inc
pusha
ja
mov
xchg
dec
je
pop
jae
shl
mov
aas
pop
mul
or
adc
xchg
inc
gs
jmp
lods
addr16
sub
call
pusha
rcr
popf
inc
cmps
ds
dec
fdivr
sbb
das
push
sar
or
ror
loope
das
adc
(bad)
add
jae
xorps
mov
inc
jmp
adc
pop
jno
hlt
sbb
ins
fist
cmp
and
pop
out
icebp
inc
push
lods
or
sub
xchg
mov
sar
dec
or
inc
and
loopne
jo
pop
jmp
jmp
jo
mov
loope
fcomp
aam
mov
(bad)
jne
mov
dec
cmp
lods
inc
pop
scas
cmp
rol
cmp
mov
(bad)
call
fs
test
shr
iret
rcl
int
jne
nop
call
retf
jnp
mov
jmp
push
jns
out
(bad)
mov
ror
xor
test
xor
mov
add
bound
jge
mov
xchg
sbb
imul
pop
jae
cmp
scas
popa
push
pop
and
adc
movs
cdq
int
(bad)
ret
in
dec
aaa
or
sub
je
sub
mov
xchg
clc
fidiv
jp
shl
pop
fcmovb
nop
pop
sbb
sub
sbb
mov
(bad)
jno
adc
mov
movs
cmps
pop
jl
pop
add
fisubr
mov
leave
rcr
out
xchg
test
in
xchg
or
mov
out
fild
lahf
xor
test
inc
dec
jae
cmp
sbb
xchg
rcr
add
cs
cmps
sub
and
jo
nop
sub
push
add
inc
(bad)
pushf
inc
mov
adc
xchg
inc
or
aaa
mov
or
mov
or
mov
in
lds
pop
or
mov
xchg
loope
pop
test
cs
sbb
xor
fimul
mov
out
inc
out
(bad)
pop
mov
mov
xor
adc
add
mov
push
lods
push
dec
dec
and
cwde
mov
push
mov
mov
shl
das
xchg
stos
sbb
cmp
test
pop
mov
loope
in
mov
sub
pop
push
cmps
faddp
bound
movs
push
push
repnz
cmps
or
jmp
mov
mov
cwde
cmps
in
popa
std
adc
(bad)
sub
mov
leave
fucom
(bad)
mov
ins
es
loop
inc
clc
gs
inc
jg
imul
stos
cmps
or
(bad)
sbb
(bad)
pop
adc
push
scas
inc
adc
lods
mov
mov
xchg
retf
xlat
(bad)
xchg
push
push
xchg
(bad)
cmp
jne
jle
cmp
in
inc
scas
and
sti
aaa
arpl
es
xchg
or
iret
jl
add
movs
jae
xlat
xlat
jbe
ins
lahf
push
ffreep
repnz
mov
xchg
lods
and
hlt
out
or
mov
aad
jae
dec
jmp
mov
and
add
call
cmp
jp
gs
mov
sbb
stc
or
sub
cmp
or
clc
cld
sti
std
sub
leave
jo
les
mov
pop
jp
xchg
inc
jb
sar
cwde
pushf
(bad)
shl
das
dec
sbb
shl
repz
dec
(bad)
cmc
outs
pop
gs
push
cld
pop
sbb
inc
mov
dec
xor
das
cli
and
push
std
(bad)
repnz
mov
cdq
lods
jbe
and
cmp
push
gs
jns
daa
cld
jo
std
imul
jb
fnstenv
sbb
jle
and
iret
lahf
dec
inc
aad
push
cmp
dec
js
fmul
icebp
mov
pop
jmp
call
fisubr
out
ja
adc
dec
daa
jecxz
cmp
mov
sbb
mov
pop
ret
sub
adc
inc
add
aaa
dec
push
cmc
mov
repnz
mov
scas
ret
adc
xor
icebp
iret
stc
sbb
xchg
sub
stos
popa
push
cli
dec
jmp
(bad)
push
mov
xor
push
stc
cld
xor
dec
fisttp
cmp
inc
aam
icebp
xchg
sahf
test
arpl
mov
repnz
ret
jno
stos
push
pop
mov
pop
gs
jnp
mov
xchg
stc
jns
(bad)
sbb
loopne
jge
call
jmp
adc
in
push
jb
sbb
pop
sbb
clc
neg
push
scas
scas
pop
adc
and
daa
jno
jle
retf
inc
xor
add
push
call
leave
push
dec
je
call
cmp
aad
pushf
mov
mov
lock
dec
scas
mov
push
call
popa
iret
jbe
jmp
ret
push
adc
cmc
test
xchg
sub
push
je
pushf
aaa
fisttp
cld
lea
adc
push
out
jbe
inc
in
neg
mov
inc
dec
dec
push
xchg
xchg
jecxz
xchg
mov
adc
xchg
fcom
xor
mov
fcmovnbe
fisub
push
sahf
and
imul
jbe
icebp
pop
mov
mov
or
inc
or
xor
and
push
sub
sub
mov
arpl
dec
mov
or
pushf
jmp
cli
jl
repz
mov
rcr
fidivr
mov
imul
mov
mov
xor
ins
adc
dec
mov
push
nop
pop
pop
into
std
leave
es
or
in
out
(bad)
sbb
pusha
mov
fsub
pop
iret
or
jmp
js
int
aam
push
iret
sub
pushf
ret
fld
nop
adc
stos
mov
cdq
cwde
cmp
movs
aas
push
mov
or
cmp
dec
repnz
and
pop
lahf
es
xor
movs
sti
jecxz
or
and
push
xchg
mov
sub
loope
call
and
iret
push
int3
test
xchg
inc
lahf
pop
xchg
mov
dec
out
shl
loope
add
fwait
pop
cmps
inc
lods
popa
sahf
or
repz
xlat
addr16
sbb
in
xor
xor
(bad)
sbb
xor
in
xchg
mov
lea
add
dec
sti
dec
mov
div
hlt
jg
xor
jbe
inc
xchg
aad
in
imul
xor
in
cmp
xor
xor
cmc
mov
inc
lock
xlat
mov
cs
push
add
pop
jecxz
push
frstor
inc
lea
jae
adc
ja
mov
mov
dec
cs
aam
in
sub
sti
jl
sub
cmp
sbb
xchg
fistp
std
iret
(bad)
(bad)
jae
in
retf
aam
imul
outs
icebp
add
mov
cmp
or
inc
dec
and
mov
adc
test
push
add
not
xchg
fmul
or
xor
sub
pushf
mov
outs
stc
js
aas
out
call
inc
jg
ror
xchg
popf
loope
in
mov
xlat
mov
lahf
xchg
jno
cmp
in
adc
lds
jae
ja
int
inc
ds
(bad)
loopne
push
mov
daa
sahf
nop
sti
fstp
pop
dec
pusha
cmp
ins
lods
xor
(bad)
hlt
cmp
cwde
loop
push
fnstcw
adc
test
mov
lods
cmp
lea
cmc
(bad)
push
push
mov
mov
lds
or
xchg
inc
fwait
add
es
dec
repz
or
adc
sub
mov
xor
mov
(bad)
in
imul
js
fnstsw
nop
xor
mov
push
push
inc
mov
inc
jbe
dec
push
movs
fst
sub
rol
shl
pop
push
pop
jge
add
mov
lahf
push
jmp
mov
xchg
jmp
mov
inc
cmp
fisubr
mov
cdq
adc
repz
shl
rcr
scas
nop
dec
jae
inc
add
mov
push
cmp
pop
pushf
xchg
and
fwait
jno
or
push
inc
in
sub
mov
sbb
and
outs
nop
pop
aad
aad
adc
push
in
sub
mov
xor
arpl
xchg
pop
sbb
imul
(bad)
lods
push
jmp
jno
retf
aas
inc
arpl
push
fcmovu
iret
jp
iret
pop
mov
scas
rcr
out
xchg
outs
int
fidiv
xor
xchg
in
dec
jo
stos
push
sahf
xchg
out
pop
sbb
ja
or
pop
scas
sbb
test
fdecstp
cs
(bad)
xlat
movs
bound
jnp
xlat
call
test
fwait
nop
sahf
test
xchg
cs
iret
xchg
call
dec
xor
loope
arpl
mov
jmp
(bad)
daa
sub
mov
in
pop
and
mov
les
sbb
mov
fs
jle
mov
dec
mov
ins
movs
pop
adc
jnp
aam
sub
jns
inc
push
test
cli
xchg
cs
dec
movs
fild
xor
mov
sbb
pop
xor
fsub
inc
in
es
call
pop
xchg
mov
pop
sti
aam
fwait
neg
mov
push
inc
lahf
xchg
cmp
test
das
add
push
ds
dec
fwait
shl
sub
mov
fst
fstp
nop
shl
pop
inc
enter
jp
sbb
mov
in
mov
jecxz
std
mov
sbb
mov
stos
xlat
dec
out
movs
cwde
in
cmp
cmps
sub
nop
(bad)
out
ja
mov
and
ja
ja
shl
rcr
fcomp
arpl
mov
ja
adc
adc
mov
fdivr
inc
sub
pop
or
fisub
cmp
mov
or
mov
pop
aad
in
xchg
add
lds
push
arpl
fldenv
dec
int3
xchg
pop
fimul
fdivr
out
outs
sub
xor
aad
stc
retf
dec
xchg
shl
int3
inc
sub
push
xchg
push
sbb
pop
and
adc
inc
jle
loopne
jecxz
sar
xchg
add
aad
daa
out
lock
inc
pop
scas
popa
addr16
lea
cmp
sbb
in
add
in
or
mov
test
rol
dec
dec
lods
arpl
pop
sub
add
and
xchg
mov
xchg
out
jnp
pop
(bad)
(bad)
icebp
mov
nop
or
das
cmp
mov
mov
or
push
lock
outs
add
sub
dec
inc
fdivr
mov
push
adc
cwde
popf
sbb
inc
lahf
out
mov
push
lock
sbb
sub
jmp
idiv
fsubr
loop
test
hlt
adc
dec
loope
dec
mov
xchg
or
addr16
je
loop
ins
mov
add
pop
pop
dec
sbb
test
ret
mov
ins
outs
jge
iret
out
xor
mov
(bad)
jmp
add
adc
(bad)
add
mov
retf
jecxz
inc
outs
fsub
iret
or
cmps
and
or
test
jl
push
(bad)
jge
ror
mov
fild
rcr
sbb
mov
and
cli
call
outs
xchg
pop
ror
or
inc
or
inc
fld
xchg
sahf
mov
(bad)
mov
fcomp
xchg
hlt
retf
mov
or
aaa
sahf
mov
xor
and
fwait
loopne
pop
xor
shl
loopne
jle
push
cwde
out
fld
fist
or
test
mov
cmp
lock
ja
test
mov
shl
psllw
mov
mov
(bad)
jle
mov
aam
pusha
xor
sbb
(bad)
popf
dec
mov
jb
cmp
ficomp
sbb
(bad)
popf
xor
push
xchg
ja
dec
mov
sub
jle
and
push
das
and
add
pop
mov
mov
into
test
adc
sbb
or
mov
int
(bad)
inc
and
mov
shl
loopne
add
out
sbb
or
inc
int3
xchg
jo
fmul
das
aaa
or
sbb
int
arpl
mov
add
sahf
adc
add
mov
push
jo
cmp
xor
pop
arpl
in
enter
jnp
hlt
mov
add
jae
mov
fidivr
jg
cld
(bad)
or
sub
ss
push
mov
cmps
fwait
and
jno
pop
lods
lock
pop
ficomp
xor
sahf
or
adc
jnp
lods
mov
in
(bad)
enter
stos
test
std
pop
inc
push
fild
pop
push
pop
call
aaa
jae
push
push
loopne
mov
movs
xchg
sysenter
leave
out
cs
adc
jmp
fld
add
or
sub
push
inc
das
ret
nop
int
pushf
mov
push
aam
fmulp
xor
and
cmp
iret
(bad)
retf
aam
adc
imul
cwde
loop
mov
jmp
inc
fisubr
loope
xchg
pop
(bad)
loopne
fwait
(bad)
jp
sbb
stos
xchg
fcmovbe
jmp
xchg
in
cmp
or
jmp
aas
and
mov
out
dec
xchg
mov
sub
inc
(bad)
(bad)
and
lock
in
lods
ret
inc
pop
xor
mov
push
push
js
cmp
out
(bad)
xor
mov
jmp
push
dec
loope
push
and
(bad)
mov
pmaxub
adc
icebp
das
fwait
cwde
cs
rcl
aaa
xor
add
test
mov
inc
sbb
pusha
leave
addr16
or
das
jecxz
cmp
into
(bad)
mov
out
sbb
xchg
or
movs
call
jbe
cmp
or
lahf
jb
cs
dec
popf
cmp
movs
add
cmp
aam
sbb
jg
cmp
add
xor
pop
shl
outs
les
je
mov
sbb
xchg
cmp
scas
rcr
les
inc
(bad)
mov
lea
cld
xor
xor
and
ret
dec
das
pop
or
lds
pop
inc
pop
into
jns
xchg
jge
sar
sub
loopne
sub
push
jb
daa
xor
and
pop
inc
push
data16
lea
xchg
in
mov
cmp
inc
and
and
mov
xchg
fs
cmp
add
loope
mov
push
push
push
jne
pop
fdiv
xchg
mov
das
cdq
jb
inc
xchg
inc
add
mov
ss
inc
imul
push
dec
call
dec
out
fmul
call
rol
movs
adc
jle
test
sbb
fcom
fincstp
ss
fdivr
sahf
mov
sub
paddd
call
pop
xchg
sbb
gs
movs
mov
xor
xor
mov
cmp
add
test
sub
(bad)
into
pop
cdq
and
ret
std
jmp
ficomp
dec
adc
or
sbb
inc
iret
ins
mov
lahf
jnp
xor
sbb
dec
sub
xchg
add
fistp
pop
mov
pop
shl
popa
or
mov
lock
push
ucomiss
lahf
loope
push
ja
adc
mov
cdq
sbb
in
cdq
adc
pusha
out
mov
mov
and
add
ins
mov
mov
sub
rcr
rcl
cmp
jns
imul
in
add
inc
ins
shl
cmp
arpl
sbb
les
pop
jge
sub
in
xor
(bad)
stc
sub
hlt
and
or
shl
pop
dec
fs
and
jmp
mov
icebp
sub
and
(bad)
ror
xchg
ss
push
and
pusha
(bad)
cmps
in
dec
shl
test
fisubr
mov
inc
dec
add
repnz
cmp
jns
test
test
(bad)
cmp
xchg
pop
fnstenv
mov
(bad)
loop
mov
mov
and
xchg
and
in
rdpmc
das
mov
push
imul
sub
loop
shr
dec
cmp
xor
pop
fwait
test
mov
jl
addr16
inc
xor
xor
lods
mov
pop
out
xlat
mov
sahf
test
ss
mul
sub
jecxz
and
add
lods
mov
ret
lea
mov
cmp
mov
push
add
mov
(bad)
xchg
dec
sub
xor
jnp
call
movs
repnz
(bad)
adc
push
scas
das
cmp
bound
jo
mov
icebp
test
jge
popf
mov
bound
lock
jle
jle
fnstcw
push
sbb
mov
out
imul
popa
inc
call
arpl
pop
inc
mov
xor
je
lea
in
scas
pop
push
inc
mov
jecxz
int
ja
push
imul
mov
inc
mov
ror
scas
dec
ret
rcr
add
jae
sub
jecxz
pop
mov
pop
sti
pop
inc
inc
inc
(bad)
push
jle
push
and
(bad)
pop
xchg
dec
or
xor
movs
sbb
or
mov
cld
bound
inc
(bad)
sar
jae
push
movs
sub
imul
and
ins
jg
ja
hlt
jmp
ins
sub
or
push
and
dec
dec
mov
pusha
inc
pop
adc
sub
inc
lahf
push
outs
fldenv
or
or
test
jmp
mov
sbb
jae
lds
es
inc
es
or
mov
push
xchg
test
jmp
jmp
jns
sti
adc
repnz
and
sbb
dec
out
iret
ins
repnz
in
sbb
scas
test
aam
fisub
add
hlt
sub
mov
cs
retf
push
arpl
sbb
lahf
push
jl
fidivr
add
outs
mov
cmp
fucomi
leave
mov
stos
push
dec
sti
rol
loop
leave
mov
ds
dec
mov
push
sub
fisttp
mov
sub
push
(bad)
fisubr
iret
and
loop
into
shl
jge
ds
cmp
jno
ficom
fdivr
jle
pusha
shr
call
add
pop
loope
mov
bound
xor
into
outs
push
mov
inc
sub
std
shl
out
sbb
ds
add
loope
mov
pop
ret
out
rcr
xchg
push
mov
pop
stc
adc
mov
cmp
cmp
or
dec
out
sbb
or
or
mov
stos
mov
adc
or
loop
jmp
lods
es
aaa
sbb
inc
js
pop
inc
xor
mov
pusha
xchg
popf
jmp
dec
loope
ret
push
mov
cmc
cli
(bad)
sar
jecxz
sub
and
mov
add
imul
sub
jns
push
cld
retf
hlt
lock
aam
bound
xchg
sbb
mov
dec
jnp
lock
div
dec
jns
inc
dec
out
cmp
sahf
push
xchg
xchg
xchg
inc
ds
aaa
mov
lods
in
xchg
(bad)
bound
sbb
lods
lods
in
in
loope
out
or
pop
mov
mov
retf
cli
pop
aam
fiadd
cmp
inc
push
and
es
xor
imul
fwait
pusha
out
add
into
loopne
mov
(bad)
cmp
sahf
add
xchg
fwait
mov
iret
inc
ret
or
sub
sub
and
call
push
in
jnp
ret
fist
xor
add
push
(bad)
xchg
jae
cwde
cmp
mov
fimul
jae
jg
mov
inc
popa
call
and
je
push
or
leave
jmp
aam
cwde
hlt
pop
and
jns
popa
sbb
mov
pop
mov
sub
xchg
shr
fldcw
inc
hlt
pop
daa
xchg
push
cmps
push
pop
js
add
push
ror
retf
jg
jo
jl
inc
mov
cmp
dec
out
enter
neg
adc
push
and
dec
pop
stos
and
gs
sub
add
fistp
imul
rcr
inc
mov
push
cmps
jge
pusha
add
ret
add
stos
cmp
jnp
dec
ror
xor
ss
mov
stos
or
inc
ins
mov
push
mov
enter
sar
add
test
(bad)
fwait
sub
daa
adc
adc
xor
mov
out
arpl
fwait
test
lods
loop
lahf
(bad)
and
cld
sub
mov
cmc
ds
dec
dec
fst
cmp
cmp
gs
push
and
jnp
out
push
popf
shl
and
nop
in
mov
and
rcl
push
jl
scas
mov
cwde
push
sbb
push
jmp
mov
jmp
or
sub
daa
xlat
xchg
jmp
mov
dec
inc
cdq
mov
lds
ret
bound
fs
leave
mov
test
in
add
stos
xchg
lock
jbe
mov
loop
aam
sbb
jno
pusha
cli
add
(bad)
fdivr
or
lahf
pushf
fiadd
adc
imul
retf
fwait
(bad)
out
mov
pop
jge
stos
cld
fidiv
mov
adc
test
dec
inc
push
lods
push
cmps
mov
leave
sbb
pop
ficom
push
push
jns
inc
call
addr16
inc
push
sub
imul
sbb
bound
dec
and
jns
je
and
cmp
loopne
cmps
sub
stos
mov
inc
inc
and
hlt
repz
inc
aam
dec
push
ret
mov
cmp
int
cld
sub
sbb
sub
(bad)
out
gs
mov
and
das
sub
mov
pop
cmp
stos
cs
pop
movs
cmp
les
popf
push
and
sub
cdq
movs
sbb
dec
enter
jb
add
shl
(bad)
icebp
jp
cwde
add
adc
mov
push
test
jp
mov
in
stc
or
arpl
pop
sub
push
or
add
cdq
repz
daa
call
xor
push
pop
loop
push
aas
out
mov
(bad)
test
push
ja
xchg
fisub
aaa
add
sub
mov
adc
mov
arpl
mov
test
fisttp
sub
cwde
jl
dec
repz
sub
xchg
pop
bound
push
stos
iret
and
mov
adc
pop
lahf
or
mov
push
jmp
ja
out
push
cmps
cmps
jmp
fisub
or
rol
ret
or
scas
push
inc
mov
cs
push
sub
mov
lea
enter
ds
sbb
outs
popf
test
mov
loope
scas
sbb
xlat
arpl
fs
int3
pop
dec
aam
sbb
loopne
jmp
call
ds
cld
iret
push
mov
out
(bad)
movs
sbb
adc
sub
dec
add
xchg
push
adc
repnz
test
div
jns
push
dec
add
cmps
inc
ficomp
sub
xlat
mov
mov
dec
jl
fsubr
fnstcw
pop
fild
sbb
leave
push
ror
(bad)
icebp
mov
or
cmp
out
xor
(bad)
scas
lds
cmp
sahf
xor
aas
clc
pop
mov
retf
and
mov
pop
ss
adc
shl
test
sub
push
add
cdq
sbb
repz
icebp
mov
push
cpuid
jp
jp
loop
ins
adc
arpl
jl
(bad)
icebp
dec
dec
mov
push
lods
movs
pop
rcr
jne
mov
adc
mov
and
lods
cmc
out
or
add
jns
adc
lods
push
mov
test
mov
adc
jg
jno
arpl
mov
jnp
ins
adc
sbb
xor
fs
push
xchg
retf
lds
sti
inc
cmp
mov
iret
push
arpl
(bad)
imul
or
outs
das
setl
mov
and
add
pop
add
in
leave
push
mov
cmp
add
test
jo
pop
or
maskmovq
imul
cmp
and
xchg
dec
loopne
popf
xchg
lea
cmp
pop
stc
sub
mov
icebp
popa
loop
mov
jge
std
push
adc
adc
xchg
(bad)
sahf
xor
mov
or
mov
fisub
ret
daa
test
mov
(bad)
shl
push
movs
jb
ins
rcr
repz
push
sbb
movs
clc
mov
fwait
jg
and
push
fsincos
push
imul
mov
mov
pop
(bad)
mov
sub
mov
pop
mov
xlat
mov
jg
jo
push
sub
sbb
hlt
jae
call
cmp
mov
mov
push
aad
call
stos
(bad)
inc
adc
and
movs
daa
ret
ret
mov
clc
and
pop
xlat
mov
js
dec
js
(bad)
mov
out
sub
pop
es
movs
call
fbstp
pop
ja
jmp
rcr
xchg
ret
xor
frstor
sub
mov
cmp
repnz
gs
xor
dec
mov
jle
in
jns
dec
stos
(bad)
cmp
pop
xor
into
xor
pop
mov
stos
adc
and
sahf
or
fsub
and
cmp
or
sbb
or
xchg
rcr
int
sub
sbb
pop
shl
out
mov
in
nop
mov
pop
dec
adc
mov
jnp
pop
xor
dec
and
push
push
fcomp
in
cmp
cdq
jnp
mov
and
imul
or
lahf
jo
pop
lock
sbb
or
in
mov
xor
xor
mov
xor
icebp
(bad)
push
xor
(bad)
hlt
cld
inc
xchg
fsubr
hlt
xor
add
mov
pushf
adc
inc
retf
mov
push
in
hlt
(bad)
shl
add
cli
inc
push
xchg
mov
lea
mov
rol
sti
mov
or
jmp
cs
jno
push
enter
and
and
add
pusha
iret
inc
cmps
cmp
mov
lea
adc
inc
fsubr
int
jle
std
mov
sbb
sub
pop
inc
ins
sub
jo
jge
adc
jb
push
call
imul
retf
frstor
sar
in
lock
jp
int3
lods
mov
sbb
inc
sbb
mov
je
inc
test
(bad)
pop
rcr
cmps
add
mov
das
(bad)
ds
jae
shl
cmps
cli
es
idiv
cmp
pusha
pop
pop
mov
dec
stc
xlat
(bad)
inc
push
fist
popa
xor
mov
pusha
nop
cmc
jp
fidiv
fadd
pop
cmps
mov
fcom
jg
cmps
inc
stos
sahf
fwait
and
test
xor
inc
enter
int
jge
xor
cld
or
push
pushf
and
icebp
mov
stos
push
pop
cmp
xor
push
adc
pusha
shr
push
and
out
add
mov
jb
les
shl
dec
mov
mov
(bad)
jp
mov
xor
adc
movs
mov
lods
fsub
jle
mov
rcr
es
add
xchg
inc
lds
or
fcom
lahf
or
push
mov
in
cmps
cmps
xlat
pop
daa
or
mov
pop
mov
gs
je
mov
xchg
(bad)
or
mov
add
sbb
dec
xor
push
(bad)
jnp
xchg
pop
test
add
call
xchg
dec
pop
mov
sbb
fimul
jne
sbb
xor
pop
mov
(bad)
stos
pop
dec
fs
hlt
in
mov
cld
inc
add
ins
inc
icebp
(bad)
mov
jne
es
mov
jae
mov
popf
mov
lahf
adc
lahf
cmps
arpl
leave
sar
dec
push
adc
mov
shl
ds
std
jne
xchg
mov
pop
mov
cdq
push
mov
in
les
repz
xor
ret
aad
xchg
addr16
call
jge
retf
adc
fucomi
jae
mov
sub
es
jecxz
mov
jbe
int
idiv
dec
(bad)
aas
leave
cwde
js
cmp
sbb
pop
jno
dec
pop
and
or
xchg
adc
call
cld
iret
pop
sti
xchg
push
test
lods
mov
or
call
jns
add
ds
sub
clc
cmp
or
or
daa
xchg
stos
mov
in
mov
mov
pop
out
and
stc
xchg
push
dec
jae
(bad)
fst
out
retf
imul
inc
mov
outs
and
dec
ja
add
repz
dec
icebp
sahf
cmova
mov
jnp
ins
adc
or
dec
fidivr
clc
retf
jns
or
rcl
sbb
push
ret
cmps
aas
mov
xchg
retf
add
jb
dec
adc
hlt
mov
in
mov
das
dec
mov
scas
das
in
pop
loop
dec
lods
call
ss
hlt
jmp
imul
cmp
cmp
cs
mov
push
stos
rol
aad
arpl
fsubp
cmps
or
sbb
mov
leave
mov
sar
mov
mov
inc
or
repz
retf
pop
mov
cld
mov
enter
fstp
push
add
dec
cmps
leave
icebp
jne
mov
js
(bad)
pop
leave
jae
data16
cld
sbb
ss
cld
jmp
stos
push
xor
sub
mov
xor
adc
xlat
movs
cdq
shr
loope
dec
mov
add
sar
aas
mov
sub
pop
(bad)
std
mov
pop
lea
jge
push
scas
iret
mov
dec
loopne
push
xchg
das
(bad)
adc
outs
cmps
enter
call
outs
cmp
fdivr
cdq
es
pop
cdq
es
fistp
or
cmp
idiv
jb
push
inc
outs
jl
sub
xlat
sbb
fwait
sar
push
sbb
dec
inc
fimul
dec
push
dec
mov
shr
mov
or
mov
addr16
int3
outs
push
loopne
ja
in
stos
test
sbb
mov
in
push
jo
xchg
lods
mov
or
std
test
leave
into
mov
dec
hlt
cmp
xchg
(bad)
out
imul
mov
out
or
push
fwait
jnp
fstp
lods
sbb
mov
push
xor
stos
push
hlt
stos
jg
mov
xor
ud2
jno
(bad)
sbb
fcom
scas
inc
mov
scas
sti
in
sahf
push
push
nop
hlt
retf
sbb
xchg
or
inc
retf
sbb
push
push
in
popf
mov
xchg
movs
add
test
jecxz
loop
movs
xor
cmp
cmps
mov
pop
push
sti
cmp
shl
add
and
xor
mov
inc
mov
mov
inc
cmp
push
loop
enter
sub
pop
mov
leave
popf
adc
imul
xchg
sub
or
cld
sub
sbb
test
push
dec
das
pop
ss
jmp
mov
stos
push
add
fwait
sbb
aad
sti
mov
mov
popa
xor
jns
sbb
rol
ins
ret
mov
push
jbe
stos
hlt
sbb
shl
repz
push
aam
xchg
mov
fidiv
test
add
xchg
push
movs
mov
out
xchg
jo
inc
pop
test
dec
sar
les
adc
leave
inc
cmp
or
in
fld
xchg
sub
push
xchg
fs
mov
add
sub
xor
sbb
outs
cs
jne
sub
aad
sbb
js
mov
jl
ret
pushf
jmp
call
pop
idiv
and
sbb
mov
repnz
(bad)
cmc
inc
gs
add
loop
dec
mov
inc
mov
cld
retf
mov
jmp
mov
mov
adc
ficom
jle
(bad)
ficom
jp
sub
jmp
fiadd
clc
jle
ja
xchg
push
pop
dec
outs
sub
push
cmp
not
ds
mov
neg
cmps
jb
and
xor
mov
sbb
xchg
inc
js
in
bound
int3
mov
mov
test
sub
sbb
enter
dec
out
fldcw
adc
inc
in
pop
xor
or
cmps
mov
pop
jp
arpl
push
pop
ret
(bad)
aam
mov
clc
pop
push
adc
pop
xchg
mul
or
jmp
call
outs
nop
adc
mov
xlat
mov
push
ror
nop
pushf
inc
add
cdq
div
push
jge
mov
call
adc
call
xchg
lock
in
push
div
ficom
inc
out
fadd
lds
fwait
retf
ret
push
xchg
loopne
pop
add
sub
and
dec
push
cmp
mov
jmp
jb
add
test
test
stos
xchg
dec
push
xchg
mov
aas
out
xor
popf
retf
fnsave
add
vpsadbw
mov
test
adc
scas
or
ins
sbb
mov
test
xchg
add
push
mov
hlt
push
in
lahf
xchg
push
gs
lods
jno
fldenv
repz
cmp
xchg
int3
test
ins
xchg
jae
cmc
add
jo
mov
pushf
pop
pop
lods
dec
ins
push
pop
sti
pushf
and
inc
rcr
int
cmp
xchg
add
daa
shl
jg
loop
call
sub
jp
in
push
sub
sub
jmp
into
scas
push
test
jecxz
sbb
loop
jecxz
jns
scas
loope
das
pop
scas
fisubr
int
pop
imul
or
jo
ja
jno
mov
or
xor
aad
and
pop
popf
out
ja
xor
and
(bad)
push
ror
lea
push
in
les
and
repnz
and
aaa
ss
push
push
jne
jmp
nop
and
loope
cmp
mov
fidiv
add
push
inc
push
jae
(bad)
adc
sub
stos
and
gs
sub
retf
psubb
dec
dec
sub
push
jo
outs
and
pop
mov
daa
cdq
pusha
shl
rcl
or
pop
call
jg
std
jmp
mov
sahf
fwait
dec
lahf
or
adc
fidivr
cld
dec
(bad)
cmp
jmp
pusha
pop
in
sti
ins
jmp
pop
ins
xor
aaa
jg
call
xor
hlt
sub
lea
aad
retf
mov
lock
std
cmp
mov
adc
aad
stos
gs
test
aaa
cmp
push
xchg
pop
or
cmp
mov
cmp
add
xchg
sub
mov
adc
ror
cwde
sub
pop
sbb
(bad)
stos
sbb
push
adc
ret
loop
loope
inc
cmp
mov
nop
sar
inc
call
iret
std
daa
xor
shl
pop
enter
nop
out
(bad)
sbb
mov
stos
cdq
out
and
adc
dec
jecxz
jmp
pop
pop
mov
pop
sub
dec
loop
das
jno
int
sets
popf
xor
mov
test
inc
pop
pop
mov
dec
adc
mov
jns
cmp
push
adc
push
jge
jle
dec
inc
aam
nop
and
sub
lock
fs
adc
repz
scas
bound
mov
inc
or
inc
pop
je
jnp
fistp
mov
cmp
scas
mov
aam
sub
cmps
in
and
cmp
inc
xchg
push
lods
sbb
cmp
repz
loope
add
xor
mov
je
nop
push
mov
xor
sub
dec
push
aas
pop
shl
not
ucomiss
push
xor
dec
xor
sub
or
adc
out
xor
ffreep
mov
jns
pop
div
aam
cmp
pop
cmc
pusha
sbb
jmp
loop
int3
sbb
and
xchg
sub
(bad)
out
xchg
fcom
or
fsub
mov
pop
jecxz
xchg
push
or
jns
test
aad
int3
mov
jp
(bad)
(bad)
or
jmp
bound
sub
repz
stos
(bad)
stc
(bad)
sub
adc
jbe
cs
loopne
jo
adc
arpl
add
ins
adc
mov
adc
dec
or
in
aas
out
loop
sbb
ja
stos
sbb
fdiv
xor
adc
rcr
ss
test
lods
push
sar
leave
pop
cwde
test
stos
shl
dec
fnstcw
adc
mov
xchg
bound
das
push
pop
cwde
shl
or
cmp
mov
imul
add
jne
sbb
hlt
xor
es
outs
sbb
aaa
inc
dec
mov
pop
les
call
jmp
sub
push
xchg
pop
mov
mov
or
out
lahf
jle
pop
adc
(bad)
out
js
div
pop
loop
push
pop
and
push
xchg
ss
jmp
push
xchg
adc
sub
cs
je
mov
ja
mov
add
jmp
jecxz
ins
push
repz
popa
sbb
pop
(bad)
mov
out
pop
push
or
pop
sets
mov
aad
(bad)
jg
add
fcom
add
(bad)
push
iret
ret
xor
cs
jmp
dec
inc
cmp
and
xor
or
and
jne
sahf
jnp
sub
rol
stc
lock
mov
and
inc
cmps
push
ret
ins
data16
pusha
enter
out
sbb
int
push
icebp
faddp
add
not
mov
int
ds
jno
aam
out
jp
dec
js
add
mov
sti
fninit
push
(bad)
pop
in
sbb
cld
sbb
mov
retf
inc
retf
inc
ret
int
outs
push
rol
loop
jbe
push
movs
aas
ret
icebp
jno
adc
(bad)
lds
xchg
pop
jno
out
sahf
push
imul
in
rol
mov
loop
pop
clc
arpl
lahf
adc
mov
cmp
push
fmul
push
xchg
pop
xchg
jo
loopne
icebp
or
jle
fld
cmp
cmps
(bad)
aaa
test
aaa
arpl
inc
xor
push
hlt
jecxz
sub
scas
push
add
xor
pop
pop
hlt
dec
cs
jno
pop
jb
dec
jle
mov
loop
mov
imul
imul
pop
outs
(bad)
fcom
fdivr
mov
push
pop
js
popa
cmc
retf
sbb
cld
cmp
jmp
sub
ror
and
add
pop
sub
add
sbb
repz
jno
shl
out
mov
or
xchg
pop
loope
and
xor
rcr
mov
jp
outs
sub
loop
into
ins
jg
xor
push
lods
dec
scas
aas
in
sub
lock
dec
imul
inc
adc
sbb
mov
int
movs
dec
in
jns
scas
mov
and
sub
inc
int3
push
or
sahf
sbb
inc
jl
(bad)
sub
leave
adc
rol
add
nop
cli
ret
vmread
push
cwde
bound
cmp
lods
stos
push
or
add
xor
xchg
int
jb
mov
leave
btr
adc
push
shl
and
aad
into
out
dec
cmp
push
dec
dec
outs
jmp
xchg
dec
inc
outs
mov
rcl
and
jmp
xchg
repnz
jns
bound
loope
ss
push
shr
mov
retf
and
out
jge
sti
or
outs
xor
mov
or
xor
sub
and
aaa
push
dec
xor
rcr
in
sbb
shl
pop
sbb
stc
cmp
mov
icebp
mov
pushf
push
rcl
std
(bad)
es
xchg
stos
rcl
call
sbb
enter
xchg
hlt
test
je
pop
jo
jmp
and
cdq
into
dec
jmp
mov
mov
test
mov
imul
pop
mov
sbb
scas
scas
pop
das
or
ds
mov
mov
imul
inc
and
sub
clc
outs
sub
xor
fistp
movs
lea
pop
pop
lock
mov
sub
imul
push
movs
sbb
adc
dec
adc
or
adc
add
mov
jmp
out
xor
int3
call
adc
jne
ins
jbe
shl
dec
adc
lahf
inc
shr
mov
push
enter
mov
(bad)
xchg
bswap
mov
scas
xchg
mov
(bad)
imul
js
movs
ins
xlat
(bad)
xchg
jnp
ret
icebp
mov
or
(bad)
fistp
xor
or
xlat
xor
mov
pop
jmp
call
cmp
inc
div
push
loop
mov
cmps
in
shr
loope
test
or
rcr
mov
mov
jecxz
mov
shl
pop
xor
test
adc
pop
or
test
cmp
(bad)
fbld
push
ror
fimul
ds
and
es
retf
adc
in
pop
and
and
cmp
jbe
adc
out
sub
push
cld
add
cmp
sub
mov
test
pop
(bad)
mov
ret
lahf
pop
gs
movs
sub
mov
mov
iret
hlt
dec
dec
das
adc
pop
pop
adc
xchg
push
into
mov
movs
jne
int3
pusha
add
xchg
mov
ror
mov
push
jmp
mov
cld
int
xchg
mov
jnp
test
outs
sbb
add
retf
xor
sub
gs
pop
pop
mov
mov
in
push
(bad)
xor
dec
sub
ret
out
dec
fsub
pop
mov
sar
cwde
addr16
sbb
ins
clc
pusha
inc
push
fcom
jnp
adc
(bad)
aaa
or
and
repz
add
and
or
xchg
jmp
sbb
cmp
push
sti
mov
jne
mov
mov
sti
popa
xchg
mov
retf
ja
leave
dec
or
sbb
add
pop
es
sbb
and
push
jle
push
cmps
adc
movhps
and
mov
xor
mov
mov
leave
in
pop
ret
fdivr
jnp
mov
pop
(bad)
pop
jno
mov
fimul
js
cmp
push
push
add
(bad)
sub
rcr
sub
push
add
sbb
fdiv
rol
sub
in
shr
inc
cmps
das
gs
ret
mov
and
sbb
popf
je
xchg
ret
rol
xor
repz
stc
mov
mov
call
jp
aam
mov
lods
pusha
push
inc
jnp
jne
mov
xchg
jbe
or
out
push
rol
mov
hlt
xchg
inc
enter
lods
pop
cli
push
nop
add
jle
(bad)
jbe
mov
pop
test
loop
lahf
mov
sbb
movs
xchg
or
idiv
cmp
push
icebp
call
test
popa
mov
jnp
mov
mov
ins
inc
ror
cmp
push
cmp
mov
icebp
push
jp
sub
pop
adc
ret
retf
test
inc
xor
fisttp
pop
fistp
sub
xor
(bad)
or
stos
fadd
cmp
xchg
pop
xchg
and
and
fstp
mov
mov
mov
popf
xchg
out
sbb
pop
dec
stc
pop
outs
mov
xchg
mov
fst
hlt
pop
pop
pop
cmp
hlt
xchg
push
jge
cmps
mov
jecxz
or
adc
and
and
mov
(bad)
in
mov
or
cld
mov
fwait
pushf
jp
movs
sbb
call
in
dec
mov
mov
push
cmp
pop
ins
xchg
aam
sbb
or
jno
xchg
cdq
loope
mov
inc
icebp
jo
rcr
jns
or
imul
push
aaa
pop
xchg
and
retf
mov
xchg
neg
je
xor
enterw
lock
in
in
xchg
into
psubq
cmp
jle
and
jb
mov
int
jle
mov
cs
mov
and
sub
jae
mov
js
fdiv
cmp
in
xchg
outs
mov
sub
jg
xchg
sub
xor
pop
and
xchg
add
push
and
fld
adc
pop
push
push
loop
loopne
mov
bound
adc
pop
jmp
hlt
cmps
inc
and
out
mov
cs
shr
xor
stc
sbb
mov
mov
pop
cmp
(bad)
(bad)
xor
imul
push
mov
outs
mov
lock
sub
inc
xor
inc
ret
pushf
mov
int
rcl
dec
nop
mov
add
pop
xchg
icebp
enter
cmp
cmp
mov
and
xor
gs
pop
icebp
outs
jno
jmp
ret
pop
stc
fldenv
lock
or
cli
and
inc
push
adc
inc
addr16
cmp
sbb
int3
sbb
cli
add
fidivr
push
(bad)
mov
push
rcl
jge
inc
jl
inc
pop
mov
daa
adc
add
xchg
or
in
xor
nop
retf
sbb
test
adc
imul
push
cmc
pop
xchg
mov
or
push
ret
sub
inc
sahf
movs
or
cli
bts
adc
ss
icebp
ins
sub
sub
in
pop
aad
adc
xor
sahf
add
repz
imul
sub
push
push
imul
leave
ss
in
repnz
aad
cli
dec
jne
xor
mov
xchg
test
mov
bound
pop
cs
test
adc
mov
xor
sub
loope
push
repz
inc
ins
mov
add
xchg
xor
pop
jns
lock
lock
fsub
fist
mov
mov
cdq
sub
and
js
js
mov
outs
push
mov
repnz
sub
xor
fnstsw
je
push
push
sbb
ret
jmp
popa
cmp
(bad)
mov
xchg
mov
in
aad
ficom
xchg
add
xor
leave
aad
mov
xor
jge
pushf
mov
and
shl
test
retf
test
mov
xor
inc
sahf
mov
mov
dec
adc
out
mul
das
outs
push
ins
aam
jae
pushf
lahf
sti
in
push
push
jnp
mov
out
mov
adc
xchg
cmps
retf
scas
mov
cmps
inc
sub
xchg
clc
(bad)
pop
mov
pcmpgtw
xlat
xchg
ss
dec
add
dec
inc
inc
sti
jl
out
mov
scas
push
jg
test
aam
dec
sub
jbe
lock
sbb
mov
mov
cs
pop
dec
jns
mov
add
inc
ret
and
push
xchg
cld
sbb
(bad)
cmp
add
adc
dec
mov
je
mov
jmp
mov
lea
fadd
mov
xchg
cmp
fcomp
inc
inc
sbb
stc
cmp
jmp
xchg
mov
mov
cmps
xchg
xchg
or
sub
or
xor
or
into
add
leave
fadd
push
repnz
sahf
sub
add
mov
je
fnstenv
jge
sbb
aas
mov
pop
ss
outs
inc
ja
fcom
das
mov
pop
jecxz
pop
dec
inc
xor
sti
loopne
hlt
into
loop
sahf
mov
inc
pop
call
jmp
add
cmps
(bad)
xor
mov
lea
sub
retf
ss
imul
mov
sub
mov
mov
das
pusha
outs
inc
pop
stos
sbb
and
outs
stos
fist
cld
sbb
call
repz
neg
mov
push
sub
inc
leave
mov
pop
daa
shl
repz
dec
inc
adc
call
jae
add
sub
pop
out
cdq
mov
xchg
inc
cmp
sub
cli
cmps
addr16
push
jg
(bad)
int3
dec
test
idiv
popf
scas
sbb
jb
jge
call
add
imul
inc
mov
movs
mov
fs
clc
mov
out
or
jne
and
mov
mov
mov
sbb
push
adc
leave
inc
inc
pop
cld
les
(bad)
out
(bad)
enter
out
arpl
xlat
jne
mov
ja
paddusw
push
jo
push
adc
pop
mov
fldenv
repz
adc
xor
pop
dec
mov
mov
test
leave
xchg
mov
push
xchg
loope
loop
retf
cmp
pusha
push
ins
fstp
into
and
and
cmp
adc
call
rcr
shl
pop
pop
cs
adc
fxch
imul
inc
lods
fld
out
pushf
in
lods
les
push
xchg
adc
aad
cmps
xchg
ins
sar
lods
or
jmp
dec
jno
adc
mov
inc
into
idiv
push
lods
pop
data16
test
push
leave
pop
mov
xchg
enter
mov
pop
dec
jp
jb
cmp
cwde
loop
inc
push
lea
mov
mov
or
add
leave
mov
adc
rol
add
push
test
lods
aaa
fwait
pop
and
mov
sbb
cwde
ss
aam
jmp
xchg
add
pushf
das
dec
and
stos
push
fnstcw
add
sti
clc
es
adc
int
cmc
mov
sub
outs
adc
jnp
dec
jmp
mov
cmp
xchg
mov
sub
xor
jne
xchg
xchg
int3
inc
jnp
sahf
xor
ror
and
pop
(bad)
jp
pop
in
dec
test
stc
jecxz
call
pop
push
jae
push
lock
cmc
jmp
fwait
xor
jecxz
(bad)
and
gs
push
inc
rcl
adc
inc
cmc
xchg
loopne
rcl
retf
bound
sbb
mov
movs
fcom
out
dec
cmp
xchg
(bad)
ret
dec
ss
aad
sub
add
fisub
mov
mov
xor
scas
push
add
mov
lock
or
cwde
icebp
and
adc
arpl
stos
shl
data16
shl
ficomp
int
iret
out
jmp
mov
and
and
mov
arpl
mov
xor
jg
cmp
pop
movs
push
ret
jne
sahf
mov
dec
add
scas
aaa
in
sub
xor
pop
fld
cmp
inc
cwde
cmp
mov
jmp
repnz
loop
(bad)
in
push
les
stos
adc
cmp
daa
push
mov
outs
sbb
arpl
jo
pushf
and
ret
xchg
in
pop
(bad)
(bad)
sbb
in
loop
sub
inc
jp
(bad)
and
xchg
fs
push
sub
sbb
pop
int
adc
mov
jecxz
movs
add
cmp
jno
movs
cmp
xor
jp
xor
xor
mov
xchg
cmp
xchg
mov
enter
and
mov
ins
pop
jg
repnz
jb
shl
or
or
call
sbb
cmp
ror
sub
cwde
dec
movs
jno
adc
mov
jae
xchg
ret
fadd
pop
lea
sbb
inc
test
pop
push
mov
or
in
test
icebp
test
push
add
and
pop
jae
shl
test
jp
lea
and
loop
jne
retf
bound
retf
fistp
lea
clc
test
sbb
lds
repnz
cld
aad
sqrtps
xchg
or
into
leave
imul
arpl
push
clc
(bad)
dec
shl
aaa
mov
sub
out
jbe
inc
dec
xchg
jmp
mov
out
sub
hlt
cld
clc
lahf
call
int
adc
mov
and
mov
xchg
aad
cmps
sub
pop
stos
mov
mov
mov
cwde
jbe
jle
stos
dec
push
movs
mov
jnp
xor
iret
mov
xor
jo
mov
shl
js
jbe
retf
repnz
jmp
leave
pop
and
das
mov
xchg
aas
xchg
clc
and
data16
fild
stos
push
iret
jp
imul
sbb
push
shl
lahf
xchg
ror
push
sbb
jg
(bad)
cmc
ficom
mov
adc
jne
out
dec
jmp
test
aas
lea
mov
scas
and
popa
mov
rol
popf
ret
dec
call
jns
xchg
xchg
xchg
imul
adc
push
adc
pop
pop
imul
sbb
std
jno
movs
mov
sub
test
(bad)
shl
add
pop
fadd
test
pop
push
ins
push
scas
push
repnz
stos
fsubr
aad
xor
adc
jnp
and
mov
mov
sbb
gs
scas
xor
test
mov
or
add
inc
shl
pop
dec
mov
jl
pop
xchg
jns
cmp
push
mov
enter
mov
jae
mov
cmps
shr
fsub
(bad)
and
call
inc
xor
ret
jbe
ret
jno
and
dec
cmp
and
mov
lods
xchg
movs
vucomiss
aaa
clc
and
jmp
cmp
mov
adc
cmp
(bad)
push
(bad)
popf
add
or
das
fld
ror
xchg
(bad)
push
add
xchg
or
cmp
mov
push
mov
not
call
out
fidiv
mov
mov
push
fsin
dec
mov
add
(bad)
es
sub
adc
inc
mov
fidiv
fcomp
xchg
cs
ud2
inc
sbb
shl
sbb
cmp
cmp
push
aad
push
sub
int
test
outs
int3
adc
mov
in
push
cwde
or
mov
mul
push
cmps
rcr
loopne
xor
out
xchg
aas
push
jmp
fimul
cmp
rcl
arpl
inc
clc
xchg
lea
sub
jno
cld
push
or
mov
xor
sti
out
sahf
push
fmul
outs
outs
std
add
xchg
call
(bad)
jmp
aad
repz
fnstenv
jp
lods
or
mov
rcr
jb
pop
lods
test
sub
jg
dec
sub
jecxz
into
ret
hlt
and
(bad)
ss
loope
test
cli
mov
jecxz
fcmove
xor
scas
cli
ror
push
inc
fstp
xchg
inc
in
or
xchg
mov
mov
rcr
fcmovu
test
test
and
mov
or
and
les
pop
and
pop
shr
xchg
cs
rol
lahf
ins
or
inc
dec
sbb
dec
mov
icebp
and
pop
xchg
inc
aam
inc
dec
mov
cmp
lock
mov
test
sbb
cwde
mov
and
and
adc
mov
cmps
es
arpl
xor
std
mov
sub
xchg
jmp
call
jns
retf
cli
xlat
jmp
adc
aad
cmps
sbb
sahf
pop
fs
sub
(bad)
leave
or
retf
lea
mov
push
push
pushf
push
scas
pop
movs
sbb
movs
fstp
cmp
data16
dec
adc
and
push
adc
hlt
int
mov
mov
xor
xchg
data16
aaa
xchg
mov
ror
inc
cmc
rcr
repnz
aaa
je
inc
loop
dec
xor
enter
outs
xlat
mov
ja
cmp
cmps
cmp
repnz
repz
je
out
scas
lea
mov
(bad)
leave
push
test
psubusw
call
jmp
mov
or
xchg
in
mov
test
sbb
movs
(bad)
pop
scas
pushf
sub
jecxz
scas
pop
pop
(bad)
ss
mov
lods
add
jno
push
pushf
add
outs
scas
xor
mov
fcmovbe
mov
or
popf
hlt
out
sbb
dec
push
push
push
fsubr
push
sub
add
outs
in
push
imul
sbb
lods
xchg
ins
ret
cdq
ror
jle
ret
inc
stc
inc
xor
push
lds
cmp
shl
repnz
xor
push
in
xor
mov
or
adc
movs
push
int3
arpl
cmp
shl
mov
das
loop
aaa
jmp
sti
mov
adc
push
pusha
pand
sub
(bad)
mov
dec
mov
and
push
xchg
jmp
in
cwde
mov
test
mov
out
mov
pop
popf
cmp
jo
mov
in
sbb
xor
and
mov
stos
test
cmp
imul
into
popf
adc
hlt
jo
call
and
push
cmc
(bad)
pop
jbe
popa
dec
loopne
mov
cs
in
push
push
aad
into
push
imul
or
add
sub
adc
scas
dec
dec
or
cmp
cmp
stos
mov
mov
iret
jp
fimul
cmp
shl
mov
adc
mov
cs
cdq
and
xchg
pop
test
rcl
add
fild
ins
jecxz
xor
inc
inc
inc
cmp
jnp
xor
sbb
mov
stos
ins
and
sbb
sub
jno
pusha
hlt
push
inc
pop
test
movd
and
jnp
add
mov
add
mov
push
cwde
std
pop
dec
cld
aad
pop
enter
fild
push
mov
xchg
and
jns
push
adc
and
cmps
shr
leave
mov
push
cmp
out
imul
mov
inc
arpl
mov
fld
ficomp
jo
push
mov
xchg
cmp
mov
lea
sbb
pop
or
in
sbb
test
sbb
mov
aad
sub
arpl
mov
adc
arpl
and
imul
in
push
adc
out
or
dec
mov
ja
call
jg
xor
adc
aas
push
ret
in
imul
push
retf
inc
push
scas
or
mov
stc
shl
mov
pop
sub
sbb
mov
fs
add
and
inc
lock
mov
cmp
and
loop
in
ret
call
push
(bad)
inc
push
lods
stos
leave
in
sbb
(bad)
jmp
cmp
scas
push
cmp
rcr
aas
xchg
adc
pop
push
add
in
dec
inc
pop
fnsave
rol
stos
jge
fdivr
shl
mov
jl
out
std
inc
xchg
sub
std
gs
mov
(bad)
sub
xlat
mov
mov
jg
call
add
sub
sub
jl
sbb
push
xchg
stos
loopne
cmp
mov
mov
inc
mov
mov
push
cli
mov
push
pop
cmp
jmp
mov
dec
sub
and
pop
sub
xchg
rcl
mov
adc
xchg
xor
movs
les
cmp
adc
xor
dec
cwde
repz
popw
in
pop
jp
dec
jo
in
not
xchg
mov
inc
jecxz
sbb
dec
test
adc
call
sahf
ss
call
add
push
adc
je
push
inc
fucomi
jmp
pop
loope
loope
cli
xchg
cmp
test
pop
inc
xor
xchg
in
xor
xor
or
xor
lock
cmps
jg
test
loop
daa
scas
jbe
lock
sbb
jne
loope
dec
push
pop
aad
add
xlat
lock
dec
daa
sub
les
or
lock
mov
push
test
inc
mov
pmaxsw
mov
fimul
jae
xor
cdq
fldl2t
push
mov
popa
out
lock
adc
jmp
mov
cmp
jno
es
leave
bndldx
test
cmp
mov
stos
call
mov
sub
ins
cmp
jae
retf
jmp
mov
inc
int
pop
sbb
mov
fwait
xchg
jecxz
cmp
pop
mov
dec
aam
vmovsd
dec
adc
add
in
lods
loopne
out
push
fwait
jns
xchg
add
cld
mov
sar
in
xor
cld
pop
cmp
scas
and
fst
repnz
pusha
xchg
and
mov
pop
mov
xchg
out
and
pop
xlat
mov
cmp
push
outs
and
adc
dec
outs
add
pop
int
nop
pushf
sbb
push
xor
retf
adc
sub
mov
ins
mov
fwait
cdq
sar
push
fistp
mov
inc
cmps
out
push
aas
inc
sub
xor
and
imul
lahf
mov
repnz
imul
mov
push
call
mov
push
mov
(bad)
xchg
mov
call
retf
(bad)
stc
stos
aad
adc
in
inc
in
xchg
loope
xor
mov
repnz
ftst
mov
sbb
sbb
mov
pop
adc
push
inc
inc
and
mov
sbb
lods
jo
push
jb
push
in
or
adc
xor
jmp
mov
add
pop
das
mov
adc
inc
inc
popa
dec
mov
pop
in
in
out
jae
mov
sti
(bad)
aas
cmp
ins
sub
rol
cwde
loopne
in
fwait
loopne
xor
stos
adc
jo
sbb
in
xchg
jg
movs
stc
aas
mov
outs
lods
dec
aad
adc
mov
jecxz
push
jnp
cli
push
(bad)
xchg
or
lods
push
aam
sbb
dec
push
push
xor
and
and
cs
aaa
cmps
xchg
adc
(bad)
add
fst
je
mov
jne
pop
and
aaa
lock
push
movs
mov
test
(bad)
cmp
cmp
adc
jb
dec
adc
(bad)
scas
fwait
mov
pop
cmp
outs
mov
cmp
push
mov
rcr
aaa
lock
mov
mov
inc
jp
dec
data16
and
gs
sti
out
cmp
in
cwde
mov
imul
inc
call
icebp
and
ffree
daa
xchg
adc
sub
std
xchg
stc
and
bound
(bad)
adc
jge
pop
nop
ss
lock
sbb
das
inc
push
sbb
retf
mov
mov
push
outs
rol
leave
sbb
(bad)
jns
int
adc
shr
pop
mul
jp
movs
mov
adc
(bad)
mov
push
(bad)
and
retf
inc
scas
mov
stos
add
jae
cli
jo
pop
sbb
sub
pop
(bad)
cmp
dec
push
lea
dec
in
cmp
bound
dec
jae
(bad)
or
jmp
and
enter
mov
push
dec
push
xor
hlt
ins
cmp
jns
js
addr16
xlat
inc
ss
out
scas
call
jg
out
lahf
mov
cmp
dec
cmps
call
outs
jecxz
loope
mov
add
(bad)
in
dec
add
aas
mov
aad
sub
inc
imul
mov
pop
(bad)
jns
or
cwde
jmp
clc
fsubp
mov
mov
pop
inc
sti
dec
sbb
jno
xor
xchg
shl
sti
mov
mov
mov
pop
cmp
pop
(bad)
jp
pusha
icebp
cmp
out
mov
adc
loope
add
int
push
ss
pop
cwde
mov
cmp
mov
rcr
add
push
xchg
shr
mov
inc
add
shl
movs
push
pop
repz
fnstsw
shl
mov
out
pop
push
xchg
int
ret
call
fisttp
inc
xchg
add
ret
cli
outs
sub
ins
shr
outs
mov
shr
push
add
imul
push
push
xor
jmp
imul
xor
rol
adc
pop
mov
(bad)
outs
movs
add
retf
lds
scas
cmps
pop
cld
xchg
lea
xchg
cli
out
pushf
ror
outs
or
pop
ins
leave
scas
outs
sbb
(bad)
or
pop
jmp
jl
scas
xchg
nop
cmp
push
iret
sbb
mov
ret
pop
mov
pop
(bad)
sbb
frstpm(287
add
fadd
es
iret
cmc
nop
adc
mov
sbb
mov
push
rcr
ror
leave
or
imul
movs
loop
sub
dec
pop
test
jne
cmc
mov
mov
add
sub
fst
out
adc
pop
mov
mov
mov
or
enter
pop
fwait
jne
dec
dec
cmp
push
jl
push
sti
test
sbb
mov
push
outs
scas
arpl
mov
inc
nop
xor
push
or
rcl
add
mov
test
outs
fwait
add
(bad)
rol
out
into
jmp
cmps
push
(bad)
enter
test
add
inc
pop
pop
dec
jbe
outs
nop
fsubp
push
out
test
mov
mov
jp
cmp
stos
mov
and
enter
jmp
or
repnz
aas
into
adc
jne
shr
push
aas
repz
cmc
mov
fidivr
popf
ss
mov
(bad)
icebp
push
mov
call
mov
test
into
mov
out
fsubrp
or
cdq
adc
add
pushf
mov
mov
lods
jg
jbe
lods
fild
jo
out
cmp
imul
push
cli
int3
adc
pop
sub
scas
cli
outs
cmp
aaa
lock
pop
mov
test
sti
mov
xchg
push
pop
pop
popw
and
mov
int3
jl
xor
xchg
and
mov
xor
xor
and
call
cli
idiv
add
cmp
ins
adc
push
stos
shr
push
jne
aam
sub
ret
in
test
xchg
pusha
sbb
pop
test
fnstsw
cmp
int
stc
icebp
xchg
push
jne
outs
outs
pop
cmps
inc
and
das
add
pop
xor
push
and
inc
xchg
fwait
cmp
mov
(bad)
daa
ror
mov
cmp
mov
rcl
aaa
add
test
adc
or
in
mov
sti
fidivr
dec
inc
pop
in
xor
or
sub
mov
adc
sar
aam
fxch
xchg
pop
sbb
mov
int3
sbb
or
xchg
pop
stos
outs
xchg
jmp
mov
mov
xchg
adc
movs
movs
(bad)
push
addr16
cwde
pop
lds
xor
and
sti
(bad)
cmps
hlt
lahf
jl
fmul
in
mov
add
or
scas
into
adc
jle
jnp
inc
aas
fsubr
pushf
mov
mov
popa
mov
(bad)
sbb
jo
and
mov
sub
add
and
cmps
xlat
lahf
inc
stos
jae
mov
adc
cmp
mov
stos
test
aaa
jns
pop
adc
ins
mov
sub
(bad)
ficomp
push
lds
ror
inc
sbb
and
adc
inc
cli
push
int3
pop
int
push
sub
cmps
adc
mov
xor
imul
adc
(bad)
out
xor
or
inc
or
and
dec
fmul
jns
jp
xchg
lds
adc
sti
xchg
stc
mov
inc
(bad)
xchg
adc
dec
cmps
shl
mov
inc
pop
pop
clc
adc
stc
ret
xchg
add
jmp
lods
pop
iret
repnz
aas
inc
push
cmps
and
sub
arpl
fdivp
test
inc
mov
fldenv
ret
xor
outs
adc
cdq
and
dec
in
ins
adc
cdq
aam
jg
es
dec
stos
lods
shl
fbstp
mov
or
mov
leave
xchg
inc
outs
fs
outs
or
sbb
enter
pop
fst
or
jle
mov
fcomp
pusha
cmp
pop
adc
std
push
ins
xchg
pushf
sbb
inc
xor
es
(bad)
repnz
enter
ret
add
mov
loope
pop
icebp
fst
test
cmp
mul
mov
and
loop
pusha
adc
rcl
std
pusha
jle
(bad)
jg
inc
jmp
loope
pop
mov
(bad)
lds
(bad)
or
retf
sub
mov
ins
loop
bound
call
fprem
push
data16
stos
push
dec
call
sub
adc
jnp
jle
pop
je
dec
jmp
push
jo
cmp
mov
mov
push
in
leave
cmc
mov
es
pop
bound
aad
push
popa
das
mov
xchg
jge
(bad)
inc
and
dec
xchg
add
pushf
imul
pop
mov
push
loopne
idiv
ret
pop
retf
test
mov
push
jl
add
sahf
fwait
test
imul
call
push
mov
push
add
lds
mov
add
jmp
add
fist
pop
inc
mov
dec
mov
std
jno
jb
rcr
shl
in
je
and
repz
cmps
mov
test
dec
(bad)
xor
pop
inc
fst
mov
or
js
cmp
fadd
int3
push
mov
xor
jbe
(bad)
mov
in
iret
jnp
add
cld
clc
cmps
into
push
not
scas
ret
sub
add
js
lahf
or
aaa
adc
gs
push
mov
shl
int3
fcomp
xor
fdivr
stos
test
in
mov
aaa
mov
xor
pop
mov
imul
push
div
cdq
cmp
add
mov
mul
std
es
mov
icebp
pop
jb
cdq
in
jp
lock
jno
sbb
or
hlt
leave
push
xchg
dec
jbe
push
inc
sbb
push
call
xchg
push
movs
mov
cmps
or
adc
leave
js
ficom
mov
mov
jnp
dec
pop
pop
inc
addr16
aaa
adc
fucomip
cmp
xchg
addr16
jne
in
call
clc
cmp
das
mov
inc
arpl
cmp
test
arpl
and
test
pushf
out
push
js
data16
mov
mov
mov
ret
or
mov
pop
pop
jo
adc
stc
push
movs
cmps
sbb
(bad)
inc
mov
and
push
fidiv
mov
arpl
pop
repz
lds
or
movs
fldcw
cmp
leave
loope
adc
xchg
and
xchg
sbb
fcomp
cmp
mov
xor
or
dec
mov
sub
jo
imul
inc
sub
push
fwait
popf
jae
fadd
popf
inc
xchg
cmp
(bad)
popa
fnstcw
pop
cmp
add
(bad)
repz
retf
inc
mov
adc
lods
dec
jmp
mov
jl
xlat
ja
pop
xchg
push
sub
cmp
popf
and
cmps
mov
das
jecxz
sbb
bound
loope
fimul
(bad)
xsha1
cmps
lock
xor
leave
or
setae
out
jecxz
inc
mov
arpl
loop
inc
push
xchg
inc
scas
jns
mov
imul
sbb
push
and
es
sub
add
pop
jb
cmps
inc
push
js
mov
sbb
xchg
xchg
jnp
and
push
mov
repz
ja
js
mov
pop
shl
push
sub
lods
out
xchg
icebp
popa
mov
push
int
out
jb
stc
stos
push
jae
and
xor
rol
std
not
mov
rcr
(bad)
ror
ins
or
imul
jne
mov
pop
mov
lock
and
push
mov
ret
cmc
ins
cli
or
cli
(bad)
cmp
fwait
pop
pop
arpl
cmp
dec
jl
cmp
pop
jg
shr
(bad)
mov
pusha
pop
ds
xchg
or
(bad)
imul
out
cdq
adc
sub
dec
cmc
adc
sbb
mov
adc
and
retf
ret
mov
(bad)
pop
cmp
xor
cdq
cmp
call
stc
adc
xchg
mov
pop
or
int
das
cmps
push
mov
fucomi
out
and
hlt
pop
lds
push
out
inc
xor
out
dec
sub
xor
cmp
call
cmp
mov
nop
push
xor
in
loop
sahf
(bad)
adc
mov
in
popa
repz
out
hlt
bound
ds
fcmovb
pop
or
push
cmp
cmp
pop
(bad)
movs
adc
hlt
jnp
(bad)
lods
in
movs
cmps
cmp
lds
sub
rcl
push
sbb
mov
cmps
dec
add
or
push
cmps
or
and
jmp
add
add
dec
fiadd
fmul
shl
push
sub
test
dec
dec
outs
adc
xor
movs
and
dec
and
inc
xor
dec
or
(bad)
std
fwait
xchg
or
out
sbb
xchg
mov
sbb
mov
mov
push
bound
(bad)
jmp
add
sub
pop
mov
retf
mov
inc
std
sub
mov
xor
in
cmp
cmp
mov
push
fbld
imul
ret
xchg
test
imul
cmps
inc
dec
clc
(bad)
test
and
sub
push
xchg
fld1
call
and
jnp
cld
jmp
in
sti
popa
repz
fcomp
pop
add
stos
cs
bsr
das
std
rol
lods
cdq
jge
and
ins
or
mov
push
sbb
add
mov
sahf
in
pusha
xchg
into
push
push
sbb
test
ins
jmp
cmp
cld
lods
lea
adc
push
mov
lea
sahf
lock
in
xchg
out
sub
pop
sbb
jns
adc
ins
ins
pop
(bad)
mov
sahf
loop
nop
(bad)
jge
cmp
jno
cmp
mov
jbe
test
sub
or
mov
rcl
pop
xchg
lods
adc
adc
push
mov
enter
in
popf
cdq
pop
call
mov
hlt
rol
cmp
lea
aam
call
fnsave
dec
sar
popf
retf
xor
jnp
mov
add
cdq
dec
jmp
cmp
jmp
pop
neg
call
cmc
dec
mov
xchg
daa
jl
clc
pop
(bad)
jp
stos
jmp
mov
hlt
movs
test
sbb
gs
push
daa
cmp
jno
or
aam
mov
sar
leave
addr16
jae
mov
mov
add
sub
and
xchg
pop
or
and
addr16
arpl
daa
leave
add
pop
(bad)
pop
or
out
je
add
ret
icebp
cmp
js
jle
push
retf
pop
mov
les
mov
xor
push
push
pop
ret
push
out
xchg
pop
jp
(bad)
dec
shl
imul
out
(bad)
mov
(bad)
lods
mov
hlt
add
outs
mov
pop
inc
dec
std
cmps
(bad)
ds
(bad)
cli
lods
xchg
test
lock
adc
test
mov
and
jp
sbb
add
rcl
inc
or
fs
add
mov
jne
cmc
and
inc
gs
sbb
in
mov
adc
outs
clc
mov
push
sub
cmp
mov
mov
loope
ins
xchg
adc
call
sub
out
xor
mov
movs
add
mov
gs
fisttp
cli
shl
daa
xchg
pop
repnz
fstp
or
aad
call
xchg
mov
inc
lds
adc
jecxz
hlt
inc
mov
xchg
aad
inc
rcl
daa
mov
mov
cmps
xor
pop
mov
inc
jmp
push
jg
js
mov
iret
jmp
push
adc
adc
lods
add
push
cld
pop
icebp
les
les
arpl
loope
stos
test
std
sbb
mov
scas
sub
or
pop
ja
cmps
pop
push
into
clc
loopne
sub
mov
in
cmp
sbb
aad
or
adc
xchg
clc
mov
cli
push
test
popf
ja
cmps
scas
aas
dec
cmp
mov
das
call
aad
cmp
int
jmp
or
clc
out
mov
mov
gs
dec
inc
cli
aam
iret
push
(bad)
mov
lea
and
aad
adc
fisttp
das
(bad)
adc
and
movs
loop
sti
sbb
mov
les
jae
cmp
popf
test
cmp
addr16
inc
jnp
jle
xchg
in
call
push
sub
push
push
fcomi
mov
(bad)
jnp
adc
jnp
ror
ss
mov
ins
inc
adc
bound
sub
dec
fsub
xchg
jb
jle
pop
iret
mov
lds
mov
adc
pop
clc
push
les
movs
mov
pop
(bad)
stos
sub
mov
jbe
dec
xor
rol
mov
sub
pop
cmps
bound
xchg
jle
mov
mov
pop
dec
retf
popf
jmp
in
xor
retf
add
lods
pop
push
scas
pop
push
mov
xlat
call
mov
cmc
mov
lock
in
cmps
lods
or
loopne
pushf
rol
aad
or
pop
fwait
pusha
or
jp
sti
mov
movs
loope
dec
xor
and
or
dec
mov
retf
or
fldcw
mov
sbb
mov
and
cmp
jmp
and
xor
sbb
outs
cmps
push
adc
sbb
mov
xor
adc
stos
(bad)
lahf
in
int3
imul
std
sti
add
and
call
and
dec
into
sub
pop
loop
push
or
push
push
and
das
push
retfw
mov
xor
mov
test
lea
xchg
pop
push
push
push
or
int
shl
sbb
out
mov
addr16
call
mov
std
mov
shl
jbe
das
inc
mov
outs
mov
rcl
movs
cld
dec
mov
rep
loop
push
sub
stos
mov
jae
pop
out
mov
xchg
add
sub
xchg
retf
hlt
movs
push
push
jb
xchg
sbb
test
mov
sbb
popa
add
mov
ds
add
mov
cdq
sub
hlt
enter
inc
mov
pushf
arpl
or
data16
(bad)
jo
ret
jbe
sar
test
repnz
je
mov
and
jne
scas
cmp
xchg
sub
sbb
add
fbld
not
rcl
fldenv
jecxz
push
adc
sar
mov
int
das
fistp
retf
lods
mov
or
mov
cmp
xchg
shl
or
fld
xchg
push
mov
int
or
test
mov
sub
lahf
sbb
shl
stc
add
push
repz
xchg
push
xor
add
push
push
aaa
sbb
test
shl
in
jno
imul
push
sub
xor
jns
or
data16
sub
movs
mov
sbb
adc
retf
jbe
jmp
cld
loopne
sbb
dec
bound
push
xor
int
adc
repz
push
push
mul
sti
or
inc
loop
ret
shr
popa
mov
icebp
adc
mov
pop
mov
dec
sbb
adc
aad
and
ror
stos
(bad)
retf
dec
xchg
cdq
retf
leave
add
push
cmps
cmp
push
js
or
(bad)
cmp
mov
sub
and
sub
xchg
imul
add
test
imul
cmp
mov
pop
adc
imul
arpl
stos
cmp
popf
dec
push
inc
push
lods
arpl
push
mov
xlat
test
out
lock
rol
rep
xor
bound
dec
jb
rcr
cmp
ss
add
dec
out
lahf
in
cmps
loope
jb
mov
inc
aam
pop
fwait
push
pop
fidiv
in
push
shl
add
shr
xchg
sbb
aaa
fnstcw
push
scas
arpl
dec
ror
xchg
add
jmp
add
mov
dec
sub
sbb
xchg
loop
lods
aam
fisubr
cmp
push
cmp
cmp
int
xchg
xor
xor
pop
sahf
jl
outs
cmp
add
fbstp
xchg
cmps
pop
jno
scas
shr
in
mov
mov
rcl
dec
inc
xor
mov
sti
dec
pop
xchg
movs
or
xor
loopne
fmul
xchg
pop
retf
mov
into
xchg
std
mov
mov
sbb
stos
aaa
jnp
cmp
fwait
mov
cmp
(bad)
gs
ds
jp
pop
shl
xor
popa
mov
dec
or
imul
sub
fcomp
mov
xlat
ret
xchg
mov
(bad)
and
inc
xor
lock
fwait
popa
xchg
shr
nop
(bad)
sahf
xchg
and
lea
jl
mov
mov
test
or
shr
(bad)
in
sahf
jge
in
std
outs
sbb
bound
inc
push
ds
add
push
lds
jbe
addr16
push
sub
mov
mov
fild
sbb
jecxz
dec
lods
inc
push
and
cli
pushf
fld
jg
sub
(bad)
cmps
in
add
pop
sub
xor
aaa
fwait
int3
pop
and
xchg
rcr
cmp
(bad)
clc
xchg
sub
xlat
inc
cmp
out
xor
ror
loopne
repnz
mov
or
mov
xchg
pusha
iret
and
(bad)
mov
xchg
add
xor
xor
adc
aaa
sbb
xor
pop
aad
repnz
cmp
fcmovnu
inc
ins
sti
lds
shl
xor
jb
cmp
xor
push
in
push
mov
fcomp
or
pop
movs
inc
xchg
pop
sub
jae
or
mov
fbld
xchg
repz
lock
jl
add
sbb
pop
xchg
jo
push
jmp
and
repz
inc
call
jmp
inc
dec
or
mov
pop
mov
and
jecxz
arpl
mov
loope
or
or
mov
cmp
pop
push
mov
imul
cs
sub
push
inc
or
jns
inc
fnstenv
ins
popa
dec
outs
add
push
or
cmp
inc
push
ins
xchg
xchg
push
and
(bad)
dec
pop
fs
or
cmp
add
pop
sbb
pushf
int3
aam
outs
sbb
and
mov
sbb
sti
inc
pop
pusha
pop
scas
jl
inc
daa
push
sar
xor
das
ins
jge
cmp
retf
xchg
dec
add
and
imul
or
push
(bad)
shl
push
jl
ror
fidivr
add
sub
test
in
cld
sub
dec
sbb
adc
aad
cmp
pop
cmp
daa
test
xor
inc
fimul
mov
lods
or
pusha
dec
jbe
mov
cwde
aam
xchg
mov
adc
mov
retf
mov
int
aam
arpl
repnz
and
pop
and
xor
clc
xchg
repnz
or
inc
lock
loope
adc
xchg
mov
xchg
inc
leave
gs
pop
mov
(bad)
data16
jge
dec
ds
mov
test
stos
mov
sub
int3
sbb
mov
add
adc
mov
mov
in
add
(bad)
fwait
cmp
pusha
cs
push
or
mov
jp
pop
add
xchg
xlat
in
test
out
adc
add
dec
test
or
jp
and
dec
jl
jp
mov
xchg
xchg
hlt
push
or
shl
fst
mov
lods
mov
push
push
inc
sbb
stos
es
dec
cmp
adc
xchg
dec
(bad)
xchg
lahf
mov
lahf
mov
push
or
sti
and
fisttp
mov
xor
pop
or
fst
stos
stos
pop
add
mov
les
sbb
jno
int3
mov
inc
or
cmp
daa
lods
stos
and
test
adc
jecxz
addr16
sub
mov
push
sub
sub
pop
jo
push
mov
cmp
cmp
mov
adc
mov
mov
ja
xor
jg
mov
sub
lods
and
rol
mov
imul
and
test
jp
push
adc
pop
mov
push
sbb
mov
(bad)
out
push
sub
sub
add
push
mov
jmp
jnp
out
jmp
ins
int
test
(bad)
xor
call
inc
mov
loope
mov
sub
aam
mov
or
mov
cmp
push
or
ja
push
imul
movs
imul
int3
aaa
cmp
jb
mov
shl
outs
fidivr
inc
cmp
adc
loop
push
push
or
push
mov
loopne
adc
test
pop
adc
aaa
test
call
mov
iret
dec
outs
xor
data16
adc
push
and
test
leave
cmps
dec
aad
not
sbb
ja
jno
(bad)
adc
dec
loopne
inc
sar
dec
je
mov
push
inc
push
dec
xor
mov
int3
dec
call
nop
inc
adc
lods
push
mov
mov
xchg
xlat
outs
(bad)
in
mov
mov
pop
add
push
cmovs
cmc
jo
cmp
jbe
stc
(bad)
xor
aad
mov
mov
inc
ja
dec
dec
mov
gs
add
test
mov
sub
jmp
int
ja
inc
ja
sub
jg
adc
inc
dec
cmp
pushf
push
and
sub
or
gs
fwait
and
stos
xor
and
outs
mov
popa
inc
cmp
cmp
adc
mov
hlt
rol
xchg
mov
jg
mov
pop
and
popf
pop
xchg
inc
les
out
aad
imul
xor
xor
imul
adc
cwde
scas
and
(bad)
mov
mov
js
jmp
inc
sub
xor
and
inc
pop
push
and
daa
sub
xchg
es
cmp
and
ficom
pop
or
xchg
sub
mov
jge
(bad)
in
js
leave
nop
or
mov
push
lahf
addr16
cld
mov
cmps
adc
jno
push
jne
cdq
mov
mov
cmp
out
xchg
fimul
mov
mov
call
rol
xchg
jge
sbb
(bad)
pushf
mov
xchg
hlt
out
hlt
popa
xor
ret
imul
pop
add
xlat
inc
cmc
stos
sbb
mov
out
push
jmp
test
adc
push
dec
sbb
fucom
cwde
jl
sbb
out
xor
mov
jecxz
repnz
inc
imul
fld
jns
and
mov
cmp
mov
dec
sub
imul
and
xor
movs
xlat
jmp
jmp
stc
mov
pop
xchg
xchg
arpl
retf
in
xchg
sbb
imul
sti
mov
xor
lock
popa
enter
push
loop
sbb
or
das
cmp
call
lds
pop
fs
bound
or
scas
cdq
mov
stc
mov
enter
push
mov
cwde
mov
jo
lea
clc
adc
int3
out
repz
ret
cmp
stos
aaa
movs
popa
pop
dec
cmpxchg
enter
rcl
pop
push
fsub
and
inc
int3
fild
sbb
xchg
mov
and
outs
pushf
out
daa
gs
cmp
xchg
add
xchg
fld
push
int
test
sub
pop
into
(bad)
in
mov
nop
es
sub
jle
stc
jge
fadd
(bad)
cwde
xor
pop
hlt
or
icebp
add
aas
jmp
or
fcomi
mov
inc
(bad)
(bad)
add
push
adc
in
sub
outs
add
sbb
fidiv
adc
ret
add
lea
push
retf
int
adc
jb
push
ins
bnd
test
add
add
pusha
and
aas
pop
mov
pusha
pop
(bad)
pop
ins
xchg
std
sti
sbb
jb
mov
bound
pop
jne
lods
cmp
inc
je
fcomip
mov
jo
(bad)
fst
sbb
pop
dec
pop
xlat
and
xchg
jmp
and
xor
dec
int
pusha
out
ds
or
push
rol
adc
rol
neg
addr16
xor
mov
scas
(bad)
sub
jns
adc
mov
test
addps
imul
xchg
push
xor
cs
repz
mov
fisub
sbb
cmc
dec
(bad)
iret
fwait
pop
pandn
sub
ss
cmp
or
jns
mov
es
scas
scas
imul
fs
mov
xor
in
dec
gs
xor
rcl
sub
cs
pushf
push
xchg
pop
or
cs
push
cmp
sub
les
inc
jnp
mov
mov
mov
xchg
inc
addr16
mov
pop
inc
mov
xchg
sbb
sar
jmp
adc
les
std
stc
xchg
cwde
mov
pop
inc
scas
loopne
fisttp
je
loopne
inc
rol
jecxz
pop
sub
cld
or
cmp
sbb
mov
cwde
adc
aad
mov
push
in
std
inc
aas
sti
sti
out
dec
ds
dec
ins
sub
push
cmp
enter
mov
jl
add
jns
pop
pushf
mov
and
pop
push
rep
cdq
xchg
call
idiv
mov
mov
outs
ss
inc
loope
inc
out
ror
lds
dec
rol
xor
leave
addr16
xchg
sbb
fild
in
mov
(bad)
aam
sbb
mov
dec
out
pop
mov
inc
je
push
push
mov
push
sbb
sub
je
adc
scas
pop
shl
mov
mov
cmp
fstp
enter
cmp
and
pop
xchg
ror
loop
ins
add
jae
es
pop
dec
aad
sbb
mov
enter
in
push
rcl
leave
sub
adc
cdq
mov
fidiv
sahf
and
jmp
test
cld
loope
cmp
push
cli
js
sahf
xchg
lea
or
lahf
cmps
lods
push
div
mov
add
dec
push
stos
push
pop
outs
outs
ret
jl
jl
rcl
inc
cmp
addr16
ror
lock
lea
mov
xchg
icebp
xchg
sar
push
sbb
push
clc
and
aaa
push
sar
mov
iret
mov
push
inc
mov
adc
sub
call
adc
outs
test
in
mov
stos
jns
cmp
test
enter
js
int
(bad)
ror
jmp
mov
pop
lds
pop
movs
ins
lahf
and
outs
dec
inc
mov
push
div
into
jns
push
adc
add
push
cdq
sub
sbb
xchg
aas
xor
mov
sub
push
dec
retf
sahf
jge
mov
sbb
xor
(bad)
in
(bad)
dec
xchg
inc
xor
jp
mov
mov
jnp
loopne
fisubr
jg
mov
fst
jl
mov
fdivr
fimul
cli
mov
test
sbb
cwde
mov
push
or
mov
xchg
(bad)
or
les
jbe
or
or
pop
dec
mul
(bad)
sar
out
std
mov
pop
out
out
(bad)
dec
ds
comiss
sbb
inc
call
nop
sbb
movs
sub
mov
or
jne
xchg
stc
and
inc
in
xor
sub
sub
mov
cmp
ret
retf
dec
mov
add
push
scas
add
(bad)
loopne
retf
shr
dec
dec
jmp
imul
lods
aas
xchg
pop
mov
xchg
sub
cmp
dec
mov
sub
idiv
inc
test
mov
dec
popa
mov
and
cwde
jg
pusha
and
sti
shr
mov
jb
push
mov
pop
xchg
push
mov
bound
ja
xor
outs
cmps
mov
lss
push
(bad)
call
xchg
out
aad
popa
and
adc
sti
jmp
aas
jae
add
test
dec
out
hlt
inc
xchg
xchg
mov
and
mov
mov
add
or
adc
lds
scas
cld
retf
push
push
jmp
dec
ret
loope
sub
fild
or
scas
jne
cwde
loope
mov
xchg
movnti
sti
out
cld
sub
jns
pop
adc
loop
scas
lods
sbb
hlt
cmp
mov
stc
aaa
inc
push
mov
js
push
cmp
outs
in
adc
jo
adc
push
jae
xor
sub
loope
xor
push
push
repz
inc
inc
scas
xor
test
icebp
push
or
in
shl
nop
movs
xor
adc
push
xor
cmps
mov
out
div
sbb
jp
nop
push
inc
aad
jecxz
outs
xchg
pop
nop
in
and
ja
ret
push
mov
enter
call
and
xor
(bad)
inc
pop
adc
neg
imul
lea
ror
lahf
(bad)
push
cwde
mov
or
fs
int
mov
(bad)
dec
call
cmps
imul
push
push
or
scas
addr16
or
mov
fwait
push
jle
lods
cmp
dec
push
call
cli
push
popa
mov
cmc
cmp
mov
shl
mov
pusha
fdiv
inc
loop
sub
ins
popa
and
mov
outs
pop
and
pop
push
fbstp
ss
in
mov
push
or
or
imul
stos
jns
fdivrp
inc
sbb
rol
shr
loop
ins
sbb
in
and
call
(bad)
xchg
outs
mov
xor
movs
adc
pop
daa
repnz
dec
mov
add
add
pop
add
(bad)
push
adc
mov
(bad)
sub
dec
add
sub
pusha
xor
xchg
and
fisubr
xor
cmp
xor
adc
add
push
mov
adc
inc
jl
movs
movsx
cmc
ja
int3
jle
lods
ret
ret
mov
cmp
out
hlt
imul
mov
inc
stos
in
xor
hlt
jl
inc
mov
out
cmc
scas
dec
push
idiv
dec
mov
outs
stos
add
in
sbb
cmps
pushf
pushf
dec
leave
add
fistp
clc
sbb
inc
push
push
adc
mov
xchg
loop
popa
repnz
(bad)
sbb
mov
outs
mov
js
sbb
mov
in
add
add
imul
inc
aaa
test
stos
test
and
add
leave
cmp
fld
std
iret
and
scas
jo
out
cmp
pop
repnz
and
enter
xchg
mov
pop
repnz
sbb
push
jmp
mov
and
adc
xor
movs
mov
inc
scas
ss
fimul
addr16
pop
fstp
inc
jp
lahf
jge
fwait
arpl
int
not
out
out
dec
lahf
imul
add
xor
stc
push
lock
adc
sbb
test
add
or
inc
hlt
daa
stc
cmp
fidivr
aaa
(bad)
mov
ja
inc
fild
mov
xor
stc
pop
cs
sbb
xor
sub
pop
clc
dec
sbb
sub
sbb
or
adc
mul
inc
jg
xchg
add
cmps
pop
push
aas
inc
xlat
sar
loopne
adc
inc
rcr
cmp
jl
rcr
fsubr
aas
movs
fwait
je
push
or
pop
out
add
ret
jle
pop
jmp
push
xchg
not
and
sub
unpcklps
shl
push
fiadd
hlt
adc
das
outs
fisubr
inc
add
lods
shl
fmul
push
jo
xchg
ins
call
inc
sub
push
ror
in
stos
data16
pop
cmp
aad
xor
add
add
mov
imul
aad
sub
inc
xor
idiv
xchg
jmp
pusha
shl
retf
xor
push
jbe
push
push
jl
gs
movs
cmp
mov
mov
pusha
pop
mov
mov
cli
movs
scas
out
retf
jno
lods
mov
xlat
mov
pop
out
jns
sbb
jbe
mov
mov
mov
pop
(bad)
push
ret
or
xchg
jae
jo
outs
fisttp
(bad)
pushf
cld
in
ror
add
leave
and
xor
in
in
inc
jae
sar
sbb
mov
sbb
iret
das
gs
mov
xchg
out
sbb
lea
cmp
jecxz
mov
enter
(bad)
add
lahf
xor
jmp
adc
pusha
into
mov
xchg
out
cwde
mov
(bad)
scas
stos
addr16
ja
xchg
jbe
xchg
push
mov
(bad)
mov
(bad)
rep
mul
ret
pop
ret
test
mov
lea
cmp
cli
aad
push
clc
icebp
movs
test
sbb
sbb
loopne
jne
add
pop
(bad)
mov
iret
loopne
popa
stos
ret
xor
cmp
lods
ss
mov
aad
mov
xchg
xchg
lods
jmp
cmp
mov
and
imul
shl
outs
(bad)
cdq
popa
mov
or
pop
sub
rol
push
mov
nop
daa
ror
cs
cld
std
out
inc
scas
int
mov
cmp
push
pop
and
or
xor
and
fmul
mov
pop
push
push
loope
inc
bnd
arpl
fild
test
mov
add
add
mov
int
lods
shr
pop
inc
push
xor
mov
les
xlat
pop
lds
adc
add
in
gs
out
in
(bad)
bound
mov
cli
jno
adc
jno
jno
dec
xor
sub
fcomp
sbb
push
sub
stc
xchg
repz
rcl
nop
in
std
mov
pop
repnz
add
add
cmp
pushf
pop
js
aad
xchg
test
mov
adc
pop
push
mov
neg
push
mov
bound
push
adc
push
jle
xchg
mov
mov
or
les
jnp
xchg
leave
int3
pop
in
fild
out
lds
in
sbb
xchg
aas
out
repz
sahf
out
push
cld
out
mov
dec
std
out
iret
(bad)
lahf
adc
mov
in
push
ins
retf
mov
jge
movs
or
fst
stos
push
xlat
sbb
dec
or
mov
jmp
imul
jne
mov
mov
in
inc
cmp
imul
ins
inc
xchg
ja
or
out
fnstcw
inc
or
stos
jb
lods
stc
inc
adc
fwait
rcl
stos
jmp
mov
push
ret
lods
stos
push
pushf
jmp
cmp
xor
lahf
hlt
aas
sub
mov
cs
fdivp
movs
jmp
push
test
stos
clc
mov
add
outs
sbb
lahf
movs
jae
addr16
hlt
push
mov
mov
js
rcr
sub
push
out
in
mov
imul
add
fdiv
xor
into
lea
popf
(bad)
adc
pop
fwait
lods
enter
jp
pushf
cs
inc
jmp
fstp
mov
shl
fwait
ds
jnp
dec
es
fisubr
dec
push
and
jecxz
fidivr
repz
adc
fist
push
push
jnp
mov
lods
into
imul
xchg
addr16
idiv
mov
int
mov
dec
sbb
fisttp
mov
(bad)
pop
xor
push
(bad)
and
mov
ja
icebp
scas
sub
call
sub
sub
outs
scas
cmp
or
xchg
scas
fbstp
sbb
jmp
mov
cli
jae
frstor
mov
mov
mov
(bad)
(bad)
mov
xchg
stos
adc
ja
push
pop
pop
mov
xor
push
or
repz
pop
mov
scas
sub
sub
loopne
inc
mov
cs
sub
sub
(bad)
adc
pop
push
ret
sub
mov
sti
and
cmp
mov
sub
(bad)
scas
cmp
push
fs
mov
jno
add
test
repnz
add
xor
push
mov
or
inc
or
fs
adc
es
mov
push
sbb
add
mov
repnz
jne
push
lock
cmps
fcomp
test
ja
aam
inc
sub
dec
sub
sahf
lock
mov
ds
into
dec
xchg
stos
(bad)
in
stos
xchg
and
daa
retf
sti
jb
in
(bad)
pushf
or
push
mov
loop
test
inc
scas
stos
retf
pushf
out
cwde
push
xlat
pop
int
mov
xor
in
stos
sahf
and
cmp
mov
pop
not
mul
jb
arpl
addr16
iret
push
ret
js
jnp
cmps
mov
data16
mov
stos
mov
(bad)
test
in
stos
pop
adc
retf
or
mov
sbb
not
sbb
pushf
out
cwde
push
iret
mov
mov
mov
iret
aad
not
dec
nop
repz
(bad)
push
dec
fst
dec
into
ja
push
or
mov
das
xchg
stos
cmps
jb
pop
jb
arpl
sti
jmp
and
jae
xlat
clc
cld
div
iret
iret
sahf
fcmovne
fdiv
cwde
retf
or
cmp
mov
cwde
stos
adc
jmp
in
mov
int
ja
imul
scas
jb
test
dec
xchg
pushf
out
cwde
stos
adc
add
xchg
stos
in
repz
inc
fdiv
retf
jb
pop
jb
arpl
xor
div
outs
das
xchg
pushf
out
cwde
stos
adc
sbb
inc
xchg
imul
arpl
sti
repnz
out
adc
sbb
push
fcomip
xchg
in
sbb
arpl
lea
xchg
pushf
out
cwde
push
xlat
cdq
addr16
sahf
cmc
jl
(bad)
repz
sbb
push
dec
nop
repz
arpl
imul
out
repz
fisubr
inc
sub
sbb
fwait
loop
(bad)
out
or
add
es
add
and
test
mov
fimul
sahf
cli
(bad)
xchg
std
aaa
push
cld
adc
sbb
push
sub
pop
mov
push
(bad)
call
jle
iret
ficomp
daa
call
jecxz
popf
push
inc
aad
push
add
(bad)
ficom
sub
dec
mov
hlt
imul
jo
sub
adc
xor
cmps
xor
push
jg
sbb
fsub
sub
pop
add
shl
push
push
jecxz
sub
push
mov
aad
pop
sbb
push
jecxz
mov
push
lea
pop
xchg
(bad)
xor
mov
clc
inc
pop
push
fwait
(bad)
mov
js
(bad)
mul
test
jne
pop
pop
ja
movs
jno
ins
fadd
pop
js
ins
cmc
iret
mov
hlt
pusha
leave
jle
aaa
jmp
test
lea
aaa
out
outs
je
aas
adc
jle
fimul
(bad)
sti
sar
xor
ds
jmp
icebp
push
xor
add
test
repz
nop
mov
icebp
dec
xor
mov
pop
test
dec
jecxz
aad
and
sbb
push
dec
jecxz
xor
mov
imul
jns
into
inc
cli
push
sbb
mov
(bad)
xor
lods
(bad)
jmp
and
push
jl
adc
xor
jne
xchg
dec
xor
mov
xchg
sub
push
cdq
shl
xor
ds
rol
jle
shl
push
dec
lock
(bad)
in
cmc
int
xor
call
dec
ret
(bad)
das
dec
shr
lds
dec
ret
sahf
rcl
sbb
jecxz
mov
mov
aaa
iret
push
(bad)
push
cmp
outs
lock
icebp
mov
lock
aaa
push
push
popf
sbb
dec
xor
xor
push
add
jnp
jge
(bad)
fucomp
enter
mov
push
aaa
stos
(bad)
fst
add
or
outs
(bad)
mov
das
call
das
out
push
xchg
mov
mov
div
mov
jns
iret
hlt
jns
scas
jle
dec
loop
scas
xor
pushf
jecxz
jne
adc
div
inc
retf
jge
imul
rol
mov
push
mov
fmul
aas
add
mov
ss
arpl
dec
sbb
xlat
cmp
icebp
sub
xor
popa
ja
dec
fnsave
inc
aam
ds
mov
xchg
idiv
ret
nop
jmp
icebp
pop
mov
mov
push
adc
sub
add
jg
sbb
sub
mov
xor
cmp
fsubp
pop
adc
inc
scas
mov
xchg
cmp
ds
mov
sti
cmp
out
fwait
sar
fbstp
jecxz
lea
out
sub
xchg
aaa
repnz
add
js
out
arpl
ret
or
test
or
test
pop
jno
scas
enter
ret
adc
mov
add
mov
addr16
inc
mov
test
lock
ins
lds
or
jecxz
out
mov
loop
pop
push
into
push
mov
adc
pop
loopne
xor
xchg
(bad)
push
mov
mov
mov
jecxz
pop
mov
lods
mov
push
mov
add
pusha
or
adc
pop
mov
push
pop
xchg
lods
sub
fimul
sub
or
rcl
add
sbb
pop
sub
stc
lods
pop
icebp
pop
leave
lock
cwde
(bad)
jg
dec
out
inc
mov
or
mov
jmp
cmp
xor
inc
cs
iret
out
das
les
xchg
mov
mov
mov
cs
and
cmp
xchg
retf
ins
cmp
fstp
pop
fiadd
sti
sbb
jmp
jp
mov
repz
sbb
cs
nop
repz
mov
xor
cmc
ins
push
hlt
push
in
jae
sub
retf
mov
retf
mov
and
jle
mov
mov
dec
cmp
out
or
repz
mov
or
arpl
int3
sub
sahf
int
pop
mov
cmp
xor
push
jns
pop
jp
idiv
in
retf
mov
pop
in
fstp
aad
out
push
iret
mov
mov
mov
iret
pop
arpl
mov
int3
in
mov
cdq
out
fstp
idiv
in
retf
in
cmp
cmp
pop
fiadd
sti
sbb
retf
les
jb
sbb
mov
cmp
xor
popa
pop
mov
xor
cdq
popf
mov
pop
addr16
out
cmp
inc
dec
mov
pop
out
sahf
int
pop
mov
cmp
xor
xlat
jns
pop
jp
idiv
in
retf
mov
pop
out
fstp
cmc
fsub
nop
push
out
in
or
jmp
jle
addr16
jecxz
retf
sar
cdq
pop
cmp
add
cmp
jne
pop
(bad)
out
push
pop
push
jecxz
in
mov
es
in
mov
outs
sahf
int
jbe
mov
test
daa
ret
seto
loopne
int3
out
or
(bad)
dec
cwde
ret
mov
cmps
sbb
adc
sbb
mov
je
iret
test
out
out
jl
ret
push
adc
int
cld
mov
div
jo
loop
out
adc
pop
call
add
dec
iret
rol
push
pusha
jb
pop
das
lock
icebp
push
int
push
pop
mov
jno
add
pop
loope
xor
inc
sbb
add
das
(bad)
jno
sbb
movs
jno
movs
das
mov
xchg
(bad)
xchg
jp
popa
das
mov
fmul
imul
pop
cmp
xor
lods
jmp
fistp
stos
jmp
pand
xor
stc
xor
test
pop
(bad)
ins
inc
sbb
rol
mov
ins
sbb
rol
dec
jecxz
cmp
clc
cmp
cmp
cmc
xor
fiadd
(bad)
add
mov
ins
push
sbb
cli
inc
sbb
mov
outs
xor
out
cmp
dec
adc
mov
aas
jae
mov
int3
mov
mov
arpl
mov
inc
(bad)
jp
mul
popf
in
and
stc
xor
fld
jb
lock
fdivr
jge
out
jne
inc
call
popf
arpl
out
lahf
out
or
push
adc
or
push
les
sbb
mov
gs
sbb
mov
mov
fsubrp
dec
sahf
push
cmps
xchg
inc
dec
test
inc
loopne
(bad)
test
aaa
adc
lock
ja
jb
or
jbe
rcl
fcomp
xchg
jnp
icebp
test
jp
sahf
jnp
mov
outs
(bad)
addr16
and
lock
call
test
xchg
or
test
pop
jno
scas
enter
loopne
add
loopne
outs
les
pop
push
enter
sub
mov
pop
push
ret
mov
xchg
mov
fst
sub
sub
jp
mov
mov
sub
or
test
mov
mov
xchg
ret
ins
inc
pop
add
xor
sbb
mov
aas
add
mov
sbb
sbb
mov
add
or
lea
dec
test
les
pop
rol
or
inc
adc
mov
sub
xor
jno
jge
rcl
adc
fstp
and
pop
sbb
addr16
pusha
sbb
pop
cmp
sbb
jp
enter
cmp
in
(bad)
pushf
jb
mov
das
iret
out
jnp
lahf
inc
dec
pop
outs
jecxz
jp
iret
xlat
fstp
jnp
gs
dec
and
in
sti
pusha
pop
cmp
ds
int
test
xchg
cmc
mov
scas
scas
icebp
jl
pop
aas
arpl
add
fbstp
cmps
pushf
bound
and
enter
nop
push
dec
jno
not
pop
in
in
jae
sub
and
shl
jle
jb
cmp
ds
enter
mov
or
arpl
lds
(bad)
pushf
loop
sahf
int
fimul
adc
mov
pushf
bound
fsub
nop
push
dec
jno
not
pop
in
in
jae
test
jle
(bad)
out
fs
neg
push
arpl
rol
fbstp
xchg
sbb
mov
addr16
(bad)
nop
push
dec
jno
not
pop
in
in
jae
sub
sub
imul
cmp
cmp
xchg
push
sbb
jge
adc
js
pop
cmp
sti
sbb
retf
les
jb
and
jge
cmp
adc
ret
ds
mov
ss
jns
idiv
in
push
mov
fsubrp
fstp
fsub
nop
push
dec
icebp
push
in
and
xchg
ja
lahf
inc
dec
mov
idiv
lods
out
sti
popf
sahf
jmp
cmps
js
not
mov
and
stc
out
mov
out
outs
jecxz
in
mov
and
stc
mov
in
inc
popa
pop
cmp
push
sahf
int
mov
mov
scas
out
or
seto
or
add
popa
push
pop
pop
test
mov
mov
aam
mov
(bad)
mov
cmp
jno
or
xchg
loope
inc
jns
pop
jns
hlt
jb
outs
test
xor
mov
add
mov
sbb
bound
repnz
setl
sbb
shl
test
repnz
jno
movs
push
xor
loope
jge
sti
sar
fmul
(bad)
std
imul
add
cmp
xchg
add
rol
pop
cmp
pusha
sbb
(bad)
(bad)
pop
aam
cmps
sbb
inc
cli
inc
mov
call
mov
xchg
sub
dec
jecxz
cmp
cmps
jno
pop
cs
lea
sar
pop
cs
lea
loopne
inc
sar
pop
cs
out
mov
and
mov
enter
daa
push
out
sbb
in
mov
jge
sbb
pop
das
mov
mov
aas
jae
pop
retf
jmp
mov
xor
ins
and
mov
mov
mov
xchg
lea
cmps
push
jns
mov
cs
pop
sbb
into
sbb
aam
es
out
fdiv
sbb
in
jmp
retf
test
pop
test
mov
leave
and
sbb
push
sub
imul
xor
cmp
(bad)
std
add
test
cs
out
inc
push
pop
movs
into
popf
sbb
popf
cmp
in
jge
adc
mov
jno
dec
jbe
out
push
jb
pop
movs
push
lahf
sub
enter
and
cmp
nop
jbe
inc
in
adc
mov
pusha
sub
loop
pop
push
enter
adc
mov
rcl
bound
pop
rcr
sbb
sub
jp
mov
mov
sbb
inc
stos
adc
push
hlt
inc
mov
(bad)
sub
ror
push
sub
sub
and
pop
retf
add
inc
or
shl
xor
push
add
inc
xchg
fimul
jo
jmp
mov
add
sbb
adc
and
adc
push
retf
js
movs
cld
sub
loope
adc
sub
ror
pop
test
loop
jg
addr16
pusha
sbb
pop
cmp
sbb
inc
daa
enter
arpl
(bad)
pushf
jb
arpl
iret
out
(bad)
bound
cmp
stc
(bad)
pop
iret
aaa
into
js
jnp
mov
pushf
out
cwde
push
dec
jno
not
pop
in
in
jae
test
fild
es
addr16
dec
xor
dec
dec
nop
repz
(bad)
ds
xchg
cmp
jge
cmp
adc
pusha
pop
cmp
sub
xchg
or
push
cmp
out
cmps
sub
jecxz
fwait
data16
ror
not
cmp
adc
ret
mov
jns
pop
stc
adc
cmp
xchg
push
pushf
mov
adc
jnp
pop
cmp
sub
sar
mov
cmp
mov
sbb
sbb
fwait
imul
lods
add
fbstp
xchg
sbb
data16
cmp
fstp
xchg
pushf
loop
iret
out
out
lahf
inc
dec
cmp
mov
scas
addr16
jae
iret
and
inc
dec
icebp
popa
iret
out
pop
(bad)
xchg
pushf
loop
iret
out
out
lahf
inc
dec
cmp
inc
mov
pushf
loop
sahf
int
cmp
in
out
pop
cmp
stc
sahf
int
into
(bad)
xchg
cmp
inc
cmp
sti
sbb
jmp
pop
fcomip
add
retf
sub
push
jl
mov
enter
and
jl
lods
out
push
mov
cmp
xor
xchg
push
sub
ins
cs
sti
xor
mov
mov
inc
out
jno
add
rcr
lock
fs
fiadd
add
xchg
adc
ret
xor
xchg
add
bnd
je
add
mov
add
rol
loopne
je
div
push
int
push
pop
mov
jns
mov
lea
js
(bad)
(bad)
loopne
sub
(bad)
jp
and
sar
shl
imul
rol
cmp
inc
jecxz
cmp
mov
loop
mov
enter
xchg
lea
mov
nop
pop
jno
shr
sbb
mov
fistp
dec
push
mov
mov
cmp
(bad)
mov
cmp
add
cmp
xchg
jae
cmp
add
stc
xor
into
mov
in
xor
les
pop
cmp
xchg
(bad)
sar
push
subps
add
das
shl
inc
jecxz
cmp
xchg
or
adc
(bad)
imul
pop
jmp
pop
stc
inc
clc
xchg
push
jg
movs
fimul
in
mov
mov
mov
shl
lea
cmp
pop
inc
xchg
jle
out
jne
ret
sbb
test
dec
sbb
lahf
cmp
aam
jne
cs
pop
xlat
(bad)
mov
jmp
jne
push
(bad)
mov
mov
cmp
mov
push
pop
test
dec
cmp
jmp
mov
mul
mov
mov
scas
jecxz
movs
mov
in
jne
fdiv
cdq
outs
mov
dec
sbb
scas
mov
and
(bad)
jbe
pop
sbb
sub
push
aam
xor
repz
pop
rcl
aaa
loop
inc
mov
sbb
ret
ins
inc
add
(bad)
adc
or
jecxz
cmp
rcl
push
xchg
repz
enter
pop
add
push
lods
dec
loope
cmp
mov
rcl
cmp
mov
bound
pop
rcr
adc
pop
push
or
add
or
mov
ror
xor
icebp
inc
or
push
nop
iret
and
adc
in
cmp
or
adc
inc
bound
mov
xchg
dec
jnp
iret
fcmovb
xor
mov
cmp
daa
retf
in
jnp
inc
into
dec
xchg
jnp
fdiv
ins
sbb
in
and
xchg
iret
popa
lahf
inc
dec
pop
out
(bad)
repz
(bad)
repz
sbb
pop
dec
nop
repz
(bad)
ds
mov
jge
cmp
dec
mov
pop
bound
in
mov
es
in
pop
ret
mov
jns
pop
stc
adc
cmp
xchg
push
jl
sti
enter
fstp
fsub
nop
push
dec
icebp
adc
sub
out
cmps
sub
(bad)
out
stos
cmc
stc
mov
fsubr
mov
(bad)
pushf
jb
dec
mov
pushf
loop
iret
out
xchg
bound
fadd
jno
addr16
retf
mov
and
and
enter
nop
push
iret
popa
test
stc
lods
mov
mov
iret
mov
inc
into
ja
in
mov
jno
addr16
sub
loop
in
and
enter
nop
push
dec
jno
not
pop
in
in
jae
sub
push
jl
mov
enter
and
and
enter
nop
push
dec
icebp
dec
in
and
xchg
outs
bound
mov
(bad)
pushf
loop
sahf
int
mov
in
ffreep
ds
outs
jnp
pop
stc
idiv
in
jnp
data16
retf
lods
out
jnp
addr16
jecxz
retf
cmp
fcomip
ins
cs
jmp
xlat
js
ja
out
xlat
js
jnp
cmp
jb
arpl
(bad)
(bad)
pushf
loop
sahf
int
mov
fcmovb
pop
fst
xchg
and
mov
pusha
(bad)
mov
js
dec
mov
and
and
add
dec
mov
inc
adc
and
loopne
ret
inc
fs
shl
mov
sub
mov
cmp
pop
sbb
loop
call
out
setl
xor
push
(bad)
iret
sar
pop
sbb
inc
jecxz
cmp
xchg
iret
sar
jns
pop
mov
dec
jecxz
push
mov
xor
xor
adc
das
sar
and
xor
fld
pop
stc
or
mov
imul
jle
sbb
aas
call
xchg
retf
call
mov
pop
out
inc
pop
in
push
add
sbb
movs
icebp
dec
subps
sub
scas
repnz
icebp
push
pop
in
xor
ret
add
mov
jo
outs
sar
dec
subps
pop
xor
retf
add
stc
ss
fcomip
rol
mov
(bad)
fcomip
rol
jecxz
xchg
jle
(bad)
out
loope
jge
mov
pop
pop
popw
stc
inc
clc
xchg
push
jg
movs
xchg
pop
mov
inc
xor
sub
retf
je
cwde
arpl
jo
jecxz
push
daa
inc
fs
cmp
enter
jmp
test
out
and
dec
cmps
jae
in
mov
xchg
cmp
push
mov
xor
push
pop
out
int
jae
cmp
jecxz
out
xlat
cmp
mov
mov
repnz
addr16
cmp
jmp
movs
into
lea
pop
movs
into
lea
pop
movs
into
lea
pop
movs
into
dec
jo
pop
daa
inc
out
jge
inc
jmp
fbld
movs
xchg
retf
loopne
jne
push
jb
cmp
(bad)
pop
xor
dec
aas
mov
enter
sub
(bad)
pop
icebp
add
les
pop
push
enter
adc
pop
push
ret
ret
adc
pop
mov
lods
cwde
add
bound
out
cwde
test
retf
leave
mov
sub
inc
xchg
cmps
loop
jo
push
xor
xchg
(bad)
push
xchg
and
sahf
add
popa
(bad)
sub
xor
data16
pop
retf
sbb
mov
(bad)
xor
rcr
xor
add
and
popa
mov
lea
adc
push
int3
inc
mov
push
retf
js
movs
cld
sub
ret
adc
or
pop
les
movs
jmp
scas
js
add
xor
daa
sahf
jmp
jmp
into
stc
mov
lea
adc
cld
inc
mov
or
arpl
(bad)
cmc
fadd
jno
addr16
jmp
iret
and
jl
lods
out
pusha
cmp
cmp
rol
fbstp
cmps
pushf
jecxz
in
and
mov
(bad)
fsub
nop
push
xlat
mov
(bad)
rep
xor
in
fistp
jae
or
enter
fstp
fsub
nop
push
into
jno
not
pop
in
in
jae
sub
clc
cmp
iret
out
aas
addr16
xchg
push
iret
loope
jecxz
sti
ret
mov
out
dec
arpl
xchg
or
arpl
(bad)
scas
mov
pushf
jecxz
sahf
int
jle
jge
cmp
sbb
(bad)
ds
pop
jnp
push
stc
xor
jae
mov
sbb
jp
push
mov
jmp
cmc
stc
xchg
sbb
fdiv
int3
in
mov
jno
addr16
(bad)
jecxz
in
and
mov
sbb
into
icebp
sbb
and
clc
lea
xchg
fbld
inc
dec
cmp
outs
mov
pushf
jecxz
sahf
int
jle
jge
cmp
sbb
ret
ds
fistp
push
stc
sbb
jae
push
sti
enter
fstp
fsub
nop
push
into
icebp
pop
in
and
clc
and
aas
pusha
lahf
inc
dec
cmp
pop
mov
pushf
jecxz
sahf
int
dec
fdivrp
fs
jg
mov
idiv
iret
fadd
icebp
addr16
out
jg
xchg
sti
lds
pop
mov
mov
jle
idiv
call
fmul
jp
push
mov
mov
sar
ret
fstp
lock
add
iret
adc
and
cmc
xor
loopne
or
jecxz
xchg
lock
or
cmp
icebp
loopne
ret
inc
cmp
cdq
pop
in
fstp
icebp
inc
pop
call
add
(bad)
sahf
mov
scas
repnz
jle
cmp
sbb
in
daa
push
cmp
jecxz
xor
xchg
cmc
xor
out
sub
dec
jno
xchg
(bad)
sbb
mov
fimul
pop
scas
jb
lea
cmps
icebp
out
mov
add
pop
push
cs
inc
pop
in
hlt
lea
dec
(bad)
jmp
arpl
sbb
icebp
jbe
outs
test
push
subps
aaa
xor
mov
stc
sub
push
jle
jecxz
cmp
xchg
(bad)
clc
jnp
pop
in
xor
rol
stc
and
inc
lock
sar
addr16
das
xor
add
sub
addr16
mov
outs
loope
sbb
cdq
xchg
cmp
cmp
sbb
mov
sbb
jge
fdiv
mov
xchg
cmp
jbe
(bad)
cmps
push
(bad)
cmp
sahf
adc
das
mov
jge
out
jne
inc
call
cmp
leave
mov
cmp
test
mov
cmp
push
jmp
daa
iret
jo
retf
cdq
sbb
xchg
cmp
mov
(bad)
into
stos
mov
dec
lahf
popf
in
call
clc
test
mov
dec
popf
cmp
cmp
cmp
jb
sub
movs
(bad)
jp
in
inc
pop
movs
mov
div
push
jb
pop
movs
push
pop
xchg
lods
pop
in
fst
out
jno
sbb
sub
push
aam
xor
repz
mov
inc
pop
push
rcl
adc
pop
push
enter
adc
pop
push
ret
(bad)
adc
or
icebp
mov
mov
sub
stc
mov
mov
bound
scas
add
push
dec
ret
adc
add
sbb
adc
loop
shl
add
sbb
adc
add
inc
adc
int3
inc
mov
add
sbb
scas
push
fisttp
pop
icebp
or
stc
or
pop
add
inc
mov
sub
push
xchg
rcl
push
and
pop
mov
sub
push
xchg
or
repnz
iret
hlt
pop
cmp
(bad)
jg
dec
out
inc
mov
or
mov
mov
pushf
jb
mov
outs
iret
out
ja
lahf
inc
dec
pop
out
(bad)
repz
arpl
fnstenv
sbb
dec
repz
les
mov
int3
test
and
ret
jnp
sbb
sbb
sti
enter
fwait
stos
int3
ret
pushf
jb
(bad)
inc
into
xor
pop
gs
in
jae
ret
nop
stos
and
or
push
cmp
out
arpl
cmp
out
iret
push
xor
repz
ret
ds
aad
int
push
ret
xchg
pushf
arpl
jae
aad
iret
and
xchg
jae
adc
jge
cmp
sbb
sbb
stos
popa
jl
neg
pop
int
cmp
xor
pop
cmp
pop
ret
imul
dec
cmp
fcmovu
inc
into
mov
mov
retf
out
push
into
jno
in
and
mov
mov
pushf
arpl
inc
fcomp
in
jae
sub
pop
pop
sti
enter
ss
pop
pop
sti
sbb
retf
lea
sbb
push
ss
mov
xchg
jae
xchg
sbb
or
push
cmp
sbb
sar
mov
or
sbb
jmp
imul
adc
cmps
pushf
jecxz
fadd
jno
popa
jae
sti
popa
lahf
inc
dec
pop
out
(bad)
repz
outs
cmp
fnstenv
lea
adc
jl
pushf
jb
pop
pusha
pop
cmp
add
cdq
jb
(bad)
pusha
frstor
xchg
add
and
js
dec
mov
and
sub
add
mov
push
adc
and
inc
fs
jg
scas
(bad)
je
mov
mov
cmp
call
push
dec
cmp
sbb
in
pop
push
cmp
jecxz
imul
js
pop
scas
repnz
sbb
xor
xor
pop
mov
cld
push
jae
add
add
inc
jecxz
add
add
sbb
loopne
jae
pushf
cmp
out
mov
arpl
jmp
push
out
aaa
jb
les
mov
xchg
(bad)
xor
mov
mov
sub
jecxz
add
retf
scas
and
push
(bad)
movs
jno
add
sub
jno
add
and
push
out
dec
jecxz
icebp
cmp
sar
add
(bad)
je
sbb
(bad)
icebp
add
inc
cwde
pop
in
and
dec
dec
ins
mov
cmp
out
jne
mov
out
inc
(bad)
mov
idiv
jmp
jne
mov
in
std
sub
push
jmp
mov
mov
cmp
ss
jae
(bad)
jno
cmp
loopne
jno
push
pop
mov
stc
popf
jecxz
mov
cli
inc
push
test
movs
dec
jmp
jmp
push
out
mov
cmp
imul
push
out
jae
pop
jg
ja
cmp
inc
es
test
repz
ja
stos
ins
pushf
mov
ja
shr
dec
mov
mov
jno
ds
icebp
add
les
pop
push
enter
adc
pop
push
ret
ret
adc
pop
mov
lods
cwde
add
bound
out
cwde
test
retf
leave
mov
sub
push
xchg
cmps
loop
jo
push
xor
xchg
(bad)
push
xchg
and
sahf
add
popa
(bad)
sub
xor
data16
pop
retf
sbb
stos
or
(bad)
xor
rcr
xor
add
sub
popa
mov
lea
adc
cmp
adc
loopne
add
sbb
pop
in
mov
bound
add
sub
pop
gs
adc
(bad)
mov
cmp
daa
retf
div
in
sbb
sbb
in
repz
pushf
arpl
in
jae
test
mov
aam
ds
mov
scas
jno
pushf
out
cwde
push
into
icebp
xor
and
js
mov
retf
iret
and
jl
lods
out
bound
cmp
lock
fbstp
cmps
pushf
mov
jge
jae
idiv
in
jae
mov
sbb
or
push
cmp
sbb
pusha
div
enter
scas
repnz
ins
cmp
sbb
sbb
imul
neg
xchg
(bad)
mov
(bad)
pushf
jb
inc
popa
pop
cmp
mov
test
cmp
sbb
(bad)
ds
inc
or
sbb
retf
(bad)
ds
int
int
ss
xchg
fbstp
(bad)
out
mov
stc
fnstenv
sbb
mov
repz
cmp
and
js
mov
retf
iret
and
inc
into
icebp
js
jae
(bad)
arpl
adc
ret
dec
sar
pushf
jb
daa
bound
cmp
adc
jge
cmp
sbb
pusha
pop
cmp
push
ret
pop
pusha
lahf
inc
dec
cmp
xchg
mov
pushf
jecxz
ret
dec
ret
pushf
jb
daa
arpl
cmp
xchg
test
push
sahf
mov
cmp
sbb
sar
mov
add
mov
lahf
push
fisttp
cmps
idiv
imul
popa
jae
cmps
popa
lahf
inc
dec
pop
out
(bad)
repz
outs
cmp
fnstenv
sbb
into
dec
nop
repz
mov
sbb
adc
push
jns
mul
imul
jle
fsub
sub
call
xchg
and
and
sub
stos
and
pop
and
clc
dec
xchg
xchg
les
leave
push
xchg
push
icebp
jb
movhps
adc
adc
or
sar
sub
loop
call
out
add
cmps
and
lea
loope
pop
jns
pop
in
xor
adc
(bad)
xor
mov
ret
push
fld
mov
rcl
jno
add
and
push
mov
and
(bad)
aam
pop
aam
cmps
cmp
shl
lea
cmps
outs
xor
adc
or
sbb
(bad)
clc
pop
sbb
inc
jecxz
add
retf
jl
add
add
dec
movs
icebp
mov
pop
or
mov
loopne
dec
mov
in
xor
pop
sub
jo
cmps
sar
push
cmp
imul
popf
(bad)
cmps
and
(bad)
iret
shl
xor
push
cwde
pop
in
inc
push
stc
mov
int3
dec
cmp
sar
sbb
pop
movs
push
mov
fcomp
fidiv
(bad)
pop
movs
dec
mov
aam
(bad)
fimul
aam
dec
jmp
jae
rcr
xchg
cmp
(bad)
push
sbb
push
jae
push
bound
ds
and
hlt
sub
push
daa
cmp
(bad)
sbb
into
stos
xchg
rcl
fsubr
retf
leave
push
jmp
bswap
lds
out
popa
in
push
jmp
fsub
enter
mov
mov
xchg
cmp
fcomi
cwde
jecxz
pop
pop
leave
gs
cmp
js
in
jnp
scas
repnz
pop
xor
(bad)
sti
and
loope
add
jmp
push
jmp
(bad)
adc
pop
push
rcl
sub
clc
mov
icebp
xor
rcl
mov
push
sub
sub
fcom
cmp
bound
pop
(bad)
adc
sub
mov
scas
enter
and
sahf
add
(bad)
sub
mov
push
sub
sub
inc
pusha
xor
sub
pop
or
and
mov
out
and
scas
xor
ret
sbb
scas
push
fisttp
mov
or
enter
sub
inc
or
push
jle
lahf
loopne
jo
loope
mov
sub
sar
add
cmp
jecxz
jo
loope
or
add
inc
aas
ja
sub
sub
cmc
je
dec
xchg
cmp
fdiv
sbb
cld
add
fbstp
cmps
mov
das
fst
jl
dec
in
jae
test
mov
sar
scas
xchg
mov
push
sbb
not
ds
idiv
in
jne
push
repz
push
xchg
mov
mov
cmps
mov
pop
repnz
cdq
pop
arpl
fadd
mov
mov
int3
ss
nop
push
pop
mov
mov
mov
int3
mov
jle
jb
cmp
jle
pop
lahf
fbld
pop
push
mov
int3
sub
jns
not
jl
gs
nop
push
pop
bnd
and
jns
mov
int3
retf
mov
and
inc
pop
repnz
cdq
push
pusha
lahf
inc
dec
cmp
xlat
into
cli
cld
ficomp
lahf
lahf
cmp
retf
fbstp
xchg
sbb
scas
ret
xchg
push
or
sbb
retf
lea
and
jns
idiv
in
xchg
ins
(bad)
jge
and
ins
(bad)
jge
cmp
and
xchg
xlat
or
sbb
retf
arpl
jns
jl
repz
stc
fsub
nop
push
pop
mov
not
ds
idiv
in
xchg
in
mov
and
in
mov
cmp
and
leave
dec
ret
cmp
inc
dec
mov
jnp
jmp
ficomp
fdivp
mov
bound
jns
imul
push
cmp
xlat
sbb
ja
cmc
jl
sbb
addr16
pop
outs
in
mov
int3
sub
jns
not
jl
or
jge
(bad)
pop
arpl
add
jle
in
into
or
jne
adc
dec
ins
not
mov
lahf
and
ds
nop
sub
out
fs
jae
in
mov
lahf
sbb
loop
iret
in
xor
iret
push
mov
adc
adc
cdq
out
inc
lahf
sbb
or
ds
mov
js
repz
cmps
icebp
stc
cmp
jecxz
add
xor
add
push
xor
test
(bad)
xor
sub
jecxz
xchg
mov
clc
bound
pop
sub
addr16
jno
add
mov
(bad)
fisttp
lock
xchg
sar
adc
jge
lea
aad
pop
aam
cmps
sbb
retf
inc
les
inc
fistp
cmp
xchg
push
sar
dec
sbb
inc
jecxz
add
int3
stos
imul
in
add
jl
add
add
mov
lea
or
cdq
sbb
iret
in
inc
jecxz
add
sbb
jecxz
dec
jecxz
add
jl
rcl
sar
jp
fild
sbb
jge
xchg
lock
popf
xchg
xchg
fst
call
cmp
(bad)
jl
push
sahf
fwait
xchg
ror
mov
cdq
cmp
xor
xchg
pop
aam
or
pop
inc
into
or
push
pop
pop
cmps
iret
retf
jl
into
pop
cwde
out
iret
aam
mov
fiadd
out
xor
ins
dec
mov
aam
dec
jb
jl
push
pop
call
(bad)
mov
scas
jno
lahf
test
hlt
cdq
cmp
scas
repnz
addr16
cmp
mov
loope
(bad)
cdq
cmp
jb
xor
cmp
out
sbb
shl
mov
jb
and
push
inc
cmp
mov
cmp
repz
xchg
pop
push
lahf
test
lahf
stc
test
out
xor
cmp
nop
neg
mov
ds
mov
push
adc
adc
mov
enter
sub
stc
mov
inc
or
sub
ret
adc
or
icebp
mov
mov
sub
jno
clc
int3
jo
dec
pop
add
push
lods
pop
test
repnz
rcr
xor
or
mov
adc
xor
adc
lahf
sbb
or
sar
mov
sar
div
inc
or
aaa
loop
pop
rol
jl
jl
inc
adc
ds
mov
push
xchg
repnz
cld
add
or
push
lods
inc
pusha
adc
(bad)
popa
pop
clc
dec
aad
push
push
or
push
ins
inc
add
cwde
jge
dec
ret
cmp
dec
out
inc
mov
sbb
out
cmp
xor
and
fstp
jl
ja
jae
test
mov
lds
jnp
xchg
out
cwde
push
pop
mov
not
ds
idiv
in
jne
xor
mov
jp
sti
jp
enter
in
push
fadd
xor
jge
cmp
and
leave
ds
sti
pusha
lahf
inc
dec
jns
mov
mov
mov
imul
clc
cld
cli
pop
lahf
pop
aas
jecxz
mov
cli
sbb
cli
daa
enter
in
pop
pusha
pop
jns
add
out
pop
pusha
lahf
inc
dec
jns
sbb
mov
int3
sbb
jb
not
ds
idiv
in
jae
ins
jl
sub
fnstenv
sbb
outs
dec
nop
repz
adc
enter
fwait
iret
sub
xchg
mov
cdq
inc
mov
and
xchg
xchg
sub
ss
pop
test
cmp
and
leave
mov
bound
(bad)
in
and
pop
sub
ds
sti
sbb
retf
ret
ds
ret
test
addr16
ret
xchg
mov
cdq
ret
mov
and
and
cmp
jl
or
jae
test
jge
imul
push
xchg
push
pop
repnz
and
jns
mov
int3
(bad)
repz
stc
outs
mov
out
jbe
stc
in
mov
and
stc
mov
in
out
les
repnz
ja
fwait
iret
mov
mov
retf
or
and
icebp
cdq
add
rcr
lock
fs
fisub
add
xchg
nop
sub
out
fs
lahf
dec
cmp
int3
lock
pop
dec
icebp
lea
hlt
cdq
add
mov
fwait
jo
cdq
add
pop
jge
push
fisub
jbe
sub
test
push
imul
add
inc
mov
mov
lock
mov
fidiv
(bad)
jecxz
lea
jl
pop
sbb
adc
xor
sar
pop
std
jo
jg
not
(bad)
pop
aam
cmps
sbb
mov
hlt
lea
loop
pop
push
ret
pusha
sub
xchg
(bad)
mov
mov
jl
adc
movups
xor
addr16
movs
icebp
push
add
mov
mov
jl
xor
(bad)
loopne
xchg
js
add
add
int3
xchg
xor
mov
mov
lock
mov
clc
jbe
out
mov
xchg
(bad)
ja
xchg
iret
mov
ja
das
imul
sbb
jae
cmp
(bad)
stc
dec
sbb
shl
(bad)
popf
cld
cmp
aas
sbb
dec
mov
aam
pop
jno
push
pop
push
(bad)
outs
(bad)
jae
adc
xor
fistp
lahf
test
xor
dec
sbb
cmps
dec
retf
addr16
sar
or
shr
stos
sbb
mov
push
cdq
cmp
jmp
popf
stos
xchg
dec
popf
stos
mov
dec
popf
retf
inc
push
jl
into
aad
jmp
mov
aam
pop
jnp
jge
mov
scas
dec
cs
loope
push
xchg
iret
ins
push
push
repz
ja
out
xor
cmp
nop
neg
mov
ds
mov
push
adc
adc
mov
enter
sub
stc
mov
inc
or
sub
ret
adc
or
icebp
mov
mov
sub
jno
clc
int3
jo
dec
pop
add
push
lods
pop
test
repnz
rcr
xor
or
mov
adc
xor
adc
lahf
sbb
or
sar
mov
sar
div
inc
or
aaa
loop
pop
rol
jl
jl
inc
adc
ds
mov
push
xchg
repnz
cld
add
or
push
lods
inc
pusha
adc
(bad)
popa
pop
clc
dec
aad
push
push
or
push
ins
inc
add
cwde
jge
mov
cwde
(bad)
jg
dec
out
inc
mov
and
neg
sti
out
dec
nop
repz
cmp
pop
adc
lahf
stc
add
cmp
aam
ds
repz
aaa
fcmovu
aaa
cmp
ja
sub
cmp
sti
enter
ss
cmp
sti
sbb
jmp
jp
mov
repz
mov
adc
jl
pushf
repnz
jecxz
(bad)
mov
cdq
jecxz
iret
and
and
cmp
jl
add
jae
sub
cmp
push
fdivr
jbe
ins
cmp
sbb
sbb
fwait
fs
neg
fs
in
cmp
xor
and
cmp
jl
adc
jae
sub
cmp
adc
sti
sbb
retf
ret
ds
rol
xchg
push
bound
and
cmp
inc
into
ja
in
mov
jb
mov
int3
jmp
pop
jb
not
ds
idiv
in
xchg
pushf
mov
and
pushf
mov
cmp
and
leave
pop
ret
addr16
lahf
inc
dec
jns
(bad)
inc
pop
jb
mov
int3
(bad)
out
push
pop
jb
not
ds
idiv
in
xchg
pushf
mov
and
pushf
mov
cmp
and
xchg
ud2
fwait
iret
jl
sti
sbb
jmp
pop
fcomip
jns
hlt
mov
jl
sti
enter
ins
ds
jae
test
fistp
out
iret
addr16
cmp
inc
into
ja
sub
mov
adc
lahf
mov
mov
retf
or
and
icebp
cdq
add
rcr
lock
fs
fisub
add
xchg
nop
sub
out
fs
lahf
dec
cmp
int3
lock
fisub
inc
lahf
sbb
jmp
cmp
addr16
cmp
sbb
add
mov
xor
rdrand
sar
jle
aas
inc
jecxz
add
int3
pop
imul
cmp
(bad)
arpl
inc
or
dec
jecxz
dec
(bad)
mov
cmps
icebp
js
ds
lea
or
cdq
adc
push
or
inc
jecxz
mov
imul
jmp
adc
push
inc
jl
xor
(bad)
xor
icebp
cdq
and
psrlw
and
cmps
icebp
je
ds
lea
lock
xor
push
or
inc
jecxz
add
sbb
push
loopne
out
js
add
add
cld
mov
lahf
cmp
(bad)
sar
adc
ds
(bad)
out
std
sub
sbb
adc
lahf
stc
cwde
enter
or
loopne
pushf
aam
sbb
jae
cmp
xor
stc
dec
sbb
shl
push
neg
dec
(bad)
int3
mov
popa
in
loopne
jne
jno
inc
loopne
jne
xor
jno
test
arpl
fdivr
frstor
fcom
arpl
ds
cdq
pop
lahf
test
in
js
test
cdq
cmp
adc
jmp
xchg
(bad)
clc
dec
popf
jnp
(bad)
addr16
pop
mov
cdq
cmp
mov
sti
cli
push
iret
aam
xlat
xor
dec
sbb
xchg
fnstcw
das
daa
lahf
cdq
sar
inc
sar
dec
jge
aas
mov
enter
sub
(bad)
pop
mov
push
adc
adc
scas
fadd
in
mov
sub
jo
or
sub
jl
inc
sbb
mov
icebp
add
les
mov
loop
pop
add
push
lods
clc
add
mov
cmp
or
jle
pusha
xor
sub
jl
or
test
push
in
inc
mov
add
in
(bad)
sbb
ds
fisttp
mov
(bad)
cmp
or
add
sub
sub
xchg
mov
pop
les
push
jne
loopne
lock
loope
stos
or
or
dec
add
mov
es
in
and
xor
inc
dec
popa
jb
dec
or
out
or
imul
aas
push
outs
xchg
mov
push
sbb
leave
add
fbstp
cmps
fsubr
push
fadd
hlt
sub
stos
dec
popa
lahf
inc
dec
pop
out
(bad)
repz
(bad)
repz
sbb
sahf
dec
nop
repz
mov
inc
lahf
adc
idiv
in
jne
addr16
jae
repz
idiv
fbstp
cmps
fsubr
or
inc
outs
hlt
add
pusha
lahf
inc
dec
mov
outs
je
mov
aad
fsub
nop
push
outs
je
mov
mov
aad
in
jle
jb
cmp
lahf
fisttp
mov
inc
into
ja
sub
cli
xor
xchg
sbb
fcomp
push
outs
hlt
adc
mov
iret
and
inc
outs
hlt
push
popa
jae
scas
bound
xlat
mov
out
xor
clc
cld
in
mov
or
arpl
aaa
int3
sub
retf
test
test
pushf
jb
retf
mov
fsubr
jb
jae
retf
mov
and
and
mov
or
jae
sub
cli
cmp
xchg
sbb
fcomp
push
outs
je
not
dec
jne
idiv
in
sbb
jge
inc
push
or
push
cmp
inc
push
arpl
mov
push
push
arpl
aaa
mov
fsubr
sbb
out
ffreep
xchg
div
xor
inc
ffreep
ds
outs
or
sbb
jmp
jmp
fidiv
sahf
iret
sahf
jnp
fdiv
jbe
pushf
out
cwde
push
outs
mov
sti
enter
fwait
push
sub
in
jecxz
out
cmp
js
ja
aam
dec
retf
inc
push
push
mov
sbb
cmp
jmp
lock
ret
mov
cmps
sbb
mov
cmp
stos
(bad)
das
addr16
xchg
mov
fsub
aad
pushf
loop
inc
call
add
test
cwde
fadd
push
adc
fadd
rol
pop
cmp
mov
dec
jecxz
jno
adc
lahf
adc
pusha
lahf
cmps
icebp
ror
inc
jecxz
jo
sub
lahf
adc
icebp
jae
aas
dec
jecxz
jno
add
pop
sar
add
mov
cmp
pop
imul
(bad)
das
imul
shr
adc
loop
pop
movs
outs
mov
xor
xchg
sar
mov
pop
mov
cmp
adc
sar
fcom
shr
jbe
lea
jo
outs
sar
or
(bad)
xlat
loopne
fisub
pop
xor
or
mov
cld
ss
push
neg
adc
test
push
popf
jmp
enter
out
jne
jae
mov
(bad)
scas
jne
mov
aad
jmp
gs
cmp
arpl
enter
jmp
aad
sbb
sbb
mov
fmul
jmp
mov
pop
stos
jae
push
mov
cmp
mov
rcr
cmp
in
loope
xchg
sahf
sbb
mov
fisubr
arpl
pop
stos
shr
pmaddwd
mov
scas
das
jb
pusha
jne
pop
jb
pusha
jne
aas
jb
pusha
jne
sbb
cmp
jb
and
push
inc
pop
in
mov
cmp
repz
sub
or
xchg
ds
pusha
fist
dec
pop
stos
add
jne
in
pusha
mov
sub
stc
jl
push
pop
push
rcl
mov
mov
sub
bound
scas
sub
mov
lds
icebp
sbb
push
cmp
js
(bad)
mov
push
xchg
repz
mov
mov
mov
pop
pop
xchg
(bad)
push
cld
mov
push
in
les
pop
mov
lods
clc
sbb
add
add
and
pop
add
mov
adc
mov
mov
outs
add
pop
jne
inc
adc
adc
rcr
adc
add
movs
or
jecxz
xor
mov
and
add
pusha
push
inc
push
scas
add
sbb
fcom
test
add
fcom
test
shl
in
add
ss
and
add
pop
sti
xor
(bad)
dec
in
xor
jge
and
daa
retf
in
sti
sub
ja
sub
dec
std
pop
fcomp
(bad)
fsub
nop
push
xlat
stc
mov
jl
pop
iret
test
add
fbstp
cmps
pop
jmp
fcomp
cmp
jae
test
fistp
stc
(bad)
sbb
addr16
ins
xor
ins
dec
nop
repz
mov
push
aas
adc
idiv
in
dec
fisttp
or
push
cmp
push
aaa
mov
sbb
or
cmps
sub
jecxz
fld
fwait
(bad)
iret
iret
sahf
sti
int3
fdiv
pop
sbb
not
push
jbe
idiv
in
dec
std
sbb
enter
ins
push
div
jae
sub
dec
std
inc
fcomp
pop
fsub
nop
push
iret
loope
jecxz
sti
sar
cld
mov
out
sub
push
or
arpl
aaa
int3
jge
jge
push
mov
xor
dec
fisttp
or
push
cmp
push
retf
mov
pop
push
mov
fdiv
jae
sub
movs
outs
adc
pop
mov
retf
(bad)
ds
fild
xchg
pop
jmp
iret
and
inc
cs
sbb
mov
pusha
lahf
inc
dec
mov
pop
jmp
xchg
out
fistp
imul
test
jge
retf
sub
dec
std
pop
fcomp
neg
out
push
xlat
stc
xor
aas
pop
iret
test
adc
jl
pushf
jb
aas
popa
pop
mov
sar
jge
jb
(bad)
jne
pop
daa
enter
lea
mov
and
push
xchg
adc
test
sbb
push
ss
push
pop
dec
cmp
pop
mov
scas
mov
or
loopne
test
jge
cmp
fadd
cld
(bad)
push
neg
mov
jns
lods
ds
mov
movs
icebp
xchg
dec
arpl
jg
rol
inc
jecxz
nop
pop
dec
jecxz
cmp
jecxz
add
jp
scas
inc
jp
lea
loopne
push
sbb
rol
movs
icebp
inc
add
jbe
lea
or
fwait
imul
cmc
mov
mov
icebp
mov
call
cmp
sbb
cld
adc
xlat
add
push
sbb
loopne
retf
imul
add
jbe
lea
push
std
xchg
fisttp
jo
(bad)
clc
pop
add
idiv
sbb
(bad)
stc
sahf
(bad)
fisttp
jo
aas
sar
pop
movs
jg
icebp
(bad)
cmp
mov
aas
or
jbe
aas
xchg
imul
cmc
int3
mov
div
jmp
dec
cmc
mov
(bad)
div
fisttp
mov
stos
addr16
cmp
mov
or
rol
loopne
jmp
jae
movs
cmp
pusha
jne
pusha
cmps
jae
jo
(bad)
and
popf
imul
shr
mov
pop
rep
(bad)
cmp
cmp
icebp
sub
xor
hlt
mov
sbb
mov
dec
pop
pop
fst
shr
pop
(bad)
jle
adc
cmps
enter
mov
stos
jae
nop
add
stos
jae
mov
out
jge
shr
sar
jge
mov
cwde
dec
add
pop
sti
xchg
out
pusha
jg
fadd
push
mov
mov
aam
sub
mov
ds
sub
push
rcl
mov
push
adc
adc
mov
add
rcl
xchg
xor
mov
push
into
push
sbb
sub
stc
mov
mov
loop
pop
add
push
lods
push
mov
adc
add
cmp
mov
jno
add
mov
cmp
add
and
add
jo
add
jo
and
fimul
jo
jmp
adc
push
sbb
inc
adc
dec
inc
mov
push
xchg
repnz
ins
sub
dec
inc
pusha
adc
dec
(bad)
push
jo
stos
jecxz
pop
add
ss
jno
add
pusha
inc
loopne
enter
or
add
adc
add
out
dec
cmc
sub
jge
(bad)
jg
lock
xor
mov
cwde
(bad)
dec
in
aaa
idiv
sahf
and
daa
retf
in
sti
and
ja
sub
sti
daa
not
sbb
lahf
fsub
nop
push
xlat
stc
xchg
icebp
jl
pop
iret
not
cs
scas
add
fbstp
cmps
pop
in
(bad)
inc
imul
jae
jg
lahf
inc
dec
pop
out
jecxz
jbe
iret
mov
js
jnp
pop
arpl
aas
or
arpl
fdivr
(bad)
pop
in
mov
lds
xchg
or
cmp
je
ja
sub
sub
push
cmp
ins
push
push
enter
in
jae
lods
das
js
push
ficomp
mov
sbb
sti
enter
fwait
ret
int
xchg
pop
ins
adc
mov
and
xchg
mov
xchg
xchg
cmc
sbb
sbb
stos
push
jle
pop
xor
cmp
xor
pop
mov
jo
arpl
pop
in
and
fwait
sub
aaa
pop
sti
sbb
retf
sar
mov
movs
int
(bad)
sar
pushf
jb
xor
dec
imul
cmps
pop
ins
sub
dec
ficomp
sub
pop
pop
sbb
enter
xchg
sti
sbb
retf
test
(bad)
not
idiv
in
mov
jmp
fwait
ret
lods
cmp
cmc
(bad)
xor
out
jnp
imul
out
lea
(bad)
not
idiv
in
jne
xor
cmc
mov
mov
div
imul
xchg
and
cmp
xchg
mov
pop
sti
enter
ins
push
ja
in
retf
xchg
sar
out
jmp
xor
jle
in
into
xor
div
sub
sub
popf
cmp
adc
test
xor
femms
aaa
cmp
sub
cs
dec
imul
pop
inc
call
add
dec
loope
jo
mov
loop
sbb
push
not
fisub
jns
mov
jle
icebp
out
cmp
add
loopne
dec
sbb
sub
loope
inc
jecxz
nop
fiadd
pop
cmp
fwait
(bad)
jg
jo
mov
jg
cld
jle
add
lock
pop
call
sbb
mov
and
pop
xor
rol
pop
aam
mov
xchg
int
adc
inc
inc
sbb
push
jge
inc
inc
sbb
push
push
mov
aad
pop
or
pop
add
movs
jno
add
pop
add
and
fcomp
loope
mov
mov
lea
jo
jnp
js
or
mov
(bad)
jmp
jo
jne
pop
pop
(bad)
mov
(bad)
not
mov
js
sbb
dec
jecxz
movs
leave
loope
daa
xor
fsub
jnp
iret
pushf
aam
xor
in
mov
cmp
(bad)
jmp
out
(bad)
cmp
das
mov
sbb
mov
ret
aad
(bad)
loop
scas
push
jle
je
dec
sbb
mov
(bad)
loope
fdivr
jmp
sbb
push
outs
mov
cmp
test
cmp
xchg
fabs
jmp
iret
pop
sbb
jecxz
jne
repz
cmp
xor
loope
fcom
out
jmp
icebp
push
push
inc
mov
jb
cmp
int3
mov
sbb
push
outs
daa
xchg
mov
out
not
dec
xchg
in
jo
enter
(bad)
adc
pop
push
rcl
sub
clc
mov
jno
and
adc
(bad)
adc
pop
push
ret
sub
mov
or
and
sub
sbb
lods
cmp
xchg
repz
fdiv
popa
mov
rol
in
adc
add
jbe
loop
dec
jno
add
xor
jo
add
jo
loopne
add
xor
push
cmp
loopne
inc
loopne
mov
lea
push
push
mov
sub
cmp
and
sub
dec
les
add
ret
or
and
pushf
mov
sub
loop
add
loope
shr
mov
adc
sbb
add
jo
and
add
jbe
loopne
enter
push
shl
sete
clc
fist
jae
mov
adc
cld
inc
mov
daa
enter
in
sbb
mov
jo
pusha
lahf
inc
dec
pop
out
(bad)
repz
(bad)
repz
lea
adc
jl
pushf
jb
lea
imul
cmps
scas
xor
js
cmp
stc
repnz
mov
push
xor
out
out
mov
jge
bound
dec
fwait
ret
ins
mov
cmp
bound
ret
ds
xchg
ret
cmp
retf
popa
div
enter
xchg
test
dec
pop
dec
cmp
out
jo
repz
clc
cld
in
cmp
fsub
daa
enter
in
fwait
bound
mov
jo
bound
and
shl
jo
sar
pushf
jb
int
(bad)
pop
ins
xor
mov
cmps
sahf
ret
xchg
(bad)
out
movs
cmc
stc
sbb
fcom
mov
(bad)
pop
outs
cwde
cmp
sti
enter
ins
push
imul
jae
sub
fistp
enter
ss
sbb
sbb
retf
cmp
(bad)
xchg
xchg
idiv
in
mov
push
sub
neg
jae
sub
jnp
not
sbb
jno
out
push
idiv
and
jnp
mov
fsub
mov
and
inc
test
mov
dec
mov
pop
in
mov
out
dec
les
xchg
not
(bad)
idiv
jno
in
dec
ret
mov
dec
fwait
ret
cmp
jmp
jmp
dec
ss
iret
sahf
cmp
fdiv
sbb
in
and
jnp
mov
fcom
das
push
dec
sti
mov
jecxz
cmp
stc
mov
add
lds
ret
mov
mov
adc
dec
or
pop
inc
dec
push
xchg
lock
or
loopne
mov
xchg
push
and
cs
mov
loope
int
jb
jmp
shl
push
mov
cmp
add
call
call
jmp
or
in
and
pop
test
sub
mov
sar
or
lea
loop
adc
jns
into
inc
cli
push
sbb
mov
(bad)
xor
sub
loope
inc
jecxz
and
fsub
xor
and
loope
dec
jecxz
jno
dec
arpl
ja
aas
retf
mov
mov
fsub
call
ret
ins
inc
fild
and
test
mov
call
imul
xchg
(bad)
dec
jo
(bad)
sar
pop
or
idiv
sbb
daa
shl
dec
jecxz
and
jl
add
jnp
lea
loopne
pop
sar
sbb
dec
jecxz
xchg
ds
cmps
loopne
push
sbb
xor
fabs
sahf
push
mov
test
adc
push
jecxz
ret
aad
mov
sbb
push
(bad)
jecxz
push
daa
inc
in
jb
cmp
arpl
jge
repz
sar
out
push
push
out
dec
jae
loope
loopne
dec
out
in
js
xor
popf
sbb
jo
outs
mov
aad
icebp
mov
daa
cmp
sbb
mov
int
jo
ins
jb
mov
jp
scas
mov
icebp
out
pop
cmp
xchg
pop
popf
sub
sbb
into
cmp
popf
fwait
out
idiv
mov
aad
cdq
jnp
jge
mov
jbe
xchg
shl
lock
pop
in
inc
jmp
div
outs
xor
dec
aas
in
imul
and
inc
ds
jno
scas
enter
loopne
add
loopne
rcl
mov
push
xchg
mov
xchg
jecxz
adc
test
add
jno
scas
sub
scas
(bad)
adc
pop
add
aaa
pop
jno
scas
add
mov
mov
rcl
cmp
mov
bound
pop
rcr
adc
mov
mov
and
add
jo
add
jo
and
adc
jne
outs
les
xchg
ja
add
and
add
dec
sbb
pop
sub
sbb
mov
xor
push
sbb
fdiv
das
add
loope
inc
out
enter
or
or
or
inc
aas
add
xor
cmc
sub
add
shr
inc
mov
mov
push
fsubr
enter
fist
xchg
movs
jae
mov
mov
in
inc
mov
daa
enter
in
iret
sar
shl
fwait
inc
ds
sti
sbb
jmp
jmp
into
xor
iret
fdiv
sbb
in
and
jl
mov
in
mov
and
jl
lods
out
imul
out
add
xor
and
fmul
cmp
sub
jae
sub
fcomp
sti
enter
ss
fcomp
sti
sbb
retf
enter
mov
test
jle
jb
cmp
jle
pop
lahf
fild
out
iret
pop
ins
in
mov
int3
sub
fadd
sti
enter
ss
fadd
sti
sbb
retf
lds
repnz
and
repnz
movs
int
pop
cmp
cmc
sbb
xor
iret
out
push
jecxz
mov
cs
pop
xchg
and
cmp
jb
fsub
fadd
clc
jb
repz
inc
dec
stc
loopne
mov
jl
adc
sar
pushf
repnz
(bad)
jl
cmp
enter
and
inc
ds
dec
imul
inc
dec
stc
loopne
mov
jl
push
shl
xchg
scas
ret
pushf
repnz
stc
loopne
movs
int
pop
lea
cmp
sbb
pop
stc
loopne
shl
xchg
(bad)
inc
dec
stc
loopne
mov
jl
xor
sar
pushf
jp
repz
out
jnp
cmc
jge
xchg
cmps
idiv
pop
in
and
fadd
cmp
pop
in
jae
test
pop
inc
jmp
cmp
iret
addr16
jne
div
nop
repz
(bad)
repnz
mov
push
mov
push
loop
(bad)
out
or
sbb
push
adc
and
xor
cmp
test
cmp
loope
sbb
les
fsubr
xchg
mov
(bad)
dec
xchg
xor
neg
pop
jae
cmc
mov
xchg
mov
loopne
test
ds
cmp
add
(bad)
bsf
jmp
rol
aam
dec
cmp
clc
ins
sbb
jl
add
jl
(bad)
iret
inc
cli
cmp
lahf
xchg
repz
sub
pop
loopne
adc
into
lods
imul
nop
(bad)
pop
dec
lock
pop
sar
and
jge
lea
(bad)
(bad)
pop
aam
mov
and
mov
mov
dec
call
ja
xchg
sbb
(bad)
push
cmps
icebp
in
mov
inc
xor
jecxz
adc
xor
(bad)
push
dec
lock
push
sar
push
fidivr
lock
xlat
sar
sbb
fidivr
lahf
(bad)
stc
js
push
xor
and
cmp
jno
movs
cmp
mov
mov
imul
jl
clc
xchg
push
jg
movs
into
test
fdivr
(bad)
mov
and
mov
into
cmp
stos
inc
es
stos
push
lods
sbb
pop
mov
ds
repz
cmp
call
popf
mov
mov
aas
fnstsw
jmp
movs
xor
pop
push
and
cmp
loopne
xor
pop
loope
xchg
jbe
addr16
cmp
lea
mov
dec
pop
pop
ret
sar
jmp
idiv
test
sbb
popf
retf
inc
push
mov
push
mov
jnp
cmp
jge
cmp
push
outs
fbstp
dec
xor
jmp
sub
cmp
push
repz
xlat
dec
out
popf
sbb
(bad)
cmp
nop
test
in
adc
mov
pusha
sub
loop
add
enter
sub
stc
mov
jo
or
cmp
rcl
xchg
xor
dec
in
sub
sbb
mov
push
push
into
push
mov
adc
xlat
loopne
lock
push
ds
enter
and
sahf
add
call
adc
sub
retf
sub
add
sbb
xlat
and
test
aaa
and
mov
pop
adc
out
sbb
pop
icebp
inc
xor
loop
pop
rol
pop
sbb
add
sub
xchg
add
jecxz
xchg
repnz
in
mov
sar
sub
pusha
adc
jp
pop
js
aad
adc
ja
push
hlt
inc
add
mov
or
out
call
hlt
inc
pusha
pop
add
inc
dec
push
pop
add
pop
iret
add
add
cmp
xor
in
mov
sub
push
sar
aas
push
scas
stos
mov
imul
mov
mov
xor
and
dec
fidivr
test
mov
leave
js
jnp
rcr
nop
and
cmp
xchg
aas
mov
fild
jae
test
pop
ja
stc
mov
frstor
mov
int3
sub
add
enter
ss
fadd
sti
sbb
retf
les
repnz
cmp
les
xchg
or
mov
(bad)
not
xchg
push
iret
mov
mov
mov
iret
movs
mov
add
fbstp
cmps
cld
jno
in
and
inc
fidivr
sub
pop
sti
enter
ss
fcom
sti
sbb
retf
ret
ds
std
movs
int
test
push
std
(bad)
iret
scas
mov
ds
jnp
xor
cwde
retf
or
cld
icebp
inc
imul
and
and
dec
fidivr
sub
sbb
enter
ss
cmp
sti
sbb
retf
mov
(bad)
outs
xchg
ss
jl
idiv
in
aas
les
repnz
cld
icebp
adc
and
inc
fidivr
sub
test
(bad)
mov
inc
dec
stc
jecxz
fadd
js
mov
out
fsub
nop
push
out
ins
mov
jge
mov
out
(bad)
mov
push
xchg
pop
xchg
cmp
ret
(bad)
out
outs
cmp
in
mov
or
arpl
jecxz
fadd
js
mov
out
fcom
inc
ja
loope
ret
inc
cld
cld
fcomp
(bad)
lock
fs
fidivr
adc
ficomp
jl
ret
xor
loop
cmp
mov
out
dec
xchg
arpl
into
les
sar
lods
jmp
inc
out
sbb
mov
clc
and
popf
outs
nop
mov
cmp
jmp
push
pop
mov
push
sbb
icebp
lea
adc
(bad)
dec
xor
(bad)
aaa
and
jecxz
sbb
dec
jecxz
and
out
mov
sub
cmp
ja
dec
jecxz
adc
loopne
jnp
mov
cmp
jge
mov
inc
inc
mov
pop
sbb
into
std
call
cmp
cmps
xchg
pop
cmp
mov
cmp
mov
js
inc
xor
and
cmp
cmps
icebp
pusha
or
stc
push
sbb
sub
cmp
sar
inc
jecxz
adc
js
mov
cmp
sar
mov
js
loope
push
mov
or
pop
icebp
dec
sbb
fwait
int3
in
popf
outs
or
loopne
pushf
aam
xor
out
jle
jae
test
xor
lods
xor
pop
mov
mov
push
test
push
mov
aad
jns
cmp
pusha
mov
jns
ja
mov
addr16
or
fdivr
fnstsw
jmp
lods
call
mov
into
cmp
lods
xchg
jne
iret
push
push
jecxz
ficomp
imul
pop
mov
cmp
hlt
ds
ficom
(bad)
jle
ja
mov
lods
jae
and
ficomp
jmp
jo
pop
jl
(bad)
rol
jge
cmp
repz
xchg
pop
push
out
lods
ret
xchg
push
fidivr
out
popf
outs
xchg
fdivr
pop
mov
ins
hlt
ret
mov
lods
aam
add
mov
ja
mov
dec
pop
push
rcl
sub
clc
mov
jno
scas
sub
sub
mov
mov
pop
pop
push
ret
xchg
xchg
mov
mul
push
mov
cmp
sub
(bad)
scas
sbb
sub
loop
lock
push
cmp
push
mov
cmp
sub
xor
push
sub
sub
and
pop
retf
sub
xor
test
xor
pop
xor
and
adc
or
into
jmp
mov
xchg
ja
add
adc
(bad)
shr
sbb
sbb
sbb
add
cmp
add
cmp
mov
add
cmp
pop
xor
es
sub
add
add
sub
pusha
pop
add
(bad)
cld
popf
test
pop
iret
and
fmul
add
ja
and
cmps
adc
sbb
mov
shl
cs
mov
out
out
add
aas
push
out
push
arpl
cmp
dec
stc
in
fadd
jns
mov
jmp
push
xlat
jns
icebp
jl
pop
iret
ja
icebp
jl
fdivr
mov
(bad)
pushf
repnz
mul
stc
in
movs
int
fisttp
popf
(bad)
iret
test
push
into
ja
sub
das
(bad)
xchg
ss
cmp
retf
sar
retf
arpl
xchg
or
arpl
not
xchg
push
iret
popa
pushf
icebp
stc
lea
out
iret
lea
test
retf
sar
retf
adc
xchg
cld
repnz
imul
and
and
hlt
and
jae
test
cld
es
lahf
fbld
mov
cmps
sbb
cmps
and
stc
mov
sti
enter
ss
cmp
retf
ret
ds
shl
xchg
jle
inc
fidivr
xchg
pop
jle
sti
enter
ins
pop
cli
and
jae
sub
das
dec
xchg
ss
cmp
retf
sar
retf
xor
xchg
cld
repnz
imul
and
and
hlt
sub
jae
test
jge
ins
jge
addr16
sar
push
xchg
push
jle
push
not
pop
jp
idiv
in
jne
xor
jl
(bad)
out
out
idiv
out
pop
sahf
xchg
xchg
out
fwait
xchg
sahf
xchg
jb
scas
and
addr16
cmp
ds
shl
and
cmc
sbb
and
cmp
cmp
loopne
or
loopne
or
leave
lock
mov
je
mov
js
mov
call
push
js
ds
pop
xor
xchg
dec
pop
inc
xor
ds
push
scas
or
jmp
sub
xchg
lock
aam
fild
sbb
ja
inc
push
scas
sti
jbe
mov
add
xor
push
sbb
and
xor
and
jecxz
xchg
mov
clc
jle
fild
shl
jecxz
nop
jle
(bad)
psrad
lea
jo
arpl
inc
sub
dec
jecxz
adc
sbb
cmp
sbb
aas
dec
pop
out
or
xor
mov
leave
mov
sahf
dec
or
lea
cmps
dec
jo
shr
dec
sub
mov
std
adc
cmps
sar
add
cmp
mov
sub
jne
mov
jnp
lea
jno
sar
add
cmp
jle
(bad)
pavgw
(bad)
out
xchg
jmp
inc
data16
pop
push
mov
mov
cmp
lods
sub
mov
mov
lods
jmp
leave
push
sbb
in
jge
into
jne
loopne
sbb
lods
jae
(bad)
mov
jmp
mov
fdivr
jno
pop
pop
fisttp
pop
lods
jmp
leave
neg
jmp
ror
xor
jmp
lods
xchg
mov
cmp
fdivr
jmp
pop
mov
ins
jo
pop
aas
lea
cmp
mov
mov
jne
lock
jnp
rcr
leave
pop
ja
stos
je
sbb
pop
shr
loop
pop
xchg
iret
push
fmul
mov
jno
scas
sub
rcl
push
ret
mov
dec
clc
mov
jo
adc
sbb
add
icebp
mov
jno
cmp
sbb
repz
out
jo
pop
pop
add
sub
fmul
rol
lds
es
add
push
xor
add
xor
xor
xchg
push
xchg
and
scas
cmp
ret
scas
pop
fisttp
pop
xor
repnz
xor
add
cwde
test
add
push
xchg
repnz
pushf
sub
jne
sub
and
pop
mov
push
sub
push
cmp
add
jns
stos
inc
add
or
adc
add
xchg
mov
sub
jmp
lock
mov
jo
and
and
sub
loopne
inc
shl
pop
xchg
cmps
(bad)
add
clc
(bad)
movs
jae
mov
ret
aas
push
out
jno
(bad)
or
arpl
jmp
in
and
sub
mov
jmp
jmp
sahf
xor
in
pop
xchg
and
cmp
xchg
mov
adc
enter
ins
scas
sti
dec
in
jae
test
mov
retf
jnp
imul
arpl
jmp
mov
pushf
cmc
xor
out
lahf
sar
pushf
jb
iret
bound
cmp
movs
int
aas
mov
cmp
lods
lahf
arpl
xor
cmp
cmp
ins
cmp
sbb
aaa
ds
jns
repz
pop
xor
mov
out
mov
mov
lods
pop
dec
fwait
jmp
mov
cmp
lods
xchg
pusha
pop
cmp
and
pusha
lahf
inc
dec
cmp
pop
mov
pushf
cmc
mov
out
pop
les
xchg
fisttp
out
xchg
icebp
stc
fnstenv
sbb
pop
dec
nop
repz
adc
mov
and
inc
into
cli
push
imul
dec
cmp
xlat
mov
pushf
cmc
imul
mov
pushf
jb
dec
mov
pushf
cmc
push
imul
cmps
pushf
cmc
xor
and
dec
ficomp
in
jae
sub
sbb
enter
xlat
mov
retf
sar
(bad)
sub
xchg
cmp
xlat
movs
int
mov
cmc
fisubr
lods
out
sti
dec
imul
scas
ret
(bad)
stos
movs
int
scas
ret
pushf
mov
lods
mov
outs
mov
jl
fcomp
(bad)
mov
(bad)
pushf
jb
imul
jae
imul
test
mov
loopne
(bad)
out
or
push
jg
xor
movs
pop
aaa
adc
sbb
jmp
(bad)
in
or
leave
lock
fwait
js
fucom
and
mov
shl
sbb
icebp
loopne
aad
movs
pop
aaa
xor
mov
jnp
or
xor
pushf
loop
gs
add
add
call
mov
jae
shr
add
mov
cld
cmp
lea
mov
add
mov
or
dec
sar
dec
or
test
shl
sbb
iret
sar
sbb
scas
sti
pop
sbb
sub
jne
inc
jecxz
and
out
out
cld
cmp
jle
(bad)
das
push
jmp
adc
mov
inc
pop
test
or
xor
sbb
scas
sar
adc
sbb
inc
jecxz
and
out
movs
xor
sub
jne
mov
jnp
lea
push
jle
(bad)
scas
dec
jo
sub
adc
and
out
aad
pop
(bad)
hlt
sbb
add
imul
call
jle
jl
cmp
push
and
jbe
cmp
and
(bad)
xor
lods
xor
call
(bad)
fidivr
popf
mov
lods
push
idiv
test
push
ficomp
cmp
call
cmp
add
push
jae
imul
outs
sbb
jne
loopne
pop
jno
pop
daa
(bad)
cmp
pop
mov
dec
test
shl
fadd
retf
leave
jne
hlt
movs
pop
mov
mov
outs
or
mov
loopne
jne
sbb
mov
jge
sub
and
mov
cmp
repz
xchg
pop
push
xlat
lods
ret
mov
sub
std
sub
fist
aam
hlt
add
lods
aam
add
mov
dec
jno
ds
mov
push
adc
adc
pop
mov
push
adc
adc
mov
popa
sub
mov
mov
ret
add
sbb
js
push
xchg
mov
outs
loope
jb
loop
pop
add
sub
jne
adc
mov
pop
add
xor
cmp
faddp
adc
adc
or
pop
retf
or
pop
and
test
lahf
and
mov
imul
xlat
sbb
sub
aaa
bound
ins
mov
and
ins
inc
mov
sub
push
outs
(bad)
adc
lahf
and
add
clc
sbb
sub
push
jl
add
repnz
add
mov
add
add
rol
(bad)
shl
pusha
cmp
jmp
mov
sbb
jo
and
sub
sbb
loopne
enter
add
cmps
jg
repz
(bad)
mov
in
xor
out
retf
in
jnp
inc
into
ja
sub
xlat
jle
fidivr
fsub
nop
push
xlat
stc
xor
test
adc
jl
pushf
repnz
popa
pop
jns
(bad)
movs
int
jg
jge
cmp
pop
sbb
div
iret
addr16
jge
in
sti
and
into
ja
sub
imul
sti
sbb
retf
ret
ds
movs
int
scas
ret
xchg
or
jmp
int
scas
addr16
xchg
push
iret
popa
xor
ins
mov
mov
iret
jge
in
sti
xor
into
ja
sub
imul
pop
mov
retf
ret
ficomp
ret
pushf
repnz
imul
mov
and
out
cdq
cmc
stc
jge
jl
neg
push
arpl
xchg
add
fbstp
xchg
sbb
ds
repnz
sbb
sbb
retf
cmp
pop
inc
xlat
(bad)
adc
enter
ins
ds
dec
in
jae
sub
xlat
dec
jl
push
fsub
nop
push
pop
sti
imul
scas
std
mov
stc
lock
mov
and
and
clc
push
in
jae
sub
mov
movs
int
xchg
arpl
ins
fadd
jnp
mov
lock
fsub
nop
push
out
in
jbe
sti
mov
xchg
cmps
idiv
push
in
and
clc
push
in
jae
test
mov
(bad)
js
jnp
pop
arpl
mov
jb
arpl
in
out
mov
mov
ret
mov
in
xlat
push
mov
dec
loopne
cld
(bad)
shl
nop
xchg
cli
cdq
fs
adc
sbb
lock
cld
push
loope
out
fs
cmps
rol
cmp
outs
popw
dec
cmp
jo
pushf
fisttp
pushf
js
loope
jp
test
loope
or
int3
lahf
inc
pop
mov
cmp
xchg
pop
call
jbe
cmp
xor
aam
test
ds
pushf
dec
in
inc
fs
add
daa
cmp
(bad)
rcl
aam
jb
fist
pop
adc
adc
gs
rol
pusha
jb
jg
loopne
(bad)
sbb
push
adc
ja
mov
cs
mov
lahf
(bad)
out
dec
jo
pop
sar
add
dec
hlt
pop
sar
arpl
pop
dec
jecxz
adc
loopne
xlat
sar
add
mov
mul
ja
aas
loop
(bad)
jge
mov
cli
dec
hlt
lea
loop
aaa
shl
ss
mov
ret
loop
xor
and
imul
add
call
adc
and
jo
pop
imul
mov
cmp
in
xor
mov
fld
sbb
xor
push
jmp
mov
in
mov
mul
dec
sbb
cdq
xchg
push
cmp
mov
test
(bad)
sbb
push
pop
push
cmp
sbb
ja
cmp
mov
es
push
xchg
cmp
pop
sbb
das
cmp
mov
call
(bad)
sbb
je
jbe
out
xor
je
scas
jae
aad
jno
cmp
in
sbb
sub
(bad)
cmp
mov
sbb
hlt
cmp
mov
arpl
inc
scas
rcr
cmp
and
inc
scas
jae
and
mov
scas
inc
push
sbb
into
fucom
idiv
mov
out
jge
mov
mov
and
inc
mov
jg
(bad)
pop
mov
inc
scas
add
jne
in
call
xchg
loop
jl
bound
scas
sub
xchg
jecxz
add
sub
adc
pop
push
ret
ret
jl
push
mov
lods
js
xor
xor
icebp
es
sub
faddp
adc
mov
mov
push
sub
rcl
mov
sar
mov
(bad)
sub
mov
pop
and
mov
add
and
mov
add
inc
mov
mov
add
lea
inc
scas
outs
les
rol
pop
sbb
sub
inc
or
mov
add
loope
xchg
repnz
fmul
ds
pusha
adc
mov
pop
cmp
icebp
cmp
clc
add
jo
and
gs
lods
sbb
add
or
add
retf
lds
aad
shl
xor
add
loopne
inc
loopne
add
xor
cmp
rol
push
xor
cwde
sbb
cmp
test
into
dec
xchg
sti
(bad)
dec
sbb
xlat
add
fbstp
cmps
pop
sti
dec
in
and
mov
dec
in
jae
test
mov
int
ds
ja
fucomip
or
arpl
idiv
mov
pop
sti
pop
shl
call
pushf
mov
sti
sar
aas
(bad)
out
out
xor
std
xchg
and
cmp
xchg
imul
jge
fidiv
fwait
mov
cmp
(bad)
(bad)
ds
jg
fwait
mov
jb
mov
div
enter
inc
mov
dec
cmp
out
pop
jmp
sti
xbegin
dec
int
(bad)
not
pop
aas
out
scas
(bad)
mov
sbb
cwde
adc
inc
aam
and
push
mov
pop
sbb
pop
inc
cmps
xchg
mov
push
lods
mov
xchg
push
inc
mov
hlt
jle
lods
fistp
mov
jns
or
sti
int
icebp
jp
mov
(bad)
lds
retf
pop
imul
cmp
lea
jnp
neg
std
pop
out
sub
jns
lods
pop
movsx
xlat
fidiv
lahf
(bad)
call
loope
mov
cs
mov
popa
cld
rcr
mov
into
push
scas
and
cmc
xor
inc
scas
fistp
lahf
addr16
lock
mov
iret
repz
push
clc
std
mov
mov
outs
test
scas
or
test
jle
imul
ret
out
push
xchg
aam
mov
mov
(bad)
aas
lods
sar
loope
sub
jns
lods
fisttp
pop
jecxz
(bad)
call
loope
mov
out
test
(bad)
imul
icebp
dec
imul
clc
std
retf
pop
imul
out
(bad)
mov
(bad)
cmps
xor
cmp
mov
or
sbb
mov
pop
cs
jle
cmp
mov
test
(bad)
imul
(bad)
aas
lods
rol
fild
mov
das
clc
idiv
das
outs
pop
call
dec
lods
mov
or
sbb
mov
pop
and
jle
cmp
and
clc
jl
(bad)
clc
jl
pop
jl
jg
das
jmp
xor
lods
mov
(bad)
pop
sar
cmps
xor
sti
mov
or
xchg
adc
jecxz
xor
pop
(bad)
jb
psraw
sbb
add
shl
mov
(bad)
jb
pop
imul
and
lea
sahf
xchg
mov
iret
jecxz
(bad)
call
sbb
out
out
imul
ds
lea
jle
pop
mov
hlt
jmp
gs
jb
call
mov
repz
(bad)
jl
test
call
cmp
mov
enter
fwait
inc
push
aam
inc
scas
shl
cmp
lock
cli
pop
inc
sbb
call
sbb
idiv
inc
enter
stos
shl
repz
out
(bad)
sub
ja
xchg
ds
inc
fcomp
std
iret
fdivr
jae
sar
mov
adc
call
jle
sub
ds
dec
lods
rcr
ins
(bad)
dec
lahf
adc
hlt
addr16
jg
out
fild
fild
clc
xor
sub
lea
inc
sbb
mov
xchg
jbe
xchg
mov
ja
inc
fcomp
mov
mov
out
jo
arpl
sbb
hlt
push
ja
inc
fcomp
mov
mov
pop
mov
hlt
adc
sbb
xchg
out
repnz
push
cmp
sbb
adc
inc
test
scas
enter
or
jle
push
arpl
(bad)
sub
pusha
mov
jno
and
std
lea
hlt
shr
cmp
pop
sub
mov
push
pop
cmp
out
(bad)
mov
(bad)
jge
cld
jmp
inc
shrd
repz
lea
hlt
mov
xlat
xor
retf
aad
clc
sbb
(bad)
hlt
out
mov
int
push
ins
in
pop
mov
in
pop
mov
sbb
pop
pop
mov
repnz
xlat
call
dec
cli
out
(bad)
call
pop
(bad)
xor
xchg
inc
(bad)
mov
aas
cs
lea
hlt
mov
lods
rol
mov
jecxz
xchg
in
out
imul
(bad)
in
push
jae
idiv
jmp
dec
retf
aaa
cmp
rol
lods
rcl
pop
mov
pop
fst
nop
gs
sbb
mov
jg
inc
adc
dec
std
retf
add
pop
test
sar
jg
addr16
jno
mov
or
scas
fidivr
cmp
out
test
in
aad
out
xlat
push
int
stos
stos
repz
xor
and
jle
aam
xor
jb
mov
sahf
push
xor
jle
aam
xor
jb
mov
xchg
or
cli
lds
cmc
sti
out
push
lock
inc
jns
(bad)
aad
mov
js
(bad)
loop
inc
gs
test
dec
clc
std
push
stos
xlat
mov
pop
into
imul
retf
ret
popf
cmp
dec
popf
pop
push
xchg
repz
pop
(bad)
sti
pop
scas
into
stos
stos
into
stos
pop
xchg
repz
mov
mov
stos
push
xchg
repz
mov
inc
popf
push
pop
popf
push
mov
out
cli
pop
out
icebp
stc
adc
cmp
loope
xor
test
sti
mov
add
cld
rcl
sbb
repnz
(bad)
or
mov
mov
aas
in
or
stos
pop
aas
jg
mov
fbld
inc
sbb
jnp
retf
sbb
test
push
lds
jecxz
or
lock
ror
fbld
push
(bad)
jmp
inc
mov
es
push
lea
scas
push
mov
ret
out
jmp
lods
rcr
aam
sub
scas
leave
fnsave
sbb
xlat
scas
(bad)
ret
out
(bad)
mov
mov
adc
mov
fcomp
mov
fcomp
mov
mov
push
mov
repz
js
enter
clc
lds
leave
mov
pop
sbb
jge
outs
arpl
sub
pusha
dec
ins
es
cmps
ss
mov
movs
aas
out
rcl
xchg
test
push
sar
retf
fldenv
cld
ja
movs
dec
ins
sbb
ds
aam
lock
popf
call
daa
std
(bad)
sahf
or
push
aaa
stc
dec
mov
das
push
push
outs
call
jne
aam
rcr
ret
sub
scas
mov
in
mov
out
mov
out
push
(bad)
jecxz
(bad)
jmp
pop
sti
jmp
lock
(bad)
stc
dec
jnp
mov
fst
cmovp
jno
ret
sbb
mov
pushf
adc
pop
movs
mov
xlat
jecxz
leave
jecxz
jmp
in
cmp
inc
xchg
jmp
fiadd
and
imul
je
int
stos
imul
shl
mov
mov
cmp
xchg
psadbw
adc
ja
shl
and
mov
push
jnp
mov
push
mov
jne
or
jl
cmp
sahf
(bad)
mov
loopne
push
repnz
pop
jmp
retf
out
pop
sub
scas
xchg
sbb
jmp
jmp
repz
ins
in
cli
enter
ins
pop
in
shl
lods
mov
mov
jb
inc
mov
mov
xchg
pop
push
pop
push
adc
retf
sub
cmp
dec
pushf
xchg
pop
or
lds
mov
in
test
and
ja
ins
cmp
xchg
fistp
jb
das
mov
jmp
fucomi
icebp
fcomp
mov
jb
dec
outs
(bad)
retf
in
pop
mov
fwait
in
scas
fdivr
or
cmp
pop
nop
fld
ss
mov
leave
in
pop
jb
push
outs
fld
pop
leave
ins
call
mov
xchg
fld
in
pop
arpl
aam
mov
jo
inc
lock
movs
in
aas
sti
fidiv
repnz
push
push
mov
pop
imul
dec
mov
jbe
cld
ja
jmp
sbb
movs
scas
pop
out
ins
jmp
cs
mov
sub
mov
pushf
jne
mov
mov
mov
daa
push
rcr
aas
mov
adc
jb
dec
xor
xchg
mov
dec
daa
int
loop
sbb
jl
repnz
pop
add
arpl
sbb
int
arpl
jne
xor
mov
push
in
inc
jo
mov
arpl
or
mov
push
mov
sbb
out
mov
jae
(bad)
sahf
xchg
arpl
mov
mov
mov
fimul
cmp
mov
imul
mov
fidiv
lods
add
sub
rcr
popf
sbb
sub
jb
xor
(bad)
inc
jnp
mov
xchg
arpl
lea
movs
sbb
cmps
mov
mov
xchg
call
sub
fisubr
in
inc
cmp
xlat
in
mov
inc
mov
(bad)
cmp
retf
mov
or
mov
in
mov
in
and
jbe
mov
mov
jnp
fadd
in
(bad)
in
and
es
mov
mov
pop
sub
arpl
movs
sar
xchg
call
push
jmp
xchg
cmp
jbe
sbb
pop
jmp
push
and
repz
cmp
mov
xchg
dec
int
arpl
dec
push
stos
in
iret
pop
dec
adc
dec
mov
adc
fld
in
or
mov
mov
adc
imul
push
inc
in
(bad)
cli
or
frstor
int
sub
bnd
arpl
(bad)
push
out
retf
mov
cli
push
test
jp
push
xchg
xchg
je
xchg
jge
fmul
xchg
arpl
jmp
(bad)
stos
mov
push
test
call
inc
bound
bound
adc
sbb
mov
loop
test
push
daa
add
nop
arpl
inc
pop
test
jno
push
sbb
inc
call
mov
pop
mov
sub
or
xchg
in
idiv
mov
call
ins
pop
adc
in
mov
push
sub
mov
in
and
jle
(bad)
and
(bad)
cmp
nop
arpl
mov
sub
jb
mov
sub
lods
repnz
cmp
(bad)
cmp
mov
sub
pop
sbb
mov
jb
(bad)
icebp
movs
sbb
cs
ficomp
retf
in
inc
add
jb
(bad)
or
dec
xor
mov
jb
popf
icebp
lods
sbb
inc
mov
inc
retf
(bad)
fiadd
xchg
xchg
cmp
lods
adc
jmp
fdivr
cmp
sbb
in
retf
in
pop
repnz
rcr
into
mov
sbb
mov
jge
mov
scas
cmp
in
pop
xchg
pop
shl
pop
aad
jo
push
in
(bad)
scas
xchg
adc
loope
push
sub
push
sub
sbb
not
cwde
ja
in
mov
cmc
iret
sub
inc
shl
jmp
jbe
or
stos
(bad)
aam
pop
pop
push
test
mov
inc
outs
or
sahf
mov
jbe
fcom
leave
in
out
hlt
nop
cld
stc
xchg
fdivr
jne
cmps
jns
cs
jmp
jmp
ja
mov
pop
ja
rcl
sub
frstor
(bad)
fldenv
jg
push
sahf
cmc
mov
aad
into
enter
sub
sti
and
push
sub
js
pop
add
js
lock
xchg
sbb
stos
in
cmc
sti
(bad)
xlat
lea
iret
xor
jecxz
sahf
imul
call
pop
sub
pop
retf
inc
sahf
jmp
call
jae
xchg
xchg
call
jae
xchg
iret
cmc
mov
mov
scas
jecxz
mov
pop
mov
fcmovnb
jae
xor
pop
push
inc
jne
enter
pop
jp
popa
repnz
jecxz
hlt
pop
je
shl
sub
jmp
inc
iret
jne
in
jle
(bad)
xlat
outs
repnz
lods
dec
jae
mov
js
in
shl
and
stos
inc
xchg
push
repnz
push
inc
jne
jl
stc
repnz
in
push
iret
cmc
ins
xor
gs
sub
scas
fidiv
adc
push
ja
das
fdivr
je
pop
push
mov
fwait
(bad)
adc
jp
cmp
sbb
imul
(bad)
mov
mov
out
(bad)
or
inc
mov
outs
nop
es
stos
out
jo
in
pop
jno
cdq
cwde
sbb
mov
repnz
movs
push
and
aam
sbb
fisub
push
xor
dec
cmc
or
or
add
push
test
cmp
(bad)
sub
scas
cmps
hlt
push
xor
int
adc
jmp
in
mov
xor
ficom
aad
rol
jg
out
jmp
add
mov
arpl
fdiv
push
aad
dec
jno
pop
popa
lds
or
xor
push
push
(bad)
add
sub
into
push
inc
sub
push
daa
pop
sub
push
mov
ss
jp
call
mov
pop
test
mov
stos
mov
mov
push
push
pop
push
sbb
inc
adc
inc
push
out
lods
push
rcl
imul
nop
inc
rcr
dec
push
mov
push
in
pop
push
sub
mov
xchg
loopne
sbb
pop
stos
scas
ins
mov
popf
movs
rol
aad
adc
xchg
push
inc
fbld
cmps
add
shl
sub
mov
jmp
dec
mov
mov
push
mov
shl
sub
sub
mov
push
mov
fld
mov
aam
sub
aas
mov
mov
jne
aad
mov
int
stos
xor
push
arpl
jecxz
adc
xchg
adc
test
outs
lods
cdq
jbe
cmp
dec
test
or
dec
ins
and
mov
push
sub
pop
and
stos
lods
xlat
pop
imul
xchg
cwde
cmc
pop
sbb
dec
dec
rcl
mov
push
sbb
cmps
mov
bound
lods
or
pop
jmp
mov
lods
gs
lahf
add
fsubr
pop
imul
daa
test
adc
cmc
lods
(bad)
xchg
(bad)
push
sbb
push
call
pop
std
cmp
lods
inc
and
pop
jmp
jne
stos
(bad)
call
cmps
jp
cmp
inc
push
mov
add
cmps
push
or
push
sbb
sbb
or
jne
push
aaa
ins
pop
aad
cmps
lods
ja
(bad)
dec
xchg
add
cmc
xchg
movs
pushfw
jbe
ss
sbb
xor
adc
sub
int
jp
lods
push
stos
push
pop
sbb
cld
ins
imul
push
mov
gs
cmp
call
push
mov
(bad)
lods
mov
jno
xchg
cmc
add
adc
xchg
inc
add
mov
jle
push
popf
call
fld
cld
fadd
and
xchg
cli
cmp
inc
popf
or
sbb
stos
lods
(bad)
aam
movs
cs
mov
jmp
dec
fstp
cmps
jle
data16
pop
push
pushf
aaa
push
mov
(bad)
xchg
push
stos
lahf
ds
mov
nop
jle
ss
push
jnp
ds
fwait
inc
cmc
lods
cmp
inc
lea
pop
inc
dec
test
ins
cmps
push
test
in
movs
pop
stos
cmp
inc
in
stos
pop
pop
lahf
mov
mov
jmp
mov
push
movs
cmp
xchg
sbb
(bad)
(bad)
jmp
sbb
mov
cmp
jp
mov
loopne
out
mov
(bad)
loop
(bad)
pop
(bad)
xchg
stos
loopne
mov
and
jns
in
jne
mov
jbe
daa
mov
iret
pop
movs
mov
cmps
inc
scas
xchg
mov
cmp
sbb
mov
mov
in
sub
cmp
mov
pop
or
imul
push
jns
jnp
cld
push
je
jp
push
fimul
mov
nop
stos
cmp
enter
mov
push
into
pop
and
sub
test
fistp
jb
sbb
jle
push
jbe
scas
lahf
mov
in
sub
scas
rcl
pop
jb
cli
mov
inc
mov
jle
adc
jbe
iret
inc
scas
ror
and
sub
push
popa
jg
fild
out
ror
or
retf
stos
or
pop
jge
push
jle
hlt
mul
scas
xor
pop
in
nop
stos
or
dec
xchg
jno
in
sub
push
scas
xor
push
jbe
mov
clc
(bad)
or
mov
mov
push
jp
mov
test
mov
mov
enter
pop
movs
push
push
es
pop
aam
mov
repz
dec
shr
test
cs
push
cmc
jp
push
leave
adc
rol
sar
in
sub
scas
xor
push
jb
cmc
mov
jmp
and
dec
or
enter
in
stos
je
cmps
popf
mov
mov
je
mov
and
and
pop
iret
cmp
(bad)
inc
jg
mov
cs
loop
stos
hlt
xchg
push
stos
push
pop
mov
sbb
out
aam
xchg
fiadd
dec
cmps
dec
add
test
push
jbe
repnz
aad
inc
jmp
inc
test
int
outs
sbb
cmc
jb
imul
jmp
push
leave
push
loop
add
mov
dec
inc
jne
mov
dec
or
adc
aam
sbb
pop
jno
test
push
xchg
stos
out
icebp
aad
popf
aam
aad
mov
cli
mov
push
jnp
push
fistp
dec
gs
mov
xchg
shr
push
push
daa
bound
mov
cmc
pop
push
xchg
stos
lds
dec
sub
(bad)
jne
cli
mov
pushf
ss
out
dec
mov
icebp
mov
mov
les
hlt
(bad)
test
lds
jle
jecxz
push
xor
lods
jmp
mov
jae
adc
mov
jmp
mov
push
aaa
inc
jg
ret
mov
lods
inc
fucomp
movs
test
mov
xchg
scas
pop
inc
popa
push
ja
ds
ret
push
cmp
push
jge
test
cmp
pop
or
or
into
dec
cwde
aad
xlat
adc
int3
jmp
jno
data16
jp
test
popf
cli
dec
adc
jne
jmp
or
cs
cwde
aad
test
mov
scas
xchg
out
cmps
lods
xlat
ss
aam
cmc
sub
adc
xlat
test
jmp
or
mov
xchg
cli
scas
fidiv
sbb
push
outs
jne
adc
xor
mov
out
cwde
aaa
fisub
pushf
lods
(bad)
pop
cmps
test
(bad)
pusha
or
(bad)
sub
test
push
jge
test
cmp
out
shl
mov
(bad)
shl
or
repz
jnp
aad
out
imul
and
hlt
fcom
std
sub
sbb
pop
adc
lea
(bad)
cmp
imul
test
jae
rcl
(bad)
repz
cmp
repz
sti
cmc
bound
repz
sub
cli
or
mov
shl
cwde
aaa
ror
sub
sbb
jmp
data16
mov
iret
mov
not
aaa
lods
inc
je
ret
adc
push
jge
test
bound
xor
sub
mov
dec
cmc
rcl
cmp
test
jecxz
dec
or
(bad)
daa
je
dec
and
cmp
aaa
out
sbb
lea
stos
sub
sbb
sbb
xor
sar
push
cwde
aaa
xlat
mov
int3
sbb
test
(bad)
iret
call
push
jmp
push
pop
dec
popa
fidivr
outs
jl
das
cmps
xor
lods
pop
das
mov
inc
out
inc
popa
fidivr
fdivrp
mov
mov
outs
pop
scas
aaa
mov
pop
hlt
xor
repz
pop
cmc
sbb
repz
jl
das
test
dec
jp
aad
cwde
aaa
mov
out
scas
call
push
cwde
aaa
mov
outs
fsub
(bad)
sbb
cmc
sbb
add
mov
cmc
pop
push
push
mov
dec
in
movs
(bad)
dec
imul
push
mov
outs
inc
popa
xchg
xchg
xchg
ret
stos
ds
ret
fwait
ds
ret
mov
rep
std
sub
xor
ja
or
jmp
jle
jg
popa
xchg
mov
jae
push
jge
adc
sti
hlt
cmps
adc
cwde
pop
jmp
jle
pop
dec
popa
xchg
jg
push
test
out
cli
jl
xor
iret
cmc
cmp
xor
das
hlt
dec
adc
cwde
pop
jmp
mov
popa
jle
imul
xor
cmp
push
mov
mov
xor
cmp
ja
xor
cld
pop
pop
dec
popa
xchg
cmp
ret
daa
jge
test
out
std
sub
xor
pop
hlt
or
jmp
jg
test
jmp
fs
cmc
cs
jne
aad
cli
sub
dec
movs
push
test
mov
bound
aad
mov
std
scas
pop
movs
push
pop
mov
push
pop
mov
mov
je
dec
mov
mov
mov
stos
mov
sub
jne
or
mov
aad
mov
movs
adc
retf
adc
mov
or
push
pop
dec
cmps
push
pop
push
bound
jbe
test
dec
loop
test
stos
sub
push
xchg
push
pop
shl
and
sub
mov
inc
jne
mov
adc
sub
mov
cmps
lds
bound
or
adc
pop
mov
or
aad
dec
sub
push
pop
mov
pop
adc
stos
mov
dec
mov
nop
adc
mov
or
adc
scas
mov
stos
sub
push
test
mov
stos
daa
jle
push
pop
cmc
inc
xchg
jmp
push
pop
cmc
inc
cmp
aad
pop
movs
push
test
js
pop
aad
push
test
mov
add
clc
xchg
inc
jne
adc
add
and
test
xor
push
add
test
push
xchg
push
test
push
bound
test
push
mov
test
inc
or
aad
and
test
xchg
sub
mov
cmps
sbb
std
js
xchg
pop
inc
stc
icebp
or
dec
adc
push
and
test
xor
pop
push
mov
inc
lahf
xor
pop
jae
ja
adc
lods
test
shl
lds
jge
sub
call
cmps
test
imul
xchg
dec
mov
or
push
sbb
shl
inc
int3
jo
hlt
pop
jnp
xchg
and
(bad)
inc
ins
mov
xchg
adc
in
bound
lods
mov
adc
sub
aam
dec
call
test
mov
addr16
mov
jno
inc
lahf
movs
mov
xor
push
call
test
jmp
fcom
dec
call
test
mov
addr16
(bad)
dec
sbb
shl
inc
fmul
dec
call
test
mov
addr16
push
or
push
push
xlat
mov
(bad)
dec
movs
push
call
test
sbb
push
push
call
sub
xchg
movs
mov
jbe
fadd
iret
push
mov
xchg
js
adc
ins
mov
inc
mov
or
push
adc
call
lods
dec
call
test
sbb
cmps
push
call
or
xchg
cmp
iret
rol
dec
call
test
mov
addr16
jnp
stos
iret
inc
mov
test
push
xchg
mov
inc
sub
jge
mov
dec
mov
sub
fldln2
bound
mov
mov
lods
nop
dec
movs
(bad)
dec
gs
test
push
call
test
sbb
movs
shl
loop
test
fwait
and
shl
inc
aad
dec
call
test
fwait
and
hlt
fnstcw
ss
mov
mov
enter
mov
sub
sub
mov
mov
hlt
pop
xchg
rol
sub
sub
fld
dec
mov
sub
pop
mov
dec
mov
push
call
inc
lahf
sub
pop
mov
inc
lahf
cmp
addr16
jnp
cld
dec
mov
je
hlt
(bad)
rcr
adc
ins
xchg
mov
push
jecxz
lock
rcr
data16
stos
ja
cli
in
jns
call
cmp
iret
sahf
pop
icebp
ja
mov
adc
ins
popf
enter
jmp
push
test
jnp
adc
call
or
or
push
je
shl
and
mov
inc
push
stc
adc
in
gs
dec
mov
js
hlt
fldcw
and
test
cwde
dec
mov
adc
lods
inc
in
mov
mov
mov
mov
mov
bound
test
sub
sub
fnstenv
mov
inc
lahf
mov
mov
inc
cld
popf
dec
call
push
push
push
test
jnp
cmp
out
push
xor
dec
cmp
(bad)
fs
mov
mov
les
cli
in
jge
cmp
jge
mov
ds
push
call
test
(bad)
mov
in
inc
push
inc
mov
sub
fldcw
jae
adc
ins
mov
dec
mov
adc
ins
(bad)
cwde
inc
mov
sub
fstp
test
fld
dec
sub
fnstcw
popa
dec
push
jmp
adc
sub
fnstcw
or
push
or
fdiv
cli
ins
mov
test
test
xchg
adc
ins
mov
test
xor
push
mov
jl
jge
xchg
fadd
iret
adc
adc
pop
or
and
push
call
dec
cmc
fld
and
jbe
call
fisttp
mov
rcl
xor
hlt
fldenv
xor
xchg
push
call
mov
cli
in
or
lahf
inc
lahf
jge
mov
hlt
fst
nop
inc
lahf
xchg
mov
adc
in
imul
lea
dec
mov
adc
in
mov
xchg
jl
inc
xchg
or
inc
int3
movs
shl
inc
add
sub
fnstenv
fnstenv
lea
sbb
in
pop
mov
inc
lahf
std
sub
cmps
sub
adc
lods
push
dec
mov
test
sti
pop
sbb
shl
mov
jnp
shl
lds
jge
stos
enter
cmps
les
jge
fwait
xor
jecxz
add
fstp
xchg
inc
mov
adc
in
ja
inc
mov
xchg
cli
dec
aaa
cli
push
call
call
shl
jno
inc
lahf
pop
inc
ror
cdq
ins
mov
inc
mov
inc
lahf
jns
hlt
sub
hlt
cdq
outs
hlt
mov
cdq
adc
sub
sub
push
or
shr
or
imul
xor
push
call
sbb
jmp
push
sub
pop
mov
test
push
xor
sub
pop
push
jecxz
test
stos
les
mov
movs
push
lahf
push
aaa
es
and
(bad)
data16
ret
cmp
iret
bound
lods
mov
inc
mov
push
stos
iret
jmp
push
push
int3
cmp
cmc
pop
sbb
stos
imul
jmp
and
out
cmps
shl
lea
arpl
test
imul
shl
lea
hlt
pop
sub
sub
imul
pop
or
(bad)
push
sbb
(bad)
and
jge
mov
sahf
inc
lahf
pop
bound
mov
(bad)
jb
jge
test
cs
not
mov
(bad)
popa
or
int
mov
shl
mov
or
shr
mov
push
call
adc
lods
scas
xchg
inc
mov
push
call
adc
ins
mov
pop
addr16
mov
fist
mov
(bad)
pop
sub
xor
mov
cli
ins
cwde
xchg
dec
movs
dec
or
push
call
or
fsubr
mov
in
add
add
shl
sbb
inc
test
dec
xor
call
or
ror
stos
or
mov
test
ins
xchg
push
inc
mov
sub
fldcw
hlt
fldcw
mov
iret
(bad)
sbb
arpl
test
sbb
movs
shl
inc
aam
and
xor
mov
dec
or
rcr
mov
aam
sub
inc
and
leave
and
int
in
push
mov
jbe
xchg
dec
mov
push
call
or
int
dec
mov
push
call
nop
adc
in
pop
mov
xlat
mov
movs
push
call
adc
ins
xchg
or
ds
popa
in
mov
ret
adc
ins
cmps
push
cs
or
shr
mov
push
call
test
fwait
ins
sub
cmp
inc
mov
sub
fstp
add
ds
arpl
imul
adc
ins
mov
test
fwait
arpl
shl
mov
cli
ins
mov
sub
push
call
and
mov
mov
xor
push
call
test
fwait
imul
call
or
xlat
cmp
movs
cli
ins
sahf
adc
test
cli
in
jle
xchg
inc
lahf
sbb
sub
fnstcw
test
jnp
rcl
sub
adc
ins
mov
push
sbb
sub
fld
not
cli
sub
call
xor
hlt
fldenv
(bad)
push
or
test
xchg
inc
lahf
sub
mov
push
call
test
pop
push
push
call
test
mov
ret
mov
push
call
test
jnp
dec
enter
cmp
addr16
mov
adc
sub
fadd
iret
xchg
sbb
jecxz
call
or
mov
mov
lods
xor
push
call
adc
ins
xchg
adc
test
cli
in
cmp
xchg
inc
lahf
lods
ss
push
call
or
(bad)
rcr
outs
and
call
test
pop
outs
lods
movs
shl
sbb
sub
(bad)
cli
sub
call
xor
sub
fxch
(bad)
push
or
mov
inc
lahf
ins
xor
lahf
push
inc
lahf
ins
xor
push
call
or
leave
sub
aam
dec
call
or
call
ins
mov
jecxz
cli
in
or
cli
in
dec
arpl
test
fld
cmps
shl
(bad)
or
int
repz
shl
sbb
hlt
fnstenv
adc
mov
pop
dec
test
xchg
sub
iret
fidiv
jp
call
adc
in
cmp
sti
rcr
mov
movs
push
lahf
in
xor
xchg
dec
lods
xchg
retf
jge
retf
fadd
jbe
mov
jecxz
test
fld
iret
sub
adc
in
adc
ss
mov
adc
in
xor
inc
lahf
jge
int3
mov
push
adc
in
sbb
test
cmp
inc
mov
pushf
mov
(bad)
fild
hlt
fnstenv
int3
dec
and
adc
call
lea
sub
fxch
mov
jbe
cwde
dec
mov
adc
in
mov
mov
popf
xor
int
inc
mov
stos
test
xor
push
cli
int3
ss
push
call
mov
test
mov
(bad)
push
call
sub
xor
aad
add
shr
push
movs
mov
movs
mov
sub
and
push
xor
xor
lds
sub
xor
push
inc
lahf
inc
fwait
int
hlt
pop
adc
stos
push
mov
push
mov
push
test
mov
dec
sub
pop
mov
mov
fucomp
dec
mov
adc
lods
cmps
mov
xor
push
call
or
addr16
scas
push
inc
lahf
aad
jnp
call
inc
lahf
xor
pop
inc
mov
inc
lahf
xor
mov
xor
out
adc
pop
sbb
inc
lahf
xor
push
pop
adc
lods
test
scas
pushfw
(bad)
rcr
stos
(bad)
fs
mov
dec
sub
pop
dec
sar
or
push
mov
or
retf
inc
lahf
mov
mov
hlt
pop
imul
imul
mov
sub
pop
sbb
pop
xchg
fld
std
sub
pop
xchg
cmp
pop
movs
shl
int
adc
lods
popf
stc
or
cmps
shl
int
jmp
cmp
mov
popa
adc
sub
mov
fwait
dec
push
or
fcom
jge
ins
xchg
push
call
inc
or
ins
movs
shl
data16
or
ins
fiadd
iret
cmp
pop
repz
jge
rcr
mov
sub
pop
pop
xor
inc
and
and
dec
mov
push
sbb
(bad)
sbb
fst
(bad)
cs
test
mov
mov
(bad)
cmp
mov
call
aam
movs
data16
dec
dec
test
retf
int3
(bad)
adc
in
jb
mov
movs
cwde
test
lods
stos
jns
inc
lods
pop
popa
es
data16
cmp
mov
ret
sub
push
imul
scas
sub
sub
pop
das
jae
test
ins
push
push
test
stos
int3
push
or
adc
lods
(bad)
cdq
inc
mov
adc
in
sbb
test
addr16
ins
push
inc
lods
cmc
aaa
push
sub
fiadd
jae
test
(bad)
int3
cmps
push
imul
mov
mov
or
inc
lods
or
(bad)
out
or
sub
sub
ficom
add
pusha
scas
cmps
push
imul
adc
mov
fmul
push
aaa
cdq
pop
adc
sub
imul
rcl
in
xor
adc
movs
cmp
repz
fisubr
mov
or
inc
lods
lea
addr16
test
fcmovne
add
mov
(bad)
sub
push
imul
scas
repz
movs
fwait
imul
inc
lods
lea
not
mov
les
and
inc
mov
push
test
or
test
push
xchg
int3
clc
aaa
clc
cs
cs
test
ins
cs
push
mov
mov
add
pop
mov
(bad)
cmps
cwde
xor
mov
push
test
jmp
jbe
cdq
and
sub
sar
ds
stos
(bad)
out
xor
sbb
cmp
stc
xor
cmps
push
imul
adc
in
jle
adc
mov
(bad)
add
and
push
test
enter
(bad)
push
ss
test
inc
int
or
test
push
dec
mov
mov
test
in
sub
push
or
push
imul
jb
xchg
push
imul
cmc
sub
fidiv
neg
xor
test
out
jnp
aam
jp
popa
or
inc
lods
mov
imul
(bad)
out
out
push
hlt
fldenv
sar
or
mov
dec
loope
jge
icebp
xchg
std
sub
mov
push
mov
aam
fwait
out
or
scas
test
push
push
test
lods
out
or
push
imul
jne
push
fwait
pop
inc
mov
sbb
data16
inc
sub
(bad)
fidiv
jae
aam
(bad)
push
or
mov
outs
sub
adc
ins
cmps
cmp
push
test
bswap
pop
adc
ins
scas
jns
inc
lods
in
xor
ficom
lods
in
aaa
mov
int3
je
mov
fs
push
imul
pop
sub
fcmovb
out
or
stos
mov
sub
aaa
mov
ror
cwde
arpl
cwde
lods
mov
out
or
inc
lods
jge
out
mov
daa
sub
ficom
test
das
int
or
test
retf
inc
lods
xchg
cwde
cmp
lods
les
lods
jge
jle
mov
not
sub
fidiv
out
adc
in
sbb
test
(bad)
pushf
dec
mov
push
test
and
push
addr16
mov
push
nop
fstp
mov
adc
in
nop
mov
xor
push
test
inc
out
or
inc
lods
sbb
test
ins
mov
push
imul
mov
mov
sbb
imul
mov
mov
sub
ficom
mov
cs
mov
or
mov
push
test
out
int
setne
(bad)
int
or
inc
lods
std
push
aas
cdq
fisubr
aam
test
dec
cwde
jmp
jae
test
lds
mov
jnp
push
imul
sub
xchg
inc
lods
std
data16
mov
xchg
adc
in
mov
jbe
sbb
mov
sub
call
mov
cmps
test
push
ja
mov
pop
shr
aam
imul
pushf
inc
lods
fst
jle
aam
arpl
mov
inc
lods
jns
or
dec
test
jb
pop
or
push
imul
jne
push
xor
lods
inc
pop
jno
dec
test
sub
xchg
inc
lods
push
mov
push
test
dec
(bad)
push
or
push
inc
lods
inc
pop
leave
adc
lods
mov
pop
sub
aam
xor
mov
lods
push
mov
push
test
sbb
test
imul
dec
or
aas
and
adc
pop
stos
arpl
push
test
cmp
mov
mov
out
adc
lods
mov
lds
sub
pop
add
cmp
jl
test
fs
(bad)
bound
mov
fcomp
inc
mov
addr16
test
cmps
(bad)
and
pop
inc
test
aam
xor
sub
mov
fsubr
movs
push
imul
xchg
adc
lods
mov
pop
dec
aad
imul
inc
push
mov
jmp
in
dec
test
and
or
dec
mov
or
inc
lods
jne
push
test
dec
(bad)
jecxz
push
mov
mov
movs
push
imul
xchg
adc
in
or
push
or
inc
or
inc
lods
cmc
mov
push
test
stos
lods
adc
mov
push
test
(bad)
push
test
(bad)
jp
inc
lods
movs
pop
out
push
test
inc
(bad)
xlat
adc
ins
mov
call
test
xor
pop
xchg
push
test
xor
xchg
inc
lods
(bad)
push
imul
push
jmp
or
push
imul
sub
pop
mov
fbstp
sbb
lods
shr
aad
add
dec
sub
test
lods
lea
xchg
mov
or
sub
adc
ins
xor
push
test
mov
push
mov
leave
fimul
(bad)
es
cmps
test
sub
sub
fisub
inc
lods
(bad)
push
test
test
ss
dec
mov
fcomip
out
inc
lods
dec
mov
push
test
sti
lods
sub
ins
xchg
xchg
inc
mov
sub
ficomp
xchg
inc
lods
gs
mov
sub
adc
ins
sahf
xor
mov
sub
fidivr
fisub
push
inc
mov
push
sahf
jnp
jecxz
inc
push
dec
sub
mov
xor
push
cvtps2pd
test
xchg
push
or
inc
dec
test
ins
stos
adc
dec
mov
movs
push
imul
inc
lods
aad
push
adc
jge
mov
test
cmp
stos
js
or
mov
sub
fisub
popf
push
addr16
arpl
push
or
inc
lods
sub
in
int
dec
test
and
mov
sbb
(bad)
xchg
pop
not
mov
(bad)
xchg
adc
ins
mov
push
test
push
dec
mov
push
and
sahf
inc
lods
sub
mov
(bad)
dec
or
test
sbb
pop
or
mov
dec
test
aas
cmps
test
ret
mov
sub
pop
scas
mov
inc
lods
cmp
mov
push
test
gs
push
test
mov
push
test
in
or
jle
test
(bad)
jmp
adc
in
pop
stos
nop
inc
lods
lods
mov
push
test
out
movs
jecxz
test
aad
push
retf
imul
or
adc
ins
popf
aad
inc
lods
lods
mov
push
test
pop
lods
add
mov
mov
repnz
data16
sub
sub
fcmove
push
push
test
(bad)
mov
aas
sub
adc
in
push
imul
pop
(bad)
test
add
sub
xchg
sub
push
test
xlat
lods
ins
or
mov
adc
mov
lods
mov
ins
stos
xchg
inc
mov
adc
ins
fwait
push
inc
mov
jg
inc
lods
ins
mov
push
test
sbb
jnp
sub
sub
fidivr
test
popf
(bad)
push
xchg
inc
mov
sub
fiadd
push
hlt
dec
and
pop
test
rcr
pop
add
push
dec
mov
jle
inc
lods
in
mov
sub
fidivr
xchg
jge
in
movs
push
imul
sub
or
inc
mov
cmps
push
imul
and
push
imul
movs
call
adc
in
xor
popf
inc
lods
sbb
ficom
sti
retf
push
mov
xchg
xchg
jb
imul
mov
lods
xlat
sub
fcmovbe
(bad)
jle
mov
lods
jne
inc
lods
sbb
test
and
or
mov
push
test
pop
lods
popa
adc
in
daa
imul
pop
cmp
inc
mov
push
test
pop
lods
add
mov
fwait
mov
inc
lods
popf
mov
lahf
mov
pop
(bad)
pop
and
push
test
ret
outs
dec
mov
test
in
fwait
sub
call
in
inc
adc
lods
mov
inc
fisubr
idiv
mov
fnstcw
inc
mov
out
dec
test
push
dec
or
mov
sub
pop
sub
stos
arpl
push
imul
movs
lock
dec
pop
mov
test
push
jmp
mov
mov
outs
ja
push
imul
cmp
mov
test
mov
enter
aam
and
xchg
inc
lods
and
lods
mov
popf
inc
lods
xor
movs
jbe
test
cmps
test
(bad)
aam
adc
mov
jbe
or
push
imul
ret
push
imul
lea
fcmovu
jge
aam
jnp
adc
sub
pop
pop
jnp
test
enter
(bad)
cs
dec
fisub
test
mov
cs
lods
xchg
cmp
nop
inc
lods
jne
pop
xchg
push
mov
cdq
mov
mov
(bad)
cs
dec
or
inc
lods
pop
outs
mul
sbb
mov
bound
movs
push
imul
adc
lods
stos
mov
popa
xchg
push
test
sub
stos
mov
push
fstp
push
sub
pop
aaa
jnp
test
outs
das
movs
push
imul
int
push
xchg
sbb
mov
push
dec
mov
xor
mov
movs
popf
inc
mov
sub
pop
dec
jnp
mov
mov
push
imul
cmps
in
mov
jbe
or
mov
push
test
pop
test
push
xchg
std
cmp
pop
jmp
out
mov
pop
sub
pop
das
mov
jmp
daa
push
test
fdivp
add
mov
fistp
mov
push
cmp
aas
or
(bad)
sub
ins
aaa
repz
shr
in
xor
in
(bad)
xlat
into
mov
jnp
mov
aas
cmp
mov
push
fcom
mov
mov
test
push
test
(bad)
cmp
test
fs
push
adc
ins
mov
xchg
push
inc
mov
push
test
rcr
fld
ins
mov
in
jbe
fstp
addr16
push
inc
mov
push
dec
and
xor
jbe
gs
push
or
jbe
sbb
mov
fld
xor
mov
in
jbe
test
arpl
jbe
mov
mov
cmp
out
push
or
fimul
retf
mov
sub
in
ss
shr
in
mov
sbb
jbe
cmp
mov
sub
in
lds
mov
in
mov
in
push
cmp
push
push
push
test
xlat
mov
iret
out
dec
mov
adc
ins
cmps
pop
dec
mov
sub
adc
ins
mov
fidivr
fisubr
pop
dec
mov
aad
shr
fstp
cmp
mov
push
push
call
fstp
mov
mov
mov
lds
mov
sub
mov
push
dec
mov
mov
pop
pop
imul
mov
jnp
test
les
mov
sub
jbe
mov
push
push
jmp
dec
mov
scas
pop
popf
inc
mov
push
test
popa
shld
outs
sub
cmp
mov
sub
mov
lods
mov
push
push
adc
ins
popf
mov
pusha
pop
movs
shr
mov
push
or
div
fsubr
mov
stos
not
push
dec
mov
push
push
or
mul
adc
fistp
pop
or
mov
ds
mov
lods
adc
ins
cmps
pop
popf
inc
mov
push
or
mov
push
sub
pop
cmp
outs
sti
in
lds
push
push
aam
or
mov
mov
outs
daa
push
push
or
mov
into
movs
shr
idiv
or
push
fs
push
push
lods
test
fmul
shr
fdivr
mov
mov
mov
xchg
dec
mov
adc
lods
fdivr
dec
mov
jmp
push
inc
mov
push
adc
in
jae
fwait
inc
mov
push
test
(bad)
mov
mov
push
push
test
ins
das
cmps
shr
in
sub
jge
inc
mov
sub
test
mov
div
mov
cmp
daa
sti
push
xor
jnp
test
leave
inc
push
push
cmp
mov
popa
bt
outs
aas
fcomi
push
push
adc
in
pop
mov
bound
mov
jge
mov
dec
cmp
scas
movs
shr
fidiv
in
stc
adc
in
xchg
mov
mov
push
push
test
push
xchg
loop
shr
(bad)
(bad)
mov
add
mov
push
or
fsub
mov
mov
cmps
shr
in
push
adc
in
mov
mov
adc
in
mov
or
movs
shr
in
imul
mov
push
push
adc
in
lods
ins
ss
inc
mov
push
or
idiv
std
outs
addr16
mov
in
inc
or
cmps
cmp
and
push
inc
mov
jbe
pushf
cmp
in
data16
adc
int
mov
mov
mov
cmp
dec
or
out
add
dec
sub
test
out
push
push
inc
mov
push
adc
inc
mov
adc
lods
mov
sub
inc
sub
adc
sub
(bad)
lods
stos
mov
inc
mov
dec
push
test
out
fs
push
or
push
shr
mov
ins
jae
mov
sub
stos
in
fs
push
test
jae
push
push
or
and
addr16
jbe
out
in
push
inc
mov
sub
sub
jbe
jo
sub
mov
sub
adc
lods
cdq
xchg
inc
mov
sub
adc
lods
movs
xchg
inc
mov
adc
lods
xchg
xchg
dec
mov
sub
lahf
and
xor
mov
mov
cmp
test
out
cwde
ins
xchg
shr
dec
inc
or
(bad)
ror
shr
cmp
dec
or
es
pop
push
aam
and
(bad)
leave
cdq
fwait
movs
(bad)
mov
push
push
and
popf
arpl
lods
mov
aad
or
jbe
xchg
inc
mov
or
(bad)
aad
xchg
push
in
(bad)
aad
mov
push
pop
das
aad
dec
mov
push
out
or
(bad)
int
inc
mov
sub
mov
push
adc
lods
scas
jae
inc
mov
dec
push
or
shr
mov
push
push
adc
ins
mov
sahf
inc
mov
shr
popf
gs
in
cmps
add
jo
push
push
or
jbe
arpl
mov
push
push
adc
ins
lods
rcr
fadd
ffree
cmp
sub
in
ss
mov
fwait
sub
in
ss
je
out
inc
lods
dec
jae
push
dec
push
adc
ins
xchg
inc
or
dec
xchg
push
jmp
mov
jae
ss
push
or
ss
jno
push
inc
mov
mov
sbb
xchg
inc
mov
push
or
xlat
fld
fucom
cmp
sub
dec
push
push
push
cmp
cmps
shr
popf
sub
out
test
call
mov
push
test
enter
outs
(bad)
cmp
mov
(bad)
out
test
int3
mov
(bad)
jmp
cmp
mov
inc
mov
shr
cmp
sub
fisub
xchg
dec
mov
popf
into
mov
xor
leave
jbe
jae
sub
mov
shr
popf
arpl
ins
test
mov
fisubr
xchg
dec
mov
push
push
adc
ins
movs
xchg
dec
mov
push
push
sub
in
imul
ins
xchg
jae
test
in
mov
not
mov
pushf
pop
or
mov
jns
jmp
in
cwde
xchg
sub
sub
sbb
cmp
repz
jbe
jecxz
inc
mov
sub
dec
push
or
mov
mov
jne
sub
jbe
jmp
dec
mov
push
push
adc
in
jns
(bad)
dec
push
test
out
mov
fst
cmp
adc
ins
mov
mov
push
adc
sub
outs
das
cmp
dec
or
in
stos
test
loopne
cmps
shr
popf
sub
in
imul
cmp
xchg
je
adc
ins
mov
call
push
or
mov
mov
(bad)
daa
or
xchg
mov
mov
outs
pop
popf
add
in
push
call
ins
dec
mov
dec
push
or
mov
leave
mov
mov
daa
mov
sbb
mov
outs
cmp
sahf
jae
inc
mov
test
sbb
jbe
fst
in
inc
addr16
test
in
cwde
cmp
pushf
mov
ins
scas
xchg
inc
mov
sub
mov
push
inc
mov
mov
(bad)
dec
push
test
les
movs
shr
out
cmps
shr
dec
push
outs
and
push
xchg
inc
mov
sub
and
das
or
mul
jge
adc
push
inc
mov
pop
or
test
jne
sub
jbe
in
hlt
loope
outs
jo
popa
daa
test
sbb
mov
dec
test
out
movs
shr
cmp
jge
shr
cmp
cmc
push
call
fisttp
push
dec
sub
jbe
sar
mov
imul
push
mov
or
mov
std
in
movs
dec
test
cmps
push
dec
xchg
push
jmp
(bad)
cli
inc
stos
fnstsw
pop
push
push
adc
in
xchg
xor
sub
in
cmps
mov
loope
movs
shr
mov
out
mov
fcmove
jne
push
push
pop
or
push
loope
mov
retf
sub
mov
push
inc
mov
push
inc
mov
push
test
in
jmp
or
jbe
out
movs
shr
out
adc
cmp
adc
lods
mov
test
out
dec
mov
sub
mov
shr
out
pop
sub
xor
mov
add
lods
mov
or
push
push
or
xchg
in
push
push
push
test
jbe
jbe
sub
in
jbe
cmp
out
push
adc
lods
mov
jne
arpl
push
dec
jne
shr
fcom
fisubr
mov
mov
movs
outs
or
mov
test
push
fadd
adc
in
or
test
loope
mov
pop
sub
adc
lods
xchg
fwait
dec
mov
sub
jbe
retf
mov
aam
sub
jp
mov
pop
mov
cmc
out
int
ins
sbb
(bad)
leave
jbe
loopne
push
push
or
jbe
mov
jmp
cmps
shr
(bad)
sub
test
jne
push
push
or
jbe
fwait
inc
mov
push
push
adc
ins
nop
mov
jb
push
push
inc
xchg
shr
mov
pusha
imul
or
fmul
shr
fadd
addr16
adc
test
jmp
stos
inc
xchg
push
enter
fisubr
fwait
dec
mov
push
push
or
ss
inc
mov
push
push
adc
in
push
mov
or
fsubr
adc
in
push
ja
test
rcr
jns
fisubr
mov
jae
movs
shr
pop
ja
adc
ins
mov
push
rcr
pop
dec
cmc
imul
bound
movs
or
dec
jge
mov
sub
lea
jo
xor
dec
outs
sub
push
push
or
ja
stos
(bad)
es
push
test
mov
stc
outs
jne
push
push
fwait
xchg
sar
ds
out
jbe
xchg
inc
repz
push
push
or
xchg
out
cmps
sub
push
push
test
sbb
push
push
push
test
call
fwait
loopne
cmps
sar
or
jnp
inc
repz
fsubr
mov
mov
xor
adc
pop
test
fwait
jmp
mov
xor
adc
mov
pop
sub
jge
fsubr
and
xchg
inc
repz
pop
push
push
or
aaa
fcmovnbe
outs
push
inc
repz
xchg
sub
cmps
fwait
dec
mov
sub
cmp
add
mov
in
mov
dec
or
test
push
ins
dec
push
or
mul
push
jb
sub
mov
xor
mov
popf
inc
repz
jl
mov
(bad)
idiv
test
jnp
dec
mov
les
mov
mov
out
mov
dec
mov
xchg
out
and
int
jmp
sbb
cmp
nop
cli
sahf
inc
repz
test
jnp
dec
mov
sub
push
push
aam
push
lods
int
fadd
jne
rcl
(bad)
dec
in
test
xchg
inc
add
out
inc
mov
push
sub
out
xchg
adc
jo
sbb
adc
lock
mov
test
jl
mov
loop
cmps
push
sbb
fld
adc
idiv
or
inc
add
sub
sub
push
div
jo
sti
or
lea
add
sub
pop
sub
jnp
inc
or
inc
add
into
mov
sbb
add
inc
add
mov
jbe
mov
sahf
movs
push
sbb
sbb
pop
out
and
mov
test
cld
fidivr
jmp
daa
test
outs
push
jb
(bad)
stos
ja
or
mov
inc
movs
dec
xchg
push
jae
and
xchg
push
add
les
mov
adc
test
cmp
out
movs
push
add
rcl
lock
sbb
adc
lock
fmulp
mov
cmp
and
cmp
add
loopne
dec
push
inc
add
call
movs
out
sub
add
push
and
mov
inc
add
jmp
jbe
sub
sbb
test
cmp
push
sub
(bad)
add
add
or
and
icebp
push
inc
add
pop
adc
aam
test
hlt
(bad)
dec
cmp
push
imul
or
adc
out
mov
jns
push
sub
mov
fimul
pop
into
pop
dec
mov
sub
test
inc
add
(bad)
fs
sub
mov
xor
mov
mov
inc
add
(bad)
push
sub
dec
outs
aaa
test
mov
dec
sub
xchg
push
in
movs
into
push
in
sub
xchg
xchg
dec
mov
push
sub
mov
adc
sbb
inc
mov
adc
mov
ja
inc
add
push
push
inc
add
cmp
ror
leave
mov
repnz
push
sub
dec
pop
and
dec
mov
push
and
add
sub
retf
adc
xor
retf
mov
sbb
add
mov
sub
mov
jne
adc
xor
dec
mov
add
mov
xchg
inc
mov
adc
mov
pop
cmp
jecxz
mov
cdq
adc
mov
push
inc
mov
adc
xor
imul
or
push
xor
(bad)
fisttp
add
mov
xor
or
mov
adc
xor
cmp
add
js
imul
mov
sub
and
fwait
inc
add
js
sub
arpl
pushf
mov
jne
push
or
or
mov
adc
mov
pop
cmp
add
mov
or
push
sub
lea
cwde
in
cmps
push
sub
or
push
sub
call
fs
pop
test
in
loopne
movs
push
adc
add
scas
xchg
inc
add
call
movs
push
sub
dec
pop
push
test
in
in
in
movs
push
sbb
dec
and
or
inc
mov
sub
mov
inc
add
loop
sub
push
sub
outs
pop
test
in
out
in
movs
push
cmp
lock
scas
and
push
sub
pop
fisubr
add
push
adc
imul
mov
push
sub
ds
push
test
in
jmp
push
sub
imul
sub
cmp
inc
lea
sti
jnp
push
sub
add
push
or
push
adc
adc
xchg
push
add
nop
aaa
pop
dec
adc
pop
and
pop
das
adc
jo
xlat
sahf
inc
add
cmc
scas
mov
adc
lock
outs
or
mov
stos
sub
sub
or
push
inc
mov
push
sub
xor
cwde
out
aad
push
and
and
add
push
adc
sbb
adc
and
outs
or
push
adc
adc
lock
scas
nop
inc
add
dec
std
dec
mov
inc
and
mov
data16
sub
cmp
sub
add
push
or
push
sub
inc
out
and
add
inc
add
outs
push
sub
inc
mov
fdivr
sahf
inc
add
icebp
in
inc
bnd
xor
or
(bad)
mov
fiadd
cs
stos
aam
push
aam
or
inc
add
loope
mov
out
or
daa
mov
jmp
push
sub
pop
outs
cmp
push
sub
cmps
mov
imul
repz
push
pop
and
popf
inc
add
jns
adc
xor
pop
dec
mov
adc
lock
sub
into
push
inc
add
jecxz
movs
push
sub
fcmove
movs
push
or
cmp
adc
cmp
cmp
cmp
test
jl
jmp
mov
push
sub
jl
and
push
sub
push
mov
not
and
jmp
into
mov
scas
mov
xchg
add
mov
push
sub
add
test
sub
mov
sub
int
aaa
adc
jo
out
stos
test
jl
imul
repz
sub
xlat
mov
jne
add
add
inc
add
jbe
sub
sub
lock
adc
sbb
or
test
jl
fwait
inc
mov
push
popf
movs
pop
movs
push
sbb
or
push
add
enter
or
add
mov
mov
sub
mov
sub
inc
out
imul
mov
mov
sub
ss
cmp
inc
mov
push
sub
mov
aad
or
sub
clc
xchg
idiv
inc
sub
neg
sub
in
fidiv
aaa
sahf
inc
add
mov
adc
jbe
and
xor
or
cli
lods
inc
sbb
xchg
push
xchg
mov
ins
das
xchg
inc
sbb
test
ja
test
xchg
push
xchg
mov
cmp
jl
fild
push
aas
lock
ret
pop
pop
ret
test
bsr
jmp
out
icebp
jbe
test
mov
jmp
out
mul
push
test
(bad)
mov
enter
push
aas
mul
jb
push
xchg
lock
mov
fcomp
inc
mov
cmps
xchg
push
xchg
lock
popf
inc
sbb
test
das
mov
dec
das
out
and
pop
or
loop
push
test
scas
mov
sbb
and
cmp
(bad)
dec
pop
cmps
test
cmp
lea
pop
or
fsubr
mov
test
and
cmp
cmps
push
xchg
jns
sub
loope
fidiv
jne
fmul
scas
test
cld
rcr
mov
push
test
lahf
mov
aam
push
sub
sub
loope
fisub
jne
mov
hlt
push
push
test
pop
mov
xchg
clc
fwait
mov
inc
sbb
test
xor
js
dec
cmps
push
xchg
push
repz
push
test
fnstsw
inc
mov
lods
adc
shl
sti
push
test
ror
movs
push
xchg
(bad)
mov
addr16
shl
stos
scas
push
sbb
aad
inc
sbb
jmp
(bad)
movs
push
xchg
(bad)
or
(bad)
sahf
push
inc
sbb
push
sbb
adc
push
and
std
fild
aam
inc
mov
popa
gs
loop
mov
adc
inc
sbb
test
pop
jle
test
lods
jecxz
dec
mov
push
test
cli
(bad)
pop
adc
mov
jg
inc
sbb
sub
sub
popa
push
mov
out
cmps
push
test
xchg
(bad)
sbb
lahf
dec
mov
push
test
mov
retf
adc
mov
call
test
in
loopne
push
test
mov
fild
aam
and
test
into
jle
or
test
pop
out
shld
std
xor
mov
aas
mov
div
jae
aam
dec
inc
jne
fstp
or
pop
mov
xchg
repz
push
test
(bad)
adc
mov
aas
test
div
repz
popa
pop
jg
test
in
jmp
push
test
jle
in
cmp
test
div
inc
push
test
(bad)
jle
test
sbb
pop
push
test
cmp
mov
lahf
inc
mov
sub
popa
stos
lahf
dec
mov
sub
loope
mov
repnz
js
mov
adc
lock
aas
lea
fsubrp
addr16
test
fwait
cld
jl
jne
out
push
test
adc
lock
cmp
mul
sub
lock
aas
(bad)
fisub
mov
inc
sbb
loop
push
xor
jecxz
stc
jb
(bad)
loope
aas
sahf
inc
sbb
push
xchg
xchg
adc
jo
aas
xchg
inc
sbb
aam
mov
fsubp
pop
mov
xchg
das
sub
adc
jo
jg
test
sbb
(bad)
cmps
push
xchg
std
ins
or
fidivr
inc
sbb
test
or
push
or
cmps
pop
jecxz
and
inc
or
rcr
jne
mov
lock
aam
inc
dec
call
push
xchg
push
xchg
std
js
jne
shr
dec
mov
push
test
mov
sbb
jne
sar
inc
sbb
push
xchg
jo
pop
mov
or
leave
outs
dec
mov
push
test
mov
js
mov
in
dec
mov
sub
loope
inc
(bad)
mov
push
xchg
cmp
mov
not
jle
inc
cmc
pop
test
pushf
in
xchg
push
test
mov
mov
adc
jo
lahf
inc
mov
push
test
imul
je
test
fsubrp
dec
mov
stc
adc
jo
jg
inc
sbb
xchg
push
xchg
jo
lahf
dec
mov
sub
popa
cmps
outs
outs
push
inc
sbb
test
jns
push
test
mov
push
mov
adc
jne
fisttp
clc
sbb
inc
sbb
aam
inc
mov
repnz
push
test
pop
std
movs
xlat
xchg
push
xchg
stc
mov
lahf
inc
mov
sub
loope
jle
push
and
das
or
fcomp
repz
aam
adc
cmc
fwait
mov
icebp
shr
aam
jecxz
push
test
jl
fisttp
push
lahf
hlt
and
push
inc
sbb
jmp
jl
iret
cmps
push
xchg
cld
mov
(bad)
fild
xsha256
cmps
push
xchg
cld
ins
or
mov
hlt
int
and
inc
or
retf
push
xchg
stc
stos
sub
loope
mov
icebp
arpl
cli
std
sub
loope
jle
test
pop
out
push
test
cmc
(bad)
imul
hlt
xchg
adc
lock
jg
test
int3
div
sub
loope
jle
test
jl
(bad)
fisubr
out
inc
mov
sub
loope
jg
jbe
sbb
test
and
sbb
mov
or
leave
out
inc
mov
adc
lock
fwait
inc
sbb
aam
push
mov
fwait
jle
fisttp
movs
xor
push
sbb
mov
adc
lock
fsub
fwait
out
sub
push
test
popf
jle
or
mov
out
xacquire
ret
(bad)
inc
or
xlat
jg
inc
sbb
test
and
loop
mov
(bad)
mov
pop
(bad)
(bad)
out
out
xchg
sahf
ror
jmp
je
sbb
popf
push
dec
or
jbe
adc
mov
test
pop
jbe
sbb
and
nop
xor
sub
(bad)
mov
xchg
fistp
jmp
sti
std
in
fistp
scas
mov
jmp
(bad)
mov
sti
jle
out
ret
retf
retf
out
(bad)
push
ja
sti
pop
rol
jbe
cmp
mov
ret
mov
ret
dec
repnz
add
or
jbe
pop
(bad)
bound
fndisi(8087
(bad)
cld
xor
repz
add
jg
les
jne
pop
and
lods
call
bound
cmp
fisttp
les
cmp
push
bound
cmp
aas
adc
(bad)
movs
and
les
mov
outs
pop
stos
mov
push
shl
pop
add
cmp
pop
and
in
push
dec
ins
xchg
imul
in
shr
pop
mov
cli
lods
inc
and
les
mov
sbb
adc
dec
ins
xchg
daa
mov
xor
call
inc
ins
xchg
(bad)
sbb
bound
jl
adc
jl
adc
mov
push
sbb
shl
sbb
xor
pop
mov
push
gs
fcomp
call
push
mov
ss
sbb
sbb
and
push
add
popa
jae
or
sbb
adc
popa
sub
leave
jmp
pop
cmc
cwde
fsub
imul
in
mov
xchg
inc
push
push
adc
popa
cmp
mov
mov
jne
mov
mov
mov
les
sar
jbe
sar
jbe
sar
or
in
push
(bad)
stos
pop
mov
mov
xor
leave
mov
fnstcw
fnstcw
les
fs
add
mov
aad
xor
push
push
add
add
add
sub
das
sbb
mov
xchg
lock
call
ins
xchg
mov
mov
cs
jns
mov
scas
(bad)
dec
and
and
adc
popa
push
stos
push
les
aad
clc
mov
mov
bound
fdivr
or
jbe
ins
pop
or
in
lods
add
add
add
add
sbb
mov
xor
int
adc
mov
mov
into
dec
adc
push
je
and
or
sbb
fxch
sub
mov
jbe
sbb
pop
imul
cmp
retf
repnz
dec
ins
xchg
mov
retf
inc
adc
pop
imul
lods
mov
jne
les
mov
out
dec
ins
xchg
std
lods
sbb
mov
(bad)
(bad)
push
pop
in
imul
lods
jb
aad
jge
ins
xchg
(bad)
pop
and
mov
les
lods
jne
les
fsubr
fisubr
xor
aam
or
sbb
ins
pop
mov
xchg
pop
test
fsubr
xchg
inc
ins
xchg
and
(bad)
jp
pop
in
imul
lods
jb
aad
xchg
es
mov
cmp
pop
push
bound
mov
xchg
pop
dec
xor
dec
inc
ins
xchg
jecxz
pop
and
and
adc
icebp
push
retf
fstp
es
dec
mov
sbb
daa
pop
fwait
inc
ins
xchg
daa
pop
inc
inc
ins
xchg
xchg
lods
ds
pusha
int
mov
dec
mov
sbb
retf
lods
popf
and
pop
imul
bound
mov
sahf
bound
mov
sahf
push
add
push
dec
sub
mov
xor
call
mov
les
xchg
aad
push
cmp
sbb
bound
bound
bound
bound
pop
adc
ret
bound
bound
bound
call
jns
cmp
cdq
inc
movs
and
inc
ins
xchg
out
xlat
sbb
inc
ins
xchg
pop
pop
cmp
xchg
pop
pop
mul
mov
inc
pop
jne
aad
mov
inc
dec
cmp
and
inc
sti
inc
ud2
adc
jns
aad
les
(bad)
(bad)
mov
mov
(bad)
call
or
pushf
imul
(bad)
(bad)
mov
arpl
mov
sbb
scas
mov
add
xor
pop
sbb
inc
in
cwde
aaa
pop
arpl
cwde
mov
lods
retf
inc
in
cwde
retf
lods
and
pop
lods
pop
inc
in
cwde
sub
lods
test
inc
in
cwde
ja
loope
xor
arpl
cwde
ja
std
inc
in
cwde
stos
lods
icebp
and
sti
lods
xor
cwde
imul
movs
and
mov
std
and
pop
lods
sub
cmp
cmp
mov
adc
out
sub
mov
scas
cld
(bad)
pop
int
xlat
stos
sbb
mov
je
add
(bad)
lods
or
(bad)
outs
adc
out
sub
stos
daa
mov
mov
mov
mov
mov
les
test
in
cwde
iret
pop
xor
cwde
iret
pop
sub
cwde
iret
pop
fwait
inc
in
cwde
push
(bad)
jle
cmp
aad
dec
dec
in
cwde
push
push
or
or
mov
les
mov
mov
arpl
adc
out
imul
sbb
mov
mov
mov
jp
sub
cmp
aad
inc
(bad)
mov
sar
repz
repz
out
(bad)
cmp
lods
sub
lods
dec
inc
in
cwde
out
pop
mov
cmp
xor
scas
xor
scas
jne
mov
adc
out
(bad)
adc
out
(bad)
xlat
and
imul
(bad)
jl
jmp
add
sbb
aas
mov
inc
add
pusha
in
add
arpl
mov
add
jg
jmp
(bad)
(bad)
fsub
add
scas
add
push
mov
out
mov
sbb
sbb
aas
mov
pop
xor
jne
mov
jle
lea
mov
jle
and
pop
aaa
sbb
ja
imul
mov
cwde
mov
cwde
xor
in
cwde
xor
pop
arpl
mov
add
inc
in
cwde
xor
int3
sbb
ins
adc
data16
cmc
cmp
push
popf
es
sbb
mov
les
dec
aas
icebp
fdiv
imul
std
and
cmp
mov
out
mov
sbb
aas
mov
sbb
sbb
aas
mov
xchg
arpl
mov
inc
in
cwde
sbb
mov
mov
mov
pop
dec
in
cwde
pop
pop
adc
cwde
pop
pop
or
cwde
pop
pop
fwait
inc
in
cwde
pop
lods
and
jbe
pop
stos
iret
popa
jl
mov
jbe
outs
lods
aad
jbe
adc
adc
out
push
mov
jle
xchg
sbb
sbb
mulps
inc
in
cwde
aas
pop
pop
inc
in
cwde
xchg
xor
cmps
sbb
inc
in
cwde
aas
pop
fild
cwde
aas
pop
test
xor
xchg
pop
les
in
cwde
cmps
mov
mov
cld
mov
repnz
in
cwde
add
mov
mov
out
(bad)
pop
xor
arpl
data16
mov
sbb
dec
fld
cwde
mov
push
cdq
stos
into
xor
shl
cmp
xor
add
sbb
addr16
sbb
stos
inc
in
cwde
(bad)
in
popf
and
(bad)
jbe
push
adc
adc
aam
punpckldq
ins
outs
add
arpl
fadd
inc
in
cwde
int
bound
div
cmp
jnp
mov
les
call
in
cwde
test
nop
jbe
mov
ins
mov
mov
mov
aas
add
inc
adc
popw
mov
xchg
cmp
fstp
ins
scas
pop
mov
inc
in
mov
fdivr
call
push
test
int3
(bad)
sti
add
sti
add
cmp
sti
and
in
(bad)
(bad)
in
arpl
ins
(bad)
mov
div
pop
fisub
fdiv
dec
in
sub
cwde
(bad)
fcmove
inc
in
cwde
inc
in
mov
jbe
popa
mul
adc
out
sti
mov
sbb
jg
(bad)
(bad)
sbb
(bad)
dec
in
cwde
arpl
mov
jbe
xor
fidivr
adc
mov
sar
les
mov
les
les
les
mov
les
xor
fild
pop
sbb
cmps
fst
inc
in
cwde
fldenv
fdiv
cmps
fist
mov
test
cmp
mov
cwde
out
sbb
test
push
or
sahf
imul
mov
into
mov
sbb
fdiv
in
cwde
xor
xor
in
ins
and
repz
inc
and
repz
inc
dec
adc
out
imul
cmp
dec
jnp
mov
push
jbe
or
jge
jbe
or
mov
mov
mov
or
mov
mov
push
les
(bad)
(bad)
mov
(bad)
(bad)
cld
mov
test
movs
mov
xlat
fiadd
(bad)
(bad)
mov
(bad)
mov
pop
jb
stos
in
sahf
and
imul
mov
fdiv
scas
mov
ja
data16
and
cmp
fiadd
(bad)
(bad)
dec
fiadd
fld
xlat
fild
fsub
mov
sbb
pop
fidiv
fdiv
pop
ficomp
fidivr
in
cwde
aaa
fcmovb
mov
jbe
fwait
in
into
and
fwait
in
shl
jbe
fwait
in
jae
in
cwde
aaa
(bad)
sbb
outs
mov
add
add
sbb
pop
fisttp
aam
les
(bad)
(bad)
pop
bound
(bad)
(bad)
pop
(bad)
fild
mov
mov
cs
sbb
xchg
fdivr
sbb
xchg
fmul
(bad)
rol
mov
mov
mov
mov
sbb
mov
(bad)
(bad)
pop
push
sbb
(bad)
pop
data16
mov
cs
sbb
xchg
fldenv
fdiv
xchg
fcmovnbe
sbb
adc
out
sti
adc
out
sti
jae
cmp
jb
push
mov
fld
cwde
retf
in
icebp
and
in
add
mul
adc
out
sti
popa
adc
out
sti
or
sti
sbb
xlat
popf
sbb
fisttp
sbb
jb
or
(bad)
jns
cmp
stos
mov
ret
(bad)
fwait
push
sahf
push
(bad)
or
pop
imul
fisttp
mov
fisubr
pop
mov
(bad)
aad
add
pop
gs
pop
mov
fisub
pop
mov
fisubr
push
push
jnp
mov
(bad)
(bad)
jns
mov
lahf
in
das
rol
(bad)
stc
aaa
mov
(bad)
sahf
add
imul
neg
jnp
ins
pushf
jg
pop
xlat
(bad)
(bad)
mov
jecxz
rcr
jecxz
rcr
or
jecxz
enter
jecxz
imul
mov
mov
mov
adc
out
mov
pushf
(bad)
fisub
ss
(bad)
in
stc
and
into
(bad)
in
lea
ss
or
out
jbe
sub
pushf
dec
fcmovbe
inc
ins
pushf
dec
fldcw
inc
ins
pushf
sbb
in
and
into
cmps
ins
mov
addr16
loope
ss
addr16
cmp
ss
out
cmc
and
into
sub
mov
sbb
pushf
fwait
in
sub
ss
int
xor
sbb
push
jnp
mov
test
(bad)
repz
mov
xchg
cmp
mov
sbb
pop
mov
sbb
pop
mov
mov
(bad)
(bad)
mov
jecxz
aad
or
jl
fimul
jecxz
fnstsw
add
fsub
imul
jl
pop
or
fimul
(bad)
push
pushf
outs
fnstcw
or
jl
mov
mov
add
(bad)
mov
jecxz
iret
fimul
(bad)
fld
sbb
sti
jbe
mov
push
popa
push
rol
cs
push
xchg
and
xor
test
xor
dec
fld
jge
mov
(bad)
std
or
or
fimul
fild
fisttp
fadd
mov
sbb
mov
mov
mov
outs
in
jae
ins
mov
fadd
mov
sbb
jg
pop
add
add
std
leave
(bad)
adc
ss
mov
les
push
or
cmc
cmp
mov
xor
les
call
popf
repz
ins
mov
ss
out
adc
push
sbb
in
push
mov
ss
pop
mov
ss
and
mov
fld
cmps
add
ss
cmp
les
fcmovb
cmp
std
and
sub
stos
sub
mov
xor
push
inc
adc
push
adc
push
ins
mov
xor
les
fcmovu
pop
push
bound
in
call
jbe
test
pop
dec
ins
mov
mov
into
into
adc
fld
cdq
cvtps2pd
push
les
sbb
sbb
mov
push
fiadd
add
sub
inc
mov
push
into
dec
and
(bad)
les
fcmovb
sub
mov
div
sbb
(bad)
jbe
sbb
sti
cmp
popf
lods
and
adc
call
dec
ins
mov
pop
inc
xor
mov
jmp
shl
mov
mov
and
daa
and
ja
ins
mov
ins
je
xor
les
cmp
cdq
add
sub
lea
inc
xchg
fild
mov
ins
mov
xor
lea
inc
inc
cmp
popf
dec
inc
ins
mov
fucomi
sub
dec
adc
call
ins
je
repz
push
jmp
call
ins
mov
fld
mov
fld
bound
lea
fwait
inc
ins
mov
fld
or
xor
(bad)
(bad)
popf
into
and
mov
mov
add
add
sbb
(bad)
cmp
cmp
fadd
cmp
(bad)
cmp
adc
call
fld
xor
les
pop
out
pop
mov
xchg
cmp
pushf
ja
ins
mov
fld
push
rcr
fld
xor
les
pop
out
adc
ss
out
add
sbb
retf
pushf
addr16
ins
mov
mov
xor
xchg
mov
ss
out
pop
mov
mov
sbb
(bad)
cmp
ins
mov
ins
mov
xor
dec
add
pop
bound
cmp
ss
cmp
sbb
es
dec
into
je
fucomi
pop
pushf
push
and
adc
push
mov
fs
ins
hlt
(bad)
into
pop
adc
call
ins
hlt
adc
add
test
es
aas
cmp
ins
mov
mov
rcr
popf
rol
dec
ins
mov
ins
mov
mov
xor
mov
jge
mov
mov
ret
fadd
cmp
adc
sbb
and
mov
inc
adc
call
ins
hlt
cmp
mov
jl
or
addr16
mov
cmps
shr
popf
or
mov
or
pop
cmp
sbb
inc
ins
mov
imul
bound
mov
sbb
lea
xchg
arpl
mov
mov
pop
out
int3
add
ss
jmp
sbb
mov
pop
loope
or
movs
xor
pop
add
mov
sbb
les
cmp
sbb
bound
popf
out
int3
push
mov
pop
jecxz
add
add
xchg
sbb
sbb
mov
mov
fadd
jo
sbb
or
sub
les
mov
ss
xor
les
jp
mov
les
mov
sbb
test
mov
cs
sbb
xchg
cmp
fadd
cmp
inc
ins
mov
mov
scas
jo
loope
out
adc
add
fucomi
or
mov
ss
adc
call
fucomi
popf
into
push
adc
call
ins
hlt
outs
out
mov
mov
pusha
test
mov
sti
pushf
and
fucomi
sbb
mov
jle
adc
push
mov
inc
mov
popf
jae
mov
adc
adc
fucomi
jp
adc
into
pop
adc
call
fucomi
xchg
dec
mov
aaa
cmp
ins
mov
ins
mov
mov
out
cdq
and
adc
call
mov
xchg
pushf
inc
inc
ins
mov
ins
mov
mov
xlat
pushf
ret
and
push
js
repnz
aaa
pushf
and
fucomi
jbe
xor
xchg
adc
retf
mov
push
addr16
sub
jne
and
adc
or
or
sahf
rcl
les
cli
sahf
xor
les
cli
sahf
xor
les
mov
sbb
jmp
out
je
sbb
jecxz
fadd
cmp
popf
cdq
mov
ins
mov
ins
mov
mov
sbb
fld1
push
cmps
add
ss
sbb
jecxz
add
lea
lods
pop
mov
out
jae
sbb
aas
ja
(bad)
aad
ss
sbb
ret
bound
std
rcr
bound
std
retf
bound
cmp
lea
jo
gs
ficom
call
mov
aad
into
int
dec
ins
hlt
jnp
sbb
out
adc
call
fucomi
and
mov
fadd
jo
sbb
(bad)
adc
into
in
and
and
and
and
js
ins
mov
mov
lahf
pushf
xor
mov
fadd
jbe
add
add
sbb
(bad)
push
or
pop
cmps
mov
pop
cmps
sbb
ss
fdiv
mov
in
(bad)
pop
(bad)
outs
push
mov
sub
mov
mov
in
or
ret
or
pop
les
push
xchg
inc
ins
mov
ins
aam
push
sbb
or
test
mov
frstor
and
mov
sbb
mov
imul
adc
test
mov
jae
sbb
adc
test
or
aam
jbe
mov
cli
fcom
mov
lahf
cmp
xchg
and
mov
out
add
cmc
mov
dec
and
pushf
sub
pop
(bad)
out
push
mov
cli
fnstsw
mov
je
sbb
repz
inc
out
push
adc
bound
int
mov
fmul
aaa
je
es
fistp
(bad)
and
xlat
pop
pop
bound
cmc
fdivr
jbe
mov
dec
adc
mov
hlt
sub
mov
mov
sti
adc
(bad)
mov
fistp
les
les
jmp
ja
fmul
fsub
xor
daa
sbb
pop
mov
pop
mov
pop
mov
lods
fstp
fstp
test
sub
mov
mov
mov
sbb
pop
adc
mov
mov
cmp
les
rcr
add
in
in
add
(bad)
test
fnsave
lea
pop
fsubr
jbe
scas
outs
push
bound
mov
mov
cmp
les
fstp
bound
in
loope
add
dec
rol
outs
sbb
sbb
jnp
mov
cmps
mov
cmps
jge
jne
es
mov
jmp
mov
mov
mov
mov
shr
dec
in
cmps
add
or
jbe
arpl
jmp
in
cmps
and
rol
and
mov
test
mov
inc
fcom
jbe
mov
jmp
aas
push
fmul
fucomp
mov
mov
xchg
mov
push
ja
sbb
inc
in
cmps
mov
sar
in
cmps
jno
xor
fnsave
sub
or
sbb
sub
push
(bad)
mov
xchg
pop
mov
into
shl
pop
add
dec
xor
popf
sub
call
xchg
dec
jnp
fist
sbb
aad
pop
mov
dec
jne
sbb
dec
ja
sbb
cmps
mov
iret
jb
add
mov
fsubr
jno
sbb
addr16
out
or
cmp
sub
call
into
jb
sbb
add
add
add
outs
add
push
bound
bound
les
fild
xchg
es
imul
and
jmp
popa
and
jmp
jb
cmp
inc
ja
mov
mov
mov
mov
les
mov
ret
les
je
loopne
xlat
ds
scas
add
fcmovnu
mov
or
ja
sbb
push
mov
sub
and
jbe
xchg
outs
xchg
call
in
mov
mov
ja
sub
mov
jne
sbb
push
mov
ja
lea
call
out
jbe
sbb
sbb
out
jno
sbb
out
jne
sbb
out
jne
out
bound
bound
mov
fsubrp
add
add
sar
call
ds
out
bound
mov
ds
dec
add
pop
mov
ds
add
outs
pop
mov
dec
sti
test
imul
(bad)
inc
fisubr
jo
sbb
lahf
jo
add
or
jge
jge
les
xchg
sti
push
mov
mov
cmp
in
mov
ffree
and
cmps
(bad)
(bad)
mov
lahf
jno
sbb
lahf
jno
add
popf
scas
mov
bound
bound
bound
or
dec
pop
in
add
sbb
lahf
ja
mov
(bad)
sbb
dec
sti
mov
sti
mov
idiv
push
adc
in
repz
jecxz
jbe
out
ja
in
mov
fadd
and
dec
outs
mov
mov
dec
out
sub
jbe
dec
out
xchg
and
int
sub
cmp
data16
les
(bad)
add
fucom
cli
jmp
adc
dec
mov
cmps
fucom
sahf
or
pop
pop
bound
in
mov
fcom
fmul
inc
in
mov
pop
sti
inc
dec
in
mov
fsubr
jbe
sub
in
push
test
ja
mov
dec
cmp
push
ja
mov
inc
call
fsubr
jb
sbb
adc
in
retf
scas
jg
es
push
fcom
adc
in
push
ja
mov
mov
mov
lds
adc
mov
out
inc
adc
in
sbb
data16
in
fwait
out
adc
cmp
jbe
iret
and
jb
sbb
fbstp
sbb
fbstp
sbb
ja
lea
aad
dec
sti
scas
pop
push
bound
bound
bound
mov
jle
push
iret
(bad)
les
retf
popf
push
bound
bound
mov
(bad)
mov
fimul
fidivr
in
pop
ja
mov
mov
gs
fsubr
mov
sbb
mov
mov
fst
adc
in
jle
push
mov
mov
mov
sbb
in
mov
fmul
ja
mov
mov
mov
das
call
fsubr
jae
sbb
mov
imul
les
sbb
cmps
cmp
sar
call
push
jno
sbb
jg
mov
mov
or
mov
mov
ret
mov
push
cmps
xor
pop
lahf
aaa
pop
les
neg
sahf
stos
lahf
sub
mov
out
or
sbb
add
stos
xor
rol
mov
nop
aaa
add
sub
fiadd
cmp
sar
pop
mov
ficom
adc
lods
out
add
shl
lock
sbb
sbb
sbb
fwait
jns
inc
in
mov
cmp
mov
mov
out
push
push
fisub
movs
popf
mov
idiv
mov
mov
les
into
imul
cmp
scas
sub
or
dec
pop
in
sbb
mov
mov
fiadd
adc
ins
ja
dec
adc
ins
dec
out
push
adc
ins
das
outs
sub
pop
les
mov
mov
sti
jnp
scas
rol
dec
cmp
sub
mov
xchg
js
inc
in
mov
jp
inc
in
mov
mov
ret
mov
ret
mov
and
rcr
jmp
jbe
xor
daa
and
xor
daa
adc
in
js
shl
js
inc
in
mov
js
inc
in
mov
mov
and
mov
les
mov
cmps
adc
mov
sub
mov
cmps
cmp
sub
push
push
bound
bound
bound
bound
les
aad
add
popf
jmp
push
outs
or
cmp
adc
add
jbe
pop
dec
loop
and
mov
sahf
jmp
sahf
in
int
mov
sahf
in
lods
add
ins
pop
mov
sahf
jecxz
add
pop
scas
mov
mov
mov
adc
in
test
push
adc
in
inc
sahf
mov
sub
or
dec
cmp
fwait
add
mov
dec
push
push
out
in
jmp
mov
mov
test
inc
push
mov
rcl
call
cmc
jle
push
jno
aaa
or
push
xor
pop
or
clc
mov
test
repnz
dec
pop
test
xchg
mov
jp
inc
aad
cmp
or
dec
je
ja
hlt
jne
leave
sar
dec
call
data16
outs
xor
fmulp
fwait
jmp
jmp
call
iret
cs
rcr
mov
ror
push
out
imul
fisub
sbb
in
ins
pop
ins
daa
pop
in
mov
mov
sbb
jmp
(bad)
mov
call
jle
push
pop
int
jb
ret
adc
adc
loop
das
test
pop
mov
dec
stos
ja
xchg
mov
aad
push
je
imul
fcmovnu
ret
rcr
(bad)
cli
popf
jge
xlat
imul
mov
jle
pop
in
pop
pop
mov
lods
(bad)
push
jns
pop
std
into
mov
jle
mov
push
(bad)
pop
in
lea
mov
jnp
sti
mov
shl
sbb
mov
fwait
loopne
fdivp
retf
jmp
and
mov
(bad)
jns
das
stos
fcmovne
cmp
pop
icebp
add
fsub
mov
mov
scas
shl
jmp
pop
pop
aaa
js
inc
outs
adc
or
jmp
jle
pusha
ins
add
pusha
pushf
pop
call
fstp
pop
lock
fcmovu
in
or
popf
pop
fdiv
stos
mov
xchg
jne
cmps
rcl
cmc
push
addr16
std
jmp
lods
(bad)
aad
fmulp
cmp
loopne
pop
addr16
into
repnz
mov
mov
sub
sub
cmp
mov
clc
leave
scas
into
repnz
ja
aas
iret
xchg
ss
call
pop
mov
loopne
lods
mov
or
stos
mov
out
clc
iret
mov
test
inc
pop
addr16
xchg
cmc
shl
cmp
mov
push
inc
and
sub
movs
(bad)
sub
cmp
std
pop
sahf
or
and
addr16
(bad)
jl
iret
mov
cmps
cmc
stos
mov
pop
sbb
hlt
mov
mov
fsub
push
imul
dec
and
or
test
and
push
inc
data16
push
fcom
xor
das
pop
adc
hlt
push
je
mov
fild
rcl
data16
out
ficomp
mov
es
(bad)
cli
addr16
xchg
push
rcr
pop
mov
outs
rcl
pop
cli
stos
mov
adc
xor
jmp
sub
inc
pop
(bad)
sub
pop
mov
push
sub
add
sti
mov
cli
inc
cmc
push
sbb
mov
ficom
pop
aas
push
iret
(bad)
jecxz
loope
sbb
mov
cld
xchg
nop
sub
icebp
sbb
lock
cmp
ret
fcomip
mov
mov
or
ins
jns
pop
pop
push
in
shl
mov
iret
jno
stc
or
in
push
cld
xchg
je
or
(bad)
(bad)
jecxz
sbb
fsubr
test
jo
inc
push
repz
movs
out
cld
xchg
call
xchg
pop
mov
pop
std
jle
mov
fild
pop
mov
cmc
mov
imul
sahf
inc
cmp
dec
(bad)
cli
jns
fild
int
call
ror
addr16
icebp
mov
dec
out
out
xchg
adc
(bad)
int3
in
adc
enter
xchg
jmp
jbe
pop
cld
cmp
sti
out
out
mov
adc
(bad)
int3
in
adc
enter
xchg
jmp
jbe
pop
cld
cmp
sti
out
out
mov
adc
(bad)
cld
lahf
fldenv
mov
sti
mov
cmp
lahf
(bad)
jb
fbld
scas
jle
(bad)
enter
xchg
jmp
jbe
pop
cld
ja
(bad)
jg
mov
aas
mov
xor
jge
pop
(bad)
mov
fsub
xor
outs
out
cmps
jmp
jle
daa
leave
(bad)
xchg
jmp
jbe
pop
cld
ja
call
leave
xchg
push
mov
push
inc
mov
sbb
out
popa
(bad)
xchg
xchg
mov
in
jg
call
out
(bad)
jmp
jle
das
retf
pop
xchg
fisttp
pop
hlt
mov
push
push
repz
jle
cld
xchg
dec
ins
add
in
repnz
xor
(bad)
sbb
and
sub
idiv
or
clc
je
inc
(bad)
sti
adc
popf
(bad)
jns
sahf
sar
mov
pushf
cmc
dec
mov
mov
push
sub
pop
jmp
mov
cmps
lahf
mov
push
ror
xor
xor
push
cli
sub
mov
hlt
xor
jno
jae
push
push
push
jg
mov
lahf
nop
pop
lock
aaa
push
adc
push
mov
and
mov
cwde
mov
(bad)
sbb
sub
cli
xor
xchg
dec
aas
cs
dec
sar
push
cli
jae
mov
nop
xor
fisttp
sbb
ins
nop
xor
mov
test
push
arpl
push
dec
in
jne
test
jno
test
ficomp
push
cld
ins
lea
(bad)
clc
xor
pop
(bad)
fimul
xchg
repz
call
pop
dec
icebp
neg
(bad)
lock
pop
stc
adc
xor
mov
fnstenv
pop
scas
into
sub
repz
xor
cmp
scas
int3
push
jmp
push
xchg
inc
movs
aam
push
jmp
push
dec
sbb
push
xchg
inc
movs
aam
push
jmp
push
dec
sbb
push
xchg
inc
movs
aam
push
jmp
push
dec
sbb
push
xchg
inc
movs
loop
test
xchg
xchg
mov
mov
push
sub
push
retf
fistp
pop
test
movs
ds
push
or
into
sar
jmp
test
in
push
leave
out
xchg
iret
pop
and
outs
xchg
jl
sub
mov
in
push
leave
out
xchg
iret
pop
and
outs
xchg
jl
sub
mov
in
push
leave
out
xchg
iret
pop
and
outs
xchg
jl
sub
mov
in
push
leave
out
xchg
iret
pop
and
outs
xchg
jl
sub
mov
in
push
sub
jbe
sub
fild
xor
movs
add
sub
mov
adc
dec
add
push
sub
pop
sub
adc
dec
add
push
sub
pop
sub
adc
dec
add
push
sub
pop
sub
adc
dec
add
push
sub
pop
sub
adc
dec
add
push
sub
adc
sbb
push
xchg
inc
mov
mov
jne
xchg
cmp
dec
sbb
push
xchg
test
inc
jmp
aam
sbb
push
xchg
test
inc
jmp
aam
sbb
push
xchg
test
inc
jmp
aam
sbb
push
xchg
test
inc
jmp
aam
sbb
push
xchg
(bad)
pop
and
test
push
dec
xor
push
lea
test
push
stos
push
sub
test
push
dec
xor
push
lea
inc
lods
push
mov
aad
xchg
push
dec
xor
push
lea
inc
lods
push
mov
aad
xchg
push
dec
xor
push
lea
inc
lods
push
mov
aad
xchg
push
dec
xor
push
lea
inc
lods
push
mov
aad
xchg
push
dec
xor
push
lea
fbld
pop
stos
clc
pop
imul
outs
lea
xchg
push
dec
mov
movs
pop
test
push
push
loop
sub
xlat
stos
shr
std
cwde
hlt
dec
movs
pop
xchg
(bad)
and
lahf
sub
mov
scas
push
add
push
add
daa
std
ret
shl
pop
adc
arpl
xor
pop
stos
add
jmpw
or
push
add
push
add
loopne
adc
sub
jo
or
push
add
push
add
loopne
adc
sub
jo
or
push
add
fwait
jne
or
inc
fld
stc
scas
mov
stc
mov
stc
jbe
add
push
int
stc
ss
stc
push
int
stc
test
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
aam
es
dec
frstor
mov
rcr
sbb
clc
fwait
xchg
jg
jo
loopne
sbb
iret
cwde
aam
es
mov
arpl
cwde
aam
xchg
mov
xchg
dec
push
retf
movs
stos
in
aad
test
pop
stos
pop
cs
sub
push
retf
movs
stos
in
aad
test
pop
stos
pop
cs
sub
push
retf
movs
stos
in
aad
test
pop
stos
pop
cs
sub
push
retf
movs
stos
in
aad
test
pop
stos
pop
cs
sub
push
retf
movs
stos
in
aad
test
pop
stos
pop
cs
sub
push
retf
movs
stos
in
aad
test
pop
stos
pop
cs
sub
cmp
or
in
(bad)
ins
mov
pop
cs
xchg
ficom
scas
in
lea
test
inc
jmp
push
dec
popf
sub
test
inc
jmp
push
dec
popf
sub
test
inc
jmp
push
dec
popf
sub
test
inc
jmp
push
dec
popf
sub
test
inc
jmp
push
dec
popf
sub
test
inc
jmp
push
dec
popf
sub
cmp
and
scas
nop
push
dec
mov
movs
ficom
jbe
push
mov
aad
inc
mov
jnp
sub
sti
jb
in
adc
in
adc
push
jg
data16
outs
ror
or
movs
mov
xor
(bad)
cwde
xchg
outs
fs
retf
cmp
stos
xchg
pop
push
push
jae
adc
dec
mov
(bad)
jnp
ss
rep
ins
mov
jp
sub
push
mov
push
mov
aad
jns
sbb
xchg
repz
or
movs
sbb
pop
in
push
arpl
and
lahf
push
sahf
sub
push
adc
sbb
adc
mov
mov
dec
fs
lea
aaa
scas
xchg
push
scas
inc
repnz
sub
mov
test
push
movs
std
mov
repz
stc
jl
jb
sub
cmps
movs
in
adc
cmp
sahf
lds
pop
ret
xlat
cmp
in
movs
shr
xlat
xor
mov
mov
(bad)
mov
xlat
out
jne
cli
je
mov
scas
pop
add
mov
pop
sub
lahf
and
xchg
add
mov
ret
scas
jmp
cmc
jmp
inc
xchg
(bad)
sti
push
(bad)
sub
jp
ror
daa
cld
mov
enter
jle
in
ret
cmps
shr
sub
push
sti
ja
ds
stc
sbb
xlat
out
mov
jae
jmp
sbb
xlat
fistp
jge
lahf
daa
or
movs
cmp
popa
ds
shl
sbb
jmp
shl
jo
mov
test
mov
hlt
mov
jo
or
mov
pop
fwait
jo
es
daa
(bad)
xlat
movs
add
in
shl
sbb
mov
cmp
pop
ds
pop
ds
jge
(bad)
out
loop
pop
jno
and
jecxz
in
out
movs
cmp
push
aam
sub
adc
into
adc
iret
ret
icebp
repz
pop
lods
jns
ds
jge
xlat
fld
mov
jae
repz
out
(bad)
test
movs
cmp
dec
es
sbb
push
ds
pop
(bad)
mov
dec
scas
pop
outs
movs
push
jns
inc
push
out
repz
jle
sbb
lds
in
in
in
push
pushf
daa
sahf
cmps
xlat
jae
scas
mov
clc
xor
inc
push
test
out
daa
out
into
sahf
xchg
and
pop
push
loopne
sub
ret
dec
fild
fwait
in
jnp
dec
cmp
into
fwait
into
shl
inc
sbb
movs
jno
push
pushf
das
xchg
cmps
out
or
adc
adc
repz
or
sti
sbb
mov
jle
jecxz
cmp
pushf
(bad)
jno
jno
cmp
jecxz
cli
in
stc
addr16
mov
test
ret
icebp
repz
add
cmp
lahf
les
movs
out
scas
jnp
jl
movs
out
cmps
adc
aaa
loope
dec
jb
rcr
test
rcr
dec
xchg
std
mov
(bad)
addr16
cli
ds
pop
inc
sbb
push
mov
xchg
idiv
xchg
xor
arpl
inc
sbb
push
mov
cmc
std
xchg
sar
sbb
dec
mov
into
ret
icebp
dec
mov
ret
cli
ds
cli
jle
popa
jl
mov
and
pop
out
outs
ret
mov
xchg
out
bswap
xchg
sar
out
sub
test
ds
pop
fdiv
mov
xor
sti
aas
cmp
gs
xlat
test
int3
xlat
test
mov
jmp
jmp
sahf
(bad)
jmp
sbb
in
fild
cmp
jns
inc
sub
(bad)
sub
jmp
ds
jmp
sub
push
push
retf
jmp
or
rcr
scas
scas
mov
out
(bad)
sti
mov
mov
sbb
ds
aad
cmp
js
and
cmps
ins
cmp
(bad)
jae
pushf
leave
push
cs
out
mov
out
cmp
push
pop
jecxz
sahf
iret
cmp
or
iret
imul
mov
fs
repz
cmps
nop
dec
and
sbb
inc
iret
addr16
mov
cmp
mov
push
iret
addr16
ja
mov
ds
stc
dec
mov
dec
mov
je
retf
repz
add
cmp
loope
stc
mov
mov
(bad)
jno
ret
adc
jl
cmp
xor
iret
cmp
xor
aam
mov
inc
xor
inc
push
retf
repz
add
and
xchg
cmp
stc
push
push
repz
and
pop
es
in
or
shl
enter
add
call
sbb
push
out
out
and
sub
jecxz
mov
pop
sahf
out
push
jp
mov
iret
imul
push
jle
loopne
push
jp
xchg
inc
jmp
cmp
outs
or
pushf
cmp
imul
outs
pop
fcomip
cmp
rcl
jp
jecxz
js
cmp
ins
test
aaa
xor
pushf
add
jecxz
xor
jmp
loopne
inc
cmp
fmul
xlat
aad
sahf
jns
mov
stc
lea
xchg
sahf
out
add
mov
pop
adc
dec
and
aad
iret
outs
or
je
cmp
lea
sahf
xlat
dec
fnsave
scas
outs
jns
mov
mov
cld
sbb
lods
out
rcr
outs
add
fs
sub
call
sbb
idiv
dec
hlt
cld
jb
out
fwait
aad
inc
dec
hlt
mov
shl
retf
pop
stc
push
push
sub
or
xor
jb
repz
xlat
xchg
aad
out
cmps
sbb
dec
loope
dec
cmc
mov
aad
cdq
int3
bound
dec
gs
pop
push
sub
fcom
push
stc
jo
pop
pop
mov
push
das
add
fwait
jmp
repz
jmp
sbb
mov
fadd
dec
adc
jmp
imul
add
pop
rcl
icebp
add
add
push
dec
data16
mov
mov
ds
mov
out
cmp
sub
and
outs
scas
out
sahf
lds
sub
aaa
aaa
xchg
popa
cmp
icebp
adc
aad
iret
pop
jo
jecxz
out
out
and
iret
fst
mov
jo
test
push
or
sbb
adc
cmp
xor
iret
ja
pushf
ret
repnz
pop
imul
rcr
pop
loop
pop
(bad)
inc
inc
pop
jmp
inc
ds
aad
dec
or
fst
iret
arpl
xor
fidiv
push
ins
movs
out
pop
fst
out
push
dec
mov
repz
add
mov
sahf
call
dec
mov
repz
ret
stos
xchg
jns
test
sbb
pop
loope
js
mov
pop
pop
jmp
mov
int3
pop
cmp
(bad)
repz
leave
(bad)
jp
xchg
loopne
pop
lahf
retf
(bad)
pop
jecxz
mov
in
into
loopne
jo
aam
lea
enter
aas
pop
(bad)
(bad)
outs
cmp
stc
fs
sub
jns
in
out
cmps
mov
stc
cmp
in
out
out
pop
mov
mov
out
or
adc
fmul
ror
lods
jmp
xchg
mov
dec
and
das
aam
popf
inc
fcom
jne
mov
sub
jno
inc
xchg
(bad)
addr16
outs
ins
mov
mov
jle
icebp
and
xchg
ins
mov
and
fucomi
jns
mov
repz
(bad)
js
sub
pop
jge
xlat
fisttp
sti
jns
cmp
mov
(bad)
icebp
cli
inc
push
sub
ins
cmps
out
(bad)
sti
cmp
test
jmp
add
jmp
jne
xlat
repz
ins
scas
out
mov
sahf
idiv
cmp
ror
jp
push
loopne
jnp
jmp
mov
jnp
jmp
jno
aad
jg
cli
push
jl
sbb
mov
iret
jnp
stc
inc
pop
cmp
nop
dec
jbe
mov
loopne
push
mov
out
rol
sti
cmp
test
mov
cmc
int3
repz
in
mov
sbb
ficom
jae
stc
add
xchg
add
cmp
stc
dec
adc
lahf
inc
fst
sti
cmp
xor
addr16
movs
popf
test
mov
out
(bad)
aas
repnz
push
mov
enter
adc
sub
jmp
xchg
pop
dec
sub
rcr
scas
stos
or
ror
stos
jo
pop
push
lods
scas
into
lock
in
pop
lods
cld
mov
jmp
fstp
cmps
and
test
xor
ja
rcr
pop
jmp
add
mov
mov
cmovne
pop
xor
das
sbb
rcr
sahf
inc
ds
nop
dec
and
addr16
jp
loopne
cld
das
call
push
scas
cmps
sub
sahf
aad
inc
inc
xor
mov
data16
sahf
xchg
js
sub
jmp
push
mov
and
pop
gs
emms
test
sub
sub
cmc
aad
iret
daa
in
pop
lock
daa
mov
cmps
mov
addr16
cmps
pop
lock
mov
jno
out
fwait
aad
lahf
and
cmc
mov
mov
mov
ds
aad
repz
mov
rcl
stos
jo
pop
dec
fmul
sti
pop
mov
inc
xchg
(bad)
and
das
(bad)
jmp
mov
inc
xor
pop
pop
push
sub
pop
scas
cmps
adc
dec
pop
jecxz
xchg
lds
pop
lods
lods
scas
outs
jp
jno
xlat
(bad)
jmp
(bad)
mov
inc
ror
repnz
outs
pop
pop
loopne
aaa
mov
mov
mov
(bad)
mov
loop
xlat
adc
push
jo
mov
jo
jecxz
leave
sti
popf
add
rcr
cmp
aaa
jo
mov
jp
cmps
xchg
iret
fs
mov
pop
mov
lahf
cmp
fs
mov
cmp
jmp
test
xchg
mov
jp
std
popa
cmp
mov
xchg
std
or
lods
daa
div
adc
inc
fst
sti
pop
push
retf
mov
(bad)
(bad)
push
scas
mov
iret
xor
mov
aad
pop
lods
mov
sti
sbb
icebp
lods
push
scas
xor
cwde
pop
xchg
sbb
sbb
sub
stc
xor
sbb
xchg
jecxz
mov
xlat
stos
sahf
jns
inc
xchg
(bad)
and
in
test
lods
pop
(bad)
sbb
fs
fistp
sbb
popa
cmp
aad
ffreep
shr
lock
jo
pop
cld
lods
aaa
scas
stos
aaa
cld
lods
aaa
sahf
scas
enter
stc
jnp
outs
cmp
xchg
dec
test
add
fidivr
and
(bad)
repz
std
sti
aam
loop
jge
(bad)
nop
(bad)
test
mov
dec
inc
mov
pop
xchg
sub
jecxz
ds
in
jge
outs
loopne
pop
cmp
icebp
cli
jo
cli
push
jle
out
mov
push
out
loope
cmc
cmp
xchg
adc
daa
mov
icebp
aaa
jo
scas
dec
cmc
test
outs
js
cmps
das
mov
ret
inc
xlat
mov
mov
cmp
push
mov
mov
test
es
dec
sbb
xlat
arpl
jecxz
in
pop
int3
jmp
test
xchg
in
je
rcr
mov
jg
xchg
inc
ds
ja
std
jo
std
jmp
mov
(bad)
sti
loope
cmovle
ret
repz
pushf
in
xchg
aas
cmp
dec
scas
repz
mov
mov
jns
not
jmp
pop
jns
lods
push
(bad)
fimul
mov
xlat
jmp
rcr
repz
leave
(bad)
test
push
retf
repz
in
std
cmc
cmp
xor
cmp
pop
call
add
push
xor
pop
mov
jno
adc
les
mov
xchg
dec
push
shl
pushf
ret
add
stc
hlt
add
cmp
and
push
test
cmp
inc
mov
pop
jmp
add
xor
repz
dec
in
add
jp
and
or
sub
shl
hlt
inc
mov
push
jmp
cmp
jmp
pop
test
inc
xor
inc
ds
mov
scas
repz
or
adc
call
mov
mov
jne
ret
jecxz
lods
push
(bad)
(bad)
jbe
pop
fistp
in
and
xlat
pop
mov
das
shr
cmp
dec
xchg
call
mov
stc
sti
pop
mov
sub
rcr
cld
sti
xchg
adc
pop
aad
repnz
mov
addr16
out
dec
push
jmp
cmp
out
and
xor
into
xchg
inc
ds
repnz
mov
jne
jge
jmp
jp
pop
xlat
fmul
jne
cmp
mov
cld
std
in
pop
mov
mov
stc
mul
cmp
test
mov
mov
mov
mov
mov
xor
(bad)
into
mov
xlat
ja
jecxz
in
xor
(bad)
and
inc
xor
out
inc
push
retf
cmp
daa
mov
xlat
jge
mov
fild
mov
xlat
jns
stc
xor
cdq
sar
nop
iret
aam
not
mov
xor
fwait
aad
cli
mov
ds
scas
repz
jecxz
daa
and
test
pop
jo
mov
test
nop
dec
psrlw
aas
or
aas
push
ja
inc
jmp
icebp
cdq
mov
pop
lods
clc
int3
push
clc
or
leave
lods
push
(bad)
push
xor
bnd
add
push
fild
loope
mov
popa
lock
jecxz
sub
mov
(bad)
or
iret
adc
or
jmp
test
dec
adc
loopne
loopne
(bad)
xor
hlt
std
adc
(bad)
ret
xor
inc
dec
loope
movs
lock
adc
pop
addr16
xchg
movs
lock
push
mov
or
imul
cmps
adc
xor
(bad)
or
iret
loop
enter
imul
inc
ds
scas
sti
cmp
mov
lock
jmp
cdq
lds
loopne
push
mov
and
fisttp
sbb
xor
loope
jne
cmp
pop
add
sbb
or
or
fild
leave
adc
sbb
push
and
aaa
loopne
push
sub
add
call
jle
adc
lahf
aad
out
xchg
and
aaa
enter
stc
sti
push
cmp
push
scas
call
pop
test
ror
cmps
inc
jmp
push
stc
lock
push
(bad)
std
fld
aam
stc
call
loopne
sub
bound
jmp
add
sahf
sbb
aad
cmp
shl
inc
push
stc
int3
sub
popf
mov
(bad)
jmp
lods
xlat
jge
jecxz
sar
mov
daa
mov
out
jecxz
jp
daa
mov
scas
adc
stc
xor
jmp
inc
jmp
lahf
inc
ds
jg
cs
mov
mov
xchg
out
sub
jecxz
sub
cs
aad
cmc
(bad)
cmc
cli
dec
(bad)
loope
sbb
cmp
aad
out
jmp
and
xlat
jmp
cmp
jge
out
jp
loopne
mov
aaa
or
inc
fisttp
jno
adc
fcomp
loopne
sbb
pop
arpl
std
nop
inc
ds
jo
stos
xchg
sti
arpl
jg
mov
jge
inc
ds
fisttp
jno
bound
pop
aam
mov
inc
jmp
xchg
sti
add
sbb
fmul
cmp
mov
(bad)
js
sbb
js
mov
mov
mov
jge
and
pop
or
push
push
mov
and
cmps
dec
fisttp
cdq
mov
sbb
mov
lock
les
sahf
inc
ds
lds
adc
inc
push
mov
lock
movs
xchg
dec
and
dec
push
retf
cmc
mov
cmc
(bad)
scas
addr16
pop
sbb
mov
icebp
mov
and
dec
and
cld
pop
pushf
sbb
xchg
push
scas
out
xchg
ror
addr16
mov
jge
lods
ja
fstp
xchg
jmp
cld
xor
call
mov
(bad)
pop
enter
push
xor
push
or
sbb
aas
xor
je
push
cli
shl
mov
mov
mov
out
xchg
aas
push
jg
(bad)
sub
cmp
push
stc
dec
repnz
in
out
int3
out
call
aas
das
push
(bad)
jns
lods
jb
je
jbe
ja
pop
or
fstp
lock
data16
js
xor
stos
mov
popf
cmps
mov
jne
jmp
mov
rcr
xor
mov
int
push
pop
gs
ja
ret
push
xchg
xor
and
int
push
pop
cmps
dec
xor
stos
stos
int3
or
cs
test
dec
dec
xchg
mov
fst
dec
jg
inc
mov
sbb
mov
lea
into
outs
aam
loop
lea
push
cld
mov
xor
dec
pop
(bad)
sti
push
in
fadd
sbb
scas
ins
ret
dec
cmp
imul
mov
mov
adc
imul
loop
int
push
cld
mov
sub
add
out
pop
pop
xor
push
(bad)
or
pop
rcr
bound
cli
jae
lahf
mov
scas
aas
ja
mov
out
cli
jae
lahf
mov
scas
(bad)
aas
out
cli
push
inc
cmc
cmc
getsec
call
out
shr
pop
add
mov
mov
push
cld
mov
mov
xlat
cmp
aad
(bad)
sub
stos
mov
mov
jne
jmp
cmc
push
mov
sub
mov
outs
arpl
xor
cmc
test
pop
in
xor
sub
jecxz
icebp
out
xor
fwait
cmp
cmp
(bad)
retf
and
fwait
mov
pop
mov
jmp
aas
xchg
call
sub
jle
jmp
inc
(bad)
mov
and
ror
jmp
out
jge
push
(bad)
sar
jge
mov
fisttp
movs
js
sti
sar
jo
lds
sbb
daa
ja
push
popf
mov
mov
jb
mov
ret
sub
fdiv
cmp
mov
(bad)
repnz
sti
scas
cld
retf
push
pop
fsubr
mov
jge
stos
cmp
sbb
mov
jecxz
mul
fnstsw
test
and
sbb
outs
stc
mov
cli
movs
fist
pop
push
jmp
(bad)
sbb
aad
and
jecxz
fbld
mov
jle
mov
push
push
das
inc
stc
mov
dec
stc
inc
mov
jmp
stos
sbb
push
pop
ret
xchg
out
test
test
sub
(bad)
movs
sahf
inc
cdq
dec
retf
into
adc
cli
jno
pop
push
cs
sub
hlt
jecxz
fisub
and
dec
push
cli
xor
bound
jp
sub
hlt
rcl
inc
cmc
push
lea
cmp
mov
or
push
xor
fist
hlt
mov
sub
push
xor
es
cmps
stos
inc
push
aas
test
dec
cmc
cmps
jp
aam
mov
sbb
push
and
xchg
into
rcl
mov
inc
shl
dec
pop
push
sub
je
mov
xchg
imul
stos
inc
inc
xchg
shl
or
sbb
push
aad
movs
xchg
xchg
fucomip
retf
jo
inc
push
or
inc
add
push
or
shl
jmp
push
and
inc
aam
stos
inc
dec
lea
mov
mov
xor
in
push
mov
xor
mov
mov
sahf
stos
adc
clc
mov
(bad)
repnz
push
daa
push
xor
les
inc
cdq
xchg
test
and
jno
inc
or
mov
lahf
dec
mov
test
mov
(bad)
pusha
retf
mov
test
push
movs
cdq
xor
icebp
jp
push
scas
xor
scas
aaa
mov
(bad)
or
(bad)
dec
pop
imul
mov
sub
dec
sbb
pop
(bad)
sbb
adc
aad
sbb
repz
xchg
push
xchg
push
(bad)
stos
mov
int
xor
xlat
adc
mov
adc
inc
rcl
jecxz
inc
sbb
lock
mov
xor
cmp
mov
imul
xor
inc
(bad)
pop
sub
and
pop
(bad)
fs
imul
lea
daa
repz
push
movs
cld
and
mov
push
xor
mov
dec
xchg
push
popf
jno
scas
cmp
adc
cmp
inc
stc
(bad)
sub
stos
xor
adc
sbb
dec
mov
sub
push
jno
in
mov
mov
inc
push
cmp
int
into
imul
mov
aad
xor
mov
mov
mov
cmp
cmp
imul
call
xor
cmp
xchg
jno
scas
mov
jmp
cwde
(bad)
mov
repz
cs
inc
rcl
dec
jns
sbb
aam
inc
add
stos
retf
mov
push
mov
retf
cwde
ret
stos
mov
sub
lds
xor
retf
(bad)
xchg
aam
xchg
xor
aad
(bad)
push
je
lods
adc
stos
fidivr
call
xor
push
dec
xchg
mov
or
in
(bad)
mov
jg
mov
push
jle
lds
inc
fbld
dec
retf
xor
cld
push
mov
repnz
sub
sbb
mov
movs
cld
jmp
jno
in
mov
fwait
sub
lea
in
xor
push
inc
cmps
cmp
pop
dec
std
sbb
in
push
xor
(bad)
push
jp
je
and
xchg
mov
inc
not
push
ret
stc
jae
xchg
pop
jecxz
retf
rcl
mov
jle
lds
stc
dec
sub
cli
sbb
ss
push
test
repnz
push
xor
add
outs
fmul
das
sub
jmp
adc
cmc
addr16
inc
push
pop
push
mov
xchg
call
out
movs
int3
mov
jge
cmp
push
mov
mov
or
stos
mov
adc
push
sbb
push
out
mov
pop
ret
movs
adc
jmp
push
xchg
stc
leave
js
xor
call
sbb
sub
or
pop
ds
jge
jl
repnz
mov
retf
cmps
mov
xor
movs
mov
add
pushf
pop
jg
lds
push
mov
sbb
repz
jle
push
movs
std
shl
adc
lahf
adc
sub
fmul
push
inc
inc
xor
sub
nop
mov
addr16
push
xor
push
mov
lds
out
push
movs
out
scas
mov
mov
jne
stc
cmp
into
movs
dec
jnp
outs
adc
cdq
fwait
sub
inc
ficomp
jge
call
aam
out
xchg
lahf
dec
xchg
test
mov
add
xchg
mov
mov
movs
stc
xor
scas
mov
adc
movs
int3
cmc
adc
div
mov
xlat
sub
mov
mov
xor
jg
inc
inc
sub
and
xchg
cli
dec
int3
in
xchg
pop
dec
rcl
outs
push
jg
stc
ss
push
xor
jnp
cmp
pop
sub
jmp
inc
push
jne
mov
popf
xchg
mov
sti
mov
mov
fadd
ja
xor
xchg
out
inc
retf
out
cmps
int3
pop
sub
mov
cld
sub
inc
std
mov
xchg
push
mov
ins
jle
stc
jnp
call
int
inc
stc
sti
sub
stos
xchg
inc
stc
out
adc
push
stc
sbb
imul
xor
sar
sub
outs
jmp
mov
mov
cld
xchg
inc
pop
mov
push
mov
xchg
add
and
daa
jge
xor
mov
jle
stc
jne
or
out
nop
adc
jmp
and
test
cld
mov
(bad)
push
xor
dec
mov
lds
stc
(bad)
sub
jmp
or
or
inc
xchg
jbe
fisttp
test
int3
and
and
fiadd
jge
push
out
repz
dec
mov
cmp
rcl
push
iret
mov
test
jge
inc
iret
dec
lahf
dec
cdq
sahf
adc
mov
out
dec
outs
lahf
lahf
xor
pop
mov
bnd
call
test
fdivp
test
stc
(bad)
adc
mov
addr16
out
lahf
dec
cdq
adc
cld
and
push
(bad)
ins
mov
xor
inc
sub
cwde
mov
push
jg
out
sub
pop
push
test
repnz
adc
cmc
sahf
scas
xor
inc
clc
call
hlt
xor
jmp
stc
xchg
adc
cmc
sub
push
sub
jge
imul
mov
gs
push
xor
stc
(bad)
ss
aas
(bad)
and
aas
mov
push
inc
mov
xor
mov
cld
icebp
adc
iret
hlt
mov
ror
sub
xor
xlat
xor
rcr
xchg
repnz
shl
rcl
mov
daa
push
movs
mov
xchg
push
movs
out
scas
mov
push
xor
movs
(bad)
sub
jge
sub
cdq
and
(bad)
(bad)
scas
hlt
retf
hlt
jl
adc
mov
cli
mov
hlt
xchg
hlt
jne
cld
adc
xchg
mov
dec
dec
dec
pop
dec
retf
xchg
test
push
jne
scas
pop
cmps
push
xor
xchg
(bad)
(bad)
aas
fst
xchg
addr16
xor
pop
jg
retf
sbb
call
in
jmp
stc
mov
call
jl
sub
popf
mov
mov
retf
rcl
sub
iret
mov
sub
sub
stos
imul
sub
xchg
outs
sbb
sub
scas
loope
mov
mov
aaa
pushf
bnd
call
jge
sub
or
pop
out
pop
inc
std
jge
rcl
lock
sub
cdq
outs
or
xor
in
push
mov
jg
rcl
(bad)
push
dec
fistp
jg
rcl
cld
(bad)
push
(bad)
data16
cmc
xchg
outs
add
(bad)
xor
(bad)
push
aam
fidiv
in
sub
pop
sbb
xchg
pop
fild
fwait
dec
mov
ins
loopne
sbb
cli
es
(bad)
cmp
add
fist
test
mov
inc
inc
jne
xchg
push
mov
shl
push
cmps
dec
jnp
loopne
xchg
out
inc
xor
call
or
inc
cdq
lahf
jge
push
out
mov
out
inc
xor
cs
movs
cld
das
mov
pushf
inc
mov
fs
shr
outs
push
xor
test
xor
cmps
push
test
stc
add
cmc
or
dec
cdq
nop
jg
repnz
sub
dec
push
fistp
gs
aad
jo
gs
dec
pop
adc
aad
jo
cmc
sbb
sub
jmp
xor
ffreep
lahf
test
in
mov
pop
push
cmps
mov
push
xor
mov
loop
test
lea
sbb
loopne
retf
sbb
cld
mov
fist
test
loopne
mov
int
call
jmp
jle
mov
and
xchg
dec
retf
push
push
jle
lds
shl
adc
xor
xchg
cli
scas
cmps
int3
adc
inc
stc
and
jns
lahf
dec
mov
pop
loopne
jmp
push
xor
mov
add
mov
(bad)
jmp
mov
or
pop
movs
dec
iret
ds
xor
cmp
ins
paddusb
cmp
inc
jp
stc
pop
shr
dec
mov
out
xchg
adc
or
mov
xor
mov
int
jg
and
hlt
mov
outs
call
retf
rcl
pop
xchg
repnz
dec
xchg
sahf
xchg
gs
mov
or
cld
dec
mov
xor
fild
mov
jo
out
xchg
cdq
call
inc
fimul
add
ss
rcl
fld
repz
(bad)
push
xor
inc
cmp
dec
retf
rcl
jg
inc
(bad)
push
xchg
pop
inc
rcl
ja
call
(bad)
fst
sbb
xchg
jmp
stos
sub
sub
jge
mov
out
mov
cmc
imul
mov
call
std
not
sub
ja
addr16
xor
mov
xor
out
pop
test
lods
inc
rcl
aad
rol
into
mov
dec
cmc
inc
loopne
retf
jg
xor
sar
jmp
pop
dec
mov
inc
loopne
retf
jg
xor
push
xor
xlat
add
movs
pop
repnz
mov
jge
js
cli
scas
clc
lahf
movs
cld
retf
adc
jne
lock
mov
aaa
push
(bad)
push
mov
out
test
inc
jmp
mov
in
xchg
and
push
jecxz
mov
aad
or
ja
mov
xor
xchg
push
movs
sbb
dec
mov
xor
inc
push
xor
cmc
shr
push
adc
in
(bad)
rcl
adc
mov
imul
sbb
adc
test
mov
xor
jecxz
sbb
lock
retf
sbb
add
cmps
pop
adc
mov
mov
inc
rcr
aas
xchg
mov
movs
dec
in
xchg
lahf
inc
rcl
outs
push
jg
loopne
retf
mov
inc
cdq
xchg
add
sub
rcl
fbld
xchg
stc
and
lods
or
cmp
jg
inc
push
push
push
aas
mov
retf
mov
dec
cdq
rol
mov
inc
lods
or
push
(bad)
jbe
adc
iret
mov
jnp
jg
pusha
das
in
mov
pop
push
out
shl
cdq
dec
rcl
jle
std
jae
sti
sub
sbb
scas
mov
lahf
push
(bad)
pop
mov
cmc
iret
or
cmps
cld
stc
adc
mov
clc
add
push
xor
pop
shr
add
lock
pop
sbb
inc
cdq
aas
push
xor
jge
pop
jmp
sub
stos
dec
fidiv
mov
dec
add
imul
cmp
pop
fiadd
inc
aam
shl
xchg
mov
iret
cmp
lds
repnz
out
pop
retf
sbb
pop
push
shr
sbb
xchg
leave
sti
xchg
ja
mov
cmc
xchg
rcl
pop
inc
xchg
jbe
mov
loopne
retf
push
mov
push
push
add
push
movs
mov
outs
movs
dec
dec
mov
(bad)
mov
xchg
pop
inc
xchg
sahf
ja
aas
in
cmps
push
jmp
inc
push
(bad)
enter
pop
xor
enter
jg
in
(bad)
daa
mov
inc
add
mov
xor
iret
mov
arpl
push
cmp
mov
mov
xor
adc
adc
repnz
mov
(bad)
aam
(bad)
mov
(bad)
out
movs
cld
cmp
mov
(bad)
in
push
(bad)
or
rcl
pop
push
adc
(bad)
mov
inc
std
push
rcl
aas
mov
inc
out
xchg
and
ficom
mov
jle
pusha
cmp
aaa
mov
in
sub
inc
jp
add
inc
push
std
and
popf
sub
pushf
mov
cmps
dec
mov
gs
push
xor
daa
jns
retf
xchg
sahf
outs
shr
fimul
jne
cld
cmps
adc
jmp
inc
mov
xchg
mov
jbe
jl
mov
std
adc
stos
jge
daa
in
push
movs
jge
das
inc
stc
das
sub
retf
push
push
mov
popf
sub
stos
ss
das
in
push
or
push
inc
rcl
in
mov
stos
imul
jmp
xor
push
cs
sbb
hlt
or
push
cmps
pop
inc
push
jge
aaa
mov
mov
inc
rcl
repnz
push
mov
sti
push
xor
vmwrite
mov
jg
push
aam
add
mov
gs
push
sbb
cdq
mov
dec
jne
outs
adc
pop
or
cmps
cld
add
xor
and
adc
std
pushf
aaa
xchg
cli
sysret
retf
sub
or
test
xchg
aaa
mov
dec
mov
mov
jno
jns
cmp
xchg
sbb
sahf
cli
sbb
mov
int3
xchg
ror
add
sbb
adc
add
rol
leave
xchg
jg
mov
retf
or
and
(bad)
cmp
dec
std
out
push
sub
rcl
push
sub
ss
xor
adc
add
push
inc
cmps
push
out
loopne
xchg
jns
mov
xchg
dec
pop
cmps
push
out
mov
out
loopne
xchg
(bad)
push
ja
into
cmps
cld
dec
mov
cmc
push
cmp
pop
mov
adc
push
cmp
repnz
shr
cmp
aam
rcr
pop
dec
rcl
test
mov
jmp
mov
inc
stc
aad
inc
jmp
xchg
jbe
rcr
inc
retf
push
sub
aaa
mov
cmc
pop
jo
lea
xchg
cmps
jl
bound
pop
inc
stc
imul
sbb
call
bound
into
cmps
cld
pop
adc
cmc
inc
test
xor
out
fiadd
mov
mov
adc
inc
add
add
inc
inc
mov
test
loop
les
add
fldenv
mov
and
add
mov
in
jnp
mov
int3
in
stos
retf
jb
(bad)
cld
scas
out
mov
out
mov
mov
ficomp
mov
enter
scas
xchg
test
out
inc
add
sti
adc
push
jg
sub
mov
jle
aas
sbb
adc
and
pusha
out
(bad)
mov
dec
xlat
dec
pop
or
cmp
fs
dec
aaa
dec
pop
sub
push
push
xchg
outs
xchg
push
add
js
enter
aaa
dec
xchg
shl
add
adc
push
jecxz
mov
cmp
les
sbb
adc
nop
sahf
(bad)
arpl
mov
pop
xchg
push
test
ja
daa
sbb
(bad)
js
js
sub
pop
ror
jge
daa
and
jle
adc
push
jecxz
loopne
push
xchg
out
xchg
dec
sbb
test
test
add
inc
inc
cli
(bad)
je
in
add
inc
mov
rol
jae
xchg
inc
inc
jp
cmp
div
or
sub
adc
js
adc
push
jecxz
loopne
mov
mov
adc
lock
mov
(bad)
push
dec
sub
test
inc
add
clc
cmp
or
mov
dec
mov
jl
inc
pop
xor
mov
push
mul
add
lock
js
bound
xchg
movs
fld
pop
or
ror
add
cmp
adc
push
movs
cwde
in
push
fadd
xor
or
push
and
jbe
enter
sbb
sub
add
mov
adc
enter
sbb
enter
sbb
in
dec
sar
scas
add
imul
xchg
push
pusha
jnp
push
movs
inc
mov
(bad)
cmp
dec
dec
fcmovnb
ins
aas
xchg
push
popa
sti
adc
in
push
lock
and
xor
fistp
cmp
fist
sahf
fs
xchg
hlt
adc
(bad)
mov
call
or
mov
or
sahf
arpl
adc
in
jns
sti
dec
das
mov
or
rol
or
out
and
dec
dec
ins
das
mov
inc
jp
in
ds
xchg
xchg
ficomp
mov
jge
and
sbb
or
fcmovb
mul
fld
mov
mov
fcmovnu
ins
scas
xchg
fisub
or
ja
pop
and
dec
sub
pop
inc
cli
sub
push
xchg
(bad)
ins
sti
nop
in
xor
inc
ins
mov
mov
pop
sub
cld
sub
mov
adc
or
sub
push
out
cmp
sbb
or
xchg
or
adc
mov
inc
xor
mov
mov
rcr
mov
mov
mov
shr
jnp
mov
adc
or
scas
cld
and
cmp
pop
movs
lahf
rcr
add
jp
clc
adc
dec
jmp
mov
push
xor
out
mov
xchg
inc
out
or
mov
movs
mov
push
inc
into
or
ss
test
sub
enter
ss
xchg
jle
push
jg
sub
es
(bad)
dec
and
pop
or
lods
daa
and
cld
dec
test
fwait
retf
mov
cmp
adc
fisttp
repz
fs
jg
sub
cmp
std
mov
adc
in
leave
add
add
in
nop
xchg
movs
xchg
and
inc
add
mov
movs
push
mov
sub
xor
mov
or
aaa
movs
ror
dec
pop
pop
neg
mov
jb
jmp
jle
sbb
dec
push
and
mov
push
and
inc
loope
retf
sbb
inc
add
adc
xchg
dec
fimul
test
(bad)
loopne
inc
loope
retf
fwait
sar
sbb
(bad)
sub
mov
data16
fwait
cmp
stc
adc
mov
or
mov
sti
adc
lods
adc
xor
movs
icebp
mov
push
sub
mov
inc
and
(bad)
cmp
lods
rcr
test
pop
mov
adc
and
inc
aas
dec
push
lock
mov
inc
jle
jl
mov
test
push
add
aaa
test
iret
retf
inc
lock
push
cli
push
or
inc
cmp
add
inc
jg
fild
and
mov
inc
inc
jp
ficom
div
(bad)
and
in
popa
aaa
fdiv
pop
push
adc
fs
(bad)
xchg
push
xchg
pop
xchg
(bad)
outs
imul
add
xor
add
je
and
inc
mov
and
inc
inc
jp
out
cmp
daa
lock
mov
or
xor
xor
ret
mov
cmp
mov
and
add
fidiv
adc
sub
sar
ss
pop
test
out
retf
pop
and
fnstcw
hlt
cmp
mov
inc
inc
cli
dec
sahf
add
ins
cs
cmc
repnz
cld
add
xchg
fbstp
ret
ja
jge
ins
ds
imul
cmp
mov
enter
stc
repnz
into
or
(bad)
push
add
pop
or
mov
adc
jge
sub
(bad)
mov
lods
pop
in
sub
cmp
jb
ins
das
nop
dec
mov
cmp
or
adc
add
or
dec
test
(bad)
imul
nop
test
mov
dec
push
cld
add
cld
jo
push
cld
jp
inc
pop
sub
loopne
inc
loope
fist
sbb
adc
clc
and
loope
movs
mov
retf
ret
mov
and
push
test
inc
sub
sbb
test
pop
mov
(bad)
add
cmp
xchg
mov
fild
adc
adc
test
retf
mov
cld
pop
push
xchg
dec
push
push
add
sub
inc
inc
mov
syscall
fstp
sub
leave
retf
cmp
xchg
inc
cmp
jbe
jl
clc
and
dec
cmps
sub
dec
xchg
pop
imul
mov
push
mov
pop
jnp
jl
js
push
movs
xor
or
jb
in
imul
or
or
shl
lock
into
push
dec
cmp
sub
or
mov
xor
mov
pushf
add
lock
sub
mov
or
sbb
aas
pop
cmp
neg
lock
sub
or
mov
mov
jb
in
stc
repnz
inc
inc
mov
add
push
lock
retf
inc
je
jb
test
cs
scas
sbb
loope
sub
(bad)
in
inc
or
dec
push
sub
shr
scas
add
push
scas
add
xlat
xor
jno
push
outs
cmp
test
xlat
sub
shr
outs
push
dec
inc
jno
push
outs
sbb
outs
cmp
adc
add
push
fcomp
stc
dec
lock
mov
pop
mov
inc
ins
push
sub
std
push
lock
xchg
enter
xchg
xor
jle
clc
fs
jle
inc
(bad)
and
idiv
shl
call
lahf
mov
adc
inc
mov
or
xchg
xchg
pop
add
add
push
cmps
std
push
lock
fdivr
mov
push
ds
add
pop
jle
jl
sti
xchg
loopne
mov
rol
ret
push
cmps
cmp
fiadd
test
outs
jg
fs
sub
in
lock
sub
sti
mov
mov
adc
sti
retf
and
adc
fdivrp
sub
inc
inc
call
push
mov
(bad)
es
mov
push
enter
mov
inc
jns
fs
fidivr
mov
rcl
ret
mov
add
push
xchg
jmp
pop
sub
dec
inc
mov
fstp
add
stos
jl
mov
std
jae
or
mov
add
js
scas
shl
ret
jg
jnp
repnz
loop
outs
inc
ss
mov
(bad)
(bad)
cmp
rol
loope
fstp
fld
or
cld
jg
iret
mov
sub
jmp
adc
jl
adc
mov
xchg
aas
inc
pop
push
clc
push
aas
popa
jnp
mov
(bad)
idiv
sbb
adc
mov
sub
enter
add
lods
xor
fild
in
gs
sub
lea
mov
adc
ins
push
add
shr
or
push
rcr
pop
push
adc
sbb
aam
imul
sbb
cmp
adc
adc
clc
jge
adc
clc
std
push
clc
jmp
inc
push
test
movs
test
pop
cmp
xor
mov
inc
vphaddbw
test
xor
pop
pop
mov
retf
jge
sub
sbb
jp
lahf
push
mov
scas
pslld
clc
repz
lahf
add
push
aaa
add
fstp
in
sub
adc
das
inc
inc
sbb
mov
enter
repz
mov
jne
fsubr
add
repnz
xor
in
test
jmp
dec
lock
ficom
cmp
or
jns
sub
xchg
add
add
mov
icebp
cmp
mov
xchg
add
daa
push
js
push
mul
or
push
test
fwait
stos
popa
lock
pop
jge
ins
add
cmp
mov
xchg
mov
pop
inc
inc
ficomp
in
cmp
aad
inc
mov
push
or
fisub
and
cmp
clc
add
mov
sti
adc
lds
(bad)
stos
cmp
pop
or
faddp
mov
clc
imul
into
mov
fsub
mov
fimul
mov
jge
enter
not
sbb
stos
in
xor
inc
loope
stos
mov
or
add
mov
inc
jnp
enter
push
push
ja
mov
in
mov
jnp
adc
mov
test
xchg
out
div
sub
push
clc
ret
push
pop
sbb
xchg
movs
stos
mov
call
push
add
add
cmp
inc
(bad)
fdiv
inc
in
rcl
jmp
in
or
test
hlt
mov
cmp
jne
or
or
icebp
push
clc
jmp
dec
mov
ror
push
push
or
cmp
push
pop
aas
sbb
das
pop
in
cmp
test
das
stos
or
addr16
add
sbb
and
xor
fsub
push
loopne
inc
inc
jp
dec
ret
ds
fimul
jle
adc
mov
test
push
clc
in
push
in
jnp
in
sub
jbe
add
(bad)
loopne
inc
loope
stos
dec
inc
cs
add
pop
jmp
ret
bound
xchg
dec
push
test
ficom
sar
mov
inc
scas
mov
add
push
sub
sti
jmp
aad
fnstcw
test
mov
or
xchg
jp
clc
xchg
std
aad
adc
add
push
sidtd
stos
xchg
adc
xor
adc
ret
sar
test
scas
push
add
mov
clc
in
jmp
ins
jne
mov
adc
mov
cmc
js
ss
jbe
add
xchg
aad
shl
rcr
adc
mov
jmp
jmp
lahf
push
test
scas
sahf
add
test
or
xchg
enter
jbe
sbb
pop
aam
inc
inc
loope
stos
out
je
out
je
loope
imul
pop
push
jne
ins
cmc
inc
(bad)
out
or
jle
push
mov
popf
or
lock
mov
add
or
inc
repz
shl
je
jbe
clc
jno
pop
in
test
push
movs
adc
sub
je
jbe
clc
mov
je
pop
les
add
xor
inc
xor
jp
inc
mov
add
aam
jno
inc
jo
or
mov
xor
adc
mov
or
mov
push
or
dec
mov
pop
lods
fld
shl
mov
pop
in
jle
outs
lock
jle
jbe
dec
inc
mov
cld
push
ds
lahf
aam
cmp
test
fisttp
sti
addr16
add
pop
mov
inc
jle
pop
add
or
ret
loopne
inc
loope
test
sub
in
push
fdivr
pop
(bad)
in
jno
mov
jnp
in
in
dec
adc
or
je
div
movs
push
js
fidiv
loopne
push
clc
aad
mov
ret
mov
inc
inc
inc
add
cld
or
cmp
in
add
pop
jnp
les
loope
imul
sub
sub
jbe
jl
in
push
adc
or
(bad)
pop
pop
imul
loope
imul
test
test
lods
mov
sbb
outs
rcr
test
call
mov
push
pop
sub
movs
fwait
mov
inc
(bad)
sar
add
add
nop
cmc
mov
inc
or
push
in
or
or
jge
mov
not
outs
xlat
mov
or
xor
neg
retf
dec
fild
fstp
shr
dec
aas
sub
mov
xlat
lods
mov
inc
(bad)
jae
mov
ret
inc
not
mov
mov
mov
lock
xor
neg
add
mov
add
xchg
pusha
fild
test
out
mov
or
shl
add
aas
(bad)
cmc
or
enter
aam
cmp
iret
imul
or
mov
add
mov
fsubr
sbb
jne
mov
aaa
mov
repnz
xlat
div
pop
fist
in
sub
mov
stc
sbb
lahf
inc
jae
(bad)
xchg
jmp
call
ds
das
mov
in
scas
mov
mov
or
inc
ins
and
pop
mov
mov
out
stos
mov
enter
call
aam
mov
xlat
cmp
inc
data16
(bad)
(bad)
(bad)
imul
push
xlat
test
inc
je
dec
mov
mov
inc
mov
ret
mov
xchg
add
mov
adc
(bad)
cmps
frstor
and
fidiv
jbe
mov
and
push
mov
push
add
bound
iret
xchg
call
push
jno
dec
lahf
aaa
jbe
scas
js
dec
popf
mov
ficomp
jnp
cmp
ficomp
lock
adc
pxor
mov
jle
out
scas
icebp
mov
out
les
les
movs
popa
dec
sub
out
int
cmc
es
arpl
dec
arpl
push
ficom
inc
imul
into
inc
pop
xchg
dec
dec
out
hlt
mov
mov
std
mov
pop
imul
pop
int3
dec
mov
mov
je
gs
jae
mov
test
xor
pop
scas
mov
pop
inc
aam
sub
(bad)
in
jp
scas
pop
out
sbb
jb
es
into
aam
mov
pop
jne
cmp
test
pop
dec
imul
sbb
inc
mov
pop
xor
mov
popf
mov
xor
leave
je
mov
push
(bad)
mov
pop
xor
and
inc
je
arpl
push
jne
popf
mov
cs
aam
mov
cmps
push
lods
stos
data16
xchg
sbb
outs
stos
xor
adc
mov
push
xlat
leave
xor
cmp
pop
xchg
pop
sub
fisubr
sahf
je
xor
sbb
and
sbb
xchg
dec
stos
shr
call
xor
xor
push
push
daa
jmp
pcmpgtb
push
stos
lahf
xor
lock
imul
pop
mov
cli
in
leave
push
popf
js
xchg
pop
xchg
into
sub
retf
sub
sbb
iret
and
repnz
dec
ror
pop
in
cmp
lods
pop
jg
xor
mov
sbb
sub
mov
ja
sbb
dec
xor
shl
jmp
loope
jmp
push
mov
retf
push
xchg
pop
scas
or
dec
out
pop
mov
mov
or
inc
mov
jmp
mov
sub
lods
inc
lods
adc
xchg
pop
adc
push
sbb
aam
and
sub
adc
add
movs
cs
int3
fs
add
jb
dec
pop
addr16
stc
addr16
cmps
scas
out
(bad)
jecxz
cmc
mov
mov
xchg
stos
jmp
cld
push
mov
fst
jp
xchg
dec
int
mov
shl
in
pop
mov
jbe
pop
mov
jbe
ins
sbb
rcr
jmp
add
mov
imul
cli
es
sahf
jbe
add
mov
addr16
xchg
xchg
dec
loop
ins
mov
mov
sbb
repnz
dec
sbb
rcl
movs
fs
push
mov
call
jmp
push
repz
xchg
into
push
(bad)
xchg
pop
rcr
push
dec
inc
fcmovnbe
jge
and
test
mov
cli
xchg
test
jae
inc
xchg
mov
xor
dec
sub
xchg
outs
ss
and
add
mov
mov
xchg
out
dec
scas
pop
jo
sbb
les
jmp
std
ror
in
cmp
inc
xchg
inc
sbb
(bad)
ret
aad
lods
mov
popa
sbb
rcl
pop
mov
sub
push
test
jb
std
fxch
sub
pop
adc
inc
jle
les
jmp
push
cmps
ins
aaa
and
cmp
shr
xor
pop
push
xchg
or
adc
push
test
rol
icebp
jae
add
dec
cwde
pop
retf
pop
cmp
(bad)
lods
pushf
gs
mov
into
dec
dec
adc
into
retf
cmps
push
dec
lods
dec
push
retf
sbb
ins
dec
(bad)
enter
repnz
lahf
xor
test
lods
push
dec
mov
pop
push
in
repnz
sub
mov
xchg
push
add
mov
call
add
inc
lea
xchg
push
mov
push
int3
mov
inc
lahf
xchg
push
pusha
pop
rol
add
lods
add
sub
inc
das
mov
adc
popf
mov
push
cs
in
call
push
dec
das
mov
int
jbe
jmp
mov
test
bound
add
call
and
jle
je
daa
call
mov
call
loope
push
push
xor
pop
jnp
pop
stos
mov
cld
and
retf
or
xor
cmc
iret
adc
aas
iret
sub
pop
out
mov
push
pop
cmp
jo
jae
sub
cs
adc
stos
mov
push
psadbw
shr
jae
enter
les
mov
je
into
leave
dec
lods
mov
mov
cmp
push
das
(bad)
scas
jge
mov
lods
sbb
mov
sub
adc
imul
repnz
jns
test
xchg
pop
sub
mov
push
pop
add
cmp
and
sbb
in
ins
sub
sbb
repnz
dec
fs
jp
fisubr
bound
push
in
dec
ficom
and
call
mov
je
pop
xor
in
jmp
push
out
push
xor
or
test
cs
or
xchg
push
mov
adc
retf
test
lods
hlt
pop
or
and
ja
xchg
inc
push
loopne
add
in
les
dec
cmp
stos
fdivrp
retf
sub
xchg
sbb
fsubr
push
mov
xchg
(bad)
aam
test
dec
ins
xor
aam
lods
jno
fimul
jns
call
sbb
or
jo
loop
mov
pop
pop
repnz
es
stc
repnz
mov
inc
lods
movs
movs
test
sub
(bad)
and
cmp
addr16
inc
outs
jno
xchg
popf
ins
retf
dec
mov
(bad)
aad
inc
aad
(bad)
aam
jecxz
(bad)
push
repnz
jne
sub
sub
push
mov
mov
push
lods
rol
ss
inc
xor
rol
pop
push
or
xor
and
jne
loop
icebp
mov
pusha
sub
adc
mov
jmp
mov
pop
into
call
movs
jb
leave
out
gs
push
or
jmp
jbe
pop
pop
and
std
add
xor
cmp
call
push
int
add
xchg
mov
pop
sub
xor
cdq
xlat
mov
mov
jl
mov
sub
sbb
lea
int
mov
sbb
gs
(bad)
lds
leave
fwait
shl
xchg
jle
arpl
gs
iret
bound
outs
cmp
es
lods
daa
adc
js
inc
xchg
xchg
out
pop
bound
test
mov
and
stc
add
or
pop
stc
push
cmp
lahf
jne
xchg
jbe
sub
sub
fnsave
push
adc
outs
push
jl
sub
cwde
jmp
push
div
retf
lahf
movs
cdq
xchg
scas
jl
push
(bad)
stos
dec
test
stos
mov
fidivr
xchg
scas
jmp
retf
hlt
aad
rcr
cmps
mov
ja
dec
gs
rcr
cmps
cmc
jmp
je
xchg
scas
cs
cmp
fwait
add
rcl
inc
mov
mov
scas
arpl
retf
push
ins
inc
fnstenv
mov
call
scas
hlt
aam
dec
dec
push
inc
adc
sub
in
mov
pop
test
in
mov
out
mov
jns
lods
dec
fisubr
rcr
jbe
jmp
scas
push
jne
js
xchg
or
push
adc
push
mul
addr16
mov
test
push
mov
aaa
clc
leave
les
js
test
jg
test
mov
mov
pop
clc
test
jle
push
cmp
sub
neg
arpl
jmp
(bad)
les
mov
jbe
cld
mov
addr16
(bad)
fnstenv
jle
test
cmp
(bad)
or
push
test
dec
pop
in
pop
jne
dec
call
push
jl
push
test
mov
les
mov
test
repz
pop
xchg
(bad)
jecxz
mov
mov
jl
imul
mov
mov
adc
jle
imul
scas
pop
xor
mov
mov
ins
popa
mov
inc
jmp
push
in
scas
mov
cmp
cmp
lds
das
out
xchg
(bad)
mov
ins
(bad)
pusha
dec
pop
icebp
add
aaa
loopne
jnp
xor
cmps
cdq
(bad)
ror
inc
mov
sbb
imul
push
pop
lock
fdiv
pop
and
jno
adc
xchg
ret
scas
aaa
sbb
xchg
xor
sub
fimul
aad
stos
cmc
inc
sar
push
and
jecxz
inc
mov
in
pop
or
mov
mov
popa
ds
cs
xchg
popa
or
movs
xor
push
fnstcw
xchg
icebp
outs
sahf
lods
scas
test
fst
mov
js
cmp
mov
xchg
test
lods
and
mov
sbb
sub
gs
leave
or
pop
pop
jg
ss
or
imul
add
mov
mov
xchg
cmp
rcl
push
outs
gs
lods
mov
mov
sub
push
pop
xor
in
cmps
fdiv
sbb
hlt
movs
pop
cmp
adc
repz
pop
movs
cmp
loop
push
arpl
jae
xor
xor
cwde
into
sahf
inc
int
icebp
into
cmp
int3
adc
inc
ja
(bad)
shl
sub
jp
rcl
inc
sbb
mov
cmc
sbb
in
addr16
push
test
jmp
cmp
js
arpl
retf
sar
and
mov
outs
push
pop
pop
cmp
jnp
es
addr16
push
iret
or
test
fsub
and
aas
inc
and
shl
add
adc
and
movlps
xor
les
push
push
addr16
sub
enter
push
repz
xchg
in
cmp
sub
test
xor
dec
and
add
inc
fst
movs
mov
std
mov
cmp
dec
xor
mov
pushf
mov
cmp
mov
or
xor
rcr
mov
out
and
sub
xchg
(bad)
retf
scas
rol
aad
sar
adc
lock
iret
and
fwait
mov
cmp
repz
mov
inc
push
das
mov
jo
inc
jl
mov
and
repz
pop
cs
jno
cmps
call
pop
(bad)
xchg
(bad)
push
into
fiadd
cmp
sub
(bad)
cmps
outs
pop
sbb
mov
push
test
je
jb
nop
stos
data16
mov
pop
mov
dec
imul
fbstp
jnp
cmc
or
mov
fisub
push
mov
ins
rol
pop
or
add
sub
mov
sbb
mov
cmp
sbb
js
xor
cmp
pop
mov
adc
ins
jecxz
mov
mov
aaa
sbb
cli
jge
adc
leave
jl
fwait
ins
bound
cmc
shr
cmp
scas
scas
pop
imul
int3
loopne
aaa
mov
aas
int
push
stos
(bad)
fimul
adc
mov
ror
mov
scas
or
outs
stc
js
cmp
mov
sbb
cwde
cmc
ss
gs
sub
jmp
mov
mov
pop
pop
sbb
(bad)
adc
ja
mov
cmp
push
jno
push
pop
pop
mov
and
int
mov
mov
xchg
or
inc
(bad)
lock
int3
dec
or
jbe
lods
xchg
out
stos
daa
pop
sbb
movd
bnd
mov
fsubr
mov
aad
int3
data16
fs
gs
int3
xlat
fidivr
in
xor
sub
xchg
(bad)
iret
add
push
inc
mov
dec
jbe
mov
or
pop
inc
adc
loop
or
je
cmp
sub
push
jo
out
push
loop
(bad)
mov
mov
(bad)
fsub
sub
scas
jns
lods
bound
(bad)
retf
retf
data16
into
jp
sbb
push
jl
mov
daa
iret
iret
jmp
mov
psubb
pop
add
ins
hlt
lock
mov
jne
fcomip
and
fiadd
or
icebp
pop
mov
xor
and
vmovddup
or
or
mov
fs
push
mov
inc
mov
arpl
ins
or
sar
retf
mov
retf
imul
xchg
mov
aaa
out
into
addr16
pop
lahf
jb
stos
repnz
mov
data16
dec
pusha
mov
fbld
pop
ret
cmp
repz
dec
das
pop
and
and
xchg
and
and
xchg
lods
and
(bad)
out
pushf
neg
fwait
repz
stos
fnstsw
dec
mov
(bad)
mov
sbb
rol
mov
cld
mov
sbb
lock
out
stos
xchg
inc
outs
xor
vmaxsd
ja
repnz
cmp
sbb
adc
je
jnp
pop
repz
jae
retf
(bad)
ds
add
into
int3
sbb
loop
cmp
push
ds
scas
jno
iret
mov
mov
repz
in
adc
(bad)
cld
clc
or
xchg
add
dec
jbe
jns
sub
mov
push
out
jb
inc
mov
pop
pop
inc
call
push
jnp
xlat
mov
fbstp
int3
cmp
loope
inc
mov
sar
mov
(bad)
xchg
ds
out
jmp
mov
pop
lahf
fwait
xor
cwde
cmp
ret
(bad)
pop
mov
in
outs
test
ins
sbb
mov
mov
lahf
retf
sbb
cmp
repz
push
popa
mov
addr16
int
test
dec
jl
hlt
clc
js
je
fild
push
outs
imul
clc
jl
repz
sti
and
mov
test
aad
inc
ret
add
es
cs
aam
jg
icebp
stc
popf
div
dec
(bad)
movs
pop
sub
daa
mov
ja
(bad)
jb
lods
repz
jnp
mov
pop
cmp
push
push
icebp
push
das
fbstp
and
clc
sar
ds
jae
pop
pop
(bad)
cs
(bad)
xchg
add
add
mov
daa
je
jl
jbe
sbb
rol
fidiv
mov
out
je
xor
pop
test
push
cmp
push
aad
imul
outs
or
sahf
popf
in
jl
xor
dec
jno
mov
mov
(bad)
imul
call
lods
(bad)
aas
fistp
cdq
movs
pop
neg
cmp
jl
(bad)
xchg
lods
into
sbb
(bad)
in
or
adc
cli
ret
pop
dec
rcr
adc
push
adc
lea
and
push
pop
pop
jmp
sbb
xor
in
pop
pop
jecxz
xor
ds
adc
mov
popa
dec
jecxz
xor
fstp
jmp
lds
push
adc
pop
cmp
mov
rcl
pop
jns
mov
xor
and
cmp
je
dec
mov
loope
aas
inc
fwait
pop
sub
ret
(bad)
std
xor
inc
out
push
lea
enter
dec
repz
call
(bad)
movs
(bad)
cld
arpl
dec
jmp
push
jmp
pop
jmp
aam
jecxz
ret
jnp
ficom
cmp
fucom
pop
ja
mov
push
sbb
sbb
inc
and
outs
pop
sbb
pop
ins
xor
cmp
inc
sub
mov
inc
retf
cdq
add
fsub
hlt
push
mov
adc
adc
out
jno
fcomp
xor
pop
xor
lds
ins
shl
test
leave
js
dec
dec
cs
outs
out
mov
jp
xchg
jmp
sub
ss
les
mov
repnz
pop
mov
or
call
push
inc
adc
frstor
popa
lock
inc
idiv
push
sysret
stos
or
je
mov
mov
cmp
wbinvd
ss
lea
or
jo
inc
xchg
in
pop
jae
popf
mov
push
mov
je
or
inc
pop
retf
cdq
pop
imul
pop
dec
jo
or
lock
or
imul
in
daa
cwde
cmp
add
add
or
fwait
test
pusha
add
pop
lock
jg
in
adc
bound
push
inc
fs
scas
pop
jno
or
mov
adc
jno
xchg
jmp
inc
fbstp
sti
(bad)
mov
pop
add
cmp
jno
dec
bound
data16
not
sbb
lds
sahf
(bad)
scas
pop
jno
or
dec
mov
xchg
into
loop
push
xlat
mov
int3
mov
fs
inc
mov
scas
bound
das
jmp
faddp
cmps
hlt
retf
cwd
xlat
mov
push
xor
mov
xor
xor
mov
out
xchg
pop
sbb
rcr
pop
(bad)
jge
test
int3
loop
test
test
rdmsr
jo
das
jecxz
scas
dec
jb
xchg
loope
xor
mov
cdq
div
ja
jbe
mov
fwait
idiv
dec
cmp
in
movs
imul
sbb
xchg
fwait
div
dec
fwait
int
jns
dec
mov
addr16
lahf
jae
iret
test
scas
cmc
fldcw
pop
sub
stos
xchg
mov
xchg
jmp
(bad)
test
call
cld
repnz
and
mov
pusha
mov
ret
mov
cmp
push
cmc
xchg
fdivr
and
mov
shl
jns
lea
mov
add
adc
aas
sub
loopne
(bad)
mov
in
cmps
lahf
mov
pop
cmc
ret
jae
mov
(bad)
mov
fimul
je
ins
lods
jno
ins
(bad)
in
inc
pop
(bad)
repnz
cmps
(bad)
shl
out
mov
jbe
repz
ds
cmp
(bad)
fistp
ins
rep
cld
jmp
fwait
cmp
dec
push
inc
dec
xlat
jge
dec
mov
mov
sbb
in
cdq
dec
scas
into
push
mov
xchg
out
pop
icebp
inc
xchg
pop
ja
lahf
fbstp
or
xor
icebp
sbb
cmp
jp
loopne
sbb
jmp
btc
inc
xor
push
cwde
call
mov
mov
and
retf
pop
mov
cmp
and
push
mov
dec
(bad)
ret
inc
cmp
mov
das
push
sbb
inc
mov
mov
sbb
bound
mov
lea
push
repnz
(bad)
mov
dec
fs
push
push
mov
imul
fwait
test
mov
jl
bound
mov
das
push
retf
mov
sub
fcmovnu
adc
(bad)
jb
and
inc
call
out
inc
sbb
ret
fwait
push
(bad)
sahf
xor
mov
xor
pop
push
retf
inc
xchg
pusha
std
jnp
xor
mov
in
loope
arpl
out
xor
jae
sbb
(bad)
loope
adc
in
xor
inc
iret
sbb
pop
out
dec
sbb
test
mov
mov
sbb
cdq
out
and
xor
xchg
leave
pop
or
mov
cmp
scas
xchg
xchg
jmp
jl
push
mov
inc
pushf
scas
pop
cmp
hlt
add
cmc
jp
push
(bad)
loope
sti
mov
xor
int
test
repnz
ss
cmp
hlt
in
pop
outs
lock
push
outs
aam
(bad)
cmp
scas
fucomi
repz
addr16
test
test
ret
or
push
lock
(bad)
in
aas
pop
int3
sbb
scas
sub
dec
int3
jecxz
(bad)
arpl
aaa
adc
jns
(bad)
cmp
jmp
outs
mov
sbb
hlt
test
ja
jecxz
mov
jle
cmp
mov
jecxz
movs
jne
push
sub
jp
sbb
vpshufd
imul
psubw
xor
add
addr16
jmp
cmp
scas
cld
add
or
ds
out
hlt
inc
cmc
xor
adc
mov
fninit
or
or
or
cmps
xlat
jecxz
aas
jns
xchg
adc
cld
dec
aaa
mov
mov
sub
mov
mov
push
push
es
rcr
icebp
pop
add
icebp
mov
pop
aam
push
or
mov
adc
and
js
sub
in
cmp
pop
(bad)
mov
enter
or
sbb
mov
jne
mov
test
psubw
push
fdivrp
and
xlat
dec
sub
sti
pushf
sar
jmp
hlt
inc
loop
jbe
repnz
(bad)
jns
fst
rol
sbb
cmp
stc
cld
add
ins
jbe
out
stc
sub
push
jb
mov
enter
xor
in
ss
fimul
mov
fsubr
mov
int3
ins
les
ret
into
jo
aaa
(bad)
sbb
cld
push
jg
mov
sar
das
push
scas
lea
adc
lods
mov
mov
jge
(bad)
cmp
or
inc
or
in
sar
popa
ja
ficomp
ja
sahf
outs
movs
cmc
mov
jno
inc
sahf
dec
xor
inc
ret
push
ss
xor
ret
ja
das
jecxz
pop
jo
pop
cwde
mov
hlt
and
idiv
(bad)
add
retf
test
popa
aaa
jp
jecxz
xchg
adc
pop
inc
loope
fmul
and
dec
xor
ss
pop
jno
mov
ja
arpl
fs
cwde
inc
icebp
mov
inc
push
(bad)
add
nop
aas
jg
inc
(bad)
mov
imul
in
ja
add
sub
icebp
mov
mov
cmp
push
cwde
fstp
jb
push
sub
stos
jbe
xchg
xchg
imul
in
ds
repz
dec
bound
pushf
and
pop
dec
jb
in
pop
dec
xchg
jae
fdivr
inc
sbb
ffreep
xchg
(bad)
and
pusha
mov
stos
test
retf
jne
xlat
pop
scas
std
pop
stc
ret
in
lods
stc
scas
rcl
cs
(bad)
push
xchg
cmp
loop
ins
jecxz
outs
jecxz
adc
add
adc
ja
(bad)
and
mov
test
pop
imul
lahf
sahf
dec
adc
gs
mov
jne
or
jg
outs
add
push
int
inc
and
xor
fs
iret
call
jl
loopne
mov
push
in
aam
loope
aas
(bad)
(bad)
call
xchg
xchg
pushf
lods
mov
lds
cmp
cmp
pop
popf
dec
pop
mov
cmp
sbb
fsubr
out
xchg
retf
fimul
mov
pop
push
sub
imul
lds
jmp
pop
retf
jae
lahf
push
es
adc
cmp
(bad)
mov
xchg
popa
jle
outs
outs
stos
cs
js
clc
mov
inc
jecxz
and
xor
pushf
push
dec
aam
fimul
cmps
or
jg
int
mov
mov
lds
sbb
dec
sub
fild
jecxz
inc
sar
fild
dec
and
ins
ror
pop
xlat
imul
repnz
mov
(bad)
sahf
adc
or
daa
lods
jmp
jmp
cli
scas
scas
out
jecxz
aaa
lahf
icebp
xbegin
das
push
test
imul
jb
ja
retf
push
retf
mov
mov
lahf
dec
pop
mov
out
out
loop
inc
add
add
add
add
add
in
fisttp
mov
dec
fcompp
dec
fsubr
inc
gs
adc
mov
pop
ins
inc
mov
ficom
xchg
in
call
jo
adc
sub
repz
sbb
jg
imul
cmc
pop
pop
(bad)
(bad)
sti
mov
mov
jae
mul
out
popa
(bad)
jnp
out
idiv
repz
retf
sahf
pop
pop
adc
test
push
mov
push
iret
adc
or
in
adc
sti
jg
(bad)
call
div
jns
cld
mov
idiv
repnz
lods
dec
sbb
xor
xchg
shr
repnz
jecxz
pop
jne
jmp
jnp
push
ret
aaa
pop
jge
cmps
in
or
push
push
xor
js
std
jmp
sbb
retf
push
sub
sbb
aaa
ins
adc
mov
rcr
sub
xchg
cmp
cmp
aaa
sbb
iret
mov
clc
adc
int3
(bad)
out
jmp
fnstcw
mov
jmp
inc
push
fidivr
lods
idiv
cs
aas
jno
sbb
fdivr
jp
pushf
aaa
sbb
icebp
fbstp
jmp
sub
lock
inc
mov
cmp
iret
xchg
(bad)
iret
into
pop
ins
sar
jns
dec
icebp
jg
mov
ins
jne
loopne
test
pop
imul
pop
int3
mov
aam
xchg
push
and
cmp
rol
pop
push
mov
sbb
sti
mov
mov
push
or
adc
hlt
cmp
and
inc
cld
mov
mov
popf
cmp
xchg
dec
dec
push
mov
fdivr
push
jp
jno
xchg
jg
fnstsw
jns
arpl
pop
dec
mov
leave
repnz
jnp
repnz
jnp
repnz
push
fld
adc
in
jnp
(bad)
pop
scas
(bad)
mov
push
xchg
jecxz
lds
(bad)
hlt
in
push
cmc
jmp
push
cmc
sbb
pop
daa
mul
jmp
(bad)
cli
jne
(bad)
repnz
aas
and
mov
(bad)
aaa
pop
fisub
and
lods
pmulhuw
jmp
retf
pop
inc
xchg
in
aad
sub
pop
sub
jg
ret
leave
arpl
cli
cmp
(bad)
fnstenv
int
jbe
repnz
jg
or
cmps
in
mov
leave
out
and
cmp
js
pop
mov
inc
xchg
in
aad
retf
sti
pushf
(bad)
and
cmc
fcom
out
arpl
out
jmp
aas
div
fdiv
test
mov
stc
or
repnz
mov
mov
mov
ins
mov
fs
ds
mov
icebp
dec
and
icebp
fwait
sub
icebp
dec
daa
(bad)
jg
(bad)
icebp
fwait
sub
(bad)
jg
(bad)
icebp
fst
(bad)
aas
pop
(bad)
clc
push
retf
fstp
xchg
in
xchg
jge
pop
cmps
iret
std
jne
outs
mov
jns
push
mov
inc
repnz
push
fst
sub
cmp
jbe
pop
xchg
out
es
test
sbb
and
mov
jl
cmps
fsubr
scas
ret
iretw
or
aam
test
(bad)
push
fnstsw
fidivr
ja
out
int
mov
fnstsw
neg
(bad)
mov
out
cmp
fsubp
mov
sar
fnstsw
neg
outs
mov
cmp
fimul
mov
test
lods
fnsave
jecxz
pop
lods
jno
xchg
pop
jge
pop
(bad)
std
std
jmp
xchg
add
sbb
jne
leave
and
pop
ja
test
(bad)
frstor
fld
imul
lods
out
ds
inc
jmp
aad
daa
xor
std
cmps
fdivr
out
(bad)
stos
fdivr
out
imul
out
imul
fnstsw
ret
jo
pop
push
jecxz
imul
xchg
rcr
pop
mov
push
mov
push
push
clc
dec
ret
shl
rcl
sub
cld
sti
cdq
das
mov
loop
xlat
out
(bad)
xor
out
call
cmp
mov
sar
jae
dec
shl
push
mov
inc
aad
(bad)
daa
xor
or
sahf
(bad)
mov
push
mov
psubb
je
clc
xchg
div
sub
xor
add
inc
sub
xchg
js
movs
jle
sbb
js
ins
out
jg
pop
into
jle
bound
outs
sbb
inc
fisubr
call
lods
jno
inc
lods
fst
in
pop
sar
stos
jo
imul
cmp
sub
(bad)
test
iret
neg
xor
dec
sbb
popa
jmp
mov
cmp
mov
sbb
cmp
inc
or
lahf
jg
sub
std
cmp
cli
imul
aam
ja
dec
int
stos
test
mov
add
mov
pop
sub
or
stos
mov
jl
add
fld
retf
xchg
shr
fdiv
or
jne
outs
pop
fnstsw
test
loopne
call
stos
mov
push
mul
mov
jge
mov
push
addr16
mov
std
sub
add
fld
retf
aam
pop
add
cmc
ror
adc
mov
cmp
adc
mov
inc
mov
ins
adc
outs
stos
xchg
jmp
ins
add
fld
retf
xor
mov
jb
jmp
jns
fcom
out
aad
sub
adc
fist
lods
fcom
mov
push
shr
outs
pop
cmp
int
pop
add
call
pop
add
cmc
(bad)
retf
xor
ins
add
mov
xchg
sub
adc
fist
lods
fcom
repz
ins
cmc
je
pop
cmp
int
pop
add
cmc
int3
retf
xor
jp
fcom
out
aad
sub
adc
ins
stos
fldcw
mov
sar
add
cs
sahf
pop
mov
pop
add
cmc
cld
retf
je
into
or
stos
pop
push
outs
stos
nop
popf
inc
mov
outs
stos
cmp
mov
sbb
scas
out
gs
and
mov
dec
ret
pop
ja
retf
dec
mov
out
aas
jge
fsub
jns
jle
mov
retf
lods
ret
pop
mov
jl
clc
iret
clc
icebp
mov
fimul
test
jns
repz
aas
sbb
mov
addr16
scas
out
mov
mov
out
int3
mov
mul
cmp
test
inc
xchg
in
push
cmp
in
sub
pop
jmp
pop
lock
jg
lock
out
outs
lods
out
or
lahf
repz
iret
jmp
(bad)
repnz
pushf
xor
inc
xchg
xchg
clc
inc
jge
aaa
xchg
iret
xchg
repz
(bad)
mov
fdiv
sbb
dec
(bad)
(bad)
jg
addr16
loopne
inc
(bad)
cld
loopne
or
stos
fidivr
(bad)
jg
jns
mov
jns
in
fs
mov
retf
jnp
sti
leave
jae
iret
aas
cmps
pop
out
repz
lahf
mov
int3
pcmpeqb
fisubr
aaa
dec
neg
mov
fstp
(bad)
mov
stos
jnp
jmp
sahf
or
pusha
lock
test
mov
or
cmp
xchg
loopne
popa
jnp
lahf
or
xor
pop
fdivr
or
pop
sub
or
sub
movs
cmc
loope
out
jle
jl
ins
jbe
ins
jb
in
xchg
aas
lahf
or
jno
lahf
or
push
dec
iret
test
pop
jle
aas
dec
jle
out
mov
repz
lock
jmp
stc
jmp
(bad)
mov
pop
and
aaa
mov
aas
lods
out
ja
aad
out
out
jmp
fwait
pop
movs
mov
sbb
repz
cld
outs
jle
std
lock
jg
pop
int
jno
aad
fdiv
add
ins
cmc
pop
outs
pop
mov
std
mov
sbb
pop
outs
pop
int
mov
adc
fist
scas
fcom
fabs
or
stos
aaa
push
outs
stos
mov
push
outs
out
aad
sub
add
stc
mov
mov
stos
adc
pop
mov
jne
push
shr
outs
pop
mov
cmc
xchg
push
shr
outs
pop
mov
jne
push
shr
outs
pop
mov
cmc
bound
ins
cmc
pop
outs
pop
mov
xor
pop
jno
aad
mov
inc
fucomi
jmp
xchg
(bad)
mov
mov
mov
repnz
fnstsw
lock
shr
loopne
jne
repz
fs
mov
xchg
aad
mov
neg
xchg
and
imul
inc
mov
xchg
lods
pop
std
out
(bad)
stc
fidivr
mov
jno
push
or
mov
data16
pop
jl
lds
shl
std
sub
add
imul
jbe
out
(bad)
push
mov
fnstsw
cmc
mov
retf
cmps
int
mov
jbe
mov
pop
jo
cmp
leave
or
cmp
(bad)
jle
mov
lods
jae
pop
mov
adc
je
out
cli
out
mov
mov
cmps
cmp
sub
(bad)
fist
cmps
xor
ins
iret
or
std
clc
out
jbe
xchg
jbe
call
xor
inc
fnstenv
and
neg
dec
push
mov
mov
mov
jae
cmc
sar
out
pop
(bad)
loopne
sbb
fbld
lods
fwait
lods
fwait
ins
pop
out
sahf
shl
inc
clc
mov
cmp
jbe
cld
jmp
or
aam
outs
pop
sub
xchg
ret
push
or
mov
xor
xlat
mov
out
fstp
xlat
mov
out
iret
(bad)
fld
ins
repz
ins
(bad)
cs
out
xchg
std
in
in
(bad)
nop
in
(bad)
sbb
std
mov
pcmpgtd
mov
push
(bad)
jecxz
popf
in
mov
jp
jle
cmc
neg
popa
sbb
jns
call
fstp
in
in
(bad)
fsubr
pop
outs
addr16
retf
outs
mov
scas
(bad)
sbb
pop
fs
sbb
ds
mov
mov
sub
jns
sbb
cmp
xchg
or
sub
dec
cld
call
call
(bad)
cmps
fidiv
out
inc
xchg
adc
sub
jecxz
ja
mov
inc
sub
(bad)
lock
enter
mov
inc
adc
pop
push
pushf
jmp
hlt
jne
or
push
jecxz
mov
jmp
push
movs
cdq
ds
aam
pop
cmps
dec
or
rcl
adc
je
inc
sub
stos
dec
dec
or
and
push
jmp
into
je
inc
ins
xor
jg
aam
push
(bad)
xchg
cmp
xor
mov
test
cmps
xchg
fidiv
push
add
popa
popf
ss
mov
inc
pop
cmp
push
shl
cdq
mov
int
aad
sti
and
lods
fimul
dec
xchg
stos
mov
je
cmps
jae
dec
cs
call
jp
mov
lahf
sbb
cdq
(bad)
push
cli
push
mov
cmps
and
mov
ficomp
aam
cli
pop
mov
pop
ficomp
call
lds
les
bound
adc
test
push
add
or
mov
push
mov
movs
cs
rcr
arpl
iret
cmp
les
push
bound
aaa
and
mov
mov
or
mov
mov
or
mov
pop
cmps
ret
sbb
mov
test
mov
jg
push
mov
and
rol
sbb
xchg
fadd
test
push
(bad)
dec
hlt
pop
inc
fwait
gs
mov
xchg
adc
in
sub
js
ret
popf
fdivr
stos
push
(bad)
cld
jmp
inc
ins
stos
inc
ins
jecxz
mov
pop
mov
adc
ds
je
inc
or
cmp
mov
jmp
aam
mov
fstp
gs
call
mov
popf
lds
les
dec
in
enter
out
cs
ss
pop
fst
gs
mov
add
mov
jno
into
aam
push
xor
cmp
ja
adc
sbb
in
fiadd
scas
sub
fst
or
dec
hlt
je
lahf
gs
movs
mov
mov
iret
data16
push
rcr
jbe
push
inc
inc
jmp
shl
xchg
pop
in
mov
in
hlt
lea
mov
mov
retf
shl
adc
sti
leave
popa
push
cmps
cmps
imul
imul
icebp
test
ds
ins
jl
mov
cmp
sar
add
inc
xlat
fs
jg
xchg
in
sub
jbe
call
mov
mov
or
imul
mov
fisubr
imul
out
(bad)
sub
test
sti
mov
xchg
xor
cdq
pop
fmul
test
fldcw
ret
scas
das
setnp
push
push
mov
lods
xlat
stos
shl
cdq
push
sub
dec
pop
adc
or
rcr
fwait
data16
ds
cmp
mov
popf
xor
mov
jmp
aaa
ror
jnp
mov
push
iret
hlt
jnp
imul
mov
inc
imul
jnp
int
mov
nop
dec
push
pop
je
cmps
sbb
mov
cmp
fmulp
je
push
jbe
iret
fsubp
into
inc
ins
ret
jne
repz
mov
into
hlt
push
sbb
push
mov
mov
aaa
cmp
sbb
leave
push
ret
loop
gs
and
cli
out
push
(bad)
stos
mov
push
jmp
dec
mov
and
and
ins
mov
ins
jecxz
lahf
push
popf
cmp
jne
lods
jmp
mov
push
addr16
stos
mov
ror
cmp
fimul
leave
out
pop
lds
aad
fdiv
in
cmp
mov
out
cmps
addr16
cmp
sti
scas
jnp
pop
xor
in
sbb
mov
in
ret
fldln2
fcmovnu
in
pop
fldln2
mov
jbe
js
jnp
jbe
ja
sti
push
jbe
jge
mov
xchg
fst
mov
data16
mov
cdq
fldln2
(bad)
fldcw
jge
fnsave
(bad)
mov
cmp
std
fidivr
pop
gs
mov
(bad)
cs
push
mov
mov
in
mov
dec
mov
(bad)
cs
push
mov
mov
in
mov
dec
mov
(bad)
cs
push
mov
mov
in
mov
dec
mov
(bad)
cs
ss
jmp
jmp
sub
(bad)
mov
jg
jne
test
fstp
xchg
fnstsw
outs
xlat
mov
lods
pop
push
clc
lahf
mov
call
aas
addr16
(bad)
cmp
iret
jp
aad
mov
cmp
das
mov
pop
outs
std
enter
push
fldenv
stos
mov
push
gs
lods
retf
movs
inc
fdivp
jp
shr
imul
fwait
std
std
fsubr
out
out
out
scas
mov
cmp
pop
xchg
std
in
std
movs
cmc
pop
xchg
in
jbe
in
jbe
jbe
sbb
fldenv
addr16
sbb
cwde
loope
int3
clc
das
mov
(bad)
sbb
jge
fdivrp
out
cmps
data16
xor
xor
sti
jg
push
mov
loop
cmp
pop
outs
scas
sti
repnz
retf
mov
in
fwait
pop
pop
push
outs
jg
jb
mov
loop
xchg
pop
fst
outs
psubb
pop
icebp
mov
stos
pop
jecxz
mov
mov
jne
mov
icebp
idiv
scas
push
mov
outs
aaa
(bad)
cli
icebp
js
jmp
dec
vmovlps
cmp
cmc
stos
icebp
mul
inc
or
mov
outs
aaa
pop
lock
mov
cmp
shl
loop
add
xchg
(bad)
(bad)
mov
sbb
pop
fdiv
fisubr
lock
sbb
jo
ret
in
cmp
pop
xchg
lock
xchg
(bad)
fld
push
jbe
loope
jne
mov
push
jbe
popa
test
mov
mov
sub
xor
jle
mov
or
shr
ficom
jg
push
mov
js
retf
aaa
pop
(bad)
(bad)
out
inc
cmp
fldenv
aam
push
popf
(bad)
mov
lods
pop
mov
call
std
call
inc
xchg
dec
cmp
jmp
stos
xchg
dec
or
mov
je
mov
je
retf
mov
mov
mov
out
es
fsubr
scas
pop
lods
ss
jmp
xor
or
lahf
mov
or
lods
and
dec
std
daa
pop
mov
pop
arpl
jmp
aam
retf
out
pop
mov
jge
call
test
call
(bad)
mov
mov
inc
dec
scas
outs
pop
adc
movs
packsswb
dec
retf
bound
rcr
mov
mov
push
cmp
cmp
xor
jecxz
stc
jmp
cmp
and
xor
push
cli
es
lods
xor
push
fwait
inc
mov
enter
ins
sub
rcr
fisttp
xor
frstor
push
inc
inc
lahf
xchg
xor
adc
sbb
(bad)
mov
jmp
sub
(bad)
mov
dec
xchg
fcom
shr
xor
ins
sub
adc
dec
iret
les
jmp
push
pop
adc
cmp
div
jno
inc
imul
xlat
repnz
call
(bad)
mov
rol
xor
push
arpl
or
shr
adc
dec
div
sbb
sub
fsub
dec
jmp
mov
shl
stos
mov
(bad)
cld
mov
test
mov
mov
mov
popa
ja
mov
jmp
imul
popa
dec
imul
popa
outs
mov
jb
scas
fisttp
int3
mov
sahf
aaa
mov
inc
fnstsw
xor
push
push
sti
dec
pop
mov
or
dec
mov
dec
sti
call
sbb
in
sbb
dec
xchg
fadd
dec
xor
xchg
in
test
mov
pop
imul
aam
inc
inc
cmp
inc
dec
cmp
arpl
fwait
arpl
aaa
mov
mov
ins
cmp
or
ds
shr
je
(bad)
push
ret
rcl
aam
dec
je
xor
clc
pop
dec
dec
adc
repnz
pop
ja
sub
mov
cmps
or
pushf
and
sar
stc
(bad)
jg
aam
sar
sbb
popf
mov
stos
cmp
imul
cmp
xchg
shl
inc
int
outs
cwde
push
test
mov
shl
cmps
cmp
dec
dec
mov
iret
pushf
push
cmp
daa
call
cli
mov
jbe
imul
push
aas
jnp
xor
mov
out
jp
(bad)
mov
pop
shl
dec
or
cmps
out
daa
rcl
jl
imul
int
mov
jb
(bad)
fst
adc
lods
repnz
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
repnz
sub
jg
leave
imul
and
mov
xchg
jl
dec
xchg
out
pop
dec
out
sti
pop
test
out
xor
inc
push
outs
fidiv
out
(bad)
dec
call
cmp
jns
xor
mov
mov
ja
jmp
push
cli
xchg
fdiv
dec
in
clc
and
popf
mov
(bad)
in
dec
cld
pop
(bad)
pop
bound
adc
cdq
mov
and
popf
hlt
aas
mov
xchg
fsubr
mov
and
pop
cs
cmp
iret
xor
lods
and
xchg
mov
call
cld
push
fucomp
arpl
iret
cmp
mov
xchg
sbb
call
jecxz
inc
mov
jmp
cld
jl
cmp
add
sbb
cld
inc
mov
cld
and
cmp
adc
cmp
xor
cmp
mov
push
mov
ret
scas
xchg
test
sub
fwait
inc
mov
aam
push
dec
aam
push
jne
mov
fsub
push
mov
loope
dec
or
push
xchg
loope
jmp
nop
test
outs
xchg
test
sub
mov
aaa
dec
aam
call
sti
push
jecxz
aam
call
xchg
fist
jg
xchg
in
das
ja
sti
retf
popf
leave
(bad)
xor
not
pop
mov
fcom
sti
mov
(bad)
xor
xchg
sti
xchg
std
lds
mov
fimul
xchg
sbb
(bad)
bound
das
push
sti
retf
or
repnz
mov
cmp
in
das
push
sti
mov
(bad)
xor
jb
cmp
cmp
cmp
dec
jp
(bad)
push
xchg
mov
xor
xchg
fild
ret
xchg
push
jno
rcr
dec
sbb
(bad)
sahf
xchg
xchg
cwde
jne
mov
and
pop
lea
in
imul
push
or
sub
arpl
fbld
fisubr
(bad)
mov
pushf
test
int3
call
xor
leave
sbb
jp
(bad)
lods
out
arpl
push
sub
push
xchg
lods
push
pop
test
(bad)
in
xor
data16
fdivr
repz
mov
inc
dec
fnsave
cmp
fcomp
das
or
and
fcmovnbe
mov
arpl
dec
lea
ins
push
mov
dec
mov
int3
jp
(bad)
ficom
xchg
push
mov
(bad)
stc
add
(bad)
imul
pop
dec
in
lahf
push
sti
out
adc
out
(bad)
in
icebp
push
ds
fdivr
aas
xchg
fdivr
mov
test
movs
arpl
jbe
loope
jmp
lea
xor
sbb
dec
lods
jp
out
xor
push
jp
les
and
xor
lods
hlt
jo
pop
lahf
(bad)
fsub
jmp
fistp
gs
rcr
pop
arpl
stos
mov
dec
lea
sub
pop
movs
mov
imul
movs
push
xor
adc
aas
stc
frstor
mov
(bad)
adc
xchg
xor
(bad)
loop
pop
sub
dec
scas
(bad)
mov
cmp
lods
and
(bad)
leave
xor
adc
dec
test
std
es
sbb
push
stos
sbb
rcr
arpl
jne
mov
and
mov
jmp
sbb
push
cli
xor
lods
push
cmp
push
movs
data16
outs
cmps
mov
std
pop
cmps
jae
and
jp
(bad)
sbb
(bad)
cwde
mov
out
fidiv
xor
xor
in
pop
arpl
cdq
xor
push
mov
bound
or
push
jmp
movs
cmp
pop
arpl
adc
mov
aaa
lds
xchg
fimul
mov
xor
pushf
jbe
mov
movs
sar
out
jno
mov
sub
sbb
mov
hlt
inc
mov
imul
hlt
lods
int3
imul
pop
xchg
rol
jge
inc
xor
scas
sbb
jge
arpl
stos
in
push
adc
xchg
mov
movs
lods
sub
jb
sahf
mov
cs
mov
mov
mov
mov
mov
ja
or
dec
sub
retf
pop
imul
push
mov
shl
xor
arpl
and
mov
lods
movs
jg
cwde
aad
mov
sub
cmp
mov
imul
xchg
push
(bad)
cwde
mov
outs
mov
popf
mov
fs
mov
sbb
and
sbb
daa
mov
jo
mov
mov
mov
int3
push
mov
jae
mov
fimul
mov
xchg
fs
jmp
(bad)
les
call
mov
mov
pop
dec
mov
ins
pop
scas
adc
mov
xchg
gs
fs
mov
xchg
gs
fs
mov
xchg
gs
retf
mov
mov
cmp
shr
pop
xchg
sbb
inc
mov
aam
sbb
pop
pop
retf
(bad)
shr
jmp
mov
aaa
mov
lahf
inc
cmp
mov
inc
cmp
in
sub
in
and
arpl
aam
push
cmc
fdivr
adc
cwde
inc
cmp
test
and
xor
jp
mov
(bad)
pop
aam
sti
dec
aam
sti
xlat
sub
inc
pop
sub
push
(bad)
or
jle
les
cli
inc
adc
call
pop
and
mov
les
cli
pusha
mov
ret
and
ror
xchg
sbb
and
mov
aam
pop
ds
sbb
sbb
inc
bound
les
mov
mov
stos
pop
and
shr
(bad)
shr
sbb
sbb
dec
bound
ror
mov
mov
xlat
addr16
jo
inc
(bad)
movs
pop
mov
cmp
(bad)
jb
inc
(bad)
movs
inc
(bad)
gs
fimul
in
mov
retf
sbb
xchg
icebp
clc
jb
les
shr
mov
mov
mov
rcr
sub
and
xchg
test
rcr
cmps
jecxz
sub
adc
xor
adc
call
(bad)
xchg
sbb
dec
bound
adc
mov
adc
js
dec
push
adc
mov
dec
les
sahf
mov
adc
js
jns
(bad)
icebp
lods
dec
and
sbb
call
and
icebp
lods
outs
mov
(bad)
mov
and
sbb
sbb
jp
(bad)
icebp
lods
lds
daa
bound
sbb
push
and
icebp
lods
cmp
(bad)
retf
mov
or
xor
(bad)
mov
test
cmc
dec
les
pop
out
mov
bound
mov
adc
mov
(bad)
mov
(bad)
mov
(bad)
mov
and
sbb
mov
adc
mov
(bad)
retf
mov
lods
push
cmp
int
push
sub
dec
sub
xchg
mov
or
mov
and
mov
retf
jge
mov
leave
xchg
adc
and
lods
in
pop
shl
pop
and
mov
dec
scas
xchg
enter
xchg
imul
mov
fimul
xchg
jmp
mov
mov
lods
les
sub
push
fild
ret
and
leave
das
fmulp
leave
das
fisubr
das
fidivr
xchg
pop
mov
fist
pop
cmp
pop
mov
cmp
mov
test
ret
rcr
mov
ss
mov
mov
mov
mov
hlt
inc
mov
daa
std
adc
dec
movs
sti
(bad)
test
push
out
mov
jge
ret
adc
xor
adc
dec
ja
cwde
cmc
pop
mov
aad
jns
pop
push
xchg
rcr
ss
cmp
dec
dec
xor
repz
lock
jno
scas
or
mov
fldcw
scas
xchg
sti
push
in
int
int
sub
xchg
xor
js
and
jns
and
jns
and
jns
sti
dec
int3
adc
les
in
mov
jnp
retf
inc
push
xor
fucomip
clc
dec
mov
repz
repnz
and
das
dec
fs
mov
mov
inc
push
repnz
push
repnz
xchg
mov
sub
(bad)
int
inc
push
bound
xchg
daa
and
mov
daa
and
mov
and
sub
mov
and
sub
mov
and
sub
mov
daa
and
mov
daa
and
mov
daa
and
mov
and
sub
mov
and
sub
push
repz
and
mov
imul
xchg
fcomp
xor
push
and
inc
push
xchg
pop
repz
dec
jb
cmp
push
bound
xchg
xchg
in
jl
mov
fcomp
jnp
inc
fs
jp
mov
mov
repnz
(bad)
and
neg
inc
push
repnz
dec
and
stc
fadd
jmp
sti
les
cwde
xchg
jl
pop
scas
cwde
pop
pop
fs
(bad)
sub
xchg
iret
and
in
test
enter
xchg
das
and
in
inc
les
and
pop
mov
push
pop
cwde
mov
scas
inc
push
mov
and
stc
xchg
inc
push
bound
cdq
cwde
xchg
jl
xchg
xchg
sub
enter
sbb
daa
mov
mov
push
and
stc
lds
mov
sti
int
ss
xchg
dec
fs
jg
fs
jne
sub
pop
dec
xchg
inc
push
bound
and
jmp
push
pop
mov
mov
inc
push
bound
and
mov
movs
mov
push
bound
dec
hlt
sub
dec
fs
stos
dec
fs
sbb
pop
leave
call
dec
xor
and
pop
pop
xor
sbb
mov
test
shr
(bad)
pop
dec
fs
sbb
enter
enter
xchg
xor
xor
aaa
adc
mov
adc
push
sahf
mov
les
call
mov
les
xchg
mov
les
pop
pushf
mov
les
xchg
mov
les
and
leave
mov
or
jns
enter
inc
xlat
mov
mov
dec
jb
cmp
int
and
leave
jge
inc
fs
push
(bad)
cmc
dec
inc
push
xchg
pop
repz
dec
jb
and
pop
dec
out
fst
xchg
xchg
pop
lods
jb
jmp
sub
dec
pop
pop
and
fcmovnbe
(bad)
nop
sbb
xchg
xchg
je
enter
clc
ret
adc
(bad)
adc
addr16
scas
arpl
jmp
fs
(bad)
sub
xchg
dec
and
xor
enter
xchg
outs
adc
inc
push
rcr
mov
enter
enter
cmp
dec
inc
push
bound
and
fstp
sub
inc
and
mov
dec
mov
scas
dec
int3
dec
mov
enter
fs
pop
mov
ror
sub
push
iret
sti
jae
gs
cmp
or
or
inc
pop
mov
popf
and
push
sub
ja
push
(bad)
fsubr
aaa
scas
mov
jmp
xor
mov
les
dec
xchg
jle
bnd
dec
mov
mov
mov
(bad)
popf
not
ja
inc
(bad)
fmul
jmp
cmps
(bad)
adc
dec
push
jecxz
sti
dec
mov
pop
mov
or
iret
(bad)
mov
dec
ret
(bad)
push
push
and
popf
sub
popf
push
jmp
nop
(bad)
or
or
lock
pushf
data16
cmp
mov
pop
sub
push
sbb
icebp
call
ins
cmp
dec
xchg
(bad)
setp
push
xlat
repz
in
inc
and
into
sbb
inc
and
sbb
(bad)
lock
and
stos
and
frstor
and
repnz
jl
mov
inc
mov
imul
pop
in
(bad)
dec
lahf
and
ja
repnz
jl
and
cmp
enter
mov
out
and
dec
in
push
stc
scas
inc
mov
cwde
lds
xchg
enter
enter
xchg
sub
lahf
cmps
jns
(bad)
fdiv
je
jl
or
sbb
dec
scas
fstp
cmp
inc
mov
shl
fistp
mov
repz
jae
repnz
xchg
(bad)
in
pop
scas
rcr
das
xchg
out
sahf
daa
xchg
out
(bad)
push
enter
in
push
stc
out
add
rcl
inc
in
(bad)
fadd
(bad)
rol
push
jns
repnz
stos
jg
repnz
imul
pop
imul
pop
imul
pop
stos
pop
and
pop
imul
pop
imul
imul
pop
imul
pop
stos
jnp
repnz
imul
imul
pop
imul
pop
mov
out
xor
mov
es
mov
daa
and
mov
and
add
mov
and
test
xor
neg
adc
push
stc
scas
aad
adc
outs
outs
int
and
int
mov
mov
imul
and
mov
pop
and
mov
push
and
mov
pop
and
mov
push
and
popf
and
loope
and
mov
mov
push
or
and
mov
ja
xor
neg
or
and
mov
enter
enter
push
jbe
enter
inc
fs
cmc
sub
nop
enter
enter
fcomp
xor
jg
fs
mov
std
enter
fsubr
adc
out
sbb
popf
adc
out
push
mov
mov
ja
pop
jp
xchg
mov
sub
xor
fbld
(bad)
mov
data16
dec
xchg
cwde
cmc
jg
les
iret
nop
cwde
cmc
inc
pop
dec
dec
int3
cli
mov
cmc
call
pop
dec
sti
std
(bad)
int3
(bad)
(bad)
dec
call
mov
pop
icebp
call
dec
int3
cli
mov
cmc
call
pop
dec
cwde
cmc
aas
retf
pop
gs
rcr
lods
jg
pop
dec
sti
adc
mov
lahf
xchg
cwde
cmc
outs
xor
jmp
pop
call
mov
lahf
xchg
cwde
cmc
outs
xor
call
jnp
pop
int3
cli
lahf
sub
(bad)
push
mov
sub
std
mov
imul
xchg
mov
cmc
aas
inc
(bad)
(bad)
mov
and
cli
jg
(bad)
(bad)
mov
and
cli
jg
(bad)
(bad)
mov
and
cli
lahf
sub
jmp
(bad)
(bad)
jmp
jl
push
in
lods
(bad)
jns
mov
pop
xchg
cwde
cmc
outs
xor
dec
xor
dec
fcmovnu
movs
cmp
jmp
mov
pop
jmp
int3
cli
mov
cmc
push
pop
(bad)
out
clc
aaa
cmps
dec
imul
(bad)
mov
and
std
pop
int3
cli
jg
(bad)
(bad)
mov
and
std
pop
int3
cli
call
mov
les
pop
int3
cli
call
(bad)
mov
and
std
pop
int3
cli
call
fld
cli
dec
jmp
adc
lds
adc
call
cmp
imul
jmp
mov
cwde
cmc
dec
pop
(bad)
(bad)
fdiv
cli
pop
and
jmp
pop
ds
out
daa
xor
fbld
push
adc
das
xchg
cwde
cmc
outs
xor
inc
mov
push
mov
jg
cwde
cmc
outs
xor
jmp
pop
frstor
(bad)
(bad)
dec
inc
in
mul
lds
xchg
pop
pop
in
fadd
xchg
cmp
arpl
imul
pop
push
pop
out
pop
jne
dec
mov
aaa
mov
mov
inc
pop
mul
xchg
mov
adc
mov
pop
xlat
inc
and
xchg
enter
mov
and
aam
adc
inc
pop
xlat
dec
and
dec
in
push
jns
adc
mov
in
rol
inc
in
push
jns
push
adc
mov
into
and
pop
dec
and
xor
pop
in
jmp
in
jmp
jns
jne
dec
in
sub
adc
retf
cmc
and
je
aaa
xchg
call
mov
mov
adc
sbb
jnp
mov
imul
mov
nop
call
cmp
lods
jle
call
cmp
cs
je
sub
cmp
pop
jbe
stos
adc
mov
mov
cdq
inc
out
fwait
mov
mov
gs
into
in
adc
or
push
jp
cmp
and
xchg
pop
jmp
je
mov
call
mov
arpl
sti
test
arpl
clc
test
arpl
dec
je
ja
call
pop
div
jno
(bad)
pushf
call
mov
xchg
call
ja
ds
inc
out
mov
fcom
jae
sar
pop
je
ja
call
cmps
jae
mov
jae
sar
clc
imul
mov
in
adc
push
adc
jnp
mov
or
dec
je
pop
clc
enter
jns
(bad)
fdivr
pop
push
cmp
inc
pop
je
pop
dec
je
seto
pop
push
sub
mov
mov
xchg
cs
pop
push
(bad)
mov
mov
imul
mov
mov
movs
xor
imul
xchg
push
jns
cmp
lods
or
adc
mov
jae
jne
inc
out
sbb
adc
cmp
lods
out
mov
pop
pop
and
sar
jae
int
inc
out
mov
cs
into
movs
xor
imul
xchg
mov
je
lods
pop
mov
pop
out
jnp
cmp
into
gs
mov
mov
mov
pop
pop
jge
sar
je
jae
and
popf
retf
fdivr
mov
test
retf
ja
repnz
ds
(bad)
fmul
pop
inc
bound
and
cmp
rcr
sub
xchg
out
push
jmp
jne
sbb
ja
imul
push
int3
pop
sub
jbe
cwde
inc
mov
imul
aam
adc
scas
inc
mov
mov
ja
stc
aaa
and
mov
mov
ins
pop
repnz
rol
inc
in
push
stc
out
leave
jp
repnz
repnz
and
pop
mov
dec
les
mov
mov
out
xor
mov
ja
dec
in
addr16
in
out
in
jecxz
repnz
repnz
adc
out
jns
push
mov
add
inc
mov
mov
enter
xchg
out
pop
sub
(bad)
stc
out
lds
stc
scas
inc
mov
imul
pop
in
xchg
dec
in
push
mov
stc
out
in
stc
scas
inc
mov
imul
dec
repnz
sub
mov
enter
(bad)
jp
repnz
repnz
ins
mov
scas
inc
mov
jnp
inc
mov
int3
ja
aam
xchg
out
pop
in
aaa
dec
in
call
repz
enter
enter
in
mov
and
aam
mov
jge
mov
sbb
adc
out
push
mov
pop
daa
(bad)
fisubr
out
fisubr
mov
mov
jmp
push
stc
scas
inc
mov
imul
sub
sub
stc
out
std
pop
repz
xor
pop
mov
fistp
(bad)
mov
xchg
out
ds
out
into
xchg
enter
xchg
sub
lahf
(bad)
jp
(bad)
fdiv
xor
sbb
xchg
xlat
outs
mov
jge
sti
addr16
inc
mov
loop
sahf
imul
push
int3
pop
lahf
xchg
enter
mov
push
arpl
cmp
jl
add
sbb
jl
and
jge
and
jge
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fidivr
inc
in
(bad)
in
in
(bad)
mov
mov
mov
mov
jl
mov
adc
and
pop
mov
fbstp
int
stc
inc
in
mov
aaa
imul
mov
ja
push
cmp
in
mov
scas
inc
mov
sbb
(bad)
nop
sbb
cs
out
mov
imul
dec
in
outs
stc
js
arpl
or
repz
retf
adc
neg
jbe
cwde
inc
mov
imul
aam
adc
scas
inc
mov
imul
cwde
out
pop
in
pop
dec
in
pop
imul
out
jle
sub
xchg
out
jle
push
and
std
pop
and
std
inc
and
mov
ja
hlt
scas
dec
int3
ja
xchg
enter
enter
pop
mov
scas
inc
mov
sti
lods
sahf
inc
mov
std
xchg
inc
mov
or
mov
les
int3
sbb
push
call
in
imul
mov
push
jecxz
push
das
push
xchg
sub
mov
push
cmp
mov
cld
or
std
mov
pop
mov
(bad)
push
mov
je
ins
clc
inc
jmp
scas
enter
sti
push
cli
cld
loopne
pushf
dec
adc
js
les
xchg
mov
scas
mov
push
shl
mov
cmp
push
push
shr
push
ss
mov
hlt
cli
pushf
push
ds
out
pop
cmp
shr
mov
retf
call
neg
mov
js
pop
pop
jmp
sub
das
sub
cmp
inc
pop
push
call
push
xor
dec
aam
imul
jmp
aam
jmp
aam
jmp
aam
sub
adc
sub
jnp
stos
ss
test
sub
stos
or
mov
retf
sub
mov
(bad)
adc
inc
pop
push
cs
push
pop
aam
ins
and
stos
mov
inc
aam
in
movs
stos
inc
aam
push
jne
jnp
or
inc
mov
gs
push
ins
sub
push
jne
test
mov
stos
stos
fimul
ficom
fimul
scas
jmp
stos
div
pop
jns
mov
push
mov
push
mov
push
mov
sub
pop
aam
fisttp
push
push
jne
push
shl
test
sub
sub
pop
gs
push
in
sub
pop
aam
cmp
push
mov
cli
dec
aam
push
jne
inc
pop
mov
pop
test
push
mov
fimul
scas
jmp
and
mov
fist
inc
pop
mov
test
push
mov
stos
mov
mul
sbb
dec
aam
sti
dec
aam
add
and
sub
mov
and
sub
and
sub
and
sub
aad
adc
xor
xor
mov
adc
aad
adc
xor
xor
xor
mov
adc
aad
adc
xor
xor
xor
inc
pop
xchg
jnp
pop
dec
pop
add
push
push
pop
xchg
adc
pop
repz
in
sub
adc
in
jnp
jmp
xchg
sti
in
mov
mov
mov
push
push
in
inc
and
stos
fdivr
pop
in
int
mov
movs
push
xchg
test
push
dec
push
push
xchg
push
xchg
push
inc
and
test
xor
dec
push
inc
and
mov
movs
stos
and
sub
dec
retf
cmp
xchg
test
and
sub
dec
retf
cmp
xchg
mov
movs
mov
push
ss
js
popa
and
sub
inc
and
xor
test
inc
dec
push
push
mov
and
test
sub
dec
jmp
mov
je
dec
jmp
stc
shl
leave
jp
xchg
mov
rcl
repz
mov
(bad)
mov
jl
mov
shl
dec
int3
xchg
daa
xor
cli
pop
mov
shl
and
xor
fisub
je
les
stc
rcl
and
inc
pop
int3
xchg
fucomip
pop
arpl
repz
ins
xor
jp
xlat
inc
mov
xchg
fwait
les
stc
rcl
dec
int3
xchg
les
stc
rcl
jnp
ins
pop
call
(bad)
xor
cli
push
jg
(bad)
int3
bound
hlt
gs
mov
xor
fisub
hlt
adc
out
pop
jmp
stc
rcl
int3
xchg
lds
fidivr
jnp
out
jl
stos
jge
mov
mov
rcl
dec
int3
xchg
les
stc
rcl
dec
int3
xchg
les
stc
shl
dec
int3
xchg
les
stc
sar
cwde
(bad)
xor
cli
es
popf
sub
ds
aas
and
inc
fild
pop
fisub
hlt
sub
bound
hlt
aas
mov
les
and
xchg
lds
and
xchg
movs
cmp
pop
cli
push
mov
rcl
repz
ins
xor
jp
les
stc
shl
int3
xchg
jg
jbe
int3
mov
rcl
and
inc
pop
int3
xchg
lds
and
xchg
and
out
fbld
xor
cli
jle
stc
shl
cld
(bad)
inc
out
pop
push
cmp
xor
fisttp
adc
mov
xor
int3
xchg
(bad)
cmp
jl
(bad)
and
inc
aas
out
mov
mov
rcl
repz
ins
xor
cli
dec
mov
rcl
repz
ins
xor
cli
imul
sub
aas
jmp
shr
pop
int3
xchg
cmp
cmp
jns
pop
push
sub
mov
shr
dec
ja
test
gs
mov
cld
ror
pushf
jp
sub
xlat
scas
push
pop
lahf
frstor
cmp
cmp
cmp
cmp
cmp
xchg
sbb
pop
xchg
enter
enter
enter
ret
stc
adc
mov
inc
jbe
xchg
sbb
aam
adc
mov
inc
jbe
xchg
sbb
pop
fs
dec
fs
xlat
sub
mov
and
xchg
sbb
cmp
pop
and
cld
inc
and
mov
push
aas
xchg
enter
enter
enter
sti
xchg
sbb
dec
xchg
jns
xchg
and
ret
test
fabs
aaa
adc
loope
adc
inc
adc
jg
hlt
fnstcw
das
shl
sub
inc
iret
(bad)
mov
mov
sti
iret
adc
and
adc
mov
sti
das
fmulp
(bad)
int3
mov
ds
test
call
jg
call
xchg
dec
hlt
fldcw
hlt
fcos
rcl
mov
jge
cli
in
push
jge
push
push
jmp
hlt
(bad)
and
in
push
jge
push
and
in
and
adc
inc
cmc
retf
push
jge
adc
cmps
jp
jge
push
and
hlt
fst
call
(bad)
nop
call
addr16
dec
mov
iret
ficomp
mov
sbb
adc
cmc
cld
out
in
inc
or
mov
mov
iret
outs
shl
pop
mov
inc
lahf
frstor
lahf
frstor
lahf
frstor
lahf
mov
jnp
test
mov
jnp
pop
test
jnp
mov
jnp
mov
mov
inc
lahf
mov
mov
ror
inc
lahf
frstor
iret
fiadd
mov
iret
mov
push
das
mov
shl
shl
shl
pop
mov
iret
mov
dec
mov
sti
push
adc
mov
sti
(bad)
adc
mov
sti
adc
mov
sti
mov
addr16
mov
hlt
fldcw
hlt
fldcw
cli
in
push
jge
in
and
int
addr16
and
mov
hlt
fnstenv
stos
nop
(bad)
not
call
addr16
sub
addr16
imul
iret
pop
loope
inc
mov
out
dec
jg
retf
inc
lahf
jge
out
lahf
je
mov
hlt
fldcw
and
hlt
fincstp
repnz
or
jge
(bad)
adc
jge
sub
fld
dec
hlt
fldcw
hlt
(bad)
nop
cmps
mov
inc
lahf
fstp
mov
mov
mov
jbe
inc
and
in
(bad)
lods
inc
hlt
fldcw
pop
fst
shl
xchg
iret
outs
lea
lahf
fstp
mov
adc
stos
jnp
cli
in
(bad)
mov
lods
dec
mov
mov
jae
shl
call
dec
iret
pushf
push
mov
inc
lahf
fstp
outs
das
call
stos
push
and
in
mov
jnp
int
mov
mov
mov
hlt
fldcw
inc
hlt
fnstenv
adc
fcomp
imul
mov
mov
lods
jb
stos
stos
adc
jmp
and
and
inc
(bad)
in
pusha
mov
jmp
pop
mov
scas
cmp
(bad)
imul
push
jg
bound
push
push
or
pop
aam
inc
dec
aam
push
jne
jo
dec
mov
sub
stos
adc
jne
inc
pop
push
in
sbb
aam
inc
dec
aam
inc
imul
sub
push
push
sbb
cmp
scas
cmp
scas
mov
stos
stos
std
sub
jmp
adc
stos
adc
pop
arpl
push
push
lea
repz
(bad)
dec
aam
daa
dec
aam
cmps
dec
aam
cmps
cli
push
es
inc
cmps
dec
aam
cmps
dec
aam
addr16
aam
addr16
aam
addr16
aam
xor
mov
jmp
pop
jne
inc
pop
gs
push
(bad)
idiv
arpl
jne
jns
jne
inc
pop
push
sub
dec
xor
adc
inc
pop
xor
test
into
xchg
test
sub
stos
or
stos
mov
(bad)
aam
jg
scas
dec
inc
pop
gs
push
pop
test
mov
scas
mov
test
cs
test
cs
test
cs
test
scas
sar
push
push
pop
aam
xchg
cld
sti
adc
stos
stos
mov
pop
mov
dec
lods
stos
scas
xchg
test
scas
xchg
test
scas
xchg
test
scas
xchg
test
outs
nop
test
outs
xchg
test
(bad)
out
outs
pop
mov
and
push
std
ret
sti
pop
lods
stos
outs
div
jne
sub
std
push
mov
outs
xchg
test
sub
stos
(bad)
sub
mov
mov
and
pop
aam
ja
aam
push
jne
popf
adc
push
ins
and
stos
mov
push
push
jne
fnstsw
jmp
aad
ds
cs
push
frstor
push
push
fucomp
xor
jp
jmp
mov
mov
push
inc
pop
cmc
mov
test
push
repz
push
mov
fwait
and
push
push
cmp
and
fbld
push
iret
dec
aam
push
jne
mov
jne
inc
pop
xor
jne
inc
pop
gs
push
cmp
aam
iret
dec
aam
push
jne
or
jne
sbb
jns
stos
pop
and
retf
jp
scas
inc
pop
cmc
mov
stos
(bad)
cli
mov
call
mov
fimul
jne
sbb
xor
fcomp
pop
retf
inc
pop
cmc
xchg
test
jmp
mov
(bad)
cmp
mov
and
jge
push
push
jge
mov
scas
mov
stos
ds
test
mov
scas
mov
mov
mov
push
push
pop
std
adc
pop
adc
push
push
pop
mov
push
push
pop
dec
adc
pop
fst
push
push
pop
inc
adc
pop
jecxz
push
push
pop
rcl
push
push
pop
mov
push
push
pop
fst
push
push
pop
and
push
push
pop
xchg
adc
pop
jae
push
push
pop
aam
mov
xor
xor
xor
outs
das
call
aad
adc
out
mov
mov
inc
aam
mov
retf
mov
stos
lods
mov
adc
outs
dec
and
scas
retf
and
sub
xchg
bound
gs
push
jge
arpl
in
dec
mov
push
push
sub
cli
clc
adc
outs
and
stos
outs
and
pop
(bad)
fdivr
aad
(bad)
in
cmc
xchg
inc
pop
cmc
mov
mov
push
pop
aam
aas
dec
ins
adc
dec
inc
pop
gs
push
std
sub
pop
aam
aas
stc
aaa
and
push
push
jne
iret
adc
adc
jmp
push
push
jne
das
jp
jmp
and
sub
bound
mov
inc
pop
cmc
cmps
test
push
inc
or
pop
scas
lods
scas
push
push
push
lods
and
xchg
dec
aam
or
pop
fmul
jae
inc
push
es
mov
pop
push
pop
arpl
pop
dec
jmp
adc
rcl
xor
(bad)
xchg
cmps
(bad)
fcomp
retf
ret
mov
cmp
xchg
cmp
push
call
lds
xchg
cmps
and
lahf
test
js
dec
ins
xchg
xchg
mov
sbb
jmp
mov
daa
out
gs
movs
mov
stos
inc
dec
ins
mov
lods
movs
fist
lods
cmp
xor
jmp
push
push
sbb
dec
sbb
ss
scas
sbb
dec
(bad)
mov
mov
stos
sub
aam
stos
sub
sar
in
pop
xor
data16
movs
push
xor
outs
mov
gs
sbb
mov
call
lds
dec
push
repz
and
aad
push
mov
adc
push
xor
nop
pop
mov
xchg
test
aaa
xchg
test
jnp
push
repz
dec
push
repz
aad
xchg
adc
mov
inc
xor
sub
adc
mov
inc
xor
jmp
ds
repz
aad
jbe
aad
dec
ins
xor
adc
pop
push
repz
push
test
ja
test
ja
test
sub
aad
pop
jg
bound
fist
inc
xor
sub
push
js
lds
aaa
mov
lahf
not
push
int
and
push
dec
push
repz
push
repz
push
repz
push
repz
clc
cmp
arpl
and
lahf
lds
xor
mov
mov
mov
int
push
repz
mov
add
mov
mov
call
out
stos
stc
and
test
setne
push
repz
push
repz
sti
adc
mov
mov
je
out
lock
aad
inc
xor
pop
test
and
push
int
jecxz
mov
jecxz
stos
stc
jecxz
stos
stc
push
push
add
push
inc
mov
movs
inc
xor
mov
out
dec
push
repz
aad
dec
adc
mov
cli
sub
aad
inc
xor
sub
int
push
repz
dec
push
repz
aad
test
cld
imul
push
repz
aad
inc
xor
bound
pop
jecxz
jle
out
dec
push
repz
push
repz
in
(bad)
retf
inc
xor
xor
fisubr
(bad)
into
shl
dec
dec
push
repz
push
repz
clc
pop
das
push
in
mov
mov
mov
and
or
cld
and
xor
rcl
les
mov
pop
and
jge
mov
stos
or
dec
or
arpl
cmp
mov
gs
test
loope
test
(bad)
call
fisub
inc
mov
mov
repnz
hlt
dec
cmp
call
int
inc
inc
ret
mov
mov
imul
adc
lods
inc
je
lods
and
fst
rcl
and
dec
inc
inc
ret
mov
sbb
cmp
(bad)
mov
lods
dec
mov
dec
pop
jae
rcl
fidivr
mov
inc
inc
ret
mov
call
cmp
mov
inc
outs
int
mov
mov
dec
pop
je
sub
adc
inc
je
jb
adc
inc
inc
and
out
mov
dec
pop
lods
repnz
mov
inc
fsubr
rol
jno
inc
punpckldq
mov
les
adc
adc
hlt
and
jp
test
test
shl
mov
mov
rol
popa
rol
js
pop
fstp
push
cmovp
adc
xor
mov
pop
icebp
mov
mov
psrad
mov
(bad)
mov
aas
jp
push
cmp
adc
jns
and
and
cmp
pop
xor
pop
icebp
pushf
(bad)
stc
push
iret
jnp
jnp
xchg
and
scas
mov
mov
push
push
out
mov
vandnpd
dec
pushf
pop
cmc
mov
stc
push
scas
dec
pushf
pop
cmc
stos
(bad)
stc
push
jae
into
scas
mov
mov
stos
sub
scas
call
push
scas
sti
std
(bad)
int3
loop
stos
aaa
and
scas
mov
mov
sbb
(bad)
stc
push
push
out
mov
vandnpd
pushf
pop
gs
aad
fisubr
fist
out
dec
pushf
pop
gs
aad
(bad)
scas
les
dec
pushf
pop
gs
aad
adc
push
pop
pushf
pop
cmc
mov
out
jge
ja
xor
cmp
dec
and
scas
mov
mov
mov
stos
iret
jl
mov
mov
stos
ds
cmp
das
and
scas
mov
mov
stos
sub
scas
cli
dec
loop
sub
cmp
add
pushf
pop
mov
loop
sub
out
test
cli
push
loop
stos
inc
adc
push
pop
pushf
pop
cmc
das
out
xor
jle
ja
mov
dec
jae
cld
stos
out
and
mov
push
push
out
std
and
xchg
vandnpd
cli
imul
pop
cmc
xchg
(bad)
stc
push
push
out
std
sub
jle
vandnpd
into
scas
mov
mov
push
push
out
std
loop
cdq
popf
sub
cld
stos
jg
pushf
pop
gs
aad
adc
push
pop
pushf
pop
cmc
fwait
(bad)
stc
push
push
out
sub
xchg
adc
push
std
cs
aad
adc
push
std
jmp
inc
push
sub
into
scas
push
jno
aad
adc
push
pop
pushf
pop
push
and
xchg
vandnpd
cmp
push
lea
jno
xchg
vandnpd
into
scas
mov
mov
stos
sub
scas
pop
dec
loop
sub
cmp
push
mov
stos
sub
scas
pop
inc
loop
sub
cmp
mov
cld
stos
data16
push
pop
pushf
pop
aad
loop
sub
call
lods
and
jl
(bad)
jmp
jecxz
pop
lods
fwait
in
add
adc
mov
mov
jmp
push
in
sbb
in
sbb
in
sbb
stos
test
mov
xchg
retf
cmc
cmp
iret
jbe
aad
sti
sub
jecxz
aam
mov
cmp
fmul
pop
ficomp
pop
out
sub
or
enter
in
fwait
dec
in
fwait
dec
in
fwait
dec
in
frstor
popa
mov
inc
cs
xchg
or
xchg
or
ret
mov
and
mov
test
jb
sub
pop
js
mov
jp
jecxz
fisttp
adc
fucomi
push
enter
in
fisttp
ret
lock
adc
js
mov
mov
fadd
pop
ficomp
and
out
sub
or
sub
ret
mov
cmc
repz
pop
adc
sbb
scas
rcr
pop
inc
fcom
cmp
das
mov
mov
not
sub
mov
or
sbb
into
bound
jg
icebp
cmp
xchg
inc
repz
push
xor
bound
bound
add
mov
push
shl
arpl
pusha
jmp
pop
mov
sbb
outs
mov
js
popa
adc
jno
jecxz
xchg
test
bound
and
push
aaa
push
bound
cwde
fimul
mov
and
dec
mov
sbb
es
xor
ja
les
xor
jecxz
(bad)
dec
mov
sbb
mov
les
or
jecxz
daa
jp
cmp
(bad)
sbb
bound
and
icebp
cmp
mov
fmul
adc
jno
jecxz
cmps
dec
std
adc
lds
test
jecxz
cmps
jns
aas
bound
(bad)
popf
xor
ja
mov
jecxz
addr16
xlat
daa
bound
bound
sub
or
jno
and
sbb
inc
bound
pushf
mov
jae
(bad)
jecxz
jmp
sbb
xchg
sbb
js
sar
adc
jno
js
sbb
dec
mov
std
dec
bound
inc
mov
mov
cs
sbb
out
push
pop
pop
arpl
xor
lahf
xchg
push
test
mov
xchg
jle
bnd
xchg
les
lds
push
adc
jno
jecxz
xchg
jge
lea
mov
mov
lods
jle
sbb
inc
bound
bound
pop
mov
cmp
(bad)
jecxz
xlat
bound
push
test
push
jecxz
aaa
jmp
xchg
jecxz
push
jecxz
aaa
dec
mov
fucom
and
mov
mov
loope
mov
jecxz
mov
mov
dec
shl
sbb
out
dec
mov
mov
mov
outs
mov
mov
test
push
aaa
pop
bound
ds
mov
sub
jecxz
dec
mov
pop
mov
cmp
xor
mul
jecxz
(bad)
jecxz
(bad)
jecxz
xchg
sbb
pop
bound
bound
cmps
jg
push
pop
adc
cmp
push
mov
cmp
mov
jae
pop
adc
std
adc
jmp
(bad)
sub
fstp
fnstsw
jmp
inc
mov
neg
lea
test
mov
(bad)
jnp
bound
mov
js
mov
(bad)
adc
mov
or
jecxz
scas
dec
mov
int
mov
push
neg
imul
sub
adc
xchg
sbb
sbb
bound
cmp
and
sbb
js
inc
adc
jno
jecxz
lahf
call
dec
push
inc
pop
call
sub
les
xor
(bad)
rol
pop
in
sbb
cmp
call
and
jecxz
and
mov
sbb
pop
and
jecxz
jmp
push
daa
bound
jmp
and
jecxz
dec
mov
(bad)
mov
and
cmp
bound
imul
pop
jp
xor
adc
jno
in
mov
pop
repz
push
xchg
fisttp
mov
aad
adc
jno
iret
sahf
mov
mov
js
out
mov
bound
bound
bound
jmp
dec
les
outs
dec
and
cmp
imul
mov
(bad)
mov
in
xlat
xchg
push
sub
dec
pop
je
mov
mov
push
dec
je
push
dec
je
mov
mov
lods
inc
inc
bound
das
jmp
(bad)
fdiv
or
cs
rcl
imul
pop
mov
and
je
sub
adc
dec
ins
adc
dec
inc
inc
ret
icebp
xchg
(bad)
cmp
xchg
clc
fnstcw
mov
and
les
rol
inc
je
sub
adc
(bad)
stos
rcl
mov
mov
clc
pop
mov
inc
loop
mov
mov
mov
call
and
aam
jmp
lods
and
xchg
sub
call
dec
xor
call
dec
xor
call
xchg
pop
dec
mov
inc
mov
xchg
dec
mov
mov
sbb
or
sbb
cmp
sbb
mov
adc
xchg
mov
dec
lods
daa
rcl
nop
call
pop
dec
je
pop
imul
cli
cmp
mov
push
jp
cmp
sbb
and
and
adc
sbb
mov
mov
mov
pop
sbb
jnp
mov
mov
gs
sbb
mov
lea
cmp
pop
and
adc
cmp
fwait
dec
je
ss
call
xchg
call
out
cmp
mov
inc
inc
bound
mov
or
sbb
(bad)
adc
ss
mov
xchg
mov
dec
ins
sub
xchg
mov
dec
ins
out
(bad)
nop
mov
rcl
fcomp
mov
mov
dec
pop
je
jp
push
call
xchg
call
call
dec
in
in
outs
shl
bound
mov
mov
inc
bound
outs
mov
retf
mov
dec
je
jbe
push
xor
xchg
test
call
xchg
fmul
and
pop
mov
arpl
mov
add
addr16
popa
aas
outs
div
call
sbb
rcl
xchg
call
push
lock
(bad)
sub
adc
dec
je
lods
jle
call
push
xchg
call
push
xchg
call
push
xchg
call
inc
inc
bound
test
loop
mov
(bad)
ds
or
push
sbb
mov
jl
push
push
sbb
or
hlt
jle
and
cmp
inc
dec
je
mov
repz
xchg
cmp
and
xchg
xor
mov
rcl
pushf
and
xchg
cmp
and
push
mov
and
pop
mov
cmp
and
xchg
sbb
rcl
sub
xchg
mov
mov
inc
ret
jno
inc
inc
ret
jno
jg
push
pop
adc
and
inc
inc
ret
popa
rcl
int3
or
push
mov
mov
inc
bound
scas
inc
inc
bound
xlat
outs
mov
push
call
leave
pushf
pusha
das
dec
aam
adc
adc
std
mov
mov
push
mov
xor
je
cs
call
mov
inc
ret
jno
sahf
inc
inc
bound
jmp
sbb
adc
dec
je
scas
div
and
dec
pop
sub
xchg
mov
mov
sub
and
mov
mov
je
(bad)
test
push
call
adc
cmp
push
jns
cmp
push
inc
lods
or
adc
xchg
mov
and
and
dec
inc
inc
ret
mov
sbb
cmp
(bad)
loop
je
lods
out
mov
dec
pop
and
rcl
and
dec
inc
inc
ret
xchg
jnp
cs
mov
imul
adc
je
lods
pop
mov
dec
in
jnp
cmp
mov
inc
out
mov
mov
mov
dec
pop
jge
rcl
je
jb
and
sbb
mov
test
(bad)
xchg
mov
dec
fsub
jecxz
mov
out
jecxz
mov
call
xchg
mov
sub
push
mov
(bad)
fcomp
dec
mov
xor
fsub
rcl
jmp
aas
out
dec
je
cmps
dec
je
sub
adc
dec
ins
adc
dec
inc
inc
ret
jno
(bad)
cmp
xchg
cwde
loope
mov
mov
rcl
icebp
mov
xchg
je
push
(bad)
stos
rcl
icebp
test
inc
ret
icebp
cwde
inc
inc
loop
mov
les
fiadd
fisttp
mov
mov
iret
dec
je
sahf
xchg
call
dec
cmp
rcl
jl
loop
mov
iret
icebp
ficomp
jge
mov
clc
adc
push
cld
stos
mov
jne
cwde
sub
xchg
push
ins
sahf
mul
cmp
ficom
movs
out
bound
in
test
or
mov
mov
or
ss
(bad)
loop
jnp
pop
jmp
rcr
and
popf
daa
push
in
jb
jge
jne
bound
lea
xchg
out
pusha
in
loope
imul
fisubr
xchg
mov
xchg
outs
dec
hlt
(bad)
enter
pop
fnstcw
cmps
push
imul
sbb
mov
cmc
cmp
dec
call
outs
push
gs
and
sbb
std
push
lea
test
sahf
mov
bound
cmp
inc
clc
into
jnp
call
jnp
jecxz
vcmpss
pop
jmp
jne
mov
cld
call
lock
inc
aaa
in
mov
adc
mov
fnsave
xchg
call
dec
sti
int
fwait
sbb
sub
pop
mov
sti
inc
mov
sti
push
mov
or
xor
je
sub
imul
pop
mov
aaa
int
fwait
(bad)
inc
mov
mov
pop
mov
jnp
mov
xchg
mov
imul
mov
adc
mov
and
je
push
xlat
sti
ror
call
dec
pop
push
iret
mov
aaa
lods
cdq
inc
aaa
lods
mov
mov
cmp
fnsave
dec
je
pop
dec
je
pop
dec
je
pop
dec
je
(bad)
xchg
call
dec
fist
fwait
mov
inc
aaa
lods
dec
mov
imul
xchg
dec
je
sub
imul
mov
imul
dec
mov
cmps
mov
call
fimul
sar
push
sub
mov
inc
aaa
lods
xchg
pop
test
mov
pop
mov
inc
aaa
lods
stos
inc
aaa
ins
adc
push
lods
or
dec
je
ss
ror
call
cmps
ins
out
sub
jns
inc
push
xlat
test
dec
je
mov
call
dec
fist
fwait
mov
inc
aaa
lods
cmps
inc
aaa
ins
jnp
outs
fimul
fmulp
retf
das
outs
div
call
fmul
fwait
ror
sub
cmps
cmc
xchg
call
jbe
call
ror
call
cmps
pop
je
jbe
call
jbe
call
ror
dec
stos
dec
inc
aaa
int
fwait
(bad)
dec
scas
inc
aaa
ins
movq
push
(bad)
xchg
outs
call
ficomp
inc
rsm
or
jnp
or
or
call
je
not
repz
dec
fistp
fwait
ss
sbb
and
imul
xchg
call
dec
cmp
fwait
jbe
inc
aaa
in
push
mov
pusha
mov
inc
aaa
in
xor
in
jo
outs
call
and
mov
push
mov
inc
aaa
ins
cwde
inc
aaa
int
fwait
jbe
jg
push
pop
adc
dec
sbb
ror
call
stos
cld
sub
scas
and
inc
std
jbe
loope
mov
mov
fnsave
test
and
xor
fmul
pop
mov
test
dec
out
lahf
icebp
xchg
push
fnsave
adc
mov
cld
mov
mov
adc
daa
jnp
(bad)
fsubr
adc
mov
and
pop
call
dec
mov
cmps
popf
test
sub
dec
cmp
mov
jae
mov
mov
jecxz
mov
shr
mov
je
into
xchg
call
es
cmps
pop
in
outs
(bad)
dec
adc
test
movs
jmp
(bad)
fsub
ror
xor
scas
xchg
fimul
add
ret
cdq
xor
pop
retf
jns
cwde
cmps
loope
imul
js
in
jo
imul
or
inc
out
das
daa
push
xchg
pop
mov
lods
push
cmps
xchg
test
sbb
jbe
fbld
(bad)
lods
ficomp
mov
mov
(bad)
movs
outs
arpl
push
push
mov
pop
(bad)
cmps
out
push
jl
je
test
bound
pop
ins
(bad)
int3
jp
(bad)
out
nop
mov
push
cmps
aad
cmp
xchg
cmps
mov
inc
cmps
aam
call
dec
test
push
imul
movs
(bad)
lods
inc
je
lods
and
fst
shr
mov
and
push
push
dec
inc
cmps
aam
sahf
mov
mov
adc
cmp
dec
lods
dec
mov
xchg
pop
jae
shr
mov
xchg
out
mov
mov
inc
cmps
aam
xchg
mov
outs
das
call
stos
push
and
movs
mov
imul
sti
in
mov
xchg
pop
je
sub
inc
je
jae
adc
inc
cmps
xor
out
mov
xchg
pop
lods
repnz
pusha
rcr
mov
mov
outs
je
inc
outs
hlt
push
mov
call
jmp
and
mov
addr16
hlt
inc
pop
nop
call
pop
xchg
call
pop
xchg
call
pop
xchg
fisub
popf
mov
test
outs
je
inc
outs
aam
aaa
cli
mov
mov
outs
hlt
mov
xlat
push
js
pop
cwde
mov
test
outs
je
pop
test
call
cmps
and
mov
and
hlt
inc
lahf
xchg
call
rcr
mov
lea
das
rcr
jge
iret
mov
aaa
cli
mov
mov
call
push
mov
jle
dec
pop
mov
pop
mov
aaa
cli
xchg
dec
test
xchg
out
test
or
(bad)
xlat
je
jle
pop
push
xor
in
push
ins
ins
cmp
sar
into
mov
int3
jp
(bad)
fdivp
push
sbb
lods
and
pop
pop
cmp
add
cmp
inc
mov
inc
pop
pop
cmp
and
push
adc
(bad)
and
les
jb
adc
clc
pop
loop
adc
push
mov
inc
loop
adc
push
mov
push
loop
adc
push
mov
retf
arpl
push
mov
pop
loop
adc
push
mov
xor
mov
jno
or
jno
or
jno
or
push
fnstcw
icebp
das
mov
inc
pop
pop
cmp
cmp
sbb
loop
adc
dec
pop
cmp
loop
adc
call
retf
push
mov
shr
push
arpl
push
mov
dec
loop
adc
push
mov
pop
loop
adc
push
mov
std
mov
imul
xchg
xor
in
pop
and
sbb
jno
mov
pop
cmp
loop
adc
loop
adc
imul
xchg
and
sbb
mov
scas
sbb
xchg
xchg
and
sbb
cmps
aas
fisttp
cmp
mov
mov
pop
cmp
push
push
mov
xchg
mov
and
dec
pop
cmp
loop
adc
loop
adc
mov
sub
pop
cmp
sub
sbb
pop
loop
adc
push
mov
jno
or
mov
and
mov
and
mov
and
mov
and
scas
sbb
jno
mov
jno
mov
jno
mov
dec
loop
adc
and
les
imul
pop
cmp
mov
inc
mov
push
adc
push
mov
jno
or
mov
and
xchg
mov
push
mov
push
loop
adc
push
mov
dec
loop
adc
push
mov
xchg
mov
and
pop
cmp
loop
adc
adc
mov
jb
sbb
cmp
jge
fs
mov
push
mov
sbb
mov
jb
pop
mov
inc
pop
pop
cmp
sub
sbb
leave
imul
dec
pop
cmp
mov
inc
pop
pop
cmp
xchg
sar
mov
inc
jp
mov
mov
push
movs
(bad)
out
push
stos
sti
cmp
adc
sbb
movs
shl
mov
mov
(bad)
lods
iret
arpl
cmp
scas
ss
ja
pop
gs
mov
xlat
stos
movs
stc
mov
iret
ins
sbb
mov
cmps
outs
iret
lods
or
jmp
movs
(bad)
jecxz
sub
pop
(bad)
fsubr
call
leave
cmps
fst
(bad)
push
sub
(bad)
pop
hlt
stc
jbe
xchg
mov
shl
jmp
cmp
pop
mov
iret
mov
inc
lahf
outs
push
mov
pop
test
adc
out
jp
cmp
cmp
jle
ficom
std
sahf
jge
cli
cmp
adc
push
mov
mov
inc
mov
(bad)
mov
pop
mov
jnp
xchg
call
push
dec
hlt
jnp
stc
call
mov
out
cmp
fbld
out
cmp
lock
jecxz
ret
ror
inc
jl
sbb
dec
icebp
pusha
jmp
push
xchg
cmp
mov
or
sbb
push
mov
mov
jmp
cli
jecxz
stc
inc
push
push
sti
ficomp
xchg
leave
imul
push
fstp
aad
xor
xchg
test
(bad)
xchg
test
(bad)
xchg
test
(bad)
xchg
test
(bad)
xchg
test
stos
and
jmp
adc
hlt
sub
push
sub
shl
dec
aam
push
cmc
hlt
sbb
test
sub
jmp
jp
mov
sahf
lods
pop
fstp
movs
test
jmp
shl
aam
xor
cmp
ds
mov
sahf
push
cmps
mul
(bad)
dec
aam
out
jns
shl
mov
jl
jp
add
cmp
sar
push
(bad)
jp
inc
mov
mov
pop
sub
pop
es
call
push
dec
int3
xor
mov
cwde
imul
mov
scas
xchg
cwde
imul
or
inc
xlat
dec
int3
xor
xchg
lds
and
sbb
xor
xchg
lds
dec
add
lea
pop
and
pop
lahf
pop
xchg
adc
(bad)
and
xlat
enter
int
jae
outs
rcl
scas
sar
movs
fist
xor
enter
lods
jp
out
(bad)
xor
push
scas
iret
mov
xor
rcl
inc
ja
std
cwde
imul
call
inc
das
sub
je
and
jae
out
xchg
cwde
imul
jp
inc
js
(bad)
mov
mov
xor
popa
adc
mov
cmp
xor
push
movs
xchg
xor
movs
les
mov
xor
mov
and
xor
mov
pop
and
mov
int3
xor
call
sbb
mov
pop
shr
outs
jmp
mov
pop
imul
fimul
mov
xor
scas
xchg
lds
(bad)
scas
push
int
scas
jnp
push
sub
outs
push
inc
js
jnp
push
dec
cwde
das
xor
call
outs
dec
int3
xor
sar
xchg
cwde
imul
les
and
sbb
cmp
xchg
hlt
call
out
push
into
call
(bad)
aas
jae
xchg
xor
retf
xchg
movs
inc
pop
dec
jno
mov
adc
push
sti
mov
push
shl
lods
xchg
retf
sub
or
ins
and
inc
xchg
lods
pop
mov
cdq
clc
(bad)
(bad)
cld
cmc
jnp
pop
pop
addr16
ja
div
jle
lea
xchg
enter
xchg
xor
fs
xor
mov
sbb
imul
inc
sub
sbb
push
pop
mov
push
pop
mov
das
dec
mov
out
jne
enter
mov
fs
xor
(bad)
call
iret
adc
mov
pop
std
or
jge
jmp
jmp
xor
and
lods
arpl
mov
repz
mov
sub
and
inc
xchg
adc
lods
adc
jg
sbb
enter
jne
xchg
fs
add
xchg
enter
lea
enter
lea
enter
lea
enter
and
in
sub
xor
xchg
enter
lea
enter
scas
ins
pop
mov
enter
lea
mov
xor
in
and
in
sub
imul
call
push
mov
std
and
inc
sti
dec
lea
lock
dec
(bad)
push
lea
xchg
enter
xchg
xor
je
inc
(bad)
test
and
test
(bad)
test
and
xchg
xor
mov
sbb
enter
(bad)
inc
and
xchg
xor
xchg
enter
(bad)
jmp
xchg
lea
call
inc
(bad)
enter
xchg
sahf
test
cmc
and
inc
sbb
jno
loop
mov
(bad)
dec
fadd
jbe
xor
mov
cmp
xchg
mov
cmc
pop
mov
iret
in
mov
sbb
sub
imul
fs
adc
or
arpl
lods
shr
call
jb
push
inc
(bad)
call
cdq
adc
mov
mov
addr16
cli
xchg
lods
gs
mov
sub
dec
fs
into
aad
and
xchg
enter
lea
jno
mov
push
loop
int
(bad)
jbe
int
(bad)
adc
mov
cli
cdq
lods
mov
enter
enter
xchg
xor
aam
and
mov
not
pop
and
pop
std
imul
lea
sti
jl
lahf
or
in
call
mov
test
mov
(bad)
or
call
and
jp
fdivr
mov
mov
xlat
dec
fdivr
push
loop
shl
fisub
push
neg
fs
test
inc
mov
sbb
and
and
xchg
inc
and
pop
sbb
adc
imul
inc
(bad)
cmps
dec
lea
popf
and
xchg
xor
imul
(bad)
enter
lods
xchg
aad
adc
imul
(bad)
xchg
dec
lea
inc
test
movs
ss
enter
and
and
cmp
jmp
mov
lods
push
jmp
outs
pop
and
xchg
xor
imul
jge
xchg
enter
cmp
inc
dec
(bad)
mov
ja
sub
mov
jecxz
mov
and
jno
mov
scas
das
xchg
mov
movs
std
jl
dec
(bad)
cli
dec
fsubr
mov
dec
ret
sub
xchg
adc
outs
xchg
mov
hlt
mov
movs
push
ja
outs
xchg
push
push
mov
movs
push
ja
out
lock
pop
jno
and
jno
aam
dec
imul
pop
out
xchg
fisub
push
mov
movs
ja
pop
mov
popf
sar
out
xchg
pop
fsubr
mov
cdq
les
dec
pop
stc
sbb
xor
xchg
dec
fsubr
sbb
je
les
dec
xchg
sub
or
psubb
push
sbb
mov
push
xchg
int3
sub
les
mov
xor
dec
sub
xchg
scas
sub
xchg
loope
lahf
addr16
fidivr
mov
daa
imul
pop
daa
imul
movs
add
ret
jecxz
add
test
mov
sub
sbb
ror
add
ret
daa
leave
call
sbb
test
lahf
mov
aaa
sub
inc
cli
jnp
movs
push
retf
ret
leave
loopne
xchg
cmp
push
adc
sbb
mov
retf
xchg
xchg
push
into
cmps
hlt
retf
loopne
loope
cmp
loope
jmp
dec
retf
dec
test
mov
mov
and
mov
movs
mov
lds
pop
out
scas
repnz
sub
dec
setns
sahf
not
sbb
lock
iret
nop
and
lock
cdq
xchg
movs
aas
xchg
in
outs
(bad)
cli
cdq
push
jl
xchg
retf
ja
push
sub
jp
push
adc
mov
add
sbb
add
xor
pop
and
add
dec
mov
aaa
mov
ss
cwde
add
lahf
jl
mov
lock
lods
pop
dec
add
xchg
cwde
add
add
lods
and
bound
lock
push
bound
lock
lock
mov
adc
cwde
add
add
pop
cwde
add
add
fist
add
adc
adc
iret
hlt
jp
add
add
dec
add
pop
mov
bound
lock
iret
nop
ds
lock
add
sbb
lods
cmp
ja
push
jbe
xchg
and
add
dec
dec
add
cwde
add
and
add
pop
bound
lock
adc
or
outs
adc
add
adc
mov
rcr
adc
mov
rcr
cwde
add
add
dec
dec
add
add
sahf
adc
cmp
clc
xor
fsub
ins
(bad)
les
bound
lock
sahf
test
rcl
outs
gs
mov
add
loopne
mov
inc
fsubr
cwde
add
dec
add
(bad)
add
inc
bound
mov
push
mov
into
adc
sub
adc
push
and
dec
add
cwde
add
xor
sub
xor
fcom
add
outs
mov
inc
xor
mov
add
pusha
pop
mov
add
pusha
pop
mov
add
pusha
aas
test
cwde
add
add
xchg
cwde
add
add
nop
cwde
add
add
dec
add
aam
arpl
jo
xor
adc
add
push
es
adc
add
add
adc
dec
mov
shl
sbb
add
adc
ret
jge
cmp
sbb
xor
cmp
addr16
(bad)
jl
dec
bound
push
push
bound
push
dec
bound
jo
les
sbb
adc
push
adc
and
sahf
xchg
fs
inc
pop
not
pop
push
sbb
cwde
add
add
dec
dec
add
add
dec
dec
add
add
dec
dec
add
dec
add
cwde
add
add
cwde
add
add
dec
dec
add
cmp
push
mov
add
mov
shr
ds
or
and
add
adc
xor
add
xchg
push
jmp
add
add
sub
dec
dec
add
cmc
sti
dec
(bad)
jb
adc
lods
and
add
dec
dec
add
nop
cwde
add
add
pop
bound
pusha
xor
mov
xor
mov
xor
push
add
bound
pusha
xor
push
cwde
add
add
xor
push
shl
adc
mov
add
mov
gs
inc
mov
rcl
sub
add
xchg
adc
sub
cli
ror
mov
call
das
sub
add
dec
add
jl
(bad)
out
mov
popf
aas
shl
or
mov
inc
das
mov
and
sbb
cmp
add
es
cld
fwait
shl
pop
cli
dec
dec
add
cmc
and
add
les
mov
shr
adc
add
sub
add
jecxz
add
mov
outs
fsubr
xor
mov
out
addr16
push
bound
xor
add
pop
bound
push
xor
sbb
xor
sbb
cwde
les
bound
jo
iret
lods
(bad)
xor
add
test
(bad)
jbe
das
push
arpl
add
adc
mov
sar
inc
mov
xor
js
push
mov
lock
les
bound
lock
add
bound
lock
add
mov
scas
ss
call
shl
test
push
arpl
stc
lock
mov
sub
es
lods
dec
(bad)
sahf
xchg
ds
(bad)
cmps
clc
jmp
or
xchg
jmp
or
sbb
call
jp
xchg
ret
imul
ficomp
jns
cmp
(bad)
pop
cwde
and
cwde
in
sub
ins
dec
(bad)
sahf
cmc
stc
xor
xchg
rcl
imul
dec
jmp
imul
mov
jae
pop
jb
dec
dec
(bad)
out
pop
call
xchg
mov
int3
test
movs
sahf
and
pop
mov
dec
(bad)
pop
xchg
push
sbb
stc
lock
scas
or
push
addr16
div
inc
jp
push
cs
mov
push
scas
cli
popf
lea
pusha
aad
mov
jb
cs
cmp
push
and
in
or
ins
dec
(bad)
fdivp
sbb
es
push
(bad)
xor
popa
xchg
je
mov
cmp
xor
shr
imul
push
(bad)
out
dec
scas
lods
xchg
dec
dec
scas
lods
or
xor
jp
sub
ficom
jmp
shr
stos
push
and
push
push
imul
dec
scas
lods
lea
and
mov
jp
lea
adc
sub
jmp
shr
imul
(bad)
retf
scas
push
addr16
mov
dec
and
mov
xor
cwde
pop
movs
(bad)
in
xchg
cwde
pop
pop
dec
scas
sub
push
push
repz
dec
scas
push
lahf
jl
cmps
push
test
stos
aam
inc
bound
aad
imul
bound
mov
mov
push
les
cdq
les
sbb
adc
stos
adc
and
push
push
rep
xchg
adc
sub
repz
int
int
xor
sub
scas
mov
push
lods
xchg
cwde
push
pop
int3
stos
ds
cwde
push
lods
fisubr
rol
out
pop
jmp
cwde
push
jge
xor
xor
cli
dec
bound
mov
mov
jns
jp
jns
push
jp
rep
scas
and
int3
stos
mov
daa
xor
addr16
int3
push
mov
aas
call
test
out
mov
xchg
cwde
push
ins
xchg
cwde
push
std
ror
fstp
xchg
mov
cmp
mov
popf
outs
ror
sub
dec
dec
popf
(bad)
mov
cmp
inc
cmp
pop
mov
inc
cmp
ror
sub
dec
mov
cmps
(bad)
jmp
dec
(bad)
sub
jmp
sub
jge
leave
call
outs
ror
dec
mov
sub
in
je
jbe
push
adc
je
jbe
mov
in
je
jbe
dec
adc
je
jbe
into
adc
je
jbe
adc
cmp
mov
inc
cmp
mov
cmps
out
sub
dec
mov
cmps
out
ror
push
dec
mov
cmps
pop
dec
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
fucompp
push
in
hlt
jmp
ds
je
jbe
mov
dec
mov
jle
in
hlt
std
and
hlt
add
imul
hlt
sbb
mov
mov
popf
jle
inc
cmp
mov
cmp
mov
cmp
mov
cmp
mov
dec
mov
cmps
pop
sub
dec
mov
cmps
xchg
dec
mov
sub
fucompp
push
in
hlt
ret
and
jmp
adc
je
jbe
ins
mov
inc
cmp
mov
fistp
pop
and
dec
aas
push
mov
cmp
sahf
mov
fucompp
(bad)
dec
mov
(bad)
cmc
sbb
jmp
mov
sub
in
cmp
fwait
adc
hlt
jecxz
fucompp
or
dec
mov
sub
mov
sub
fucompp
push
in
hlt
adc
hlt
xchg
and
jmp
jge
dec
(bad)
sub
jmp
bound
inc
cmp
mov
pop
mov
sub
cli
jb
push
dec
mov
fwait
dec
mov
sub
xchg
out
pushf
dec
mov
jmp
jbe
xor
mov
mov
cmp
mov
pop
(bad)
cmp
mov
add
cmp
push
addr16
movs
jmp
adc
xchg
rcr
adc
sub
icebp
mov
iret
xor
stc
pop
call
bound
and
push
scas
fs
jl
sbb
movs
les
cwde
mov
bound
mov
jbe
jno
ror
jg
mov
daa
push
mov
rol
adc
adc
dec
je
(bad)
inc
adc
bound
mov
int
push
push
lods
dec
rcr
inc
jmp
lods
mov
test
push
imul
(bad)
xchg
(bad)
in
cmp
in
(bad)
mov
jb
fst
xchg
mov
ror
leave
pop
inc
jg
(bad)
aad
pop
and
idiv
stos
sub
dec
cmp
or
mov
jmp
imul
(bad)
mov
push
je
in
jmp
xlat
retf
adc
cmc
jnp
dec
les
mov
cli
xlat
dec
(bad)
mov
jne
div
scas
fild
xchg
mov
mov
aam
fsub
jg
xor
div
dec
(bad)
in
daa
jno
xlat
loop
outs
jg
sti
mov
mov
jns
jae
push
mov
mov
xchg
mov
div
jg
outs
imul
cmp
lods
dec
push
ja
scas
xchg
leave
call
pop
mov
mov
fisub
mov
movs
inc
push
sbb
xchg
mov
lock
inc
(bad)
into
test
and
add
mov
push
mov
jle
arpl
jno
jo
mov
cmp
call
mov
cmc
mov
mov
adc
xchg
xchg
sbb
jno
bound
and
mov
sbb
and
dec
fcom
ret
les
mov
adc
ja
(bad)
dec
fcom
dec
stos
sbb
pop
fcom
test
sbb
dec
pop
fcom
les
(bad)
ficom
mov
adc
ja
es
test
sbb
dec
pop
fcom
les
adc
es
fcom
mov
ja
cmps
jmp
and
dec
loop
les
adc
and
dec
cmp
ja
mov
out
mov
xor
jp
xchg
js
imul
js
loop
les
cmp
jae
out
dec
cmp
xchg
mov
jge
out
mov
add
aas
jmp
in
inc
jg
leave
fimul
or
xchg
and
popf
or
or
push
and
and
sub
and
sub
adc
out
inc
sub
inc
sti
cmps
inc
adc
inc
mov
xchg
mov
sti
mov
sbb
fcmovb
shr
dec
and
sub
sub
push
xchg
dec
and
sub
and
fist
dec
sar
imul
sti
or
xchg
or
leave
xchg
and
lea
pop
aas
repz
rcl
inc
cdq
mov
mov
imul
xchg
dec
sar
xchg
mov
sti
movs
inc
xor
xchg
leave
ficom
or
scas
and
and
mov
pop
mov
ss
xchg
mov
std
rcr
sar
call
dec
sar
and
mov
sub
mov
adc
pop
mov
nop
dec
mov
mov
outs
cmp
and
jg
cmps
inc
and
xchg
mov
xor
xor
push
outs
sbb
and
mov
dec
and
mov
and
call
jmp
mov
xchg
dec
sar
jmp
(bad)
cmps
mov
aas
mov
daa
pop
or
mov
mov
pop
mov
popf
and
mov
dec
and
stos
dec
and
ja
dec
rcl
dec
shr
sub
inc
mov
dec
and
xchg
mov
imul
imul
mov
adc
pop
mov
mov
inc
xor
in
ficom
sbb
jbe
cmp
and
mov
and
mov
or
add
and
setbe
push
mov
xchg
mov
pop
loop
(bad)
mov
xor
lahf
and
repz
mov
xor
mov
and
and
jmp
and
jmp
or
xchg
cmova
push
push
sub
mov
nop
dec
rcr
push
pop
and
sbb
and
mov
and
mov
inc
jnp
iret
stc
mul
sub
mov
add
dec
sar
dec
and
sub
pop
dec
shl
xchg
dec
shl
xchg
dec
rcr
push
ss
aaa
mov
imul
jo
pop
pop
inc
xor
pop
mov
xchg
add
iret
repnz
xor
into
xchg
dec
shl
adc
and
and
iret
xchg
dec
shl
jl
dec
(bad)
into
xchg
dec
shl
or
in
add
jo
inc
adc
inc
jnp
inc
adc
inc
fcmovnu
xlat
frstor
inc
jnp
inc
adc
sbb
not
mov
inc
adc
inc
fist
inc
jnp
mov
or
retf
movs
out
xchg
dec
rcr
push
shl
pop
call
dec
shl
dec
rcr
sub
mov
loop
dec
scas
inc
adc
inc
fild
inc
jnp
push
inc
xor
inc
xor
inc
and
mov
xor
mov
jmp
adc
dec
and
jnp
and
sub
adc
adc
cmc
xchg
dec
rcr
push
dec
and
sub
adc
int
cmp
dec
xor
inc
imul
mov
loope
mov
ins
mov
stos
pop
sub
outs
xchg
mov
popf
mov
std
jmp
les
and
ja
ror
out
(bad)
jnp
dec
pop
test
mov
rcr
and
inc
jnp
jg
jmp
ins
mov
nop
inc
xor
xor
adc
std
xchg
jno
push
pop
lock
dec
(bad)
jl
sub
dec
mov
pop
and
inc
and
push
and
dec
and
mov
xchg
mov
or
inc
hlt
cmp
dec
dec
xchg
mov
sbb
mov
daa
jl
dec
(bad)
es
and
daa
dec
and
lahf
xchg
dec
ror
dec
ror
dec
rcl
jge
mov
mov
ror
lock
aad
inc
data16
inc
xor
lahf
das
std
jae
xchg
mov
ins
mov
lods
push
ja
lahf
xchg
mov
jne
pop
and
mov
mov
jmp
adc
sub
mov
cmc
jns
cmp
out
stos
dec
mov
jno
cmc
inc
mov
lods
push
ja
pop
xchg
dec
sar
adc
lahf
jne
mov
push
mov
mov
and
jne
sahf
or
fcomip
das
ret
popa
xchg
inc
adc
inc
sti
mov
inc
xor
xor
xor
xor
pop
sbb
mov
push
and
inc
and
xchg
mov
imul
mov
sar
pop
gs
mov
clc
pop
inc
out
xchg
or
push
adc
pop
mov
mov
sub
mov
stc
pop
loop
stc
pop
mov
lea
pusha
jno
cld
push
mov
sahf
jg
jno
fsub
out
stc
out
ja
sub
xor
cs
jno
fsub
out
stc
jp
and
lods
sbb
and
and
xchg
inc
and
pop
sbb
adc
pop
imul
mov
cmps
dec
and
lods
cli
xchg
dec
rcr
and
xchg
mov
inc
imul
adc
adc
adc
pop
imul
(bad)
xchg
dec
and
sub
scas
fstp
movs
ss
dec
rcr
and
and
cmp
jmp
mov
add
jmp
outs
pop
and
xchg
mov
inc
fwait
cli
in
xchg
mov
dec
shl
pop
stos
inc
dec
call
hlt
retf
cmc
xchg
(bad)
hlt
jmp
shr
fisttp
scas
mov
nop
cwde
pop
std
and
mov
cmc
xchg
(bad)
hlt
retf
cmc
mov
hlt
retf
cmc
mov
hlt
retf
cmc
stos
push
xor
dec
dec
scas
sub
push
sbb
cs
cmps
(bad)
hlt
jmp
jmp
push
dec
scas
(bad)
xchg
ss
bound
xor
popa
inc
loope
mov
aad
adc
sub
jmp
stos
dec
mov
aad
lahf
xor
aas
mov
push
fsub
jecxz
pop
adc
adc
stos
inc
mov
aad
adc
stos
sbb
dec
dec
scas
jbe
scas
ins
shr
mov
(bad)
hlt
push
mov
aad
adc
stos
and
cmp
jmp
cmps
ret
ss
shr
es
push
pop
pop
jp
push
ss
and
xchg
mov
or
out
(bad)
push
(bad)
leave
fnstenv
aas
mov
je
mov
mov
nop
xor
pop
cmp
xchg
lods
sbb
sbb
mov
jnp
sub
sub
jmp
lods
inc
mov
imul
mov
xchg
ins
dec
(bad)
dec
sub
xchg
dec
leave
cmps
je
mov
dec
jp
dec
jns
jae
mov
mov
(bad)
cmps
mov
fwait
push
xor
call
dec
lods
push
mov
mov
dec
inc
dec
mov
sub
mov
fisttp
or
aad
jb
sbb
push
scas
xlat
stos
bound
jge
out
push
shl
adc
bound
mov
fnstenv
iret
nop
imul
mov
cdq
inc
sar
xchg
jp
stos
lahf
cmp
(bad)
push
jp
jns
call
int
cmps
dec
jg
imul
in
imul
cmp
mov
dec
bound
pop
cmp
mov
cmps
les
mov
out
fst
mov
lods
les
pop
jge
ss
cwde
in
sahf
and
fstp
xor
int
int3
jbe
mov
pop
cmp
lods
cld
in
(bad)
push
push
mov
scas
lds
jg
xor
xor
mov
xor
mov
xchg
iret
nop
rcl
imul
fisttp
fisttp
jbe
dec
int3
jbe
mov
jl
scas
or
stc
mov
push
xchg
jmp
cwde
in
pop
int3
jbe
dec
int3
jbe
cli
mov
fbstp
iret
nop
and
ror
mov
pop
bound
jnp
(bad)
rcl
inc
cdq
scas
jp
mov
(bad)
ins
imul
xchg
xchg
fstp
popf
les
mov
outs
dec
mov
outs
das
mov
outs
outs
mov
out
or
ret
lea
fwait
and
mov
jge
leave
imul
dec
mov
outs
aas
jg
leave
call
xlat
bound
rol
mov
int3
jbe
mov
jmp
outs
xchg
cwde
in
fisubr
push
imul
fnstsw
cmc
sub
jbe
dec
int3
jbe
xchg
cwde
in
pop
int3
jbe
xchg
cwde
in
xchg
dec
int3
jbe
xchg
cwde
in
fisubr
xor
sub
hlt
adc
push
pop
xor
mov
fsub
lahf
jl
imul
inc
lahf
sub
mov
ret
xor
cmp
ret
jo
fldz
std
adc
fld
and
mov
mov
(bad)
not
pop
sbb
xor
sbb
xor
repz
pop
xchg
mov
call
push
bound
xlat
bound
imul
fld
mov
(bad)
(bad)
outs
jbe
dec
mov
out
add
fldz
inc
sbb
dec
pop
and
(bad)
addr16
mov
test
dec
bound
sub
fstp
bound
cmp
(bad)
ins
xlat
bound
out
repz
je
mov
xchg
add
iret
xchg
xchg
dec
data16
les
mov
out
sub
fldz
ins
mov
out
mov
mov
cmp
mov
mov
jl
mov
xchg
mov
out
mov
xor
popf
das
xor
mov
in
mov
cwde
in
mov
inc
sub
fstp
push
test
push
mov
push
and
mov
ds
xchg
cmps
les
mov
out
imul
int3
jbe
xchg
mov
imul
pop
test
popa
mov
cmps
les
les
mov
xchg
les
jg
cmp
ret
jnp
adc
and
push
mov
adc
sbb
cwde
in
mov
lods
nop
cwde
in
mov
sub
fstp
bound
test
pop
xchg
mov
and
mov
fs
sbb
not
pop
push
sbb
dec
int3
jbe
mov
int3
jbe
mov
mov
jbe
dec
int3
jbe
xchg
xchg
cwde
in
pop
int3
jbe
xchg
cwde
in
pop
int3
jbe
xchg
cwde
in
pop
int3
jbe
nop
cwde
in
jle
arpl
ins
ja
aam
adc
push
jp
mov
sti
shl
(bad)
xor
std
ficom
mov
mov
lahf
inc
fnclex
lock
scas
lds
mov
out
iret
jp
mov
pop
and
mov
aaa
cli
jge
imul
cwde
in
(bad)
and
(bad)
push
bound
mov
xchg
les
mov
scas
lds
les
mov
pop
ins
xlat
bound
les
mov
xor
(bad)
xor
mov
in
(bad)
sub
(bad)
fistp
sti
daa
iret
ins
mov
bound
cwde
in
data16
fld
mov
out
mov
mov
popf
and
mov
stos
dec
int3
jbe
xchg
cwde
in
push
xchg
cwde
in
out
sub
fcmovnu
dec
out
test
out
out
pop
arpl
xchg
cwde
in
out
and
fcmovnu
push
bound
ja
mov
outs
xor
mov
out
ds
int3
jbe
xchg
cwde
in
pop
int3
jbe
xlat
jecxz
in
push
sub
fstp
mov
ins
not
mov
outs
mov
ins
not
fldcw
les
les
mov
and
mov
jp
mov
and
int3
jbe
dec
int3
jbe
dec
int3
jbe
xchg
cwde
in
push
and
fstp
pop
bound
jnp
les
fisub
mov
jecxz
mov
fld
mov
xlat
enter
fstp
pop
push
and
(bad)
xor
mov
in
ss
sub
push
mov
shl
mov
and
frstor
mov
mov
outs
jae
fldz
sbb
mov
xor
fnsave
mov
mov
mov
mov
mov
retf
xchg
mov
lods
dec
(bad)
jb
mov
repz
mov
out
clc
xor
mov
xor
mov
jnp
les
les
les
pop
sbb
gs
inc
in
bound
imul
mov
xor
ins
das
xor
mov
in
jbe
cwde
in
pop
int3
jbe
cli
pop
inc
out
adc
and
fisttp
mov
mov
outs
addr16
sbb
into
je
mov
pop
xchg
mov
push
bound
hlt
mov
ja
fldcw
mov
out
aad
mov
mov
out
xor
fldz
mov
and
in
bound
xlat
bound
jp
movs
xor
sahf
bsr
mov
push
int
stc
jo
aam
inc
fsubr
fstp
dec
(bad)
cli
clc
clc
and
(bad)
cmp
(bad)
aam
sub
push
mov
test
mov
xchg
mov
lock
icebp
jmp
jmp
xchg
mov
aas
iret
fs
das
pop
sbb
out
fmul
pop
dec
push
iret
sub
ja
jecxz
xor
mov
repz
cmp
arpl
jnp
sub
jecxz
xchg
jbe
push
sbb
xchg
pop
int3
retf
outs
mov
out
out
ins
dec
mov
push
lods
(bad)
mov
fs
dec
test
int
lds
mov
idiv
stos
xor
jmp
int
popa
rcl
pop
xchg
xor
loope
sub
daa
xchg
rcr
leave
fimul
jmp
pushf
lods
cmp
dec
test
push
sbb
mov
(bad)
pop
out
sub
scas
shr
ds
sbb
dec
(bad)
aas
xchg
dec
jmp
imul
stc
das
pop
xchg
es
imul
leave
fcmovb
rcl
leave
call
sbb
cs
sbb
xor
popa
test
mov
ret
xor
cmc
scas
leave
pop
cmp
int
inc
out
ret
mov
test
stos
and
mov
in
lods
adc
ss
and
aad
inc
out
ret
mov
test
mov
test
imul
pop
push
or
lods
outs
xchg
enter
and
and
xchg
mov
(bad)
sub
sbb
mov
test
aam
push
das
sub
dec
in
push
push
dec
in
push
lahf
jl
jb
test
pop
push
mov
aad
adc
mov
inc
jmp
jmp
fidiv
loop
mov
dec
adc
leave
adc
daa
and
xchg
push
push
and
dec
mov
dec
mov
adc
mov
inc
shl
sub
loop
test
dec
pop
pop
and
dec
and
sub
push
iret
dec
and
sub
push
mov
xchg
push
mov
imul
gs
dec
sbb
xchg
mov
dec
pop
int3
shl
and
dec
and
xchg
mov
pop
and
add
inc
shl
inc
mov
movs
vmovddup
push
hlt
cmp
push
scas
dec
and
pop
xchg
dec
pop
mov
call
out
mov
outs
jmp
dec
mov
adc
and
adc
adc
in
mov
inc
loope
jp
xchg
push
out
push
movs
lds
dec
mov
out
iret
mov
pop
clc
inc
(bad)
push
mov
iret
ds
fdivr
int3
(bad)
push
pop
in
jg
xchg
(bad)
(bad)
stos
and
mov
fld
adc
lahf
lods
xchg
fdivr
int3
(bad)
push
mov
(bad)
in
push
mov
iret
sub
aas
pop
out
dec
(bad)
sub
aas
sti
dec
(bad)
push
mov
iret
mul
xchg
lods
pop
in
jg
test
(bad)
addr16
sti
lahf
jge
mov
cdq
(bad)
jmp
idiv
mov
(bad)
in
sub
xchg
es
sub
sti
lahf
pop
in
jg
lea
(bad)
fisttp
jg
mov
fnstenv
mov
mov
iret
mov
pop
in
jg
shr
test
lahf
std
sub
addr16
stc
cld
ins
pop
xchg
adc
lahf
std
in
stos
pop
mov
mov
fldcw
adc
lahf
pop
in
jg
stos
(bad)
(bad)
addr16
sti
lahf
ins
xchg
fdivr
int3
(bad)
push
lods
sub
(bad)
push
mov
iret
(bad)
nop
fdivr
int3
(bad)
push
mov
jmp
jge
addr16
(bad)
push
std
and
(bad)
addr16
cmp
(bad)
sub
aas
fnclex
arpl
lods
sub
(bad)
push
mov
iret
sub
jmp
(bad)
addr16
sti
lahf
std
sub
dec
jg
mov
pop
fsubr
fdivr
int3
(bad)
push
sub
aas
retf
dec
in
jg
mov
pop
mov
sti
lahf
in
and
cmp
jg
mov
(bad)
sti
lahf
pop
in
jg
mov
(bad)
addr16
sti
lahf
push
xchg
fdivr
ins
pop
mov
iret
stos
dec
in
jg
stos
(bad)
(bad)
addr16
pop
(bad)
push
not
push
mov
jmp
std
iret
sub
aas
fistp
push
push
xchg
fdivr
int3
(bad)
push
mov
jmp
std
iret
sub
aas
fisttp
push
mov
iret
not
push
mov
jmp
sti
lahf
sbb
inc
(bad)
movs
imul
jg
mov
fldenv
adc
lahf
pop
in
jg
in
dec
mov
aas
cmp
xor
idiv
mov
jmp
sti
lahf
sbb
(bad)
mov
idiv
mov
jmp
sti
lahf
aad
fdivr
int3
(bad)
push
mov
(bad)
in
or
aas
cmp
push
mov
iret
mov
mov
out
lods
aad
mov
sub
adc
lahf
pop
in
jg
lods
scas
or
out
loop
jbe
pop
daa
es
sub
push
jb
pop
cmc
pop
jno
dec
mov
jmp
xlat
push
adc
(bad)
mov
dec
push
ja
mov
jns
jne
jmp
or
mov
mov
jne
(bad)
cmc
leave
jecxz
hlt
cmps
sti
jp
pop
push
pop
das
push
daa
dec
das
and
push
ja
aas
xchg
jl
pop
in
out
jbe
(bad)
(bad)
outs
lea
mov
fwait
(bad)
cmps
dec
in
out
data16
pop
push
mov
(bad)
ja
dec
bound
imul
(bad)
outs
push
sti
mov
(bad)
sub
ja
es
fwait
(bad)
int
jns
xchg
or
jbe
aas
xchg
fs
sub
std
(bad)
neg
repnz
fisttp
jg
push
(bad)
and
iret
push
mov
fstp
in
out
jbe
jg
xchg
mov
std
jge
(bad)
jb
pop
pop
aaa
jae
hlt
mov
add
adc
ds
das
popf
test
and
dec
(bad)
cs
(bad)
mov
hlt
rcr
or
fwait
xchg
(bad)
pop
inc
mov
(bad)
sbb
or
pop
ds
xchg
and
xchg
mov
movs
inc
mov
ret
push
stos
push
push
(bad)
cmp
sub
push
xlat
mov
scas
sub
(bad)
scas
adc
xlat
mov
sar
ficomp
sbb
fsubr
addr16
jg
outs
inc
push
aas
dec
mov
jmp
jmp
push
dec
dec
mov
mov
repz
mov
icebp
cmc
adc
loop
adc
loop
adc
loop
jp
dec
mov
cwde
retf
outs
bnd
dec
lea
cmp
dec
dec
or
cwde
adc
loop
xchg
lods
pop
dec
or
scas
inc
push
push
mov
lds
mov
mov
lds
imul
pop
push
clc
jmp
mov
mov
lds
pop
xor
pop
lahf
and
imul
call
bound
xor
xchg
cwde
es
dec
xchg
xchg
pop
(bad)
xor
test
or
lds
cwde
les
ret
jge
iret
pop
push
and
enter
jno
jle
les
mov
jb
les
arpl
pop
dec
(bad)
sub
enter
and
inc
jle
aas
sar
pop
fcom
mov
xlat
mov
mov
out
jle
inc
loop
loopne
mov
or
loop
loopne
adc
pop
lahf
nop
mov
(bad)
loopne
mov
or
pop
mov
aas
cmp
(bad)
mov
adc
pop
sub
xor
std
inc
mov
adc
out
cvtps2pd
pop
pushf
cs
shl
(bad)
loopne
mov
or
mov
(bad)
rcl
xchg
pop
mov
aas
cmp
ret
pop
adc
pop
addr16
fcomp
mov
aas
clc
lods
(bad)
std
sar
test
jl
scas
(bad)
std
inc
mov
or
fcomp
jl
(bad)
jecxz
loopne
mov
sub
fcomp
jl
loop
loopne
adc
pop
pop
icebp
mov
shr
push
mov
out
movsx
and
lock
mov
or
jno
lock
pop
fisttp
jo
pop
cmp
std
shl
pop
xchg
sti
lods
fwait
xchg
or
ficom
push
les
dec
and
pop
mov
adc
inc
mov
(bad)
sub
dec
lods
aad
dec
sub
es
sbb
jmp
lahf
xlat
leave
call
rcl
xchg
push
ds
push
ds
ja
dec
jns
xor
(bad)
dec
xor
rcl
mov
mov
mov
(bad)
cli
inc
iret
inc
adc
mov
push
adc
mov
(bad)
xlat
adc
outs
and
pop
fisttp
mov
shr
rol
mov
bound
push
push
push
pop
lock
lahf
and
repnz
mov
(bad)
das
adc
pop
and
mov
xlat
mov
jl
call
dec
xor
(bad)
repnz
addr16
ret
adc
sub
jl
xchg
mov
mov
(bad)
push
pop
mov
dec
(bad)
(bad)
xchg
push
mov
push
add
xchg
push
les
rol
mov
(bad)
in
and
les
jne
push
push
mov
xchg
inc
adc
mov
adc
mov
mov
(bad)
in
es
inc
adc
mov
test
(bad)
push
adc
cmp
dec
lods
mov
dec
xor
stos
dec
xor
stos
jmp
push
not
and
movs
mov
jg
es
add
dec
lods
sbb
dec
lods
add
xor
push
div
sbb
sub
pop
(bad)
es
mov
push
bound
and
rol
stos
and
les
pop
mov
adc
dec
mov
(bad)
push
(bad)
in
out
pop
mov
push
cmp
adc
arpl
leave
imul
dec
mov
(bad)
mov
pop
xchg
xor
mov
xchg
inc
adc
or
sub
pop
(bad)
dec
xor
sub
pop
or
dec
lods
jecxz
call
push
dec
mov
mov
test
(bad)
leave
adc
push
and
pop
push
dec
lods
(bad)
adc
adc
push
and
jp
mov
call
stc
mov
test
les
ret
addr16
lahf
jl
push
mov
adc
ins
jg
popf
mov
sub
les
rol
push
rol
cmp
mov
inc
adc
daa
rol
cmp
mov
retf
fs
jl
es
add
ret
test
dec
sub
es
inc
adc
mov
push
imul
bound
xor
sub
pop
xchg
dec
xor
sub
pop
ins
cld
fucomp
pop
sahf
adc
mov
dec
lods
dec
jne
push
lea
mov
inc
adc
mov
inc
mov
jmp
mov
inc
adc
xchg
inc
adc
out
stos
jl
mov
mov
stc
or
sahf
paddusw
retf
aad
dec
cmps
xchg
push
es
xor
and
xor
scas
xchg
push
(bad)
cmc
repnz
cs
jp
xor
outs
lock
dec
mov
mov
mov
xchg
inc
adc
mov
or
push
mov
sbb
push
dec
lods
(bad)
adc
mov
(bad)
int
out
xchg
cmps
inc
adc
push
mov
(bad)
lods
cmp
mov
xchg
mov
gs
mov
jmp
mov
push
pop
mov
sbb
rol
mov
mov
sbb
(bad)
es
inc
adc
pop
mov
(bad)
jge
bound
call
xchg
dec
lods
rcl
lods
jb
es
adc
es
xor
pop
xchg
mov
and
sahf
xchg
fs
add
out
and
pop
push
sbb
xor
sub
pop
mov
dec
lods
xor
dec
lods
mov
dec
sub
gs
pop
push
dec
lods
jno
dec
sub
es
adc
sub
es
inc
adc
xchg
push
pop
mov
inc
adc
mov
mov
es
arpl
dec
lods
(bad)
jge
outs
fwait
or
xchg
push
cmc
push
sahf
xchg
push
push
bound
xor
cmps
stc
jge
imul
call
dec
xor
sahf
xchg
push
bound
and
rol
mov
bound
push
bound
mov
dec
jmp
rol
mov
bound
mov
xchg
push
out
xor
sub
pop
iret
sti
aaa
cmps
cmc
fdiv
cmp
call
dec
sub
es
mov
xchg
test
fsub
lds
pop
stc
mov
loop
sti
stos
adc
fstp
cmps
pop
cmp
pop
xchg
mov
xchg
jg
leave
ficomp
pop
in
xor
das
sub
xor
ficom
das
pop
popf
jl
loop
sub
jmp
les
rol
jp
out
test
(bad)
mov
out
stc
mov
cli
inc
mov
jae
in
sub
mov
call
dec
xor
(bad)
dec
xor
sar
mov
test
mov
cdq
push
(bad)
ins
loop
mov
les
cmp
retw
push
adc
scas
and
cli
cdq
lods
jge
rol
cli
dec
mov
adc
inc
adc
pop
mov
(bad)
(bad)
jp
xor
jle
push
jle
cdq
aad
inc
out
mov
(bad)
out
ds
cli
out
pop
(bad)
jbe
das
push
jg
int3
push
sub
sub
repz
int
test
mov
leave
call
mov
jl
mov
jl
bound
movs
push
bound
fs
mov
lds
repnz
inc
adc
push
shl
dec
push
and
(bad)
retf
mov
and
xor
jbe
push
(bad)
ficomp
mov
mov
xchg
push
jbe
jecxz
bound
nop
push
(bad)
fimul
mov
(bad)
ficomp
mov
les
push
bound
mov
xchg
push
not
mov
repz
int3
test
and
xor
sub
pop
xor
dec
lods
add
pop
inc
lods
enter
cmp
inc
bound
in
ja
jp
add
fstp
(bad)
in
lods
cmps
(bad)
in
int3
bound
cwde
(bad)
in
int3
bound
dec
bound
xor
stos
sub
popf
aad
push
push
xchg
push
sahf
lods
sbb
dec
mov
mov
mov
pop
mov
mov
dec
call
call
(bad)
dec
xor
dec
nop
push
bound
push
xor
push
fmul
pop
dec
xor
dec
xchg
push
sbb
mov
call
dec
lods
push
std
sub
jecxz
dec
xor
dec
xchg
push
dec
div
push
ss
call
dec
xor
into
xchg
push
les
rol
retf
mov
clc
cli
xchg
lods
pop
xor
pop
dec
xor
sub
pop
out
xor
sub
pop
out
xor
sub
pop
cmp
idiv
cs
adc
pop
arpl
jnp
(bad)
(bad)
(bad)
out
jnp
(bad)
fdiv
(bad)
out
jnp
(bad)
(bad)
(bad)
out
jnp
(bad)
(bad)
(bad)
out
fild
mov
ins
sub
and
push
(bad)
out
mov
lods
xchg
dec
mov
lods
or
shl
ins
gs
ficom
mov
push
aas
adc
stos
push
and
push
push
imul
mov
lods
lea
and
mov
mov
lea
adc
sub
jmp
ins
sub
and
push
(bad)
retf
lods
push
addr16
mov
dec
and
mov
std
(bad)
shl
push
xchg
push
sub
push
push
repz
mov
push
lahf
jl
ficom
dec
and
ins
stos
aam
inc
mov
jmp
ins
retf
push
pop
fs
dec
sub
xchg
enter
xchg
lods
push
pop
and
pop
and
inc
and
push
and
test
dec
mov
mov
xchg
inc
mov
and
pop
and
xchg
lods
call
sub
(bad)
mov
inc
mov
stos
inc
mov
and
dec
and
pop
mov
push
(bad)
sub
daa
xchg
lods
mov
push
pop
das
xchg
lods
call
mov
rcr
out
lods
cdq
sub
pop
jno
push
inc
mov
pop
scas
inc
mov
lahf
inc
mov
mov
mov
mov
pop
imul
mov
es
(bad)
ins
inc
pop
and
inc
and
xchg
inc
mov
outs
pop
fisttp
mov
push
fimul
adc
adc
retf
mov
xchg
sub
mov
push
rcr
nop
inc
pop
pop
push
(bad)
ficom
shl
pop
sbb
std
xchg
lods
(bad)
in
cli
push
mov
psubb
dec
(bad)
inc
dec
push
and
fs
mov
xor
jle
xor
xchg
mov
sbb
movs
ret
fisubr
dec
jmp
test
xchg
lods
cmp
xor
(bad)
mov
sub
sti
clc
sub
pop
jnp
sub
sahf
shl
lds
ret
in
lds
add
bnd
push
or
in
mov
and
xchg
retf
xchg
adc
(bad)
jge
xchg
xchg
test
movs
xchg
dec
(bad)
cmps
xor
leave
adc
hlt
icebp
xchg
mov
pop
fidiv
cs
sub
shl
xor
ja
rcr
aaa
push
dec
inc
xchg
into
psrlq
push
push
dec
xchg
xchg
sub
inc
xchg
out
push
sar
retf
stos
fs
xchg
call
mov
pop
mov
hlt
jp
xchg
xor
xchg
gs
jae
or
xchg
jbe
(bad)
jb
sahf
aam
stc
ret
push
fwait
in
xor
dec
mov
jne
mov
jnp
stc
scas
test
sti
mov
stc
pop
test
sbb
dec
fs
pop
xchg
enter
xchg
push
jp
and
fs
or
adc
movs
inc
adc
movs
mov
xor
mov
and
xor
sbb
mov
imul
movs
rcr
fs
push
pop
cs
push
mov
sub
enter
xchg
push
pop
mov
cmp
inc
leave
and
inc
jmp
sub
xchg
sub
dec
stos
and
dec
pop
dec
fs
push
sti
pop
stos
sub
imul
fs
sub
dec
imul
push
push
push
jl
xchg
push
pop
out
fs
ds
xchg
push
cli
pop
and
jmp
lea
jmp
jp
xchg
mov
repz
mov
sbb
(bad)
or
jge
cmp
inc
inc
jmp
in
daa
mov
pop
and
dec
mov
dec
fs
jle
stos
bswap
xchg
and
fs
(bad)
xchg
enter
xchg
ss
fs
sub
dec
fwait
std
scas
sbb
movs
mov
and
std
in
iret
jae
ds
cmp
sbb
xchg
ds
push
push
or
enter
xchg
(bad)
aad
nop
push
or
mov
mov
inc
inc
leave
and
adc
nop
enter
pop
(bad)
dec
push
sbb
push
hlt
cmp
dec
mov
dec
fs
jbe
enter
xchg
push
ficomp
mov
fiadd
inc
inc
imul
xchg
push
stos
cs
push
fiadd
mov
imul
adc
movs
add
dec
xor
dec
fs
push
xchg
enter
xchg
push
cmp
push
in
dec
mov
xchg
push
cmc
out
lods
pop
fs
dec
and
dec
push
sbb
add
xchg
push
mov
sub
enter
enter
xchg
push
fs
jmp
call
jmp
movs
mov
and
movs
jp
sbb
(bad)
dec
fs
mov
jmp
push
mov
sub
out
(bad)
cmps
mov
mov
lahf
and
loope
mov
mov
lods
cmp
dec
adc
movs
xchg
and
fs
sbb
xchg
call
sub
es
push
cmp
mov
dec
imul
sub
enter
xchg
push
mov
sub
adc
inc
jmp
inc
inc
sub
out
data16
repnz
enter
enter
icebp
and
adc
and
jp
xor
stc
dec
ja
or
sbb
pop
dec
fs
cs
enter
xlat
and
fcomp
xchg
out
repz
and
or
clc
fsubr
sahf
or
iret
xchg
xor
dec
fs
fimul
xchg
cs
enter
enter
enter
enter
xchg
push
mov
jl
and
push
jmp
inc
inc
jmp
inc
inc
test
and
retf
mov
mov
test
push
sbb
mov
xchg
cmps
inc
inc
jmp
mov
bound
xchg
mov
fs
push
mov
test
mov
inc
leave
and
jmp
in
dec
mov
jge
jp
xchg
sub
dec
std
and
dec
std
jge
cmp
fsubr
push
mov
jl
push
and
jmp
sbb
and
mov
add
xchg
mov
and
dec
ja
cmp
leave
xchg
not
pop
push
sbb
xchg
enter
xchg
out
xchg
enter
xchg
retf
dec
(bad)
sub
dec
add
dec
fs
sub
dec
and
push
sbb
mov
mov
push
test
ret
hlt
sub
xchg
out
div
mov
xchg
push
mov
sub
jmp
sbb
dec
mov
xlat
and
sub
xchg
push
jp
and
jmp
in
adc
mov
add
mov
inc
mov
(bad)
and
dec
(bad)
dec
fs
sahf
nop
enter
xchg
es
fs
sub
dec
xchg
and
movs
daa
movs
cmc
xchg
enter
xchg
sub
dec
push
and
dec
push
sbb
mov
(bad)
or
push
call
pop
fs
data16
push
cmps
push
ss
xchg
push
call
inc
and
xor
lahf
outs
in
ins
js
and
fs
scas
aas
frstor
mov
jl
jmp
mov
stc
inc
stos
xchg
comiss
pop
dec
(bad)
pop
repnz
cwde
lods
mov
inc
and
mov
stos
adc
and
jp
sbb
mov
fwait
shl
pop
ficom
jmp
mov
pop
and
mov
and
mov
out
test
mov
sar
adc
movs
paddb
call
fs
push
dec
fs
ds
xor
sub
xchg
push
cli
pop
and
hlt
mov
push
mov
and
dec
push
sbb
scas
xchg
pop
das
xchg
push
cli
retf
call
fisttp
mov
mov
mov
push
cli
ficom
fs
mov
fs
push
cli
inc
and
push
and
jmp
xor
adc
and
adc
movs
lea
inc
mov
enter
mov
pop
ss
and
pop
mov
dec
and
loope
lock
inc
inc
jmp
scas
sbb
xor
jp
sbb
popa
lahf
in
and
retf
xchg
sub
dec
test
sbb
adc
and
adc
and
adc
and
adc
and
aas
retf
enter
and
fs
push
ficom
mov
dec
and
aam
dec
xchg
inc
inc
imul
jle
mov
xchg
not
xchg
push
stos
es
push
mov
sub
enter
xchg
not
xchg
not
xchg
not
xchg
not
jecxz
lods
aad
enter
xchg
push
cmp
mov
jmp
lods
js
mov
xchg
push
xchg
enter
xchg
push
jno
xchg
push
fs
jmp
sub
enter
iret
xor
enter
xchg
push
mov
sub
xchg
enter
xchg
jmp
inc
dec
fs
sub
dec
xbegin
sub
push
mov
sub
ss
fs
sbb
xchg
mov
xchg
push
push
xchg
push
mov
sub
dec
and
leave
and
leave
and
fs
push
push
xchg
push
mov
sub
enter
out
ja
xor
dec
push
sbb
addr16
fs
sub
dec
addr16
fs
sub
dec
addr16
fs
sub
dec
pop
lahf
pop
repz
sub
xor
sbb
and
and
mov
cld
xchg
xor
imul
dec
(bad)
cmps
dec
in
lods
cli
xchg
enter
and
xchg
pop
mov
inc
and
jle
push
mov
xchg
aad
adc
and
dec
(bad)
xchg
dec
in
sub
dec
test
movs
ss
enter
and
and
movs
inc
jle
push
mov
push
jmp
xchg
pop
cmc
outs
pop
and
call
and
xchg
enter
cmp
inc
pop
(bad)
mov
sub
and
dec
out
and
pop
dec
and
into
xchg
dec
sub
and
mov
xchg
inc
bound
bound
mov
mov
xchg
inc
bound
and
push
mov
and
sub
dec
xchg
dec
and
sub
dec
in
and
dec
push
mov
in
mov
fld
sbb
sub
and
cmp
pop
dec
sub
sub
pop
mov
sub
xchg
dec
sub
xchg
dec
sub
and
xlat
and
cs
pop
jmp
and
jmp
jne
mov
(bad)
iret
hlt
hlt
mov
dec
scas
inc
bound
frstor
pop
jmp
pop
jmp
cmp
adc
lods
push
and
sub
es
pop
mov
movs
cmp
xchg
pop
retf
jge
out
mul
fbstp
sub
scas
hlt
cmp
in
sub
les
fbld
mov
je
les
xchg
push
and
scas
hlt
pusha
mov
sub
fcom
bound
and
sti
dec
pop
in
sub
pop
in
sub
mov
xchg
xchg
dec
(bad)
sub
xchg
mov
mov
inc
dec
in
sub
scas
hlt
add
sti
dec
pop
in
sub
push
dec
in
sub
mov
inc
sti
fistp
cmp
mov
(bad)
dec
in
sub
scas
hlt
cmp
mov
xchg
xor
xchg
fcom
bound
xchg
push
cli
adc
bound
icebp
mov
sti
dec
dec
nop
fcom
bound
mov
sti
dec
pop
in
sub
test
mov
aas
out
hlt
imul
adc
dec
pop
in
sub
test
mov
dec
xchg
fcom
bound
leave
(bad)
neg
movs
lahf
xchg
fcom
mov
mov
dec
cmc
jns
lods
pop
in
sub
arpl
lods
sub
mov
mov
mov
xchg
mov
push
jp
les
aas
and
mov
sub
scas
hlt
dec
mov
sub
bound
mov
addr16
in
sub
scas
hlt
ins
pop
pop
iret
enter
ror
dec
in
sub
scas
hlt
sbb
jge
sub
mov
mov
mov
popf
cdq
dec
mov
out
in
sub
mov
clc
push
out
ins
cwde
out
pop
cmps
mov
loope
jg
imul
adc
dec
mov
sub
inc
xchg
xor
dec
in
sub
scas
hlt
stos
mov
mov
pop
repz
xlat
fnstcw
leave
jecxz
dec
in
sub
scas
hlt
sbb
sti
dec
pop
in
sub
cmps
les
das
xchg
fcom
bound
mov
not
ins
pop
fst
pop
sti
sbb
bound
lds
xchg
pop
push
call
mov
mov
pop
jmp
pop
in
sub
mov
stc
into
mov
pop
mov
sub
mov
mov
mov
sub
scas
hlt
dec
mov
sub
bound
mov
aas
nop
fcom
bound
(bad)
sub
xchg
pop
and
mov
xor
xchg
adc
dec
scas
xchg
fcom
bound
xor
(bad)
std
jns
imul
dec
sub
lahf
clc
fidiv
mov
jl
mov
mov
mov
mov
mov
loop
add
xchg
(bad)
pop
bound
mov
mov
mov
mov
bound
cmc
adc
dec
pop
in
sub
xchg
les
pop
dec
in
sub
scas
hlt
aaa
(bad)
je
iret
add
xchg
fcom
bound
out
movs
cmp
loope
(bad)
jmp
mov
jg
cmps
ret
scas
push
mov
jns
icebp
ja
(bad)
adc
std
and
ja
iret
adc
std
and
ja
scas
adc
ins
xchg
clc
cmp
aaa
mov
cmp
jns
clc
cmp
loop
mov
pop
cld
sbb
cmp
push
push
mov
sti
pop
loop
cmp
cld
sbb
aas
adc
push
outs
xlat
mov
leave
push
imul
cmp
pop
cmp
jge
mov
mov
icebp
ja
mov
dec
cld
sbb
imul
(bad)
fbstp
hlt
cmp
mov
inc
loop
mov
in
sub
ja
outs
adc
in
out
ja
cld
sbb
cld
sbb
mov
jg
push
xchg
clc
cmp
sti
dec
cld
sbb
jno
dec
cld
sbb
mov
jg
sbb
inc
cli
das
stc
cmp
pusha
lods
icebp
ja
and
out
mov
test
dec
mov
jns
pop
mov
jns
mov
mov
leave
xchg
adc
xchg
mov
and
call
call
call
leave
xchg
push
inc
mov
test
lahf
adc
xchg
push
adc
adc
int
xchg
in
sahf
sbb
std
sbb
repz
cmp
jge
xchg
xchg
test
int
xchg
and
xor
sbb
dec
call
dec
call
pop
pop
pop
jo
inc
rep
cdq
iret
nop
movs
stc
rcr
jb
inc
repz
mov
leave
pop
ds
retf
sbb
(bad)
jmp
cmp
push
out
cmp
int
jae
call
adc
xchg
push
adc
xchg
repz
pop
mov
mov
rep
mov
repz
mov
leave
and
adc
xchg
mov
int
dec
jge
dec
(bad)
cs
push
sahf
pop
sar
out
mov
push
sahf
pop
xor
scas
nop
push
scas
xchg
push
cmp
and
mov
mov
movs
mov
repz
jns
sar
dec
mov
test
dec
aaa
mov
mov
les
inc
repz
mov
leave
xor
out
mov
int
jmp
call
push
cmp
sub
daa
mov
clc
mov
push
fsubr
sar
leave
addr16
and
cmp
sub
cmp
daa
sar
out
arpl
push
int
pop
jl
sahf
(bad)
cmp
mov
mov
leave
popf
mov
leave
sti
sti
push
xchg
or
ja
mov
dec
dec
and
xor
out
xchg
push
cmp
rep
bswap
xchg
adc
xchg
rcl
adc
repz
fiadd
sub
cmp
sub
push
push
mov
mov
fs
aas
iret
inc
stc
xchg
push
ins
jo
dec
xor
out
xchg
push
xor
sbb
rep
sahf
test
leave
push
mov
mov
lods
iret
xchg
repnz
dec
mov
enter
nop
pop
(bad)
out
inc
repz
mov
leave
js
mov
xchg
add
xchg
or
leave
xchg
call
xchg
push
xor
push
xchg
pop
(bad)
out
lods
sar
sub
cmp
nop
push
sahf
dec
xchg
push
sahf
cmp
sar
pop
mov
jns
mov
stc
fdivrp
xor
push
out
fcompp
xor
mov
adc
xchg
cmp
in
pop
movs
inc
repz
aas
xchg
fs
jns
pushf
inc
repz
sbb
daa
push
int
out
call
jne
mov
and
call
jns
call
in
cmp
adc
xchg
push
and
xchg
xlat
and
daa
scas
dec
xor
push
dec
xor
(bad)
jmp
cmp
push
sahf
mov
mov
ins
mov
leave
bound
mov
cli
push
leave
sub
push
fnstsw
sbb
pop
ficom
sar
and
cmp
dec
mov
jns
mov
(bad)
xchg
dec
(bad)
ds
push
out
push
sbb
repnz
pop
xchg
mov
imul
sar
and
cmp
push
inc
pop
adc
rep
inc
repz
fwait
pop
retf
push
mov
repz
mov
int
iret
movs
lods
xchg
push
xlat
mov
cmp
rol
pop
pop
pop
das
sar
push
cmp
pop
mov
repz
mov
out
idiv
scas
je
pop
ss
mov
sub
shl
imul
addr16
idiv
mov
jle
push
cmp
push
mov
jns
fwait
inc
repz
mov
leave
pop
adc
xchg
aas
jge
mov
xchg
int
int
pop
dec
(bad)
(bad)
xchg
push
cmp
push
sahf
pop
xor
(bad)
icebp
mov
repnz
dec
sub
repz
jns
sar
xlat
out
sti
repnz
push
cmp
sti
ins
aas
bound
or
xor
xor
mov
jns
add
mov
mov
fs
mov
leave
into
adc
xchg
sub
int
pop
hlt
jp
dec
sub
daa
mov
shl
push
cmp
xchg
push
cmp
push
mov
rep
mov
dec
xor
mov
leave
ds
xchg
jge
call
xchg
push
das
sub
push
int
add
xchg
and
push
int
and
xor
sub
daa
xchg
dec
sub
daa
lds
int
mov
leave
mov
sbb
movs
out
xchg
push
push
shl
sar
and
cmp
push
cmp
inc
mov
mov
push
int
mov
dec
cmp
jp
int
arpl
daa
(bad)
dec
xor
jmp
call
dec
xor
mov
sar
and
cmp
push
mov
repz
repz
repz
pop
mov
mov
les
jns
sar
push
mov
imul
lahf
cmp
xchg
shl
adc
or
xor
daa
addr16
xor
into
xchg
push
cmp
cli
shr
call
into
icebp
cmps
fwait
lods
popf
stos
test
stc
das
sub
xor
pop
dec
xor
into
xchg
push
sub
rcr
inc
rep
mov
repz
mov
dec
xor
sub
daa
ins
cmc
cmp
daa
xchg
dec
xor
fimul
dec
cmp
cli
xchg
lods
jne
push
cmp
push
mov
jns
pop
out
test
dec
pop
mov
mov
movs
stos
push
inc
rep
xchg
push
cmp
retw
xor
and
cli
cdq
lods
pop
das
sar
sub
cmp
and
sar
inc
mov
daa
int
fwait
and
daa
push
int
mov
enter
cmp
(bad)
call
fisttp
mov
mov
in
mov
lds
pop
add
es
cli
dec
xchg
lods
pop
xor
repnz
adc
out
inc
repz
mov
leave
fst
int
push
pop
ins
xchg
xor
adc
adc
int
sti
jl
adc
cli
lods
sbb
daa
cmp
imul
int
and
mov
inc
pop
xor
pop
xor
inc
call
dec
xor
inc
dec
xor
(bad)
dec
xor
(bad)
cli
retf
pop
xor
(bad)
stc
jl
xchg
dec
mov
leave
adc
adc
int
mov
leave
ret
adc
adc
add
mov
xor
pop
es
xor
es
xor
sub
daa
(bad)
sub
daa
(bad)
stc
retf
jno
jno
retf
test
cdq
daa
and
daa
xchg
and
daa
xchg
std
into
inc
scas
sub
sar
and
cmp
sub
cmp
push
dec
sub
daa
sar
leave
movs
inc
repz
jns
inc
mov
jns
out
hlt
jl
fcmovb
cmp
cmp
inc
mov
jns
pop
mov
pop
mov
inc
out
int
mov
out
cmp
mov
leave
jl
out
mov
int
xchg
jl
jl
cmp
sahf
mov
mov
sahf
sub
ja
cs
scas
dec
xor
sub
daa
scas
dec
xor
sub
daa
scas
dec
xor
sub
daa
or
sub
jecxz
nop
push
cmp
push
jae
ss
xor
ficom
push
sahf
sub
push
xchg
dec
xor
xchg
dec
xor
fdivp
cmc
and
mov
push
sahf
pop
xor
ficom
dec
push
dec
xor
sub
daa
out
sti
jae
mov
cmp
sbb
xchg
(bad)
and
daa
push
int
aad
cmp
adc
adc
int
mov
leave
pop
mov
mov
in
mov
mov
dec
lods
adc
fwait
and
cs
and
cs
mov
sbb
mov
mov
adc
adc
and
and
dec
lods
dec
xchg
push
push
shr
mov
inc
mov
inc
mov
jbe
xor
imul
and
stos
xlat
ins
pushf
push
fwait
dec
mov
lods
jno
push
shr
dec
popf
add
bound
cmc
outs
pop
cmc
leave
inc
mov
inc
mov
mov
xchg
pop
int
shr
dec
jge
xchg
push
dec
mov
push
scas
push
mov
push
and
mov
mov
push
and
hlt
cdq
inc
inc
jmp
pop
adc
movs
das
and
xor
dec
fs
mov
and
jge
xchg
push
mov
sub
xchg
push
mov
sub
aad
aam
adc
and
inc
adc
hlt
add
mov
jmp
dec
aas
dec
sbb
xchg
push
mov
sub
mov
push
and
leave
and
jmp
retf
and
push
(bad)
call
xor
jmp
fs
mov
fs
(bad)
xchg
enter
fs
mov
fs
(bad)
cmc
mov
lahf
fbstp
inc
cdq
mov
into
(bad)
pop
dec
xor
mov
inc
inc
imul
sbb
push
and
dec
mov
push
aad
sbb
mov
push
movs
xor
lea
pusha
fs
xor
aad
pop
push
rol
int3
sbb
jge
call
pop
fs
mov
jmp
stc
jo
push
jmp
ins
sub
dec
ins
xchg
mov
movs
sbb
lods
mov
xor
and
jle
(bad)
mov
inc
dec
cmc
push
adc
mov
xchg
aam
pop
mov
and
xchg
xor
sahf
hlt
imul
fst
retf
cmps
xor
pop
cmp
out
repnz
jle
push
mov
ins
test
dec
(bad)
cwde
aad
inc
add
int3
dec
sbb
imul
pushf
sahf
gs
mov
jmp
clc
xchg
xor
or
ret
add
jmp
fs
push
call
pop
xor
xor
adc
pop
jo
mov
(bad)
fnop
aam
enter
call
movs
mov
stos
addr16
out
arpl
jno
int3
sbb
fistp
outs
xchg
cmp
sti
lods
ins
sahf
leave
dec
daa
lods
ins
xchg
imul
dec
dec
jmp
out
(bad)
lods
fst
ins
sub
jmp
test
hlt
leave
scas
test
dec
inc
jle
push
loope
cli
das
iret
stc
and
js
(bad)
scas
(bad)
movs
push
loope
pop
sbb
leave
lds
mov
inc
bound
push
jg
xchg
mov
cld
lea
sbb
dec
and
das
xchg
dec
or
xchg
dec
or
lock
lods
jne
dec
or
and
xor
sbb
and
sbb
dec
(bad)
sub
sbb
mov
(bad)
loopne
mov
inc
bound
and
fmul
xor
pop
lahf
cmp
rcr
fist
push
scas
(bad)
mov
sbb
loope
mov
mov
mov
pusha
dec
mov
pusha
das
mov
pusha
outs
mov
(bad)
loopne
ds
xchg
into
getsec
stc
mov
xchg
sbb
jmp
imul
not
xchg
sbb
int3
lods
jp
adc
loopne
adc
jo
inc
(bad)
lock
out
outs
leave
fsubr
sub
and
out
repz
stc
pop
test
mov
cmp
inc
adc
fwait
pushf
pmulhw
mov
and
mul
imul
dec
(bad)
xchg
push
xchg
push
out
not
dec
(bad)
inc
dec
and
pop
nop
dec
or
and
inc
dec
and
sub
adc
rcr
push
fistp
or
xchg
dec
or
and
(bad)
dec
and
pop
aam
and
clc
nop
inc
(bad)
shl
xor
sbb
inc
bound
inc
bound
inc
(bad)
shl
xor
push
and
clc
test
(bad)
lock
jno
push
mov
(bad)
loopne
mov
loopne
pop
mov
retf
and
xchg
test
mov
loopne
mov
loopne
pop
mov
hlt
jp
push
lahf
repnz
xor
mov
pop
adc
dec
pop
cwde
jns
fistp
xchg
sbb
out
mov
(bad)
lock
(bad)
loopne
adc
rcl
jmp
loopne
adc
adc
rol
loopne
(bad)
xlat
push
sub
(bad)
loopne
push
(bad)
dec
in
dec
or
and
pop
mul
cmp
lahf
adc
or
loopne
adc
or
sbb
dec
mov
xchg
sbb
and
mov
inc
and
push
rep
mov
or
neg
pop
pop
sbb
shr
xchg
sbb
or
out
movs
mov
movs
mov
jge
and
loope
mov
loopne
adc
ror
lods
(bad)
jmp
sbb
adc
aas
xchg
dec
or
xchg
dec
or
es
sbb
pop
and
clc
test
dec
mov
loopne
mov
loopne
(bad)
in
daa
jg
sti
jmp
dec
mov
lods
inc
(bad)
lock
mov
clc
mov
and
mov
xchg
sbb
inc
push
imul
rcr
adc
jl
mov
cmp
and
jg
push
and
clc
stos
xor
adc
inc
cmp
and
and
sub
and
aaa
dec
and
aaa
dec
and
call
jmp
sbb
or
jecxz
(bad)
cmps
mov
push
and
mov
jl
xlat
mov
(bad)
xchg
dec
or
add
pop
ja
xchg
mov
pusha
inc
and
pop
sub
xor
daa
mov
loopne
adc
rcr
adc
cmp
cmp
cmp
add
movs
push
xchg
dec
or
and
not
push
not
not
pop
fist
adc
lods
xchg
dec
or
and
stos
jmp
dec
or
sub
xor
sbb
pop
and
js
inc
bound
inc
mov
(bad)
loopne
adc
mov
and
pmaddwd
sar
xor
and
imul
imul
jmp
and
seta
push
and
dec
mov
xor
and
pop
dec
and
js
inc
(bad)
shl
xor
inc
(bad)
shl
xor
inc
(bad)
shl
xor
push
test
push
mov
push
adc
jno
out
xchg
cmps
inc
bound
js
xor
and
jecxz
xchg
sbb
nop
sbb
and
js
inc
(bad)
shl
xor
inc
bound
jb
mov
push
mov
(bad)
loopne
adc
cmp
xor
dec
or
neg
shl
pop
into
nop
dec
or
sub
xor
inc
bound
sub
sbb
pusha
mov
mov
pop
lahf
addr16
das
leave
xchg
cld
jmp
shl
xor
inc
(bad)
shl
xor
scas
mov
lock
mov
mov
inc
mov
loopne
adc
imul
bound
inc
and
fisttp
and
mov
mov
sbb
mov
and
js
inc
bound
jae
cmp
mov
mov
mov
mov
pusha
daa
cmp
mov
pusha
pop
mov
loopne
jle
leave
pop
push
mov
pusha
aaa
mov
pusha
ja
les
mov
loopne
adc
adc
and
scas
xchg
dec
or
and
scas
xchg
dec
or
and
jnp
and
sub
cmc
xchg
dec
or
and
sub
adc
and
adc
rcr
fwait
sar
mov
sar
mov
les
jg
push
inc
jg
(bad)
loopne
mov
pop
and
xor
cmps
pop
cmp
outs
xchg
dec
or
loope
inc
mov
cmps
aas
frstor
test
in
mov
or
and
and
pop
jmp
iret
movs
fs
pop
jg
leave
fidivr
mov
xor
pop
adc
push
mov
jb
mov
loopne
mov
loopne
jmp
hlt
enter
adc
(bad)
push
nop
dec
or
xchg
dec
or
xchg
dec
or
xchg
dec
or
sar
xor
push
and
push
(bad)
and
clc
mov
mov
popa
add
inc
(bad)
lock
pop
aas
xchg
mov
and
or
dec
or
xchg
dec
or
xchg
dec
or
test
mov
and
pop
loope
stos
jg
int3
or
(bad)
loopne
ds
cli
out
sar
jbe
das
push
xor
shl
adc
rcr
fs
xor
fist
fs
xor
lods
inc
(bad)
shl
xor
inc
and
push
xchg
sbb
xor
iret
push
fwait
fs
xor
mov
xor
add
(bad)
push
mov
das
stc
lods
sbb
push
pop
icebp
pop
xchg
lods
sub
jmp
and
clc
mov
or
push
mov
aaa
cmc
cmp
sub
push
pop
dec
and
xchg
dec
and
xchg
cli
retf
pop
and
xchg
stc
jl
xchg
dec
mov
loopne
mov
mov
mov
mov
mov
mov
jg
push
push
mov
or
and
and
sub
and
sub
retf
jno
xchg
lahf
gs
int3
inc
adc
shl
pop
and
aas
xchg
dec
or
xchg
dec
or
and
jle
xchg
sbb
cmp
xchg
adc
adc
ror
adc
jl
dec
iret
xchg
jge
xchg
mov
adc
sbb
push
mov
jmp
xchg
lods
jge
repz
(bad)
loopne
adc
(bad)
sbb
rcr
and
jg
push
icebp
jmp
xor
sbb
int
addr16
xchg
sbb
fstp
mov
mov
and
(bad)
sub
outs
xchg
dec
or
and
aaa
sti
pop
xchg
(bad)
std
and
and
push
out
out
ins
dec
and
call
and
mov
and
call
xchg
sbb
inc
bound
xchg
dec
or
and
or
rcr
rcr
rcr
rcr
les
sub
out
es
sbb
pop
and
push
dec
or
and
not
push
not
jmp
xchg
inc
and
lods
mov
ficomp
xor
push
adc
and
test
ror
lods
add
fwait
and
and
jne
inc
call
call
adc
stos
inc
and
test
dec
movs
or
pop
dec
and
cmps
pop
mov
inc
and
lea
sbb
test
push
imul
test
test
ret
cmp
xor
inc
call
jmp
dec
inc
and
jp
dec
movs
or
stos
fisub
aas
mov
pop
mov
loopne
adc
sar
repnz
in
imul
sete
nop
pop
cmp
and
js
inc
jle
and
pop
sub
pop
mov
nop
xchg
pop
mov
setbe
and
and
pop
push
and
push
and
push
xchg
pop
lods
mov
scas
and
inc
jle
and
js
sahf
test
loopne
adc
shl
sar
stc
shl
cmc
enter
pop
jmp
in
sbb
jno
pop
(bad)
xchg
enter
enter
xchg
pop
cmp
and
fmul
out
mov
jle
mov
jmp
pop
cmp
imul
fwait
dec
in
dec
xchg
enter
enter
xchg
pop
cmp
(bad)
jbe
sub
and
fcomp
pop
iret
xchg
enter
call
and
cwde
aad
stc
rcl
and
js
(bad)
enter
repnz
rcl
stc
ror
gs
ins
push
ret
movs
shr
stc
mov
rep
or
dec
popa
inc
fisttp
xchg
call
jnp
add
inc
jne
sti
push
xchg
call
jns
sub
clc
add
jne
mov
adc
mov
push
or
test
sbb
sbb
inc
inc
cmova
adc
rcr
dec
xor
jmp
cmc
aad
outs
jb
mov
loop
stos
(bad)
(bad)
mov
stos
stos
jp
push
jmp
(bad)
push
pop
lods
(bad)
test
adc
push
inc
(bad)
jne
jmp
fwait
stos
sub
sbb
test
pop
lods
lods
adc
xchg
sub
mov
mov
icebp
mov
jg
lea
scas
sbb
in
je
jle
mov
mov
jmp
jbe
aam
stos
in
sub
and
inc
xchg
popf
sbb
jbe
mov
pushf
or
stos
xlat
bound
mul
popf
pop
jne
sub
push
(bad)
xchg
std
sub
jmp
xor
pop
(bad)
sti
loope
push
(bad)
fs
mov
pop
cmp
adc
das
and
repnz
mov
inc
mov
xor
mov
xchg
inc
push
sub
add
adc
out
push
sub
ds
repnz
push
sub
add
cmp
adc
mov
retf
arpl
jl
aam
or
test
in
inc
push
sub
adc
mov
mov
pop
fimul
popa
cs
xor
mov
mov
pop
jle
pop
mov
sub
add
mov
push
adc
pop
inc
push
sub
push
mov
cmc
push
adc
outs
sar
xchg
(bad)
mov
lea
retf
outs
ret
retf
outs
xchg
(bad)
stc
xor
mov
mov
push
sub
xor
mov
mov
fmul
mov
(bad)
stc
fst
retf
out
and
mov
xchg
scas
rcr
mov
sub
call
repnz
push
inc
mov
and
sub
push
sub
sub
lea
pop
jl
adc
sub
mov
sub
add
add
loopne
or
loopne
inc
push
cs
push
push
xchg
or
inc
push
cs
rcl
or
sub
add
shl
loopne
push
xchg
or
sub
add
inc
push
cs
sub
cmp
xchg
or
outs
push
xchg
or
sub
add
add
jb
lahf
lea
iret
popa
out
pop
fadd
pop
cmp
xchg
or
cmp
mov
sub
cld
pop
jno
jl
out
dec
mov
call
or
loopne
mov
mov
mov
pop
and
jnp
mov
scas
mov
fadd
mov
in
mov
scas
inc
push
cs
outs
jecxz
cli
in
inc
fstp
std
sub
cld
ja
jle
std
lock
mov
inc
jne
inc
push
cs
fwait
push
xchg
or
(bad)
mov
or
or
push
adc
sub
retf
push
inc
mov
jb
mov
mov
call
(bad)
in
das
rcr
(bad)
mov
js
test
imul
inc
sub
add
push
(bad)
icebp
jl
mov
mov
sub
add
shl
loopne
or
loopne
mov
cmc
push
gs
pop
lock
(bad)
cmp
xchg
or
sub
add
inc
aas
xchg
cs
jg
push
cs
pop
cwde
jns
add
iret
or
loopne
mov
xor
mov
stos
mov
xchg
or
inc
mov
pop
cmp
inc
mov
jb
arpl
loopne
push
xchg
or
sahf
and
retf
add
inc
push
cs
sub
add
pop
lock
sub
xchg
or
jp
push
cs
add
retf
or
loopne
jo
retf
mov
retf
sbb
and
or
mov
xchg
or
or
jb
xchg
cs
aaa
mov
sub
add
loopne
jecxz
push
gs
adc
sub
inc
mov
lock
push
xchg
or
sub
add
loopne
mov
jle
mov
or
sub
add
shl
loopne
inc
push
cs
sub
jl
adc
sub
push
mov
push
cs
sub
cmp
xchg
or
lock
sub
add
pop
push
xchg
or
mul
fmul
mov
pop
jl
mov
dec
push
xchg
or
in
and
das
shl
xchg
or
adc
sbb
inc
mov
cmp
mov
xor
mov
ins
sub
add
sbb
out
mov
push
xchg
or
mov
adc
cmp
jb
cmps
inc
push
cs
ja
sub
cld
pop
sub
add
xchg
jp
cmp
retf
push
mov
dec
and
clc
mov
or
sub
add
xor
sub
add
or
js
sub
cld
in
ds
add
iret
mov
fldenv
or
mov
xchg
aad
cmp
lock
push
cs
test
dec
and
or
sub
add
mov
xor
jmp
inc
cmp
mul
cs
pop
push
xchg
or
push
in
mov
jnp
mov
inc
scas
pop
mov
loopne
and
pop
jl
mov
in
jl
(bad)
jb
out
mov
out
push
cs
inc
push
xchg
or
adc
sbb
mov
cs
gs
xchg
or
adc
sbb
mov
jg
jp
mov
mul
out
adc
jb
mov
int3
lahf
outs
jbe
xchg
or
push
sub
add
shl
loopne
push
fild
mov
lock
add
pop
sbb
ja
xchg
or
adc
sbb
mov
pop
sub
rcr
mov
sub
add
pop
cmovne
cs
adc
retf
adc
mov
cs
int
xchg
or
lahf
and
clc
sub
mov
int3
dec
jne
or
(bad)
out
jbe
jbe
sbb
addr16
shr
test
sub
jl
adc
sbb
inc
mov
cs
mov
sub
push
dec
xchg
lods
and
outs
push
mov
mov
mov
mov
mov
clc
std
push
xchg
or
sub
add
push
scas
push
sub
add
aas
or
loopne
mov
mov
mov
pop
sub
add
mov
mov
lods
sub
jl
pop
mov
xchg
ds
in
inc
push
xchg
or
sub
add
sar
mov
pop
lock
jo
retf
adc
test
mov
int3
iret
adc
fistp
jnp
cdq
or
push
fstp
jg
mov
xchg
or
scas
push
xchg
or
and
in
aas
add
adc
cmp
jnp
leave
or
sub
jmp
sub
cld
fbld
xchg
or
jae
retf
adc
mov
fst
mov
jo
mov
arpl
loopne
(bad)
ds
jae
daa
inc
mov
cs
mov
retf
add
jb
arpl
loopne
mov
pop
jl
adc
cmp
mov
arpl
loopne
mov
js
int3
call
jnp
mov
cmp
xchg
or
sbb
retf
xor
dec
mov
mov
add
or
cmp
retf
movaps
add
sar
mov
add
stos
ins
adc
movs
pop
jmp
xlat
jge
add
lods
clc
out
inc
call
push
xchg
or
push
adc
add
jb
aaa
(bad)
jno
xchg
lds
retf
xchg
pop
mov
xchg
or
cs
add
jb
mov
push
cs
sub
jl
adc
cmp
aas
inc
popf
pop
mov
xchg
or
ds
mov
std
jo
mov
pop
mov
xchg
or
and
hlt
mov
aas
lds
jno
push
fiadd
pop
in
(bad)
mov
aas
and
sub
jb
aas
mov
test
pop
lock
mov
sub
jb
adc
or
or
mov
mov
arpl
loopne
push
xchg
or
sub
add
loopne
mov
jnp
mov
cs
sub
cmp
inc
mov
jo
mov
arpl
loopne
push
xchg
or
addr16
cmp
xchg
or
sub
add
sub
inc
mov
pop
mov
out
or
loopne
loop
std
inc
mov
sar
push
cs
js
push
pop
aas
hlt
test
sti
mov
inc
mov
pop
jl
adc
or
mov
xchg
or
ins
ja
retf
add
or
or
mov
cs
xor
loopne
inc
push
cs
or
retf
or
loopne
adc
sub
inc
mov
pop
jl
adc
sub
inc
mov
xchg
or
(bad)
mov
test
add
mov
sub
jl
adc
or
push
xchg
or
adc
sbb
inc
mov
pop
jl
adc
or
sub
cld
push
sub
add
pop
push
jnp
and
mov
jg
mov
mov
stos
xchg
cs
push
push
xchg
or
sub
add
mov
push
cs
mov
sub
cmp
xchg
or
adc
add
jb
cmps
inc
push
cs
sub
cld
sbb
retf
or
loopne
mov
in
dec
and
clc
ja
sub
cld
fdivr
xchg
cli
cs
sbb
jnp
or
xchg
or
in
jne
in
inc
sub
add
and
xchg
or
(bad)
(bad)
jb
addr16
push
cs
sub
jl
scas
mov
in
lahf
push
inc
mov
pop
mov
sub
xchg
or
sbb
retf
dec
push
cmp
retf
sbb
inc
mov
cs
sub
cld
dec
sub
add
lahf
adc
mov
lods
sub
mov
mov
adc
sbb
mov
sub
cmp
xchg
or
mov
mov
ins
inc
mov
push
xchg
or
adc
or
jnp
retf
sbb
add
and
pop
lock
push
cs
inc
push
xchg
or
sub
add
pop
cmps
je
xchg
or
adc
add
jb
das
test
cs
gs
jmp
jbe
mov
sub
add
shl
push
cs
mul
mov
jmp
or
sub
add
or
adc
sbb
mov
jl
bswap
and
ds
pop
lods
sub
jl
mov
xchg
mov
sub
cmp
xchg
or
adc
add
jb
outs
and
clc
xchg
mov
push
xchg
or
adc
add
jb
outs
mov
out
jmp
sub
add
loopne
mov
sub
add
shr
pop
lock
push
cs
in
push
xchg
or
adc
sbb
(bad)
pop
push
push
sub
add
shl
loopne
mov
xchg
or
adc
add
jb
out
and
mov
adc
xchg
or
or
loopne
mov
not
in
(bad)
mov
pop
and
clc
adc
push
sub
add
jl
pop
lods
stos
push
xchg
out
sbb
repnz
mov
test
stos
out
push
sub
test
push
mov
pop
push
sub
test
lods
inc
push
mov
adc
jnp
jmp
cmc
inc
test
push
mov
addr16
sub
test
jl
mov
mov
cmp
mov
push
xchg
out
sbb
repnz
into
mov
mov
push
mov
sub
imul
xor
adc
lea
lods
sub
cmp
out
sbb
in
ja
stc
or
ficomp
mov
sub
test
dec
call
push
cmps
push
test
outs
jbe
xchg
idiv
sub
outs
(bad)
mov
or
push
cmc
inc
test
push
aad
pop
mul
mov
inc
fnsave
call
outs
(bad)
imul
(bad)
cmps
test
rol
ins
sub
shl
mov
xlat
popa
jl
mov
stos
ja
aam
aas
jg
or
jp
mov
dec
inc
dec
fcomip
mov
mov
jno
mov
das
aas
pop
cmc
or
in
lods
xchg
mov
push
cmp
push
fimul
inc
fnsave
push
sub
pop
cmp
cmps
aas
jne
scas
push
test
idiv
lods
xchg
jp
inc
mov
lods
or
(bad)
cmps
fimul
jnp
addr16
ins
out
(bad)
push
mov
daa
jne
test
jbe
push
popf
aam
adc
dec
push
test
fistp
stos
cmp
call
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
imul
mov
outs
stc
lods
div
das
jnp
stos
mov
test
aas
scas
jp
mov
(bad)
push
std
mov
sti
mov
into
pop
xchg
mov
jnp
mov
dec
in
aaa
adc
sbb
fisttp
cmps
mov
lods
push
adc
mov
inc
push
mov
cmp
scas
mov
(bad)
push
adc
cmp
sti
addr16
mov
mov
jmp
fst
ins
sub
cmc
sbb
out
stos
push
aas
jmp
cmps
cmp
jmp
hlt
cli
in
cmps
push
mov
mul
test
stos
sub
mov
or
mov
jne
aad
mov
dec
jl
js
xchg
hlt
xchg
sbb
jle
clc
dec
push
cmps
test
and
xchg
gs
xchg
div
xchg
stos
push
adc
push
ja
jg
movs
outs
fs
xchg
lods
arpl
imul
xor
jnp
jmp
lods
into
sbb
test
stc
cmp
pop
add
xor
push
lea
aad
add
sahf
mov
xor
pop
movs
mov
mov
inc
push
(bad)
aam
adc
xor
cli
jns
stos
test
scas
aam
push
jnp
call
ds
(bad)
push
mov
repz
mov
lea
test
inc
push
adc
js
or
ins
loop
movs
mov
inc
stc
js
je
push
stos
inc
jne
pop
mov
lods
out
dec
ins
or
rcl
pop
aas
retf
push
lods
fistp
push
hlt
xchg
or
inc
mov
push
ds
pushf
sbb
sahf
adc
mov
push
aam
pop
mov
jmp
aam
out
pop
test
or
mov
sti
adc
cmp
mov
mov
push
aam
(bad)
mov
imul
sar
xchg
ret
fimul
dec
mov
dec
test
dec
mov
lods
mov
dec
mov
mul
and
mov
lods
into
or
retf
xchg
mov
xchg
(bad)
push
adc
sub
es
jmp
xchg
jp
push
stos
ret
push
ds
cld
jmp
push
movs
ds
daa
test
sbb
mov
push
mov
retf
aad
mov
push
sbb
mov
sub
cmps
mov
mov
aad
dec
movs
call
push
fiadd
cmp
fist
sub
out
add
dec
mov
repz
rcr
mov
out
repnz
out
mov
pop
adc
icebp
loopne
jecxz
inc
outs
sub
dec
mov
loope
mov
cmc
dec
mov
jl
es
adc
jp
push
stos
ret
test
lahf
int3
jmp
fimul
stos
int3
loopne
xchg
int3
dec
rcr
mov
pop
xchg
sbb
stos
fsubr
movs
call
cld
in
out
dec
mov
test
adc
test
mov
jp
push
sti
and
sub
push
mul
out
xor
pop
inc
push
jecxz
push
test
mov
jb
call
sub
stc
js
mov
mov
cmp
movs
and
lods
or
sbb
jbe
arpl
and
mov
aaa
sahf
adc
data16
call
push
stos
inc
mov
sub
inc
cmc
fsubr
and
rcl
fimul
push
lea
jbe
addr16
jns
retf
cmc
repnz
stos
aad
cmp
push
call
push
in
(bad)
repz
fimul
sahf
sbb
jp
push
mov
jp
add
mov
mov
jns
mov
das
mov
fldenv
call
push
sub
mov
mov
aaa
pop
sbb
sub
hlt
adc
jbe
in
sbb
stos
add
scas
call
in
in
xchg
or
mov
mov
mul
dec
jbe
popf
invd
iret
daa
stos
jae
sub
call
test
aas
mov
aaa
nop
clc
or
scas
sar
or
ret
mov
lds
jbe
inc
les
in
sub
(bad)
leave
mov
jge
push
std
pop
jbe
mov
jg
pop
popf
pop
fistp
sbb
cmc
iret
(bad)
ja
iret
push
test
rcr
js
inc
fs
pop
sbb
adc
jb
jo
test
cs
or
aam
aaa
bound
loop
jno
cli
out
adc
xchg
adc
jb
or
fwait
inc
je
(bad)
out
jne
push
retf
sbb
gs
jne
gs
pop
adc
aaa
pushf
xor
stc
clc
lock
push
dec
out
lock
js
dec
js
bswap
std
push
mov
xor
rol
fidiv
mov
cmp
fcom
cld
les
lahf
repz
repz
adc
iret
or
aaa
xchg
pop
xchg
jmp
lock
js
dec
js
jne
popf
(bad)
ret
repz
mov
inc
out
ret
loope
stc
lock
pop
dec
cmp
fist
sahf
(bad)
cmp
iret
jae
popa
imul
xchg
lock
cmp
sbb
jo
pop
adc
aas
xchg
add
ret
iret
jmp
repz
out
xchg
jmp
out
pop
popf
js
adc
into
adc
js
out
or
inc
xor
cld
mov
pop
push
dec
out
loope
xchg
stc
mov
mov
jg
mov
pop
push
mov
push
out
(bad)
sbb
fisttp
jbe
imul
mov
jno
jnp
adc
mov
mov
paddusb
retf
lahf
jb
stc
jmp
loop
cmp
sub
or
push
je
loopne
in
cmp
scas
(bad)
jne
sar
hlt
repz
inc
in
popf
retf
mov
mov
pushf
in
mov
pop
mov
inc
sbb
xlat
outs
(bad)
jbe
mov
lea
loope
mov
mov
rcr
pop
mov
mov
pop
out
outs
cmp
mov
scas
pop
shl
sub
inc
sbb
push
fsub
das
mov
mov
mov
cmps
call
xchg
mov
mov
icebp
out
lds
dec
sbb
in
jl
jnp
sbb
sbb
lahf
mov
dec
mov
pop
fidivr
call
jnp
popf
das
or
dec
test
in
jg
daa
fwait
das
jecxz
mov
scas
ud0
adc
stc
cmc
add
out
pop
movs
repz
into
pop
mov
cmp
jns
js
jno
popf
dec
or
das
ret
repz
inc
sub
cmp
stos
mov
fwait
jmp
mov
pop
mov
fstp
imul
sub
pop
loopne
pop
repz
hlt
jmp
push
push
pop
jbe
xor
sub
addr16
ss
fdiv
adc
sbb
fst
inc
icebp
adc
mov
jmp
and
mov
pop
xlat
adc
pop
jle
in
jl
jmp
aaa
neg
pop
jbe
push
jl
jge
jle
outs
nop
das
ja
(bad)
cmc
pop
fldcw
mov
std
pop
mov
push
pop
push
mov
(bad)
xor
sbb
aad
or
pop
jmp
loop
std
jnp
paddd
scas
pop
mov
call
mov
not
stc
les
sbb
call
test
push
mov
in
popf
clc
(bad)
adc
and
xor
lds
xchg
cmp
movs
popf
ds
adc
ret
into
aaa
neg
pop
jbe
push
jl
jge
jle
outs
lahf
das
ja
(bad)
cmc
sahf
shr
mov
not
lds
fild
push
out
jl
stc
(bad)
jge
(bad)
cdq
out
out
sti
into
xor
popf
arpl
loop
mov
jmp
xor
cli
test
in
hlt
arpl
stos
mov
fmul
dec
popf
stos
mov
iret
mov
addr16
sbb
jbe
scas
loope
lods
out
jb
sbb
mov
sub
mov
mov
shl
cmps
(bad)
cmc
sti
jns
out
out
(bad)
loope
out
out
ret
jne
iret
scas
test
add
les
fs
enter
push
sahf
mov
fcmovnbe
aas
aas
push
aas
gs
ret
leave
shl
(bad)
sar
fcos
xor
pop
into
sar
cmp
imul
jbe
into
pop
adc
jge
scas
pop
adc
sti
int3
ret
into
aaa
neg
pop
jbe
push
jl
jge
jmp
mov
leave
jae
mov
dec
lods
jmp
test
xor
mov
(bad)
(bad)
sti
out
retf
pop
in
out
imul
sar
dec
jle
cli
jae
stc
sahf
lahf
ja
in
lds
aad
std
cmp
jl
fistp
gs
sbb
push
fsub
mov
popf
mov
dec
xchg
dec
aas
mov
cmps
hlt
scas
pop
xchg
cmps
neg
ds
in
cli
retf
mov
xchg
inc
jne
repz
jnp
mov
(bad)
(bad)
in
stos
mov
xor
xor
mov
lea
sbb
into
xor
jno
ret
cli
je
jp
(bad)
call
mov
inc
div
mov
mov
leave
jb
retf
in
jae
cmps
in
rol
xor
fisub
xchg
test
repz
call
ja
enter
jmp
jmp
jae
dec
aas
(bad)
(bad)
ja
adc
sbb
fst
inc
icebp
adc
out
mul
mov
dec
lods
jmp
test
repnz
lock
push
sti
push
ds
cld
cmp
in
mov
push
jne
(bad)
ja
jmp
xor
jg
xchg
pop
jae
dec
aas
(bad)
(bad)
ja
adc
sbb
fst
inc
icebp
adc
out
div
scas
leave
cmp
mov
dec
lods
jmp
cld
pop
idiv
scas
(bad)
hlt
pop
in
clc
ficomp
fldenv
(bad)
mov
push
jp
mov
fiadd
cli
or
cmp
pop
sar
mov
mov
pop
mov
into
daa
xchg
outs
and
jp
push
jns
imul
gs
call
aad
jns
mov
into
hlt
call
adc
jnp
mov
mov
push
lea
xchg
out
outs
xchg
jbe
pop
cmps
movs
mov
stos
arpl
(bad)
data16
aad
push
gs
sti
ds
dec
cmp
outs
pop
mov
add
mov
lods
cmp
push
xchg
dec
push
test
dec
sti
dec
sbb
test
push
stos
mov
xchg
cmp
jne
pop
repnz
jmp
stos
in
xor
pop
jmp
cmp
cmp
(bad)
test
jne
aad
push
jns
sub
ss
ss
sbb
(bad)
cmp
jmp
sub
iret
mov
pop
stos
mov
lock
pop
sbb
fld
les
out
mov
jne
lock
pop
sbb
sbb
stc
xor
les
push
call
push
aad
push
aad
push
aad
push
aad
push
aad
fist
aam
dec
push
lahf
shl
xlat
stos
iret
jne
lock
pop
sbb
cmp
ror
aad
test
js
cli
in
mov
test
jne
push
(bad)
hlt
les
fucomp
stos
jp
test
and
push
not
xchg
in
inc
sub
(bad)
test
push
jmp
jne
push
pop
aad
sahf
cwde
scas
jmp
daa
imul
in
mov
test
jne
push
(bad)
hlt
(bad)
leave
stos
out
leave
stos
fimul
mov
cmps
cmp
arpl
test
stos
arpl
stos
imul
mov
std
push
mov
adc
cmp
test
mov
dec
jne
push
(bad)
pop
movs
xlat
test
jne
push
pop
aad
dec
pushf
movs
scas
cmp
das
push
and
iret
push
lahf
ror
imul
ins
push
(bad)
push
jne
push
not
sub
lods
scas
cmp
mov
(bad)
div
mov
dec
sbb
ins
scas
push
mov
jp
arpl
cmps
mov
jmp
xlat
lods
dec
pop
mov
ja
div
inc
ins
cmp
push
test
inc
pop
sbb
(bad)
test
jne
push
(bad)
je
outs
mov
(bad)
push
jne
dec
int3
push
ins
int
in
pop
movs
fidivr
mov
rol
movs
fcmove
fisub
xor
stos
cmp
iret
xlat
ds
(bad)
sbb
stos
xor
imul
mov
dec
sbb
arpl
or
mov
mov
push
adc
cmp
les
aad
add
out
aad
mov
mov
mov
jmp
aad
pop
fstp
dec
sbb
sbb
pop
push
mov
push
mov
lods
mov
mov
jmp
neg
push
ss
push
(bad)
pop
push
mov
sbb
arpl
or
mov
push
test
push
imul
pop
lods
lea
jl
mov
mov
pop
mov
pop
mov
in
jmp
popf
cmp
jne
push
not
sub
data16
push
(bad)
mov
jne
int
push
jnp
stos
imul
jle
pop
mov
mov
ficom
gs
mov
arpl
pcmpgtw
pcmpeqw
test
stos
arpl
cmp
stos
arpl
inc
aad
lea
mov
arpl
sti
adc
cmps
ds
movs
mov
push
fldenv
sub
cld
dec
fsubr
push
gs
jno
adc
pop
sbb
jle
scas
sbb
lahf
push
clc
imul
dec
push
sti
xchg
ds
lods
sub
std
retf
clc
jae
xlat
ja
iret
pop
outs
mul
scas
ja
(bad)
into
mul
scas
cli
mov
aas
data16
scas
aam
jge
outs
stos
jns
jge
mov
not
(bad)
mov
std
mov
sub
jbe
mov
jge
mov
lods
jns
jge
mov
xchg
sar
jne
stos
iret
aaa
aad
(bad)
xchg
(bad)
push
cmc
stc
daa
jne
jg
in
scas
lods
rcl
push
(bad)
jp
lahf
add
lods
movs
mov
push
pop
inc
pop
scas
into
cmp
xchg
pop
inc
xchg
push
jne
cmps
mov
push
aad
cmps
std
xchg
dec
(bad)
ss
mov
(bad)
jno
std
jmp
std
jl
mov
pop
mov
jmp
test
outs
or
retf
inc
retf
in
mov
xchg
mov
inc
ret
ss
mov
ss
jae
fsub
jmp
lods
jmp
test
movs
into
sbb
(bad)
cmp
test
out
mov
jne
imul
popf
aaa
imul
jns
mov
cmp
xchg
cmp
in
lods
into
lahf
imul
push
popf
stos
adc
aam
xchg
cmp
mov
aad
ja
cli
fnstcw
inc
std
sbb
mov
iret
loope
jmp
cmp
es
std
cmp
inc
std
sbb
mov
aas
jae
jmp
add
jae
cmp
sub
inc
std
pushf
sahf
mov
aas
repz
arpl
push
cmp
outs
cmp
jle
cli
cmp
in
out
popa
aas
scas
or
pop
or
fst
div
mov
mov
sub
sub
jmp
std
jmp
push
scas
packssdw
pop
(bad)
jl
lods
mov
pop
out
lock
push
imul
aaa
xchg
test
or
push
aaa
stos
xchg
jmp
(bad)
outs
push
cmps
jg
shl
ret
cmp
mov
enter
mov
or
shl
cmp
mov
jno
dec
packssdw
or
iret
xchg
lahf
adc
sahf
pop
xchg
into
or
or
dec
js
xor
or
push
(bad)
sub
xchg
xchg
mov
(bad)
leave
popa
jmp
pushf
push
(bad)
lock
(bad)
aam
stos
aam
pushf
sbb
xchg
fdivr
mov
mov
mov
or
sbb
repnz
pop
and
mov
pop
push
bound
mov
movs
cvtpi2ps
fstp
hlt
mov
addr16
cdq
gs
cmp
inc
call
xor
hlt
jecxz
int
sub
fst
daa
mov
or
outs
sub
aad
jl
rcl
jge
push
mov
mov
inc
mov
rcl
push
pop
ror
adc
xlat
cmp
in
std
cmp
xchg
mov
push
cmps
aaa
xchg
in
test
mov
xchg
scas
dec
test
stos
outs
push
(bad)
jae
pop
jp
fwait
int3
shl
aam
xchg
xchg
jle
out
leave
ins
aam
pop
sbb
lea
retf
push
mov
outs
xor
or
xor
adc
cdq
and
ss
push
aaa
sbb
dec
pop
push
jmp
mov
mov
dec
mov
push
scas
pop
popa
jmp
int3
push
xchg
aam
jb
mov
popa
mov
inc
mov
aad
push
xchg
cs
aad
pop
add
adc
or
jmp
lods
test
jno
not
fist
out
iret
push
in
sub
test
mov
outs
xor
fdiv
adc
pusha
stos
inc
mov
fiadd
mov
fcomp
push
xchg
mov
aam
xchg
pop
rol
pop
sbb
xchg
push
fimul
xor
xor
sbb
jge
in
sub
aaa
or
xchg
push
sbb
inc
imul
lods
xchg
push
jmp
mov
mov
mov
jge
sbb
dec
push
imul
dec
imul
outs
movs
mov
and
mov
ret
push
das
xchg
cmp
mov
jl
mov
or
shl
xor
jmp
dec
aam
push
cld
movs
aam
and
jmp
mov
and
fcomp
inc
rcr
push
dec
retf
xchg
mov
fldenv
xchg
dec
dec
xor
dec
inc
fbld
jbe
mov
dec
cdq
sti
mov
aam
xchg
adc
sbb
jo
and
xor
bound
in
movs
mov
call
cmp
cwde
jp
mov
and
cmp
(bad)
movs
lods
movs
fwait
xchg
sbb
xchg
mov
fcmovnbe
xor
or
clc
fisubr
icebp
xchg
mov
in
in
clc
mul
rcr
movs
lods
inc
push
dec
pop
es
and
cmps
fs
and
rol
dec
leave
jp
jno
test
inc
push
(bad)
jmp
fs
mov
clc
(bad)
jnp
push
mov
dec
mov
movs
les
xchg
lods
pusha
sub
out
daa
cmp
sbb
jle
mov
scas
fcmovbe
sub
sbb
jne
sbb
sti
mov
mov
movs
inc
push
in
fst
mov
cmps
inc
lods
dec
jmp
dec
xchg
xchg
sub
cmc
adc
cmp
xchg
jmp
mov
fwait
scas
test
aaa
jo
call
mov
jmp
aad
mov
mov
push
jmp
fimul
push
inc
fadd
fcmovbe
stos
ss
call
ins
(bad)
fstp
mov
call
xor
cwde
mov
jbe
loop
stos
xchg
mov
in
pop
xchg
dec
retf
push
lods
in
sar
mov
mov
fsub
(bad)
(bad)
push
pop
imul
pop
ins
loopne
(bad)
mov
out
sar
adc
push
jne
mov
pop
mov
xchg
mov
push
xor
inc
push
scas
lea
sub
lods
popf
ins
sub
mov
cmp
adc
retf
dec
dec
scas
mov
dec
retf
into
retf
cmps
and
sub
ret
clc
fidivr
hlt
and
(bad)
jno
std
jnp
loope
jbe
mul
fisubr
shl
mov
out
push
dec
retf
mov
mov
jnp
imul
dec
arpl
shl
mov
out
ss
cli
imul
xlat
cmps
sbb
mov
adc
jge
jmp
cmp
jecxz
xlat
hlt
mov
je
mov
and
aad
push
fcomp
mov
mov
dec
fwait
mov
xchg
ds
outs
gs
arpl
push
aam
cdq
mov
pop
xchg
jmp
dec
mov
mov
scas
sub
pop
iret
cmc
push
aam
pop
out
mov
cmp
sti
dec
push
ds
and
push
push
inc
mov
inc
rcr
jmp
aas
arpl
jle
push
sub
xchg
aam
jnp
imul
mov
je
dec
add
int3
js
dec
(bad)
call
adc
cs
pop
popa
imul
fsin
cs
ficomp
aas
push
xor
ds
push
fwait
or
mov
jecxz
jns
sti
adc
scas
xor
gs
fnstcw
sub
xchg
xlat
mov
sbb
dec
add
(bad)
shr
push
fs
hlt
sar
push
xchg
mov
pop
popa
imul
dec
sbb
jmp
jge
ja
cmps
popf
jmp
add
push
das
loopne
(bad)
dec
aad
push
jmp
push
jge
fiadd
cdq
popa
pop
mov
enter
je
cmps
mov
pop
adc
(bad)
loopne
daa
xor
pop
push
ss
and
add
pop
adc
jnp
pusha
repz
call
fadd
in
adc
fcmovne
xlat
push
add
pop
mov
jnp
push
inc
data16
dec
cmp
out
sti
punpckhdq
fld
cmc
mov
or
sbb
cmp
cmp
fs
jp
imul
mov
and
push
outs
vmwrite
jnp
push
inc
rol
in
cmc
sahf
sbb
xor
jp
xchg
test
in
rol
inc
sar
sub
loop
dec
pop
dec
jmp
cmp
out
sub
mov
ror
mov
cs
mov
(bad)
rcr
adc
pop
cmc
pop
cs
push
mov
sahf
iret
movs
and
ins
inc
(bad)
(bad)
fidivr
xor
scas
jb
and
retf
mov
jmp
lea
retf
ret
mov
inc
mov
jo
mov
fstp
push
inc
cld
inc
mov
hlt
vmovntps
sbb
scas
js
fnsave
fisttp
pop
out
cmp
ret
pop
inc
sub
push
jmp
fist
jae
sbb
sbb
mov
pop
fidivr
loope
mov
push
mov
popa
sub
pop
pop
sbb
aam
inc
imul
fsubr
lods
or
sbb
mov
sub
cs
push
jge
pop
arpl
xchg
jp
push
outs
mov
sub
lea
or
icebp
adc
cmc
sbb
and
sbb
mov
int
scas
sbb
mov
xchg
jbe
dec
mov
jno
pop
in
loope
jmp
pop
mov
movs
pop
sbb
jnp
repz
sub
jmp
add
imul
pushf
sub
jg
jb
and
push
and
xchg
inc
shl
ror
iret
push
outs
mov
pop
cmp
add
sti
retf
aad
mov
int3
add
ins
shl
(bad)
je
out
sar
mov
mov
mov
outs
aaa
ins
cmps
adc
shl
int3
je
leave
xor
cmp
mov
stos
mov
in
mov
pop
ficom
(bad)
repnz
loop
or
push
add
inc
pop
and
add
or
pop
push
sbb
push
cmp
in
pop
push
clc
mov
inc
mov
fadd
in
ret
ret
ds
cmps
pop
xchg
add
cmp
push
inc
fist
int
sub
cmp
in
popf
call
pmuludq
int3
fisttp
mov
out
mov
in
sub
fwait
lds
sbb
jecxz
bound
jp
or
movs
test
and
and
jnp
test
ficomp
sub
or
test
push
stc
xchg
xchg
aaa
ins
xor
mov
gs
cli
xor
scas
jne
test
or
add
xor
push
xor
pop
sbb
jecxz
inc
enter
xor
add
push
and
das
ret
(bad)
xor
or
dec
jmp
(bad)
inc
retf
push
push
xchg
mov
lea
sub
push
sbb
mov
add
cmp
aam
sub
xchg
popa
or
cmp
push
(bad)
fcom
jge
out
pop
fwait
ins
leave
sub
inc
stos
nop
mov
(bad)
or
xchg
test
dec
ins
das
cdq
mov
pop
xor
mov
leave
ins
adc
xchg
cmp
in
and
icebp
xchg
test
imul
mov
mov
cmps
repnz
(bad)
loop
cdq
lea
enter
push
push
and
xchg
addr16
retf
sub
cmp
not
push
mov
lea
jg
xor
xchg
test
add
test
fidiv
mov
je
ss
pop
imul
stos
fadd
jge
sbb
enter
xchg
sub
jge
sub
xchg
push
int
add
fadd
mov
fwait
mov
lods
je
div
xchg
xor
movsx
adc
sub
mov
fidivr
icebp
(bad)
in
mov
icebp
xchg
fdivr
pop
repz
mov
mov
lds
outs
into
mov
in
out
mov
icebp
or
adc
ds
inc
lar
loop
cmp
ds
in
sbb
sbb
sbb
sbb
xchg
adc
sbb
(bad)
push
push
push
adc
and
and
in
(bad)
call
ins
inc
cmps
push
jmp
popf
xor
hlt
ins
cmp
mov
popf
addr16
pop
ficom
imul
fsubr
loope
call
push
push
push
sbb
pop
cmps
or
push
mov
into
fs
cmp
xchg
imul
xor
cmovo
ror
mov
jnp
sub
(bad)
je
punpckhdq
mov
cdq
adc
arpl
xchg
inc
fiadd
fst
data16
cmp
mov
js
(bad)
mov
jecxz
and
push
xchg
ss
xlat
aaa
mov
gs
arpl
sub
bound
lods
xor
jns
lods
clc
nop
xor
je
ss
in
fs
out
fwait
test
dec
cs
push
mov
scas
rol
leave
dec
into
mov
push
lea
dec
mov
leave
dec
into
(bad)
adc
pop
sbb
ds
or
daa
mov
sbb
pop
xor
xchg
pop
dec
pop
das
jno
or
push
in
cmp
mov
dec
fmul
ret
push
sbb
cmp
mov
dec
mov
jecxz
out
cmp
jns
ret
push
mov
(bad)
cmp
pop
mov
div
cmps
sbb
pusha
in
outs
fcomp
setbe
sahf
test
loop
jae
mov
gs
cmp
mov
pop
sub
push
xchg
pop
fmul
xor
sub
(bad)
and
retf
out
xchg
mov
cvtdq2ps
adc
jge
imul
cmp
ds
push
xchg
mov
sbb
add
and
scas
enter
fsubr
int
push
add
push
or
xor
imul
dec
test
ret
pop
push
es
rol
cvtdq2ps
sub
rcl
add
retf
mov
lock
xchg
es
(bad)
ins
imul
dec
xchg
mov
xchg
dec
xchg
(bad)
cmp
and
clc
in
mov
ret
lock
out
jge
test
dec
addr16
ret
xor
dec
fwait
test
shl
push
sub
jne
xchg
shr
or
cmp
sub
sub
xor
mov
fdiv
xor
cmps
cdq
cmp
in
pushf
les
shl
test
popa
cmp
sub
fs
pop
cmps
fldenv
mov
leave
dec
push
dec
repz
in
xor
in
popa
xor
push
ss
imul
pop
test
popa
pop
popa
xchg
push
xchg
push
jo
push
ss
int3
repnz
mov
add
ins
cmp
xchg
cmp
push
dec
adc
(bad)
loop
pop
rol
mov
xchg
push
aad
push
iret
jne
stc
dec
jmp
jmp
push
fnstenv
xchg
fnstcw
pop
jge
test
mov
scas
adc
mov
scas
dec
mov
push
(bad)
ss
jbe
shl
jne
jmp
fcmovnbe
sbb
js
shl
jle
cmps
xor
popa
push
xchg
jp
xchg
push
outs
(bad)
xchg
(bad)
dec
jmp
movs
fimul
fcomi
fs
inc
lahf
dec
mov
test
cmp
cmc
jbe
fwait
lds
mov
aam
icebp
adc
inc
imul
and
push
or
inc
out
cmp
mov
pop
iret
xor
(bad)
out
lds
(bad)
and
dec
clc
cmp
xchg
push
fs
mov
cmc
sbb
clc
js
push
stos
xchg
cmps
sbb
mov
cmp
pop
retf
push
pop
cmp
push
test
pop
push
pop
jmp
mov
lods
jp
hlt
and
fwait
xor
dec
(bad)
xchg
out
sub
push
test
jb
mov
in
lods
xor
fstp
xor
pop
and
jnp
xchg
pop
(bad)
enter
popw
and
sub
ds
out
and
test
push
fsub
pop
jns
stc
(bad)
enter
in
sbb
inc
ficom
lahf
sub
sub
push
pop
mov
retf
dec
xchg
xchg
in
test
movs
in
push
fld
test
not
sub
jns
fstp
xchg
sbb
mov
in
sub
fist
test
lahf
cdq
jp
pop
fist
out
ror
jmp
mov
movs
pop
movs
arpl
outs
sub
icebp
movs
jo
js
jg
clc
push
jo
js
jle
js
jne
clc
cmp
pop
pop
out
pop
inc
test
adc
dec
(bad)
fcomp
repz
test
jg
mov
packssdw
xor
mov
pop
out
cdq
cs
dec
xchg
cmp
in
sahf
into
or
and
loop
test
jmp
push
ds
dec
retf
or
xor
push
ds
xor
xchg
repnz
or
dec
ret
cs
dec
xchg
jns
or
xchg
sbb
dec
xchg
sbb
lahf
xor
into
xchg
sbb
sbb
mov
out
repz
out
or
fwait
mov
xor
movs
(bad)
(bad)
cdq
add
js
cli
fprem
adc
jns
clc
jae
pop
adc
and
(bad)
sbb
or
int3
dec
push
ss
and
push
push
outs
cmp
adc
pop
loop
pusha
(bad)
pusha
or
xor
adc
jmp
pop
imul
retf
sbb
popf
inc
cdq
aas
mov
(bad)
loope
dec
out
add
jle
hlt
xchg
mov
cmp
jp
lahf
cs
pop
cmp
fnstcw
pop
cld
fldenv
dec
sti
dec
stos
rol
shr
mov
inc
inc
dec
cmps
sub
iret
rcr
mov
pop
pusha
jp
in
xor
mov
sbb
out
xor
xor
sti
xor
xor
pop
cdq
add
cld
retf
jp
push
out
ror
sub
aas
sub
(bad)
mov
(bad)
sbb
dec
mov
dec
cmps
pop
inc
shl
and
sbb
rol
shl
xchg
jp
bound
xor
mov
pop
arpl
sahf
popa
xor
inc
sub
mov
dec
mov
call
popa
xor
pop
pusha
sbb
dec
ret
dec
xchg
dec
cmp
jbe
cmp
jge
dec
jae
fs
aaa
sub
scas
clc
push
sub
je
data16
ds
jp
gs
iret
popf
fisttp
pop
arpl
dec
dec
int3
add
in
cmps
ret
mov
je
push
ss
(bad)
int3
loopne
loop
cli
jns
in
push
xchg
popf
mov
mov
adc
data16
(bad)
mov
mov
jecxz
mov
xor
call
and
fnstenv
ss
sahf
and
leave
popf
and
lahf
and
daa
cwde
and
inc
aas
pop
and
lock
pop
out
movs
mov
xchg
clc
push
cmp
mov
les
idiv
(bad)
stc
adc
xor
outs
call
jae
jmp
and
int
lods
fwait
mov
iret
inc
lods
fwait
mov
aaa
push
out
cwde
sub
stos
pop
and
(bad)
sbb
int
push
xchg
mov
sub
mov
add
pop
retf
inc
fidivr
shr
aaa
dec
out
repnz
stos
cld
cmp
frstor
test
dec
out
add
repz
cmp
jnp
and
mov
pop
leave
fcom
das
xchg
mov
out
pop
and
pop
mov
pop
out
jnp
inc
test
cmp
scas
fisub
shl
test
mov
shr
xchg
jne
pop
and
xchg
mov
mov
sahf
repnz
jp
retf
dec
adc
and
idiv
gs
mov
dec
out
(bad)
fs
std
sub
sub
sub
lods
sub
in
sub
or
jp
push
retf
push
retf
push
retf
pop
sub
scas
xchg
mov
pop
repz
in
stc
xor
test
xor
int
lds
pushf
stc
mov
out
jl
add
xor
push
(bad)
mov
cdq
dec
sti
sti
xor
jge
dec
out
mov
fsubr
retf
push
lock
sahf
ret
pop
(bad)
test
push
mov
int3
scas
pop
sub
rep
pop
sub
retf
jae
add
scas
xchg
push
lock
in
gs
sub
xlat
and
xchg
pop
adc
push
pop
sub
or
xchg
mov
jle
jbe
mov
jg
cmp
fst
pop
retf
inc
scas
sbb
imul
repz
sub
mov
mov
cmp
scas
and
mov
movs
in
enter
pop
ins
xchg
in
push
jge
hlt
and
mov
cli
xchg
pop
and
(bad)
pop
and
leave
das
adc
sub
mov
dec
pop
dec
mov
adc
jp
les
jge
xchg
pop
mov
sub
ja
jmp
jecxz
jns
jle
pop
sub
push
iret
add
push
dec
mov
pop
dec
mov
sub
outs
das
cs
mov
das
loope
xchg
test
retf
or
jbe
lods
ret
fsubr
aaa
mov
sbb
mov
loope
icebp
dec
out
icebp
inc
test
icebp
mov
std
dec
icebp
xor
dec
icebp
sub
dec
icebp
cmps
ret
inc
into
popf
loop
out
popf
loop
(bad)
popf
loop
rcr
pop
(bad)
pop
mov
neg
out
mov
fs
mov
fs
out
xchg
aad
xchg
arpl
retf
gs
sbb
cmc
jo
retf
sub
dec
cmp
push
fild
(bad)
push
cmp
dec
cmp
jns
cmc
sub
movs
sahf
in
xchg
jno
ja
cmp
jnp
not
cmp
cmp
jno
aam
cmp
iret
in
dec
jmp
cmp
iret
in
dec
xchg
lds
and
mov
shl
ja
clc
mov
xor
sub
push
xor
es
imul
(bad)
xlat
ins
cmps
test
mov
shl
mov
cwde
xchg
sbb
dec
add
xchg
sbb
cmp
addr16
ja
cmps
inc
or
test
je
xor
mov
in
cmp
es
sar
scas
ror
fisubr
popa
jae
pop
aaa
dec
sub
dec
sbb
mov
hlt
sahf
push
pop
and
pusha
cli
enter
frstor
out
xchg
jge
xor
mov
(bad)
fstp
cmps
and
shl
mov
pop
and
jge
jle
fld
arpl
xchg
repnz
push
xor
dec
mov
cmps
(bad)
sbb
out
popf
test
xlat
sub
push
div
pop
sub
lds
leave
sub
retf
cdq
data16
pop
stos
in
push
lahf
jmp
sti
sub
addr16
lds
dec
fist
shl
fisub
(bad)
out
push
cmps
or
lds
adc
enter
hlt
pusha
pop
mov
in
xor
xor
sti
lds
sti
and
es
fwait
int
ins
es
les
or
sub
xchg
out
xchg
push
js
dec
pop
repz
pop
xor
sti
and
gs
and
jmp
and
jp
bound
sti
add
es
push
nop
mov
inc
idiv
add
add
add
lea
call
and
mov
rcr
xchg
push
fs
adc
mov
xchg
push
in
mov
xchg
push
in
adc
sub
icebp
movs
or
adc
pop
sbb
inc
jmp
mov
cmps
cdq
loopne
mov
inc
(bad)
nop
gs
xor
mov
xchg
enter
sbb
popa
jae
xchg
enter
arpl
pusha
rep
pop
jp
imul
scas
fdiv
push
dec
jge
mov
ins
push
data16
xor
sub
sahf
mov
jne
cdq
rcl
sar
jne
push
js
stc
scas
in
test
shl
inc
and
test
test
push
sbb
dec
xchg
call
sbb
test
movs
mov
gs
lea
test
mov
lock
cmps
inc
xchg
aam
xor
test
je
loope
cld
push
js
addr16
cli
into
sti
mov
xchg
arpl
mov
enter
nop
(bad)
mov
sub
(bad)
mov
cwde
cmp
push
add
(bad)
mov
mov
dec
sti
push
inc
jmp
jns
xchg
test
dec
add
xor
xor
popa
cmps
(bad)
sub
or
mov
cdq
pop
adc
and
sar
sub
xor
dec
xor
mov
dec
and
sar
ror
xchg
imul
mov
int3
and
inc
cmps
stc
data16
dec
lock
xlat
mov
mov
ret
pop
sub
xor
shr
cmps
pop
sub
lods
xor
push
ss
cmp
arpl
push
cli
sub
cmp
stos
and
dec
jge
xor
test
lahf
inc
movs
mov
inc
xor
push
sbb
(bad)
int3
mov
xchg
and
aam
ficomp
imul
fdiv
xlat
daa
repz
ins
leave
and
pop
and
gs
xor
jg
hlt
scas
int3
hlt
dec
xor
mov
pop
sub
pop
imul
cmps
mov
lds
push
pop
mov
xor
cmovp
pop
fmul
arpl
bnd
xor
pop
jp
mov
call
out
xchg
gs
stos
and
(bad)
in
cmp
mov
ins
loope
mov
xchg
repz
pop
ja
pop
(bad)
pop
imul
daa
and
push
pop
gs
ds
cmc
movs
push
inc
mov
sbb
nop
repz
js
imul
test
cmc
sub
or
mov
mov
and
out
aad
lock
jmp
repnz
out
sub
dec
cld
int
sub
shl
loope
dec
push
jmp
ins
add
jb
pop
xor
cmp
daa
(bad)
in
cmp
pop
in
ds
mov
fcomi
sbb
neg
pop
mov
dec
push
jl
inc
(bad)
pop
push
icebp
cmp
pop
pop
or
std
jns
es
icebp
and
jns
pushf
ret
das
into
repz
out
repz
(bad)
repz
out
adc
ror
shr
das
pusha
cmc
pop
rcr
and
loope
mov
std
pop
fs
(bad)
bound
mov
cmc
fidiv
push
inc
out
(bad)
pop
in
aad
inc
hlt
(bad)
movs
int3
scas
dec
xchg
rcl
clc
dec
inc
xor
nop
mov
push
and
retf
mov
sbb
sub
xchg
icebp
inc
in
mov
hlt
lahf
sahf
mov
sti
sub
fsubr
xchg
aad
dec
stos
hlt
sub
out
push
mov
in
leave
push
sbb
stos
aaa
mov
push
sbb
xchg
mov
xchg
fisttp
mov
mov
lods
jle
movs
mov
mov
stc
xchg
mov
inc
movs
xchg
fs
das
leave
sahf
pop
call
in
jmp
hlt
lahf
(bad)
in
std
xor
xor
icebp
fstp
and
xlat
sbb
outs
mov
jg
cmp
pop
inc
mov
xchg
pop
jb
das
sahf
jecxz
pop
cld
(bad)
js
lock
or
xchg
lds
in
mov
inc
mov
gs
fnsave
aad
retf
cli
fwait
mov
(bad)
fwait
mov
neg
gs
popf
aaa
movs
fnsave
adc
fist
shl
and
xchg
aad
ss
sbb
fwait
fs
or
mov
fisttp
push
std
dec
mov
or
cmc
jbe
stos
push
mov
inc
cmps
rcl
jno
outs
retf
ja
jl
aad
mov
cmp
mov
dec
jne
jle
out
mov
push
push
imul
pop
mov
fadd
shr
popa
jae
cmps
fsubrp
cdq
aam
cmp
jp
jg
test
fist
xor
mov
and
nop
or
mov
xor
inc
sub
mov
imul
mov
mov
ins
cmps
pop
inc
sub
arpl
ffreep
scas
cs
pop
push
imul
sub
push
and
fwait
lds
pusha
xor
outs
in
imul
fistp
test
popa
pop
arpl
fld
retf
lea
ins
add
fistp
pop
dec
sbb
push
add
xchg
add
ins
push
rcl
inc
sub
dec
(bad)
lahf
test
dec
pop
dec
jmp
ret
int3
in
mov
shl
pop
fsincos
rol
add
pop
mov
push
push
mov
or
int
ficom
sti
mov
scas
inc
mov
xchg
mov
stos
sub
mov
bound
pop
dec
jmp
movs
mov
inc
es
add
xor
sub
test
dec
outs
or
or
shl
xchg
popf
cmps
xor
pop
xchg
xchg
pop
fcmovnbe
mov
shl
jle
in
rol
push
mov
fcomp
pop
cmps
les
(bad)
movs
mov
sub
retf
pop
xchg
imul
xor
jp
out
dec
dec
int3
shl
shl
iret
hlt
dec
iret
ret
daa
popf
mul
mov
fist
cdq
sar
adc
popa
jge
cmps
outs
cmc
mov
mov
jmp
add
rdmsr
push
dec
rol
out
retf
sahf
mov
xchg
mov
mov
mov
fst
imul
movs
iret
hlt
inc
xor
mov
ss
bound
clc
js
ss
outs
xchg
std
loope
xchg
pop
push
fiadd
fs
jle
xor
jg
cli
and
mov
add
or
pop
lahf
imul
cli
pop
and
jl
fwait
jmp
retf
jg
stc
jae
sub
out
adc
in
(bad)
dec
xchg
mov
xchg
cmp
jae
clc
push
data16
push
data16
push
out
call
and
fild
jae
ins
xchg
jns
mov
adc
ins
xchg
mov
pop
(bad)
mov
retf
into
or
and
mov
mov
jno
daa
fst
lahf
(bad)
xlat
or
pop
ja
and
in
xor
sbb
in
(bad)
ds
cmc
aad
mov
sub
sti
test
adc
mov
imul
sub
aad
dec
test
cld
cdq
clc
jmp
xor
inc
lea
(bad)
mov
sub
pop
pop
sub
pop
repz
dec
mov
sub
fadd
out
jns
out
adc
ds
mov
xchg
and
sbb
cmp
cmp
xor
pop
mov
xor
in
lea
cdq
push
dec
imul
cmp
mov
jne
(bad)
hlt
sub
dec
cmc
sub
push
push
(bad)
fnstcw
je
xchg
adc
cmps
xchg
stos
retf
ins
js
mov
mov
shl
mov
mov
inc
xchg
jmp
mov
fwait
pop
mov
push
iret
jp
xor
inc
es
aam
sub
push
bound
jg
xor
xchg
jp
lods
xchg
mov
retf
jmp
mov
pop
xchg
test
cld
in
push
cmps
in
mov
pop
sahf
dec
in
lods
mov
pop
xchg
dec
in
mov
mov
adc
jmp
call
(bad)
cmps
movs
push
iret
enter
stos
rcl
cli
xchg
or
enter
stos
rol
pop
jae
out
out
lods
mov
mov
in
neg
fistp
cdq
pop
out
lods
sbb
test
ficomp
dec
jmp
lds
aam
cli
pop
mov
adc
jg
mov
repz
cdq
inc
pop
push
sub
fwait
xor
push
mov
or
jbe
retf
sbb
push
sahf
sub
inc
and
sub
in
outs
push
xor
pop
mov
xor
cmp
sbb
aaa
cmp
cdq
jmp
sub
ins
in
jns
jecxz
and
inc
cmps
xor
sbb
clc
scas
or
mov
inc
ins
sahf
ins
xchg
sbb
mov
loope
retf
sbb
imul
mov
jle
add
jp
inc
outs
sub
mov
lea
test
in
int
and
or
sbb
inc
cmp
xor
rol
sbb
or
xor
aam
sub
cmp
and
mov
mov
pop
push
mov
rol
dec
xor
jecxz
xor
mov
pushw
xchg
arpl
std
and
xchg
sub
xor
adc
out
inc
mov
adc
addr16
xor
jl
sbb
xchg
gs
dec
dec
int3
and
sbb
jecxz
mov
jbe
add
and
add
cdq
push
xor
xor
test
xchg
retf
push
pop
push
mov
fmul
inc
cmps
or
xor
imul
aaa
les
mov
fs
and
fmul
jecxz
cmc
push
add
and
push
iret
push
mov
add
xlat
daa
retf
dec
jmp
jp
add
cdq
fimul
inc
and
imul
dec
push
cmp
xchg
cmp
retf
mov
dec
pop
jns
sub
ficom
xchg
sub
aam
iret
xor
push
shl
xor
jmp
and
mov
push
test
test
cmp
iret
lods
pop
mov
xchg
into
xor
pop
xchg
xchg
cmp
and
pop
stc
or
pop
xchg
not
push
sbb
pop
loop
adc
jo
enter
fs
adc
imul
push
mov
push
(bad)
rcr
sub
mov
push
and
jne
(bad)
shl
(bad)
mov
leave
pop
cmp
jp
mov
xchg
mov
mov
cli
pop
mov
inc
cld
dec
(bad)
pop
mov
neg
mov
not
cmp
aam
push
xchg
jp
(bad)
jnp
mov
dec
sbb
imul
xor
lods
pop
jno
lods
add
(bad)
mov
mov
in
xor
cmps
cmc
rcl
cmp
movs
ins
cmps
xlat
rol
imul
(bad)
xchg
cmp
inc
arpl
not
fs
cmps
dec
xor
retf
push
pop
ret
addr16
or
adc
xchg
je
push
pusha
cmp
jo
mov
pop
cmps
pop
xchg
je
adc
int
hlt
jge
mov
sbb
shl
mov
sub
scas
cmp
cmp
mov
shl
inc
shl
push
xchg
outs
fmul
add
jmp
jno
push
mov
xchg
hlt
sahf
loope
jge
add
pop
sbb
jle
movs
int3
loope
dec
dec
sub
out
daa
cmp
sub
or
cmps
retf
je
mov
(bad)
cdq
sbb
aaa
cmc
outs
inc
xor
mov
sub
adc
dec
xor
je
jmp
cmps
stc
cmps
mov
ret
test
pushf
mov
fcmovne
add
or
popa
jp
je
push
xor
out
(bad)
jno
das
sti
lods
add
jle
inc
jbe
bound
arpl
int
adc
sbb
push
rol
icebp
cdq
outs
retf
ja
hlt
add
gs
aad
fwait
jmp
mov
push
shl
in
jecxz
sbb
sti
jmp
data16
test
adc
sbb
jle
pop
mov
cmp
dec
cli
lods
(bad)
xchg
ds
arpl
imul
movs
das
(bad)
pop
sbb
push
(bad)
mov
jecxz
sbb
cmp
inc
popa
pushf
hlt
mov
(bad)
leave
cmp
jno
push
lahf
sub
jge
inc
pop
and
pop
pop
and
scas
dec
fimul
ret
aad
fistp
cmp
mov
cmps
ja
sar
std
loopne
aam
add
add
fwait
imul
xor
cmps
jl
addr16
rol
lods
push
mov
pop
jg
adc
inc
retf
fistp
popa
ficom
dec
pop
push
shl
das
fiadd
jge
int3
push
push
imul
add
stos
cmp
test
xor
pop
loope
pop
lahf
sub
out
mov
cmp
fldcw
cmp
es
retf
cli
inc
cdq
(bad)
(bad)
inc
cdq
rcr
inc
mov
aaa
aas
push
out
push
cwde
sub
sub
call
js
stc
dec
pop
call
cmps
dec
jne
xchg
fdiv
(bad)
and
test
outs
xchg
hlt
aam
jp
ss
dec
jp
pusha
cli
movs
mov
dec
jp
xor
aas
dec
cli
in
xor
cmps
mov
adc
shl
fisub
xchg
sahf
fld
jnp
jnp
hlt
fisub
out
xchg
cmp
data16
unpckhps
xor
mov
sbb
xlat
jnp
cwde
mov
outs
out
push
cdq
or
retf
dec
aas
jmp
in
xchg
dec
and
and
test
cmp
cmp
retf
mov
push
mov
mov
retf
and
push
ins
retf
test
push
ficom
and
add
outs
(bad)
fist
sti
mov
xchg
fwait
or
ss
dec
jnp
(bad)
dec
imul
and
pushf
adc
cmps
lahf
and
(bad)
std
dec
jb
jle
jbe
leave
fdivr
cmp
iret
mov
retf
into
sub
or
fldenv
fcomp
xchg
gs
jns
iret
aas
pop
jbe
sbb
fimul
fwait
ds
jbe
push
imul
loopne
mov
repnz
enterw
nop
pop
cmp
cmps
xchg
pusha
jae
enter
dec
dec
std
sbb
cmps
ror
fimul
xor
fs
out
lods
cdq
mov
jb
fnstenv
lds
xor
test
pushf
cdq
loop
movs
cdq
xor
cmps
js
adc
cli
xor
lahf
retf
xor
ror
xchg
mov
and
jecxz
mov
out
leave
js
pop
mov
repz
mov
mov
fxch
movs
pop
js
pushf
and
sahf
mul
cmp
addr16
sahf
cs
xchg
js
int3
xchg
cmp
mov
sub
fs
dec
sbb
cmp
aam
retf
ret
push
pusha
mov
cdq
addr16
mov
movs
push
fs
push
sahf
and
in
popf
and
pop
ds
out
cmp
jnp
inc
mov
test
dec
mov
sahf
sub
pop
cmp
fld
xchg
dec
xchg
jns
repnz
shr
(bad)
xchg
pop
or
loope
xchg
sahf
sub
and
cs
mov
pop
nop
jp
iret
xchg
sbb
push
jmp
enter
shl
leave
fld
pop
neg
jno
test
jecxz
mov
and
mov
adc
sti
adc
mov
in
jl
into
out
dec
imul
cli
in
lds
adc
push
imul
movs
xchg
sub
(bad)
inc
imul
ret
push
rcl
xchg
xchg
push
dec
sub
push
jmp
xchg
add
in
sub
std
sub
dec
nop
jne
loop
ins
not
xchg
sub
push
out
les
mov
aam
or
movs
rcl
dec
push
stos
aaa
and
dec
test
push
mov
inc
mov
fwait
and
cmp
cwde
dec
adc
es
add
and
lds
les
adc
bound
dec
pmuludq
dec
fsubr
retf
in
jl
aaa
and
mov
addr16
lds
in
ins
xchg
mov
mov
int
cwde
int
jge
call
stos
and
bound
mov
mov
sbb
aad
retf
mov
bound
and
pop
rcr
aad
pop
lahf
imul
jne
mov
xchg
jmp
(bad)
cmp
fwait
int
and
xor
xor
xchg
shl
mov
lods
xor
scas
xchg
xor
cmc
imul
xlat
dec
retf
(bad)
mov
push
cmp
ins
cmps
rdmsr
stc
imul
add
fcomp
sub
gs
ins
ds
pop
mov
pusha
fcmovu
rcr
cmps
xor
push
mov
xchg
or
sbb
pop
movs
test
movs
push
rcl
inc
test
sbb
dec
mov
jb
mov
pusha
cmp
rcr
push
cmp
ss
fistp
jmp
ins
pop
dec
xchg
sbb
fsubr
inc
ficom
xor
lea
sub
cmps
sti
lea
cmp
cmps
xor
jbe
es
enter
stc
inc
jle
int3
js
imul
xchg
push
jo
cmp
ss
jmp
(bad)
and
enter
dec
addr16
ret
xchg
xor
push
ss
test
jmp
pusha
sbb
popa
jae
xchg
shr
or
cmp
sub
xchg
cmc
or
jne
rcr
mov
push
shl
pop
fwait
jge
inc
xchg
cld
jne
cli
add
ins
push
ror
jmp
imul
adc
or
(bad)
cdq
out
fldpi
lds
cmps
imul
ins
rcl
xor
js
sub
ret
mov
sub
das
push
out
cmp
dec
(bad)
cdq
in
(bad)
es
cmp
outs
nop
out
popf
ins
mov
leave
loope
enter
cmp
data16
xchg
xchg
mov
push
xchg
pusha
jae
push
fs
cmps
xchg
dec
sbb
mov
cmp
addr16
bound
leave
sub
push
addr16
cwde
sahf
int3
adc
enter
push
jmp
or
cli
push
pop
outs
mov
mov
dec
fs
jl
jge
dec
sbb
add
push
jbe
into
fs
call
xchg
int
test
(bad)
js
jle
arpl
mov
xor
mov
or
fimul
mov
test
in
push
popf
jmp
sub
xchg
cli
out
xchg
pop
imul
shl
cvtdq2ps
fwait
fs
cmp
sub
sbb
frstor
jnp
dec
cwde
addr16
add
sub
mov
clc
nop
jbe
inc
add
data16
mov
loop
mov
aaa
mov
in
imul
icebp
mov
int
jne
(bad)
call
iret
mov
mov
jns
mov
data16
aas
ins
test
clc
pop
jbe
inc
sbb
clc
pop
push
ss
js
jle
inc
lahf
ret
mov
ins
into
push
icebp
stos
rcl
dec
out
push
icebp
sub
ss
js
jns
inc
test
mov
ins
cli
xor
xchg
in
xor
xchg
sbb
div
icebp
xchg
cld
xor
das
inc
fcomp
jl
mov
and
stc
dec
jmp
jmp
fdiv
not
mov
ins
xchg
outs
adc
cwde
mov
sub
fs
sub
xchg
call
sub
cld
pop
fs
gs
shl
ficom
outs
xchg
push
push
retf
mov
div
xchg
pop
mov
js
mov
mov
outs
xchg
icebp
out
xchg
push
mov
cwde
sub
aam
cli
jne
(bad)
aam
jno
fimul
mov
dec
out
and
mov
fimul
outs
xchg
test
frstor
ss
jmp
fldcw
rol
test
jp
mov
dec
mov
cmp
mov
popf
pop
setnp
mov
push
add
out
xlat
outs
(bad)
lds
pop
pusha
cmp
in
ins
dec
mov
cmps
sub
xchg
jle
inc
fist
shl
mov
xor
pusha
sub
fs
cmps
cmps
and
jmp
cmps
(bad)
jle
fild
mov
ins
(bad)
popf
jb
out
dec
icebp
or
or
push
test
jb
xchg
popf
loop
jl
mov
sbb
sub
frstor
xchg
in
pop
push
push
and
mov
or
punpcklbw
adc
sub
xor
mov
ror
pop
enter
pop
mov
cdq
ds
retf
movs
cmp
mov
fidiv
das
xchg
push
or
pop
lods
xor
(bad)
out
fldcw
mov
sbb
inc
mov
jbe
jecxz
shl
loop
ds
ins
mov
pop
cs
mov
dec
es
aam
mov
ds
ins
xor
test
jp
out
xchg
jno
dec
jle
xchg
mov
jmp
mov
cli
in
xor
fild
fwait
(bad)
cmp
fwait
(bad)
cmp
int
test
outs
(bad)
test
aaa
(bad)
jnp
in
xchg
jp
mov
retf
enter
mov
jbe
jle
mov
jle
je
jmp
sub
dec
clc
inc
sub
inc
cld
retf
stc
ss
add
icebp
jmp
sub
adc
jg
jmp
(bad)
scas
mov
or
pop
mov
into
adc
jmp
enter
hlt
in
mov
jg
scas
int
and
cmp
lods
jg
pop
cs
and
mov
inc
nop
sbb
out
dec
fsubr
or
mov
les
dec
dec
lss
jae
dec
cmp
lahf
(bad)
jge
sub
ret
jp
jp
bound
pop
bound
enter
in
sbb
jb
sbb
jb
sbb
jb
sbb
in
xor
add
mov
add
out
loope
and
(bad)
cmp
or
lods
dec
mov
enter
mov
cmp
cvtpi2ps
sub
sti
dec
hlt
(bad)
sbb
sub
and
arpl
sbb
test
test
(bad)
and
push
jmp
imul
inc
cmp
inc
mov
icebp
push
imul
jecxz
lods
jecxz
xchg
retf
pop
xlat
sbb
jg
push
and
out
pop
jl
lahf
aas
pop
xlat
mov
cwde
sti
cmp
jnp
mov
int
out
imul
xchg
pop
add
sti
fidivr
jne
cdq
jmp
aam
add
stos
mov
cdq
xchg
and
pushf
mov
gs
jle
call
in
pushf
xor
leave
cmp
iret
dec
pushf
xor
ja
cld
mov
jae
or
cmp
mov
aam
ss
lods
popa
test
jg
lods
push
and
cmp
cmps
inc
test
je
stc
pop
pop
imul
xor
lods
mov
lahf
push
cld
dec
jmp
das
jmp
out
mov
out
push
int3
mov
jg
mov
mov
jp
inc
push
xlat
pop
jmp
icebp
imul
sahf
out
aad
jp
mov
loop
cmps
lods
fucomip
fcomip
pop
std
iret
cmp
jecxz
jne
in
rcl
imul
mov
std
mov
pop
scas
jmp
sbb
mov
movs
pop
retf
mov
retf
mov
jmp
ins
pop
out
outs
fwait
mov
aam
mov
int
bound
mov
mov
sti
mov
jnp
push
mov
fistp
retf
push
adc
push
xchg
les
push
icebp
out
cwde
mov
mov
mov
lods
aas
cwde
xor
sbb
sbb
sub
fbld
pop
int3
stos
adc
shr
or
rcr
outs
or
push
pusha
push
add
push
add
(bad)
pop
int
ins
call
pop
leave
into
pop
int
jmp
rcr
push
jecxz
int
icebp
jmp
aad
(bad)
out
or
jmp
mov
cmps
dec
mov
int
loopne
xor
out
ins
call
xor
addr16
xchg
movs
push
call
xchg
inc
repz
daa
push
int
fidivr
push
repz
jbe
call
test
inc
scas
xchg
jl
(bad)
les
sar
ins
call
mov
div
inc
jge
out
cdq
ja
call
jmp
push
and
icebp
sahf
cmp
in
test
cmps
or
cmc
and
repz
xor
mov
push
jge
call
lea
cdq
cmc
mov
and
push
rol
popa
dec
scas
repz
cmc
mov
enter
test
ja
in
push
sbb
inc
push
movs
cs
push
aas
push
stos
mul
stc
push
jge
adc
ja
lea
fwait
mov
(bad)
mov
imul
fwait
jae
lock
push
test
out
jge
sub
dec
inc
arpl
test
xor
push
iret
(bad)
push
aas
sbb
aaa
(bad)
into
daa
mov
mov
aam
arpl
test
sar
push
pop
imul
sub
(bad)
stc
push
aas
lea
or
jnp
(bad)
sub
(bad)
cs
pop
lods
pop
stos
xor
and
jns
retf
xchg
cli
and
aad
dec
dec
fisttp
fisub
(bad)
mov
push
loop
shufps
sahf
das
cmc
inc
mov
and
je
push
stos
and
cs
pop
mov
and
lods
js
addr16
adc
jecxz
test
cmc
icebp
jbe
pop
les
movs
jle
lahf
xor
jae
enter
js
aam
icebp
adc
cmp
inc
test
mov
sub
mov
jae
add
rcl
iret
(bad)
jmp
inc
push
xor
mov
fisubr
cmc
inc
mov
push
mov
jmp
aam
jb
inc
rep
jle
sub
nop
cli
inc
mov
aam
cdq
fst
cdq
add
cdq
test
(bad)
rep
xor
dec
(bad)
(bad)
sbb
adc
mov
inc
stos
daa
xor
rcr
sub
cli
and
repz
and
test
and
sahf
jnp
dec
inc
mov
cld
leave
outs
fincstp
rcl
dec
std
(bad)
mov
and
dec
mov
nop
pushf
nop
ficom
fsubr
aad
fsubr
test
out
mov
cmc
mov
xchg
push
and
aad
inc
test
sbb
test
cmps
pop
(bad)
lea
mov
pop
jmp
push
jb
and
call
cmp
dec
retf
xchg
loop
pop
sub
shr
aad
movs
pop
jmp
add
and
ss
fsub
dec
jno
sub
sbb
push
fsub
aas
neg
cmp
sahf
lock
pushf
mov
pop
daa
cwde
push
cmps
dec
jl
cld
mov
mov
es
movs
inc
and
adc
test
int3
adc
daa
cdq
and
dec
xor
dec
imul
mov
sbb
(bad)
pop
pop
dec
es
arpl
(bad)
ds
xor
dec
xchg
das
inc
into
pop
mov
adc
sub
mov
in
icebp
je
in
icebp
push
scas
adc
push
pop
leave
push
xchg
sub
push
leave
shl
ds
jmp
xchg
sbb
jge
in
sbb
cmp
xchg
jge
push
lods
(bad)
pop
xchg
sub
xchg
pop
xchg
loop
jne
mov
aam
test
sar
or
add
mov
daa
pop
fldenv
sub
xchg
dec
dec
jne
int
jecxz
jns
out
repnz
jne
fs
jmp
int3
ss
(bad)
cmc
test
pop
jmp
dec
cmp
push
cdq
inc
or
pop
cmp
jp
jae
cmc
out
cwde
jmp
xchg
cli
pusha
mov
(bad)
pop
jns
cmp
ins
add
outs
jae
aam
sahf
jl
ds
push
aam
repnz
fimul
inc
xor
mov
(bad)
jmp
cwde
jge
push
retf
xor
stos
and
push
dec
(bad)
aad
and
cmc
jle
xchg
jmp
pop
adc
in
ja
(bad)
jb
int3
jnp
push
jns
pop
cmc
mov
cmp
scas
xchg
sub
fwait
stos
(bad)
(bad)
jge
aam
push
push
retf
xchg
sbb
repz
test
dec
test
lods
test
mov
test
daa
xor
push
iret
mov
dec
arpl
mov
sbb
outs
les
push
int3
xlat
or
mov
fcmovu
mov
dec
mov
test
nop
cli
push
sub
mov
(bad)
aad
cwde
lods
in
std
xor
push
cmps
fwait
aad
xchg
jge
xor
nop
jp
push
push
xor
jmp
mov
int3
xchg
or
push
sub
sbb
cmc
retf
cmp
fild
xor
xchg
jmp
pop
mov
lods
cdq
cmps
ins
test
sub
addr16
mov
lods
aas
aaa
gs
cmp
test
xchg
jp
push
push
sub
xchg
sub
jb
mov
sahf
push
mov
fisttp
add
xlat
sub
outs
push
mov
das
int3
mov
mov
popa
xor
stos
sub
sar
push
pop
leave
scas
adc
not
dec
mul
dec
div
push
pop
out
xchg
cli
push
dec
test
push
movs
clc
add
xor
dec
icebp
pop
cmps
sti
repnz
clc
push
xchg
ficom
xchg
loop
dec
mul
cli
dec
mov
pop
div
aad
out
xchg
cli
std
movs
push
test
sbb
fisubr
fidivr
aas
ins
push
inc
inc
push
mov
mov
and
dec
icebp
fs
(bad)
jl
xlat
outs
jle
pop
and
fisubr
mov
xor
test
retf
xchg
jmp
test
xchg
push
cmps
sti
sbb
jp
fisubr
push
xchg
sbb
movs
fsubr
push
test
mov
mov
fwait
dec
add
mov
out
repz
cwde
cmp
adc
not
scas
mov
cmc
mov
test
call
movs
sti
lods
cmp
fimul
mov
jmp
mov
pop
sub
test
sahf
push
jns
mov
jne
sar
jne
lock
jns
inc
sub
jae
cld
mov
lahf
xor
pop
leave
scas
xchg
aaa
xlat
mov
scas
push
jae
jnp
into
xor
sub
sub
pop
jne
call
xor
jp
test
xchg
xchg
or
fstp
xchg
pop
movs
pop
sub
mov
test
(bad)
xlat
dec
fstp
imul
dec
mov
repz
je
cli
call
scas
stos
iret
jl
jae
jmp
xor
xchg
stc
push
stc
mov
fld
popf
mov
ja
pop
pop
sub
movs
movs
mov
jge
sub
icebp
mov
jmp
jge
div
pop
test
jmp
mov
xchg
sub
not
push
dec
inc
push
sub
cdq
dec
inc
xor
lods
jo
pop
jge
out
call
cmp
pop
aas
addr16
xchg
(bad)
out
or
cmp
jns
(bad)
sbb
aad
(bad)
lods
outs
cwde
fild
(bad)
pop
lods
mov
scas
int
movs
xchg
call
(bad)
das
cmp
mov
cmp
(bad)
cdq
push
sbb
xor
mov
in
jae
xor
retf
neg
cli
sar
mov
inc
sbb
arpl
imul
imul
xor
movs
xchg
mov
mov
stos
push
in
das
call
or
push
cdq
in
stc
push
data16
push
cdq
cdq
popf
test
xor
adc
imul
stos
int3
ins
pop
test
mov
cmc
and
xor
fisttp
pop
xor
jle
out
dec
mov
dec
pushw
mov
fs
dec
out
jbe
fs
ror
cmps
push
jmp
push
mov
mov
stos
int
ins
lods
ss
pusha
mov
inc
aad
dec
sahf
stos
(bad)
mov
sub
lahf
outs
stc
das
fwait
dec
mov
pop
(bad)
mov
mov
mul
lea
fwait
iret
mov
xchg
int
pop
test
gs
xchg
mov
scas
xor
imul
push
cwde
iret
cdq
(bad)
adc
jmp
sbb
int
dec
mov
pop
repz
xchg
jo
cmps
inc
mov
push
push
cdq
fst
mov
push
mov
jecxz
push
jmp
mov
fild
ss
cmc
fs
std
sub
fmul
scas
mov
dec
test
repz
xor
in
xor
adc
mov
cmp
std
mov
cmp
jle
cdq
jecxz
xor
int3
jl
push
mov
fld
jne
jnp
cdq
jecxz
xor
cwde
cdq
popf
mov
push
ds
lods
xor
cmp
dec
(bad)
xchg
push
data16
xor
mov
add
fdiv
imul
cs
stos
jmp
lods
cdq
mov
jbe
call
add
aad
sub
stos
cdq
mov
fwait
js
int3
(bad)
call
pminsw
stos
push
pop
loope
cwde
ja
dec
cwde
mov
out
jbe
dec
adc
mov
jnp
jle
int3
add
cwde
sbb
retfw
int3
or
pop
sub
jl
loopne
xor
sub
mov
fmulp
sbb
fmulp
sbb
fmulp
sbb
fmulp
xchg
mov
fmulp
adc
jnp
xchg
jl
repnz
dec
jno
shl
mov
test
pop
add
or
push
fwait
sbb
ss
pop
ins
out
stos
in
jge
loop
movs
inc
add
jmp
ret
adc
cli
jge
ja
jge
test
out
out
jmp
ret
test
out
and
rcl
int3
mov
lods
xor
jbe
fidiv
mov
jne
(bad)
ficomp
mov
jp
mov
(bad)
mov
(bad)
cmc
rcr
pop
sbb
cld
popf
into
mov
repnz
pop
lods
mov
sbb
pop
cmc
push
pusha
fwait
(bad)
cs
ja
mov
outs
cwde
jmp
imul
adc
(bad)
(bad)
aam
sar
fs
and
addr16
hlt
xor
ins
cld
cdq
stc
mov
out
out
int
and
jmp
push
std
sbb
leave
mov
ficomp
lods
scas
push
call
or
enter
movs
(bad)
dec
sub
lock
(bad)
fwait
(bad)
fwait
push
cmp
cmps
inc
cmps
inc
xchg
dec
mov
jne
hlt
jmp
(bad)
scas
sar
lahf
stc
mov
fstp
cmps
shl
jne
mov
es
fucomip
mov
std
or
pop
std
pop
xlat
stos
lahf
jmp
movs
in
fsubr
outs
cmps
sti
mov
notrack
mov
xlat
xchg
jmp
scas
pop
xchg
cmp
push
lods
loopne
scas
pop
pop
(bad)
das
je
cli
test
jmp
mov
scas
pop
call
mov
mov
fcomp
data16
retf
sub
scas
pop
in
mov
movs
adc
mov
cmc
mov
mov
xlat
cmp
or
shl
jmp
mov
in
shl
inc
je
cmp
ss
ins
jb
push
inc
push
mov
iret
xchg
jp
adc
push
sbb
or
mov
retf
mov
or
push
jmp
movs
jle
or
cmp
cmp
pop
out
jnp
mov
(bad)
jnp
fadd
pop
loope
out
pop
(bad)
dec
fst
push
inc
retf
xchg
cli
cmp
imul
(bad)
cdq
aad
sar
push
xor
jmp
pop
shr
push
sbb
inc
retf
xchg
jp
out
stc
push
xor
push
sub
ins
int3
cmp
xchg
sub
aaa
bound
push
push
pop
call
out
mov
sub
ror
movs
jle
mov
cwde
mov
mov
sbb
push
jmp
mov
xor
push
gs
sbb
aam
xor
xchg
jmp
mov
in
mov
pop
mov
pop
xor
xchg
jmp
pop
test
std
jecxz
or
jmp
(bad)
jl
inc
sub
arpl
test
daa
xor
push
dec
mov
inc
(bad)
jb
sahf
mov
(bad)
or
xchg
mov
test
retf
xchg
stos
mov
push
scas
les
lods
push
stos
outs
std
xchg
sub
pop
jno
retf
xchg
ficom
mov
test
push
stos
cmp
xor
mov
test
xchg
jp
push
push
(bad)
push
gs
int
cmp
xchg
adc
movs
dec
mov
inc
xor
stos
mov
dec
fst
mov
push
das
cmp
jne
sub
ss
cmp
push
mov
xor
dec
mov
test
das
aad
or
inc
lods
xor
mov
dec
retf
xchg
sub
or
rcl
push
push
cdq
stos
add
in
sar
push
cld
icebp
inc
sub
call
inc
leave
mov
daa
adc
mov
cmp
pop
(bad)
aas
fwait
rep
imul
ins
into
mov
in
mov
iret
mov
dec
mov
scas
mov
adc
je
cmp
repnz
push
jbe
addr16
xchg
jns
inc
lods
pop
pop
cli
fnstenv
mov
into
mov
into
mov
into
pushf
icebp
push
retf
cmp
mov
addr16
stc
or
cld
jno
pushf
sti
loopne
fsubr
std
push
adc
mov
and
jp
stos
in
xor
aam
in
retf
mov
mov
push
mov
in
std
sub
rcr
jbe
jmp
neg
dec
push
mov
dec
xchg
pop
push
push
pop
dec
mov
movs
dec
push
repz
mov
stos
sub
stos
and
xchg
sbb
movs
ds
or
xchg
arpl
mov
xchg
and
sub
xchg
dec
dec
cmc
movs
jle
leave
xlat
or
fwait
fs
mov
movs
mov
loop
movs
inc
jl
daa
and
sti
pop
or
dec
fst
movs
cmp
jmp
xchg
jmp
nop
jmp
jge
push
inc
mov
sub
mov
pushf
pop
mov
lahf
pop
jg
repz
jp
call
daa
shr
aad
mov
jg
mov
pop
jg
ins
popf
cmps
mov
repz
out
(bad)
out
retf
ds
leave
mov
aad
and
push
(bad)
stos
pmaddwd
ds
mov
setns
jl
dec
(bad)
jge
arpl
mov
cmc
mov
stc
dec
hlt
fbld
mov
out
call
les
pop
imul
cwde
mov
jge
pushf
lea
(bad)
retf
cli
xor
mov
mov
fmul
outs
dec
jns
jl
cwde
xor
pop
shr
imul
jmp
xor
aad
cmp
xchg
stc
lods
sbb
(bad)
aad
mov
xchg
stc
dec
cmp
push
and
aad
gs
(bad)
retf
jne
dec
icebp
sub
lds
push
cmp
dec
icebp
sub
lds
shl
out
cmps
in
shl
push
cmp
dec
icebp
sub
lds
push
sub
mov
ins
mov
iret
xchg
push
pop
rcr
adc
xchg
push
cmp
dec
cmp
out
pusha
sub
js
mov
and
push
movs
push
jno
stos
mov
(bad)
rep
adc
xchg
push
cmp
dec
icebp
jl
jns
pop
icebp
mov
iret
xchg
push
cmp
dec
push
fs
outs
mov
xchg
enter
iret
push
movs
sbb
daa
dec
xor
shr
mov
xchg
ins
idiv
(bad)
jmp
aas
popa
pop
cmp
push
sahf
into
fnstsw
jae
hlt
scas
pushf
popa
pop
pop
xor
iret
int
(bad)
sub
jmp
fwait
push
frstor
cmp
sbb
push
fwait
daa
(bad)
mov
aaa
popa
sahf
fnstenv
jmp
push
cmc
jmp
int3
xlat
mov
hlt
or
fdiv
xchg
out
or
aad
pop
out
ss
scas
std
pop
pop
rcl
call
jnp
cmp
call
out
scas
hlt
mov
mov
and
dec
mov
outs
jmp
sub
aaa
imul
mov
dec
test
jge
lods
and
mov
mov
stos
loop
(bad)
lods
and
outs
pop
adc
outs
cmp
test
mov
adc
int3
or
push
cwde
adc
inc
in
out
call
fsubr
call
aad
int
loop
xlat
lods
and
ja
or
jle
lods
and
pop
aaa
ins
sub
outs
movs
pop
inc
mov
xchg
data16
mov
dec
mov
fsubr
mov
int
loop
push
mov
js
fistp
out
scas
jmp
int
adc
retf
jbe
pop
inc
pushf
sub
add
loop
cdq
adc
dec
pop
gs
adc
and
cdq
adc
and
in
mov
test
retf
gs
jle
leave
mov
std
enter
adc
jge
adc
ja
inc
sub
gs
retf
jge
fbstp
sub
push
pop
loope
out
mov
cwde
mov
xchg
jns
shl
movs
mov
lods
push
sub
mov
push
mov
inc
int3
shl
sahf
mov
mov
jne
aad
push
fincstp
ins
int3
pop
imul
pop
scas
aam
bound
sti
jl
movs
mov
sub
xchg
sub
pop
test
das
mov
push
push
pop
xor
xor
xchg
cli
imul
bound
int3
pop
gs
adc
mov
test
das
aad
or
retf
mov
sbb
punpckldq
repz
test
jp
lods
push
arpl
int3
aad
movs
inc
arpl
lgs
test
repz
mov
adc
retf
xchg
call
jns
enter
mov
push
adc
loop
xchg
daa
push
sbb
mov
test
sub
xor
xchg
sub
fcom
test
jno
xor
loop
xchg
sub
push
aas
mov
pop
mov
aaa
gs
mov
test
xchg
jp
push
push
(bad)
test
sub
inc
cmp
out
jmp
movs
pop
mov
mov
pop
push
je
push
pop
cmp
cmc
mov
test
sub
xchg
sub
jb
fimul
inc
xor
or
cwde
mov
push
cmp
aam
xor
ror
movs
pop
enter
xchg
sub
mov
xchg
das
adc
movs
xor
lods
mov
ins
test
push
sub
jno
sub
adc
iret
lods
aad
pop
neg
(bad)
aad
data16
push
dec
cmps
stos
mov
jne
mov
iret
xor
inc
jmp
push
lods
cdq
mov
and
cdq
in
push
push
inc
mov
adc
aam
jle
out
lods
in
ror
push
retf
sti
sbb
lods
cmc
arpl
push
aaa
mov
pop
scas
out
xchg
xchg
mov
int3
or
out
test
std
ror
or
int
ja
push
std
ror
adc
clc
mov
test
sub
iret
fisub
xchg
ret
frstor
mov
mov
fnstcw
shl
retf
std
xchg
jns
cmp
push
mov
test
xchg
sub
in
xor
aam
in
sub
retf
scas
dec
pop
scas
aam
rcl
ss
xchg
jge
push
inc
in
jle
push
test
clc
ja
dec
mov
push
movs
lods
out
jb
mov
mov
lods
out
or
mov
cmps
outs
xor
push
into
ss
mov
lahf
mov
cld
xchg
mov
mov
dec
fst
xchg
push
loopne
icebp
dec
and
xor
sub
ins
aaa
mov
sub
cld
(bad)
cld
jle
in
jecxz
inc
mov
xchg
lahf
cwde
cmps
adc
lea
fisttp
shl
sbb
jecxz
inc
mov
sbb
xchg
and
cmp
push
cmp
dec
icebp
in
mov
mov
jmp
dec
js
jmp
fld
push
int3
sbb
xchg
xor
rcr
test
mov
mov
iret
dec
icebp
cmp
cmp
iret
dec
icebp
cmp
(bad)
adc
xor
iret
dec
icebp
cmp
(bad)
adc
xor
xchg
mov
cmp
aad
mov
out
aam
std
jmp
xchg
jns
into
xor
hlt
mov
xlat
daa
(bad)
mov
ins
jmp
jg
(bad)
jns
jg
fidiv
(bad)
out
std
aaa
jnp
aam
cmp
cmps
xor
nop
test
cli
aam
fstp
push
jo
pop
jns
xchg
cmc
mov
out
jae
mov
sub
mov
test
scas
xor
mov
sti
mov
mov
mov
jp
scas
cwde
jmp
cli
rcr
out
jae
xor
sti
cmp
scas
test
dec
into
retf
pop
out
or
xor
aad
scas
and
(bad)
mov
(bad)
pop
inc
jle
mov
sbb
mov
ins
retf
mov
stos
(bad)
std
mov
mov
imul
mov
push
add
mov
int
popa
neg
xlat
xchg
imul
jle
mov
jge
mov
arpl
cli
jo
arpl
cli
lock
scas
maxps
lahf
jb
test
jecxz
sti
call
mov
sbb
cld
sti
cli
outs
mov
inc
imul
xor
adc
adc
adc
or
(bad)
xchg
das
aad
sbb
icebp
mov
pusha
ds
mov
sub
pop
mov
test
das
movs
add
mov
inc
test
sahf
and
(bad)
xchg
jmp
test
fwait
jae
leave
ds
aam
push
add
mov
cdq
mov
adc
mov
xchg
daa
cmc
fldenv
push
and
bound
or
pop
sub
jno
inc
cmp
push
and
pop
pop
sub
outs
in
nop
sbb
jne
jno
ds
loop
cmc
dec
icebp
movs
outs
dec
icebp
movs
mov
push
call
pop
jg
xor
fist
scas
addr16
aam
in
push
add
adc
or
jb
cmp
sahf
xchg
das
cmc
retf
dec
and
adc
pop
mov
push
stos
mov
mov
js
(bad)
shl
cmp
int
gs
gs
ss
fwait
mov
fwait
cmps
in
or
jmp
push
int3
shl
mov
retf
pop
mov
mov
pop
push
int3
shl
sahf
lea
mov
or
xor
cmp
aam
arpl
or
pop
push
mov
call
out
stc
push
pop
bound
cwde
cmc
adc
int3
shl
fimul
mov
mov
mov
cmp
push
adc
cmp
out
cwde
scas
adc
mov
scas
retf
mov
sbb
pop
xor
xchg
sbb
mov
retf
sub
stos
rcr
les
dec
sub
dec
les
jmp
(bad)
aad
mov
sbb
cmp
lgs
xchg
and
lods
mov
jp
adc
sub
xor
mov
test
dec
std
and
push
push
xchg
sub
daa
jno
retf
xchg
push
jnp
mov
sub
retf
daa
out
push
sahf
xchg
das
xor
push
dec
aam
aas
push
and
jp
jmp
push
xor
or
fwait
mov
fimul
scas
test
in
mov
test
push
mov
inc
aam
jb
jle
cmc
mov
test
sub
int
jmp
push
mov
jns
mov
jmp
cdq
adc
xor
dec
lds
ja
pop
test
xchg
loop
push
sub
sub
adc
pop
sub
jge
inc
stos
daa
xor
mov
(bad)
aad
xor
inc
jmp
int
mov
test
cli
xchg
cmc
int
pop
sub
pop
sub
ins
test
dec
mov
push
or
mov
fnstcw
xchg
sub
jne
mov
xchg
jge
inc
jmp
out
mov
push
mov
cmc
aad
dec
push
mov
aad
adc
movs
xchg
cmps
pop
jg
out
jmp
test
test
lds
cmp
push
jge
fisttp
mov
test
mov
inc
sti
add
xchg
cli
and
xchg
dec
pop
dec
inc
ret
xor
cmp
sub
push
stos
cmp
xchg
or
add
std
push
lods
xchg
mov
xor
in
std
arpl
dec
mov
cmp
push
mov
cmp
xchg
arpl
in
push
pop
out
movs
out
sti
fbstp
gs
jmp
pop
jmp
mov
aas
aam
repnz
int3
cmp
mov
jmp
test
xor
pop
int
cmc
mov
push
xor
lods
mov
int3
pop
jmp
xor
sub
pop
sub
jge
loopne
pop
dec
fidiv
(bad)
push
xor
outs
xor
(bad)
imul
xor
imul
(bad)
outs
xor
ss
xchg
repz
lods
cmc
xchg
cdq
mov
pop
data16
cmp
sbb
mov
in
gs
lock
cdq
mov
pop
data16
pop
jnp
cmp
mov
cmp
int3
mov
neg
xor
fsub
imul
mov
(bad)
mov
mov
mov
mov
(bad)
xchg
sbb
xor
data16
mov
int3
pop
ja
cdq
mov
pop
xor
mov
int
or
std
dec
xor
test
retf
test
sub
test
cmp
das
popf
fstp
mov
das
cmps
or
call
mov
idiv
cmp
out
jmp
xlat
jb
jmp
xlat
repnz
jmp
xlat
or
jmp
inc
xchg
repz
jbe
out
adc
cmp
aas
rcr
lods
mov
pop
addr16
mov
mul
in
ret
cmp
xchg
por
mov
lods
mov
push
popf
in
lahf
jmp
cmp
mov
dec
jne
jg
mov
push
popf
in
pcmpeqb
mov
rcr
inc
sti
add
imul
ins
dec
addr16
aas
rcr
(bad)
cdq
into
test
mov
cmps
mov
xor
inc
je
(bad)
rcr
mov
sti
mov
not
popf
in
lahf
jmp
call
out
fstp
xlat
fsin
mov
ins
shld
inc
sub
adc
push
push
retf
xchg
jp
jmp
retf
cli
div
fimul
scas
xchg
daa
lds
cmp
lods
mov
mov
mov
stos
xor
jmp
(bad)
sub
mov
mov
(bad)
jnp
mov
or
cmps
ins
test
pop
test
xchg
cli
pop
data16
push
retf
call
in
jno
cmps
in
jno
cmps
adc
into
xchg
sub
div
sahf
adc
jo
adc
adc
mov
mov
dec
mov
sub
loope
mov
dec
mov
icebp
adc
clc
mov
jno
daa
lds
push
fadd
dec
jno
cmps
adc
popa
mov
div
fadd
imul
(bad)
lds
adc
retf
imul
fadd
dec
jno
daa
lds
push
fadd
dec
jno
xchg
xor
(bad)
or
jnp
sub
loope
mov
dec
mov
sub
loope
mov
imul
cmp
push
gs
add
imul
lahf
cdq
or
std
aaa
push
jge
sahf
(bad)
and
call
push
(bad)
std
mov
or
xor
dec
aas
gs
adc
not
cmc
lods
cmps
jl
retf
test
jmp
dec
fst
sahf
jb
cmc
ins
push
fwait
jae
push
fwait
jae
dec
mov
in
das
(bad)
aad
out
push
sbb
sbb
call
rep
(bad)
jnp
das
mov
iret
dec
cwde
lahf
loope
int3
iret
lock
addr16
or
xor
ret
jmp
repz
xlat
int3
iret
jo
xor
ret
jge
cld
or
jmp
movs
bound
xchg
imul
push
das
fmul
ins
mov
test
nop
sbb
xor
push
shr
imul
cwde
mov
mov
mov
jb
mov
movs
xchg
test
sub
(bad)
aad
xor
lea
es
(bad)
push
xor
cld
dec
xor
cdq
icebp
cs
xchg
jno
not
pop
jo
in
cmp
cmp
dec
loope
into
loopne
mov
lea
lds
(bad)
(bad)
pop
call
cmp
inc
push
cmps
bound
pushaw
ss
out
mov
inc
and
and
mov
inc
sbb
or
adc
aam
xor
lods
arpl
fadd
loope
fidiv
inc
jno
pop
cmp
arpl
data16
mov
sbb
mov
xchg
cmp
xchg
push
retf
retf
push
mov
push
arpl
test
add
pop
lea
(bad)
or
inc
and
or
fadd
fidiv
xchg
sub
(bad)
adc
add
ret
rcr
cmp
loope
scas
jo
(bad)
jno
jno
cli
jno
icebp
or
push
xchg
ret
js
adc
and
and
test
dec
inc
repnz
xchg
(bad)
pop
cwde
lea
sub
(bad)
das
dec
pop
add
mov
mov
test
or
add
mov
jmp
and
outs
(bad)
push
ins
lds
inc
and
or
fadd
fidiv
sti
jno
xchg
daa
rol
pushf
(bad)
sbb
cs
inc
(bad)
sbb
pop
scas
xor
push
jno
inc
mov
or
loop
inc
mov
dec
popa
xor
sbb
inc
push
jb
xchg
mov
ins
int3
rcr
or
and
mov
jb
inc
add
clc
cmp
jecxz
lods
(bad)
pop
(bad)
jmp
xchg
fiadd
mov
(bad)
fmul
pop
mov
lods
push
and
popa
jl
(bad)
jo
jno
dec
shl
test
mov
and
mov
aaa
cmp
outs
jecxz
jecxz
fadd
and
popa
or
xor
ret
dec
in
rol
adc
xor
cmp
inc
push
cmps
bound
pushaw
repnz
mov
add
sub
call
push
mov
call
ins
stos
push
sbb
add
jecxz
mov
sbb
xchg
popf
pop
xchg
je
in
xor
pusha
add
icebp
or
test
xchg
dec
xchg
rcl
enter
test
sbb
fstp
inc
and
adc
mov
sub
cmp
cs
add
sbb
sbb
and
(bad)
pop
lods
ret
jp
rol
adc
arpl
mov
daa
call
fisttp
mov
pop
cmp
lds
sbb
or
daa
jno
cmps
ror
mov
sub
ror
cld
push
add
xor
push
xchg
int3
stc
dec
cs
dec
data16
mov
bound
add
inc
push
jb
add
xchg
iret
mov
xor
jae
iret
lds
xor
ret
xor
inc
sbb
or
mov
or
xor
xor
(bad)
or
ret
rcl
push
xor
daa
call
in
mov
jecxz
mov
sbb
xor
(bad)
sbb
or
mov
sbb
jmp
inc
fbld
ja
cmp
ds
or
xor
adc
or
xor
push
popf
cmp
fld
sbb
cmp
mov
mov
jbe
mov
js
dec
mov
jno
sub
push
inc
or
jmp
rol
pop
mov
fistp
out
inc
and
or
fadd
fidiv
sti
jno
xchg
in
cmp
cmp
pushf
mov
push
jge
(bad)
xor
mov
ffreep
and
fist
cmp
loop
cmps
jb
and
mov
cmp
(bad)
aad
xor
sub
xchg
pop
cmp
inc
inc
push
push
daa
dec
loop
jecxz
cmp
xchg
mov
in
push
hlt
sar
ins
scas
loope
outs
loopne
outs
jecxz
push
jo
sbb
add
sub
jno
pop
ja
cmp
xor
adc
rcr
ins
jae
mov
lds
ror
data16
or
stc
sbb
add
mov
icebp
bound
or
movs
pop
inc
das
inc
and
pop
mov
aam
push
or
arpl
outs
inc
add
xor
mov
add
or
popa
psadbw
mul
add
loope
dec
mov
push
cmp
pop
les
sbb
xor
jl
mov
add
neg
push
loope
cmp
lock
fimul
dec
inc
xor
and
xchg
test
enter
rcl
jp
fild
adc
or
mov
or
lds
shl
arpl
(bad)
push
mov
mov
xor
scas
sar
mov
popa
xor
or
fadd
mov
fmul
cmp
inc
cmp
ret
jno
inc
pop
cmp
cmps
jo
addr16
xchg
jo
push
rol
cli
jno
mov
pop
add
push
ja
mov
xchg
prefetcht0
and
stc
(bad)
jb
mov
and
inc
sbb
sbb
enter
bound
popaw
ss
int3
pop
int3
inc
add
inc
adc
add
test
xchg
mov
or
hlt
jb
adc
mov
sub
pop
aam
or
lods
mov
dec
fadd
js
sbb
es
mov
sub
mov
jnp
psubq
xchg
in
cmp
dec
pushf
les
(bad)
cmps
jno
pop
mov
jecxz
jge
cmp
mov
aaa
jo
mov
mov
loop
sti
sbb
add
and
inc
sbb
mov
and
test
dec
inc
cmp
nop
test
pop
jns
test
cwde
cmp
or
mov
movs
sub
xor
sub
jne
les
sbb
mov
fadd
mov
mov
mov
mul
sub
adc
(bad)
pop
dec
inc
or
xchg
pop
das
dec
call
or
and
mov
push
mov
test
and
test
add
jno
push
lods
rcr
mov
sbb
aaa
pusha
or
mov
push
fimul
mul
mul
add
loope
mov
cmp
pushf
inc
pop
cmp
lahf
les
pushf
popa
jl
pop
call
popa
fild
ds
jecxz
scas
jecxz
outs
loop
out
pusha
add
(bad)
popa
mov
adc
cld
or
fadd
xor
sub
xchg
sbb
cmps
popa
push
data16
mov
syscall
sub
fsub
int3
mov
dec
sbb
mov
test
and
pop
mov
aam
push
imul
ss
and
push
ins
ret
rcl
push
xor
daa
call
mov
or
mov
inc
jno
(bad)
jno
sbb
ret
ret
inc
(bad)
jno
jge
(bad)
xor
loopne
mov
mov
jge
arpl
int3
movs
(bad)
daa
into
cmp
imul
in
pop
jns
mov
sbb
xor
add
stc
pop
enter
jmp
mov
(bad)
jb
sub
push
lea
mov
cmp
push
(bad)
fwait
mov
pop
sbb
dec
mov
mov
push
ds
mov
jecxz
dec
mov
adc
pushf
lds
pop
jo
mov
pop
cli
jno
xlat
jno
aaa
jno
ja
cmovae
adc
psllw
mov
or
popa
xor
nop
mov
and
cmp
inc
push
cmps
bound
out
cs
add
inc
sub
mov
in
mov
push
mov
cmp
lahf
(bad)
cmp
(bad)
arpl
jecxz
ins
mov
leave
mov
int
cs
aaa
pop
fnstenv
cmps
pavgb
push
mov
(bad)
jo
daa
jo
cmps
jno
arpl
mov
inc
aaa
xor
xlat
call
es
ja
add
lds
out
popa
or
xor
jecxz
arpl
lahf
icebp
sub
push
inc
sbb
xor
jmp
out
sbb
shl
int3
lds
mov
add
jo
push
xchg
mov
mov
shl
jmp
sbb
push
jmp
push
sbb
int
add
arpl
jecxz
in
inc
sbb
cmp
cmp
cmp
add
ret
loopne
outs
pop
les
cmp
mov
aaa
jo
mov
pop
add
adc
arpl
jecxz
jns
xor
leave
dec
inc
add
dec
inc
sbb
repnz
mov
pop
jae
call
xchg
test
xor
push
mov
and
(bad)
jne
(bad)
or
fadd
js
mov
cmp
sbb
aaa
(bad)
mov
jnp
mov
sar
xchg
cmp
mov
loope
ror
ds
or
loop
gs
mov
jmp
shr
cmp
push
jp
mov
sub
adc
(bad)
xchg
sub
cmp
loopne
jge
addr16
pop
fbld
cmp
mov
aaa
jo
mov
mov
loop
sti
sbb
add
and
push
(bad)
jecxz
mov
xor
or
or
enter
cmps
mov
sbb
out
add
(bad)
adc
xor
inc
sbb
sbb
inc
adc
sub
jp
cmps
xlat
pusha
sub
pusha
and
mov
fwait
mov
(bad)
fmul
xor
(bad)
cs
sub
jnp
lahf
test
or
mov
jnp
sbb
ret
rcr
and
loope
(bad)
pop
inc
(bad)
sbb
pop
scas
xor
push
jmp
pop
ret
js
adc
and
and
jae
sbb
bound
mov
pop
int3
inc
add
push
test
pop
add
sub
xchg
popa
sbb
sbb
inc
add
lods
ror
push
jne
mov
imul
rol
xor
sbb
lds
jecxz
mov
sbb
mov
jle
pop
hlt
rcl
jo
aaa
jo
mov
pop
add
adc
adc
mov
xchg
(bad)
addr16
xchg
mov
jecxz
shr
sub
sar
sahf
xchg
cwde
mov
popa
cmp
repz
add
popa
ds
pusha
and
popa
xor
xchg
out
or
jno
push
mov
jmp
addr16
ins
ret
popa
fisttp
mov
fmul
mov
(bad)
sbb
pusha
das
push
loope
fidivr
out
mov
sbb
jecxz
or
ret
fwait
in
inc
pop
mov
sbb
pop
cli
jno
xlat
jno
aaa
jno
cmp
popa
(bad)
wrmsr
add
xor
jno
inc
adc
xor
xor
xor
rcr
ins
mov
lea
and
push
xor
xor
repz
cmp
or
shl
pop
mov
push
mov
xchg
test
sub
lods
ret
jp
fld
or
in
movs
fwait
rol
mul
mul
push
loopne
mov
sbb
mov
ret
rcr
cmp
mov
xchg
jno
cmp
mov
ja
mov
ret
jecxz
inc
lock
inc
sbb
xchg
sub
pushf
pop
sub
pop
popa
xor
mov
popa
sbb
mov
scas
pop
mov
cs
fimul
mov
lods
push
ds
inc
cmp
sbb
je
adc
shr
mov
mov
gs
mov
call
aaa
jo
mov
enter
ret
clc
fnsave
or
xor
retf
fsubr
inc
sub
jo
xchg
sbb
ret
inc
pop
into
jecxz
mov
sbb
sbb
pop
cli
icebp
loopne
sahf
inc
xor
retf
loope
leave
sub
and
xchg
xchg
mov
cmp
in
ins
mov
rol
mov
xchg
ror
fst
xchg
scas
inc
xor
jmp
ret
mov
fadd
ins
(bad)
push
xor
daa
call
js
pop
mov
icebp
pop
sbb
pavgw
jge
in
xor
dec
mov
mov
mov
(bad)
or
mov
gs
inc
(bad)
jno
xlat
jno
arpl
ss
xor
rcr
cmp
pop
hlt
inc
mov
jecxz
in
sbb
lahf
in
or
inc
sbb
xchg
sub
add
cmp
pop
mov
fwait
icebp
sbb
inc
add
inc
sub
pop
popa
or
mov
dec
jmp
xchg
inc
add
lods
inc
sbb
aad
xor
xor
push
jp
sbb
popf
ins
fwait
ror
mov
sti
mov
in
cmp
(bad)
jno
jno
cmp
icebp
imul
sbb
sbb
pop
cli
jno
mov
pop
add
pop
cmp
mov
sbb
inc
cmp
sub
in
sahf
pusha
and
cwde
mov
and
pop
cwde
xchg
cwde
mov
ins
int3
rcr
sub
xor
adc
sub
xor
sbb
lea
es
(bad)
push
ins
lds
inc
and
xor
mov
jno
int3
sub
je
cs
cs
jp
mov
les
(bad)
sbb
inc
fadd
jge
ret
js
(bad)
jle
pop
sahf
loop
hlt
sub
or
or
mov
gs
inc
push
jb
xchg
(bad)
arpl
cmp
repz
add
ds
pusha
or
push
mov
(bad)
retf
push
mov
(bad)
xchg
pop
inc
xlat
mov
(bad)
push
or
mov
sub
ins
fbstp
inc
and
or
fadd
in
ret
jle
cmp
sbb
jno
shl
mov
out
or
mov
pop
pand
movs
sti
ror
mov
add
xchg
out
inc
lock
icebp
and
and
dec
movs
rcr
ins
mov
dec
out
xchg
into
ret
push
dec
ret
or
inc
ds
ss
adc
iret
xor
mov
mov
das
(bad)
adc
jb
rcl
stos
mov
pop
leave
mov
mov
inc
add
pop
lea
shl
out
sub
ja
adc
fwait
mov
outs
ret
pop
jp
(bad)
cmp
sbb
push
sbb
jno
inc
pop
dec
jecxz
into
jb
pop
into
jecxz
jecxz
pop
les
push
jo
out
(bad)
jne
ror
sbb
jno
inc
sbb
inc
cmp
fcom
mov
xlat
mov
das
nop
mov
ret
movs
and
jb
mov
lds
ror
or
stc
pop
add
bound
push
test
or
lods
cld
jle
mov
outs
inc
xor
add
in
rcr
sub
repz
inc
aas
jge
xlat
jno
aaa
jno
ja
cmp
mov
push
(bad)
jbe
dec
sub
jp
fild
adc
add
push
mov
sub
cmp
xchg
out
pop
sbb
dec
mov
lds
mov
ins
mov
cmp
div
mov
psadbw
scas
sbb
jmp
dec
(bad)
adc
rcl
pop
shl
add
addr16
cmp
xor
daa
call
mov
das
mul
push
loopne
fidiv
inc
jno
(bad)
jno
cmps
jo
rol
mov
mov
call
paddw
inc
pop
bound
arpl
xor
cmp
xchg
xchg
xchg
sub
adc
mov
sub
cmp
xor
push
mov
shr
sahf
faddp
jbe
sbb
dec
fmul
mov
rol
repz
sbb
cmp
jle
shl
inc
cmp
adc
jno
arpl
or
xor
ret
xor
cli
call
popf
mov
cmp
sbb
inc
mov
ror
loop
inc
xor
jmp
and
xchg
xchg
xchg
jmp
ss
in
sub
imul
cmp
jmp
sub
fist
mov
sub
pop
xchg
inc
add
aam
mov
test
push
imul
es
mov
cmp
bound
fld
sbb
lds
in
inc
cmp
ret
jno
pusha
fadd
sbb
add
mov
fistp
inc
pop
cli
jno
xlat
jno
aaa
jno
cmp
popa
cmp
cmp
xchg
gs
push
neg
xor
xor
or
and
cmp
inc
push
cmps
bound
pushaw
es
cs
ins
add
push
les
push
pusha
adc
lds
mov
pop
mov
push
mov
xchg
test
cmp
scas
lds
lods
addr16
dec
fmul
add
or
popa
psadbw
(bad)
jo
daa
rol
cs
cs
jp
mov
fild
cmp
inc
xor
retf
int3
outs
dec
inc
xor
inc
or
xchg
xchg
pop
cs
call
int3
out
dec
jmp
xchg
mov
xor
mov
pop
mov
jecxz
jo
ds
cmp
dec
loope
into
loopne
mov
or
jp
(bad)
mov
sbb
cmp
mov
in
jnp
jbe
jecxz
repnz
dec
(bad)
data16
xchg
mov
mov
ret
or
inc
ds
or
and
enter
mov
call
ins
stos
push
dec
scas
ror
xchg
jge
ins
push
arpl
arpl
scas
xor
hlt
push
ins
lds
inc
and
or
fadd
mov
xchg
cmp
clc
adc
jecxz
jecxz
cmp
loop
jge
in
sbb
ror
mov
pop
mov
hlt
jecxz
scas
jecxz
outs
loop
out
pusha
add
(bad)
popa
mov
adc
cld
or
js
jmp
sar
enter
mov
fstp
arpl
push
or
and
mov
cmp
dec
push
(bad)
js
retf
mov
aam
or
rcr
(bad)
arpl
mov
pop
mov
cmp
test
fld
mov
in
gs
sbb
(bad)
mov
mov
je
fisttp
les
pushf
(bad)
sbb
cs
jp
cmps
pop
push
rol
mov
icebp
dec
or
sbb
out
mov
mov
loopne
push
popa
adc
bnd
xor
leave
dec
inc
sbb
xchg
xchg
iret
out
mov
ret
cmp
jns
(bad)
js
shl
syscall
sub
arpl
push
bound
push
arpl
dec
push
xchg
pop
mov
test
pop
mov
push
arpl
test
add
pop
lea
(bad)
or
ret
inc
adc
lea
popa
jle
cmp
add
retf
xchg
hlt
or
rol
bound
div
test
cwde
cld
pop
jl
and
das
cwde
ret
cwde
cli
pop
gs
shl
xchg
and
adc
push
lea
mov
or
pop
mov
outs
inc
sbb
pusha
das
mul
push
loopne
push
mov
sbb
les
(bad)
cmps
jno
pop
mov
jecxz
jge
cmp
call
xlat
jno
jge
fmul
loopne
push
jno
inc
mov
mov
adc
mov
push
xor
dec
mov
imul
mov
pop
mov
sub
mov
or
ror
mov
add
xchg
into
pusha
add
sbb
ret
aas
int
or
cld
dec
dec
cmps
xor
and
xor
arpl
data16
out
push
scas
adc
sub
pop
mov
sub
sub
mov
in
mov
lods
ror
dec
sub
(bad)
aad
retf
js
rcr
jbe
jbe
(bad)
fmul
aaa
fist
popa
psadbw
div
fisub
mov
ror
rcl
jno
inc
pop
cmp
cmps
rol
fnstsw
jecxz
jp
pop
lds
ja
push
loopne
cmp
jge
lea
lds
inc
xor
inc
or
xchg
xchg
pop
jns
jns
xor
xor
or
test
xor
push
imul
je
sub
push
ror
push
jne
xor
add
sbb
pusha
adc
mov
mov
ror
popa
bsr
sti
mov
pop
jo
xchg
mov
cmp
(bad)
pushf
ret
popa
jl
pop
mov
jmp
fdiv
jecxz
jge
in
or
rol
bound
div
test
cmp
and
mov
add
mov
mov
popf
into
inc
push
popf
retf
rcpps
or
cwde
test
cwde
cmp
test
or
dec
push
retf
retf
jmp
push
mov
add
pop
lea
loopne
dec
fmul
jbe
adc
rol
mov
mov
add
jbe
mov
cmps
jno
rol
lds
mov
aaa
jo
mov
outs
push
out
test
popa
xor
nop
mov
and
cmp
inc
adc
pop
mov
lds
xchg
push
rcl
(bad)
or
add
jae
push
xor
int
in
ss
movs
dec
loope
into
loopne
mov
lea
repnz
mov
mov
ret
hlt
add
ret
cmp
xlat
xor
mov
and
and
xor
mov
int
mov
mov
adc
xchg
test
xor
mov
push
iret
js
(bad)
rcr
rol
bound
fmul
xor
pop
push
or
(bad)
cmp
dec
mov
push
cmp
pop
in
dec
mov
ror
inc
ffreep
add
in
and
rol
(bad)
popa
cmp
fbld
mov
sbb
xchg
jae
mov
jmp
mov
and
mov
ret
sub
(bad)
sbb
cdq
mov
pusha
pop
mov
sub
mov
xchg
shl
xchg
mov
push
mov
(bad)
mov
scas
push
stos
mov
imul
rol
sbb
mov
pop
fmul
mov
cmp
fisttp
ret
jno
pusha
fisttp
cmps
jo
xor
aaa
cs
cs
cli
ror
xor
jo
aaa
sbb
les
xor
and
inc
mov
xor
sti
or
lds
inc
xchg
mov
ret
movs
and
cmps
jb
xor
ror
test
mov
mov
hlt
and
pop
and
sbb
push
or
cmps
push
or
xor
xor
sbb
int
dec
outs
addr16
es
pop
pop
mov
lods
push
and
fdiv
rcl
jo
sbb
ds
mov
and
mov
aaa
jo
arpl
push
push
sbb
lds
out
popa
or
xor
ret
int
push
add
xchg
mov
ret
movs
and
jns
mov
sbb
and
adc
add
push
mov
cmp
sub
push
sbb
int
sub
add
pop
push
pop
into
rcr
(bad)
or
mov
gs
shl
ffree
xor
add
gs
push
mov
push
data16
cwde
test
cwde
cmp
or
mov
dec
push
cld
push
out
xchg
mov
movs
mov
mov
retf
sbb
call
add
hlt
push
rcr
fild
or
sub
ja
sbb
scas
cs
cmp
imul
(bad)
(bad)
jecxz
into
mov
fnstsw
push
hlt
mov
jmp
mov
sbb
pop
or
push
xchg
ret
js
adc
clc
add
or
inc
mov
movs
and
test
fwait
(bad)
pop
hlt
ins
int3
rcr
adc
stc
pop
add
imul
test
pop
mov
fcmovnbe
ins
xlat
mov
mov
(bad)
or
ret
inc
and
mov
ror
lods
fadd
js
push
rol
neg
mov
daa
rol
mov
push
std
pop
jmp
into
repz
fldcw
into
xchg
fs
pushf
dec
dec
or
dec
cmps
test
and
dec
xor
push
inc
xchg
and
xchg
and
dec
xchg
and
in
lods
jne
icebp
jnp
jecxz
(bad)
jns
div
cmp
jnp
xlat
jge
(bad)
cmc
fstp
scas
retf
pop
jmp
cs
mov
in
les
bound
mov
fmul
mov
les
cmp
and
adc
repz
mov
adc
pop
loop
mov
add
and
jns
xchg
fwait
cmp
scas
jns
jl
imul
retf
mov
dec
xchg
and
push
stos
les
mov
es
mov
adc
mov
(bad)
and
adc
stc
mov
ret
mov
jge
and
or
pop
dec
mov
adc
xchg
jns
inc
dec
and
mov
mov
mov
pop
inc
sub
push
adc
mov
fbstp
loope
lods
les
daa
pop
out
and
xchg
pop
and
xchg
pop
loope
sub
cld
cmp
cmp
lds
cmc
adc
cld
or
mov
adc
loop
loope
loope
or
dec
and
mov
jl
xchg
das
inc
adc
iret
loop
sub
mov
xor
xchg
inc
push
and
adc
mov
inc
xor
jnp
adc
cmps
jl
pushf
push
ss
pop
repnz
inc
aaa
repnz
mov
mul
mov
rcr
xchg
inc
mov
les
xor
cdq
cwde
inc
dec
in
cmps
adc
mov
jl
xchg
cwde
inc
sub
jmp
les
aad
pop
bnd
scas
daa
adc
bound
mov
fmul
and
jnp
inc
les
or
jnp
cmp
out
xchg
les
cmp
pop
and
xchg
pop
and
pop
les
cs
push
gs
cmove
cmp
enter
jmp
inc
pop
and
xchg
inc
adc
or
sbb
mov
dec
adc
dec
adc
mov
inc
push
es
adc
mov
inc
inc
mov
dec
xor
pop
adc
mov
inc
hlt
es
adc
mov
ss
jl
mov
pop
inc
lods
and
stos
mov
les
bound
cmc
xchg
mov
sbb
adc
scas
adc
mov
les
mov
push
in
das
adc
in
add
adc
fwait
adc
scas
sbb
xchg
cmc
push
shl
dec
in
sub
sub
xlat
ins
and
jp
mov
jmp
repnz
push
and
repz
lock
cmp
xchg
push
mov
mov
xlat
xor
ds
in
sbb
adc
xchg
test
dec
inc
test
test
sub
(bad)
fs
mov
cmc
test
dec
fisubr
xchg
add
sbb
dec
ja
xor
inc
stos
jmp
jp
sub
arpl
sahf
sub
push
int3
(bad)
fnstenv
cld
(bad)
scas
in
out
stos
and
stos
cwde
(bad)
xchg
pop
add
lods
jno
cmc
int3
out
test
sar
(bad)
lods
in
out
shl
outs
push
xor
or
push
pop
out
jbe
dec
out
pop
loope
fcomp
ret
cmp
mov
or
mov
cmp
sbb
or
cmp
and
mov
fidivr
iret
or
and
sbb
fwait
shl
int3
xchg
sub
mov
repnz
sahf
(bad)
out
aas
jle
icebp
sti
(bad)
fistp
(bad)
jecxz
pop
mov
out
aas
jle
icebp
sti
(bad)
fistp
(bad)
jecxz
pop
mov
out
(bad)
jg
dec
jae
(bad)
loope
cmps
fwait
imul
pop
imul
fld
std
mov
jmp
xchg
mov
mov
jo
jmp
add
(bad)
cdq
xlat
pusha
shl
ret
hlt
dec
push
dec
push
xchg
loop
push
dec
dec
dec
jns
pop
dec
sub
mov
das
movs
gs
xchg
xchg
popf
push
inc
mov
push
adc
push
dec
pop
push
xor
imul
cs
je
pop
movs
jmp
mov
cmp
retf
push
push
fstp
pop
mov
(bad)
cmps
movs
inc
mov
cs
add
fmul
ds
sub
dec
jae
dec
xcrypt-ecb
cmps
(bad)
hlt
je
xchg
fimul
sbb
mov
mov
jnp
call
push
xor
jmp
push
and
pop
sahf
or
pop
in
push
ja
sbb
and
ret
lea
bound
mov
std
in
push
and
mov
mov
fld
xor
popa
mov
dec
sbb
cmc
mov
xchg
cmp
enter
and
inc
into
inc
xor
cmps
dec
jmp
inc
retf
jmp
cs
mov
push
fnstenv
in
retf
scas
in
xchg
out
jle
out
ins
sahf
mov
clc
mov
int3
dec
sub
dec
pop
mov
in
addr16
repnz
addr16
sub
idiv
mov
in
and
mov
(bad)
jge
repz
xchg
xor
sub
repz
xchg
xor
ins
leave
dec
mov
leave
ins
mov
leave
iret
pusha
iret
xchg
pop
ret
int
dec
mov
push
retf
fst
fs
retf
repnz
jg
daa
div
inc
icebp
(bad)
mov
jg
div
adc
mov
out
mov
nop
in
xchg
pop
cmp
jl
inc
sub
fxch
mov
in
retf
aas
push
xor
retf
push
(bad)
out
mov
outs
cdq
mov
cmps
retf
jg
lahf
das
jmp
jmp
cmp
cli
mov
sub
pop
scas
mov
push
in
retf
stos
xchg
mov
or
ins
pop
shl
cs
sub
fcomip
adc
mov
sbb
cmp
retf
(bad)
xchg
das
pop
div
mov
cs
scas
sub
or
xor
sti
jmp
jecxz
out
je
sbb
stc
mov
mov
push
aaa
pop
out
mov
ficom
mov
ins
retf
push
mov
mov
outs
stc
push
jae
cmp
mov
imul
scas
(bad)
div
(bad)
out
pop
mov
aad
xchg
in
retf
dec
(bad)
int
in
ins
ins
fsubp
lods
in
xchg
cmp
lods
mov
fstp
aaa
xor
mov
mov
push
call
inc
cmc
mov
xor
ja
cmps
test
out
stos
xor
(bad)
cmp
ja
sbb
iret
cli
jg
addr16
ins
cmp
mov
pop
cld
dec
cmp
(bad)
outs
adc
jae
idiv
jae
call
sahf
xor
pop
retf
fwait
xchg
or
ins
gs
lods
ins
sub
sahf
sub
scas
mov
gs
push
repnz
outs
repz
ins
push
imul
lods
jmp
sbb
inc
ficomp
mov
mov
arpl
outs
jae
fidivr
cld
imul
dec
aas
outs
repnz
lahf
inc
cmp
out
pop
icebp
cmp
lahf
arpl
imul
cmps
xchg
mov
outs
jns
repnz
dec
daa
ret
xor
fs
in
sub
pop
cs
shl
call
jmp
repnz
out
fcomp
fsub
enter
xchg
jbe
ja
vmovdqu
fwait
cmp
mov
cs
sub
ja
movs
mov
cmp
pop
add
mov
jmp
stc
mov
sub
out
sub
jle
pop
mov
cld
scas
jmp
call
cmp
scas
xor
jecxz
jbe
(bad)
mov
fdiv
xchg
adc
icebp
xchg
repnz
test
mov
pop
div
(bad)
(bad)
scas
jnp
jae
or
fst
cld
movs
lahf
mov
adc
sub
pop
arpl
aam
in
(bad)
out
iret
ins
jle
out
ins
sahf
jg
mov
cmp
rcr
iret
add
(bad)
pop
pusha
out
jl
add
pop
push
xor
ins
cmp
xor
(bad)
loopne
repz
dec
or
ja
jne
jl
(bad)
xlat
clc
aas
retf
sbb
retf
or
pop
mov
fs
cdq
cmp
mov
sbb
pop
pop
mov
or
push
clc
xchg
retf
(bad)
lods
imul
ins
fsubp
pop
ja
leave
cmp
pop
cdq
ds
hlt
loope
sub
pop
mov
sbb
(bad)
cld
lods
imul
aad
pop
int
call
repz
xchg
sub
pop
scas
sbb
popa
es
xor
fmul
shl
push
dec
dec
in
mov
push
loopne
(bad)
pop
push
out
pop
popa
out
jbe
or
fbstp
test
scas
dec
sbb
sub
repnz
mov
(bad)
dec
idiv
xchg
cmp
out
and
cmps
jge
mov
pushf
mov
retf
shl
pop
push
mov
jbe
sbb
jmp
pop
imul
in
out
inc
data16
scas
int
fidivr
xor
in
cdq
popa
inc
jno
cli
(bad)
int3
sub
int3
xor
sub
ror
jle
int
data16
mov
std
dec
xor
out
lahf
gs
push
jno
sbb
pop
icebp
std
xor
jg
std
mov
sub
lds
push
cwde
ins
clc
clc
ins
repz
cli
int3
xlat
mov
(bad)
sbb
push
cmp
aas
in
sbb
push
out
pop
push
push
popa
out
out
adc
loopne
pop
mov
out
iret
in
ins
jle
repnz
mov
pop
mov
shl
adc
jg
or
(bad)
cmp
inc
out
sti
sub
addr16
retf
mov
out
sub
aaa
stc
(bad)
cli
cmp
inc
ret
iret
sub
fnstenv
mov
xor
icebp
xor
in
mov
dec
lahf
in
(bad)
xor
jne
sti
mov
icebp
out
sub
jge
mov
jp
cli
dec
pop
cmp
cli
adc
cli
inc
loopne
cmc
adc
outs
pop
xchg
sbb
mov
push
jae
xchg
sub
mov
ins
stc
fwait
gs
lea
fisubr
pop
fwait
mov
int
push
ins
xor
sti
jb
sbb
pop
jmp
ins
xor
mov
test
je
outs
xor
outs
mul
repz
pop
ss
rcr
ja
sbb
int
je
ss
shl
addr16
fisttp
sbb
push
lds
mov
std
pusha
cdq
jecxz
ret
repnz
in
sub
jl
out
push
inc
out
fild
ins
mov
inc
retf
popa
xchg
jmp
das
ins
xor
clc
mov
stos
inc
aas
mov
mov
mul
ds
ds
fld
mov
mov
fist
or
mov
popa
cmp
cmp
popa
repz
mov
jle
fld
cmps
icebp
mov
(bad)
(bad)
fcmovnu
jb
push
ret
sti
ja
call
(bad)
fisttp
int3
out
lods
out
imul
sar
push
jne
icebp
int
call
(bad)
out
call
mov
and
addr16
(bad)
clc
in
mov
(bad)
mov
sti
(bad)
js
pop
out
jmp
std
jg
dec
(bad)
(bad)
(bad)
dec
jp
out
mov
sti
fisttp
retf
in
jge
mov
cdq
jnp
outs
jns
repnz
retf
cmp
jmp
aaa
push
mov
lahf
ins
rep
sti
int
dec
in
aaa
arpl
add
mov
xor
jg
mov
sub
in
sub
pusha
xabort
add
sbb
pusha
(bad)
cwde
in
mov
(bad)
daa
push
call
out
sbb
mov
call
cld
xchg
sbb
push
data16
mov
icebp
outs
and
sub
mov
out
push
(bad)
adc
ret
jmp
cld
out
or
jg
clc
mov
sbb
jge
inc
(bad)
dec
mov
icebp
jle
fisubr
sti
in
js
sbb
cmp
idiv
xchg
mov
repnz
sub
movs
(bad)
fwait
xchg
(bad)
aas
outs
out
lock
retf
popa
xchg
or
mov
push
dec
cmp
pop
dec
cwde
mov
xor
sbb
icebp
or
ror
(bad)
jg
ret
not
data16
mov
int
retf
lahf
xor
ins
je
mov
dec
call
clc
movs
sbb
cmc
xchg
data16
dec
cmps
int3
dec
dec
sahf
xor
jge
xchg
sbb
retf
cmps
int3
dec
daa
lahf
xor
pop
jae
mov
stos
push
data16
push
dec
cdq
xchg
cmp
push
mov
icebp
mov
sti
mov
lahf
repz
(bad)
std
push
addr16
fwait
cld
aas
out
mov
mov
mov
jnp
js
sbb
inc
jecxz
push
mov
cld
hlt
inc
out
ret
push
call
retf
xchg
clc
dec
jns
pop
mov
xor
sub
and
pop
or
xchg
xchg
add
leave
push
or
pop
xchg
mov
(bad)
mov
add
mov
add
add
cld
sub
(bad)
dec
ss
sbb
mov
(bad)
adc
dec
jbe
or
leave
inc
leave
sbb
xchg
dec
xchg
xchg
jmp
ficom
xchg
xchg
(bad)
mov
fsub
shl
inc
repnz
enterw
push
dec
sbb
dec
ds
push
icebp
mov
xchg
mov
(bad)
jl
in
iret
test
dec
sbb
cmp
inc
push
fiadd
jp
or
xchg
stc
push
dec
add
repnz
jns
or
test
sub
or
xchg
jmp
xchg
icebp
leave
mov
shl
movs
es
fs
mov
mov
sbb
ins
test
jno
xor
lock
jns
or
ret
addr16
push
xor
test
icebp
imul
ret
out
retf
retf
adc
jmp
repnz
and
mov
jl
scas
jl
mov
in
lock
test
sub
in
leave
inc
test
xor
dec
cwde
int
sub
aam
pop
sub
lock
repnz
rol
push
scas
jl
mov
int
loop
jbe
add
inc
sub
stc
test
jnp
add
(bad)
addr16
dec
(bad)
in
retf
dec
jae
out
retf
fcom
inc
test
out
fist
inc
jmp
xchg
cmp
out
xchg
mov
xchg
mov
iret
xchg
std
mov
xchg
jge
dec
cmp
movs
sub
jo
add
and
sub
ficom
out
push
retf
dec
rcl
pop
inc
and
popf
mov
cld
aaa
push
dec
push
imul
cmp
call
sub
es
cmp
cmp
sub
xchg
jns
pushf
jno
repnz
push
leave
mov
jns
sti
push
ror
jp
call
and
icebp
mov
add
scas
je
fimul
mov
jb
push
lods
cmp
adc
jb
xchg
mov
stos
dec
data16
inc
dec
xor
push
jle
int3
addr16
int3
ins
call
xchg
dec
nop
pop
lods
mov
mov
sbb
stos
push
ja
stos
mov
sub
push
cwde
stos
mov
xchg
pop
and
pop
cmc
loop
fcmovbe
xchg
fistp
lahf
daa
xlat
and
pop
cmc
ss
jp
popf
icebp
mov
stos
mov
outs
xor
push
inc
cwde
pop
xor
jae
xor
aad
repnz
fldenv
cmp
push
xor
fcomp
loope
mov
lahf
mov
cdq
leave
jp
cdq
aad
sbb
push
popa
xor
stos
xchg
data16
push
inc
mov
data16
arpl
xchg
jno
ds
and
xchg
nop
pop
lods
daa
cwde
pop
or
call
cdq
out
mov
iret
cli
or
pop
dec
xor
pop
mov
rol
xor
cmc
xor
stos
mov
jl
enter
int3
lods
xchg
push
adc
adc
stos
cmc
sub
ret
mov
jl
enter
int3
fadd
push
cmp
mov
retf
int3
jo
movs
stos
call
stc
data16
mov
pusha
out
pop
push
pop
sub
aad
mov
loope
mov
or
cdq
loope
pop
lods
xchg
cdq
sbb
cdq
fstp
cdq
fist
outs
mov
int3
push
mov
aad
fldcw
fbstp
mov
xor
aad
xor
inc
out
pop
ins
scas
jle
int3
fs
mov
jle
int3
pop
test
sbb
lods
inc
int3
pop
test
mov
(bad)
ror
pop
test
nop
pop
outs
data16
fisub
sub
xor
xor
push
outs
xor
push
scas
ss
ret
and
jg
out
aam
push
ins
ror
cdq
stos
push
retf
push
xor
xor
xchg
mov
cmp
hlt
movs
cdq
out
adc
gs
cmp
mov
in
les
sahf
cmp
sti
or
add
cdq
movs
jbe
sahf
repz
imul
leave
pop
stc
mov
ficom
xor
pop
bound
mov
cwde
jbe
retf
push
mov
jmp
hlt
in
fild
stos
in
mov
aad
rcl
cmp
xor
and
stc
mov
test
addr16
dec
cmp
mov
out
and
mov
outs
icebp
pop
mov
aad
mov
ret
ja
dec
out
arpl
dec
pop
icebp
jge
out
push
xchg
sub
(bad)
icebp
mov
lock
and
or
out
adc
push
mov
jle
je
mov
or
andps
sbb
pop
sub
popf
(bad)
scas
test
jne
aam
dec
pop
mov
nop
out
inc
stos
add
stos
stos
mov
ret
dec
ficom
lock
jno
push
fild
inc
jne
push
repnz
stos
ret
mov
cld
jp
retf
outs
push
inc
inc
sub
push
push
leave
inc
jne
jl
out
paddb
gs
sbb
mov
repnz
mov
mov
test
arpl
mov
ja
inc
push
mov
frstor
jle
push
mov
frstor
lahf
jmp
daa
dec
xchg
pop
imul
mov
out
iret
(bad)
stc
add
stc
push
add
mov
or
outs
inc
and
or
lahf
push
leave
out
test
or
cld
sbb
push
std
add
iret
pop
(bad)
xchg
jl
bound
push
les
imul
mov
out
push
aad
leave
add
adc
out
sti
mov
(bad)
adc
(bad)
icebp
out
pop
mov
(bad)
xor
and
mov
fild
xchg
mov
sbb
xchg
push
mov
xor
or
jle
cmp
iret
push
mov
push
jns
fild
mov
push
icebp
push
push
jb
in
jp
jp
call
xchg
pushf
push
imul
jg
jl
test
lods
sub
or
and
aas
sbb
dec
adc
xchg
fistp
lahf
or
cld
mov
daa
jns
pavgb
xchg
mov
daa
jns
cdq
clc
sti
mov
aad
rcl
test
xchg
jmp
jl
test
pop
push
pushf
jmp
jl
test
stos
sub
push
call
clc
je
in
push
mov
xor
ret
push
xor
cld
jne
dec
adc
and
pop
outs
test
push
inc
loop
mov
aad
rcl
pop
mov
cld
ins
call
jl
test
mov
adc
add
mov
pop
rcl
xchg
pop
je
cld
push
jg
cld
inc
push
mov
aad
sbb
aas
clc
imul
xchg
mov
and
(bad)
loope
inc
and
test
(bad)
icebp
lahf
inc
and
and
mov
and
jmp
ret
nop
mov
pop
ud0
push
adc
cmc
icebp
push
dec
ja
jg
(bad)
cmp
or
test
dec
cld
pop
push
dec
sub
and
xchg
push
dec
jbe
or
sbb
test
daa
movs
shl
aas
lea
add
sti
and
sub
dec
xchg
addr16
inc
and
or
or
jb
outs
dec
xor
aas
inc
cmc
pop
test
push
mov
out
hlt
sbb
(bad)
push
pop
stc
je
stos
stc
and
xchg
jns
jno
and
mov
pop
xor
(bad)
jbe
xchg
push
dec
inc
fstp
jae
inc
out
in
lods
cmp
and
loope
adc
jb
(bad)
sbb
ret
call
(bad)
cmp
mov
inc
mov
add
shl
adc
cld
inc
test
inc
fisttp
clc
pop
cmps
cli
adc
push
pop
ja
pop
or
(bad)
clc
pop
sar
xchg
xchg
sar
and
sahf
clc
pop
mov
jl
dec
addr16
adc
mov
lea
or
lock
mov
fcomp
iret
in
(bad)
push
dec
pop
fstp
pop
push
mov
sti
pop
cwde
cmp
pop
call
push
dec
add
inc
mul
imul
dec
sub
and
inc
mov
push
sub
inc
icebp
push
mov
lock
xchg
stos
jp
mov
jo
mov
pop
xlat
sbb
add
aam
mov
sub
(bad)
push
lods
add
push
and
aad
out
cmp
push
stos
pop
daa
loopne
inc
and
pop
call
cld
arpl
cmp
mov
(bad)
jno
in
cmp
push
cmp
es
cmps
(bad)
jmp
dec
jmp
jp
inc
jo
aad
nop
rol
hlt
in
loopne
jl
test
imul
clc
xchg
mov
hlt
movs
jno
sub
push
iret
mov
and
lahf
jmp
mov
movs
dec
or
movs
ficom
jns
das
mov
push
pop
jecxz
inc
sub
in
and
jo
mov
xchg
push
in
add
adc
mov
dec
jmp
fistp
pop
leave
cmc
sbb
sbb
mov
nop
mov
sbb
push
in
add
sbb
pushf
sbb
sbb
sti
cwde
pop
and
xor
add
and
ret
je
jle
jmp
cmc
in
sbb
pop
mov
jns
loopne
cld
retf
nop
rol
and
movs
xchg
fiadd
rol
jb
rcr
jnp
mov
pop
test
ds
shr
aas
adc
popf
dec
icebp
or
sbb
cld
into
addr16
push
repnz
cmp
jmp
aaa
jle
je
jno
mov
jp
jle
hlt
and
jl
xor
jnp
push
addr16
add
mov
add
sbb
pop
les
push
clc
add
lods
test
pop
cmp
iret
push
cmp
call
aaa
clc
pushf
push
retf
add
test
ds
jl
push
xor
lds
fbld
inc
sub
fmul
idiv
adc
gs
dec
jle
jae
lahf
pop
push
inc
lahf
and
jmp
ret
sub
ds
es
aam
cmps
mov
into
popa
or
adc
cmp
mov
in
mov
mov
icebp
test
out
out
dec
push
in
mov
lahf
xor
xchg
mov
gs
or
cwde
sub
gs
sbb
test
out
dec
jno
mov
daa
(bad)
mov
retf
hlt
jne
jb
leave
ret
into
pop
clc
push
push
leave
or
push
hlt
in
out
mov
ffreep
mov
aas
int
or
add
jae
cwde
fisttp
sub
out
jb
jnp
(bad)
stc
retf
in
jle
leave
sbb
(bad)
ds
mov
inc
sub
lods
test
in
test
inc
dec
xor
sbb
in
push
push
mov
add
fiadd
xchg
mov
cs
push
movs
arpl
and
lahf
addr16
cld
sbb
jmp
or
xchg
adc
fild
push
aas
fs
f2xm1
neg
mov
push
(bad)
xchg
popf
jmp
nop
cmc
loop
sar
xchg
nop
das
adc
inc
push
mov
or
xchg
test
and
lds
pop
jl
xor
sbb
sbb
fcomp
inc
and
arpl
std
clc
ins
push
dec
sub
ror
nop
scas
(bad)
xchg
setae
int
leave
add
adc
add
push
nop
cld
ds
sbb
cli
or
xchg
and
mov
add
add
pop
jl
mov
loope
loop
xchg
clc
mov
jns
pop
xor
xchg
cmp
pop
or
punpckhdq
jmp
mov
loopne
shl
mov
enter
ret
hlt
sub
imul
sbb
sub
in
lea
or
and
and
dec
xor
cmovo
mov
push
test
mov
push
repnz
sub
in
pop
add
loop
movs
pop
or
stos
clc
sub
pop
xchg
retf
nop
cmc
loop
mov
icebp
push
movs
pop
add
aas
pop
shr
add
sbb
mov
jp
mov
shl
test
(bad)
sub
hlt
sub
inc
jne
retf
and
in
push
cmp
lods
scas
ds
retf
clc
ja
std
mov
dec
int3
mov
inc
repnz
adc
xchg
arpl
inc
jp
pop
adc
pop
mov
mov
mov
push
dec
xor
push
pop
pop
pop
jp
mov
imul
jp
jmp
jl
call
lock
and
ss
in
push
imul
test
scas
scas
or
int3
push
dec
xchg
loop
retf
xchg
cmc
mov
loope
inc
mov
add
retf
or
pop
sbb
cmp
adc
(bad)
xor
loop
dec
mov
hlt
in
ror
ja
sub
into
sub
add
jmp
daa
aam
jmp
or
aaa
hlt
xor
push
repnz
scas
cmp
je
jg
adc
mov
je
pusha
test
(bad)
sub
stc
xlat
mov
xchg
lds
mov
jmp
jmp
cld
mov
std
(bad)
lahf
jmp
push
pop
sub
pop
in
fdivr
xlat
xor
and
mov
or
fwait
loope
icebp
push
and
pop
js
data16
mov
aaa
pushf
jl
js
jle
aam
scas
outs
and
data16
pushw
aam
fidiv
call
outs
test
pop
jecxz
outs
push
inc
js
pop
adc
xchg
adc
add
mov
aaa
fldcw
inc
sub
mov
mov
mov
aaa
aad
test
xor
mov
clc
(bad)
and
and
lods
or
aad
nop
jne
sahf
gs
or
outs
ss
nop
aad
sahf
arpl
aam
shl
xchg
jmp
lods
pop
test
xor
cmp
mov
fild
add
iret
and
sbb
mov
ret
fiadd
loope
cmp
push
push
push
mov
mov
jmp
imul
cmp
pop
inc
jne
fs
fbstp
stos
push
push
call
clc
sbb
scas
jl
int3
jp
mov
jb
mov
lods
xchg
lock
movs
inc
sub
xor
adc
pop
pop
loope
int3
sbb
xor
and
mov
adc
jp
and
sbb
mov
xor
and
inc
cmp
fwait
int
or
push
add
mov
int3
cld
lock
adc
daa
jge
mov
xchg
pushf
imul
lahf
sbb
jbe
iret
inc
into
clc
xchg
dec
icebp
lahf
inc
sub
cmp
ds
jg
xchg
cld
call
in
cld
outs
test
daa
fild
inc
enter
add
mov
paddd
in
pop
stc
adc
mov
jg
jb
(bad)
in
ret
out
xchg
clc
not
adc
rcr
cwde
jg
cmc
mov
and
rcl
cld
and
ds
aas
test
add
xlat
inc
mov
mov
nop
sar
sbb
adc
jle
aas
sub
lds
test
and
arpl
push
int3
not
xchg
sub
jecxz
stos
nop
jae
in
(bad)
and
xchg
neg
jb
(bad)
pushf
ret
in
iret
(bad)
shl
xchg
and
mov
enter
dec
jle
repnz
pop
enter
cmp
fs
pop
and
sub
adc
adc
push
(bad)
jg
cld
jb
addr16
iret
nop
push
cmps
push
out
in
int3
das
push
dec
cmp
and
jbe
push
int3
outs
xchg
fbstp
xlat
mov
xor
xchg
stc
scas
jecxz
inc
dec
call
and
dec
dec
int3
sub
sub
xor
ins
repnz
nop
xchg
cmps
jmp
mov
in
cld
pop
push
dec
dec
(bad)
cmp
adc
(bad)
jae
hlt
fs
sti
pop
fld
jnp
jge
fild
ds
test
std
add
leave
(bad)
pop
nop
jmp
fimul
mov
fisttp
cmp
inc
out
sub
fild
mov
hlt
inc
test
or
daa
in
jmp
in
sbb
mov
bound
jle
in
jmp
fs
inc
and
xchg
and
pop
push
out
dec
ret
fld
cli
jae
pop
mov
cmp
mov
popf
(bad)
cmp
xchg
jecxz
xchg
bound
dec
jg
repnz
arpl
icebp
inc
and
mov
test
(bad)
mov
cmp
cmp
rcl
pop
or
push
sbb
jb
hlt
addr16
and
cmp
add
xor
repnz
jae
jb
cmc
addr16
lahf
(bad)
cmp
mov
adc
xchg
add
out
into
mov
pop
or
(bad)
push
retf
push
enter
test
or
jmp
test
add
pop
xchg
stc
dec
push
sbb
inc
test
add
dec
test
repz
pop
cld
scas
push
leave
and
cmp
fs
(bad)
inc
cmp
sub
(bad)
sub
xchg
clc
sub
fild
aas
mov
clc
imul
not
iret
sub
dec
nop
push
(bad)
pop
sbb
int3
iret
push
retf
sub
dec
repnz
mov
xchg
xlat
ret
in
jno
adc
fwait
cld
push
cmp
fbld
cmp
pop
mov
cwde
fbld
addr16
jg
int3
cmc
ins
dec
pusha
inc
cwde
sbb
sahf
(bad)
fadd
dec
not
push
movs
pop
repnz
and
push
push
mov
fild
out
inc
mov
pop
push
cmp
xor
(bad)
(bad)
or
mov
cmp
adc
xor
lahf
icebp
mov
cli
push
in
xchg
lock
pop
push
mov
fist
jmp
in
xchg
lock
and
mov
lea
addr16
jg
cld
sbb
imul
enter
xchg
jmp
jl
jb
hlt
mov
jg
cmp
mov
jmp
sbb
scas
test
icebp
or
sbb
enter
and
das
jg
cld
cmp
xor
pushf
push
mov
je
sub
stos
dec
push
mov
je
jmp
out
dec
cld
sub
xchg
lock
aaa
aam
or
rcr
rcl
xchg
pop
sub
mov
xchg
lock
das
push
adc
hlt
mov
push
repz
dec
mov
nop
xchg
pop
inc
aas
stos
imul
clc
je
and
push
ret
popa
test
and
cwde
cld
add
mov
cmp
sbb
je
pushf
inc
add
leave
pop
test
inc
into
mov
mov
out
shr
ficomp
jl
test
sub
push
rep
aaa
push
rcr
sub
mov
out
sahf
hlt
cmc
es
in
add
xchg
es
cli
jnp
xor
and
rol
fs
sbb
adc
nop
mul
data16
xor
call
or
int
mov
data16
inc
push
xchg
test
xchg
inc
push
inc
js
lock
cmps
rol
pop
jl
call
stos
mov
cmp
push
hlt
lods
aaa
pop
aas
push
sub
sbb
ds
pop
mov
(bad)
xchg
push
push
xchg
dec
hlt
push
jecxz
inc
and
xchg
mov
xchg
imul
repz
aam
push
pusha
add
dec
out
ins
stos
push
mov
push
pop
xchg
dec
xchg
push
push
dec
inc
push
data16
loop
inc
cmp
call
cld
ins
dec
out
pop
sub
pop
cdq
jecxz
(bad)
lahf
or
jns
imul
jge
lahf
pop
jmp
push
sub
or
(bad)
push
lods
add
call
pop
stos
add
pop
pop
in
ins
ret
dec
stos
pop
ss
lods
add
jmp
add
(bad)
test
scas
or
mov
jge
mov
mov
fmul
es
ja
cmps
aam
push
jl
call
ds
pop
add
test
adc
ret
inc
mov
push
lahf
test
(bad)
mov
clc
cmps
mov
shl
mov
arpl
mov
movs
mov
in
movs
fiadd
xchg
and
adc
imul
je
addr16
jl
aam
dec
loopne
aad
rcl
out
dec
pop
add
push
jge
mov
ds
aam
pop
loopne
aad
rcl
jns
xchg
push
and
out
dec
cld
push
lahf
pop
sub
cmp
call
ss
fisttp
mov
jl
aam
inc
loopne
aad
rcl
add
daa
icebp
sbb
cmps
lock
cwde
ret
xor
push
dec
cmps
rcr
rcl
add
ja
sahf
fs
dec
mov
push
cmp
inc
mov
mov
dec
icebp
les
push
or
adc
xchg
or
fiadd
jp
sub
pop
cld
inc
push
leave
stos
sub
xchg
dec
cld
adc
or
pop
jp
es
aaa
cld
and
inc
xor
mov
mov
push
pop
inc
dec
sub
sub
aaa
dec
iret
add
pop
adc
loope
outs
loope
sbb
sub
xor
sbb
cmp
movs
push
sbb
pop
loopne
aad
rcl
stos
inc
sub
mov
mov
push
inc
stc
jmp
dec
lea
ds
arpl
pop
inc
dec
aas
(bad)
sub
xor
cmp
daa
loopne
daa
inc
cmp
or
test
aaa
jae
xor
and
dec
and
jb
icebp
mov
pop
push
and
dec
dec
mov
xor
(bad)
movs
dec
and
popf
or
sbb
jp
mov
sbb
and
rcr
cdq
add
sub
sbb
repz
popf
add
sbb
out
ret
sti
mov
clc
mov
cmp
add
add
xor
js
sub
enter
movs
jg
mov
push
pop
repnz
pop
add
pop
xchg
push
icebp
adc
jle
movs
jg
retf
inc
cmp
sub
add
loop
inc
jp
movs
je
cmp
mov
xor
or
fs
xor
hlt
aas
and
test
or
add
push
xchg
push
les
inc
test
xchg
mov
out
xchg
or
mov
xchg
shl
loop
inc
cmp
mov
clc
lea
jl
test
push
mov
and
inc
sbb
xchg
retf
inc
sub
mov
cli
xchg
ins
or
and
icebp
cdq
push
retf
test
push
shl
dec
add
pusha
mov
cmp
push
xor
in
sbb
push
xor
popf
cmp
pop
add
inc
sub
ret
leave
(bad)
loope
push
retf
sbb
push
test
push
mov
push
es
bnd
cs
cmp
push
aam
iret
xchg
cld
add
adc
pop
push
in
ror
dec
push
int
mov
or
in
jle
jae
aam
xor
mov
mov
repnz
mov
imul
(bad)
imul
pushf
fmul
pop
push
rcr
call
xor
add
sbb
xchg
push
test
sti
inc
dec
stos
(bad)
and
add
icebp
inc
sub
jb
jl
aam
sub
xchg
dec
enter
cmp
xor
jb
rcl
jg
mov
daa
mov
aas
add
lahf
test
int3
leave
das
loopne
mov
cwde
mov
test
or
sub
leave
das
loope
inc
sub
dec
fst
inc
sub
aas
inc
mul
in
clc
xchg
enter
sbb
push
sbb
dec
pop
es
adc
das
sbb
loop
inc
sub
sub
mov
(bad)
cld
sbb
dec
pop
xor
jb
rcl
repz
test
mov
jg
stos
leave
add
push
mov
in
xchg
pop
loope
inc
sub
xlat
dec
jle
in
scas
push
retf
lahf
and
dec
cmps
xchg
xlat
icebp
das
inc
sub
pop
push
xchg
inc
sub
mov
sbb
mov
je
pushf
and
mov
jno
sbb
les
sbb
test
pop
push
dec
and
push
pop
test
adc
mov
inc
stos
push
movs
dec
dec
cdq
test
or
pop
add
push
or
aaa
lock
and
and
jl
sar
cmps
mov
pop
add
bound
movs
dec
ret
or
pop
adc
movs
addr16
cdq
inc
cmc
xor
movs
call
mov
into
(bad)
daa
inc
cli
out
cmp
jp
loopne
int3
mov
jg
push
stc
call
push
leave
jge
add
xor
xchg
pop
rol
sub
in
adc
or
dec
icebp
adc
cwde
dec
sub
xor
or
sbb
outs
arpl
xchg
cwde
aaa
push
faddp
dec
test
push
faddp
dec
xchg
sub
int3
test
push
xlat
loopne
inc
mov
into
or
imul
pop
push
popf
or
addr16
mov
mov
pop
(bad)
das
add
mov
loopne
inc
dec
pop
ror
or
mov
dec
stc
or
outs
rcl
hlt
ret
sub
jecxz
inc
into
add
nop
jle
sbb
aam
sub
xchg
mov
jp
loopne
jl
call
loop
inc
mov
std
mov
ret
push
xchg
pop
push
pop
inc
push
stos
cmps
jle
mov
movs
stos
or
cmps
cmp
mov
jl
dec
push
adc
sbb
pop
test
xor
dec
lods
aam
cwde
(bad)
mov
pop
aas
adc
push
daa
cmc
add
ficom
lock
stos
and
ret
pop
inc
add
cmp
jl
dec
mov
cmp
jns
cmc
sbb
gs
lock
test
mov
in
push
mov
mov
(bad)
jns
rol
cmps
sahf
shl
es
bound
add
mov
cmp
dec
or
push
call
xor
js
shr
cmc
pop
dec
imul
xor
inc
cld
pause
outs
daa
js
shl
cmc
daa
dec
cmp
stc
or
cmp
test
je
shr
repz
or
out
pushf
cli
sbb
pop
xor
je
dec
jmp
loopne
rcr
inc
dec
pop
dec
std
sub
aas
adc
sub
pop
dec
lock
jle
hlt
movs
addr16
loopne
ror
inc
dec
pop
dec
mov
xor
add
popf
cli
pop
aad
push
retf
stos
loopne
bnd
adc
das
push
repnz
push
add
sbb
scas
add
cmp
sbb
leave
mov
jle
(bad)
and
xor
cdq
aas
dec
cmc
adc
repnz
rol
pushf
into
out
(bad)
into
inc
cli
pushf
pusha
mov
pop
(bad)
xor
sub
iret
or
iret
out
loop
xor
rcr
(bad)
stc
mov
das
inc
sub
pop
repz
lahf
and
dec
xor
out
(bad)
sbb
lahf
and
dec
xor
jae
jg
int3
das
push
retf
out
adc
dec
(bad)
sti
xor
cs
daa
jecxz
inc
and
lahf
inc
jp
cld
sub
imul
pusha
push
int3
pop
stc
out
(bad)
pop
xchg
xor
mov
xor
and
dec
xor
out
cld
stc
xor
imul
jg
cld
ins
test
dec
mov
dec
pop
popf
aas
sbb
sbb
fild
jmp
out
in
mov
pop
int3
rcr
hlt
aad
pavgb
mov
cmps
gs
cmc
inc
cmp
and
fiadd
loope
push
jb
lods
sbb
test
add
jae
aaa
nop
mov
lods
add
adc
jb
pop
adc
sub
or
or
or
push
cmps
cmp
pushf
pusha
imul
or
push
push
xchg
sbb
inc
sahf
cwde
push
push
lahf
adc
sbb
mov
sub
movs
cmp
dec
pop
sub
cmps
push
shl
pop
jmp
xchg
mov
jmp
inc
cmp
jmp
and
sti
cmps
aas
mov
pop
jmp
repnz
test
add
stc
cmp
jg
repnz
dec
scas
xchg
add
addr16
push
and
hlt
daa
lock
inc
and
scas
inc
sahf
lods
jmp
xchg
pop
or
les
jg
xor
stc
cmp
inc
sahf
mov
(bad)
icebp
and
lock
and
hlt
cmps
icebp
mov
cmps
clc
pop
nop
cmps
ins
jp
stos
arpl
icebp
mov
iret
fdiv
lock
xchg
stos
dec
or
hlt
addr16
cmp
fdivp
out
dec
sbb
lods
lock
(bad)
clc
aaa
mov
cld
arpl
push
cmps
inc
and
(bad)
xchg
rcr
push
popf
push
mov
jno
arpl
mov
aam
cmp
pop
enter
inc
cld
sub
in
cmps
and
(bad)
adc
push
rol
jmp
adc
mov
movs
mov
mov
repnz
ror
int3
inc
test
xchg
rcr
int3
bound
mov
mov
rol
jmp
push
cld
or
out
hlt
ds
xchg
push
dec
push
cmps
das
out
hlt
jle
push
push
dec
xor
add
addr16
call
out
sar
rcl
fild
xor
mov
mov
xchg
outs
push
mov
out
or
xor
sbb
jmp
les
inc
loope
test
je
xchg
aas
xchg
xor
fist
sub
call
jns
mov
in
(bad)
mov
cwde
cmp
jmp
cmp
leave
clc
outs
nop
cmps
pop
(bad)
sbb
pop
mov
clc
out
nop
daa
pop
(bad)
fwait
clc
pop
mov
stos
scas
inc
sahf
gs
test
test
cmp
test
xor
in
or
mov
leave
cwde
test
or
jge
enter
push
aad
push
dec
pop
addr16
nop
daa
pop
(bad)
pop
clc
out
push
dec
jg
push
jle
in
xchg
xor
fild
shr
cmp
xor
sbb
mov
jge
push
arpl
and
stc
xchg
mov
fisttp
push
int
xchg
lahf
mov
xor
sar
cmp
enter
lea
or
jg
xchg
cwde
xlat
xor
ror
xchg
stos
xor
add
mov
ret
jae
enter
(bad)
pop
push
xchg
mov
loop
inc
push
inc
data16
jne
movs
lahf
jno
popa
inc
addr16
sbb
jmp
mov
sbb
jecxz
std
mov
adc
movs
jnp
ss
adc
ret
pop
fidiv
mov
xor
xor
fxch
xchg
push
mov
push
jge
rol
cmp
icebp
shl
inc
jne
push
xor
fld
push
hlt
fs
cmps
clc
jns
mov
add
jle
aam
xchg
mov
jmp
icebp
mov
pop
lea
mov
repz
adc
jl
out
clc
in
retf
and
push
test
jmp
jmp
lock
cld
xor
leave
mov
inc
cli
sbb
adc
jmp
sub
sbb
mov
nop
stc
sub
sar
dec
mov
xchg
mov
jp
jmp
sbb
ins
retf
(bad)
mov
jmp
and
pushf
jns
call
movs
pop
jb
arpl
or
mov
xchg
jns
mov
cmp
cmp
iret
cld
sub
mov
(bad)
clc
sbb
dec
mov
addr16
jle
mov
iret
clc
pop
nop
out
lds
scas
in
into
cld
test
pop
push
retf
ss
jle
je
dec
out
clc
das
and
xor
xchg
mov
inc
cli
push
out
jle
je
jg
out
clc
add
addr16
jne
dec
call
lock
inc
and
aas
xchg
call
push
in
fadd
sbb
cld
adc
or
int
pop
inc
push
mov
jg
mov
jne
loop
test
call
inc
jne
movs
stos
int3
xchg
and
movs
iret
jno
rcl
push
aam
shl
popa
outs
data16
xor
add
iret
int3
and
ss
enter
xor
pop
dec
jmp
test
out
gs
jg
cli
pop
daa
inc
cs
push
mov
bound
popf
xchg
or
dec
add
lahf
in
add
mov
jbe
xor
pop
mov
mov
rcr
cmp
jns
jp
leave
mov
dec
cmp
mov
fs
shl
sub
jae
push
cmp
jne
push
cvtpi2ps
movs
bound
and
repnz
and
sub
ds
movs
stos
jno
lock
mov
loopne
xor
dec
inc
stos
aas
inc
dec
jb
movs
jecxz
and
mov
dec
hlt
and
push
popa
jl
push
push
retf
cli
xor
and
(bad)
add
sti
mov
cld
and
xchg
aam
dec
stos
stc
mov
mov
jmp
stos
stc
mov
jl
call
push
or
adc
inc
dec
or
mov
jb
bound
mov
ret
dec
push
jne
loope
inc
dec
mov
jg
shr
mov
sahf
fs
cmp
jl
call
clc
pop
mov
pop
shr
adc
mov
jl
lods
or
aad
sbb
(bad)
xor
ficomp
lods
dec
(bad)
xchg
and
or
push
lahf
jbe
xchg
aaa
mov
loope
sub
out
lods
fcom
in
mov
repnz
fstp
fstp
pop
fadd
ins
maxps
int
outs
inc
repnz
into
push
dec
pop
mov
jns
retf
xchg
(bad)
outs
push
retf
sub
repnz
xchg
cmp
xchg
scas
mov
jnp
mov
mov
sti
mov
pop
mov
iret
dec
ja
stc
pusha
retf
and
adc
jmp
ret
fsub
fucom
cwde
adc
jl
push
xor
sbb
pushf
cmp
xor
jb
cmp
xor
jb
cmp
xor
jb
cmp
repz
fwait
out
adc
adc
jae
popf
dec
ds
mov
repnz
jb
xchg
iret
cmp
ftst
jae
fbstp
(bad)
out
sahf
dec
out
cmp
jns
or
add
repnz
jl
in
ja
sbb
pop
inc
mov
adc
mov
cmp
sub
sub
aad
bound
repnz
in
ja
out
retf
paddusb
jne
mov
mov
inc
ja
add
aaa
xchg
outs
sbb
pop
enter
mov
pop
leave
aas
mov
out
(bad)
ins
mov
loope
sar
mov
cld
int3
fld
out
out
xchg
and
xchg
nop
xchg
cmps
mov
add
and
in
jmp
fnstcw
ffree
in
sub
mov
xchg
sbb
(bad)
call
and
into
bnd
cmp
sbb
jb
cmp
xchg
out
imul
cmp
and
pop
xchg
pushf
ja
xchg
inc
fldpi
fmul
aas
pop
(bad)
in
(bad)
pop
test
pusha
out
adc
sub
sub
jne
popa
scas
pop
pop
jae
arpl
pushf
mov
sbb
mov
mov
dec
div
out
aam
cmps
jnp
cld
push
aam
(bad)
mov
mov
pop
scas
iret
push
jb
or
sub
cmp
mov
or
adc
push
and
sub
test
ins
mov
mov
or
test
test
popa
xchg
mov
repnz
inc
repnz
dec
test
jns
test
(bad)
push
push
jns
test
xor
push
xchg
aas
xchg
inc
sahf
pop
and
xchg
or
and
add
cdq
mov
cmp
pop
inc
adc
pop
sub
sbb
andnps
leave
push
dec
scas
jl
push
mov
pop
cs
pop
xchg
pmullw
cmps
add
push
and
xor
push
push
test
xor
test
mov
dec
ins
enter
dec
pop
pop
push
pop
push
sbb
pop
inc
ins
leave
lahf
test
(bad)
mov
mul
push
pop
fsub
adc
je
adc
push
pop
fsubr
or
iret
test
push
mov
outs
scas
ins
adc
dec
(bad)
mov
fsubr
xor
mov
or
mov
mov
pop
inc
ret
xor
mov
xchg
mov
inc
neg
rcr
sahf
xchg
mov
rol
xchg
jge
xchg
xor
xchg
jle
sub
std
sub
and
mov
imul
jl
mov
push
or
dec
mov
stc
fcom
or
xor
stc
cmp
stc
add
gs
xor
mov
pop
cld
push
retf
jmp
xchg
xor
xor
sub
pop
sahf
or
pushf
mov
sbb
cmp
jns
mov
jae
sub
and
or
and
daa
cld
cmp
push
pop
inc
jnp
push
and
mov
(bad)
push
fimul
(bad)
jnp
adc
sbb
loope
shl
js
je
sub
or
loope
data16
iret
call
clc
add
clc
mov
cmp
mov
test
fwait
xor
inc
sub
fldenv
in
gs
jne
mov
es
fs
xchg
out
fbld
dec
xchg
xchg
xchg
cmps
pop
ficomp
mov
retf
popa
in
dec
or
ret
cld
popa
pop
cmps
test
inc
cmp
or
add
test
xchg
cmp
repnz
sbb
add
adc
cmp
push
sbb
mov
repz
xchg
push
out
jg
mov
cmp
mov
lds
dec
add
push
jns
enter
and
pop
in
ret
stos
pop
(bad)
or
(bad)
aam
jl
pop
adc
repnz
jo
pop
cmp
daa
pop
xchg
scas
add
xchg
shl
xchg
popa
xor
fs
xlat
and
fidiv
push
scas
or
jge
pop
lahf
mov
aaa
and
stc
jl
and
sbb
outs
cmp
lds
dec
pop
test
arpl
push
in
mov
in
mov
in
sub
push
mov
ffree
ins
icebp
scas
test
xchg
test
sbb
clc
push
or
sbb
mov
pslld
loope
in
and
xor
and
mov
push
or
test
sub
(bad)
pop
mov
pextrw
mov
repnz
pop
pop
jle
push
lea
bound
cmp
rep
in
loope
cwde
arpl
fild
retf
loope
in
ret
push
enter
cmps
ret
push
leave
iret
pop
sahf
or
pushf
test
js
out
js
stc
(bad)
loope
lock
cld
sub
aas
xchg
pop
stc
pop
js
stc
xor
loopne
lock
inc
js
aad
loope
in
sub
out
xchg
xchg
jmp
das
mov
pop
inc
mov
imul
sub
sbb
add
(bad)
push
mov
pop
lds
pop
mov
xor
pop
fs
xor
das
mov
(bad)
enter
enter
enter
in
int3
adc
(bad)
pusha
out
enter
cmp
ins
in
pop
mov
imul
mov
shr
in
cs
xchg
imul
in
cmps
push
xchg
and
test
mov
imul
enter
xor
mov
in
cmps
ins
in
jns
test
jl
push
jns
retf
dec
adc
mov
adc
push
mov
in
and
pop
sub
xor
xchg
add
mov
(bad)
and
inc
pop
iret
mov
and
jl
xchg
sbb
mov
or
xchg
(bad)
lea
sub
push
or
mov
mov
or
dec
test
mov
push
dec
jmp
push
jns
retf
out
inc
popa
mov
enter
and
outs
fldenv
push
or
mov
clc
push
movs
or
push
movs
sbb
out
add
jbe
push
xchg
and
retf
xchg
jmp
sbb
dec
movs
ss
sbb
push
in
pop
imul
and
xor
xor
xchg
pusha
xchg
and
dec
leave
inc
pop
mov
sbb
imul
(bad)
pop
mov
pushf
adc
sbb
ret
in
xor
sbb
test
popf
loopne
dec
pop
cmp
je
xor
cmp
das
repnz
xchg
fsubp
repz
in
mov
in
sub
inc
push
bound
shl
or
ins
retf
ja
inc
xor
sub
fiadd
xchg
mov
inc
ret
jne
mov
pop
xchg
cmc
xchg
icebp
in
sub
inc
bound
pop
outs
mov
add
cmps
inc
cmps
nop
outs
xchg
je
mov
cmps
xchg
pop
mov
mov
(bad)
mov
dec
push
xchg
jns
mov
add
ins
xchg
pop
je
add
mov
(bad)
outs
je
int3
sbb
dec
mov
or
mov
xor
sub
jns
jmp
xor
and
gs
add
sub
fdiv
xor
dec
(bad)
mov
pop
sub
sbb
mov
inc
sar
mov
(bad)
outs
hlt
and
or
mov
push
scas
sub
xor
push
shl
xchg
push
mov
stos
inc
dec
fwait
cmc
imul
push
push
fnsave
mov
pusha
push
cli
jmp
mov
jl
jp
push
fbstp
dec
retf
cmps
mov
sbb
popa
sbb
sbb
jns
inc
outs
nop
aaa
mov
push
mov
fld1
ins
dec
or
xchg
sar
in
call
out
push
test
xchg
in
mov
mov
mov
sbb
retf
xchg
mov
dec
ror
cmps
mov
xlat
push
(bad)
mov
mov
mov
dec
iret
push
push
adc
inc
(bad)
mov
xor
cmps
shld
out
out
pop
jmp
xor
jb
xor
data16
cmps
xchg
cmpxchg
sub
daa
inc
or
ror
adc
mov
xor
mov
mov
(bad)
dec
mov
adc
mov
or
xchg
fwait
rcl
cwde
test
xor
sub
inc
retf
popa
inc
sub
lods
test
xor
fs
mov
lahf
addr16
adc
das
mov
sbb
sub
(bad)
es
push
fldcw
mov
scas
mov
(bad)
mov
or
sbb
xchg
imul
fimul
ins
dec
inc
fs
mov
inc
pop
nop
outs
sub
rcl
dec
mov
stc
inc
push
leave
xchg
push
mov
pop
pop
outs
mov
adc
cmp
repnz
int3
dec
test
ja
adc
pop
push
leave
xchg
shr
in
mov
in
mov
in
mov
enter
mov
ret
mov
adc
dec
jle
ficom
push
xchg
fild
bound
pusha
js
cmp
xor
xchg
cld
push
je
cmp
sbb
ret
mov
mov
pop
je
cmp
popf
enter
daa
xchg
pop
mov
cmp
add
mov
adc
out
rcr
lock
jne
test
mov
rcr
cs
shl
dec
je
out
movs
fwait
mov
and
and
mov
mov
sbb
add
mov
jecxz
xchg
xor
movs
mov
lods
adc
xchg
cmp
fisttp
lds
call
mov
xor
daa
dec
mov
loop
pop
nop
mov
(bad)
test
mov
xor
aas
aad
and
jo
and
fsub
repnz
in
or
sub
add
int3
fdiv
dec
adc
outs
sbb
dec
sahf
gs
xor
adc
mov
in
xor
sbb
mov
popa
stc
push
in
cmp
xchg
gs
nop
sahf
jmp
int
sbb
iret
mov
leave
cmc
out
dec
jne
jae
jne
jmp
jmp
cdq
and
xchg
movs
pop
xor
int3
int3
and
xor
fs
and
and
and
and
xchg
and
xchg
fs
dec
xchg
fs
es
xchg
fs
and
fs
mov
jecxz
js
cmps
out
popf
outs
fbstp
outs
sub
imul
mov
out
jecxz
and
punpckldq
and
jnp
sti
jns
loopne
fidiv
sahf
sbb
cmp
in
(bad)
mov
ret
mov
pop
(bad)
jb
jb
bnd
inc
outs
daa
retf
or
mov
movs
pop
sub
jp
push
mov
std
xchg
mov
mov
and
aaa
ret
mov
nop
xor
stos
mov
xchg
cmp
push
gs
dec
loope
scas
mov
jns
pop
jmp
jae
movs
aaa
(bad)
daa
outs
repz
(bad)
push
outs
div
xor
push
js
mov
mov
fisttp
in
icebp
enter
ret
sahf
sbb
and
mov
in
in
hlt
mul
(bad)
cmp
add
add
sbb
inc
test
sub
push
outs
ds
jno
ja
ds
inc
lahf
out
sub
les
fisub
jl
pop
mov
cmp
jp
icebp
in
ficom
jecxz
mov
sub
jns
sub
and
movs
ja
sti
cmp
sub
jnp
mov
lock
mov
and
ja
jnp
jb
jp
fmul
mov
call
mov
mov
movs
pop
out
cmps
mov
out
js
cmp
ja
in
repnz
daa
mov
xor
fisttp
bound
repz
clc
es
jb
out
and
sti
cmp
repnz
movs
pop
(bad)
mov
adc
adc
sub
xchg
jl
shr
stos
movs
sti
jl
fnstcw
sub
clc
mov
fistp
out
fdiv
lahf
daa
jne
add
xor
or
hlt
sub
pop
adc
jge
sub
xor
cmp
mov
mov
outs
and
jmp
int
iret
out
es
lods
mov
mov
popf
retf
fst
mov
jge
jb
repnz
push
mov
ds
cmp
sti
cmp
inc
in
out
ret
int
fbstp
mov
sub
repz
and
pop
dec
idiv
cmc
ins
ret
dec
jl
icebp
push
fisttp
jle
sbb
jl
icebp
or
cs
adc
out
jbe
fistp
in
fwait
sub
fistp
(bad)
xlat
call
retf
ja
outs
aas
sti
pop
in
cmc
sbb
sbb
push
lods
lock
lea
jns
jge
mov
scas
scas
lea
cmp
fnstenv
xlat
ja
outs
icebp
jns
retf
jl
lock
pop
inc
sbb
jmp
adc
pop
neg
dec
pop
pop
sbb
repz
ds
mov
fucom
mov
das
ret
cmp
mov
lahf
into
jle
jl
addr16
push
sub
mov
nop
clc
mov
cmps
dec
inc
ficomp
std
mov
gs
pop
addr16
xor
sub
pushf
jmp
jmp
sahf
in
mov
jp
ins
pop
dec
jl
xlat
or
clc
jp
sar
das
iret
iret
(bad)
sbb
sub
call
pop
and
test
icebp
adc
mov
stos
clc
call
push
inc
jns
pop
jmp
sub
mov
mov
pop
mov
ins
fist
lock
gs
not
pop
jecxz
shl
ret
mov
aaa
add
not
in
fisttp
enter
and
lea
xchg
outs
xor
adc
push
fistp
dec
xor
dec
mov
jno
iret
xchg
cmp
movs
outs
cmp
stos
fsub
fwait
inc
stc
dec
fsubr
fwait
dec
fabs
fwait
(bad)
(bad)
push
jae
popf
mov
out
jge
xchg
pop
loop
fist
psrad
push
retf
sahf
jg
in
icebp
xor
je
aaa
in
cmc
iret
pusha
ja
jnp
imul
and
(bad)
addr16
inc
ficomp
cmp
aas
fwait
ror
in
lahf
inc
cmp
xlat
aas
xchg
rol
stc
aaa
xlat
aas
bswap
repz
cmps
hlt
repz
pusha
lahf
out
pop
mov
std
mov
add
bound
pop
cmp
das
lds
mov
cmp
js
jg
push
icebp
scas
les
jne
cdq
mov
not
mov
pusha
pop
sub
(bad)
xor
push
sti
xlat
loop
(bad)
jne
jmp
mov
shl
cs
(bad)
jb
mov
in
jg
jnp
cmp
mov
into
cli
aaa
mov
std
pop
fdiv
and
(bad)
lods
in
pop
les
sub
cmc
outs
ret
(bad)
fld
mov
sti
ja
sbb
cs
cs
mul
(bad)
fsubrp
mov
(bad)
jge
jg
repnz
sti
mul
inc
inc
cwde
jge
std
xchg
push
ins
cmc
pop
leave
mov
mov
(bad)
loop
(bad)
jbe
xor
mov
hlt
sub
cld
push
das
(bad)
fimul
cmp
dec
clc
cmp
mov
imul
mov
push
out
mov
mov
jle
out
sub
cli
inc
in
stc
dec
ds
jo
pop
(bad)
out
push
cs
pop
clc
sbb
xchg
std
sub
push
mov
mov
stos
aas
xchg
mov
ret
cmp
cli
sbb
mov
jp
psadbw
(bad)
sahf
xchg
push
enter
pop
mov
mov
aad
xchg
jge
out
sti
sti
mov
mov
cld
std
sub
mov
cli
pop
push
(bad)
mov
stc
pop
loop
jmp
cli
(bad)
(bad)
jl
inc
jmp
les
add
cld
add
fwait
std
inc
clc
cdq
mov
dec
fcomp
pop
std
inc
icebp
sub
xor
bnd
(bad)
xor
ss
mov
cmp
stc
pop
cld
sar
mov
cmp
neg
hlt
sub
stc
inc
mov
mov
cwde
mov
mov
mov
std
arpl
mov
mov
ffreep
cmp
clc
xchg
sahf
std
cmps
jg
push
test
cld
xchg
lock
(bad)
in
scas
shl
adc
cld
iret
aas
xchg
jge
push
add
rcl
cwde
mov
sbb
retf
ds
in
sbb
dec
cmp
xor
mov
inc
hlt
push
push
dec
adc
cmp
jp
inc
pusha
cs
adc
push
int3
cmps
xchg
inc
mov
push
mov
mov
mov
adc
add
fisttp
inc
sub
push
mov
push
cmp
iret
ds
int3
or
mov
cmps
and
and
xor
ror
xor
sbb
cmp
cmp
add
sbb
mov
mov
mov
inc
mov
adc
inc
stc
lahf
js
pusha
xor
jb
add
das
or
sbb
cmovno
shl
sbb
mov
and
adc
push
or
mov
fmul
inc
into
rol
jbe
jb
push
div
sub
jp
xchg
ds
mov
sbb
cmp
sub
pop
sub
mov
pop
add
push
mov
jno
mov
inc
pop
mov
mov
fild
ds
repnz
pop
cmp
fsubrp
inc
pop
pop
out
mov
adc
dec
jns
jl
ror
cmp
sbb
or
push
mov
pop
sbb
add
add
ret
cmc
add
jg
mov
add
jle
dec
shl
add
xchg
or
mov
nop
xchg
add
lock
inc
ja
rol
ja
jp
into
inc
das
sahf
dec
jns
add
add
push
jbe
jnp
jge
aas
mov
add
aas
pop
cli
arpl
add
xchg
rol
hlt
sub
mov
add
xchg
ffreep
fild
xor
pusha
or
adc
rol
sahf
cmp
(bad)
jmp
(bad)
adc
fild
and
cmp
sbb
inc
aaa
xor
push
div
hlt
sub
sbb
repnz
push
mov
adc
and
cmp
aad
jbe
shr
mov
daa
push
aam
jg
cmps
mov
jne
and
xchg
mov
xor
push
loop
xor
stos
jecxz
xchg
push
xor
xchg
call
repnz
mov
xchg
aad
dec
push
xor
inc
cmp
push
popf
dec
leave
inc
out
dec
jmp
aaa
mov
cmp
pop
dec
jmp
dec
jbe
mov
cmp
cmp
into
mov
test
(bad)
fsubr
cmp
jl
push
movs
pop
jb
test
fscale
lds
jmp
test
bound
adc
aad
xchg
mov
mov
das
inc
into
or
icebp
xor
movs
add
aaa
aam
in
inc
in
push
push
mov
les
and
pop
mov
in
push
push
mov
inc
dec
adc
lods
mov
daa
jmp
(bad)
in
or
mov
xchg
test
fdiv
and
mov
sahf
test
fdiv
mov
ins
mov
fwait
jno
mov
mov
sbb
outs
mov
outs
movs
mov
stos
aad
retf
fucomp
ss
cmp
push
ja
out
adc
in
in
hlt
sub
stos
mov
jne
in
icebp
inc
jne
or
xchg
mov
xchg
fcmove
sahf
cs
out
ret
(bad)
aad
hlt
pop
icebp
or
add
push
psrld
cmp
retf
xor
imul
in
les
push
in
icebp
jns
sub
mov
and
push
xchg
test
mov
pop
test
scas
test
sub
les
dec
mov
dec
in
ret
scas
push
mov
push
aas
movs
dec
lods
push
push
jl
or
outs
stos
sbb
test
mov
pop
mov
out
mov
test
jl
jne
jne
call
scas
in
cmc
enter
retf
fiadd
test
in
inc
stc
add
lahf
aad
in
dec
xchg
push
pop
in
sbb
retf
in
dec
in
int
push
fsubr
mov
sti
imul
aaa
jmp
aad
fsub
adc
pop
aad
fsub
adc
pop
int3
(bad)
pop
cld
push
sub
mov
adc
test
lock
adc
stos
gs
xchg
jg
adc
repz
and
inc
les
mov
repnz
jb
stos
and
dec
jbe
xor
inc
mov
mov
xor
adc
into
adc
rcr
in
push
push
jecxz
shl
into
ror
adc
adc
pusha
or
pop
pushf
retf
loopne
jbe
mov
cmps
mov
pusha
sub
inc
inc
out
push
rcr
cmp
cmp
add
rcr
loopne
jbe
cmp
cmp
pop
push
dec
inc
out
pop
rol
jo
sti
xor
pop
jo
in
loopne
jbe
in
adc
jl
push
xchg
mov
mov
xchg
arpl
rcl
daa
pop
(bad)
jge
stos
lock
test
lock
inc
sahf
pop
cmp
loop
shl
mov
clc
cmc
and
stos
xor
xchg
dec
xchg
repz
mov
xchg
xchg
xor
pop
mov
scas
inc
(bad)
push
adc
retf
mov
mov
sbb
movs
bound
pop
in
icebp
mov
js
jo
push
add
shr
out
popa
(bad)
pmaxsw
sbb
movq
out
(bad)
retf
mov
inc
add
inc
pop
pavgw
shl
es
scas
ja
(bad)
mov
mov
shl
cmp
mov
or
mov
sbb
sbb
enter
or
out
mov
sti
add
imul
pop
or
push
les
icebp
xchg
mov
(bad)
rcl
sbb
arpl
imul
data16
daa
sub
adc
ret
repz
and
or
loop
sar
fmul
add
push
push
and
mov
and
xchg
repnz
push
jnp
pop
inc
into
ret
pusha
outs
imul
enter
sub
sub
inc
pop
sbb
iret
jle
lods
or
shl
add
cmc
rol
cmp
sub
sbb
push
push
rol
(bad)
aad
and
imul
add
nop
out
int
xor
jp
inc
mov
repnz
push
retf
mov
pop
dec
stc
push
cld
sub
inc
imul
ds
dec
ret
not
call
mov
push
mov
fild
mov
jg
jle
sbb
fld
in
pop
les
and
jo
std
daa
in
or
jg
jg
mov
jo
jnp
clc
jnp
and
and
or
sysret
daa
push
inc
pusha
or
loopne
dec
sbb
add
addr16
jo
mov
sbb
daa
push
sbb
inc
lahf
mov
push
mov
inc
sbb
bswap
cmps
pop
mov
test
fcom
push
xchg
retf
(bad)
retf
inc
repz
push
pusha
jno
and
or
cs
les
push
mov
inc
fsubrp
rcl
sbb
pop
dec
mov
sbb
xlat
xchg
pop
push
ret
repnz
cmp
aaa
test
js
add
out
push
jecxz
mov
dec
mov
and
xor
inc
mov
xchg
loop
mov
(bad)
jmp
mov
test
cmp
sbb
inc
mov
popf
xor
sbb
inc
jns
jl
mov
push
sbb
inc
mov
mov
mov
inc
jnp
jnp
fbld
rcl
into
or
mov
jge
inc
pop
mov
jb
pusha
neg
sbb
ret
fnstenv
je
lahf
or
icebp
in
rcl
in
mov
addr16
shl
pushf
pop
repnz
jns
sbb
mov
inc
popf
sub
bound
or
xchg
inc
pop
pop
sbb
jecxz
nop
mov
sub
repz
lds
repnz
xchg
call
sti
dec
icebp
lods
nop
inc
test
int
cmp
cs
icebp
fst
mov
jl
aam
sbb
hlt
test
clc
inc
test
scas
or
ror
cmp
jle
jmp
adc
or
(bad)
std
jo
test
std
repz
mul
imul
test
sar
outs
or
hlt
outs
les
add
addr16
mov
mov
mov
frstor
push
cmp
xchg
and
jne
sbb
fcomp
sub
xchg
loope
mov
add
cmp
sbb
pusha
push
ret
push
fcom
sbb
repz
mov
dec
push
lds
jecxz
mov
and
cdq
lock
xchg
add
jno
(bad)
lock
in
adc
inc
aas
pop
cmp
cmp
rcr
stc
scas
or
mov
and
loope
ins
scas
call
xor
test
jbe
or
addr16
inc
enter
retf
mov
aaa
pushf
lock
mov
ins
jbe
cmp
(bad)
lock
xor
repz
iret
mov
or
loop
xor
ret
or
(bad)
scas
loope
js
js
cmp
stos
js
js
sahf
adc
out
mov
push
mov
and
jo
mov
dec
cmp
stc
dec
or
bound
mov
loope
in
repz
std
(bad)
(bad)
loope
retf
add
loop
ret
pusha
js
std
ret
mul
fadd
mov
jecxz
loope
js
js
iret
pop
and
popa
mov
ret
loop
jbe
xchg
loope
in
adc
call
mov
pop
js
movs
dec
sub
out
mov
fimul
inc
outs
xor
push
sbb
fiadd
push
mov
sub
mov
retf
sbb
inc
mov
sub
or
mov
ret
mov
ret
sbb
and
mov
jb
js
mov
sub
test
cmp
in
lds
ret
or
fst
test
icebp
loope
test
or
jl
lods
push
push
mov
xor
pop
popa
mov
add
sub
jno
cmp
push
cmp
iret
xchg
xchg
stc
loop
jo
retf
repz
retf
push
cmp
fmul
movs
loope
in
push
les
cmp
loope
xchg
xlat
nop
xor
fmul
xchg
fist
fisttp
mov
loope
clc
push
mov
dec
pop
and
fiadd
bnd
out
mov
les
out
fild
mov
enter
ret
cmp
ret
rdtsc
inc
stc
and
enter
test
and
jb
xchg
jo
in
icebp
mov
push
retf
dec
js
in
hlt
sub
movs
in
scas
les
cs
outs
ret
mov
xchg
and
fbld
fs
push
gs
js
sti
pop
icebp
(bad)
jo
gs
daa
cmp
repnz
clc
jae
xor
das
jb
xchg
mov
lds
mov
pop
vcmpsd
sti
(bad)
push
sbb
cdq
xchg
icebp
xchg
push
(bad)
iret
enter
loop
xchg
mov
(bad)
out
lea
es
dec
or
enter
mov
fs
jl
push
mov
xchg
jmp
mov
inc
push
ret
sbb
cdq
test
inc
data16
push
pop
sbb
retf
xchg
add
(bad)
mov
and
mov
mov
scas
inc
outs
cmp
test
repnz
inc
xchg
bound
sbb
pop
mov
adc
xlat
inc
jmp
push
icebp
cmps
xchg
fdiv
mov
inc
push
push
inc
and
enter
cmp
ror
push
fs
mov
ss
sub
mov
call
cdq
cmp
and
enter
loop
xchg
sub
sub
or
fcom
lds
ins
xchg
sti
xchg
jae
mov
std
cmp
fs
movs
inc
pushf
adc
dec
jns
stc
mov
sub
adc
dec
cdq
xchg
test
jnp
rol
sbb
(bad)
and
fs
in
icebp
leave
enter
jno
in
in
icebp
jmp
in
mov
sahf
sbb
mov
enter
or
cmp
sub
and
out
mov
mov
movs
popf
std
and
lds
adc
out
test
cmp
sbb
inc
cmp
mov
cdq
mov
xchg
cs
xchg
bound
dec
jns
jl
loop
aam
stos
and
in
in
adc
mov
inc
outs
push
xchg
or
sbb
pop
sbb
lea
xchg
test
popf
mov
adc
mov
xchg
repnz
dec
and
imul
ss
jb
lahf
mov
(bad)
int
outs
xchg
das
les
and
sub
lods
xchg
push
xchg
scas
les
enter
(bad)
outs
(bad)
hlt
cmps
jl
jle
jmp
and
mov
adc
(bad)
fisub
pop
and
call
add
out
and
pop
in
mov
mov
lds
rcl
sti
xchg
pop
push
movs
cmp
sbb
movs
cld
sbb
std
cmps
clc
push
movs
cwde
jb
jae
mov
enter
xchg
frstor
push
lea
cld
mov
mov
shl
xchg
push
xchg
and
pop
lods
mov
push
cmps
je
sbb
test
or
int3
push
dec
mov
cmp
mov
call
sub
push
jl
mov
add
sub
or
(bad)
push
and
and
shl
xchg
js
add
adc
mov
xchg
fs
cmp
mov
xor
popf
inc
dec
and
mov
push
test
mov
dec
adc
dec
(bad)
mov
push
push
mov
pop
iret
mov
mov
data16
mov
push
movs
aaa
jb
mov
gs
cmp
pop
mov
je
in
hlt
sub
mov
dec
pop
inc
pop
push
cs
inc
pop
jecxz
shl
mov
call
dec
je
in
icebp
mov
or
jb
inc
push
mov
lds
icebp
retf
movs
sbb
stos
mov
shr
in
icebp
call
mov
push
ins
movs
pop
daa
pop
pop
pop
dec
test
push
outs
adc
scas
cmps
mov
sub
cmps
jge
and
adc
mov
mov
(bad)
sbb
xor
push
fld
adc
retf
fiadd
into
call
xor
pop
dec
mov
out
jnp
push
cmp
mul
std
rcl
and
cmps
ja
aas
ds
inc
cdq
mov
loop
pop
icebp
xchg
call
mov
shl
lods
lea
(bad)
in
cmp
jp
aas
cmc
inc
aam
out
xchg
in
sbb
cmp
in
enter
lea
cmp
jl
inc
cmp
push
movs
int3
pop
pop
inc
std
xchg
out
jae
stos
mov
adc
inc
inc
clc
bound
pop
sbb
fsubr
inc
jne
adc
dec
mov
loope
test
sub
mov
pop
xor
fisttp
fsubr
out
inc
mov
hlt
aad
imul
mov
inc
sti
loop
push
ficomp
mov
(bad)
rol
mov
jae
lahf
repnz
inc
pop
mov
inc
xchg
push
add
push
mov
adc
inc
mov
stos
push
ret
cmp
inc
xchg
aaa
rcl
push
sub
mov
aas
inc
xchg
inc
loopne
push
mov
inc
stos
js
das
jb
inc
inc
mov
inc
inc
mov
adc
inc
(bad)
loopne
shl
mov
stos
sub
jg
(bad)
push
push
and
or
inc
daa
mov
nop
das
fsubr
and
mov
icebp
pop
mov
repnz
test
push
sub
xor
mov
mov
in
mov
or
pop
stos
lds
dec
cmp
fwait
test
ss
add
pop
sahf
mul
addr16
jl
imul
cmp
jmp
cmp
and
ficom
add
daa
inc
inc
pop
dec
dec
popa
mov
xor
jbe
jmp
cmp
mov
jge
jb
push
in
rcl
jbe
(bad)
push
into
rcr
fnstcw
mov
jnp
jmp
sub
add
shl
loop
pop
adc
pop
in
stos
ins
ret
int
pop
fild
inc
fcmovne
push
and
rcr
pop
imul
ins
cmp
(bad)
adc
or
dec
mov
in
add
sub
bound
jb
push
lock
ins
das
movs
pop
sub
pop
sub
push
imul
inc
xchg
fwait
mov
pop
scas
ror
push
dec
mov
in
imul
jmp
and
mov
cmc
ficom
rcr
jns
es
sbb
inc
clc
ret
loopne
pop
(bad)
or
mov
cmp
dec
mov
cs
cmp
cmp
xchg
mov
stc
ret
idiv
push
sub
fdiv
and
pop
dec
arpl
daa
fisubr
mov
inc
mov
xor
dec
loope
int
xchg
ret
pop
cs
shl
js
xor
cmp
cmp
lods
(bad)
xchg
cmp
mov
mov
cmp
inc
jg
jl
jmp
cdq
daa
into
xlat
cli
push
sahf
adc
mov
push
jo
ss
(bad)
adc
mov
or
mov
retf
mov
xchg
push
xchg
jae
sbb
pop
mov
dec
mov
neg
lods
xlat
mov
outs
and
pop
xor
ins
in
push
sub
and
push
sub
and
ins
sbb
jge
add
add
adc
dec
cld
pop
stos
mov
ins
cmp
or
inc
bnd
cwde
mov
lahf
arpl
inc
push
sbb
scas
nop
xor
retf
(bad)
sbb
fisttp
in
loop
fidivr
cs
ss
adc
aas
mov
imul
mov
sti
mov
retf
scas
ficom
jle
aaa
ins
sub
shl
mov
int
sbb
packssdw
mov
xchg
and
ss
aaa
jb
push
fcos
mov
push
sub
loop
ins
cs
in
mov
arpl
bound
movs
sbb
mov
jb
cwde
pop
pop
dec
mov
mov
pop
sbb
pop
dec
mov
xchg
lea
fadd
enter
xchg
mov
xchg
sub
sub
sub
lods
unpckhps
pop
cmp
jbe
lods
add
fcomp
mov
mov
js
ins
sbb
fbld
push
(bad)
ss
mov
fnstenv
cmp
les
fsub
pushf
jge
xchg
sbb
dec
idiv
ins
lds
arpl
sub
jecxz
mov
fnstenv
mov
sti
mov
jbe
test
out
in
cmp
fist
jno
lods
xor
icebp
ja
(bad)
cmp
ins
aas
sti
add
rcr
in
fld
cmp
ds
xchg
jge
lds
xchg
shl
fmul
mul
jecxz
mov
add
jle
pop
idiv
jns
mov
cmp
adc
mov
clc
je
or
lea
inc
int3
pop
cmc
sub
and
dec
lds
mov
mov
lea
and
js
(bad)
push
bound
sub
mov
push
(bad)
in
adc
push
jae
cmc
pop
push
push
(bad)
mov
lods
mov
icebp
cmps
fimul
(bad)
(bad)
outs
mov
jp
sbb
aad
sahf
xchg
ja
ja
mov
bound
in
test
imul
stc
xor
(bad)
mov
std
icebp
mov
fadd
(bad)
mov
mov
les
arpl
or
sub
out
and
adc
ins
daa
push
mov
and
jle
sbb
scas
sub
gs
mov
(bad)
retf
pop
add
pop
bound
lock
pop
and
mov
dec
loop
mov
xchg
push
jno
ins
xor
pop
icebp
xlat
fcomp
retf
sub
mov
mov
cli
inc
in
adc
iret
ds
mov
cld
and
mov
mov
in
jg
xor
dec
xor
das
ss
inc
mov
out
cmp
dec
in
movs
iret
ret
fnstcw
xchg
arpl
inc
lahf
inc
icebp
and
cmc
add
sbb
dec
add
pop
aam
mov
push
xlat
xchg
push
loop
test
xchg
mov
cmp
sub
dec
in
push
pop
leave
jbe
pop
nop
pop
xchg
mov
mov
push
outs
rcl
cwde
stos
scas
rcl
int3
rcl
loop
cli
cmp
pop
iret
repz
add
shl
bound
mov
cld
jp
out
jge
dec
in
repz
int
jle
stc
cli
push
mov
(bad)
jl
jmp
sbb
inc
icebp
and
adc
jmp
(bad)
mov
and
call
xchg
jmp
in
pop
sub
pop
jmp
vmovq
inc
mov
cmc
ret
js
jle
scas
rcr
js
or
std
hlt
mov
adc
mov
lods
aam
push
and
jb
jmp
xor
push
in
aam
mov
adc
mov
inc
div
sub
movs
xchg
jecxz
push
inc
mov
sub
xchg
mov
xlat
icebp
pop
frstor
jge
lea
mov
add
lods
shl
call
mov
(bad)
push
mov
xchg
std
sbb
cmc
cmps
mul
inc
mov
fxch
xlat
lahf
fiadd
mul
mul
sti
jecxz
cli
add
jl
and
pop
mov
and
mov
stc
cli
shl
icebp
inc
jge
gs
test
xchg
pop
or
jl
das
ret
xor
jge
dec
mov
mov
jne
sbb
dec
in
mov
(bad)
sub
stos
les
loope
pop
pop
inc
jg
jl
scas
movs
lods
adc
cmc
xchg
xchg
not
jg
fdivr
push
mov
sbb
sti
adc
push
jge
movs
dec
ins
(bad)
(bad)
push
adc
les
cmc
icebp
xchg
scas
hlt
or
lods
bound
clc
lea
mov
cmps
jl
out
shr
fisttp
mov
retf
dec
cli
xor
pop
in
aam
mov
lds
or
das
loop
jp
gs
psubsb
pop
jg
call
out
push
mov
lds
cmc
stc
in
and
jmp
mov
test
mov
dec
cmp
jno
and
clc
push
retf
or
gs
into
bound
loop
icebp
adc
scas
movs
clc
nop
adc
pop
xchg
push
inc
icebp
push
hlt
and
or
lds
xor
mov
popa
mov
xor
imul
jb
(bad)
xlat
mov
xor
dec
jl
lds
mov
jb
mov
adc
arpl
adc
push
icebp
mov
dec
sahf
fsubr
js
jl
movs
mov
ror
sbb
jae
ds
in
in
jae
jae
cmp
jge
jle
popf
xchg
repz
repz
sub
xchg
das
(bad)
clc
outs
test
jg
cmp
pop
lds
cmc
inc
icebp
mov
cmp
mov
dec
cld
add
pop
adc
dec
mov
mov
jl
(bad)
btr
retf
xchg
icebp
ss
or
mov
unpckhps
and
clc
xor
xor
mov
(bad)
cmp
cmp
jns
and
out
inc
test
push
outs
rcr
icebp
cmps
mov
mov
sub
mov
hlt
sub
call
fsubr
les
jb
mov
in
aaa
nop
xchg
and
pop
jno
push
das
scas
mov
xchg
mov
ja
sub
jb
mov
pop
adc
retf
sahf
mov
fimul
pop
icebp
push
mov
(bad)
jnp
cld
(bad)
enter
lea
ds
imul
jl
out
iret
ficom
pop
sar
fcomp
pop
mov
pop
popa
dec
cmp
mov
loop
jo
mov
loop
js
jle
das
(bad)
popf
icebp
adc
adc
xchg
ja
mov
mov
jecxz
xchg
lahf
shl
xchg
clc
jo
pop
pop
cmp
jle
inc
mov
cmp
(bad)
sbb
dec
cmp
mov
or
mov
mov
sub
sar
in
in
mov
in
jl
pop
xor
push
int3
push
mov
es
mov
shl
daa
mov
sbb
popf
lds
(bad)
push
retf
iret
cwde
inc
icebp
mov
cmp
adc
mov
adc
xor
and
ins
retf
scas
push
int
inc
ret
cwde
inc
xor
test
xchg
bound
adc
arpl
and
add
or
pop
lea
xchg
xchg
jnp
mov
jge
js
mov
xchg
daa
jbe
xchg
push
dec
adc
xchg
push
mov
pop
into
out
sbb
mov
dec
cmp
fld
bt
mov
mov
jb
js
mov
rcr
pusha
lods
mov
inc
and
jg
sbb
gs
sub
lods
mov
cmc
xchg
mov
mov
dec
mov
mov
icebp
or
movs
dec
sub
ss
scas
inc
(bad)
push
bound
and
or
sbb
sbb
cmp
in
xor
arpl
in
icebp
push
arpl
movs
inc
sbb
in
retf
(bad)
out
in
dec
cmp
lock
movs
adc
pop
mov
dec
mov
fadd
push
mov
and
outs
pop
out
xor
push
(bad)
mov
inc
xchg
cmp
mov
enter
ret
(bad)
sbb
jnp
mov
out
adc
adc
cmp
push
popf
scas
push
icebp
inc
mov
jl
call
retf
daa
not
rcr
call
mov
mov
repnz
push
in
mov
xchg
cmp
mov
adc
xor
sbb
scas
mov
xor
cmp
mov
lahf
xor
jno
xchg
mov
or
std
cmp
xchg
mov
pop
sub
and
and
xchg
sbb
push
mov
gs
addr16
pop
push
sbb
mov
clc
xchg
mov
jl
sbb
scas
rol
cli
push
ficom
fbstp
cli
loope
mov
cmp
jb
sbb
(bad)
in
in
xlat
enter
push
gs
clc
mov
test
add
inc
mov
sub
push
call
icebp
or
rcr
mov
popa
clc
xchg
push
mov
xor
fstp
cmps
mov
cmp
or
(bad)
adc
mov
inc
dec
js
and
daa
icebp
addr16
push
ins
xor
into
jns
xor
push
in
aaa
(bad)
mov
adc
(bad)
push
push
and
popa
push
jecxz
(bad)
js
and
test
es
mov
mov
xchg
ss
test
cdq
repnz
clc
lahf
push
inc
imul
mov
test
xor
ficomp
pushf
dec
jmp
or
daa
mov
pop
dec
cmp
(bad)
into
inc
scas
cmp
fistp
cs
inc
dec
js
push
cmp
add
loope
add
or
xchg
mov
es
xor
mov
(bad)
mov
daa
mov
xchg
mov
push
dec
xor
mov
retf
sahf
pop
xchg
out
imul
add
push
jecxz
out
in
popa
ss
out
in
imul
mov
outs
(bad)
repz
es
ins
out
jle
lods
iret
fadd
xchg
jae
fadd
fild
int
js
mov
lock
jae
push
cwde
mov
push
call
cwde
lods
cld
ins
(bad)
not
addr16
test
loop
out
retf
aam
inc
mov
push
scas
xor
sahf
fld
scas
adc
pusha
mov
(bad)
fwait
dec
dec
pushf
sti
sahf
fld
outs
ss
dec
mov
fisub
(bad)
sub
icebp
push
rcr
out
inc
mov
xor
cmp
mov
out
xor
aam
neg
lahf
imul
int
dec
ss
lods
xor
clc
mov
mov
setnp
clc
sbb
popf
cmp
mov
mul
mov
mov
fsubrp
daa
int3
ds
pop
loop
mov
in
in
xor
sbb
imul
mov
cdq
xor
xor
out
xor
jae
xor
lock
nop
daa
pop
fwait
inc
in
xchg
les
xchg
loopne
jae
mov
das
adc
movs
xchg
xlat
int
test
mov
jmp
or
mov
out
pop
gs
loop
out
jl
lods
loop
xor
xchg
ja
repz
sbb
imul
jb
ss
loope
mov
repnz
mov
mov
sbb
dec
int3
mov
fs
mov
aaa
fwait
xor
aaa
cdq
push
icebp
jae
sbb
cmps
jecxz
out
cld
fisubr
xor
loop
out
fsubr
cmps
jg
into
popa
out
adc
jae
mov
(bad)
inc
jb
call
call
mov
lods
loop
jae
in
icebp
push
jae
gs
stc
or
in
and
neg
enter
pusha
jmp
(bad)
gs
movs
sbb
sbb
mov
jg
cmc
xchg
ss
sti
pop
mov
(bad)
call
fwait
(bad)
clc
lahf
mov
js
cmp
mov
add
pop
sbb
add
mov
pop
int
adc
mov
add
mov
inc
mov
pusha
enter
mov
test
adc
(bad)
lods
in
adc
cmp
xor
popf
cwde
mov
shr
data16
(bad)
xlat
fcmovb
dec
and
mov
rcl
and
ins
in
(bad)
scas
(bad)
add
and
adc
not
iret
mov
bound
sbb
imul
arpl
sub
out
sbb
jmp
dec
in
repz
lods
into
xchg
dec
jns
jne
cmovo
retf
retf
push
sub
mov
xchg
mov
jl
vorpd
pop
adc
and
sub
das
mov
sub
or
in
lds
mov
mov
in
xchg
push
push
dec
lods
scas
js
xchg
mov
pop
jns
pop
mov
jmp
push
dec
jbe
js
aad
xor
cmp
lods
fsubrp
dec
jno
aad
jb
js
aad
push
and
outs
adc
std
jno
xor
xchg
addr16
push
lods
jl
mov
push
out
mov
mov
pop
add
adc
mov
fisub
in
sbb
ds
push
lods
xor
inc
loop
push
cmp
jp
inc
lods
or
je
or
xchg
arpl
or
jb
mov
fnstenv
lds
dec
retf
xchg
push
adc
mov
sbb
daa
into
mov
push
sahf
inc
dec
cmp
sub
cmp
jns
sbb
mov
pop
sub
mov
jecxz
(bad)
add
push
in
mov
mov
mov
lods
dec
xchg
push
(bad)
leave
xchg
adc
movs
dec
lods
mov
push
ficom
fbstp
or
loop
(bad)
je
push
lea
mov
sbb
lods
xor
push
(bad)
pop
mov
pop
mov
pop
jae
jmp
or
enter
(bad)
outs
mov
mov
adc
mov
push
call
loop
(bad)
and
data16
push
pushf
adc
aaa
(bad)
push
retf
mov
clc
popf
mov
mov
jae
out
lods
adc
cld
pusha
lods
fs
inc
dec
dec
stos
push
jg
jmp
les
in
imul
xchg
sti
movs
aad
dec
fstp
cmp
test
mov
mov
mov
les
bound
mov
jbe
adc
pop
in
mov
mov
adc
cmp
mov
mov
dec
adc
ins
mov
mov
dec
adc
sbb
in
movs
add
pusha
bound
inc
inc
out
nop
mov
in
adc
mul
mov
mov
hlt
sub
pop
cmp
call
adc
fcom
xchg
mov
mov
xor
and
xchg
xchg
cmp
jge
js
loop
and
fcmovu
jns
sbb
or
cmps
push
into
dec
je
sahf
mov
mov
mov
popf
sub
xchg
jae
mov
out
adc
jle
mov
xor
cmp
jnp
repnz
(bad)
repnz
dec
call
std
xor
dec
pop
in
inc
les
ss
gs
fwait
enter
je
cdq
mov
xchg
xchg
inc
ja
popf
call
jns
sbb
cs
call
icebp
mov
inc
pop
div
loop
mov
lds
and
bound
cs
or
push
adc
clc
push
xor
dec
or
xlat
adc
scas
daa
mov
mov
clc
bound
mov
cld
jbe
xchg
frstor
scas
dec
xchg
push
ficom
fisttp
push
(bad)
mov
shr
bnd
cmp
clc
inc
bound
cwde
test
scas
inc
dec
add
idiv
inc
mov
xor
or
dec
mov
aas
dec
mov
out
cmp
sub
lea
les
pushf
cwde
enter
es
les
mov
shr
jns
cmp
out
daa
cmps
mov
and
ja
data16
mov
xchg
cwde
mov
and
(bad)
call
mov
xor
mul
push
loopne
les
cmp
sub
outs
sub
dec
sub
cld
sub
xchg
pop
dec
cmp
and
bound
in
icebp
push
push
sar
inc
fdivp
inc
sbb
mov
(bad)
repnz
scas
ret
add
cmp
mov
mov
mov
mov
popa
addr16
sahf
push
mov
mov
xchg
dec
cld
sbb
outs
outs
mov
inc
xor
push
mov
ins
cwde
mov
mov
mov
mov
jnp
fs
jg
push
jns
in
push
jbe
xor
fiadd
push
cmp
fimul
inc
fisub
add
pop
fldenv
xchg
fild
not
retf
jnp
mov
outs
sti
sub
sbb
popf
ffree
ds
jge
ins
pop
xlat
mov
cmp
mov
mov
or
pop
fcom
mov
sti
xor
push
jno
sbb
sti
(bad)
sbb
in
inc
icebp
jb
(bad)
and
shr
or
adc
gs
mov
inc
mov
imul
in
pop
dec
test
scas
inc
(bad)
push
outs
ja
pop
das
push
fcomp
sub
fdivr
jbe
retf
push
mov
or
movs
fld
pop
gs
retf
mov
add
cmp
jns
pushf
cmp
ins
xadd
pop
loop
mov
dec
aas
mov
xchg
sti
xor
rcr
xor
jbe
jnp
jb
mov
fcom
imul
fs
mov
inc
into
cmp
in
mov
loopne
jbe
movs
push
pushf
imul
and
mov
push
out
arpl
dec
(bad)
scas
cmp
jno
cmp
loopne
jnp
cs
icebp
cld
or
jns
dec
mov
or
xchg
in
test
add
imul
sbb
add
sbb
xlat
in
pop
test
outs
fdiv
fnstenv
mov
clc
xchg
cmp
adc
icebp
sbb
cmp
inc
mov
mov
inc
outs
inc
test
sti
loop
jnp
jle
das
mov
aas
mov
loopne
jnp
jle
das
ret
or
pop
sbb
cdq
pop
(bad)
fisub
outs
xlat
jecxz
jnp
jle
aaa
loopne
imul
fld
cld
(bad)
outs
movs
ins
adc
and
cmp
push
fs
addr16
(bad)
pusha
outs
mov
sbb
aas
mov
es
xor
repnz
push
sti
in
int
pop
nop
mov
fiadd
fucomip
push
test
sbb
outs
outs
mov
pop
clc
cmps
mov
cmp
neg
xlat
outs
lds
pop
mov
pop
adc
inc
dec
mov
mov
repnz
add
mov
cmp
ds
cmp
jns
rol
or
lahf
sbb
push
push
xor
lahf
movs
daa
sar
nop
loopne
xor
xchg
lods
and
sbb
fs
mov
mov
es
sahf
dec
and
popa
cmp
cmp
pop
(bad)
inc
cmp
dec
pop
xchg
outs
dec
fwait
jge
jb
es
in
rol
xor
adc
xor
sahf
enter
xchg
frstor
cdq
retf
ds
cmp
cdq
inc
jmp
fs
jbe
mov
xchg
sti
xchg
jb
jb
and
adc
in
mov
jge
js
mov
mov
in
dec
mov
mov
in
dec
sub
dec
xchg
add
push
mov
pop
push
xchg
cmps
pop
jb
jnp
pop
call
sbb
sub
or
add
nop
sub
push
mov
xchg
inc
xchg
sbb
sti
es
xor
aaa
daa
xchg
mov
popa
xchg
pop
les
movs
xchg
push
loop
fs
ss
mov
jb
js
mov
xor
cmp
xchg
ret
(bad)
enter
add
mov
mov
in
idiv
push
es
xchg
xchg
mov
jp
jb
sti
inc
hlt
sub
arpl
jns
cmps
mov
xchg
aad
inc
nop
cmp
cmp
push
in
xor
cmp
and
xchg
fdiv
lds
leave
xchg
daa
shl
lahf
adc
adc
cmps
loop
leave
imul
jb
jnp
mov
sbb
std
cwde
lods
gs
das
cs
into
movs
mov
inc
pop
sbb
xchg
mov
dec
lds
cmp
xchg
std
call
mov
xchg
pop
sub
loop
leave
inc
cld
pop
das
scas
dec
cmps
mov
inc
imul
push
dec
jb
in
icebp
std
in
dec
mov
repnz
popf
mov
dec
cld
cmp
fldenv
outs
dec
scas
mov
ins
mov
in
fcom
enter
xchg
mov
inc
stc
push
cld
sub
dec
outs
mov
leave
(bad)
in
outs
nop
out
popf
push
push
test
test
test
movs
ss
pop
in
xchg
fcmovb
jbe
repz
pop
mov
sbb
les
fld
jns
imul
movs
jbe
dec
mov
outs
cmp
mov
jnp
movs
mul
cdq
test
fiadd
fs
aam
idiv
cmp
jne
jnp
movs
push
addr16
xchg
xchg
in
leave
cmp
rcl
aam
mul
icebp
mov
dec
sbb
fwait
repz
add
test
mov
retf
cmps
cld
js
dec
vandps
dec
push
adc
loop
xchg
dec
mov
push
dec
lds
ins
sub
movs
lock
xchg
retf
xor
movs
xor
or
stos
sub
inc
in
dec
in
outs
adc
in
sub
inc
mov
adc
stos
les
push
xchg
fcmovnb
fist
sub
xchg
cmp
cmp
sub
jno
ds
mov
sub
enter
(bad)
push
das
dec
dec
cmc
cmps
fmul
in
sti
nop
push
and
inc
push
xor
movs
repnz
retf
stc
nop
sbb
jle
cmp
les
test
in
icebp
icebp
push
xor
and
aam
retf
push
test
pushf
push
sub
imul
xor
jle
xor
clc
pop
push
cmp
push
mov
adc
lea
sub
mov
cmps
inc
push
xchg
mov
push
mov
call
push
push
sti
xor
retf
cs
dec
jns
mov
fist
dec
dec
mov
adc
outs
and
test
outs
iret
aam
idiv
xchg
sahf
clc
jle
or
adc
neg
pop
push
in
in
dec
dec
addr16
pushf
sbb
jae
push
retf
inc
xor
jnp
data16
xchg
fist
ss
mov
add
mov
adc
dec
int
ins
adc
jmp
add
ss
fwait
aam
retf
and
mov
lods
sub
cwde
std
popf
clc
jge
or
jb
dec
sub
arpl
sahf
aam
retf
iret
test
imul
pop
hlt
sub
push
jne
pop
(bad)
cmc
xchg
std
loop
aam
retf
pop
test
ds
pop
int
and
xchg
pop
inc
cmp
sti
mov
dec
push
movs
or
mov
bound
mov
ss
addr16
sbb
(bad)
imul
xchg
jecxz
jecxz
dec
xchg
dec
call
mov
mov
sub
fwait
mov
jge
call
in
out
arpl
into
push
mov
addr16
and
dec
dec
mov
mov
mov
not
in
jbe
mov
in
xlat
imul
pushfw
std
xchg
xor
bound
pop
fsub
and
mov
push
push
dec
jne
mov
pushf
and
rol
mov
arpl
jecxz
jp
pop
dec
xchg
mov
outs
cmps
and
dec
addr16
jmp
loope
jae
mov
icebp
loop
(bad)
dec
mov
cmp
push
je
js
adc
inc
mov
cmp
push
jbe
mov
xchg
ret
pop
das
jae
pop
call
xchg
mov
pop
sub
je
xchg
mov
out
xchg
stos
lds
push
xchg
popa
enter
fs
bound
pop
out
xchg
and
mov
xchg
push
ja
push
outs
inc
into
ins
cmps
pop
mov
push
outs
jb
mov
popf
cmp
stc
js
xor
stos
pushf
and
push
rcl
loop
cmps
or
je
jno
push
ret
cmp
aad
add
sbb
pop
cmps
xchg
cmp
ret
dec
dec
cmp
out
push
loopne
addr16
cmp
lock
cmps
adc
cmps
or
addr16
loop
shr
pop
pushf
loope
jecxz
jle
jl
test
popf
icebp
xchg
mov
pop
loop
addr16
dec
in
jbe
mov
cmp
mov
ret
jle
cmp
sti
pop
jno
xor
pop
cmp
fxch
cmp
jo
push
mov
cmp
jno
xor
pop
je
jecxz
addr16
dec
mov
adc
out
jb
ds
adc
loop
into
and
dec
scas
inc
into
push
or
lds
sbb
(bad)
ja
adc
out
cmp
call
adc
add
retf
push
jp
xor
jmp
addr16
xor
int
jp
addr16
into
push
retf
stos
(bad)
(bad)
sub
adc
ss
into
push
ins
jno
loop
dec
or
mov
dec
addr16
jg
pushf
lahf
into
push
fsub
in
les
pushf
pop
hlt
(bad)
outs
test
(bad)
outs
inc
mov
aad
xchg
popf
std
clc
fwait
jae
jg
push
loop
out
push
jb
repz
pop
loop
into
adc
popa
in
je
fadd
jae
cmp
outs
adc
nop
jae
cmp
outs
ja
sub
dec
push
jno
movs
cmp
xor
enter
movs
fisttp
(bad)
jae
push
cmp
pop
in
in
icebp
add
(bad)
or
and
(bad)
jne
sahf
punpcklbw
mov
mov
enter
push
cmp
fwait
dec
mov
cmp
push
je
outs
xchg
adc
imul
pop
xor
mul
stos
fist
mul
out
fbstp
in
jmp
sti
popa
movzx
std
dec
ja
mov
jb
popa
das
aaa
pop
iret
jbe
arpl
or
outs
and
test
jo
jno
pop
add
mov
or
xchg
add
fdiv
retf
pushf
jge
jp
add
mov
fcomp
adc
and
sub
pop
inc
mov
inc
sbb
xchg
mov
addr16
retf
fdiv
in
jb
sbb
cmp
outs
jo
loop
ja
fsubrp
dec
out
xchg
outs
or
popf
xor
lea
jae
mov
mov
sbb
into
lods
movs
fild
fsubp
into
movs
push
mov
fstp
mov
int
pop
cmp
fnstsw
in
jnp
repz
adc
out
jl
add
sub
dec
lea
lds
jns
pushf
jmp
imul
push
pushf
out
cs
inc
fucom
cmp
pop
or
fnstsw
ins
icebp
sub
into
jno
lock
cdq
mov
fs
daa
ds
scas
movs
sub
pop
mov
das
mov
and
enter
adc
fwait
sub
xchg
shr
das
adc
mov
fmul
clc
mov
(bad)
jle
ins
sar
sbb
ja
mov
out
cs
jl
(bad)
jle
ffree
pop
cmp
(bad)
gs
adc
pop
and
mov
cmp
in
lea
jnp
repnz
shr
loope
mov
mov
daa
sahf
jnp
mov
sub
fistp
ror
cmc
cmp
fsub
jbe
cmp
les
fisttp
fucom
push
mov
in
in
call
push
in
xlat
retf
fisubr
push
jo
xchg
ffreep
fistp
jb
cmp
fcom
sti
adc
mov
mov
aas
push
dec
pop
add
xlat
data16
(bad)
fcom
jbe
mov
je
cli
jno
icebp
jmp
hlt
dec
out
cmp
daa
mov
je
mov
cmp
sar
out
dec
or
pop
mov
sub
push
and
inc
xor
shrd
and
hlt
inc
dec
push
je
sub
cwde
dec
out
ror
int
cmp
dec
jp
and
add
mov
jp
mov
pop
in
xchg
cmps
pushf
and
inc
(bad)
jb
jp
sti
in
hlt
xor
mov
mov
outs
mov
fwait
cmps
pushf
xchg
adc
enter
into
push
mov
inc
mov
mov
leave
into
pop
pop
cmps
inc
push
cs
outs
mov
sub
and
xchg
add
mov
push
pop
sahf
push
retf
adc
mov
stos
sub
iret
push
sub
dec
dec
mov
jmp
shl
cmp
pop
jp
movs
pop
lods
dec
xlat
push
scas
pop
outs
dec
dec
mov
cmps
push
outs
adc
dec
dec
mov
cmps
jecxz
jmp
sub
sbb
fsub
ficomp
mov
mov
jmp
push
jp
in
icebp
popf
hlt
jl
cmp
jb
movs
pop
mov
adc
ror
mov
and
hlt
adc
cmp
jp
in
in
xor
push
ds
scas
pusha
outs
dec
scas
les
jne
xchg
scas
(bad)
dec
shr
lahf
movs
push
jecxz
jmp
mov
stos
hlt
pop
ins
dec
scas
mov
fisub
out
dec
outs
enter
(bad)
in
popf
loop
jmp
into
sahf
or
dec
mov
movs
mov
dec
xor
fcomp
jmp
mov
jmp
mov
ja
dec
xor
in
sti
sahf
ficomp
je
imul
retf
mov
jg
fst
dec
enter
xchg
cmp
fs
mov
(bad)
mov
mov
sti
out
mov
aas
jae
sti
(bad)
fidiv
out
jbe
js
sbb
movs
dec
pop
hlt
data16
cdq
into
sbb
je
jns
xchg
sti
dec
(bad)
mov
(bad)
mov
mov
dec
mov
in
xchg
mov
mov
iret
call
xor
cmps
xor
sahf
pushf
dec
popa
xlat
mov
fwait
jmp
xor
xchg
xchg
xor
lock
dec
ja
and
add
jp
aaa
lahf
sub
test
in
dec
outs
jbe
mov
cmps
pmulhw
fmul
pop
icebp
mov
dec
jg
stc
loop
cdq
add
and
repnz
addr16
loope
cdq
jl
mov
cdq
and
xor
xchg
mov
cmps
add
xor
(bad)
jb
out
sbb
xor
push
gs
add
cli
retf
push
mov
xor
(bad)
mov
adc
cmps
adc
xor
icebp
cli
dec
adc
ret
xor
sbb
sbb
cmps
sbb
(bad)
jecxz
cdq
or
popf
push
cdq
mov
pop
shl
fbld
ficomp
jl
gs
arpl
mov
sub
pop
popf
cdq
inc
mov
popf
xor
mov
daa
mov
pushw
bound
std
mov
int3
ins
mov
addr16
add
(bad)
pcmpgtd
loopne
cdq
test
or
loope
cdq
lds
and
jge
push
imul
jae
xchg
pop
popa
(bad)
in
cdq
pop
jb
xchg
int3
mov
int3
pop
xlat
xor
pop
xor
xor
and
and
and
mov
bound
and
and
xchg
and
and
stc
jns
stc
jle
iret
xor
imul
pop
dec
clc
cs
xchg
and
jge
fbld
push
and
mov
loope
clc
xchg
test
pusha
dec
ret
stos
or
xlat
adc
jne
aas
(bad)
scas
daa
cld
add
adc
loope
in
push
or
dec
clc
sbb
adc
outs
inc
xchg
lock
test
fwait
push
and
in
(bad)
cld
or
push
lds
push
cld
jle
outs
push
ret
pop
or
cmp
bound
pop
lock
ret
inc
or
sahf
test
jg
imul
(bad)
xor
outs
cmp
loope
ds
out
mov
sub
lahf
hlt
and
cmps
and
lock
and
sbb
lock
pushf
dec
clc
das
dec
es
(bad)
out
stos
clc
mov
adc
adc
stc
and
test
in
xchg
fwait
dec
add
cwde
mov
leave
jg
jbe
rol
loop
adc
enter
lock
or
imul
ror
adc
dec
lock
inc
adc
adc
loopne
jg
mov
dec
dec
rcl
ret
or
repnz
call
in
das
loope
cld
pop
ret
sti
or
cmp
sub
sub
add
sub
xor
dec
scas
and
dec
push
xchg
cmc
xchg
pop
inc
(bad)
dec
scas
and
dec
scas
and
adc
dec
enter
inc
stos
hlt
inc
call
int
xchg
fiadd
xchg
fiadd
xchg
faddp
xchg
ds
and
or
out
les
mov
add
xchg
mov
pop
jl
jp
dec
push
xor
aas
int
adc
jae
xor
and
ret
enter
inc
jle
xor
adc
sub
xchg
ds
repz
lds
pop
movs
dec
push
jl
hlt
xor
dec
call
jmp
xchg
clc
pop
jmp
sbb
jge
xor
loope
movs
iret
repz
mov
rcl
lock
pop
xor
adc
pop
movs
das
xchg
dec
sub
mov
lds
rcl
fisub
call
dec
xchg
lds
shl
imul
sub
call
mov
ja
cs
sub
fbld
cmp
ds
std
ror
lock
pop
xchg
jle
pop
xchg
jle
aaa
movs
lahf
loopne
jmp
mov
ror
mov
xor
test
jae
mov
push
int3
xchg
jle
repz
dec
dec
mov
sti
movs
pop
xchg
or
jb
repnz
std
xchg
pop
jmp
ja
and
imul
pop
call
jle
cli
and
hlt
daa
repnz
movs
aas
arpl
hlt
push
lods
xchg
inc
mov
cmp
jle
cli
cmp
dec
jmp
movs
jg
aam
ss
jmp
movs
pop
push
mov
jmp
inc
cli
psubw
and
jmp
aas
nop
pop
ret
xchg
shr
dec
call
inc
xchg
shr
cld
mov
movs
jmp
xchg
lahf
push
cld
test
and
and
mov
inc
call
or
mov
inc
out
jb
fwait
cld
or
jle
cmp
aaa
mov
mov
lahf
out
enter
repnz
adc
cdq
push
cld
xor
pushf
xchg
adc
jmp
test
jae
repz
test
dec
enter
nop
cld
lds
mov
sbb
cmp
test
adc
jae
iret
dec
scas
mov
hlt
dec
call
inc
jp
stc
pop
sbb
ins
dec
scas
and
pop
call
inc
add
xlat
xchg
inc
fcom
jmp
and
call
ret
mov
test
mov
aad
(bad)
clc
ins
xor
inc
ins
clc
in
xor
fs
out
and
and
sbb
ins
push
xor
pop
mov
jle
ins
inc
push
xor
dec
repnz
inc
jnp
pop
xor
lock
ret
out
and
movs
mov
adc
out
and
mov
adc
movaps
push
jg
out
mov
loope
mov
xchg
mov
mov
mov
mov
call
dec
js
cld
or
push
(bad)
daa
imul
sub
sub
cld
dec
lds
aas
inc
xchg
mov
int
xchg
mov
jg
cld
sbb
xlat
xchg
dec
xchg
scas
cwde
adc
add
jmp
pop
pop
(bad)
and
bound
dec
xor
inc
outs
xchg
loope
jecxz
ret
in
mov
xchg
cld
lds
inc
icebp
fs
jmp
outs
push
jl
clc
sbb
adc
xchg
daa
ret
test
fwait
out
sbb
aam
mov
xlat
ret
test
(bad)
out
enter
les
mov
sbb
add
mov
mov
adc
or
test
or
mov
ja
aas
rcl
sar
mov
cld
xor
jae
ud0
and
lock
mov
cld
jmp
retf
adc
(bad)
xor
inc
js
cld
pop
jb
clc
ja
lahf
sub
test
jg
ret
pusha
clc
maskmovq
and
(bad)
sti
fwait
adc
adc
xchg
jl
sbb
jg
xchg
lock
icebp
push
loope
loope
clc
mov
push
lahf
or
sbb
(bad)
ss
dec
jle
je
pop
in
xchg
mov
lock
mov
ret
das
xchg
jmp
imul
aas
in
fs
inc
mov
pop
pop
jle
inc
sub
test
fistp
mov
push
stc
(bad)
xchg
lods
xchg
and
ret
push
repnz
or
popa
or
push
clc
and
add
call
push
mov
popa
aaa
jns
push
ret
icebp
in
fs
in
cmps
adc
sti
(bad)
enter
loop
stc
add
mov
sub
sbb
ret
push
enter
and
test
xchg
pop
dec
arpl
retf
inc
stc
popa
jp
cld
or
cs
shr
mov
shr
xlat
repnz
pop
jle
cmp
and
or
ds
xor
mov
data16
or
mov
bswap
outs
ret
inc
stc
in
clc
jb
sbb
es
(bad)
loope
repnz
push
jle
and
jecxz
stc
cmp
clc
sub
jge
push
std
cld
cld
je
add
xlat
sub
xchg
cld
jg
outs
push
jl
cld
and
jg
pushf
(bad)
fadd
sub
xchg
pushf
mov
(bad)
xchg
dec
sub
push
in
push
inc
xchg
aas
dec
repz
push
in
repnz
icebp
sbb
cld
pop
jl
(bad)
sbb
xchg
aas
(bad)
(bad)
ja
pop
in
or
mov
mov
gs
push
stc
sub
retf
mov
scas
sar
loop
in
jecxz
stc
sbb
inc
stc
fwait
js
(bad)
push
ficom
xor
out
loope
stc
dec
cld
mov
jge
test
add
dec
icebp
xchg
repz
xchg
aas
mov
xor
mov
test
mov
imul
sub
inc
repnz
enter
dec
cs
fiadd
in
nop
dec
adc
jl
mov
jb
xlat
xor
xchg
lahf
and
mov
lds
ja
gs
neg
aas
mov
jg
leave
pop
stc
(bad)
in
sub
leave
jg
scas
retf
jg
jp
das
jl
or
lds
stc
outs
fsubr
inc
jmp
ftst
out
inc
(bad)
cmp
inc
mov
inc
ss
pop
clc
movs
cld
add
in
arpl
cld
pop
cld
mov
pop
loop
cmp
pushf
bound
jle
xor
lods
and
sbb
ds
dec
dec
jb
xchg
cmc
in
xchg
fst
inc
(bad)
sbb
xchg
sub
and
and
pop
mov
mov
jg
cmp
inc
fs
stc
push
jb
mov
pop
cld
mov
(bad)
xor
mov
enter
cld
xor
sahf
push
cld
mov
or
psrad
in
repz
or
xor
popa
call
das
repnz
jle
(bad)
push
jle
dec
xor
out
xlat
loop
cld
cmp
iret
scas
jge
arpl
sub
inc
jle
int
loop
cld
es
int
loop
repnz
lock
stc
lods
hlt
pop
mov
repnz
lea
popa
inc
jle
stc
aas
mov
repnz
in
leave
(bad)
jecxz
cld
dec
jl
jle
or
push
mov
xchg
not
sti
xor
repnz
ds
call
pop
inc
jnp
ret
hlt
ss
pop
inc
addr16
call
xchg
(bad)
arpl
call
mov
enter
dec
push
and
pushf
enter
lds
iret
sar
fdiv
lahf
and
enter
in
in
mov
xchg
das
xchg
and
adc
das
bnd
in
call
jl
xchg
and
xchg
pop
(bad)
mov
xchg
outs
bound
pop
cwde
adc
ss
mov
ja
xor
in
clc
fcmove
xchg
jl
xchg
sti
clc
xchg
punpckhbw
xchg
cmp
clc
(bad)
enter
xchg
pop
xchg
fild
mov
lahf
shl
bound
adc
jns
loop
enter
push
stc
cmp
mov
cdq
enter
sub
inc
xchg
cmc
mov
or
inc
jle
repz
sbb
stc
enter
xchg
(bad)
test
out
lock
xchg
(bad)
(bad)
clc
out
enter
xchg
aas
repnz
adc
ret
dec
xchg
mov
or
inc
sahf
mov
xchg
out
and
mov
inc
adc
int
mov
ds
stc
pop
stc
push
mov
xchg
pop
enter
(bad)
in
repnz
and
es
and
xchg
mov
jmp
xchg
jmp
in
call
cmp
xor
(bad)
hlt
pop
push
xor
pop
and
cld
jb
and
and
icebp
mov
cli
scas
inc
fsub
sbb
mov
and
mov
repz
inc
repnz
adc
cmps
or
ret
enter
mov
and
and
repnz
in
adc
dec
cmp
pop
xchg
xchg
and
add
dec
inc
pop
test
xchg
push
jecxz
and
mov
repnz
enter
repnz
cld
pop
in
clc
repz
push
icebp
xchg
xchg
aaa
ror
sub
enter
lods
clc
dec
in
xor
enter
in
in
(bad)
fiadd
sbb
cld
cmp
xchg
(bad)
enter
ss
xor
outs
sbb
(bad)
and
cs
mov
lds
inc
fiadd
lahf
and
rol
xchg
jmp
aas
pop
stc
adc
jno
repnz
call
int
loop
in
xor
inc
ss
xor
mov
sub
ds
repz
xchg
dec
shr
sbb
adc
pop
icebp
mov
in
hlt
call
sub
pop
call
or
sbb
aam
mov
inc
mov
mov
in
pop
hlt
retf
and
mov
inc
and
std
or
stos
call
movs
sbb
std
sbb
jne
lss
enter
dec
push
sub
and
sbb
ss
add
cmps
pop
std
push
push
mov
movs
call
ja
call
jmp
jle
sbb
jl
cli
add
dec
push
cmp
jge
out
push
or
pop
xchg
pop
push
jl
cli
arpl
inc
cmps
leave
sub
mov
lahf
shl
xchg
rcl
enter
rcr
mov
scas
xor
cli
imul
sub
inc
jg
repz
inc
jg
xchg
mov
or
mov
test
fist
ds
repz
sbb
leave
out
inc
mov
cli
daa
repnz
dec
jae
fld
call
and
repnz
inc
push
xor
sbb
mov
xor
inc
xchg
jo
cli
ja
jnp
scas
inc
inc
jle
cmove
dec
jae
icebp
inc
hlt
pop
xor
push
cld
mov
xchg
mov
mov
cmp
outs
call
pop
repnz
nop
int
(bad)
pop
out
inc
inc
mov
dec
in
mov
push
inc
and
call
mov
push
lahf
push
cld
push
push
dec
push
mov
sub
sbb
mov
cmps
add
dec
inc
sub
sbb
(bad)
fisubr
mov
cmps
inc
icebp
dec
push
aaa
jle
sbb
adc
jle
adc
jle
and
and
rcl
pop
enter
pop
hlt
gs
mov
mov
loopne
xor
dec
mov
push
jl
mov
popf
(bad)
int3
scas
cmp
or
add
das
repnz
enter
or
push
and
(bad)
ins
popa
add
dec
int3
adc
lea
test
cmp
int3
loop
popa
push
iret
or
js
pop
shl
sahf
pop
xchg
lock
and
loop
popa
or
push
fadd
imul
pop
pop
mov
xchg
mov
popa
pxor
sti
js
adc
sbb
push
pop
inc
sub
repnz
mov
enter
add
mov
mov
lods
adc
mov
sub
sub
lods
adc
cmp
ins
adc
mov
test
mov
ins
adc
mov
in
adc
mov
push
mov
mov
mov
sbb
cli
jo
call
xchg
jo
sbb
xor
mov
test
sub
pushf
adc
cmp
pop
adc
jno
push
xchg
test
pop
adc
xor
fcom
fidiv
call
mov
fcom
mov
cmp
test
mov
or
xor
push
and
mov
jb
stos
sub
cmps
stos
inc
xchg
mov
mov
push
sbb
push
xor
push
push
xor
pop
aad
push
push
sub
stos
(bad)
mov
js
aad
leave
stos
cs
jmp
cmc
bound
std
cwde
scas
sbb
or
and
xchg
dec
xor
int3
push
lea
push
dec
test
icebp
movs
push
dec
test
or
test
icebp
lods
push
iret
test
push
das
test
icebp
mov
push
icebp
mov
or
push
scas
test
or
cmps
push
outs
test
or
test
icebp
scas
push
out
test
lahf
jp
es
call
jp
pop
aad
cmp
mov
mov
cmp
iret
jecxz
jp
daa
aad
cmp
xor
test
jo
mov
pushf
push
scas
jecxz
jp
pop
aad
mov
cmc
ss
test
jo
mov
pop
push
out
jecxz
pop
cmp
jo
lods
(bad)
ins
mov
cmp
cmp
fst
jecxz
mov
sub
xor
mov
or
retf
push
mov
add
aad
mov
dec
or
cmps
test
jge
push
or
sbb
movs
imul
lods
imul
or
aam
loopne
dec
daa
imul
dec
ror
mov
add
xor
mov
data16
xor
inc
push
cmp
push
movs
test
cmp
test
cmp
imul
mov
mov
ror
push
mov
call
call
call
call
(bad)
adc
cmp
mov
pop
push
mov
xchg
bound
in
mov
and
pop
push
lea
aam
xchg
cmps
push
stos
xor
rcr
(bad)
imul
aam
bound
in
fsub
daa
mov
mov
sbb
hlt
bound
std
fsub
loopne
repz
sbb
jle
xor
push
mov
xor
mov
mov
inc
xor
ret
xor
push
mov
cmp
add
mov
cmps
pop
ret
xor
push
mov
xor
mov
push
xor
ret
outs
push
stos
dec
adc
les
shl
(bad)
movs
or
adc
ds
adc
bound
mov
sub
pop
mov
lea
call
adc
and
mov
mov
cmp
inc
or
dec
sbb
fwait
icebp
nop
fadd
les
xchg
lds
mov
adc
cmp
mul
fmul
mul
cmp
mov
cs
arpl
sub
arpl
cmp
adc
cmps
les
cmp
into
loop
jno
iret
mov
js
pop
shl
and
xchg
lock
adc
adc
jmp
dec
fadd
jmp
ficom
mov
cmps
mov
mov
jno
out
mov
js
adc
movs
or
or
mov
adc
adc
aad
inc
xchg
pop
add
push
pop
sub
cdq
pop
and
sub
sub
arpl
and
mov
sub
arpl
sub
mov
sub
int
daa
mov
pop
fsubr
jbe
fadd
movs
inc
int3
(bad)
dec
mov
mov
mov
mov
mov
jns
pop
cli
lds
repnz
bound
sub
loope
pop
lea
mov
cs
loope
pop
(bad)
xchg
bound
dec
mov
mov
mov
lods
cmp
mov
sbb
mov
mov
mov
lea
mov
xchg
(bad)
fwait
loop
outs
mov
sar
repz
push
jecxz
cmp
mov
push
sub
aam
cmps
xor
add
call
dec
mov
mov
pop
inc
(bad)
jbe
jge
push
or
xlat
xor
cmp
fld
test
sbb
rol
aad
(bad)
movs
or
fiadd
cmp
sub
dec
rcl
arpl
movs
cwde
scas
sub
pushw
xor
mov
fisubr
int3
rcl
scas
mov
dec
push
push
dec
imul
iret
push
or
imul
mov
fcomi
mov
add
mov
scas
imul
cmps
mov
outs
imul
out
push
or
imul
ror
mov
adc
adc
push
mov
cmp
ror
popa
movs
jbe
stos
mov
pop
lods
pop
les
in
adc
push
mov
mov
ins
shr
fwait
mov
fsubr
mov
mov
dec
mov
in
shr
popa
cmps
jbe
mov
mov
pop
xor
rcl
ins
add
push
pop
test
push
(bad)
(bad)
loopne
mov
inc
mov
cmp
add
sbb
fild
mov
mov
cmp
pop
cs
test
outs
pop
(bad)
mul
mov
(bad)
jae
stos
int
xor
or
pop
test
xchg
pusha
xchg
ss
mov
mov
ins
add
rcl
mov
adc
mov
rcl
popa
lods
scas
push
lea
shr
sbb
pop
xor
xchg
pop
cmp
je
sbb
jne
dec
xlat
test
xlat
adc
inc
jne
cwde
test
shl
sar
pop
fst
std
repz
sbb
fisttp
push
ror
cmps
call
sub
popa
xchg
xor
cwde
movs
fwait
lds
out
out
push
mov
daa
je
js
mov
cmps
je
js
mov
addr16
js
mov
out
jmp
pop
mov
pop
je
js
mov
xchg
je
js
mov
push
je
stos
or
dec
ja
ss
mov
or
je
js
mov
mov
add
ins
pop
or
shr
jnp
sbb
pop
les
popf
sbb
jne
sub
fnstenv
popf
or
jno
cmps
repz
mov
add
inc
js
mov
out
push
lods
cmp
dec
pop
stos
xchg
mov
pop
lds
and
call
or
xchg
mov
cmp
xlat
movs
bound
jmp
outs
pop
es
mov
push
xchg
lea
sbb
xlat
in
sub
es
sbb
in
nop
scas
add
sub
push
pop
xor
push
mov
mov
jecxz
scas
add
stos
ret
xor
pop
push
mov
mov
jecxz
scas
add
imul
pop
xor
xlat
mov
mov
jecxz
scas
add
jmp
pop
pop
aaa
out
jmp
mov
std
test
push
test
inc
popf
jle
arpl
ret
push
aas
mov
sbb
hlt
jecxz
ror
dec
aas
mov
sub
call
rol
cmp
lahf
mov
mov
jmp
xor
or
shr
(bad)
pop
mov
js
mov
dec
aad
pusha
call
mov
jo
inc
enter
mov
lea
jp
jae
in
or
test
icebp
xchg
mov
icebp
mov
icebp
pushf
mov
icebp
cmp
xchg
mov
icebp
mov
icebp
call
xchg
icebp
xchg
mov
icebp
mov
clc
mov
sahf
mov
pop
mov
xor
jmp
mov
xchg
arpl
xchg
pop
mov
cmc
std
outs
lahf
mov
pop
mov
cmp
pop
fisttp
aam
arpl
lods
fsub
cmp
fisttp
aam
arpl
mov
pop
jge
imul
pop
mov
aas
mov
cli
and
pavgw
mov
push
std
cmp
aas
mov
cli
sub
push
cmps
cmc
mov
mov
cmp
jmp
mov
cli
and
xchg
jle
xchg
cmc
stos
mov
std
cmp
mov
(bad)
outs
jecxz
jle
mov
mov
pop
xchg
loope
popa
imul
div
stos
inc
mov
adc
inc
lea
or
fidiv
lock
and
outs
sbb
push
sub
xor
xor
loopne
jl
or
or
pop
push
xchg
xchg
xchg
sbb
push
test
ret
pop
outs
nop
mov
and
and
ss
sbb
(bad)
sbb
jmp
(bad)
mov
jo
sbb
lds
sbb
nop
sub
popa
xchg
sbb
or
lds
pop
dec
xchg
shl
(bad)
pop
inc
add
sbb
mov
push
test
xchg
xor
loopne
mov
cmp
(bad)
push
inc
add
fcom
adc
loopne
mov
cmp
(bad)
pop
inc
add
sbb
jno
rol
mov
xchg
mov
mov
inc
pop
scas
sbb
jno
rol
xor
loopne
mov
mov
ret
add
sbb
jno
xor
and
sbb
popf
jno
arpl
mov
jecxz
fimul
retf
cmp
sbb
shl
les
gs
pop
rol
push
xchg
mov
sbb
xor
rol
xor
xchg
jno
(bad)
sbb
fnstcw
js
mov
inc
xchg
nop
push
shl
ror
aad
inc
cmps
mov
mov
xchg
cwde
ins
lods
ret
xor
test
lock
mov
dec
sbb
lock
lock
mov
iret
sbb
xor
xchg
mov
das
sbb
lock
lock
xchg
(bad)
outs
retf
fidiv
push
loopne
arpl
fidiv
push
loope
arpl
fidiv
xchg
pusha
sahf
mov
repz
pusha
sub
inc
arpl
fcomp
and
(bad)
pusha
cdq
mov
das
sbb
ficom
jmp
xchg
mov
xor
bound
int
imul
sub
sbb
mov
fmul
xor
mov
or
fstp
push
shl
das
mov
sti
mov
fmul
xor
bound
ret
fsubr
sar
sub
sbb
jo
cmp
xor
mov
or
sar
push
shl
sub
sbb
jo
cmp
xor
loop
jno
addr16
cmp
sar
sub
sbb
jo
mov
pop
xor
mov
or
fstp
jecxz
sub
xor
call
outs
sbb
jo
mov
ss
fdiv
(bad)
sti
inc
adc
mov
sbb
cdq
push
addr16
lods
leave
xchg
add
es
pop
dec
jno
xor
popa
repnz
push
or
sbb
nop
dec
mov
push
ss
mov
or
dec
(bad)
and
mov
sub
cmps
xor
outs
dec
(bad)
adc
push
cmps
call
cmps
ins
int3
xor
pusha
cmps
sub
mov
jns
fld
sub
jae
add
adc
(bad)
push
cmps
adc
xor
sub
jae
or
stos
les
cmps
sub
sbb
cmp
push
mov
cmps
es
cmps
push
mov
cmps
ss
cmps
push
int3
xor
mov
fstp
jmp
cli
mov
aam
movs
cmps
add
or
sub
imul
push
fwait
(bad)
mov
xor
mov
or
or
dec
rcr
push
sub
fwait
out
lds
lods
cmps
add
mov
retf
fsubr
shr
sub
(bad)
mov
mov
mov
ins
bound
fstp
push
cs
fwait
div
mov
mov
xor
shl
daa
dec
and
retf
ret
add
stos
ret
xor
ficom
cmps
cmp
jecxz
test
mov
push
xor
aam
sbb
jecxz
test
mov
push
aaa
out
cdq
jp
fist
arpl
adc
inc
test
pop
arpl
xor
retf
shr
inc
fwait
mov
je
stos
xor
pop
lea
jae
cli
int3
mov
xor
popa
enter
int3
or
xchg
mov
inc
int
cwde
push
ss
xor
es
cmp
cwde
mov
xor
fadd
xor
popa
mov
add
repz
xchg
(bad)
cmp
mov
push
ret
xchg
out
cmp
sahf
rcl
dec
cmp
sahf
ret
imul
pop
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
repz
sub
mov
stos
jae
inc
repz
imul
out
pop
bound
pop
mov
out
pop
popa
mov
pop
gs
lods
xor
arpl
test
cs
xor
call
out
ins
xor
fcmovne
xchg
fsubr
ret
xor
retf
pop
mov
out
in
xor
arpl
(bad)
fsubr
ret
xor
call
out
sbb
mov
test
add
int3
popf
cmp
ret
aaa
dec
call
out
pushf
xor
call
cs
cdq
div
mov
ss
pop
xor
loopne
pop
(bad)
retf
adc
cmp
loop
(bad)
cwde
lods
mov
fld
cwde
jecxz
xlat
in
sar
adc
and
xor
sbb
push
xor
adc
ins
cmp
sub
shl
inc
xchg
in
(bad)
pop
mov
dec
sub
sub
sbb
push
push
mov
mov
xchg
lea
push
es
jb
mov
mov
jecxz
dec
add
pop
or
cwde
movs
or
push
sub
popa
mov
adc
sub
adc
(bad)
push
cmp
ret
xchg
xchg
jp
gs
arpl
mov
data16
imul
pusha
imul
fs
mov
xchg
outs
mov
xchg
pop
mov
xchg
jle
gs
fist
ret
popa
mov
retf
sub
pop
(bad)
mov
xor
mov
bound
rcr
cdq
shl
sub
pop
out
ret
xchg
xchg
add
mov
or
retf
pop
imul
retf
sub
pop
(bad)
mov
mov
lea
bound
fcmovnu
push
shl
cs
div
push
loope
out
adc
pop
inc
in
mov
rep
in
mov
pusha
mov
push
cmp
(bad)
and
push
pop
push
les
add
mov
imul
pop
call
push
pushf
mov
loope
movs
sbb
outs
jmp
cs
mov
retf
xchg
cmp
arpl
xchg
(bad)
stos
xchg
add
loop
movs
or
sub
mov
dec
sub
retf
push
mov
push
loop
movs
or
imul
inc
rcr
cmp
(bad)
pop
sbb
push
or
pop
shl
inc
xchg
mov
jecxz
in
call
fimul
lods
fnstsw
fiadd
pop
sti
push
mov
arpl
cmp
bound
push
mov
pusha
mov
adc
pop
(bad)
lock
adc
jmp
cmps
pop
cmps
xor
cmp
mov
popa
mov
push
jae
or
(bad)
and
push
(bad)
adc
xor
xor
jae
or
or
sub
dec
(bad)
sbb
popf
adc
add
daa
test
adc
test
loopne
pop
cmp
pop
pmaxub
movs
xor
cmp
push
pmaxub
mov
div
pusha
push
outs
sbb
(bad)
int
add
mov
push
loope
shl
pop
cmp
jno
pusha
sbb
mov
mov
mov
push
mov
mov
pop
sbb
mov
mov
pop
adc
fstp
lahf
lods
adc
(bad)
icebp
nop
lods
add
fstp
push
mov
mov
lods
pop
adc
js
(bad)
xchg
sbb
ins
pop
xchg
ins
jnp
int3
mov
(bad)
ins
inc
in
or
lds
sub
dec
mov
xor
push
mov
int3
cwde
ins
mov
mov
xchg
mov
dec
fnstcw
(bad)
ret
xor
lock
in
adc
or
fisub
mov
gs
and
sbb
mov
ins
leave
js
jbe
outs
fimul
fidiv
sbb
mov
jecxz
pop
push
out
xor
fist
sub
in
xchg
sub
pushf
test
pop
ds
fimul
mov
push
mov
mov
lods
mov
arpl
movs
pop
ins
sub
sbb
(bad)
fisubr
mov
push
mov
mov
ins
mov
arpl
mov
ins
stos
ret
push
pop
cmp
int
mov
mov
in
mov
arpl
lods
fsubr
ret
push
pop
cmp
fidivr
mov
(bad)
mov
mov
sbb
jne
mov
mov
adc
into
sbb
ret
cwde
ins
nop
cmp
sbb
or
xor
inc
jo
ss
mov
sti
dec
fcmovb
out
lahf
jg
add
fldenv
jno
test
mov
pop
mov
loopne
ins
push
xchg
ins
jae
bound
scas
fst
jno
mov
sbb
loopne
ins
adc
arpl
pop
fild
out
fnstenv
jno
mov
cmp
in
cmp
fild
jge
arpl
ret
mov
xor
in
in
into
mov
dec
mov
lea
jnp
push
in
mov
mov
loope
jnp
push
mov
mov
fiadd
pop
lock
js
fimul
out
(bad)
dec
mov
arpl
jns
inc
mov
add
sub
adc
mov
(bad)
pop
cmp
ret
xchg
div
gs
rcl
dec
cmp
scas
ret
push
scas
shl
pop
mov
idiv
outs
ror
inc
mov
mul
outs
shr
push
mov
div
gs
rcr
dec
mov
imul
addr16
sar
out
sti
mov
fimul
mov
bound
ret
pop
push
shl
sub
mov
dec
bound
rcr
lahf
sar
sub
(bad)
mov
ds
(bad)
test
jge
pop
in
retf
fsubr
shl
sub
mov
in
mov
bound
fcmovnu
imul
ds
scas
jmp
sub
scas
loop
std
sbb
fld
mov
outs
loop
std
push
mov
outs
jecxz
std
push
dec
(bad)
loop
std
push
dec
fcomi
jo
sahf
(bad)
mov
add
or
in
lds
jnp
cs
jo
pop
mov
push
loop
mov
mov
jnp
outs
fucomi
jo
pop
(bad)
mov
aaa
loop
mov
(bad)
cmp
in
push
cmp
(bad)
cmp
shr
call
lods
mov
cmp
loope
inc
xchg
mov
cli
xchg
add
mov
(bad)
push
push
sbb
sbb
mov
test
sbb
push
mov
call
inc
xchg
(bad)
cmp
cwde
in
loop
xchg
out
loope
inc
sbb
cmp
jmp
mov
data16
popa
cmps
jecxz
cmp
jbe
cwde
jecxz
bound
mov
dec
inc
adc
mov
cmp
pushf
and
and
das
cmp
icebp
xchg
and
das
cmp
icebp
mov
or
and
scas
cmp
xchg
das
out
jo
xchg
(bad)
mov
add
ja
inc
js
push
mov
sbb
cwde
out
lds
push
cmp
mov
push
add
popa
mov
pop
out
lds
sbb
rcl
adc
lods
jbe
popa
lea
pop
out
lds
sbb
cmp
mov
rol
jbe
popa
mov
fsub
call
jbe
cli
mov
xor
jbe
popa
(bad)
arpl
jnp
and
out
lds
sbb
cmp
jno
xor
jbe
loope
arpl
inc
sbb
lds
sbb
cmp
jno
mov
push
mov
jbe
loope
arpl
addr16
lds
sbb
cmp
jno
mov
dec
mov
jbe
loope
arpl
push
sbb
lds
push
outs
cmp
jno
and
cld
cmp
(bad)
mov
fist
sti
mov
pushf
push
sbb
lods
inc
mov
push
inc
addr16
jmp
inc
mov
inc
mov
fwait
shl
ins
inc
xchg
mov
mov
addr16
push
pushf
popf
sbb
loope
addr16
push
jbe
mov
fs
popf
add
and
and
jecxz
or
icebp
cwde
mov
(bad)
cmp
xor
pop
sub
sbb
pushf
xor
sub
sbb
(bad)
fld
loope
ret
data16
ins
rcl
push
cmp
ins
ret
mov
jbe
out
shl
dec
mov
into
outs
mov
into
pop
mov
into
jle
out
shr
inc
mov
into
popa
mov
into
push
mov
into
jno
out
sar
out
cmps
mov
cmp
jb
bound
repz
jmp
cmp
xchg
into
adc
mov
or
jmp
sar
es
cmp
(bad)
into
sbb
dec
or
cs
in
sub
adc
pushf
cmp
bound
xor
lods
fsubr
mov
(bad)
rol
cmp
mov
jmp
pop
popf
add
xchg
jns
inc
pushf
xchg
sub
cwde
push
(bad)
jno
adc
pushf
mov
jmp
and
jbe
lds
addr16
cmp
into
cmp
rcr
jb
jecxz
xor
push
pushf
cdq
mov
ss
cmp
ret
cdq
mov
cmp
fcmovne
push
mov
into
xor
into
jae
mov
mov
xchg
mov
jne
jne
jmp
jmp
add
mov
scas
cmp
jo
inc
xchg
jmp
(bad)
mov
inc
lahf
stos
add
scas
inc
or
mov
nop
stos
sbb
mov
mov
stos
sbb
pop
adc
dec
scas
sub
stos
(bad)
fs
or
jno
sbb
aad
sub
dec
ja
popa
xchg
cwde
in
lds
out
fidiv
xlat
aad
daa
pop
popf
js
aad
cmps
pop
fnstsw
aad
addr16
mov
out
cmp
push
ret
cs
jo
loope
xlat
ds
jb
pushf
xchg
retf
scas
sbb
mov
pop
cmp
and
je
icebp
xchg
retf
mov
jb
pop
xchg
or
mov
rcl
call
rcl
sub
sbb
movs
cs
pop
push
sub
and
push
mov
adc
pop
leave
pop
jecxz
xchg
dec
sar
ss
mov
or
jbe
fdivrp
fstp
test
pop
cmp
out
retf
push
pop
or
fist
in
jbe
bound
(bad)
sub
jle
sub
mov
mov
or
push
loop
stos
or
aad
out
shl
dec
mov
(bad)
push
scas
push
pushf
jbe
loop
stos
or
int
out
sar
cs
mov
push
pop
jbe
loop
stos
or
fnstsw
push
das
outs
mov
(bad)
pop
scas
add
jbe
loop
imul
pop
ret
mov
xlat
sub
out
xor
and
mov
imul
fnsave
jae
mov
mul
(bad)
mov
inc
lahf
jnp
add
push
or
xlat
lock
jnp
btc
push
jb
mov
jnp
adc
cmp
mov
cmp
faddp
fs
xor
mov
jecxz
xor
jne
stos
cmp
out
or
bound
aad
in
shr
mov
(bad)
daa
fmul
cmps
fmul
fcmovu
mov
sub
out
ins
js
fisttp
rcr
mov
fisttp
aad
das
sahf
repz
into
ret
jmp
jl
loope
rcr
ret
bound
push
mov
ja
out
sub
out
sub
out
int3
(bad)
sub
pop
pusha
test
inc
pop
out
cs
or
push
mov
xchg
out
jb
jno
pusha
lods
mov
pop
out
scas
mov
or
leave
pop
xchg
out
jp
jno
pusha
stos
mov
fsubr
outs
(bad)
push
ja
jbe
pop
mov
fld
jno
pusha
scas
mov
fsubr
out
mov
femms
mov
xchg
out
jle
jno
loopne
jnp
(bad)
fadd
out
push
(bad)
or
or
inc
jno
cmp
pushf
jno
loopne
jnp
out
push
cmp
sahf
mov
jno
cmp
pop
jno
loopne
jnp
xlat
fmul
out
pop
(bad)
or
push
jno
mov
fdiv
loopne
jnp
neg
pop
mov
outs
pop
arpl
jbe
(bad)
(bad)
cwde
inc
test
js
out
push
mov
icebp
mov
adc
(bad)
js
lds
cmp
xchg
ja
pop
jl
mov
jnp
and
xchg
punpcklwd
and
mov
mov
retf
fcomp
pop
lds
aas
add
cmp
adc
loop
jno
(bad)
sbb
clc
adc
mov
leave
clc
xor
mov
jmp
iret
(bad)
fprem
sub
mov
(bad)
stc
clc
sbb
mov
vpsubb
mov
jecxz
loope
cld
imul
jno
(bad)
sbb
les
(bad)
inc
test
jg
ja
scas
jecxz
cld
or
sti
icebp
mov
lock
sbb
sbb
call
push
(bad)
jp
shr
sub
cmps
adc
mov
loope
inc
xchg
cmps
adc
cmp
call
push
add
push
js
push
lea
push
not
popa
aam
(bad)
cmp
imul
cmc
xor
mov
add
mov
in
cwde
jmp
jnp
xor
ror
repnz
bound
cmp
inc
test
sahf
lock
loope
iret
ds
repnz
xor
mov
iret
jns
js
adc
call
adc
(bad)
stos
push
pop
pop
repz
pop
outs
js
js
adc
pop
sahf
adc
neg
cmp
loope
(bad)
mov
sub
jnp
mov
jae
or
mov
sahf
fs
sbb
push
iret
jno
rep
pusha
mov
imul
push
push
jnp
mov
xchg
test
in
mov
jns
das
sbb
shl
mov
mov
sahf
adc
bound
in
in
shr
idiv
mov
push
lea
sbb
not
loop
cmps
push
pop
cmp
rcr
imul
int3
rol
lock
movs
cmps
sbb
in
jmp
into
jp
jno
rol
lock
loope
cmps
pop
xchg
cmp
mov
iret
adc
xor
lock
cmps
addr16
cmp
mov
iret
adc
jp
jno
xor
mov
inc
mov
add
and
mov
inc
mov
push
mov
xlat
shl
pop
inc
xchg
pop
fimul
rep
mov
out
push
push
mov
loope
out
ds
test
cmp
ficomp
xchg
mov
dec
hlt
xchg
stos
cmp
fimul
dec
repnz
loop
outs
adc
cwde
mov
(bad)
jnp
xor
pop
xchg
ss
mov
dec
cwde
jmp
or
pop
xor
fild
loope
rcl
ret
outs
cmp
in
shl
outs
push
sahf
mul
jecxz
outs
add
push
loop
outs
adc
push
jecxz
outs
or
xchg
loop
outs
sbb
xchg
jecxz
outs
add
sub
out
int3
ja
stc
js
pop
xor
test
outs
xor
js
mov
pop
mov
xor
xchg
arpl
xchg
pop
out
ret
xor
rcr
push
fidivr
lods
not
arpl
lea
ins
ret
xor
js
mov
fisttp
div
pop
mov
ret
aaa
jbe
jnp
rcr
mov
ds
div
arpl
sbb
sbb
push
js
jo
cmp
jmp
repnz
mov
inc
mov
ret
xor
js
jo
cmp
test
mov
addr16
ret
xor
js
jo
mov
pop
imul
push
mov
ret
outs
js
jo
mov
imul
mov
mov
scas
adc
push
push
sti
ins
sub
sbb
repz
inc
lahf
pop
int
pop
pop
jge
mov
inc
call
out
xor
stc
and
clc
fs
stc
mov
enter
stc
xchg
lock
sub
fs
jge
xor
cmp
loop
lds
sbb
cmc
movs
arpl
xor
mov
fstp
pop
cmps
sti
dec
pusha
xchg
and
cli
dec
popa
xchg
out
xor
sti
into
pusha
mov
sub
cli
into
loope
fistp
jmp
cmp
mov
lock
cmp
mov
or
clc
outs
jecxz
fistp
xchg
jge
lock
imul
repnz
call
xchg
icebp
xchg
scas
add
sti
dec
icebp
mov
icebp
sahf
scas
add
jl
cwde
out
stos
ret
xor
enter
mov
arpl
lea
imul
pop
xor
pop
mov
xlat
mov
mov
arpl
popf
pop
out
jmp
push
pop
aaa
ss
jp
leave
xlat
mov
mov
call
mov
jbe
ds
test
mov
mov
cmps
ret
pop
pop
sub
stc
mov
out
xor
or
cmp
push
stc
sbb
in
jae
mov
push
inc
jge
sbb
stc
jo
pop
ror
or
jge
jo
ja
cmps
jge
into
clc
fs
cmc
inc
jno
xchg
mov
mov
ret
push
pop
repnz
scas
clc
mov
stos
das
add
out
dec
ret
or
xor
xchg
mov
mov
jecxz
das
pop
idiv
out
retf
mov
cld
sti
repz
pop
sub
mov
and
stc
mov
(bad)
pop
add
call
int
or
push
sbb
scas
inc
(bad)
mov
or
jmp
in
mov
inc
leave
fild
push
dec
hlt
mov
adc
es
fcomi
test
add
fild
loop
rcl
stc
sti
xor
fisttp
hlt
punpckldq
ret
cwde
jecxz
rcr
lock
loope
(bad)
cmp
jmp
icebp
dec
loope
push
repz
loopne
jmp
lock
loope
(bad)
cmp
repnz
loopne
jmp
pop
icebp
das
loope
push
pop
repz
loopne
jmp
fdivp
scas
loope
(bad)
cmp
repnz
loopne
jmp
fdivp
outs
loope
push
fdivp
out
pusha
sahf
jg
repz
jnp
loopne
mov
pop
bound
xchg
cli
retf
aad
jg
add
ret
xchg
(bad)
push
repnz
pusha
mov
push
imul
pop
jmp
(bad)
cmp
(bad)
sti
sbb
(bad)
data16
repnz
mov
adc
jmp
sti
cmp
(bad)
outs
in
repnz
call
out
lahf
xchg
pop
pusha
mov
inc
cmp
das
(bad)
and
push
sti
dec
jno
pop
xchg
push
loopne
mov
cmp
iret
arpl
in
das
rcr
and
cli
mov
pop
mov
(bad)
adc
loop
mov
mov
jg
scas
cli
stos
jo
pop
(bad)
jmp
sbb
lock
loop
mov
div
(bad)
cmp
inc
fdiv
aaa
loope
mov
sub
xor
rol
or
rol
add
sub
aas
mov
sbb
or
popa
or
inc
xor
lds
xor
sbb
xor
sub
xchg
ror
data16
push
repz
mov
mov
ret
xor
mov
sbb
arpl
add
fadd
fadd
ss
or
loopne
shr
sbb
mov
add
js
jo
iret
pop
cs
shl
add
jb
sub
pop
ret
stos
sub
scas
pop
outs
loop
shr
add
jbe
fimul
fadd
mov
enter
add
pop
or
and
mov
pop
sbb
(bad)
mov
add
and
xchg
sub
mov
pop
sbb
(bad)
pop
sbb
and
mov
fcomp
push
mov
cmp
sub
mov
mov
mov
sbb
and
rol
push
fdiv
loopne
rol
cmp
lock
rol
inc
cmp
ret
cmp
nop
jo
and
jl
mov
add
adc
pop
mov
dec
and
push
add
jo
jo
xlat
add
mov
inc
sbb
shl
nop
cmp
fs
and
test
xor
js
aad
xchg
sub
dec
mov
and
cmp
out
cmp
(bad)
loopne
pop
inc
push
lock
add
add
fwait
sbb
faddp
push
lock
or
rol
mov
sbb
ret
push
add
dec
shl
sbb
in
or
or
cmps
add
xor
dec
dec
orps
mov
xor
(bad)
sbb
aaa
fadd
xor
test
fadd
fadd
fadd
xor
test
fadd
xor
cmp
jg
pop
outs
add
lock
outs
add
xor
daa
test
mov
jne
pop
mov
cld
mov
sub
pop
mov
push
dec
sub
or
and
pop
push
add
pop
sbb
push
lock
packsswb
ret
mov
sub
pop
adc
or
cmp
int
fs
or
ret
(bad)
loopne
ins
or
cmp
(bad)
scas
pusha
push
sahf
push
pushf
mov
in
pusha
test
add
mov
pop
xchg
les
mov
pop
and
push
pushf
or
cmps
adc
pusha
adc
cs
xor
pop
pop
or
loope
mov
xchg
or
pusha
adc
fadd
or
mov
sbb
popf
pusha
pop
out
push
mov
sti
rcr
jge
adc
inc
jne
add
shl
jmp
arpl
int
push
mov
(bad)
rcl
sbb
push
mov
dec
mov
ror
inc
mov
or
loope
sar
push
sub
cmp
xchg
dec
push
js
mov
leave
mov
(bad)
dec
or
push
pop
rol
cwde
push
fcmovb
mov
data16
xchg
cwde
adc
xor
push
scas
out
xchg
lock
dec
test
iret
test
ins
test
iret
test
lock
push
das
test
lock
lock
sbb
test
scas
test
lock
sbb
data16
outs
test
out
test
outs
call
xchg
xchg
jl
unpckhps
test
or
pop
adc
(bad)
loop
or
push
xchg
jb
andnps
test
sub
pop
adc
jg
ret
mov
adc
inc
dec
fcomp
cmp
push
sbb
ins
or
adc
call
ins
sub
clc
jg
sub
dec
xchg
and
leave
int
(bad)
jle
popf
cmp
jae
mov
pushf
xchg
cld
and
sub
pop
dec
mov
xchg
lods
lahf
xor
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
movs
(bad)
jnp
mov
repz
jmp
jl
repz
sub
int
adc
sub
pop
sub
out
loope
pop
cmp
out
loopne
pop
and
push
pop
xor
dec
pop
sub
pop
pop
cmp
inc
pop
and
xor
pop
out
icebp
and
in
jecxz
fiadd
fsubp
or
ds
jecxz
fimul
ds
loop
ficomp
mov
pop
or
repnz
cmps
lock
mov
outs
push
jg
out
aaa
outs
push
push
push
xor
jg
jecxz
xchg
xor
jg
adc
push
xor
jg
xchg
repz
xor
aaa
xor
mov
and
xor
ja
sub
mov
div
daa
jg
jae
wrmsr
das
call
or
(bad)
push
enter
dec
jmp
cmps
cld
jae
in
mov
stc
push
call
cld
sbb
mov
cld
jnp
repnz
push
into
jg
xchg
cld
daa
or
aas
mov
(bad)
sub
(bad)
cmp
(bad)
daa
push
out
popa
push
(bad)
aaa
push
out
cld
jecxz
jecxz
xor
icebp
call
aaa
pop
pop
fwait
(bad)
out
jno
test
pop
pop
(bad)
mov
push
pushf
sub
ret
sub
ret
sub
ret
sub
ret
sub
(bad)
(bad)
pop
sub
(bad)
in
push
pop
sub
vcmppd
sub
(bad)
cmc
ret
sub
int
and
sub
in
ret
sub
sub
std
ret
adc
loopne
loope
push
adc
xor
adc
loopne
loope
sahf
adc
cmp
adc
loopne
loope
pop
adc
xor
adc
loopne
loope
ficom
cmp
adc
loopne
loope
ds
ss
popa
inc
(bad)
mov
loop
popa
adc
es
popa
or
cmps
loop
popa
sbb
adc
jecxz
popa
push
(bad)
adc
test
inc
ss
cwde
sub
bound
add
pop
dec
adc
cwde
sbb
inc
xor
pusha
shr
fld
out
lds
adc
jl
adc
sbb
mov
or
add
sbb
xor
retf
push
mov
test
dec
test
pop
test
adc
sub
fidivr
xchg
or
mov
pop
push
or
mov
lea
mov
mov
add
or
mov
mov
mov
mov
or
test
in
adc
mov
cwde
ret
sbb
sbb
adc
pop
cwde
ret
add
pop
test
pop
pop
ret
sbb
adc
pop
pop
ret
cwde
mov
adc
push
dec
or
mov
lea
ret
or
xchg
inc
jno
clc
ret
and
test
adc
jo
dec
les
fcom
push
jo
dec
lds
je
adc
jo
enter
or
test
jb
push
enter
jg
add
adc
icebp
pop
xor
test
dec
rol
pop
fimul
cs
jo
mov
ret
inc
inc
ret
(bad)
addr16
test
mov
sub
xchg
loope
rol
sbb
mov
cmp
and
or
daa
or
pushf
data16
xor
ret
inc
int
imul
int
cmps
push
xor
(bad)
jmp
int3
bound
repz
lods
pop
rcr
dec
mov
add
stos
test
lods
mov
int
call
dec
mov
push
int
mov
fld
popw
inc
int
cli
xor
sub
push
(bad)
sbb
mov
add
call
into
mov
jae
gs
out
sub
lds
sbb
push
repz
lods
xlat
cmp
and
sbb
lds
sbb
repz
loope
popa
or
xchg
out
mov
mov
pop
cli
xlat
les
es
xor
dec
mov
xor
cmp
mov
jno
xor
imul
xchg
call
or
retf
cmp
sub
imul
inc
mov
mov
loop
or
fstp
cli
xlat
hlt
loope
cmps
pop
aaa
xor
mov
int
outs
imul
call
data16
xor
cmp
dec
loopne
data16
imul
mov
sbb
pop
push
loope
mov
mov
push
jecxz
cmp
ds
clc
movs
sub
addr16
or
or
xchg
loop
cmps
or
xor
clc
test
and
inc
push
lea
aam
pushf
mov
jecxz
cmc
cwde
mov
and
imul
in
ins
aas
cmps
imul
sbb
and
aam
arpl
mov
pop
in
cmp
imul
cmp
mov
push
cmp
mov
call
mov
je
xchg
push
aam
mov
jbe
gs
cmp
fld
test
cmp
ffree
jb
push
push
push
adc
lods
(bad)
push
popa
(bad)
neg
imul
jp
sbb
push
or
popa
mov
sbb
aaa
fsub
(bad)
int
fidivr
aam
pusha
xchg
not
mov
jge
pop
in
or
imul
fidiv
aam
loopne
not
xchg
(bad)
push
in
iret
aas
(bad)
and
push
jnp
cld
(bad)
mov
mov
cmp
xor
pop
jo
fisttp
shl
pop
mov
mov
ins
aaa
imul
fisttp
shl
jecxz
jbe
aaa
mov
mov
in
xor
inc
jo
cmp
ror
pop
fimul
cmp
dec
loop
jbe
(bad)
mov
js
popf
rcl
sahf
imul
pop
fiadd
xchg
jbe
scas
mov
js
pop
rcr
fisubr
lock
mov
jl
outs
loop
jbe
lahf
mov
clc
mov
cs
mov
sbb
(bad)
jecxz
mov
(bad)
aas
loop
mov
clc
mov
cmp
dec
xlat
mov
mov
arpl
lods
cwde
lods
imul
pop
cmp
xlat
mov
mov
arpl
mov
sbb
aas
out
push
xor
mov
ret
test
lea
fstp
call
cmps
fwait
inc
xchg
pop
mov
mov
outs
push
jge
cmp
mov
mov
and
adc
mov
pop
stos
pop
lds
fstp
xchg
jmp
mov
mov
xchg
mov
popa
mov
sbb
cmp
dec
enter
cmp
(bad)
jmp
mov
xchg
mov
movs
bound
jmp
ss
es
mov
inc
xchg
lea
in
mov
(bad)
je
fsubr
lds
push
pop
je
sbb
cdq
jo
shl
inc
je
sbb
mov
jecxz
aaa
(bad)
je
dec
call
jo
daa
jecxz
scas
add
je
pushf
aad
cmp
mov
mov
jecxz
scas
add
stos
ret
xor
pop
push
mov
mov
cmps
sar
lods
mov
pop
cmp
jmp
mov
mov
jecxz
scas
pop
(bad)
jne
js
jmp
push
pop
aas
sahf
jmp
mov
mov
jecxz
outs
add
jne
js
sbb
pop
fnstsw
fsubrp
bound
fwait
rol
and
jmp
mov
loop
outs
push
fbstp
scas
pop
ror
and
xchg
lock
mov
fistp
loop
outs
or
cmps
ffreep
js
es
lea
sbb
mov
sti
lahf
hlt
scas
inc
xor
das
cmps
jmp
xor
xchg
dec
(bad)
cli
js
shl
pusha
mov
adc
dec
cwde
stos
dec
(bad)
cmp
or
call
mov
jge
sbb
cdq
push
lahf
lea
jge
cmp
mov
mov
add
jp
inc
mov
dec
jp
retf
xchg
call
push
sar
push
aad
mov
pop
mov
aaa
xchg
jmp
lods
sar
mov
das
popa
xchg
pop
(bad)
push
or
call
mov
scas
bound
fsubr
jge
ss
mov
aas
mov
packsswb
mov
cs
cmp
arpl
mov
and
jmp
lea
cli
sbb
iret
loop
jle
xchg
repz
and
mov
dec
call
xchg
jne
(bad)
outs
loopne
jle
addr16
pop
cmp
push
cs
xchg
jge
(bad)
pop
loopne
(bad)
adc
inc
mov
std
or
dec
jno
jg
pop
cli
jae
(bad)
pop
loopne
(bad)
adc
push
mov
std
or
push
jg
inc
cli
jnp
(bad)
aas
loopne
(bad)
adc
dec
js
jg
jae
or
pop
icebp
push
inc
(bad)
jg
(bad)
(bad)
adc
pop
js
inc
jnp
(bad)
call
xchg
mov
cmp
call
mov
icebp
add
xlat
(bad)
lock
aas
sbb
sbb
xor
stos
lahf
lds
std
sbb
sbb
xor
mov
or
popa
xchg
popa
sbb
pop
lds
cmps
sbb
xor
mov
sbb
popa
xchg
popa
sbb
inc
arpl
sub
xchg
sbb
popa
add
xchg
sbb
shl
inc
fwait
and
or
pop
ins
adc
jmp
mov
xchg
rol
xchg
push
or
push
or
arpl
movntps
push
sbb
xchg
pusha
mov
test
sub
sbb
ficom
or
push
pusha
xchg
mov
fsub
(bad)
push
inc
or
fst
sbb
xor
xchg
mov
fsub
(bad)
pop
inc
mov
dec
lds
inc
sbb
enter
xchg
xor
test
sbb
or
cmp
lds
in
cmp
shr
daa
dec
sbb
mov
push
pushf
xor
loop
mov
mov
ret
and
sbb
stos
xchg
pop
xor
or
mov
popa
add
cwde
ret
xor
sbb
fbstp
mov
xchg
cmp
int3
jecxz
popa
add
pop
ret
xor
mov
pop
xchg
xchg
popa
add
fadd
pop
ret
ficomp
cli
cwde
cli
out
or
rol
sbb
das
xchg
jl
mov
fwait
popa
or
or
std
ffreep
push
and
sbb
mov
int3
bound
cwde
pusha
pop
rol
sbb
sub
adc
call
popa
fadd
dec
jecxz
sbb
cmp
sbb
sahf
jno
or
imul
icebp
or
dec
shl
inc
fwait
icebp
or
(bad)
jae
sbb
mov
js
outs
jecxz
mov
imul
outs
push
xor
mov
jecxz
xchg
xor
sbb
mov
pop
outs
jl
or
sbb
fbstp
(bad)
dec
lods
xor
lods
icebp
sbb
mov
(bad)
clc
iret
mov
aas
jecxz
dec
or
aaa
xor
cmovge
js
push
arpl
sahf
cwde
(bad)
aam
mov
push
cmp
jne
test
js
jmp
cli
lock
aam
ja
add
or
dec
ret
clc
fs
shr
mov
xor
outs
cmps
sbb
xor
lahf
cmps
sub
xor
mov
push
jg
mov
imul
cdq
pop
xor
mov
dec
xor
arpl
stos
cwde
bound
push
repz
mov
int3
xor
arpl
mov
pop
repz
cmpxchg
jl
cmp
out
aam
jmp
push
add
fwait
shl
inc
xchg
mov
call
outs
inc
lahf
mov
retf
sub
ja
enter
mov
xchg
call
out
lods
xor
popa
movs
jns
stos
int3
and
push
lds
repz
call
repz
cwde
daa
mov
cmp
dec
out
ins
ss
pusha
mov
pop
int
fsub
(bad)
jbe
add
pop
mov
mov
in
ss
pusha
(bad)
jns
jnp
imul
pop
(bad)
jle
push
push
cwde
aaa
jno
mov
sbb
out
loopne
cmp
jmp
jecxz
int
cmp
ret
xor
int3
sub
popa
dec
lds
sbb
shl
pushf
xor
addr16
cmp
out
cmp
jae
cs
or
sub
mov
stos
cmp
lea
fld
cdq
sbb
mov
fdiv
mov
pop
ret
mov
adc
xchg
les
jae
sahf
fwait
retf
lock
xchg
out
mov
mov
js
scas
sar
sub
rcr
inc
jmp
push
jl
mov
mov
or
push
shl
daa
mov
fmul
xor
loop
mov
clc
imul
aas
repz
pop
xchg
fidiv
mov
xchg
adc
bound
jecxz
bound
shr
cwde
outs
cdq
ret
xor
pop
data16
xor
mov
arpl
mov
pop
inc
shl
sub
mov
retf
push
fisubr
call
mov
lds
push
mov
call
pop
jle
mov
popa
mov
mov
xchg
sub
pop
dec
(bad)
jb
or
push
mov
xchg
xchg
je
mov
pusha
lea
pop
addr16
(bad)
jp
push
ss
jb
rcl
ins
mov
fsub
bound
and
mov
scas
test
(bad)
fnclex
ret
xor
pop
(bad)
adc
ret
add
xchg
mov
push
mov
mov
popa
int3
rcl
dec
call
loopne
adc
sbb
pop
retf
or
pop
inc
jno
xor
mov
jo
xor
mov
loope
gs
sub
mov
retf
sbb
pop
out
retf
mov
fist
loope
gs
sub
mov
retf
sbb
pop
(bad)
icebp
enter
xchg
dec
cmp
ins
loope
gs
sub
js
fld
or
push
pop
pop
div
retf
xlat
xchg
inc
mov
in
out
sub
js
cmp
pop
retf
sbb
pop
into
icebp
leave
jb
iret
xchg
dec
jl
pop
loope
in
fild
clc
outs
mov
jle
out
icebp
retf
repnz
inc
cld
mov
loope
in
jmp
sbb
lds
sbb
pop
fbstp
sar
or
popa
mov
sbb
aas
cwde
data16
lds
pop
jecxz
test
lods
icebp
cwde
gs
shr
pop
(bad)
adc
fistp
ret
cmp
add
pop
daa
push
mov
mov
jmp
sbb
mov
jmp
cmp
mov
sbb
(bad)
adc
mov
mov
mov
or
mov
mov
mov
cli
mov
popa
cdq
mov
retf
lods
add
sbb
push
pop
xchg
(bad)
push
lods
mov
popa
popf
jne
jmp
xor
pusha
mov
inc
and
pop
mov
(bad)
aad
stos
aad
ins
push
adc
mov
cmps
aad
pop
push
pop
jbe
mov
stos
mov
pop
neg
sbb
retf
sub
xchg
sbb
xchg
loop
mov
(bad)
lods
in
mov
loopne
mov
daa
lods
push
cmp
(bad)
imul
(bad)
pop
xchg
jp
mov
loopne
mov
pop
lods
dec
mov
imul
push
lds
jmp
ret
fiadd
mov
loope
mov
ja
sub
cmp
fcomi
rcr
xchg
dec
cmp
jbe
mov
sbb
cmp
xor
sahf
pop
sti
icebp
ret
xchg
(bad)
inc
mov
jne
outs
lods
and
sbb
ficomp
icebp
rcr
inc
jmp
ds
daa
icebp
fnstcw
test
(bad)
imul
fild
(bad)
dec
jmp
jle
pop
icebp
fstp
cld
mov
loopne
jne
jecxz
imul
pop
mov
xor
mov
leave
mov
dec
mov
xor
movs
(bad)
xor
ss
inc
int3
mov
popa
cmps
ins
sbb
sbb
sbb
sbb
fcmovb
xor
push
ret
add
add
mov
aam
cmps
push
outs
fwait
inc
mov
pop
mov
out
data16
inc
xchg
pop
mov
sub
sub
mov
push
xchg
ins
imul
(bad)
mov
mov
and
sub
pop
push
shl
cs
fcomi
mov
mov
xchg
mov
lods
mov
bound
(bad)
pop
imul
cmp
sub
fcmovne
mov
jbe
lea
bound
xlat
fsubr
shl
sub
ret
jbe
jg
mov
add
jnp
push
(bad)
neg
pop
mov
test
mov
xchg
ins
sti
ret
aaa
mov
jle
icebp
pop
jno
into
jmp
fldcw
ret
xchg
mov
pushf
mov
loope
lods
push
ins
or
cmp
into
fistp
mov
loope
lods
sbb
push
les
mov
fwait
mov
fdiv
pop
ja
add
fist
out
fild
xchg
loope
ins
sbb
ins
xor
adc
ins
push
js
fwait
(bad)
dec
fisttp
fldenv
fidiv
xchg
mov
mov
ins
adc
ins
dec
clc
pusha
pop
mov
fst
fnstenv
jl
ins
loopne
ins
adc
ins
pop
clc
popa
fcmovnb
dec
fisttp
jle
jbe
(bad)
cld
mov
loopne
in
adc
in
cmc
(bad)
dec
cmp
outs
(bad)
fs
cmps
fcomp
aad
xchg
jbe
mov
pusha
xchg
cwde
gs
(bad)
ins
jnp
out
jnp
xlat
fiadd
mov
mov
jge
cmc
mul
fiadd
fs
inc
mov
ins
div
fsub
mov
pusha
mov
adc
imul
adc
shr
mov
mov
xchg
pop
push
mov
mov
sti
xor
mov
lods
mov
arpl
fwait
pop
arpl
ret
ss
fnstenv
fidivr
ins
mov
arpl
xchg
bound
sub
fstp
sbb
aaa
bound
int
arpl
pop
jnp
neg
(bad)
test
mov
loop
mov
cmp
rcl
mov
sti
jo
fimul
fadd
jno
test
popa
pushf
mov
loopne
jge
addr16
arpl
addr16
(bad)
jns
or
in
adc
sti
adc
(bad)
stos
neg
mov
loope
jge
aaa
in
or
sti
adc
xchg
jno
mov
fdiv
sbb
push
push
push
(bad)
cmps
test
cmp
js
dec
shr
sub
shl
(bad)
sahf
mov
addr16
cmp
clc
push
cs
lock
scas
jbe
fucomip
pop
jl
jmp
ret
outs
les
or
fcomi
(bad)
out
rcr
(bad)
in
lds
out
arpl
adc
dec
jbe
pusha
mov
test
sub
push
xchg
push
pusha
mov
adc
push
cwde
jmp
(bad)
cmp
or
jo
mov
dec
shl
push
ins
mov
je
cmp
in
ret
aaa
mov
jp
out
inc
leave
ror
sbb
sbb
mov
xor
jae
popa
mov
xor
adc
cwde
(bad)
pop
(bad)
or
cmp
fidiv
xchg
sub
xchg
arpl
fwait
sbb
(bad)
push
(bad)
or
mov
sbb
ins
pusha
xchg
arpl
mov
fadd
pop
(bad)
push
idiv
jbe
fcomip
std
dec
cli
ja
loopne
jecxz
xchg
cmp
mov
jg
cmp
cmp
jo
xchg
mov
mov
cmp
xchg
mov
movs
loope
and
jmp
les
inc
push
into
cmp
mov
loope
mov
scas
cmp
ret
mov
push
adc
sub
in
loope
ret
cmp
mov
loope
jge
mov
push
pop
push
cmp
jb
js
sub
adc
dec
sbb
cmp
xchg
loop
mov
icebp
hlt
out
call
fidivr
push
icebp
(bad)
xor
mov
and
sbb
(bad)
addr16
or
sbb
clc
jmp
cmp
lahf
mov
jb
loope
arpl
jg
or
jmp
les
(bad)
adc
cmp
or
push
dec
je
popa
xchg
jae
xchg
popf
sbb
out
cmps
cmp
sbb
pop
int3
je
popa
xchg
jae
mov
pop
cwde
jecxz
les
out
(bad)
mov
jns
xor
mov
xor
cmp
shr
mov
sub
scas
shl
mov
mov
mov
repz
addr16
mov
mov
or
cmp
mov
stc
mov
into
das
lods
jo
arpl
mov
sbb
mov
jmp
or
dec
les
out
push
inc
mov
or
bound
push
mov
into
in
into
pop
in
jo
popa
cmps
jae
mov
pop
les
out
idiv
xchg
mov
mov
sbb
scas
loope
jae
xchg
adc
push
mov
mov
int3
fsincos
scas
cld
xchg
mov
arpl
jle
jo
loopne
jae
cmps
pushf
inc
cmp
sbb
sbb
or
cmp
into
cmp
jo
jo
cmp
jbe
test
out
aam
stos
push
(bad)
imul
cmp
loope
loopne
rol
cmp
jecxz
(bad)
pop
cmps
sbb
pushf
and
cmp
loopne
lock
jecxz
mov
(bad)
popf
and
sub
push
icebp
int3
pop
mov
into
xor
add
lods
ret
xor
into
pop
mov
into
cmp
jecxz
mov
lahf
pushf
(bad)
clc
in
ins
ret
xor
out
lods
shl
jle
jmp
rcr
pop
into
push
cld
jbe
loop
mov
jg
int
out
sar
sub
mov
mov
jne
mov
or
fstp
push
das
cmps
mov
(bad)
cdq
scas
add
jb
bound
ret
cwde
jmp
sar
push
mov
mov
imul
scas
dec
xor
cmps
shl
call
pop
je
out
fdiv
mov
push
jb
mov
xlat
sub
(bad)
push
jne
pusha
test
pop
pop
out
fcmovb
or
fidivr
stos
pop
sbb
fcmovb
sbb
push
(bad)
mov
xor
pop
ins
jo
popa
mov
pop
fsubr
cmp
push
xlat
adc
jne
in
scas
push
in
jo
popa
cmps
jmp
mov
mov
idiv
cmp
pop
sbb
fucom
mov
(bad)
jp
adc
adc
cmc
and
push
mov
mov
jge
mov
or
fistp
jmp
sar
das
into
mov
out
jg
cmp
mov
mov
scas
and
jne
jecxz
sub
loope
ret
dec
push
cmp
xor
xchg
mov
scas
sub
jne
jecxz
sub
neg
js
retf
push
add
mov
icebp
les
iret
pop
es
pop
lock
dec
push
pop
jnp
xchg
stos
pop
scas
pop
add
sbb
pop
xlat
adc
mov
or
push
jl
(bad)
loope
imul
xor
loopne
imul
pop
push
clc
out
call
data16
retf
xor
cld
jno
loopne
imul
pop
dec
sbb
mov
inc
sub
inc
imul
sbb
inc
pop
cwde
push
mov
jmp
mov
cdq
inc
jnp
push
mov
fld
cwde
push
je
mov
je
add
popf
mov
inc
out
sub
inc
push
shl
push
je
mov
bound
sbb
sub
inc
pop
shl
dec
inc
dec
sub
cmp
xchg
inc
mov
sbb
lods
call
mov
call
(bad)
icebp
fbstp
ja
sar
adc
scas
inc
rcr
ds
dec
out
jp
fisttp
nop
mov
stos
out
push
sub
mov
cdq
mov
pop
loope
ror
push
mov
lea
mul
mov
fsub
push
rol
ss
mov
(bad)
bound
jecxz
loope
popa
cmps
jnp
mov
sahf
ret
xor
mov
mov
out
cmp
iret
jecxz
jnp
xchg
mov
in
pop
ret
xor
mov
mov
adc
sbb
cmp
jmp
lds
neg
into
mov
or
sbb
cmp
fld
jne
loope
mov
mov
ja
outs
mov
cmp
ja
sahf
mov
js
out
lds
pop
push
mov
and
inc
cmp
psraw
and
push
lds
sbb
(bad)
icebp
ficomp
fidivr
test
out
imul
lahf
fdiv
in
sahf
(bad)
pop
test
int
test
out
gs
jo
loopne
jnp
mov
pop
(bad)
pop
test
iret
mov
mov
in
pusha
and
cmp
(bad)
fs
add
push
xchg
(bad)
fbstp
sahf
pop
dec
not
popa
xchg
cwde
in
les
out
call
push
sub
mov
loopne
inc
lods
cmps
add
sahf
dec
xor
mov
mov
je
cli
shl
jmp
mov
xchg
out
inc
leave
xor
cmp
sbb
mov
cdq
rcl
xchg
jns
mov
xor
hlt
int3
bound
repz
jecxz
rcr
(bad)
jns
mov
mov
or
lods
bound
jmp
loop
rcl
mov
mov
fnsave
in
hlt
and
sar
dec
fsub
dec
(bad)
pop
dec
or
jns
mov
xchg
xchg
sahf
je
hlt
fs
daa
adc
leave
(bad)
push
dec
push
mov
jno
xchg
xchg
dec
add
add
hlt
push
imul
into
arpl
jns
add
cmp
pop
hlt
adc
xchg
(bad)
(bad)
retf
push
adc
ds
cmc
dec
mov
push
sbb
adc
adc
repnz
in
sub
sbb
retf
push
cmp
push
loope
cmps
sbb
test
sahf
jp
shr
(bad)
and
push
mov
cmps
sbb
in
jmp
fidivr
icebp
into
rol
lock
loope
cmps
pop
lahf
cmp
clc
in
sbb
pop
iret
adc
xor
lock
cmps
addr16
cmp
cld
test
adc
push
clc
out
(bad)
cmp
jecxz
pop
dec
adc
xor
(bad)
and
add
xchg
xor
(bad)
xor
add
adc
xor
(bad)
sub
add
mov
push
fadd
cmp
pop
or
pop
adc
out
jg
mov
pop
(bad)
loop
call
shl
mov
cwde
test
bound
mov
push
hlt
mov
mov
sub
bound
inc
inc
int3
inc
push
int3
rcl
retf
les
pop
or
aam
xchg
test
push
mov
or
mov
lods
pop
sbb
push
sub
ror
mov
fild
lds
in
adc
sub
fsub
bound
pop
cmp
mov
fsubr
push
loopne
cmp
mov
cmp
loopne
cmp
mov
cmp
(bad)
xor
dec
loopne
cmp
mov
cmp
mov
repz
cs
mov
cs
mov
mov
scas
mov
mov
mov
outs
mov
mov
mov
out
mov
mov
js
xchg
adc
mov
js
sahf
loopne
js
cmps
loop
sahf
mov
js
pop
loopne
js
xchg
loop
pop
mov
js
fsubp
lea
mov
sbb
das
ds
clc
mov
iret
clc
sub
loopne
clc
mov
out
clc
cs
xchg
mov
(bad)
sub
mov
jno
inc
(bad)
fidivr
mul
pusha
xor
adc
lea
ja
push
mov
ret
xor
jnp
xor
cmp
repnz
arpl
mov
out
xor
js
push
lock
mov
out
cmp
mov
mov
out
cmp
ds
mul
ja
jge
and
mov
cmp
fidiv
mov
pusha
cdq
ja
retf
mov
mov
jmp
mov
pop
adc
js
pop
jmp
popa
popf
xlat
xor
mov
scas
mov
pop
pop
mov
and
out
shl
cmp
repnz
bound
in
jmp
sar
and
rcr
ficomp
sbb
(bad)
loop
mov
inc
mov
shl
and
ins
(bad)
or
mov
mov
lds
sbb
(bad)
fild
div
loope
mov
pop
mov
lds
sbb
fild
div
xchg
mov
outs
pop
out
js
jno
cmp
test
bsr
js
sbb
sahf
js
icebp
aam
ret
xor
add
jnp
icebp
ret
xchg
fisubr
repnz
loopne
ja
outs
mov
(bad)
cmp
add
jnp
icebp
sar
repnz
loopne
ja
pop
mov
(bad)
aaa
out
push
mov
mov
cld
repnz
std
sbb
jnp
icebp
(bad)
mov
cld
rep
popa
pushf
outs
sbb
jge
cwde
loopne
lds
es
div
fnstenv
sub
popa
call
loope
lds
data16
into
xor
ja
cmp
popa
sahf
out
sbb
jl
sub
outs
push
jmp
inc
mov
pop
xor
push
shl
jnp
fwait
out
sbb
pop
mov
test
ds
bnd
in
sti
(bad)
adc
jbe
(bad)
push
cmc
lds
gs
bound
leave
pop
in
shr
(bad)
clc
shl
mov
bound
(bad)
in
shl
mov
repnz
push
sub
fstp
in
lock
cs
or
cmp
or
sti
jge
cmp
sbb
inc
fisttp
push
stc
inc
jno
aaa
xchg
mov
jo
aaa
and
cmps
jo
aaa
lea
int
mov
push
addr16
cmp
pop
sar
and
sti
xchg
jo
mov
mov
loop
outs
or
jmp
sti
mov
ret
mov
fwait
mov
loop
outs
emms
jl
mov
fbld
out
sti
mov
shl
mov
loop
out
or
jl
js
mov
sahf
sti
scas
lock
xchg
mov
loop
out
push
outs
jl
js
jnp
cmp
and
sti
sahf
lock
(bad)
mov
loop
out
or
jmp
sti
mov
lahf
mov
pop
pop
lock
(bad)
daa
out
(bad)
out
stc
lahf
mov
ds
(bad)
stc
and
loopne
rol
cld
or
sti
push
dec
icebp
xchg
bound
in
out
scas
ror
data16
stos
xor
pop
(bad)
fsin
sbb
icebp
xlat
bound
cmc
pop
loopne
inc
rcr
pop
jg
jmp
leave
fisttp
cld
in
call
fisttp
sti
mov
iret
fisttp
jg
xchg
clc
pop
xor
pop
inc
lds
test
and
pop
lds
sbb
(bad)
mov
pop
ret
sub
add
sti
daa
mov
aas
test
iret
pusha
mov
jae
call
add
sti
pop
mov
mov
ins
repz
pusha
mov
push
inc
call
xlat
jmp
or
(bad)
pop
xchg
aaa
pusha
mov
dec
cmp
outs
(bad)
and
push
sti
pop
jno
fild
repz
mov
cs
lock
movs
mov
cmp
out
ret
sbb
into
cli
pop
jo
aas
mov
(bad)
and
jecxz
jg
xchg
cld
mov
adc
arpl
jmp
clc
cmps
jo
aas
lea
sbb
test
mov
ja
repz
jmp
push
clc
xchg
lock
cmp
scas
loop
jg
dec
std
jmp
out
shl
pop
clc
mov
sar
mov
jg
outs
std
sti
js
aas
sar
ds
jmp
call
imul
outs
shl
and
sti
fwait
lock
scas
(bad)
push
jl
mov
mov
in
clc
jmp
daa
jle
mov
mov
mul
aam
icebp
push
aas
es
add
xor
leave
shl
cmps
dec
and
xor
jmp
xor
xchg
xor
les
jae
imul
call
push
mov
add
movs
inc
xor
dec
push
lods
mov
mov
imul
pop
call
jbe
xchg
jbe
inc
fcmovb
nop
mov
mov
je
movs
push
dec
ds
dec
mov
cs
test
push
add
lea
xor
mov
or
dec
lods
pop
das
mov
adc
lea
ss
popf
fsubr
lods
push
movzx
fsubr
cmc
popa
xchg
(bad)
popf
rol
jbe
sbb
or
mov
mov
xor
push
or
movs
or
es
call
sbb
xor
int
test
xchg
rol
dec
dec
mov
sub
mov
stos
cmp
lods
loope
mov
mov
push
cs
fwait
mov
mov
stos
ror
scas
dec
or
das
and
fwait
push
xor
sub
xchg
xchg
sbb
xchg
test
cmp
in
mov
dec
add
hlt
js
sbb
dec
xor
mov
rcr
xchg
pop
fimul
clc
and
dec
repnz
and
mov
stos
push
sub
fbld
aas
movs
push
cld
xchg
retf
sub
pop
test
cld
xchg
stos
xor
push
(bad)
icebp
sbb
bound
imul
inc
sub
ror
or
mov
cwde
sbb
das
out
cli
xor
ror
add
xor
mov
sub
or
or
cmp
test
sbb
sbb
mov
xor
add
pop
(bad)
mov
or
mov
xchg
xor
pusha
adc
pop
pop
sbb
(bad)
mov
jbe
and
std
dec
cli
paddb
loopne
fwait
add
adc
cmp
add
mov
and
push
and
adc
fiadd
test
add
jecxz
and
xchg
mov
rol
mov
xor
shl
inc
ror
sub
sbb
xor
mov
cs
mov
inc
or
add
scas
pop
push
fmul
xchg
loop
mov
icebp
hlt
pop
call
out
push
push
jno
xor
mov
popa
pusha
adc
add
sbb
(bad)
xchg
inc
or
add
js
cwde
(bad)
repz
cmps
icebp
xor
adc
mov
pusha
push
outs
add
js
pop
(bad)
sti
rcl
add
icebp
xor
jl
lods
loope
pusha
sbb
push
fadd
test
icebp
xor
cld
push
in
loope
pusha
pop
jg
pop
clc
pop
cmp
cmp
or
in
dec
nop
dec
xor
lds
or
in
dec
xchg
das
xor
les
or
in
int3
nop
outs
xor
lds
push
mov
jnp
xchg
pop
xor
les
or
in
adc
pop
aam
scas
test
(bad)
sub
mov
mov
stc
or
pop
sub
jg
sub
std
or
retf
icebp
sub
or
retf
mov
(bad)
daa
sar
inc
push
sahf
les
or
in
sub
addr16
sahf
lds
push
stos
in
lods
xchg
pop
mov
pop
les
or
in
lods
xchg
push
mov
pop
lds
or
xchg
aaa
mov
faddp
push
jns
fnsetpm(287
ins
ins
xchg
jnp
xchg
(bad)
in
in
xchg
sti
mov
push
shr
jnp
and
xchg
xchg
jns
pop
in
sbb
(bad)
jno
mov
mov
and
inc
and
retf
pop
sbb
cmc
sbb
jo
mov
xchg
ins
ret
imul
addr16
pushf
xchg
fnstsw
das
mov
xchg
jo
xchg
jno
rcl
imul
enter
xchg
jecxz
pop
sbb
push
mov
pop
cmp
sub
sub
jecxz
fadd
enter
aaa
jecxz
pop
ins
mov
in
mov
scas
(bad)
imul
xchg
fwait
lock
outs
(bad)
jnp
add
xchg
fcomi
dec
outs
(bad)
addr16
jl
mov
ja
pop
aas
in
cld
xchg
sti
lock
out
(bad)
outs
jns
jg
inc
cld
xchg
xchg
dec
push
(bad)
mov
inc
xor
cmp
or
xor
cmp
or
sbb
xor
adc
add
cmp
inc
int3
or
sbb
sub
add
push
sbb
jo
(bad)
ror
fadd
jo
sbb
push
jo
mov
mov
jo
movs
loopne
retf
sub
out
popa
sub
aad
and
js
in
adc
or
and
sbb
and
cs
cmc
rcr
or
bound
push
fwait
xor
sbb
rcl
lock
jg
jg
test
lock
adc
pop
test
aaa
clc
test
outs
in
paddd
inc
lock
pop
cmp
mov
jg
push
inc
or
sbb
pusha
adc
dec
ror
jo
cwde
mov
ror
data16
xor
out
fnstcw
pop
int3
rol
jo
pop
or
add
pop
pop
or
(bad)
cmc
mov
fmul
jo
fadd
(bad)
mov
loopne
out
push
pop
jno
cmp
mov
popa
jo
pop
(bad)
xchg
pusha
or
adc
push
pushf
(bad)
repz
pop
add
icebp
xor
adc
mov
jo
outs
or
pop
pop
(bad)
sti
loopne
ds
icebp
xor
jl
scas
loope
jo
pop
sbb
push
fadd
mul
push
jle
mov
xor
cld
push
out
loope
jo
jg
pop
clc
pop
cmp
mov
cmp
test
lds
(bad)
xchg
xchg
or
les
(bad)
mov
lds
(bad)
pushf
xchg
pop
int3
sub
daa
sub
jns
mov
scas
test
jns
arpl
cmp
repnz
jl
stos
in
pop
call
or
xchg
cld
outs
pushf
sub
inc
push
enter
or
and
lds
cli
inc
and
dec
inc
movs
sbb
xchg
mov
push
and
sbb
inc
xor
stos
push
sbb
es
mov
inc
lods
or
sbb
fcomp
push
cmps
push
sbb
xchg
mov
aam
lods
mov
popa
jnp
sbb
inc
cmp
scas
push
pop
jbe
cli
mov
xor
mov
or
pop
inc
and
sbb
lds
(bad)
jno
adc
rcl
add
test
jno
xor
mov
xor
test
xor
push
mov
jecxz
push
cmp
pop
ret
xor
test
xor
dec
dec
test
push
inc
mov
push
stos
ret
cmc
push
cmp
xor
mov
fmul
xor
ja
lods
mov
push
cmp
test
lock
mov
cs
jne
dec
test
dec
inc
mov
repz
aas
pop
test
lock
push
mov
jecxz
push
js
sbb
sti
sar
test
sbb
xchg
scas
mov
loop
push
clc
sbb
scas
shl
jle
xchg
lock
mov
mov
lods
bound
jecxz
jmp
adc
rol
es
sub
sbb
pop
js
rol
sti
cwde
adc
ror
and
jmp
call
xchg
sbb
and
xchg
add
lods
test
mov
fmul
ret
or
sub
(bad)
ret
sbb
inc
ja
pop
(bad)
cli
ret
test
dec
js
inc
loope
push
ret
xchg
mov
sbb
mov
add
xchg
mov
cmp
xchg
loope
lods
or
pusha
jne
push
imul
pop
sbb
(bad)
xchg
mov
mov
ins
or
pop
ret
sbb
mov
push
mov
aaa
mov
mov
in
or
pusha
ja
pop
jnp
jnp
sbb
(bad)
mov
(bad)
and
jmp
pop
sbb
xlat
loope
mov
cmp
outs
les
fwait
xor
outs
ror
jo
fmul
or
ins
mov
cmp
out
rol
jo
fmul
or
loop
js
xlat
ret
push
push
ror
jo
cmp
fndisi(8087
sbb
test
jo
cmp
jnp
sub
cmovg
inc
js
movnti
jecxz
cmp
test
lock
mov
and
inc
js
das
ret
stos
js
pop
ret
jmp
cmp
test
lock
mov
js
pop
ret
or
pop
dec
(bad)
out
adc
pushf
sub
jl
cmps
loope
cmp
adc
push
inc
jg
pop
mov
xor
rol
mov
xchg
adc
dec
push
sub
cmps
fdiv
pop
jno
xchg
ret
sbb
and
sub
int3
push
and
push
fs
dec
push
push
inc
test
adc
sub
sbb
push
push
mov
push
test
dec
xor
xchg
pop
hlt
sub
sub
imul
ror
movs
sbb
xchg
dec
sub
mov
or
lods
push
cli
mov
jmp
imul
pop
sbb
push
gs
xchg
push
ins
push
(bad)
mov
sbb
push
and
mov
xchg
fsubr
lea
mov
lods
int3
popa
(bad)
xor
sub
xor
sub
mov
mov
fwait
cmp
(bad)
or
daa
xchg
pop
pushf
push
mov
bswap
sub
pushf
adc
sub
mov
xchg
test
dec
xor
movs
loop
xchg
xchg
dec
cmp
sbb
xchg
test
dec
ss
sub
mov
xchg
xchg
dec
add
sub
push
sub
push
hlt
js
sbb
inc
xor
test
xchg
mov
das
adc
pop
sub
js
mov
inc
icebp
loope
and
popf
and
mov
or
adc
lahf
xchg
push
jl
retf
jmp
pop
fist
icebp
push
sbb
das
sbb
inc
icebp
push
sbb
aas
gs
and
mov
adc
and
adc
(bad)
in
or
inc
xor
jns
(bad)
sub
inc
adc
and
adc
or
inc
push
xor
mov
jns
jne
mov
fld
or
xchg
ins
xor
jbe
adc
inc
dec
fs
xchg
jge
inc
push
rcl
adc
dec
rcl
cmp
jb
jb
sbb
and
sbb
inc
xor
sbb
fsub
in
sub
neg
jns
stos
enter
sahf
mov
repnz
mov
sbb
out
fcomp
stc
shl
mov
repnz
cld
bound
(bad)
and
inc
call
pusha
ja
adc
jecxz
hlt
pop
mov
fs
and
ror
push
inc
data16
xor
(bad)
int3
jecxz
fs
and
inc
sbb
and
cmp
sbb
inc
(bad)
jno
mov
jae
dec
pushf
(bad)
ins
loope
sbb
and
ds
mov
jecxz
add
cmp
xor
inc
jo
xor
mov
xchg
or
mov
inc
sub
jp
mov
icebp
cmp
xchg
mov
mov
lock
ret
xor
fdivr
adc
cmp
ret
fwait
mov
and
inc
inc
rol
mov
push
jl
xchg
loope
movs
sbb
and
test
xor
pop
xchg
pop
cld
mov
loope
movs
push
jg
or
cmp
dec
push
stos
dec
hlt
scas
(bad)
pusha
xchg
pop
mov
push
cmps
test
cwde
stos
ss
call
test
cwde
test
mov
push
out
in
cwde
stos
jbe
sahf
fimul
push
push
push
aam
mov
movs
mul
cmp
jmp
inc
push
push
(bad)
shl
push
push
daa
mov
popf
les
lea
sub
test
arpl
and
dec
pop
lods
arpl
sub
test
arpl
es
arpl
scas
scas
arpl
es
pop
fsubr
sbb
imul
arpl
and
test
cmp
add
sub
sahf
jecxz
jp
jecxz
and
push
scas
jno
mov
cmps
aad
pushf
push
out
jno
jge
cmp
adc
aad
pop
push
lahf
jno
jge
and
aaa
pop
push
fbstp
std
shl
fcom
jno
std
shr
fcom
fdiv
scas
(bad)
jecxz
call
dec
js
es
call
imul
and
pop
js
data16
call
jns
stos
push
loopne
sub
mov
(bad)
(bad)
push
adc
stos
jge
mov
push
mov
push
loop
cmp
and
movs
mov
mov
xchg
jmp
daa
xor
cmp
mov
bound
mov
ret
xchg
call
xor
and
data16
mov
stos
cwde
sbb
cmp
inc
aaa
xor
mov
adc
fld
mov
call
(bad)
push
cmp
pop
shl
mov
(bad)
hlt
or
shl
mov
mov
jp
mov
sbb
pop
sbb
xchg
inc
pop
mov
cli
mov
arpl
add
sbb
mov
aas
mov
cli
mov
jle
jae
out
jmp
cs
lds
dec
and
into
test
mov
push
arpl
lea
ds
bextr
inc
adc
sbb
mov
xor
lods
ror
jo
pop
(bad)
rcl
sbb
push
out
cmc
cmp
ins
rol
jo
fimul
mov
push
or
push
in
ror
jo
fimul
mov
loop
mov
mul
rol
lock
mov
rcl
cmp
mov
imul
(bad)
loope
je
das
mov
ret
xor
inc
lock
cmp
add
mov
ret
xor
pop
int3
push
js
mov
inc
aam
lahf
push
or
dec
lock
sbb
fild
out
pop
in
aad
stc
push
mov
fld
gs
adc
xchg
popa
js
xchg
rcr
hlt
repz
xchg
fimul
pusha
aam
mov
mov
jbe
mov
mov
cmp
loope
push
retf
mov
retf
xor
xchg
popa
pop
mov
sbb
jecxz
jmp
sbb
jecxz
sbb
pop
cmc
inc
stos
push
(bad)
out
(bad)
outs
(bad)
fcomp
outs
fnstsw
repz
cli
jle
push
nop
dec
and
inc
into
dec
movs
rol
jo
inc
add
and
rol
push
jo
mov
cmp
xchg
les
test
adc
pop
xchg
sbb
push
es
loopne
inc
sbb
sub
jo
mov
ror
push
je
test
cmp
cli
adc
mov
dec
sbb
aaa
daa
mov
jo
sbb
dec
sbb
jecxz
adc
(bad)
les
xchg
cmp
cmp
in
addr16
ds
adc
out
xchg
les
mov
cdq
mov
add
scas
and
jp
lahf
sbb
adc
in
loopne
les
mov
fmul
push
adc
pop
dec
mov
dec
mov
jg
vmread
push
push
(bad)
sub
ins
mov
loopne
inc
adc
cwde
push
(bad)
and
shl
add
js
and
xor
sahf
dec
int3
and
les
lock
loop
js
jno
cmp
cmp
pop
dec
pushf
add
es
adc
shl
xchg
les
lock
sub
sub
cmp
fimul
add
xor
retf
loopne
les
js
jno
mov
dec
fadd
pop
outs
sub
outs
sub
sub
sub
sub
push
sub
push
sub
pop
add
dec
in
pop
(bad)
(bad)
lahf
fmul
pop
and
jno
jno
add
cmp
sbb
sbb
pop
mov
sbb
shr
xor
push
mov
loopne
mov
loopne
mov
lock
cld
ds
fs
inc
sar
push
jo
repnz
nop
cmp
push
es
xor
daa
rol
imul
jns
pop
xchg
cmp
cs
sahf
pop
xchg
and
pop
rcl
gs
repnz
xchg
mov
pop
xlat
and
aaa
ror
ins
rcl
ja
dec
repnz
call
leave
pop
loopne
leave
xchg
cmps
in
loopne
in
pop
inc
dec
add
leave
popf
pusha
xor
or
mov
ftst
cmp
jb
enter
cwde
lods
and
sbb
and
loopne
in
mov
dec
out
pop
inc
xchg
pop
sar
sahf
pushf
add
sahf
in
mov
cmp
push
xchg
inc
rcr
pop
dec
push
add
repnz
xchg
cmp
out
dec
sahf
add
and
add
addr16
pop
jo
jns
cmp
cmp
push
dec
pop
add
xchg
xchg
shl
loopne
in
lock
repnz
jns
cmp
mov
add
and
and
shl
loopne
in
lock
bnd
cmp
cli
jg
add
out
push
xchg
or
imul
loopne
in
lock
jb
js
mov
or
dec
cs
and
xor
sar
loopne
in
lock
jb
clc
xor
push
jl
mov
push
jl
mov
adc
add
dec
mov
lock
sbb
aas
dec
mov
add
dec
outs
push
aas
dec
outs
add
daa
ret
loopne
leave
sub
and
pop
aas
dec
outs
add
iret
xchg
sub
jns
or
das
xchg
cmp
push
push
add
dec
mov
fbld
ja
dec
xchg
cmp
out
xchg
jecxz
sar
xchg
adc
ret
out
add
fnstenv
cmp
or
jl
or
pusha
cmps
rol
ucomiss
or
loopne
jbe
pop
(bad)
into
or
div
mov
bound
loopne
idiv
mov
arpl
jmp
push
loopne
div
xchg
cmp
mov
fdiv
mov
fmul
jo
jnp
fmul
pop
add
jnp
mov
add
retf
adc
sub
imul
inc
sahf
mov
das
mov
in
in
ja
push
idiv
daa
retf
int3
inc
jmp
rcr
cmp
xchg
sbb
cmp
into
pop
daa
fadd
pop
popw
adc
sub
fs
adc
pop
add
addr16
add
push
loopne
jbe
cmp
scas
add
fdiv
js
pop
nop
add
loopne
(bad)
add
addr16
loopne
(bad)
add
add
mov
shl
add
or
enter
in
push
lock
js
cmp
push
add
mov
loopne
jbe
mov
mov
rcr
adc
push
jnp
mov
mov
sar
or
add
jl
sahf
add
dec
sub
mov
fwait
in
cmp
sub
jnp
jl
mov
add
arpl
sub
push
ror
stos
loopne
in
xor
cld
mov
sbb
mov
daa
in
ins
lock
push
clc
sub
cld
mov
pop
mov
mov
shr
xlat
shr
shr
shl
fneni(8087
imul
cmp
xchg
jp
in
dec
mov
femms
movs
add
push
pop
xor
pop
add
test
(bad)
loopne
aam
jo
jmp
pop
jmp
inc
jmp
push
jmp
dec
jmp
pop
jmp
and
cmp
xchg
lahf
jmp
xor
out
jmp
dec
sbb
shl
xchg
aam
xor
sar
mov
movs
sub
dec
pop
push
mov
pop
add
and
sbb
out
dec
fld
cmps
outs
cmp
push
psrlw
push
pop
shl
inc
jo
xor
and
cmp
push
inc
sar
fmul
cmps
push
mov
jg
and
and
cmp
pop
repz
call
pop
jo
mov
cmp
pop
nop
add
push
push
lock
retf
dec
jns
adc
pop
js
adc
add
and
sub
cmp
mov
bound
js
xchg
add
cmps
pop
lock
sub
mov
divps
loopne
aam
js
mov
mov
dec
in
add
movs
jbe
ja
mov
lock
(bad)
dec
lea
sar
push
fcmovnb
xlat
push
cmp
aaa
push
cmp
aaa
push
mov
shl
cmp
outs
push
jl
xor
add
sub
mov
push
pop
pop
cmps
call
push
cld
and
pop
cld
xor
add
sub
adc
cmp
or
call
dec
sbb
add
dec
sbb
sbb
dec
sbb
dec
or
lahf
ds
pop
shl
shl
jo
cli
cmp
and
pop
cwde
mov
add
cmps
das
or
shl
xor
mov
cdq
mov
add
outs
sub
shl
hlt
or
mov
cwde
mov
inc
push
cli
cs
jmp
add
adc
xchg
jle
fcomp
add
fild
jmp
ins
jo
cli
sbb
fs
sub
inc
in
pop
and
cmp
jle
out
dec
jg
out
dec
aas
add
aas
add
aas
add
stc
hlt
out
js
or
std
and
pop
dec
jg
push
rcr
xor
adc
cmps
mov
xor
es
out
pop
shld
pop
rol
loopne
jp
pushf
dec
iret
pop
shld
add
inc
loopne
hlt
(bad)
lock
jp
js
mov
push
sahf
dec
das
pop
dec
movs
push
and
push
loopne
hlt
push
pop
jp
js
mov
pop
pop
dec
scas
pop
das
movs
aaa
adc
pop
js
jge
pop
cld
mov
inc
lock
push
mov
cmps
jno
fucomi
and
popf
hlt
push
lock
cli
sbb
jge
mov
dec
lahf
add
cmps
dec
sub
movs
iret
sub
sub
das
sub
das
sub
das
sub
cmps
scas
sbb
scas
sbb
scas
or
jmp
pop
loopne
hlt
ins
lock
hlt
sbb
lock
cmp
lock
add
retf
hlt
inc
lock
hlt
imul
jmp
outs
sbb
fild
cmps
fild
mov
lahf
jle
fs
add
out
mov
add
push
jg
into
pop
jle
cs
or
sbb
xor
cs
add
cmp
sub
stc
lock
mov
das
rcl
mov
or
pop
cmp
sub
fistp
xor
xor
add
out
xor
pop
cmp
mov
into
out
loopne
add
in
add
jno
rol
data16
mov
pop
retf
gs
adc
into
vunpckhpd
push
jo
xchg
add
sub
std
lock
or
push
pop
(bad)
mov
jp
add
shr
jb
inc
pop
mov
je
mov
hlt
jno
pusha
or
das
jno
loopne
outs
add
int3
in
add
push
shr
add
pop
sbb
add
or
out
sbb
in
and
sbb
popf
cmp
loopne
cmp
and
cs
sub
jb
sar
sbb
dec
adc
sub
ja
sub
ror
push
lods
jno
sar
push
ins
jb
shr
cmp
pop
add
jae
rol
adc
pushf
in
loope
pusha
out
add
jnp
cmp
ins
add
fcom
lock
push
(bad)
jae
lock
pop
dec
jb
rcl
cmp
mov
sbb
or
sbb
and
adc
in
loopne
outs
pop
js
fisttp
pop
loope
adc
adc
into
in
sbb
cmp
fwait
add
jnp
fistp
ret
push
sar
sar
adc
or
sbb
xor
ja
jl
cmp
mov
jno
loopne
fsub
lock
ja
jl
cmp
mov
loopne
sbb
daa
rol
lock
adc
cwde
cmp
lahf
jo
ror
loopne
fdivr
xor
add
cmp
cld
cmp
mov
jae
shr
loopne
pushf
call
aaa
add
ins
pop
mov
data16
fcomp
in
push
pop
xor
into
iret
mov
ret
jo
cmps
or
into
push
shl
pop
xchg
gs
xor
scas
int3
in
pop
push
gs
sub
pop
jo
pushw
pop
xchg
cmp
iret
sbb
aaa
mov
inc
out
call
cdq
adc
fs
sub
xor
int
mov
xchg
int3
cmp
pushf
cmp
inc
xor
sar
mov
fs
into
pop
add
iret
pop
pop
(bad)
jo
jae
fcomp
fadd
ja
out
cmp
jnp
push
cmp
(bad)
xor
ror
scas
cmc
call
and
jns
sahf
sbb
fwait
cdq
or
mov
pushf
leave
xchg
sar
or
push
add
jmp
into
cmps
rol
lock
aas
js
jae
cmp
cmp
push
retf
int3
add
jae
mov
and
fs
js
jae
cmp
cmp
sahf
leave
sbb
iret
data16
repz
xchg
loopne
int3
sub
(bad)
out
js
jae
mov
leave
pushf
add
xor
shr
mov
(bad)
int3
and
js
jae
mov
leave
pop
add
data16
xor
aaa
sar
fwait
loopne
int3
sub
clc
pop
out
clc
jp
cs
inc
out
clc
data16
clc
push
out
clc
jbe
and
dec
out
lock
neg
dec
in
add
iret
in
add
enter
int3
in
push
pop
gs
ror
sbb
cmp
add
leave
in
add
leave
xchg
ror
lock
or
mov
xor
loopne
cdq
sbb
jmp
jle
fwait
int3
add
fcmovne
inc
lock
jle
cmp
cld
popa
mov
aas
add
jecxz
add
xor
aas
push
into
out
or
xchg
loopne
(bad)
adc
mov
or
dec
clc
mov
push
(bad)
sbb
mov
ucomiss
das
sub
mov
dec
(bad)
adc
out
sub
loopne
(bad)
sbb
out
sbb
fwait
loopne
(bad)
push
call
dec
call
jle
xor
jg
add
add
icebp
repz
add
mov
shr
sbb
push
xor
das
add
cmp
mov
mov
clc
xor
mov
in
cmp
and
retf
cmp
add
jns
cmp
sti
sar
adc
or
in
loopne
pop
add
lahf
fisttp
push
loopne
loopne
sahf
add
(bad)
jae
and
js
pop
add
cld
push
lock
das
inc
jmp
daa
rcl
lock
push
iret
lock
iret
icebp
jne
cmp
add
lock
inc
jle
mov
repz
shr
inc
lock
or
out
jmp
and
push
jg
mov
icebp
inc
rcr
xor
push
jg
mov
icebp
daa
sar
sub
add
jl
lahf
add
iret
sub
repz
cld
add
clc
ss
jl
mov
add
jecxz
sub
xlat
ror
jmp
xchg
or
cld
mov
sbb
ja
daa
cld
pop
lock
push
clc
sub
in
or
(bad)
cld
push
lock
cmp
or
jnp
dec
sahf
cdq
(bad)
dec
test
pop
jle
jl
iret
pop
mov
repz
pop
add
or
jo
pop
or
or
sar
jb
xor
rol
push
mov
add
in
jp
test
add
or
jo
loopne
xlat
or
jo
loopne
xlat
or
jo
lock
adc
or
or
adc
mov
and
push
test
fsub
loopne
loope
aas
cli
mov
mov
push
cwde
add
ret
stos
jo
dec
or
push
cmp
cmps
test
daa
sbb
jns
add
or
rcl
adc
pop
cmp
cmp
sbb
pop
cmp
mov
pop
sar
adc
gs
jo
sub
push
ror
sar
shr
cmp
fadd
test
pop
lock
out
xor
lock
lock
mov
pop
(bad)
mov
lock
lock
js
js
cmp
mov
pop
iret
or
and
xadd
ret
xor
js
js
pop
adc
push
das
or
sub
daa
loopne
loope
lock
mov
adc
add
or
mov
scas
sar
aaa
loopne
loope
lock
lock
das
jl
adc
jae
inc
clc
mov
sbb
fist
iret
inc
call
dec
sub
shl
loopne
ret
cmp
jo
cld
inc
cmp
jle
pushf
pop
pop
or
ror
adc
mov
sbb
add
adc
ror
jmp
out
or
clc
movs
jo
cld
dec
mov
add
std
pop
cmp
ds
mov
test
sar
cmp
add
mov
inc
icebp
sbb
pop
cmp
adc
or
xchg
loopne
icebp
adc
pop
pop
repz
jg
sub
cs
or
or
mov
inc
pop
mov
inc
pop
mov
les
jo
mov
add
push
shl
mov
adc
and
imul
push
or
and
adc
sbb
adc
dec
nop
adc
aaa
enter
das
out
push
sbb
inc
les
jbe
xchg
add
mov
jo
sbb
repz
sbb
mov
and
add
bound
lods
mov
mov
adc
push
fsubr
out
pop
js
inc
jo
pushf
add
nop
js
cmp
push
push
vprotb
or
cs
pop
dec
mov
rcl
or
shl
pushf
js
cmp
sahf
pop
das
mov
ror
or
push
shr
or
outs
mov
rcr
or
ja
mov
mov
fiadd
mov
lock
js
jl
mov
pop
fist
pop
sub
shl
shl
shl
aaa
shl
aaa
ror
mov
pextrw
mov
inc
loop
loopne
loop
loopne
icebp
cmp
lock
add
mov
and
test
cld
or
pop
jl
jle
jle
jle
add
push
aas
add
mov
mov
fisttp
pop
or
cmp
sti
sub
push
mov
addr16
add
jg
pop
pop
xchg
popf
pop
cs
push
or
loopne
in
jl
pop
jbe
mov
xchg
pop
add
int3
cs
push
gs
sub
gs
in
jb
pop
jbe
mov
nop
pop
add
sbb
mov
cmp
cmp
mul
mov
leave
into
and
cmp
shr
or
mov
shl
gs
cmp
dec
and
xor
imul
pop
jo
neg
xor
fcom
pop
add
mov
sar
sahf
mov
cmp
shl
pop
leave
fiadd
imul
pusha
cmp
outs
adc
cmp
dec
imul
mov
nop
mov
add
xadd
in
jmp
loope
sbb
xchg
in
fwait
loopne
in
pop
loopne
in
fneni(8087
icebp
in
cmp
mov
mov
loopne
in
sti
loopne
in
pop
loopne
in
xchg
fldlg2
and
pop
mul
lock
xor
sti
xor
sti
add
xchg
std
add
pushf
std
adc
xchg
std
or
call
mov
xchg
std
or
std
push
mov
xchg
jge
ja
stc
and
in
repz
div
sub
cld
sub
jl
cmp
(bad)
leave
pop
add
leave
pop
add
int
add
retf
pop
push
aas
iret
scas
add
int3
scas
add
into
outs
add
int
shl
add
cmc
or
jns
pushf
aaa
mov
sbb
(bad)
mov
pop
loope
sbb
xor
adc
xchg
mov
mov
(bad)
lock
sub
adc
enter
enter
mov
rol
enter
loope
or
(bad)
xlat
(bad)
cld
rcr
sbb
push
in
data16
stos
and
mov
jmp
push
sub
fcom
sub
call
push
sub
push
cdq
sub
int
mov
mov
xchg
jge
stc
sub
xor
mov
pop
mov
clc
ret
pop
loopne
aad
cmp
push
in
ins
pop
dec
push
into
sti
mov
int
repnz
dec
mov
pop
stos
mov
push
push
adc
sub
push
aam
xchg
jae
or
push
mov
das
lea
push
push
stc
ins
cs
imul
pop
sbb
bound
jmp
jb
adc
sub
inc
ficomp
lods
push
dec
nop
popf
lods
xchg
or
xor
inc
arpl
sub
add
mov
fwait
cs
xchg
and
xchg
inc
dec
retf
test
je
pop
int
jae
sbb
ret
or
mov
xchg
mov
loop
inc
cmp
push
jmp
jb
out
adc
mov
pop
lods
or
inc
fwait
jbe
xchg
xor
test
xor
movs
mov
mov
in
out
push
leave
repz
sub
cmc
push
test
ins
cmp
js
sbb
push
sbb
xchg
jmp
pop
sbb
neg
shr
hlt
add
retf
ins
fstp
lahf
sub
mov
dec
sar
push
frstor
dec
jecxz
fcomi
ret
ins
stos
rcl
test
jp
aaa
pop
or
mov
dec
push
cmps
sbb
xchg
cmp
jb
mov
and
shl
push
ret
je
loope
ffreep
mov
pop
jge
cmps
cmps
cmps
or
push
stos
cmc
mov
je
mov
adc
ss
adc
push
mov
mov
bound
push
imul
pop
mov
ret
outs
call
es
popf
stos
mov
mov
jge
xor
push
bound
mov
mov
or
adc
push
retf
inc
adc
stos
gs
mov
imul
sub
push
sub
nop
rcr
mov
repnz
jo
xchg
shl
sbb
mov
push
aaa
daa
mov
gs
pop
mov
push
jb
hlt
pushf
test
dec
test
mov
in
(bad)
xchg
gs
ja
lods
mov
push
popa
dec
aaa
adc
call
mov
arpl
out
sar
fnsave
call
pop
iret
push
sbb
pushf
cmp
aaa
outs
jmp
mov
ins
xchg
xchg
push
cli
pop
pop
lods
push
aam
icebp
lea
and
ja
(bad)
jmp
push
clc
mov
out
and
loop
outs
dec
xchg
jns
js
mov
sub
push
icebp
xor
dec
lahf
push
(bad)
jne
sub
scas
dec
jnp
out
cmps
sbb
sti
sub
push
outs
stos
jno
gs
jbe
or
jecxz
cmp
mov
mov
js
dec
push
xchg
mov
loop
pop
sub
je
icebp
adc
pop
or
idiv
fimul
(bad)
dec
daa
shr
pop
sub
dec
pop
es
push
xor
fimul
jne
shr
retf
mov
into
dec
xchg
arpl
loop
fwait
out
popf
outs
jae
jae
mov
mov
fiadd
jae
(bad)
xchg
test
xchg
int
push
jmp
outs
xlat
xchg
sub
imul
rcr
and
out
dec
adc
aaa
jl
je
rcl
jb
test
xchg
dec
test
dec
adc
mov
cmps
je
push
cmc
inc
mov
stos
jbe
add
fisttp
mov
jge
lea
aad
(bad)
lods
iret
test
(bad)
cwde
test
arpl
mov
gs
call
pop
mov
mov
push
scas
sbb
(bad)
xchg
shl
push
popa
mov
inc
pop
aam
movs
push
data16
nop
xlat
push
dec
xchg
xor
pushf
jb
inc
jle
shr
cmc
inc
outs
xchg
pop
test
fiadd
jbe
dec
push
inc
xchg
out
fwait
cmps
push
xchg
imul
lods
fcomp
push
sbb
xchg
cmps
movs
fadd
aam
rcl
mov
dec
(bad)
dec
dec
dec
xchg
leave
lods
dec
mov
lds
into
dec
push
sub
jmp
dec
push
(bad)
je
adc
inc
sub
xchg
or
popa
lahf
lods
push
mov
xchg
aas
stos
je
fisttp
push
sbb
nop
jp
imul
cs
inc
sbb
push
scas
out
mov
sti
push
jb
(bad)
jmp
loope
movs
lds
cmp
enter
pop
xor
gs
adc
cmps
dec
xchg
mov
fwait
inc
sub
aad
loope
addr16
xchg
popa
mov
jp
lea
cmp
clc
xor
cs
xor
in
and
xor
leave
imul
les
adc
cdq
xor
les
and
push
in
and
scas
xchg
repnz
data16
sbb
pop
pop
(bad)
jl
xchg
ror
fbstp
aam
pop
cmps
(bad)
or
xchg
push
mov
cmp
scas
mov
pop
ret
mov
imul
test
lods
int3
push
mov
outs
imul
ror
in
push
mov
push
enter
dec
nop
cmp
inc
ret
stos
ins
inc
cdq
jb
es
lods
in
out
and
(bad)
fist
sub
stos
dec
or
inc
xchg
cs
lea
dec
cdq
jno
call
mov
out
cdq
xchg
call
or
shr
pop
cwde
cs
cdq
push
mov
jb
stos
aaa
leave
lods
movs
dec
xor
arpl
into
fs
leave
inc
sar
xchg
mov
dec
adc
mov
mul
sahf
sub
test
adc
int
pop
dec
out
cmp
fsubr
fcomp
mov
pop
sbb
and
dec
fdiv
mov
stos
jl
pop
scas
cmp
sub
jecxz
jb
dec
dec
mov
add
mov
mov
cs
cli
add
mov
xchg
cdq
bound
shl
aad
inc
out
mov
jl
out
adc
imul
xor
or
cmp
add
or
ins
sbb
addr16
inc
push
mov
push
push
ds
sub
push
test
lea
xchg
pop
push
int
push
movs
mov
into
fnstenv
xor
push
add
test
enter
push
mov
sbb
stos
cdq
stos
aaa
(bad)
mov
adc
daa
cli
cdq
mov
sbb
mov
arpl
cmp
adc
and
sub
test
push
sub
and
sahf
outs
and
push
and
sahf
xchg
and
sbb
jmp
imul
sub
rol
xchg
sub
mov
mov
ins
push
es
inc
gs
ins
inc
or
sub
adc
movs
xchg
push
aaa
mov
clc
mov
sbb
imul
inc
dec
mov
sub
sub
jmp
imul
(bad)
dec
outs
xchg
cdq
xchg
dec
jmp
xchg
outs
icebp
sbb
fs
pop
or
cmp
pop
pop
fisubr
pop
daa
movs
ds
jbe
inc
add
cmc
mov
je
fwait
cs
jge
je
call
jne
aam
push
out
scas
in
cmp
jb
sbb
xchg
loop
jmp
mov
lea
mov
xor
test
out
jo
jbe
mov
movs
fcmovb
xchg
add
jns
cmp
adc
ins
sub
fs
out
jb
pop
imul
seta
mov
cmp
cs
sbb
mov
xchg
mov
or
jmp
popf
bound
jle
(bad)
repnz
ss
cmps
mov
ja
dec
xchg
rcr
mov
mov
loope
cmp
dec
test
es
sti
aam
pcmpgtw
dec
jno
mov
pop
in
xchg
push
cli
lods
lea
add
imul
dec
imul
pushf
cs
lds
mov
cli
push
mov
jne
mov
int
outs
leave
rcl
xchg
stos
push
cld
clc
jbe
sub
std
mul
push
adc
ins
xor
mov
retf
(bad)
cmp
rcr
lods
cdq
inc
push
inc
jmp
sub
push
rcl
sub
addr16
fwait
outs
push
pop
mov
add
mov
lods
jp
jecxz
xchg
and
inc
cmp
(bad)
nop
ror
pusha
xor
and
das
bound
and
xchg
mov
mov
ss
(bad)
in
dec
outs
imul
inc
aam
in
ror
mov
add
sub
cwde
jbe
dec
sbb
or
jns
push
cs
pushf
aad
pop
cmps
xchg
xlat
and
scas
mov
xchg
xor
xchg
mov
out
pop
cmp
dec
jmp
jne
sub
je
pop
add
jno
cdq
aas
dec
cs
icebp
in
adc
lods
in
sbb
and
jl
mov
pop
js
cmps
push
inc
cmps
aas
shl
ds
or
dec
jg
movs
dec
repz
ds
inc
lods
jl
adc
fmul
fdivr
fdivr
dec
xchg
iret
retf
mov
xchg
cs
mov
cmps
cdq
dec
imul
inc
cdq
jp
sbb
push
popf
loope
popa
in
jbe
cmps
mul
xor
pusha
push
shl
lahf
imul
push
or
cdq
enter
sbb
sub
jne
push
in
cmp
and
mov
sub
fbld
test
cmp
ficomp
push
movs
mov
cli
push
aaa
mov
pop
daa
jae
shl
(bad)
aam
mov
xor
push
int3
lahf
jo
push
iret
mov
jge
fcomi
test
pop
ins
jns
inc
jl
pop
xchg
sub
mov
or
jmp
sbb
mov
sbb
sbb
scas
cmp
addr16
cmps
fmul
pop
les
loope
push
mov
mov
mov
xor
test
push
in
lods
mov
lea
test
inc
xchg
push
cs
or
xlat
leave
cli
mov
xor
mov
movs
or
xchg
cmps
dec
adc
xchg
scas
lods
pop
(bad)
(bad)
popa
shl
inc
mov
mov
pop
push
movs
out
fcom
(bad)
inc
inc
pop
pusha
push
cli
mov
scas
dec
pop
and
sbb
inc
sbb
dec
ins
xchg
sbb
int
cs
push
mov
push
sbb
test
or
dec
pushf
inc
cmps
sub
movs
aas
sub
shl
cdq
int3
mov
dec
js
(bad)
mov
pop
xchg
movs
enter
inc
push
jne
js
mov
pop
mov
lea
pop
imul
stc
sub
dec
dec
test
dec
sbb
mov
mov
popa
pop
out
mov
call
stos
xor
nop
addr16
loopne
cld
fs
jmp
mov
jmp
out
repnz
mov
hlt
xor
cs
jbe
ja
cld
(bad)
je
(bad)
(bad)
ins
mov
xor
dec
push
stos
int
fnstcw
fs
in
push
mov
cdq
enter
loopne
(bad)
jae
inc
bound
in
adc
daa
cmp
cmp
inc
push
push
and
sbb
repnz
mov
call
inc
scas
and
push
mov
sbb
push
fwait
mov
xor
xor
xchg
cdq
add
popa
mov
and
jp
mov
pop
cmp
dec
nop
adc
push
(bad)
pushf
dec
repnz
dec
(bad)
lds
imul
rol
push
shl
in
(bad)
nop
ss
cmp
xor
jns
jno
adc
cs
in
lea
call
adc
xor
int
leave
outs
dec
pusha
cwde
rcr
push
or
ins
loop
pop
repz
pop
imul
mov
leave
mov
jne
bound
and
mov
mov
adc
mov
mov
mov
(bad)
xor
sbb
mov
mov
or
pop
(bad)
xchg
inc
mov
rol
mov
xor
mov
movs
mov
inc
test
push
pop
scas
jmp
xchg
aam
pop
in
out
(bad)
lock
sub
sbb
stos
cdq
call
inc
xchg
and
sub
enter
mov
leave
mov
sbb
jb
in
dec
inc
ficom
lods
retf
dec
out
jge
xor
dec
aad
mov
inc
stos
and
push
pop
and
inc
fimul
je
xor
jns
and
ficomp
xor
push
or
enter
in
push
xor
inc
mov
sub
sbb
xchg
sub
aaa
cmps
call
mov
mov
inc
dec
jp
cmps
xor
xchg
retf
in
mov
sub
ins
push
gs
xchg
and
mov
sbb
stos
out
aad
adc
ret
mov
push
movs
or
xchg
jge
movs
adc
mov
xor
xchg
cmps
adc
call
and
loope
ins
ss
push
or
and
jno
test
or
lea
call
or
mov
sub
inc
inc
lods
push
jge
inc
leave
sbb
adc
or
inc
push
push
push
fisub
bound
dec
fwait
lods
inc
xor
fdecstp
push
mov
in
data16
mov
sbb
imul
push
es
inc
mov
into
cmp
fisub
or
dec
xor
lods
xor
mov
pop
xor
lods
or
and
fsub
dec
xchg
mov
or
inc
call
push
pop
outs
imul
imul
jae
xor
sub
shl
xchg
es
retf
jns
adc
push
(bad)
jno
sub
hlt
fidiv
push
dec
xchg
cmps
retf
mov
fwait
push
cmp
add
pop
movs
scas
sbb
repz
leave
cmps
mov
rol
push
adc
scas
aad
xor
sub
jmp
test
rcl
dec
hlt
xchg
hlt
cmps
cmp
daa
mov
push
out
lods
xchg
scas
dec
das
and
in
mov
jge
mov
into
mov
dec
cwde
fidivr
(bad)
test
mov
push
xor
push
xchg
ret
call
scas
aaa
fdiv
mov
iret
sbb
movs
sbb
jno
bound
push
sbb
imul
and
cwde
fwait
and
push
test
fs
mov
jp
mov
push
jl
add
mov
retf
lock
adc
or
sub
retf
ja
test
sub
mov
pop
jo
jg
mov
test
mov
xor
push
fiadd
repz
arpl
test
jmp
movs
je
push
ins
push
mov
mov
push
push
mov
ins
(bad)
xor
and
leave
jb
aam
cmp
mov
adc
or
lock
mov
jle
xchg
sbb
or
cs
adc
aad
mov
test
cmps
mov
arpl
je
pop
sub
push
and
inc
mov
sti
aas
je
push
sbb
pop
pusha
xlat
or
int
dec
sub
or
scas
sub
gs
dec
test
mov
push
mov
push
pop
lods
push
sbb
and
lods
fst
call
fisttp
call
or
and
bound
sub
xchg
addr16
fstp
in
add
pop
mov
mov
into
out
test
mov
inc
mov
je
mov
sub
xchg
test
sbb
ror
mov
dec
repz
mov
or
call
call
jno
mov
sub
mov
fidiv
jno
outs
cmp
outs
cmp
aaa
dec
movs
mov
inc
call
pop
daa
call
sbb
jne
rcr
shl
inc
call
ss
jbe
sub
pop
xor
fs
mov
mov
pop
dec
gs
mov
pop
pop
(bad)
push
idiv
jbe
sbb
jg
inc
adc
jnp
inc
dec
cmps
mov
aas
add
int
stos
pop
jg
fsubr
outs
xor
dec
frstorw
dec
dec
mov
je
mov
int3
mov
jp
pop
jmp
and
xchg
test
jnp
pop
pop
xor
cmps
mov
inc
jns
retf
mov
sbb
sub
mov
mov
out
scas
call
ror
pop
jns
ficomp
(bad)
data16
ret
scas
jae
push
dec
mov
cmps
(bad)
scas
(bad)
shl
es
xchg
pop
sub
push
mov
inc
xor
cmc
push
cli
sti
out
out
inc
mov
cdq
mov
cmp
movs
retf
cld
add
xchg
cs
push
and
jbe
dec
mov
sbb
mov
cmp
mov
push
rol
sub
pop
pop
xchg
fnstsw
xchg
je
push
dec
xchg
(bad)
xchg
scas
dec
repz
shl
ins
mov
push
add
push
push
xchg
inc
xchg
inc
jnp
shl
fisub
cmps
data16
retf
push
mov
int
and
fcmove
jle
sub
xor
stos
mov
in
orps
(bad)
loop
ss
sub
jbe
cwde
stos
gs
fisubr
cmps
sbb
xchg
xchg
dec
mov
ss
imul
mov
cs
rcl
ss
push
xchg
cwde
cmp
jbe
stos
int
(bad)
arpl
adc
cmp
sbb
popa
mov
popf
cld
or
pop
xchg
aad
jmp
pop
push
pcmpeqw
mov
ja
fwait
in
xor
mov
cdq
jge
ss
fsub
xchg
fcmovne
mov
outs
jae
retf
pop
mov
popf
jge
mov
scas
fcom
not
pop
fist
sbb
retf
pop
mov
popf
jge
out
lds
mov
popf
jge
ss
(bad)
ficom
inc
mov
push
outs
stos
jge
ss
fcomp
push
outs
jnp
retf
pop
mov
aad
in
fisttp
in
pop
xchg
jb
adc
fst
jae
mov
sub
xchg
pop
fist
push
sti
retf
push
pop
mov
jmp
push
mov
push
(bad)
pop
pop
mov
xor
repnz
out
pop
jae
cmc
hlt
movs
adc
jno
xchg
pop
jle
mov
adc
enter
or
fadd
in
es
repnz
daa
pushf
push
mov
test
inc
mov
jbe
add
cmps
push
jmp
cmp
call
lock
jmp
xchg
and
test
rcl
fs
mov
cmp
xchg
adc
dec
dec
fld
dec
sub
cmp
pop
mov
mov
mov
ds
and
in
fucom
xor
pop
sbb
xor
fs
out
movs
xchg
mov
cld
lods
clc
mov
(bad)
fxam
test
out
js
cmp
(bad)
cdq
cmps
loop
repz
cmp
sahf
mov
fcom
fdivr
push
jnp
lds
test
pop
push
cmp
sahf
mov
(bad)
push
icebp
fdivr
push
cmp
arpl
test
cmp
jnp
push
pop
dec
lds
test
dec
mov
or
and
iret
cmp
jmp
pop
sahf
mov
ficom
pop
jns
push
sub
jle
cs
mov
je
add
cmps
mov
sub
mov
aaa
mov
lods
pop
inc
dec
push
sahf
or
jl
cs
movs
(bad)
push
xchg
jp
data16
mov
mov
xchg
aaa
jecxz
leave
fwait
jno
in
int
mov
jp
out
repnz
(bad)
out
test
mov
add
xchg
push
aas
mov
shl
mov
dec
jmp
(bad)
sbb
xor
imul
push
shl
xchg
outs
scas
sbb
sub
inc
adc
jb
inc
dec
fnstcw
pop
icebp
push
(bad)
mov
lea
xchg
fsub
jge
fs
push
pop
xor
inc
sub
add
lods
xor
xchg
loope
shl
out
aaa
and
retf
(bad)
fisttp
xchg
sub
sub
jge
es
dec
(bad)
fdivr
or
fs
push
xchg
sub
push
mov
push
int
stos
test
ret
cmps
xchg
cmps
cdq
leave
popaw
dec
pop
(bad)
es
xchg
out
mov
addr16
int3
cmp
int3
xor
cmp
retf
jmp
sub
jnp
(bad)
into
push
jmp
imul
lds
jle
out
outs
fsub
sbb
xor
jns
or
pop
xor
push
aad
test
mov
sub
xchg
jg
mov
mov
imul
loop
fiadd
mov
pop
xchg
jl
gs
rcr
pop
retf
sub
inc
xor
test
dec
sub
aam
sub
push
stos
cmp
pop
xchg
cs
mov
pop
jp
dec
jb
and
sub
stos
(bad)
push
mov
data16
xchg
dec
mov
and
fidiv
lods
mov
jno
mov
mov
rcl
test
or
cmps
hlt
push
xchg
cld
mov
mov
rcr
stos
jo
sbb
data16
add
xchg
sub
and
push
outs
(bad)
lea
inc
jmp
lods
dec
fucomi
pushf
mov
push
addr16
xchg
ins
xor
ja
xchg
pop
inc
push
jo
stc
loope
sub
cmp
stos
aad
inc
cmps
inc
arpl
xor
jp
push
fist
adc
push
fdivp
xchg
jb
jmp
cmps
xor
movs
and
fwait
stos
mov
das
repnz
push
enter
loop
(bad)
std
dec
xchg
cli
fidivr
dec
jle
mov
sbb
(bad)
add
mov
fidiv
mov
scas
add
loopne
lods
rol
sub
lods
pop
lahf
push
retf
mov
mov
add
add
mov
aam
cli
movs
cmp
sbb
and
dec
(bad)
bnd
xchg
inc
pop
jl
leave
pop
cmps
movs
repnz
popf
fild
(bad)
aad
mov
addr16
in
lods
scas
outs
nop
movs
mov
out
addr16
test
jne
or
dec
addr16
mov
scas
mov
jecxz
dec
sub
dec
push
cmp
and
pop
rcr
movs
pop
mov
add
ins
sub
imul
lock
mov
mov
push
adc
sub
imul
lock
mov
mov
dec
add
out
xchg
add
movs
add
(bad)
ret
hlt
call
pop
mov
add
dec
add
movs
add
push
cmp
cli
shl
(bad)
push
inc
addr16
mov
aad
xor
push
add
mov
scas
mov
iret
out
inc
(bad)
dec
xchg
xor
fst
popa
push
fstp
jle
int
outs
cmp
mov
pop
mov
hlt
mov
fld
mov
ins
das
jmp
sahf
sahf
(bad)
sub
push
jb
ret
jmp
sahf
cs
sub
loope
pop
mov
cmp
stc
sahf
xor
pop
xchg
jmp
pop
inc
mov
cdq
jp
gs
pop
repz
das
mov
dec
push
retf
xor
xchg
jns
fwait
dec
mov
push
mov
shl
data16
sbb
idiv
fstp
mov
mov
mov
retf
loop
jmp
mov
dec
loope
test
inc
mov
ror
jle
ja
daa
inc
mov
scas
test
mov
xchg
jmp
(bad)
inc
jle
mov
mov
sub
adc
xchg
sub
jne
mov
jmp
pop
cmp
adc
and
mov
sahf
fbstp
mov
movs
xor
ror
das
fst
adc
pushf
or
(bad)
rol
sub
mov
(bad)
call
push
setnp
inc
fwait
js
ss
scas
movs
addr16
pop
mov
movs
cmps
fnstenv
imul
je
mov
(bad)
rcr
fwait
mov
and
mov
into
push
mov
sar
xor
cmps
enter
jae
in
pop
sbb
test
pop
jp
pop
jp
push
jp
cmp
jne
mov
hlt
jnp
xchg
lahf
aad
in
aad
in
(bad)
in
aad
in
fst
frstor
rcl
or
aaa
push
int3
in
(bad)
fild
cld
jbe
jne
cmp
outs
in
stc
ficom
sub
test
arpl
sub
retf
inc
retf
cmps
mov
xchg
imul
adc
jne
xchg
popa
adc
retf
inc
adc
mov
stos
out
sub
ret
xor
pop
(bad)
dec
arpl
jbe
dec
(bad)
ins
inc
std
outs
rcl
xchg
jl
pop
xchg
lods
and
mov
int
test
and
cdq
mov
movs
push
movs
ja
dec
adc
jmp
jmp
xchg
cs
fistp
inc
stc
push
enter
ins
ins
dec
xor
xchg
imul
fild
pop
dec
call
inc
sub
jno
enter
push
xor
mov
mov
mov
nop
or
pop
xchg
sub
push
sub
outs
lods
xor
ss
mov
dec
ss
xor
pop
inc
inc
mov
xchg
cwde
fbstp
fwait
mov
ins
imul
mov
mov
dec
push
shr
adc
fxch
fimul
stc
mov
xchg
aam
hlt
mov
push
cmp
dec
mov
pop
sar
es
push
xor
pop
adc
xchg
inc
jne
neg
aas
jnp
mov
mov
sti
int3
push
push
jge
stos
stos
ds
push
lahf
fldcw
aad
mov
push
cmc
fldcw
push
jge
stos
stos
ds
bound
lods
mov
test
jp
aad
mov
stos
retf
dec
dec
mov
push
cmc
fldcw
push
cmc
jne
stos
jmp
stos
mov
data16
sahf
imul
adc
sub
mov
mov
push
cmc
jne
stos
jmp
stos
stos
popf
aad
rcr
push
cmps
mov
dec
movs
sub
retf
in
push
aad
(bad)
xchg
fisubr
outs
push
pop
dec
and
dec
sub
jmp
and
in
inc
das
(bad)
ins
inc
retf
push
push
lahf
int
stos
iret
jle
xchg
pop
adc
pop
movs
out
jnp
(bad)
iret
fucomi
repnz
mov
in
outs
(bad)
retf
mov
push
xchg
addr16
gs
div
jns
fcomi
repnz
mov
cmp
cs
addr16
in
bound
sti
or
mov
addr16
sahf
cmc
inc
retf
mov
pop
pusha
jns
sti
or
mov
addr16
sahf
cmc
ds
lods
neg
mov
jmp
xchg
pop
out
mov
iret
stos
jnp
jp
hlt
sub
mov
push
jne
stos
sti
sbb
fisub
sahf
cmc
ds
repnz
not
pop
sahf
in
cmp
cdq
jnp
sahf
aad
iret
in
sub
popf
mov
mov
xchg
cmc
xor
jbe
(bad)
(bad)
nop
fidiv
pushf
scas
out
push
stos
sar
jne
je
jae
pop
and
ins
cmp
out
mov
cmc
ins
mov
dec
xchg
ror
aaa
fisub
mov
jle
pop
fidiv
fisttp
and
xchg
mov
arpl
in
sub
xchg
(bad)
shl
loop
pop
dec
mov
aas
push
sti
mov
lods
mov
es
xor
mov
fcomp
xchg
shl
cmps
out
jmp
outs
mov
jmp
fiadd
sub
add
pop
mov
pop
push
sbb
test
add
imul
mov
and
sbb
sub
mov
retf
sub
retf
popa
aam
cs
or
dec
sub
and
dec
mov
pushf
or
sahf
or
add
stc
arpl
arpl
loope
xor
xor
jmp
test
lods
test
mov
test
sub
aad
or
sbb
inc
outs
jae
cmp
aaa
shr
ficomp
sti
lods
push
imul
iret
ficomp
ds
das
(bad)
push
movsx
xor
dec
iret
in
jmp
in
hlt
out
jl
in
inc
cmp
sbb
mov
iret
out
out
inc
cmc
das
pusha
adc
mov
jecxz
bound
retf
rcr
jbe
mov
sub
scas
std
mov
inc
stc
rcl
lods
mov
sar
dec
mov
mov
movs
jl
retf
sti
inc
jae
retf
sbb
xchg
adc
mov
scas
push
xchg
and
dec
cmp
adc
stc
fxch
sbb
cmp
retf
pop
mov
pop
sbb
repz
stos
ficomp
mov
xlat
xor
xor
xchg
cmp
xlat
les
mov
fstp
in
jecxz
mov
ins
jmp
gs
sahf
pop
popf
into
jge
shl
inc
test
inc
mov
addr16
popf
cmp
imul
retf
or
mov
movs
sub
xchg
inc
fistp
dec
mov
(bad)
mov
movs
and
mov
shl
leave
push
mov
cmp
mov
pusha
(bad)
lock
lods
data16
ss
cmps
push
mov
stc
retf
lods
xchg
shr
push
sub
pop
ins
xor
ret
mov
and
std
repz
push
cdq
imul
outs
jo
dec
jno
cld
sbb
cld
sbb
cld
sbb
cld
sbb
cld
out
ds
out
ds
neg
ds
neg
ds
jbe
ds
jbe
ds
sbb
ret
xchg
jp
xchg
aaa
cmc
ficomp
clc
lock
lock
lock
xchg
mov
fld
(bad)
mov
jle
and
shl
push
outs
add
push
push
aaa
jl
int
jl
mov
fcomip
mov
sbb
sub
test
inc
adc
push
mov
xor
push
xchg
repz
push
fdivr
movs
inc
push
pop
dec
pop
dec
scas
shl
adc
jmp
push
jp
arpl
pop
outs
clc
lock
fld
mov
add
xor
test
xor
cdq
popf
mov
sar
or
push
das
dec
push
inc
fwait
xchg
into
jb
xor
add
daa
stos
xchg
(bad)
jb
jmp
xor
adc
add
aad
popa
cmp
cmps
add
retf
mov
ins
in
hlt
lahf
mov
jbe
int3
dec
xchg
fldcw
sub
mov
lods
dec
mov
inc
mov
enter
call
xor
iret
xchg
std
add
add
dec
dec
adc
mov
fimul
mov
push
dec
push
adc
ficom
push
xchg
cld
popf
cmp
mov
push
sbb
mov
in
(bad)
xor
enter
aad
stos
fwait
aad
push
test
(bad)
sbb
adc
dec
popa
adc
repnz
mov
movs
mov
xchg
mov
mov
lods
xchg
das
push
push
push
sub
jecxz
in
fcomp
stos
xor
sti
sub
xor
add
popf
cmp
retf
out
ins
fcomp
out
mov
fadd
mov
mov
es
(bad)
xchg
cld
enter
adc
xchg
sub
pop
scas
fld
cmps
leave
sub
adc
jae
or
pop
sub
dec
add
fs
or
mov
xor
dec
push
int3
pop
leave
cmp
add
fs
or
sub
inc
jecxz
mov
sbb
test
ror
or
loop
push
mov
scas
fs
ins
popf
int
or
xchg
push
int
mov
lods
add
es
sub
add
xchg
or
mov
leave
cmp
aad
push
push
mov
rcl
sub
cwde
es
dec
push
mov
scas
and
push
(bad)
es
cmps
cmp
inc
xchg
icebp
push
lods
or
arpl
pop
mov
xor
dec
shr
loop
out
push
xor
test
xchg
call
cmp
xchg
xor
enter
sti
jmp
sbb
lods
stos
inc
sub
dec
out
sub
xor
ins
ins
inc
push
retf
add
ins
jo
sbb
lods
inc
xor
shr
mov
mov
add
and
fisttp
fld
cs
shr
pop
fisubr
cmp
je
(bad)
fidiv
into
dec
xlat
fldl2e
cmp
cmp
or
ins
sbb
jmp
pop
mov
in
jns
rep
ds
cmp
mov
mov
lods
mov
cmp
mov
xchg
aam
and
jo
cli
or
and
xor
call
leave
ret
data16
push
xchg
out
or
mov
lea
add
mov
xor
int
xchg
test
and
sub
outs
sub
push
lock
call
jl
pop
pop
mov
and
mov
xor
retf
ret
ins
leave
jmp
movs
or
out
retf
mov
cmc
pop
mov
cwde
fsubr
xchg
xchg
jle
pop
cmp
leave
jb
rcr
and
pusha
jbe
pop
stc
int
pop
neg
mov
fcmovnbe
add
idiv
ror
or
sbb
push
xchg
movs
xor
mov
sbb
add
outs
sub
sbb
push
sbb
mov
ds
imul
mov
ficom
data16
sub
xchg
sub
sub
xor
jb
cmp
xchg
test
cmp
xchg
xor
or
iret
cli
mov
push
outs
test
sub
inc
ja
in
dec
popf
inc
outs
imul
inc
arpl
pop
mov
xor
and
mov
pop
pop
cmp
push
cld
and
scas
dec
push
pop
cmps
lahf
push
(bad)
sar
dec
mov
mov
pop
push
cli
shr
pop
mov
test
push
push
jp
push
fldcw
adc
mov
sub
mov
stos
dec
dec
fisub
outs
mov
inc
adc
sbb
cdq
add
pop
in
xchg
mov
sahf
pop
dec
xchg
jbe
cmp
push
pop
mov
inc
sbb
int
jmp
mov
mov
mov
shl
xor
jnp
hlt
mov
aaa
sub
aam
movs
stc
pop
inc
leave
jmp
add
mov
push
pop
aad
push
add
cmp
ficomp
aaa
xchg
rol
jbe
movs
loope
mov
xchg
int
fld
movs
es
jo
es
dec
fist
pop
pop
dec
sub
jb
bound
dec
xchg
mov
inc
cmp
cld
mov
inc
outs
jp
movs
xchg
rol
in
out
(bad)
or
mov
mov
xor
xchg
sahf
inc
pop
iret
xchg
aam
addr16
jg
fs
mov
leave
les
inc
lods
sub
scas
inc
dec
es
leave
leave
cdq
xchg
mov
sbb
fld
imul
js
mov
sub
and
push
add
repz
cdq
out
xor
(bad)
mov
aad
fdivr
(bad)
jle
aas
cmp
mov
sar
mov
(bad)
call
add
out
jmp
mov
pop
adc
vpmacssww
cli
pop
pop
xor
clc
cld
stos
out
push
mov
idiv
pop
mov
and
inc
cmp
les
or
(bad)
ds
lock
cld
sub
sub
lods
rcr
xchg
mov
ret
jns
lds
loop
adc
xchg
clc
push
clc
loop
pop
push
fld
jno
rol
shl
movs
or
mov
mov
xchg
mov
xchg
sub
cs
(bad)
fst
repz
and
and
into
dec
cmp
inc
cmp
sub
xchg
aas
mov
pop
(bad)
in
adc
(bad)
sub
jecxz
cld
jno
(bad)
mov
aas
scas
enter
(bad)
sbb
or
cmp
jno
movs
(bad)
sbb
inc
test
inc
dec
mov
out
add
nop
sub
pop
adc
and
lock
loopne
imul
and
ret
sub
dec
loopne
mov
dec
outs
out
or
mov
add
xlat
ret
cwde
pop
mov
dec
retf
icebp
add
mov
jmp
sti
pop
dec
cmc
pop
mov
scas
(bad)
mov
addr16
pop
nop
aas
push
push
or
inc
xor
mov
pop
popf
xchg
dec
jge
loop
push
fst
jg
(bad)
hlt
mov
dec
addr16
pop
les
xor
jo
aas
mov
test
mov
cld
adc
mov
jb
pop
dec
jl
icebp
mov
daa
repz
in
idiv
mov
cdq
pop
adc
add
xor
loope
and
sbb
fstp
sub
iret
idiv
or
jle
pop
xchg
xchg
add
xor
add
loop
mov
movs
ds
leave
pop
mov
fsubr
jg
xchg
aas
repnz
cwde
xchg
aas
in
ds
div
cmp
inc
loop
adc
pop
aad
mov
mov
lds
jns
add
into
adc
inc
jo
loopne
jae
mov
adc
mov
das
mov
(bad)
loope
(bad)
fbstp
in
(bad)
fild
in
aaa
cmp
jg
out
loopne
and
inc
jo
loopne
ror
push
add
or
adc
inc
jo
loopne
ror
sub
jle
jg
mov
cmp
mov
pusha
aaa
inc
sahf
pusha
and
int3
adc
int3
sbb
dec
hlt
sub
and
outs
xchg
cwde
and
ror
pop
inc
cli
mov
(bad)
out
add
jmp
call
pop
cmp
daa
xchg
std
fnstcw
shl
cmc
adc
adc
inc
and
std
and
jns
inc
adc
out
cld
adc
add
cmps
(bad)
adc
ror
sbb
sub
invd
push
or
and
iret
adc
(bad)
std
out
xor
imul
in
iret
xchg
sub
sub
out
mov
sahf
inc
pusha
out
push
inc
and
or
inc
fsubr
fsubr
lahf
mov
mov
jae
jne
and
cmp
push
(bad)
cld
call
dec
mov
(bad)
jmp
(bad)
cld
addr16
pop
adc
inc
jle
mov
retf
mov
aaa
neg
mov
call
jg
stc
jbe
dec
push
inc
pop
(bad)
daa
imul
mov
(bad)
sub
clc
iret
lahf
out
fwait
(bad)
sti
inc
jmp
pop
call
in
div
retf
repz
mov
mov
out
std
(bad)
cmc
pop
into
(bad)
std
aaa
jg
ucomiss
mov
std
cmp
imul
jle
xchg
pop
(bad)
cld
loop
jnp
ins
rcr
aas
(bad)
mov
fdivrp
lods
ds
fucomi
mov
xlat
push
sub
or
add
jbe
inc
mov
psubw
xchg
pop
and
nop
retf
sbb
sbb
or
push
add
push
jns
xor
repz
das
test
outs
test
outs
stos
add
scas
(bad)
stc
jno
inc
rcr
(bad)
aam
push
cmps
or
(bad)
scas
xchg
sbb
aad
mov
sbb
mov
scas
test
jle
sbb
test
sub
stos
xor
int3
xchg
out
cmp
int
mov
imul
in
pusha
test
pop
test
pop
stos
sbb
mov
inc
cld
inc
ficom
aaa
in
mov
and
lock
loop
xchg
sbb
and
std
xor
mov
sbb
sub
and
int3
pop
xchg
add
dec
inc
mov
xchg
repnz
in
add
dec
daa
cmp
sub
mov
jae
sbb
mov
ud1
xchg
cwde
jne
push
xchg
inc
loope
or
xchg
pop
fbld
outs
in
dec
pop
jmp
cmc
dec
stc
push
jae
pusha
push
or
ins
xchg
(bad)
jg
cmp
(bad)
cld
inc
stos
jl
cmp
pop
cdq
push
jge
scas
mov
and
ss
std
mov
sahf
fst
mov
inc
fld
cld
shr
ret
xlat
sbb
fisub
dec
fcomp
sbb
jns
shl
jno
add
movs
dec
retf
pop
push
add
push
test
es
sbb
loope
stc
ret
popa
outs
and
adc
jnp
inc
push
pop
xor
lds
popa
mov
out
loop
mov
add
ds
(bad)
jecxz
or
loop
and
(bad)
std
out
mov
inc
ret
push
sbb
mov
adc
mov
push
vmwrite
in
test
sbb
(bad)
pop
sub
sub
lahf
pop
lahf
std
push
lahf
test
mov
stos
sbb
das
aad
xor
shl
in
sbb
test
push
push
push
stc
pop
pop
iret
nop
(bad)
pop
jbe
mov
rol
repz
popa
xchg
pop
push
dec
outs
mov
pop
xor
pop
aad
pop
push
jg
add
cmp
cmp
aas
push
add
test
mov
sbb
inc
or
adc
jns
daa
ret
pop
xchg
mov
pop
inc
mov
(bad)
adc
cmp
jae
pop
dec
push
cmp
sub
push
add
push
push
add
push
add
rcl
dec
xor
aad
stos
push
inc
or
inc
or
pop
test
not
rcl
dec
or
pop
or
inc
or
dec
or
pop
or
mov
jo
or
movs
push
out
test
dec
fcom
inc
fcom
jg
push
out
stos
cmp
sar
lahf
stos
adc
xchg
mov
cmp
pushf
inc
rol
adc
cmp
push
test
cmp
into
cwde
iret
out
jno
xchg
and
bnd
sub
aam
mov
xor
bound
out
push
mov
sbb
sbb
clc
icebp
or
icebp
call
in
inc
mov
push
test
movs
xor
idiv
cmp
rcl
jo
xchg
mov
jnp
mov
sbb
cmp
ret
lods
call
adc
sub
fiadd
sar
inc
mov
push
inc
sub
repz
movs
mov
gs
mul
mov
(bad)
loope
or
jb
inc
and
and
sahf
sbb
adc
push
lods
stos
sub
nop
fucomi
jb
pop
jno
xchg
outs
xor
daa
out
or
pop
rcl
or
bound
jg
xchg
mov
arpl
xor
sbb
std
nop
or
shl
sbb
and
or
aad
or
dec
jmp
sub
jno
leave
cmc
test
sbb
nop
(bad)
xor
mov
pushf
mov
sti
ret
mov
jno
jecxz
push
lea
inc
xchg
mov
sbb
sbb
les
mov
pop
sub
jno
or
popf
sbb
pushf
cmps
test
and
cmc
jnp
lahf
pushf
movs
out
sbb
mov
sbb
xchg
push
cmp
je
inc
shr
ins
popa
fsubr
inc
mov
rcl
cmc
jns
push
jg
adc
(bad)
sub
mov
ss
test
mov
mov
mov
mov
push
inc
bound
fcom
aas
out
(bad)
pushf
and
jmp
pop
mov
call
mov
test
nop
das
jmp
(bad)
mov
das
test
adc
mov
cmp
push
sar
add
pop
scas
mov
dec
ja
push
push
int3
adc
outs
xchg
adc
test
xor
mov
push
fwait
rol
pusha
sub
hlt
inc
jno
add
or
add
imul
cmp
push
cmp
jnp
pop
sub
out
idiv
test
cmc
loop
push
scas
(bad)
rcr
sub
not
xlat
xor
mov
aam
cmc
nop
in
xor
and
repnz
xchg
or
and
cmps
mov
add
call
dec
and
test
xchg
pusha
leave
inc
sbb
sub
adc
push
adc
test
push
into
in
fwait
aaa
mov
cmps
mov
add
inc
push
aas
sbb
in
mov
or
mov
mov
push
pop
xchg
fwait
pop
lods
pop
push
mov
push
add
je
mov
aas
neg
cld
xlat
jge
test
lea
clc
imul
(bad)
int
mov
add
aam
xor
adc
sar
xor
lea
aas
jmp
inc
mov
test
stos
ret
sar
jecxz
sbb
retf
adc
sub
aas
add
repz
test
in
xchg
and
adc
inc
xchg
into
and
jno
cwde
ds
xchg
push
or
popf
jno
pop
xchg
or
(bad)
inc
xor
sbb
or
mov
pop
jl
test
shr
popa
mov
jl
xchg
push
test
rcr
leave
pusha
xchg
out
or
enter
adc
jg
add
stos
data16
outs
rcr
push
das
push
emms
int3
aas
in
shl
nop
je
inc
push
xchg
(bad)
aam
jg
push
(bad)
ins
stos
adc
sub
xchg
inc
rcr
sbb
mov
in
rol
call
popa
scas
(bad)
sbb
jo
xor
cmc
loope
clc
arpl
lahf
xchg
in
aam
lahf
mov
mov
mov
mov
add
mov
pop
sbb
cld
mov
aam
or
mov
retf
inc
pop
xchg
cs
push
or
shl
icebp
js
out
mov
(bad)
mov
lea
xor
das
shl
cli
jecxz
repz
out
mov
in
dec
xor
fs
in
mov
aas
ret
mov
adc
jo
add
mov
dec
fld
mov
mov
iret
add
repnz
jne
sbb
inc
sbb
mov
js
inc
mov
rcl
aam
pop
cwde
fs
pop
lods
fwait
push
or
pop
pop
sub
xchg
pop
jle
fld
sbb
fcom
push
mov
jo
cmp
inc
daa
lods
xchg
dec
fmul
int
add
push
mov
sbb
jo
mov
mov
ret
push
pop
mov
mov
pop
dec
pop
ins
or
xor
and
jne
mov
push
cwde
fild
mov
scas
pop
loop
test
sbb
sbb
lahf
pop
(bad)
push
fsub
push
js
mov
mov
mov
adc
xchg
in
mov
ds
add
inc
stos
or
push
cmp
pop
pop
fsub
mov
loopne
mov
cmps
das
call
inc
test
mov
test
mov
or
std
and
daa
loop
std
in
or
or
sahf
rcr
les
mov
push
jge
push
pushf
js
ret
mov
cmps
mov
loope
cmp
push
test
stos
xor
dec
or
push
mov
dec
push
addr16
add
add
loope
inc
aas
add
lods
rol
test
xor
cmp
mov
ins
(bad)
fsub
(bad)
loope
mov
xlat
pavgw
sbb
pop
test
jle
add
outs
pop
arpl
punpckhwd
pop
cli
imul
add
jns
inc
cmc
pushf
push
pop
xchg
ins
shl
(bad)
out
push
and
or
mov
xlat
sbb
pop
sub
daa
jne
fucomip
arpl
dec
popf
jmp
add
aam
ja
fbld
mov
sub
repnz
inc
lahf
inc
popf
mov
test
mov
aas
push
xchg
pop
or
(bad)
xchg
push
pusha
pop
pop
repz
in
adc
sbb
pop
push
repnz
sbb
loope
cmp
fild
nop
adc
(bad)
sbb
mov
out
xor
or
nop
aas
sbb
xchg
and
xor
pop
jl
into
adc
dec
cmp
inc
adc
rol
shl
sub
pop
clc
enter
adc
push
into
nop
and
sub
mov
mov
cmp
fidivr
or
push
add
push
jnp
ret
jmp
jno
xchg
sbb
dec
loopne
xchg
adc
shl
or
push
or
inc
dec
mov
out
mov
out
rcr
push
dec
mov
or
or
ins
rol
adc
daa
adc
sbb
and
cmp
in
cmps
das
aam
repnz
push
dec
xor
scas
aam
jmp
push
cld
mov
clc
push
or
fcmovbe
xor
test
pop
adc
repz
push
adc
push
jbe
mov
xor
pop
cdq
and
popf
jp
cli
ror
ds
or
sar
(bad)
pusha
add
sbb
aaa
ins
mov
ret
lods
lds
js
je
push
scas
hlt
jne
lock
add
inc
xor
aaa
adc
aad
rcl
sbb
add
aad
mov
and
mov
(bad)
retf
jmp
(bad)
cld
lock
in
std
scas
jp
lahf
stos
cmp
sbb
jmp
retf
cmp
xor
jbe
pusha
rol
jle
cld
cli
push
int
outs
aam
and
mov
sahf
imul
xchg
in
div
aas
push
jne
cmps
xchg
gs
mov
pushf
(bad)
(bad)
inc
pop
mov
add
add
in
das
mov
scas
nop
sbb
jge
call
pop
mov
or
jg
nop
push
ins
and
xor
je
(bad)
jae
test
xor
and
cmp
sbb
sbb
icebp
pushf
xor
push
dec
cmp
pop
loope
and
mov
leave
call
push
jmp
jb
inc
fiadd
jmp
cmp
xor
(bad)
(bad)
(bad)
aas
clc
daa
das
clc
sub
ins
jmp
daa
push
inc
gs
nop
jmp
xor
or
sub
loope
fcmovb
or
imul
jg
cmp
scas
mov
xchg
stc
fcmovne
adc
in
out
test
push
xchg
sbb
dec
sbb
push
inc
cdq
adc
pop
and
adc
jmp
stos
xor
std
jnp
lea
std
movs
or
icebp
jne
push
cwde
and
add
stc
adc
pusha
cmp
sub
add
mov
outs
dec
mov
stos
movs
jae
shr
stc
mul
push
xchg
sbb
enter
aam
inc
icebp
xlat
pusha
(bad)
movs
jp
je
pop
and
jbe
jg
dec
mov
pushf
int3
inc
enter
ret
xor
popf
mov
imul
test
adc
inc
les
cmp
mov
repnz
jmp
retf
stos
imul
xchg
pop
ds
jecxz
jmp
push
push
dec
ja
aam
pop
sub
mov
push
push
faddp
jo
ins
sahf
cdq
inc
pop
ss
push
ret
push
ins
inc
xchg
arpl
jmp
enter
sbb
test
stos
and
push
xchg
scas
and
jle
cmc
pusha
shr
push
or
popf
imul
push
call
ror
sti
add
cld
(bad)
jg
and
std
mov
and
(bad)
nop
shl
(bad)
fst
and
xchg
inc
aam
adc
cmps
dec
inc
shr
jbe
mov
sti
js
and
leave
pop
jl
push
aad
hlt
shl
adc
outs
pop
in
scas
adc
add
xchg
push
pop
lds
cmp
fisub
sahf
push
jmp
shr
jae
stos
repz
cmp
clc
lods
out
add
faddp
ret
sti
add
cmp
or
add
add
std
cdq
pop
add
add
add
add
sbb
add
pop
rol
pop
mov
add
inc
push
jbe
mov
sub
mov
out
mov
push
cmp
pop
push
outs
jb
pop
fs
ins
outs
jo
jo
outs
push
arpl
ins
jb
xor
ins
jb
ins
outs
popa
fs
outs
bound
push
gs
gs
jae
pop
ins
jb
cs
bound
add
add
add
add
add
and
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
xchg
sbb
mov
inc
add
.byte
shl
.byte
