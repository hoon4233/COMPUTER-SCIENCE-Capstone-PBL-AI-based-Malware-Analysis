pop
data16
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
or
add
jmp
jae
add
jb
lea
sub
add
dec
outs
je
addr16
inc
outs
(bad)
in
outs
cmp
jg
rol
push
je
imul
push
popa
and
xchg
je
test
call
nop
cmp
push
mov
imul
ins
lods
std
bound
arpl
pop
sbb
push
push
jns
je
movd
gs
aam
(bad)
dec
push
jb
popa
arpl
add
(bad)
rcr
add
std
jg
int3
add
jmp
adc
ror
mov
hlt
int3
add
lahf
or
adc
inc
fisub
or
sbb
loopne
ds
pop
adc
fs
das
mov
adc
or
mov
adc
push
fidiv
cld
das
pop
jne
fs
jb
popa
jns
add
pusha
scas
jmp
pop
(bad)
xor
and
and
and
pop
or
push
push
xchg
dec
or
enter
inc
xor
and
and
and
and
mov
adc
xor
and
movs
mov
pushf
or
enter
mov
lods
lahf
or
add
loopne
sbb
lock
dec
add
add
movzx
mov
aaa
inc
pop
ret
push
clc
push
hlt
fs
inc
push
lock
call
in
fadd
push
fistp
mov
add
push
add
test
div
std
leave
jne
xor
pop
leave
mov
mov
ret
lea
(bad)
inc
add
push
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
popa
mov
repnz
xchg
mov
mov
mov
mov
or
adc
add
push
jnp
lock
mov
push
or
or
(bad)
fidivr
push
mov
mov
mov
mov
add
rcr
fndisi(8087
(bad)
dec
lahf
rol
push
or
push
jne
and
imul
and
or
inc
add
dec
push
add
ret
pop
fidiv
cmp
mov
cmp
jne
mov
mov
ds
loopne
xchg
test
pop
pop
pop
adc
out
clc
jge
sti
mov
sahf
cmp
jb
sbb
test
int
pop
and
mov
dec
fbstp
test
inc
leave
fistp
loopne
jmp
or
clc
add
cmp
imul
pop
sti
sub
jmp
sub
stc
mov
pushf
cmp
sub
mov
aam
or
or
lock
cmp
cmp
jne
sbb
nop
mov
mov
mov
cmp
mov
fucomip
add
pop
jns
push
scas
js
push
jg
test
loopne
lds
mov
adc
(bad)
mov
push
and
icebp
mov
fs
add
push
mov
callw
add
mov
sti
shr
push
pop
icebp
neg
es
add
popf
cmp
in
outs
dec
inc
add
ret
push
push
sbb
mov
or
add
scas
js
retf
mov
call
sub
mov
pushf
jmp
mov
or
out
ja
mov
add
mov
outs
xor
cmp
jnp
sub
pop
gs
in
sbb
or
mov
fild
sub
add
outs
jg
neg
mov
xchg
pause
sub
adc
int3
or
jno
push
nop
or
or
lock
dec
jae
sbb
loop
sbb
imul
or
lds
fist
popf
cmp
pop
cmp
add
pop
jbe
mov
cmp
popa
div
or
or
jbe
scas
adc
sti
push
push
sbb
cwde
loopne
adc
sbb
adc
push
push
inc
cmovno
xor
lock
jmp
mov
xchg
in
sub
lock
dec
mov
cmp
jae
mov
cmp
jae
jb
jo
std
add
add
adc
outs
xor
lock
(bad)
(bad)
aas
or
ds
out
shl
shl
cmp
xlat
dec
out
fimul
push
(bad)
in
je
mov
aaa
sbb
xor
pop
std
ins
push
push
(bad)
pop
add
jb
jmp
and
movs
and
push
mov
ror
and
out
cli
jge
add
je
add
test
inc
jle
add
mov
sub
movs
jecxz
stos
(bad)
xchg
cmp
xor
(bad)
fimul
fs
sub
fst
fcom
push
sbb
sbb
test
xchg
cmp
icebp
and
dec
mov
cmc
jne
nop
mov
dec
jo
scas
movs
lds
cmp
xchg
rol
adc
adc
xchg
lea
xchg
inc
mov
cdq
aaa
jecxz
add
out
or
ds
cmp
jae
mov
out
ror
out
add
mov
pop
test
je
stos
dec
or
or
adc
jmp
loop
or
or
pop
sbb
push
add
in
aaa
push
push
push
fs
out
xchg
and
xchg
inc
rcl
mov
call
(bad)
in
adc
inc
push
sbb
adc
hlt
mov
mov
xor
jg
pusha
(bad)
inc
add
jne
mov
rol
(bad)
mov
pop
pop
lds
fldcw
out
loopne
xor
jmp
mov
dec
push
rcl
shl
xor
xchg
or
cmp
out
sbb
jns
or
inc
gs
pop
outs
imul
adc
jmp
jb
sbb
test
ret
pop
pop
fistp
push
cmp
scas
ret
adc
cmp
pop
jg
fst
test
jns
add
sar
test
cwde
mov
jmp
sub
out
sub
mov
adc
jmp
dec
shl
pop
fld
jb
add
or
mov
cmp
or
sbb
(bad)
(bad)
jmp
cmp
jl
mov
jb
idiv
fisttp
and
daa
add
or
or
mov
and
inc
sub
test
cld
mov
(bad)
jae
loopne
adc
jbe
or
push
or
dec
scas
call
or
ret
add
and
jg
js
adc
je
add
push
std
test
xor
test
jo
sbb
test
je
mov
or
(bad)
cmp
out
jo
cmp
test
add
test
(bad)
mov
xor
add
mov
jg
mov
clc
add
and
repz
bound
test
and
mov
pop
adc
fst
add
fdiv
das
xchg
cmp
mov
push
adc
or
sub
cld
jg
clc
sub
(bad)
sub
cmp
jge
mov
mov
or
lea
and
mov
in
mov
aad
(bad)
lds
or
stos
stc
add
jae
lea
cmp
xor
mov
and
mov
xchg
iret
xlat
mov
fisttp
sub
jecxz
enter
(bad)
aaa
adc
movs
mov
leave
nop
hlt
cmps
rol
mov
sbb
sbb
cmp
dec
sti
xor
adc
push
pop
add
sub
cmp
jnp
fild
test
mov
mov
mov
(bad)
adc
mov
adc
and
mov
adc
sbb
or
mov
pop
cmp
or
cmps
(bad)
lock
cmp
movs
movs
mov
cdq
push
lods
or
dec
push
push
mov
cmp
popf
push
dec
popa
xchg
int3
sub
add
adc
or
gs
(bad)
sub
fdivr
mov
loopne
sub
add
cmp
adc
rcl
loope
pop
fcom
mov
sbb
clc
ins
test
mov
inc
stos
pop
int3
push
enter
rol
pusha
or
bound
inc
rcr
or
adc
jne
jmp
cmp
pop
cld
div
mov
add
mov
test
push
pop
mov
jecxz
jnp
lods
cs
pop
mov
sbb
jl
pop
je
pop
jmp
sub
test
sbb
inc
jle
(bad)
cmp
movs
sub
cmp
fmul
sbb
xlat
test
cmp
xor
imul
sub
push
adc
lea
and
push
ja
rol
(bad)
xchg
leave
jmp
repnz
push
(bad)
call
pop
pop
xor
sub
fwait
pop
xlat
loopne
dec
gs
pop
jne
mov
shl
int
clc
stos
jle
ja
pop
jo
cld
jbe
xchg
leave
push
push
mov
add
or
sti
mov
xcrypt-cbc
cmps
rol
jg
xor
pop
or
sysret
push
test
add
pop
inc
scas
shl
push
push
hlt
pop
cwde
or
xor
pop
add
popf
or
sub
or
clc
add
repz
and
mov
push
test
sbb
movzx
jmp
shl
jmp
inc
adc
ds
and
arpl
vmovaps
push
pop
pop
push
push
sbb
push
lods
sub
mov
scas
cmp
out
or
jno
push
and
lods
xor
(bad)
mov
mov
test
jne
test
ja
std
dec
push
ret
xchg
add
sahf
push
add
loopne
push
or
or
iret
(bad)
jge
das
xor
ret
das
inc
mov
pop
gs
pop
in
ret
cmp
add
or
dec
mov
mov
test
je
inc
cli
add
(bad)
cmp
test
jmp
mov
cmp
sti
cmp
push
clc
push
adc
push
aaa
or
shl
enter
pop
mov
mov
jle
(bad)
xor
rol
mov
add
scas
push
arpl
(bad)
loop
(bad)
(bad)
cmp
jl
(bad)
mov
loope
cmp
hlt
shl
add
loopne
fstp
adc
sub
mov
adc
add
jno
and
jo
jo
cmp
mov
cmp
stc
imul
data16
addr16
mov
jl
ret
hlt
cwde
fidiv
daa
add
pop
sahf
add
add
ss
mov
ficom
add
sub
pusha
dec
out
ret
sbb
mov
jge
fadd
lea
mov
sbb
cmp
mov
xchg
jle
inc
mov
add
mov
xchg
jmp
scas
shl
jmp
lods
fcomp
add
mov
jo
in
je
mov
sbb
rol
arpl
out
fisttp
xchg
not
ror
xor
out
popf
add
cmp
xlat
adc
and
or
aam
cmp
jge
aaa
das
adc
mov
mov
dec
sbb
out
jge
aaa
popa
add
les
mov
cmp
rol
mov
pop
aam
add
inc
call
je
add
xchg
je
mov
test
je
(bad)
out
pop
sbb
enter
or
mov
ret
push
jmp
pop
xor
add
ins
dec
mov
shl
(bad)
out
add
add
mov
dec
jle
out
xor
mov
rol
adc
int
cs
cwde
jbe
jecxz
ja
lock
sbb
or
jo
movs
cmp
mov
mov
xchg
jl
aas
jo
(bad)
and
data16
ret
push
push
push
or
add
pop
jne
xor
xchg
fldenv
outs
addr16
add
mov
xchg
add
jnp
xchg
loope
pop
jbe
mov
mov
and
jmp
cld
cmp
ja
je
sbb
rep
mov
and
rep
sub
sti
fild
inc
je
cld
lea
xor
std
xor
add
pop
add
dec
or
add
adc
and
cmp
out
(bad)
fist
jg
jnp
or
out
in
mov
jmp
cmp
xor
push
shr
rol
jmp
jne
jge
dec
mov
ja
cmp
sub
or
jmp
outs
idiv
leave
mov
gs
mov
mov
inc
inc
adc
ja
shl
pop
into
(bad)
push
test
test
clc
(bad)
adc
aaa
mov
div
push
add
(bad)
in
inc
add
add
and
(bad)
jmp
and
mov
inc
sbb
je
adc
dec
jmp
mov
inc
push
std
xchg
lea
mov
movzx
imul
add
(bad)
fild
or
shl
push
hlt
add
imul
jmp
lock
or
push
cmp
ja
sub
and
jmp
out
in
or
repz
pop
pop
cs
sub
or
inc
sbb
jo
movs
cmps
data16
(bad)
jg
cmp
jg
mov
jbe
mov
add
je
mov
jl
das
push
(bad)
std
jmp
dec
lahf
or
pop
mov
mov
mov
xor
lods
mov
sbb
cmp
pop
mov
mov
mov
or
lea
push
or
adc
aas
shl
dec
xchg
add
out
jge
clc
ins
jne
xor
push
inc
outs
fwait
popa
pop
sub
cmp
push
sbb
or
pop
cmovo
push
and
and
xor
addr16
bndstx
lock
mov
sbb
jecxz
push
sub
ret
mov
add
imul
ret
mov
and
outs
push
add
and
mov
inc
sbb
test
dec
jmp
cs
add
stc
cdq
or
shr
and
sub
call
mov
cmp
cwde
jecxz
xlat
push
push
lea
adc
loop
(bad)
jnp
(bad)
cmp
inc
cmp
dec
jne
dec
add
push
inc
lock
inc
out
fcmovb
mov
sub
ja
xchg
push
aaa
add
test
cmp
mov
loop
ror
cmp
inc
or
mov
jae
adc
cmp
inc
inc
jmp
push
xchg
sub
sar
pop
jp
sbb
jbe
cmp
loopne
sbb
or
lahf
and
adc
stos
cmps
lds
xlat
push
push
push
ficom
mov
pop
hlt
jmp
cmc
movs
clc
cs
ins
je
popf
mov
pop
mov
cmp
fiadd
shr
pop
mov
rcr
xor
fcomp
ss
iret
fnsave
clc
arpl
out
cmc
xor
mov
pop
neg
enter
iret
adc
cmps
mov
pop
shl
push
pop
push
xchg
inc
pop
test
cmp
mov
adc
push
dec
pop
mov
mov
loopne
mov
(bad)
push
dec
sub
pusha
cmovns
jmp
sar
loopne
(bad)
xor
jmp
cmp
cmp
cwde
in
add
pop
add
fist
sbb
push
test
(bad)
icebp
dec
std
jmp
mov
push
add
rcl
mov
push
push
push
in
push
or
and
retf
lock
mov
jae
sbb
(bad)
stos
or
jne
inc
imul
je
sbb
push
sub
push
fdiv
dec
push
pop
or
mov
push
gs
jae
punpcklbw
pop
cmp
xchg
xor
mov
das
ja
and
pop
xor
mov
inc
sbb
lock
loope
sbb
dec
shr
xor
xlat
push
mov
shr
je
mov
mov
cmp
jne
dec
je
cld
das
out
(bad)
in
mov
sbb
add
add
dec
jne
jmp
adc
gs
(bad)
jmp
add
or
or
dec
je
mov
cmp
jne
or
jle
add
cmp
cmp
jne
mov
dec
jmp
sbb
jbe
inc
out
js
sbb
adc
mov
jno
push
add
or
mov
ret
out
(bad)
lahf
push
sbb
je
dec
mov
paddd
sub
xchg
dec
pusha
and
loopne
xlat
(bad)
push
push
mov
in
push
mov
push
loope
std
mov
mov
shl
or
stos
push
xor
imul
inc
mov
mov
xchg
push
xlat
daa
sub
out
sbb
dec
ficom
psllq
jbe
add
sub
mov
pop
je
push
pop
out
adc
or
je
or
xchg
push
repnz
ret
sti
sbb
sbb
popa
adc
push
jle
add
sbb
inc
loope
int
mov
mov
bound
inc
bound
mov
xlat
out
mov
call
pop
xor
dec
adc
rol
push
adc
jl
idiv
sti
and
adc
jg
jmp
and
jne
dec
sub
das
jo
mov
sbb
mov
sub
cmc
sti
shr
je
sub
icebp
aaa
sbb
(bad)
inc
inc
lods
pop
mov
pop
int
(bad)
addr16
shr
sub
mov
sbb
sbb
or
cmp
mov
or
outs
xor
jg
loopne
pop
mov
cmp
cwde
pop
pusha
je
mov
push
fld
cmp
push
xchg
push
xchg
jne
daa
or
push
sbb
xchg
xlat
out
arpl
or
mov
test
push
test
xor
mov
pop
lock
mov
adc
sti
cli
add
xchg
cmc
clc
sub
ror
and
xor
sub
je
sar
ds
adc
jo
jmp
adc
lahf
and
ins
or
xchg
mov
sbb
pop
fdiv
sbb
sti
xchg
je
mov
jmp
out
cmp
jl
mov
fidivr
add
fnstcw
dec
and
add
cld
loope
add
mov
sbb
push
ja
rol
or
xor
hlt
(bad)
inc
mov
jmp
popa
iret
mov
cdq
xor
cli
jo
jmp
xchg
jg
icebp
ror
mov
inc
mov
stc
jge
ins
adc
pop
std
sbb
inc
mov
or
cmp
std
call
jmp
fnstcw
add
mov
adc
pop
inc
dec
jne
add
sub
retf
and
aaa
mov
push
cld
ins
inc
lds
push
mov
jle
inc
cmp
je
mov
or
sub
imul
pop
pop
je
xor
dec
and
mov
jmp
or
push
fabs
push
cmp
ja
lea
add
rcl
dec
(bad)
(bad)
jmp
jge
jmp
inc
shl
fdivr
js
pop
sub
jmp
inc
ja
add
inc
jmp
mov
fild
popa
jb
xchg
and
add
or
pop
sti
push
leave
in
stos
aad
xor
mov
pop
inc
enter
test
mov
add
nop
rcr
imul
jg
(bad)
stos
push
push
js
add
sub
retf
add
cli
jmp
or
rep
mov
pop
rcr
mov
xchg
adc
add
(bad)
icebp
cmp
nop
inc
mov
inc
jle
sub
gs
outs
jmp
aad
aas
push
sti
pop
ret
and
test
jg
(bad)
sbb
push
idiv
add
aam
dec
leave
or
or
mov
push
add
add
sbb
or
inc
out
mov
cmps
stos
pop
(bad)
repz
shl
jl
aaa
or
add
(bad)
jmp
dec
pop
lea
fld
leave
fucomi
pop
ins
call
pcmpeqb
mov
icebp
add
pop
push
and
cmp
dec
cmp
xchg
jge
mov
xor
pop
in
stc
sbb
jmp
fld
adc
out
add
or
adc
mov
(bad)
enter
inc
pushf
or
repnz
push
ret
mov
adc
stc
leave
dec
and
sbb
add
and
inc
mov
stos
addr16
mov
out
xchg
(bad)
xchg
and
mov
adc
outs
(bad)
repz
xor
leave
sbb
mov
cmp
outs
(bad)
out
fidivr
call
mov
bound
jg
das
inc
xlat
fadd
outs
xor
xchg
push
or
push
push
test
into
sbb
ror
mov
push
pop
test
enter
mov
jmp
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
pop
inc
fisttp
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
(bad)
(bad)
(bad)
(bad)
aad
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
(bad)
(bad)
jmp
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
jmp
inc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
inc
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
(bad)
(bad)
push
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
(bad)
inc
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
lahf
(bad)
push
movs
mov
popa
mov
and
addr16
repz
mov
sub
clc
(bad)
dec
test
les
outs
bound
xor
jmp
(bad)
into
push
xor
pusha
sub
sbb
add
and
(bad)
jmp
psrld
mov
cwde
nop
ds
movzx
adc
in
push
imul
test
inc
or
mov
dec
dec
push
push
std
(bad)
mov
mov
addr16
jmp
shr
mov
lds
fcom
push
fs
aas
dec
pop
loop
out
mov
int
clc
push
aas
call
es
or
mov
inc
push
push
inc
push
inc
(bad)
(bad)
(bad)
call
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
ins
jne
mov
jecxz
fldcw
iret
mov
dec
test
xlat
mov
mov
leave
mov
inc
rep
push
or
je
mov
inc
(bad)
dec
cmp
jne
dec
mov
xor
and
ret
dec
jne
inc
mov
loop
mov
push
inc
fsubr
add
pop
fstp
rcr
fld
ficomp
test
fmul
rcr
js
fsubr
ror
mov
pop
mov
fisubr
or
push
xchg
pop
adc
ret
jnp
sub
mov
or
push
cld
clc
dec
popa
(bad)
fcmovnbe
stos
mov
xor
push
shr
dec
rep
pop
(bad)
pop
out
(bad)
jo
ror
add
pop
fdivr
(bad)
inc
jmp
cmp
je
pop
mov
add
jae
fneni(8087
std
fbld
push
mov
mov
pop
sbb
cmp
fdivr
(bad)
mov
mov
mov
outs
sbb
sbb
pop
inc
xchg
jmp
stc
in
adc
(bad)
jb
psrad
and
dec
loop
pop
mov
rol
adc
(bad)
jno
xchg
dec
idiv
icebp
daa
loop
pop
clc
adc
mov
pop
mov
jge
sub
out
sub
sub
mov
xor
ficom
add
mov
sar
mov
push
add
pop
(bad)
mov
(bad)
cmps
cld
cmp
fsubr
mov
dec
setne
scas
or
jae
mov
lods
sbb
and
sar
push
int
sub
xor
in
(bad)
movs
jb
cmp
fisttp
or
jne
inc
ret
or
inc
inc
fcom
lds
push
or
add
jo
or
add
jle
lahf
cs
or
mov
or
inc
in
pop
add
sub
mov
pop
lock
out
mov
xchg
sub
mov
out
cmp
aaa
pop
outs
sbb
mov
cmp
push
out
mov
repz
or
pop
push
ins
xor
lds
ffreep
pop
data16
fist
test
mov
pop
push
pop
test
js
pop
popf
jbe
xor
mov
rcl
(bad)
inc
loope
add
sbb
add
dec
jne
(bad)
(bad)
sbb
add
sbb
jecxz
test
pop
out
dec
cmp
pop
mov
(bad)
cmp
adc
div
pop
repz
push
sti
jae
add
sbb
xadd
dec
adc
sbb
pop
fsubr
daa
pop
sbb
fcomp
sbb
jmp
jmp
in
push
pop
add
sahf
push
push
push
jg
cld
icebp
jnp
add
xor
dec
adc
mov
clc
test
sbb
add
cmp
or
add
inc
das
and
sub
cmps
cmps
xchg
mov
push
mov
push
retf
test
cld
push
ja
cmp
call
cmps
dec
das
and
sbb
out
jg
cmc
ret
out
push
push
and
pop
pop
scas
cmp
mov
hlt
(bad)
in
push
call
in
pop
aaa
mov
frstor
in
or
push
sbb
add
xlat
push
cmp
or
jae
cs
xlat
pop
neg
fist
and
sbb
jmp
add
sti
jmp
or
mov
add
add
addr16
adc
(bad)
adc
adc
loop
fdivr
mov
pop
sbb
(bad)
jecxz
pop
(bad)
mov
test
js
fist
inc
mov
pop
je
cli
retf
mov
mov
test
push
mov
adc
out
call
xor
js
cmp
xchg
ret
shl
jae
jbe
test
dec
inc
sbb
and
out
je
cmp
pop
ja
push
sub
adc
adc
add
add
lock
jo
dec
add
inc
inc
push
cmp
sub
lea
mov
or
fisub
mov
aaa
pop
add
inc
add
push
add
pop
mov
jecxz
imul
pop
mov
mov
inc
xor
mov
mov
dec
or
mul
and
jne
mov
pop
icebp
add
push
cdq
push
or
mov
xor
jno
mov
add
scas
stos
out
or
jb
add
clc
cmp
jne
lods
mov
(bad)
pop
outs
or
push
aam
mov
push
adc
cmps
rcl
or
sar
pop
pushf
sub
xor
inc
jmp
leave
and
lds
push
adc
lahf
adc
adc
ins
or
cs
push
mov
adc
test
or
cmove
arpl
loop
or
pushf
pop
jmp
test
ret
push
sub
call
inc
outs
or
mov
or
call
push
push
mov
pusha
cmps
js
and
sub
xchg
das
cmp
mov
inc
or
pusha
add
test
and
shl
mov
mov
mov
cmc
lea
jae
mov
ret
xlat
pop
lods
pop
mov
jmp
ret
xor
mov
lock
xor
or
inc
std
into
or
mov
add
(bad)
std
jg
je
cmp
push
sub
and
(bad)
(bad)
(bad)
cmp
pusha
add
sub
jb
je
jmp
cmp
cmp
out
cmp
repz
out
sbb
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
call
xlat
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
cmp
test
or
or
add
add
ret
push
mov
jg
ins
mov
je
push
outs
mov
or
sbb
sbb
jle
push
add
or
(bad)
ja
out
push
inc
cli
das
and
lock
or
sub
adc
adc
scas
fild
movs
mov
pop
(bad)
js
mov
mov
sbb
adc
sbb
cmp
(bad)
aas
fcom
mov
cmp
je
cmp
jne
aas
mov
xor
sub
stos
sbb
dec
mov
mov
test
and
jle
dec
mov
test
push
jecxz
fiadd
call
and
sti
out
inc
cmp
adc
jns
pop
fcom
call
pop
cmps
mov
test
pop
dec
mov
lea
push
inc
sti
cmc
loope
cmp
jle
add
sbb
ins
mov
mov
sbb
xor
cld
push
or
call
lahf
jge
mov
mov
jo
dec
pop
(bad)
jnp
cmp
sbb
add
aad
adc
add
pop
fdivr
dec
jne
pop
pop
mov
mov
inc
or
in
popf
mov
adc
js
mov
pop
stos
pop
sbb
push
mov
xchg
test
add
mov
daa
mov
sti
mov
dec
(bad)
(bad)
rcl
sti
pusha
pop
inc
mov
fst
xchg
adc
aas
inc
shl
xlat
scas
push
cld
jnp
xchg
rol
sbb
jp
cli
not
ja
add
or
movs
pop
leave
inc
mov
push
pop
inc
xor
cmp
rcr
cmp
push
jl
mov
sbb
push
push
xlat
xor
add
inc
inc
pop
ret
mov
sub
pop
cwde
adc
cmp
mov
lock
add
mov
pop
cmp
push
cmp
adc
xlat
imul
rcl
and
ins
fwait
sbb
xchg
xor
sbb
mov
cwde
es
cmc
xchg
jecxz
xor
add
mov
add
imul
sbb
fdiv
inc
adc
icebp
je
es
add
jns
ins
pusha
pusha
xor
add
or
mov
xchg
adc
cs
fisttp
push
mov
loope
pop
or
bound
jo
dec
pop
sahf
jmp
ror
out
jg
mov
dec
jl
lock
clc
outs
xchg
mov
adc
mov
push
or
imul
dec
jne
sahf
dec
and
inc
jg
aas
out
mov
cmp
pop
pop
dec
sbb
sbb
add
ins
xchg
adc
xchg
fidiv
or
cmps
inc
cld
sar
add
loopne
push
retf
mov
xor
push
cld
data16
clc
in
and
push
pop
lock
(bad)
clc
das
stc
mov
dec
lock
cdq
or
mov
cmp
and
or
aaa
mov
cmp
fsub
xor
push
dec
push
push
adc
mov
call
pop
xchg
enter
jo
sub
push
rol
cld
rcl
or
cli
jg
xor
add
sub
inc
test
jbe
xor
call
jbe
movhps
mov
jne
cs
inc
jnp
fistp
retf
fcomp
mov
sbb
add
cmp
inc
inc
out
push
or
add
xchg
and
cmp
je
sub
add
sbb
add
add
fabs
dec
jmp
push
cmp
call
or
push
push
data16
in
in
mov
or
add
add
pop
loopne
mov
inc
xchg
nop
push
cdq
xlat
add
mov
push
scas
jne
not
pop
add
pop
pop
xor
mov
and
pop
cld
dec
icebp
xlat
std
adc
fnstcw
or
cmp
(bad)
xchg
cs
add
jo
rcl
je
cld
xchg
mov
push
cld
add
cmp
pop
mov
inc
dec
and
dec
fldenv
cs
ficomp
out
popa
add
pop
cmp
mov
dec
cmp
lahf
lods
scas
ror
inc
mov
(bad)
fs
movs
mov
xor
add
pop
pop
scas
fcomp
das
jnp
dec
clc
mov
mov
jmp
(bad)
push
push
cmps
xor
(bad)
xchg
adc
loope
aas
add
inc
pop
outs
in
ja
or
inc
cld
cmp
and
xchg
adc
clc
mov
mov
aas
shl
push
add
dec
jmp
adc
push
ret
inc
pushf
sbb
into
sbb
lock
dec
jne
jns
or
cmp
adc
pop
lea
jo
and
jmp
iret
icebp
cmp
sub
or
shr
ret
jb
lock
ja
add
push
shr
push
mov
cdq
jg
in
dec
dec
add
pop
dec
add
add
dec
in
jl
adc
lea
push
cmp
cmp
xchg
inc
pop
mov
or
sahf
jmp
and
shr
or
addr16
aam
adc
fwait
add
ret
mov
xlat
xchg
jge
or
je
xlat
mov
lahf
mov
adc
leave
jae
sbb
inc
repnz
mov
pop
mov
scas
cmp
(bad)
sub
mov
lock
jmp
dec
jl
cmp
jge
sub
(bad)
jl
push
jg
call
push
add
xor
jmp
push
push
aad
adc
jmp
mov
ret
lahf
aaa
inc
gs
int3
cmp
call
xchg
stc
jge
popf
jle
sub
(bad)
jle
inc
call
stc
add
lea
inc
dec
je
pop
sar
push
cmp
xor
pop
jge
daa
mov
push
test
sbb
(bad)
test
mov
cmp
inc
add
shl
pop
pop
pop
dec
(bad)
loope
test
xor
and
ins
cdq
jle
das
and
pop
mov
std
jne
sub
js
ffreep
or
pop
or
xor
jl
jo
jae
jmp
aaa
cmps
cmps
or
cli
cwde
cmp
repnz
rol
in
daa
push
aad
mul
retf
(bad)
call
mov
inc
and
cmp
push
add
in
mov
push
push
dec
push
sub
inc
push
push
push
sub
add
xor
jmp
pop
mov
cmp
call
cs
mov
push
inc
add
in
das
data16
ds
pop
pop
in
scas
rcr
jle
sub
sub
xchg
pop
jb
in
inc
in
shr
scas
fimul
dec
push
aaa
cld
jb
das
int3
(bad)
pop
push
mov
and
imul
add
ret
push
outs
add
and
pushf
add
sar
add
add
je
jg
shr
mov
mov
cmp
sub
cmp
popf
mov
push
add
jno
inc
adc
jle
ds
jle
popa
leave
mov
aas
scas
(bad)
mov
jp
xlat
pop
sub
scas
adc
(bad)
iret
je
and
rol
push
push
inc
imul
jmp
jno
pop
cbw
and
push
cvtps2pd
or
ret
mov
aaa
or
cmp
jge
pop
dec
cmp
fs
call
sub
cmp
sub
mov
rol
in
dec
or
pusha
nop
mov
loope
push
daa
cwde
xor
xchg
stos
sbb
adc
jo
dec
shr
pushf
daa
jmp
push
mov
pop
lea
mov
lock
sbb
lea
or
jno
pop
inc
pop
stos
jg
xchg
jmp
fistp
not
sbb
(bad)
ja
cmp
(bad)
jg
cld
je
cmp
je
aaa
xor
je
cmp
dec
jb
outs
std
cmp
je
mov
rcr
out
daa
add
adc
stos
dec
pop
or
adc
jmp
push
mov
mov
int
jbe
loopne
pop
cs
cs
adc
cmp
pop
mov
mov
xor
scas
aaa
cmp
rol
xor
out
mov
push
test
xor
ds
pop
jbe
test
faddp
xchg
jnp
add
mov
clc
popf
jg
and
pop
jne
mov
lahf
ja
dec
jo
xor
push
jmp
daa
(bad)
push
inc
pushf
loope
enter
jmp
inc
and
sar
in
jmp
test
lock
test
icebp
jmp
cmps
pop
dec
cwde
mov
adc
fs
into
or
jmp
or
ror
pop
outs
cld
test
clc
push
pop
add
sar
add
cwde
sbb
push
out
pop
and
daa
xor
or
je
xchg
xchg
xchg
dec
or
jo
adc
iret
adc
mov
pop
aad
push
pop
jl
adc
add
std
imul
jge
ds
lea
in
mov
(bad)
jg
mov
je
cwde
or
xor
jmp
arpl
mov
and
(bad)
arpl
inc
sbb
mov
pusha
adc
xor
dec
loopne
and
pop
test
test
pop
shl
sbb
xlat
xchg
cld
add
pop
adc
repnz
adc
inc
push
popa
jge
test
xchg
pushf
frstor
jmp
pop
dec
jne
lds
mov
inc
pop
ds
jp
loopne
pop
cmp
adc
data16
mov
les
cmp
cmp
or
ja
shl
sti
add
add
inc
jmp
(bad)
mov
mov
inc
cmp
add
in
leave
fisttp
or
popa
jo
jo
adc
in
pop
imul
ja
nop
xchg
xchg
jo
out
and
jecxz
xchg
ret
inc
sub
es
and
push
pusha
cmp
sub
push
call
mov
fbld
push
jp
data16
or
push
mov
(bad)
mov
cmp
jne
add
fidivr
out
pop
movs
out
test
inc
daa
lock
jmp
fs
inc
push
jo
js
inc
push
sbb
je
sbb
cwde
jnp
arpl
scas
outs
add
sbb
dec
jnp
ret
inc
mov
nop
inc
push
mov
mov
sar
rol
xor
xor
jnp
clc
fs
add
call
push
scas
lock
inc
lock
adc
sbb
fistp
or
or
je
vmwrite
in
push
loopne
neg
imul
fisubr
fst
shl
fild
pop
(bad)
fisttp
xor
shl
rcl
rcl
rcl
cmp
and
cmp
jb
sub
sbb
inc
loop
pop
test
lds
mov
repz
pop
test
das
sub
mov
data16
adc
inc
fwait
and
inc
cli
xchg
xchg
clc
repnz
add
add
push
and
outs
sti
xor
inc
jl
pop
std
mov
shl
or
movs
pavgb
outs
aas
ror
cld
aas
lods
rcl
jmp
lock
pop
ret
mov
or
or
ja
dec
mov
inc
cmp
ja
add
pop
add
mov
mov
inc
jmp
cmp
or
je
cmp
fiadd
retf
int3
mov
pop
retf
inc
xor
(bad)
pop
rol
adc
stc
push
jb
icebp
aad
iret
out
cmp
dec
mov
jmp
sbb
jmp
aas
mov
movs
push
xor
or
jb
jmp
(bad)
fild
in
jl
and
jbe
jmp
jg
mov
or
(bad)
cdq
int
adc
movs
sbb
pinsrw
add
ror
mov
inc
xor
ror
inc
push
dec
push
jmp
push
(bad)
push
sub
push
pushf
enter
xor
ror
lock
dec
pop
lahf
adc
int3
cs
jg
mov
or
add
sub
je
and
mov
add
or
xchg
shr
setl
cmp
and
outs
shl
add
ror
(bad)
sub
cs
xchg
(bad)
mov
mov
ss
enter
ins
test
dec
in
mov
dec
xchg
loopne
pusha
xor
push
clc
mov
test
test
jg
mov
mov
mov
sbb
cmp
xchg
or
outs
movs
and
(bad)
pop
push
out
aas
icebp
pop
inc
add
test
mov
or
xor
sbb
clc
(bad)
test
call
inc
out
fsubr
pop
cmp
je
and
shl
(bad)
mov
jne
mov
cmp
jge
loope
(bad)
cmp
imul
lock
xchg
mov
push
in
xchg
std
jge
mov
pop
dec
stos
xor
pop
test
lock
in
xchg
jge
or
xchg
(bad)
sub
test
push
sub
push
cmp
(bad)
fadd
sub
push
dec
rol
cmp
push
fmul
add
in
adc
cmp
ja
lock
jg
ja
test
cmp
jle
lock
ret
pop
cdq
or
xchg
dec
jno
and
repnz
add
or
jp
and
or
enter
in
push
mov
mov
sub
(bad)
pop
cmp
mov
dec
mov
(bad)
aad
in
rcl
push
clc
outs
push
in
mov
add
or
out
lock
pop
mov
into
out
fstp
clc
add
std
adc
loop
repnz
xor
jle
nop
addr16
inc
or
adc
mov
hlt
pop
jns
imul
shl
xchg
hlt
jo
sbb
xor
hlt
add
data16
sbb
xor
(bad)
jo
(bad)
pop
xchg
dec
push
xchg
fiadd
push
test
sub
pop
rol
mul
or
adc
xor
or
xchg
cs
lock
les
cli
dec
jne
aas
lds
fimul
aam
std
inc
pop
sub
adc
mov
clc
das
scas
(bad)
adc
dec
push
push
push
mov
inc
movs
pop
pop
dec
scas
push
dec
popf
mov
in
sbb
lods
mov
lock
inc
sbb
push
inc
dec
test
cli
cmp
cmp
mov
mov
mov
push
ins
mov
cmp
xor
jne
arpl
sub
xor
mov
icebp
mov
hlt
mov
dec
xor
lock
hlt
aad
xor
ret
jmp
pop
(bad)
pop
cmp
mov
cli
arpl
out
push
xchg
mov
sbb
adc
push
mov
scas
std
gs
inc
push
nop
fimul
inc
js
sbb
push
lods
and
rol
sbb
lods
jp
sub
aam
sbb
in
mov
pop
jne
add
dec
mov
cmp
idiv
sbb
in
in
jne
std
cmc
jecxz
(bad)
fcmovnu
sub
iret
cli
sub
fcmovb
and
(bad)
sub
adc
cld
cdq
adc
jg
fiadd
push
(bad)
mov
jle
add
(bad)
pop
dec
je
jmp
ins
or
xor
inc
lea
fsubr
sti
idiv
cmp
test
sub
dec
push
je
in
fdivr
push
jmp
push
push
mov
mov
jb
cli
mov
xor
cs
ins
dec
inc
gs
outs
pushf
push
fdivr
sub
popa
ins
gs
outs
loopne
or
jecxz
mov
inc
out
and
push
sub
into
bound
add
cmp
and
and
mov
mov
popa
cmp
adc
or
inc
jo
mov
out
inc
imul
aas
into
fadd
aaa
cmp
repnz
jl
inc
enter
das
sti
and
(bad)
xor
jnp
add
mov
jno
dec
cmp
rep
adc
out
jmp
mov
sbb
mov
in
mov
cmp
stos
pop
cmp
jne
adc
mov
sbb
ret
or
push
ins
fbstp
lock
das
pop
push
xchg
mov
xor
cmc
add
mov
mov
ja
data16
popa
jb
aaa
xchg
pop
in
(bad)
mov
jae
aaa
adc
inc
cwde
push
in
out
cwde
cmp
or
mov
add
push
jmp
repnz
adc
mov
mov
or
mov
cs
mov
out
pop
pop
adc
daa
mov
icebp
sbb
add
retf
add
pop
jo
mov
inc
dec
pushf
push
cmp
cmp
jnp
cmp
arpl
mov
mov
jmp
xor
mov
(bad)
xchg
jne
in
or
jbe
or
push
int3
sbb
mov
gs
stos
adc
out
(bad)
imul
cmp
out
(bad)
cld
mov
pop
mov
dec
jo
cld
adc
push
cld
jne
jb
cmps
pusha
sbb
ret
enter
mov
call
sbb
xchg
dec
push
add
push
sbb
loope
(bad)
stc
add
sbb
inc
loopne
je
sbb
pop
add
sahf
lods
nop
push
and
or
push
xchg
adc
sub
ret
mov
sub
cmps
sub
je
aaa
(bad)
and
or
cmp
adc
fwait
mov
popa
fistp
push
mov
lea
adc
les
sbb
sbb
add
jp
sbb
mov
in
mov
mov
xor
add
adc
dec
inc
cmp
ja
mov
inc
jmp
cmp
or
lea
cmp
ja
fcmovb
jmp
or
mov
sti
(bad)
sbb
adc
and
sbb
and
retf
mov
xor
and
cwde
pop
popa
rol
jnp
mov
add
add
add
mov
and
sbb
ja
ds
pop
add
cmp
lea
or
pop
rol
mov
and
test
mov
cs
psubd
cdq
xor
test
rcl
xchg
sti
mov
inc
test
je
sbb
sti
shl
adc
ja
and
adc
idiv
pop
add
jne
add
loop
shl
or
outs
inc
fimul
dec
dec
cld
mov
inc
sti
push
adc
fwait
xlat
or
xor
ins
adc
dec
cmp
add
and
inc
ja
neg
jb
mov
ret
and
cmp
adc
mov
je
xor
rol
and
es
cmp
fimul
xor
or
jbe
inc
mov
add
test
imul
mov
fbld
push
add
fcomp
mov
adc
pop
adc
mov
rol
retf
inc
push
and
sahf
pop
pop
inc
push
sbb
mov
(bad)
fcom
dec
outs
jmp
adc
sbb
inc
sub
les
cmp
xchg
ds
xchg
cmp
inc
in
jb
ret
aas
test
mov
cwde
inc
clc
and
jns
inc
in
cmp
js
xchg
cmp
mov
cmp
adc
sub
pop
jbe
mov
and
lahf
fiadd
jecxz
adc
add
cmp
(bad)
sub
add
mov
loopne
mov
mov
or
push
pusha
cmp
pop
mov
inc
ret
push
and
mov
or
loopne
shl
adc
mov
jg
xchg
push
sub
add
add
inc
rol
add
mov
dec
test
nop
ins
repz
dec
mov
adc
rcl
shl
jp
popa
mov
add
mov
xor
jbe
sbb
add
sar
push
out
mov
xor
sub
das
bound
add
add
pxor
push
push
ss
mov
lahf
(bad)
leave
jne
fs
bound
jns
push
or
ret
mov
fcmovnb
mov
xor
push
enter
mov
dec
adc
cmp
fdiv
imul
in
cmp
imul
push
xor
ret
push
ja
aaa
sub
and
ins
jb
and
sbb
loope
or
ins
paddusb
aam
cmp
and
mov
inc
push
cwde
xchg
nop
nop
inc
push
sbb
cmp
fs
je
ins
push
fs
pop
fs
inc
push
pop
push
push
nop
inc
push
sbb
inc
push
sbb
cmp
sbb
xor
sbb
and
sbb
nop
inc
push
sbb
nop
inc
push
sbb
add
pushf
sbb
add
loope
hlt
push
xor
and
in
mov
fs
inc
dec
mov
test
xchg
jge
inc
pop
xchg
or
fisub
lods
push
or
xor
mov
push
mov
popf
and
in
ins
and
and
or
enter
hlt
or
enter
div
enter
stc
cli
enter
sti
cld
std
and
loopne
or
enter
in
xor
and
out
xor
and
and
and
rol
rcl
aam
xor
and
(bad)
xlat
xor
and
and
and
rol
ret
les
enter
(bad)
xor
and
and
and
mov
or
enter
mov
xor
and
and
and
and
mov
mov
inc
mov
sub
int3
add
push
add
(bad)
jo
retf
xchg
or
jmp
daa
or
arpl
sub
fs
inc
pop
ds
js
imul
inc
dec
gs
jo
nop
inc
xchg
nop
mov
inc
or
dec
jne
dec
dec
gs
outs
jb
pop
in
and
mov
imul
or
outs
mov
cmp
scas
cmp
mov
xchg
jp
je
popa
ins
scas
xchg
scas
scas
xchg
or
jno
mov
hlt
mov
hlt
or
sbb
push
leave
sub
ds
test
jmp
inc
imul
outs
nop
movs
pop
adc
popa
outs
addr16
scas
cld
stc
xchg
pop
and
jb
ins
outs
ja
jns
mov
je
pop
je
lods
cmc
mov
dec
in
gs
nop
or
inc
repnz
dec
outs
jbe
ins
imul
ret
or
or
ins
enter
jle
gs
scas
pusha
push
ror
inc
mov
ds
clc
not
nop
adc
xchg
nop
pop
adc
mov
push
outs
imul
scas
pop
ds
or
aam
or
jae
enter
adc
enter
dec
mov
and
xchg
pop
clc
adc
inc
inc
arpl
jae
add
jae
adc
push
test
and
xchg
ja
ja
in
adc
mov
fsubr
fmul
inc
push
je
arpl
sbb
adc
nop
cmp
cmp
sbb
and
je
ins
inc
adc
push
xlat
nop
scas
ds
bound
adc
in
adc
mov
das
fimul
mov
dec
jns
sub
mov
sbb
cmp
jns
test
test
cs
or
jo
mov
mov
add
and
rcl
push
stos
and
lods
push
pop
scas
ds
scas
adc
arpl
je
pop
mov
jle
add
xor
pop
dec
invd
pop
jl
add
push
inc
ins
jae
cwde
add
xor
add
and
addr16
popf
js
push
xchg
xchg
cmps
mov
push
push
push
xchg
pop
dec
fadd
rcl
(bad)
xchg
xor
xor
enter
aam
aam
shl
pop
and
shl
and
pop
in
cmp
xor
aas
pushf
lods
stos
jge
push
dec
jne
push
mov
and
jmp
(bad)
pop
or
outs
arpl
cmp
gs
outs
popfw
test
add
jl
hlt
xchg
xor
mov
adc
int3
test
push
or
not
pop
mov
xor
fmul
cmps
ds
and
hlt
call
mov
ja
add
mov
inc
inc
dec
ja
fist
pop
jmp
cmps
retf
jg
dec
loop
shr
add
cmps
jne
mov
jne
inc
mov
pusha
dec
sub
or
cld
mov
cmp
mov
movs
cmp
dec
je
mov
pop
dec
jge
or
jp
outs
mov
std
std
aas
iret
(bad)
(bad)
out
and
sti
je
movzx
add
and
(bad)
cmps
rcr
mov
xchg
scas
mov
push
or
ins
add
push
xchg
jne
movaps
cmc
in
add
adc
lods
mov
pusha
outs
add
lock
mov
sub
mov
retf
sti
jb
sub
je
(bad)
jae
cmp
sub
les
push
dec
in
into
adc
je
(bad)
jae
mov
dec
jne
and
inc
add
mov
or
adc
nop
mov
js
xchg
mov
xlat
and
push
or
mov
cmp
addr16
and
pop
hlt
mov
aad
mov
pop
sbb
mov
jo
add
adc
pop
(bad)
push
in
mov
sti
aam
imul
cmp
movs
in
jo
test
push
in
int
mov
inc
sahf
adc
imul
pop
sbb
sub
or
mov
loopne
push
ja
jnp
loop
or
cli
inc
ja
jno
int3
or
pusha
xor
push
sar
add
and
outs
lgs
lods
sbb
mov
pop
int3
jp
mov
inc
sbb
into
outs
ins
(bad)
push
adc
punpcklbw
cmp
dec
pop
aam
xchg
inc
in
pushf
les
mov
pop
mov
nop
or
sub
sbb
int3
fwait
inc
or
sahf
(bad)
and
fld
dec
retf
hlt
cs
cld
lods
push
inc
sub
sahf
pop
xchg
adc
jo
jle
adc
sahf
mov
jne
jbe
enter
out
mov
push
cs
dec
inc
cld
mov
cli
add
loop
xlat
jo
inc
add
xchg
inc
inc
pop
sbb
sub
cmp
cld
mov
jmp
pop
mov
add
jg
out
iret
(bad)
mov
sbb
shl
push
inc
mov
mov
mov
pop
shl
pop
cmp
push
je
lahf
into
sub
lock
pop
hlt
aas
int3
lods
cmps
clc
cld
adc
cld
imul
dec
(bad)
inc
call
cmp
mov
push
adc
jmp
daa
push
repnz
ret
xor
adc
in
mov
adc
cmp
retf
pop
mov
cmps
adc
(bad)
push
push
xor
loopne
mov
mov
dec
fwait
xor
adc
ret
and
retf
dec
popa
add
cmp
mov
mov
sbb
xchg
add
jae
ins
sti
mov
pop
pop
pop
addr16
(bad)
mov
ins
not
and
repz
mov
mov
rcr
jbe
dec
jmp
or
add
(bad)
and
adc
cmp
cli
jmp
je
pop
xchg
retf
shr
jle
or
inc
(bad)
jae
retf
add
dec
imul
mov
push
dec
je
and
pop
or
jle
sub
jbe
sbb
lods
les
mov
das
mov
add
inc
(bad)
jmp
adc
adc
xor
mov
inc
shl
js
imul
dec
sbb
mov
in
add
into
jg
fmul
sahf
pop
shl
add
cmp
pop
mov
bswap
cmp
gs
psubsw
retf
mov
imul
cmp
add
add
push
and
xor
popa
add
sbb
(bad)
push
jne
jbe
mov
or
mov
iret
cmps
add
loopne
push
sahf
cmp
and
or
jne
mov
push
retf
push
ja
sub
jmp
jns
(bad)
call
add
fcmovnu
lods
retf
cmp
jne
das
hlt
and
lods
jmp
xchg
jbe
push
pop
mov
inc
mov
sub
mov
inc
je
pop
inc
lock
fild
jecxz
xchg
or
retf
add
movs
xchg
pop
inc
fcomp
sti
ret
loopne
outs
or
pop
mov
jmp
sub
jb
cmp
ja
lock
cmc
cmp
or
movzx
add
and
mov
out
in
dec
dec
cmp
ja
cld
mov
mov
jl
rcr
dec
jmp
ret
and
mov
fsubr
jg
ja
push
pop
pop
jne
lea
mov
fwait
push
fwait
idiv
add
and
sbb
pop
push
add
mov
sub
xchg
pop
lods
pop
mov
cs
xchg
addr16
push
pop
sub
xchg
stos
aas
js
mov
sar
shl
adc
pop
jle
push
add
stc
inc
je
or
sub
int
sti
pop
or
and
inc
(bad)
je
neg
add
xor
jne
mov
inc
dec
mov
ret
test
jmp
scas
push
mov
cli
fisttp
adc
pop
xchg
mov
mov
push
push
add
dec
mov
out
or
jne
loopne
hlt
jno
scas
pop
cmp
in
repnz
dec
jbe
pop
jbe
mov
ret
pop
aas
sub
and
test
shr
adc
neg
and
cs
lahf
and
xchg
imul
lahf
outs
cmps
stc
push
push
mov
les
ret
icebp
outs
cmp
jbe
mov
adc
imul
dec
xor
inc
mov
sti
std
retf
cli
jmp
mov
mov
jne
aas
mov
je
cld
call
pop
movs
and
jge
ja
sub
sbb
popf
mov
cmp
ja
mov
outs
adc
add
add
mov
mov
adc
dec
jnp
ds
sub
inc
fdivr
and
inc
mov
cmps
mov
(bad)
std
xchg
icebp
ins
mov
inc
je
mov
or
add
imul
add
repnz
jnp
std
sbb
push
repz
mov
jbe
mov
fdiv
jne
xchg
adc
mov
mov
jns
unpckhps
cmps
add
push
sbb
xchg
jge
loopne
xor
ret
add
and
pop
push
ds
fstp
or
cmp
sub
or
in
cmps
and
dec
pop
adc
or
push
nop
fsub
les
dec
loop
adc
in
push
jns
xchg
test
bound
pop
pop
or
inc
shl
mov
sbb
(bad)
clc
dec
cld
lea
clc
out
ja
out
or
inc
or
xchg
dec
cmp
jl
jmp
add
test
call
or
cdq
stos
push
lea
or
xchg
dec
cmp
xchg
into
mov
ret
push
xor
stos
or
pop
sbb
sub
or
jge
sub
jmp
or
or
dec
mov
mov
in
or
jg
dec
test
stos
cmp
jne
pop
pop
(bad)
aam
pop
icebp
inc
jmp
sti
mov
inc
push
stc
cdq
sub
hlt
mov
repnz
mov
imul
adc
inc
add
sbb
add
scas
sbb
push
fnstcw
xor
cs
retf
lds
dec
mov
leave
(bad)
jl
data16
or
pop
sub
add
jnp
cs
lea
push
icebp
daa
fdiv
movs
jmp
cmp
pop
pop
adc
fidiv
or
mov
add
sbb
adc
js
pop
jne
or
rol
cld
rcr
inc
daa
and
xor
push
shl
mov
inc
dec
int
or
ins
adc
push
pop
mul
div
ret
std
mov
aam
loop
cld
lahf
xchg
or
sbb
sbb
dec
stos
cli
sti
loope
addr16
mov
stos
neg
sbb
stos
jmp
fstp
cmps
mov
stos
loop
push
adc
push
pop
pop
loope
pop
inc
clc
dec
cmp
in
mov
in
mov
dec
pop
not
ins
(bad)
jp
sub
fild
add
mov
mov
mov
mov
in
ins
xor
jl
fisttp
adc
mov
popa
push
sub
je
mov
cmp
dec
aaa
div
mov
inc
test
jne
pop
push
mov
call
outs
pop
sti
add
je
inc
jne
pop
xor
xchg
repz
add
repnz
jbe
mov
push
lea
sar
rol
inc
je
push
push
cmp
(bad)
jo
xchg
or
ret
cmp
mov
pop
pop
inc
loop
push
mov
add
test
add
(bad)
xlat
and
inc
add
and
and
adc
and
xor
idiv
sub
inc
sub
sub
imul
mov
sub
sub
mov
sub
sub
sub
cdq
call
loopne
shl
push
je
(bad)
ins
jge
jle
adc
push
inc
(bad)
ret
test
dec
push
imul
jo
cmp
inc
call
push
cmp
cs
imul
sbb
arpl
adc
out
mov
fabs
push
cdq
and
(bad)
mov
cmp
fcomp
fstsw
fwait
mov
test
je
fidiv
cmp
pop
fbstp
lea
mov
sub
das
push
(bad)
aas
cdq
shr
and
add
pop
aas
jmp
aas
and
ffreep
stos
mov
add
jns
fdivr
jge
(bad)
jg
or
or
cmp
jb
mov
dec
add
in
js
dec
and
ja
jmp
mov
popa
sbb
xor
jmp
mov
xor
std
push
pop
not
cmp
jmp
jno
add
pushf
out
or
fs
sub
sbb
test
jle
call
outs
pop
jle
push
adc
push
inc
sub
mov
loope
(bad)
mov
or
sbb
inc
loopne
push
in
ins
js
adc
cli
cmp
or
fidiv
dec
push
push
das
dec
sbb
push
call
and
jne
dec
xor
cmp
mov
cmp
jmp
dec
adc
sub
(bad)
dec
cmp
js
cmp
div
pop
jmp
jo
loopne
mov
sbb
dec
rol
pop
sub
test
mov
pop
adc
add
mov
mov
sub
jb
or
pop
or
sub
add
fwait
leave
icebp
adc
mov
daa
mov
fild
inc
mov
mov
dec
lea
or
add
mov
inc
addr16
push
push
mov
dec
push
pop
add
push
call
cld
dec
jmp
popf
adc
fadd
push
bound
dec
mov
add
fsubr
enter
dec
push
add
add
fdiv
fidivr
adc
or
or
mov
inc
jbe
lea
dec
retf
data16
das
int
add
lock
push
pop
jl
lock
aaa
dec
daa
imul
aam
cmp
scas
shl
xchg
addr16
lock
push
in
ins
push
xor
lods
push
or
in
dec
call
ss
call
int
fisttp
test
mov
jmp
sub
adc
idiv
xchg
adc
sti
pop
je
xchg
cmp
hlt
fst
or
adc
jo
add
mov
xchg
xor
xchg
sub
push
cwde
in
fdivr
inc
(bad)
sub
sbb
ins
adc
mov
mov
add
jmp
inc
jmp
in
add
es
retf
xor
mov
mov
nop
fcmovne
ja
xor
or
add
pop
push
push
test
xor
cmp
add
test
push
xchg
add
adc
push
stos
pop
sbb
mov
xor
push
pand
xchg
pop
call
pushf
xchg
or
xchg
dec
clc
test
add
mov
mov
or
repz
xor
nop
xor
sbb
jmp
je
sub
je
sbb
dec
scas
ret
sbb
pop
lock
cmp
dec
cmp
jle
add
stos
push
sbb
bt
daa
xchg
or
mov
or
lods
add
jle
mov
ja
ret
and
inc
pop
cmovnp
pop
fdivr
jle
mov
add
xchg
adc
add
jmp
mov
mov
je
push
imul
inc
cmps
fs
in
jle
enter
in
sub
outs
aaa
jge
mov
push
cmp
addr16
push
sbb
out
in
test
mov
sub
lods
and
add
lock
sbb
outs
sub
jo
(bad)
test
cmp
fisubr
test
icebp
jecxz
mov
in
cld
cmp
aas
out
loopne
aam
xchg
sbb
aaa
scas
lock
(bad)
xor
jmp
mov
popf
fs
dec
mov
hlt
mov
mov
inc
pop
repz
pop
dec
gs
sbb
mov
add
mov
mov
pop
arpl
and
dec
or
adc
cs
cmpxchg
out
pusha
(bad)
stos
inc
add
sbb
and
xchg
out
retf
jnp
pop
sub
pop
sbb
lods
add
xor
push
and
mov
xor
fimul
mov
fstp
sbb
sahf
clc
push
lea
mov
or
ja
or
int
mov
push
or
dec
and
data16
out
mov
or
mov
fimul
pusha
sbb
xchg
adc
push
mov
or
dec
in
jo
xchg
sbb
inc
mov
xor
lds
and
loopne
adc
or
sub
push
and
inc
xor
sbb
aad
ror
dec
lea
mov
add
in
test
jmp
sub
adc
ret
pushf
imul
xor
inc
(bad)
or
mov
xchg
sti
adc
ja
add
mov
add
nop
mov
xor
add
inc
repnz
xchg
xchg
adc
mov
inc
add
cmp
adc
mov
sub
enter
push
test
arpl
add
xchg
lahf
add
pop
xor
mov
cld
jnp
inc
cmp
sbb
loope
imul
cwde
jno
sub
sbb
push
sub
sti
add
cmc
or
mov
pop
cli
and
dec
cwde
dec
push
popa
and
leave
add
(bad)
mov
push
sar
retf
adc
jmp
jl
adc
cmovo
dec
add
pop
sbb
sbb
out
dec
pusha
(bad)
or
pop
fsubp
adc
ret
out
xor
cld
stc
cmp
nop
pop
sbb
cdq
jmp
retf
outs
cmp
or
push
cmps
fdiv
inc
call
or
jge
clc
push
in
psubw
xchg
push
loopne
adc
dec
loopne
mov
js
int3
adc
loopne
adc
and
jmp
lahf
mov
ins
ins
add
ja
mov
loop
add
mov
mov
cld
add
in
imul
enter
pop
push
(bad)
nop
aas
xor
dec
je
jmp
xor
inc
xchg
lahf
xchg
inc
xor
xchg
in
fwait
and
add
mov
add
xchg
gs
or
or
push
push
(bad)
(bad)
shl
lds
out
fstp
xchg
sahf
nop
outs
test
xchg
xor
or
nop
pop
xor
fwait
into
pop
add
icebp
icebp
cld
cmp
movaps
loope
push
inc
enter
inc
loopne
ds
cmp
mov
push
jge
nop
test
add
inc
test
aaa
icebp
scas
cmp
mov
jg
dec
sub
lea
cmp
push
dec
ror
arpl
jae
or
div
repnz
enter
shr
ffree
popa
xchg
or
push
outs
fdiv
xor
xchg
jge
mov
daa
and
and
stc
sub
add
dec
push
dec
daa
add
sub
xchg
mov
push
push
shr
push
mov
push
lock
pushf
cld
out
jecxz
mov
std
sub
jb
or
aad
and
cmp
mov
ret
je
test
xor
dec
mov
mov
lock
or
leave
dec
jb
adc
sbb
adc
push
jnp
aaa
movs
jns
pushf
lock
jmp
lods
sub
je
nop
daa
dec
sbb
nop
and
imul
jne
or
out
mov
mov
lods
stc
jl
and
fcomp
mov
jmp
inc
and
cmp
fidivr
and
mov
add
pop
ret
mov
or
adc
or
daa
cli
fwait
or
repnz
adc
adc
mov
fmul
adc
in
and
and
adc
test
push
pop
sub
lds
icebp
xchg
pop
pop
xor
or
shl
repz
daa
mov
add
aam
mov
popa
cli
xchg
ins
mov
mov
aaa
push
ja
mov
mov
jno
cmp
pop
adc
add
pop
xor
sti
dec
xor
dec
jmp
dec
test
jl
mov
and
jmp
iret
sub
and
or
inc
es
test
add
add
adc
push
adc
lock
out
and
ret
test
(bad)
in
mov
fnstenv
cmp
daa
arpl
mov
test
sub
ret
pop
cmp
pop
retf
(bad)
mov
dec
and
loop
pop
mov
jecxz
(bad)
dec
loopne
pop
call
and
cli
pop
lds
je
fimul
std
inc
mov
aaa
jmp
test
add
pop
js
jge
lods
add
push
jb
into
sahf
sbb
call
movs
sbb
call
movs
mov
add
je
scas
test
pop
clc
sub
ss
jle
repz
inc
add
adc
fadd
sub
clc
sar
cli
jbe
add
popa
test
imul
or
pop
adc
sbb
add
aam
ret
pop
jmp
cmp
pop
cld
adc
xchg
xor
jb
je
add
xchg
adc
imul
and
push
in
mov
pop
pop
push
aas
stc
push
push
cmps
pop
push
xchg
add
xor
jae
cmps
rcr
fdivr
jmp
int
push
enter
clc
mov
push
mov
ret
jl
and
sub
enter
pop
aaa
pop
sub
jb
inc
mov
mov
rcr
(bad)
sbb
adc
out
pop
or
mov
xchg
adc
pop
nop
int3
pop
mov
cmps
js
dec
push
push
or
dec
cmps
jns
in
add
add
fisubr
dec
data16
leave
data16
mov
movzx
pusha
adc
shr
mov
bound
mov
or
test
outs
hlt
pop
jg
mov
mov
mov
out
lock
mov
mov
and
dec
add
ins
stos
repnz
popa
mov
not
inc
cmp
test
cmp
xchg
daa
mov
in
mov
or
jae
imul
cmp
xchg
ror
dec
repz
jmp
push
jge
sub
pop
not
cmp
or
adc
arpl
movs
fimul
stos
cmc
push
sub
pop
stos
movs
xor
or
icebp
test
push
fwait
movs
or
or
adc
adc
adc
aam
pop
adc
ret
rcr
jmp
sub
mov
add
call
and
(bad)
add
jnp
mov
push
das
xchg
in
cmp
retf
enter
das
mov
xor
cmp
jns
mov
xor
pop
fmul
mov
enter
fdivr
and
cmp
in
loope
jg
sub
mov
mov
sub
mov
dec
clc
ins
jge
inc
push
cmp
enter
inc
sub
cmps
jns
fisubr
sbb
jge
mov
les
ret
nop
add
enter
ror
sahf
hlt
mov
loopne
mov
cld
push
mov
xchg
nop
mov
sub
push
and
or
add
xor
jno
movs
les
mov
or
ja
ins
das
fs
pavgb
fisttp
scas
ins
add
fs
addr16
in
add
pop
jo
fistp
push
push
dec
mov
mov
ds
pop
lahf
int3
outs
cmp
pop
push
cmp
pop
loopne
push
jl
dec
mov
xor
cmc
push
lock
sbb
mov
(bad)
xor
jge
rcr
mov
inc
mov
or
mov
sub
stc
sub
in
pop
or
ret
push
sbb
pop
mul
push
mov
lods
xor
ret
cmp
mov
(bad)
test
inc
jmp
push
pop
in
push
mov
push
push
mov
test
push
or
mov
sub
js
inc
imul
inc
jb
gs
jo
inc
js
add
aaa
xchg
lock
inc
ret
mov
xchg
mov
popf
add
xor
test
cmc
xor
cs
cmp
dec
mov
aam
or
push
push
adc
test
xchg
sahf
adc
retf
inc
mov
pop
sbb
jne
inc
cmp
jne
mov
inc
inc
inc
or
and
aas
add
rol
mov
jle
adc
and
mov
mov
xor
and
das
(bad)
push
adc
fisttp
test
mov
and
xchg
inc
add
jmp
imul
push
cdq
fdiv
inc
mov
ins
xor
imul
fistp
jle
inc
mov
scas
pushf
out
push
inc
cmp
add
mov
clc
lea
lods
inc
scas
call
les
pop
inc
int
xlat
push
ins
pop
mov
cmp
mov
mov
and
cmp
jb
shr
arpl
sub
ret
pushf
retf
mov
mov
push
cmps
dec
sub
shl
inc
xchg
push
cmps
scas
popa
jb
adc
loopne
cmp
xlat
mov
mov
cmp
lds
xor
bound
sbb
or
test
xchg
xchg
inc
dec
sbb
sbb
adc
xor
mov
inc
jo
mov
mov
adc
jmp
add
mov
push
cmp
adc
cmp
sub
nop
lock
add
adc
sbb
mov
test
xor
pand
sbb
loop
add
les
push
add
adc
sbb
inc
retf
mov
idiv
sub
mov
push
out
mov
xor
(bad)
mov
cmp
in
inc
adc
inc
js
jbe
sbb
(bad)
mov
pop
fcom
in
dec
inc
push
in
adc
sbb
add
pop
adc
push
mov
add
jge
fidiv
mov
cmp
sub
xchg
test
add
into
sub
sub
dec
mov
movs
push
push
dec
xchg
inc
test
or
xchg
call
pop
mov
lahf
jmp
out
movs
add
mov
retf
iret
in
xor
jne
xlat
nop
mov
fldln2
dec
sti
push
popa
sub
dec
movs
xor
cmc
in
sete
push
inc
sbb
xchg
add
xchg
mov
dec
sbb
js
fldenv
cmp
pop
sbb
xor
or
xchg
push
outs
lock
xchg
and
push
sbb
lods
scas
iret
inc
cmp
mov
xchg
add
push
cld
cmp
jnp
mov
sti
adc
nop
push
lds
jb
mov
or
add
test
xor
jns
jbe
popa
and
fist
jb
cmovs
xor
mov
pop
cmp
ret
add
ins
or
mov
shl
pop
cmps
xchg
mov
add
cmps
jo
xor
pusha
and
sub
pusha
aaa
sbb
add
sub
jae
push
dec
mov
mov
inc
add
mov
sbb
fdiv
jne
movs
and
ret
test
aaa
das
pop
mov
les
retf
(bad)
mov
push
fs
fmul
call
adc
xor
cwde
mov
jo
and
push
xor
cmp
repz
push
pop
into
(bad)
imul
push
mov
call
cs
sub
cmp
dec
imul
inc
sbb
hlt
adc
int3
fldenv
pushf
add
fdivr
rcr
mov
lods
cs
xor
inc
cmps
sub
call
cs
(bad)
aam
xor
mov
rcl
fmul
aam
push
imul
push
rcl
mov
dec
sbb
lock
daa
lods
mov
test
xor
mov
nop
xchg
ss
jbe
xchg
add
addr16
xchg
ins
mov
mov
sbb
mov
call
or
inc
(bad)
je
jo
movs
sbb
push
ins
nop
ss
lods
fs
or
push
jo
inc
fisub
pop
inc
les
xchg
imul
and
mov
or
push
dec
cs
cmp
movs
or
clc
mov
jns
mov
inc
jne
daa
stos
or
sti
daa
adc
pop
or
push
mov
inc
xchg
xor
jb
sub
les
push
cmp
add
mov
addr16
movs
mov
or
cmps
jge
sub
add
mov
or
inc
add
and
dec
adc
cdq
fs
cmp
loopne
sbb
leave
and
ds
enter
(bad)
pop
ja
mov
iret
dec
xchg
xchg
sub
lock
pop
scas
adc
and
push
lea
lds
mov
(bad)
aam
in
fsubr
xchg
nop
dec
fwait
pop
dec
push
mov
xor
shl
dec
fcomp
mov
fcomp
cmp
fs
inc
push
in
fcom
aam
inc
push
sbb
les
mov
mov
mov
dec
push
mov
test
retf
sbb
cwde
adc
mov
or
sti
sahf
mov
cwde
mov
sbb
mov
mov
imul
xchg
int
mov
and
lods
std
pop
mov
es
inc
cmp
adc
jae
outs
ins
pusha
in
pop
and
nop
ins
test
sub
jns
data16
or
mov
jns
adc
ret
movups
mov
dec
xchg
lock
adc
mov
or
ud2
inc
test
jne
popw
jnp
pop
push
jae
data16
sbb
dec
xor
xchg
rcr
bndstx
or
pop
movs
sub
mov
adc
ss
es
stos
call
fsubr
ret
or
add
or
xor
sbb
movs
movs
(bad)
mov
jne
call
loopne
sbb
adc
movs
mov
pop
add
adc
adc
xor
shr
sub
mov
test
pop
pop
mov
call
shl
jg
dec
xor
test
rol
cld
add
pushf
xchg
jne
test
shr
sbb
inc
mov
sub
push
into
cmps
cwde
pop
mov
xchg
int
or
mov
loopne
ds
ret
dec
test
or
or
test
push
mov
xor
sub
mov
addr16
xlat
into
outs
mov
or
adc
xor
sbb
call
mov
ja
xor
lea
outs
(bad)
push
loopne
es
fcomip
lea
push
jno
movs
sbb
out
lea
(bad)
fiadd
lea
add
pop
fstp
repnz
and
js
inc
or
or
int3
and
adc
in
adc
and
repz
rol
sbb
add
outs
adc
add
psubw
repz
cwde
fdiv
xchg
cmp
xchg
sbb
cmp
loop
cmp
call
les
inc
jne
xchg
mov
pop
inc
in
mov
fst
cmp
je
cwde
test
das
cdq
in
leave
pop
cmps
cmp
jae
adc
mov
pop
movs
add
mov
dec
in
in
push
dec
jmp
xchg
int
sbb
inc
jbe
pop
loopne
ror
or
ss
jnp
xchg
ins
lea
inc
js
adc
or
lds
mov
sub
(bad)
and
mov
or
jmp
push
push
jno
mov
stc
jmp
imul
leave
push
adc
dec
pop
cli
lock
push
lds
push
mov
stos
cmps
add
movd
das
mov
test
ret
mov
(bad)
in
lea
mov
pop
and
adc
xchg
inc
and
sub
xor
mov
push
cmp
mov
icebp
mov
imul
retf
jg
pop
stos
pop
movsx
cdq
mov
or
mov
fldcw
adc
fstp
outs
or
xor
jmp
pop
push
rcr
mov
rep
mov
push
adc
jne
pop
repnz
movsx
xor
scas
sbb
pushw
jbe
sbb
adc
or
jle
dec
push
or
add
cmp
inc
sbb
xlat
xchg
enter
cmp
mov
fcmove
adc
call
imul
pop
bound
call
pop
sahf
cmps
cmp
mov
iret
data16
sub
adc
push
adc
std
outs
or
pop
or
add
jle
ja
and
jmp
xor
or
xor
lock
clc
sub
or
add
mov
mov
or
movs
mov
fcomp
shl
xor
sub
and
test
xchg
fmulp
fistp
jns
repz
sti
mov
sbb
add
out
or
sub
jae
movs
lods
push
bound
fisubr
test
in
add
jmp
add
xor
retf
daa
jl
add
xor
mov
sub
test
add
in
jnp
(bad)
lock
cmovne
and
jecxz
add
cld
out
pop
add
adc
xchg
xlat
not
sub
jne
scas
ins
ins
pusha
jg
mov
dec
jne
dec
jb
in
mov
inc
sub
inc
jle
rol
push
cmps
iret
lea
inc
sahf
push
xor
(bad)
or
pop
fild
and
lock
cld
inc
inc
push
pop
mul
dec
adc
(bad)
stos
mov
adc
popa
jne
sub
inc
daa
push
jmp
(bad)
int3
test
add
push
xchg
clc
dec
xor
rcr
imul
mov
in
sbb
jge
pop
and
fadd
push
mov
and
les
ins
and
dec
or
rol
xchg
addr16
jo
out
aaa
outs
adc
clc
mov
ja
aad
sbb
sub
mov
ret
jo
xlat
ds
mov
pop
push
dec
aaa
scas
in
inc
xchg
cmp
call
jno
dec
xor
in
inc
mov
into
xor
sti
mov
and
je
fnstenv
or
pop
rcr
shl
mov
popa
xlat
scas
test
xchg
sub
outs
jno
shl
fidivr
pop
sub
pop
rol
and
xchg
(bad)
(bad)
jbe
mov
xchg
fsub
and
mov
mov
jno
mov
jl
pop
pop
movzx
xchg
imul
pop
mov
dec
xchg
pop
imul
jno
jl
jmp
movsx
int
test
or
movsx
dec
movzx
mov
jnp
inc
or
xor
adc
fild
(bad)
ret
xor
push
adc
(bad)
fdiv
add
pushf
mov
xor
xchg
xor
xor
ins
ffreep
pop
inc
xor
push
enter
push
dec
adc
mov
sub
fild
sbb
cmp
mov
jnp
sbb
inc
cwde
cmp
pop
inc
sbb
cmp
aas
dec
fldenv
xor
xchg
or
push
xor
sbb
loope
cwde
xchg
dec
cmovno
sti
cmp
jne
or
into
shl
add
aaa
or
mov
loop
fidivr
adc
(bad)
in
repnz
fdivr
imul
imul
xor
mov
aas
pop
sbb
sub
aas
push
sub
cmp
or
shl
mov
pop
fld
xor
xor
or
js
fcomp
push
and
cmp
lds
and
mov
mov
and
jnp
and
ins
and
sub
int3
call
or
xchg
adc
and
sub
in
fadd
xor
in
retf
lds
inc
das
sbb
pop
stc
aaa
pop
outs
push
adc
mov
sbb
lds
(bad)
fldenv
leave
fist
aam
mov
mov
das
push
mov
sbb
sbb
aaa
mov
push
jb
pop
sub
push
(bad)
(bad)
or
or
les
pop
sbb
(bad)
or
jno
or
retf
jmp
psubusb
sar
pop
loop
stos
mov
push
push
imul
aaa
and
inc
or
sub
mov
add
inc
cmp
and
rcl
ja
repnz
pop
aas
dec
daa
(bad)
or
aas
dec
cs
das
dec
movs
(bad)
fist
(bad)
jno
pop
and
or
fwait
ret
fist
rcl
or
cmps
xor
inc
sub
or
push
push
inc
mov
jmp
sbb
jmp
ins
js
or
sub
jbe
shr
inc
pop
mov
sbb
arpl
xor
push
aam
mov
test
ja
push
push
add
enter
adc
rol
adc
js
jl
lea
jb
adc
(bad)
fs
push
sub
and
nop
dec
adc
mov
add
pop
inc
fstp
dec
sub
les
sub
cmp
or
cli
inc
ja
mov
add
fild
and
or
sub
cmp
clc
pop
ret
mov
(bad)
adc
jns
mov
pop
xor
mov
inc
adc
adc
adc
sub
jmp
and
xchg
cmp
mov
imul
xor
in
xchg
xchg
ds
mov
add
push
mov
movs
dec
jo
pop
repz
cmp
pop
mov
and
cld
inc
pop
or
adc
ja
cmp
and
aam
mov
ins
leave
mov
(bad)
pop
shl
mov
out
or
test
test
or
pushf
adc
or
and
or
lock
dec
cmp
dec
pop
push
add
out
retf
sub
dec
movs
ffreep
ret
or
fcmovne
xchg
loop
xchg
push
adc
cmp
mov
and
sub
dec
push
push
xor
adc
and
jno
rcl
push
adc
cmc
ss
and
fcom
xor
pop
arpl
cwde
xor
ss
xchg
pop
out
(bad)
lock
adc
rcr
loopne
bound
ret
jmp
or
mov
jmp
dec
or
jnp
mov
(bad)
and
xor
ja
xor
add
gs
jmp
jg
and
shl
fmul
xchg
jmp
(bad)
jmp
jle
mov
call
xor
in
inc
lods
int
mov
adc
or
ins
fcom
cmps
add
repnz
ja
into
movs
push
rcl
and
xor
clc
test
sub
jo
xor
jns
jo
pop
hlt
and
pop
lock
in
pushf
and
aas
mov
dec
xrelease
lock
(bad)
fiadd
or
fwait
xor
adc
mov
adc
jl
ror
test
test
cmp
xchg
mov
dec
hlt
lds
rcl
jge
fidiv
cmp
or
inc
repnz
pop
neg
push
cli
xor
push
(bad)
cmp
xchg
lds
ss
inc
out
jmp
mov
call
sbb
(bad)
div
xor
mov
mov
ins
adc
ins
push
jns
mov
ret
add
dec
lock
in
mov
call
xor
jne
je
lock
lea
in
nop
fmul
xchg
arpl
mov
je
mov
add
int
jmp
or
push
jmp
cmps
adc
adc
dec
repz
adc
rcr
mov
pop
out
push
out
rcl
dec
inc
add
add
cmp
add
jo
mov
imul
popa
(bad)
jmp
xor
push
mov
and
imul
push
clc
mov
inc
sar
stos
cmp
sbb
push
cld
mov
fstp
fwait
sbb
out
add
je
dec
je
or
xchg
xor
inc
fadd
sahf
xchg
test
dec
push
test
jne
mov
clc
sub
pusha
xchg
ret
aas
add
add
jae
dec
jb
mov
mov
pop
or
imul
ja
leave
push
fcmovbe
sub
cmps
jmp
or
adc
or
xor
sub
cmp
fucomi
(bad)
jo
add
seto
sub
inc
sahf
dec
addr16
push
mov
mov
xchg
dec
cmp
ds
push
ret
out
pop
xor
ins
cld
pop
xor
and
push
or
xor
adc
or
dec
rcl
or
mov
inc
cmp
push
scas
dec
mov
jo
das
cmp
(bad)
mov
jg
jp
(bad)
sbb
test
inc
into
pop
imul
jge
xor
shr
test
fyl2x
nop
inc
data16
aam
jmp
cwde
imul
sub
aas
or
adc
add
adc
test
sbb
push
add
loopne
xor
lods
les
or
push
xor
aas
loop
xor
mov
lahf
shl
js
es
inc
cwde
or
fidivr
das
dec
fs
pushf
or
nop
test
dec
mov
xor
or
cwde
cmp
add
pop
popf
adc
mov
push
or
adc
xor
or
inc
inc
mov
ss
fistp
adc
mov
cmps
dec
mov
add
cwde
(bad)
xor
(bad)
(bad)
ror
rol
mov
add
or
add
aad
push
pop
(bad)
sbb
mov
je
xlat
sbb
push
inc
fnstenv
cmp
leave
outs
fs
sbb
ds
jne
sub
add
int
arpl
mov
and
jl
xor
fisttp
push
adc
push
push
add
mov
xchg
neg
jge
fwait
pop
clc
ins
fcomp
rcr
jne
loope
lods
mov
add
inc
icebp
jne
push
push
fild
cmp
push
adc
fdiv
stc
adc
popa
cdq
pusha
mov
in
add
jo
xchg
arpl
xor
call
xchg
mov
loopne
fst
movs
fwait
clc
mov
jl
mov
icebp
sbb
jne
dec
test
dec
dec
inc
jno
jge
stos
or
shl
(bad)
xor
push
mov
dec
call
inc
mov
pop
push
lea
add
jne
mov
test
xchg
adc
inc
ret
or
enter
shl
mov
mov
out
jae
push
rcr
jo
jne
or
push
iret
data16
or
sbb
mov
sbb
test
fnstenv
scas
and
div
es
pop
push
popa
jb
divps
xlat
push
(bad)
xor
sub
sub
test
sub
call
mov
mov
and
test
rol
jl
popa
jae
mov
mov
mov
adc
daa
int3
aam
ins
nop
cmp
aam
rcl
mov
adc
dec
repz
push
ffree
stc
imul
dec
into
pop
push
pop
int
lea
add
cld
fmul
jge
daa
jb
fild
pusha
data16
dec
and
daa
sahf
and
ja
fwait
clc
les
js
ja
lock
bound
lea
add
push
pop
daa
inc
sbb
push
xor
in
fld
aad
mov
test
dec
xor
clc
call
pusha
jle
jne
out
ror
cmp
cmp
aam
arpl
xor
lea
cmp
je
xchg
pop
dec
or
ficomp
mov
sbb
push
jecxz
mov
ret
xchg
sbb
js
add
jno
mov
ret
cmp
jle
mov
jge
mov
pop
or
fs
inc
jnp
loopne
js
cmp
jne
jno
or
mov
sbb
jbe
or
and
dec
jnp
shl
fcomp
fnstsw
sahf
jae
adc
adc
inc
ficom
(bad)
ss
add
rcl
clc
cmovns
jb
loopne
xchg
jno
int
repnz
test
mov
sub
ret
add
lea
out
mov
inc
lea
pop
bswap
xchg
enter
outs
or
les
stc
imul
lea
(bad)
cmps
lock
push
test
push
jae
mov
(bad)
jae
add
vshufps
in
pop
cmp
pop
mov
cmp
mov
xchg
jl
pop
ret
sti
fstp
fwait
inc
sbb
call
fdiv
cwde
xchg
fisub
arpl
jo
fidivr
adc
dec
inc
mov
adc
ret
pop
push
jne
wbinvd
ins
shl
sbb
(bad)
xchg
mov
xor
inc
fld
xchg
(bad)
dec
test
aas
ror
push
das
dec
shl
push
rol
cdq
imul
fwait
mov
icebp
neg
adc
fdivr
sub
loop
in
ret
test
into
fchs
and
inc
pusha
fstp
int3
push
fld
pop
out
and
adc
test
into
pop
dec
lahf
movs
jmp
test
push
push
xchg
test
scas
and
pop
push
pusha
and
movs
mov
pop
sub
ror
and
int3
dec
test
jne
sbb
add
mov
jge
push
jmp
data16
je
inc
ja
sbb
xchg
mov
cmp
inc
jns
mov
test
push
push
sbb
jo
add
call
loop
ror
adc
push
and
aaa
add
aaa
sbb
rol
lea
pop
int3
call
std
or
add
and
add
xchg
xlat
pop
adc
ret
imul
arpl
mov
mov
pop
xchg
pop
xchg
and
imul
hlt
xchg
loope
adc
xchg
rcr
and
xor
call
add
lock
nop
aam
add
inc
or
mov
mov
mov
dec
xchg
or
fistp
je
inc
or
pusha
loop
loopne
push
cmp
jmp
mov
cmp
jb
or
jnp
xchg
dec
rol
(bad)
mov
mov
inc
jne
mov
test
push
dec
fprem1
inc
xor
inc
fiadd
outs
push
adc
int3
ss
xor
or
or
pop
mov
loop
push
mov
sbb
xor
or
xor
les
sub
call
dec
dec
loop
add
add
pop
and
xchg
cmp
add
mov
xchg
in
or
xor
jne
jo
dec
jne
lea
pop
bound
fadd
lods
mov
lock
(bad)
rcl
aas
stc
add
cmps
inc
fs
mov
mov
pushf
fimul
rol
(bad)
loope
test
ret
imul
test
inc
fisubr
repnz
scas
push
xor
xchg
mov
out
jecxz
xor
mov
ror
int3
pushf
add
pop
pop
inc
add
inc
addr16
adc
dec
mov
cmp
push
jecxz
rol
push
push
dec
aam
mov
lea
iret
movs
xor
test
cmp
mov
iret
nop
cld
or
add
push
xchg
lock
dec
push
movs
and
into
inc
push
and
xchg
push
jae
add
aas
inc
ror
cmps
cmp
add
rol
cmc
dec
call
adc
jl
add
xor
inc
pop
push
pop
outs
lea
lea
inc
or
xor
cmp
mov
test
cmp
out
add
test
jne
push
mov
xor
mov
xchg
adc
sahf
adc
(bad)
xor
clc
mov
push
sub
popf
inc
push
add
xchg
(bad)
xor
sub
out
(bad)
sar
aas
mov
inc
jle
push
dec
jns
push
mov
aad
lea
es
push
add
fcomp
leave
adc
test
retf
loopne
add
push
pop
add
test
dec
jge
in
rcl
inc
push
push
(bad)
ret
inc
fcomp
inc
arpl
lea
dec
pop
sbb
dec
(bad)
aas
jmp
repz
cmc
repnz
push
pop
lock
mov
pop
push
mov
pop
adc
jmp
and
add
sbb
aam
popf
jb
or
jne
inc
push
lea
push
add
mov
std
xor
inc
enter
out
gs
aad
xchg
js
cdq
dec
mov
outs
sbb
push
(bad)
mov
daa
jmp
hlt
rol
mov
ror
inc
cli
jmp
(bad)
xor
inc
std
xor
stc
or
cmp
jle
mov
test
jg
adc
mov
pop
enter
leave
adc
push
(bad)
fld
inc
loope
sbb
int
cmp
je
adc
push
push
sub
retf
mov
push
xor
call
fcomp
ret
call
add
ret
ds
je
adc
adc
jmp
ret
push
rcr
mov
xor
cmps
ds
mov
add
lods
adc
cmps
(bad)
and
mov
inc
xor
aas
and
test
fld
mov
call
xor
ret
fimul
outs
test
jl
inc
dec
cmp
das
xor
adc
scas
iret
dec
jne
cmp
jmp
dec
out
jl
mov
cmp
(bad)
in
sar
or
sub
arpl
or
out
push
dec
pop
push
sub
stc
or
sbb
xchg
jge
mov
fld
mov
cwde
inc
jnp
test
test
aas
sbb
fdivr
xlat
fcom
xor
jne
inc
push
and
movhps
cli
dec
jne
mov
ror
or
dec
cld
dec
cwde
and
or
xchg
sbb
enter
inc
jns
(bad)
jle
or
jle
xor
popa
push
loope
jnp
pop
fnstsw
dec
psllq
cs
dec
sbb
mov
pop
sbb
sub
enter
fidiv
and
mov
dec
nop
pop
pop
ja
mov
shr
push
enter
aas
mov
and
sbb
cmp
mov
aas
ret
dec
or
sbb
push
adc
in
int
pop
fiadd
in
jmp
paddsb
sub
cmp
pop
test
jg
pop
and
or
mov
popa
jns
fld
sub
fdivr
fsub
sbb
cmp
cmc
sub
jns
clc
adc
mov
int
add
and
mov
cld
nop
xchg
addr16
fld
and
pusha
fnsave
inc
xchg
cdq
dec
in
inc
pop
sbb
mov
jmp
jnp
sti
xlat
sbb
neg
sbb
pop
outs
jmp
inc
rcl
sbb
jns
jmp
ins
dec
fs
fidivr
pop
add
leave
jnp
xor
sbb
repz
add
(bad)
jo
or
jne
cmc
xor
mov
in
cmps
adc
out
push
fstp
push
jle
scas
arpl
enter
popf
mov
xchg
mov
xor
leave
sar
lahf
daa
add
test
jecxz
das
or
fs
aam
div
and
loopne
or
push
test
inc
ins
(bad)
mov
or
adc
rol
fs
mov
dec
jne
adc
mov
ret
dec
xor
and
mov
movs
push
jecxz
call
in
fsub
sbb
rol
shr
call
xchg
inc
dec
inc
bound
lds
pop
loop
repnz
adc
fidiv
out
jmp
jb
enter
(bad)
inc
sahf
sbb
ffreep
xlat
fstp
mov
hlt
mov
mov
pop
bound
sbb
fwait
pop
sub
adc
aas
aas
in
mov
and
js
fisub
cmp
jmp
addr16
sbb
ror
popa
sub
cmp
das
pop
and
push
stos
or
jne
retf
pop
in
inc
or
cmp
xor
and
popf
pushf
outs
add
pop
inc
mov
add
add
mov
mov
dec
lods
xchg
(bad)
mov
retf
ror
and
sbb
ret
push
fimul
dec
cmp
adc
clc
fistp
mov
cmp
or
das
sub
push
dec
cmps
repnz
les
pushf
xor
out
pop
pop
movs
repz
push
loop
adc
bound
adc
call
pop
jmp
mov
pop
loop
fcomp
je
xchg
xchg
add
ret
outs
arpl
xchg
push
or
mov
inc
xchg
shr
imul
pop
leave
(bad)
sub
adc
sbb
sub
and
inc
sub
ret
call
cli
mov
push
mov
xchg
xchg
lods
mov
repnz
sub
xor
fisttp
or
imul
jne
enter
repnz
mov
cmp
push
call
cmp
fidiv
aaa
add
add
ds
push
movs
xchg
addr16
(bad)
push
inc
pop
pop
sbb
call
ins
and
out
or
mov
cmp
jb
mov
inc
cmp
shl
ret
and
popa
sbb
mov
mov
sub
mov
jne
mov
rep
mov
popf
jl
sub
sub
imul
imul
hlt
movs
pop
add
pop
jge
aaa
jb
(bad)
adc
shl
pop
push
mov
ret
mov
(bad)
cmp
shl
sub
sbb
xchg
int3
pop
aaa
call
sbb
cmps
loopne
arpl
mov
add
and
pop
hlt
mov
and
inc
or
shl
sar
jne
loopne
mov
(bad)
cwde
mov
mov
aas
out
lock
pop
popf
and
hlt
push
dec
mul
mov
test
jo
shl
enter
clc
xor
mov
push
pop
mov
mov
dec
nop
xor
add
stc
stc
repz
mov
test
adc
pop
adc
enter
adc
sbb
push
push
stc
stc
repz
je
sub
in
iret
inc
xor
dec
enter
and
pop
jns
mov
leave
inc
mov
repnz
mov
retf
push
jns
xchg
inc
pop
mov
pusha
mov
pop
fs
xor
mov
bnd
dec
je
xchg
int3
scas
js
ins
jl
mov
sbb
into
sbb
stc
cmp
test
fisttp
repnz
xor
xchg
in
jl
enter
pushf
mov
xchg
out
loop
jecxz
test
jo
mov
mov
cld
push
sbb
call
imul
test
push
jns
pop
mov
sbb
cmps
cmps
test
fs
inc
test
inc
push
lods
lods
scas
nop
inc
push
sbb
sbb
xchg
push
sbb
xchg
xchg
cwde
sbb
cdq
call
aad
aam
test
xchg
xchg
fdiv
cmp
ror
cdq
scas
pop
jg
jb
cmc
or
ret
adc
outs
add
and
pop
and
and
inc
jle
and
loope
call
test
add
adc
clc
adc
sbb
add
cmp
(bad)
int3
mov
cmp
ds
xchg
mov
repnz
sub
or
inc
or
mov
mov
jp
push
dec
sbb
adc
out
inc
add
ins
xor
push
test
stc
gs
fneni(8087
test
cmp
pop
mov
add
lea
inc
std
or
mov
jecxz
cmp
mov
xor
test
jne
dec
jmp
(bad)
adc
jnp
inc
dec
xor
cmp
jle
push
pop
jno
push
inc
pop
cmp
xchg
xchg
or
shl
fdivr
mov
mov
sub
mov
aam
sub
dec
jmp
jo
cmp
ror
or
(bad)
add
mov
sbb
mov
movzx
mov
sbb
call
sbb
cmp
je
mov
dec
push
sbb
gs
add
and
idiv
cmp
and
jne
jmp
cmp
paddd
ins
sbb
test
out
jne
pop
es
scas
mov
sub
pop
(bad)
mov
push
or
stos
mov
push
dec
inc
push
or
sbb
pop
sbb
call
daa
nop
mov
jg
jg
test
add
ss
push
dec
or
rcl
pop
cmp
mov
jb
ja
sub
das
cmps
pop
adc
rol
sbb
or
mov
mov
movhlps
aas
mov
cmp
je
push
pop
sysret
jns
mov
pop
or
jmp
jle
fs
jmp
fwait
mov
cmp
mov
add
mov
or
adc
dec
xor
fs
fistp
add
push
shl
in
ds
xchg
out
mov
push
adc
pop
es
cmp
ja
jb
jns
imul
call
(bad)
out
mov
cwde
lods
mov
or
pop
mov
js
adc
mov
ds
mov
xchg
cmp
adc
or
mov
sti
inc
cmp
pop
push
xchg
xlat
or
adc
push
or
ror
icebp
ret
loopne
cmp
and
stos
mov
test
fldcw
sbb
jmp
lods
xor
mov
dec
bound
push
out
adc
adc
dec
popa
(bad)
div
pop
aaa
or
lea
ja
push
ss
xchg
xchg
repz
jns
pop
push
mov
jle
js
pop
(bad)
outs
sub
jmp
sub
fidiv
pop
std
pop
xchg
adc
cld
(bad)
out
sub
and
xor
mov
mov
mov
inc
xlat
ret
out
adc
sbb
push
push
jg
loop
repz
sub
stc
loope
cli
jmp
adc
retf
and
adc
or
jg
scas
in
(bad)
sbb
jmp
or
adc
loop
sub
in
fs
imul
add
in
add
add
sub
push
or
enter
loop
and
in
mov
add
jo
mov
dec
loope
(bad)
(bad)
arpl
add
and
adc
pusha
idiv
js
inc
cmp
fist
sub
ror
ds
or
jg
(bad)
or
mov
out
call
adc
(bad)
sbb
add
inc
and
hlt
sub
sbb
iret
mov
push
sbb
jp
hlt
xchg
sub
and
(bad)
jmp
sbb
adc
ret
les
clc
loopne
clc
xchg
clc
cld
xchg
cmp
mov
xor
iret
lods
pop
xchg
xchg
inc
and
loope
push
push
add
push
add
or
xor
stc
jne
pop
daa
cdq
add
or
xor
adc
mov
jmp
inc
push
shl
ins
je
push
call
lock
fst
dec
(bad)
inc
add
sbb
imul
data16
xor
cs
cwde
(bad)
sub
fdiv
or
pop
push
jmp
cs
sysret
mov
add
pop
sbb
add
inc
adc
lods
sbb
sub
mov
scas
jne
leave
sbb
or
pop
inc
stos
add
mov
repnz
jno
xchg
fwait
sub
push
dec
xlat
daa
(bad)
or
xchg
dec
pop
pop
ja
addr16
sar
jl
xchg
fld
fstp
sub
out
(bad)
test
or
cwde
fisub
xchg
inc
adc
or
cmp
(bad)
fdivr
or
aaa
pop
add
iret
mov
adc
fistp
mov
or
in
push
or
fwait
xor
dec
les
sub
xchg
loop
mov
cmp
dec
push
mov
dec
dec
mov
fistp
pop
lods
mov
outs
xor
retf
cmp
add
pop
nop
cmps
ret
dec
pop
adc
or
jmp
sbb
sub
sub
or
test
jg
inc
jno
test
jmp
out
push
fild
sbb
adc
imul
ror
shr
pop
imul
arpl
pop
add
pop
fistp
cs
pop
add
jno
push
jo
ins
xchg
out
shr
popa
in
(bad)
clc
mov
push
fs
add
ja
or
or
cmp
pop
or
(bad)
mov
ret
pop
mov
mov
push
aas
or
dec
add
inc
popa
pusha
pop
push
pusha
adc
sbb
pop
out
in
add
aaa
mov
and
sub
lods
or
push
or
pop
sub
jbe
(bad)
in
dec
cmp
sbb
and
sbb
add
or
mov
mov
iret
std
jmp
pop
test
out
push
stc
or
add
mov
lods
(bad)
push
fsub
inc
mov
aas
mov
test
inc
fcom
sbb
fadd
in
ds
repnz
inc
fdivr
push
or
inc
gs
ds
or
dec
out
popa
ins
enter
outs
xchg
mov
aad
inc
xor
ss
xchg
leave
aas
inc
inc
jb
popa
je
lock
addr16
push
inc
or
outs
mov
pop
dec
test
ins
gs
xchg
xor
push
or
adc
aam
lods
nop
clc
scas
clc
fstp
mov
and
ficom
scas
push
or
mov
sar
inc
inc
ins
popa
jae
dec
outs
je
dec
nop
lods
mov
shl
out
xchg
daa
jg
dec
imul
retf
ret
adc
mov
fs
btc
jo
outs
in
mov
int
rcl
dec
arpl
stos
push
sbb
fcomp
repnz
or
cmp
mov
mov
inc
or
mov
scas
nop
(bad)
push
ss
mov
xchg
scas
add
mov
in
pop
in
add
jge
push
add
jmp
loop
fcomp
sbb
xchg
jae
fs
mov
int3
add
or
sub
fcmovnbe
data16
int
fisub
push
ins
push
pusha
dec
xor
int
cs
and
push
push
daa
pop
push
pop
mov
shl
dec
nop
and
and
add
adc
rcr
iret
in
(bad)
sti
call
xlat
(bad)
pusha
fs
arpl
fadd
and
aaa
pop
shl
cmovns
sub
inc
fs
jo
shl
idiv
(bad)
add
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
mov
or
push
les
push
ret
stc
adc
mov
pop
imul
sub
sub
sub
sub
outs
repz
jae
nop
push
xor
push
mov
gs
shl
daa
mov
dec
sub
sub
lods
popf
pop
or
inc
push
jo
les
xor
add
push
lock
and
jae
or
scas
sbb
jmp
inc
push
or
add
sbb
mov
loope
mov
push
or
fs
xor
xor
or
pop
enter
aaa
pop
jo
js
in
xchg
pop
in
cmp
sbb
jnp
(bad)
fidivr
push
lods
push
lock
xor
cwde
xor
int
inc
ss
aam
adc
and
pop
pusha
outs
jl
je
push
imul
je
add
mov
or
shl
jmp
mov
mov
dec
cmp
shl
cmp
push
sub
push
xor
out
push
lahf
(bad)
clc
mov
pusha
pop
or
and
add
push
les
rcr
dec
arpl
mov
inc
push
pxor
xchg
cmp
pushf
nop
pop
aas
inc
in
out
and
dec
jmp
out
push
xor
in
xlat
mov
jb
sub
push
adc
add
mov
test
xchg
ins
jl
lock
pop
inc
div
inc
inc
mov
repz
shr
(bad)
mov
shl
fidiv
mov
(bad)
dec
pop
int
data16
pop
jl
je
out
mov
pop
sub
mov
rcl
cmpxchg
sub
inc
and
shl
fadd
dec
push
mov
xchg
push
sbb
mov
xchg
add
dec
ror
in
nop
push
push
sbb
nop
ins
imul
les
jno
imul
or
push
or
or
clc
shr
outs
fcmove
sahf
pusha
sub
cs
lea
aam
int3
xchg
lods
(bad)
lock
adc
sbb
stc
adc
call
cmp
(bad)
pop
sbb
inc
(bad)
cmp
dec
add
dec
adc
xchg
sbb
or
(bad)
ins
cmp
adc
adc
das
inc
imul
push
xor
in
cld
fimul
mov
mov
call
push
push
push
dec
mov
pusha
pop
jb
fcom
pop
lea
call
stos
adc
adc
(bad)
clc
mov
idiv
idiv
cmc
push
push
push
fcomip
push
pop
cmps
(bad)
xor
pop
cld
(bad)
mov
push
dec
sbb
push
retf
cmps
imul
fnstenvw
lock
or
add
mov
push
mov
nop
and
test
and
mov
pop
add
sub
adc
cmp
addr16
and
dec
adc
adc
clc
inc
retf
add
jb
jne
and
push
sti
out
scas
movs
and
dec
xchg
add
or
sub
sahf
adc
mov
stc
and
cmps
shl
sub
and
arpl
dec
(bad)
pusha
xchg
ins
sbb
or
xchg
or
push
add
mov
jge
cmp
mov
mov
jmp
retf
cmp
icebp
add
js
or
xor
inc
movs
ffree
movs
and
xchg
inc
cmp
sub
inc
or
or
sub
and
inc
inc
enter
jo
out
jmp
and
push
sbb
call
xor
in
mov
add
mov
fld
and
fistp
cmc
or
cs
sub
cmp
popa
add
sbb
adc
fiadd
dec
ins
mov
xlat
imul
xor
fisttp
pop
and
clc
mov
xchg
xor
jo
xlat
sub
iret
mov
pop
les
adc
add
enter
add
lods
mov
inc
mov
xchg
mov
sub
aam
push
adc
call
xlat
out
mov
sbb
clc
inc
dec
jne
out
pop
lods
bound
out
out
inc
xchg
mov
mov
neg
loope
scas
mov
mov
dec
adc
add
ss
jne
mov
add
gs
test
pop
pop
int3
lahf
or
xor
mov
pop
test
mov
in
xor
int
jo
pop
mov
push
xchg
push
sub
add
pop
dec
imul
pusha
or
and
cmps
fnstenv
push
mov
rcr
pop
pop
dec
or
enter
push
inc
cmp
dec
loopne
inc
mov
aaa
test
add
and
or
add
inc
sub
sub
out
inc
hlt
pop
ror
out
xor
xor
xor
ja
pop
inc
jo
and
sbb
cld
xchg
cmp
push
outs
mov
push
dec
mov
adc
daa
jo
and
(bad)
retf
ror
mov
and
cmp
out
mov
adc
mov
jb
jb
cdq
dec
or
xchg
mov
aad
dec
or
lock
add
rcr
push
inc
(bad)
jmp
int
mov
in
call
icebp
sbb
enter
arpl
pusha
mov
cmps
and
cmp
adc
pop
sbb
ins
xchg
pop
inc
and
(bad)
sub
shr
sub
sbb
inc
cmps
inc
xchg
jmp
shr
jl
fs
pop
cmp
jne
stc
add
push
mov
mov
inc
sbb
mov
dec
iret
pop
clc
bound
rcl
and
or
push
arpl
clc
push
outs
adc
adc
adc
stc
jne
cmp
sar
jne
cmp
out
jno
pop
ins
nop
push
pop
test
retf
outs
sub
hlt
fs
inc
cmp
inc
popa
dec
and
or
add
nop
dec
mov
test
adc
adc
out
jb
or
clc
adc
ret
cmp
inc
dec
or
leave
nop
add
(bad)
cmc
add
(bad)
and
test
add
in
test
sub
xchg
jl
cld
fsubr
emms
clc
(bad)
into
mov
pop
pop
cmp
dec
popa
mov
int
sub
loope
loop
mov
mov
inc
sbb
cmp
mov
add
jo
lock
ret
xchg
mov
sbb
mov
pop
ins
push
mov
jmp
imul
adc
adc
stos
mov
and
inc
out
inc
inc
pop
add
hlt
and
pop
cmps
dec
jle
mov
sub
jmp
and
test
add
lock
clc
lahf
bswap
jmp
inc
cmp
jge
stos
cmp
jne
enter
sbb
leave
dec
cdq
sub
lds
cmp
sbb
dec
data16
addr16
and
(bad)
retf
jg
arpl
mov
mov
sahf
mov
pop
sbb
lods
or
loopne
cmc
xchg
je
icebp
cmps
or
inc
pop
jle
cwde
sahf
loop
xchg
jle
(bad)
shl
(bad)
pop
or
jno
pop
shl
mov
cmp
jns
jle
or
mov
js
dec
add
add
rcl
gs
clc
inc
dec
mov
sub
jg
dec
mov
rcr
and
inc
fwait
cmp
ret
data16
or
ret
retf
aas
push
inc
cmps
inc
scas
inc
and
sub
sub
push
push
cmp
and
adc
retf
cmp
test
pusha
ret
ins
sbb
les
mov
add
fucompp
dec
icebp
add
test
js
add
cli
(bad)
in
mov
cmps
xchg
inc
jne
pop
cmp
fistp
jmp
dec
add
add
cmps
and
scas
adc
inc
sub
push
mov
inc
push
das
das
call
xchg
fadd
jl
push
inc
pop
mov
movs
call
stos
add
adc
push
sbb
cs
sub
outs
dec
adc
hlt
lea
or
push
cld
cld
ret
loope
loopne
mov
(bad)
in
sbb
or
popa
inc
fidivr
test
hlt
clc
retf
in
loope
in
push
add
retf
shl
pop
add
jmp
ins
add
or
and
enter
sbb
sub
mov
push
sub
pushf
xor
cmp
(bad)
push
je
ret
adc
pushf
cmps
push
jns
add
sub
and
sbb
movs
in
gs
add
or
or
or
add
sub
cmp
aas
in
adc
test
je
gs
push
add
jmp
and
enter
adc
jl
mov
inc
mov
jecxz
adc
mov
mov
cmps
fimul
xchg
and
nop
or
in
adc
lods
push
(bad)
out
cmp
sub
or
out
xor
mov
sahf
adc
cmp
inc
xor
std
xlat
add
ror
mov
rcl
sub
pop
xchg
add
int3
or
add
test
mov
inc
fs
sbb
pop
fidivr
inc
scas
xlat
and
call
pop
scas
or
or
xchg
(bad)
ins
or
jg
ret
ficomp
sbb
cmp
xor
jmp
pop
shr
jle
inc
(bad)
jl
movs
and
call
adc
jnp
call
pushf
add
sub
or
rcl
inc
mov
or
inc
fadd
mov
add
add
push
mov
push
add
out
in
xchg
and
inc
push
clc
inc
call
lea
push
sub
pop
or
(bad)
psubb
or
retf
mov
push
mov
push
push
call
or
sub
cmp
cmp
test
or
xchg
pop
add
dec
sub
movs
fcomp
jns
outs
adc
nop
mov
daa
ins
dec
lea
push
sbb
pop
aaa
fist
mov
xor
test
cmp
jne
sbb
cwde
pop
loope
addr16
mov
gs
not
xchg
aad
int3
ror
cmp
gs
push
and
psllw
sub
add
sbb
(bad)
and
push
sub
push
jmp
adc
jp
xor
and
stos
fist
imul
movaps
cmp
call
in
ins
dec
test
nop
mov
rcr
aam
sub
cmp
bound
repz
enter
test
jne
stos
sar
ret
test
xor
shl
(bad)
test
test
and
xchg
adc
or
jae
and
cld
gs
jno
repz
mov
adc
dec
adc
sub
dec
xor
xor
or
mov
test
imul
jne
hlt
pop
fld
jo
sub
mov
sbb
addr16
es
dec
mov
mov
xor
jmp
and
test
sbb
dec
lahf
ret
aam
xor
and
imul
dec
dec
xor
adc
pusha
cmp
push
pop
push
pop
push
addr16
addr16
and
add
push
(bad)
nop
mov
mov
adc
dec
in
pop
mov
aam
mov
and
repz
sub
stc
cmp
xor
cld
lock
dec
in
sbb
in
pop
or
add
test
rol
lods
in
popf
and
sbb
mov
mov
jns
js
jno
mov
gs
sub
pusha
mov
sbb
mov
sbb
(bad)
out
lds
fmul
add
pop
nop
(bad)
stos
lds
sub
fs
stos
lds
add
imul
sub
test
(bad)
or
cmp
mov
je
xchg
rcl
out
xchg
mov
mov
mov
clts
loopne
push
mov
loopne
inc
in
and
mov
mov
(bad)
inc
sub
add
xor
loopne
mov
aaa
jns
adc
(bad)
push
inc
inc
retf
fisttp
popf
pop
mov
dec
xchg
inc
popa
rcr
rcr
add
in
xor
xchg
sbb
out
cmc
adc
in
mov
test
sub
pop
xchg
popa
and
out
sbb
jl
clc
pop
test
js
inc
adc
dec
cld
in
or
xor
or
xor
rcl
add
xchg
xchg
pop
add
sbb
inc
pop
sbb
lock
sbb
cmc
pusha
cmps
ret
add
or
in
lahf
call
push
sbb
outs
imul
mov
data16
mov
cmp
add
mov
popf
lods
(bad)
and
mov
ror
aad
arpl
fs
dec
les
or
nop
ja
sti
pusha
pop
or
mov
or
xchg
dec
mov
and
mov
add
cs
mov
jns
sar
ins
sub
dec
sub
(bad)
clc
cmp
xlat
clc
jmp
xor
cli
ins
outs
pop
ret
daa
lock
sub
lea
push
sub
into
push
push
mov
jne
fldcw
(bad)
sub
nop
push
push
jg
pusha
enter
xor
fs
hlt
xor
cmp
or
bound
dec
push
or
add
fs
sti
adc
sbb
pop
pop
arpl
mov
jmp
mov
int
(bad)
bound
fistp
loopne
mov
xchg
add
shl
jbe
scas
movs
xlat
into
push
dec
in
lock
cwde
sbb
mov
mov
push
dec
add
sub
and
jb
sub
add
in
xor
push
mov
(bad)
stc
add
inc
xor
or
int
and
mov
mov
es
ret
ds
mov
ins
adc
or
dec
pop
dec
add
scas
xor
inc
pop
sar
cmp
and
dec
leave
mov
hlt
xor
mov
xor
jmp
mov
fldenv
mov
push
or
ret
push
pop
jp
jmp
enter
in
xchg
std
cmp
jne
or
add
sub
jne
(bad)
sti
fisttp
xchg
xor
pop
xor
mov
(bad)
aam
xor
cmp
adc
arpl
dec
enter
in
fdivr
test
mov
inc
ins
pusha
test
add
and
sub
daa
iret
adc
je
(bad)
int
or
jnp
xor
mov
sub
(bad)
pop
cmp
out
cmps
pop
stc
mov
adc
push
dec
(bad)
jmp
sbb
cmp
sbb
inc
sbb
xchg
rol
jmp
add
inc
in
fiadd
mov
mov
xchg
(bad)
iret
retf
or
leave
es
and
sub
jb
pop
sub
sar
jge
adc
and
inc
rol
push
and
or
dec
adc
adc
gs
loopne
sub
les
fwait
add
lock
js
or
(bad)
and
jnp
mov
inc
pop
iret
scas
es
mov
(bad)
mov
mov
mov
sbb
jne
ja
in
pop
add
inc
cmps
adc
lock
dec
aam
loope
push
dec
maskmovq
mov
cmp
aas
mov
(bad)
jmp
mov
mov
(bad)
fdivr
call
lea
imul
add
mov
add
jg
adc
mov
lods
or
(bad)
fmul
push
add
push
fcmovu
adc
movs
repnz
(bad)
sbb
ret
aas
stc
and
add
push
mov
enter
repnz
mov
(bad)
mov
mov
push
ret
adc
cmps
push
scas
sbb
mov
xor
inc
sbb
lock
sub
dec
mov
pop
push
xor
test
imul
pop
cmps
add
jmp
cmp
aaa
pop
or
or
xchg
mov
shl
and
pop
cmp
test
jg
jno
ret
cwde
(bad)
jge
repnz
dec
or
xchg
push
stos
jecxz
fcmovb
dec
nop
pop
(bad)
sar
fmul
test
inc
mov
jbe
setl
or
shr
gs
addr16
inc
add
xchg
fnstcw
in
and
jg
cmp
jl
loop
and
rol
xchg
mov
popf
movs
sti
push
or
or
sbb
movs
mov
jge
sbb
jle
std
fisttp
mov
test
popa
hlt
jl
int
mov
add
inc
adc
out
or
ror
xchg
es
out
dec
pop
mov
call
push
stc
sub
mov
xchg
xchg
inc
push
cmp
pop
enter
xor
and
push
sbb
out
dec
push
and
loopne
addr16
outs
sub
popf
adc
ror
inc
add
lods
aas
mov
sub
ret
jno
cdq
sub
fwait
popa
fwait
popf
jmp
adc
sub
movs
movs
push
pop
and
(bad)
nop
sbb
inc
in
xor
xchg
xlat
cmp
inc
jge
adc
(bad)
ds
and
cmp
push
add
movs
hlt
pop
jae
mov
add
xor
inc
movs
iret
fiadd
in
lahf
dec
mov
add
lock
jb
scas
pop
popf
add
mov
out
mov
out
lea
xor
adc
jp
cmp
jmp
sbb
add
cmp
jno
adc
popf
(bad)
sub
sbb
or
loop
inc
stos
cmp
les
pop
xchg
adc
das
lods
push
popa
loopne
ret
or
ins
(bad)
retf
jg
cdq
push
inc
and
sbb
fistp
xor
popf
mov
inc
or
mov
(bad)
cmp
inc
iret
lea
pop
icebp
mov
push
adc
aad
cmp
push
enter
cmp
mov
and
mov
shr
adc
aad
pop
mov
enter
or
fwait
add
xor
out
enter
enter
mov
add
stc
add
xchg
jno
ds
clc
xlat
push
and
pop
in
int3
test
add
(bad)
push
mov
and
push
adc
push
jmp
sbb
add
(bad)
mov
loope
sub
fist
ficomp
enter
add
jmp
mov
xchg
(bad)
daa
xchg
nop
xchg
or
aas
ins
pop
test
xchg
sub
test
mov
or
mov
jne
dec
mov
or
sub
mov
and
sbb
icebp
repnz
jae
ror
adc
and
je
push
or
adc
add
sbb
and
cmp
aaa
xor
sub
xor
out
out
add
xor
sbb
or
or
mov
pushf
sub
dec
das
mov
cmp
push
add
adc
mov
xchg
or
cmp
jge
in
dec
stos
inc
inc
sub
cmp
mov
imul
sar
add
add
and
loopne
aad
inc
jo
sahf
cmp
push
jne
pushf
loopne
dec
pop
pusha
addr16
lds
adc
push
lods
arpl
inc
sub
adc
lods
sub
inc
mov
push
and
mov
loop
pop
int3
jmp
je
cmps
mov
clc
add
int
cmp
jle
or
loope
lock
test
dec
dec
add
sub
movs
add
adc
inc
lods
push
xchg
ins
mov
pop
and
lods
inc
or
or
movs
mov
or
dec
cmp
push
aam
in
fwait
push
jecxz
xlat
sbb
and
jmp
pop
mov
dec
pop
daa
inc
sbb
retf
js
push
inc
mov
dec
adc
or
outs
jo
imul
xlat
out
mov
fadd
pusha
mov
test
(bad)
or
ror
dec
std
adc
jp
inc
out
adc
test
dec
adc
or
xchg
mov
ficomp
dec
push
scas
sub
sbb
push
jmp
jmp
out
mov
lea
and
mov
cmp
bound
popa
xchg
dec
es
cs
add
or
or
fsubr
xchg
out
add
push
aaa
imul
lock
lods
mov
sub
(bad)
repnz
in
fiadd
push
mov
adc
inc
dec
cmp
adc
pop
addr16
jmp
cmp
popa
test
jg
jmp
or
mov
mov
dec
lods
rcl
test
test
or
mov
mov
sub
jmp
test
push
fisttp
outs
gs
dec
push
aas
fs
cmp
adc
clc
jae
xchg
inc
jl
daa
or
hlt
and
or
test
adc
inc
lea
pop
test
es
pop
test
dec
inc
mov
nop
sub
jg
lock
je
inc
add
xchg
pop
adc
ror
jg
dec
or
ret
add
cmp
mov
jl
popa
or
lds
add
add
sub
dec
data16
push
outs
mov
or
repnz
test
test
jno
dec
test
fsubr
adc
sbb
jno
push
xchg
adc
mov
in
jo
pop
(bad)
stos
lds
jae
add
(bad)
call
push
in
ret
jo
jno
out
adc
bound
stc
jae
xchg
cdq
(bad)
and
mov
adc
cmps
and
mov
sbb
and
push
mov
adc
add
mov
movs
xchg
lahf
jecxz
addr16
sbb
ins
cmps
pop
outs
mov
xchg
mov
mov
jmp
xchg
sar
adc
dec
adc
mov
push
ds
leave
push
inc
retf
neg
pop
mov
inc
nop
jb
enter
push
push
(bad)
and
adc
mov
push
pushf
xchg
(bad)
stos
mov
xlat
jl
jnp
push
pop
shl
cmp
and
mov
and
cmp
or
rsqrtps
xchg
test
or
push
add
mov
adc
dec
scas
inc
(bad)
xlat
adc
rcl
not
sub
ret
dec
xor
int3
mov
leave
sub
dec
inc
or
mov
adc
test
or
movs
inc
pop
bound
loopne
arpl
cmp
push
pop
sbb
push
xor
fisub
mov
xor
pop
(bad)
pop
jecxz
push
xor
or
inc
jmp
test
and
lods
dec
cmp
movs
cmp
dec
clc
outs
jne
aam
cmp
mov
sub
sub
dec
aaa
pop
sub
loop
adc
jp
pop
mov
dec
jne
and
jbe
xchg
into
jne
inc
hlt
add
ret
call
adc
je
jo
xor
mov
cmp
es
xchg
pop
push
in
adc
retf
cmp
xor
loopne
pop
ins
jl
mov
jne
dec
and
data16
pusha
addr16
ror
mov
jecxz
mov
test
aam
or
sbb
rol
jle
push
int
cwde
out
cmp
sub
lods
jb
jecxz
xor
sub
jle
mov
cmc
add
add
ja
ja
mov
jmp
cmp
inc
fst
retf
ja
inc
popa
adc
(bad)
mov
pop
cld
mov
rcr
(bad)
pop
xchg
dec
inc
jno
cmp
or
adc
mov
jo
in
sub
test
add
pop
stos
fimul
cmp
pop
dec
jle
nop
(bad)
and
push
mov
stos
fimul
inc
and
and
dec
adc
movs
jne
popa
jecxz
inc
leave
jmp
test
sub
aam
int
jae
inc
test
imul
popa
inc
mov
cmp
mov
xlat
and
repnz
or
lods
jb
inc
call
dec
loop
xchg
adc
add
mov
shr
sbb
cmp
rcl
cmp
mov
addr16
outs
push
fcomp
pop
push
js
mov
add
dec
arpl
in
adc
loop
ins
xchg
lock
jp
rcr
sti
jle
lock
es
imul
or
or
lock
jno
call
or
div
pop
push
pop
mov
dec
sbb
adc
add
test
pop
dec
sub
retf
loopne
daa
mov
sub
push
cdq
push
push
and
ins
xchg
outs
mov
pop
cwde
dec
adc
push
sub
mov
add
enter
aad
adc
or
or
cmp
in
sbb
inc
pop
leave
add
enter
sub
nop
or
adc
xor
fdiv
add
test
inc
daa
mov
in
es
xor
push
pop
stos
sub
mov
rcr
aaa
rcl
test
fidiv
in
call
loopne
sbb
push
xchg
out
fadd
jge
and
test
or
ds
or
xchg
int
sub
push
and
mov
sub
jge
inc
or
sbb
xor
pop
pop
sbb
add
lock
das
cmps
aas
mov
adc
jae
xchg
fdivr
mov
mov
(bad)
fwait
and
inc
imul
and
push
pop
adc
xor
or
adc
push
push
dec
shr
loopne
jle
fcom
or
xor
ds
ret
fdiv
pop
jo
retf
aad
xor
leave
lds
bound
xor
test
test
cmp
loope
push
pop
jbe
adc
aaa
out
out
or
jnp
jbe
test
jmp
mulps
test
cwde
pop
sub
in
adc
sub
push
cmp
mov
cld
push
sbb
daa
fild
sub
xor
aas
pusha
xchg
out
or
jne
cld
clc
xor
cld
hlt
sub
fs
cmp
fidiv
hlt
cmp
xlat
aam
adc
scas
sbb
icebp
mov
push
dec
fimul
mov
push
nop
xchg
(bad)
add
loop
mov
nop
xchg
dec
call
cdq
or
sbb
add
jns
inc
push
or
or
es
push
xchg
adc
lods
fs
scas
fld
(bad)
fsubr
sub
ja
scas
in
into
test
outs
mov
add
add
push
and
sub
push
push
push
and
mov
cdq
xor
add
dec
(bad)
mov
retf
(bad)
pop
cmp
push
mov
mov
xor
das
sbb
adc
dec
xor
adc
adc
sbb
add
aaa
lea
ins
ins
xchg
sub
sahf
test
ss
pop
add
data16
movsx
mov
lock
xor
mov
sbb
test
outs
mov
mov
xor
gs
dec
sbb
ss
test
jnp
push
jmp
mov
mov
mov
jne
mov
and
das
test
adc
add
adc
xchg
dec
adc
test
pop
add
pop
jb
push
mov
inc
ins
lods
xlat
imul
and
mov
mov
add
or
loopne
sub
addr16
pusha
add
in
(bad)
and
add
xor
pop
or
ret
add
in
add
push
arpl
sbb
sbb
inc
iret
or
adc
je
enter
push
nop
pop
jo
sbb
add
int3
jo
daa
hlt
in
pop
push
cmp
mov
outs
cmpps
or
cmp
jne
xor
cmp
xchg
sub
iret
xor
mov
cld
inc
imul
push
and
dec
sub
cmp
pop
jb
aaa
xchg
sti
or
das
out
sub
push
pusha
iret
jmp
test
sub
inc
add
rcr
andnps
enter
add
ror
xor
mov
add
jo
push
jns
and
pop
adc
inc
outs
dec
xor
cmp
push
push
and
xchg
jmp
cmp
popa
jnp
xor
mov
das
sbb
or
or
pushf
pusha
adc
shl
push
pop
mov
movs
push
in
jno
rcr
push
push
jb
pop
nop
(bad)
in
xor
ret
xor
push
or
fdivr
cmp
push
or
imul
push
aaa
sub
scas
int3
jno
mov
test
loopne
clc
ss
inc
and
int
or
adc
dec
aam
es
mov
cs
add
sub
inc
ret
xor
cli
inc
cmp
inc
mov
mov
movs
sub
jnp
mov
push
add
test
imul
sahf
or
fidiv
fs
jo
xor
int
mov
aas
popa
test
mov
adc
cmps
xchg
pop
or
dec
movs
xor
inc
enter
in
ss
jecxz
cmps
in
inc
add
dec
mov
add
scas
je
cmp
cld
loopne
dec
loopne
in
imul
push
bound
fdiv
add
mov
in
sti
sub
inc
or
cmp
xchg
push
mov
push
xor
or
loopne
push
sbb
fmul
pop
fcmovne
dec
sub
mov
fwait
mov
xchg
div
shl
aam
loopne
bound
fistp
adc
lea
scas
call
and
dec
bnd
jns
xchg
cmp
push
xchg
xor
icebp
xchg
lock
push
hlt
add
dec
mov
pop
xchg
sar
pop
ds
arpl
loopne
push
sbb
enter
es
iret
cmp
mov
pop
nop
in
sbb
add
add
or
add
add
mov
loopne
sar
mov
xchg
loopne
sbb
bts
jmp
inc
movs
cwde
test
mov
adc
movs
retf
(bad)
xchg
sbb
mov
xor
add
call
into
adc
jne
mov
adc
adc
dec
daa
ins
mov
push
adc
fcmovnb
mov
and
out
push
(bad)
xchg
jmp
adc
push
dec
cmp
pushf
sub
or
ror
sub
xchg
cmp
jae
pop
push
push
arpl
push
cmp
outs
es
jb
mov
ja
add
aad
test
xchg
or
add
xchg
cs
dec
cmp
xchg
inc
dec
dec
icebp
sbb
inc
inc
shr
push
dec
add
xchg
mov
jns
pop
fcomp
and
fild
push
adc
add
mov
ds
add
or
jbe
adc
pop
add
fcomp
inc
test
xor
push
jbe
jb
mov
adc
leave
aas
pusha
repz
push
jb
xor
mov
pop
ror
sub
out
enter
iret
pusha
inc
adc
popa
movs
imul
dec
jnp
ds
mov
call
push
mov
call
cmps
add
loop
pop
pop
mov
adc
add
cdq
xchg
sub
add
pop
jnp
mov
movs
fcom
dec
jmp
das
dec
ins
jns
pop
push
adc
push
(bad)
mov
or
xor
lds
sbb
or
lods
push
jb
sbb
bound
jno
jns
das
jno
or
and
(bad)
fiadd
adc
arpl
cmp
sub
sub
dec
aad
push
lock
jb
adc
pusha
or
sub
pusha
cmp
push
inc
mov
jae
mov
leave
push
xchg
mov
jae
retf
lock
in
cwde
pop
inc
rcl
in
(bad)
lea
call
cmp
mov
daa
jl
shl
sbb
lahf
inc
mov
shl
rcl
mov
pop
das
dec
js
sbb
retf
ror
pop
mov
outs
mov
mov
fxch
cmp
inc
call
arpl
inc
call
xor
into
inc
push
lock
xor
bound
dec
pop
arpl
das
inc
sbb
shl
xchg
pushf
clc
push
shl
je
stos
rcl
(bad)
out
adc
dec
pushf
aas
or
mov
sar
add
loope
das
(bad)
jle
cmp
adc
sub
lods
push
(bad)
retf
and
xchg
xor
jnp
add
das
sbb
daa
push
dec
int
stos
mov
dec
adc
dec
js
cld
cwde
in
and
push
lock
into
xor
sub
add
adc
push
jns
inc
jl
fcom
pop
hlt
mov
inc
add
in
mov
pop
ret
clc
clc
mov
cmp
or
jecxz
rcr
psubusw
mov
mov
or
ss
sbb
aam
cmp
repnz
sbb
mov
nop
dec
mov
dec
push
ror
sub
dec
mov
sub
inc
(bad)
mov
xor
add
out
sub
xor
and
enter
adc
xchg
rcr
fcmovnu
in
addr16
sub
pop
push
imul
popa
dec
jnp
das
in
push
in
add
lods
imul
cli
jno
xor
sbb
inc
jle
and
pop
cmp
push
pop
stos
and
sub
and
inc
js
in
int3
and
fprem
fisttp
movs
popf
nop
jle
inc
test
fcmovnbe
imul
or
sub
js
push
jge
sete
pop
push
cmps
retf
cmp
pop
adc
pop
dec
dec
ss
mov
int
pop
lock
jmp
jecxz
test
in
pop
inc
test
aas
push
js
mov
je
jns
js
mov
push
in
ds
adc
loopne
aas
aad
push
cmp
scas
(bad)
dec
and
and
ja
mov
je
loope
leave
push
jbe
mov
ret
dec
sbb
or
enter
pop
inc
xor
mov
adc
add
sbb
jg
cmp
jg
pop
outs
dec
(bad)
add
lods
pusha
dec
ret
data16
repz
ror
or
push
out
xor
sub
inc
and
(bad)
(bad)
dec
or
dec
daa
adc
clc
xchg
sbb
pop
bnd
inc
or
inc
adc
dec
adc
pop
(bad)
xlat
int
xchg
push
dec
add
sbb
or
add
call
push
jecxz
test
add
lahf
push
push
test
iret
adc
adc
mov
mov
pop
ins
and
(bad)
and
inc
mov
(bad)
sub
adc
and
imul
jo
dec
and
frstor
test
mov
fisttp
cmp
adc
rcl
xor
xor
mov
test
fcomp
pop
loope
imul
and
out
push
jmp
inc
(bad)
mov
int
daa
xlat
cmc
or
jne
and
jne
(bad)
call
(bad)
xlat
enter
jp
and
fmul
add
push
pop
or
int
sbb
aas
je
push
xor
pusha
pop
mov
add
adc
sti
das
(bad)
leave
adc
es
mov
or
inc
inc
call
sti
lock
sbb
fs
arpl
jns
rcr
mov
or
dec
push
jns
enter
lea
or
jecxz
sbb
ror
sub
xor
ins
jo
fcomp
adc
retf
cmp
inc
or
fadd
rcr
cdq
add
aad
jle
sbb
in
mov
retf
aam
pop
sbb
lods
pop
sub
jl
mov
cmp
daa
test
test
and
ret
or
jmp
sbb
and
cli
dec
add
xchg
cmps
push
test
mov
loop
cmp
es
sbb
xor
in
cmp
icebp
iret
lods
jne
dec
cmp
or
cmp
jb
cmps
mov
loopne
lea
add
stos
push
loopne
mov
pop
push
test
jbe
int3
int3
and
fsubr
mov
icebp
ja
jmp
lea
jns
mov
popa
enter
adc
or
cmps
lock
mov
push
movs
loope
in
push
adc
xor
or
inc
jmp
sbb
test
cmp
sbb
in
loopne
fdiv
stc
xor
adc
shld
dec
clc
inc
add
in
sub
fidiv
sbb
sub
clc
mov
dec
push
ret
cli
cmp
mov
outs
sbb
mov
addr16
je
leave
or
dec
imul
shr
std
add
in
fist
in
idiv
aaa
js
call
(bad)
loopne
jo
aad
fmul
in
dec
(bad)
out
sbb
idiv
mov
sbb
lahf
(bad)
jne
aad
lods
test
sbb
jae
adc
or
pop
test
push
aaa
retf
aas
mov
add
lods
(bad)
(bad)
dec
cmp
gs
mov
(bad)
mov
jne
inc
js
sbb
sbb
and
nop
inc
cmovo
cdq
nop
add
adc
or
or
pop
or
mov
in
sub
nop
daa
(bad)
mov
aaa
or
clc
lds
mov
or
xor
pop
adc
out
inc
pop
inc
and
sub
and
mov
lea
jg
mov
(bad)
jmp
out
and
adc
jg
mov
push
nop
imul
add
add
and
out
enter
and
xchg
or
and
bound
jmp
mov
repz
sbb
jns
call
xchg
icebp
mov
addr16
sub
or
adc
add
jae
repnz
div
sbb
xlat
push
add
mov
add
hlt
dec
mov
mov
shr
jae
mov
into
and
fldenv
sub
es
dec
dec
sbb
cmp
add
das
jno
inc
test
cmp
add
or
add
or
sub
push
nop
jmp
and
push
sbb
sub
mov
sbb
xchg
rcr
adc
and
adc
cs
pusha
mov
xchg
inc
mov
retf
je
sar
mov
nop
pop
les
out
jne
sub
or
and
xchg
mov
inc
jg
bt
jae
lea
push
sbb
or
lods
std
ds
and
sub
jnp
and
and
sub
xchg
sbb
lock
sahf
pop
inc
or
fild
cmp
inc
cdq
xchg
arpl
and
(bad)
xchg
fisttp
fnstenv
es
mov
cmp
ja
dec
xlat
sub
or
shr
adc
adc
adc
add
mov
jge
add
test
out
sub
test
arpl
mov
and
xor
out
or
or
rcl
aaa
sti
push
xor
ret
lahf
daa
cmp
and
aaa
mov
ja
adc
xchg
mov
(bad)
cld
push
out
xor
in
sbb
push
mov
pop
push
push
and
pop
add
ds
fist
cmp
add
and
ds
mov
fisttp
pop
jo
cs
cmp
mov
mov
xor
in
test
push
pusha
(bad)
pusha
ja
and
pop
sub
loop
and
in
fld
fcompp
xor
push
fcomp
movs
add
repz
sbb
addr16
and
repnz
clc
hlt
add
or
mov
inc
ror
push
cld
mov
inc
clc
inc
jg
xor
pop
and
xchg
or
clc
jno
cmp
jb
cmp
sbb
aaa
mov
add
pusha
leave
(bad)
xor
inc
add
mov
loop
out
mov
mov
mov
jmp
add
cmp
arpl
xchg
jns
cmp
mov
jns
je
fsubr
mov
in
jo
in
and
add
pop
mov
sbb
add
ror
or
mov
fld
pop
mov
in
fwait
jp
add
inc
add
std
push
stos
dec
add
ds
mov
mov
gs
inc
mov
je
push
sbb
repz
clc
imul
mov
test
mov
(bad)
shl
imul
ret
aaa
push
pop
pusha
push
fs
cmp
pop
retf
or
in
jp
cmp
jo
outs
push
push
cmp
fisttp
(bad)
sbb
xor
lock
inc
pop
sbb
inc
push
inc
cwde
in
sub
adc
xor
mov
cmp
inc
fcomp
pop
das
sbb
push
push
add
data16
(bad)
xor
pusha
aam
jge
repz
inc
mov
cmp
adc
cmp
mov
test
shl
in
push
mov
and
test
xchg
fs
in
fstp
les
xor
lock
in
and
sbb
dec
adc
jmp
and
inc
loope
mov
popa
mov
adc
(bad)
clc
or
sbb
pop
rcl
in
sub
test
pop
mov
or
hlt
jmp
stc
xor
stos
push
or
sbb
sbb
or
rol
pop
icebp
add
or
call
add
in
jle
mov
gs
fs
mov
jb
adc
xchg
repz
xchg
or
sub
aad
(bad)
pop
movs
mov
mov
or
les
add
mov
wrmsr
shl
pop
adc
movs
sbb
loopne
sbb
nop
jg
test
jp
xor
in
pop
jge
xchg
mov
leave
xchg
ins
test
and
or
sbb
mov
lock
xor
fdiv
ja
xchg
mov
adc
aam
xrelease
mov
daa
lea
add
mov
sbb
sbb
push
ret
daa
hlt
cs
pop
xor
es
cmp
adc
call
loope
mov
adc
xchg
hlt
cvtps2pd
sub
push
mov
mov
add
rol
shl
jbe
sub
push
push
or
mov
rcr
jo
mov
cmc
pop
dec
dec
inc
enter
pushf
xchg
pop
dec
inc
pop
jle
add
or
cmps
mov
jb
jmp
inc
pop
fbstp
and
mov
outs
add
(bad)
add
in
lock
mov
jne
adc
ins
mov
sub
xchg
stos
test
add
pop
mov
call
or
push
movs
push
mov
or
(bad)
les
push
int
push
xor
(bad)
les
addr16
sub
cmp
imul
imul
and
jno
jecxz
vmovss
push
es
(bad)
les
enter
in
push
push
pop
sbb
xchg
add
xor
pop
and
imul
mov
cmp
add
push
ja
cmp
test
les
shl
pop
jb
adc
mov
div
je
aam
jb
or
jb
jo
xchg
jns
and
rol
xchg
dec
push
jns
push
aam
js
rcr
inc
push
pop
shl
loope
xchg
call
fst
aaa
xor
fadd
cmp
adc
fmul
add
fstp
and
paddsb
mov
jle
leave
and
add
fdivr
jne
fsubr
mov
imul
adc
int3
test
dec
repnz
sbb
enter
sbb
sbb
mov
push
in
dec
dec
xchg
xor
std
test
lock
adc
or
lea
adc
les
(bad)
lock
in
(bad)
into
jp
sahf
imul
xlat
pop
lock
and
add
in
xor
and
jecxz
or
and
cld
hlt
and
pop
lock
mov
and
les
xchg
test
es
sahf
(bad)
mov
in
or
adc
inc
add
push
xchg
adc
retf
xchg
pop
repnz
sbb
test
jb
sbb
jne
aam
daa
xor
sub
hlt
xchg
popa
cmps
pop
sbb
xor
add
jle
adc
xor
cmp
dec
pop
test
mov
pop
xchg
cmp
xlat
outs
rol
push
(bad)
jmp
add
pop
in
inc
sahf
add
(bad)
xchg
mov
add
add
xchg
test
ja
je
cmc
and
add
and
icebp
ss
arpl
aas
test
(bad)
xor
aaa
clc
jge
xor
nop
cli
ss
push
mov
jmp
mov
cmps
pop
mov
cld
mov
xor
rcr
inc
or
dec
sub
or
xchg
inc
dec
ja
retf
mov
and
test
aaa
adc
movs
mov
inc
or
cmp
int3
inc
jnp
push
cmp
fist
sub
adc
dec
mov
rol
cmp
push
cmp
fisttp
push
dec
lods
je
and
dec
cmps
cmp
cld
mov
push
pop
add
ret
retf
push
repnz
or
fisttp
jl
popa
mov
fimul
cld
add
nop
push
sbb
ss
dec
adc
sbb
inc
or
pop
add
cmp
or
into
sub
retf
or
pop
adc
cmp
test
sbb
mov
adc
push
ret
aaa
hlt
stos
jmp
jo
inc
out
push
jbe
(bad)
js
mov
scas
in
or
ret
or
jmp
jbe
xchg
and
dec
call
clc
sub
(bad)
sbb
mov
and
adc
or
jl
inc
ds
rol
pop
adc
mov
adc
neg
stos
test
or
daa
pop
jb
inc
push
adc
ins
fisttp
int3
jnp
xchg
jae
sbb
adc
daa
cwde
mov
(bad)
stos
jnp
add
rcl
mov
loope
ins
cmp
adc
or
cs
add
mov
je
jp
fwait
xlat
adc
add
ds
movs
jge
jne
inc
cwde
movzx
and
ficom
ret
cld
push
push
pop
jmp
data16
push
(bad)
mov
(bad)
inc
sub
in
sbb
inc
in
(bad)
shl
cmp
mov
push
outs
jo
sahf
inc
cmp
ror
ins
imul
cs
push
fidiv
sahf
pop
arpl
dec
pop
push
xchg
sbb
fimul
addr16
push
ret
call
jg
call
jne
es
sbb
in
les
mov
or
push
test
add
loopne
dec
xchg
cs
pop
daa
dec
xlat
inc
mov
mov
hlt
pop
push
inc
sub
pop
add
and
xor
push
fisubr
inc
xor
sbb
popa
jle
sub
adc
inc
dec
jne
sbb
and
mov
adc
pop
jns
and
outs
test
or
xor
je
stos
dec
add
orps
sub
xchg
(bad)
jmp
sbb
sbb
and
rcr
pop
add
push
inc
daa
adc
add
add
jmp
or
ja
mov
mov
adc
das
jo
xor
push
push
loope
fs
sti
repz
or
jp
inc
sbb
pop
sbb
mov
in
cmc
es
pop
adc
mov
sbb
xchg
leave
gs
js
cli
xor
les
arpl
mov
pop
test
add
cmp
or
adc
adc
(bad)
push
adc
(bad)
push
fist
sbb
push
fisttp
xchg
inc
cli
push
push
or
loope
mov
outs
out
sub
dec
xor
push
xchg
jge
or
pop
imul
and
jae
bound
push
adc
js
jmp
or
add
int3
(bad)
and
or
retf
jle
ins
sahf
sub
add
or
or
push
aas
or
jmp
xchg
add
and
mov
cmp
or
mov
popa
movs
or
(bad)
xchg
in
js
ins
fwait
and
push
pop
cwde
sti
sbb
lods
push
popa
adc
inc
and
test
hlt
xchg
popf
mov
pop
mov
mov
mov
push
in
mov
sbb
fild
clc
dec
pop
aam
lock
in
push
ror
xchg
sub
add
addr16
les
and
in
and
pop
pop
push
mov
sbb
xchg
jl
pop
mov
adc
or
repz
movntps
inc
test
mov
adc
xchg
rol
cmp
pusha
push
in
jmp
or
push
imul
in
and
xchg
mov
aad
push
sbb
retf
shr
loope
xchg
not
or
mov
and
cwde
xchg
xor
nop
or
ret
mov
push
adc
sbb
xchg
fldcw
(bad)
or
sbb
clc
add
sbb
add
push
sub
fdivr
or
add
cmp
mov
xchg
sahf
dec
pop
adc
aas
test
bound
push
mov
xchg
test
bound
ss
jp
jmp
je
cmp
xor
xchg
in
or
adc
mov
mov
add
loope
or
movaps
add
lock
inc
or
in
or
popa
jmp
mov
sahf
cs
cli
jnp
and
xchg
setae
arpl
in
outs
xchg
daa
mov
lea
aas
call
pop
js
dec
xor
mov
shr
lods
adc
inc
in
jl
mov
xchg
outs
sbb
jge
add
dec
adc
add
enter
nop
(bad)
pop
iret
xchg
add
mov
mov
inc
inc
push
cmp
test
hlt
hlt
or
dec
or
push
mul
jecxz
push
mov
jmp
push
mov
cmp
inc
(bad)
jmp
daa
lock
adc
addr16
js
mov
jle
fmul
popa
xchg
lods
sbb
jbe
clc
add
dec
adc
xor
mov
cmp
ja
push
repnz
mov
fdiv
sub
dec
pop
popa
ret
lds
inc
fisttp
and
sbb
add
mov
add
xchg
ret
xchg
jle
sbb
sub
pop
test
mov
add
inc
jnp
mov
pop
das
xor
push
inc
retf
add
enter
add
lds
inc
jmp
fld
xor
add
push
xor
pop
test
nop
mov
or
pop
cmp
pop
push
scas
jno
push
mov
lds
mov
add
or
push
push
push
sbb
pop
xchg
scas
xor
mov
call
pop
inc
pushf
xor
inc
mov
ret
or
fs
push
add
ret
mov
push
(bad)
xchg
dec
add
push
je
ret
add
add
sbb
inc
sbb
mov
sbb
pop
mov
or
or
pop
cld
inc
clc
add
push
inc
mov
inc
not
sbb
mov
xor
cld
stos
cmc
rcl
add
xlat
sbb
movs
(bad)
test
sti
dec
add
hlt
mov
mov
mov
pusha
call
addr16
or
je
jb
xor
cmp
adc
ds
jb
push
push
cmc
mov
inc
jo
jae
inc
and
and
or
das
nop
and
and
inc
ins
sbb
inc
inc
test
inc
outs
ja
sbb
(bad)
cs
gs
cs
outs
out
mov
and
ins
push
pop
add
ins
je
frstor
dec
add
push
jo
gs
sub
inc
imul
push
outs
out
push
inc
outs
fst
jo
ins
rcr
aas
dec
mul
push
jg
jb
and
pop
inc
imul
pusha
jo
outs
push
cdq
arpl
out
cwde
jb
mov
dec
pop
xor
mov
and
cmp
or
dec
cdq
jne
imul
cld
jnp
outs
sub
jae
outs
jo
and
sahf
popa
je
outs
inc
push
rcr
xor
outs
jg
sti
arpl
outs
or
popa
and
ins
popa
sti
inc
push
or
and
xor
sub
or
ret
xor
outs
push
movs
push
bound
pop
cmp
outs
inc
push
movs
test
dec
dec
arpl
push
jo
sbb
jo
and
dec
or
pop
ja
stos
mul
push
fcomp
mov
dec
test
mov
inc
jl
xlat
dec
push
push
inc
fs
pop
push
pop
fcomp
mov
out
xchg
stos
das
push
ja
rcr
dec
or
and
xor
(bad)
push
dec
mov
and
lods
mov
jo
cmps
and
mov
or
cmp
xor
jne
sar
int
lahf
es
mov
and
adc
stc
imul
cld
enter
and
and
dec
in
pop
jge
popf
rcl
push
adc
jno
mov
add
aad
adc
or
jmp
or
inc
pop
retf
sub
dec
sbb
mov
push
xchg
dec
mov
push
mov
pop
inc
imul
shl
icebp
dec
imul
std
jp
sti
cmp
lock
arpl
imul
gs
pop
add
shr
jge
out
add
pop
loope
or
inc
js
outs
popa
scas
fucomip
sub
dec
mov
inc
aas
adc
jne
cld
jno
gs
inc
push
inc
fist
imul
loope
in
dec
pop
jae
push
int
in
stos
ins
push
dec
or
ror
cs
outs
xchg
xchg
pop
cmps
push
cmp
add
js
mov
xchg
je
cs
inc
daa
and
push
dec
push
dec
push
and
sub
imul
sub
mov
fwait
bound
dec
adc
ret
mov
ins
imul
cmp
ja
or
fist
inc
cmps
test
jp
jo
cmp
sub
xchg
adc
jb
sub
sub
or
pushw
je
jmp
adc
pop
enter
mul
or
add
dec
inc
xchg
out
push
movs
fcom
inc
jb
jbe
call
popa
jne
mov
mov
sub
cmp
adc
fs
je
mov
push
push
imul
inc
and
clc
jo
xchg
jae
pop
jno
xor
dec
dec
inc
pop
repz
std
inc
dec
inc
dec
inc
dec
pop
aas
(bad)
imul
and
in
pop
fidivr
mov
mov
pop
(bad)
and
mov
arpl
aaa
and
es
psubw
arpl
fistp
add
sub
and
(bad)
fnsave
xchg
push
(bad)
nop
sbb
mov
lock
(bad)
mov
and
jb
mov
mov
or
pusha
(bad)
daa
sbb
jle
in
mov
(bad)
cld
cmovle
push
push
or
cmps
les
mov
call
std
mov
cmp
mov
and
mov
xlat
mov
push
mov
enter
or
mov
sbb
jo
jo
sub
repz
mov
scas
popf
jno
into
pop
and
in
enter
pop
pop
jl
rol
jns
jb
push
hlt
add
loopne
lea
or
pop
push
sar
dec
cld
jne
add
dec
or
pop
or
lock
out
popw
gs
xchg
and
sbb
pushf
out
aaa
mov
and
xchg
stos
mov
dec
in
cmp
jne
pop
xor
in
add
not
cs
jp
popa
mov
(bad)
pop
mov
stos
push
mov
mov
jno
and
sbb
push
mov
cmps
adc
xchg
adc
fst
popf
xor
iret
in
loop
mov
call
lahf
jmp
add
sub
outs
xor
add
in
inc
dec
fdivr
push
test
and
inc
pop
adc
mul
pop
xlat
bound
loope
hlt
push
pop
in
test
xchg
movs
push
or
clc
ja
popa
xor
lods
pusha
and
pop
cs
pop
pop
inc
jne
jb
push
xor
lahf
add
push
daa
mov
inc
cmc
dec
push
retf
xchg
addr16
or
mov
mov
push
adc
inc
pop
test
adc
push
retf
leave
mov
xchg
lea
mov
sub
sbb
sbb
scas
or
ficom
mov
jle
cli
adc
jae
sub
fnstenv
and
cmp
xor
cmp
call
mov
inc
sbb
add
push
adc
in
test
and
dec
inc
adc
jp
pushf
cmp
aas
sub
lods
cld
retf
ds
xor
cmp
pop
rol
mov
ds
fstp
sbb
mov
cli
jno
xchg
jno
or
xor
mov
or
xchg
jmp
xchg
rcl
mov
xchg
jl
mov
stc
add
push
or
cld
add
pushf
clc
fistp
push
(bad)
sub
jl
push
lahf
jnp
inc
xchg
xchg
mov
inc
add
stos
pop
push
lods
sbb
and
rcr
xor
out
loopne
dec
or
mov
imul
dec
imul
addr16
imul
inc
data16
icebp
js
jo
jae
daa
or
add
add
ret
test
xchg
push
lahf
mov
xor
arpl
xchg
pop
ja
ficom
sub
leave
add
jns
dec
pop
pop
hlt
inc
hlt
and
jo
jb
out
outs
inc
push
leave
add
lods
xchg
retf
inc
sub
add
scas
or
mov
or
loopne
mov
dec
call
sub
jne
push
(bad)
mov
push
and
clc
xchg
jo
push
scas
xor
jecxz
adc
out
lods
(bad)
mov
call
movs
fild
xor
jle
inc
icebp
xor
jae
bound
mov
xchg
pop
into
mov
cmp
mov
xor
mov
test
dec
enter
outs
adc
aaa
push
and
loop
xor
push
shr
xchg
mov
mov
inc
sahf
pop
in
xchg
mov
xor
adc
fnstenv
xchg
pop
add
sbb
cmp
test
shr
inc
sbb
adc
sbb
in
and
scas
ret
xor
ss
jno
inc
ret
movs
imul
adc
ret
pop
in
or
scas
call
and
push
push
and
mov
jns
movs
xor
les
shl
fsub
sub
xchg
cmp
cmp
call
imul
xor
gs
js
jo
sub
shrd
push
in
inc
add
data16
mov
pop
push
loopne
mov
mov
xchg
lods
ss
push
int3
xchg
and
xchg
dec
push
or
ins
ins
call
add
xor
dec
jb
jmp
add
nop
lock
or
mov
push
add
icebp
dec
das
xor
mov
add
add
mov
daa
cwde
and
(bad)
mov
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
dec
cmp
(bad)
in
add
dec
or
je
ins
and
nop
mov
popa
je
xor
inc
clc
aas
cmps
in
cs
fbstp
aaa
cmp
inc
inc
inc
inc
inc
inc
adc
out
int
jp
jg
push
xor
inc
sar
inc
lock
add
mov
add
dec
xchg
sbb
call
cmp
imul
imul
imul
cmps
imul
shl
cmps
clc
add
adc
inc
shl
add
inc
xchg
add
mul
push
xor
pop
push
movs
cld
mov
enter
or
mov
ins
jbe
ja
cmp
and
js
sahf
cmp
enter
test
pop
jp
dec
lds
push
pop
and
pop
test
xor
add
pop
mov
jns
pop
leave
add
adc
mov
mov
or
lods
jbe
pop
jg
repnz
push
or
add
add
add
add
stos
cmp
or
xchg
mov
xchg
fwait
mul
dec
add
pop
or
add
pop
add
pop
add
add
pop
mov
pop
or
pop
cmps
test
loope
out
nop
retf
push
or
inc
pop
mov
div
clc
pop
adc
and
push
push
inc
int3
add
xchg
mov
mov
lds
add
cmp
js
push
adc
xchg
pop
inc
push
adc
and
(bad)
jl
xchg
dec
imul
push
fcom
fwait
dec
nop
shl
cmps
loopne
pushf
cmp
cwde
xor
ss
(bad)
lock
cs
jo
dec
mov
rol
lock
jle
sub
hlt
and
shl
sbb
inc
pop
ins
test
imul
mov
shr
fmul
mov
shr
cwde
outs
xlat
sub
pop
cmps
xchg
push
or
ss
jbe
push
out
xor
div
mov
mov
sbb
mov
(bad)
data16
xchg
outs
pop
cmp
neg
adc
dec
(bad)
es
loopne
gs
mov
adc
ficomp
outs
enter
push
cmp
fimul
ins
daa
clc
outs
mov
imul
jo
ds
push
fsubr
call
add
nop
outs
and
test
mov
shr
push
push
sbb
call
rcr
push
add
mov
scas
(bad)
push
shr
xor
test
sub
aam
jbe
cmp
outs
(bad)
xor
out
inc
push
sahf
cs
clc
push
cmps
pop
sub
inc
push
inc
neg
pusha
imul
push
scas
pusha
inc
push
or
xor
cmp
rcl
sbb
xor
push
push
into
push
inc
out
test
imul
add
xor
shl
test
lock
or
push
push
stos
retf
(bad)
inc
add
mov
jmp
add
inc
add
mov
add
sbb
inc
add
cmps
outs
iret
clc
dec
add
dec
pop
sbb
jg
push
outs
inc
add
imul
push
outs
add
push
data16
cmp
cwde
(bad)
sub
and
or
pop
imul
jns
ja
push
cmps
pop
test
popa
or
pop
add
pop
inc
imul
sbb
add
and
ret
cmps
mov
outs
div
cmp
adc
push
jg
repnz
adc
push
adc
pop
jmp
sub
pop
cmp
imul
jnp
pop
outs
arpl
gs
popf
xor
sbb
add
lods
imul
cmps
and
imul
jae
xor
dec
pop
jmp
adc
pop
popa
sahf
inc
outs
xchg
sahf
add
mov
mov
push
out
mov
or
mov
pop
ins
mov
ja
cmp
jle
push
sbb
mov
dec
sbb
inc
sub
scas
jmp
aas
ss
mov
jno
inc
add
pop
cdq
inc
outs
cs
or
call
arpl
out
jae
inc
pop
sub
ss
ficomp
pop
push
jae
and
mov
in
inc
ret
cmps
pop
adc
push
add
aad
inc
mov
mov
inc
repz
cmps
sbb
(bad)
xlat
jbe
add
js
mov
mov
(bad)
dec
ret
sahf
scas
adc
adc
pushf
adc
jns
jb
sbb
inc
adc
ja
add
adc
mov
adc
daa
pop
xor
loopne
imul
inc
test
adc
cmp
or
mov
jo
fld
mov
push
push
push
cmp
stos
dec
lods
and
pop
pop
push
push
cmp
sbb
sbb
test
(bad)
out
jbe
in
sbb
je
mov
or
push
in
xchg
pop
jb
repnz
(bad)
mov
jmp
loop
or
add
test
fisubr
push
push
gs
inc
push
jnp
push
mov
and
lahf
pop
jbe
outs
ss
scas
or
xchg
or
xchg
ds
lods
pop
fidiv
add
xchg
mov
dec
test
call
or
dec
jmp
outs
popa
ins
adc
or
inc
bound
and
cmp
push
inc
stos
out
push
cdq
ss
add
adc
aam
mov
idiv
push
rol
push
xor
add
shr
inc
cmp
fild
aaa
cmp
cmp
xchg
or
test
jg
loopne
jae
pop
js
jb
jle
adc
push
cmp
or
out
push
mov
es
addr16
push
fwait
add
(bad)
mov
mov
mov
jo
push
xlat
add
fisub
pop
popa
xchg
scas
test
inc
outs
cmp
repnz
sub
sub
outs
and
outs
mov
bound
adc
shr
mov
arpl
mov
push
and
or
jo
mov
inc
bound
add
cli
scas
cs
in
xor
out
fiadd
push
mov
fild
inc
cmp
ret
add
sub
(bad)
icebp
sbb
dec
stos
and
push
mov
mov
dec
scas
inc
fwait
aaa
repz
sbb
retf
out
sbb
int3
pop
or
cmps
cmps
push
je
test
sbb
lea
dec
push
adc
add
and
js
or
pop
push
pop
push
dec
mov
sbb
dec
jbe
or
sbb
and
jno
cmp
bound
addr16
cmp
push
repnz
ins
(bad)
and
jae
or
popa
mov
mov
mov
inc
lahf
(bad)
jo
mov
ds
push
popa
mov
(bad)
dec
xor
mov
push
or
adc
dec
das
and
adc
pop
pop
push
and
ja
inc
jo
and
sub
sbb
aad
push
out
and
jmp
adc
loopne
scas
add
push
or
dec
mov
add
test
jnp
jb
lds
or
sbb
iret
mov
xor
daa
push
ret
adc
xchg
mov
push
fisubr
aad
cmp
mov
dec
iret
popa
addr16
pop
push
pop
mov
mov
jb
imul
cmp
jo
mov
or
pop
imul
lds
sti
inc
fild
div
arpl
pop
fisttp
adc
ja
add
jp
scas
adc
push
xchg
(bad)
fld
ficom
dec
sub
pusha
xor
xor
sub
aas
pop
sti
test
adc
jg
aad
inc
arpl
es
sahf
idiv
xor
repz
add
fwait
cmp
push
add
inc
push
js
inc
mov
test
dec
outs
imul
xchg
adc
adc
sub
jecxz
jmp
adc
add
data16
push
nop
push
call
mov
add
adc
push
gs
dec
or
addr16
ret
dec
fld
and
push
and
fbld
mov
inc
sbb
js
test
cmp
mov
test
pop
xor
add
inc
out
add
inc
inc
xor
xor
gs
add
mov
jl
pop
mov
pop
adc
or
pop
addr16
out
lods
xchg
add
jns
nop
imul
pop
cmp
ret
das
jle
add
xor
enter
add
mov
outs
jg
inc
in
xchg
out
or
xor
or
inc
cs
xor
(bad)
and
pop
in
xchg
sbb
mov
sbb
les
or
cwde
fs
dec
push
or
dec
or
addr16
fadd
xchg
mov
xchg
ins
adc
add
jl
xlat
push
loopne
out
loope
aam
cs
test
jg
out
or
or
or
and
cmc
js
or
inc
sbb
jg
in
xor
fld
cmp
loopne
repnz
enter
add
push
mov
adc
dec
ss
in
movq
xchg
adc
adc
scas
sbb
or
push
adc
add
fistp
enter
mov
push
ficom
movs
push
push
aam
outs
add
ror
adc
push
addr16
and
and
push
adc
inc
ror
mov
ror
int
adc
call
in
push
adc
test
add
hlt
xor
dec
xor
adc
enter
push
mov
test
data16
int
pop
mov
and
and
sbb
inc
ror
in
adc
push
and
sub
sbb
and
dec
xor
test
sbb
nop
xor
push
push
and
add
xor
test
sub
sbb
nop
xor
mov
dec
xor
enter
push
jb
xchg
add
add
inc
int
ror
pop
push
pop
ror
and
cmp
xor
int
ror
and
pop
and
and
add
hlt
fs
ror
and
xor
pop
enter
dec
and
int
test
sbb
je
dec
and
mov
jl
nop
xor
dec
es
dec
xor
test
hlt
xor
nop
xor
mov
xchg
add
sub
or
xchg
push
sub
and
pop
pusha
pushf
push
and
add
sub
xor
int
enter
int
shr
cld
add
or
mov
sub
sub
xor
mov
xor
pusha
xor
les
or
xchg
cwde
int3
imul
int3
xor
aam
xor
mov
cld
dec
pop
fsubr
in
shl
xor
xor
imul
push
sbb
jae
data16
cwde
pushf
add
sbb
jne
push
sbb
jp
jb
imul
xor
add
jl
or
xor
or
dec
xor
xor
adc
cmp
mov
xor
aam
xor
or
xchg
das
or
or
pop
push
sub
inc
call
ret
cs
or
push
mov
or
xor
xor
mov
movs
pusha
mov
or
xor
xor
inc
or
int
pop
jb
or
inc
inc
ror
cmp
js
inc
call
inc
xchg
movs
sbb
test
sbb
inc
fwait
inc
fcom
dec
dec
nop
cs
nop
popfw
inc
or
adc
dec
xor
inc
loopne
movs
inc
or
xor
inc
inc
xor
add
or
call
mov
je
or
sbb
xor
dec
jae
dec
test
data16
shl
xor
movs
imul
(bad)
movs
sbb
or
fiadd
adc
adc
arpl
movs
cmp
xor
mov
imul
ja
cwde
data16
mov
js
jge
call
mov
call
imul
mov
inc
call
xor
fwait
jge
pop
mov
cmp
mov
sbb
inc
mov
movs
cmps
dec
and
push
xor
mov
inc
dec
or
inc
call
xchg
(bad)
les
rcl
or
in
loopne
mov
addr16
call
retf
push
popa
addr16
add
mov
or
push
dec
(bad)
xor
das
das
and
fwait
add
push
add
sub
enter
pop
xor
test
pop
int
dec
xor
in
sub
test
cmp
and
call
xchg
ins
ins
shl
imul
fwait
inc
call
dec
xor
lods
int
int
lods
js
pop
dec
ror
mov
xor
sbb
dec
lods
movs
sbb
dec
and
push
mov
inc
push
xor
cld
fdivrp
pop
jo
inc
sbb
push
push
add
loopne
fcomp
retf
push
mov
xor
popa
adc
not
mov
call
lock
push
pop
inc
cs
xchg
hlt
adc
out
mov
adc
sub
jge
or
addr16
call
push
inc
xchg
or
jmp
nop
iret
iret
cmp
in
dec
xor
shl
push
addr16
addr16
imul
imul
in
sub
sub
lock
inc
call
outs
pop
sub
hlt
push
xchg
data16
nop
add
xchg
cmps
enterw
ss
jb
adc
adc
or
cwde
pop
mov
ins
cs
inc
aaa
sub
iret
xor
fdiv
xor
bound
and
and
sbb
and
outs
xchg
cwde
out
xor
adc
imul
xor
adc
into
jno
add
add
adc
and
imul
ror
outs
pop
or
test
call
into
jmp
jno
and
inc
cwde
pushfw
pop
inc
call
jne
mov
adc
push
int3
lods
xchg
xor
addr16
out
bound
add
outs
or
addr16
imul
or
jns
push
imul
imul
imul
pop
add
imul
addr16
in
sar
push
or
add
jl
sbb
cmp
movs
sbb
imul
push
(bad)
jle
or
sub
movs
push
cmps
in
addr16
xor
add
jg
fmul
push
or
sbb
add
pop
pop
lahf
and
mov
push
cmp
sub
shl
in
push
pop
addr16
(bad)
xor
add
jo
je
dec
add
addr16
cmp
test
xor
xor
inc
ins
fwait
xor
add
test
data16
xor
xor
or
or
sbb
add
mov
test
add
xchg
sbb
inc
mov
out
aam
cmps
imul
data16
push
rcr
mov
xor
xor
xor
pop
adc
das
push
fcomp
inc
call
xchg
cmps
dec
aaa
aaa
dec
pop
ror
int
mov
xor
dec
dec
dec
cmp
lods
mov
inc
add
or
int3
addr16
int
in
out
in
addr16
(bad)
dec
sbb
jnp
out
and
rcl
dec
imul
ret
fwait
mov
iret
int
ror
xchg
mov
int
inc
sbb
(bad)
xchg
dec
ror
in
push
xor
push
retf
(bad)
mov
sbb
adc
pushf
int3
xchg
dec
and
push
es
or
int
into
xchg
adc
inc
rol
add
or
xchg
mov
mov
sbb
aam
shl
in
xor
xor
lock
test
mov
sbb
add
addr16
call
sbb
test
or
int
fwait
test
retf
retf
nop
ficomp
jmp
inc
xor
fwait
inc
inc
pop
and
popf
and
sub
push
inc
int
int
mov
gs
sbb
test
addr16
lahf
xor
jo
data16
loop
mov
inc
call
inc
call
popa
mov
mul
mov
lock
loopne
adc
fisttp
aam
call
cmp
push
push
add
mov
pop
popa
adc
mov
call
mov
push
mov
addr16
cmps
(bad)
or
call
fild
xor
lock
call
movs
imul
adc
test
int
out
pop
pop
sub
addr16
les
int
sbb
mov
int3
addr16
xor
dec
stos
nop
xchg
daa
ror
or
loopne
stos
das
xchg
add
enter
sub
imul
ins
loop
cld
pop
das
adc
pop
int
inc
push
jmp
mov
adc
pop
or
add
scas
and
push
xor
xor
jmp
and
pop
add
mov
mov
fwait
enter
ins
addr16
add
rcr
mov
mov
jl
pop
or
add
mov
and
int
mov
in
and
or
push
add
and
nop
add
(bad)
ltr
shr
push
mov
push
imul
pop
sub
cmp
js
push
inc
addr16
les
mov
cmp
in
mov
fbld
sub
xor
cmp
mov
(bad)
and
rol
pop
mov
push
push
xor
push
pop
or
jmp
push
inc
nop
add
(bad)
mov
and
mov
addr16
cmp
nop
dec
mov
ins
jo
nop
xchg
add
imul
push
nop
push
mov
nop
and
nop
retf
add
and
and
addr16
ror
xor
xor
dec
int3
xor
ret
xor
adc
xor
and
and
push
pop
ss
les
mul
shl
lods
or
vcvtsd2si
popa
sbb
imul
inc
push
push
add
push
pusha
xor
and
push
adc
adc
jmp
sbb
and
leave
inc
mov
inc
fsub
and
fadd
adc
jmp
repz
es
adc
addr16
fs
retf
inc
sbb
ins
dec
es
sbb
mov
call
sbb
push
es
sbb
jno
movs
addr16
pop
inc
fwait
add
in
scas
les
add
xchg
iret
jmp
ret
es
mov
xor
daa
dec
jae
mov
or
mov
or
add
push
sub
push
nop
data16
addr16
mov
sbb
xor
and
es
daa
fist
push
fdiv
addr16
add
sub
jae
xor
pop
adc
addr16
xor
dec
aad
push
push
ror
or
cmp
(bad)
fs
sub
xor
xlat
call
pop
xchg
add
sub
shl
fdivr
call
mov
inc
xor
(bad)
mov
sub
and
(bad)
cmp
add
sub
cmps
sbb
add
cmp
aam
mov
aas
fsub
sub
data16
pusha
addr16
fst
lock
movs
popa
inc
(bad)
fisub
sub
out
mov
xor
push
nop
fist
movs
sbb
das
in
call
mov
pop
loope
call
pop
lods
mov
loop
cmp
bound
sub
invd
sbb
push
jae
jecxz
sub
adc
pop
cmp
imul
pop
sbb
arpl
add
call
gs
xchg
sbb
inc
call
xchg
cmps
sbb
clc
and
inc
mov
call
xor
lahf
fdiv
xor
imul
xchg
int
dec
pusha
inc
inc
or
cmps
sbb
ins
jmp
sub
dec
outs
shl
mov
imul
(bad)
data16
cld
sub
movs
and
call
push
popa
sbb
call
fs
imul
ja
add
out
call
sub
fisttp
cmp
lock
enter
sub
imul
sbb
movs
addr16
push
or
repnz
cs
mov
out
aam
jg
and
or
fs
out
adc
addr16
push
cs
add
sbb
xor
fadd
test
cmps
xor
xor
test
jmp
xchg
ret
dec
xchg
add
idiv
das
das
xor
es
addr16
shl
inc
or
das
das
dec
xor
je
mov
or
xor
pushf
mov
or
mov
xor
rcl
add
push
mov
dec
sub
fimul
and
xchg
cld
cmp
and
cmp
xchg
std
nop
cmps
add
inc
mov
pusha
xchg
dec
les
inc
push
xor
add
or
addr16
dec
and
aam
lods
cdq
sub
or
xor
es
mov
fwait
add
imul
dec
dec
add
imul
shl
xor
rcr
addr16
add
bound
mov
add
xor
add
addr16
mov
leave
add
test
push
movs
push
jns
int
add
inc
xor
adc
fwait
add
xor
mov
sbb
sbb
into
or
lods
or
or
and
fsub
inc
addr16
and
lods
or
xor
sbb
mov
add
or
nop
data16
addr16
sbb
mov
movs
sbb
or
sub
addr16
inc
call
or
sub
addr16
sbb
jecxz
adc
xchg
add
sbb
ins
(bad)
xor
pushf
add
mov
xor
outs
lods
addr16
adc
call
popf
sbb
daa
sbb
leave
gs
rcl
popa
adc
addr16
inc
call
or
or
les
xor
in
sub
addr16
pop
mov
xor
mov
add
leave
sbb
in
xor
mov
pop
or
(bad)
ss
inc
sub
inc
addr16
push
fmul
push
push
xlat
add
sbb
mov
lahf
push
sbb
shr
add
nop
out
add
rcr
in
lock
sub
call
push
add
les
cmp
push
nop
data16
pop
push
pop
aaa
sbb
jno
pop
fstp
and
aaa
imul
shl
shl
add
in
mov
and
ins
loop
ss
aaa
xchg
xor
and
(bad)
cmp
mov
data16
pop
pop
sub
aam
adc
mov
xor
jb
shl
dec
(bad)
lock
or
xor
xor
sub
cmp
cmp
inc
js
xchg
sbb
inc
jp
nop
call
sub
enter
call
xchg
mov
xor
push
nop
xchg
sub
and
xor
xchg
cwde
push
nop
xchg
cmp
and
inc
mov
add
cmp
inc
xor
dec
iret
mov
popa
pop
jb
xor
xor
pop
movs
sbb
mov
fs
mov
xchg
sbb
nop
xor
inc
xchg
nop
or
cmp
imul
xor
nop
xchg
and
push
push
nop
cbw
cmp
outs
(bad)
xchg
addr16
aam
(bad)
jb
sbb
mov
add
cmp
and
into
cmp
cmp
mov
mov
mov
cmp
data16
xchg
aam
mov
adc
cmp
mov
inc
movs
aas
push
imul
imul
pop
add
sbb
test
inc
sahf
xlat
or
int
push
int
inc
shl
inc
pop
ror
movs
test
sbb
test
scas
inc
ror
cmps
int3
dec
inc
xchg
add
mov
or
adc
test
jbe
aam
mov
cwde
mov
adc
aas
aas
push
add
or
fsub
inc
mov
mov
pop
xor
mov
test
imul
mov
add
loopne
aaa
adc
addr16
mov
inc
inc
jg
dec
or
test
addr16
fwait
cmp
pop
push
or
dec
inc
push
dec
xchg
jg
addr16
sub
add
inc
inc
and
test
les
xchg
dec
and
inc
inc
and
ins
in
(bad)
dec
jmp
or
inc
inc
(bad)
or
push
or
enter
ss
or
inc
inc
out
addr16
test
retf
inc
popa
adc
cmps
sbb
int3
push
mov
call
jo
aaa
into
push
dec
rcr
mov
nop
ss
xor
shl
das
lods
jns
sbb
sbb
aaa
push
mov
rcl
jbe
inc
retf
inc
inc
jg
imul
mov
fst
(bad)
xor
inc
inc
xchg
adc
ins
lock
fucomi
in
mov
lahf
adc
loopne
push
add
inc
data16
add
shl
inc
mov
dec
xor
int3
addr16
or
xor
test
or
fsub
pop
dec
pop
push
inc
inc
test
call
mov
pop
inc
pop
fs
pop
inc
inc
movs
inc
inc
nop
addr16
shl
inc
mov
nop
data16
pop
addr16
pop
es
ins
push
mov
xor
call
int
mov
inc
dec
mov
fmul
lock
inc
out
stos
xchg
addr16
dec
popa
mov
mov
inc
clc
addr16
(bad)
inc
ja
push
out
iret
fsub
push
add
inc
add
inc
mov
es
xlat
push
cld
cmps
sbb
add
imul
push
addr16
gs
call
call
push
inc
retf
add
lahf
inc
mov
or
les
inc
inc
push
loopne
in
xchg
jmp
mov
add
pop
imul
sbb
imul
cmp
sub
add
sbb
inc
push
xor
xor
xor
pop
imul
add
test
inc
aam
push
jns
inc
or
or
dec
add
fimul
cmp
addr16
add
or
mov
push
ins
pusha
push
and
jo
xor
jmp
or
sub
push
add
mov
xor
or
add
push
stos
(bad)
push
ins
mov
jae
adc
push
int
mov
mov
les
pop
dec
xor
jne
pop
xchg
adc
add
jbe
or
dec
les
addr16
test
pop
mov
adc
jp
sub
bnd
sbb
outs
inc
push
sub
xor
add
fs
jo
or
dec
xor
adc
jne
xlat
adc
adc
sub
inc
pop
cmp
pusha
adc
xchg
ins
or
and
xchg
xor
je
pop
and
addr16
xor
pop
nop
addr16
cwde
pop
dec
jnp
pop
dec
xor
cwde
cmp
mov
and
add
push
or
xchg
xor
sbb
xchg
mov
test
add
mov
enter
xor
pop
lea
mov
movs
sbb
pop
inc
xchg
xchg
test
movs
sbb
lock
aam
call
pop
call
xchg
sbb
test
call
pop
(bad)
lock
rcr
addr16
lock
ror
and
mov
cmp
cmps
push
pop
adc
cwde
fimul
mov
pop
add
or
sbb
mov
and
mov
add
(bad)
rol
ror
sub
mov
and
hlt
clc
xor
and
add
or
cmp
nop
or
and
pop
pusha
inc
into
and
add
xchg
nop
xchg
add
or
dec
rcl
(bad)
enter
int
rcl
or
pop
aam
or
and
and
add
xchg
pusha
fs
or
push
and
xchg
cwde
jo
and
add
xchg
enter
or
js
cwde
or
and
and
add
or
mov
call
nop
out
int
rcr
or
cwde
jmp
int
shl
rcr
cmp
xor
and
add
lahf
push
xor
and
pushf
mov
add
mov
or
enter
mov
imul
cmp
xchg
and
stc
movs
nop
and
ins
jo
xor
enter
movs
mov
nop
call
xor
aam
lock
pop
dec
xor
dec
xor
add
addr16
test
sub
out
sub
test
imul
stos
movs
test
nop
xchg
adc
stos
fsub
and
sbb
add
mov
lods
pop
push
nop
data16
adc
nop
and
sub
scas
je
mov
xchg
xor
scas
ss
push
pop
scas
cmp
lods
movs
sbb
mov
mov
bound
int
mov
xor
inc
fs
mov
pop
dec
mov
aam
fwait
or
and
mov
test
shl
push
add
cdq
in
xchg
add
jbe
jp
arpl
pop
sub
pusha
push
call
(bad)
pop
mov
push
xor
adc
mov
cs
or
mov
push
js
ja
ins
pop
lahf
mov
add
adc
aas
mov
cmps
mov
popa
add
mov
pop
adc
call
cmp
push
bound
sub
xor
pop
jae
push
adc
ins
scas
daa
mov
push
mov
popa
add
mov
pop
or
mov
addr16
lods
sub
mov
inc
xlat
pushf
addr16
fld
movd
adc
pop
call
xor
or
fs
pushf
(bad)
das
mov
adc
rcr
test
mov
adc
test
addr16
shl
addr16
test
pop
xchg
addr16
rcr
les
call
mov
mov
test
addr16
or
(bad)
pop
test
jbe
fcomip
addr16
inc
pop
push
pop
mov
sub
addr16
enter
data16
push
inc
mov
xor
ror
pop
ins
jo
sub
mov
push
xor
retf
pop
shl
pop
cld
addr16
add
or
push
sub
fmul
xor
addr16
int
fadd
lods
push
test
arpl
data16
pop
xor
les
iret
push
add
or
pop
push
test
fsub
rcr
mov
mov
in
ror
rcr
mov
and
loopne
push
dec
imul
xor
pop
sbb
adc
das
mov
or
test
pop
inc
int
add
pop
adc
cld
addr16
(bad)
pop
push
jae
push
daa
adc
jmp
sub
and
xchg
je
in
(bad)
mov
xchg
pop
pop
xchg
push
push
pop
ror
or
push
test
push
or
repnz
xchg
push
enter
push
adc
fcomp
mov
fdiv
cli
fnstsw
jo
inc
pop
lahf
sbb
adc
ficomp
xchg
data16
ror
lods
xchg
pop
pop
push
dec
add
lock
mov
aad
sysenter
jns
push
test
addr16
loope
sub
pushf
ins
xchg
or
push
loop
inc
scas
sub
dec
(bad)
pop
push
test
addr16
sbb
or
mov
push
dec
sbb
outs
in
dec
lods
rcr
(bad)
or
sti
push
xor
addr16
mov
pop
cmp
cmp
ror
inc
and
lods
pop
dec
and
test
call
imul
sub
dec
and
or
addr16
jmp
sbb
mov
addr16
pop
fdivr
lock
push
call
pop
xor
mov
xor
in
pop
mov
mov
aam
ins
js
aaa
out
pop
jae
xor
dec
mov
jl
adc
dec
into
lock
imul
add
icebp
fisttp
and
addr16
dec
call
daa
mov
jno
fdiv
add
int
adc
dec
ror
jl
push
nop
out
xor
mov
push
mov
lods
lods
add
test
test
loop
xchg
fs
add
add
or
or
dec
jno
fdivr
add
int
or
stc
dec
ror
add
test
cli
in
nop
xor
mov
sub
int
sti
call
dec
leave
leave
or
movs
add
xchg
cld
mov
les
dec
jno
fdivr
add
rol
iret
test
int
test
xor
inc
pop
inc
push
pop
daa
imul
add
lea
pop
movs
sbb
lds
push
addr16
fadd
dec
add
xor
lds
daa
xor
jae
add
daa
push
add
xor
jbe
(bad)
int3
add
xor
jbe
fbld
push
ror
add
daa
xlat
add
addr16
or
push
add
push
data16
adc
or
daa
xchg
data16
in
add
outs
daa
es
sbb
add
sub
les
sub
jb
ror
or
add
test
push
daa
imul
xchg
addr16
jo
mov
xchg
pusha
push
hlt
iret
retf
sbb
add
pop
push
iret
int3
push
push
and
add
jae
push
loopne
addr16
lar
mov
pop
scas
adc
xchg
rcl
add
adc
daa
pushf
test
pushf
pusha
rcl
add
or
mov
(bad)
adc
adc
pop
or
addr16
adc
xor
enter
push
ror
sub
adc
test
daa
iret
add
data16
mov
xchg
imul
fs
add
add
jno
dec
addr16
lds
cmp
mov
movs
sbb
loop
add
loop
daa
addr16
shr
std
data16
nop
loop
daa
inc
movs
mov
neg
imul
js
ins
int
rol
dec
sbb
mov
xchg
inc
xchg
and
addr16
inc
inc
cdq
add
push
pop
add
daa
and
addr16
pop
pop
mov
add
popa
mov
addr16
and
mov
shl
lods
movs
mov
pop
and
mov
add
imul
out
hlt
add
xor
and
in
jbe
add
imul
or
xchg
or
and
mov
pop
sbb
add
sbb
movs
test
xor
nop
sub
lds
ret
push
cmp
and
cs
add
dec
jae
addr16
es
xchg
jbe
daa
lahf
add
ins
fsub
sub
shl
nop
nop
sbb
sub
daa
inc
jmp
jno
cmp
and
daa
or
pushf
sbb
addr16
jno
fsubr
push
imul
daa
dec
jae
(bad)
ja
lods
mov
cmp
add
jmp
cmps
add
sub
jg
and
pop
xor
add
add
sbb
iret
inc
cmovnp
push
imul
es
addr16
xor
pop
push
rol
dec
mov
pop
fadd
rol
fsub
adc
jo
and
add
jb
pop
pop
add
sbb
push
or
push
jb
add
aaa
jmp
loopne
jbe
xor
outs
in
loopne
ss
addr16
xor
outs
and
ret
es
addr16
xor
ss
es
cld
addr16
xor
outs
daa
loopne
outs
add
addr16
rol
add
rol
addr16
add
ins
xchg
div
add
addr16
fwait
or
or
cmp
outs
mov
or
sub
std
cmp
fmul
sub
(bad)
cmp
or
cmp
add
shr
add
ret
push
cmps
jg
add
test
add
je
add
add
add
pusha
and
mov
xchg
xchg
and
inc
and
mov
addr16
or
int
inc
addr16
or
mov
push
and
addr16
inc
call
dec
dec
ficom
fbstp
cmps
cmps
add
fsub
inc
addr16
das
adc
xor
call
data16
pop
pushf
sbb
ss
out
mov
sbb
xchg
ss
or
push
int3
addr16
cmps
addr16
in
addr16
pop
or
adc
fisub
and
dec
in
movs
sbb
out
hlt
addr16
dec
xor
dec
in
lock
or
js
nop
stos
and
dec
mov
fisttp
addr16
dec
mov
ret
pop
call
mov
mov
or
mov
dec
lods
adc
and
adc
ror
mov
and
inc
addr16
push
add
mov
sub
pusha
xor
or
mov
popa
das
aad
push
push
xchg
sub
or
data16
movs
mov
addr16
and
mov
addr16
push
add
jnp
stos
adc
outs
enter
pop
dec
jae
push
mov
daa
adc
cmp
mov
add
pop
push
push
addr16
xchg
mov
fisttp
aas
pop
add
sub
fbstp
mov
push
rcr
addr16
pop
fwait
test
lods
mov
je
push
inc
fmul
pop
add
data16
addr16
push
mov
outs
daa
inc
xchg
xor
addr16
pop
add
sub
fbld
movs
addr16
pop
enter
xor
test
cmp
mov
inc
pop
mov
int3
or
int
pusha
mov
ins
and
das
fsub
mov
pop
dec
popa
mov
jbe
add
ins
mov
mov
bound
out
mov
arpl
mov
mov
fwait
popa
add
or
and
mov
addr16
gs
and
cmp
pop
inc
ror
push
call
test
adc
or
push
mov
push
test
pop
imul
sub
mov
imul
xchg
data16
mov
gs
fadd
mov
xor
test
mov
mov
popa
pop
dec
imul
sub
mov
mov
or
ins
call
mov
xor
das
dec
mov
jae
jno
dec
mov
mov
push
xchg
addr16
adc
data16
add
es
sar
jge
sub
mov
push
test
addr16
add
sbb
je
addr16
push
jo
mov
xor
jns
fist
sub
fsubr
shl
inc
push
mov
data16
pusha
test
lods
movs
sbb
mul
push
fs
push
nop
out
jp
jl
mov
movs
in
in
mov
cmp
add
add
mov
dec
call
test
adc
and
mov
or
push
pop
mov
mov
pop
adc
dec
test
data16
mov
sub
popa
and
xor
jo
pop
dec
xor
mov
adc
or
test
in
xchg
add
inc
mov
ja
fcomp
push
ror
cwde
add
or
mov
add
fmul
call
and
addr16
test
xor
ja
xor
add
addr16
xchg
add
test
sub
push
or
inc
mov
mov
addr16
movs
sbb
loopne
lods
movs
sbb
mov
in
sub
mov
call
iret
test
mov
or
stos
into
mov
and
mov
ror
popa
mov
pop
dec
xor
scas
mov
push
mov
mov
shl
ret
mov
mov
fwait
sub
test
ror
sbb
mov
adc
push
addr16
call
xchg
inc
mov
test
xchg
addr16
sub
out
jb
or
mov
xchg
clc
in
rcl
addr16
out
or
ret
xchg
mov
bound
or
int
xchg
mov
popa
pop
rcr
inc
and
ss
cwde
mov
inc
add
pop
mov
adc
cdq
ror
or
adc
call
xchg
(bad)
addr16
push
sub
mov
mov
addr16
pushf
or
outs
inc
jae
bound
xlat
popf
call
sub
sahf
mov
ror
sbb
push
rcr
sbb
test
mov
mov
pushf
test
mov
mov
movs
test
mov
mov
or
addr16
or
jmp
xor
sbb
or
pop
sbb
jmp
ja
addr16
movs
mov
outs
das
scas
pop
and
addr16
cmps
das
repnz
adc
push
dec
mov
repz
mov
in
or
frstor
test
adc
test
fisttp
int
inc
scas
cmp
imul
pop
push
mov
push
or
mov
addr16
stos
mov
or
push
adc
aad
shr
xor
lock
lods
inc
mov
adc
in
cmp
addr16
mov
or
addr16
mov
scas
mov
xor
jl
jo
mov
not
xor
push
adc
cmp
adc
push
mov
fadd
mov
push
lods
sub
sbb
addr16
mov
bound
sub
inc
push
mov
push
cmp
addr16
inc
mov
ins
mov
push
aaa
mov
popa
sbb
adc
ret
push
cmp
jbe
add
push
adc
(bad)
inc
fmul
nop
addr16
push
fist
pushf
addr16
inc
shl
test
mov
fild
sbb
mov
sub
(bad)
or
cwde
lahf
fsub
mov
(bad)
or
mov
push
jl
xor
shl
add
out
mov
inc
push
scas
js
test
inc
push
xor
mov
test
xor
add
cmp
shl
das
scas
loope
shr
out
dec
sub
lds
xchg
rcr
out
(bad)
or
addr16
and
or
rcl
xchg
cs
pop
mov
bswap
mov
push
lahf
and
ret
fcomp
add
push
adc
addr16
les
fadd
adc
test
data16
lds
int
rol
repz
fcomp
or
(bad)
xchg
rcr
push
xor
addr16
(bad)
bndstx
adc
int3
enter
cs
xchg
and
outs
pop
add
sub
addr16
sbb
ins
mov
retf
cmps
ins
mov
sbb
xor
mov
pop
and
cmpxchg
outs
mov
add
and
xor
into
or
xchg
push
cmps
xor
out
nop
addr16
shl
inc
call
ffree
cmps
xchg
outs
mov
addr16
cmps
sbb
pusha
sub
sbb
add
test
ret
push
shl
add
push
cdq
loop
sub
out
cmps
cmp
pop
in
xor
dec
push
sub
and
add
mov
dec
pop
aam
aam
jno
fwait
xchg
out
and
add
inc
mov
pop
outs
call
call
jb
psllw
fld
mov
push
cmps
ja
test
in
clc
repnz
add
jnp
movs
ja
repz
sub
fild
pop
aas
or
sbb
add
push
and
pop
addr16
test
ret
addr16
fld
pop
or
cwde
xchg
pop
int3
xor
adc
fiadd
pop
fcmovu
push
add
add
addr16
add
mov
pop
xlat
or
or
add
and
pop
out
pushf
shl
push
pop
popa
add
push
daa
call
fwait
cmp
add
fild
addr16
pushf
xchg
push
adc
xor
lods
cmc
test
mov
or
(bad)
or
push
and
dec
cmp
add
rol
inc
cmp
inc
pop
push
mov
inc
outs
in
mov
outs
and
fs
out
add
dec
in
es
mov
sahf
inc
push
jp
mov
add
mov
cmps
cmps
xor
outs
stos
xor
int3
adc
ja
addr16
xchg
mov
and
out
in
ror
dec
mov
in
addr16
xchg
jae
adc
out
push
add
in
xchg
pop
add
pop
addr16
in
dec
enter
add
pusha
add
add
xchg
popa
add
push
das
movs
addr16
pop
call
or
mov
lock
sbb
lods
(bad)
mov
add
js
and
mov
repz
add
push
pop
out
pop
mov
or
sbb
out
ret
push
bound
xchg
and
fimul
cmp
add
ins
mov
dec
addr16
mov
out
inc
or
test
mov
xchg
data16
mov
sbb
or
clc
out
xor
aas
addr16
test
stc
out
int
pop
dec
das
xor
xlat
aaa
cli
popa
pop
cs
out
data16
xchg
(bad)
iret
cmp
(bad)
lds
int
pop
push
or
sar
xor
mov
xor
je
loop
xor
std
out
call
(bad)
in
ret
test
(bad)
out
addr16
inc
popa
(bad)
bound
jmp
enter
(bad)
shr
mov
xchg
add
out
or
mov
pop
iret
int3
pop
inc
pop
cwde
out
xchg
popa
add
fwait
popa
adc
dec
fsub
add
or
mov
out
out
mov
sbb
add
sbb
movs
out
sub
fiadd
movs
mov
mov
ss
addr16
add
movs
mov
adc
mov
fiadd
add
sbb
movs
push
lods
addr16
or
dec
imul
addr16
sub
fild
imul
packuswb
add
cs
jbe
add
push
add
iret
mov
dec
xchg
loop
ss
outs
ss
add
adc
or
xchg
dec
pop
pop
fimul
mov
push
push
add
inc
mov
enter
dec
fwait
push
lsl
xchg
inc
xor
sub
xchg
add
jae
lods
cmps
inc
addr16
adc
int
sub
outs
shl
adc
movs
int
sbb
add
shl
in
push
(bad)
shl
adc
dec
fimul
cmp
in
addr16
adc
mov
pop
dec
ja
ins
xchg
add
and
inc
dec
mul
outs
addr16
push
add
cmps
movs
addr16
movs
or
xchg
ins
outs
pop
dec
pop
cmp
sbb
xor
lahf
pop
fwait
xchg
xor
aam
add
aas
in
lds
xchg
sbb
outs
sbb
clc
fiadd
add
int
inc
pop
nop
adc
fcomp
rol
mov
data16
fsub
push
pop
(bad)
data16
add
push
sbb
dec
pop
ficomp
add
je
popa
pop
sbb
xor
test
adc
or
sbb
lds
add
mov
sub
bound
(bad)
and
dec
ins
xchg
mov
add
inc
sub
aaa
imul
mov
bound
addr16
int
jecxz
in
mov
xchg
sbb
push
sub
add
int
es
xor
pop
aad
dec
pop
addr16
daa
or
xor
xor
sub
xor
or
call
or
movs
sbb
push
mov
inc
xchg
das
bound
mov
add
lods
cmp
pop
pop
xchg
pop
lods
ror
and
fwait
sub
and
popf
cs
add
mov
mov
ror
hlt
mov
int
push
lea
ins
dec
mov
cmp
and
cmp
movs
add
add
add
daa
lods
addr16
add
dec
and
pusha
fcom
div
add
test
and
pop
fimul
xor
dec
out
xor
cmps
or
stos
xor
shl
and
addr16
xor
adc
mov
xchg
pop
mov
push
dec
pop
lock
mov
mov
adc
addr16
sbb
sub
dec
fcmovnb
aaa
sbb
xchg
add
idiv
inc
inc
ins
xchg
cmp
xchg
ret
push
dec
and
cmp
scas
mov
and
cmp
xchg
int
jae
cmps
sub
cmp
mov
xchg
mov
in
rcl
add
push
movs
or
inc
ins
outs
addr16
add
iret
or
addr16
inc
inc
ins
add
iret
addr16
mov
xchg
pop
xchg
ss
push
jo
mov
nop
and
add
ins
les
inc
add
scas
iret
scas
and
push
adc
imul
lahf
and
lea
sbb
add
(bad)
pop
pusha
add
in
push
addr16
imul
int
imul
inc
addr16
pop
pop
pop
ret
xchg
xor
xchg
ins
xchg
lahf
mov
adc
inc
sub
aas
mov
sbb
mov
dec
sbb
adc
mov
or
dec
add
xor
rol
or
ror
dec
lahf
xchg
ss
mov
xchg
dec
add
mov
and
add
adc
add
xor
addr16
dec
add
add
add
push
xchg
addr16
push
dec
add
iret
lock
or
xchg
data16
dec
(bad)
cld
addr16
cmps
push
add
push
add
pop
pusha
and
sub
inc
xchg
addr16
and
sub
add
inc
cwde
adc
mov
dec
xor
lods
(bad)
fsub
mov
add
lahf
inc
es
push
add
push
add
pop
add
ins
mov
xchg
and
mov
jbe
jbe
movs
or
xchg
int
inc
and
pop
sub
xor
jo
xor
or
xor
xor
add
aaa
js
xor
adc
xchg
aaa
inc
ins
xchg
add
data16
dec
aam
and
ret
addr16
pop
add
pop
adc
addr16
nop
and
ss
add
outs
and
pusha
add
mov
xchg
add
and
mov
ret
addr16
bound
xchg
mov
adc
arpl
xchg
xor
outs
mov
adc
add
add
das
sbb
cmp
bound
sub
xchg
aas
cs
cmp
inc
lods
xchg
lahf
sbb
dec
push
addr16
lods
adc
mov
ja
sbb
test
iret
push
push
pop
ja
dec
call
or
sbb
mov
add
outs
or
shl
imul
and
ja
call
int
ins
add
fadd
(bad)
(bad)
cld
fst
sbb
ins
add
int
and
add
lods
adc
ja
mov
data16
outs
inc
add
ja
adc
fsub
fucomip
push
sbb
or
mov
sbb
mov
ja
push
mov
fdiv
add
test
xchg
popa
iret
out
xchg
addr16
movs
mov
jb
ja
fild
aaa
sub
push
sub
ja
sbb
push
xchg
mov
aaa
je
lds
push
ja
data16
les
jne
and
pop
pop
aam
mov
xor
sub
push
mov
xor
dec
sub
addr16
mov
js
ja
ret
push
push
xchg
and
jge
push
or
push
sbb
xchg
sub
add
pop
pop
adc
fcom
(bad)
bound
pop
das
mov
(bad)
out
jp
ja
add
sub
fwait
xchg
jnp
ja
ss
inc
xchg
addr16
push
mov
add
or
or
int3
movs
jge
or
xor
mov
pop
lock
jle
add
xor
jg
inc
movs
mov
sbb
data16
mov
inc
mov
xor
les
movs
adc
mov
sbb
mov
ja
or
addr16
dec
call
ja
mov
inc
xlat
xor
add
popa
pop
push
scas
lods
xor
sub
ja
int
adc
sbb
stos
lahf
ja
ss
fwait
and
xchg
or
and
lods
movs
mov
ror
ja
add
mov
imul
push
(bad)
push
movs
dec
in
loop
call
fcomp
in
add
adc
or
pop
xor
mov
les
mov
data16
addr16
push
ja
mov
data16
addr16
mov
adc
nop
add
push
sbb
das
sub
xor
xchg
add
push
scas
adc
push
and
xchg
add
popa
add
xchg
nop
cmps
sbb
(bad)
les
data16
sub
add
mov
ja
sbb
out
pushf
aaa
addr16
add
(bad)
mov
inc
ins
xchg
xchg
add
inc
inc
movs
shl
sbb
or
ja
ins
xchg
aas
jl
cmp
les
push
rcr
jns
add
mov
cld
xor
cdq
ja
in
les
aam
xor
mov
call
addr16
push
sbb
ja
mov
aaa
pop
xor
iret
add
scas
ror
nop
mov
add
and
xchg
addr16
and
mov
xchg
xor
es
lahf
arpl
mov
inc
ins
outs
daa
add
addr16
and
sbb
data16
add
add
daa
mov
cmp
or
mov
les
mov
inc
imul
adc
xchg
out
movs
mov
ja
or
retf
fist
movs
or
rol
dec
xor
cmps
outs
pop
in
ja
add
adc
sub
ja
call
test
mov
les
xor
shl
outs
test
and
mov
popf
sub
cmp
sbb
lds
push
ja
or
mov
stos
mov
and
movs
mov
inc
addr16
lods
pop
mov
ja
int
mov
mov
shl
mov
mov
dec
scas
add
jb
addr16
movs
mov
scas
add
ret
push
push
jno
addr16
mov
or
xor
lods
ret
ja
inc
dec
sub
mov
mov
xor
es
hlt
addr16
mov
xor
lds
mov
movs
sbb
pop
inc
bound
fwait
inc
push
mov
ja
adc
sub
fwait
push
mov
ja
fdivr
movs
inc
adc
mov
ja
data16
iret
std
mov
aaa
addr16
ja
xchg
mov
dec
inc
cld
mov
adc
or
dec
aaa
adc
mov
adc
lds
push
imul
mov
call
mov
mov
inc
or
adc
cs
out
lock
ss
sbb
addr16
mov
xchg
fild
xchg
data16
cwde
call
or
mov
xor
movs
dec
pop
movs
mov
rol
ins
outs
pop
inc
out
mov
popa
rol
movs
mov
(bad)
and
ret
push
pushf
addr16
add
push
les
add
cwde
push
jno
mov
aas
mov
ja
bound
cmp
mov
pop
or
outs
mov
dec
lds
xor
ja
cmp
and
mov
or
add
add
and
xchg
ss
push
nop
movs
movs
jl
sub
adc
xor
mov
push
or
sbb
leave
add
xchg
adc
mov
xlat
push
mov
jbe
addr16
add
xchg
xchg
and
sbb
xchg
xor
push
addr16
int3
mov
popa
xor
nop
addr16
mov
pop
int
ja
test
ja
push
arpl
les
sbb
ret
shl
iret
or
iret
add
add
add
nop
pop
pop
xor
adc
(bad)
mov
cmp
rol
ja
ret
push
inc
dec
enter
add
bound
ins
and
lock
rol
xor
inc
or
inc
cmp
aaa
test
movs
mov
pop
dec
sbb
addr16
into
aad
xor
xor
bound
fwait
popa
iret
stos
(bad)
add
xor
addr16
xor
sbb
and
popa
adc
xor
or
loopne
xchg
xor
mov
add
xor
inc
ja
pop
pop
addr16
or
jae
fiadd
ja
push
push
and
xor
ja
fadd
pop
les
movs
imul
fist
mov
(bad)
or
inc
mov
sbb
fs
mov
push
fiadd
ja
or
dec
sub
sbb
fild
ja
jae
and
add
inc
or
pop
add
loope
fs
call
add
jae
add
jecxz
sbb
ja
and
push
les
ss
ja
or
mul
ins
in
ja
sbb
bound
xchg
and
mov
add
or
cwde
inc
or
ja
inc
ins
xchg
add
addr16
or
popa
(bad)
cmps
add
push
add
aaa
call
xor
mov
fwait
xchg
int
(bad)
sub
dec
jmp
int
pop
inc
iret
aam
pop
or
and
ja
fadd
ja
iret
push
cmp
mov
les
ja
outs
pop
add
inc
call
call
add
xor
adc
and
mov
xor
push
lock
iret
and
aam
data16
mov
ja
xor
xor
bnd
daa
pushaw
outs
mov
jno
imul
sub
push
sub
adc
ja
jae
push
cmps
pop
push
xor
ret
push
sub
or
iret
popa
sub
adc
mov
imul
test
adc
mov
les
movs
or
iret
sub
adc
sbb
push
lahf
lods
addr16
add
outs
daa
or
aam
addr16
cmp
adc
ja
add
imul
test
ja
popa
fadd
sbb
xor
and
add
dec
jae
push
sub
sti
mov
ja
mov
jb
lods
ins
cmps
xor
xchg
mov
jo
inc
rcr
pop
or
mov
mov
push
sbb
jno
imul
or
ja
xor
iret
cmp
shl
mov
fisttp
in
jb
mov
inc
scas
or
adc
jbe
and
xor
mov
daa
push
mov
ja
add
mov
mov
mov
dec
add
add
push
les
ja
mov
mov
add
dec
adc
sub
add
mov
les
xor
jl
push
add
xor
inc
or
ja
ins
outs
cmp
jns
dec
add
mov
inc
mov
ret
addr16
into
push
add
fadd
movs
out
mov
les
pop
add
xor
xchg
inc
pop
or
mov
popa
push
add
fadd
movs
not
xor
enter
or
bound
enter
or
and
ja
xor
cmp
je
adc
xor
mov
or
add
or
sub
adc
imul
bound
sub
adc
test
mov
and
frstor
(bad)
rcl
cwde
nop
and
ja
sbb
sbb
addr16
adc
sbb
ja
xor
pop
adc
sbb
lods
adc
int3
les
ss
push
adc
or
lock
xchg
mov
add
in
ror
or
addr16
mov
and
fadd
test
mov
les
add
ins
xchg
mov
mov
xchg
data16
lahf
hlt
sbb
mov
xor
push
sbb
cmp
addr16
or
jae
sbb
ret
push
bound
fild
mov
sbb
sub
sbb
xor
int
mov
sbb
aaa
sbb
add
pop
xor
and
mov
xor
movs
mov
pop
add
data16
dec
imul
cmp
imul
mov
xchg
xor
and
addr16
mov
les
and
shl
pop
inc
lahf
dec
sub
sub
add
dec
xor
loopne
push
sub
enter
mov
dec
xor
in
lock
or
jle
pusha
inc
dec
adc
ins
xchg
inc
daa
add
movs
mov
pop
push
mov
jbe
addr16
sub
or
addr16
ror
sub
mov
mov
sub
xor
adc
rol
and
pusha
pusha
daa
sub
ja
loopne
push
jg
jg
mov
(bad)
out
sub
loopne
(bad)
and
das
dec
adc
ja
xchg
jb
add
movs
mov
iret
and
ret
push
mov
enter
ja
in
or
xor
xor
jae
xor
xchg
or
les
inc
or
xor
and
mov
scas
and
cmp
or
enter
and
mov
addr16
xor
ins
jno
fdivr
inc
mov
xor
sub
xor
or
and
add
inc
pop
lods
test
ss
addr16
aaa
add
adc
scas
mov
and
popa
cmp
enter
fmul
inc
daa
and
cmp
cld
inc
nop
data16
addr16
add
nop
inc
cmp
popa
adc
addr16
dec
mov
inc
cmp
cs
pop
aaa
push
and
or
or
mov
out
xchg
xlat
ss
add
in
jns
jo
dec
out
mov
jbe
jg
ret
add
pop
lods
adc
dec
or
add
aam
add
nop
popaw
nop
mov
dec
cmp
add
sahf
lods
adc
mov
retf
shl
push
inc
mov
es
inc
out
stos
xchg
cli
or
add
cmp
xor
pusha
xor
fmul
push
scas
das
dec
ins
xchg
add
inc
sub
jmp
addr16
add
ins
pusha
add
dec
imul
inc
add
sbb
xor
clc
or
mov
add
pop
imul
pop
inc
add
xchg
lahf
push
dec
and
imul
inc
add
add
(bad)
aam
call
test
and
inc
scas
fadd
dec
pusha
addr16
addr16
xchg
aam
pop
inc
add
(bad)
add
(bad)
fadd
call
test
cld
xchg
dec
(bad)
dec
push
scas
shld
pop
dec
xchg
dec
add
rcl
push
xchg
aam
scas
dec
add
xor
cmps
mov
dec
push
add
push
fild
lods
dec
add
inc
dec
push
scas
ja
mov
ss
push
dec
add
add
test
xchg
push
push
fwait
popa
addr16
dec
add
pushf
ins
xchg
addr16
or
ficom
lahf
sbb
addr16
add
nop
mov
dec
lea
mov
sub
xor
lahf
add
sbb
je
ja
sub
jno
movsx
add
fnstenv
pusha
xor
mov
ficom
scas
imul
(bad)
sahf
xchg
mov
imul
xor
cmp
xor
pop
paddsb
xor
call
addr16
mov
dec
xchg
(bad)
xchg
rol
aaa
jb
or
xlat
lock
cmp
adc
inc
pop
add
dec
xor
mov
push
xchg
mov
jns
cwde
inc
pop
add
outs
pop
fcom
iret
push
rcr
pop
xchg
jo
ss
pusha
sahf
push
dec
xor
cmp
xor
test
push
enter
add
mov
xchg
mov
iret
dec
pop
mov
pop
scas
mov
or
jae
ds
lahf
or
or
pop
loop
dec
push
jg
cmps
in
fnsave
shr
pop
inc
ins
mov
xchg
pop
cmp
inc
fidivr
mov
add
pop
ror
xchg
add
inc
not
xchg
xchg
retf
xchg
test
push
push
sub
call
mov
mov
cmps
imul
dec
shl
sub
pop
shl
test
dec
shl
hlt
add
cmps
imul
cmps
imul
imul
xor
add
sbb
xor
pusha
xor
shl
jl
cwde
test
xor
rol
rcr
in
cld
call
hlt
or
call
js
imul
imul
dec
shl
inc
pop
int3
mov
imul
push
sub
cmps
imul
cmps
imul
mov
xor
imul
sub
cmps
fsubr
push
mov
xor
mov
add
or
sub
inc
imul
imul
neg
pop
sbb
cmps
imul
xor
or
adc
sub
inc
ss
shl
outs
(bad)
aam
ret
imul
sub
imul
imul
dec
shr
and
inc
push
shl
mov
mov
shl
xor
add
mov
sbb
dec
shl
mov
xor
in
lds
push
dec
shl
pop
ins
xor
shl
test
sar
imul
cmps
imul
cmps
imul
hlt
cld
(bad)
mov
push
xor
xor
shr
xchg
sar
cmps
imul
cmps
imul
cmps
imul
mov
sub
push
pusha
dec
shl
mov
ss
shl
in
clc
or
imul
imul
imul
dec
shl
push
jo
mov
shr
inc
cmps
imul
sub
call
and
xor
shl
sbb
rcr
in
rcr
cmps
imul
imul
dec
shl
xor
pop
imul
cmps
imul
imul
cmps
imul
aam
cmps
imul
int
imul
imul
cmps
imul
imul
cmps
imul
xlat
call
cmp
imul
ins
call
and
pushw
push
xor
shr
cmps
imul
imul
cmps
imul
hlt
add
sbb
dec
shl
jl
xor
shl
lods
mov
dec
shr
cld
adc
and
cmps
imul
imul
cmps
imul
adc
xor
shl
inc
dec
pop
dec
shl
nop
mov
mov
enter
call
pop
je
imul
imul
cmps
imul
imul
cmps
imul
shl
sbb
xor
shl
ins
jl
dec
shl
xchg
pushf
lods
mov
xor
rol
int3
fsub
hlt
xor
repz
cld
cmps
loope
adc
xor
ss
ror
jb
loop
cmps
imul
imul
cmps
imul
call
push
push
pusha
ins
mov
imul
mov
sbb
mov
dec
shl
call
shl
xor
xor
shl
fs
nop
shl
int3
fdiv
mov
push
sub
xor
ror
mov
rcl
lock
adc
xor
imul
imul
ins
call
and
dec
shl
inc
push
pop
ins
shl
mov
dec
mov
clc
shl
sbb
xor
dec
shl
mov
mov
call
xor
cmps
imul
imul
mov
clc
or
sbb
cmp
xor
ror
jl
dec
shl
fsub
call
adc
xor
call
je
sub
cmps
sbb
imul
cmps
imul
imul
cmps
imul
mov
hlt
jl
xchg
imul
sub
cmps
in
or
sbb
dec
shl
jo
xor
shl
pushf
test
enter
rcr
call
cmps
imul
imul
imul
cmps
imul
dec
shr
xor
push
shl
pushf
movs
dec
shl
in
cld
call
sub
dec
imul
imul
sub
hlt
add
sbb
cmp
xor
shl
jo
mov
test
int3
pop
fsub
xor
ins
call
cwde
shl
aam
cmps
imul
cmps
imul
cmps
imul
add
adc
sub
shl
js
xor
shl
test
enter
dec
shr
cld
or
sbb
cmps
imul
imul
cmps
imul
sbb
xor
shr
xor
pop
dec
shl
nop
mov
test
rcl
ficom
shr
clc
or
cmps
imul
cmps
imul
imul
shl
je
xor
shl
mov
ss
rcr
call
cmps
imul
imul
cmps
imul
add
sbb
cmp
xor
dec
push
fs
pushf
shr
test
dec
add
push
push
shl
enter
fnstenv
adc
call
nop
cmps
imul
cmp
cld
mov
xor
sar
pop
fs
shl
loopne
call
sub
imul
sub
cmps
fsub
add
sbb
dec
shl
or
lods
retf
imul
imul
cmps
fst
mov
ins
cmps
imul
ins
call
xor
push
pusha
ins
shl
test
fnstenvw
or
call
pop
fs
call
enter
cmps
in
or
xor
sub
push
ins
js
mov
shl
mov
or
or
and
dec
shl
cmp
push
pusha
shl
nop
pushf
dec
shl
fsub
call
unpcklps
imul
imul
imul
cmps
imul
sbb
xor
shr
xor
dec
pop
dec
shl
movs
mov
call
repnz
dec
pop
fs
xor
mov
clc
or
and
pop
ss
rol
fcom
call
hlt
add
pusha
jo
shl
mov
xor
mov
mov
cmps
imul
and
xor
shl
push
jl
dec
shl
enter
shl
lock
adc
xor
ror
sub
dec
push
pusha
dec
shl
shr
or
pop
loopne
hlt
sbb
xor
sbb
cmp
dec
shl
xchg
movs
xor
shl
(bad)
shl
call
clc
sbb
sbb
sbb
cmps
imul
imul
mov
in
sbb
and
xor
rol
fs
dec
shl
aam
call
and
imul
imul
xor
adc
push
je
mov
ror
fsub
add
sbb
xor
jo
cmps
imul
cmps
imul
sub
xor
sar
inc
bound
dec
test
rcl
pop
call
ror
xor
mov
in
and
cmp
shl
xchg
movs
int3
cmps
xor
push
hlt
adc
shl
jl
cwde
shl
adc
call
pusha
jo
imul
xor
mov
and
sbb
inc
ins
shl
push
and
rol
movs
mov
fimul
fidiv
xor
fs
xor
rol
fnstenvw
daa
inc
xor
rcr
jl
pushf
cmps
cdq
dec
shr
mov
shl
hlt
sbb
sub
xor
shl
push
pop
jp
pop
ss
rcl
in
or
sbb
imul
imul
cmps
imul
push
sbb
cmps
imul
cmps
imul
push
fs
xchg
dec
shl
fsubr
shl
ss
sub
sub
shl
mov
movs
dec
mov
cs
dec
dec
shl
mov
(bad)
fsub
add
imul
sub
cmps
lock
or
sbb
dec
shl
mov
mov
dec
ror
xor
push
and
cmp
dec
shl
push
pusha
ins
js
xor
rol
shl
lock
call
and
sub
mov
ret
mov
sbb
inc
imul
dec
shl
cmps
push
ss
push
dec
xchg
and
xor
int
imul
dec
shl
jo
mov
lods
mov
imul
imul
dec
shr
sub
inc
(bad)
nop
pushf
test
shl
cmp
xchg
mov
lods
mov
cmp
dec
shr
cwde
movs
ret
imul
imul
shl
xchg
dec
call
ins
mov
int3
loopne
clc
add
shl
js
fnstenvw
inc
sbb
cmps
imul
lods
imul
call
jl
cmps
cmps
imul
shl
je
mov
movs
ret
inc
inc
inc
dec
mov
call
fmul
shl
lock
dec
sbb
xor
shl
dec
pop
fs
dec
rol
rcr
call
call
cwde
movs
imul
dec
push
(bad)
rep
call
(bad)
cmp
dec
shl
pusha
ins
js
mov
or
sbb
dec
xor
push
cmps
hlt
stc
ss
sbb
pop
ss
rcr
call
cmps
imul
xor
dec
push
pop
jo
cwde
movs
xchg
dec
shl
mov
imul
imul
sub
hlt
add
cmp
xor
shl
ins
test
shl
imul
cmps
imul
cmps
imul
sbb
xor
sar
push
fnstenv
push
and
cmps
imul
mov
call
pop
fnstenvw
pop
mov
cmps
imul
dec
shl
pop
fs
imul
shl
cmps
cld
sbb
nop
pushf
cmps
pop
ss
test
ins
pop
adc
mov
shr
cmps
push
in
push
pusha
mov
fnstenvw
popa
xor
dec
data16
shl
imul
shr
dec
rcr
cli
adc
and
imul
imul
cmps
imul
sub
into
adc
sub
xor
shl
mov
data16
cli
call
push
mov
int
imul
in
xchg
dec
shl
cld
or
and
xor
cmps
ds
sbb
fnstenvw
imul
imul
cmps
imul
adc
sub
push
dec
shl
call
add
push
sub
mov
ins
xor
imul
imul
mov
call
movs
ss
shl
(bad)
in
clc
push
jb
call
test
ins
call
inc
push
dec
imul
sub
cmps
mov
or
dec
shl
je
cmps
imul
push
inc
push
int
imul
dec
shl
inc
pushf
mov
pop
ss
rcl
fsubr
push
ja
cmps
imul
imul
dec
shl
dec
push
mov
(bad)
shr
js
jns
xor
dec
shl
pop
fsubr
hlt
imul
call
data16
dec
pop
imul
xor
cmps
cld
or
ds
shl
ret
lods
imul
dec
rcr
push
push
pusha
jle
call
or
and
int
call
push
xchg
inc
pop
shl
push
pop
push
dec
mov
fsubr
hlt
add
push
pusha
je
pushf
ins
call
xacquire
xchg
je
sahf
int3
xor
cmps
imul
sub
xor
shl
pop
mov
dec
mov
cmp
pusha
je
pushf
test
call
or
shl
inc
bound
xor
movs
mov
call
jo
mov
mov
push
push
pop
call
in
cld
call
xchg
mov
imul
rcl
push
pop
push
xchg
xchg
call
push
lods
mov
ins
add
adc
inc
shl
cwde
mov
imul
cmps
imul
mov
inc
dec
pop
imul
dec
cmps
imul
ins
call
ins
xor
movs
ret
dec
shl
pop
js
xor
mov
push
push
mov
imul
cmps
imul
cmps
imul
push
and
adc
imul
push
jl
movs
mov
dec
loopne
clc
add
and
mov
cdq
cmps
ins
lock
xor
movs
or
and
inc
adc
push
cmp
je
cmps
imul
xor
xor
rcl
cld
cmps
imul
call
sub
pop
mov
call
push
dec
shl
test
shl
shr
fs
shl
mov
xchg
scas
and
dec
pusha
ins
sub
cmps
imul
shl
nop
movs
dec
shl
clc
add
cmps
imul
cmps
imul
sub
sub
repnz
push
nop
pushf
mov
dec
mov
dec
shl
and
nop
call
mov
cmps
imul
sub
cmps
loopne
sub
cmp
xor
push
outs
mov
fsub
call
mov
cmps
imul
ss
shl
call
cmps
ins
js
fsub
mov
lock
sbb
cmps
imul
cmps
imul
call
ret
xor
shr
and
cmp
shl
rcr
cmps
imul
cmps
imul
dec
shr
sub
pop
shl
aam
cmps
imul
cmps
imul
mov
jmp
xor
rcr
xchg
mov
dec
retf
push
pusha
ins
fwait
cmps
imul
imul
cmps
imul
dec
shl
test
ror
ror
retf
push
cld
or
call
dec
mov
imul
int
xor
shl
dec
shl
into
push
sub
jo
dec
(bad)
call
shl
mov
mov
lock
or
imul
imul
xor
push
shl
dec
pop
jbe
dec
shl
mov
enter
data16
and
push
cmps
imul
sub
hlt
add
or
ss
shl
jl
cmps
call
rcl
aam
sub
mov
aam
shl
out
aad
inc
push
outs
mov
dec
shl
fsub
lock
dec
shl
sbb
fiadd
jl
xchg
mov
dec
shl
in
clc
add
and
cmps
imul
imul
shl
jb
ss
shl
mov
imul
imul
shl
mov
xchg
dec
shl
aam
xor
inc
imul
sub
cmps
in
push
fdivr
dec
shl
int3
fcom
xor
xor
add
xchg
fs
pop
ss
jl
add
adc
cmps
imul
cmps
imul
jo
xor
rol
imul
cmps
imul
dec
shl
push
xchg
dec
shl
cmps
imul
sub
into
dec
jecxz
je
pushf
ss
shl
mov
fidiv
imul
xor
cmps
sahf
or
sbb
cmp
shl
add
call
cmp
fdiv
out
sbb
xor
rol
lods
ror
int
dec
fsub
add
out
push
mov
movs
ret
push
cmps
mov
fdiv
jmp
in
retf
cmps
imul
ins
shl
in
or
dec
lock
int
imul
cmps
imul
dec
shr
lock
sbb
mov
ss
shr
mov
imul
imul
shl
(bad)
rcr
call
sub
cmps
imul
shl
mov
dec
mov
sub
call
push
pusha
cmps
imul
xor
add
and
cwde
xchg
dec
shl
mov
and
cmp
cmps
imul
call
imul
outs
fmul
push
cld
sbb
xor
rol
pop
or
and
jo
dec
shl
mov
dec
rol
loop
add
lock
sub
push
or
ret
or
adc
dec
shl
pushf
test
shr
rcr
xor
inc
dec
pop
mov
call
or
xor
and
cmps
pop
ss
xor
imul
(bad)
shl
ins
js
shl
sbb
dec
shl
adc
sub
dec
fnstenv
pusha
ins
mov
mov
call
cmovl
xor
je
mov
xor
rol
inc
dec
push
loopne
int
dec
in
clc
push
adc
xor
sar
call
add
push
mov
enter
call
dec
push
cmps
imul
sub
clc
add
and
call
adc
cmps
imul
shl
dec
nop
ins
shl
add
push
imul
and
cmp
loopne
mov
call
call
hlt
adc
jl
xchg
xor
cmps
imul
ror
(bad)
sbb
dec
shl
sub
dec
rol
shr
sbb
cwde
movs
ret
pusha
dec
shl
lods
mov
(bad)
push
js
mov
call
xor
pushf
test
imul
cmps
imul
sub
fimul
and
sub
xchg
dec
shl
call
imul
xor
mov
and
fsub
add
clc
add
adc
dec
shl
cli
fs
cmps
imul
dec
shr
inc
dec
pop
imul
shr
cmps
sbb
shl
hlt
add
push
pusha
je
xchg
dec
ret
cmps
imul
rol
dec
pop
jbe
sub
cmps
xor
shr
call
in
shl
cmps
cld
sbb
aam
in
cmps
imul
cmps
imul
imul
cmps
imul
dec
shr
cwde
movs
mov
imul
call
xor
shl
(bad)
ss
xchg
imul
cmps
imul
data16
clc
push
cmp
push
mov
cmps
ret
cmp
cmp
xor
cmps
imul
cmp
push
movs
mov
ficomp
cmps
imul
cmps
imul
dec
shl
test
dec
shr
hlt
adc
ror
enter
ds
inc
dec
shl
aas
aas
aas
aas
xor
adc
aas
ds
push
mov
imul
mov
call
inc
dec
shl
fsubr
call
push
in
clc
xor
mov
add
adc
jo
(bad)
mov
dec
ror
pop
push
call
shl
cmps
adc
sub
cmps
imul
cmps
imul
dec
shr
sub
dec
ror
jmp
fwait
cmps
mov
js
test
pushf
mov
dec
shl
mov
dec
ret
pusha
ins
js
mov
call
cs
shl
push
pusha
ins
mov
xor
shl
fidiv
sbb
test
cs
push
push
xor
call
rcr
ficom
pusha
ins
mov
cmps
imul
add
adc
xor
shl
mov
xor
cmp
pop
imul
xor
mov
push
or
test
fnstenvw
push
dec
call
fsub
lock
imul
imul
ror
xor
cmps
jmp
imul
cmps
imul
mov
or
and
shl
mov
call
push
sub
dec
sar
nop
scas
push
pop
cmps
ins
call
pop
imul
cmps
imul
ins
call
mov
ror
dec
shr
dec
pusha
out
je
pushf
xor
shl
mov
call
dec
pop
cmps
imul
imul
imul
cmps
imul
cmps
imul
arpl
sub
dec
shl
cwde
test
dec
shl
(bad)
shl
in
call
push
sub
push
imul
imul
xor
add
and
inc
push
xor
shl
jo
mov
mov
imul
cmps
imul
cmps
imul
and
xor
shr
push
ins
jl
shl
loopne
call
sub
imul
cmps
imul
imul
xor
mov
push
and
dec
dec
shl
test
ss
shl
shl
call
data16
imul
cmp
cmps
imul
ins
call
fsubrp
shl
cmps
cli
or
and
dec
shl
test
mov
outs
imul
imul
sub
clc
adc
sub
push
pusha
xor
shl
xchg
test
loopne
shr
or
push
sub
pop
xor
shl
mov
pop
shr
clc
push
adc
dec
push
xor
shl
jl
mov
rol
rcr
cli
xor
imul
imul
mov
clc
or
sub
shl
mov
mov
out
call
xchg
movs
mov
call
in
shl
cmps
cld
add
adc
xor
shl
ins
jl
dec
shl
cwde
scas
in
jne
shl
jbe
push
and
inc
push
xor
shl
jo
nop
mov
mov
shl
lock
mov
cld
or
xchg
and
cmp
xor
rol
ins
js
shl
mov
xor
fsubr
clc
or
(bad)
xor
sahf
push
and
inc
push
push
jo
call
jp
dec
shl
(bad)
rcr
lock
sbb
call
int3
mov
call
and
xor
cmp
fs
cwde
xor
shl
ror
lock
call
push
xor
mov
sahf
lods
mov
dec
(bad)
call
call
je
lods
dec
ret
cmps
imul
jg
xor
rol
xor
push
pop
js
shl
mov
xchg
dec
shl
in
or
imul
imul
xor
add
and
mov
xor
aam
pop
xor
shl
aam
call
sub
imul
shl
mov
fisubr
data16
test
xchg
(bad)
rcr
pop
test
add
xor
cmps
imul
sub
dec
shl
add
cmps
lods
mov
shr
repnz
xor
shl
jo
xchg
scas
sub
dec
sar
cmps
imul
sub
imul
sub
cmps
in
or
sbb
pop
or
lods
mov
gs
add
adc
cmps
imul
imul
mov
push
mov
cmp
push
shl
mov
dec
mov
fdivrp
add
call
inc
pop
push
jo
mov
cmps
int3
aam
outs
in
or
push
xor
inc
push
outs
cmps
imul
imul
cmps
imul
imul
dec
imul
(bad)
nop
test
cmp
cmps
imul
call
imul
inc
push
cmps
imul
imul
cmps
imul
call
mov
aam
call
shl
pop
fs
shl
pushf
test
mov
enter
push
adc
call
jo
imul
rcr
hlt
adc
push
cmp
pop
jbe
cmps
imul
mov
hlt
add
xor
sar
ins
js
mov
xor
cwde
mov
fsub
lock
xor
dec
imul
imul
xor
add
sbb
dec
pop
xor
shl
jo
movs
mov
xor
sar
cmps
imul
imul
dec
shr
and
ins
js
xor
ror
fnstenvw
fwait
dec
call
xchg
mov
sub
cmps
imul
sbb
xor
shl
cmp
into
fnstenvw
popf
sbb
inc
push
ins
js
imul
xor
mov
sahf
adc
xor
pop
ss
dec
data16
inc
pop
fwait
cmps
imul
ins
call
mov
dec
dec
fsubr
push
mov
call
cs
shr
cmps
movs
ret
cmp
fnstenv
movs
dec
retf
cmps
imul
dec
shl
aam
(bad)
push
pop
je
call
imul
call
call
mov
stos
nop
pushf
mov
fisub
cmp
imul
shl
dec
mov
dec
loop
scas
inc
(bad)
int3
ins
mov
call
scas
cs
xor
shl
scas
mov
mov
xor
shl
dec
shl
mov
xor
shl
mov
mov
shl
mov
dec
shl
mov
shl
loopne
cmps
imul
shr
in
or
call
mov
or
mov
sar
dec
shl
mov
xor
mov
xor
sar
xchg
dec
shl
mov
sub
cmps
imul
ins
xchg
dec
ror
rcr
rol
push
sub
cmps
imul
shl
enter
mov
call
ret
cs
(bad)
(bad)
les
cmps
imul
retf
cmps
cdq
cmps
(bad)
jp
(bad)
push
mov
shl
enter
cs
ror
enter
ss
ror
jb
call
xor
sahf
push
push
call
call
cmps
imul
fwait
cmps
cdq
cmps
int3
int
jl
add
xor
shr
test
fstp
iret
and
cwde
movs
shl
cmps
ret
pusha
jle
mov
xchg
dec
hlt
adc
push
imul
shl
cmps
cld
or
es
xor
xor
cmps
shr
rcl
push
jl
imul
xchg
imul
dec
mov
push
and
inc
pop
dec
shl
mov
mov
shl
call
push
dec
shl
je
shr
sahf
hlt
add
push
push
sbb
shl
pop
push
je
pushf
lods
rcr
dec
ror
fsubr
cld
or
cmps
imul
imul
cmps
imul
inc
call
pusha
jo
imul
sub
cmps
call
and
xor
xor
pop
push
xor
xchg
movs
mov
int
dec
rcl
in
fild
dec
shl
inc
pop
push
ror
fnstenv
fst
call
dec
pop
push
js
cwde
test
mov
call
fimul
xor
sbb
cmp
pop
ins
xor
shl
mov
rcl
loopne
add
inc
and
push
pusha
je
xor
rol
pop
ss
loopne
add
cmp
cmps
imul
cmps
imul
or
sbb
xor
dec
shl
mov
mov
imul
cmps
imul
imul
mov
in
jecxz
and
shl
jl
dec
shl
fsubr
call
adc
xor
cmps
imul
imul
sub
lock
sbb
cmp
xor
shl
jl
movs
mov
ss
ror
fdiv
add
or
imul
imul
cmps
imul
out
xor
mov
sub
inc
pop
shl
jmp
or
sbb
xor
xor
shl
pop
jo
xchg
shl
rcr
cmps
pop
ss
in
cli
or
push
and
cmps
imul
cmps
imul
shr
cld
push
in
and
xor
xor
jp
xor
shl
mov
call
cmp
cmps
imul
data16
lock
mov
cmps
imul
ins
call
push
xor
shl
test
dec
rcr
hlt
add
mov
xor
shl
je
pushf
test
xor
rol
shr
clc
adc
data16
shl
cmp
fs
shl
loopne
xor
shr
pushw
xor
jo
xor
ror
imul
call
pushf
lods
mov
int3
fsubr
hlt
add
call
ss
xchg
imul
xor
mov
hlt
ss
push
xor
xchg
test
int3
call
add
sbb
dec
pusha
imul
xor
mov
imul
push
bound
xor
je
test
fdivr
call
cmp
ins
imul
sub
cmps
int3
lock
and
dec
push
pusha
jo
xor
shl
test
(bad)
shl
mov
rcr
call
pop
xor
cmps
imul
mov
in
or
mov
shl
cmp
mov
fnstenvw
push
call
cmps
imul
dec
call
mov
shl
cmps
imul
and
xor
shr
inc
bound
add
push
sub
dec
shl
test
xor
xor
enter
add
dec
sar
push
pusha
je
dec
shl
fsubr
xor
cmp
jo
push
and
dec
shl
mov
rcl
hlt
add
cmps
imul
cmps
imul
ins
call
out
push
imul
cmps
imul
sub
cli
or
push
xor
dec
shl
mov
rcr
in
add
push
cmps
imul
imul
imul
cmps
imul
cmps
imul
inc
shl
js
dec
shl
(bad)
shl
ins
shl
call
push
dec
shl
pop
jo
dec
shl
cwde
movs
mov
pop
ss
shl
lock
or
cmps
imul
imul
cmps
imul
imul
dec
shr
sub
push
je
mov
dec
in
cld
sbb
xchg
push
lods
shl
in
cmps
imul
cmps
imul
cmps
imul
or
mov
movs
ret
push
adc
cmp
ins
js
sub
cmps
imul
rol
fs
fld
xor
movs
(bad)
loopne
push
cmps
imul
shl
add
push
sub
dec
pop
xor
shl
adc
fdiv
adc
push
xor
shl
js
pushf
mov
ss
ror
loopne
or
sbb
scas
ss
sbb
inc
dec
pop
cmps
imul
sub
lock
and
fs
shl
mov
dec
ror
jmp
call
dec
mov
call
inc
xor
shl
push
xor
shl
xchg
xor
ror
(bad)
(bad)
call
(bad)
cmps
imul
imul
dec
shl
ins
jl
test
xchg
(bad)
aam
push
ficomp
cmps
imul
cmps
imul
mov
or
and
push
shl
mov
cmps
cdq
or
and
and
sub
push
adc
imul
pushw
call
xchg
movs
mov
fwait
cmps
imul
and
xor
sar
pusha
ins
js
shl
dec
test
push
sbb
ss
sar
dec
fsubr
and
and
imul
imul
mov
fdivr
and
shl
js
shr
imul
out
push
dec
dec
shl
test
xchg
dec
shl
call
xor
mov
lock
adc
cmp
xor
ror
outs
adc
mov
(bad)
add
sbb
push
push
imul
sub
sbb
inc
dec
shl
into
loopne
xor
xor
sub
push
dec
shl
lods
enter
xor
lock
and
call
movs
mov
call
sbb
shl
jp
xchg
dec
shl
fdivp
add
adc
call
jl
imul
ins
call
push
xor
shl
jl
movs
rcr
rcl
in
cld
sbb
sub
push
ins
jl
fwait
cmps
imul
dec
shr
pop
push
mov
xor
shl
cmps
imul
cmps
imul
dec
shr
and
dec
pop
shl
lods
enter
dec
shr
cld
data16
dec
sar
push
jb
shl
or
call
or
mov
enter
fwait
cmps
loopne
adc
fsubr
cmps
imul
cmps
imul
cmps
imul
cmp
call
xchg
mov
xor
mov
in
add
and
push
shl
mov
dec
aam
cld
or
sub
pop
push
call
add
shl
mov
mov
fdiv
add
call
pop
je
ins
call
and
shl
ins
jle
shl
fdivr
shl
push
xor
shl
mov
call
push
bound
cmps
imul
cld
adc
cmps
push
cmp
call
(bad)
sub
cmps
in
clc
add
adc
dec
shl
call
add
sbb
mov
lods
mov
shl
jo
dec
shl
in
or
adc
sub
push
imul
xor
mov
inc
push
fs
push
fwait
cmps
imul
ss
xor
fdiv
add
cmps
imul
imul
dec
shr
xor
fs
xor
ror
mov
dec
aam
cld
data16
push
shl
sbb
dec
sub
pop
call
call
loopne
or
shl
loop
cmps
imul
cmps
imul
cmps
imul
push
cmp
cmps
imul
cmps
imul
sbb
xor
shl
inc
mov
dec
mov
and
cmps
imul
cmps
imul
imul
cmps
imul
push
push
call
ins
js
xor
mov
sub
push
pop
push
xchg
cmps
imul
imul
call
sub
cmps
imul
cmps
imul
shl
(bad)
(bad)
cmps
pop
ss
call
cmp
cmps
imul
cmps
imul
pop
shl
inc
dec
push
shl
in
call
cmp
shl
pop
jbe
pop
pop
pop
shl
pop
ins
dec
shl
clc
adc
cmps
imul
cmps
imul
shr
push
ins
or
dec
pushf
mov
fdivr
add
cmps
imul
lods
imul
repz
movs
mov
pop
push
mov
xor
rcr
cmps
imul
call
arpl
xchg
fimul
sbb
dec
shl
enter
pop
ss
and
ins
js
call
sbb
shl
sbb
fdiv
and
xor
jl
cmps
aam
xor
mov
(bad)
sub
cmp
fnstenv
call
call
int
imul
dec
shl
pusha
ins
js
shl
mov
dec
shl
cld
or
adc
sub
inc
imul
imul
imul
dec
shr
sbb
inc
mov
xor
rcl
cmps
ins
call
mov
call
cs
sub
cmps
in
or
sub
shl
xchg
stos
mov
imul
imul
xor
add
and
dec
pop
xor
shl
or
clc
or
push
cmp
dec
shl
nop
cwde
mov
imul
cmps
imul
imul
dec
shl
fs
mov
mov
cmps
imul
cmps
imul
dec
shr
xor
push
shl
retf
imul
cmps
imul
mov
sbb
sub
dec
shl
jl
dec
shl
(bad)
rcl
ins
shl
clc
adc
sub
xor
xor
push
dec
shl
ror
in
call
outs
les
sbb
lock
jle
dec
shl
or
clc
jle
jg
dec
shl
or
jg
jg
push
dec
shl
push
ss
add
xor
shl
cwde
movs
mov
imul
cmps
ins
call
xchg
test
cmps
cdq
test
sub
cmps
repnz
cmps
imul
imul
dec
shl
inc
push
data16
xor
ror
cmps
pop
ss
lock
sbb
imul
cmps
imul
adc
call
inc
pop
cmps
imul
imul
dec
shl
inc
push
push
rcl
cmps
pop
ss
out
clc
sub
imul
imul
cmps
imul
imul
mov
call
xor
dec
shl
fs
movs
fnstenv
call
call
dec
mov
call
inc
xor
shl
je
cwde
test
ss
rol
aam
add
cmps
sub
dec
push
ror
xchg
pop
xchg
push
sub
fs
shl
xchg
mov
enter
rcl
lock
call
cdq
cmps
ins
call
xchg
cmps
imul
cmps
imul
dec
shr
sub
pop
js
xor
ror
cmps
imul
cmps
imul
mov
fsub
xchg
dec
shr
(bad)
adc
call
fwait
cmps
imul
dec
shr
xor
shl
enter
xchg
dec
clc
adc
imul
mov
lock
adc
cmp
xor
ror
jb
adc
and
pop
push
cmps
imul
mov
hlt
adc
xor
shl
cwde
mov
(bad)
mov
xor
sar
push
pop
push
dec
xchg
movs
in
(bad)
push
mov
dec
shl
pop
js
dec
shl
in
call
pusha
jb
imul
xor
mov
mov
dec
shl
mov
aam
in
clc
adc
imul
imul
imul
mov
call
cmps
dec
shl
bound
pop
ss
cmps
pop
ins
jle
imul
cmps
fldenv
push
xor
call
les
hlt
test
test
call
(bad)
shr
cmps
loopne
adc
xor
push
jo
pushf
mov
call
stos
adc
imul
repz
push
cmp
xor
ror
jo
cwde
dec
shl
test
cmps
imul
cmps
imul
mov
sub
dec
shl
mov
xor
or
sbb
imul
imul
xor
add
and
aam
in
call
sub
inc
imul
xor
cmps
hlt
add
shl
out
call
inc
dec
push
je
pushf
mov
cmps
fsub
lock
sbb
push
js
pushf
scas
rcl
fwait
cmps
aam
add
and
push
jo
cwde
lods
jnp
shl
(bad)
mov
dec
shl
nop
pushf
ss
shl
mov
fmul
imul
imul
ins
call
inc
xor
shl
push
mov
rcr
call
sbb
xor
shl
push
mov
fsubr
dec
shr
cld
push
mov
call
retf
cmps
imul
dec
shl
and
push
push
pop
jp
sahf
mov
mov
call
sbb
shl
jbe
xor
shl
lods
mov
int
sbb
push
sub
dec
shl
mov
call
adc
inc
imul
ins
call
ds
shl
movs
rcl
lock
sbb
cmps
imul
imul
sub
cld
or
sub
push
pusha
xor
shl
mov
rcr
call
mov
call
(bad)
imul
cmps
imul
pushf
cmps
imul
xor
mov
call
fnstenv
push
(bad)
sbb
cmp
call
mov
mov
(bad)
dec
shl
jo
xor
shl
mov
fsub
imul
cmps
imul
neg
pop
sub
push
cmps
imul
sub
repnz
push
sub
dec
shl
js
mov
ror
fsub
add
adc
jbe
call
fsubr
add
dec
push
sub
imul
imul
dec
shl
pusha
jle
lods
(bad)
test
xor
shl
jbe
call
shr
cld
sbb
inc
dec
xor
shl
jo
cwde
movs
fnstenv
call
call
fwait
cmps
imul
imul
mov
call
inc
xor
shl
push
mov
mov
loopne
add
cmps
imul
imul
mov
clc
add
sbb
inc
shl
je
fnstenvw
aad
call
jb
mov
shr
or
sub
xor
rcr
cwde
mov
shl
or
call
js
nop
imul
fcomp
cmp
js
call
or
shl
or
dec
xchg
mov
aam
clc
call
test
pushf
mov
push
call
jo
cwde
imul
dec
mov
fldcw
sub
movs
shl
in
(bad)
cmps
imul
cmps
imul
mov
hlt
adc
sbb
inc
shl
xor
aam
adc
sub
cmps
imul
cmps
imul
and
xor
shl
dec
push
dec
shl
in
call
dec
pop
ins
imul
sub
cmps
loopne
or
inc
push
dec
shl
mov
xor
cld
or
adc
imul
imul
shl
je
xor
shl
cwde
mov
in
call
sub
cmps
imul
imul
dec
shl
jbe
call
fdivr
add
mov
sub
ins
jl
pop
ss
rcl
cmps
imul
imul
imul
cmps
imul
mov
or
and
push
pusha
shl
lods
mov
(bad)
shr
sbb
sub
inc
pop
mov
cmps
imul
inc
shl
cwde
test
shl
add
call
push
pop
jp
call
jmp
and
cmp
dec
shl
mov
shr
in
clc
push
out
pushw
push
dec
shl
enter
shl
in
or
sbb
imul
sub
cmps
fsub
add
or
cmps
xor
es
push
repnz
push
push
dec
mov
shl
xor
adc
test
inc
dec
shl
lods
rcl
shl
call
xor
call
nop
pushf
mov
rcr
call
imul
lods
imul
imul
cmps
imul
int
push
and
push
ins
jl
dec
shl
lods
enter
sar
sbb
jbe
xor
shl
lods
enter
shr
sbb
mov
inc
dec
pop
xchg
dec
shl
adc
cmps
imul
imul
cmps
fst
cld
test
dec
push
cmps
mov
shr
in
or
adc
cmp
shl
js
mov
sar
inc
sub
pop
push
rcr
jmp
push
push
out
add
xor
pop
cmps
imul
imul
dec
shl
inc
push
push
rcl
cmps
imul
cmps
imul
cmps
imul
and
xor
sar
fs
dec
shl
call
xchg
add
sub
push
pusha
imul
data16
add
call
adc
fwait
cmps
sahf
hlt
add
or
shl
adc
int
imul
dec
shl
push
bound
xor
rcr
xor
mov
cld
or
mov
xor
xor
shl
test
cmps
imul
cmps
imul
cmps
imul
xor
xor
rol
pop
jbe
dec
shl
ficom
mov
or
sahf
mov
aam
imul
cmps
imul
imul
dec
shl
inc
pop
je
shl
loopne
cmps
imul
cmps
imul
mov
int3
adc
cmp
xor
rcr
test
fnstenvw
adc
cmps
imul
cmps
imul
sub
dec
push
jb
shl
fsubr
call
sbb
pop
imul
ins
call
sub
xor
cmp
ins
js
nop
ss
shl
test
hlt
add
imul
imul
shl
cwde
movs
xchg
dec
shl
shr
adc
and
cmps
imul
ins
call
xor
xor
inc
push
pop
jp
mov
dec
shl
fdiv
or
sub
cmps
imul
call
test
imul
imul
shl
pusha
ins
xor
shl
xchg
mov
gs
add
imul
imul
dec
shl
jl
lods
enter
rcl
lock
adc
and
cmp
test
cmps
imul
imul
cmps
imul
dec
shr
pop
outs
adc
rcl
cld
cmps
imul
cmps
imul
mov
add
pusha
jb
xchg
shl
call
gs
sub
call
loopne
cld
xor
mov
or
shl
mov
dec
retf
hlt
add
or
shl
int3
fcomp
add
cmp
pusha
imul
ins
call
es
shl
mov
xor
in
cld
sbb
imul
sub
cmps
call
xor
xor
dec
pusha
jl
mov
xor
hlt
adc
inc
imul
imul
sub
cld
sbb
call
xchg
movs
mov
call
clc
shl
and
dec
fnstenvw
xor
imul
cmps
imul
xor
xor
mov
push
sub
dec
dec
shl
mov
(bad)
fdivrp
add
imul
imul
ins
call
inc
xor
shl
mov
dec
rcr
clc
add
and
imul
imul
dec
shr
xor
shl
rcl
int
dec
in
hlt
adc
into
push
cmp
shl
xchg
mov
mov
fdiv
cld
adc
js
nop
scas
cmp
push
pop
ins
shl
mov
fnstenvw
cmp
call
push
cmps
imul
clc
or
shl
mov
xor
clc
add
and
call
les
in
cld
sbb
and
xor
cmp
pop
ins
sbb
shr
or
call
jo
imul
ins
call
cmp
cmps
imul
adc
push
inc
inc
push
cmp
dec
shl
adc
mov
pop
push
sub
dec
shl
pop
js
nop
imul
mov
call
sbb
xor
es
push
pop
ins
xor
shl
mov
dec
ror
(bad)
(bad)
adc
imul
imul
cmps
imul
xor
xor
sar
dec
pop
jo
dec
shl
fsubr
call
and
push
imul
sub
cmps
fdiv
add
dec
shl
cwde
movs
ss
shl
rcl
or
call
jle
imul
sub
clc
add
and
dec
xor
shl
je
pushf
test
mov
shl
mov
xor
in
add
call
cmps
imul
imul
dec
shl
cmp
ins
shl
test
dec
shl
cld
or
sbb
xor
push
ins
call
call
push
push
push
push
push
imul
cmps
imul
sub
call
xor
call
and
imul
imul
ins
call
push
and
inc
push
data16
cmps
imul
cmps
imul
sbb
xor
shr
cmp
dec
shl
mov
xchg
dec
shl
in
add
imul
imul
imul
dec
shr
cmp
shl
lock
cmps
imul
shr
clc
adc
sbb
inc
pusha
xor
shl
test
rcl
fdivr
add
mov
sub
dec
shl
push
jo
cwde
shl
fsub
cmps
imul
dec
shr
test
push
sub
inc
xor
shl
pusha
outs
jl
shl
shl
cmps
pop
ss
out
cld
or
es
pop
ins
jp
call
shl
jmp
dec
cmp
mov
mov
fdiv
add
call
jo
imul
imul
call
sahf
fwait
cmps
imul
dec
shr
es
push
shl
mov
test
shr
or
cmps
imul
cmps
imul
add
sub
dec
shl
cmps
fcomp
or
xor
imul
ins
call
and
xor
xor
mov
mov
fsub
lock
cmps
imul
ins
call
nop
xor
shl
mov
shr
imul
mov
call
hlt
xor
shr
dec
push
cmp
shl
rcr
cmps
imul
cmps
imul
cmps
imul
imul
cmps
imul
clc
outs
jp
cmp
imul
shl
cmp
dec
shl
fsubr
retf
fnstenvw
add
push
jg
xor
shl
or
ror
fsubrp
cli
or
push
and
inc
push
call
stos
mov
imul
sbb
xor
shl
xor
pop
jbe
shl
rcr
fxch
xor
jno
push
and
cmps
imul
dec
shl
cwde
stos
mov
shl
repnz
adc
imul
imul
dec
shl
cmp
shl
rcr
cmps
imul
cmps
imul
cmps
imul
cmp
mov
xor
test
shr
cld
sbb
and
dec
push
imul
add
adc
dec
shl
mov
call
mov
imul
ins
call
(bad)
mov
cmps
cdq
mov
sub
push
pusha
mov
call
mov
call
dec
push
cmps
imul
imul
dec
shl
cmp
pop
outs
fnstenv
clc
add
cmps
imul
imul
cmps
imul
shl
cwde
mov
fnstenv
nop
adc
cmps
imul
cmps
imul
and
pop
ins
dec
shl
fsub
call
sub
push
imul
data16
int3
call
dec
pop
imul
sub
cmps
fsub
add
dec
and
xchg
ja
push
ret
dec
rcr
out
add
call
fisub
mov
xchg
cmps
imul
imul
mov
add
adc
push
fnstenv
xchg
cwd
cmps
imul
imul
dec
shl
sbb
int3
call
imul
imul
cmps
imul
xor
xor
rol
push
xor
lods
enter
adc
xor
mov
pushw
xor
pop
push
test
call
sub
inc
imul
imul
sub
cld
or
xor
shl
pop
ins
or
mov
fsub
lock
mov
imul
mov
add
shl
test
mov
aam
mov
dec
xor
and
pop
push
test
call
sub
pop
imul
ins
call
mov
cmps
imul
imul
call
sbb
fdiv
adc
sbb
pop
je
xor
shl
test
int3
call
hlt
adc
imul
imul
dec
shr
sub
shl
(bad)
aam
int
dec
lock
sbb
shl
mov
mov
aam
cld
sbb
and
push
pop
js
call
fcom
xor
cmps
hlt
add
shl
cwde
mov
dec
shl
fsubr
or
dec
xor
pop
push
shl
(bad)
shr
hlt
imul
cmps
imul
ins
call
xor
cmps
imul
imul
dec
shl
pusha
jl
movs
shl
dec
shl
mov
dec
shl
sub
jl
xor
rcr
xor
xor
pop
sbb
shl
lods
les
in
or
imul
cmps
imul
fidiv
fs
call
loopne
sub
cmps
in
cld
or
sub
fnstenv
mov
call
fsubr
clc
cmps
imul
call
jbe
lods
ins
call
or
and
push
pop
js
shl
call
adc
imul
ins
call
or
shl
sbb
mov
dec
ror
mov
xor
dec
shl
push
fs
shl
mov
dec
loopne
add
adc
ss
imul
jp
mov
push
push
fs
call
aam
cld
xor
mov
or
shl
mov
dec
ror
test
call
jo
xchg
imul
sub
cmps
lock
or
xor
xor
pusha
ins
js
shl
push
inc
push
bound
xor
je
mov
data16
lock
call
test
imul
shl
nop
lods
xor
shl
(bad)
shr
cld
imul
shl
cmps
test
push
and
dec
shl
mov
xchg
dec
shl
call
imul
xor
mov
(bad)
push
cmp
dec
shl
mov
call
(bad)
and
call
cwde
cmps
imul
xor
or
adc
shl
out
call
and
dec
imul
imul
shl
push
pusha
xor
shl
jl
cwde
mov
mov
int3
fsubr
cmps
imul
cmps
imul
cmps
imul
shl
call
shl
inc
dec
xor
shl
push
xor
rcr
cmps
pop
ss
in
add
or
call
dec
push
pusha
imul
imul
ins
call
xor
dec
shl
dec
push
fs
shl
pushf
lods
dec
shl
in
call
and
imul
dec
mov
adc
push
and
shl
imul
cmps
imul
cmps
imul
jbe
call
push
outs
mov
cmps
imul
clc
add
or
dec
shl
jo
xor
shl
mov
enter
sahf
(bad)
loopne
(bad)
aam
push
sub
shl
mov
pushf
test
loopne
hlt
shl
push
sub
shl
test
jnp
shl
enter
(bad)
div
sub
push
jo
xor
sar
pushf
mov
aam
call
cmps
imul
cmps
imul
enter
push
adc
xor
shl
sub
pop
jl
cmps
imul
ins
call
xor
imul
imul
dec
shl
dec
push
jo
shl
int3
call
hlt
adc
sbb
call
nop
lods
mov
aam
cld
or
sub
xor
shl
dec
pop
je
dec
shl
(bad)
cs
pop
data16
call
mov
int3
(bad)
test
shl
dec
fs
shl
cwde
movs
ror
xchg
dec
shr
lock
adc
cmps
imul
imul
imul
cmps
imul
mov
lock
sbb
inc
shl
mov
dec
mov
int3
jmp
test
(bad)
shl
repnz
mov
or
push
xor
xor
shl
mov
dec
in
or
adc
call
pop
mov
imul
out
call
jo
cwde
ins
call
pop
call
ins
jle
call
in
jmp
imul
cmps
imul
pop
adc
cmps
imul
cmps
imul
out
and
xor
xor
pusha
ins
mov
xor
jb
test
imul
mov
sub
dec
shl
aam
shl
push
sub
shl
add
call
inc
pop
jo
call
hlt
push
call
sub
inc
push
imul
xor
mov
icebp
aam
clc
or
jbe
dec
shl
cs
push
fs
xor
ror
xor
mov
cld
adc
(bad)
push
cmp
xor
rol
imul
cmps
imul
cmps
imul
push
xor
dec
pop
jbe
movs
imul
xor
mov
neg
pop
jo
shl
aam
call
push
pop
ins
imul
imul
xor
or
sbb
xor
pop
xor
shl
nop
lods
mov
dec
repz
shr
cld
pop
sti
pop
and
dec
xor
shl
je
pushf
mov
int3
fdiv
imul
xor
pop
push
shl
mov
aam
imul
cmps
imul
imul
mov
add
adc
sub
xor
ror
int3
fdiv
xor
sar
add
stos
mov
(bad)
fsubr
clc
adc
cmps
imul
imul
mov
(bad)
sbb
xor
xor
shl
mov
dec
fdivr
add
and
cmps
imul
cmps
imul
pop
push
call
jl
xchg
ins
call
cmp
shl
adc
ror
cld
sbb
xor
js
movs
imul
cmps
fldenv
push
and
dec
xor
mov
adc
and
cmp
shl
adc
(bad)
aam
clc
call
cs
pop
imul
xor
cmps
in
or
xor
or
rcr
clc
add
and
cmps
imul
imul
xor
or
and
push
pusha
jl
dec
shl
movs
mov
(bad)
imul
cmps
imul
imul
dec
shl
inc
push
pop
jp
xor
rcl
imul
cmps
imul
mov
test
sbb
shl
xchg
stos
mov
call
dec
fs
call
in
adc
cmps
imul
call
lock
cmp
ins
dec
shl
loopne
call
inc
pop
jo
call
loopne
xor
cmps
lock
sbb
dec
shl
lods
mov
(bad)
rcr
call
cmps
pop
dec
push
pusha
ins
mov
mov
call
stos
mov
fwait
cmps
out
add
adc
push
pusha
jl
test
dec
shl
shl
cld
add
imul
shl
movs
mov
imul
shr
cmps
shl
add
or
dec
fs
cwde
xor
shl
ror
hlt
xor
data16
pop
push
and
xor
shl
jl
pushf
dec
shl
repnz
cmps
imul
cmps
imul
fstp
data16
push
xor
call
pushf
cmps
imul
xor
sbb
sub
jl
dec
shl
lods
enter
call
inc
push
dec
imul
ds
imul
cmps
imul
sub
clc
adc
sub
xor
shl
mov
call
sub
cmps
imul
imul
imul
mov
call
cmp
dec
shl
pop
data16
shl
mov
dec
(bad)
test
dec
shr
cmp
pop
dec
shl
lods
mov
enter
add
imul
imul
imul
mov
out
or
and
shl
mov
cmps
pop
ss
loopne
or
and
cmps
imul
cmps
imul
xor
xor
sar
or
(bad)
call
pusha
jl
xor
cmps
imul
je
pushf
movs
shl
dec
int3
call
call
jl
movs
ins
call
sbb
and
dec
push
dec
nop
pushf
mov
xor
or
mov
inc
pop
dec
shl
enter
repnz
ss
push
xor
shl
mov
xor
call
imul
imul
dec
sar
cmp
and
pop
xor
shl
ins
js
mov
jle
mov
call
dec
shl
or
sbb
xor
ins
xor
shl
cwde
lods
enter
gs
or
sub
cmps
imul
ins
call
dec
xor
shl
je
mov
shl
aas
xor
shl
pop
ins
jle
mov
mov
fsubr
cld
xor
shr
mov
inc
push
push
jp
sahf
mov
cmps
pop
ss
aam
or
sbb
call
nop
movs
shl
add
mov
imul
cmps
imul
inc
shl
mov
dec
shl
add
call
test
mov
mov
call
push
pop
ins
imul
imul
ins
call
sbb
(bad)
mov
cmps
xor
add
or
sbb
sbb
fist
popa
jno
inc
leave
out
xor
sub
and
inc
fisub
int
cs
and
inc
call
push
imul
ins
inc
inc
add
call
and
lahf
xor
fld
adc
or
add
dec
adc
sub
pop
mov
sub
push
add
pop
add
and
sbb
fbstp
pop
lahf
mov
add
sbb
and
or
retf
and
inc
nop
or
jne
mov
pop
dec
jnp
fldenv
cs
enter
pop
cmps
pushf
and
sub
add
not
daa
sbb
xchg
arpl
shr
jg
xchg
call
inc
xchg
add
sub
mov
sub
in
bound
push
shl
add
cmp
adc
add
pop
mov
xor
add
nop
cmp
aaa
inc
cmp
push
mov
das
cmps
bound
aas
ins
pusha
js
jbe
pop
inc
push
push
adc
inc
repz
add
fnsave
jle
add
sbb
add
add
jl
popf
sbb
repnz
daa
jbe
gs
or
or
enter
adc
push
daa
sbb
and
sbb
and
fs
imul
ins
pop
sbb
sbb
push
enter
stos
inc
ret
add
add
push
mov
ror
adc
add
jb
adc
dec
das
add
jns
in
xchg
dec
cmps
in
add
aaa
dec
sbb
mov
bnd
les
add
fcom
iret
sbb
push
jb
imul
aaa
push
xchg
dec
add
adc
pop
dec
in
xchg
cld
outs
adc
pop
outs
inc
add
and
or
add
enter
or
jbe
sbb
lahf
jae
adc
mov
add
sbb
add
inc
js
ins
inc
inc
es
add
enter
lahf
fs
xchg
xchg
xor
xor
ret
push
jle
cmp
enter
add
ret
add
pusha
xor
scas
jb
push
hlt
add
pop
call
add
pop
(bad)
jmp
pop
enter
bound
aas
(bad)
fs
pop
xchg
inc
inc
sbb
xchg
inc
push
cdq
nop
sbb
ins
pop
leave
push
vpmacswd
movs
imul
cmp
sub
add
xor
(bad)
cmc
ja
in
nop
or
loopne
xor
out
pop
or
mov
pop
pop
call
je
or
(bad)
outs
iret
not
ss
leave
xchg
dec
aad
js
add
mov
mov
dec
sbb
adc
inc
adc
nop
mov
add
jnp
push
adc
ins
out
adc
jecxz
adc
cmp
adc
sub
fiadd
and
and
adc
add
test
and
dec
add
jg
or
sbb
sbb
jb
fimul
and
scas
(bad)
(bad)
and
xchg
aas
push
sbb
mov
(bad)
xchg
xchg
xchg
daa
sbb
ja
push
add
mov
add
add
cdq
adc
nop
add
sbb
mov
aaa
call
or
mov
outs
xor
push
ja
dec
sbb
push
mov
add
mov
xchg
or
sbb
cdq
nop
xchg
sbb
xchg
pop
sbb
es
in
movs
mov
and
test
sbb
xchg
pop
iret
test
shl
scas
add
jbe
add
xchg
or
add
nop
xchg
xchg
add
fadd
mov
jg
dec
es
push
dec
sbb
bnd
xchg
not
aas
sbb
and
mov
ss
ficom
aas
das
or
xchg
scas
lahf
ret
les
(bad)
enter
and
push
xchg
retf
cmp
retf
add
nop
xchg
test
ds
enter
sbb
and
add
outs
mov
xchg
or
ds
push
stos
nop
xchg
in
rcl
outs
rol
xlat
rol
das
fldenv
test
aaa
or
push
dec
(bad)
bound
loope
mov
fsubp
test
ja
push
sbb
xchg
sbb
scas
and
add
pop
dec
cmp
jmp
in
mov
call
ds
xchg
or
out
icebp
push
loope
xchg
in
rep
ss
or
stc
adc
jbe
leave
idiv
xor
sbb
inc
sbb
sti
push
les
call
dec
hlt
add
adc
fwait
add
std
xor
pushf
(bad)
popf
inc
xor
adc
add
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
sub
jmp
add
movq
add
or
nop
or
cdq
nop
or
cdq
nop
or
xor
cmp
or
sahf
sbb
adc
dec
loopne
and
enter
push
call
push
in
push
and
dec
xor
pop
hlt
inc
push
xor
pop
clc
or
xor
dec
(bad)
sbb
aas
xchg
shr
sbb
cmp
cs
adc
fld
dec
sbb
in
lea
in
bound
and
out
scas
cmp
mov
mov
and
jae
fwait
dec
push
dec
mov
add
sub
mov
xor
daa
sub
xchg
and
pop
mov
or
test
in
mov
jmp
sub
mov
sbb
add
push
das
enter
dec
pop
xor
push
cmp
add
sahf
xor
shl
adc
mov
push
jb
xor
mov
sbb
add
aaa
cmp
push
xchg
cmp
ja
dec
xchg
cmp
mov
xchg
repnz
add
bound
pop
push
cmp
imul
or
pop
mov
ss
adc
fcom
das
fadd
cmp
iret
inc
adc
dec
pop
mov
dec
push
sar
xchg
mov
and
xchg
dec
inc
ja
leave
and
dec
add
xchg
aaa
stos
mov
inc
dec
adc
in
jle
into
les
push
dec
adc
ror
fild
sub
icebp
inc
mov
xchg
adc
pop
(bad)
add
ret
scas
push
adc
push
fsub
add
stc
(bad)
pop
inc
pop
jo
add
add
fbstp
mov
push
mov
dec
sbb
sub
xchg
test
nop
pop
add
xor
pop
inc
mov
pusha
dec
mov
pop
adc
aas
push
pop
out
mov
adc
push
push
inc
aaa
inc
push
adc
sbb
data16
cmp
dec
outs
xchg
ja
sbb
lods
arpl
push
mov
nop
inc
push
mov
sbb
leave
xchg
mov
add
inc
pop
push
int3
pop
int
push
jns
pop
push
into
or
sbb
or
or
(bad)
movs
inc
sar
push
ror
and
push
or
pmullw
push
(bad)
adc
xor
and
das
push
or
or
adc
xor
xlat
push
jb
xor
push
xor
push
inc
ja
leave
mov
ins
adc
or
adc
jecxz
test
sbb
add
mov
inc
sub
pop
je
push
or
test
loopne
dec
bnd
add
dec
pop
adc
fsub
sub
xchg
push
fcmovb
or
or
adc
fmulp
mov
sbb
xchg
loopne
ret
loope
sub
daa
jecxz
xchg
fsubr
adc
cmp
mov
das
add
fisub
out
inc
push
fs
call
iret
xchg
and
adc
sub
ret
jmp
dec
xchg
add
in
dec
add
enter
add
test
int3
mov
mov
shl
jo
imul
add
jg
jmp
and
(bad)
jg
aaa
les
cs
cmps
dec
enter
add
cmp
lods
jbe
cmps
pop
xchg
adc
mov
outs
xchg
pop
inc
mov
xchg
call
push
and
adc
iret
lahf
cs
cmp
aaa
mov
lds
push
enter
movs
adc
sbb
or
cmps
adc
scas
push
adc
mov
adc
test
add
out
jg
and
cdq
stos
sub
lods
add
inc
and
add
sbb
pop
ss
add
push
xchg
das
mov
xor
je
pop
adc
xlat
out
mov
jmp
add
mov
jmp
mov
imul
cs
xchg
or
bound
mov
mov
mov
out
ss
xor
fld
add
das
mov
adc
adc
sub
es
mov
retf
das
sub
fiadd
sbb
iret
aaa
xchg
sbb
fs
shr
push
loope
cmps
into
cmp
mov
shl
inc
aaa
aad
and
and
sub
xlat
and
shl
xlat
xor
es
inc
inc
push
xchg
mov
fstp
xchg
push
pusha
add
mov
aas
ss
cmp
daa
pop
in
sbb
leave
shr
pop
scas
dec
xchg
fucomip
loop
mov
sub
sbb
out
das
daa
and
nop
icebp
cmp
or
jp
not
push
adc
xchg
inc
add
mov
add
xchg
sub
mov
add
add
add
jp
push
sti
icebp
inc
add
cld
repnz
add
in
(bad)
repz
scas
xchg
dec
dec
fisub
add
add
adc
pusha
(bad)
ss
cmp
inc
pop
or
cdq
xchg
loopne
adc
inc
inc
sbb
add
add
and
and
add
adc
lahf
or
mov
sahf
or
loopne
sub
cmp
fs
aaa
adc
lds
scas
adc
or
xor
add
mov
das
add
mov
lahf
(bad)
sbb
outs
pop
and
test
adc
inc
daa
sbb
fsubr
das
sub
outs
das
xor
nop
push
add
xor
xor
cmp
xor
inc
repnz
add
adc
sbb
and
cmc
daa
call
adc
and
dec
in
dec
call
or
das
sbb
xchg
cmps
cmp
inc
push
cs
pop
cmp
test
dec
ds
das
inc
xchg
dec
repnz
xchg
adc
or
lods
pop
push
scas
dec
dec
in
ret
fisttp
mov
std
adc
cmp
dec
adc
das
fcom
push
(bad)
imul
cmps
push
adc
add
push
mov
aaa
sbb
mov
inc
dec
cwde
jg
pop
push
xchg
pushf
xchg
add
add
xchg
dec
outs
sbb
or
add
sub
push
call
adc
sbb
sub
push
arpl
push
fild
add
or
inc
mov
inc
xchg
mov
mov
pusha
das
bound
nop
in
pop
push
add
cmp
mov
repnz
push
popa
and
aaa
add
ins
adc
aas
xor
repnz
dec
inc
inc
push
iret
jb
(bad)
sbb
addr16
je
inc
call
and
inc
adc
out
xchg
fimul
js
push
jo
mov
xor
jp
or
jl
jno
xchg
inc
lahf
pop
aas
pop
mov
xor
or
sub
inc
xchg
add
or
leave
test
leave
rol
es
xor
sbb
pop
or
adc
mov
mov
xor
nop
das
fs
xor
inc
mov
add
xchg
fiadd
xchg
aaa
cwde
(bad)
push
aaa
pop
rcl
jb
sub
outs
sahf
dec
xchg
adc
aaa
inc
addr16
sbb
in
xchg
aas
xor
add
cmps
test
xor
outs
stos
out
xchg
dec
xor
push
scas
mov
es
aas
mov
jg
and
cmp
adc
mov
iret
out
inc
es
fs
and
ins
das
ror
adc
ss
out
ror
(bad)
bound
ret
mov
and
rcl
xor
adc
xchg
aas
xchg
push
xor
add
into
ror
xchg
rcl
inc
xchg
ja
das
add
(bad)
xlat
and
test
dec
ss
add
inc
add
mov
jae
mov
(bad)
adc
leave
xchg
sbb
loope
add
push
push
add
pop
or
or
add
add
push
fwait
xchg
int
scas
jb
syscall
adc
fs
sahf
adc
adc
mov
dec
add
inc
inc
es
ins
adc
sbb
push
pop
ja
add
pushf
jecxz
sbb
out
xchg
or
cdq
adc
pop
add
cdq
nop
sbb
or
push
out
jae
add
and
adc
and
enter
mov
inc
xor
outs
icebp
daa
and
mov
and
mov
and
iret
adc
je
aam
in
lahf
and
call
daa
pop
sub
and
in
add
push
sub
mov
xor
jmp
and
aaa
in
adc
push
sub
mov
sbb
xchg
add
in
out
add
repnz
sub
inc
cs
(bad)
das
add
or
aaa
lock
int
pop
add
repnz
inc
repnz
add
push
pop
hlt
add
mov
div
clc
daa
sbb
add
retf
push
mov
add
dec
repz
sahf
cld
xor
adc
int
imul
adc
movs
jns
push
adc
int3
daa
ss
aaa
enter
sbb
or
xor
sbb
cmp
and
and
enter
cmp
adc
xor
enter
cmp
xor
ds
and
and
aas
cmp
xor
enter
das
mov
inc
and
and
enter
xor
xor
aaa
inc
push
cmp
and
inc
enter
pop
cmp
xor
pusha
and
fs
enter
dec
push
enter
dec
or
enter
dec
dec
js
xor
enter
push
mov
push
and
and
enter
push
push
mov
nop
and
or
enter
pop
or
xor
pushf
push
mov
ins
pop
movs
outs
mov
and
pop
test
and
std
(bad)
sahf
mov
cmp
adc
aaa
ss
nop
add
pop
add
pop
add
(bad)
adc
xchg
xor
test
xor
add
jns
xchg
aas
inc
pop
push
shl
add
stc
ss
or
sub
add
or
xchg
or
add
daa
cdq
xchg
adc
adc
and
and
adc
enter
pop
adc
sbb
not
sbb
fsub
adc
adc
stc
and
pop
push
push
cs
add
adc
xor
and
pop
inc
pop
push
cmps
add
add
fisubr
pop
sub
and
pop
pop
push
and
xchg
pop
and
adc
test
popa
add
xor
in
xor
daa
adc
xor
and
adc
sbb
pop
adc
mov
push
es
div
cmp
pusha
pop
xor
rcr
aas
out
das
add
dec
sbb
imul
xchg
jbe
ja
ficomp
pop
pushf
in
stos
daa
add
sbb
xor
call
xor
aaa
fsubr
and
iret
aas
sub
xchg
nop
xor
pop
push
dec
and
adc
lahf
pop
sub
sbb
cmp
cmp
push
test
test
sub
inc
mov
jg
inc
not
repnz
fild
or
xchg
inc
xchg
sub
enter
dec
adc
das
dec
adc
and
cmp
addr16
adc
adc
dec
aas
pop
xchg
mov
test
add
lods
es
repnz
bound
push
and
int3
fild
pop
and
test
push
aaa
pop
cmp
outs
or
pop
adc
pop
adc
cs
or
pop
dec
dec
jb
adc
pusha
adc
(bad)
push
and
jle
push
add
jb
out
add
daa
add
jns
fwait
pop
add
add
arpl
xchg
adc
xlat
jmp
adc
addr16
jne
sub
ja
push
xchg
xchg
xor
imul
(bad)
add
xchg
(bad)
(bad)
inc
fild
ds
jb
add
jno
and
xchg
stc
jae
test
test
aas
ja
test
inc
add
cwde
push
jb
aas
jg
dec
mov
jmp
inc
pusha
sbb
je
(bad)
pop
dec
inc
inc
mov
xchg
out
cwde
fadd
(bad)
mov
loopne
sbb
lea
or
pop
(bad)
aas
xchg
das
jb
cmp
(bad)
xchg
xchg
sub
test
(bad)
jg
sahf
push
leave
fwait
(bad)
popf
fcom
jb
xlat
lahf
mov
xchg
cmps
test
inc
lods
jbe
mov
sub
lahf
and
mov
pop
pop
xchg
jl
mov
les
inc
dec
cwde
in
aaa
mov
dec
dec
(bad)
mov
pop
pop
add
mov
dec
and
aaa
rcl
xchg
sub
add
xor
xchg
sbb
sbb
lds
(bad)
cs
adc
outs
leave
inc
cmp
lds
retf
push
adc
sbb
leave
and
call
adc
inc
dec
leave
outs
(bad)
rcl
sbb
rcl
sub
xlat
pop
pop
xchg
mov
xchg
pusha
and
xchg
add
fisubr
inc
sub
fbstp
cdq
mov
out
adc
pop
xchg
sbb
adc
outs
inc
xlat
cmps
fcom
ss
ds
push
mov
fild
pop
out
out
xchg
cld
mov
push
cmp
inc
jp
adc
adc
add
imul
icebp
adc
push
repnz
dec
repz
lods
cmc
pop
in
push
scas
iret
not
mov
adc
mov
adc
push
mov
dec
sbb
mov
jecxz
and
(bad)
adc
jno
in
call
sbb
lahf
cld
inc
adc
cmps
fdivrp
inc
movs
and
push
adc
jns
mov
xor
add
aaa
adc
aad
inc
cmp
cs
push
lahf
adc
ficomp
dec
push
pushf
nop
inc
es
sbb
adc
inc
into
or
or
leave
and
mov
adc
add
pop
leave
lds
leave
or
xchg
push
imul
iret
imul
adc
pop
adc
dec
pop
add
pop
aas
adc
fs
push
adc
outs
push
jne
or
push
ss
pop
sbb
jbe
xor
daa
sbb
outs
add
sbb
aas
jae
xchg
adc
pop
mov
leave
add
cmp
and
pop
js
adc
and
and
sub
and
add
jae
add
push
je
adc
xchg
xchg
push
sub
sbb
repz
push
sub
jb
mov
sub
out
das
xor
movs
loope
xor
add
repnz
leave
add
inc
sbb
sub
push
js
pop
xor
in
daa
xor
xor
cmp
inc
fwait
out
aaa
adc
cdq
nop
fnsetpm(287
cmp
cmp
push
nop
or
add
add
inc
push
mov
jp
sahf
adc
in
fs
dec
and
mov
cmp
push
pop
leave
pop
lahf
cmp
sbb
out
add
(bad)
test
jb
or
inc
xlat
inc
test
and
inc
lahf
adc
adc
push
fistp
xlat
dec
push
dec
mov
neg
xchg
xor
mov
cmp
enter
inc
dec
inc
mov
or
mov
push
(bad)
dec
sub
pusha
rcr
das
(bad)
push
cmp
pop
xchg
jl
push
ja
add
push
jbe
ins
xor
push
push
jge
cmp
scas
or
push
scas
pop
add
pop
mov
sbb
push
adc
pop
pusha
scas
or
jbe
mov
mov
nop
jle
scas
bound
push
mov
scas
sub
es
push
or
ins
outs
adc
outs
aas
shl
xor
sbb
mov
xor
je
das
and
outs
leave
jbe
das
js
pusha
add
sub
pop
pop
jb
push
jl
add
or
sbb
or
sbb
push
and
and
sbb
xchg
mov
in
xchg
adc
add
add
and
xchg
cwde
ins
enter
call
pushf
inc
sahf
enter
mov
or
adc
adc
xchg
adc
fs
lods
out
jmp
adc
xor
lods
xchg
jle
mov
pop
dec
ins
dec
pop
outs
mov
out
test
scas
or
ds
dec
sahf
adc
movs
adc
pusha
adc
test
mov
xchg
or
cmp
add
pmulhuw
out
mov
jl
add
enter
mov
inc
cdq
popa
add
mov
(bad)
mov
enter
idiv
or
les
add
jb
iret
xchg
mov
push
adc
dec
enter
dec
adc
fwait
nop
sbb
lea
mov
adc
jns
in
dec
and
and
or
adc
ss
ja
add
ins
xchg
out
xchg
daa
sbb
adc
fadd
xchg
daa
xchg
ja
stos
(bad)
enter
(bad)
lods
leave
mov
pop
leave
pop
sub
leave
mov
retf
add
retf
mov
(bad)
call
adc
sub
ja
pop
shl
leave
add
xchg
push
int
cmp
add
pushf
sub
fistp
mov
enter
daa
adc
adc
sbb
xor
and
and
enter
dec
adc
inc
inc
daa
(bad)
adc
sbb
add
xchg
fst
adc
repnz
inc
xlat
(bad)
fmul
ror
jb
fiadd
add
jmp
pop
ds
test
inc
xchg
test
shl
adc
loop
jb
dec
out
in
out
ins
xchg
test
jmp
mov
jmp
push
in
sub
stos
xor
out
cmps
icebp
adc
and
dec
icebp
repnz
int
imul
stos
inc
push
jbe
hlt
fcomip
dec
sahf
test
imul
add
hlt
lods
cmps
es
imul
mov
push
adc
push
das
inc
sbb
sub
mov
mov
mov
mov
dec
mov
clc
adc
out
xor
pop
adc
mov
adc
push
jb
paddd
dec
mov
adc
jp
mov
rol
mov
push
ror
or
adc
dec
loopne
scas
or
push
xor
das
not
sbb
stos
movs
call
nop
pop
sub
adc
adc
das
add
int
add
and
sub
sbb
and
enter
daa
enter
sub
inc
xchg
xchg
or
jb
sub
fs
cmps
xor
cmps
bound
out
scas
xor
fs
xor
pop
xor
cmp
cmp
sbb
cmps
inc
cmp
nop
add
inc
scas
xor
add
inc
inc
inc
cdq
or
inc
add
sbb
add
imul
xor
add
sub
sbb
adc
or
cmps
inc
xchg
xchg
jg
pop
pop
(bad)
mov
inc
pop
pop
dec
xchg
dec
mov
adc
in
mov
fs
fbld
cmp
in
add
(bad)
jp
push
mov
daa
mov
sbb
lahf
mov
jbe
ja
gs
or
push
rol
fadd
xor
push
ins
sub
nop
add
iret
inc
call
popf
(bad)
sub
jno
(bad)
xchg
xchg
addr16
push
xor
movs
mov
jno
mov
push
stc
fiadd
pop
enter
jne
adc
mov
ja
jb
mov
es
jns
dec
xchg
adc
jecxz
ds
mov
retf
mov
pop
pop
or
nop
jl
das
jle
mov
rcr
cwde
out
jb
int3
and
repz
add
mov
loopne
pop
jl
test
pop
fsub
xchg
xchg
add
sbb
sbb
add
lds
(bad)
aaa
jns
sub
sub
jbe
push
push
dec
mov
xor
seto
call
repnz
xchg
out
pop
xchg
adc
xchg
adc
in
cmps
dec
sub
sbb
dec
scas
sub
xchg
and
rol
rol
into
je
xchg
mov
rol
add
out
adc
iret
or
mov
pushf
sbb
sahf
lahf
aad
shld
(bad)
mov
leave
xchg
mov
dec
xlat
mov
inc
fisub
jo
(bad)
cmps
push
xchg
inc
mov
stos
sub
ss
xor
lods
lods
adc
push
xchg
or
xor
ja
leave
fcomp
push
stos
les
outs
ja
pop
pop
ja
test
mov
scas
adc
mov
and
jo
adc
mov
fild
in
mov
scas
adc
scas
adc
jb
sub
push
enter
adc
sbb
or
adc
das
mov
popa
cmps
sbb
sub
jb
inc
(bad)
test
iret
les
fcom
jne
pop
ffree
mov
test
fist
push
(bad)
aaa
add
mov
or
or
nop
or
retf
xor
or
ss
test
add
pop
xchg
adc
nop
stos
ror
outs
jg
dec
jb
xchg
rol
or
inc
out
aad
mov
loop
aas
sbb
nop
in
lds
rcl
iret
fld
xchg
loope
jecxz
mov
leave
in
xchg
dec
scas
and
scas
in
in
or
jae
pop
in
in
out
cmp
add
jb
xchg
and
call
jg
jmp
sbb
mov
sbb
cmp
lock
repnz
adc
sub
hlt
sub
and
or
repnz
cli
push
aad
(bad)
jno
movhps
(bad)
xchg
cmp
shl
add
enter
call
jmp
enter
adc
mov
push
(bad)
aaa
add
adc
add
nop
pop
(bad)
push
stos
or
sbb
enter
or
or
in
add
sub
enter
sub
sub
push
push
pusha
xchg
cmp
cmps
adc
add
imul
pop
ror
or
push
dec
sbb
add
and
adc
pop
leave
adc
adc
out
out
or
out
adc
add
pop
push
out
and
push
dec
inc
mov
sub
das
fs
adc
and
es
ins
or
rol
pop
das
sub
sub
add
pop
xor
add
xor
pop
xor
xor
add
xor
test
cmp
scas
pop
push
call
sahf
mov
sub
icebp
fistp
inc
repnz
sbb
repz
or
inc
inc
fucomip
sub
inc
inc
and
xchg
inc
push
scas
in
xchg
hlt
jo
mov
test
dec
idiv
in
scas
in
cli
sti
les
cld
std
repz
inc
out
xchg
add
ret
cmps
dec
pop
or
shl
dec
dec
fimul
sbb
dec
dec
add
add
add
pop
leave
sub
push
add
add
nop
push
repnz
add
add
cmp
pop
daa
nop
inc
push
mov
nop
fs
push
sbb
xchg
or
sbb
inc
push
or
or
movs
push
test
fs
add
lods
adc
sbb
add
fs
adc
adc
rcl
push
enter
cmps
or
push
push
pop
push
mov
pop
xchg
or
jno
push
repnz
sbb
add
mov
int3
ja
daa
sbb
or
sbb
sahf
sub
sbb
add
dec
cmps
push
push
loopne
xor
push
xchg
push
push
nop
out
add
push
push
jp
xchg
int
push
push
pop
push
sub
inc
repnz
push
push
pushf
nop
retf
adc
sub
movs
adc
inc
pop
add
pop
add
sub
js
or
xchg
add
pop
fadd
pop
popa
pop
es
sbb
and
and
push
fs
and
or
push
xlat
and
xlat
and
sub
and
loope
sbb
xchg
dec
cmps
outs
imul
or
sub
sub
nop
imul
sub
add
add
iret
xchg
fwait
sub
add
outs
push
sub
and
out
jo
push
adc
shl
add
cdq
ss
sub
leave
and
push
sub
sub
out
ja
jns
add
jns
add
xchg
sub
pop
sbb
xchg
nop
das
daa
xor
cmp
push
xor
push
and
sub
push
movups
sbb
push
add
push
adc
fdiv
(bad)
fbstp
push
ss
aaa
dec
cmp
pop
jg
and
add
cmp
xchg
aaa
cmp
iret
sbb
shld
push
cmp
xchg
xor
cmps
xchg
cs
jae
loopne
pop
aas
ds
push
jb
inc
pop
adc
fs
out
mov
pop
sub
leave
and
inc
(bad)
mov
pop
(bad)
push
(bad)
inc
fidivr
nop
ret
add
add
sbb
xchg
inc
fs
push
imul
xchg
dec
mov
dec
push
add
sbb
dec
rol
nop
and
scas
or
int
and
or
push
push
push
push
daa
in
pusha
inc
push
push
push
push
enter
push
push
push
push
adc
dec
push
push
pop
push
pop
leave
sbb
aaa
or
popf
popf
cmp
xchg
push
pop
xchg
inc
call
sbb
mov
sbb
inc
es
inc
cmps
pop
add
push
dec
mov
test
xchg
and
xor
adc
push
arpl
xor
scas
inc
mov
outs
mov
add
daa
sbb
add
gs
add
pop
inc
mov
push
imul
inc
jmp
imul
ins
or
enter
push
outs
adc
and
xor
or
push
or
and
jb
jae
sahf
and
inc
push
sbb
sbb
fs
mov
mov
jg
xchg
xchg
cmp
mov
or
and
nop
cmp
mov
xchg
pop
jb
daa
mov
leave
and
jno
pop
jp
(bad)
dec
scas
in
add
bound
scas
enter
cmp
leave
or
or
les
int
sub
sub
add
and
or
dec
cmps
in
add
test
(bad)
enter
(bad)
daa
mov
sbb
ror
(bad)
mov
das
sub
jb
xor
mov
xchg
pop
retf
int3
mov
inc
outs
pop
(bad)
mov
into
pop
rcl
and
rcr
add
lea
xchg
aaa
loopne
outs
add
je
aas
nop
aas
add
nop
add
add
xor
and
push
cwde
push
scas
add
ja
push
mov
nop
add
fs
sub
nop
inc
push
fs
xor
xor
sbb
fs
xor
cmp
cmp
ins
inc
xchg
inc
movs
daa
inc
pushf
(bad)
and
movs
inc
test
dec
cmps
enter
dec
test
xor
or
stos
scas
rol
sbb
jl
push
lods
pusha
pop
repnz
add
mov
shl
and
add
lods
nop
mov
jns
add
add
scas
fst
mov
fwait
jo
dec
mov
xor
nop
xchg
in
ficom
cs
(bad)
cmp
pusha
ret
mov
add
repnz
mov
mul
nop
mov
loope
dec
cs
push
fild
pusha
inc
es
adc
mov
leave
push
aaa
out
add
jbe
pop
mov
in
cmps
jmp
in
or
in
mov
lock
push
pop
fistp
push
nop
mov
add
mov
nop
mov
jbe
inc
pop
daa
shl
mov
add
sub
out
push
movs
adc
out
repnz
ds
(bad)
repz
and
add
ret
xchg
pop
leave
push
jg
(bad)
pop
leave
mov
enter
and
and
mov
retf
push
and
sbb
push
xor
push
or
iret
push
fs
add
add
popa
xor
stc
pop
sub
cli
push
int
sub
xchg
sbb
push
iret
pop
and
ja
push
and
cld
push
in
push
fs
dec
add
adc
push
mov
add
aam
(bad)
mov
pop
add
xchg
mov
pop
add
add
movs
cmp
pop
inc
sbb
inc
enter
fnstenv
fiadd
fcom
iret
push
pop
xchg
add
or
imul
push
neg
jp
add
fnstsw
shl
shl
in
or
or
pop
sub
pop
or
movs
cmp
or
inc
push
popa
sbb
test
(bad)
test
adc
pop
pop
arpl
in
adc
add
je
nop
adc
aas
adc
cdq
ss
push
pop
sub
and
(bad)
pop
pop
call
or
ja
test
xor
call
pop
shr
addr16
push
aas
cdq
inc
es
sbb
out
pop
cdq
nop
or
lock
es
icebp
es
or
or
sub
add
or
fs
es
mul
nop
xor
xor
cdq
inc
es
xor
cli
aaa
sti
add
cdq
inc
es
cmp
(bad)
aas
pushf
nop
or
add
cmps
add
inc
pop
dec
inc
pop
xchg
and
and
pop
lds
stos
sub
xchg
or
inc
dec
das
dec
nop
mov
dec
pop
cmp
add
add
dec
dec
leave
sub
sbb
pop
jb
dec
ja
push
push
mov
push
pop
pop
and
mov
sub
or
or
or
xchg
push
jb
or
or
pushf
push
pop
ud0
and
rol
dec
xor
add
sbb
jns
add
adc
xchg
pushf
push
or
adc
cmp
adc
adc
sub
pop
pop
pop
pushf
xchg
push
jb
pop
sbb
sbb
ret
cmps
in
sbb
sbb
sub
and
pop
push
daa
fs
add
xor
xor
add
cmp
pop
inc
push
dec
and
push
pop
jmp
mov
inc
fisub
push
inc
fimul
and
pushf
nop
adc
pop
and
daa
in
daa
pop
sub
shr
xchg
pop
pop
add
fimul
xor
pop
fist
pusha
imul
add
jecxz
mov
cmps
out
adc
inc
sub
scas
mov
addr16
enter
jg
xor
push
cmp
pop
pop
xor
mov
xor
xor
xor
nop
add
adc
push
ss
nop
add
ss
daa
adc
fs
cmp
sbb
cmp
daa
cmp
nop
add
sbb
xor
add
jmp
addr16
pusha
add
pop
cmp
shr
outs
pop
cmp
and
pop
aas
push
sbb
pop
inc
or
add
inc
cmps
jno
leave
and
add
push
inc
xor
jmp
jg
cmp
xor
inc
pushf
mov
(bad)
and
xchg
dec
mov
adc
xor
xor
pop
jp
repnz
jp
add
and
inc
add
pop
dec
dec
scas
and
mov
dec
pop
sub
xor
push
pop
jb
dec
leave
push
pop
push
pop
push
pop
or
pop
push
daa
and
mov
and
in
jg
push
pop
add
inc
xor
out
add
enter
pop
xor
cmps
pusha
leave
add
cmp
fs
test
mov
iret
pusha
push
mov
push
fbld
imul
pop
jb
mov
in
pop
push
xor
jno
(bad)
arpl
sbb
mov
mov
jg
nop
gs
data16
sbb
add
add
mov
enter
imul
add
sbb
sbb
imul
xchg
dec
push
fs
xchg
xchg
inc
outs
cmps
in
add
cdq
mov
ins
mov
xchg
add
nop
cwde
cwde
cdq
lds
daa
and
pop
jb
popf
sahf
adc
dec
jp
pop
(bad)
(bad)
aad
inc
jo
cmps
xchg
fs
sbb
aaa
mov
mov
fs
jno
jo
pusha
sbb
iret
cmps
adc
inc
push
cmps
test
in
ret
ds
sbb
jecxz
scas
imul
inc
jo
pop
lods
leave
xchg
pop
repnz
lods
jne
add
sbb
add
scas
mov
in
dec
mov
js
mov
pop
pusha
jns
add
pop
push
test
adc
fwait
nop
jp
daa
jnp
xor
and
jl
jge
dec
enter
jg
enter
and
lods
adc
(bad)
mov
xchg
add
mov
and
adc
inc
pop
and
pop
or
sbb
in
mov
(bad)
dec
cmps
inc
out
mov
in
mov
shl
fisttp
enter
test
and
dec
leave
sub
pop
mov
(bad)
out
scas
push
addr16
sbb
xchg
xchg
xchg
pop
ja
push
(bad)
jmp
sbb
ret
add
aas
ret
add
lds
enter
shr
xchg
out
movs
push
test
xchg
daa
push
sub
and
jne
dec
push
xchg
xchg
(bad)
fdiv
test
cwde
aas
pop
retf
fiadd
call
daa
cdq
jae
mov
call
enter
pushf
inc
inc
push
mov
rcr
nop
inc
inc
sahf
pop
lahf
ja
inc
push
cwde
mov
jb
iret
jbe
leave
mov
jno
pop
dec
rol
rcl
movlps
aam
lahf
adc
xchg
fcomp
xlat
fst
fcmovnu
jmp
add
fs
fnsave
xchg
rol
fiadd
add
add
push
loop
and
movs
enter
in
xchg
jmp
add
pop
jmp
jmp
pop
daa
hlt
jmp
jb
pop
mov
jns
fwait
je
dec
adc
stos
add
bound
in
xchg
out
lock
sub
pop
ins
aas
icebp
pop
stos
pop
and
sub
push
jb
sub
push
jb
push
sub
sub
jb
sub
sub
pop
adc
mov
mov
div
mov
sub
clc
(bad)
lods
push
add
stc
pop
nop
daa
daa
call
inc
dec
inc
cmp
add
push
xchg
dec
cld
sbb
das
cdq
adc
push
inc
sbb
in
add
add
lahf
sub
sub
push
add
sbb
in
sbb
add
scas
and
mov
push
fs
push
sbb
mov
sbb
mov
add
add
mov
inc
cs
dec
mov
mov
mov
inc
mov
jb
sbb
sbb
sbb
and
nop/reserved
in
adc
mov
adc
mov
pop
xchg
xor
dec
mov
or
add
or
pop
sbb
and
sbb
int
adc
sbb
jno
mov
push
cmps
add
and
adc
and
pop
push
dec
xor
pop
es
push
and
jno
xor
and
add
shl
iret
sub
sub
xor
pop
sub
mov
sbb
shl
cmp
pop
ret
add
ret
pop
les
sub
cs
and
sbb
sbb
retf
lds
pop
out
fwait
sub
js
xor
push
xor
enter
rol
mov
jg
push
add
ss
and
xchg
sbb
retf
sar
adc
int3
xchg
cmp
sub
cmp
add
lds
add
and
xor
inc
in
mov
into
(bad)
ins
fisttp
add
iret
inc
mov
dec
dec
mov
rcr
push
adc
and
daa
rol
inc
add
nop
and
cdq
xchg
dec
ror
aad
repnz
sub
ror
xor
add
dec
pop
add
inc
add
aad
(bad)
fcomip
mov
push
inc
add
imul
fld
and
push
jg
shl
pop
sub
xor
sbb
and
adc
jns
pop
adc
jo
xlat
loope
add
xor
loop
push
enter
addps
int
or
jecxz
and
in
in
sbb
pop
add
dec
cs
sub
or
pop
out
(bad)
dec
scas
in
jmp
scas
jmp
pusha
sbb
bound
or
cmps
data16
aas
push
nop
add
in
out
out
sbb
push
test
imul
add
and
inc
call
adc
sub
repz
scas
outs
cmps
outs
pop
jo
jns
add
add
sub
retf
shl
adc
clc
adc
cmp
imul
pop
fwait
xchg
push
xchg
daa
cld
pop
std
lahf
push
mov
jb
pop
leave
imul
sbb
ja
sbb
inc
and
in
int
jno
or
add
nop
cmp
jns
jle
add
push
repnz
data16
or
xchg
pushf
mov
or
in
or
fiadd
sub
test
push
or
jmp
or
add
or
or
cmps
push
sbb
mov
or
push
push
or
or
cmps
in
xlat
adc
adc
inc
push
fs
mov
adc
mov
add
and
add
adc
or
push
and
enter
add
or
sub
push
jmp
or
sbb
jno
dec
leave
sbb
or
or
or
sub
and
ja
sbb
nop
mov
scas
pusha
fs
push
sbb
add
push
xchg
add
sbb
loop
push
nop
add
sub
inc
sub
inc
push
nop
add
das
add
xor
sbb
nop
xor
xor
add
add
inc
push
aaa
cmp
nop
add
cmp
dec
daa
cmp
sbb
sbb
je
js
pop
jb
das
nop
xchg
xchg
xor
dec
inc
sub
nop
out
dec
dec
sbb
xchg
daa
loop
shl
mov
jge
xchg
das
add
and
cdq
cdq
enter
call
dec
enter
fwait
inc
dec
dec
xor
das
popf
push
xchg
add
nop
inc
call
cs
sahf
xlat
xchg
imul
mov
mov
push
sahf
add
pop
inc
sub
xchg
dec
dec
add
jecxz
sahf
add
dec
movs
add
nop
sub
cmps
sub
push
and
test
dec
xchg
push
and
jb
add
push
in
inc
jg
mov
push
fs
mov
jg
push
test
push
nop
or
rcl
call
add
loope
scas
push
pop
enter
mov
mov
enter
push
mov
add
daa
push
sbb
addr16
and
enter
mov
mov
dec
fiadd
rcr
or
and
ret
add
cmp
pop
ret
lds
sbb
movs
cdq
xchg
enter
jp
push
xor
leave
sbb
sub
retf
xor
add
ins
dec
cmps
or
jb
ficom
adc
pop
pop
pop
xchg
push
cmp
pusha
xor
cs
in
mov
cdq
or
mov
and
jmp
or
or
fs
add
xchg
out
(bad)
or
jo
or
stos
fild
aaa
(bad)
and
xor
fcomp
test
xor
push
xor
ins
fidiv
or
(bad)
adc
fst
push
repnz
fist
add
outs
mov
sbb
enter
ja
scas
in
sbb
aam
scas
in
je
enter
daa
cmp
xor
cmp
add
jbe
lahf
js
inc
enter
jns
addr16
xor
or
jb
or
jge
pushf
pop
jb
jle
loop
jb
and
es
xchg
jg
(bad)
sbb
add
out
sub
and
or
dec
leave
xchg
xchg
mov
loop
xchg
push
mov
mov
dec
enter
mov
mov
enter
lea
inc
aam
add
loop
(bad)
daa
nop
nop
inc
push
xor
sbb
push
lods
aas
scas
out
xchg
or
sub
xor
and
or
cdq
sub
mov
nop
add
xor
ss
jb
xor
out
dec
push
xchg
pop
out
out
pop
xchg
and
fmul
loop
cmp
dec
xchg
ja
jecxz
scas
in
cwde
cdq
push
fs
xchg
icebp
repz
push
fs
repz
add
dec
inc
in
dec
dec
cmp
inc
push
nop
inc
inc
dec
xchg
pop
jb
outs
idiv
clc
mov
leave
and
stc
nop
imul
pushf
add
xor
cs
(bad)
std
and
(bad)
push
xor
sahf
fs
mov
sbb
leave
dec
add
add
and
dec
xchg
lahf
adc
mov
mov
(bad)
mov
xchg
xchg
mov
pop
sbb
sbb
dec
cmps
push
test
inc
jo
pop
or
or
or
inc
aaa
push
push
adc
dec
leave
pop
adc
or
stos
xchg
leave
adc
pop
add
or
out
lods
or
mov
scas
cmp
mov
add
add
mov
mov
adc
pop
mov
pusha
rol
movs
fidiv
or
sbb
sbb
sub
sbb
cmp
mov
mov
dec
dec
leave
sub
mov
pusha
sbb
fs
pop
test
and
mov
fistp
add
xchg
daa
sbb
and
add
adc
es
ss
xor
mov
dec
sub
pop
das
sub
push
add
clc
or
sbb
inc
shl
enter
test
or
dec
enter
daa
(bad)
xor
or
add
pop
leave
xor
mov
daa
daa
retf
sbb
or
sbb
sbb
sbb
in
cmps
mov
popa
das
sbb
mov
xor
fs
xor
add
fs
inc
out
sbb
cmps
cmp
cmp
in
adc
pushf
jb
ror
inc
int3
es
sar
es
cmp
jl
adc
push
fbld
in
mov
inc
add
nop
and
sbb
xor
inc
add
ret
test
inc
nop
mov
or
push
test
dec
daa
dec
sub
jb
dec
dec
aam
add
and
dec
xor
xchg
push
ja
aad
enter
dec
in
inc
leave
push
(bad)
push
nop
and
mov
sbb
(bad)
(bad)
add
push
pop
test
fs
pop
pop
sbb
mov
xchg
or
aas
pop
sbb
es
pusha
pop
bound
jns
add
add
pop
and
xlat
or
addr16
xchg
pop
leave
(bad)
(bad)
nop
inc
push
fs
add
inc
push
sbb
add
sbb
fild
sbb
inc
push
loopne
loope
pusha
cwde
mov
inc
push
fs
loop
pop
pusha
and
jb
fisub
or
or
xchg
push
in
out
test
xchg
lods
inc
inc
xchg
dec
mov
jmp
mov
icebp
adc
sbb
mov
(bad)
sbb
jb
outs
cmps
stos
add
jmp
inc
je
sub
push
lods
nop
repz
pop
leave
and
and
sub
repnz
dec
enter
xor
or
or
jb
cwde
add
jge
leave
xchg
add
dec
call
sbb
and
xor
in
daa
and
and
and
sahf
cmp
icebp
fsubr
sub
nop
inc
push
repz
sbb
xor
xor
fs
add
xor
push
sbb
add
fs
stc
cmp
mov
daa
sti
add
fs
cld
inc
cmps
push
fs
std
inc
(bad)
cmps
fs
xchg
sbb
sub
push
jb
pop
add
add
add
xchg
pushf
xchg
or
add
fs
jl
inc
push
sbb
or
nop
add
test
mov
or
or
in
or
or
test
add
jg
xchg
or
add
push
or
mov
inc
push
nop
inc
inc
inc
nop
add
dec
add
inc
push
dec
dec
push
nop
add
push
add
inc
push
pop
inc
push
nop
add
add
pop
pusha
inc
inc
push
nop
bound
nop
add
test
add
inc
lods
mov
push
nop
add
mov
nop
(bad)
enter
fs
aam
pop
add
add
xchg
pop
jb
pop
(bad)
(bad)
nop
or
push
jle
cmp
cmps
xchg
sbb
adc
xchg
in
xchg
adc
or
fs
adc
xchg
sbb
xchg
iret
cwde
xor
adc
nop
sub
call
inc
add
fwait
popf
sbb
lahf
xlat
dec
cs
adc
into
data16
xchg
cmp
enter
(bad)
sub
or
xchg
ins
push
bound
xor
pop
and
and
sbb
or
push
sbb
test
int3
push
sub
daa
xchg
or
iret
test
adc
sbb
lods
jg
xchg
pop
jb
scas
mov
ds
jns
or
push
jb
or
and
mov
inc
dec
cmps
fs
xchg
pushf
xchg
ja
pop
or
or
add
and
mov
xchg
cmp
cmp
ss
or
add
pop
movs
add
in
jbe
or
mov
and
stos
ret
daa
cmp
fsub
or
mov
daa
push
sub
and
or
dec
pop
sub
daa
pusha
cs
fs
pop
leave
and
or
xor
jo
mov
xor
adc
xor
ss
add
cmp
movs
cmp
loope
push
cmp
adc
cmp
cmp
cmp
sbb
aas
nop
inc
push
les
push
int3
inc
push
fs
xchg
push
fs
mov
inc
fsubr
add
inc
inc
sbb
nop
dec
push
push
nop
add
pop
add
inc
push
pusha
fs
nop
add
jo
add
inc
je
inc
push
nop
add
sbb
nop
cwde
mov
add
push
mov
les
dec
inc
adc
inc
ins
(bad)
rcr
(bad)
aam
and
ret
ret
inc
xchg
push
leave
les
mov
mov
push
call
inc
adc
xor
inc
dec
and
xor
adc
enter
cmps
adc
push
inc
push
fs
dec
and
fs
push
fs
and
dec
ins
jmp
sbb
int3
sbb
pop
adc
or
into
xchg
pop
jb
iret
rcl
rol
adc
sub
je
mov
sbb
dec
leave
retf
sbb
sbb
rcl
aad
in
cs
dec
adc
and
mov
xchg
push
xchg
adc
or
push
or
adc
add
fcmovu
pop
sub
sbb
retf
sbb
sbb
jb
and
loopne
test
inc
dec
leave
push
or
loope
mov
(bad)
sbb
add
in
out
or
and
mov
pop
ds
(bad)
out
sbb
(bad)
xchg
xor
jmp
xchg
jmp
or
in
push
inc
or
pop
scas
pop
and
call
cmp
in
xor
pop
sub
pusha
pushf
nop
out
sub
popa
sbb
cwde
fcom
repnz
mov
sub
and
xor
and
xor
add
lock
or
repz
cmc
mul
dec
xor
jns
daa
ins
or
pop
daa
push
leave
and
sbb
xchg
add
imul
stos
push
ins
or
repz
cmps
into
fcom
vzeroall
push
daa
imul
or
or
xor
sub
or
dec
adc
daa
outs
or
jo
jno
or
and
jb
add
enter
adc
enter
adc
jbe
ja
leave
sub
and
push
jb
dec
jp
jnp
jl
cmps
adc
and
push
pop
cmps
in
or
or
lahf
(bad)
dec
in
add
adc
add
sbb
add
add
(bad)
fs
dec
add
dec
leave
test
xchg
push
enter
sbb
cs
adc
inc
sbb
or
inc
or
cwde
dec
sub
or
add
xchg
pushf
nop
add
or
push
ret
jo
or
xchg
adc
adc
jl
or
adc
rol
xor
and
popa
es
inc
xchg
add
fs
sbb
or
sbb
sbb
push
mov
push
pop
push
fs
push
and
and
dec
xchg
mov
xchg
enter
xchg
push
and
pop
dec
leave
xchg
adc
and
and
daa
dec
leave
or
xchg
adc
repnz
pop
leave
and
sbb
add
add
and
and
push
repnz
das
cwde
add
sub
inc
sahf
sbb
repnz
call
xor
xor
or
dec
fwait
movs
push
fs
cmp
cmp
cmp
clc
sbb
and
sbb
fwait
sub
ds
in
add
enter
daa
fs
or
inc
outs
dec
leave
xchg
push
add
mov
sbb
movs
jp
and
sbb
mov
fs
add
or
inc
arpl
ins
inc
pop
sub
and
repnz
sbb
sbb
adc
push
sub
sub
jns
es
dec
sbb
jb
xchg
test
jmp
and
leave
adc
sahf
mov
dec
dec
leave
jmp
lods
or
jb
or
dec
cs
push
push
dec
xchg
and
add
inc
out
add
mov
sbb
scas
in
xchg
mov
mov
pushf
outs
or
pop
sbb
adc
pop
cmps
pop
push
repnz
pop
or
pop
mov
fld
or
mov
and
push
jb
dec
mov
aam
pushf
xchg
or
dec
test
enter
ret
lods
sbb
ret
scas
xchg
inc
fistp
ja
sbb
pop
in
jmp
arpl
gs
stos
dec
and
pop
(bad)
scas
add
ss
(bad)
daa
enter
dec
leave
push
push
push
push
xchg
ins
add
inc
ins
ins
rol
and
pop
sub
ss
jo
inc
shl
cmp
or
or
dec
leave
test
aaa
dec
cs
dec
mov
xchg
je
into
inc
dec
shr
lahf
and
jns
imul
mov
rcl
rcr
push
push
shr
shl
aam
enter
pop
jle
mov
add
jg
push
adc
je
(bad)
pop
xor
add
add
sub
xor
les
sbb
cdq
xchg
add
inc
xlat
fimul
mov
push
xor
or
enter
or
fstp
fbld
fs
xchg
xchg
add
cwde
fbstp
and
jp
call
popf
loopne
xchg
adc
loope
lahf
add
nop
add
xchg
mov
add
cmps
cmps
in
add
test
stos
stos
lods
nop
or
pop
add
mov
sbb
and
add
pop
jb
leave
jmp
les
pusha
add
sahf
cmp
pop
jmp
push
cmp
adc
mov
mov
inc
push
mov
and
pop
sbb
fs
dec
push
add
mov
push
rol
js
daa
inc
mov
ret
sbb
les
pop
add
enter
xchg
enter
mov
fistp
dec
scas
inc
pop
icebp
pop
repnz
int
movs
cdq
xchg
add
repz
adc
nop
sbb
cdq
xchg
shl
test
add
xlat
dec
push
xlat
fdiv
aam
add
or
mov
fcmovu
enter
(bad)
clc
enter
stc
lahf
fisttp
or
loop
add
xchg
cli
sti
fild
fs
push
in
out
cmps
fs
out
add
addr16
addr16
imul
jmp
xchg
and
dec
inc
pop
dec
add
add
xchg
push
add
add
or
cwde
call
enter
in
mov
add
dec
sbb
add
and
add
and
add
xchg
fild
and
inc
push
fs
cli
sti
jae
imul
pop
loope
jb
xor
(bad)
mov
sbb
or
add
mov
das
cmp
adc
add
add
xchg
mov
add
in
or
or
dec
push
fs
fisttp
or
add
or
fild
or
fs
or
pop
sub
femms
mov
cmps
sub
aas
or
shr
daa
comiss
or
adc
test
adc
inc
sbb
inc
adc
cmp
adc
add
sbb
mov
adc
push
add
nop
add
sbb
and
sbb
scas
adc
and
xchg
je
xchg
sbb
pop
or
push
push
test
sbb
xlat
add
or
sbb
sbb
fs
es
sbb
jl
cmps
sbb
sbb
adc
push
xchg
xchg
sbb
sub
sub
mov
and
add
inc
dec
sub
sub
push
das
das
xor
sbb
dec
cmps
xor
xor
push
dec
and
or
cmp
push
nop
fmul
cmp
sub
jp
cmp
xchg
mov
and
cmp
pop
dec
inc
pop
jle
pop
adc
push
add
or
pop
inc
inc
and
xchg
or
and
or
inc
enter
inc
sbb
scas
add
inc
or
inc
or
dec
xchg
dec
leave
or
enter
dec
and
add
add
nop
add
push
xor
out
jne
daa
es
sbb
jb
xchg
and
push
xor
add
push
pop
pop
pusha
xor
inc
and
cmps
aaa
sub
or
push
fs
pop
pop
xchg
add
nop
pop
pop
pusha
and
nop
add
sub
sub
and
and
and
(bad)
iret
or
rol
fs
sub
and
dec
sbb
and
add
cmps
or
fs
cmps
dec
push
es
imul
inc
push
ins
outs
das
or
in
and
inc
add
inc
add
jmp
or
dec
dec
jb
sbb
jb
leave
int
xor
xor
add
adc
xor
jne
mov
sub
sahf
fs
push
jns
adc
jp
repnz
aaa
add
dec
dec
add
cmp
add
jb
or
idiv
mov
cmp
sub
cmp
or
mov
daa
sub
stos
xor
ds
aas
lahf
nop
popa
add
xor
daa
dec
fs
push
sbb
inc
inc
xchg
add
push
inc
jo
ds
xchg
inc
or
or
push
mov
jl
jle
cmp
cmp
jg
inc
enter
add
leave
and
or
pop
push
enter
add
add
push
jmp
sub
and
or
dec
leave
dec
or
push
push
fs
xchg
jl
mov
fs
mov
in
push
mov
cmps
mov
nop
test
xor
mov
xor
cmp
sbb
push
nop
add
pusha
add
inc
fs
ins
jo
add
je
sbb
nop
jl
test
push
mov
mov
loop
cdq
and
pop
jb
xor
add
push
cs
pop
xor
add
sub
inc
push
nop
add
xor
arpl
sbb
cmp
enter
out
push
cmove
and
cs
xchg
xchg
xor
and
in
or
cmp
inc
adc
dec
cmps
xchg
pop
jb
xchg
cdq
cdq
call
and
lds
and
vunpcklps
xchg
pop
mov
xchg
xchg
pop
dec
add
pop
or
callw
pop
or
or
pop
sub
and
sbb
jno
addr16
scas
pop
or
enter
stos
(bad)
enter
lods
scas
(bad)
xchg
int
pop
pop
add
or
in
and
pop
nop
add
nop
mov
mov
call
enter
or
bound
push
add
in
mov
arpl
in
add
fs
push
cdq
mov
adc
adc
neg
xchg
cmp
adc
push
fs
dec
push
mov
inc
cmps
es
push
sbb
sub
nop
rol
and
dec
es
dec
push
nop
add
xchg
dec
ret
xlat
sbb
les
nop
mov
mov
cdq
sub
retf
pop
jns
mov
sub
leave
and
jno
and
jb
pop
inc
xor
xor
into
xchg
or
rcl
das
inc
inc
xor
jo
adc
rcr
sar
add
xlat
cmp
jno
rol
enter
sbb
xlat
sub
(bad)
fiadd
leave
and
jns
sub
cli
sbb
enter
(bad)
jecxz
dec
leave
and
or
leave
test
add
sbb
out
call
call
xchg
sbb
data16
ja
mov
or
jno
int
inc
add
or
push
pop
aaa
jmp
in
xchg
cmp
sub
add
mov
enter
inc
jge
add
push
outs
lock
xor
jle
nop
mov
jg
push
cmc
sbb
neg
add
shl
pop
clc
cmps
leave
xchg
or
cli
cli
or
sti
mov
dec
xor
dec
dec
push
repnz
out
lods
and
or
push
rcl
ret
leave
int
adc
push
fs
push
lds
add
sbb
sub
enter
test
mov
add
mov
leave
dec
pop
rol
sbb
add
add
adc
and
sbb
cmp
in
bound
sbb
mov
and
xchg
fild
or
and
or
lea
in
and
adc
(bad)
or
in
shl
shl
xchg
les
xchg
pop
xchg
mov
push
xchg
push
fs
push
adc
adc
adc
rcl
sub
adc
xchg
or
sub
aad
add
xor
add
sbb
or
xor
mov
call
or
sbb
sbb
push
push
fwait
pushf
shr
inc
popf
push
jg
scas
xchg
dec
or
sahf
ins
inc
push
or
and
repnz
popa
xor
pop
and
mov
mov
xchg
das
or
pop
leave
mov
or
and
add
push
(bad)
xchg
xchg
xor
add
sub
movs
fbld
loope
xchg
xchg
das
das
xor
sub
xchg
es
xor
push
dec
jb
das
outs
cmps
test
xor
cmps
ins
and
pusha
addr16
ss
and
popa
xor
push
and
out
lds
and
adc
sbb
stos
stos
out
inc
fiadd
mov
lods
pop
cs
sbb
pop
leave
xchg
xor
scas
mov
xor
and
das
pop
mov
and
ret
cmp
cmp
mov
or
inc
ins
ins
or
or
cwde
cmp
xchg
cmps
sbb
popa
sahf
mov
or
add
add
enter
or
or
adc
add
add
sbb
and
or
inc
inc
dec
leave
or
test
or
pop
loopne
les
dec
sbb
js
and
jp
sub
bound
dec
sbb
pop
sub
push
sbb
push
test
mov
mov
int
ins
daa
mov
or
das
mov
leave
mov
jns
xor
sbb
or
and
inc
or
pop
mov
sub
pop
pop
fs
push
fs
pop
mov
scas
mov
mov
shl
pop
out
dec
leave
xchg
or
pop
add
adc
xchg
push
xor
or
xchg
ret
call
pop
sbb
and
dec
add
xor
inc
inc
sahf
pop
cmps
gs
push
test
add
(bad)
or
call
les
pop
push
and
xor
outs
mov
(bad)
pop
leave
pop
repnz
(bad)
neg
cmps
and
add
xor
dec
int3
or
and
add
je
test
sbb
daa
inc
enter
add
(bad)
retf
dec
xor
aaa
ror
sbb
xor
das
shr
and
sbb
pop
add
add
ja
not
iret
jnp
sub
xchg
ja
aaa
jl
ror
ja
out
aam
push
add
(bad)
xchg
mov
inc
add
push
xlat
pop
jle
sbb
sbb
ss
xchg
xor
jbe
pop
xchg
fsubr
sbb
test
xchg
fild
add
aaa
mov
sahf
add
xchg
or
sub
push
rol
fisttp
adc
dec
loopne
loope
loop
test
or
cmp
daa
in
out
jb
dec
enter
or
or
call
push
int3
add
mov
nop
mov
inc
cs
lea
(bad)
nop
add
in
sbb
jne
pop
nop
out
lock
or
repz
mov
xchg
or
xchg
xor
iret
hlt
mov
cmc
outs
dec
enter
test
movs
inc
push
pop
imul
sub
cs
cdq
call
add
push
nop
add
nop
adc
sahf
stos
lahf
sbb
adc
cmp
sti
mov
or
aaa
cld
xchg
pop
leave
xchg
std
(bad)
arpl
leave
inc
or
pop
mov
in
add
add
dec
aad
adc
push
push
(bad)
sbb
sub
cmp
test
xchg
ds
mov
movs
daa
daa
add
xor
das
add
pusha
add
test
das
scas
mov
(bad)
mov
mov
nop
push
or
daa
pop
or
or
xchg
or
shr
adc
xor
mul
add
cmps
mov
xor
or
or
sbb
or
or
cmps
mov
sbb
push
and
mov
add
test
adc
pop
mov
and
add
ja
push
or
mov
push
ud2
xchg
leave
inc
dec
xor
pop
mov
shr
sbb
imul
xor
adc
mov
or
mov
es
enter
jns
mov
leave
sbb
bnd
adc
sub
adc
or
or
mov
int
into
sbb
fisub
pop
or
push
pop
sbb
and
or
dec
inc
es
sbb
je
(bad)
sbb
cdq
sbb
pusha
pop
adc
fistp
nop
add
aad
xlat
movs
cdq
xchg
add
push
adc
and
and
push
add
(bad)
sbb
and
mov
pop
jb
and
and
and
dec
pop
jp
and
in
popa
dec
(bad)
loope
in
cs
loope
daa
in
cmp
test
xor
sub
sbb
enter
addr16
scas
or
(bad)
in
out
sub
test
sub
mov
xor
sub
pop
pop
xor
and
cmps
daa
xor
push
arpl
inc
xchg
lahf
sub
push
fs
xchg
jmp
inc
jmp
dec
xchg
fs
ins
xchg
sub
cmps
out
pop
lock
and
or
daa
push
cmp
pop
cmp
or
push
test
test
cmp
cmp
push
repz
cmc
sbb
mov
xchg
cmc
idiv
cmp
mov
leave
sbb
adc
pop
leave
or
clc
xlat
add
and
cli
cli
sti
test
xor
add
xlat
dec
rol
inc
push
inc
or
movs
push
and
or
inc
test
(bad)
sbb
leave
sub
sbb
add
pop
fnstsw
xchg
(bad)
dec
mov
pop
sbb
and
iret
sbb
ror
ror
xchg
jl
lahf
sbb
dec
pop
fs
sahf
adc
sbb
sub
xor
push
pop
add
pop
pop
or
add
xchg
push
ins
enter
ins
ins
imul
pop
repnz
add
popf
sbb
mov
push
fild
(bad)
ins
dec
push
adc
inc
jb
pop
not
sbb
sub
pusha
fist
adc
pop
das
push
and
adc
ja
loopne
sbb
push
sbb
sub
in
lahf
sbb
popa
das
mov
pop
sahf
adc
scas
pop
lahf
pop
pop
pop
add
jae
pop
pop
pop
sbb
add
sbb
hlt
dec
push
push
sbb
mov
or
xchg
dec
popf
scas
ret
and
pop
bound
jb
or
cmp
and
and
stos
nop
outs
dec
mov
or
cmps
in
das
imul
adc
and
and
das
daa
pop
cmp
xor
sub
cmp
sbb
add
ins
outs
xlat
or
les
pop
(bad)
shl
pop
leave
or
and
add
fs
outs
or
inc
push
ins
ins
dec
sbb
sub
xor
dec
jno
jb
sbb
ja
iret
ss
aaa
jae
les
outs
je
popa
add
sets
add
push
cmp
inc
cmp
xchg
or
cmp
ja
aas
in
rol
add
inc
retf
xchg
pop
jb
inc
js
xchg
push
jb
jns
add
(bad)
or
add
push
jp
popf
nop
inc
cmps
dec
jnp
inc
sbb
test
dec
add
push
xor
int
xor
dec
and
leave
add
push
pop
js
xor
sub
sbb
pop
jge
add
add
jns
pushf
jle
idiv
sbb
nop
add
sub
xor
xor
test
or
xchg
or
xchg
xor
and
mov
fmul
mov
and
cdq
xchg
pop
mov
add
xor
xchg
xchg
ja
in
add
add
and
mov
cwde
pop
sub
sub
pop
sbb
loope
out
push
xor
nop
nop
xchg
out
enter
push
popa
popa
and
xchg
dec
add
or
jns
enter
xchg
fs
push
fs
dec
push
addr16
ins
nop
sub
imul
pop
sub
leave
nop
mov
adc
push
cdq
outs
fistp
jo
jno
adc
in
add
(bad)
fwait
sbb
popf
iret
mov
lahf
jae
push
and
cmps
fs
ins
or
inc
ins
js
xor
jp
sub
inc
bnd
mov
dec
mov
dec
jge
jg
dec
leave
add
ins
add
inc
sbb
jne
daa
movs
ja
imul
mov
inc
jne
ja
mov
or
mov
jg
enter
mov
or
stos
cmps
add
xchg
lods
pop
and
imul
add
xchg
setae
xchg
xor
inc
xor
enter
pop
sub
or
sbb
mov
mov
add
add
and
mov
pop
(bad)
rcl
iret
mov
xchg
mov
lahf
sbb
push
xchg
fwait
outs
popf
fs
push
fs
sahf
mov
ins
mov
outs
mov
sbb
shl
stc
pop
cmps
sbb
cmps
(bad)
push
aas
daa
fild
stos
stos
stos
inc
leave
enter
mov
inc
jno
adc
nop
out
push
rcr
rcr
adc
push
ret
cmp
mov
iret
sbb
les
adc
in
lods
scas
scas
add
mov
cmp
add
xchg
aaa
out
dec
outs
add
(bad)
dec
mov
mov
lods
nop
in
enter
mov
bswap
or
retf
sbb
and
test
out
retf
or
dec
dec
int3
or
or
leave
sbb
(bad)
cmp
mov
leave
mov
pushf
nop
adc
sbb
add
ret
cmp
movs
xor
out
mov
xchg
rol
into
jb
rcr
paddq
jg
es
daa
aad
xlat
test
mov
(bad)
leave
and
inc
leave
enter
mov
fldcw
fimul
or
fisttp
mov
jns
(bad)
dec
and
add
retf
nop
xor
cdq
xchg
int
xor
and
stc
or
(bad)
xchg
xor
push
iret
sbb
loopne
ins
test
jmp
loope
push
and
(bad)
xchg
iret
and
pop
jb
rcl
inc
cmps
into
jb
sub
leave
xchg
pop
leave
jecxz
in
(bad)
xchg
pop
out
pop
add
enter
mov
dec
sahf
pop
jmp
(bad)
dec
cs
xor
or
cdq
xchg
push
xchg
mov
or
leave
push
mov
add
adc
fstp
and
and
repnz
enter
cdq
and
loopne
pop
sub
jns
xor
sbb
repz
daa
leave
jae
loopne
xchg
sbb
add
adc
out
es
xor
call
sub
and
ins
jmp
sub
sbb
test
mov
call
or
clc
push
fistp
mov
call
and
div
pushf
sub
jb
stc
adc
test
sub
sti
or
cld
or
sbb
mov
or
adc
or
dec
pusha
dec
sbb
enter
sub
fimul
pop
cld
sbb
in
or
add
xchg
sub
add
add
and
cmps
popw
(bad)
sbb
pushf
add
add
add
add
or
or
and
mov
push
leave
or
add
dec
push
and
jb
or
or
xor
or
and
das
or
pmulhrw
ror
adc
adc
sbb
mov
jle
xlat
adc
in
add
fld
or
pushf
nop
push
add
syscall
xor
and
adc
adc
add
shr
pop
dec
or
out
or
(bad)
das
mov
fwait
push
sub
pop
dec
push
enter
sbb
cdq
mov
xchg
sbb
or
adc
enter
pop
adc
or
mov
sbb
test
sub
and
in
push
sbb
mov
xchg
add
fsub
es
call
xor
into
test
or
xchg
push
jb
or
or
or
cmps
in
pop
or
or
leave
sub
and
or
or
call
or
cmps
in
es
or
daa
pop
mov
add
leave
sub
push
xor
and
or
(bad)
and
xor
sbb
sbb
add
fiadd
sub
fs
sub
pop
sub
das
cs
fs
nop
add
or
aaa
aaa
sbb
ins
adc
or
push
iret
leave
mov
dec
cmp
ds
sub
pop
(bad)
(bad)
aas
push
xor
nop
cmps
dec
mov
xor
push
inc
sahf
adc
xor
push
xor
cmp
ss
jmp
cmp
nop
add
nop
inc
inc
inc
call
arpl
sbb
add
cmp
sbb
dec
inc
nop
xchg
sub
das
cdq
and
dec
pop
sub
leave
mov
aas
or
and
das
ja
push
or
push
inc
inc
fbld
adc
xor
inc
sbb
mov
daa
inc
or
push
sub
inc
or
iret
push
dec
push
fs
push
push
add
sub
push
nop
add
ins
jb
cwde
inc
push
pop
push
mov
pop
dec
leave
imul
dec
xchg
dec
or
test
inc
jb
or
adc
pusha
add
push
enter
pop
pop
pop
add
xchg
or
dec
ror
cmps
or
mov
pop
xchg
add
nop
popa
popa
bound
sbb
cdq
dec
ins
jne
and
pcmpgtb
addr16
sahf
dec
mov
dec
enter
imul
ins
in
xor
dec
cs
mov
mov
daa
push
mov
sbb
inc
push
and
jne
fs
cmps
fs
ins
inc
push
nop
add
or
cwde
js
jp
xchg
or
jp
push
dec
scas
bound
push
in
scas
in
pop
pop
xchg
sub
pop
pop
pop
dec
add
pop
push
jge
or
or
adc
leave
xchg
pop
add
mov
add
add
rol
test
sub
nop
mov
popa
or
and
loope
imul
push
push
and
xor
xor
or
cs
mov
fbld
push
or
nop
push
scas
add
or
push
add
jg
push
cmps
or
xchg
inc
push
fs
xchg
xchg
push
dec
cmps
fs
gs
and
inc
fwait
call
ror
jg
add
jg
push
into
mov
sbb
adc
stos
xchg
jne
dec
cmp
xor
data16
inc
sub
jmp
add
pop
pop
or
xor
movs
add
and
movs
aas
scas
jg
mov
mov
jg
loopne
enter
mov
xchg
sub
out
lods
in
cmps
mov
enter
jbe
fiadd
nop
rcl
cmp
lds
dec
jb
adc
dec
xchg
mov
add
sub
cmps
inc
add
scas
push
enter
sahf
iret
mov
rcl
iret
pop
sub
adc
xchg
add
dec
xlat
push
das
inc
(bad)
popa
add
pop
cmp
push
fldenv
sbb
pop
xchg
xchg
repnz
daa
frstor
inc
leave
adc
ffreep
loope
mov
iret
inc
cmp
das
xchg
popa
add
out
(bad)
adc
(bad)
dec
mov
sbb
add
push
outs
out
cmp
and
icebp
push
cmp
add
cmps
mov
test
and
push
add
imul
nop
add
stc
fbstp
sti
dec
jnp
nop
push
out
cld
out
call
test
dec
and
in
in
or
pop
fild
pop
xchg
cmp
mov
fild
imul
pop
add
mov
or
enter
or
in
lods
add
inc
pop
movs
fimul
pop
sbb
push
adc
sbb
cmp
femms
sbb
cs
pop
daa
in
inc
addr16
or
or
cdq
ss
dec
push
imul
adc
ins
or
mov
inc
inc
add
adc
xlat
lods
dec
push
dec
outs
pop
pop
les
shl
jo
cmp
and
jno
(bad)
xor
and
sbb
jae
rol
ret
adc
arpl
add
xchg
mov
(bad)
and
or
into
retf
repnz
and
and
mov
call
daa
outs
sub
sub
test
adc
outs
sub
cs
mov
sub
xor
pop
and
xchg
inc
push
xlat
xor
stc
sbb
nop
in
and
popf
outs
cmp
ret
sub
test
nop
sbb
pop
add
cmp
cmp
push
je
adc
pop
(bad)
and
ds
add
mov
cmp
je
(bad)
push
cmps
in
pop
sub
jne
cmp
dec
push
mov
xchg
aas
pop
push
imul
inc
js
fs
inc
inc
jns
imul
inc
jnp
push
imul
fs
dec
jge
int3
es
scas
dec
pop
jle
daa
jg
push
add
fsub
sbb
dec
enter
push
pop
test
arpl
test
ins
outs
nop
add
mov
ja
add
lds
add
cmp
stc
sub
dec
jg
and
dec
push
push
xchg
dec
push
sbb
in
sub
adc
(bad)
push
push
jb
mov
add
scas
pop
scas
pop
pop
push
enter
pop
mov
xchg
mov
(bad)
bound
bound
adc
bound
and
adc
adc
xor
out
mov
add
sub
addr16
inc
es
push
add
cdq
or
inc
mov
(bad)
outs
adc
push
xchg
adc
pop
jno
fs
or
je
je
or
push
jb
jbe
ja
jp
xor
inc
js
popa
not
leave
jp
cmp
jl
xor
jle
jo
cmp
jg
jl
sbb
pop
in
iret
nop
xor
cmp
dec
repnz
inc
pop
dec
dec
or
mov
xchg
xor
jns
and
mov
and
sub
xchg
xor
add
xor
mov
test
xchg
mov
mov
inc
nop
adc
pop
pop
push
jb
test
ds
dec
ficom
dec
xchg
loope
xchg
or
call
push
pushf
das
pop
cmps
xchg
hlt
add
sub
pop
setp
jo
cmp
pop
lahf
pop
dec
dec
pushf
push
cmps
movs
push
cs
mov
call
mov
xchg
cmps
aaa
out
xchg
or
inc
ja
das
ror
push
lods
outs
das
scas
leave
mov
mov
mov
mov
aaa
mov
mov
and
jb
xor
jb
out
mov
inc
shl
xor
arpl
in
mov
aas
mov
nop
mov
pop
leave
rcr
ret
pop
jecxz
ins
and
aas
(bad)
sbb
xchg
push
out
(bad)
adc
popa
inc
xor
xchg
not
push
xchg
rcl
dec
cmps
lods
gs
push
addr16
stos
dec
inc
ins
xlat
(bad)
fld
in
daa
jns
fist
aaa
fucom
and
sub
popa
mov
loope
push
xor
in
xlat
jecxz
and
in
sar
push
add
add
push
add
add
call
not
mov
dec
xchg
in
sub
call
(bad)
xchg
jmp
fisub
mov
imul
enter
cmp
dec
enter
sti
(bad)
xchg
or
mov
popf
and
add
pop
and
and
mov
dec
pop
es
pop
call
xchg
pushf
movs
push
push
pushf
in
(bad)
scas
cmc
pop
cmc
pop
neg
add
nop
xchg
adc
mov
pop
scas
in
push
xchg
(bad)
xlat
and
out
pop
mov
adc
and
pop
(bad)
sub
rol
add
adc
lahf
add
add
inc
push
repnz
daa
push
xor
in
mov
or
or
dec
and
sub
(bad)
jmp
jle
add
xchg
jb
add
pop
add
sub
out
adc
or
out
cwde
and
enter
scas
inc
repnz
fwait
mov
pushf
aad
cmp
add
popf
push
adc
sub
imul
imul
cs
pop
adc
iret
adc
adc
movs
or
push
movs
push
popf
stos
sbb
and
test
enter
pop
sbb
sbb
sbb
push
enter
and
pop
test
sbb
and
and
enter
inc
sbb
inc
sub
add
adc
(bad)
aaa
rcl
out
xchg
(bad)
cmp
and
inc
and
(bad)
and
daa
jle
sub
rcl
push
xchg
xchg
inc
jb
pop
add
sub
add
cmp
inc
lods
xchg
pushf
in
stc
adc
in
push
xchg
pop
xor
push
xor
ins
xchg
retf
and
xor
and
sub
and
cmp
xchg
jns
xor
or
sub
sub
mov
cmp
add
mov
movs
push
nop
pushf
inc
loope
and
and
add
pop
out
push
inc
inc
(bad)
aas
and
xor
inc
dec
pop
adc
dec
inc
add
into
nop
dec
cmp
add
in
out
push
mov
and
xchg
add
mov
lods
and
cmp
adc
inc
xor
dec
add
and
sub
pop
pop
adc
dec
dec
(bad)
or
mov
pop
dec
dec
or
and
and
ss
sbb
adc
or
cdq
in
cmps
(bad)
jg
push
xchg
push
nop
push
pop
push
(bad)
push
xchg
lds
dec
push
and
pop
and
fnop
push
pop
inc
repnz
icebp
into
or
pop
pop
add
mov
push
mov
add
xchg
push
xor
mov
repnz
sub
or
mov
and
mov
push
pop
and
pusha
and
or
inc
mov
push
pop
(bad)
test
in
xor
ret
cmps
outs
pop
addr16
add
or
scas
and
xor
pop
adc
mov
in
(bad)
scas
inc
push
sar
adc
push
or
push
inc
add
sbb
mul
push
ins
aas
outs
adc
xchg
jbe
enter
and
add
fwait
xchg
xchg
dec
or
leave
add
call
retf
jb
inc
call
retf
leave
jb
into
jne
jbe
mov
sub
ja
js
(bad)
pop
jns
rcr
jp
shr
push
jge
fld
aad
or
cdq
adc
nop
xlat
test
fsub
jb
mov
mov
fs
lea
inc
xchg
xchg
fld
cmp
adc
push
(bad)
sub
jl
or
adc
enter
fld
test
and
fcom
xlat
sbb
push
cmp
mov
xchg
in
dec
inc
push
outs
outs
ins
pop
mov
outs
repnz
sbb
xchg
dec
or
enter
adc
and
lahf
mov
inc
mov
nop
dec
xchg
pop
enter
xchg
cmp
mov
sub
in
mov
aaa
call
pushf
xrelease
mov
sbb
out
shl
and
pop
mov
and
xor
push
xor
or
and
and
stos
and
and
out
lods
and
lods
and
xor
scas
mov
xor
add
xor
mov
and
aam
call
leave
cmp
mov
or
mov
or
enter
mov
or
out
inc
enter
mov
enter
retf
enter
call
or
shr
test
rcr
inc
cmps
aam
(bad)
inc
push
fs
jmp
xchg
iret
aam
fimul
fs
fcmovnu
sbb
fs
fsubp
loope
fs
push
loop
jecxz
movs
sbb
in
dec
push
fs
out
pop
inc
push
fs
jmp
sub
in
in
or
in
sub
inc
enter
pop
xchg
dec
cs
repz
mov
cs
cmc
call
clc
stc
xor
push
xor
out
sti
xor
aas
(bad)
and
and
inc
and
sbb
lock
call
mov
dec
leave
push
icebp
pop
inc
cmps
test
(bad)
or
or
movs
sbb
or
inc
cmps
adc
adc
fs
repz
movs
sbb
adc
bound
fs
sbb
not
enter
and
inc
cmps
sbb
push
inc
push
fs
cmc
pop
inc
cmps
movs
sbb
and
and
movs
sbb
and
inc
cmps
sub
sub
fs
imul
inc
cmps
movs
sbb
sub
fs
push
fs
xor
movs
sbb
xor
xor
fs
cmps
xor
ss
push
fs
stc
aaa
inc
cmps
movs
sbb
cmp
cmp
movs
sbb
cmp
inc
cmps
inc
inc
inc
inc
push
fs
sti
inc
inc
cmps
movs
sbb
inc
fs
push
fs
dec
cld
movs
sbb
dec
inc
dec
mov
inc
cmps
dec
dec
and
mov
and
dec
and
push
enter
push
or
mov
dec
leave
push
(bad)
push
jg
out
push
dec
and
sbb
pop
or
nop
sub
pop
push
loope
pop
call
sar
pop
sbb
sbb
add
xor
jb
bound
fdiv
xor
sbb
pop
test
nop
pop
test
int
add
or
and
jl
and
pop
sbb
jo
(bad)
test
shr
enter
dec
jb
inc
(bad)
js
add
jb
xor
pop
or
nop
or
ins
and
sub
jge
or
xchg
sbb
add
movs
sbb
and
push
nop
and
xchg
rol
inc
es
sbb
adc
fst
xchg
and
pop
xchg
inc
adc
and
and
push
inc
fsubr
das
mov
xchg
xor
and
addr16
sbb
fisubr
or
(bad)
and
adc
and
sub
not
dec
xchg
and
sbb
and
mov
enter
xor
call
sahf
lahf
or
mov
add
adc
and
dec
mov
adc
mov
jb
test
mov
add
push
add
cmps
or
add
xor
adc
lods
scas
jne
lods
popa
dec
repnz
and
stos
adc
and
add
scas
cmps
sub
add
mov
mov
jo
add
jb
adc
and
es
nop
push
or
in
mov
sbb
sbb
sub
aaa
sbb
dec
dec
sbb
rcl
out
xor
and
and
jb
loopne
mov
add
sbb
sub
jecxz
outs
push
xor
and
dec
pop
and
mov
leave
inc
xor
sahf
in
inc
ja
push
add
mov
jp
test
mov
inc
dec
sub
and
pop
add
in
xor
sub
and
ja
sub
sbb
leave
(bad)
retf
or
cmps
pusha
int3
dec
add
int
pop
push
sub
push
lahf
pop
xor
cs
aas
leave
enter
(bad)
das
data16
inc
xor
or
daa
cdq
stos
push
fs
xor
cwde
add
daa
jecxz
adc
enter
leave
xchg
or
aad
ss
in
inc
das
fidiv
aaa
push
add
(bad)
fmul
dec
cmp
sbb
pop
test
nop
and
fadd
test
cs
js
daa
add
cmps
fs
fistp
ds
dec
inc
xchg
pop
dec
cmps
fs
sub
pusha
sbb
jns
inc
in
es
cmps
fs
inc
add
inc
inc
inc
dec
push
fs
call
inc
dec
ja
or
or
add
cmp
dec
or
in
out
dec
and
xor
dec
push
dec
or
adc
icebp
jmp
leave
xchg
dec
clc
sbb
fs
dec
dec
repz
iret
mov
pop
push
add
or
push
pop
fs
in
idiv
push
add
daa
or
aad
push
mov
daa
or
push
ja
xor
ror
cli
dec
mov
enter
xlat
or
mov
std
xor
xchg
pop
jmp
cmp
xchg
add
sbb
pop
test
and
adc
inc
repnz
inc
daa
add
add
push
and
daa
or
inc
xor
enter
adc
xchg
or
popa
push
in
in
add
fs
bound
and
nop
pushf
and
adc
arpl
stc
rcl
xor
adc
cmp
pop
data16
jns
dec
cmps
addr16
sbb
push
sbb
mov
daa
push
xchg
or
mov
push
and
imul
dec
or
and
xchg
dec
sub
push
xor
and
shr
or
add
daa
push
xor
xor
bound
ss
sub
pop
xor
jne
sub
sub
or
sub
or
inc
js
and
pusha
dec
(bad)
jns
and
and
jp
mov
jl
xor
jge
call
in
cmp
jg
in
push
xor
retf
sbb
cmp
add
daa
cmp
push
xor
jo
daa
and
movs
cmp
adc
cmp
xchg
sub
or
add
stos
xor
mov
test
xor
xchg
push
repnz
or
dec
xor
mov
inc
adc
mov
fs
push
inc
xor
dec
pop
es
cmps
mov
stos
sbb
mov
lea
sbb
dec
or
mov
dec
dec
shr
jmp
xchg
push
add
fs
push
push
xchg
push
sbb
push
or
call
add
cdq
xchg
xchg
int
adc
sub
xchg
add
pop
pop
xchg
pop
and
pusha
inc
outs
call
push
jb
jb
call
or
enter
ja
pushf
rcl
inc
call
lahf
aas
lea
daa
jns
xchg
adc
data16
inc
xor
popa
add
es
mov
ret
mov
inc
shl
leave
push
or
add
dec
daa
pop
xchg
pop
imul
nop
and
ins
cmps
nop
sub
cmp
imul
enter
stos
movs
add
out
jno
dec
xchg
xor
jb
stos
mov
xor
je
and
lods
adc
add
daa
xchg
push
add
js
das
ror
adc
dec
jp
add
xchg
or
mov
xor
jge
jle
xchg
inc
leave
enter
or
mov
(bad)
xor
add
and
sub
pop
mov
sar
or
jne
call
leave
adc
push
rol
int
sbb
jb
mov
mov
add
iret
sbb
mov
pop
mov
les
lahf
(bad)
sbb
rol
sbb
add
leave
sub
xchg
xor
ret
pushf
ins
add
push
(bad)
(bad)
cs
cwde
(bad)
daa
cdq
pop
leave
jae
aas
(bad)
mov
(bad)
test
dec
scas
push
jb
and
(bad)
or
enter
or
leave
mov
xor
retf
adc
sahf
inc
add
retf
mov
push
and
enter
mov
enter
int
add
xchg
or
into
outs
mov
pop
add
cmps
nop
and
pop
add
add
mov
and
pop
add
stos
stos
mov
cmp
iret
rcl
fs
adc
scas
sar
rol
test
cli
adc
in
jae
push
adc
inc
ds
mov
scas
cli
adc
enter
pop
or
xchg
sbb
xlat
sub
popa
mov
ret
add
mov
inc
or
mov
and
and
jmp
aam
enter
xor
repnz
pop
or
rcr
add
add
dec
fild
and
cmp
ret
loope
dec
cmp
loop
push
xor
lds
sbb
jecxz
and
and
in
add
and
dec
leave
out
inc
lods
or
pop
sub
mov
and
and
xchg
mov
(bad)
jmp
xor
pop
jmp
les
addr16
pop
sbb
fisub
iret
and
leave
adc
shl
in
push
push
xchg
xchg
sbb
dec
daa
cdq
xchg
cmp
out
bound
or
or
(bad)
fcom
xor
adc
or
nop
cmp
aaa
fiadd
xchg
fcomi
inc
dec
push
jp
or
test
fstp
pop
loopne
adc
idiv
not
sub
loopne
loope
stc
stos
nop
adc
cli
or
push
jecxz
jp
in
and
sti
sbb
or
add
xlat
pop
out
jecxz
add
daa
pushf
cdq
cmp
and
xchg
add
mov
add
adc
retf
mov
mov
adc
and
cmp
dec
repz
xor
add
out
mov
and
pop
pop
mov
push
in
add
call
movs
or
dec
pop
dec
call
mov
xchg
inc
cld
nop
gs
adc
enter
adc
xlat
add
and
add
add
or
push
and
pop
pop
and
push
cmp
push
xor
xchg
push
add
add
push
pusha
inc
scas
aas
add
add
sahf
pop
mov
and
or
add
dec
xchg
imul
pop
repnz
mov
add
pop
or
adc
test
add
adc
and
ret
lods
dec
xchg
adc
xlat
pop
and
inc
mov
jbe
and
adc
sbb
sbb
or
push
test
xchg
popa
lds
and
das
cs
repnz
and
add
inc
adc
mov
(bad)
xchg
pushf
pusha
pop
sub
and
add
sub
loopne
sub
push
out
ret
xchg
dec
add
xor
xor
cmp
sbb
lods
in
cmps
adc
cmp
enter
sub
mov
add
aaa
cmp
retf
adc
ds
add
inc
add
ds
and
cdq
in
rcl
adc
leave
aaa
jg
add
inc
cmp
add
sbb
daa
not
dec
ret
dec
mov
sbb
lahf
fwait
in
sbb
dec
sbb
and
push
outs
push
adc
push
and
adc
pusha
inc
or
push
mov
and
bound
xchg
add
daa
or
and
xlat
pop
pop
das
pop
test
add
in
adc
and
imul
jg
or
not
mov
cmp
inc
sbb
sbb
xchg
nop
or
push
push
pushf
or
mov
push
cld
adc
leave
sub
outs
aas
jo
stos
lods
dec
(bad)
mov
xchg
sbb
clc
adc
and
cs
out
imul
js
xlat
xchg
ss
or
xchg
or
jl
jle
mov
adc
les
push
inc
add
or
test
inc
enter
xchg
mov
inc
dec
jb
mov
add
add
jb
push
pop
push
lods
and
inc
aas
mov
mov
fimul
add
pop
ja
sub
jb
xchg
das
add
sub
les
xchg
es
sub
pusha
aas
xchg
inc
mov
mov
add
jg
inc
mov
fwait
out
fwait
push
mov
adc
popf
daa
hlt
add
or
xchg
cmp
xlat
mov
(bad)
setle
mov
cmps
aaa
add
pop
inc
sbb
dec
and
push
stos
xchg
cmp
push
mov
sub
scas
and
pop
xchg
mov
outs
xor
pop
in
(bad)
es
mov
adc
push
mov
and
mov
leave
inc
pop
push
pop
mov
or
in
pop
mov
adc
cmp
adc
xchg
inc
movs
in
scas
ret
test
inc
ficom
mov
or
aas
retf
dec
pop
aaa
int3
pusha
xchg
jno
into
and
enter
rcl
sbb
xchg
mov
repnz
aam
ror
add
icebp
rol
xor
lahf
cs
sub
fnstenv
fcomp
sbb
or
in
dec
or
mov
and
sbb
push
cmp
loopne
loop
xchg
push
or
add
adc
rcr
in
adc
out
mov
adc
retf
je
nop
aas
xor
add
repnz
mov
ins
adc
jno
jbe
aas
out
aas
xor
ins
jg
test
add
xor
loopne
or
hlt
das
lods
xor
inc
dec
xchg
push
das
xor
adc
es
pop
cli
aaa
mov
push
test
add
stc
int3
aam
pop
jb
das
add
and
clc
movs
and
push
inc
add
inc
dec
cmps
jl
jmp
and
cmps
xlat
sahf
pop
cmp
jmp
add
add
leave
xchg
repz
push
add
call
add
inc
push
push
pop
setp
inc
or
or
xor
fwait
inc
or
or
imul
adc
push
push
adc
imul
xchg
data16
adc
nop
xchg
data16
adc
pushw
sbb
sbb
sbb
sbb
nop
xchg
data16
sbb
leave
xchg
data16
sbb
push
enter
jg
add
inc
mov
mov
imul
and
or
or
push
and
ror
daa
and
or
sub
sub
or
or
sub
sub
sbb
inc
fsubr
in
pushf
add
dec
enter
xor
test
xor
enter
add
mov
push
cdq
cmp
cmp
in
fidiv
inc
dec
enter
sbb
dec
enter
enter
dec
dec
push
dec
enter
push
push
test
pop
pop
enter
pop
pop
pusha
adc
or
fs
test
inc
or
xor
pop
leave
and
xchg
repz
ins
and
xor
sub
xor
and
and
in
or
and
push
cdq
in
jbe
and
xor
and
cmp
leave
push
jl
add
sub
and
lahf
jmp
inc
push
xor
inc
sbb
add
sbb
xlat
adc
push
div
push
pop
push
jnp
ins
adc
out
inc
xor
mov
pop
pop
cmp
jle
mov
jbe
xchg
or
cmp
mov
dec
ficom
and
add
fist
and
xor
add
sub
pop
inc
jg
nop
or
push
inc
sbb
push
nop
inc
push
cs
add
mov
cs
adc
dec
add
and
and
and
sbb
jns
iret
dec
push
pop
enter
pop
clc
adc
inc
push
pop
pop
ja
push
inc
xchg
sub
or
arpl
mov
pushf
nop
(bad)
xor
adc
ss
imul
xor
sbb
xlat
ins
add
xor
sbb
outs
add
add
in
stos
in
jae
jne
pop
dec
and
ja
sbb
adc
mov
pop
jnp
pop
imul
jge
adc
call
sbb
pushf
xchg
dec
in
jbe
sub
sbb
xlat
xchg
and
cmp
adc
lods
xor
in
xchg
gs
data16
and
inc
xchg
or
mov
xor
dec
xchg
imul
mov
jae
xchg
dec
sbb
add
adc
add
add
adc
and
sbb
xchg
xchg
and
push
ins
add
xchg
and
sub
push
inc
call
sbb
add
call
and
adc
push
stc
adc
or
fwait
push
mov
dec
leave
rcr
pop
or
and
addr16
or
mov
or
bt
mov
daa
movs
pop
add
push
xor
or
push
adc
jmp
sub
xor
add
and
sub
leave
mov
and
inc
xor
and
mov
or
pop
mov
and
ror
sbb
push
or
xor
(bad)
addr16
pop
fsubr
mov
mov
or
pop
int
sub
mov
cmp
aad
aad
jecxz
mov
(bad)
cmp
mov
jns
add
fs
fs
cmp
jne
xor
cli
(bad)
mov
inc
xadd
and
push
pop
pop
shl
jne
sar
nop
in
sbb
and
mov
inc
sbb
jge
add
sub
and
enter
jb
mov
and
cmps
jo
rol
int
and
add
and
add
add
dec
repz
call
inc
xchg
daa
add
and
or
inc
imul
ja
dec
xor
inc
dec
pop
adc
pop
cs
push
inc
fadd
jb
add
inc
or
inc
or
fadd
or
dec
inc
add
aas
out
mov
dec
ja
daa
fs
dec
cmp
jle
sbb
fcomp
repnz
add
push
cmp
and
(bad)
movd
inc
ret
pop
mov
mov
push
or
and
or
adc
iret
daa
push
inc
push
bound
jb
fimul
push
push
push
push
in
pushf
nop
push
push
push
pop
push
inc
aam
es
dec
lahf
stc
je
jo
call
push
ja
add
(bad)
aaa
aam
push
(bad)
push
ficomp
xlat
pop
lock
pop
int
add
fldenv
pop
and
out
add
fxch
and
nop
ficomp
pop
dec
or
pop
push
pushf
nop
adc
push
pop
push
pusha
push
and
in
popa
push
bound
dec
enter
push
fs
gs
nop
adc
pushw
addr16
daa
in
pushf
push
push
enter
imul
push
push
jns
dec
ins
push
push
outs
adc
pop
imul
loop
add
inc
pusha
daa
fstp
outs
push
repnz
daa
fisub
fbld
inc
enter
pop
loope
add
loop
push
add
fs
xchg
je
mov
dec
jne
sbb
pmaxsw
in
push
imul
sbb
jp
sbb
add
xchg
jge
mov
js
xchg
pop
out
mov
sub
mov
adc
mov
jg
add
or
add
jmp
xlat
xor
enter
add
cmp
(bad)
sub
out
movs
inc
pop
(bad)
(bad)
into
push
sub
mov
push
adc
ret
leave
repnz
test
xchg
mov
aas
hlt
sbb
sbb
and
xor
or
stc
test
xor
jb
add
into
dec
sbb
xchg
sbb
out
jl
push
sbb
dec
mov
mov
adc
and
and
dec
push
push
fadd
mul
adc
push
outs
or
inc
loope
push
(bad)
dec
mov
mov
lock
aas
pop
pop
pop
sbb
sti
aas
or
sahf
cmp
xor
and
fwait
sub
dec
fwait
sbb
scas
push
and
mov
add
or
inc
or
and
add
xor
inc
cmps
or
cmps
in
lds
das
push
es
inc
movs
mov
inc
adc
add
or
adc
test
jle
dec
and
cmp
mov
sub
add
inc
inc
arpl
pop
xchg
mov
pop
add
xchg
push
xchg
dec
dec
ds
xor
das
and
and
sbb
and
add
and
xchg
add
pop
js
and
xchg
or
daa
sub
leave
sar
add
and
xor
adc
and
pushw
leave
test
sub
cmp
ror
xchg
not
cmp
movs
sub
jb
sbb
ds
dec
int
pop
aas
ins
out
xor
inc
and
enter
and
jb
push
cmp
inc
movs
popa
add
ja
add
ror
or
inc
and
push
pop
aaa
dec
test
and
scas
pop
dec
and
jge
dec
and
test
xchg
push
fldenv
push
dec
aaa
dec
add
sbb
push
push
and
cs
xchg
xchg
cs
cs
xchg
xchg
mov
or
push
sub
and
lahf
push
sub
sbb
xchg
push
pop
mov
cwde
pop
and
cmps
adc
add
xor
dec
push
pop
and
mov
inc
pop
inc
push
or
sbb
pop
xchg
shl
pop
and
add
pop
and
and
and
arpl
add
call
aaa
addr16
mov
fs
jbe
fs
call
xor
ins
inc
adc
dec
inc
loope
sahf
popf
jmp
daa
jno
fadd
das
bound
xor
and
adc
xchg
ja
mov
inc
xlat
jns
inc
adc
adc
add
fsubr
jnp
or
xchg
mov
and
add
jmp
ret
push
or
out
fadd
mov
or
test
dec
repz
adc
test
xchg
and
sbb
lea
adc
fisub
or
xchg
push
arpl
es
call
adc
sub
lea
dec
mov
pop
cmps
scas
xchg
dec
jae
mov
jb
push
add
call
outs
fwait
and
pop
lea
ins
movs
or
mov
pop
leave
add
nop
or
lahf
and
lahf
das
lahf
cmp
enter
ds
pop
adc
cmp
in
not
test
rcl
aas
mov
pop
or
movs
out
shl
in
sbb
or
xchg
ret
test
nop
mov
push
lods
push
rol
lods
mov
(bad)
fiadd
sub
scas
and
scas
push
scas
push
test
push
mov
enter
adc
mov
mov
jbe
(bad)
or
ss
test
adc
das
mov
xor
mov
leave
add
adc
push
adc
and
push
mov
(bad)
pusha
test
mov
shr
mov
sbb
adc
and
jp
or
test
push
push
ffreep
mov
xor
enter
push
int
and
xchg
mov
jns
dec
enter
mov
sub
retf
daa
in
sar
add
and
mov
dec
sahf
xor
and
sbb
out
shl
shr
sub
adc
mov
cmps
sar
neg
jns
push
aas
aam
mov
adc
outs
enter
xlat
mov
or
or
data16
nop
xchg
out
fcmovnb
fadd
movs
popa
nop
data16
fidivr
ret
sub
loopne
dec
les
and
and
adc
push
imul
fsubr
shl
bound
leave
aaa
das
push
(bad)
test
ja
or
out
in
sub
out
jg
out
in
push
call
fs
dec
push
sub
int
sbb
es
push
and
and
in
(bad)
in
enter
int
leave
out
retf
and
lock
icebp
int3
mov
and
repnz
into
push
xchg
inc
jb
xor
and
nop
sbb
and
leave
and
and
and
dec
push
add
pop
es
stos
psubsb
add
pusha
cmp
ja
enter
cs
maskmovq
neg
ret
jbe
scas
stc
push
jns
nop
and
enter
sti
adc
adc
std
dec
sub
scas
(bad)
mov
pop
adc
es
and
add
add
add
pop
inc
repnz
dec
add
es
push
repnz
dec
add
ins
shl
aad
add
lds
scas
adc
mov
push
pop
push
dec
push
and
cmps
aam
sub
xchg
aaa
iret
sub
dec
xor
xor
daa
inc
fsubr
(bad)
(bad)
and
inc
jne
invd
es
lock
ins
(bad)
xor
xchg
or
mov
fstp
ins
add
es
sub
cmp
mov
and
(bad)
sbb
or
stc
xor
cmps
adc
mov
or
stos
add
adc
add
imul
adc
add
pop
or
mov
iret
sbb
leave
cdq
mov
adc
sbb
out
imul
pushf
ins
push
and
sbb
and
in
ja
es
cmp
sub
das
inc
xchg
xchg
xchg
or
outs
es
mov
sub
enter
iret
and
dec
push
adc
bound
imul
sahf
cs
xor
sub
(bad)
out
ds
arpl
es
xor
leave
and
adc
add
loop
cmps
iret
xor
enter
push
aaa
xor
in
in
xor
out
out
xor
call
xor
xor
ds
and
and
dec
leave
and
inc
out
inc
inc
cmp
inc
es
es
push
leave
and
dec
sbb
push
es
and
xchg
and
push
sbb
pop
cmp
xor
inc
jmp
inc
outs
and
dec
mov
lds
and
add
push
ror
dec
sub
mov
pop
aaa
dec
es
sbb
and
pop
cmovge
ror
es
adc
and
add
push
inc
add
das
mov
pop
aas
push
enter
add
pop
stos
xor
pop
lahf
xchg
pop
adc
pop
xlat
pop
es
add
out
pop
add
dec
rcr
lock
add
lea
(bad)
(bad)
fisub
pop
lea
lahf
arpl
fbld
leave
push
xor
jb
gs
in
in
mov
loop
mov
mov
nop
arpl
dec
push
push
pop
push
fisubr
daa
pop
push
das
pop
outs
jb
sub
fbstp
inc
es
hlt
jo
cdq
movs
sbb
push
nop
sub
mov
outs
adc
add
push
sub
dec
inc
ja
xor
adc
jns
jp
in
inc
or
jl
div
cmp
es
sub
das
mov
jg
enter
or
inc
jb
inc
add
scas
jp
jns
cwde
xchg
in
add
push
shl
test
adc
es
xchg
mov
mov
fbld
es
xchg
jae
dec
push
mov
lea
sbb
sti
out
(bad)
dec
out
(bad)
cld
dec
add
dec
push
test
std
push
(bad)
mov
or
mov
lahf
dec
mov
xchg
xchg
call
inc
movhps
inc
xchg
add
inc
cwde
add
add
call
inc
pushf
outs
or
popf
dec
mov
dec
lahf
mov
mov
and
and
and
sbb
push
leave
and
test
jae
(bad)
adc
test
push
jb
add
push
and
leave
mov
fdiv
mov
mov
inc
cs
lahf
test
cmp
or
jmp
sub
adc
add
dec
jb
push
ror
xor
ror
or
or
or
mov
mov
xchg
dec
ror
adc
adc
daa
dec
push
leave
and
daa
sbb
in
dec
stos
stos
sbb
out
mov
stc
(bad)
jo
mov
mov
adc
pop
in
and
into
retf
imul
push
imul
sub
imul
pop
nop
inc
call
mov
push
sbb
int
int
sbb
sbb
int
int
sbb
sbb
retf
jmp
jb
inc
jb
iret
rol
and
aad
jmp
in
cmp
xchg
inc
es
inc
lock
inc
sbb
inc
sbb
mul
sbb
clc
push
cli
xchg
mov
scas
add
mov
scas
jbe
lahf
sbb
into
pop
scas
and
add
dec
push
push
mov
rol
mov
xchg
jne
popa
test
xlat
mov
scas
pop
pop
das
fwait
mov
nop
(bad)
push
xlat
addr16
fcomp
fst
sbb
leave
fistp
pminub
mov
fisub
cmp
and
xchg
loop
out
daa
(bad)
mov
dec
or
mov
pop
test
xlat
dec
aad
in
mov
pop
xchg
push
xor
retf
adc
xlat
ds
test
add
jbe
pop
dec
out
jns
mov
add
add
cmp
in
adc
repz
dec
adc
pop
imul
push
pop
ins
leave
add
cmps
stc
es
lds
xor
(bad)
adc
std
xchg
aaa
gs
(bad)
pop
add
fs
cmp
or
iret
fiadd
sbb
pop
push
add
add
add
or
ss
and
pop
or
daa
retf
xor
(bad)
std
push
inc
movs
and
inc
add
dec
jmp
repnz
in
fdivr
out
cmps
or
xor
adc
inc
repnz
dec
ja
daa
and
movups
adc
add
adc
in
(bad)
fisttp
aas
(bad)
out
adc
push
and
cmp
add
mov
add
jmp
mov
in
daa
test
jne
pop
cmps
add
xchg
xchg
or
push
scas
push
push
and
or
dec
jns
xlat
cmps
and
mov
push
and
mov
jmp
leave
jmp
aaa
sub
nop
mov
jg
daa
pop
nop
pop
enter
sub
xchg
pushf
in
sub
in
sbb
daa
xor
xor
sub
and
xor
ss
leave
and
mov
ds
push
pop
div
test
or
(bad)
xor
inc
out
jo
fadd
and
add
fistp
daa
xchg
cmp
or
ds
sub
lds
call
inc
sub
inc
call
enter
sub
inc
inc
cmp
dec
cmps
jmp
and
cmp
xchg
in
cmp
in
dec
inc
(bad)
es
mov
mov
add
add
push
out
dec
daa
and
adc
lds
sub
push
cdq
inc
es
sub
nop
add
xchg
sub
push
nop
sub
inc
push
imul
push
pop
xlat
pop
sub
push
sahf
pop
or
pusha
push
daa
out
xor
bound
mov
inc
mov
xchg
inc
xchg
addr16
adc
push
dec
repz
imul
xchg
imul
enter
and
ins
xor
addr16
imul
ror
push
xor
ror
aaa
je
jne
push
push
sar
jbe
(bad)
xchg
or
or
daa
jns
xchg
sbb
jnp
jg
inc
xchg
push
and
in
sbb
daa
xchg
mov
leave
and
and
daa
lea
inc
jb
push
(bad)
daa
xchg
daa
xchg
ret
pop
push
xchg
daa
aaa
pop
js
xchg
push
xor
outs
es
cmps
in
sbb
cmp
fbld
ja
nop
pop
daa
jle
outs
xor
add
leave
bound
mov
outs
fisttp
fistp
or
test
pop
imul
mov
and
lods
in
out
dec
mov
mov
push
pushf
dec
dec
inc
push
mov
or
or
pop
sub
nop
mov
pusha
mov
inc
and
sub
pop
call
and
and
xchg
(bad)
cdq
daa
push
jb
adc
cmp
push
leave
add
call
popf
push
cmp
jno
push
sahf
cmp
rcr
mov
movs
cmps
xchg
nop
xchg
das
pop
xchg
setbe
inc
add
mov
fist
movs
arpl
in
and
jg
push
xor
lods
daa
lds
pop
jg
enter
scas
scas
xor
adc
mov
xor
add
sbb
jo
mov
leave
xchg
sbb
mov
xchg
sbb
pop
stos
pop
mov
stos
mov
inc
add
test
in
mov
xchg
dec
mov
lahf
(bad)
mov
and
mov
and
inc
scas
ffreep
pop
ret
and
pop
les
inc
retf
add
mov
pop
lds
mov
add
inc
(bad)
dec
xor
xor
enter
dec
fisub
daa
retf
mov
cmp
cmps
fs
cmps
rcl
aam
cmps
fs
(bad)
fdivr
pop
scas
or
xor
add
xchg
gs
adc
iret
dec
lds
sub
repnz
psrlq
adc
push
dec
dec
daa
pop
pushf
inc
fadd
xlat
pop
adc
and
ja
frstor
pushf
adc
push
lahf
(bad)
cmp
in
daa
inc
cmovne
enter
daa
inc
daa
add
and
xor
or
or
fnstcw
loopne
dec
jne
add
mov
(bad)
ret
adc
(bad)
in
je
out
sbb
pop
ds
jae
pop
or
arpl
daa
xchg
or
out
xchg
push
movs
hlt
dec
xcrypt-ecb
cmps
dec
sete
daa
jmp
add
push
and
out
sbb
xchg
sbb
repnz
mul
retf
xchg
sbb
jmp
repz
dec
pop
and
dec
pop
and
div
push
stc
mov
mov
jmp
push
cmps
sbb
xor
and
out
dec
out
push
rcpps
adc
sub
ja
scas
adc
mov
pop
add
pop
enter
add
push
add
push
nop
sub
push
pop
push
add
pop
push
pop
pop
cmp
pop
(bad)
sbb
inc
jb
sub
sub
sub
xchg
nop
adc
adc
sbb
movs
mov
adc
jmp
xor
or
sbb
fsub
jb
sub
mov
cmp
sbb
adc
jb
daa
pusha
popa
ins
or
daa
or
(bad)
pop
mov
fisttp
movaps
add
adc
stc
mov
dec
dec
outs
adc
test
push
add
call
sub
sub
cmp
mov
sub
sub
pop
repnz
xchg
sbb
in
cmp
sub
sub
sub
pusha
and
stos
fisubr
jns
dec
and
pop
ins
test
dec
and
dec
mov
xchg
xlat
jo
xchg
push
es
sub
sub
sub
sub
ret
add
and
sub
xor
add
mov
sub
(bad)
and
sbb
out
sub
pop
adc
push
inc
das
leave
sub
clc
pop
xor
test
iret
push
fcom
imul
dec
imul
fist
xor
ja
outs
xor
xchg
sub
mov
cmps
cmp
push
mov
aaa
cmp
cmp
xchg
cmps
in
dec
cmp
sub
cmp
sub
xchg
ss
outs
xorps
sub
int
dec
push
cmp
jno
dec
leave
inc
xlat
and
adc
xchg
inc
sub
or
or
jo
inc
call
call
je
inc
call
inc
call
cmp
inc
inc
dec
sub
dec
push
leave
and
push
sub
xchg
inc
jb
sub
pop
and
and
inc
popa
or
pop
sub
inc
cmp
push
scas
nop
in
pop
add
push
das
and
add
pusha
call
repnz
push
repnz
(bad)
movs
adc
mov
sub
and
mov
pop
sub
pop
xchg
adc
pop
pop
xor
sub
iret
dec
in
mov
pop
pusha
xchg
or
into
and
adc
out
cmp
dec
data16
addr16
enter
outs
jl
imul
push
in
mov
outs
jo
xchg
in
add
stos
out
sub
xor
sbb
jns
ins
xlat
push
dec
arpl
dec
test
and
outs
jno
pop
xchg
pop
add
aas
sub
movs
pop
add
aas
pop
xchg
sbb
add
call
cmp
and
adc
mov
out
jns
xor
dec
pop
jnp
add
jp
or
xor
jge
xchg
dec
ror
test
or
sbb
shl
jns
js
sub
jb
add
pop
jae
pop
stos
sub
shl
sub
push
pop
xchg
test
test
fstp
mov
add
mov
mov
pop
pop
add
or
mov
scas
dec
leave
xchg
mov
add
nop
test
out
jo
adc
fimul
sub
adc
mov
test
add
lea
(bad)
dec
cmp
repnz
xchg
daa
mov
(bad)
xchg
nop
xchg
xchg
xchg
sbb
pushf
xchg
xchg
xchg
leave
xchg
sbb
cwde
call
xchg
fisttp
gs
cmp
push
call
push
test
iret
pop
in
dec
enter
pop
mov
adc
add
imul
push
neg
aaa
mov
push
cli
push
jmp
nop
bt
movs
xchg
xor
push
ss
cmps
xchg
cmps
sbb
xor
nop
out
mov
sbb
push
nop
lahf
ja
sub
lods
push
out
sub
adc
and
scas
(bad)
dec
or
add
mov
sub
xchg
xchg
xchg
mov
add
mov
mov
mov
sbb
and
mov
mov
xchg
sbb
xchg
mov
leave
mov
scas
popa
imul
inc
inc
xchg
daa
in
fimul
dec
pop
idiv
push
mov
xchg
lahf
out
imul
sar
or
inc
sahf
shr
into
or
ret
xchg
xchg
mov
scas
xchg
jo
sbb
mov
(bad)
fs
outs
retf
leave
fwait
imul
pushf
dec
imul
test
fs
(bad)
shufps
push
jb
dec
push
cmp
mov
sbb
adc
dec
sar
in
pushf
in
sub
sub
and
not
lahf
cmps
inc
call
xchg
xchg
mov
xchg
xchg
mov
fs
cmps
fstp
loope
cmps
fs
jecxz
or
xor
(bad)
sahf
mov
push
xchg
nop
mov
pop
add
and
addr16
sub
adc
adc
adc
rcl
add
xor
dec
and
shl
adc
(bad)
lea
inc
jb
pushf
jmp
sbb
in
sub
retf
leave
cmps
in
cmps
out
test
sbb
pushf
out
test
leave
repnz
test
je
jmp
adc
dec
iret
inc
inc
jb
aam
jg
sbb
(bad)
dec
cmc
mov
sub
and
mov
sub
mov
scas
das
sti
xchg
pop
adc
std
outs
std
das
stos
in
mov
add
pop
pop
sub
cmps
adc
add
mov
sub
sub
in
rdtsc
jne
shr
xchg
fwait
xor
and
dec
scas
scas
mov
push
or
mov
pop
sbb
mov
jbe
iret
pop
adc
das
and
dec
fiadd
or
mov
cmps
push
add
cmps
mov
mov
or
out
pop
adc
push
add
pandn
inc
mov
daa
mov
sub
adc
and
adc
pop
adc
enter
das
add
scas
add
or
mov
mov
dec
adc
xor
mov
and
mov
and
jecxz
mov
or
xchg
out
fadd
sbb
daa
and
repnz
cmp
lds
mov
push
(bad)
movlps
pusha
push
enter
scas
enter
adc
xchg
or
or
int3
or
repnz
nop
int
adc
or
cdq
fmul
dec
ins
rol
push
nop
xchg
sbb
shr
fs
enter
daa
aam
inc
inc
es
pop
inc
inc
es
and
inc
es
fs
sub
cs
inc
(bad)
fsub
es
aaa
inc
inc
es
fild
fs
fs
inc
loop
and
inc
inc
jecxz
in
xor
and
sub
out
inc
jb
sub
inc
ins
sbb
jg
dec
leave
out
adc
nop
sbb
and
sbb
cmps
in
sbb
and
xchg
add
pop
xchg
in
mov
cmp
sbb
and
and
xchg
sub
mov
jb
rcl
rdmsr
xchg
dec
leave
es
xor
in
push
pop
sub
enter
out
sub
push
xor
inc
sub
cmp
and
cdq
xchg
add
icebp
mov
sub
scas
xor
push
xor
dec
push
xor
xor
xrelease
dec
leave
sbb
aaa
cmp
dec
push
xor
dec
xor
cmp
test
cmps
fs
sbb
neg
test
xor
xor
push
enter
nop
inc
leave
push
pop
clc
or
test
lahf
inc
scas
sbb
xchg
mov
das
dec
cdq
inc
xchg
cmps
scas
add
sti
and
sub
cmps
or
(bad)
or
xchg
pop
mov
jno
add
and
in
pop
ja
and
add
sahf
or
and
xor
mov
or
push
pusha
cs
xchg
add
movs
mov
cmp
inc
sub
dec
rol
pop
dec
pop
push
pop
pop
push
and
xor
cs
and
outs
xor
jo
push
fs
dec
jb
in
push
cmp
sub
test
nop
add
fidiv
call
sbb
in
sbb
loopne
sub
shr
pop
sbb
adc
sub
adc
test
nop
add
pop
xlat
ins
bound
or
add
cmps
pop
das
test
outs
test
add
pop
adc
push
cmp
adc
adc
add
sub
das
push
jb
push
and
xor
xor
add
ror
xchg
jo
mov
mov
push
adc
or
dec
xor
(bad)
dec
xor
xchg
or
or
sub
sub
(bad)
or
xchg
cmp
rol
dec
push
leave
and
xchg
inc
jb
sub
xchg
nop
cmps
sub
cmp
bound
push
inc
mov
rcl
shr
and
leave
xlat
pushf
sub
add
sahf
sub
add
dec
addr16
add
in
sub
jno
mov
xor
mov
movs
adc
sbb
sub
sbb
and
and
test
out
pusha
lods
cmps
lods
sub
scas
sub
adc
add
scas
sub
cmp
dec
mov
mov
fs
cmps
mov
xor
lods
add
dec
lods
mov
lsl
pop
pop
out
jns
sub
xchg
push
or
inc
out
pusha
call
push
inc
or
mov
cmp
mov
pop
inc
out
xchg
xor
popa
les
or
(bad)
cmovb
nop
(bad)
dec
jb
ja
enter
retf
lds
movntq
out
int
push
xor
shl
mov
sub
push
test
cs
in
adc
(bad)
nop
add
add
dec
rol
popf
cwde
shl
aam
xchg
cmp
ret
not
dec
and
enter
or
(bad)
leave
xchg
dec
enter
add
xchg
dec
loopne
aad
and
adc
xchg
test
mov
or
out
scas
adc
(bad)
out
and
add
call
enter
sub
and
xor
adc
cmp
into
adc
in
or
lock
adc
dec
jae
in
sub
and
pop
push
xchg
sbb
dec
or
pop
icebp
inc
inc
and
adc
in
int
sub
mov
cmc
sub
pop
sbb
adc
mov
cmps
jg
mov
add
int
or
adc
adc
pusha
add
and
nop
sub
sbb
daa
pop
adc
sahf
adc
pushf
lods
and
es
clc
sbb
fs
inc
sbb
sbb
sti
push
cld
inc
inc
es
std
and
fs
and
and
inc
add
and
enter
and
and
add
mov
in
daa
sub
push
repnz
adc
push
sub
adc
mov
sub
repnz
fmul
sbb
sbb
adc
das
xor
xchg
or
mov
out
imul
das
adc
fs
inc
sbb
push
inc
aaa
outs
aas
jae
or
out
mov
pop
outs
or
mov
xor
adc
mov
dec
lods
add
push
nop
push
popa
dec
pop
sub
or
xor
dec
adc
scas
or
sub
mov
pop
or
leave
and
icebp
(bad)
pop
es
call
mov
sub
sub
xchg
dec
push
dec
sub
out
xor
adc
sbb
mov
div
or
or
add
push
xchg
sub
adc
cmp
pusha
add
mov
daa
push
sub
mov
pop
sbb
and
push
xchg
sub
xchg
push
push
and
sub
ins
fwait
and
das
push
adc
sbb
cmp
cmp
scas
xlat
sbb
daa
test
into
(bad)
fild
sbb
cmps
cmp
sub
sub
out
das
sub
cmps
in
out
inc
and
enter
inc
inc
ins
lods
adc
das
out
pop
dec
or
sub
or
inc
dec
enter
lahf
inc
sub
adc
cdq
daa
dec
pop
xor
stos
ins
or
xchg
pop
fldenv
xor
aaa
dec
inc
push
cdq
add
dec
jb
bound
sahf
push
or
pop
xchg
pop
cmp
outs
dec
dec
add
fadd
shl
fisttp
pop
inc
fs
dec
int
mov
dec
adc
dec
dec
inc
xchg
and
inc
xchg
scas
sub
enter
sub
xor
or
push
xor
or
xor
(bad)
and
push
ss
and
pop
adc
xor
jno
pop
cmp
inc
dec
loopne
mov
fdivr
push
in
inc
movhps
inc
pop
nop
xchg
xchg
xchg
pop
push
add
cdq
or
mov
adc
nop
add
nop
or
inc
adc
or
das
test
push
xor
mov
and
adc
add
gs
arpl
jg
adc
adc
sbb
sub
sub
dec
sub
push
sbb
mov
es
add
xchg
inc
dec
xchg
daa
sbb
dec
pop
add
imul
in
push
ja
and
cmp
leave
sub
adc
adc
sub
daa
jno
push
add
sbb
daa
sahf
and
jae
push
xor
je
jb
inc
push
xchg
mov
jb
push
push
ja
pushw
inc
push
outs
jbe
add
cmps
out
cmp
xchg
xor
js
mov
adc
ja
and
movs
ds
je
ret
push
jmp
ds
add
jl
xchg
mov
push
add
add
fiadd
mov
push
sub
jge
push
pop
xor
jle
jg
xor
sbb
xor
sbb
xor
test
bound
arpl
xor
mov
xor
xor
mov
xor
xor
imul
ins
xor
nop
ins
xchg
outs
cs
xchg
test
sub
data16
jbe
push
leave
and
js
jp
cmc
sub
inc
jb
imul
and
xor
and
xor
xor
and
xor
cmp
sub
dec
push
cdq
fs
add
nop
pop
dec
or
nop
dec
or
fs
dec
push
push
addps
pop
adc
adc
popf
push
sbb
data16
sbb
jae
push
and
jne
adc
and
add
in
add
jns
xchg
in
lods
mov
push
mov
jge
daa
pop
lahf
int
out
push
or
sbb
xchg
adc
loopne
cli
add
xor
xchg
push
adc
xchg
test
xor
xchg
xor
mov
mov
push
imul
inc
call
inc
call
xor
mov
xor
xor
xchg
mov
xor
xchg
xchg
push
xor
and
scas
xor
mov
xor
in
cmp
sub
and
shr
sub
sub
sub
aaa
or
movs
cdq
jle
xchg
and
ins
mov
mov
sbb
cwde
setns
mov
call
pop
nop
inc
movs
adc
or
cmps
sahf
cmps
adc
leave
and
sub
inc
dec
adc
or
push
outs
mov
xchg
sub
xchg
cmp
mov
xchg
in
add
test
push
pop
stos
sbb
dec
add
add
aaa
add
popa
inc
fidivr
adc
dec
enter
xchg
test
jns
movs
jmp
leave
sti
sub
sub
scas
cmp
pop
scas
or
or
sbb
sysret
add
addr16
aas
add
mov
mov
idiv
mov
mov
push
adc
mov
xchg
mov
or
bound
push
outs
mov
sub
(bad)
pop
mov
(bad)
sbb
sbb
mov
mov
adc
mov
jle
shl
pop
or
xchg
pop
daa
adc
or
inc
cwde
loopne
lds
(bad)
aas
pop
ins
push
imul
lods
adc
or
pushf
retf
scas
xchg
xchg
and
daa
xchg
int
cmp
into
mov
mov
in
in
mov
ror
in
aad
in
mov
fchs
loop
in
mov
out
sbb
inc
dec
das
cli
add
sbb
shr
xchg
xchg
(bad)
mov
pop
aam
push
add
or
(bad)
adc
add
cmp
ss
adc
add
cs
(bad)
stc
inc
fnstsw
(bad)
push
aaa
push
add
mov
and
leave
popf
call
rcl
add
jg
loope
sbb
jecxz
stos
dec
and
pop
or
dec
mov
sub
sbb
pop
push
inc
xor
jmp
mov
por
pop
lock
aas
dec
in
(bad)
enter
or
inc
pmaxsw
fdiv
adc
dec
aas
lock
or
fs
cmps
nop
dec
hlt
push
test
idiv
and
push
add
clc
pop
push
add
sub
cmps
cli
xchg
movs
nop
sub
inc
pop
dec
dec
adc
ins
cmps
add
push
popa
sbb
mov
dec
ds
mov
dec
leave
add
pop
pop
jb
or
push
sub
xchg
dec
and
mov
or
fcom
inc
and
sub
sub
adc
addr16
jg
sub
fs
or
inc
jle
ja
sub
sub
arpl
push
(bad)
sbb
adc
sbb
inc
mov
inc
mov
sub
xchg
add
test
sub
imul
pop
push
imul
and
imul
and
imul
and
shl
daa
push
imul
sub
imul
mov
jo
punpckhbw
and
ins
das
jo
dec
xor
xor
dec
xor
and
jl
xor
and
cmp
enter
cmp
xor
enter
cwde
dec
xor
and
pushf
inc
push
add
xchg
dec
(bad)
and
xchg
sub
pop
inc
mov
push
dec
imul
dec
xchg
add
mov
jbe
adc
not
leave
xchg
mov
and
sub
or
(bad)
cmp
sub
aam
add
cmp
(bad)
cmp
pop
push
dec
and
ds
push
mov
pop
sub
shr
or
nop
gs
add
inc
or
es
ins
out
xor
enter
pop
dec
add
inc
repnz
xlat
dec
sub
jmp
sub
enter
pop
dec
sub
push
or
push
jg
xor
push
leave
push
or
xor
push
retf
leave
jecxz
xor
xlat
pop
sub
dec
push
pop
sub
in
sbb
sub
bound
and
and
sub
inc
inc
push
leave
push
les
and
dec
dec
and
in
jl
call
pop
mov
pop
dec
add
lock
pop
sub
adc
les
fwait
xchg
gs
add
ds
in
sub
add
add
cdq
nop
add
pusha
dec
and
addr16
lahf
dec
leave
sub
cmp
xor
je
sub
inc
xor
outs
aaa
jo
pop
int
rol
outs
cmp
inc
push
dec
sub
into
pop
jb
pushf
jb
jae
and
adc
sub
xchg
and
ja
jns
cmp
jno
jg
ins
or
dec
push
outs
ins
push
cmp
fmul
test
cmp
jg
pop
jns
or
sub
dec
jb
sub
sub
sub
fs
cmps
mov
dec
(bad)
jg
add
sub
and
inc
pop
fimul
or
mov
sbb
lea
sub
push
mov
and
das
leave
xchg
sub
pop
out
repnz
sbb
ja
sub
xchg
out
cmc
sub
(bad)
pop
rol
push
and
(bad)
ror
out
aaa
and
jmp
and
and
mov
pop
and
enter
daa
xor
leave
(bad)
mov
and
add
enter
movs
fcomp
fldenv
inc
cmps
fld
stos
lods
scas
sbb
test
rcl
and
sbb
push
out
pop
lods
sub
sub
jl
dec
enter
push
scas
pushf
xchg
sub
adc
sub
inc
dec
mov
fmul
sub
inc
or
mov
mov
jle
call
fiadd
inc
call
push
mov
mov
loop
(bad)
jecxz
cmp
xor
mov
aaa
push
shl
out
inc
call
sbb
adc
jnp
(bad)
xchg
sbb
xchg
enter
xor
and
jb
rcl
inc
jb
inc
(bad)
fcomp
and
jb
(bad)
xor
pop
jb
jg
add
dec
dec
(bad)
adc
repnz
stos
add
pop
pop
imul
nop
stos
or
int
(bad)
lea
adc
rcr
push
mov
nop
xchg
or
dec
and
xlat
popa
xor
fldcw
jmp
xor
neg
mov
retf
push
mov
ja
fnsave
scas
fbstp
or
xchg
fs
cs
in
jae
ror
or
out
pop
dec
xchg
xchg
jmp
fs
in
jmp
in
mov
in
out
lock
dec
mov
hlt
xchg
xchg
or
jecxz
pushf
nop
or
dec
out
jle
xor
test
repz
xor
sbb
cli
inc
es
sub
stc
movs
jns
cdq
sti
lock
cld
icebp
movs
sbb
(bad)
repz
pushf
movs
sbb
add
jns
(bad)
in
sub
sub
sub
pop
enter
clc
cs
sub
shl
sub
sbb
add
adc
pop
dec
add
out
adc
xlat
out
push
sub
or
sbb
pop
ja
sub
adc
sub
sub
emms
imul
jg
cli
jmp
sub
jg
adc
inc
inc
adc
js
jno
push
sub
mov
xlat
not
es
add
call
ins
mov
repnz
clc
pusha
pop
and
out
or
popw
bound
ja
cwde
and
(bad)
cmp
add
pop
out
cli
mov
pop
cld
mov
out
outs
dec
leave
sub
and
and
cmp
xor
(bad)
mov
xchg
daa
daa
sub
sub
inc
jb
lea
sub
iret
fs
adc
sub
adc
add
sub
mov
ins
(bad)
imul
enter
aaa
add
add
dec
push
adc
das
test
into
shl
ja
and
adc
sub
add
add
xor
movs
dec
jb
sub
push
jl
xor
mov
adc
or
leave
popa
adc
adc
cmp
jb
push
cmp
sbb
sub
sub
sub
jo
movs
or
leavew
inc
and
cmp
add
mov
add
cmp
inc
cs
dec
ds
sub
enter
cmp
setne
inc
sub
adc
push
add
cli
out
xchg
sqrtps
sub
enter
inc
dec
sub
adc
out
dec
or
push
imul
inc
call
xchg
dec
leave
and
leave
xchg
dec
leave
push
push
push
pusha
mov
imul
shr
push
sub
pop
stos
and
pop
mov
push
dec
push
mov
dec
push
inc
cmp
or
mov
cmp
test
sub
jmp
cwde
fs
test
sbb
inc
cmps
xchg
pop
inc
sub
adc
adc
adc
leave
and
push
addr16
sub
sub
adc
mov
sub
and
xlat
push
add
xchg
pop
fisub
xor
pop
fbld
inc
push
leave
sub
push
xor
sbb
sub
es
push
(bad)
adc
mov
ins
mov
gs
or
ins
dec
jb
or
leave
lea
add
jae
sbb
push
adc
xor
in
sbb
mov
sub
sub
pop
xchg
pop
js
xor
xchg
or
pop
push
push
in
add
sub
jno
push
imul
or
(bad)
fs
push
data16
(bad)
jg
stos
sbb
not
sub
pop
outs
add
or
dec
in
cmp
dec
mov
xchg
push
mov
dec
xor
mov
sahf
dec
push
mov
mov
lea
xchg
xchg
xchg
sub
mov
mov
push
and
aaa
nop
sub
es
in
es
pop
xchg
ja
idiv
scas
xchg
mov
cwde
pop
sahf
mov
pop
add
and
sbb
nop
out
(bad)
adc
pushf
sahf
push
imul
push
imul
and
movs
push
xchg
xchg
movs
daa
cmps
xchg
xchg
sub
xchg
sub
xchg
sub
sub
nop
lods
das
scas
pop
jb
push
iret
scas
mov
add
xor
addr16
jb
push
mov
mov
mov
nop
sbb
sub
sub
sub
cmp
mov
dec
push
leave
shr
lds
sbb
inc
fsubr
sub
and
in
sub
sub
sub
push
leave
and
sub
sub
xchg
inc
jb
sub
sub
sub
in
add
in
sub
xor
fwait
call
dec
mov
or
adc
mov
sub
cmps
sub
push
in
push
cmp
mov
inc
and
dec
pop
or
xchg
pop
ret
pop
inc
pop
sbb
les
dec
sbb
sahf
mov
pop
push
aaa
popa
adc
mov
or
and
enter
inc
repnz
dec
push
and
retf
sub
daa
cmp
int
into
sub
sub
leave
and
shr
sub
sub
push
jb
(bad)
sub
dec
ss
sbb
repnz
pop
xchg
push
repnz
out
add
je
movs
xchg
fcmovnb
fstp
cmps
in
arpl
fild
enter
push
loope
adc
jecxz
and
scas
out
and
pop
jmpw
in
dec
jmp
jne
daa
in
push
sbb
bound
in
cmp
icebp
pop
sub
leave
sbb
scas
repnz
adc
mov
pop
stos
add
shl
adc
dec
cmps
in
add
adc
cmps
push
sbb
push
or
adc
adc
hlt
dec
cmc
test
test
stc
cmp
adc
cmc
inc
hlt
bound
and
sbb
add
inc
aam
std
das
inc
bound
and
sub
cmp
iret
add
nop
xchg
out
add
add
pushw
aas
pop
inc
nop
xchg
data16
inc
nop
xchg
data16
inc
jo
mov
inc
das
or
sbb
jb
xor
adc
sbb
inc
push
sub
xchg
sbb
inc
push
leave
and
sub
jne
cmp
das
cvtps2pi
adc
add
add
sub
sub
and
inc
pop
enter
ins
sbb
sbb
sbb
sub
out
pop
test
mov
xchg
and
jns
add
dec
cs
sub
out
inc
cmp
and
sub
or
daa
sub
or
dec
cmps
in
xchg
sub
or
mov
xor
sbb
sub
or
mov
sub
pop
outs
and
add
xor
xor
add
dec
xor
enter
cmc
ret
adc
dec
ja
ror
push
dec
cmp
cwde
xchg
jecxz
dec
adc
cmp
sar
inc
xor
add
dec
mov
adc
or
inc
pusha
ins
inc
sahf
inc
mov
inc
sbb
inc
inc
xor
pop
outs
inc
sub
or
push
out
inc
dec
xor
dec
push
dec
dec
dec
xor
push
dec
push
dec
xchg
sub
xor
dec
cmp
push
pop
ret
xchg
and
inc
in
test
inc
dec
dec
sbb
or
and
das
adc
sbb
sub
into
bound
and
popa
dec
jb
sub
dec
aaa
pop
sub
adc
push
repnz
push
adc
(bad)
and
out
push
or
jo
leave
push
adc
mov
xchg
cmp
adc
push
popa
sub
(bad)
pop
adc
and
in
adc
add
out
gs
cmp
pop
sysret
jb
cs
sub
xor
imul
imul
xchg
cmps
and
xchg
inc
repnz
outs
sub
nop
sbb
sub
scas
sub
and
sub
fs
outs
sub
or
jno
enter
pop
sbb
sbb
xchg
dec
pop
pop
jno
jne
dec
ja
or
dec
xlat
cmps
jns
add
(bad)
pop
idiv
in
dec
jl
pop
in
cmp
jg
dec
xchg
xchg
pusha
and
and
cmp
cmp
les
xchg
mov
test
xchg
and
jg
rol
mov
sbb
or
popa
add
cdq
data16
nop
xchg
out
xchg
xchg
addr16
xchg
xchg
push
sbb
xchg
push
push
imul
leave
jb
ins
cwde
ins
cdq
jb
xchg
call
mov
push
out
cmps
dec
leave
xchg
dec
test
lods
or
xor
sbb
inc
popf
jl
xchg
or
fbld
arpl
xor
xchg
pop
sub
outs
xlat
mov
sub
daa
add
and
lahf
cmps
inc
leave
add
stos
outs
pop
leave
and
sub
iret
mov
push
test
or
data16
mov
mov
mov
leave
jb
movs
mov
jo
jno
sub
retf
mov
jb
jb
je
jne
or
inc
mov
sub
pcmpgtd
mov
pop
mov
sub
in
mul
pop
(bad)
pop
and
in
movs
ret
out
xchg
rol
or
mov
adc
sbb
ja
shl
nop
mov
scas
ffreep
dec
jnp
in
lds
xor
add
adc
dec
cmps
sbb
test
retf
int3
jbe
daa
(bad)
mov
or
mov
xchg
adc
into
xor
and
outs
iret
cmp
xchg
(bad)
xchg
pushf
in
shr
shr
xchg
sub
push
js
xchg
sub
dec
xchg
arpl
aas
rcl
fmul
rol
add
mov
jb
pop
ja
sub
enter
jp
sub
loopne
jnp
jl
and
and
jge
push
cmps
in
or
cmps
fs
dec
xor
fsub
inc
push
pop
adc
in
out
sbb
sub
and
in
add
xchg
in
sub
pushf
push
sub
adc
adc
adc
(bad)
mov
repnz
cmps
fs
cmc
adc
test
test
xchg
enter
adc
cld
xchg
push
xor
push
imul
(bad)
and
sbb
or
inc
inc
push
xor
ror
mov
xlat
pop
add
push
and
adc
inc
pop
sub
sub
and
and
or
int
lea
xor
cs
xchg
sbb
cs
cs
dec
push
ucomiss
not
cmp
adc
sbb
or
xlat
add
cs
test
mov
fistp
xchg
lods
shl
xchg
add
inc
mov
sbb
sbb
sbb
cs
add
(bad)
pop
test
mov
push
nop
and
(bad)
and
and
adc
push
and
sbb
push
pop
adc
push
jb
ja
and
ret
inc
xlat
sub
sub
xor
xchg
sub
dec
xor
push
xor
xor
test
pusha
adc
jle
stos
test
das
cs
and
push
push
xor
not
outs
cmp
dec
dec
xor
xor
ss
nop
and
adc
aaa
mov
cmp
imul
inc
ins
push
inc
sub
xor
enter
cs
push
test
xchg
adc
cmp
inc
cs
leave
push
xor
inc
enter
adc
xchg
lods
ss
or
mov
sbb
inc
dec
adc
outs
xchg
add
inc
mov
cmp
inc
jle
dec
cs
cs
jb
outs
dec
cs
and
xchg
sub
dec
dec
retf
sbb
inc
inc
pop
pop
and
dec
inc
push
mov
jns
push
cmp
push
mov
push
push
mov
dec
push
push
push
pcmpgtb
outs
push
or
pop
dec
add
push
rol
jb
push
pop
pop
xchg
and
pop
pop
call
jb
out
fwait
adc
adc
pusha
and
pop
or
push
arpl
dec
jb
add
gs
addr16
xor
add
popf
xor
mov
ins
(bad)
push
pushf
nop
cmp
jl
pop
leave
or
jo
add
or
jae
je
adc
cmp
push
xor
cs
xchg
pushf
in
cs
jns
push
and
jnp
mov
sbb
jl
jge
jno
dec
jb
cs
sub
nop
sbb
scas
sub
cs
xchg
jbe
outs
sub
mov
or
jb
jne
jo
out
xchg
cmp
daa
(bad)
mov
inc
fs
pop
mov
cmp
in
mov
loopne
(bad)
movs
nop
dec
repnz
movs
jg
cs
and
cmps
adc
dec
push
leave
xchg
cs
cs
cs
sbb
inc
call
or
push
xchg
test
test
and
or
outs
xlat
cdq
and
xor
fisub
fwait
pop
dec
popf
add
nop
mov
sbb
cdq
inc
mov
nop
movs
movs
cmps
cdq
xchg
sub
push
nop
sub
dec
push
test
cmps
mov
rcr
add
(bad)
pop
xchg
sub
mov
mov
scas
movs
jns
test
adc
dec
mov
mov
ja
fcom
outs
mov
sbb
adc
das
lods
das
scas
mov
mov
cs
mov
iret
mov
addr16
mov
push
mov
fwait
shl
add
and
adc
dec
mov
add
ret
or
pop
sub
(bad)
mov
jg
xchg
xchg
sbb
enter
mov
adc
pop
retf
sbb
xor
int
mov
ins
leave
iret
pop
xlat
jns
and
cs
adc
enter
fs
push
fs
aad
sbb
cmps
mov
and
xlat
outs
(bad)
or
lock
sahf
fisubr
add
or
dec
leave
or
mov
adc
xchg
xlat
loope
in
stos
jg
in
mov
or
xor
enter
sub
or
out
adc
mov
cs
cmps
cmp
loope
call
shr
(bad)
add
scas
jmp
in
addr16
jb
test
cs
mov
add
out
out
(bad)
int
int
lock
(bad)
int
repnz
inc
jb
cs
imul
nop
out
xchg
daa
in
in
push
es
sub
push
mov
nop
pop
movs
lods
dec
xlat
clc
daa
sbb
push
cli
addr16
push
add
adc
or
jns
cmp
dec
sbb
rol
ret
ror
ret
add
add
or
lds
add
mov
or
leave
or
or
add
retf
adc
or
push
leave
and
or
push
das
adc
inc
xor
adc
not
nop
sbb
das
push
das
sbb
and
and
sbb
sbb
cs
push
leave
push
das
and
out
repnz
aas
push
leave
rol
mov
pop
and
add
bound
das
(bad)
and
scas
pop
mov
cmp
and
pop
neg
das
pop
and
in
push
sbb
pop
push
repnz
dec
neg
push
mov
pop
invd
mov
dec
inc
and
outs
dec
cmps
sub
sub
inc
repnz
add
das
int3
sub
fimul
adc
sbb
nop
pushf
into
adc
outs
add
dec
iret
adc
pusha
out
daa
sbb
and
popf
add
cmps
xchg
lahf
rcl
push
in
xchg
inc
sub
dec
sahf
fs
sub
add
mov
mov
adc
jp
ins
dec
or
iret
aad
xor
fadd
pop
or
xchg
jl
sub
push
addr16
xchg
xchg
pushf
cs
xor
fcomp
add
add
das
xor
(bad)
dec
push
cmps
xor
fcmove
cmp
cli
xor
into
in
daa
jns
das
ss
cmp
and
inc
xchg
aaa
aas
push
or
push
xchg
xchg
fdivr
fnstsw
leave
loope
ficom
aaa
cmp
inc
jb
inc
das
inc
das
lods
(bad)
pusha
nop
mov
sbb
xchg
push
inc
repnz
or
cmp
out
das
cmp
inc
shr
pop
(bad)
inc
adc
xchg
or
inc
cmova
and
enter
or
or
loopne
loope
dec
ror
loop
dec
dec
xchg
dec
leave
xchg
push
push
imul
stos
push
xchg
inc
ds
das
dec
push
nop
sub
push
dec
js
pushf
not
push
das
xchg
push
inc
test
fs
dec
jb
das
pop
das
jecxz
or
in
inc
call
out
xor
out
call
pusha
fisttp
sub
bound
inc
call
sub
jns
retf
das
das
ss
and
das
das
and
cmp
inc
je
jb
push
leave
jbe
js
jp
xor
add
push
addr16
stos
sub
imul
xchg
cmp
mov
push
imul
jb
imul
fsubr
stc
or
add
and
jae
pop
xlat
ja
xor
or
das
ins
sub
adc
jnp
jge
inc
aaa
icebp
xchg
jle
das
fucomip
or
and
(bad)
mov
nop
das
sub
dec
enter
jge
mov
das
test
xchg
mov
out
adc
pop
mov
pop
push
int
sub
xor
mov
pop
inc
repz
hlt
xor
xor
mov
(bad)
div
xor
nop
not
adc
xor
xchg
sti
xchg
cld
xor
xor
xchg
std
xchg
(bad)
xor
call
ins
dec
call
sbb
add
dec
xor
in
sbb
mov
and
and
movs
das
cmps
das
jb
push
leave
test
stos
das
lods
das
nop
sbb
inc
scas
das
mov
cmp
in
das
mov
mov
dec
push
leave
and
dec
inc
jb
das
mov
xchg
rol
cmp
retf
cmps
and
jg
xchg
nop
inc
call
sbb
fmul
cdq
inc
movs
add
adc
mov
dec
enter
nop
sub
and
and
and
or
or
sbb
mov
add
cmp
inc
ret
test
mov
es
test
(bad)
adc
fs
call
inc
enter
int
and
shl
xchg
jl
add
add
add
dec
push
and
iret
aam
mov
inc
inc
push
leave
xlat
das
push
adc
xchg
cmp
ja
adc
mov
adc
adc
enter
das
fcmovnu
fmul
or
fmul
and
mov
or
nop
out
add
or
or
push
adc
xchg
xor
daa
adc
adc
(bad)
fs
adc
repnz
fisubr
fistp
das
jno
cmp
adc
or
loopne
adc
dec
xor
push
jecxz
in
dec
xor
in
out
dec
xor
out
call
xor
sbb
sbb
xor
jmp
in
aaa
push
cmp
in
pop
out
and
and
repnz
rol
das
mov
dec
mov
das
das
dec
mov
dec
das
das
jo
mov
xor
add
inc
jb
push
xlat
push
xor
rcl
(bad)
or
jns
fdivp
dec
adc
add
repz
das
dec
enter
not
fidivr
and
pop
pop
call
in
dec
adc
adc
pop
dec
and
and
dec
add
rcl
sub
sbb
xor
dec
push
inc
es
das
push
xchg
inc
or
mov
ss
das
or
dec
daa
cmp
cmp
xor
xor
xor
add
and
wrmsr
dec
add
data16
ins
ins
(bad)
pop
inc
or
adc
dec
and
mov
data16
adc
lods
in
dec
or
adc
fcom
lods
or
adc
xchg
sub
xor
sbb
xor
enter
iret
sub
adc
xchg
jno
lahf
xor
int
sub
pushw
sbb
inc
call
sub
pop
and
xor
and
or
imul
and
push
xor
xor
and
into
daa
xor
xor
push
leave
sub
sub
xor
xor
xor
and
in
xor
xor
inc
jb
inc
cmp
imul
inc
mov
mov
mov
in
mov
dec
enter
adc
or
das
popa
adc
and
pop
sub
add
mov
push
sub
xor
add
(bad)
cmp
cmp
inc
dec
ins
or
(bad)
sub
aas
inc
dec
les
cmps
in
daa
cmp
inc
xor
inc
push
and
jb
xchg
sbb
xor
dec
xor
xor
pop
nop
sbb
inc
dec
xor
xor
movs
in
xor
and
xor
nop
xchg
push
out
cmps
dec
nop
mov
fwait
adc
nop
add
fs
out
push
xchg
dec
cmps
in
add
push
imul
xchg
cmp
ss
ss
cmp
pop
aaa
pop
into
cmp
sub
xor
adc
pop
out
push
(bad)
and
sbb
pop
ins
ret
sub
lods
movs
nop
xor
pusha
shr
test
bound
in
mov
xor
inc
mov
fs
imul
xchg
arpl
fadd
test
fs
xor
xor
cmp
xor
cmp
cmp
jo
ja
or
dec
imul
in
sub
inc
sbb
pcmpeqw
and
jbe
xor
mov
jp
cli
lods
xor
inc
dec
pop
jge
xchg
sbb
fist
daa
xor
les
xlat
add
mov
inc
fild
pop
inc
jb
ficom
xchg
inc
adc
xchg
pushf
mov
pushf
call
adc
leave
out
mov
inc
adc
inc
jl
mov
xchg
mov
dec
lea
movs
cdq
inc
(bad)
dec
jae
out
xchg
dec
xchg
add
and
cmp
xchg
or
rcr
daa
xchg
(bad)
aad
inc
jg
retf
cmp
dec
xchg
xor
(bad)
ins
cmp
daa
add
cmp
ret
into
add
cdq
xchg
add
nop
fwait
fwait
pushf
nop
xchg
add
sbb
dec
sahf
fbld
pop
dec
mov
and
xlat
inc
push
repnz
push
push
pop
and
dec
mov
pop
add
dec
scas
add
movs
iret
cmps
in
cmp
dec
xchg
add
in
push
stos
lods
cmps
sbb
movs
lods
pop
aad
mov
or
mov
pop
mov
scas
xor
popa
adc
push
mov
mov
and
add
mov
adc
add
add
and
xor
mov
mov
aad
int
mov
mov
dec
pop
mov
cmp
add
push
shl
jmp
xor
adc
lahf
repnz
cmps
fadd
idiv
ret
fs
pop
sbb
(bad)
lds
xor
das
(bad)
xor
pop
adc
push
sub
stos
ret
aaa
retf
mov
int3
pop
retf
in
in
int
into
es
ja
(bad)
dec
inc
enter
not
ror
adc
add
push
pop
scas
ds
leave
stos
movs
scas
pusha
adc
adc
enter
adc
and
arpl
add
sub
fdiv
xor
cmp
xor
in
add
xor
xor
inc
cs
in
mov
xor
mov
xor
dec
pop
imul
dec
mov
in
popa
pusha
cwde
nop
out
iret
jmp
out
in
cdq
inc
es
arpl
in
add
nop
add
out
xchg
sub
push
nop
sub
dec
push
imul
jns
ins
pop
out
inc
enter
out
and
ret
rcl
add
cli
sti
dec
std
xor
jb
cmps
aas
adc
add
cld
out
(bad)
gs
and
inc
call
int
int
push
lods
int
push
push
add
xchg
nop
sbb
xor
xor
xor
and
and
xor
xor
sti
cli
add
(bad)
jb
fadd
and
add
mov
inc
and
or
dec
in
das
jns
xor
xor
sbb
or
jno
out
ins
push
ins
xor
xor
dec
pop
outs
sbb
xor
jo
jno
xor
and
and
xchg
xor
dec
ds
sbb
push
mov
dec
ret
(bad)
push
imul
lds
xor
ror
dec
movd
in
adc
and
ja
or
mov
jb
adc
xor
jb
dec
sub
jb
xor
sub
and
ins
inc
enter
adc
aam
(bad)
xor
pusha
inc
into
push
add
outs
jne
add
jbe
pop
cs
xor
js
jns
in
xchg
or
adc
daa
cmp
lahf
or
jnp
test
and
adc
sub
ss
sub
sub
xor
push
sbb
sub
daa
cmp
sub
xor
xor
adc
and
xor
add
mov
jp
leave
xchg
jl
not
adc
xchg
dec
rcl
test
aaa
out
cmp
cmp
and
xor
xor
xchg
mov
sub
xor
adc
cmp
and
xor
enter
inc
xor
push
jb
dec
dec
push
in
daa
jns
xor
dec
xor
inc
xchg
imul
es
push
xchg
xchg
in
pop
dec
dec
push
xchg
or
pop
push
or
test
xor
out
pop
pop
xor
and
adc
nop
or
adc
push
sub
nop
xchg
pop
nop
pop
xchg
nop
xchg
pop
xchg
pop
xchg
shl
pop
xchg
pusha
xchg
adc
and
or
popa
xor
dec
push
leave
and
xor
xchg
inc
jb
xor
ins
xor
cmps
in
outs
xor
push
stos
fwait
ret
xor
push
mov
pop
push
pop
push
stos
sub
fs
pusha
fcmovne
movs
cmps
pop
sub
xor
adc
mov
data16
fldcw
xor
and
inc
xchg
add
xor
pusha
mov
mov
or
shl
push
inc
cmps
jo
mov
xor
push
xor
jne
inc
inc
retf
imul
scas
jp
call
xor
in
jnp
das
ret
xor
xchg
push
push
add
add
ret
cmps
mov
add
and
cwde
addr16
pop
outs
dec
cdq
sub
popa
imul
sahf
addr16
or
add
sbb
sahf
sbb
sbb
movs
sbb
movs
sbb
jl
cmps
movs
mov
adc
xor
rol
imul
(bad)
xchg
int3
ss
pop
sbb
adc
and
aam
fsub
adc
and
fdiv
and
xor
loopne
inc
xor
or
sbb
retf
inc
mov
cmp
add
ss
ret
and
lods
cmps
(bad)
dec
ds
inc
mov
dec
inc
imul
xchg
xchg
xchg
lods
xchg
lods
xchg
arpl
scas
xchg
ins
xor
push
sub
mov
fstp
adc
imul
mov
sbb
sahf
xor
jae
mov
lahf
shl
es
mov
jae
cmp
jmp
movs
xor
dec
mov
push
jmp
mov
fwait
cmp
test
daa
test
xor
mov
mov
inc
outs
imul
scas
aas
mov
daa
sbb
mov
mov
mov
ja
rol
ds
enter
inc
movs
lods
fistp
into
shl
fs
(bad)
es
es
fadd
fs
fsubp
sbb
fs
mov
push
popa
test
rcr
mov
xor
shl
rcr
bound
(bad)
out
scas
pop
scas
nop
push
into
sub
mov
or
fcomp
ret
pop
ss
fwait
pop
mov
pop
aam
inc
popf
(bad)
out
fs
scas
xor
mov
pop
or
fisttp
mov
pusha
daa
(bad)
in
mov
push
sub
cdq
mov
mov
mov
cmp
adc
adc
adc
adc
repnz
add
bound
cmp
xor
es
sub
adc
or
daa
(bad)
retf
jb
inc
leave
or
inc
inc
cmp
sub
and
cmp
adc
iret
pop
repnz
mov
rol
rcl
fisub
dec
xchg
aad
and
out
xlat
mov
dec
mov
xchg
cwde
das
frstor
or
(bad)
imul
in
fcmovbe
lods
mov
stos
mov
addr16
out
fcmovnu
inc
sahf
fucomip
sub
cmp
jmp
xor
adc
adc
dec
enter
adc
adc
int
stc
nop
imul
push
out
sub
out
xchg
int
and
xor
jbe
enter
cmp
pop
xor
xor
xlat
mov
mov
popa
mov
pop
dec
sbb
sbb
xor
ret
inc
shl
and
dec
xchg
xchg
sub
sub
aam
xor
mov
repnz
aad
(bad)
xor
xor
hlt
xlat
cmc
fcom
xor
fincstp
dec
or
scas
xbegin
xchg
xchg
retf
enter
or
xchg
in
(bad)
(bad)
push
fdiv
add
and
fnstsw
dec
fimul
add
fimul
add
fistp
add
nop
ss
dec
add
dec
pop
mov
loopne
or
xchg
ss
or
or
loope
js
xchg
mov
xor
xchg
inc
jecxz
daa
in
inc
inc
pmulhw
and
adc
mov
and
sbb
jno
es
sub
cmps
or
sbb
xchg
inc
test
jg
push
cmp
xor
fs
dec
xor
dec
push
and
and
dec
push
cdq
cmp
cmp
xor
xor
adc
inc
mov
xor
cmp
or
leave
mov
and
inc
xor
and
and
and
push
xchg
or
leave
pusha
push
fs
or
push
xchg
pop
add
or
sbb
sbb
xchg
add
sbb
adc
dec
jae
push
jmp
pop
and
push
xor
fadd
shl
rcl
sub
sbb
push
push
jmp
inc
or
pop
(bad)
cmp
sub
xor
in
or
in
imul
cmp
xor
lock
mov
scas
add
add
xor
lahf
pop
xor
stos
mov
mov
out
les
xchg
in
and
push
pop
add
and
inc
pop
nop
mov
inc
mov
mov
mov
dec
and
dec
xor
and
inc
sub
inc
mov
xor
(bad)
addr16
ins
and
bound
xchg
sbb
and
xor
push
repnz
sbb
(bad)
cmp
or
lea
cmp
pop
inc
sub
ror
cmps
inc
push
stc
pop
add
inc
push
jb
pushf
nop
inc
sub
dec
xor
push
xor
dec
daa
and
aaa
dec
or
and
adc
fist
and
xchg
and
cs
push
aas
push
scas
test
pop
stc
mov
rcl
outs
dec
add
ss
and
cli
add
adc
nop
out
movs
xor
popa
mov
daa
add
fdivr
leave
and
pop
clc
mov
add
pop
stc
mov
into
or
push
imul
ror
or
cld
arpl
ror
or
(bad)
jmp
adc
movs
sbb
movs
sbb
push
ss
sbb
ins
pop
outs
dec
xor
rol
outs
xor
leave
dec
jno
jb
jae
xor
shl
je
mov
leave
dec
jbe
ja
or
xor
cs
jns
adc
xchg
es
out
fst
jl
inc
fisub
in
jle
or
or
imul
or
inc
add
test
push
xchg
xor
xchg
js
in
mov
adc
push
lea
adc
inc
mov
adc
or
xchg
push
adc
xchg
jmp
ins
dec
xchg
daa
pop
adc
fs
dec
sbb
test
es
daa
sbb
sbb
enter
sbb
lahf
push
mov
push
jl
mov
popf
and
nop
or
sbb
or
ins
enter
outs
jo
dec
enter
jbe
pop
es
jp
or
es
ja
mov
test
dec
jb
push
leave
xchg
mov
mov
(bad)
mov
sbb
(bad)
in
sbb
ss
ss
ss
and
xchg
mov
xor
adc
sbb
inc
repnz
ss
ss
ss
xchg
pop
lahf
and
and
fsub
inc
mov
or
xor
cmp
ror
test
push
leave
mov
mov
dec
xor
and
and
inc
sbb
leave
mov
cmp
and
mov
jo
je
or
leave
and
jl
add
xor
fistp
xchg
adc
adc
and
addr16
aad
and
call
and
inc
cmp
and
xor
loop
fwait
inc
sub
imul
sub
sahf
jnp
das
adc
push
retf
push
iret
mov
ret
xor
xchg
ret
xor
inc
or
mov
leave
movs
jg
adc
adc
cmps
xor
xor
adc
adc
adc
pop
push
leave
dec
push
stos
xor
sbb
stos
xor
dec
cmp
xchg
ret
pop
scas
xor
mov
mov
aad
sbb
(bad)
mov
pop
inc
pop
xchg
or
or
mov
sbb
push
mov
xor
mov
repnz
cmp
int
lods
adc
and
mov
and
sub
(bad)
ret
ds
nop
add
jbe
daa
xor
enter
int
inc
cmp
sbb
xor
inc
dec
inc
rol
push
sbb
(bad)
inc
nop
xchg
xchg
inc
push
fadd
fs
fild
inc
push
sbb
in
push
cmp
call
and
daa
addr16
push
inc
call
inc
call
inc
call
push
imul
cs
retf
or
cs
adc
xchg
ss
push
int
push
into
arpl
push
shl
cs
rcl
pop
xor
xor
rcr
pop
in
sbb
push
dec
cmp
pop
adc
pop
pop
fcom
or
pop
push
(bad)
movs
pop
ficom
nop
xchg
fsubr
(bad)
frstor
xchg
data16
nop
xchg
data16
loope
leave
xchg
data16
jecxz
push
inc
fisub
int
imul
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
nop
mov
xchg
jnp
jl
xchg
data16
jge
jle
xchg
data16
jg
sub
clc
mov
cmp
xchg
std
daa
inc
inc
push
in
adc
cmp
inc
enter
test
enter
xchg
xchg
test
repnz
mov
cld
xor
enter
add
fs
es
pop
mov
dec
outs
or
dec
mov
dec
or
outs
(bad)
adc
adc
pop
and
sbb
cdq
nop
mov
sbb
pop
and
in
xor
sub
jo
pop
leave
adc
dec
loop
and
daa
fld
and
pushf
sbb
add
enter
cs
fwait
xor
movs
dec
xor
pop
xor
test
sbb
cmp
dec
cmp
inc
test
inc
inc
enter
dec
dec
dec
adc
test
jecxz
inc
adc
and
or
pop
sbb
and
xor
pop
adc
and
popa
arpl
shl
arpl
shl
xor
add
lea
sub
adc
add
xor
inc
fidiv
int
cmp
imul
shl
inc
dec
dec
(bad)
inc
push
imul
fs
pushw
mov
repnz
dec
repnz
xor
xor
or
inc
pop
pop
inc
mov
enter
adc
ss
lahf
pop
xor
or
fsub
daa
adc
push
or
(bad)
adc
sbb
sbb
adc
mov
jg
xchg
and
xchg
es
or
cs
or
xor
mov
seta
(bad)
ins
adc
cwde
adc
cmp
adc
imul
push
imul
pop
sahf
ja
fs
out
xor
repnz
sbb
movs
sbb
sbb
push
sbb
and
movs
sbb
movs
sbb
movs
sbb
dec
jae
(bad)
adc
lods
sub
xchg
xchg
scas
sub
nop
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
int
int
icebp
add
repnz
call
xor
call
popa
cmp
iret
cmp
(bad)
cmp
scas
cmp
cmp
mov
mov
cmp
sbb
movs
sbb
movs
sbb
imul
rol
pushf
ins
push
inc
lods
add
ret
ror
or
les
in
inc
push
xor
(bad)
dec
daa
test
mov
dec
leave
push
retf
enter
push
push
loop
mov
push
xor
push
into
int
inc
repnz
jmp
push
into
pop
fs
outs
xchg
xor
pusha
bound
fs
es
fs
push
fs
es
jo
pop
jb
es
xor
and
or
pop
push
xchg
and
xor
and
sbb
cmp
sub
adc
sub
das
sbb
xor
sbb
xor
fs
cmp
mov
fs
sbb
sbb
inc
jg
xchg
or
and
dec
adc
leave
and
dec
dec
inc
es
dec
push
repnz
push
adc
xchg
mov
xor
pop
and
push
pop
mov
sbb
enter
mov
mov
enter
mov
test
rol
or
(bad)
adc
popf
nop
enter
pusha
push
loop
iret
adc
push
dec
xor
mov
sar
sbb
pop
xor
add
sbb
xor
adc
sbb
pop
inc
(bad)
or
add
outs
fs
mov
or
adc
ret
xchg
pop
xor
adc
pop
or
add
pop
adc
jmp
scas
push
lea
pop
pop
xor
xor
dec
mov
cmp
daa
in
adc
adc
adc
enter
fsubr
sbb
push
fld
push
push
fild
inc
outs
test
loope
sbb
loop
sbb
js
xlat
pop
mov
add
pop
xor
inc
sub
mov
daa
popa
xor
arpl
inc
push
mov
fild
add
fsub
enter
xor
mov
fsubr
outs
dec
jno
rol
outs
dec
jae
cmp
xor
jne
leave
add
ja
xchg
loopne
adc
pop
jecxz
inc
ss
push
add
jb
int
sub
in
repz
call
add
(bad)
jmp
inc
inc
jmp
jp
push
jnp
dec
xor
jl
jge
dec
xor
jle
jg
dec
xor
sub
out
dec
xor
xor
icebp
dec
xor
test
test
mov
dec
xor
int
in
mov
int
int
addr16
push
daa
fwait
inc
call
xor
test
xor
xchg
stc
adc
cli
xchg
pop
xchg
sbb
xchg
call
push
fwait
inc
cdq
add
add
xor
fwait
add
popf
add
add
lahf
xchg
mov
jne
mov
(bad)
xor
and
mov
pop
xor
test
fs
lods
and
scas
xor
mov
xor
cdq
nop
or
or
xchg
or
push
xor
xor
nop
push
xor
pop
and
pop
mov
sbb
sbb
xor
adc
jmp
and
xor
out
icebp
xor
adc
repz
not
xor
adc
sti
std
and
xor
(bad)
call
xor
nop
or
or
and
xchg
or
or
adc
outs
or
leave
xor
imul
movs
push
adc
xor
xor
loope
cwde
inc
loop
in
adc
mov
xchg
ja
xchg
dec
ins
and
xchg
pusha
sub
sbb
pop
xchg
xchg
push
les
scas
dec
and
inc
dec
ror
jns
mov
shl
mov
mov
xchg
imul
xor
mov
popa
ret
xor
mov
mov
movs
out
add
inc
adc
and
ss
push
mov
mov
rol
dec
ss
rol
shl
rcl
fcmovb
and
push
mov
dec
mov
(bad)
fisttp
push
imul
pop
pop
push
imul
sbb
into
cmps
iret
cmp
cs
adc
adc
and
rcl
adc
xor
jo
dec
mov
aad
bound
xlat
sbb
fcmovnbe
es
add
xchg
rol
jecxz
imul
stos
and
cmps
imul
jb
es
sbb
repnz
xor
pop
hlt
idiv
rol
jns
out
out
sbb
and
ss
sbb
xor
arpl
add
pop
lods
adc
adc
adc
push
je
xor
pop
div
mov
and
or
fadd
nop
fcmovu
sub
and
test
bound
cmp
xor
xor
jb
push
in
and
jns
aas
push
call
ins
add
daa
cmp
jmp
sbb
adc
leave
or
sbb
adc
and
and
inc
ja
sub
sub
repz
mov
sbb
xchg
sbb
es
test
push
sti
pop
push
sub
pop
xor
fild
mov
xor
psubusw
push
leave
add
not
scas
add
add
push
sbb
xor
fcmovb
add
xor
and
or
sbb
in
je
pop
and
xor
dec
push
in
push
pop
inc
ror
aas
push
mov
xor
adc
and
repnz
or
adc
repz
cmps
push
dec
sar
pop
adc
and
adc
test
(bad)
xchg
push
out
pop
xor
xor
mov
add
sbb
fwait
bound
enter
xor
add
outs
movs
ja
inc
add
cmp
xor
xchg
inc
jg
pop
inc
ds
xor
in
dec
sbb
es
pop
xchg
iret
and
and
iret
(bad)
sbb
sub
bound
and
and
cmp
adc
adc
daa
aam
sbb
pop
mov
aam
sub
sub
and
sbb
push
test
sahf
xor
and
leave
cs
popa
daa
and
and
dec
cmps
sbb
and
pushf
in
cmps
aas
daa
xor
xor
xor
adc
mov
sbb
das
sub
adc
out
mov
fbstp
jb
pop
xchg
or
xor
jb
inc
cmp
pop
add
adc
das
sbb
adc
dec
or
mov
data16
and
push
or
fs
xor
into
and
inc
push
xor
xor
xor
scas
xor
inc
add
pop
aaa
and
push
addr16
push
adc
xor
stos
(bad)
test
xor
sub
or
xor
push
outs
xchg
mov
inc
xor
stos
inc
push
inc
inc
dec
xlat
inc
inc
inc
cmp
inc
jo
inc
or
dec
pop
test
mov
test
dec
dec
or
and
sub
aaa
loope
in
push
sbb
push
sub
push
xor
jns
or
xor
jb
dec
enter
adc
adc
pushf
nop
adc
adc
adc
and
in
adc
adc
adc
dec
enter
ds
nop
adc
adc
adc
adc
daa
in
inc
adc
adc
enter
adc
adc
adc
adc
inc
adc
adc
mov
dec
addr16
adc
pop
(bad)
leave
imul
cmp
adc
ret
bound
arpl
add
pop
cmp
add
out
xor
jns
xor
xor
xchg
mov
dec
not
mov
and
dec
jg
fwait
fs
push
out
xor
push
int
out
dec
data16
push
and
dec
push
shl
push
imul
cmp
mov
ins
push
nop
ss
sbb
push
outs
cs
and
leave
data16
adc
inc
call
push
dec
sbb
jne
ret
je
xor
ja
in
jmp
js
cmp
or
xor
xor
jb
push
scas
jl
jge
jle
(bad)
xor
dec
jg
sbb
ins
push
and
xor
mov
or
mov
sbb
pop
test
mov
mov
xor
mov
arpl
and
(bad)
adc
inc
xlat
ret
lds
adc
adc
leave
retf
xor
int3
into
xor
cwde
sbb
sbb
xor
add
add
adc
dec
mov
mov
rcr
fist
pop
aas
fidivr
and
fsub
jb
fsubp
pop
ins
inc
sbb
jecxz
sbb
dec
in
scas
pop
or
in
cmp
leave
ja
xor
xchg
pop
adc
sbb
leave
leave
xor
arpl
(bad)
mov
lea
nop
mov
xchg
(bad)
cs
xchg
jl
in
adc
xchg
pop
adc
push
add
xchg
push
mov
push
(bad)
pop
adc
adc
xor
xchg
popa
xchg
push
jmp
xchg
inc
xor
sbb
imul
xor
(bad)
fistp
pop
fistp
es
das
(bad)
mov
mov
mov
mov
xchg
sub
stos
sbb
xchg
scas
adc
scas
call
mov
imul
je
addr16
add
push
ss
sti
push
imul
and
xchg
cs
mov
inc
shld
cwde
sbb
inc
push
push
fild
pop
lahf
dec
lods
mov
scas
cmp
ins
(bad)
aaa
mov
bound
(bad)
push
adc
fbstp
(bad)
scas
mov
lods
fs
fs
in
add
mov
dec
shl
rol
enter
ins
outs
or
cmps
in
xchg
or
inc
xchg
dec
pop
enter
xchg
xor
ja
sbb
nop
repnz
fbld
and
sbb
(bad)
rcr
rol
aad
aad
inc
pop
leave
inc
mov
movs
stos
fs
das
sub
mov
aaa
stos
pop
and
cmp
loopne
loop
daa
in
and
xchg
xchg
out
cwde
mov
inc
ret
enter
push
jmp
dec
popa
jmp
xor
mov
inc
add
inc
es
inc
hlt
inc
cmps
nop
or
shr
pop
or
das
dec
cld
stos
cwde
xor
jbe
dec
dec
adc
xchg
add
xchg
xor
jbe
dec
pop
jg
call
(bad)
adc
or
dec
dec
dec
jo
jg
xor
fistp
fs
adc
pop
aaa
nop
pop
adc
in
repnz
pop
add
xor
inc
cs
je
add
cs
push
pusha
imul
mov
cdq
sbb
xor
jns
scas
das
sbb
cmp
and
cdq
inc
outs
xchg
pop
pop
add
cmp
and
int3
les
outs
and
addr16
xor
out
and
xor
mov
jbe
add
and
ja
pop
adc
xor
cs
xor
xor
mov
xor
adc
or
inc
dec
cs
cmp
inc
mov
(bad)
adc
mov
aaa
aas
xor
out
ds
mov
fild
inc
jb
mov
pop
xor
add
dec
pop
jb
add
or
dec
xor
push
fisttp
push
aaa
xchg
inc
dec
enter
movs
xchg
iret
and
xor
pop
lahf
xor
jg
adc
sbb
sub
pop
pop
xor
xchg
add
sub
push
fcomp
xor
popa
les
or
pop
and
movs
into
fs
add
outs
xor
pop
scas
jg
xor
add
and
adc
xor
jnp
inc
in
pusha
inc
jl
dec
xor
mov
ret
bnd
push
jg
add
adc
push
or
sahf
imul
xor
xor
xor
xor
outs
xor
add
jb
xor
sbb
xchg
adc
mov
push
sub
mov
xor
add
push
xor
fwait
mov
fwait
jnp
imul
sub
inc
nop
add
or
test
stos
lods
inc
add
data16
mov
mov
mov
dec
or
outs
ins
xor
cmps
aaa
fisub
stos
dec
fmul
mov
jp
add
xor
dec
sub
adc
dec
and
add
xchg
adc
rcl
add
mov
loope
push
mov
loop
leave
test
and
xor
retf
call
xor
lea
nop
scas
and
xchg
xchg
stos
push
stos
add
pushf
push
(bad)
repz
in
adc
xor
sbb
mov
mov
xor
dec
scas
repnz
xor
adc
ss
mov
cdq
dec
pop
push
loop
fidiv
aaa
pushf
(bad)
rcl
sahf
jg
push
push
jne
mov
sbb
movs
in
mov
mov
cmp
push
xchg
fild
sbb
stos
(bad)
into
or
lods
add
scas
(bad)
dec
aad
in
ss
repz
imul
push
mov
sub
mov
jns
(bad)
call
adc
xchg
or
xchg
mov
or
adc
adc
lds
(bad)
scas
push
das
dec
dec
and
in
not
or
dec
push
retf
not
or
out
int
pop
and
iret
into
xor
nop
dec
mov
sar
xor
dec
scas
adc
add
aam
bound
(bad)
xchg
fst
and
sub
sbb
scas
(bad)
fist
loopne
xor
mov
xor
push
jb
out
nop
imul
mov
imul
aas
test
stc
pop
add
nop
neg
inc
enter
cli
xor
or
dec
cs
xor
dec
cmps
lahf
out
xor
jns
xor
dec
push
dec
addr16
jg
pop
movs
or
inc
fcmovu
pop
xor
repnz
mov
or
pop
mov
xchg
imul
stc
adc
jne
fisttp
test
inc
push
mov
cs
inc
lods
fisttp
dec
inc
dec
ror
add
push
repnz
mov
out
add
and
or
cmp
lds
xor
mov
(bad)
mov
and
sbb
mov
push
jb
inc
iret
push
adc
repnz
cmps
adc
adc
adc
adc
add
loopne
cmps
cmps
push
adc
adc
adc
mov
sbb
dec
sbb
adc
mov
push
dec
adc
and
inc
and
dec
cmps
fisubr
cdq
xlat
sub
add
lods
xchg
pop
sub
addr16
push
(bad)
les
push
jb
addr16
jg
mov
xor
nop
xchg
les
xlat
aaa
add
movs
lahf
cmp
or
ja
inc
dec
enter
and
lahf
loopne
leave
or
ss
in
test
nop
mov
inc
and
enter
add
leave
add
dec
inc
dec
xchg
or
sub
dec
sub
cmp
xchg
pop
push
mov
(bad)
push
ss
sbb
xor
pop
add
inc
add
pop
add
add
pop
jg
cmps
xchg
or
jg
scas
and
cwde
cmps
bound
call
inc
xor
jb
jmp
push
enter
jno
pop
imul
add
imul
xor
ins
dec
outs
test
xor
jno
xchg
cmps
jae
and
and
and
in
xchg
ja
add
pushf
nop
mov
xor
push
jb
jg
sbb
dec
mov
xor
push
xchg
xor
mov
jmp
mov
xchg
rcr
mov
iret
mov
pop
mov
or
dec
(bad)
mov
push
cmps
nop
adc
and
xchg
xchg
cmps
das
xchg
xchg
mov
push
and
add
adc
das
cwde
call
pushf
idiv
aas
mov
pop
mov
or
movs
pop
rol
aaa
add
test
add
and
stos
imul
iret
lods
xchg
inc
sub
xchg
sbb
enter
and
push
inc
and
mov
movs
xchg
(bad)
mov
add
mov
and
mov
nop
mov
or
dec
lds
ins
ret
aas
ds
ss
fiadd
dec
and
xor
rcl
dec
fimul
sub
das
(bad)
retf
sbb
pop
inc
cmp
mov
int
dec
mov
mov
iret
jp
adc
sbb
ss
nop
and
shr
jo
ja
dec
push
movs
push
xlat
ss
das
or
(bad)
adc
or
(bad)
in
popf
xor
adc
jecxz
ret
push
mov
cmp
jmp
ss
out
mov
in
lahf
out
stc
xor
mov
add
ss
and
add
test
sbb
int
jmp
fnstenv
and
xchg
pushf
add
in
ss
ss
leave
mov
ins
push
in
out
lock
repnz
movs
push
xchg
hlt
xchg
cmc
ss
jb
sub
div
div
imul
pushf
or
cli
ss
sti
xor
cmp
call
out
daa
(bad)
fsubr
lahf
sbb
pop
or
cdq
nop
or
or
or
cdq
nop
or
enter
fldenv
pop
xchg
add
pop
add
test
or
jmp
leave
and
icebp
inc
dec
mov
fisub
pop
cmps
adc
pusha
mov
xchg
test
push
out
push
add
or
dec
cmp
les
or
daa
push
xchg
imul
push
inc
adc
add
jg
push
ret
adc
jo
sbb
ja
sbb
fistp
jl
add
push
aaa
mov
mov
xchg
push
pop
loope
xchg
aaa
or
aaa
pop
or
sar
jmp
aaa
add
sbb
fwait
or
mov
mov
rcr
movs
(bad)
add
scas
mov
and
lods
xchg
mov
mov
adc
and
cmp
loopne
push
xchg
or
loopne
lahf
aaa
out
adc
pop
ja
dec
(bad)
sub
sbb
sub
aas
and
xor
sub
mov
mov
scas
cmp
das
aaa
lahf
inc
(bad)
xor
xor
jmp
cmp
scas
xchg
or
ror
pop
mov
aaa
push
pusha
sbb
mov
sub
cmp
das
push
push
lea
mov
pop
cmp
ret
jbe
inc
xlat
inc
es
aaa
xlat
dec
mov
dec
pop
in
pushf
in
aaa
inc
aaa
or
sar
mov
mov
and
push
and
inc
aaa
out
fwait
in
aaa
inc
push
mov
inc
fwait
xchg
int
sub
inc
popf
adc
cmp
lea
ss
dec
sahf
adc
dec
enter
aaa
sub
push
dec
aaa
dec
sbb
push
push
in
add
push
lds
lahf
or
daa
fcom
dec
dec
adc
dec
pop
sub
aaa
cmps
push
pop
cmps
and
push
dec
int3
cmp
adc
es
mov
push
aaa
outs
pop
aaa
xor
add
sbb
add
xor
adc
mov
sbb
pop
aaa
mov
xor
inc
push
aaa
xor
xchg
pop
pop
pop
popa
lahf
xor
(bad)
or
in
xchg
pop
add
xchg
or
mov
leave
addr16
sbb
push
nop
mov
add
daa
sub
mov
nop
nop
inc
call
ins
adc
jl
and
push
and
or
jae
adc
xchg
pusha
dec
inc
cmps
test
mov
xchg
cpuid
je
mov
cmp
(bad)
ja
iret
js
jns
mov
clc
and
add
sbb
fwait
push
enter
add
aaa
jg
xchg
test
and
dec
sub
adc
push
stos
xlat
push
jl
jne
jb
dec
jle
adc
pop
adc
(bad)
ja
aaa
push
xor
sub
sahf
push
xor
xchg
call
aaa
jnp
adc
idiv
inc
les
aaa
repnz
test
jb
xlat
aaa
aaa
aaa
jmp
aaa
pop
adc
dec
ds
mov
sbb
xchg
mov
sbb
pop
cwde
pop
pop
push
mov
scas
xlat
xchg
or
xchg
lahf
add
add
xchg
aaa
lea
imul
xchg
or
cdq
aaa
cwde
push
fs
xchg
push
mov
jo
cdq
xor
xchg
fcomp
or
fwait
movs
ss
xor
add
in
xchg
movs
cmps
mov
jmp
fs
pushf
test
popf
sahf
leave
add
stos
aas
neg
xor
aaa
mov
daa
mov
movs
aas
(bad)
mov
cmp
int
popf
mov
jmp
inc
leave
mov
adc
outs
jg
add
xchg
iret
(bad)
cmps
aaa
push
dec
jae
test
test
cs
dec
stos
or
scas
lods
xlat
scas
jnp
dec
ss
mov
mov
cmp
ficomp
xlat
enter
scas
add
adc
mov
mov
push
xchg
xchg
mov
mov
sub
lahf
mov
adc
jb
inc
call
and
mov
push
or
cmp
xlat
stos
adc
lods
add
nop
and
add
mov
mov
out
ss
mov
cdq
nop
mov
mov
out
aaa
icebp
xlat
rcr
xlat
or
cmp
or
scas
leave
or
mov
mov
or
and
pop
mov
xlat
mul
add
xchg
pop
into
mov
sub
lods
cmps
sbb
outs
mov
scas
lods
adc
mov
and
xor
and
adc
pop
adc
cs
leave
jbe
rcl
push
mov
shl
enter
mov
add
rcl
jle
fiadd
cmp
push
aam
cs
xor
inc
int
inc
push
imul
imul
out
cmp
mov
fadd
fld
push
dec
push
pop
in
push
sbb
pop
and
in
fbld
out
imul
fsub
out
cwde
je
pop
out
jmp
or
inc
inc
push
sbb
aas
add
addr16
pcmpgtd
jmp
push
int
jmp
aam
sbb
or
out
add
pop
leave
fwait
sub
addr16
mov
and
xlat
addr16
and
sub
das
adc
cmps
and
ror
stc
and
sti
cmp
xchg
push
mov
aaa
or
xor
rol
and
not
inc
add
or
(bad)
adc
add
mov
das
je
cwde
in
push
xchg
cmp
test
repnz
movs
add
cmp
movs
pop
or
add
enter
and
jb
adc
add
lock
jl
arpl
ror
xor
xor
ja
push
sub
pop
fdivrp
jb
mov
sbb
ss
(bad)
sbb
imul
das
jmp
cdq
and
cmp
xchg
or
xchg
and
cmp
popa
push
push
bound
leave
sub
add
pusha
sub
das
out
cmp
push
ja
add
mov
xor
or
cmp
cmp
or
dec
cmp
nop
or
add
das
inc
cmp
cmp
scas
mov
cs
mov
jae
cs
add
ss
and
ret
push
cmp
aas
dec
cmp
enter
cmp
pop
mov
ins
and
dec
sub
test
pop
dec
cmp
sub
pushf
mov
nop
or
rcl
les
lods
xlat
(bad)
pop
cmp
dec
adc
lahf
xor
iret
aaa
add
js
cmp
sbb
je
or
or
lahf
push
cmp
enter
(bad)
enter
and
(bad)
mov
shl
stos
inc
pop
pusha
mov
neg
mov
pandn
xor
cmp
in
xchg
pop
cmp
adc
cmp
xor
cmp
xchg
int
xlat
and
(bad)
fsub
arpl
nop
sub
fs
gs
xchg
sbb
scas
(bad)
(bad)
in
xchg
xor
ja
xchg
inc
call
xchg
add
jbe
dec
repz
dec
push
imul
dec
push
fs
jno
sub
je
push
xchg
pushf
ins
push
jne
or
enter
adc
imul
or
cmp
jnp
sub
nop
test
dec
call
nop
out
sbb
inc
cmps
fs
dec
sar
pop
or
mov
xchg
nop
test
mov
mov
add
push
xor
(bad)
ja
push
js
nop
out
push
sbb
xor
aam
and
fiadd
mov
(bad)
cwde
(bad)
cdq
(bad)
or
cdq
xchg
inc
call
add
cwde
pushf
dec
xor
adc
and
mov
sahf
push
fist
sahf
mov
pop
movs
ds
movs
or
adc
leave
cmps
add
stos
imul
or
adc
lods
call
and
mov
mov
fs
sbb
fs
or
call
ror
ficom
mov
movs
and
inc
cmps
mov
cdq
sbb
mov
call
call
push
sahf
rcl
fsub
or
add
nop
cmp
cmp
ins
xchg
xchg
pushf
(bad)
cmp
cmp
lods
mov
fisub
retf
retf
jbe
imul
int
ja
push
iret
movs
dec
jb
cmp
cmp
cs
xor
rcl
mov
mov
out
xor
cmp
aad
lahf
push
into
stos
mov
cmp
xlat
push
and
cmp
mov
dec
mov
scas
fstp
fnstsw
jb
push
leave
fistp
loope
jecxz
nop
sbb
inc
in
out
ins
and
in
cmp
cmp
and
dec
xor
out
xor
test
enter
mov
sbb
cmp
and
stc
dec
sti
add
and
pop
enter
xor
adc
loopne
outs
dec
call
shl
loop
dec
aad
lea
dec
shl
data16
dec
dec
call
mov
daa
fs
adc
inc
test
adc
movs
pop
sbb
addr16
pop
in
push
jb
cmovg
add
adc
call
dec
xchg
jmp
in
pop
inc
push
push
mov
fisubr
nop
out
add
pop
inc
or
bnd
add
iret
enter
add
not
mov
sahf
out
clc
add
and
xchg
cli
add
xchg
nop
or
pop
enter
aas
(bad)
cmp
cmp
pushf
xor
pop
(bad)
xchg
test
jecxz
push
add
xchg
ins
idiv
cmp
mov
jns
push
or
add
add
xchg
pushf
in
add
add
add
cmp
cmp
push
fwait
add
cmp
or
and
cmp
cmp
cmp
dec
dec
repnz
cmp
cmp
cmp
(bad)
adc
adc
nop
xchg
pushf
in
cmp
cmp
fwait
xchg
push
jb
cmp
cmp
dec
cwde
ret
mov
push
cmp
sbb
pop
and
cmp
cmp
or
(bad)
shl
scas
sub
inc
movs
sbb
sub
xor
xor
aaa
cmp
cmp
shl
in
add
out
sbb
xor
aaa
jmp
cmp
(bad)
sbb
pop
enter
lahf
sbb
inc
or
aas
or
xor
and
push
push
nop
fcom
and
and
push
and
pop
es
jmp
ins
sbb
sbb
fild
add
sub
pop
cmp
push
mov
sub
scas
and
nop
xor
adc
jb
or
add
sub
xlat
dec
dec
and
mov
add
push
cmp
or
cmp
lea
push
ds
out
adc
dec
inc
cmp
repnz
adc
inc
cmp
jmp
adc
scas
push
rcl
pop
cmp
pop
sbb
inc
leave
push
mov
(bad)
push
inc
call
in
out
xlat
or
add
or
adc
mov
bound
xor
dec
sbb
add
fs
push
adc
jo
push
dec
ss
xchg
scas
out
lock
in
add
(bad)
loop
(bad)
mov
(bad)
push
add
dec
mov
push
add
mul
imul
adc
push
inc
nop
inc
movs
jg
jecxz
inc
rcr
out
pop
xor
out
xor
add
pop
cmc
xor
pop
and
xlat
adc
repz
push
mov
not
hlt
push
imul
pusha
or
or
push
repz
icebp
bound
lods
add
gs
jb
add
rol
xor
in
nop
nop
mov
pop
add
sub
add
push
adc
sbb
dec
push
xchg
sub
pop
xchg
or
mov
out
jmp
push
or
outs
add
cdq
jmp
enter
not
xor
and
lahf
jno
xor
jb
clc
jae
xor
je
cli
adc
cs
leave
inc
xor
lahf
and
dec
push
jp
jo
enter
or
leave
es
dec
jbe
pop
dec
mov
aas
inc
pop
mov
sub
js
and
jns
mov
mov
pop
ins
fisub
addr16
pop
lds
jg
and
sbb
add
sbb
inc
xchg
xchg
and
adc
cmp
dec
lods
cwde
adc
int
ror
test
lahf
enter
sbb
push
test
(bad)
push
inc
mov
cwde
mov
dec
cmp
movs
cs
test
inc
mov
cmp
pop
repnz
cmp
pop
lea
fidiv
add
pop
pop
nop
cmp
pusha
sbb
fist
fs
xchg
cmp
xchg
xor
xchg
adc
fist
xchg
cmps
arpl
mov
dec
add
dec
movs
fs
(bad)
push
cwde
in
fwait
mov
aam
std
fbld
in
cmp
adc
scas
or
cmps
fistp
sbb
mov
leave
jnp
mov
ret
inc
mov
and
movs
add
jmp
xor
dec
fwait
nop
xchg
stos
lods
sbb
and
sbb
or
cmp
adc
fwait
mov
dec
pop
dec
jg
add
test
dec
addr16
mov
cmp
pop
cmps
pop
push
and
and
cmp
xor
cs
adc
push
cmp
nop
cwde
and
cmp
out
cmp
fmul
aaa
mov
fwait
xchg
cmp
add
add
adc
mov
and
mov
rcl
aas
es
aaa
aas
mov
and
sets
push
mov
mov
lods
jbe
ja
pop
pop
or
stc
sar
bound
enter
iret
sub
movs
mov
lds
or
inc
imul
or
leave
retf
jl
es
push
iret
int3
cmp
add
cwde
mov
adc
sub
or
xchg
test
add
adc
(bad)
cli
xchg
jae
or
retf
cmp
jo
enter
shl
inc
or
sar
and
daa
cmp
dec
xlat
cmp
cmp
cmp
cmp
cmp
repz
cmp
or
in
adc
es
outs
loopne
xor
push
leave
and
out
call
jb
add
in
cmp
in
sbb
cmp
cmp
cmp
cmp
hlt
cmp
cmp
imul
mov
sub
retf
cmp
jb
pop
xchg
iret
into
push
mov
jle
push
dec
sahf
outs
jecxz
out
ret
dec
pop
and
in
xchg
stos
or
push
out
xchg
pushf
inc
pop
adc
test
mov
outs
jmp
add
inc
adc
fucomip
cmp
pop
in
inc
das
push
mov
sub
mov
inc
add
mov
mov
repz
cmp
pop
adc
mov
in
idiv
pop
inc
cmp
xor
stc
cmp
jo
add
mov
pushf
sub
or
cmp
push
or
and
nop
inc
or
(bad)
cmp
jp
adc
add
jecxz
sar
(bad)
loopne
xchg
push
pop
cmp
mov
sub
push
inc
add
ficom
cmp
loopne
cmp
or
pop
push
xchg
ret
mov
or
adc
adc
mov
adc
or
sbb
pop
push
add
pop
jae
or
pop
and
shl
and
and
pop
ret
xor
dec
xor
mov
add
in
adc
and
fs
sbb
adc
daa
adc
nop
add
sbb
and
sub
out
push
jns
stc
add
pop
adc
sbb
sub
sbb
leave
data16
(bad)
adc
xor
leave
ss
sbb
adc
fwait
in
cmp
inc
sbb
ins
nop
push
sbb
mov
sbb
xor
mov
sbb
and
xor
xor
sbb
xor
and
and
and
and
xor
xor
and
and
sbb
and
cwde
dec
es
sub
daa
cmp
or
idiv
xchg
mov
sub
sub
nop
sbb
cmp
fs
ficomp
xor
xor
cmp
aas
inc
inc
es
es
inc
dec
adc
fs
dec
dec
cmp
inc
and
jnp
inc
push
xor
daa
push
call
enter
jp
scas
icebp
sub
dec
inc
dec
jg
and
and
sub
pop
in
push
fisttp
(bad)
fcom
dec
xor
nop
inc
popa
dec
xor
dec
mov
inc
xchg
dec
dec
xor
pop
leave
xchg
push
add
xlat
cmp
and
push
(bad)
in
mov
in
pop
cmp
xor
inc
push
pop
dec
lahf
out
sbb
mov
or
mov
sbb
push
popaw
inc
xor
inc
inc
cs
adc
pop
inc
inc
or
fs
add
add
xor
dec
enter
jg
dec
adc
scas
pop
jns
push
xor
xor
test
and
inc
mov
mov
ds
cmp
push
pop
pushf
sbb
pop
push
fs
fist
pushf
in
sub
push
cmp
dec
call
add
push
lods
rcr
xchg
out
cs
cmp
enter
pop
cmp
pushf
cs
enter
xor
inc
dec
xor
xchg
test
sahf
out
pop
pop
add
jb
aaa
daa
add
xor
jp
imul
in
inc
sahf
sub
xchg
aaa
fs
add
or
or
cmp
cmp
inc
push
(bad)
addr16
in
adc
cmp
jb
or
stc
aas
daa
sub
scas
ret
sub
inc
es
fiadd
cs
inc
call
inc
call
shl
push
jbe
popa
in
push
lahf
imul
cs
dec
xchg
ins
ss
mov
lods
outs
mul
xchg
dec
jo
jno
and
leave
test
or
div
sbb
nop
mov
dec
fild
dec
xor
mov
ja
push
js
xor
mov
push
cdq
fadd
jle
cdq
nop
or
leave
add
test
adc
dec
push
xchg
xchg
cmp
sbb
adc
adc
imul
nop
sbb
cmp
inc
cs
or
fs
xchg
xchg
cmp
stc
pop
movs
rcl
mov
jbe
dec
sub
nop
retf
sub
jb
xlat
push
adc
(bad)
push
call
sub
xchg
or
add
jnp
gs
es
mul
adc
xchg
dec
sbb
dec
and
sbb
out
iret
in
sub
add
pop
cmp
and
push
ins
rol
test
or
and
mov
xchg
pop
push
mov
xchg
mov
cmp
adc
cmps
ss
push
inc
inc
pushf
es
push
ss
pop
or
scas
call
adc
adc
fwait
cmp
pushf
cmp
xchg
popf
cmp
xchg
pop
jmp
mov
sbb
scas
mov
cmp
movs
cmp
leave
test
dec
ja
mov
dec
inc
and
mov
sbb
cmps
cmp
add
rol
cmp
(bad)
stos
and
cwde
ja
nop
(bad)
xchg
lods
fadd
daa
aaa
scas
cmp
ins
inc
push
scas
cmp
inc
mov
inc
dec
pusha
(bad)
push
push
and
mov
ja
cmp
pop
add
sbb
adc
adc
xchg
push
daa
pop
adc
pop
pop
adc
pop
pop
dec
pop
rep
sbb
es
mov
pop
mov
xor
mov
xor
mov
xor
mov
cmp
sar
ss
fwait
in
cmp
inc
les
ficom
mov
push
mov
xlat
enter
(bad)
leave
(bad)
scas
add
out
push
retf
daa
imul
push
imul
inc
dec
into
ds
iret
test
nop
add
shl
enter
xlat
fld
fst
xor
nop
xor
jecxz
jnp
dec
enter
add
and
and
or
xchg
and
es
and
nop
aad
pop
adc
or
push
sub
pop
mov
push
add
jbe
pop
lods
inc
bound
xchg
inc
dec
shl
push
repnz
and
loopne
dec
(bad)
xchg
and
in
ja
fimul
fsubr
fdivr
mov
fs
dec
fwait
and
push
(bad)
aaa
xchg
add
leave
icebp
inc
loop
test
or
add
daa
mov
push
xor
or
ins
dec
es
call
(bad)
pop
lahf
jmp
pop
ja
adc
ins
push
cmps
xor
ror
scas
or
mov
inc
loope
repnz
inc
popf
test
cmp
sahf
add
ins
and
rcl
and
mov
jo
xchg
cmp
push
outs
outs
add
adc
scas
cli
cmp
xchg
cmp
add
add
cmp
mov
rol
sbb
data16
and
adc
nop
adc
je
mov
cmp
sar
push
and
or
pop
or
xchg
or
or
jne
cmp
mov
call
sbb
(bad)
nop
adc
outs
jbe
add
test
pop
cmp
ss
sub
adc
adc
fwait
xchg
dec
mov
jnp
adc
adc
xor
jae
push
(bad)
movs
cmp
push
pop
mov
sbb
ins
fcomp
sbb
sbb
inc
call
outs
push
imul
push
jle
or
push
imul
jae
or
adc
and
dec
and
daa
xor
dec
test
xchg
push
sub
sahf
sub
push
mov
mov
sbb
cmp
jno
push
leave
xor
xor
xor
mov
cmp
cmp
cmp
cmp
mov
and
inc
and
leave
and
and
and
dec
xchg
or
leave
cmp
dec
or
leave
and
inc
xor
and
and
mov
rol
inc
xchg
cmp
repnz
sub
push
xor
cmp
add
cwde
and
push
inc
and
cs
jb
adc
xchg
inc
dec
adc
(bad)
pop
iret
jne
cmp
or
daa
fadd
pop
mov
in
add
dec
push
enter
pop
add
leave
push
enter
sub
xor
fistp
xchg
dec
mov
in
adc
shr
push
add
icebp
push
inc
sbb
sahf
push
cmps
push
dec
leave
or
lea
test
dec
push
xchg
das
mov
neg
push
or
xchg
jg
add
push
add
pop
(bad)
adc
pop
push
sub
inc
xor
adc
ficom
push
arpl
popa
jmp
jb
pop
dec
cmp
and
ins
xlat
sub
add
adc
push
out
adc
imul
dec
push
sbb
pushaw
push
sbb
ror
outs
add
imul
mov
jp
int
cmp
ficom
push
mov
or
jb
mov
push
or
je
out
jne
rcr
lea
cmp
adc
imul
sbb
dec
push
jle
and
enter
add
cmp
ins
and
cmp
in
sub
(bad)
leave
add
jle
cmp
pop
dec
and
jg
pusha
inc
and
and
add
add
pop
jecxz
add
mov
in
push
daa
test
out
ficom
enter
cmps
adc
inc
mov
add
cmp
imul
inc
cmp
dec
inc
add
xor
inc
call
xchg
fsubr
xchg
popa
sbb
and
mov
es
xchg
xchg
xchg
fcomp
mov
adc
psubusw
adc
xchg
cmp
cwde
call
fwait
and
mov
(bad)
popf
cmp
push
mov
xchg
inc
cdq
or
sbb
es
in
mov
jg
pushf
cmp
sahf
xlat
pop
loop
pop
dec
mov
rol
cmp
or
dec
pop
dec
movs
cmp
xor
cmp
mov
in
xor
enter
xchg
or
cwde
push
test
test
call
jo
and
pushf
pop
call
mov
xchg
sub
mov
scas
dec
xchg
mov
mov
retf
leave
test
pushf
mov
mov
push
and
cmp
or
mov
mov
mov
ret
push
fwait
enter
xchg
retf
int3
jb
push
cmp
inc
rcl
xlat
adc
int
add
(bad)
fcomp
xor
sbb
sahf
dec
mov
call
xor
xor
test
inc
mov
add
rcl
pop
or
ja
xchg
test
icebp
cmps
lds
inc
dec
scas
xchg
push
xor
sub
push
push
(bad)
retf
add
aas
xchg
mov
mov
outs
dec
add
iret
outs
push
mul
xchg
pop
arpl
ror
sbb
jmp
push
jae
mov
(bad)
jbe
icebp
xlat
pusha
mov
and
cmps
in
(bad)
inc
fild
add
dec
(bad)
aam
and
sbb
add
loope
scas
ret
mov
add
cwde
inc
sbb
mov
or
in
xchg
stos
(bad)
in
out
pop
jb
xor
dec
xchg
xchg
pop
das
test
test
xchg
fmul
dec
inc
cmp
icebp
repz
mov
cmc
test
adc
fisub
inc
xor
mov
movs
fisubr
maxps
and
adc
test
push
out
iret
adc
test
and
mov
es
add
sub
sub
or
cld
call
call
jmp
mov
test
aaa
adc
add
outs
xchg
fidiv
mov
sub
cmp
and
jb
push
mov
jb
movs
cmps
ins
shr
cmp
ror
cs
inc
mov
cmp
ja
pop
xchg
pop
jmp
add
cmp
fnstcw
sbb
bound
mov
les
daa
test
outs
stos
adc
or
adc
inc
lods
push
adc
sbb
scas
es
mov
addr16
xchg
mov
jo
adc
and
push
mov
mov
daa
fwait
inc
sbb
popa
aaa
sbb
sbb
ss
sbb
push
imul
and
imul
and
push
imul
sub
sub
jo
sub
ror
ret
sub
daa
jns
cmp
cmp
cmp
ss
fwait
xor
jae
pop
jnp
ins
nop
xor
push
les
int
int
lds
(bad)
and
and
aaa
(bad)
cmp
and
and
cmp
cmp
cmp
sti
cmp
retf
pop
or
dec
ds
es
aas
cmp
cmp
push
(bad)
nop
ss
mov
cmp
pop
retf
sbb
and
xor
nop
daa
push
adc
and
adc
dec
or
adc
iret
dec
shl
push
jns
dec
sbb
inc
es
push
push
inc
es
push
push
loopne
or
add
pop
cmp
imul
pop
sbb
cdq
nop
or
nop
or
cdq
nop
or
cdq
nop
or
nop
or
cdq
nop
or
cdq
nop
or
nop
mov
cdq
(bad)
xchg
xchg
or
nop
or
cdq
nop
or
cdq
nop
or
nop
test
or
in
xor
adc
movups
cmp
xchg
outs
bound
jnp
or
push
fadd
mov
cmp
push
add
adc
jae
fcom
add
dec
imul
and
cmps
dec
or
dec
or
push
cmp
cmp
or
bound
inc
cmp
cdq
inc
push
xchg
mov
pop
xchg
sub
ret
pop
adc
and
enter
adc
inc
(bad)
mov
rcl
adc
adc
mov
pusha
or
bound
les
rcl
fs
gs
movs
cmp
add
daa
cmp
mov
cmp
adc
dec
rcl
loopne
inc
push
imul
enter
inc
imul
cmp
shl
outs
cmp
lahf
aad
call
dec
leave
(bad)
adc
sub
adc
pop
fild
inc
sbb
cmp
dec
je
add
bnd
sar
xlat
js
bnd
daa
jg
pop
(bad)
jl
sub
dec
and
add
loop
xchg
push
dec
outs
test
add
push
mov
scas
daa
add
test
jns
mov
call
scas
xchg
dec
shl
lahf
push
lahf
mov
sahf
mov
out
nop
(bad)
xchg
and
aas
dec
movs
or
and
jl
xchg
xlat
inc
or
arpl
(bad)
cwde
inc
or
or
cmp
out
push
add
cwde
dec
leave
add
push
push
xchg
adc
mov
mov
mov
xchg
inc
mov
movs
pop
adc
and
xchg
cmps
push
mov
xchg
sub
inc
cmps
inc
es
mov
stos
adc
adc
push
test
mov
mov
cmp
mov
(bad)
mov
adc
add
cmp
mov
or
fist
inc
mov
lea
push
inc
(bad)
mov
daa
cmp
adc
mov
push
in
dec
aas
mov
dec
adc
ret
sbb
mov
dec
adc
movs
pop
ret
les
(bad)
xchg
(bad)
xchg
and
enter
dec
add
xchg
retf
(bad)
int3
cmp
cmp
dec
int
into
cmp
cmp
repnz
sar
cmp
pop
in
cmp
rol
aad
dec
enter
enter
fcmovnu
fisttp
dec
loope
in
dec
enter
cmp
inc
mov
adc
cmps
mov
dec
jae
rcl
nop
scas
add
aam
dec
rcl
sbb
ror
fimul
sbb
iret
pop
and
cmp
fdivr
or
mov
pop
ficomp
fadd
xor
or
dec
ins
push
mov
inc
pop
rol
xor
cmps
cmp
sbb
test
push
jmp
inc
pushf
push
or
out
cmp
repnz
dec
and
out
cmp
add
cmp
stc
cmp
ficom
cmp
sar
pop
(bad)
and
hlt
sub
idiv
idiv
outs
clc
stc
xchg
fwait
jne
cli
cs
add
mov
sar
add
add
out
push
jle
add
add
ror
cs
push
test
xchg
and
cmp
pusha
sbb
scas
sbb
mov
or
and
and
xchg
or
leave
or
leave
and
sbb
xor
and
and
and
and
and
leave
and
sub
xchg
(bad)
or
sub
in
das
cmp
and
xor
leave
add
sahf
pop
loopne
aas
out
or
push
push
or
test
pop
cdq
or
cmp
stc
dec
sub
adc
pop
adc
adc
mov
adc
(bad)
mov
pop
push
inc
(bad)
vmread
bound
and
sbb
add
test
in
cmps
nop
and
daa
and
and
jo
dec
jns
pop
es
inc
add
sub
sub
cmps
push
enter
sub
daa
inc
sbb
ret
cmp
cdq
and
cs
add
xor
xor
add
movups
sbb
sub
test
adc
(bad)
daa
outs
retf
add
cmp
cmp
ja
adc
sbb
push
(bad)
cmp
aas
das
sbb
add
sub
cmp
pop
inc
cmp
inc
pop
das
dec
add
pop
dec
out
pop
dec
dec
and
mov
push
xor
add
pop
add
mov
pop
fisttp
test
rol
mov
outs
or
jecxz
pop
rcl
mov
fadd
rol
cmps
or
pop
rol
pop
inc
or
mov
sbb
or
mov
das
inc
mov
das
inc
pop
outs
pop
adc
dec
or
dec
and
sub
je
mov
push
cmp
push
sub
push
push
imul
je
xlat
push
add
imul
imul
adc
sbb
ins
push
outs
ja
movs
push
inc
pop
and
xlat
out
dec
push
movs
push
sti
arpl
ins
mov
movs
das
jbe
ss
push
inc
lds
pop
jo
push
(bad)
mov
addr16
gs
mov
(bad)
push
cmp
arpl
adc
arpl
jnp
outs
js
xchg
fstp
pop
and
jb
enter
mov
imul
(bad)
pop
inc
outs
ins
ins
xor
dec
ret
push
movs
test
xchg
(bad)
mov
sbb
push
movs
push
icebp
loopne
popa
dec
pop
xor
ins
xor
(bad)
push
xor
pop
xchg
and
pop
and
pop
lods
add
cs
ins
inc
arpl
mov
mov
cdq
and
ds
adc
pop
jl
adc
xor
(bad)
aad
gs
data16
sub
es
dec
mov
push
jne
jns
shr
xor
stos
daa
js
in
mov
lock
mov
fs
or
ins
out
arpl
ins
adc
pop
or
cmp
or
xor
pusha
bound
add
lds
and
shl
in
sbb
inc
outs
shr
dec
idiv
imul
ins
out
loope
adc
aas
arpl
xor
push
lods
pusha
push
ficom
sub
aas
data16
aad
xor
call
or
adc
test
sti
nop
bound
inc
popa
jbe
sbb
out
je
lock
pop
push
sub
jo
loope
mov
ins
fnstcw
popf
mov
imul
adc
jne
mov
cmp
push
test
push
gs
outs
jbe
inc
dec
sbb
mov
and
and
push
push
lods
or
(bad)
ins
cmp
mov
adc
lds
add
xor
lds
adc
push
pop
mov
jge
sub
inc
popa
jo
outs
push
xor
or
dec
pop
lahf
pop
movs
out
or
and
push
mov
popa
sub
sbb
sti
jae
adc
ins
ins
icebp
sbb
stos
pop
nop
and
lods
push
sbb
in
dec
gs
adc
iret
add
imul
popa
cmps
and
push
pop
adc
push
mov
or
mov
mov
es
mov
ins
push
adc
stos
popa
pop
pop
xchg
pusha
sbb
and
pop
xchg
adc
inc
adc
pop
mov
outs
mov
imul
xchg
pop
pop
dec
dec
push
addr16
jo
and
mov
dec
xchg
mov
jne
push
sub
rol
sbb
add
ins
pop
dec
pop
cmp
and
leave
mov
and
in
scas
scas
push
jo
popa
jae
inc
dec
push
dec
inc
pop
mov
mov
sbb
sbb
pusha
adc
and
or
xor
dec
pop
sbb
sbb
dec
out
dec
ret
lods
rol
pop
dec
or
fcom
dec
and
inc
and
inc
jae
outs
cdq
mov
loop
inc
ins
jne
push
(bad)
pop
pop
adc
pop
or
mov
mov
cmp
(bad)
push
xchg
inc
sbb
ins
jo
popf
pop
fwait
loope
outs
dec
adc
aas
lods
lods
jo
and
(bad)
and
mov
cli
inc
pop
sub
mov
and
nop
cwde
pop
cmc
pop
pop
enter
sub
loop
and
adc
cmp
call
dec
es
cmps
xor
test
aam
outs
(bad)
adc
xor
bound
and
repz
mov
adc
sub
and
pop
rcl
add
jns
into
sub
lods
pop
imul
jns
jno
inc
push
outs
adc
stc
ja
jb
xor
push
or
adc
scas
or
daa
outs
sbb
jae
inc
inc
mov
sbb
inc
pop
sbb
sub
inc
push
imul
les
inc
cmps
(bad)
xor
scas
sbb
xor
cmp
sbb
inc
outs
arpl
sbb
cmp
push
jmp
bound
stos
(bad)
icebp
xor
outs
jb
fwait
add
leave
outs
add
sub
ins
outs
inc
inc
pop
or
jbe
imul
sub
cs
fwait
or
lds
xchg
pop
ja
loopne
mov
jns
mov
or
adc
test
xor
lds
mov
push
ins
fldcw
aaa
inc
or
inc
add
leave
jno
aad
ror
(bad)
mov
ds
mov
jbe
adc
xchg
inc
sbb
xor
movs
or
je
push
mov
adc
ins
sbb
imul
pop
mov
xchg
adc
nop
ss
aaa
jl
lods
sub
jns
ror
stos
dec
xchg
xor
sub
lds
xor
call
lods
dec
arpl
inc
outs
popa
push
imul
mov
mov
jns
push
shr
sub
aam
add
popf
inc
and
aaa
sub
cmp
sub
xchg
push
add
aam
cmc
loope
in
jge
inc
or
inc
mov
mov
icebp
push
loope
adc
outs
aaa
mov
inc
aaa
mov
ins
xchg
cmp
add
fwait
push
jae
ror
test
xchg
push
fsub
mul
out
sub
imul
es
in
bound
sub
push
jne
mov
popa
add
pop
out
adc
sbb
dec
mov
pop
dec
and
adc
nop
xlat
ins
and
in
sub
jae
jns
push
jae
dec
and
fld
jae
mov
mov
push
dec
in
mov
xor
pop
ins
ss
das
sub
mov
gs
imul
push
aam
xor
xchg
cmp
lea
add
sub
dec
fld
pop
mov
sub
xor
dec
outs
cmp
in
push
daa
je
push
cmp
jne
add
rcl
or
xor
pop
or
outs
jae
pop
lods
pop
mov
push
lds
sub
add
xchg
lods
(bad)
jmp
lea
loope
push
sub
add
ror
adc
mov
aaa
icebp
cmps
or
xor
sub
pop
(bad)
addr16
push
pop
test
and
push
push
es
xchg
push
sbb
push
popf
mov
loopne
xor
add
inc
dec
outs
test
les
adc
shr
mov
inc
jb
sub
push
(bad)
dec
ins
clc
gs
mov
and
aas
ins
pop
xor
das
and
mov
lods
fadd
fsub
and
les
cmp
cs
push
dec
pop
sbb
mov
and
xor
inc
dec
leave
and
mov
xor
adc
pop
adc
sub
daa
pusha
xor
inc
and
mov
push
daa
mov
push
jb
lock
xor
dec
and
mov
adc
push
aad
jb
jbe
fisub
sar
sub
xchg
lahf
inc
lds
cmp
mov
pop
shl
dec
mov
inc
jns
inc
pop
bound
ins
xchg
and
out
inc
(bad)
imul
mov
in
lea
mov
ins
and
ins
int
sbb
shl
adc
push
imul
arpl
ret
or
ficomp
sub
push
pop
aaa
adc
or
popa
addr16
sar
add
pop
add
dec
fmul
test
jnp
inc
or
outs
mov
sub
arpl
jg
jne
cwde
inc
push
fs
push
add
mov
add
imul
push
mov
iret
dec
sub
les
jb
out
aas
or
test
sbb
aas
pop
sbb
das
adc
jb
fnsave
aad
sbb
test
pop
mov
add
or
(bad)
mov
push
inc
lods
fsub
arpl
dec
dec
and
stos
xchg
push
pop
fidiv
xchg
mov
in
inc
aas
push
ror
arpl
adc
cmp
sbb
cmp
inc
outs
xor
repnz
inc
gs
dec
test
movs
jnp
cmp
xor
imul
fsub
inc
mov
in
call
sub
push
in
xor
sub
inc
cs
pop
ja
jbe
outs
xor
jne
inc
out
mov
sub
dec
cmps
push
inc
push
dec
add
das
or
pop
popa
pop
dec
push
test
imul
ss
mov
lods
loopne
and
not
retf
cmp
test
xor
test
jnp
mov
pop
adc
mov
bound
mov
bound
mov
ins
pop
and
cmps
mov
arpl
pop
cmp
mov
xor
xchg
adc
push
jnp
jne
popa
inc
sub
push
xchg
int3
mov
mov
sbb
push
in
sbb
fs
add
inc
or
lods
or
add
inc
and
jne
sar
adc
shl
test
sar
ins
(bad)
ficomp
jmp
(bad)
frstor
pop
(bad)
sbb
popa
add
sbb
inc
inc
adc
sbb
xchg
aad
push
mov
ret
outs
pop
lods
push
pop
pop
sti
loope
cmps
sbb
ja
test
inc
push
ret
imul
shl
push
fadd
mov
add
bound
sub
adc
popa
test
in
or
or
mov
or
dec
push
pop
out
stos
sbb
adc
inc
popa
cli
mov
in
fist
pop
adc
stos
test
lock
mov
and
cwde
imul
inc
mov
js
loop
push
popf
sbb
mov
hlt
inc
test
sub
jae
mov
inc
jno
ret
test
push
popa
mov
repnz
sbb
jb
sbb
mov
sub
les
inc
mov
sbb
xor
push
inc
and
dec
sbb
inc
push
aam
adc
movs
adc
lock
push
fst
and
sub
push
pop
xor
mov
lods
ss
cmp
imul
dec
jae
mov
and
dec
inc
lods
rcr
jmp
int3
and
ins
xor
inc
cwde
sub
sbb
es
push
sub
xchg
xor
and
imul
sbb
mov
int3
push
pop
pop
test
mov
inc
jnp
cmc
inc
add
(bad)
stos
mov
and
ins
ror
inc
fs
and
inc
dec
ret
das
imul
adc
lea
rcr
adc
adc
push
adc
mov
sbb
mov
sub
xor
inc
sti
lea
cmp
dec
adc
and
in
dec
or
xor
std
inc
mov
sbb
or
xor
adc
jns
mov
xchg
mov
push
or
cmc
mov
pop
das
lods
jno
jb
fisubr
add
adc
adc
dec
adc
xor
xchg
hlt
rol
add
pop
das
jns
pop
sub
xor
jns
dec
sub
add
test
sbb
fiadd
aaa
dec
pop
or
jmp
and
imul
pop
jb
push
inc
and
xchg
popa
mov
popf
pop
or
or
adc
sub
sbb
sti
sbb
lods
les
xchg
and
mov
mov
and
sbb
sub
jmp
xor
push
add
pop
addr16
nop
sbb
mov
push
fidivr
dec
ins
pop
jb
xor
push
add
aas
xlat
mov
push
pop
stos
sbb
pop
adc
das
pop
test
pop
push
mov
push
pop
pop
mov
test
dec
jae
pushf
xor
mov
data16
daa
adc
(bad)
jge
mov
adc
das
xor
pusha
retf
sub
adc
popa
xor
pop
pusha
xchg
sub
or
out
adc
push
jo
jne
sub
adc
das
sub
dec
inc
dec
inc
cmp
imul
pop
ja
ins
adc
sbb
loope
mov
gs
dec
jae
mov
mov
or
pop
out
fwait
das
and
pop
xor
(bad)
pop
por
xor
pop
xchg
ror
ins
vmovups
xor
or
and
push
inc
push
mov
cld
or
imul
xchg
inc
and
pop
adc
gs
adc
sbb
jo
fisub
cmp
dec
or
inc
cmp
push
ins
test
daa
dec
repz
mov
cs
or
mov
xchg
xchg
and
sbb
mov
and
daa
push
adc
arpl
imul
sbb
ss
stos
cmp
lea
push
mov
push
outs
bound
in
add
aaa
shl
mov
add
lods
pop
imul
sub
cmp
add
mov
lds
aaa
jne
scas
xor
xor
or
pop
vmovdqa
dec
dec
pop
rep
rcl
jo
and
ja
inc
add
xchg
push
popa
jb
test
in
sub
adc
or
dec
mov
sub
add
sbb
inc
push
imul
adc
ins
cmp
cmp
cmp
add
cmp
inc
ins
inc
jb
sbb
xor
jae
imul
lea
add
or
inc
pop
cli
imul
mov
movs
aaa
aad
adc
push
sub
arpl
fstp
daa
mov
sub
imul
cdq
scas
inc
push
test
xor
inc
jbe
imul
push
scas
pop
aaa
and
xchg
sub
call
cmp
div
dec
outs
dec
sbb
sbb
push
add
pop
and
add
ins
arpl
movhps
sbb
push
inc
mov
mov
sahf
mov
dec
sbb
xor
push
pop
cmp
adc
or
pop
arpl
pop
sbb
push
ret
out
sub
aam
js
sbb
sub
xchg
es
test
(bad)
and
in
mov
push
sub
and
mov
and
ror
pop
popa
ror
xor
das
add
popa
pop
sbb
push
jbe
mov
loope
xchg
das
jb
push
add
enter
lods
ss
sub
sbb
add
test
push
sub
in
bound
add
mov
and
add
cld
cmp
jmp
inc
push
push
and
jo
imul
sub
std
add
mov
push
pop
data16
dec
xchg
pop
dec
jno
out
adc
pop
rol
lea
pop
(bad)
out
or
jbe
stos
sbb
in
or
fcmovnb
dec
addr16
mov
test
xor
mov
xor
or
ret
loope
mov
push
and
push
test
push
xor
lock
mov
xchg
stos
in
mov
lea
ss
push
outs
into
stos
ins
mov
sbb
push
enter
pop
in
mov
(bad)
adc
jno
xor
add
push
mov
outs
inc
pop
or
sub
ret
pop
leave
popa
sbb
sbb
mov
mov
add
sub
pop
inc
int
sti
push
inc
or
push
ret
inc
push
mov
sub
xlat
xchg
xchg
sub
ja
mov
test
lods
jbe
inc
and
cmp
mov
cmps
pop
das
aam
arpl
aad
(bad)
mov
sbb
add
xor
imul
pop
and
mov
ins
sbb
sbb
mov
cmp
cmp
mov
imul
adc
sti
inc
mov
and
dec
adc
add
add
es
and
pusha
sub
in
mov
or
jbe
or
sub
stos
popa
add
outs
adc
xor
push
xor
sub
add
rcl
pop
cmp
dec
shl
sbb
jne
mov
popf
mov
popa
mov
lods
push
or
and
mov
std
sbb
mov
lds
nop
mov
xor
das
ds
adc
mov
jbe
(bad)
and
daa
cld
sbb
mov
ins
sbb
xor
add
sub
mov
or
fs
jb
in
xchg
mov
push
jb
xor
xchg
addr16
jae
sbb
mov
inc
ins
(bad)
das
pop
mov
inc
scas
xor
arpl
xlat
inc
push
loope
inc
or
push
pop
add
mov
adc
xor
ja
xor
inc
xor
das
dec
out
mov
mov
sub
xor
bound
xchg
push
dec
add
lods
lods
or
xchg
mov
push
fadd
mov
cdq
mov
inc
pop
ds
js
jo
gs
sub
xchg
and
fldenv
sbb
ins
sub
sbb
cmp
and
push
rol
std
jae
xor
aaa
sbb
cmp
popa
mov
out
or
nop
xchg
sub
mov
pop
add
push
adc
inc
add
pop
and
in
dec
shl
bound
(bad)
rol
cmp
or
nop
add
push
inc
sbb
inc
mov
shr
es
sbb
nop
and
addr16
ins
sbb
sbb
outs
cmp
rol
jae
jno
in
nop
add
sub
test
adc
bound
xlat
and
nop
pusha
pop
pop
or
aaa
jne
outs
push
lds
pop
xor
adc
imul
inc
outs
dec
pop
and
hlt
es
pop
and
pusha
add
mov
popa
xor
inc
add
aaa
mov
(bad)
and
aad
jbe
test
wbinvd
jbe
aad
cmp
sbb
xor
pop
mov
push
cmp
xor
jns
push
bound
push
add
and
xchg
sbb
adc
idiv
pushf
add
es
outs
cmp
adc
or
mul
sbb
add
iret
and
mov
dec
mov
xor
or
and
sbb
add
sbb
pop
cmp
push
jo
add
xor
sbb
ins
cmps
add
push
aaa
add
ss
mov
mov
xchg
inc
test
adc
sbb
inc
mov
cs
mov
movs
(bad)
inc
dec
jno
adc
inc
sub
sbb
hlt
mov
fcom
xchg
scas
adc
push
out
aas
sbb
adc
sbb
push
mov
adc
jbe
sti
sbb
lods
jbe
cmp
cmp
add
xor
loope
add
add
sbb
inc
mov
or
adc
sub
add
cmp
push
sbb
add
xor
ret
sbb
cmp
ret
sahf
aas
test
bound
(bad)
and
aas
push
pop
sub
xor
pusha
inc
pop
sbb
popa
and
pop
in
inc
push
add
sbb
push
popa
adc
fs
push
outs
aas
cmp
add
or
sbb
or
and
sar
push
and
inc
and
and
push
mov
std
sub
lea
xor
pop
mov
sar
sbb
lods
or
push
fisttp
and
cmps
sub
cmp
cli
and
push
and
and
sbb
and
dec
(bad)
mov
dec
xor
popf
movs
adc
jecxz
xor
or
or
and
xchg
stos
adc
pusha
sub
das
fsubr
jne
das
sbb
test
test
and
xor
test
inc
push
mov
retf
stos
aad
cli
or
outs
jae
push
enter
xor
aad
cmp
push
sbb
push
test
mov
aaa
stos
xchg
sub
push
add
lods
iret
mov
ja
and
outs
jg
inc
pop
rol
loope
movs
shl
arpl
mov
outs
sbb
or
nop
fsub
lds
(bad)
jns
jbe
sub
sub
or
add
daa
sbb
sbb
push
cmps
and
inc
mov
inc
bound
sub
dec
and
jge
(bad)
xor
push
aas
adc
es
adc
cdq
inc
xor
adc
pop
das
mov
xor
mov
mov
aaa
fwait
ret
inc
or
xchg
outs
adc
sub
outs
arpl
xor
jbe
dec
xor
or
inc
test
addr16
inc
cmps
push
popf
mov
pop
xchg
dec
cmp
adc
aas
sub
xor
push
sub
and
nop
pop
jns
xor
nop
leave
sbb
daa
out
and
sub
es
mov
and
inc
inc
dec
rol
dec
leave
sbb
add
push
aaa
fwait
xor
jne
scas
mov
sub
mov
pop
mov
rcl
outs
fstp
ficomp
cmc
outs
and
mov
jg
stos
and
mov
stos
ins
push
inc
xor
mov
mov
adc
jne
sub
fcomp
cmp
pop
xor
ja
inc
fwait
ror
not
pop
pop
adc
scas
imul
and
into
sbb
sub
aam
xchg
cli
adc
cmp
scas
fistp
fdiv
outs
push
xor
test
sbb
cld
xor
xchg
jg
push
repz
jo
jns
gs
pusha
adc
mov
aaa
add
addr16
movs
push
mov
rcl
jmp
mov
adc
popa
stos
inc
inc
(bad)
xchg
push
loope
xor
sti
mov
jbe
jge
ret
sbb
add
push
push
add
add
adc
scas
sbb
adc
bound
push
mov
cmps
dec
jne
and
sbb
mov
aam
push
imul
inc
rcr
inc
xchg
jae
adc
push
loopne
fwait
or
sti
or
lahf
sbb
push
add
cmp
add
inc
sahf
xchg
cmp
sbb
push
push
xchg
xchg
sti
mov
pusha
xor
les
and
mov
adc
cmp
sbb
adc
loope
xlat
adc
mov
adc
sbb
rcl
and
sub
iret
cmp
and
mov
mov
cmp
push
add
push
mov
mov
mov
mov
xor
bound
arpl
pop
sbb
mov
and
mov
mov
movs
(bad)
fsub
cmp
fnstcw
(bad)
add
retf
add
push
cmp
xor
pop
pusha
(bad)
in
cmp
sub
popa
aas
adc
sub
and
stos
das
sub
inc
or
jge
mov
out
mov
xor
outs
clc
add
or
test
stos
prefetch
inc
(bad)
mov
(bad)
push
aas
mov
jb
inc
dec
or
cwde
je
pop
pop
test
add
dec
xchg
sbb
xchg
xchg
xor
adc
loop
test
xlat
adc
lds
adc
cmp
adc
push
repz
rol
in
jno
jno
jmp
pop
cmp
daa
inc
inc
sub
lahf
imul
fld
imul
rol
(bad)
shl
sbb
ret
and
pop
jbe
cmp
js
ja
adc
and
sub
dec
sub
jnp
in
(bad)
lds
dec
jp
xlat
cmps
je
push
clc
stc
adc
and
add
xor
inc
sub
push
xor
inc
dec
popa
pusha
xor
cmp
ins
cli
inc
xchg
ins
add
lds
and
and
push
iret
scas
or
lds
and
inc
es
jb
es
and
add
dec
push
enter
sbb
fsubr
adc
and
add
inc
fidivr
ss
dec
ret
mov
sbb
inc
in
stos
add
mov
aas
lds
les
and
push
inc
xchg
mov
pop
mov
xchg
int
push
daa
(bad)
inc
aad
add
popf
or
push
test
mov
add
or
push
(bad)
inc
adc
hlt
cwde
dec
(bad)
arpl
fisttp
xor
add
call
xchg
mov
and
and
rcl
pusha
push
sub
sbb
leave
(bad)
call
mov
pop
cmp
inc
movs
retf
mov
test
jns
mov
or
mov
xchg
fsub
je
jbe
push
mov
lds
addr16
push
outs
or
cmp
cmp
sbb
shl
aaa
add
push
int
push
ins
or
outs
aaa
(bad)
ds
in
adc
or
mov
push
jge
push
(bad)
and
(bad)
adc
sbb
add
inc
call
jge
pop
xchg
push
fldenv
sbb
push
jne
mov
inc
sbb
and
inc
lahf
push
cmp
aaa
adc
adc
mov
dec
pop
test
jle
imul
leave
test
cmps
or
rol
adc
add
mov
ffree
xchg
imul
xchg
scas
push
xor
push
shr
mov
jg
scas
popa
adc
pop
lods
and
adc
sbb
test
add
(bad)
fnstsw
or
fs
adc
adc
enter
cmp
les
fs
(bad)
inc
mov
adc
mov
sbb
adc
jb
sbb
and
push
add
sbb
and
and
call
or
push
sti
push
dec
shl
xor
cli
adc
or
adc
ins
or
push
cwde
push
es
jo
cwde
push
test
arpl
or
loope
fsubr
lea
inc
sbb
and
popa
or
out
jne
add
pop
or
adc
or
repnz
and
xor
stos
mov
and
mov
pushf
sub
cmc
in
ja
fimul
inc
push
stos
arpl
sbb
add
(bad)
or
iret
jo
or
or
sub
mov
sbb
scas
add
push
xchg
add
in
or
push
nop
sbb
mov
int
bound
add
and
int3
pop
cmp
inc
pusha
push
repz
xchg
sub
or
icebp
adc
sub
push
movs
or
jbe
pop
or
cwde
mov
mov
ins
popa
jmp
mov
inc
shl
cmp
cmp
outs
ret
mov
jo
jbe
jge
es
xor
inc
jae
adc
and
test
or
loope
imul
add
or
int3
inc
or
mov
adc
mov
add
jmp
fwait
mov
or
sbb
dec
sbb
pop
or
or
push
or
mov
stos
xor
or
push
push
add
adc
cmp
out
adc
push
xchg
or
cmp
mov
loopne
jo
xchg
or
or
pop
mov
inc
push
push
pop
jge
fmul
and
dec
inc
sbb
dec
rol
xor
xor
inc
or
dec
pop
push
push
test
popa
mov
or
mov
pop
push
sbb
(bad)
cs
push
inc
push
push
dec
push
call
pop
and
push
jb
sub
jo
pop
stos
ins
shl
inc
loope
test
or
adc
sbb
pop
xor
adc
xchg
mov
fstp
aaa
inc
mov
add
jge
dec
outs
addr16
mov
sbb
shl
dec
xchg
and
ins
inc
cmps
pop
inc
loope
cld
or
es
bound
test
pop
add
jmp
sbb
or
test
pop
add
mov
test
test
fbstp
mov
and
mov
xchg
and
cli
sub
add
jecxz
xor
add
push
adc
in
push
sbb
cmp
aam
ficom
xchg
adc
jbe
retf
je
mov
stc
test
push
and
or
rcl
add
stos
push
add
dec
push
arpl
xchg
or
adc
push
imul
dec
vandnps
cmp
in
and
push
sbb
or
mov
test
jne
bound
push
nop
pop
stos
gs
xlat
inc
in
test
or
sbb
ins
dec
dec
dec
mov
inc
loopne
jnp
outs
mov
aaa
mov
or
sub
mov
mov
jecxz
add
loop
or
inc
sbb
(bad)
jmp
mov
or
adc
pusha
sbb
rcr
cwde
or
pop
add
xor
rcl
fdivr
xor
push
mov
shl
push
cmp
or
outs
adc
push
sub
shl
xchg
ins
movs
popa
loope
stos
xchg
pop
jo
pop
ins
adc
shl
fcomp
push
rol
les
jle
or
add
push
test
sub
addr16
and
test
xchg
mov
sbb
adc
pop
or
adc
or
add
or
mov
les
push
cmp
mov
add
inc
sub
or
and
mov
pop
ret
or
add
or
or
or
xlat
sub
or
adc
cmp
adc
xchg
xchg
pop
push
je
and
(bad)
pop
mov
or
mov
sbb
xor
or
and
cmp
sbb
or
inc
sbb
pop
pushf
rcl
mov
aas
pop
adc
rcl
sub
dec
test
hlt
pop
xor
outs
call
push
sub
xchg
pop
pop
xchg
xor
mov
nop
cs
or
movs
pop
adc
push
test
rol
xchg
jge
retf
mov
ret
aad
inc
pusha
push
dec
or
push
clc
ror
mov
fsubrp
loopne
dec
addr16
xchg
mov
nop
jmp
in
int
cwde
push
data16
adc
and
pop
jnp
adc
and
(bad)
mov
add
or
pop
adc
jno
scas
push
push
xor
mov
rol
stos
cmpxchg
dec
jae
mov
xchg
arpl
mov
movs
inc
addr16
dec
ror
mov
ret
lds
fcmovb
pop
sub
or
push
xchg
cmpps
xor
push
push
loopne
mov
adc
ins
add
sbb
sbb
push
push
push
popa
das
add
outs
daa
jo
test
adc
mov
shr
pop
adc
and
and
sub
sub
fs
je
test
jbe
and
test
in
mov
cmps
mov
push
adc
into
outs
outs
pop
or
cmp
mov
add
inc
pop
stos
es
xchg
out
xchg
mov
stos
inc
adc
lods
inc
jns
test
bound
jo
popf
pop
mov
jns
ins
mov
dec
jmp
loope
mov
std
inc
pusha
test
inc
mov
arpl
inc
inc
pop
fld
and
push
or
adc
or
pop
inc
imul
xchg
int
or
popf
jo
xchg
lds
xor
loop
stc
out
jno
jns
imul
dec
inc
push
inc
push
or
lods
aad
jne
or
push
mov
test
cmp
or
and
sub
pop
int3
or
dec
jbe
mov
adc
dec
pop
inc
inc
push
pop
jb
dec
push
pop
push
dec
inc
add
dec
and
ss
mov
pop
mov
daa
or
adc
add
cdq
loop
test
call
or
cmp
shl
pop
inc
sub
pop
mov
icebp
js
xor
dec
nop
mov
sub
imul
and
dec
pop
push
inc
inc
push
push
dec
push
pop
pop
inc
cmp
inc
add
add
jmp
outs
mov
ins
jns
adc
imul
es
rcr
sti
movs
rcr
inc
inc
dec
mov
lgs
and
icebp
inc
in
hlt
or
test
jno
mov
ror
adc
push
dec
push
cmp
jnp
mov
and
mov
test
push
pop
inc
mov
push
pop
inc
dec
fistp
jl
and
pop
imul
dec
inc
loope
cmps
push
xor
imul
out
pop
sbb
sbb
dec
dec
xor
jb
inc
mov
fwait
inc
inc
jae
arpl
cmc
mov
js
jmp
add
xlat
sub
or
adc
dec
push
fdivr
push
inc
stos
inc
dec
mov
mov
outs
sub
mov
in
in
lock
push
das
pop
imul
loop
aaa
retf
mov
sbb
ror
jp
push
inc
push
adc
sbb
dec
inc
push
push
cmc
cwde
imul
cli
jo
inc
movs
push
lods
(bad)
push
imul
lock
dec
dec
fstp
inc
xchg
inc
pop
push
dec
inc
adc
push
mov
push
push
pop
iret
jecxz
in
ja
jecxz
inc
inc
inc
prefetchwt1
jmp
mov
pop
cmp
fs
push
(bad)
in
inc
jno
xchg
dec
dec
(bad)
dec
inc
fst
loope
fld
inc
dec
inc
mov
fwait
shl
xor
add
add
rcl
imul
popa
data16
int3
xor
call
sbb
retf
dec
jo
mov
mov
dec
dec
pop
push
pop
fnstsw
adc
push
xor
jns
out
xor
xor
aaa
xor
push
xor
(bad)
adc
mov
dec
movs
popf
jae
inc
inc
out
shr
inc
mov
imul
jae
iret
repz
bound
pop
(bad)
inc
mov
sbb
inc
push
add
add
add
xor
xor
ror
add
mov
loop
xchg
jmp
push
or
xor
out
jae
pop
sbb
cmps
lds
cmps
add
pop
pop
add
pop
pop
sbb
dec
adc
push
mov
mov
push
sub
or
and
sbb
test
sub
jp
fist
sub
jecxz
add
mov
mov
push
pop
sub
scas
dec
add
outs
gs
dec
inc
mov
shr
mov
push
mov
inc
inc
inc
dec
push
scas
mov
xchg
inc
arpl
jbe
xor
add
bound
and
sti
jo
(bad)
gs
adc
xor
and
and
pop
adc
sbb
fwait
add
daa
rol
add
push
adc
pusha
mov
das
scas
sti
sub
pop
xchg
iret
xchg
mov
shr
popa
stos
or
cmovg
out
push
js
pop
fwait
lods
adc
xchg
loope
or
dec
sbb
add
push
outs
mov
pop
rcl
push
shr
or
inc
test
push
pop
rol
iret
movs
xor
sub
outs
and
and
or
pop
ins
and
scas
adc
adc
ret
fmul
and
dec
outs
dec
pop
inc
div
xor
clc
sbb
mov
gs
in
and
int3
pop
adc
lea
out
xor
adc
cmc
adc
nop
pop
sbb
and
mov
popf
push
outs
xchg
mov
push
jnp
mov
in
adc
stos
push
inc
int3
inc
and
inc
(bad)
push
push
and
aaa
push
popa
and
pop
sbb
es
push
push
inc
dec
push
dec
test
push
ins
cmp
rcl
adc
(bad)
xor
dec
outs
aaa
or
jns
clc
ja
es
jno
inc
dec
push
pop
dec
inc
inc
inc
scas
cmp
sbb
xchg
imul
shl
call
add
mov
repz
push
fsub
in
repnz
popa
js
xchg
or
fcmovnu
mov
jae
ins
sbb
xor
ins
push
stc
in
push
sbb
outs
add
push
outs
movs
hlt
adc
loop
popf
cmp
aaa
retw
or
or
rcl
jg
or
adc
jmp
xor
add
mov
push
enter
xchg
ins
sub
mov
xor
push
pop
pop
repz
cmp
mov
pushf
sar
test
pop
push
push
fnstenv
pop
loopne
dec
out
pop
sub
cmp
dec
or
add
sbb
in
pop
sbb
add
mov
rcl
inc
push
daa
and
inc
adc
enter
jmp
dec
aas
push
pop
sub
test
lea
mov
ins
dec
cmp
dec
xor
arpl
add
into
adc
push
mov
push
mov
and
pop
fild
pop
sub
push
inc
or
in
xor
jbe
pop
pop
mov
mov
(bad)
lock
outs
lods
or
sbb
add
ret
jecxz
in
sbb
mov
cmp
nop
mov
and
neg
adc
jae
adc
and
adc
outs
ret
inc
addr16
enter
sahf
push
or
or
outs
and
outs
jbe
and
jnp
daa
pop
test
add
mov
jo
adc
loop
out
test
dec
sar
popa
push
pop
je
push
or
lds
jmp
cdq
or
out
mov
inc
jo
xor
inc
and
adc
in
push
or
stos
lds
or
gs
pop
and
sbb
mov
leave
push
dec
dec
call
push
xor
pop
out
or
shl
sub
popa
ja
mov
and
test
mov
nop
mov
push
adc
push
or
clc
mov
ss
add
dec
inc
pop
adc
stos
mov
jne
xor
es
mov
ret
out
inc
sbb
inc
cs
adc
jae
outs
ins
fs
dec
xlat
(bad)
test
aaa
punpckhwd
adc
and
cmps
jnp
test
in
dec
pop
retf
and
pop
ud2
rol
and
data16
inc
ret
sbb
es
xchg
ja
dec
cmovbe
mov
and
(bad)
rol
mov
or
or
mov
pusha
sub
xor
ins
add
add
aad
mov
inc
pop
dec
inc
dec
dec
sub
push
(bad)
jns
dec
add
mov
jne
sub
mov
sub
cs
push
sbb
sub
adc
shl
(bad)
lods
cmp
dec
cmps
pop
jl
arpl
xchg
or
add
mov
jp
loope
xchg
inc
sbb
push
add
mov
outs
lods
fsubp
scas
sbb
ss
cmp
icebp
pop
mov
push
mov
pop
mov
inc
sbb
imul
add
dec
dec
dec
dec
dec
or
mov
mov
dec
and
push
(bad)
jmp
push
repz
dec
push
adc
jg
inc
out
lea
inc
inc
je
dec
push
or
or
clc
mov
sub
test
dec
adc
push
neg
loope
push
sbb
or
js
sub
adc
aaa
or
push
cmp
pop
xor
icebp
pop
inc
adc
fmul
out
pop
aaa
fidivr
push
xchg
dec
sub
test
or
push
loope
push
jns
daa
dec
sbb
sub
sbb
jmp
dec
dec
cmp
clc
cmc
add
ja
arpl
jns
push
adc
fstp
in
push
inc
dec
xlat
shl
jae
or
ja
push
mov
xchg
sbb
jae
sub
cmp
mov
inc
sub
sub
loope
push
sub
push
sbb
add
inc
inc
shr
push
mov
add
enter
push
or
ret
pop
lock
inc
xchg
mov
jno
sbb
jl
(bad)
imul
inc
aaa
push
and
push
sti
sbb
int3
mov
or
daa
and
pop
and
or
adc
sbb
pop
xlat
jo
xchg
arpl
inc
or
dec
sahf
mov
outs
cmp
hlt
adc
jbe
enter
jae
pop
outs
outs
adc
(bad)
ficomp
inc
outs
data16
fsub
adc
push
cmp
repnz
adc
dec
xor
fisttp
sub
push
mov
shr
mov
xor
inc
inc
pushf
mov
sbb
pop
and
popa
enter
out
inc
pop
es
adc
cmps
jb
xchg
pop
pop
jecxz
mov
xchg
mov
pop
inc
adc
je
adc
or
pop
jns
pop
cld
sub
push
push
push
das
sbb
pop
mov
dec
(bad)
inc
and
and
dec
pusha
icebp
cmp
cwde
aaa
jb
pop
sbb
popa
dec
movs
les
cdq
adc
cmps
outs
adc
cmp
add
mov
arpl
imul
adc
stc
push
and
stos
call
shr
retf
nop
adc
aad
leave
into
loopne
adc
mov
aad
push
push
addr16
sbb
dec
pop
inc
jo
jo
push
sub
xchg
adc
push
leave
cmp
mov
xor
xchg
ss
adc
or
test
and
sqrtps
dec
lods
dec
fst
and
pop
pop
inc
mov
adc
das
mov
xor
mov
ins
xor
cmps
mov
imul
ret
and
and
fcmovu
inc
test
push
inc
pop
inc
sbb
pop
mov
inc
daa
xchg
sub
or
call
xor
push
dec
push
inc
addr16
add
sbb
push
les
and
pusha
mov
(bad)
std
xchg
mov
push
adc
mov
sub
pop
push
gs
idiv
adc
stc
and
dec
push
cmp
pushf
inc
mov
inc
repnz
and
mov
mov
in
stc
aas
or
jnp
(bad)
jmp
fdiv
xchg
inc
push
add
inc
mov
(bad)
popf
sub
adc
test
inc
movs
jmp
push
mov
sbb
nop
lods
xchg
push
adc
pop
push
or
stos
nop
mov
or
or
or
xchg
lods
aas
jmp
mov
and
test
cmp
jo
inc
(bad)
push
inc
sub
arpl
or
ins
push
jb
fadd
jae
push
cmp
loop
stos
mov
retf
or
jo
bound
or
les
cmp
mov
push
or
aad
push
add
and
or
outs
enter
mov
sbb
or
push
jne
inc
pop
pop
dec
dec
ins
test
pop
and
hlt
ret
mov
add
lahf
imul
jo
jae
and
sbb
pusha
in
in
pop
xor
das
jbe
sbb
inc
or
pop
pop
cmp
push
sbb
sbb
mov
dec
sbb
ins
jbe
adc
push
sbb
sbb
cmp
(bad)
sar
inc
mov
cmp
inc
mov
inc
and
mov
adc
js
mov
cmp
cmp
mov
push
push
stos
psubq
add
int3
and
pop
pop
xor
(bad)
rcr
and
mov
xor
and
pop
ss
lock
dec
mov
inc
test
push
xor
and
dec
mov
imul
mov
sub
jo
sti
repz
add
daa
pop
inc
es
adc
inc
cwde
mov
aas
jg
and
xchg
inc
or
sub
ret
sbb
xor
mov
call
stos
push
xor
add
rol
cdq
lock
js
fisubr
daa
cmp
cmp
push
aad
or
push
mov
jnp
sub
mov
or
inc
call
mov
jns
adc
aas
gs
pusha
mov
mov
inc
pop
arpl
not
pop
sub
sub
out
pop
inc
fbld
test
mov
pusha
and
pop
inc
repnz
dec
mov
xor
pop
push
cmp
popa
push
pop
push
shl
inc
or
push
push
and
dec
and
daa
jo
pop
int3
xlat
jne
xchg
push
add
lods
xchg
push
pop
loope
pop
mov
sbb
sub
inc
add
aas
pop
stos
jge
sub
push
push
sbb
dec
inc
pop
push
lock
lds
addr16
fisttp
test
push
dec
jne
ret
or
dec
adc
js
sbb
pop
add
xor
xor
xor
add
js
pop
(bad)
fs
bound
(bad)
add
dec
lea
imul
jl
and
ret
outs
adc
mov
push
mov
stos
aam
les
push
or
addr16
jae
and
mov
adc
in
adc
ins
lock
test
arpl
pusha
or
jecxz
mov
ins
mov
sbb
xor
js
jp
adc
outs
enter
pop
dec
inc
mov
sbb
adc
out
or
sbb
jge
ret
dec
dec
inc
pop
inc
mov
(bad)
add
sub
pop
xor
inc
push
(bad)
stos
add
add
jo
mov
inc
pop
xor
cmp
adc
cmc
adc
outs
adc
push
xchg
out
push
jmp
dec
xchg
inc
in
and
add
mov
out
adc
add
inc
sti
lahf
repnz
pushf
imul
imul
or
(bad)
fdivr
nop
int
jns
mov
and
adc
jb
jl
ds
nop
adc
loopne
dec
dec
push
xor
or
dec
ss
je
mov
adc
xlat
or
cmps
loopne
push
adc
add
xchg
cmp
mov
pop
ror
pop
or
fmul
cmp
pop
dec
lock
cwde
or
xor
popa
cmp
sbb
pop
lods
xor
xchg
sbb
push
xchg
push
xor
xor
cs
dec
es
inc
cmps
fs
inc
mov
in
xor
nop
xor
sub
fcomp
stos
xor
pop
cmp
push
or
pop
test
pop
adc
inc
dec
popa
mov
push
mov
adc
mov
push
pop
or
adc
pop
imul
leave
dec
dec
data16
push
aas
lea
sbb
xor
sbb
mov
sbb
or
dec
inc
dec
cs
xor
jae
bound
inc
repz
sbb
dec
inc
push
xchg
pusha
rcl
inc
inc
loope
icebp
fist
adc
and
add
jae
pusha
push
movs
inc
mov
or
test
mov
sbb
in
lock
or
outs
outs
call
mov
or
mov
cmp
push
jb
jmp
and
or
pop
es
jae
cmp
pop
sbb
imul
es
and
or
push
dec
inc
leave
out
ins
je
adc
fild
dec
outs
js
es
mov
scas
stos
lea
stos
jo
push
lds
and
inc
mov
cmps
add
aaa
nop
pusha
or
sbb
jb
ins
in
or
popa
mov
call
cmps
loopne
outs
push
outs
adc
fadd
out
adc
xchg
les
cmp
jae
or
loope
add
and
dec
pop
or
ins
in
xor
das
push
ins
test
xor
pushf
leave
or
xchg
lock
fs
sub
loopne
call
push
loop
cmp
sub
adc
adc
fist
inc
mov
nop
dec
and
inc
js
inc
add
mul
pop
enter
dec
in
cmp
adc
sub
hlt
repz
push
sub
mov
daa
pop
add
or
or
or
and
test
in
mov
call
nop
ins
mov
call
inc
imul
pop
mov
adc
pop
iret
lock
adc
inc
or
push
push
push
addr16
dec
or
pop
repz
inc
push
mov
rol
inc
dec
(bad)
scas
sub
ret
cmp
adc
fld
sbb
out
test
adc
push
inc
scas
push
jmp
ret
(bad)
adc
inc
nop
mov
es
pop
ror
mov
bound
adc
adc
or
or
ss
arpl
and
arpl
jno
ret
mov
gs
sbb
or
lea
aam
mov
inc
test
(bad)
je
mov
pop
data16
dec
fwait
sub
(bad)
adc
outs
xor
adc
xchg
or
ret
jge
add
fst
std
or
jno
dec
outs
addr16
jo
mov
ret
data16
pop
adc
loopne
fld
or
inc
ins
popa
daa
inc
popf
mov
into
adc
pop
push
adc
mov
imul
in
cwde
femms
mov
push
jmp
aaa
sysenter
popa
jo
push
outs
or
adc
adc
sar
and
inc
movs
adc
(bad)
xchg
inc
fsubr
clc
xor
dec
leave
or
cwde
je
xor
in
xchg
fmul
retf
add
and
fisub
dec
mov
cmp
cmp
dec
mov
add
pop
adc
add
test
mov
sub
inc
test
int3
push
adc
xor
cmp
mov
sar
jbe
push
imul
xchg
stc
xor
dec
inc
rcl
pop
xlat
sbb
popa
adc
sbb
dec
pop
bound
sbb
push
test
or
inc
call
xor
outs
add
push
add
cmp
sub
mov
jecxz
sbb
das
rdtsc
mov
jb
ret
mov
mov
dec
mov
sbb
into
jae
mov
sbb
fstp
imul
mov
pop
pop
mov
sbb
popa
fdivrp
mov
sub
mov
data16
mov
jns
(bad)
pop
mov
idiv
dec
jo
test
push
fstp
sub
stos
rol
in
js
hlt
shl
fisttp
xchg
and
pop
sbb
push
bound
ins
adc
and
and
jbe
mov
cmps
js
sbb
sbb
sbb
icebp
popf
xchg
ja
and
dec
push
test
add
mov
mov
test
and
add
or
inc
mov
iret
pop
pop
ror
jmp
inc
in
je
add
out
add
nop
mov
jmp
cmp
pop
mov
push
out
xchg
push
loop
addr16
xchg
popa
cld
aad
xchg
adc
add
push
in
inc
inc
dec
bound
or
mov
inc
outs
jb
push
movs
add
inc
push
sbb
scas
loope
add
outs
mov
out
sbb
or
or
push
ss
arpl
stos
std
push
data16
add
mov
pop
jge
jae
arpl
and
inc
repz
cmp
pop
rol
or
inc
dec
push
ins
jbe
dec
ins
xor
add
push
sbb
stos
xor
test
sbb
inc
add
jmp
mov
test
sbb
sub
pop
daa
pop
inc
and
push
retf
and
push
(bad)
in
add
mov
add
sub
in
test
adc
xor
dec
adc
sub
mov
and
add
lds
push
push
fcmovbe
inc
sub
pop
mov
add
loopne
retf
pusha
shl
out
shr
add
or
clc
push
xchg
jne
sbb
lea
out
jo
or
or
mov
les
cs
leave
and
or
or
inc
mov
mov
xor
and
stos
clc
jmp
sbb
jl
cmp
jo
and
ror
addr16
add
xchg
pop
pop
pop
(bad)
outs
popa
adc
inc
pop
pop
(bad)
pusha
push
push
out
daa
push
or
data16
popa
loope
cmp
or
inc
adc
and
std
inc
inc
push
pop
xchg
lahf
or
(bad)
and
xchg
shl
sbb
xor
pop
dec
jo
dec
or
aad
outs
adc
ins
mov
xor
sbb
sub
loope
add
cmps
pop
movs
or
pop
dec
leave
or
sbb
dec
pop
pop
cmps
xchg
(bad)
or
test
aas
mov
jle
or
adc
push
push
mov
cmp
fist
xor
cs
fist
in
pop
pop
fild
ins
xor
jne
or
mov
nop
push
and
(bad)
mov
inc
mov
cmp
cmp
mov
pop
or
xchg
jb
(bad)
popf
lahf
out
js
or
jns
or
mov
ja
das
enter
orps
imul
inc
popa
push
sbb
pop
call
inc
dec
inc
mov
xchg
shl
(bad)
mov
add
xor
push
cmc
mov
data16
mov
jmp
mov
and
les
fsubr
int
adc
jbe
pop
dec
dec
pushf
dec
or
rol
pop
dec
push
fld
pop
test
and
pop
popa
js
imul
push
das
and
cmps
or
aaa
adc
inc
pop
mov
sar
adc
adc
aaa
inc
push
mov
ret
in
sub
inc
mov
mov
push
dec
xor
mov
bound
xor
xchg
(bad)
rcl
and
and
adc
mov
sub
(bad)
cmp
add
add
cli
xor
pop
jnp
add
outs
xchg
popa
pop
sbb
ss
imul
adc
mov
add
push
add
inc
inc
sub
cmps
lods
(bad)
mov
jnp
popa
sbb
adc
pop
dec
jns
aam
mov
or
movs
xchg
retf
or
inc
add
inc
aaa
jnp
lea
fs
ins
imul
call
mov
jo
out
pop
xchg
and
sbb
pushf
or
loop
popa
jmp
xor
pop
les
ins
xor
mov
dec
add
add
in
push
in
inc
sbb
ficomp
adc
xor
sar
mov
popa
cmp
inc
jb
outs
aaa
test
xchg
xor
data16
pop
call
(bad)
push
imul
sbb
jae
retf
mov
(bad)
sbb
test
loopne
or
xor
push
lahf
dec
mov
push
jp
scas
in
dec
mov
or
inc
fcmovne
imul
inc
ins
sub
daa
xchg
dec
adc
imul
das
push
and
or
push
daa
push
sbb
js
inc
and
or
jne
test
leave
das
dec
xor
add
add
jbe
pop
lods
fisttp
dec
or
push
dec
in
stos
test
dec
pop
ret
js
adc
sti
jmp
adc
jge
mov
frstor
loop
imul
test
add
std
push
cmp
dec
inc
inc
push
sub
test
sbb
jne
push
sub
ja
xchg
xlat
pusha
or
loope
add
rcr
push
pop
sbb
push
mov
dec
dec
dec
jp
add
or
add
xchg
loope
out
loop
lods
int
jecxz
imul
adc
and
paddw
ret
fs
loop
test
inc
jnp
cs
adc
inc
dec
inc
pop
sub
mov
cmp
sbb
sbb
ror
gs
inc
mov
sbb
mov
jno
vxorps
mov
dec
push
call
add
adc
push
jno
push
push
inc
outs
loope
pop
movs
adc
push
add
or
mov
adc
ficomp
js
inc
xor
jns
js
popa
outs
ins
sbb
pop
dec
ja
mov
jle
xchg
push
test
fisub
dec
dec
xor
dec
add
sbb
mov
fcmovnu
loope
adc
lahf
mov
gs
ficomp
mov
cmp
xchg
push
mov
fisttp
sbb
xor
inc
aam
xchg
mov
pop
jbe
mov
ja
stos
mov
or
dec
sbb
bound
movs
add
ret
xor
sbb
gs
out
fdivr
mul
inc
xchg
or
test
dec
jae
or
ins
jae
mov
aam
js
pop
popa
out
adc
add
xchg
sbb
aad
icebp
je
cmp
jns
sbb
push
movs
dec
mov
dec
sbb
popf
pop
arpl
push
pop
jmp
cwde
mov
pop
imul
cwde
inc
sar
scas
mov
mov
ja
inc
je
test
stos
and
jae
add
or
sti
rol
and
shl
add
rcl
cmp
xor
movs
push
imul
adc
mov
inc
and
mov
(bad)
or
and
arpl
fwait
repz
xchg
jmp
out
jns
in
outs
test
sbb
pop
add
imul
jns
call
or
inc
imul
test
imul
popa
cld
jg
inc
adc
inc
aaa
or
xchg
inc
sub
popf
cmp
(bad)
pop
dec
aaa
arpl
or
mov
cmp
push
dec
fld
movs
or
mov
push
out
or
mov
adc
cmps
out
dec
push
dec
inc
or
add
xchg
and
sbb
dec
push
fimul
or
push
ret
or
push
dec
inc
rcr
pusha
xor
adc
cwde
loop
and
xchg
test
xor
add
lods
xor
add
and
inc
stos
dec
mov
pop
inc
xchg
or
mov
inc
out
pop
sbb
inc
dec
std
push
push
bound
aad
(bad)
lds
push
push
in
dec
repz
xor
aad
add
mov
dec
dec
pop
lods
inc
mov
out
dec
add
push
xor
mov
aaa
push
sbb
hlt
fwait
test
push
xor
mov
xor
pop
mov
sub
pop
jae
aad
jp
jb
in
sbb
push
lods
fist
cmp
ins
data16
inc
sub
rcr
add
inc
push
ss
(bad)
and
pop
rol
adc
push
xlat
test
or
test
nop
and
add
pop
jo
mov
not
mov
fs
cmc
popa
xor
xor
inc
jle
or
rcr
push
xor
fadd
push
add
ja
in
xchg
inc
cmp
pusha
cdq
add
inc
mul
imul
push
adc
mov
daa
inc
clc
and
loop
lea
addr16
xchg
push
xchg
jbe
push
test
sub
(bad)
mov
in
dec
push
fisub
fild
push
jo
jo
push
loopne
cmovs
mov
je
mov
push
daa
das
ret
mov
iret
ins
dec
emms
sbb
fcom
mov
lea
nop
adc
sbb
test
xor
mov
scas
or
sti
and
cmps
inc
cmc
xor
popf
mov
sbb
jl
add
inc
jecxz
push
cmp
mov
mov
test
rcr
pusha
test
inc
xchg
cmc
xor
or
in
sub
push
and
sub
adc
inc
cmp
xor
push
jno
repnz
push
cmp
addr16
push
sub
pop
push
and
jecxz
arpl
push
dec
add
bound
addr16
daa
sbb
es
pop
xchg
cmp
or
ins
ins
mov
add
sbb
xor
dec
inc
das
push
cmp
jp
and
pop
mov
jne
(bad)
adc
retf
or
mov
inc
cmp
push
pop
aaa
dec
(bad)
cmp
jmp
dec
inc
call
sbb
dec
push
add
cmp
mov
and
mov
mov
fisttp
outs
mov
rol
or
or
sbb
push
pop
dec
ins
test
push
inc
dec
jns
and
out
sbb
mov
fimul
(bad)
pusha
imul
dec
imul
arpl
dec
je
test
adc
inc
cmp
std
stos
mov
lea
push
or
arpl
dec
frstor
inc
iret
mov
xchg
push
imul
mov
imul
imul
lidtd
mov
stos
cs
je
push
imul
popa
aas
loopne
cmp
dec
ins
adc
inc
adc
xor
pushf
ror
or
jp
and
mov
sub
sub
mov
les
inc
outs
arpl
gs
imul
mov
pusha
pusha
or
pop
popa
test
or
and
push
or
pushf
movs
ss
fsubr
imul
js
lahf
ja
and
sub
bound
add
aam
loope
dec
jecxz
adc
xor
adc
cmp
push
or
adc
mov
mov
or
stos
gs
push
adc
xchg
sbb
pusha
push
add
ret
pop
sub
int3
sbb
sbb
inc
iret
inc
test
mov
arpl
fild
xor
adc
xchg
xor
sbb
mov
fld
mov
push
dec
out
inc
fs
sub
cld
pusha
or
lahf
mov
mov
push
push
add
adc
jae
dec
inc
loopne
dec
and
jp
cmp
or
add
retf
jbe
inc
dec
sbb
arpl
mov
mov
idiv
pop
fs
inc
es
fld
fistp
stos
int
inc
inc
push
add
push
cmp
sbb
ja
sbb
and
outs
add
jne
cmp
adc
sbb
dec
pop
mov
movs
push
add
mov
pop
imul
push
add
ss
outs
pop
and
loopne
stos
push
push
dec
pop
pop
mov
adc
repnz
ins
mov
add
push
fadd
sbb
out
call
dec
sub
lods
(bad)
mov
inc
mov
mov
pop
jmp
pop
jne
adc
pop
pop
sub
call
sbb
and
int
ror
adc
xor
and
or
fstp
movs
sbb
jbe
test
stc
push
sbb
or
sub
(bad)
cmp
out
xor
cwde
test
lods
rol
rcr
dec
or
daa
movs
ins
xor
aad
sbb
inc
lahf
je
sbb
or
das
and
sbb
ins
dec
add
mov
mov
ret
push
dec
imul
sub
xor
push
fimul
push
xchg
xor
push
cmp
loope
xchg
mov
inc
dec
mov
adc
jl
lock
popa
je
mov
shr
dec
and
(bad)
repnz
or
add
test
call
add
and
xchg
jbe
xchg
rol
add
xchg
sbb
outs
popa
xor
inc
add
add
or
test
aaa
std
rcl
or
inc
fiadd
adc
ins
jno
(bad)
push
(bad)
in
xlat
dec
andnps
jae
push
inc
sbb
loope
ja
pop
sbb
dec
stc
les
inc
push
dec
aad
xor
outs
dec
or
popa
and
outs
or
mov
or
sbb
add
pop
pop
adc
mov
ret
jno
enter
pop
dec
add
pusha
bound
fmul
sub
imul
aam
rcr
dec
(bad)
push
loop
sbb
ins
jmp
jecxz
sub
mov
mov
ret
jo
into
ja
mov
dec
xchg
jl
sub
ja
jo
push
arpl
mov
scas
pop
jae
dec
or
mov
popa
and
xlat
inc
mov
inc
les
push
adc
sbb
outs
sbb
mov
sbb
fmul
cmp
pop
adc
arpl
pop
cdq
(bad)
data16
mov
jbe
pop
or
push
or
or
in
sbb
push
sbb
sbb
push
sub
and
pop
inc
aas
mov
in
imul
outs
push
not
inc
jb
add
rcr
cs
or
fimul
inc
push
jb
push
(bad)
adc
xchg
push
push
xor
add
inc
push
sub
sub
or
fbld
dec
adc
inc
dec
test
push
sahf
add
popa
mov
mov
mov
cmp
pusha
sub
adc
cmps
sub
pushf
rol
or
fist
inc
dec
pushf
adc
lea
add
ins
gs
cmp
cmp
enter
xor
pop
dec
addr16
or
pop
or
sbb
sbb
jo
sbb
pop
mov
sbb
sbb
inc
int3
push
add
dec
pop
xchg
push
xor
ret
pushf
cdq
xchg
sbb
sahf
imul
cwde
or
pop
dec
inc
lds
dec
mov
jb
xor
mov
mov
push
lods
pusha
push
ret
add
lea
sbb
xchg
push
sbb
ins
ins
in
mov
adc
jae
fistp
adc
outs
adc
sub
add
push
sti
mov
jmp
inc
inc
dec
inc
rcr
in
mov
ja
add
jne
(bad)
jmp
cmp
and
loopne
mov
adc
lods
and
sbb
adc
jge
or
ss
adc
pop
lods
movs
pop
jo
mov
or
lahf
fimul
packsswb
jge
and
inc
rol
xor
sub
xchg
push
cdq
std
lock
push
pop
inc
inc
push
dec
push
push
callw
jb
xor
push
aad
iret
sbb
pushf
pop
loop
add
add
mov
xchg
or
jae
lods
add
movs
(bad)
jle
fs
test
dec
pusha
sbb
je
sbb
test
jno
push
push
pop
add
aam
rol
sub
inc
dec
jmp
or
mov
push
es
scas
inc
jno
mov
rcl
cmp
push
jno
jo
adc
add
sti
xor
push
and
shl
adc
adc
in
pop
push
jns
jo
xchg
(bad)
adc
ins
je
(bad)
ins
cmp
or
lds
or
lods
and
sbb
dec
or
cmp
push
inc
and
jecxz
add
sbb
daa
cmps
add
test
inc
addr16
or
add
and
jae
retf
add
adc
or
push
push
add
push
cmps
hlt
sub
inc
push
xor
or
mov
xor
sbb
mov
sub
inc
fistp
adc
dec
add
xor
and
daa
mov
aas
jp
mov
pusha
jecxz
pusha
lea
xor
and
ins
imul
test
addr16
ja
cmps
ins
xchg
call
pop
js
sahf
push
mov
pop
inc
push
inc
inc
add
stos
cmps
(bad)
bound
lods
jno
hlt
jo
addr16
jg
cmp
inc
push
push
or
je
sbb
inc
fimul
inc
aas
int
enter
mov
adc
xlat
sub
adc
loope
scas
sub
mov
pop
rcl
mov
and
add
movs
sahf
ret
sub
cmovl
push
shr
or
add
jae
pop
ins
mov
mov
push
sub
leave
sbb
(bad)
jbe
mov
mov
cdq
push
push
and
push
shr
jno
jno
fs
push
adc
xchg
and
aam
retf
mov
add
inc
fimul
dec
jns
rcr
sbb
or
or
and
sbb
or
sbb
add
inc
pusha
xor
inc
aaa
xor
dec
bound
xor
stos
loop
or
(bad)
retf
cmp
adc
xor
adc
in
dec
retf
or
xchg
adc
shl
sbb
or
jo
rol
inc
jmp
fiadd
div
pop
xor
pop
gs
push
in
sbb
xor
or
cwde
or
adc
push
or
ja
sbb
or
inc
mov
cmp
sbb
or
mov
sbb
dec
fistp
mov
bound
add
jbe
rol
add
lods
bound
xchg
inc
pop
test
mov
adc
cdq
xlat
popf
mov
sub
dec
jns
jb
fsub
sbb
jmp
mov
mov
shr
jns
inc
pop
mov
or
je
imul
mov
inc
(bad)
mov
movs
add
xor
arpl
sbb
dec
out
push
inc
lahf
adc
enterw
shrd
cmp
(bad)
mov
add
rcl
inc
adc
push
add
or
or
jns
jbe
push
inc
dec
jle
adc
js
test
out
cmc
and
js
(bad)
pop
adc
ret
sbb
out
inc
loopne
pop
inc
inc
inc
scas
mov
add
in
bound
cmp
shl
cmc
ror
push
loopne
(bad)
pop
pushf
jns
jbe
add
or
ins
cmp
mov
xor
gs
add
imul
cmp
pop
cmp
lea
inc
popa
fwait
xchg
xchg
imul
ins
and
cmps
or
inc
jno
inc
sbb
daa
jbe
xchg
sub
jo
xchg
xor
ins
mov
sub
push
sbb
mov
and
fld
pop
mov
cmp
push
or
dec
xor
push
sbb
es
sbb
inc
and
mov
mov
push
pop
and
or
or
mov
sbb
lods
bound
movs
pop
and
push
sub
inc
push
or
and
push
sar
outs
pop
push
xor
inc
cmp
add
fs
add
push
cmp
push
add
xchg
inc
inc
sbb
mov
scas
mov
mov
push
add
(bad)
sbb
xor
adc
lods
adc
push
sbb
xor
jno
aaa
or
lds
popa
add
ror
jb
push
inc
jne
xor
or
pusha
cmps
push
dec
mov
adc
push
xor
xor
mov
sub
sub
or
pop
pop
enter
mov
sbb
leave
inc
and
xor
loop
add
pop
dec
outs
ins
pusha
mov
nop
inc
loopne
jo
cwde
inc
add
rol
(bad)
xor
dec
sub
xor
mov
cmp
fs
or
arpl
mov
cmp
push
add
or
loopne
sbb
call
mov
lods
xchg
jmp
add
pop
adc
adc
ds
fstp
pop
mov
ficom
adc
dec
pop
inc
xchg
or
cwde
add
add
aam
ins
lock
adc
sbb
loopne
xchg
sub
jae
mov
xor
fidiv
push
cli
test
cs
lahf
adc
dec
and
jns
movaps
jno
js
or
in
mov
sub
mov
jns
jae
jp
inc
or
add
sbb
adc
xor
(bad)
push
mov
shl
sbb
enter
sbb
add
imul
xor
add
dec
add
pop
gs
fldenv
stos
and
popf
jne
adc
rcr
push
dec
ins
mov
mov
movs
sbb
lea
xlat
cmp
mov
sti
mov
scas
shl
push
jne
leavew
inc
push
mov
popa
push
(bad)
rcl
add
popa
xor
es
aad
pop
dec
in
inc
repz
in
mov
xor
xor
sub
and
outs
or
movs
mov
sbb
pop
or
bound
cdq
add
sub
sub
stos
not
nop
sub
(bad)
sub
sbb
ficom
push
fild
cmp
or
xor
xor
push
outs
or
add
sub
and
xchg
push
or
sub
or
jmp
bound
outs
push
ss
js
mov
call
xor
sbb
scas
mov
and
inc
inc
les
icebp
mov
inc
popa
cmp
adc
xchg
push
jno
ja
cmp
xor
and
inc
arpl
jo
push
ins
sbb
and
mov
push
push
xor
adc
inc
mov
shl
xor
and
in
sub
repnz
mov
adc
daa
dec
mov
xchg
dec
dec
pop
adc
jecxz
dec
push
mov
in
adc
fdiv
xor
add
imul
jae
pop
push
outs
pop
clc
push
loopne
test
push
push
pop
cmp
or
xor
test
pop
inc
and
lods
nop
nop
mov
sub
sbb
adc
pusha
mov
test
movups
mov
fs
test
jo
push
or
lods
and
nop
pusha
outs
inc
sbb
ret
push
inc
cdq
mov
clc
jae
inc
inc
iret
jg
shl
or
and
sbb
gs
jno
imul
int3
inc
mov
je
push
ror
sbb
pusha
add
jle
mov
popa
outs
cmp
pop
cmp
mov
and
and
rcr
mov
in
sbb
pushf
and
pop
rol
lods
ror
pop
cmc
imul
xchg
daa
fdiv
add
ss
out
push
pop
pop
adc
inc
or
pusha
lahf
imul
and
ret
or
or
push
xchg
adc
call
add
add
adc
int
arpl
not
adc
sbb
sbb
pop
fimul
or
or
add
adc
stos
pusha
xor
stos
cs
sbb
repnz
sub
scas
xchg
sub
push
das
fld
mov
cmp
xchg
gs
mov
imul
add
shl
adc
add
push
cmp
outs
adc
call
push
dec
or
xor
call
add
push
add
leave
add
fidivr
mov
dec
jae
jo
jo
test
add
xor
push
pminub
rcl
cmp
or
rcl
(bad)
push
jne
lea
pusha
mov
or
inc
popa
push
pop
sbb
push
wbinvd
cmp
sbb
inc
(bad)
retf
push
imul
cdq
and
dec
add
adc
push
loope
shl
adc
inc
sbb
add
adc
jbe
fs
sbb
lock
jb
sbb
and
inc
dec
fimul
mov
pop
arpl
mov
stos
adc
sub
adc
inc
xchg
frstor
in
add
push
sub
dec
mov
fisttp
mov
pop
out
push
test
loope
inc
adc
iret
push
jo
rcl
or
rol
sub
adc
push
add
add
add
push
pop
pop
push
adc
adc
rol
je
push
test
fild
icebp
scas
dec
or
inc
movs
rcl
push
dec
inc
cdq
xor
xchg
arpl
fisubr
outs
cmp
adc
cmp
sub
or
inc
mov
inc
pop
pop
adc
adc
imul
ror
add
jae
pop
mov
or
movs
ret
and
push
cmp
mov
fs
bound
ret
cmc
push
mov
sbb
fimul
pop
daa
push
dec
adc
push
pop
xchg
dec
(bad)
rol
dec
jae
add
push
pop
pop
nop
(bad)
sub
push
xor
(bad)
xor
xor
lods
or
or
dec
sub
push
sbb
cmp
push
mov
ror
sbb
dec
add
ins
sub
or
or
mov
adc
adc
adc
add
fs
dec
ins
ja
add
addr16
addr16
xlat
mov
add
push
or
xor
pop
dec
adc
add
fadd
xor
push
inc
sti
cmp
add
aas
jo
mov
or
iret
or
bound
or
cs
cmps
jo
lods
in
or
adc
outs
and
mov
adc
jmp
mov
xor
fld
or
xchg
cdq
pop
mov
xchg
sbb
bound
push
das
push
dec
int3
jecxz
mov
sub
add
add
or
sub
mov
pop
mov
sub
dec
jmp
sbb
add
adc
or
or
or
jge
ins
xor
or
movs
push
mov
add
push
test
das
and
or
jo
clc
fmul
inc
pop
pop
in
or
adc
add
cld
cmp
sub
jb
fistp
push
retf
or
dec
sub
mov
mov
push
into
add
and
xor
(bad)
call
push
pop
mov
mov
mov
or
adc
sub
sbb
xor
stos
sbb
xor
push
sysexit
or
sbb
dec
and
cmp
out
sbb
les
in
adc
push
adc
es
mov
add
pop
and
sbb
add
push
cmps
sub
push
pop
mov
rcr
inc
dec
and
add
cmps
cmp
dec
jae
xor
xchg
(bad)
pop
sub
add
or
(bad)
aas
inc
or
jno
ins
jnp
push
adc
test
loope
ja
push
dec
add
ds
jl
jbe
jbe
ins
and
add
add
xor
push
or
or
data16
mov
or
and
sub
pop
pop
fstp
pop
push
pop
(bad)
cs
and
(bad)
cmp
test
adc
cmp
bound
test
fisubr
loope
je
inc
jo
out
xor
adc
adc
mov
push
rcl
adc
add
sub
gs
jecxz
fs
dec
loopne
mov
imul
and
or
sub
sbb
xor
xor
jns
jge
std
rcr
shl
mov
or
inc
and
xchg
pushf
rcl
adc
fisttp
push
pop
js
and
ret
fs
push
push
adc
imul
mov
jmp
mov
add
ss
test
imul
mov
pop
adc
pop
or
js
mov
aaa
aas
or
jmp
sbb
adc
loop
sub
loop
add
push
retf
or
mov
scas
(bad)
adc
or
jecxz
cmp
push
add
sbb
or
aaa
imul
sub
add
fdiv
and
jbe
add
mov
shl
push
test
push
mov
push
mov
adc
xlat
aas
or
jns
xor
sbb
adc
adc
sbb
ret
add
or
fld
daa
or
or
lds
dec
(bad)
or
mov
loope
sahf
and
ror
adc
adc
adc
and
xchg
sbb
ins
rcr
xchg
or
mov
add
sub
sub
add
xor
je
fist
xor
ret
and
adc
cmp
push
sub
pop
sub
and
popa
sahf
add
inc
jo
xchg
jo
rcr
jecxz
push
mov
mov
std
das
pop
bound
adc
inc
inc
inc
jle
sub
and
mov
pop
mov
adc
test
ins
(bad)
mov
leave
adc
lea
jge
arpl
jb
fmul
jo
iret
xchg
loope
sti
xlat
popa
mov
mov
ins
and
ss
pop
mov
dec
mov
lea
imul
popa
movs
loop
mov
cmp
dec
or
jb
and
inc
cmp
push
push
sbb
ins
sbb
and
adc
cmp
pop
jecxz
push
mov
pop
inc
push
bound
imul
sub
or
push
or
push
mov
push
add
mov
xchg
pop
jnp
mov
ins
sbb
jnp
push
and
cmp
mov
dec
xchg
pop
inc
cmp
arpl
add
in
or
popa
pop
xchg
lods
mov
out
adc
xchg
mov
ins
jae
or
add
dec
ins
movs
jb
sbb
sbb
clc
or
adc
mov
int3
sub
add
sti
sub
xor
xchg
xchg
clc
push
inc
in
push
or
cwde
xchg
mov
xchg
mov
loopne
sub
or
test
sub
or
adc
and
(bad)
fnsave
aad
sub
xor
push
jo
fnstenv
sbb
adc
xor
sysenter
aaa
adc
cwde
fdivr
sbb
fs
xchg
adc
jne
pusha
shr
sbb
dec
aas
rcr
cmp
inc
sbb
push
aaa
mov
iretw
sbb
sbb
push
dec
mov
out
sub
cmp
pop
xchg
fdiv
dec
dec
sub
adc
lods
adc
push
inc
sub
add
fist
cmp
mov
sub
ret
arpl
xchg
je
push
add
test
or
xor
test
adc
xor
mov
ins
push
nop
ror
adc
mov
sub
out
int3
jbe
inc
push
pop
setbe
push
cmp
and
and
pop
iret
or
adc
sbb
fcomip
test
cmp
inc
(bad)
mov
xor
pushfw
pusha
ins
jo
jae
push
jns
or
adc
sbb
repnz
popa
mov
cmp
and
inc
mov
inc
imul
jae
bound
or
adc
or
push
xchg
or
out
pusha
jbe
adc
jo
movzx
xchg
dec
xor
jb
das
sbb
cmp
loopne
cs
or
and
jne
mov
push
ds
adc
in
sbb
ja
pop
fwait
add
ins
and
sbb
sbb
add
add
inc
inc
sub
xlat
mov
mov
pop
pop
sbb
or
xor
shr
or
xor
adc
jmp
fcomp
jno
and
jb
or
mov
popa
jo
mov
adc
push
lahf
lock
bnd
mov
jle
les
cmp
ficomp
gs
dec
xor
shr
adc
xor
mov
push
in
and
bound
add
aam
popf
movs
mov
push
aaa
stos
dec
add
loope
je
sub
lods
inc
in
je
clc
mov
mov
jo
mov
adc
mov
mov
add
fist
daa
stos
xchg
test
ins
hlt
imul
pushf
fs
mov
(bad)
dec
add
mov
fwait
sbb
adc
loope
or
lods
mov
pop
add
lds
jae
dec
push
outs
xlat
leave
(bad)
pop
sbb
inc
sbb
sbb
sbb
push
ins
call
rdpmc
jne
fcom
sbb
repz
jmp
or
(bad)
movs
aad
(bad)
ins
rol
push
jl
push
mov
or
or
sub
and
adc
test
loopne
(bad)
add
or
inc
stc
jmp
ds
add
dec
or
sar
rol
or
loopne
mov
mov
and
jns
fs
and
dec
adc
ins
rcr
iret
inc
mov
add
cmp
adc
cmp
sub
or
dec
js
pop
or
and
das
sbb
sub
fcomp
sub
out
sub
das
cmp
sahf
inc
shr
sahf
jno
rol
fmul
mov
movs
lds
pop
ja
xchg
dec
mov
add
push
adc
lds
dec
cmp
pop
xchg
dec
fwait
popf
out
pop
aas
or
and
adc
adc
push
movs
push
aam
popf
add
mov
mov
enter
mov
add
cmp
cmp
xor
jo
(bad)
pop
dec
dec
ret
sub
fmul
(bad)
adc
sar
jecxz
or
test
cbw
inc
inc
or
inc
or
add
bound
dec
bound
cs
jnp
pusha
or
jmp
push
xor
inc
loop
daa
int
sub
les
pop
arpl
dec
and
dec
xor
pushf
and
adc
add
rol
dec
adc
sbb
dec
stc
sbb
shl
or
inc
lahf
outs
imul
adc
loop
or
dec
xchg
sbb
jns
jns
or
adc
sbb
ins
movs
sbb
mov
xchg
icebp
adc
cwde
hlt
push
sub
adc
sub
lods
inc
rol
xor
push
(bad)
inc
imul
cmp
sar
sahf
mov
mov
dec
inc
jecxz
pop
and
or
lds
jne
mov
jo
ror
stos
add
inc
sbb
xchg
inc
push
xchg
sub
or
xor
into
ds
lods
bound
or
test
sbb
or
movs
pushf
mov
aaa
push
mov
arpl
xchg
jnp
jo
cmps
inc
jo
sub
movs
dec
retf
or
xchg
sbb
sub
add
pop
(bad)
and
add
imul
cmp
popa
pop
pusha
adc
dec
in
dec
xor
or
dec
push
jns
or
or
es
sbb
es
les
jns
jnp
mov
adc
ret
push
pop
jbe
sub
in
mov
push
inc
jo
push
sbb
dec
xor
adc
imul
inc
dec
inc
jae
mov
adc
(bad)
inc
inc
adc
push
dec
cmps
ss
dec
popf
dec
adc
inc
cmp
inc
sub
inc
pop
inc
rcl
les
inc
test
inc
mov
nop
mov
fisubr
dec
push
sub
push
sub
push
fbld
das
xor
mov
adc
lea
or
sbb
push
test
ror
push
or
inc
mov
hlt
push
add
(bad)
rcr
lods
test
sub
xor
push
sahf
pop
or
fcomp
(bad)
bound
daa
push
arpl
shr
aaa
sbb
sbb
sbb
push
jno
rol
mov
or
inc
dec
imul
adc
mov
and
pop
sbb
sub
xor
mov
push
xlat
jo
inc
jae
fs
pusha
add
dec
and
imul
pop
jl
lea
por
ins
scas
lahf
sub
ins
(bad)
shl
and
outs
pusha
neg
pop
outs
imul
and
add
adc
aad
ss
mov
adc
arpl
imul
push
les
test
cmp
addr16
add
adc
dec
pusha
push
arpl
out
or
in
and
sar
out
jae
xor
and
movs
gs
or
je
push
mov
xchg
xchg
pop
push
popa
or
call
pusha
in
fcom
inc
dec
das
ja
xchg
or
je
and
fcomip
pop
inc
pop
sbb
or
pushf
adc
outs
add
push
outs
sbb
or
dec
mov
cmp
ja
mov
push
rcl
loopne
pop
fwait
adc
rcl
inc
adc
pop
or
inc
mov
enter
adc
add
and
sub
or
mov
pop
jo
in
or
add
imul
dec
jbe
inc
and
or
push
adc
xchg
fs
and
sub
leave
cmps
xchg
sbb
or
xchg
jecxz
popa
sti
in
cmp
dec
push
push
cmp
pusha
push
jae
mov
pop
cmps
outs
adc
adc
ds
push
lods
or
and
dec
out
ja
jno
inc
jge
test
sub
ja
push
mov
xchg
dec
inc
loope
mov
call
jbe
xor
sbb
adc
aas
push
lods
jo
rol
dec
pusha
nop
add
ja
adc
xchg
loop
and
sbb
or
xlat
sub
out
jbe
pop
imul
dec
retf
mov
loope
add
push
pushf
bound
ins
adc
adc
sub
dec
xor
retf
mov
or
mov
shl
repz
and
adc
xor
pop
in
loopne
mov
mov
inc
pop
bound
xchg
les
enter
cmp
jmp
je
retf
or
or
mov
adc
xchg
mov
sbb
pop
or
sbb
xchg
mov
ins
jae
or
xchg
xchg
adc
ins
cmp
ret
adc
fs
jge
push
outs
pop
xor
mov
and
js
dec
jne
xchg
adc
scas
xor
dec
inc
ss
push
sbb
ror
adc
stc
hlt
dec
ins
mov
loope
adc
repz
jb
cmps
inc
and
inc
movs
xchg
sahf
pop
sbb
pop
sbb
sbb
mov
pop
shr
nop
xor
pop
shr
pop
pop
fwait
(bad)
and
and
and
adc
dec
call
call
push
inc
and
mov
ja
adc
adc
inc
cmp
shl
xlat
ret
dec
pusha
push
jg
dec
(bad)
or
or
adc
inc
xchg
stc
mov
inc
aad
pusha
cmps
repz
jae
push
sti
or
test
sbb
xor
daa
outs
not
fcom
lods
mov
sub
xchg
mov
pop
dec
inc
xor
enter
cdq
imul
add
mov
lds
adc
sub
adc
push
in
push
(bad)
adc
test
xor
jecxz
or
xchg
sbb
lods
sub
mov
mov
test
xchg
push
es
adc
je
inc
xchg
push
adc
mov
adc
ret
adc
jbe
and
imul
xchg
push
push
push
cmp
cmp
jo
std
adc
mov
xchg
outs
xchg
dec
adc
aad
rol
dec
jne
scas
cmps
movs
je
mov
push
jno
outs
arpl
and
dec
scas
sbb
inc
adc
add
add
or
jo
pop
daa
out
xchg
sbb
inc
inc
inc
ss
bound
adc
fwait
adc
adc
and
loope
or
adc
jmp
ret
pop
pop
out
lods
or
cwde
jo
cmp
repz
xor
push
xor
sbb
push
push
int
fcomp
mul
shl
and
mov
aaa
mov
mov
dec
push
sub
sbb
jmp
popa
jo
les
cmp
inc
test
call
mov
pop
int
popf
inc
or
and
push
cmp
in
jo
pop
test
fiadd
mov
inc
dec
jae
fsubr
fwait
adc
imul
adc
push
pop
arpl
cmp
and
sbb
inc
in
pop
jo
add
or
scas
in
and
add
add
mov
test
int
mov
dec
outs
imul
daa
cs
shl
push
loopne
mov
les
nop
fld
sbb
mov
leave
mov
dec
jmp
pop
(bad)
sbb
or
and
push
sub
cmp
sbb
imul
and
ss
jno
push
add
xchg
mov
and
fisub
dec
gs
pop
outs
or
cwde
nop
mov
int3
stc
sbb
fmul
adc
push
sbb
popfw
pusha
or
xchg
push
mov
and
add
into
cdq
adc
stos
(bad)
xor
imul
inc
xor
push
retf
or
or
mov
fisub
jnp
inc
popa
mov
ficom
pop
loop
movs
dec
aaa
add
mov
or
sub
sub
loop
mov
fsub
or
rcl
fwait
mov
dec
inc
sub
cmps
add
inc
or
mov
(bad)
ffreep
or
in
adc
pop
sub
inc
adc
and
dec
mov
and
xor
and
inc
test
xor
ret
ret
pop
xor
pop
fmul
imul
sbb
push
cmp
mov
push
pop
loope
dec
and
imul
xchg
pop
movhlps
mov
mov
cmovns
inc
sbb
add
push
nop
jne
(bad)
ja
ror
sbb
push
sub
inc
dec
push
sbb
les
(bad)
adc
fistp
push
jo
mov
iret
adc
daa
popa
or
adc
jnp
(bad)
sar
mov
sahf
in
ja
sbb
fst
add
mov
ins
ror
jb
and
sbb
ss
sbb
in
mov
xchg
add
add
mov
popf
mov
push
jbe
mov
adc
shl
ror
adc
ficom
sbb
dec
sbb
movs
mov
push
pusha
mov
mov
xor
sub
jbe
inc
sbb
test
stos
inc
mov
popa
aas
add
jmp
or
clc
push
jp
mov
or
imul
mov
xor
cli
pusha
mov
xchg
adc
(bad)
adc
sbb
inc
aam
out
mov
inc
push
mov
push
leave
sbb
push
push
dec
aaa
pop
mov
adc
sub
push
loopne
pusha
push
add
fmul
adc
mov
in
pop
inc
adc
dec
popf
adc
xchg
jb
push
jno
jp
movs
mov
stos
dec
sub
push
daa
pop
bound
popa
pop
(bad)
sbb
test
add
sbb
in
cmp
dec
ins
cmp
push
jb
inc
sub
wbinvd
cmp
adc
and
movs
dec
adc
pusha
and
xlat
inc
xchg
pop
sbb
jnp
adc
les
ret
lods
shl
adc
adc
and
nop
fld
cmp
inc
adc
inc
sub
test
sbb
push
add
rcl
inc
mov
sub
and
ror
mov
or
es
dec
pop
lods
jmp
sbb
push
mov
lds
mov
mov
fsub
add
imul
sbb
loope
daa
and
cmp
bound
cmp
ret
aaa
mov
xor
mov
fiadd
inc
ror
mov
hlt
imul
push
xchg
shr
bound
inc
sbb
add
cmp
ss
cmp
lds
test
popf
xor
mov
outs
push
mov
push
xor
adc
in
fadd
xor
cdq
inc
xor
aas
rcr
mov
mov
push
jbe
jno
or
inc
push
inc
and
pop
xchg
jp
mov
cmp
sbb
add
cmps
movs
out
push
mov
mov
adc
jmp
sbb
cmps
and
aas
adc
dec
pop
ja
mov
pop
push
dec
fwait
sbb
jb
adc
xchg
adc
(bad)
xor
adc
icebp
push
push
pop
mov
push
pop
outs
mov
inc
or
pop
adc
mov
dec
bound
sub
loope
inc
(bad)
movs
push
shl
mov
or
enter
jo
arpl
push
jo
and
mov
fisubr
fild
fld
inc
ss
add
or
cmp
fst
sbb
add
loopne
add
sbb
push
cmp
cwde
fcom
dec
popf
ror
dec
push
outs
mov
fld
or
dec
adc
or
sub
sbb
and
adc
loope
sbb
jns
shl
mov
outs
pop
xchg
(bad)
xor
movs
mov
or
push
mov
sub
out
sub
xor
fsub
ins
aad
sub
mov
or
je
push
jb
dec
test
into
pop
jno
add
sbb
lods
hlt
mov
outs
daa
adc
inc
test
daa
adc
frstor
xchg
or
pop
or
sar
or
sbb
adc
aad
mov
mov
inc
and
test
mov
or
popf
or
sbb
add
sbb
loope
stos
test
adc
pop
or
sub
push
or
sbb
cmp
iret
xor
sub
cmp
jno
pop
add
pop
inc
ret
pushf
cmp
inc
hlt
pop
jbe
pop
rol
sbb
push
cs
(bad)
mov
shl
sbb
jmp
jb
xchg
popa
mov
fs
xor
jae
jae
mov
add
mov
cdq
sub
or
ret
cmp
xchg
dec
fld
adc
adc
fadd
push
repnz
repnz
mov
bound
or
pop
lds
jo
and
inc
arpl
das
jo
push
jno
jge
mov
iret
loopne
add
push
push
sbb
stos
movs
pop
mov
loope
dec
out
pop
loop
adc
adc
ins
dec
cwde
jo
sbb
and
push
push
push
push
jmp
inc
jb
mov
and
int3
push
std
adc
xor
mov
xor
add
sub
xor
sbb
pop
or
push
adc
xor
test
xchg
mov
enter
sbb
add
xchg
(bad)
add
or
xlat
adc
es
cdq
jle
les
jmp
sbb
mov
or
jl
and
sub
or
xlat
sahf
cmp
sbb
int3
les
fimul
shr
adc
pop
loopne
dec
ret
inc
hlt
add
sbb
inc
cmp
int3
sti
xor
dec
or
sub
rol
ds
xchg
lods
dec
test
enter
add
inc
movs
push
mov
xor
jp
ins
mov
or
xor
outs
add
frstor
movs
or
pop
inc
in
test
sbb
jmp
sbb
sbb
inc
(bad)
sbb
test
push
fsubr
ins
adc
dec
pop
pop
in
cmp
repz
ror
and
lods
mov
iret
mov
lods
cmp
cwde
inc
cmps
mov
and
mov
popa
cmp
adc
sbb
inc
dec
and
(bad)
scas
(bad)
mov
mov
neg
and
sub
pop
adc
outs
sub
mov
sbb
sar
sbb
sbb
mov
cmps
fdivr
sbb
pusha
loopne
ror
enter
sahf
rol
jge
sbb
cmps
sbb
ins
adc
leave
push
ror
outs
ds
retf
and
xor
xor
sub
push
push
leave
xchg
mov
shl
lea
and
mov
add
loope
sub
sbb
xchg
inc
push
or
dec
outs
adc
mov
arpl
movs
xor
jae
jo
ins
pushf
fadd
enter
cwde
cmp
lods
jmp
cdq
sbb
sbb
add
mov
fwait
std
sbb
addr16
sbb
mov
xchg
dec
sbb
sbb
ds
cs
sbb
dec
adc
and
shr
aam
xor
mov
daa
test
(bad)
shr
inc
sbb
mov
dec
fldcw
adc
ins
adc
or
inc
cmp
ins
outs
pusha
pop
scas
and
push
or
xchg
mov
jmp
dec
mov
add
mov
outs
dec
les
pop
dec
ror
fld
sub
sbb
aas
dec
inc
addr16
test
mov
sub
dec
mov
push
mov
or
out
add
outs
daa
shr
leave
dec
sub
test
and
dec
adc
inc
xchg
xchg
into
or
stos
mov
pushf
rol
or
popa
pop
inc
pop
add
inc
repz
xor
push
sbb
jae
pop
push
and
adc
in
adc
mov
mov
cmp
jmp
add
jmp
mov
movs
or
pusha
xor
add
arpl
mov
cmp
xor
sub
push
ss
push
mov
jmp
ins
outs
dec
or
dec
outs
or
stos
sbb
add
mov
lea
lea
dec
sti
fdiv
add
dec
jb
jp
pop
les
popa
aaa
and
push
rcr
out
sbb
and
ret
inc
add
test
sbb
dec
loopne
xor
push
dec
xor
lea
xchg
or
jnp
and
xor
xchg
scas
or
push
out
or
mov
ror
xchg
push
inc
dec
pop
adc
inc
mov
push
inc
dec
inc
pop
lea
inc
jo
nop
arpl
fchs
and
fadd
and
dec
or
or
lea
sub
mov
(bad)
add
xor
test
add
mov
out
or
adc
cmps
jo
adc
test
mov
aad
hlt
sub
pop
jnp
pop
dec
or
or
and
imul
data16
lea
and
xchg
xchg
push
int
inc
xor
das
addr16
push
adc
push
dec
push
or
or
test
in
push
pop
stos
sbb
jnp
test
fld
ss
pop
call
push
xchg
add
ret
or
shl
movs
push
cs
cs
add
dec
xchg
in
xor
cwde
ror
cmp
mov
push
and
or
xor
push
or
mov
or
jmp
dec
cmp
lods
push
pop
and
nop
add
aas
push
pop
jg
xchg
adc
inc
mov
cmp
(bad)
(bad)
adc
adc
sub
fcom
sbb
xlat
aaa
xchg
xchg
or
scas
(bad)
mov
inc
mov
inc
sub
mov
dec
(bad)
aas
jae
or
add
sbb
dec
stos
cmp
enter
aaa
and
add
lea
addr16
cmps
shl
test
add
fist
adc
adc
push
sub
pop
les
imul
mov
jmp
adc
stos
adc
ja
sbb
cdq
int
mov
push
jmp
adc
test
nop
adc
jge
sub
ss
sbb
inc
xchg
dec
in
inc
cmp
xor
lea
adc
add
rcr
cmp
adc
adc
mov
mov
mov
xor
xor
adc
pusha
cwde
and
add
cmps
sbb
push
or
test
pusha
inc
push
or
or
or
or
ror
jno
push
clc
inc
push
imul
pop
add
add
or
test
cwde
dec
or
rol
ins
call
or
fimul
stos
push
jno
xchg
nop
mov
adc
inc
dec
or
mov
or
push
jg
test
retf
call
adc
xor
or
or
mov
dec
sbb
movs
push
cmp
push
xchg
ret
mov
xor
rcl
xor
mov
or
das
xchg
xchg
arpl
adc
mov
inc
pop
mov
dec
mov
cmovne
mov
adc
adc
or
fsubr
xchg
cmp
inc
adc
add
sub
sbb
push
scas
dec
xchg
and
out
or
in
sti
inc
fsubr
mov
inc
dec
es
dec
adc
and
aad
sbb
sbb
xchg
rol
mov
out
adc
dec
test
sbb
fwait
lods
jecxz
or
mov
mov
xchg
dec
sbb
sbb
or
xor
femms
out
loopne
(bad)
xor
ja
cwde
or
add
push
in
js
enter
jmp
loope
xchg
adc
sub
xor
or
sub
mov
imul
call
mov
xchg
sub
xor
dec
dec
dec
inc
cmp
retf
add
test
test
and
and
scas
rcl
push
out
sbb
or
pop
daa
stos
xlat
inc
or
mov
push
shr
minps
mov
aad
xor
push
fwait
and
mov
or
push
aam
jl
xor
jecxz
iret
xchg
xlat
xor
popf
add
sub
push
imul
mov
imul
sar
xlat
add
dec
push
pop
push
stos
inc
or
mov
inc
dec
inc
lods
fiadd
jb
push
test
ret
sbb
cmps
daa
xchg
push
add
cmp
xchg
arpl
(bad)
xchg
aaa
dec
mov
push
gs
adc
ja
aaa
adc
or
mov
sub
icebp
push
push
or
mov
xchg
mov
adc
cmp
adc
dec
int
mov
fidivr
mov
inc
mov
xor
sub
sbb
xchg
dec
mov
dec
bound
adc
adc
data16
cmp
inc
mov
ret
inc
jmp
xor
jns
test
mov
and
and
cmps
movs
inc
pop
or
repz
or
mov
inc
dec
dec
(bad)
lods
inc
call
sub
or
cs
lahf
(bad)
sub
cs
mov
cs
jmp
les
pusha
popf
es
inc
adc
jnp
xor
or
inc
mov
dec
adc
and
sbb
dec
sbb
mov
les
jo
sbb
test
mov
pop
and
pop
mov
pop
adc
push
adc
sub
es
adc
xor
jnp
sub
shr
push
js
push
or
jg
fnsave
push
cmp
sbb
adc
in
or
std
sbb
data16
pop
mov
pop
mov
fisttp
xor
test
aad
mov
or
mov
xor
mov
adc
adc
pop
pop
cmc
push
add
imul
pop
jmp
sbb
mov
adc
xor
rcl
xor
and
mov
inc
call
shl
cmps
cmp
dec
sub
push
mov
popa
cmp
rdtsc
adc
xor
or
mov
xor
jnp
cwde
sub
sub
shl
out
pop
retf
outs
xor
imul
cmp
or
sub
or
out
mov
dec
xchg
xchg
pop
adc
lods
mov
mov
pop
push
sbb
sub
pop
pop
add
or
xchg
or
test
xchg
jo
jns
sbb
adc
mov
je
push
test
bound
mov
sub
stos
or
cmp
push
sbb
jbe
cmp
mov
bound
lods
or
jecxz
jno
pusha
add
daa
icebp
push
in
bound
mov
push
inc
push
pop
or
dec
mov
(bad)
xor
push
push
pop
aas
enter
pop
arpl
and
mov
loope
ins
cmp
sub
pop
cld
pop
fs
rcl
pop
xchg
push
xor
mov
cmp
and
pop
mov
nop
retf
outs
mov
arpl
sbb
ins
jnp
push
pop
pop
adc
lods
adc
and
sub
gs
nop
sub
mov
movs
push
or
popa
call
mov
mov
pop
imul
shl
push
outs
and
or
and
inc
inc
sbb
cmp
add
shl
dec
mov
jg
les
push
and
inc
dec
push
pop
xchg
test
icebp
in
jo
and
pop
test
xchg
fisttp
popa
scas
push
iret
cli
or
out
sbb
mov
pop
adc
test
sub
jbe
xchg
or
test
retf
icebp
and
pop
push
dec
or
sbb
xchg
sbb
or
loop
(bad)
test
push
inc
or
sbb
je
rcl
add
addr16
fiadd
mov
add
or
push
dec
or
and
or
inc
pop
stos
fs
in
adc
stos
dec
sub
(bad)
fst
push
mov
imul
(bad)
and
xor
mov
mov
push
push
fld
inc
bound
inc
popf
ins
lahf
out
fdivr
fs
outs
xor
pop
and
cdq
push
sub
xchg
fsub
xor
daa
adc
cmp
pusha
or
inc
call
xor
adc
test
test
jbe
xchg
add
clc
stc
push
pop
dec
and
sbb
jnp
inc
loope
inc
loop
or
adc
pusha
inc
mov
xchg
push
add
call
ss
je
xchg
sbb
adc
std
dec
int3
mov
xchg
pop
xor
arpl
stc
inc
scas
and
xchg
adc
lods
adc
nop
sbb
mov
out
mov
pusha
push
dec
into
push
push
jmp
sbb
inc
lea
add
dec
push
aaa
sbb
outs
and
rol
push
adc
ror
and
and
sbb
push
and
mov
xor
dec
dec
mov
mov
add
xchg
sbb
jb
push
popw
cmp
and
or
int3
mov
or
add
test
imul
sbb
shl
sub
or
pcmpgtd
sub
sbb
dec
sub
mov
pop
inc
push
adc
call
test
add
mov
fcom
(bad)
mov
dec
aas
sub
sub
jmp
pop
imul
or
and
and
dec
jns
or
mov
dec
inc
mov
cmovbe
adc
adc
repz
or
or
ret
add
arpl
mov
push
add
add
adc
adc
and
pop
adc
int
out
adc
popa
sub
sub
xchg
push
retf
or
xor
inc
and
fiadd
and
les
mov
push
aaa
inc
bound
or
cvtdq2ps
mov
jbe
pop
mov
test
adc
sar
cs
gs
xchg
or
shr
jnp
adc
mov
nop
and
fcmove
nop
pop
mov
pop
cmps
mov
retf
or
xor
fild
cmps
adc
inc
mov
(bad)
xor
mov
adc
mov
push
jb
inc
ins
jecxz
mov
ins
push
adc
mov
or
rcr
sbb
ins
leave
xor
or
jne
fcmovb
mov
cmp
jnp
loopne
inc
mov
push
lods
add
pop
cmp
inc
daa
movs
xor
pop
out
push
mov
dec
push
or
sub
push
inc
stos
xchg
(bad)
je
lock
and
inc
ins
and
jmp
sbb
or
ins
sub
imul
or
out
pop
aam
repnz
mov
shl
popa
mov
adc
or
or
add
adc
or
bound
rol
or
dec
sub
sbb
ja
or
jno
jp
nop
mov
das
sbb
and
xchg
push
adc
push
aas
adc
push
jp
inc
sbb
ins
xchg
adc
push
(bad)
adc
mov
jbe
les
adc
nop
rol
mov
daa
iret
pop
lea
jge
or
sbb
fldenv
(bad)
or
push
xchg
int
mov
mov
cmp
pop
popa
js
loope
iret
dec
mov
pusha
inc
sar
and
popa
mov
pop
add
or
cmp
sbb
inc
add
cdq
pop
adc
inc
sub
add
aas
jecxz
mov
mov
bound
aaa
push
test
sar
test
lea
push
cmc
dec
fnstcw
or
dec
ins
adc
xchg
xchg
xchg
or
push
lods
ins
push
fiadd
sbb
idiv
outs
or
mov
add
shl
movs
xchg
or
adc
or
leave
inc
sbb
call
pushf
ror
loop
daa
fucom
mov
adc
retf
or
mov
sbb
iret
(bad)
dec
imul
adc
pop
or
ss
sbb
mov
inc
and
mov
adc
imul
dec
bound
or
and
xchg
or
in
jne
int3
pusha
rcl
dec
push
daa
xlat
xor
push
fwait
inc
cmps
dec
push
mov
dec
xchg
leave
cmp
cmps
(bad)
or
sbb
lea
fmul
dec
jg
retf
sbb
and
mov
sbb
sub
dec
popa
jp
stos
xor
rcr
test
sub
or
movs
sub
(bad)
xchg
rcl
int3
pop
loop
or
scas
std
mov
std
or
sbb
ins
int
sbb
sbb
call
movs
and
cmp
and
mov
push
xlat
jne
adc
sbb
bts
or
jb
xchg
mov
in
mov
(bad)
ret
dec
into
ss
mov
push
popa
or
stc
adc
add
mov
iret
inc
xor
dec
or
dec
lds
lds
jge
sub
push
and
mov
add
aas
fild
ins
sbb
popa
sbb
adc
pop
out
pop
fild
js
ins
cwde
int3
mov
mov
xor
(bad)
retf
adc
push
sbb
sub
cmp
pop
sbb
push
adc
dec
imul
add
push
inc
repnz
repnz
dec
add
mov
enter
dec
add
cmp
add
add
cmp
add
add
cmp
add
cmp
add
add
cmp
add
pop
gs
pusha
and
push
add
fs
rol
inc
dec
les
dec
repnz
(bad)
jl
int3
or
add
push
add
fmulp
repnz
sbb
add
jne
or
jbe
mov
add
add
jns
sbb
add
xchg
xchg
das
pushf
pop
or
call
pop
fmul
dec
push
add
sub
xorps
pop
inc
add
jg
in
jbe
sub
icebp
pop
push
inc
add
add
shl
daa
mov
add
lock
mov
adc
dec
inc
imul
add
and
and
add
inc
cmp
sub
pop
adc
cmp
jns
mov
dec
add
in
(bad)
add
sub
adc
add
add
sbb
or
pop
xor
or
add
add
add
pop
mov
and
add
inc
inc
add
add
add
out
addr16
adc
push
sar
add
jo
add
and
inc
stos
dec
sbb
mov
fisub
addr16
inc
add
mov
mov
dec
push
adc
add
add
sbb
outs
push
add
cmp
cmps
mov
add
movs
add
adc
add
xor
mov
xor
shl
lea
(bad)
mov
sub
or
inc
fstp
or
adc
aaa
or
cmp
pop
mov
add
and
push
jnp
xchg
push
sbb
add
stos
pusha
adc
mov
cwde
or
xor
and
ror
mov
dec
push
or
test
adc
imul
sbb
add
inc
adc
cmp
mov
xchg
add
push
or
add
inc
mov
inc
les
add
adc
pop
xor
inc
scas
xor
push
dec
fs
mov
popa
xor
movs
ins
or
add
int
leave
cdq
pushf
sbb
or
int
push
nop
fldcw
lods
imul
xor
mov
jne
cmps
and
pushf
emms
les
add
sub
leave
les
jmp
dec
(bad)
jb
sbb
pop
les
jo
inc
and
or
add
mov
pop
sbb
push
loopne
call
shl
or
and
cmp
dec
mov
movs
ror
outs
ret
dec
add
call
pusha
mov
inc
mov
iret
jp
dec
mov
push
cmc
sub
add
mov
std
inc
enter
mov
pop
xchg
adc
push
data16
mov
dec
sbb
and
ja
mov
lahf
cli
or
neg
push
mov
das
mov
push
repnz
add
sbb
ins
pusha
adc
mov
clc
mov
or
jb
pusha
push
add
add
div
or
xor
push
push
xor
add
arpl
cs
out
dec
or
dec
mov
cmp
lock
leave
add
mov
xchg
stos
sbb
shl
dec
push
mov
jae
dec
push
daa
pop
adc
fcomp
dec
sub
pop
pmaxsw
lea
cs
and
xchg
jo
add
mov
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
push
and
pop
and
or
inc
