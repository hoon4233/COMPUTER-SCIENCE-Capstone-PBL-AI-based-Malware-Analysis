inc
cwde
movs
jb
add
mov
jb
push
jb
push
mov
jb
mov
movs
jb
add
jb
or
jb
jbe
jb
ret
mov
jb
push
jb
add
jb
mov
icebp
lahf
mov
jb
add
jb
add
jb
jbe
jb
xchg
mov
jb
bound
jb
fwait
mov
jb
les
jb
mov
xchg
jb
or
jb
ret
mov
jb
sbb
jb
call
sbb
push
mov
jb
xchg
mov
jb
jae
jb
sbb
jb
xchg
mov
jb
mov
mov
jb
ins
mov
jb
add
jb
xor
movs
jb
dec
mov
jb
ja
jb
mov
pop
jne
jb
jne
jb
imul
xchg
mov
jb
out
mov
jb
(bad)
mov
jb
frstor
jb
imul
add
sub
add
call
add
cmp
add
inc
add
cmp
add
add
add
add
add
cs
add
inc
add
das
inc
add
inc
add
inc
add
xor
aaa
xor
aaa
xor
int
inc
add
xor
repnz
pusha
xor
pusha
xor
div
inc
add
inc
add
xor
add
xor
inc
add
ss
add
inc
add
ss
add
add
aaa
inc
add
inc
add
cmp
ins
cmp
fstp
inc
add
cmp
jno
inc
add
cmp
dec
cmp
xchg
cmp
add
inc
add
inc
add
add
add
add
push
inc
add
inc
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
inc
add
inc
add
inc
add
inc
add
add
inc
push
add
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
inc
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
add
add
add
xor
add
inc
add
add
add
add
fst
pusha
test
dec
stos
lods
daa
loop
add
add
add
push
imul
ins
jae
add
int3
xor
or
mov
stos
mov
pop
inc
and
add
adc
push
test
out
stos
data16
xor
or
stos
add
xchg
jns
add
cmp
add
add
add
add
outs
jb
xor
sbb
add
and
and
stc
add
ins
je
add
stc
add
add
add
or
add
add
push
add
add
and
add
add
call
pop
add
sbb
adc
add
add
call
or
add
adc
add
add
sub
add
push
or
add
xor
add
add
add
or
add
add
or
test
add
ficomp
add
sbb
add
add
or
enter
xchg
add
adc
add
add
add
add
dec
sub
add
add
add
add
add
test
add
xor
add
add
add
mov
add
and
add
add
add
fild
add
sbb
add
add
add
in
add
adc
add
add
and
push
cmc
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
ja
jo
add
ja
xchg
ja
add
add
ja
add
push
push
jo
ja
ja
add
ja
clc
jo
or
pop
add
mov
add
js
(bad)
clc
mov
add
add
ja
clc
clc
clc
clc
(bad)
jg
clc
jo
add
add
clc
clc
jg
(bad)
inc
(bad)
(bad)
(bad)
clc
clc
(bad)
clc
jg
clc
clc
clc
jo
add
(bad)
(bad)
clc
(bad)
dec
(bad)
pop
add
add
add
add
(bad)
clc
jg
(bad)
(bad)
add
(bad)
(bad)
(bad)
clc
clc
clc
clc
(bad)
jg
mov
(bad)
(bad)
dec
(bad)
(bad)
(bad)
add
(bad)
(bad)
(bad)
dec
mov
add
(bad)
clc
jg
mov
add
(bad)
clc
(bad)
jg
mov
(bad)
(bad)
clc
(bad)
dec
mov
add
add
clc
clc
(bad)
jg
xchg
(bad)
(bad)
(bad)
(bad)
clc
(bad)
clc
jg
mov
jo
add
(bad)
(bad)
clc
(bad)
(bad)
(bad)
clc
vpmacssdql
add
add
add
add
clc
clc
jg
xchg
add
(bad)
clc
(bad)
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
mov
xor
add
add
add
add
(bad)
clc
jg
js
js
cdq
cdq
cwde
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
js
mov
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
js
xchg
add
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
mov
add
add
add
add
add
add
(bad)
clc
(bad)
js
mov
adc
sbb
add
add
add
add
mov
mov
add
add
add
add
clc
mov
jo
add
(bad)
(bad)
inc
mov
xchg
jo
add
pop
adc
add
add
add
(bad)
(bad)
(bad)
jg
mov
js
jae
cmp
add
add
add
(bad)
(bad)
dec
cdq
cdq
cdq
cdq
nop
add
add
add
(bad)
(bad)
(bad)
(bad)
dec
js
xchg
cwde
(bad)
(bad)
(bad)
clc
mov
pop
ja
add
add
pop
adc
add
add
or
xchg
push
add
add
sbb
add
add
add
or
mov
xor
or
add
add
mov
cdq
cdq
push
cmp
add
add
add
add
adc
add
add
add
add
pop
adc
or
ja
xor
sbb
add
cdq
sbb
add
mov
xchg
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
aas
(bad)
inc
add
inc
ud0
add
push
add
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
jg
add
inc
add
ds
add
add
add
aas
add
inc
add
add
add
add
add
add
inc
add
jg
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
jg
add
inc
add
jmp
add
add
add
(bad)
(bad)
out
cld
add
add
(bad)
(bad)
dec
(bad)
stc
add
(bad)
(bad)
inc
jmp
add
(bad)
(bad)
inc
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
ja
jo
add
xchg
add
pop
ja
add
clc
jo
add
add
add
add
jo
js
jg
xchg
js
(bad)
(bad)
jg
inc
add
add
clc
dec
clc
jg
add
add
add
clc
(bad)
clc
(bad)
jg
(bad)
(bad)
jg
add
add
add
clc
clc
dec
jg
add
add
add
clc
dec
mov
add
add
add
clc
(bad)
dec
add
add
add
or
dec
mov
add
or
(bad)
dec
jo
add
add
add
clc
clc
(bad)
(bad)
jg
mov
add
add
add
psubb
(bad)
dec
add
add
add
or
(bad)
clc
(bad)
jg
xchg
add
add
clc
clc
(bad)
(bad)
jg
mov
jo
add
add
or
(bad)
(bad)
dec
add
add
add
or
(bad)
(bad)
(bad)
jg
js
adc
add
add
psubb
sub
(bad)
jns
add
add
or
div
jg
xchg
add
add
add
or
js
mov
add
jg
mov
add
add
or
(bad)
(bad)
mov
add
add
mov
xchg
push
jo
pop
xchg
add
add
add
mov
mov
add
add
add
add
jo
add
add
or
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
(bad)
inc
ud0
add
(bad)
clc
add
(bad)
cld
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
jg
add
jg
add
(bad)
clc
add
pop
clc
add
pop
clc
add
(bad)
clc
add
xbegin
add
(bad)
cld
add
jecxz
add
add
(bad)
cld
aas
(bad)
call
add
push
movaps
add
sbb
add
xor
add
add
add
add
add
and
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
ja
ja
add
add
add
ja
push
ja
jo
add
add
pop
jo
mov
add
add
mov
dec
add
add
(bad)
clc
clc
mov
push
add
add
clc
(bad)
clc
mov
mov
js
mov
or
(bad)
clc
(bad)
add
add
jg
mov
or
clc
clc
mov
add
js
js
jo
add
or
(bad)
dec
add
add
(bad)
(bad)
clc
(bad)
xchg
add
or
mov
mov
add
jg
js
add
add
or
mov
jns
add
or
(bad)
clc
vpmacssdql
mov
add
add
add
xchg
xchg
cwde
add
add
add
add
add
add
add
jns
add
jno
add
add
add
add
(bad)
(bad)
inc
(bad)
out
inc
inc
inc
loopne
inc
loopne
inc
lock
loopne
jg
loopne
jg
loopne
jg
loopne
jg
loopne
jg
loopne
jg
loopne
pop
add
add
loopne
dec
add
add
add
add
loopne
pop
add
add
add
add
cld
add
add
idiv
add
lock
(bad)
cld
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
ja
ja
jo
add
mov
mov
add
add
xchg
jg
mov
(bad)
jg
xchg
add
add
idiv
add
add
mov
add
mov
add
(bad)
jg
xchg
jo
add
mov
add
mov
add
pop
add
(bad)
clc
mov
add
add
aaa
add
add
pop
jns
add
pop
add
clc
pop
add
lock
lock
lock
lock
lock
lock
lock
lock
add
lock
lock
add
lock
add
pop
add
lock
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
xor
add
ss
cmp
add
cmp
inc
inc
inc
add
inc
add
inc
add
dec
add
dec
add
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
pop
add
pop
add
popa
add
add
add
jno
jbe
jb
jbe
jbe
js
jne
jns
jbe
ja
js
jle
jp
jle
jl
cmp
dec
test
pop
mov
popa
xchg
add
jno
add
lahf
add
add
add
push
mov
add
sbb
mov
add
adc
add
sub
adc
stos
add
cmp
add
mov
add
mov
add
and
add
stos
add
add
inc
popf
add
push
mov
add
add
stos
add
mov
movs
add
test
jno
test
outs
jno
add
movs
add
test
jnp
stos
add
add
mov
jnp
mov
add
add
add
or
add
push
lds
sbb
ret
add
adc
les
sbb
adc
add
add
rol
sub
xlat
add
fadd
es
add
push
fild
das
adc
add
adc
add
adc
add
sbb
add
sub
add
cmp
add
adc
add
adc
les
dec
cmp
add
add
fld
dec
xor
add
add
fiadd
inc
sbb
add
loop
dec
sub
add
jmp
push
sub
add
add
jmp
add
enter
into
add
leave
add
rol
pop
inc
fld
popa
dec
rol
push
int
popa
inc
fild
push
push
(bad)
add
xlat
add
add
loopne
pop
inc
in
addr16
out
fs
call
add
add
jecxz
jb
jmp
jbe
in
add
call
add
cmc
add
icebp
add
loopne
jg
lock
ja
add
imul
xchg
jp
add
imul
mov
add
outs
std
add
jg
add
jl
add
lea
jle
test
add
add
add
mov
mov
mov
lea
mov
xchg
add
xchg
xchg
add
sahf
popf
add
sub
pop
mov
add
mov
movs
add
test
add
lods
stos
add
scas
lods
add
movs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
test
add
xchg
(bad)
add
call
mov
fiadd
xchg
and
fwait
and
movs
xchg
out
movs
xchg
jmp
cwde
call
add
mov
add
cwde
repnz
movs
out
mov
loopne
mov
in
add
mov
add
mov
add
mov
rol
(bad)
rol
rol
(bad)
add
enter
retf
ror
into
add
ror
add
rcl
add
aam
add
aad
add
xlat
xlat
add
fcom
add
fcmovnu
add
in
add
out
add
in
in
add
lock
add
repz
stc
stc
add
(bad)
inc
add
add
add
add
adc
add
scas
stos
pop
adc
add
add
stos
pop
adc
add
add
add
add
stos
cmps
pop
add
add
cmc
lock
adc
add
push
add
add
push
stos
mov
mov
or
add
mov
adc
stc
cli
std
int
clc
scas
(bad)
(bad)
clc
stos
or
add
add
pop
scas
int
stc
sti
stc
stc
clc
clc
std
(bad)
mov
(bad)
std
mov
add
int
cmc
std
sti
sti
stc
stc
stc
cli
stc
stc
dec
mov
std
std
(bad)
in
sbb
add
add
push
std
cli
sti
cli
sti
cli
stc
cli
stc
std
int
std
scas
(bad)
cld
sti
sti
stc
std
stc
mov
add
add
std
in
(bad)
sti
cli
sti
cli
cli
cli
cli
stc
dec
mov
sti
stc
stc
clc
stc
mov
add
add
inc
(bad)
cli
sti
sti
sti
cli
cli
cli
cli
dec
mov
stc
clc
clc
cmc
clc
mov
add
add
inc
(bad)
sti
sti
sti
sti
cli
sti
cli
cli
dec
mov
clc
div
lock
mov
add
add
dec
(bad)
sti
sti
sti
sti
sti
sti
cli
cli
dec
mov
cmc
repz
repnz
add
lock
(bad)
sti
std
sti
sti
sti
sti
sti
sti
dec
mov
repnz
jmp
scas
add
add
call
(bad)
cld
cld
cld
std
sti
sti
sti
sti
dec
mov
lock
enter
add
lock
(bad)
cld
std
cld
sti
std
std
sti
sti
dec
mov
(bad)
int
(bad)
int
add
add
dec
(bad)
std
std
std
std
std
sti
cld
sti
(bad)
jmp
(bad)
mov
retf
les
add
(bad)
in
(bad)
std
std
std
std
std
std
std
cld
dec
ret
test
(bad)
stos
add
add
(bad)
in
(bad)
(bad)
std
(bad)
std
std
std
cld
cld
(bad)
in
mov
ret
mov
add
add
dec
(bad)
(bad)
(bad)
std
std
std
std
std
std
(bad)
in
mov
mov
stos
add
add
(bad)
in
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
std
std
(bad)
out
mov
mov
lods
add
add
(bad)
in
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
std
std
(bad)
out
scas
(bad)
mov
mov
(bad)
lods
add
add
(bad)
in
(bad)
(bad)
(bad)
std
(bad)
(bad)
std
(bad)
std
push
mov
mov
stos
jge
aas
inc
aas
inc
add
dec
(bad)
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
push
scas
std
mov
mov
fs
sub
cmc
std
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
push
scas
std
mov
mov
xchg
xchg
add
repnz
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
push
scas
cld
mov
mov
mov
add
add
cld
in
(bad)
(bad)
(bad)
sti
int
(bad)
(bad)
(bad)
push
mov
mov
es
add
add
add
aas
add
add
(bad)
in
(bad)
(bad)
call
and
(bad)
(bad)
stc
mov
mov
sub
xor
sub
add
icebp
(bad)
out
(bad)
push
and
mov
in
in
cli
mov
mov
ja
pop
pop
push
add
add
icebp
(bad)
cli
icebp
clc
icebp
and
and
div
cmc
clc
lock
mov
mov
ret
scas
add
add
cli
(bad)
(bad)
std
push
push
enter
clc
div
cli
mov
xor
aas
push
add
clc
cli
(bad)
(bad)
(bad)
(bad)
(bad)
std
stc
clc
div
idiv
sti
mov
mov
sub
dec
mov
xor
add
add
int
icebp
cmc
repnz
clc
stc
sti
sti
std
(bad)
(bad)
(bad)
(bad)
mov
aad
fwait
xchg
push
daa
daa
sub
sub
jns
icebp
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
sti
cli
clc
stc
stc
retf
mov
cli
jmp
test
clc
(bad)
(bad)
(bad)
cld
cld
sti
stc
clc
repz
int3
mov
mov
aas
inc
inc
lods
pop
add
inc
aas
icebp
lock
clc
icebp
int
mov
mov
xchg
jl
xor
add
add
add
add
es
add
test
in
les
ror
int
loop
mov
xor
aas
aas
aas
aaa
sub
sub
jns
add
add
jmp
jno
push
push
push
push
jnp
add
add
mov
inc
push
add
call
add
add
es
add
loope
call
mov
aas
es
inc
add
lahf
pushf
mov
push
dec
daa
sub
sub
sub
sub
add
add
loopne
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
aas
(bad)
inc
add
inc
ud0
add
push
add
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
jg
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
jg
add
inc
add
ds
add
add
add
aas
add
inc
add
add
add
add
add
add
inc
add
jg
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
jg
add
inc
add
jmp
add
add
add
(bad)
(bad)
out
cld
add
add
(bad)
(bad)
dec
(bad)
stc
add
(bad)
(bad)
inc
jmp
add
(bad)
(bad)
inc
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
inc
jg
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
aas
aas
add
add
dec
add
push
add
push
add
push
add
pop
add
popa
add
data16
push
ins
imul
outs
outs
add
jo
jne
jae
jbe
jbe
jp
jp
ins
mov
mov
add
sub
mov
add
xor
add
xor
mov
cmp
add
lods
add
mov
pop
dec
mov
add
mov
add
add
add
add
mov
jb
mov
or
add
adc
add
sbb
add
sbb
add
psrld
sub
fld
sub
aad
cs
add
and
retf
add
sbb
add
fadd
push
cmp
loop
push
sub
add
add
inc
les
dec
dec
retf
inc
int
push
inc
iret
add
add
les
addr16
rol
dec
(bad)
add
fild
imul
ins
dec
jecxz
push
loope
outs
push
jecxz
jp
in
add
add
jae
add
jno
add
push
loopne
xchg
add
jns
add
jo
add
xchg
add
test
(bad)
mov
add
xchg
xchg
add
cwde
xchg
add
test
sahf
cwde
mov
mov
sahf
test
mov
mov
movs
add
test
lods
add
mov
scas
add
mov
add
mov
add
mov
add
mov
mov
add
or
call
add
xchg
aad
mov
test
add
test
add
(bad)
in
fwait
mov
add
in
add
fwait
cmc
add
mov
add
rol
(bad)
(bad)
(bad)
leave
leave
leave
add
int
add
ror
add
retf
iret
int
add
rcl
add
rcl
add
aad
add
(bad)
add
fcmovnu
add
fstp
add
(bad)
add
loopne
add
loop
add
jecxz
add
in
add
in
add
out
add
jmp
in
add
icebp
icebp
add
cmc
cmc
add
stc
stc
add
(bad)
inc
(bad)
(bad)
inc
pop
push
push
(bad)
add
add
pop
push
(bad)
add
add
add
adc
or
add
jb
xchg
add
add
add
add
add
add
xchg
mov
pushf
or
add
add
add
mov
arpl
pop
add
xchg
add
pushf
pushf
popf
mov
xchg
mov
add
sahf
sahf
pushf
mov
xchg
pushf
(bad)
call
add
lahf
sahf
lahf
mov
mov
add
lahf
lahf
sahf
mov
mov
add
lahf
lahf
lahf
mov
ins
mov
arpl
add
mov
mov
mov
add
mov
mov
arpl
add
add
mov
mov
arpl
add
add
mov
mov
arpl
add
add
mov
mov
arpl
add
add
mov
lahf
mov
jbe
jns
add
add
mov
lahf
mov
pop
add
xchg
mov
(bad)
(bad)
jmp
mov
adc
sbb
add
xchg
mov
je
jmp
mov
inc
cmp
cmp
xchg
mov
push
je
addr16
pusha
popa
pop
mov
add
adc
xchg
mov
sub
add
add
and
add
add
add
add
mov
pushf
jb
lea
xor
sub
sub
add
lahf
pushf
popf
lea
jl
(bad)
pop
add
add
xchg
ins
push
arpl
xor
sbb
pop
add
add
and
add
jb
push
arpl
pushw
dec
inc
xor
adc
adc
add
test
jns
add
xor
pop
adc
add
add
adc
sbb
adc
adc
add
das
aaa
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
aas
(bad)
inc
ud0
add
(bad)
clc
add
(bad)
cld
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
jg
add
jg
add
(bad)
clc
add
pop
clc
add
pop
clc
add
(bad)
clc
add
xbegin
add
(bad)
cld
add
jecxz
add
add
(bad)
cld
aas
(bad)
call
add
push
movaps
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
inc
add
inc
add
push
add
push
add
push
add
pop
add
arpl
jns
jbe
add
add
sbb
add
cmp
add
mov
add
add
mov
add
mov
add
mov
add
and
add
cmp
add
retf
cmp
add
ret
push
rol
pop
ret
pop
rol
pop
lds
fs
rol
pop
ret
pop
les
push
mov
mov
arpl
add
ret
ins
les
push
arpl
add
ret
add
lds
ins
les
ins
imul
add
int
jl
enter
int3
add
mov
jns
add
rol
jge
rol
jle
rol
outs
ja
add
aam
jne
(bad)
add
loopne
test
add
jbe
add
(bad)
add
ja
add
fadd
test
add
fs
dec
sbb
imul
jbe
mov
jns
mov
xchg
add
xchg
xchg
add
cwde
xchg
add
sahf
pushf
add
mov
mov
cwde
xchg
mov
cdq
xchg
mov
popf
popf
mov
mov
mov
mov
add
test
test
lods
lods
stos
add
scas
lods
add
cmps
mov
add
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
sar
xchg
test
add
lahf
int
mov
rol
nop
xchg
add
(bad)
add
mov
les
mov
mov
in
cmps
cdq
loopne
mov
cmps
out
add
mov
rol
ret
ret
ret
mov
add
enter
leave
enter
retf
int
add
into
int
rcl
into
add
rcr
int3
int3
fiadd
rcl
rol
aad
rol
(bad)
(bad)
aad
fcom
(bad)
add
(bad)
add
fcmovnu
add
fstp
add
loopne
add
enter
shr
ror
call
add
(bad)
add
fsub
add
loope
add
in
add
loop
add
jecxz
add
in
add
out
add
call
repz
hlt
hlt
add
(bad)
inc
add
add
add
or
pop
pop
or
add
add
or
add
cwde
call
add
pop
cwde
jmp
jmp
test
stos
fwait
(bad)
mov
add
fwait
mov
mov
(bad)
call
add
add
add
stos
pushf
nop
(bad)
fwait
xchg
or
add
add
add
fwait
cmps
cwde
lods
stos
lods
cmps
(bad)
nop
call
mov
lods
cmps
nop
xchg
cwde
outs
pusha
jno
add
fwait
mov
stos
xchg
xchg
xchg
pusha
pop
jo
add
pushf
pushf
pushf
jmp
pusha
pop
jo
or
fwait
mov
test
pop
jo
add
fwait
pushf
call
xchg
pusha
pop
movups
jbe
add
add
add
add
lods
stos
(bad)
xchg
xchg
pusha
pop
jp
sbb
sub
add
add
add
pushf
test
lea
bound
add
jne
cmps
cwde
mov
pop
or
adc
or
add
add
add
stos
popf
movs
cwde
mov
inc
xchg
(bad)
xchg
nop
lea
outs
sbb
add
or
add
add
add
add
outs
ins
xchg
pop
pop
or
sbb
add
jnp
jnp
inc
sbb
adc
add
push
adc
xor
add
pop
sbb
add
(bad)
(bad)
inc
(bad)
out
inc
inc
inc
loopne
inc
loopne
inc
lock
loopne
jg
loopne
jg
loopne
jg
loopne
jg
loopne
jg
loopne
jg
loopne
pop
add
add
loopne
dec
add
add
add
add
loopne
pop
add
add
add
add
cld
add
add
idiv
add
lock
(bad)
cld
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jno
jbe
jne
jns
jns
inc
aaa
mov
add
add
lds
push
dec
rol
addr16
fadd
jae
fld
jl
rol
xor
mov
cmp
jae
add
jo
add
mov
mov
cdq
add
mov
cmps
add
movs
lods
add
test
scas
add
mov
add
mov
mov
add
mov
add
(bad)
repnz
mov
add
ret
(bad)
leave
enter
retf
retf
add
iret
iret
add
rcl
add
(bad)
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
loop
add
jecxz
add
in
add
jmp
jmp
in
in
in
add
icebp
icebp
add
cmc
cmc
add
cli
cli
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
sbb
pop
sbb
add
add
add
sbb
xor
cs
pop
cmp
xor
sbb
sbb
add
add
add
add
cmp
cmp
sbb
sbb
add
add
add
add
cmp
cmp
sbb
sbb
add
add
add
add
cmp
cmp
sbb
or
add
add
add
add
cmp
cmp
pop
cmp
sbb
or
pop
or
add
add
add
and
sbb
and
add
add
add
add
cmp
sbb
or
or
add
add
add
and
aaa
or
sub
and
or
add
add
add
(bad)
aas
cmp
or
pop
or
add
add
add
sub
and
sub
adc
adc
add
add
adc
pop
pop
pop
or
add
pop
add
clc
pop
add
lock
lock
lock
lock
lock
lock
lock
lock
add
lock
lock
add
lock
add
pop
add
lock
add
add
add
or
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
pop
(bad)
fnstcw
jmp
out
mov
in
cmps
pop
sub
fst
mov
stc
test
add
pusha
push
mov
cmp
es
adc
lods
xor
cwde
and
fadd
es
mov
and
gs
dec
xchg
sub
mov
test
out
fcomi
jne
cmp
out
pop
jne
mov
jp
and
lahf
push
jge
jmp
mov
pop
ins
retf
mov
retf
fistp
fucomip
or
xchg
ins
mov
mov
scas
xor
add
sahf
pop
cmp
xchg
cs
cwde
fyl2xp1
aam
xchg
int
cmp
pusha
adc
add
pop
aad
mov
outs
pop
push
loope
daa
dec
push
cmps
ja
cmp
sar
repz
mov
mov
call
retf
sub
cli
loopne
sub
xor
mov
cmc
push
pop
sahf
sbb
scas
mov
push
adc
icebp
cmp
test
cmp
pop
or
add
push
fisttp
mov
adc
mov
cmc
and
xor
xor
(bad)
out
ss
sahf
ss
pop
out
rcr
push
(bad)
sar
fst
mov
imul
test
xor
fimul
push
ss
add
enter
mov
pusha
pop
pop
xor
int3
xchg
or
mov
push
pop
jno
or
adc
sub
push
dec
xor
mov
sub
or
jne
mov
add
clc
inc
imul
pop
lods
mov
rcr
sub
stos
or
arpl
or
in
sub
fdivr
push
fwait
jbe
repz
jle
cmp
cmp
sbb
arpl
fidiv
mov
mov
stos
and
out
pushf
jge
mov
shl
(bad)
mov
dec
(bad)
mov
neg
fcomp
xor
ret
loopne
mov
sub
xchg
shl
adc
xchg
or
mov
movs
nop
movs
call
ss
xor
dec
xor
ins
call
add
bound
xchg
jmp
add
jmp
movs
rol
sub
dec
push
add
add
lods
push
dec
dec
lods
xor
test
gs
mov
and
mov
ja
ja
loop
fdivrp
icebp
in
std
sbb
mov
push
in
pop
jg
es
cwde
adc
and
fbld
mov
and
or
push
loopne
cmp
test
mov
xor
sti
cmp
jbe
add
dec
sbb
out
mov
imul
inc
jbe
adc
pusha
mov
cwde
ret
push
imul
fucomip
retf
mov
mov
dec
adc
add
dec
mov
lahf
cmp
adc
or
icebp
lock
es
xchg
cmp
push
sub
ds
pop
xchg
adc
mov
mov
in
mov
pop
cmp
daa
movsx
std
pop
mov
(bad)
cmp
pop
push
jns
pop
(bad)
xchg
cmp
pop
fwait
mov
and
(bad)
in
add
sub
ret
test
inc
test
push
add
lods
into
and
std
ds
inc
idiv
push
(bad)
ins
cmps
sbb
dec
fdiv
inc
pusha
lods
add
push
fbld
outs
dec
mov
pop
fdivr
imul
xchg
std
(bad)
adc
xor
xchg
popa
rcl
gs
jle
mov
leave
ins
xchg
bound
adc
add
dec
mov
jmp
cmp
fimul
cmp
dec
adc
ret
adc
icebp
pop
push
push
mov
cli
xlat
iret
sbb
jle
loop
dec
push
imul
mov
add
cs
jecxz
mov
call
push
xchg
fdivp
out
popf
fnstenv
pop
inc
pop
mov
push
xchg
or
and
sub
(bad)
xor
push
cmps
fcmovnb
mov
outs
je
arpl
sub
pop
add
add
cmp
push
adc
push
push
test
pusha
xor
nop
push
mov
dec
sbb
cwde
jle
mov
dec
mov
inc
inc
push
mov
(bad)
ret
and
add
lds
mov
test
jl
or
cld
mov
pop
popf
and
mov
arpl
daa
mov
in
push
scas
jge
ret
stos
addr16
cmp
pop
mov
cmp
loope
mov
jge
and
shl
cli
inc
jae
sub
popf
cmc
leave
pop
ret
xor
cmp
sub
pop
lahf
call
dec
scas
cmp
adc
sub
pop
pop
pop
ins
je
xchg
div
mov
jns
adc
ret
cmps
aam
xor
and
sbb
hlt
dec
ja
cld
or
or
jg
outs
push
pushf
mov
in
hlt
sbb
sub
sbb
inc
add
je
cmps
or
rol
add
dec
mov
inc
add
inc
push
and
aad
test
bound
enter
xlat
jle
shl
div
jge
cmps
data16
std
out
arpl
popf
stc
mov
int3
xchg
aas
mov
add
xchg
(bad)
dec
iret
inc
scas
call
retf
pop
sar
gs
out
test
push
ret
sbb
adc
xor
fcom
fucomi
bound
sahf
jbe
dec
pushf
sub
push
cmp
call
or
cmp
sbb
rcr
or
add
sub
pop
or
dec
lods
adc
pop
inc
adc
xor
es
adc
fistp
mov
iret
dec
push
jns
addr16
enter
add
repnz
fcomip
aas
in
popf
push
stos
scas
or
loopne
mov
xor
sbb
lds
call
ret
scas
mov
ffree
idiv
cwde
and
arpl
adc
add
jmp
push
add
cld
jg
cmp
dec
add
cmc
or
hlt
jno
popf
push
mov
daa
cmp
js
add
movs
pop
(bad)
jae
inc
mov
dec
adc
adc
mov
dec
clc
cmp
cdq
retf
imul
idiv
push
pop
dec
repnz
(bad)
(bad)
sti
cmp
cmp
sub
retf
and
in
scas
cdq
popf
mov
fnstsw
data16
lea
cwde
dec
adc
mov
dec
pop
fistp
cli
xor
inc
xchg
cmp
sbb
mov
adc
ror
fcmovb
or
adc
mov
loop
mov
call
sub
or
ret
js
mov
jno
push
cwde
push
adc
dec
and
adc
dec
in
pusha
jle
push
cmps
das
jecxz
inc
jb
xchg
pop
dec
jl
out
xchg
(bad)
in
xchg
dec
aaa
cmp
idiv
adc
mov
scas
cmp
rcr
mov
cmp
out
fdiv
(bad)
or
sbb
ins
cmp
adc
push
or
(bad)
and
pushf
ja
ins
lock
sbb
dec
inc
add
inc
xchg
push
add
inc
xor
mov
enter
nop
add
mov
ficom
adc
add
test
cdq
jecxz
popf
push
or
push
mov
(bad)
adc
nop
arpl
inc
add
pusha
or
xchg
sti
push
mov
push
or
adc
push
cmp
sahf
jo
mov
inc
popf
mov
adc
(bad)
jmp
cmp
cli
ins
mov
pusha
pop
sub
jle
cli
out
jnp
or
mov
pop
out
xlat
jmp
popa
dec
pop
lahf
inc
xchg
push
faddp
ss
mov
loop
sbb
(bad)
in
xchg
dec
add
into
popf
test
mov
mov
mov
jae
add
leave
pop
mov
mov
add
out
inc
pop
xor
lods
adc
or
(bad)
and
xor
es
fwait
mov
lods
push
jb
mov
and
push
cmp
jno
cmp
mov
pop
pop
mov
dec
mov
add
xor
xor
out
je
imul
popf
cwde
stc
hlt
lahf
lahf
cmp
mov
lahf
fdivr
sbb
shl
jnp
mov
jns
inc
xor
jge
pop
mov
jl
cmp
lds
push
mov
jp
pop
inc
xchg
add
add
jle
add
ss
sbb
inc
fwait
pushf
or
outs
or
data16
and
call
dec
scas
xor
test
loop
adc
movs
xchg
and
in
pushf
pop
mov
dec
push
mov
dec
add
daa
and
loopne
cmp
jbe
push
data16
add
in
add
das
add
pop
and
movs
adc
or
pop
dec
js
(bad)
and
stos
int3
enter
push
pusha
push
mov
(bad)
mov
ds
ja
std
fisttp
jg
jmp
pusha
pop
xchg
clc
in
(bad)
int
repz
ficom
ret
imul
(bad)
(bad)
sbb
sub
test
mov
lea
inc
mov
imul
outs
pop
loop
js
and
cs
or
mov
data16
dec
mov
push
mov
cmp
adc
aaa
xlat
es
and
cmps
fwait
out
cmp
mov
pop
mov
test
push
lods
mov
sub
fs
inc
push
pop
scas
cmps
fisub
fsubr
mov
inc
sub
es
movs
xchg
and
out
jns
ret
ds
push
dec
cmp
and
and
jb
test
or
adc
out
cmp
inc
loopne
mov
ds
icebp
or
nop
imul
dec
repz
inc
shl
or
aam
out
cmp
xchg
scas
shl
je
fwait
jle
ret
(bad)
mul
stos
adc
jle
inc
xor
adc
jb
mov
ds
inc
pop
or
and
aaa
jb
in
mov
sub
rcl
cmp
and
arpl
xchg
adc
and
mov
daa
dec
repz
sahf
lods
jbe
in
icebp
dec
jmp
and
xchg
pop
aaa
pop
mov
cs
lea
xor
jno
mov
xor
or
ror
sbb
and
jmp
add
stos
ret
add
xchg
and
cmc
adc
push
into
jns
fnop
xor
(bad)
fistp
fst
icebp
mov
xchg
pop
rcl
mov
mov
cdq
aad
(bad)
xchg
sbb
sbb
push
iret
sub
call
inc
fcomp
in
sub
adc
pop
cwde
xchg
call
gs
cmovl
mov
scas
test
cmp
stc
jnp
pop
fimul
es
call
sub
and
jmp
mov
imul
jp
movs
pop
in
push
sub
push
nop
call
or
cmp
sbb
cmp
sbb
pop
jno
in
lods
(bad)
mov
xchg
cs
lds
daa
jnp
outs
data16
xor
xchg
mov
lods
int
mov
dec
or
mov
outs
jae
ins
add
cmc
cmps
shl
or
or
mov
jmp
movs
cmp
(bad)
out
jle
test
fstp
adc
xchg
dec
add
cmps
or
clc
push
mov
cdq
enter
adc
xor
pop
loope
sbb
(bad)
mov
xchg
adc
sub
cmp
sti
xchg
mov
xchg
lods
xor
fild
sub
mov
hlt
(bad)
(bad)
loopne
outs
(bad)
addr16
adc
imul
dec
icebp
add
jmp
sbb
sbb
pop
jns
aaa
jmp
rcr
pop
(bad)
push
je
mov
int3
jp
enter
cdq
test
jmp
outs
call
cmps
xchg
sbb
fwait
in
mov
popa
mov
jecxz
mov
(bad)
pop
retf
mov
add
push
repnz
mov
mov
stos
iret
and
rcl
jp
push
jmp
xchg
(bad)
xchg
jl
dec
and
stos
daa
mov
and
jg
and
das
and
das
int3
add
es
xor
xor
sbb
pusha
add
inc
or
mov
neg
idiv
iret
arpl
dec
add
xor
cli
lea
mov
or
sar
mov
dec
adc
loope
adc
sub
jnp
pop
ret
and
ror
mov
jmp
xchg
cs
daa
les
cmp
dec
mov
pop
cmp
cmc
out
(bad)
jnp
rcr
stc
pop
mov
mov
lea
arpl
in
mov
sbb
xchg
add
lods
out
outs
repz
cmp
xchg
dec
adc
pop
ins
jmp
out
ds
jecxz
(bad)
fsubr
dec
xrelease
and
sub
mov
mov
scas
nop
repnz
dec
and
dec
add
mov
inc
adc
xchg
and
mov
and
sti
jl
push
sbb
adc
ror
enter
sar
push
ret
rol
add
pop
mov
(bad)
mov
jmp
stc
popf
mov
mov
xor
ret
add
jl
xchg
dec
imul
cmp
cmps
or
mov
fcmovb
dec
lods
scas
jg
mov
shl
imul
fwait
xor
mov
mov
and
xchg
and
mov
push
loop
push
xchg
inc
dec
or
jle
lods
xchg
mov
push
jb
cmp
mov
xchg
push
out
mov
dec
in
pop
xchg
jl
mov
stos
out
add
stos
mov
xor
and
sbb
ror
xor
call
jns
jmp
(bad)
mov
sbb
in
std
pop
scas
std
fstp
stc
mov
in
mov
adc
mov
jae
je
lods
pop
cmps
mov
lea
push
mov
rcr
cmp
(bad)
(bad)
push
repz
aad
jo
cmps
xchg
call
jecxz
cs
jno
fmul
jle
fwait
and
sbb
xor
add
inc
jne
fld
in
aaa
clc
repnz
mov
inc
test
or
adc
gs
sub
call
or
and
jae
mov
mov
rol
mov
pushf
daa
imul
les
jnp
lock
cmc
stos
icebp
mov
test
add
push
adc
sbb
pop
mov
sub
cmp
cmp
push
xchg
out
jge
mov
int
mov
into
mov
add
sbb
outs
scas
inc
sbb
inc
push
push
(bad)
mov
scas
push
jmp
jnp
aas
jnp
imul
sub
sar
test
stc
dec
push
cmp
add
ss
rol
jmp
hlt
fimul
imul
pop
mov
ins
or
mov
mov
inc
(bad)
mov
call
sub
repz
mov
sub
(bad)
ins
adc
dec
jbe
fistp
jmp
cmp
shl
out
push
lods
jne
xor
arpl
adc
in
jno
fstp
push
sub
xchg
loopne
inc
test
mov
sbb
js
scas
fidiv
add
pop
cmc
test
test
inc
push
inc
xchg
bound
mov
mov
push
arpl
push
jmp
mov
mov
add
inc
mov
xchg
mov
jle
(bad)
cld
enter
push
not
and
or
sti
dec
xchg
(bad)
push
fnsave
rcl
xchg
iret
jge
in
ret
scas
xor
retf
in
inc
rcl
lock
hlt
jecxz
cli
cmp
in
or
imul
jle
ror
adc
fcom
test
scas
dec
int
daa
sti
stc
int
mov
jmp
inc
sbb
xor
les
lock
jno
aad
(bad)
cld
dec
icebp
cmp
and
fcomi
mov
into
cmc
cmp
and
mov
lock
cmps
imul
jmp
ficomp
clc
jmp
mov
(bad)
mov
inc
dec
popf
cmp
cdq
jecxz
into
icebp
fsubr
scas
mov
add
inc
pop
cld
dec
sbb
shl
lahf
pop
dec
lods
test
lea
jbe
leave
fdivr
js
out
jmp
cmc
mov
std
inc
xchg
dec
test
push
push
gs
adc
idiv
mov
mov
add
movs
xor
cmp
jl
mov
inc
clc
mov
cli
mov
mov
pop
pop
ds
loop
mov
rol
call
xchg
pop
into
cld
mov
xlat
in
dec
cmp
jge
adc
lock
hlt
push
icebp
loopne
addr16
(bad)
stc
scas
ds
push
getsec
out
xchg
loopne
mov
or
or
hlt
jno
std
mov
outs
sti
mov
jg
retf
std
xor
jecxz
(bad)
cld
ja
dec
popa
sub
jnp
sub
xor
stc
addr16
dec
cmc
pop
scas
push
repnz
(bad)
hlt
(bad)
or
adc
mov
std
(bad)
stc
push
xor
mov
mov
int
out
sti
pop
repz
fdivp
into
dec
or
aad
mov
(bad)
(bad)
xchg
push
cld
ret
(bad)
fnstsw
iret
mov
add
shr
daa
pop
cld
cmps
pop
cld
jmp
dec
add
loopne
loopne
mov
cwde
outs
std
(bad)
cmps
test
pop
lea
das
aaa
push
add
push
stos
mov
gs
add
imul
fcomp
lods
mov
ins
repnz
(bad)
out
das
dec
jg
fsubr
mov
sub
cmps
xor
cmp
(bad)
icebp
iret
out
cld
xor
sub
add
mov
and
sti
mov
xchg
jnp
mov
shl
daa
jae
mov
mov
retf
jae
mov
push
jmp
lea
inc
stc
in
(bad)
jmp
mov
loope
fnstcw
loop
sub
out
add
aas
dec
and
inc
sbb
ja
scas
push
scas
stos
aas
mov
pusha
iret
int3
in
xor
push
xor
mov
aad
retf
xor
bound
arpl
adc
out
cs
imul
lds
mov
bound
mov
stos
hlt
lock
(bad)
xlat
or
sahf
lss
frstor
mov
not
and
adc
mov
pop
or
das
and
xchg
adc
enter
jmp
into
jg
sbb
fwait
push
imul
repnz
mov
pop
adc
test
sbb
cwde
loope
mov
mov
sub
cli
retf
stos
cmp
adc
cmc
(bad)
in
cmps
adc
xlat
repz
mov
sub
ja
mov
dec
lods
xchg
adc
or
xor
int3
or
or
dec
scas
shl
add
test
mov
mov
in
adc
push
adc
and
stos
stc
add
xlat
hlt
xchg
add
aaa
fwait
jno
mov
aaa
pop
sti
or
sub
call
ret
std
inc
call
pop
push
inc
sbb
or
jmp
xor
(bad)
call
mov
mov
pusha
pop
sahf
dec
dec
(bad)
mov
inc
cmp
pop
inc
mov
clc
fwait
mov
cmp
or
or
cld
sbb
inc
sbb
daa
sbb
stos
cmp
jb
push
scas
dec
sahf
push
outs
mov
loop
sub
xor
push
ss
shr
ins
mov
aas
dec
mov
xlat
add
ja
or
ss
ret
adc
ins
and
daa
mov
adc
into
inc
in
aam
js
sub
add
cmps
push
push
adc
inc
and
and
retf
(bad)
adc
std
(bad)
std
cvtps2pi
scas
pop
test
aad
(bad)
out
neg
out
jno
dec
repz
sbb
add
dec
stc
inc
ror
aas
cmc
mov
lea
mov
jg
pop
inc
shr
lods
loopne
and
out
xchg
inc
add
retf
and
xor
cs
fsubr
lods
aad
mov
in
sar
stc
mov
in
xchg
rcl
and
push
inc
push
arpl
push
test
mov
sub
push
xchg
lds
push
mov
push
and
adc
aaa
cmp
lods
dec
adc
adc
or
pop
mov
scas
fistp
mov
pop
cmp
jmp
aas
push
dec
retf
ja
pop
cld
outs
fild
sub
mov
mov
jmp
cmc
ss
lock
xchg
xchg
scas
jne
call
jmp
mov
cmp
add
mov
lods
xchg
call
mov
loop
push
sbb
mov
mov
stc
fstp
add
cmp
pop
xchg
sti
add
cs
sbb
xchg
dec
inc
sub
stos
sub
sub
xor
sar
icebp
cmps
jbe
popf
pushf
cmps
push
fwait
and
fst
inc
push
pop
mov
pop
jge
jmp
in
sti
das
imul
dec
add
repnz
xor
loopne
out
push
xlat
dec
sub
xchg
cmp
movs
sbb
mov
jle
inc
push
push
and
int
sbb
cwde
push
pop
mov
shr
cs
pop
imul
out
retf
push
add
(bad)
popf
cmps
pop
movsx
add
jg
gs
cmc
add
push
or
or
ret
cmc
add
dec
cmp
xchg
xor
push
cmps
pop
dec
mov
cmp
rol
fnstcw
icebp
fstp
std
jnp
pop
scas
fbld
add
ds
jmp
push
(bad)
cmp
sub
mov
push
stos
add
or
add
mov
(bad)
mov
fdiv
push
jp
(bad)
jmp
mov
test
stos
loop
sub
shl
xchg
cmps
shr
and
call
ins
fst
inc
or
lods
lock
adc
pop
and
push
jge
in
iret
pop
dec
lods
mov
jns
(bad)
retf
repnz
(bad)
lods
pushf
mov
cmc
retf
idiv
sti
push
dec
add
sub
mov
xor
mov
int
daa
jg
repz
aaa
cli
aad
lock
js
sbb
jno
mov
shr
jmp
push
(bad)
fpatan
fiadd
mov
call
icebp
add
push
mov
fbld
fsubr
fld
fdiv
int
(bad)
repz
sub
arpl
push
out
pusha
ret
pop
cmp
icebp
loopne
stos
daa
pop
cld
test
movs
clc
mov
pop
adc
cmp
(bad)
push
movs
push
std
push
mov
jne
cwde
test
xlat
jmp
(bad)
add
fdiv
fucomi
inc
sahf
popa
test
push
mov
mov
pusha
sbb
in
aas
jmp
or
lds
shl
pop
pop
xchg
(bad)
ins
and
lea
jmp
das
sub
dec
shl
sahf
adc
or
mov
mul
cld
cli
out
cmc
outs
ja
lahf
outs
jmp
out
scas
(bad)
(bad)
out
jp
(bad)
fild
sub
call
push
test
jmp
mov
xchg
sub
repz
popf
push
lods
lods
cmp
fnstenv
mov
push
cdq
dec
xor
mov
sub
inc
in
dec
ror
inc
in
dec
int
ja
add
out
xchg
add
dec
inc
add
jmp
pop
mov
add
gs
and
std
sbb
jne
inc
jp
nop
cld
jne
aad
aaa
loop
pop
jle
scas
jle
call
or
pop
nop
pushf
stc
cmc
cmovg
neg
dec
loopne
adc
daa
sub
stos
pop
jne
xor
jmp
int3
dec
adc
call
dec
outs
or
and
add
hlt
jmp
jno
ret
xchg
jp
sbb
call
push
adc
(bad)
pusha
dec
ror
es
add
mov
jb
inc
jnp
mov
pop
hlt
push
pop
adc
cmp
xor
jmp
pushf
popa
outs
std
or
pop
pop
hlt
sub
jg
xlat
clc
aam
cmp
call
setge
xor
test
(bad)
push
lods
xor
retf
sbb
cwde
inc
fdivrp
(bad)
mov
popf
iret
and
mov
jo
mov
test
mov
cs
stos
dec
ins
cmps
jecxz
mov
mov
dec
add
mov
and
div
fcomp
int3
push
xchg
fcomp
xor
in
arpl
sbb
and
add
mov
mov
push
dec
and
xor
imul
into
shl
and
dec
rcr
sbb
push
sub
imul
xchg
cmp
mov
gs
xor
cli
faddp
loopne
jo
in
sbb
fldenv
sub
cld
rol
aas
jle
xchg
ja
mov
cmp
xchg
dec
inc
stos
int3
and
push
mov
cli
les
push
(bad)
fcom
shl
inc
das
bound
push
mov
pop
aas
or
repnz
jbe
jle
in
sar
jnp
adc
xchg
cmps
imul
jmp
shl
fcmovnbe
sub
inc
or
adc
inc
or
test
push
sbb
imul
cli
jmp
fs
jns
bound
imul
ffreep
cdq
and
pop
into
pop
adc
inc
adc
or
pop
loopne
push
pop
or
sub
mov
adc
mov
clc
sahf
and
cmp
or
sbb
nop
sub
adc
push
sahf
mov
xor
test
or
mov
mov
xor
fild
cli
je
jns
xchg
mov
shl
jmp
ficom
in
arpl
and
ud2
in
test
nop
nop
push
xchg
ret
and
retf
int
fist
fwait
mov
ss
pop
retf
jne
imul
(bad)
mov
mov
xor
add
or
adc
sti
loopne
retf
jg
xchg
out
call
outs
lods
sti
push
js
imul
fcmovnb
repnz
aad
movs
mov
inc
dec
and
data16
xchg
call
push
xchg
xchg
sbb
xchg
cdq
cmps
imul
idiv
jb
call
fistp
xchg
data16
and
outs
fist
ja
jmp
scas
sbb
nop
xchg
call
push
sbb
in
sub
out
cmp
mov
inc
dec
(bad)
movs
pushf
or
inc
and
cmp
adc
xchg
test
loop
lea
sub
data16
adc
scas
push
rol
push
adc
add
dec
mov
scas
inc
std
xchg
jnp
jnp
mov
or
sub
sbb
mov
xchg
mov
or
cmp
loope
push
push
int3
sbb
cmp
bound
in
mov
adc
mov
(bad)
or
arpl
sbb
clc
mov
mov
int3
lea
cwde
daa
xor
adc
sbb
xor
xlat
mov
xchg
movs
or
les
js
and
sbb
xlat
xchg
xlat
sbb
ror
push
hlt
rcr
mov
cmc
add
sub
pop
cmp
mov
in
cmps
lahf
cmp
dec
push
or
mov
mov
mov
in
and
or
data16
and
dec
inc
inc
push
shl
cld
stos
ret
adc
sub
movs
mov
push
adc
push
enter
push
mov
jb
xchg
sti
push
out
lahf
not
into
pop
sbb
imul
push
jb
fisttp
xchg
jb
inc
mov
or
int
(bad)
bound
rcr
adc
lock
fistp
push
sub
mov
fld
(bad)
fwait
scas
push
push
push
mov
cs
push
pop
ds
dec
stc
dec
and
fild
sti
movs
push
sahf
xchg
test
ss
cvtdq2ps
pop
inc
fild
inc
outs
sbb
movs
cmp
jl
pusha
sbb
pop
dec
stc
add
mov
pop
pop
xchg
popa
push
mov
cmp
fisubr
sbb
lods
xor
push
dec
pop
arpl
inc
adc
imul
mov
in
aaa
aam
mov
sbb
mov
sbb
sbb
ss
jl
daa
jmp
pop
pop
arpl
cmp
jns
outs
sub
aad
aas
jb
xlat
cmp
fistp
and
fsubr
pop
cmp
es
push
in
clc
and
lock
aaa
outs
mov
jge
mov
gs
(bad)
into
daa
add
and
pop
adc
data16
mov
push
or
sub
stos
in
xchg
sahf
inc
and
test
adc
and
sbb
xchg
push
in
cmp
pusha
cdq
inc
sub
rol
rcl
mov
adc
dec
std
out
call
sub
movs
lahf
mov
push
pop
ds
push
mov
and
jge
out
pop
out
jns
adc
xchg
imul
inc
aas
jmp
les
jg
xchg
fdiv
sub
fidivr
xor
int3
xchg
call
xor
fisttp
xchg
fs
in
repnz
(bad)
not
out
popf
mov
mov
mov
stos
pop
jle
sub
fcomp
cli
pop
(bad)
push
shl
shl
jecxz
pop
in
jne
js
mov
(bad)
jecxz
jp
daa
ficomp
scas
xor
lods
(bad)
jns
iret
lods
sbb
mov
cld
shl
pop
ins
outs
test
xchg
repnz
cmps
xlat
add
and
adc
fld
cmc
call
aaa
dec
dec
xor
sub
push
test
xchg
xchg
cli
push
sub
push
movs
aas
add
lock
jb
rcl
xlat
(bad)
mov
jbe
inc
and
mov
clc
lock
add
movs
js
out
pop
push
add
add
(bad)
out
js
inc
adc
sub
int
dec
rcl
iret
jae
(bad)
outs
pop
test
jbe
(bad)
cmp
xor
mov
outs
jp
or
jno
ins
stc
mov
pop
ret
mov
fwait
jge
sub
loope
adc
imul
fidiv
dec
(bad)
mov
(bad)
push
scas
mov
loop
mov
sbb
xchg
push
cwde
xchg
out
lahf
push
jmp
push
std
data16
fbstp
dec
cld
dec
or
(bad)
repz
dec
daa
(bad)
jecxz
xchg
push
out
dec
cmps
add
out
add
add
inc
ins
pop
(bad)
and
ret
ins
add
mov
jmp
cs
xlat
jnp
lea
cmp
dec
or
inc
int
in
mov
dec
push
dec
dec
out
mov
and
pop
and
pop
jmp
scas
cmps
stc
(bad)
mov
jmp
clc
or
xchg
fisttp
or
sub
sub
sub
cli
test
les
push
inc
dec
dec
sahf
imul
and
and
xor
lods
jae
ss
cmp
sbb
or
out
cs
mov
or
sahf
pop
stc
lods
inc
(bad)
shl
xchg
out
es
loope
out
jl
adc
int
and
into
jns
jbe
jmp
jo
stos
fdiv
jg
fidivr
mov
push
scas
fwait
jbe
jmp
shr
aaa
leave
repnz
addr16
cmp
cmp
xor
sbb
mov
sbb
in
aas
sti
fxch
pop
imul
cmc
cmc
cmp
sar
jecxz
popa
popa
mov
mov
sub
loop
sti
cmp
sub
mov
jl
scas
fidivr
jl
lods
sub
adc
xchg
or
xchg
stos
mov
mov
and
scas
fs
loope
data16
(bad)
sti
stc
call
xor
aaa
cli
(bad)
inc
loop
outs
xchg
add
pop
ds
scas
ret
cmp
jle
mov
repz
xchg
retf
or
daa
or
mov
fs
out
imul
das
inc
clc
shl
outs
pop
sbb
ss
mov
adc
idiv
fisubr
mov
test
xor
ficom
rcl
(bad)
cld
jns
or
push
mov
leave
ffree
and
push
hlt
xchg
adc
push
mov
movs
movs
mov
jne
mov
add
jmp
xlat
cmp
outs
mov
pop
mov
cwde
xchg
pushf
sahf
and
mov
aam
jne
in
out
xchg
repnz
repnz
mov
mov
into
into
jmp
aam
jnp
movs
cld
adc
sub
imul
add
and
adc
scas
or
icebp
jge
test
and
aad
inc
jp
mov
mov
dec
scas
je
ds
jg
imul
loop
mov
ret
retf
loope
xchg
cmp
or
jmp
cmps
es
or
mov
adc
push
outs
adc
sbb
repnz
lods
push
icebp
xchg
scas
mov
pop
mov
jg
add
rcr
cli
add
repz
sti
or
or
movs
stos
pop
loopne
loop
inc
or
add
or
mov
call
pop
pop
std
adc
scas
cld
xchg
adc
lock
mov
sti
jbe
and
dec
mov
sub
mov
aam
push
imul
es
jbe
sti
xor
in
into
scas
xor
sbb
stc
outs
cld
hlt
dec
push
mov
mov
push
call
ds
sub
cmps
aam
outs
or
retf
pop
dec
xchg
ins
lods
dec
das
(bad)
pushf
pop
imul
jae
(bad)
mov
jns
das
das
out
mov
jl
dec
xor
ret
push
out
fdiv
pusha
adc
xchg
aad
xchg
jp
dec
adc
rcr
push
and
in
paddsw
cmp
and
cmc
push
mov
dec
add
hlt
out
scas
dec
fidiv
test
jl
retf
ds
das
ds
hlt
pop
ret
ds
ins
mov
ins
out
inc
loope
fsub
push
or
and
(bad)
retf
push
mov
dec
movs
call
jle
stos
or
sub
stos
mov
xor
pop
dec
std
retf
cwde
sahf
cs
call
sbb
mov
loopne
outs
mov
mov
movs
xlat
jmp
xchg
xor
xor
cmc
xor
repz
ss
mov
or
adc
in
outs
or
out
test
sbb
sub
ja
retf
lahf
out
es
xlat
mov
fs
(bad)
cs
push
es
loope
mov
int
fmul
in
and
adc
movs
shl
ret
pop
lods
adc
arpl
test
ins
retf
je
cmp
xchg
jmp
bound
sub
ror
inc
std
xchg
out
add
cmps
cwde
leave
pop
out
outs
aam
dec
pop
outs
jb
sbb
mov
imul
adc
sbb
ret
or
cli
sub
aam
mov
and
neg
in
dec
dec
iret
jo
xlat
push
into
jl
or
mov
std
inc
aaa
xor
or
pop
sbb
jge
push
movs
xchg
call
sbb
xor
fmulp
pusha
xor
xlat
scas
fild
ds
cmp
aam
inc
sbb
push
xor
cmc
sub
retf
jmp
clc
int
std
mov
hlt
sti
jmp
popa
mov
retf
das
dec
inc
add
pop
push
sbb
rcr
cld
cmp
sub
sbb
nop
bound
jno
sti
clc
cmp
ror
scas
xchg
cld
dec
movs
das
neg
pop
mov
or
sbb
cmp
int
rcr
or
pop
and
fwait
xor
mov
call
mov
sbb
push
dec
push
adc
push
cs
lods
sar
psrld
push
add
add
loopne
shl
mov
xchg
xchg
imul
sub
adc
mov
scas
inc
mov
scas
mov
(bad)
(bad)
idiv
loop
aam
pop
fdiv
ja
cmp
sub
jns
cmp
adc
jmp
mov
sbb
jne
into
ins
outs
scas
popf
fimul
jb
(bad)
pop
ds
fst
cmp
mov
loopne
jmp
sbb
test
(bad)
mov
repz
jecxz
mov
pop
retf
add
jl
lock
xchg
fiadd
sahf
out
lea
inc
or
clc
push
push
test
mov
loope
sbb
xor
mov
les
sbb
ret
sbb
and
adc
dec
sub
mov
test
push
ins
mov
xchg
jg
(bad)
out
or
pop
mov
dec
inc
sbb
add
cdq
(bad)
rol
adc
mov
mov
leave
ror
iret
xor
and
gs
or
stos
sub
add
dec
adc
shr
xchg
or
pop
push
push
push
enter
(bad)
(bad)
ins
gs
jl
dec
out
xchg
scas
fwait
pushf
idiv
dec
in
nop
xchg
push
imul
into
dec
(bad)
out
xor
dec
push
push
(bad)
sub
enter
imul
xchg
dec
cld
xor
push
fidivr
sbb
cmc
pop
outs
cld
mov
jge
rcl
cdq
and
out
jo
xchg
pop
inc
fnstcw
(bad)
mov
(bad)
out
adc
stos
xor
pop
int3
inc
(bad)
sub
cld
sbb
xchg
push
pop
or
and
xor
pop
lea
loop
xchg
outs
pop
mov
test
movs
and
ret
mov
(bad)
fnsave
sbb
(bad)
adc
cmc
mov
mov
or
cmovns
jg
jg
mov
add
lea
sub
sbb
in
mov
jnp
movs
sub
les
jo
adc
stos
scas
out
cmp
test
ficom
in
outs
pop
mov
(bad)
jbe
leave
rcl
cmp
jnp
xor
(bad)
(bad)
into
stc
and
sti
std
mov
xchg
movs
movs
and
imul
out
fld
repnz
das
pop
mov
push
rcr
add
cld
pop
jle
and
push
mov
cwde
fnsave
stc
dec
mov
aad
or
icebp
ret
sbb
aaa
in
mov
pop
call
mov
cmp
or
aaa
jl
fwait
mov
cmps
in
repz
jg
or
(bad)
ficom
add
data16
rol
aas
aad
shl
imul
dec
fcmove
xchg
clc
pop
ds
xchg
pop
lods
xchg
outs
xchg
xor
jo
push
mov
retf
js
stc
push
scas
push
ret
bsf
cmp
inc
inc
fwait
mov
xor
jo
jecxz
mov
mov
jl
movs
(bad)
repz
fisubr
imul
jg
mov
enter
mov
adc
mov
jno
sar
xchg
fs
out
int
and
pop
les
xchg
aam
dec
or
xchg
in
daa
jg
fimul
sub
ja
idiv
mov
ficomp
(bad)
adc
ins
lea
cli
adc
inc
or
push
cmp
xor
mov
test
mov
fmul
std
sbb
ja
imul
jmp
out
and
xor
ja
(bad)
idiv
sbb
xor
jmp
dec
aad
fs
mov
sub
retf
bound
inc
pop
xchg
add
jnp
mov
and
rcl
dec
sbb
sbb
push
test
push
cmp
clc
xchg
cmc
xchg
cmps
ficomp
int
cmp
in
xchg
push
cmps
into
cld
loopne
imul
iret
rol
jp
pop
jl
movs
xor
dec
dec
aad
leave
push
repnz
dec
cmp
cmp
fistp
sbb
inc
or
test
mov
dec
jbe
mov
retf
lea
popf
pusha
xchg
jmp
jo
and
jae
mov
mov
out
pop
inc
popa
inc
mov
inc
imul
add
sar
mov
ror
or
add
sbb
push
inc
jns
jecxz
ret
out
sub
aaa
loop
stos
mov
inc
add
out
test
and
jbe
sub
das
jae
aam
xchg
push
push
call
mov
std
cli
cli
cmp
cs
mov
add
(bad)
call
mov
mov
cs
fistp
mov
mov
(bad)
dec
sbb
sahf
les
mov
xor
mov
jmp
xchg
out
jns
test
mov
xchg
hlt
xor
jmp
pop
fwait
jmp
ja
fistp
pop
adc
imul
adc
hlt
jge
push
inc
inc
adc
push
adc
or
aad
out
fisttp
scas
pushf
mov
fbstp
imul
mov
in
sub
jns
xchg
dec
add
loope
out
js
xchg
in
(bad)
fdiv
loope
sbb
popa
add
and
scas
and
push
in
loopne
das
sbb
inc
jecxz
xchg
outs
mov
sbb
sub
adc
repnz
mov
add
xor
sbb
test
mov
adc
stc
les
xchg
pop
mov
pushf
movs
fcomp
div
jge
dec
sub
and
jge
vpextrw
lds
dec
mov
mov
sub
in
xchg
xchg
xchg
pop
pop
pop
movs
xlat
jmp
out
jno
bound
xlat
mov
in
cs
arpl
adc
(bad)
adc
jae
les
scas
push
call
adc
push
add
hlt
pusha
sub
ror
imul
mov
jnp
je
bound
pop
mov
push
xor
outs
retf
mov
mov
sbb
cmps
jo
pop
xlat
lods
and
nop
push
mov
mov
adc
push
packssdw
mov
stos
addr16
cli
mov
outs
fidivr
or
ficomp
jns
repnz
cmp
pop
call
adc
data16
pushf
inc
dec
ror
jno
or
call
mov
scas
cmps
mov
mov
mov
fisttp
xor
(bad)
or
jecxz
xchg
scas
out
scas
mov
ja
fdivrp
xor
sbb
sar
mov
(bad)
sbb
popf
push
sub
stos
pushf
ds
(bad)
std
ds
dec
movs
inc
sbb
aad
gs
in
xchg
xchg
xchg
aaa
adc
lea
fmulp
or
pop
cmc
sub
out
xchg
push
out
fs
inc
mov
add
lds
push
shl
jb
push
dec
dec
and
shr
mov
push
jp
test
(bad)
scas
lods
mov
arpl
mov
sbb
into
mov
pop
push
gs
push
test
push
rol
sbb
loopne
jl
mov
les
clc
sar
mov
out
cdq
fld
popf
loopne
sbb
sti
(bad)
fcmovb
xchg
aas
jnp
call
fiadd
out
pop
js
hlt
out
sbb
or
add
mov
lods
outs
stc
cli
jns
mov
and
pop
inc
mov
dec
imul
loope
push
test
mov
ins
test
push
call
sbb
dec
inc
or
xchg
jecxz
and
daa
test
cmp
stos
cld
ret
cdq
(bad)
ret
or
and
shr
pop
cmp
test
or
pop
lods
push
test
pop
imul
xchg
and
imul
outs
sbb
add
movs
imul
and
jb
sbb
loop
push
xor
dec
or
cmp
arpl
in
sub
retf
sub
dec
pop
popf
and
dec
popa
sbb
jmp
jp
lds
test
dec
or
mov
push
mov
pop
lahf
out
and
jae
sahf
(bad)
in
fwait
neg
cld
retf
aad
out
fstp
std
jnp
das
clc
mov
mov
test
scas
aaa
push
scas
(bad)
repz
dec
cmc
jne
xchg
mov
ins
pop
cs
adc
out
nop
pushf
outs
push
ins
dec
adc
jecxz
(bad)
cmp
lods
sbb
fdivr
mov
sub
fwait
and
jl
jecxz
lods
and
out
sbb
push
sahf
out
jns
enter
cmp
jge
int
mov
cmp
test
jp
popa
dec
movs
push
popa
out
cld
push
pop
pop
mov
cdq
xchg
xchg
adc
dec
jp
stc
out
cmp
xlat
pop
jae
adc
adc
jmp
repz
pop
iret
inc
add
cmp
stos
lea
loopne
pop
popa
push
inc
pop
add
adc
adc
mov
retf
ror
xchg
aas
mov
sti
cmp
jge
mov
pop
xor
enter
dec
test
nop
ror
shl
scas
sbb
jno
pop
jmp
fsubrp
(bad)
pop
test
bound
mov
mov
movs
cli
add
imul
icebp
(bad)
jp
fsub
mov
pop
push
jmp
pop
(bad)
repnz
lds
fcmovnu
fdivp
fidiv
push
cmp
mov
repz
dec
(bad)
fdivr
mov
push
cs
mov
cmp
arpl
fwait
leave
pusha
arpl
icebp
data16
xchg
and
xor
jb
jmp
jmp
int
sahf
les
xchg
push
sti
jae
mov
pusha
xor
int3
int3
or
fdiv
xlat
pop
jnp
jnp
out
inc
sub
pop
lahf
cmps
sub
xor
or
jecxz
lods
fild
pop
arpl
dec
sbb
loopne
push
pop
adc
fsubr
arpl
jecxz
cmps
out
xadd
mov
jge
xchg
jl
add
jb
movs
push
lock
jne
jle
loopne
push
pop
dec
or
loope
cmc
fxch
cwde
fidivr
cmp
rol
jmp
iret
out
clc
les
shl
xchg
push
stos
push
and
sbb
arpl
ins
pop
fisttp
push
add
push
jg
or
(bad)
cmp
imul
jecxz
mov
adc
mov
sub
ins
or
aas
cld
adc
cmc
adc
jae
sbb
js
jp
dec
movs
push
mov
xor
pop
pop
bound
imul
xor
sbb
js
cdq
cdq
cdq
or
movs
imul
and
shl
push
fist
jmp
or
js
xchg
js
test
imul
mov
neg
adc
mov
les
inc
sbb
ret
stos
(bad)
sbb
or
mov
push
test
xchg
and
mov
jb
or
push
fisub
leave
sbb
fstp
mov
mov
das
std
into
popf
out
std
call
aas
mov
in
ins
xchg
push
xor
add
(bad)
jecxz
clc
ret
pusha
repz
fmul
mov
repnz
nop
les
js
jae
jno
das
cdq
leave
mov
dec
mov
mov
push
xchg
test
lods
sti
mov
pop
out
sub
jle
iret
leave
xchg
daa
pop
pop
pop
movs
fucomi
push
aas
scas
push
test
jb
jne
mov
(bad)
jle
and
cmp
push
add
xchg
pop
pop
jl
and
sar
pop
lea
pop
imul
test
pop
pop
sub
sbb
pop
push
imul
mov
stos
test
or
push
sbb
cmp
push
mov
add
or
and
lods
sub
sbb
inc
loop
sbb
pushf
xor
ret
sub
xor
adc
xchg
(bad)
mov
mov
maxps
jnp
cmp
add
xchg
mov
outs
loopne
rcr
ins
jle
data16
xlat
aaa
xchg
or
call
(bad)
pop
sti
jl
mov
arpl
(bad)
idiv
sti
in
mov
jno
sub
push
sbb
jb
xchg
mov
cmp
cmp
jecxz
aaa
jb
rol
in
fidiv
std
jle
retf
push
ds
xchg
and
ins
cwde
adc
data16
jmp
popa
mov
imul
nop
and
mov
data16
and
add
cwde
mov
ins
cdq
cmps
popa
aaa
mov
sbb
or
pop
lods
int
cmc
mov
es
pop
pop
adc
je
ret
retf
in
xchg
fisttp
shl
push
xor
hlt
retf
ss
in
(bad)
mov
inc
add
popf
repz
sub
mov
fcomip
or
or
mov
outs
inc
push
ret
fnstenv
inc
ins
pop
fisttp
js
adc
inc
data16
jae
push
es
xchg
ins
movs
dec
xchg
repnz
jge
fnstsw
mov
(bad)
push
scas
xlat
mov
out
imul
and
jns
jecxz
jle
aas
je
movs
imul
(bad)
fwait
aas
outs
repz
mov
pusha
icebp
adc
push
popa
mov
rcr
or
adc
int3
pop
js
jne
cwde
shr
mov
out
sub
sbb
inc
mov
mov
ins
int
dec
dec
pop
movs
aam
test
push
and
bound
mov
mov
es
mov
add
mov
add
ja
imul
xchg
sahf
retf
inc
add
mov
xchg
add
shl
push
fidiv
sub
outs
outs
dec
sub
mov
add
icebp
jge
cmc
dec
mov
aaa
push
into
aaa
cmp
xchg
fcmovne
call
out
pop
cmp
sbb
or
sbb
in
ss
(bad)
mov
movs
inc
imul
xchg
xchg
jmp
in
inc
mov
push
push
or
(bad)
std
jnp
xchg
push
inc
hlt
out
adc
loope
sub
jmp
sub
les
and
or
xchg
jmp
lds
mov
retf
out
sub
xor
mov
jge
test
or
cmp
arpl
sahf
daa
scas
push
or
sub
movs
add
pop
leave
xor
cdq
jmp
push
inc
fs
daa
scas
add
jecxz
pop
or
cmp
pushf
add
aas
mov
ror
mov
adc
inc
das
aas
jmp
cld
adc
add
and
in
cdq
xor
das
and
aas
(bad)
cmp
push
je
sbb
nop
into
cmp
les
inc
xchg
and
sti
jge
in
ss
sub
enter
aad
bound
cs
jo
outs
adc
sbb
test
test
mov
jb
stos
out
rcl
mov
xchg
movs
push
rcl
xor
call
lahf
int3
movs
fs
bound
imul
cwde
jbe
jne
mov
cmp
arpl
out
dec
iret
or
mov
or
popf
or
push
xor
mov
dec
inc
and
test
daa
bnd
dec
push
or
je
nop
(bad)
fs
push
fidivr
or
int
cwde
add
mov
imul
or
sub
mov
sub
call
fimul
sbb
cmps
add
mov
sbb
and
mov
or
iret
cmps
cmp
daa
mov
adc
aad
lods
push
or
add
ins
ins
lea
cmp
mov
lds
cld
shr
test
jo
outs
pop
stc
int3
add
ins
sbb
std
sbb
jmp
xchg
ret
pushf
jle
repz
ret
mov
cmp
mov
ja
pop
mov
cmps
sbb
jb
es
mov
imul
(bad)
lods
xor
mov
mov
test
out
cmp
addr16
pop
lods
leave
lods
dec
sbb
sub
cmp
sahf
inc
test
adc
sub
retf
int3
pushf
adc
jmp
fst
and
mov
mov
pop
mov
and
jl
xchg
or
cdq
cmps
push
in
repz
movs
jae
push
xchg
out
sub
pop
xor
es
xor
pop
xchg
call
or
sar
scas
icebp
and
shl
jecxz
outs
xchg
out
mov
add
mov
sub
pushf
sub
out
fdivr
jns
lods
outs
mov
out
(bad)
sub
ss
fnstcw
sbb
jo
jge
aad
jbe
xchg
xchg
daa
dec
add
cmp
fucomi
mov
mov
dec
xchg
sub
or
or
nop
xchg
repz
xchg
push
adc
loope
pop
xlat
ret
daa
lock
rol
inc
ins
jae
pop
fwait
xchg
jle
push
scas
inc
das
ins
adc
pop
jns
pop
and
jp
jmp
xchg
lods
cmp
ja
mov
ins
and
push
nop
out
xchg
sub
adc
arpl
mov
int3
lock
inc
clc
retf
adc
cmp
jmp
in
mov
jge
sti
mov
out
fstp
test
add
test
adc
rol
mov
mov
iret
ror
aas
(bad)
fwait
aaa
sahf
cwde
jno
loop
and
sbb
or
inc
and
rcr
test
jmp
fsubp
mov
pop
mov
outs
push
pop
aad
movs
cld
inc
fs
out
out
cdq
jne
fcomip
sti
jge
mov
dec
cmp
mov
xchg
outs
mov
dec
add
sbb
mov
and
mov
sbb
and
adc
push
dec
mov
out
sar
cmp
cmp
and
jmp
(bad)
add
enter
mov
mov
outs
xchg
mov
pop
lahf
iret
push
or
fdivr
and
fistp
push
idiv
cmc
pop
retf
fwait
jo
or
imul
repz
es
test
jp
or
cwde
in
test
xchg
push
movs
pcmpgtw
push
rcl
test
sub
movs
or
lds
push
pop
popf
ror
sahf
xor
jecxz
pushf
leave
dec
push
jae
mov
and
add
(bad)
ins
call
xchg
mov
movs
mov
rcr
mov
and
sbb
mov
hlt
nop
and
mov
inc
mov
test
or
push
adc
inc
or
jmp
xchg
movs
clc
(bad)
ins
jmp
mov
cld
(bad)
dec
adc
push
lahf
repz
ficomp
mov
jb
cmc
retf
popa
mov
add
and
xchg
jge
icebp
sti
div
mov
bound
mov
adc
sahf
cmp
mov
dec
xchg
dec
xchg
inc
sub
aad
and
daa
jle
push
int3
mov
cld
icebp
push
out
cmp
dec
jmp
imul
xor
jge
jmp
loopne
les
imul
xor
lahf
aaa
movs
xchg
lahf
adc
rcr
imul
neg
imul
out
out
aaa
mov
jno
and
sub
enter
and
or
aad
pop
cs
sub
jnp
ins
adc
ins
je
add
imul
fwait
mov
mov
jnp
pop
(bad)
loopne
jecxz
xchg
push
dec
xor
shl
jb
pop
and
enter
or
in
out
std
ins
or
cwde
in
xchg
out
jge
push
jg
and
dec
pop
dec
in
enter
in
sbb
xchg
frstor
add
add
inc
push
(bad)
jle
call
xchg
jecxz
daa
adc
ror
or
mov
sbb
in
push
jmp
sbb
add
shl
(bad)
or
mov
clc
pop
xlat
sub
fcmovnu
jmp
and
ret
adc
sub
push
mov
mov
cli
(bad)
jg
inc
adc
xchg
scas
push
add
adc
(bad)
aad
aad
int
popf
fld
fsub
dec
movs
push
inc
adc
outs
scas
cmps
adc
test
out
sub
cmp
push
into
enter
push
and
jno
scas
mov
and
cmp
sar
std
adc
jge
test
cld
fldcw
dec
xor
jo
lock
mov
adc
sub
sub
xchg
rcr
dec
mov
repz
xor
test
jmp
imul
add
ss
js
not
fild
fdivr
xor
push
cmp
daa
or
js
mov
adc
mov
dec
inc
xchg
and
imul
jecxz
jg
icebp
lahf
mov
inc
fdiv
sub
sbb
pusha
jo
pop
cs
pop
cmp
int3
cmp
xor
xchg
pop
jb
inc
iret
mov
mov
sbb
inc
aad
lds
ret
mov
outs
jl
(bad)
hlt
fisttp
std
mov
mov
mov
dec
add
mov
push
adc
imul
sub
adc
add
and
or
or
dec
lods
pop
mov
or
adc
lgs
in
sbb
sar
push
push
xor
fist
shr
pop
jl
cmps
scas
mov
or
out
add
push
push
adc
stos
les
sbb
rol
inc
add
leave
outs
xchg
les
mov
movs
icebp
aaa
dec
jno
cmc
xchg
fistp
add
sbb
arpl
and
pop
es
dec
repnz
dec
jg
adc
test
cs
mov
std
inc
sbb
repnz
jecxz
xlat
push
repnz
mov
mov
test
iret
jmp
rcl
or
pop
cmp
jnp
sbb
inc
shl
jle
xchg
dec
test
ins
lods
stc
push
(bad)
sub
xor
inc
add
pop
into
pop
ret
xchg
push
jbe
div
test
pusha
mov
cli
in
fsubr
push
fst
sbb
retf
das
repz
jg
pop
cmps
addr16
sbb
and
leave
adc
pop
cmp
adc
sahf
loop
mov
aaa
jg
push
push
aaa
js
idiv
mov
inc
mov
pop
mov
imul
adc
sub
mov
into
and
and
or
shr
adc
push
pop
push
popa
jns
mov
sub
add
jae
xor
jo
jnp
lds
xor
std
in
cmp
or
ds
pusha
in
xchg
scas
(bad)
rcl
dec
and
aas
add
cmc
or
adc
out
or
movs
retf
jbe
dec
popf
gs
into
and
pop
test
and
(bad)
and
nop
add
xchg
movs
mov
and
or
stos
stc
xchg
push
pop
iret
push
push
push
push
inc
inc
shr
sar
mov
cmp
jg
mov
cmp
jnp
fmul
pushw
jbe
ja
xchg
gs
shr
in
das
mov
outs
xor
fild
inc
adc
lock
or
stos
sub
mov
sbb
mov
add
(bad)
std
aad
dec
cmp
fnstsw
mov
push
mov
fwait
mov
or
sub
and
mov
xchg
and
dec
mov
cmps
and
sti
push
gs
xchg
movs
sub
push
xchg
gs
aaa
xchg
nop
add
xchg
test
cdq
mov
push
jne
push
and
sbb
mov
sub
push
jg
loopne
sub
sub
mov
movs
adc
lea
sti
jge
mov
imul
out
(bad)
aas
into
int
mov
arpl
mov
or
mov
xchg
xlat
push
sub
lds
fnstenv
lock
fistp
mov
xor
xor
(bad)
pop
fcmovnu
imul
inc
adc
cmp
shr
test
iret
scas
jge
ja
or
xor
ds
sub
fisubr
dec
repnz
idiv
mov
inc
test
cld
sub
push
movs
repnz
sub
mov
push
and
or
jl
out
and
xor
fst
movs
xlat
dec
xor
test
(bad)
outs
xlat
fidivr
imul
int3
jecxz
pop
mov
lock
mov
(bad)
mov
add
mov
sbb
test
retf
lock
mov
into
jo
fld
inc
and
dec
adc
inc
cwde
sbb
xchg
adc
repnz
mov
(bad)
(bad)
stc
ins
adc
mov
in
jg
pop
ficomp
cmp
popf
push
daa
cmps
xchg
outs
(bad)
in
sbb
int3
mov
mov
pop
mov
pop
mov
and
or
test
or
clc
jge
dec
dec
enter
data16
xor
jl
xchg
iret
arpl
cwde
call
(bad)
std
jle
xor
add
sahf
add
imul
jo
fs
push
xchg
bsr
push
dec
lods
popf
dec
scas
cmp
sbb
(bad)
in
mov
mov
test
retf
icebp
xchg
xor
add
push
cmp
retf
pop
cmp
cmp
and
pop
mov
test
ret
inc
gs
int3
jecxz
cmp
jo
out
addr16
sub
sub
xor
inc
xor
movs
movs
in
in
sub
arpl
jecxz
xchg
or
mov
sahf
jg
jns
mov
jnp
adc
aam
jo
jp
mov
and
sar
es
aad
dec
das
clc
push
cmc
xchg
std
inc
das
add
sbb
and
add
fs
mov
out
shl
ins
sbb
popf
movs
mov
bound
mov
xor
adc
xor
dec
dec
mov
adc
push
das
pop
dec
mov
adc
fs
xchg
repz
jb
or
sbb
push
inc
push
(bad)
mov
jae
ret
pop
aas
jo
ds
enter
mov
std
icebp
pop
in
mov
cs
xchg
mov
fisubr
add
dec
movs
cmp
cmp
push
cwde
mov
mov
mov
gs
es
dec
adc
in
lods
cdq
jo
movs
adc
psrlw
mov
pushf
gs
pop
cmp
pop
or
test
push
push
mov
xor
pinsrw
xor
xor
iret
pushf
out
mov
lods
mov
pop
cmp
addr16
ret
jg
or
sbb
add
jle
push
sar
jnp
sub
dec
jg
mov
jnp
or
jp
ret
adc
rcr
hlt
aad
dec
repz
dec
sbb
inc
mov
xor
or
mov
fild
push
jns
pop
pop
add
xor
xor
mov
mov
cld
mov
xchg
and
enter
std
std
test
inc
push
jg
fnstsw
cs
pop
dec
das
dec
aas
cld
cdq
jmp
jnp
lods
cli
pop
cld
fist
xor
jle
cmp
add
jmp
sub
jns
mov
mov
and
jle
mov
push
adc
xor
pop
sar
jne
sbb
(bad)
out
push
mov
adc
cmp
xlat
mov
neg
jg
cmp
pop
push
add
and
inc
jge
adc
in
push
pop
out
fisttp
cmps
repz
shl
sbb
or
repz
cmp
adc
mov
ins
aas
fwait
and
mov
inc
clc
cli
pusha
pop
pop
(bad)
push
mov
int
mov
pop
rcr
mov
mov
movs
sub
dec
sbb
lock
cmps
popa
dec
loope
in
jns
retf
push
movs
cld
aas
inc
push
sub
and
or
dec
leave
and
stc
enter
sti
pop
or
lea
fistp
(bad)
cdq
jl
icebp
(bad)
push
hlt
ficom
(bad)
(bad)
push
cs
(bad)
repz
lock
and
shr
mov
sbb
mov
pop
mov
cmp
push
mov
lds
popa
and
inc
inc
push
push
add
mov
and
je
ds
cmps
movs
(bad)
retf
adc
push
inc
adc
bound
xchg
mov
sti
cmp
push
lods
mov
fistp
call
iret
lahf
stos
mov
mov
pushf
pushf
in
daa
outs
jecxz
outs
aas
pop
and
sbb
lds
mov
leave
xor
mov
aas
test
cmp
jae
adc
dec
xchg
iret
outs
xlat
inc
fnstenv
jle
adc
cli
sbb
sahf
ins
fldenv
adc
sbb
mov
push
retf
push
enter
sbb
sar
stos
(bad)
pop
outs
jl
sti
iret
xchg
loop
mov
add
ins
stc
pop
test
jl
sbb
push
ror
dec
xor
cdq
icebp
xlat
and
xchg
or
stc
jl
pop
aaa
dec
sub
int3
fwait
add
aam
adc
inc
push
sub
mov
sub
call
mov
ret
sbb
adc
adc
ret
and
ds
pushf
xor
or
mov
jge
pop
add
mov
fdivr
xor
repz
jb
add
inc
xor
dec
xchg
rcl
call
out
rcr
test
sub
push
ror
push
pop
or
add
mov
stos
inc
push
dec
inc
adc
sub
sbb
repz
jo
imul
mov
sbb
std
shr
mov
cmps
cmps
xchg
add
xor
in
sub
dec
mov
pop
sbb
mov
push
adc
xchg
aas
out
rcr
add
aaa
jecxz
cdq
mov
mov
inc
cmp
shl
jmp
(bad)
mov
outs
sub
ret
loope
or
test
(bad)
iret
rcr
hlt
imul
push
add
(bad)
jo
pop
outs
and
sti
xor
sub
push
mov
inc
enter
cld
clc
or
int3
sbb
stc
pop
mov
lock
test
xor
jmp
mov
or
shl
cmp
fs
jecxz
inc
fist
inc
mov
add
mov
mov
dec
xchg
and
adc
fwait
imul
and
xchg
dec
mov
sbb
jecxz
jb
loopne
lds
dec
or
xor
mov
lock
xchg
xchg
retf
push
push
fist
imul
pop
jnp
je
dec
inc
shl
das
pop
inc
shl
retf
shr
loope
mov
(bad)
fnstenv
mov
ffreep
dec
out
fwait
cmp
add
sbb
and
dec
mov
inc
imul
stos
xchg
loop
das
mov
fsubr
jge
pop
push
enter
int3
xor
addr16
or
adc
and
stc
mov
push
aad
out
jo
xchg
movs
push
shl
aam
outs
push
mov
jno
shl
hlt
cmc
les
push
sbb
pop
lods
adc
and
movs
and
push
jl
cwde
in
jg
jns
dec
cs
mov
dec
nop
popf
into
jno
jge
or
add
xor
cwde
out
shr
xor
dec
mov
xor
xchg
adc
sbb
pop
mov
fs
add
jmp
stos
rcr
jo
pop
daa
pop
cmps
mov
mov
call
and
dec
adc
jne
push
movs
repnz
adc
xchg
sub
fsub
xor
mov
mov
sbb
push
in
push
mov
add
cld
inc
loop
inc
push
adc
mov
add
fdivrp
inc
jnp
inc
push
mov
or
les
(bad)
or
mov
jp
dec
cmps
jae
or
dec
push
cmp
dec
add
test
mov
cmps
push
xor
xor
or
aam
sahf
mov
mov
retf
sub
enter
xchg
loop
aam
xchg
sti
div
mov
sub
mov
xor
dec
ins
adc
das
add
mov
pop
ror
xchg
xchg
fild
xor
or
inc
cmp
cwde
cmps
and
and
cwde
in
cwde
das
jmp
push
or
mov
movs
adc
(bad)
or
jge
sbb
(bad)
cmp
mov
fdiv
dec
add
jmp
cdq
lods
clc
cmp
mov
lods
scas
mov
mov
mov
jge
mov
fs
jecxz
cdq
add
add
iret
mov
cmp
jmp
lock
sbb
fmul
lods
gs
mov
pop
mov
sbb
sbb
jbe
xlat
pop
jnp
bound
mov
push
dec
add
dec
push
fimul
mov
imul
xchg
imul
mov
sub
pop
lahf
and
test
popa
nop
pop
and
pop
loope
adc
mov
dec
cwde
and
add
xchg
add
stos
nop
push
add
data16
xor
cmc
adc
xchg
adc
pop
dec
dec
push
rcr
and
stos
and
cld
cmp
ficomp
ficomp
retf
rcr
adc
xchg
out
clc
xor
popf
gs
mov
pop
and
mov
pusha
nop
mov
or
gs
bound
mov
inc
inc
mov
sub
neg
pop
movs
addr16
scas
ds
idiv
xor
dec
out
iret
cmp
(bad)
xchg
aad
and
jmp
es
jo
adc
add
push
jb
mov
retf
call
xchg
enter
movs
sbb
mov
jmp
test
int3
xchg
es
add
shr
add
test
xor
add
and
cmp
sbb
push
mov
mov
enter
addr16
mov
jne
add
aas
imul
add
push
repnz
sub
stc
loopne
clc
into
neg
les
sbb
add
push
lods
neg
dec
stc
jge
and
and
dec
sbb
or
lahf
adc
jb
cmp
inc
xor
and
(bad)
dec
mov
dec
lods
lods
lods
xor
cmp
sti
dec
mov
and
xor
mov
cmp
int3
imul
or
jl
pop
or
mov
or
xor
sbb
jp
lods
test
daa
or
fldenv
inc
popa
adc
pop
push
mov
test
jb
sub
test
out
bound
fidivr
leave
pop
mov
xor
xchg
jge
xchg
inc
push
push
adc
stc
mov
stos
stc
shl
mov
dec
pop
ss
push
jle
gs
jp
push
popa
das
jmp
test
imul
repz
std
std
mov
dec
dec
pop
sub
ds
es
dec
xchg
shl
hlt
push
cli
in
fidivr
sub
or
mov
mov
movd
movs
int
and
jns
and
push
mov
jecxz
pop
adc
add
pop
out
jb
enter
je
inc
sub
push
leave
inc
jle
mov
sbb
jmp
inc
aas
jg
sbb
iret
cwde
(bad)
sbb
jns
inc
cwde
jae
adc
lods
and
es
pop
inc
xlat
push
dec
dec
push
lods
mov
push
inc
lea
or
mov
je
push
push
cpuid
sbb
pop
xchg
repz
arpl
and
(bad)
push
nop
pop
add
imul
fcmovbe
dec
mov
adc
shl
or
aad
into
retf
push
mov
repz
or
xor
or
and
pop
and
adc
mov
out
mov
lahf
mov
out
shr
les
sub
sub
test
sti
out
xor
stos
dec
out
loopne
fidivr
ret
push
gs
or
cld
or
js
mov
jp
mov
pop
cmp
mov
xchg
cmps
mov
push
mov
jae
adc
scas
repnz
js
add
arpl
cld
inc
test
xor
es
sti
scas
push
movs
ja
sub
iret
mov
mov
ret
nop
sub
xor
xor
scas
shl
add
push
clc
clc
sbb
icebp
xchg
clc
jmp
movs
icebp
xchg
mov
mov
aam
sub
mov
sbb
mov
cmc
ss
data16
fild
xchg
mov
faddp
xchg
inc
ins
bound
cmp
xchg
je
pop
fwait
ror
aas
cmp
call
pop
add
mov
push
neg
imul
push
or
and
idiv
(bad)
dec
or
cdq
pop
and
mov
sub
movs
adc
cwde
aaa
int3
jae
or
cmp
popa
out
nop
psubw
fsub
mov
fdivr
mov
xor
mov
pop
leave
cli
pop
push
add
cli
mov
scas
jmp
aad
call
sahf
pop
scas
call
lods
sub
ja
sub
mov
imul
scas
push
jecxz
dec
pop
sub
push
add
add
mov
sti
xchg
jno
add
aas
fsub
add
das
inc
and
test
lds
std
je
push
mov
fmul
sbb
inc
xchg
or
into
sti
outs
sti
sbb
inc
(bad)
adc
shr
fsubr
std
jle
add
push
pop
cli
lods
in
pop
pop
or
fld
mov
outs
cwde
jnp
push
pop
jbe
sub
neg
(bad)
fcmovbe
(bad)
out
pop
(bad)
jl
dec
das
in
or
imul
cmp
(bad)
imul
jne
stos
add
or
jge
xchg
nop
dec
std
pop
aaa
out
int
mov
cs
mov
cli
push
pusha
xor
inc
lods
arpl
int
jmp
lods
jl
ds
dec
adc
mov
imul
(bad)
pushf
inc
add
sahf
pop
popf
cmc
dec
xor
adc
imul
add
mov
(bad)
into
mov
aaa
mov
stc
outs
fistp
stos
arpl
pusha
std
popa
outs
lods
frstor
(bad)
das
mov
std
popf
jmp
daa
(bad)
push
add
xchg
dec
or
and
rcr
add
cmc
outs
ss
push
pop
sub
jle
fisubr
loope
sub
fcomp
idiv
out
outs
adc
jle
sbb
xor
or
mov
outs
jne
scas
adc
in
fisub
jbe
cld
jbe
mov
or
jbe
scas
outs
inc
stos
xor
int
sub
rcr
sahf
cli
shr
sub
and
xor
ret
hlt
dec
jecxz
mov
xor
cmp
lock
ja
repnz
inc
imul
les
jg
scas
inc
or
imul
dec
xchg
ret
jle
fs
xchg
dec
or
jnp
sar
jge
call
mov
ret
dec
out
cli
cmc
lahf
out
cmp
imul
scas
xchg
push
daa
mov
shl
les
mov
icebp
rcr
sub
push
and
and
das
sub
xlat
retf
push
push
adc
lahf
unpcklps
xor
outs
stc
scas
sub
pop
adc
dec
mov
mov
jb
lahf
pop
sahf
and
inc
popf
aas
cld
push
cli
or
xchg
mov
mov
hlt
(bad)
mov
xor
ja
mov
popf
mov
shl
dec
test
or
out
test
or
adc
fistp
adc
dec
pop
mov
and
ret
push
ds
faddp
jl
lock
stc
pop
fistp
idiv
jle
lods
(bad)
push
pop
cmp
stos
mov
or
fdivr
mov
cmp
lahf
jp
jl
lds
shr
inc
inc
jp
(bad)
mov
fistp
and
repz
div
loopne
les
imul
bound
xchg
dec
mov
push
shl
jno
inc
push
and
pushf
mov
adc
(bad)
aam
jle
jb
mov
xchg
or
outs
mov
cmp
(bad)
cwde
dec
(bad)
clc
rol
mov
jg
lods
pop
cld
jg
in
fsubr
add
fcomp
rcr
std
inc
iret
out
aad
mov
popf
mov
iret
mov
iret
mov
icebp
test
clc
mov
inc
ret
shl
out
int
push
call
lods
lds
mov
pop
shl
and
cld
mov
arpl
or
das
fnstenv
loop
ja
in
sti
loopne
shl
cld
popf
js
push
imul
arpl
ror
fisttp
lods
in
scas
movs
loop
addr16
fs
(bad)
stc
in
mov
das
pop
outs
pop
mov
cmovne
jge
enter
dec
push
cwde
call
and
sub
sbb
mov
or
adc
repnz
push
fistp
dec
pop
xor
dec
add
int3
inc
ds
int3
int3
sbb
popw
mov
push
icebp
cdq
push
mov
bndldx
xchg
fild
jnp
test
ficom
ficomp
and
ja
xor
mov
cmc
stos
jp
int3
(bad)
mov
repz
repz
in
pop
cmps
cmp
and
stos
or
pop
add
pop
ins
pushf
dec
mov
lods
mov
mov
mov
mov
scas
daa
cmps
mov
adc
adc
adc
push
jb
es
add
xchg
pop
jp
leave
push
imul
mov
mov
mov
cmp
jns
lahf
xchg
out
das
scas
sub
inc
mov
cmp
cdq
add
iret
push
xchg
and
sub
scas
and
pop
cmc
fnsave
ss
ss
(bad)
adc
mov
mov
mov
jle
xchg
stc
ja
add
jmp
push
push
pop
(bad)
cmp
das
jmp
es
jge
and
cmc
stc
dec
leave
and
clc
mov
adc
fdivr
js
in
jne
sub
cdq
mov
cmps
imul
push
out
gs
cmc
shl
xchg
and
pop
call
and
xor
int
push
test
jge
pop
(bad)
aam
cmp
xchg
add
or
cmp
add
aad
mov
adc
movs
pop
shl
mov
das
iret
jge
mov
xchg
pop
xchg
add
sbb
repnz
pop
jmp
and
xchg
iret
xchg
xlat
adc
cli
add
xchg
adc
mov
fld
sbb
in
bound
fmul
adc
push
test
jnp
call
cld
out
add
sbb
pop
pop
pop
cwde
mov
je
pop
in
and
(bad)
hlt
fimul
jecxz
add
xchg
add
push
inc
mov
pusha
sub
mov
inc
push
fs
pop
cld
jle
int3
or
mov
lahf
xchg
mov
dec
neg
cmp
or
mov
jl
cmp
not
adc
lahf
arpl
jnp
pop
ins
fild
dec
or
enter
shr
or
imul
pop
pop
mov
mov
push
test
dec
mov
push
sahf
shl
inc
mov
iret
sub
fdivr
ret
and
retf
je
cmps
imul
scas
sbb
retf
push
div
cmp
pop
jae
(bad)
(bad)
dec
jmp
ret
xor
lea
jns
mov
adc
add
lahf
cwde
aas
inc
lahf
scas
pop
lahf
ffreep
push
jle
xchg
test
and
jg
sub
mov
in
sbb
push
fucomp
mov
xor
xor
inc
xor
out
cmp
xchg
xchg
xor
mov
pop
inc
xor
bound
add
inc
and
and
mov
xchg
inc
sti
gs
xchg
jp
sub
pop
call
jg
retf
call
aas
lea
adc
pop
imul
les
mov
cld
int
outs
push
neg
sub
xchg
dec
popa
inc
pushf
into
daa
sahf
cmp
cdq
iret
dec
sbb
les
mov
sub
or
lock
dec
aad
jns
push
jp
pop
xor
bound
xchg
shl
sbb
add
cmp
mov
pop
ss
pusha
daa
bound
jbe
cmps
icebp
lds
std
data16
mov
or
adc
cmp
mov
or
adc
mov
sbb
lock
cli
jl
ds
ret
das
sbb
dec
mov
mov
in
pop
add
nop
inc
mov
shr
outs
rcl
xchg
adc
aaa
xor
push
and
sti
jae
sahf
sub
xchg
in
adc
inc
adc
nop
dec
cwde
(bad)
shl
sbb
mov
icebp
xchg
call
popf
or
xor
out
mov
mov
pop
push
cmp
pop
pop
adc
inc
cwde
sub
out
cmp
rcr
outs
data16
jmp
aam
in
imul
scas
sbb
sub
pusha
(bad)
fcmovbe
(bad)
loope
mov
mov
iret
pop
inc
mov
es
jmp
out
test
add
stc
jns
retf
clc
or
shr
call
into
js
or
inc
arpl
dec
fadd
inc
aad
pop
mov
cmps
shl
adc
(bad)
(bad)
sbb
cmp
not
call
mov
sar
add
shr
fwait
inc
and
(bad)
(bad)
mov
pop
mov
inc
add
mov
cmp
data16
add
inc
or
into
pop
test
mov
or
lds
mov
mov
(bad)
pop
test
jns
pop
mov
in
dec
add
shr
ja
sub
retf
or
jp
mov
xchg
sar
(bad)
push
pop
sti
fcmovnbe
fnsave
das
out
mov
sbb
cmps
or
imul
dec
out
imul
cmps
add
and
(bad)
out
xor
inc
loopne
mov
fsubr
sti
fcmovnu
repz
rol
in
jmp
test
jbe
sbb
sbb
lock
div
stos
xor
ret
push
or
in
or
icebp
ins
mov
xor
test
cmp
das
loopne
or
jns
cmp
sbb
data16
mov
cmp
je
inc
inc
push
addr16
cmp
lds
je
add
mov
fidiv
xor
jnp
sub
imul
sti
test
or
inc
imul
add
inc
mov
jle
jge
cmp
xlat
out
jne
inc
rol
and
sbb
mul
fimul
js
lods
test
add
add
inc
push
mov
div
cmc
add
repz
inc
fadd
out
adc
sub
ja
iret
fisubr
push
push
add
xlat
fsubr
xor
shr
xchg
fbstp
add
and
pop
jno
jnp
or
push
pop
adc
pop
in
sub
test
jbe
loop
sbb
ins
or
sahf
sbb
xor
pop
je
add
inc
mov
std
inc
push
inc
cmp
fadd
iret
mov
sti
xlat
inc
sub
je
push
call
fucomp
out
xlat
fcmovnu
call
je
xor
outs
xor
fcmovu
int3
jns
sbb
inc
xor
cdq
adc
mov
add
jmp
aaa
sub
ss
je
cmp
aam
mov
sahf
outs
mov
jnp
dec
inc
scas
push
lods
sbb
push
rol
jne
jae
inc
jmp
jnp
rol
fdiv
jmp
add
sub
scas
daa
adc
mov
lods
div
mov
add
fucomip
xor
mov
es
lds
push
xchg
mov
fdiv
ror
inc
fsubr
repz
jp
pop
mov
rcr
fisttp
repz
or
jmp
sti
rcl
ror
int
imul
push
lea
stos
std
fisubr
(bad)
cs
or
mov
call
stos
ja
movs
pop
jbe
outs
push
rol
mov
clc
sbb
sar
pop
add
pop
jp
out
mov
std
mov
fstp
test
aam
push
mov
add
fs
push
popa
rol
stc
in
mov
jmp
mov
out
ror
fsubr
pop
pop
ret
scas
and
scas
(bad)
jno
out
imul
test
div
aam
push
add
add
mov
loopne
(bad)
dec
dec
jae
adc
arpl
clc
cmps
xchg
rcr
(bad)
ins
xchg
in
std
ja
sbb
adc
push
inc
ror
test
fidiv
jbe
add
scas
fbld
adc
mov
inc
out
xchg
out
outs
rep
add
cmc
inc
add
inc
mov
mov
jne
pop
ins
pcmpeqd
out
test
mov
(bad)
ss
adc
add
or
lock
arpl
sbb
outs
(bad)
(bad)
(bad)
xor
pop
(bad)
ins
lds
test
aas
jne
mov
mov
or
xlat
stos
xchg
jbe
xchg
out
add
adc
jmp
dec
inc
jbe
jp
cmp
push
push
fsubr
mov
xor
(bad)
push
xchg
ins
pop
imul
mov
lods
add
add
fsubr
adc
and
ss
fcomp
test
mov
mov
xor
aaa
loop
sbb
in
inc
xor
sbb
ds
(bad)
jle
jmp
xchg
push
cdq
mov
pop
sub
lea
shl
add
in
loope
ja
outs
lds
ja
outs
xor
or
in
cmp
or
cdq
pop
shl
push
mov
jbe
loop
mov
loopne
data16
clc
int
push
lea
out
jnp
ret
xor
nop
retf
pop
sbb
mov
add
rol
pop
mov
push
mov
(bad)
pop
and
lahf
pop
test
je
dec
add
(bad)
fsubr
inc
fmul
ret
sar
sub
inc
mov
out
ret
std
jge
dec
mov
addr16
retf
mov
sahf
jae
mov
in
(bad)
sahf
(bad)
xchg
(bad)
int3
icebp
call
(bad)
mov
or
or
cmc
mov
add
mov
daa
lods
out
cmp
(bad)
push
or
dec
add
mov
in
jmp
push
xchg
cmc
mov
int
push
jno
xchg
adc
xchg
in
sub
cmp
adc
in
imul
xor
inc
jmp
add
mov
pop
aam
inc
addr16
inc
and
and
sbb
dec
adc
ficomp
shr
adc
push
sbb
popa
cmp
addr16
sub
outs
aad
jo
out
gs
shr
dec
sub
add
dec
mov
in
xchg
out
jnp
lods
push
pop
mov
jnp
xchg
sahf
mov
(bad)
out
jne
xlat
jge
popa
mov
ins
or
in
dec
or
lods
les
mov
leave
jge
mov
jns
push
dec
scas
sbb
xor
mov
mov
jp
sbb
lea
inc
mov
or
inc
add
fwait
jbe
push
push
imul
movs
mov
sbb
lock
or
and
cwde
cmps
sub
loopne
fild
test
dec
pop
lods
ins
mov
cmp
mov
loopne
outs
inc
jno
cmp
retf
mov
dec
or
mov
sahf
mov
jle
cmps
add
xchg
xor
dec
adc
sar
imul
jl
test
das
or
xchg
or
or
sbb
adc
sti
in
and
mov
adc
fdiv
push
inc
loopne
fistp
cmp
lea
int
retf
ins
js
into
fisttp
adc
pop
add
sub
ror
adc
outs
add
sbb
add
mov
xor
jmp
jle
jo
call
add
push
ss
lea
out
jnp
cmp
call
add
pop
fcmovnu
(bad)
mov
scas
xchg
push
jo
div
int
scas
dec
fdivr
outs
test
pop
stos
int3
jne
das
xadd
push
mov
mov
mov
ins
ficom
sbb
shl
push
xlat
mov
pop
test
enter
pop
cmp
mov
pop
jno
ss
dec
or
mov
jecxz
mov
retf
add
and
cwde
inc
sahf
jne
mov
inc
adc
pop
scas
outs
push
jnp
jbe
mov
push
sbb
push
mov
sbb
fisttp
jp
fild
jns
in
jg
mov
add
sbb
and
xchg
lock
popf
iret
pop
add
fwait
or
sub
add
push
mov
aad
popa
(bad)
mov
add
lock
in
test
fidivr
inc
out
(bad)
idiv
lea
fwait
icebp
pusha
pushf
sub
xchg
sub
cmps
add
and
in
test
jmp
je
add
(bad)
pop
cmps
sbb
jnp
mov
aam
stc
sbb
add
jbe
mov
inc
mov
or
xchg
in
ficomp
shl
popf
fisubr
bound
jg
pop
div
mov
cmp
(bad)
xchg
idiv
mov
fsubr
jns
fnstcw
int
psadbw
test
mov
fldenv
in
or
push
sub
mov
or
jecxz
jecxz
pop
arpl
cmp
pop
ret
mov
rol
mov
ins
mov
mov
jecxz
jp
xor
(bad)
xor
xor
jne
ret
out
add
iret
mov
in
push
push
xor
mov
lods
test
push
lods
mov
out
imul
inc
xor
iret
out
call
jp
and
push
(bad)
cld
jp
sbb
cld
push
inc
call
retf
jnp
push
lahf
xlat
add
ins
sbb
cmc
mov
(bad)
jmp
in
dec
mov
sub
adc
xor
or
dec
shl
lods
mov
(bad)
push
xlat
ja
pop
or
xor
dec
(bad)
jbe
fucomi
mov
cmp
sti
outs
mov
sar
jp
dec
add
adc
(bad)
cmp
sti
imul
ret
xor
pop
daa
lahf
iret
(bad)
icebp
sahf
adc
pop
(bad)
jmp
mov
push
jns
adc
add
xchg
inc
mov
adc
lea
adc
or
dec
add
shl
je
inc
shl
push
push
push
test
mov
nop
add
je
sub
pusha
inc
shl
out
inc
fadd
call
jbe
fs
jecxz
mov
imul
rcr
test
sbb
das
push
lods
lods
ins
cld
stos
stos
xor
aas
iret
adc
add
rol
mov
loop
scas
mov
rcl
aas
add
cld
outs
mov
add
fiadd
in
std
popa
jge
mov
xchg
mov
push
mov
mov
sub
jne
fcmovne
mov
fdiv
outs
mov
xor
jge
scas
in
out
jnp
(bad)
(bad)
stos
stos
xchg
leave
fs
sar
std
push
dec
shl
cmp
and
dec
movs
mov
jecxz
dec
movs
push
jbe
pop
sub
(bad)
jmp
dec
add
cmp
xchg
sahf
(bad)
pop
and
rcr
push
ins
cmps
add
lods
cmp
hlt
in
shr
push
jae
stos
jge
div
dec
xchg
out
jne
fadd
cmp
cld
(bad)
mov
jmp
mov
out
(bad)
out
xchg
dec
scas
mov
ror
jmp
cmps
cmp
lahf
sub
shr
xchg
mov
push
cmp
rol
pop
loopne
jo
xor
dec
add
inc
xchg
xchg
or
std
jb
(bad)
into
ss
sahf
iret
fld
ds
sub
(bad)
mov
cmp
sbb
adc
arpl
(bad)
mov
(bad)
std
fist
(bad)
ja
repz
cld
repnz
push
dec
dec
dec
sub
sub
aas
aas
dec
inc
jle
ret
out
call
loop
ds
dec
mov
add
retf
repnz
push
push
mov
test
jnp
shl
test
stc
loopne
pop
push
js
xchg
or
mov
xchg
push
jns
jns
dec
in
movs
push
push
rcl
ss
outs
imul
call
mov
sti
mov
xor
mov
cmp
cs
pop
ds
repnz
repz
xchg
leave
xchg
div
cmps
addr16
(bad)
test
pop
mov
stos
test
add
in
fpatan
jmp
cmps
test
shr
lahf
iret
push
adc
dec
je
jp
fdivr
sbb
jo
mov
ret
lds
jno
(bad)
out
sti
je
adc
ins
(bad)
enter
repnz
mov
mov
mov
sahf
inc
push
adc
cld
loope
jae
in
mov
mov
(bad)
aam
adc
mov
jmp
jnp
cmp
enter
(bad)
jae
in
stc
push
xor
cld
mov
pop
lahf
mov
add
jo
pop
pop
mov
pushf
ja
push
neg
lds
cmp
jge
iret
lahf
call
shr
mov
inc
sub
out
mul
idiv
ror
movs
push
mov
aad
ja
scas
mov
scas
pop
jnp
scas
mov
retf
repnz
push
mov
and
fs
iret
or
xor
shl
xchg
jl
xchg
jp
jg
xchg
lahf
iret
jae
dec
aaa
jno
popf
ja
idiv
cdq
popf
popf
gs
call
push
inc
ret
ret
ret
xlat
or
movlps
hlt
into
iret
sbb
js
cmc
outs
fidiv
add
mov
mov
sbb
dec
cli
inc
mov
xchg
adc
test
mov
shl
shr
xor
cwde
lods
scas
out
ret
out
mul
repz
lock
jl
dec
sub
aad
mov
pusha
ret
dec
or
adc
imul
jbe
cmps
int
inc
sbb
push
sbb
push
cmps
clc
fsub
ds
mov
daa
call
cmp
in
pop
outs
gs
cs
in
mov
bnd
adc
std
add
pop
test
cli
in
cld
stos
stos
lods
(bad)
jecxz
xor
push
and
in
pop
sub
mov
jmp
cmp
xchg
leave
mov
adc
or
adc
jmp
adc
pusha
adc
test
sub
js
adc
in
jae
mov
retw
lock
fdiv
dec
aaa
mov
adc
xchg
and
adc
fs
sti
out
mov
xchg
bound
(bad)
daa
ds
or
ror
jae
std
div
in
pop
jp
jp
push
push
out
fidivr
lahf
stos
xor
adc
pop
pop
pop
pop
mov
repnz
dec
call
mov
add
rcl
std
dec
cmp
pusha
xchg
xor
sbb
sub
jnp
xchg
adc
adc
or
xchg
mov
(bad)
adc
cmp
addr16
or
ret
ins
inc
and
mov
sub
dec
xchg
adc
jo
fdiv
ds
stc
iret
jae
cld
jns
es
rol
ror
sub
cld
repz
lock
call
xor
arpl
xor
xor
push
daa
or
stc
cmp
cmps
mov
mov
movs
and
add
call
aas
div
jg
aaa
lahf
jnp
lds
call
sub
ficomp
inc
push
mov
call
or
mov
jnp
dec
inc
rcr
add
enter
jo
mov
sbb
shr
out
push
pop
dec
or
push
xor
scas
lea
neg
jl
inc
dec
movs
adc
jns
jnp
aam
ds
xor
cdq
cdq
sbb
js
add
cmp
push
arpl
cmp
loopne
(bad)
sub
retf
retf
add
jecxz
xchg
pop
add
mov
or
mov
(bad)
(bad)
call
(bad)
clc
(bad)
scas
sahf
call
retf
and
stos
xchg
mov
test
jns
ss
lods
nop
test
push
xchg
sahf
adc
stos
stos
outs
jo
popf
(bad)
out
sahf
pop
stc
in
or
stos
test
into
adc
fiadd
pop
retf
sbb
(bad)
mov
ss
out
jg
iret
jg
repz
cs
enter
jecxz
es
daa
pop
pop
pop
imul
out
jle
mov
pop
pop
sbb
sbb
jb
cmp
and
out
add
idiv
arpl
jmp
pop
mov
add
fdiv
lahf
into
fs
sahf
lahf
lahf
jg
and
fsub
or
mov
push
push
or
jbe
dec
es
and
fisttp
sbb
inc
add
inc
fsub
sbb
scas
pushf
or
aaa
dec
ja
loopne
or
add
daa
sbb
in
cmp
das
rcl
mov
mov
cmp
jge
jle
scas
jle
stos
cmp
call
sti
fdivp
ds
leave
dec
mov
mov
hlt
hlt
xor
mov
fdivr
std
sbb
jbe
dec
and
enter
jecxz
sbb
jo
cmp
add
out
movs
mov
pop
mov
xor
(bad)
retf
jns
push
das
mov
ja
inc
mov
aaa
mov
sbb
dec
iret
sub
outs
sbb
add
call
fwait
adc
inc
push
adc
(bad)
cld
jbe
loopne
push
ins
in
sar
stos
sub
lahf
scas
push
out
jbe
popf
and
or
in
jo
jmp
into
js
inc
ds
push
scas
pop
inc
js
xor
add
sti
jne
out
cmps
lahf
out
pop
clc
add
imul
ret
or
gs
nop
(bad)
pop
xchg
xchg
xchg
cmp
sbb
cli
(bad)
mov
fs
cmc
cmc
push
test
add
push
add
xor
sbb
fs
outs
mov
mov
or
inc
aas
cld
loope
mov
(bad)
stc
jg
fsincos
out
sti
idiv
pop
push
adc
xor
dec
nop
retf
out
jg
add
mov
icebp
stc
std
push
or
push
nop
sar
push
push
adc
mov
or
jmp
mov
test
mov
adc
xchg
outs
loopne
mov
(bad)
jmp
mov
das
mov
or
cli
jg
jns
xchg
and
aaa
aaa
(bad)
aas
(bad)
jecxz
repnz
xor
pusha
call
fdiv
movs
xlat
lahf
fwait
fwait
jecxz
pop
push
loopne
pop
pop
(bad)
out
div
cmp
int3
call
out
scas
or
dec
xchg
ss
cmps
movs
imul
cmp
mov
(bad)
fimul
and
sbb
push
repz
das
jge
xchg
movs
inc
sub
and
pop
pop
pop
gs
and
push
sbb
and
shr
mov
sti
inc
add
push
jmp
ja
or
fistp
mov
test
mov
add
adc
jbe
fiadd
movs
fnstsw
cmc
repz
dec
xor
mov
push
inc
xor
(bad)
pop
jg
das
jle
mov
fdivrp
(bad)
mov
mov
jge
pop
sub
in
in
sub
mov
scas
jg
jmp
jecxz
mov
or
lock
mov
movs
xlat
iret
fs
sbb
and
push
fisubr
pop
xor
jg
cmp
rcr
adc
or
scas
lods
mov
mov
dec
dec
dec
and
or
cdq
or
bound
call
mov
adc
or
xchg
adc
xor
cs
stos
movs
sbb
fild
and
sbb
jmp
jb
jae
test
push
jnp
mov
xchg
push
xchg
jbe
sbb
sar
fistp
jg
sahf
sahf
out
pop
clc
add
(bad)
pop
pop
loopne
pop
(bad)
cmp
js
jmp
out
loopne
pop
js
cdq
addr16
jl
push
push
xor
int3
mov
outs
pop
test
adc
push
fisttp
ds
push
std
in
(bad)
or
mov
lods
cwde
jb
mov
in
lods
lods
sub
dec
adc
push
adc
xchg
dec
and
cmc
retf
call
je
pusha
xor
push
and
test
add
jl
(bad)
setl
in
or
std
fxch
xor
mov
jo
fld
sbb
lock
ins
jecxz
pusha
in
in
jbe
loopne
adc
mov
mov
jp
push
scas
call
inc
psllw
sar
fadd
ds
cmp
outs
outs
mov
cmp
jge
ffree
loop
and
add
mov
inc
pop
jl
or
mov
cmp
jne
sti
imul
mov
movs
sub
mov
in
inc
add
mov
push
xchg
imul
mov
std
jne
push
push
dec
movs
push
xor
mov
sub
ins
xchg
inc
mov
adc
(bad)
(bad)
pop
pop
pop
scas
sbb
shl
str
cmp
sub
mov
addr16
test
loope
add
mov
xor
popa
cmp
in
mov
adc
sub
data16
add
das
pop
in
lahf
sti
sbb
das
pop
and
or
mov
jge
idiv
out
jge
jnp
neg
arpl
mov
jg
movs
xchg
test
ror
mov
jae
push
jmp
mov
jmp
add
call
aad
push
dec
dec
xor
cmp
call
repz
and
dec
push
xchg
xchg
mov
iret
sahf
and
cmps
leave
xor
repnz
cmp
jl
bound
shl
pop
out
stc
repz
cmp
mov
(bad)
xor
test
retf
cmp
adc
fisub
adc
dec
aaa
push
sub
imul
fld
xchg
or
xchg
pop
cmp
lds
enter
mov
mov
add
lock
jle
shl
jmp
cmps
test
xchg
pop
dec
cdq
xor
jmp
(bad)
sub
das
pop
and
push
rcl
xlat
(bad)
call
xchg
mov
cmp
push
and
iret
push
sub
scas
shl
sub
scas
aas
jns
mov
xchg
lahf
stos
cs
mov
mov
imul
out
les
and
dec
mov
outs
outs
das
inc
(bad)
sbb
add
pusha
outs
jle
aaa
into
sahf
data16
fs
or
call
xchg
mov
jp
jnp
out
cwde
cmps
pop
xor
fnstenv
mov
cmp
push
push
fst
in
aaa
cmp
shr
lea
fild
dec
loopne
cli
(bad)
rol
lds
jg
in
pop
ds
stc
iret
mov
mov
dec
dec
emms
fdiv
mov
jbe
imul
lods
lods
xor
aaa
(bad)
mov
(bad)
mov
hlt
cmc
cmc
xor
xor
cmc
mov
jg
mov
cmps
mov
shr
nop
mov
xor
enter
add
ret
mov
enter
add
mov
xor
mov
pushf
test
cmp
ret
test
in
jo
lahf
iret
push
inc
push
dec
mov
adc
or
icebp
lds
and
jl
mov
stc
ss
fadd
adc
and
dec
cmp
fistp
jo
pop
sbb
mov
fild
or
lock
and
mov
jmp
cmp
neg
iret
inc
(bad)
test
fdiv
sub
inc
or
cmc
iret
lahf
aas
iret
xlat
mov
cmp
mov
adc
in
fcmovnb
fidivr
mov
and
dec
lahf
ds
xchg
push
aaa
stc
cld
je
and
lea
push
push
xor
xchg
stc
lds
retf
mov
ins
test
(bad)
mov
mov
ret
mov
loop
and
xor
pushf
cmp
in
in
hlt
add
shl
cmps
cmps
mov
sbb
push
lods
sbb
cdq
lods
sbb
inc
mov
mov
and
pop
cmps
jbe
sub
jb
sbb
pop
es
retf
popa
sbb
xchg
add
xchg
sub
sbb
loopne
rol
jmp
mov
mov
addr16
sti
sbb
jmp
hlt
lock
(bad)
jl
pop
outs
mov
int
icebp
les
dec
lock
out
jl
pop
xlat
mov
bound
or
sub
cli
sti
cli
ss
hlt
xor
fcmovu
lods
scas
scas
(bad)
jmp
scas
fstp
or
pop
xor
jbe
jmp
mov
in
popf
sbb
test
enter
test
out
pop
clc
add
mov
out
aaa
sub
inc
fild
in
xchg
mov
jno
in
dec
pushf
cmp
jle
sbb
add
bound
sbb
dec
lock
neg
push
daa
adc
and
retf
retf
sub
es
and
jbe
lock
mov
icebp
push
jg
push
cld
(bad)
outs
cld
push
mov
mov
dec
icebp
hlt
ror
mov
mov
jecxz
(bad)
cmp
(bad)
loop
bound
inc
movs
xlat
pop
push
push
iretw
sahf
cmp
out
repz
mov
push
sub
daa
lahf
clc
jle
dec
dec
pop
sub
fisttp
add
mov
hlt
les
sbb
mov
xchg
popa
jl
fild
test
inc
into
pop
mov
das
ror
ins
inc
mov
add
adc
cmp
mov
sub
cmps
sub
and
sub
fidiv
push
rcr
pop
test
inc
ss
mov
mov
arpl
jl
icebp
icebp
jno
jl
ror
repz
jne
icebp
dec
mov
(bad)
adc
js
stc
out
out
mov
test
popa
cli
sti
sti
sbb
add
or
jl
ins
mov
popa
sbb
sub
repz
cmps
dec
aas
xor
pop
int
lods
or
loopne
mov
rcr
jno
loope
inc
mov
sbb
rcr
ror
in
in
sub
pushf
cmp
in
in
in
gs
or
sbb
sbb
shl
push
push
fstp
sbb
xor
and
or
std
std
test
mov
sbb
jle
cmp
rol
scas
mov
fld
pop
pop
pop
cs
loopne
cdq
xor
add
sbb
inc
and
and
(bad)
loop
and
jae
jecxz
fnstsw
jmp
not
mov
sbb
sahf
cmp
push
call
pop
idiv
and
dec
cmp
jecxz
push
jg
mov
mov
add
pop
mov
movs
and
mov
mov
pop
pop
pop
jecxz
movs
dec
pushf
cmp
(bad)
or
cmp
inc
jnp
(bad)
xor
push
push
das
jmp
mov
adc
inc
xchg
retf
push
xchg
or
or
js
inc
and
aad
pop
int
jge
call
not
and
mov
xchg
xchg
dec
push
iret
xlat
mov
or
cmc
cmc
push
xchg
dec
mov
mov
xchg
cmps
push
mov
call
cli
leave
xchg
(bad)
mov
(bad)
fiadd
push
jmp
jnp
rcr
mov
pop
(bad)
fiadd
sbb
loope
mov
sbb
sbb
fcomp
pop
data16
call
jb
mov
lock
lea
xchg
xor
xor
adc
xor
mov
xor
imul
dec
out
fistp
imul
mov
mov
jecxz
sub
(bad)
arpl
mov
icebp
icebp
jno
push
cmp
(bad)
xor
sbb
das
(bad)
jne
or
lahf
jg
cmp
add
les
(bad)
pop
ficomp
jge
mov
or
iret
les
and
ret
add
mov
mov
pop
sub
mov
or
jmp
fidivr
in
xchg
pusha
out
pop
frstor
push
(bad)
sbb
sub
out
mov
add
inc
add
add
mov
(bad)
rcl
adc
jnp
in
push
pop
and
fistp
jecxz
mov
xchg
dec
and
dec
movs
shl
inc
jnp
les
push
cli
frstor
pop
jg
cmp
imul
push
push
adc
add
daa
scas
fcmovnbe
fcmovne
(bad)
fcomp
mov
pop
fbstp
test
pushf
jns
or
movs
push
movs
push
sub
mov
fst
aaa
push
push
cmp
sub
ret
ret
xchg
xor
lods
ins
xor
test
test
pop
sbb
push
and
ret
xbegin
push
test
(bad)
(bad)
jle
mov
(bad)
cmp
jl
je
xlat
rol
popa
cld
cmp
lahf
stc
jmp
cmp
mov
dec
mov
push
mov
add
jge
dec
xchg
sub
ror
(bad)
pop
xlat
mov
adc
jae
cld
jns
out
cmp
xchg
in
or
aas
jo
or
jge
cmp
(bad)
jle
int
sti
mov
clc
in
or
mov
sub
and
jmp
mov
out
pusha
pusha
and
loope
push
push
sub
mov
jecxz
cmp
das
jge
dec
test
dec
dec
dec
dec
movs
mov
cmp
and
add
dec
cmp
fcomp
rcr
icebp
add
(bad)
pop
ja
jae
jmp
lock
jbe
aas
push
push
mov
or
es
das
xchg
dec
sub
das
xor
out
pop
pop
and
cmps
mov
or
test
lock
pop
mov
test
sub
scas
popa
iret
idiv
(bad)
rol
and
mov
cmp
push
(bad)
aas
ss
mov
sbb
inc
mov
mov
pop
neg
cmp
aam
je
std
mov
scas
and
daa
sbb
shr
movs
mov
cli
inc
sub
fs
add
add
dec
inc
inc
push
cwde
mov
xor
inc
inc
mov
cmp
cdq
loope
cdq
xor
jecxz
or
stos
or
fistp
je
mov
or
pop
add
and
test
sub
ror
xchg
dec
and
push
add
xor
pop
pop
lods
hlt
fiadd
stos
xor
(bad)
and
data16
out
xor
je
gs
or
lea
mov
pop
ror
cmp
mov
cmp
fistp
or
xor
inc
dec
mov
dec
rcr
fisttp
scas
cmovns
jb
loop
cmp
cdq
retf
cmp
fcmovnu
pop
test
scas
mov
inc
ss
mov
or
cmps
mov
loop
jg
(bad)
mov
dec
inc
add
jne
cmp
inc
pop
sahf
ret
pop
add
std
std
mov
(bad)
ss
xor
mov
pushf
fnstcw
(bad)
mov
ror
add
imul
aas
sbb
in
mov
sti
sti
sbb
sbb
(bad)
std
hlt
les
pop
aas
xchg
retf
xchg
into
out
call
xchg
jnp
std
clc
rol
movs
cs
outs
push
jo
lods
pop
fsub
cli
adc
scas
popa
push
sub
sub
xchg
xchg
sub
imul
adc
jo
gs
jge
mov
ss
mov
rcr
xor
mov
pop
cmp
fbstp
cmp
std
rcl
ja
aas
lock
jl
push
rdtsc
cmp
call
sbb
push
sub
pop
pop
pop
arpl
mov
(bad)
sub
adc
pop
fsub
ret
ret
ret
add
ds
xchg
xchg
xor
push
es
cmp
or
cmps
test
mov
mov
pop
fild
mov
into
cli
or
mov
jo
adc
inc
test
push
sub
dec
xor
xchg
dec
adc
and
inc
mov
xor
and
sbb
pop
arpl
loop
or
ror
sub
in
(bad)
std
clc
mov
push
stc
cmp
pop
add
and
cli
or
ret
sti
sti
mov
inc
and
stos
xchg
mov
shl
enter
gs
ret
gs
lea
pop
and
mov
pop
sahf
sti
fxch
call
xchg
add
mov
lods
xchg
ror
mov
setg
dec
add
bound
xchg
dec
push
ds
fwait
and
sub
pop
and
mov
sahf
cmp
inc
xchg
outs
popa
iret
scas
inc
xchg
add
dec
mov
clc
sub
xchg
popf
mov
and
xlat
sub
cdq
ins
jbe
and
(bad)
jne
aas
ds
(bad)
push
cmps
imul
push
pop
add
add
hlt
or
pop
fcom
sub
das
inc
sub
mov
popa
sbb
mov
pop
neg
lds
add
cli
or
inc
add
(bad)
pop
stc
rol
ins
aad
jne
sahf
call
scas
mov
jae
mov
(bad)
add
js
clc
test
je
mov
outs
(bad)
retf
movs
pop
ins
add
(bad)
cli
enter
mov
add
push
fwait
or
jmp
call
push
ret
jo
(bad)
pop
(bad)
sbb
es
cmp
fistp
je
mov
fimul
pop
pop
pop
addr16
xlat
cmc
xlat
jne
jg
xor
mov
pop
add
movs
clc
cmp
aas
in
shl
lods
dec
add
fstp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
(bad)
aas
xor
fsubp
sbb
add
dec
inc
scas
inc
pusha
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
jb
jne
jno
push
dec
dec
jno
dec
inc
or
add
add
jb
je
jo
jb
outs
mov
jno
loop
jbe
inc
jbe
call
push
dec
inc
cmc
inc
inc
inc
push
jbe
jb
je
jo
jno
ins
popf
jno
ins
in
jbe
jb
test
mov
xchg
xchg
xchg
dec
imul
push
push
push
call
push
dec
dec
jmp
sub
add
jbe
jb
jbe
jb
jb
outs
jns
jo
xlat
jae
outs
(bad)
jle
jnp
xchg
xchg
xchg
call
lea
push
push
push
jmp
push
push
jmp
sub
push
xor
dec
dec
dec
dec
inc
inc
call
push
dec
dec
call
jbe
jb
jno
ins
mov
jnp
ja
mov
cdq
dec
test
push
aaa
aaa
call
sbb
call
sbb
push
xor
dec
jmp
push
call
(bad)
xlat
dec
retf
push
push
push
(bad)
cmp
cmp
push
push
push
dec
dec
(bad)
cmp
cmp
add
jae
outs
test
nop
(bad)
call
jl
call
popa
(bad)
cmp
notrack
and
sbb
sbb
sub
sub
dec
dec
dec
jmp
dec
cmps
test
iret
rcl
inc
rol
rcl
sar
loope
jecxz
stos
stos
stos
(bad)
(bad)
loopne
ret
push
jb
cmp
dec
dec
call
push
inc
aas
retf
dec
dec
inc
pop
ja
jae
sahf
popf
popf
out
cmp
call
sbb
jmp
and
inc
inc
jmp
popa
(bad)
jg
jg
mov
mov
sar
loope
loope
jmp
repnz
(bad)
mov
mov
(bad)
fucom
(bad)
fwait
cwde
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lea
dec
inc
call
dec
dec
mul
daa
and
add
push
push
push
jno
sahf
sahf
sahf
(bad)
mov
(bad)
jmp
out
(bad)
jmp
jmp
loop
jmp
loopne
(bad)
fstp
(bad)
repz
icebp
(bad)
mov
stos
stos
(bad)
in
in
in
call
(bad)
(bad)
(bad)
stc
stc
clc
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
jmp
bound
cmp
cmp
jmp
sub
mov
add
or
add
add
mov
push
cmc
cmc
(bad)
out
out
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
push
idiv
push
test
push
hlt
repz
(bad)
std
push
cmc
cmc
push
repz
idiv
(bad)
stc
stc
stc
dec
leave
leave
push
jae
gs
cs
das
jo
add
sub
add
sub
add
push
fstp
fdivr
clc
clc
idiv
int
int3
push
repnz
jmp
jmp
jmp
jmp
out
jmp
out
jmp
in
jmp
jecxz
push
cmc
cmc
(bad)
mov
cmps
test
call
std
std
push
repnz
out
out
out
(bad)
jmp
(bad)
out
out
out
jmp
out
call
daa
pop
add
add
add
add
add
daa
add
add
into
ror
sti
cli
stc
stc
inc
mov
idiv
jmp
(bad)
jmp
(bad)
call
out
jmp
out
jmp
in
push
div
inc
mov
lods
push
hlt
icebp
call
cld
cld
(bad)
in
in
in
(bad)
jmp
in
jmp
loopne
(bad)
fcmovu
(bad)
out
out
scas
scas
scas
push
aaa
aaa
jnp
add
or
add
and
add
push
add
add
add
add
add
add
retf
int3
int3
std
cld
sti
std
(bad)
mov
stc
cli
(bad)
in
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
out
div
clc
(bad)
mov
lods
cmps
push
icebp
repz
stc
sti
jmp
in
jmp
jecxz
(bad)
(bad)
fdivrp
fcmovu
(bad)
rcl
sar
(bad)
fdivr
movs
movs
movs
push
xor
add
add
add
sbb
add
adc
add
add
add
sldt
add
add
add
int3
iret
sti
std
std
std
(bad)
mov
cli
cld
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
out
(bad)
clc
idiv
(bad)
mov
stos
lods
push
hlt
repnz
clc
clc
(bad)
(bad)
(bad)
(bad)
fdivr
fcomp
fdivr
rcl
sar
int3
int3
int3
call
aad
jmp
ss
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
int3
into
sti
cld
sti
cld
(bad)
mov
std
sti
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
clc
clc
clc
(bad)
mov
lods
scas
push
repz
div
call
xlat
xlat
call
aad
call
rcl
dec
int3
int3
inc
(bad)
into
into
into
jmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
ror
sti
cld
sti
sti
(bad)
mov
(bad)
cld
push
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
inc
mov
test
repnz
repnz
call
into
sar
into
into
into
dec
leave
leave
inc
(bad)
(bad)
(bad)
mov
mov
(bad)
ds
add
add
add
add
add
add
into
retf
sti
sti
std
(bad)
mov
cld
std
push
lock
push
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
cli
cld
cld
(bad)
mov
scas
lods
push
cmc
cmc
call
lock
dec
enter
enter
ret
ret
(bad)
mov
mov
ret
xchg
xchg
(bad)
jp
jp
int
int3
sti
cli
sti
sti
inc
mov
(bad)
push
repnz
repnz
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
(bad)
jmp
in
(bad)
sti
sti
sti
inc
ret
stos
stos
scas
push
icebp
lock
jecxz
(bad)
mov
rol
mov
mov
mov
mov
(bad)
(bad)
push
ja
int
int
stc
sti
clc
inc
rol
(bad)
(bad)
(bad)
push
repz
push
repz
repnz
repnz
icebp
icebp
push
lock
out
out
out
(bad)
out
out
out
(bad)
cld
cld
sti
(bad)
mov
lods
scas
push
hlt
repz
(bad)
(bad)
mov
mov
mov
mov
mov
scas
scas
scas
(bad)
mov
mov
pop
iret
iret
int
clc
cli
cli
inc
ret
ret
(bad)
std
(bad)
(bad)
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repnz
icebp
icebp
push
icebp
icebp
(bad)
out
lock
std
std
cld
inc
mov
lods
push
repz
jmp
(bad)
jmp
mov
push
scas
scas
jmp
mov
dec
jne
pop
int
iret
sti
cli
cli
cli
inc
(bad)
mov
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repnz
icebp
lock
cld
cld
sti
inc
mov
cmps
movs
test
jmp
aad
jmp
mov
lods
lods
lods
jmp
test
push
(bad)
(bad)
push
jne
retf
int
cli
stc
cli
cli
inc
rol
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
div
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
repz
repz
std
std
std
inc
(bad)
movs
test
idiv
mov
iret
iret
jmp
stos
stos
jmp
stos
stos
jmp
mov
dec
je
pop
retf
retf
retf
stc
cli
dec
(bad)
mov
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
cmc
cmc
push
hlt
hlt
(bad)
(bad)
(bad)
std
dec
mov
cmps
mov
idiv
movs
lahf
lahf
dec
retf
retf
call
stos
lods
jmp
stos
stos
jmp
mov
dec
outs
ja
add
add
add
add
and
mov
adc
pushf
push
into
int
sti
cli
stc
stc
inc
(bad)
(bad)
(bad)
(bad)
stc
stc
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
cmc
hlt
(bad)
(bad)
std
(bad)
dec
(bad)
(bad)
call
div
jmp
leave
retf
popf
mov
jmp
stos
stos
jmp
mov
call
addr16
add
js
das
dec
test
add
add
add
int
clc
idiv
cli
inc
mov
(bad)
(bad)
(bad)
(bad)
sti
cli
cli
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
div
push
hlt
cmc
(bad)
(bad)
(bad)
(bad)
dec
int
call
cmc
jmp
retf
mov
stos
stos
jmp
stos
stos
jmp
mov
dec
sbb
fadd
sub
or
iret
add
jo
add
outs
mov
iret
int3
int
sti
idiv
inc
mov
(bad)
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
dec
int
call
cmc
cmc
call
retf
mov
lods
stos
jmp
stos
stos
jmp
mov
dec
sub
div
add
inc
mov
inc
add
inc
pop
retf
add
add
into
iret
sar
idiv
cmc
inc
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
call
iret
retf
call
hlt
bnd
leave
int
lahf
sahf
mov
jmp
stos
stos
jmp
mov
call
push
retf
xchg
popa
aas
call
fisttp
fsubrp
cmp
fxch
push
pop
fimul
into
iret
shl
clc
cmc
cmc
dec
ret
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
stc
(bad)
(bad)
(bad)
(bad)
call
ror
call
icebp
lock
enter
mov
stos
jmp
stos
stos
jmp
mov
xchg
push
push
fs
in
pop
inc
ficomp
push
cmp
and
xlat
push
add
add
add
mov
add
xor
sub
or
add
add
ror
hlt
hlt
cmc
icebp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
dec
mov
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cli
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
fcom
sar
lahf
mov
in
jmp
(bad)
leave
jmp
stos
stos
jmp
stos
stos
jmp
dec
mov
add
xor
and
sbb
sub
sub
and
add
pop
fld
es
in
xor
rcl
iret
cmc
div
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
call
dec
jmp
cdq
jge
clc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
push
mov
(bad)
call
cmps
test
retf
enter
mov
stos
jmp
stos
stos
jmp
idiv
dec
and
call
or
inc
or
inc
sbb
inc
sbb
mov
add
mov
mov
add
add
iret
into
cmc
cli
cli
stc
dec
int3
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovb
sar
sub
test
call
xlat
fcos
ret
inc
mov
(bad)
inc
(bad)
(bad)
out
jmp
leave
(bad)
call
stos
lods
jmp
stos
stos
jmp
xchg
sar
xchg
push
clc
bound
idiv
dec
and
push
adc
jmp
adc
(bad)
and
or
in
add
pushf
add
das
ror
iret
cli
std
std
std
(bad)
jmp
(bad)
fsubp
loope
fmul
xlat
jmp
imul
dec
xchg
inc
mov
(bad)
aam
aam
aad
aam
xlat
fcom
dec
retf
int3
jmp
out
jmp
int3
call
stos
stos
jmp
cdq
stos
call
mov
call
mov
pop
popa
inc
fnstsw
cmp
jl
das
aad
xor
adc
add
add
push
jg
add
pop
sub
xor
add
int
cld
call
cli
sti
(bad)
std
cli
sti
push
hlt
idiv
cld
cld
(bad)
call
(bad)
int
arpl
push
hlt
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
jmp
inc
(bad)
pushf
popf
call
test
mov
pop
sbb
(bad)
jl
xchg
jmp
jg
add
sbb
dec
add
popa
jmp
xor
add
into
sar
(bad)
(bad)
call
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
cld
sti
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
push
cmc
idiv
loopne
loopne
fcmovu
fcos
fcomp
xlat
(bad)
fcomp
fdivr
(bad)
fcos
fcmovnu
(bad)
jmp
(bad)
fcomp
xlat
call
popf
fwait
jmp
dec
lock
jmp
sbb
inc
or
fld
daa
jo
add
add
mov
and
add
ins
in
and
inc
daa
lods
inc
xor
add
add
add
int3
iret
call
int3
iret
call
xlat
aam
iret
iret
aam
into
retf
int
aad
aam
(bad)
fdivrp
in
in
jmp
push
repz
div
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
call
aam
(bad)
(bad)
fdivr
rol
push
jp
call
cmp
inc
loopne
sub
sar
adc
(bad)
inc
add
inc
or
inc
or
inc
add
inc
add
loope
push
int
add
add
aam
iret
(bad)
(bad)
(bad)
(bad)
push
hlt
repz
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cli
cli
cli
push
div
push
repnz
in
in
in
jmp
in
(bad)
(bad)
fdivrp
loop
loop
in
in
mov
mov
pushf
popf
fwait
call
mov
in
out
iret
ret
jmp
xchg
or
jp
in
outs
inc
hlt
int3
pop
lock
jmp
aas
pop
out
das
pop
loop
sub
movs
and
shr
add
add
add
mov
xor
add
add
(bad)
hlt
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
cld
std
(bad)
push
hlt
hlt
(bad)
out
out
in
(bad)
jmp
(bad)
fstp
(bad)
rcl
sar
mov
(bad)
mov
mov
push
scas
lods
jmp
mov
inc
(bad)
retf
leave
(bad)
jmp
mov
inc
test
add
(bad)
jg
jg
lods
stos
stos
popa
js
in
or
out
pusha
inc
loop
dec
xor
add
add
xchg
push
add
pop
dec
add
dec
mov
and
add
jge
xchg
xchg
xchg
or
rol
leave
(bad)
fcmovu
fdiv
out
out
loop
loopne
into
int
(bad)
mov
scas
stos
jmp
mov
mov
jmp
cmps
movs
jmp
stos
test
scas
lods
stos
push
push
in
push
loop
cs
call
sbb
(bad)
dec
mov
pop
addr16
sbb
cdq
sub
pop
and
mov
or
mov
add
addr16
add
pop
ret
je
add
xchg
inc
sub
scas
mov
aam
iret
adc
into
ret
cmps
cmps
mov
xchg
mov
mov
scas
lods
lods
loopne
stos
stos
push
mov
push
mov
push
scas
scas
lock
scas
lods
(bad)
test
fcom
mov
repz
data16
(bad)
jnp
icebp
dec
call
or
inc
or
loop
and
fadd
es
add
jg
add
mov
add
mov
inc
pop
mov
repnz
shr
add
test
cmps
sbb
stos
test
push
movs
movs
movs
xor
movs
mov
add
add
add
or
adc
add
add
mov
adc
outs
stc
call
hlt
std
addr16
in
call
call
jmp
pop
loope
and
(bad)
push
or
aam
or
shr
add
into
mov
add
mov
add
add
add
and
add
ja
cmp
rcl
adc
push
jle
push
and
adc
add
add
add
add
(bad)
out
xor
cmc
push
jae
in
outs
fs
jmp
jb
sub
jno
sbb
arpl
bswap
and
add
pop
add
add
dec
lods
add
push
jmp
mov
add
sar
add
loope
adc
push
or
sbb
add
imul
push
arpl
push
push
mov
gs
add
xchg
add
movs
inc
cmp
scas
scas
jb
dec
scas
jne
test
jae
call
and
call
push
mov
in
add
mov
add
jg
add
jb
add
imul
and
mov
and
add
gs
add
jnp
add
inc
xor
inc
sbb
add
mov
stos
jo
add
jp
and
jns
mov
jb
clc
cwde
fs
push
cmc
dec
in
xor
aad
sbb
pop
sar
add
inc
or
inc
push
mov
add
(bad)
or
inc
or
xchg
add
scas
inc
add
scas
or
add
add
je
sub
push
out
ja
in
push
cmp
hlt
dec
xor
repz
aam
daa
sbb
iret
pop
adc
movs
adc
shl
mov
pop
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
clc
aas
(bad)
inc
add
inc
add
clc
add
(bad)
inc
add
add
(bad)
inc
add
add
add
inc
add
add
add
add
inc
add
aas
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
aas
add
inc
add
and
add
inc
add
daa
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
aas
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
sldt
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
jmp
add
add
add
(bad)
inc
add
(bad)
inc
add
add
(bad)
(bad)
inc
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
jno
jnp
jbe
push
push
dec
jnp
dec
dec
or
add
add
ins
es
outs
jb
jl
leave
nop
(bad)
(bad)
call
jbe
call
dec
call
push
call
sbb
add
jno
ins
or
ins
dec
jl
js
mov
(bad)
dec
js
push
push
push
jmp
pop
and
adc
adc
cmp
cmp
dec
dec
dec
dec
dec
(bad)
cmp
cmp
jb
outs
out
xchg
xchg
xchg
call
jo
dec
dec
jmp
sub
jmp
sub
call
pop
dec
mov
(bad)
rcl
sar
dec
dec
dec
(bad)
cmp
dec
dec
inc
inc
add
add
nop
(bad)
mov
inc
inc
inc
call
push
push
call
push
sbb
inc
mov
(bad)
(bad)
fdivr
clc
stc
stc
jmp
in
in
jmp
(bad)
(bad)
jmp
out
jmp
(bad)
cmp
cmp
dec
dec
dec
(bad)
ds
add
call
(bad)
mov
jmp
idiv
cmc
cmc
cmc
push
icebp
icebp
(bad)
jmp
in
in
jmp
out
lock
(bad)
(bad)
push
repz
(bad)
(bad)
(bad)
call
inc
inc
inc
inc
cld
(bad)
(bad)
add
add
retf
int
mov
idiv
(bad)
mov
hlt
hlt
(bad)
jmp
out
jmp
out
jmp
out
(bad)
out
icebp
lock
icebp
repnz
(bad)
std
(bad)
(bad)
fdivrp
repz
(bad)
(bad)
(bad)
call
aad
dec
dec
cmps
fstp
fucom
add
add
add
add
mov
idiv
(bad)
mov
in
in
(bad)
jmp
(bad)
call
out
push
lock
jmp
repnz
sti
sti
dec
into
iret
jmp
jecxz
dec
int3
int3
(bad)
stc
stc
stc
jmp
arpl
(bad)
fild
add
add
add
add
add
add
rol
clc
idiv
(bad)
mov
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
push
repnz
repnz
cmc
idiv
enter
(bad)
fcos
ret
ret
ret
jmp
out
call
pop
rcr
fild
add
add
add
add
add
add
add
add
sar
(bad)
mov
icebp
lock
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
icebp
repz
repnz
ret
iret
iret
iret
(bad)
mov
loopne
call
pop
mov
add
add
add
add
add
add
add
add
rol
mov
idiv
(bad)
mov
repnz
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
push
div
jmp
repnz
jmp
(bad)
mov
(bad)
(bad)
push
rcl
push
jne
ret
mov
idiv
(bad)
mov
div
push
repnz
icebp
icebp
(bad)
out
out
out
(bad)
out
out
out
(bad)
clc
idiv
jmp
repnz
mov
in
push
mov
scas
inc
mov
mov
add
add
ret
clc
idiv
(bad)
mov
cli
stc
push
hlt
hlt
push
repz
icebp
icebp
push
lock
stc
cli
cli
jmp
repnz
mov
fnstsw
jmp
mov
jmp
ret
ret
push
mov
add
add
ret
div
cli
(bad)
mov
cli
cli
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
std
cld
cld
jmp
icebp
repz
mov
fcomp
jmp
lods
lods
jmp
(bad)
(bad)
push
jbe
ret
lods
clc
idiv
(bad)
mov
std
(bad)
push
div
push
div
push
cmc
cmc
push
hlt
hlt
(bad)
(bad)
(bad)
(bad)
jmp
repnz
ret
(bad)
aad
call
stos
stos
jmp
(bad)
push
jne
rol
scas
div
stc
(bad)
mov
(bad)
(bad)
(bad)
stc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
(bad)
(bad)
(bad)
(bad)
jmp
icebp
icebp
inc
ret
rcl
sar
popf
popf
popf
jmp
movs
movs
inc
(bad)
(bad)
(bad)
xor
inc
lods
jnp
add
add
sar
mov
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
jmp
out
lock
rol
rcl
sar
lahf
mov
stos
jmp
(bad)
push
lods
into
pop
inc
fld
es
push
ret
lods
div
stc
(bad)
mov
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
jmp
out
out
inc
rol
rcl
sar
mov
stos
stos
jmp
mov
mov
add
add
add
add
es
push
imul
rol
lods
div
stc
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
jmp
out
out
inc
rol
rcl
sar
mov
stos
stos
call
and
dec
seta
add
mov
add
cld
add
popf
lock
add
ret
lods
div
stc
(bad)
mov
(bad)
(bad)
push
jge
inc
int3
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
out
out
inc
rol
rcl
sar
mov
stos
stos
jmp
xchg
jmp
fptan
dec
xor
hlt
cmp
fdiv
xor
aad
push
adc
xchg
add
mov
mov
idiv
push
cld
(bad)
call
push
jmp
cmps
jmp
(bad)
mov
mov
push
repz
inc
rol
rcl
sar
mov
mov
mov
push
jbe
pop
dec
enter
rol
add
add
add
add
popa
cmp
sub
ret
cmps
(bad)
(bad)
(bad)
push
mov
mov
push
imul
leave
retf
retf
call
aam
push
cmc
idiv
rol
dec
retf
retf
call
mov
jmp
sub
jg
push
and
push
sub
add
jae
add
sahf
inc
sub
add
(bad)
(bad)
fdivr
clc
stc
clc
push
hlt
hlt
(bad)
stc
idiv
push
jmp
lock
fstp
(bad)
(bad)
fdivrp
fcmovu
(bad)
in
out
mov
aad
dec
retf
scas
sahf
int3
call
push
jmp
dec
xor
push
sbb
call
push
retf
or
call
retf
or
push
into
int
lods
xlat
xlat
xlat
dec
into
into
dec
into
into
push
icebp
lock
jmp
jmp
out
out
call
int
dec
int
(bad)
(bad)
(bad)
retf
push
call
int
int
int
aam
jno
mov
push
inc
int3
push
inc
xor
mov
add
add
add
ins
sbb
and
inc
mov
mov
mov
aam
dec
int
push
lods
stos
jmp
test
stos
jmp
movs
mov
(bad)
mov
cmp
jmp
sbb
(bad)
cmp
bound
fmul
sub
or
jae
add
and
add
bound
add
popf
inc
xor
add
mov
mov
mov
mov
mov
mov
cmps
jmp
stos
jmp
stos
mov
mov
(bad)
mov
push
in
dec
(bad)
jmp
mov
add
lods
inc
push
lods
inc
or
inc
(bad)
push
mov
adc
add
add
mov
das
stos
stos
test
jno
test
inc
cmps
cmps
cmps
and
adc
pushf
aaa
add
add
je
retf
add
outs
fsubr
data16
je
loope
gs
fild
sub
xchg
xor
mov
or
fs
add
jb
pusha
xor
(bad)
or
leave
or
mov
xor
adc
dec
movs
add
add
add
cmp
sbb
push
add
call
sub
popf
stos
jns
dec
lods
jg
lds
dec
in
cmp
retf
push
scas
cli
add
pushf
in
adc
rol
adc
mov
add
mov
add
scas
inc
pop
mov
mov
mov
jns
outs
(bad)
ins
call
shl
loop
dec
xor
clc
cmp
(bad)
clc
sub
iret
call
pop
adc
cmps
or
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
aas
(bad)
inc
pop
(bad)
cld
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
jg
add
aas
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
(bad)
clc
add
aas
clc
add
aas
clc
add
lahf
clc
add
psubb
add
clc
add
addr16
add
pop
clc
add
pop
clc
add
adc
add
add
add
add
and
(bad)
inc
sar
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
lea
push
ja
jno
mov
test
arpl
inc
push
xor
cs
jp
jbe
cmp
js
jae
mov
jg
jge
jns
ja
jne
pop
pop
pop
inc
inc
inc
push
xor
mov
inc
inc
cmp
add
je
test
jbe
pop
pop
pop
dec
dec
dec
dec
call
push
call
pop
dec
test
call
pop
(bad)
ds
push
gs
add
add
jl
push
push
push
inc
inc
call
pop
dec
mov
int
rcl
sar
(bad)
(bad)
aad
(bad)
(bad)
std
dec
into
iret
jmp
(bad)
cmp
cmp
gs
xchg
xchg
adc
add
add
lahf
lahf
cmc
xlat
xlat
fdivr
cld
cld
std
(bad)
stc
stc
cli
(bad)
(bad)
(bad)
(bad)
jmp
loop
dec
int3
int3
inc
sar
(bad)
(bad)
(bad)
push
lock
ins
ins
clc
xchg
xchg
nop
push
jecxz
out
jmp
fcomp
push
repnz
out
(bad)
in
in
in
(bad)
(bad)
fcos
retf
inc
(bad)
(bad)
in
(bad)
(bad)
fdivrp
jmp
jmp
hlt
hlt
hlt
call
(bad)
(bad)
aas
aam
(bad)
fcomp
(bad)
call
rcl
push
icebp
icebp
(bad)
jmp
icebp
icebp
(bad)
(bad)
fdivr
retf
int3
retf
inc
(bad)
loopne
loope
aad
(bad)
inc
mov
fcmovnu
(bad)
xchg
xchg
xchg
int
xchg
xchg
sub
add
add
aad
aam
fstp
call
(bad)
(bad)
push
cmc
cmc
(bad)
in
in
in
push
repz
(bad)
fdivrp
retf
retf
int3
dec
leave
enter
(bad)
retf
retf
retf
(bad)
mov
retf
retf
call
lea
add
(bad)
(bad)
rcr
fstp
(bad)
fcom
fdivr
clc
clc
clc
(bad)
out
out
out
push
cmc
idiv
loopne
loope
retf
int3
retf
dec
int3
int3
(bad)
fcmovu
(bad)
mov
mov
inc
rol
xchg
xchg
xchg
mov
(bad)
aad
iret
(bad)
(bad)
fcmovu
(bad)
sti
sti
sti
push
icebp
icebp
(bad)
clc
stc
stc
jmp
jecxz
dec
retf
int3
dec
int
call
aam
push
test
mov
mov
aad
fmul
(bad)
fdivrp
fcmovu
fdivr
std
(bad)
(bad)
push
repz
cld
cld
cld
jmp
out
dec
retf
rcl
sar
rcl
sar
stos
stos
stos
jmp
mov
jg
ja
ja
aad
(bad)
rcr
fstp
(bad)
fstp
(bad)
(bad)
(bad)
(bad)
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
call
retf
retf
rcl
dec
into
iret
jmp
mov
mov
xlat
sbb
mov
lods
or
lods
or
add
add
aad
iret
fstp
fdivrp
fstp
(bad)
(bad)
(bad)
(bad)
push
div
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
retf
rcl
sar
int
int
cmps
test
jmp
mov
xchg
mov
dec
jecxz
xor
add
aad
iret
(bad)
(bad)
fcmovnu
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
retf
rcl
sar
into
int3
int
test
test
mov
pop
mov
ss
scas
ins
or
test
xor
mov
(bad)
aam
iret
(bad)
(bad)
out
out
aam
aam
test
lods
push
div
push
lock
leave
leave
call
rcl
dec
int3
int
test
mov
fcos
pop
cmp
enter
retf
lock
push
int3
mov
or
add
(bad)
(bad)
fmul
jecxz
in
(bad)
retf
sar
mov
jmp
mov
int3
(bad)
(bad)
fcos
retf
jmp
js
jmp
js
test
push
cmps
sbb
xor
and
add
ja
aam
aam
in
out
ror
sar
mov
mov
xchg
mov
(bad)
mov
leave
retf
loop
(bad)
fcomp
fdivr
retf
retf
retf
mov
xlat
push
es
out
or
pop
nop
cmps
add
sbb
dec
rcl
rcl
fstp
(bad)
in
out
repz
hlt
(bad)
sti
repz
(bad)
out
jmp
(bad)
(bad)
fdivr
loope
loope
aam
aad
rol
push
sar
mov
(bad)
aad
aaa
fisubr
and
retf
or
je
add
add
mov
retf
rcl
sar
retf
int3
retf
inc
(bad)
mov
mov
mov
mov
mov
cmps
sar
xor
call
stos
(bad)
jge
lahf
push
mov
xor
xchg
adc
and
add
xchg
fadd
sub
add
nop
nop
das
sahf
sahf
popf
jne
mov
(bad)
test
movs
fsub
cmps
movs
icebp
test
test
fsubr
loope
lea
repz
inc
fdiv
xor
(bad)
adc
icebp
or
rcr
push
int
add
lods
das
xchg
xchg
xchg
or
mov
pop
lods
lods
stos
js
test
mov
aaa
sub
dec
mov
cmp
ror
dec
jmp
dec
xor
mov
pop
es
sbb
adc
add
jbe
xchg
arpl
imul
and
fwait
popf
adc
cdq
jge
mov
ja
and
jp
add
xchg
test
sbb
add
test
and
jle
lea
mov
dec
loopne
dec
xor
hlt
xor
ret
stc
and
mov
in
adc
mov
add
mov
or
(bad)
inc
cld
add
add
add
add
add
loopne
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
data16
addr16
addr16
addr16
data16
addr16
data16
addr16
addr16
addr16
cmp
ss
cmp
ss
cmp
aaa
(bad)
cmp
ss
cmp
ss
cmp
aaa
inc
add
add
pushf
fwait
dec
pushf
fwait
call
(bad)
mov
popf
pushf
call
add
add
(bad)
call
(bad)
call
aam
call
leave
call
add
add
call
sahf
jmp
(bad)
(bad)
(bad)
fdivr
sahf
popf
fwait
call
aad
call
add
add
call
sahf
(bad)
jmp
in
jmp
(bad)
call
add
add
call
sahf
(bad)
call
out
jmp
in
call
add
add
call
lahf
(bad)
jmp
call
lahf
call
push
cmp
add
add
add
out
jmp
out
jmp
loop
call
loop
jmp
pushf
or
add
add
call
sahf
(bad)
jmp
(bad)
jmp
sar
push
inc
sar
push
push
mov
fwait
mov
mov
call
mov
out
call
(bad)
(bad)
jecxz
mov
mov
add
cmps
and
and
mov
mov
call
mov
pushf
call
call
(bad)
push
int
cs
enter
and
mov
mov
jmp
call
(bad)
push
mov
(bad)
(bad)
fdivr
fstp
jecxz
mov
mov
pop
push
xchg
aaa
add
sub
push
mov
(bad)
cld
(bad)
clc
cmc
stc
(bad)
fcmovne
cmc
jmp
dec
in
addr16
iret
jmp
and
inc
(bad)
rol
mov
sbb
and
add
mov
mov
enter
leave
(bad)
js
mov
mov
mov
(bad)
mov
sub
nop
add
mov
xchg
add
add
js
and
rcl
div
daa
(bad)
icebp
pop
adc
mov
(bad)
add
mov
and
pop
add
clc
pop
add
lock
lock
lock
lock
lock
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
add
add
add
add
ins
xor
xor
add
add
rcl
add
(bad)
or
add
add
add
add
add
push
add
popa
ins
xor
add
push
add
popa
ins
xor
add
mov
lahf
push
adc
add
add
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
or
inc
outs
ins
ins
popa
outs
xor
add
push
sub
adc
add
add
push
add
arpl
add
push
add
mov
add
inc
sub
add
add
add
je
outs
outs
xor
push
add
add
je
outs
outs
xor
add
mov
add
inc
sub
add
add
add
je
outs
outs
xor
push
add
add
je
outs
outs
xor
add
mov
add
inc
and
add
add
add
arpl
xor
add
mov
add
sbb
add
inc
sub
add
add
ins
ins
popa
outs
xor
add
or
inc
outs
ins
ins
popa
outs
xor
add
add
add
add
inc
and
add
push
add
dec
push
add
add
add
add
add
cmp
add
sbb
add
inc
add
add
add
xor
pop
inc
and
add
add
add
sti
add
add
add
call
add
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
push
inc
add
add
inc
adc
inc
adc
push
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
add
inc
add
add
add
and
pop
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
sbb
xor
add
or
or
add
inc
add
xor
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
outs
push
jo
outs
outs
ins
jae
push
imul
ins
jae
add
outs
jne
push
outs
outs
ins
jae
add
hlt
add
add
inc
add
add
add
inc
inc
add
add
or
add
push
inc
add
add
add
cmp
pop
add
add
add
add
dec
add
inc
add
add
add
push
add
inc
add
add
push
add
dec
add
add
add
add
dec
add
inc
add
add
ins
add
add
and
inc
add
jb
outs
add
add
add
and
inc
add
pop
add
jb
outs
add
add
je
xor
add
bound
jo
add
je
inc
add
add
add
inc
add
add
add
sub
(bad)
(bad)
(bad)
inc
add
add
push
inc
add
add
add
adc
sub
inc
add
add
add
sbb
add
add
sub
inc
add
add
add
add
xor
add
xor
inc
add
add
add
inc
add
add
add
pop
and
inc
add
sbb
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
mov
inc
add
(bad)
(bad)
inc
adc
cmp
add
rcr
inc
add
add
add
inc
add
shl
sbb
add
add
inc
add
add
add
rcr
inc
add
add
add
shl
sbb
add
add
inc
add
add
add
sbb
add
add
add
inc
add
shl
sbb
add
add
inc
add
add
add
or
inc
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
sbb
and
add
sbb
add
add
add
add
push
add
add
inc
add
add
add
inc
add
shl
sbb
add
add
add
adc
push
add
add
add
add
add
inc
add
add
add
add
add
or
add
add
add
add
shl
sbb
add
add
add
sbb
or
inc
add
sbb
add
add
xor
inc
add
inc
add
adc
add
inc
add
add
inc
add
adc
add
inc
add
adc
add
add
lods
adc
inc
add
adc
add
add
aam
inc
add
inc
add
adc
add
adc
inc
add
adc
add
add
and
inc
add
inc
add
adc
add
sbb
add
add
dec
push
inc
add
inc
add
adc
add
add
inc
add
adc
add
add
add
scas
adc
add
add
add
mov
add
sub
jmp
add
add
add
sub
(bad)
(bad)
(bad)
inc
add
add
inc
add
jb
inc
sahf
dec
out
xor
cmps
or
add
add
add
sbb
add
sbb
or
add
add
add
add
add
add
add
(bad)
inc
add
in
sbb
add
add
loopne
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
and
inc
add
add
add
sbb
push
add
add
add
add
inc
add
add
jl
inc
add
add
inc
popa
add
push
imul
ins
jae
add
adc
push
test
out
stos
dec
mov
sbb
lods
jge
lods
xor
mov
stos
mov
pop
inc
and
add
xchg
sar
or
ss
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
pop
sbb
add
add
push
add
add
add
add
inc
add
inc
add
dec
lods
xor
or
stos
add
xchg
dec
jo
imul
je
outs
outs
xor
ror
xor
or
stos
add
xchg
push
imul
add
add
repnz
lods
xor
or
stos
add
xchg
inc
outs
ins
ins
popa
outs
xor
add
add
ins
ins
popa
outs
xor
add
add
dec
lods
xor
or
stos
add
xchg
push
dec
dec
dec
push
add
add
dec
lods
xor
or
stos
add
xchg
inc
push
add
jmp
adc
pusha
rcl
xor
add
push
dec
push
pop
add
adc
add
add
add
add
add
add
and
push
add
xor
and
push
add
xor
add
add
xchg
sbb
add
add
jns
lods
xor
or
stos
add
xchg
sub
xor
or
stos
add
xchg
pop
add
add
gs
xor
add
add
add
je
popa
jns
jb
fs
imul
je
imul
add
sbb
add
sbb
add
add
jl
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
outs
addr16
add
lock
add
inc
add
add
mov
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
outs
addr16
add
lock
add
add
xchg
push
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
gs
xor
cs
ins
add
add
or
add
inc
ins
outs
jae
dec
popa
outs
fs
gs
sbb
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
dec
jo
outs
push
jb
arpl
jae
in
inc
add
inc
add
add
lods
push
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
jo
cs
ins
add
add
add
add
jne
push
jb
arpl
jae
jae
add
sbb
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
gs
outs
fs
gs
imul
js
add
add
sbb
add
push
inc
add
add
les
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jne
push
jb
arpl
jae
outs
fs
gs
add
pop
inc
add
add
rcl
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
adc
add
inc
gs
js
je
outs
fs
jb
arpl
jae
add
add
add
fcom
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
imul
outs
arpl
jae
add
add
add
pop
inc
add
add
call
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
outs
jb
addr16
jne
fs
imul
sbb
add
inc
add
add
hlt
push
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
js
inc
add
lock
add
inc
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
add
add
add
add
add
add
inc
add
add
test
add
add
xchg
add
add
enter
add
add
add
add
cmp
add
add
pop
pop
jbe
popa
dec
bound
popa
jb
add
add
mov
add
aaa
add
add
add
add
add
add
add
aaa
add
xor
xor
aaa
add
add
add
add
add
inc
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
cmp
xor
xor
xor
cmp
xor
xor
add
add
aaa
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
xor
add
xor
add
add
add
aaa
add
add
xor
xor
xor
add
add
add
add
xor
aaa
add
add
inc
add
add
add
xor
xor
xor
add
add
add
aaa
add
add
xor
xor
xor
add
add
add
add
add
add
xor
add
add
imul
bound
ins
add
add
ins
add
add
add
aaa
add
add
add
xor
aaa
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
aaa
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
xor
inc
add
add
xor
inc
add
xor
xor
xor
xor
xor
xor
cmp
xor
add
xor
add
add
add
add
add
add
add
xor
add
add
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
xor
inc
add
xor
xor
xor
xor
xor
xor
inc
add
add
add
add
add
add
xor
add
xor
add
xor
add
add
add
add
popa
add
imul
je
add
add
add
add
add
add
add
add
add
add
aaa
add
xor
xor
aaa
add
add
add
add
add
inc
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
cmp
xor
xor
xor
cmp
xor
xor
add
add
add
aaa
add
aaa
add
aaa
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
xor
add
add
add
add
xor
add
xor
add
add
inc
add
xor
xor
xor
xor
cmp
xor
inc
add
add
xor
inc
add
xor
xor
xor
xor
xor
xor
cmp
xor
add
xor
add
add
add
add
add
add
add
xor
add
add
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
xor
inc
add
xor
xor
xor
xor
xor
xor
inc
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
add
aaa
add
add
add
xor
aaa
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
aaa
add
add
aaa
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
xor
aaa
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
xor
xor
xor
cmp
xor
inc
add
add
xor
inc
add
xor
xor
xor
xor
xor
xor
cmp
xor
add
xor
add
add
add
add
add
add
add
xor
add
add
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
xor
inc
add
xor
xor
xor
xor
xor
xor
inc
add
add
add
add
xor
add
add
xor
xor
add
add
add
add
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
add
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
push
je
add
jbe
popa
dec
bound
gs
fs
data16
add
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
dec
jae
je
imul
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
inc
imul
outs
jae
jb
arpl
add
pop
pop
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
inc
add
add
add
xor
aaa
add
inc
add
add
add
xor
add
add
add
add
add
add
add
add
xor
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
fs
jbe
popa
push
popa
jb
outs
jb
gs
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
je
dec
xor
add
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
dec
outs
push
popa
jb
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
gs
add
sub
(bad)
(bad)
(bad)
jmp
sub
shr
add
add
push
(bad)
inc
add
add
add
add
pusha
lods
sub
push
or
add
add
add
(bad)
inc
add
add
add
add
add
add
add
mov
sub
mov
add
add
add
add
add
add
sub
inc
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
sbb
adc
test
inc
add
sbb
adc
inc
add
sbb
sbb
test
inc
add
inc
add
inc
add
sbb
add
push
inc
add
sbb
add
inc
add
sbb
add
push
inc
add
outs
add
add
bound
jo
popa
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
mov
mov
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
test
je
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
push
call
test
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
lea
push
push
call
mov
push
call
mov
call
mov
call
push
mov
push
lea
push
call
push
mov
push
call
mov
call
mov
push
lea
push
call
push
mov
push
push
call
mov
push
mov
lea
call
push
call
mov
lea
call
mov
push
mov
push
push
call
mov
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
lea
push
call
push
mov
add
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
lea
call
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
call
add
lea
call
lea
call
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
lea
push
call
push
mov
add
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
lea
call
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
call
add
lea
call
lea
call
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
lea
push
call
push
mov
add
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
lea
call
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
call
add
lea
call
lea
call
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
lea
push
call
push
mov
add
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
lea
call
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
call
add
lea
call
lea
call
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
lea
push
call
push
mov
add
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
lea
call
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
call
add
lea
call
lea
call
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
call
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
lea
call
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
lea
call
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
call
lea
push
call
push
mov
add
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
lea
call
lea
push
lea
push
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
call
add
lea
call
lea
call
mov
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
cmp
jg
cmp
jge
mov
push
mov
push
call
mov
call
mov
mov
mov
mov
or
mov
mov
mov
push
push
mov
push
call
call
mov
push
mov
call
push
push
mov
push
call
call
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
jg
imul
jo
mov
push
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
push
push
push
push
push
push
call
mov
add
lea
push
push
call
mov
cmp
je
cmp
jne
mov
mov
mov
sub
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
push
add
push
push
call
mov
call
lea
push
call
mov
mov
xor
jmp
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
mov
mov
mov
mov
mov
cmp
jg
mov
test
je
cmp
jne
sub
mov
mov
cmp
jb
call
mov
lea
jmp
call
mov
mov
mov
push
push
push
call
mov
call
test
mov
je
mov
push
push
push
push
call
mov
call
test
mov
je
lea
push
push
call
lea
push
call
mov
mov
call
lea
call
mov
push
lea
push
push
mov
call
mov
mov
push
mov
push
push
call
mov
call
mov
push
push
call
lea
mov
call
mov
lea
lea
push
push
mov
mov
call
lea
lea
push
push
call
lea
lea
lea
push
push
mov
mov
call
lea
lea
push
push
call
lea
push
lea
push
push
lea
push
push
mov
mov
call
push
lea
push
call
lea
lea
push
mov
push
lea
lea
push
lea
push
push
push
call
add
test
je
mov
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
mov
push
call
mov
call
mov
mov
add
mov
jo
mov
jmp
fwait
push
jmp
test
je
lea
call
lea
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
jmp
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jle
lea
lea
mov
mov
call
mov
mov
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
mov
mov
mov
mov
call
push
lea
lea
push
lea
push
lea
push
push
call
mov
mov
test
je
mov
lea
push
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
push
call
mov
lea
call
push
call
push
call
mov
lea
call
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
call
lea
lea
push
lea
push
push
call
jmp
mov
mov
mov
mov
push
call
lea
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
mov
mov
call
test
je
lea
lea
push
push
mov
mov
call
push
mov
push
call
mov
lea
call
push
call
lea
lea
mov
mov
call
lea
call
lea
call
lea
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
push
call
mov
lea
lea
push
push
mov
call
test
je
lea
lea
mov
mov
call
lea
lea
push
push
mov
mov
call
push
mov
mov
push
call
mov
lea
call
lea
call
mov
push
push
call
mov
lea
call
push
call
call
lea
mov
call
mov
lea
mov
lea
push
lea
push
push
mov
call
mov
lea
call
mov
lea
push
push
call
push
call
mov
lea
call
push
call
mov
lea
call
lea
call
lea
lea
push
lea
push
push
call
jmp
mov
lea
lea
mov
mov
call
fwait
push
jmp
test
je
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
lea
call
lea
call
lea
call
mov
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
sahf
sahf
sahf
sahf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
add
add
add
push
dec
add
cs
add
cmp
add
inc
dec
add
push
dec
add
fs
add
je
add
xchg
add
dec
add
mov
add
add
add
aam
add
loop
add
hlt
dec
add
or
add
dec
add
xor
add
add
dec
dec
add
pusha
dec
add
jb
add
or
nop
dec
add
mov
dec
add
or
add
ja
add
push
add
and
add
lar
xor
add
adc
add
push
dec
add
xor
add
dec
add
push
dec
add
fs
add
jp
add
mov
add
dec
add
les
add
dec
add
out
add
int3
add
cmp
add
or
add
sbb
add
sbb
add
cmp
dec
dec
add
pop
dec
add
ins
dec
add
jle
add
mov
mov
dec
add
add
add
add
ror
loopne
add
lock
add
dec
adc
add
add
cmp
add
push
dec
add
push
dec
add
dec
add
jo
add
jp
add
mov
add
dec
add
mov
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
dec
jae
je
imul
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
push
popa
jb
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
push
je
add
add
jbe
popa
push
popa
jb
outs
jb
outs
imul
bound
bound
gs
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
dec
bound
popa
jb
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
jbe
popa
inc
imul
outs
jae
jb
arpl
add
pop
pop
jbe
popa
push
gs
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
add
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
fs
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
add
add
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jo
add
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jbe
popa
push
popa
jb
outs
jb
gs
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
