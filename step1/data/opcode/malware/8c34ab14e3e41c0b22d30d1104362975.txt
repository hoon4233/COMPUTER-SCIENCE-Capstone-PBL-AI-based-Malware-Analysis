add
add
nop
add
xor
add
pop
add
add
add
jo
add
mov
add
add
add
xchg
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
pop
add
add
add
add
add
add
add
sbb
add
add
add
add
add
xor
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
add
add
add
add
add
or
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
pop
add
mov
or
nop
add
mov
pop
push
mov
push
call
mov
(bad)
pop
cmp
sbb
xor
and
or
je
call
push
add
add
ret
sbb
jg
push
xor
call
ret
mov
jmp
ret
or
mov
jb
inc
pop
ret
push
and
dec
lea
mov
mov
repz
test
cmps
jge
into
ins
sbb
xchg
in
or
ficom
push
mov
adc
xor
icebp
and
sbb
rcr
push
mov
xor
jo
out
inc
shl
mov
cmc
mov
sub
xor
push
push
or
push
push
xchg
arpl
sbb
add
inc
add
test
jne
pop
xor
shr
mov
cmp
je
cmp
cmp
sub
mov
sbb
xor
mov
push
sbb
inc
add
dec
imul
shl
ds
xor
jp
ss
sub
add
je
or
jmp
std
std
pop
fnsave
cmc
push
cmp
and
neg
sbb
or
adc
push
push
mov
lea
adc
inc
xchg
add
rep
call
pusha
cmp
movlps
xchg
sub
mov
dec
and
ss
sub
or
sub
mov
push
sbb
loopne
int3
or
inc
push
sub
pop
cmp
adc
push
inc
retf
jne
test
leave
je
(bad)
push
add
pop
jne
pop
push
add
aaa
(bad)
cmp
mov
add
inc
mov
je
mov
cmp
or
mov
or
push
push
call
les
sub
pop
pop
or
dec
nop
mov
and
adc
add
fld
js
les
and
in
or
pop
cmc
xchg
inc
jmp
dec
cld
and
loopne
xor
sbb
sub
test
ret
xor
jp
and
dec
in
adc
sahf
jecxz
push
cmps
ds
fwait
cli
idiv
pop
mov
aas
fs
enter
pushf
jmp
nop
cld
and
inc
out
xor
xchg
inc
neg
outs
rcl
test
cmp
(bad)
call
push
(bad)
push
cld
pop
loope
add
adc
mov
outs
inc
add
cmc
sbb
dec
inc
add
pop
cmp
fcom
in
or
shl
adc
arpl
inc
sbb
mov
cld
add
adc
push
mov
movs
mov
cli
adc
cli
adc
adc
adc
cli
adc
jmp
push
sti
cmp
inc
test
adc
push
xchg
or
inc
cmp
mov
loop
ror
enter
loop
jge
push
fadd
pop
push
push
cmps
cmp
adc
inc
push
sub
ret
sbb
sbb
icebp
out
retf
lods
add
sub
push
mov
xchg
cmp
mov
lahf
cmp
xor
push
sub
cmp
fcom
dec
jmp
sbb
fldenv
cwde
lock
data16
in
ret
mov
jp
loopne
gs
push
data16
not
or
xor
xor
sbb
xchg
adc
sbb
mov
(bad)
mov
xchg
sbb
ins
enter
jmp
pop
fnstsw
pop
pop
adc
sub
inc
rcl
jp
and
lahf
mov
or
ins
pop
test
or
xor
shr
stc
push
in
call
fmul
dec
ror
xor
cdq
and
push
jmp
and
sbb
push
push
out
push
adc
inc
popf
mov
pop
jnp
push
push
xchg
inc
and
jp
mov
enter
or
nop
jg
cwde
ret
push
out
lea
data16
and
stos
repnz
mov
(bad)
cmp
mov
sti
mov
add
sbb
stos
(bad)
push
scas
and
test
sbb
retf
ins
push
jmp
push
cdq
pop
sbb
into
and
adc
out
enter
add
rcl
bound
sub
icebp
sub
xor
push
nop
mov
mov
retf
fld
or
or
xchg
cmp
call
mov
les
or
pop
adc
push
mov
adc
daa
mov
(bad)
push
xor
xor
pop
sbb
pop
pop
lea
and
push
shl
mov
mov
or
popa
push
mov
in
sub
pop
pop
pushf
mov
pop
jge
xchg
push
push
mov
icebp
nop
test
sub
xchg
xor
cld
adc
jle
adc
das
cmc
add
mov
pop
mov
xchg
mov
sbb
add
sahf
dec
and
add
int
fisub
dec
pop
sub
jo
ror
adc
sub
fisubr
or
sbb
rsqrtps
inc
es
dec
call
cmp
lea
inc
pop
bound
je
ins
mov
gs
and
int3
xor
xchg
adc
nop
or
pop
nop
and
(bad)
movs
shl
test
std
jp
inc
sub
mov
xor
mov
add
outs
sub
or
push
es
pop
inc
mov
sub
mov
mov
loopne
or
sub
mov
pop
bnd
inc
cmp
imul
imul
mov
cmp
or
ror
push
in
mov
push
xchg
or
adc
push
sub
aaa
or
fimul
xchg
mov
push
nop
add
mulps
add
sti
inc
push
dec
xor
push
add
in
repnz
and
adc
sub
push
push
add
mov
ins
call
adc
pop
cmp
push
loope
ins
pop
fdiv
push
or
or
imul
pop
nop
movs
mov
sub
dec
or
push
(bad)
adc
hlt
push
fyl2x
pushf
or
(bad)
adc
mov
lock
pop
sub
push
jb
(bad)
pop
les
cmp
ss
and
mov
and
or
std
adc
fsub
jecxz
and
adc
and
pop
sub
jl
aas
inc
fs
xchg
sub
in
jge
adc
mov
inc
adc
add
and
in
cld
lea
loop
adc
push
push
xor
sbb
sub
xchg
jb
adc
pop
(bad)
xchg
dec
loop
adc
pop
jnp
mov
adc
push
(bad)
or
(bad)
xchg
iret
in
test
pop
sub
movs
out
adc
nop
loope
pop
adc
dec
jnp
or
pop
xchg
push
loop
adc
jge
repnz
sub
lock
pop
adc
mov
repz
in
cli
sbb
call
nop
and
sub
scas
cli
jb
loop
mov
push
cmp
xchg
xchg
jb
mov
pop
push
pop
loop
dec
jnp
(bad)
in
xor
mov
adc
loope
pop
adc
mov
inc
jl
idiv
mov
adc
push
adc
push
and
lea
jo
sub
movs
mov
and
push
inc
nop
mov
js
test
push
adc
in
or
cmp
sub
adc
js
inc
push
in
inc
clc
enter
pop
test
xchg
jmp
ins
popa
push
push
push
repnz
mov
call
jo
or
fadd
adc
adc
push
sbb
fldenv
enter
nop
mov
cwde
iret
pop
xchg
bound
xchg
fimul
(bad)
adc
sbb
fsubp
int
adc
pop
adc
sbb
add
test
sbb
or
push
sub
mov
mov
nop
xor
repz
clc
call
retf
adc
xchg
out
not
mov
jns
and
push
stos
scas
in
adc
xchg
dec
push
mov
sub
inc
push
push
data16
or
test
rol
inc
cdq
sbb
daa
push
push
pop
(bad)
call
adc
pusha
test
(bad)
xchg
lds
xchg
adc
test
loopne
movs
mov
sbb
xor
mov
dec
inc
inc
mov
cmps
adc
sub
sub
mov
dec
mov
jecxz
ins
push
inc
dec
mov
adc
push
push
mov
mov
in
xchg
xchg
dec
out
and
nop
or
daa
push
push
push
mov
cld
xlat
call
mov
fcom
pop
mov
pusha
aas
xchg
sbb
in
cmp
and
sar
es
sbb
ret
cmps
adc
cmp
je
sbb
sbb
xor
stc
pop
pop
pop
movs
jmp
xor
ins
adc
loop
sbb
and
sub
add
sub
ins
and
xchg
adc
cs
xlat
add
add
hlt
and
or
xor
sbb
or
xchg
and
nop
(bad)
enter
xor
xchg
and
fs
xor
xchg
and
fs
js
je
jo
inc
ins
and
fs
xor
push
or
xchg
and
hlt
loope
movs
enter
xor
xchg
and
nop
(bad)
enter
xor
sbb
or
xchg
and
nop
in
call
sbb
dec
test
xchg
jo
adc
push
or
or
adc
nop
sbb
and
sub
sub
xor
mov
cmp
or
fstp
cmps
and
pop
ret
push
sbb
jbe
ret
pop
and
test
add
(bad)
or
jmp
pop
imul
mov
jle
push
xor
xchg
push
in
and
inc
and
js
sub
lahf
mov
sbb
fs
js
mov
test
cmp
add
push
adc
cmp
push
mov
sti
rcl
mov
xchg
lea
and
xor
pushf
cmc
xchg
or
or
push
mov
mov
mov
cmp
and
cmp
mov
fadd
je
add
sbb
(bad)
adc
lock
mov
movs
adc
idiv
xlat
sbb
aam
push
pop
retf
sub
xor
or
push
push
jecxz
dec
js
xor
jbe
or
cwde
imul
or
mov
call
xchg
jg
das
mov
cmp
rcr
sbb
or
pop
add
pop
nop
xor
shl
sahf
and
and
inc
inc
pop
mov
aam
cmps
add
call
xchg
nop
mov
add
pusha
add
xor
or
xor
sub
dec
jmp
aas
inc
sbb
(bad)
rcr
mov
in
inc
push
lea
jmp
mov
imul
add
cmp
inc
call
add
out
push
jecxz
inc
or
or
mov
dec
inc
aad
dec
adc
or
mov
dec
jno
arpl
dec
inc
xor
mov
adc
and
dec
add
add
dec
mov
mov
jmp
popa
pop
int3
adc
adc
and
push
inc
dec
adc
aam
or
nop
adc
pop
adc
hlt
adc
test
pop
mov
and
push
xor
push
popa
sub
and
sbb
xchg
sub
in
pop
adc
add
push
or
out
movs
xor
enter
or
adc
es
data16
(bad)
add
mov
cmp
repnz
aad
and
add
or
and
popa
inc
jno
or
push
or
lock
enter
lahf
or
or
test
adc
xor
adc
or
inc
test
or
inc
out
movs
inc
or
adc
pop
test
inc
cwde
xor
bound
imul
test
dec
lods
push
jno
les
mov
mov
movs
mov
dec
imul
adc
in
or
inc
pop
sub
dec
push
push
adc
xor
push
and
dec
sub
les
imul
push
adc
fwait
js
inc
loope
inc
or
or
int
cmp
sbb
adc
movs
arpl
xor
(bad)
or
and
dec
mov
scas
and
adc
xchg
dec
nop
xchg
mov
test
mov
mov
push
ins
inc
pushaw
mov
push
and
dec
dec
xchg
inc
and
or
dec
sub
sbb
mov
push
mov
pushf
inc
xchg
xor
shl
sbb
shl
xor
ret
or
retf
sbb
and
mov
and
mov
fwait
sub
adc
xor
xor
stos
popf
sub
xor
sbb
and
dec
je
outs
and
bound
adc
lock
fs
or
xchg
cmp
xor
mov
adc
lock
jno
sbb
or
mov
push
cmp
add
loopne
inc
inc
sbb
cmp
push
sub
or
pusha
mov
in
push
hlt
in
cli
imul
dec
daa
imul
and
dec
sub
inc
push
int3
inc
movs
adc
mov
sub
gs
pop
cmp
add
adc
sbb
add
adc
adc
pop
push
pop
movs
or
push
or
int3
xor
push
int
sub
gs
add
push
xor
imul
pop
or
call
leave
xchg
mov
mov
jns
cmp
dec
es
nop
or
inc
add
mov
data16
repz
(bad)
sub
das
add
or
and
popa
dec
jno
xchg
dec
lock
adc
or
icebp
sub
and
mul
mov
test
int3
or
mov
cmps
(bad)
xor
inc
mov
out
adc
and
cmps
or
inc
cwde
push
int3
inc
arpl
int3
sub
or
or
inc
xchg
mov
in
sar
xor
inc
jno
into
sbb
sbb
inc
inc
jb
ins
gs
call
jp
adc
js
cld
jo
out
push
xor
jecxz
cmp
jae
xor
dec
imul
push
push
inc
push
push
cs
loope
inc
or
pop
arpl
ins
retf
adc
push
outs
inc
dec
addr16
imul
outs
jb
pop
ins
adc
xchg
pop
ins
sbb
jae
jne
sbb
push
fs
es
jp
jo
arpl
(bad)
cdq
fs
adc
push
test
jo
into
jns
adc
shr
inc
push
inc
sbb
popa
pushf
inc
xchg
mov
xlat
std
daa
pop
sbb
test
adc
xor
sub
sar
sub
out
push
mov
xor
(bad)
iret
jae
jmp
xchg
adc
shufps
jne
frstor
jmp
cmp
push
add
ds
xchg
pop
dec
stos
jbe
or
jbe
imul
xchg
mov
inc
mov
xor
push
rcpps
fist
out
push
outs
and
inc
xchg
or
fistp
adc
inc
out
mov
inc
sbb
or
push
and
fiadd
cmp
dec
dec
les
xor
and
push
aas
ins
push
call
dec
sbb
sub
pop
outs
xor
mov
dec
inc
fs
adc
jnp
inc
mov
dec
nop
fistp
test
pop
adc
and
and
inc
adc
inc
cmps
adc
push
shl
add
dec
outs
outs
shl
inc
push
dec
int
and
and
nop
xchg
mov
cmp
dec
outs
dec
test
popa
movs
cmp
inc
stos
ja
sbb
dec
inc
inc
imul
es
call
dec
mov
sbb
inc
ret
mov
ja
xor
push
out
sub
jmp
ss
imul
loop
mov
sub
jmp
inc
and
dec
jmp
nop
push
inc
and
fiadd
adc
push
push
push
dec
pushf
test
popa
or
ins
pop
(bad)
int3
dec
lahf
add
mov
add
js
in
arpl
pop
ins
jae
gs
or
ins
or
popa
data16
pop
or
loop
jns
or
inc
push
loop
push
push
sub
mov
or
test
jmp
jo
and
jno
popa
or
mov
addr16
and
ja
shl
dec
push
test
inc
or
outs
outs
sub
or
dec
dec
mov
outs
xchg
cmp
in
int
into
xor
fimul
push
jns
les
popa
enter
and
inc
pop
in
rcl
jbe
push
or
or
ror
and
push
jo
inc
pop
retf
pop
cmp
fwait
jg
adc
icebp
jp
imul
mov
or
clc
out
push
jmp
adc
leave
mov
adc
mov
les
inc
gs
outs
nop
mov
or
push
fld
jne
mov
nop
sub
pop
mov
jae
in
adc
or
jo
dec
(bad)
push
das
push
ja
js
aas
jns
add
fs
aad
jp
xchg
mov
push
jp
retf
push
inc
or
and
inc
inc
ins
loopne
push
icebp
cmp
gs
dec
(bad)
sub
pop
jecxz
stos
cwde
push
and
and
hlt
adc
pop
ret
fcomp
and
bound
cmp
es
push
xchg
lods
es
inc
test
and
shr
jo
pop
addr16
xor
aaa
cmps
mov
scas
retf
aas
mov
idiv
push
mov
pushf
clc
dec
and
inc
test
pop
dec
imul
cmp
fisubr
push
sbb
push
adc
stc
adc
and
je
ins
mov
inc
add
push
push
inc
inc
mov
dec
push
js
dec
dec
ins
adc
int
cld
dec
jo
pop
cmp
push
xchg
push
inc
je
cs
mov
in
xchg
xor
fmulp
arpl
fcom
xor
fsub
scas
sahf
data16
add
push
iret
cmp
mov
mov
mov
mov
pop
stc
push
repz
inc
ss
in
mov
(bad)
jbe
gs
nop
pop
jmp
sbb
aas
dec
ins
dec
sbb
cwde
mov
push
addr16
pop
or
popa
(bad)
mov
test
cmp
popf
or
dec
dec
fiadd
push
jle
push
daa
sbb
and
ins
xor
dec
adc
xchg
js
and
test
inc
mov
es
ja
push
xor
pop
pop
cmp
fdiv
cmps
mov
mov
jp
pop
jae
push
cmps
pop
push
dec
arpl
scas
or
push
ret
push
out
push
jmp
sbb
jbe
aad
and
inc
clc
add
push
dec
or
jns
sub
ret
sti
pop
cmp
push
pop
test
popa
push
lods
stos
dec
or
mov
dec
je
jmp
test
dec
dec
lds
jno
cmp
imul
mov
push
adc
arpl
mov
ins
dec
cmp
stos
dec
aam
lods
cmp
jmp
test
js
or
pop
stc
or
cs
jecxz
sub
arpl
and
pop
stos
dec
into
jp
pop
cli
dec
int
and
dec
retf
loop
enter
jmp
adc
inc
add
lahf
adc
xchg
pop
push
mov
xchg
int3
ja
dec
push
data16
or
sbb
jae
shl
jl
mov
aad
retf
dec
jno
mov
inc
jbe
dec
addr16
mov
sbb
dec
mov
mov
lahf
popf
jbe
mov
icebp
inc
aad
sub
mov
int3
push
dec
mov
scas
pop
sbb
and
pop
pop
jb
xchg
in
jp
mov
and
lods
out
das
xchg
dec
sti
loop
sbb
pop
pop
(bad)
ret
pop
ficomp
push
pop
pop
jno
(bad)
push
jmp
mov
mov
xchg
test
push
fbld
outs
addr16
(bad)
icebp
push
jo
jnp
iret
(bad)
push
inc
(bad)
jle
enter
mov
jmp
lds
dec
cmps
xchg
inc
xor
(bad)
push
mov
call
jo
ja
dec
mov
pop
adc
push
cdq
in
xchg
cmp
mov
push
jae
ja
inc
pop
mov
daa
push
retf
or
nop
adc
dec
test
sbb
sbb
dec
lods
inc
jo
push
pop
mov
mov
es
adc
push
clc
arpl
(bad)
sti
lea
outs
jns
xchg
repnz
add
loope
stos
mov
add
adc
dec
mov
cmp
ror
push
cmp
mov
int
mov
push
push
xchg
mov
(bad)
and
cmp
jg
imul
scas
jb
cmp
or
ror
and
dec
xchg
add
dec
jecxz
movups
push
mov
dec
push
sbb
mov
jbe
push
imul
xchg
inc
push
inc
add
sar
sub
inc
adc
loopne
sbb
or
add
scas
sbb
add
xchg
push
add
stc
pop
add
add
jo
cmps
adc
jae
adc
or
jo
sub
dec
mov
icebp
sbb
test
fisubr
cs
scas
mov
enter
test
push
cwde
mov
xchg
call
add
daa
loopne
mov
push
jb
push
push
or
push
add
je
or
gs
adc
add
call
jmp
add
xor
call
xor
das
lock
int3
pop
push
mov
scas
sbb
inc
push
or
adc
push
or
xlat
inc
jg
cld
push
add
adc
cli
inc
repnz
and
out
xchg
sahf
push
push
adc
pushf
or
adc
push
pop
call
shr
or
lock
or
icebp
mov
cld
pop
cmp
inc
jns
add
cmp
jne
sbb
gs
add
pop
push
mov
mov
enter
adc
or
mov
cmp
mov
or
pop
mov
jnp
push
cli
mov
and
sbb
ret
ss
and
fmul
sti
xor
(bad)
jmp
jb
into
mov
sbb
fadd
inc
jne
jno
jge
push
push
mov
(bad)
pop
repz
push
mov
fs
or
bound
call
es
pop
mov
sbb
sbb
cmp
pop
ins
ss
add
add
imul
aad
push
imul
(bad)
jg
push
push
or
push
int
adc
or
pushf
aas
add
push
int
dec
adc
mov
mov
push
pop
loop
mov
repz
push
loope
mov
jo
das
mov
xor
cmp
push
add
push
adc
test
idiv
push
aaa
dec
ret
int3
pop
sbb
sbb
push
jmp
sbb
or
or
mov
popf
clc
ror
dec
lods
mov
xor
or
test
fs
or
test
or
push
push
pop
cld
test
ret
fld
mov
movs
adc
push
ret
and
lea
jl
fsubr
or
or
inc
inc
push
pusha
mov
mov
push
add
cmp
and
add
xchg
jbe
stc
or
inc
enter
stos
xchg
sub
add
and
bnd
inc
lods
dec
inc
mov
jecxz
mov
icebp
xor
jbe
jg
mov
(bad)
dec
test
sub
dec
or
mov
test
add
inc
xor
push
dec
inc
push
shl
out
sub
pop
fmul
imul
bound
outs
cmp
jns
(bad)
cld
out
dec
xor
inc
aaa
add
and
arpl
sub
push
outs
pop
jmp
ss
jp
jns
inc
and
lods
xor
fs
inc
scas
test
inc
cmp
mov
ds
mov
mov
or
es
cli
movs
xchg
adc
jae
cli
popf
ins
in
and
pop
pop
rcr
sbb
xor
popf
xor
cmp
lahf
addr16
mov
xchg
inc
retf
xchg
cmps
faddp
in
cmc
jmp
sbb
inc
pop
dec
lahf
xchg
xchg
sub
jle
loopne
add
movs
iret
int3
sahf
les
test
stos
lahf
jo
sbb
test
dec
sbb
ret
or
(bad)
mov
(bad)
cmc
nop
add
pause
mov
add
mov
loope
jecxz
lds
mov
adc
and
or
push
cmp
hlt
pause
mov
jl
push
(bad)
mov
inc
nop
jo
jle
test
into
sbb
pusha
outs
inc
pop
xchg
or
cmp
mov
push
add
mov
test
jmp
inc
jbe
mov
dec
and
dec
cmp
or
and
inc
hlt
or
sbb
dec
dec
pop
xchg
jo
test
mov
dec
fcom
add
push
leave
or
cmp
mov
cmp
or
xchg
cmp
dec
fcomp
mov
push
jne
push
jns
sbb
jmp
mov
nop
les
sub
sbb
adc
in
xor
add
and
movs
enter
jb
push
and
test
loopne
cld
or
and
sbb
mov
loopne
cmp
mov
xor
mov
iret
mov
in
call
nop
sub
or
pop
retf
cmp
pop
cmp
and
jo
fcom
fsubp
stc
sbb
jle
push
sbb
test
daa
add
in
rol
repz
test
ja
call
mov
fs
sti
push
nop
xor
pop
push
add
addr16
or
push
push
push
and
icebp
dec
mov
xchg
gs
adc
or
add
sbb
add
or
pop
and
dec
or
or
cdq
sbb
movaps
cmp
or
pop
sub
adc
adc
adc
sbb
sub
inc
in
xor
cdq
sbb
or
pusha
push
pop
jl
ins
sbb
jo
mov
lods
push
cmps
xor
mov
or
and
xor
and
dec
sahf
adc
jb
movs
cdq
jo
sbb
scas
mov
xlat
test
lods
or
add
int3
sbb
xchg
enter
enter
mov
in
cmp
xchg
cwde
inc
or
cld
and
fs
or
mov
adc
xchg
shl
inc
nop
adc
inc
and
inc
or
mov
sub
sbb
test
sbb
xchg
sbb
dec
inc
js
mov
sub
dec
sbb
inc
retf
add
scas
add
fbld
adc
inc
sub
inc
push
add
add
cmp
and
xchg
scas
pop
mov
inc
xor
add
xor
cmp
das
int3
(bad)
call
bound
jo
lahf
popa
lahf
je
mov
and
outs
cmc
xchg
push
dec
or
dec
jno
movs
adc
dec
inc
pshufw
or
add
xor
cmp
adc
dec
out
outs
stos
aad
push
lahf
jle
addr16
push
dec
sub
aaa
xchg
stc
sbb
or
push
popa
arpl
popf
stc
ins
or
cmp
xchg
jb
cmp
sbb
mov
inc
xor
pop
jbe
imul
cmps
arpl
and
outs
sbb
push
sbb
xor
pusha
xlat
stos
arpl
inc
mov
add
and
jno
xor
pop
clc
jb
jo
mov
shl
pop
fs
inc
sub
cmp
mov
xchg
sbb
aaa
rep
loop
(bad)
lods
sub
sbb
fild
pop
sbb
ins
pop
push
push
mov
ins
push
movs
das
je
das
retf
mov
lahf
push
mov
pop
inc
push
ins
call
imul
jne
sub
pusha
sub
sub
inc
ret
outs
addr16
or
cmp
sub
push
xchg
push
scas
repnz
push
outs
mov
sub
pop
pop
retf
aad
dec
and
cmp
sub
dec
loope
dec
pop
addr16
mov
or
cmp
not
scas
jb
stos
adc
adc
in
adc
inc
in
(bad)
sahf
das
pop
or
jbe
and
lea
push
push
int3
add
and
xor
push
push
mov
add
adc
sbb
xchg
ficomp
movs
pop
mov
cmp
in
dec
cmp
add
push
stos
pop
mov
les
mov
cmp
push
movs
or
rol
or
add
hlt
jne
adc
add
jb
nop
mov
add
push
mov
aam
push
test
sub
sahf
or
and
push
call
pop
cmp
sbb
test
adc
push
inc
adc
test
mov
aaa
inc
pop
inc
pop
add
out
ret
clc
xchg
shr
mov
sub
mov
jb
sbb
and
std
mul
mov
mov
and
inc
push
sbb
and
sbb
xor
pop
xor
sub
fst
mov
aas
jl
inc
add
sbb
ret
sti
sub
fwait
add
dec
add
test
xor
sbb
sub
push
fiadd
cmp
mov
jne
js
sbb
or
dec
push
cmp
xor
add
sub
sub
aad
in
adc
stc
adc
jmp
(bad)
cmp
clc
call
push
inc
data16
dec
xor
push
or
xchg
and
adc
mov
and
adc
leave
push
push
push
std
dec
jge
or
mov
cli
and
cmp
mov
test
push
or
push
sub
push
cli
mov
(bad)
push
loope
dec
(bad)
and
lock
fdiv
add
mov
mov
sub
cmp
std
push
sbb
add
mov
sub
jbe
cmp
mov
cmp
sub
ins
push
and
retf
jb
cmp
out
sbb
call
dec
add
jae
movs
cmp
inc
jae
push
mov
sub
jo
push
push
dec
nop
mov
cdq
or
call
dec
jmp
inc
xchg
sbb
and
adc
pop
out
and
mov
dec
push
fwait
and
into
mov
daa
sbb
add
enter
add
dec
pop
test
adc
retf
xor
adc
dec
xchg
add
xor
shr
push
add
das
fmul
ret
pop
and
shr
(bad)
dec
or
xor
jmp
or
add
and
jb
test
sbb
sbb
inc
push
jmp
push
pop
shl
push
call
sub
push
inc
mov
jl
adc
push
int3
xchg
test
inc
ret
pop
scas
or
movs
fs
mov
push
call
or
pop
sub
cwde
arpl
push
mov
cs
add
cmp
push
cwde
xchg
mov
dec
pop
inc
ds
dec
push
add
add
icebp
test
je
mov
inc
cmp
(bad)
adc
repz
or
into
cmp
inc
mov
mov
jmp
popa
add
cmp
ja
dec
lds
imul
or
(bad)
call
mov
ret
jb
aas
add
jg
sub
push
mov
jne
dec
adc
or
add
push
push
call
cld
clc
push
mul
shl
repz
cmps
push
xchg
sbb
mov
xor
and
push
fs
and
mov
cmp
inc
cmp
adc
push
and
and
push
adc
sbb
stc
add
stos
repnz
jbe
jge
push
dec
inc
mov
mov
dec
rcl
in
mov
or
ret
xchg
or
mov
ds
jmp
out
push
cwde
xchg
lea
push
mov
shl
stos
hlt
sahf
push
js
adc
retf
push
je
mov
mov
and
dec
cli
adc
ja
add
mov
nop
inc
sbb
jbe
jno
sub
cmp
add
inc
add
or
ror
inc
repz
mov
dec
cdq
mov
ins
jns
adc
and
sahf
or
push
cmp
test
dec
dec
sbb
mov
push
mov
dec
xor
nop
push
mov
adc
inc
dec
stos
rol
or
pushw
je
call
mov
dec
cmp
or
movs
xchg
and
and
clc
dec
pusha
jmp
std
adc
xor
imul
sbb
dec
sub
and
sahf
or
add
ret
jg
jecxz
inc
sub
push
clc
or
inc
xor
xchg
ins
xchg
stos
mov
sbb
imul
dec
pop
aas
xchg
add
adc
dec
inc
sub
sbb
imul
jl
nop
mov
mov
add
jb
mov
test
push
and
push
lea
popa
mov
jge
add
shl
enter
sub
and
jmp
(bad)
or
sub
mov
mov
or
jnp
push
lea
mov
sub
std
dec
push
adc
xor
xor
pop
adc
jecxz
sub
mov
pop
inc
retf
lea
adc
ret
je
pusha
sti
adc
hlt
nop
and
add
and
cmp
sbb
add
inc
es
repz
or
and
dec
shl
sub
pop
xor
dec
dec
loope
push
pop
dec
popf
cmp
dec
jmp
dec
int3
xchg
mov
cmp
adc
call
std
or
imul
stos
push
imul
jg
inc
and
dec
xchg
std
adc
adc
pop
je
int3
jmp
jl
cld
imul
push
jbe
call
cwde
jle
pop
ja
(bad)
and
xchg
sbb
es
lods
pop
cmp
addr16
test
jne
cmp
test
dec
mov
push
push
mov
mov
push
add
or
push
pop
or
push
pop
add
pop
mov
pop
pop
adc
call
dec
or
adc
rcl
or
push
adc
inc
or
pop
out
mov
add
lea
push
out
adc
pop
pop
es
inc
inc
pop
adc
lds
icebp
lods
xlat
and
clc
adc
repz
cwde
xchg
push
jmp
push
mov
adc
fist
mov
or
mov
xchg
and
sbb
xlat
add
(bad)
nop
push
loopne
sub
adc
add
sbb
pop
sbb
jp
pop
push
jmp
push
aaa
je
xchg
ds
lea
je
mov
push
dec
test
cmp
add
adc
daa
push
or
inc
jl
xor
sti
push
inc
shl
add
add
loopne
cmp
mov
shl
je
jb
les
or
mov
mov
mov
jae
pop
push
and
cmp
pop
je
stc
and
and
mov
sahf
mov
push
movs
sub
xchg
push
scas
pop
add
scas
call
dec
cld
sahf
mov
mov
adc
jae
jmp
adc
xlat
push
in
fisubr
cmp
jmp
(bad)
push
or
inc
int3
or
and
gs
loopne
and
fcom
clc
imul
ss
sub
add
push
nop
sub
fisub
jmp
push
cmp
jb
test
je
and
jns
jge
sbb
cli
xor
div
xor
and
test
add
cdq
sub
cmp
jb
ds
sub
sub
ret
es
inc
nop
sahf
jns
push
inc
movs
sub
retf
test
adc
fcmovu
inc
in
jns
jg
adc
(bad)
cld
int
sub
ret
push
add
shl
je
mov
inc
je
inc
movs
(bad)
jne
jmp
(bad)
loop
lsl
xor
xor
push
rol
mov
xor
xor
in
xchg
(bad)
and
and
movups
add
int
jg
mov
ret
adc
sub
test
and
movs
mov
xor
addr16
push
retf
push
jge
mov
sbb
dec
call
and
imul
call
or
call
leave
mov
mov
sub
and
jl
add
sbb
push
or
mov
leave
jne
in
out
bound
inc
cmp
aam
aas
call
cmp
in
jmp
inc
push
push
cmps
dec
dec
or
sbb
sbb
cmp
std
cmp
push
pop
push
push
mov
call
ins
push
adc
jns
add
jmp
sbb
adc
sbb
cmps
xchg
sbb
pop
ret
and
xchg
(bad)
pop
adc
dec
sbb
sbb
and
mov
add
cdq
cs
sbb
cmp
ror
jmp
xchg
test
xchg
sbb
shr
das
xchg
or
pop
and
loopne
shl
mov
mov
cmp
xchg
nop
sbb
dec
add
call
fistp
mov
test
scas
cs
stos
lahf
ret
jmp
adc
jb
hlt
je
push
call
adc
dec
inc
repnz
and
inc
adc
add
test
arpl
mov
cmp
fstp
push
and
repnz
push
movs
jmp
and
or
(bad)
aam
mov
adc
cmp
je
push
sub
in
loop
pushf
test
mov
jne
or
mov
push
gs
xor
adc
inc
(bad)
jmp
and
sahf
jb
test
push
lea
pop
or
nop
pop
add
jne
movs
sbb
or
test
outs
dec
inc
clc
mov
xchg
mov
test
repnz
fisub
pop
push
push
imul
pop
cmps
add
imul
sbb
dec
push
add
(bad)
inc
lahf
push
pop
mov
nop
repz
sbb
add
xor
push
dec
xor
dec
lahf
xor
sbb
sub
xor
icebp
scas
je
ins
xchg
pop
lea
cmp
xor
or
stc
push
push
dec
stc
or
test
nop
test
xchg
loopne
pusha
dec
cmp
adc
scas
add
test
push
enter
call
ror
pop
add
je
adc
adc
jl
push
es
push
lock
mov
mov
outs
or
add
cmp
jb
out
sub
add
rol
and
add
mov
lea
call
repz
adc
inc
sbb
test
pop
mov
ss
inc
js
sahf
pop
cmp
jae
jo
mov
movs
ret
and
aas
call
inc
loopne
and
out
call
or
inc
adc
(bad)
(bad)
leave
mov
mov
inc
test
aas
add
dec
push
repz
xor
les
xor
jae
push
bound
cmp
and
rol
sub
(bad)
push
push
or
jmp
lods
mov
and
mov
dec
xor
inc
test
je
adc
add
dec
jmp
sar
lock
lea
mov
and
repnz
or
mov
adc
into
test
xchg
ret
sahf
ficomp
inc
ror
sar
js
add
pop
inc
nop
pop
pushf
inc
or
test
push
cmc
ret
cmp
aaa
test
add
arpl
push
push
add
cmp
(bad)
sti
sub
push
pop
test
xor
cmp
dec
xchg
pushf
xlat
xchg
(bad)
xor
shl
dec
(bad)
xchg
retf
push
adc
mov
or
mov
dec
mov
and
test
test
nop
mov
add
nop
inc
pop
jns
sbb
push
push
jne
inc
ins
add
ss
jne
cwde
fadd
test
jl
stos
cmp
loop
or
stos
xor
xor
out
jae
aad
aas
mov
cmps
xor
add
add
loop
movs
mov
or
pop
add
adc
dec
in
push
xchg
or
or
inc
push
inc
mov
pop
mulps
and
xor
mov
adc
and
push
xchg
int
jns
mov
pop
adc
mov
dec
jns
adc
loop
pop
cmp
dec
dec
mov
test
inc
cmp
clc
sub
add
and
add
push
and
stc
mov
rol
lds
sbb
or
xchg
and
arpl
cld
sub
sub
or
or
ret
mov
dec
or
lea
cmp
test
jno
dec
hlt
les
and
xchg
in
xor
xor
and
mov
hlt
add
and
or
retf
adc
jb
mov
out
mov
pop
push
pop
lock
lock
dec
and
mov
xchg
movs
arpl
lea
fsubr
ds
adc
rol
push
cmps
sub
jg
add
sub
or
mov
cmp
inc
push
int
int3
inc
ins
and
sub
mov
mov
lock
sub
les
mov
mov
add
(bad)
retf
sbb
adc
sbb
adc
lock
push
add
pop
inc
ins
icebp
pop
push
in
inc
mov
call
js
shl
mov
and
loop
int3
stc
or
jb
rep
jmp
adc
mov
add
or
in
retf
and
push
inc
jmp
mov
nop
adc
(bad)
es
or
mov
and
mov
mov
add
inc
out
or
scas
adc
int3
mov
dec
ret
cs
int3
and
aaa
inc
inc
jmp
xor
sbb
adc
or
add
cld
test
hlt
or
sub
ror
jmp
and
jmp
and
jmp
or
lock
clc
or
or
mov
movs
dec
pop
ret
xchg
sahf
sbb
mov
xchg
mov
sub
jno
mov
jl
xchg
jb
and
sub
icebp
ror
neg
xchg
data16
cmps
lock
nop
adc
mov
inc
fadd
ror
call
xor
cmp
gs
mov
or
jnp
cdq
and
mov
push
out
xchg
jle
mov
mov
xchg
sub
dec
lods
loop
test
pop
retf
pop
data16
mov
inc
xchg
pushf
mov
(bad)
stos
push
adc
jmp
and
jmp
and
jmp
jns
pop
and
int3
or
or
xchg
cwde
call
mov
adc
mov
add
add
or
xchg
adc
cwde
sbb
mov
call
mov
dec
dec
ja
dec
popa
jne
xor
les
cmp
push
call
rcr
test
add
sbb
push
push
and
push
push
jecxz
(bad)
movs
mov
xor
movs
enter
sbb
fild
cmp
sbb
mov
test
push
call
dec
push
(bad)
or
push
jmp
(bad)
call
add
xchg
pop
int3
add
ret
inc
mov
or
call
mov
add
pop
push
and
xor
call
or
out
adc
clc
mov
xchg
xchg
adc
ja
ins
dec
pop
arpl
adc
call
icebp
cmps
pop
nop
xor
lahf
lods
call
mov
daa
(bad)
push
or
(bad)
push
out
jo
popf
pop
fsub
inc
pop
pusha
pop
jo
or
push
jno
sub
lea
mov
mov
inc
dec
xor
popf
sbb
add
inc
sbb
push
adc
ret
sbb
pop
jmp
push
inc
cmp
push
nop
and
jnp
pop
add
mov
dec
sbb
pop
sub
mov
inc
pusha
sub
pop
pop
ret
lds
xor
je
out
(bad)
push
inc
or
cld
call
cwde
in
test
or
dec
cld
lea
mov
inc
jae
jnp
nop
ret
hlt
jbe
mov
pop
mov
imul
test
test
and
dec
push
call
cdq
add
push
nop
sbb
int
outs
and
adc
call
pushf
lods
or
jns
sub
in
xor
jmp
mov
sbb
mov
push
sbb
lds
cmp
sbb
push
or
and
jns
and
shl
push
cmp
or
sub
add
jae
jo
mov
sbb
std
push
lds
enter
shl
outs
dec
mov
push
(bad)
cs
pop
sub
je
sub
dec
pop
inc
add
cli
mov
shl
add
test
adc
stos
(bad)
and
push
rep
fnsave
dec
dec
sub
pop
mov
dec
mov
jnp
(bad)
mov
out
fdivrp
pusha
mov
xchg
mov
out
mov
jae
adc
add
sub
cmp
pop
push
push
xor
pop
into
adc
cmp
mov
pop
cld
sub
shr
xchg
iret
imul
mov
std
pop
add
dec
idiv
leave
adc
push
shl
xor
adc
xor
hlt
dec
push
cld
or
ficom
lahf
(bad)
pop
repnz
loope
add
std
inc
pop
mov
cmp
js
ret
jae
fdivr
xchg
sbb
shr
or
push
add
and
(bad)
adc
jnp
lods
cld
lea
dec
loopne
mov
das
pushf
mov
push
or
pop
adc
add
and
bound
pop
add
inc
hlt
mov
sub
xchg
call
xor
pop
sbb
clc
aad
xchg
and
sub
and
mov
cmp
jbe
add
ror
and
arpl
mov
sti
add
or
add
out
not
and
dec
add
xor
push
pop
sbb
inc
bound
call
out
lock
and
pop
ficom
xlat
jmp
shr
sub
ins
pop
gs
mov
jo
sbb
dec
mov
push
push
mov
dec
paddd
mov
cmp
push
mov
in
or
inc
outs
adc
scas
jg
sbb
adc
push
enter
jmp
and
shl
cmp
adc
dec
and
test
push
aaa
mov
in
xor
shl
add
lods
cmps
pop
sub
or
(bad)
xchg
and
xor
push
or
cmp
xor
fisub
and
dec
inc
or
call
pusha
add
pop
adc
or
cmc
imul
shl
test
mov
sub
test
add
push
enter
pop
dec
adc
push
aam
adc
pusha
aad
lahf
stos
into
or
xor
add
dec
ins
or
das
mov
mov
push
inc
jnp
sub
int
add
fnstcw
mov
xadd
add
pop
add
jge
stos
adc
push
or
adc
jmp
inc
xchg
push
shr
pop
mov
das
adc
retf
and
mov
pop
out
sbb
iret
jne
add
rcr
sbb
jb
adc
aas
mov
test
daa
inc
adc
out
in
(bad)
dec
jae
xlat
adc
pop
inc
sub
es
or
out
push
push
call
test
(bad)
je
push
in
ficomp
pop
leave
mov
inc
test
int3
pextrw
sub
out
cs
enter
pop
jmp
sti
jl
inc
movs
mov
aaa
imul
add
fsubrp
push
cmp
add
into
pop
cmps
xchg
test
mov
fwait
pop
pop
js
cmp
xlat
je
lea
jmp
or
mov
jne
arpl
add
pop
test
jl
shl
or
jmp
mov
(bad)
stc
mov
sub
pop
icebp
cmps
pop
(bad)
pop
dec
add
jbe
cwde
or
and
add
call
mov
adc
rcr
cmp
hlt
in
push
and
clc
or
cvttps2pi
jp
ss
and
pop
jmp
sub
adc
and
imul
sbb
cdq
inc
sub
ins
rol
jp
cmp
jge
mov
sbb
mov
loope
inc
stos
jl
xchg
rcr
inc
sahf
push
in
push
mov
sahf
pop
shl
inc
dec
sub
sub
es
cmp
div
mov
rcl
rcl
jmp
das
sub
or
and
jnp
pop
lea
inc
or
sub
mov
in
add
xchg
xor
repz
mov
inc
add
mov
lea
ds
push
fsub
and
lea
lea
add
or
add
cmp
jne
jo
mov
jo
add
sub
push
xchg
push
movs
adc
(bad)
je
mov
sub
xchg
movs
inc
or
loope
mov
inc
daa
xor
mov
mov
add
sub
push
mov
test
mov
add
cli
daa
mov
test
lds
call
xchg
add
and
sti
inc
loope
push
and
xor
mov
loopne
dec
ret
cmp
imul
stc
xor
and
or
pushf
sbb
pop
sti
xchg
shl
fnstsw
push
cmp
dec
mov
rcl
jmp
jg
daa
cmp
ja
hlt
inc
retf
lock
push
repz
jbe
(bad)
mov
push
out
jmp
sub
and
dec
mov
retf
xchg
jae
test
xchg
mov
adc
inc
nop
xor
mov
mov
inc
inc
cmps
enter
shl
add
adc
mov
not
and
retw
call
jmp
sbb
and
and
dec
shl
and
push
sub
inc
sub
aad
mov
pop
and
or
scas
mov
jne
push
in
sub
xchg
mov
aaa
outs
aam
cmp
mov
shl
or
xchg
sbb
adc
ret
xor
adc
stos
in
aaa
mov
cmp
setge
ret
shl
mov
dec
dec
sahf
test
jecxz
in
xchg
dec
test
cmp
clc
jae
or
inc
cmp
(bad)
jmp
jns
push
fdiv
mov
or
cwde
mov
(bad)
jmp
xchg
sub
dec
xor
jns
inc
cmp
add
shl
and
push
retf
stos
push
jb
mov
or
nop
cmp
push
lds
mov
and
mov
push
jmp
or
fs
push
add
dec
jp
lods
test
lar
or
imul
pop
(bad)
jbe
and
push
outs
out
popf
add
sub
test
jge
mov
lods
mov
add
sub
jns
cmp
es
inc
and
inc
icebp
or
mov
xchg
or
adc
stc
cmp
(bad)
je
jle
or
jg
test
mov
push
cmp
jbe
or
adc
div
aaa
jmp
test
jne
xor
mov
jne
(bad)
cmp
jb
lahf
mov
or
and
push
call
clc
add
sbb
addr16
dec
or
sar
cs
add
mov
add
xor
adc
pcmpeqw
popa
in
or
and
push
mov
call
pop
push
bound
daa
das
mov
adc
or
sbb
adc
(bad)
mov
mov
cmp
cli
xor
movmskps
clc
retf
add
pop
add
adc
mov
jno
adc
inc
int
adc
jb
sub
enter
adc
clc
push
test
jns
adc
jl
dec
push
adc
lock
dec
cdq
es
sub
jb
inc
pop
sub
inc
and
sub
mov
popf
push
xchg
sbb
or
cmp
pop
or
(bad)
and
call
inc
(bad)
xor
sub
push
out
loopne
and
cmp
jns
or
movs
fiadd
push
ror
loopne
ficom
stos
mov
jne
jne
push
adc
cmp
mov
mov
jle
mov
mov
hlt
gs
sbb
jmp
adc
inc
fdiv
and
jecxz
rcl
jne
(bad)
mov
aaa
cmp
jae
mov
cmp
repnz
shl
push
inc
lods
sub
jbe
cmp
add
lea
mov
and
xor
cmps
ret
fisubr
ins
sbb
mov
push
sbb
arpl
fidiv
sub
ret
and
lea
out
mov
sti
cmp
cmp
lea
nop
add
add
mov
inc
cmps
jae
sbb
adc
mov
or
mov
fnstsw
add
cmp
(bad)
lea
adc
repz
mov
cmp
pop
int3
pop
xor
add
inc
inc
jmp
movs
jae
dec
nop
dec
mov
mov
aas
push
or
cmp
sbb
jmp
inc
mov
jne
call
sbb
jae
not
mov
mov
in
fidiv
inc
movs
pop
call
(bad)
sbb
sahf
mov
sbb
stos
adc
repz
mov
xchg
ret
daa
adc
jae
sbb
or
add
jmp
push
(bad)
rol
in
cmps
jo
mov
lods
ror
mov
push
mov
inc
lock
or
pop
jae
mov
cwde
shl
loop
outs
pusha
int
inc
shl
push
shr
pop
js
test
cli
imul
mov
sub
rcr
xor
mov
xchg
lods
pop
cmp
inc
cmp
mov
add
sbb
or
aad
push
mov
stc
mov
adc
or
or
push
push
xor
or
push
jno
les
pop
mov
add
enter
sub
jne
pop
mov
adc
or
(bad)
push
push
push
jmp
or
ret
sub
lods
xchg
or
mov
push
cmp
not
jmp
in
cdq
cmp
mov
movhps
add
inc
lock
push
and
xor
or
jmp
stc
or
push
or
dec
inc
test
jmp
xchg
adc
push
or
sub
adc
jmp
ret
add
(bad)
adc
push
and
retf
push
aaa
xor
xchg
imul
mov
sbb
and
add
adc
sbb
jmp
push
xchg
sbb
sbb
push
ins
xchg
or
cmp
sahf
sub
icebp
test
(bad)
arpl
mov
add
adc
jmp
mov
fimul
inc
pop
fmulp
or
sbb
out
daa
mov
push
pop
(bad)
shr
test
das
pop
xchg
outs
adc
ss
jmp
adc
jge
push
sahf
or
jge
icebp
mov
push
aam
pop
and
jnp
adc
mov
pop
sub
jmp
fwait
jae
xor
out
ss
adc
push
add
mov
jge
mov
dec
push
or
call
dec
fidivr
repnz
aad
or
iret
ds
push
xor
std
mov
sbb
popa
jmp
fs
pop
data16
ret
std
test
scas
sbb
push
or
push
jge
dec
pop
or
lods
dec
lahf
sbb
fs
push
mov
popa
out
pop
push
xchg
ret
add
or
(bad)
rol
add
or
push
loopne
shl
adc
or
pop
test
xor
imul
stc
xor
shl
icebp
iret
stc
(bad)
call
and
sbb
pop
adc
(bad)
cmp
add
pop
pop
dec
pop
movs
pop
inc
adc
cmp
adc
cmp
and
out
call
fcom
push
and
jmp
mov
(bad)
jo
pop
std
(bad)
cld
and
dec
add
lods
xor
loop
ja
(bad)
imul
xor
inc
cmp
push
cmp
inc
or
cmc
icebp
dec
adc
movups
mov
call
sub
outs
add
mov
sbb
mov
or
sub
jmp
inc
dec
sbb
ret
push
shl
pop
push
mov
jecxz
es
(bad)
and
aad
enter
retf
dec
inc
dec
inc
pop
sbb
cmp
add
je
dec
and
shl
pop
in
cmp
jo
call
mov
xor
or
cdq
sub
or
div
pusha
pop
or
popa
aam
inc
data16
(bad)
or
mov
and
dec
dec
scas
inc
pusha
jbe
cwde
popa
and
sbb
sub
pusha
push
mov
arpl
bound
xor
dec
fwait
sbb
int3
push
cmps
pusha
mov
xor
movs
xor
sub
inc
hlt
cld
mov
das
or
adc
daa
sub
pusha
pop
stos
and
inc
or
and
pusha
rcl
pusha
jno
fs
or
jmp
shr
mov
pop
mov
mov
punpckldq
adc
outs
lods
and
les
cmp
aad
sahf
or
nop
or
std
mov
or
pusha
sbb
jbe
shl
mov
inc
xor
jmp
jge
mov
push
add
mov
adc
popa
xor
mov
push
adc
imul
mov
scas
dec
or
mov
adc
or
push
xor
cmp
jne
fsub
pushf
mov
clc
cmp
je
fdiv
sbb
pop
push
in
mov
jmp
out
mov
mov
pop
mov
je
push
call
in
add
mov
push
push
adc
aam
data16
daa
adc
jp
jmp
cmp
or
jp
add
adc
adc
jp
adc
pop
mov
and
je
xchg
sub
inc
mov
push
aas
and
je
and
jne
push
loope
ret
data16
and
cmp
test
out
xchg
cmp
pop
cli
push
push
sbb
fs
push
test
ficom
or
jne
je
jmp
and
inc
push
ret
nop
mov
lods
or
or
pusha
adc
push
test
adc
cmp
add
pop
xchg
or
imul
sbb
repz
dec
jmp
fsubr
mov
rcl
pop
cmp
inc
sbb
inc
(bad)
repnz
dec
jo
pop
or
inc
dec
mov
sbb
cmp
push
mov
pop
mov
rol
call
jmp
fiadd
dec
push
or
sahf
les
push
call
or
mov
mov
jl
add
add
cmp
int3
lock
add
arpl
bound
and
add
mov
jge
push
mov
mov
cli
aas
js
sbb
stos
push
lods
dec
(bad)
test
push
inc
daa
push
mov
mov
aad
pop
mov
cmps
std
mov
push
inc
(bad)
ds
es
in
inc
add
jb
jo
outs
retf
or
xor
add
cs
sub
pop
sbb
js
xor
sbb
ins
sub
cmp
pop
bound
mov
loopne
cmps
pusha
test
adc
and
fldcw
and
shl
sbb
and
call
or
push
mov
push
dec
dec
push
inc
adc
mov
sbb
sahf
sar
push
inc
dec
mov
push
imul
outs
dec
mov
cli
mov
mov
adc
mul
push
or
pop
push
adc
loopne
pop
adc
or
pop
sahf
add
imul
add
shl
push
aam
push
fnsave
mov
adc
fistp
scas
sub
fcom
gs
fs
rcl
mov
lahf
stos
push
dec
outs
push
mov
lock
sbb
jmp
test
jne
jae
iret
inc
push
data16
and
je
ret
mov
mov
mov
sbb
push
mov
dec
inc
cmp
lods
add
retf
push
dec
or
clc
inc
ret
adc
pop
sub
dec
daa
mov
push
stos
(bad)
call
stos
repnz
ret
mov
daa
js
lahf
jae
mov
sbb
mov
dec
jl
adc
dec
sub
out
mov
cdq
mov
sbb
stos
fsub
pop
lahf
cli
sbb
add
inc
mov
or
add
in
dec
imul
cs
jo
sub
or
fwait
sub
sub
rcl
mov
pop
or
adc
push
dec
add
les
daa
jbe
unpcklps
xor
inc
push
adc
test
push
or
or
daa
movs
mov
out
pop
call
sar
sbb
imul
(bad)
sub
or
call
or
inc
xchg
or
pop
sub
push
mov
loope
(bad)
sbb
mov
nop
cmp
(bad)
or
sub
popa
stc
inc
or
lea
(bad)
iret
or
and
mov
or
in
lea
push
test
xor
lods
mov
xor
inc
je
mov
(bad)
ror
inc
cmp
pop
mov
and
imul
xor
or
cmps
or
enter
or
inc
xchg
mov
aaa
call
sbb
out
or
enter
or
sub
stc
xchg
push
test
xor
cwde
ss
xor
mov
xchg
lea
or
pop
sbb
push
pop
inc
jg
cmp
test
jbe
jno
push
test
xor
sub
inc
mov
push
jo
lea
pop
xchg
mov
push
ss
pop
push
imul
jl
jo
push
lea
push
mov
adc
cli
xor
mov
xor
add
fdiv
pop
jno
or
lea
adc
add
sbb
push
pop
push
inc
lahf
mov
lea
inc
mov
xor
dec
sbb
aam
stos
adc
add
mov
inc
xchg
imul
nop
fs
imul
xor
shr
ja
pusha
inc
sysret
mov
js
lds
(bad)
jbe
outs
mov
jmp
cmp
dec
mov
inc
xchg
sub
cmc
inc
xchg
mov
xchg
adc
and
dec
icebp
xchg
cwde
adc
cdq
in
dec
mov
fwait
and
inc
xchg
sahf
and
inc
lahf
and
js
mov
sub
mov
push
test
and
cli
adc
out
enter
ja
adc
mov
jmp
es
dec
mov
jecxz
pop
dec
lea
call
or
mov
add
add
or
sar
out
add
add
mov
xor
inc
icebp
inc
iret
pop
sbb
repnz
pop
push
cdq
int
push
movs
mov
aas
mov
test
scas
and
les
sub
mov
stos
push
add
es
or
push
(bad)
aad
adc
int3
outs
sub
push
in
or
ror
cmp
pop
mov
and
in
xor
pop
lds
add
mov
adc
push
push
out
pop
jmp
inc
cmp
adc
add
pop
pop
push
push
pushf
mov
and
and
adc
sbb
mov
and
and
pop
ins
ss
call
or
adc
pop
out
fild
mov
push
scas
xchg
jecxz
stos
mov
or
mov
adc
and
adc
icebp
and
inc
dec
pop
mov
and
retf
int3
adc
or
sbb
mov
dec
adc
ficomp
xchg
ins
jbe
pop
add
gs
ret
cmc
sar
or
add
add
jle
fld
fcom
push
mov
adc
dec
jmp
dec
cmp
jbe
mov
xchg
ret
mov
out
add
(bad)
nop
or
add
int3
jl
jge
push
dec
sar
bound
dec
xchg
dec
xchg
das
aad
sub
inc
inc
jmp
(bad)
rol
jmp
gs
movs
jae
das
daa
xor
idiv
js
aaa
mov
rol
sub
push
test
and
ss
ss
nop
xor
xor
enter
xor
xor
test
xor
enter
xor
xor
ret
pop
in
aas
and
jle
aaa
repnz
pop
in
aas
and
jle
xor
xor
and
inc
xor
xor
in
aas
and
jle
paddusb
inc
xor
xor
leave
xor
cmp
adc
cmp
and
pop
inc
aaa
repnz
adc
ss
inc
xor
xor
and
inc
xor
xor
adc
stos
cs
test
push
mov
pop
std
pop
ror
fmul
dec
inc
jmp
test
jae
or
pop
dec
hlt
dec
lods
fisttp
mov
and
pop
push
push
dec
dec
push
xlat
jmp
enter
lods
add
jmp
ret
rol
enter
inc
jp
test
shl
xor
mov
dec
push
or
dec
and
sub
rol
shr
add
add
pushf
mov
add
add
add
repnz
add
add
add
inc
add
inc
inc
add
add
add
add
add
add
add
add
fadd
inc
add
add
ss
add
mov
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
