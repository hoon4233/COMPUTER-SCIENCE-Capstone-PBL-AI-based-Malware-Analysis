xor
add
add
add
add
add
add
add
sbb
add
add
add
add
push
clc
daa
add
cmp
add
pop
sub
add
or
sub
add
or
add
push
sub
add
or
add
adc
add
add
or
add
adc
or
add
sub
sub
add
adc
add
xor
add
add
add
sub
add
add
add
or
add
or
or
adc
add
pop
xchg
pop
and
outs
adc
add
pop
pop
pop
or
push
mov
pop
xor
push
sub
add
adc
add
sub
adc
add
adc
sub
adc
pop
add
push
sub
jle
add
add
push
add
or
adc
add
adc
add
add
add
adc
push
mov
add
add
add
adc
add
add
sub
add
xor
add
add
add
add
adc
sub
pop
add
add
push
push
jb
add
jo
push
adc
sub
adc
add
pop
add
add
add
sbb
pop
pop
lea
add
add
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
mov
or
jo
or
jb
add
jo
or
or
add
jo
or
or
add
jo
or
or
add
jo
or
or
jne
add
or
or
jo
or
push
jb
add
jo
or
psrad
add
or
adc
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
jg
add
or
adc
jo
or
push
jb
add
jo
or
pop
adc
adc
adc
sub
add
or
add
or
add
adc
xor
add
sub
add
push
push
sub
sub
add
push
add
sub
add
push
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sbb
add
sub
add
add
int3
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
sbb
add
outs
sbb
jnp
add
add
push
add
or
add
or
jnp
add
add
pop
pop
pop
jae
add
or
add
or
jnp
add
add
fild
add
and
add
add
add
add
outs
and
add
add
add
add
push
add
or
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
outs
sub
add
add
add
add
sbb
pop
jae
add
or
add
or
jnp
add
add
jmp
sub
add
add
add
add
popw
sub
add
or
add
or
jnp
add
add
outs
sub
jnp
add
add
stc
add
jo
and
add
add
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
and
add
and
add
add
or
das
add
or
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
add
jo
sub
add
add
inc
or
add
jae
add
or
xor
add
add
sub
add
or
sub
add
sub
jae
add
or
sub
add
adc
add
add
sbb
add
sub
sub
push
sub
add
sub
add
sub
add
push
sbb
inc
sub
jb
add
jo
adc
add
sub
add
add
add
jle
add
add
sbb
add
or
call
call
add
outs
cmp
add
sub
add
pop
sbb
sbb
cmp
add
sub
add
pop
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sbb
add
sub
add
xor
pushf
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
cmp
add
outs
cmp
jnp
add
add
outs
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
hlt
add
add
jge
and
add
outs
and
add
add
add
add
push
add
jo
sub
add
add
add
add
ins
pop
pop
jae
add
or
add
or
jnp
add
add
outs
sub
jnp
add
add
ins
add
jo
and
add
add
add
add
outs
and
add
add
add
add
inc
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
inc
add
add
inc
jae
add
or
add
or
jnp
add
add
jg
add
sub
add
add
add
add
cmp
or
or
add
or
jnp
add
add
lea
add
and
add
add
add
add
outs
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
pop
add
pop
dec
jae
add
or
add
or
jnp
add
add
mov
add
outs
inc
add
or
jnp
add
add
fwait
add
jo
sub
add
add
add
add
outs
inc
add
or
jnp
add
add
dec
pop
sbb
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
outs
sub
add
add
add
add
cmp
add
outs
cmp
jnp
add
add
outs
aas
add
or
jnp
add
add
test
adc
add
or
add
or
jnp
add
add
jmp
sub
add
add
add
add
or
adc
add
or
add
or
jnp
add
add
outs
inc
add
or
and
add
add
test
add
jae
add
or
das
add
or
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
add
jo
sub
add
add
inc
adc
add
jae
add
or
xor
add
add
sub
add
or
sub
add
sub
add
dec
add
or
adc
add
sub
add
adc
add
add
and
add
jo
add
dec
add
or
add
or
add
or
push
or
add
add
sbb
add
add
push
add
sub
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
cmp
fld
into
mov
and
das
xchg
inc
lods
scas
sahf
ror
stos
mov
or
mov
fist
outs
int3
outs
fiadd
int3
(bad)
loope
and
push
fucom
adc
clc
daa
push
adc
sbb
outs
test
sbb
ins
lds
dec
mov
pop
inc
push
jne
inc
cmc
pop
inc
pop
push
fidivr
rol
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
add
pop
add
add
add
add
add
add
add
jae
jae
inc
add
bound
ins
add
dec
add
jns
add
add
push
or
push
inc
pop
jg
aam
mov
aam
hlt
jle
pop
shl
arpl
jle
pop
jle
dec
push
movs
add
add
push
sbb
cmp
cmp
mov
or
or
or
adc
aas
sbb
add
or
add
dec
pop
pop
sbb
pop
or
dec
push
shl
push
jle
cmp
sbb
add
or
sbb
or
xor
or
pop
pop
ds
jle
rcl
mov
add
cs
hlt
jle
pop
inc
pop
ds
inc
pop
cmp
mov
mov
jle
shl
pop
ds
sbb
pop
ds
add
pop
inc
mov
test
add
push
jle
jle
jle
mov
inc
mov
dec
add
sbb
out
jo
jle
cmp
ins
call
hlt
jle
push
cmps
jne
add
inc
pop
ds
hlt
jle
add
push
scas
or
jle
inc
pop
sbb
ins
call
inc
mov
add
add
sub
jle
ds
aam
jo
jle
(bad)
pop
ins
call
sbb
dec
shl
mov
push
pop
pop
shl
mov
pop
hlt
jle
lea
push
hlt
jle
push
dec
push
add
or
jo
aam
test
addr16
jle
jo
(bad)
add
and
cmp
adc
jle
or
push
jle
shl
gs
mov
ins
call
test
scas
shl
push
or
jle
sbb
xor
mov
add
push
aam
jg
out
jle
sbb
ds
jo
jle
dec
push
or
pop
pop
jmp
adc
add
jle
sbb
call
dec
push
hlt
jle
push
test
add
jle
ds
out
jle
jg
jg
cmp
mov
hlt
jle
push
jle
jle
jle
add
and
ds
hlt
jle
push
adc
add
jle
sbb
dec
push
adc
jle
jg
out
cmp
rcl
imul
aas
push
jle
scas
gs
push
add
adc
add
add
arpl
sbb
pop
inc
outs
add
sbb
jle
or
jle
pop
pop
jo
mov
cmp
sbb
test
add
jle
jle
sbb
test
pop
dec
push
scas
gs
add
adc
test
mov
mov
jle
or
add
sbb
sub
inc
pop
scas
gs
adc
out
hlt
jle
pop
scas
gs
or
cmp
popa
rol
cs
mov
push
aam
or
adc
cmp
or
jle
or
jle
sbb
cmp
jle
scas
gs
jle
out
sbb
sti
xlat
add
and
(bad)
ins
call
add
call
adc
aam
adc
jle
hlt
jle
dec
xchg
out
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
pop
add
add
add
add
and
mov
mov
mov
in
pushf
in
mov
mov
call
mov
add
add
and
xchg
scas
out
nop
in
xchg
in
mov
mov
mov
call
mov
scas
mov
add
add
sbb
mov
test
call
popf
call
and
scas
push
add
in
sub
mov
mov
nop
mov
popf
mov
mov
add
mov
nop
mov
nop
mov
mov
in
mov
mov
call
popf
in
mov
pop
add
add
call
mov
mov
movs
mov
mov
in
mov
mov
mov
in
cmps
in
mov
test
add
test
in
mov
mov
call
mov
mov
in
mov
mov
mov
call
scas
push
or
add
xor
mov
in
mov
mov
nop
mov
nop
mov
nop
mov
mov
test
jmp
and
mov
or
add
xor
xchg
scas
in
mov
nop
mov
mov
xchg
cmps
call
nop
out
scas
call
mov
test
call
pushf
push
or
add
cmp
mov
call
mov
nop
mov
test
mov
popf
mov
scas
xchg
call
mov
popf
mov
mov
out
mov
or
add
sbb
mov
mov
(bad)
nop
in
sub
popf
in
add
inc
call
mov
nop
mov
scas
xchg
in
xchg
in
mov
nop
mov
mov
nop
mov
mov
in
pushf
in
mov
mov
mov
xchg
cmps
in
pushf
push
push
add
add
nop
mov
movs
mov
mov
out
mov
mov
out
nop
out
nop
out
mov
mov
call
mov
sldt
add
nop
mov
mov
in
and
sub
mov
mov
out
nop
in
mov
nop
mov
mov
in
mov
test
call
xchg
scas
mov
mov
add
xor
nop
mov
nop
mov
mov
in
xchg
in
popf
in
mov
mov
in
mov
xchg
cmps
in
mov
(bad)
nop
in
mov
mov
mov
add
sub
movs
mov
mov
nop
mov
mov
nop
mov
popf
mov
mov
call
lods
push
adc
add
daa
in
sub
lods
in
mov
mov
mov
in
popf
out
nop
call
mov
(bad)
nop
push
adc
add
sub
mov
mov
out
scas
call
xchg
in
cmps
out
mov
mov
out
scas
call
mov
mov
adc
add
daa
in
mov
mov
in
mov
mov
mov
mov
call
xchg
call
add
add
call
lods
in
mov
nop
mov
mov
out
mov
mov
mov
out
xchg
in
xchg
call
mov
mov
add
inc
in
mov
mov
mov
in
mov
mov
call
mov
mov
popf
mov
mov
test
in
mov
nop
mov
nop
mov
add
in
mov
mov
out
mov
mov
call
mov
nop
mov
nop
mov
mov
in
mov
mov
sbb
add
sbb
mov
mov
mov
call
mov
nop
mov
and
pusha
pop
cmp
or
pop
imul
cld
cwde
add
inc
jne
fnsave
cmp
sbb
pop
outs
push
xor
push
jmp
sub
into
push
mov
out
or
pop
xor
push
movs
adc
popa
push
data16
dec
sbb
dec
jg
daa
pop
es
pop
sub
dec
cdq
push
xor
gs
js
mov
mov
add
retf
push
test
add
fiadd
add
aad
cmp
test
mov
popa
cwde
cmps
xchg
hlt
adc
retf
mov
inc
pop
out
in
fsubr
jnp
jp
sbb
sbb
dec
mov
sahf
(bad)
shl
inc
and
enter
add
retf
cli
imul
dec
jg
stos
sbb
sahf
stos
xchg
add
xchg
xor
cmps
in
cmps
xor
push
add
aad
mov
fidivr
mov
dec
sub
mov
call
add
push
fistp
mov
jle
test
jb
imul
popf
xor
and
cmp
and
and
cmp
das
retf
push
gs
outs
ror
movs
push
ins
xor
push
push
dec
mov
not
cli
retf
std
sar
adc
mov
(bad)
sub
dec
aas
fsubr
push
xchg
pop
shl
jno
jbe
jbe
mov
shr
dec
jns
out
std
cdq
lods
push
sub
es
pop
outs
push
xchg
push
push
xchg
idiv
outs
xor
mov
inc
lods
sar
fdivp
pop
outs
or
mov
adc
sub
pop
adc
jle
mov
mov
shl
std
or
fldenv
daa
adc
mov
add
push
jbe
push
xor
data16
call
push
mov
in
sahf
cmps
xchg
cmp
or
cmp
loop
test
(bad)
sbb
(bad)
cmps
imul
call
mov
(bad)
out
popf
cmp
loop
jg
xchg
test
adc
fsub
push
and
mov
lahf
cld
aad
mov
daa
sbb
loope
mov
stos
xchg
cmp
popf
add
add
mov
mov
les
push
xchg
adc
jecxz
out
test
das
dec
pusha
xchg
icebp
xchg
mov
popf
add
sub
dec
add
cmp
stos
push
jb
call
dec
mov
and
xor
jae
and
icebp
fidivr
leave
cld
cdq
lods
push
push
mov
stos
shl
cld
int
repnz
xchg
hlt
ins
ud0
sbb
loopne
clc
mov
mov
or
pop
pop
idiv
inc
ja
movs
fmul
out
jmp
out
or
pushf
dec
and
ret
add
movs
add
jecxz
fdivr
call
jmp
sar
sub
gs
jae
pushf
scas
dec
out
nop
popf
mov
jnp
out
ins
push
push
in
retf
test
into
(bad)
fisubr
es
mov
xor
aad
rcr
mov
mov
lea
aad
outs
mov
gs
ret
aad
hlt
mov
enter
scas
jmp
popf
scas
mov
inc
std
cld
and
dec
ret
not
jb
jae
mov
or
add
jo
pop
add
jns
dec
cmp
adc
es
into
mov
shl
imul
mov
or
jmp
add
int
jl
aas
loope
mov
xor
pop
call
dec
mov
daa
push
lods
xchg
mov
mov
jno
(bad)
gs
sub
mov
jmp
lock
jbe
or
fwait
fs
cli
retf
repz
in
mov
ins
nop
mov
mov
sbb
pop
sub
xchg
push
xchg
loop
sti
inc
jmp
mov
shl
mov
jge
jp
push
push
in
lods
mov
sti
push
and
call
ss
pop
ffree
and
ins
inc
mov
xchg
rcr
or
inc
ficom
(bad)
fist
out
adc
rol
lea
jg
sar
cmp
xor
fld
sbb
test
push
jnp
int3
std
movs
popa
add
ret
sbb
repz
fnsave
jno
shl
jl
fstp
out
popa
sbb
xor
jne
xchg
les
push
(bad)
jnp
loop
mov
dec
out
or
jle
xchg
add
xchg
movs
ins
sub
inc
je
scas
ret
leave
mov
dec
(bad)
cmc
xchg
xor
mov
fidivr
push
mov
push
std
cdq
add
enter
sub
dec
shl
xor
cld
test
sbb
movaps
repnz
sbb
pop
and
and
test
dec
test
add
retf
fnstenv
adc
cmp
aad
call
test
cwde
inc
loop
call
hlt
(bad)
not
inc
and
add
ja
(bad)
xchg
push
in
loopne
js
bound
stos
cmc
(bad)
pushf
scas
int3
jne
std
jno
jo
lods
ins
repz
xor
push
cli
pop
push
xor
es
jne
shl
sub
xor
push
gs
repnz
mov
add
popf
and
retf
aas
pop
jo
mov
inc
mov
out
pop
test
(bad)
mov
sub
cmp
push
arpl
or
add
lea
cmp
mov
out
das
sbb
push
cli
int
lahf
stos
cmps
clc
push
sub
and
inc
and
pushf
jmp
mov
jnp
sub
mov
cmps
xcrypt-ctr
cmps
cdq
add
sahf
cs
fsubp
cdq
sbb
mov
sbb
pop
xchg
icebp
xchg
lds
js
mov
cmp
outs
adc
ret
arpl
xchg
mov
nop
sahf
(bad)
mov
aas
ds
push
mov
pop
xchg
repz
ja
xor
ror
xor
sub
inc
cmps
aas
pop
cmp
push
imul
mov
and
sub
xchg
mov
cmp
clc
mov
ins
push
jnp
leave
scas
popf
cli
pop
add
lea
cs
imul
into
mov
iret
dec
mov
add
jbe
scas
sahf
sti
inc
pushf
mov
and
cmp
mov
sub
sar
addr16
push
repnz
dec
jl
mov
xlat
cmc
repz
inc
jo
and
fisubr
daa
call
xor
gs
cwde
gs
sti
mov
ins
adc
test
inc
in
in
mov
push
(bad)
xchg
cmps
ret
sub
int3
enter
mov
pop
out
cmp
or
xor
add
push
shr
or
xchg
cmps
ret
xor
mov
mov
mov
(bad)
push
mov
ins
mov
jl
sub
fsubrp
fwait
jmp
sbb
cmps
xor
test
or
scas
and
cmp
push
fs
mov
test
test
inc
xchg
push
mov
clc
movs
ret
mov
cmp
sub
jl
mov
pop
cmp
test
xchg
pop
inc
push
pop
and
mov
movs
adc
stc
retf
pop
mov
in
mov
sub
xchg
cmps
xchg
adc
fdivr
shl
mov
imul
adc
int3
test
cmp
add
add
out
inc
jne
add
push
popa
nop
pop
inc
add
call
fsubr
mov
adc
(bad)
daa
add
cdq
(bad)
popa
adc
pop
and
ja
sar
inc
imul
std
push
inc
mov
lea
or
pop
imul
aas
loope
mov
xor
pop
mov
mov
and
scas
xchg
mov
push
xor
inc
scas
leave
lods
inc
pop
or
ret
movs
pop
outs
in
fs
arpl
stos
daa
pop
sub
sub
(bad)
lock
pop
sbb
pop
cmp
and
out
mov
cwde
std
pop
popa
mov
int
iret
xor
in
cdq
sar
xchg
fistp
scas
popa
xor
fs
test
mov
(bad)
sub
dec
inc
ss
xor
fnstsw
pop
push
pop
test
sti
mov
mov
pop
aas
xor
imul
adc
shl
out
mov
mov
jge
cmp
xor
cdq
xlat
daa
push
xor
in
(bad)
and
or
add
mov
xor
das
mov
xlat
out
jp
or
fisub
(bad)
jmp
loop
out
loop
hlt
nop
cmps
dec
and
(bad)
mov
and
rol
push
cli
int
addr16
jbe
loop
retf
mov
in
fcomp
mov
xchg
push
push
(bad)
in
mov
dec
jg
pop
test
push
ss
fwait
test
push
popa
adc
mov
or
dec
jnp
jae
jnp
popf
std
test
shl
(bad)
mov
cmc
cmp
cmc
(bad)
mov
xchg
jb
lods
push
bound
sbb
mov
mov
leave
shr
cmps
jmp
std
pop
data16
shl
aad
adc
es
aaa
push
xor
test
ins
pop
in
add
xchg
test
imul
lds
int3
fdiv
popf
stos
call
ja
jbe
jle
sub
dec
out
pop
and
jne
icebp
dec
xor
inc
arpl
xor
in
in
push
retf
and
xor
dec
gs
sub
sub
ins
xchg
adc
jmp
push
test
xchg
aad
shl
cmp
jne
sub
int
iret
das
int
and
cmp
in
mov
test
dec
pusha
add
and
leave
stos
cmp
out
ins
xchg
das
(bad)
cwde
xchg
ins
xchg
outs
mov
adc
lods
iret
fcomi
add
xchg
pusha
inc
sub
jns
jnp
dec
sub
jecxz
xor
test
pavgb
int3
jmp
xchg
xchg
cmp
ret
push
mov
push
pop
addr16
ja
sub
sub
pop
add
mov
(bad)
(bad)
and
aas
or
pop
gs
mov
ret
ficom
and
jo
xlat
loopne
push
mov
jmp
lds
das
push
push
stos
enter
adc
stos
mov
mov
jmp
jg
jo
shl
imul
jle
jl
in
ss
retf
je
adc
adc
(bad)
fwait
jnp
xchg
xchg
mov
adc
shr
inc
scas
xchg
into
pop
push
sub
mov
or
pop
mov
xchg
pop
xchg
xor
xchg
shl
cmp
jecxz
mov
lods
leave
cld
call
loopne
mov
dec
stos
fwait
out
push
mov
adc
lea
jmp
xor
fdiv
dec
mov
jnp
sub
jp
popa
pop
fdivr
inc
xor
or
xchg
movs
mov
ins
adc
add
inc
pusha
pop
ss
lahf
add
adc
inc
loopne
pop
daa
inc
daa
stc
pop
jno
mov
mov
sub
addr16
mov
dec
je
xor
stc
js
mov
test
mov
enter
mov
sbb
jg
shl
rcr
sub
push
pop
cmp
pop
cmc
mov
fs
xor
icebp
sti
and
daa
pop
shl
(bad)
icebp
xchg
cs
cmp
popa
add
dec
retf
out
cmp
jp
xor
jl
fsubrp
(bad)
stos
iret
sti
push
ins
pop
aad
fwait
test
add
or
push
lock
pop
clc
xchg
iret
inc
aam
aam
jo
aam
dec
jle
out
ror
gs
inc
adc
int3
test
and
mov
cmp
sbb
scas
sti
leave
cmp
mov
mov
mov
xchg
dec
imul
jnp
mov
outs
sbb
xlat
push
mov
sbb
mov
ret
cmps
popf
jmp
into
hlt
call
sbb
lahf
lods
cmp
jecxz
and
loop
shr
ror
xchg
test
push
pop
cmp
and
cld
retf
jb
stc
jl
aaa
push
or
inc
sub
pop
cmp
outs
int
stos
dec
dec
push
cs
push
lahf
inc
inc
je
scas
push
and
fwait
pushf
repnz
cmps
adc
scas
xchg
dec
ja
jae
cmp
test
pop
push
loope
xor
push
jmp
repnz
jecxz
xchg
pop
clc
sub
dec
sub
mov
in
adc
pop
or
icebp
jge
popf
test
aam
pop
adc
sub
mov
or
adc
das
pop
test
push
cmp
rcr
lods
loopne
push
adc
fsubr
mov
frstor
sbb
aaa
add
pop
sub
(bad)
out
jbe
in
das
jmp
(bad)
retf
and
and
mov
cld
int
fsubr
nop
sub
cmps
loopne
mov
cmp
mov
lock
jge
xor
xchg
lods
jns
mov
mov
push
adc
daa
inc
lods
xchg
mov
mov
or
out
mov
loope
in
and
sub
mov
mov
in
push
add
xor
es
arpl
xor
pushf
pusha
pop
aad
lahf
mov
pop
jo
cmp
push
das
xlat
in
lds
pop
fld
xchg
test
dec
sub
outs
adc
popf
adc
mov
mov
jns
push
mov
xchg
pushf
dec
das
dec
(bad)
in
adc
daa
out
aad
loopne
mov
cld
vcvtss2sd
inc
jno
in
cmp
jne
sub
push
fs
sahf
into
cld
pop
test
sub
shl
data16
in
or
loop
mov
or
cmp
lahf
and
push
xor
enter
push
cmps
call
cmp
fsubr
dec
and
jecxz
pop
cdq
dec
sub
xor
stos
call
loop
mov
ss
mov
push
or
ret
iret
test
cld
xchg
push
mov
dec
repnz
addr16
stc
icebp
retf
inc
out
dec
hlt
push
xor
xchg
hlt
nop
repnz
or
enter
enter
cwde
aam
pushf
sbb
cmps
push
xor
inc
retf
loope
sbb
dec
enter
or
jo
jecxz
mov
xchg
cmc
jl
jae
mov
aas
pop
fidivr
jg
mov
pop
push
arpl
retf
xchg
sub
pop
cmp
or
xchg
xor
shl
push
inc
cmp
call
cmp
pop
xor
xor
push
in
jnp
jg
xchg
cmps
xchg
xor
xor
(bad)
sbb
mov
jmp
sbb
mov
loope
in
outs
pop
scas
push
adc
rcr
pop
inc
jne
and
scas
xchg
fbstp
add
dec
sub
jnp
mov
pushf
ret
lock
shr
jmp
jp
add
push
stos
push
push
imul
(bad)
mov
adc
sbb
mov
sbb
outs
mov
(bad)
jmp
cwde
scas
pop
gs
and
adc
sub
ins
push
cmp
mov
aad
mov
pop
cs
mov
and
call
push
cmp
cli
(bad)
or
or
xchg
and
or
or
call
pop
movs
iret
stos
adc
rcr
mov
mov
test
xor
cdq
cmp
icebp
out
dec
daa
adc
adc
pop
push
cmp
adc
dec
inc
dec
cmp
sbb
shl
ret
sub
cmp
or
sub
cmc
xchg
test
mov
addr16
xor
xor
mov
inc
xor
cmp
mov
imul
pop
cmp
clc
mov
push
pop
mov
cmps
fsub
sbb
shl
pop
outs
(bad)
int3
pop
cmp
shl
inc
jb
lods
fsub
sbb
aad
mov
(bad)
lods
(bad)
lods
popf
fadd
and
jo
jns
jge
xor
test
or
mov
into
jl
pop
ja
inc
mov
mov
push
pop
outs
jecxz
xchg
popa
add
ins
xchg
pusha
pop
cmp
cmp
inc
sub
mov
mov
lock
cmc
(bad)
repnz
ret
jb
loopne
rcl
test
push
and
mov
jmp
test
scas
fs
xor
xor
dec
es
in
mov
xor
js
sbb
popa
nop
je
push
mov
fisub
(bad)
inc
push
xor
(bad)
movs
xchg
cmc
ins
or
fwait
lods
iret
(bad)
in
in
popf
stc
int3
inc
out
fsubr
xlat
and
in
or
stos
cmp
loope
test
aad
in
and
mov
ds
add
inc
dec
cmp
cmp
xor
sbb
dec
in
dec
sub
out
fnstcw
add
jb
inc
xor
cmp
jl
mov
jmp
add
mov
mov
shl
gs
push
aam
pop
or
(bad)
mov
sub
pop
fucomip
xlat
xor
cmp
mov
xor
outs
push
nop
popa
add
outs
pop
data16
repz
cmp
pop
cld
call
push
add
test
pop
and
enter
push
(bad)
shl
jae
rcr
lods
call
js
leave
pushw
das
sbb
mov
or
or
and
mov
or
or
inc
xor
arpl
(bad)
iret
mov
loopne
movs
(bad)
xchg
add
mov
out
fwait
lds
inc
je
(bad)
movs
ins
sbb
sbb
xchg
movs
scas
pop
fwait
imul
shl
xchg
movs
scas
sbb
cdq
std
leave
dec
repnz
adc
sbb
push
push
jno
mov
dec
pop
stos
pop
cmp
xlat
shld
cmp
xor
mov
sub
and
push
int3
push
movs
push
arpl
das
test
stc
fcom
xchg
in
(bad)
shl
jae
jg
jns
jg
test
or
or
pop
das
pop
pop
push
xchg
mov
mov
call
inc
dec
out
lock
inc
dec
pop
sub
and
out
int3
fstp
or
in
xchg
int3
mov
retf
mov
jns
xor
shl
call
sbb
sub
into
cld
dec
je
(bad)
mov
xor
cdq
cmps
xchg
cmc
xchg
loop
loop
imul
retf
cmp
leave
jle
test
mov
push
sub
mov
xchg
movs
adc
fbstp
inc
fsubr
mov
add
add
call
in
movs
xchg
out
fucomp
pop
bound
daa
adc
fsubrp
aad
xlat
fs
es
loopne
mov
ss
addr16
xor
movs
mov
popf
scas
(bad)
mov
or
or
jnp
add
push
xor
fsubrp
(bad)
lock
fs
loope
ins
dec
test
or
inc
and
push
not
lods
lahf
test
in
fstp
xlat
addr16
scas
mov
sbb
pop
stos
mov
icebp
cmp
push
shl
pop
cmp
gs
cli
in
dec
lods
lea
lods
les
inc
jo
ja
sbb
dec
icebp
adc
loope
jmp
xlat
sbb
out
xchg
mov
sbb
mov
or
and
add
xchg
push
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xor
and
cmp
and
and
and
and
and
and
and
and
and
adc
and
and
and
and
and
and
and
and
and
push
and
and
and
and
and
lods
and
and
jbe
jae
jg
jbe
and
jae
imul
jg
imul
outs
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
and
data16
dec
and
imul
dec
and
and
and
and
and
je
push
and
dec
and
dec
and
push
and
dec
and
and
and
and
nop
and
and
and
and
push
and
dec
and
inc
and
dec
and
and
dec
and
dec
and
and
and
and
and
and
and
and
and
and
inc
and
and
and
and
and
data16
dec
and
and
push
and
push
and
push
and
and
dec
and
and
and
and
and
and
and
and
dec
and
and
inc
and
push
and
dec
and
and
and
adc
push
and
and
and
and
and
and
and
and
and
dec
and
and
dec
and
dec
and
inc
and
inc
and
and
ja
push
jns
outs
and
push
inc
and
inc
and
jns
push
jns
dec
and
outs
and
jno
push
and
ins
and
and
and
pop
and
and
and
or
and
and
ins
and
inc
and
dec
and
dec
and
pop
and
dec
and
dec
and
and
and
and
and
and
push
and
inc
and
dec
and
dec
and
dec
and
and
inc
and
inc
and
and
ja
push
jns
outs
and
push
inc
and
inc
and
jns
push
jns
dec
and
outs
and
jno
push
and
ins
and
and
and
pop
and
and
and
adc
sub
and
jo
push
and
inc
and
inc
and
and
push
and
dec
and
dec
and
and
and
and
and
and
and
and
and
and
and
and
and
push
and
inc
and
inc
and
and
and
inc
and
push
and
dec
and
and
adc
push
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
shl
sub
and
rcl
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
xchg
push
add
sbb
push
cmp
dec
push
or
mov
es
sub
mov
and
jae
imul
movs
or
dec
dec
jle
push
add
sub
sub
loope
xchg
dec
push
sahf
je
cmp
and
push
(bad)
fs
sbb
fbld
mov
aam
push
xor
xor
mov
push
arpl
ds
je
pop
das
xchg
pop
call
push
loop
inc
out
xchg
cmps
ins
scas
fucomi
mov
push
out
and
mov
inc
icebp
push
xor
xor
mov
inc
jne
(bad)
rcl
je
dec
and
jnp
popf
adc
xor
gs
mov
fsubr
xchg
jbe
mov
daa
adc
popa
stos
jge
mov
push
stos
pop
fndisi(8087
inc
sub
add
(bad)
(bad)
repz
mov
aaa
inc
mov
js
pop
test
stos
sbb
push
inc
outs
dec
jb
cmp
leave
mov
pop
mov
addr16
mov
shr
int3
xor
imul
aad
add
(bad)
stc
xchg
in
mov
aad
pop
stos
(bad)
repz
jmp
dec
jo
mov
dec
add
mov
data16
in
loop
fsubp
xchg
fsub
adc
ins
sub
mov
sbb
mov
xor
inc
push
outs
push
lahf
pop
loop
arpl
aaa
cmp
adc
mov
adc
cmp
sbb
popf
and
ds
mov
xor
mov
repz
fdivr
shl
push
test
push
inc
ja
popa
push
xor
add
sbb
pop
imul
pop
inc
out
jmp
aas
push
dec
cmps
enter
or
dec
scas
sub
sbb
cs
jmp
imul
jecxz
cmp
dec
and
push
lahf
mov
cmp
mov
ror
xor
shl
mov
(bad)
push
cmp
push
bound
ins
jns
inc
fprem
ret
mov
dec
jns
aaa
mov
loopne
jge
icebp
test
dec
pop
lods
in
fdivr
bound
aas
pop
imul
add
xchg
jecxz
or
or
or
cmp
jmp
mov
loope
daa
loope
mov
sub
cwde
mov
call
popf
cli
cmps
add
adc
jo
call
xchg
mov
push
std
adc
fcomp
les
enter
js
adc
in
fdivr
cmps
push
and
lock
jo
pop
(bad)
cmpxchg
dec
dec
ins
aam
call
push
mov
(bad)
daa
cmps
inc
cmp
mov
dec
jl
sub
mov
dec
jb
xchg
push
dec
jl
shl
in
mov
call
inc
mov
add
call
(bad)
lock
adc
addr16
mov
inc
push
pop
dec
movs
icebp
push
cwde
mov
mov
jge
test
lods
and
inc
and
mov
push
jo
sub
aad
sbb
jne
jecxz
or
ins
punpckhwd
dec
push
lods
pop
push
inc
out
mov
mov
jmp
dec
shr
mov
ret
mov
sbb
and
call
sbb
loopne
fucompp
sbb
fnstcw
add
add
fcmove
outs
test
lock
cwde
cmp
shl
in
xchg
ss
mov
cmp
out
rcr
lea
cmp
rol
stos
shl
repz
shl
xchg
and
mov
rep
enter
outs
push
cdq
lods
fwait
mov
and
push
rcl
jp
cmp
mov
dec
ss
cmp
push
and
mov
sub
test
loop
mov
in
xchg
pop
in
adc
jb
xor
out
(bad)
mov
cli
leave
stos
inc
dec
sub
or
dec
mov
jmp
cmp
rcr
push
fild
(bad)
movs
mov
int3
ret
dec
sbb
mov
syscall
out
popa
pop
ins
pop
(bad)
sub
in
jg
clc
loop
out
cmp
loop
pop
mov
lahf
ucomiss
int3
stos
and
aaa
push
movs
xor
in
retf
icebp
mov
lods
in
mov
and
dec
scas
cmc
bound
cmp
shr
repz
push
sbb
sbb
xchg
add
mov
imul
in
cs
test
ins
xadd
(bad)
dec
push
mov
mov
sti
iret
jne
in
mov
cmc
push
xor
sbb
fucomip
fcom
push
jno
pop
and
or
cli
int
sahf
sbb
cmp
pushf
call
add
sub
adc
mov
lds
mov
add
scas
int3
test
mov
and
mov
loop
mov
xor
cmp
xlat
push
(bad)
outs
retf
scas
repnz
(bad)
lock
inc
jmp
lods
pop
pop
cmc
push
loope
mov
add
inc
jne
es
and
jecxz
jae
dec
movs
lds
popa
aad
fucomp
ficomp
xchg
test
sub
in
pop
fisub
in
nop
test
xor
push
stos
(bad)
imul
popa
mov
jp
jo
and
iret
ins
or
pop
ror
pusha
cmps
movs
aad
pushf
mov
inc
jne
jo
mov
stos
dec
fdiv
int
push
jle
sub
lahf
sti
leave
add
sub
mov
push
fs
ins
or
fnsave
adc
xchg
stos
lea
add
push
cmp
cmp
xor
shr
jecxz
jne
in
dec
mov
movs
out
push
fucomi
xchg
fs
mov
(bad)
fist
shl
push
jmp
jecxz
call
cwde
xor
in
and
lahf
call
dec
jg
mov
out
loope
mov
dec
add
loope
lods
dec
and
sub
xchg
pop
add
hlt
inc
pop
idiv
inc
popa
les
les
push
xor
inc
ss
outs
dec
jo
bound
sub
arpl
jl
nop
repz
jmp
pushf
sbb
cmp
sbb
or
xor
(bad)
add
or
jmp
ins
or
mov
out
pop
in
in
fdiv
leave
and
loope
inc
in
mov
retf
mov
enter
push
pushf
mov
sub
stos
mov
aad
inc
jmp
popf
cmps
lds
fdiv
sub
aam
pop
ins
pop
mov
and
lods
jge
mov
cmp
pop
loope
cmps
push
je
mov
aaa
add
mov
ds
xchg
and
push
ret
fnstsw
(bad)
mov
rcr
lods
test
add
je
adc
and
repnz
and
push
jmp
stos
jg
push
pushf
xor
pop
mov
das
push
in
shr
fistp
out
adc
test
shl
or
xchg
out
dec
jge
push
or
loopne
mov
mov
and
xchg
mov
lds
not
sbb
dec
mov
or
stos
cmc
add
adc
out
in
retf
and
outs
mov
mov
pop
push
std
in
mov
and
pop
and
dec
xor
rcr
jmp
jl
(bad)
shl
inc
ja
je
bound
xor
fistp
in
adc
xlat
jl
xor
loopne
das
gs
fndisi(8087
fdivr
test
(bad)
lock
dec
cmps
int3
test
sub
pop
add
stc
or
ss
ja
test
or
xchg
mov
test
sub
dec
sti
int
retf
int3
sti
loopne
jbe
(bad)
mov
retf
std
hlt
fucomi
(bad)
in
call
mov
cmps
jl
adc
jg
cwde
ja
cld
xabort
into
std
retf
mov
das
pop
sub
sbb
outs
xchg
in
fbstp
loope
nop
sub
mov
ror
stos
into
lods
inc
jg
mov
and
test
jle
fstp
cmps
adc
jae
mov
pop
mov
mov
out
aaa
cmp
mov
test
cmp
call
int
push
aad
inc
in
(bad)
mov
jae
mov
iret
mov
movntps
dec
inc
sub
stc
call
dec
xor
(bad)
mov
in
cld
mov
mov
xchg
jmp
fidivr
jmp
mov
mov
fldlg2
mov
mov
(bad)
jmp
mov
(bad)
jmp
mov
aam
fucomp
fucomip
mov
fnstsw
mov
(bad)
fucomp
fdivr
mov
mov
fldlg2
mov
mov
(bad)
jmp
mov
(bad)
jmp
mov
aam
fucomp
fucomip
mov
fnstsw
mov
(bad)
fucomp
fdivr
mov
mov
fldlg2
mov
mov
(bad)
jmp
mov
(bad)
jmp
mov
aam
fucomp
fucomip
mov
fnstsw
mov
(bad)
fucomp
fdivr
mov
mov
fldlg2
mov
mov
(bad)
jmp
mov
(bad)
jmp
mov
aam
fucomp
fucomip
mov
fnstsw
mov
(bad)
fucomp
fdivr
mov
mov
fldlg2
mov
mov
(bad)
jmp
mov
(bad)
jmp
mov
aam
fucomp
fucomip
mov
fnstsw
mov
(bad)
fucomp
fdivr
mov
mov
fldlg2
mov
mov
(bad)
jmp
mov
(bad)
jmp
mov
aam
fucomp
fucomip
mov
fnstsw
mov
(bad)
fucomp
fdivr
mov
mov
fldlg2
mov
mov
sbb
lahf
fwait
xor
shl
aad
fcomp
enter
bound
in
in
mov
pop
rdtsc
(bad)
cld
pop
jmp
xchg
jp
ins
sar
pop
out
pop
aas
iret
lahf
push
mov
fiadd
inc
pop
out
adc
xchg
xor
bound
cmp
mov
imul
pop
or
inc
rol
cmc
push
xchg
inc
mov
xchg
xor
add
mov
imul
loope
iret
mov
movs
cwde
out
mov
loopne
in
mov
loop
mov
mov
and
jecxz
in
mov
mov
mov
loope
mov
mov
mov
in
mov
jecxz
jmp
aam
test
out
sub
sub
xor
ret
or
sbb
and
add
and
adc
ja
jo
es
inc
and
and
sub
and
and
jne
daa
inc
jbe
jb
je
jno
and
adc
jbe
ja
jg
jbe
jae
and
jo
and
inc
and
adc
ja
jo
es
inc
and
and
sub
and
and
jne
daa
inc
jbe
jb
je
jno
and
adc
jbe
ja
jg
jbe
jae
and
jo
and
inc
and
adc
ja
jo
es
inc
and
and
sub
and
and
jne
daa
inc
jbe
jb
je
jno
and
adc
jbe
ja
jg
jbe
jae
and
jo
and
inc
and
adc
ja
jo
es
inc
and
and
sub
and
and
jne
daa
inc
jbe
jb
je
jno
and
adc
jbe
ja
jg
jbe
jae
and
jo
and
inc
and
adc
sti
cdq
stos
cmps
popa
xchg
xor
cmc
xchg
or
shl
cwde
push
(bad)
cmp
sbb
jbe
aaa
and
mov
(bad)
push
stc
mov
adc
inc
cmc
pusha
fwait
inc
mov
add
mov
imul
sbb
add
push
out
inc
xchg
mov
mov
or
jnp
fdivr
loopne
fldl2e
fdivr
ss
mov
mov
inc
sbb
mov
mov
cmp
repnz
xchg
das
out
outs
cs
dec
test
daa
in
mov
mov
call
pop
lea
xchg
jle
fild
lahf
ss
push
cld
cwde
imul
dec
sub
jg
js
sub
dec
sub
vmptrst
adc
scas
jns
mov
cmp
stos
dec
cmp
fwait
cmp
pop
(bad)
mov
xor
xchg
inc
retf
push
sub
bound
sbb
cmp
dec
retf
fcomp
daa
fdivr
mov
mov
lahf
cmp
cmps
imul
pusha
and
jns
je
sbb
push
xchg
xor
xchg
cmp
mov
mov
jbe
shr
cli
pop
hlt
push
xchg
das
sub
sbb
mov
loopne
pusha
and
mov
or
push
cld
mov
inc
mov
push
addr16
inc
xchg
dec
js
cli
push
les
cdq
mov
movs
push
push
in
mov
mov
pop
mov
sbb
or
push
xor
vmovmskps
je
in
or
mov
popf
inc
push
push
jl
or
sub
jge
movs
push
in
mov
mov
out
addr16
jne
mov
iret
pop
stc
mov
enter
nop
mov
dec
fistp
or
test
sbb
(bad)
add
mov
mov
cld
push
out
push
arpl
retf
adc
jns
adc
sub
std
inc
enter
fucomip
xchg
call
test
add
xchg
test
loope
addr16
test
gs
sbb
enter
xchg
push
out
fidiv
movs
scas
pop
mov
xchg
sti
pop
sti
pop
enter
retf
sti
pop
in
mov
mov
pop
jmp
pusha
loop
idiv
mov
rcl
ins
daa
in
jno
jae
pop
mov
mov
jb
loop
add
cmp
fwait
cmp
push
call
dec
test
cmp
xor
pop
and
sbb
data16
sub
push
and
mov
xchg
mov
in
pop
mov
adc
jle
and
or
pop
hlt
push
shl
mov
xchg
jle
or
adc
jo
scas
mov
jno
cmp
mov
fbstp
jl
hlt
mov
xor
sub
cli
mov
mov
cdq
push
xor
ret
mov
adc
daa
sar
xor
out
imul
xchg
sub
mov
jb
icebp
push
mov
lea
dec
xchg
jne
stos
ins
das
repz
and
xchg
bound
sub
in
pusha
cwde
add
jle
sbb
pop
not
dec
les
mov
pusha
jecxz
ins
das
push
es
ret
xor
je
mov
mov
or
add
pop
repz
shl
std
pop
xchg
aaa
adc
cs
js
mov
and
xchg
dec
int3
add
fld1
shl
shl
test
shl
xchg
xlat
loopne
out
mov
out
mov
mov
mov
shl
shl
and
xor
mov
loope
loopne
call
test
shl
xchg
xlat
loopne
out
mov
out
mov
mov
mov
shl
shl
and
xor
mov
loope
ins
sub
push
stc
xchg
outs
and
mov
ret
xchg
push
mov
pop
out
push
ret
(bad)
call
mov
out
sbb
leave
push
jge
adc
pminsw
call
(bad)
addr16
xor
push
xor
sub
cmp
aas
or
pop
outs
or
(bad)
ds
fdivr
push
cli
je
mov
push
mov
retf
mov
clc
lods
enter
inc
push
das
sbb
aas
loopne
lods
pop
or
fmul
es
pop
cmp
aas
(bad)
stos
into
cld
cwde
push
mov
push
sub
sti
pop
cli
ins
in
rol
push
xor
mov
xchg
mov
mov
mov
or
add
test
rol
aam
neg
add
mov
mov
popa
and
jae
das
out
fs
dec
iret
dec
jmp
and
les
shl
and
imul
(bad)
aam
ja
and
ja
movs
mov
not
push
and
dec
das
popf
jg
ja
cmp
mov
fwait
push
xor
mov
push
or
inc
xor
mov
push
push
mul
adc
cmp
(bad)
jmp
add
or
stc
stos
pop
neg
dec
shl
(bad)
dec
mov
outs
cwde
cmp
push
sub
pop
mul
ret
sub
jbe
sbb
adc
cmp
mov
sbb
js
ret
dec
int
mul
jp
jle
js
or
or
dec
retf
lea
cmp
addr16
dec
std
retf
stos
call
shr
or
data16
pop
mov
dec
retf
cmps
jnp
retf
dec
cmp
xchg
lock
mov
call
push
rol
fwait
add
shufps
lds
xor
cwde
stos
addr16
loope
jae
pop
cwde
lods
mov
jmp
mov
mov
push
std
je
xchg
movs
mov
jmp
mov
jo
inc
jno
loop
adc
dec
fcomp
retf
pop
out
pop
les
xor
mov
fwait
add
repz
int3
and
mov
add
aas
sub
push
cli
test
and
ja
sub
rol
add
mov
mov
outs
fdivr
loope
push
mov
shr
adc
and
or
cmp
dec
or
mov
xor
jmp
or
xor
fadd
mov
inc
xor
lods
movs
data16
lea
xor
into
pop
leave
add
xchg
arpl
sbb
icebp
cwde
pushf
inc
cmp
push
fadd
cmp
and
xor
and
adc
cmp
add
and
jns
outs
cmp
(bad)
jp
cli
pop
stc
movs
and
xchg
ja
adc
cli
mov
pop
fnstsw
or
ins
jmp
call
test
cmp
stos
ins
gs
mov
std
je
or
aam
imul
mov
jp
or
fdivr
loope
bound
hlt
push
mov
das
fst
(bad)
pop
or
xchg
test
push
ret
fild
sbb
xchg
stos
outs
out
xchg
dec
mov
mov
xor
enter
sub
jbe
cli
mov
pop
or
cmp
sbb
jl
aad
ins
outs
jae
add
loope
xchg
js
fnstsw
test
mov
jl
stc
mov
arpl
leave
dec
sahf
or
or
pop
rcr
push
and
sar
sub
outs
push
ins
ss
push
(bad)
std
push
call
xchg
cmp
loop
test
mov
pushf
or
and
bound
fimul
lea
loopne
pop
retf
ret
inc
lods
test
xchg
push
fstp
ins
xchg
aas
xor
cmp
jp
out
out
push
mov
dec
lea
mov
shl
mov
lods
jbe
out
js
dec
xor
jns
xor
mov
popa
repnz
imul
mov
int
out
cmps
push
mov
arpl
pop
stc
push
bound
and
mov
fsubr
xchg
dec
test
pop
iret
ds
push
retf
rcr
or
jne
push
sti
jl
inc
scas
in
jnp
ins
jmp
xchg
dec
fstp
and
cmps
js
nop
cs
adc
pushf
inc
mov
data16
lahf
xor
js
or
mov
aam
and
je
mov
jg
jne
sar
std
repz
(bad)
pusha
(bad)
jo
in
out
sahf
cmps
xchg
pushf
stos
retf
sti
push
ret
fidivr
inc
idiv
mov
arpl
mov
jae
call
sbb
outs
fsubr
mov
(bad)
mov
push
ins
gs
mov
call
scas
mov
pop
jmp
and
mov
in
loop
sbb
jle
push
ret
mov
fld
ds
movs
xor
imul
sbb
outs
shl
sbb
(bad)
stos
jmp
rcl
sbb
sub
dec
aam
push
push
test
in
mov
pop
shr
in
ret
inc
in
aam
or
movs
push
clc
pop
cld
pop
mov
ss
(bad)
js
sub
push
xor
daa
adc
jp
and
loope
ins
push
pop
int3
push
xor
std
retf
mov
pop
std
xchg
mov
dec
sahf
mov
xor
push
mov
sub
and
jo
jns
adc
cs
stos
add
addr16
das
je
cmp
repnz
mov
push
fnstenv
cs
pop
daa
(bad)
mov
xchg
jbe
mov
add
xchg
mov
dec
or
add
int
jbe
or
add
or
fmul
and
inc
cmp
mov
adc
dec
add
mov
xchg
mov
ret
imul
(bad)
mov
cs
pop
dec
in
in
push
cmp
std
leave
test
and
pop
fdivr
addr16
jne
js
push
aas
aad
mov
dec
and
mov
loopne
scas
in
ja
mov
push
shr
mov
mov
jp
iret
clc
pop
sbb
cmp
je
jno
outs
mov
adc
arpl
xchg
arpl
jmp
jbe
sub
jno
mov
cmp
inc
lea
dec
(bad)
jg
push
xor
sub
add
aaa
rcr
mov
lea
cmc
movs
cwde
jge
int3
push
(bad)
push
shr
out
jb
ja
sbb
xor
mov
fistp
popa
popa
push
xor
sbb
jle
iret
cmp
outs
push
test
cmp
sbb
test
jns
dec
mov
js
and
mov
jb
mov
pop
xchg
mov
jge
xor
leave
jae
or
test
mov
sub
ret
hlt
ins
push
data16
and
sbb
add
int
mov
sub
movs
push
fld
cld
add
mov
test
addr16
mov
mov
mov
dec
stc
pop
aas
cwde
mov
jno
cmp
retf
pop
retf
xor
xchg
jo
repz
xchg
stos
stos
js
loope
mov
cmp
test
adc
cs
add
inc
bswap
ret
push
(bad)
xor
lock
pop
shr
sub
les
(bad)
into
xor
mov
xchg
jo
test
inc
adc
sahf
pop
xor
mov
cmp
xor
and
mov
and
add
jb
shr
popa
retf
push
in
int
or
push
call
loopne
cld
daa
shr
and
fwait
call
xchg
jae
mov
add
loope
repz
or
sti
cdq
arpl
xor
or
sti
mov
daa
fsubr
in
movs
(bad)
int
outs
or
dec
add
sbb
xor
add
lds
sar
loopne
sbb
xlat
js
in
scas
mov
inc
ss
jg
adc
sbb
fwait
mov
fdivr
inc
push
add
add
iret
sbb
aad
popa
enter
or
push
add
add
adc
cwde
jle
rcr
push
sti
dec
inc
jno
xor
xchg
fsub
mov
ret
pop
cmp
ja
ss
ins
test
out
ftst
loopne
mov
cdq
test
clc
daa
push
mov
push
enter
js
mov
xor
push
cs
cmp
mov
inc
jmp
jle
cwde
or
mov
daa
(bad)
pop
in
mov
add
mov
mov
add
sub
mov
sbb
xor
addr16
dec
pop
cmp
mov
jae
sub
cmps
push
and
mov
cli
pop
repnz
in
and
and
dec
add
(bad)
lds
pop
sub
mov
sbb
xchg
or
push
fs
mov
mov
pop
leave
mov
rcr
cmp
jo
lea
xchg
fnsave
sahf
int
jnp
mov
lock
call
push
ins
cmps
pop
pop
rol
lock
cld
xchg
mov
and
stc
shl
fldcw
aaa
sbb
movs
outs
into
or
pop
cmc
cmp
sar
cmp
(bad)
jae
loop
int
sbb
scas
(bad)
jmp
mov
(bad)
or
push
call
pop
xor
mov
jecxz
inc
outs
iret
das
adc
jmp
aad
inc
(bad)
retf
lahf
add
xchg
or
jp
xchg
int
cvtps2pi
xor
fnstsw
or
cmp
push
es
dec
pusha
adc
inc
xor
daa
shl
scas
cmp
xchg
mov
push
and
(bad)
leave
mov
mov
mov
loope
sbb
pop
daa
adc
jne
xor
xchg
(bad)
cwde
add
lods
sub
push
(bad)
mov
int
xchg
je
pop
jmp
inc
mov
cmp
fimul
fisttp
movs
pextrw
sbb
shr
sbb
sbb
in
mov
cmp
push
imul
cmp
rol
iret
repz
and
and
nop
imul
scas
in
addr16
test
inc
out
sub
out
ror
or
inc
in
sub
rcl
jns
(bad)
jecxz
or
lods
mov
mov
and
shl
sub
fidivr
dec
cwde
outs
dec
aas
xor
call
cli
ins
sar
mov
test
dec
add
xor
sbb
xchg
addr16
not
sub
push
jl
push
out
and
ds
not
(bad)
xchg
add
sbb
mov
xchg
fs
loope
mov
das
xchg
jo
jae
mov
movs
xchg
push
xor
pop
dec
test
inc
retf
test
sub
in
out
arpl
ret
inc
cmp
adc
add
aas
into
xchg
imul
fucomp
jecxz
cmps
sbb
xchg
ins
test
aad
xor
lock
cli
nop
xor
fild
les
add
imul
and
arpl
dec
sub
js
bound
sbb
mov
test
rol
jns
outs
int
lea
jmp
mov
les
xor
in
push
std
sbb
jl
fs
aaa
push
ret
jno
cmp
lods
inc
cmp
iret
repnz
cld
xchg
lods
cwde
jle
shl
mov
not
lahf
and
push
out
out
setb
push
inc
cmp
mov
and
shr
(bad)
imul
jp
jo
ja
sub
test
fdiv
loope
ins
inc
xor
pushf
outs
push
sub
ja
shl
inc
pop
sti
arpl
sub
xchg
inc
call
repnz
lock
test
xchg
in
pop
sub
hlt
cwde
jg
ins
xor
(bad)
jae
jge
pop
pop
cmp
aam
or
inc
mov
in
retf
mov
push
xor
movs
mov
retf
mov
lock
or
imul
sub
and
jo
push
sub
out
repnz
pusha
retf
jmp
push
sub
sub
sbb
mov
pop
std
lods
mov
push
sub
ds
shr
xchg
mov
jne
std
xchg
pushw
das
and
adc
cmc
pop
push
idiv
arpl
(bad)
mov
fist
inc
jmp
push
sub
enter
outs
shl
sbb
cs
imul
cdq
ins
hlt
mov
mov
mov
xchg
fs
push
fwait
mov
adc
or
retf
xrelease
(bad)
test
ffreep
mov
mov
mov
xor
mov
xchg
or
stos
sahf
enter
mov
and
outs
not
mov
or
or
cmc
nop
arpl
mov
movs
and
pop
ss
stos
test
dec
sti
gs
jg
mov
js
adc
fadd
cmp
sbb
bound
jnp
push
lds
(bad)
into
jae
test
mov
push
sub
pop
adc
jp
mov
cmps
(bad)
int
sub
and
retf
jbe
ret
sti
cmps
mov
sbb
rcl
jge
retf
sbb
add
(bad)
mov
mov
push
aaa
enter
mov
hlt
or
gs
and
push
stc
leave
jae
inc
mov
inc
pop
ds
enter
retf
sub
fdivr
lahf
mov
out
dec
xchg
mov
(bad)
dec
cmp
call
stos
pop
fwait
ins
lds
fiadd
or
loope
jbe
shl
pop
jmp
sti
aaa
push
or
inc
out
(bad)
out
loop
mov
test
mov
sbb
add
mov
in
out
xor
out
gs
sahf
jno
fsub
and
dec
scas
mov
int
add
jns
adc
lods
sub
xor
loopne
cmp
std
mov
outs
sbb
retf
pop
cld
retf
jno
or
jg
xadd
and
cmps
les
in
jg
shl
cmps
xchg
lock
das
sbb
or
inc
cmp
movs
pop
sub
or
imul
dec
fdiv
movs
pop
dec
add
cwde
je
push
sbb
adc
inc
xor
movs
pop
lds
retf
mov
shl
mov
scas
pop
bound
xor
jo
adc
stos
lea
iret
xor
cmp
ds
popf
outs
adc
fbld
imul
enter
cld
xchg
mov
ret
(bad)
out
push
xor
iret
lods
enter
cmp
mov
sub
jbe
and
mov
inc
in
dec
push
cmps
mov
pushf
lods
popf
dec
sub
aas
pop
cmp
mov
fdiv
xor
ret
push
sbb
add
test
paddw
dec
jmp
aam
lock
mov
pop
sub
cwde
sub
jne
jmp
sbb
dec
pop
sti
ja
or
jno
pop
ror
scas
mov
mov
xor
out
jmp
pop
push
clc
cmp
pop
inc
out
adc
enter
imul
pop
xor
pusha
enter
sbb
mov
loope
or
xchg
fs
xchg
(bad)
sbb
sub
adc
loopne
xchg
add
jmp
sub
cdq
jnp
mov
mov
push
imul
sub
xor
xor
pop
sub
fcomi
pop
outs
iret
fwait
mov
gs
and
je
sub
pop
cmp
lds
int3
mov
jle
cdq
mov
(bad)
pop
add
sub
and
sub
and
and
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
jno
and
inc
jbe
jae
and
adc
sbb
adc
adc
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
jno
and
inc
jbe
jae
and
adc
sbb
adc
adc
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
jno
and
inc
jbe
jae
and
adc
sbb
adc
adc
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
jno
and
inc
jbe
jae
and
adc
sbb
adc
adc
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
jno
and
inc
jbe
jae
and
adc
sbb
adc
adc
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
jno
and
inc
jbe
jae
and
adc
sbb
adc
adc
jb
and
inc
es
ja
adc
push
and
jb
and
inc
jg
jbe
je
and
and
adc
jo
and
push
and
and
and
and
sub
and
push
adc
adc
adc
and
and
and
and
sub
and
pop
and
js
and
cmp
and
add
push
dec
dec
inc
push
and
and
push
cmp
and
and
add
and
and
add
imul
and
and
and
bound
and
and
and
and
and
and
cmp
fisub
adc
and
and
and
ins
and
and
and
and
and
and
and
and
and
and
and
adc
and
and
and
and
and
aaa
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
fld
and
and
and
sub
std
and
and
and
and
and
and
and
xchg
and
and
and
and
and
and
in
and
lds
xor
fisub
or
sub
pop
es
sub
mov
xor
cs
mov
es
es
es
daa
cmp
and
daa
cmp
sub
js
xor
and
and
and
mul
je
es
daa
ret
daa
and
or
and
cmp
and
sub
es
add
and
cmp
and
push
and
sub
and
and
and
sub
and
and
sub
and
sub
xor
jmp
sub
movs
sub
and
sub
je
and
cmp
and
sub
and
and
jl
and
and
sub
and
sub
and
and
and
xor
sub
pop
sub
and
and
and
sub
es
sub
and
sub
sub
and
sub
and
and
sub
sub
and
cmp
and
or
and
sub
es
sub
sub
and
push
push
daa
and
cmp
and
cmp
and
and
and
loope
sbb
xor
in
sub
into
sub
xor
and
cs
daa
and
push
daa
and
push
daa
and
push
daa
and
in
std
and
and
and
and
and
and
and
and
and
or
pop
and
and
and
and
and
and
and
and
and
and
and
pop
and
and
and
and
and
and
and
and
and
and
and
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
adc
inc
and
and
and
and
outs
and
and
and
and
and
and
and
and
and
sub
pusha
and
outs
and
jnp
add
and
add
and
add
and
mov
and
movs
and
stos
and
mov
add
and
and
and
add
and
and
cmp
and
and
and
and
and
es
and
and
and
and
and
xor
or
aaa
and
and
xor
mov
and
and
xor
jne
or
and
pushf
add
and
and
sub
adc
add
and
and
sub
int3
add
and
and
ret
and
and
add
and
and
retf
and
and
cmp
and
and
mov
and
and
and
and
data16
push
and
and
and
and
xor
sub
and
and
and
and
and
add
and
and
cmp
and
and
test
and
and
and
pop
and
add
and
and
cmp
and
and
cwde
add
and
and
cmp
and
and
rol
and
and
cmp
and
and
enter
and
and
and
add
and
and
and
and
and
and
and
aaa
and
dec
or
and
and
and
and
or
and
and
and
and
or
and
and
and
and
and
and
es
and
and
and
ss
and
and
and
ss
and
and
and
ss
and
and
and
ss
and
and
and
xor
or
aaa
and
and
es
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
cwde
or
and
and
and
and
or
and
and
and
and
and
and
leave
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
cmp
and
and
or
and
and
sbb
and
and
and
and
and
daa
and
and
sub
push
and
and
and
and
and
and
xchg
and
and
and
xchg
and
and
and
xchg
and
and
and
xor
and
and
and
and
and
and
and
push
and
and
and
and
and
and
and
and
and
and
and
and
push
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
les
and
and
and
and
and
and
and
and
push
and
or
xor
sbb
int
push
and
int
adc
and
and
int
xor
add
int
xor
or
int
xor
add
xchg
push
add
inc
je
jl
inc
je
jb
push
xchg
jne
xor
(bad)
and
add
cld
out
fnstcw
sub
push
addr16
gs
data16
mov
mov
retf
sub
aaa
or
add
cmp
test
cli
cwde
scas
int3
jae
repz
fidivr
shl
adc
out
mov
mov
push
mov
cmps
les
push
xchg
das
addr16
ret
in
call
lds
aam
sbb
rcl
shl
dec
jg
out
push
jl
add
push
fs
xor
push
add
and
mov
mov
sahf
xor
shl
test
rcr
add
ret
jno
mov
rcl
stos
not
mov
loop
lods
inc
sbb
add
out
mov
out
mov
into
loope
mov
fidivr
shl
fcomp
lods
sbb
add
repz
imul
movs
addr16
dec
imul
in
loope
pop
inc
(bad)
in
mov
(bad)
daa
mov
(bad)
pop
mov
mov
pushf
dec
enter
jle
into
(bad)
stc
push
pop
jo
aaa
push
data16
(bad)
fcomip
xchg
mov
xor
adc
lods
adc
add
shl
adc
pop
push
icebp
rcr
ins
push
lods
aam
or
sbb
or
out
stc
in
ret
xor
movs
mov
fcomp
sub
bnd
inc
in
mov
dec
stos
ucomiss
fsubr
mov
fs
test
or
loopne
xchg
mov
mov
pop
fbld
jo
and
add
or
mov
xchg
idiv
pushf
hlt
xchg
cmc
push
pop
mov
pop
cmp
push
sub
cmp
xor
inc
mov
repz
cmc
or
cmp
cdq
scas
sbb
call
inc
ins
pop
loope
jne
cmp
and
push
aam
cdq
call
retf
mov
stos
cdq
test
sti
into
stos
pop
loop
inc
je
jbe
adc
popf
(bad)
call
outs
dec
sub
scas
adc
mov
jbe
sbb
in
fstp
lock
dec
sub
js
xor
nop
fldcw
jnp
sub
in
ficomp
inc
pop
sbb
div
out
add
(bad)
mov
lods
(bad)
not
mov
mov
int
adc
(bad)
pop
aas
pop
scas
les
mov
je
(bad)
into
and
push
push
fsub
push
shl
aaa
push
stos
cmp
sub
push
je
das
sbb
daa
adc
aad
xchg
fstp
cmp
adc
call
stos
fs
xchg
dec
clc
repz
adc
adc
ds
jnp
sub
or
shl
and
push
gs
or
inc
test
dec
and
jne
inc
outs
pop
arpl
fisub
or
adc
dec
fldln2
add
popf
lods
call
enter
loop
cld
retf
xor
mov
cld
adc
mov
inc
and
sbb
pop
(bad)
shl
cs
es
push
scas
lock
mov
and
adc
xor
dec
in
scas
enter
inc
out
cmp
aaa
add
and
sbb
push
jg
icebp
or
pop
je
pop
mov
xchg
not
inc
jno
je
push
test
inc
out
push
or
add
push
inc
(bad)
out
mov
push
sahf
in
xchg
and
jbe
lock
rol
mov
inc
jae
and
inc
int
iret
lods
mov
jp
or
mov
dec
js
sub
cmp
add
or
inc
push
loope
test
jecxz
aaa
cmpps
adc
fwait
jl
js
call
(bad)
cmps
mov
rcr
call
sbb
outs
daa
push
push
not
out
sbb
xchg
enter
mov
pusha
add
cdq
test
div
sbb
retf
aad
inc
jbe
(bad)
mov
mov
jecxz
ret
add
jne
inc
aam
mov
in
xchg
pop
out
dec
dec
stc
or
loop
mov
dec
(bad)
inc
jo
clc
shl
aaa
push
repnz
popf
jg
inc
and
jno
(bad)
stc
iret
shr
out
fild
pop
ins
mov
(bad)
retf
out
pop
test
retf
push
das
push
hlt
icebp
xchg
mov
xchg
mov
jp
and
xchg
not
sbb
pushf
jb
(bad)
push
scas
sbb
hlt
(bad)
icebp
push
xchg
clc
mov
repz
gs
sub
dec
icebp
shl
fucomip
fidivr
stc
fwait
stc
popf
jbe
xchg
mov
scas
and
mov
fcomp
mov
xchg
cmc
lds
mov
ds
sti
mov
adc
das
inc
jne
imul
push
cs
push
xor
mov
xor
std
aam
push
fs
mov
sbb
push
mov
or
retf
mov
inc
test
js
stos
sahf
test
ins
and
push
or
pop
mov
mov
jge
inc
xchg
ins
jl
push
ins
pop
ins
cmp
jb
mov
pop
fs
ins
pop
imul
mov
or
pop
cmp
pop
arpl
xor
(bad)
std
cli
shr
fsub
retf
enter
mov
xchg
repz
sbb
or
pop
lahf
sub
add
js
lea
mov
or
dec
sub
fist
cmp
mov
cmp
xor
scas
jo
xlat
pop
loop
fidiv
pop
cmp
retf
jo
dec
jbe
and
and
adc
(bad)
hlt
lds
mov
jnp
clc
dec
imul
pop
lahf
jne
pop
popa
push
sub
adc
enter
inc
pop
and
ins
pop
pop
or
adc
fnstsw
bound
aas
jmp
out
xchg
test
and
mov
xor
retf
clc
push
shl
or
xor
les
jb
scas
hlt
or
lds
ret
add
push
enter
rcr
push
push
xchg
pop
cli
mov
dec
sub
ins
lahf
inc
pushf
inc
leave
jo
xor
shl
mov
xchg
pop
lahf
cmp
push
movs
jmp
loop
jo
sub
inc
and
pop
call
imul
dec
movs
inc
aad
shl
dec
sub
jp
adc
adc
mov
std
les
cmp
push
out
pop
and
mov
jnp
jbe
scas
mov
sti
jmp
in
mov
mov
inc
ins
pop
loopne
jge
pop
scas
fwait
push
fs
xor
pop
adc
sahf
cld
pop
jle
mov
gs
jmp
adc
leave
test
or
scas
mov
daa
popa
and
int3
cmps
pop
fwait
dec
push
sbb
(bad)
jns
cmps
fwait
stos
xchg
push
in
push
ds
bound
popf
fstp
(bad)
repz
test
add
cmp
jno
adc
jmp
jmp
inc
or
fidivr
(bad)
sbb
and
and
xor
sahf
in
push
cmps
push
xchg
pop
in
mov
mov
inc
jne
dec
out
es
aad
int
inc
int
movs
(bad)
hlt
ret
repz
arpl
sub
sbb
adc
mov
cmp
add
fbstp
or
push
mov
clc
retf
enter
shl
mov
mov
retf
push
and
es
mov
dec
jae
int3
cld
cmc
jle
mov
in
lock
jp
mov
add
test
xchg
inc
jbe
je
nop
push
pop
imul
mov
cmp
retf
push
scas
fwait
push
fs
xor
or
fwait
test
pop
ins
outs
adc
add
cli
inc
sbb
and
jb
fs
cdq
mov
dec
fild
mov
lahf
xor
lods
mov
int
shl
ins
ret
clc
into
and
or
das
add
ins
dec
test
xchg
cmps
xchg
fdiv
push
pop
outs
arpl
sub
pop
fild
aad
adc
push
sub
js
(bad)
sub
inc
adc
stc
xor
cmp
idiv
stos
iret
jae
hlt
std
pop
sub
fcomi
or
cmps
mov
xchg
(bad)
jno
(bad)
test
mov
cmc
out
push
xchg
movs
or
sub
hlt
mov
jecxz
retf
shl
jnp
add
mul
dec
adc
cmc
add
fistp
xchg
mov
and
stos
mov
pushf
dec
sub
jl
push
in
push
inc
shr
and
cmp
pushf
out
or
add
jmp
adc
aad
add
ins
jno
push
test
and
push
xor
and
scas
mov
icebp
jnp
xchg
dec
out
adc
out
push
ds
inc
mov
push
mov
mov
mov
hlt
cwde
mov
or
in
mov
repnz
imul
daa
or
add
arpl
mov
xor
rcl
jno
(bad)
pop
or
mov
jbe
mov
jno
or
mov
call
sub
and
mov
cmc
in
aam
in
dec
stc
or
mov
xchg
div
xor
dec
adc
add
sbb
nop
sub
cmps
les
pop
cmp
xor
cmp
cmp
xor
jns
outs
mov
test
push
repnz
ss
cs
adc
test
out
add
xor
scas
call
mov
push
outs
mov
mov
bound
and
lea
add
push
pop
test
fisttp
push
sbb
push
popa
in
push
adc
sbb
inc
jne
and
sahf
out
movs
popf
lods
lahf
test
dec
jg
ja
push
adc
sub
dec
pop
pop
fwait
dec
jnp
jb
jmp
xor
mov
jecxz
sbb
adc
adc
push
popa
pop
loopne
and
stos
(bad)
test
daa
add
mov
fistp
push
shr
fcomp
sbb
jle
sub
dec
fdivr
cmp
movs
xor
pop
lahf
dec
and
dec
addr16
call
(bad)
mov
aaa
mov
(bad)
pop
and
or
(bad)
inc
jbe
pop
xlat
push
loop
cli
add
out
loope
js
repnz
sub
repz
inc
movs
rsm
mov
xchg
loop
sbb
sbb
push
in
push
pushf
inc
loope
int
jne
mov
mov
dec
aam
shl
mov
imul
js
test
jne
mov
mov
call
mov
mov
in
mov
fisttp
rcr
push
outs
pop
cmp
std
mov
and
xor
retf
or
cmc
xchg
ficomp
inc
fisubr
or
call
inc
aaa
jge
push
or
cmp
mov
addr16
jp
out
loope
jae
movs
xchg
mov
xchg
push
scas
in
in
fstp
(bad)
pop
(bad)
sub
test
or
je
jb
mov
daa
shl
push
loope
hlt
adc
xchg
xchg
mov
pop
and
inc
cwde
xchg
mov
pop
and
jbe
shl
ja
ret
or
and
data16
add
mov
jl
mov
mov
bound
xor
out
loopne
repnz
dec
sub
fldcw
xor
jle
js
mov
sub
and
out
fidivr
and
xor
mov
jg
ins
call
adc
mov
sbb
retf
daa
sbb
xchg
jns
pop
fadd
movs
in
push
inc
and
jmp
and
les
dec
inc
jnp
push
and
dec
cld
xchg
sahf
imul
ds
cmp
mov
fiadd
gs
jns
test
call
push
add
add
aaa
repz
inc
dec
cmp
and
imul
repnz
push
xor
push
xor
cmps
mov
in
inc
ins
push
push
mov
(bad)
lock
(bad)
dec
sbb
jno
test
push
ins
or
test
outs
shl
inc
jecxz
mov
daa
int3
call
mov
ret
imul
sbb
icebp
or
sbb
mov
mov
mov
call
pop
ds
fnstcw
sbb
mov
xor
scas
in
mov
inc
or
push
pop
mov
mov
push
cmp
je
add
rcr
mov
test
test
(bad)
in
push
mov
mov
cmp
jmp
push
jl
scas
sahf
sti
inc
lss
imul
adc
mov
lods
retf
cld
sbb
mov
inc
and
(bad)
out
dec
jg
sub
popa
fbld
dec
aad
std
iret
jne
mov
xchg
in
jbe
std
retf
mov
xor
add
push
lods
test
push
pop
rol
adc
xor
popa
push
repnz
adc
ins
aaa
pop
cmp
loop
dec
sbb
xor
dec
push
xor
pop
jbe
test
jnp
jle
cmp
adc
repnz
vcmpss
pusha
jno
fsub
pop
sbb
push
pop
or
lods
fistp
xchg
fidiv
pusha
dec
mov
cmp
sub
and
push
ds
sbb
and
(bad)
gs
jnp
push
mov
cmps
xchg
mov
ins
jbe
stc
jge
sahf
retf
leave
test
pop
fidiv
test
push
sub
lea
mov
add
ds
pop
call
les
in
div
xlat
aad
jp
fbld
shl
inc
mov
ret
scas
mov
lods
jl
ja
ins
adc
sar
cli
(bad)
in
ja
jle
loop
fst
mov
out
mov
loop
pop
in
and
inc
and
out
push
lds
cmp
pop
out
aaa
enter
(bad)
sbb
push
push
daa
(bad)
mov
(bad)
iret
mov
xor
cli
inc
adc
xchg
xchg
pop
imul
dec
sbb
out
xlat
jno
xchg
pop
or
daa
xor
xchg
and
xor
mov
sbb
push
xchg
mov
call
jle
ja
ret
in
daa
push
jae
cli
inc
pushf
dec
add
sub
icebp
pop
neg
and
and
sahf
adc
mov
sbb
movs
mov
clc
mov
pop
imul
and
cwde
ds
jne
and
fs
mov
push
push
mul
pop
icebp
sahf
jo
movs
xchg
not
fidiv
mov
and
mov
and
ja
cmp
pop
aam
(bad)
push
dec
fwait
test
inc
daa
push
and
xchg
push
mov
test
es
adc
in
xor
dec
mov
std
loopne
aaa
mov
lods
lahf
sti
leave
and
pop
aam
fwait
lahf
(bad)
mov
cs
jmp
xchg
xor
mov
in
dec
lds
out
dec
sbb
dec
jnp
lods
inc
mov
test
and
loopne
je
dec
jns
cmps
adc
mov
(bad)
test
mov
stos
inc
(bad)
jge
jmp
xchg
cmps
xchg
adc
test
(bad)
mov
iret
dec
sti
cdq
and
pop
cmp
sub
shl
sub
push
and
(bad)
xchg
xor
jo
jno
xchg
push
xor
add
xor
xlat
cs
and
add
dec
retf
dec
retf
push
into
jmp
xchg
sub
xor
mov
mov
cli
adc
xchg
loope
fdivr
fldz
fdivr
push
loope
push
cmpxchg
retf
cmc
xor
ja
stos
jle
(bad)
(bad)
lods
mov
mov
xor
(bad)
push
stc
mov
xor
mov
nop
mov
xlat
sbb
inc
cmc
mov
sub
loopne
fs
outs
sar
inc
sahf
dec
add
sbb
sbb
int
xlat
and
stos
or
sub
aad
(bad)
xchg
mov
das
gs
cmp
fidiv
js
mov
stos
sahf
and
daa
or
jb
cmp
push
xor
xor
jge
push
sar
rol
and
enter
mov
and
out
shl
shr
mov
sahf
inc
sbb
pop
mov
mov
and
dec
jnp
aas
or
frstor
inc
pusha
ds
outs
or
rol
jmp
mov
xor
clc
mov
scas
adc
push
cdq
or
out
(bad)
icebp
ret
fsub
xchg
test
std
dec
jge
sub
movs
popf
pop
out
fwait
mov
xor
or
push
jae
daa
mov
aaa
out
mov
dec
in
ja
xor
xor
scas
sbb
int3
and
xor
cli
(bad)
repz
jg
pop
mov
aam
xor
and
bound
aaa
push
mov
mov
jl
int3
(bad)
pop
je
jg
pop
iret
adc
jbe
idiv
addr16
cmp
hlt
mov
cmp
jle
xor
imul
sub
xchg
mov
daa
xchg
mov
cmps
xchg
scas
sahf
jb
push
add
shr
jne
cmp
push
xchg
xchg
mov
xor
xor
cmp
sbb
repz
jnp
es
mov
xchg
lock
aam
push
in
les
mov
mov
jl
bound
adc
inc
pop
jecxz
shl
test
sbb
xchg
(bad)
jecxz
test
jo
xor
dec
sub
lock
outs
or
gs
push
cmps
bndstx
dec
jl
ja
push
arpl
in
fcmovnu
mov
dec
int
int3
sti
arpl
outs
dec
ja
and
inc
iret
stc
retf
xor
mov
pushf
dec
out
(bad)
icebp
xchg
nop
inc
in
push
pop
outs
pop
cmp
adc
inc
jp
js
fcom
adc
push
ins
and
lds
rcl
pop
rcr
or
and
in
mov
mov
(bad)
sbb
mov
call
std
test
jp
xor
dec
push
fdivr
dec
sub
jge
pand
mov
iret
test
cmc
les
cmp
cmp
mov
jnp
(bad)
cmps
adc
jb
jae
xor
pop
jmp
or
or
repz
fistp
pop
sbb
les
jge
and
cmp
cs
inc
xchg
fisub
jns
sub
xor
jmp
loop
pop
adc
(bad)
xlat
in
shl
jno
xchg
jbe
jg
js
fwait
adc
mov
sub
sbb
popf
jecxz
push
push
mov
mov
jmp
out
add
inc
pop
mov
repnz
mov
xor
sub
imul
(bad)
inc
lea
dec
data16
xor
mov
jge
cmp
jge
outs
les
xchg
dec
repnz
inc
jmp
shr
push
fwait
in
cmps
cld
adc
mov
or
enter
lods
pop
retf
(bad)
mov
lods
xchg
je
nop
push
and
rep
in
dec
aas
add
adc
call
lods
push
push
cli
retf
pop
xor
mov
mov
mov
shl
inc
and
inc
push
repnz
jae
mov
inc
imul
jb
js
jmp
adc
retf
es
xchg
mov
test
loopne
xchg
pop
cmp
test
ss
addr16
lods
inc
call
aam
jl
jge
in
adc
xchg
push
aad
hlt
shr
and
inc
and
push
and
push
and
and
and
and
and
ins
and
inc
and
dec
and
and
inc
and
inc
and
push
and
and
and
and
and
and
and
and
inc
and
dec
and
inc
and
and
and
inc
and
mov
and
inc
and
dec
and
inc
and
and
and
and
and
and
and
and
jne
push
and
push
and
inc
and
and
jne
jae
and
imul
sbb
mov
and
inc
and
imul
add
add
add
add
sbb
mov
and
inc
and
dec
and
and
inc
and
inc
and
push
and
and
and
and
and
jb
inc
and
dec
and
push
and
inc
and
and
dec
and
and
inc
and
inc
and
push
and
and
and
and
and
and
and
and
inc
and
dec
and
inc
and
and
inc
and
and
sbb
mov
and
inc
and
dec
and
inc
and
and
and
and
and
and
mov
and
inc
and
push
and
and
push
and
dec
and
je
push
and
inc
and
inc
and
push
and
and
and
mov
and
dec
and
inc
and
push
and
push
and
and
and
jo
push
and
dec
and
dec
and
inc
and
and
and
and
and
and
and
jo
push
and
dec
and
dec
and
inc
and
and
inc
and
and
push
and
dec
and
add
push
and
and
and
and
and
and
and
jne
push
and
push
and
inc
and
and
jne
jae
and
imul
sbb
mov
and
inc
and
imul
add
add
add
add
add
add
sbb
ins
and
inc
and
dec
and
and
inc
and
and
dec
and
and
inc
and
push
and
push
and
je
dec
and
inc
and
sbb
mov
and
inc
and
dec
and
and
inc
and
and
and
and
and
and
and
and
jb
push
and
ins
and
push
and
dec
and
and
and
push
and
and
dec
and
dec
and
and
inc
and
mov
and
dec
and
and
inc
and
and
and
and
and
and
mov
and
dec
and
inc
and
push
and
dec
and
and
and
and
mov
and
dec
and
inc
and
push
and
dec
and
push
and
and
and
jae
inc
and
and
dec
and
push
and
and
and
and
and
and
ins
and
dec
and
and
dec
and
imul
push
and
dec
and
inc
and
jo
dec
and
and
pop
and
and
push
and
push
and
pop
and
push
and
and
inc
and
mov
and
dec
and
and
dec
and
imul
push
and
dec
and
inc
and
jo
dec
and
and
pop
and
and
and
and
and
and
and
push
and
dec
and
and
jae
push
and
push
and
and
outs
and
bound
inc
and
and
push
and
inc
and
push
and
inc
and
and
sbb
mov
and
push
and
dec
and
and
jae
push
and
push
and
and
outs
and
bound
inc
and
and
push
and
inc
and
push
and
and
and
and
and
jae
push
and
push
and
inc
and
dec
and
dec
and
outs
and
bound
inc
and
and
push
and
inc
and
push
and
and
inc
and
mov
and
and
imul
dec
and
dec
and
outs
and
bound
inc
and
and
push
and
inc
and
push
and
and
and
and
and
popa
and
and
push
and
inc
and
inc
and
and
dec
and
dec
and
push
and
push
and
inc
and
and
sbb
mov
and
and
push
and
inc
and
inc
and
and
dec
and
dec
and
push
and
push
and
and
and
and
and
jae
push
and
push
and
and
inc
and
popa
and
inc
and
dec
and
inc
and
and
and
and
inc
and
mov
and
and
push
and
dec
and
dec
and
push
and
dec
and
and
dec
and
push
and
and
and
and
and
jb
push
and
outs
and
dec
and
imul
inc
and
and
push
and
popa
and
inc
and
dec
and
inc
and
and
and
inc
and
and
sbb
mov
and
dec
and
dec
and
and
inc
and
inc
and
and
push
and
popa
and
inc
and
dec
and
inc
and
and
and
and
and
and
and
imul
inc
and
inc
and
and
dec
and
push
and
and
and
and
and
and
and
and
jae
push
and
push
and
dec
and
inc
and
and
dec
and
and
and
inc
and
mov
and
and
outs
and
imul
inc
and
dec
and
and
and
and
and
and
and
and
jb
inc
and
push
and
push
and
and
imul
inc
and
and
inc
and
and
sbb
mov
and
push
and
and
push
and
dec
and
inc
and
and
and
and
and
and
and
mov
and
and
jae
inc
and
and
dec
and
push
and
and
and
and
and
and
popa
and
and
push
and
push
and
push
and
and
and
dec
and
dec
and
and
and
inc
and
mov
and
and
push
and
push
and
push
and
and
and
dec
and
dec
and
and
and
and
and
and
and
inc
and
dec
and
inc
and
and
and
inc
and
mov
and
inc
and
dec
and
inc
and
and
and
and
and
and
push
and
and
push
and
inc
and
and
sbb
mov
and
inc
and
and
push
and
and
and
and
and
jb
push
and
outs
and
dec
and
imul
inc
and
and
and
inc
and
and
sbb
mov
and
dec
and
dec
and
and
inc
and
inc
and
and
and
and
and
and
and
ja
inc
and
inc
and
and
push
and
push
and
inc
and
and
sbb
mov
and
dec
and
je
dec
and
push
and
push
and
and
and
and
and
and
inc
and
push
and
and
dec
and
and
inc
and
and
dec
and
and
je
adc
jae
sbb
mov
and
inc
and
push
and
and
dec
and
and
inc
and
and
dec
and
and
and
and
and
and
jo
push
and
dec
and
dec
and
and
and
and
mov
and
dec
and
push
and
push
and
push
and
and
and
mov
and
push
and
and
inc
and
push
and
and
and
popa
and
push
and
dec
and
push
and
and
dec
and
push
and
pop
and
and
and
push
and
and
push
and
and
and
and
and
and
and
and
inc
and
push
and
and
and
and
and
and
and
arpl
dec
and
dec
and
dec
and
and
ins
and
arpl
popa
and
and
outs
and
sbb
mov
and
dec
and
inc
and
inc
and
and
and
and
and
and
mov
and
inc
and
push
and
and
and
mov
and
push
and
dec
and
push
and
and
mov
and
push
and
push
and
xor
inc
and
dec
and
push
and
inc
and
and
and
inc
and
push
and
arpl
inc
and
push
ins
and
bound
jb
pop
and
js
imul
jne
jbe
pop
and
dec
and
dec
and
pop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
and
dec
and
dec
and
jbe
inc
and
pop
and
and
and
and
and
and
and
and
dec
and
and
dec
and
pop
and
and
and
pop
and
adc
pop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
adc
adc
inc
and
and
inc
and
and
and
and
and
and
and
das
inc
and
inc
and
and
pop
and
and
and
add
inc
and
dec
and
add
jnp
pop
and
dec
and
je
push
and
dec
and
inc
and
push
and
jp
dec
and
inc
and
and
and
and
and
and
and
bndldx
jp
outs
and
and
and
inc
and
dec
and
and
dec
and
push
and
and
and
and
pop
and
push
and
sub
push
and
inc
and
and
popa
and
push
and
and
and
and
sub
and
jo
and
pop
and
xor
jne
jae
and
imul
and
outs
and
popa
and
and
outs
and
and
push
and
dec
and
and
dec
and
push
and
pop
and
and
mov
and
inc
and
push
and
add
mov
and
add
add
jne
push
and
and
and
xor
and
and
and
ins
and
and
and
and
and
push
jae
outs
and
je
ja
popa
and
and
and
inc
and
dec
and
dec
and
push
and
and
dec
and
and
push
and
and
push
and
inc
and
push
and
inc
and
push
and
dec
and
jl
jo
dec
and
and
dec
and
push
and
and
push
and
and
and
and
inc
and
dec
and
ins
and
popa
and
and
and
pop
push
and
jg
arpl
jne
jb
jb
and
je
jg
jne
jae
and
jl
jae
dec
and
push
and
inc
and
inc
and
and
dec
and
inc
and
inc
and
jl
ins
and
inc
and
dec
and
dec
and
push
and
and
dec
and
and
push
and
and
push
and
and
and
push
and
inc
and
and
ins
and
mov
and
jns
jg
arpl
jne
jb
jb
and
je
jg
jne
jae
and
jl
jae
dec
and
push
and
inc
and
inc
and
and
inc
and
dec
and
dec
and
push
and
and
dec
and
and
push
and
and
push
and
inc
and
push
and
inc
and
push
and
dec
and
jl
jo
dec
and
and
dec
and
push
and
and
push
and
and
and
push
and
inc
and
and
and
dec
and
inc
and
and
adc
and
adc
and
adc
and
dec
and
dec
and
inc
and
dec
and
and
push
and
inc
and
and
pop
and
and
inc
and
push
and
push
and
pop
and
and
popa
and
push
and
and
dec
and
dec
and
and
pop
and
and
push
and
inc
and
dec
and
push
and
and
pop
and
and
adc
and
push
and
push
and
inc
and
and
pop
and
and
push
and
and
and
das
push
and
dec
and
inc
and
and
xor
dec
and
inc
and
dec
and
push
and
and
data16
inc
and
and
push
and
das
ja
jo
and
and
jb
outs
and
outs
bound
add
arpl
add
and
and
add
data16
and
add
add
popa
and
and
add
arpl
add
and
and
add
data16
and
add
add
popa
and
and
add
arpl
add
and
and
add
data16
sub
and
adc
pop
and
and
and
and
and
push
cs
xlat
adc
xchg
ret
adc
pop
and
xchg
pop
jl
cmp
test
pop
xor
sub
and
and
and
and
and
and
sub
es
sub
and
xor
daa
es
sub
and
xor
es
xor
and
xor
es
xor
sub
xor
sub
xor
and
and
xor
and
xor
add
and
add
sub
and
xor
and
and
xor
and
and
and
adc
and
xor
and
xor
and
and
and
xor
and
and
and
es
and
cmp
sub
and
sub
and
and
and
and
and
xor
sub
cs
and
cmp
xor
or
xor
and
and
cmp
and
sub
sub
xor
sub
and
and
and
sub
sub
and
sub
sub
and
sub
and
and
cmp
sub
and
and
sub
and
cs
cmp
sub
add
and
and
and
and
and
cs
and
sub
je
dec
push
dec
inc
push
inc
daa
sbb
adc
adc
adc
and
and
and
xor
sub
xor
sub
xor
xor
xor
xor
daa
and
sub
daa
and
sub
and
xor
and
xor
add
and
xor
and
ins
pop
push
popa
push
push
dec
dec
inc
inc
push
dec
dec
dec
and
xor
and
ins
pop
push
ja
inc
jae
push
push
dec
inc
inc
push
and
xor
and
ins
pop
push
arpl
push
push
push
inc
push
and
sub
and
ins
pop
push
jne
inc
push
and
and
and
and
and
and
and
and
xor
and
xor
and
and
and
and
and
and
add
cs
and
adc
pop
push
push
inc
dec
push
ja
inc
push
jae
push
push
dec
inc
inc
push
push
jo
dec
push
dec
inc
dec
dec
push
push
jae
inc
push
push
dec
dec
inc
dec
push
jo
dec
push
dec
inc
dec
dec
xor
inc
inc
push
inc
jg
imul
inc
jg
xor
push
dec
push
inc
jg
imul
inc
jg
and
and
xor
and
and
and
and
and
and
and
and
and
sub
and
push
and
and
cs
and
xor
and
xor
sub
and
and
sub
and
sub
and
and
inc
add
and
mov
cs
and
and
mov
add
and
mov
and
mov
xor
and
and
cs
and
cmp
cs
sub
cs
cs
cs
xor
inc
and
xor
add
xor
and
and
and
cmp
and
and
xor
and
dec
and
and
and
xor
sub
and
mov
loope
and
cmp
add
and
mov
and
mov
xor
jge
xor
cs
cs
xor
xor
xor
xor
cs
cs
cs
dec
cmp
and
xor
cmp
and
and
cmp
sub
and
and
daa
add
and
xor
sub
and
mov
and
sub
daa
and
jge
and
dec
and
and
jge
add
xor
xor
cmp
daa
and
xor
lds
and
cmp
and
cs
daa
and
cmp
and
cs
and
sub
xor
cmp
and
cmp
and
sub
mov
and
cmp
and
sub
and
xor
cmp
or
sub
xor
and
cmp
sub
sub
sub
sub
cmp
jge
add
and
mov
and
mov
and
and
sub
and
sub
and
and
and
and
je
ss
inc
push
outs
dec
dec
gs
inc
inc
push
push
dec
dec
dec
je
push
dec
push
push
and
and
(bad)
and
and
and
and
and
inc
and
and
and
and
and
and
and
and
and
and
and
and
and
lock
and
and
and
and
and
and
jg
dec
push
gs
inc
ins
inc
dec
dec
and
inc
dec
push
inc
inc
push
inc
dec
dec
and
and
and
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
xchg
push
add
lock
xchg
in
and
push
shl
cmp
inc
jp
jae
jno
call
test
(bad)
shl
push
shl
sbb
js
ret
cmp
test
adc
adc
mov
xor
sbb
sbb
fldl2e
mov
dec
cdq
(bad)
pop
jmp
(bad)
sbb
mov
mov
std
shr
fdivr
repz
sub
jmp
or
ds
out
mov
sbb
xchg
movs
fldcw
imul
or
aam
add
xchg
not
jmp
mov
sub
fucomi
nop
mov
lods
dec
outs
push
outs
or
mov
xor
xor
jge
xchg
cmps
ret
push
sahf
dec
inc
je
and
shl
adc
jp
xchg
mov
shl
daa
jae
cs
cld
into
out
push
cmp
bound
addr16
test
push
ret
xor
icebp
inc
out
fimul
ss
in
aam
scas
(bad)
push
and
mov
push
lahf
add
adc
out
sahf
stc
retf
scas
or
das
(bad)
into
jbe
xchg
movs
pop
lahf
cmp
ja
and
push
pushw
xor
enter
(bad)
mov
xor
xor
int
mov
fstp
mov
mov
in
not
push
mov
fist
fadd
hlt
add
icebp
mov
xchg
pmaddwd
aam
call
or
mov
jl
mov
pop
ds
or
add
or
cmovbe
inc
es
test
dec
mov
lods
jp
xor
inc
test
hlt
nop
movs
loopne
xor
hlt
pop
cld
into
cli
adc
jae
lods
test
and
adc
call
adc
dec
push
inc
icebp
ret
cmps
adc
jmp
shl
add
push
xor
add
scas
jae
enter
mov
dec
movs
jmp
xor
dec
mov
iret
movs
fmulp
cld
loopne
cld
test
or
push
cmps
call
gs
jge
jns
mov
inc
sbb
mov
xchg
inc
js
cmc
and
in
fwait
dec
ja
mov
aaa
sub
xor
neg
sahf
stos
shr
dec
mov
push
popa
ins
dec
mov
mov
jo
push
repnz
and
stos
std
or
inc
gs
movs
ins
mov
mov
sbb
inc
loope
call
inc
leave
xchg
ds
cmc
mov
pop
sub
xor
popf
push
popfw
dec
shl
push
mov
inc
sbb
cs
jmp
jl
mov
push
je
lods
mov
repnz
ja
jno
push
arpl
cmc
inc
jno
dec
mov
or
shl
adc
xor
adc
out
iret
mov
dec
sub
mov
ins
arpl
cmp
addr16
fsubr
push
aam
nop
adc
pop
movs
xchg
not
sub
shr
shl
aam
xor
adc
jmp
push
pop
mov
test
shr
jnp
jl
call
test
sub
push
retf
sbb
shl
mov
sbb
in
add
jb
adc
retf
test
sbb
je
jae
or
fistp
ins
(bad)
int
(bad)
je
nop
cli
retf
sti
cwde
dec
push
test
xchg
cmp
jns
enter
aam
test
clc
es
daa
inc
mov
aaa
fcomp
stos
cdq
dec
stos
sub
inc
jg
arpl
cmc
les
clc
lahf
(bad)
fwait
inc
sub
repnz
mov
fsubr
and
pop
and
sub
mov
movs
sbb
call
sbb
call
outs
or
in
mov
cwde
lods
xchg
bnd
and
int
mov
loopne
in
sub
xor
xchg
cs
popa
fucomp
xor
xchg
cmps
nop
mov
pop
xor
push
sbb
sub
retf
cli
lahf
sbb
xor
add
je
cmp
mov
pop
lock
in
mov
cs
cld
cdq
mul
(bad)
aam
test
adc
test
adc
xchg
mov
scas
cmps
inc
in
dec
push
ja
jne
jo
jb
ja
test
push
dec
jp
dec
mov
ins
pop
mov
and
sub
mov
mov
xor
scas
loopne
test
call
mov
mov
(bad)
sbb
lods
fwait
stc
int3
inc
outs
mov
or
pop
inc
test
pop
jne
outs
or
dec
xor
test
inc
dec
(bad)
pop
push
dec
dec
jnp
je
xor
jp
stos
fstp
jmp
pop
movs
aas
add
aam
inc
mov
lock
sub
sub
lahf
push
add
leave
mov
aaa
add
data16
cmps
enter
xchg
add
mov
mov
pop
lahf
mov
call
jmp
sub
cmp
outs
or
sub
add
dec
jp
std
retf
inc
fadd
or
gs
ret
add
popf
lods
sbb
scas
xchg
int3
add
fld
xchg
outs
pop
cmp
dec
jge
xchg
mov
popf
fnstsw
pop
std
jnp
and
mov
imul
inc
jae
dec
mov
(bad)
jns
out
out
xor
adc
fsubr
mov
loop
in
mov
lods
movs
xchg
movs
xlat
cmc
pop
ret
cmp
cmp
xchg
hlt
(bad)
or
dec
fild
paddsb
add
sub
xor
movs
les
xchg
call
or
retf
popf
std
pop
fidivr
mov
xor
sbb
(bad)
xchg
mov
stos
pushf
scas
into
xor
call
jbe
fisubr
jno
xor
mov
dec
jns
inc
je
mov
call
push
fist
int3
add
pop
(bad)
sub
jmp
js
aas
fs
jge
xor
inc
int
pop
push
bound
jp
push
stos
ret
mov
push
lods
add
lahf
scas
test
pop
(bad)
popa
push
popf
addr16
shl
aad
pop
aaa
jg
mov
nop
not
add
mov
lahf
push
and
cmps
rcr
and
sbb
div
movs
pop
push
pop
cmp
jmp
test
mov
pop
xor
mov
jns
jle
mov
jmp
dec
leave
mov
das
mov
xchg
hlt
leave
cmps
lahf
push
and
inc
mov
and
xchg
frstor
push
cmc
mov
pop
xor
cli
lods
rcr
loopne
ss
sub
mov
std
int3
call
inc
xchg
sub
push
adc
pop
in
dec
sbb
xor
xchg
pop
add
ja
xchg
out
pushf
repnz
repz
(bad)
das
push
xchg
mov
xor
mov
xchg
push
into
xchg
mov
nop
or
ret
shr
jle
sahf
push
bound
cmp
lods
ficomp
inc
sub
js
test
test
pop
cmp
inc
sti
xabort
ror
jmp
inc
pushf
iret
es
test
je
mov
xchg
mov
repz
cmp
ret
mov
push
sub
inc
mov
scas
push
je
add
aad
sti
lahf
sub
sub
and
fdivr
mov
cmp
ins
dec
ja
(bad)
les
les
xor
pop
jp
dec
sub
loope
pop
dec
sub
cmp
dec
jge
mov
neg
fadd
retf
mul
pop
shr
scas
cli
iret
add
jbe
xor
jnp
repz
popa
xchg
push
gs
mov
iret
sti
push
in
and
xor
sub
lea
jecxz
out
stos
xchg
jbe
in
addr16
jl
push
or
cld
xchg
jecxz
adc
sub
add
mov
out
xchg
mov
ja
sahf
loopne
sub
inc
std
lea
mov
inc
jno
sub
lods
leave
inc
int
pop
sub
ds
rcr
pushf
mov
pop
mov
inc
jb
sar
dec
xor
mov
inc
data16
mov
out
call
sti
retf
addr16
fs
int3
shl
add
icebp
xchg
sub
ror
cdq
inc
jo
sub
into
push
mov
add
mov
mov
sub
sub
call
mov
stos
enter
dec
outs
mov
aaa
push
into
jecxz
mov
daa
pop
arpl
loopne
loope
jmp
pop
ins
pop
ds
adc
retf
push
loope
and
(bad)
push
loopne
jb
ja
pop
and
xor
push
adc
lahf
jecxz
stos
push
data16
lock
ja
jno
(bad)
mov
push
xor
les
jnp
retf
mov
test
fsubrp
fsub
dec
clc
and
mov
push
repnz
jmp
push
xor
mov
adc
pop
in
sbb
aas
add
add
lods
add
push
xor
mov
pushf
test
sub
jne
cld
push
inc
ins
push
loope
and
jo
add
dec
jnp
retf
pop
inc
jo
jne
cmp
clc
and
xor
cmp
pop
cmp
cmp
cmp
cmp
mov
scas
fwait
dec
aaa
leave
add
or
or
sub
add
cwde
mov
jno
xchg
mov
imul
mov
mov
retf
or
mov
mov
out
test
shl
cs
inc
jo
xchg
dec
lods
mov
or
xor
fist
or
and
dec
mov
in
cmp
enter
stc
fs
movs
pop
sub
or
xchg
div
popa
push
mov
push
gs
loopne
inc
retf
imul
stos
(bad)
out
in
add
push
sar
imul
xchg
sahf
scas
xchg
mov
sub
add
pop
test
aam
push
in
adc
sub
jg
mov
rol
sub
shl
or
ins
adc
inc
mov
jmp
sub
mov
xlat
in
aaa
pop
dec
stos
shl
sub
call
mov
je
inc
jns
sub
leave
icebp
fcom
or
lods
shl
aad
mov
sbb
adc
xchg
mov
xchg
inc
push
mov
mov
fcmovnb
test
mov
push
xor
and
inc
adc
lea
xlat
out
fistp
or
popf
scas
push
jno
or
dec
jb
xor
sbb
adc
push
popa
pop
cmp
jecxz
out
lock
cmp
cmp
or
cwde
cwde
xchg
movs
shl
add
repz
jp
test
mov
out
add
push
or
jnp
mov
push
pop
daa
sti
jle
(bad)
sbb
inc
mov
dec
jl
addr16
ss
fs
or
lods
pop
xor
lods
into
inc
imul
cld
test
sub
mov
xlat
sbb
add
loop
mov
cmp
inc
iret
jmp
cld
icebp
inc
jb
icebp
jge
hlt
vmovd
clc
sahf
cld
or
(bad)
mov
mov
xor
je
out
out
mov
dec
push
bound
cli
call
mov
sub
jnp
inc
jns
inc
jno
sub
mov
fidivr
xchg
nop
loop
fist
jge
add
push
addr16
push
lahf
mov
es
or
xor
inc
xlat
adc
mov
fnstcw
xlat
call
test
out
adc
push
xor
test
out
add
push
xlat
push
popa
and
push
mov
pop
add
cmp
cmp
out
mov
and
mov
pusha
ret
test
lods
lahf
stos
push
jb
daa
inc
dec
shr
sub
and
leave
sti
loopne
and
popf
lods
and
inc
daa
(bad)
into
add
cdq
cli
cdq
shr
cmp
mov
ffree
in
addr16
inc
test
ret
xor
out
xor
out
fld
sub
imul
sub
jg
lods
sbb
adc
pop
(bad)
cs
jg
call
and
mov
aad
push
bound
clc
dec
sub
xor
sbb
iret
dec
leavew
fdiv
push
bound
xor
retf
out
mov
cwde
dec
test
std
retf
cld
and
cmp
js
xor
or
gs
ss
adc
ins
pop
cmp
lahf
test
call
cmp
pop
call
or
fucomi
vpcomq
and
movs
pop
fidivr
and
jmp
inc
jno
inc
lock
test
in
ja
jbe
cmovb
call
mov
(bad)
mov
lods
loopne
(bad)
pop
ins
lahf
not
loop
cld
es
test
lahf
call
sub
test
test
std
(bad)
jae
inc
mov
push
repnz
jp
enter
nop
hlt
(bad)
(bad)
std
push
(bad)
out
cmps
xchg
shr
xor
leave
push
jb
and
and
mov
ret
xchg
jecxz
ror
nop
sub
adc
pushf
lods
icebp
mov
adc
xchg
leave
fnsave
add
stos
out
mov
pop
cmp
in
(bad)
call
adc
mov
add
adc
pop
xor
in
sub
std
int
jns
ds
fcomp
xchg
cmp
pop
cmp
jmp
mov
push
(bad)
std
inc
inc
jo
and
push
cmp
jle
jo
int
pushf
stos
jae
xchg
mov
dec
push
xlat
outs
pop
gs
add
mov
cdq
add
bound
lock
movs
inc
loopne
jge
mov
xchg
enter
test
sbb
sub
dec
sub
dec
cs
mov
cmp
jp
daa
ins
mov
(bad)
xor
fild
repnz
jg
fs
inc
jae
cmp
addr16
enter
pop
pop
outs
pop
imul
sbb
fistp
xchg
sub
pop
fs
dec
inc
jb
jnp
mov
movs
xchg
stos
int
aad
ins
arpl
jmp
out
fbstp
or
jns
hlt
(bad)
and
dec
cmc
inc
sub
(bad)
movs
lea
mov
jp
jmp
stos
iret
inc
ror
sbb
out
jl
add
out
int
dec
imul
xchg
jle
fsubr
popf
je
and
sbb
ftst
push
bound
iret
loope
add
pop
push
retf
jp
inc
xchg
neg
push
(bad)
mov
xor
(bad)
clc
popf
mov
pop
mov
adc
push
out
mov
inc
mov
sahf
cmp
test
and
daa
xor
mov
jbe
adc
adc
jmp
fwait
leave
stos
int3
sti
cwde
jecxz
mov
and
cmp
cmps
push
jb
hlt
push
cmp
ret
addr16
fisubr
in
xchg
sub
int3
inc
inc
imul
int
ins
(bad)
xor
in
(bad)
hlt
push
and
and
out
jns
mov
lock
dec
push
les
dec
xor
pop
lea
jmp
cli
inc
jbe
cmps
add
adc
outs
mov
dec
cs
sub
xchg
cmp
sbb
dec
sub
popa
pop
cmps
cdq
inc
int
fucomi
fidivr
mov
nop
cmps
imul
test
or
mov
(bad)
stos
iret
sti
test
sbb
push
xor
mov
inc
mov
push
jmp
fsub
test
js
jge
scas
int
dec
add
jns
cld
shl
pop
push
sub
or
std
adc
xlat
and
fs
mov
xchg
fwait
mov
push
adc
es
and
sub
xor
xchg
cmp
stos
in
adc
xor
cmp
enter
ins
and
daa
dec
jbe
call
adc
mov
dec
sub
jo
mov
mov
xchg
ds
fstp
pop
sub
popf
push
cmp
repz
sub
push
mov
cli
mov
adc
jmp
dec
cmps
cdq
sti
loopne
test
test
jecxz
cmp
idiv
imul
test
enter
xor
mov
bound
mov
xor
mov
(bad)
cld
movs
pop
ins
pop
push
add
push
xor
test
cmp
cmp
loop
stos
jae
or
jnp
pop
jne
sti
nop
into
dec
xor
xor
(bad)
jb
mov
(bad)
mov
or
test
mov
dec
das
mov
outs
mov
jmp
mov
xchg
pop
inc
pop
xor
jecxz
ret
cmps
ins
pop
push
cmp
cmp
or
jg
in
or
sub
pushf
add
sbb
dec
push
ja
shl
mov
dec
cdq
cli
jbe
js
mov
daa
adc
jmp
mov
js
leave
call
scas
fwait
push
xor
or
aad
fucomip
cmp
xchg
pop
push
xchg
cmp
cmp
cli
into
shr
dec
call
and
inc
inc
repnz
cwde
std
leave
add
cwde
jns
cld
(bad)
xor
xor
gs
imul
push
jo
and
and
ror
cmp
xor
adc
lods
call
dec
cli
jne
mov
fist
test
sub
popf
xchg
jo
leave
cmp
xor
pop
gs
ds
fucomp
pop
imul
call
sbb
stc
popf
test
cmp
popa
fucomi
fisub
push
xor
rcr
push
loopne
cmp
fnstcw
push
mov
fwait
(bad)
adc
push
(bad)
jmp
mov
jmp
inc
daa
fisub
xor
clc
fcom
push
xor
das
fsub
sub
out
fcomp
int
jmp
pop
add
sbb
movs
xchg
cmp
adc
fadd
lds
or
jnp
jbe
or
pop
mov
loop
push
popa
xchg
call
jecxz
loope
ins
pop
push
scas
int3
inc
fadd
mov
es
gs
pop
aas
cli
inc
aaa
shl
dec
xchg
mov
mov
jo
sub
mov
inc
jb
cmp
outs
sub
ror
cmp
mov
push
mov
cdq
scas
push
jg
inc
daa
adc
push
imul
(bad)
mov
repz
in
or
mov
idiv
aam
mov
add
and
clc
stos
repz
into
sti
out
into
add
sbb
mov
push
cmc
dec
jg
dec
jb
mov
mov
test
mov
mov
xchg
push
cld
les
sub
jle
cmp
sbb
pop
call
movs
mov
mov
jge
push
out
sar
mov
sub
pop
xor
(bad)
xchg
fsubr
call
cmp
xchg
cmp
fild
mov
aad
jg
xor
std
jo
mov
mov
mov
cmp
popf
data16
inc
in
leave
add
bound
jo
cmps
std
pop
mov
aas
adc
mov
ins
cmp
daa
ret
clc
or
xor
ret
pop
inc
mov
cmp
push
jo
mov
repz
repnz
in
nop
cmc
mov
std
jmp
mov
xchg
cmp
sbb
popf
lods
dec
jp
into
xlat
popf
pop
and
or
xchg
cmc
ret
sub
cmc
push
ss
mov
rcr
or
push
sbb
mov
pop
mov
push
clc
iret
std
jmp
out
out
popf
scas
cdq
inc
imul
push
push
jl
out
xlat
add
xchg
push
add
lea
push
fs
push
sahf
sub
sbb
cmp
push
sahf
ins
inc
bound
jne
js
shr
fs
jae
sahf
sub
lea
xor
jmp
shr
jp
(bad)
mov
push
jmp
enter
mul
xchg
mov
xchg
push
popf
arpl
xchg
mov
mov
int
outs
cmp
push
cwde
adc
push
arpl
jne
int
fist
push
ficomp
push
ret
mov
jo
mov
sbb
push
sbb
lods
cld
jle
pusha
pop
cmp
ret
pop
repz
shl
shr
add
inc
aas
mov
lock
sub
(bad)
xor
aad
add
sub
out
sahf
dec
adc
in
mov
adc
cmp
cmp
cmp
test
xor
or
xor
test
xor
mov
jno
sbb
push
jne
sub
ins
adc
add
mov
jg
int
cmps
(bad)
xlat
daa
jbe
fidivr
inc
scas
cli
lds
addr16
xor
stos
add
xor
stos
push
pcmpgtd
mov
scas
jecxz
mov
add
test
jbe
xchg
xor
cmps
ja
out
xchg
xchg
(bad)
stos
rcl
loopne
sbb
pop
fldcw
lea
or
sar
imul
cmp
mov
cmp
lock
jmp
lods
pop
outs
xor
call
shl
out
mov
loopne
push
mov
mov
in
xchg
sbb
test
loopne
in
bswap
cmc
loope
mov
inc
loope
push
xor
mov
jo
sbb
sbb
mov
and
jmp
mov
out
xchg
cmp
sbb
out
daa
xchg
stos
cmps
cwde
xchg
lods
test
cmp
dec
push
daa
push
ss
mov
xor
aam
mov
hlt
movs
shl
mov
(bad)
adc
inc
(bad)
std
rcl
push
add
sbb
jbe
xchg
pop
pop
and
mov
rol
mov
xchg
adc
aaa
add
cmps
add
cli
retf
pop
cld
rol
and
mov
je
and
(bad)
jmp
cmp
fiadd
add
and
or
(bad)
jnp
das
push
sbb
sar
xchg
jg
fwait
xchg
in
fucom
adc
fiadd
cmp
lock
jb
lock
(bad)
mov
test
adc
movs
mov
jecxz
cwde
mov
ins
push
cmps
aad
stos
add
out
cmp
(bad)
push
jns
call
shl
in
push
outs
fs
aas
adc
leave
(bad)
daa
pop
dec
inc
and
push
jge
aam
mov
(bad)
not
add
das
ret
pop
test
sti
loope
ss
sti
loopne
out
xlat
jecxz
and
mov
or
ins
adc
stc
cmps
leave
outs
lods
lock
push
cmps
mov
jns
pop
ins
outs
sar
push
lahf
mov
push
mov
(bad)
cli
cmps
pushf
ficomp
(bad)
arpl
mov
ja
out
sbb
jnp
adc
adc
xchg
imul
push
cs
jl
stc
stc
retf
das
sar
in
inc
call
jbe
fist
mov
pop
push
mov
pop
aas
xor
(bad)
retf
icebp
pop
js
pop
ins
lahf
mov
push
jle
xor
int3
loop
jmp
in
cmc
xor
dec
in
push
sbb
push
push
jbe
and
stos
jge
or
sbb
inc
push
mov
cmp
fs
jbe
or
dec
jnp
xchg
jae
pop
sti
ds
sub
ins
dec
jns
mov
mov
aaa
scas
cmc
ret
lahf
cmp
popf
ret
outs
(bad)
lods
nop
add
leave
pop
ins
xchg
and
sti
shr
xchg
cwde
and
dec
imul
(bad)
sti
cdq
mov
aad
(bad)
loop
xchg
cdq
(bad)
mov
push
xchg
imul
cmp
pop
je
jo
adc
adc
sub
pop
scas
pop
data16
jecxz
mov
inc
add
lea
(bad)
mov
(bad)
cs
pop
jns
sub
sub
jg
jl
inc
jecxz
sbb
imul
js
jns
(bad)
shl
shl
add
xor
sahf
jg
call
mov
or
sbb
hlt
rcl
hlt
mov
mov
outs
pop
clc
retf
mov
mov
loop
mov
xor
push
cmp
adc
retf
lods
xor
xchg
outs
movs
xchg
adc
xchg
adc
cmp
das
mov
sbb
sbb
push
sub
dec
jmp
gs
nop
mov
add
lock
das
dec
cli
out
enter
mov
scas
dec
adc
mov
mov
sub
mov
fistp
sub
daa
inc
ja
and
daa
or
out
inc
repnz
stos
pop
(bad)
fdiv
jle
add
and
jno
mov
jns
jbe
movd
mov
inc
aad
out
sbb
add
out
pmaxsw
or
or
or
jmp
dec
xor
push
push
inc
arpl
sbb
mov
push
jo
jnp
jns
inc
push
shr
jle
mov
(bad)
repnz
inc
jae
sub
xor
jmp
adc
call
int
cmps
popf
and
(bad)
pop
popa
inc
fs
and
dec
cli
rcr
push
xchg
fisub
nop
add
and
sub
mov
cs
fwait
movs
(bad)
pop
push
das
retf
std
or
lods
mov
inc
jns
xlat
dec
and
jge
push
je
xor
xchg
lds
in
or
ss
xor
push
cmps
pop
jae
mov
inc
out
out
or
mov
sahf
movs
push
fwait
push
ins
mov
(bad)
mov
push
test
dec
push
or
xchg
cmp
bound
or
test
adc
or
movs
xor
adc
fnstenv
push
(bad)
push
jno
cmp
in
and
dec
stos
cmp
scas
mov
sub
mov
cmp
in
pop
adc
sbb
jns
sbb
mov
dec
push
mov
mov
mov
aad
shl
leave
xor
mov
and
call
and
icebp
fnstenv
cmp
sub
(bad)
fidivr
cmps
mov
or
addr16
mov
div
sub
dec
das
(bad)
cld
test
push
pop
xor
inc
cmp
test
mov
add
dec
dec
out
fldcw
or
jmp
jmp
loop
or
mov
les
mov
sbb
pop
xchg
addr16
xor
int
pop
in
adc
mov
ss
scas
add
mov
jmp
or
cmp
rcl
sub
mov
jo
cmp
jbe
jecxz
or
xchg
in
push
and
pop
mov
push
and
sbb
pop
stos
cmp
scas
inc
sbb
pop
jmp
sbb
cmps
call
(bad)
jmp
mov
fild
cdq
push
lods
cmp
imul
cmp
adc
das
dec
lahf
outs
pop
push
xor
jbe
ds
imul
jle
ja
adc
mov
sbb
pop
test
xchg
ins
cdq
cmc
shl
lods
retf
es
inc
inc
or
xchg
stos
inc
not
and
stos
xor
mov
lods
fdivr
jecxz
xchg
pop
es
adc
cmps
mov
dec
and
rcr
xor
stos
push
cmp
xchg
in
jmp
inc
jns
inc
call
sub
push
jnp
lods
aaa
popa
ret
shl
int
fwait
pop
in
mov
sbb
jmp
sub
sbb
pop
jns
shl
sysexit
outs
retf
and
mov
sbb
add
lahf
jo
mov
lahf
inc
xchg
arpl
data16
dec
sti
add
ret
and
mov
sbb
and
inc
jno
cmps
call
push
stos
push
jge
ja
inc
inc
(bad)
leave
push
test
pop
pusha
(bad)
lock
cmps
add
dec
sub
les
sbb
push
xor
pop
bound
fs
fimul
cmp
lock
pop
and
inc
inc
jb
add
xor
push
daa
dec
push
pushf
lods
call
add
mov
lea
jl
mov
cmp
movs
pushw
xor
movs
xchg
(bad)
lahf
jb
adc
mov
loopne
jmp
xchg
mov
shl
push
pusha
push
xor
test
jl
and
stc
jge
aad
neg
(bad)
adc
in
loop
jmp
xor
ins
or
cmc
(bad)
jl
cmp
daa
test
dec
xor
push
pop
and
mov
xchg
fsub
daa
cld
add
cmc
rcl
loopne
pop
add
push
push
in
into
ins
test
ins
pop
outs
push
addr16
bound
xor
sti
shl
(bad)
adc
sar
dec
xor
pop
jp
jne
das
repnz
or
add
or
mov
xchg
mov
inc
jno
jbe
pop
jbe
jb
and
add
add
mov
push
sub
mov
jmp
or
sbb
neg
cmp
mov
cmp
aaa
mov
sbb
data16
pop
loopne
fwait
xchg
stc
fwait
push
fs
cmp
mov
pop
fsubrp
js
ret
out
and
out
outs
add
add
or
add
push
imul
jmp
(bad)
xor
mov
xor
sub
push
popa
push
xor
sbb
adc
in
loopne
cld
xabort
in
stos
call
sub
(bad)
scas
adc
jl
jns
leavew
push
sub
mov
repz
mov
into
lea
cmp
outs
or
push
stc
retf
mov
push
gs
jmp
cmp
ins
fdivr
cmp
xchg
imul
adc
loope
shl
adc
pop
add
(bad)
sub
push
cmp
fucomp
fsub
dec
fsub
dec
imul
xchg
or
stc
ret
lods
int3
icebp
mov
data16
xchg
das
push
dec
adc
mov
push
lods
lds
mov
jno
lahf
jmp
mov
xor
adc
ins
mov
shl
sub
push
sbb
or
scas
addr16
jg
bnd
jg
cwde
mov
jno
(bad)
fldlg2
fsubr
or
cmps
mov
push
xor
and
and
aad
xchg
hlt
popa
push
inc
jne
dec
jnp
mov
mov
shr
(bad)
pop
jb
scas
jmp
data16
mov
arpl
lea
jg
or
repz
ss
sbb
jbe
je
xchg
scas
adc
jle
not
fidiv
push
mov
pop
fcom
pop
and
fisub
int3
cld
rol
push
data16
stos
xchg
sub
stc
leave
movs
jecxz
jle
sub
hlt
jnp
push
aam
out
adc
cmp
push
imul
icebp
adc
shl
xchg
mov
jmp
pop
rcl
enter
lods
cwde
push
push
push
inc
sub
stc
push
xor
inc
jae
mov
(bad)
xor
sar
adc
mov
les
jae
shr
mov
mov
push
jae
jns
aam
mov
gs
add
scas
dec
ss
loopne
jo
imul
test
add
mov
arpl
sub
les
mov
mov
scas
scas
inc
lods
fneni(8087
shl
xor
movs
jno
imul
cli
aam
jo
inc
int
js
mov
mov
pop
ins
or
mov
inc
fisub
add
sar
scas
pushf
stos
test
dec
sub
ins
pop
adc
loope
clc
cmps
(bad)
out
mov
xor
sar
fsubr
fcmovnb
call
je
ins
push
gs
mov
std
int
cmp
add
aad
les
pop
das
sbb
jp
out
out
shl
xlat
mov
arpl
dec
pop
cli
in
adc
push
fldenv
mov
and
dec
js
sub
mov
xchg
mov
mov
je
dec
mov
ss
fld1
or
adc
ja
jbe
cmps
and
mov
test
fist
mov
sbb
sbb
ret
stos
sahf
clc
or
ins
push
cmp
sub
mov
call
loopne
sub
inc
das
inc
es
and
enter
add
lods
leave
push
xor
xchg
fsubrp
stc
psubd
jb
fsubr
sbb
dec
sub
lea
mov
inc
mov
lea
lock
jbe
mov
outs
dec
sub
clc
jbe
std
mov
push
pusha
push
xor
out
out
jbe
mov
clc
imul
iret
mov
fs
jmp
cmp
inc
xchg
inc
mov
mov
jnp
push
cmp
cmp
pop
clc
cdq
sbb
push
lods
leave
inc
outs
mov
(bad)
mov
mov
lods
popf
lods
mov
fmul
sbb
ret
imul
vaddpd
sub
mov
stos
shl
rol
cmps
dec
ins
mov
mov
xchg
xor
cmps
fwait
stos
leave
and
ret
repz
dec
ret
xor
shl
xchg
inc
test
shl
ret
adc
(bad)
adc
xchg
movs
dec
xchg
into
mov
cdq
setp
inc
popa
add
sbb
push
ins
cld
scas
std
sbb
into
pop
outs
xchg
sbb
add
in
das
mov
inc
mov
aad
lods
pushf
lods
adc
adc
mov
lahf
pop
ds
into
test
or
loop
push
xchg
sub
push
cmc
clc
fdivr
inc
test
sub
xor
mov
pop
outs
int3
jns
and
ror
jno
push
int
dec
jp
fisub
mov
mov
push
jecxz
hlt
dec
add
push
push
daa
pop
and
repz
cmp
repnz
call
cld
and
je
cmp
add
xchg
dec
jns
ret
repz
(bad)
xchg
xchg
xor
pop
inc
clc
xor
fs
cwde
stos
inc
repnz
ins
cdq
mov
stos
das
sbb
mov
and
out
add
dec
(bad)
mov
mov
ret
out
inc
push
xor
shl
sbb
mov
pop
cmp
dec
arpl
scas
sti
loopne
not
and
repnz
popa
adc
lods
call
fwait
repz
pop
mov
jne
test
std
leave
scas
adc
push
repz
jl
scas
and
and
mov
sub
or
loope
mov
fidiv
fdiv
sub
fdivr
ins
maskmovq
not
rcr
xchg
data16
in
sahf
(bad)
mov
(bad)
ror
lods
iret
loop
xchg
imul
cmp
cmps
stc
sahf
ss
push
jecxz
or
dec
je
and
jnp
mov
jbe
xchg
xor
adc
imul
dec
pop
pop
or
stc
inc
cmps
(bad)
repnz
out
ins
ds
stc
sahf
lods
gs
inc
cmp
jp
cs
movs
inc
dec
(bad)
xabort
stc
push
sub
xchg
clc
push
je
dec
xchg
fist
aam
pop
mov
nop
repz
mov
ret
loope
lods
addr16
push
mov
push
fprem
retf
iret
dec
cwde
cmp
clc
popf
dec
fst
lods
lea
gs
sbb
dec
leave
out
das
add
xchg
cmps
lds
scas
inc
mov
jb
jl
je
push
scas
fdiv
leave
stc
mov
std
adc
outs
or
jbe
dec
xor
gs
rcr
inc
sahf
cmp
cmp
add
push
and
iret
sub
push
out
dec
dec
mov
pop
cmp
pop
jb
into
aam
adc
sbb
aaa
or
pop
mov
test
jnp
out
fsubrp
clc
fdivr
add
xor
xchg
iret
shl
or
or
test
cli
(bad)
pop
inc
rcl
shl
xor
xor
dec
add
jnp
jle
or
fnstenv
cmp
sub
shl
addr16
push
scas
pusha
xor
lock
scas
bound
xchg
aas
adc
inc
aas
fcomi
xchg
div
jmp
jnp
jg
enter
sub
and
loopne
jecxz
pop
ret
fsubr
jo
pop
mov
push
mov
sbb
inc
js
cwde
ror
sbb
cmp
mov
loopne
mov
xchg
xchg
scas
sahf
and
pop
or
pushw
arpl
jns
mov
push
imul
fs
pop
cmps
mov
and
sub
(bad)
repnz
imul
and
arpl
xchg
mov
xchg
cmps
xchg
xchg
xor
fs
aas
xor
icebp
dec
ins
mov
dec
cld
cmc
(bad)
adc
jo
mov
mov
and
inc
cmp
aaa
adc
adc
pop
and
cmps
pop
xlat
mov
popa
sbb
inc
jno
stos
test
mov
xor
pop
mov
xor
les
cmp
mov
push
xchg
jne
stc
pop
popa
push
les
add
and
(bad)
cld
in
mov
mov
mul
jne
xchg
js
es
movs
or
fstp
dec
jns
fisubr
rol
push
jnp
mov
cmpps
ins
int
les
gs
add
jnp
mov
lods
ret
fdiv
leave
neg
aad
jae
push
sub
imul
cmp
mov
push
scas
cdq
cli
jge
sbb
push
inc
inc
sti
push
add
mov
aam
popf
add
xor
out
fsubr
fucomip
cmps
aam
retf
pop
jmp
js
faddp
mov
xchg
cmps
mov
rol
xchg
movs
mov
inc
cmps
nop
mov
addr16
loope
cmps
dec
push
cs
das
pop
sahf
inc
jae
(bad)
call
xchg
push
xchg
push
pop
test
and
inc
ficom
ss
fbstp
pop
mov
mov
xor
fsubr
sbb
call
pop
scas
xchg
cmp
cmp
inc
arpl
cmp
cld
int3
xor
les
xchg
outs
pop
bound
or
iret
push
sub
loope
sub
in
mov
paddusw
mov
cmp
ret
mov
cwde
sti
mov
dec
fs
fidivr
xlat
and
es
push
sbb
sub
xchg
repz
cmc
xchg
icebp
push
ds
xchg
(bad)
ins
test
outs
or
inc
popf
and
add
lahf
fld
sbb
push
out
pop
mov
jl
mov
sbb
sbb
or
shr
fsubr
jns
mov
psubw
cmps
test
push
ins
or
dec
ss
in
sbb
(bad)
test
(bad)
mov
pop
pop
xchg
gs
xchg
lods
adc
cdq
jp
ret
fsubr
add
push
aad
int3
fcomp
jmp
push
mov
loope
enter
shl
jb
and
enter
inc
push
je
and
xor
mov
js
mov
mov
inc
and
jne
adc
mov
cmp
jno
shr
rol
inc
jno
scas
out
ret
not
loope
lods
fwait
sti
int3
rcr
push
fbstp
dec
adc
mov
mov
push
aaa
jl
aas
add
xchg
push
add
div
mov
gs
jmp
ret
cmp
retf
xor
sub
sub
icebp
pop
bnd
test
aad
out
inc
stos
pop
(bad)
mov
lods
imul
pop
ret
arpl
das
(bad)
fs
pop
gs
aad
es
mov
rol
adc
cmp
pop
push
dec
jp
fistp
das
out
adc
mov
jmp
xchg
mov
pop
rcl
inc
xchg
mov
xor
es
push
xor
mov
or
enter
call
out
sub
sub
jg
mov
pop
mov
or
or
test
pop
push
mov
cmp
popf
xchg
mov
stos
(bad)
push
xor
lock
push
xchg
mov
dec
fidiv
sbb
xchg
dec
mov
lds
outs
pop
and
ja
sbb
js
pop
cdq
cs
push
rcl
mov
add
inc
mov
push
sub
pusha
and
pop
(bad)
cmps
popa
add
repz
mov
gs
adc
pusha
out
jge
loop
mov
jnp
rol
movs
pushf
sbb
je
daa
add
dec
mov
adc
popa
and
adc
push
jmp
cmp
in
sbb
push
out
and
leave
test
push
(bad)
ins
cmp
daa
lahf
xor
daa
and
iret
cmp
call
cld
lods
push
lock
push
rcl
ret
ss
addr16
dec
mov
std
push
or
jno
jecxz
mov
adc
jns
popa
sub
push
jb
adc
movs
outs
das
icebp
jo
stos
pop
call
lods
jo
iret
cmp
push
lds
fdivr
stos
jl
adc
push
cld
cmps
imul
pop
in
xchg
xor
idiv
pop
enter
and
mov
into
dec
rcr
mov
call
retf
push
icebp
arpl
aas
xor
inc
sub
pushf
ss
push
cmp
iret
aaa
xchg
xor
pop
jmp
stos
outs
out
mov
lods
pop
lea
mov
(bad)
fidivr
jecxz
outs
div
fild
jecxz
mov
mov
pop
xchg
dec
mov
bound
or
mov
nop
or
inc
rol
push
out
rcl
arpl
outs
xor
ins
xor
ret
cmp
out
pop
stc
push
xchg
inc
rcr
sub
and
push
aad
mov
mov
neg
cmp
mov
ins
lock
lock
fiadd
mov
dec
test
jmp
or
ret
inc
scas
sahf
imul
or
in
scas
je
ins
jge
retf
cmp
mov
xor
jg
leave
cmp
out
push
je
aad
(bad)
ins
xor
mov
aaa
pop
cld
popf
xchg
mov
in
pop
int3
jp
jnp
or
xchg
jo
retf
or
sbb
xchg
jns
jmp
je
movs
inc
enter
inc
xchg
test
fcom
xchg
(bad)
jns
daa
mov
nop
add
xchg
add
pop
int
pop
jmp
lods
push
ins
pop
push
or
enter
pusha
xor
inc
aas
out
jl
dec
mov
mov
movs
xchg
mov
adc
dec
int3
xor
js
fistp
sbb
outs
xchg
jge
push
rol
aad
aam
xlat
pop
fwait
add
scas
mov
not
and
inc
cwde
push
ret
xor
rol
sti
imul
repnz
mov
pop
or
mov
es
mov
adc
adc
fcomp
int3
dec
mov
mov
add
pop
in
mov
inc
or
in
ins
or
add
popa
(bad)
jp
rol
inc
enter
sub
or
inc
lds
sbb
or
push
out
rol
popa
cwde
or
test
iret
dec
aam
mov
mov
(bad)
jl
mov
int3
or
sbb
push
fdivr
jmp
xor
mov
adc
cwde
push
test
push
xor
jp
jl
out
movs
xchg
aaa
and
popa
fsubr
xchg
cmp
(bad)
mov
cmp
xlat
paddb
mov
data16
jmp
test
sahf
xor
xchg
je
sbb
out
sahf
dec
xchg
daa
adc
daa
hlt
sbb
in
bound
call
leave
add
add
jb
adc
mov
mov
xor
pop
call
jo
aaa
sahf
add
pop
call
cmp
ret
sbb
dec
aad
inc
sub
scas
inc
add
mov
nop
cmps
push
adc
leave
dec
cmp
je
scas
dec
lds
pop
neg
cmp
pop
retf
(bad)
mov
imul
aas
std
push
aad
mov
mov
in
arpl
push
(bad)
jbe
ss
xor
repz
dec
(bad)
test
out
data16
dec
xor
ds
scas
scas
dec
test
psubq
in
pop
repnz
je
inc
lea
dec
cmp
cmps
mov
push
bnd
ds
jp
lds
cmc
mov
add
stos
mov
lods
movs
pusha
nop
inc
sar
jmp
ja
xchg
jl
movs
pusha
xchg
jle
mov
jo
sbb
pop
lea
loope
mov
rcr
dec
fldcw
mov
cdq
inc
mov
nop
inc
loope
jo
inc
(bad)
hlt
imul
out
fwait
sbb
call
into
jnp
stc
jbe
outs
cmp
mov
push
lock
in
or
sub
enter
and
cmc
mov
std
test
xchg
cs
cmps
lds
cwde
test
lods
push
push
arpl
mov
push
cld
push
retf
add
sbb
jo
pop
xchg
jnp
and
xchg
adc
jge
mov
mov
and
hlt
mov
test
push
out
lea
and
cmps
sbb
(bad)
ret
test
xchg
add
cs
lods
inc
and
stos
scas
jne
lock
ror
sbb
jp
pmaxsw
sbb
daa
fnsave
or
push
aad
mov
and
sub
and
rol
pusha
hlt
dec
cdq
stos
call
mov
outs
cli
mov
mov
push
sar
mov
dec
loopne
mov
cmp
in
push
mov
pop
rol
pop
mov
ins
ror
mul
adc
loope
stos
xchg
adc
xchg
cmps
dec
mov
cld
pushf
dec
sub
pop
mov
(bad)
pop
xchg
movs
dec
sub
push
aas
sti
lods
pop
clc
push
xor
xchg
mov
lods
ins
sub
cmps
popa
loopne
ins
add
dec
sbb
or
mov
rol
xor
call
outs
and
loop
jns
call
aaa
aaa
stc
jno
push
xor
shl
push
in
test
cmp
lods
inc
xor
bound
popf
push
add
std
jne
arpl
adc
ret
inc
sti
jle
inc
and
push
rol
xchg
add
outs
or
aas
xor
fistp
ficomp
popf
lods
push
aam
jae
out
ins
sub
mov
jno
push
lea
adc
inc
std
int
pushfw
cmp
icebp
arpl
lods
jae
out
pusha
xchg
cmp
pop
jecxz
pop
fwait
push
mov
(bad)
lods
push
fcom
or
sbb
or
jmp
xchg
dec
aam
xchg
inc
and
scas
push
in
adc
repnz
cli
movs
ins
das
sub
mov
mul
dec
mov
sbb
pop
sti
imul
mov
adc
mov
cwde
sbb
or
inc
(bad)
dec
aam
xlat
add
push
jecxz
sbb
cmp
and
add
sbb
mov
repz
jmp
test
popf
test
(bad)
jp
adc
pop
cld
jb
pop
lea
int3
inc
std
pop
stc
pop
ret
ret
out
nop
dec
xchg
movs
pop
retf
cs
mov
int3
mov
(bad)
mov
cmp
mov
sbb
dec
add
mov
in
bound
adc
test
(bad)
push
cmc
bound
pop
rol
and
jp
in
pop
sti
data16
aam
sub
mov
int3
dec
push
retf
jbe
sbb
enter
int3
dec
retf
pushf
aas
es
dec
into
dec
int3
popf
add
ds
inc
lds
cmp
sbb
or
cmp
sbb
cmps
bound
mov
jb
jge
ja
jbe
lods
mov
cmp
fimul
push
aaa
popa
cmp
or
jecxz
xchg
jp
fstp
cmps
jp
gs
adc
adc
xchg
or
in
jg
add
jnp
adc
push
cli
fs
add
xor
daa
rcl
daa
ds
gs
ret
dec
(bad)
jnp
mov
hlt
push
popa
mov
cmp
adc
cmp
adc
stos
jo
inc
std
mov
lods
lods
push
mov
test
adc
sbb
cmp
adc
aad
loopne
cmp
jo
loope
(bad)
pop
(bad)
push
(bad)
pop
in
push
sub
movs
push
clc
js
inc
mov
push
xor
mov
hlt
push
stc
pop
cmp
stos
jbe
call
adc
or
inc
mov
ds
in
imul
jb
sub
push
mov
shl
jg
repz
cmp
mov
mov
or
inc
ret
sub
fld
mov
(bad)
jnp
pop
xchg
inc
div
arpl
mov
aam
test
pop
(bad)
push
imul
call
pop
xchg
gs
mov
push
into
push
mov
mov
xchg
mov
mov
mov
cmps
push
leave
pop
cwde
add
fnstcw
push
addr16
cmc
mov
setge
call
inc
mov
mov
test
sbb
stc
scas
push
out
mov
mov
mov
ins
xchg
xchg
add
cmp
imul
in
push
mov
repz
sub
push
shl
in
mov
daa
daa
fisttp
mov
xor
movs
ins
aaa
daa
out
mov
aas
jmp
jmp
cmp
mov
stos
stos
outs
loop
xchg
xor
mov
aad
call
inc
lds
fs
pop
std
stos
pop
shr
lahf
inc
mov
inc
mov
jae
lods
pop
int3
cmp
mov
jno
iret
xchg
cmp
es
jns
push
pushf
xor
test
in
cdq
or
inc
jbe
(bad)
pop
lds
add
loope
outs
jmp
jecxz
jns
loop
or
test
mov
jg
in
pop
cmp
lods
mov
ins
mov
loopne
or
and
lods
outs
sub
mov
int3
add
jno
imul
call
and
ja
add
mov
retf
push
cmp
sbb
js
mov
mov
mov
loop
push
daa
clc
test
and
sub
sub
dec
jl
leave
or
push
imul
push
mov
sub
pop
imul
data16
arpl
shl
mov
iret
jge
fistp
xlat
mov
cmps
je
or
iret
xor
fist
int
ror
adc
dec
mov
int3
inc
sar
fbstp
xlat
jnp
ror
push
enter
outs
sub
call
add
retf
sbb
dec
mov
lods
push
nop
cmp
pop
cmp
mov
outs
out
xchg
inc
les
and
xlat
add
lods
popf
xchg
dec
xor
and
ficomp
retf
inc
fild
jnp
push
add
pop
popf
ins
pop
aad
loope
stc
inc
loop
lods
jp
jmp
das
fsubr
inc
into
push
aaa
popf
outs
push
xchg
pop
test
and
loope
jmp
inc
(bad)
gs
sbb
push
sti
push
out
popf
movs
sbb
cmp
cli
push
mov
pop
cmp
lea
(bad)
push
scas
mov
inc
std
mov
(bad)
aad
(bad)
sbb
dec
das
add
mov
rcr
or
xchg
pusha
push
add
adc
jne
pop
mov
ins
enter
mov
rcl
rol
ja
adc
jne
fsub
xor
adc
in
aad
mov
dec
jge
pop
jmp
mov
mov
adc
pop
cs
fwait
call
mov
arpl
mov
pop
mov
xchg
inc
test
bnd
loop
fwait
std
(bad)
cwde
mov
pusha
or
in
fdivp
add
inc
push
es
movs
cld
lea
jne
add
xchg
nop
mov
mov
mov
xchg
jns
sub
sbb
adc
xchg
mov
cmp
cmp
adc
iret
imul
xchg
stos
add
repnz
fild
lds
lock
outs
pop
mov
sbb
push
xor
ret
mov
int
pop
ds
sub
ins
sar
push
or
and
add
leave
mov
cs
jb
dec
sub
ret
icebp
test
xchg
mov
aam
xchg
lods
mov
sub
hlt
nop
add
pop
cld
into
test
jno
jne
xor
push
sub
imul
dec
call
dec
popa
dec
cmp
xlat
loop
jo
es
daa
adc
jno
fs
jns
mov
push
hlt
ins
pop
xchg
add
mov
es
mov
xor
gs
outs
xchg
cmp
jecxz
ins
xor
repz
mov
mov
mov
mov
xchg
jge
xchg
aaa
push
xor
lods
cmps
mov
ret
dec
retf
repnz
rol
adc
sbb
scas
cmps
movs
push
cld
jnp
jle
sbb
jmp
lock
in
pop
scas
mov
and
adc
mov
fs
fbstp
dec
xchg
add
cmps
les
mov
outs
and
test
nop
push
not
lds
jae
inc
into
push
xor
mov
xchg
xor
call
jp
out
sbb
dec
mov
repnz
mov
mov
cmp
or
das
jmp
movs
xchg
cmp
das
in
sbb
xor
inc
jo
out
jl
push
test
je
dec
mov
dec
retf
add
retf
aad
std
retf
push
xchg
add
sti
pop
cli
pop
ror
movs
mov
clc
jae
adc
(bad)
test
fdivr
aad
sbb
lods
push
adc
or
fild
and
gs
dec
xchg
or
jns
mov
(bad)
dec
jnp
jg
inc
test
xor
and
sbb
or
ds
rol
bound
xchg
movs
pop
ret
inc
aad
mov
in
pusha
push
lock
jmp
mov
pop
cmp
sub
push
mov
or
jl
sub
and
sbb
push
cmp
dec
fadd
nop
xor
pop
ins
loopne
push
out
fld
xchg
lods
jbe
jae
or
xchg
dec
mov
cdq
pop
cld
pop
icebp
mov
in
mov
gs
outs
sub
fadd
push
xchg
not
xchg
push
scas
retf
pop
mov
xchg
add
stos
imul
push
mov
ins
ds
ds
or
les
loop
sub
mov
sbb
jmp
xchg
inc
shl
jg
mov
xor
enter
das
clc
dec
jg
jo
jbe
pop
cmp
sub
mov
in
stos
popf
jg
sub
out
push
sub
mov
and
mov
sti
jl
inc
repnz
fisubr
cmp
sbb
pop
ret
sti
movs
jb
xor
out
pop
rol
pusha
lea
aaa
loope
xchg
xor
icebp
dec
(bad)
inc
int3
inc
rol
and
and
repnz
dec
mov
jmp
adc
pop
mov
xchg
popa
xchg
mov
jbe
(bad)
aaa
fist
add
in
scas
jge
jno
je
jge
sbb
js
mov
cmc
pop
mov
arpl
adc
xor
ds
aas
xchg
ss
ret
inc
ret
jle
outs
or
jo
stos
enter
fiadd
jg
or
hlt
mov
dec
mov
in
pusha
xchg
jge
jns
xchg
test
mov
jecxz
sub
and
sbb
push
xor
xchg
push
mov
scas
enter
in
movs
xchg
cmp
sbb
in
cmps
cmp
(bad)
dec
int
and
bound
out
adc
fdiv
mov
push
lock
iret
dec
ret
cmc
push
outs
or
jp
adc
jb
repz
je
icebp
movs
xchg
inc
(bad)
aaa
(bad)
add
cli
ja
push
xchg
dec
mov
sbb
inc
scas
js
in
test
cld
movs
pop
sti
lahf
aas
popf
add
push
and
ins
or
imul
mov
adc
inc
into
push
icebp
movs
sbb
xchg
push
xor
push
xor
int
fnstcw
mov
test
lock
stc
dec
js
mov
mov
fmul
push
into
mov
sti
jbe
push
mov
sbb
iret
pop
xchg
push
mov
sub
jg
cli
stos
popf
push
ret
pop
lea
mov
ins
xchg
cmps
popa
sahf
dec
(bad)
add
ins
push
shl
jl
jmp
in
pop
imul
ror
xchg
add
jnp
daa
fdivr
gs
scas
jne
aas
in
mov
stos
cmp
cli
pop
(bad)
jl
mov
retf
and
push
test
daa
in
jp
mov
imul
rol
or
movs
ret
and
adc
les
cwde
push
cld
push
outs
aaa
loop
pop
test
mov
adc
add
mov
cmp
aas
loop
and
inc
rcl
cmps
pusha
xchg
add
fst
sub
jge
dec
fst
add
mov
jle
in
sbb
push
les
mov
ja
call
add
mov
sbb
inc
mov
jno
xchg
sbb
xchg
pop
push
pop
bnd
pop
sti
mov
les
lea
pop
stos
jbe
push
addr16
pusha
sbb
cli
test
ret
dec
int
stc
pop
hlt
(bad)
dec
test
mov
rol
imul
(bad)
out
retf
dec
iret
or
cs
dec
fnstcw
and
rol
xchg
sub
cdq
xor
cmp
mov
jo
or
push
jmp
fadd
xor
repz
xor
and
add
and
in
and
fld
int
mov
test
xchg
adc
shl
push
repz
sub
lahf
add
call
jbe
iret
dec
mov
sub
mov
fistp
addr16
out
jge
out
mov
arpl
or
xchg
cmp
call
adc
es
cmps
bound
test
pop
aas
ins
xlat
scas
cwde
jbe
cmp
adc
xlat
jbe
inc
(bad)
push
gs
pusha
rol
mov
fdivr
shl
not
push
sti
mov
xor
pop
mov
or
sbb
adc
test
xchg
inc
into
or
imul
push
retf
inc
mov
adc
add
addr16
dec
mov
imul
icebp
movs
xchg
add
mov
adc
arpl
fisttp
xchg
cmps
jns
out
lods
jns
dec
shr
sbb
mov
mov
and
xchg
dec
fisttp
cmp
sub
jmp
imul
adc
scas
pop
call
bswap
inc
mov
shl
sbb
in
mov
adc
inc
out
push
das
adc
or
scas
je
repnz
out
fimul
add
inc
mov
xchg
xor
js
lods
leave
sti
enter
leave
cli
int3
lods
pop
push
pop
mov
and
lods
push
into
lahf
out
lahf
mov
cdq
inc
jns
rcr
jmp
loope
mov
fnstsw
sub
xchg
adc
pop
iret
lods
lahf
add
or
stos
add
cmp
arpl
into
je
mov
test
fwait
inc
addr16
pop
bound
adc
xchg
cmc
xchg
movs
jns
xchg
inc
ret
ret
lahf
(bad)
not
stos
sbb
stc
ror
ins
pop
shl
js
jo
or
(bad)
fbld
out
movs
adc
sub
push
in
mov
lea
push
inc
dec
sbb
fild
sbb
je
stc
ss
sub
test
inc
cmp
jb
jne
addr16
adc
test
std
sub
shr
mov
fsubrp
adc
rcr
or
pop
clc
lea
adc
sub
xchg
xlat
sub
dec
xor
xchg
(bad)
out
and
fcmovbe
mov
sbb
xor
mov
int3
xor
mov
shr
jns
fwait
sti
mov
leave
cmp
or
or
jbe
shl
je
and
(bad)
into
lahf
add
inc
and
xchg
imul
lea
and
ret
repz
add
mov
dec
lea
gs
fsubr
(bad)
lods
jle
test
or
loope
add
out
mov
push
hlt
int
push
sbb
fbld
data16
ins
dec
and
mov
push
push
(bad)
call
cdq
mov
cli
push
mov
pop
xchg
jnp
stos
mov
fcmovnbe
fsub
cdq
xor
aad
shl
sbb
aad
push
mov
jmp
cmp
cmc
out
xchg
sbb
or
mov
dec
lods
and
sbb
pop
outs
or
shr
mov
retf
pop
cmc
pop
dec
out
call
xchg
xchg
sbb
mov
movs
call
push
mov
das
ins
cdq
out
xor
xchg
jmp
xchg
mov
jg
mov
cmp
xor
leave
jle
cmp
pop
push
sti
lods
popf
sbb
pop
outs
sub
cmps
add
jge
inc
fldcw
cmc
mov
push
les
add
retf
not
cmp
add
ss
in
xlat
(bad)
pusha
add
add
lock
jbe
inc
and
jnp
push
cmp
test
xchg
in
xchg
pushf
loop
lock
sbb
shr
icebp
xchg
inc
outs
fs
pop
ins
jnp
stc
xchg
fistp
pusha
push
cmc
(bad)
fwait
jmp
outs
scas
les
jmp
mov
pop
cmp
(bad)
mov
xchg
xor
lea
pop
outs
sub
xlat
in
fnsave
sar
dec
and
xchg
out
mov
aaa
(bad)
mov
sbb
icebp
xchg
movs
adc
add
sub
xchg
lock
add
lods
dec
ins
sbb
loope
aas
push
jle
push
ss
cs
ror
fsub
pop
cmp
jns
and
iret
je
iret
stc
arpl
mov
jbe
bound
aad
and
ins
fild
movs
call
movs
int3
cmp
mov
xchg
mov
cmp
adc
(bad)
mov
xor
in
out
adc
dec
xlat
lods
and
sbb
pop
mov
pusha
dec
add
in
push
pop
sbb
push
ret
mov
in
sbb
out
jp
test
sub
pop
sub
adc
dec
sub
movs
jbe
mov
fsubr
fnstsw
and
popf
rol
ficomp
and
in
pusha
add
sub
cwde
outs
pop
push
jg
mov
cmp
mov
jno
jmp
ins
pop
imul
cli
push
pusha
aaa
(bad)
sti
ret
mov
xchg
icebp
xchg
clc
lahf
mov
sbb
mov
fsubr
repz
or
xor
mov
add
(bad)
in
sbb
push
sbb
or
test
adc
movs
mov
mov
cmp
mov
push
retf
cwde
test
mov
pop
cmp
xor
cwde
out
cmp
push
test
mov
ins
inc
mov
sbb
jle
cmp
xchg
repz
adc
mov
jecxz
stos
mov
push
fcom
jns
fldenv
shl
mov
or
pop
add
push
daa
scas
cmp
push
aas
or
xchg
push
movs
mov
(bad)
fbld
mov
leave
scas
popf
and
cli
mov
ror
pop
sub
(bad)
nop
mov
mov
push
add
addr16
fs
jl
rcr
daa
mov
dec
div
cmps
test
(bad)
cmp
jl
adc
dec
leave
ficomp
out
data16
and
call
das
cmp
sbb
mov
enter
inc
jmp
sub
mov
or
or
ins
mov
mov
add
adc
pusha
add
(bad)
jg
cmp
mov
xchg
daa
ds
in
mov
xor
out
mov
ins
shl
xchg
jecxz
mov
mov
test
push
imul
mov
loopne
pop
cmp
daa
adc
ret
mov
xor
pop
(bad)
fild
lea
adc
mov
inc
mov
mov
addr16
outs
pop
fild
imul
cdq
aaa
mov
cdq
jmp
xchg
retf
sbb
push
sbb
in
xor
nop
mov
cmp
add
stc
pushf
stc
cmps
cmp
ja
movs
add
call
sub
lods
xchg
mov
mov
aam
test
aad
rol
(bad)
and
xchg
das
or
dec
and
inc
inc
jl
jne
ja
js
jb
adc
and
aam
inc
jo
jns
xchg
mov
adc
shr
fcom
xchg
fdivp
(bad)
movs
adc
xlat
mov
cmp
add
movs
cmp
packssdw
hlt
loop
xchg
adc
shl
lock
shl
xor
shl
mov
arpl
sub
stos
and
adc
dec
stc
dec
inc
jo
mov
and
inc
leave
les
push
outs
mov
icebp
xchg
mov
popa
pop
xor
push
cmp
inc
loope
outs
int
pop
fnstenv
jge
xchg
mov
jns
mov
test
pop
cmp
sahf
stos
test
or
dec
inc
and
sbb
int
add
mov
nop
xor
lods
fidivr
mov
test
into
cli
cmp
mov
loop
mov
jmp
inc
cmp
lock
inc
dec
xchg
mov
mov
int
lahf
js
stos
push
and
(bad)
cmp
div
ins
pop
and
cwde
enter
leave
inc
leave
fidiv
cld
fwait
aaa
test
aaa
cmp
sbb
mov
out
pop
sahf
mov
retf
dec
sub
test
in
mov
fistp
jns
push
test
test
xor
pop
xchg
pushf
dec
xor
data16
add
add
shl
das
pop
sbb
lds
cs
push
mov
add
sub
stos
out
loope
jmp
jne
pop
xchg
cmp
inc
jb
lods
fcom
and
mov
mov
imul
add
in
popf
stc
int3
xor
xor
pusha
and
or
jns
out
mov
adc
idiv
and
inc
addr16
or
and
cli
call
repz
sub
and
mov
sbb
clc
retf
inc
jb
(bad)
repnz
das
push
(bad)
shl
fwait
stc
push
sbb
in
and
push
movs
hlt
(bad)
mov
or
lods
iret
lods
int3
xor
inc
mov
mov
std
pushf
lods
addr16
add
add
js
ja
fucomi
mov
sbb
pop
(bad)
shr
sbb
shr
or
pop
mov
mov
ret
(bad)
aam
int3
repz
dec
jb
cmps
lds
fnstsw
std
jno
nop
add
mov
jnp
inc
rcr
in
dec
adc
mov
jl
shl
cli
push
bound
je
popf
scas
cmp
ror
imul
adc
pop
mov
cli
jl
scas
cmp
jb
and
mov
pop
push
lahf
in
mov
or
into
jmp
mov
mov
mov
xchg
push
loope
sbb
dec
add
and
jmp
scas
lahf
and
call
or
test
rol
daa
pop
int
test
or
adc
clc
mov
dec
sub
push
push
and
iret
out
xor
mov
out
popf
xchg
adc
xor
xor
jmp
(bad)
cmps
ret
ret
movs
sbb
retf
stos
inc
fdivr
out
fnstcw
mov
out
pusha
add
add
add
sub
jp
sub
or
aad
mov
ret
or
mov
mov
or
inc
jo
ror
stc
push
or
lea
adc
ret
into
mov
shl
loopne
sahf
push
xchg
div
inc
jne
xchg
mov
mov
mov
sub
jmp
pop
int
cmp
xor
mov
xor
ja
cwde
outs
pop
and
mov
fld
xchg
xor
push
repnz
dec
sub
xor
push
sti
aas
pop
outs
shl
push
ret
sub
movs
push
jno
push
shr
fild
bound
dec
lds
jo
mov
push
mov
je
and
sub
and
xchg
adc
clc
lahf
lahf
cmp
sahf
faddp
and
mov
adc
or
movs
xchg
mov
add
push
xor
ins
dec
push
pop
or
pop
out
cmp
sub
mov
cmp
mov
jnp
fwait
pusha
push
fisubr
mov
adc
cmp
ret
xor
movs
out
jecxz
out
mov
ins
dec
jp
jo
(bad)
cs
jecxz
sbb
and
add
repnz
jl
cmp
mov
dec
sub
shl
mov
jo
pop
sub
loopne
stos
enter
add
pop
cmp
mov
xchg
inc
out
call
push
sbb
push
sub
lahf
sub
in
popa
mov
ds
xchg
rol
clc
fwait
cmp
nop
add
and
mov
pop
cmc
rol
retf
in
and
imul
(bad)
sbb
add
mov
adc
push
gs
mov
out
jmp
jbe
sbb
sbb
adc
ins
dec
jnp
into
shl
pop
pop
neg
push
jbe
std
shl
mov
cmps
xchg
inc
mov
sbb
or
and
inc
stos
shl
arpl
jne
mov
ins
pop
adc
(bad)
mov
test
jo
imul
mov
cmp
mov
mov
sbb
popf
pop
inc
mov
push
(bad)
jle
das
sub
in
add
call
push
push
jl
jge
lods
popf
push
retf
inc
sub
or
lahf
movs
out
jl
add
jl
in
dec
mov
sub
mov
jo
movs
push
iret
(bad)
fwait
and
push
ret
in
in
cmps
mov
sti
into
add
or
dec
test
cdq
scas
lahf
jae
xchg
bound
or
xor
pop
ret
clc
sahf
push
xor
cmps
imul
clc
hlt
outs
and
sub
sub
shl
xor
pop
ds
stc
loop
jno
cmps
pop
test
jg
test
dec
(bad)
pop
adc
pusha
add
pusha
add
mov
ja
mov
sub
enter
fucomi
push
repnz
dec
(bad)
jle
ins
psadbw
jecxz
ins
mov
mov
sbb
sub
pop
(bad)
outs
or
xchg
int3
js
stc
iret
jbe
adc
push
test
cmp
xor
and
mov
ja
mov
ins
(bad)
int
or
mov
xchg
adc
clc
je
or
inc
and
mov
aas
or
jge
push
push
pop
test
mov
repz
call
jl
jnp
pop
xor
out
test
bound
mov
(bad)
sub
cmp
mov
inc
fisub
sub
call
push
mov
mov
scas
and
add
aad
or
into
call
push
pop
test
sti
and
in
pusha
(bad)
mov
call
shl
enter
sbb
loop
fsubr
adc
repnz
and
pop
push
inc
dec
setg
retf
push
call
push
and
sub
dec
sub
xchg
aaa
and
lods
xchg
retf
inc
and
rol
call
inc
es
sub
enter
fdiv
lahf
cmp
repz
mov
fcom
push
xor
test
ror
or
(bad)
and
mov
out
test
mov
cmp
cmp
scas
into
stos
stos
add
and
or
jmp
imul
ja
and
sti
mov
repnz
jp
adc
rcr
mov
or
push
mov
mov
or
ins
aam
sahf
cmp
mov
aam
(bad)
or
test
and
aaa
jecxz
mov
push
mov
fnsave
ror
sbb
xchg
dec
popa
add
add
xor
enter
pop
inc
xchg
mov
mov
xor
adc
cdq
xor
xlat
sub
or
ds
loop
loop
mov
push
sbb
fnstenv
fistp
pop
loopne
cmps
or
push
sahf
outs
or
sar
bound
cs
ret
inc
ficom
aad
cs
daa
xor
test
test
and
popa
push
out
(bad)
stc
mov
inc
es
xor
sbb
sbb
xchg
aaa
push
sub
or
sbb
pop
jbe
loope
dec
out
(bad)
cli
and
hlt
sbb
arpl
dec
shl
lods
pushf
scas
push
sbb
out
sub
in
aad
dec
xor
and
not
inc
js
jmp
call
xor
es
(bad)
cmps
push
xor
jb
xor
cmp
cmc
(bad)
cld
inc
fdiv
or
mov
imul
mov
xchg
cmps
mov
dec
mov
xor
xchg
stos
pushf
scas
inc
fwait
xchg
in
mov
sbb
sbb
or
cmps
jmp
call
xor
and
jl
into
add
loopne
jmp
out
fld
pop
aaa
fbstp
xor
mov
leave
scas
lahf
test
mov
mov
ins
dec
jnp
and
and
fst
jg
mov
(bad)
lds
loopne
test
rcr
jg
mov
add
pop
dec
mov
jbe
jae
loope
push
ins
or
(bad)
mov
dec
(bad)
not
call
arpl
outs
pushf
inc
or
loope
xchg
pop
aad
shl
stos
add
adc
scas
retf
mov
into
stc
mov
nop
sub
aas
or
inc
mov
std
mov
add
jl
jmp
jo
pop
jno
dec
jg
push
test
dec
mov
jbe
(bad)
xchg
not
pop
xchg
cmps
(bad)
not
das
mov
imul
ficom
xor
cmp
ficomp
jmp
xor
movs
or
in
sbb
jne
jno
addr16
jo
sbb
shr
xor
mov
fidivr
mov
sbb
ret
lods
lahf
add
pop
mov
push
aas
adc
inc
mov
setbe
(bad)
movs
cwde
cmp
cmp
push
addr16
std
lds
sub
xor
ror
xor
xor
test
inc
sub
sbb
cwde
bound
mov
jbe
repnz
pop
aas
jp
mov
sbb
xchg
inc
pop
daa
sbb
mov
es
and
mov
push
ins
addr16
scas
sahf
stos
gs
inc
loopne
call
(bad)
aad
xlat
out
and
loop
scas
fwait
dec
cs
mov
or
inc
mov
loopne
iret
mov
shl
test
aas
call
shr
in
sahf
jge
(bad)
test
pop
dec
addr16
shl
int
xor
lock
lock
aaa
or
cmp
out
lods
xchg
das
fs
mov
mov
mov
push
aaa
push
xor
or
or
neg
pop
or
gs
gs
bound
sbb
push
jecxz
mov
xchg
xor
neg
test
push
loope
call
xchg
cmp
jbe
jecxz
xchg
inc
das
sbb
and
lahf
imul
mov
mov
daa
fdiv
outs
pop
ret
mov
(bad)
xchg
push
inc
pusha
add
test
push
jle
xor
cld
mov
pop
outs
pop
xor
mov
inc
jl
mov
sub
add
mov
test
mov
mov
mov
jb
jge
leave
retf
stos
dec
add
les
data16
aaa
push
icebp
jmp
jl
cmp
cmp
mov
ret
repz
sbb
fprem
hlt
daa
(bad)
dec
clc
push
ja
popa
add
push
xor
add
dec
inc
js
pushf
xchg
fsubr
lods
sbb
push
cli
xchg
int3
mov
cmp
ror
cmp
movs
push
gs
cmp
cs
add
dec
mov
xchg
mov
or
addr16
xor
push
es
cmc
dec
daa
outs
cmps
dec
sub
push
xchg
pop
cmp
mov
mov
loope
lods
fwait
test
ret
mov
(bad)
in
addr16
inc
and
jmp
cmps
or
dec
cwde
imul
pop
xor
popa
fidivr
sub
mov
outs
pop
push
cmp
and
jmp
in
fistp
xchg
pop
push
pushf
xor
test
ja
gs
lods
lahf
cld
iret
mov
pop
outs
and
jmp
xor
mov
arpl
pop
(bad)
in
aaa
cmp
(bad)
idiv
ins
shl
out
shl
std
mov
add
xchg
mov
outs
scas
mov
pop
add
cmp
jbe
sub
cmc
cmp
cmp
jge
mov
ret
enter
xchg
stos
stos
or
sbb
cmp
or
dec
leave
cmp
cmp
jne
mov
(bad)
loopne
push
mov
fimul
fsubr
js
(bad)
out
xor
leave
cld
cdq
test
push
xor
xor
iret
in
adc
jae
lock
xor
dec
daa
adc
lds
sbb
mov
pop
and
push
cmovbe
mov
stos
leave
stos
pop
jae
scas
xchg
mov
pop
mov
aad
ins
call
out
cs
not
cmp
push
into
push
in
in
lahf
aaa
sub
in
ja
je
mov
nop
test
sbb
outs
adc
call
push
add
icebp
call
cdq
lods
push
(bad)
call
sbb
xchg
stos
int3
add
cmp
into
mov
ja
leave
test
add
pusha
das
jbe
lods
pushf
lods
imul
adc
outs
or
bound
in
mov
xchg
sbb
adc
mov
adc
sbb
dec
pop
shl
sti
leave
scas
ss
mov
das
dec
jle
jmp
jl
into
dec
sub
fs
pop
imul
ins
aad
and
push
arpl
popa
cmp
jecxz
jo
mov
mov
(bad)
repnz
enter
je
adc
jns
sub
xchg
inc
and
xor
adc
sbb
cmp
jl
lods
fstp
inc
scas
adc
cmp
push
xchg
mov
or
sbb
scas
idiv
stos
push
mov
and
and
lock
call
test
mov
cdq
stos
iret
cli
adc
cli
mov
xor
push
mov
sbb
adc
out
cmp
ja
out
test
repnz
cdq
test
in
add
fucomi
mov
das
jge
loop
hlt
bts
(bad)
in
mov
outs
mov
mov
mov
iret
test
inc
aad
repnz
mov
pop
ret
mov
ret
and
push
pop
call
ja
es
in
inc
jae
jle
loop
xor
sbb
cmp
je
and
and
mov
out
adc
adc
cmc
shr
lds
fucom
mov
jg
das
sbb
adc
mov
jo
inc
push
cmp
or
in
mov
adc
jo
xchg
mov
mov
mov
cwde
out
add
pop
mov
mov
sar
ins
sub
cmp
xchg
and
ins
xchg
pop
inc
and
ja
loope
(bad)
test
xor
xchg
push
mov
and
xor
xor
cmp
nop
bound
xor
loop
mov
js
vmulsd
inc
jb
ja
shl
loop
sbb
test
cli
shl
push
stos
fwait
lods
loopne
mov
jl
fwait
in
mov
push
repnz
inc
and
(bad)
jmp
cwde
call
jne
lea
sahf
stos
gs
mov
shl
outs
and
sub
movs
mov
mov
arpl
icebp
mov
jae
shr
xchg
outs
pop
(bad)
mov
mov
repnz
xor
popa
push
mov
xor
cmps
push
das
sbb
bound
sahf
outs
mov
je
xchg
movs
cwde
scas
pop
adc
iret
(bad)
cdq
cld
dec
sub
lods
repnz
imul
sbb
fsubrp
fistp
mov
test
cmp
dec
push
cmp
push
xchg
(bad)
fisub
cdq
dec
pop
ins
or
inc
not
hlt
(bad)
idiv
lahf
scas
sahf
ss
scas
into
stos
leave
stos
int3
sti
rcr
sub
aaa
push
data16
imul
mov
and
test
ja
or
das
pusha
pop
fidivr
scas
popf
das
push
test
xor
cs
sub
xchg
xchg
movs
xchg
mov
push
arpl
es
pop
addr16
outs
xchg
(bad)
fucomip
(bad)
jmp
pusha
cdq
mov
mov
mov
mov
mov
sbb
or
clc
loop
jecxz
(bad)
fist
xor
jbe
adc
sbb
sahf
shr
shl
repz
xchg
cmc
(bad)
cmc
xchg
ret
cmp
add
outs
or
sub
loopne
mov
mov
lods
sahf
add
movs
push
aaa
(bad)
outs
or
jbe
mov
push
jno
cmp
push
and
ja
test
in
mov
cmps
and
xchg
mov
mov
add
mov
popa
mov
mov
js
(bad)
aaa
push
xchg
cmp
int
xchg
mov
mov
add
adc
push
or
jmp
imul
ror
cwde
div
or
or
mov
into
xor
cmp
shl
iret
lods
lahf
inc
arpl
inc
mov
pop
sub
jg
ja
pop
ds
adc
ret
movs
xchg
sub
sub
push
int
pusha
out
fnstsw
pop
dec
iret
cld
retf
adc
clc
add
not
loope
scas
adc
es
mov
popa
stos
iret
pop
popa
lea
push
bound
mov
sbb
xor
jo
es
push
xchg
pop
mov
retf
sbb
call
daa
jge
cld
arpl
in
and
retf
std
clc
imul
xor
mov
inc
leave
mov
jmp
rcr
lahf
jno
jne
mov
sub
mov
xor
xchg
xor
jmp
dec
mov
call
add
push
ss
add
inc
in
push
xor
adc
mov
test
cmp
jne
pop
outs
sub
mov
je
je
dec
and
loop
bound
adc
jp
jnp
mov
inc
and
fcom
and
out
mov
inc
mov
sbb
ret
aaa
mov
sbb
adc
shl
getsec
pop
out
shl
or
xlat
add
leave
sti
cwde
mov
gs
cmp
pop
ss
add
push
xor
adc
add
adc
lods
adc
and
mov
and
mov
int
and
neg
or
inc
es
mov
jns
pop
cli
iret
lods
mov
jnp
cs
leave
scas
cwde
sti
inc
hlt
int3
sti
cli
sbb
popa
mov
sahf
cmps
xchg
movs
retf
gs
adc
mov
call
pusha
out
and
div
ins
add
push
push
loope
xchg
neg
xor
mov
jo
es
push
data16
or
in
lods
cmps
ret
or
mov
pop
cmp
mov
test
sbb
sbb
adc
and
mov
jnp
les
pop
call
scas
retf
inc
pop
jle
std
int3
(bad)
fidiv
mov
xchg
jg
add
mov
gs
in
mov
aas
addr16
loop
outs
push
push
push
cmp
inc
fs
call
add
shl
cmp
dec
js
xor
leave
cmps
xchg
cmps
(bad)
cmp
jns
or
xor
popf
out
push
scas
pop
cmp
stc
xor
daa
inc
repz
or
jge
js
pop
jg
js
cli
mov
sbb
pop
or
(bad)
jmp
or
outs
pop
lods
pop
jno
mov
aaa
sub
pop
es
xor
xor
and
hlt
nop
repnz
jmp
inc
data16
es
call
das
dec
push
or
add
mov
outs
mov
popa
add
and
push
xchg
mov
movs
pop
int3
outs
mov
xor
(bad)
in
push
or
enter
stos
mov
add
retf
retf
scas
retf
sti
mov
inc
jno
outs
mov
mov
xor
scas
sahf
sub
stc
popf
cmp
mov
mov
xor
mov
enter
mov
bound
push
and
ss
mov
pop
in
xchg
and
mov
inc
popa
into
cmp
outs
pop
add
jns
aas
add
repz
or
xor
sbb
add
push
not
mov
sahf
ins
pop
cmp
(bad)
in
mov
pop
jnp
paddsw
add
sahf
pop
xor
scas
xlat
ins
push
ja
aam
adc
int
out
pop
mov
dec
jg
fucomp
cmps
mov
aam
push
out
pushf
mov
push
sbb
aad
hlt
push
jo
jno
int
sbb
push
sub
enter
push
jg
cmp
aaa
jge
mov
push
cwde
iret
sub
xlat
sbb
std
inc
gs
jl
jnp
cs
out
mov
add
pop
loopne
mov
inc
and
cs
mov
outs
push
fwait
xchg
push
mov
lea
and
ss
mov
retf
das
push
stc
push
pop
bsr
scas
pop
pusha
test
ja
mov
(bad)
cld
xchg
xchg
jns
jp
push
xor
dec
ja
std
bound
ror
inc
das
loop
mov
and
mov
aam
test
pushf
push
lock
or
cmp
sub
(bad)
and
(bad)
mov
pop
or
dec
jle
rcr
mov
jae
fcom
call
fldlg2
(bad)
mov
jge
dec
leave
jae
push
jne
enter
lods
adc
jmp
mov
clc
(bad)
lods
jmp
xchg
mov
mov
fwait
add
mov
fldenv
push
sbb
xchg
or
pop
outs
fwait
mov
push
mov
sahf
stos
and
jno
data16
retf
cld
into
adc
aam
jmp
pop
ins
fs
(bad)
movs
ret
lods
mov
dec
js
adc
mov
pop
ins
lods
jmp
sub
retf
(bad)
cwde
rcl
inc
dec
shl
cmc
(bad)
mov
or
cld
mov
fdiv
push
mov
mov
xchg
pop
jo
in
mov
add
out
and
push
popf
cmp
clc
mov
mov
and
xchg
xor
mov
add
bound
mov
jp
test
sbb
out
stos
out
out
loope
out
sbb
jl
dec
cld
ror
xchg
movs
(bad)
cs
(bad)
push
ins
(bad)
or
pop
adc
mov
in
sbb
sar
jbe
xor
cli
call
jae
sahf
mov
aaa
push
popf
mov
sbb
sbb
dec
stc
int
mov
aaa
xchg
jnp
movs
imul
jo
enter
sub
inc
and
test
pop
repnz
mov
test
cdq
jns
pushf
push
inc
cdq
dec
jp
mov
or
loop
outs
push
xor
xchg
lock
xlat
adc
add
(bad)
xchg
dec
mov
sub
in
push
jge
js
cld
push
popa
push
sub
xchg
xor
adc
and
fwait
xor
outs
cld
shl
fmul
xchg
mov
dec
fwait
stos
call
fcom
cld
or
add
push
push
xchg
lea
stc
and
call
or
scas
jb
ja
(bad)
dec
xor
mov
fsub
fsub
pop
push
addr16
pop
inc
pushf
dec
jl
jp
(bad)
movs
dec
movs
mov
inc
and
xor
mov
mov
jl
jge
inc
stos
int
dec
movs
dec
outs
push
and
psadbw
not
leave
push
data16
into
lods
retf
or
(bad)
loope
fwait
xlat
ret
jne
(bad)
retf
ror
push
bound
nop
mov
mov
cli
in
jecxz
dec
sti
int3
inc
dec
add
stos
shl
pop
jle
and
fucomi
nop
sub
mov
repz
jmp
pop
pop
inc
mov
stos
repnz
xor
xor
jnp
inc
sub
or
sbb
push
xor
aas
push
stc
pop
or
adc
mov
cwde
test
dec
lahf
mov
mov
frstor
imul
and
out
js
aam
cmps
nop
data16
in
out
fwait
mov
jecxz
inc
rol
push
imul
xchg
fistp
push
clc
enter
pop
shl
sub
xchg
mov
xchg
call
sbb
or
dec
int3
call
clc
push
es
xor
cmp
cmp
rcl
push
or
cmp
pop
fs
and
push
push
stc
xchg
das
aad
retf
fnstsw
call
cmps
ret
imul
(bad)
in
ja
lods
sbb
imul
or
es
pop
adc
xchg
mov
push
daa
ins
and
dec
cmps
add
or
pop
imul
ret
clc
adc
push
test
addr16
push
or
popa
add
mov
fwait
mov
and
sub
in
sub
sbb
in
mov
outs
popa
clc
jnp
jp
mov
(bad)
sbb
jmp
addr16
idiv
fidivr
adc
test
fcom
xor
mov
sbb
push
das
sbb
lods
add
or
or
pop
loop
jle
movs
xchg
inc
push
sub
mov
mov
retw
neg
xor
stc
and
dec
sti
mov
jo
xchg
mov
shl
add
mov
add
adc
mov
fidivr
pop
sub
repz
scas
and
gs
stc
xchg
inc
mov
xor
mov
pop
jo
mov
cmp
xchg
scas
aam
shl
jl
jnp
mov
lea
daa
sub
jb
mov
or
push
jecxz
jb
dec
test
adc
mov
bound
and
pusha
std
loope
mov
dec
lods
loopne
jmp
pop
mov
jbe
pop
jmp
ins
ret
dec
cmps
mov
jnp
jmp
lods
inc
fnstsw
adc
int
in
dec
jbe
lds
jnp
mov
xchg
pop
imul
mov
fucomp
out
push
cld
xor
and
sub
fsubrp
retf
mov
lds
adc
(bad)
jno
out
xchg
out
addr16
icebp
ds
adc
push
js
out
(bad)
out
add
cdq
fisub
add
push
in
retf
repz
imul
add
ins
or
sub
mov
inc
(bad)
loop
pop
cmp
adc
sbb
jnp
pushf
out
mov
repnz
jg
sbb
dec
jp
sbb
leave
icebp
mov
jnp
xor
fwait
into
addr16
cmp
cwde
scas
dec
jns
stos
lock
(bad)
mov
jl
jecxz
(bad)
push
fs
mov
xchg
repnz
mov
daa
ror
mov
sti
gs
ins
cdq
cmc
fadd
xchg
fsubrp
xor
pop
ins
xchg
test
or
es
cmp
test
call
inc
fisub
icebp
(bad)
jg
mov
sbb
pop
aaa
jge
imul
ins
int
xor
mov
stos
cmps
xchg
repz
in
push
ins
dec
je
mov
sub
xor
ror
and
lea
cmp
les
push
jmp
mov
lods
jb
and
nop
repz
mov
stos
call
jle
jl
xor
push
popa
xlat
shr
cwde
mov
mov
push
retf
in
add
inc
fisttp
cmp
push
or
(bad)
cdq
scas
and
out
loope
mov
fdiv
ficom
scas
lods
popf
lods
inc
pushf
lods
int3
cmp
loop
sub
mov
and
and
push
(bad)
pop
xlat
call
inc
cmp
or
movs
xchg
das
add
call
or
sub
in
out
test
loope
(bad)
cmp
sbb
adc
add
ret
inc
jo
inc
jno
js
or
outs
mov
push
scas
mov
cmp
pop
hlt
mov
or
fnstcw
and
jmp
jb
(bad)
mov
mov
movs
jae
push
icebp
mov
add
retf
inc
dec
mov
mov
imul
jecxz
add
jmp
test
ja
pop
(bad)
icebp
pop
outs
loopne
mov
mov
pop
outs
pop
out
sub
loop
stos
shl
and
rcr
dec
push
out
and
es
(bad)
pop
cmp
bound
ja
jb
jne
mov
stos
sahf
push
push
mov
loopne
mov
movs
ret
push
sub
xchg
sub
call
test
test
mov
jnp
data16
shl
int
mov
cwde
movs
push
sbb
jno
daa
ins
jge
sub
stos
push
fistp
add
push
or
inc
and
pusha
cmp
lock
mov
dec
sub
jg
cmp
sbb
scas
mov
jns
xchg
cmc
popa
adc
push
arpl
mov
jmp
fistp
scas
push
mov
in
sbb
scas
into
xor
je
out
ss
sub
jg
mov
cmps
xchg
movs
(bad)
hlt
ficomp
cli
push
sub
jo
test
or
or
fadd
test
jg
movs
ret
stos
dec
test
(bad)
das
pop
cmp
jnp
xor
mov
xor
cmp
lock
test
mov
dec
inc
cmp
cmp
out
fsubp
sub
je
and
retf
test
mov
test
dec
inc
ins
push
cs
in
in
mov
mov
lods
xchg
cmp
dec
jp
xchg
fxtract
jp
add
inc
fcomp
cli
cwde
dec
and
jle
sbb
jg
test
mov
mov
aad
mov
adc
and
push
mov
dec
test
loope
jns
mov
fwait
stos
call
lahf
cld
call
push
mov
pop
outs
pop
hlt
(bad)
int
xchg
clc
leave
xchg
ss
pop
jns
jle
jo
sbb
xchg
mov
retf
lods
call
or
inc
xor
push
jo
jne
neg
add
sub
into
pushf
xchg
das
adc
(bad)
dec
(bad)
rcr
adc
imul
adc
xor
or
scas
int
ds
shl
movs
ror
sti
or
or
movs
(bad)
fsubr
cmp
arpl
and
cmp
xor
das
(bad)
test
push
out
loopne
mov
shl
pop
imul
aaa
shl
xchg
xor
scas
pop
xor
push
sbb
adc
inc
lods
fneni(8087
shl
test
leave
cmp
xchg
xlat
pop
sub
test
iret
test
push
ret
outs
(bad)
test
imul
add
push
jmp
in
test
fwait
sbb
out
or
pop
jnp
mov
cmps
dec
enter
jmp
ret
repnz
inc
dec
fcomp
sub
(bad)
jecxz
daa
sbb
adc
loopne
lea
test
jecxz
call
or
adc
rcr
scas
adc
jle
jns
xchg
inc
jbe
and
popa
nop
pop
ins
aas
add
mov
adc
jl
mov
xor
push
(bad)
mov
xor
mov
das
dec
mov
inc
mov
shr
mov
iret
std
fs
mov
or
push
test
cmp
pop
mov
pushf
stos
lods
fwait
stc
inc
xor
xchg
loope
cmp
jp
or
add
cmps
div
and
dec
xor
mov
adc
inc
and
mov
cmp
pusha
push
stos
push
adc
push
fs
add
mov
mov
clc
push
sub
mov
xchg
pop
push
and
mov
fbstp
jbe
or
xchg
cmps
dec
addr16
stos
jmp
fldl2t
(bad)
icebp
xchg
test
ficom
mov
data16
scas
in
int
arpl
pop
out
aam
outs
add
or
ins
sbb
dec
in
jae
retf
sbb
cmp
lods
fwait
xor
lock
adc
mov
mov
cmc
xchg
and
jge
jnp
adc
hlt
jnp
outs
or
in
mov
outs
mov
xchg
movs
xchg
neg
xlat
mov
aaa
lods
bnd
and
pop
idiv
pop
jb
jnp
mov
loop
scas
pop
or
shr
mov
jne
leave
push
addr16
cld
iret
inc
pop
jmp
test
jmp
dec
pop
cmp
push
and
scas
jmp
mov
(bad)
sahf
lods
push
cli
dec
inc
mov
jae
cmps
ret
sub
adc
pushf
cmp
mov
lds
mov
nop
add
xchg
push
add
aas
xor
push
repz
push
or
adc
(bad)
das
add
sub
xor
ins
and
sub
and
and
and
xor
and
or
sbb
and
and
and
and
ss
and
and
aaa
mov
push
mov
and
outs
and
sub
xor
push
push
and
and
add
and
xor
outs
and
sub
and
xor
xor
es
and
xor
pop
and
and
cmp
sub
and
sub
xor
sub
cmp
aaa
push
repz
push
or
adc
or
and
xor
xor
aas
cmp
pop
and
sub
and
sub
fisub
xor
push
pop
sub
and
sub
and
sub
fisub
jg
pusha
xor
xor
sub
cmp
sbb
and
xor
xor
sub
jo
and
push
or
xor
xor
sub
cmp
sbb
and
xor
xor
sub
jo
and
push
pop
and
and
cmp
push
or
pusha
hlt
and
and
xor
sub
cmp
cmp
cmp
pop
and
sub
and
sub
fisub
xor
pop
sub
and
sub
and
sub
fisub
jg
and
and
xor
and
and
and
and
cmp
and
and
cmp
and
and
cmp
xor
xor
push
repz
push
or
adc
xor
aas
pusha
xor
or
and
push
or
ds
ret
push
or
adc
xor
aas
adc
add
jno
and
push
or
xor
push
(bad)
das
and
or
adc
xor
aas
xor
add
jno
and
push
or
xor
push
retf
push
or
adc
xor
xor
or
and
push
daa
push
into
das
and
outs
and
sub
and
xor
add
or
and
mov
pop
and
and
aas
mov
push
or
adc
or
and
push
and
and
pop
and
sub
sbb
and
and
and
and
aas
mov
push
or
adc
or
and
push
xor
and
pop
and
sub
sbb
and
and
aas
mov
push
or
adc
or
and
push
push
xor
push
or
and
sub
or
and
and
aas
mov
push
or
adc
or
and
push
bound
and
pop
and
sub
or
and
and
aas
mov
push
or
adc
aas
add
sub
xor
push
or
and
sub
or
pop
and
and
aas
mov
push
or
adc
or
and
sub
pop
and
and
add
push
or
adc
fisub
cmp
and
push
je
and
push
jne
and
xor
xor
ss
jbe
and
xor
dec
ja
and
(bad)
adc
and
and
pop
sub
and
or
(bad)
ds
sub
add
add
and
sub
xor
jno
and
push
or
and
(bad)
and
popa
adc
and
and
and
and
inc
and
and
and
and
and
and
and
and
and
and
sub
and
sub
and
and
and
and
and
adc
and
and
and
xor
jns
and
and
and
sub
and
xchg
aaa
cli
dec
and
aaa
dec
idiv
xchg
sub
jo
and
xchg
jge
jo
and
xchg
jge
daa
sub
scas
xchg
jge
inc
and
aaa
mul
jo
xchg
jge
cli
add
and
and
add
and
and
mov
sub
adc
and
jo
xchg
aaa
cli
or
and
or
jo
and
and
adc
and
and
and
and
xor
and
and
and
sub
daa
or
and
(bad)
cs
sub
ins
and
sub
and
and
sub
and
and
and
and
cmp
and
cmp
and
and
and
and
xor
and
and
and
and
sub
and
or
or
and
sub
or
and
sub
dec
and
sub
lock
and
or
and
or
add
sub
sub
and
and
and
and
and
and
and
and
aaa
and
sub
cmp
and
pop
and
and
and
xor
jg
and
dec
inc
and
sub
and
sub
inc
and
sub
and
sub
dec
inc
and
sub
and
sub
and
sub
push
pop
xor
push
or
push
sub
and
outs
and
sub
aaa
sub
push
sub
and
sub
push
sbb
and
or
sub
and
and
and
sub
(bad)
or
sub
sub
ins
and
sub
and
or
and
and
and
and
jns
and
and
and
and
and
and
cmp
and
xor
and
xor
and
xor
and
push
scas
xor
push
or
and
scas
xchg
fisub
or
adc
and
and
and
and
xor
xor
push
or
and
scas
xchg
fisub
or
adc
and
and
and
and
push
xchg
xor
push
or
and
scas
xchg
fisub
or
mov
cmp
mov
or
and
aaa
and
sub
xor
and
and
and
sub
and
and
xor
and
sub
and
xor
xor
push
sub
or
and
or
and
cmp
sub
jge
and
aaa
and
xor
xor
push
and
dec
and
sub
xor
xor
xor
fidiv
xor
sub
and
or
and
or
and
cwde
pop
xor
and
or
sub
xor
push
and
or
and
sub
daa
pop
dec
and
sub
and
sub
cmp
and
sub
and
and
add
and
or
and
pop
and
sbb
dec
and
sub
sub
sub
adc
or
and
xor
add
pusha
and
and
sub
sub
add
and
and
sub
adc
xor
pop
das
and
and
sub
add
and
or
and
pop
xor
pop
das
and
and
sub
add
and
or
and
pop
xor
aas
or
and
and
sub
div
daa
cmp
and
add
es
dec
and
sub
sub
daa
adc
xor
pop
and
and
daa
or
and
es
es
dec
and
sub
xor
aas
jo
or
and
xor
and
sub
je
or
and
xor
xor
pop
and
and
sub
xor
and
and
aas
pusha
or
and
xor
adc
aaa
xor
xor
pop
and
and
xor
add
adc
and
pusha
or
and
xor
sub
adc
push
dec
and
sub
and
and
and
sub
xor
xor
or
and
es
and
pop
xor
add
and
and
xor
and
sub
or
and
xor
cli
xor
xor
sbb
xor
aas
sub
or
and
xor
and
xor
xor
or
and
xor
xor
or
and
xor
xor
xor
lods
popa
and
and
aaa
and
xor
aaa
xor
scas
xchg
or
and
xor
pop
and
and
sub
div
aaa
xor
scas
xchg
xor
or
and
es
and
pop
xor
pop
and
and
sub
test
and
sub
xor
or
and
es
and
pop
xor
aas
or
xor
xor
aaa
div
xor
xor
cmp
jl
(bad)
xor
push
and
sub
das
xor
pop
and
and
sub
div
das
cmp
and
push
and
es
and
pop
and
sub
or
or
and
xor
xor
xor
sub
or
sub
and
and
sub
adc
xor
pop
das
and
and
sub
add
and
or
and
pop
xor
pop
das
and
and
sub
add
and
or
and
pop
xor
pop
das
and
and
or
and
xor
and
sub
and
and
and
mov
mov
inc
ins
and
sub
cmp
and
and
sub
and
sub
push
and
sub
xor
pop
xor
and
or
and
xor
xor
or
xor
dec
push
and
sub
and
and
adc
and
mul
and
and
or
or
and
(bad)
sub
sub
sub
and
or
or
and
popa
cmp
and
and
and
and
and
and
and
and
and
and
and
and
movs
and
out
jmp
mov
and
dec
jae
push
push
inc
dec
push
jb
push
dec
push
push
inc
inc
push
push
jb
push
dec
push
push
inc
inc
jb
inc
inc
inc
push
or
dec
push
inc
dec
push
dec
dec
inc
or
jbe
push
push
dec
dec
dec
sbb
adc
adc
arpl
push
push
push
inc
sbb
push
inc
dec
or
jo
inc
dec
dec
inc
imul
dec
dec
inc
dec
sbb
adc
sbb
adc
adc
sbb
jae
push
push
inc
dec
push
jb
push
dec
push
push
inc
inc
push
push
jb
dec
push
dec
dec
inc
jb
push
dec
push
push
inc
inc
jae
push
and
and
and
and
and
and
jo
fs
fs
mov
and
icebp
and
and
dec
and
dec
and
inc
and
dec
and
and
and
add
movs
and
test
imul
adc
jl
jle
sub
call
fidivr
mov
fucomp
mov
shr
fucompp
fistp
lea
ins
nop
je
cmp
sbb
hlt
lds
cdq
xor
out
je
scas
js
jno
push
rol
fidivr
jae
pushf
add
push
enter
push
fmul
mov
nop
repz
lods
call
xchg
mov
lock
pop
push
and
inc
mov
fsubr
xor
jne
and
inc
jno
cmp
xor
xor
and
push
xor
aaa
add
push
popa
dec
sub
jge
sub
sub
pop
fs
retf
stos
leave
lods
iret
lods
retf
mov
jmp
aad
fsubr
into
clc
cdq
test
int3
scas
retf
fs
xor
jl
jns
das
dec
jle
sub
and
sub
sub
jle
jg
js
sub
dec
sub
lods
iret
lods
mov
mov
shr
fucompp
fistp
(bad)
jmp
in
(bad)
in
mov
fsubr
mov
mov
mov
fstp
xchg
dec
sub
jl
sub
jl
sub
sbb
push
sub
sbb
cmp
inc
and
sub
xor
and
es
cmp
or
or
add
or
movd
or
pop
fstp
pop
popf
cmp
fucomi
fidivr
dec
js
outs
push
addr16
cmp
ins
pop
ds
outs
or
ins
push
push
leave
mov
movs
shl
aad
ins
pop
outs
or
imul
es
daa
inc
jbe
daa
adc
pop
and
xchg
cmc
mov
mov
and
jecxz
mov
and
and
inc
je
jle
ja
xor
inc
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
and
adc
adc
and
jl
jne
ja
and
and
adc
jae
jb
and
inc
jne
jo
es
ja
and
sub
and
and
ja
jbe
jno
and
inc
nop
imul
(bad)
or
jbe
addr16
aam
dec
mov
in
mov
in
mov
push
xor
xor
push
fsub
cdq
mov
cmps
les
cmp
bnd
pop
cld
retf
fdivr
into
and
dec
bnd
out
hlt
push
sub
fsubrp
ror
pushf
out
dec
lods
fwait
cmp
mov
mov
cmp
fs
push
movs
dec
jnp
jns
cs
or
into
stos
push
daa
inc
shl
lea
popf
movs
inc
in
xor
out
adc
or
fisub
loopne
loope
and
call
add
mov
xor
sti
retf
pop
imul
lods
mov
aaa
leave
shr
imul
push
scas
pop
cmp
sub
mov
xchg
mov
and
in
fucomp
fdiv
mov
(bad)
fld
cwde
in
dec
call
dec
mov
sti
push
bound
movs
push
ja
stc
fwait
shl
push
sahf
hlt
or
test
stos
popf
scas
fs
aas
cwde
(bad)
repnz
dec
jns
or
loopne
imul
jecxz
pushf
cmp
dec
jnp
mov
xor
shl
sbb
push
retf
mov
int
sub
inc
and
(bad)
neg
loopne
mov
dec
jnp
(bad)
pop
push
push
jb
mov
xor
into
repnz
jg
and
popf
pusha
push
sub
test
and
push
push
xor
das
push
pop
popa
add
in
and
sub
cmps
rcr
into
fadd
fstp
or
cmp
add
mov
mov
jecxz
in
loope
adc
fucomp
dec
enter
mov
inc
cmpxchg
mov
sbb
jle
mov
push
(bad)
call
mov
xor
clc
stos
shr
mov
stc
jmp
hlt
(bad)
mov
inc
jno
mov
push
pop
jo
push
arpl
cdq
jns
int3
cwde
push
in
inc
and
lods
jns
out
mov
jge
int
push
sub
shl
shl
in
dec
sub
leave
test
ret
arpl
js
sub
or
call
xor
fisubr
xchg
clc
pop
add
mov
mov
call
out
mov
mov
mov
(bad)
loop
outs
fwait
stos
push
xor
xchg
cld
int3
std
es
je
jo
addr16
fdiv
push
out
push
(bad)
xor
jge
ret
sub
dec
jns
fucomi
mov
add
mov
sub
ret
out
fcom
call
rcr
inc
jge
or
into
(bad)
addr16
hlt
jno
cmp
push
mov
fld
and
stos
or
push
into
jb
jmp
push
ret
pusha
push
lods
mov
int3
mov
les
es
dec
inc
push
out
loope
call
mov
(bad)
cmp
or
popa
cmp
pop
stc
in
add
sbb
test
pop
aaa
(bad)
mov
cmp
xchg
pop
stos
aad
sbb
dec
ret
repnz
cmp
add
xchg
lock
in
add
push
mov
lods
pop
fs
dec
stos
arpl
add
hlt
enter
scas
lahf
stos
int3
jno
je
sbb
and
icebp
retf
sbb
popf
ins
adc
ss
mov
outs
rcr
shr
clc
loop
popf
test
(bad)
mov
mov
sub
(bad)
in
dec
cmp
add
push
mov
adc
sbb
(bad)
mov
jno
imul
inc
idiv
mov
in
mov
and
lods
and
(bad)
mov
and
out
sbb
scas
xchg
rcr
movs
inc
(bad)
popa
retf
(bad)
gs
push
lods
xchg
test
repnz
lock
ins
invd
stos
push
daa
test
sbb
js
ja
(bad)
pop
arpl
int
mov
add
hlt
js
cwde
add
mov
enter
pop
mov
mov
movs
ret
xor
enter
mov
rcr
lods
retf
add
(bad)
sub
and
iret
aad
test
aad
aad
adc
into
dec
fst
out
js
pop
daa
jmp
inc
jne
mov
out
cmps
retf
fs
stc
cld
rcl
dec
and
and
in
push
mov
vcmpeqss
fcomip
xchg
mov
pop
movs
and
mov
ja
js
(bad)
out
adc
mov
mov
fcomp
add
(bad)
in
test
retf
jle
mov
imul
push
test
ss
mov
dec
repz
mov
xor
add
inc
ret
jp
sbb
ffree
test
jmp
clc
into
xor
iret
movs
fidiv
push
bound
push
adc
jle
jae
cdq
mov
fsubr
sbb
sub
xchg
pushf
(bad)
mov
imul
inc
jmp
fldcw
test
push
popa
add
jl
mov
dec
icebp
jmp
gs
outs
mov
and
adc
inc
scas
ret
iret
stc
fwait
aas
or
cdq
mov
imul
xchg
cmps
sbb
pop
shl
xchg
scas
std
dec
jge
sar
mov
outs
cdq
icebp
ret
pop
xchg
mov
mov
dec
sub
xchg
imul
pop
ret
xor
scas
xchg
mov
inc
shl
adc
(bad)
pop
inc
dec
jg
jp
stos
rcr
cli
(bad)
mov
popa
pop
test
add
add
jmp
das
push
outs
pop
imul
jae
adc
mov
sub
fcom
or
mov
xor
jg
sar
cmps
fwait
cli
retf
push
or
dec
sub
hlt
iret
pop
cmps
cdq
cdq
push
sub
jae
jb
icebp
(bad)
cmp
ds
cmp
shl
adc
shr
(bad)
mov
ds
pop
inc
pop
add
pushf
mov
gs
nop
inc
sti
dec
mov
sbb
mov
mov
cli
jno
dec
dec
daa
adc
add
push
add
nop
movs
jmp
ret
icebp
xchg
mov
repnz
ins
mov
test
movs
aad
test
stc
fucom
test
sysexit
test
ja
or
add
push
xchg
bound
and
stc
sahf
stc
iret
sub
jae
loop
ret
xor
repz
cli
fdiv
iret
test
mov
(bad)
adc
mov
mov
(bad)
cld
iret
inc
jb
aas
jae
rcr
popf
shl
jb
mov
mov
mov
cmp
or
xchg
not
inc
es
(bad)
leave
cmp
adc
pop
arpl
mov
popa
push
mov
sbb
sti
leave
lods
lahf
cld
push
sub
loop
in
push
(bad)
cdq
xor
inc
add
test
mov
mov
sti
fnstcw
mov
sub
std
fwait
stc
popf
jbe
mov
out
fdivr
(bad)
xor
add
jge
ficomp
dec
xlat
mov
lods
push
xchg
dec
(bad)
xor
jne
sbb
mov
xor
push
dec
jecxz
rcr
jge
inc
leave
push
arpl
sub
arpl
sbb
jae
dec
mov
call
mov
sub
mov
sub
mov
test
push
leave
sbb
cmp
sub
mov
mul
test
es
aas
or
das
xor
push
cmp
icebp
pop
ror
cs
push
fwait
push
dec
sar
rol
pushf
mov
call
mov
cdq
adc
adc
ss
stos
mov
jle
sub
inc
mov
call
out
push
int3
mov
sub
dec
cmp
in
lea
push
(bad)
mov
and
test
out
add
adc
mov
add
popa
jecxz
cmps
mov
mov
mov
jl
jecxz
gs
sahf
stos
data16
mov
pop
retf
dec
xchg
movs
dec
xchg
inc
mov
cmps
mov
jno
imul
jns
inc
sar
scas
mov
mov
dec
icebp
out
and
mov
add
aaa
xchg
dec
xlat
inc
enter
fnsave
push
lea
sbb
cs
jge
xor
xor
aam
test
ss
cmps
push
adc
xor
leave
test
leave
cmp
mov
mov
mov
cmps
dec
(bad)
jg
push
jecxz
mov
in
mov
cmc
pop
rcl
jne
inc
int
daa
icebp
gs
shl
hlt
jbe
pop
sub
pop
imul
inc
sub
xchg
push
mov
mov
mov
push
cmc
push
cmc
movs
mov
shr
les
stos
pop
ror
and
fild
or
call
retf
adc
jecxz
jge
jecxz
dec
in
push
bound
cmp
out
scas
je
cmc
mov
inc
call
sub
pop
sub
pmullw
xor
xlat
loopne
push
lea
xchg
add
mov
pusha
hlt
adc
jne
ds
out
mov
adc
mov
jge
fidiv
inc
rcl
scas
retf
pop
cli
pop
clc
dec
xlat
jb
bound
push
or
sub
seta
pushf
cmp
mov
dec
fnstsw
jmp
xchg
aas
cmp
jo
retf
aas
or
addr16
inc
mov
xchg
inc
test
mov
pop
mov
xchg
scas
pop
xchg
jg
aam
sbb
outs
sub
mov
xchg
repz
inc
mov
lds
fs
pop
mov
mov
mov
cdq
or
iret
setle
pop
nop
das
jecxz
bound
mov
outs
adc
add
outs
(bad)
or
jno
daa
sti
xchg
retf
inc
mov
jge
fsub
sti
ins
pushf
or
popa
call
icebp
mov
cmp
pop
jmp
stos
mov
jbe
mov
cmp
inc
repz
mov
fidiv
pop
mov
movs
push
imul
bound
cdq
xor
fwait
push
mul
test
ret
cmp
out
sub
dec
xor
cmp
and
adc
adc
enter
push
aam
cli
pop
cmp
(bad)
mov
mov
push
std
addr16
xchg
xor
xlat
push
ret
adc
aad
pop
jmp
fidivr
dec
test
fmul
xor
popf
pop
mov
leave
cmp
outs
xchg
sub
sub
sbb
sbb
jecxz
mov
jnp
pusha
xchg
nop
stos
pop
mul
fadd
pop
fistp
cmp
cmc
push
or
out
inc
shr
sahf
sbb
or
jo
cmps
inc
cmp
cwde
pushf
push
int
enter
adc
mov
pusha
xor
and
push
mov
jmp
jno
shl
icebp
pop
repnz
shr
fidivr
dec
out
mov
bswap
inc
ret
inc
jbe
push
in
push
xchg
mov
mov
das
jmp
pop
nop
xor
adc
xchg
mul
xor
cmp
(bad)
mov
lahf
aaa
xor
ret
cdq
jmp
xor
cmp
push
shr
jmp
adc
sub
data16
add
adc
imul
inc
cld
popa
xor
mov
shl
jae
xor
fld
les
jae
mov
ins
shl
sub
repz
mov
xchg
fistp
push
out
mov
add
jbe
jmp
sub
lods
jns
pop
fidivr
pusha
das
imul
push
mov
ins
cmc
pop
xchg
das
aam
les
mov
xchg
cmp
adc
xor
xchg
dec
mov
into
dec
fmul
inc
enter
push
xchg
mov
dec
cmp
retf
cmp
xlat
jno
mov
(bad)
jle
pop
cdq
psubd
test
and
das
out
ret
cmp
mov
jno
jnp
int
mov
jne
lahf
xor
sbb
or
cmps
test
mov
xchg
xor
mov
pop
jmp
lea
mov
inc
shl
pop
xor
pop
std
stos
jne
push
xor
imul
sub
dec
mov
sub
pop
fisttp
xchg
cs
imul
test
repnz
and
mov
jg
push
push
popa
xor
jbe
sahf
add
stos
push
push
into
mov
add
in
mov
adc
sbb
pmaddwd
push
mov
es
das
or
push
mov
call
cmp
icebp
inc
mov
pushf
mov
xchg
push
loop
push
stc
outs
sub
mov
inc
jne
fstp
mov
xlat
imul
stos
gs
pusha
sub
jnp
(bad)
jle
in
add
stos
fwait
mov
sbb
sti
popf
sbb
inc
std
int
fs
aaa
and
jge
loopne
not
push
lock
and
or
es
push
aam
fdivr
mov
mov
push
les
jle
xchg
add
jbe
xor
fst
fnstenv
cmp
lods
outs
xor
pop
fmul
nop
dec
shl
ficomp
mov
stos
xchg
jo
bound
aaa
ret
cs
push
pushf
pop
(bad)
or
les
sbb
push
test
daa
stc
call
loopne
dec
mov
in
adc
popa
and
mov
xor
add
push
lock
(bad)
ja
push
mov
sbb
lods
jno
adc
dec
sahf
cwde
push
xor
lods
mov
retf
inc
rol
inc
and
movs
pop
lea
sub
dec
std
test
mov
lea
mov
loope
push
dec
ret
rcr
dec
jmp
mov
jo
movs
ins
xor
add
ret
pop
xor
loope
adc
pop
mul
add
cmp
dec
in
push
repnz
mov
xchg
scas
push
jmp
mov
sbb
or
inc
mov
mov
mov
iret
pop
sti
pop
cmp
ret
or
jmp
add
pusha
sub
dec
aad
sub
imul
call
cmp
aam
(bad)
movs
stos
inc
shl
xchg
dec
fldenv
ror
fcomp
loopne
inc
lds
jns
cli
ja
push
ss
jnp
sbb
inc
int
loop
cmp
fcom
mov
lds
and
je
cmp
sbb
cmp
sbb
and
test
retf
in
mov
stos
push
xor
sub
test
into
cmp
sub
inc
cli
cmps
push
fwait
pop
int3
or
push
stc
jp
sub
mov
shl
xchg
aas
jmp
push
mov
jmp
rol
imul
out
pop
sti
pop
ret
call
jmp
ds
jmp
mov
adc
jge
imul
lds
sbb
jno
sbb
ret
or
pop
(bad)
jle
mov
add
sub
mov
nop
push
rcl
in
lods
lahf
inc
or
jno
push
ret
cdq
cmp
scas
mov
(bad)
jbe
fdivr
pop
aam
sub
pusha
fadd
pop
sti
jb
mov
xor
dec
mov
jmp
cmps
mov
psubb
or
stc
xchg
mov
ss
cmp
sahf
scas
mov
xor
fwait
sbb
or
mov
mov
int3
bound
aad
out
push
inc
ret
(bad)
les
push
gs
mov
xchg
xor
psllw
inc
jae
cmp
adc
cld
pop
mov
test
js
aaa
and
pop
sbb
add
popa
mov
test
push
int
jns
dec
pushf
data16
call
mov
test
push
mov
je
arpl
push
mov
clc
pop
cdq
aaa
fmul
arpl
mov
cld
pop
sti
jl
inc
lods
stos
pop
cmp
repnz
mov
xchg
xor
mov
add
inc
mov
pop
ret
pop
sub
mov
or
mov
inc
jmp
mov
jl
jl
pop
xchg
mov
xor
popf
pop
iret
mov
mov
lock
stos
(bad)
fidiv
aad
mov
mov
cmps
jg
bound
fiadd
dec
jnp
ss
push
lock
cmp
test
cld
push
fstp
setnp
ret
lods
jns
jnp
neg
mov
ins
aaa
fwait
jl
outs
xor
out
mov
movs
pop
xchg
mov
mov
mov
rol
lea
movs
push
pop
sub
addr16
add
pop
(bad)
xor
(bad)
pop
xchg
sub
fdivr
pop
mov
lods
gs
neg
movs
movs
fs
inc
shl
mov
nop
add
enter
mov
and
mov
mov
add
addr16
sub
or
push
xor
ins
cmp
xchg
mov
push
xchg
rcl
sar
cli
lods
pop
enter
adc
call
into
scas
jo
jb
push
clc
jbe
xchg
inc
mov
ja
xchg
ds
popa
loopne
inc
ret
das
out
arpl
js
mov
mul
fild
push
xchg
mov
and
es
push
rol
clc
dec
(bad)
cmp
fld
cmc
xchg
or
fsubr
std
stos
jne
test
adc
xchg
mov
enter
ds
gs
dec
in
mov
hlt
push
test
int3
inc
mov
jnp
xchg
add
xchg
aas
das
adc
rol
icebp
dec
mov
jne
imul
cmp
lods
test
cmp
fnstcw
mov
mov
xchg
cs
or
inc
mov
sar
push
retf
movs
popa
xchg
xor
jge
jae
push
mul
push
xchg
aas
fwait
dec
(bad)
add
or
sbb
retf
mov
test
sub
adc
not
sub
cmp
pop
rol
inc
out
mov
(bad)
cmp
imul
popf
cmp
cld
test
les
outs
fwait
pop
imul
cmp
bound
nop
adc
addr16
and
and
dec
jmp
push
jmp
jae
xchg
push
mov
push
je
rol
jl
in
jg
mov
jg
in
movs
jo
inc
add
stc
pop
xchg
div
ss
push
sub
clc
pushf
aaa
fwait
das
stc
pop
not
pop
mov
and
leave
pop
cld
mov
stos
pop
bnd
add
fwait
popa
ds
pop
(bad)
mov
jl
(bad)
out
dec
popf
mov
ret
inc
shr
out
sbb
push
icebp
test
adc
xor
das
and
repz
retf
add
jecxz
bound
add
dec
xchg
pop
clc
dec
jmp
sti
ins
add
outs
call
addr16
daa
and
mov
repnz
rol
jo
xor
xchg
shl
jl
les
mov
push
xchg
into
dec
adc
in
xchg
add
pop
imul
sub
inc
mov
jbe
in
sbb
xor
mov
pop
sar
retf
aad
cmp
pusha
and
repz
repnz
jecxz
call
cmp
sbb
(bad)
add
fucomp
ins
or
mov
int
repnz
call
and
mov
jp
popf
test
mov
inc
mov
mov
inc
int
xchg
xor
out
sbb
mov
aas
(bad)
cmp
and
sbb
fs
into
gs
(bad)
push
fimul
jmp
(bad)
adc
fisttp
test
push
jmp
pop
(bad)
jg
cmc
pop
hlt
mov
shr
mov
gs
scas
push
pusha
daa
int
(bad)
jl
push
adc
rcl
push
xchg
cmp
mov
aad
xchg
pop
xchg
inc
mov
mov
loope
in
jecxz
mov
jecxz
mov
mov
mov
(bad)
out
mov
in
loope
out
loop
mov
mov
mov
loop
push
clc
jbe
jl
sahf
js
in
retf
stos
push
jmp
mov
je
push
jmp
rcl
sub
adc
or
test
retf
cmps
pop
test
mov
inc
(bad)
lods
imul
lahf
ds
fisttp
hlt
dec
sub
or
cmp
cdq
inc
add
inc
std
pop
aas
call
pop
cmp
sub
or
scas
jmp
or
adc
pusha
mov
ret
dec
ror
cmps
addr16
aas
call
or
ja
seta
mov
push
xchg
jbe
mul
rol
pop
xor
push
mov
push
xor
mov
push
add
cmps
outs
xchg
xor
ret
movs
dec
sub
cmp
pop
cwde
dec
push
les
or
loope
ins
xor
psllw
pop
enter
sub
pushf
aas
xor
mov
add
push
sub
in
inc
shl
dec
xor
fsubr
jae
xor
adc
push
xchg
add
mov
sbb
lock
out
mov
sub
cli
je
pusha
repnz
mov
ret
shl
mov
sub
inc
into
dec
jb
jmp
or
pop
xchg
ins
out
rcr
fwait
jge
lds
and
jmp
or
pusha
and
sbb
sbb
add
dec
daa
xor
mov
push
mov
jae
shl
cmp
dec
cld
mov
mov
fiadd
(bad)
mov
adc
mov
(bad)
mov
xor
xchg
jae
test
xor
das
repz
mov
mov
fild
movs
push
inc
nop
lods
jae
shufps
repnz
imul
or
sbb
or
data16
xor
aam
out
sbb
add
push
(bad)
xchg
cmp
sbb
in
neg
push
(bad)
push
aaa
lock
lea
cmp
or
or
dec
in
lods
jbe
lock
mov
push
jo
pminub
fcomp
mov
in
sbb
or
pushf
sbb
xchg
xchg
mov
(bad)
cli
cmp
inc
repz
push
jmp
xchg
stos
xchg
mov
stos
sbb
test
and
retf
ins
mov
vmovaps
sbb
cdq
sti
lahf
cwde
mov
loopne
sbb
jge
movs
mov
mov
add
push
test
xchg
jl
push
test
repz
mov
lds
pop
std
mov
push
neg
adc
jae
xor
out
fs
stos
leave
cmp
leave
dec
jle
cmp
gs
in
aam
push
cmp
xchg
mul
std
jge
int3
scas
pop
ins
jecxz
mov
jmp
ret
cli
retf
repz
(bad)
push
fs
inc
daa
or
mov
xor
ret
icebp
mov
jb
aaa
jecxz
inc
and
jmp
aas
jmp
and
cmp
in
inc
jb
call
std
lds
ss
xor
cld
cwde
jbe
jb
daa
fistp
mov
cmp
jno
adc
in
imul
jg
pop
shr
(bad)
or
inc
int3
dec
fimul
ja
add
or
add
movs
push
mov
mov
in
mov
ins
in
xchg
inc
ret
xor
lahf
cmp
mul
call
dec
cmp
in
(bad)
add
jl
js
push
(bad)
inc
les
jns
(bad)
cmp
movs
dec
jge
push
repz
(bad)
jg
movs
pop
div
mov
and
and
cmps
pop
call
inc
rol
and
scas
addr16
pop
cmp
(bad)
jecxz
(bad)
cmps
jae
(bad)
sti
outs
xchg
cmp
maskmovq
pop
enter
out
jnp
jmp
jge
jmp
and
stos
pop
xchg
cmc
inc
xchg
movs
push
add
jg
jns
mov
mov
xchg
xor
add
daa
aaa
add
sbb
adc
pop
in
add
(bad)
mov
mov
sbb
jg
push
push
in
mov
ss
mov
je
jge
jl
adc
mov
xor
mov
das
out
mov
rcl
push
out
scas
gs
mov
mov
cmp
xchg
push
test
pop
cmp
ret
dec
add
and
addr16
inc
(bad)
pop
int
sbb
cmp
retf
cmp
ret
pop
mov
xor
aam
mov
sub
inc
mov
dec
retf
(bad)
inc
enter
cs
mov
clc
dec
rol
push
ss
mov
retf
cmp
dec
mov
push
push
jecxz
dec
xor
cmp
dec
fcomp
jne
stos
mov
pop
test
es
mov
test
inc
mov
mov
mov
cdq
cmp
pop
sahf
mov
std
mov
call
test
sub
and
sbb
mov
sub
push
stc
test
jp
mul
nop
or
jns
adc
inc
mov
add
sar
xor
push
das
sbb
imul
ret
shl
sbb
sbb
test
ss
adc
xor
mov
ds
in
jg
mov
lock
xor
xor
xchg
add
out
cli
mov
inc
mov
push
fld
call
gs
nop
or
rcr
(bad)
ss
ret
popa
(bad)
jl
mov
fisttp
test
(bad)
ins
xor
aaa
(bad)
or
cmp
jmp
mov
mov
popa
add
mov
test
cmp
repnz
mov
cmp
call
dec
(bad)
cmp
movs
jae
dec
jmp
push
xor
xor
jmp
push
test
sbb
mov
or
xor
fild
cmp
or
ja
imul
mov
jns
in
(bad)
adc
(bad)
adc
inc
ret
pop
test
dec
jmp
pop
add
ja
out
mov
movs
pop
xchg
and
rol
std
ins
xor
adc
or
in
js
dec
mov
cmps
mov
pop
add
push
fimul
aad
dec
or
mov
sbb
ret
push
sti
lods
test
(bad)
arpl
push
lea
xor
mov
mov
sar
pop
sti
jnp
mov
pusha
aas
not
add
mov
test
xchg
aas
into
(bad)
push
repz
cmp
pop
mov
mov
(bad)
xchg
push
rol
jg
sbb
sub
lods
dec
sub
bound
in
pop
xlat
ja
sti
push
rcl
adc
psadbw
lds
xchg
pop
cs
pop
shl
out
mov
xchg
mov
pop
pop
(bad)
pop
fbld
ins
in
mov
xchg
rcr
pop
fnstsw
jbe
or
mov
cmp
pop
fstp
fnsave
cmps
xchg
addr16
sti
or
test
stos
push
mov
pop
loop
push
or
xchg
push
add
ins
jp
and
and
and
and
(bad)
and
cwde
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
aas
call
cwde
and
je
dec
push
add
dec
inc
push
inc
dec
add
dec
dec
dec
push
add
add
dec
add
add
add
inc
inc
push
sub
and
and
and
jo
and
ins
and
and
das
mov
and
and
and
and
and
and
and
lock
and
and
and
and
into
(bad)
and
and
and
and
and
and
pusha
and
add
and
xor
and
and
and
and
and
and
and
and
and
and
xor
and
and
and
and
and
xor
and
and
and
xor
and
and
and
and
xor
and
and
and
and
and
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
sub
and
and
and
and
and
sub
and
push
and
and
and
and
push
inc
pop
push
and
and
out
and
add
and
lock
and
and
and
and
and
and
and
and
add
and
push
push
push
inc
and
and
and
and
and
and
xor
and
shl
and
and
and
and
and
and
pusha
and
pusha
push
push
inc
dec
dec
inc
and
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
pusha
and
bound
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
(bad)
and
and
and
push
and
and
and
and
and
and
es
and
sti
movs
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
or
and
and
and
or
sub
push
daa
and
sub
push
sub
and
mov
push
sub
and
mov
or
and
adc
and
and
and
and
xor
and
and
sub
and
or
xor
and
sub
and
and
and
pop
and
and
sub
and
or
xor
and
sub
and
and
and
pop
and
and
sub
and
or
xor
and
sub
and
and
and
pop
and
and
sub
and
adc
and
and
xor
and
xor
and
or
and
sub
and
and
adc
and
and
and
and
xor
or
and
sub
and
adc
and
and
and
and
xor
and
xor
and
or
xor
and
daa
and
and
and
xor
or
and
adc
and
and
and
and
xor
lods
and
and
or
and
or
or
adc
and
and
and
and
xor
xor
fidiv
mov
or
and
aaa
and
sub
xor
and
cmp
and
sub
and
pop
cmp
and
lods
and
and
or
and
mov
pop
cmp
and
or
and
aaa
and
sub
mov
push
mov
xor
sub
and
or
sub
and
and
and
sub
and
and
and
aaa
and
sub
cmp
xor
and
adc
and
and
and
and
push
and
and
and
cmp
and
and
and
sub
and
sub
mov
push
push
and
and
add
and
or
and
sub
and
sub
push
xchg
and
out
sub
push
xor
and
mov
pop
and
and
sub
sub
add
and
pop
and
and
ds
and
mov
push
or
adc
and
and
mov
es
and
and
mov
push
or
adc
push
and
sub
dec
pop
and
sub
sub
push
dec
or
and
sub
and
sub
dec
or
and
sub
and
sub
sub
push
or
and
sub
sub
and
sub
and
sub
dec
or
add
daa
and
or
and
sub
and
sub
and
and
mov
push
or
adc
mov
sub
and
sub
add
and
dec
adc
and
sub
push
and
sub
and
and
pop
and
sub
dec
adc
and
xor
pop
and
sub
adc
and
dec
adc
and
dec
or
and
xor
pop
and
sub
sub
and
sub
and
or
or
and
sub
and
and
mov
push
or
adc
pop
and
and
mov
push
or
adc
cmp
and
or
or
and
sub
and
and
mov
push
or
adc
pop
and
and
mov
push
or
adc
cmp
and
or
or
and
sub
and
and
sub
push
or
pusha
jne
and
pop
and
and
sub
xor
pop
and
and
cs
and
and
sub
sub
sub
add
adc
aas
cmp
pop
and
sub
sub
or
and
sub
or
and
sub
sub
or
and
sub
xor
or
and
sub
or
and
or
and
sub
sbb
and
push
sbb
and
xor
push
pop
sub
and
sub
sub
ss
and
and
and
sub
cmp
push
and
sub
pop
and
sub
daa
or
and
sub
and
sub
sub
xor
sub
dec
add
and
push
mov
es
add
and
xor
or
and
push
bound
and
xor
sub
xchg
sub
and
sub
sub
lods
and
and
add
add
push
out
sub
add
xor
xor
cmp
sub
add
xor
xor
cmp
and
xor
or
and
dec
or
and
xor
dec
or
and
add
daa
and
or
and
xor
and
sub
and
sub
daa
or
and
pop
and
and
das
mov
push
or
adc
and
sub
and
dec
push
xor
push
mov
imul
and
sub
das
xor
push
repz
push
or
adc
xor
push
mov
mov
and
push
and
pop
and
and
xor
push
or
adc
and
sub
and
dec
push
xor
xor
das
and
imul
and
sub
xor
xor
and
or
adc
xor
push
xor
repz
push
dec
push
and
pop
and
and
xor
push
or
adc
and
sub
das
and
dec
push
xor
xor
das
and
imul
and
sub
xor
xor
and
or
adc
xor
push
in
and
repz
push
dec
push
and
pop
and
and
xor
push
or
adc
pop
and
and
xor
push
or
adc
or
and
sub
imul
sub
and
and
and
or
pop
pusha
push
sub
lods
retf
xchg
popa
push
(bad)
jmp
mov
jp
fsubr
sbb
int3
test
repnz
je
enter
mov
xor
mov
mov
outs
pop
enter
hlt
jmp
pop
sub
push
xor
mov
hlt
std
sbb
pop
pop
and
arpl
mov
or
(bad)
test
cmp
js
cmc
cmc
inc
xchg
test
xor
mov
inc
and
mov
mov
jbe
cmp
scas
int
jmp
gs
push
jmp
(bad)
cli
retf
xlat
out
and
test
ficom
dec
fdivr
inc
in
xchg
movs
push
xor
dec
mov
arpl
adc
in
int3
pop
add
ret
in
mov
and
xor
ss
push
mov
xor
(bad)
leave
stc
fwait
rol
mov
fwait
stos
aam
adc
xor
sub
xchg
out
xchg
cmp
jl
xor
adc
mov
mov
idiv
and
jecxz
sub
pushf
push
int3
or
cwde
sbb
jmp
mov
hlt
(bad)
xor
not
retf
test
jl
mov
call
ins
call
inc
ffreep
dec
jb
and
pop
add
push
add
pop
lock
test
cmp
pusha
fsub
sub
jmp
xchg
leave
add
xchg
dec
test
rcr
fsubrp
ror
(bad)
ds
aad
cmp
xor
cli
int3
stos
pop
ins
mov
test
fcomp
fs
sub
scas
lea
sti
cmc
inc
cmp
cmp
and
jge
in
popa
xor
cdq
test
push
fs
mov
cmp
test
xchg
repz
fsubr
mov
test
sub
inc
mov
jge
mov
and
es
hlt
out
xchg
out
mov
test
jl
jmp
mov
dec
jb
mov
push
cmp
rol
test
iret
cmp
jmp
(bad)
and
sbb
dec
xchg
outs
jmp
jp
cs
jg
fsubr
mov
or
loope
ficomp
daa
ret
dec
jle
pop
and
nop
mov
outs
or
clc
retf
std
mov
jnp
jg
icebp
call
mov
sahf
lods
enter
test
push
(bad)
cmc
jns
ja
mov
sbb
dec
mov
std
fistp
or
pop
test
jbe
js
mov
in
iret
lods
iret
sbb
or
xor
loop
stos
(bad)
push
scas
sbb
or
aaa
scas
sub
(bad)
xchg
push
lock
mov
add
xchg
repz
sahf
cmps
or
xchg
dec
das
bnd
mov
(bad)
fld
jge
mov
scas
cwde
and
jg
test
pop
cli
cwde
std
sub
add
pop
cwde
imul
sub
push
cmp
jae
push
outs
or
addr16
fisubr
jge
movs
adc
add
cmpxchg
sub
and
sbb
das
sbb
mov
into
(bad)
in
mov
push
pushw
push
mov
mov
(bad)
cmps
xchg
adc
pop
jl
sub
adc
jg
fwait
sbb
adc
cmp
mov
mov
pop
adc
mov
fld
lods
loopne
in
test
ret
inc
jne
es
test
les
inc
dec
ret
cmp
xor
imul
out
jns
movs
(bad)
not
dec
aaa
add
in
xchg
fdiv
push
gs
scas
cmc
shl
and
add
in
mov
arpl
gs
and
das
pusha
pop
cmc
mov
loopne
mov
movs
cwde
xchg
mov
out
mov
loope
je
sub
retf
mov
fyl2x
ret
imul
mov
movs
shl
mov
xchg
clc
div
leave
ret
mov
push
out
fcmovb
test
cmc
ret
cdq
out
lods
mov
movs
inc
arpl
shl
icebp
cmps
or
xor
ins
cmp
sub
push
shl
inc
loope
(bad)
std
push
aas
or
cld
pop
daa
ret
cmp
gs
cli
rcl
xchg
pop
adc
outs
or
sbb
out
mov
inc
test
mov
mov
imul
mov
fistp
call
and
xchg
mov
(bad)
call
dec
jge
test
add
adc
repz
pop
mov
mov
or
pop
cmps
fucomp
ror
ss
push
cmp
(bad)
adc
jmp
and
in
es
mov
jbe
mov
fidivr
cmp
retf
icebp
pop
outs
xor
xchg
cmps
ret
imul
lea
and
nop
cli
lock
int3
stos
mov
push
bound
xor
inc
xchg
bound
and
push
lods
fiadd
sbb
jecxz
repz
cmps
jle
fisubr
movs
leave
std
call
push
clc
mov
out
loope
dec
xor
xor
leave
ret
aad
or
sub
imul
lods
jae
shr
mov
jge
cmp
sub
fisttp
inc
js
cmps
movq
or
test
jb
das
sbb
mov
stc
pop
push
outs
iret
js
push
xor
cld
into
push
gs
cli
retf
dec
jg
jp
inc
xchg
mov
mov
aad
push
loope
add
sub
rol
bound
stos
rcl
(bad)
rcr
aad
call
das
arpl
cmp
mov
sub
mov
mov
lds
dec
push
movs
sar
dec
test
int
sahf
scas
imul
xchg
clc
es
js
das
sbb
mov
xchg
stos
pushf
cmp
jae
and
dec
sub
or
sbb
jb
es
mov
cmps
enter
xor
xor
pop
inc
inc
jno
dec
and
out
xor
cmp
or
jecxz
fstp
cwde
mov
xor
xchg
test
jae
cwde
std
shr
addr16
push
cmps
mov
sub
add
pop
mov
mov
outs
adc
push
cmp
and
aam
sub
jb
mov
jmp
pop
popa
stos
xor
sbb
xor
fimul
xor
inc
sub
int3
xor
jmp
in
test
or
push
stos
test
lea
pop
(bad)
aam
rol
and
inc
jnp
jb
ja
cmp
jne
aas
pop
xchg
cmc
ins
push
dec
add
mov
inc
cs
iret
dec
jns
(bad)
loope
push
bound
ror
jns
jbe
xor
mov
pop
outs
rcr
xchg
mov
xchg
clc
fild
mov
pop
and
add
ret
mov
clc
xor
movs
inc
cmp
xchg
aas
xchg
add
in
mov
mov
mov
mov
(bad)
in
fidiv
int3
mov
mov
mov
push
and
mov
xor
in
test
dec
mov
movs
fild
sbb
cli
shl
js
xor
cwde
cmc
xchg
cmps
push
call
call
cmps
retf
sbb
aaa
loopne
cmc
enter
mov
shl
sahf
jg
not
dec
adc
push
arpl
int3
jmp
mov
sbb
pop
jnp
arpl
mov
out
out
pop
sbb
or
fnstsw
(bad)
dec
cli
mov
pop
leave
addr16
addr16
cmp
jb
jbe
adc
dec
pop
mov
mov
cli
(bad)
cld
cdq
lods
sbb
mov
test
stos
cld
dec
sahf
std
cdq
lods
inc
push
daa
jne
push
popa
push
mov
test
and
mov
mov
lods
int3
cld
loopne
ds
and
into
mov
hlt
(bad)
or
sub
jnp
enter
repz
not
sub
lock
sub
test
push
gs
or
adc
pop
mov
shr
stos
sahf
lods
inc
mov
pop
je
je
lea
inc
movs
pushf
dec
cli
fs
jno
push
xchg
xor
sub
fwait
sub
add
lods
sub
push
jl
fdivr
loop
cld
je
clc
into
stos
and
pop
outs
pop
inc
fnstcw
outs
pop
inc
add
pop
cmp
push
jg
mov
and
je
mov
jnp
cwde
stos
retf
(bad)
test
mov
cmps
enter
dec
lahf
jmp
mov
sub
fsubrp
mov
or
das
jmp
push
xor
data16
push
(bad)
scas
lahf
test
mov
loope
jne
jno
lock
dec
jl
jnp
out
dec
pop
adc
cmp
cmp
stos
dec
cs
test
cmp
(bad)
test
gs
mov
popf
gs
cmp
cmp
into
enter
(bad)
dec
jae
loopne
xchg
cmp
push
adc
sbb
xchg
mov
(bad)
and
call
xchg
lahf
xchg
push
xor
mov
sahf
jb
cmp
adc
shl
push
fwait
mov
mov
pusha
pop
repnz
mov
loope
mov
test
addr16
xor
neg
xor
add
adc
mov
mov
fcmovb
stos
fwait
stos
pop
cmp
pop
cwde
mov
aad
and
icebp
(bad)
adc
test
xchg
pusha
pop
imul
mov
cdq
(bad)
daa
push
cmp
out
pushf
clc
and
out
aas
adc
adc
jmp
add
ins
push
xor
test
int
xor
sub
(bad)
sbb
xchg
mov
sub
inc
or
xor
xor
movs
xchg
lods
dec
push
test
sub
in
add
adc
sub
jae
aas
or
sub
pop
ja
(bad)
leave
add
add
mov
xchg
shl
icebp
ja
and
dec
cmp
jmp
in
out
mov
pop
xchg
or
xor
mov
jge
xor
rcl
cmps
retf
sar
sbb
(bad)
lahf
(bad)
bnd
sbb
mov
xchg
scas
int3
cli
sahf
aaa
das
pop
jno
popf
scas
call
lods
sub
pop
aas
or
jmp
add
xchg
inc
icebp
add
adc
jbe
and
mov
loop
jno
movs
or
jp
mov
test
mov
loop
out
sar
pop
inc
jl
test
pushf
stc
int3
rol
add
psubw
enter
jbe
mov
pop
idiv
and
adc
pop
push
ds
repz
add
inc
and
mov
push
ss
retf
rcl
ss
bound
lahf
mov
mov
data16
mov
mov
xor
cwde
aam
push
addr16
ins
pop
aaa
sbb
fadd
mov
lods
xchg
icebp
scas
push
adc
and
retf
mov
jmp
ss
or
test
xor
jecxz
add
cmps
or
hlt
inc
sub
popf
push
or
mov
or
cmp
popf
(bad)
and
mov
ja
jae
int
ret
ret
xor
shl
and
ret
mov
xlat
mov
in
add
aas
push
addr16
js
call
or
jno
fnstcw
mov
loope
pop
pop
sub
js
iret
scas
je
push
std
sar
cmps
enter
jae
jg
shl
cmp
or
es
sub
lahf
scas
call
sbb
add
cwde
test
mov
aam
push
data16
es
pusha
cmp
aam
xchg
jecxz
xchg
push
fucomip
lods
inc
fld
push
and
ror
cld
lahf
add
inc
add
sub
add
pop
push
dec
rol
lds
mov
adc
gs
push
aam
stc
popf
pop
sub
popa
pop
cmp
mov
fistp
sub
xor
cmp
int
inc
call
push
(bad)
adc
out
xchg
sbb
les
leave
jne
mov
call
scas
xchg
xor
cmps
xor
jg
daa
pop
enter
adc
sti
stos
and
and
pusha
hlt
fidivr
cmp
cmps
mov
jb
inc
mov
bound
mov
jne
scas
jecxz
mov
stos
and
es
jns
inc
jmp
cmp
mov
jg
test
lahf
ret
cmc
enter
pop
pop
sub
js
iret
scas
je
adc
in
jecxz
xor
int3
mov
inc
je
inc
mov
cdq
add
iret
test
fnstsw
push
(bad)
pop
adc
(bad)
icebp
cmp
pop
cwde
jno
mov
out
xor
not
outs
neg
push
popf
sbb
dec
js
and
and
sub
fs
jbe
mov
in
and
(bad)
cmps
add
mov
loopne
ds
retf
cli
mov
mov
mov
dec
das
lock
mov
push
jle
cmp
or
retf
xchg
pop
and
in
(bad)
in
add
cli
and
add
xor
dec
jge
sub
imul
jmp
xchg
aas
nop
add
in
fbstp
adc
add
push
xor
out
daa
push
into
stos
retf
retf
mov
sub
ret
fistp
test
add
inc
out
pop
jno
and
aas
data16
mov
sar
jne
fwait
mov
retf
test
daa
pop
push
ins
or
in
mov
push
jo
jae
retf
jge
add
adc
xchg
test
test
mov
jnp
fwait
sti
int3
std
push
jg
adc
jle
mov
inc
jb
and
scas
call
aad
jae
and
sub
xor
xor
xchg
mov
jnp
sub
mov
(bad)
sub
xchg
sti
loopne
mov
xor
cmps
fmul
(bad)
not
adc
in
and
ja
imul
(bad)
sub
ja
sub
test
adc
and
and
nop
not
jno
daa
adc
loopne
mov
fsubr
(bad)
test
add
dec
push
loop
sar
aad
in
sbb
inc
js
xor
inc
jns
push
cmp
or
in
aad
xlat
ins
adc
sahf
cmc
jmp
cli
xlat
lods
call
push
pusha
call
add
add
test
retf
mov
xor
ss
jecxz
jge
xlat
out
jp
js
lahf
sub
xor
sub
(bad)
mov
push
fs
scas
iret
lods
retf
adc
fcomp
adc
xor
shl
or
les
pop
add
outs
(bad)
xchg
repnz
out
mov
pop
leavew
mov
push
addr16
sbb
pop
cmp
pop
jne
out
xchg
mov
push
ss
mov
sub
inc
jg
push
xor
inc
dec
jl
movs
sahf
es
mov
adc
pop
dec
xchg
not
and
or
pop
cs
jns
in
xchg
mov
xor
(bad)
pop
jge
cmps
jnp
sbb
shl
pop
retf
pop
sub
sub
mov
sti
and
test
pop
stc
jecxz
jmp
in
cmps
int3
call
add
gs
js
pusha
push
xor
fucom
mov
enter
daa
iret
std
call
inc
jbe
into
std
and
and
xlat
cmp
push
or
ss
cmc
enter
sbb
push
cmp
icebp
mov
js
aam
pop
pop
sbb
add
dec
test
test
sub
sub
jns
mov
mov
push
xchg
mov
sahf
sti
mov
sub
add
stos
fild
dec
jnp
sub
lea
and
push
sub
mov
fdivr
jl
pop
xor
lea
xchg
adc
adc
mov
mov
in
jno
inc
mov
pop
cmp
dec
pop
js
xor
repnz
xchg
sti
ret
repz
or
sub
push
dec
jns
add
jp
ds
or
cdq
(bad)
hlt
xchg
mov
aam
adc
dec
jg
std
push
jns
jns
mov
cmps
cwde
cmp
xor
lds
cli
inc
inc
out
retf
(bad)
neg
outs
mov
cld
cwde
cli
adc
push
outs
daa
sbb
cli
push
jnp
movs
dec
xor
mov
aaa
mov
sub
mov
clc
pop
mov
mov
test
mov
das
dec
outs
mov
jb
lods
es
mov
pop
mov
sbb
and
icebp
retf
stos
dec
add
sub
ficom
sbb
xor
cmp
mov
jbe
cwde
stos
out
inc
fistp
mov
add
out
test
xchg
pop
jmp
fcom
test
cli
popf
xor
pop
hlt
cwde
adc
pop
outs
shl
js
mov
les
inc
and
(bad)
fadd
mov
xchg
inc
dec
repz
push
mov
in
and
mov
iret
cmp
adc
das
mov
push
in
sub
fstp
and
push
inc
retf
mov
clc
push
sub
mov
fdiv
push
imul
and
inc
lods
and
pop
add
mov
inc
daa
pop
dec
jg
xor
and
add
enter
xor
push
sbb
jno
pop
les
mov
xchg
movs
xchg
repz
push
cmp
int
sub
jle
and
mov
cld
push
dec
jge
lds
fwait
push
rol
lds
sub
push
ins
cdq
neg
cwde
lods
pushf
lods
repnz
aam
jnp
je
xchg
xor
in
dec
sbb
iret
call
mov
data16
lock
inc
xchg
adc
jecxz
retf
or
mov
mov
fcom
push
dec
xor
popf
add
pop
jl
fsubr
scas
je
shl
mov
dec
imul
pop
(bad)
cld
cwde
repz
cld
jmp
daa
adc
ja
int3
stos
je
mov
dec
mov
(bad)
cmp
test
or
cmp
xchg
dec
scas
fstp
daa
push
dec
inc
jle
xchg
sbb
adc
mov
lods
retf
leave
out
pop
scas
pushf
clc
retf
icebp
ret
lock
clc
cmp
cld
retf
mov
pushf
cli
outs
or
popf
outs
adc
and
push
out
cmp
and
fdivr
or
or
daa
shr
jne
lock
mov
push
mov
cmp
add
add
add
je
and
dec
jl
cld
fs
arpl
inc
leave
icebp
mov
mov
(bad)
inc
dec
sar
lods
inc
pop
sbb
adc
hlt
pop
cmps
outs
sbb
dec
jp
add
add
mov
xchg
lock
push
mov
dec
jae
inc
inc
das
pusha
push
xchg
scas
adc
pop
js
push
popa
push
lock
cmp
fnstcw
sbb
jl
pop
arpl
outs
adc
jne
mov
dec
mov
push
mov
dec
xor
xchg
mov
imul
js
cmps
xchg
mov
and
push
and
or
or
nop
mov
or
je
jle
push
arpl
mov
fucomp
mov
fucomi
stos
ret
retf
xor
mov
mov
fild
sub
fsubr
nop
mov
ins
push
out
iret
(bad)
cmp
retf
scas
int
push
sub
sub
shl
out
aas
adc
ret
test
stc
es
cmp
enter
add
add
mov
fdiv
xchg
test
jle
and
aaa
movs
iret
stos
sahf
(bad)
push
adc
popf
cmps
fld
fcomip
shl
sub
loopne
loope
mov
pushw
add
xchg
push
add
popa
and
sbb
fs
in
pusha
(bad)
enter
ins
pop
dec
pop
mov
test
push
shl
mov
mov
outs
pop
cmp
and
scas
ror
mov
jb
mov
xor
jb
jle
retf
or
dec
xor
push
jmp
scas
nop
int3
cmp
not
outs
pop
ins
pop
jae
pop
je
and
lds
nop
cmps
ins
pop
(bad)
call
mov
add
popa
fistp
add
lock
je
jmp
mov
cwde
stos
xchg
sub
call
movs
jge
sbb
das
(bad)
mov
cmp
cli
out
mov
cs
(bad)
dec
int
sub
cmps
sar
cdq
rcr
mov
ret
not
mov
loopne
loope
ds
or
jnp
sub
ins
mov
pusha
pushf
mov
fdiv
into
dec
test
xchg
test
lock
mov
call
aam
shl
cmps
mov
ret
and
jno
retf
pop
xchg
push
(bad)
loopne
dec
jle
das
(bad)
cwde
and
movs
or
inc
pop
lods
daa
dec
sub
(bad)
add
scas
out
in
ds
add
push
mov
or
sub
add
mul
pop
jne
popf
test
dec
sub
dec
jp
jbe
loopne
mov
inc
jae
or
adc
rcl
sbb
dec
add
(bad)
mov
inc
pushf
scas
sahf
test
ds
pop
and
test
bound
(bad)
jecxz
xlat
add
add
inc
jp
sub
mov
fdivr
loop
das
pop
jbe
daa
pop
sub
leave
enter
lods
gs
cmp
or
pop
sub
sbb
call
xor
aaa
sahf
mov
cs
mov
sub
jns
sub
in
pop
push
ins
pop
cmps
into
mov
sub
mov
mov
adc
push
push
xchg
ds
not
lods
jecxz
mov
push
ja
ja
dec
fdivr
shl
(bad)
in
xor
cmovae
jns
jb
sar
dec
push
(bad)
dec
scas
add
lods
sbb
mov
adc
aas
push
mov
sti
add
add
movs
sbb
mov
mov
int3
mov
mov
mov
pop
cmp
add
xchg
scas
jne
shl
lods
int3
outs
sbb
fidiv
mov
das
xlat
in
(bad)
dec
mov
sub
cmp
nop
cli
retf
sti
dec
pop
in
not
mov
dec
inc
jne
pop
mov
lods
xchg
movs
mov
popa
movs
shl
(bad)
mov
cmc
fsubr
stos
in
mov
jbe
inc
cld
cld
and
pop
dec
ds
adc
fidivr
out
pop
ins
xchg
movs
f2xm1
cmp
cmp
adc
stos
int3
ds
dec
xlat
lods
and
icebp
(bad)
hlt
jnp
cmp
inc
add
aas
push
jle
or
xchg
push
xchg
mov
(bad)
push
addr16
mov
mov
inc
icebp
movs
push
imul
fsub
pop
cmp
cmp
pop
jmp
(bad)
mov
pop
stc
xchg
mov
xchg
xor
push
or
rol
bound
pop
jl
jge
retf
int
push
adc
push
into
cmp
adc
int3
pop
sub
das
ja
mov
out
ret
pop
int
enter
test
in
bound
lods
and
(bad)
mov
movs
(bad)
jg
lods
push
xor
push
pop
outs
pop
sar
sub
(bad)
push
and
cdq
mov
push
gs
jnp
cwde
sti
loopne
fdiv
pop
cmp
popf
scas
adc
daa
push
test
pop
ret
(bad)
mov
fidivr
mov
pop
cmc
enter
push
test
or
pop
inc
lock
add
add
jns
jb
xchg
push
mov
adc
pop
neg
add
icebp
dec
cs
push
inc
ror
pop
sub
aad
adc
or
ins
pop
cmc
push
sbb
(bad)
xchg
enter
sub
mov
das
cmp
add
cmps
rcl
and
loopne
push
inc
(bad)
outs
push
addr16
lock
pop
dec
inc
and
outs
test
pop
adc
mov
push
gs
stc
mov
mov
lea
xchg
repnz
adc
cli
int
cmp
sahf
aaa
dec
push
adc
sub
and
lahf
mov
mov
int3
cmps
jp
call
adc
sti
ins
push
gs
fild
jmp
jp
push
xor
cli
enter
(bad)
jecxz
ja
sub
mov
movs
mov
jmp
push
xchg
mov
or
(bad)
fucompp
mov
jmp
jl
cmp
mov
and
leave
ja
ja
(bad)
dec
sub
out
xchg
test
scas
sahf
inc
jnp
and
xor
cmps
fnstcw
js
repnz
je
out
fidiv
adc
test
sub
sti
test
mov
mov
arpl
enter
pop
out
xchg
mov
sti
jle
jno
sub
cld
push
and
mov
fsub
std
enter
iret
stos
jbe
cmp
repz
inc
lods
add
sbb
push
jbe
jg
popf
lods
idiv
aam
cmp
mov
lock
outs
out
int3
outs
or
mov
push
xor
call
stos
adc
jp
cs
pop
jecxz
mov
icebp
fwait
shl
jle
inc
popa
mov
into
ret
and
mov
mov
data16
push
outs
push
or
inc
shr
xchg
pushf
stc
int3
add
jae
adc
shl
iret
lods
retf
dec
pop
aam
mov
dec
test
sub
jmp
ins
mov
inc
jno
lds
add
or
add
jae
mov
mov
push
arpl
fwait
sar
cmps
xchg
mov
inc
js
(bad)
adc
loope
inc
jae
stos
ret
neg
push
cmp
pop
and
xlat
aam
xchg
mov
data16
cwde
cli
aad
mov
xchg
cmp
xchg
dec
mov
xor
hlt
inc
dec
mov
or
adc
mov
inc
shl
cmps
jmp
jb
dec
imul
push
out
fisubr
mov
rcr
mov
mov
mov
xor
std
call
sub
cmp
mov
dec
jne
mov
pushf
lods
into
add
pop
cmp
in
sahf
aam
test
adc
mov
mov
mov
scas
mov
and
mov
je
inc
push
jns
add
mov
dec
mov
jecxz
mov
loope
cmp
sub
ss
xlat
jmp
mov
mov
lods
mov
repz
xchg
xor
inc
fcom
push
out
enter
sbb
sbb
out
aaa
mov
dec
sub
jns
pop
retf
ins
or
jns
dec
xor
in
ins
retf
or
inc
hlt
shr
arpl
pop
mov
js
jns
(bad)
in
jo
ja
mov
mov
sbb
out
aaa
xchg
movs
(bad)
not
cmp
repnz
cmps
ins
sar
add
loop
jb
jbe
mov
sub
adc
inc
cmps
xchg
inc
push
xchg
test
or
xchg
in
loopne
or
rcl
stos
fidiv
pop
js
daa
adc
mov
int3
lock
into
sti
popf
pushf
cmp
xor
in
mov
fstp
push
sti
mov
xchg
aam
sbb
rcr
mov
sbb
test
pop
imul
aad
cs
js
sub
jnp
outs
or
jecxz
in
inc
je
mov
mov
xor
mov
jl
fdivr
mov
mov
add
inc
iret
setnp
ds
add
pop
outs
pop
out
rol
rcl
inc
in
pop
pop
jl
sub
pushf
push
cmp
jbe
jns
sub
scas
xchg
cmps
push
mov
adc
jmp
loope
es
jno
pop
cmp
ds
mov
dec
mov
xor
mov
mov
mov
mov
cld
ins
cli
retf
std
inc
pop
push
add
push
xchg
and
ins
pop
fld
call
loopne
loope
imul
mov
or
nop
in
cmp
sub
cmp
mov
xor
sbb
jae
pop
mov
xchg
mov
add
xchg
xor
mov
jns
jmp
pop
retf
sbb
push
test
ins
pop
mov
pop
and
sub
loope
mov
mov
mov
mov
pop
jb
add
xor
inc
and
jmp
(bad)
fild
sbb
repnz
sub
enter
push
or
imul
inc
call
cmp
jo
inc
enter
gs
inc
dec
inc
inc
jb
(bad)
addr16
shl
fadd
and
and
hlt
xchg
movs
bound
je
and
repz
arpl
outs
pop
cmp
clc
retf
clc
push
adc
retf
call
ds
aaa
sbb
aad
mov
mov
out
pop
cmp
mov
inc
and
and
(bad)
je
jge
int
fld
cld
int3
pop
adc
dec
jg
in
adc
in
loop
aad
imul
mov
out
out
add
es
movs
jmp
pop
ss
addr16
dec
dec
jb
push
jmp
dec
cs
jmp
xor
and
nop
shl
(bad)
fsubr
inc
jb
imul
push
and
(bad)
in
xor
sbb
pop
xchg
retf
retf
std
cwde
mov
aam
add
pop
cmp
imul
jne
imul
imul
sub
fsubr
sbb
pop
mov
and
xchg
xsave
xchg
lahf
enter
outs
or
mov
into
push
popa
mov
(bad)
jno
dec
cli
pushf
sbb
cmc
add
int
pop
or
add
fiadd
hlt
inc
jnp
jbe
cs
stos
fwait
stos
mov
xor
mov
or
adc
daa
outs
data16
call
inc
cmp
not
(bad)
jno
jne
mov
xlat
out
fdivrp
or
jecxz
(bad)
jmp
test
xor
test
rol
xor
out
or
mov
jecxz
add
sahf
out
cwde
std
loopne
or
shl
mov
scas
test
imul
into
clc
cdq
loop
cmc
xchg
movs
ret
sbb
or
pop
shl
outs
loope
or
push
mov
pop
fucomi
adc
mov
sbb
gs
xor
sub
mov
pop
aam
inc
pop
mov
test
and
mov
jne
pop
cmp
adc
xchg
out
and
jne
push
aaa
push
jle
add
push
aaa
mov
mov
data16
mov
loopne
xor
icebp
cwde
cmp
lahf
shl
(bad)
sub
jne
aad
data16
inc
mov
repnz
in
adc
shl
inc
and
or
test
cs
cmp
fidivr
cmp
repz
pop
outs
push
je
push
gs
cs
push
popa
add
fisttp
push
out
fnstenv
mov
dec
dec
fs
shl
dec
mov
fs
add
jno
lods
push
loope
cmp
popf
cmp
cs
gs
outs
sub
outs
dec
jg
dec
jg
mov
sub
lods
out
daa
adc
(bad)
xchg
mov
je
mov
dec
and
(bad)
out
fcomp
xor
cmp
daa
jnp
in
jg
js
test
dec
jae
or
icebp
xchg
test
pop
outs
pop
test
adc
xchg
mov
add
mov
inc
and
dec
mov
sbb
sbb
test
add
daa
dec
inc
jb
pop
xchg
repnz
neg
loopne
mov
xchg
mov
fsubr
xor
sub
and
jns
jge
das
mov
in
(bad)
mov
into
hlt
xchg
mov
movs
xchg
mov
cmc
shl
(bad)
cmps
ret
das
sbb
xchg
shl
dec
and
mov
jns
into
scas
jne
pop
out
ror
inc
xor
mov
add
sub
sub
leave
leave
cmp
cmp
mov
pop
jnp
cli
popf
xor
xor
call
pushf
stc
leave
mov
mov
push
xor
push
jg
lahf
scas
retf
jne
ret
fist
adc
inc
es
aad
push
(bad)
jnp
cmp
dec
jnp
push
(bad)
data16
add
sbb
jns
(bad)
hlt
jns
les
movs
dec
les
dec
cmp
retf
std
movs
sub
push
arpl
fisubr
leave
icebp
mov
push
bound
ss
mov
aad
xchg
jge
out
repz
lock
scas
lahf
scas
int
in
fld
or
pop
pusha
scas
call
loope
in
cs
loope
in
imul
inc
jne
jp
bound
push
jae
mov
ins
rcr
cdq
inc
xor
xchg
dec
mov
inc
jne
add
cli
lahf
cmp
adc
pop
(bad)
ds
push
mov
fdiv
xchg
jnp
xchg
push
loope
sub
pop
sahf
push
dec
jge
lahf
sbb
(bad)
xchg
mov
pop
cmp
cli
lahf
scas
push
mov
inc
sbb
addr16
add
not
push
iret
lods
sbb
pop
repnz
int3
dec
shl
and
fld
sbb
mov
outs
out
adc
inc
jbe
pop
push
mul
jg
jl
dec
cld
leave
xchg
loope
xor
hlt
jne
sub
call
xor
mov
scas
jle
xor
xchg
mov
xchg
into
push
mov
pop
imul
mov
cmp
sbb
mov
mov
xchg
adc
cmps
cld
inc
daa
or
push
cmps
dec
cmp
fwait
xor
jg
ffree
mov
mov
mov
mov
xor
xor
ret
mov
dec
xor
push
pop
mov
in
fdivr
and
and
in
outs
aaa
adc
mov
imul
dec
dec
inc
push
fcomp
rol
pop
push
bound
(bad)
daa
push
cmps
xchg
mov
xor
inc
daa
adc
je
in
jno
je
inc
mov
mov
(bad)
std
aam
add
mov
sbb
mov
mov
pop
adc
daa
sar
mov
mov
loopne
mov
addr16
enter
movs
enter
and
in
cli
mov
das
cmc
ret
out
or
pop
test
jl
mov
push
xor
clc
data16
neg
out
loop
pop
ror
cmp
push
rcl
cmc
dec
addr16
mov
xchg
mov
xchg
int
push
push
aaa
gs
in
mov
mov
test
repnz
fnstenv
aaa
test
je
and
mov
xchg
sbb
mov
fistp
shr
fldenv
jp
pop
jg
cli
push
popa
push
hlt
std
es
jmp
les
sub
mov
fwait
scas
inc
pop
push
repz
push
bound
stc
pushf
stc
jno
fucomp
adc
(bad)
das
mov
adc
imul
in
repz
sbb
inc
cmp
loop
out
jp
sbb
add
push
popa
and
cs
xor
test
adc
adc
pop
out
mov
pop
sub
push
addr16
mov
pop
js
pop
cmp
jnp
retf
movs
xchg
cmps
xchg
movs
dec
imul
add
dec
jle
test
jg
ret
mov
ins
or
clc
mov
mov
repnz
jmp
mov
adc
call
or
push
stc
cld
lds
dec
adc
sbb
xor
lods
iret
aaa
inc
jae
mov
jbe
dec
gs
sbb
and
hlt
fldenv
push
adc
cmps
lds
adc
cmp
cmp
stc
not
cwde
mov
sbb
dec
mov
jp
mov
jp
outs
(bad)
pop
ins
or
call
loopne
pop
cmp
add
aad
pop
push
mov
repz
arpl
test
add
lock
ins
out
movs
and
jnp
mov
mov
mov
mov
add
pop
data16
jecxz
and
int
das
adc
xor
xor
mov
add
push
mov
push
fsubr
push
cmp
cmp
xchg
sbb
jno
daa
adc
adc
or
push
outs
rcr
fstp
xor
mov
lahf
shl
(bad)
mov
push
sbb
sbb
pop
out
xchg
neg
xor
or
jns
jno
icebp
ret
inc
aad
in
push
bound
or
pop
jo
ja
mov
jbe
retf
in
dec
jl
das
jmp
push
and
mov
(bad)
leave
lods
fs
aad
cmps
xchg
mov
mov
mov
sbb
mov
and
movs
xchg
sub
adc
cli
and
mov
leave
jae
cmp
arpl
in
sbb
adc
sbb
adc
cmp
and
in
(bad)
dec
pop
cmp
xchg
pop
inc
sub
test
mov
loop
add
add
dec
jle
sub
shl
sub
push
cs
repz
repnz
push
pop
jge
jae
mov
imul
nop
movs
mov
dec
jne
jmp
pop
jnp
jne
jp
push
mov
stos
movs
mov
jnp
(bad)
sub
repz
xchg
popa
mov
jmp
xchg
adc
icebp
in
call
dec
dec
repnz
cmp
or
cmp
inc
sub
std
pop
lods
or
mov
pop
loopne
adc
and
int3
xchg
pop
gs
loop
and
sahf
cmp
and
lods
pop
cs
push
xor
ret
dec
sub
mov
pop
jo
shl
inc
and
push
outs
sub
mov
in
loopne
jnp
sub
out
cwde
mov
inc
(bad)
xchg
mov
sub
xchg
cmps
xchg
mov
mov
cld
jmp
sub
push
cmc
retf
test
push
shr
test
mov
daa
int
and
xchg
movs
xchg
(bad)
pop
jbe
icebp
pusha
dec
add
cld
xabort
cmp
je
js
xor
or
popf
pop
sub
retf
shl
enter
add
mov
dec
das
sbb
push
xor
fwait
mov
(bad)
daa
push
xchg
xor
test
sbb
jmp
mov
pop
test
xor
mov
fiadd
push
cmp
push
outs
dec
leave
jmp
jle
aas
pop
cmp
push
push
xor
stc
into
fwait
in
stos
loopne
into
sti
lock
mov
bound
sahf
sti
pop
xor
xchg
jge
xchg
xor
popa
dec
out
mov
xor
mov
ja
loop
jecxz
cmp
mov
adc
inc
icebp
dec
inc
jbe
movs
mov
lahf
jbe
sub
sub
sbb
out
sbb
adc
mov
adc
adc
in
mov
dec
or
test
aam
xor
mov
push
int3
(bad)
push
sbb
fldln2
test
stc
fwait
stc
push
fcmove
jbe
jno
sbb
inc
and
(bad)
in
xlat
out
fdivr
push
arpl
push
xor
cmp
mov
sub
aad
sub
sub
lods
mov
add
lods
(bad)
out
mov
push
add
push
popa
sbb
pop
aam
jmp
xchg
dec
out
mov
mov
or
dec
cs
pop
lods
lahf
test
inc
and
sahf
out
fldl2t
fistp
pop
mov
mov
sti
pushf
je
jne
cmp
pusha
cmp
cli
int
enter
xchg
push
add
lea
sub
lods
popf
jecxz
mov
add
mov
(bad)
in
push
and
mov
pop
daa
inc
mov
popa
pushf
stos
sahf
(bad)
jmp
push
push
aad
cmps
out
inc
xor
ins
dec
mov
(bad)
xor
dec
stos
dec
xlat
push
push
es
enter
ds
pop
and
adc
xor
pop
cmp
push
lea
inc
cld
pushf
scas
push
sbb
xor
cmp
mov
dec
icebp
aam
mov
dec
mov
add
movs
nop
hlt
xlat
test
sub
and
mov
xchg
mov
push
ss
mov
rcr
gs
movs
(bad)
mov
scas
pop
xor
mov
jbe
std
shl
sub
cmp
pusha
inc
jp
popf
sbb
mov
add
ins
xchg
pop
adc
loopne
out
inc
lds
xor
mov
dec
outs
sub
push
cmp
jge
sub
scas
loopne
sbb
ffree
stc
xor
inc
xor
jle
imul
ss
lods
test
adc
in
shr
and
sub
sbb
fstp
pop
inc
mov
sar
repz
xchg
sub
dec
nop
push
jns
scas
or
xor
into
jbe
mov
xchg
mov
mov
test
(bad)
fstp
enter
aaa
adc
fstp
jge
or
xor
xor
jl
push
int3
mov
jg
ds
sbb
imul
inc
xor
xchg
les
in
sub
leave
inc
and
add
and
outs
xchg
cdq
scas
push
or
mov
sar
ins
push
addr16
sub
or
jne
call
add
adc
test
bound
jmp
loop
in
in
xchg
ret
hlt
(bad)
repz
enter
(bad)
jg
pop
mov
jl
das
(bad)
out
imul
xchg
dec
jg
mov
mov
xor
inc
dec
xchg
jle
mov
push
cld
int
pusha
add
mov
xchg
jnp
push
mov
ror
xor
out
jns
jl
lea
inc
and
and
lock
aas
push
bound
jg
adc
lods
mov
sub
jb
(bad)
mov
cli
sti
push
dec
jg
xchg
mov
addr16
jl
ss
fdiv
push
in
sub
(bad)
add
mov
adc
inc
shr
cmp
gs
jmp
lods
add
aaa
(bad)
xor
mov
out
fwait
test
sbb
mov
jns
test
lahf
in
mov
mov
(bad)
movs
dec
inc
cmp
sbb
(bad)
cli
sbb
dec
jns
je
in
fidivr
(bad)
sbb
fdivr
sbb
std
mov
push
xor
ins
push
push
popa
fdiv
xchg
inc
jg
pusha
xchg
mov
mov
scas
popf
stos
adc
cs
js
inc
rcr
jg
jbe
jp
vrcpss
add
push
cmps
xchg
mov
jns
call
(bad)
sub
mov
sbb
cdq
adc
nop
jmp
sub
xor
sbb
cmps
ins
push
jmp
mov
gs
stos
and
in
jecxz
movs
add
ins
outs
pop
fs
std
xchg
and
and
mov
frstor
xor
inc
(bad)
movs
ins
pop
shl
ds
es
xor
pushf
stos
call
mov
repz
and
push
bound
outs
or
pushf
mov
mov
jg
inc
jno
lds
(bad)
cmc
dec
push
jp
mov
arpl
xchg
sbb
sub
adc
sbb
mov
inc
jo
call
mov
inc
scas
ret
sub
sub
mov
inc
jne
ins
xchg
dec
popf
add
ds
pop
gs
js
dec
xor
and
or
pop
call
mov
jo
mov
jmp
cld
in
push
ins
adc
adc
xchg
not
pop
mov
sbb
test
dec
add
jbe
mov
jmp
mov
xor
jle
sub
retf
fwait
cmp
ret
inc
bound
add
jl
gs
data16
aam
inc
push
jecxz
xchg
neg
stc
push
xor
mov
mov
push
mov
cmp
test
in
dec
in
lahf
jl
pushw
imul
adc
fs
ins
jno
movs
or
ins
adc
sbb
push
fimul
sbb
inc
enter
icebp
mov
int3
(bad)
mov
in
xchg
int
iret
std
retf
pop
xor
and
cmp
xor
jmp
cmps
mov
adc
add
add
or
push
add
inc
sub
shl
xor
pop
ins
or
cmp
(bad)
(bad)
call
xchg
not
fucomip
fsubr
cwde
aam
(bad)
mov
lods
pop
imul
dec
xor
add
mov
or
push
xchg
outs
xchg
fucomip
test
ins
call
gs
jmp
inc
(bad)
out
pop
inc
pop
add
push
popa
fst
xor
xor
jl
mov
mov
dec
(bad)
xor
out
mov
xchg
shr
push
adc
pop
push
cs
sub
xchg
cmp
and
pop
inc
xor
inc
addr16
add
ins
adc
mov
push
cmc
push
fistp
pop
jb
rcl
(bad)
movs
cwde
es
xchg
lods
retf
jb
push
addr16
outs
inc
repnz
pop
cmp
xchg
mov
push
aaa
enter
inc
mov
arpl
or
pop
pop
mov
nop
mov
out
xchg
repz
mov
jae
das
push
sub
scas
je
xor
fs
jg
jl
lock
sti
push
adc
inc
adc
ffreep
jae
or
mov
xchg
scas
loopne
loope
xor
dec
jae
lahf
mov
mov
and
and
jne
mov
imul
cmp
repnz
cmps
xchg
sub
add
inc
pop
je
inc
push
inc
xor
addr16
mov
push
bound
in
fcmovnb
aad
fsubr
mov
sub
nop
mov
mov
mov
das
mov
rcr
dec
sub
int
arpl
psadbw
daa
pop
ins
push
gs
lods
and
sub
or
mov
push
or
cmp
sbb
in
sub
pushf
mov
inc
mov
repnz
push
test
inc
sub
jl
xchg
xor
ins
sub
or
mov
cmp
add
test
sbb
push
sbb
out
fild
push
psubusw
mov
imul
cmp
xchg
inc
bound
sbb
imul
mov
imul
cmp
or
xor
movs
enter
repnz
dec
test
loope
or
ss
repz
addr16
fldenv
shl
adc
xor
loope
outs
pop
jo
mov
pop
ins
push
in
ins
add
adc
fdivr
push
jge
push
addr16
call
mov
xchg
cmps
popa
push
arpl
jg
add
inc
and
ins
pop
movs
jmp
jp
and
repnz
lods
xchg
mov
cmps
dec
sub
jb
cs
xor
mov
adc
fsub
pop
fbld
mov
pusha
lock
adc
fnstenv
inc
(bad)
pop
xchg
cmps
xchg
lods
sbb
fst
inc
jno
mov
and
shl
mov
shl
cmps
inc
cmp
mov
xor
jl
jp
out
cmp
ss
push
and
scas
fwait
jmp
mov
call
push
ja
jno
push
popf
stos
push
imul
dec
dec
int3
enter
movs
xchg
cmps
xchg
gs
add
call
(bad)
out
pusha
push
add
pop
sub
and
inc
cmp
cmp
mov
pop
das
(bad)
mov
mov
push
lods
xchg
mov
cld
leave
scas
gs
dec
mov
jae
pop
js
mov
cld
gs
je
lock
add
adc
in
mov
daa
push
jns
ins
pop
fs
test
xor
scas
and
ret
and
fsubrp
mov
mov
push
jg
lds
sub
cld
pop
sbb
call
sbb
fisttp
jmp
cli
pop
push
jp
jl
jmp
sub
test
repz
iret
mov
mov
int
push
push
mov
push
xor
(bad)
sahf
jecxz
addr16
xor
jl
inc
ja
cwde
lods
pusha
dec
dec
lea
pop
sub
mov
loop
xor
fcmovne
jmp
fnsave
adc
and
pushf
shl
inc
lea
mov
pop
adc
add
in
fbstp
inc
mov
jbe
movs
int
cmp
mov
lods
fstp
ins
pop
inc
mov
imul
in
sbb
sbb
retf
mov
mov
out
jp
jno
jmp
les
dec
sub
push
cmp
jecxz
es
mov
mov
push
bound
xor
ja
sub
and
arpl
push
(bad)
jmp
loopne
sbb
xchg
pop
push
sahf
mov
cmc
enter
repz
push
sbb
xchg
inc
ffreep
xor
aad
lock
sbb
shr
pop
or
xor
fst
leave
addr16
ss
sub
pop
sbb
pushf
scas
sahf
repnz
push
sti
mov
mov
jmp
popa
and
xor
jmp
mov
ja
jno
imul
mov
dec
iret
push
cmp
cmp
shl
inc
and
add
push
stos
inc
aas
cmps
(bad)
mov
inc
xor
push
lea
iret
shl
cmp
cmp
fnstsw
fdivr
cmp
dec
adc
jge
repz
dec
cs
movs
inc
add
mov
loope
mov
cmp
cmps
xchg
lock
int
ds
add
or
pop
or
push
xor
add
push
sub
cli
leave
sti
ret
cmp
push
out
(bad)
lea
mov
pop
imul
xchg
pop
inc
cmp
ss
stc
shr
fnsetpm(287
mov
dec
das
dec
test
lods
retf
cmp
jl
sti
int3
cld
iret
imul
push
popa
push
or
stc
leave
repnz
add
pop
outs
fs
aad
cmc
ret
mov
ret
pop
jb
es
mov
inc
jb
mov
cmp
mov
fs
add
sbb
adc
inc
jbe
sar
fucomi
xor
pushf
lods
into
loope
ins
push
aad
mov
dec
rcr
cdq
mov
inc
lock
xor
xor
mov
hlt
cwde
std
loopne
ins
pop
ds
pop
inc
jae
popa
push
addr16
lock
mov
jecxz
into
dec
test
in
sub
xlat
loope
sbb
push
lock
mov
cdq
lahf
mov
fs
(bad)
and
inc
and
lock
jle
ret
stc
sahf
aaa
inc
dec
clc
mov
jbe
mov
mov
ins
mov
xchg
out
dec
jp
sbb
xor
dec
mov
popa
pop
and
mov
leave
outs
or
mov
cmp
idiv
lock
jg
sar
push
jmp
push
out
and
pusha
test
add
push
int
daa
adc
mov
cmp
add
mov
nop
xor
cmp
call
push
mov
in
cmps
jmp
mov
sub
cdq
adc
aad
sbb
retf
mov
ss
aas
sub
mov
add
ror
mov
or
dec
cmps
in
(bad)
ror
test
mov
call
shl
call
mov
push
add
pop
mov
popa
add
pop
dec
mov
imul
jns
jns
dec
in
aas
cmp
popa
outs
sbb
pop
or
jg
popa
mov
ror
rol
xlat
scas
div
dec
mov
cmpxchg
cmp
test
jae
mov
stos
mov
retf
hlt
(bad)
test
outs
mov
or
pop
scas
test
inc
cmp
scas
call
xchg
fninit
pop
sbb
popa
adc
inc
adc
(bad)
fs
sar
jg
psubsb
adc
adc
dec
int3
aas
pushf
imul
add
adc
gs
js
push
aam
and
fiadd
add
mov
sbb
pop
xchg
cdq
sti
push
mov
(bad)
call
mov
lods
cdq
push
xor
fmul
clc
iret
push
mov
xor
arpl
jge
test
pop
gs
icebp
retf
stos
dec
add
add
pop
jns
jo
(bad)
enter
and
(bad)
jne
xchg
movs
addr16
jae
neg
inc
ds
and
test
xor
inc
jae
je
sbb
mov
je
adc
inc
sub
(bad)
out
mov
mov
mov
mov
xor
mov
cmp
cmp
(bad)
in
dec
cli
jmp
cmc
cmp
enter
jmp
cld
ret
das
fsubr
fdiv
ins
adc
jne
cmps
in
pop
cs
daa
mov
test
xchg
std
pop
cmp
xor
aaa
nop
in
ss
shl
xor
(bad)
in
mov
push
repnz
mov
cmp
idiv
and
movs
xchg
hlt
jge
mov
fcmovnb
dec
cld
dec
aad
jno
loope
xor
sbb
out
xor
(bad)
in
daa
(bad)
daa
dec
jg
retf
cmp
addr16
aaa
push
sbb
push
jne
imul
xchg
daa
xchg
mov
sbb
add
mov
imul
sbb
inc
iret
clc
retf
lods
xor
sbb
fnsetpm(287
(bad)
xor
inc
jno
and
xchg
leave
dec
repz
repnz
in
loop
out
and
mov
retf
pop
ss
bound
lahf
mov
mov
outs
dec
push
adc
mov
fcomi
(bad)
not
sub
shl
mov
sub
dec
mov
push
bound
mov
mov
in
hlt
cwde
std
leave
cli
call
cmp
sub
xchg
test
rcl
stos
cdq
mov
ret
dec
lock
mov
cld
fwait
test
cmp
xchg
clc
into
xor
dec
clc
test
push
jae
mov
sbb
int3
jo
scas
fld
shr
xchg
imul
test
xchg
xor
and
add
cs
sub
xchg
xchg
hlt
ret
cmp
loop
sub
jmp
sar
push
cli
call
pop
shl
fidiv
mov
ins
pop
push
ficom
in
in
or
pop
daa
pop
das
out
sub
fild
sbb
dec
mov
jne
sahf
popf
lods
popf
cmps
or
(bad)
pop
sub
mov
xor
(bad)
out
jmp
bound
jp
inc
mov
mov
mov
imul
es
jns
lock
fsubrp
fist
bound
ret
movs
pop
fs
(bad)
ins
push
jg
lods
loopne
pusha
mov
jmp
inc
mov
std
shr
xor
jns
xor
ja
bound
xchg
fistp
lods
xlat
mov
jns
xor
fs
xor
dec
jp
inc
xlat
repz
mov
or
cmps
(bad)
adc
sbb
stc
xor
cld
into
ins
xlat
cld
shl
mov
jne
xchg
test
sbb
(bad)
fwait
xlat
sub
xor
xchg
imul
dec
out
mov
aad
mov
out
ins
push
js
dec
sub
cmc
inc
push
jno
jp
dec
scas
fsubr
fldcw
xor
add
mov
adc
jbe
sahf
test
js
mov
push
loopne
xor
pop
cmp
repnz
jge
mov
push
jle
xor
fcomp
test
inc
arpl
jecxz
shl
and
dec
lock
aaa
cdq
pop
js
cdq
mov
jecxz
push
cmp
push
clc
mov
sub
dec
jp
mov
fnstcw
mov
unpcklps
dec
jge
das
xchg
sub
jmp
sahf
scas
adc
or
cdq
cmps
lahf
mov
dec
add
pop
jp
mov
and
mov
and
xlat
mov
jno
(bad)
in
sub
mov
or
addr16
js
jg
std
xchg
repz
movs
and
xchg
scas
test
in
in
mov
push
aaa
add
cmp
pop
jo
xchg
stos
xchg
cmps
in
add
sbb
dec
js
aam
aam
and
cmp
jmp
mov
ret
cmps
pop
jae
cdq
lods
pushf
dec
dec
mov
mov
push
jmp
or
call
cmc
jp
jmp
or
aaa
add
movs
xchg
mov
push
icebp
lea
xchg
cmp
jmp
pop
mov
out
mov
adc
cld
ret
mov
icebp
rcr
cli
aas
adc
out
sbb
lahf
cld
lahf
jae
jmp
fisubr
stc
retf
and
cmp
push
gs
mov
add
xor
ds
cmp
mov
pop
push
in
mov
out
jecxz
pushf
cmp
repnz
je
movs
outs
jmp
repz
or
push
jbe
mov
inc
not
out
outs
pusha
cmp
fbstp
sbb
cmp
or
out
daa
hlt
lds
loope
sti
and
xchg
imul
(bad)
mov
aas
out
dec
in
fistp
in
pop
outs
pop
fsubr
in
mov
mov
mov
inc
inc
mov
cmp
into
clc
jmp
and
sub
cmp
pop
outs
or
sub
sub
(bad)
fucomp
fsub
xchg
ins
dec
xor
add
retf
retf
inc
imul
jmp
push
test
sahf
stos
dec
lock
inc
pushf
push
and
mov
add
popa
jae
sbb
aam
dec
cs
mov
xor
mov
xchg
add
push
jle
(bad)
mov
xchg
adc
bound
fld
into
cmps
pop
ins
pop
hlt
retf
add
out
jmp
xchg
sahf
movs
lds
xchg
pop
loop
jne
(bad)
out
test
mov
pop
in
lea
imul
shr
jl
outs
mov
(bad)
push
aam
(bad)
scas
int3
cmps
call
out
retf
dec
iret
cmps
in
jecxz
test
aad
fcom
pop
cld
cwde
stos
retf
mov
ret
iret
(bad)
mov
pop
in
scas
imul
fmul
es
or
jb
js
fld
rcr
(bad)
loopne
adc
ja
rcr
aas
or
test
xor
inc
jb
lahf
mov
xor
cmp
lahf
test
ds
or
mov
scas
sahf
inc
fs
ins
jg
out
adc
jmp
fnstenv
xchg
jb
dec
jae
jnp
jmp
mov
inc
scas
shl
nop
adc
nop
mov
into
test
adc
cli
icebp
push
cmp
push
and
fistp
shl
cmp
or
sub
jbe
dec
js
dec
enter
or
cld
iret
div
mov
sub
adc
inc
ds
faddp
xchg
sbb
dec
cmc
dec
pop
ds
cmp
scas
lahf
dec
push
sub
inc
push
ficomp
gs
jle
das
push
(bad)
out
push
xor
cmc
xchg
not
xchg
sub
adc
inc
push
ret
xor
clc
rcl
cmp
cmc
scas
xchg
repnz
pop
loopne
cmp
stos
add
xchg
push
add
xor
shl
arpl
jecxz
jo
movs
xchg
xchg
icebp
lds
(bad)
test
mov
loopne
push
lods
(bad)
int
inc
jbe
mov
loopne
xchg
cmps
lahf
and
outs
in
mov
mov
ret
push
cmp
rcl
sbb
xor
call
cmp
sbb
icebp
xchg
pop
imul
push
rcr
cmc
ret
mov
call
jge
in
lods
shl
jp
and
mov
in
cmp
cmp
cmp
fucomip
mov
xor
cwde
cld
es
inc
and
loop
mov
daa
inc
and
std
pop
mov
push
shl
mov
(bad)
scas
popf
stc
test
mov
arpl
adc
sub
loope
in
pusha
stos
stc
cmp
ins
or
loop
in
fnstsw
sti
fwait
lods
sahf
(bad)
gs
push
push
pop
cmp
fimul
cmp
stc
and
sbb
dec
inc
test
ins
mov
or
out
or
dec
shl
popa
mov
lea
inc
dec
stos
shl
(bad)
mov
push
sbb
shr
and
mov
sub
pop
int3
std
int
mov
mov
mov
mov
icebp
into
sti
lahf
add
push
mov
and
mov
inc
sub
(bad)
pop
ffree
lods
retf
cli
lahf
push
iret
xor
in
mov
outs
(bad)
and
cmps
(bad)
imul
in
mov
lock
clc
shr
jmp
aam
int3
scas
int
sub
mov
push
out
int
cmp
nop
(bad)
popf
std
into
scas
int
or
std
test
das
jmp
cld
xor
gs
mov
leave
stc
leave
bnd
cdq
in
xor
ss
mov
lods
mov
aad
dec
lds
out
pop
or
arpl
sar
mov
cdq
js
int3
scas
int3
push
lock
pop
imul
ins
pop
jmp
addr16
gs
in
mov
not
mov
mov
cmp
scas
icebp
or
adc
and
out
loop
inc
sub
sbb
das
ja
push
imul
or
add
jbe
jns
sub
mov
push
jns
push
pop
pop
push
ds
mov
inc
outs
cwde
test
add
sub
retf
test
lea
test
ret
enter
jg
popf
pop
mov
shl
and
aas
pop
bound
xor
movs
imul
push
xor
xchg
ret
mov
mov
mov
ja
cld
iret
aad
outs
or
js
add
into
clc
jno
dec
jmp
dec
sub
sub
cmp
mov
ins
pop
data16
js
or
or
ss
xor
inc
mov
shr
xchg
jb
cwde
push
jp
retf
stc
shr
xchg
mov
test
jns
jmp
int3
call
ss
push
ins
pop
in
add
outs
loopne
or
jns
mov
fsubr
(bad)
xor
gs
stos
out
mov
add
add
inc
mov
mov
add
cmp
aas
or
call
add
add
xchg
repnz
repz
and
and
mov
nop
test
or
add
push
inc
add
outs
pop
test
aam
into
xlat
mov
jp
inc
ja
in
mov
loop
jecxz
jmp
fdiv
fmul
leave
cld
cdq
mul
(bad)
aam
test
jl
cs
mov
mov
add
pop
daa
pop
aas
push
aaa
push
arpl
nop
mov
ret
xor
ss
mov
push
shl
and
cli
pop
jo
movs
jg
xor
xchg
outs
ror
dec
sub
lods
bnd
jle
shr
xor
ins
mov
jbe
jg
jb
mov
call
ret
jl
cmp
inc
jno
mov
mov
inc
and
jne
shl
sub
hlt
add
shl
sbb
cmps
mov
sbb
outs
add
in
push
pop
mov
sub
fidivr
es
je
and
xor
aas
dec
leave
pop
xchg
mov
call
sub
inc
and
sub
mov
adc
test
sar
mov
fs
inc
and
hlt
push
sub
in
mov
scas
hlt
jno
and
cwde
lahf
cli
cdq
aad
jl
sub
ret
push
dec
fistp
shr
fabs
push
jnp
imul
pop
add
gs
test
addr16
movs
cwde
lods
xchg
mov
test
les
push
sub
aad
xor
or
adc
pop
mov
int3
(bad)
jecxz
lods
mov
loopne
sbb
mov
mov
imul
ret
enter
sar
xchg
push
lock
cmp
add
cld
dec
test
inc
ret
mov
mov
mov
jg
adc
pop
mov
scas
cmp
hlt
xchg
adc
aam
repz
sub
cmp
arpl
adc
cld
retf
cli
retf
sbb
(bad)
sbb
js
jge
cmp
shl
inc
jae
sub
jge
dec
popa
mov
ins
loopne
fnstsw
push
xchg
scas
in
sub
jne
jmp
pop
cmps
(bad)
mul
(bad)
das
push
and
jp
enter
fs
in
xlat
mov
fs
aaa
sbb
sbb
cdq
stos
jno
cmps
mov
mov
sti
lock
cmc
fild
fdivr
xor
outs
int
mov
and
stos
call
int
sahf
dec
mov
enter
inc
mov
nop
jge
dec
or
xchg
dec
push
jp
shl
mov
push
cmp
imul
xor
mov
fnclex
aam
mov
jg
dec
sbb
popf
shr
ds
jo
adc
test
push
dec
es
fnsave
mov
imul
leave
and
add
test
test
dec
push
into
xor
cmp
pop
xchg
fisubr
mov
aaa
(bad)
icebp
fild
mov
std
iret
cli
jno
enter
test
cdq
mov
or
int3
(bad)
xchg
xchg
hlt
ret
push
and
mov
(bad)
maskmovq
neg
loopne
lahf
push
(bad)
push
es
enter
daa
out
fucomi
mov
shl
out
loop
lahf
add
ror
gs
(bad)
repz
aas
adc
mov
mov
fs
add
bound
ss
mov
jmp
icebp
pop
test
in
jbe
mov
jl
jns
(bad)
inc
adc
inc
and
out
das
jb
inc
je
mov
out
mov
cwde
sti
jne
and
cmps
out
call
push
js
bound
pop
ds
test
jmp
out
test
cmps
hlt
enter
push
push
aad
xchg
add
lahf
(bad)
push
dec
jp
hlt
mov
gs
arpl
dec
cs
jg
jnp
mov
jge
jne
cmc
lea
scas
retf
inc
gs
ret
neg
pop
xor
sbb
push
ret
call
sbb
dec
aam
jg
call
pop
pop
jo
pop
jecxz
scas
pushf
sti
jno
mov
mov
aad
adc
adc
cmc
xchg
rcr
bound
mov
in
(bad)
in
xor
aas
pop
mov
mov
xchg
fnstsw
mov
(bad)
enter
scas
lahf
dec
xchg
xchg
pop
cs
push
gs
mov
xor
pop
xchg
out
mov
daa
add
push
shl
dec
pop
jp
jg
fwait
xor
push
mov
pop
fcomp
pop
xrelease
and
leave
lods
iret
stos
adc
daa
(bad)
mov
mov
jle
repz
and
hlt
aaa
push
xor
push
loope
push
fs
mov
inc
mov
add
add
movs
sbb
mov
ins
xor
mov
jp
sub
jle
cwde
sbb
ins
loopne
push
out
fsubr
inc
mov
mov
adc
mov
shl
dec
xor
jg
add
cmps
xchg
cmp
push
lahf
scas
popf
xchg
push
cmp
leave
lods
retf
std
neg
add
cmp
jecxz
in
adc
inc
shl
or
jmp
push
push
cmp
pop
cli
out
dec
aaa
adc
fwait
pop
cmp
int3
stos
retf
jmp
push
popf
push
mov
in
add
xchg
pop
jg
sub
inc
jno
lods
and
cld
lahf
cld
aad
xchg
std
fistp
xchg
mov
shl
(bad)
retf
mov
mov
mov
mov
inc
mov
and
mov
lods
popf
movs
xchg
push
cmp
cmp
add
out
outs
sbb
inc
jg
jns
pushf
rol
adc
aas
pop
mov
movs
ret
cmps
les
loop
push
inc
mov
outs
push
daa
imul
mov
in
mov
in
mov
dec
sub
sub
and
jns
ins
pop
ds
scas
retf
dec
in
in
(bad)
pop
(bad)
pusha
pushf
push
(bad)
mov
and
push
leave
pop
call
hlt
les
es
movs
jmp
and
inc
ins
scas
lahf
cmps
xchg
xchg
daa
adc
sti
adc
jg
pop
mov
call
or
aaa
jnp
and
and
aad
outs
and
adc
xchg
cmps
cwde
rol
adc
loope
into
stc
jo
mov
xchg
icebp
lds
pop
xchg
imul
cmp
or
jbe
leave
loop
cmp
scas
lahf
cld
iret
lods
fs
(bad)
scas
not
bound
jnp
mov
push
mov
inc
bound
cmps
xchg
sub
fucomip
(bad)
xor
add
sub
mov
cmp
rcr
sub
mov
scas
lahf
stos
pop
imul
stos
data16
mov
inc
and
icebp
push
ss
jo
sar
popf
mov
or
adc
outs
pop
cmp
les
(bad)
icebp
cdq
scas
int
mov
test
movs
or
(bad)
in
adc
mov
fcom
test
and
(bad)
call
fistp
fld
jne
sbb
adc
mov
aas
pinsrw
or
call
pop
jecxz
test
shl
cmp
adc
sbb
mov
push
arpl
mov
cmp
cmc
iret
dec
mov
cwde
lods
jle
and
dec
dec
sub
cmp
cmp
inc
jno
in
call
outs
fs
jb
clc
and
xchg
shl
sbb
out
dec
adc
sbb
nop
jle
test
mov
in
sub
sub
xchg
mov
xchg
not
jno
js
cwde
lods
neg
repz
pop
add
xor
xor
push
lods
packssdw
std
retf
push
jne
cs
mov
je
(bad)
push
addr16
cmp
mov
and
pop
cs
test
dec
jnp
loop
not
mov
vpunpcklwd
fs
inc
jp
inc
rcr
sub
repz
xchg
mov
cmp
pop
xchg
and
xor
mov
(bad)
dec
inc
ja
xchg
sub
sub
ss
xchg
jle
cmp
dec
mov
call
retf
inc
dec
mov
retf
test
inc
and
push
in
xchg
adc
sahf
lods
leave
push
inc
fild
adc
sub
adc
icebp
sbb
popa
push
or
(bad)
jmp
lahf
stos
int3
xor
mov
mov
sbb
push
mov
mov
sbb
push
xlat
mov
xchg
ins
loop
pushf
mov
cmp
aas
and
cdq
mov
fninit
out
pop
mov
dec
or
test
xchg
inc
fs
std
shl
fdivrp
pop
out
(bad)
imul
test
or
jle
into
xchg
test
dec
jl
sub
(bad)
in
test
lahf
lods
jno
sbb
out
jle
popa
adc
retf
jmp
push
push
xchg
repz
imul
jbe
lods
retf
push
(bad)
test
lods
jne
push
dec
push
add
retf
(bad)
mov
adc
sar
or
icebp
xchg
cmps
ret
imul
ret
mov
push
dec
jl
cs
leave
mov
add
push
lods
fnstcw
pop
cmp
or
out
sbb
pushf
dec
inc
(bad)
clc
call
hlt
in
in
mov
sbb
or
mov
jns
or
test
dec
gs
adc
shl
jecxz
aaa
shr
mov
push
push
add
xlat
mov
push
loopne
jb
inc
inc
js
das
lock
int
fucompp
sbb
lods
shr
es
aam
mov
outs
add
sahf
std
call
xchg
das
sbb
pop
mov
dec
inc
mov
push
out
ror
icebp
bound
in
retf
scas
call
push
test
adc
adc
mov
pop
sti
shl
lea
outs
pop
cmp
cmp
or
jne
loope
in
ja
les
sub
xor
xchg
pop
imul
mov
xchg
stos
fwait
inc
fcmovnb
push
push
outs
sub
js
cs
dec
(bad)
sbb
in
and
mov
ja
mov
popf
add
cmps
test
outs
pop
repz
mov
out
sub
dec
sub
(bad)
test
xchg
clc
retf
std
into
inc
jp
and
ret
cmp
shr
and
mov
push
test
lahf
test
push
hlt
rcl
and
mov
and
sub
mov
rol
inc
sub
mov
xchg
pushf
mov
or
add
lods
and
pusha
int3
adc
pop
ins
pop
ss
stos
(bad)
int
jg
js
ror
xlat
jle
lock
xor
cs
jnp
xchg
xchg
cmps
jbe
(bad)
mov
mov
aam
cmc
xchg
movs
dec
and
lock
hlt
les
and
push
push
cmp
cmp
xchg
repnz
cmp
jg
(bad)
pop
iret
imul
mov
packsswb
sbb
jb
cmp
or
loope
(bad)
lahf
scas
int3
push
add
fdivr
and
out
jle
shr
aas
and
jb
or
xchg
js
ret
or
mov
mov
fwait
daa
sbb
mov
pop
cmp
push
fwait
imul
mov
int3
mov
int3
push
cs
scas
cdq
push
jb
or
push
xor
aad
add
xlat
call
outs
pop
xchg
mov
adc
repz
and
scas
les
xchg
lea
push
(bad)
cmc
test
stos
sahf
jp
(bad)
outs
mov
out
daa
jmp
and
mov
mov
loop
adc
mov
repz
lods
call
mov
push
and
int3
jmp
adc
push
or
outs
or
test
fild
cmp
in
jp
push
cli
ret
enter
dec
sub
lock
inc
fcom
inc
mov
mov
cwde
jns
pop
ins
sub
pop
test
jmp
xchg
popf
loope
jmp
cmc
xchg
lock
mov
repz
inc
ja
test
or
test
fs
clc
iret
mov
loope
outs
bound
test
adc
and
jle
xor
pop
es
dec
and
mov
loopne
jmp
call
lds
dec
fild
mov
ins
or
sbb
jl
jge
jecxz
push
xchg
mov
pop
dec
xor
jmp
sbb
lds
xor
cmc
out
fbstp
adc
xchg
push
xor
or
gs
jo
xchg
mov
jecxz
iret
stos
push
sub
xchg
adc
add
xchg
mov
mov
fwait
cmp
sbb
mov
enter
sub
xor
out
call
pop
mov
out
(bad)
imul
push
add
and
iret
cld
mov
aaa
push
xchg
adc
loopne
mov
scas
dec
mov
mov
mov
pop
jmp
add
jns
dec
ins
or
inc
fadd
ret
xor
xor
ret
jg
mov
cmp
(bad)
sub
call
mov
inc
gs
in
cs
les
scas
fucomip
aad
repz
jnp
lds
and
lahf
sar
pop
cmp
popa
scas
inc
arpl
mov
jmp
xchg
lods
and
out
(bad)
dec
jge
sub
jg
mov
sub
xchg
lods
sahf
xor
leave
call
push
or
fnsave
add
pop
ins
mov
jg
mov
fs
jl
jge
(bad)
iret
xor
aas
js
sub
es
fist
dec
fistp
aam
loope
cmc
outs
xor
jo
scas
jg
aaa
cwde
mov
mov
adc
sbb
push
jge
inc
daa
adc
pop
cmp
jge
rol
jno
mov
sbb
mov
ja
inc
xlat
movs
(bad)
cmp
or
dec
xor
lods
pushf
dec
jo
xor
cmp
dec
jp
lahf
add
sub
(bad)
movs
fistp
popa
(bad)
movs
pop
mov
sahf
test
dec
rcr
dec
jmp
xchg
mov
dec
call
mov
push
popa
scas
push
lods
sahf
cli
in
jg
or
retf
cli
ret
das
or
into
lods
pop
cmp
push
cli
cdq
fisub
scas
pushf
stc
mov
in
les
mov
push
movs
dec
sub
aas
or
xlat
and
test
inc
stc
aam
(bad)
mov
cmp
cs
add
xor
push
sbb
xor
dec
inc
jl
addr16
sbb
outs
pop
cmc
lahf
rcr
mov
pop
imul
ret
mov
(bad)
lods
fidiv
push
ss
or
and
aam
aam
push
or
sbb
loopne
dec
jg
mov
adc
adc
mov
into
arpl
mov
or
adc
jo
mov
loop
aad
stos
and
jae
and
mov
loopne
ja
adc
pmaxsw
scas
iret
sti
sahf
aam
inc
daa
inc
retf
test
dec
fsubr
bound
mov
xor
jecxz
xlat
popa
repz
inc
ficom
pop
cli
or
nop
movs
pop
push
shr
int
je
and
les
push
sub
dec
push
fsubr
mov
cmp
sub
jmp
xchg
enter
inc
retf
nop
pop
adc
popa
push
popa
mov
pop
jb
xor
dec
cmp
jge
fisttp
xor
(bad)
(bad)
or
or
cmc
mov
test
mov
int
push
icebp
ins
test
iret
aam
das
pop
xor
jge
or
je
cmp
sbb
pop
ins
xchg
pop
adc
mov
inc
jne
mov
inc
cmp
mov
out
lods
repz
mov
je
dec
adc
sti
mov
lea
shl
leave
cld
and
repnz
out
cmp
sbb
add
jno
inc
cmp
sub
and
ret
int3
(bad)
cmp
gs
pushf
lods
xchg
mov
push
fist
mov
xchg
in
out
pusha
add
cwde
cmps
nop
mov
or
outs
pop
hlt
jmp
(bad)
shl
sbb
js
sub
mov
jo
or
(bad)
xlat
mov
iret
(bad)
mov
aas
inc
daa
sbb
xchg
or
outs
mov
jle
jnp
out
xor
push
add
add
xor
pop
das
mov
into
scas
push
jo
mov
scas
arpl
xchg
and
leave
lods
in
ins
adc
cmp
into
sti
sahf
inc
fist
arpl
sub
cmp
test
jg
imul
aam
sbb
fdiv
mov
in
sub
mov
adc
jbe
and
push
jmp
loop
out
cmp
lock
fdiv
movs
cmp
dec
sub
stos
addr16
test
inc
ins
pop
shr
mov
and
leave
mov
out
adc
push
into
mov
xchg
pop
loop
fwait
xchg
aam
sbb
mov
lds
mov
or
jae
inc
push
sub
movs
repz
aam
call
pop
adc
dec
movs
inc
aad
retf
jo
in
in
mov
loope
or
shl
out
cli
je
and
and
lods
xchg
retf
push
push
fs
out
repz
ds
call
lds
repz
lods
popf
out
cmp
in
pop
ds
push
xor
imul
mov
push
pop
cmc
jp
in
in
cs
xchg
aaa
xchg
mov
push
ja
xor
mov
es
rcl
bound
add
add
pop
repnz
xchg
lods
out
loope
in
cli
mov
or
or
in
mov
mov
pusha
mov
adc
pop
pop
jo
ss
in
out
mov
js
cmc
mov
add
mov
cld
inc
xor
mov
xor
shr
aad
popa
out
or
pop
mov
loop
push
push
xchg
lods
loop
mov
das
dec
jle
jmp
mov
mov
cmp
jl
mov
pop
je
jge
call
mov
pop
cdq
std
lahf
cli
inc
loop
lock
dec
jnp
and
out
xor
cmp
inc
dec
inc
and
jbe
in
loope
xchg
icebp
(bad)
adc
fst
push
cmp
fs
or
es
and
iret
stos
sahf
dec
sti
push
sbb
jle
xor
cmp
repz
aaa
pop
aas
or
or
movs
cwde
cmp
or
je
dec
ret
ret
in
and
ja
fwait
rcl
or
sbb
jle
pushf
scas
inc
jmp
pop
outs
or
xor
packsswb
dec
push
cmp
js
popa
push
in
outs
push
jp
sub
call
std
int3
cmp
or
enter
adc
push
es
in
dec
hlt
dec
dec
jnp
enter
imul
mov
mov
jl
mov
add
mov
or
sub
cmp
sub
jbe
and
mov
inc
jno
fidiv
mov
xchg
test
dec
sub
ror
or
dec
jl
sub
enter
push
push
fs
clc
shl
or
lods
xor
cmp
cdq
scas
push
ins
mov
(bad)
mov
pop
(bad)
int3
(bad)
jnp
sbb
jno
mov
xlat
icebp
in
xchg
repz
push
add
(bad)
push
sub
jecxz
jmp
test
stc
enter
push
add
jae
jbe
shr
lea
mov
lea
pop
mov
fmul
mov
sar
xor
ja
mov
add
adc
xor
aas
pop
cli
iret
test
adc
call
call
xor
sbb
mov
lock
vfrczss
xchg
fmul
sub
xor
not
xchg
pusha
test
add
pop
cmp
popf
lods
shl
aad
jg
test
mov
fucomp
mov
mov
nop
addr16
mov
iret
stc
into
test
test
push
and
and
shr
jl
jge
(bad)
fidivr
inc
and
lods
and
pop
push
test
mov
mov
xchg
and
and
mov
out
mov
popa
push
pusha
xchg
xor
fsubr
arpl
inc
xchg
dec
sub
mov
xchg
mov
out
stos
pop
fild
jmp
test
sub
sahf
ins
adc
inc
jp
cs
sub
in
test
mov
(bad)
(bad)
sahf
inc
je
xor
imul
into
jae
and
or
mov
cmp
sti
loopne
scas
xchg
repz
inc
push
xor
jne
and
pop
int
xchg
dec
lods
popa
sub
cmp
retf
cmp
aam
les
xchg
out
in
xchg
test
pop
stos
test
mov
and
sbb
add
and
loop
pop
retf
test
inc
int3
call
and
inc
cmp
es
push
mov
mov
sbb
je
mov
cmps
pop
fwait
push
sub
int3
push
adc
sahf
lea
cmp
stos
shl
aam
sbb
xchg
pop
jno
cmp
push
xchg
adc
into
imul
sbb
adc
in
hlt
push
xchg
cmp
loope
or
inc
and
pop
fdiv
mov
xchg
xor
inc
pushf
mov
outs
and
or
xlat
loope
and
and
je
jne
movaps
xlat
or
push
fwait
daa
adc
call
xchg
movs
xchg
jge
fst
add
(bad)
cmc
jp
inc
mov
lods
xlat
test
sub
rcr
ret
cmp
sub
out
add
pop
push
add
cmp
cmp
mov
mov
adc
mov
scas
popf
cli
push
sub
xchg
test
clc
xchg
mov
push
xor
or
push
iret
and
hlt
retf
pop
ret
lock
mov
sub
imul
mov
call
lock
fucomp
fldenv
or
sbb
pop
jo
jns
jo
sub
pop
outs
sub
scas
xchg
mov
fwait
lock
fwait
jle
jp
jp
mov
lods
xchg
mov
inc
jae
add
(bad)
out
dec
mov
adc
scas
adc
jge
jb
mov
movs
call
dec
mov
or
xchg
sub
jge
jp
mov
ficom
fild
and
xor
xchg
in
xor
lds
cmp
jmp
cmps
xchg
test
sub
fmul
cmps
cld
dec
lock
cwde
stos
into
cld
cwde
in
enter
jge
jecxz
dec
jns
scas
retf
dec
(bad)
mov
sub
mov
pusha
add
push
addr16
std
lds
sub
xor
sti
lahf
add
in
xchg
into
int3
scas
popf
inc
mov
aam
add
aas
push
ds
sti
gs
imul
out
mov
cmp
shl
(bad)
mov
test
push
retf
outs
pusha
icebp
jns
push
xchg
mov
add
(bad)
icebp
mov
push
retf
push
or
pushf
pop
and
in
mov
xor
and
fstp
(bad)
neg
loopne
loop
add
jno
in
int3
neg
cs
into
stos
jne
out
xor
(bad)
(bad)
sbb
mov
aas
es
cmp
es
ja
hlt
fcmovnb
(bad)
hlt
nop
fwait
cld
retf
scas
in
shr
in
inc
xor
xor
fdivr
arpl
adc
loopne
ret
adc
push
popa
mov
pop
or
outs
xchg
pop
push
jl
outs
pop
imul
ror
sahf
adc
movs
xchg
adc
mov
scas
mov
pop
sti
sbb
sbb
in
push
loope
aas
pop
inc
push
jbe
jno
test
add
shl
xor
and
je
nop
mov
int3
shl
shl
fisubr
or
bound
gs
and
pushw
sar
mov
in
pushf
mov
stos
in
out
push
fucomp
jle
(bad)
pop
test
mov
das
adc
inc
mov
mov
adc
or
or
pop
outs
xchg
outs
adc
push
xor
inc
and
mov
and
test
cmps
xchg
cmps
dec
repnz
js
imul
fcmovnb
mov
repnz
neg
inc
ds
aad
(bad)
xor
ror
mov
xor
push
aaa
add
test
push
cmps
(bad)
sar
cdq
or
enter
(bad)
into
and
add
mov
dec
sub
pop
in
cwde
cld
iret
pop
push
add
or
cmp
leave
mov
push
jbe
pushf
(bad)
movs
xchg
mov
enter
mov
dec
xchg
mov
mov
push
xchg
jno
jge
jp
xor
into
mov
xchg
stos
fwait
add
dec
sub
call
sbb
xrelease
pop
scas
push
or
or
in
mov
jg
js
scas
call
xor
hlt
fdivp
leave
test
cmc
call
or
jns
jecxz
mov
test
nop
cmc
mov
adc
add
mov
scas
pushf
add
outs
inc
xor
sbb
and
adc
push
addr16
inc
add
daa
inc
repnz
mov
mov
pop
add
or
pop
mov
fs
bound
add
push
mov
outs
or
cs
jg
cmp
pushf
scas
mov
jl
inc
test
ins
and
stos
sbb
retf
jns
inc
and
(bad)
pop
inc
dec
add
add
cs
push
arpl
adc
xlat
xchg
cmp
stos
enter
mov
sub
call
mov
and
dec
sub
icebp
outs
push
sub
push
inc
inc
js
lahf
cld
adc
inc
jne
push
(bad)
int3
dec
and
jle
jns
bound
sbb
jmp
icebp
xchg
movs
ret
pop
outs
push
jle
shl
ror
jnp
sbb
jno
add
mov
dec
mov
pushf
leave
cld
rcr
aas
mov
pop
add
sub
scas
sub
retf
retf
cmp
mov
out
ja
popf
jae
xor
push
and
sub
repnz
mov
aas
push
test
cmp
xchg
pusha
dec
movs
in
cmp
fsubr
ja
and
or
outs
push
jecxz
addr16
out
mov
fidiv
mov
sbb
fdivrp
lds
push
jb
lods
mov
inc
lods
(bad)
sahf
mov
out
fsubr
fcmovnb
in
ds
je
xor
test
sub
test
jbe
mov
or
and
inc
aaa
addr16
jp
mov
push
xchg
scas
sahf
test
mov
(bad)
adc
dec
cs
jg
(bad)
cmc
mov
(bad)
out
xchg
sub
int
add
xor
test
lods
mov
mov
sub
mov
sbb
push
xor
add
call
jge
cmp
stc
data16
out
out
jle
inc
fst
aas
dec
ret
and
jno
and
xchg
fist
jbe
idiv
add
loope
mov
or
imul
daa
inc
and
lods
mov
js
sub
mov
jno
jne
sahf
mov
sub
mov
ins
ds
test
loope
mov
loope
jb
push
adc
dec
jg
pop
popa
pop
aam
movs
inc
and
pop
mov
xchg
xor
in
mov
xchg
add
jmp
xor
mov
xchg
stos
and
adc
out
fisubr
jbe
vcmpsd
cdq
call
jb
fwait
stos
adc
mov
(bad)
in
fidivr
in
xor
xchg
cmp
mov
sbb
mov
fs
mov
xor
dec
cwde
ins
or
add
inc
mov
gs
sub
(bad)
fild
in
popf
stc
movs
and
jno
pusha
push
arpl
cli
pushf
lods
mov
loope
dec
das
push
xor
lods
mov
cmps
ins
sbb
test
cmp
loop
push
cs
cmp
int
(bad)
test
and
mov
in
imul
mov
mov
or
push
(bad)
and
cmps
cmps
jnp
stc
dec
add
xchg
pop
inc
and
jo
dec
and
jmp
mov
mov
dec
mov
adc
test
shl
xchg
mov
mov
mov
shr
je
and
push
cmp
xchg
cmps
stos
fld
scas
aam
arpl
xor
xor
xor
xor
add
sbb
pop
pushf
inc
jo
xor
test
add
bound
test
cs
cmp
sub
fsub
shl
push
xchg
cs
cmps
add
int3
nop
pusha
mov
shl
out
adc
pusha
fsub
call
jns
arpl
xor
(bad)
mov
jo
inc
mov
inc
jmp
in
sbb
out
xor
imul
shl
sub
mov
aaa
and
call
addr16
enter
repnz
cmp
cmp
xchg
jno
jo
and
jae
cmps
cmp
outs
pop
rcl
inc
repz
loopne
loope
dec
push
call
lahf
stos
int
(bad)
lock
xor
or
mov
fucompp
and
hlt
(bad)
xor
jg
adc
scas
fs
icebp
mov
add
push
(bad)
push
scas
lahf
lods
or
adc
inc
cmp
xor
add
and
sub
rcr
dec
sub
out
stos
shl
test
and
push
jg
aaa
pop
add
cmp
sub
shr
pop
add
lahf
add
push
cmp
clc
ret
jmp
adc
ins
inc
js
cwde
ins
xlat
repz
test
lods
retf
jae
lea
mov
jle
int3
std
into
clc
fldl2e
sbb
movs
jle
adc
cld
pop
jo
sbb
xor
inc
mov
cmps
xchg
push
or
scas
sub
int3
std
shl
and
ins
mov
mov
das
dec
pop
test
or
jg
aaa
sbb
sbb
mov
iret
mov
outs
leave
cld
repnz
cs
das
xchg
jecxz
mov
pushf
imul
mov
in
loopne
mov
mov
out
jl
out
mov
mov
cmps
ret
or
neg
(bad)
lahf
and
jmp
in
mov
retf
das
sbb
jle
imul
ret
repz
inc
ins
sti
icebp
sar
shr
xchg
fmul
dec
fcomip
sar
mov
outs
movhps
sub
arpl
mov
push
mov
sub
rcr
mov
mov
jp
jle
aaa
fmul
scas
call
mov
fs
in
and
sub
hlt
inc
xchg
int
add
cli
and
sub
out
popa
stos
and
addr16
xor
push
xor
mov
pop
ins
cdq
mov
sub
cmp
and
mov
sub
cmp
mov
outs
push
ins
sub
call
cmp
bound
das
dec
cmps
cwde
sti
push
cmp
mov
add
ds
push
out
std
into
cmc
bound
mov
mov
ret
mov
fsubrp
jecxz
iret
xor
js
fsub
adc
lock
lahf
sti
cdq
inc
into
jbe
xchg
fsubr
push
fstp
pop
(bad)
adc
call
sbb
inc
je
pop
sub
cmp
or
pop
rcr
jae
add
ror
inc
push
repnz
stos
jb
icebp
(bad)
loop
movs
mov
push
mov
dec
mov
sbb
inc
aaa
mov
xor
cli
pushf
test
sbb
scas
int
or
push
cmps
cmp
aam
xchg
xor
(bad)
(bad)
nop
and
jnp
mov
outs
fcom
cs
sti
retf
cmps
or
loopne
or
int
pop
xor
shl
dec
or
jecxz
jge
jle
enter
cs
ja
cwde
mov
pop
ins
dec
and
push
jo
mov
loop
add
fstp
dec
ffree
repz
(bad)
mov
repnz
cmps
mov
inc
adc
mov
stos
xchg
adc
out
jmp
not
pushf
(bad)
popf
cwde
out
pop
fst
inc
inc
daa
push
pop
pop
call
and
xchg
fcom
mov
(bad)
mov
and
cmps
inc
imul
pushf
sub
out
sbb
dec
sub
movs
(bad)
das
inc
dec
or
and
push
repz
mov
in
loopne
out
popf
scas
and
fwait
stc
int3
stos
pushf
cmp
or
dec
js
fisub
dec
jno
mov
mov
xchg
jmp
jns
sti
or
mov
mov
adc
push
sbb
pop
(bad)
fsubr
(bad)
jle
add
xor
out
ja
in
(bad)
lds
mov
pop
addr16
add
call
or
ret
sub
cmps
inc
je
in
iret
ja
shr
mov
pop
mov
fdivrp
inc
fcomp
jbe
sahf
repnz
jecxz
loop
inc
sbb
(bad)
push
repz
out
call
jbe
jb
div
(bad)
lds
ins
dec
jb
pusha
fs
and
out
mov
shl
fdivr
shl
ror
adc
movs
pop
dec
shl
test
xlat
sahf
fisub
push
mov
loopne
mov
lahf
adc
fdivr
es
clc
int3
mov
mov
(bad)
mov
in
std
pop
lock
push
dec
mov
aad
ins
call
into
cwde
push
or
and
mov
in
fistp
adc
outs
push
repz
inc
cmp
clc
leave
stos
pop
mov
mov
aas
(bad)
inc
dec
scas
cld
iret
idiv
pusha
add
pop
fdivr
sbb
fsubrp
adc
fidivr
fptan
mov
push
xor
mov
dec
jmp
xchg
loope
add
xor
iret
lds
popf
pop
call
test
in
jecxz
mov
leave
mov
adc
mov
mov
addr16
adc
push
sub
lds
fiadd
mov
mov
push
arpl
add
nop
cmps
mov
mov
cmps
clc
mov
jg
ret
div
(bad)
adc
in
jecxz
(bad)
or
xchg
mov
pop
or
adc
jmp
or
shl
test
mov
call
adc
jge
fucomip
inc
jl
push
push
pop
jbe
neg
add
push
lods
pop
imul
shl
and
adc
or
cmp
clc
fwait
dec
js
xchg
pop
outs
dec
sub
adc
add
fstp
fsubr
(bad)
aam
mov
fnstcw
iret
clc
test
sub
out
movs
push
shl
aam
cmp
and
pop
push
imul
in
mov
stos
mov
pop
sub
shl
inc
cli
frstpm(287
aad
cmp
out
enter
add
frstor
sbb
add
xor
fsubr
adc
pop
sahf
scas
and
(bad)
fsub
mov
stos
sahf
dec
mov
in
mov
sbb
pop
dec
jl
sub
inc
and
dec
sub
daa
ja
jb
inc
(bad)
pop
test
into
jbe
add
or
push
mov
stos
pop
outs
jl
add
imul
repz
in
cmps
sub
dec
inc
daa
inc
and
inc
in
jae
ja
and
scas
retf
mov
inc
mov
sbb
mov
add
stc
iret
jo
je
mov
adc
xchg
test
cmps
jmp
push
and
iret
test
dec
stos
cdq
cmp
ds
ds
jo
jne
xor
jae
xchg
hlt
fcomi
xchg
repz
adc
sub
jg
jecxz
out
xlat
(bad)
adc
ss
jns
cmp
add
retf
dec
jb
sub
aas
int
push
jno
mov
mov
push
push
jge
xchg
loop
pop
add
dec
sldt
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
xchg
push
add
mov
test
(bad)
arpl
ins
push
and
inc
cmp
cmp
or
imul
or
pop
push
ins
pop
push
or
or
add
or
push
outs
pop
outs
or
cmp
cmp
or
or
cmp
fs
ins
pop
outs
pop
cmp
cmp
or
imul
or
pop
push
ins
pop
push
or
or
add
or
push
outs
pop
outs
or
cmp
cmp
or
or
cmp
fs
ins
pop
outs
pop
cmp
cmp
or
imul
or
pop
push
ins
pop
push
or
or
add
or
push
outs
pop
outs
or
cmp
cmp
or
or
cmp
fs
ins
pop
outs
pop
cmp
cmp
or
imul
or
pop
push
ins
pop
push
or
or
add
or
push
outs
pop
outs
or
cmp
cmp
or
or
cmp
fs
ins
pop
outs
pop
cmp
cmp
or
imul
or
pop
push
ins
pop
push
or
or
add
or
push
outs
pop
outs
or
cmp
cmp
or
or
cmp
fs
ins
pop
outs
pop
cmp
cmp
or
imul
or
pop
push
ins
pop
push
or
or
add
or
push
outs
pop
outs
or
cmp
cmp
or
or
cmp
fs
ins
pop
outs
pop
cmp
cmp
jnp
or
dec
enter
xor
adc
xor
test
and
jmp
push
aaa
dec
jp
js
jns
jl
test
lods
pop
push
cmp
dec
jg
fldl2e
shl
shl
shl
xor
mov
mov
xor
and
adc
inc
jno
aaa
add
add
or
fs
sub
int3
sti
cwde
push
ins
pop
or
aas
pop
imul
cmp
pop
cmp
or
outs
aam
or
sbb
mov
sbb
fnstenv
aad
xchg
cmp
out
jp
lds
cld
loop
clc
cmc
shr
lahf
repz
icebp
(bad)
nop
call
mov
imul
std
out
iret
pop
pop
fs
xor
xlat
loopne
loopne
in
push
bound
addr16
rcr
dec
(bad)
outs
jnp
fdivr
xchg
or
popf
inc
fnstcw
adc
cmp
pop
cmp
or
sbb
sbb
mov
mov
mov
(bad)
out
mov
loope
loope
in
loopne
mov
lods
popf
stos
xchg
in
fidivr
aam
fucomp
aam
xor
mov
(bad)
out
test
ret
mov
xchg
lods
popf
movs
xchg
mov
test
popf
(bad)
cdq
dec
stos
xchg
mov
shl
in
in
fsubrp
mov
fidiv
stc
retf
cld
retf
sti
leave
test
sahf
lods
xchg
movs
pushf
lods
lahf
movs
(bad)
hlt
shl
in
(bad)
in
mov
mov
(bad)
mov
loopne
out
jmp
out
lods
pushf
test
xchg
not
shl
lock
cmps
shl
mov
cdq
stos
cwde
clc
(bad)
repnz
jmp
shl
xchg
pushf
test
sar
test
call
pop
cmp
in
mov
cld
into
stos
mov
stc
popf
scas
pushf
inc
je
int
sub
call
ds
test
sub
fsubr
mov
cmp
shl
fucomi
stc
iret
pop
out
fistp
jge
pop
sub
dec
sti
retf
cld
into
stos
cwde
jl
lods
lahf
lods
mov
sub
sbb
mov
mov
push
or
jmp
cmp
mov
jg
cs
jl
sub
mov
jnp
dec
push
cli
enter
jg
cmc
inc
ins
fucomp
pop
cmp
cmp
call
retf
or
fwait
dec
lods
(bad)
jmp
call
sub
jle
lahf
jl
sub
jl
fnstsw
into
stos
mov
stc
sbb
dec
std
out
fsubr
jmp
pop
mov
sub
fwait
dec
sub
mov
pop
out
mov
and
lahf
cmc
xchg
lock
movs
mov
into
mov
ret
lock
test
add
cs
sub
mov
aam
leave
stos
xchg
jmp
mov
lea
cld
int3
std
sahf
cli
(bad)
pop
cmp
pop
ss
push
dec
jg
jp
sub
jge
sub
and
sub
(bad)
mov
into
stos
int3
scas
int
call
mov
in
stos
xchg
pop
fs
imul
ds
aaa
push
xor
pop
cmp
pop
je
inc
ja
jb
and
adc
cmp
add
pusha
add
cs
es
fbstp
inc
jmp
mov
mov
test
movs
mov
(bad)
out
out
mov
idiv
int
clc
pushf
scas
retf
mov
outs
push
bound
sub
jns
es
jl
ins
or
pop
outs
pop
dec
jae
and
or
sbb
out
loope
mov
dec
das
dec
lods
jmp
mov
(bad)
mov
pop
out
xor
cmp
mov
mov
(bad)
test
nop
je
jne
test
push
add
pop
xor
push
out
fbld
fs
mov
mov
mov
in
ret
mov
inc
push
cmps
xchg
and
adc
repnz
fsubrp
pop
or
jmp
pop
cmp
std
retf
sub
stos
cdq
popf
scas
retf
jle
mov
jmp
pop
mov
push
ins
sub
sub
dec
jl
jbe
jg
jge
mov
mov
shl
add
push
xor
mov
scas
mov
push
(bad)
push
mov
gs
arpl
popa
pop
xor
jbe
jno
es
lock
inc
clc
jmp
add
push
mov
xchg
pause
test
fsubr
in
mov
(bad)
daa
pop
cs
dec
stos
call
in
(bad)
out
mov
(bad)
mov
aad
aam
fsub
xchg
cmps
nop
jmp
ins
or
addr16
push
xor
xor
test
xchg
test
pop
imul
retf
cld
call
lahf
lods
call
imul
cdq
stos
fwait
cli
enter
and
inc
jo
and
es
std
cwde
mov
xchg
stos
call
sub
adc
jo
mov
jecxz
mov
mov
mov
in
jne
(bad)
fucomip
aad
xchg
cmps
dec
in
(bad)
jmp
sub
cld
retf
icebp
xchg
pop
cli
iret
stos
cwde
stos
xchg
mov
les
loop
shl
ins
pop
bound
and
or
push
pusha
push
popa
adc
adc
and
jo
jne
jbe
cmp
sub
adc
inc
jne
and
push
and
and
cmp
push
mov
(bad)
stos
jmp
cli
lea
pop
cmp
dec
outs
or
or
shr
scas
sahf
mov
pushf
(bad)
popf
sti
mov
int
retf
cmp
lods
cwde
mov
ins
jl
or
imul
jmp
call
dec
js
scas
retf
jns
inc
jb
jnp
dec
out
(bad)
(bad)
popf
mov
scas
std
pop
sub
jge
cli
in
iret
imul
sub
in
aam
pop
or
or
dec
jmp
fidivr
dec
push
stos
pop
push
xor
cmp
push
outs
jg
sub
pushf
sahf
std
fwait
lods
out
int
mov
mov
mov
call
retf
clc
cli
int
stos
mov
fidivr
xchg
mov
jg
jle
mov
ds
jmp
pop
ins
pop
push
outs
retf
mov
dec
fs
sub
cwde
test
jns
pop
ss
jg
sub
jbe
and
jb
pop
push
stos
out
(bad)
mov
push
xor
xor
gs
bound
push
xor
add
adc
cmp
push
addr16
imul
outs
pop
fs
xor
bound
and
aaa
ds
call
dec
jbe
push
ins
or
sub
pop
xor
sub
sub
sbb
bound
dec
retf
test
call
nop
mov
ins
push
bound
jb
and
lock
hlt
nop
out
(bad)
jecxz
mov
mov
xchg
mov
ret
clc
rcr
lahf
hlt
nop
movs
shl
push
arpl
jb
fdivr
iret
inc
test
retf
scas
call
in
mov
mov
sbb
sub
dec
imul
daa
inc
xor
sub
stos
cdq
pop
and
sub
sub
jg
push
ins
add
fidivr
cmp
jle
jge
frstpm(287
mov
rcr
pop
das
sbb
jns
jp
fnstcw
outs
cmp
jmp
xchg
repnz
int
xchg
cmp
retf
or
push
pop
sub
sub
enter
xor
or
or
or
pop
cmp
pop
sub
fs
adc
push
in
mov
mov
jmp
xor
add
inc
and
xchg
cmc
xchg
int
ins
or
cmp
xor
mov
test
retf
test
ins
pop
sbb
dec
jp
cmp
jle
es
fucomip
fidivr
dec
sub
jp
outs
push
aaa
(bad)
in
jecxz
mov
and
and
sub
shl
lds
push
jo
jbe
ja
es
popf
shl
(bad)
sbb
fidivr
xor
cmp
pop
or
xchg
hlt
xchg
leave
fucomp
mov
fsubrp
mov
arpl
ins
push
bound
test
mov
jo
and
call
ins
push
fs
ins
jo
mov
stc
pushf
(bad)
popf
sti
int3
scas
popf
stos
call
iret
cld
iret
stos
or
push
sub
sbb
dec
sub
loope
mov
hlt
ret
hlt
(bad)
mov
xchg
movs
mov
in
mov
iret
stos
leave
stos
int3
sti
cwde
adc
dec
jo
mov
fnstsw
mov
fdivr
mov
mov
dec
sub
outs
pop
aas
retf
fst
xchg
or
ins
or
adc
retf
cld
outs
mov
loop
mov
ss
data16
cdq
test
adc
aas
pop
adc
push
xor
cmps
xchg
cmps
dec
out
out
mov
in
xchg
pop
mov
jns
mov
call
mov
mov
and
mov
outs
pop
imul
jno
jno
mov
cs
test
ss
xor
sub
add
bound
out
nop
leave
lock
std
enter
out
test
std
mov
adc
inc
jo
es
out
sbb
inc
dec
sub
push
ds
pop
xchg
mov
xchg
jp
mov
mov
not
add
into
test
xchg
and
fmul
xchg
mov
addr16
leave
cmps
xchg
nop
sbb
or
movs
(bad)
icebp
ins
pop
ins
inc
dec
jns
sub
cmp
clc
enter
cmp
mov
mov
jl
mov
bound
mov
inc
ja
jg
jbe
leave
cmps
xchg
jmp
push
sbb
shl
mov
popf
scas
popf
movs
cmp
xor
mov
loop
add
xor
leave
std
sahf
push
xchg
mov
push
(bad)
dec
mov
inc
jne
xchg
cmc
rcr
xchg
outs
mov
loope
add
ja
movs
imul
push
and
int3
adc
push
xor
push
nop
pop
push
add
(bad)
mov
inc
pushf
cld
int3
mov
out
mov
data16
pushf
call
mov
xchg
retf
fidiv
sbb
lods
jns
sub
jmp
jmp
dec
adc
cld
int
xor
in
fcomp
loope
out
loopne
mov
pop
outs
pop
xchg
sbb
inc
mov
ret
repnz
jb
outs
mov
cli
or
(bad)
lock
popa
dec
cli
mov
dec
das
cld
add
add
shl
cmp
ret
loopne
sbb
cs
jmp
(bad)
sbb
jno
or
cmps
les
and
fucomi
fisttp
popa
add
mov
adc
sbb
mov
and
movs
outs
or
push
popa
add
push
arpl
js
sub
dec
jno
fucomp
(bad)
pop
jne
je
jae
out
dec
das
push
xchg
call
jnp
std
jb
js
jge
sub
sbb
sub
dec
jg
xchg
sbb
push
pop
movs
xchg
repnz
enter
xor
jbe
and
inc
and
and
jno
dec
stc
retf
scas
popf
stc
pushf
sbb
dec
jl
jns
sub
mov
sub
aas
xor
iret
stos
stos
ja
xchg
inc
leave
push
ins
pop
add
std
pop
(bad)
or
mov
adc
(bad)
pop
sar
in
retf
int3
pop
cmp
and
lods
js
stos
retf
sti
sbb
je
pop
fimul
(bad)
jle
shl
es
loopne
ss
pop
rol
cs
test
imul
scas
jl
in
inc
leave
add
(bad)
mov
in
xchg
or
xchg
icebp
mov
push
mov
xchg
aaa
xchg
xor
or
dec
sub
mov
std
jns
jne
pop
ror
add
shl
dec
into
dec
xor
inc
pop
adc
push
hlt
imul
jl
or
iret
lods
test
xor
and
js
push
nop
adc
ror
test
fs
iret
dec
and
mov
cmp
call
push
mov
push
and
mov
neg
aaa
xor
pop
js
mov
mov
or
inc
inc
test
(bad)
jp
loop
shl
movs
pop
cmp
cld
jae
xor
push
repnz
es
adc
outs
in
fsubr
(bad)
fdiv
add
mov
mov
xlat
inc
into
pop
sti
addr16
jbe
and
data16
mov
in
xchg
xor
loope
dec
jnp
in
dec
fidiv
mov
stc
outs
sub
je
les
in
test
xchg
es
lahf
addr16
ds
mov
lahf
push
rol
jb
gs
inc
mov
mov
popf
inc
sar
fnstcw
mov
movs
mov
push
xchg
add
dec
js
push
(bad)
add
je
pushf
aas
xchg
xor
mov
outs
in
sbb
jmp
xor
repnz
pop
lock
or
cmp
mov
cmp
scas
mov
pusha
or
inc
shl
out
cmps
jb
scas
mov
fwait
pop
nop
push
xchg
shl
push
aam
mov
into
dec
shl
mov
sti
jl
jno
cmp
xchg
mov
mov
es
adc
mov
mov
ret
ret
mov
ror
(bad)
jbe
psadbw
sub
push
stos
mov
call
cmps
mov
in
arpl
mov
in
mov
popa
add
jle
mov
add
inc
lds
ret
mov
nop
repnz
icebp
dec
mov
enter
clc
push
cli
movs
jg
cmps
arpl
add
ins
leave
(bad)
popf
push
(bad)
adc
ins
add
pushf
pop
fild
mov
mov
add
cmp
rol
test
ins
pop
lea
xchg
mov
ret
mov
jns
test
or
scas
outs
cmp
pop
xchg
push
ret
or
push
aam
mov
int3
dec
ror
xchg
mov
out
dec
sub
mov
out
cmps
push
les
jno
jno
and
add
dec
xchg
cmp
bnd
ins
sub
test
not
or
or
xor
pop
mov
mov
push
fld
lea
push
(bad)
jae
inc
iret
dec
sahf
add
inc
mov
cmps
outs
or
jbe
pop
sub
push
xchg
add
das
ret
jle
inc
shl
or
dec
out
rcl
std
jbe
and
mov
mov
pop
repnz
mov
bound
ja
jbe
cmp
pop
mov
mov
or
hlt
nop
mov
push
cli
pop
es
neg
cmp
or
push
les
out
popa
daa
adc
jmp
mov
imul
add
hlt
ins
xor
or
sbb
add
std
cmps
js
xchg
cmp
lahf
sbb
adc
mov
xor
push
std
xchg
(bad)
pop
cwde
(bad)
pop
imul
add
das
dec
popf
push
cli
push
clc
pop
std
mov
mov
sub
xchg
cmp
hlt
dec
cmp
and
inc
int
and
pop
xchg
das
loop
ja
adc
iret
dec
and
adc
ins
loope
xchg
data16
imul
repnz
rol
out
mov
cmp
cmp
movs
inc
mov
ret
or
xor
and
push
lock
push
mov
xchg
push
test
jno
jbe
pusha
sub
add
aaa
sub
adc
push
cmp
mov
popa
cs
arpl
test
push
xlat
add
jno
xchg
inc
int
cmc
pop
fimul
mov
in
ret
dec
aam
sub
in
and
mov
shl
jbe
cs
pop
cli
enter
mov
push
sub
push
mov
add
xor
rol
(bad)
pusha
add
ja
xor
sbb
pop
(bad)
ds
mov
shl
ror
pop
loope
out
iret
dec
mov
add
pop
cmp
inc
daa
repnz
lds
data16
push
mov
cmp
mov
movs
pusha
and
movs
push
xor
call
aaa
lahf
xor
pop
ins
and
jge
fs
jb
call
call
add
push
test
sbb
cmp
fwait
cmp
jp
pop
cmp
stc
dec
xlat
inc
int3
dec
gs
icebp
ins
popf
add
sub
sub
ins
sub
icebp
push
pusha
push
fidivr
ins
cmp
aas
jge
and
mov
sahf
std
pop
cld
pop
(bad)
dec
sti
xchg
test
mov
dec
fimul
xor
and
or
out
dec
into
push
test
into
cmps
dec
fdivr
(bad)
xchg
dec
jg
pop
(bad)
pop
call
leave
sti
int3
cld
retf
stc
popf
scas
retf
(bad)
call
test
pushf
clc
int
leave
lods
iret
lods
retf
lods
fwait
stos
pushf
scas
retf
test
(bad)
cld
int
enter
retf
scas
call
stos
leave
sti
int3
cld
retf
stc
popf
scas
retf
(bad)
call
test
pushf
clc
int
leave
lods
iret
lods
retf
lods
fwait
stos
pushf
scas
retf
test
(bad)
cld
int
enter
retf
scas
call
stos
leave
sti
int3
cld
retf
stc
popf
scas
retf
(bad)
call
test
pushf
clc
int
leave
lods
iret
lods
cli
int
pop
imul
rol
fdivr
inc
aas
inc
out
cdq
jp
xor
dec
stc
out
into
mov
iret
outs
popf
mov
adc
mov
mov
adc
test
je
lock
or
mov
sbb
adc
int
sbb
test
cwde
mov
ins
movs
xchg
push
xor
nop
pop
xor
gs
add
dec
push
aaa
pop
jno
sbb
push
aaa
jbe
test
fadd
sbb
dec
and
sar
lds
pop
add
(bad)
outs
jb
push
dec
nop
xor
movs
mov
push
mov
inc
pop
xor
out
addr16
ror
psubq
loopne
in
adc
ds
jl
mov
(bad)
push
adc
adc
lods
into
mov
(bad)
pop
ret
pop
(bad)
push
(bad)
pop
cmp
daa
mov
cmp
outs
dec
repnz
in
xchg
inc
jmp
pop
add
sub
mov
mov
dec
mov
outs
hlt
mov
xor
sub
add
xchg
push
add
popf
pop
in
in
fistp
pop
icebp
clc
and
fnstsw
push
xor
mov
in
in
fucomi
fdivr
pop
fnsave
ins
add
or
mov
push
mov
test
dec
add
inc
and
pop
outs
xchg
pop
inc
jg
pop
ins
jnp
popf
sub
push
xor
adc
push
xor
sbb
mov
sahf
mov
or
pop
fiadd
adc
xchg
lods
adc
sub
loop
cmp
xchg
lods
push
shl
xor
pop
mov
sub
retf
sub
xchg
repz
adc
cmps
xchg
neg
repnz
hlt
les
sub
push
xchg
sub
jnp
retf
mov
popf
and
fs
repnz
int
out
cmp
add
cmps
out
lahf
push
cmp
ja
imul
push
clc
dec
stos
pop
dec
jp
pop
call
xlat
or
or
push
in
iret
ror
aad
fimul
sbb
(bad)
in
and
mov
mov
xor
xor
adc
cmc
out
nop
jne
ja
shl
and
mov
sbb
sub
adc
mov
icebp
lds
out
mov
xor
fs
add
out
das
dec
jp
retf
cmp
cmp
not
arpl
ss
add
shl
or
lods
sbb
jbe
adc
mov
mov
push
ins
or
push
mov
pop
push
jecxz
out
mov
cmps
js
ds
jl
mov
and
and
mov
nop
leave
jg
jle
sahf
aaa
dec
add
(bad)
in
and
inc
inc
test
popa
mov
pop
add
neg
ins
or
mov
in
push
gs
add
inc
out
sbb
dec
enter
adc
xchg
mov
lock
mov
test
es
imul
mov
retf
enter
or
enter
fs
jge
shl
arpl
mov
or
jb
and
cmp
outs
sbb
sbb
jmp
inc
mov
cmp
ss
inc
daa
push
jae
lods
ja
aaa
(bad)
mov
add
mov
pop
je
xchg
mov
mov
push
cmp
ja
jbe
sbb
push
push
scas
or
sahf
scas
outs
or
jnp
or
sti
ret
imul
sbb
xor
fwait
stc
loopne
vcvtps2pd
cld
test
xchg
mov
jecxz
bound
loopne
jge
push
mov
in
xor
cmc
ja
hlt
mov
movs
jne
mov
or
test
lods
push
inc
mov
hlt
push
mov
sub
enter
jp
or
xchg
or
scas
jp
mov
test
xor
pop
lods
fsubr
fsubrp
mov
sbb
(bad)
in
push
fst
pop
loope
lods
xchg
icebp
scas
adc
mov
es
addr16
mov
test
test
into
stos
call
mov
jb
sub
xchg
clc
gs
repnz
mov
pop
and
mov
add
inc
and
ss
dec
adc
pop
jnp
les
outs
cmp
xchg
dec
or
add
test
ret
adc
adc
int
shl
das
and
iret
mov
push
ja
dec
cmp
mov
jmp
scas
sahf
push
bound
(bad)
neg
test
and
and
push
fs
lock
jmp
jnp
mov
xor
pushf
sti
call
and
pushf
xchg
paddq
push
das
mov
loope
scas
xchg
push
(bad)
cs
shr
xchg
cli
pop
ds
aam
jb
mov
dec
out
inc
inc
xchg
cmps
pusha
dec
push
or
repnz
mov
(bad)
mov
fs
inc
mov
inc
ja
mov
(bad)
mov
mov
lods
push
jp
cli
and
add
jmp
mov
(bad)
cli
lahf
xor
ds
xchg
mov
call
loopne
dec
sbb
dec
sbb
call
lods
jmp
inc
ins
xchg
ror
jmp
idiv
lods
leave
movs
(bad)
add
add
in
imul
(bad)
xlat
add
lock
or
xchg
int
(bad)
popa
xchg
lock
mov
imul
mov
sub
mov
cmp
lods
jmp
cmp
int3
push
inc
jae
mov
push
xor
dec
cmc
pop
sub
mov
jmp
sbb
and
aad
adc
in
xlat
sbb
xchg
push
bound
pop
shl
test
iret
(bad)
gs
add
aaa
(bad)
or
cmp
lahf
jno
add
lahf
lock
out
xchg
fist
pop
arpl
mov
push
hlt
ret
xor
mov
out
imul
push
rol
adc
imul
mov
lods
scas
lods
iret
out
fldenv
xor
idiv
shr
jle
stc
sahf
lods
aas
dec
ins
push
iret
ins
mov
add
stc
mov
rcl
out
fisubr
push
js
out
fidiv
push
lock
mov
movs
(bad)
(bad)
push
retf
scas
int
mov
xor
push
dec
aam
test
add
push
mov
dec
arpl
lock
repz
inc
mov
shl
push
cmp
mov
neg
push
ja
adc
pop
cmp
clc
(bad)
pop
or
cdq
cmc
fistp
or
lahf
cmps
inc
out
fsub
add
int3
cmp
jl
xchg
push
ss
cld
mov
jnp
sub
dec
std
icebp
shr
jns
(bad)
pop
ds
call
outs
pop
lds
mov
je
sbb
mov
and
pushf
lods
movs
cmps
xchg
inc
ficom
(bad)
mov
adc
jmp
xchg
scas
imul
ret
jp
mov
clc
rcr
in
dec
hlt
in
jae
test
ss
or
push
enter
sub
es
aad
push
or
sbb
popf
movs
out
arpl
call
test
fnstsw
cdq
mov
xchg
cmp
fidiv
adc
dec
sub
add
popf
lods
cmps
mov
xor
shl
jecxz
push
mov
jbe
dec
mov
loope
in
ss
pushf
call
fdivr
ror
xchg
popf
lods
ins
pop
push
stc
sahf
lods
out
sub
outs
scas
fild
dec
out
popa
push
mov
pop
daa
ins
loop
addr16
mov
mov
mov
shl
aad
mov
(bad)
repnz
xchg
cmps
xchg
dec
mov
or
sbb
xor
mov
loop
ret
test
push
bound
cdq
xor
cli
mov
test
cdq
mov
fst
push
aad
clc
pushf
scas
(bad)
sub
cmp
lock
cli
mov
mov
scas
lahf
cld
lahf
std
push
aaa
nop
pop
inc
lods
mov
in
add
int3
push
push
arpl
cmp
lahf
nop
hlt
xchg
(bad)
sbb
or
movs
mov
jge
shr
sub
xor
push
jo
mov
in
loope
clc
(bad)
mov
fsubrp
gs
cli
ret
dec
jo
in
lahf
mov
int
aad
add
iret
xlat
repz
sti
leave
dec
mov
(bad)
cld
int
dec
cdq
push
dec
fisttp
push
out
adc
das
dec
cmp
shl
jno
(bad)
lods
hlt
adc
fs
mov
fs
mov
or
(bad)
sub
xchg
jo
jle
jns
js
das
pushf
lock
mov
test
add
push
dec
mov
js
in
jecxz
mov
xchg
fistp
dec
shr
movs
push
popa
cs
xchg
mov
nop
test
mov
fwait
stos
fcmovb
dec
sbb
mov
movs
push
fcom
fisubr
xor
push
mov
stc
sahf
lods
retf
xor
add
es
jne
lea
push
xor
xor
dec
jle
push
fidivr
inc
cmp
pop
ds
retf
repnz
add
jb
inc
(bad)
pusha
test
movs
pop
shl
mov
cwde
stos
arpl
jne
mov
mov
cmps
fldcw
in
lds
pop
sti
(bad)
mov
fsubr
sar
jg
loope
cmp
sub
js
sub
sahf
cmp
jns
mov
popf
push
add
add
inc
nop
imul
mov
nop
sub
xchg
outs
or
or
xchg
repz
sub
or
arpl
enter
pop
shl
inc
xor
test
jecxz
pusha
add
fst
lock
push
xor
xchg
sbb
aam
mov
inc
and
in
jmp
push
cmp
retf
dec
jns
out
test
pop
inc
jb
js
mov
push
mov
arpl
std
int3
cmc
(bad)
add
xchg
in
xor
mov
inc
sub
sub
fadd
jno
loope
(bad)
fsubr
and
sub
retf
and
inc
mov
push
ins
setl
test
or
lods
mov
add
or
out
(bad)
jmp
xchg
retf
cli
sub
cs
jp
in
rol
in
mov
ret
cmps
inc
mov
mov
push
mov
(bad)
loope
sbb
sub
inc
inc
jl
jg
mov
jb
hlt
inc
stos
loop
mov
test
push
add
(bad)
iret
push
push
bound
(bad)
jecxz
push
xor
inc
jnp
xor
and
xor
imul
jo
std
xlat
out
fistp
cmps
(bad)
xchg
cmps
inc
mov
sub
retf
pop
scas
popf
mov
pop
out
pusha
pop
pop
popf
out
xor
outs
mov
or
jmp
ins
dec
cld
(bad)
pop
ins
or
cmp
leave
stc
frndint
cdq
aaa
inc
cmp
push
xor
dec
jge
jp
retf
xchg
daa
ja
jge
cs
dec
sub
jbe
pusha
pop
cmp
and
mov
popf
cmps
and
xor
xor
scas
repnz
jge
add
ret
scas
loopne
cmp
ss
push
mov
shr
fsubrp
arpl
xchg
cmc
xchg
xor
add
loope
cmp
ds
jmp
jp
push
leave
scas
pushf
sti
xor
in
xchg
stos
cdq
dec
xor
lods
dec
sbb
adc
cmps
fdiv
xchg
movs
xchg
add
outs
cmp
out
fbstp
push
outs
sbb
push
addr16
idiv
fisubr
cwde
cli
retf
add
add
out
addr16
jo
cmp
mov
xchg
mov
ret
hlt
(bad)
lock
test
retf
mul
sbb
push
push
jge
add
(bad)
out
ffreep
ficom
push
ss
xchg
sti
call
and
not
mov
push
jne
ja
inc
or
pop
add
or
addr16
fild
enter
xchg
mov
std
imul
dec
bound
or
dec
dec
test
jbe
shl
cmp
cmp
sub
shr
(bad)
out
test
push
fisub
adc
sub
div
mov
pop
jns
imul
js
arpl
push
data16
add
or
sub
test
pop
ins
push
cmp
xchg
fwait
jmp
repnz
sbb
cdq
mov
clc
adc
inc
mov
fisttp
fs
in
jp
cs
ret
fidiv
or
push
sub
cmp
aaa
ss
dec
sub
mov
ret
(bad)
cmc
loop
aad
xlat
lods
pushf
movs
pop
xor
icebp
stc
and
add
not
hlt
xor
pop
adc
xchg
fs
pop
daa
inc
sbb
addr16
add
not
jns
(bad)
(bad)
outs
retf
out
adc
xchg
mov
adc
pop
adc
inc
es
mov
in
sbb
ins
cmp
xchg
movs
fsubr
dec
jns
out
(bad)
push
sub
hlt
dec
jmp
ins
ja
sbb
loop
js
mov
jbe
and
inc
mov
lds
or
les
cdq
push
dec
mov
ror
loop
jmp
add
enter
pushf
inc
sub
(bad)
mov
loop
dec
(bad)
hlt
xchg
(bad)
mov
cdq
outs
seta
imul
push
outs
fucomp
mov
imul
cmps
popf
jbe
scas
cwde
ss
cs
jmp
lds
ror
dec
lock
dec
push
aam
mov
jle
repnz
xchg
push
test
outs
mov
dec
les
sbb
loopne
loope
add
pop
in
repz
hlt
shl
neg
and
in
fucomp
fucompp
sbb
mov
push
xlat
dec
fnstsw
lock
arpl
pop
cmps
cld
into
movs
or
pop
jne
test
ret
fucomip
mov
std
loop
sub
cmps
pop
xchg
jl
imul
xchg
sub
shl
pop
stos
mov
mov
xchg
inc
outs
fs
or
in
mov
pop
xchg
cmp
cld
mov
fnstenv
inc
jno
cmps
ret
cmp
sbb
xor
xor
pop
ret
lahf
stos
int
push
or
mov
loope
call
call
jne
in
fbstp
mov
mov
mov
dec
test
dec
xor
aad
stc
add
test
add
mov
or
or
pop
outs
sub
add
(bad)
pop
test
cdq
pop
das
dec
jle
mov
jecxz
pusha
mov
inc
and
mov
adc
fisubr
cmp
jne
stos
lea
sub
mov
adc
fdivr
pop
aas
pop
xor
sub
sub
xor
dec
cmp
xor
xchg
sub
arpl
push
fsub
repnz
xchg
xor
arpl
pop
push
pop
xchg
pop
das
test
out
sub
test
icebp
mov
mov
fnstcw
cmp
xor
fdivp
enter
arpl
cmp
xor
test
mov
inc
popa
popf
dec
cli
retf
retf
cmp
xor
clc
jae
adc
mov
mov
aaa
xchg
xor
mov
adc
dec
xor
icebp
mov
dec
inc
pop
sahf
test
adc
xchg
icebp
pusha
push
iret
adc
rcr
inc
lea
inc
adc
lods
inc
loope
outs
imul
int3
popa
or
add
lea
fidivr
int3
test
into
adc
jae
dec
push
mov
jae
cs
pop
xor
and
and
call
cli
int3
cmp
in
aaa
outs
and
jne
inc
ret
into
gs
xchg
mov
mov
sti
int3
cmps
(bad)
sub
out
(bad)
in
cmps
leave
cld
push
outs
pop
repz
xchg
mov
pop
icebp
pushf
movs
xchg
and
push
cld
ffreep
clc
lahf
(bad)
fwait
(bad)
neg
xchg
neg
or
adc
sar
ss
adc
pop
lahf
loope
pop
aas
or
call
aad
mov
jnp
lock
int3
cli
fwait
dec
mov
in
mov
mov
adc
pop
addr16
bound
fsub
inc
cmp
xchg
aad
imul
mov
cmp
inc
adc
std
int
in
cmp
ins
adc
sbb
mov
sub
arpl
loope
pop
xor
lock
fisub
das
dec
jg
mov
pushf
dec
ins
pop
mov
sub
adc
xchg
movs
in
push
add
add
pushf
sbb
movs
loopne
out
xchg
cmps
into
jmp
mov
dec
ds
loop
mov
mov
outs
cmp
idiv
and
hlt
int3
std
jmp
ins
fsub
fs
jo
mov
mov
loope
test
pop
ds
or
icebp
into
test
mov
xor
test
or
mov
or
pminub
pop
cmp
push
fsubr
stc
loopne
loope
pop
lock
xor
loope
or
(bad)
(bad)
pop
inc
loopne
sar
in
sub
aaa
sahf
mov
lods
dec
xor
mov
loop
jecxz
addr16
jg
out
(bad)
fidivr
cdq
cli
pushf
loop
std
retf
or
adc
adc
xchg
xchg
mov
stc
jnp
mov
into
(bad)
xor
lahf
sbb
enter
fcom
imul
or
xchg
scas
(bad)
pop
sub
test
sub
jmp
idiv
add
test
repnz
xor
push
fucomip
fisub
dec
stos
sbb
sub
aas
or
stos
in
sbb
jno
test
cmc
dec
gs
loop
fwait
shl
pop
imul
inc
and
es
div
pop
imul
mov
retf
cwde
ss
dec
sbb
dec
(bad)
daa
jnp
mov
repnz
and
and
adc
and
push
jo
out
jle
pop
cmp
sbb
cmc
jmp
or
dec
xlat
frstor
ss
(bad)
mov
pop
fs
pop
jo
jns
or
xor
xor
mov
jmp
lods
push
sub
add
popf
scas
mov
add
dec
aad
xchg
adc
(bad)
outs
or
jno
pop
ins
inc
lock
hlt
(bad)
test
inc
jno
je
push
stos
rol
mov
cmp
ins
mov
sbb
test
ins
cmps
xbegin
nop
repz
stos
jl
mov
cmc
push
es
cmp
add
mov
push
cmp
pop
out
add
gs
cmp
fcmovb
repz
xor
jmp
daa
outs
or
xlat
and
addr16
clc
pop
and
xchg
sub
mov
sub
sub
jno
dec
dec
jo
outs
and
or
or
in
(bad)
movs
shl
cmps
cmp
jmp
cld
mov
push
popf
movs
popf
cmps
cwde
sbb
sbb
iret
mov
int
xchg
mov
(bad)
popa
push
mov
cmp
and
push
aaa
iret
jmp
mov
add
push
bound
movs
sar
cwde
dec
jge
mov
cmovo
add
and
xor
push
xchg
mov
dec
sub
adc
js
test
push
ss
not
fucomip
xor
dec
pop
push
lods
dec
mov
xchg
shr
int
les
arpl
mov
ins
sahf
xor
push
leave
sub
jae
ss
xchg
cmps
lds
dec
cmp
xchg
test
shl
test
push
sub
lea
sbb
sub
jne
mov
xchg
fcomip
pop
jo
pop
cmp
sub
sub
mov
out
jmp
or
push
bound
dec
pop
xor
or
lea
mov
icebp
xchg
test
sbb
add
mov
inc
push
test
pusha
fwait
and
inc
daa
inc
icebp
xchg
mov
mov
mov
mov
and
clc
push
repz
dec
xor
stos
int3
push
pusha
add
mov
test
loope
ret
xchg
dec
or
mov
mov
jns
mov
or
cwde
adc
push
mov
retf
inc
jne
mov
xor
add
cdq
sti
jo
loopne
jo
add
cli
pop
outs
or
cwde
sub
sub
mov
or
mov
inc
out
call
shl
(bad)
in
add
mov
or
jmp
ins
pop
stos
fdiv
jle
or
leave
scas
outs
out
fnsave
mov
jo
shr
fidivr
cmp
and
and
and
and
int
xor
add
pop
and
and
and
and
and
and
int
xor
dec
and
and
daa
repz
and
and
cmp
retf
and
or
or
and
push
and
and
and
and
and
and
and
and
mov
and
and
and
and
stos
and
and
and
and
and
sub
sub
sub
sub
and
and
and
and
test
jmp
and
and
test
shl
inc
sub
and
and
test
cdq
and
icebp
and
and
and
and
and
and
and
sub
and
and
sub
leave
and
sub
sub
jmp
and
and
and
leave
and
dec
sub
and
push
sub
and
pop
sub
and
and
and
and
lods
sub
and
and
inc
sub
sub
sub
jno
lahf
sub
and
and
and
and
and
and
and
and
clc
sub
sub
and
and
sub
and
and
sub
and
and
sub
and
add
sbb
sbb
movntps
and
sub
and
and
push
xchg
and
adc
cdq
and
jb
push
and
and
and
and
and
shl
and
shl
sub
shl
sub
and
and
sub
and
and
mov
adc
call
and
and
and
and
and
and
sub
and
and
sub
and
and
sub
and
and
sub
cs
xor
or
adc
and
cmp
and
add
and
or
and
shl
shl
dec
sub
int
xor
fldenv
mov
and
and
and
and
and
and
sub
int
xor
adc
int
test
sbb
int
mov
and
and
and
and
and
and
and
and
and
and
pusha
and
and
arpl
xor
or
arpl
cmp
sbb
imul
inc
and
and
inc
and
and
and
mov
and
and
mov
and
and
and
and
and
and
and
and
and
and
and
jecxz
repz
and
shl
and
and
or
jae
and
xor
or
add
xor
or
add
or
jae
pusha
and
and
pusha
and
and
inc
and
and
inc
and
and
mov
and
and
and
and
loopne
or
jae
shl
and
and
xor
or
and
or
jae
inc
and
and
and
and
add
and
pusha
and
and
inc
and
and
mov
and
and
and
and
shl
jae
and
add
pusha
and
or
scas
and
and
and
and
and
and
and
and
and
and
mov
and
and
and
and
and
int3
and
call
and
and
and
and
and
and
and
and
and
and
and
jmp
and
and
mul
jle
and
inc
and
and
and
and
and
and
and
and
and
and
and
and
and
cs
and
and
dec
and
outs
and
popa
and
and
and
and
test
and
and
gs
and
and
and
cli
and
and
and
retf
and
and
and
and
and
and
arpl
and
and
inc
and
and
and
pop
and
and
and
lahf
and
and
and
shl
and
and
and
and
and
and
and
and
and
ret
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
and
and
sub
sub
sub
sub
and
xor
sub
add
and
xor
cmp
add
and
and
cmp
add
or
and
xchg
and
and
and
and
sbb
dec
inc
push
dec
inc
push
and
inc
dec
push
dec
dec
inc
and
inc
push
dec
push
dec
inc
push
push
jbe
push
push
inc
dec
bound
dec
inc
and
popa
push
push
dec
dec
inc
inc
push
dec
dec
dec
and
and
arpl
push
push
push
inc
push
and
jo
dec
dec
inc
inc
push
and
ja
inc
jae
push
push
dec
inc
inc
push
and
inc
inc
inc
jae
inc
inc
outs
inc
dec
inc
inc
push
jo
dec
push
dec
inc
inc
push
inc
adc
push
inc
push
push
dec
inc
inc
and
push
dec
and
dec
jo
and
outs
arpl
jae
imul
je
outs
outs
and
popa
jb
jne
jg
outs
outs
jb
popa
je
outs
outs
and
inc
push
dec
push
dec
inc
push
push
jbe
push
push
inc
dec
bound
dec
inc
push
popa
push
push
dec
dec
inc
inc
push
dec
dec
dec
jae
push
push
dec
inc
inc
push
and
push
dec
dec
inc
inc
push
dec
dec
dec
bound
inc
and
inc
push
dec
push
and
inc
push
dec
push
dec
inc
push
push
jbe
push
push
inc
dec
bound
dec
inc
push
fs
push
dec
inc
inc
push
and
dec
push
push
push
inc
push
and
push
push
inc
dec
and
dec
inc
inc
push
and
inc
inc
push
dec
push
and
push
jg
dec
dec
push
push
push
inc
push
and
arpl
push
push
push
inc
push
outs
inc
dec
inc
inc
push
jo
dec
push
dec
inc
inc
push
and
push
jg
push
push
dec
dec
inc
inc
push
dec
dec
dec
and
popa
push
push
outs
inc
dec
inc
inc
push
jo
dec
push
dec
inc
inc
push
and
inc
push
and
push
jg
push
inc
push
and
jne
inc
push
outs
inc
dec
inc
inc
push
jo
dec
push
dec
inc
inc
push
and
push
jg
inc
inc
jae
push
push
dec
inc
inc
push
and
ins
pop
ja
inc
jae
push
push
dec
inc
inc
push
outs
inc
dec
inc
inc
push
jo
dec
push
dec
inc
inc
push
and
push
dec
dec
inc
inc
push
dec
dec
dec
and
inc
jae
push
push
dec
inc
inc
push
and
push
inc
dec
push
and
addr16
push
push
dec
inc
inc
and
inc
and
push
je
push
inc
and
push
push
dec
dec
inc
and
inc
inc
push
inc
jg
imul
inc
jg
and
dec
push
push
inc
dec
inc
inc
and
push
dec
push
inc
jg
imul
inc
jg
and
push
jg
inc
push
imul
inc
and
je
push
inc
inc
inc
jae
inc
push
dec
inc
jbe
dec
push
inc
and
push
imul
inc
and
push
inc
dec
and
jo
push
dec
and
dec
dec
dec
dec
inc
and
dec
inc
jo
push
push
jo
and
dec
inc
jo
push
push
ins
outs
arpl
ins
inc
dec
dec
and
dec
inc
inc
and
push
pop
push
push
and
inc
and
pop
push
and
push
push
inc
jb
push
dec
inc
push
and
push
pop
and
pop
and
inc
inc
push
and
jae
dec
inc
inc
dec
pop
dec
inc
and
ja
push
inc
jae
inc
push
dec
and
dec
inc
inc
dec
inc
push
and
ja
and
inc
inc
push
inc
jo
dec
inc
inc
push
push
and
push
dec
dec
inc
inc
push
dec
dec
dec
outs
inc
dec
inc
and
dec
dec
inc
dec
inc
ins
dec
dec
inc
and
dec
inc
inc
push
push
popa
push
push
push
dec
inc
push
push
inc
push
and
inc
inc
inc
popa
push
push
push
dec
inc
push
push
inc
push
and
dec
inc
push
dec
push
push
inc
push
and
inc
inc
push
dec
dec
dec
dec
inc
inc
push
and
push
dec
push
dec
dec
dec
inc
dec
push
and
push
push
inc
dec
push
fs
push
inc
inc
push
dec
push
pop
and
inc
push
push
push
push
imul
dec
inc
inc
push
push
imul
push
dec
dec
dec
and
push
je
push
inc
inc
inc
arpl
push
inc
pop
push
and
inc
inc
inc
and
dec
push
inc
pop
push
and
push
push
adc
inc
push
je
push
inc
inc
inc
arpl
push
inc
pop
push
and
push
je
push
inc
inc
inc
arpl
push
inc
pop
push
and
push
push
adc
inc
push
je
push
inc
inc
inc
arpl
push
inc
pop
push
and
inc
inc
jo
dec
inc
inc
push
push
ins
inc
dec
dec
push
pop
and
dec
inc
inc
push
push
and
push
inc
popa
inc
inc
push
inc
push
push
and
inc
inc
inc
push
and
inc
inc
inc
push
jae
pop
inc
and
push
inc
push
jb
inc
inc
and
dec
push
inc
jo
dec
inc
inc
push
push
ins
inc
dec
dec
push
pop
and
push
inc
push
ja
dec
push
push
inc
dec
and
jne
dec
inc
push
jbe
inc
push
outs
inc
jae
inc
push
dec
dec
dec
and
push
push
push
inc
dec
jo
dec
push
inc
inc
push
gs
and
push
dec
inc
inc
push
push
and
inc
inc
push
inc
push
push
and
dec
pop
inc
and
outs
inc
push
jo
dec
push
inc
inc
push
and
dec
outs
dec
inc
jo
dec
push
inc
inc
push
and
push
push
push
inc
dec
popa
dec
dec
dec
inc
gs
and
dec
inc
dec
inc
and
inc
push
inc
push
push
and
inc
push
dec
and
inc
and
dec
push
inc
inc
push
and
push
push
dec
inc
je
push
inc
inc
inc
and
push
push
pop
and
inc
and
dec
push
ins
push
push
and
push
and
dec
and
push
dec
and
inc
and
inc
and
dec
push
inc
push
dec
inc
dec
inc
and
dec
push
inc
je
push
inc
and
dec
inc
inc
push
push
push
inc
and
inc
inc
inc
push
inc
and
dec
inc
inc
push
push
imul
inc
imul
jb
push
inc
push
push
inc
inc
adc
fs
push
dec
push
dec
push
and
dec
inc
and
push
inc
and
push
inc
push
push
inc
inc
adc
jae
inc
imul
push
inc
outs
push
push
push
push
push
and
inc
gs
push
dec
push
and
push
push
inc
dec
push
arpl
push
dec
dec
inc
dec
push
ins
dec
inc
inc
dec
and
dec
push
dec
push
bound
push
push
inc
inc
dec
inc
popa
push
push
push
dec
inc
push
push
inc
and
dec
push
dec
push
bound
push
push
inc
inc
dec
inc
jae
inc
push
inc
and
push
push
inc
dec
push
arpl
inc
fs
dec
push
arpl
push
dec
dec
inc
push
and
dec
inc
push
inc
push
inc
inc
arpl
inc
popa
push
push
push
dec
inc
push
push
inc
and
push
push
inc
dec
push
fs
inc
inc
dec
dec
push
push
dec
inc
push
and
push
inc
inc
inc
push
push
dec
popa
push
push
push
dec
inc
push
push
inc
and
inc
push
dec
push
dec
inc
push
push
jbe
push
push
inc
dec
bound
dec
inc
push
arpl
push
dec
dec
inc
push
jae
push
push
dec
inc
inc
push
and
inc
dec
inc
inc
push
inc
ins
dec
inc
push
dec
inc
popa
push
push
push
dec
inc
push
push
inc
and
inc
inc
ins
dec
inc
push
dec
inc
outs
inc
dec
inc
popa
push
push
push
dec
inc
push
push
inc
and
push
push
inc
dec
push
arpl
push
dec
dec
inc
dec
push
ins
dec
inc
inc
dec
push
fs
push
dec
inc
dec
and
dec
push
imul
dec
push
inc
popa
push
push
push
dec
inc
push
push
inc
and
push
push
inc
dec
push
jb
dec
push
dec
dec
inc
push
arpl
push
dec
dec
inc
push
jae
push
push
dec
inc
inc
push
and
dec
push
dec
dec
inc
push
push
push
and
push
outs
inc
dec
inc
inc
push
jbe
dec
push
inc
and
dec
push
dec
dec
inc
je
push
inc
push
inc
and
push
je
push
inc
push
dec
dec
push
inc
and
push
dec
push
inc
push
dec
push
and
inc
inc
push
inc
imul
inc
and
addr16
dec
push
push
arpl
dec
inc
inc
push
dec
dec
dec
popa
push
push
push
dec
inc
push
push
inc
and
push
push
inc
dec
push
jb
dec
push
dec
dec
inc
push
imul
jae
push
push
dec
inc
inc
push
and
dec
jbe
push
dec
inc
dec
inc
popa
push
push
push
dec
inc
push
push
inc
and
inc
inc
inc
jae
inc
push
dec
inc
popa
push
push
push
dec
inc
push
push
inc
and
dec
push
dec
dec
inc
push
addr16
dec
inc
push
inc
push
inc
inc
popa
push
push
push
dec
inc
push
push
inc
and
dec
push
inc
push
push
dec
dec
dec
push
and
push
push
inc
dec
push
jb
push
dec
push
push
inc
inc
push
and
push
dec
push
push
inc
inc
ins
inc
dec
inc
inc
inc
push
and
dec
inc
inc
push
push
and
dec
inc
dec
dec
and
dec
inc
inc
push
push
jae
inc
push
push
imul
inc
push
dec
push
dec
inc
push
push
ja
dec
adc
and
inc
dec
push
push
push
pop
imul
gs
inc
inc
push
push
dec
dec
dec
and
push
push
inc
dec
push
je
push
inc
inc
inc
dec
dec
inc
and
inc
inc
inc
and
push
push
inc
dec
push
jb
inc
dec
inc
inc
push
dec
dec
dec
and
push
inc
dec
inc
dec
pop
and
push
gs
inc
inc
push
push
dec
dec
inc
popa
push
push
inc
dec
inc
dec
pop
and
push
ins
inc
dec
dec
inc
inc
push
push
jb
push
dec
push
push
inc
inc
outs
inc
dec
inc
push
and
push
dec
dec
inc
and
push
dec
inc
inc
inc
and
push
dec
dec
inc
push
and
dec
push
inc
push
inc
ins
inc
push
dec
dec
inc
and
dec
dec
push
and
dec
push
inc
inc
inc
push
and
inc
inc
push
and
inc
push
inc
push
dec
push
push
and
dec
push
inc
push
inc
jae
push
dec
dec
inc
and
push
jg
push
inc
push
push
imul
push
jg
dec
dec
inc
outs
inc
dec
inc
and
dec
inc
inc
push
push
ja
dec
inc
dec
push
jae
pop
dec
inc
and
push
jg
dec
dec
inc
dec
push
jae
pop
dec
inc
and
push
push
inc
dec
push
ja
dec
inc
dec
push
push
push
dec
push
dec
push
and
push
jg
pop
inc
inc
push
push
inc
inc
dec
inc
jo
push
dec
and
dec
inc
inc
push
and
push
jg
push
inc
push
dec
inc
dec
push
push
and
inc
push
push
and
dec
dec
and
push
push
inc
dec
push
jae
inc
push
push
dec
push
pop
push
jo
dec
dec
inc
dec
push
inc
dec
and
dec
inc
dec
push
push
imul
and
push
arpl
push
inc
dec
push
and
dec
inc
dec
push
push
jo
dec
dec
inc
dec
push
inc
dec
and
dec
inc
dec
push
push
bound
dec
push
imul
imul
inc
and
push
jg
push
inc
jae
inc
dec
dec
gs
inc
inc
push
push
inc
and
push
gs
push
push
pop
popa
push
push
inc
dec
inc
dec
pop
and
push
jg
dec
inc
inc
push
dec
dec
dec
and
push
jg
inc
push
inc
and
dec
dec
inc
inc
push
fs
push
inc
and
inc
popa
push
push
and
push
dec
push
dec
dec
dec
inc
dec
push
and
inc
inc
dec
inc
dec
dec
dec
inc
inc
push
and
push
dec
dec
inc
inc
push
jo
push
dec
and
push
push
inc
dec
push
imul
and
dec
push
push
push
and
inc
inc
popa
dec
dec
bound
inc
push
and
dec
push
inc
popa
dec
dec
bound
inc
push
and
push
gs
push
dec
push
dec
dec
dec
inc
dec
push
jbe
push
dec
inc
inc
dec
inc
and
pop
push
and
push
dec
and
dec
inc
dec
dec
inc
and
push
jg
inc
dec
inc
and
dec
push
inc
popa
dec
dec
je
pop
push
and
dec
push
dec
push
gs
dec
push
and
inc
push
inc
and
inc
dec
push
push
push
pop
and
inc
dec
ins
inc
inc
dec
dec
dec
inc
and
inc
dec
jae
inc
imul
addr16
push
jbe
dec
push
inc
and
push
jbe
dec
push
inc
and
dec
inc
popa
push
push
push
dec
inc
push
push
inc
push
and
push
popa
push
push
push
dec
inc
push
push
inc
push
and
push
jo
dec
dec
inc
inc
push
gs
push
dec
push
and
inc
inc
push
jo
dec
dec
inc
inc
push
gs
push
dec
push
and
dec
push
inc
dec
dec
push
and
push
outs
inc
dec
inc
inc
push
and
push
inc
push
inc
inc
push
dec
dec
dec
and
inc
bound
jb
push
push
dec
push
and
inc
bound
jae
pop
dec
inc
and
inc
bound
and
dec
push
dec
dec
inc
gs
push
dec
push
dec
dec
dec
inc
dec
push
and
push
jb
dec
push
dec
dec
inc
fs
push
inc
inc
push
dec
push
pop
and
push
jg
pop
push
push
inc
dec
fs
push
inc
inc
push
dec
push
pop
and
inc
inc
inc
jae
inc
push
push
and
inc
push
push
dec
inc
dec
push
jae
inc
push
inc
and
push
popa
push
inc
push
push
dec
inc
dec
push
jae
inc
push
inc
and
push
jg
inc
push
push
inc
inc
inc
and
push
push
inc
dec
push
je
pop
push
and
inc
dec
inc
dec
dec
inc
and
push
jg
inc
inc
inc
push
dec
push
and
push
bound
inc
push
and
push
inc
pop
and
push
dec
pop
inc
and
push
inc
pop
and
push
jo
dec
inc
inc
push
push
bound
inc
and
popa
je
push
inc
inc
inc
popa
push
push
push
dec
inc
push
push
inc
and
dec
inc
inc
push
push
ins
dec
inc
push
dec
inc
and
push
push
inc
dec
push
arpl
dec
inc
inc
push
dec
dec
dec
push
and
dec
push
dec
inc
push
inc
push
dec
push
and
push
arpl
push
inc
dec
push
jo
dec
inc
inc
push
push
and
dec
inc
inc
push
push
ins
dec
inc
push
dec
inc
arpl
dec
inc
inc
push
dec
dec
dec
and
push
jg
dec
inc
push
dec
inc
push
and
inc
inc
outs
dec
dec
pop
arpl
dec
inc
inc
push
dec
dec
dec
bound
inc
and
push
gs
push
dec
inc
push
inc
push
dec
push
and
push
jg
push
push
push
inc
dec
push
and
push
jg
dec
inc
push
dec
inc
outs
inc
dec
inc
and
dec
push
inc
push
and
dec
and
push
inc
outs
inc
pop
push
and
dec
push
push
dec
push
inc
inc
dec
inc
and
push
dec
push
inc
and
push
jo
dec
inc
inc
push
push
inc
push
bound
inc
dec
inc
and
push
dec
inc
push
and
push
push
dec
inc
dec
and
pop
inc
outs
inc
and
outs
push
dec
dec
outs
push
gs
push
push
pop
and
push
jo
push
and
push
dec
and
push
arpl
push
inc
push
push
inc
push
and
dec
push
adc
and
push
adc
and
push
jg
dec
pop
inc
and
dec
push
adc
and
push
inc
and
inc
inc
inc
push
and
dec
inc
dec
arpl
pop
and
jg
pop
push
dec
dec
inc
dec
push
and
push
push
inc
inc
inc
bound
and
dec
dec
inc
jb
push
push
dec
push
and
dec
push
and
push
push
inc
dec
push
jae
inc
push
push
dec
push
pop
and
push
push
push
inc
push
push
jne
dec
inc
dec
inc
inc
inc
inc
arpl
inc
jae
inc
push
push
dec
push
pop
popa
push
push
push
dec
inc
push
push
inc
and
imul
push
push
push
dec
inc
push
push
inc
and
push
dec
inc
dec
adc
push
inc
dec
dec
and
inc
dec
dec
push
inc
dec
dec
and
push
push
inc
push
ins
inc
pop
dec
push
push
popa
push
push
push
dec
inc
push
push
inc
and
dec
push
push
imul
and
push
push
dec
inc
dec
popa
push
popa
push
push
push
dec
inc
push
push
inc
and
dec
inc
dec
inc
inc
inc
inc
je
push
inc
and
push
jo
popa
push
popa
dec
jbe
push
push
inc
push
dec
dec
pop
push
push
inc
push
dec
push
push
inc
inc
push
and
dec
push
dec
dec
inc
push
dec
dec
dec
jb
dec
inc
pop
inc
push
dec
dec
dec
push
popa
push
push
push
dec
inc
push
push
inc
and
dec
push
dec
dec
inc
arpl
push
inc
push
dec
inc
dec
dec
dec
push
pop
popa
push
push
push
dec
inc
push
push
inc
and
push
outs
inc
push
inc
inc
imul
jp
push
jb
push
dec
and
push
outs
inc
push
inc
inc
imul
jp
push
jb
push
dec
push
inc
pop
inc
and
and
stos
stos
sbb
pop
and
dec
and
and
inc
and
push
and
dec
and
sbb
and
and
and
and
and
dec
and
dec
and
and
inc
and
and
and
and
and
and
and
je
inc
and
dec
and
and
inc
and
push
and
dec
and
sbb
and
and
and
and
and
dec
and
and
sbb
and
and
sbb
mov
and
inc
and
inc
and
inc
and
push
and
dec
and
push
and
push
and
inc
and
and
dec
and
mov
and
dec
and
and
push
and
and
and
and
and
mov
and
and
and
dec
and
and
and
dec
and
and
and
and
and
jb
inc
and
dec
and
push
and
inc
and
and
dec
and
dec
and
dec
and
and
and
and
and
and
and
push
and
push
and
and
and
and
or
and
and
and
sbb
adc
pop
and
and
adc
push
and
and
and
and
and
and
and
and
mov
and
push
and
push
and
and
and
and
and
popa
and
push
and
dec
and
push
and
jne
jae
and
imul
sbb
mov
and
push
and
dec
and
push
and
and
and
mov
and
inc
and
push
and
and
push
and
dec
and
imul
dec
and
and
and
and
je
push
and
inc
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
pop
add
mov
add
and
jb
outs
addr16
add
add
add
and
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
push
mov
add
cli
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
pop
add
add
add
add
fadd
rol
add
pop
add
add
add
add
or
out
add
or
or
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
push
add
add
push
add
add
push
add
push
add
add
add
push
add
add
popa
add
add
add
add
add
add
add
add
add
add
and
mov
mov
add
add
add
add
jecxz
mov
cs
mov
jle
pop
add
add
add
push
mov
gs
pop
add
add
push
add
add
add
add
add
pop
add
add
or
or
das
or
or
arpl
add
or
or
or
or
push
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
xor
add
in
cmp
add
cmps
add
add
mov
data16
add
add
adc
fild
push
adc
or
outs
add
add
add
xchg
add
add
add
add
xchg
xchg
push
add
add
add
add
add
add
jg
add
add
add
add
test
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
or
dec
and
add
add
add
pusha
and
add
add
add
add
add
add
add
add
add
xchg
sbb
or
verr
add
add
add
add
add
add
add
(bad)
je
add
add
add
adc
ja
add
add
xchg
add
dec
add
add
add
add
xchg
push
add
adc
lea
add
add
add
add
xchg
add
push
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
sbb
add
add
add
xchg
or
jb
sbb
in
add
add
xchg
or
add
sbb
in
daa
add
add
xchg
or
jl
sbb
add
add
addr16
outs
add
addr16
outs
add
jo
add
add
addr16
outs
add
addr16
outs
add
addr16
outs
add
addr16
outs
add
mov
add
add
addr16
outs
add
pusha
pop
add
add
arpl
add
add
addr16
outs
add
fwait
pop
add
add
addr16
outs
add
arpl
add
add
mov
add
add
xor
add
mov
add
mov
xchg
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
inc
add
arpl
xchg
push
add
je
lods
add
jle
mov
add
xchg
add
cwde
add
mov
add
add
add
add
add
add
add
add
push
icebp
add
add
push
test
inc
sbb
xor
add
sbb
inc
push
mov
push
add
or
cmp
imul
xchg
adc
sbb
mov
sbb
cmp
xchg
adc
cmp
mov
pop
add
add
push
xor
sbb
rol
mov
inc
add
add
push
add
add
push
xchg
add
add
push
sbb
adc
pop
pop
add
add
pop
sub
add
xor
add
pop
xor
sbb
dec
pop
push
add
xchg
push
add
add
cmp
push
add
inc
add
xchg
pop
dec
add
add
add
add
add
add
add
pop
pop
add
add
pop
xor
adc
out
icebp
add
add
pop
test
arpl
or
and
icebp
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
pushf
add
add
add
rol
add
add
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
cmp
outs
fs
gs
bound
push
js
add
outs
addr16
ins
add
ins
imul
jb
xor
inc
outs
jb
xor
push
gs
jne
arpl
add
ins
imul
outs
jo
jb
imul
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
imul
jb
dec
imul
ins
dec
imul
imul
jbe
outs
je
jb
jae
ins
imul
ins
xor
imul
imul
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
imul
outs
outs
push
inc
dec
push
push
pop
imul
push
ins
outs
outs
push
inc
dec
push
push
pop
imul
je
jb
jae
bound
je
outs
xor
inc
ins
imul
xor
cmp
push
pop
inc
dec
push
add
je
outs
outs
xor
push
gs
inc
push
add
ins
bound
outs
js
pop
push
gs
arpl
push
popa
ins
jne
inc
push
add
dec
imul
xor
popa
dec
add
imul
ins
xor
ins
imul
bound
dec
inc
dec
add
jb
xor
outs
popa
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
dec
imul
ins
add
imul
ins
xor
inc
outs
ins
bound
outs
js
arpl
bound
outs
js
add
ins
bound
outs
js
add
je
outs
outs
add
je
outs
outs
xor
je
push
ins
outs
outs
push
inc
dec
push
push
pop
imul
imul
outs
outs
push
inc
dec
push
push
pop
imul
inc
outs
jb
xor
outs
popa
add
inc
dec
inc
xor
addr16
je
inc
dec
dec
push
gs
xor
xor
inc
add
inc
push
jns
push
jo
xor
add
gs
xor
ins
imul
inc
jbe
cmp
inc
jb
imul
jns
inc
dec
xor
je
xor
push
dec
xor
dec
popa
bound
add
gs
xor
push
gs
inc
outs
js
je
js
inc
outs
js
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
bound
push
push
inc
push
push
inc
je
jb
bound
add
jo
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
outs
fs
add
xor
inc
gs
bound
arpl
fs
jb
popa
jns
inc
jae
gs
bound
dec
outs
popa
add
je
inc
outs
jne
je
inc
outs
outs
ins
gs
outs
add
jb
outs
add
jae
outs
jae
outs
add
imul
ins
add
jae
gs
cs
jb
ja
outs
add
jae
gs
inc
outs
ins
outs
jb
add
ins
outs
jb
addr16
inc
jne
je
outs
dec
imul
je
inc
outs
outs
je
outs
ins
add
je
inc
outs
jb
inc
outs
ins
outs
jb
addr16
inc
popa
jb
inc
jb
jns
jae
je
dec
imul
jb
push
outs
imul
pop
dec
outs
arpl
imul
pop
push
gs
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
pop
push
imul
imul
jb
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
imul
ins
dec
imul
imul
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
imul
imul
jae
je
inc
jne
outs
push
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
popa
fs
push
gs
inc
push
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
arpl
outs
jb
jae
add
push
jns
add
je
jns
gs
dec
gs
outs
fs
outs
outs
add
je
gs
outs
fs
dec
gs
outs
fs
popa
jae
add
jbe
imul
add
imul
jb
add
jb
outs
jb
addr16
inc
gs
jne
je
jae
je
inc
jne
jae
jb
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
jae
je
inc
outs
popa
bound
add
je
dec
gs
imul
popa
arpl
outs
ins
outs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
je
dec
outs
je
jb
arpl
push
gs
inc
outs
js
popa
jae
add
je
dec
popa
js
outs
addr16
add
je
push
gs
fs
outs
ins
jns
jae
je
push
outs
jb
push
jb
jo
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
jbe
ins
jne
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
push
dec
ja
jp
inc
push
inc
dec
inc
dec
jo
jb
jae
jne
arpl
add
add
add
add
jle
sbb
call
dec
push
hlt
jle
push
test
shl
push
or
jle
sbb
xor
mov
adc
jle
sbb
test
pop
dec
push
scas
add
add
sub
jle
ds
aam
jo
jle
add
jle
jle
or
jle
pop
pop
jo
mov
cmp
sbb
daa
jle
ds
out
jle
jg
jg
cmp
mov
hlt
jle
push
jle
jle
jle
add
and
ds
hlt
jle
push
add
jle
sbb
dec
push
adc
jle
jg
out
cmp
rcl
imul
aas
push
jle
scas
add
inc
pop
ds
hlt
jle
add
push
scas
or
jle
inc
pop
sbb
ins
call
add
scas
gs
jle
ds
adc
jle
or
push
jle
shl
gs
mov
ins
call
add
pop
pop
hlt
jle
lea
push
hlt
jle
push
dec
push
add
or
jo
aam
test
addr16
jle
jo
add
jle
add
add
arpl
sbb
pop
add
inc
mov
push
aam
or
adc
cmp
or
jle
or
jle
sbb
cmp
jle
scas
gs
jle
out
sbb
add
or
push
inc
pop
jg
aam
mov
aam
hlt
jle
pop
shl
arpl
jle
pop
jle
dec
push
add
ds
hlt
jle
pop
inc
pop
ds
inc
pop
cmp
mov
mov
jle
shl
pop
ds
sbb
pop
ds
add
pop
inc
mov
test
push
or
or
pop
sbb
pop
or
dec
push
shl
push
jle
cmp
sbb
imul
push
jle
sbb
ds
jo
jle
dec
push
or
pop
pop
jmp
sbb
pop
ins
call
sbb
dec
shl
mov
push
pop
pop
shl
sbb
inc
pop
scas
gs
adc
out
hlt
jle
pop
scas
gs
or
cmp
add
or
sbb
or
xor
or
pop
pop
ds
jle
rcl
mov
and
(bad)
ins
call
add
call
adc
aam
adc
jle
hlt
jle
dec
add
jle
jle
mov
inc
mov
dec
add
sbb
out
jo
jle
cmp
ins
call
hlt
jle
push
add
cmp
cmp
mov
or
or
or
adc
add
jle
test
mov
mov
jle
or
inc
add
ins
add
add
bound
jne
je
je
outs
add
xor
add
arpl
add
je
add
inc
add
jb
ins
add
add
inc
ja
arpl
data16
jno
js
jns
add
imul
push
add
add
dec
add
js
ins
add
jp
push
add
arpl
inc
add
jno
push
add
push
adc
outs
add
dec
add
bound
add
add
adc
add
outs
add
add
add
or
bound
add
add
or
add
je
add
adc
add
je
inc
add
js
xor
add
inc
add
jb
ins
add
add
pop
inc
add
push
add
ja
push
add
outs
add
push
add
dec
add
dec
add
add
add
pop
adc
mov
shr
xor
push
mov
pop
push
sbb
mov
add
add
and
add
and
add
or
adc
add
sbb
adc
push
add
add
add
adc
add
add
add
push
adc
add
adc
add
add
and
add
add
add
push
add
add
adc
or
push
adc
add
adc
add
adc
xor
add
xor
adc
xor
add
xor
push
add
popa
add
add
or
add
add
add
add
or
add
add
adc
add
adc
add
or
add
add
adc
add
add
add
or
sbb
aas
pop
jg
aad
cmp
mov
and
add
or
or
and
add
adc
adc
sbb
and
add
sbb
sbb
and
movs
push
and
add
or
sub
sub
sbb
adc
add
cmp
cmp
add
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
jne
and
add
adc
pop
add
xor
and
add
and
add
add
add
add
or
add
xor
xor
xor
xor
add
add
and
xor
xor
xor
sub
sub
sub
fs
xor
bound
add
add
outs
jo
jb
addr16
xor
xor
add
or
jb
jae
pop
outs
bound
add
add
or
jb
jae
pop
outs
bound
dec
outs
arpl
add
add
adc
js
dec
push
dec
ins
jb
dec
outs
jno
inc
jns
dec
jb
dec
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
ds
add
add
add
xor
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
