push
call
shr
shr
push
call
jbe
not
mov
bswap
lea
pushf
xchg
movzx
mov
cwde
movzx
movsx
lea
mov
mov
call
mov
enter
dec
sbb
mov
mov
mov
or
fld
jg
xor
out
mov
xchg
loope
lahf
ja
imul
xor
push
mov
sub
dec
lea
sbb
cmp
stos
xchg
jecxz
mov
and
les
adc
xchg
clc
pushf
cdq
dec
sti
aas
pop
jp
test
ficom
adc
xchg
inc
add
arpl
pop
jb
push
call
mov
imul
xor
jle
in
retf
xor
mov
(bad)
or
cmp
pop
aam
jl
inc
cmp
data16
fst
pop
fiadd
xchg
cmp
(bad)
rcl
out
leave
fisttp
fs
push
xor
inc
mov
cmps
movs
mov
fwait
mov
dec
into
or
pop
loope
stos
mov
push
imul
jb
gs
cwde
pop
push
add
inc
jg
add
js
sbb
aad
lahf
mov
fstp
cmc
sbb
or
push
bound
sbb
lods
in
pop
pop
push
fs
lea
jne
sub
outs
stos
cs
mov
jl
imul
leave
sub
xor
xor
aaa
gs
xchg
repz
adc
adc
pop
sub
mov
add
out
sbb
ins
xlat
xor
mov
js
sar
lods
push
push
xchg
rcr
icebp
jbe
repz
sti
call
adc
out
cmp
push
adc
push
mov
mov
popa
pop
xchg
ror
test
pop
inc
leave
jo
cmp
cmc
add
inc
ret
bswap
pop
xor
ret
std
es
xchg
(bad)
fnstenv
icebp
push
sub
retf
sahf
mov
sub
iret
out
cwde
push
jae
jle
jo
adc
inc
fdivr
mov
push
pusha
sbb
jbe
fwait
out
in
(bad)
inc
(bad)
or
mov
fdiv
out
ss
adc
pop
(bad)
in
ret
(bad)
gs
and
mov
iretw
or
mov
pop
mov
lods
movs
scas
or
fwait
xor
repnz
jg
arpl
xchg
cmp
in
cmp
inc
adc
out
adc
jne
push
outs
ret
xor
or
add
(bad)
add
es
shr
mov
daa
std
ja
dec
cmp
pop
dec
test
ds
bound
pusha
cmp
sbb
aad
hlt
pop
cmp
jns
mov
mov
xor
repnz
inc
mov
in
adc
and
dec
dec
jmp
int3
pop
jne
mov
add
sub
ffree
xor
lock
pop
add
popf
sbb
add
dec
aad
ficom
popf
and
neg
icebp
mov
inc
loopne
adc
inc
pop
pushf
dec
pop
xchg
cmp
aaa
or
daa
xor
test
scas
sub
(bad)
data16
jg
xor
mov
cmp
fcmovne
adc
cdq
jecxz
out
mov
sbb
xor
inc
repz
test
(bad)
and
mov
lods
or
daa
test
inc
icebp
sub
imul
pop
add
cs
push
sub
ret
jne
jno
pushf
add
stc
pushf
cmc
cmp
pushf
lea
jne
jmp
pushf
lea
je
cmp
bt
pusha
bt
sub
pusha
clc
mov
push
cmp
pushf
call
push
call
push
call
stos
mov
cmps
call
inc
push
call
dec
push
cmp
repz
jg
mov
outs
jecxz
or
push
es
cld
mov
pop
fdivr
or
aad
and
(bad)
scas
jns
loope
adc
ret
fld
xchg
mov
mov
mov
mov
sub
out
sub
pusha
jg
push
dec
es
mov
ret
adc
sub
out
outs
mov
jmp
(bad)
xchg
lods
jmp
adc
jmp
dec
aad
mov
in
and
inc
shl
jg
dec
pop
mov
mov
cwde
push
mov
dec
or
adc
call
lea
call
jmp
pushf
add
mov
push
lea
jne
call
push
call
or
inc
and
add
aad
jmp
push
add
fs
jne
pushf
pusha
mov
push
ret
push
ss
add
dec
mov
jle
repz
dec
add
lods
adc
push
sub
aaa
cmp
cmp
frstor
mov
jp
mov
and
dec
in
dec
aam
(bad)
cmp
dec
push
dec
jmp
cmp
bt
add
pushf
call
push
call
mov
dec
push
btr
mov
bt
push
add
cmp
clc
cmp
clc
movzx
add
ror
rcl
movsx
mov
pusha
pushf
clc
add
clc
test
pushf
clc
mov
push
test
pushf
pushf
call
hlt
inc
mov
push
push
ja
daa
push
pop
ss
dec
lahf
aad
pop
ja
jg
iret
sub
mov
arpl
mov
mov
jge
dec
jg
dec
bound
lea
pushf
clc
push
xchg
inc
js
cmp
cmps
ror
(bad)
test
inc
add
outs
push
lea
mov
jo
xor
cld
pop
mov
mov
stos
push
daa
outs
(bad)
loopne
rol
lock
jmp
jmp
mov
pop
not
pop
pushf
push
push
ret
cmc
or
add
jo
lock
pop
sub
push
vorps
cli
dec
sub
jl
cli
xchg
push
out
mov
inc
outs
jnp
mov
(bad)
or
add
fistp
dec
cwde
pusha
mov
fld
inc
loopne
pop
cmp
imul
sbb
or
cs
mov
repnz
add
cmp
fsub
add
add
pop
pop
pushf
lock
push
mov
push
imul
cmps
dec
push
pushf
fld
xchg
mov
xor
and
jle
sbb
pop
add
jmp
sub
and
mov
inc
(bad)
dec
aas
mov
sub
rcr
clc
cmp
jmp
xchg
xchg
mov
aam
cmp
inc
push
outs
push
push
add
jp
push
int3
jmp
pop
loope
adc
repnz
pop
lock
pop
inc
(bad)
xor
arpl
sbb
sbb
mov
jb
inc
ror
jmp
inc
cmc
pop
mov
fwait
sub
clc
sub
pop
(bad)
or
mov
ss
xchg
jo
pushw
cmps
fmul
out
(bad)
sub
xchg
(bad)
arpl
jo
mov
lea
inc
and
jae
adc
sti
push
ja
pop
xchg
fisttp
mov
xchg
test
popf
push
js
mov
push
push
add
add
cwde
push
push
movzx
cwde
pusha
mov
movsx
mov
not
mov
call
pop
or
add
cmp
pop
ret
loopne
bnd
sbb
loope
jecxz
sub
jp
iret
add
retf
sahf
cli
sbb
mov
popa
mov
pop
iret
mov
cld
mov
call
push
movd
jns
hlt
xorps
aam
lahf
and
shl
xchg
cmp
hlt
in
aam
sub
scas
popf
sti
stos
mov
dec
jmp
jne
jno
xchg
pop
dec
jecxz
scas
dec
jl
push
loopne
sbb
mov
inc
(bad)
retf
xchg
in
sbb
sub
cmps
call
ds
push
push
inc
push
xor
cs
ins
add
xchg
cmc
jmp
pushf
or
push
push
lea
jne
seto
push
movzx
mov
pushf
push
mov
pushf
pop
cmp
or
push
pusha
jmp
pushf
stc
mov
sub
pushf
mov
pushf
call
add
pop
inc
js
push
push
js
gs
imul
add
cmp
xor
cmp
push
push
pop
ja
jno
outs
sbb
cwde
retf
(bad)
call
xchg
aam
and
or
jl
push
pop
fucomip
mov
sub
push
jp
in
mov
jl
push
jmp
xchg
idiv
push
adc
dec
and
inc
cs
xor
add
pop
add
push
cmp
xchg
arpl
adc
mov
push
sti
sub
cmp
dec
cdq
push
imul
push
dec
shl
fs
lea
je
pushf
pusha
push
lea
jmp
inc
pop
cdq
in
add
jl
sub
sbb
jnp
lock
outs
lahf
dec
mov
sub
fs
cmp
xchg
rcr
push
cli
stos
daa
inc
(bad)
loopne
rcr
add
loope
test
or
in
jge
loopne
cli
and
jbe
dec
dec
inc
jmp
mov
and
popa
sar
ja
mov
aaa
xor
pop
push
and
and
lea
(bad)
ins
pushf
call
xchg
or
dec
adc
call
add
inc
(bad)
mov
xlat
mov
xor
mov
or
mov
stc
push
cli
mov
cdq
mov
fld
jle
out
push
scas
xchg
add
imul
pop
cmp
scas
repz
mov
xor
add
neg
sub
dec
dec
or
xchg
dec
pop
pop
ret
(bad)
jno
fdiv
xor
clc
sbb
fsubr
push
out
adc
test
(bad)
(bad)
jp
push
shl
dec
mov
pop
add
xchg
mov
cdq
add
cli
push
into
sbb
mov
cmps
scas
ja
sub
mov
fild
in
push
pop
retf
in
add
lahf
cmc
jb
and
or
sub
dec
sub
js
jbe
cmp
dec
or
js
add
jne
dec
jno
sbb
pop
mov
sbb
cmp
movs
cwde
push
mov
push
sbb
xor
add
jl
mov
into
add
not
cmp
ins
xor
inc
int
ins
mov
xor
fs
into
push
lods
shr
jns
std
push
fsub
add
push
call
js
jae
bt
cmc
cmp
pushf
call
pushf
lea
je
bt
clc
pusha
bt
cmp
jmp
add
(bad)
jmp
xor
mov
jbe
scas
and
aad
add
xchg
mov
dec
hlt
add
in
dec
mov
cmps
icebp
retf
inc
jl
jns
sahf
jmp
xor
ret
mov
sbb
loopne
dec
cmp
test
ds
fnstenv
cmc
cmp
xor
sahf
(bad)
std
mov
or
loopne
inc
movs
es
sbb
mov
enter
jnp
or
adc
leave
pusha
mov
jmp
into
ret
jle
dec
retf
test
add
out
je
adc
xor
push
cwde
les
xchg
lahf
or
xchg
or
data16
mov
js
push
iret
mov
out
dec
aad
mov
adc
jle
mov
cmp
cmp
jnp
fs
mov
cmp
sbb
mov
test
push
sbb
vpcmpgtd
jle
mov
xor
stos
jmp
cs
push
mov
call
and
sub
jno
mov
add
mov
sub
daa
aam
lds
scas
mov
xor
enter
jp
popfw
retf
push
dec
pop
mov
jmp
mov
(bad)
(bad)
pop
int3
dec
lahf
sar
push
lds
stos
fwait
retf
push
or
test
sbb
xor
and
sahf
dec
aas
pop
mov
cmp
cmp
imul
push
cmp
push
lea
jb
pusha
mov
lea
ja
stc
clc
push
imul
bt
add
mov
lea
jmp
fdivr
js
add
sbb
lods
xchg
fadd
fbstp
and
push
(bad)
mov
lds
ins
gs
cdq
push
mov
daa
rcl
xchg
or
cmp
jne
icebp
cmps
and
sub
cs
ins
daa
arpl
sub
dec
push
jns
add
mov
push
sub
int3
dec
sahf
push
test
test
fstp
mov
mov
pop
dec
xor
in
das
aas
push
cmps
fisttp
sbb
adc
sbb
cmp
mov
(bad)
mov
into
ins
mov
test
mov
adc
into
or
repnz
fs
addr16
push
gs
and
jne
and
outs
outs
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
ins
outs
popa
and
and
outs
ins
and
ins
outs
jb
and
and
jae
popa
jb
and
jne
and
outs
addr16
ins
add
sbb
cmps
call
and
add
add
add
call
out
add
dec
push
fldcw
or
dec
repnz
data16
mov
test
aas
ror
shr
sub
stc
add
lods
cs
sub
sub
cmps
lds
scas
or
adc
push
in
adc
je
jmp
and
(bad)
push
mov
repz
sbb
(bad)
mov
(bad)
imul
call
sbb
xchg
sar
cmp
jmp
push
lea
ja
jmp
add
ja
jbe
dec
outs
inc
fs
jne
data16
jmp
push
call
jle
push
stc
sub
stc
clc
cmp
pusha
lea
jae
push
pushf
mov
lea
jmp
sar
out
xor
and
sahf
cmp
sub
retf
and
mov
rol
data16
xchg
xlat
mov
add
loopne
arpl
outs
xor
and
pop
loopne
cmp
xor
mov
ins
mov
popa
in
icebp
je
cmp
fst
call
push
retf
out
std
inc
cld
outs
imul
push
in
ja
ret
jecxz
push
add
mov
daa
mov
xchg
adc
rcl
push
jns
dec
and
cmp
adc
xchg
cmp
mov
xor
pop
add
mov
adc
dec
push
cs
xor
xor
popa
mov
fistp
int3
xor
sahf
inc
or
fs
cwde
inc
push
call
ins
cmps
in
sub
add
xchg
adc
dec
dec
repz
add
fs
mov
adc
cmps
jo
and
push
cwde
pop
jo
lea
pop
popa
push
mov
add
dec
and
ret
repz
std
daa
dec
dec
je
cmps
jg
cmp
into
pop
test
lods
rcr
mov
movs
ret
clc
mov
push
repnz
scas
daa
ror
mov
fstp
jnp
ret
push
out
call
sbb
call
fiadd
idiv
repz
bound
mov
and
ds
enter
aad
fs
pushf
pop
mov
iret
mov
clc
sbb
pop
test
out
add
jno
cmp
inc
call
dec
repnz
out
jne
cmp
cmps
icebp
xchg
xor
mov
loope
push
lea
jae
test
pusha
cmp
pusha
xor
pushf
push
mov
lea
call
call
push
call
repz
push
call
mov
mov
ret
pop
bound
lock
mov
lea
jmp
push
mov
lea
jne
test
call
lea
jne
not
mov
pusha
mov
mov
push
push
pushf
pop
clc
or
pushf
push
pushf
lea
jne
call
lahf
into
dec
in
xor
mov
shl
and
and
sbb
arpl
cld
xchg
and
lahf
fstp
mov
and
dec
mov
mov
mov
push
cld
mov
add
ret
loopne
je
ss
stos
retf
rcl
jns
jae
xchg
mov
mov
jb
out
dec
(bad)
repnz
leave
(bad)
push
mov
push
mov
cmps
adc
mov
clc
test
push
lea
je
pusha
sub
pusha
cmp
jmp
push
pusha
pushf
pushf
adc
call
push
xchg
shl
add
(bad)
xor
push
in
sbb
or
cmp
cli
dec
push
cld
cs
mov
pop
mov
sbb
shl
mov
pop
movs
pop
cdq
hlt
sbb
dec
xchg
push
push
mov
test
add
test
cmps
push
xchg
iret
lahf
adc
lock
mov
pop
mov
(bad)
and
mov
jecxz
lea
jns
inc
xchg
lods
outs
(bad)
fstp
sub
push
call
lods
and
push
call
repz
and
add
lds
or
adc
adc
xchg
out
out
jnp
push
jle
out
or
fstp
cwde
movs
popa
inc
or
xchg
pushf
jb
push
adc
and
add
sub
test
sbb
cmc
push
ds
mov
mov
and
aad
or
xchg
cld
cmps
pop
jmp
push
retf
into
adc
pop
(bad)
cmps
call
lahf
in
fcmovu
push
call
and
loop
xor
cmp
xor
pop
les
push
test
out
dec
add
cmps
shl
jge
dec
xchg
cwde
and
sbb
jb
in
pop
dec
cmc
lock
cmp
in
cmp
outs
add
xchg
xchg
push
not
cmps
inc
push
lock
fiadd
mov
and
pop
mov
sti
aas
fidiv
or
xchg
into
(bad)
into
mov
(bad)
lahf
dec
cmps
(bad)
jnp
push
pusha
lea
jae
cmp
pushf
cmp
test
xor
pushf
call
push
call
out
cmc
das
jno
hlt
loop
xor
inc
(bad)
pop
sbb
ror
mov
loopne
jae
pop
jp
sahf
cli
mov
push
or
mov
lahf
pop
ror
adc
cmc
xchg
or
test
xor
shr
pop
xchg
jle
retf
ds
inc
out
std
sbb
stc
ss
cwde
add
mov
mov
or
arpl
cmp
stos
pop
sub
imul
in
fs
mov
pusha
pop
fcom
int
xlat
adc
cmc
test
sbb
dec
scas
adc
lfs
loope
xor
xor
or
mov
mov
dec
cmp
jmp
mov
test
lea
les
inc
addr16
jp
fstp
outs
out
std
xchg
test
lea
and
in
mov
pop
test
gs
rcl
and
pop
mov
push
and
adc
gs
clc
pop
xchg
cmc
sub
lods
out
push
jns
data16
pop
xor
fsub
add
popa
(bad)
adc
mov
sbb
iret
bswap
pop
lea
jmp
adc
pushf
push
pushf
pushf
lea
jmp
jbe
ret
xor
add
pop
jge
(bad)
xor
push
xor
mov
push
inc
dec
cdq
jbe
and
mov
out
cmp
sub
xor
int3
mov
leave
dec
lea
in
loopne
add
xor
pusha
call
mov
call
call
or
sar
mov
clc
cmp
push
call
and
mov
add
pop
mov
mov
dec
cli
outs
ficomp
loop
clc
push
mov
push
ins
inc
cmps
sbb
adc
push
test
jns
jbe
adc
cmps
in
out
and
(bad)
or
fisttp
(bad)
xor
shl
sar
inc
xchg
jle
scas
jae
and
mov
xchg
mov
scas
mov
pop
loop
add
scas
loopne
xor
add
js
push
int
cmp
into
lea
call
add
jb
push
gs
add
pop
neg
loop
ficom
cmp
cld
push
test
cmp
mov
inc
and
cmp
push
jecxz
add
inc
dec
mov
add
or
ret
jg
mov
lahf
cmp
fidivr
cmp
addr16
mov
mov
xchg
sub
xchg
adc
add
xchg
aaa
jnp
ss
adc
pop
shr
sub
mov
add
cmc
xchg
repnz
add
inc
push
push
xor
cs
ins
add
mov
lea
jmp
pushf
stc
mov
push
pop
push
cmc
cmp
call
or
xor
adc
fscale
test
cmp
inc
std
sbb
sub
imul
push
mov
jmp
repnz
inc
mov
daa
dec
adc
dec
pop
xchg
shl
inc
fistp
lahf
mov
test
or
push
aam
inc
adc
mov
jg
sahf
dec
not
mov
push
add
repz
add
rcr
xchg
jnp
pushf
lea
call
pusha
push
call
push
call
cli
ss
dec
mov
add
dec
and
dec
inc
dec
mov
rcr
aas
shl
jmp
neg
gs
push
xor
(bad)
es
and
sbb
push
test
or
lock
cmp
shl
jg
mov
into
enterw
dec
lds
pop
sub
das
sbb
mov
push
call
push
movzx
mov
jmp
inc
pushf
inc
jmp
out
push
push
jg
sbb
shl
fs
jno
in
cs
mov
pop
pop
bound
xlat
mov
dec
xor
pop
fdivrp
adc
(bad)
pop
pop
(bad)
icebp
out
lock
bound
add
iret
int
cwde
pusha
adc
fdivr
jb
xchg
and
jnp
sti
xor
test
cmp
push
mov
loopne
mov
imul
sub
adc
mov
iret
pop
mov
mov
div
rcl
shl
clc
mov
test
mov
pushf
push
stc
test
pushf
pushf
lea
je
bt
bt
add
cmp
bt
call
mov
xor
cmps
shl
cmc
xlat
sub
test
inc
bound
jmp
push
push
movs
xor
mov
pop
mov
sbb
sbb
xchg
cmc
(bad)
(bad)
stos
jmp
cli
and
outs
cs
in
ss
sub
jns
inc
dec
sbb
xchg
mov
mov
shl
add
add
adc
jne
push
mov
push
push
ret
push
call
cs
lea
jb
call
mov
pusha
lahf
bswap
jmp
push
call
imul
mov
add
imul
inc
cdq
shl
ret
inc
ficomp
icebp
jo
xchg
xor
mov
dec
mov
jge
pop
stos
out
inc
add
adc
inc
pushf
mov
(bad)
sahf
cld
jmp
add
add
mov
pop
stos
inc
pop
fiadd
add
call
inc
jp
mov
ficom
jnp
fiadd
dec
scas
jge
dec
sub
aam
iret
jnp
test
xchg
sbb
(bad)
xchg
imul
(bad)
fdivr
push
scas
inc
adc
xchg
push
jmp
xor
add
sub
or
fldenv
push
icebp
pop
mov
or
push
jo
ins
movs
scas
add
or
xor
cwde
ficom
pop
stos
fld
pop
scas
ret
dec
addr16
test
mov
adc
jno
shl
inc
add
mov
pusha
add
add
rcl
gs
pusha
xchg
(bad)
push
fild
(bad)
pop
mov
gs
repnz
dec
inc
inc
dec
xor
sub
xchg
sahf
pusha
mov
lods
push
imul
add
fwait
push
sbb
cmp
retf
adc
and
jp
sbb
enter
jmp
cmps
call
sub
jbe
fiadd
outs
jmp
mov
fst
add
sbb
out
in
in
pop
mov
in
inc
popa
sbb
sti
in
retf
mov
dec
xor
xor
pop
pop
inc
mov
cdq
sbb
inc
jecxz
cmp
mov
or
sub
inc
call
xor
pop
cwde
inc
out
sub
mov
outs
dec
call
pop
mov
loopne
imul
mov
xor
retf
xor
lods
loop
xor
loope
pop
hlt
cmps
ins
repnz
call
mov
lea
jae
test
pusha
xor
pushf
call
cmc
int
fild
dec
shrd
mov
lods
jg
push
mov
icebp
out
arpl
dec
inc
aam
jae
inc
cvtps2pd
je
add
fisttp
faddp
repnz
jge
int
push
leave
icebp
sar
stos
dec
inc
daa
push
push
sbb
out
mov
retf
sbb
ins
sub
ins
arpl
iret
add
ret
xor
rcr
add
je
add
jmp
shr
sub
add
mov
(bad)
jmp
out
xor
jmp
mov
or
mov
push
push
scas
ja
stc
xor
bound
mov
fnstcw
ret
dec
fst
leave
push
xor
cmp
repnz
mov
cwde
jnp
ret
pop
push
mov
pusha
add
outs
movs
fs
(bad)
xchg
push
push
leave
mov
or
xor
call
ret
aaa
mov
add
push
icebp
ffree
add
fdiv
push
mov
adc
mov
cmp
test
xchg
clc
btc
mov
stc
mov
bt
pushf
sub
call
mov
pushf
mov
push
pop
pushf
push
push
mov
push
ret
lea
call
push
lea
jb
pushf
push
ret
push
call
int
(bad)
fadd
pop
add
inc
cmp
pop
mov
mov
cmp
movs
xchg
mov
cmp
outs
pop
xchg
mov
and
fiadd
jns
xor
ins
call
sar
das
adc
add
pop
ror
xor
sar
xchg
pop
sahf
imul
jg
dec
xor
pop
xchg
lahf
movsx
mov
pushf
mov
lea
jmp
fdiv
push
and
pop
shl
movs
nop
retw
rol
xor
enter
xlat
cmp
sub
stos
daa
popf
mov
cmp
push
fild
sub
ins
jmp
sub
push
sbb
xor
scas
push
popf
cmp
shl
lock
(bad)
ffree
out
cmp
ret
pushf
loope
add
fisttp
ins
mov
sbb
inc
pop
cmp
jl
in
pushf
popa
jl
mov
pop
sbb
push
sub
cmp
pushf
ficomp
fsincos
out
adc
push
ror
iret
pushf
in
pop
mov
jl
pop
cmp
lea
inc
sbb
push
fcomp
call
dec
sbb
sbb
inc
leave
pop
mov
pop
pop
cmp
pop
jl
lea
fsubr
sbb
leave
jns
sbb
pushf
neg
sti
lds
in
enter
jl
stc
pop
inc
cmp
pop
fdivr
mov
jbe
adc
call
imul
fs
fadd
pusha
jecxz
push
js
clc
js
test
in
sbb
pop
and
cdq
jo
cld
in
cmp
and
fmul
stos
mov
lahf
sti
js
test
mov
push
and
clc
cmp
push
mov
and
js
test
clc
push
cs
sbb
mov
fdivr
fadd
and
cmp
pusha
lea
clc
push
inc
std
push
cdq
or
jo
das
fdivr
fadd
and
cmp
pop
or
sbb
loopne
jmp
sub
pop
outs
fnstsw
jecxz
fsub
sub
jmp
rep
sti
movs
add
or
push
adc
lahf
and
sbb
cmp
inc
movs
dec
mov
hlt
fs
ins
sbb
outs
test
push
pushf
hlt
movs
pusha
lods
sbb
int3
mov
push
jmp
jmp
push
pusha
sti
imul
sbb
hlt
and
sub
xor
pusha
cmp
inc
int
dec
sbb
ds
jbe
jmp
fstp
sub
test
pop
mov
jecxz
jmp
cmp
hlt
lock
xor
mov
and
sbb
jecxz
sbb
les
or
pop
dec
push
movs
fs
sbb
mov
popf
inc
sti
cmp
leave
hlt
jo
das
sbb
cli
in
outs
cmp
inc
in
fistp
clc
mov
mov
jge
sub
gs
cld
pop
in
pop
outs
mov
push
xchg
es
imul
pop
in
ja
push
push
in
fstp
scas
inc
lock
in
sbb
lock
in
sbb
lock
in
sbb
lock
in
sbb
push
add
and
pusha
jecxz
jmp
les
cmp
shr
push
aad
movs
pop
add
std
popa
pusha
and
mov
lods
push
aam
or
in
pusha
sbb
in
leave
std
sbb
iret
ins
das
cld
xchg
push
push
pusha
jne
in
std
fs
arpl
out
ins
jb
stc
push
mov
in
mov
(bad)
ins
das
cld
(bad)
push
jle
es
int
jge
and
ins
mov
inc
push
sti
sbb
and
loop
and
and
loope
test
std
clc
shl
ins
pop
cld
and
mul
in
xchg
std
addr16
and
ins
(bad)
cld
scas
push
jle
push
in
cs
std
aad
lods
ins
test
gs
cmp
std
int3
lods
and
and
add
jecxz
ret
out
ins
cmp
push
inc
pusha
sub
or
jmp
sbb
pusha
dec
in
xor
sbb
and
ins
leave
cld
mov
cdq
pusha
sub
and
ins
adc
add
call
std
test
and
push
dec
pusha
xor
and
adc
and
ins
(bad)
iret
push
mov
cmps
in
xchg
std
xchg
ins
push
cld
inc
push
aaa
pusha
daa
in
pop
std
pop
mul
out
(bad)
cld
(bad)
push
mov
cmps
in
sahf
std
mov
outs
ins
data16
push
push
inc
pusha
ss
cs
push
push
and
ins
cmc
cld
in
push
frstor
in
(bad)
lods
and
push
jge
jne
gs
pop
push
and
cmp
pusha
sbb
cld
and
ins
in
fcomp
aam
(bad)
in
mov
movs
ins
xchg
cld
mov
test
in
je
ins
pop
and
cld
inc
push
cmp
xor
sub
and
and
or
add
sti
pusha
repz
jmp
pop
retf
js
ret
iret
add
xor
call
sbb
cwde
sbb
fs
je
test
hlt
xchg
cli
movs
mov
imul
js
pusha
fisub
jl
pusha
pop
ss
pop
loopne
fs
dec
cli
pop
outs
ins
movs
jl
mov
pushf
hlt
lods
pusha
mov
outs
in
movs
cld
mov
hlt
sub
cli
pop
outs
ins
movs
jge
lea
popf
hlt
lods
pusha
mov
lahf
imul
rcl
cmp
fwait
dec
jae
frstor
rcl
pop
mov
jmp
pop
add
add
outs
cld
jmp
fadd
outs
mov
push
outs
xchg
jmp
pop
add
add
fs
fst
push
add
pop
gs
add
fsubrp
int
jmp
pop
jbe
jmp
add
and
movs
jecxz
cs
pop
xlat
fsubr
xlat
pop
xlat
fcmovnb
pop
ret
(bad)
pop
adc
pop
jmp
(bad)
enter
fisttp
imul
aaa
sub
(bad)
out
add
cli
popf
or
push
cmp
pop
not
in
mov
or
fsubr
pushf
leave
clc
out
cmc
mov
or
push
xchg
cmps
pop
in
sbb
push
cdq
call
mov
xchg
xor
sbb
(bad)
cmp
std
and
and
(bad)
jp
add
push
ja
mov
sub
cli
(bad)
pop
out
sbb
mov
pop
popa
jnp
(bad)
fwait
sbb
pusha
jmp
cs
cwde
sti
xchg
and
sub
pop
stc
adc
jl
mov
or
adc
cld
repnz
sub
pop
stc
out
and
(bad)
jbe
ins
push
or
cs
cwde
std
mov
jle
stc
and
pop
and
jle
ror
add
jg
fsubp
and
sub
aas
stc
sub
jbe
ins
and
lahf
in
mov
fild
jle
stc
shl
and
pop
ins
call
ds
sbb
fcomp
out
clc
pop
jle
stc
cmps
and
and
pop
ins
cmc
or
movs
ds
cs
cwde
mov
mov
out
stc
fs
stc
sbb
cmp
shl
add
inc
cwde
call
out
fiadd
and
and
jbe
ins
ror
add
push
cwde
fwait
sbb
out
fld
inc
sbb
inc
mov
ins
or
jl
scas
call
xor
cld
stc
out
inc
sbb
ins
xchg
mov
outs
aas
jge
ds
xor
std
stc
popf
inc
push
and
ds
dec
mov
sub
call
xor
(bad)
stc
je
pop
and
ins
xor
pop
add
rep
(bad)
jecxz
(bad)
rcl
dec
cwde
push
sti
push
fisubr
xchg
inc
pop
add
add
add
adc
jns
jecxz
fdiv
sbb
das
xchg
sbb
cmp
add
mov
mov
scas
ret
xor
aaa
xchg
pop
inc
aaa
test
inc
pop
mov
cmp
scas
sub
mov
scas
ret
xor
aaa
xchg
pop
inc
aaa
test
inc
pop
mov
sub
bound
jecxz
lock
pop
mov
mov
jl
sub
jl
call
or
mov
retf
movs
outs
(bad)
(bad)
jl
sub
cld
mov
call
inc
sahf
loopne
ins
test
js
jg
and
pushf
ins
lock
cld
mov
call
inc
sahf
loopne
ins
test
js
outs
add
pushf
ins
lock
cld
mov
call
inc
sahf
loopne
ins
lea
inc
lahf
mov
inc
push
sbb
ficomp
sub
mov
push
(bad)
sbb
ficom
pop
rcr
rcr
xchg
pop
mov
sbb
pop
push
(bad)
sbb
fcmovb
pop
mov
mov
mov
sbb
and
and
(bad)
fistp
or
rcr
pop
fcom
sub
in
jg
pop
jg
mov
std
fcomp
sbb
jl
ja
movs
mul
imul
popf
les
mov
stos
adc
dec
pop
call
pop
push
fistp
jmp
dec
push
movs
hlt
jge
out
lsl
mov
hlt
out
out
sbb
cli
jmp
movs
or
and
sbb
cli
cmp
movs
dec
mov
hlt
pusha
pusha
push
outs
and
cwde
hlt
mov
cli
mov
mov
hlt
loopne
call
outs
add
push
sbb
and
sbb
cli
cmp
movs
dec
mov
hlt
popa
pusha
imul
and
pusha
test
outs
shl
fxtract
loope
jmp
outs
add
push
sbb
and
sbb
cli
cmp
movs
dec
mov
hlt
bound
sbb
jp
and
call
cli
mov
mov
hlt
loop
jmp
movs
or
and
sbb
cli
cmp
movs
dec
mov
hlt
arpl
sbb
jnp
and
fwait
hlt
mov
cli
mov
les
adc
and
sbb
cli
add
or
adc
sbb
push
and
sub
xor
cmp
inc
outs
dec
movs
push
mov
hlt
ins
pusha
je
jl
test
movs
xchg
mov
hlt
lods
pusha
mov
mov
movs
aam
fmul
in
in
pusha
hlt
sbb
cli
add
mov
hlt
sub
cli
inc
outs
dec
movs
push
mov
hlt
ins
pusha
jne
jge
test
movs
xchg
mov
hlt
lods
pusha
mov
mov
movs
aad
fisttp
in
in
pusha
cmc
sbb
cli
push
outs
push
movs
push
mov
hlt
cs
sbb
cli
inc
outs
dec
movs
push
mov
hlt
outs
pusha
jbe
jle
xchg
movs
xchg
mov
hlt
scas
pusha
mov
mov
movs
(bad)
mov
hlt
out
pusha
neg
(bad)
cli
pop
outs
shld
mov
hlt
das
pusha
aaa
sbb
cli
inc
outs
dec
movs
push
mov
hlt
outs
pusha
ja
jg
xchg
movs
xchg
mov
hlt
scas
pusha
mov
mov
movs
xlat
mov
and
push
push
cwde
adc
cmp
xor
fistp
push
stc
sbb
call
fnstenv
(bad)
xchg
call
mov
ins
pop
loopne
rcr
jmp
dec
push
ret
push
jecxz
pop
add
sbb
dec
jecxz
or
mov
shld
sub
lea
pusha
push
mov
setnp
mov
pushf
mov
movzx
pushf
seto
movzx
mov
movsx
jmp
bt
push
add
pusha
mov
mov
mov
lea
jmp
fs
int
add
mov
sbb
add
test
jl
dec
popa
pushf
(bad)
out
ret
pop
jmp
inc
and
mov
push
lahf
cmp
nop
sbb
movs
push
xchg
movs
ret
sahf
shr
dec
shl
xchg
lock
add
nop
xlat
arpl
popa
adc
jge
cmps
xor
int3
fnstenv
pop
mov
cdq
xor
lea
(bad)
clc
stos
fld
sti
ds
aaa
or
out
push
aas
jp
or
loop
test
pop
dec
cmp
mov
xlat
repnz
movs
sbb
dec
ret
xor
xor
pop
fstp
adc
pop
stos
(bad)
jae
movs
cmp
jnp
fsub
pop
sub
pop
imul
test
call
pop
dec
mov
dec
ret
add
push
les
daa
pusha
sub
shl
mov
fs
clc
push
jg
mov
rcr
inc
retf
in
jno
je
mov
push
and
inc
cmps
rcr
or
pop
retf
sbb
sbb
mov
sar
int
push
mov
adc
xchg
daa
(bad)
rcr
je
xlat
cwde
add
inc
or
lods
mov
repnz
retf
mov
dec
add
repnz
stc
cmc
rol
jae
cdq
dec
rcr
lahf
mov
or
bound
loop
push
lds
and
out
adc
xchg
lock
daa
xlat
sar
inc
xchg
add
ja
xlat
cmc
xor
xlat
xchg
iret
in
aam
sbb
inc
jne
shl
in
retf
fwait
div
in
in
movs
neg
sub
mov
sub
movs
addr16
pop
scas
mov
mov
xchg
leave
add
test
popf
icebp
out
mov
shl
aad
xor
xor
in
xchg
popa
sbb
xchg
sub
ret
gs
dec
mov
pop
or
ja
int
inc
nop
xchg
mov
xor
ss
push
adc
cmp
lea
pop
leave
sub
push
cmc
test
jnp
sti
and
out
mov
aas
and
mov
or
outs
add
out
lea
call
push
push
jmp
push
setle
lea
mov
pushf
jmp
push
stc
sar
pusha
add
mov
movsx
test
call
fcomip
xor
add
sbb
ins
loopne
mov
std
xchg
popf
and
(bad)
retf
imul
cmp
(bad)
stos
es
add
add
into
shl
xchg
inc
rdtsc
into
iret
sub
and
cmp
inc
dec
dec
ins
rcr
and
jl
pop
push
shl
sbb
jae
cmps
jns
div
fs
jne
push
push
ret
call
fist
push
enter
in
cmp
mov
add
push
mov
xor
inc
das
retf
sub
sbb
inc
out
adc
je
adc
push
push
jge
cwde
lea
lahf
gs
pusha
push
push
pop
jno
add
jo
mov
xor
jae
imul
fild
enter
ds
into
repnz
xchg
jecxz
add
mov
mov
cwde
std
inc
add
sub
imul
bound
mov
std
mov
retf
dec
add
add
cmovl
pop
fwait
inc
or
aas
jmp
fimul
adc
mov
div
lock
dec
sbb
mov
repz
fdiv
mov
clc
dec
sbb
popf
jl
or
mov
push
pop
(bad)
std
and
add
add
adc
xchg
out
jecxz
stos
sti
adc
adc
adc
sti
pop
sahf
sub
jmp
pop
sbb
fisub
jmp
out
fisttp
or
in
std
sbb
dec
push
addr16
or
pop
xchg
jne
push
add
and
add
mov
stc
cmp
pusha
pusha
mov
push
lea
jbe
and
mov
cmp
ror
test
add
shld
movzx
mov
bt
add
not
and
mov
bsr
dec
mov
bt
test
call
repz
add
jmp
add
adc
fisttp
idiv
jns
sub
mov
popa
in
inc
jge
loop
inc
mov
jle
sbb
fxch
mov
cmps
je
repz
les
int
adc
cmp
mov
in
xchg
imul
das
sub
pop
push
adc
pop
xor
mov
aas
and
inc
mov
dec
into
bound
aaa
mov
add
(bad)
dec
cmp
push
jo
cmp
and
das
mov
xchg
cmp
push
cli
cmp
cwde
pop
mov
add
iret
les
mov
pop
mul
movs
movs
jg
adc
sbb
and
ret
jmp
inc
mov
pop
lds
daa
(bad)
mov
pop
jne
adc
jp
fucomp
jmp
lahf
pop
aaa
mov
xchg
(bad)
fnstsw
and
jae
in
fadd
retf
sbb
repnz
shl
aaa
cmc
rcl
or
jp
pop
jge
xchg
inc
or
inc
sbb
lods
neg
add
dec
in
ror
cmp
add
mov
movs
mov
mov
rcl
lock
popa
sbb
mov
clc
cmp
pop
repnz
in
mov
repz
dec
repnz
pop
jb
mov
mov
fcmovb
adc
jne
out
icebp
call
inc
cmps
dec
xchg
push
outs
dec
push
in
inc
jne
fucomp
mov
sbb
mov
pusha
sbb
loopne
or
pmulhw
add
ret
das
cld
xchg
xchg
sbb
sub
cld
xor
pop
add
jno
jb
loop
jg
pop
bound
add
push
mov
sub
outs
mov
cmc
add
jae
repz
jecxz
pop
fisub
les
sub
out
push
fisttp
adc
or
repz
jmp
mov
int3
les
xor
(bad)
outs
bound
test
xchg
daa
inc
push
push
mov
xchg
aad
xchg
jno
mov
adc
ror
sub
sub
xor
outs
sbb
and
xor
fld
in
push
(bad)
pushf
in
add
xchg
mov
call
xor
jno
loopne
lds
push
inc
inc
jecxz
movs
xchg
adc
sahf
jmp
dec
or
mov
pop
pushw
pop
and
add
mov
or
pcmpgtd
mov
pop
cwde
clc
stos
push
xor
scas
jnp
push
xchg
out
pop
sbb
inc
mov
mov
scas
pop
mov
(bad)
out
cdq
jmp
add
cmp
movzx
inc
rol
sbb
mov
bt
bt
cmc
clc
add
call
push
call
push
mov
out
ret
add
(bad)
or
adc
adc
out
es
sbb
cwde
in
ins
add
adc
push
pop
dec
and
sub
adc
iret
inc
jmp
inc
movs
aas
shl
inc
fwait
mov
jge
clc
repz
popf
xor
jno
push
dec
cdq
hlt
(bad)
shl
xor
add
aad
fbstp
or
(bad)
xchg
js
rcl
sub
jmp
cmps
call
test
mov
mov
mov
hlt
iret
pushf
dec
mov
call
ss
cmp
dec
std
dec
jl
sbb
xchg
mov
jmp
retf
in
mov
cmp
out
movs
out
clc
add
push
aad
repnz
arpl
fidivr
push
inc
mov
mov
stos
pop
adc
and
sbb
xchg
lea
jb
bt
pusha
bt
cmp
call
xor
popf
ret
push
push
sub
arpl
fild
mov
imul
inc
xchg
jecxz
call
scas
pushf
and
mov
xchg
or
mov
push
adc
rcl
and
mov
sub
add
addr16
xchg
(bad)
mov
test
lods
jmp
sub
test
outs
fdivr
mov
add
pop
xor
mov
xchg
das
rcr
and
cmp
lods
out
dec
xchg
add
bt
pushf
pusha
imul
cmc
bt
add
pushf
push
lea
jmp
push
call
cmp
push
rcl
mov
push
cmp
lea
jbe
jb
cmc
test
push
cmp
push
lea
jge
pushf
lea
ja
sbb
clc
inc
cmc
add
pushf
mov
pushf
jmp
push
call
data16
mov
cmps
call
xor
pop
repnz
rol
mov
lock
ja
lahf
mov
repnz
loop
cdq
sub
push
sbb
rol
shl
call
stos
(bad)
mov
js
(bad)
mov
sti
(bad)
dec
ficomp
loope
sub
shl
cmps
cmp
mov
fs
frstor
dec
xchg
mov
test
cmp
sub
test
call
pop
sbb
inc
jle
mov
sahf
(bad)
fbstp
ds
pop
add
sub
jle
adc
mov
rol
pop
jns
mov
add
jno
imul
icebp
xchg
push
std
lock
push
jecxz
into
call
mov
pop
pop
xchg
js
xor
in
sahf
add
fsub
xor
fucomip
in
fisub
or
jo
inc
cmps
adc
cmc
hlt
pop
inc
mov
fcomp
cld
jno
cmp
pop
mov
and
fs
jnp
hlt
mov
mul
test
fidiv
cmp
and
push
fld
mov
fs
je
push
pushf
lea
je
pusha
mov
pusha
pushf
lea
jmp
rol
pushf
mov
test
xor
pushf
clc
jmp
push
call
fild
mov
rol
dec
jg
pop
sbb
mov
push
test
dec
mov
add
out
jb
scas
mov
push
mov
mov
and
and
loope
lds
sub
ror
jmp
cmps
adc
(bad)
jnp
xor
out
movs
or
shl
imul
xlat
popf
or
jl
dec
jnp
jl
out
jge
cmp
(bad)
xchg
out
dec
(bad)
dec
pop
int3
(bad)
jmp
test
(bad)
jmp
mov
mov
cmp
(bad)
mov
jl
dec
arpl
adc
shr
leave
bound
hlt
adc
movs
arpl
lock
pop
call
mov
in
dec
mov
push
pop
add
lock
dec
adc
fild
(bad)
jmp
cs
mov
data16
stc
sub
or
pop
sahf
cmp
fdiv
int3
xor
lock
pushf
jb
rcl
icebp
mov
neg
fdiv
out
or
test
stos
xchg
cmp
push
in
jmp
cdq
into
sub
pop
test
pop
repz
adc
stos
xchg
out
repnz
lahf
cdq
adc
jnp
xor
push
and
adc
add
loop
xor
lods
mov
mov
push
lahf
and
jne
xor
pushf
enter
mov
inc
inc
mov
test
jo
repnz
push
add
pop
mov
xor
inc
xchg
xchg
js
xchg
retf
(bad)
fmul
or
pop
dec
lock
test
fnstcw
call
shr
nop
xor
in
loopne
movs
ins
ins
inc
pusha
(bad)
loopne
add
mov
popa
scas
dec
mov
sbb
or
fsub
mov
movsx
bswap
pop
pusha
call
push
call
leave
xor
xor
loopne
mov
mul
enter
into
adc
add
xchg
aad
lahf
cmp
es
xlat
jne
mov
shl
and
imul
jg
adc
pop
mov
mov
ja
retf
pop
mov
xchg
mov
shl
movs
icebp
pop
mov
rcr
lea
shrd
mov
jae
cmp
pushf
mov
lea
jne
sub
bt
rcr
xor
cwde
sets
or
mov
shr
push
setle
add
adc
push
call
push
call
(bad)
call
xor
push
lea
jmp
mov
mov
pushf
pusha
push
ret
sub
aad
sub
sub
push
lahf
shl
mov
stc
push
neg
mov
bts
sub
cwde
movsx
lea
pushf
pushf
mov
jmp
push
pop
mov
push
ret
push
mov
pusha
lea
jae
cmp
pusha
jmp
lea
je
jmp
sbb
xor
cld
mov
lock
repz
push
and
es
and
sahf
push
xchg
addr16
mov
sub
pop
jle
mov
push
adc
data16
mov
sbb
pop
sti
adc
(bad)
mov
cmp
test
xor
hlt
cmp
mov
das
pop
cmc
mov
ins
out
push
cmps
pop
clc
stos
mov
scas
sbb
retf
pop
sub
add
inc
sub
movs
stos
dec
or
jo
pop
pop
into
jo
sub
xchg
sbb
pop
sub
std
test
pop
adc
call
push
add
mov
add
add
pop
jmp
add
stos
xor
or
fadd
jne
sbb
mov
adc
jl
icebp
imul
enter
cmps
fwait
mov
in
or
js
or
out
or
push
pushf
and
jmp
pop
inc
mov
pop
loop
js
sbb
or
mov
inc
inc
jns
lods
inc
fistp
pop
je
(bad)
call
sub
cmc
push
push
repnz
mov
lea
jne
sbb
rol
pusha
rcr
mov
sbb
sub
pushf
or
sub
xor
lea
test
cmc
test
cmc
sub
call
push
call
(bad)
das
cwde
mov
pushf
mov
rep
pushf
mov
pushf
lea
jmp
push
call
xor
adc
inc
and
inc
(bad)
idiv
sub
lods
inc
xor
fucomi
and
cmp
and
ins
mov
mov
dec
inc
adc
mov
ret
push
mov
cld
movs
xchg
ficom
retf
das
xor
arpl
dec
and
sahf
mov
(bad)
mov
(bad)
gs
add
pop
lea
and
out
outs
cmp
cli
jmp
or
lahf
or
or
cmp
xchg
cs
into
adc
test
mov
add
and
jne
lea
mov
pusha
push
lea
jmp
dec
dec
retf
xor
lea
loopne
xchg
lods
pop
(bad)
xor
dec
mov
xchg
mov
mov
adc
mov
pop
inc
loope
and
push
xchg
movs
call
mov
or
sub
(bad)
addr16
addr16
push
jne
scas
cmps
jmp
js
adc
pop
cmp
popa
adc
ds
outs
jmp
imul
retf
pop
mov
out
clc
shr
lea
movsx
pushf
bswap
mov
movsx
mov
push
lea
ja
mov
movsx
jmp
cmp
leave
mov
jo
or
push
retf
cmps
mov
xchg
xchg
add
add
add
mov
sahf
test
imul
or
mov
and
loope
lods
push
je
mov
sbb
inc
jge
cmp
or
add
dec
dec
pop
clc
arpl
push
movs
out
jl
sbb
dec
sub
shl
pop
dec
adc
arpl
mov
lods
pushf
pushf
lea
je
xor
mov
adc
dec
mov
add
and
sub
shl
adc
movzx
shr
adc
sbb
mov
shl
not
shrd
add
movzx
xor
dec
jmp
bt
call
push
push
lea
ja
pushf
pushf
pushf
imul
mov
test
test
bt
add
pushf
push
push
mov
lea
jmp
mov
jmp
jne
mov
pop
lods
jne
and
jno
xchg
sub
cmps
hlt
outs
push
test
mov
mov
pusha
fstp
retf
es
sub
adc
stos
scas
ins
jl
out
mov
xchg
mov
cmp
ins
dec
loopne
mov
sub
loopne
inc
ins
rol
popa
gs
(bad)
mov
lods
jae
aam
pop
xchg
shl
call
sub
inc
mov
xor
test
cwde
out
jg
ficomp
sub
movs
jle
call
push
mov
stos
icebp
mov
(bad)
je
adc
adc
xchg
fistp
adc
aaa
or
test
jns
push
(bad)
push
cld
(bad)
or
ins
ret
into
fwait
push
push
mov
lea
mov
xor
shl
xor
sbb
jmp
out
imul
mov
scas
jp
out
dec
(bad)
(bad)
pusha
pop
sub
(bad)
(bad)
push
sbb
call
push
dec
add
ja
nop
mov
loope
je
jo
(bad)
inc
fldenv
mov
pop
je
sahf
ret
sub
js
xchg
test
into
leave
xor
xor
push
pusha
xor
cs
dec
or
push
bound
into
cmp
fdiv
repnz
(bad)
aas
dec
xor
dec
mov
adc
cmp
dec
push
mov
lea
je
stc
stc
pusha
pushf
cmp
pusha
push
lea
je
pushf
mov
mov
lea
jmp
imul
add
loop
jmp
ss
cmp
dec
jle
nop
xor
mov
cdq
(bad)
xchg
out
xor
xor
aaa
nop
ror
xchg
ror
cmp
push
fisttp
(bad)
fmul
add
jge
add
adc
add
add
xor
movs
xor
addr16
daa
add
fistp
jno
mov
xor
mov
fstp
mov
bound
cmp
(bad)
jmp
dec
inc
ret
sub
push
mov
scas
test
pop
rcl
cmp
xor
xor
sub
fs
jle
pop
cmps
mov
inc
add
imul
pop
adc
push
ret
stos
ror
mov
xor
call
jae
cmp
retf
out
addr16
das
inc
aam
sbb
sbb
and
(bad)
inc
cmp
cdq
mov
enter
mov
sti
aaa
inc
out
pop
and
xchg
inc
out
in
ret
mov
addr16
mov
sub
jmp
das
mov
jp
xchg
sbb
jb
sar
fnstenv
jns
mov
std
out
into
fld
push
xchg
movsx
rcl
bsr
mov
test
sub
pushf
push
rep
pop
push
lea
pushf
mov
pushf
push
lea
jmp
add
push
gs
arpl
push
arpl
mov
add
cmc
shr
jmp
mov
inc
push
pushf
adc
push
pushf
push
ret
cmp
call
push
call
call
adc
cmps
call
ds
jle
shr
cmc
(bad)
call
mov
lea
jmp
pushf
lea
call
jmp
inc
sar
xor
gs
ds
hlt
inc
xchg
sub
jg
test
(bad)
lock
mov
ja
ficomp
imul
cmp
call
ss
pop
aad
rol
in
push
sub
movs
sahf
test
push
push
scas
inc
mov
jle
pop
idiv
add
aaa
mov
std
bound
imul
iret
jmp
popa
inc
xchg
inc
lahf
dec
push
cmps
mov
in
mov
das
clc
push
aas
xchg
xchg
js
push
jecxz
aam
shl
inc
arpl
arpl
xchg
(bad)
repnz
mov
adc
aam
in
ret
xchg
pop
rcr
lea
jne
not
mov
pusha
pushf
pop
call
xchg
mov
fdiv
enter
add
mov
jns
dec
std
pop
fisub
push
cmps
pop
in
retf
push
and
outs
lahf
inc
cmp
scas
shr
scas
or
sub
pop
xlat
pop
mov
mov
xor
push
sti
mov
mov
pop
jb
push
fdivr
mov
imul
mov
cmp
pop
std
scas
mov
mov
cwde
jg
inc
aas
(bad)
sub
jo
stc
scas
cmps
(bad)
inc
or
xchg
aaa
fcomi
cmc
jecxz
in
mov
out
ja
jae
aad
xchg
in
mul
cmp
icebp
in
xor
sti
push
push
cmp
push
call
mov
sub
add
and
outs
arpl
jne
and
je
jns
jo
imul
arpl
ins
and
je
bound
ins
outs
arpl
gs
and
and
popa
ins
imul
and
jb
jb
and
rol
add
push
fsub
add
rcr
mov
xor
ret
jo
(bad)
inc
and
sahf
sar
mov
jae
push
arpl
jae
jno
xchg
adc
das
pop
iret
ins
push
outs
and
xor
jb
mov
rol
loop
(bad)
hlt
call
sbb
mov
jmp
adc
out
lods
push
inc
xor
stos
xchg
test
mov
mov
mov
push
popa
out
test
js
mov
cmps
pushf
call
pushf
mov
push
lea
je
call
push
call
stos
fst
adc
mov
call
pop
ret
add
fnstcw
int
pop
aas
jg
mov
inc
dec
xor
add
fs
pusha
fistp
add
sub
adc
push
cmps
in
sahf
push
into
pop
mov
ins
fsubr
ror
push
add
adc
mov
or
cld
mov
push
xchg
stos
jbe
ja
jecxz
ret
pop
dec
test
sahf
js
shr
inc
push
jmp
mov
dec
lock
fnstenv
fnstenv
ja
cli
push
adc
jne
add
inc
rcl
in
in
fs
jge
jne
lahf
seto
mov
mov
push
pusha
lea
jmp
jae
jl
add
aaa
cli
das
and
pop
mov
cmps
stc
dec
and
(bad)
mov
sub
jbe
sbb
jo
scas
call
jne
ror
gs
or
xchg
adc
sbb
(bad)
xchg
std
fisttp
mov
fs
and
retf
scas
ins
sbb
call
inc
aad
ret
std
(bad)
call
scas
add
mov
pusha
add
xor
sub
jl
sbb
test
fiadd
cmps
adc
mov
xor
cmps
jmp
and
inc
cmp
cmp
loopne
mov
and
dec
popf
jo
add
into
xchg
sub
add
ja
ret
jmp
movs
adc
push
and
dec
dec
or
dec
popa
stc
mov
xchg
dec
sbb
mov
add
xlat
test
add
sub
ss
out
dec
ins
and
arpl
push
call
sbb
jne
stc
cmp
popf
pushf
pushf
pusha
lea
jmp
push
call
mov
repnz
cmc
jmp
lea
pusha
pushf
mov
call
call
add
mov
neg
test
clc
cmc
add
std
cld
pusha
push
popfw
push
inc
push
call
lea
jne
push
push
ret
lea
ja
jmp
jmp
push
call
push
or
push
lea
je
shr
btc
mov
jmp
push
call
cmp
imul
scas
pusha
or
cmp
scas
xchg
test
in
push
xor
fidivr
shr
sbb
jae
shr
jne
jb
cmp
scas
jne
pop
loopne
cmp
ret
jp
and
push
fs
iret
mov
dec
cmp
pop
mov
ret
aam
dec
addr16
pushf
pusha
mov
movzx
cwde
jmp
cmc
jl
lods
add
test
pop
xlat
jnp
xchg
lock
pop
lds
pop
cs
push
jmp
push
xchg
clc
test
push
loopne
xor
hlt
shl
jg
addr16
mov
cmc
nop
mov
call
add
mov
ja
jmp
mov
test
mov
stos
lods
mov
xchg
jmp
loopne
jne
pop
push
push
cld
mov
out
jmp
add
imul
pop
mov
xchg
pop
adc
repz
mov
repnz
ss
clc
mov
sub
mov
mov
das
xor
int
rcr
mov
dec
ret
icebp
les
sbb
clc
fldcw
push
stc
add
pop
push
cmp
ret
mov
inc
(bad)
push
lods
arpl
xchg
into
inc
sbb
jno
cmps
rol
call
js
inc
lods
stos
stos
fild
jnp
sbb
mov
cmp
mov
inc
cmp
jl
lahf
stos
stc
outs
dec
jge
cmp
mov
mov
mov
jne
bsf
setg
mov
xor
clc
shrd
dec
sub
sar
cmc
mov
push
stc
sub
jmp
push
call
lods
dec
push
call
xchg
xlat
xor
add
add
int3
add
inc
imul
js
sbb
sbb
call
cmps
leave
jmp
xor
test
mov
retf
pop
sub
mov
scas
xchg
jecxz
fldcw
adc
and
xchg
movs
push
xor
ret
mov
imul
sbb
jle
stos
fdiv
movs
and
xor
jnp
out
xchg
dec
enter
mov
scas
pop
bound
xor
psubq
ret
push
mov
jo
and
stos
cs
ffree
xlat
dec
xor
push
pop
ins
mov
gs
push
outs
je
adc
and
or
xlat
xchg
mov
dec
mov
sbb
push
fwait
adc
pop
jl
push
jp
adc
sub
mov
adc
cmp
inc
jge
shr
bound
in
stc
shr
sbb
mov
(bad)
imul
outs
jmp
adc
inc
lods
imul
(bad)
mov
adc
sbb
out
js
add
pop
jg
mov
test
jbe
or
inc
movs
rcr
mov
cld
test
test
mov
enter
sbb
jmp
out
jno
jge
inc
lods
jne
add
sbb
add
xor
sub
inc
push
push
(bad)
jle
sahf
les
mov
push
in
rol
push
pushf
lea
call
pushf
adc
call
push
bswap
jmp
push
call
add
xchg
xor
add
ret
stos
add
xchg
adc
mov
(bad)
and
jl
mov
ret
repz
sbb
dec
je
mov
add
mov
lods
dec
(bad)
fcmovnbe
arpl
or
xor
push
rcr
cmps
xor
ret
pop
enter
jp
cmovp
xchg
cmp
inc
xchg
sub
sub
frstor
arpl
rcr
fisubr
cs
into
aaa
pop
inc
sub
enterw
xchg
sub
or
push
and
xchg
retf
in
fisubr
jge
jecxz
and
push
mov
dec
les
lods
mov
test
jmp
cmp
xor
cs
push
push
inc
mov
scas
xchg
popa
mov
mov
fmul
mov
(bad)
or
sbb
pop
cli
xchg
stos
jnp
jle
or
pop
add
aam
dec
out
stos
loopne
imul
push
pop
lods
inc
push
mov
jae
iret
jmp
imul
mov
mov
aas
les
xchg
sub
add
daa
pusha
lea
ja
not
or
test
add
shl
xor
rcr
rcr
mov
cmc
cmc
push
cmp
pushf
lea
jb
stc
pushf
cmp
call
cmp
push
call
push
push
xor
xor
fs
ins
add
cmp
fwait
sbb
or
push
jnp
cmp
data16
sbb
out
jnp
xchg
sbb
cmp
jg
imul
out
inc
sub
ins
stos
adc
mov
dec
inc
sub
ret
jp
and
out
jo
enter
mov
or
adc
scas
adc
inc
add
test
push
scas
mov
aaa
retf
bnd
cmp
mov
or
in
lea
jb
pushf
clc
cmp
cmp
jmp
lea
jbe
shld
sbb
btc
mov
sub
adc
sar
rol
add
dec
neg
sbb
mov
test
mov
xor
movzx
add
sub
mov
ror
mov
cmp
test
jmp
pushf
cmp
pusha
jmp
push
call
(bad)
xchg
dec
lods
jmp
adc
fcmovbe
pushf
outs
jno
pop
mov
add
fld
sub
ins
shr
xchg
js
or
adc
popa
loop
repnz
jp
pop
ret
movs
push
call
or
or
jmp
mov
xor
sbb
mov
shl
enter
jmp
test
push
test
jle
pop
xor
push
imul
jl
test
lods
imul
pop
mov
xchg
pushf
ins
call
ficomp
shl
shld
retw
dec
sub
mov
scas
jb
xor
inc
test
and
das
xlat
push
xchg
daa
jae
dec
(bad)
mov
or
les
cdq
mov
mov
pushf
xchg
cmps
mov
sub
cmp
(bad)
pop
cld
(bad)
xor
jge
mov
adc
(bad)
jl
fcmovnbe
inc
enter
out
ret
mov
test
adc
ror
aam
cmps
in
ficomp
lds
cwde
xor
xchg
fs
sbb
loop
jg
leave
xor
out
outs
add
das
aas
jb
cmp
dec
push
fs
pop
mov
cli
xor
ds
cmps
mov
xchg
repz
inc
and
or
jg
pop
push
dec
jno
add
push
(bad)
(bad)
call
push
call
ja
jp
cli
push
call
mov
out
push
and
and
sub
xchg
test
mov
push
mov
xlat
fcmovne
jnp
pop
xchg
cld
push
je
or
sbb
pop
test
inc
stos
sbb
push
cmp
sub
push
out
mov
add
shl
sbb
in
xor
cmps
fistp
add
fcomp
inc
adc
cmp
push
mov
jle
jle
dec
ret
stos
mov
and
aad
inc
rcr
leave
das
aad
(bad)
paddusw
jb
adc
cmp
repnz
jp
je
cmp
cmp
push
cmp
jmp
fisub
pop
movs
add
pop
xor
inc
popa
and
(bad)
test
lahf
rcr
rcl
mov
fnstenv
(bad)
hlt
les
mov
ja
outs
push
pop
xchg
fld
call
ficomp
pop
aas
(bad)
std
lods
sahf
xor
mov
push
sub
arpl
aas
test
adc
xchg
cmp
mov
push
(bad)
jmp
push
mov
add
cmp
inc
int3
mov
xchg
push
add
cmps
call
adc
retf
(bad)
movs
add
mov
dec
cdq
push
mov
in
inc
cld
inc
sti
out
int3
sub
in
es
mov
repnz
leave
out
jo
add
inc
scas
cmp
lods
pop
rol
rep
mov
mov
xchg
push
lods
cmc
les
push
xchg
or
xor
mov
push
les
jp
fldcw
fdiv
cmp
jmp
in
fsubr
bound
sbb
psubsw
push
fs
and
cs
sti
sub
dec
mov
mov
adc
ja
test
jae
or
push
fdivr
ret
fwait
or
and
mov
push
movs
add
(bad)
call
in
retf
loop
retf
jbe
or
rcr
jnp
call
in
add
mov
in
rol
sub
push
aam
push
aam
imul
ret
call
and
cmp
add
mov
pushf
call
add
add
test
cmc
cmp
pusha
pushf
lea
jne
jmp
rcl
xchg
mov
mov
mov
ins
cmc
ja
jo
cmc
pop
and
jnp
(bad)
sbb
dec
ja
(bad)
loop
imul
add
jo
lahf
or
js
fidivr
push
sub
jne
xchg
ins
or
cld
and
xor
push
call
add
fsub
add
add
push
sbb
sub
dec
pop
inc
cs
mov
push
rol
mov
cmp
sbb
add
(bad)
mov
call
push
mov
push
in
shl
push
dec
jle
in
sub
scas
test
mov
or
stos
push
and
scas
movs
inc
in
out
mov
ds
hlt
movs
cwde
mov
xor
mov
xchg
fs
into
data16
fld
popf
push
push
pusha
mov
lea
jmp
push
call
xlat
mov
pop
cmp
xlat
and
add
jno
mov
in
inc
pop
cwde
fist
sbb
ins
leave
mov
outs
mov
hlt
neg
mov
das
fistp
xor
bound
push
mov
fmul
cs
xchg
or
hlt
js
sbb
cmp
mov
mov
mov
inc
outs
jg
sub
xor
mov
and
test
jge
sbb
out
add
shl
mov
mov
test
dec
out
out
icebp
jae
mov
mov
cmc
mov
ins
sub
stc
push
jne
ins
outs
repz
inc
sub
fnstcw
fdivr
repnz
xor
push
stos
or
pop
ret
shr
push
xchg
mov
cmp
stos
out
inc
lea
ret
repz
push
jno
fs
fimul
adc
sbb
mov
mov
ja
mov
fnstenv
sub
cmp
cdq
jbe
mov
xlat
jge
jmp
shr
repnz
ret
std
popa
sti
arpl
jne
xor
sbb
mov
jb
inc
adc
movs
adc
imul
sub
adc
inc
or
or
ja
scas
or
and
or
sbb
mov
enter
aad
out
int3
cwde
sbb
pusha
sub
and
or
lea
ja
add
ror
add
adc
mov
bt
jmp
push
inc
cmc
mov
cmp
mov
jmp
push
call
mov
and
add
push
add
xor
and
in
stos
icebp
fdiv
pop
adc
aam
dec
arpl
push
mov
jnp
mov
xchg
xor
dec
std
cs
sbb
stos
cwde
mov
in
out
pop
cmp
mov
add
cmp
repz
sbb
inc
pop
in
dec
stos
mov
adc
inc
push
jb
fs
and
in
aam
adc
popa
dec
(bad)
xchg
sti
lods
or
add
jge
ret
pushf
and
add
sahf
xor
mov
sub
mov
or
jle
inc
ss
jge
bnd
cmp
neg
jb
and
sub
and
adc
add
ficomp
push
xlat
mov
xor
pop
or
inc
fimul
sbb
ins
or
cmc
fwait
aam
popa
add
cmp
mov
or
lods
mov
fs
sub
inc
and
(bad)
or
cdq
push
stc
pop
jmp
xor
in
pop
fist
lods
jmp
inc
lds
or
dec
push
fstp
mov
dec
push
mov
or
in
or
int
xor
cdq
dec
mov
and
jno
cmp
js
or
call
cmp
and
rcr
inc
aaa
push
bound
xchg
jp
jp
clc
xor
cmp
adc
aas
into
add
or
out
jl
ficom
adc
xchg
into
je
push
rcr
(bad)
cmp
div
out
in
or
pop
mov
cmps
call
jp
clc
push
jno
call
push
add
push
dec
push
call
mov
mov
(bad)
fucomi
lahf
hlt
out
ss
fisttp
jb
mov
pop
hlt
icebp
repz
adc
aas
in
arpl
mov
aaa
dec
dec
mov
cmc
inc
sbb
inc
fstp
xchg
movs
adc
lods
or
fbstp
rcr
in
mov
push
popf
mov
xchg
jbe
scas
fsub
dec
and
pop
in
add
fcmovnu
pusha
rcl
and
dec
push
(bad)
cmp
mov
jne
fisub
test
fstp
mov
dec
fwait
js
push
jp
arpl
stos
movs
jno
cmp
lock
dec
mov
push
fbld
mov
pushf
test
popf
movs
add
xor
(bad)
xlat
in
out
inc
sbb
mov
jge
sti
dec
or
lods
fist
xor
fstp
xor
push
pop
mov
jecxz
and
ret
ss
inc
and
xchg
push
js
lock
(bad)
fsubrp
in
outs
fcmovu
repz
and
in
sub
(bad)
mov
aas
add
jge
shl
mov
push
cs
aad
inc
fnclex
(bad)
jno
xchg
sub
mov
sbb
xlat
fist
add
push
mov
outs
jl
xchg
fisttp
mov
repz
sti
iret
scas
inc
cwde
cwde
mov
fcomi
pushf
sub
popf
cli
sbb
popw
inc
mov
jbe
push
enter
(bad)
and
es
shr
pop
pop
push
mov
sub
movs
cmp
mov
fisubr
or
or
fstp
push
inc
in
(bad)
(bad)
(bad)
jno
shr
push
xor
popf
jmp
inc
(bad)
div
adc
sahf
fwait
cmp
mov
js
test
std
or
into
jns
sub
(bad)
dec
outs
adc
inc
or
mov
pop
pop
or
mov
fiadd
pop
pop
sub
cmc
jl
repz
fild
inc
clc
jne
cmp
xchg
fstp
lods
jl
push
enter
out
inc
retf
add
fist
adc
dec
push
test
xor
dec
add
mov
ja
fisttp
xchg
popa
in
pushf
and
fistp
ja
fist
test
mov
push
and
or
neg
movs
sub
lods
outs
sbb
fs
retf
leave
fstp
or
popf
mov
push
test
cmp
xchg
mov
add
mov
fild
out
sbb
sahf
scas
or
ficomp
inc
loope
pop
fs
cmp
std
rol
mov
jge
mov
scas
fstp
dec
push
enter
pavgw
loop
and
mov
mov
jg
loop
cmp
lods
pop
cmc
sbb
pop
xchg
aaa
enter
fld
cmps
add
ja
sub
sahf
fisttp
xchg
add
iret
cmp
jmp
xor
aas
xchg
lea
jmp
mov
test
jg
jbe
aad
imul
pushf
jmp
movs
sbb
fstp
pop
aam
pushf
pop
int3
in
fisub
sbb
in
mov
and
fsub
sahf
femms
cmp
not
pop
pop
pop
sbb
ins
in
jecxz
sbb
jo
ins
sti
pop
pop
mov
mov
shl
jne
cmps
pop
mov
cld
pop
ins
pop
movs
sub
retf
pop
loopne
and
mov
mov
pop
shl
cmps
or
movs
fld
pop
std
adc
pop
or
adc
fdivr
and
in
fs
sub
cdq
std
sti
dec
and
(bad)
add
jo
add
xor
repnz
and
pop
sbb
pop
pop
lods
jmp
push
xor
pop
or
fisttp
pop
shl
mov
aad
sbb
xor
cmc
pop
repz
xchg
rcl
aaa
retf
fistp
push
fist
cmps
add
(bad)
adc
sub
rol
jns
mov
out
in
aas
mov
repz
(bad)
mov
test
pop
jno
or
(bad)
mov
leave
out
xor
pop
data16
(bad)
cli
gs
outs
fcom
jbe
loop
mov
rcl
pop
popf
sub
xchg
out
iret
mov
ja
pop
ins
es
popf
mov
in
push
sbb
pusha
adc
cmps
cmp
and
and
and
out
sub
cdq
and
ds
and
jecxz
xchg
pusha
and
ins
stos
movs
repz
mov
cld
(bad)
jbe
pushf
cmc
cld
cli
fs
dec
in
push
cld
sub
xchg
je
push
jecxz
shl
push
fsubr
jle
jecxz
fiadd
mov
fsubr
std
(bad)
sbb
(bad)
cmp
mov
std
xor
jmp
popf
fcmovbe
cmc
adc
aad
cmp
mov
es
mov
movs
fisubr
(bad)
fiadd
cmp
mov
pop
in
sbb
pop
in
jle
imul
mov
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
fsub
push
int3
pop
add
pop
lods
pop
mov
jge
inc
pop
or
adc
adc
adc
adc
adc
adc
add
ins
or
add
pop
mov
out
push
and
jle
mov
jne
test
xchg
ret
les
hlt
fsub
sub
loop
cmp
test
jne
bound
cmp
cmp
dec
and
fistp
call
fsub
inc
cwde
sbb
mov
loop
and
mov
pop
sti
sub
mov
jl
js
jge
jge
cmp
inc
ret
cmp
ds
xchg
and
or
adc
jmp
sub
jecxz
sar
xlat
je
arpl
adc
aam
repnz
inc
retf
aad
xor
shr
test
ret
pusha
jl
hlt
je
hlt
xor
retf
hlt
push
test
sub
inc
fs
test
dec
adc
cmp
ins
jl
mov
sbb
inc
dec
sbb
push
je
(bad)
mov
(bad)
fsubr
push
fcomp
lods
jno
popf
out
sub
xor
fistp
pop
fs
jl
cmp
sti
add
jmp
and
and
sub
cmp
xchg
adc
repz
inc
sbb
fld1
push
aad
sub
clc
inc
repz
jmp
xor
repz
fdivr
in
xor
cmp
dec
mov
out
jmp
jmp
loope
sbb
pop
push
sbb
push
fs
mov
(bad)
in
arpl
sbb
pop
mov
jmp
sub
fucom
loop
sbb
data16
popf
and
or
(bad)
cmp
sub
and
sbb
dec
out
cli
add
sti
sti
mov
rcr
inc
mov
jge
pop
xor
fsub
outs
mov
push
xchg
fsub
test
imul
in
ja
push
movs
sbb
scas
inc
out
jbe
gs
and
xor
in
jle
inc
int
and
popa
mov
jp
jmp
cld
cmc
pop
fild
fistp
loopne
pop
jge
cld
fisubr
inc
jle
xor
add
pop
sbb
jmp
cld
movs
std
push
sbb
pusha
mov
aam
inc
sti
std
leave
jo
das
ins
push
cld
in
mov
push
sbb
sar
cli
push
ret
ins
test
out
xchg
adc
daa
ins
push
add
add
cld
mov
cmp
sub
and
xor
cld
or
cmp
xchg
fdivr
mov
call
pop
xor
mov
pop
test
mov
pop
call
jmp
pop
les
jno
or
pop
mov
fwait
pop
stos
fdivp
and
inc
push
pop
xor
in
push
pop
xor
leave
push
push
xchg
cmp
mov
push
pop
and
push
xor
mov
out
sub
adc
sub
fmul
cs
int
pop
add
fcomp
mov
xchg
int
fimul
pushf
cld
xor
lock
cmp
mov
pushf
mov
dec
add
sbb
fsub
jmp
jl
fs
add
jg
inc
je
pushf
cmp
bound
cmp
test
mov
pop
js
es
fisttp
cmp
pushf
outs
mov
movs
pushf
xchg
add
adc
push
cmps
add
inc
push
ins
jmp
sbb
xor
or
mov
fwait
cmp
cmp
sti
je
jl
fadd
ins
cmp
or
fs
pop
cmp
lods
cmp
movs
cmp
sub
pushf
data16
xchg
jl
cmp
add
test
pop
cmp
xor
push
pushf
mov
cld
mov
in
adc
imul
xchg
sbb
xor
inc
adc
sar
pop
or
lods
pop
add
mov
std
gs
jmp
push
pop
movs
les
or
call
mov
popa
cmp
jmp
jl
hlt
mov
pop
cld
in
std
add
jmp
jl
adc
dec
sbb
cmc
repz
and
sub
pop
inc
imul
sbb
push
in
cli
xchg
movs
loope
push
mov
je
loope
dec
pop
cmc
movs
sbb
mov
cmp
fidivr
in
dec
sbb
ja
push
mov
dec
(bad)
loopne
out
mov
cmc
jmp
pop
sti
cli
add
dec
sbb
adc
repz
int
cmc
sbb
sti
rep
dec
aam
sti
arpl
dec
int
cmc
rcr
jmp
movs
mov
mov
adc
jmp
out
pop
mov
sbb
jmp
adc
mov
addr16
mov
jecxz
pop
and
adc
loopne
jmp
aad
cmc
sbb
ficom
dec
sbb
mov
jmp
cdq
push
sbb
cmps
sti
push
mov
and
sti
sub
loope
dec
in
cli
adc
mov
sti
push
sbb
addr16
in
cli
cmp
inc
adc
adc
inc
(bad)
dec
(bad)
cmc
repz
jmp
repnz
push
cli
pop
movs
loope
push
pop
cmc
sbb
add
popf
or
dec
in
cli
ins
mov
lahf
sahf
or
(bad)
repz
repnz
pop
test
jecxz
in
mov
xchg
add
cmc
jg
dec
jecxz
sbb
dec
mov
push
sub
pop
arpl
rol
sbb
jecxz
xor
mov
or
out
repz
cli
ret
(bad)
pop
in
popf
daa
in
jnp
call
pop
add
cs
jp
jno
leave
jbe
lahf
cmp
inc
push
ins
sbb
movs
repz
hlt
or
adc
sbb
and
sub
xor
cmp
push
inc
hlt
dec
leave
push
hlt
pop
pusha
sbb
outs
jl
test
pushf
pusha
movs
sbb
les
fsub
sbb
cli
hlt
outs
cld
movs
add
adc
sbb
movs
inc
mov
hlt
pop
pusha
sbb
jne
jge
test
popf
pusha
movs
sbb
movs
lds
frstor
sbb
cli
cmc
outs
std
movs
push
mov
hlt
push
pusha
sbb
cli
outs
movs
inc
mov
hlt
pop
pusha
data16
jbe
jle
xchg
sahf
pusha
cmps
sbb
movs
(bad)
mov
hlt
fisub
sbb
cli
imul
movs
pop
mov
hlt
pop
pusha
daa
sbb
cli
aaa
outs
aas
movs
inc
mov
hlt
pop
pusha
sbb
ja
jg
xchg
lahf
pusha
cmps
sbb
movs
(bad)
mov
push
fbstp
jmp
sbb
out
sbb
cli
jmp
movs
or
and
sbb
cli
cmp
movs
dec
mov
hlt
pusha
pusha
push
outs
and
cwde
hlt
mov
cli
mov
mov
hlt
loopne
call
outs
add
push
sbb
and
sbb
cli
cmp
movs
dec
mov
hlt
popa
pusha
imul
and
pusha
test
outs
shl
fucomp
ds
sbb
mov
hlt
push
pusha
push
sbb
cli
push
outs
movs
cs
hlt
inc
pusha
dec
sbb
pop
outs
movs
outs
mov
hlt
xchg
sbb
movs
scas
mov
hlt
(bad)
pusha
into
sbb
xor
mov
leave
and
add
jbe
sbb
adc
cli
sub
mov
hlt
push
inc
test
test
lods
cli
jae
push
test
dec
(bad)
fidiv
dec
(bad)
cmp
dec
fwait
push
and
fld
mov
mov
add
pop
mov
sbb
dec
jbe
mov
lods
sbb
int3
mov
js
gs
ins
sbb
jge
test
push
popf
hlt
movs
pusha
lods
sbb
movs
int
aad
xchg
fidivr
and
sbb
cli
(bad)
outs
pop
movs
bsf
dec
push
pop
hlt
daa
pusha
das
sbb
cli
aas
outs
inc
movs
dec
mov
hlt
addr16
outs
sbb
jg
xchg
push
lahf
hlt
cmps
pusha
scas
sbb
movs
iret
mov
fld
loope
(bad)
jmp
mov
hlt
adc
sbb
cli
sub
movs
cmp
push
pusha
pop
sbb
push
jb
jp
or
hlt
xchg
pusha
call
movs
mov
retf
pusha
ficomp
loop
jmp
dec
push
or
adc
sbb
cli
sub
movs
cmp
push
pusha
pop
sbb
imul
jnp
or
hlt
xchg
pusha
fwait
sbb
movs
mov
retf
hlt
shl
call
hlt
mul
sbb
cli
or
movs
sbb
xor
sbb
dec
outs
push
movs
pop
mov
hlt
jo
js
cmp
outs
nop
movs
cwde
mov
hlt
mov
mov
outs
shl
push
call
sbb
cli
or
movs
sbb
xor
sbb
dec
outs
push
movs
pop
mov
hlt
jno
jns
cmp
cdq
mov
hlt
mov
mov
outs
shl
push
jmp
sbb
cli
or
movs
sbb
xor
sbb
dec
outs
push
movs
pop
mov
hlt
jb
jp
cmp
outs
xchg
movs
call
mov
mov
outs
shl
push
jmp
cli
or
movs
sbb
xor
sbb
dec
outs
push
movs
pop
mov
hlt
jae
jnp
cmp
outs
xchg
movs
fwait
mov
hlt
mov
mov
outs
shl
fwait
mov
(bad)
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
sbb
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
xchg
sbb
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
mov
xchg
sbb
retf
push
lahf
dec
arpl
jmp
retf
push
hlt
sbb
push
lahf
dec
arpl
jmp
sti
and
cmp
fwait
xchg
mov
scas
sub
mov
jl
shr
jae
push
sbb
fs
push
lahf
dec
arpl
jmp
xchg
sbb
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
mov
xchg
sbb
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
hlt
dec
mov
(bad)
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
sbb
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
retf
push
lahf
dec
arpl
jmp
jne
add
cmp
stc
mov
enter
cld
retf
(bad)
xor
sti
and
sbb
outs
test
push
mov
les
sbb
add
cmp
(bad)
jmp
add
sar
mov
jmp
cmp
push
mov
scas
sub
pop
lds
jb
sbb
fcom
mov
adc
enter
mov
mov
push
push
fs
mov
pushf
and
cmp
cmp
sub
scas
fdivr
sti
and
dec
stc
lahf
jns
mov
xchg
jge
mov
mov
cmps
fst
je
fst
sbb
clc
cmp
aad
mov
mov
pop
iret
jg
sbb
arpl
sbb
out
sbb
int
jne
pop
sbb
in
push
cli
ins
xlat
hlt
in
fs
mov
sbb
cmp
push
sbb
fadd
cmp
sbb
hlt
pop
shl
pop
fcomi
sbb
jcxz
sar
sbb
mov
sbb
pop
adc
push
sbb
jmp
jecxz
cdq
jbe
cmc
sbb
cmp
pusha
sub
dec
push
cli
add
hlt
inc
mov
retf
push
adc
push
dec
mov
sbb
pushf
test
gs
sbb
pusha
push
hlt
sbb
jae
mov
in
jae
sub
mov
gs
sti
repnz
cmc
gs
lock
sbb
fwait
gs
sbb
push
sti
mov
mov
sbb
xchg
sbb
ja
lock
pop
mov
sbb
inc
rcr
mov
cmp
in
sbb
ds
loop
ss
retf
jmp
sbb
repnz
gs
mov
adc
pop
add
lods
push
lahf
pop
or
sbb
rcr
sbb
adc
sbb
pushf
mov
sbb
mov
mov
mov
sbb
sub
sbb
cs
xchg
sbb
xor
sbb
cs
xchg
sbb
cmp
sbb
dec
pop
adc
inc
inc
sbb
push
inc
sbb
dec
inc
sbb
scas
fadd
or
inc
sbb
sub
xchg
sbb
pop
xchg
sbb
mov
loopne
arpl
data16
ret
test
imul
push
mov
loopne
arpl
data16
jle
mov
push
movq
dec
movs
dec
mov
(bad)
(bad)
mov
retf
push
mov
dec
xchg
sbb
fstp
test
ror
sbb
pop
and
xchg
data16
mov
xchg
mov
pop
out
xchg
pop
push
pop
mov
retf
xor
inc
lea
fdiv
cs
out
loop
mov
add
mov
mov
repz
call
dec
cmp
inc
bound
add
sub
or
sub
and
sbb
inc
rol
cmp
inc
xchg
dec
pop
push
xchg
pop
outs
aad
push
pop
xchg
int3
fbld
rcl
mov
jecxz
sbb
enter
fs
je
xchg
and
mov
pushf
lods
jg
outs
fsub
movs
fs
ja
jge
adc
mov
mov
fnstcw
inc
aam
sti
adc
push
in
lods
sti
push
push
or
push
jecxz
jecxz
add
cmp
mov
adc
gs
xchg
inc
or
sbb
cmps
scas
xchg
xor
push
pop
sti
adc
adc
jecxz
pushf
nop
rol
(bad)
sti
mov
cmc
into
test
sub
in
stos
sbb
push
imul
add
in
push
add
pushf
shl
shl
stc
outs
test
pop
pop
pop
mov
xor
cmp
mov
test
sbb
add
fchs
add
dec
cs
retf
sub
add
sbb
sti
cmps
sbb
sub
stos
sbb
cmp
fbld
ficomp
pushf
into
adc
loopne
push
adc
mov
mov
push
call
sbb
aas
jge
sub
arpl
jbe
sub
clc
and
sbb
dec
fisubr
std
scas
sbb
cmp
xor
push
jne
adc
push
inc
jmp
es
pop
xchg
ficom
cmp
mov
out
cld
push
jae
xchg
je
jge
pusha
retf
call
sub
cmp
cmc
xor
sub
cli
and
adc
add
stos
pop
pushf
push
sti
(bad)
adc
fisttp
jp
ins
mov
sbb
and
sbb
mov
(bad)
nop
inc
(bad)
lods
mov
jbe
sti
hlt
fs
ins
jg
xor
and
lahf
xor
dec
sar
jb
fsubr
push
cli
clc
sub
fld
ins
mov
pushf
mov
je
mov
int3
ds
std
in
sbb
pusha
or
sub
cld
push
dec
pop
rcr
aam
sbb
and
sbb
mov
aam
and
sbb
out
xchg
add
aad
fcomi
push
pop
cmps
outs
daa
pop
jne
jg
movs
sbb
adc
cs
(bad)
adc
push
xchg
push
nop
daa
push
dec
cmps
jnp
ficomp
push
push
and
mov
pop
aad
cmp
or
scas
jle
ror
mov
cmp
lahf
lahf
or
test
inc
das
and
imul
test
cmp
adc
jo
jg
leave
outs
fdiv
jle
stc
jmp
jecxz
cwde
popa
sbb
xchg
ds
enter
fs
imul
jle
into
adc
add
pop
and
sbb
shr
jp
or
fwait
imul
sub
xor
cmp
inc
inc
jmp
jecxz
mov
and
std
cmp
cld
cmp
mov
std
mov
mov
pusha
out
in
in
std
jmp
out
cld
jmp
std
push
and
outs
cld
imul
pusha
sub
cs
sub
cld
sub
lods
pusha
test
scas
std
stos
lods
and
push
or
or
push
std
or
cld
or
mov
in
mov
mov
cld
mov
dec
pusha
dec
in
dec
std
dec
dec
and
dec
cld
dec
push
int3
pusha
enter
retf
leave
ins
iret
cld
retf
push
jecxz
out
in
loope
and
ins
out
loop
fs
pusha
in
data16
bound
popa
ins
addr16
arpl
and
and
es
and
cld
and
movs
pusha
mov
movs
and
push
add
add
push
std
add
cld
add
test
in
xchg
add
sbb
pusha
inc
in
inc
std
inc
inc
and
inc
cld
inc
push
les
in
(bad)
std
ret
shr
cs
test
jmp
pusha
jb
and
push
pusha
jno
and
push
pusha
jae
and
push
pusha
xor
ss
push
pusha
xor
xor
jg
aaa
xchg
push
pusha
xor
mov
push
pusha
mov
and
jg
mov
push
pusha
mov
and
jg
adc
push
pusha
adc
push
xchg
push
pusha
adc
adc
jg
pop
xchg
push
pusha
adc
xchg
xchg
push
pusha
nop
jg
xchg
xchg
push
pusha
xchg
jg
xchg
xchg
push
pusha
xchg
jg
xchg
xchg
push
pusha
xchg
jg
push
xchg
push
pusha
push
jg
push
xchg
push
pusha
push
jg
push
xchg
push
pusha
push
jg
push
xchg
push
pusha
push
jg
aam
push
pusha
sar
(bad)
xchg
push
pusha
sar
aad
push
pusha
sar
xlat
xchg
push
pusha
sar
stc
lods
(bad)
frstor
push
fisub
in
pop
std
pop
pop
and
push
cld
sbb
in
sahf
std
popf
lahf
and
ins
std
cld
cld
push
(bad)
pusha
jl
jle
jge
sub
cmc
push
icebp
pusha
hlt
in
lock
div
sar
(bad)
ds
or
xchg
mov
jl
push
xor
or
push
sub
lods
in
or
mov
ins
jecxz
fs
and
movs
fucomp
test
ds
and
ins
je
xor
mov
adc
xchg
xor
pop
mov
imul
inc
mov
push
sbb
addr16
sbb
dec
mov
dec
popf
mov
cmc
imul
lods
aad
mov
mov
jnp
fucomi
retf
adc
je
mov
ret
xor
push
test
mov
mov
ror
aad
jecxz
cmps
fisubr
lds
dec
fist
pushf
mov
ins
pop
cld
popf
push
frstor
in
fdivrp
pop
fbld
fsubr
ficom
popf
pop
jg
mov
pop
pushf
ins
mov
ds
lds
daa
dec
jae
fwait
inc
out
outs
aaa
adc
(bad)
aas
pop
xlat
outs
dec
pop
inc
and
cmp
int
scas
xchg
cwde
sti
aam
popa
fwait
xor
push
cmc
pusha
jbe
idiv
ja
and
ins
icebp
add
mov
mov
hlt
pop
add
mov
in
and
ins
loope
jecxz
mov
std
repz
and
sbb
cmp
pop
pusha
pushf
in
fdivr
pop
frstor
ficomp
std
mov
pop
and
jne
dec
dec
sti
jne
popa
fprem
adc
push
fld
dec
fs
test
shl
cdq
rcl
repz
outs
repz
mov
push
fstp
aas
or
dec
aaa
sbb
adc
adc
bnd
inc
ins
loope
sbb
xor
(bad)
pop
inc
gs
fs
(bad)
out
sub
jbe
popf
int3
pop
push
iret
stos
ror
outs
ficomp
repz
mov
stos
xor
pop
gs
pusha
pop
in
cmps
fcomp
pop
arpl
popf
gs
jl
std
push
test
xchg
jge
movs
ficomp
popf
in
pop
push
fbld
mov
fldcw
jl
(bad)
hlt
sbb
fwait
push
pop
std
cmp
jl
mov
fadd
movs
jecxz
fisubr
push
push
push
jmp
in
mov
pop
mov
outs
gs
call
arpl
sahf
fs
cdq
pop
add
adc
mov
fistp
cmc
cdq
sbb
push
pop
in
sti
push
call
adc
cmp
and
(bad)
pushf
jge
fnsave
lahf
cmp
mov
out
cmp
sahf
jge
or
pop
push
(bad)
mov
fbstp
fstp
hlt
pop
js
sbb
sbb
jecxz
pop
test
pop
sbb
pop
fucomip
fiadd
adc
cs
and
fisttp
fdivr
xor
test
cmp
jmp
cmps
fistp
fmul
xor
fmul
push
ftst
xor
pop
push
hlt
ficomp
xchg
sti
xchg
dec
pop
push
xchg
retf
hlt
xor
cmps
fnsave
sbb
push
hlt
pop
cmps
fist
in
call
sub
mov
pop
lea
popf
addr16
adc
ds
push
pop
xor
mov
sbb
sti
sbb
outs
mov
fwait
mov
add
(bad)
adc
push
popf
sbb
sbb
movs
mov
pop
fbld
push
fwait
test
sbb
pop
mov
mov
lods
addr16
push
hlt
push
cmps
pop
push
hlt
pop
lahf
pop
xchg
adc
pop
adc
mov
sub
data16
mov
push
fdivr
mov
pop
into
hlt
clc
aas
fs
sbb
sub
cmp
pop
mov
mov
mov
(bad)
mov
jnp
jecxz
cmp
cwde
cmp
pop
(bad)
mov
clc
sbb
cdq
inc
jl
add
hlt
pop
mov
pop
mov
pop
cmps
cmp
hlt
cdq
cmps
fidivr
cs
mov
cmc
jge
cli
cmp
jne
out
in
and
std
push
frndint
pop
push
jmp
in
std
(bad)
frstor
jle
pop
cld
pop
push
or
in
or
jmp
and
es
(bad)
enter
xor
ds
xchg
cmc
adc
pop
and
push
pop
push
dec
pop
fwait
int
cmps
loop
pop
push
outs
pop
jmp
mov
arpl
or
mov
push
lahf
das
lods
push
mov
(bad)
cld
jg
xchg
pop
fwait
out
add
daa
in
push
sub
dec
jmp
(bad)
das
xchg
jle
aaa
inc
and
pop
js
lahf
gs
or
push
mov
fdivrp
fnsave
cmp
test
and
loopne
xor
pop
jae
jg
push
cmp
test
pushf
dec
std
retf
pop
pop
inc
int3
xor
out
aas
movs
es
mov
scas
pop
hlt
jle
fcom
enter
aam
jl
stos
mov
lea
or
push
stc
pop
sub
sub
clc
add
cli
sti
inc
idiv
add
jns
fsubrp
push
dec
xchg
pop
mov
fisttp
jmp
jns
aam
cmc
ins
sbb
jno
pop
(bad)
push
lahf
mov
cld
or
cdq
pusha
sub
mov
jmp
cld
cld
push
lea
in
scas
std
aas
iret
and
call
pusha
call
setp
cli
test
fs
(bad)
pop
(bad)
data16
mov
repz
retf
pop
jae
and
clc
jbe
xor
inc
mov
fld
cmp
mov
or
(bad)
dec
cdq
inc
xor
(bad)
mov
fnstsw
scas
fisub
repnz
dec
xor
pop
ss
fcomi
xchg
loope
pop
sub
(bad)
ins
stos
push
fcmovnb
or
push
mov
mov
mov
mov
jg
adc
bound
fld
pop
outs
mov
fstp
fstp
mov
out
fcomi
fs
xor
adc
jno
int
sub
call
std
lock
fcmovnbe
mov
ins
dec
xchg
adc
mov
jge
add
sub
mov
in
add
pop
test
lods
(bad)
jp
dec
inc
in
js
pop
mov
jl
pop
pusha
out
add
push
xchg
dec
cmp
pop
es
jnp
stos
and
leave
cld
sub
test
push
push
pop
xchg
paddw
pop
outs
and
and
push
jp
cmp
fdivr
push
std
mov
and
int
pop
push
sahf
pusha
dec
in
mov
sbb
sub
call
push
lea
cmc
and
ins
popa
mov
cld
popf
mov
push
jl
dec
in
cs
and
or
fs
fmul
ss
dec
cli
and
push
mov
in
js
out
lahf
and
(bad)
cld
scas
push
pop
pusha
push
in
int
lea
cld
or
mov
or
retf
cmp
cdq
ins
sbb
and
cld
jg
sub
in
leave
jle
cwde
cwde
sbb
sbb
out
push
sub
or
and
mov
cmp
mov
scas
std
cmp
es
and
and
push
sub
retf
push
fs
stos
std
sbb
cld
sbb
fbld
fs
and
ins
cmp
sbb
mov
sbb
cld
fistp
outs
pusha
into
in
push
std
lea
dec
fs
mov
jg
test
pusha
test
sub
scas
cld
sbb
test
dec
and
cld
pop
push
pop
pusha
(bad)
pop
fwait
ds
sbb
stos
cmp
or
mov
es
jmp
xchg
dec
or
fild
je
and
or
jmp
add
jecxz
inc
std
jl
and
push
xchg
pusha
jge
ja
jg
and
ins
test
fs
push
inc
in
fsubrp
movs
scas
shl
sbb
add
es
bound
pop
pop
jecxz
(bad)
pop
fadd
mov
cmp
mov
sbb
scas
fsub
sbb
call
or
sub
fstp
jno
xor
push
adc
outs
push
call
cmp
xchg
jecxz
cmp
fcmove
jge
dec
lds
pop
dec
mov
fbld
jecxz
mov
into
mov
std
adc
xchg
retf
adc
loope
in
loopne
mov
test
adc
(bad)
push
int3
mov
or
mov
test
cmp
pop
fsub
addr16
fld
cld
mov
adc
fiadd
(bad)
fstp
pusha
or
call
stos
cld
inc
fstp
fcmovne
cmp
mov
push
jle
fidiv
pop
popf
fst
and
mov
pop
jp
dec
ret
ss
pushf
(bad)
es
sbb
xor
or
push
cs
mov
fist
adc
arpl
fld
sub
mov
pop
(bad)
(bad)
in
lods
add
(bad)
arpl
inc
mov
ret
xor
hlt
rol
push
jle
movs
lock
add
leave
(bad)
xchg
and
xor
pusha
and
mov
xor
fucom
fs
cmps
sub
jle
or
push
dec
(bad)
hlt
push
mov
dec
(bad)
fs
out
test
mov
mov
std
xchg
jl
test
ins
mov
cmc
imul
push
mov
pusha
sbb
ret
sbb
jnp
pop
or
pop
outs
push
mov
xchg
out
dec
sub
rcr
call
jecxz
inc
push
pusha
cli
add
icebp
cwde
cmp
out
adc
push
push
mov
mov
or
cdq
fbstp
pop
ror
ja
loop
xchg
cs
enter
stc
jnp
sar
and
(bad)
ffreep
das
cmp
in
neg
sbb
fdivr
scas
fs
aad
cmc
into
test
clc
outs
loop
dec
cmp
scas
fcmovnu
aam
bound
stc
xor
fistp
imul
pop
ins
ds
and
sbb
rol
jno
out
(bad)
or
pop
mov
and
mov
adc
mov
(bad)
sbb
in
add
in
xor
cmc
fcmovnb
fstp
adc
mov
sbb
sbb
pop
ja
shr
fstp
or
fist
jbe
mov
and
fstp
pushf
(bad)
pop
and
xor
inc
fcmovnbe
mov
addr16
xchg
mov
cwde
and
xor
mov
xor
movs
icebp
fild
mov
in
cmp
adc
(bad)
fistp
ss
push
gs
icebp
hlt
mov
rcr
adc
mov
shr
sar
daa
lods
mov
ja
cli
sbb
jg
inc
pop
leave
xor
in
pop
pop
cmps
inc
jecxz
lds
mov
mov
addr16
call
ja
fild
into
jmp
fnstsw
sbb
cdq
cmc
mov
adc
inc
jns
sub
ja
pop
addr16
cli
pop
fist
scas
test
sub
xor
push
cdq
ror
(bad)
or
je
cmps
add
sbb
mov
xchg
ret
inc
xchg
xchg
shl
push
sbb
mov
push
inc
sbb
fcom
repz
xchg
dec
mov
cmp
mov
fisttp
neg
sti
dec
mov
retf
repz
and
in
pop
push
sahf
adc
in
jae
adc
scas
jnp
mov
push
outs
add
sub
aaa
mov
repnz
add
xor
sub
fild
and
sti
push
cld
push
xor
test
sahf
add
daa
cdq
inc
hlt
fild
retf
or
arpl
pop
jmp
fstp
adc
add
mov
pop
adc
rcr
(bad)
outs
cmp
je
sahf
(bad)
fidiv
mov
fist
sbb
and
jge
stos
mov
mov
js
dec
inc
mov
or
jge
sahf
and
in
add
repz
and
outs
fiadd
cwde
pop
fwait
repz
inc
jns
es
dec
xchg
addps
add
pop
fwait
or
mov
(bad)
jnp
hlt
shr
(bad)
cmp
jae
scas
cwde
and
mov
xchg
xor
cdq
mov
xchg
in
call
cmp
fcmovnbe
pop
add
jb
iret
lods
and
inc
enter
pop
mov
or
ss
(bad)
pop
adc
sbb
push
cmp
or
mul
sar
xchg
test
enter
out
jecxz
inc
aaa
(bad)
xchg
jo
dec
ds
fimul
call
inc
imul
jb
mov
mov
add
push
xchg
ret
jmp
xchg
(bad)
inc
sub
aaa
mov
lock
outs
add
push
mov
xor
mov
les
inc
jnp
push
fisubr
mov
fistp
pop
xchg
xchg
fldlg2
ret
js
mov
(bad)
pushf
mov
lock
mov
fcom
(bad)
inc
xlat
stc
int3
ins
pop
and
xchg
jae
fucomip
and
test
xor
mov
fcomp
mov
fcmovnb
(bad)
in
push
xlat
inc
stos
(bad)
xchg
xor
enter
ret
mov
xchg
mov
imul
mov
xchg
leave
pop
sbb
xlat
popa
inc
or
xchg
sbb
fiadd
pop
xchg
mov
inc
mov
fcmovnbe
inc
mov
push
inc
pop
sar
cmp
in
cmp
xor
hlt
inc
movs
xor
jmp
out
dec
adc
into
push
out
mov
mov
movd
jno
sub
mov
ficomp
sbb
fist
jo
test
(bad)
fld
sub
dec
cmps
pop
(bad)
fwait
in
aad
rcl
lods
jecxz
test
out
fimul
jmp
add
cmp
fstp
inc
pop
push
dec
fwait
adc
fistp
fdiv
fist
xchg
test
xor
mov
mov
fimul
jmp
loope
mov
int3
fld
cmp
or
sub
popa
movs
dec
(bad)
inc
pop
pop
rol
jecxz
pop
call
mov
sub
fcmovnb
sahf
lods
out
mov
cs
fwait
lahf
xchg
and
jnp
cdq
dec
ins
or
mov
adc
fistp
pop
fist
mov
stos
pop
je
mov
icebp
repnz
addr16
(bad)
mov
xchg
push
pop
mov
sbb
std
(bad)
mov
pusha
pop
test
aad
cmps
sub
mov
ror
outs
lock
pop
(bad)
jo
dec
call
sub
add
mov
fst
fnstenv
xlat
fstp
mov
popf
popf
pop
int
stc
mov
call
sub
mov
sub
cdq
(bad)
fistp
cmp
sar
pushf
pop
xor
mov
leave
mov
ficomp
push
sti
mov
pop
ja
(bad)
fistp
scas
(bad)
add
jmp
cmp
jecxz
(bad)
mov
dec
sti
call
jmp
xchg
dec
xchg
out
pushf
cli
fistp
jnp
add
ins
mov
mov
pop
cdq
faddp
mov
movs
ret
fst
sti
dec
repz
and
cwde
rcr
cdq
aad
pop
sbb
add
dec
lods
retf
sub
scas
add
or
ror
mov
mov
push
mov
sti
repz
jecxz
dec
or
mov
jne
mov
stos
aam
mov
jp
inc
stos
adc
into
aaa
cmp
fldenv
cmp
pusha
adc
test
repz
push
push
mov
repz
adc
inc
jns
fcomi
das
push
dec
xor
popf
and
mov
stos
dec
mov
cmps
fldenv
pop
imul
mov
mov
int3
inc
jnp
div
mov
fild
pop
je
cmp
jmp
add
aas
mov
ss
rcr
sbb
sbb
or
ds
movs
sub
mov
mov
repnz
(bad)
ins
push
jecxz
xchg
or
clc
inc
pop
pop
in
hlt
(bad)
(bad)
pop
cmps
fstp
out
push
adc
test
call
jno
cld
sbb
jecxz
and
or
retf
sub
cmp
sahf
push
fstp
popw
movs
pop
dec
aam
cmp
xchg
(bad)
inc
jmp
sti
fucomi
(bad)
out
test
jmp
sub
(bad)
movs
jb
sar
repz
jmp
fbld
(bad)
retf
sbb
lods
or
jmp
movs
rcr
push
pop
pop
repz
test
cmp
pop
pop
or
mov
xor
scas
je
adc
mov
(bad)
and
enter
divps
xchg
cli
add
dec
test
add
xchg
inc
jp
jmp
sbb
adc
call
rol
push
jecxz
pusha
jmp
jnp
add
jb
aad
dec
fild
(bad)
fcmovu
or
(bad)
pusha
retf
cmp
mov
dec
fistp
(bad)
mov
stos
popa
adc
aad
sahf
xor
jl
and
repnz
in
jg
lods
push
(bad)
adc
or
inc
push
fstp
mov
inc
or
fstp
adc
pop
lds
xor
test
push
adc
add
sub
data16
dec
mov
mov
cmp
push
pop
(bad)
ret
add
xor
ins
std
fld
sbb
mov
dec
fild
fwait
xor
and
repz
cld
fild
movs
loope
ins
fisttp
(bad)
jp
mov
mov
mov
pop
lds
push
loope
iret
jecxz
ret
arpl
cs
push
fistp
popf
sub
dec
inc
ror
jecxz
cmp
repnz
addr16
movs
sahf
pop
pop
fcomi
out
loop
fmul
pop
fild
sub
mov
ret
lock
mov
les
ret
ins
shl
pop
push
jecxz
add
mov
(bad)
fstp
into
ins
aam
nop
neg
adc
xchg
pop
jmp
pushf
fdivr
xor
dec
sub
adc
popa
and
repnz
jg
js
loope
neg
ja
jecxz
test
ins
dec
(bad)
cmp
xor
jnp
fimul
cwde
adc
ficom
cmps
test
cwde
fild
mov
xchg
popf
mov
mov
push
call
int
jl
lea
jne
jmp
cmp
cmp
cmp
call
push
call
jae
sub
and
add
mov
clc
xchg
xlat
dec
shr
outs
mov
push
adc
repz
or
push
sahf
jmp
rol
or
movs
aaa
pop
push
jae
push
cld
nop
movs
stos
mov
add
inc
lea
je
clc
call
push
call
mov
test
push
call
mov
and
fsub
add
and
ja
pusha
mov
pusha
jmp
mov
ins
add
pop
aam
inc
out
idiv
mov
push
(bad)
adc
retf
jp
(bad)
pop
adc
pop
aam
inc
shl
clc
and
or
mov
push
in
loope
pop
mov
jg
jg
mov
leave
mov
inc
data16
and
ss
pop
outs
enter
mov
ret
xchg
add
loope
(bad)
shr
dec
rcr
(bad)
pop
inc
out
cmps
mov
int
add
and
cmps
call
movs
cs
sub
popa
sbb
jbe
(bad)
leave
adc
outs
or
inc
cdq
stc
std
cmp
xchg
loop
sti
loope
rcl
mov
aaa
dec
cmp
and
rcr
data16
(bad)
and
in
cmps
cmc
jns
fsubr
mov
add
outs
(bad)
cmps
cmp
push
rdpmc
xor
ins
push
add
daa
out
lock
sbb
fmul
pop
movs
add
mov
(bad)
ss
and
ds
add
fwait
jns
data16
mov
add
pop
xchg
push
ficom
call
jbe
add
adc
push
call
jp
jg
mov
jb
pop
data16
fs
or
jae
in
and
sub
push
jl
xchg
mov
(bad)
xor
sub
dec
push
adc
popa
test
and
dec
mov
in
imul
mov
sub
push
pop
cld
fist
jle
nop
mov
cmp
movs
ins
mov
mov
push
pop
lds
div
or
xchg
add
mov
shl
mov
sbb
retf
neg
dec
ins
push
ins
sbb
add
jns
inc
fs
jae
call
push
call
mov
enter
add
jl
push
mov
xor
dec
pop
lods
jle
sahf
sbb
ds
mov
clc
aaa
lods
das
mov
mov
xor
cwde
cld
(bad)
lahf
mov
xor
in
lahf
cli
push
add
cmps
cmp
cmps
daa
test
fdivr
xsaves
inc
adc
inc
sub
fstp
dec
mov
pop
push
jp
pop
aaa
mov
in
jno
add
hlt
dec
sub
je
xchg
out
pop
or
inc
jmp
js
lods
imul
push
jae
sbb
inc
push
inc
cmp
xchg
inc
or
or
jbe
popf
push
scas
cmp
ret
mov
outs
pop
inc
cwde
in
xor
mov
out
popa
xor
push
dec
cmp
outs
aad
pop
jle
not
and
cmps
xchg
mov
add
and
out
popa
pop
mov
shr
sbb
movzx
mov
setg
jmp
lea
call
pushf
jmp
jo
lods
push
xor
rcl
ret
sbb
cmc
retf
outs
stos
fimul
jmp
add
jge
cs
cmc
(bad)
jmp
xchg
cmp
es
aam
cmp
mov
or
lea
jns
ins
add
inc
movs
dec
fbld
sbb
mov
jl
out
lea
imul
ror
cmp
ins
pusha
sti
rcr
(bad)
fisttp
inc
cmps
cli
jg
adc
int
add
imul
outs
je
outs
ins
add
ins
and
jb
jne
je
and
and
jae
jo
outs
addr16
ins
and
jae
bound
outs
and
outs
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outs
daa
je
ja
jb
and
jns
outs
jb
add
fs
jae
push
push
call
sbb
cmp
add
stos
(bad)
iret
or
je
call
scas
imul
dec
sbb
int3
mov
pop
xchg
ins
ja
into
and
mov
ficomp
ins
xchg
test
adc
pop
cmp
dec
sub
pop
cmps
push
lea
cmps
jmp
inc
and
fistp
or
in
cwde
in
mov
dec
push
or
jmp
mov
and
aam
sahf
loop
imul
lahf
mov
pushf
push
mov
add
pushf
pushf
pushf
lea
je
bt
cmc
cmp
add
pusha
push
pusha
push
lea
jmp
pushf
mov
mov
movzx
not
bswap
not
pop
pusha
push
ret
xchg
xor
push
hlt
loope
pushf
mov
cmps
je
or
mov
pop
(bad)
popa
rol
sub
(bad)
push
mov
or
and
push
lds
mov
mov
es
jne
pop
mov
mov
sti
push
test
sbb
cmp
mov
xlat
call
fnstenv
xor
mov
inc
mov
push
outs
fisttp
mov
sub
or
jb
xor
gs
push
cmps
jmp
out
cld
push
and
jno
retf
sbb
add
fmul
or
mov
hlt
aad
call
cmp
lods
sub
xor
mov
neg
push
mov
adc
xchg
and
ret
je
inc
push
ss
stc
xchg
xor
push
jnp
jne
hlt
xchg
cmp
loop
jmp
adc
push
sub
push
movs
mov
push
jbe
popf
inc
xlat
lea
pop
cmp
(bad)
and
xor
jmp
fcmovne
mov
imul
test
adc
inc
addr16
xor
inc
cmp
hlt
mov
push
jecxz
xchg
xor
pop
push
fucomip
xor
jo
(bad)
and
sub
or
or
movs
jle
gs
sbb
or
push
enter
add
mov
mov
mov
retf
arpl
mov
mov
push
popf
mov
dec
pop
mov
adc
or
or
jp
rol
dec
xor
enter
jnp
dec
ficom
push
mov
pushf
sub
test
pushf
xor
scas
cld
sub
daa
aaa
dec
cmp
div
jmp
mov
jb
fidivr
(bad)
cwde
add
mov
jbe
(bad)
fbstp
push
xor
sbb
mov
je
push
fiadd
inc
cmp
mov
call
fs
stc
iret
ins
sar
arpl
mov
cmp
or
add
scas
adc
xor
add
xchg
adc
iret
mov
adc
or
arpl
or
push
lahf
jae
sbb
out
(bad)
sub
sbb
xchg
mov
dec
shufps
jne
mov
add
jbe
mov
push
mov
out
xchg
or
cmp
arpl
adc
xchg
cmps
push
call
out
mov
adc
outs
mov
in
imul
jecxz
aad
xchg
xchg
pushf
jmp
sub
gs
mov
and
fld
push
xchg
sbb
push
fs
cmc
sub
add
push
js
jmp
lock
dec
inc
xor
pop
mov
retf
stc
push
popa
mov
jo
sbb
jmp
pop
cmp
add
add
mov
jo
jle
aaa
pop
fwait
outs
call
push
rcl
sbb
jo
xchg
icebp
jmp
push
push
out
scas
push
cdq
or
or
inc
cmp
pop
ror
lea
sbb
cmp
xchg
inc
dec
sahf
jns
push
xor
das
ins
cmp
(bad)
daa
pusha
imul
out
sub
pushf
mov
fisubr
pop
inc
(bad)
inc
and
aas
cmps
mov
mov
push
aad
dec
cmps
mov
push
test
add
dec
cmp
xor
aad
call
hlt
cmps
inc
mov
shl
or
mov
mov
aaa
ret
adc
fstp
cld
mov
and
adc
push
in
dec
lock
dec
(bad)
loop
sub
in
mov
pop
dec
(bad)
div
inc
jmp
js
jmp
test
cmc
push
cmp
cmp
pop
dec
cmps
je
ja
pop
in
aas
lods
mov
push
call
mov
and
add
neg
cmps
call
out
mov
shr
lahf
imul
in
mov
(bad)
(bad)
cmp
pusha
pushf
lea
ja
pushf
pushf
inc
pushf
inc
lea
jp
inc
inc
sar
sub
rol
xchg
xor
jns
ror
inc
mov
ror
inc
mov
jno
pusha
push
cmp
xchg
mov
bswap
mov
jmp
push
call
shr
ret
inc
fsub
add
(bad)
js
rcl
fs
xchg
or
push
adc
in
xchg
pop
sbb
jb
jbe
cs
add
loop
gs
jecxz
popa
test
in
aam
xchg
dec
mov
add
xlat
dec
mov
loop
push
pop
data16
pushw
add
dec
sbb
jns
sub
sbb
jmp
loopne
mov
dec
call
push
or
cwde
inc
loope
push
pop
pushf
pusha
pusha
push
push
ret
lea
pusha
jmp
push
call
jp
(bad)
push
call
popf
sbb
aad
sar
add
out
sbb
fcomp
pop
in
scas
lods
jns
sub
lds
lea
push
arpl
bound
fxch
mov
mov
dec
(bad)
das
loope
and
popf
cmps
push
(bad)
mov
pop
(bad)
push
push
sahf
rcl
ret
add
rcr
in
retf
dec
inc
lea
inc
xchg
add
(bad)
repnz
xchg
and
push
(bad)
cld
loopne
and
mov
cmp
add
shr
sub
xchg
adc
fcom
add
shr
clc
xor
aad
fnsave
mov
adc
inc
das
xchg
jle
pushf
ins
cmp
ins
mov
cmc
cmp
jge
dec
test
or
pop
mov
shr
inc
ficom
xchg
retf
rcr
cmps
int
xchg
jl
ss
add
mov
adc
inc
and
add
add
call
push
pushf
jmp
push
call
std
fist
bound
aad
fs
das
ret
inc
bnd
mov
gs
int3
xchg
rcr
cdq
mov
les
jmp
jno
push
mov
das
add
jae
dec
xchg
add
test
and
das
fmul
push
fild
xchg
and
mov
das
adc
pop
nop
pop
std
shl
out
xor
xor
int3
cmp
std
xchg
mov
inc
stos
and
mov
jg
clc
jne
sahf
inc
jp
inc
(bad)
pushf
add
daa
xchg
lahf
push
and
fsub
add
leave
leave
push
bound
mov
xor
arpl
(bad)
sub
jo
dec
sub
scas
pop
jp
(bad)
xchg
sbb
mov
mov
shl
or
hlt
or
sub
jb
xlat
fsubr
dec
stc
pop
mov
pop
sub
inc
mov
in
cmp
jle
jle
ins
rol
mov
or
dec
je
push
add
ins
icebp
in
div
push
push
call
(bad)
das
push
sub
inc
and
dec
call
lea
call
pusha
jmp
rcl
mov
xor
rcl
or
test
shr
or
pop
lea
push
sbb
in
push
inc
sub
mov
push
and
cli
and
jmp
test
push
add
movs
adc
(bad)
adc
loope
mov
inc
mov
cli
xlat
in
jle
xchg
mov
cmp
imul
adc
sub
mov
push
lea
ja
pushf
bt
pusha
add
stc
bt
test
cmp
call
fcomi
repz
jl
out
test
pop
in
(bad)
pop
ficomp
pop
mov
pop
pushf
sbb
xor
mov
fld
movs
clc
push
int3
test
pop
dec
pop
pop
jge
fld
popf
sbb
cmp
lods
in
inc
and
and
imul
jbe
sbb
pusha
pop
mov
jle
clc
into
in
sbb
sbb
std
pop
aas
cmps
in
pop
dec
mov
fild
movs
xor
into
in
mov
(bad)
and
push
fsub
pop
inc
pop
or
movs
inc
imul
pop
in
fdivrp
pop
fldenv
pop
fcom
mov
loope
test
pusha
mul
imul
jne
loope
icebp
mul
and
adc
and
sbb
cmp
movs
push
sbb
gs
adc
pop
in
fdivr
pop
pop
aas
stos
data16
lss
in
je
jg
xor
push
and
dec
and
sub
and
in
pop
std
fstp
fdiv
ret
arpl
clc
into
in
mov
jg
stc
(bad)
in
mov
jg
stc
(bad)
in
mov
lahf
xor
(bad)
in
push
pop
push
fs
push
arpl
fs
test
mov
mov
fimul
jnp
and
xchg
pusha
fwait
daa
push
stos
push
and
aas
mov
movs
fldenv
hlt
pop
mov
movs
repz
pop
and
sti
pop
and
ins
pop
cld
fstp
pop
sbb
add
pop
movs
pop
ret
addr16
cdq
and
ds
pop
and
ins
pop
or
and
or
movs
and
movs
std
pop
fsub
pop
adc
dec
push
sub
mov
dec
fidivr
jne
dec
(bad)
addr16
loop
cmc
outs
pop
movs
out
mov
cmc
pop
xchg
jae
mov
call
out
das
push
test
mov
mov
fwait
ja
xchg
push
(bad)
vcvtsd2ss
cs
in
adc
push
ja
push
out
retf
push
mov
push
mul
inc
jbe
sbb
loopne
std
push
pop
lods
jge
jle
mov
push
or
lahf
es
(bad)
xchg
push
neg
pop
stos
mov
pop
popf
out
pop
adc
cmps
adc
adc
or
fmul
fstp
push
movs
mov
test
mov
jno
cld
fsubr
daa
daa
jg
int3
lods
jmp
sub
jmp
xchg
movs
js
fwait
pop
push
outs
cli
xchg
push
xchg
add
or
popf
sti
sbb
aaa
stos
retf
sub
sahf
outs
sub
shl
jl
es
fild
std
call
outs
cmps
lea
shr
mov
ja
ret
fstp
aas
fsubr
in
cmps
push
(bad)
out
pop
out
mov
pop
outs
es
adc
push
pop
aaa
xchg
mul
ins
cmp
movs
lock
fsubr
out
mov
xchg
pop
outs
into
mov
gs
adc
jno
ret
mov
in
mov
mov
pop
aas
div
test
cdq
pushf
ds
push
outs
repnz
imul
sbb
sar
sub
sub
or
fcomp
mov
mov
stos
adc
jbe
xor
pop
push
jno
les
ins
and
jmp
jbe
or
lea
jmp
pop
xchg
cmps
mov
retf
fsub
rcr
xchg
cli
out
push
pop
cmc
fistp
jp
xor
in
add
mov
pusha
pop
pop
xchg
cmps
mov
cmp
jbe
pushf
iret
push
cmps
jl
push
cmp
lahf
push
jne
push
jne
dec
dec
popf
mov
pop
sahf
jns
jge
outs
push
dec
pop
mov
pop
and
add
outs
ds
gs
cld
ins
out
xor
mov
xchg
xor
retf
xchg
into
fidiv
loopne
or
sahf
jle
pushf
pop
(bad)
or
mov
cld
sbb
fbld
in
pop
std
pop
fisub
jle
pop
cld
push
push
mov
std
mov
sti
in
fwait
mov
pusha
(bad)
mov
pop
ins
cmp
sbb
stc
pusha
fldlg2
mov
pop
ins
cmp
sbb
clc
pusha
fsubr
mov
pop
ins
cmp
sbb
jmp
in
mov
pop
ins
aas
cld
pop
push
(bad)
pusha
(bad)
and
mov
sbb
pusha
push
outs
mov
mov
(bad)
mov
pop
cld
cmp
in
fdivr
mov
pop
cld
sti
push
mov
jg
fwait
and
in
cmp
sbb
and
ins
mov
pusha
pop
in
cmp
sbb
and
ins
mov
pusha
pop
in
cmp
sbb
and
ins
mov
xor
je
ds
and
cmp
inc
ins
pop
cld
fs
ins
pusha
je
jl
mov
and
ins
in
cld
hlt
push
cld
pusha
add
sbb
cld
xor
in
dec
std
push
pop
and
ins
cld
jne
jge
test
(bad)
std
xchg
popf
and
push
cmc
pusha
std
in
push
std
push
push
and
ins
es
cs
ss
ds
inc
std
dec
push
mov
mov
jbe
jle
xchg
in
xchg
std
sahf
cmps
and
push
out
pusha
imul
(bad)
std
pop
mov
ins
pop
cld
daa
push
das
pusha
aaa
in
aas
std
inc
dec
and
pop
cld
addr16
outs
pusha
ja
jg
xchg
cld
cmps
push
scas
pusha
mov
pop
std
pusha
leave
dec
fist
fadd
fld
outs
pop
push
mov
ss
push
dec
fsub
push
pop
and
movs
fucom
pop
jbe
outs
cs
in
dec
xchg
cmp
pop
gs
ret
fstp
cmp
popf
and
and
push
jne
ins
jle
push
jo
push
mov
(bad)
jg
and
pushf
pop
adc
cli
aas
mov
push
dec
lahf
es
sbb
out
movs
cwde
movs
xchg
jl
xchg
cld
cli
test
jo
pop
jle
pop
aas
push
pop
inc
jnp
pushf
dec
ja
lock
mov
pop
scas
push
fdivr
push
lahf
pop
jge
xchg
cmp
imul
pusha
inc
in
or
pop
pop
jg
inc
xchg
and
ds
pcmpeqb
mov
cmp
pop
js
pop
in
mov
and
ja
mov
cmc
mov
fadd
aas
jmp
jbe
daa
push
imul
add
out
sbb
jp
gs
dec
aaa
ja
ds
fld
popa
sub
jmp
movs
sub
cli
mul
fsubr
imul
inc
jle
cmp
fld
stos
sbb
mov
aas
cli
xchg
jle
daa
stc
dec
cmp
jns
sbb
jge
inc
movs
ja
in
sub
mov
pop
inc
jnp
fidiv
dec
cmps
clc
fs
mov
xabort
out
nop
sbb
inc
(bad)
in
inc
aaa
mul
pop
bnd
mov
xor
loop
cmps
pop
(bad)
(bad)
jae
ret
std
call
stos
in
pop
cmp
push
or
cmp
sub
out
pop
test
dec
or
fdivr
popa
pop
outs
outs
fsub
ret
jmp
xchg
movs
loop
sub
pop
shl
sbb
cmp
std
xchg
mov
cmc
mov
fstp
pop
jns
dec
sar
xor
cmp
scas
cmp
movs
ins
out
xor
lods
mov
leave
(bad)
popa
pop
sbb
jmp
pop
mov
in
test
outs
add
jne
in
int3
fmul
xor
cmps
xchg
js
pop
int3
inc
push
xor
jmp
xchg
mov
push
pop
mov
call
aaa
mov
dec
mov
jp
mov
loop
inc
mov
jb
test
inc
ins
pop
or
jmp
sbb
in
sbb
retf
or
es
(bad)
call
mov
mov
xchg
clc
mov
cld
jp
jbe
ja
(bad)
adc
inc
iret
xor
pop
pop
movs
loopne
xchg
jbe
adc
sti
gs
and
sbb
fcomp
inc
std
cmp
push
jl
cmp
or
jle
jbe
cwde
or
dec
push
cs
dec
loopne
out
aam
pop
add
add
and
mov
sti
push
xchg
dec
cli
jne
push
cmp
jle
(bad)
jl
popf
xchg
push
jge
jl
in
pop
lahf
popf
imul
je
in
jmp
ins
lahf
mov
sti
cdq
sbb
fldlg2
(bad)
jmp
ds
inc
repz
jbe
movs
jle
xchg
movs
sbb
pushf
pop
and
dec
(bad)
push
fistp
out
sbb
cmp
xchg
cmps
out
cmp
sahf
daa
scas
sbb
cmp
mov
daa
cmps
xchg
jne
lahf
pusha
out
in
fs
and
pusha
cmp
jne
xor
jne
test
loopne
and
in
out
fsub
movs
cli
gs
and
(bad)
sbb
out
push
outs
fild
mov
xchg
add
(bad)
(bad)
fist
fistp
fbstp
fild
imul
sbb
shl
adc
jno
push
dec
pop
pushf
pop
pop
ja
pop
test
pop
(bad)
stc
mov
jmp
sti
repz
jbe
sbb
add
or
dec
mov
movs
iret
ins
adc
retf
push
sbb
inc
jecxz
fimul
aaa
data16
js
xor
inc
push
movs
jnp
inc
fcmovne
and
sbb
jecxz
push
ins
inc
cmp
fsubr
aas
sub
popf
mov
mov
js
pop
cmp
dec
cmp
inc
jge
mov
and
cwde
mov
adc
cmps
repz
fucomp
aad
add
retf
mov
ficomp
pushf
cmp
sbb
sub
(bad)
or
ror
pushf
retf
jg
jns
jmp
(bad)
push
imul
mov
ja
lds
in
hlt
dec
inc
sub
xchg
std
cmp
push
jp
jbe
or
movaps
dec
xor
dec
sbb
repnz
in
sti
movs
lock
mov
sub
pop
pop
jle
pop
jle
cmps
push
inc
fcmovnu
in
push
outs
(bad)
in
push
add
pop
and
mov
pop
cwde
sub
sahf
push
pop
shl
xchg
call
push
std
jge
push
cmp
out
fiadd
mov
sti
xor
mov
cli
jmp
out
jg
scas
in
(bad)
adc
lds
sbb
daa
in
pop
inc
sahf
mov
pop
jge
dec
not
mov
jne
gs
movs
mov
(bad)
inc
mov
out
cld
daa
sbb
out
cmps
adc
mov
sub
outs
mov
je
adc
sar
outs
or
dec
push
xchg
mov
dec
push
enter
inc
jp
xchg
idiv
ret
dec
js
sub
jge
out
sar
jge
dec
pop
dec
mov
sbb
cmps
movs
pop
sub
fsub
cmps
mov
push
fs
fnstsw
stos
push
push
or
sbb
js
movs
in
jg
scas
mov
daa
pop
sbb
(bad)
jne
fs
in
and
std
(bad)
jg
mov
call
cmp
pop
push
jae
cmovo
inc
pop
ja
push
popf
inc
dec
jmp
inc
cmps
push
popf
push
ins
pop
in
jb
xchg
jmp
inc
js
stos
mov
mov
pushf
gs
add
sbb
mul
repnz
popa
dec
and
cmp
pushf
dec
je
sbb
mov
inc
in
inc
sbb
(bad)
jl
rcl
ficom
sbb
fdivr
sbb
push
jle
ja
outs
in
mov
pop
(bad)
cmp
fst
in
cli
fisubr
movs
fadd
jmp
fisttp
fdiv
(bad)
or
sahf
sbb
mov
push
lahf
hlt
popf
pusha
pop
in
pushw
fs
pop
pusha
sbb
jg
sbb
add
ins
fcomp
(bad)
mov
xchg
fs
xor
mov
hlt
(bad)
pusha
cld
sbb
sbb
stc
jmp
mov
sbb
push
mov
cwde
in
jle
jbe
mov
movs
fcom
and
sbb
cmp
ds
fcomp
outs
dec
es
fistp
lock
hlt
outs
outs
movs
ins
mov
hlt
out
pusha
in
sbb
cli
jmp
out
movs
in
mov
scas
dec
push
lods
hlt
js
cmc
sbb
movs
je
das
dec
push
sub
sbb
cli
outs
jnp
add
mov
mov
mov
and
fs
(bad)
cli
lea
movs
push
mov
hlt
cmp
sbb
cli
push
outs
cmp
int3
mov
hlt
iret
pusha
int
mov
movs
dec
mov
hlt
dec
pusha
dec
xor
or
rcr
hlt
addr16
gs
mov
push
call
sbb
cli
jmp
push
movs
push
hlt
daa
pusha
and
sbb
cli
outs
imul
xchg
test
pop
jmp
jecxz
xchg
test
int
pop
hlt
add
cli
add
movs
sub
hlt
(bad)
pusha
les
test
(bad)
mov
sbb
inc
outs
test
dec
push
inc
hlt
stos
sbb
stc
je
fcomi
mov
cli
ja
jne
or
hlt
mul
sbb
sbb
stc
imul
mov
sbb
int
mov
mov
mov
movs
xor
xor
xor
sbb
adc
xchg
outs
xchg
movs
dec
aam
pop
pusha
adc
outs
adc
pusha
(bad)
sbb
cli
enter
push
aad
retf
outs
push
movs
leave
mov
hlt
push
jo
rcr
jmp
push
cli
pusha
xlat
hlt
bound
shl
mov
xlat
hlt
mov
mov
add
add
hlt
add
retf
push
sub
hlt
inc
mov
retf
push
ret
aad
ret
shl
icebp
mov
retf
push
jo
jb
pusha
jno
jae
mov
retf
push
xor
aad
mov
mov
cli
mov
sbb
retf
push
adc
aad
nop
mov
xlat
hlt
xchg
retf
push
push
imul
push
mov
xlat
hlt
shl
psubusb
jbe
out
pop
mov
pop
pop
sbb
sar
(bad)
(bad)
xchg
in
(bad)
fstp
(bad)
and
ins
in
mov
push
and
scas
mov
sbb
fstp
fst
pop
movs
call
hlt
or
out
ins
(bad)
js
push
repz
std
pop
out
inc
jl
cmp
loope
cmps
jnp
sbb
mov
xlat
daa
sar
push
xor
ret
(bad)
scas
sbb
ja
data16
cli
push
cld
mov
call
or
int
(bad)
cli
adc
and
push
fsubr
adc
aas
mov
mov
mov
stc
(bad)
in
mov
imul
repz
pop
rcr
mov
lahf
jmp
pushf
aas
shl
(bad)
int
and
or
lock
in
fcomp
xchg
sbb
dec
pop
dec
fmul
dec
(bad)
daa
iret
pushf
in
jne
(bad)
pop
push
ret
pusha
and
in
js
or
cld
dec
jle
(bad)
sbb
push
cld
pusha
(bad)
in
push
std
scas
aas
and
ins
pop
cld
call
in
call
out
xchg
jecxz
cmp
dec
ret
ds
add
rcl
mov
shr
jo
ins
pushf
and
adc
push
dec
(bad)
or
adc
jmp
(bad)
jmp
call
ja
push
call
sub
popa
push
cmp
cmp
pusha
pushf
lea
jne
bswap
push
sub
aas
neg
lea
mov
add
stc
shr
push
add
or
shl
rcr
mov
bt
pushf
clc
push
test
lea
js
pusha
push
lea
je
pushf
stc
pushf
sub
stc
cmp
call
test
dec
dec
add
ret
pop
imul
dec
loop
aad
push
mov
fimul
inc
sbb
ror
inc
cmps
add
cmp
call
das
adc
loop
push
js
xchg
push
ins
adc
adc
sub
mov
jb
sbb
mov
sbb
mov
inc
out
std
mov
lea
pushf
lea
bswap
mov
call
push
call
cmp
push
call
ss
movs
pushf
lea
jb
push
jmp
cmp
xor
add
or
lahf
pusha
fisttp
test
mov
xlat
xchg
aam
pop
adc
sub
aas
rcr
aas
mov
jmp
or
mov
or
or
fs
sti
stc
out
sub
mov
cmc
rcl
sub
cmc
push
lds
mov
lea
movzx
pusha
mov
call
lea
jne
call
mov
xor
in
mov
(bad)
ins
pslld
les
xchg
xor
clc
xchg
ins
mov
mov
mov
les
(bad)
dec
int
pop
mov
ss
adc
xor
sbb
iret
aam
iret
or
aad
or
xor
jle
sub
inc
retf
sbb
test
fs
outs
das
imul
sub
xlat
lods
or
pop
mov
clc
popf
sub
pop
call
dec
daa
and
dec
add
retf
lahf
mov
ins
dec
pushf
mov
push
es
jnp
xchg
arpl
mov
test
cwde
jne
in
jnp
sub
bound
cli
push
xchg
jb
ds
mov
xchg
mov
sahf
ficomp
pop
dec
push
sub
out
jl
jge
sahf
cli
lock
div
stos
(bad)
fdivr
loope
lock
inc
(bad)
sub
mov
cli
pop
adc
mov
pop
pop
and
jge
movs
mov
not
(bad)
jns
call
add
sahf
cmp
fwait
or
jo
call
stos
fwait
stos
xchg
out
mov
and
fist
(bad)
jecxz
(bad)
test
xlat
jl
jecxz
inc
test
enter
es
jnp
adc
outs
push
int3
fdivr
xchg
adc
data16
mov
mov
imul
out
cwde
pop
and
push
sti
es
xchg
add
gs
push
inc
lea
push
lea
call
pushf
lea
jno
pusha
mov
adc
call
jmp
push
push
pop
dec
add
in
dec
enter
(bad)
mov
test
push
or
int3
adc
lahf
adc
sub
cmp
bound
stc
fsubr
leave
mov
cdq
cs
sub
outs
inc
cld
jbe
fwait
mov
inc
xchg
xor
sub
sbb
ds
mov
fs
mov
ret
dec
out
test
scas
mov
push
xchg
cmp
addr16
cmps
mov
inc
xchg
lock
jne
out
shl
repnz
xor
mov
popf
popf
les
add
xchg
retf
dec
cmp
sbb
lods
and
mov
sub
push
inc
sbb
cmc
sub
add
mov
pop
(bad)
imul
add
xchg
adc
xchg
mov
retf
call
call
sbb
dec
pop
xor
xor
jmp
mov
push
rep
dec
add
cmps
sbb
nop
js
imul
mov
enter
rcr
bswap
stos
dec
retf
mov
mov
add
daa
cmp
mov
mov
adc
jnp
jne
ret
and
sbb
sub
shl
in
push
inc
in
data16
add
jnp
ret
out
sbb
out
lods
mov
mov
test
and
test
ror
jns
mov
jle
test
rcl
test
xor
popa
cld
pop
hlt
das
mov
mov
mov
inc
loopne
pop
or
in
push
inc
xor
call
xor
out
sbb
jp
popa
cld
pop
fcomi
cmp
adc
cmp
aaa
sti
pop
pushf
ds
je
cmp
mov
test
and
out
adc
mov
stc
mov
iret
rcl
jno
xor
cmp
push
mov
jle
pop
gs
das
inc
add
out
sub
xor
adc
adc
mov
les
stos
inc
add
js
pop
dec
bound
repz
mov
and
mov
mov
neg
lds
add
push
ja
adc
pop
pushf
call
add
inc
gs
outs
fs
gs
imul
add
pop
fsub
add
call
push
call
jno
(bad)
or
lock
call
sub
inc
sbb
aad
inc
repnz
jl
rcr
mov
aas
jnp
hlt
into
xor
push
nop
mov
movs
add
xchg
push
fld
(bad)
das
mov
loop
mov
push
mov
mov
xor
aam
daa
data16
gs
push
ss
hlt
(bad)
cmp
int
test
sbb
frstor
mov
fdiv
push
sub
mov
add
cmc
call
cmp
bt
test
test
call
dec
inc
add
xchg
bt
das
setne
mov
adc
push
cmp
mov
lea
push
test
mov
test
mov
bt
cmc
sub
pushf
rep
mov
movsx
mov
pushf
pusha
pushf
push
lea
jmp
mov
dec
inc
add
push
inc
mov
push
in
mov
es
repz
test
out
xchg
lods
and
sub
xchg
aad
sub
ja
cdq
test
scas
loopne
xchg
push
adc
cld
hlt
mov
jbe
loopne
jg
(bad)
mov
push
scas
cmp
xchg
rol
lds
dec
jp
out
sbb
fs
or
inc
push
dec
push
fimul
jns
movs
xor
fimul
mov
sub
leave
dec
bound
xor
mov
pop
pop
adc
xchg
pusha
cmps
je
mov
xchg
daa
loope
mov
rol
or
push
pushf
pusha
lea
je
not
not
bswap
mov
cwde
lea
jmp
fidivr
repz
push
pop
push
jmp
sub
mov
mov
sbb
xor
imul
dec
test
imul
pop
test
not
mov
idiv
bound
dec
mov
push
int3
mov
jno
jmp
inc
xor
(bad)
sar
cmp
mov
rol
outs
or
add
shr
xchg
daa
push
and
ss
in
cmc
adc
shr
jb
or
cmps
xchg
dec
inc
add
popa
adc
add
mov
sbb
jo
dec
cmp
fwait
imul
and
outs
adc
push
sbb
add
in
ins
rol
push
inc
mov
mov
mov
fcom
xor
push
push
mov
hlt
frstor
je
(bad)
mov
mov
xchg
inc
pop
jle
mov
jecxz
(bad)
sub
sbb
pop
push
(bad)
fist
xchg
pushf
retf
js
mov
fnsave
push
adc
(bad)
sub
xor
inc
dec
dec
ja
jbe
mov
mov
arpl
shl
bound
mov
(bad)
sbb
addr16
sbb
and
cli
in
fs
(bad)
idiv
xor
and
push
out
mov
fcmovnbe
mov
shr
or
and
pop
inc
cs
je
aas
aad
pop
imul
xor
jp
pop
fucomi
sti
ins
js
clc
mov
test
(bad)
jmp
jo
add
loop
add
push
sbb
mov
retf
out
int3
mov
jge
xchg
jg
push
pop
in
dec
fimul
inc
(bad)
or
gs
test
scas
push
dec
std
adc
cli
mov
mov
or
mov
dec
mov
pop
add
retf
in
inc
add
mov
clc
fmul
outs
out
cmp
xchg
sbb
pusha
pop
mov
cli
adc
cmp
es
xchg
test
cmps
call
icebp
(bad)
or
inc
add
test
push
ret
aaa
adc
inc
mov
push
xor
fcmovb
fist
fadd
add
add
or
retf
daa
fistp
das
cwde
movs
xchg
jbe
add
pop
out
sub
shr
add
icebp
fwait
add
xor
push
mov
repz
mov
cmps
cmp
scas
push
xchg
push
mov
ret
mov
pushf
nop
adc
and
lahf
shr
cmps
call
mov
call
retf
aaa
jnp
test
mov
data16
pop
(bad)
mov
push
cmp
lahf
pop
fwait
or
dec
jns
jl
inc
loop
push
loopne
cmp
outs
dec
loop
mov
cmp
add
loope
hlt
ins
rcr
ins
or
call
push
call
pop
push
xchg
ror
push
inc
push
dec
xor
cs
ins
add
bt
clc
popf
pushf
pusha
pusha
lea
jmp
call
push
push
imul
and
jne
and
je
bound
ins
outs
arpl
gs
and
and
popa
ins
imul
and
jb
jb
and
push
inc
add
loope
push
stos
(bad)
xchg
pop
cmp
inc
sahf
call
mov
or
pusha
mov
lea
call
push
push
jmp
pusha
lea
jne
push
inc
push
inc
pusha
mov
cmp
jmp
push
call
mov
addr16
cmps
call
frstor
cmps
push
call
mov
sub
pusha
jmp
int3
popf
push
call
mov
mov
inc
add
sar
loopne
push
(bad)
push
in
jnp
mov
dec
jne
fwait
imul
mov
push
jbe
mov
jg
mov
inc
aad
test
test
xadd
cmp
xchg
dec
sub
sbb
and
repz
gs
dec
leave
test
mov
imul
cmc
dec
clc
outs
or
or
dec
addr16
xchg
les
cmps
add
movs
lock
int
and
sbb
cmps
call
adc
mov
seta
rol
call
pusha
mov
push
call
jbe
xchg
xor
jmp
adc
test
(bad)
pop
push
shl
cld
jo
int
sbb
mov
sti
sbb
ficomp
stos
std
fild
inc
inc
iret
pop
shr
loope
out
pop
sbb
int3
and
call
adc
dec
sti
imul
test
sbb
in
ficomp
movs
stc
pop
fist
sti
inc
xchg
inc
push
jmp
and
sti
pop
or
fdivr
pop
movlps
aam
sbb
dec
cmps
or
or
cmp
jle
sbb
mov
or
sahf
fstp
xor
into
(bad)
mov
pop
add
jl
sub
and
std
cld
push
sbb
jg
shr
pop
idiv
jne
sti
lods
jbe
pop
out
cmp
sub
std
inc
out
fnstcw
ffree
pushf
pop
jbe
sbb
clc
pop
push
imul
cmp
data16
mov
xchg
fsub
or
pop
rol
push
repz
std
ja
mov
adc
push
loopne
cmp
sub
not
mov
mov
cmp
scas
jmp
pop
ja
call
pusha
pop
cmps
pop
cli
outs
adc
mov
movs
cmp
popa
arpl
fistp
jnp
cld
frstor
cld
arpl
mov
sbb
cmp
pushf
dec
dec
fistp
call
pusha
inc
(bad)
mov
add
cmc
mov
pusha
cwde
cmp
mov
sbb
cmc
push
jecxz
lods
sub
sub
xchg
out
inc
sbb
jecxz
(bad)
sti
mov
nop
cdq
push
xchg
add
(bad)
dec
pop
ss
mov
aam
cld
jl
bound
pop
mov
and
jae
sub
loop
dec
clc
fdiv
popf
pop
lods
div
sub
ja
inc
aaa
cdq
rcr
repz
and
arpl
pushf
mov
outs
mov
cmc
loope
or
cdq
push
mov
pushf
lods
stos
xchg
cmps
icebp
inc
jo
adc
neg
pop
das
sti
xchg
pop
mov
pop
add
pop
js
lea
out
div
inc
xchg
push
data16
pushf
outs
retf
shl
sti
fbld
cmp
js
hlt
mov
push
and
xchg
mov
call
mov
in
adc
dec
in
fwait
in
mov
mov
pop
leave
and
inc
out
and
or
bound
dec
std
nop
pop
pop
pusha
js
imul
imul
out
sbb
sbb
dec
push
into
sbb
std
(bad)
(bad)
es
push
fsub
mov
pop
adc
imul
push
and
ss
lods
and
imul
xor
inc
imul
push
enter
xchg
(bad)
inc
cmc
push
and
sbb
frstor
sub
push
ja
cmc
sar
dec
call
clc
cmp
sub
jmp
aam
push
test
je
mov
push
xchg
ins
out
sbb
adc
jbe
cmp
mov
push
das
jbe
mov
dec
pop
cmp
push
jmp
jl
or
sub
mov
jo
add
jl
bound
data16
adc
addr16
mov
loope
scas
aam
(bad)
popf
std
or
xchg
es
movs
in
int
fdivr
inc
jle
pop
sub
jb
mov
cmp
imul
pop
cmp
pop
mov
ins
dec
mov
clc
sub
and
mov
and
rol
sahf
fisub
daa
xor
jge
mov
pop
jbe
xor
and
sbb
sti
inc
inc
loope
retf
or
js
lock
sbb
fild
hlt
js
out
and
jmp
lock
rcr
js
out
mov
cmp
cmp
dec
lock
pop
jmp
into
nop
cld
(bad)
lahf
ins
mov
pop
pop
lock
sub
lock
(bad)
adc
clc
adc
fstp
ror
enter
pop
mov
pop
gs
pop
les
or
icebp
pop
call
xchg
aas
outs
and
pop
jl
scas
pop
retf
out
sbb
pop
mov
pop
pop
and
or
js
xor
cli
cwde
cmp
pusha
fstp
loope
fdiv
ja
test
cmp
mov
push
pushf
out
test
mov
or
in
inc
mov
push
fistp
dec
pop
push
pop
fwait
dec
pop
inc
xor
add
mov
scas
pop
clc
xchg
pushf
cld
and
cmp
and
mov
icebp
repz
cwde
add
push
nop
inc
pop
call
xor
ins
je
inc
mul
mov
fadd
cmp
and
sbb
mov
or
mov
jp
xchg
clc
(bad)
xor
sbb
fdivr
xor
cwde
sar
xor
xor
call
(bad)
add
and
shr
pop
push
lea
mov
sbb
mov
xchg
xchg
popf
sbb
(bad)
into
sbb
and
cmp
in
hlt
arpl
xor
repz
bound
jecxz
add
adc
xor
frstor
jo
jmp
inc
out
mov
pop
js
pop
int
in
push
inc
xchg
and
rol
or
mov
jbe
lods
fbstp
std
push
push
push
outs
sbb
and
sti
cs
push
jg
cld
mov
loopne
xor
inc
push
cmp
fsub
inc
imul
shr
pushfw
lock
add
scas
jecxz
push
fldenv
xchg
adc
push
and
stos
cdq
cs
push
cmp
sti
jmp
inc
in
add
in
or
jns
std
sbb
or
hlt
aas
fs
in
(bad)
in
std
mov
mov
cld
mov
sub
and
pop
cmp
sahf
je
jmp
jns
push
(bad)
bound
mov
add
mov
aas
xor
repz
jno
pop
(bad)
out
daa
xchg
call
mov
cmps
fidiv
hlt
clc
inc
popa
loope
add
rcr
mov
js
lock
lods
add
test
and
mov
mov
es
jnp
movs
sbb
into
mov
rep
fnop
pop
and
jle
pop
popf
and
push
les
aad
popf
or
mov
pop
sub
pop
cwde
or
push
mov
xchg
xlat
out
inc
jg
jnp
sti
jo
lods
mov
gs
cmc
pop
xor
dec
pop
callw
jecxz
cld
cmc
sbb
push
dec
and
(bad)
es
pop
fcom
inc
icebp
sub
push
jle
xor
cmp
lds
pushf
jle
pop
pop
pop
loope
pop
xchg
out
pop
arpl
xchg
sbb
xor
test
repz
xor
jmp
xchg
outs
sbb
imul
hlt
(bad)
sbb
and
sar
pushf
out
mov
ret
sbb
iret
popf
or
fs
out
sti
loope
sub
fild
xchg
cdq
in
fwait
add
sbb
mov
mov
sbb
sbb
(bad)
and
into
sbb
cli
data16
and
stc
repz
and
imul
jbe
fisttp
pop
and
movs
retf
inc
dec
retf
xchg
sbb
sbb
enter
xor
inc
retf
sbb
adc
adc
and
sahf
add
sbb
retf
jp
retf
sbb
pop
jb
outs
jge
sbb
pop
fcom
sti
repz
adc
jbe
cs
mov
fadd
iret
pop
inc
test
push
mov
lds
sbb
xchg
stc
jmp
fidivr
add
jge
dec
fcomp
jge
je
dec
dec
js
inc
jmp
(bad)
lock
add
sbb
dec
scas
fs
or
lock
mov
je
adc
movs
pop
dec
out
mov
xchg
dec
aas
je
lock
in
in
cwde
xchg
dec
out
xchg
pop
pop
call
and
cli
xchg
add
inc
cmp
adc
neg
js
out
mov
cmp
(bad)
pop
jne
jae
jg
pop
pop
jl
ficomp
call
fucom
jecxz
jmp
mov
ins
and
hlt
fsubr
jmp
cmps
pop
in
sbb
repz
jmp
jnp
les
dec
cmp
mov
icebp
sub
mov
lahf
xchg
clc
add
rcr
jl
popf
pop
in
scas
fst
jl
stc
pop
repz
inc
das
cmp
sbb
or
dec
pop
jb
dec
push
sbb
cmp
cld
sub
mov
jne
and
out
nop
fst
pop
stos
fwait
mov
ficom
sbb
mov
cmp
in
pop
mov
pop
mov
(bad)
fnsave
adc
prefetcht0
xchg
in
mov
sbb
(bad)
pusha
push
jno
aad
jecxz
pop
fsubr
cmp
xchg
data16
jo
fs
jne
push
ins
sbb
es
lock
mov
inc
out
test
push
or
out
jmp
sti
ds
cld
fidivr
pop
fdiv
mov
mov
mov
inc
dec
test
sub
dec
sbb
cld
xchg
mov
imul
sbb
sub
cdq
lods
mov
(bad)
pop
popa
cmp
pop
cld
loopne
jo
sbb
mov
xchg
mov
arpl
dec
aam
repz
std
push
cld
loopne
push
shl
loope
ins
frstor
xchg
popf
pop
mov
pushf
in
sub
clc
idiv
fdivr
sub
xor
jp
add
push
call
sbb
shr
lods
push
mov
ds
pop
imul
xchg
pop
push
es
mov
in
sub
fdiv
sbb
jb
sbb
jb
cmp
jp
arpl
jg
adc
add
xor
shr
xchg
test
cs
mov
gs
js
push
sbb
jle
cmp
repz
xchg
mov
imul
xlat
push
inc
rol
in
pop
xchg
sub
and
push
retf
sub
daa
or
mov
jns
pop
xchg
pop
imul
js
int
fs
pop
lahf
js
mov
xor
neg
sbb
pop
jmp
pushf
lahf
cld
aad
dec
sbb
xchg
cmp
jp
mov
add
ins
cmps
movzx
ins
out
cmp
jne
pop
mov
jecxz
mov
cmp
jg
pop
pop
dec
and
add
pop
sti
add
fidivr
pop
mov
jmp
pop
movs
cmp
in
ss
inc
pop
test
cmps
push
sub
repnz
std
sti
cmp
lock
loopne
fdiv
pop
cmp
out
pop
jbe
push
mov
pop
lea
repz
(bad)
ror
sahf
dec
pop
pop
fidivr
cmp
mov
ins
fdivr
nop
mov
popa
nop
es
mov
dec
dec
and
ffree
push
xchg
mov
rcr
sbb
or
enter
cmp
mov
sub
pop
call
add
jo
(bad)
addr16
icebp
scas
(bad)
call
jge
inc
inc
mov
pop
xchg
sti
outs
adc
cld
add
push
push
ret
call
fmul
inc
pop
fsubr
or
fdiv
icebp
fsub
cmp
bound
cmp
fcom
dec
push
cmp
repz
sar
inc
dec
fld
test
sbb
out
icebp
sub
loopne
mov
jmp
pop
adc
and
call
sbb
out
into
pop
pop
mov
out
sbb
pop
(bad)
stc
loopne
imul
call
lods
or
aas
cmp
push
(bad)
jge
ins
popa
inc
call
test
test
mov
loopne
push
and
inc
mov
jl
sahf
and
imul
loopne
jne
sbb
cs
scas
frstor
cmp
pop
arpl
jl
sbb
pushf
inc
movs
ret
in
(bad)
hlt
(bad)
mov
push
in
mov
cmc
sbb
call
sub
and
jmp
ja
jg
sub
jmp
(bad)
fmul
pop
sbb
jmp
jg
psubb
dec
sub
mov
imul
xor
inc
mov
mov
mov
add
repz
les
inc
aas
out
(bad)
stc
ins
sahf
das
out
push
jge
and
popf
adc
push
or
neg
or
mov
(bad)
in
hlt
rcl
mov
loopne
add
in
cwde
dec
pushf
xchg
pcmpgtw
cmp
jne
fsubp
in
cld
dec
fmul
push
out
scas
mul
aam
mov
mov
jl
scas
mov
enter
mov
add
test
jne
scas
jecxz
cmp
pop
jg
repz
mov
shl
jbe
cld
jbe
and
xchg
jg
in
push
mov
inc
pop
add
call
loop
sbb
mov
xor
stos
cmp
and
cmp
or
mov
(bad)
std
idiv
or
test
lods
in
and
adc
cmps
dec
xor
xchg
sbb
sahf
xor
sbb
call
fcmove
mov
mov
les
fs
or
js
xor
xor
dec
fmul
jmp
jbe
xchg
jge
fisubr
mov
mov
lds
sbb
(bad)
mov
add
popf
shl
xor
mov
fimul
js
test
add
dec
loope
jbe
movs
arpl
mov
data16
leave
fcom
fld
ins
int
xchg
jbe
jbe
fmul
mov
pop
jl
mov
add
jecxz
xchg
push
dec
outs
outs
ret
jns
mov
xor
ret
cs
add
push
ret
mov
ficom
inc
adc
or
popf
cld
pop
mov
clc
mov
inc
(bad)
mov
jl
ins
cmp
push
sbb
mov
clc
mov
std
or
daa
fs
hlt
(bad)
not
push
jl
pop
mov
rcr
push
pop
lods
push
xchg
outs
jge
jne
mov
scas
hlt
cs
ins
sar
ins
js
jns
out
cli
push
imul
add
dec
fcomp
outs
pop
cmc
out
dec
jg
ftst
jge
mov
and
or
add
push
or
sbb
push
jl
rcr
dec
std
cwde
mov
clc
adc
in
cli
mov
out
push
sbb
mov
jl
cdq
xor
out
lds
mov
inc
sub
inc
mov
mov
inc
or
test
pop
push
daa
cdq
inc
push
es
adc
fdivr
leave
inc
add
jbe
shr
(bad)
js
mov
aas
pop
cld
or
add
repz
jnp
es
and
mov
and
mov
mov
jge
ins
shl
fstp
cmp
or
adc
push
fsubp
neg
cdq
in
pop
aam
lds
arpl
and
dec
mov
xor
mov
les
add
fsub
pop
stos
dec
mov
xchg
shl
or
pop
sub
jmp
jg
or
mov
mov
jmp
or
call
push
shr
xchg
fiadd
shr
dec
mov
bound
and
ss
inc
mov
aas
xlat
mov
in
sbb
inc
pop
adc
aam
cmc
fs
pop
fs
daa
fs
fs
test
mov
xchg
lods
fs
inc
movs
sub
lods
pop
sysexit
test
xor
fld
adc
mov
jl
mov
jmp
add
pop
jp
mov
in
push
pop
fisubr
jmp
sbb
add
pop
xchg
in
adc
test
out
nop
sahf
loopne
push
gs
out
in
adc
pushf
les
pushf
cwde
xor
pop
push
fdivr
pop
dec
xchg
into
sub
mov
fstp
add
cdq
ja
cmp
or
add
push
fdivr
adc
pop
jno
test
fisttp
in
and
into
cmp
popa
fs
call
add
pop
push
lods
mov
xlat
jmp
ss
pop
dec
xchg
pop
sbb
jecxz
pop
out
or
mov
nop
pop
es
in
jl
in
jg
jbe
ins
ins
xchg
jnp
dec
pop
jmp
push
cwde
ds
mov
cmp
sbb
enter
sub
das
sub
mov
push
cdq
in
cld
fbld
pop
test
setbe
fwait
retf
add
pop
icebp
cmc
sbb
mov
xor
inc
shr
jmp
add
ss
mov
(bad)
pop
jl
movs
cmp
lahf
por
push
std
out
mul
pop
(bad)
in
outs
in
pop
inc
sbb
sbb
lods
stos
lahf
cmp
sub
jo
pop
or
add
xor
add
in
bound
cmp
shr
jo
jmp
mov
fs
or
or
jns
push
outs
inc
cwde
xchg
or
sbb
adc
push
pop
(bad)
cmp
fs
jno
je
or
mov
jo
ins
in
fadd
pop
jmp
push
sbb
add
jno
jecxz
or
jle
sti
out
ss
outs
in
or
in
adc
jnp
or
pop
ror
or
(bad)
cmp
outs
xor
inc
out
fs
xchg
mov
fst
pop
jg
adc
sbb
add
(bad)
clc
and
ins
fistp
shl
push
aas
ja
(bad)
lahf
(bad)
inc
or
and
mov
push
test
test
dec
ins
dec
pop
add
clc
push
outs
outs
inc
and
push
and
xchg
imul
dec
test
inc
in
ins
pop
cwde
add
dec
lock
in
dec
mov
in
fs
fnsave
iret
inc
loop
test
lock
pop
mov
sub
cmp
cmc
loopne
cmps
movs
int3
adc
neg
push
add
cmps
cmp
es
or
fst
js
div
stos
ins
(bad)
shl
ins
out
mov
cmp
pop
cmp
cld
je
add
mov
in
fdivr
push
sti
pushf
jmp
ins
sub
rol
sub
sub
sbb
(bad)
lods
xor
das
xchg
push
push
data16
sti
jbe
or
xlat
popa
push
sbb
and
sahf
call
sub
add
sbb
sbb
aam
jbe
out
mov
xor
not
cdq
xor
out
popa
mov
push
fs
(bad)
jmp
popf
sbb
rcl
mov
hlt
fiadd
cld
sbb
in
mov
jmp
fmul
sbb
mov
jg
cmp
push
pop
loop
mov
pop
pop
(bad)
fisttp
cwde
mov
rcr
push
mov
cs
pop
jmp
mov
mov
sbb
mov
in
imul
push
mov
add
sub
std
(bad)
clc
fld
jmp
mov
xor
pusha
and
in
xchg
inc
arpl
bound
pop
lods
add
fisubr
or
lds
ins
jg
repz
iret
mov
out
sbb
jp
mov
jae
push
das
inc
scas
js
and
out
test
and
fmul
pop
xor
fadd
sahf
lock
and
xchg
jg
and
bound
lea
or
out
inc
enter
out
inc
pop
pop
xor
push
out
xor
cmp
int
mov
add
sbb
adc
mov
sbb
jnp
xlat
imul
cld
add
retf
push
xchg
mov
inc
mov
cmp
gs
ja
std
xor
add
cmps
loopne
or
xchg
stos
mov
cs
ficom
es
dec
in
jno
push
sbb
icebp
sti
fsubr
dec
jmp
pushf
test
add
(bad)
call
sti
mov
mov
inc
pop
cmps
pop
dec
push
add
mov
add
or
sbb
jge
aam
or
or
out
gs
pop
pop
inc
cmp
sbb
repnz
sbb
das
sti
mov
cmp
outs
pusha
dec
std
enter
jae
sbb
cmc
fmul
cs
mov
int
les
sub
xchg
pop
stc
ror
scas
inc
dec
xchg
fs
outs
in
test
imul
retf
data16
add
daa
pop
jbe
dec
sahf
lods
cmp
outs
cmp
cmp
out
shl
loop
dec
jmp
pop
sub
jmp
sub
pushf
outs
sti
xchg
dec
ds
loop
scas
or
test
sar
sahf
xchg
ins
push
out
imul
mov
adc
cdq
mov
inc
pop
cdq
sbb
outs
xchg
pushf
jne
cmps
test
rcl
xor
aam
mov
or
in
sub
jl
daa
cs
(bad)
call
aas
mov
cmp
mov
out
mov
(bad)
mov
cmp
inc
jge
fwait
xor
imul
dec
push
ss
sbb
mov
into
cmps
ror
inc
and
add
aas
dec
sti
out
(bad)
jle
cmp
sbb
loop
jmp
add
mov
mov
test
inc
xchg
pop
enter
gs
fwait
add
cmp
sbb
mov
and
bound
pop
jg
lods
clc
xchg
push
and
pop
mov
adc
add
aad
or
fdivrp
fcomp
jmp
bts
dec
jo
sbb
les
mov
popa
fs
mov
outs
dec
hlt
mov
bound
push
hlt
sub
data16
sbb
outs
mov
out
ins
repnz
(bad)
neg
xchg
xor
enter
cmps
or
aam
out
ret
jmp
or
pop
dec
daa
dec
int3
inc
test
inc
cmc
loope
inc
cmp
push
cmp
fst
push
sbb
jne
pushf
je
xor
pop
call
nop
pop
xchg
mov
sti
jmp
dec
jbe
push
pop
retf
pop
mov
sub
push
adc
inc
popf
sbb
sbb
push
shr
dec
xlat
dec
and
push
in
mov
cmps
ret
rcr
mov
retf
push
pushf
gs
jecxz
xor
jns
lds
in
xor
cs
xchg
jmp
imul
or
test
xor
pop
jecxz
mov
mov
jg
pushw
sub
adc
add
cld
push
push
adc
jno
scas
in
mov
sub
loop
aam
cmp
int3
mov
sbb
neg
mov
add
jmp
fs
jnp
in
pushf
mov
cmp
mov
sub
add
shr
imul
sti
ss
ret
push
je
cdq
sbb
fwait
mov
int
cs
xchg
xchg
mov
sbb
cmp
pop
imul
movs
sbb
jmp
add
jmp
lock
out
(bad)
push
jns
sub
test
pop
fwait
ss
dec
sbb
je
out
cmc
loop
cmp
push
imul
mov
lods
out
and
addr16
(bad)
aas
in
pop
daa
pop
andps
std
out
std
jg
repnz
jno
je
nop
in
or
fcom
in
push
call
sub
fsubr
inc
sub
push
add
neg
mul
ins
xchg
ja
lahf
hlt
cmps
nop
jge
mov
mov
pop
iret
fdivr
add
adc
adc
sbb
inc
or
not
fs
cmc
add
or
adc
sbb
pop
push
and
in
sub
jg
and
pusha
push
cmp
inc
cli
dec
push
ja
push
pop
mov
fs
ins
out
mov
xchg
push
ds
mov
ja
aaa
nop
sbb
pushf
test
xchg
mov
in
mov
out
enter
pushf
fmul
pop
loope
inc
sbb
dec
in
and
ss
out
test
sahf
lods
sbb
and
ins
aad
fstp
cmc
int
fadd
cmp
addr16
pop
or
fild
pusha
mov
dec
ins
inc
add
sti
jne
imul
pop
popf
sbb
daa
push
add
jle
xchg
sahf
and
je
(bad)
jmp
in
into
pop
pusha
daa
(bad)
in
jl
data16
dec
sbb
jmp
cmp
pop
movs
fcomp
gs
enter
lods
std
div
(bad)
loopne
int3
in
aam
ins
fdivr
pop
in
add
loopne
hlt
push
movs
test
sbb
jbe
adc
pop
and
xor
and
in
mov
or
je
fs
(bad)
mov
jb
(bad)
jg
js
loope
das
mov
ss
xor
dec
in
mov
test
retf
xor
adc
and
lods
sbb
fscale
hlt
in
inc
sahf
jb
pop
push
pop
std
mov
pop
push
(bad)
stc
popa
(bad)
or
fmul
sbb
sbb
lods
sbb
or
inc
cmp
sub
std
sbb
sub
mov
mov
inc
mov
pop
mov
sbb
ja
sub
xor
mov
in
and
(bad)
fstp
mov
xchg
xor
inc
test
or
in
lods
pop
inc
sub
rcl
sti
xchg
inc
dec
data16
lock
cdq
(bad)
fisttp
hlt
lock
popfw
sbb
pop
xor
pop
sbb
pop
fisub
jge
pop
push
bound
sti
xor
sbb
in
arpl
rcr
(bad)
retf
daa
push
sbb
xor
outs
cmp
pop
inc
mov
(bad)
out
cs
mov
mov
(bad)
imul
(bad)
pop
js
xor
ds
repz
add
jg
sar
addr16
ret
sbb
fstp
fadd
into
mov
in
jo
add
fstp
mov
dec
jb
outs
bound
mov
pop
pop
dec
cmp
xor
mov
ins
jne
in
wrmsr
dec
jmp
dec
bound
jns
sbb
ins
sub
xor
test
pop
out
sbb
push
in
or
dec
mov
out
idiv
sbb
jge
or
sbb
into
inc
sbb
xchg
and
ss
in
xlat
mov
cli
pusha
sti
shr
retf
mov
shr
inc
repz
int3
jge
int
imul
mov
lock
hlt
loope
lds
dec
jmp
jo
or
xchg
inc
and
into
sub
cld
out
mov
jp
std
pop
call
sbb
bound
test
push
mov
jae
or
push
pushf
push
dec
out
sub
mov
xor
and
es
(bad)
clc
out
cmp
add
pop
pushf
add
push
xor
mov
enter
popf
out
int3
mov
(bad)
xor
cmp
jbe
mov
popf
sbb
mov
fstp
and
mov
call
add
xor
lea
jge
or
sahf
and
mov
xchg
hlt
gs
push
pop
retf
and
mov
jl
add
ds
jmp
imul
and
sbb
fwait
mov
popa
xchg
add
pop
dec
jbe
mov
push
cmc
pop
shl
cs
aad
mov
popa
ja
ss
cmp
xor
in
xchg
pop
out
or
std
jl
sbb
imul
mov
sbb
cdq
pushf
and
cmp
and
scas
mov
push
outs
or
sbb
pushf
hlt
sbb
mov
int3
(bad)
and
cmc
mov
in
or
jge
or
js
in
cmc
ins
outs
inc
xor
je
ss
cs
push
in
pop
jo
gs
ins
sub
jl
outs
cmp
mov
movs
push
mov
call
jno
and
popf
jp
outs
sbb
mov
ins
jg
idiv
imul
xchg
out
push
int3
or
or
outs
jo
inc
push
lds
pop
xchg
ret
add
fadd
jnp
mov
xchg
fstp
sub
dec
push
imul
sbb
sbb
pop
cmps
and
shl
mov
xlat
pop
mov
mov
aaa
adc
(bad)
out
add
sub
push
inc
aas
gs
daa
mov
arpl
jns
stc
daa
outs
push
movs
dec
jmp
fs
in
js
jge
add
js
nop
push
sub
outs
ds
push
push
hlt
ja
push
hlt
mov
cwde
fidivr
sbb
loopne
dec
call
xchg
and
add
sti
nop
or
and
ins
and
xor
sbb
cmp
dec
into
sub
add
popf
popa
movs
imul
jns
xor
outs
arpl
out
(bad)
mov
mov
neg
leave
cli
shl
addr16
fdecstp
std
loope
jmp
stc
mov
cld
cmps
push
xlat
sbb
into
jns
sbb
outs
sbb
push
sbb
ja
out
sub
test
(bad)
aaa
mov
in
pop
pop
or
xchg
xor
das
adc
test
inc
inc
sbb
and
xchg
pop
stc
lahf
pop
addr16
loopne
ja
movq
lods
xchg
(bad)
hlt
pop
xchg
xor
mov
push
(bad)
mov
pop
std
xlat
sbb
outs
push
div
or
push
out
sbb
daa
lods
cmp
or
pushf
jecxz
jbe
mov
es
fs
fs
fs
pop
fs
dec
ins
push
pop
popa
pop
ja
data16
outs
out
gs
and
jl
jbe
xchg
add
sub
cmps
add
scas
daa
js
sbb
(bad)
repnz
cmp
sub
aaa
fiadd
(bad)
jl
lds
sub
inc
add
aaa
xchg
imul
mov
add
add
xchg
xchg
and
mov
repz
push
cmp
adc
in
mov
and
pop
pop
cmc
sbb
inc
add
cli
jno
inc
sbb
sub
sub
inc
jmp
adc
in
outs
adc
xor
cdq
(bad)
fadd
test
jnp
daa
push
and
sar
mov
cmp
push
cli
retf
pop
push
cmp
movs
mov
mov
outs
pop
fwait
sbb
repz
add
push
jp
dec
arpl
push
les
add
or
popa
xor
pop
and
movs
movs
and
jecxz
(bad)
sbb
or
test
jmp
imul
pop
xchg
cmp
xor
std
out
std
aas
push
std
pop
shl
je
jp
in
ja
xchg
es
xchg
jnp
push
mov
sub
jne
inc
fs
and
sbb
clc
sbb
inc
jl
repz
fcomip
jb
push
out
stc
int3
(bad)
in
or
out
mov
and
add
pop
fld
mov
sbb
mov
inc
mov
sahf
test
test
cli
pushf
fs
hlt
xor
daa
push
fdiv
mov
retf
mov
push
icebp
and
or
cs
cmp
in
pop
fs
fs
(bad)
fs
fs
sbb
sbb
sbb
and
fs
fs
fs
ins
in
movs
in
outs
cld
cmc
loope
xchg
jbe
inc
pop
cs
ss
fld
push
push
stc
aaa
dec
ins
fnstsw
add
pushf
sbb
pushf
iret
xchg
call
push
sub
add
xchg
out
or
xchg
inc
(bad)
sbb
mov
call
popf
pop
push
add
movs
shl
push
loope
pop
das
and
or
scas
adc
jae
loop
sti
pop
jecxz
daa
add
ss
fmul
in
push
pop
out
jne
rol
push
jns
iret
(bad)
xor
pushf
mov
inc
xor
aad
and
dec
icebp
cdq
fnsave
lods
int3
dec
cwde
inc
sahf
test
popf
push
pop
enter
add
sbb
mov
sbb
sbb
lock
rol
push
into
or
jecxz
scas
dec
mov
jmp
push
jno
pushf
and
bound
mov
jg
rcl
jge
fwait
mul
xor
mov
out
xor
sbb
and
je
mov
mov
push
mov
rcr
scas
inc
ins
mov
les
movs
push
test
mov
pop
sbb
repnz
push
int3
pop
aam
sbb
outs
ds
mov
retf
std
cmp
pop
movs
adc
cli
pushf
das
call
inc
mov
push
pushf
rol
js
jns
and
xchg
stos
or
out
cdq
jbe
das
cmc
jbe
jg
inc
cmc
sub
mov
sbb
mov
in
or
popa
jbe
lods
push
je
jns
in
das
jmp
cmp
(bad)
sbb
adc
in
repz
loopne
fstp
cmp
(bad)
mov
into
and
in
(bad)
ja
jge
sub
pop
inc
push
cs
add
sti
xchg
std
dec
mov
fs
add
push
(bad)
jle
test
stc
(bad)
(bad)
mov
mov
stc
and
ja
shl
mov
stc
data16
mov
cmp
xor
mov
jmp
inc
mov
imul
dec
(bad)
jbe
xchg
je
cmp
bound
mov
dec
push
push
outs
fwait
dec
gs
fwait
scas
out
call
pop
and
jmp
add
jbe
cmp
pusha
popa
sbb
cld
(bad)
mov
xchg
cmp
pop
pop
sub
scas
pop
adc
sti
js
xchg
pop
pop
adc
or
push
fld
sbb
sub
test
cmp
out
int
lock
mov
es
(bad)
lock
pop
sbb
adc
jno
gs
mov
fisub
mov
in
out
sahf
call
adc
adc
std
pop
mov
inc
xor
dec
mov
sbb
mov
out
(bad)
neg
pop
push
lods
sub
jmp
rol
pop
stc
pushf
and
fld
outs
inc
je
loope
test
imul
shl
inc
mov
pop
(bad)
add
pop
lods
sbb
cmp
push
push
jl
jp
lods
and
in
fwait
or
shl
cmp
push
adc
jno
add
call
inc
je
fwait
sbb
lods
adc
aas
arpl
push
enter
cdq
(bad)
sti
mov
jg
(bad)
mov
das
jecxz
frstor
int3
ins
inc
dec
vpaddsw
mov
inc
movs
movs
push
pushf
xchg
es
mov
mov
xor
jg
test
retf
data16
sbb
rcr
test
push
out
sbb
mov
mov
dec
aam
and
jl
jg
push
mov
xchg
push
repnz
and
fmul
dec
cmp
mov
xor
setl
icebp
cmp
imul
cld
jne
adc
sbb
loope
pop
mov
add
sar
inc
pop
popf
xchg
(bad)
clc
stos
and
into
xor
mov
pushf
das
inc
cmp
test
in
xchg
in
ins
mov
jge
loop
(bad)
push
stos
cmp
push
cmc
pop
sub
add
rcr
mov
shl
add
push
jne
and
dec
and
punpcklbw
in
sar
cmp
test
mov
pop
push
add
in
inc
std
push
sub
jno
call
cli
push
aam
and
sbb
and
cmp
push
out
sbb
and
mov
mov
push
out
fstp
lods
aad
adc
inc
push
jecxz
popf
pop
movs
cmc
xor
push
xor
or
jb
push
mov
sahf
jecxz
jmp
pop
sub
sti
int3
call
add
in
mov
sbb
xchg
div
out
jl
sbb
(bad)
sti
and
fcmovbe
push
loop
das
pusha
pop
push
in
imul
sbb
jg
jecxz
xor
ficomp
jb
pop
jl
das
mov
mov
test
test
pop
stos
push
pop
cwde
scas
dec
iret
mov
pop
mov
inc
pop
nop
inc
and
pop
add
cmc
sbb
movs
aaa
cmc
xchg
cmc
lods
jl
fldenv
and
add
data16
sbb
call
pop
mov
pop
lock
push
xchg
xchg
dec
hlt
dec
jns
fwait
pop
adc
repz
push
add
sub
hlt
mov
and
imul
fbstp
adc
sub
mov
js
add
jb
mov
popa
ins
inc
mov
cmp
pop
aad
retf
pop
ins
xor
(bad)
add
jne
sbb
outs
pop
xchg
inc
in
pop
out
push
jb
popf
loope
outs
ror
in
jecxz
push
mov
cmp
std
and
popf
push
jg
lea
sbb
push
sub
dec
arpl
rcr
sahf
shr
xchg
jo
and
pop
pop
pop
mov
addr16
popa
add
mov
dec
je
fs
pushf
push
lods
pop
pop
ror
in
mov
cdq
sbb
push
movs
and
inc
pop
fnsave
mov
push
cld
xor
fwait
icebp
pushf
and
xchg
mov
std
outs
test
out
jg
cwde
les
xor
lods
inc
(bad)
or
(bad)
cmp
fs
fs
outs
add
retf
sbb
fsub
fs
(bad)
xor
add
sahf
adc
pushf
push
rcr
aam
cmps
dec
or
in
in
sbb
cmp
rcr
sub
push
mov
aas
ins
adc
ins
adc
shr
call
xor
and
jae
pop
jl
jmp
rcr
cwde
push
jbe
push
dec
sub
(bad)
popa
pop
out
call
and
sbb
cs
pop
es
cmp
cdq
cli
call
cmp
loope
inc
cmp
and
and
loop
es
lods
xor
jle
mov
pop
es
xchg
cli
jge
jmp
shl
and
popf
lods
push
add
push
xchg
stos
xor
std
repz
std
xor
fwait
neg
popfw
add
mov
retf
rcl
jg
push
in
std
cmc
sbb
jae
or
fisubr
mov
mov
sbb
popa
mov
and
and
mov
lahf
sub
out
cmp
cmovo
(bad)
mov
cmp
mov
inc
jnp
jb
mov
enter
dec
test
mov
ins
mov
pop
imul
fmul
inc
jl
or
jge
jle
call
push
dec
ret
in
inc
mov
xor
sbb
nop
shr
dec
(bad)
jne
fimul
mov
das
popa
add
in
mov
loope
enter
das
frstor
call
sbb
and
test
and
dec
into
mov
fs
mov
in
add
xchg
and
sbb
retf
sahf
and
das
jecxz
outs
adc
sbb
cs
cld
ret
rcl
dec
shl
nop
mov
ret
xchg
pop
cwde
(bad)
mov
in
sub
sbb
rol
cmp
lods
xchg
jmp
lods
sub
mov
mov
pop
push
or
lods
(bad)
sar
or
cmp
shl
push
int
and
sahf
sub
sbb
cld
xor
fdivr
lock
popa
mov
repz
mov
and
sar
mov
and
mov
test
push
mov
jl
jne
clc
aas
cld
les
call
mov
aaa
repnz
xor
ss
mov
icebp
fld
and
js
adc
push
outs
aas
ret
and
jp
and
sbb
lock
xor
pop
rol
in
in
sbb
pop
inc
pusha
fsub
fidiv
rol
and
fidivr
xchg
aas
mov
fs
inc
xor
cmp
loopne
ins
sbb
loopne
test
fistp
ds
jg
mov
rcr
iret
jp
push
gs
pop
repz
xchg
pop
adc
mov
adc
mov
inc
clc
neg
(bad)
mov
lock
movs
xchg
pusha
in
xchg
sti
popa
imul
sbb
jns
jns
xor
dec
data16
lahf
pushf
dec
nop
mov
mov
ja
or
repz
or
sbb
jbe
pop
sbb
xor
pop
xor
mov
xchg
imul
je
xchg
aad
inc
xor
sub
and
mov
in
jo
mov
test
cmp
aaa
or
mov
sbb
mov
ds
pop
mov
in
xchg
jbe
jge
retf
inc
jge
popf
dec
out
mov
xchg
fstp
jnp
sbb
xor
and
mov
outs
cmps
add
xchg
xchg
stc
repz
inc
push
fsubr
pop
pop
pop
sbb
mov
xchg
cmp
adc
std
mov
cmp
mov
outs
retf
pop
or
aaa
cmp
push
inc
pop
and
xchg
es
pop
out
push
daa
add
outs
sbb
add
and
xor
mov
popa
ds
lds
into
jnp
lahf
inc
jle
es
popa
jge
push
jmp
test
xor
test
imul
push
fs
int
sbb
in
pop
dec
sbb
clc
int
cmp
aas
stos
xor
aam
jmp
jmp
fnstsw
gs
cmp
xchg
imul
jecxz
(bad)
mov
fs
jg
(bad)
and
fs
push
pop
sbb
xor
cmp
xor
xchg
sub
xchg
jmp
imul
push
cmp
les
scas
sbb
imul
sbb
imul
fdivr
xor
jl
ins
xchg
call
add
ficomp
adc
stos
pop
add
pusha
xchg
and
push
cmps
mov
jne
imul
lods
adc
sbb
les
imul
pusha
lds
rcr
or
sbb
jecxz
and
data16
aad
adc
out
jl
and
sub
lods
jns
mov
mov
mov
lods
inc
mov
pop
pop
mov
sets
mov
xchg
cmp
fidivr
rcr
sub
xor
mov
sahf
les
and
inc
jmp
cli
add
cli
xor
and
pop
xor
cdq
push
adc
xor
cmps
xchg
dec
in
jmp
aad
sar
mov
fisubr
fsubr
loopne
pop
dec
aas
dec
push
ins
push
mov
aas
ins
xchg
cli
jae
js
jl
push
pushaw
arpl
mov
movs
xchg
aas
fwait
pop
xchg
ins
sbb
adc
xchg
loopne
xlat
or
sub
movs
scas
ins
fadd
mov
xchg
loopne
sbb
or
sti
or
pop
push
loope
rcr
add
lahf
scas
pop
sbb
jge
add
das
pushf
sub
cs
jne
inc
xor
jae
mov
push
jne
sbb
mov
adc
sub
(bad)
js
and
clc
out
dec
(bad)
popa
dec
outs
adc
adc
sti
cmp
fnstenv
pop
pushf
in
and
mov
pop
sti
out
push
add
mov
minps
and
xchg
cmp
sbb
shl
add
adc
sti
out
sbb
jae
rol
mov
inc
cmps
jge
sbb
test
ret
jg
lods
mov
xchg
sbb
xor
cmps
lods
ins
aad
inc
xchg
fisttp
pop
popf
stos
aam
cs
data16
jge
icebp
sub
xchg
in
retf
sbb
je
cmp
push
pop
shl
pop
adc
xchg
xor
out
or
sbb
mov
push
sbb
sbb
lods
sbb
(bad)
mov
adc
xor
fucom
imul
jae
mov
fdivr
dec
mov
cmp
pop
ins
ret
aas
add
pop
stos
inc
(bad)
xor
stc
or
add
sub
jbe
push
pop
(bad)
into
mov
jmp
in
push
das
dec
push
test
mov
pop
fs
pop
fld
adc
ror
mov
int3
fld
pop
das
pop
mov
neg
jns
add
pop
js
cld
arpl
gs
repz
adc
sbb
push
cmps
jbe
adc
out
add
and
stc
mov
ds
and
jg
jmp
add
mov
xchg
fs
aad
loop
imul
sahf
jmp
(bad)
mov
pop
xor
test
in
sub
add
jo
pushf
jp
lahf
jns
rol
cmp
lds
xchg
ins
in
(bad)
xchg
fsubr
dec
adc
push
icebp
cmps
jp
and
pop
inc
loop
add
inc
cmps
pop
and
adc
cmp
pop
sub
fdivr
das
dec
mov
inc
push
and
dec
cmp
imul
mov
mul
fwait
pop
xor
or
jbe
push
mov
pop
or
inc
out
repz
nop
(bad)
mov
or
push
mov
daa
cmps
xchg
retf
sbb
xchg
(bad)
push
jb
je
das
pop
push
mov
and
jmp
std
pop
jecxz
rcl
push
call
fwait
cld
and
xor
pop
adc
dec
mov
popa
into
icebp
scas
in
fld
popa
test
enter
das
lods
or
fsubr
sbb
ret
and
push
into
int3
cmp
cs
mov
loope
imul
xchg
lds
jmp
fs
jbe
fldcw
pushf
sbb
cld
scas
push
and
and
add
push
aaa
out
push
xchg
xor
inc
out
add
nop
movs
xor
and
jg
cmp
jle
out
div
les
dec
stos
pop
mov
xchg
push
sub
fsubr
in
jmp
adc
xchg
mov
pop
lea
pop
sbb
jb
out
pop
cs
or
shr
or
sbb
rcl
xchg
add
mov
ja
push
mov
pop
ja
outs
push
pop
(bad)
xchg
and
sti
mov
nop
add
(bad)
sbb
or
xor
rol
jbe
stos
out
not
jmp
arpl
inc
std
push
je
mov
lods
mov
xor
hlt
fbld
sti
retf
in
and
sbb
dec
and
adc
pop
enter
test
mov
cmp
test
div
push
movs
and
add
add
inc
(bad)
xor
and
cmc
jge
out
in
(bad)
jmp
and
mov
mov
das
cmc
push
lahf
js
xchg
mov
movs
iret
cmp
mov
lds
dec
test
fst
xchg
jmp
lods
daa
and
fbstp
pop
jg
lock
xor
jmp
aam
mov
pop
and
sbb
xchg
cmc
pop
mov
dec
ins
mov
jmp
cwde
push
adc
(bad)
cmp
out
dec
sbb
adc
cmp
les
add
cdq
sub
xor
repz
in
mov
clc
adc
ss
sbb
add
ja
jbe
mov
inc
fs
sbb
sahf
cmc
inc
jmp
(bad)
or
cmp
xchg
xor
gs
(bad)
shr
xchg
jge
mov
cmp
cli
or
mov
out
je
push
mov
rcl
(bad)
pop
nop
add
sub
push
out
sbb
mov
data16
pop
call
push
mov
call
and
in
enter
sti
sbb
icebp
lods
mov
(bad)
fldlg2
(bad)
push
test
sar
mov
jne
jbe
xor
push
cmp
bswap
ficom
shl
sbb
or
bnd
and
pop
pop
add
adc
ror
ja
aad
stc
shl
clc
pop
(bad)
ja
cmp
ins
inc
(bad)
retf
loope
test
int3
cmps
pop
iret
(bad)
sub
mov
(bad)
sbb
xchg
leave
jmp
push
popf
fcom
sub
das
movs
outs
cmps
dec
sbb
and
retf
(bad)
es
mov
cli
test
scas
add
jmp
and
imul
out
retf
sub
jae
cmp
cld
mov
adc
push
add
test
and
mov
outs
pop
aad
je
stos
mov
dec
pusha
ins
xor
mov
and
pop
xor
(bad)
sbb
adc
pop
test
sbb
jecxz
retf
pop
or
push
jge
jecxz
sub
cs
lods
xchg
sbb
dec
and
clc
sahf
pop
pop
inc
outs
fstp
mov
add
aas
jne
sub
pop
fst
mov
or
fld
cld
jns
in
in
adc
fisubr
pop
fwait
pop
or
into
pop
lock
out
fadd
xor
nop
mov
lock
pop
lods
push
jmp
adc
pushf
jle
sbb
or
(bad)
dec
jl
lock
pop
outs
jbe
add
test
pop
cmp
fisubr
lock
data16
fldenv
hlt
cmp
jbe
movs
sbb
imul
sub
push
fnstsw
jp
mov
pop
cmp
lock
mov
je
lods
dec
shl
pop
mov
add
aam
adc
ins
pop
lock
cdq
fldcw
out
push
adc
je
dec
xor
call
cmp
fidivr
pop
ds
dec
jbe
pop
jno
pop
or
add
pop
push
mov
xchg
add
sti
jecxz
sbb
icebp
sar
and
mov
jmp
jnp
or
xor
out
call
je
js
pop
push
jge
jnp
dec
movs
sbb
sbb
push
inc
ins
pop
(bad)
mov
xchg
fiadd
cmps
jecxz
and
or
outs
push
jg
sahf
(bad)
enter
add
fnstsw
test
scas
mov
pop
inc
cmp
adc
cld
fisttp
mov
jmp
and
mov
pop
pop
sbb
cs
pop
mov
mov
dec
int3
pusha
gs
shl
sbb
sbb
cmp
ins
cs
pop
dec
mov
pop
aad
mov
push
sub
mov
aad
inc
sbb
shl
inc
lods
pop
jne
jl
cs
sub
mov
imul
cmc
(bad)
adc
pop
stc
int3
(bad)
mov
mov
pop
dec
fs
sub
fcomp
sub
sbb
aaa
in
pop
or
jmp
cmp
mov
dec
(bad)
std
into
jmp
(bad)
sub
mov
mov
jl
mov
les
test
stc
pop
jecxz
jg
fldenv
ftst
pop
sbb
shl
add
sbb
(bad)
arpl
mov
out
or
cli
mov
jnp
ficomp
aad
sbb
pop
lds
call
jnp
dec
pop
imul
pushf
cmp
mov
jge
into
xchg
call
stos
(bad)
imul
cmp
pop
jmp
pop
jno
jmp
mov
mov
jp
mov
out
mov
push
stos
add
mov
in
inc
xor
xchg
cmp
out
fidivr
mov
pop
jmp
sbb
in
in
(bad)
cdq
mov
jl
add
xchg
pop
lods
in
(bad)
jl
clc
jno
sbb
sbb
call
sbb
(bad)
in
sahf
mov
pop
sbb
(bad)
mov
sbb
loopne
mov
cmp
call
pop
jl
mov
test
push
(bad)
std
into
jmp
(bad)
sbb
mov
(bad)
loopne
jns
stc
ror
inc
push
xchg
shl
mov
xor
xchg
sub
dec
jns
dec
or
and
push
fiadd
mov
or
mov
sti
pop
leave
xchg
push
sbb
cmp
xor
repz
cmp
sbb
dec
lock
stc
imul
mov
mov
inc
dec
cmp
call
dec
adc
push
mov
fstp
dec
or
stc
cmp
in
out
loope
ds
mov
push
xor
pusha
or
imul
test
sbb
imul
sbb
movs
sti
fs
inc
rcr
fs
popa
jg
or
ds
sbb
cli
and
and
in
xchg
in
fs
fs
jbe
lods
pop
fs
lds
fs
fld
cmc
and
mov
(bad)
into
xlat
test
sti
sar
cmp
add
cli
xchg
outs
and
cmps
out
jl
sbb
mov
dec
sbb
xchg
gs
icebp
mov
clc
mov
or
jl
loop
cmp
sbb
and
add
outs
add
stc
push
loop
repz
loop
movs
pop
and
dec
sbb
push
pop
push
loop
(bad)
in
ins
in
pop
lea
xchg
std
movs
in
lods
fs
aad
sub
loop
ret
cwde
das
in
pop
clc
fs
xchg
sar
jne
into
mov
pop
xchg
jmp
cdq
jecxz
mov
pop
cdq
(bad)
fucomp
pop
test
pop
shr
lea
sub
pop
inc
bound
jge
push
inc
push
ss
imul
sbb
pop
xchg
jno
aam
lahf
ins
xchg
fcomip
imul
fs
int
fs
sbb
dec
in
cmc
ja
mov
jb
imul
inc
dec
je
jne
push
fs
sbb
outs
mov
(bad)
pop
adc
jl
add
xchg
mov
jg
jmp
xlat
out
out
lock
dec
pop
adc
mov
sbb
xor
sahf
pop
add
pop
xchg
outs
push
popf
cmp
pop
xor
outs
lods
sbb
xchg
sahf
add
and
xchg
out
pop
data16
in
cdq
retf
sub
mov
jecxz
jl
dec
lods
sbb
xchg
std
jbe
std
jg
std
out
mov
sbb
sbb
vmread
pushf
fadd
in
and
hlt
jp
mov
push
shr
mov
nop
adc
ins
pop
and
loop
xlat
mov
fst
pop
shl
lds
(bad)
and
fld
imul
jecxz
push
pop
adc
jno
and
xor
and
fsubr
xchg
push
and
xchg
outs
dec
sub
and
push
in
sbb
and
xor
retf
mov
call
popf
in
outs
pop
fdivr
ja
std
inc
mov
xchg
pop
ss
call
std
repz
stos
pop
sbb
in
pop
sub
sub
std
add
adc
sub
cmp
into
icebp
retf
pop
jmp
into
ins
mov
nop
movs
bndldx
fadd
fstp
mov
sbb
test
fsub
ret
es
pop
ins
fldenv
inc
outs
ins
inc
xchg
sub
adc
pop
in
and
ins
xor
arpl
sbb
dec
imul
je
outs
std
ins
jge
sub
jecxz
(bad)
add
jno
sbb
sub
push
adc
sbb
cli
neg
pushf
out
and
pop
xchg
rcl
or
dec
jl
sar
pushw
mov
push
fs
imul
mov
sbb
and
(bad)
fbstp
rcr
cmps
ins
sbb
je
stos
ins
ret
push
xchg
popw
cld
pop
mov
push
hlt
paddd
pop
jge
es
ds
add
mov
dec
dec
in
sbb
jo
leave
cmp
in
xchg
hlt
dec
jmp
pop
add
cmc
(bad)
test
in
ret
cmps
jecxz
adc
loop
scas
fild
fxch
in
fwait
(bad)
jecxz
sub
push
xchg
test
gs
push
xor
pop
sti
aam
int
lods
xchg
mov
pop
inc
clc
fbld
cmp
scas
xchg
pop
mov
add
loope
out
mov
icebp
ret
pop
cdq
fld
push
iret
push
sbb
mov
fnsave
sub
jmp
repz
and
pop
jecxz
dec
popa
cmc
cld
mov
and
into
adc
xchg
imul
aam
mov
sti
mov
xor
jle
fmul
(bad)
in
and
and
mov
ins
ins
sbb
jbe
hlt
retf
in
pushf
push
in
movs
push
cld
lods
sbb
sbb
pop
je
pushf
xchg
outs
and
cmp
xchg
pop
in
into
adc
cld
icebp
out
inc
fld
add
mov
adc
push
sbb
fs
cdq
jmp
nop
jns
add
pop
pop
or
jle
repz
jmp
add
int
xor
out
sbb
xchg
out
test
mov
xor
in
push
mov
sbb
out
sti
fdivp
xchg
mov
mov
ficom
adc
fs
cli
icebp
popf
mov
cs
in
sbb
jle
mov
clc
sbb
pop
pushf
jecxz
sub
xchg
fmul
sbb
aas
cli
repz
sbb
xchg
test
add
mov
sbb
(bad)
and
xor
cmp
repz
and
mov
inc
in
mov
cmp
pop
add
ss
mov
fwait
mov
cwde
imul
inc
mov
push
jae
mov
dec
push
(bad)
adc
and
sbb
mov
std
inc
iret
and
out
(bad)
pop
xor
push
adc
add
sbb
ret
cmp
sbb
or
sbb
jecxz
xor
inc
pushf
push
scas
popa
mov
fdivr
in
ins
jmp
jb
repz
jne
sti
and
lods
das
jae
push
jl
or
cmp
jge
xor
inc
sbb
les
outs
ss
sti
ror
stc
mov
inc
pop
loopne
rcl
and
scas
dec
fs
in
sbb
js
movs
inc
pop
sub
adc
es
sub
neg
popa
loopne
pop
fs
hlt
cs
std
je
ins
std
add
cld
retf
inc
add
out
xchg
bound
push
pop
aas
sbb
dec
xor
pop
fnsave
in
push
sti
push
xchg
rcl
mov
inc
pop
add
mov
sbb
cmp
test
stc
mov
outs
cmp
fstp
xchg
or
mov
jg
or
jp
inc
jge
adc
dec
pop
in
(bad)
cmp
inc
jl
jge
aas
std
xchg
adc
movs
cmps
and
jmp
xchg
fidiv
fsub
retf
ret
inc
and
push
add
cmp
jmp
retf
movs
add
(bad)
sar
rcl
add
icebp
sub
jmp
ja
jg
inc
cmps
mov
jecxz
rcr
adc
mov
lods
jns
or
js
das
sbb
inc
lock
adc
push
fs
inc
jmp
lea
push
ffreep
jb
aam
jbe
mov
xchg
adc
pop
inc
xchg
mov
rcl
add
add
push
mov
add
pop
adc
adc
inc
vunpcklps
popa
js
add
pushf
push
xlat
mov
(bad)
mov
mov
jecxz
repz
push
leave
push
jmp
fild
out
and
pop
repz
and
inc
cdq
pusha
add
retf
adc
movs
cs
out
push
adc
sti
or
cs
sub
xor
sti
cmp
enter
adc
sbb
push
das
sbb
and
push
sahf
xchg
sbb
xchg
xchg
dec
xchg
call
scas
idiv
fidiv
or
fimul
sti
movs
pop
sub
(bad)
pop
fild
stos
shl
fs
sub
aaa
sbb
mov
sub
bound
sti
and
mov
dec
nop
mov
ret
push
clc
cmp
fnstenv
daa
adc
and
xor
adc
(bad)
fcmovu
call
jmp
mov
pop
mov
mov
movs
mov
cmc
addr16
cli
push
add
call
ja
inc
popf
and
imul
cs
adc
iret
mov
pop
stos
jb
jb
fwait
(bad)
retf
ins
(bad)
mov
mov
inc
out
mov
fsub
cmps
fsubr
loopne
mov
ja
sti
push
and
sbb
mov
sub
push
(bad)
push
cmc
sbb
mov
sbb
cmp
jg
call
adc
movs
xchg
call
xchg
cmp
mov
fmul
sbb
or
pop
inc
cdq
iret
sti
add
sub
push
(bad)
test
mov
mov
sub
sbb
sub
xchg
dec
inc
sub
mov
mov
mov
mov
fdivr
fstp
jl
fild
jge
je
xchg
mov
pop
adc
jp
xchg
retf
inc
(bad)
hlt
xor
xor
std
xchg
pop
push
data16
jge
cmp
jmp
jl
cmp
adc
lock
mov
fcmovbe
xchg
imul
or
jg
ret
outs
mov
retf
inc
ds
push
mul
mov
int
cli
in
int3
sti
outs
pop
jb
xor
lods
clc
rcr
out
(bad)
pusha
test
sbb
pop
cld
dec
cmps
cvtps2pd
ficom
xchg
adc
sub
add
jl
call
retf
cmp
jne
push
sbb
mov
addr16
xchg
das
and
or
pop
or
cmp
fisttp
das
loop
(bad)
js
mov
pop
add
(bad)
cwde
dec
push
(bad)
dec
repz
sub
push
sub
jbe
pusha
shl
and
sub
out
jl
outs
test
fld
push
jecxz
mov
and
out
out
and
pusha
cld
das
lods
mov
das
fs
inc
pop
lea
or
adc
pop
pushf
and
aad
push
sub
adc
xchg
fs
call
outs
sar
cli
scas
xor
fwait
les
jne
sti
inc
data16
sbb
leave
cmp
shl
dec
sbb
cwde
xchg
(bad)
inc
xor
leave
fcom
dec
int
or
js
inc
outs
add
push
lock
fidiv
inc
test
sbb
sbb
neg
(bad)
out
pop
pop
(bad)
mov
mov
fimul
pop
jg
xor
sbb
arpl
mov
dec
imul
retfw
popa
and
add
aam
mov
in
pop
cli
inc
(bad)
fcomp
shr
cmp
inc
or
cmp
jp
fwait
pop
es
nop
movs
int3
sbb
jmp
xchg
icebp
test
xor
mov
inc
cmp
sub
lods
inc
inc
xchg
lea
ret
mov
inc
das
mov
(bad)
inc
iret
sti
data16
sbb
or
jecxz
jmp
pop
int3
mov
jecxz
gs
sti
inc
fsubr
mov
(bad)
ds
outs
and
push
repz
or
push
or
inc
mov
add
sbb
les
ds
cli
sub
mov
sbb
cli
ja
pop
mov
lea
sub
xchg
out
pop
fsub
jns
inc
mov
mov
dec
arpl
test
mov
jmp
xchg
cmp
sbb
jnp
into
jne
callw
jg
mov
inc
js
mov
rcl
mov
xor
retf
mov
jbe
push
push
in
mov
and
pop
sbb
mov
jbe
pop
jp
imul
cmp
outs
pop
(bad)
aaa
push
popa
dec
js
push
les
call
hlt
mov
lds
sbb
cli
push
push
pusha
cmc
sbb
repz
sub
(bad)
xor
mov
cli
dec
add
stos
daa
(bad)
int
fcomp
in
pop
out
mov
dec
or
xor
pop
out
pop
xchg
out
xchg
pop
jge
push
loope
test
ret
jno
jmp
arpl
mov
jecxz
repnz
hlt
hlt
mov
sti
les
stc
mov
push
inc
mov
(bad)
aam
cmp
ins
jmp
jmp
in
sub
add
cmp
mov
(bad)
(bad)
xchg
lods
adc
dec
jle
xchg
nop
cmp
xor
daa
retf
(bad)
fsub
pop
js
sti
jp
pop
mov
mov
cmp
mov
xor
pop
nop
mov
sub
fild
neg
pop
push
push
inc
fs
sbb
std
push
pop
std
lahf
fs
sbb
mov
xor
jbe
xchg
fbld
adc
scas
mov
sti
not
enter
std
mov
scas
imul
jl
mov
push
shl
fs
sbb
push
in
in
pop
jne
pop
push
or
add
mov
adc
sbb
xchg
sub
fstp
jnp
cmp
sbb
fsub
pop
sahf
cld
mov
je
or
ins
pop
js
test
mov
add
mov
push
test
scas
pop
mov
push
jecxz
xchg
dec
mov
sti
mov
aad
or
jecxz
sbb
push
mov
mov
cmc
pop
call
mov
inc
arpl
mov
mov
out
adc
jns
les
cmp
inc
pop
adc
leave
and
repz
(bad)
mov
in
push
xlat
sbb
imul
pop
repz
add
imul
daa
push
pop
push
sti
jp
or
in
out
js
imul
and
pop
(bad)
cmp
sbb
dec
xlat
jp
pop
loopne
ja
call
and
mov
fimul
pop
mov
inc
nop
outs
inc
nop
add
fsubr
mov
mov
and
sar
pop
dec
push
xor
xlat
mov
xor
data16
cdq
and
in
cdq
mov
add
or
std
and
xor
xchg
or
xchg
mov
ret
aam
mov
cld
add
jle
mov
xchg
lods
mov
and
jmp
shl
xchg
loopne
icebp
outs
jnp
sbb
je
(bad)
(bad)
push
jmp
pmaxub
rol
test
std
jmp
std
out
iret
icebp
pop
bound
js
ins
push
and
rcr
xchg
xchg
sahf
mov
aaa
xchg
call
icebp
push
call
popa
(bad)
dec
(bad)
clc
mov
mov
test
test
push
add
mov
add
xor
ret
sahf
loopne
jecxz
inc
iret
pop
call
into
cmps
ret
imul
repz
xor
and
jae
stos
cmps
out
inc
jmp
jl
sti
imul
adc
jae
fldenv
cmp
xor
xchg
xchg
data16
cmps
outs
jecxz
addr16
add
das
add
adc
ss
jecxz
cmp
imul
sbb
pop
or
or
push
jle
js
adc
xor
sbb
(bad)
xlat
push
jle
mov
sbb
cs
in
(bad)
mov
into
sbb
cdq
call
lods
fidivr
cmp
movs
and
out
cdq
cld
push
cmp
add
mov
pop
stc
out
pop
pop
fcmovne
push
xchg
jmp
or
xor
pop
repnz
frstor
stc
in
mov
lds
sbb
sahf
jmp
jno
fsub
loopne
adc
popa
js
test
sar
mov
jae
ret
push
sbb
cld
or
hlt
cmp
cli
inc
adc
cld
jmp
adc
in
retf
(bad)
(bad)
jl
fcomp
outs
test
ss
shl
in
or
xchg
jle
sbb
(bad)
pop
enter
shr
jge
bound
dec
xor
inc
sbb
jnp
daa
xchg
(bad)
test
pop
inc
add
pop
mov
ror
push
arpl
sbb
cs
xor
je
call
in
inc
(bad)
das
test
mov
adc
sbb
retf
dec
scas
int3
test
daa
inc
(bad)
xchg
cmps
cmps
xchg
loopne
outs
inc
pop
ins
repnz
cmp
pop
std
jecxz
int3
sbb
repnz
movs
jge
dec
les
repz
xor
xlat
imul
inc
in
(bad)
in
fcmove
cwde
(bad)
cmp
enter
mov
jo
mov
mov
pop
mov
mov
dec
mov
test
push
repz
or
sub
push
jo
adc
add
inc
jp
pop
xchg
jne
cwde
fidivr
adc
pop
pop
mov
out
test
inc
es
dec
movs
or
mov
int3
js
sbb
cmp
xchg
pop
pusha
sbb
(bad)
jl
in
scas
xchg
pop
pop
jg
jp
jne
shr
je
test
jnp
mov
push
lods
imul
loopne
mov
inc
hlt
repz
or
add
movs
das
sbb
test
bound
das
rcl
(bad)
test
hlt
ror
lahf
inc
cmp
out
ror
cmp
and
(bad)
out
dec
inc
fisttp
icebp
inc
or
in
lds
mov
xor
dec
and
sbb
mov
enter
arpl
push
jb
pop
sbb
adc
les
mov
leave
outs
mov
sbb
int3
out
test
add
add
push
cmp
ja
mov
repnz
lods
js
mov
mov
out
cli
and
add
out
and
xor
push
lods
test
fimul
iret
arpl
sub
dec
pop
jp
outs
dec
ss
cmp
call
jge
xor
jae
push
or
into
arpl
pop
mov
cmp
push
in
xchg
(bad)
fsub
fwait
xchg
sub
xor
ror
inc
(bad)
sti
fcomi
fpatan
cld
mov
mov
les
adc
iret
xor
lock
inc
jmp
in
std
mov
and
out
(bad)
cmp
sbb
mov
add
(bad)
ds
cmc
stc
bsr
adc
std
cld
sub
push
test
call
stc
out
mov
push
dec
cmp
rcr
sbb
mov
(bad)
fisubr
cli
pop
test
iret
cmp
repz
mov
mov
cmp
mov
mov
dec
js
aas
or
jnp
scas
push
sub
jbe
pop
add
sbb
xor
icebp
call
fucom
data16
stc
fadd
xchg
dec
iret
inc
inc
cli
ret
test
leave
mov
js
and
sbb
sahf
not
and
inc
dec
pop
add
jge
test
dec
and
adc
pop
shl
jecxz
push
out
sbb
mov
into
cld
test
or
and
xor
jmp
push
movs
pop
shl
call
jbe
mov
adc
out
xchg
cld
ret
lahf
jmp
sub
test
cmp
lods
pop
jl
push
call
jg
add
sbb
inc
gs
cmp
dec
mov
cmp
mov
lods
jmp
push
pusha
cmp
add
cld
cmp
out
adc
inc
fdivr
add
xchg
ins
push
sti
lock
adc
fisttp
add
repnz
sbb
pusha
aas
bound
dec
fisub
sub
sbb
test
neg
ds
xchg
sbb
cmps
js
xlat
cdq
fdivr
xchg
inc
loop
jge
fbstp
in
fsubr
pop
(bad)
xor
out
ds
fdivrp
mov
pop
(bad)
xchg
sbb
sbb
adc
in
cmc
iret
cs
ds
rol
fdiv
ins
aad
ins
or
stos
mov
ins
mov
and
push
popf
fst
ret
and
ins
push
jecxz
pop
mov
mov
inc
and
aaa
test
cwde
dec
xor
sbb
lea
push
das
sar
and
and
push
and
gs
movs
add
movs
jne
cmc
in
xchg
fs
and
mov
dec
pop
jecxz
adc
sub
sbb
in
sti
add
or
sbb
and
pop
xor
cmp
inc
dec
push
pop
fs
je
jl
test
fucomp
pop
cs
ds
xor
mov
fstp
cmp
sbb
jbe
push
add
mov
and
fs
fadd
sti
jle
jmp
xchg
mov
mov
fs
fs
fs
push
xor
push
pushf
je
or
inc
push
pusha
and
sub
sbb
sti
or
jb
xor
fistp
(bad)
call
sbb
adc
repz
sahf
mov
popf
in
sbb
jnp
daa
(bad)
gs
ficom
(bad)
xor
dec
iret
(bad)
pop
sub
xor
fild
sbb
jb
xchg
jnp
mov
or
push
push
lahf
jnp
into
mov
pop
sti
and
mov
inc
test
neg
cmp
inc
mov
rcr
add
jae
sbb
(bad)
dec
and
jge
sub
inc
sbb
push
add
pusha
(bad)
in
mov
es
(bad)
add
loopne
sbb
nop
loop
mov
mov
sbb
mov
std
rol
pop
out
rcr
in
mov
loop
xor
or
in
pushf
pop
mov
xor
xor
jo
and
retf
in
sbb
sbb
inc
clc
mov
inc
fdivr
jbe
js
fs
or
out
mov
std
mov
mov
adc
pop
cmps
rdseed
enter
ret
gs
mov
sbb
dec
fwait
and
sbb
push
sbb
movs
cmp
int
iret
(bad)
sar
out
jb
cmps
pop
and
inc
and
jl
ss
cmps
mov
xor
aaa
(bad)
push
sahf
pop
call
test
inc
das
cmp
mov
cmp
sbb
push
rcr
pop
shl
stc
fistp
das
jl
and
xchg
scas
aam
xor
(bad)
test
sub
(bad)
shr
int
pop
jmp
jecxz
and
mov
outs
rcl
cmp
mov
jl
repz
or
in
sti
in
add
xor
imul
jmp
xchg
pop
and
pusha
loopne
das
xchg
ins
pop
jnp
mov
inc
pushf
lds
mov
xor
in
ds
sbb
push
sub
sub
adc
ins
jecxz
cmps
add
neg
push
mov
imul
dec
xor
cmp
dec
pushf
movs
add
sub
addr16
ret
jg
ins
push
cmp
cdq
and
sbb
movs
add
adc
lahf
and
loopne
mov
jg
pop
xchg
adc
hlt
pop
sbb
sbb
adc
or
sbb
add
vmovupd
pop
adc
and
jbe
and
push
mov
je
sbb
mov
adc
js
int3
or
jecxz
(bad)
in
xor
cmp
dec
sbb
in
fs
sbb
fadd
and
vpaddsb
add
and
lods
test
push
inc
add
mov
daa
cmc
pop
xlat
imul
sub
pop
xor
sbb
cmps
jg
mov
retw
in
jmp
dec
jecxz
std
test
pop
mov
(bad)
call
xchg
or
iret
push
xchg
mov
push
sar
add
inc
in
pop
pushf
cld
xchg
mov
imul
mov
in
pop
mov
ins
fs
je
jl
aas
adc
std
xchg
dec
std
pushf
dec
sbb
or
mov
je
and
shl
and
xchg
retf
out
jb
lods
add
pop
mov
sbb
les
sub
sbb
imul
sbb
test
mov
scas
loop
sbb
jno
push
stc
(bad)
xor
stos
pushf
cmps
in
rol
(bad)
into
(bad)
cld
push
fistp
add
cmp
lock
xor
push
cmp
and
pushf
or
aad
pop
fstp
fist
fs
ficomp
jmp
out
leave
leave
sbb
lock
push
jp
xchg
in
inc
fist
cmp
xchg
scas
cld
stos
aad
fadd
pop
pushf
mov
outs
rcr
push
jl
lock
pop
fwait
jl
into
ja
sbb
retf
cwde
je
sub
jnp
pop
data16
cli
push
sti
(bad)
cmps
outs
xchg
icebp
sbb
sub
fldcw
fwait
sbb
push
jno
push
fstp
call
fmul
not
fdiv
es
fiadd
imul
or
add
sub
movs
sub
sbb
sbb
shl
sbb
pusha
ret
(bad)
sbb
jecxz
ss
push
jge
nop
jg
jle
pop
outs
(bad)
cmp
repnz
idiv
cmp
xchg
cmp
inc
mov
jns
imul
fistp
imul
int
cmp
fdivr
push
pop
push
mov
xor
add
je
ret
fadd
and
pop
push
mov
sbb
outs
jmp
jae
jge
lock
mov
pop
ficomp
inc
dec
sub
jnp
and
mov
mov
mov
cmp
cmps
cmp
push
lock
fstp
mov
cmp
ins
lock
push
mov
jo
je
sub
and
adc
jae
xor
pop
inc
popa
pop
mov
xchg
cli
or
dec
(bad)
adc
data16
fistp
fst
into
add
fld
or
pop
pop
in
jmp
inc
loop
iret
lods
pop
jp
stc
cmp
jge
push
fnstcw
cmp
inc
add
or
outs
dec
std
add
push
imul
je
int3
sbb
push
scas
fs
ds
sahf
retf
push
retf
das
push
sub
inc
pop
ffree
push
pop
add
mov
mov
xchg
jge
ja
inc
mov
mov
push
loope
mov
mov
mov
jge
fsubr
loop
jmp
dec
adc
sbb
cdq
outs
aam
fmul
push
sbb
in
sbb
es
dec
jecxz
in
fstp
cmps
pop
jmp
clc
xchg
inc
cmps
inc
mov
in
mov
jge
inc
mov
or
add
adc
fsub
out
out
cmp
and
jmp
fsubr
or
sub
xor
cmp
push
gs
pushf
pusha
cmp
push
cmp
popa
lahf
sub
mov
sbb
in
test
dec
and
sahf
ror
cmp
rcr
stc
push
jp
inc
adc
sbb
and
xor
cmp
dec
inc
fisttp
fist
out
(bad)
inc
push
retf
cmp
es
cmp
ret
jl
(bad)
movs
push
pop
std
mov
xchg
jmp
or
outs
in
pop
and
inc
cmp
dec
or
sub
std
gs
dec
ins
and
jne
in
jge
dec
mov
movs
xchg
lea
popf
pop
movs
push
clc
mov
pop
sar
(bad)
sbb
xchg
dec
fist
pushf
adc
cmp
repz
sub
sbb
inc
add
xor
pop
cld
nop
sbb
cmp
mov
jl
pop
sbb
cmp
pop
jns
pop
inc
xchg
inc
push
data16
cmp
scas
rcr
daa
inc
pop
sub
scas
mov
or
addr16
fs
xor
adc
fwait
xor
and
pop
jl
and
pop
pop
and
data16
xchg
sbb
mov
jnp
daa
add
add
ins
lea
jp
ret
call
sbb
es
dec
mov
(bad)
xor
fldcw
xchg
pushf
push
cmps
xchg
cwde
jmp
and
sub
pop
add
jle
jmp
retf
dec
pop
lahf
jo
in
retf
loope
xchg
jg
xor
lock
mov
outs
mov
xchg
cmp
iretw
imul
pop
mov
out
enter
(bad)
jp
xor
jge
xor
push
and
xchg
jmp
test
addr16
pop
pop
xchg
popf
pop
js
je
add
in
lods
shr
scas
test
out
inc
dec
mov
add
sbb
mov
jl
sbb
stc
lahf
mov
and
or
sbb
add
(bad)
out
fdivr
jns
je
and
neg
(bad)
cmp
xchg
jp
add
xor
js
cmp
push
adc
dec
pop
ins
lahf
pushf
xor
test
add
iret
xor
movs
fstp
lahf
cld
cmc
inc
fsubr
push
iret
and
xlat
xchg
ins
out
fs
das
jno
mov
mov
cmp
pop
icebp
cdq
sbb
jb
adc
sti
pusha
in
and
pop
xchg
sbb
jl
cmp
stos
pushf
xchg
pop
jo
mov
and
mov
inc
adc
scas
fisub
pop
mov
jge
or
rcr
mov
out
fbstp
call
sar
jle
jecxz
sbb
pusha
jecxz
pop
aam
jnp
fdiv
mov
jl
jb
or
jne
xor
inc
push
jbe
inc
movs
push
mov
sbb
(bad)
fdiv
or
xchg
pop
xor
inc
bound
xchg
(bad)
cld
mov
pop
inc
out
test
in
lds
pop
jbe
inc
xor
fdivr
stos
shl
push
in
in
movs
pop
loopne
into
mov
int
or
pop
and
or
arpl
std
lods
jmp
jle
xchg
sbb
jp
sbb
mov
mov
aam
jl
xlat
mov
retf
in
mov
and
add
pushf
sbb
out
pop
sbb
jge
pushf
popf
push
or
(bad)
fld
pop
clc
out
out
call
jmp
inc
aas
fistp
iret
pop
mov
lods
fcmovnb
fsubr
and
fldcw
sbb
in
sub
ret
push
cmps
sete
jmp
fild
ficom
or
xor
stc
dec
jnp
sbb
fs
cmp
(bad)
out
fstp
das
inc
jbe
loope
sbb
pop
cmp
xlat
sub
xchg
addr16
lock
ins
pusha
lahf
xchg
bound
ins
icebp
in
sbb
(bad)
test
in
loop
inc
fmul
stc
repz
mov
ret
or
push
cld
fsub
or
jge
dec
pop
dec
test
jbe
sbb
xchg
adc
sbb
inc
jl
std
rcr
and
bound
(bad)
rcl
out
repz
loopne
faddp
data16
cld
fs
jle
xchg
dec
xchg
out
dec
and
push
sbb
cmp
jae
push
push
pop
in
cmp
sbb
pop
dec
inc
pop
cmp
xor
xchg
and
xchg
fidiv
mov
(bad)
sub
retfw
mov
dec
mov
sti
mov
outs
jg
cmp
in
jecxz
pop
rol
or
mov
push
data16
mov
test
mov
push
xchg
push
jnp
xor
in
cli
or
mov
shr
std
fs
inc
dec
xchg
shl
xchg
in
std
js
dec
pushf
dec
cmp
push
xchg
push
js
cmps
out
adc
push
xchg
dec
gs
std
sbb
call
push
adc
xchg
or
inc
in
je
shl
pusha
clc
shr
sbb
push
je
sbb
xor
les
mov
mov
pushf
jnp
jecxz
add
dec
test
mov
cmp
xlat
fisubr
adc
dec
sbb
push
lock
(bad)
dec
cmc
imul
pop
push
pop
jb
imul
push
(bad)
jno
pop
fwait
inc
xchg
cs
sti
pop
sbb
je
jle
ss
dec
mov
or
fdiv
sbb
sub
lods
sub
mov
fstp
popa
lea
stos
xlat
stc
mov
out
mov
lods
xor
mov
movs
add
fs
int3
sti
loope
dec
ins
lods
xor
push
pop
loope
jl
enter
bound
jl
or
sbb
push
outs
xchg
mov
(bad)
nop
inc
sti
cdq
test
sar
push
push
pop
pusha
and
in
sub
rol
sbb
in
test
mov
pop
and
or
nop
push
(bad)
sbb
jle
mov
jl
and
adc
cmc
pop
inc
test
(bad)
xor
enter
pop
stc
jg
adc
and
inc
(bad)
repz
sbb
bound
push
dec
shl
mov
mov
xchg
ja
dec
xchg
shl
pop
mov
push
and
pop
nop
or
push
dec
cmc
das
inc
add
adc
sub
jae
shr
repnz
cmps
loope
pusha
xchg
std
sahf
sbb
inc
mov
inc
dec
xor
leave
mov
xchg
and
sbb
jl
sub
stos
dec
xchg
aaa
pop
mov
jecxz
xor
addr16
dec
or
(bad)
pop
adc
dec
sbb
lods
in
add
clc
sub
cmps
outs
and
lods
dec
pop
out
cmp
out
pop
mov
(bad)
es
(bad)
push
pop
and
add
fldenv
fstp
fnstsw
in
aad
mov
fstp
xchg
popa
inc
xchg
imul
adc
or
cmp
add
pop
ror
xor
cdq
sti
stc
arpl
imul
arpl
push
pop
dec
inc
xor
test
test
jmp
imul
fs
in
or
sbb
ins
leave
or
stos
mov
add
stos
repz
mov
jo
or
add
fcomp
dec
arpl
add
adc
or
out
jl
inc
fcomp
(bad)
cld
xchg
sbb
pop
ret
pop
sub
cdq
fs
mov
jl
xor
dec
imul
push
fs
add
outs
fidiv
inc
xchg
ja
imul
lock
enter
ins
lock
dec
pop
inc
jg
dec
or
xchg
mov
mov
movs
sub
add
xchg
or
sbb
and
mov
mov
or
mov
sti
test
add
mov
outs
sub
hlt
add
into
pminub
loope
push
pop
xchg
sbb
rcl
test
in
arpl
push
adc
mov
mov
icebp
xchg
dec
data16
inc
mov
mov
push
sbb
jmp
adc
fisubr
add
bound
je
jmp
outs
sbb
iret
out
pushf
out
mov
jno
inc
jecxz
jb
mov
js
imul
jmp
sti
and
addr16
add
in
inc
add
js
sbb
ins
xchg
pop
(bad)
sbb
fld
and
jno
jmp
mov
rcr
movs
in
push
fst
pop
imul
adc
rcr
pushf
div
mov
push
mov
add
movs
dec
or
in
leave
std
sub
and
mov
out
mov
ss
dec
pusha
mov
test
fstp
pop
mov
lea
aaa
imul
push
ret
push
pusha
cli
sbb
lea
ror
xchg
daa
iret
push
fwait
xor
enter
xchg
pop
push
cmp
sub
push
sbb
add
adc
xor
ret
xlat
test
sbb
jle
mov
inc
dec
daa
dec
mov
lock
imul
cmps
(bad)
dec
mov
mov
test
je
mov
popf
sub
js
ss
in
mov
xchg
ins
daa
and
in
call
int3
adc
xor
lahf
jle
mov
pop
adc
jge
into
bound
jecxz
mov
imul
lahf
fild
bnd
jl
mov
sbb
js
das
loope
jge
mov
jo
cld
dec
add
das
mov
push
cwde
push
cmp
frstor
imul
mov
jge
xchg
jecxz
and
sti
xor
pushf
icebp
retf
mov
pop
cmps
push
push
and
fild
push
jmp
pop
fstp
pop
outs
mov
(bad)
adc
and
xlat
(bad)
mov
ja
(bad)
jge
jmp
add
dec
jle
pop
icebp
out
inc
xchg
push
and
jne
inc
cmp
fwait
push
in
add
xchg
scas
jl
cmp
cmp
jecxz
dec
pop
xor
push
sbb
fwait
push
mov
sub
or
xchg
stc
pop
call
pop
pop
pop
and
and
pop
jo
sub
pop
jl
scas
mov
mov
pcmpgtb
xchg
sub
lods
sbb
jecxz
sbb
cdq
mov
iret
pop
xor
retf
dec
jne
data16
in
jg
mov
loop
outs
es
push
push
inc
jl
push
cld
pop
xor
pushf
pop
inc
mov
fadd
mov
pop
pop
and
xor
xchg
mov
in
(bad)
sbb
mov
pop
jo
pop
and
(bad)
rol
into
xor
and
js
aas
rcr
add
mov
sbb
inc
mov
and
addr16
add
lock
jp
pop
loopne
jle
ins
push
pop
in
test
jl
pop
call
push
xchg
or
in
jl
fidivr
dec
(bad)
stc
mov
add
jle
(bad)
cmp
push
cmp
imul
mov
inc
sbb
adc
(bad)
jecxz
adc
and
cmps
inc
push
ret
inc
cmp
pop
sbb
jmp
in
xor
jmp
ror
clc
cmps
(bad)
jp
mov
test
jle
test
or
push
mov
out
in
dec
xchg
rcr
out
scas
mov
scas
mov
les
cmp
cdq
sbb
(bad)
cs
push
dec
xor
jle
cdq
rcr
jbe
inc
mov
lahf
and
sbb
sub
sbb
das
xchg
in
sti
aad
push
fsubr
dec
fcomp
mov
ins
mov
bound
push
das
ds
sub
movs
ins
jle
xchg
xor
push
dec
mov
out
nop
(bad)
aas
sti
jecxz
adc
pop
cwde
mov
fsub
pop
add
pop
mov
sar
call
adc
nop
(bad)
cmc
xchg
sbb
sbb
sbb
rol
xchg
call
(bad)
sbb
cld
dec
std
inc
ds
(bad)
lods
es
test
test
fiadd
sub
data16
lods
repz
xchg
add
mov
push
fs
fsubp
inc
rcr
cmp
loopne
inc
nop
out
stos
jg
sub
sub
je
mov
mov
cmp
jns
repz
cmp
push
adc
scas
mov
ins
pop
pop
add
repz
pop
jl
mov
dec
js
xchg
pushf
xor
ja
out
test
lock
push
and
dec
push
jns
add
and
pop
pop
stc
into
xchg
ins
test
pop
mov
dec
ss
in
(bad)
push
pop
sbb
adc
cmp
pop
sahf
and
gs
xor
adc
dec
cmp
ret
inc
xchg
push
loope
test
aaa
mov
fimul
cmp
push
add
cmc
cmp
dec
cld
inc
inc
mov
shr
jnp
mov
mov
je
dec
nop
test
repz
push
pushf
pop
sbb
aam
pop
ins
mov
adc
nop
add
push
es
jl
mov
mov
or
jmp
xor
mov
mov
int3
clc
and
mov
in
pop
cmps
push
cmp
xchg
and
pop
and
loope
push
push
sub
ficom
push
sbb
inc
rcr
jne
xchg
xor
sbb
inc
inc
popa
inc
sbb
(bad)
fs
xchg
cmp
jb
mov
cli
mov
aam
stos
out
mov
mov
bound
xchg
outs
lods
aam
sbb
mov
cmp
dec
xor
push
pushf
xchg
cwde
jp
lods
jmp
jl
inc
push
and
pop
and
fwait
in
movs
mov
aam
pop
(bad)
int
xor
pop
adc
(bad)
xchg
sbb
inc
out
sbb
(bad)
xlat
ins
sub
cmp
aam
fld
inc
iret
es
push
mov
jo
daa
mov
int3
test
out
repz
pop
ret
fimul
sti
xchg
fdivr
inc
jne
and
jne
outs
(bad)
loope
sub
sbb
mov
mov
mov
sub
adc
mov
aad
mov
mov
mov
(bad)
das
sub
and
pop
push
cmps
sbb
push
pop
pushw
(bad)
cmp
in
and
ins
fmulp
icebp
(bad)
pop
inc
pop
ja
sub
(bad)
repz
ss
fist
push
int3
cmp
sahf
xchg
or
sub
and
std
psubsw
dec
in
scas
jmp
mov
and
std
xchg
jo
dec
ret
mov
add
and
push
mov
enter
in
or
int
cmp
jbe
ds
loopne
data16
mov
dec
push
cmp
in
mov
pop
loopne
mov
test
xchg
push
xor
int3
mov
sub
data16
je
imul
test
push
fnstsw
fldenv
sti
cdq
in
jmp
pop
xor
cld
imul
and
lds
pop
mul
cdq
and
(bad)
mov
push
fisubr
std
arpl
push
test
ret
(bad)
aam
mov
hlt
dec
clc
or
icebp
aaa
ins
add
and
sahf
jge
and
mov
int
inc
mov
retf
(bad)
ins
(bad)
lods
add
cs
xchg
jge
and
mov
jno
mov
inc
fmul
jl
mov
inc
fpatan
xchg
mov
cld
mov
pop
ret
push
pop
xlat
nop
push
aaa
inc
push
lods
(bad)
in
or
(bad)
ficomp
push
(bad)
and
ret
and
sub
mov
mov
xchg
mov
repz
ja
fsub
movs
jmp
jg
jg
pop
inc
sti
push
popa
dec
mov
xor
add
mov
inc
mov
mov
push
loopne
adc
(bad)
scas
mov
loop
cmp
mov
push
mov
cmp
cs
loope
lock
push
test
sbb
and
fcomp
leave
push
out
lods
push
imul
inc
lock
pop
fs
stos
jle
sub
sub
mov
pop
sti
xchg
pop
dec
out
repz
jp
cmps
sbb
es
xchg
imul
jl
lock
js
(bad)
jmp
imul
lock
movs
push
call
ins
mov
push
jb
imul
fstp
dec
pop
popa
push
xor
cdq
mov
or
popa
es
pop
int3
pop
in
jno
dec
push
and
mov
push
in
mov
and
cmp
popa
outs
inc
sbb
jge
and
outs
jno
mov
frstor
es
or
nop
mov
or
xchg
and
fsub
pop
imul
pop
jmp
cmp
cmp
stc
popf
cmc
std
mov
std
mov
std
aad
push
in
cmps
adc
push
je
inc
movs
xor
cmc
les
fs
fs
out
xor
ins
xor
out
lods
push
hlt
outs
imul
push
jbe
mov
pop
xor
pushf
aam
iret
stc
xor
inc
lods
scas
cmp
scas
lds
jl
mov
adc
jmp
jecxz
data16
jne
xchg
and
push
fsubr
add
cld
pop
jns
push
clc
sahf
jo
fmul
sahf
popf
fmul
scas
or
xchg
not
das
ins
pop
cmps
jno
dec
stc
imul
and
mov
cwde
lds
jbe
rcl
dec
sbb
sub
push
inc
xchg
ds
ret
jecxz
adc
xor
mov
jb
jbe
cmp
xchg
sbb
cmps
mov
cld
inc
mov
jbe
pop
pop
pusha
stc
and
movs
dec
and
ins
xchg
(bad)
not
std
in
sbb
mov
xchg
adc
out
std
inc
sub
cmc
in
cmp
es
gs
ins
je
jne
in
test
enter
adc
je
jnp
fisttp
in
in
neg
int3
push
add
push
jmp
push
(bad)
jge
adc
hlt
ja
mov
mov
scas
add
in
inc
fisub
pcmpeqd
mov
pop
lods
stc
cmp
push
xchg
aam
or
pop
sti
sub
sbb
jmp
jp
push
xchg
adc
mov
imul
mov
clc
push
xor
or
mov
in
outs
sbb
mov
mov
je
ins
aaa
pushf
xchg
cli
cdq
jb
sub
js
out
pop
xor
sub
(bad)
or
popf
mov
test
add
inc
sbb
mov
ret
push
ret
mov
sar
pop
pushf
add
inc
neg
push
js
dec
stos
dec
and
cli
stc
lea
fwait
lods
js
outs
sbb
icebp
mov
outs
out
cs
add
pop
mov
mov
xchg
mov
not
pop
fild
jecxz
jmp
sbb
push
fdivr
leave
jge
fidiv
pop
push
test
push
pop
xchg
scas
popa
cli
sbb
mov
dec
jge
test
and
(bad)
les
fs
popa
js
je
or
popf
fwait
(bad)
mov
xor
imul
popa
imul
dec
in
jge
andnps
loopne
fbstp
mov
jbe
sub
push
jnp
and
sbb
pusha
inc
or
in
ins
pop
jge
sbb
js
les
ins
mov
adc
sbb
xor
std
mov
shr
es
frstor
push
in
cmp
retf
mov
and
sbb
jmp
adc
mov
mov
arpl
fs
inc
pop
mov
pop
fidivr
shl
inc
dec
adc
mov
jnp
stc
fild
(bad)
jmp
data16
pop
xor
mov
popf
fincstp
xchg
(bad)
lea
dec
mov
pop
cmp
mov
dec
mov
cmp
pop
(bad)
loopne
push
cmp
mov
scas
shr
mov
and
mov
adc
jmp
sbb
jg
js
call
dec
(bad)
dec
cmp
adc
mov
pop
jecxz
ja
cwde
pop
cmp
xchg
mov
mov
out
mov
jge
mov
(bad)
mov
sub
popf
into
movs
and
cmp
sub
js
inc
fld
callw
jge
pop
and
jb
lahf
nop
mov
dec
add
cmc
arpl
cwde
mov
sbb
shl
xchg
jg
pop
lods
sbb
xor
sahf
mov
push
dec
add
sbb
ins
xlat
out
in
sub
out
xor
pop
sbb
add
and
ret
xchg
or
mov
ins
xchg
shr
ds
push
ficom
in
fnstcw
out
xchg
sub
in
nop
pop
sti
sti
sar
sbb
rcr
pop
les
(bad)
jns
add
cs
pusha
dec
pop
popa
and
mov
xchg
je
arpl
cmp
inc
sub
add
cmp
dec
bound
jle
push
jmp
or
push
sub
aad
mov
sbb
push
sub
iret
dec
data16
dec
pop
sbb
lods
dec
fsub
adc
lea
mov
mov
lds
icebp
(bad)
jmp
xchg
outs
adc
sbb
dec
xchg
cmp
enter
repz
inc
test
into
fucomi
inc
loop
stc
push
pop
pop
add
cs
add
mov
sbb
aas
fs
push
cmp
(bad)
fst
fisttp
jb
jle
fst
(bad)
cdq
daa
gs
call
aas
sbb
out
mov
retf
sar
int
sti
loop
sti
jmp
lea
cmp
stc
jnp
in
sbb
retf
push
in
jl
or
pop
inc
fistp
sbb
pop
push
ret
sbb
sub
and
ins
sub
xor
cmp
in
dec
std
push
pop
out
imul
pop
mov
retw
jecxz
pop
pop
int
and
dec
xor
mov
outs
mov
cld
leave
push
shl
in
loope
jmp
add
sar
sbb
and
sbb
pop
ins
fnsave
cmp
or
test
pop
retf
sbb
push
mov
cdq
not
imul
xchg
popa
mov
push
jnp
sbb
push
sub
mov
jecxz
fbstp
ret
fcomp
push
data16
movs
aam
(bad)
jl
inc
xchg
cmp
inc
jg
add
push
ins
gs
mov
or
xor
pop
std
(bad)
jmp
sbb
ins
adc
in
dec
cmp
(bad)
xor
pop
dec
(bad)
cmp
xor
adc
fstp
sub
ror
in
dec
and
fcmove
mul
std
out
mov
rcr
(bad)
xor
add
cmps
cmp
mov
aam
jle
push
rcr
loope
fs
ds
cmp
push
gs
shl
lock
mov
ins
pop
lahf
fs
aaa
push
and
pop
mov
enter
jle
jl
push
call
sbb
sub
loopne
pusha
iret
cmc
(bad)
cld
neg
sbb
stc
mov
dec
sbb
cld
cmp
pop
cmp
pop
mov
std
sbb
add
mov
xor
and
sbb
mov
out
jo
ficomp
mov
cdq
jecxz
fcomp
push
sbb
push
popf
and
mov
mov
test
les
mov
ins
inc
(bad)
or
xchg
jl
aam
int3
xchg
push
pop
daa
mov
nop
xchg
je
fwait
cmp
or
and
push
jecxz
push
mov
mov
aad
movs
jg
xchg
in
call
mov
push
pop
and
mov
sub
jl
pop
sub
fwait
lea
mov
mov
xor
or
sbb
sbb
xor
inc
cmp
inc
xor
out
xchg
mov
jecxz
mov
inc
in
adc
mov
pop
mov
test
out
jl
mov
std
inc
xchg
std
(bad)
pushf
(bad)
in
lods
lahf
pop
mov
mov
fs
cld
fadd
pusha
cmp
call
jno
(bad)
adc
retf
xchg
adc
xchg
xor
cmp
je
inc
jo
mov
mov
out
sbb
pop
enter
xor
pop
pop
adc
push
mov
adc
xchg
mov
xor
inc
pusha
mov
inc
rcl
mov
xchg
add
sub
cdq
mov
mov
xor
adc
cmp
mov
push
cmp
rcr
xor
mov
mov
dec
cli
pushf
aas
mov
jl
jp
jg
dec
pushf
sub
mov
cld
add
imul
jmp
fdivr
xor
xchg
pop
ins
outs
loope
add
fcomp
sub
pop
cmp
shl
stc
sbb
xor
mov
pop
cdq
mov
cmc
cmps
xchg
xchg
dec
ins
jg
mov
lods
inc
pop
in
fnsave
arpl
cmp
cld
sti
jns
scas
xor
push
in
out
sbb
push
or
sub
xchg
fidivr
dec
in
xor
add
outs
jle
(bad)
jge
shl
repz
pop
out
jo
clc
mov
(bad)
es
sub
push
dec
mov
jmp
dec
mov
gs
sbb
fisubr
imul
shl
pop
push
pop
sbb
sbb
stos
into
fstp
lahf
int
(bad)
loope
das
in
ds
imul
movs
fld
lock
push
sub
fdivr
pushf
loope
inc
std
cmp
imul
fist
shl
jle
popf
jb
out
fwait
sub
in
lock
daa
ret
rcr
jns
ret
add
fbstp
push
dec
lock
jne
rcr
pop
ror
and
call
pop
test
mov
lock
add
pop
xor
(bad)
pop
(bad)
pusha
fisub
jp
ss
sahf
in
cmp
inc
ficom
int
and
xor
movs
xchg
imul
jmp
pop
xor
pop
sbb
xchg
repnz
jg
fisub
loope
inc
xchg
fdiv
fs
(bad)
out
inc
ss
jmp
fcom
xor
lock
daa
xor
out
fistp
inc
cwde
xor
jmp
fidivr
cdq
mov
ins
sbb
xor
mov
sbb
inc
lock
pop
xor
loop
and
and
int3
out
(bad)
push
std
call
sub
mov
out
inc
in
jp
mov
inc
retf
xchg
in
xchg
fist
shl
jle
lahf
and
repz
fs
pop
in
jbe
stos
add
xchg
cmp
lock
xchg
pop
mov
pop
cmp
(bad)
nop
xchg
sub
lock
pop
mov
mov
neg
jecxz
cmp
lock
pop
les
sub
outs
push
lahf
call
cld
dec
dec
fsubr
pop
retf
pop
push
lock
push
xor
mov
push
sbb
xor
pop
sub
push
fsub
out
and
fstp
push
or
push
pop
sub
jecxz
push
xchg
fisubr
fxch
pop
cmps
or
cmp
jge
pushf
aaa
pop
in
fdivrp
mov
test
cmp
pop
out
movs
sbb
imul
into
inc
lock
inc
fidivr
leave
inc
ins
fisubr
lock
loop
rcr
adc
xchg
(bad)
das
cs
pop
imul
sbb
cwde
sbb
cmp
fisubr
fsub
ja
fistp
jbe
fsubp
mov
sub
pop
mov
jmp
test
fnstenv
cmp
fldcw
rcl
fdiv
sbb
cmp
and
(bad)
fstp
sbb
std
loop
push
mov
bound
fiadd
cdq
xchg
(bad)
fidivr
fnstenv
dec
mul
lock
xor
jle
xchg
gs
cmp
or
fs
mov
cmp
lock
das
pop
in
std
or
in
and
(bad)
fld
mov
push
ja
fidivr
jecxz
push
pop
lock
retf
movs
sbb
fyl2x
jno
cmp
mov
pop
pop
sbb
pop
sbb
enter
sbb
and
int
shl
loope
cmp
mov
pop
outs
sahf
dec
pop
or
xor
mov
into
popa
lock
xor
ins
outs
sbb
mov
clc
fstp
adc
push
leave
adc
dec
pop
lahf
fs
sbb
jle
sbb
pop
pop
sbb
push
sbb
xor
ins
mov
mov
fmul
icebp
sbb
pop
sbb
(bad)
rcr
cli
mov
xchg
xchg
xchg
jge
daa
xchg
test
push
adc
and
jmp
jns
mov
and
data16
dec
lods
jl
jecxz
lods
and
and
pop
lahf
sub
ds
mov
fiadd
jecxz
jnp
cli
out
scas
mov
dec
in
ds
cmp
push
in
ins
sub
jmp
cmc
pop
push
ins
ja
and
cld
pop
jbe
pop
and
fsub
mov
pushf
clc
pop
mov
outs
lock
xchg
mov
mov
xchg
loop
jp
test
aad
push
sbb
xchg
int
retf
push
inc
push
pop
pop
call
sbb
pop
add
stos
out
jge
rcr
pop
sbb
pop
jbe
sub
sub
push
xchg
bound
lds
clc
push
mov
add
sub
iret
xor
or
mov
sti
sbb
shl
sub
popf
xor
test
(bad)
mov
and
or
xchg
dec
xlat
pop
fwait
test
dec
(bad)
sbb
ret
pop
in
iret
(bad)
add
pop
add
pusha
mov
pop
xor
xchg
and
jne
aam
mov
bound
sub
cmp
shr
push
xchg
cmc
push
jg
dec
loopne
shl
or
mov
loope
icebp
mov
pushf
jns
in
ins
push
push
mov
movs
fnsave
aaa
jp
push
mov
out
pop
fdivr
pusha
inc
adc
jcxz
add
sbb
scas
rcl
dec
push
sub
out
mov
int3
sbb
pop
in
push
cmp
push
sub
outs
mov
mov
std
sbb
sbb
adc
push
ret
cmp
jnp
xor
xlat
add
out
pop
clc
xor
mov
fucomi
sahf
fistp
xchg
movs
sub
jl
je
fist
je
jns
fistp
ficomp
sbb
xchg
mov
inc
lock
sbb
rcr
ret
out
jg
sub
mov
repz
pusha
pop
push
scas
jmp
out
cdq
cwde
pop
out
(bad)
popf
sbb
aaa
je
es
jmp
pushf
scas
aas
push
sbb
into
leave
rol
das
test
dec
movs
nop
or
sti
pop
sub
(bad)
fsubp
pusha
jmp
shr
inc
xor
cld
pop
into
inc
pop
jle
and
xchg
or
jmp
push
xlat
push
sar
jns
xor
dec
xchg
mov
inc
mov
jmp
in
push
dec
nop
(bad)
test
ss
xchg
add
scas
sti
and
fstp
jmp
loope
std
xlat
addr16
data16
pop
jne
add
pop
stos
mov
in
out
sar
jbe
mov
sti
adc
das
in
dec
push
pop
inc
frstor
jl
pop
shl
and
into
push
(bad)
dec
stos
in
out
(bad)
std
movs
mov
pushf
pop
pop
lock
data16
sub
xchg
inc
mov
push
movs
inc
enter
jge
shr
add
xchg
pop
jns
xchg
jo
inc
icebp
in
xchg
and
inc
dec
push
cmp
pop
push
fisub
iret
out
loop
(bad)
cmp
jp
fstp
inc
retf
hlt
neg
icebp
push
out
pop
mov
pop
int
fimul
and
hlt
lock
add
out
das
sbb
cmp
jbe
add
adc
jl
jp
es
dec
xchg
mov
fwait
mov
push
outs
cmp
xchg
xchg
sub
cdq
jle
sti
lods
xlat
dec
add
mov
cmp
pusha
mov
jg
inc
adc
in
cmps
in
in
aaa
sub
sbb
fld
sbb
into
(bad)
cdq
push
sbb
fcomp
bound
push
mov
add
cmp
std
out
jmp
out
sbb
(bad)
jle
dec
or
and
jg
sti
and
adc
jbe
pushf
leave
jns
pop
and
sar
or
iret
fsubr
pop
push
call
mov
lds
and
and
inc
pop
mov
cwde
call
jbe
pop
pop
clc
lea
test
fwait
jecxz
inc
cmp
data16
and
cmps
shl
cld
mov
in
test
test
inc
push
and
nop
cli
dec
pushf
pop
jns
mov
push
pushf
jae
push
jle
shr
mov
ins
cmp
push
xor
xchg
add
jmp
fnstenv
iret
pop
je
fisttp
jecxz
push
rol
pop
dec
inc
out
cmp
adc
dec
mov
lock
addr16
inc
jbe
pop
dec
adc
sahf
sbb
fnstsw
inc
pushf
cmp
mov
mov
out
mov
mov
pop
into
sbb
movhps
cmp
dec
aam
mov
sbb
and
xor
push
ret
fucom
lods
inc
or
sbb
xchg
jno
pop
movs
inc
mov
xor
adc
frstor
je
sti
xor
sbb
jnp
pop
adc
lock
rol
adc
ins
or
das
add
jbe
cmp
in
or
mov
add
mov
pop
call
daa
mov
fs
xor
adc
in
push
pop
fist
add
test
fsub
and
mov
xchg
and
pushfw
or
and
jmp
cmp
pop
push
cmp
pop
sahf
pop
sbb
jg
sbb
fwait
jg
pop
pop
dec
dec
pop
pop
push
call
jl
cmp
sbb
sub
and
pop
cs
add
or
xchg
inc
xor
inc
add
cs
add
xor
pushf
add
mov
dec
sub
xchg
ja
cld
and
cmp
out
mov
rcl
mov
out
sbb
call
add
cmp
jmp
imul
jb
jl
test
int3
push
and
cmp
jecxz
mov
rol
adc
jl
lds
inc
nop
sbb
test
inc
loope
sub
arpl
in
mov
cmp
in
push
jmp
xchg
pushf
in
and
clc
jmp
xor
test
sub
push
pop
test
gs
jno
stos
xor
xchg
test
add
cli
out
cmp
into
cmp
sbb
sub
cmps
popa
dec
jne
or
xchg
or
and
sbb
sub
xor
inc
pop
les
sbb
jno
cmp
mov
ins
dec
jb
ins
add
fimul
aad
sub
test
in
push
retf
xor
test
call
sbb
pop
into
dec
fxch
inc
lock
test
hlt
pop
gs
lods
outs
fisub
push
shl
mov
pop
test
fdivrp
mov
repnz
xchg
and
jle
pop
mov
scas
push
std
pop
ficom
fimul
fxch
cwde
fnsave
rcr
pop
xchg
inc
ret
sti
imul
daa
popa
out
shr
(bad)
frstor
ficomp
shl
inc
lods
and
push
scas
and
mov
out
push
xor
jge
inc
dec
dec
sbb
push
fdivr
mul
ins
hlt
jne
movs
xor
pop
aaa
test
cwde
add
xor
pop
std
mov
ss
aam
stc
rol
fs
fnstsw
fild
push
sbb
push
into
sub
sub
push
add
cmps
ror
iret
cmp
pusha
cmp
xchg
sahf
fisub
cmp
out
inc
ins
scas
xchg
dec
popf
sar
cmp
inc
call
sub
and
test
shr
mov
and
mov
mov
(bad)
shl
dec
pop
jnp
push
fisub
xor
mov
scas
mov
mov
repz
pop
or
sub
sahf
(bad)
cli
push
jmp
test
fimul
sbb
loop
sbb
inc
sti
das
push
sub
aam
adc
out
test
sbb
and
daa
(bad)
and
lods
(bad)
fnstenv
stos
(bad)
push
cmp
lock
rcl
pop
popa
imul
xor
vminps
xchg
and
lock
jb
mov
imul
fnsave
pop
lock
pushf
jl
mov
mov
fdivr
test
test
adc
cmp
arpl
mov
cmps
rdmsr
pop
popf
out
ja
push
cld
pusha
pop
mov
lock
sbb
into
cdq
sub
cmp
cmp
push
jecxz
lock
dec
int
(bad)
xor
pop
add
sub
fsub
jecxz
call
loop
fsubr
inc
call
std
jg
fidiv
adc
sbb
pop
lods
jecxz
(bad)
mov
pop
and
jb
pop
in
adc
cmp
mov
mov
mov
sbb
sbb
sbb
pop
adc
shr
loopne
in
adc
popf
xchg
test
jns
dec
pushf
ret
imul
push
test
sti
inc
push
outs
jmp
mov
lds
push
pusha
and
mov
(bad)
adc
fs
fimul
adc
das
mov
ins
cmc
sbb
xor
jmp
add
in
call
inc
sbb
(bad)
mov
rol
push
inc
xor
in
movs
mov
push
jmp
repnz
shl
pop
pusha
and
in
push
xchg
inc
pop
add
inc
sbb
call
cmps
xor
dec
fdiv
push
jae
push
mov
lahf
push
push
mov
hlt
mov
mov
(bad)
fdivrp
mov
fmul
push
in
(bad)
into
pop
data16
or
add
xchg
dec
jae
mov
and
mov
sub
mov
cmp
mov
repz
into
or
jmp
inc
outs
xchg
push
sub
data16
cmp
xor
or
ins
dec
sbb
add
mov
rol
jmp
jb
mov
adc
ds
push
jl
fidiv
or
cmp
sbb
and
aaa
xor
xchg
and
gs
(bad)
aad
pop
and
pop
fidivr
push
push
in
mov
mov
popf
lock
out
sahf
and
enter
inc
sar
adc
ins
xchg
xchg
sbb
sub
shl
and
daa
adc
jp
push
mov
dec
mov
imul
jg
push
jae
retf
and
fsub
and
out
adc
sbb
xchg
push
jl
cmp
jp
leave
fsub
sbb
mov
fwait
popf
inc
mov
push
or
dec
push
ja
nop
add
pop
sub
pop
or
mov
ds
sub
retf
pusha
movs
pop
xchg
push
jo
cmc
sub
out
lods
jmp
ins
mov
scas
mov
pop
mov
cs
adc
lea
cmp
pop
in
jl
ja
jmp
in
repnz
ds
or
lds
test
loope
pop
pop
icebp
jmp
es
cmp
pusha
dec
inc
rcl
xlat
mov
aaa
ret
cs
call
and
fbld
(bad)
or
inc
xor
mov
jne
movs
mov
xchg
imul
icebp
xchg
mov
rcr
mov
sbb
add
les
cmp
pop
aam
out
jnp
xor
sub
(bad)
fcomp
out
add
aas
les
loopne
fwait
imul
add
jmp
ins
out
push
jecxz
jl
in
pusha
js
ret
mov
mov
or
sbb
xchg
jg
int
jne
movs
test
out
and
fs
fnstenv
outs
pop
faddp
cmp
js
mov
pop
sti
sbb
and
(bad)
xchg
sub
es
loop
sar
leave
adc
(bad)
cs
iret
xor
dec
mov
jbe
ins
imul
push
sti
mov
sbb
adc
jg
js
adc
jecxz
mov
out
dec
loope
push
lds
sbb
and
cs
outs
mov
or
std
sahf
pop
sbb
inc
test
jg
xor
sti
mov
shl
jecxz
sbb
jg
and
je
lods
jmp
sbb
xor
cli
xchg
into
lahf
xor
sbb
test
out
fs
inc
pop
es
neg
out
or
or
mov
lea
push
sti
adc
add
cmc
mov
ds
fistp
cdq
mov
xor
adc
je
sub
stos
aam
jl
add
ficomp
cmc
sbb
fsubr
pop
shl
pop
sbb
sbb
les
jg
push
pop
loop
pop
in
pop
pusha
aas
pop
pop
jmp
sbb
(bad)
(bad)
std
fistp
std
mov
jmp
mov
sbb
sub
push
pop
(bad)
cwde
std
pop
mov
ins
js
pop
ret
ins
fbld
ins
pop
clc
lahf
pop
std
ficomp
jp
pop
cmp
pop
pusha
sbb
sbb
cwde
(bad)
std
stc
pop
in
inc
in
cdq
in
jo
sbb
mov
sub
mov
fldcw
mov
pop
in
lock
pop
call
in
test
and
sbb
mov
std
jnp
in
shr
mov
fwait
pop
pop
cmp
mov
std
jns
or
jle
cmp
sbb
cld
xor
sbb
pushf
fisubr
in
test
(bad)
in
ret
in
mov
stc
test
in
std
adc
std
pop
sbb
sahf
in
fnsave
pop
fs
cmp
pop
sbb
dec
(bad)
std
sbb
in
je
pop
in
pushf
fs
pop
pop
les
ficomp
fsubr
std
pop
in
adc
cmp
gs
std
mov
jl
fimul
lods
sbb
sbb
aad
jle
(bad)
in
(bad)
in
pop
push
fs
xchg
sti
cs
aas
in
pop
inc
fs
fsub
mov
std
pop
fsubrp
jbe
fsub
fnstenv
(bad)
sbb
or
pusha
pushf
ds
pop
pop
and
(bad)
push
enter
pushf
fld
pop
in
imul
jge
fld
fs
mov
pop
test
jl
arpl
fnstcw
jl
sbb
jae
push
jns
jnp
clc
xor
and
out
xor
icebp
int
cmps
sub
out
pop
retf
xchg
pop
jmp
popa
mov
ret
loope
sub
in
test
jl
rol
fs
int3
xor
data16
sbb
fdiv
in
mov
sbb
cmp
test
mov
pop
rcl
fadd
lock
pop
enter
fadd
sub
pop
sub
hlt
fucomp
push
fldenv
fdiv
fild
mov
movs
jp
adc
fimul
movs
add
mov
sub
sbb
fnstsw
movs
pop
std
cmp
in
jmp
cmps
fsubr
fst
in
pop
xor
xor
repnz
dec
jp
js
hlt
push
in
pop
pop
jbe
fisub
jl
jo
mov
out
pop
retf
fdiv
cmp
mov
int3
pop
mov
push
pop
aad
loopne
repz
jmp
ins
mov
sub
retf
pop
mov
(bad)
std
sahf
pop
outs
and
fadd
mov
lods
jmp
jg
jecxz
ficom
sbb
shr
mov
pop
or
pop
sbb
popf
pop
and
int3
pop
inc
lock
pop
dec
data16
sbb
pop
pop
jp
fsubr
jl
jno
lock
push
sbb
ins
stc
(bad)
fmul
loope
ins
jg
pop
loopne
js
fcomip
ins
pop
fstp
add
vmovaps
dec
outs
addr16
sub
(bad)
lock
pop
in
out
mov
adc
sbb
jg
mov
loopne
xchg
pop
(bad)
loopne
scas
sub
in
mov
pop
test
fcomp
std
mov
ss
imul
mov
scas
pop
cmp
das
sub
pop
aaa
loopne
aas
or
xchg
jmp
aas
pusha
push
(bad)
pop
sub
pop
fnsave
pop
pop
into
loopne
out
lds
(bad)
fldz
add
aad
pop
std
in
fucomip
fmul
scas
sub
fisub
loopne
ds
push
adc
sbb
fnstcw
in
lea
xchg
cmps
movs
sub
fisubr
mov
scas
in
add
sbb
jg
cmp
fsub
das
pop
add
adc
fdivr
imul
cmps
out
jbe
stos
scas
add
movs
fbstp
cmp
jl
pop
in
add
sub
xchg
repz
jne
std
les
xchg
pop
into
(bad)
mov
pop
scas
mov
aam
mov
push
pop
and
xchg
imul
ror
cmp
in
and
adc
(bad)
sub
add
xchg
jge
data16
movs
adc
push
iret
sbb
adc
into
icebp
adc
mov
adc
mov
and
cmp
pop
and
lods
lock
sub
jmp
mov
mov
add
mul
adc
cmp
add
and
xchg
mov
out
inc
adc
shl
inc
icebp
adc
sbb
jo
fimul
int3
in
repz
mov
xchg
sar
mov
sbb
ret
sbb
or
cs
xor
ins
xor
jb
mov
pop
rol
pop
cmc
aam
inc
cmc
cmp
cwde
outs
lods
sbb
lods
push
in
mov
push
mov
cmps
cs
pop
stc
out
inc
pop
sti
andps
add
stos
jns
mov
jmp
pop
mov
in
jecxz
sbb
sti
fadd
jmp
sti
sub
xor
cmp
inc
fisttp
jo
sub
mov
popf
gs
inc
sti
jmp
xor
popa
pop
cmp
or
dec
cmp
fcom
fwait
or
in
hlt
lods
stc
add
push
and
sub
push
mov
ins
ins
lods
gs
cmp
ins
jecxz
pop
sbb
in
int
cmp
pop
loop
scas
sahf
push
jecxz
imul
call
sbb
fs
xchg
fild
fs
fdivrp
test
lds
out
jne
and
cmps
add
fs
stos
adc
or
std
cli
aaa
out
jnp
mov
clc
scas
sub
xlat
nop
in
mov
fnstsw
push
mov
fs
sbb
cli
pop
outs
fldenv
pop
and
in
test
fsubr
jmp
jge
fcomp
hlt
pop
cdq
hlt
out
pop
retf
in
(bad)
pop
outs
fdivr
pop
sbb
pop
jge
mov
xchg
sbb
out
fcomp
adc
stc
(bad)
aam
sbb
fdivr
push
ds
sbb
pop
push
imul
data16
in
xor
mov
xchg
pop
fmul
fcomp
ficomp
out
jmp
jge
fmulp
xor
pop
xlat
fcomp
scas
in
xor
pop
pop
popa
setbe
es
mov
xor
and
das
pop
xor
in
int3
addr16
pop
cmps
sbb
icebp
push
inc
int3
inc
in
stc
and
inc
xor
movs
or
xchg
cmps
(bad)
fstp
int
cmp
and
in
cmp
and
cmp
outs
repnz
mov
movs
(bad)
pop
sbb
inc
inc
xor
push
xchg
sub
xor
btr
(bad)
fstp
xlat
cmp
retf
xchg
jmp
inc
push
sub
in
sbb
jmp
or
add
xor
repnz
fs
sbb
daa
fidiv
cmps
pop
mov
and
adc
repnz
sbb
xchg
xchg
sbb
jmp
es
or
loopne
icebp
popf
(bad)
push
pop
jecxz
data16
call
and
loop
in
mov
xor
push
es
mov
dec
add
cld
and
push
dec
shr
cld
dec
or
imul
arpl
add
repz
mov
jae
pop
movs
and
and
ds
xlat
lahf
and
and
outs
push
mov
and
in
xor
and
lds
sbb
gs
out
push
or
xchg
pusha
daa
clc
add
ins
add
pusha
xchg
mov
test
(bad)
push
mov
mov
fidivr
sub
and
es
test
pop
sbb
ins
jecxz
jae
jl
mov
or
pop
inc
loope
je
out
cmp
pop
pop
dec
xor
jg
(bad)
fcomp
and
pop
pop
popf
add
sbb
ret
jb
outs
fisub
aaa
jmp
test
ins
movs
xchg
lahf
stc
pop
outs
fmulp
push
pop
hlt
frstor
inc
imul
sbb
push
fcomp
pop
cli
fbstp
sbb
mov
hlt
(bad)
pop
outs
fld
stc
pop
in
fst
mov
int3
imul
xor
fdivrp
pop
stos
mov
ins
es
xor
jl
push
mov
mov
jmp
fisubr
jl
cs
mov
mov
push
pop
mov
ins
ret
xor
jle
dec
(bad)
jmp
adc
xor
fstp
mov
loop
push
ins
mov
(bad)
push
mov
sti
retf
push
sahf
and
sbb
sub
jb
pop
push
sub
lahf
add
loop
inc
imul
rcl
bound
mov
pop
jecxz
and
mov
and
daa
jmp
pop
xchg
lea
or
gs
cmp
sbb
pop
ficom
inc
or
adc
fmul
sub
jmp
movs
xor
int3
jp
ret
jmp
inc
(bad)
fdivr
ror
outs
pminub
fsubr
and
(bad)
mov
jg
jns
xchg
loop
js
lea
cs
loop
xchg
out
ins
ror
out
add
in
jmp
and
gs
stos
xchg
cmp
sub
je
dec
ins
sbb
mov
and
iret
pop
inc
jg
and
mov
push
es
scas
adc
push
sub
jne
and
fsub
loope
hlt
push
or
jmp
or
movs
psrld
es
add
es
add
imul
(bad)
stc
mov
pop
pusha
add
or
loopne
aas
hlt
inc
test
movs
shr
scas
push
adc
jbe
imul
fild
fadd
loope
mov
sahf
(bad)
in
and
(bad)
in
in
pop
sti
dec
rcr
sbb
jne
cli
imul
or
ins
loope
or
stos
cmp
jecxz
or
retf
pusha
gs
sbb
mov
xor
push
sbb
loopne
out
push
std
xchg
sbb
lds
ins
ja
cmp
retf
dec
iret
push
(bad)
ret
pop
(bad)
je
movs
mov
jb
dec
outs
jmp
fucom
shl
pop
fnstsw
fistp
push
ins
mov
or
retf
add
fwait
and
and
xchg
and
pop
inc
jle
repnz
pop
and
in
jns
movs
jno
retf
jg
sar
cmp
clc
scas
mov
sti
mov
js
pop
test
add
or
pop
in
retf
dec
imul
add
sbb
int
in
pusha
fdiv
jb
call
fwait
dec
outs
or
jg
xchg
test
sub
loope
aam
retf
push
mov
and
mov
or
imul
out
fisttp
push
mov
pop
scas
repz
cld
push
dec
mov
or
jnp
jmp
bound
xor
pop
jb
inc
add
dec
lods
fs
or
lods
add
mov
and
dec
mov
sub
mov
outs
dec
ins
pop
js
ds
icebp
pop
into
and
pop
mov
cmp
push
push
leave
and
push
jp
pop
push
cmp
bound
call
icebp
call
push
jp
sub
bound
and
cmp
add
cmc
adc
xchg
jbe
sar
inc
fsin
adc
test
pusha
sub
xor
retf
push
jle
shl
(bad)
in
movs
in
sbb
sti
mov
inc
sbb
push
mov
jb
xor
ds
gs
push
aaa
in
cld
aaa
mov
sbb
add
fadd
cmp
cmp
data16
retf
fsub
sub
mov
cmp
sbb
fadd
sbb
mov
cmp
fdivr
push
test
les
cld
fistp
inc
(bad)
cli
sbb
xchg
(bad)
stos
es
jl
lock
in
bound
adc
mov
fild
pop
jmp
mov
out
jbe
pop
xor
retf
pop
jb
ret
jae
test
ror
mov
test
or
adc
fsub
out
dec
gs
inc
adc
gs
loope
retf
mov
add
mov
call
(bad)
hlt
in
or
in
or
push
leave
in
(bad)
jo
cld
std
push
icebp
cld
std
or
in
or
dec
es
cli
je
mov
in
fdiv
sbb
or
addr16
and
cs
xor
xlat
xchg
push
jmp
sbb
sub
dec
mov
loop
sbb
xor
retf
add
and
jg
inc
scas
out
je
(bad)
cs
pushf
inc
sub
cmp
out
outs
fcomp
sub
out
(bad)
sub
out
push
fisub
pop
out
cmp
jecxz
aam
hlt
int3
fdiv
jl
pop
sbb
cli
pop
outs
fisub
sbb
fistp
hlt
pop
pusha
fstp
pop
cli
fisubr
lds
mov
cli
neg
stc
out
pop
mov
dec
push
fdivp
pop
in
mov
pusha
pop
sbb
cli
pop
outs
fldenv
push
pop
imul
enter
inc
mov
or
mov
outs
dec
jae
aad
(bad)
push
in
sub
adc
les
push
sbb
or
push
xchg
arpl
in
jno
sbb
or
ss
sbb
jl
retf
retf
repnz
or
fsubr
xor
out
dec
ffree
cmp
cld
not
push
stc
sahf
das
(bad)
xchg
sbb
repz
test
mov
pop
dec
sbb
jecxz
sub
pop
and
xchg
test
icebp
popf
dec
in
pop
(bad)
neg
cmp
lock
push
cs
pushf
sub
retf
loope
sbb
pop
es
sub
jg
scas
sbb
scas
xor
and
mov
out
add
(bad)
xor
cld
mov
ror
dec
iret
jo
fbld
ins
fst
push
ins
sub
sbb
fidiv
pop
lahf
mov
jecxz
mov
leave
cmp
outs
loop
cld
frstor
push
push
std
int3
mov
jmp
sbb
arpl
je
sbb
mov
ds
pop
stc
cmp
or
or
push
lods
or
inc
xor
je
inc
lods
cld
fdiv
push
cmp
mov
add
cmc
cld
bound
(bad)
jbe
sub
loopne
sub
mov
mov
pop
mov
push
ds
ja
mov
jecxz
movs
jp
pop
sub
mov
xor
fwait
add
pop
int3
std
cdq
jle
sbb
mov
add
pop
xor
rcr
iret
pop
adc
shl
push
xchg
es
xor
dec
mov
pop
adc
mov
in
iret
fwait
push
sbb
inc
jg
dec
fcomp
add
sbb
(bad)
add
pushf
lahf
pushf
jae
sbb
or
sbb
adc
lahf
popf
pushf
arpl
lahf
sbb
fistp
neg
pandn
or
cmp
out
jmp
adc
jae
ror
stc
push
aad
imul
adc
in
sti
push
mov
out
mov
retf
fld
stc
and
or
(bad)
sbb
sti
adc
cmp
add
mov
mov
mov
ins
cmp
jecxz
inc
jge
sbb
push
fnstenv
pop
sbb
xchg
push
(bad)
mov
sbb
and
popa
or
sbb
fidiv
jmp
movs
mov
push
mov
mov
daa
je
in
mov
jmp
sbb
inc
xlat
cs
push
sbb
dec
or
gs
pop
out
add
psrlw
inc
mov
pop
movs
popf
lods
ins
xlat
das
pop
sub
fisttp
push
sbb
pusha
sbb
adc
jecxz
push
pop
hlt
sahf
stc
pop
push
popf
(bad)
ficomp
pop
arpl
ins
push
(bad)
jmp
fwait
gs
xchg
mov
mov
mov
in
mov
xor
fdivp
pop
pop
out
push
sti
shl
jmp
ins
rcr
pop
loope
ins
pop
inc
sahf
sti
lods
push
icebp
sbb
cmp
sbb
pop
push
sub
jno
cmc
call
xchg
and
(bad)
xor
lock
clc
mov
aam
push
fstp
ror
enter
rcl
test
pop
sbb
sub
sbb
daa
jmp
std
ss
or
cdq
pushf
jbe
inc
pop
dec
inc
mov
push
mov
xor
add
push
loope
out
jl
xor
lahf
mov
pusha
mov
cmp
hlt
ins
add
push
add
rol
cmp
sub
push
inc
mov
jb
dec
out
mov
mov
jl
and
pushf
out
js
je
jae
push
fsub
mov
push
shl
add
pushf
sti
mov
sub
sub
push
mov
push
xchg
sbb
aas
cli
fdivr
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
pop
pop
sub
pop
inc
fadd
cmp
nop
cmp
mov
and
sbb
pop
sti
sbb
dec
dec
xor
jne
inc
mov
ror
sbb
pushf
out
mul
pop
sbb
in
pushf
std
fcomp
sbb
push
mov
cwde
fstp
push
shl
in
push
std
pop
sahf
push
mov
jmp
push
mov
cwde
pop
inc
mov
or
pushf
in
mov
mov
cmp
dec
(bad)
xchg
jbe
inc
les
ins
xchg
and
cmp
leave
sbb
push
rcr
sbb
sbb
or
xchg
sub
outs
xchg
in
pop
and
or
lea
or
gs
addr16
cmp
mov
sahf
adc
xchg
inc
jle
inc
daa
js
lods
add
out
push
je
sti
adc
clc
sahf
add
mov
scas
mov
or
xchg
sub
fs
repnz
adc
push
nop
lods
rcr
and
psubw
sbb
mov
mov
pusha
xlat
xchg
js
inc
or
add
addr16
cdq
push
fcomp
sbb
fsub
mov
ds
jns
outs
pop
test
pop
fdivr
sbb
into
in
fcomp
popf
mov
mov
rcl
pop
sbb
retf
push
push
hlt
(bad)
sahf
push
in
(bad)
pop
aas
sahf
adc
pop
mov
inc
pop
outs
(bad)
pusha
ficomp
sahf
mov
cmps
pop
mov
pop
mov
ficomp
inc
in
fadd
mov
adc
pop
sti
or
mov
inc
mov
pop
pop
xlat
jg
sub
mov
fisttp
test
mov
and
sbb
ins
fild
ins
pop
stos
jb
pop
and
sti
cld
sbb
cmp
mov
pop
sar
sahf
mov
pop
pop
es
imul
jmp
addr16
mov
or
fisttp
adc
je
add
int3
imul
bound
jmp
stos
sbb
mov
pop
sti
sbb
jecxz
call
mov
cmp
jecxz
in
jecxz
cli
sbb
jle
xchg
fmul
mov
or
xor
fimul
pop
mov
dec
test
push
inc
stos
mov
in
sbb
jmp
cmp
ins
popf
cmp
mov
xlat
aas
imul
(bad)
mov
jmp
dec
lds
sbb
sbb
and
mov
jle
sbb
xchg
lods
pop
inc
sbb
loope
mov
pop
mov
add
pop
cmp
ins
sub
ds
mov
sbb
daa
mov
mov
push
loopne
(bad)
call
stos
test
mov
jmp
mov
repnz
pushf
inc
mov
(bad)
cmc
sbb
add
repz
out
or
sbb
push
fs
push
fs
jns
lahf
sub
dec
and
int3
push
repz
dec
clc
jmp
ret
out
xlat
mov
in
jle
outs
or
xor
popf
fs
ret
outs
hlt
in
pushf
inc
mov
in
sub
out
mov
or
das
(bad)
or
mov
sbb
jmp
sub
jbe
and
sbb
ins
xor
sbb
in
fsubr
retf
mov
test
iret
outs
fistp
and
fstp
pusha
loop
xchg
jmp
cmp
ss
mov
add
or
ficomp
lahf
sahf
push
jmp
es
jne
sub
pop
aam
lods
das
pushf
scas
lahf
mov
xlat
mov
pop
call
shr
xor
mov
ret
jecxz
addr16
mov
mov
sbb
cmp
add
mov
xor
scas
sbb
sbb
movs
(bad)
jae
pop
push
pushf
(bad)
jge
pop
ret
adc
pusha
pop
out
ds
test
sbb
add
dec
push
retf
cmc
es
hlt
sbb
cmps
pop
ins
popf
xor
loop
sbb
frstor
push
mov
cmp
xor
aam
out
in
sahf
xor
pop
std
sahf
fisub
pop
aam
ficomp
sub
fisub
in
pop
push
lahf
imul
sub
pop
out
(bad)
idiv
sbb
dec
pop
sahf
sti
call
ret
fdivrp
mov
sub
pop
movs
test
out
jmp
mov
pusha
(bad)
cmp
mov
jb
and
stc
xor
mov
adc
(bad)
clc
adc
sbb
cmp
xor
neg
cmp
ffreep
out
add
add
jne
inc
clc
adc
xlat
xor
mov
dec
pop
into
je
pop
out
jmp
mov
xchg
call
sub
sub
arpl
in
(bad)
push
shl
pusha
sti
gs
iret
push
movs
xor
sbb
aam
scas
adc
mov
fcmovu
and
bound
ds
cld
inc
sti
mov
int3
adc
xor
sub
sbb
push
jge
(bad)
in
mov
pop
(bad)
out
sahf
out
shl
cmp
cmp
test
xchg
or
and
pop
xor
dec
mov
push
adc
push
inc
and
jl
ins
jl
(bad)
psraw
pop
pop
in
popf
push
cdq
jecxz
and
pop
jmp
fidiv
mov
mov
and
pusha
movs
jge
add
in
cmp
sti
fisubr
gs
cwde
push
call
and
push
sbb
inc
call
dec
bound
int
repnz
jle
jg
or
adc
and
or
imul
inc
or
test
sbb
push
mov
ins
or
sbb
cmp
imul
push
mov
fisubr
pop
aaa
scas
mov
outs
imul
retf
call
xchg
inc
popa
push
cmp
push
cs
popa
inc
sti
test
mov
mov
hlt
mov
sbb
sub
xchg
or
je
jno
fsubr
loope
sti
addps
popa
cmc
pop
call
jmp
aam
sub
jnp
jg
fisubr
fiadd
ror
mov
test
sahf
sbb
or
dec
jno
mov
icebp
adc
and
fisttp
sbb
push
push
cmps
mov
pop
or
cmp
pop
sbb
(bad)
div
and
aas
pop
sti
popa
aas
es
jge
call
pop
or
addr16
push
cmp
cld
lods
fldenvw
gs
xchg
test
inc
xlat
out
pop
daa
popf
add
cmps
sbb
jb
cmp
frstor
sahf
(bad)
(bad)
pusha
cdq
pop
in
aas
fcomp
and
pop
icebp
pop
jb
std
sti
ss
fist
pop
push
mov
push
add
leave
imul
les
pop
rcr
push
call
fwait
lahf
rcr
lods
push
pop
ror
(bad)
mov
dec
lods
jl
sbb
(bad)
cld
pusha
inc
ja
sub
cmp
data16
pop
jle
ds
xchg
push
or
es
push
pop
cli
sbb
pop
jnp
idiv
push
or
loopne
adc
int3
jle
xor
mov
aas
fs
xlat
repnz
in
dec
ins
cmp
nop
std
je
xlat
push
fwait
pop
push
push
push
mov
adc
(bad)
retf
xchg
jg
(bad)
pushf
fimul
sbb
cld
popf
xor
mov
loop
cmp
and
fdivrp
pop
in
and
hlt
fsub
fild
xchg
jo
inc
sahf
outs
nop
xor
sahf
(bad)
and
iret
rcl
and
inc
inc
scas
sar
mov
adc
xor
data16
sub
fcomp
std
jle
fsubr
lahf
lahf
loop
test
and
cmp
mov
ficom
dec
inc
jge
pop
mov
sbb
rcr
stos
dec
adc
push
push
xlat
cli
fcomp
sbb
xchg
fld
(bad)
push
add
leave
fdivr
push
shr
shr
lahf
sbb
mov
adc
movs
in
fs
inc
fstp
push
retf
pop
pop
cli
retf
or
pop
loope
ins
jb
cli
out
and
sbb
retf
std
fcomp
xchg
dec
xor
mov
or
pop
push
lahf
jle
fisubr
inc
mov
add
sub
fistp
pop
xlat
xchg
icebp
cdq
(bad)
push
pop
fdivr
add
imul
pop
movs
add
ret
pop
push
sub
test
jl
fidivr
jle
adc
add
pop
push
sub
sbb
sbb
ret
sti
inc
pop
in
mov
std
sahf
repnz
jb
fsubr
lahf
cwde
push
rol
js
retf
sub
dec
ins
sbb
cld
or
fidivr
mov
sahf
test
xlat
cmp
clc
fistp
(bad)
fcom
shr
popa
or
pop
add
lahf
push
call
or
sub
fwait
in
pop
in
fs
pop
cvtps2pd
faddp
ret
cmp
sub
fiadd
call
pop
sbb
fucom
sahf
stc
fdiv
mov
cmp
sbb
sbb
pop
data16
lahf
inc
mov
xchg
sbb
lahf
ficomp
cmc
pushf
sbb
arpl
pop
pop
fsubr
mov
sbb
lods
pop
jo
out
cdq
nop
mov
sbb
cmp
shr
clc
lahf
or
shr
sbb
pop
xchg
std
pushf
es
les
pusha
sbb
repnz
sbb
hlt
sbb
cmp
dec
sbb
cmp
pushf
adc
mov
pop
loop
in
pop
sbb
sbb
out
sbb
sahf
and
push
sub
add
ins
lock
push
jmp
pop
sbb
loopne
xchg
add
push
add
icebp
or
sti
sbb
and
mov
mov
xor
fild
pop
inc
ins
inc
push
push
mov
and
xlat
lock
aam
sbb
data16
pop
cmp
sbb
pop
xor
sub
adc
fist
imul
add
sub
jecxz
out
shl
retf
ins
loopne
adc
jge
add
sub
test
push
fidivr
call
div
push
mov
or
cmp
fidivr
or
mov
mov
stos
mov
lahf
mov
add
cmp
mov
iret
push
fdiv
add
mov
fs
aad
sbb
xchg
push
jnp
imul
addr16
imul
xor
nop
adc
adc
fadd
pop
push
hlt
xor
pop
sahf
fdivr
sbb
jo
inc
jmp
xchg
cld
lds
add
pushf
gs
or
and
sbb
sub
pop
push
nop
cmp
push
pop
aad
ins
inc
test
mov
fst
cmp
jp
aam
sub
cwde
or
jmp
dec
xor
ins
mov
icebp
xchg
mov
outs
jp
inc
loope
jae
pop
push
pop
sbb
(bad)
sub
outs
and
cld
fwait
jmp
cdq
cmc
mov
or
xchg
mov
or
add
test
push
icebp
pop
shl
rol
jb
(bad)
imul
sti
pop
jge
push
fwait
sbb
shl
add
je
adc
push
lods
xchg
push
popf
jecxz
(bad)
(bad)
(bad)
cmps
icebp
push
into
jo
clc
(bad)
into
ret
int
and
cli
sub
ror
pop
jno
daa
ret
mov
push
fidivr
push
xchg
arpl
mov
mov
ficomp
aad
inc
int
pop
or
pop
inc
or
les
jmp
sbb
aam
push
(bad)
sub
stos
xchg
inc
test
pop
loopne
mov
call
pushf
and
add
sbb
out
mov
out
test
fidiv
mov
dec
imul
pop
pop
adc
out
mov
push
pop
(bad)
cmp
xor
add
cmp
xchg
imul
addr16
sub
mov
or
cld
or
jmp
stos
outs
arpl
or
ja
sar
dec
outs
idiv
aaa
cli
jae
rcr
sti
cmp
cmp
xchg
xchg
and
mov
push
pop
xor
mov
fmul
gs
xor
mov
cli
addr16
sbb
jp
dec
sbb
and
cmp
jl
adc
push
je
mov
and
and
hlt
mov
mov
pop
loope
bound
test
les
dec
pop
push
mov
repz
arpl
ffreep
ds
jg
and
lods
push
jb
mov
popa
push
outs
xchg
jmp
mov
ins
popf
shr
push
and
adc
push
stos
mov
xchg
sbb
inc
je
rol
xchg
add
xchg
dec
stc
dec
mov
dec
inc
or
sbb
aas
jecxz
push
int3
adc
shl
xlat
iret
push
jl
dec
jo
cmp
cdq
pop
inc
xchg
out
outs
das
cmp
pop
sbb
icebp
in
sti
in
js
ins
xor
push
jbe
adc
jns
repz
cmp
jecxz
int
es
dec
and
dec
jmp
and
cmps
(bad)
aaa
fwait
jmp
inc
jmp
mov
call
cmps
dec
(bad)
xor
int
adc
int
and
push
pop
(bad)
or
and
and
xor
dec
in
ret
xor
ror
sbb
push
ss
pop
xchg
es
dec
hlt
xor
sbb
fidiv
test
movs
pop
jp
cmp
sbb
adc
xchg
sbb
cmp
xchg
xchg
sar
sbb
add
cmp
or
push
pushf
out
movs
pop
sbb
add
sbb
adc
jge
mov
add
xor
adc
sbb
movs
repz
ficomp
jecxz
sub
cld
jge
(bad)
dec
enter
in
or
cs
cld
cmps
jge
nop
pop
movs
cld
jbe
or
push
xchg
jb
dec
xchg
daa
xchg
hlt
sti
and
xor
pmaddwd
cmp
(bad)
pop
mov
mov
into
inc
xchg
mov
(bad)
sub
and
test
fs
mov
xchg
fs
dec
hlt
hlt
add
pop
jecxz
pop
pushf
gs
adc
movs
bound
add
nop
push
call
pusha
fcomp
scas
push
ds
or
or
scas
push
push
adc
adc
cmp
popf
les
xor
fdivr
std
cmp
arpl
fdivr
aad
or
or
sbb
repnz
mov
ds
rol
sahf
(bad)
mov
loope
setl
dec
fcomp
sbb
sbb
push
sbb
js
out
(bad)
pop
or
int
cmp
jecxz
sbb
push
popf
pop
push
in
fstp
xchg
test
and
in
pop
mov
jmp
and
clc
std
fistp
sbb
ins
push
add
call
pop
push
xor
dec
mov
stc
push
push
jge
imul
pushf
popf
pop
ret
or
or
aaa
sub
adc
xchg
lahf
rol
push
pusha
mov
xor
mov
aad
pop
push
stos
in
xchg
xor
in
pop
pop
pop
push
mov
mov
aas
and
in
push
rcl
(bad)
adc
(bad)
call
or
mov
lods
mov
xor
fs
call
int
push
(bad)
pop
push
push
push
jge
(bad)
cmp
mov
or
fst
cmp
mov
arpl
and
xor
fsub
sbb
mov
xor
inc
or
imul
and
pop
pop
xor
ficomp
xchg
out
fstp
stos
inc
sbb
xchg
or
jmp
inc
loopne
mov
retf
jbe
ret
add
loopne
xchg
inc
jb
sbb
bound
dec
pop
jp
xor
dec
js
dec
cmp
pop
xchg
leave
mov
and
dec
hlt
push
pop
jnp
ret
sbb
or
jae
dec
pop
xchg
mov
idiv
mov
or
xchg
add
push
push
in
pop
inc
adc
sub
enter
pop
ret
cmp
xor
mov
mov
adc
cmp
mov
in
pop
out
(bad)
mov
jmp
enter
lock
test
(bad)
imul
stos
aad
xor
cdq
scas
sub
pop
xlat
push
and
xchg
into
pop
mov
xchg
into
daa
cmp
jle
jecxz
xor
jle
ja
mov
push
mov
bound
xchg
movs
xor
jle
movs
into
icebp
sub
lds
jb
sbb
icebp
push
pop
in
popf
mov
mov
scas
(bad)
inc
outs
mov
lds
xlat
lds
rcl
pop
(bad)
das
lds
das
dec
dec
pop
mov
js
cli
ror
out
div
push
loop
cmp
data16
test
inc
(bad)
fdiv
mov
(bad)
sar
cdq
mov
pop
imul
sbb
jmp
retf
in
xchg
mov
xor
xor
mov
xor
jg
(bad)
dec
mov
jge
nop
scas
sub
push
fdiv
cmp
jge
es
nop
xchg
xor
in
in
out
ds
clc
test
cmp
inc
fist
add
or
mov
sbb
mov
ins
fld
adc
sbb
cs
sub
pop
jnp
add
mov
popa
dec
out
test
cmps
push
sti
cmp
in
add
xchg
jl
pop
dec
ret
cmp
bound
push
popa
and
jmp
add
mov
nop
int
int
icebp
mov
push
in
(bad)
cwde
and
out
cs
test
data16
push
test
clc
iret
out
icebp
or
fstp
sahf
sbb
sbb
out
fnstcw
daa
bound
inc
pop
sbb
push
shr
pop
and
sahf
adc
retf
les
sub
out
or
fst
sbb
in
push
bnd
ficomp
jl
movs
sub
and
cmp
clc
or
test
add
adc
add
sbb
lahf
push
mov
lock
sbb
xor
stos
test
pushf
leave
sbb
mov
test
fwait
mov
pop
test
lahf
inc
loope
sub
pushf
in
push
fcomp
lahf
lds
push
sub
stc
pushf
sub
test
fs
test
push
int
popf
test
pop
cmp
imul
sbb
fs
imul
sbb
lahf
cmps
pop
xor
cwde
(bad)
fistp
imul
pusha
mov
pop
pop
shl
pop
retf
fst
mov
in
iret
dec
in
iret
adc
pop
gs
xor
test
pop
stos
hlt
fisub
pop
jae
scas
dec
in
iret
push
fistp
pop
cmp
xchg
add
push
add
(bad)
pop
leave
cmp
retf
mov
jge
sahf
mov
frstor
push
jno
push
cld
fisttp
hlt
popf
mov
pushf
xlat
sbb
adc
and
sbb
cld
nop
mov
int
mov
pop
fstp
js
clc
xor
and
je
jle
pushf
and
mov
lds
fsubr
ret
inc
push
ret
mov
out
cmp
inc
fstp
xchg
fcomp
enter
dec
jne
adc
push
fwait
ins
and
cli
popf
stos
mov
call
es
pop
push
addr16
lods
fs
lock
jnp
hlt
lahf
pop
fwait
xchg
sti
mov
pushf
sub
clc
xor
pop
adc
ins
outs
mov
push
pop
pop
imul
cmc
pop
call
add
sahf
mov
ficomp
sbb
fdiv
hlt
cmc
pop
shl
sbb
pop
adc
cwde
out
lahf
mov
fistp
cwde
cmps
fdiv
cwde
mov
jl
shl
int
sahf
fnstsw
adc
fimul
fdivr
lods
mov
and
fyl2xp1
pop
aad
pop
xlat
fisubr
adc
mov
dec
mov
lods
pop
xchg
pop
ss
call
daa
sbb
dec
(bad)
in
outs
sti
cmps
daa
aas
out
sahf
jbe
mov
pusha
cli
es
lods
nop
jmp
js
or
imul
imul
and
(bad)
and
ins
mov
jae
pop
jl
adc
sub
loopne
xlat
leave
mov
bound
or
inc
sbb
or
lods
dec
ins
aam
or
pop
dec
push
enter
ja
retf
out
xchg
cmp
iret
xor
sbb
jmp
ins
call
pop
sub
and
movs
inc
sar
adc
ins
sub
and
icebp
call
call
movs
cmps
pop
popa
pop
adc
fiadd
sbb
(bad)
lahf
push
sahf
mov
std
pop
pushf
cmp
sbb
or
daa
sbb
xchg
fs
pushf
push
popf
pusha
sahf
pop
push
dec
or
adc
out
loopne
sbb
pop
fmul
push
out
fnstsw
test
out
les
sbb
and
sbb
in
lds
sub
mov
aas
jb
pop
outs
jne
pop
dec
add
mov
jl
sbb
ins
outs
cli
pop
nop
cmps
(bad)
or
(bad)
aaa
mov
scas
jg
test
sub
das
test
sbb
aaa
pop
jmp
pop
out
popa
pushf
lds
mov
fsubr
jl
sbb
push
popf
sbb
retf
sbb
(bad)
and
pushf
sbb
sahf
mov
ficomp
pop
cmps
pop
xor
lahf
cmps
fbstp
sbb
aad
sbb
gs
int3
sbb
cwde
cmp
imul
mov
sbb
mov
sbb
in
ds
(bad)
push
bound
call
in
pop
sbb
int3
sbb
addr16
xor
pop
stc
fstp
push
pusha
mov
sbb
mov
jmp
sbb
sub
popf
in
jmp
mov
popf
sbb
sahf
in
aas
push
fdivp
pop
bound
sahf
add
imul
lahf
into
in
fistp
sbb
fcmove
add
fdivrp
pop
push
mov
jnp
pop
in
(bad)
fdivr
imul
imul
rol
fisub
pop
fiadd
es
nop
jb
mov
clc
cmc
pushf
cli
imul
sbb
sbb
stos
scas
and
sub
shl
pop
sbb
in
imul
sti
add
ret
inc
dec
fld
pop
adc
pop
add
add
out
pop
lahf
mov
cmp
jecxz
xchg
fst
bound
xor
inc
jl
ret
mov
int
mov
jb
call
mov
pushf
mov
cmp
aaa
xor
xchg
pop
push
mov
cmps
ret
ret
adc
adc
retf
enter
and
lods
sub
push
pusha
dec
mov
fwait
and
cmp
push
outs
aad
jnp
sbb
cmp
gs
mov
popf
ins
fsub
dec
call
int3
fpatan
call
div
mov
jle
cdq
push
xor
fmul
in
xchg
mov
loop
movs
movs
and
mov
jecxz
popf
in
std
or
sti
add
xchg
ins
fisttp
vunpcklps
jbe
pop
sub
inc
test
mov
mov
mov
movs
aad
add
fsub
je
pushf
and
jnp
ss
adc
and
call
xchg
nop
(bad)
frndint
push
dec
int
rcl
pop
es
xor
and
push
test
xchg
test
push
test
imul
dec
cmp
je
icebp
ror
cmps
pop
imul
sbb
mov
push
stc
hlt
cs
das
sahf
(bad)
adc
outs
pop
ins
jl
sub
and
xor
retf
push
push
jmp
sbb
jmp
add
in
sbb
or
xor
push
jb
push
sub
or
xchg
mov
xor
dec
push
mov
xchg
stos
xchg
ds
pusha
or
sbb
fwait
(bad)
mov
and
mov
xor
(bad)
dec
xchg
sub
jge
inc
stos
lock
sbb
mov
jp
adc
ins
xchg
stc
fstp
mov
jecxz
sub
rol
jne
pop
add
iret
pop
cmc
add
sbb
mov
sbb
cld
pop
cmps
ret
ret
pop
outs
ret
push
pop
daa
xor
pop
mov
ret
sbb
cmp
mov
nop
sbb
pop
inc
ror
ja
xchg
in
(bad)
mov
xlat
sbb
push
xchg
sbb
retf
ror
fimul
fsubp
stc
and
jmp
sti
cmp
sti
mov
(bad)
repnz
movs
mov
jb
pop
push
sahf
dec
shl
shr
or
add
mov
ret
mov
gs
mov
dec
sbb
or
sahf
pop
loope
bound
mov
mov
xchg
stos
call
iret
ins
pop
(bad)
into
xor
and
xchg
xor
mov
pop
out
ss
pop
dec
sbb
dec
sub
xchg
(bad)
ffree
cwde
sub
les
test
jecxz
adc
sbb
fdivr
jmp
sbb
add
jmp
adc
fstp
push
sbb
imul
cli
fcom
fstp
push
lock
stc
pop
cdq
push
(bad)
shl
fs
in
pop
arpl
stc
cwde
push
pushf
mov
movs
stos
jne
push
fdivr
movs
stos
jne
push
sbb
ret
movs
stos
gs
ins
pop
push
fs
iret
cmp
cdq
popf
xor
pop
cdq
push
(bad)
shl
fld
push
(bad)
shl
sbb
stc
pop
sbb
shl
fs
in
pop
arpl
stc
call
ret
movs
stos
fisubr
fs
iret
cmp
sbb
xor
pop
cdq
push
(bad)
shl
fs
in
pop
arpl
es
out
pop
in
loope
or
fadd
fucomp
or
xchg
or
sbb
or
adc
mov
xor
sbb
aad
cmp
arpl
into
shl
push
(bad)
(bad)
mov
enter
xor
or
lahf
mov
stc
or
pop
in
fs
outs
imul
xlat
xchg
shl
fdiv
cmp
pop
cmc
jne
push
repz
xchg
or
cmp
ret
out
adc
xchg
mov
outs
xor
fnstsw
ret
sub
jmp
sub
sbb
jecxz
cmc
push
jl
sbb
addr16
pushf
int
or
pop
cmp
in
sbb
int
pusha
ja
in
push
loope
clc
out
sbb
push
je
add
scas
or
or
or
in
jecxz
loope
retf
or
push
jp
xor
cmp
xor
in
aam
jp
sbb
dec
pop
xor
les
jg
pusha
jge
pusha
dec
(bad)
fstp
aas
(bad)
mov
ins
fdivrp
sahf
(bad)
call
fdivr
fisttp
aas
std
(bad)
pop
enter
pop
pop
push
jnp
dec
movs
mov
test
adc
push
inc
push
jmp
inc
add
fidivr
loop
daa
push
out
fadd
fnsave
or
cmp
iret
sbb
pushf
adc
inc
jbe
sub
ror
sti
xchg
mov
xchg
addr16
push
ficomp
outs
xlat
out
dec
jg
jl
push
mov
push
mov
push
sbb
call
mov
ins
addr16
cmp
jl
sub
in
jmp
inc
xchg
inc
fwait
clc
daa
std
adc
je
imul
mov
in
pop
ds
stc
xchg
push
cwde
ficomp
or
jns
push
sub
into
lea
ins
loop
sbb
icebp
fsub
iret
xchg
mov
repz
or
adc
pop
and
sbb
cmp
pop
xchg
push
imul
cmp
inc
into
adc
imul
stos
sbb
cmp
push
sub
xchg
mov
inc
outs
add
jle
and
dec
xchg
mov
push
ins
lahf
loop
xchg
retf
loope
pushf
xlat
adc
mov
jl
outs
push
(bad)
mov
loopne
ret
sbb
shl
outs
pop
pop
imul
push
fisttp
jge
mov
xlat
inc
pop
cld
push
push
push
sbb
pushf
xlat
pusha
xlat
jg
(bad)
push
lods
cli
out
adc
retf
xchg
fs
repnz
or
or
(bad)
ror
mov
add
pushf
xchg
mov
pop
jg
mov
aas
sti
jmp
mov
mov
mov
mov
mov
xchg
clc
es
stos
movs
pop
push
mov
adc
cdq
pop
and
xor
adc
iret
mov
push
or
mov
jbe
pop
or
dec
and
mov
cmp
adc
mov
in
shr
ficom
adc
cmc
pop
xor
sbb
test
fsub
outs
dec
inc
push
cld
dec
fistp
cmc
cmp
or
dec
fsubr
(bad)
xor
sub
xor
call
ror
cs
aad
jnp
fild
xlat
das
loopne
mov
push
aaa
pop
jmp
jnp
inc
and
jge
mov
adc
adc
xor
fistp
je
shl
test
adc
xchg
int3
adc
push
sub
add
test
and
out
push
shr
repnz
cmp
dec
fwait
mov
cmp
clc
scas
jg
je
icebp
sub
mov
sub
mov
mov
sbb
add
pop
mov
test
mov
sbb
and
outs
pop
or
adc
add
sbb
fs
sbb
jl
cmp
fmul
inc
ret
mov
sbb
and
jmp
jmp
push
dec
in
arpl
push
jmp
xchg
(bad)
sbb
mov
shl
mov
fst
scas
jmp
rep
jge
dec
in
mov
jecxz
lea
jmp
pop
ret
arpl
lock
adc
or
or
jns
mov
add
div
pop
retf
pusha
repz
mov
dec
cmp
fiadd
loop
add
pop
jnp
mov
jns
mov
mov
dec
push
adc
jb
repnz
xchg
and
cld
pop
and
cmp
scas
int3
cld
and
mov
xor
mov
cmp
add
fmul
inc
mov
test
fnstenv
inc
add
dec
xor
pop
in
sar
fwait
loopne
ret
test
shl
jecxz
push
xchg
stos
mov
push
pop
in
popa
inc
xor
xor
retf
pop
xor
push
pop
cmps
leave
mov
pop
sbb
mov
pop
and
fnstcw
jecxz
cmc
sbb
push
sbb
add
in
add
(bad)
in
lea
in
add
pop
jp
add
retf
fwait
icebp
or
xchg
push
out
mov
ins
cdq
leave
mov
mov
fcomp
mov
pop
fimul
xchg
int3
jmp
cmp
movs
ret
pop
or
push
dec
push
pop
rol
in
pop
cmp
loopne
arpl
dec
(bad)
sbb
sti
jmp
pushf
mov
out
fimul
les
xchg
lods
fild
push
pop
add
mov
adc
ret
mov
aaa
mov
sbb
adc
sahf
push
pop
adc
addr16
dec
or
not
ret
cmp
inc
pop
pusha
mov
push
retf
mov
add
mov
mov
mov
xor
mov
int3
retf
ja
out
push
dec
pop
sub
jmp
movs
bound
fstp
aas
and
loope
xor
repnz
jg
pushf
(bad)
mov
cmp
test
and
stos
inc
lahf
por
shl
sbb
xchg
sahf
sub
xor
ret
adc
dec
add
xchg
jle
sbb
sbb
imul
jmp
jno
sub
cmp
and
dec
ror
sub
mov
pop
xor
xchg
mov
fmul
icebp
(bad)
loopne
mov
in
pop
xlat
cli
jmp
in
fsub
pusha
fcomp
inc
ins
mov
rcr
inc
scas
fdivrp
push
add
loopne
cli
repz
sbb
es
push
mov
pop
sub
shl
xor
sub
fsubr
call
jg
leave
jnp
mov
cwde
and
fst
popa
jmp
xor
cs
jne
xchg
add
fsubr
aam
jmp
add
pop
ins
push
test
icebp
xchg
mov
add
fdiv
ins
ret
fldcw
outs
adc
ds
mov
mov
mov
jnp
mov
jle
jmp
lahf
jmp
into
inc
dec
jecxz
dec
in
test
in
inc
jmp
sbb
sti
inc
ins
leave
repnz
jl
icebp
pop
cmp
ret
aaa
push
sbb
js
sti
mov
jle
stos
jbe
push
add
icebp
add
inc
cmps
mov
inc
fmul
and
hlt
pop
sub
ja
ficom
xor
ds
and
outs
jb
test
sbb
mov
add
cmp
jle
mov
es
push
mov
xor
pop
or
and
mov
adc
jae
inc
mov
sbb
jmp
dec
xor
push
stos
adc
mov
fwait
dec
cli
dec
push
loope
pop
test
jne
xchg
mov
pop
fnsave
(bad)
xor
loope
fwait
add
sti
aas
xor
sbb
movs
in
mov
fdivp
sbb
call
xchg
sub
cmps
fisubr
in
cmp
sahf
in
and
sub
sahf
imul
enter
fwait
xor
or
(bad)
mov
icebp
sbb
jecxz
pop
repz
cld
mov
xor
adc
ret
add
shr
addr16
loope
push
frndint
adc
out
xor
loopne
jae
mov
(bad)
in
jle
imul
push
inc
(bad)
jmp
bound
push
frndint
or
mov
fldenv
pop
xchg
sub
jle
jecxz
jb
adc
sti
fs
adc
sub
lods
dec
shr
dec
jns
fstp
ds
xor
stc
jl
icebp
mov
in
mov
jns
push
add
adc
add
jle
mov
xor
sub
inc
pushw
pop
cmps
leave
mov
inc
mov
sub
or
jg
sahf
xlat
loope
push
in
cmc
in
stos
jg
in
retf
push
fisub
(bad)
movs
add
cmp
or
pop
(bad)
and
xor
jg
or
xor
dec
sbb
stos
int3
fnstcw
mov
(bad)
jl
sub
pop
mov
movs
mov
pop
es
push
in
dec
ins
mov
cmc
iret
mov
iret
and
jge
cs
mov
lock
pop
mov
mov
ds
dec
jl
ins
bound
adc
cmp
jle
xchg
push
shr
stc
mov
cmp
jnp
ins
mov
inc
imul
stos
xor
(bad)
sub
ins
repz
int3
std
sbb
pushf
or
pop
loope
jae
pop
in
in
mov
movs
jp
(bad)
in
add
push
or
sub
in
mov
add
mov
cmc
popf
pop
fdivr
cmps
sbb
mov
add
std
sbb
frstor
cmc
fsubr
fmul
mov
imul
jge
adc
sbb
pop
mov
movs
sar
fadd
xor
shl
push
std
sbb
add
fild
sbb
fldenv
pop
xchg
adc
(bad)
jge
sbb
in
fstp
mov
dec
mov
fs
and
stc
dec
int
es
or
jge
rsm
cmps
xor
std
sbb
fcos
sbb
fist
sub
inc
cmp
sahf
sbb
in
mov
clc
push
sub
add
jns
stc
jge
popf
retf
das
push
fidiv
rol
scas
cmps
fbld
inc
ins
or
pop
nop
and
fsubr
jg
enter
sbb
mov
loopne
add
fsub
hlt
push
cdq
jl
push
push
clc
imul
sbb
cmp
not
cmc
ds
shr
rcl
(bad)
aad
std
mov
es
pop
std
stc
rcr
(bad)
mov
push
(bad)
shl
adc
mov
pop
mov
idiv
adc
jae
pop
adc
jp
adc
fisub
call
mov
loop
ds
fucomp
fist
add
xchg
adc
fist
pop
push
inc
in
sub
dec
inc
gs
mov
mov
pushf
rcl
cmp
inc
push
push
jmp
push
in
inc
cmp
jo
sub
lock
repz
adc
adc
add
jge
fld
hlt
mov
ins
in
fcmovbe
cmc
adc
inc
repz
jl
dec
scas
xchg
mov
sti
jbe
pop
pop
cmp
cmps
das
cmp
mov
sub
iret
xchg
test
push
push
movs
push
xor
jmp
xor
xor
push
pushf
outs
(bad)
(bad)
loopne
or
mov
sahf
in
mov
sti
and
(bad)
loopne
add
loopne
or
xor
(bad)
adc
jmp
push
add
sbb
pop
out
in
sti
in
lds
in
push
popa
sbb
push
and
jmp
adc
in
sub
stos
movs
cmc
sti
mov
push
in
mov
or
and
push
cld
sbb
scas
sbb
xor
sti
mov
out
movs
cmc
or
out
inc
in
leave
xchg
out
sbb
xor
hlt
and
call
imul
imul
rol
push
inc
hlt
imul
js
out
push
cmp
sbb
xor
hlt
pop
dec
aas
out
pusha
add
ins
adc
test
cmp
push
push
hlt
push
scas
cmps
in
sahf
pop
lahf
in
sub
add
ins
inc
cmp
pop
or
push
sbb
es
dec
mov
push
imul
xchg
cli
call
cmps
cli
inc
xchg
and
push
mov
mov
and
add
mov
daa
fdivr
mov
sbb
and
std
call
pop
sbb
out
sub
inc
adc
pop
mov
int3
push
pop
mov
mov
ror
sbb
push
mov
dec
(bad)
push
jecxz
stos
sbb
inc
mov
sbb
pop
(bad)
movs
jmp
xlat
mov
mov
xchg
in
outs
add
not
mov
sbb
sbb
out
push
fdiv
lods
ins
sbb
setb
xor
or
mov
xor
repz
sbb
mov
mov
inc
cwde
pusha
xor
xor
repz
cmp
das
in
stc
jmp
add
xchg
sbb
cmc
aaa
cmp
pusha
mov
nop
in
aaa
adc
jns
sbb
push
or
and
jmp
rcr
in
sbb
or
mov
fs
fwait
dec
sub
xchg
ja
push
adc
and
add
sub
sbb
hlt
xor
sti
push
fcom
mov
fs
add
cmp
imul
cmps
cmp
sub
pusha
inc
sbb
pop
and
cmp
sub
in
mov
cmp
and
mov
cmp
pusha
push
sbb
pop
xor
dec
ins
cmp
in
mov
inc
jmp
inc
cmp
push
push
add
add
sbb
inc
xchg
push
dec
gs
les
jbe
pop
push
mov
cmps
stos
dec
das
inc
je
add
dec
inc
push
push
out
pop
sub
inc
pop
inc
cmp
or
(bad)
lock
jmp
mov
push
add
mov
fldenv
push
ss
add
pop
clc
add
icebp
hlt
clc
cli
sti
mov
mov
push
pop
push
aad
jmp
sbb
retf
inc
xor
add
cli
sti
dec
jmp
adc
in
or
hlt
sbb
adc
cdq
and
cli
sbb
jmp
xor
in
sub
hlt
cmp
xor
cdq
inc
push
cli
cmp
jmp
push
aam
dec
push
test
sar
pop
jno
out
mov
sub
lods
faddp
or
arpl
ror
jl
nop
sar
sbb
mov
push
stos
repz
pop
add
sbb
stc
jge
xchg
inc
inc
sti
es
jmp
out
and
ins
inc
mov
test
movs
in
je
jmp
mov
pop
(bad)
xor
test
push
hlt
sbb
pop
sahf
jl
sbb
push
out
adc
cmp
mov
movs
pop
es
mul
xor
jmp
hlt
stos
fs
mov
sbb
xor
pop
test
jo
fcomp
mov
pop
aaa
cmp
and
jl
push
outs
sbb
ins
jb
stos
sbb
call
outs
imul
sbb
aam
sbb
and
push
iret
cld
int
ss
pop
jbe
xchg
bound
dec
sub
mov
pop
cdq
cmps
movs
or
in
stos
fst
jbe
sub
call
test
cwde
gs
pushf
xor
jmp
pusha
imul
xrelease
fcomp
std
pop
adc
stos
xchg
gs
and
outs
sar
ja
sbb
in
clc
sub
dec
or
pop
sbb
push
jmp
fnstsw
(bad)
aas
in
cmp
push
ss
or
dec
dec
inc
xchg
imul
pusha
aad
js
sbb
ins
popa
test
pop
es
aam
(bad)
addr16
mov
pop
dec
pop
and
or
fdivr
pusha
push
and
sbb
cmp
das
push
idiv
in
rcr
iret
sbb
pop
fdiv
arpl
cmp
xor
cmp
scas
outs
push
test
jno
cmp
imul
popa
fcmovne
push
sbb
mov
jl
jbe
or
mov
pusha
inc
mov
aaa
pushf
adc
lock
test
jno
push
sub
add
fsubr
jo
loopne
dec
sub
data16
fs
sbb
mov
sub
das
and
mov
xchg
push
xchg
in
test
pushf
and
push
or
xchg
push
daa
jl
outs
ins
mov
pusha
(bad)
scas
jb
jl
(bad)
and
xlat
or
cli
jne
mov
sbb
adc
addr16
add
out
mov
(bad)
adc
stos
daa
es
or
or
icebp
mov
lods
imul
nop
add
sub
fisttp
push
mov
test
fmul
cs
add
push
add
pop
dec
(bad)
push
mov
inc
fcmove
jo
sbb
sub
mov
fbld
(bad)
push
cmp
add
call
and
stc
(bad)
push
cmp
push
pop
daa
cs
jmp
leave
std
dec
outs
xor
sbb
cli
dec
cld
test
ret
stc
rcl
mov
movs
sub
in
xchg
cmp
cmp
xor
or
pop
inc
aas
xchg
sbb
xor
inc
test
lds
or
(bad)
bound
xor
mov
sub
jge
hlt
call
cs
div
sub
sub
enter
mov
daa
jb
sub
outs
sbb
lds
hlt
fsubr
or
repz
ins
jbe
cdq
jl
push
das
pop
jo
xor
enter
adc
mov
nop
cmp
pop
jo
pop
call
push
add
push
xchg
add
adc
dec
push
push
xor
add
aad
sbb
in
out
push
(bad)
jmp
push
xchg
aam
cmp
cmp
in
ror
ins
xor
cmp
and
stos
mov
clc
pop
mov
sub
xor
sbb
push
cmp
test
into
cmps
pushf
dec
push
hlt
sub
pop
xor
sbb
imul
adc
es
pop
hlt
inc
push
mov
dec
stos
inc
lea
inc
push
(bad)
cmp
addr16
(bad)
mov
std
std
je
sub
xor
ret
mov
movs
jnp
out
sbb
pop
pop
pushf
mov
jp
pushf
mov
jl
sbb
add
mov
sbb
xor
leave
in
(bad)
pushf
mov
cmp
std
pop
sbb
pusha
mov
mov
jle
push
das
int3
outs
xor
mov
mov
and
ins
add
cmp
or
sbb
lds
sti
push
into
push
imul
gs
stos
es
cmps
xlat
mov
rcr
ds
push
push
sti
popa
mov
(bad)
in
jo
and
test
lahf
lods
cmp
push
inc
leave
jnp
and
and
inc
ss
aad
stos
imul
cmps
mov
push
adc
rol
std
adc
xchg
dec
cmps
and
push
scas
sub
dec
aad
iret
mov
std
fucomp
ret
test
push
push
jns
rcr
mov
xchg
sbb
clc
pop
mov
fstp
xor
js
je
stc
mov
jge
ds
jecxz
jg
fldcw
out
jnp
or
xchg
push
ins
dec
pop
cmc
or
sti
lods
into
into
arpl
popf
sbb
sbb
scas
mov
ret
sbb
push
jns
cli
pop
jl
enter
shl
push
daa
cwde
inc
cmps
lods
dec
mov
adc
add
mov
cli
and
in
pop
outs
or
sub
push
push
adc
in
scas
sahf
sbb
inc
xchg
call
into
bound
or
sbb
(bad)
pop
pop
jmp
push
shl
iret
je
sub
sbb
sbb
lds
daa
fldl2e
push
ja
inc
add
pop
cld
sbb
pop
nop
jns
adc
mov
call
lods
outs
sub
sbb
mov
jle
pop
inc
dec
mov
mov
dec
movs
js
add
pop
bound
sbb
push
cmp
xchg
add
daa
fsubr
or
imul
pop
pop
sbb
push
ds
daa
jb
pop
lds
imul
ds
dec
clc
dec
pusha
and
lds
push
jmp
jmp
sbb
fst
pop
leave
inc
sbb
ret
cmp
sbb
or
cdq
push
jns
and
sbb
lea
(bad)
jl
cs
lods
push
in
sbb
add
popf
sbb
in
pop
es
pushf
rcr
add
lea
xor
dec
pop
push
imul
jecxz
(bad)
adc
jnp
sub
jecxz
add
or
enter
push
and
pop
pushf
pop
and
(bad)
cmp
in
mov
aaa
push
sbb
imul
xor
leave
add
addr16
das
int3
cmps
push
test
scas
(bad)
sub
(bad)
and
clc
push
push
daa
sti
add
or
scas
xor
pop
mov
inc
or
in
cmc
inc
adc
frstor
pop
mov
cmp
xchg
adc
sti
jbe
sar
or
cs
ret
inc
xchg
shl
nop
push
sar
mov
jl
test
retf
sbb
push
inc
add
movs
jbe
sub
ins
xor
mov
inc
arpl
fcom
imul
std
enter
aaa
mov
add
test
stos
ins
push
(bad)
or
pcmpgtw
inc
inc
mov
call
dec
jge
(bad)
jg
les
mov
pop
jmp
sub
push
mov
cmp
data16
js
(bad)
je
sti
ja
mov
jge
dec
sbb
adc
iret
mov
pusha
cmps
sbb
data16
adc
out
pop
sbb
rcl
xchg
js
mov
jg
fs
sbb
add
sbb
jmp
retf
mov
gs
and
hlt
adc
sti
imul
sub
repz
pop
or
mov
sub
mov
addr16
sti
add
lods
pusha
scas
sbb
and
or
stc
cmp
add
cli
sbb
or
xor
push
adc
cmp
sub
sbb
push
sbb
cmp
cmp
dec
pop
inc
call
xor
cmp
sub
cwde
push
pop
and
pusha
xor
dec
cmps
cmp
sbb
push
sbb
cmp
pushf
push
push
scas
std
and
pop
xchg
cli
cmp
or
dec
push
add
dec
jl
pop
js
mov
add
cs
xchg
add
jg
or
mov
dec
enter
add
sbb
pop
cmp
mov
icebp
in
push
es
(bad)
mov
dec
add
imul
pop
xor
retf
jnp
dec
push
movs
leave
lea
mov
stos
pusha
inc
mov
xor
add
test
inc
sbb
add
jmp
add
jns
ret
push
push
pop
pusha
stos
sub
mov
clc
push
and
or
adc
out
jmp
scas
adc
mov
sub
call
or
push
sub
mov
retf
mov
jl
(bad)
push
in
outs
xchg
les
test
pop
idiv
add
ins
pop
fwait
sbb
ss
xchg
aaa
mov
imul
sub
mov
sub
xor
xor
movs
mov
addr16
ins
dec
imul
pop
cmp
aaa
ror
adc
adc
dec
sub
sub
call
and
jmp
outs
pop
sahf
lds
fdivr
push
xchg
inc
ja
jle
dec
xchg
inc
ja
jg
dec
shl
ret
stos
les
aam
sti
xchg
aaa
mov
dec
stc
adc
in
ret
mov
and
sbb
stos
xchg
shr
push
dec
outs
xchg
rol
dec
pop
dec
mov
les
push
dec
scas
xchg
and
inc
cli
and
ret
aaa
mov
loope
retf
inc
(bad)
fnstcw
loop
not
jge
push
pop
jl
popf
stos
sbb
popf
lock
in
mov
push
jnp
mov
mov
inc
mov
xchg
es
and
stos
bound
mov
cmp
scas
mov
es
and
mov
popf
pop
dec
mov
adc
mov
sub
enter
add
ins
xchg
cld
mov
popf
xchg
mov
pop
daa
mov
cs
shl
stc
mov
sbb
jl
mov
ja
cmp
jno
xor
ins
push
int3
sahf
add
cmp
jp
mov
or
cld
ins
je
mov
and
sbb
xor
outs
jae
inc
test
add
mov
pop
dec
retf
inc
ins
push
shr
imul
and
or
imul
sbb
sub
les
xchg
mov
js
mov
jle
cwde
call
jp
js
adc
imul
mov
ret
test
push
sub
cmc
enter
dec
(bad)
and
sbb
pop
dec
jb
xchg
loop
adc
jl
lods
cwde
and
jp
sbb
clts
sahf
xor
icebp
in
(bad)
sbb
mov
xchg
push
je
cmp
mov
or
jb
sub
add
mov
and
cdq
sbb
and
xchg
test
mov
scas
fisttp
arpl
sbb
mov
jae
pop
pop
pushf
dec
mov
pusha
retf
push
pushf
cli
xor
cs
inc
popf
dec
dec
pop
in
push
mov
and
sub
fstp
stc
lods
clc
add
loope
cmp
and
std
and
aas
dec
inc
dec
pushf
mov
and
sbb
pusha
sub
stos
mov
jp
xchg
push
xor
rol
loopne
hlt
sbb
adc
push
push
stc
cmp
outs
clc
mov
test
ret
nop
xor
movs
xchg
mov
lahf
sbb
rol
push
push
mov
icebp
ret
vmovupd
cli
mov
push
lods
in
std
pop
inc
jmp
and
aam
sub
adc
ss
icebp
mov
(bad)
push
add
in
mov
sub
inc
fimul
push
hlt
mov
push
(bad)
into
jle
or
jg
jl
bound
mov
(bad)
and
mov
bound
mov
cmps
push
mov
imul
mov
mov
mov
inc
push
xchg
pop
(bad)
stc
mov
shl
fimul
mov
in
mov
pop
sbb
mov
scas
in
push
int
push
fcom
out
and
sub
mov
push
nop
and
lods
xchg
test
push
push
xor
ins
cdq
fwait
sbb
nop
and
scas
and
mov
xchg
xor
xor
sbb
or
inc
mov
loope
mov
push
dec
call
jl
ror
mov
xor
pop
mov
xchg
dec
js
sbb
iret
mov
test
pushfw
push
movs
aaa
jg
mov
cmp
xchg
jl
shl
inc
cmp
sbb
xor
pushf
dec
rol
aam
push
test
jl
cmp
push
or
xor
mov
mov
into
mov
or
in
lds
cmps
mov
scas
scas
rcl
imul
and
push
clc
call
inc
ror
or
jb
loope
sti
xor
mov
cmp
std
adc
add
daa
stos
and
pop
dec
mov
sbb
add
js
mov
inc
cmp
push
pushf
int3
mov
fs
jbe
mov
inc
and
ret
and
adc
retf
push
xor
add
sbb
pop
pop
mov
xor
cmps
sub
sbb
bound
in
std
fst
fld
bound
movs
mov
stos
call
outs
mov
fucom
sub
pusha
and
(bad)
xor
xchg
sbb
or
dec
or
xchg
(bad)
push
push
inc
fnstsw
push
and
cmps
mov
xchg
je
sub
sbb
stc
(bad)
add
sti
mov
in
int
std
es
fisttp
dec
pop
lods
les
arpl
mov
js
push
std
xor
ret
jo
test
fisttp
cli
and
rol
fild
arpl
xor
fst
mov
and
cmps
les
enter
mov
imul
xor
push
pop
hlt
(bad)
pushf
jae
add
les
push
push
push
das
je
(bad)
adc
rol
push
fld
pop
mov
push
(bad)
push
xchg
gs
xor
push
mul
and
stos
sahf
dec
lods
cmp
pop
push
aad
fst
(bad)
enter
cmc
jns
(bad)
xchg
or
ror
mov
std
ds
sub
jo
ret
leave
push
cmps
pop
clc
and
aad
mov
xchg
sub
mov
(bad)
(bad)
mov
gs
pop
shr
popa
ret
mov
xchg
sub
pop
rol
xchg
fwait
push
mov
push
mov
cmp
pop
rol
pop
es
not
sub
mov
sbb
inc
sbb
add
ds
push
sbb
xchg
mov
pusha
push
enter
out
mov
xchg
pop
pop
xor
repz
rcr
loopne
es
add
jmp
dec
pop
sub
fs
jle
or
cmp
xor
es
in
add
in
retf
(bad)
dec
xor
mov
dec
jge
bound
aaa
xor
stos
retf
aad
cmp
inc
mov
push
xchg
jae
and
mov
rcr
ror
inc
jae
sbb
mov
cmp
nop
or
cmp
cmp
mov
mov
fs
stc
jg
(bad)
xor
out
outs
add
leave
adc
ret
xchg
and
adc
and
cmp
adc
jae
imul
daa
das
scas
dec
or
aaa
mov
add
stos
stos
es
shl
dec
in
mov
jg
pop
in
sti
add
rol
js
push
sub
out
sbb
add
inc
jo
xlat
inc
ffreep
xchg
scas
cmp
sbb
stc
adc
out
cdq
sub
in
mov
dec
clc
mov
fsubr
test
es
jmp
jecxz
out
stos
inc
(bad)
(bad)
xchg
sti
xlat
pop
mov
add
sti
xchg
addr16
call
push
and
mov
(bad)
popf
call
(bad)
mov
mov
data16
lods
aam
adc
ficomp
test
pop
sub
pop
inc
sbb
mov
(bad)
test
daa
std
push
jno
and
mov
xchg
mov
daa
sub
stos
imul
popa
(bad)
mov
fistp
repz
xchg
stos
out
xlat
inc
mov
rcl
or
dec
push
mov
and
jmp
push
jbe
shl
inc
pop
xchg
cmps
pop
nop
sar
mov
stos
add
addr16
jl
mov
jge
stos
call
or
stos
sahf
pop
jmp
and
aad
rcr
fldenv
cmp
inc
js
ror
jp
fbld
int
cdq
jbe
sub
into
pop
daa
into
jmp
jl
xor
addr16
int
jl
cmps
ins
or
mov
jle
lods
aad
jg
inc
dec
sbb
push
xchg
pusha
adc
fs
ins
sbb
cmp
inc
int3
mov
mov
vpunpckhbw
xor
(bad)
out
jb
pop
fs
jl
sbb
ins
mov
sub
fnstenv
push
pop
(bad)
sbb
or
pusha
add
es
out
in
out
mov
jmp
push
leave
cmp
sbb
dec
in
xchg
out
sar
idiv
in
sbb
mov
imul
sti
ins
std
xchg
fs
out
pop
sbb
repz
sub
xor
movs
jns
sub
and
jg
jle
jecxz
(bad)
sub
out
mov
stos
push
add
add
repz
push
sub
xchg
mov
fisttp
fwait
mov
cs
outs
jmp
sub
jg
out
push
fld1
xchg
inc
push
out
out
into
mov
pop
jge
test
mov
mov
cmc
jge
je
fdivr
jge
and
mov
mov
unpcklps
mov
push
dec
js
mov
push
xor
outs
push
jge
(bad)
jl
xchg
scas
cli
cmp
data16
in
sti
xor
mov
mov
in
jecxz
xor
hlt
jl
sbb
out
xor
(bad)
pop
cmp
add
xor
mov
shr
ins
mov
pop
(bad)
stc
sbb
pop
cmp
xor
and
mov
imul
cs
fisttp
pushf
cmp
mov
mov
and
test
jnp
xor
xlat
inc
test
cmp
mov
data16
cld
test
pusha
mov
mov
out
inc
add
push
jg
push
fs
pop
lea
and
mov
repnz
push
icebp
push
pop
jo
push
mov
std
fcomp
sti
push
std
push
jge
das
xchg
sbb
xor
push
aad
aaa
push
fdivr
add
sub
fsubr
lea
call
xor
ins
int3
mov
sub
pushf
jecxz
xchg
jmp
in
dec
mov
std
and
and
addr16
fst
seto
jae
clc
inc
retf
push
fsubr
add
das
and
add
or
xor
test
mov
jmp
push
cli
cld
sbb
sbb
push
jle
jl
std
jae
out
push
inc
inc
popf
call
xor
mov
div
loope
pop
rol
div
push
out
in
adc
fisubr
sahf
or
pop
rcr
push
loope
mov
mov
in
out
(bad)
imul
add
dec
cmp
fisttp
loopne
pop
inc
add
jl
or
pop
inc
neg
fwait
test
mov
xor
arpl
jl
imul
out
lahf
loope
jbe
cmp
repz
pop
and
pushf
into
(bad)
push
mov
cmc
push
push
(bad)
xor
movs
out
xchg
cwde
fs
dec
ins
stc
cmp
out
push
pop
jmp
adc
cwde
dec
jmp
repz
pop
jecxz
adc
in
stc
xor
stc
and
rcr
add
mov
or
cmps
cli
cdq
lods
imul
(bad)
sub
add
and
pop
pop
jmp
cmps
add
mov
mov
or
jbe
repz
mov
pop
jle
ret
je
adc
enter
ins
in
sub
dec
cmp
nop
bound
xchg
in
mov
xor
test
cmp
data16
sbb
xchg
add
test
sbb
or
sub
mov
cmp
call
std
add
enter
adc
mov
shl
lahf
inc
mov
xchg
(bad)
and
leave
pop
add
sbb
cs
jnp
and
scas
mov
push
adc
jl
cmc
add
sti
xchg
pop
push
adc
shl
add
and
jg
mov
inc
jb
pop
sbb
fcomp
cmp
cmp
sub
ror
lds
mov
xchg
mov
jns
xor
js
in
aas
jo
cmp
mov
ds
retf
jl
cmp
daa
mov
pop
and
dec
xlat
nop
mov
jecxz
or
iret
call
ins
mov
dec
mov
cli
adc
(bad)
cld
stos
xor
mov
sbb
sar
mov
cmp
fiadd
sbb
clc
aas
rcl
call
fadd
(bad)
out
push
mov
sub
imul
or
data16
iret
int
adc
jge
cmp
add
je
mov
push
xor
mov
sbb
iret
mov
jne
mov
jnp
movs
dec
pop
gs
pop
add
sahf
aam
shl
ins
cmp
lea
dec
shl
stos
mov
sbb
cdq
addr16
xchg
retf
mov
push
xor
push
mov
shl
sbb
call
ficom
mov
sub
jmp
pop
jge
in
inc
call
aad
mov
mov
std
sbb
sbb
fucomp
and
call
jno
mov
dec
add
outs
sbb
clc
xor
xlat
dec
mul
test
aaa
cmps
cmc
sub
and
mov
es
mov
xchg
cmp
mov
daa
stc
sbb
cmp
js
push
push
xlat
cmp
pop
and
iret
hlt
jecxz
jne
inc
sbb
sbb
shl
xor
shl
outs
(bad)
pop
es
pop
pop
mov
js
xchg
arpl
aad
dec
js
in
inc
pop
jmp
mov
cmp
xchg
cmps
inc
jg
pusha
push
movs
ss
(bad)
jl
loop
cli
and
sbb
dec
push
or
sar
repnz
out
add
and
repz
inc
mov
call
xchg
cmp
aad
(bad)
push
sub
and
and
retf
fs
sahf
and
sbb
xchg
clc
retf
daa
xor
pop
mov
jo
mov
fidiv
arpl
sbb
xchg
fistp
xor
push
adc
in
call
sbb
jg
int3
pop
push
sub
(bad)
outs
mov
enter
mov
xchg
mov
sbb
push
sub
inc
sub
aad
ret
imul
mov
cmp
and
xor
mov
mov
mov
fwait
add
jae
push
or
imul
jp
adc
xlat
adc
mov
jae
push
sub
xchg
sbb
add
jbe
mov
adc
movs
jbe
push
call
rcl
fcomp
fdiv
nop
pop
sbb
mov
enter
xor
mov
(bad)
fadd
jmp
jns
rol
fdivr
mov
inc
adc
lahf
movs
adc
bound
bound
push
adc
and
(bad)
mov
add
push
jmp
lds
das
sbb
rcr
fisubr
sbb
sbb
cld
cs
in
pmulhuw
stos
sbb
out
pop
pop
mov
mov
popf
retf
in
dec
pop
add
jp
and
pop
fsubr
xchg
add
je
xchg
in
in
in
add
in
mov
and
ins
add
add
ins
stc
test
cmp
pop
loopne
outs
sbb
push
je
sub
ss
in
loop
add
mov
jmp
in
imul
add
out
out
ins
les
call
nop
sar
jle
sbb
cmp
mov
neg
mul
pop
ins
sbb
push
push
push
xor
in
ins
push
in
mov
dec
in
fwait
in
sub
stos
push
outs
xchg
je
jne
fisttp
jmp
or
push
jae
imul
mov
lods
jnp
stos
cwde
cmps
data16
adc
sub
repz
sbb
mov
imul
mov
hlt
pop
mov
lds
mov
lock
mov
push
arpl
ret
je
cli
out
retf
int3
mov
jecxz
jmp
mov
in
xor
pop
push
or
jl
js
pushf
sti
sub
cdq
cmc
sub
stos
cdq
or
mov
ja
fs
sbb
test
push
xchg
dec
adc
idiv
inc
pop
shl
and
ret
inc
push
xor
or
fs
fsub
sbb
push
push
(bad)
pushf
repz
jmp
mov
(bad)
(bad)
and
push
mov
sti
xchg
fdivr
in
sbb
xchg
or
adc
jle
nop
xor
mov
icebp
pop
xchg
pop
sbb
sbb
mov
push
sbb
jg
in
inc
xchg
ret
sbb
out
ds
daa
stos
cdq
jl
pusha
clc
enter
test
jmp
int3
test
pushf
retf
inc
ror
hlt
sar
jecxz
enter
dec
hlt
mov
sub
fs
dec
loopne
add
shl
jns
pop
fs
aam
sub
pop
test
retf
ins
stc
jae
pop
cmc
(bad)
outs
sar
jmp
push
xchg
loope
iret
jp
mov
sbb
imul
ja
scas
pushf
mul
ds
ss
loop
xor
sub
repnz
call
into
(bad)
push
and
cmc
jp
data16
test
jl
dec
std
sbb
pop
clc
je
ds
in
jle
jp
outs
retf
mov
mov
or
push
xchg
loope
sbb
mov
pop
sub
or
sbb
push
idiv
mov
and
or
sbb
mov
adc
xchg
or
pop
jl
add
out
pop
mov
inc
and
cmp
jmp
push
fst
and
xchg
fist
ja
mov
cmp
out
fs
sbb
xchg
push
shl
dec
sbb
std
cmps
cmp
scas
sub
pop
rol
setnp
sbb
loopne
(bad)
cmc
in
or
pushf
jmp
add
cmps
xchg
cmpps
cmps
pop
dec
movs
imul
inc
jge
dec
sbb
repz
xor
pushf
sbb
sub
or
test
into
adc
leave
iret
adc
ins
inc
sti
push
dec
in
enter
mov
xchg
pop
dec
test
push
and
shl
adc
sub
pop
sbb
dec
data16
mov
and
fwait
pusha
ror
into
or
dec
add
sub
iret
ret
adc
into
jecxz
dec
scas
pop
sti
xor
repz
mov
sbb
and
mov
test
jle
push
stos
je
scas
mov
ins
cli
gs
dec
in
push
adc
mov
repnz
call
xor
sti
lods
lock
sub
pop
test
cmp
xchg
mov
jg
push
mov
ror
jmp
and
cmp
shl
cld
xor
dec
addr16
cmps
pop
xor
rcr
jl
and
sub
jl
in
xchg
sti
pop
in
popf
fs
sbb
loopne
mov
pop
jmp
sti
ds
out
sahf
sbb
std
push
in
mov
out
jmp
sti
pop
in
lahf
fs
sbb
(bad)
in
mov
jecxz
out
outs
cmp
or
pushf
xor
jecxz
inc
push
jecxz
loop
inc
retf
ins
fst
std
push
xor
pop
dec
and
cli
sbb
cmp
add
into
ds
aam
adc
dec
and
repz
int
and
retf
cmp
xor
sti
into
push
dec
out
jmp
inc
retf
cs
mov
bound
in
xchg
jne
ins
mov
popf
xor
sahf
cmp
cmp
push
add
retf
inc
in
shl
and
mov
sti
xor
mov
leave
pop
xor
data16
jmp
or
or
or
test
adc
mov
bsr
or
shr
leave
fstp
sub
jmp
(bad)
jge
leave
and
stos
inc
cmps
cld
out
out
xor
out
clc
push
repnz
and
sbb
mov
std
fwait
retf
not
adc
add
mov
push
adc
cmovns
pop
aam
scas
xchg
aad
mov
push
pop
push
xchg
test
xchg
in
sahf
mov
inc
mov
xor
xor
sub
push
sti
sbb
lods
repz
jmp
rcr
hlt
mov
sbb
mov
scas
movs
sbb
js
popf
adc
jge
loope
fidivr
mov
lods
aam
std
scas
inc
outs
add
or
adc
jmp
fisttp
lds
push
rol
popa
hlt
rcr
mov
sahf
mov
ret
jo
dec
cwde
jle
nop
ins
dec
mov
sbb
jge
popf
into
call
ret
int
push
(bad)
mov
ret
out
push
sbb
repz
add
sbb
mov
mov
cli
sub
clc
dec
sahf
jb
fcmovnb
add
sbb
xor
sbb
lods
in
xchg
xchg
ror
neg
fnstsw
xchg
jmp
bound
add
inc
inc
xor
out
mov
cs
repz
pop
inc
pop
sbb
pop
mov
mov
outs
sar
dec
push
sar
push
daa
jg
call
mov
leave
mov
bound
in
aam
jb
aas
popa
adc
pushf
cmp
stos
dec
in
out
mov
nop
and
aas
inc
cld
jp
jmp
lods
cmps
mov
ins
ins
cld
js
sub
and
inc
push
sub
dec
and
scas
sub
inc
mov
sbb
loope
xor
jmp
push
adc
pop
pop
lock
(bad)
xor
test
stos
push
std
leave
add
loopne
fcomp
xchg
sbb
hlt
add
in
inc
mov
or
ret
movs
sub
push
ins
mov
push
cmp
mov
sti
push
mov
mov
and
shr
shr
add
sbb
jmp
push
arpl
sar
jmp
popf
dec
push
frstor
inc
movs
ins
cmc
push
lods
dec
test
xchg
push
jg
push
pop
sbb
retf
test
xchg
push
mov
sub
daa
add
push
outs
popf
test
mov
ds
inc
ret
lock
mov
inc
pop
jecxz
or
add
sbb
dec
imul
mov
pop
or
gs
xor
outs
sbb
xor
and
sub
and
sbb
pop
mov
retf
xlat
out
cmp
jp
pop
lods
dec
shl
sub
sbb
adc
imul
call
pusha
sub
cmc
es
xor
xor
aad
imul
jecxz
sbb
popa
xchg
add
or
imul
cmp
xchg
adc
or
cmc
add
ret
in
and
push
fisubr
jmp
fdivrp
sti
in
or
pop
mov
jecxz
pop
data16
inc
xchg
cld
sub
xor
shl
shl
fmulp
in
pop
adc
sbb
(bad)
mov
mov
adc
fidiv
cdq
cmp
cmp
xchg
add
sbb
clc
leave
pop
pop
lea
cmp
retf
fnstcw
cmp
and
inc
xchg
shl
and
add
(bad)
sub
fsub
pop
movs
cwde
add
into
xchg
push
pusha
int
fstp
mov
cdq
sbb
hlt
push
xor
test
xchg
shl
popf
push
fs
push
xchg
std
pop
repz
mov
push
push
push
lods
xchg
xchg
pusha
and
popf
mov
adc
ins
sbb
(bad)
or
in
imul
xor
arpl
int
or
rol
lds
sbb
test
sbb
cmps
int3
push
adc
out
stos
fdivr
sar
pop
cld
xchg
aad
and
es
ins
jl
push
mov
dec
mov
mov
add
adc
cmp
es
inc
pop
fild
retf
pop
js
xor
loope
ret
add
not
stos
mov
sbb
adc
mov
add
and
cmp
imul
mov
xchg
stc
or
xor
loop
fsubr
retf
or
jge
out
enter
mov
sbb
nop
cwde
jmp
mov
push
(bad)
dec
mov
push
jbe
push
out
dec
mov
jle
lods
xchg
jecxz
ins
xlat
or
add
mov
fcomp
fcomp
sar
jb
outs
fdivr
inc
(bad)
jmp
mov
push
cmc
daa
inc
and
outs
mov
mov
(bad)
popa
pop
jge
dec
lds
(bad)
popf
es
ins
push
mov
and
std
jbe
shl
xor
or
inc
repz
pop
sti
in
add
jg
jb
adc
fsubrp
push
bound
arpl
xchg
out
ds
pusha
test
jle
aas
pusha
pop
aam
fcom
and
ins
mov
push
data16
pop
mov
mov
nop
inc
cs
ror
adc
cmp
jne
xchg
xchg
inc
cmp
pop
xchg
fs
orps
jl
mov
pop
test
ja
xchg
push
add
fsub
xor
aad
mov
arpl
or
mov
in
xchg
lods
cmps
arpl
pop
mov
pushf
cli
je
push
gs
jge
and
adc
pop
xor
loope
ins
adc
icebp
jmp
adc
cmp
rol
cmp
jl
shl
sub
pop
mov
nop
in
(bad)
cs
sub
sbb
inc
adc
xor
stos
sbb
mov
add
dec
mov
add
mov
sub
pop
jb
add
es
and
push
dec
enter
shl
pop
jmp
fs
aas
pop
pop
stos
div
mov
jae
mov
pushf
push
pusha
pop
sbb
arpl
fs
daa
imul
and
or
pop
repnz
push
outs
test
pushf
test
push
inc
xchg
jb
mov
xor
xor
pop
movs
pushf
mov
or
xor
std
enter
add
pcmpeqw
(bad)
(bad)
ror
fild
xchg
inc
movs
ins
pop
push
call
fmul
push
stos
sti
push
sbb
mov
imul
lods
call
adc
shl
imul
and
push
fmul
mov
das
jnp
js
or
ins
mov
xchg
(bad)
es
jo
jmp
sti
fnstenv
call
ds
mov
dec
sbb
icebp
jo
mov
mov
sti
neg
jge
mov
pop
int3
in
pushf
in
xchg
and
sahf
mov
add
nop
repnz
movs
pop
jp
and
mov
stos
cmp
es
mov
(bad)
cmp
rcr
leave
fdiv
jnp
in
mov
repz
mov
cmps
loop
sbb
jbe
in
mov
xlat
push
mov
repnz
pop
stos
les
inc
dec
pop
(bad)
mov
dec
pop
ret
fs
jle
fistp
cmp
rol
xchg
mov
xor
sbb
ror
outs
(bad)
(bad)
in
fcom
and
pushf
push
fist
outs
push
stc
mov
in
push
in
pop
in
pusha
xlat
addr16
ficomp
inc
mov
test
(bad)
ret
xchg
dec
pop
loope
jmp
rol
mov
cwde
inc
push
pop
pop
repz
cs
pop
jle
push
xchg
or
add
and
push
jmp
pop
mov
and
retf
ss
xchg
push
xchg
and
pusha
out
jl
mov
daa
data16
sub
lods
and
int3
xlat
mov
dec
adc
inc
or
fdivr
xchg
mov
out
and
pushf
int3
adc
inc
sub
mov
cmp
call
push
imul
rcr
lods
retf
jecxz
in
push
pop
nop
dec
push
test
jmp
cld
pop
mov
pop
mov
push
ret
sbb
jns
ins
mov
push
inc
mov
xor
xor
inc
inc
jnp
add
movs
pop
stos
jg
mov
arpl
(bad)
outs
push
pop
sbb
cmps
retf
and
punpckhwd
pop
push
(bad)
mov
rol
add
xchg
daa
sbb
jecxz
jae
imul
leave
icebp
dec
mov
add
in
inc
pushf
retf
cmp
inc
std
mov
das
inc
add
cmp
pusha
push
shr
mov
not
or
dec
mov
pop
enter
sub
in
inc
test
icebp
mov
push
pushf
pop
movs
or
ds
mov
(bad)
loope
jo
dec
and
daa
test
std
pop
les
pop
test
imul
movs
jmp
out
nop
jmp
and
test
(bad)
jno
sbb
mov
(bad)
jbe
aaa
dec
popf
in
mov
cld
mov
cmp
jmp
mov
bound
(bad)
pop
sbb
jb
movs
scas
mov
int3
popa
jnp
jg
hlt
or
mov
test
push
loope
popa
mov
dec
scas
xlat
jmp
popf
movs
dec
ret
sbb
(bad)
out
fwait
sbb
fldenv
jmp
and
sbb
pusha
ds
mov
(bad)
sahf
dec
pop
mov
mov
retf
or
stos
data16
add
fs
mov
mov
mov
pop
stos
push
mov
imul
mov
xor
imul
pop
push
sbb
std
xor
pop
xor
push
in
fs
add
cmps
jmp
scas
mov
mov
shl
repz
push
push
dec
jecxz
(bad)
cli
adc
or
pop
add
sbb
push
arpl
pop
inc
and
fidiv
ror
test
jae
sar
(bad)
sub
or
inc
loope
sbb
scas
pop
(bad)
test
shl
jg
push
es
sbb
in
shr
ret
icebp
xchg
add
sbb
and
or
sbb
mov
dec
nop
pop
leave
ins
test
iret
in
data16
lods
sbb
pop
mov
pslld
ficomp
sbb
inc
xor
repz
sbb
cdq
or
jne
mov
mov
imul
jp
push
cmp
cmp
mov
js
in
loop
retf
fdivr
and
call
ret
sbb
sahf
sub
fst
jmp
sub
jg
(bad)
sar
add
cmp
hlt
cs
sbb
adc
sub
sub
rol
push
pop
lahf
or
scas
push
cli
repz
lods
test
(bad)
mov
sub
nop
inc
mov
int
ret
(bad)
sahf
gs
cmp
add
div
cmp
ret
xor
jl
ins
mov
jg
push
das
xchg
cmp
and
shr
mov
cmp
push
mov
outs
bound
fcomp
mov
(bad)
movs
jbe
stos
adc
pop
xor
lds
pop
into
jmp
mov
call
sub
pop
fisub
jo
mov
lahf
fwait
sbb
test
scas
dec
adc
jbe
or
iret
adc
pushf
xor
fistp
int3
mov
jbe
jne
rol
adc
cmp
mov
ins
shr
and
sbb
in
cdq
sbb
jecxz
fcomp
sbb
in
lahf
xor
cdq
jmp
cs
fwait
in
mov
mov
push
and
or
imul
stc
push
pop
fwait
cs
jno
(bad)
push
bound
push
pop
fs
in
jbe
sbb
fnstsw
xchg
pop
(bad)
mov
mov
and
fisttp
inc
lahf
jecxz
inc
adc
icebp
xchg
in
push
xor
add
inc
je
jns
ins
(bad)
ficom
aas
ins
in
mov
jmp
loope
mov
mov
test
push
out
jp
cmp
adc
repz
mov
shl
(bad)
imul
gs
push
stc
call
sbb
mov
cld
pop
xor
jns
les
ds
std
ins
dec
adc
mov
push
pop
js
push
(bad)
and
push
or
dec
add
sbb
inc
aas
cdq
cs
mov
(bad)
fsubr
(bad)
rcr
retf
pop
sub
add
xor
mov
icebp
jo
stos
stos
xor
jl
push
and
fnstsw
jmp
gs
xor
call
mov
sub
in
ret
xor
and
aas
mov
and
dec
imul
je
dec
cmp
xor
pop
stc
mov
lock
nop
mov
cmp
(bad)
jl
jle
stos
mov
xlat
sub
shl
jbe
sahf
ret
mov
dec
jmp
add
(bad)
(bad)
daa
push
sub
hlt
pop
sub
stc
fcom
ja
pushf
in
and
sbb
push
jns
mov
sub
je
dec
adc
jno
add
frstor
sbb
mov
inc
mov
sbb
std
fwait
adc
ds
adc
(bad)
xor
les
mov
push
or
lds
sbb
sbb
jge
hlt
and
test
pop
in
call
dec
dec
jl
hlt
imul
fsubr
sbb
inc
in
fdivr
push
push
sahf
stos
test
loop
and
ficom
push
pop
jae
push
sub
jbe
std
sbb
cld
and
jbe
(bad)
jb
xlat
sbb
repnz
idiv
int
pop
lahf
js
add
jge
imul
nop
dec
clc
sub
add
sahf
add
inc
inc
xchg
ret
inc
mov
in
mov
cmc
or
jecxz
cs
mov
dec
pop
pop
dec
or
mov
pusha
cmp
test
sahf
cdq
nop
and
ja
ins
pop
out
fdivr
out
add
retf
pop
ins
fwait
gs
add
cld
ds
sub
mul
out
add
arpl
in
inc
cs
out
bound
clc
(bad)
mov
(bad)
dec
idiv
or
je
sub
jl
pop
sbb
cmp
fs
pushf
pop
popf
dec
retf
loopne
ret
inc
(bad)
jb
divps
push
clc
or
movs
mov
movs
pushf
std
push
mov
or
add
in
jge
call
sub
or
pop
pop
jmp
mov
sbb
ror
jne
jge
dec
push
mov
cwde
out
icebp
mov
push
in
cmps
mov
sbb
stos
lods
mov
xchg
fcmove
retf
or
cmps
cmc
push
mov
inc
movs
adc
jbe
aam
sbb
pop
pop
sbb
nop
dec
outs
pop
neg
outs
in
pop
fs
jbe
cmps
cmp
pop
sbb
and
lods
sbb
pop
cwde
out
sbb
call
xchg
mov
mov
add
sbb
movs
imul
xchg
fmul
or
mov
xchg
ret
pop
(bad)
xchg
imul
or
cmp
and
xchg
in
sub
jecxz
cli
xor
and
mov
push
dec
jne
ins
sti
add
cld
cmp
push
sub
mov
ret
clc
repz
movs
ror
xchg
ds
pop
ins
stos
dec
je
cld
es
push
xchg
dec
sbb
pop
xor
xor
sbb
jp
push
in
in
jmp
mov
adc
movs
push
or
mov
retf
test
imul
cmp
test
shr
daa
std
les
cmp
dec
xor
mov
cs
jmp
mov
scas
pushf
call
push
sahf
add
push
mov
mov
(bad)
test
mov
pop
cmp
pop
icebp
mov
mov
mov
mov
lahf
enter
add
std
and
cdq
xor
outs
cs
std
mov
adc
and
sub
retf
cdq
cmp
aad
mov
je
fcmovu
outs
pop
or
aaa
mov
jne
inc
scas
push
out
and
outs
inc
or
shl
inc
or
xchg
ficomp
loop
inc
sti
xchg
rcl
sbb
int3
cmp
je
jmp
div
and
jmp
xchg
(bad)
cmp
pushf
pusha
push
dec
and
sub
loop
in
popa
pushf
inc
dec
repz
inc
sar
arpl
aas
sub
pop
sbb
pushf
or
fmul
fwait
inc
movs
out
arpl
or
sbb
enter
inc
mov
aaa
dec
fcmovu
mov
imul
les
mov
pop
pop
xor
jg
fyl2xp1
dec
mov
xlat
dec
and
fld
pop
(bad)
popf
adc
sub
dec
dec
xchg
adc
xlat
stos
loope
(bad)
imul
adc
out
xchg
pop
out
not
adc
scas
and
pop
xor
adc
(bad)
loop
xor
arpl
jg
stos
repz
mov
aam
sub
push
jle
cmp
sub
mov
mov
mov
sar
mov
mov
jg
int3
sar
fmul
(bad)
or
or
dec
add
stos
pushf
or
push
jle
inc
and
mov
out
or
mov
sbb
mov
sbb
fsubr
adc
in
cdq
lahf
div
sti
gs
test
das
jecxz
out
jge
cs
cs
movs
or
ds
pop
or
arpl
pop
and
shl
out
mov
and
pop
jl
sub
in
jg
out
mov
shr
xlat
cli
cmp
add
cmp
out
inc
push
cld
outs
jg
mov
jecxz
cmp
and
and
ret
cld
int3
sbb
ret
cli
inc
lahf
inc
inc
aas
and
add
jo
out
sbb
fstp
in
pop
dec
jne
jle
xchg
mov
mov
in
mov
lahf
and
fstp
je
int
mov
jns
cld
js
adc
and
mov
push
(bad)
nop
mov
cmp
inc
addps
lock
mov
sti
mov
nop
xor
xor
push
sub
push
pop
push
std
stc
fisubr
int3
std
fldl2t
sbb
mov
sub
add
lods
push
xchg
xlat
xor
push
cmps
loop
(bad)
in
icebp
shl
jmp
xor
sti
jno
test
pop
xor
bound
ds
push
pop
sbb
cmp
xor
jge
cmc
retf
add
es
mov
(bad)
cmp
xor
jmp
sar
mov
div
sbb
adc
dec
or
arpl
jmp
sti
mov
jae
adc
mov
leave
mov
out
clc
push
push
sbb
dec
xchg
xor
adc
sub
lock
mov
sbb
cmp
xor
mov
popf
lahf
dec
sahf
pop
scas
push
pop
and
push
mov
inc
mov
xchg
pop
push
inc
fcomp
lods
retf
inc
ss
mov
mov
(bad)
mov
sub
dec
popf
pop
xor
rcr
sub
bound
cmc
rcl
mov
cmps
inc
fs
cmps
dec
(bad)
in
jo
cmp
dec
jmp
inc
xor
ja
je
add
sahf
sbb
pushf
inc
mov
mov
jo
add
fpatan
retf
ss
pop
(bad)
out
adc
fstp
sub
push
mov
lods
and
gs
int3
cld
or
jecxz
push
int3
cli
ds
ffree
fmul
dec
dec
fbld
repz
sti
test
repnz
or
sub
sti
fs
retf
(bad)
fsubr
sbb
jecxz
imul
xor
mov
cmp
js
in
imul
jle
adc
das
mov
clc
into
in
mov
leave
aas
push
fsub
outs
(bad)
dec
popf
or
sar
ficomp
(bad)
mov
dec
inc
cmps
jg
pop
pop
sahf
(bad)
int
ss
(bad)
cmp
std
or
ret
imul
jl
pop
test
fcom
mov
pop
sub
cmc
in
xor
pop
repz
xchg
fstp
jg
inc
pop
inc
nop
jb
daa
push
stos
je
ret
adc
std
(bad)
jmp
mov
push
sbb
popf
and
pop
into
add
jmp
in
pop
fadd
mov
stos
dec
lahf
mov
daa
imul
adc
push
and
jle
test
shr
mov
stc
dec
cwde
out
and
jmp
mov
pop
into
push
sub
xor
or
gs
cmps
inc
frstor
push
fld
sub
pop
sub
push
sti
xor
mov
fstp
adc
dec
hlt
jl
cmp
repz
mov
ds
jmp
sbb
repz
jl
jecxz
sub
iret
jae
call
aaa
xchg
add
in
test
hlt
xchg
idiv
mov
and
mov
pop
inc
imul
imul
xor
mov
shl
pop
jb
pop
test
leave
in
mov
repz
jno
jle
dec
jmp
aam
sub
test
or
mov
sti
pop
dec
cmps
add
jl
sti
dec
call
je
enter
les
lods
jnp
adc
add
jecxz
loopne
rep
fmul
in
shl
cmp
adc
jecxz
adc
jg
mov
pushf
xchg
jecxz
sbb
stc
add
sbb
in
jbe
fst
in
sbb
or
push
pushf
fwait
xor
pop
bound
or
mov
movaps
pop
sbb
xchg
mov
les
pop
or
mov
scas
mov
pop
out
or
jge
jl
inc
in
cmp
xchg
(bad)
imul
push
adc
lods
xchg
xor
dec
jg
and
pop
or
mov
sbb
or
shl
jecxz
push
cmp
ret
lods
shr
lods
xchg
mov
push
push
ss
movs
xchg
mov
mov
sub
ficomp
aas
sar
sbb
cli
rcr
in
pusha
retf
sbb
(bad)
mov
sub
sub
(bad)
cld
mov
lahf
daa
cwde
mov
cmps
loope
mov
outs
cmps
in
cmp
fidivr
jns
add
jg
adc
ret
pop
add
fist
shr
push
das
daa
cmps
in
in
inc
in
popf
jmp
adc
xchg
clc
xchg
leave
ins
out
mov
jle
cmps
cmps
test
in
fsubr
push
sahf
into
test
xor
pop
jne
inc
mov
inc
pop
lahf
and
cld
pop
(bad)
call
fidiv
cmp
sbb
push
dec
(bad)
cmp
fild
ins
jge
adc
es
xchg
sub
mov
mov
jbe
xor
inc
sbb
sub
push
fs
ret
cwde
push
movs
pop
shr
fsubr
mov
sbb
xor
cs
mov
mov
sbb
dec
in
shl
ret
iret
repnz
add
adc
pushf
into
push
mov
test
fwait
xor
and
iret
ins
push
pop
cld
cs
adc
cmp
ins
xor
mov
outs
fcomp
aaa
mov
mov
aas
jle
clc
xchg
sub
jno
pop
sub
movs
out
sub
adc
ror
dec
adc
xor
pop
inc
div
sbb
sbb
je
test
mov
icebp
and
inc
fsub
pusha
pop
test
xchg
mul
movs
retf
cmp
xor
(bad)
pop
mov
je
sub
push
jo
mov
fsubr
(bad)
in
pop
dec
xchg
jbe
cwde
xchg
push
mov
dec
dec
nop
(bad)
adc
cs
and
stc
pop
pop
sbb
push
jg
std
xchg
add
lods
fcomp
mov
pusha
(bad)
imul
addr16
jmp
lea
sbb
mov
mov
sbb
ret
pop
popa
lea
int
push
mov
gs
add
ins
imul
aas
xor
jns
sar
jmp
cmc
test
xor
jmp
add
std
cs
add
cmp
sub
cmc
mov
loopne
in
and
lds
push
cmp
xor
xchg
cmps
jle
cmp
sahf
jmp
test
dec
pop
sti
repz
cs
popf
mov
ins
fidiv
retf
inc
sbb
pop
lea
push
les
les
retf
xadd
scas
mov
xor
es
jne
push
(bad)
xor
and
mov
push
dec
or
inc
leave
popf
into
imul
add
xor
ror
icebp
daa
pop
adc
xor
cs
mov
mov
pusha
fsubrp
mov
pop
ins
aas
and
or
jge
mov
sahf
adc
and
jb
mov
and
and
in
cwde
mov
adc
rep
fwait
jge
and
loop
xchg
test
in
push
pusha
cmps
(bad)
(bad)
mov
xor
cwde
or
fdivr
add
mov
jb
js
xor
push
ins
mov
ret
jg
std
mov
pushf
sub
cmc
push
loop
cdq
jmp
jmp
or
mov
jns
(bad)
cli
repnz
adc
xchg
jmp
jl
or
pop
stos
loope
aad
inc
imul
sub
and
jge
aas
nop
std
pop
sub
pop
enter
sub
jmp
xor
(bad)
cwde
adc
xchg
ins
push
pop
mov
or
push
cmp
dec
dec
cmps
daa
pop
mov
(bad)
js
inc
dec
dec
xchg
xor
push
pop
mov
sub
fdivr
fidiv
mov
jnp
jle
pusha
sub
adc
jne
in
or
imul
movs
cmp
jns
push
or
add
js
pop
imul
sub
and
das
loopne
shl
pop
push
pop
ficomp
pop
adc
cmp
jns
xchg
dec
mov
sbb
cmps
sub
xchg
dec
clc
pop
add
popa
sbb
sbb
mov
push
jne
dec
sbb
bound
sub
jmp
cmc
(bad)
adc
mov
xlat
ds
js
sbb
inc
mov
xlat
retf
in
jle
add
ds
lahf
mov
pushf
pop
call
push
imul
pusha
lahf
jmp
(bad)
outs
xor
mov
outs
and
outs
js
fwait
jp
sbb
cwde
fdiv
jo
xchg
sub
mov
outs
dec
cmc
push
sbb
sbb
invd
push
ror
sub
sahf
pop
and
test
repnz
and
jmp
mov
and
fdivr
sbb
ficomp
jae
and
xchg
mov
movs
and
inc
mov
cmp
pop
ret
and
mov
sub
mov
jge
mov
add
ror
mov
lahf
ss
test
mov
push
nop
rcr
outs
mov
and
inc
and
in
pop
sti
ret
test
push
sbb
shl
push
and
push
call
repz
in
and
cmp
ficom
fisub
jge
ret
cdq
push
add
fucomp
inc
jo
std
sbb
mov
int3
fcomp
shl
push
mov
sbb
icebp
cld
jb
rcr
xchg
imul
std
xor
ret
mov
push
repz
ja
cs
(bad)
mov
push
mov
daa
mov
gs
cmp
sti
dec
and
jmp
sbb
gs
xor
jle
sbb
pop
mov
jl
sar
xchg
adc
jae
and
in
sti
sbb
std
ins
add
sti
xchg
push
fcomp
std
dec
(bad)
jecxz
add
dec
jmp
je
mov
mov
ret
and
into
(bad)
aas
imul
fidiv
push
enter
sub
push
xchg
pop
loope
fs
cmp
outs
shr
jecxz
cmp
and
sti
sbb
call
xchg
sti
sbb
iret
mov
pushf
idiv
xchg
push
mov
sar
sub
pop
and
sub
bound
push
test
sbb
mov
xchg
dec
cmp
mov
cmp
mov
in
dec
cmc
cmps
mov
imul
jbe
cmp
nop
pop
fisttp
lock
inc
sahf
js
pop
repnz
cmp
xchg
xchg
mov
mov
inc
shl
sahf
adc
jae
push
cmp
mov
push
mov
shl
adc
sbb
stos
inc
in
xor
sbb
jl
pushf
into
and
sbb
adc
cmp
cmp
mov
pushf
sbb
fsubr
lahf
test
xor
pusha
or
pop
iret
xchg
mov
test
inc
cmp
cmp
jb
sbb
(bad)
and
mov
imul
push
repz
(bad)
nop
cld
movs
mov
sub
pop
nop
pop
inc
cmp
xchg
jmp
pop
xchg
ins
popf
mov
or
jmp
out
pop
rep
cs
scas
mov
js
rol
scas
test
pop
jmp
xchg
adc
in
stc
sahf
xor
cmp
and
sub
ds
xchg
(bad)
cmps
xor
adc
push
jg
or
adc
ret
cli
popa
push
pop
xchg
pop
js
cld
pop
add
hlt
popf
dec
call
xchg
jl
dec
jb
outs
std
mov
mov
shl
jne
and
and
xor
ins
sub
and
pop
in
mov
sub
inc
push
sti
mov
jecxz
in
mov
adc
nop
in
repnz
enter
sub
sbb
mov
or
pop
loopne
adc
imul
add
mov
(bad)
adc
not
push
mov
and
call
xchg
stos
cmp
shr
jne
test
leave
retf
std
sbb
cmp
sbb
sti
in
nop
hlt
stc
or
stos
dec
ret
(bad)
lock
loopne
jecxz
in
in
mov
repz
xor
or
daa
jnp
and
scas
pop
movs
mov
int
sbb
sar
xchg
fst
shl
or
cmc
adc
sti
into
js
add
int
hlt
ret
fst
push
hlt
or
cmc
adc
sti
into
js
add
lock
repz
add
xor
inc
fnsave
dec
push
in
xchg
xchg
cwde
xor
jno
cmps
xchg
and
dec
sti
inc
and
leave
out
add
fistp
sti
rcr
cmp
(bad)
fisttp
or
pusha
sti
xor
xchg
pushf
dec
out
cmp
pop
push
fistp
or
stc
sti
scas
push
mov
out
xchg
cmp
rcr
jnp
pushf
into
push
idiv
or
hlt
sti
dec
shr
aad
push
push
in
rcr
jge
mov
sbb
mov
add
in
das
xor
ds
les
adc
sub
(bad)
(bad)
pop
pop
xor
jecxz
int
sub
(bad)
adc
add
arpl
ins
outs
aad
nop
add
xchg
xchg
cmps
fsubr
or
xor
in
or
push
mov
push
sahf
push
lods
mov
and
mov
cdq
xchg
js
xchg
outs
std
sub
mov
into
dec
iret
mov
inc
mov
out
test
mov
call
mov
mov
sbb
cmp
fwait
cmp
imul
jnp
mov
or
adc
je
xor
xor
stos
xlat
sbb
adc
test
mov
das
imul
in
and
inc
std
into
mov
jge
push
pushf
popf
mul
lahf
fstp
push
jl
xor
cmps
cdq
repz
mov
mov
pop
mov
out
xor
cs
dec
or
add
(bad)
sub
xor
sub
cmc
ret
mov
mov
inc
inc
lods
push
sbb
xor
ret
dec
popa
add
ins
inc
jl
push
jae
jmp
push
adc
xchg
mov
in
stos
sbb
jno
je
cmps
or
adc
mov
test
sbb
dec
mov
dec
sbb
cmp
cmp
rep
xor
xchg
dec
xor
xor
in
and
popa
sbb
rcr
add
jl
sbb
cmp
stc
jb
sub
cld
jge
ds
mov
mov
das
pop
outs
ret
(bad)
jmp
and
inc
jae
sub
pop
cli
cmp
xor
inc
in
lahf
sti
jge
repz
mov
das
mov
cmp
xchg
iret
add
add
cmp
pop
dec
rol
into
dec
in
pop
jle
sub
repz
hlt
sar
std
cmp
sub
cmc
or
ret
pop
mov
sbb
in
ret
retf
stc
sbb
movs
jmp
mov
(bad)
cmp
push
jne
ins
inc
jle
repz
cdq
stos
dec
dec
cld
dec
mov
sbb
mov
loop
in
xor
xor
jg
icebp
and
mov
sbb
add
mov
jns
and
pushf
add
movs
pop
jg
pop
aam
mov
push
add
addr16
loop
mov
scas
call
stos
cmp
repnz
and
in
shl
loope
fwait
pop
mov
add
loop
repnz
clc
sahf
fsubr
jmp
je
jb
repnz
or
push
(bad)
sub
in
sub
cmp
ss
jecxz
dec
push
in
xchg
gs
pop
imul
fucomip
push
and
inc
in
imul
popf
mov
xchg
imul
xchg
or
shl
retf
imul
cli
mov
xlat
shl
pop
cmp
sub
and
shr
test
(bad)
mov
out
mov
out
aad
or
jmp
idiv
adc
lods
in
icebp
ins
jne
je
fwait
mov
jge
mov
cli
std
xchg
iret
es
loopne
push
mov
or
sbb
shr
xchg
mov
jmp
(bad)
int
jecxz
fnsave
pop
inc
xchg
jl
xor
shl
or
gs
cmp
outs
aas
mov
mov
push
shl
aas
(bad)
sub
pop
adc
in
dec
into
push
mov
sub
pop
mov
push
dec
xlat
out
movs
retf
jmp
jne
movs
dec
sti
or
lahf
ja
sbb
and
cli
pop
in
adc
mov
jmp
push
mov
(bad)
icebp
movs
pop
cmp
mov
gs
mov
data16
sbb
push
shr
fadd
stc
(bad)
retf
xchg
hlt
ss
outs
jg
(bad)
cmp
dec
xchg
pop
mov
lods
(bad)
stos
bound
xor
add
out
loope
jmp
jmp
sub
and
mov
add
mov
pop
out
push
stos
add
test
outs
xchg
lea
mov
test
add
pop
repz
sub
push
bound
ins
sub
bound
popf
push
pop
adc
idiv
or
and
stc
adc
repnz
sub
mov
push
lea
mov
dec
fdiv
pop
and
mov
mov
imul
fiadd
je
jmp
ficomp
inc
and
es
cs
adc
shl
jno
mov
shl
(bad)
pop
inc
push
dec
test
jmp
pop
jmp
or
xchg
mov
cli
stos
adc
xor
imul
(bad)
mov
fisttp
mov
repz
mov
push
out
pop
rcr
jmp
in
inc
dec
loope
sbb
sbb
(bad)
arpl
stos
gs
repnz
xor
dec
dec
sbb
cdq
jbe
(bad)
push
stos
lock
jo
push
dec
push
jb
sub
jae
bound
jp
popf
mov
jbe
sub
inc
mov
data16
fldenv
cmps
inc
push
retf
in
iret
sbb
mov
sbb
mov
xchg
fs
jmp
std
pop
pop
inc
in
cs
pop
daa
cmps
lods
fldenv
xchg
pop
outs
test
xor
or
lods
das
jecxz
lea
addr16
(bad)
cmp
lods
(bad)
out
and
gs
lods
(bad)
out
and
gs
(bad)
out
and
gs
adc
test
cmps
test
dec
movs
es
mov
in
add
dec
cs
pushf
jecxz
sbb
sub
mov
movs
push
les
int3
sub
mov
sbb
sub
mov
sbb
sub
imul
fdivr
or
lods
cmps
repz
sbb
xor
mov
pushf
stc
push
outs
add
(bad)
rol
ins
adc
mov
jecxz
xchg
imul
push
in
xchg
inc
xchg
mov
in
sti
xlat
lods
push
cmp
(bad)
add
ret
pop
or
stc
add
jns
and
mov
jnp
imul
jg
loop
ins
xchg
ret
jl
push
adc
sbb
pop
cs
jg
xchg
sbb
into
ror
add
cld
push
fs
into
xchg
(bad)
hlt
popf
dec
dec
jmp
stos
pop
xor
repz
jnp
pop
movs
repnz
ficom
sub
adc
push
dec
fs
jl
sbb
pop
mov
inc
iret
push
rcl
sar
adc
mov
stc
(bad)
pop
stos
sbb
call
cs
xchg
sbb
shl
cmp
loop
inc
jb
mov
je
into
push
sar
fwait
lock
int3
mov
cmps
into
sub
hlt
into
rep
call
js
mov
scas
mov
jecxz
movs
push
or
mov
pop
cmp
ins
inc
inc
cli
int3
mov
fs
jmp
into
in
repz
ds
nop
int
imul
outs
push
pop
cli
jbe
mov
outs
sbb
scas
aaa
daa
push
mov
cmp
loope
jmp
cwde
test
es
xor
stos
repz
mov
pop
jns
sub
lds
in
in
jb
add
pop
lea
das
nop
pop
fadd
(bad)
sbb
jmp
std
ss
or
add
mov
xor
out
fist
in
cs
push
jecxz
(bad)
pop
sub
lds
cld
jmp
xchg
jmp
mov
js
in
mov
daa
mov
inc
cmp
stos
dec
shr
in
retf
and
or
in
ss
data16
pop
gs
jbe
add
and
adc
sub
mov
data16
pop
pop
shl
rcl
stc
rcl
fild
jecxz
pop
fs
add
(bad)
div
xor
mov
out
in
and
jmp
std
cmp
out
and
mov
es
lock
in
add
call
and
adc
push
jecxz
enter
xchg
sub
in
push
pusha
sbb
dec
bound
jmp
mov
fdiv
ins
in
fadd
mov
xor
cmp
add
ins
cmp
xchg
and
push
or
ins
cmp
mov
mov
add
out
push
adc
sub
pop
jge
mov
mov
fdivr
inc
add
or
adc
in
add
xor
xchg
lea
ds
jo
sbb
add
jmp
sahf
loopne
xor
dec
int3
ss
in
lds
daa
sbb
mov
int3
scas
mov
mov
inc
(bad)
cmc
scas
jb
adc
popa
nop
scas
sti
inc
or
push
sbb
adc
mov
jmp
adc
mov
dec
jmp
mov
mov
add
pop
out
je
loope
jns
call
rol
fdivr
fsub
adc
shl
in
sbb
mov
pop
xor
fwait
xlat
push
ror
and
xchg
jmp
sar
xor
push
and
(bad)
sbb
sar
stc
imul
hlt
sti
fs
imul
sbb
ds
data16
(bad)
ds
addr16
hlt
jecxz
or
gs
mov
shl
adc
lods
sti
aaa
int3
inc
adc
pop
adc
push
sbb
iret
mov
inc
fs
sbb
into
push
sti
in
jle
or
inc
std
adc
or
in
and
sub
out
xchg
std
movs
mov
pushf
and
retf
ret
mov
fs
scas
ret
lods
test
xor
test
push
outs
xchg
push
stos
pop
xchg
(bad)
cs
xchg
das
mov
shr
into
sar
int
xchg
mov
jbe
mov
dec
push
adc
mov
repz
and
jns
inc
imul
mov
xchg
mov
dec
xor
push
mov
aad
and
mov
xor
clc
ins
scas
inc
xchg
mov
adc
pop
lods
cmps
dec
outs
jp
mov
test
in
and
cmp
test
mov
push
jbe
repnz
mov
mov
xor
mov
lock
mov
sub
mov
xor
push
and
mov
cmp
(bad)
push
and
mov
stos
(bad)
push
mov
inc
sbb
outs
xchg
jmp
jle
push
ins
(bad)
adc
cli
mov
mov
loopne
xchg
xor
retf
jge
sub
ins
pop
and
cmp
xor
xor
fs
or
push
pop
popf
sbb
fldcw
out
jge
mov
jmp
xor
inc
sti
dec
fs
ins
jle
dec
xor
adc
sbb
sahf
std
xor
add
lods
pop
call
jle
retf
repnz
mov
bound
lock
sbb
int3
add
js
mov
sahf
pop
js
ins
loope
cmp
icebp
adc
jl
repz
fnstsw
pop
dec
mov
ds
ja
jle
repz
or
add
movs
jle
or
inc
vpsubq
xor
jl
pop
in
jo
or
ret
push
fst
addr16
xor
(bad)
push
mov
xchg
js
jmp
sbb
jg
cmp
sahf
push
fsub
cmp
cmc
pushf
xor
fild
js
cmc
sahf
rcr
mov
js
jae
scas
sbb
data16
xor
dec
mov
sub
jge
xor
add
mov
sbb
js
xchg
xchg
push
ss
stc
std
ins
pop
aad
cmp
in
ror
cs
jge
popf
push
push
ds
add
inc
aam
lea
mov
es
fsubp
jne
(bad)
adc
add
push
neg
fld
cmps
mov
pop
xchg
pop
pop
mov
jne
push
ds
cmps
or
xchg
xor
sub
xor
std
(bad)
fs
ja
fbstp
jmp
mov
faddp
mov
es
cmps
out
push
ret
in
and
pop
ret
cs
mov
(bad)
int
lods
cmp
repz
push
in
push
inc
mov
cmp
pop
je
sub
push
es
sahf
ds
sti
out
stos
call
inc
jle
pop
sbb
fadd
jl
dec
fidiv
inc
shr
(bad)
cmp
call
in
and
push
mov
hlt
jecxz
xor
add
xor
jl
dec
xchg
aaa
mov
and
aas
jle
(bad)
and
popf
mov
adc
sbb
cmp
or
repz
or
loope
in
data16
and
sbb
sub
xor
retf
test
mov
popf
push
mov
shl
push
cwde
call
add
mov
pop
xchg
test
push
mov
fcomp
cmp
xlat
push
and
mov
inc
cmp
sahf
ret
pushf
sub
cmp
adc
shr
setge
xchg
shl
jne
aas
inc
hlt
ficomp
(bad)
fcomp
ds
mov
arpl
popf
dec
out
cmps
iret
inc
sti
daa
xchg
ret
dec
inc
sbb
call
jae
daa
addr16
lds
aad
dec
ins
mov
movs
fsub
in
and
sahf
mov
fs
retf
cmp
mov
inc
jge
mov
jg
in
xchg
lahf
dec
mov
xchg
in
pop
cmp
cmp
sbb
jle
pop
in
in
dec
or
(bad)
lahf
sbb
cmp
xor
in
pop
mov
push
jl
ret
push
pushf
or
jbe
xchg
jl
lahf
call
mov
in
mov
mov
sbb
cli
pop
out
jge
pushf
mov
sbb
cmp
push
cli
jle
mov
not
loopne
inc
fnsave
imul
inc
add
ds
mov
push
repz
dec
es
clc
push
pop
hlt
mov
dec
and
mov
arpl
mov
loop
pop
xor
pop
jl
es
pop
scas
push
add
push
frstor
cmp
dec
std
sar
jns
test
jmp
stc
fdivp
pop
and
sub
sbb
push
push
frstor
mov
cmp
jno
xchg
mul
jl
pop
movs
sbb
or
ror
cmp
adc
hlt
mov
sti
mov
add
xlat
bswap
jg
scas
stos
retf
add
jo
dec
mov
inc
movs
fidiv
xchg
jl
inc
dec
push
bound
pushf
std
retf
mov
push
jb
adc
repz
es
add
and
push
enter
(bad)
and
bound
mov
mov
mov
cmp
push
jmp
out
pop
xor
pusha
dec
retf
in
mov
lahf
sub
fimul
out
call
push
or
aad
jb
cmc
js
jl
in
pop
sbb
jns
push
adc
inc
cwde
or
lock
inc
aas
add
sub
or
push
repz
xor
push
das
aaa
jl
or
jmp
imul
adc
(bad)
test
xor
loope
retf
xor
xor
loopne
mov
sbb
pop
ds
lds
in
or
inc
pusha
adc
mov
aam
xor
mov
fwait
or
arpl
in
push
int
das
sbb
sbb
call
mov
xchg
push
and
push
jbe
gs
inc
jmp
mov
push
mov
jns
push
cs
in
pop
rol
popa
xchg
add
in
ret
mov
retf
scas
pushf
or
and
cmp
ss
scas
jmp
or
rol
dec
retf
push
lods
jne
call
sbb
mov
sbb
(bad)
cli
sti
int
sbb
cli
or
imul
sbb
mov
sub
in
xchg
pop
cmp
sbb
adc
test
pushf
pop
xchg
xchg
sbb
arpl
pop
(bad)
pusha
and
shr
in
sbb
xchg
sti
lods
xchg
xor
pop
in
ret
lahf
and
add
pop
pop
jge
gs
xchg
pop
stc
mov
jecxz
loope
sti
push
push
ret
mov
and
ret
loop
stos
xor
icebp
rcl
pusha
cmps
xchg
(bad)
sbb
(bad)
fmul
(bad)
test
and
push
pop
ins
test
ins
stc
mov
hlt
xchg
rcr
or
fld
xor
jmp
xchg
outs
xchg
test
pop
xchg
dec
jmp
std
xchg
cmps
pop
fcom
jnp
jecxz
sub
sbb
fsubr
fld
(bad)
es
loope
test
js
inc
fisttp
movs
ja
jbe
pop
mov
jge
jg
jbe
mov
js
popf
test
pop
pusha
fimul
xor
jecxz
fistp
jmp
xor
jg
jl
sbb
dec
aas
das
jecxz
push
or
test
sub
jle
adc
int3
pop
add
nop
mov
mov
pop
(bad)
clc
nop
lahf
int3
outs
pop
jbe
rol
ja
lahf
ret
fdivr
aam
jg
popa
cmp
mov
lahf
aaa
mov
scas
mov
sbb
loope
pop
out
push
or
rol
cmps
jp
pop
popw
dec
test
aaa
cmp
inc
data16
ds
mov
ins
outs
inc
popf
cmp
popf
in
pusha
jg
mov
sahf
cs
cmp
jbe
jmp
add
dec
pop
jmp
aas
std
adc
jne
push
clc
push
pop
fmul
scas
aas
cld
(bad)
lds
cmp
mov
daa
stos
pop
mov
and
(bad)
in
adc
in
scas
ficom
sub
and
pop
je
jne
aas
xor
adc
aas
jo
xchg
fistp
ss
xor
out
jecxz
ds
(bad)
fsub
outs
es
push
es
dec
cld
pop
xchg
sti
jmp
mov
xchg
fistp
lods
je
das
aad
jg
add
cmp
sbb
std
lods
mov
jbe
fnsave
sbb
(bad)
fadd
sti
mov
stos
jo
icebp
lahf
pop
push
int3
movs
fisubr
and
inc
bound
icebp
aam
cmp
lds
cmps
sbb
lea
into
std
or
cld
stos
stos
mov
outs
vunpckhps
xchg
mov
adc
sub
add
mov
mov
pop
outs
test
dec
inc
pop
xor
ja
mov
and
in
jmp
or
aad
jecxz
out
fwait
in
in
into
mov
pop
(bad)
mov
loopne
retf
test
cmp
ja
pop
imul
push
sar
pop
lock
inc
cmp
(bad)
mov
stos
dec
bound
cmp
mov
movs
add
sbb
repz
es
inc
and
int
sbb
ror
call
jo
or
mov
popf
pop
in
mov
xchg
js
lahf
xor
push
jge
iret
push
imul
dec
out
dec
fmul
sbb
jbe
fdivr
sbb
arpl
jmp
inc
jl
push
cld
loopne
fdiv
pop
pop
xchg
popf
inc
push
mov
mov
pop
xor
sub
pop
ins
inc
nop
out
xchg
enter
ins
dec
in
adc
cmc
les
push
(bad)
inc
sbb
sar
in
loop
sbb
and
hlt
ss
jbe
ror
lods
adc
add
popf
popa
sbb
hlt
lea
xor
js
cs
adc
inc
je
push
pop
test
fwait
cmp
dec
mov
js
sub
(bad)
fsub
jg
sub
loopne
pop
pop
push
jg
ins
nop
jmp
cmc
aas
std
retf
movs
xor
jmp
call
ret
jb
loope
xor
setg
outs
dec
repz
mov
pop
pop
neg
jg
inc
arpl
push
iret
and
cmp
ret
test
jne
sbb
jecxz
sub
(bad)
sbb
xchg
cmp
or
outs
xor
ds
mov
(bad)
shld
jmp
xchg
pop
imul
jecxz
scas
sahf
pushf
add
push
pop
dec
jl
dec
sbb
shl
mov
push
std
lods
mov
and
ja
lods
in
test
(bad)
in
cmp
mov
shl
ins
cmp
mov
pop
add
popf
pop
loop
cs
push
jg
je
outs
cwde
mov
leave
in
std
xchg
in
stc
dec
je
sub
mov
and
add
call
sti
or
test
outs
jecxz
cs
(bad)
popf
sub
(bad)
pop
cmc
jmp
push
sub
jecxz
je
fucomip
movs
repnz
aas
jge
dec
into
pusha
add
add
jae
gs
popf
hlt
jecxz
fs
fild
imul
in
test
push
(bad)
xor
push
and
out
jmp
mov
inc
jbe
mov
jns
pop
popf
and
pop
pop
sbb
push
add
leave
xchg
add
xor
in
repz
jmp
sbb
dec
or
jbe
sbb
pop
in
test
bound
or
iret
enter
jl
mov
jg
ss
cmp
pop
cmc
pop
sub
mov
std
cdq
add
in
fstp
sbb
jmp
add
mov
loopne
mov
sbb
inc
adc
add
arpl
fld
inc
add
cmp
mov
push
mov
wrmsr
push
push
push
ins
sar
jp
or
lods
aad
and
ins
dec
jl
dec
test
push
mov
nop
jecxz
inc
bound
inc
or
test
pop
xor
ror
sub
mov
xchg
sahf
data16
jne
mov
jb
lds
jmp
jp
dec
adc
xchg
cmp
int
jb
adc
mov
std
push
ds
jle
pop
ret
or
jmp
in
xchg
and
and
cmp
mov
xor
mov
pop
adc
mov
pop
pop
pop
daa
pop
lods
push
and
xchg
push
mov
or
or
movs
std
fsub
sbb
and
pop
add
inc
dec
mov
push
in
dec
std
mov
dec
test
out
es
sbb
inc
arpl
in
(bad)
xlat
lods
jle
push
push
mov
pusha
stos
loop
sbb
and
mov
mov
add
sub
adc
xor
(bad)
xor
(bad)
iret
movs
repz
ins
in
jl
retfw
add
jno
mov
xor
mov
push
dec
test
cmc
mov
push
mov
and
call
icebp
xchg
push
add
mov
call
inc
sti
pop
add
pop
jl
and
push
shl
xor
push
fdiv
nop
pop
sbb
(bad)
(bad)
ins
push
add
scas
sbb
jns
outs
fidivr
mov
stos
fwait
xor
xchg
dec
daa
lods
pop
(bad)
adc
mov
fnsave
pop
das
ret
scas
or
jg
ins
xchg
stos
imul
mov
dec
mov
fidivr
sbb
frstor
out
mov
adc
pop
(bad)
es
pop
aad
fisubr
sbb
nop
sbb
push
int
popf
fcom
lock
scas
hlt
fistp
pop
jmp
inc
sbb
pop
ins
mov
fsubr
jp
pop
retf
call
pop
push
mov
lods
and
mov
jbe
adc
sti
dec
cmp
push
sbb
sbb
mov
xchg
pop
jae
jge
push
loope
jne
push
pop
sbb
cdq
adc
push
add
pop
add
popa
mul
jmp
mov
(bad)
out
int3
js
jl
push
movs
jns
add
lea
cmp
in
mov
mov
add
cmps
repnz
cmp
ffree
add
fnstenv
icebp
test
(bad)
mov
fmul
push
sti
fsub
pop
xor
jbe
and
xchg
popa
inc
pop
cmp
sbb
and
lods
sti
fs
push
in
or
hlt
loope
add
or
mov
fcomip
sub
jae
lods
add
fldlg2
pop
xchg
push
sar
cs
(bad)
xor
mov
xchg
dec
bound
dec
jmp
ror
mul
pop
fwait
xchg
xchg
mov
daa
je
aaa
and
repz
adc
scas
sar
ds
pop
mov
stos
jecxz
mov
pop
pop
retf
lock
clc
(bad)
in
es
dec
add
movs
and
cmps
mov
push
rcr
fwait
and
pop
es
stc
arpl
mov
sbb
movs
std
shl
pop
xor
push
mov
loop
xchg
jmp
int
ja
xor
sahf
mov
ret
mov
cmp
pushf
push
xchg
in
adc
call
sbb
xor
lea
scas
fsub
and
sub
and
jne
sti
xchg
sub
icebp
jb
adc
mov
sbb
mov
and
mov
xor
inc
pusha
xor
inc
fld
(bad)
xor
inc
xor
(bad)
scas
cmp
ror
jg
ds
or
in
stc
sbb
stos
cmp
xchg
xchg
pop
and
aas
xor
xchg
mov
fs
jb
push
or
mov
out
xchg
stos
(bad)
jbe
xchg
fs
sbb
bound
sub
pushf
push
xchg
stos
call
cli
add
out
cmps
adc
xchg
adc
rcr
idiv
mov
(bad)
or
sbb
retf
add
xor
pusha
pushf
mov
dec
and
mov
arpl
cmp
pop
push
adc
loope
xor
or
in
test
sub
pusha
ds
ins
inc
xchg
pop
mov
in
jg
int
sub
movs
pop
push
pop
mov
pushf
xchg
movs
or
mov
inc
std
not
add
inc
mov
dec
ja
into
dec
data16
push
inc
xor
push
jns
stos
test
popa
push
ds
push
fistp
push
jmp
pop
jo
call
cs
xor
and
cmps
pop
inc
adc
pop
mov
ja
xchg
out
jl
clc
inc
add
into
inc
xor
nop
frstor
call
or
fadd
sbb
mov
cmp
pop
movs
mov
(bad)
std
mov
loopne
cwde
xlat
shl
jg
push
mov
cmp
sub
cmp
lock
stos
(bad)
pop
hlt
(bad)
je
movs
pushf
xchg
jnp
jl
inc
mov
lods
test
xor
cld
test
loope
mov
mov
jmp
cmp
add
ins
clc
mov
out
cmp
sbb
mov
jle
jae
sub
jmp
mov
add
je
mov
fld
sub
fbstp
xor
mov
adc
in
cmp
inc
jbe
cmps
sbb
jl
ins
sahf
push
sbb
dec
mov
fnsave
sbb
or
nop
adc
out
push
mov
out
(bad)
fldenv
mov
dec
xchg
jl
mov
pop
dec
and
adc
xchg
rcr
inc
xchg
mov
loop
shl
in
jae
frstor
push
xchg
aaa
fwait
stos
xchg
jbe
out
mov
ret
pop
ret
pop
xchg
lds
and
xor
sbb
cli
xor
ds
into
and
cmps
pop
cmps
ds
in
lea
fsubp
pushf
rcl
xor
jle
in
(bad)
xchg
std
mov
cmps
pushf
rep
je
xchg
cld
mov
inc
cmps
lea
dec
sbb
in
out
mov
aad
mov
fs
jmp
sub
mov
ret
adc
jecxz
fwait
sbb
or
scas
mov
adc
xor
retf
add
stc
jge
and
or
addr16
mov
shl
xchg
xlat
inc
std
dec
xor
and
test
push
repnz
loop
sti
inc
add
bound
and
add
mov
and
jl
or
pop
call
aam
cmp
sub
bound
loopne
(bad)
shr
sbb
sbb
and
inc
mov
ds
inc
cmp
bound
push
pusha
ficomp
movs
mov
push
sub
imul
fnsave
stc
dec
mov
add
stc
push
cmp
sahf
inc
xor
out
sbb
dec
inc
lods
cs
pop
add
cs
ins
bound
mov
std
cmp
shr
mov
jmp
dec
aad
out
adc
retf
(bad)
jno
pusha
inc
lods
mov
mov
cwde
pop
out
bound
sbb
sub
mov
icebp
sbb
mov
call
iret
add
mov
and
lods
adc
scas
std
fdivr
and
in
shl
jo
xchg
pop
in
fcmovu
pop
jnp
or
sbb
cmp
xchg
pop
xor
pop
clc
mov
je
jno
pop
in
pop
sub
cmp
xchg
imul
stc
fmul
jmp
lock
jg
adc
pop
push
cwde
ret
and
jg
lock
imul
dec
out
cmp
cwde
dec
jne
adc
or
jl
cmp
shr
(bad)
daa
les
popa
in
stos
lods
cli
int
push
rcl
cli
sub
pop
add
jl
xor
int3
mov
pop
call
icebp
mov
and
mov
cdq
adc
add
mov
or
push
(bad)
sbb
adc
sub
call
jns
push
pop
jbe
sbb
ret
ins
jmp
lock
mov
fnstsw
repz
test
sti
jne
xlat
rcr
or
xchg
ins
fdivr
add
and
cmp
or
das
and
xchg
pop
iret
ret
fldlg2
cmp
inc
push
fisub
pushf
sub
push
fwait
sbb
mov
loope
jb
add
or
xchg
retf
jge
cwde
xlat
sti
push
sub
lods
test
or
in
sub
pushf
sbb
iret
mov
jno
xchg
in
out
inc
pop
iret
sbb
jl
add
inc
push
push
pop
call
hlt
dec
stos
les
mov
push
add
pop
inc
and
loope
lahf
add
cmc
mov
lea
sbb
and
sub
mov
add
jle
cmp
inc
mov
arpl
push
fisttp
fbstp
popa
leave
cld
icebp
je
in
jmp
call
fimul
arpl
inc
jmp
(bad)
(bad)
fsubr
ds
push
and
adc
in
and
mov
jl
repz
sbb
data16
add
clc
xchg
lea
fsubr
shr
push
out
rcl
dec
add
cld
mov
imul
mov
adc
repz
pop
lock
ss
jl
jnp
sbb
mov
inc
push
sti
movs
pushf
cmp
sbb
jmp
daa
sub
addr16
jmp
sti
(bad)
cmp
dec
ret
inc
retf
ins
pop
test
mov
sub
clc
in
ds
repz
sub
sbb
sti
cld
jmp
jecxz
retf
jmp
stos
fst
xlat
dec
inc
xor
dec
sub
push
retf
test
inc
std
into
jmp
retf
pusha
adc
ret
scas
sbb
pop
mov
jo
iret
and
adc
iret
repz
cmp
retf
cli
mov
cmp
lock
add
mov
mov
dec
or
xchg
cmp
and
push
mov
jns
dec
movs
push
push
(bad)
mov
or
inc
jae
xchg
add
retfw
ins
outs
movs
ins
xchg
mov
ret
scas
movs
sub
and
xor
jl
mov
stos
xchg
mov
xor
je
mov
jl
jae
pop
mov
les
add
sbb
loope
ret
sbb
shr
mov
pop
loope
ss
cmp
div
push
rol
in
retf
leave
jmp
stc
or
imul
inc
jle
adc
cli
stos
retf
fwait
shl
stc
and
sub
in
xor
mov
add
cld
push
or
pop
aad
fldenv
pop
jl
ret
xor
cld
push
jae
xchg
sti
and
(bad)
jb
push
ins
sbb
xlat
hlt
cmp
pushf
and
mov
jge
pop
pop
cmp
(bad)
pop
fsub
pop
lea
and
jmp
jge
leave
mov
pop
xchg
neg
fcom
xchg
pop
ror
scas
ret
pop
adc
mov
adc
mov
mov
shr
mov
(bad)
push
shl
adc
scas
mov
and
sbb
and
repnz
popf
sar
cli
cmove
enter
xor
inc
imul
jmp
jne
add
popa
xor
mov
fnstsw
neg
js
outs
aam
es
call
push
test
mov
and
and
in
adc
push
push
hlt
outs
xchg
push
sbb
fdiv
pop
cli
sub
push
jns
in
sub
ins
sbb
aas
inc
add
inc
ins
mov
mov
cmps
push
clc
(bad)
pushf
jb
dec
rdmsr
jl
sub
jns
add
imul
gs
hlt
addr16
and
cmc
and
out
xchg
cmc
xchg
add
fs
xor
gs
imul
test
fwait
dec
inc
mov
jno
or
pop
in
in
jl
mov
mov
pop
mov
scas
imul
xor
mov
cdq
add
loop
lds
jmp
adc
dec
xor
loopne
fst
fdiv
and
in
retf
pop
mov
pushf
shl
add
sub
fild
out
fcom
retf
push
cmp
push
adc
pop
das
pop
and
test
add
mov
and
xor
and
ret
push
clc
jnp
test
ins
dec
xchg
cmp
shl
add
push
adc
mov
add
icebp
test
mov
sbb
out
repnz
ret
fcom
dec
mov
ds
xor
movs
rcr
cmp
jmp
scas
add
cmp
cmp
push
jne
pop
mov
fidiv
stos
jp
mov
repz
daa
fnstenv
in
dec
mov
daa
stc
jle
push
neg
in
mov
int3
test
rcr
xor
adc
loop
xor
or
dec
call
shl
adc
daa
mov
and
(bad)
std
mov
pushf
cli
xor
sbb
in
jno
cld
jb
mov
cmps
cmp
outs
adc
and
shl
xchg
and
push
or
ins
inc
pop
add
pop
dec
fmul
jbe
and
scas
ret
xor
(bad)
pop
mov
sbb
pop
shr
pop
je
mov
daa
adc
arpl
(bad)
dec
add
movs
mov
test
mov
je
hlt
xor
and
add
and
fwait
and
mov
pop
fst
lds
jl
sbb
mov
mov
jne
es
int
sti
in
sub
cmps
sbb
in
and
mov
and
sub
sbb
(bad)
inc
adc
jp
int
fnstsw
daa
mov
mov
ds
xchg
mov
pop
mov
mov
pop
sub
mov
xor
pop
repz
int3
xchg
cmc
sbb
in
or
hlt
fcmove
cwde
push
arpl
stos
inc
sub
rcr
jmp
inc
cmp
(bad)
push
or
int3
sub
jl
lea
jp
xor
lds
das
xor
cmp
nop
out
pushf
int
pop
add
ficom
pop
jl
fwait
xor
cmp
stc
push
inc
sahf
xor
cmp
(bad)
sbb
mov
jnp
jo
sar
repz
cmp
push
mov
mov
inc
sbb
cs
loop
data16
xchg
sbb
push
sub
jb
adc
mov
jmp
xor
pushf
cmps
in
pop
xchg
jo
xchg
push
cs
stc
cmp
pushf
sub
packsswb
imul
call
mov
mov
inc
(bad)
rcr
cmp
mov
fsubr
aad
mov
jp
popf
js
fnsave
outs
adc
ret
cmp
neg
pop
std
adc
pushf
add
sbb
push
out
xor
jb
lock
icebp
das
cld
push
pop
pop
rcr
and
in
idiv
inc
mov
jb
and
sbb
pop
loope
pop
repz
stos
xor
call
jecxz
cdq
outs
clc
xchg
out
test
push
push
test
pushf
add
das
ds
sub
cdq
hlt
sahf
nop
xchg
addr16
xchg
mov
ins
jo
fdivr
or
sub
jle
adc
aad
mov
inc
(bad)
cld
(bad)
rcr
rol
or
sub
push
js
pop
mov
xor
add
xor
or
ins
outs
bound
mov
cmp
cmp
dec
jne
das
es
lahf
loope
test
out
mov
adc
cmp
das
cmp
push
inc
jp
ss
sbb
dec
in
or
lods
loop
mov
cmp
mov
icebp
les
repz
jmp
sbb
xchg
fisttp
cmp
and
in
js
jmp
ret
sti
sub
rcr
repz
xchg
push
leave
in
or
iret
jl
mov
call
inc
dec
call
pushf
(bad)
retf
mov
dec
pop
test
xchg
cmovs
sub
fsub
xor
shl
loopne
and
add
jle
in
in
mov
cmp
test
out
sbb
pop
or
xchg
out
mov
xor
test
mov
(bad)
(bad)
sub
shr
push
imul
inc
test
sub
rep
mov
mov
pop
cwde
sub
loope
loopne
or
xchg
popf
sub
iret
sbb
fwait
inc
test
inc
mov
fsub
cdq
mov
out
mov
xchg
fs
hlt
inc
and
or
in
xchg
cmp
sub
test
xor
mov
es
fwait
test
in
mov
int
sbb
jmp
xor
cmp
adc
and
jmp
cmp
pop
in
cdq
sbb
dec
or
and
mov
xchg
call
jb
icebp
imul
pusha
dec
sar
or
test
addr16
call
xor
mov
mov
outs
ret
inc
das
and
or
jmp
in
bound
lds
popf
xor
cmp
jb
test
jmp
pop
out
mov
pop
movs
mov
mov
scas
or
test
xchg
out
or
aaa
or
dec
test
mov
mov
in
pop
in
and
push
sub
add
div
fucomp
out
popa
mov
add
std
je
sbb
ret
out
(bad)
scas
xchg
je
jae
jnp
lds
rcr
xor
xlat
push
jb
fistp
add
xlat
mov
sbb
jle
dec
mov
push
or
iret
cmp
jnp
jmp
sub
loope
sti
push
in
cmp
in
repnz
inc
outs
add
ins
retf
jl
push
add
mov
in
in
scas
icebp
sahf
cmp
retf
cmps
mov
inc
fiadd
fsub
add
fcomp
fwait
cdq
es
sub
sub
push
jne
push
mul
or
and
mov
and
std
inc
adc
mov
icebp
xchg
sti
(bad)
jmp
dec
shr
leave
cmp
mov
popf
std
mov
jo
mov
hlt
pop
push
test
mov
add
lds
add
cdq
int3
jp
dec
out
jae
pop
pop
sahf
pop
test
sub
jecxz
scas
movs
dec
(bad)
(bad)
push
aad
in
hlt
sbb
loop
fild
in
and
and
xor
xchg
enter
xor
popa
dec
mov
imul
mov
xchg
pop
adc
(bad)
in
adc
push
sub
cmc
jg
gs
rol
ja
das
(bad)
pop
xchg
dec
mov
adc
mov
daa
xchg
inc
fnstcw
add
inc
xchg
jmp
cs
ds
xlat
outs
dec
loope
pop
xchg
dec
icebp
pushf
push
sub
out
jb
in
and
lds
stc
mul
dec
cld
loope
adc
test
jnp
outs
ror
hlt
jnp
gs
fdiv
sub
in
mov
hlt
mov
arpl
sbb
sbb
sub
sbb
dec
and
jecxz
and
mov
xchg
pushf
(bad)
iret
outs
adc
sub
movs
pop
inc
sbb
mov
outs
les
fidivr
pushf
pcmpgtw
mov
push
jmp
inc
cmp
push
repz
jg
lods
sub
inc
test
add
pop
xchg
sbb
gs
shl
icebp
es
inc
call
movs
scas
jns
fmul
mov
pushf
loop
(bad)
dec
xor
stos
cs
sbb
push
les
lock
mov
dec
add
pop
mov
les
dec
sbb
jle
xlat
xchg
and
in
jmp
in
sbb
jb
sub
xor
push
icebp
pop
xor
into
inc
adc
icebp
jns
inc
jle
sub
cwde
xor
pushf
mov
outs
call
dec
pop
xor
adc
sbb
add
mov
dec
sbb
mov
xor
popf
cmp
fcomp
cmps
mov
popf
pop
mov
fiadd
jp
cmp
mov
aam
pop
push
daa
mov
call
in
dec
sbb
adc
data16
loop
push
outs
jbe
addr16
mov
fxsave
add
xchg
sbb
loopne
mov
xor
cmp
jl
icebp
outs
je
sbb
cs
imul
je
push
out
jecxz
pusha
cmp
fbstp
pop
sahf
and
lea
ss
jbe
aad
shl
mov
sbb
jg
inc
out
ja
je
data16
ins
test
sbb
mov
cs
jne
add
xchg
fbstp
cli
xchg
pop
scas
repz
jne
push
ret
sti
ja
dec
cmp
mov
xor
fadd
sar
outs
and
or
ficom
in
jg
outs
orps
dec
mov
jmp
or
cmps
add
add
add
iret
out
jge
push
add
leave
fidivr
jbe
push
stos
sbb
loope
xor
repnz
sahf
sub
fadd
pop
(bad)
or
cs
ffreep
out
or
sub
loopne
das
push
retf
fmul
data16
addr16
pop
movs
pop
repz
inc
xor
xor
scas
inc
std
ds
xchg
mov
jmp
push
sbb
or
retf
je
loop
add
or
push
jmp
xlat
popa
sub
into
jge
sbb
scas
loop
icebp
(bad)
cld
pop
mov
push
sbb
jmp
xor
gs
pop
scas
sbb
sub
xor
mov
push
pop
add
sbb
sahf
repz
leave
sub
retf
jb
enter
push
push
(bad)
fild
add
test
xchg
iret
call
out
push
in
fild
mov
outs
repnz
je
call
xchg
shr
scas
inc
popf
pop
or
enter
aam
loope
scas
mov
or
sub
dec
jg
hlt
gs
push
mov
ins
(bad)
inc
xor
xor
push
pop
xchg
movs
and
dec
jbe
sbb
ins
sbb
std
call
push
mov
push
cld
icebp
pop
push
mov
in
jle
inc
mov
mov
inc
mov
inc
shr
pop
xchg
scas
cmp
pop
push
inc
xchg
stc
jo
or
ror
std
mov
and
in
sub
mov
jmp
ds
sub
jle
and
mov
pop
and
fs
fdiv
icebp
xor
jo
pop
sbb
cmp
xor
(bad)
xor
test
not
cmp
xchg
sahf
push
jg
jo
icebp
and
jo
pop
stos
imul
lods
shr
jl
sbb
outs
mov
jnp
in
std
stos
out
into
inc
mov
push
(bad)
ret
mov
rol
outs
(bad)
jp
jmp
inc
popf
mov
cmp
imul
adc
in
xchg
clc
call
mov
or
sub
mov
push
xor
nop
popa
lods
outs
aas
scas
push
fdiv
lods
inc
xlat
aas
mov
and
outs
mov
ficom
test
inc
xchg
pop
jl
pushf
in
push
stc
add
loop
jl
xchg
cmps
mov
push
sbb
cmp
int3
sbb
scas
ret
movs
jmp
jmp
xor
push
xchg
pusha
icebp
call
adc
xor
shr
adc
sbb
dec
daa
shr
inc
jle
or
sahf
jns
pop
mov
out
loopne
xchg
mul
das
jmp
mov
lods
push
loope
jmp
sbb
addr16
hlt
cmps
and
push
inc
pop
out
enter
jo
shr
inc
lods
push
sbb
pop
je
cwde
pop
jecxz
das
pop
sbb
push
bound
push
add
loope
icebp
iret
out
test
popw
fbld
repnz
mov
sub
xchg
mov
adc
push
icebp
push
inc
rcr
and
mov
and
add
inc
push
cdq
mov
sub
xchg
mov
icebp
(bad)
adc
stos
and
aam
test
mov
xor
pop
jmp
loope
cmp
mov
fadd
jmp
push
ltr
call
push
hlt
fwait
(bad)
out
inc
xor
push
test
mov
je
jbe
jmp
out
jno
pop
push
cmp
or
jg
xchg
(bad)
pop
sub
push
icebp
jl
adc
sbb
mov
loop
sbb
inc
es
es
cmps
test
rcl
js
jo
in
retf
cmp
sar
jmp
es
mov
add
call
mov
mov
sti
sbb
jbe
add
out
push
ucomiss
cld
xlat
leave
mov
iret
sbb
mov
and
sbb
push
push
(bad)
xor
xchg
and
int
(bad)
jbe
ret
scas
sti
jl
dec
rcl
xchg
shl
adc
idiv
jne
pop
idiv
jb
mov
xchg
popa
sbb
push
pop
sbb
mov
xchg
inc
pop
das
sbb
fisubr
push
loopne
xchg
jl
add
and
hlt
std
cmc
and
cmp
test
or
cs
repz
jge
mov
enter
push
mov
scas
push
in
sbb
inc
mov
dec
and
push
jmp
dec
xchg
lds
sub
dec
jmp
mov
movs
scas
mov
mov
leave
popf
or
ins
dec
hlt
pop
inc
sti
and
sbb
aam
sub
dec
push
cmp
cwde
ins
inc
mov
jne
movs
pop
or
icebp
xor
inc
loopne
out
daa
(bad)
pop
ins
jno
dec
in
bound
mov
adc
push
mov
aas
les
push
(bad)
(bad)
scas
lock
add
mov
in
mov
(bad)
adc
inc
stos
mov
push
push
jp
ret
sub
es
xor
mov
push
ins
dec
dec
in
int3
dec
call
mul
out
and
mov
jmp
cli
push
push
or
clc
pop
push
pop
std
push
add
xor
xchg
in
das
add
stos
push
mov
jle
outs
xor
rcr
inc
nop
loope
xchg
lods
out
pop
push
mov
in
jmp
mov
and
loope
gs
ds
repz
mov
and
add
sub
inc
pop
fcom
mov
arpl
and
jb
repnz
out
xor
inc
xor
repz
mov
int3
or
sbb
pop
mov
and
or
ret
ffree
aas
call
in
or
pop
sub
div
jmp
lea
in
xor
test
sbb
daa
mov
sub
ret
fsubr
xchg
in
and
loopne
pop
mov
imul
in
dec
imul
sub
cmps
cmp
jb
loopne
stos
retf
lds
les
ss
imul
inc
mov
movs
mov
sti
call
sahf
sub
mov
or
movs
shl
cmp
jecxz
icebp
sbb
pop
sbb
or
sbb
test
and
xchg
in
lods
fiadd
pop
test
cdq
(bad)
out
sbb
xor
shr
mov
pop
imul
data16
in
repz
outs
into
stos
ficomp
sar
dec
pop
inc
std
jl
sub
mov
jmp
pop
cmp
jbe
les
pop
in
jg
pop
shl
inc
xchg
int3
mov
or
mov
sahf
or
movs
lods
push
(bad)
jno
popa
fnstcw
inc
nop
call
xor
xor
mov
jmp
in
aas
mov
add
jns
jge
push
or
push
adc
push
out
pusha
fst
cmps
or
aaa
shl
cmps
shl
jecxz
iret
es
out
adc
cmp
cli
mov
or
retf
js
pop
(bad)
in
ror
pop
sbb
jne
push
mov
mov
cli
scas
ins
mov
in
xor
jl
xor
pop
pop
(bad)
outs
pop
sti
mov
sti
jbe
dec
arpl
pop
popa
test
movs
add
pop
sbb
mov
test
aas
jo
sub
cdq
or
ss
sub
sbb
or
sbb
xchg
push
pusha
data16
push
std
dec
sub
xchg
aad
mov
pop
xlat
call
out
sub
test
pop
lahf
pushf
and
data16
js
fwait
adc
add
ss
add
sub
xor
sbb
xchg
jge
ja
sbb
int3
pop
cli
cmp
jb
push
(bad)
aaa
sub
sbb
ja
mov
sub
xchg
fs
or
frstor
fld
xor
fnstsw
xor
inc
out
call
mov
mov
inc
lahf
(bad)
je
inc
stc
mov
sbb
mov
mov
mov
je
rcr
push
dec
pop
ret
jmp
jne
mov
xchg
xor
sub
adc
jnp
sub
test
fisttp
or
sbb
mov
jnp
int
fild
neg
pop
lahf
fild
test
(bad)
cmps
xchg
mov
pop
in
dec
sti
lahf
cmps
pop
dec
nop
imul
push
call
int3
sbb
sti
add
fst
ror
call
repnz
ins
sahf
inc
jbe
xor
sub
bound
in
in
pop
jg
loopne
fbld
sti
adc
test
movs
pushf
inc
push
push
dec
jmp
aam
sbb
mov
cmp
lods
adc
push
sub
sbb
mov
dec
pop
std
dec
sti
push
sbb
pop
and
movs
adc
pop
sub
pop
mov
sbb
nop
jmp
je
icebp
adc
call
jns
cmp
add
xchg
cmps
sbb
sbb
daa
and
scas
movs
fcomp
inc
jl
loop
xchg
fst
add
add
sbb
leave
test
and
lahf
ins
pop
int3
adc
dec
loope
aas
or
cmps
pop
ja
dec
and
movs
bound
in
lahf
clc
pop
fldenv
fistp
push
adc
scas
fld
mov
or
sub
call
pop
psubsb
push
jl
dec
test
inc
mov
stos
out
and
xchg
mov
idiv
ins
shl
lahf
jne
ss
loop
es
daa
or
sbb
cmp
jbe
fbstp
pop
aam
std
xchg
shl
inc
sub
fst
jg
adc
in
inc
push
dec
xor
(bad)
xchg
add
repz
push
loop
jl
scas
dec
and
ds
or
jbe
inc
je
sub
fsub
cmc
xor
fs
ret
pop
in
imul
pop
and
cld
sbb
mov
cmp
ret
ret
inc
sbb
xchg
cmp
xchg
mov
in
xor
popa
in
repz
jo
icebp
jge
sub
sbb
std
pop
push
mov
ret
repz
jge
jge
lock
xor
xlat
int3
nop
inc
push
mov
lahf
(bad)
xchg
pop
mov
sahf
fist
ins
cs
cmps
xchg
das
lods
out
xchg
fadd
jecxz
dec
and
sub
ficom
sbb
push
pop
push
dec
jge
retf
inc
fcmovnu
adc
cs
repz
xchg
pushf
iret
mov
push
rol
frstor
cwde
idiv
xchg
mov
fwait
mov
pop
mov
fstp
adc
ins
or
push
rol
movs
adc
mov
out
mov
fst
pop
cmps
xchg
ja
gs
mov
ins
ins
cmp
jae
(bad)
jl
cmps
mov
sbb
iret
jmp
xor
mov
repz
stos
xchg
fcom
push
repz
jge
xor
lock
fcom
sbb
inc
xchg
or
xor
mov
aas
out
mov
rcl
jmp
push
shl
mov
mov
(bad)
test
sub
jp
call
sti
data16
inc
mov
pop
push
pop
fcom
push
fwait
ss
cmp
push
mov
sub
mov
add
bound
sbb
bound
rdpmc
mov
cmp
retf
fadd
push
dec
das
es
cmp
xchg
jo
sub
in
int
dec
mov
push
and
mov
inc
xchg
repz
stos
loope
and
sub
push
out
imul
xor
pop
jmp
add
(bad)
jecxz
movs
xchg
repz
sar
sbb
fnsave
mov
std
pop
inc
cld
push
shr
pop
mov
add
push
add
bound
aaa
retf
jg
jb
sbb
daa
rol
xor
mov
cmp
outs
hlt
push
dec
push
pop
js
in
adc
jecxz
mov
loope
jmp
bound
adc
push
sub
sub
outs
sbb
nop
(bad)
shr
or
iret
push
xchg
inc
adc
pushf
movs
xor
lods
and
adc
inc
cmp
push
mov
xchg
sbb
das
sbb
shl
cmp
or
mov
cdq
xor
inc
mov
pop
sbb
stc
pusha
jae
cmp
scas
cmc
inc
fbld
(bad)
jg
ins
fimul
outs
and
cli
pop
push
sbb
and
ins
les
xor
sbb
outs
xchg
xlat
bound
imul
push
push
and
in
jmp
cwde
out
fwait
aad
adc
mov
lahf
int3
std
sub
lahf
imul
loopne
sub
(bad)
cmc
fisubr
mov
and
fadd
pop
fs
mov
gs
jmp
repnz
fs
sub
xor
sbb
mov
sub
jecxz
loop
loopne
sbb
fnstsw
pop
movs
pop
pop
jmp
cmp
sub
pop
pop
out
pusha
cld
mov
int3
jmp
and
addr16
jp
sar
ror
push
xor
aaa
ins
repz
jne
repnz
popf
in
inc
out
sbb
xchg
mov
jo
sbb
into
push
sbb
sti
pop
or
jecxz
pop
out
out
fcomp
sti
mov
or
mov
mov
rcl
and
jge
in
fisub
popf
adc
sbb
in
pop
repz
cwde
aam
shl
sti
fstp
jg
out
call
dec
sti
jne
add
in
fmul
pushf
sbb
xchg
in
sub
pushf
pop
repz
loopne
(bad)
cmp
mul
cmp
pop
sbb
fst
std
add
ins
outs
push
pop
mov
cli
pop
loopne
sahf
in
arpl
and
pop
sbb
cmp
inc
in
aad
cmp
cmp
rcr
jne
fs
dec
push
scas
mov
jg
dec
(bad)
xor
sub
dec
pmulhuw
pop
cmp
sbb
mov
inc
ret
xchg
fidivr
fdivr
adc
mov
dec
push
jge
xchg
fdivr
loop
xlat
sbb
jecxz
cdq
pop
out
xor
ss
fidiv
ds
sbb
or
aam
int
jge
mov
bound
ror
inc
add
arpl
mov
push
sar
cld
popa
std
ins
popf
jmp
loope
xchg
inc
arpl
cdq
out
aas
xchg
pop
test
lods
and
shr
imul
sahf
out
adc
(bad)
scas
sbb
test
adc
cmc
das
cmp
jns
push
pop
lds
xor
xchg
xor
or
bound
mul
fimul
and
mov
fsubp
popf
inc
push
push
adc
nop
rcl
xchg
iret
mov
cmp
dec
sbb
jg
(bad)
es
imul
(bad)
mov
jmp
(bad)
jmp
ins
mov
adc
cmp
pop
inc
nop
mov
and
sub
mov
xchg
push
cmp
jb
and
jmp
sbb
xchg
int3
jle
mov
push
jo
iret
jb
pop
xor
jns
jbe
pop
cmp
cs
cs
pop
out
lods
pop
std
ins
add
or
fs
and
movs
fdivr
mov
shl
repz
adc
sbb
retf
aad
or
pop
sbb
loop
mov
jg
ins
inc
push
push
adc
(bad)
jmp
aaa
fbld
xor
retf
pop
cmps
push
jne
and
xor
ror
sub
out
and
sub
mov
popa
mov
inc
icebp
add
cmp
mov
(bad)
pop
and
and
xor
(bad)
ds
mov
mov
jns
add
jnp
mov
sti
push
and
adc
inc
not
xlat
call
add
add
hlt
add
ret
movs
pop
pop
push
loopne
(bad)
fcomp
and
ins
in
aam
sbb
data16
std
pop
push
(bad)
in
dec
std
push
fcom
add
loopne
es
ins
std
and
cs
in
into
add
sub
in
add
jp
fsubr
je
mov
sbb
jbe
pop
in
int3
fucom
pop
in
mov
pop
dec
xor
xlat
mov
and
fcom
dec
ss
pop
jbe
sub
pop
mov
xor
sbb
jbe
adc
jp
pop
outs
xchg
push
dec
inc
mov
(bad)
imul
push
add
inc
call
xchg
jbe
sbb
and
int
push
pop
jge
stos
js
in
fbld
popf
arpl
pop
(bad)
fisubr
and
clc
aam
jo
jo
js
in
jecxz
ins
jns
out
sbb
lea
push
sahf
add
int3
(bad)
in
fdivr
or
sbb
test
fs
loopne
sbb
in
jbe
xor
lea
pusha
(bad)
push
repz
cld
in
(bad)
or
fstp
jg
cmps
fs
call
and
sahf
in
fstp
sbb
in
pop
inc
cld
sti
xor
sub
and
adc
ds
push
pop
ds
call
push
mov
pop
shl
in
call
lahf
mov
out
icebp
dec
in
scas
pop
fdivr
sbb
fs
and
pusha
and
pop
push
in
fwait
dec
cwde
in
jp
sbb
mov
(bad)
repz
sti
push
aam
repnz
aad
adc
in
idiv
cli
sub
xor
stc
out
dec
ss
mov
ins
xchg
fnstenv
push
xchg
adc
and
dec
scas
jb
pop
cli
jecxz
push
dec
retf
test
push
out
fadd
loope
push
repz
and
cmps
xchg
je
sub
and
push
arpl
mov
ins
stc
pop
jmp
jo
sbb
cdq
rol
pavgw
in
xchg
outs
jo
jbe
out
sub
push
ret
pop
jl
mov
cmp
test
icebp
je
mov
std
ret
pushf
cmp
xor
push
imul
jmp
sub
pop
sbb
fsubr
mov
ds
pop
jle
pushf
or
add
and
imul
jl
xor
xchg
fsubr
adc
and
mov
sbb
mov
aam
ret
push
cmp
xchg
movs
daa
pop
add
iret
mov
adc
cwde
enter
dec
cmp
add
xchg
cwde
jmp
popa
jbe
xchg
add
jbe
ins
rep
sar
push
jge
and
cmp
ds
push
retf
cld
sti
mov
fwait
mov
add
push
add
iret
or
in
sub
push
xlat
sti
movs
xchg
movs
jp
leave
shr
in
inc
xchg
push
cmp
mov
mov
popa
hlt
xchg
pushf
add
pop
cmp
fst
jecxz
inc
es
mov
jb
mov
in
fbld
retf
pop
fst
mov
js
xor
(bad)
inc
fcomp
in
push
push
jecxz
mov
pop
xor
retf
icebp
pop
test
pop
(bad)
push
imul
xchg
xor
or
mov
xchg
in
in
mov
std
ret
push
pop
arpl
cld
cmp
sbb
ret
jg
cmp
std
push
not
push
movs
push
aas
inc
out
mov
dec
loope
rcr
push
xchg
and
xchg
and
pop
cmp
cld
sbb
ror
cld
push
xchg
cmp
loope
es
mov
and
mov
shl
push
jge
lods
fild
sbb
(bad)
and
mov
iret
repz
fprem1
or
mov
xchg
add
data16
aam
fmul
jmp
fwait
jae
push
pop
xor
data16
cmp
sbb
pushf
or
lods
xor
lea
push
sbb
sbb
test
aad
movs
js
test
add
dec
add
mov
imul
int3
fistp
sti
jbe
mov
push
inc
mov
push
pushf
xor
and
sub
cmovo
enter
jp
inc
cmps
stos
ins
pop
pop
mov
in
push
std
jle
scas
(bad)
leave
jge
sbb
sbb
push
imul
ins
add
arpl
inc
js
cwde
dec
mov
pop
fistp
sti
pop
xchg
nop
jecxz
je
ins
push
in
jmp
inc
pop
sahf
or
rcr
cmp
cmp
xchg
pushf
cld
jmp
nop
ins
cmp
aaa
dec
retf
sti
pop
hlt
idiv
pop
jnp
pop
jecxz
jmp
fstp
cwde
out
push
adc
into
cs
add
shl
push
fimul
ja
(bad)
mov
mov
sbb
movs
cs
cli
mov
in
or
pop
data16
lods
xlat
add
inc
jle
dec
aam
cs
imul
movs
push
xchg
test
adc
(bad)
movs
out
ins
xlat
dec
cs
fisubr
repz
xchg
(bad)
mov
jae
jns
push
test
push
pushf
add
add
dec
cmp
fmul
mov
push
inc
daa
fs
cli
sbb
outs
stc
mov
and
or
jae
lods
pop
mov
inc
cld
sbb
outs
fmul
fld
scas
jae
jns
add
dec
retf
sahf
sbb
shr
test
or
sbb
push
lahf
jge
test
mov
sbb
or
cmp
or
jns
pop
sbb
cmp
adc
fwait
dec
dec
(bad)
pop
pop
ins
aam
std
dec
mov
shr
neg
popf
mov
ja
out
retf
xchg
test
or
stc
mov
cmp
or
cmp
sbb
sbb
(bad)
ficomp
add
xor
xchg
and
outs
sti
dec
addr16
jae
push
mov
dec
in
and
jl
movs
call
inc
sbb
cmp
movs
std
call
das
js
clc
mov
mov
xchg
repnz
adc
loop
push
out
jbe
in
sbb
addr16
jns
mov
fdivr
pop
data16
add
aas
loopne
loop
fiadd
aam
aad
(bad)
(bad)
fwait
out
in
in
jmp
fdivrp
into
jl
and
stc
mov
mov
shl
in
(bad)
jno
lods
inc
dec
cmp
add
and
fisub
fcomp
cmps
ins
data16
xchg
or
dec
bound
mov
sbb
xor
sti
outs
popa
xchg
cmp
mov
pop
cld
mov
sub
lea
aad
std
jb
mov
push
jns
enter
mov
xlat
lods
int3
jo
xchg
sbb
popf
out
shl
xchg
jecxz
movs
cwde
test
pusha
inc
sbb
cmp
imul
jmp
sbb
je
std
loope
ffree
clc
iret
dec
and
jle
and
push
sbb
cli
in
call
ficomp
fnsave
lods
out
in
and
shl
bound
xchg
xchg
std
js
cli
or
jno
mov
adc
jns
pop
gs
pop
xor
or
cmps
pop
je
shl
sbb
mov
daa
popf
stos
(bad)
mov
xchg
push
jmp
shl
pop
mov
cmps
into
lock
sqrtps
push
lods
stc
sub
inc
sub
jb
sub
cmc
cmp
dec
and
ins
ret
imul
stos
xchg
int3
sar
data16
mov
mov
jo
sub
mov
ds
mov
clc
shrd
xor
push
pop
cld
xchg
pop
pushf
xor
cld
jecxz
int
jne
call
hlt
sub
mov
jbe
pop
fsubr
pushf
imul
popf
inc
ror
or
das
pop
mov
push
adc
outs
lods
jb
pop
retf
popf
(bad)
and
fwait
jno
jmp
lahf
ins
frstor
inc
or
cld
push
xchg
sbb
sbb
mov
enter
loopne
sbb
dec
sbb
dec
push
in
call
cld
jmp
or
je
pop
mov
jg
pop
leave
addr16
and
scas
clc
dec
pop
sbb
sbb
cmp
xor
cs
cld
sbb
pop
mov
pop
mov
mov
aaa
lahf
int
add
xchg
mov
sub
jae
xlat
sbb
pop
int
iret
(bad)
std
scas
jbe
pop
mov
shl
int3
retf
mov
repz
out
and
sbb
arpl
ret
pop
movs
loope
sbb
cmove
adc
and
mov
mov
jge
dec
mov
int3
imul
sti
clc
call
dec
iret
pop
or
or
arpl
cmps
retf
(bad)
sub
inc
clc
inc
in
mov
push
mov
fld
push
fsubrp
adc
sub
movs
xor
sahf
pushf
xor
mov
xor
fsubr
mov
out
es
test
sti
inc
push
(bad)
call
dec
inc
mov
fs
inc
jge
out
in
inc
mov
test
leave
jge
(bad)
ins
in
xlat
fs
pop
clc
push
mov
pop
cmp
stos
shl
jne
push
ins
add
popf
cs
fst
aas
push
fadd
and
mov
jge
sbb
jecxz
(bad)
inc
mov
pop
cld
jecxz
mov
cmp
jmp
sub
addr16
jmp
push
pushf
test
cmps
sbb
int3
hlt
clc
jl
ins
jmp
mov
out
mov
sbb
fdivr
fdivr
mov
mov
or
push
fs
pop
sbb
aam
mov
enter
inc
clc
into
ins
xchg
xor
test
inc
inc
imul
popa
add
sahf
out
aad
dec
ja
cs
push
(bad)
popa
ins
sbb
or
dec
outs
and
jb
js
sub
sbb
loopne
cld
int3
sbb
cmp
daa
pop
cmp
hlt
cmp
mov
mov
xchg
cmp
fstp
xlat
jmp
push
add
add
pusha
sub
sub
lahf
jl
(bad)
fist
sahf
and
fmulp
jp
xor
sub
xchg
int
xchg
sub
loope
jb
mov
stc
je
mov
jge
and
(bad)
pushf
mov
shl
jmp
out
out
mov
mov
inc
sbb
pop
push
jmp
cmp
xchg
xchg
cmp
sti
neg
fdiv
ins
mov
in
push
loope
retf
mov
inc
and
pop
fwait
jno
js
cs
sbb
fs
fdivr
ins
je
test
pop
loop
sub
sbb
fcomp
adc
ja
fild
loop
sbb
frstor
mov
sbb
mov
ins
inc
cmc
(bad)
mov
or
outs
cmp
ins
inc
imul
movs
sub
in
test
clc
lahf
ret
das
stc
push
int3
inc
movs
pop
xchg
jg
sbb
pushf
push
inc
call
cmp
adc
mov
iret
aad
xor
sub
in
jmp
pop
xchg
ret
outs
sub
inc
sub
fcmovbe
hlt
js
cli
add
pusha
push
jl
ins
jbe
sbb
cs
arpl
fucom
adc
push
mov
push
and
repz
idiv
sti
outs
cmp
outs
ins
sbb
sub
maxps
pop
(bad)
jg
cs
cwde
(bad)
sti
mov
cmc
cwde
jmp
dec
and
lods
stc
add
dec
fsub
movs
(bad)
or
cld
cmp
frstor
inc
mov
cmp
xchg
scas
dec
out
xchg
sti
xchg
test
lahf
cld
pop
ror
pushf
adc
sbb
pushf
and
fwait
inc
iret
pop
adc
jl
hlt
das
sbb
call
mov
pop
mov
push
jne
dec
dec
xchg
es
test
adc
mov
cdq
test
out
xchg
xchg
adc
(bad)
out
mov
fsubr
push
sti
imul
test
dec
inc
jbe
sti
(bad)
addr16
lahf
test
ja
sbb
cmp
fld
fmul
mov
and
aad
aad
and
xchg
inc
mov
or
dec
xchg
out
inc
xchg
jle
cmp
cdq
aam
xor
jmp
jg
inc
pop
pop
mov
imul
mov
add
pop
xlat
mov
mov
add
and
cwde
fsubrp
(bad)
dec
xor
inc
(bad)
lods
push
jle
sub
jb
out
cmp
ja
or
jo
fsub
add
(bad)
mov
xor
and
cmp
jae
fisubr
fnstsw
or
(bad)
adc
or
leave
rcr
cwde
or
cmps
es
pop
cdq
pop
push
or
and
fsubr
stc
mov
scas
mov
aam
mov
daa
js
cmps
inc
es
push
jge
jno
(bad)
std
inc
and
fwait
add
test
cmp
push
pushf
in
gs
pop
pop
mov
sub
push
xchg
movs
(bad)
fmulp
outs
mov
mov
sahf
jge
and
pop
(bad)
in
(bad)
int3
and
jno
fsubr
aam
js
sub
mov
mov
int3
xor
int3
jecxz
add
mov
dec
cmp
or
sbb
je
xor
jmp
sbb
shl
int3
jl
mov
(bad)
loope
mov
out
rcl
sub
retf
cdq
pop
cli
retf
cmp
or
imul
lods
sar
aas
sbb
pusha
fisubr
mov
les
je
(bad)
cmp
mov
stos
xchg
popf
movs
(bad)
xor
cmp
adc
xchg
xchg
or
inc
dec
ds
or
add
mov
pushf
xor
jl
sti
loope
pop
xor
je
adc
into
xchg
pop
loopne
mov
sbb
xchg
sti
mov
sub
pop
test
xor
pushf
data16
aas
fs
jmp
add
ss
adc
cmp
sub
push
jmp
ins
sub
adc
sbb
jmp
inc
daa
test
(bad)
stc
sbb
(bad)
int3
in
sbb
push
aas
mov
inc
xor
adc
add
mov
icebp
xchg
sbb
pop
push
loop
mov
test
jle
bound
sahf
mov
xor
fnstsw
aas
cmp
inc
(bad)
pop
in
jb
das
out
pop
cmp
sbb
out
mov
sbb
mov
jecxz
cmp
add
fadd
xlat
aaa
add
and
push
xchg
std
jmp
or
arpl
out
mov
jmp
add
retf
xor
adc
hlt
in
add
pushf
and
ins
sub
out
test
ins
rcr
pop
bound
mov
cli
mov
pop
sbb
loopne
adc
jbe
in
push
pop
sti
sub
xchg
iret
pop
call
sbb
sub
and
sbb
stc
cli
cmc
ror
sub
add
jge
adc
sbb
pop
aad
or
outs
jbe
inc
js
xchg
jl
clc
inc
mov
je
sar
out
sbb
shl
and
add
and
mov
or
dec
xor
dec
imul
fidiv
bound
je
sub
jle
and
pop
push
mov
xchg
shl
sti
and
aaa
cld
jne
repz
retf
add
inc
fdiv
mov
data16
shl
mov
jle
lds
jle
(bad)
mov
mov
out
mov
outs
lea
stos
ins
int
sub
test
jp
jne
jl
inc
sbb
push
ins
test
std
pop
mov
popa
push
xchg
and
(bad)
ss
cdq
adc
jne
shr
je
icebp
ret
add
pop
pop
aad
fadd
jmp
and
and
xor
out
sbb
stos
mov
jl
fiadd
jl
push
jmp
inc
fdivr
es
cmc
and
mov
mov
mov
jo
and
cli
add
or
xchg
shl
add
push
mov
sahf
jnp
in
dec
dec
fcmovb
sbb
loope
adc
adc
aad
repz
div
sub
mov
xchg
movs
adc
stc
pop
jp
mov
sub
sbb
sbb
scas
pop
mov
xor
sub
sbb
mov
sub
cmp
jmp
test
adc
aad
ds
sub
fst
mov
mov
jge
add
mov
imul
jb
into
dec
mov
fldenv
and
mov
loop
data16
xchg
mov
or
xchg
push
add
add
pop
loope
adc
lds
xlat
sbb
lahf
loope
pop
mov
outs
jnp
jmp
std
pop
pop
mov
mov
sbb
ret
rol
into
inc
xchg
fsub
mov
fisub
mov
push
int
cmp
imul
inc
in
addr16
jb
jg
jge
mov
fwait
mov
outs
and
cmp
ins
or
popf
xchg
jo
mov
aad
jle
ja
mov
cmp
push
xchg
mov
push
jns
cdq
test
dec
fnstsw
mov
outs
and
or
sbb
retf
sbb
paddd
gs
jmp
sbb
cmp
cmc
xor
je
mov
mov
push
xchg
movs
gs
pop
jmp
mov
adc
cmps
sub
pop
movs
sbb
imul
fmul
cmp
jl
pushf
jbe
pop
pop
ds
retf
cmc
sti
push
repnz
es
shl
sbb
sbb
adc
xor
mov
in
xchg
jmp
jg
ins
xor
and
mov
jl
mov
or
push
sbb
sub
pusha
adc
pop
mov
sbb
jmp
dec
fsubr
jg
rdmsr
js
sbb
sub
xlat
ja
inc
sbb
out
inc
(bad)
fldenv
pop
ss
jbe
pop
and
xchg
push
sti
add
int
dec
jno
out
inc
jl
fs
mov
fnstsw
jmp
mov
adc
jl
mov
adc
and
stc
pusha
add
sbb
push
sbb
ins
xor
sbb
arpl
cmp
imul
out
sahf
sub
mov
sti
imul
mov
pop
mov
cmp
adc
inc
xor
test
cmp
push
mov
dec
cmp
mov
sbb
dec
xor
js
std
jmp
jno
es
test
sbb
loop
test
mov
sar
and
iret
jmp
pushf
test
cmp
and
fdiv
lock
push
or
and
mov
in
sbb
jg
mov
jl
add
shl
ins
xchg
mov
in
dec
cld
fs
jl
mov
shr
mov
outs
dec
ins
and
adc
push
ds
and
mov
jecxz
and
add
jmp
ins
push
jo
fs
scas
add
pop
stc
push
jbe
fidiv
sbb
call
loopne
push
add
ins
sar
sbb
jg
adc
stc
dec
or
ret
jecxz
xchg
mov
dec
add
es
stc
lea
xor
aas
sbb
int3
ds
das
cld
sti
push
add
pop
sti
xchg
xor
sub
(bad)
mov
fmul
fnsave
and
push
icebp
arpl
stc
vpaddw
xchg
test
in
jne
pop
dec
jmp
mov
xor
in
or
shl
xchg
sub
and
dec
or
pop
and
xor
adc
jno
or
test
add
je
cmp
ss
in
iret
std
or
add
cmp
inc
pushf
call
cli
inc
mov
pushf
add
mov
inc
mov
or
xchg
sub
dec
adc
call
cmp
sbb
std
mov
pop
ffree
(bad)
cmc
mov
add
xchg
push
mov
and
push
or
rol
push
nop
jg
stc
mov
les
mov
imul
cmps
cmp
push
(bad)
jmp
mov
das
pop
into
fbld
or
fnstsw
dec
push
add
mov
lods
sbb
and
pop
shl
stos
sub
mov
push
test
and
(bad)
loop
and
pop
in
ret
in
sub
std
scas
xor
addr16
inc
xor
and
pop
outs
dec
jno
ror
dec
sub
mov
js
pop
iret
jl
jecxz
mov
and
mov
dec
mov
sub
mov
and
out
(bad)
dec
xchg
sub
in
scas
cmp
shl
and
xchg
sbb
inc
pushf
jp
and
and
sbb
sbb
es
adc
mov
and
mov
nop
loope
dec
ins
adc
push
pushf
lea
arpl
pop
or
fdivr
sti
sbb
and
cmp
or
jle
aad
adc
sti
xor
adc
cmp
test
xlat
ins
and
xor
push
pop
ss
pop
cmp
push
out
int
cs
cli
inc
sbb
push
data16
jbe
inc
sbb
aaa
cmc
mov
mov
clc
push
add
mov
repz
mov
mov
cmc
ds
es
arpl
add
fs
fidiv
jl
leave
jp
push
(bad)
dec
sbb
or
jmp
mov
jmp
shl
lds
jns
es
scas
ss
cs
inc
mov
and
and
stc
add
test
dec
xchg
lods
mov
dec
sbb
add
fsubr
cmps
(bad)
and
int
cs
mov
adc
shr
ss
sub
pop
add
test
ins
dec
cld
in
icebp
push
mov
leave
jo
mov
sub
dec
push
jnp
scas
pop
mov
xchg
mov
cmp
out
xchg
imul
jmp
in
std
shl
jl
or
xor
(bad)
iret
sub
sbb
xor
aad
sbb
cmp
(bad)
sti
sbb
sbb
mov
fcmovnbe
pop
in
loopne
adc
xor
push
add
jae
or
in
xor
outs
xchg
add
std
dec
out
ds
xchg
daa
jl
addr16
add
cmps
shl
sahf
scas
lds
jbe
cmp
in
xor
call
jns
sar
cmp
or
in
jne
mov
inc
iret
xor
push
push
rcr
fsub
loope
push
(bad)
int3
mov
push
(bad)
(bad)
jle
icebp
and
xchg
jne
mov
fsubr
fsubr
aam
jg
outs
in
std
aaa
int
pop
jno
push
scas
and
stc
cmps
dec
and
push
jg
jbe
sbb
mov
imul
js
push
lock
test
cmp
or
mov
int
retf
das
pop
cmp
sbb
dec
ins
retf
pop
push
sbb
push
sbb
imul
sbb
out
and
mov
(bad)
jge
loop
xor
sub
inc
aad
pop
mov
push
sbb
pop
jg
xlat
js
cld
push
sub
pop
jmp
lods
cmp
cmc
sbb
ret
push
pop
xor
in
push
jecxz
sbb
fwait
mov
out
std
pop
in
retf
imul
rcr
inc
jmp
mov
pop
xchg
shl
push
cmps
test
repz
xchg
imul
cmps
push
pop
cmp
xchg
sahf
fst
fistp
xchg
outs
cld
repz
xor
cmp
out
shl
into
das
jle
shl
or
and
push
cmps
fldcw
push
js
stos
cmp
or
jo
cmp
jle
outs
call
sbb
mov
(bad)
fdiv
aad
(bad)
sbb
mov
std
pop
sub
sbb
jecxz
(bad)
call
jge
mov
rol
pop
sti
ss
jge
or
pop
sbb
adc
repz
in
sti
pop
sahf
jge
call
dec
adc
scas
jg
loopne
sti
jmp
xor
fst
call
and
inc
jbe
push
ret
hlt
add
pop
xor
mov
(bad)
fcomp
shl
add
mov
adc
fs
pushf
out
adc
fdiv
or
lahf
jle
add
imul
jmp
outs
xchg
add
or
pushf
add
ret
sbb
sbb
mov
add
(bad)
ins
cmc
sub
xchg
scas
and
push
out
clc
and
xor
mov
or
in
in
dec
push
js
jge
repz
int
nop
dec
and
ins
xchg
(bad)
mov
xor
cld
in
pop
ffree
jl
mov
pushf
cld
push
sbb
xor
cli
sti
jne
or
cmp
or
and
jmp
and
mov
add
sti
sub
sbb
mov
inc
xor
cmp
sti
cmp
xchg
pop
sbb
out
in
in
hlt
sub
inc
ins
and
pop
adc
aas
mov
nop
test
cmps
push
or
(bad)
xchg
clts
pop
popf
inc
out
and
and
add
in
mov
mov
cmp
add
dec
jbe
pop
stc
loope
or
in
jbe
push
bound
cmp
mov
jmp
cmps
iret
cmp
(bad)
sbb
pop
mov
sub
push
cmp
xchg
push
adc
xor
and
jecxz
inc
repz
inc
push
push
loop
movs
sub
xchg
sbb
stc
fadd
jl
pop
int3
inc
jb
push
push
ja
leave
in
jne
or
aaa
inc
fwait
inc
in
out
pop
xor
out
idiv
jecxz
adc
fnstsw
cld
mov
rcr
cmps
jg
ja
pushf
xchg
call
sahf
pusha
inc
mov
sbb
inc
cmp
sbb
jmp
sbb
loopne
mov
ror
push
pop
push
mov
mov
or
sahf
pushf
into
enter
push
sbb
dec
mov
add
xchg
mov
add
jecxz
jb
in
xor
and
ds
or
std
mov
test
sti
rol
mov
inc
cmc
sub
push
pop
in
adc
scas
div
jl
jae
xor
sbb
jb
fisubr
out
stos
mov
or
mov
push
aam
adc
fiadd
pop
xchg
jbe
mov
dec
je
and
xlat
cld
popa
shl
jg
out
xchg
and
add
lods
ret
scas
aam
bound
adc
dec
push
push
cmp
repnz
(bad)
sub
std
mov
sahf
push
fstp
cld
lds
iret
scas
jle
xlat
repz
xchg
mov
sti
enter
mov
xchg
ins
sti
(bad)
jbe
mov
xchg
call
dec
fsubr
repnz
sub
(bad)
in
addr16
ins
ins
pushf
cld
retf
sub
sbb
es
outs
es
push
iret
cmp
add
pop
in
scas
pop
std
inc
mov
inc
lea
jo
push
pop
call
cmp
pop
scas
das
repz
sbb
mov
popf
fadd
jns
movs
push
cwde
ss
xchg
fsub
mov
jge
mov
cs
aam
test
in
stos
and
jmp
mov
xor
inc
push
jmp
std
ss
xor
and
popf
jbe
add
test
lods
push
sar
ror
adc
out
and
xchg
out
adc
aam
push
cs
xor
jl
mov
lods
gs
mov
jo
imul
test
and
test
and
xchg
xchg
jle
inc
adc
mov
gs
repz
push
push
ret
fs
inc
int
jge
cmps
xor
into
inc
out
sub
jl
inc
rol
and
movs
xchg
push
xor
jns
mov
cmovnp
cwde
ss
and
(bad)
xor
add
xchg
adc
cmp
pop
outs
add
inc
sbb
(bad)
cmp
aad
jns
mov
loopne
in
icebp
not
popf
imul
jmp
aaa
int3
nop
mov
and
add
cld
sbb
fwait
and
fadd
xchg
je
cmp
adc
out
inc
mov
rol
add
mov
and
aas
mov
xchg
(bad)
pop
out
or
mov
std
rcl
sbb
dec
mov
stos
es
fdivr
mov
and
cmp
or
dec
sub
std
push
and
add
jge
cmp
jmp
sti
jmp
dec
pop
sbb
aam
enter
mov
sti
dec
jge
mov
sti
shr
jl
push
adc
dec
and
inc
enter
ins
jbe
sbb
and
jmp
inc
sbb
or
add
cs
jb
rcl
dec
dec
(bad)
pop
push
icebp
or
test
pushf
add
and
jae
call
cmc
cmc
es
add
fiadd
sbb
mov
int3
imul
cli
or
sbb
dec
ins
and
jmp
in
mov
jmp
push
or
xor
push
outs
cmp
ror
cmp
or
mov
fwait
mov
push
push
mov
int
mov
mov
popf
js
scas
je
call
and
ret
mov
cmp
sar
push
jg
sub
xchg
(bad)
pop
ror
call
xchg
pushf
cld
or
outs
pcmpgtd
jp
mov
jle
mov
(bad)
xlat
push
mov
pop
out
sub
sahf
aaa
push
fsubr
scas
xlat
or
dec
add
test
mov
ret
inc
xchg
mov
popa
cmp
mov
add
sahf
mov
jmp
jg
test
js
cld
(bad)
fstp
xor
ins
or
add
mov
cmc
mov
pusha
aaa
cmp
or
sub
pop
sti
in
sbb
jo
ins
push
call
add
dec
inc
ins
std
ja
adc
call
pop
and
and
pop
(bad)
push
xchg
ins
cwde
rcr
idiv
push
jo
loopne
js
mov
jp
ss
dec
in
pop
push
enter
outs
mov
dec
xor
call
xchg
in
movs
xor
pop
push
jo
and
mov
jg
inc
add
daa
add
mov
push
pop
mov
or
sbb
idiv
int3
push
sbb
sar
push
aas
jecxz
in
xor
cmp
pop
ins
sbb
movs
repz
dec
cmc
out
in
pusha
lods
sbb
inc
add
or
out
mov
fdivp
adc
call
pop
inc
sbb
cmp
jl
lods
and
movs
pop
jl
mov
movs
pop
jl
mov
movs
pop
jl
mov
hlt
jl
mov
pop
hlt
mov
out
mov
call
mov
pusha
jmp
jb
jge
dec
(bad)
adc
xchg
xlat
int3
push
xor
cld
jmp
cmp
jbe
stc
jl
lock
adc
imul
pop
test
mov
or
mov
mov
ror
jne
ret
inc
out
or
movs
addr16
jecxz
bound
sbb
sbb
sbb
jne
mov
jp
mov
dec
and
ins
mov
int
jmp
int3
imul
inc
xchg
jns
hlt
shl
test
mov
adc
in
mov
lods
sbb
daa
ins
movs
add
adc
hlt
out
pusha
test
fsub
into
clc
cmps
xchg
inc
adc
add
ror
pop
ret
dec
imul
or
cld
sbb
mov
add
or
inc
jg
cli
adc
lods
jns
xchg
dec
sbb
or
xor
fwait
push
lahf
mov
jns
xor
xchg
cmp
pusha
and
sbb
xchg
adc
cwde
outs
or
cmp
nop
das
rol
retf
xor
mov
imul
dec
mov
in
fistp
(bad)
dec
rcl
loope
inc
fdiv
mov
cdq
test
ret
pop
add
movs
lods
dec
pop
cmp
cmc
sbb
out
ss
mov
pushf
call
fsubr
mov
jns
mov
push
int3
sbb
pushf
int
in
mov
fst
mov
outs
mov
and
sbb
lods
mov
push
pop
ficomp
mov
jo
mul
in
call
dec
adc
outs
movs
stc
(bad)
mov
add
cmp
fcom
add
dec
push
cld
pop
pop
mov
hlt
pop
mov
sbb
xor
xor
int
mov
xlat
xor
add
retf
js
xchg
add
mov
mov
ret
imul
out
into
(bad)
out
xchg
sub
or
and
push
push
imul
inc
mov
mov
mov
dec
shl
sahf
dec
movs
cmp
xor
daa
test
pop
inc
dec
scas
movs
mov
out
xor
mov
retf
sbb
fs
mov
xchg
sub
cld
pop
xchg
into
dec
push
test
outs
cmp
mov
or
rcl
stos
sti
add
ins
sub
test
inc
clc
pop
mov
jle
mov
add
sub
pop
xchg
test
outs
cmp
add
or
iret
sub
mov
arpl
sbb
mov
sub
dec
enter
mov
push
or
cmp
add
cmps
add
push
pop
inc
add
inc
add
(bad)
hlt
int
cmp
les
int
push
call
mov
xchg
(bad)
(bad)
xor
stos
push
jge
push
cmp
push
call
jb
adc
dec
xchg
xchg
(bad)
jmp
add
rcl
inc
lds
jle
into
in
dec
sub
mov
ror
sbb
lea
mov
xchg
push
jnp
adc
and
sar
adc
add
pop
shl
mov
into
inc
in
xchg
outs
xchg
xchg
rcl
push
(bad)
jmp
test
outs
pop
lea
test
mov
mov
dec
mov
ret
lock
mov
ja
add
add
xor
mov
bound
cdq
sbb
in
mov
pop
pop
pop
inc
pop
sbb
adc
pop
jb
mov
mov
and
and
in
mov
ins
fxch
icebp
dec
xchg
mul
out
add
sub
cmp
and
xor
sub
les
and
cmps
(bad)
push
bound
ins
jmp
retf
idiv
repz
mov
push
ds
mov
mov
stos
icebp
(bad)
xchg
mov
push
lods
lds
cld
xor
jbe
push
sbb
or
sbb
and
(bad)
inc
pop
cmp
ins
pop
(bad)
ss
xor
adc
inc
mov
add
xchg
and
jnp
pop
adc
mov
rep
sti
sbb
js
mov
movs
pop
push
mov
fild
ror
sub
adc
int3
ret
je
mul
jmp
sbb
(bad)
std
sub
retf
test
push
jae
xchg
cld
ficomp
and
sbb
pop
push
retf
call
test
pop
sbb
push
push
jmp
fstp
sub
pop
cmp
ret
fnstcw
(bad)
ds
pop
out
sub
fist
dec
outs
sbb
sub
sbb
jg
inc
mov
mov
push
hlt
jmp
repz
sub
sub
push
icebp
bound
(bad)
and
and
out
js
shl
push
ficom
out
or
mov
(bad)
in
in
sti
bound
pop
pop
sbb
sub
push
jp
mov
call
cs
and
sti
xchg
or
pop
push
xor
push
fcomp
dec
mov
fst
ins
push
leave
aam
neg
add
sbb
dec
xor
mov
push
inc
push
inc
push
inc
jmp
mov
ficom
inc
jl
sbb
pushf
mov
scas
xlat
cmc
cmp
jge
cmp
cmps
mov
mov
ins
push
jbe
test
icebp
inc
jecxz
fs
cli
adc
push
daa
cld
(bad)
inc
add
out
in
retf
ja
pop
(bad)
inc
mov
ret
sbb
sbb
retf
jecxz
repz
inc
push
push
add
adc
mov
sub
lea
loope
jmp
mov
mov
loopne
pushf
mov
mov
fwait
push
pushf
push
js
mov
nop
push
cld
jmp
xor
repz
pop
shl
dec
dec
mov
xlat
pop
xchg
sbb
sub
adc
retf
push
mov
(bad)
add
mov
xchg
mov
xor
xor
ret
sbb
cld
sbb
mov
adc
inc
cwde
ret
(bad)
pop
iret
and
fs
in
inc
jp
in
mov
jg
xor
mov
shl
pop
xchg
push
sbb
ss
in
push
cmp
adc
cmp
pop
std
xchg
retf
push
push
neg
pop
push
mov
fisubr
loope
xor
and
leave
sbb
int
test
lock
fdiv
xor
mov
ds
dec
xor
push
into
inc
xchg
pop
in
jge
in
inc
mov
pop
inc
daa
xchg
and
sbb
sub
(bad)
fs
push
jb
add
xor
add
dec
xchg
mov
and
mov
aad
push
mov
lahf
jmp
movs
iret
or
sub
retf
std
jne
and
lods
test
sub
shl
out
and
aam
inc
icebp
das
xchg
mov
or
lock
outs
push
xchg
mov
inc
sub
mov
sub
movs
xchg
mov
mov
and
dec
shl
pusha
mov
push
call
and
mov
jp
pop
jmp
les
inc
pusha
mov
stos
mov
pop
mov
scas
pop
out
in
push
pusha
push
jmp
popf
push
xchg
dec
addr16
add
pop
adc
ficomp
in
dec
arpl
or
hlt
fcomp
xor
das
adc
push
(bad)
iret
mov
test
lock
in
iret
fdiv
pop
mov
mov
and
jb
retf
xchg
adc
pop
xchg
mov
or
arpl
add
xchg
xor
and
out
sbb
ins
mov
jo
test
loopne
xchg
or
mov
ins
adc
out
or
push
pusha
fs
pusha
(bad)
jmp
or
repnz
stc
pushf
or
sti
inc
sbb
or
pop
xchg
or
dec
cmp
inc
add
push
inc
pop
cli
xor
imul
clc
sti
pusha
mov
(bad)
fdiv
ja
dec
cmp
mov
or
inc
cmp
xor
xchg
xchg
cmp
xor
loopne
gs
lahf
sbb
enter
pop
icebp
sti
fwait
xor
sti
sub
int3
ss
push
jmp
scas
sti
call
push
cmp
imul
pop
jp
mov
sub
fsubrp
jmp
(bad)
xchg
into
sub
pop
imul
mov
push
fisttp
sti
int
fs
repz
fsubr
pop
mov
pop
(bad)
loopne
in
cmps
jle
or
dec
dec
adc
repnz
and
sub
dec
push
fbstp
jne
cmp
test
aas
and
sbb
loope
sbb
ins
mov
lods
or
xchg
fst
sbb
sub
sti
push
cmp
pop
fisubr
repz
stos
jecxz
sub
xchg
sbb
dec
inc
pop
add
xor
lods
outs
mov
clc
(bad)
or
loop
jmp
cmc
add
ins
pop
and
cmc
sti
hlt
icebp
loopne
data16
push
ret
test
xor
movs
fidivr
or
aad
fsubr
sbb
and
xchg
mov
add
sub
std
cmc
or
cmp
in
dec
mov
lods
lods
add
push
dec
sub
jg
add
or
inc
sub
dec
xchg
sti
sub
lods
mov
std
cmp
and
push
mov
push
jg
lahf
outs
sub
inc
sbb
mov
iret
mov
fild
adc
push
movs
cld
dec
(bad)
ds
int3
pop
jecxz
iret
and
jge
test
jno
test
in
sbb
lahf
xchg
pop
pop
sbb
pushf
in
add
sub
cmp
repnz
jge
or
out
jg
jmp
inc
nop
inc
mov
sub
jbe
loopne
inc
pop
inc
sbb
mov
xor
or
push
sub
inc
ins
fmul
in
or
mov
mov
(bad)
pop
das
dec
pop
jmp
fild
cld
jge
and
shl
imul
es
sar
sub
inc
lahf
xchg
sbb
sti
add
pop
sbb
xchg
ror
lods
and
mov
hlt
retf
data16
cs
pushf
adc
(bad)
stc
jle
or
sub
cs
scas
jle
add
xchg
sbb
add
outs
(bad)
cmp
mov
dec
mov
movd
in
push
hlt
xchg
sbb
jnp
mov
test
push
xchg
ds
xchg
jbe
and
dec
push
add
mov
inc
setl
pop
rcl
cdq
mov
xor
mov
or
xchg
jmp
arpl
pop
add
xlat
and
or
ins
retf
and
xor
test
jnp
jg
mov
lahf
mov
mov
adc
add
xor
dec
enter
stos
inc
fcom
mov
rcr
es
jecxz
shl
xor
add
pop
rcr
cmc
mov
push
dec
pop
retf
imul
sub
sbb
cld
mov
or
sbb
sti
jb
push
daa
xor
or
sbb
mov
out
and
call
ja
scas
mov
mov
sar
pop
das
int
movs
jo
retf
push
es
cmps
inc
inc
add
ret
xor
into
dec
cmp
mov
and
push
js
mov
jecxz
sub
inc
loopne
add
xor
xchg
ret
mov
dec
fwait
add
(bad)
jl
les
ficom
inc
sahf
jmp
lods
es
mov
pop
adc
enter
and
ud1
icebp
mov
mov
jle
pushf
mov
sbb
push
xor
inc
in
pop
push
push
in
lds
sub
das
stos
jae
xor
pop
mov
ror
pop
pusha
jne
xor
push
mov
mov
stos
push
mov
jmp
ds
xchg
mov
and
imul
cs
(bad)
fucomip
fsubr
mov
cmps
jp
cs
xlat
sub
xchg
xlat
mov
mov
in
sbb
movs
retf
inc
push
mov
daa
rsqrtps
cs
lods
pop
scas
mov
ret
fwait
mov
jecxz
add
sub
xchg
jle
idiv
sbb
sahf
and
loop
aas
jne
loop
pop
add
push
pop
das
scas
repz
enter
sub
sbb
lea
add
pop
mov
jle
data16
std
arpl
sti
jns
mov
and
icebp
xchg
inc
(bad)
sub
inc
cdq
inc
add
mov
retf
xchg
test
push
jbe
hlt
imul
mov
add
gs
add
and
mov
fdivr
push
shl
dec
jmp
sbb
hlt
sub
addr16
lods
xchg
add
lea
push
pop
mov
jo
sbb
mov
xchg
push
ror
jle
jmp
(bad)
sbb
mov
retf
nop
mov
fwait
xor
inc
cdq
push
dec
add
mov
xchg
jae
out
sub
(bad)
ins
jmp
js
sub
aad
inc
imul
repz
xor
cwde
cmc
pop
popf
xor
or
inc
pop
jg
and
mov
cdq
aad
pop
stos
movs
jg
loope
xor
repz
xchg
outs
jp
aad
sub
test
cdq
xchg
ds
jne
jbe
cmp
pop
ds
lea
(bad)
scas
cdq
nop
pop
or
jl
test
mov
outs
(bad)
sub
jnp
enter
xor
push
pusha
jns
jmp
mov
loop
cmp
in
adc
pop
outs
push
das
mov
aad
cmc
mov
and
mov
idiv
in
fsubr
adc
fcom
push
push
or
stos
dec
call
fstp
repz
jne
mov
adc
movs
mov
fwait
jne
inc
xchg
out
and
pushf
ins
sub
sbb
cmp
(bad)
inc
mov
in
je
mov
mov
fdiv
sbb
and
jbe
test
aas
mov
jge
mov
jmp
mov
stos
jmp
lea
(bad)
mov
xor
mov
repz
jmp
pop
cmp
mov
jl
jg
add
xor
fisttp
in
mov
sub
out
out
es
call
scas
popf
popf
add
std
out
fcomp
cld
push
ins
dec
mov
adc
add
imul
or
sub
push
push
and
dec
scas
and
pop
jg
and
lock
lock
ss
in
ins
ds
pop
dec
and
cmp
dec
inc
xchg
mov
call
inc
push
mov
pop
pop
and
movs
enter
push
popf
add
ja
movs
ret
ins
push
and
and
pop
mov
aas
mov
sti
and
mov
and
sbb
es
push
rcr
repz
xor
stos
sub
cmp
cs
xor
call
xor
shr
mov
leave
or
mov
mov
inc
addr16
cmc
push
pushf
lea
add
add
push
mov
lods
jmp
fnstcw
sti
xchg
cmp
or
ret
cmp
add
jecxz
inc
mov
pop
pop
sub
jl
pop
movs
into
adc
dec
bswap
sbb
mov
test
lahf
out
pop
inc
cmp
repz
pusha
and
in
iret
std
test
sub
mov
std
aas
push
jg
stos
ins
mov
loopne
cld
scas
and
xor
fcomp
xor
cmp
xchg
and
sbb
jp
pop
sub
sub
ss
cld
jbe
add
inc
mov
sar
popf
mov
ja
leave
sbb
jne
pop
pushf
movs
jmp
or
bound
(bad)
aam
ja
cmp
inc
lea
inc
in
add
jmp
cmp
gs
add
inc
xchg
push
lock
outs
cld
sub
cmp
mov
imul
jbe
and
or
fsub
push
mov
xlat
sysret
ins
fcomp
sbb
pop
mov
sbb
jl
sbb
jno
jo
mov
mov
and
lea
xchg
(bad)
xlat
test
rcr
test
inc
xor
mov
out
mov
sbb
sbb
add
retf
or
loop
cdq
fdivr
mov
stos
jbe
pop
mov
sub
and
mov
(bad)
lods
add
ins
cmp
js
jle
jbe
nop
xchg
mov
dec
fist
and
fadd
fwait
mov
test
push
xor
outs
push
stos
lods
sub
dec
repz
pop
mul
outs
das
in
cwde
mov
je
mov
loope
or
pushf
or
dec
cmp
jmp
xchg
ret
xor
and
movs
jns
in
xchg
jnp
inc
out
xchg
pop
rcl
pop
std
cmp
idiv
inc
jp
shl
sysexit
dec
retf
aad
repz
pop
fpatan
pop
ds
mov
xchg
neg
sub
adc
inc
mov
ror
ss
jne
sub
pushf
out
inc
out
cmp
inc
lods
dec
sub
push
std
or
hlt
outs
and
pop
mov
push
fadd
dec
xor
pop
lods
xchg
and
fsubr
ins
cmp
dec
ins
out
mov
jge
hlt
test
jmp
xor
cdq
mov
frstor
jmp
mov
scas
xor
cld
mov
jb
retf
cwde
push
clc
mov
enter
imul
fnsave
xor
mov
or
data16
add
mov
add
loope
jl
out
iret
scas
sti
push
push
jmp
jmp
xchg
je
dec
loop
dec
ror
dec
stos
inc
fs
sub
scas
sbb
pop
lock
pushf
xor
jg
cdq
adc
popf
gs
push
adc
inc
jle
in
lea
xchg
adc
sub
jmp
out
jge
sub
jae
icebp
and
jl
and
pop
lods
jno
(bad)
sbb
enter
push
pop
scas
mov
add
and
mov
repz
mov
ds
push
xor
push
pusha
mov
es
sub
pop
mov
ins
rcr
inc
div
pop
sub
aam
push
push
add
add
repz
std
fidiv
movs
mov
mov
aam
push
add
inc
cmp
ror
pop
and
outs
cmps
enter
pop
cmc
mov
xor
and
mov
dec
mov
fscale
(bad)
lock
(bad)
sub
jl
mov
and
jl
push
aaa
cld
out
pop
movs
mov
loopne
xor
push
mov
mov
mov
nop
sbb
int3
ins
(bad)
in
pop
(bad)
sbb
and
or
jge
es
pop
sbb
xchg
ja
fsub
xor
or
in
inc
push
or
mov
dec
add
sti
dec
jmp
mov
enter
pop
imul
sbb
arpl
in
icebp
retf
add
iret
lods
xor
aad
sbb
xor
push
popf
pushf
iret
mov
sub
adc
and
cmp
and
push
fnstcw
(bad)
dec
fmulp
ds
ss
mov
sti
les
pop
in
xlat
mov
andps
add
push
fimul
cmp
xchg
outs
out
mov
clc
pop
xchg
cdq
cmp
call
in
dec
sbb
push
and
dec
cmp
cmps
mov
push
jge
cdq
xchg
enter
(bad)
pop
mov
test
jns
nop
mov
jmp
aaa
and
lahf
mov
pop
adc
loope
jl
gs
cmps
push
lea
cmp
scas
fsub
jne
sti
fs
jne
ret
out
xchg
call
pop
mov
cwde
iret
loope
adc
iret
pop
repz
in
pop
xlat
mov
in
fcomp
add
mov
out
dec
mov
outs
arpl
stos
inc
mov
sbb
rcr
stos
pop
retf
nop
(bad)
rcl
jge
outs
out
xchg
mov
add
gs
cmc
iret
test
mov
sub
jmp
inc
fidivr
xor
cld
xor
xchg
frstor
out
pop
ins
mov
sahf
call
xor
pop
div
push
scas
add
mov
pushf
xor
lods
(bad)
dec
stos
push
cmp
jb
mov
adc
imul
retf
sub
xchg
fcom
jge
repnz
outs
xor
daa
mov
ds
adc
aam
cmp
loop
shr
std
sbb
aad
jge
sbb
sbb
sbb
imul
push
add
ror
fucomi
popf
gs
in
mov
mov
lods
cmp
or
and
pusha
add
pop
sub
and
mov
xor
cmp
add
pushf
xchg
jne
jl
iret
aaa
shr
shr
pop
pusha
loope
push
push
jmp
fnstsw
lods
ret
jno
(bad)
cmc
lds
repz
sbb
cmp
mov
inc
pop
test
sub
mov
std
and
ror
out
fistp
mov
cld
lods
fcomp
dec
hlt
cwde
sar
fwait
xor
hlt
fst
xor
cli
adc
cmp
mov
jge
inc
jno
cmc
adc
push
pop
dec
lods
ja
cwde
pop
dec
xchg
cs
retf
dec
and
loope
sbb
fwait
in
jge
out
inc
mov
and
jae
sbb
push
inc
mov
jbe
imul
xor
push
dec
add
inc
ror
subps
addr16
bound
hlt
mov
mov
sub
mov
jle
xor
pop
jb
icebp
adc
mov
and
dec
fwait
(bad)
sub
or
repz
es
cmp
and
jns
scas
in
dec
std
sbb
inc
pop
in
and
hlt
std
xor
cmp
sub
dec
push
cld
ja
pop
ss
aas
push
je
push
and
arpl
jbe
mov
pop
adc
ror
cs
inc
cmp
sub
cld
dec
les
xchg
mov
fmul
xchg
inc
xor
inc
dec
stos
or
add
jbe
scas
loop
pop
cwde
mov
pushf
cmp
dec
mov
or
mov
ret
xor
inc
and
test
jl
xor
sub
popa
jle
dec
aaa
shr
leave
clc
mov
imul
arpl
mov
mov
sahf
fst
xchg
lock
xchg
mov
fst
and
sahf
cmps
add
fnstsw
inc
retf
jl
sub
and
adc
cld
add
loopne
push
xor
ins
jb
pop
aam
pop
addr16
xor
ss
jne
pushf
lea
sbb
adc
cs
ins
and
sti
add
sahf
out
sbb
stos
aad
ins
lods
xchg
sbb
mov
pop
loope
sti
adc
cli
mov
outs
sbb
push
dec
xor
ins
pop
icebp
int
and
pop
jle
(bad)
fadd
pop
sub
clc
xor
jmp
sbb
add
aad
fnstcw
adc
ins
mov
xlat
ds
sbb
mov
xor
cld
iret
cmp
std
shr
and
(bad)
adc
mul
repz
lock
adc
js
iret
mov
dec
retf
mov
push
add
rol
bsf
pop
inc
repz
add
ins
cmp
sahf
fmul
add
and
push
cmp
sub
je
jbe
jge
add
push
jecxz
adc
pop
jno
inc
sub
(bad)
cld
mov
cmp
ins
push
push
fisttp
mov
push
sub
or
push
inc
in
pop
mov
shl
out
cmp
jne
push
aas
std
loope
sti
hlt
mov
iret
je
arpl
(bad)
push
dec
fsubr
into
cmp
(bad)
std
fnsave
push
dec
sbb
cli
push
mov
(bad)
ins
mov
lods
int3
or
loopne
fiadd
push
cmp
mov
das
add
mov
and
add
xchg
call
sbb
pop
fild
or
jmp
addr16
add
sbb
inc
cli
sbb
push
movs
inc
ss
jb
lds
popf
mov
push
data16
std
out
xor
(bad)
xchg
mov
mov
pop
cmp
repz
out
sbb
imul
int
imul
iret
jbe
sub
fdivp
movs
lea
mov
hlt
shl
rcl
fcmovu
jl
xchg
and
out
out
cmp
test
jne
repz
int3
std
mov
jecxz
dec
sub
push
push
(bad)
inc
pusha
sbb
fld
cmc
push
and
push
push
push
popf
int3
push
cld
sbb
mov
pop
mov
jnp
adc
into
je
retf
jnp
imul
cs
xchg
fadd
mov
iret
push
sti
and
ror
test
movs
cmps
push
cmp
xchg
sub
and
or
icebp
in
sub
pop
pop
add
jmp
outs
xchg
mov
mov
mov
sbb
in
dec
cmp
inc
pushf
inc
ds
xor
(bad)
pop
fld
movs
xchg
jl
sub
scas
sbb
add
pop
jg
std
jecxz
aas
mov
imul
or
(bad)
adc
cmps
dec
jecxz
stos
xor
pushf
fisttp
mov
xor
in
cmp
pusha
(bad)
movs
xchg
xchg
icebp
push
ud1
adc
or
not
adc
pop
ffreep
std
cmp
jge
pop
retf
repz
fsub
push
add
loope
inc
inc
ror
out
push
sar
fld
pop
push
bound
fisttp
inc
or
call
jp
mov
jo
jmp
out
push
cmp
cld
add
fld
idiv
pushf
xchg
fsub
mov
sbb
ret
sub
inc
stos
sti
pop
popf
add
fnstenv
fwait
dec
aad
mov
aas
cli
push
fadd
cld
iret
shl
iret
into
sbb
xchg
dec
xor
(bad)
cwde
cmp
dec
je
int3
div
cmps
call
pop
mov
inc
call
cmp
sub
xor
cs
jmp
dec
aas
push
dec
in
out
xchg
scas
outs
lods
out
pop
push
sti
jo
xor
mov
jmp
pusha
icebp
push
cld
mov
fst
xchg
test
mov
movs
pop
mov
mov
adc
xor
(bad)
mov
xor
adc
add
cs
pop
fisttp
(bad)
jecxz
add
popa
or
dec
es
sbb
xor
cmc
ins
and
mov
in
jmp
jmp
or
xor
mov
or
push
jmp
sbb
pop
sbb
mov
in
repz
ds
out
data16
xchg
rcl
into
fs
dec
push
data16
or
shl
pop
push
sahf
inc
jle
xor
sub
idiv
inc
imul
xchg
lods
mov
lods
jl
lods
mov
mov
inc
in
(bad)
and
jle
(bad)
in
mov
clc
push
mov
(bad)
repz
pushf
lods
pop
adc
in
sub
sbb
sbb
or
pop
push
push
out
cs
outs
and
iret
pop
sub
and
mov
mov
outs
dec
jge
in
pop
movs
outs
mov
outs
mov
jl
sti
pusha
enter
pop
movs
bound
mov
inc
fs
jl
shl
nop
add
ds
jge
cmp
ss
ret
std
mov
push
repz
pop
xchg
stos
jo
push
jmp
(bad)
or
ret
sub
or
mov
out
pop
repz
jbe
in
ret
cmps
cmp
or
int3
pusha
mov
sbb
ins
jne
mov
push
std
jns
sar
test
mov
or
pop
outs
pop
cmp
push
loop
dec
test
add
fcom
sub
addr16
xchg
stos
ficomp
xor
hlt
stc
fldenv
and
inc
gs
dec
fst
fdiv
bound
pushf
int
pop
mov
jl
jge
mov
and
mov
xchg
pop
xor
out
js
ins
xor
xchg
call
fwait
xor
mov
inc
ins
xor
cli
mov
xor
dec
or
fisub
mov
std
jle
fisttp
bound
enter
test
imul
xor
jl
sbb
(bad)
jmp
scas
inc
mov
adc
loop
xchg
ins
bound
(bad)
inc
mov
test
jg
outs
ja
inc
push
xchg
sub
pop
mov
add
add
out
cli
popf
ret
sbb
jecxz
sar
nop
mov
mov
jge
leave
aaa
jbe
or
xor
xchg
jbe
mov
cli
jbe
lods
sub
div
clc
adc
xor
sub
mov
add
sbb
inc
data16
stos
mov
lea
add
test
retf
jge
xchg
jmp
mov
mov
js
cmp
mov
aam
xchg
xchg
dec
xchg
and
int3
iret
aad
sbb
out
jns
sbb
ror
dec
jg
xor
inc
mov
mov
add
(bad)
sub
ins
call
enter
xor
es
sub
push
in
mov
mov
scas
jo
adc
adc
sbb
mov
and
sbb
inc
or
mov
and
push
sbb
cmp
inc
mul
or
and
in
(bad)
mov
sub
xchg
mov
mov
les
ss
loope
push
fld
sti
mov
ret
dec
xchg
mov
push
ja
xor
push
pop
out
in
sbb
clc
pop
jge
out
mov
or
fmul
add
inc
into
in
cmps
mov
sub
test
in
test
add
xor
cmp
lods
mov
adc
js
es
and
cmp
jl
sbb
loopne
mov
mov
dec
arpl
sbb
ins
repz
test
dec
mov
xchg
sti
lahf
scas
and
push
mov
jo
std
int
mov
xchg
jbe
sahf
(bad)
fist
outs
call
mov
cs
jmp
jbe
pushf
jb
paddusw
out
cmp
pop
fdivr
lahf
in
sub
cld
jae
das
sbb
cld
or
cmp
retf
aaa
repz
std
imul
arpl
sar
add
pop
cmp
sbb
jae
pop
popa
or
icebp
push
mov
xor
inc
js
push
inc
add
xchg
repz
pop
bound
das
pop
jmp
pop
mov
xchg
xor
pop
pop
in
fadd
push
sub
out
mov
jle
sub
xchg
shr
jae
in
imul
add
jmp
into
outs
inc
and
cwde
in
mov
pushf
mov
sub
adc
xlat
or
(bad)
cmc
lods
push
jno
nop
jl
xchg
js
outs
jae
test
gs
movs
outs
dec
jno
push
mov
pop
xor
push
mov
test
mov
jecxz
outs
in
jg
icebp
cmp
retf
jbe
retf
pop
mov
push
inc
sti
jbe
cmp
pop
retf
fwait
xchg
push
sbb
jecxz
sub
outs
xchg
cdq
fwait
and
pop
push
into
sahf
sbb
jg
pop
(bad)
ss
data16
xor
push
loopne
and
xor
ss
sub
leave
adc
jle
in
mov
jle
inc
in
pop
neg
inc
xchg
(bad)
mov
call
cmp
sub
aas
aas
lds
inc
das
add
call
shr
and
aam
int3
jns
std
dec
sbb
xchg
aad
sub
and
push
icebp
sahf
outs
or
mov
push
inc
ss
pop
push
jbe
jp
sbb
cld
and
jmp
scas
or
(bad)
and
add
sbb
sbb
sbb
jge
jge
cmp
(bad)
retf
js
sub
xchg
sub
xor
sbb
stc
mov
or
inc
sbb
xchg
cld
(bad)
cmps
push
hlt
mov
mov
test
push
jne
fs
and
shl
fs
pushf
(bad)
in
pop
sbb
pushw
fmul
xchg
jb
inc
pop
call
xchg
mov
mov
xchg
jb
imul
jmp
xchg
lock
add
out
xchg
xchg
pop
jg
pop
mov
dec
retf
in
mov
test
inc
outs
cmp
sub
ins
fldenv
dec
sub
pusha
pop
xchg
and
dec
daa
dec
and
in
stos
ret
jne
stos
fsub
hlt
jns
popf
fsub
ror
add
or
jl
push
into
or
xor
and
cld
or
jmp
scas
xchg
mov
jmp
push
ror
push
cmp
movs
xor
dec
fsub
cmp
push
fs
out
popf
lods
fld
out
jecxz
pop
movs
pop
(bad)
pop
sahf
jp
in
je
or
push
mov
(bad)
pop
sbb
das
int
fnstsw
out
idiv
cld
pop
jbe
jge
pop
je
cdq
or
repz
outs
sar
nop
and
ins
jecxz
adc
inc
fimul
mov
fwait
dec
pop
ds
fisttp
mov
fisttp
lgs
(bad)
mov
(bad)
cmp
neg
mov
mov
add
leave
inc
out
xor
adc
xor
mov
cmp
jge
mul
fcomp
shl
sub
fwait
pop
pop
call
dec
inc
sbb
stos
mov
fcomip
and
fldcw
retf
cmp
fmul
adc
cli
jl
mov
mov
movs
fsubr
outs
cmp
aam
lar
jge
push
paddusb
sbb
(bad)
iret
mov
arpl
scas
(bad)
shl
mov
lahf
mov
push
pop
mov
pop
pushf
mov
scas
(bad)
shl
cmps
pop
lea
jmp
ins
fsubp
test
mov
movs
(bad)
(bad)
jl
mov
xlat
lds
jnp
icebp
in
das
mov
sbb
ds
xor
jl
xor
or
lock
ins
pop
fstp
cmp
mov
jg
adc
retf
outs
pop
add
cvtps2pd
pop
frstor
push
jbe
cmp
push
ss
fiadd
ss
js
pop
movs
adc
test
ss
sbb
in
add
mov
fucomp
jmp
popf
push
sub
out
addr16
and
and
adc
pop
icebp
or
ret
in
pop
pop
nop
jmp
into
or
pushf
leave
repnz
popf
cmp
add
xor
sbb
retf
and
xor
adc
xor
hlt
cmp
pop
push
imul
sub
pop
int3
test
jmp
mov
mov
stc
fwait
push
or
cli
cs
test
pop
out
dec
mov
in
out
sbb
imul
mov
(bad)
cs
inc
sub
adc
add
dec
lock
test
jge
cwde
push
jl
jo
xchg
xchg
mov
fs
(bad)
adc
mov
xchg
fs
icebp
push
sub
xchg
push
shr
int3
push
jl
jo
loop
loope
aaa
cs
sbb
and
mov
cld
pusha
lods
out
call
js
jle
inc
dec
(bad)
js
mov
and
movs
mov
and
push
dec
cli
pushf
int
sub
pop
jl
(bad)
leave
mov
sub
cmps
pop
xor
xchg
pop
xchg
cmp
jecxz
mov
xchg
ret
cli
sbb
stc
fiadd
sbb
push
pop
and
fs
inc
cs
pushf
sbb
push
bound
stos
outs
sub
cmp
add
jb
shl
das
pop
lock
xor
dec
push
fwait
je
jl
xor
repz
ret
xor
(bad)
mov
cs
pop
add
and
cmp
imul
lods
(bad)
mov
test
mov
iret
cwde
into
pop
out
mov
rcl
jb
and
fstp
jne
push
cmp
pop
popf
popf
in
sti
jmp
add
ret
dec
xchg
mov
cli
pop
loope
sub
shr
jmp
push
ret
call
and
pop
adc
sub
leave
or
ret
mov
jg
neg
loop
xor
sbb
movs
cmp
jge
ficomp
or
push
add
jl
fist
lea
ja
dec
adc
and
xor
sub
(bad)
cmp
cs
repz
push
cmp
fisttp
pop
push
adc
adc
in
adc
sbb
inc
arpl
pop
cmp
jmp
pop
and
jl
das
add
dec
repz
xchg
mov
xor
test
add
mov
fstp
scas
nop
and
(bad)
adc
icebp
imul
sub
add
and
xchg
fs
dec
out
test
cmp
ins
mov
sti
xor
xchg
cmp
sub
add
jge
dec
pop
jns
xor
leave
sbb
std
fs
inc
dec
mov
cmp
popf
mov
aas
jmp
xor
xchg
lods
add
adc
inc
lahf
(bad)
ds
mov
test
mov
dec
cld
fidiv
jb
cmps
mov
sbb
bsr
fabs
repz
add
dec
sbb
rcl
cmp
xor
lock
js
movs
xor
xor
mov
sub
aas
mov
xlat
push
xchg
movs
mov
pusha
in
retf
and
fldcw
neg
jmp
xchg
mov
cmps
sar
std
xor
sub
inc
jle
sub
cmp
mov
je
mov
cmc
inc
lds
in
mov
dec
jne
ds
push
xchg
nop
sbb
xchg
pop
jmp
or
rcl
pop
adc
retf
call
pop
add
or
xchg
add
sbb
jp
add
sub
dec
sti
sbb
and
sar
fnstsw
adc
push
pop
jg
xchg
pop
sub
sub
pop
lahf
das
cmp
fist
mov
cmp
int3
outs
dec
inc
call
and
out
lahf
jnp
and
popf
nop
mov
cmp
sbb
aaa
adc
rcr
mov
(bad)
cmp
mov
xchg
jmp
push
add
mov
in
pushf
xchg
push
mov
mov
loop
mov
loope
jne
repz
mov
outs
imul
in
pop
push
mov
out
pop
push
cmp
in
arpl
mov
cmp
jecxz
sub
or
jl
jge
aas
push
out
mov
push
jge
add
ins
or
push
shr
rol
sbb
daa
dec
push
ret
add
outs
cmp
fisttp
cdq
pop
setns
jl
xchg
adc
lahf
pushf
push
cmps
movs
cmp
in
xor
movs
jl
sbb
std
cmp
xor
adc
das
ret
aas
adc
and
push
sub
int3
hlt
mov
loopne
out
pop
inc
cmp
sbb
sbb
ja
pop
cmp
inc
jmp
in
cmp
lea
ds
fisttp
adc
popfw
push
push
jmp
sti
repz
sub
mov
and
lods
push
sbb
fs
sbb
xor
sbb
and
mov
out
sbb
adc
aad
xchg
pop
jb
push
xchg
sahf
lds
mov
inc
sbb
nop
in
cdq
xor
cmps
loope
add
xchg
inc
fwait
(bad)
arpl
mov
dec
sub
mov
xor
fsub
push
out
add
jmp
xor
cmp
xchg
in
loopne
arpl
mov
mov
xor
test
pushf
jmp
mov
iret
xchg
call
arpl
imul
jl
mov
fldcw
retf
pop
fidiv
jns
into
cld
shl
xchg
imul
pop
mov
in
jo
or
imul
js
leave
jl
jo
sbb
clc
test
dec
stc
xor
adc
xchg
into
cmp
cmps
sbb
inc
add
jl
sub
pop
into
cmp
lahf
mov
shl
sti
mov
je
jmp
and
aam
fbld
fadd
fcmovu
std
push
sar
idiv
fsub
mov
xchg
dec
mov
cmp
add
mov
sti
push
retf
rcr
lods
cwde
inc
(bad)
push
les
xor
fs
scas
add
loop
push
push
in
cmp
jmp
sub
pushf
pop
std
jae
in
cmp
in
fs
add
bound
cmp
jp
icebp
lock
add
pushf
jbe
adc
dec
xor
xor
sbb
push
stos
push
mov
sbb
mov
add
push
push
push
lods
jae
test
mov
inc
mov
sub
aas
push
in
dec
cld
clc
scas
mov
fsub
ja
cmp
rcl
jp
je
add
add
jns
dec
enter
arpl
aam
repz
adc
push
pop
enter
xchg
popf
loop
and
sbb
push
inc
push
(bad)
cmps
xor
ins
cmp
repz
sbb
mov
es
ja
repnz
jg
daa
jo
pop
xor
mov
or
ins
jecxz
xchg
jbe
daa
fmulp
rcr
xchg
dec
xor
adc
jle
push
not
arpl
jmp
and
repnz
or
not
cli
and
xor
loope
sbb
jg
ja
ja
clc
out
aam
outs
fdivr
test
gs
jge
pop
shr
mov
sub
in
dec
inc
xor
xchg
cmp
adc
call
mov
dec
les
push
test
iret
and
mov
sbb
push
xchg
dec
xor
fstp
push
cdq
out
push
or
sahf
fdivr
mov
jo
sahf
mov
fwait
sti
dec
sbb
push
je
loopne
mov
inc
inc
sbb
sbb
(bad)
(bad)
jl
cs
mov
jo
imul
aas
mov
aam
stos
mov
sbb
pop
pop
rcr
and
xor
bound
mov
inc
pop
pop
dec
movs
push
ins
mov
popf
xor
jle
aad
or
dec
sahf
push
xchg
dec
imul
arpl
in
xchg
outs
fimul
pop
jo
jle
loopne
imul
dec
ds
jmp
fld
(bad)
lods
pop
aaa
cld
(bad)
(bad)
cld
cmp
xor
cmps
test
out
dec
jge
mov
repz
int
sti
pop
jb
sub
sbb
cli
fnstenv
out
fild
leave
pushf
mov
pop
jbe
int3
rol
fsub
mov
and
sbb
ret
daa
into
arpl
fiadd
fnstsw
push
std
out
pop
nop
push
jecxz
outs
ss
jle
pop
ins
and
cmps
mov
ins
sbb
dec
jg
jo
xchg
add
sti
fld
pusha
adc
fdiv
dec
cmc
jmp
xlat
cmp
xor
fs
imul
jmp
pop
inc
push
pop
push
out
mov
loope
cmp
cbw
lods
xor
inc
arpl
leave
mov
xchg
pop
push
pop
xor
out
push
inc
daa
xlat
out
pushf
jmp
add
pop
mov
xchg
lock
arpl
inc
test
xchg
bound
cli
loope
xor
test
aas
into
mov
test
repz
pop
mov
add
sub
fstp
mov
pop
outs
lock
stc
xchg
in
ds
jle
data16
imul
hlt
inc
imul
jno
imul
sbb
sub
loopne
xchg
jecxz
and
cmp
xchg
mov
outs
xchg
pop
push
or
les
js
std
jmp
ins
lods
outs
int3
xchg
adc
push
je
jl
popf
ror
and
jbe
push
les
sbb
jne
lahf
add
in
xchg
xor
pop
ss
in
add
mov
dec
add
(bad)
loope
popf
iret
sbb
in
or
hlt
popf
pop
sbb
jecxz
lock
mov
jmp
movs
sbb
mov
inc
sahf
aas
sahf
(bad)
movs
and
test
pop
push
pop
mov
loope
dec
and
add
icebp
and
dec
repz
mov
lahf
mov
mov
(bad)
and
nop
lahf
icebp
push
pop
fbstp
pop
mov
sbb
je
mov
js
outs
xchg
ins
push
xor
clc
repz
xlat
sub
in
pop
loope
outs
pop
iret
sub
add
aas
out
sbb
bound
dec
sbb
pop
loopne
pop
sbb
cmp
retf
cmp
popa
in
push
add
retf
sbb
aas
mov
sbb
xchg
fdivr
and
lock
sbb
xchg
pusha
add
fnstenv
(bad)
pop
pop
mov
add
add
add
rep
aad
xor
cli
add
in
jne
and
xchg
int3
pushf
mul
cli
push
std
sub
add
and
and
in
jecxz
inc
fwait
inc
push
out
clc
ja
pop
cmp
icebp
ret
and
shr
jl
std
jle
outs
cli
pushf
inc
xor
in
bound
xchg
sbb
xchg
in
pop
xchg
or
mov
jmp
mov
ds
or
sbb
sbb
int3
mov
out
or
lods
sbb
fs
and
cmp
cmp
fwait
mov
and
pusha
ds
out
(bad)
mov
cld
ret
std
hlt
inc
sbb
pusha
push
in
(bad)
std
sub
xchg
mov
sub
push
jo
bound
and
jp
push
cli
es
inc
and
dec
out
inc
retf
imul
loop
xchg
retf
push
dec
or
jo
add
jo
jge
stos
xlat
xor
add
loop
sbb
jl
sbb
out
xor
and
call
xor
fisttp
fnstsw
in
mov
dec
jge
sub
jmp
into
mov
inc
ds
sbb
sti
jmp
and
inc
jl
mul
xchg
xchg
xchg
add
es
mov
rcr
adc
inc
and
mov
bound
add
mov
and
(bad)
ins
fld
or
dec
cmps
stos
ss
dec
(bad)
mov
fld
fistp
xor
push
test
jne
inc
sbb
xchg
dec
movs
or
push
in
and
ja
pop
call
nop
ficom
fistp
push
nop
pop
mov
in
xchg
sti
cmp
cmp
jg
inc
adc
lods
call
pop
mov
sbb
out
push
and
xor
leave
inc
pop
inc
sar
sahf
sti
je
cmps
enter
pop
shl
dec
or
mov
dec
adc
jno
inc
pop
popa
fs
push
lahf
mov
inc
fiadd
push
loop
mov
mov
pop
jg
cmp
(bad)
xor
inc
xchg
fimul
ins
sub
sahf
sbb
fdiv
pand
xor
sbb
test
pushf
and
xor
leave
lods
jle
aas
mov
jl
fsubr
ficom
ds
sbb
mov
push
leave
jl
jp
(bad)
aam
bound
daa
sub
es
adc
fs
in
pop
aas
pop
hlt
cwde
xchg
bound
pop
aaa
cmp
mov
mov
lahf
dec
popf
retf
push
push
or
dec
inc
fnstsw
adc
sbb
add
imul
xor
pop
cwde
mov
shl
iret
sbb
xchg
rcr
call
jo
mov
cmp
jp
cs
sbb
and
data16
mov
and
popf
inc
jne
pop
push
cmps
xor
bound
rcr
cmp
jbe
(bad)
rol
or
sbb
xor
sti
inc
pusha
inc
sbb
leave
(bad)
push
lahf
sub
pop
std
pop
jg
fs
in
lahf
cmc
pop
in
sub
sbb
pusha
jb
xchg
sbb
pop
xchg
ins
adc
inc
jmp
icebp
pop
pusha
leave
cmc
sbb
(bad)
push
push
out
fiadd
mov
ins
mov
and
pop
(bad)
jmp
mov
cli
fidivr
hlt
aas
sub
jns
jbe
sub
call
jo
dec
pop
jmp
out
jns
js
xor
test
ret
mov
xchg
cmp
sbb
mov
and
frstor
adc
sub
jae
imul
fmul
mov
sahf
arpl
and
test
pop
cmp
mov
xchg
ret
and
movs
inc
mov
inc
aas
mov
jmp
aas
out
mov
lods
stos
out
push
lods
and
lds
sbb
pop
push
add
stos
sti
test
and
das
(bad)
sahf
jmp
inc
fisub
test
add
sbb
push
jno
out
shr
out
in
fcomp
shl
test
jle
push
in
xor
xchg
sbb
xor
sbb
mov
push
sub
cmp
adc
aad
sbb
add
nop
jg
dec
jl
pop
out
adc
sub
(bad)
pop
jl
or
xor
stc
jle
jmp
imul
aam
sbb
nop
and
aas
fwait
jb
sbb
iret
fisubr
jae
test
bound
inc
pushf
jo
test
adc
aas
xor
cwde
dec
(bad)
frstor
xor
dec
sar
add
(bad)
lods
out
push
xor
imul
retf
rcr
mov
xor
and
int3
cmp
xor
cs
mov
push
jno
jecxz
inc
cmps
pop
and
xor
sahf
test
out
rcl
jge
sub
das
add
les
test
dec
sbb
jbe
imul
add
xor
push
xchg
inc
dec
call
ins
push
pop
pusha
push
pop
add
cmp
xchg
jno
add
rcr
data16
test
jecxz
loop
cmp
cmp
shr
cmp
lea
je
imul
cmp
popf
mov
int3
pop
mov
mov
jl
popf
outs
and
scas
mov
or
sbb
fsub
gs
rcr
ins
aaa
mov
jns
scas
into
(bad)
jo
outs
dec
out
imul
gs
mov
jno
jl
jo
sti
dec
or
inc
shr
cmp
clc
stos
xchg
cs
push
stc
idiv
es
jg
adc
jg
pop
aad
mov
pop
adc
add
jl
scas
cld
mov
(bad)
xor
xchg
lock
xor
mov
fisubr
xchg
pop
pop
mov
dec
pop
lahf
or
out
lods
(bad)
and
and
inc
lds
dec
(bad)
mov
add
cmp
inc
inc
jns
sub
and
jle
and
xchg
and
or
bound
loope
inc
frstor
and
ret
pop
inc
pop
movs
int
popf
adc
or
jmp
je
jno
scas
popa
lahf
sti
mov
pop
sbb
adc
cmc
sub
pop
inc
mov
jge
pusha
or
mov
jl
pop
(bad)
cmp
out
and
or
push
jge
mov
out
jge
data16
mov
int
pushf
and
nop
cmp
fucomp
or
aad
jecxz
lahf
mov
fwait
jns
xor
mov
sbb
adc
lods
push
adc
fdivr
and
loope
add
jmp
push
sahf
in
stos
div
ins
mov
mov
ficom
fadd
mov
xchg
inc
dec
xchg
in
xor
ret
or
and
out
stos
jmp
inc
lea
sahf
mov
std
retf
inc
fwait
cmc
push
lea
pop
push
lds
out
into
push
jbe
pop
push
and
xchg
(bad)
fidivr
mov
jo
push
in
pushf
call
call
loopne
jecxz
lods
add
fadd
dec
std
jg
xor
xor
pop
cmps
adc
movs
pop
(bad)
pushf
inc
stc
loopne
adc
xor
cld
add
jle
in
add
push
jae
add
adc
cmp
cmps
xor
adc
fs
scas
cmp
mov
cmps
(bad)
jge
jmp
inc
mov
xchg
and
ss
mov
push
jle
and
ret
inc
repz
xor
data16
push
sbb
mul
mov
fcomp
xor
mov
loope
jg
das
sbb
sahf
mov
inc
in
leave
jnp
in
and
out
jbe
pop
dec
push
cdq
out
xchg
sbb
call
cmp
ds
adc
sbb
and
mov
adc
clc
cmps
outs
push
or
pop
sbb
mov
lods
cmp
or
(bad)
pushf
movs
fcomp
pop
popa
cmp
push
sahf
(bad)
mov
arpl
mov
xchg
jle
and
sahf
add
dec
xchg
sub
cdq
xor
stos
mov
stc
pop
xor
in
mov
ret
std
cmp
fcom
sbb
std
cmp
loope
pop
sbb
sub
dec
ins
cmp
mov
pop
push
and
repz
daa
and
ret
inc
cmp
data16
or
push
jle
test
push
outs
stc
loopne
outs
adc
jge
cmp
stos
sub
xchg
ret
leave
sub
mov
pop
mov
rol
cmp
cmps
retf
xchg
mov
out
stc
jl
shl
mov
push
in
sbb
int
push
pop
int3
ret
sti
jbe
jno
dec
xchg
fcomp
pusha
stc
jge
test
fwait
ss
scas
xchg
jl
in
sti
jne
(bad)
in
jecxz
aas
jg
shl
call
pop
and
push
mov
inc
jg
and
inc
outs
js
sbb
test
js
jle
xchg
test
jge
(bad)
lahf
jle
push
in
das
push
cmp
aas
mov
and
dec
mov
call
jl
sub
or
jne
fmul
pop
mov
out
jmp
sbb
std
out
cwde
and
stc
cld
cmp
jl
sbb
pusha
outs
in
scas
std
call
jae
or
sti
jb
int3
movs
sbb
pusha
xchg
in
jg
pusha
fldenv
arpl
jmp
cld
push
push
shl
and
pushf
mov
cmc
jle
aad
and
inc
cld
xor
and
pushf
frstor
(bad)
std
js
and
in
jmp
cld
outs
push
pop
sbb
call
push
and
jge
out
mov
(bad)
stc
inc
(bad)
pushf
jmp
adc
or
push
inc
or
cld
push
movs
(bad)
pushf
addr16
test
mov
loop
dec
in
retf
mov
jp
push
(bad)
hlt
call
or
stc
mov
push
aas
sbb
adc
mov
not
push
adc
retf
xor
(bad)
sub
aam
je
sti
es
xchg
sub
cli
mov
jns
xor
sub
add
mov
jbe
mov
inc
mov
push
and
xor
dec
fs
sub
outs
or
push
or
push
add
mov
leave
or
push
pop
jae
mov
jnp
or
cmp
sbb
cmp
aam
test
cli
sti
pop
jl
adc
je
xor
or
cmp
or
pop
mov
push
sbb
push
mov
std
cmp
xchg
fs
jmp
cld
xchg
push
(bad)
pusha
push
iret
rcr
pushf
mov
sbb
jmp
xor
xor
xor
jbe
jmp
mov
mov
aad
fidivr
ins
push
(bad)
adc
jno
dec
stos
mov
cmp
mov
ja
cmp
add
fld
fucomp
push
loope
cmp
iret
repnz
fimul
in
mov
shr
jbe
scas
je
mov
ss
pop
cmc
cmc
cmp
arpl
stc
jecxz
jle
nop
es
xor
xor
aad
shl
loope
sti
icebp
sbb
out
fcmovu
pop
jl
pop
pushf
ja
push
mov
sbb
sub
sbb
cmc
ins
cdq
in
std
(bad)
inc
test
jl
jl
pop
stc
retf
sbb
xlat
rcr
jmp
retf
mov
dec
push
mov
out
(bad)
fst
loope
outs
outs
xlat
mov
shr
xchg
sar
cmp
mov
mov
aaa
out
mov
fldenv
mov
mov
fisub
jae
pop
lods
fcom
js
retf
test
cmp
stc
in
hlt
jmp
cmp
sbb
cmp
xchg
pop
push
cmp
cdq
mov
lahf
pop
xchg
jns
mov
outs
ss
loope
jns
stc
jge
push
stc
inc
cmps
push
push
xor
pop
hlt
dec
and
popf
xlat
mov
cmp
sub
inc
sahf
cs
sbb
test
das
call
ins
adc
pop
push
daa
std
dec
leave
scas
repnz
mov
jmp
mul
popf
xchg
imul
lahf
and
push
sar
push
sbb
jmp
aad
mov
push
in
pop
mov
add
xlat
sti
cwde
out
fdiv
shr
out
fmul
sbb
push
int
inc
adc
ins
das
ins
fmul
loope
cs
call
xor
xor
mov
add
xchg
adc
sbb
fnstsw
popf
cmps
xchg
test
pop
f2xm1
adc
sbb
xchg
ins
push
outs
xor
sbb
mov
ficomp
push
mov
jnp
adc
pop
xlat
mov
sub
das
cmp
imul
jb
push
sti
or
in
je
xor
jle
add
mov
cmp
sub
movs
and
pop
xor
aaa
or
outs
push
fwait
in
mov
cmc
mov
(bad)
icebp
jle
call
test
lock
push
sbb
xor
cli
push
sar
es
pushf
jns
add
std
and
mov
dec
in
sbb
cmp
or
pop
sti
ins
ret
push
or
fisttp
xchg
imul
mov
xchg
lods
mov
push
adc
push
or
push
ret
js
xchg
and
xchg
sub
movs
jnp
jl
xchg
int
bound
nop
mov
cld
and
jg
je
jno
push
xchg
fstp
add
jl
push
xor
push
imul
adc
adc
loope
dec
out
push
adc
sbb
ror
daa
pop
aam
sub
ins
xchg
and
mov
je
out
or
movs
sub
ds
sub
sti
mov
leave
push
sti
loopne
mov
cdq
jecxz
lods
movs
cmp
enter
ja
inc
test
pusha
cld
call
pop
push
sti
out
pop
xor
sbb
jmp
iret
add
sub
iret
sti
add
xor
mov
retf
mov
xchg
xor
cmp
cmp
xlat
cmps
pop
or
cmc
add
xor
xchg
add
(bad)
or
enter
jbe
pop
cmp
jae
movs
sbb
mov
xchg
xchg
dec
js
rcl
mov
lock
ins
sar
and
inc
sahf
in
das
cmp
cli
fadd
cmp
mov
xor
sbb
daa
imul
jns
leave
mov
or
fdiv
dec
inc
(bad)
stos
mov
xchg
sbb
mov
and
cs
inc
or
les
or
frstor
xor
loope
cmp
fimul
rcl
sbb
test
and
mov
mov
ds
xchg
shr
in
and
dec
mov
push
and
std
in
jmp
cmp
(bad)
mov
pop
mov
pushf
sub
out
inc
and
mov
and
and
cmps
and
mov
and
fs
mov
call
mov
and
data16
cmps
pop
in
cmp
sbb
bound
and
jns
fadd
cld
adc
jge
scas
cmc
fldenv
sti
jg
mov
sbb
dec
fwait
mov
push
lods
mov
(bad)
and
mov
(bad)
pop
fcom
test
call
xor
pop
dec
mov
mov
jl
sbb
fs
dec
fs
sti
outs
dec
or
inc
arpl
pushf
in
cli
cmp
cld
jns
inc
ds
dec
or
leave
xchg
pop
push
pop
shl
leave
cmc
push
aad
sub
fild
jp
mov
mov
nop
adc
mov
outs
push
dec
(bad)
nop
xor
push
inc
pop
imul
xchg
enter
xchg
pusha
and
je
xchg
add
add
fistp
adc
aam
jle
adc
in
jl
jmp
dec
mov
pop
jno
add
add
push
mov
and
aam
arpl
pop
jg
out
in
push
out
dec
mov
jge
cmp
adc
mov
js
push
out
sbb
sub
std
imul
pop
popf
sbb
stc
sbb
popf
jecxz
stos
dec
jno
inc
leave
call
in
mov
(bad)
je
mov
mov
mov
push
xchg
pop
leave
icebp
dec
add
jecxz
cmp
mov
sbb
xor
sahf
ret
and
enter
add
ror
gs
xchg
xor
call
and
inc
pop
arpl
xchg
(bad)
or
repz
jge
iret
push
pop
mov
mov
and
pop
jo
(bad)
adc
jmp
xchg
xor
push
fidiv
out
sub
xchg
jmp
ins
fimul
add
sbb
jge
and
xchg
sahf
jbe
cmc
fadd
or
sbb
jle
sbb
call
mov
xchg
sbb
push
movs
mov
xchg
or
xchg
cmps
fwait
pop
mov
mov
mov
mov
mov
jg
and
pushf
mov
jmp
ds
sbb
out
jg
xor
fimul
je
sti
sahf
loop
loop
in
add
pop
or
pop
das
cmp
inc
cmps
fcomp
and
xor
ins
outs
xchg
fsubr
push
pop
add
cmp
cdq
aam
sub
iret
sahf
cs
fsub
sti
(bad)
jb
stc
and
xchg
mov
adc
sub
push
bound
ins
jne
call
scas
bound
imul
(bad)
jg
retf
mov
arpl
daa
mov
in
mov
and
std
icebp
dec
pop
ds
jge
pop
nop
(bad)
jle
push
push
push
nop
and
(bad)
es
sub
out
sbb
pop
(bad)
jp
pcmpgtd
aam
aam
inc
js
sub
sub
sahf
and
cs
xlat
ins
cmp
xchg
sbb
out
(bad)
mov
xlat
dec
pusha
(bad)
in
shr
jl
push
xor
stos
mov
div
cs
fwait
push
xor
jmp
mov
adc
sub
ss
xor
dec
in
loope
mov
xchg
and
cdq
(bad)
push
pop
leave
lods
mul
nop
es
jecxz
loopne
push
jmp
mov
enter
imul
clc
xchg
push
xor
fs
repz
mov
rcl
ins
mov
je
pop
sbb
push
mov
ins
cmp
add
push
cmp
(bad)
jl
sbb
cmp
dec
sub
(bad)
call
ds
dec
call
add
cmp
cld
sbb
lea
sti
sub
popf
push
jo
and
dec
sbb
into
mov
stos
icebp
sbb
xor
sbb
cdq
push
xor
(bad)
mov
outs
loope
mov
jp
(bad)
cmps
(bad)
add
push
paddw
dec
data16
mov
ret
push
inc
fbstp
dec
mov
lock
rcl
call
std
inc
jmp
and
popa
ins
pop
sub
jl
sbb
cmp
mov
sti
js
retf
pop
test
outs
jge
sbb
pop
cli
cld
lds
pop
shl
leave
cmc
mov
cmp
push
inc
stos
(bad)
mov
out
cmp
out
jb
sahf
ja
jmp
push
xchg
push
jecxz
sbb
sub
sbb
sbb
arpl
pop
mov
and
lods
cld
add
xchg
mul
and
jb
dec
xchg
lock
pop
mov
xchg
xchg
mov
push
and
and
push
xor
push
mov
cli
dec
rep
mov
xor
jns
push
xchg
xlat
(bad)
mov
(bad)
repz
stos
stc
into
out
lock
xchg
les
add
sub
int
dec
(bad)
dec
leave
or
stc
div
inc
outs
es
div
jecxz
xor
(bad)
mov
push
addr16
add
pop
push
icebp
ss
mul
mov
xchg
inc
jns
mov
rol
sbb
push
jecxz
push
mov
les
hlt
mov
adc
cmps
mov
dec
ins
(bad)
and
fmul
pop
out
idiv
xlat
std
rol
jge
fdivr
inc
cld
inc
movs
xor
call
cmp
sub
fwait
push
sbb
in
scas
push
mov
add
lods
mov
mov
lock
nop
xchg
dec
or
(bad)
add
sub
xchg
out
inc
mov
add
jbe
ret
push
outs
inc
(bad)
sbb
jp
(bad)
fcomp
shl
jg
or
and
idiv
pop
mov
mov
fstp
dec
mov
retf
and
movs
lock
push
mov
dec
and
dec
mov
push
in
mov
call
out
rcr
mov
fisubr
push
inc
pop
sbb
pop
cmp
cmp
mov
pop
add
mov
add
mov
cld
push
cmp
fs
arpl
sbb
sbb
pusha
jl
and
sub
fmul
add
xor
mov
es
mov
sub
ins
shl
stos
push
xchg
movs
sub
dec
mov
or
adc
inc
inc
pop
iret
in
stc
and
dec
lea
push
sbb
adc
retf
push
push
mov
lahf
aas
sub
mov
mov
xor
add
movs
and
test
retf
pushf
bound
add
mov
pop
xchg
fwait
and
xchg
push
clc
shl
outs
push
ins
(bad)
inc
mov
out
fcomp
and
push
push
sbb
sbb
clc
sbb
adc
mov
or
loope
xchg
scas
push
sar
ret
out
sahf
dec
pusha
popa
sbb
inc
fbstp
je
push
pop
movs
in
fdivr
imul
push
jae
mov
push
mov
xor
movs
mov
cs
sbb
push
sub
addr16
mov
sub
sub
or
cmp
sar
push
out
or
ror
dec
and
xchg
call
stc
js
adc
outs
test
je
out
movs
xlat
or
cmp
adc
jbe
mov
hlt
jae
or
loop
loop
fadd
xor
mov
(bad)
xchg
or
pop
push
push
cmp
dec
pusha
cmps
pop
movs
xchg
out
aam
push
pushf
push
mov
out
jns
std
add
aas
xchg
shr
(bad)
jg
aam
jg
lds
adc
mov
lods
iret
ins
adc
jmp
ins
jbe
add
xchg
shr
cs
mov
jmp
push
jl
mov
imul
jg
inc
in
out
js
(bad)
std
xlat
popf
lahf
or
mov
jl
push
lock
mov
push
int3
fstp
cmp
pop
cmp
cmps
fmul
outs
cmp
jge
mov
jmp
push
cmps
cmp
jb
aam
(bad)
in
movs
mov
cld
scas
sub
sti
ins
data16
sbb
and
fwait
sub
js
mov
out
jecxz
mov
and
jmp
sbb
mov
jle
ret
pop
sahf
cmp
pop
pop
push
lds
add
mov
rcl
add
fsubr
je
(bad)
movs
sub
jge
lods
lods
stc
scas
sbb
pop
jb
in
in
mov
iret
int3
jecxz
xchg
xchg
lods
jmp
pop
add
iret
xor
push
xchg
fmulp
popf
mov
add
inc
and
push
dec
sub
inc
and
fnsave
and
out
inc
pop
inc
jnp
xchg
aaa
test
mov
mov
pop
les
push
shl
xor
add
dec
and
mov
sbb
cmp
call
jmp
jae
ins
hlt
cmp
and
fnstsw
stos
lods
xchg
and
shl
daa
daa
(bad)
in
push
outs
data16
popf
mov
jg
pop
nop
pop
pop
jne
xor
(bad)
fiadd
das
in
cs
pop
sbb
rol
pop
fwait
inc
jecxz
adc
push
(bad)
fidivr
(bad)
cmps
sbb
retf
xor
fdiv
pop
pushf
mov
sbb
arpl
cmc
sub
pop
pop
jmp
push
mov
(bad)
in
test
neg
nop
cmp
jge
shr
xchg
ds
test
sbb
mov
jg
pop
add
jg
ror
popf
das
jecxz
sti
jle
jecxz
sbb
mov
(bad)
je
sub
adc
lahf
jne
adc
pushf
add
and
int3
sub
sub
mov
daa
fwait
mov
repz
and
jmp
inc
(bad)
mov
ins
pop
call
jl
mov
jp
es
or
xchg
xchg
icebp
mov
lods
fs
xchg
mov
loope
test
mov
ins
push
in
mov
jecxz
inc
pop
xchg
add
dec
jns
pop
pop
fidiv
push
je
adc
ds
jns
add
ins
sbb
daa
ds
sbb
dec
xchg
and
pop
xchg
sar
sbb
sar
inc
out
fild
sbb
jp
jl
arpl
dec
mov
jp
sub
xor
jl
outs
cmp
jle
add
mov
loopne
in
and
mov
jne
xor
add
imul
aad
push
jle
pop
push
pop
movs
icebp
add
pop
inc
and
pop
xor
scas
jmp
call
sub
out
and
add
push
fwait
sbb
jae
add
jge
in
cmp
fs
and
fwait
call
xchg
fldenv
sbb
fwait
and
(bad)
cmp
push
in
xchg
popf
ds
mov
push
test
clc
add
sbb
cmp
add
push
mov
ds
ss
div
call
sti
out
movs
and
repz
jmp
stos
mov
add
int3
ds
pop
inc
stc
out
and
dec
(bad)
sahf
stos
sbb
adc
(bad)
dec
sbb
xchg
xor
inc
push
pop
test
lods
pusha
mov
int3
xchg
mov
push
stos
(bad)
int
repz
mov
pop
jl
adc
mov
fnstsw
inc
jl
cmp
(bad)
and
push
clc
sub
pop
jecxz
neg
in
(bad)
js
xchg
cmps
fbld
dec
mov
mov
push
push
mov
arpl
iret
fidivr
cmp
mov
sbb
sbb
retf
jecxz
dec
xor
enter
mov
jg
sbb
sbb
ds
sbb
js
add
mov
and
rcl
push
push
and
and
into
mov
in
dec
fdiv
dec
jmp
sub
cld
std
in
shl
clc
push
cmp
add
mov
mov
loope
dec
cdq
xlat
lock
in
int
in
push
mov
jmp
jp
xor
mov
das
jp
scas
xchg
xor
sub
jb
(bad)
icebp
icebp
mov
push
stos
and
inc
in
adc
pop
adc
sub
jbe
sbb
jl
mov
cmp
inc
icebp
pop
repnz
push
cmp
icebp
mov
cmp
pop
fisubr
retf
mov
(bad)
cmc
sbb
inc
pop
(bad)
outs
bound
cmp
aas
cmp
add
ins
add
fwait
and
mov
fdiv
and
sti
jmp
mov
jl
xchg
retf
xchg
or
cmp
cmp
lahf
out
movs
retf
sbb
pop
mov
pushf
div
cmp
xor
add
(bad)
leave
sub
pop
fnstsw
push
std
cmp
imul
jle
cmp
iret
adc
es
data16
enter
ds
sub
daa
push
or
xor
fcomp
jg
in
xchg
popf
call
into
adc
daa
hlt
jp
add
sub
repnz
or
sub
imul
into
sbb
xor
lods
or
jge
das
in
pushf
arpl
pop
adc
bnd
fdivr
js
ss
lahf
std
lods
xor
dec
sub
mov
dec
je
es
call
dec
sub
aad
mov
push
hlt
ss
ret
jmp
fnstsw
outs
push
mov
push
and
dec
and
cld
mov
pop
sbb
in
sbb
sub
xor
jae
sub
jg
sar
aad
mov
jnp
add
lods
pusha
clc
push
mov
arpl
dec
arpl
dec
arpl
cdq
ds
das
pop
dec
dec
adc
data16
aad
cmp
sbb
je
add
arpl
sbb
in
bound
and
xor
or
mov
dec
sub
(bad)
repz
shl
pop
pop
mov
xchg
lods
jnp
(bad)
in
inc
daa
(bad)
cmp
minps
mov
xchg
dec
inc
jmp
inc
clc
js
(bad)
pop
fist
mov
dec
mov
dec
xor
shl
fisubr
(bad)
pop
outs
jecxz
mov
test
aas
cmps
repz
icebp
pop
adc
push
jg
sub
xchg
and
stc
std
add
sub
adc
lahf
in
mov
frstor
sub
lahf
dec
cmp
xor
repnz
mov
call
sub
push
cld
(bad)
xor
lock
popa
icebp
popf
inc
aam
xchg
push
paddq
out
dec
lds
inc
xor
stos
add
jmp
fdiv
ins
(bad)
call
mov
pop
iret
fs
cmp
ret
inc
ins
mov
js
call
mov
sbb
pop
mov
pusha
and
pop
or
sbb
mov
fsub
cmps
stos
fs
and
pop
xlat
test
sti
push
pop
hlt
dec
jl
cmp
mov
jle
mov
ds
into
sub
pop
enter
test
in
inc
pop
fs
jecxz
adc
mov
std
into
into
loop
xchg
dec
xor
dec
arpl
jmp
jb
loope
dec
cmp
sub
dec
(bad)
xchg
push
pop
retf
push
dec
or
jnp
popf
cmc
out
jbe
sbb
nop
fcomp
call
cmps
push
movs
or
fs
xor
pop
(bad)
jl
js
sahf
jne
mov
and
adc
cmp
and
cvtdq2ps
fwait
pop
inc
shl
pop
xchg
icebp
nop
int3
jae
int3
cmp
push
(bad)
jl
test
in
sub
push
cwde
adc
(bad)
imul
shl
clc
je
jle
ror
jle
sub
retf
and
imul
out
jns
movs
out
mov
sub
in
std
inc
mov
jmp
mov
scas
(bad)
push
push
and
stc
iret
jmp
repz
xor
xor
xor
dec
mov
and
(bad)
sti
or
jmp
fistp
inc
mov
int3
loope
je
mov
xchg
mov
fnstcw
adc
jmp
mov
cmps
xchg
and
ret
mov
inc
fidivr
pop
ffree
xor
icebp
repz
imul
cwde
imul
stc
(bad)
retf
jg
mov
add
xor
mov
and
xlat
sti
mov
lods
jge
out
sbb
jb
imul
shr
int3
repz
loope
add
sbb
or
adc
xor
sbb
jnp
pop
js
retf
ins
(bad)
and
adc
pop
cs
jnp
std
fsubrp
sbb
sbb
pop
cli
jo
call
push
int
mov
xchg
inc
fimul
inc
scas
cli
gs
adc
jl
(bad)
popf
xchg
adc
jecxz
mov
es
fdivr
(bad)
enter
lods
cdq
ins
int3
pop
enter
adc
pop
jle
sbb
or
push
push
pushf
push
push
mov
mov
aaa
mov
les
mov
sti
and
inc
into
shl
cmp
xchg
out
pop
xchg
(bad)
fwait
jno
jp
out
call
jl
mov
inc
sub
xchg
jl
hlt
mov
cmp
jl
push
gs
sti
jl
scas
jge
cdq
dec
ins
jl
loope
stos
and
pop
sbb
(bad)
rcl
and
ret
outs
stos
ins
loop
xchg
jo
in
in
(bad)
(bad)
mov
test
pop
out
sti
mov
dec
xlat
fisub
aam
jle
mov
es
(bad)
dec
xor
mov
idiv
outs
pop
(bad)
bound
add
dec
adc
imul
mov
ds
idiv
fwait
adc
dec
fs
inc
sahf
adc
and
pop
int
cmp
(bad)
iret
sub
dec
add
mov
or
add
fs
(bad)
out
jmp
pop
mov
xlat
adc
fstp
mov
shr
ror
adc
add
pushf
xchg
xchg
cdq
stos
push
outs
xchg
and
inc
push
rcl
pop
dec
and
dec
test
(bad)
push
shl
(bad)
stc
cmp
mov
inc
xchg
cmp
adc
out
test
mov
jne
jo
(bad)
enter
and
pop
cmc
sti
pusha
lea
movs
dec
mov
dec
jo
pop
cmps
bnd
movs
pop
sub
fnsetpm(287
pop
jecxz
pop
ja
rcr
sahf
sti
outs
lods
xchg
shl
ds
xor
movs
(bad)
dec
shr
inc
xchg
je
ret
ins
out
cmc
pop
xchg
and
mov
mov
and
loop
or
sbb
stos
mov
pop
call
fcom
add
nop
(bad)
push
data16
in
icebp
pusha
repz
ins
push
shl
inc
jns
cmp
pop
popa
cmp
and
push
fist
push
jne
push
dec
cmp
sbb
ret
pop
inc
or
nop
push
sbb
add
ds
ins
fs
movs
jg
in
cmp
out
xor
cmp
cs
push
xchg
push
add
stc
(bad)
(bad)
cmp
lea
lods
cmp
adc
jecxz
idiv
stc
mov
fcom
(bad)
mov
and
mov
cwd
int
xor
pop
movs
inc
popf
mul
mov
retf
jns
sub
loope
push
xlat
outs
jnp
lock
mov
leave
stos
cmc
fisttp
cmp
and
push
(bad)
mov
fld
jae
call
test
and
mov
retf
sbb
test
push
adc
mov
test
out
lahf
pop
outs
cmp
movs
loope
jmp
fisttp
cs
push
sub
ror
push
neg
pop
mov
movs
and
jmp
push
pop
call
sbb
cli
pop
daa
jg
rol
cli
or
call
jmp
imul
movs
sbb
cmp
out
dec
jb
dec
jge
inc
movs
mov
sbb
div
mov
xchg
push
pop
rol
jle
dec
and
jmp
sbb
inc
in
xchg
out
push
dec
mov
clc
scas
in
jo
sbb
jmp
jns
cmc
es
jp
outs
push
mov
mov
lds
and
in
xor
leave
sbb
cmp
inc
cwde
cmp
jg
in
mov
je
jmp
minps
cmps
sbb
jp
les
dec
xchg
outs
lahf
push
clc
fisubr
jl
xchg
jl
cmp
shr
or
jmp
mov
pusha
add
inc
or
popf
xor
cmp
mov
jbe
cld
push
pushf
push
lods
mov
out
xchg
(bad)
cwde
and
adc
call
outs
mov
(bad)
xchg
mov
lods
sbb
dec
pop
ins
cmps
cmp
push
mov
and
ins
ret
inc
jl
call
xor
pushf
sahf
hlt
adc
and
outs
fsubr
(bad)
out
sar
dec
pop
lock
sub
push
sti
inc
jg
and
push
rcl
and
xor
int3
xor
aas
outs
pop
imul
cld
jg
addr16
sahf
hlt
sub
ror
add
gs
(bad)
scas
sub
cmp
and
stc
pop
add
mov
push
aam
aas
and
in
or
inc
cmp
dec
push
pushf
inc
stos
stos
lods
xor
mov
adc
scas
cmps
inc
and
sbb
cmp
stc
jmp
(bad)
sbb
pusha
mov
push
jmp
mov
mov
sbb
nop
(bad)
sub
adc
jo
jl
cs
cmp
sti
pop
inc
js
sbb
and
and
outs
jle
je
retf
and
dec
lds
pop
pusha
pop
popf
repz
arpl
iret
into
std
cs
aas
push
or
push
mov
idiv
mov
xor
sub
nop
daa
aad
cmp
js
fnstsw
ret
out
sub
loope
xchg
cli
sub
loopne
mov
xor
jg
mov
in
lods
mov
test
mov
add
add
test
test
ins
pop
xchg
inc
sbb
jmp
jle
movs
dec
inc
jle
std
ds
outs
mov
sar
mov
and
cmp
int
fisubr
inc
int3
jl
cmp
outs
push
adc
pop
and
mov
pop
outs
aam
mul
in
jp
xlat
(bad)
mov
adc
mov
adc
es
cwde
cld
mov
adc
add
pop
pushf
into
xor
xor
adc
lahf
xchg
cwde
sbb
jmp
xchg
ins
sahf
ret
in
rol
cmps
retf
sar
imul
test
add
mov
fbld
inc
jb
and
cmc
sbb
mov
dec
add
ds
sbb
jle
xchg
iret
retf
xchg
mov
pop
xchg
mov
loope
call
sahf
leave
pop
mov
xchg
jge
bound
cmp
jle
mov
push
sub
cmp
in
ins
pop
cld
mov
pusha
mov
fstp
jg
sar
mov
push
adc
ror
lods
pop
jg
imul
mov
inc
enter
push
cld
cmc
cld
inc
into
stos
xchg
test
mov
xchg
add
data16
aas
mov
inc
sbb
ins
cmp
repz
add
shr
jg
inc
std
and
add
and
in
jne
dec
test
jns
jle
sbb
push
push
mov
jp
ss
ins
pop
pop
fsubr
inc
push
enter
cmp
sbb
push
sbb
std
jmp
push
adc
sub
or
out
mov
outs
jbe
bound
loop
movs
push
mov
pusha
retf
jmp
(bad)
mov
call
out
sbb
lahf
in
cmp
aas
clc
test
and
loope
push
imul
fstp
mov
mov
jnp
pop
pop
inc
hlt
aam
fdivr
push
sbb
pop
inc
cmps
add
fdivr
jle
es
js
call
test
pop
in
imul
call
fisub
push
mov
mov
inc
jmp
cmp
sbb
or
push
sahf
jo
cmps
sbb
icebp
mov
arpl
push
sbb
(bad)
and
inc
jl
adc
(bad)
out
sub
push
xor
iret
js
shl
frstor
pushf
pop
jo
xchg
call
mov
jle
retf
jne
rcl
jns
ret
push
push
fist
jne
loopne
jge
pop
push
sbb
pusha
mov
push
mov
(bad)
push
cmps
mov
popf
out
dec
jg
sub
data16
stc
rcr
mov
push
jmp
int3
(bad)
sbb
mov
js
lahf
arpl
cmp
arpl
int
arpl
fpatan
pop
xor
xor
loop
xor
lock
sub
xchg
fistp
or
push
adc
xchg
pop
mov
into
aam
icebp
jl
and
mov
fisubr
into
cmp
in
js
xor
fsubr
jl
ja
jg
mov
in
add
jge
xchg
call
icebp
sbb
in
jb
icebp
arpl
pushf
push
in
jmp
mov
cmp
cmp
or
mov
nop
nop
cdq
cmps
jb
cli
repnz
jne
retf
and
aad
push
xchg
ret
sbb
sahf
fnstsw
mov
ret
loop
and
fwait
jmp
jmp
xor
out
and
scas
xchg
imul
(bad)
mov
xor
ror
mov
int3
push
dec
addr16
fmul
ja
pop
sti
and
jnp
cmp
xor
in
pop
ins
daa
pop
mov
(bad)
push
(bad)
push
std
push
xchg
and
addr16
pop
and
idiv
(bad)
popf
sub
pop
xor
xor
dec
cld
shl
ins
sbb
jmp
sbb
or
xchg
fsub
xor
pushf
les
ins
iret
(bad)
arpl
mov
int
inc
jl
or
ds
or
ror
mov
js
or
sbb
lahf
test
pop
in
call
in
mov
in
sti
je
fcomp
mov
repz
cli
sti
call
pop
add
mov
pop
mov
sti
scas
mov
int3
out
in
cld
jle
sub
jge
ins
mov
std
sbb
sti
sub
adc
sub
pop
cmp
mov
sbb
xchg
adc
xor
xor
sbb
(bad)
fs
clc
mov
and
lods
mov
in
cmp
dec
and
cmp
repz
mov
mov
test
lock
mov
shl
xchg
cmp
and
(bad)
loopne
stos
push
dec
(bad)
addr16
test
int
jl
mov
jmp
or
pop
mov
ret
xlat
and
lods
lods
fcomp
inc
jns
lods
std
ficom
cs
ins
movs
cdq
pop
mov
xor
xchg
loopne
sti
xchg
les
xchg
jmp
rcr
outs
aas
add
fstp
fild
in
mov
popf
clc
jbe
loopne
mov
data16
ss
movs
adc
data16
cmp
clc
mov
add
out
test
cmps
sbb
js
or
stos
sbb
outs
or
(bad)
ret
dec
mov
and
adc
leave
add
fcomp
cmp
sub
pusha
add
(bad)
push
pushf
je
pop
sbb
mov
jmp
jg
xlat
in
cld
sahf
cmp
add
shr
ss
mov
icebp
ins
jnp
pop
mov
mov
pop
sti
push
jmp
push
jb
jo
test
inc
xchg
pop
push
aas
mov
(bad)
pushf
and
inc
hlt
jb
and
pop
loope
mov
push
scas
je
xchg
cmc
and
sbb
sti
push
pop
xchg
adc
sti
jle
scas
les
mov
repz
test
or
push
push
lock
mov
pop
jmp
jl
fstp
pop
mov
and
push
pop
(bad)
fbld
ja
xchg
sbb
mov
xchg
arpl
out
pop
jg
pop
sti
pop
mov
push
dec
ins
js
mov
xor
jle
pop
outs
push
xchg
scas
push
pop
stc
ss
sub
fdivr
call
int3
(bad)
pop
jnp
push
cmps
pop
sbb
add
push
je
out
in
je
data16
out
dec
popa
scas
pop
jge
pop
test
mov
dec
clc
into
fisttp
gs
fs
push
dec
xchg
fwait
repz
and
jecxz
mov
or
aam
into
dec
jmp
sub
mov
lds
iret
jmp
in
retf
daa
push
cmps
push
mov
push
hlt
jle
jns
and
fbld
or
sbb
sbb
ja
mov
jl
cmc
jb
xor
rol
cmp
dec
push
stos
mov
sub
jb
mov
outs
sbb
das
mov
imul
cmp
push
sub
push
imul
or
vsqrtpd
sbb
sub
and
fsub
jg
sbb
iret
aam
cmps
xchg
and
out
mov
ds
inc
popf
ins
(bad)
jl
fstp
xor
push
sti
xchg
scas
mov
cdq
push
jg
outs
cmp
ins
cwde
mov
push
mov
cmp
jmp
addr16
mov
jnp
mov
add
mov
add
out
and
stos
ficom
dec
jle
call
pushf
mov
fcom
cmp
fidiv
pop
xor
xor
jne
inc
sti
sub
mov
jmp
rol
jp
and
fwait
add
pop
retf
lds
sahf
push
mov
and
int3
div
sti
or
dec
mov
aaa
shl
jmp
sbb
in
sub
sub
or
inc
stos
mov
xchg
sbb
pop
sbb
dec
pop
shl
fmul
cmps
inc
shr
fs
or
or
cmp
pop
sbb
dec
int3
mov
mov
movs
sbb
cli
ins
push
dec
ins
pop
shl
and
jp
rcl
leave
int
push
and
mov
jle
inc
adc
mov
call
push
xor
mov
adc
inc
or
imul
mov
aaa
js
xor
xchg
mov
repz
inc
adc
repnz
imul
mov
mov
add
add
sti
mov
mov
xchg
add
adc
and
mov
ror
xor
sar
leave
ja
jg
mov
in
je
jge
retf
pop
sub
cmps
adc
mov
movs
mov
fmulp
mov
jne
pop
retf
(bad)
lods
imul
pop
add
and
push
jmp
loope
xrelease
sbb
sti
cmp
mov
cmp
pushf
cvttps2pi
dec
clc
movs
rcr
jbe
dec
imul
hlt
fcomp
pushf
add
cmp
out
sbb
jg
fnstsw
pop
jnp
pop
mov
push
lahf
cmp
outs
pop
add
mov
es
pop
add
out
jecxz
jmp
(bad)
in
add
addr16
(bad)
add
in
sbb
mov
pop
inc
mov
jns
(bad)
push
pushf
ins
push
std
lock
mov
pop
jg
xchg
push
test
mov
outs
inc
jo
in
jecxz
xchg
arpl
scas
fiadd
call
jmp
nop
push
inc
fucomi
ret
push
leave
sar
push
daa
(bad)
mov
jp
loope
fidivr
mov
rol
or
xor
in
mov
int3
add
retf
xor
cmp
repz
ret
mov
add
adc
test
sti
lods
xor
jecxz
xchg
sbb
inc
outs
push
cwde
sbb
mov
mov
or
and
int
enter
test
mov
cmp
and
sbb
es
and
cmp
xor
sub
int
in
cmp
jbe
inc
mov
jmp
inc
lahf
and
je
sahf
and
daa
iret
test
xchg
(bad)
or
ja
or
retf
scas
sar
fs
mov
push
out
(bad)
fld
icebp
and
pop
jp
ja
add
(bad)
push
push
dec
ret
and
das
sar
xor
call
les
mov
mov
stos
xchg
arpl
icebp
mov
adc
rcr
cli
mov
cdq
dec
sbb
xor
bound
imul
daa
ss
cmp
sub
pop
mov
in
jns
sar
fs
pop
leave
and
fld
sbb
shl
or
xor
neg
and
xor
pop
ss
push
es
ins
loope
sub
adc
stos
(bad)
adc
loope
sbb
cmp
loopne
jo
fwait
push
test
and
addr16
call
lods
push
push
mov
jnp
movs
jl
pop
cmp
ret
pop
aaa
outs
inc
jg
push
push
cld
fwait
test
data16
dec
inc
and
sahf
mov
jg
cmp
fmul
sbb
push
in
sbb
pop
cs
icebp
cs
push
xor
out
mov
add
outs
sbb
ins
fdivr
dec
xor
clc
jmp
xor
leave
pop
add
and
adc
push
fucompp
in
loope
cli
mov
mov
pop
cld
and
sbb
mov
cli
mov
xor
ss
lock
shl
sub
pop
enter
push
es
sub
outs
jmp
not
(bad)
pop
ins
shr
jg
(bad)
jb
aad
mov
sbb
cwde
scas
pop
ja
stos
xchg
jecxz
push
add
push
std
repnz
xor
nop
sbb
jmp
int3
fwait
in
and
sbb
dec
pop
xchg
stos
xor
pushf
adc
pop
xchg
mov
mov
cmp
add
mov
test
rcr
mov
lock
cs
add
push
hlt
popf
pop
or
and
or
ret
jmp
sti
xchg
stos
xchg
mov
shr
sbb
xbegin
sti
sbb
std
adc
adc
ja
and
mov
pop
mov
ror
int
icebp
jne
jb
adc
int
cmp
outs
adc
hlt
sub
xor
mov
ds
fnsave
cmp
in
xor
ins
push
(bad)
ins
cmp
jo
jmp
add
loope
fsubr
jns
gs
or
mov
popf
fs
inc
cld
sub
popf
dec
jbe
fdiv
jb
mov
lahf
sbb
dec
jl
mov
(bad)
pop
movs
lods
push
pushf
jno
sub
push
adc
jnp
pop
addr16
mov
in
sbb
adc
jp
sahf
lock
add
mov
xor
scas
jl
jge
inc
sbb
daa
push
cmp
push
push
inc
cmp
pop
addr16
cmp
inc
mov
scas
(bad)
cdq
cmp
sar
into
imul
push
sub
mov
pop
or
scas
mov
dec
lods
or
push
mov
xchg
bound
stc
(bad)
sub
fwait
(bad)
pop
cmp
stos
in
outs
rol
fdivr
jge
sar
fdiv
or
cmp
shl
sbb
ror
fidivr
aam
mov
and
and
icebp
push
aam
cmp
push
(bad)
clc
cmp
cwde
mov
imul
adc
out
test
jmp
sti
in
pop
mov
or
xchg
lods
jo
cs
push
ins
das
sub
call
repz
mov
xchg
sbb
mov
pop
jb
cli
fst
sar
sti
xor
leave
inc
pop
add
(bad)
mov
into
mov
push
retf
xlat
or
dec
sbb
push
(bad)
in
and
aam
cmp
jl
sub
ss
sbb
and
sbb
adc
pop
push
xor
or
mov
pop
pop
mov
addr16
pop
jg
jo
pop
fnstsw
data16
xor
and
(bad)
in
jecxz
or
hlt
retf
nop
push
xlat
push
std
bound
sti
shl
sbb
movs
repz
loope
cmc
shl
adc
rcl
mov
js
mov
xor
scas
cmp
push
pop
pop
mov
inc
js
xchg
add
sahf
mov
mov
in
mov
stos
in
cli
aam
ret
sbb
jne
push
pop
retf
mov
mov
jbe
and
cld
es
jmp
push
mov
mov
xchg
mov
mov
cwde
in
and
adc
add
aas
adc
mov
inc
mov
sbb
sbb
add
xor
push
sub
pop
rcr
inc
push
xchg
xor
push
sub
sbb
loop
fwait
popa
or
fiadd
in
daa
pop
ret
mov
dec
jl
sbb
xor
cmp
dec
mov
imul
loopne
data16
jp
jbe
int
pusha
(bad)
mov
xor
enter
sbb
imul
aaa
mov
adc
cs
test
adc
mov
pop
cmp
repnz
pop
nop
inc
(bad)
cmp
xlat
jl
out
dec
mov
add
push
pop
push
fcomp
xor
jg
daa
push
fsub
inc
data16
(bad)
push
and
sub
mov
cmc
imul
mov
std
ins
(bad)
jl
mov
mov
inc
xor
outs
sar
mov
js
xchg
popf
(bad)
or
rol
das
out
fdiv
in
stos
or
jge
inc
xor
outs
cmp
pop
fnsave
cmp
xchg
ins
sbb
jge
shr
ss
(bad)
dec
mov
xor
jl
mov
jg
dec
in
daa
pop
in
imul
dec
dec
add
nop
add
push
addr16
mov
mov
and
outs
xchg
or
fwait
push
dec
mov
pop
in
cmp
xor
js
aam
repz
sbb
cmp
out
xor
and
and
push
jbe
fwait
shl
mov
xchg
in
leave
mov
adc
nop
mov
fcmovnbe
sbb
xchg
rcr
test
loop
or
jg
repnz
fcom
mov
nop
push
mov
ret
out
repnz
mov
mov
jg
mov
push
sbb
call
ror
mul
sub
call
in
nop
and
jmp
dec
int3
call
and
ror
and
jp
stc
pop
leave
adc
jge
pusha
stos
xor
out
sbb
shl
fdivr
sbb
jecxz
xor
(bad)
cld
mov
dec
shr
jne
and
in
sub
std
into
sbb
pop
mov
sbb
pop
add
mov
gs
enter
mov
sbb
inc
pop
sbb
fsubr
mov
dec
mov
pop
cwde
mov
bnd
ja
test
jl
xor
or
imul
cmp
sub
jge
mov
out
and
cmps
ds
in
lods
imul
in
xchg
ins
fsub
inc
inc
xchg
call
shr
test
inc
jne
mov
shl
data16
es
dec
add
jge
sub
push
xor
js
ror
out
outs
mov
xchg
cli
clc
jmp
outs
shr
cmp
fwait
add
push
test
das
ins
add
(bad)
ins
retf
and
cmp
in
scas
in
xchg
pop
call
clc
sbb
add
and
add
mov
mov
xchg
mov
pop
jo
jge
mov
and
xlat
adc
stc
dec
cld
sahf
xchg
cs
cmp
dec
push
stc
jp
push
inc
nop
cdq
mov
mov
mov
jle
icebp
cs
xor
jp
in
xor
jmp
scas
fimul
push
push
fnstsw
das
(bad)
ins
sbb
ja
ins
jge
mov
imul
mov
add
sub
mov
cwde
cmp
push
and
mov
lods
push
fs
pop
xchg
call
pop
retf
imul
scas
xlat
not
sti
sub
call
xchg
addr16
xchg
loope
cmp
or
and
enter
bound
adc
jl
in
pop
push
repz
stos
jns
fmul
(bad)
in
ins
dec
aam
sbb
aam
or
dec
mov
movs
push
sub
cmp
je
and
sub
mov
mov
pop
sub
inc
int3
mov
jecxz
inc
xor
sti
cmp
adc
je
sbb
out
jae
or
mov
jge
loopne
sbb
xchg
mov
jmp
fs
add
push
in
add
xor
fnsave
jb
adc
jb
mov
mov
jmp
loopne
ins
fdivr
loop
ds
jae
iret
pushf
mov
sub
cmp
and
push
jb
cmp
jb
and
mov
xchg
cs
mov
and
sbb
ffreep
daa
cwde
xor
pushf
fdivr
dec
cli
xor
push
and
mov
cwde
call
pop
ds
xor
mov
jp
jno
(bad)
mov
push
jbe
pop
mov
sbb
mov
sbb
push
pop
jmp
dec
mov
mov
pop
add
retf
out
jne
je
mov
jb
push
adc
dec
mov
lock
jmp
push
cmp
mov
movaps
cmp
cmp
cmp
mov
movs
inc
stos
fs
mov
stos
sti
pop
ja
jb
xchg
mov
add
cs
gs
jmp
adc
out
push
into
xchg
or
sub
jg
and
add
xchg
(bad)
sbb
pop
sti
sbb
test
jge
mov
cmc
pushf
dec
xor
div
lods
add
or
cwde
adc
cld
retf
and
int3
or
jb
cdq
cli
cs
sbb
outs
(bad)
mov
mov
add
sti
or
adc
dec
add
add
xor
jbe
stos
and
movs
pop
ffree
retf
iret
iret
pop
popa
xchg
inc
jns
xor
mov
repnz
pop
add
and
icebp
push
test
hlt
lods
lods
fdivr
(bad)
stos
push
mov
sbb
sbb
add
test
std
pop
jge
xor
imul
push
mov
jle
out
jbe
push
mov
push
je
ds
ss
pop
ins
xchg
int
outs
sub
iret
imul
lock
iret
jmp
(bad)
sbb
mov
das
aaa
jmp
add
dec
add
sub
jmp
pop
daa
shl
pop
mov
jo
mov
push
sbb
push
shl
loop
add
aam
jecxz
or
mov
das
xchg
mov
jl
dec
repz
(bad)
and
gs
repz
or
mov
pop
test
sahf
dec
ror
mov
mov
fbld
push
in
neg
mov
and
push
(bad)
in
and
adc
nop
jmp
std
push
xchg
mov
mov
pop
outs
push
jns
aad
cmovg
ds
add
dec
ss
cld
ja
xor
nop
cmp
mov
shr
sbb
repz
in
add
xchg
dec
mov
pop
jge
and
mov
pop
mov
rcr
bound
pushf
mov
shl
mov
sbb
sbb
jle
in
and
adc
mov
push
cmp
adc
not
add
inc
sbb
and
sbb
clc
arpl
(bad)
test
sahf
and
fdiv
push
cld
and
sbb
pop
out
jecxz
sbb
out
xor
dec
hlt
xor
cmp
jl
cmc
lgs
repz
in
xchg
add
ja
repz
push
push
adc
call
cli
sti
sbb
dec
add
aaa
sti
xor
std
add
xor
adc
add
cmp
stc
mov
push
and
cmps
pop
fcomp
movs
and
scas
or
jge
fwait
popa
mov
adc
or
mov
out
push
ror
fwait
add
sub
cmp
cmp
in
push
dec
sbb
test
add
jp
or
jle
cmp
or
jg
lahf
sbb
mov
sbb
pop
and
mov
fucomp
inc
call
test
cs
sbb
mov
mov
pop
push
xor
sbb
xor
mov
push
xor
sbb
mov
pop
out
ds
ins
or
xor
sub
cld
jne
sbb
mov
in
mov
pop
mov
jbe
cmp
std
movs
sub
or
ds
xchg
bound
sahf
xor
cmp
ins
test
les
pop
push
jne
sbb
sbb
jmp
push
jecxz
pusha
inc
enter
clc
in
sub
out
les
push
movs
sub
in
cwde
pushw
call
cld
jle
or
adc
jmp
dec
or
(bad)
and
xchg
mov
pop
or
aam
xor
ret
mov
test
sahf
lahf
stos
sub
mov
jmp
mov
xchg
stc
pop
stc
outs
addr16
ficom
cli
(bad)
lahf
cld
push
sbb
inc
dec
adc
sahf
cmp
xchg
fimul
jno
cmp
cmps
fsub
es
and
xchg
mov
jp
scas
inc
inc
ins
aaa
test
jo
mov
jg
int
inc
jmp
pop
div
add
jecxz
add
cdq
pop
les
push
(bad)
push
adc
fimul
push
xor
call
xchg
and
and
dec
jns
xor
shr
xchg
xchg
into
ret
jmp
test
pop
mov
in
sbb
xchg
aad
or
mov
test
stos
ror
je
ret
call
pop
push
xor
and
jl
and
aad
data16
cmp
adc
mov
sbb
add
(bad)
out
and
retf
retf
or
inc
jmp
movs
sbb
leave
lock
pushf
sahf
inc
sbb
test
or
or
fcomp
je
shl
in
and
rcr
iret
xchg
xor
ss
jl
fs
ins
aad
mov
mov
mov
mov
std
imul
sti
sbb
pop
(bad)
jl
sbb
cmp
mov
xor
sub
mov
mov
jg
pop
pop
inc
ds
iret
xchg
or
fs
jecxz
jge
ins
popf
add
pop
jl
cld
sbb
das
jmp
je
dec
cld
ficomp
clc
adc
pop
icebp
sub
sbb
cmp
push
fs
pusha
cdq
mov
sar
(bad)
(bad)
ror
push
xchg
push
jns
popa
push
dec
scas
and
jo
cmp
(bad)
adc
(bad)
in
jbe
xchg
and
adc
add
imul
(bad)
es
bound
or
test
mov
ds
sahf
ins
pop
add
sbb
push
cmp
mov
jb
jge
cld
test
(bad)
sar
imul
scas
mov
mov
and
push
sbb
add
cmps
inc
inc
cld
leave
mov
ret
ins
sbb
xor
xor
dec
aad
cli
or
ds
test
out
xor
sbb
xchg
lea
pop
sti
and
jmp
inc
xchg
cmp
add
test
jnp
inc
test
mov
xor
js
rcl
movs
mov
pop
xor
loope
fidiv
xchg
imul
inc
dec
in
push
jo
dec
jae
daa
ds
sbb
or
jmp
xchg
lods
xor
out
jnp
adc
mov
scas
xchg
xchg
mov
mov
into
fdivr
inc
mov
rol
lds
iret
and
push
sbb
mov
enter
repnz
add
loopne
ds
xchg
jb
sbb
mov
iret
scas
push
repz
mov
ss
fnstsw
mov
mov
sahf
jbe
inc
mov
jg
div
mov
xor
test
dec
xor
xchg
rcr
xchg
mov
sub
dec
sar
xor
(bad)
push
sbb
in
fs
mov
(bad)
sbb
xchg
pop
pop
cdq
xchg
int
jl
mov
push
mov
jno
jle
sahf
repnz
cwde
xlat
push
adc
cmps
push
pop
leave
adc
cmps
cs
cdq
and
loop
xor
add
pop
adc
jge
adc
xor
xchg
pop
lahf
cmp
pop
dec
mov
cmc
shl
je
adc
lahf
add
jge
mov
bound
mov
daa
mov
xor
mov
data16
inc
shr
icebp
and
in
int
and
mov
ror
push
jg
mov
sbb
ds
jo
add
cdq
mov
dec
jnp
loope
js
repz
aas
jge
arpl
inc
cmp
xor
outs
rol
sbb
popf
sbb
arpl
nop
enter
add
mov
dec
scas
les
xchg
push
out
add
enter
out
mov
lods
xchg
aas
sti
push
pushf
arpl
dec
pop
mov
int
jmp
inc
iret
cmps
inc
mov
ret
xor
and
xor
scas
sbb
(bad)
ins
fidivr
dec
or
aas
vmwrite
in
adc
sbb
mov
and
jmp
sub
in
jl
int3
push
push
jl
ror
popa
push
jge
lods
ins
adc
cld
pop
jp
and
nop
cmp
stos
aaa
fcomp
cmp
add
jge
out
dec
ja
rcl
sbb
fst
mov
adc
jg
mov
(bad)
fst
jl
cmp
(bad)
cwde
push
retf
bound
lods
out
mov
xor
inc
les
nop
and
jle
fs
mov
ds
mov
movs
aad
pop
push
js
das
sbb
mov
pop
(bad)
(bad)
jne
div
xchg
dec
and
push
in
dec
sbb
jp
int3
iret
lahf
fxch
pushf
mov
(bad)
in
scas
and
sahf
dec
out
lahf
pop
sbb
jl
pop
sub
sahf
mov
sbb
leave
push
in
into
fsub
push
retf
ins
fwait
mov
jne
push
(bad)
sti
pop
sbb
push
inc
call
popf
jb
inc
xor
fdivr
sbb
sti
(bad)
popa
mul
adc
push
inc
mov
(bad)
ja
std
sbb
inc
aaa
fnstcw
cmps
adc
xchg
or
shl
push
test
pop
or
cmp
sub
fcomp
pusha
rcl
lds
xchg
in
mov
aad
cwde
xchg
outs
jl
fadd
mov
mov
bound
je
mov
push
enter
sahf
pop
push
jns
cld
and
inc
js
ds
inc
lock
sbb
outs
lock
adc
mov
jbe
jg
arpl
and
mov
loopne
push
and
fwait
xor
jmp
mov
fnstcw
fcom
test
call
inc
test
xor
jne
jno
or
daa
js
hlt
fldenv
repz
test
popa
bsr
js
or
stc
test
fiadd
or
cdq
sub
jg
jbe
loope
fcom
je
dec
sbb
mov
adc
cmp
cmc
dec
pop
mov
sbb
dec
ins
enter
dec
mov
push
mov
mov
stos
cld
icebp
push
in
xchg
push
adc
popa
pushaw
mov
dec
fadd
sahf
sbb
push
adc
mov
mov
and
mov
aas
lock
js
or
loope
or
test
(bad)
sbb
jno
pop
jno
inc
jle
jmp
std
jmp
(bad)
and
pop
mov
sub
aam
or
jne
dec
fsubp
nop
push
mov
(bad)
xor
retf
push
mov
jmp
adc
inc
adc
sti
inc
pop
std
push
add
cmps
xchg
enter
and
lods
clc
shl
(bad)
cmc
jo
inc
xchg
(bad)
adc
jmp
and
stos
ss
xchg
fidivr
and
clc
iret
ret
cdq
loopne
push
repz
mov
ins
sbb
jns
dec
js
pop
mov
je
jne
dec
ss
mov
jno
inc
(bad)
cdq
(bad)
push
cmp
mov
xchg
or
scas
jmp
dec
xchg
sbb
pop
mov
jl
xor
sbb
cmp
call
jle
adc
stos
mov
sub
mov
xchg
in
(bad)
fld
push
xor
call
cmps
cs
cmp
data16
mov
mov
jo
pushf
mov
mov
pop
dec
lock
mov
mov
mov
scas
mov
push
shr
sbb
repz
js
ins
movs
retf
push
sbb
jmp
pushf
cmp
cwde
je
in
pop
data16
gs
cmp
jg
push
sbb
stc
cmp
lock
std
lods
dec
pop
jl
adc
jb
inc
aad
push
jmp
sti
dec
mov
inc
jcxz
cmovle
aaa
mov
add
sbb
mov
and
mov
sub
fidiv
jmp
jl
inc
cmp
rol
mov
bound
mov
scas
aas
pop
inc
test
mov
cdq
push
and
popw
mov
jne
ins
jg
test
jecxz
pop
daa
mov
sbb
test
inc
cmp
adc
out
scas
jg
push
les
loope
es
jae
xchg
outs
sbb
std
inc
dec
(bad)
mov
lahf
je
and
jmp
shl
mov
pop
lea
pushf
jno
mov
cmp
jl
sub
jnp
inc
jmp
ins
sub
or
jno
add
jl
lods
out
pop
xchg
repz
stos
neg
mov
dec
lds
jbe
inc
pop
arpl
sub
pop
inc
jb
sub
leave
push
das
jns
js
(bad)
fldenv
sub
jle
push
push
dec
xchg
ins
mov
xchg
jle
push
pop
push
mov
je
cmps
xor
test
jecxz
test
and
rcr
inc
ds
or
jmp
sbb
xadd
cwde
(bad)
mov
int
or
je
pop
xor
xchg
jg
sub
mov
mov
jl
in
jg
and
mov
call
and
aas
add
or
loopne
icebp
stc
mov
scas
(bad)
mov
ss
idiv
xchg
jg
pop
sbb
ret
scas
pop
cdq
fadd
add
jno
(bad)
push
inc
mov
xor
scas
add
xor
add
inc
cld
sub
push
jne
inc
lods
and
fsub
push
ret
sbb
test
xor
xchg
lahf
aas
test
jl
mov
pop
xlat
(bad)
stos
mov
and
xor
dec
mov
jle
(bad)
fmul
lods
sub
std
cli
cmps
mov
hlt
std
fdiv
mov
out
xchg
push
xchg
or
pop
icebp
pop
mov
(bad)
loope
in
mov
fsubr
scas
fsub
or
aaa
ins
pop
stos
cli
inc
xchg
out
mov
add
lds
mov
dec
movs
lock
cli
jns
sti
mov
mov
push
ror
fdiv
cld
sbb
and
mov
in
test
xchg
aam
xor
sbb
add
in
dec
sub
fsub
fdiv
mov
loope
xor
xor
lods
popf
movs
repz
mov
dec
scas
mov
icebp
push
ss
xlat
jmp
and
dec
ret
mov
aas
les
or
aaa
outs
mov
rep
mov
lods
and
stos
cli
stos
nop
std
add
cs
cmps
fisub
inc
daa
push
push
push
out
or
jnp
loope
sbb
mov
out
sub
imul
sub
icebp
loop
test
mov
sub
mov
pop
(bad)
mov
jns
cld
and
iret
mov
stos
faddp
or
ftst
pop
and
dec
or
sbb
shr
jns
adc
inc
mov
cmp
cdq
mov
sbb
fild
ror
ins
fstp
inc
lahf
fsubr
and
jne
sbb
sbb
gs
mov
std
mov
pop
and
xor
cmp
jno
cmp
mov
fs
ret
inc
fdivr
xlat
into
outs
aas
fmul
and
jne
mov
cmc
jge
inc
int
imul
movs
cmp
sbb
fwait
pop
mov
stc
daa
sbb
xlat
add
adc
std
sub
sbb
les
jbe
je
xchg
or
ret
cmp
inc
gs
shr
data16
in
add
daa
retf
sub
inc
lahf
or
outs
pop
(bad)
or
or
mov
inc
or
sbb
hlt
mov
lahf
or
fxch
lods
or
mov
cmp
jmp
push
mov
pop
div
repz
mov
and
mov
push
xor
sub
xor
paddsb
sbb
and
xor
pop
ss
(bad)
fiadd
xchg
call
adc
xchg
imul
dec
xlat
adc
mov
shr
mov
shr
pop
mov
icebp
lods
retf
lds
lods
inc
jns
jbe
aas
pop
pop
sbb
in
popf
sbb
jbe
aas
jns
(bad)
adc
aas
adc
mov
mov
sub
daa
push
movs
push
enter
mov
dec
sbb
sbb
daa
fs
movs
mov
pushf
outs
adc
into
daa
mov
imul
inc
mov
mov
dec
mov
outs
ins
cmp
and
lods
hlt
fcom
stos
stos
mov
int
jmp
push
(bad)
shl
call
iret
pop
imul
xor
add
int
stc
sbb
repnz
mov
ret
or
jge
into
sub
inc
out
pop
(bad)
int
and
in
cdq
fistp
jmp
dec
mov
inc
retf
imul
(bad)
xchg
inc
test
fbstp
mov
mov
or
and
add
or
pop
and
inc
data16
inc
imul
ds
int
sbb
(bad)
scas
loopne
push
inc
mov
out
cmc
pop
and
mov
push
sbb
mov
jb
cmp
imul
pop
dec
fsub
sbb
fwait
jb
cmp
popa
test
out
outs
jl
fs
fs
pop
retf
ins
add
adc
mov
xchg
jmp
aad
mov
adc
add
jnp
test
add
inc
mov
int3
or
sahf
iret
sbb
and
in
mov
mov
mov
cmp
mov
jae
dec
jo
push
arpl
and
cmp
movs
fisttp
(bad)
std
ds
in
test
retf
lock
stos
sbb
mov
ficom
xchg
jmp
aas
mov
stos
int
jno
push
jg
push
pop
pushf
xor
jbe
xchg
push
xor
aam
inc
aas
movs
inc
fsubrp
or
pop
test
aam
neg
adc
repz
xchg
mov
pop
sub
cmp
jmp
andps
mov
mov
dec
jecxz
cmp
push
cld
jb
daa
xor
mov
add
cmp
or
or
mov
mov
add
sbb
or
lods
xchg
sbb
pop
sbb
mov
mov
int3
xchg
mov
pushf
js
xchg
jne
sub
mov
pusha
adc
out
dec
and
and
ficom
aad
push
mov
into
jge
mov
and
jp
cwde
inc
cmc
mov
and
pushf
mov
sbb
repnz
loope
adc
icebp
cld
call
in
ins
mov
mov
push
mov
imul
sub
(bad)
push
in
jbe
add
shr
enter
mov
dec
push
mov
mov
push
inc
jge
popa
or
mov
js
push
mov
frstor
mov
sahf
movs
enter
ret
in
push
push
les
test
loope
repnz
cdq
xchg
jge
lods
in
xchg
(bad)
out
shl
mov
cld
mov
mov
cmp
loope
mov
jns
repz
cmps
mov
xor
je
cmp
dec
push
arpl
(bad)
lods
mov
cmp
es
fwait
add
(bad)
jb
nop
cwde
and
sub
sbb
sub
nop
and
ins
sbb
ficom
xchg
fisubr
pusha
push
std
call
dec
jns
in
sbb
popf
cmp
pop
int
jmp
out
mov
or
mov
cmp
in
popa
sub
inc
inc
into
adc
jns
adc
or
retf
sbb
divps
jnp
mov
push
xchg
fidiv
and
or
packuswb
inc
(bad)
push
int3
ds
push
(bad)
test
inc
inc
aad
sub
pop
into
hlt
call
mov
sbb
stc
cmp
leave
add
or
pop
pop
xor
xchg
test
cs
outs
pop
cmp
test
mov
stc
inc
mov
push
xor
fs
mov
ret
cmp
add
mov
push
fstp
sbb
xor
outs
sar
dec
xchg
inc
sbb
dec
retf
xor
out
dec
sar
mov
ss
push
push
jle
loope
loop
outs
lods
imul
icebp
out
xor
ds
sub
popf
les
pop
fs
sti
inc
fsubr
fist
mov
dec
pop
cmp
or
sub
inc
add
and
xor
mov
pop
sbb
or
add
mov
cwde
dec
mov
outs
adc
sti
xchg
sbb
int3
ss
xchg
js
imul
fwait
xchg
xor
cli
call
in
in
dec
inc
push
out
cwde
inc
rol
sbb
inc
xchg
xor
pop
jle
paddusw
or
xchg
ffree
mov
inc
cmp
xor
jl
movs
mov
and
neg
add
sti
shl
xlat
sub
mov
sbb
idiv
jnp
mov
popf
sti
inc
or
mov
cmp
inc
and
in
mov
sbb
and
retf
sbb
pop
mov
mov
ds
and
cmps
xlat
jnp
mov
je
jnp
push
sub
fwait
dec
(bad)
mov
call
xchg
xchg
aaa
aam
pop
mov
aaa
push
add
dec
pushf
aaa
and
adc
pop
xchg
xor
or
push
lods
or
mov
and
les
pusha
inc
and
sub
inc
test
sub
mov
pop
jge
pusha
xchg
call
clc
or
setle
and
adc
call
push
xlat
movs
scas
mov
push
out
jae
cmp
or
pop
pushf
into
sbb
sbb
fnstsw
leave
push
add
xchg
mov
jno
jg
fild
xor
or
sahf
int3
jno
std
rol
gs
es
iret
ins
loop
mov
pushf
sbb
mov
and
pop
add
lahf
rcl
popf
jae
pop
adc
scas
mov
jl
fidiv
or
jp
xor
xor
or
in
push
arpl
push
mov
js
xchg
mov
adc
aas
cmp
mov
push
out
push
outs
out
jns
push
dec
out
sbb
cs
data16
call
lods
and
mov
ss
ret
cmps
ret
test
push
xor
nop
dec
mov
xchg
(bad)
addr16
lock
stos
nop
xor
dec
and
mov
ret
lahf
outs
push
cld
dec
sti
dec
and
inc
sbb
mov
ins
jo
adc
mov
jns
nop
pushf
jo
inc
mov
daa
and
adc
push
adc
stc
cmps
fnstsw
call
scas
jmp
and
in
xchg
xchg
iret
jb
cdq
loope
sbb
inc
leave
pop
and
mov
stc
lahf
push
xor
dec
cs
push
fdiv
rcpps
jmp
mov
jmp
retf
sbb
pop
iret
cs
adc
xchg
call
adc
sub
xor
push
mov
sub
fld
test
push
shl
(bad)
jnp
stc
mov
push
xor
ins
and
mov
bnd
mov
push
push
and
imul
(bad)
aas
into
out
dec
(bad)
mov
and
push
fdivp
push
add
and
xor
adc
mov
sbb
mov
scas
jg
stos
dec
sub
outs
and
jg
cmp
and
aaa
jbe
and
pop
push
pop
add
and
cmps
sub
pop
or
imul
mov
cmp
lahf
mov
sbb
es
js
dec
or
ret
ins
inc
pop
or
and
jg
inc
dec
ds
cmps
mov
xor
mov
imul
jge
(bad)
ficom
xor
mov
es
sub
and
sbb
ins
cdq
das
and
cmp
and
add
add
or
js
gs
jo
or
in
icebp
xor
ins
fld
sbb
aaa
mov
inc
fwait
xlat
loopne
cmp
mov
retf
mov
and
cmp
clc
out
mov
test
mov
pop
or
inc
mov
or
test
in
cld
pop
retf
inc
(bad)
fild
mov
jle
daa
lahf
aaa
inc
sbb
inc
push
xchg
jne
pop
push
lds
out
add
outs
fs
and
push
sbb
sub
cmc
xchg
sub
pop
cwde
push
in
daa
mov
sbb
fisttp
mov
ss
ins
cwde
pop
data16
out
jl
pop
ins
fsubr
mov
mov
(bad)
popa
mov
adc
mov
add
stc
mov
jp
mov
jns
in
ret
addr16
call
in
and
leave
mov
mov
and
cwde
outs
push
call
stos
xchg
aaa
xor
add
arpl
sbb
repz
jne
inc
jecxz
sbb
xchg
mov
daa
int3
and
cmp
mov
mov
xor
js
push
cmp
push
cmp
push
or
cld
jmp
in
popa
cmp
mov
and
fs
sti
fistp
add
(bad)
retf
xor
dec
scas
rcr
push
xor
push
in
add
aas
mov
sbb
cmc
ins
ds
clc
push
add
retf
and
inc
pop
sar
nop
or
(bad)
pop
mov
(bad)
push
push
in
pop
lahf
into
not
push
inc
xchg
inc
cs
sub
sahf
lods
test
cmp
aas
or
pop
adc
push
mov
outs
dec
add
inc
mov
enter
mov
imul
cmp
push
loop
xor
inc
mov
stc
loopne
bound
loop
dec
sub
mov
xchg
cld
popa
xchg
sti
in
xchg
(bad)
cmp
(bad)
outs
mov
mov
ret
in
cdq
jmp
xchg
pop
sbb
push
outs
cld
test
mov
mov
mov
fdivrp
jmp
mov
int
lahf
stc
xchg
aaa
sub
movs
jl
xor
dec
call
dec
movs
xchg
sbb
(bad)
sub
cmp
or
std
mov
push
in
and
push
in
and
pushf
or
mov
jl
sbb
cmp
rep
xor
ds
xchg
loope
xchg
scas
pusha
pshufw
add
pop
cmp
cld
sbb
xor
sti
pop
retf
mov
pushf
jmp
push
xor
sahf
mov
push
cli
sbb
jns
test
test
add
(bad)
test
outs
mov
imul
xchg
jmp
das
bound
push
sbb
into
mov
cmps
test
in
xchg
jmp
and
pop
cld
mov
in
jbe
sub
cs
adc
jo
loopne
test
push
sbb
pop
sbb
outs
sbb
cmp
repz
and
in
jnp
xchg
popf
jmp
addr16
or
ds
pop
std
sbb
sbb
test
int3
ret
inc
(bad)
enter
fist
loop
shr
aam
push
es
in
jno
jo
imul
pushf
and
add
test
jo
(bad)
jle
or
or
mov
arpl
push
push
fst
or
ins
sbb
push
psllq
(bad)
aam
jmp
(bad)
or
arpl
mov
call
test
jo
cmp
mov
add
jle
int3
jge
ja
gs
das
bound
xchg
in
ds
or
jge
rol
jo
mov
add
pop
jbe
lock
cdq
(bad)
cmp
mov
xor
ins
pushf
cmp
xchg
jge
push
mov
loope
mov
in
test
jle
(bad)
jmp
das
push
popa
cwde
imul
push
adc
movs
cmps
inc
xchg
(bad)
std
xlat
aam
outs
cmp
xor
js
(bad)
js
sbb
adc
(bad)
jge
mov
xchg
out
sti
xchg
push
shl
fdivr
sar
in
pop
sub
xor
cwde
jge
fdiv
sahf
sbb
jne
sub
and
push
loop
lods
mov
dec
ret
sbb
inc
push
les
fbstp
pop
xor
xchg
xchg
pop
or
push
pushf
add
cmc
dec
or
(bad)
xchg
push
dec
xchg
xchg
sbb
xor
dec
daa
hlt
mov
dec
push
or
mov
xchg
(bad)
pop
xor
scas
pop
lods
sub
jge
jl
outs
mov
xor
out
mov
xchg
fs
call
adc
(bad)
cld
ins
add
inc
sub
cwde
fdivr
push
and
dec
cmp
fs
push
neg
mov
pusha
dec
sbb
es
pop
mov
mov
and
xchg
cdq
dec
sbb
or
xor
adc
and
jbe
call
jmp
xlat
stos
shl
and
ins
loopne
sahf
xor
or
cmp
dec
add
rcr
adc
jg
cmps
cmc
aaa
and
(bad)
sbb
and
mov
jge
inc
cmc
jg
ins
mov
mov
mov
adc
fucom
dec
sub
mov
ficomp
out
jmp
xchg
or
pushf
sti
adc
inc
and
dec
mov
or
jg
lahf
sbb
sar
pop
cmp
in
pop
popf
sub
fnsave
retf
cmp
out
fwait
push
pop
shl
leave
cmc
mov
adc
sub
jb
dec
int3
mov
push
pop
mov
cdq
shl
cld
call
push
jmp
push
and
lods
and
cmp
push
cld
add
lea
pop
in
push
pop
xchg
and
or
sub
mov
ins
push
xchg
jp
sub
mov
shl
sub
sti
js
jbe
je
xchg
imul
hlt
aas
(bad)
outs
jge
and
xchg
cmc
data16
pop
mov
push
popa
pop
dec
add
jp
cmp
pop
sub
mov
pop
jne
jmp
xor
inc
stc
xlat
stos
xchg
in
outs
in
mov
pop
sbb
movs
in
mov
call
and
dec
sbb
cli
jl
mov
ins
or
mov
(bad)
cmp
scas
jnp
ins
xchg
or
call
mov
out
(bad)
jl
(bad)
xchg
rcr
jmp
pop
pushf
and
fisub
xor
jne
xchg
aaa
push
sbb
mov
ja
push
inc
int3
imul
mov
aam
jb
jmp
daa
(bad)
ins
into
xchg
push
jns
push
sahf
fcom
add
ins
adc
aaa
xor
mov
mov
push
jb
xchg
adc
pushf
pop
or
or
in
dec
scas
and
or
mov
pop
pop
in
in
cmp
movs
je
into
aas
jnp
outs
(bad)
push
cmp
mov
cmp
pop
add
and
sti
ss
cli
pop
push
pop
mov
cli
aas
in
and
popa
cmp
push
sbb
es
(bad)
pushf
cmp
movs
xor
mov
cmp
dec
sbb
inc
pop
sbb
(bad)
xor
cmp
popf
mov
xchg
adc
aad
mov
fs
push
xchg
push
cmp
mov
and
xor
cmp
cld
cmp
cmps
sbb
push
sub
shl
inc
ins
adc
cmc
inc
into
aad
xchg
pop
adc
ret
sbb
cmp
push
ret
pop
ret
mov
xor
and
add
jae
jae
xchg
and
pop
into
mov
test
iret
or
jle
jmp
mov
test
sbb
sub
jo
xor
mov
mov
sti
inc
push
xor
cmps
inc
push
pop
sbb
outs
add
cmp
icebp
js
push
push
fimul
aas
rol
fld
add
repnz
or
(bad)
mov
sub
pop
mov
pop
clc
xor
push
shl
fsubr
cdq
pop
and
fimul
fcmovbe
(bad)
jnp
imul
out
push
or
test
fist
xchg
sbb
in
xor
jl
pop
jbe
data16
mov
mov
shl
bound
stos
mov
js
add
and
add
sbb
jmp
xchg
xchg
cmps
or
add
adc
je
movs
icebp
mov
sub
cmp
cs
sti
pop
push
out
xchg
jae
add
retf
mov
adc
clc
jl
ins
call
push
jge
out
fisubr
or
repnz
loope
fist
pop
adc
ret
xor
add
call
mov
aad
mov
pusha
jge
jg
es
push
retf
pop
ins
push
ins
sbb
mov
pop
xor
pop
call
dec
shr
mov
jbe
sbb
cmp
js
and
pop
loope
js
jge
push
test
std
dec
jnp
repnz
popf
inc
dec
sbb
adc
cmp
cs
shl
clc
adc
clc
stc
pushf
outs
pop
js
rol
daa
sar
and
std
add
outs
sahf
sub
dec
pushf
mov
rol
push
mov
(bad)
(bad)
cmp
pop
jmp
int
ret
cs
int
cs
popa
inc
data16
aas
mov
inc
addr16
jno
loopne
cmp
outs
push
and
xlat
fsubp
jns
ret
mov
lds
jae
into
pusha
test
and
add
fwait
sbb
frstor
pop
int3
push
ret
cmp
pop
out
repz
mov
push
inc
jmp
dec
add
sub
js
lds
call
cmps
push
mov
xchg
jbe
in
push
addr16
mov
aad
shl
call
inc
fs
xchg
js
and
icebp
lods
sub
outs
add
imul
retf
mov
(bad)
jmp
sbb
mov
and
dec
xchg
mov
jle
jmp
xor
jbe
out
and
xor
sub
pop
(bad)
mov
sub
jecxz
ins
adc
ret
pushf
ja
and
jle
push
pop
cs
sub
mov
cs
mov
sbb
push
jl
rcl
bound
ds
push
inc
fnsave
rol
int
push
sbb
call
data16
or
adc
fnstenv
rcl
push
dec
jle
xchg
imul
aam
push
into
and
fbstp
sbb
pop
das
movs
push
push
sti
push
and
jge
mov
shl
int
dec
adc
add
pop
into
and
cdq
outs
lods
ror
or
popa
and
and
cli
loope
loopne
retf
cli
(bad)
dec
mov
out
call
sbb
lahf
int
push
xlat
and
push
jne
ins
push
call
loopne
sbb
fnsave
xchg
jae
aad
or
adc
cmc
add
out
adc
push
das
and
adc
push
std
lds
popw
shr
xchg
data16
adc
pop
mov
push
js
sbb
cmp
pop
scas
xor
(bad)
cld
icebp
outs
pop
movs
fdivr
jmp
sbb
loope
cdq
sbb
ds
inc
sbb
das
loopne
das
lock
fwait
jne
pop
ror
in
push
scas
push
sub
jbe
sub
xchg
cld
jne
movs
dec
ins
sbb
movs
jno
fild
fisttp
ret
inc
xor
scas
ror
dec
adc
add
add
ins
and
xchg
mov
(bad)
adc
xchg
(bad)
push
pop
iret
movs
lds
aad
js
fs
xchg
imul
push
mov
ret
inc
pop
nop
ret
popf
add
in
aas
sbb
mov
fwait
data16
jle
jmp
and
and
je
fwait
mov
imul
jnp
addr16
sbb
dec
mov
loopne
in
sub
dec
pop
nop
das
sub
mov
cmp
mov
mov
int3
das
imul
sar
pop
sub
push
cmp
add
imul
ffree
pop
std
sbb
push
aad
sbb
arpl
inc
stos
mov
pop
sbb
mov
hlt
fsubr
fwait
jb
mov
aas
in
pop
ret
int3
fcomp
pop
ins
cmp
std
pop
cmp
pop
push
jg
sbb
in
cmp
aam
(bad)
pushf
data16
test
nop
adc
cmp
inc
jno
shr
xchg
popa
jno
fsubp
sbb
iret
(bad)
pop
repz
xor
pop
pushf
js
xlat
call
ins
mov
lods
cmp
(bad)
mov
sahf
dec
mov
push
adc
pop
inc
pusha
lds
test
fsub
and
mov
mov
pushf
mov
sbb
(bad)
arpl
inc
pop
mov
add
xlat
adc
loope
jbe
cli
mov
lahf
stc
mov
mov
mov
sbb
and
sbb
sbb
hlt
pop
cmps
pop
sub
mov
and
jp
retf
sbb
inc
sub
sub
and
jmp
xor
cmp
inc
cmp
adc
sub
das
call
clc
sbb
call
xor
popa
mov
fdiv
sub
imul
mov
jle
push
dec
fwait
xor
add
in
pop
pop
inc
push
push
icebp
or
xlat
pop
and
mov
call
ss
dec
cmps
nop
and
pop
xchg
and
cmp
popf
xor
cmp
les
repnz
jge
leave
dec
jg
pop
stc
jo
dec
inc
dec
loop
stc
push
ror
dec
jp
rcr
nop
into
lods
push
cmp
rol
je
rol
ret
jnp
shr
fwait
jl
movs
push
cmp
dec
mov
ss
sbb
pop
mov
mov
jl
mov
dec
ss
mov
and
cmp
xchg
test
leave
outs
sahf
int3
push
sbb
pop
xor
pop
xlat
nop
ins
cmp
mov
add
pop
test
data16
push
sub
ror
fs
in
add
sbb
push
ret
in
pushf
movs
push
push
in
sbb
stos
(bad)
adc
in
es
les
adc
inc
jg
shl
aad
push
sbb
je
cmc
pop
or
nop
mov
imul
ret
pop
sbb
or
cmp
pop
xchg
stc
pop
cmp
hlt
pop
cmps
fmul
mov
in
inc
rol
push
neg
or
aad
jae
push
outs
xor
out
push
push
xchg
push
ins
addr16
pop
outs
push
cld
jge
mov
pop
mov
mov
frstor
mov
sbb
cmp
mov
cli
pop
cld
leave
sub
push
aas
xchg
pop
dec
mov
loop
imul
ins
dec
mov
push
jle
adc
scas
shl
mov
push
aam
pushf
adc
mov
cmp
sub
or
and
jecxz
sbb
fwait
out
xor
sbb
mov
add
jmp
outs
cld
jg
sbb
loop
mov
fmul
mov
dec
inc
(bad)
push
in
xchg
jnp
sti
and
or
push
in
pop
je
sbb
shl
icebp
jno
jmp
pop
cmp
in
sbb
mov
sbb
push
xlat
pop
xchg
adc
jne
inc
movs
pop
adc
pop
mov
lods
scas
xchg
jnp
(bad)
cmp
test
pop
inc
push
sbb
ins
xchg
(bad)
pop
or
jg
inc
mov
cdq
mov
ret
and
mov
add
mov
push
js
sub
xlat
jecxz
outs
and
es
and
lods
fsubr
cmp
mov
mov
fmul
xor
add
js
repz
mov
mov
(bad)
sub
sbb
sti
inc
cld
nop
pop
inc
mov
imul
cmp
in
into
mov
jle
fcom
je
outs
(bad)
add
add
data16
mov
addr16
jae
ins
jl
test
push
mov
xor
rol
mov
sbb
jecxz
addr16
push
add
jnp
or
adc
cmp
std
jl
and
fs
retf
inc
fcmovne
inc
(bad)
loope
cs
loopne
or
push
dec
dec
mov
(bad)
sub
sub
sub
or
mov
repz
mov
fadd
adc
inc
dec
xchg
jae
sbb
cmp
mov
sub
sti
inc
pop
scas
lods
loope
push
add
in
fwait
or
popf
mov
sub
xchg
cmc
inc
or
aam
clc
xchg
xchg
sub
adc
jge
pushf
mov
retf
adc
int3
pop
push
dec
adc
(bad)
jg
jmp
mov
lahf
pop
test
push
mov
popa
push
xchg
mov
xchg
mov
sub
xlat
mov
dec
adc
cs
call
(bad)
and
jmp
sbb
mov
pop
sbb
pop
sbb
fs
sti
jbe
(bad)
jl
sbb
js
aas
mov
or
mov
mov
sub
inc
mov
xchg
push
mov
push
push
ins
mov
pusha
mov
in
mov
ins
cmp
lock
aam
mov
stos
sti
rcr
dec
push
sti
xor
rol
rcl
mov
test
scas
jecxz
inc
push
adc
out
sar
inc
popf
fs
cmp
pop
jmp
es
add
mov
mov
cmp
dec
sub
xor
adc
pop
aam
and
inc
sub
fdivr
jno
loope
xor
mov
loope
outs
and
pushf
add
scas
push
mov
push
push
push
jp
cmp
push
scas
jne
ja
push
sbb
dec
dec
cmp
fsubr
rcl
inc
sub
mov
fist
in
jae
xchg
data16
(bad)
loope
adc
mov
fmul
(bad)
(bad)
popa
sbb
push
adc
fcomp
or
fst
rol
xchg
push
sbb
sti
std
and
jmp
jo
(bad)
jecxz
push
pop
jg
loopne
std
inc
fsub
data16
sub
xor
shr
push
mov
xchg
sub
and
out
dec
mov
fisttp
pushf
jge
movs
or
add
cmc
call
in
and
dec
mov
sar
out
push
out
jmp
lods
cmc
sub
mov
adc
in
in
jg
imul
(bad)
jne
test
cmp
jp
in
scas
or
mov
loopne
sub
pop
and
lock
movs
movs
icebp
dec
call
push
into
repz
out
adc
repz
dec
sub
jl
in
lds
stc
dec
cmp
push
das
sbb
(bad)
(bad)
mov
mov
dec
sbb
test
mov
outs
(bad)
div
add
es
jmp
cmp
je
pop
xchg
sub
ret
les
dec
mov
out
pop
sti
popf
push
xchg
in
mov
add
and
adc
sbb
fs
jl
fsubr
int3
mov
jle
sar
fisubr
xor
(bad)
fsubr
mov
std
(bad)
mov
push
inc
mov
lods
cld
repz
fldl2e
(bad)
adc
out
fsub
xchg
pushf
jno
sbb
iret
idiv
and
clc
cmp
xchg
dec
xor
xchg
mov
xchg
mov
and
mov
cmps
fwait
pop
mov
xlat
clc
adc
mov
mov
cmp
xlat
jo
mov
movaps
jp
out
loope
jmp
push
cmps
cwde
shl
call
jecxz
mov
fsubr
cwde
js
mov
in
and
xchg
jmp
dec
pushf
and
ret
add
jmp
xchg
clc
inc
adc
cdq
push
iret
lods
imul
rol
xchg
ficom
jmp
lods
std
fsub
cdq
xor
loope
xchg
loop
sub
sbb
(bad)
push
pop
push
imul
dec
std
les
outs
mov
jle
or
or
mov
sbb
pop
jge
inc
into
jl
pop
or
fisubr
dec
popf
cld
push
sbb
mov
push
nop
mov
bound
les
test
mov
ds
push
pop
mov
adc
mov
mov
ds
mov
loopne
pushf
sbb
js
call
out
stos
movs
mov
mov
mov
jg
enter
arpl
scas
movs
push
fdiv
xchg
sub
scas
mov
pop
jb
add
cmp
ror
(bad)
(bad)
repz
lods
rol
ret
loope
sub
pop
jecxz
jo
fcomp
out
(bad)
mov
addr16
ret
(bad)
fcmovnu
xchg
in
jo
cld
ja
jmp
aas
jge
ret
push
sti
sub
mov
sbb
ja
dec
cmc
cmp
push
(bad)
xchg
mov
test
and
jl
xchg
xor
pop
pop
test
pop
pop
fs
loopne
jmp
mov
(bad)
fadd
fstp
add
push
cmps
dec
or
mov
out
aam
outs
push
bound
add
outs
cmp
loope
or
sbb
mov
mul
xchg
and
sti
mov
aam
mul
xor
xor
push
repnz
mov
idiv
pop
loope
pop
pop
gs
jecxz
stos
add
and
add
test
scas
es
jbe
jb
push
xchg
mov
shr
xchg
stos
or
add
cld
xlat
je
jg
jmp
dec
cmps
adc
jo
push
sub
inc
lods
or
aas
push
es
test
xor
push
gs
fdivr
and
fst
dec
jo
hlt
push
sar
fsubrp
nop
xchg
xchg
cmp
dec
dec
fs
out
cmps
jle
and
and
pop
mov
sbb
mov
sti
xor
in
in
aam
jb
ret
fisttp
pminub
retf
lock
cmp
ds
retf
loope
and
repz
hlt
inc
imul
int3
push
dec
pop
stos
mov
mov
pop
dec
mov
sbb
scas
loopne
ss
loop
pop
pop
lea
in
in
jg
dec
jl
sbb
pushf
sub
push
js
cmps
mov
adc
xchg
idiv
jo
pop
sbb
lods
pop
ret
mov
rol
sub
in
hlt
in
lahf
inc
aad
inc
cmp
movs
adc
into
dec
xchg
cwde
pop
mov
jb
push
lea
jmp
jge
sahf
mov
or
mov
jecxz
add
dec
test
inc
clc
aam
mov
pop
pop
imul
xchg
sahf
mov
mov
and
dec
mov
mov
inc
repnz
or
and
into
arpl
stos
daa
into
js
mov
xor
ret
out
sub
addr16
sbb
jbe
xchg
inc
mov
pop
pop
sbb
call
test
ins
sbb
jecxz
popf
inc
aas
jnp
fld
sub
(bad)
pop
xchg
push
and
(bad)
cld
ret
lahf
cmp
xchg
cmp
mov
(bad)
ficomp
mov
push
push
retf
hlt
push
scas
test
in
and
pushf
mov
sub
mov
mov
call
inc
and
lahf
or
sub
add
push
mov
int
outs
dec
jmp
shl
movs
or
into
iret
jg
mov
sahf
mov
pop
xor
pop
ds
pop
adc
cmp
fnstenv
and
push
push
or
lea
pop
out
aaa
mov
test
lods
adc
mov
fadd
movs
jg
mov
pop
outs
aad
mov
aaa
and
mov
mov
repz
jmp
pop
xor
push
rol
xlat
dec
or
cs
jle
shl
ja
and
out
(bad)
pop
inc
or
std
rcr
xor
ins
push
out
idiv
and
ror
fs
fldcw
int3
mov
bound
test
pop
push
sahf
aad
pop
and
loopne
movs
sbb
dec
mov
and
push
in
in
inc
mov
out
pop
and
push
std
ins
je
push
xchg
int
sbb
jo
dec
mov
repz
inc
and
mov
aaa
sahf
lods
sbb
retf
ss
aas
xor
xchg
xchg
mov
rcr
stos
sahf
shr
test
xlat
push
cld
inc
pushf
cmp
aad
addr16
mov
cmps
sbb
cmc
xchg
jle
sub
mov
or
sub
and
fbstp
add
sti
sbb
(bad)
loope
sbb
fstp
lods
mov
rol
xor
stos
repz
push
into
test
call
sub
arpl
mov
cld
fstp
pop
inc
mov
(bad)
or
rcl
cwde
loope
ds
xor
hlt
out
pop
shl
xor
mov
push
dec
xchg
retf
in
jp
xor
jo
jnp
cdq
mov
(bad)
out
add
outs
xor
push
hlt
pushf
sbb
(bad)
pop
fwait
stos
aad
add
mov
movs
xchg
scas
imul
gs
or
and
xlat
mov
data16
push
pop
lds
adc
cmp
cld
je
repnz
out
fsubr
jae
std
adc
sbb
cmp
in
(bad)
iret
pop
hlt
add
ds
loope
xor
and
pop
xor
adc
and
lock
push
in
pop
xor
pop
outs
inc
movs
mov
ror
cmp
cmp
mov
sbb
xchg
cwde
out
cmps
enter
retf
jl
aaa
sahf
mov
adc
and
lds
hlt
jle
sbb
test
jg
sti
pop
fbld
repz
cmp
xchg
pop
or
sbb
sbb
xchg
xor
getsec
jb
movs
pusha
fnstsw
imul
lds
sbb
and
stc
fwait
sbb
std
mov
test
pop
sbb
pop
fnsave
or
gs
cs
fsub
fnstsw
dec
and
mov
and
mov
clc
sahf
inc
mov
in
sar
jmp
lods
ins
pop
jb
std
aad
adc
idiv
bound
mov
mov
arpl
fcom
xor
pop
and
nop
pop
xchg
sbb
rcl
cs
cwde
sub
(bad)
in
dec
out
in
xor
or
xchg
sub
out
pop
and
sbb
cdq
loopne
dec
pop
mov
sbb
fs
add
and
push
fcom
loopne
cmp
jns
es
stos
xor
xchg
cs
xor
js
xchg
scas
mov
sbb
add
jg
and
mov
pop
popa
shl
push
es
dec
aaa
add
retf
sti
(bad)
mov
(bad)
push
ins
mov
xor
mov
sub
sub
cmp
sbb
push
jg
imul
push
jecxz
pop
push
jmp
enter
in
mov
and
xor
sub
aas
cmp
rol
jmp
fstp
sbb
push
pusha
ss
(bad)
mov
outs
add
mov
jmp
jns
clc
pop
fsub
(bad)
scas
outs
pop
leave
cmc
movs
xchg
pop
sub
push
popf
sti
sub
es
sbb
mov
xchg
sbb
add
pusha
mov
(bad)
aam
mov
lods
retf
cld
pop
xchg
pop
gs
sbb
mov
outs
jns
bound
jle
or
sbb
loop
and
(bad)
jge
mov
push
and
push
sbb
test
jne
cwde
adc
jo
jl
test
push
cmp
mov
dec
out
add
mov
data16
jg
rcl
pop
mov
add
sti
sbb
mov
(bad)
add
or
mov
mov
sub
icebp
outs
or
mov
outs
icebp
pop
mov
mov
in
mov
push
mov
in
dec
sahf
shl
xor
int3
rcl
jg
mov
cmp
xor
ret
(bad)
repz
sub
movs
mov
je
(bad)
aas
sub
imul
ror
add
ret
jb
cmp
stos
fcomp
enter
pop
pushf
retf
sbb
xor
sbb
pop
test
icebp
cdq
mov
scas
retf
mov
jae
sahf
mov
xchg
mov
adc
inc
add
dec
in
pop
fisubr
add
daa
adc
cmp
sub
jmp
lahf
sub
es
xor
or
mov
imul
inc
aad
sti
pop
dec
cdq
aad
sub
js
pop
lods
nop
loopne
outs
xor
push
mov
or
loope
ins
and
lods
xchg
div
jge
(bad)
aas
in
and
fs
out
cs
pop
mov
cld
in
movs
pusha
jecxz
jl
scas
sub
mov
inc
loopne
push
or
jb
out
mov
mov
xchg
in
fucom
jmp
push
in
mov
fbld
iret
fs
ret
je
fs
imul
mov
(bad)
hlt
add
mov
mov
js
push
mov
mov
dec
fcom
cs
ret
es
test
xchg
mov
mov
jecxz
jp
int
repnz
pop
sti
jo
sbb
adc
sar
stos
popf
mov
(bad)
clc
ins
in
fsubr
repnz
push
rol
mov
iret
and
jbe
mov
es
popf
adc
mov
sti
aas
fld
sbb
je
sbb
pop
add
jmp
test
push
and
jbe
dec
pop
and
add
cmps
in
popw
aad
out
add
xchg
lahf
ins
scas
cmp
or
mov
sbb
sar
std
xor
mov
push
mov
mov
push
jge
adc
adc
xchg
mov
pushf
mov
xor
cmp
fsubr
cs
dec
mov
ins
cs
xor
fiadd
mov
or
adc
adc
sub
cmp
cwde
jnp
inc
or
jmp
xor
push
pop
xor
ja
out
dec
xor
std
popf
sti
lock
(bad)
bound
shl
add
xchg
pusha
in
and
retf
inc
retf
adc
lods
hlt
addr16
push
lods
adc
dec
dec
jb
xor
aas
leave
imul
xor
inc
add
push
jge
mov
mov
popf
xchg
and
retw
outs
les
and
sbb
out
jmp
inc
jns
mov
ror
dec
fwait
mov
add
ss
fdiv
ror
stos
sub
call
push
dec
jnp
mov
out
outs
jp
pop
mov
dec
xchg
push
cli
dec
fisttp
jne
push
sbb
inc
fwait
jl
add
sub
cmp
ja
inc
les
jnp
aad
aad
and
imul
mov
xchg
sbb
mov
rol
adc
xor
fistp
cmp
and
(bad)
imul
cmp
jge
sahf
xchg
adc
pop
pop
mov
and
and
es
mov
int3
or
and
fadd
pop
xor
dec
into
mov
fsubr
outs
jbe
data16
adc
mov
adc
mov
inc
inc
push
scas
sub
std
enter
in
out
scas
into
adc
xor
lock
ins
jl
std
mov
movs
xor
mov
push
and
xchg
mov
pop
clc
sbb
scas
pushf
mov
dec
std
push
mov
jge
cwde
dec
ja
cmp
jo
test
pusha
fsubr
ins
ror
jg
stos
fld
ins
clc
push
or
mov
aam
mov
bound
pop
loope
(bad)
adc
stos
fdivr
inc
sbb
push
das
sti
loope
add
mov
jmp
cld
add
mov
sbb
dec
push
ja
adc
sbb
out
cmp
and
push
in
add
dec
and
pop
sub
icebp
inc
mov
ja
out
xchg
push
call
xor
add
cs
and
jl
pop
leave
cmp
ins
shl
movs
cmp
inc
push
outs
mov
mov
cmp
lods
mov
sub
cmp
outs
push
xor
in
add
and
addr16
outs
shl
lods
cld
mov
cmp
cmc
pop
outs
mov
loope
adc
mov
inc
and
ror
lods
inc
mov
push
aas
repz
jmp
out
(bad)
jge
push
jmp
jns
stos
xor
ja
js
hlt
pop
add
cs
dec
repnz
sub
leave
mov
shl
clc
dec
and
out
fnstsw
fld
jle
jecxz
call
fnsave
fwait
into
mov
sub
jb
inc
loopne
sub
mov
pop
test
dec
adc
repz
push
imul
pop
mov
sub
jp
jb
add
mov
ja
sbb
xchg
sbb
fmul
outs
loope
push
out
xor
push
inc
push
sub
fsubr
dec
in
sub
idiv
dec
sti
jnp
in
jge
into
cld
ins
jmp
mov
test
mov
shr
fstp
and
jp
inc
push
scas
movs
clc
fidiv
lahf
out
xchg
push
mov
push
xchg
call
pop
mov
mov
cmps
outs
push
jecxz
cmp
retf
mov
(bad)
fisttp
mov
lock
loopne
cmp
outs
les
hlt
push
jl
in
(bad)
call
xchg
mov
mov
and
movs
mov
clc
aaa
cmp
mov
cmp
rcr
or
clc
fidivr
and
loop
adc
in
sub
ss
and
or
or
mov
ins
mov
mov
push
fwait
xor
(bad)
test
sub
jl
nop
sahf
or
outs
pop
dec
shl
and
sbb
gs
or
adc
jp
inc
cmc
cmp
sti
push
push
cmp
jl
mov
xchg
pop
fisttp
sub
test
pushf
fsub
push
out
movs
push
push
adc
jmp
das
ret
ret
stos
repz
push
fdiv
push
int
sub
cs
xor
push
and
xchg
in
pop
(bad)
cmc
in
outs
jne
push
jp
jmp
ds
dec
call
data16
sti
push
in
push
leave
pop
test
dec
fdivr
pop
mov
xor
outs
add
and
xchg
pop
in
mov
pushf
je
stc
fdiv
pop
xchg
push
push
out
(bad)
adc
inc
repz
jp
dec
in
das
ffreep
sbb
push
pop
dec
cmc
out
pusha
fistp
push
out
cld
outs
mov
add
mov
sub
sbb
(bad)
cmp
and
jbe
popa
pop
in
jp
mov
sti
pop
mov
sar
xchg
mov
and
aas
push
test
sub
mov
scas
dec
lahf
add
push
xor
xor
inc
jmp
pushf
data16
cmp
adc
mov
xor
pop
ins
adc
jge
std
aad
dec
cmps
dec
push
nop
xchg
pop
sbb
push
mov
mov
jo
sbb
dec
push
jl
inc
fdiv
xchg
mov
inc
and
jmp
sbb
pop
add
call
iret
cmp
jl
inc
mov
xor
imul
imul
(bad)
xor
sbb
bound
xor
or
xor
cmp
adc
pop
ja
push
pop
pop
sbb
sub
and
push
dec
and
ds
adc
das
jecxz
pop
test
ror
jl
retf
rol
je
cmp
sub
(bad)
ds
mov
rcl
hlt
std
pusha
dec
loop
es
or
adc
sbb
dec
sub
das
gs
jne
or
add
leave
inc
add
fidivr
shl
shl
add
mov
mov
imul
int
imul
add
pop
lods
jmp
mov
arpl
sbb
mov
sbb
cdq
and
xor
cmp
out
xchg
xor
loope
push
aaa
pop
xor
mov
or
dec
je
arpl
mov
add
cmp
xchg
data16
sub
add
mov
in
mov
sub
shr
inc
pop
pop
xchg
sti
cmp
or
xchg
inc
sub
bswap
jl
and
rol
imul
(bad)
pop
mov
ficomp
mov
sbb
(bad)
out
pop
in
sbb
push
jno
mov
xor
sti
pop
inc
sar
dec
pop
fbld
mov
out
jg
fs
ins
fistp
pop
mov
sbb
in
jl
pop
push
cmp
pop
pop
mov
inc
cmc
in
ds
mov
sbb
push
lods
pop
mov
int3
jecxz
add
xchg
push
pop
sti
es
xchg
int3
lods
mov
jge
push
and
add
clc
(bad)
inc
pusha
cwde
movs
movhlps
sti
or
call
mov
out
(bad)
shl
jmp
imul
fist
and
clc
push
retf
pop
jl
sub
movs
mov
mov
xchg
push
and
jo
xchg
pop
sahf
sub
and
mov
(bad)
out
jb
fsubrp
jae
sbb
cmc
in
xor
out
jb
jns
push
mul
es
sbb
jecxz
add
cdq
test
icebp
or
or
and
xor
jl
push
(bad)
sbb
or
sub
or
imul
fstp
adc
push
loope
pop
dec
pop
loopne
jmp
or
and
pop
push
loopne
sbb
fcos
jl
mov
lock
ins
jns
sub
in
call
(bad)
test
and
xor
loopne
(bad)
iret
push
into
sbb
adc
leave
push
and
sti
jge
mul
sbb
cmc
push
and
int3
jo
clc
sub
leave
jge
lock
inc
jle
pop
in
push
stc
or
mov
cmp
add
xchg
and
push
mov
jmp
and
inc
pop
jecxz
add
sub
cmp
cs
adc
imul
sub
mov
fistp
and
push
test
(bad)
jecxz
sub
ret
lods
imul
in
clc
loopne
sub
cmp
pusha
sub
and
jecxz
jl
sub
inc
mov
loope
(bad)
sti
mov
push
stc
jg
fdiv
shl
sbb
mov
push
loopne
into
fld
mov
jle
and
push
jmp
scas
nop
cmp
pop
mov
adc
cmc
in
and
push
pop
cld
mov
push
and
(bad)
cli
lahf
sub
out
jae
test
mov
xchg
cmp
push
in
and
push
pop
fs
sti
adc
repnz
(bad)
adc
out
pop
dec
pushf
cmp
call
xor
pop
mov
xor
jle
out
int3
cmps
les
popf
pop
mov
fdiv
fsub
sbb
or
iret
(bad)
adc
inc
mov
mov
or
and
sbb
ins
xchg
dec
stos
shl
mov
test
jl
stos
jb
jp
add
mov
jno
inc
shl
jne
add
in
dec
imul
inc
lds
xor
setge
lods
pop
das
dec
fsubr
sbb
jle
test
or
(bad)
(bad)
or
ins
adc
jmp
sbb
(bad)
stc
lea
dec
jmp
(bad)
cmp
sub
add
jl
in
dec
movs
sti
adc
push
or
or
ds
outs
xor
idiv
lock
daa
mov
cmps
mov
leave
push
cmp
sti
scas
shl
(bad)
sbb
mov
pop
dec
xchg
mov
aad
hlt
inc
gs
(bad)
push
aas
ja
and
inc
sbb
lock
sbb
push
jecxz
jl
or
push
mov
fs
int3
sbb
nop
sbb
pop
mov
stos
fs
ins
pop
xor
add
cmp
repz
shr
mov
dec
es
lods
loope
outs
adc
loopne
xor
xchg
ror
loopne
sbb
dec
push
hlt
repnz
dec
xor
cmp
lods
mov
push
sar
(bad)
stc
cmp
sub
bound
sbb
outs
bound
and
rcr
pushf
out
or
mov
xchg
sbb
xor
push
xlat
sbb
sub
inc
cmp
xor
and
ds
push
ror
dec
pushf
(bad)
jge
jns
mov
push
mov
sbb
jecxz
mov
outs
sbb
sbb
mov
or
out
add
scas
xchg
pop
push
xchg
ins
sbb
(bad)
xor
mov
loop
jns
jge
jge
add
iret
adc
push
in
pop
push
pop
scas
cmp
xlat
rcr
lods
shl
je
pop
int3
or
sbb
pop
push
pop
nop
push
cmp
pop
mov
inc
test
rcl
out
push
ret
ror
fmul
cmp
push
xchg
pop
and
test
out
stc
outs
loopne
and
aam
clc
(bad)
cdq
fmul
mov
into
push
inc
neg
dec
out
lods
and
and
imul
add
xor
int
push
data16
(bad)
jbe
in
push
xlat
fdivrp
cwde
fadd
add
mov
mov
retf
inc
int
mov
repz
or
cmp
test
pop
xchg
in
mov
stos
ins
jb
sbb
stc
cmps
mov
jmp
jo
pop
pushf
xlat
jmp
push
add
add
sbb
pop
outs
mov
push
dec
cmp
pushf
cmp
xchg
cmp
loopne
jl
mov
jmp
das
pop
not
dec
or
loope
inc
xor
jg
inc
dec
mov
out
pop
jg
sub
dec
jo
inc
mov
push
sub
jnp
(bad)
sbb
pop
fnstsw
sub
push
xor
pop
adc
fwait
xor
sbb
aad
dec
push
pushw
mov
xchg
jno
push
push
pop
pusha
jecxz
xchg
push
mov
aad
fdiv
jle
jge
fadd
xchg
jmp
shr
fisttp
enter
mov
mov
adc
mov
and
mov
inc
lahf
jecxz
push
(bad)
loope
jle
sbb
out
popf
in
in
pop
mov
push
dec
iret
cld
fs
and
sti
sti
push
xchg
and
cli
dec
(bad)
fdivr
fwait
clc
in
sar
add
fsubr
jl
and
push
les
loopne
sbb
mov
cdq
ins
cmps
(bad)
call
add
(bad)
sub
xchg
dec
sub
push
(bad)
call
aaa
out
data16
in
jbe
pop
mov
adc
and
jg
xchg
stc
dec
in
leave
sti
cmc
in
jmp
es
dec
cwde
or
push
cmp
or
loope
pushf
inc
pop
or
(bad)
pop
mov
push
mov
mov
dec
mov
jecxz
imul
push
xor
push
xchg
pop
mov
pop
cli
sbb
mov
adc
and
cdq
(bad)
(bad)
adc
mov
mov
mul
xor
jbe
xor
and
jmp
pop
out
inc
cmps
icebp
int3
fdiv
sub
jl
out
fbstp
add
loop
popf
js
jl
sbb
fmul
iret
enter
imul
movs
mov
mov
cmc
and
in
aas
push
nop
add
mov
xlat
push
(bad)
cmps
or
stos
jp
sub
out
ror
xor
iret
scas
mov
shl
adc
imul
scas
and
add
aas
mov
shl
cmc
call
jo
into
test
hlt
hlt
adc
js
push
mov
sub
or
mov
push
lea
push
pusha
std
or
aas
push
sahf
cs
sbb
ins
pushf
sar
push
fdiv
(bad)
std
mov
(bad)
call
cmc
mov
mov
cmps
cmp
jmp
xlat
ja
xchg
xchg
add
mov
rdpmc
test
cwde
mov
mov
cld
lahf
clc
add
push
(bad)
cli
and
aaa
mov
cld
sbb
jnp
mov
retf
mov
and
js
je
test
push
cdq
or
jl
cwde
jbe
and
mov
int3
push
pusha
cdq
jmp
inc
jle
xchg
pop
jl
data16
or
sub
mov
out
dec
dec
ins
mov
shl
sub
loope
sub
push
sub
xchg
loopne
pop
mov
dec
or
in
loopne
enter
loop
iret
into
pop
arpl
nop
imul
mov
popf
inc
and
inc
jmp
mov
sbb
stos
sub
push
mov
inc
fldenv
test
xor
cmp
sbb
jecxz
ins
repz
leave
add
mov
jmp
mov
add
xchg
aas
xor
test
mov
jmp
mov
pop
xchg
repnz
mov
cs
inc
scas
mov
inc
sbb
mov
pop
push
ss
outs
imul
push
adc
xor
xchg
add
das
pop
repz
pop
mov
pop
rcl
sub
pop
int
ds
jmp
cwde
or
xchg
mov
iret
(bad)
in
sub
loopne
pop
les
inc
movs
xchg
ins
sti
cmp
pop
add
jo
stc
sub
dec
inc
lods
mov
enter
sbb
jle
imul
and
jmp
pop
test
js
mov
mov
adc
pop
std
sar
mov
mov
nop
clc
loop
ins
sahf
sti
sbb
and
pushf
xor
in
ins
adc
jmp
push
push
adc
shr
xor
ins
retf
xor
jmp
mov
lods
scas
xor
cmp
fld
jbe
test
and
mov
push
sub
stos
imul
addr16
xor
fs
pop
adc
sub
ja
in
ror
js
dec
fistp
push
loope
pop
adc
mov
outs
mov
fs
mov
xor
out
fldcw
ins
imul
lea
outs
mov
in
sub
fnstenv
jl
pop
cld
push
or
leave
hlt
mov
cmps
xor
imul
fcom
push
and
push
cdq
sahf
cmps
imul
lahf
fmul
xchg
movs
cmp
test
inc
mov
(bad)
js
(bad)
in
xor
clc
(bad)
fs
inc
jmp
into
(bad)
cld
cmp
pop
xchg
sbb
push
mov
mov
data16
mov
enter
xchg
ins
in
sbb
cmps
sar
inc
ins
jne
mov
out
ins
mov
mov
cdq
jmp
inc
cmp
push
xor
mul
ins
push
dec
ficom
mov
(bad)
jmp
mov
sbb
mov
pop
push
pop
xchg
sti
mov
fidiv
jecxz
or
pusha
fisubr
fmul
xlat
cmps
pop
je
into
icebp
lock
loope
pop
xchg
lods
add
nop
mov
test
push
dec
ja
fdiv
fwait
sub
push
jge
std
mov
pop
pushf
ins
pop
xchg
loope
imul
stos
sbb
aad
ds
mov
in
mov
iret
mov
ds
jae
fnsave
in
into
inc
cmp
icebp
mov
repnz
jl
or
cdq
enter
cwde
cmp
mov
or
cs
btr
sbb
sub
mov
aaa
pop
push
shl
aam
loop
aas
add
add
pushf
xor
lods
sahf
lea
xchg
mov
retf
pop
dec
das
mov
fsubr
pop
fcomp
adc
jg
sub
ss
or
cmp
push
fs
inc
xchg
push
ja
icebp
mov
pop
mov
jns
push
inc
or
cli
mov
aad
dec
pop
shl
js
je
add
jg
dec
jns
and
sbb
and
stos
or
mov
out
ss
call
mov
mov
jnp
nop
adc
add
inc
sbb
out
push
push
xchg
mov
inc
fcom
pushf
add
outs
in
jle
mov
pushf
sbb
pop
adc
lock
std
fucomp
mov
bound
call
aaa
in
jg
push
ret
push
ror
ja
sub
ficomp
loope
es
bound
pop
adc
movs
int
add
int3
fnstsw
mov
mov
adc
lds
xchg
imul
push
fcom
fidivr
adc
or
lods
cmp
pminub
jae
inc
mov
sbb
sti
inc
mov
ficomp
bndstx
loope
call
into
shl
inc
push
sti
xor
call
or
xchg
sbb
mov
push
mov
mov
cmps
fsubr
fld
data16
inc
sub
cwde
and
retf
jnp
ds
push
repz
test
and
jnp
sbb
aam
jecxz
mov
push
sbb
pop
lock
stos
xrelease
push
call
int
xor
aad
ja
scas
dec
pop
adc
cli
ret
pop
push
add
aas
mov
scas
jmp
mov
cmp
adc
syscall
iret
sub
cmc
push
sbb
pop
fdivr
jmp
daa
jns
push
sbb
mov
push
cmps
popf
fdiv
inc
movs
ret
sbb
cmp
xchg
jg
in
jge
jg
jge
sbb
mov
pop
adc
pop
pop
sahf
imul
jle
ins
outs
out
or
fwait
jle
sub
popf
ja
inc
scas
pop
loopne
pop
ins
call
clc
mov
test
jmp
loopne
in
in
cmp
cs
ins
in
inc
sbb
xor
xchg
jno
neg
pop
pop
sbb
inc
int3
shr
psrld
mov
daa
inc
(bad)
sbb
and
adc
sbb
xor
outs
sub
and
sub
stos
dec
std
and
out
push
pushf
cmp
ds
ins
add
push
fdivp
inc
xor
jl
cmp
sbb
or
dec
(bad)
jl
sub
in
in
dec
jbe
movs
inc
(bad)
popa
xor
das
ret
js
xchg
inc
pushf
push
mov
sbb
jae
es
fldenv
cmp
clc
mov
pop
and
sbb
inc
das
sahf
int3
pop
cld
lahf
sbb
push
and
pop
sub
inc
dec
or
pop
push
mov
fnstcw
(bad)
sbb
data16
aad
cmps
xchg
imul
popa
ret
adc
sbb
sbb
jmp
test
retf
imul
push
or
data16
outs
std
sub
mov
fs
lods
dec
and
fbld
inc
arpl
jbe
sbb
fsubr
sti
cld
je
xchg
into
mov
sbb
call
jno
je
sar
sbb
mov
jmp
xlat
fmul
ds
fnsave
sbb
out
test
ret
jbe
test
fdivr
xchg
andps
(bad)
mov
les
scas
xchg
in
push
gs
sub
pop
shl
jo
sub
pop
in
jl
and
dec
cmp
jle
sahf
and
push
pop
pusha
aas
in
pop
std
jg
xor
cmp
call
sbb
cmp
pop
in
xor
(bad)
sbb
aas
inc
lahf
and
sbb
and
jg
jno
mov
xchg
std
retf
movs
and
popa
(bad)
mov
pushf
xchg
mov
push
xor
popf
add
ret
out
ss
xchg
sti
(bad)
jae
loope
mov
or
in
add
xchg
add
jle
sti
mov
xchg
jg
mov
and
mov
mov
(bad)
inc
mov
pop
lahf
add
stc
add
jbe
add
arpl
sbb
jae
mov
cmps
pop
xchg
js
dec
lock
cwde
ret
loope
jg
jp
rep
ds
cmp
pushf
sub
push
retf
xchg
jge
into
pop
push
push
cmc
idiv
das
aad
pusha
popf
int
jp
and
loop
jne
fdivr
fldenv
stc
mov
xchg
sbb
and
in
xor
cmp
pusha
jge
sub
mov
push
push
mov
inc
cwde
mov
ror
jnp
sbb
sub
push
dec
jb
sub
xor
ins
icebp
in
mov
sbb
mov
pushf
repz
inc
shl
cld
cmp
mov
cs
pop
js
ins
xor
out
aam
jge
out
push
shl
ret
push
adc
pushf
in
xor
and
sti
call
xor
xor
push
lock
test
out
adc
stos
mov
es
push
hlt
mov
adc
add
push
mov
in
enter
jg
jne
push
push
fistp
sub
repnz
xchg
mov
repz
jb
arpl
mov
arpl
dec
vcvtdq2ps
jl
jge
loope
xor
mov
and
ins
test
add
jb
mov
scas
gs
sbb
dec
adc
or
cld
xor
mov
ja
xor
fbld
fidiv
pop
xor
dec
cmc
or
loope
jmp
ins
jl
mov
inc
int
push
jge
test
in
test
and
xchg
and
adc
jp
into
fst
mov
fld
pop
inc
and
stc
out
addr16
in
shr
outs
or
fdivr
jg
jne
bound
push
fxch
rcl
or
pushf
test
adc
pop
out
inc
hlt
push
not
jg
add
pop
cs
movs
inc
cmps
sbb
mov
mov
pop
push
daa
fisub
jl
jmp
push
ds
(bad)
fmul
cmp
xchg
pop
in
dec
fucomip
add
movs
xchg
jmp
mov
mov
jo
mov
mov
in
sti
sbb
sbb
push
shl
dec
cld
push
sub
imul
xchg
jmp
in
add
jmp
call
add
mov
in
outs
out
adc
jge
and
sar
sub
and
es
xchg
jbe
test
push
xlat
and
fstp
outs
sbb
add
lods
mov
aaa
sub
mov
add
push
xchg
push
xchg
bound
ss
data16
pushf
fcomp
xor
in
xchg
sub
sti
mov
mov
fidiv
sbb
pop
jbe
outs
in
mov
fs
mov
cld
dec
jae
stc
inc
push
or
xor
and
and
or
cmp
jmp
jp
or
jecxz
add
cld
cmp
fsqrt
cmp
fisub
jge
sub
ret
xor
push
sbb
cld
and
dec
fistp
inc
jg
test
pop
fcomp
and
repz
adc
cdq
fs
mov
and
ret
push
inc
ss
call
mov
loopne
xchg
clc
pushf
ss
das
xchg
or
cmc
mov
hlt
mov
mov
xor
inc
cmp
xchg
out
push
push
callw
in
out
neg
pop
bound
mul
(bad)
or
pushf
push
jno
aas
shr
rol
xchg
pop
ins
jl
adc
fstp
cld
data16
addr16
jmp
cmps
jge
mov
mov
hlt
ja
test
jl
push
xor
cmp
push
sbb
push
jl
cwde
and
jl
hlt
and
es
push
fcmovu
rcr
or
neg
sbb
mov
lods
aad
loop
mov
xor
pop
hlt
sub
jnp
movs
inc
jge
rol
xchg
cmp
dec
dec
jb
sub
inc
icebp
pop
xchg
sbb
adc
push
adc
repnz
retf
popa
pop
dec
sti
nop
test
test
push
add
in
sbb
mov
gs
sbb
retf
or
add
cmp
pop
push
std
fcomip
outs
stos
sub
sbb
jl
sub
and
fstp
cmps
dec
outs
icebp
push
arpl
adc
loop
pop
scas
jae
ja
mov
cmp
repz
cmp
cmc
inc
(bad)
in
(bad)
int3
sbb
or
push
inc
xchg
sbb
xchg
xor
push
pop
into
jecxz
cld
mov
popa
stos
lods
aam
xchg
jae
inc
sbb
dec
sti
sbb
in
adc
or
pop
sub
jne
mov
test
adc
in
loop
adc
sub
outs
fistp
sbb
push
out
call
popa
out
push
and
jbe
inc
jl
push
push
sbb
add
mov
out
mov
gs
jle
sub
xor
cld
daa
(bad)
sub
add
jg
dec
sahf
cli
rol
sti
mov
mov
and
push
pop
pop
sbb
daa
repz
in
mov
fwait
and
pop
scas
cld
cmc
stos
and
fsub
pop
ins
sbb
std
push
fnstcw
sub
scas
cmps
rcr
add
cmp
cld
sbb
dec
xchg
cdq
stc
jge
mov
sub
mov
pushf
(bad)
cmc
or
jg
or
push
pop
out
retf
sbb
addr16
pop
int
repnz
jle
cmp
std
lods
xchg
cdq
stc
mov
out
ficomp
call
cli
mov
repnz
or
fnstenv
dec
ror
jg
mov
sbb
push
sbb
retf
fistp
xorps
(bad)
std
jle
cdq
stc
sbb
in
lods
(bad)
add
and
nop
xchg
jbe
inc
lods
sub
enter
and
sbb
or
xchg
jmp
push
push
pop
or
movs
mov
adc
lds
jle
outs
xlat
sbb
add
jle
pushf
ja
cmp
lods
(bad)
(bad)
pop
div
fmul
ret
mov
call
stos
inc
idiv
sbb
cmp
fcomp
mov
sub
sbb
inc
sahf
pop
repnz
loop
popa
ss
xor
loopne
dec
jmp
jg
clc
int
push
or
cli
and
cmp
xchg
add
dec
and
mov
call
cmp
push
mov
outs
loop
jb
sbb
sbb
cmp
pushw
pushf
cmp
mov
sahf
mov
movs
mov
clc
xchg
fild
and
loop
outs
push
sub
cwde
pop
js
inc
sub
aaa
xchg
pop
push
cmp
sub
jge
mov
ins
mov
and
aas
jbe
inc
mov
dec
and
andps
adc
dec
inc
add
imul
xor
arpl
fldenv
stc
cmp
jmp
out
pop
and
jb
sbb
jmp
jmp
ret
fbld
mov
nop
xchg
retf
xchg
push
add
fwait
scas
inc
mov
push
test
sub
cmp
sbb
nop
std
and
fdivp
movs
mov
(bad)
push
adc
fist
out
out
mov
mov
inc
enter
mov
push
mov
or
xor
gs
sub
pop
push
sbb
push
(bad)
enter
cli
cmps
fadd
out
fisub
das
jo
xchg
out
sti
jle
mov
cmp
push
xor
js
cmp
inc
cmp
xchg
sti
xchg
loop
jmp
add
jl
push
sub
pop
jb
mov
jge
mov
jne
icebp
jmp
fld
jl
retf
xchg
loop
div
call
cmp
ins
movs
je
jl
push
pushf
rcl
aaa
xchg
iret
rep
arpl
inc
out
push
cmps
dec
xor
mov
in
bound
and
xor
mov
jnp
sbb
pushf
pusha
ds
lods
outs
dec
mov
inc
adc
mov
mov
cld
pushf
sbb
pop
fwait
not
add
sub
mov
loope
add
jl
mov
xchg
jmp
lods
jb
in
xchg
into
add
aam
in
pop
(bad)
mov
or
fcomp
dec
loope
xor
push
xchg
xchg
sub
into
(bad)
cdq
add
retf
mov
popa
movs
add
outs
cmp
jmp
dec
ja
xor
add
xor
mov
test
neg
pop
xchg
daa
push
ins
(bad)
xor
pop
pop
sub
je
mov
repz
ficomp
push
pop
sbb
stos
xor
leave
mov
imul
lahf
pop
retf
cmp
cmp
cs
out
fdivr
sbb
popf
div
ins
pop
neg
aam
jmp
jmp
jbe
push
fistp
xor
and
fwait
(bad)
cmp
mov
xor
iret
cmp
sub
fwait
push
sbb
mov
mov
pop
jno
daa
int3
sub
mov
or
and
and
sti
fdiv
cdq
idiv
(bad)
icebp
xchg
out
stc
mov
sbb
inc
ficomp
sbb
out
inc
pop
push
outs
cwde
dec
in
jl
sbb
adc
out
iret
shl
adc
or
loop
mov
dec
call
sahf
daa
icebp
jb
je
mov
xor
sbb
adc
sbb
hlt
fs
stc
fsubr
and
or
imul
sub
cmp
out
icebp
and
loopne
mov
jecxz
sub
pop
mov
in
xor
int
pop
pusha
sub
ret
fs
lods
sbb
mul
cmps
movs
pop
sahf
loopne
in
jmp
mov
out
jecxz
leave
cmp
sbb
(bad)
xor
pusha
shl
fstp
mov
les
(bad)
sti
sbb
add
sbb
movs
xchg
in
out
mov
pop
gs
add
movs
retf
fnstenv
lock
push
cmp
dec
mov
ja
sbb
fld
xor
pop
ja
gs
mov
int3
or
daa
push
test
and
ins
xor
aad
pop
xchg
sub
fistp
cmp
call
in
adc
sbb
mov
xchg
cmp
pop
retf
fst
xor
lea
xchg
and
dec
fisttp
xchg
xor
sbb
dec
inc
dec
scas
sub
fbstp
pop
xchg
mov
(bad)
xlat
jmp
ins
and
cmp
sub
or
data16
add
shr
(bad)
movs
pop
outs
dec
lea
xor
aas
add
xor
loop
retf
jne
sub
xchg
pop
or
dec
jmp
and
sbb
inc
and
inc
jb
sub
fs
cmp
xor
fst
dec
xchg
call
mov
mov
pop
sbb
sbb
loop
out
adc
push
push
mov
sbb
add
xchg
sbb
sti
inc
(bad)
pop
and
dec
les
inc
fcmovbe
in
call
mov
mov
xor
sbb
dec
jmp
es
pop
pop
das
aam
loop
dec
jg
fld
fcomp
test
mov
ds
cmp
pop
fs
push
push
adc
call
mov
jne
fwait
movs
lea
stos
stos
add
push
push
in
mov
idiv
int3
call
stc
rep
in
enter
cmp
inc
pop
or
out
iret
fld
sahf
outs
sti
or
fwait
and
lods
push
xchg
or
mov
add
test
xchg
popa
(bad)
push
pop
push
fsub
and
imul
cmps
rcr
adc
sbb
call
ss
(bad)
jmp
sbb
xchg
cs
in
jmp
in
mov
pop
push
out
(bad)
movs
push
xchg
movs
mov
jge
jl
mov
dec
push
lds
xor
pop
xchg
xchg
mov
xor
out
lock
add
repnz
sti
cmp
sbb
sbb
jle
jmp
add
fwait
xchg
and
pushf
jl
mov
sub
or
and
mov
mov
push
inc
jg
loope
in
ins
in
call
add
nop
push
cmp
mov
jmp
not
test
lods
sbb
pop
pop
adc
xchg
sbb
mov
push
add
nop
and
jl
push
gs
rol
fidivr
pop
dec
shr
cmp
pop
pushf
push
mov
mov
jp
add
and
(bad)
sbb
jnp
fsub
sbb
(bad)
in
sub
xor
sbb
xchg
sub
pop
hlt
fs
(bad)
cli
mul
cmp
add
xchg
mov
xor
pushf
in
mov
fadd
mov
test
sbb
pop
inc
and
test
cdq
pop
jne
in
pop
inc
sbb
pop
fwait
lds
std
fcomp
pop
sti
in
pop
sbb
out
pop
(bad)
jp
lds
sbb
dec
inc
mov
and
pop
or
js
jle
or
sar
jecxz
stos
imul
jnp
inc
xchg
xor
js
jno
xor
sbb
fwait
sbb
inc
fcomp
std
jge
jbe
fnstcw
pop
cwde
mov
(bad)
pop
loopne
xlat
movs
js
cmp
fsubr
les
dec
(bad)
cs
(bad)
cmp
xchg
xor
pop
cmp
add
sbb
test
cli
call
out
add
pop
and
sti
(bad)
mul
das
iret
push
inc
cdq
cwde
dec
in
gs
mul
mov
sub
loop
push
add
popf
sbb
xor
test
enter
in
js
test
fsub
push
sbb
es
lea
fucomp
add
pop
jmp
push
popf
add
jle
fucomp
xchg
jmp
fs
in
pop
cld
and
fdivr
sbb
(bad)
cmp
outs
push
fdivr
sub
std
cmp
pop
ficomp
lods
sbb
dec
pop
pop
sbb
mov
in
test
call
or
lods
enter
test
push
xchg
in
lock
cmp
popf
pop
jle
ficomp
lods
mov
imul
inc
mov
jmp
shr
sbb
jecxz
lods
jecxz
imul
fcomp
cwde
out
leave
jnp
jmp
sbb
stc
scas
lods
pop
movs
fsubr
and
fs
lods
je
sbb
pop
and
scas
movs
pop
lahf
in
les
fistp
pop
std
lods
add
inc
pop
fcomp
in
fsubr
sbb
sub
fsub
in
and
dec
push
fucomp
jb
movs
fsubr
hlt
adc
pop
fisub
jnp
push
mov
imul
enter
push
jl
std
sub
(bad)
in
(bad)
sbb
in
sbb
cld
out
jge
(bad)
pusha
jae
pop
jl
dec
sbb
sbb
mov
fld
xor
cmps
call
jl
je
inc
in
add
(bad)
cmp
add
rcl
xchg
std
out
sub
jg
(bad)
fs
ins
sub
ror
imul
cli
mov
cmp
out
add
call
fisubr
mov
test
rcl
sub
add
xor
in
xor
jo
pop
and
pop
jmp
push
mov
xor
test
gs
or
inc
(bad)
sahf
loop
inc
push
xlat
sahf
mov
cdq
out
in
add
loop
cmps
adc
lahf
aam
mov
mov
sub
es
test
leave
ins
push
cmp
adc
xlat
aaa
test
pop
mov
pop
sahf
add
cmp
pop
xchg
xor
jno
out
inc
nop
cmc
dec
mov
imul
std
mov
jge
jp
adc
mov
inc
inc
mov
jle
sbb
sbb
pop
xchg
clc
pop
and
xchg
xor
jecxz
fs
jb
jmp
mov
add
mov
jp
mov
mov
mov
dec
lea
add
jb
pop
imul
jno
pop
dec
push
fwait
inc
sub
mov
leave
(bad)
loope
iret
push
(bad)
adc
push
ficom
dec
or
pop
mov
loop
ins
fadd
adc
mov
repnz
pop
mov
adc
inc
cld
pop
dec
out
lea
mov
jmp
mov
mov
jnp
add
je
outs
fs
gs
popa
outs
fs
gs
add
dec
in
add
int
jp
inc
cmps
sub
inc
outs
mov
mov
jo
rol
ja
mov
loop
les
push
add
push
mov
test
dec
and
mov
xchg
push
mov
add
fnstsw
push
scas
dec
jo
cli
sar
in
clc
dec
shl
(bad)
ret
pusha
fsub
add
aam
dec
ret
jmp
xor
popf
add
jle
pop
sub
add
xchg
mov
shl
(bad)
fsubr
mov
jae
xor
jl
mov
dec
out
sub
xlat
cmp
sub
leave
pop
mov
dec
das
imul
dec
jle
inc
pushf
or
push
push
addr16
outs
lods
jge
js
into
stos
out
pop
jnp
xor
arpl
gs
sbb
lods
xor
sub
xor
or
jmp
push
je
add
call
pushf
cmp
cmp
call
pushf
pushf
push
inc
jmp
push
call
xchg
mov
pushf
lea
jae
pusha
pushf
mov
pushf
push
ret
call
arpl
std
div
mov
xor
pusha
(bad)
mov
rcr
dec
fist
sub
imul
and
dec
daa
or
pop
shr
in
dec
mov
inc
jno
shl
das
and
leave
jno
movs
in
push
inc
jne
sub
jmp
and
jmp
pop
gs
jp
jb
cmp
fcomp
fnsave
imul
test
int3
or
imul
add
or
pop
cwde
fild
pop
mov
fwait
sbb
and
jecxz
test
je
scas
ret
es
retf
fistp
add
or
add
neg
aad
xor
cmp
xor
dec
loope
jnp
(bad)
daa
stc
push
arpl
pop
shl
adc
xchg
pop
add
ss
jnp
and
test
aam
xchg
xchg
cmp
or
jo
bound
fsub
add
ins
cdq
out
fwait
push
jmp
enter
imul
int
sbb
call
movs
cmp
int3
xchg
(bad)
jo
xor
sub
sbb
cmp
inc
bound
out
cmc
pop
icebp
or
rcl
sub
ret
in
enter
fist
pop
sbb
shl
iret
inc
sti
xchg
aad
test
mov
or
pop
and
sub
jmp
enter
stos
lfs
add
add
rcl
loopne
jno
inc
rol
add
loopne
and
add
aam
xor
ins
mov
or
loope
movs
adc
in
xchg
pop
pop
ins
xor
in
les
jno
clc
sub
mov
jne
pop
repz
jp
je
repz
sub
or
stc
mov
mov
add
popf
pop
inc
pop
sub
cmc
cmp
adc
mov
loopne
sbb
push
fsub
add
mov
gs
add
popa
mov
je
ret
or
pop
out
pop
pop
aaa
adc
sbb
(bad)
jmp
popa
sub
pop
pop
loop
jae
bound
mov
add
adc
lock
xchg
outs
mov
and
(bad)
movs
cmps
jmp
fs
fs
loop
jmp
ret
add
nop
mov
and
jmp
jb
ins
(bad)
push
(bad)
xor
mov
jmp
add
mov
cmp
sbb
stc
jle
(bad)
fdiv
or
(bad)
mov
outs
inc
mov
sbb
(bad)
iret
jmp
fstp
ror
pusha
shl
mov
out
mov
push
mov
sbb
not
and
dec
sbb
cmps
stc
sbb
xor
dec
xchg
xor
stos
or
xchg
retf
imul
cmps
lahf
xchg
test
ja
in
adc
inc
pop
mov
repz
xchg
add
sub
cmp
fnstenv
cs
ins
inc
fidivr
pop
push
mov
dec
mov
hlt
mov
xor
popa
sub
arpl
jle
sub
push
cwde
int
movs
js
adc
jmp
or
add
(bad)
jmp
rol
xchg
(bad)
fild
(bad)
jge
inc
or
or
ins
jo
xor
ins
add
jl
jle
ret
pushf
mov
pop
inc
xor
aam
test
stos
rcl
mov
pop
xchg
xchg
into
mov
shr
inc
fst
test
xor
cmp
adc
xor
cwde
xor
js
stos
adc
icebp
mov
idiv
enter
cmp
and
pop
and
lods
stc
rol
cmp
clc
not
call
push
sub
dec
add
and
mov
cld
add
or
inc
jb
in
in
jo
sbb
bound
mov
in
mov
sahf
pop
(bad)
xor
add
jl
lods
dec
jmp
adc
mov
test
jb
imul
pushf
loopne
outs
outs
scas
cmc
les
or
outs
mov
mov
movs
mov
or
jbe
jmp
lods
jmp
(bad)
ins
icebp
inc
mov
test
mov
gs
adc
ret
adc
jl
and
xlat
scas
sub
jbe
cmp
dec
sbb
push
adc
jle
jp
jmp
ret
push
je
lahf
stos
(bad)
push
pop
or
and
pop
dec
imul
rcr
rcr
jmp
out
inc
int
fucomp
addr16
stc
jae
and
(bad)
hlt
aas
and
outs
in
xor
hlt
inc
jne
jge
mov
repz
out
bound
outs
jnp
or
or
pop
pop
rol
int
cmp
jbe
inc
stos
mov
into
inc
add
mov
mov
sbb
xor
movs
mov
cmovne
pushf
cmp
sub
imul
dec
cmp
or
or
cld
aad
mov
(bad)
int3
mov
movs
cmps
cmps
xor
cli
mov
sub
lds
test
call
out
ss
inc
push
call
push
inc
adc
push
call
mov
in
xor
pop
pop
out
fsub
fs
push
es
dec
jo
xchg
mov
in
dec
sbb
rcl
test
sar
and
xchg
pop
call
lahf
pusha
dec
sar
imul
lock
jecxz
(bad)
sahf
adc
sub
jb
xchg
add
arpl
add
and
push
xor
jl
outs
push
mov
call
lods
ret
out
fdivr
adc
xor
lea
jae
stc
call
mov
push
in
xor
fs
xchg
pop
je
cld
(bad)
push
mov
mov
lods
pop
popa
inc
sub
jp
movs
add
pop
iret
iret
sahf
and
xchg
addps
leave
jo
xchg
fbstp
pop
out
pop
stos
xor
fisttp
scas
pop
and
sbb
jmp
xchg
xchg
xchg
rcl
movs
mov
inc
add
mov
push
cmovg
and
je
push
pop
aaa
sti
test
lds
push
sub
(bad)
jae
out
jae
push
sbb
rcl
pop
outs
push
pop
add
jo
cmps
call
xor
jbe
push
call
aam
push
jns
(bad)
cmp
cmps
call
sbb
sub
jecxz
xor
loop
fld
leave
lds
es
cmp
xor
xchg
sub
std
inc
stos
loop
inc
(bad)
repz
adc
sub
jae
mov
jne
addr16
sbb
xor
test
and
mov
lea
push
pop
aad
mov
push
mov
fadd
dec
or
xchg
sub
or
mov
jmp
dec
scas
jmp
add
cmp
(bad)
adc
fiadd
sahf
push
jmp
dec
cmp
jl
push
xor
xor
push
cs
push
scas
inc
mov
int
nop
cmp
outs
loop
push
pop
add
fnsave
inc
jo
jne
mov
inc
stos
push
je
scas
push
mov
dec
jns
aad
sbb
rcl
push
lahf
xchg
sub
test
loop
cmp
cmc
addr16
mov
in
aad
call
fwait
dec
or
add
sub
ss
jg
test
adc
data16
in
movs
mov
aad
(bad)
mov
dec
pop
ret
push
adc
sbb
cmp
test
and
sar
add
hlt
fsub
add
imul
cld
(bad)
add
dec
pop
add
mov
push
mov
pusha
lea
jmp
jns
in
loop
xor
iret
jb
xor
mov
fnstenv
push
inc
arpl
repz
sub
loopne
inc
mov
pop
pop
mov
retf
cmp
int3
jle
xor
mov
inc
add
ds
sbb
pop
fild
adc
xchg
cmp
std
rcr
ins
push
shr
fisttp
out
rcl
xor
xor
jle
jo
js
cmp
cmp
in
cmp
repz
push
call
(bad)
cmc
or
push
call
ret
xor
mov
push
push
push
ret
stc
sub
jmp
push
call
jnp
(bad)
mov
loope
xor
aas
inc
out
jle
push
xor
into
bound
imul
stc
mov
in
or
push
dec
pop
xor
inc
push
pop
jmp
sub
add
fs
imul
add
add
push
inc
jb
gs
gs
outs
jb
add
jb
cmps
call
or
add
cmps
rcl
jnp
retf
mov
in
not
cs
add
lds
mov
cmp
push
add
cmps
in
pop
push
jmp
jae
call
mov
pop
js
dec
pop
mov
jp
dec
and
and
ret
or
add
mov
jl
lods
aad
leave
fsub
or
xor
js
outs
mov
jge
sahf
movs
loopne
test
mov
inc
cmp
lea
jae
jmp
sub
xor
shr
hlt
test
push
pusha
sti
push
sbb
adc
pop
das
popa
sti
xchg
inc
sub
dec
out
enter
ret
mov
xor
les
lea
aam
mov
pusha
inc
gs
adc
mov
(bad)
outs
stos
sub
mov
or
inc
loop
sti
movs
pusha
sub
sub
jmp
or
out
(bad)
rcl
fwait
push
nop
dec
data16
push
call
dec
jbe
pusha
int3
push
call
mov
mov
call
popa
nop
or
add
mov
push
adc
sbb
cmc
in
push
in
inc
into
pop
inc
aam
imul
push
repnz
add
in
adc
nop
mov
movs
jle
mov
dec
dec
arpl
push
sbb
and
sub
xor
jmp
mov
and
add
xchg
push
mov
pop
fwait
inc
sti
push
dec
repnz
ds
int
jg
iret
daa
rcl
scas
pop
mov
dec
movs
movs
enter
xchg
jno
(bad)
int3
test
cmp
into
mov
inc
rcr
lock
xor
sbb
stos
dec
mov
cmps
inc
and
mov
fsubp
jge
add
cmp
int
mov
sahf
push
aaa
bound
fisttp
rcr
push
jne
(bad)
sbb
mov
xor
call
push
call
repz
stos
shr
ss
mov
mov
mov
scas
mov
pop
inc
hlt
add
inc
js
je
jb
arpl
jae
mov
push
fiadd
xor
inc
ds
sub
and
ret
out
jns
in
inc
sbb
and
imul
cmps
push
and
loope
add
push
pop
cmp
push
fwait
push
pop
test
gs
sbb
xchg
nop
(bad)
inc
xor
fild
in
xchg
sbb
test
sti
bound
cld
sub
xor
mov
pop
mov
fsub
rol
xor
xchg
mov
mov
cmp
sub
add
imul
rol
xor
mov
jmp
push
call
adc
push
call
mov
test
fld
xor
fbld
inc
cmp
outs
out
daa
cmc
stc
pop
sub
lahf
ja
pop
lods
mov
adc
jae
mov
pop
ret
dec
or
pop
xor
sub
xor
pop
or
shl
ss
mov
pop
mov
inc
inc
push
aad
fiadd
xor
inc
cmp
pop
ss
shl
cmp
mov
or
and
into
sub
fs
gs
or
(bad)
jecxz
inc
and
pop
ret
pop
es
pop
jae
jns
dec
fcomp
ret
xchg
dec
push
sub
mov
lock
out
push
cdq
call
push
dec
imul
and
ja
pop
add
mov
cwd
cmc
mov
repnz
fisubr
mov
fwait
pop
mov
mov
cmp
push
push
stos
adc
xor
push
retf
adc
mov
cmps
cmp
and
jnp
(bad)
push
ins
push
call
sbb
sub
xor
inc
(bad)
adc
xor
and
fstp
sub
push
mov
pop
dec
mov
nop
call
or
cmp
dec
sbb
mov
adc
sub
xor
fiadd
stos
mov
test
sbb
lods
xor
xchg
scas
int3
xchg
push
pop
jne
fisubr
jns
cmp
jb
icebp
and
and
sub
in
(bad)
pusha
mov
aaa
add
lock
imul
(bad)
or
pop
call
shr
dec
adc
inc
mov
and
push
in
out
or
pop
xor
add
xchg
retf
jecxz
jl
js
imul
jle
aam
cmps
inc
test
icebp
pushf
pop
xor
or
or
inc
fsub
add
sbb
xor
shl
inc
push
ficomp
fdivr
or
inc
jle
xor
jne
cmp
push
fs
out
or
gs
fs
std
xchg
es
cmps
jne
jecxz
fdiv
mov
sub
mov
int
fmulp
sti
sbb
or
xchg
jbe
xor
pop
sbb
fiadd
inc
mov
adc
mov
icebp
ret
mov
icebp
test
cmp
imul
mov
stc
lds
sahf
aaa
retf
fistp
push
push
and
sbb
inc
push
fistp
into
pop
adc
call
push
call
not
cmps
call
lea
cmps
call
inc
add
clc
jmp
mov
stos
setg
jmp
push
call
jg
test
push
call
xor
or
loopne
cmps
call
arpl
seto
cmps
call
pushf
add
add
cmps
call
outs
fnstcw
xchg
mov
jp
add
sti
int3
mov
fdivr
std
stc
mov
and
pushf
cmp
sbb
jp
cwde
ret
jge
inc
jl
inc
adc
repnz
fcom
pop
add
lock
adc
ret
imul
mov
stos
sbb
fild
mov
dec
pop
fistp
jecxz
iret
jbe
push
sahf
sar
js
add
stc
sub
mov
mov
xchg
mov
pusha
jne
xchg
dec
add
test
inc
cmp
das
pop
pop
sbb
fld
pop
js
popf
add
inc
jmp
or
out
arpl
mov
test
ret
jmp
imul
adc
mov
and
movs
retf
pop
in
in
inc
emms
sbb
xchg
pop
and
loop
loope
push
xchg
or
add
(bad)
(bad)
dec
fbstp
xchg
mov
in
sahf
or
lahf
or
xchg
retf
popa
sub
push
inc
ins
cwde
out
retf
sub
nop
in
stos
ins
adc
mov
ins
dec
int
lods
(bad)
clc
das
in
or
lock
mov
cmp
cmps
call
daa
xor
bt
add
pushf
cmp
jmp
push
call
fsubr
int
xchg
rcr
add
js
dec
stos
dec
cmp
dec
inc
mov
lods
(bad)
fild
popa
retf
scas
push
test
mov
les
js
inc
ja
pop
adc
(bad)
jb
mov
in
lahf
icebp
xor
pop
sar
dec
movs
push
cmp
xchg
sub
dec
scas
or
arpl
test
fwait
jnp
pusha
cli
cmps
or
xor
or
loopne
push
je
pop
inc
cmps
hlt
repz
int3
retf
mov
fild
push
push
aaa
add
inc
add
lahf
in
shl
pop
fadd
xor
add
cs
clc
mov
mov
sbb
test
sub
das
mov
out
cdq
addr16
pop
(bad)
mov
and
add
fist
cmps
(bad)
xchg
or
fsub
push
test
jl
int3
sbb
stos
cli
jmp
inc
aad
xor
and
ds
sub
cmc
jl
aad
lods
dec
rcr
loop
call
xor
test
xchg
mov
sub
dec
xchg
ret
fidivr
inc
dec
sub
je
push
retf
jmp
or
xchg
and
sbb
mov
movsx
lea
bswap
jmp
push
call
out
iret
in
and
push
call
aas
mov
psubusb
xor
sub
adc
iret
push
aad
cmp
xor
push
aad
out
add
and
add
out
xor
inc
inc
dec
fimul
cmp
clc
pop
mov
cmps
xor
hlt
sbb
sbb
ja
cmps
cs
lods
out
leave
inc
jl
icebp
add
and
cwde
leave
inc
loop
push
ror
pop
not
cmps
call
cmp
mov
mov
mov
lea
jmp
cmp
jo
pusha
mov
lea
jae
jo
cmp
pusha
push
lea
jae
pusha
cmp
push
push
lea
ja
pusha
inc
lea
setne
setg
jmp
clc
pusha
pushf
and
pushf
pushf
add
mov
mov
push
lea
jmp
fstp
(bad)
add
push
add
and
and
push
jns
(bad)
pop
cmc
add
outs
mov
xchg
popa
out
iret
cwde
movs
call
jno
mov
mov
fidivr
fs
add
pop
sub
test
xchg
jge
xor
lock
ins
aam
mov
pop
xchg
mov
lods
fisttp
adc
imul
out
in
mov
add
in
mov
xlat
mov
add
jge
imul
or
cmps
call
gs
dec
sbb
std
aad
xor
fwait
(bad)
fcmovne
and
mov
or
cmp
pop
in
iret
jl
(bad)
cmc
lea
and
fiadd
lods
or
dec
lds
mov
jle
mov
fs
in
out
adc
xor
les
ficom
and
imul
popf
and
fstp
ja
shl
add
adc
shr
shrd
mov
cmc
add
or
mov
clc
cmps
jmp
gs
add
inc
rol
or
stos
icebp
mov
dec
fldenv
cli
pop
(bad)
popa
sub
sub
shr
jge
ja
fbstp
push
push
cdq
rol
into
push
repz
xor
dec
aam
out
inc
vpshufhw
in
fistp
daa
jl
aad
clc
test
xor
cmp
pop
mov
mov
sbb
dec
or
adc
cmp
adc
jecxz
dec
mov
imul
fs
loope
xlat
or
out
outs
push
cmps
sbb
add
add
pop
sbb
xchg
ins
arpl
and
sub
mov
inc
push
dec
inc
dec
xor
cs
ins
add
add
mov
add
call
inc
and
clc
pushf
mov
call
ss
aad
xor
popf
add
jno
add
int3
je
les
(bad)
mov
mov
clc
mov
cmp
clc
retf
xor
out
out
ficomp
iret
adc
push
ror
mov
fs
and
mov
clc
or
or
mov
cmp
sti
jecxz
and
dec
push
pop
add
das
add
dec
jbe
pop
adc
mov
add
xor
mov
mov
cmp
stc
outs
inc
aad
xor
adc
mov
inc
mov
shl
jg
xor
cmp
not
xchg
push
push
xchg
xchg
sub
(bad)
rol
jbe
mov
loop
mov
(bad)
(bad)
push
and
inc
stc
mov
jg
add
sbb
push
movs
mov
rcr
in
push
into
retf
pop
jno
call
out
rol
xor
adc
sahf
test
inc
fsub
dec
cmp
jnp
sahf
cmp
imul
push
mov
cdq
xchg
cmp
cmps
jae
rol
(bad)
sub
mov
daa
fild
out
imul
mov
or
fisubr
mov
sbb
or
repnz
cmp
stc
mov
push
inc
and
add
rol
test
not
ror
xor
add
ror
neg
ror
add
call
cmp
pop
rol
xor
in
mov
(bad)
shl
ss
rcl
data16
push
sahf
xor
xor
gs
test
gs
inc
fcmovb
ins
xchg
fsub
retf
test
aad
jmp
xchg
adc
rol
addr16
fmul
mov
cmp
inc
popa
rcl
lahf
push
jnp
dec
mov
adc
fidiv
push
lods
fadd
imul
rol
(bad)
int
pop
bound
cmp
push
add
int
aas
shl
push
adc
push
push
daa
rol
dec
cmp
add
mov
cmp
push
bnd
mov
mov
sub
inc
xor
data16
pop
push
(bad)
loop
movs
loope
adc
es
and
lds
out
jp
call
xor
pop
mov
mov
and
and
fld
jecxz
xlat
or
sub
dec
into
sub
sbb
ins
mov
mov
jp
cmp
xchg
adc
lds
(bad)
test
cmp
jmp
pushf
jmp
push
call
mov
and
movzx
cwde
push
pop
push
sete
jmp
push
jmp
pusha
push
mov
lea
ja
pusha
not
call
cmp
cmp
pusha
mov
lea
ja
shl
movsx
bswap
rcr
add
adc
adc
test
lea
shr
shld
adc
mov
movsx
bswap
add
rcr
ror
mov
call
call
lea
je
bt
sub
cmp
call
push
mov
push
pop
mov
push
pushf
push
push
ret
call
cmp
push
push
call
call
mov
xor
adc
adc
sbb
cmp
(bad)
mov
add
iret
ins
retf
xor
adc
in
xchg
add
cmc
call
jp
(bad)
loope
sbb
or
call
call
and
mov
test
sbb
push
cwde
xor
rol
fwait
iret
add
cmp
add
pop
or
jge
in
ja
mov
xchg
repz
pushf
clc
adc
mov
sub
sub
or
std
xchg
pushf
rcl
loop
(bad)
clc
popf
mov
add
and
xchg
lock
jae
sbb
scas
jmp
jmp
lahf
pop
(bad)
leave
inc
xor
bound
cmp
into
mov
bound
jbe
shr
mov
mov
fsub
add
and
(bad)
fsub
add
sub
xchg
and
jmp
mov
lea
jmp
lea
call
push
pushf
push
mov
push
pushf
push
push
lea
jmp
movzx
lea
push
mov
pusha
mov
movsx
jmp
cld
cmc
test
clc
popf
push
mov
push
pusha
lea
jmp
push
call
into
and
and
add
neg
setb
cmp
mov
clc
pusha
shr
cmc
cmp
cmp
pusha
call
pushf
lea
jae
not
mov
pusha
inc
pushf
mov
push
lea
call
push
mov
adc
jmp
in
sbb
add
stc
xor
cmp
dec
xchg
cli
out
jnp
ret
xchg
(bad)
mov
aaa
mov
ja
cwde
retf
sub
sti
in
sahf
sub
rcl
inc
cmp
test
gs
inc
inc
xor
or
xchg
mov
pop
ss
add
pop
jns
aaa
clc
ins
xor
cwde
idiv
movs
ret
mov
jb
inc
jo
icebp
cdq
gs
imul
xor
(bad)
cmps
sbb
push
mov
pusha
mov
mov
pusha
lea
jmp
push
call
push
mov
int
xor
movs
mov
hlt
jno
nop
mov
cmp
jo
outs
test
jge
mov
cmp
dec
pop
fs
and
push
dec
out
imul
push
mov
adc
push
jae
test
int3
sbb
and
jne
call
push
call
xchg
je
cmp
add
in
cld
(bad)
stc
pushf
stc
push
popf
push
pushf
lea
jmp
jns
aam
add
je
mov
jb
or
push
arpl
jae
ds
jge
(bad)
sub
cli
das
cdq
jne
xor
mov
pop
int3
gs
call
int
lds
jno
outs
cmps
pushf
push
adc
add
sub
jp
xlat
inc
mov
mov
and
cs
aaa
jno
fsub
test
pop
push
je
adc
push
pusha
mov
push
loopne
pushf
push
out
(bad)
lds
lods
pop
retf
sub
jmp
and
jle
aas
mov
pop
xor
pop
xlat
int3
add
pop
retf
fst
das
push
xchg
popa
enter
mov
or
sahf
cdq
xor
div
jns
cdq
imul
mov
mov
mov
mov
push
adc
ret
xor
mov
and
mov
sub
stos
lds
sbb
in
jle
mov
jmp
cmps
call
das
jle
mov
jmp
push
call
inc
ins
mov
jg
jle
push
repz
sti
inc
loope
sahf
and
jnp
and
cmp
pmaxub
mov
mov
sub
cmp
and
sub
pmulhuw
scas
fist
add
fwait
(bad)
test
fnstsw
and
push
out
outs
sbb
adc
sub
push
and
pop
sti
jl
pop
repz
mov
mov
je
not
rcr
fisttp
jl
lods
inc
(bad)
adc
loope
bound
cmp
fimul
pusha
(bad)
imul
jae
call
inc
pop
xchg
int
stc
xor
jne
mov
xchg
and
cwde
fnstcw
fwait
or
fdivp
or
fcom
test
adc
xor
sbb
imul
and
fsubr
sbb
loop
loop
inc
sti
or
lods
push
fdiv
adc
inc
push
leave
sbb
dec
scas
rol
test
dec
repz
push
xor
pop
sbb
dec
pushf
mov
sub
repz
mov
stc
add
and
xor
add
xchg
fsub
out
movs
aam
test
add
and
fs
rcl
fdivr
push
pop
mov
aas
or
push
pop
and
aas
mov
pop
std
xor
fadd
push
pusha
das
dec
jmp
mov
and
mov
in
mov
sbb
loop
movs
sbb
hlt
pop
sub
es
xchg
or
add
cli
cld
ds
loop
retf
jecxz
cmp
pop
in
sbb
jns
mov
rol
lods
in
cmp
mov
and
inc
sti
jbe
mov
xchg
lock
pop
adc
fsub
jno
inc
(bad)
js
in
ins
sbb
push
sub
mov
rcr
mov
inc
or
and
shr
xchg
jno
adc
push
push
xchg
sub
cs
adc
adc
rcr
jne
(bad)
cmp
mov
ins
mov
and
(bad)
adc
es
sbb
int
adc
std
jmp
(bad)
in
fwait
mov
out
pop
fstp
ins
cmp
jmp
test
neg
mov
push
cld
pop
fcomp
pushf
xchg
mov
dec
adc
icebp
fbstp
sti
push
or
fbld
lock
repz
xor
sbb
mov
fiadd
std
imul
dec
retf
shl
outs
sbb
mov
sub
sbb
aaa
(bad)
jmp
fst
xor
xchg
xchg
mov
pop
sub
inc
cmp
cmps
and
or
jbe
pusha
jbe
dec
fisubr
pop
jae
mov
(bad)
ret
es
add
cwde
and
mov
out
call
stos
ret
push
cld
mov
pop
loope
dec
inc
and
sbb
out
jb
pop
nop
adc
cmp
dec
fs
cmp
pop
or
cld
pop
cs
ret
icebp
jmp
jl
mov
sbb
pop
and
clc
push
push
fucom
or
aam
pop
sahf
ins
sbb
push
mov
push
je
mov
arpl
mov
ffreep
jge
mov
ins
dec
xor
lock
sub
and
stc
es
ret
cs
jmp
and
cmp
punpckldq
sti
sbb
push
daa
mov
cmc
jmp
inc
push
push
fwait
or
mov
ds
cld
cmp
retf
loope
mov
ficomp
fdivr
push
fistp
push
and
jle
mov
imul
xchg
sbb
aam
or
mov
xor
ins
inc
cmc
retf
sub
cmp
leave
ins
pop
das
shr
lea
and
add
sbb
fwait
es
push
cmp
and
push
test
fist
add
mov
or
sbb
loope
jp
mov
cmp
fnstcw
mov
inc
mov
fucomip
xchg
mov
adc
or
cld
jae
fbld
cmps
mov
ins
inc
mov
sbb
pop
add
lds
and
mov
clc
jl
cmps
call
shr
wbinvd
in
pop
aaa
sbb
xchg
sahf
cs
int3
shl
xor
xor
and
sbb
and
call
xor
pushf
call
jmp
imul
in
sbb
jmp
std
stos
sbb
sbb
pop
out
fwait
and
fsub
mov
mov
lods
icebp
inc
loope
repz
and
inc
inc
push
mov
clc
cdq
(bad)
stos
out
mov
pop
(bad)
mov
fcmovne
fldcw
jnp
sbb
sbb
xor
data16
sbb
mov
sub
jae
and
neg
icebp
ins
arpl
jae
test
adc
int3
sahf
ficomp
mov
jge
mov
fsub
sbb
inc
pop
fimul
ret
xchg
test
fdivrp
out
rcl
or
mov
retf
gs
inc
cmp
sbb
adc
out
cld
jo
test
sbb
lods
add
xchg
retf
pop
ret
and
xchg
stc
(bad)
into
mov
xlat
ins
sbb
sbb
adc
lods
(bad)
xor
std
(bad)
imul
xor
mov
lods
pushf
push
inc
jg
frstor
(bad)
jl
mov
jne
call
jmp
add
loop
addr16
inc
movs
mov
adc
(bad)
(bad)
es
adc
retf
popf
and
jb
loop
sub
out
add
mov
jmp
inc
lods
inc
pushf
mov
std
std
xchg
out
jbe
and
aaa
push
cmc
and
(bad)
fs
and
out
stos
dec
inc
out
sbb
and
sbb
aad
mov
or
imul
popf
test
and
mov
mov
in
inc
inc
cld
add
mov
mul
lea
push
retf
jl
add
inc
cmps
stos
ret
or
clc
adc
and
sbb
dec
mov
sti
fsub
xor
in
xchg
or
jp
xchg
add
pop
jmp
jmp
push
test
push
pop
or
xchg
mov
mov
jae
cmps
in
xor
mov
inc
sub
jno
stos
fild
sub
sub
add
int3
jmp
not
sbb
and
sbb
mov
mov
in
push
push
inc
into
jle
and
jge
pop
and
cmps
xchg
mov
mov
push
call
mul
stos
sbb
fist
jge
out
xchg
outs
loopne
outs
lods
jmp
push
jle
bound
adc
jmp
aam
xchg
lahf
sbb
pop
fdiv
xchg
pop
inc
dec
fwait
jmp
fs
pop
sti
push
fisttp
loop
mov
retf
adc
cli
in
xor
bound
pop
popa
in
sub
xor
fwait
aam
fimul
imul
xchg
out
cmp
bnd
fldenv
popf
cmp
xchg
add
pop
xchg
sbb
mov
sbb
xor
mov
mov
xchg
loop
repz
xor
sbb
inc
fisttp
icebp
sbb
fisub
popf
call
sti
les
fsubr
cs
outs
(bad)
pop
aad
xchg
inc
ins
shl
sbb
lahf
mov
adc
cdq
fdivr
sti
inc
jge
ins
fs
xchg
jne
add
mov
sbb
pusha
mov
es
ins
push
sub
jmp
pop
(bad)
fidiv
sbb
push
in
or
rol
jecxz
fdivp
ficomp
mov
repz
and
cmp
mov
or
pop
fcomp
sbb
jecxz
and
xchg
and
sbb
repz
hlt
mov
fwait
into
int
sti
mov
and
adc
and
int
jmp
or
sbb
pop
gs
cwde
popf
cs
aas
add
xor
mov
xlat
cld
into
sbb
ins
mov
cmp
jmp
loope
sbb
cmps
(bad)
leave
imul
and
inc
mov
xchg
sti
cmp
data16
push
pop
mov
xchg
or
xchg
xchg
add
scas
imul
fdivrp
jmp
push
lods
ffree
push
outs
fstp
xor
cli
inc
cld
clc
repz
push
jmp
xor
(bad)
mov
mov
ficomp
call
movs
and
in
sub
pop
out
mov
fdivr
ret
les
pop
sbb
jle
jb
dec
and
test
add
add
cwde
mov
push
xchg
push
xchg
frstor
dec
inc
in
mov
jns
test
mov
mov
xchg
(bad)
in
fst
pop
adc
imul
stos
xchg
les
ficom
lahf
sbb
imul
movs
mov
xchg
sar
xchg
scas
(bad)
and
fidivr
es
mov
jne
pushf
scas
je
pop
pop
data16
sar
adc
mov
pop
or
sbb
sbb
sbb
fst
push
repz
scas
cmp
sbb
mov
or
(bad)
and
cmps
pop
mov
(bad)
mov
mov
jo
adc
stc
loope
loope
cmp
pop
repz
lock
(bad)
out
inc
je
ss
sbb
dec
or
pop
sbb
or
and
fidivr
jnp
sbb
push
popf
add
jmp
xlat
or
xchg
sbb
nop
(bad)
pop
or
sar
jb
xor
xchg
xchg
fimul
test
fstp
jbe
inc
loopne
loope
cmps
mov
mov
dec
idiv
loope
or
pop
in
jbe
sbb
mov
ret
jle
mov
lds
and
stos
into
shl
jmp
lahf
mov
call
xor
mov
adc
retf
sbb
push
mov
dec
sub
sub
ret
retf
jmp
xchg
or
pop
or
xor
add
add
mov
push
and
lock
inc
mov
sti
cmp
sbb
and
sahf
bound
sti
popf
push
mov
mov
sbb
jg
mov
push
pop
dec
cld
lea
nop
je
jmp
pop
pusha
gs
xchg
push
sbb
les
pop
ins
repz
pop
mov
xchg
mov
adc
or
ds
xor
mov
inc
jmp
mov
les
and
faddp
adc
push
pop
aam
stc
cs
sbb
mov
cmp
retf
push
pop
bound
mov
cmps
fidiv
jmp
jae
stc
xor
push
add
and
jl
es
sbb
cwde
jb
sub
inc
pop
mov
jmp
cs
mov
jns
xor
fstp
shl
push
or
stc
xor
sub
mov
or
sub
fidiv
ret
sti
mov
cmp
push
test
test
cdq
sbb
jo
jge
add
fwait
and
popa
repnz
mov
jae
mov
mov
mov
jae
jl
fist
dec
mov
mov
and
push
xor
stos
aad
jno
retf
stc
fwait
mov
add
test
jl
imul
fld
mov
add
movs
sar
add
xor
sar
ins
retf
gs
mov
mov
scas
cwde
fld
sbb
imul
fadd
ds
jns
jno
dec
int3
fiadd
cmc
pop
in
ret
call
pusha
sahf
out
sbb
test
cmp
dec
stos
add
xor
jae
jo
nop
sub
cld
and
popf
bswap
mov
mov
and
dec
shr
int3
retf
ds
cmp
sbb
add
fnstsw
dec
fisub
push
ror
xor
sbb
frstor
retf
mov
push
das
push
inc
jmp
scas
mov
loope
jecxz
js
in
push
fisub
ds
xchg
je
into
mov
push
repnz
outs
cmps
add
or
ret
xchg
mov
(bad)
push
in
rcl
(bad)
sar
pop
mov
sub
push
fistp
cld
gs
sub
cmp
push
and
sbb
div
stos
cld
(bad)
sbb
cmp
dec
and
fbld
fimul
cmp
jmp
int
shl
nop
pop
add
and
add
call
mov
jmp
sub
or
nop
sbb
cmp
jnp
xchg
aas
sub
and
xchg
movs
mov
inc
rol
pop
pop
inc
call
je
imul
nop
(bad)
jge
sti
inc
xor
ins
xlat
inc
ret
sbb
pop
mov
sahf
cmp
retf
and
or
or
cmc
sbb
add
jp
push
mov
jmp
loope
mov
clc
pop
cld
xor
sar
test
daa
fild
xchg
fsubrp
das
cmc
pop
leave
jmp
int3
loop
(bad)
out
fwait
shl
push
cld
jl
(bad)
(bad)
loope
mov
gs
and
retf
pop
jecxz
fs
and
ret
sbb
jecxz
pop
mov
stos
ficom
in
pop
mov
shl
les
pop
in
inc
int
pop
xchg
xchg
mov
stos
cmp
outs
cmp
push
je
out
and
sbb
mov
pop
loop
mov
sti
mov
cmps
mov
pop
leave
mov
sbb
jae
loope
inc
jmp
mov
dec
outs
out
ficomp
stc
retf
add
out
retf
jecxz
dec
mov
call
lahf
cmp
pop
into
sbb
mov
loop
lahf
stc
push
je
xchg
jns
popf
dec
jge
je
pushf
xor
or
and
mov
arpl
fwait
sbb
add
out
xchg
jl
nop
imul
sub
sbb
mov
into
cmp
pusha
pop
cwde
fsubr
sbb
int3
pop
mov
outs
sub
ins
test
mov
and
add
lea
ss
sti
cmp
pop
pop
xor
ss
sbb
rcl
cmps
repnz
sbb
and
sub
and
fnstsw
sbb
loopne
fstp
push
mov
fsubp
mov
movs
lods
adc
push
add
imul
in
sub
jo
xchg
dec
movs
pop
push
and
pop
inc
cmp
push
ja
sub
pop
loopne
push
push
ltr
lock
cmp
pop
inc
add
jmp
retf
jb
add
add
push
mov
push
jbe
jmp
xchg
scas
mov
dec
pop
pop
and
fs
cwde
jbe
sbb
bound
nop
je
int
es
fiadd
cmp
and
sbb
xchg
mul
xchg
fwait
add
mov
sti
sub
les
fs
ins
sahf
(bad)
mov
and
and
int
xlat
pop
pop
cs
mov
push
(bad)
cmp
sbb
adc
ins
hlt
(bad)
inc
mov
cli
mov
cmp
fidiv
xor
leave
pop
in
mov
leave
and
pop
out
imul
push
inc
jge
cmps
sbb
push
and
mov
push
mov
jno
add
xor
outs
pop
xchg
mov
popf
adc
jb
pop
and
pop
sbb
sub
aas
rol
and
jp
fimul
sbb
and
aad
retf
test
lock
ss
sahf
clc
cmp
jne
xor
cmp
and
xchg
cli
cli
xor
mov
aas
imul
mov
sbb
jae
ret
push
or
gs
sbb
push
mov
adc
dec
xor
push
and
add
or
mov
(bad)
sbb
das
push
jle
ds
push
pop
ss
jmp
sbb
jecxz
mov
pop
test
add
sub
repnz
gs
leave
cmp
cli
pop
pop
aam
int3
ins
stc
icebp
or
mov
add
in
fmul
gs
sbb
rcr
sbb
push
(bad)
imul
sbb
cmp
repnz
pop
fcomp
(bad)
cwde
adc
fild
repnz
gs
cld
mov
sub
fstp
sbb
inc
cmc
sbb
pop
fwait
pop
gs
daa
inc
or
rol
ds
mov
sbb
sbb
fcomp
mov
into
mov
sbb
std
and
mov
add
movs
xor
jp
pop
fcom
cmp
pop
pop
fmul
sbb
fsubrp
fldcw
sbb
pop
sbb
outs
jmp
test
je
push
fadd
push
jp
pop
sbb
loopne
sub
cmp
rcr
push
fsubr
aad
ds
mov
outs
mov
or
cmp
sbb
sbb
fsubr
fistp
inc
mov
mov
lahf
js
or
in
fdivr
ins
pop
sbb
pop
sub
in
jge
(bad)
call
cmp
pop
rol
sbb
fbstp
in
pop
mov
out
pusha
sti
sbb
sbb
jmp
mov
movs
pop
xor
(bad)
cmp
mov
fs
xchg
mov
sbb
sbb
sbb
pushf
dec
lahf
sbb
test
sub
fcomp
pushf
shl
jp
fwait
stc
sub
jae
inc
pop
and
add
movs
pop
in
fstp
mov
in
cmps
cmp
jg
jnp
pop
in
movs
pop
ins
popf
test
aas
fisub
neg
stos
sbb
cld
sub
cdq
sbb
hlt
mov
dec
xchg
movs
lock
inc
pop
cmp
jle
imul
sti
push
push
and
xor
cmps
repz
xor
sub
pusha
inc
push
pusha
ins
mov
lods
sub
data16
xchg
sbb
cld
loope
arpl
popf
repnz
push
ja
es
cmp
mov
cli
div
dec
fxch
or
adc
dec
cdq
push
sbb
pop
in
jl
fisub
fsubrp
dec
xchg
add
inc
fiadd
popf
iret
stc
pop
push
fisub
mov
jmp
and
aas
icebp
or
rol
cmp
out
xor
das
pop
repz
adc
and
icebp
adc
retf
push
ror
or
jge
mov
rcr
adc
mov
fimul
push
mov
scas
ins
aam
ss
imul
jb
and
jmp
and
lahf
or
sbb
retf
jl
into
pushf
or
push
jl
dec
stos
retf
sti
fbld
out
(bad)
sub
sahf
(bad)
sbb
and
int3
lock
cmp
jle
and
enter
mov
or
scas
xchg
sub
cmp
lds
adc
scas
adc
cmp
jns
or
aad
sbb
cmc
xor
(bad)
movs
fild
leave
xchg
outs
pop
stc
or
retf
out
xor
jb
xor
xchg
push
lods
jmp
fmul
push
gs
cmp
in
push
std
jle
sti
and
inc
xor
ins
sub
paddd
cmp
or
popf
and
pop
sti
fistp
(bad)
jb
adc
rol
inc
ss
sbb
pop
adc
cmp
cmp
cmc
in
or
and
sbb
push
add
adc
jbe
and
xor
pusha
loope
out
test
jnp
pop
sti
imul
and
or
repz
rcr
adc
or
int3
shl
sti
(bad)
pop
icebp
(bad)
adc
add
xor
cli
scas
push
call
je
inc
push
sbb
ds
jmp
outs
xor
sar
movhps
pop
bound
and
mov
fwait
and
sbb
dec
ins
jmp
sbb
jmp
and
jg
retf
push
add
test
add
cmps
xor
loope
test
inc
mov
mov
adc
ins
or
and
imul
jnp
imul
push
mov
dec
daa
scas
mov
lock
push
push
push
xrelease
fs
inc
dec
push
dec
std
repnz
das
aam
pop
cmp
jmp
add
and
shr
xchg
pusha
sub
hlt
dec
je
sub
sbb
mov
and
dec
shl
repnz
je
cdq
(bad)
cli
loopne
cwde
push
jg
cs
adc
inc
cmp
add
ins
xor
push
or
mov
sti
xchg
cmp
loope
not
sub
retw
cs
mov
test
and
movs
test
sar
and
add
ins
in
rcr
(bad)
retf
push
adc
fld
cmp
xor
stc
inc
push
fld
mov
add
push
fbld
cmp
shl
ins
sbb
jp
or
sub
or
stos
adc
call
jmp
mov
pop
adc
fild
inc
push
inc
inc
pop
and
dec
sbb
xchg
pop
stos
fsubp
js
xchg
mov
pop
cs
push
cmp
pop
cli
mov
xchg
add
jo
ss
cld
jns
inc
dec
mov
out
pop
outs
adc
jecxz
stos
adc
jne
out
xor
retf
sub
ds
mul
pop
ret
into
(bad)
hlt
mov
data16
inc
jmp
(bad)
andps
pop
or
and
and
push
mov
repz
lds
and
rcr
push
mov
mov
in
mov
fld
cmps
pop
rol
jl
(bad)
cdq
or
les
mov
pushf
and
xchg
sbb
xchg
pop
fnstsw
lock
es
ins
mov
rcr
sbb
in
sub
pop
mov
call
push
std
add
push
lods
or
add
and
cli
aam
ins
stos
dec
pop
or
add
pop
popa
xchg
sbb
retf
sbb
and
fild
rcr
fs
test
mov
jl
fwait
xor
fwait
mov
inc
mov
(bad)
push
(bad)
or
lea
retf
sub
jecxz
imul
cmp
push
out
hlt
clc
pop
xor
or
xor
dec
das
push
lds
lahf
js
jo
outs
inc
and
sub
stos
and
add
and
(bad)
or
mov
into
inc
mov
mov
pop
popa
fld
sub
into
jne
sub
push
call
movs
pop
lods
and
xchg
mov
sub
cld
push
add
fxch
repz
mov
fbld
sub
mov
push
jle
stos
fstp
stos
xor
outs
dec
mov
dec
sub
mov
jge
mov
inc
ins
push
cmp
mov
rcr
adc
jmp
(bad)
mov
bound
cmps
stc
inc
mov
inc
cmc
xchg
bnd
xchg
and
and
outs
sbb
xor
sub
pushf
in
and
fistp
jp
xchg
add
cmps
jnp
sub
test
movs
adc
in
sbb
sbb
retf
cmp
adc
push
sbb
add
push
xchg
sub
xchg
out
stc
loope
loop
sub
mov
sti
fbld
xchg
pop
out
inc
ret
(bad)
cmp
pop
ret
and
fisub
test
test
sti
cdq
mov
cld
mov
(bad)
fbld
mul
(bad)
scas
sbb
aad
fnstcw
fidivr
call
add
xchg
jae
imul
xchg
addr16
adc
fld
out
mov
int
std
pop
sub
fimul
cmps
ss
mov
fwait
retf
pop
sti
xchg
sub
out
jmp
add
test
fbstp
mov
popf
add
xor
jecxz
fidiv
mov
sti
adc
mov
cmp
loope
jl
and
jecxz
sahf
in
sub
inc
aaa
ins
sbb
pusha
scas
mov
jmp
pop
mov
cmp
mov
repnz
push
test
cwde
lds
jo
pop
sub
sbb
add
mov
fisub
popa
sbb
cmp
xlat
xor
std
lods
push
cmp
cmp
fidivr
fsubr
xchg
jbe
jo
pop
stos
mov
jge
lock
leave
test
add
or
aam
xor
inc
sbb
imul
pusha
cdq
pop
dec
adc
in
(bad)
lods
fsub
pop
xchg
in
or
in
fstp
stos
pop
pop
inc
lahf
aaa
dec
sub
mov
scas
movs
outs
push
xor
or
(bad)
or
and
ds
fwait
jno
push
xor
and
adc
rcl
sbb
add
sbb
icebp
jnp
push
push
out
test
or
imul
cmps
add
xor
sbb
jo
ret
inc
in
cwde
mov
or
jne
push
test
les
jmp
mov
in
jb
lods
out
cmp
mov
cmp
ds
mov
fmul
clc
retf
xchg
push
cmps
clc
mov
adc
push
in
das
stc
and
ret
into
xchg
push
nop
sub
data16
xor
mov
sub
sbb
pop
fwait
inc
cmp
jb
cmp
inc
shl
xchg
sbb
lahf
neg
mov
jge
fadd
std
add
mov
sbb
pop
das
(bad)
repz
pop
or
imul
add
hlt
in
je
sub
mov
cld
sahf
dec
sub
bound
jmp
add
fucomp
mov
dec
mov
add
cmp
sbb
xchg
jo
add
popf
and
pushf
jp
add
ret
popf
push
push
test
mov
jne
mov
xchg
mov
adc
and
mov
cmp
ins
ret
and
pop
sbb
add
inc
xlat
ss
pop
xchg
push
mov
pop
dec
jmp
sbb
aam
fsubr
push
mov
or
or
jmp
sub
push
pop
cli
pop
push
mov
adc
and
aaa
push
sub
cmp
stos
mov
fidiv
fistp
inc
cmp
mov
popa
inc
jnp
jb
mov
adc
cmc
cmps
jne
nop
sar
es
pop
jge
push
or
inc
loop
mov
cli
mov
inc
dec
repz
cmp
pop
je
std
movs
imul
dec
loop
out
xor
cmp
je
sbb
shl
dec
jmp
jecxz
loope
xor
push
test
shr
dec
ins
jecxz
or
add
ret
adc
xchg
and
sbb
fmul
xchg
push
or
mov
xor
add
and
and
arpl
jbe
push
sub
in
add
inc
mov
xor
movs
ret
mov
jnp
je
inc
xchg
xchg
shl
inc
sub
inc
pop
xchg
sub
push
dec
and
mov
fcmovu
pop
jno
iret
xchg
test
jno
not
add
lods
mov
add
cli
pushf
and
sbb
in
fidiv
jbe
jb
fcmovu
sbb
cs
lods
jmp
imul
mov
mov
cmps
mov
call
cmps
adc
xchg
test
out
shl
push
mov
mov
jo
jl
add
fld
idiv
ds
or
(bad)
pop
and
xrelease
outs
add
fsub
and
jae
cmp
jne
mov
iret
in
mov
shl
adc
dec
cmp
pop
jmp
jle
or
pop
retf
jo
test
or
ins
repnz
je
fimul
and
ret
aaa
lahf
inc
stos
repnz
call
into
pop
jmp
jbe
xor
dec
fistp
sbb
adc
sti
jp
inc
loop
jne
pop
push
pop
out
mov
ins
inc
fst
paddq
das
push
sbb
js
push
jmp
push
rcl
push
stc
call
(bad)
loopne
daa
jne
push
or
les
loope
imul
pop
jmp
dec
push
daa
dec
add
into
repz
or
out
sbb
fistp
call
rcr
(bad)
aad
and
dec
jmp
ss
xlat
xchg
fsqrt
adc
jg
aad
loope
inc
mov
mov
pop
mov
fwait
jge
(bad)
adc
lods
add
cwde
int
add
mov
fisub
sbb
fistp
pop
int
mov
sub
ins
fld
mov
push
jae
ja
fdivr
fcomp
daa
std
push
pop
jmp
out
call
mov
in
cmp
xor
iret
mov
fld
and
dec
rcr
loop
call
stos
mov
add
and
or
enter
cwde
mov
cs
pop
(bad)
loopne
addr16
mov
mov
pusha
pop
fsub
adc
xlat
jecxz
cmps
lahf
pop
add
pop
dec
ds
sbb
add
pop
sbb
inc
sbb
or
add
inc
dec
imul
cmp
(bad)
icebp
jg
std
and
jle
jno
imul
fcmovu
aaa
in
jl
fldenv
addr16
(bad)
pushf
add
pop
sub
jecxz
fdivr
push
call
dec
sbb
aaa
imul
push
std
dec
ja
int3
fld
mov
sbb
frstor
xchg
paddusb
mov
xor
fistp
inc
mov
jno
adc
push
xchg
and
fist
fld
mov
lods
pusha
imul
rcr
mov
ins
aas
sub
std
sub
sbb
sub
(bad)
or
popf
pop
fmulp
ret
sbb
dec
inc
ficomp
lock
in
jo
jne
out
xor
je
rcr
mov
inc
pushf
fcomp
mov
es
fcmovnu
lea
dec
adc
add
fimul
gs
fld
fdiv
pusha
fsubp
je
push
popa
xor
cmc
sar
outs
xchg
push
sub
arpl
mov
(bad)
sub
xchg
mov
mov
cmp
inc
test
idiv
add
xchg
f2xm1
loopne
pop
sahf
cmp
je
and
inc
(bad)
std
imul
mov
mov
inc
jecxz
(bad)
fsub
mov
jo
mov
in
dec
pop
xchg
cmp
mov
adc
and
sbb
xlat
jge
cdq
jae
iret
mov
outs
mov
pop
(bad)
lea
je
cwde
and
pop
jbe
xchg
push
adc
fxch
test
ficom
inc
push
cmp
out
sub
int3
jnp
inc
fucomip
xchg
pop
mov
mov
push
jo
je
mov
jb
cld
jmp
pop
mov
cld
int
add
sub
dec
fstp
and
push
adc
cs
(bad)
leave
and
fnstenv
in
dec
clc
dec
out
mov
mov
jae
cmp
and
inc
cli
jo
xor
inc
dec
mov
es
mov
std
fnstenv
sub
not
es
imul
mov
loopne
fisubr
fnstenv
test
std
rcl
bound
jnp
int
out
xor
mov
cmp
sub
clc
pop
repz
cmp
pusha
and
(bad)
cdq
pop
mov
fsub
fsubp
lock
inc
sahf
fidiv
into
out
call
cmc
mov
jo
leave
dec
call
pop
push
popa
in
fstp
xchg
jecxz
sub
enter
(bad)
ins
fs
push
fnstenv
mov
push
pop
add
add
cld
fnstsw
adc
add
enter
daa
(bad)
out
ja
adc
div
cmp
mov
push
cmp
jmp
fbstp
std
or
(bad)
(bad)
pusha
fsubr
cmp
ret
cld
arpl
je
xor
jmp
jne
mov
xchg
pop
je
sub
cmp
push
int3
scas
xlat
dec
imul
cmp
mov
jecxz
pusha
dec
sbb
mov
lsl
xchg
sbb
clc
xlat
mov
faddp
arpl
imul
mov
and
xchg
jecxz
cld
mov
cdq
mov
inc
mov
retf
out
fxch
and
lahf
jg
into
movs
mov
es
int3
out
or
push
fs
repz
xchg
(bad)
in
pusha
mov
fst
jnp
je
add
rcl
pop
mov
add
(bad)
jae
cwde
jo
outs
push
mov
hlt
jecxz
fdivp
push
mov
popf
ins
test
xor
rcr
inc
sti
lahf
rol
sub
out
repz
inc
and
xchg
and
loope
mov
cwde
arpl
pushf
out
dec
ins
pop
adc
ins
xchg
xor
dec
push
inc
fidiv
je
pusha
or
dec
mov
mov
xchg
xchg
pop
stos
cmp
cmp
inc
xchg
xlat
je
(bad)
jmp
sti
dec
push
mov
inc
fadd
retf
pushf
cdq
pop
mov
pop
pop
inc
fistp
loop
cmps
repz
mov
nop
sub
sub
pop
sub
cmp
push
sbb
sbb
dec
lea
out
out
push
cmp
fadd
push
jnp
cmps
rcr
out
fnstsw
ins
lods
push
aad
repz
rol
jge
stos
ror
mov
fidivr
mov
test
in
or
sbb
xor
cmp
sub
lahf
sbb
mov
jmp
dec
push
pop
adc
mov
dec
in
and
lea
ins
in
jo
cmp
mov
adc
ins
push
mov
pop
push
push
mov
fwait
lods
out
out
add
inc
ficomp
xor
or
inc
dec
cdq
pop
inc
data16
mov
push
fwait
pop
pop
adc
sbb
xchg
ins
mov
mov
xor
stos
sbb
xchg
ds
push
sbb
and
inc
pop
add
pushf
mov
push
fbstp
pop
sar
or
neg
jnp
cmp
retf
pop
mov
mov
sbb
sbb
(bad)
xchg
daa
lahf
mov
sbb
std
mov
push
jle
and
xchg
xchg
(bad)
adc
sub
cmps
pop
jmp
mov
out
jl
in
loop
adc
test
jmp
push
mov
adc
mov
sbb
fnstcw
dec
std
dec
pushf
sbb
mov
xchg
pop
push
stos
rcl
sub
das
shl
adc
inc
sbb
popf
call
ins
je
shr
sbb
icebp
mov
add
pop
(bad)
xlat
xor
xchg
jl
(bad)
cmp
retf
fstp
and
sub
dec
and
fiadd
mov
std
jecxz
xor
cmp
jle
pop
jl
stos
sar
and
mov
add
add
cmps
sahf
outs
aam
jecxz
pop
push
sub
ds
mov
jge
fld
popa
lods
mov
and
fwait
jmp
cwde
popa
add
jae
mov
imul
push
pop
into
dec
popf
ins
popa
cmp
pop
test
js
sti
add
push
xchg
mov
xor
jmp
jle
in
pop
fldenv
or
mov
sbb
sub
repz
popf
gs
add
dec
sub
repz
cmp
mov
mov
mov
xor
sti
cs
aad
sbb
ds
add
sti
stos
loopne
std
cli
shl
sahf
dec
fistp
rcl
pusha
addr16
shl
fisub
div
mov
pop
fdivr
sbb
add
xchg
les
and
or
lods
sahf
dec
sbb
shl
mov
stos
pushf
jne
clc
sbb
fsub
dec
lea
xchg
loop
dec
cld
mov
sub
push
dec
(bad)
clc
push
ret
cmp
push
push
scas
fwait
(bad)
mov
imul
jecxz
push
mov
mov
push
in
or
mov
dec
fcomp
push
and
cmp
and
shl
jo
xor
add
jb
and
mov
mov
loopne
pop
std
fbstp
outs
pop
and
iret
test
(bad)
jno
stos
and
(bad)
jmp
add
leave
add
sbb
push
sbb
xchg
out
mov
jmp
fimul
mov
or
inc
pop
rcl
leave
and
cmps
dec
sbb
js
cdq
sub
add
std
pop
bswap
fs
xchg
lds
and
mov
add
scas
pop
in
cmp
fcmovu
push
outs
call
xor
sub
ja
jl
fisubr
adc
sbb
into
and
mov
xor
push
movs
sub
ja
ficom
std
cmc
jb
test
jge
sbb
pop
sub
retf
add
push
mov
jnp
xchg
sahf
outs
jae
in
stos
pop
mov
sub
cmps
push
fistp
sbb
dec
mov
and
add
mov
mov
test
inc
fxam
ins
sbb
push
fsub
pop
jns
cld
mov
xor
mov
push
jge
jno
xor
lock
jo
sbb
mov
sti
aad
and
inc
xor
icebp
shr
std
sbb
faddp
mov
mov
fsub
mov
sbb
or
fbld
shl
xchg
fiadd
fs
push
out
dec
icebp
in
dec
cmp
sar
or
push
pop
int
cmp
jmp
ins
leave
enter
dec
aaa
sbb
add
outs
lahf
mov
inc
hlt
loopne
sub
pop
add
retf
movs
sbb
cwde
pop
sbb
inc
pop
stc
xor
lds
adc
mov
jle
push
push
add
pushf
xlat
xchg
test
js
cld
cmp
push
pop
daa
je
mov
fwait
icebp
push
out
movs
outs
dec
sahf
jns
mov
sbb
repnz
dec
pusha
or
outs
jns
mov
scas
mov
pop
cdq
data16
inc
mov
dec
in
rol
adc
pop
add
lahf
mov
sub
sbb
hlt
dec
aad
push
test
cs
xor
mul
pop
jl
xor
xchg
sbb
dec
retf
dec
mov
pop
gs
repz
or
pusha
(bad)
sbb
cmps
sti
push
pop
nop
add
jbe
into
mov
retf
popf
loopne
cli
pop
mov
fnsave
cmp
shl
(bad)
and
fcom
js
fisttp
(bad)
or
mov
dec
fisub
xchg
and
adc
jmp
sub
cli
push
mov
jge
in
inc
sar
fnstsw
mov
pop
dec
pop
xchg
push
in
scas
stos
and
sbb
mov
jb
sub
in
adc
dec
sbb
or
jmp
ror
or
sbb
cmps
bound
cmp
int
sbb
and
loop
xor
xchg
mov
push
xchg
xchg
dec
fnstcw
pushf
sbb
mov
dec
jecxz
and
jo
addr16
mov
out
sub
(bad)
mov
fsin
stos
pushw
call
jecxz
add
scas
pop
cdq
pop
and
ds
retf
(bad)
cld
shr
push
(bad)
bnd
mov
hlt
cwde
dec
ins
mov
cmps
and
inc
dec
stos
sbb
sbb
ds
fnsave
inc
pop
jae
jb
and
jbe
arpl
mov
mul
stos
xchg
xchg
xor
fisub
pop
sbb
cmps
loope
cmp
scas
xchg
or
data16
and
jne
icebp
mov
or
out
sbb
mov
outs
pop
popa
and
sbb
scas
dec
mov
cdq
push
arpl
sahf
sbb
sub
add
mov
cmp
dec
adc
add
ins
mov
and
mov
adc
arpl
jnp
sbb
retf
ret
push
push
repnz
psrlw
and
and
add
fst
stc
out
pop
dec
in
pop
mov
xor
in
xor
push
ficom
enter
sbb
in
push
repz
mov
test
xchg
pop
popw
call
pop
and
loopne
aaa
ss
out
pop
outs
pushf
ins
sbb
pop
mov
xor
inc
jecxz
mov
add
loop
mov
adc
repnz
sub
jp
xchg
mov
inc
ss
jg
mov
xchg
mov
rcr
(bad)
les
cmp
stos
les
mov
mov
test
lds
into
dec
xchg
pop
int
sub
inc
dec
mov
iret
popa
push
mov
jecxz
popf
pop
into
movs
cmp
or
mov
and
fidivr
inc
fild
(bad)
mov
add
jae
sti
inc
into
data16
mov
sti
pop
test
mov
xchg
push
push
gs
pop
jo
shl
jmp
scas
fisttp
push
daa
out
pop
push
loopne
add
pop
push
and
push
and
jne
in
jbe
push
int
mov
or
movs
dec
lock
and
test
pop
data16
adc
mov
pop
or
sbb
addr16
bound
add
pop
xlat
pop
div
add
movs
stos
pop
push
bound
inc
mov
inc
fwait
add
pop
and
jmp
mov
mov
inc
addr16
sub
daa
lods
jo
xchg
ss
mov
push
and
aas
sub
xor
push
and
or
cmp
xor
and
push
add
fisttp
mov
inc
cdq
sbb
cmp
jmp
and
shl
fcom
mov
jle
fiadd
loope
mov
cmp
cmc
movs
sti
or
rcl
test
retf
xor
xor
jmp
and
(bad)
aam
adc
dec
aaa
cmp
jno
imul
sub
xor
pop
mov
cwde
inc
sbb
outs
xor
push
xor
je
inc
and
(bad)
(bad)
pusha
fist
pop
std
(bad)
fstp
push
lods
and
mov
aaa
add
outs
call
pop
pop
push
adc
rol
loope
shl
call
add
push
add
je
int3
pop
imul
sbb
push
xchg
push
daa
out
cmp
dec
outs
pop
mov
mov
push
cmp
cmps
gs
jb
cmp
ds
mov
mov
sub
inc
(bad)
and
pop
scas
xor
aad
pop
jnp
ss
and
sub
sub
out
sbb
lods
pop
sahf
mov
movs
fnsave
fimul
inc
aam
inc
clc
retf
jge
and
and
sub
lods
ds
xchg
jnp
daa
adc
cs
pop
imul
inc
add
int3
cmp
jecxz
int3
adc
mul
add
cmc
dec
gs
add
nop
call
lock
pushf
xor
pop
jbe
jl
(bad)
pop
pop
lods
pop
test
push
sub
cmc
leave
or
scas
in
fnsave
fistp
jbe
dec
sbb
clc
shl
in
repz
add
add
mov
inc
jmp
stos
dec
mov
adc
aad
jmp
loopne
sbb
cmc
and
sub
xchg
and
inc
xor
cmps
sahf
jmp
fisubr
(bad)
fiadd
(bad)
shr
in
sbb
sbb
or
leave
les
je
jmp
mov
xor
jge
push
in
repnz
jb
sub
lds
jg
int3
or
jbe
add
mov
ret
inc
pop
outs
ins
cdq
add
add
movs
fs
out
jecxz
jne
pop
popa
inc
jnp
mov
(bad)
jl
jle
stos
push
in
jmp
pop
push
inc
add
sbb
adc
icebp
sbb
inc
in
retf
dec
mov
push
sbb
push
add
cmp
sbb
adc
xor
out
push
lods
aad
mov
add
cmps
ins
xor
and
jl
and
and
repnz
(bad)
or
pop
jmp
sbb
fs
std
xchg
push
and
fucom
xor
(bad)
sbb
ins
sbb
ds
frstor
pop
pop
fst
and
cmp
push
sbb
adc
sbb
bound
jbe
jl
ins
sub
cmps
lahf
inc
jl
test
push
dec
cmp
aaa
(bad)
sbb
xor
jmp
retf
xlat
call
dec
push
leave
add
ja
pusha
xchg
xchg
sbb
fidiv
cld
jmp
jmp
inc
fcomp
inc
ret
shl
push
jno
dec
je
std
arpl
mov
test
push
cmp
in
(bad)
inc
call
movs
sar
leave
jmp
xchg
cdq
sbb
into
ja
or
pop
shl
cld
xor
inc
out
xchg
mov
and
push
fmul
or
push
out
inc
iret
sbb
sub
out
inc
sbb
pop
lods
jnp
push
aas
jle
xor
or
add
mov
test
lods
call
ins
jmp
cld
lods
cmp
mov
sub
sbb
cmp
sti
xchg
add
(bad)
cli
sub
jmp
sahf
in
test
cmp
push
out
imul
lods
in
(bad)
mov
aas
jmp
fwait
in
in
hlt
and
arpl
icebp
stos
push
(bad)
push
out
dec
mov
push
adc
xchg
sbb
and
out
outs
sbb
mov
nop
mov
sbb
imul
xchg
jecxz
(bad)
and
pop
mov
xchg
(bad)
ins
mov
sar
arpl
sti
or
pop
jge
add
dec
xor
loope
dec
push
cld
scas
and
in
ficomp
je
push
xor
adc
ds
pop
iret
les
sti
dec
sub
or
ror
add
outs
jmp
es
fwait
ja
mul
inc
pop
jmp
push
test
lock
xchg
fnstsw
test
iret
sub
fsubrp
mov
sub
in
sbb
lods
call
mov
add
sbb
sbb
xchg
push
xor
outs
push
into
pop
dec
out
jecxz
or
sbb
mov
dec
jbe
sub
cld
sbb
dec
cmc
pop
imul
push
outs
push
xor
std
sti
outs
or
xchg
pop
outs
and
bnd
cmp
out
test
mov
fsub
call
add
(bad)
sti
pop
sti
sbb
and
cs
cmp
fcom
pop
inc
dec
cmp
jmp
and
and
sub
sbb
and
mov
mov
pop
and
xchg
jns
xor
jne
shr
je
sti
aaa
mov
mov
add
mov
and
es
and
fld
cmc
fs
pop
sub
inc
in
jne
push
jb
push
jecxz
lock
jne
std
mov
and
mov
sub
mov
add
ins
push
movs
jne
add
lock
dec
sbb
or
sbb
inc
jmp
inc
xchg
adc
xchg
cmp
jne
add
popf
sar
push
clc
pop
in
popa
lock
sahf
lods
arpl
or
jmp
in
fiadd
cmps
mov
nop
and
cmp
adc
or
fistp
(bad)
pop
pop
leave
outs
dec
jmp
pop
xchg
push
sbb
test
fiadd
push
xor
in
fs
xchg
or
in
ret
jp
sahf
in
inc
jge
dec
ficom
in
stos
mov
push
or
int
rcr
shl
xor
jno
dec
dec
jns
pop
adc
js
sti
test
and
mov
inc
fisttp
add
(bad)
xchg
js
ins
stc
fwait
movs
std
cmp
test
inc
lahf
jb
xor
inc
sar
fidiv
or
jecxz
cmp
mov
popf
sbb
call
mov
mov
cmp
push
pop
in
and
jecxz
(bad)
sbb
mov
in
sbb
ins
fisub
mov
pop
imul
push
xchg
je
jecxz
popa
push
jle
mov
push
imul
push
and
lods
jge
cmp
and
(bad)
jl
ins
mov
repz
outs
mov
xchg
jle
push
pop
lods
jmp
test
jg
jmp
jmp
in
hlt
rcr
inc
pop
loop
das
fst
mov
test
pop
add
cmp
pop
out
in
in
cs
pop
scas
ret
test
imul
repz
xchg
xchg
sbb
cmp
stos
add
push
and
and
std
add
adc
loopne
adc
into
pop
xchg
mov
push
int3
outs
sbb
icebp
cmp
pop
or
push
add
sub
movs
sub
js
(bad)
sub
push
mov
mov
push
mov
popf
jge
stos
sbb
int3
sbb
sbb
cwde
ins
aaa
push
ret
add
adc
and
mov
adc
push
add
arpl
(bad)
retf
gs
and
add
fwait
stos
push
xor
inc
nop
ja
push
sti
jecxz
sbb
sbb
push
pop
lldt
rcr
xchg
enter
cmps
adc
push
inc
and
and
and
iret
mov
or
mov
push
add
enter
fs
push
and
iret
mov
std
sbb
pop
pop
and
jne
sbb
dec
jmp
cwde
test
jnp
outs
cmp
jne
dec
retf
ins
ds
lock
in
mov
jge
and
(bad)
fidivr
inc
cwde
cmps
cs
xor
and
out
cmp
movs
imul
and
xchg
daa
or
js
enter
in
ret
jle
(bad)
fsubr
repz
into
jns
out
es
xchg
cmp
hlt
and
xor
nop
pusha
mov
push
cmp
daa
sahf
or
scas
outs
and
pusha
popf
in
and
push
and
aas
cmp
pushf
pop
hlt
repz
sub
pop
arpl
test
clc
push
lods
pop
pop
push
push
add
outs
push
or
scas
xchg
push
mov
addr16
and
pop
and
xor
jns
sub
inc
xchg
fmul
and
jl
js
push
out
aaa
addr16
jecxz
pop
jns
mov
out
imul
and
popf
dec
enter
mov
fidiv
mov
test
push
jmp
fistp
push
xchg
(bad)
cwde
and
push
jns
and
mov
nop
scas
cmp
and
pop
pop
pop
out
jl
std
stc
and
ficom
mov
test
cmps
adc
pop
sub
lock
xchg
cmp
mov
xor
cmp
imul
pop
pop
jmp
sub
and
call
not
xchg
add
into
leave
push
mov
jl
mov
mov
clc
dec
sbb
jmp
out
inc
or
mov
mov
sbb
pusha
sub
mul
xor
fstp
imul
fild
mov
add
mov
scas
mov
jmp
retf
sbb
mov
xchg
int
enter
adc
call
xchg
xchg
jl
sbb
retf
sub
push
cld
mov
adc
leave
dec
inc
call
(bad)
out
dec
pushf
jnp
xor
(bad)
mov
mov
(bad)
cmp
cmp
adc
xchg
repnz
pop
popw
push
mov
add
call
mov
test
xor
call
fimul
lock
sbb
je
jno
leave
pop
movs
jns
sub
out
fist
ins
sub
pop
sbb
adc
int3
int
sub
in
xchg
ficomp
or
in
and
pop
add
(bad)
(bad)
xor
sbb
fisub
rcl
in
add
addr16
clc
xor
mov
and
cmp
push
xor
(bad)
mov
nop
sbb
mov
add
inc
daa
push
mov
push
sbb
scas
into
das
push
push
sti
gs
xchg
(bad)
jle
stc
sub
and
xor
mov
and
sbb
mov
push
hlt
and
cmps
lods
ins
jnp
stc
out
fwait
shr
int
push
(bad)
sti
test
sub
(bad)
and
(bad)
mov
sbb
xor
test
inc
mov
cmp
js
sbb
jle
jp
popa
adc
xchg
iret
sti
pop
cmp
gs
or
loop
cmc
push
mov
push
sti
pop
or
rol
fsubr
cmps
fwait
push
mov
pop
and
dec
test
jmp
ror
mov
shl
pop
outs
ror
fisub
mov
sub
sbb
add
imul
mul
jmp
adc
test
or
pusha
call
sbb
cmps
jnp
call
icebp
jb
stos
inc
sbb
and
movs
sbb
movs
push
mov
std
hlt
or
mov
sub
sbb
pop
pop
ss
cmp
cmps
or
push
outs
sub
push
lods
ins
pop
jno
xchg
and
jae
and
sub
gs
jo
inc
gs
xchg
sub
jle
fld
mov
mov
add
jmp
jecxz
test
out
cmp
add
pop
adc
xchg
je
cdq
or
daa
mov
xor
movs
mov
movs
mov
inc
loop
dec
sub
shl
sbb
push
repz
fist
xlat
mov
mov
rcr
jnp
mov
mov
adc
sbb
lods
xchg
mov
mov
aaa
loopne
xor
add
and
data16
in
push
xor
pop
mov
sbb
push
sub
js
iret
jl
fbld
adc
adc
fsubr
mov
in
cdq
adc
inc
aaa
mov
or
xor
stc
adc
push
mov
xor
sbb
add
mov
dec
xlat
loopne
xchg
sbb
fucomp
nop
cmp
mov
test
sub
fadd
mov
mov
or
pushf
jmp
aaa
sti
not
and
push
add
dec
mov
jmp
adc
pop
and
sbb
push
pop
mov
fstp
scas
movs
inc
sbb
mov
xor
dec
or
push
mov
inc
xor
xor
sti
mov
stos
rcr
mov
push
inc
push
pushf
push
fsubr
int3
lds
lds
in
jmp
push
ds
push
jge
pusha
adc
adc
push
sub
mov
add
mov
scas
out
cmp
popf
push
mov
xor
cmps
std
fsub
sub
stos
adc
fdiv
clc
xor
(bad)
jl
call
aad
push
hlt
inc
std
jmp
pusha
sbb
mov
sbb
std
jne
sbb
loop
and
lea
pop
(bad)
call
push
sbb
sub
mov
js
adc
fsubr
jle
sub
jge
pop
cmp
mul
movs
jb
fdivp
add
iret
shl
dec
leave
int
stc
fs
lock
mov
pusha
bound
jecxz
in
sub
add
and
lods
push
and
sahf
push
lock
aam
mov
mov
add
sub
mov
movs
xor
rol
fsubp
pop
pop
sub
and
sahf
push
push
mov
mov
shl
push
jl
ficomp
repz
outs
mov
sbb
xchg
loopne
fcom
or
push
(bad)
hlt
arpl
push
inc
or
in
std
jbe
mov
scas
push
sbb
stc
jl
adc
pop
inc
add
mov
sahf
iret
neg
rcr
sar
mov
sbb
xchg
call
sub
dec
outs
jmp
xchg
jecxz
and
jbe
ins
mov
push
shr
movs
cmp
inc
mov
test
stos
cmp
jb
ins
xchg
sbb
imul
frstor
add
nop
jae
mov
and
jecxz
fsubr
sbb
mov
cmp
dec
into
fs
add
sub
push
pop
add
inc
xor
xchg
ins
mov
mov
mov
and
dec
cmps
inc
jbe
and
jns
pop
nop
in
out
cwde
mov
sub
ins
pop
and
fdivrp
xor
fbld
pop
inc
cli
or
mov
sub
lods
ds
cmp
and
dec
and
and
inc
sbb
push
jp
imul
push
and
loop
jle
mov
in
sbb
jno
inc
cmp
jl
(bad)
fcom
call
jle
ficomp
cmp
xlat
push
sub
push
fsub
mov
mov
fstp
mov
push
adc
mov
popa
aaa
sbb
(bad)
movs
fs
rcl
mov
je
aam
div
sbb
pop
je
xor
repz
mov
sti
retf
adc
mov
loop
outs
test
jne
outs
stos
dec
fwait
push
pop
inc
adc
repnz
cld
dec
out
cld
fdivr
dec
or
sbb
push
cld
push
jmp
es
and
retf
sahf
sbb
rcr
ret
popa
std
outs
push
jne
and
loop
mov
loop
jle
loopne
popf
and
fwait
xchg
loop
clc
cmp
xor
mov
iret
fadd
sbb
mov
stos
push
pop
push
stc
sahf
and
cmp
and
fdivp
in
xchg
dec
cmp
shr
pushf
xchg
outs
xor
sub
cmp
push
je
ins
sub
repz
pop
xchg
and
stos
sti
xor
mov
fisub
or
xchg
imul
mov
dec
cdq
push
sahf
mov
fwait
pop
ficomp
or
(bad)
(bad)
adc
test
push
cmps
mov
sahf
int3
out
xor
xchg
mov
jecxz
fld
fisttp
pop
push
retf
sbb
adc
jns
jecxz
cli
push
call
mov
push
(bad)
adc
rcr
push
mov
cs
out
int
sub
stos
fsub
loopne
pop
sbb
aaa
pop
shr
cli
jl
fisubr
or
xchg
imul
out
test
or
int3
cmp
mov
adc
pop
mov
add
popf
mov
jg
and
inc
xor
mov
aaa
je
xor
cli
inc
pop
xchg
xlat
cmps
jne
pusha
int3
data16
inc
sbb
jle
xchg
pop
xchg
cmp
jne
cmp
js
sub
push
int
(bad)
push
and
ret
or
nop
std
xor
stos
mov
jbe
sbb
jmp
out
push
mov
and
in
push
add
fcomp
fiadd
fisub
lods
enter
pop
popa
mov
inc
inc
sub
cmps
addr16
repz
(bad)
push
xor
(bad)
fisttp
imul
sub
inc
mov
mov
jae
rcr
jmp
ins
repz
push
adc
or
pop
adc
aad
movs
sub
adc
sbb
xchg
lds
xchg
mov
cwde
dec
cmp
outs
xchg
sbb
sahf
or
adc
add
sbb
and
jmp
pop
sti
and
dec
mov
fbld
les
rcr
popf
xchg
shr
and
sub
mov
into
and
push
rcl
aaa
and
inc
std
retf
xchg
dec
test
mov
imul
dec
or
icebp
call
pop
inc
fs
pop
xchg
mov
sar
jle
shl
inc
fstp
inc
jge
arpl
int
xlat
jo
(bad)
std
pop
scas
jg
jb
adc
test
cdq
aaa
stos
in
jo
mov
jbe
test
mov
xor
mov
push
in
loopne
xor
mov
pop
jmp
cmp
gs
mov
mov
pop
xchg
inc
(bad)
xchg
in
stos
mov
mov
outs
mov
dec
lods
cmp
mov
xchg
movs
ficomp
pushf
sbb
mov
add
or
mov
daa
repz
mov
enter
(bad)
push
fisub
icebp
cmp
sbb
icebp
pusha
sub
inc
lds
sbb
cmp
pop
gs
dec
xor
and
sub
mov
and
adc
dec
out
mov
pusha
test
in
lods
and
push
out
ins
mov
fild
rcl
add
pop
adc
or
jle
pop
out
jbe
loop
xor
and
scas
mov
pop
mov
push
mov
les
and
dec
cld
sub
mov
rcl
add
inc
sbb
push
clc
or
sbb
sub
sbb
mov
in
repz
clc
cli
and
jmp
iret
stos
clc
xor
sti
push
cli
nop
sbb
push
sbb
inc
fsubr
jnp
and
ins
sti
push
dec
je
mov
idiv
(bad)
retf
inc
xor
or
pop
cmc
jmp
push
sahf
sti
stos
loop
fcomp
repz
cwde
stos
adc
sbb
shl
dec
or
mov
sar
pop
arpl
loope
and
iret
out
sbb
mov
inc
loope
(bad)
mov
xchg
rcl
out
cmp
jp
sub
add
sbb
or
adc
push
sbb
dec
and
cmp
repnz
sbb
sbb
shl
(bad)
ss
mov
and
mov
inc
sahf
xchg
add
and
jecxz
fs
ficomp
iret
pop
xlat
pop
int3
and
xchg
or
add
in
sub
jl
fisttp
sbb
and
fidivr
shr
mov
rcl
push
pop
xor
sbb
(bad)
stc
pushf
jmp
imul
mov
shl
cmps
nop
into
jbe
inc
pop
sbb
jmp
pop
and
cs
mov
pop
mov
or
mov
pop
mov
fs
je
jae
mov
outs
out
into
or
das
jge
add
xchg
mov
leave
call
mov
adc
push
and
push
inc
xor
ficomp
pop
sbb
mov
mov
xor
push
rcr
cdq
jns
fidiv
mov
je
imul
jno
dec
jbe
xchg
repnz
and
jb
lods
push
sahf
inc
mov
popa
mov
gs
cmp
es
rcr
jne
push
js
les
xchg
push
(bad)
(bad)
jmp
jmp
mov
nop
cmp
adc
int
add
test
add
add
sbb
mov
push
sbb
fiadd
mov
js
and
mov
jl
xchg
ins
cs
fistp
test
test
addr16
fisub
and
imul
(bad)
and
jecxz
xchg
jecxz
mov
xchg
shr
push
xchg
int3
and
mov
sti
popf
stos
pop
in
mov
cdq
add
pop
(bad)
bound
inc
pop
sbb
pop
mov
(bad)
jmp
xor
fs
std
xchg
(bad)
in
(bad)
pushfw
and
test
adc
jo
jnp
frstor
jmp
test
data16
cld
test
jbe
loop
rcr
sbb
sahf
out
pop
popf
sbb
fistp
xchg
mov
jo
sub
mov
in
cmp
sub
es
jl
pop
gs
adc
addr16
cld
(bad)
out
or
and
jge
shl
add
sti
out
movs
pop
imul
loope
aad
pushf
xchg
sub
and
test
jmp
shl
push
and
cmp
nop
jecxz
cmp
xchg
and
mov
(bad)
mov
fs
aaa
repz
sbb
add
mov
iret
in
pop
lea
sub
fisub
test
leave
xor
jp
fscale
push
sbb
scas
ins
pop
xchg
sbb
jp
mov
cdq
jecxz
push
add
jbe
pop
cmp
cmp
xor
aad
std
or
aas
int
cmp
pop
scas
push
xchg
xchg
cld
arpl
cmp
cs
aam
fcomi
mov
pop
rcl
or
and
arpl
pop
mov
cmp
lds
push
fist
or
mov
sbb
jae
inc
mov
and
cdq
ss
mov
jmp
inc
call
push
jg
or
xor
leave
enter
jge
fisttp
mov
fist
cwde
inc
rcr
add
loope
and
and
(bad)
int3
pop
xor
adc
dec
jne
pop
xchg
push
call
jmp
mov
sbb
sbb
jmp
call
and
imul
mov
sbb
push
sbb
jmp
and
push
adc
inc
mov
add
ror
fld
es
mov
mov
outs
in
xchg
inc
mov
repz
jmp
push
ins
cld
xchg
xor
outs
call
pop
je
pushf
cmp
pop
adc
pop
sbb
je
inc
cmp
jne
jbe
ficom
or
adc
in
cmp
(bad)
dec
and
adc
sahf
xor
stc
enter
(bad)
cmp
add
mov
sbb
mov
jecxz
jbe
(bad)
out
fwait
cmp
cmc
sbb
js
sbb
ins
(bad)
cwde
jnp
push
sahf
mov
jmp
mov
mov
mov
cld
ins
jl
(bad)
sti
ins
int
or
xor
inc
enter
fistp
and
fmul
sbb
xchg
loop
and
ror
jae
fcomip
mov
pusha
pop
mul
test
mov
loope
and
adc
jle
(bad)
retf
mov
and
lea
sbb
in
iret
stc
push
mov
mov
pop
pop
jmp
fiadd
jnp
out
(bad)
cmps
cwde
ficomp
push
and
pop
movs
nop
arpl
sbb
imul
mov
dec
mov
jmp
mov
xor
fcom
lods
dec
xchg
sbb
sbb
loopne
sbb
mov
addr16
sti
outs
xchg
popa
addr16
sbb
outs
repnz
aaa
add
ins
mov
cs
push
push
adc
fst
leave
and
sbb
sub
(bad)
mov
xchg
mov
cmp
and
sub
dec
or
sbb
dec
imul
and
sti
jle
in
ret
mov
fcomp
sbb
ds
add
icebp
jnp
dec
inc
cmp
std
rcl
sbb
mov
adc
out
arpl
cmp
enter
rcr
stos
xchg
push
fstp
push
dec
add
pop
push
mov
jge
leave
imul
icebp
jecxz
cmp
cmp
je
jmp
sbb
add
jae
xchg
and
fimul
and
into
mov
out
mov
and
(bad)
adc
xor
pop
shl
fs
pop
mov
xchg
mov
mov
cdq
jp
and
fwait
shl
pop
fucomi
sbb
pop
mov
gs
sbb
leave
xor
lea
cmp
mov
test
sub
fcomp
inc
arpl
stc
je
icebp
repnz
cvttps2pi
test
sbb
imul
outs
cmps
stos
je
sti
jg
shr
fadd
add
mov
in
inc
push
adc
arpl
retf
pop
out
add
or
loope
jbe
imul
sti
jge
or
and
xor
and
pushf
outs
ficomp
and
fcomp
icebp
cmp
xor
pop
mov
and
xor
add
and
fisttp
xchg
icebp
out
push
nop
stc
loope
movs
dec
jbe
inc
inc
pop
xchg
outs
dec
std
adc
push
inc
ror
mov
ss
jp
popf
jle
mov
cmps
mov
mov
stc
mov
(bad)
cli
ficomp
lock
and
fiadd
mov
arpl
cmp
out
sub
movsx
cmp
add
fdivr
mov
adc
es
and
adc
and
push
sub
mov
jne
mov
add
jecxz
mov
push
and
stc
mov
nop
mov
and
jno
ds
stos
or
shr
test
pop
or
mov
into
add
arpl
pop
xchg
and
inc
leave
test
pop
push
test
ret
mov
cs
out
div
dec
outs
ror
pushf
push
inc
sbb
pop
scas
jmp
je
cwde
inc
lea
pop
cwde
movs
ds
adc
stos
push
in
sbb
in
and
cmp
fstp
sub
and
pusha
jnp
mov
cmc
jns
sub
sub
push
ins
rol
out
xor
out
repnz
push
mov
fisub
mov
(bad)
fmul
ror
and
imul
mov
je
retf
lock
jl
(bad)
shr
stos
mov
in
mov
(bad)
pop
inc
jo
push
mov
mov
push
add
clc
rol
hlt
add
std
cmp
cmp
mov
mov
les
add
(bad)
sar
and
test
std
add
sbb
mov
ffreep
mov
imul
cmp
stc
ret
xchg
sbb
ds
out
and
cmp
push
in
pop
cdq
leave
pop
ret
aad
mov
push
stos
scas
inc
jmp
pop
cli
pop
mov
cmp
and
rol
jecxz
pop
inc
movs
(bad)
and
outs
push
mov
pop
push
fild
sub
clc
stc
mov
xchg
ins
cld
loope
loope
cmp
push
xor
add
mov
mov
daa
jmp
jo
push
mov
xor
sbb
js
sub
fdivr
shl
dec
mov
inc
jmpw
push
inc
xlat
fistp
sbb
adc
adc
push
sti
xor
test
mov
in
mov
call
stos
sahf
xchg
mov
mov
imul
stc
cs
repz
mov
bound
outs
or
loope
mov
call
mov
pop
sbb
sub
cmp
push
sub
dec
ds
js
(bad)
xchg
(bad)
pop
and
jecxz
inc
ss
mov
pusha
loopne
out
ss
jmp
or
mov
addr16
pop
jmp
xchg
lods
dec
mov
push
fldenv
outs
cmps
sahf
ret
stos
outs
dec
push
inc
(bad)
scas
das
mov
and
pop
inc
cmc
int3
fistp
sub
inc
stc
popf
retf
inc
jl
retf
ins
jbe
ds
sbb
leave
adc
pop
in
cmp
add
sbb
sub
ins
das
js
jmp
pop
(bad)
repz
mov
xor
mov
out
mov
pop
push
mov
jo
fcomp
and
mov
cmc
fdivp
mov
(bad)
je
and
test
sub
daa
sti
(bad)
leave
fistp
dec
pushf
jl
xor
and
xor
test
or
mov
ret
mov
and
or
cmps
dec
and
sti
mov
inc
xchg
call
in
add
adc
xchg
xadd
xor
adc
jg
in
sub
or
(bad)
out
add
loopne
add
pop
clc
stos
shr
xor
je
lods
or
sub
jmp
ds
push
add
call
cmp
pusha
and
sbb
pop
call
add
cmp
add
aaa
and
test
dec
arpl
or
fcomp
sbb
ins
add
stc
jmp
sar
mov
cs
repnz
fild
in
dec
sub
retf
call
dec
jecxz
(bad)
fstp
into
jmp
push
push
pop
cmp
and
hlt
mov
xor
mov
in
push
retf
and
std
fsub
dec
fcomp
mov
add
in
or
imul
and
ja
pop
fidiv
test
cmp
or
ja
and
outs
mov
mov
add
mov
sbb
ins
mov
or
sbb
daa
pop
cmp
lahf
jmp
hlt
pop
xchg
imul
rcr
pop
pop
stos
je
lods
int
test
into
int3
push
jbe
ret
stos
dec
cmc
sti
jo
inc
test
cmovl
mov
push
test
adc
pop
mov
addr16
cmp
jmp
aam
push
mov
cs
int
arpl
adc
stc
mov
xor
ds
pop
imul
pop
imul
out
inc
pop
mov
cmc
inc
call
clc
jle
sub
xchg
cli
inc
nop
push
sub
js
imul
jnp
ja
lods
mov
lea
fwait
mov
mov
sbb
test
(bad)
shl
mov
outs
mov
pop
jae
pop
daa
inc
popf
sbb
push
ror
inc
addr16
and
mov
and
icebp
dec
mov
dec
jbe
in
push
xor
sbb
sub
arpl
push
pop
iret
fdivr
or
or
pushf
es
add
add
mov
das
inc
je
pushf
pop
xor
jg
sub
movups
cs
mov
stos
mul
neg
mov
lock
scas
outs
stos
fmul
mov
jae
in
aad
pop
cwde
inc
fxch
pusha
cmp
mov
xchg
mov
dec
mov
div
xor
scas
out
jmp
lods
int3
sbb
adc
xrelease
and
mov
rcr
adc
repz
imul
mov
stc
jb
ins
add
sub
dec
pop
mov
xor
in
fstp
into
sub
ins
cli
mov
(bad)
pop
inc
cmp
mov
mov
dec
and
test
jg
dec
mov
dec
call
das
in
jne
scas
fdiv
and
sbb
inc
mov
out
xchg
iret
pop
xchg
sti
sbb
pop
stos
or
jmp
fdivp
mov
sbb
and
add
xor
xchg
cmps
push
je
mov
sbb
ss
adc
add
fstp
jle
inc
mov
or
scas
rcr
or
(bad)
adc
jge
xor
into
jnp
outs
jmp
jmp
pop
xor
mov
or
mov
retf
dec
cli
jmp
and
out
iret
int3
jo
cmp
loop
jns
rcr
(bad)
fidiv
ds
jecxz
jl
rol
les
(bad)
arpl
pushf
mov
xlat
or
fldenv
cmps
pop
xchg
add
dec
sbb
sub
fdiv
lods
add
adc
ins
test
fcom
jl
pop
jbe
test
mov
out
mov
jns
div
inc
mov
mov
sbb
cmp
sbb
jmp
cmps
jae
or
nop
sub
sbb
lods
push
and
add
rcr
std
inc
cld
cli
xor
or
loop
jno
push
pop
pop
fwait
in
pop
fcomp
add
fstp
(bad)
xor
test
clc
xchg
mov
mov
sub
or
test
and
cmp
sti
add
mov
fisubr
fld
jno
adc
xlat
loope
idiv
ret
mov
mov
les
fprem1
mov
mov
fild
xchg
mov
pop
dec
push
and
mov
jmp
imul
mov
lods
stos
(bad)
adc
xor
pop
daa
jl
mov
pop
adc
add
pop
int
xor
or
fild
xchg
add
cs
aad
adc
mov
lds
scas
pusha
(bad)
ror
and
cmps
into
fadd
push
lock
aad
xlat
rcl
call
mov
cmp
adc
adc
pop
sahf
ficomp
or
in
adc
dec
fst
popf
xchg
fwait
aas
mov
pop
jmp
mov
mov
outs
je
and
pop
fstp
les
pop
jmp
cli
clc
outs
and
cmp
sub
fld
adc
jle
cs
push
and
sbb
sbb
jae
pop
mov
mov
and
push
les
ror
div
mov
test
cmp
mov
stos
dec
mov
imul
in
cld
xchg
daa
shr
jnp
or
xchg
out
into
(bad)
push
movs
(bad)
xor
arpl
push
out
icebp
pop
leave
pushf
(bad)
push
pop
xor
rcl
push
sbb
sbb
mov
push
xchg
out
pusha
fidiv
stos
and
fistp
cwde
xchg
lods
sbb
dec
dec
loope
in
sub
pop
stos
or
mov
pop
pop
cli
je
push
aas
pusha
add
sbb
adc
stc
pop
retf
std
pop
cwde
rcr
push
test
sar
push
xchg
je
stos
rcl
pop
push
test
xchg
out
cdq
outs
xchg
cwde
stos
inc
mov
das
push
cld
pop
xchg
or
sete
jo
dec
(bad)
nop
cmp
push
jnp
sbb
xor
pop
mov
leave
nop
xor
out
clc
mov
sbb
bound
sbb
jnp
nop
mov
add
out
nop
cdq
daa
push
std
adc
in
fstp
dec
sub
adc
paddb
jns
add
stos
ds
push
sub
push
daa
adc
add
xor
push
add
pop
and
cmc
xor
retf
push
mov
ja
push
ins
fiadd
jo
inc
ss
or
and
mov
stos
pop
push
pop
sbb
cli
in
loope
std
sbb
xchg
gs
xor
fwait
out
(bad)
ins
outs
lock
jmp
jmp
and
jno
popf
mov
xchg
mov
inc
inc
aaa
rol
sub
cmp
(bad)
je
and
jmp
shr
nop
dec
jg
and
xor
push
leave
adc
fcomp
mov
jl
sbb
inc
jp
xlat
test
lods
pop
and
mov
adc
sahf
das
inc
rol
cmp
xchg
sti
out
bound
in
add
aaa
sbb
sbb
cmp
cs
adc
sbb
or
outs
jae
mov
out
adc
dec
cmps
shl
fsub
sub
add
sar
xchg
add
daa
push
sbb
mov
cmp
jae
in
sti
mov
mov
ins
cmps
shl
and
(bad)
enter
add
lock
adc
shr
retf
push
sbb
popa
mov
fidivr
inc
dec
or
sub
shl
xchg
xor
inc
imul
(bad)
popa
adc
sub
stc
and
stc
into
pop
sbb
or
sbb
jne
cmc
mov
xchg
dec
xchg
dec
add
imul
cs
in
lods
movs
and
mov
(bad)
dec
adc
pusha
std
xchg
jmp
pop
jp
loop
(bad)
adc
pop
mov
sbb
dec
gs
clc
cmp
cs
cdq
push
and
sub
pop
jmp
and
shl
jle
es
adc
jmp
in
push
or
sti
fs
sbb
sbb
fild
add
xchg
dec
mov
cli
and
add
lods
fwait
leave
shl
outs
stc
loopne
inc
add
fisub
pop
push
pushf
and
xchg
pop
mov
sbb
cmp
xchg
mov
xchg
dec
mov
or
retf
es
cld
aaa
cmp
and
fcmovbe
mov
sbb
push
pop
pop
aam
in
(bad)
and
xchg
scas
int3
cld
pop
ret
cmp
(bad)
fadd
loop
pop
adc
fsubr
lds
rcl
mov
cdq
or
jne
out
rol
out
inc
aad
adc
data16
sbb
jl
jecxz
jmp
fld
cmp
mov
jne
xor
mov
and
div
or
push
adc
sbb
or
push
push
test
test
fcomp
pop
das
adc
daa
in
pop
out
aas
inc
and
pop
add
shl
and
and
mov
pop
mov
pop
dec
sbb
sub
inc
pop
fdiv
mov
xchg
imul
mov
add
loop
push
jo
dec
repz
fisttp
and
mov
out
(bad)
in
fdiv
jno
cmp
out
fild
(bad)
cmp
sbb
and
ins
pushf
fbld
arpl
aaa
stos
dec
popa
sub
jl
xor
push
jmp
cmp
pop
rol
nop
xor
and
xchg
popa
aaa
mov
cli
fadd
mov
fsub
enter
ror
jnp
je
mov
test
add
shl
je
dec
xchg
mov
dec
scas
jmp
sub
mov
adc
jbe
xchg
lods
xchg
scas
dec
push
mov
fistp
and
jo
out
in
mov
inc
jns
fnstcw
or
std
pop
mov
clc
data16
xlat
jl
cmps
dec
sbb
cmp
adc
sbb
scas
xor
fisttp
jmp
mov
xchg
jmp
outs
sbb
mov
mov
and
mov
sbb
cmp
and
sub
loopne
movs
jmp
jmp
pop
cmp
cdq
mul
nop
out
and
iret
sbb
shl
push
mov
enter
in
xchg
rcr
outs
jmp
adc
push
push
mov
out
adc
cli
sbb
and
sti
hlt
jl
jns
mov
push
pusha
or
sub
nop
jp
ficomp
imul
iret
and
imul
inc
loope
scas
pop
mov
inc
push
sbb
sbb
cld
inc
add
aad
add
xchg
cmp
push
add
jmp
pop
jecxz
pop
xor
xchg
sub
push
neg
push
out
jmp
pop
push
push
fwait
ss
(bad)
lock
sub
sbb
sub
(bad)
pop
sbb
add
or
mov
jmp
xor
ficom
or
jmp
retf
xchg
sub
sbb
(bad)
ss
add
or
jb
xchg
push
ja
inc
out
clc
pop
stos
and
outs
stos
movs
shl
cmp
mov
stos
sti
mov
cmp
imul
fisub
mov
sbb
add
div
cmc
add
sahf
sbb
repnz
mov
sbb
and
cwde
inc
jmp
out
out
xchg
jecxz
xchg
mov
rol
cdq
jp
xor
mov
cwde
sti
xchg
(bad)
mov
inc
mov
cmp
pop
test
test
shr
add
pop
imul
enter
cld
loope
call
cdq
sbb
rol
pop
mov
sbb
cmc
bound
mov
cmp
pop
into
mov
and
cs
push
jecxz
jae
pushf
sbb
inc
ror
push
inc
in
and
aad
pushf
inc
adc
mov
jmp
(bad)
jmp
inc
jl
adc
jecxz
push
arpl
call
pop
and
dec
cmp
iret
add
jle
loope
cs
sbb
dec
or
test
sub
out
inc
jb
jno
and
mov
pop
cwde
mov
xchg
dec
mov
push
call
arpl
je
xchg
sub
cmp
shl
out
in
xchg
aas
or
jmp
fnsave
dec
fimul
popf
pop
push
hlt
loopne
sbb
cwde
and
jb
mov
aaa
jnp
outs
and
iret
hlt
push
outs
test
ret
xchg
into
dec
adc
out
xchg
inc
ins
data16
in
cdq
jmp
jle
push
retf
fcmovu
xchg
dec
mov
and
mov
sbb
outs
mov
pop
or
push
imul
jae
out
adc
in
int3
(bad)
loop
pop
pop
test
popf
sub
sub
outs
pop
addr16
add
pop
xchg
int
in
retf
adc
ret
(bad)
sbb
call
sub
mov
jg
fs
ret
and
repz
ffree
xor
push
sar
inc
xchg
sbb
dec
sub
and
mov
es
jmp
cmps
add
jae
popa
pop
xchg
popa
std
sbb
push
lds
leave
add
mov
cmp
rep
mov
neg
stos
push
inc
and
mov
rcr
adc
or
mov
mov
in
movs
pop
out
or
je
outs
aam
cld
scas
jp
cld
xor
jecxz
es
add
into
in
imul
inc
cmps
mov
cmp
call
mov
in
push
call
xchg
sti
stos
pop
cld
loopne
out
(bad)
je
inc
rcr
(bad)
pop
sbb
push
js
mul
xchg
xchg
ror
ficom
push
push
pop
aad
pop
addr16
in
xor
test
mov
test
adc
xchg
mov
push
mov
jecxz
out
dec
cdq
cmc
push
dec
fldcw
and
out
and
inc
xchg
or
sbb
scas
push
bound
and
mov
inc
(bad)
jmp
sub
add
pushf
aad
add
fwait
push
mov
sbb
int
push
ja
cld
inc
pop
popa
clc
outs
mov
dec
rcr
fcomp
(bad)
pop
mov
test
ficom
xchg
ins
pop
sbb
cmp
fisub
jecxz
data16
xor
lds
xchg
stos
test
sub
push
cmp
sbb
loop
es
pop
xlat
push
test
pop
push
pop
out
or
add
inc
outs
push
xor
ins
mov
sbb
pop
inc
add
and
(bad)
add
mov
pop
movs
cmp
and
fadd
(bad)
mov
xor
cld
cli
jp
mov
adc
jnp
jl
lods
pop
das
icebp
and
int
scas
mul
std
and
push
mov
fist
test
push
sti
cmps
mov
cmps
fbstp
mov
xchg
mov
dec
lahf
inc
cmp
jl
mov
(bad)
xchg
adc
pusha
sbb
inc
jmp
rcr
pop
cwde
fisttp
icebp
movs
jo
out
add
lods
ficom
or
cli
(bad)
vrcpss
xor
sbb
inc
pop
neg
scas
fild
push
aas
cmc
push
sub
movs
push
(bad)
pushf
jg
(bad)
jl
fist
loop
aaa
mov
fild
jge
pop
add
fist
jp
in
mov
cmp
fisttp
int
aaa
fistp
adc
(bad)
adc
inc
stos
push
jecxz
imul
jp
jecxz
push
sub
ror
adc
sbb
imul
fild
or
call
pop
and
(bad)
jg
test
adc
cmp
mov
fistp
pop
inc
cs
xchg
dec
ror
dec
and
mov
(bad)
cmp
(bad)
and
js
in
iret
repz
sub
sar
mov
sbb
dec
jl
push
dec
sbb
fist
outs
imul
xlat
cdq
push
dec
sbb
leave
ficom
mov
cmp
mov
jmp
(bad)
fmul
movs
adc
mov
mov
and
jecxz
sub
mov
(bad)
adc
lods
mov
inc
popa
cmp
fld
xchg
mov
fistp
pop
fucomp
jae
in
sbb
js
dec
mov
adc
(bad)
jle
icebp
add
jbe
fistp
xor
lea
or
fistp
pop
and
lock
out
pop
addr16
mov
stos
adc
out
sub
fstp
pop
xchg
inc
xchg
jecxz
push
lea
outs
jno
mov
cmp
ret
out
mov
rcl
stc
push
jno
inc
mov
(bad)
sar
mov
adc
fmul
dec
loop
mov
xor
mov
xor
nop
retf
rol
pop
jo
les
test
lahf
fnstcw
stc
lock
pop
pop
stos
cmp
fidivr
call
pop
(bad)
imul
cld
mov
mov
jmp
push
jle
outs
dec
fcom
sti
sub
fst
cmp
adc
les
call
cmp
add
push
cmpps
cmc
pop
lahf
(bad)
in
fld
scas
jg
(bad)
movs
and
or
dec
pop
push
adc
mov
add
mov
fld
jl
mov
pop
ja
xchg
pusha
pop
ficom
out
pop
outs
adc
dec
fild
cld
cmp
daa
mov
cmps
push
adc
loope
jnp
xor
jbe
fisubr
je
sbb
aaa
jmp
lods
dec
jle
xor
fist
pop
dec
push
adc
cdq
addr16
test
sahf
sbb
sub
jmp
fnstenv
xchg
fild
sub
or
repz
pop
xchg
pop
cmp
movs
dec
das
dec
(bad)
fisttp
push
mov
(bad)
and
push
iret
push
fsubr
and
nop
fld
sub
mov
or
fist
pop
mov
fwait
inc
repz
mov
ret
daa
adc
jmp
hlt
sbb
mov
imul
xor
mov
adc
ins
mov
fistp
repz
sbb
adc
xchg
and
cli
push
jmp
aam
pop
popfw
sbb
push
push
jno
pop
imul
sbb
and
cmp
inc
jg
push
bound
inc
jnp
xor
pop
or
pop
inc
adc
fist
retf
or
jmp
sbb
movs
clc
push
cmp
rcl
xor
xor
outs
fwait
iret
fstp
aam
cmp
xchg
les
pop
popf
rcr
call
(bad)
jns
xchg
fcomp
mov
lahf
or
add
xchg
and
mov
cmc
mov
aam
mov
lahf
mov
data16
adc
outs
hlt
sub
inc
push
mov
call
adc
sbb
cwde
loop
fstp
cmp
dec
cmp
repz
add
push
adc
push
mov
ins
cmp
call
adc
and
std
xlat
fwait
cmp
mov
popf
lods
imul
pop
add
stc
mov
pop
xor
movs
mov
nop
push
dec
inc
frstpm(287
js
pushf
mov
sahf
stc
mov
lock
adc
int3
test
test
(bad)
fstp
les
cmp
je
mov
push
nop
xor
jmp
inc
adc
pop
mov
cmp
mov
pop
sub
in
out
int
mov
mov
inc
xchg
test
cmp
jmp
clc
mov
mov
loope
iret
sbb
mov
mov
jl
sbb
je
mov
fistp
cwde
bound
adc
mov
push
mov
imul
pop
icebp
out
mov
lods
mov
fist
sub
pop
popf
jge
icebp
cmps
gs
mov
sbb
xchg
sub
int3
and
shl
mov
fadd
fld
lods
aad
push
jns
retf
or
and
out
in
and
inc
fstp
xor
sub
rcl
mov
inc
xor
push
das
sub
add
clc
push
push
inc
fisttp
fstp
adc
sub
mov
inc
cmp
(bad)
out
sbb
fisttp
inc
fist
mov
fmulp
mov
fist
dec
jne
fisttp
aad
fild
mov
shl
and
jns
and
pop
fadd
inc
xor
fninit
leave
and
fisubr
dec
xor
inc
mov
dec
pop
das
pop
in
fcmovnb
daa
inc
repnz
js
fistp
imul
mov
ja
fwait
je
inc
arpl
pop
fld
pop
ror
popa
pop
mov
or
arpl
mov
cmp
shl
fcmovnb
js
or
loopne
rep
ficomp
pop
xchg
ret
mov
adc
adc
add
fucomi
mov
ret
aam
xor
push
daa
adc
mov
ficomp
(bad)
loop
scas
loope
cmps
imul
(bad)
(bad)
and
(bad)
sub
stc
pop
or
jecxz
pop
lds
enter
mov
out
(bad)
cmp
add
fwait
mov
add
dec
pop
jp
mov
adc
sbb
cmp
mov
jp
retf
or
jo
icebp
repz
cmp
test
int
or
xchg
add
fcomip
arpl
sbb
cli
stos
outs
pop
mov
mov
fcmovne
stos
fwait
jp
sub
cld
push
xor
repnz
stos
loope
jo
dec
ret
ss
fcomp
jl
jbe
dec
int
je
shl
repz
ins
jge
push
inc
test
fimul
mov
fistp
or
fcmovne
je
mov
add
test
mov
pushf
(bad)
dec
fisttp
test
arpl
mov
or
xor
mov
xor
hlt
repz
ret
outs
lds
(bad)
das
xor
loop
push
daa
jle
mov
pusha
mov
xchg
repz
mov
adc
sti
and
jge
aam
jmp
je
aad
jle
mov
aad
dec
fist
xor
fild
xor
or
cmp
stc
fld
or
mov
jne
call
out
test
lods
or
pop
add
mov
rcl
rcr
sub
(bad)
fst
test
push
pop
(bad)
stos
inc
fild
cmovl
addr16
in
sar
mov
mov
leave
jne
fild
dec
xor
and
in
add
push
mov
jg
cmc
cdq
jno
fldl2e
lds
call
and
push
sbb
xchg
push
call
and
test
xor
dec
pop
cli
or
push
pop
addr16
frstpm(287
jne
jnp
push
mov
xchg
push
fst
or
rcr
jmp
iret
push
xchg
adc
loope
popf
cld
fdivr
push
push
and
loop
lock
sbb
jge
jecxz
iret
aas
test
ins
outs
scas
repz
inc
cmp
pushf
jb
ja
xrelease
and
out
pop
mov
les
add
inc
pop
jp
push
test
ins
aam
in
inc
(bad)
mov
pop
jbe
xchg
addr16
adc
xchg
pop
xchg
imul
fld
daa
test
jl
xor
xor
mov
popa
fstp
dec
aas
rcl
daa
call
shr
icebp
mov
push
(bad)
lock
dec
adc
sub
mov
icebp
xor
je
cmp
fisttp
mov
dec
sbb
xor
xchg
pop
les
aam
inc
dec
div
dec
jecxz
push
movs
mov
pop
cdq
les
sbb
scas
sub
stc
repz
adc
rol
(bad)
ficom
ret
sbb
xor
sbb
pop
sbb
push
fnstenv
mov
jecxz
push
mov
push
mov
mov
mov
jecxz
ss
cli
hlt
fdivr
pop
or
mov
ins
jecxz
rcl
sub
or
(bad)
clc
test
lds
in
fstp
mov
icebp
fisttp
cmps
out
repz
inc
scas
fisttp
push
sbb
les
out
or
(bad)
and
scas
push
fstp
sbb
pushf
je
test
jmp
mov
mov
sar
mov
pop
cmp
shr
ret
or
clc
fs
pop
push
ds
dec
add
test
mov
(bad)
int
jle
inc
jns
mov
adc
mov
fist
fsub
jnp
scas
sub
mov
add
mov
mov
dec
mov
adc
xchg
pop
sbb
out
sbb
mov
push
cmp
pop
(bad)
leave
sbb
fisttp
inc
cmp
jb
mov
mov
pop
arpl
pop
dec
fisttp
leave
mov
pop
sbb
push
sub
fist
add
fisttp
add
ret
dec
stos
and
fldenv
stc
jmp
mov
daa
push
stos
inc
fwait
loop
lods
outs
push
or
rcr
jecxz
sahf
out
loope
int
push
pop
mov
jbe
push
scas
inc
int3
sti
sbb
push
int
cdq
ins
repz
loop
(bad)
mov
cdq
push
jg
sbb
jno
or
pop
sub
(bad)
cli
imul
push
cdq
jg
dec
arpl
aaa
fstp
std
jecxz
sub
mov
and
call
and
test
inc
fild
call
ds
cmp
xor
les
test
inc
fist
jae
imul
fstp
xor
inc
rcr
cmp
jp
dec
iret
fstp
push
jge
sub
je
mov
pushf
cmp
pop
dec
mov
cmp
cli
mov
adc
push
call
pop
cs
fcmovnbe
fdiv
cmp
or
inc
rcl
jmp
jae
cmp
and
adc
mov
aad
mov
mov
movs
lds
or
fild
xchg
cld
mov
out
jle
sbb
fimul
sub
(bad)
cmp
add
push
lahf
fistp
fist
xchg
pusha
mov
or
mov
mov
test
cmc
loop
mov
add
nop
cmp
xor
fmul
(bad)
into
fcmovnb
push
ret
jg
fstp
outs
jmp
sbb
mov
div
aas
(bad)
push
rcr
or
iret
push
lea
ins
test
stos
movs
dec
mov
sbb
dec
pop
mov
sub
stos
sti
mov
movs
loop
mov
cmp
lds
shl
adc
xor
les
enter
fld
jle
add
cmp
mov
or
mov
cmp
mov
mov
out
xchg
dec
test
fild
push
outs
or
jb
pop
ds
sbb
test
add
dec
(bad)
test
mov
aaa
ret
jbe
adc
les
mov
xchg
inc
dec
cmp
aam
pushf
push
push
(bad)
lahf
movs
adc
xor
lods
sahf
push
neg
js
(bad)
stos
pusha
cdq
pop
fucomi
jle
lock
or
mov
icebp
jae
cdq
stos
or
add
pop
scas
and
cmp
aas
sbb
jmp
repnz
dec
aam
test
shl
fadd
push
repz
mov
cwde
int3
pop
xchg
fld
push
add
sub
dec
dec
jecxz
sbb
fcmovne
pmulhuw
outs
push
sbb
pusha
fistp
sub
jmp
mov
fild
xchg
adc
xchg
and
ret
arpl
xchg
fistp
add
lods
jmp
push
fistp
jecxz
aam
inc
mov
pop
push
push
(bad)
into
out
adc
test
jnp
push
call
mov
sub
inc
retf
loop
cs
pushf
fsubr
jbe
or
fninit
movs
xchg
inc
test
(bad)
pop
adc
jmp
adc
fistp
lods
outs
(bad)
dec
sahf
fdiv
or
shl
stos
clc
mov
loope
icebp
mov
fist
inc
push
call
xor
js
push
loop
dec
mov
adc
adc
and
push
add
iret
cmps
outs
enter
mov
int3
test
pushf
sbb
push
aad
add
push
stc
mov
fisubr
sbb
fcmovnbe
pop
dec
into
lea
jbe
xchg
daa
scas
fisttp
xchg
xor
mov
les
(bad)
in
and
mov
adc
dec
cmp
jge
and
mov
sbb
inc
push
ins
fldcw
outs
sbb
pop
into
mov
sub
jno
xchg
mov
add
jmp
cmps
sub
and
fisubr
not
fcmovne
lea
aaa
mov
fstp
aas
and
aad
jg
sbb
jno
fcmovne
fisubr
ss
push
sbb
dec
mov
or
xchg
ret
pop
adc
pop
mov
sub
iret
pop
xchg
out
push
adc
jg
ins
outs
pop
sbb
and
hlt
je
sbb
ins
pop
fcomp
lods
sub
sbb
and
stos
pusha
lea
mov
daa
pop
test
je
jmp
rep
out
xor
jmp
dec
test
fst
push
push
sub
popa
sbb
dec
adc
shl
cld
lahf
cmp
xchg
adc
mov
addr16
inc
pop
sbb
sti
call
inc
pop
fldcw
inc
(bad)
xchg
mov
(bad)
hlt
stc
arpl
cld
aad
cmps
fadd
ins
repz
adc
sbb
pop
jg
(bad)
repz
ss
add
fistp
pop
fistp
mov
loope
int3
sbb
fldcw
push
sbb
rcr
dec
add
and
daa
stos
jecxz
xchg
inc
stc
inc
cmp
fs
jns
jecxz
aad
xor
and
icebp
cs
xor
push
shr
cwde
mov
dec
stc
sbb
push
add
sub
ret
in
(bad)
pop
inc
mov
das
iret
es
pop
sub
mov
or
push
and
shr
push
test
mov
call
arpl
scas
add
ins
mov
aad
mov
or
inc
mov
rcr
lea
push
fst
push
shl
retf
xlat
cs
cdq
cwde
nop
mov
fcom
dec
imul
ss
pop
outs
cli
cs
aaa
ret
adc
xchg
das
sar
xchg
es
sub
sub
dec
bound
jg
ficomp
push
in
jb
push
sbb
sbb
into
ds
dec
nop
mov
int
or
add
xchg
mov
cmps
sub
xchg
xchg
mov
or
and
sbb
inc
push
add
in
lds
xor
add
xor
sbb
and
fsubp
inc
inc
xchg
sti
mov
sbb
mov
and
ds
fisub
pop
and
add
xchg
(bad)
mov
xchg
ret
mov
jle
ror
iret
and
pop
adc
shr
lds
out
jecxz
lea
pop
pushf
fmulp
leave
and
push
mov
test
js
pop
and
xchg
add
jno
stc
xchg
xchg
sub
push
pop
ret
pop
cmps
inc
jmp
enter
(bad)
loopne
sbb
jo
pop
xchg
(bad)
cli
or
cmove
and
sbb
pop
xor
stc
ret
or
dec
push
(bad)
adc
mov
ins
and
fnstcw
es
mov
mov
enter
pop
jl
je
xor
lahf
inc
shr
(bad)
shl
out
fldln2
mov
sub
push
mov
in
xor
pop
mov
sub
ins
xchg
mov
jb
idiv
iret
xchg
or
aam
lods
push
and
movs
dec
mov
pop
shl
xchg
outs
lds
jle
and
push
mov
fisub
and
sbb
scas
sub
mov
mov
inc
pop
add
fwait
sahf
nop
mov
loopne
fadd
cld
pop
in
fistp
sbb
nop
cmps
mov
fistp
mov
sar
pop
cwde
mov
xchg
fsubp
sub
sub
cmps
mov
lds
clc
mov
imul
mov
add
aaa
and
jmp
shl
xchg
and
cdq
adc
frstor
sbb
xor
sahf
inc
inc
fistp
cmps
push
pusha
push
stc
add
pop
hlt
cmp
jne
scas
and
nop
push
mov
mov
inc
mov
fld
dec
lahf
cmp
mov
jmp
cmp
in
scas
mov
rol
dec
xor
and
std
add
xlat
fnstsw
sub
lea
sub
mov
fldcw
and
stc
ror
pop
fnstcw
xor
fistp
jns
dec
lds
(bad)
aam
add
ror
movs
fwait
lods
lods
and
xchg
xchg
xor
and
fnstsw
in
sub
pop
xor
ins
inc
mov
cli
dec
mov
jg
stos
inc
mov
in
ins
js
fwait
in
popa
jbe
cmp
jmp
cdq
push
push
pop
popa
cmp
adc
jmp
aaa
mov
xor
add
mov
sbb
sub
call
inc
mov
jb
jmp
mov
scas
repz
pop
jno
nop
dec
retf
ds
mov
scas
pop
xchg
cmp
or
mov
add
mov
xor
push
cs
cli
out
xchg
arpl
pop
and
repz
arpl
imul
sbb
shr
push
cmp
paddusw
jmp
sbb
sub
mov
add
jp
add
fldln2
cwde
rcr
aad
cmps
nop
test
sub
cwde
into
sbb
in
pop
xchg
sbb
fcom
loopne
jl
sbb
outs
push
mov
and
outs
cmp
mov
pop
jns
out
dec
dec
pop
aas
lods
dec
push
adc
pop
or
addr16
and
pop
sbb
ja
fisub
cmp
cmc
mov
xor
outs
(bad)
fs
out
aam
fs
fsubrp
push
lea
shr
mov
or
in
rcl
mov
and
out
sbb
mov
std
ja
add
leave
imul
xchg
cmps
mov
xor
popf
sbb
adc
in
add
popa
jb
and
add
outs
and
icebp
out
je
and
dec
into
pop
push
pop
(bad)
adc
mov
sbb
mov
or
(bad)
scas
sub
and
es
inc
(bad)
not
std
out
add
push
ins
sbb
push
outs
cmp
je
push
retf
(bad)
in
lds
out
pop
addr16
lods
add
jge
icebp
pop
shl
(bad)
jmp
pusha
fs
inc
inc
sub
jle
out
cdq
mov
sbb
dec
jl
or
loop
cmc
push
ja
pop
std
inc
fadd
pop
jb
scas
inc
sbb
xor
or
mov
bswap
jbe
push
test
pop
ror
cmp
retf
fs
sbb
imul
add
and
das
mov
add
jle
dec
inc
mov
test
pop
enter
out
in
sahf
lea
test
jp
mov
test
popa
xchg
push
das
push
xor
adc
cmp
fs
cdq
je
dec
push
mov
daa
jmp
std
mov
xchg
pop
adc
gs
dec
sub
pop
sub
adc
mov
pushf
push
pop
cmp
stos
shl
lock
or
leave
xor
test
fcom
call
cli
mov
cmp
jecxz
xor
push
lock
test
ss
bound
dec
aad
mov
xchg
(bad)
pop
repnz
xor
and
retf
mov
ins
and
ficom
mov
or
(bad)
fsub
jg
pop
nop
cmps
shl
ins
dec
fdivr
fbstp
gs
hlt
sti
push
sbb
stos
pop
shl
mov
repz
jp
lods
fistp
sbb
enter
js
cmp
mov
xchg
jb
hlt
xor
mov
adc
into
jecxz
inc
push
popa
loop
repz
adc
jp
sar
in
push
add
lds
and
sti
cwde
pop
jge
ins
cmps
sbb
or
sbb
(bad)
push
aaa
int
adc
jmp
nop
mov
xchg
pusha
clc
pusha
in
iret
mov
jns
push
aad
into
pop
repz
sbb
xor
scas
mov
jg
jmp
cmps
xlat
fstp
mov
mov
mov
std
fwait
mov
in
in
sbb
push
push
add
je
shr
push
popf
xchg
out
out
outs
sbb
ret
push
cmp
cli
and
dec
mov
aam
and
cmp
sbb
iret
aaa
in
push
fs
dec
adc
sbb
js
bt
fild
sbb
jo
lock
inc
outs
test
pop
sbb
rol
pop
call
lds
stos
inc
mov
pop
sahf
fist
pop
push
add
in
fisub
or
pop
jge
mov
dec
sahf
mov
scas
ins
retf
and
adc
cmp
ficomp
out
pusha
shl
jg
mov
adc
fisttp
add
std
rol
jbe
ins
fdiv
sub
jb
in
add
push
stos
add
sbb
out
iret
out
fstp
iret
or
fisttp
push
dec
aad
push
dec
(bad)
mov
mov
icebp
sub
sbb
adc
shl
and
jae
dec
fbld
pop
mov
and
inc
(bad)
cmps
dec
fwait
xlat
(bad)
test
lods
xchg
cli
pop
fcmovnbe
adc
and
je
dec
or
dec
ror
lock
cs
ja
ret
fist
movs
(bad)
mov
(bad)
or
dec
xchg
mov
jmp
js
push
push
push
loop
bound
fist
push
xchg
xlat
inc
dec
repz
int
pop
rcr
rol
pop
(bad)
mov
pop
mov
push
aam
xchg
sbb
cmp
sti
mov
cmps
fbld
or
inc
sbb
fild
ficom
mov
(bad)
cli
icebp
lock
leave
mov
jecxz
jecxz
mov
int
pop
fwait
dec
cmps
loope
pop
mov
in
pop
mov
and
jp
ffree
rcr
js
jo
fild
inc
push
loop
mov
or
mov
popa
push
add
arpl
bound
fs
sub
ins
out
in
sbb
cdq
das
pop
loop
pop
cmp
ins
sbb
call
bound
test
ret
cmps
pop
gs
pop
popf
je
mov
shr
sub
sbb
jmp
jno
(bad)
fstp
xchg
aas
xlat
push
add
cmc
adc
fadd
push
cmp
in
pop
scas
push
std
add
cmc
cmp
cld
jnp
pop
sbb
cmps
mov
outs
cmc
sbb
and
or
ror
and
sbb
stos
xchg
sub
cmp
movs
je
pop
aad
or
jo
(bad)
pop
dec
xchg
push
aaa
out
jb
mul
(bad)
sub
ficomp
mov
jne
jge
lahf
leave
das
add
jmp
xchg
cwde
mov
inc
jmp
inc
add
(bad)
scas
cmp
rcr
clc
fistp
shr
add
and
cdq
sbb
jmp
inc
or
add
push
test
adc
mov
sbb
pop
ins
(bad)
lahf
(bad)
mov
addr16
int3
xor
inc
jg
(bad)
push
rol
sbb
jmp
bound
ror
xchg
out
jmp
aam
push
push
and
mov
mov
adc
inc
sar
jmp
lods
xor
jo
fidiv
jbe
mov
fs
push
inc
dec
mov
add
inc
dec
and
jle
pop
mov
lahf
lea
in
mov
sbb
push
pushf
mov
dec
jl
mov
sub
fidivr
adc
cmp
mov
adc
pop
sub
or
or
jo
sti
cmp
xor
leave
mov
jmp
ins
push
shr
and
mov
pop
sub
mov
(bad)
xor
dec
out
std
sbb
rcl
out
(bad)
call
std
mov
sub
fmul
dec
cli
movs
add
lods
and
scas
and
mov
aas
mov
xchg
call
lods
mov
pop
sti
jmp
jecxz
push
xlat
sti
pop
push
sub
retf
mov
cmps
cmp
and
std
mov
and
mov
mov
ficomp
sbb
sub
and
mov
(bad)
mov
pop
sti
out
sub
cwde
xor
test
popfw
in
mov
and
mov
xchg
dec
adc
pop
or
aaa
and
sbb
and
and
ror
xchg
dec
popa
xchg
dec
mov
jne
sub
jno
enter
(bad)
je
daa
push
stos
jge
sbb
xor
out
outs
mov
fsubr
retf
jmp
xor
push
inc
bnd
ds
cmp
into
outs
cdq
jne
mov
jns
fstp
sbb
loope
pop
and
or
cmp
xchg
jge
or
jecxz
xor
call
or
cmps
push
or
sti
dec
push
in
cmp
fcom
xor
and
fisttp
push
sub
test
pop
mov
fxch
sbb
xchg
jmp
xchg
sbb
out
dec
pop
mov
jle
push
(bad)
push
push
sub
jmp
pop
push
dec
popf
ss
cmp
and
sbb
dec
(bad)
mov
add
iret
xchg
mov
jg
cvtdq2ps
fcomi
sahf
add
xchg
or
sti
and
fucom
sbb
pop
add
out
out
retf
movs
and
outs
inc
mov
inc
rcr
loopne
fidivr
lods
and
je
in
add
adc
sub
jmp
in
push
cld
and
add
push
sbb
add
push
icebp
mov
push
(bad)
cmp
iret
lods
pop
adc
into
jb
fcomp
mov
jo
gs
jp
fs
inc
or
cli
jne
sti
(bad)
lods
pop
nop
arpl
sbb
pop
in
mov
cdq
dec
jle
out
out
push
fidiv
ss
or
sub
pop
aaa
data16
popf
jg
mov
ja
popa
push
and
mov
pop
fst
xchg
push
push
sub
test
(bad)
aas
inc
sub
xchg
pop
sub
push
test
out
sub
pop
xor
je
retf
and
cmp
fst
xchg
mov
int3
add
inc
sbb
xor
adc
je
(bad)
jae
cmps
xor
aaa
push
add
lock
scas
push
fsubr
cld
(bad)
fsubr
mov
outs
jl
cwde
jmp
sbb
sub
and
adc
xlat
dec
sbb
mov
outs
clc
pushf
mov
fistp
inc
inc
push
inc
call
xacquire
test
int3
and
lea
leave
imul
add
mov
adc
fldcw
jmp
and
inc
icebp
cmp
not
fld
mov
xchg
xor
mov
rol
add
xor
std
sub
fidivr
faddp
jmp
dec
add
icebp
neg
pushf
mov
mov
sar
daa
cmp
lds
cmp
sbb
in
jl
aaa
or
sti
xchg
test
mov
jmp
ins
cmp
fwait
mov
fdivr
(bad)
out
push
adc
pop
mov
push
fsubr
lods
rcr
aas
retf
ss
push
sti
loope
pop
xchg
pop
mov
pop
retf
add
cmp
out
sbb
xchg
mov
and
test
not
call
sbb
add
or
push
mov
aad
dec
pop
sbb
das
(bad)
cmp
fbld
xor
int
idiv
adc
in
into
jb
or
xchg
or
add
(bad)
sub
ret
sbb
loop
pop
cdq
push
outs
into
not
sbb
mov
aaa
pop
cwde
xchg
sub
push
test
fld
scas
mov
mov
mov
hlt
mov
jle
mul
std
fld
scas
mov
mov
add
jl
or
je
add
mov
cld
cmp
int
xchg
and
loop
ja
aaa
mov
and
(bad)
xchg
rcl
imul
sub
or
jo
adc
and
rcr
adc
dec
push
jae
test
in
ss
sbb
and
jle
fs
pop
out
and
add
into
movs
mov
stc
movs
push
dec
adc
inc
sub
sub
pop
adc
ins
mulps
push
inc
dec
mov
test
pop
push
enter
push
dec
inc
sahf
jmp
mov
gs
sbb
or
xor
inc
inc
test
lods
inc
(bad)
and
sbb
out
cmp
xor
int
out
sbb
jmp
or
mov
cs
out
outs
mov
and
mov
push
xchg
adc
dec
test
pop
and
daa
sub
idiv
je
pop
mov
cmp
fnsave
cmp
in
out
mov
ins
and
jmp
(bad)
pop
retf
pop
ja
popa
clc
rcl
in
rep
adc
in
jb
std
jle
and
pop
mov
mov
pop
sahf
sbb
xor
jecxz
and
aas
leave
sbb
ret
seta
mov
cmp
dec
and
ins
and
shl
arpl
mov
jmp
pop
sahf
movs
sbb
cld
xchg
mov
outs
and
and
xor
mov
mov
nop
ss
adc
add
jne
call
stos
push
sub
dec
rcl
sub
out
sbb
cmp
jae
addr16
fst
retf
mov
pop
ss
mov
mov
lock
inc
fwait
mov
mov
dec
add
retf
mov
xlat
mov
(bad)
retf
pop
repz
(bad)
adc
inc
cwde
sbb
in
sub
mov
call
cwde
pop
out
(bad)
into
pop
sbb
loopne
dec
sbb
inc
outs
jg
adc
push
cmp
push
mov
ret
dec
dec
mov
test
mov
inc
xchg
pushf
iret
test
inc
mov
dec
das
sbb
out
xchg
sbb
sub
cli
cmps
mov
ror
push
mov
jbe
test
mov
stos
gs
aas
(bad)
fistp
imul
loope
mov
imul
out
aam
sub
sbb
push
xchg
cmp
aas
retf
imul
sbb
xchg
add
stos
nop
lods
xor
in
sub
pop
out
xor
sbb
inc
sub
and
jbe
gs
add
inc
ins
push
int3
sahf
ret
popa
cmp
and
dec
xchg
xchg
daa
(bad)
pop
push
clc
aad
mov
add
inc
fst
hlt
fcmovnu
popa
imul
push
repz
sbb
adc
push
test
inc
mov
sub
mov
cmp
scas
cmp
cmp
pop
ret
cmps
and
jns
jl
xchg
test
(bad)
fadd
mov
repz
rol
std
shl
mov
pop
arpl
scas
nop
and
fistp
test
sahf
xchg
int3
into
pop
add
mov
mov
push
push
xchg
jo
(bad)
mov
xor
xchg
sti
sbb
or
lods
or
stc
fldenv
sbb
js
jno
pop
test
jns
out
pusha
push
mov
lds
mov
fisubr
mov
or
aam
push
sbb
std
mov
mov
mov
inc
add
bound
ret
aaa
stc
fnstcw
mov
dec
mov
cmps
in
pusha
xor
cmp
pop
push
icebp
je
mov
or
aam
jmp
ss
and
ret
movs
into
sbb
pop
sub
addr16
ror
aad
jmp
aad
test
mov
add
adc
stc
push
pop
imul
inc
(bad)
jecxz
arpl
xchg
jle
push
pop
xor
dec
jmp
jl
jle
mov
mov
sub
mov
and
push
xchg
mov
add
imul
ffreep
lock
adc
add
fstp
shl
ins
cdq
popa
lock
pop
ror
adc
out
fs
sbb
(bad)
repnz
adc
enter
aam
lods
jmp
das
xchg
in
aad
retf
lds
mov
inc
inc
sub
push
mov
ret
ins
repz
icebp
and
mov
mov
mov
cmp
and
xor
hlt
call
(bad)
xor
jg
ss
jnp
mov
nop
add
sti
in
push
pop
ins
jmp
jb
xor
mov
daa
leave
push
lock
and
nop
pusha
or
inc
jmp
dec
cdq
sbb
sahf
ins
inc
cmp
sti
push
je
stc
sbb
je
sbb
push
pusha
jmp
sbb
xor
sbb
and
jg
ror
push
test
dec
jmp
cmp
cmp
mov
mov
imul
sbb
jns
add
cmps
(bad)
loope
dec
mov
sub
movs
xor
adc
inc
inc
clc
cld
(bad)
js
push
mov
push
push
adc
popf
jb
cmp
loopne
sbb
xor
out
dec
shr
or
shr
xchg
mov
or
fbstp
pusha
mov
sar
mov
mov
add
push
daa
adc
mov
jno
inc
mov
sub
xchg
xor
sub
dec
rol
imul
pop
jl
pop
mov
popf
call
xor
into
cli
sub
push
shl
je
xchg
sbb
jns
out
enter
add
(bad)
push
(bad)
into
pop
(bad)
push
mov
stos
pop
dec
das
cli
cmps
cld
int
sub
jmp
mov
std
dec
(bad)
and
in
dec
shr
pop
test
add
stos
push
lock
and
pop
ja
jnp
out
es
and
les
nop
push
push
jp
or
and
and
inc
cmp
mov
cmc
add
xor
cmps
pop
das
mov
xor
xchg
(bad)
mov
pop
ret
inc
mov
(bad)
adc
xchg
inc
jo
add
and
pop
or
mov
leave
fadd
pushf
sbb
popa
and
push
mov
push
mov
pop
jns
xor
push
iret
sahf
pop
imul
fdiv
lods
popa
jnp
jb
rol
(bad)
fbld
lahf
cmp
push
xor
xchg
cmp
xchg
nop
xor
xor
mov
push
sbb
inc
out
out
mov
dec
aaa
mov
add
jmp
xchg
test
test
scas
sbb
mov
inc
sbb
fsubr
mov
mov
shl
pop
cmps
cli
cdq
ins
and
into
js
push
dec
test
loop
mov
push
je
mov
sub
in
adc
cmp
(bad)
jecxz
jmp
(bad)
std
loopne
call
pop
add
test
adc
in
jp
outs
inc
loope
mov
adc
mov
addr16
js
fsubr
nop
arpl
movs
jle
sbb
sti
jbe
popa
cwde
push
jle
cmps
ins
(bad)
pop
sbb
fmul
push
cdq
js
fisubr
mov
push
lea
add
mov
push
in
jo
mov
xor
push
fisttp
xchg
pusha
pop
imul
sti
aad
sub
jb
xchg
ret
dec
pop
dec
xchg
(bad)
clc
lods
pop
sti
add
sbb
sub
add
jecxz
in
imul
jnp
loope
enter
pop
xor
xor
and
push
arpl
mov
jnp
add
mov
iretw
push
jae
add
xchg
xor
push
sbb
jecxz
push
jle
mov
fistp
mov
sbb
cmp
add
sbb
or
aaa
cmp
and
mov
daa
call
sbb
in
jnp
adc
push
and
pop
pop
adc
and
cmp
inc
and
push
pop
daa
(bad)
pop
retf
into
retf
jno
(bad)
pop
in
sub
dec
imul
inc
retf
mov
cmp
push
frstor
out
rcr
or
daa
loopne
push
pop
dec
cdq
popf
mov
cmp
mov
dec
test
enter
mov
add
cmc
sub
push
aad
or
adc
not
sti
scas
jecxz
jecxz
pop
repnz
xor
stos
ficom
pop
fcomp
cmp
mov
repnz
and
mov
(bad)
frstor
add
out
xlat
in
pop
jbe
pushf
jo
call
pop
pop
jl
mov
cmp
dec
fs
jmp
push
fild
es
pop
(bad)
inc
fcom
mov
cli
adc
xchg
jp
cmp
xchg
rcr
nop
fistp
cmp
sbb
inc
cmp
pop
pop
fdiv
ins
mov
mov
cmp
inc
and
les
data16
and
fild
pop
shl
mov
lods
mov
(bad)
inc
jecxz
fild
jle
xchg
mov
jno
scas
pop
push
inc
out
or
inc
and
loopne
mov
jmp
push
enter
adc
sbb
int3
push
cmp
mov
xchg
scas
ins
ins
stc
ja
sti
jbe
mov
pop
test
cli
sbb
ss
mov
call
in
inc
push
lods
pop
(bad)
push
jmp
fbstp
mov
out
(bad)
ds
mov
ins
cmp
pop
xor
cmp
mov
jmp
pop
mov
adc
pop
pop
xchg
pop
movs
mov
mov
jecxz
pop
or
mov
dec
and
sub
cmp
mov
and
es
push
and
mov
push
movs
out
inc
add
and
fdiv
(bad)
data16
and
fadd
jne
out
jmp
or
xlat
cmps
inc
mov
sar
push
addr16
fnstenv
xchg
out
clc
or
sbb
and
test
pop
cwde
ror
push
fldcw
loop
inc
mov
das
cmp
jge
aas
cmp
popf
pop
ss
jp
mov
int3
pop
push
je
jo
fldcw
shr
dec
jmp
loope
inc
push
call
test
adc
jae
dec
push
shl
jbe
and
add
dec
inc
mov
jecxz
data16
int3
adc
out
(bad)
jl
in
mov
inc
(bad)
scas
(bad)
addr16
dec
ret
test
mov
mov
push
outs
sub
pop
mov
or
je
dec
jge
jge
inc
hlt
cld
fadd
mov
and
push
and
ret
xor
xchg
mov
and
mov
mov
xchg
test
jge
jne
scas
sti
push
sbb
or
adc
pop
jmp
sbb
adc
pop
jo
sti
mov
jecxz
pop
in
cmp
jae
mov
test
lahf
and
enter
(bad)
daa
mov
fidiv
add
outs
mov
shl
push
xor
pop
das
pop
leave
pop
mov
jmp
mov
xor
pusha
shl
xchg
push
rcr
sahf
push
fld
sti
push
and
xor
and
sbb
sub
mov
push
sbb
fwait
mov
jle
dec
icebp
pop
and
test
popf
shl
inc
and
fild
cmp
jb
lock
(bad)
outs
add
popf
jbe
fdivr
mov
mov
fdivr
inc
jae
pop
mov
cmp
mov
movs
jg
sub
push
fadd
(bad)
and
movs
push
shl
cdq
mov
(bad)
jae
and
out
and
icebp
das
pop
es
jo
out
outs
leave
cmp
sbb
adc
and
adc
outs
jp
adc
mov
and
out
aam
inc
clc
lods
ret
sbb
push
mov
mov
mov
out
repnz
(bad)
cli
sub
mov
out
mov
add
lock
in
or
mov
call
xchg
sbb
inc
(bad)
sub
cmps
pop
cld
pop
dec
add
xlat
add
xlat
mov
hlt
es
fistp
pop
pop
cmp
js
cwde
jae
stc
aad
dec
sbb
arpl
sbb
cmp
rcl
cmp
ds
imul
pop
cmps
and
fwait
or
fist
inc
idiv
add
sub
sbb
stos
call
mov
pop
pusha
test
ret
or
xchg
data16
dec
pop
loopne
shl
adc
ins
xor
pop
push
outs
shl
pop
ror
(bad)
mov
sbb
mov
and
mov
ror
movs
popf
inc
or
jb
out
pop
mov
(bad)
mov
ss
mov
mov
inc
out
add
mov
loope
mov
sbb
cmp
fnstcw
fcmovnu
fcmovu
sahf
cwde
cdq
icebp
mov
sub
and
pop
enter
cmp
in
outs
imul
xchg
mov
jle
icebp
jbe
movs
fcom
mov
mov
sbb
sar
cdq
pop
nop
jae
out
icebp
(bad)
mov
xchg
jnp
push
movs
xchg
and
(bad)
inc
xor
add
neg
mov
inc
mov
xor
xchg
icebp
mov
outs
push
pop
add
fcompp
sub
fmul
iret
mov
jmp
stc
adc
mov
(bad)
cmp
jecxz
les
or
ins
fild
xchg
xchg
sbb
out
and
and
sbb
jns
scas
add
xchg
and
mov
jns
cdq
pop
int
neg
mov
loopne
mov
and
das
jns
mov
push
push
xchg
in
call
js
xor
jl
je
les
adc
pop
cmp
and
sbb
daa
mov
add
aam
mov
adc
out
push
pop
mov
repnz
and
add
mov
cmp
out
xchg
adc
aam
add
pop
jecxz
push
mov
lahf
ss
sub
and
(bad)
(bad)
cli
inc
pop
sbb
outs
xor
out
test
rol
outs
mov
nop
aam
cmps
ins
out
jbe
cwde
rcl
sub
outs
fwait
jb
xchg
retf
movs
adc
out
jle
cmc
in
sbb
out
sbb
jg
js
jns
mov
dec
xor
sub
(bad)
pop
div
out
push
pusha
fnstenv
dec
mov
js
in
out
sub
adc
das
repnz
sbb
sbb
js
je
sbb
mov
sbb
add
jp
fisub
adc
jnp
aam
dec
fs
and
hlt
jo
jb
and
xchg
and
xchg
test
pop
cmp
jecxz
add
cld
mov
inc
inc
jmp
cdq
xchg
dec
pop
cmc
in
xor
sahf
pop
adc
fisub
push
add
add
jl
mov
xchg
pop
or
sub
lahf
das
sbb
rcr
in
(bad)
call
sahf
xlat
jnp
xor
cld
stos
inc
rcl
adc
xor
out
or
pop
push
sbb
adc
push
xchg
pop
push
ins
neg
jecxz
cli
jbe
sbb
mov
(bad)
xchg
mov
cmp
mov
fisub
imul
rcr
mov
push
icebp
and
(bad)
pop
mov
jmp
std
jp
fwait
stc
lea
xor
and
jnp
mov
call
in
lods
ficomp
sbb
in
and
popa
(bad)
mov
int3
arpl
dec
shl
aam
add
or
fst
mul
aad
jle
xchg
jae
ins
pop
or
sbb
adc
stos
pop
or
arpl
and
push
pop
pop
mov
cmp
and
mov
rcl
cs
xor
sub
outs
fsubrp
inc
cld
cmp
adc
push
ja
ins
xchg
inc
jmp
xchg
pop
mov
sbb
sti
pop
(bad)
push
jecxz
inc
xchg
or
dec
sub
sbb
pop
inc
inc
xor
test
nop
pusha
inc
jo
mov
lahf
sub
scas
sbb
cmp
xlat
pushf
pop
add
sbb
inc
pop
jo
iret
dec
test
jbe
int3
sub
sti
xchg
xor
iret
mov
push
and
iret
xchg
jmp
or
and
jp
mov
outs
test
mov
and
call
stc
icebp
mov
cmp
cmp
repnz
leave
cmps
xchg
in
mov
mov
popa
repnz
fdivr
or
cmp
cmp
imul
out
inc
inc
inc
sbb
mov
js
hlt
pop
sub
mov
lds
fs
mov
mov
push
jecxz
sbb
pushf
scas
xlat
cld
addr16
mov
jl
mov
in
imul
cmp
es
cmp
pop
adc
retf
jnp
stos
scas
lea
mov
sub
push
push
(bad)
mov
fs
pop
push
sbb
dec
xchg
pusha
xchg
push
in
sbb
mov
adc
add
or
jnp
imul
in
sti
mov
cmp
lahf
nop
std
jg
xchg
(bad)
clc
iret
mov
jmp
xchg
mov
ins
sti
mov
dec
sbb
lock
retf
xchg
aaa
or
jns
mov
je
cmps
push
sbb
and
sub
lahf
mov
shl
mov
add
rcr
sub
mov
mov
ftst
sub
dec
mov
je
cwde
arpl
sub
jle
cmps
mov
xchg
jae
and
push
xchg
(bad)
ss
hlt
mov
pop
(bad)
stos
mov
or
sbb
leave
cmp
mov
inc
nop
rol
push
pushf
mov
pop
push
and
add
jecxz
cmp
outs
call
sub
in
mov
call
andnps
pushf
and
aam
jmp
leave
nop
(bad)
adc
cmps
mov
mov
adc
iret
jne
std
push
fisubr
repnz
aam
mov
push
inc
add
adc
or
mov
mov
fbld
mov
push
jecxz
sti
pop
push
(bad)
out
movs
pop
(bad)
fimul
(bad)
and
pop
iret
sub
(bad)
je
jl
push
test
jmp
rol
sbb
fistp
stc
into
in
hlt
fbstp
int
jl
adc
pushf
leave
jle
or
mov
inc
imul
aaa
sti
xlat
mov
pop
add
pop
or
pop
jl
nop
fstp
test
mov
dec
sti
sbb
and
jecxz
xchg
inc
sub
iret
cli
jge
lahf
shr
arpl
dec
adc
cmp
outs
xor
fwait
push
fstp
sbb
in
das
cmp
mov
scas
outs
ret
fsubp
add
cmp
pop
dec
push
aam
and
adc
mov
inc
or
mov
nop
or
je
sub
mov
mov
cmps
cmp
pop
scas
fisttp
mov
jo
mov
add
shl
inc
sub
dec
test
(bad)
cmps
mov
in
addr16
jg
jmp
repnz
pop
jmp
xor
test
adc
pop
xchg
mov
and
sbb
inc
mov
cs
xchg
or
inc
mov
push
push
mov
and
adc
pop
outs
cdq
js
inc
sahf
(bad)
cmp
scas
push
jl
xchg
movs
cmp
addr16
cmps
fcmovbe
sbb
pop
lfence
cld
into
mov
and
cmps
scas
dec
loopne
(bad)
shl
popf
mov
jmp
inc
aaa
mov
adc
or
outs
data16
fisub
mov
mov
sbb
sub
push
or
lods
in
dec
dec
jecxz
pop
aaa
outs
int3
cmp
push
jecxz
or
jbe
or
ret
je
retf
fistp
jns
fcomi
adc
xchg
aam
jae
int
push
mov
lock
jbe
xor
ja
movs
push
sbb
sub
xor
fsubrp
call
mov
push
xor
push
int3
cdq
pop
clc
jecxz
jecxz
jnp
xchg
int
ror
movs
jbe
xchg
dec
lods
push
fucomi
bound
ins
mov
or
jns
addr16
or
(bad)
mov
jmp
jmp
fisttp
gs
jnp
(bad)
in
or
daa
outs
adc
outs
ficomp
fcmovnbe
fdivr
(bad)
dec
mul
jecxz
adc
mov
cwde
dec
xor
sti
push
inc
xor
pop
add
pop
scas
popa
fist
imul
data16
fcmovne
jecxz
adc
arpl
cld
inc
je
and
jbe
les
mov
(bad)
(bad)
mov
mov
leave
dec
fstp
ds
mov
outs
fcomi
bnd
retf
xchg
mov
sbb
icebp
sub
cli
mov
xchg
inc
xchg
fucomi
imul
or
(bad)
cmc
jmp
xchg
int
push
cmps
fstp
jb
(bad)
aam
or
sub
aaa
jns
push
push
pop
fstp
std
inc
scas
fcmovnb
mov
push
movs
fisttp
dec
inc
(bad)
int
rcr
jmp
xchg
add
fcomi
out
mov
dec
pop
fcmovnb
hlt
inc
xor
add
std
fstp
jmp
cld
and
ficomp
clc
neg
xchg
(bad)
dec
inc
mov
mov
sbb
aad
pop
in
cmps
icebp
inc
fucomi
(bad)
mov
inc
fild
mov
lds
test
xor
out
das
jmp
(bad)
aaa
sete
xchg
push
test
fistp
lock
call
add
jl
fmul
stos
add
or
dec
cdq
int3
(bad)
mov
ret
push
jne
jecxz
adc
or
push
push
jns
fimul
fiadd
sbb
mov
adc
mov
push
out
xchg
fild
fadd
ret
dec
scas
sub
cmp
push
aas
(bad)
xchg
shld
and
mov
cwde
ret
popa
or
pop
jle
jne
(bad)
fstp
or
in
push
loop
inc
loopne
mov
dec
inc
fcomp
pop
jae
push
sub
imul
xchg
test
aas
mov
adc
imul
iret
sub
cmp
cmp
cwde
dec
fst
mov
js
pop
mov
jecxz
test
in
dec
pop
mov
cwde
and
(bad)
enter
sbb
xlat
shl
mov
inc
fs
fsub
sbb
and
mov
xor
or
fadd
outs
push
xor
or
fstp
inc
cli
mov
call
lods
dec
mov
mov
xchg
jbe
and
ins
push
rol
inc
ins
cmp
mov
stc
mov
nop
arpl
inc
imul
pop
pop
mov
inc
imul
stos
(bad)
fwait
and
sub
sbb
shl
jmp
xor
dec
ins
fist
mov
cmps
fild
clc
and
fcomi
or
push
idiv
push
sahf
add
cmc
loope
popa
jecxz
mov
mov
add
ds
hlt
fstp
add
jecxz
ds
out
hlt
sub
sbb
fistp
pop
adc
and
cmp
pusha
xlat
adc
pop
lods
mov
fwait
jg
repz
push
sahf
inc
scas
pop
call
dec
push
xor
movs
cmp
fbstp
fld
cmp
cmp
push
mov
loopne
mov
cmp
cli
or
sub
sub
gs
cmps
bound
push
fisttp
and
scas
jo
xor
fcomp
out
jl
in
mov
dec
or
sbb
shl
lahf
leave
push
test
sbb
jge
mov
push
xchg
test
mov
int3
fisttp
call
repz
out
cdq
or
lahf
xchg
sbb
loope
loopne
in
push
(bad)
adc
push
and
adc
fisttp
aaa
mov
cwde
imul
dec
cs
outs
push
icebp
sub
(bad)
fucomi
and
fcmovnbe
xchg
cmp
push
scas
scas
jle
sbb
mov
pop
je
sar
adc
mov
rcr
das
loop
fcomi
sub
mov
mov
pop
and
fistp
dec
mov
fist
push
shr
fstp
fdiv
popf
enter
or
test
inc
fstp
mov
bound
and
imul
stc
aaa
dec
lods
sub
lahf
in
dec
out
cwde
pop
out
or
mov
dec
pop
in
stos
xchg
fsub
or
and
lahf
lods
xchg
add
imul
inc
ficom
push
fneni(8087
movs
into
sar
fisubr
mov
cmp
(bad)
dec
(bad)
cli
fstp
xchg
pop
(bad)
cmc
(bad)
loope
cdq
fist
pop
and
jl
scas
or
fisttp
cmps
ja
outs
call
add
(bad)
jbe
in
push
xchg
inc
fistp
mov
sar
mov
cdq
mov
(bad)
and
sti
adc
add
fstp
in
xchg
xor
push
sub
xor
push
or
xchg
xor
ja
jb
int3
ins
xlat
out
movs
mov
fndisi(8087
lock
lods
std
in
jno
cs
fstp
mov
push
xchg
enter
(bad)
(bad)
iret
and
xchg
mov
xor
sbb
xchg
push
cwde
ror
fadd
pop
pop
xchg
pop
push
mov
out
xchg
push
pop
dec
test
mov
retf
push
pop
repz
mov
scas
or
cmp
and
fs
cmp
xor
ficomp
imul
ss
jg
xchg
sbb
(bad)
retf
dec
aad
int
dec
cmps
ins
std
call
fld
cmp
fcmovnb
or
dec
outs
sub
pop
xchg
push
movs
lahf
fst
dec
fld
xor
sahf
pop
lods
imul
mov
call
aam
or
int3
mov
(bad)
mov
test
or
loopne
jnp
adc
mov
jp
mov
dec
xlat
dec
outs
fcmovnb
fnsave
pop
(bad)
pop
div
jge
enter
cs
mov
and
stos
cmps
cmp
xchg
out
dec
int3
leave
fild
add
adc
push
sub
sbb
pop
and
cmp
popa
aad
fstp
sbb
pop
mov
jb
rcl
pusha
sti
sbb
pop
ret
sub
jl
xchg
add
fistp
xchg
(bad)
leave
in
jns
jecxz
clc
push
fistp
and
add
mov
mov
scas
aad
outs
pop
mov
xchg
repnz
dec
jl
lahf
(bad)
xchg
ret
repnz
lahf
repz
sbb
adc
(bad)
dec
inc
xor
fcmovnbe
push
jecxz
lods
ss
mov
or
xchg
sub
(bad)
sub
repz
and
mov
push
nop
fxch
adc
repz
arpl
mov
pop
mov
push
and
adc
pushf
mov
stc
jecxz
outs
pop
xchg
push
dec
fsub
fcomp
xor
xchg
int
sub
push
or
xor
(bad)
jmp
cdq
mov
call
pusha
or
and
out
jecxz
shl
je
mov
cli
fisttp
mov
push
shr
jnp
cmps
pushf
push
fld
jbe
movs
and
pop
repz
movs
retf
scas
mov
cmps
pop
mov
popf
mov
inc
jns
ffreep
mov
idiv
or
out
(bad)
loope
fnstsw
dec
les
aam
fbstp
jno
iret
adc
pop
xor
fninit
inc
dec
rcl
fist
sbb
retf
fild
lds
shr
mov
addr16
test
(bad)
mov
shl
test
adc
stc
dec
retf
mov
mov
dec
fild
inc
popa
jmp
test
(bad)
or
data16
jb
jp
cmp
xchg
dec
mov
mov
lahf
stc
jl
loope
fcmovnbe
icebp
ja
in
inc
cmp
and
mov
fld
mov
mov
dec
jecxz
dec
and
or
dec
xchg
lods
xchg
fild
js
(bad)
fisttp
je
sahf
call
add
imul
cld
mov
fnstenv
push
idiv
jecxz
fist
sub
setb
and
fisttp
mov
and
jp
mov
xchg
(bad)
aaa
cdq
es
xor
out
sub
push
xchg
cmc
or
or
in
cmp
xlat
cwde
(bad)
retf
fild
adc
inc
fidiv
(bad)
icebp
iret
rcr
imul
jns
xchg
fstp
mov
jecxz
sahf
(bad)
xchg
add
adc
cmp
repz
fstp
mov
cmp
pop
xor
cdq
jnp
cwde
(bad)
(bad)
mov
or
xchg
aad
xchg
push
je
and
and
shl
inc
cwde
ss
mov
fild
xlat
popf
fcmovnbe
fdiv
dec
push
fst
std
(bad)
imul
shr
mov
addr16
lea
fisttp
cmp
fcomi
sbb
and
inc
mov
iret
push
or
fisub
or
outs
ins
mov
xchg
sbb
push
add
inc
or
ds
cmp
fisttp
xchg
xchg
in
sbb
cld
fistp
pand
js
ds
jp
sahf
push
(bad)
fld
pop
dec
aas
sbb
jmp
xchg
rcl
push
call
jecxz
popa
js
ret
cli
push
xor
mov
jmp
jo
jae
xor
xchg
cs
bound
push
pavgw
mov
add
(bad)
clc
mov
push
jne
push
push
enter
push
das
cmp
jns
mov
inc
in
mov
jp
xor
call
pop
stos
cld
fimul
outs
pop
cmp
xor
fcmovu
pop
fist
aam
stos
fisttp
mov
jmp
je
pop
xor
cwde
adc
fwait
ja
out
push
fisttp
and
sbb
cmps
jnp
inc
sti
les
adc
fstp
lea
fadd
outs
add
dec
mov
push
out
add
lods
ficom
iret
add
cs
xchg
fld
sub
fcmovnbe
jp
pusha
adc
dec
dec
xchg
out
loope
pop
push
fisub
inc
xchg
xlat
into
mov
jl
ret
xor
fbld
ins
jmp
test
xchg
pop
or
pop
push
(bad)
ror
lds
mov
addr16
inc
arpl
add
pop
fimul
xchg
sbb
(bad)
dec
aam
push
mov
or
dec
(bad)
and
into
daa
jmp
call
ret
dec
loopne
pop
jl
icebp
dec
and
(bad)
fstp
pusha
sbb
and
dec
pop
std
xchg
push
push
sbb
mov
fwait
sar
ds
cwde
rcr
ror
and
jle
push
daa
xor
mov
mov
outs
mov
cmp
cmp
(bad)
call
mov
mov
bound
movs
mov
mov
bound
hlt
and
icebp
sti
adc
retf
fbld
add
clc
outs
sub
stos
or
xchg
and
outs
(bad)
fcomp
ins
dec
clc
aam
sar
fstp
dec
xor
and
(bad)
xor
(bad)
pop
(bad)
mov
push
and
jne
gs
ret
outs
int
adc
ins
jno
or
ret
fstp
sahf
add
sub
sahf
jmp
shr
jecxz
pop
movs
and
sub
inc
sub
fbstp
fsubr
xor
shl
sbb
cmc
inc
mov
xor
xlat
inc
mov
adc
in
imul
xchg
fld
inc
mov
nop
loop
sub
push
je
mov
xchg
lods
fidiv
cmp
mov
and
loopne
pusha
idiv
xchg
adc
push
push
js
add
leave
data16
fmul
imul
inc
cmp
or
fld
lar
cmp
fidiv
je
adc
not
mov
adc
pop
or
out
js
sbb
adc
xchg
add
pop
out
mov
fdivr
sbb
arpl
nop
jnp
sub
pop
mov
xor
shl
leave
add
mov
sbb
test
in
sti
jbe
jbe
mov
push
mov
rol
jg
cld
mov
xor
mov
mov
sbb
data16
cmp
pop
xor
shr
sbb
xchg
in
push
jmp
mov
and
(bad)
in
neg
mov
push
adc
and
xchg
mov
push
push
pop
(bad)
push
xor
inc
loopne
outs
pop
retf
xchg
pushf
sbb
rol
dec
aaa
fimul
mov
inc
jmp
(bad)
and
(bad)
and
jle
push
sahf
mov
popf
xchg
fwait
shl
sbb
add
ret
in
and
ret
cli
out
ret
ja
ins
fisttp
cwde
in
xor
inc
ror
jmp
out
test
push
mov
sbb
jecxz
jl
pop
pop
int3
jmp
bound
inc
pop
inc
pop
fld
inc
xchg
dec
icebp
dec
ins
lods
popf
loope
jmp
fmulp
pop
stc
inc
in
dec
xchg
xor
sahf
fisttp
pop
mov
jae
jmp
fistp
cld
(bad)
out
rcr
sub
push
jbe
retf
in
and
push
clc
gs
pop
xchg
fistp
pushf
call
or
adc
add
mov
and
add
cld
cwde
cmp
pushf
add
jmp
inc
mov
sahf
pop
shl
mov
pop
xchg
ins
and
and
adc
cwde
dec
ss
fistp
jns
fdiv
add
mov
pop
lock
and
out
aaa
shr
or
aam
ins
cld
loope
aad
push
pop
jbe
mov
jg
into
cs
cmp
jmp
out
test
adc
xchg
sbb
cmp
or
sub
or
out
pop
sub
outs
shr
sub
sbb
aaa
frstor
out
add
jecxz
jbe
test
movs
loope
xchg
test
jbe
ss
mov
add
adc
test
cmp
and
jmp
sub
sbb
std
xchg
and
pop
adc
mov
shr
mov
xor
cmc
mov
pop
and
fild
mov
fnsave
add
jmp
adc
push
pop
in
xchg
mov
out
push
(bad)
add
xchg
outs
sbb
mov
ja
mov
add
sbb
arpl
xchg
sub
mov
imul
nop
call
(bad)
adc
js
arpl
mov
and
sub
cmp
and
mov
add
icebp
jecxz
xor
xor
rcl
(bad)
jns
sbb
xchg
dec
mov
aas
(bad)
dec
dec
jl
(bad)
fcom
movs
sbb
pop
jbe
and
dec
add
fldcw
sbb
pushf
fimul
cmp
fxch
inc
sub
bound
inc
inc
xor
outs
xor
ja
iret
push
push
pop
mov
les
cmc
mov
repnz
cld
jg
fist
out
add
clc
sub
adc
fld
loopne
xchg
neg
call
mov
ficom
pushf
fimul
in
or
pusha
adc
es
int3
sbb
jge
add
dec
lds
jecxz
adc
outs
and
pop
jl
push
cmp
mov
stos
pop
jns
imul
mov
xchg
(bad)
stos
inc
nop
pop
out
pop
and
retf
test
mov
add
sub
test
fwait
cdq
mov
pop
mov
jmp
or
sub
mov
cmp
and
int3
enter
fsubr
movs
(bad)
pop
pop
cmp
dec
push
jle
mov
rol
addr16
and
cld
sbb
add
inc
cpuid
fiadd
sbb
add
mov
mov
add
mov
jmp
xchg
cmp
rcr
pop
jle
adc
xchg
push
jb
iret
cwde
pop
or
neg
and
xor
and
fcom
stos
movs
jmp
pop
call
ret
imul
ss
ins
outs
mov
aam
pop
movs
and
cs
xchg
adc
lock
cmp
or
ret
mov
bound
sbb
pop
adc
loope
loop
dec
or
movs
mov
sbb
or
test
cmp
iret
aas
aas
push
mov
add
mov
mov
pop
arpl
mov
call
cld
pop
or
movs
xchg
outs
xor
xchg
das
iret
adc
sbb
movs
xor
fistp
repnz
cmps
add
lea
xor
sbb
sbb
call
repnz
lea
mov
jge
cmp
repnz
sub
and
sti
jne
pop
or
mov
cmp
sub
add
xor
push
push
lock
inc
gs
inc
adc
fwait
add
push
nop
fnstcw
adc
push
in
xor
jno
and
push
int3
add
pushf
dec
inc
pop
addr16
pop
cwde
sbb
jmp
mov
push
mov
and
test
jbe
mov
out
xchg
rcl
mov
loope
in
jle
int3
ins
fisttp
and
cmp
jae
inc
and
xlat
imul
add
ja
call
in
jnp
out
mov
mov
cwde
sti
xchg
cmps
sbb
xor
stos
sub
dec
sub
sbb
addr16
je
add
cmp
in
lods
mov
fwait
sub
jo
pop
loop
xchg
xor
cmps
cmp
pop
fcmovbe
mov
arpl
sbb
stos
(bad)
je
mov
mov
add
and
fs
mov
inc
(bad)
push
jle
fucomip
mov
les
call
cli
push
cmp
inc
jae
cmp
aas
std
rcl
push
ins
xorps
and
inc
sub
icebp
sbb
push
and
pushf
pop
ds
lods
xchg
and
test
aam
rcr
cmp
jl
rcr
(bad)
sbb
xchg
and
je
pmaxsw
call
pop
jbe
cwde
mov
push
inc
jecxz
or
mul
mov
sar
inc
sti
shr
pop
cmps
fs
cli
sub
push
sbb
sti
inc
mov
jns
xchg
xchg
fcomp
daa
sahf
cmp
call
cmp
not
aam
jmp
pop
and
sub
xchg
fsub
pop
ficomp
cld
xchg
aad
add
cs
adc
stc
rcr
or
or
xlat
push
jp
in
stos
sub
xchg
pop
mov
outs
and
and
adc
add
jae
push
pop
mov
ins
sahf
sti
xchg
rol
mov
xor
add
out
scas
mov
pop
stos
xor
sahf
mov
xchg
mov
pop
dec
fldenv
out
lea
imul
sti
mov
sub
sub
mov
pop
jae
or
sbb
push
call
pop
fild
cli
mov
mov
out
enter
fsubp
pop
pusha
cmp
ins
fidiv
xor
gs
movs
iret
stc
adc
push
mov
xor
in
mov
push
mov
pop
rcr
(bad)
pop
xor
jge
mov
add
(bad)
stc
jae
and
jmp
bound
jmp
adc
mov
xor
mov
inc
pop
lods
cwde
mov
outs
std
fild
mov
ret
jo
mov
test
mov
jmp
and
into
(bad)
outs
and
and
mov
outs
sbb
adc
mov
push
aad
fldcw
outs
xchg
add
shr
add
inc
imul
test
leave
inc
mov
cs
mov
xlat
cmp
add
shr
and
sti
xchg
mov
and
jmp
fdivrp
xor
push
mov
enter
js
lods
push
call
push
je
xor
cld
pop
jnp
inc
pop
sub
fadd
push
inc
in
cli
push
mov
outs
add
std
arpl
jno
enter
test
push
(bad)
xor
fwait
(bad)
xchg
mov
(bad)
jecxz
mov
jmp
aas
ror
out
and
push
sub
and
sar
lds
clc
repz
and
std
sbb
add
sahf
sbb
ss
mov
lds
into
out
fisttp
or
arpl
lods
(bad)
out
ins
add
sbb
fiadd
adc
fstp
cmp
jge
adc
stos
xchg
out
in
adc
sbb
cmp
mov
sbb
sub
sub
jp
je
mov
ds
(bad)
inc
into
cmp
in
adc
xchg
std
cs
and
movs
inc
(bad)
into
jbe
xchg
sbb
push
push
push
or
cwde
aam
inc
out
push
(bad)
pushf
pop
lock
inc
enter
mov
ins
pop
push
cmp
and
cld
mov
call
xor
lock
hlt
inc
rol
pop
push
(bad)
mov
push
fst
cmp
scas
in
jnp
fnstsw
adc
or
dec
repz
inc
cs
mov
inc
sbb
push
ds
lods
inc
mov
xchg
aaa
scas
fwait
into
ret
add
mov
inc
mov
pop
jle
lods
lea
adc
xchg
pushf
mov
lea
movs
sbb
dec
or
and
mov
fsub
(bad)
mov
mov
sub
pusha
out
sub
xlat
loop
mov
xor
ins
aam
sub
mov
and
das
retf
ins
and
sub
addr16
(bad)
cmp
mov
sub
mov
retf
ret
scas
pushf
and
iret
mov
pop
mov
(bad)
ror
test
repnz
mov
jo
sbb
sbb
or
or
inc
in
push
and
gs
dec
adc
pop
adc
mov
pop
movs
aam
ret
sub
push
jmp
push
dec
xor
sub
push
(bad)
fsubr
arpl
ins
xchg
xchg
loopne
test
fld
adc
xlat
mov
and
loop
dec
fst
cld
xchg
push
inc
mov
sbb
xchg
jecxz
pusha
mov
sbb
repz
aaa
sar
fsub
lock
lods
(bad)
push
fild
adc
xchg
sti
fbstp
fistp
sbb
mov
sbb
sub
lods
mov
clc
dec
push
in
ficomp
lock
dec
js
pop
int
jb
cdq
jne
test
xchg
jmp
pop
or
imul
es
or
jl
xor
popa
adc
ret
sub
push
mov
aad
(bad)
dec
jge
mov
lods
pop
or
pop
push
or
inc
cmp
add
or
cmp
cwde
xchg
mov
jp
mov
or
(bad)
out
(bad)
and
fcomp
fsubr
test
add
inc
push
sbb
and
fnstcw
scas
sbb
aaa
imul
xor
jbe
lods
cmp
retf
daa
dec
call
mov
cmp
pop
pop
cmps
dec
pusha
loope
jge
pop
lods
cmp
add
and
dec
xchg
fcomp
sbb
jmp
fdiv
enter
jge
push
ins
adc
das
neg
in
test
je
add
cmp
ficomp
push
mov
mov
mov
test
jecxz
or
sub
scas
xor
and
mov
inc
rcr
sbb
scas
adc
sub
jle
and
sbb
leave
push
pop
push
pop
mov
push
jae
test
sbb
and
repz
xor
nop
iret
outs
pop
aam
push
sbb
mov
sub
icebp
out
scas
sti
cld
add
mov
ss
mov
fisttp
fld
cmps
dec
or
inc
fidiv
add
(bad)
xlat
pop
aad
jmp
call
push
cli
inc
fldcw
test
int3
fldcw
jb
inc
(bad)
out
sti
xor
mov
pop
inc
fnsetpm(287
cs
xchg
aam
and
repz
mov
xchg
push
mov
xchg
cmp
stc
push
clc
inc
aaa
push
mov
mov
sub
bound
inc
and
xchg
push
call
add
jmp
and
pop
sbb
in
push
pop
or
adc
and
mov
sbb
lods
xor
inc
add
loope
sub
movs
outs
cmp
fimul
xchg
out
push
jl
(bad)
mov
out
fadd
bound
aam
shl
out
cmp
int
mov
pusha
and
and
adc
jl
xchg
js
push
jo
mov
add
or
mov
ror
mov
imul
lods
lods
ss
jle
(bad)
in
inc
leave
arpl
jge
pop
xor
or
retf
outs
sbb
xabort
pop
xchg
daa
test
(bad)
pushf
lods
adc
in
leave
jmp
pop
and
das
cmps
sbb
jle
xchg
sub
mov
enter
dec
add
mov
xchg
lock
xchg
(bad)
retf
test
and
int
push
and
push
adc
lods
jg
stos
out
mov
mov
imul
sub
inc
jge
mov
fadd
mov
pop
jo
pushf
ds
pop
push
adc
mov
pusha
jo
cmp
xchg
add
cmp
xchg
(bad)
mov
pop
iret
xchg
cmp
cmps
sub
and
sub
adc
xchg
cld
sahf
dec
jmp
call
jle
movs
repz
in
stc
jb
dec
dec
pop
jmp
mov
pop
mov
stos
stos
cli
xor
mov
mov
scas
jo
repz
adc
test
out
xchg
dec
push
push
clc
pop
jmp
(bad)
arpl
ja
mov
dec
test
inc
inc
mov
xor
mov
ficomp
mov
or
aad
sbb
test
out
ret
and
clc
sub
jg
push
jno
jno
fistp
push
pop
sti
loopne
sbb
sahf
inc
adc
xchg
mov
cwde
cdq
dec
stc
std
or
jmp
sbb
mov
stos
(bad)
and
les
cmp
popa
das
hlt
cmp
lea
popa
sub
aaa
jmp
(bad)
push
cmps
or
ja
jnp
dec
add
aaa
xlat
mov
mov
pop
cdq
push
or
fistp
jae
push
cwde
push
cld
sub
ds
outs
(bad)
stc
test
mov
fst
loop
xchg
mov
jp
std
jge
leave
icebp
and
cwde
ret
stc
push
pushf
dec
mov
jno
test
dec
int3
xor
and
sub
mov
imul
std
fwait
push
into
push
imul
add
and
add
pop
in
and
xchg
pop
sbb
push
inc
stos
xlat
jge
lods
aam
(bad)
pop
push
mov
push
mov
ret
pop
cmps
fwait
mov
add
mov
rcr
fdiv
ins
scas
mov
or
jl
sub
pop
inc
jo
mul
fwait
aas
pop
aaa
xor
and
shl
scas
xor
int
or
aad
clc
outs
daa
ficomp
pop
sti
add
das
popa
mov
stos
pop
lods
mov
test
outs
sub
jnp
mov
xor
push
dec
sub
out
jle
mov
in
movs
fwait
dec
(bad)
fsqrt
inc
cmp
pushf
push
cmp
fisttp
test
push
sub
mov
clc
sti
jl
les
cmp
movs
loop
pop
test
push
and
imul
cmc
sbb
cmp
cmp
add
shl
jns
leave
ins
retf
test
pusha
xor
inc
ss
fs
mov
leave
es
xchg
xlat
popf
sub
jge
mov
add
mov
push
mov
mov
xor
loope
mov
rcr
push
lahf
out
add
aas
dec
sub
leave
retf
sub
out
mov
jne
xchg
xchg
test
(bad)
or
push
sbb
fiadd
xor
jbe
mov
push
arpl
push
sbb
es
sub
pop
cmp
and
mov
jge
xor
adc
pop
sub
movs
and
adc
(bad)
xchg
stc
mov
pop
pop
popf
faddp
sub
fwait
mov
jle
fist
sbb
cmp
bound
pop
or
mov
ss
fsub
mov
pop
shl
mov
push
lods
jmp
sub
scas
add
loop
cmp
(bad)
sbb
or
xchg
and
(bad)
add
jmp
in
xchg
aas
fsubr
xor
adc
(bad)
sbb
adc
cmp
sbb
push
lock
stc
mov
push
mov
inc
inc
mov
dec
fisub
jae
mul
xor
cwde
and
cdq
jo
retf
push
ins
jg
sbb
(bad)
ins
add
out
(bad)
push
(bad)
mov
stos
test
lock
push
jne
(bad)
sbb
mov
jnp
jge
push
repz
or
fwait
mov
push
xchg
cmp
sbb
and
dec
shl
mov
cdq
mov
dec
add
std
pop
pusha
imul
arpl
push
sbb
mov
cmp
fucomi
les
xchg
xchg
dec
outs
fxch
cmp
retf
fld
and
add
adc
test
call
ds
hlt
(bad)
(bad)
push
jne
xchg
push
fcmovnb
xor
fld
imul
or
mov
(bad)
fild
cli
dec
mov
add
(bad)
pop
shr
movs
jbe
mov
lods
or
pop
sub
cmps
xchg
or
ss
jo
(bad)
or
mov
jmp
dec
jmp
sbb
push
dec
xor
ja
xor
pop
sub
mov
mov
xchg
shl
inc
jns
mov
mov
jo
cmps
push
in
outs
xor
fbstp
jp
sbb
iret
push
sahf
std
retf
icebp
ret
and
cmps
pop
mov
loope
jne
jmp
stos
in
cmp
(bad)
cwde
sbb
mov
pop
fcmovnbe
retf
push
mov
pop
fidivr
push
mov
inc
scas
adc
pop
les
mov
(bad)
cdq
inc
xchg
repz
add
aam
xor
fnstcw
stos
aam
imul
mov
adc
repz
out
fist
ins
jg
cmp
fisttp
inc
mov
mov
dec
adc
push
adc
sti
in
rcr
cdq
in
sahf
cmp
loop
sub
mov
adc
addr16
adc
lods
fsubr
jbe
and
or
and
leave
pop
xlat
pop
mov
(bad)
mov
inc
sbb
push
test
mov
rcl
xchg
and
dec
fstp
stos
add
js
loope
mov
ret
ficom
(bad)
jae
mov
fcmovnu
sbb
loop
mov
jno
popa
mov
cli
imul
jp
clc
or
inc
push
fisttp
add
cmp
jle
sti
jmp
jg
movs
mov
xchg
lahf
out
fstp
xor
xor
rcr
and
dec
stos
fcmovne
test
ja
pop
sbb
mov
mov
dec
enter
(bad)
cmps
movs
lods
ja
cmp
retf
jne
mov
rcl
sbb
dec
les
inc
fisttp
mov
sahf
bound
inc
pop
rcr
outs
sub
aad
sbb
jecxz
mov
fucomp
popf
inc
jnp
fpatan
repz
sub
jae
dec
scas
addr16
(bad)
add
pop
clc
xchg
sahf
mov
pop
aad
mov
inc
cmp
jecxz
jl
sbb
(bad)
fistp
idiv
loope
adc
sbb
mov
or
(bad)
gs
fadd
pop
cld
xchg
dec
test
psubsb
lds
(bad)
inc
mov
sub
mov
or
push
bnd
cmp
arpl
(bad)
das
fild
shr
xor
mov
xor
and
scas
mov
(bad)
sahf
ficom
int3
xchg
popa
lahf
fnstenv
clc
outs
test
(bad)
adc
cmp
pop
sahf
imul
xor
je
cmc
fld
aam
pop
fistp
cmp
pop
mov
jo
inc
es
fcmovnb
xchg
adc
pop
jle
xor
scas
int
or
pop
sub
fucomi
pop
icebp
xlat
mov
sub
je
mov
fist
mov
bound
out
mov
fbld
cmp
fild
bound
fmul
int3
(bad)
repz
push
cmc
in
push
loopne
ja
mov
std
or
xor
mov
and
xor
dec
sub
leave
mov
push
callw
adc
fild
dec
test
xor
mov
out
push
call
push
jmp
dec
xor
fstp
mov
pop
popa
pushf
loopne
jne
fcomp
mov
cmp
out
test
inc
push
(bad)
frstor
xchg
ja
dec
fs
out
add
fstp
jo
inc
retf
push
mov
push
cmp
fcmovu
push
inc
mov
mov
fcmovne
or
mov
jmp
xchg
jae
pop
shr
punpcklbw
add
sbb
aas
aam
pop
ins
pop
mov
fld
mov
push
(bad)
push
or
fadd
or
mov
movs
inc
add
les
test
(bad)
cdq
aad
repnz
les
adc
mov
movs
ja
pop
xlat
fld
fistp
popa
xor
and
xchg
mov
sbb
das
mov
sub
mov
or
retf
pop
adc
aas
inc
adc
mov
fisub
jge
or
aad
fiadd
int
out
sbb
dec
adc
sub
or
fld
xchg
fild
adc
(bad)
cmp
(bad)
call
mov
inc
mov
cmp
add
fisubr
pop
xchg
add
ins
dec
pop
mov
xchg
out
jno
fisttp
adc
int3
movs
jmp
aaa
rcr
fistp
add
push
nop
sti
loope
cmp
cld
mov
cmps
mov
inc
and
cmps
ror
arpl
push
fist
cmp
std
mov
(bad)
pop
mov
test
xor
cli
push
iret
adc
mov
push
in
loop
sub
jmp
ret
fist
sti
mov
movs
out
fdiv
fsubp
mov
les
test
jecxz
frstor
fcom
pop
pushf
mov
add
mov
jecxz
(bad)
cmp
mov
mov
jmp
sub
pushf
loop
and
cmp
movs
push
in
ret
add
mov
mov
lea
bound
xchg
fldcw
push
jmp
xor
mov
jno
jmp
sar
or
jbe
fistp
frstor
pop
adc
mov
cmps
ss
or
loope
xor
cmp
sti
mov
in
jp
sub
push
pop
lods
movs
xchg
and
sbb
fist
fild
mov
or
dec
fld
in
inc
add
push
adc
and
cmp
fdivr
fstp
pop
or
push
fsub
jb
inc
xchg
add
in
mov
sub
ret
add
mov
xchg
cld
cmp
popf
retf
inc
test
(bad)
and
fnstcw
(bad)
push
push
cmps
addr16
imul
leave
xchg
xchg
pop
mov
(bad)
aam
outs
adc
mov
mov
xor
icebp
sbb
or
xchg
fild
cmps
jecxz
ja
fld
test
fninit
jp
in
sub
inc
fistp
pushf
test
dec
push
daa
adc
std
in
imul
push
fstp
mov
and
mov
pop
xor
scas
mov
enter
inc
inc
jne
fwait
mov
aas
add
stos
adc
(bad)
dec
mov
xchg
loop
pusha
cmp
dec
xchg
pop
sbb
(bad)
leave
das
lock
cwde
loope
push
xchg
std
and
add
fistp
fucomi
arpl
pusha
dec
out
fild
repnz
stos
(bad)
aas
push
mov
adc
sbb
adc
int3
cmp
(bad)
jnp
add
ret
hlt
aam
retf
fist
mov
fbld
sbb
pop
inc
cli
je
fistp
retf
jmp
inc
add
jl
sub
(bad)
mov
jg
mov
push
fld
fsub
fstp
aam
out
xchg
inc
adc
mov
lock
hlt
fidiv
repz
jecxz
mov
or
sbb
inc
fistp
out
push
(bad)
not
mov
ins
(bad)
adc
test
push
mov
adc
aaa
jp
add
add
sar
movs
jecxz
pop
jmp
hlt
daa
xlat
je
sub
test
jecxz
mov
call
mov
push
xor
retw
in
sbb
ins
outs
mov
mov
daa
adc
call
xor
xor
mov
cmp
pop
outs
pop
mov
bound
cmc
leave
adc
jae
xor
test
pushf
adc
inc
lods
or
ins
mov
mov
mov
pop
icebp
shl
pop
pop
mov
jge
and
jns
sbb
repnz
xchg
scas
in
fstp
xchg
push
ins
pop
or
test
loope
mov
mov
repz
gs
repz
pop
aam
pop
jnp
retf
inc
inc
ins
jmp
inc
push
(bad)
mov
pop
and
cdq
inc
inc
popf
mov
adc
lods
outs
cwde
shl
mov
dec
pop
arpl
or
mov
jge
add
mov
xchg
jnp
dec
jge
call
jns
and
loope
pop
mov
ss
or
pop
sbb
fsubr
push
or
std
cmps
jl
fs
test
or
mov
clc
push
push
fcmovnu
add
pop
stos
jge
mov
sti
out
mov
sbb
ds
push
mov
sub
jmp
and
les
sti
pop
or
jbe
or
jns
jle
add
pop
std
xor
xor
cmps
out
sti
pop
mov
xchg
sbb
sub
inc
sbb
xchg
pop
push
xor
call
popa
loop
cmp
cld
outs
sbb
retf
jno
add
mov
mov
shl
rcl
add
dec
ret
jae
scas
sbb
cmp
sahf
cmp
adc
pop
jecxz
out
sar
and
inc
fidivr
outs
push
mov
stos
shl
push
xchg
out
rcl
sahf
cmps
cmp
jg
xor
pop
jmp
fistp
xor
into
pop
pop
shl
ror
push
add
pop
dec
jmp
scas
cmp
jmp
mov
mov
xchg
shl
fcom
ds
inc
cdq
out
pop
gs
add
adc
push
add
std
adc
scas
cwde
dec
rcr
push
push
icebp
fnsave
bound
(bad)
es
cmps
bound
jl
lock
cwde
lods
in
scas
jle
dec
or
inc
adc
mov
xchg
push
mov
mov
and
(bad)
inc
push
sti
mov
(bad)
pop
add
xchg
dec
shr
shr
ins
fisubr
push
shl
and
in
cs
das
inc
add
sbb
dec
test
mov
fist
icebp
test
dec
test
in
lock
push
mov
dec
and
cmc
neg
push
mov
inc
fistp
mov
cs
sub
cmp
stc
out
xchg
sbb
and
mov
lahf
and
sub
rcr
jmp
jg
mov
fwait
loope
retf
iret
pop
jo
ds
test
mov
dec
je
cmp
mov
dec
sub
add
ins
(bad)
loop
push
mov
push
jno
in
aas
shl
mov
out
pop
(bad)
lods
in
rol
lds
test
lds
xor
inc
pop
sbb
scas
pop
pusha
sar
(bad)
push
mov
and
enter
inc
sbb
pop
jnp
fldcw
cs
xor
mov
cmp
fnstsw
inc
xchg
leave
aas
(bad)
or
(bad)
fistp
mov
jo
xor
sbb
fld
jg
fnstsw
and
rcr
xchg
mov
push
iret
fld
pminub
inc
cld
mov
pushf
fcomp
inc
cdq
mov
pushf
outs
(bad)
fcomp
cmp
mov
call
mov
outs
fcomp
adc
pushf
xchg
pop
and
pop
(bad)
jecxz
push
int
adc
sti
sbb
or
fistp
outs
cwde
mov
xor
loopne
jge
xchg
fiadd
ror
fsub
mov
pop
mov
push
adc
dec
aad
(bad)
repnz
adc
outs
and
sbb
fisub
test
mov
fimul
sub
sbb
push
pop
push
cmp
mov
ds
out
retf
jbe
pusha
sbb
pop
cld
scas
fucomip
hlt
(bad)
or
add
pop
loope
and
and
mov
push
in
fild
fs
loopne
popa
xor
ror
dec
bnd
dec
(bad)
jae
(bad)
test
(bad)
ja
shr
sub
add
jne
jecxz
inc
push
lods
push
xor
and
jae
cmp
cmc
dec
push
inc
add
dec
mov
sub
outs
cmp
add
push
mov
mov
lods
bound
pushf
sbb
popf
ins
stc
mov
add
gs
shr
xor
pop
inc
cmp
pop
mov
push
pop
pop
or
fnsetpm(287
imul
das
pop
and
sahf
adc
xchg
or
mov
pusha
dec
cmp
mov
jb
sar
cmp
call
ss
stos
imul
dec
jecxz
mov
xchg
sub
repz
mov
or
adc
push
pop
xchg
mov
pusha
mov
adc
sbb
sbb
call
add
(bad)
mov
nop
pop
aaa
(bad)
std
cmc
fsub
int
shl
loope
out
jbe
sbb
cmp
test
sbb
mov
inc
pushf
sub
xchg
push
sbb
jb
sbb
adc
and
out
or
push
sbb
ror
and
inc
scas
clc
mov
xor
sbb
outs
ins
rcr
and
push
jmp
repz
arpl
xor
fisub
int3
(bad)
mov
sti
test
fs
adc
out
jl
sub
shr
inc
xor
mov
cmp
jns
mov
and
mov
sbb
stc
(bad)
and
add
sbb
mov
fisub
cmp
pop
inc
fstp
push
fnstcw
test
aaa
sub
mov
add
add
add
xchg
sub
xlat
test
mov
not
js
jbe
ins
in
xchg
imul
rol
sub
jl
pop
xchg
push
pop
adc
int
mov
sbb
out
cs
xchg
fistp
sbb
gs
pop
in
idiv
sub
loop
jg
cmp
cmp
xor
xor
mov
std
xor
lods
sbb
cmp
nop
cmps
add
les
push
sbb
repz
enter
cmp
xchg
mov
(bad)
fadd
inc
cmp
or
icebp
sahf
das
and
loopne
and
gs
bound
sbb
cmp
mov
dec
and
pop
add
pop
sbb
or
cld
push
inc
cdq
inc
adc
loopne
popa
push
xor
and
jecxz
jne
inc
jae
hlt
dec
ds
xchg
jmp
cs
jmp
jno
dec
add
add
test
in
retf
rol
das
mov
mov
imul
scas
inc
test
pushf
and
add
(bad)
js
push
jno
sbb
mov
jmp
sti
and
pusha
xchg
adc
adc
cmp
mov
pop
cmps
cmp
push
xor
pop
sbb
jbe
inc
ret
sbb
lods
inc
popa
mov
cmp
pop
popa
cmps
add
movs
inc
sbb
rcl
and
ret
xchg
jl
mov
or
push
add
push
xchg
nop
aas
call
xchg
push
and
inc
sahf
lods
outs
add
xchg
out
pusha
pop
ds
cs
jl
call
mov
mov
mov
fyl2xp1
hlt
(bad)
jmp
pop
sbb
fwait
(bad)
add
adc
sbb
sbb
fst
pushf
adc
sub
mov
call
pop
jl
sti
fbstp
js
sbb
ja
stc
rcr
push
mov
sti
pop
repnz
or
xor
inc
and
lods
push
and
cmp
add
fucomp
or
mov
pop
sbb
mov
cs
xchg
push
mov
aam
cmp
pop
outs
xlat
loope
(bad)
sub
(bad)
cmp
fs
call
pop
ss
ins
inc
xor
adc
fstp
pop
in
in
data16
add
daa
pop
inc
test
or
mov
cdq
or
mov
fmul
jg
callw
sbb
push
and
jecxz
test
sbb
pusha
popf
jmp
pop
hlt
xor
stos
mov
mov
pop
fucom
sbb
ins
shl
repz
jl
inc
js
data16
push
je
popf
iret
por
pop
push
pusha
inc
sti
mov
xchg
fmul
cwde
je
and
(bad)
outs
adc
add
adc
push
jmp
lds
adc
sbb
movzx
add
test
push
out
pop
adc
cdq
xor
xchg
mov
xchg
sub
and
in
fstp
jecxz
mov
mov
loope
stc
mov
cmp
sub
test
or
bound
(bad)
cmps
pop
sti
pop
ds
int3
jge
test
cli
test
(bad)
dec
add
shl
jne
test
mov
add
les
xchg
mov
std
cmps
sub
fld
push
inc
fcomp
leave
js
inc
nop
bound
pop
push
mov
js
xor
jle
sbb
stc
adc
xor
bound
jmp
arpl
add
je
mov
out
jmp
and
sbb
dec
jbe
cs
mov
ins
test
pop
fild
imul
mov
cwde
lods
in
call
or
fs
jae
dec
sbb
jecxz
repnz
popf
ins
stos
sti
and
xlat
pop
jae
mov
pop
mov
sbb
mov
(bad)
xchg
loopne
sbb
shl
mov
call
int
sbb
pop
pop
dec
inc
(bad)
rol
mov
fsubr
test
or
add
fnsave
jl
sub
xor
mov
fidivr
icebp
ss
jnp
and
popa
out
sbb
div
fbld
cmps
test
fistp
inc
pop
add
xor
lock
pop
sti
and
cmp
mov
fcomp
pop
shr
pop
xlat
(bad)
clc
mov
mov
mov
push
mov
dec
lahf
and
(bad)
outs
ror
scas
imul
sub
push
ret
adc
jge
je
iret
(bad)
pop
test
aaa
xlat
clc
mov
add
and
sub
pop
xor
gs
add
sbb
jno
jae
sbb
cmp
mov
and
cld
(bad)
imul
jns
pop
ins
or
adc
xchg
in
cli
out
sbb
ins
and
mov
mov
push
bound
push
xor
shr
jae
and
cs
and
sub
(bad)
ins
or
add
cmp
into
xchg
mov
sahf
je
(bad)
jmp
aaa
cmp
dec
cli
and
sbb
pop
fild
out
sbb
(bad)
cmc
(bad)
pop
xor
push
push
into
(bad)
xor
fdiv
dec
sahf
inc
stc
inc
(bad)
push
fadd
mov
mov
in
xor
adc
push
call
lock
adc
xor
aad
cli
mov
cmp
(bad)
std
push
loope
rcl
repz
sbb
retf
mov
xchg
ja
inc
mov
stos
lods
inc
mov
cld
fnstenv
cmps
jae
push
cmp
shr
ret
jmp
mov
je
add
call
mov
out
fadd
call
mov
and
repnz
inc
xor
cmp
push
out
shl
test
xchg
cld
std
sbb
xchg
cmp
ror
pop
aas
pushf
pushf
and
scas
lods
daa
pusha
cdq
add
clc
(bad)
es
call
fidivr
test
sub
fs
sbb
push
xor
nop
jmp
loop
or
inc
fs
adc
jno
sub
mov
je
jp
repz
adc
out
add
inc
(bad)
fist
mov
sti
push
shr
mov
sub
test
neg
mov
enter
(bad)
lea
sub
jle
push
pop
cmp
dec
xchg
fsub
das
inc
jmp
mov
or
xchg
lds
add
test
push
xchg
retf
mov
(bad)
inc
scas
sbb
mov
bound
cld
cmp
addr16
icebp
stos
fucomi
clc
lahf
sub
repz
jne
enter
inc
cmp
lds
pusha
xor
nop
mov
dec
inc
(bad)
dec
mov
in
sub
xchg
rcr
inc
push
mul
add
imul
cmps
in
inc
cmps
cli
pop
fwait
dec
(bad)
jle
mov
mov
fwait
mov
arpl
push
jecxz
xchg
cmp
add
ror
push
fistp
xchg
jne
mov
daa
lods
fcmovnb
fnstsw
jecxz
int3
imul
push
dec
fwait
mov
icebp
jmp
mov
pop
push
jge
std
fld
aas
push
fstp
outs
outs
push
fsub
inc
fst
ss
lahf
fucomi
stc
cmp
fstp
je
imul
sbb
mov
add
mov
push
dec
int
nop
imul
(bad)
int3
mov
mov
ror
sbb
push
pop
mov
into
std
or
xchg
fild
push
adc
sbb
adc
ror
fld
into
(bad)
adc
loop
dec
fcmovnb
xchg
jnp
aam
push
sbb
fnsetpm(287
xacquire
mov
jmp
pop
and
enter
sbb
ds
inc
pop
call
cld
pop
mov
cmp
aaa
outs
sub
loop
or
push
push
add
or
sti
inc
fld1
jmp
pop
shl
fisttp
mov
iret
jmp
cmp
dec
(bad)
sbb
pop
push
jecxz
or
mov
and
cmp
push
mov
retf
movs
call
and
movs
jecxz
pop
mov
xchg
loopne
mov
fstp
fxtract
stc
jno
or
ds
imul
adc
dec
xchg
call
call
repz
retf
popf
std
lods
mov
cdq
push
(bad)
repz
add
pop
add
(bad)
dec
(bad)
dec
pop
pop
push
pop
fnclex
sub
div
jmp
icebp
mov
jg
dec
ins
push
and
call
dec
push
ror
sahf
dec
fadd
mov
xchg
inc
adc
mov
imul
push
inc
jecxz
xchg
pop
jmp
mov
fstp
adc
sub
jmp
mov
jae
arpl
sti
or
sub
fstp
loop
cmc
fcmovnb
and
jg
idiv
xchg
jo
sahf
push
ffree
daa
xlat
int
mov
or
fild
into
push
dec
aam
sahf
xchg
cwde
jecxz
scas
sub
outs
(bad)
ror
scas
inc
call
mov
adc
push
out
or
int
jae
xor
fisttp
or
sahf
sbb
stc
iret
fistp
dec
(bad)
mov
lea
pop
cld
mov
fidivr
and
mov
add
xchg
test
inc
int3
adc
mov
out
and
adc
es
fucomi
adc
data16
xor
movs
arpl
push
dec
je
mov
inc
(bad)
not
ret
mov
cld
fistp
xor
sub
out
stos
fldcw
lock
int3
aaa
cmp
(bad)
frstor
ja
fild
mov
stos
fcmovnbe
push
sub
je
into
xchg
sub
mov
aad
ins
and
(bad)
or
push
dec
inc
jnp
ficomp
mov
ret
sar
sti
sar
sbb
cmp
mov
loopne
outs
xchg
dec
jecxz
call
retf
mov
enter
sub
fucomi
ins
out
adc
xchg
lock
dec
mov
fcmovu
push
jbe
xor
stos
sbb
repz
adc
adc
mov
fist
jne
cmc
add
jmp
jmp
(bad)
clc
ss
pop
movzx
test
sti
mov
mov
repz
imul
fcmovnb
mov
add
sbb
pop
jmp
sub
inc
jle
rcl
aam
or
inc
rcl
push
inc
repz
bound
sbb
pop
fcmovbe
mov
adc
int
jmp
pop
mov
dec
pusha
mov
inc
shl
iret
(bad)
loop
ins
popf
scas
into
mov
inc
sti
pop
scas
sub
loopne
in
cwde
cmp
xor
fild
mov
mov
ds
sbb
fcomp
dec
cmps
sbb
sbb
pop
cmp
dec
inc
fld
push
sub
fstp
push
inc
call
adc
(bad)
mov
or
sub
(bad)
pusha
adc
fcomi
add
jp
outs
ins
inc
fld
add
scas
dec
fcmovbe
jo
lea
cdq
lods
imul
xor
xchg
add
mov
mov
imul
xchg
cmp
fstp
pop
jo
xchg
mov
aam
aaa
mov
xchg
jecxz
jno
sbb
mov
fdivp
mov
into
repz
mov
cmp
and
ror
fcmovne
mov
mov
fild
shl
add
fld
add
data16
iret
in
lods
fmul
pop
cwde
(bad)
push
dec
cmp
or
xchg
aam
xchg
repz
fstp
xchg
adc
mov
cdq
inc
jns
(bad)
sub
retf
fisttp
jg
xchg
dec
or
mov
fucomi
je
push
adc
dec
push
and
mov
pop
xor
xchg
int
inc
pop
add
sub
or
cmp
cli
cdq
jg
rep
mov
jne
sbb
iret
sub
mov
xchg
dec
push
jb
or
js
data16
adc
sbb
mov
xchg
xor
pop
pop
sbb
fcomp
sbb
(bad)
fimul
hlt
test
sub
or
xor
fild
jae
std
mov
sbb
scas
retf
ins
data16
mov
cmp
out
test
pop
lock
dec
mov
xchg
scas
(bad)
std
(bad)
cmp
fcmovnu
ds
aas
xchg
xchg
in
mov
cmp
cli
dec
pop
(bad)
fadd
fild
cmps
add
ds
push
xchg
fdiv
in
sar
mov
aad
xchg
push
or
xchg
pushf
xchg
(bad)
xchg
push
in
lds
adc
push
ret
fsub
fs
fist
cmp
jmp
push
dec
or
inc
cmps
add
fsub
xor
inc
daa
cmc
add
f2xm1
push
imul
mov
loopne
mov
int
add
cdq
neg
push
in
ret
fbld
cmp
fisttp
pop
sbb
and
fstp
aas
retf
or
sbb
in
or
fcmovnu
push
jo
mov
mov
ins
jae
ficomp
fild
retf
daa
add
push
cli
rcr
rcl
es
(bad)
sbb
jecxz
stos
or
mov
xchg
loop
xchg
mov
mov
fld
retf
loope
lods
adc
mov
ja
sbb
fucomi
fdivp
mov
xor
jecxz
loop
cmps
outs
inc
repnz
fcmovnu
push
push
inc
test
pop
xor
call
cwde
xor
fcmovnu
add
mov
or
sub
movs
inc
xor
mov
sbb
jg
ror
mov
mov
fld
inc
push
sub
xchg
and
call
pop
in
mov
stos
jmp
push
or
in
dec
inc
sbb
jl
out
test
dec
xchg
arpl
mov
push
xor
sbb
jns
cmp
outs
mov
jecxz
push
dec
ret
rcr
cmp
call
leave
ins
ret
stos
or
out
jp
fwait
shl
mov
mov
sbb
pop
sub
and
mov
sbb
std
mov
add
lahf
and
jb
push
cmps
add
sub
adc
pop
mov
cmc
sbb
mov
(bad)
push
jne
icebp
retf
add
aas
mov
cmp
out
sub
mov
jge
gs
sbb
xchg
sub
and
jl
jg
mov
(bad)
sbb
pop
out
mov
jecxz
data16
push
jne
mul
add
movs
rcr
pop
dec
sub
pop
mov
lahf
sbb
inc
mov
sub
dec
sti
ja
rcr
adc
push
jmp
inc
jne
push
aam
pop
jbe
(bad)
movs
int
xor
add
or
(bad)
into
adc
imul
mov
sub
jge
mov
sub
sbb
add
stc
pusha
scas
inc
dec
in
sub
stos
ror
pop
and
std
mov
sahf
iret
cmps
iret
scas
lock
jle
pop
xor
lahf
test
jne
stos
jle
xor
out
jbe
int
(bad)
pop
inc
mov
xchg
icebp
and
jbe
ret
mov
add
fsubr
inc
adc
jg
jecxz
sub
push
in
popa
test
xor
add
fwait
(bad)
out
fist
fwait
mov
xor
inc
movs
mov
add
and
sbb
mov
cs
jmp
xor
cdq
in
sub
in
add
jo
xchg
cli
xchg
or
adc
and
or
xchg
lahf
cmp
in
iret
ret
aas
int
mov
mov
xor
test
sub
call
xchg
pop
fisub
call
fstp
popa
mov
arpl
pop
rcr
(bad)
out
loopne
(bad)
pop
push
imul
dec
jne
and
movs
sar
stc
dec
loopne
jmp
ror
cmps
mov
push
loope
pop
repz
sbb
cs
inc
pop
test
test
cwde
push
and
sub
pushf
jge
pop
shr
sahf
adc
or
repnz
jl
ror
mov
in
addr16
je
hlt
out
and
call
call
aaa
xchg
lods
jno
xchg
(bad)
xor
nop
dec
cmps
jl
stc
in
ds
pushf
adc
fbld
sub
xchg
jb
fisttp
add
jnp
daa
xchg
xor
sub
inc
(bad)
or
xor
gs
xchg
pushf
jle
rol
inc
aaa
in
pop
pop
inc
out
out
fnstcw
into
cs
jnp
shr
mov
mov
pop
xlat
mov
aam
xchg
in
sbb
xor
test
stc
sahf
sbb
mov
jecxz
xchg
and
lea
lods
mov
popa
xchg
(bad)
xchg
xor
(bad)
and
inc
xor
pop
div
and
test
(bad)
pop
jl
jl
adc
fidiv
popa
stos
jp
int
mov
ret
sbb
popa
mov
outs
cmp
rol
in
push
gs
inc
xchg
ins
push
in
xor
push
adc
adc
test
inc
cli
mov
add
std
out
jle
and
pop
in
xor
xor
fs
push
or
pop
xchg
mov
pop
adc
mov
in
outs
(bad)
sbb
aam
scas
push
nop
into
push
add
(bad)
shl
adc
dec
or
ins
inc
inc
cmp
mov
sbb
jmp
ins
scas
or
mov
(bad)
jo
mov
pop
pop
lock
xchg
hlt
stos
mov
addr16
sub
es
(bad)
mov
repz
cdq
xchg
pop
xchg
push
push
cmp
and
nop
xchg
ror
sti
jbe
pop
icebp
ret
js
pop
or
inc
sub
mov
cmps
add
fidivr
dec
jmp
mov
cmc
and
retf
ss
fidivr
aas
and
add
call
out
add
cwde
cmp
push
rol
iret
nop
xor
xchg
dec
cld
or
mov
xchg
lahf
pop
or
ret
cmp
rcr
je
pop
mov
cli
push
hlt
movs
jo
loop
and
xchg
fidiv
cmc
xchg
in
lock
jecxz
cs
mov
(bad)
cdq
mov
cmps
lods
rcr
jge
jno
sti
push
and
cwde
jl
sbb
jbe
inc
(bad)
loope
ret
inc
sbb
test
pushf
jno
push
enter
rcr
in
aam
dec
mov
cmp
inc
mov
xlat
lock
into
push
mov
push
xor
xchg
fdivr
xor
clc
cmps
mov
push
add
shl
into
add
jp
out
add
push
and
dec
pop
popf
into
add
sub
xor
into
stos
mov
cmp
mov
jmp
and
cmp
pop
clc
mov
test
dec
scas
xchg
(bad)
std
or
mov
dec
ret
and
in
sbb
dec
add
pop
or
dec
xchg
jge
push
clc
ins
mov
sbb
cld
sub
imul
mov
sub
mov
and
xchg
push
addr16
ins
fst
mov
push
fcomp
and
mov
mov
xor
jns
cmp
mov
mov
lds
ficom
dec
jne
fidivr
fcom
pop
es
cmp
outs
sbb
push
cwde
pop
pop
je
dec
push
mov
and
xchg
jl
nop
jg
xchg
leave
test
pushf
xor
out
fwait
data16
sub
out
cli
mov
not
xchg
call
rol
shl
out
or
dec
and
(bad)
pop
push
or
dec
out
inc
lea
leave
and
pop
or
arpl
and
cmp
inc
sbb
scas
jg
into
(bad)
sbb
dec
out
or
ret
data16
xor
(bad)
lock
xchg
in
sbb
mov
xor
xor
push
aam
adc
jns
xor
popa
test
pop
push
cmps
clc
dec
pop
add
fsub
pop
pop
ins
or
and
out
daa
and
sbb
inc
add
mov
or
scas
pop
nop
dec
cld
fcomp
inc
(bad)
pop
dec
or
sbb
cmp
mov
and
xor
adc
push
ss
ds
ja
aas
scas
and
sub
inc
cmp
cmp
out
jge
dec
xchg
cmp
fcmovne
repz
push
and
je
xlat
add
push
mov
xor
push
scas
(bad)
and
mov
xchg
lahf
daa
rcr
gs
cmps
pop
mov
pop
add
push
push
aad
or
test
sbb
mov
sti
adc
stos
in
sbb
outs
aam
and
mov
push
test
scas
mov
or
nop
cmp
jb
adc
scas
in
pop
xchg
test
mov
out
rcl
and
out
jecxz
loopne
nop
jecxz
jp
in
sub
aaa
jbe
xor
push
and
xchg
rol
gs
(bad)
jns
mov
add
cdq
scas
arpl
pop
sbb
mov
ins
(bad)
ret
aam
dec
std
imul
lods
hlt
or
clc
nop
pop
je
movs
fcomp
inc
add
imul
adc
xchg
mov
pop
into
and
mov
sub
fsub
adc
mov
idiv
test
sub
mov
adc
cmp
gs
(bad)
push
adc
xlat
mov
fdiv
(bad)
out
push
fild
adc
xor
rol
dec
sub
(bad)
aam
xor
js
into
fist
xlat
or
jecxz
adc
sbb
inc
test
jmp
lahf
nop
fcmovnb
ds
mov
and
mov
call
fist
das
add
adc
or
fstp
cli
dec
pop
push
fist
xchg
dec
rcr
jg
xor
jo
or
(bad)
outs
mov
fld
jb
push
rcl
mov
pop
xchg
int
aad
aam
bound
push
or
mov
and
xchg
fild
adc
sub
ds
(bad)
sbb
jg
hlt
mov
out
adc
inc
sub
pop
mov
(bad)
dec
ins
dec
mov
fst
xchg
push
std
(bad)
stc
dec
fstp
leave
int3
ins
dec
and
fsub
pusha
in
or
gs
repz
push
mov
sbb
retf
fbld
scas
scas
stc
leave
jnp
ja
imul
jns
fwait
out
aam
loopne
fisttp
sbb
sub
sysenter
sub
push
and
div
mov
xor
out
xchg
movs
dec
jne
aas
clc
fnstcw
nop
adc
daa
pusha
mov
dec
lods
push
fisttp
cmp
cmps
lods
ja
fild
(bad)
jae
dec
sbb
lahf
mov
cld
es
repz
fimul
xor
icebp
(bad)
fcmovnu
add
add
cmps
jno
(bad)
ss
(bad)
aad
(bad)
call
cdq
xchg
repz
mov
hlt
add
mov
fs
sbb
les
das
xchg
fcmovnbe
push
xchg
dec
and
jnp
fwait
adc
bound
sbb
outs
(bad)
jp
repz
add
out
mov
cmp
cld
mov
fistp
es
daa
cmp
imul
cld
cwde
push
stc
jl
fld
scas
shl
cmp
jmp
hlt
mov
dec
fcmovne
sbb
push
or
add
fucomi
pop
(bad)
ins
xor
and
fisttp
xor
test
pushf
arpl
stos
cmp
and
retf
(bad)
sbb
and
mov
fcmovnu
nop
xchg
xor
jb
jle
int
aaa
cdq
cmp
ja
sbb
test
jo
inc
lds
jno
sti
sbb
(bad)
and
or
jp
xchg
jecxz
shl
fbld
sbb
fld
sbb
int3
xchg
jmp
mov
adc
int3
cs
out
(bad)
sahf
jno
xor
mov
inc
jp
test
loope
push
sub
mov
inc
mov
or
dec
aaa
push
dec
sbb
cmps
jo
jge
(bad)
jns
movs
mov
pop
lock
aam
xchg
inc
xchg
xchg
loope
movs
out
cwde
adc
jne
or
jg
push
fstp
add
pop
repz
mov
imul
cmp
inc
imul
stos
inc
jle
pop
and
pop
idiv
movs
mov
mov
aaa
fisub
ins
push
fisttp
cmp
dec
ret
sub
int
and
hlt
push
(bad)
push
aam
fsubr
or
push
cld
test
push
repnz
fistp
dec
pop
inc
test
(bad)
fdiv
sub
and
adc
adc
xchg
ret
ds
pop
mov
in
pop
call
fcmovnu
not
aaa
inc
out
in
(bad)
jne
int
outs
jo
ret
add
xor
cmps
aas
fild
push
mov
stc
mov
mov
jo
sbb
fistp
adc
std
xor
mov
inc
cmps
or
mov
mov
sti
out
sbb
aad
pop
lahf
pop
out
mov
rcr
and
addr16
ret
jecxz
fcmovnb
push
sar
xchg
mov
adc
adc
movs
pop
test
pop
jnp
mov
xlat
inc
add
shr
or
sar
fistp
jb
aad
lods
xor
call
dec
fld
push
test
push
mov
jbe
pop
scas
xor
cdq
mov
sub
fld
jb
xchg
and
dec
ficom
cli
jle
mov
mov
add
xchg
dec
push
sub
sti
and
mov
sub
cmp
fist
lock
sub
fucomi
xchg
es
(bad)
fcmovbe
fild
cmp
(bad)
xor
into
fndisi(8087
push
jp
adc
leave
(bad)
mov
retf
push
fstp
fistp
pop
fwait
add
leave
jmp
mov
fidivr
xchg
pusha
ins
xor
(bad)
jl
cmps
lahf
mov
leave
imul
xor
ds
mov
imul
xchg
add
aas
push
sub
(bad)
and
pop
push
lods
push
jne
xchg
movs
ds
lods
fadd
(bad)
in
jnp
adc
das
mov
in
xchg
adc
jg
out
mov
dec
js
cli
jne
adc
xchg
cmp
add
test
das
inc
dec
shl
outs
and
cmp
imul
fstp
sbb
and
les
pop
mov
pusha
adc
pop
dec
into
call
adc
cmp
es
rol
fsub
ficom
ins
(bad)
fsubp
imul
(bad)
mov
rcr
push
ret
jno
movs
fs
jl
cli
xor
sbb
push
rcl
nop
xor
mov
jae
push
dec
ins
loopne
fist
pusha
sub
xchg
nop
and
cmp
mov
sbb
sbb
pop
jl
pop
mov
inc
sub
pop
in
mov
in
add
and
add
sub
cwde
call
fisubr
imul
pop
push
sti
sbb
aaa
popf
ret
gs
clc
retf
retf
sbb
dec
dec
shl
mov
sub
xchg
je
and
leave
push
add
mov
adc
stc
mov
xchg
or
outs
xor
fsubr
jbe
add
lods
fcomi
or
jnp
mov
and
dec
xchg
test
aas
push
pop
loope
dec
retf
xchg
add
and
push
jecxz
fisttp
in
sub
and
jo
shr
xchg
add
fwait
cmp
mov
dec
push
mov
mov
and
xor
dec
shr
dec
and
fsubrp
cmp
fadd
and
sbb
or
cmp
movs
and
dec
outs
push
xor
xchg
data16
or
sbb
cmp
push
mov
(bad)
or
in
lods
push
cld
outs
in
nop
gs
aad
mov
loope
out
sub
sbb
neg
in
icebp
xlat
adc
imul
(bad)
ja
test
int
jno
mov
nop
leave
push
fcmovu
ret
or
xchg
mov
out
push
jns
pushf
and
repnz
inc
mov
sub
xor
mov
mov
push
jp
adc
loopne
stos
pop
jecxz
mov
push
adc
dec
icebp
jne
imul
imul
mov
mov
mov
rol
sahf
ins
cdq
inc
pushf
dec
in
and
sub
mov
mov
push
ret
cmc
push
iret
test
imul
mov
add
cli
(bad)
retf
adc
pop
lock
jo
pop
jae
outs
mov
dec
dec
xor
mov
push
dec
adc
ret
pop
jmp
out
jmp
std
jnp
mov
pop
sbb
xchg
mov
in
jno
adc
iret
dec
test
inc
jbe
scas
out
test
fnstenv
push
push
or
jg
add
clc
popf
outs
cwde
add
cli
add
aam
retf
pop
(bad)
push
mov
nop
xchg
loop
fcom
mov
mov
(bad)
pushf
jle
cwde
jmp
retf
ret
mov
mov
and
dec
and
push
cdq
dec
sub
xchg
jo
jb
pop
loopne
pop
pop
push
pop
sar
imul
(bad)
in
jle
mov
clc
inc
pop
mov
and
into
push
mul
cdq
and
dec
mov
xchg
adc
cmp
jbe
out
lods
fcomp
aad
aas
sbb
inc
xchg
aad
(bad)
push
or
dec
mov
inc
rcl
ficom
sbb
adc
adc
rcl
and
sub
xchg
sahf
call
popa
call
mov
bound
sbb
cmp
mov
adc
in
addr16
pop
push
cmp
addr16
xor
and
mov
ja
in
inc
jmp
lea
cmps
aad
xlat
adc
sub
adc
hlt
pop
jg
inc
cmp
pop
ret
jge
adc
push
(bad)
or
pop
mov
mov
jmp
or
shl
dec
sbb
cmp
xor
adc
enterw
ret
leave
rcr
test
es
dec
jecxz
xchg
(bad)
in
xor
test
pop
dec
xchg
dec
xor
sbb
jns
enter
pop
jp
and
add
xor
and
mov
retf
mov
leave
xor
sbb
pop
dec
je
pop
ficomp
retf
out
fidiv
mov
stc
ror
in
and
mov
sub
ds
push
sbb
adc
sar
xor
jo
test
fld
stc
ror
xor
leave
movs
xor
enter
inc
ficomp
sar
push
and
popf
jmp
mov
adc
mov
dec
pusha
je
jge
nop
pop
mov
xor
sahf
imul
pop
sub
xchg
arpl
sbb
add
icebp
xchg
data16
xor
fwait
ret
and
aas
(bad)
mov
mov
mov
sbb
jmp
pop
pop
mov
xchg
lock
out
rol
je
push
add
and
xchg
js
and
imul
test
or
adc
mov
push
popf
and
inc
mov
in
bound
vaddsd
adc
outs
sub
cmp
call
rcr
sar
repz
mov
xchg
sti
inc
fst
popf
mov
mov
xchg
pop
pop
repz
sbb
out
aaa
pop
add
xor
inc
hlt
and
data16
fnsave
or
push
push
mov
xchg
out
dec
mov
dec
out
dec
pop
jbe
sahf
mov
retf
(bad)
pushf
retf
jo
mov
xchg
pop
cli
mov
mov
js
mov
retf
xor
and
lods
fyl2xp1
push
(bad)
and
sub
(bad)
popa
xor
nop
fdivr
mov
and
js
and
sbb
cs
dec
cwde
je
shr
(bad)
sbb
ja
sub
outs
out
out
dec
sub
jecxz
xor
mov
mov
retf
in
sbb
retf
sub
mov
sti
mov
(bad)
and
dec
add
xchg
push
imul
mov
mov
mov
xor
test
cmp
sub
pop
les
(bad)
outs
and
and
and
retf
push
movs
dec
sahf
rol
jo
push
js
stc
jg
enter
test
jge
stc
imul
push
movs
stc
out
inc
test
mov
jne
dec
hlt
mov
add
sahf
cmp
cld
js
or
mov
int3
cld
outs
push
daa
(bad)
mov
sbb
js
sbb
ins
shl
dec
sbb
stc
mov
fcmovb
lock
jmp
test
inc
mov
sar
add
in
or
sbb
cmp
mov
je
cmp
cmc
mov
rcr
inc
inc
sbb
shr
mov
outs
int3
fmul
lods
cmp
jns
enter
gs
cwde
sbb
iret
fucompp
repnz
dec
xor
adc
ror
push
inc
push
xlat
and
xchg
sub
or
sbb
sub
inc
ret
or
dec
pop
iret
movs
(bad)
mov
xor
fimul
sub
ss
fcom
nop
pop
cmps
les
(bad)
in
pop
cmp
inc
out
sub
or
adc
jge
fbld
shl
ss
fdiv
lods
push
scas
mov
xor
xchg
rcr
bound
adc
(bad)
pop
shr
sti
xchg
sbb
jmp
in
add
(bad)
push
dec
mov
dec
sti
cmp
and
test
ss
jg
es
fwait
pop
push
inc
jle
mov
out
fdivrp
imul
cmp
inc
pusha
mov
hlt
outs
sbb
popa
jmp
sti
xor
xchg
dec
pop
mov
sar
jmp
rdpmc
imul
(bad)
jmp
xor
xchg
mov
clc
pop
es
stos
inc
repz
sbb
mov
add
pop
lods
inc
adc
sbb
or
or
imul
pushf
cli
push
jle
push
pop
shr
mov
xchg
mov
xchg
das
xchg
jle
and
or
push
iret
add
sbb
ins
test
hlt
push
sub
and
lds
mov
pop
leave
add
rcl
mov
and
dec
ret
mov
(bad)
push
fdivr
(bad)
jmp
sbb
dec
mov
add
ficomp
or
mov
call
lods
sbb
fs
popa
mov
pusha
and
fcomip
jl
inc
inc
out
push
cli
sbb
jbe
pop
retf
push
sbb
and
pushf
cld
out
xchg
mov
rep
sbb
repnz
jbe
push
out
push
jecxz
pop
pop
mov
xchg
test
mov
jbe
adc
xchg
mov
cdq
xchg
or
and
cmp
push
sub
mov
mov
outs
ins
in
out
xchg
clc
inc
mul
fld
pop
fstp
jmp
cld
and
clc
sbb
je
inc
ins
leave
in
ror
es
jo
mov
test
jecxz
xchg
jbe
sub
ds
xor
push
push
push
je
and
aad
shl
stos
jb
pop
mov
das
mov
popf
mov
xor
sbb
adc
fnstsw
clc
rol
push
dec
jnp
hlt
xor
in
pop
cmp
mov
and
dec
sbb
sbb
adc
and
outs
xor
mov
or
push
xchg
sub
jmp
scas
pop
xlat
fs
gs
imul
aad
and
movs
and
vandpd
mov
sti
sub
cmps
mov
ins
movs
ret
cs
and
pop
dec
(bad)
dec
sub
xor
ins
pusha
sbb
mov
dec
js
pop
push
std
sbb
inc
repz
(bad)
inc
lahf
int3
fistp
clc
mov
fsubr
in
push
cmp
jp
and
out
sub
dec
aad
popa
data16
das
fnstenv
jbe
mov
sbb
fcom
xchg
xchg
and
scas
jmp
push
cmp
stos
sub
mov
adc
fwait
jbe
and
pop
mov
ds
outs
jmp
cmp
sbb
and
fdiv
mov
sahf
lods
push
and
das
push
xchg
mov
sahf
pop
cli
cmp
cdq
mov
rcl
xor
bound
jle
out
pop
addr16
popa
xchg
sti
cmp
xchg
dec
add
mov
cmp
and
std
adc
sti
push
dec
jbe
adc
cmp
xor
fst
cmp
adc
dec
and
and
mov
scas
ja
push
xor
cwde
inc
sbb
xchg
push
rcr
jmp
mov
fnstsw
jmp
js
dec
mov
fistp
pop
sub
mov
mov
mov
cld
ins
and
pusha
mov
stos
dec
inc
mov
stc
fwait
and
ja
cli
push
in
sbb
mov
in
sub
inc
enter
cmps
bound
cmps
mov
mov
ret
and
pop
pop
or
in
jno
mov
adc
and
adc
jmp
and
and
or
adc
pop
sbb
sbb
hlt
iret
and
mov
adc
push
popa
mov
mov
aad
xchg
in
cmp
clc
add
add
loopne
in
and
jg
std
xor
add
push
fwait
sahf
jmp
dec
add
mov
ret
or
aas
cmp
cli
sahf
adc
out
aas
and
dec
and
dec
test
jg
add
call
cli
sub
popa
pop
cmps
sub
or
std
(bad)
fcom
pop
jl
xchg
adc
ss
inc
pop
xchg
and
cmp
add
push
mov
cs
imul
pushf
dec
ficomp
(bad)
add
cmp
cmps
das
in
mov
sbb
add
cs
pop
sbb
cdq
xor
sahf
repz
aad
loop
inc
cmp
xor
daa
sbb
shl
icebp
(bad)
pop
push
ja
inc
dec
sbb
inc
scas
adc
pop
jmp
cmc
push
mov
or
sub
inc
pop
push
jb
stos
xor
leave
mov
sbb
xchg
xchg
push
cmp
(bad)
into
sar
retf
pop
mov
xchg
ins
hlt
loopne
sbb
out
sub
jecxz
sti
cld
das
dec
fst
mov
lods
jp
mov
mov
ins
xor
ret
pop
mov
jmp
stc
shr
mov
push
js
fiadd
hlt
aam
cmc
inc
jg
sbb
jecxz
test
shl
push
jmp
or
push
sub
sbb
jp
pop
sti
or
sbb
jmp
xchg
sbb
aad
retf
push
fidivr
and
ja
leave
fdivr
mov
inc
jbe
sbb
shr
push
fcomp
dec
rcr
pop
xchg
ins
add
dec
fcmovnbe
stc
out
dec
out
and
imul
and
in
pop
lahf
jmp
aas
sub
mov
lock
imul
xor
and
sbb
xor
popf
pop
cmp
push
mov
cmp
fstp
pop
inc
push
lods
mov
and
mov
push
xchg
ja
test
fsub
add
test
scas
loopne
and
dec
adc
sahf
fistp
sbb
loope
inc
in
ins
stos
pop
xchg
adc
mov
hlt
and
in
repnz
mov
das
ret
outs
jae
sbb
lods
pushf
cdq
push
gs
jl
jl
add
xor
mov
ficom
nop
push
mov
lahf
inc
fild
sbb
pop
push
pop
jle
cwde
mov
cdq
and
xchg
lods
stos
push
dec
ds
outs
pop
add
inc
push
adc
mov
push
and
mov
cmp
mov
arpl
popf
mov
and
add
inc
mov
(bad)
stos
inc
adc
mov
shl
pusha
xor
fucomip
push
mov
out
sbb
xchg
pop
jecxz
mov
outs
jg
sbb
pop
cs
call
push
daa
sub
(bad)
jnp
mov
ror
or
jle
xchg
cmps
call
push
mov
inc
aaa
mov
pushf
dec
fnstenv
sbb
dec
push
sbb
in
and
lods
dec
xor
pop
dec
dec
cmp
cdq
not
std
out
dec
jmp
push
or
ret
push
xchg
ds
ss
into
sbb
cmp
(bad)
es
jo
fwait
and
aas
pop
(bad)
rcr
dec
(bad)
fstp
retf
daa
test
xor
ret
ins
sbb
mov
(bad)
cmp
mov
dec
es
ins
add
ja
dec
mov
push
xor
fcomp
and
loop
xor
xor
imul
pop
xor
xchg
mov
arpl
cmc
xor
pop
push
scas
inc
enter
loopne
(bad)
jbe
push
fisttp
mov
imul
call
push
mov
cmp
adc
lods
stc
outs
xor
cmp
das
into
mov
out
in
adc
mov
into
jmp
sti
xor
ins
and
dec
jge
leave
jmp
push
je
cmp
(bad)
stos
out
movs
(bad)
js
xor
mov
xchg
cwde
mov
and
(bad)
dec
push
mov
(bad)
imul
adc
jbe
push
outs
scas
xchg
or
nop
and
xor
jmp
mov
out
pop
jbe
imul
out
rol
inc
cmc
pop
push
ror
arpl
jecxz
mov
mov
add
std
pop
push
add
jmp
jmp
es
out
loopne
fwait
retf
lds
(bad)
push
pushf
inc
adc
mov
or
out
jnp
jp
(bad)
loopne
mov
jmp
xor
push
fiadd
ins
jg
pop
popf
push
sbb
inc
add
pop
sub
jb
cmc
mov
arpl
fnstenv
xchg
and
jecxz
call
nop
adc
fcomp
jmp
sub
xlat
add
add
dec
jmp
xor
clc
inc
mov
mov
in
dec
cmps
sbb
xor
adc
sub
pop
pop
cmps
retf
aaa
pop
outs
xchg
mov
push
sbb
in
je
cmp
add
shl
cmp
sbb
cmp
or
aam
inc
jg
and
inc
stos
dec
imul
ins
mov
fiadd
les
jmp
call
mov
push
sub
mov
mov
mov
cmc
rcl
push
repz
inc
xchg
pop
inc
sub
jb
cs
stos
gs
push
sbb
mov
xor
imul
js
scas
dec
mov
(bad)
icebp
popa
adc
jecxz
lods
icebp
pop
mov
sub
ret
fistp
pop
cmc
and
call
movs
add
cdq
into
push
std
adc
xor
test
daa
pop
sub
into
xchg
jmp
dec
mov
aam
pop
adc
pop
lea
add
outs
cli
scas
outs
mov
stos
popf
arpl
fisubr
in
ss
adc
pop
or
dec
and
pop
addr16
push
rol
(bad)
mov
inc
pop
fmul
dec
pop
push
shl
mov
icebp
jecxz
pusha
or
leave
hlt
add
jbe
js
mov
mov
arpl
xchg
(bad)
push
ficomp
inc
and
leave
imul
lock
sbb
loope
and
movs
test
rcr
sbb
pushf
adc
inc
lods
jle
adc
mov
inc
movs
jmp
adc
call
mov
adc
or
dec
and
sbb
xchg
jl
fisttp
(bad)
pop
shl
cmp
mov
push
cld
xor
cwde
add
cdq
fwait
rol
mov
pushf
inc
sbb
clc
and
mov
shr
and
jg
pop
inc
xor
or
jecxz
outs
jp
repnz
shl
out
shr
pop
sbb
ds
xor
movs
jecxz
pop
xchg
cs
xchg
jbe
test
sti
inc
sub
(bad)
cli
sub
xor
jl
xlat
cld
cld
popf
and
sti
xlat
cwde
inc
pop
inc
xlat
mov
mov
mov
cdq
(bad)
fst
mov
in
fiadd
mov
outs
xor
push
imul
(bad)
outs
sub
out
xor
cmp
and
not
je
push
nop
jge
call
jns
pop
mov
pop
rdpmc
(bad)
shl
mov
test
in
lods
push
rcr
imul
mov
cs
mov
sub
std
into
cmp
sub
mov
(bad)
mov
movs
js
push
jge
repnz
cmp
and
fcom
ss
and
nop
cmps
inc
or
sbb
sbb
cli
cld
outs
retf
cdq
cmps
inc
sub
push
jmp
cdq
dec
mov
sbb
pop
pop
add
cmp
push
pop
sub
xlat
inc
mov
pushf
lds
fiadd
ds
leave
and
cmp
inc
test
and
sub
mov
or
in
sub
lock
arpl
sti
jle
addr16
or
fidiv
fadd
pushf
popa
pop
jecxz
in
xor
xor
cdq
ins
and
jmp
in
mov
clc
mov
(bad)
ds
mov
jecxz
xchg
nop
ss
mov
inc
add
cmp
jae
imul
cmp
cli
popf
or
jl
in
xor
jecxz
push
add
jge
dec
push
sar
retf
sbb
jle
shl
repnz
mov
jmp
fisttp
hlt
icebp
(bad)
es
or
pop
mov
fistp
les
fcomi
adc
jmp
push
xchg
inc
(bad)
ret
adc
shl
push
jp
xchg
pop
(bad)
sar
add
cld
xchg
jp
(bad)
fucom
adc
mov
test
xlat
ins
fild
in
int3
mov
int
xor
push
or
jns
add
std
push
inc
inc
sbb
jmp
xchg
mov
sbb
daa
pop
or
lock
imul
ss
dec
arpl
adc
aas
iret
fmul
jecxz
sbb
pop
cwde
pop
ret
shl
retf
mov
ja
adc
test
je
pop
nop
getsec
mov
aaa
outs
into
sti
scas
test
inc
clc
ficomp
xor
(bad)
sub
inc
cmp
xchg
xchg
mov
popf
push
inc
(bad)
dec
jge
sbb
pop
jns
(bad)
push
pop
pushf
xchg
scas
loop
pop
mov
into
pop
adc
mov
movs
push
xchg
xchg
mov
xor
cmp
inc
sbb
call
in
(bad)
mov
push
in
icebp
cli
xchg
cs
fbstp
push
lahf
or
sub
sbb
mov
int
and
das
(bad)
mov
out
outs
adc
mov
dec
sub
mov
pop
xor
inc
(bad)
movs
pop
pop
das
call
ss
data16
iret
neg
adc
sti
ficomp
imul
cli
test
and
cmp
and
add
aaa
push
fisttp
sbb
aam
xor
cmp
js
in
aad
push
out
fst
xchg
pusha
xchg
sbb
js
inc
sti
push
mov
xor
pop
and
or
or
cwde
add
cdq
inc
xchg
mov
adc
lods
ror
adc
xchg
jmp
jb
fist
sub
(bad)
lds
movs
and
in
in
add
js
and
imul
jl
jecxz
dec
mov
xchg
sub
add
fsubr
sbb
pop
xor
rcl
push
or
mov
(bad)
rcr
cmp
mov
and
add
mov
push
push
enter
adc
cmps
push
or
xor
cmp
out
mov
pop
inc
imul
in
jmp
push
pushf
imul
jge
fst
sub
ins
inc
pop
sub
fadd
xchg
or
push
jmp
and
add
and
mov
ret
jecxz
mov
dec
pop
ss
cmp
mov
(bad)
aaa
stos
(bad)
test
mov
ins
adc
dec
jge
push
jle
loopne
jg
mov
test
mov
jne
sbb
retf
adc
and
adc
jae
xor
inc
fcomp
loope
and
test
or
sti
and
jge
cmc
bound
jmp
and
or
(bad)
push
mov
ret
in
sbb
xor
xor
mov
xchg
push
fwait
xor
sti
sahf
cdq
test
in
std
pop
das
xchg
ss
cmp
es
scas
js
xor
and
push
sbb
xor
cwde
mov
cmps
cmc
gs
and
adc
mov
jle
mov
bound
shl
cld
leave
mov
or
push
or
int3
sbb
pop
jmp
jb
fst
pop
sbb
aam
mov
pop
mov
jge
movs
sub
sahf
add
xchg
stc
sti
xchg
inc
xchg
cli
(bad)
stos
(bad)
xchg
cmp
mov
(bad)
cmp
ds
jmp
cs
add
std
push
push
push
fcom
sbb
xchg
std
in
lahf
popa
inc
mov
mov
test
pop
sub
loopne
and
(bad)
gs
mov
je
pop
mov
lods
outs
imul
out
push
in
push
scas
fwait
pop
xor
shl
out
jmp
out
inc
cmp
or
shr
add
or
jmp
lahf
cwde
sti
pop
mov
xchg
rcl
dec
gs
mov
inc
mov
mov
lock
pushf
xor
xor
inc
shl
mov
stc
jmp
mov
fst
mov
ret
enter
push
jae
(bad)
sbb
pop
cmps
push
mov
(bad)
and
mov
xor
sbb
arpl
lds
push
out
adc
push
or
push
enter
jae
and
and
cmp
push
mov
pop
pop
leave
in
xchg
rcl
ret
mov
jbe
es
inc
pushf
aaa
pop
xor
in
in
imul
pop
mov
mov
sbb
mov
push
fild
loope
(bad)
in
push
jge
pop
sub
shr
mov
xor
fmul
mov
inc
sbb
popf
sbb
add
test
call
movs
sbb
mov
inc
out
xchg
mov
sub
ss
mov
sbb
xor
and
push
add
jecxz
scas
jmp
and
dec
add
lahf
adc
xchg
fild
std
cmp
sub
xor
mov
loop
push
or
ss
mov
jg
outs
xchg
bound
sub
je
arpl
sti
sbb
pop
iret
scas
popa
push
xor
sbb
test
xlat
cdq
(bad)
mov
mov
mov
xor
sbb
cmp
pop
outs
sbb
xor
cmp
add
cli
dec
fistp
sub
mov
xchg
xchg
fcomp
pop
loope
shl
mov
and
test
jmp
(bad)
mov
adc
mov
ds
fcomip
inc
sbb
sbb
sbb
ins
xlat
ja
xor
repnz
(bad)
ds
add
jg
mov
or
or
inc
scas
fild
cwde
ror
data16
push
into
call
out
push
and
dec
aas
or
pop
outs
push
cmp
out
rol
test
add
or
dec
and
cmp
jg
fcom
movs
xor
sbb
and
pop
sbb
scas
sbb
xor
jo
aam
xor
(bad)
ja
push
adc
dec
loope
test
ins
cmp
sti
bound
ret
std
lods
cmp
clc
jp
sbb
mov
pop
inc
and
mov
and
(bad)
push
imul
cmp
rcl
push
push
test
jnp
std
pop
and
jo
loop
xchg
mov
cmp
jmp
and
sbb
sub
lea
dec
jmp
cmps
ret
fdivp
aad
sbb
xchg
adc
bound
test
ror
int3
std
leave
cmp
jle
fnsave
repz
inc
xor
and
comiss
dec
ret
mov
and
or
sub
sbb
add
pushf
dec
ret
dec
loope
sbb
pop
xor
xchg
and
pop
shl
pop
leave
cmp
sbb
sbb
xchg
mov
push
fwait
arpl
or
outs
int3
push
add
xor
std
pushf
out
mov
(bad)
and
jbe
or
cmp
lods
nop
out
cmp
jecxz
int3
lock
in
fisubr
and
sub
or
int3
pop
mov
dec
pop
push
xchg
xor
push
xchg
aad
outs
mov
test
push
xor
into
jns
jl
shr
inc
mov
and
data16
push
(bad)
pop
test
jge
retf
xchg
sbb
jl
out
cdq
or
xlat
jnp
(bad)
jns
movs
inc
jp
je
and
fist
add
sub
enter
rcr
(bad)
fiadd
cmp
mov
dec
in
jmp
sbb
(bad)
mov
into
cmp
ss
repnz
mov
out
pop
hlt
ins
mov
fwait
xchg
mov
(bad)
cmp
cmp
int
xchg
push
dec
mov
fld
push
jae
test
(bad)
inc
lods
cmp
push
shl
into
aad
or
ins
push
inc
mov
jle
gs
cmps
add
mov
leave
pop
cmp
int
loop
mov
cmp
(bad)
sbb
jbe
mov
xchg
les
jecxz
test
push
(bad)
lods
mov
fs
xchg
push
ficomp
pop
mov
gs
aas
daa
sub
(bad)
fwait
out
sbb
add
push
(bad)
shr
in
les
test
es
xor
cmp
inc
shr
fcom
push
dec
push
bound
into
outs
xor
clc
push
aas
mov
loopne
scas
adc
aad
mov
lods
add
pop
out
mov
adc
cmp
and
repz
add
fnsave
xchg
mov
rol
sub
sub
or
fsave
nop
cdq
in
ja
hlt
mov
mov
movs
cmp
fcomp
cmp
sub
and
pop
push
js
daa
sbb
dec
jl
imul
xor
and
jle
test
inc
xchg
sbb
cmp
or
ficom
mov
mov
push
jnp
xchg
cmc
in
and
pusha
stos
es
xor
add
clc
lods
push
lods
sbb
xchg
ss
iret
and
loop
cmp
(bad)
add
and
(bad)
mov
aad
sbb
test
sbb
call
pop
mov
out
push
jo
jg
(bad)
mov
out
dec
ins
inc
int3
inc
nop
push
fsubr
rol
bound
leave
int
xchg
pop
cs
js
push
sub
or
jecxz
imul
aaa
outs
(bad)
push
dec
aas
sbb
rcl
pop
pop
je
cmp
sti
(bad)
je
pop
icebp
fdiv
fmulp
fadd
fbstp
imul
or
call
xor
jl
mov
sbb
fisubr
cmc
xor
les
retf
jmp
cmp
cmp
mov
ins
pop
fisttp
adc
fistp
jg
push
dec
ror
ffreep
and
aam
cld
adc
xlat
xchg
ror
ds
or
test
xchg
jae
data16
in
cli
mov
dec
sbb
pop
push
jbe
jbe
cdq
dec
add
cmp
add
inc
add
in
sub
cld
mov
ret
xchg
sbb
pop
push
and
inc
cwde
ret
mov
dec
out
mov
into
aas
xor
cmp
xor
out
out
jo
outs
push
pushf
movs
aad
mov
xor
push
cmps
push
retf
(bad)
es
add
loop
mov
xor
loopne
mov
adc
fld
jl
mov
or
xchg
aad
out
dec
pusha
jge
mov
cmp
dec
and
out
cwde
rcr
push
js
movs
xor
mov
sar
mov
sti
pop
lds
pop
mov
cli
mov
inc
lods
xor
add
mov
out
xchg
mov
in
mov
pop
nop
std
das
adc
jbe
into
enter
sahf
ins
xor
cmp
mov
movs
add
jg
ins
pop
cdq
(bad)
aam
je
mov
sub
and
mov
push
ins
mov
jne
es
and
adc
and
or
into
pop
push
pushf
fcmovu
sub
(bad)
xchg
add
fdivr
sbb
and
and
and
pop
mov
movs
in
add
retf
adc
in
int3
pop
ds
inc
icebp
mov
inc
stc
mov
xor
jmp
cdq
dec
jmp
ret
fidiv
mov
les
cli
out
push
mov
pusha
std
fwait
stos
out
jb
shr
dec
adc
and
mov
repz
pop
sub
dec
inc
ds
and
ficomp
es
int
inc
stos
push
mov
faddp
int3
adc
jmp
pop
mov
inc
dec
cwde
xor
pop
push
loope
mov
sub
add
add
fadd
(bad)
jmp
shr
mov
in
fadd
sub
into
push
push
sbb
sbb
mov
or
ja
das
xor
sbb
lahf
pop
cmp
inc
inc
dec
shl
cdq
or
add
push
sub
mov
dec
pop
sar
and
cwde
inc
stc
xchg
pop
mov
retf
pop
cwde
fwait
jmp
inc
sahf
and
pop
loopne
sub
dec
push
loope
mov
pop
sbb
test
call
cmp
sahf
(bad)
pop
push
in
add
sub
cli
add
jmp
xor
sbb
iret
fwait
xchg
out
add
cmp
mov
fld
ret
jbe
cwde
cdq
popa
es
stc
imul
ucomiss
pop
sbb
and
sti
push
mov
push
ss
fmul
inc
(bad)
stos
mov
neg
es
pusha
movs
mov
stos
pop
(bad)
push
push
or
xchg
fdiv
mov
pop
cmp
stos
popa
and
push
sahf
mov
pop
mov
cdq
int3
mov
jmp
leave
dec
push
mov
xchg
xchg
push
jp
fsub
xor
mov
fcom
shl
icebp
nop
mov
fwait
mov
lods
xchg
jb
push
jg
(bad)
into
aas
sbb
shl
mov
imul
repz
out
push
fistp
(bad)
xchg
ja
repz
sbb
aas
jne
fwait
test
cwde
mov
cmp
fisttp
cmps
push
mov
pop
call
cld
xor
inc
jbe
repz
sbb
dec
and
mov
fld
jno
add
push
fild
jo
push
dec
icebp
cmc
inc
fcomi
push
push
jl
sbb
sbb
repnz
out
fninit
adc
cmc
pop
push
(bad)
jne
cmps
loop
dec
sbb
jp
mov
in
jb
fisttp
stos
pop
(bad)
mov
(bad)
repnz
je
dec
cmp
pushf
call
fld
(bad)
jg
adc
jbe
rol
sbb
adc
outs
repnz
xchg
and
pop
jg
ret
xlat
in
sub
stos
movs
test
inc
jecxz
out
ret
sahf
fst
fs
sbb
or
jge
(bad)
mov
bound
(bad)
or
sbb
dec
xchg
sbb
cmp
int
ins
in
cmova
and
repnz
std
pop
clc
jg
popf
test
enter
sbb
cmp
nop
xchg
mov
push
mov
xor
mov
imul
das
(bad)
test
es
(bad)
sub
iret
rcr
push
push
or
inc
and
jg
lock
fld
retf
push
adc
pop
es
jecxz
xor
dec
or
fidiv
shl
out
push
js
cmp
sub
iret
imul
jecxz
clc
adc
addr16
jo
push
push
sbb
or
fs
push
mov
push
jmp
mov
outs
ins
rol
push
jle
pop
ds
mov
mov
sbb
sbb
xor
add
sti
cmps
mov
and
ret
or
pop
cmp
mov
xor
(bad)
loope
mov
push
mov
jmp
aad
in
sub
xchg
and
push
and
out
sbb
pusha
xor
sbb
loopne
neg
fsub
cmp
jmp
mov
repnz
lds
arpl
jg
out
imul
add
mov
in
imul
je
cmps
mov
and
push
cmp
sti
fbld
xor
add
(bad)
loopne
add
sar
add
ror
fistp
cwde
retf
je
inc
push
pop
std
fild
aad
aad
dec
and
jle
mov
dec
xor
sbb
jo
add
not
inc
(bad)
cmp
retf
adc
sub
out
imul
inc
jg
mov
mov
in
inc
bnd
ss
test
add
xchg
dec
mov
call
fist
push
(bad)
dec
aas
mov
inc
jle
hlt
add
mov
push
mov
push
xlat
jp
and
stos
adc
mov
mov
pop
aaa
xor
and
cmp
jle
mov
bound
push
jns
pop
mov
cmp
or
push
sahf
dec
push
inc
and
mov
jmp
test
push
fistp
scas
fs
stc
jmp
in
add
mov
stc
cdq
xchg
fist
inc
xor
fcmovne
or
fdivr
or
fistp
sub
loopne
repz
fstp
pusha
xor
inc
jbe
xchg
mov
xor
or
dec
mov
push
and
jb
fild
xor
mov
sar
add
sbb
push
fld
push
ret
fist
ins
(bad)
cmps
ret
jb
into
pop
dec
das
fidiv
push
jae
pop
test
inc
cmp
mov
ror
pop
lock
mov
arpl
fld
dec
(bad)
imul
loopne
movs
fisub
push
rcr
stc
rol
inc
fild
int
imul
xlat
cmp
fld
ror
dec
jbe
shl
cld
retf
fidivr
jmp
cmp
movhps
add
fcomip
mov
mov
pop
cmp
cmp
mov
xchg
sbb
les
and
jne
push
ins
cmp
rcr
ins
in
aas
xor
and
out
pop
ss
adc
jnp
xchg
cmp
fdivr
xlat
mov
fcmovnbe
xchg
in
fld
push
sti
fnsave
xchg
fld
or
pop
ret
xor
cmp
xchg
into
inc
xchg
and
outs
jecxz
adc
call
mov
fild
pop
ss
repnz
shl
xor
data16
int3
jle
aam
sub
mov
rol
pop
xchg
das
mov
mov
clc
mov
mov
(bad)
sbb
push
retf
add
mov
fisub
mov
xchg
outs
mov
jecxz
test
mov
sbb
mov
jecxz
das
mov
mov
std
popf
mov
inc
cmp
add
aaa
out
pop
jmp
into
adc
fnsave
mov
sbb
lods
pop
mov
and
std
stos
dec
cmp
jmp
sbb
fucom
and
dec
stos
outs
fwait
sar
pop
repz
xor
in
rcl
push
inc
mov
adc
ds
dec
sti
aas
ficomp
mov
and
or
in
ins
push
inc
sbb
mov
jbe
or
scas
and
loopne
mov
test
aas
ins
or
xchg
xor
movs
jbe
pop
outs
pop
test
aaa
lahf
dec
ret
sbb
imul
push
pop
inc
and
mov
inc
ret
imul
adc
xor
imul
push
outs
rcl
ss
xchg
jns
rcl
mov
fcmovnb
jmp
bound
(bad)
mov
test
xchg
addr16
and
inc
dec
cmp
sbb
inc
add
push
fst
ins
int3
xchg
and
jmp
jnp
and
mov
ret
mov
push
push
xchg
or
inc
pop
ss
push
sub
iret
test
test
cld
mov
rcr
mov
leave
xchg
std
rol
shr
(bad)
es
lahf
adc
jne
mov
arpl
ret
or
mov
xchg
or
cwde
cli
mov
arpl
pop
icebp
pusha
inc
repz
mov
xchg
sbb
ja
sbb
pop
mov
xlat
rcr
imul
and
xchg
adc
xchg
shl
mov
jl
ss
leave
dec
sbb
and
dec
mov
and
lods
jl
pop
into
mov
inc
bound
mov
mov
in
jecxz
sub
mov
inc
and
out
xor
pop
push
xchg
ja
sbb
xchg
xchg
imul
movs
out
test
xor
es
movs
mov
popf
not
test
inc
int
xchg
iret
jmp
lock
popf
adc
push
and
rol
jne
dec
pushf
out
in
xor
sub
scas
into
(bad)
mov
loope
mov
jp
pop
or
sti
fs
push
xor
call
mov
aad
in
mov
xor
adc
push
mov
pop
push
xor
xchg
movs
mov
sub
mov
and
test
iret
lock
push
ret
ins
test
cmp
xor
cmp
fild
je
xor
clc
jecxz
jae
push
add
sahf
std
jne
mov
movs
and
add
in
in
in
imul
stos
sbb
stc
push
xor
push
lock
aad
mov
ins
cmps
data16
int3
test
(bad)
stos
jle
aad
lock
ror
retf
inc
sub
test
sti
dec
adc
jo
fnop
fsincos
ins
cmp
pusha
cwde
mov
mov
pop
arpl
addr16
and
pop
cmps
std
cmp
jmp
xchg
aam
frstor
ret
and
ins
mov
sbb
(bad)
add
dec
cmp
xchg
movmskps
das
ret
pop
xor
add
stc
xchg
mov
xchg
pop
loopne
pop
retf
xor
stc
mov
sbb
sahf
fstp
add
and
inc
arpl
mov
repnz
dec
pop
mov
mov
sahf
mov
pop
retf
lock
ins
sbb
(bad)
clc
adc
or
test
adc
out
sahf
int
test
cld
enter
sub
mov
stc
outs
push
fdiv
cmp
mov
repz
xchg
xchg
js
sub
shl
inc
dec
fistp
sbb
int
ja
push
mov
ror
or
xchg
jl
jl
les
mov
mov
mov
pop
xor
loopne
dec
stos
(bad)
addr16
pop
retf
pop
push
js
sbb
mov
dec
in
push
(bad)
or
(bad)
cmps
iret
and
cmp
pusha
xor
out
sub
push
fst
sbb
mov
push
test
aaa
fadd
stos
nop
call
sbb
pop
imul
jmp
mov
ins
and
mov
ror
pop
aas
add
push
sub
es
retf
sbb
test
and
push
lods
popf
pop
push
das
repnz
cwde
(bad)
cdq
fld
es
cdq
movs
mov
add
jae
retf
imul
sar
push
jmp
mov
mov
sbb
xlat
xor
(bad)
aam
leave
int3
mov
add
or
cmp
int
xor
pop
push
outs
rol
ins
xor
or
es
mov
xor
mov
sub
xchg
imul
xor
xchg
out
dec
outs
fs
inc
jl
mov
movs
jecxz
mov
sbb
outs
mov
retf
mov
mov
inc
pop
and
out
retf
sahf
adc
ret
mov
or
arpl
(bad)
std
xchg
add
lds
mov
push
out
push
adc
add
xor
cmp
pop
xchg
mov
push
or
sub
push
dec
shl
ss
(bad)
popa
aad
xlat
jecxz
leave
xchg
rol
repnz
push
lds
(bad)
cwde
pop
daa
sub
mov
jp
out
ret
inc
mov
sti
fisub
sar
out
push
out
sbb
jle
mov
mov
das
and
cld
test
mov
repnz
fistp
imul
dec
mov
or
cmp
ror
js
fldcw
push
jo
cmp
pop
dec
aam
pop
fiadd
add
in
cmp
add
mov
and
int3
and
in
cmc
pop
mov
add
aaa
leave
and
fst
mov
or
ret
(bad)
or
jp
(bad)
mov
aad
xchg
jl
data16
sub
inc
sub
sar
mov
int3
int
add
or
ins
and
inc
cs
push
sub
daa
stos
pop
test
jg
push
fisubr
jbe
repnz
cmp
push
or
fwait
mov
(bad)
and
adc
call
sub
inc
jmp
test
add
cmp
fistp
and
and
cmp
pop
dec
sti
and
push
sub
jo
mov
add
imul
fs
mov
dec
jmp
xor
xor
jns
and
sbb
lods
or
or
push
jmp
dec
add
icebp
jmp
neg
pop
imul
add
loopne
std
pop
xor
xchg
sbb
fild
inc
push
clc
xor
xchg
xor
in
push
and
icebp
fstp
push
ins
mov
pop
(bad)
mov
cmp
nop
pusha
xor
and
sbb
mov
ss
mov
mov
pop
in
mov
lods
repnz
sub
es
xchg
xchg
jmp
rcr
add
pushf
pop
imul
outs
lods
enter
call
sub
xor
or
pop
xchg
add
bound
add
iret
jp
mov
fisttp
fsub
xor
(bad)
sbb
mov
jns
xchg
test
enter
es
iret
jnp
out
pusha
pop
and
and
fwait
mov
push
repnz
sti
mov
sahf
push
jbe
inc
pop
xor
or
popa
sub
fcom
and
retf
and
popf
ror
retf
imul
dec
and
xchg
mov
mov
cmps
sub
dec
cs
in
test
aam
nop
into
mov
out
sub
xchg
dec
cli
fwait
(bad)
jle
xchg
inc
into
inc
and
sbb
retf
xor
pop
sar
pop
loop
sbb
push
cmp
sbb
xor
and
jns
mov
and
dec
mov
stc
stos
mov
test
xchg
mov
pop
das
mov
xor
mov
fwait
jg
mov
xor
push
cwde
sub
and
mov
xchg
jns
enter
fidivr
(bad)
pop
xor
sub
mov
fild
loope
jno
xor
jge
aam
pop
lds
js
jl
cmp
int
or
stc
popa
test
or
and
pop
in
mov
xor
or
aad
or
mov
add
jmp
ss
stos
movs
cld
js
xchg
(bad)
stos
xor
push
add
jmp
xchg
mov
cli
mov
cmps
call
or
add
aad
and
ret
fidiv
in
je
icebp
in
hlt
loop
mov
xchg
sbb
cmps
leave
and
pop
xor
fidiv
js
bound
dec
xchg
mov
cwde
dec
in
pop
jl
scas
pop
jp
ret
xor
cmp
ret
popf
sub
(bad)
cmc
iret
int3
jl
pop
add
jge
cmp
dec
ins
sbb
loopne
adc
mov
jge
jmp
fbstp
mov
mov
cli
push
sahf
mov
imul
pop
jo
xlat
and
(bad)
movs
mov
pop
imul
dec
test
and
fcom
jg
sti
fcmovnb
ins
and
sbb
push
and
shr
pop
xchg
outs
into
jmp
push
mov
cld
inc
jo
std
mov
sub
mov
push
pop
test
push
sti
loop
fcomp
lods
cmp
ret
popa
cld
sar
pop
add
jae
add
dec
(bad)
xor
out
in
mov
retf
mov
into
xor
pop
jmp
loope
jns
inc
and
jmp
mov
shl
mov
mov
inc
das
dec
sbb
cmc
cdq
mov
imul
cmp
push
ret
movs
add
adc
dec
cdq
ins
jno
cwde
js
or
dec
pop
mov
out
mov
add
jno
test
leave
dec
cs
loope
cmp
cmp
jns
pop
xlat
push
mov
iret
mov
ins
out
lds
fistp
fistp
jns
jge
or
data16
mov
lds
xor
icebp
in
and
fiadd
add
jle
mov
push
je
cmps
push
ss
test
jle
sub
inc
mov
jl
dec
mov
jp
out
dec
xchg
adc
and
sahf
enter
ss
shl
sti
mov
ja
rcr
cdq
mov
dec
fild
and
mov
fild
movs
and
cmp
pop
mov
sahf
push
xor
pop
outs
sbb
adc
jmp
add
shl
fs
sbb
and
pushf
jnp
mov
lock
pop
mov
xchg
pop
mov
data16
repnz
sbb
and
rcl
fs
scas
jge
cmp
aad
test
and
in
mov
pop
out
add
mov
push
mov
aaa
mov
sbb
and
ins
data16
pop
fstp
cmps
je
and
scas
pop
shl
mov
push
dec
(bad)
cmp
push
je
je
dec
jp
mov
add
xor
and
and
in
mov
jmp
es
pop
out
out
inc
inc
test
icebp
cmps
add
arpl
cdq
xchg
push
dec
inc
in
mov
test
hlt
out
jo
(bad)
adc
test
std
rcl
sti
outs
sbb
sti
sbb
xor
pop
push
mov
mov
ja
dec
or
mov
or
stc
jo
mov
in
push
sbb
fsub
xor
and
retf
mov
push
shl
push
repnz
pop
test
out
div
mov
sti
loope
mov
sbb
fstp
clc
fadd
ret
cli
sbb
cmp
clc
xor
and
jmp
xchg
add
sub
sub
jno
je
mov
into
pop
mov
mov
lock
pop
push
push
push
xor
stc
repnz
sub
dec
data16
lds
pushf
mov
inc
ss
push
add
push
(bad)
bound
cmp
and
xlat
loop
mov
nop
push
mov
dec
cmp
outs
inc
ins
pop
push
mov
inc
jae
ret
mov
out
js
out
mov
hlt
fisubr
sar
and
pop
std
add
retf
inc
dec
cdq
xor
pop
into
les
cmps
shl
shr
fisttp
movs
ss
neg
sbb
push
add
sbb
fucomi
pop
dec
pop
into
fmul
out
and
repz
mov
dec
cdq
pop
and
xor
push
ins
cmp
adc
aas
push
xor
mov
shl
cwd
sbb
jg
or
daa
sti
push
jb
sub
js
shl
xchg
mov
cli
xor
dec
mov
or
pop
das
cmp
shl
mov
fstp
test
into
fstp
pop
add
pushf
xchg
fnstsw
mov
fpatan
pop
sub
sbb
outs
loope
loop
xchg
mov
cmp
mov
pop
adc
or
aas
ret
in
jno
mov
ins
jle
cmp
pop
fst
mov
xor
add
pop
adc
cs
not
cmp
sbb
add
xchg
popa
cmp
jge
add
stos
outs
dec
pop
cmp
js
sbb
jecxz
gs
cmp
aas
in
pushf
adc
pop
or
mov
jl
test
imul
xchg
int
mov
inc
dec
(bad)
xchg
fidiv
stc
pop
or
into
test
and
lock
push
popf
xor
imul
jae
mov
leave
jo
sbb
pop
sbb
or
test
out
and
rcr
add
jle
jns
dec
in
jae
cmp
mov
inc
je
in
scas
mov
fimul
jno
and
shr
hlt
sub
push
mov
or
jmp
ret
(bad)
test
and
mov
push
pop
pop
call
pop
icebp
enter
push
cwde
ja
push
into
popf
push
adc
mov
lods
dec
(bad)
push
jp
push
or
mov
dec
adc
adc
shr
push
mov
sbb
mov
or
repnz
movs
sbb
xlat
daa
jmp
mov
jg
stc
adc
mov
pop
retf
xor
imul
pop
sbb
out
jecxz
sar
enter
mov
mov
add
fnsave
dec
push
popa
sbb
in
mov
jle
fcmovu
outs
pop
and
jbe
sti
push
jnp
pushf
pop
(bad)
(bad)
push
pop
call
sahf
(bad)
sar
push
fdivrp
hlt
pop
rcl
imul
mov
bound
push
repnz
cmp
nop
push
pop
mov
xchg
test
jl
mov
pop
aam
or
push
dec
nop
jle
out
sbb
jge
ss
ins
shl
stos
lods
in
sti
xchg
mov
popf
pop
sar
fcom
inc
push
js
xor
les
sbb
nop
pop
xor
jle
mov
mov
cmp
fbstp
push
out
sti
fadd
pop
(bad)
sub
xor
and
ret
lods
xor
test
arpl
xchg
into
or
imul
mov
call
pop
mov
xchg
sub
imul
pop
mov
fimul
mov
xchg
loopne
mov
adc
ss
push
pop
cld
rcr
adc
xlat
jle
fnstenv
inc
add
je
retf
cdq
or
mov
and
pop
stos
sub
(bad)
stos
(bad)
pop
bound
jnp
out
lea
add
in
movs
cmp
in
inc
lahf
shl
push
pushf
pop
into
int
mov
push
dec
push
popa
fwait
aam
cld
mov
das
or
lahf
(bad)
mov
cld
add
scas
stc
shr
mov
in
push
rcl
std
or
xchg
jb
push
cld
sbb
mov
jmp
jmp
pop
sub
push
shl
mov
push
xor
xor
fwait
shl
mov
ins
call
and
(bad)
inc
stos
and
adc
call
mov
ds
(bad)
mov
push
and
push
div
loop
daa
dec
mov
(bad)
cmp
in
nop
rcr
repz
xchg
scas
inc
fild
rcr
adc
neg
fcom
cdq
jmp
push
and
add
pop
div
or
xlat
fdiv
sub
jmp
aas
out
mov
cmc
test
jmp
xor
cld
mov
fisub
xchg
adc
add
cmps
icebp
fisubr
adc
cmc
clc
and
fisttp
jecxz
sbb
pop
mov
xchg
sti
pusha
mov
in
sbb
inc
sti
jmp
inc
inc
in
add
pop
mov
jl
jecxz
jno
scas
and
fst
inc
mov
jl
cmp
loop
pop
dec
daa
movs
cmp
add
cmc
or
sbb
jmp
inc
xchg
pop
push
pushf
lahf
shl
loope
and
jle
cmp
fcomp
push
in
jmp
jo
(bad)
sbb
es
fist
in
xchg
shl
in
and
mov
push
fdiv
aaa
cmp
or
(bad)
into
and
call
xor
jmp
mov
dec
jmp
mov
xchg
mulps
sar
cmp
cli
out
or
jbe
ss
sub
and
test
mov
stc
push
daa
cmps
(bad)
aam
cdq
xlat
pop
xor
test
and
add
mov
push
shr
lods
adc
xchg
pop
(bad)
mov
cmp
dec
add
jo
sti
push
fs
xchg
pop
pop
pop
leave
add
mov
and
fucom
inc
jle
pushw
sbb
or
xchg
pusha
inc
pop
cmps
stos
inc
dec
mov
out
pop
cmp
sbb
cs
push
xchg
pop
add
loop
inc
aaa
xchg
pop
jle
sahf
and
inc
mov
daa
mov
daa
(bad)
pop
aad
push
jl
js
loopne
and
jl
push
clc
xchg
ss
leave
sbb
xlat
je
push
xor
jmp
inc
mov
sbb
lds
xchg
cdq
enter
mov
xchg
sbb
mov
xor
cs
jmp
cmp
jg
add
mov
push
mov
and
pushf
adc
pop
push
pop
cdq
jl
adc
mov
xchg
mov
mov
mov
test
into
repz
in
xor
or
sar
push
xchg
fldz
mov
inc
xor
int
call
popf
mov
leave
mov
push
push
mov
jecxz
sbb
test
push
es
push
mov
inc
fimul
clc
repnz
pusha
xchg
jne
jl
shr
(bad)
mov
or
push
xlat
inc
mov
daa
ret
cmp
xchg
pop
mov
bound
out
xor
sub
lock
in
fistp
jbe
loop
xchg
iret
fucom
jecxz
or
adc
or
cmp
std
in
in
loopne
nop
mov
push
and
mov
outs
sub
sti
mov
sub
sbb
test
cmp
mov
fadd
cs
(bad)
adc
in
add
sub
and
sbb
loop
sbb
sbb
pop
jmp
pop
movs
add
fstp
sbb
and
popa
(bad)
neg
shl
sub
mov
jp
and
fcom
adc
test
sub
and
jo
cli
sub
fstp
and
pop
jecxz
(bad)
mov
ins
inc
fsubr
mov
xor
sub
outs
lods
shl
cmp
mov
xor
std
sbb
xchg
imul
daa
mov
push
mov
ins
jmp
inc
ds
jl
std
mov
in
push
xchg
inc
daa
jo
xor
ret
push
ror
fiadd
push
jnp
idiv
fs
cmp
pop
lods
jo
add
add
cmp
sahf
aam
bound
cwde
xor
xchg
outs
dec
les
push
in
push
out
ss
loop
xlat
(bad)
rcl
sub
jnp
push
mov
jmp
mov
xchg
push
mov
mov
pop
xchg
sbb
fistp
ret
add
aam
jle
pop
sbb
sbb
and
push
mov
retf
inc
sub
mov
mov
push
stos
sbb
cwde
popf
cmp
dec
sbb
inc
mov
and
push
mov
test
mov
pop
ins
mov
add
push
ins
fsubp
mov
and
mov
and
adc
inc
and
push
je
mov
push
scas
test
xchg
sbb
cmp
jmp
mov
scas
xchg
loope
xchg
aad
jmp
cmp
xor
and
adc
push
popf
clc
pop
mov
adc
das
mov
cdq
mov
sti
push
aam
int3
xchg
pshufw
test
pushf
mov
sbb
test
outs
xchg
jecxz
push
shl
fidiv
test
pop
outs
pop
addr16
xor
repz
sub
fcomip
cmp
pusha
or
std
fadd
mov
je
movs
addr16
popf
mov
retf
les
dec
mov
add
xor
dec
cmp
pop
nop
shr
cmp
dec
or
cmp
cmp
stc
mov
pop
(bad)
mov
or
fs
es
int
or
imul
xchg
lods
fstp
pop
leave
aaa
scas
mov
lods
add
mov
dec
push
inc
lods
lock
rcr
pop
dec
mov
or
jg
loopne
xor
adc
(bad)
mov
imul
xor
addr16
stos
add
jmp
pop
sbb
or
jo
adc
ret
mov
fmulp
mov
in
out
into
xor
sub
scas
retf
mov
fst
repz
jle
sbb
cmp
pusha
in
inc
inc
adc
push
push
jecxz
xchg
(bad)
cmp
jmp
outs
and
shl
test
cs
push
jmp
dec
cld
adc
into
xchg
stos
inc
into
mov
jmp
pop
mov
mov
or
(bad)
jbe
mov
add
pop
rcl
out
xchg
ror
stos
sti
and
sbb
rol
jno
sti
sbb
inc
xchg
cwde
xlat
test
aas
ror
mov
cld
mov
cli
data16
nop
mov
or
add
ja
in
stos
(bad)
mov
ficom
adc
ret
xor
mov
into
pop
loopne
(bad)
mov
(bad)
sbb
and
(bad)
(bad)
std
inc
loopne
push
adc
cmp
mov
addr16
sub
pop
sbb
mov
cmp
cmp
fs
cdq
test
xchg
and
mov
ret
add
pop
lock
xlat
add
add
dec
rcr
ret
fistp
mov
lods
data16
ss
sbb
xor
xchg
mov
popa
pop
ins
dec
mov
(bad)
adc
pusha
mov
and
inc
cmp
cmps
je
enter
and
lods
pop
mov
(bad)
repz
xchg
imul
ror
cdq
pop
call
jl
shl
ds
or
adc
call
push
pop
dec
test
mov
lods
scas
test
test
and
ror
xor
clc
jecxz
mov
sub
pop
getsec
gs
mov
es
not
cs
dec
jp
mov
xrelease
je
xor
fiadd
fwait
retf
mov
je
sbb
iret
dec
inc
adc
adc
lahf
push
sub
test
pop
add
cdq
mov
xlat
vpmaxub
jp
push
cmp
xor
loopne
retf
fidiv
jbe
lods
in
or
repz
loop
push
adc
xor
push
cli
and
jae
pandn
jbe
(bad)
je
inc
jne
cmp
test
and
adc
aas
sub
and
fldcw
test
cmc
pop
into
push
fdivr
sbb
pop
xchg
jnp
jmp
xor
out
into
imul
jns
mov
adc
xor
iret
cld
pop
or
fidiv
lods
popf
push
ins
ss
jge
pop
(bad)
mov
cmp
ins
data16
lock
mov
mov
push
into
mov
sbb
inc
mov
fisubr
and
jl
push
xchg
sbb
mov
mov
ror
popf
shl
xchg
xor
lahf
mov
xor
mov
into
sbb
xchg
xchg
pop
mov
ret
cmp
popa
aas
sahf
xchg
sbb
jo
ins
ficomp
imul
fsincos
mov
xchg
pop
xchg
adc
and
test
mov
pop
(bad)
in
fnsave
cmp
add
arpl
cs
mov
cdq
xor
cmps
xchg
jbe
add
xor
cmp
cmps
adc
push
jno
lods
adc
mov
rcr
in
mov
ret
dec
cmp
inc
test
adc
mov
rcr
xor
scas
xchg
std
push
xor
cmps
sbb
stc
jmp
sbb
fiadd
push
cmp
pop
arpl
inc
leave
ins
ins
jb
cmp
push
and
sbb
sub
sbb
jge
and
inc
fmul
jl
pusha
adc
push
in
mov
nop
dec
xchg
push
jl
clc
in
cmp
scas
mov
mov
(bad)
jp
mov
xchg
or
rcr
lods
xchg
sbb
xor
adc
or
xor
xor
inc
dec
push
pop
in
and
loope
push
jmp
retf
or
sub
or
jp
cmp
add
stc
xchg
scas
imul
push
adc
inc
add
dec
in
pop
jmp
mov
cmp
pop
fbstp
lds
inc
and
dec
add
mov
(bad)
cdq
push
pop
and
xlat
add
mov
or
shr
cmp
sub
pop
and
pop
ret
popa
push
scas
out
xor
sbb
rcr
mov
adc
adc
in
jg
iret
inc
ret
xchg
dec
loope
dec
jo
adc
xor
xchg
xchg
imul
and
mov
jmp
fucomp
jp
pop
fisttp
fcomp
shl
jecxz
and
cmp
retf
sbb
xchg
sbb
sti
add
push
pop
shl
dec
mov
cmps
jge
jbe
in
xor
ja
dec
xchg
retf
sti
sbb
cld
mov
movs
sbb
pushf
push
cmp
shl
in
addr16
sbb
inc
repz
mov
mov
je
pop
mov
sub
mov
cs
je
imul
jne
pop
xor
sub
pop
dec
jns
ficomp
or
clc
xor
push
jmp
js
popa
idiv
and
aaa
dec
sbb
fstp
fucomi
daa
ss
mov
jne
jmp
push
dec
xchg
in
push
lahf
xlat
dec
pop
imul
xor
cmp
mov
sub
dec
sbb
fadd
add
mov
repz
or
cmp
aaa
sbb
ss
(bad)
out
ret
shl
(bad)
sbb
rcl
lods
leave
add
sahf
enter
pushf
outs
pop
ds
into
call
sbb
push
sub
popa
pop
xor
adc
shr
mul
cmps
pop
push
loop
dec
push
ins
push
out
sub
push
sbb
xor
outs
mov
cdq
into
push
es
jg
call
dec
cmp
sbb
lea
mov
xchg
add
lahf
ret
shl
sub
scas
sbb
sbb
jmp
cmp
push
push
jle
jnp
mul
(bad)
fwait
add
retf
nop
stc
mov
add
fist
sbb
push
pop
mov
cld
or
test
dec
inc
dec
pushf
(bad)
or
sbb
cmp
jmp
outs
cld
pop
jne
aaa
iret
dec
ins
push
sub
dec
inc
pop
ins
lods
mov
in
sub
jge
mov
stos
test
push
cmp
scas
push
xor
or
and
sbb
lods
call
jge
es
sbb
arpl
xor
(bad)
mov
sbb
fnstcw
sub
push
ja
retf
fsubr
sbb
pop
pop
ror
push
add
sub
ret
xor
inc
loope
jmp
jecxz
mov
cld
call
or
mov
sbb
out
test
push
jnp
mov
sub
mov
push
sbb
repnz
loope
add
iret
je
fidivr
sub
inc
imul
mov
out
fisub
(bad)
jecxz
jmp
xor
bound
retf
mov
cmps
sub
dec
xchg
inc
mov
(bad)
fcom
or
mov
inc
ins
pop
mov
int
sbb
cdq
pop
xor
cwde
stc
cs
xor
push
pop
sbb
sub
xor
adc
push
mov
pop
dec
xchg
sbb
jp
mov
cmps
xchg
or
icebp
inc
add
pop
cwde
push
cli
psubb
jmp
dec
sbb
sti
inc
sbb
inc
pop
push
and
jno
pop
ins
adc
pop
xor
(bad)
xor
mov
add
mov
stos
or
xlat
ins
add
pop
fld
lock
pop
dec
sub
cdq
cmc
les
mov
or
mov
xlat
(bad)
and
ret
(bad)
jo
mov
ficom
dec
xchg
cmp
cs
pop
cmp
popa
test
xor
in
push
stos
and
dec
js
sbb
jecxz
data16
xchg
jo
pop
repnz
inc
add
xor
mov
mov
shl
and
int
or
push
xchg
shl
cmp
daa
dec
inc
call
xchg
iret
mov
xchg
and
sub
cdq
xchg
add
in
dec
test
shr
xchg
mov
cmps
cmp
scas
add
scas
mov
and
sahf
mov
jae
pop
cmps
leave
stos
sti
fiadd
jecxz
or
sbb
jnp
push
sahf
sub
fbstp
push
xor
cmp
ror
repz
sbb
sub
(bad)
aad
fmulp
cld
fdivr
mov
xchg
fsub
push
jmp
dec
pop
dec
je
mov
in
pushf
leave
xchg
(bad)
mov
xchg
pop
mov
es
xchg
jl
fwait
dec
in
cmp
adc
cdq
ins
adc
push
adc
mov
(bad)
mov
fistp
dec
rcr
xchg
mov
sahf
and
add
pushf
das
adc
cmp
jns
pop
sbb
sti
adc
xchg
out
and
mov
mov
mov
mov
jbe
xchg
push
mov
jne
and
scas
fcmovnbe
pop
stos
loope
xor
fcomp
adc
retf
pop
sub
cs
jle
scas
or
and
xor
sbb
ret
xchg
sbb
add
pop
das
call
imul
cmps
sbb
xchg
mov
std
mov
jo
sahf
sub
add
xchg
sbb
pusha
sub
xchg
out
cmp
mov
cmp
retf
xchg
cwde
retf
sbb
jg
push
push
mov
cmp
cmps
push
(bad)
sub
and
out
jecxz
add
pushf
shl
jbe
(bad)
xor
sub
ins
jo
sar
pop
fcmove
popa
push
cmp
inc
rol
ins
jmp
add
nop
push
adc
mov
loope
mov
jo
push
xchg
or
cmp
jecxz
cwde
jb
mov
xor
(bad)
fxch
pop
push
pop
push
cmp
xchg
cmp
je
in
das
and
mov
ds
mov
xchg
pop
add
sub
sar
dec
lods
xchg
xor
xor
lahf
pop
add
and
xor
ins
mov
aad
test
push
add
adc
rcl
sub
fsubr
push
push
dec
cli
xor
les
xor
nop
jmp
xchg
xchg
sbb
(bad)
add
sahf
in
xchg
mov
and
shrd
jnp
cmp
int
lods
in
stc
clc
nop
pop
adc
jnp
dec
mov
es
ret
imul
add
enter
mov
xor
pop
pop
sbb
xor
sahf
mov
loope
pop
and
js
retf
clc
pop
cmp
ret
loopne
and
dec
and
scas
and
dec
hlt
add
int3
sbb
mov
cmp
push
mov
push
sbb
xchg
cdq
jo
sbb
and
mov
cmps
(bad)
pop
ja
push
jg
inc
je
push
pop
out
ds
cld
xchg
push
mov
xor
pop
ins
(bad)
and
xchg
adc
shl
mov
sub
movs
ror
cmp
ins
aas
shl
pop
push
daa
mov
popa
mov
outs
add
fidivr
out
mov
(bad)
jno
mov
sub
fnsave
std
jp
stos
and
fisttp
iret
push
sub
pop
jecxz
jle
mov
cmp
jnp
mov
jb
cmp
in
mov
repnz
inc
scas
xor
and
adc
shl
rol
cmp
mov
sbb
aas
rcl
test
fstp
mov
mul
cdq
inc
jns
loop
cmp
pop
ja
jbe
push
add
cli
or
push
xor
and
dec
fcomp
push
push
retf
xchg
adc
stos
or
outs
xchg
inc
cmp
addr16
cmp
mov
rol
out
shr
dec
pusha
popa
retf
(bad)
pop
xor
add
xchg
cmp
jmp
sbb
popf
sahf
xchg
sub
popa
jae
mov
lock
pop
jb
jle
push
sbb
sub
xlat
xchg
in
cmps
sbb
out
xor
jg
rcr
pushf
shr
jns
pop
nop
xchg
jl
popa
ss
xor
pop
sub
mov
imul
xchg
outs
dec
into
and
fdivr
sbb
icebp
outs
dec
mov
push
jge
xor
maxps
out
dec
ds
lods
and
cli
mov
nop
out
push
into
out
(bad)
fisttp
mov
out
adc
out
mov
je
jecxz
mov
enter
cwde
mov
and
xor
inc
or
test
pop
pop
ins
les
xor
loope
es
jo
int3
sbb
mov
xchg
xchg
addr16
and
mov
pop
or
jmp
inc
push
sbb
cmp
dec
out
xchg
scas
and
ficomp
sbb
sbb
seto
lea
lahf
xor
mov
stos
sar
sbb
xor
add
ret
push
movs
push
imul
xchg
imul
mov
sub
rcl
mov
dec
jecxz
jne
xchg
shl
popf
cli
jne
ss
sub
cld
cwde
outs
pop
push
nop
xor
std
jl
push
sti
and
loope
ins
fsub
js
jne
pop
and
popf
pop
shl
fild
shl
dec
push
mov
ins
dec
in
aaa
out
cmps
ins
pop
(bad)
ds
je
xchg
sbb
in
adc
mov
add
adc
push
mov
lods
lea
push
and
sbb
inc
cmp
out
and
fs
leave
test
(bad)
push
add
shl
xor
and
das
xchg
in
(bad)
mov
das
fld
pop
or
lods
sbb
sti
pop
mov
inc
sub
int
cmp
lods
jp
and
cmovae
mov
xchg
fiadd
push
pushf
mov
jl
jmp
mov
cdq
ins
es
mov
std
jo
pop
push
dec
push
jge
add
ins
mov
or
mov
ins
push
inc
hlt
(bad)
sbb
xchg
pop
ret
loopne
sbb
das
inc
jno
leave
jge
clc
mov
call
xchg
dec
ror
shl
mov
mov
out
xchg
aad
mov
push
(bad)
mov
and
fdivr
loop
pop
dec
pop
outs
push
pop
and
pop
cld
push
outs
or
sti
iret
sbb
mov
in
outs
push
inc
ds
das
inc
mov
sbb
mov
imul
adc
ja
ret
retf
fucomp
(bad)
pop
dec
cmp
in
add
test
into
pop
movs
shl
jp
ret
imul
nop
jns
and
fmulp
std
rcl
push
(bad)
cmc
std
scas
outs
sub
shl
jle
add
jo
xor
dec
add
push
mov
pop
retf
scas
inc
sbb
jg
out
movs
fnsave
das
jecxz
je
sahf
jmp
in
add
and
cmp
dec
jecxz
push
push
dec
xchg
retf
pop
call
sbb
add
push
cmps
dec
or
fadd
fcomp
mov
add
jae
aaa
scas
adc
sbb
dec
jg
outs
pop
cmp
cdq
jo
cmc
jmp
fwait
xor
push
dec
je
or
add
std
xor
mov
push
lods
pop
les
not
dec
ret
into
pop
mov
cmp
or
or
xor
mov
dec
xor
jmp
inc
push
sbb
pushf
push
add
dec
sbb
push
cli
pop
cmp
sti
fimul
mov
adc
je
mov
sbb
ror
(bad)
sbb
push
adc
push
xlat
out
sbb
iret
pop
leave
shl
repz
jno
and
sub
test
shl
not
mov
(bad)
data16
ret
pop
stos
jecxz
pop
std
sbb
xor
xchg
dec
sbb
loopne
outs
add
pop
mov
(bad)
mov
or
xor
aas
ins
fwait
or
es
js
jp
push
sub
jae
arpl
push
dec
rcl
fsubr
mov
pop
mov
sub
dec
loope
dec
mov
jo
popa
outs
push
cs
call
js
jo
shr
imul
xor
cmp
push
js
jmp
add
pop
loopne
inc
fst
sbb
mov
cmp
adc
sub
into
ds
aas
add
popa
xchg
pop
push
in
xchg
push
and
mov
cdq
in
jbe
add
bound
jae
xor
inc
cld
loope
push
sbb
inc
retf
(bad)
out
sbb
pop
in
fwait
inc
lock
cdq
adc
sbb
js
out
outs
cld
imul
adc
pop
into
std
add
mov
jnp
xor
mov
add
out
call
rcl
jmp
or
dec
adc
sub
lock
jge
or
out
dec
les
xchg
arpl
lds
cli
push
or
mov
arpl
mov
loope
ret
stos
pushf
xor
jecxz
inc
adc
xchg
aad
dec
sbb
in
push
icebp
dec
stos
out
fnstenv
cmp
mov
in
xor
sub
and
push
retf
push
rol
dec
out
ins
in
fisub
int
leave
inc
pushf
lahf
outs
movs
cmps
dec
ins
lds
jnp
div
push
add
cwde
fmul
adc
mov
and
pop
mov
movs
mov
dec
(bad)
and
cmc
scas
arpl
scas
or
sub
mov
mov
cmpps
push
sbb
(bad)
mov
addr16
imul
sbb
inc
jae
sti
not
ds
and
add
pop
jmp
pop
(bad)
xchg
push
icebp
cwde
jo
and
retf
mov
nop
sbb
sar
xchg
fsub
(bad)
and
(bad)
sbb
rcr
sbb
and
jne
xchg
mov
mov
adc
fs
cs
mov
mov
in
(bad)
dec
xchg
ret
std
nop
shr
jmp
cmps
jecxz
push
jne
add
xchg
fistp
jl
(bad)
dec
sti
lahf
add
jmp
jl
rcr
or
pushf
imul
inc
lods
adc
add
jecxz
sbb
dec
ins
adc
push
push
push
imul
push
pop
fisub
xchg
add
add
and
sbb
jmp
std
in
dec
mov
cs
das
fwait
in
into
call
dec
pop
shr
sbb
mov
call
cmps
cmps
ins
(bad)
lock
push
mov
add
jmp
mov
daa
and
cmps
pop
js
test
xor
dec
mov
push
data16
shl
and
push
jge
popa
jo
push
(bad)
call
push
jb
daa
std
pushf
iret
rol
pop
mov
in
dec
dec
repnz
(bad)
sar
xor
mov
pop
xchg
adc
sbb
push
addr16
jo
xchg
mov
sub
xor
and
dec
mov
sbb
jbe
add
mov
test
js
push
lock
sub
or
into
sbb
loope
arpl
in
jecxz
sbb
pop
data16
mov
jmp
cwde
push
fild
nop
or
inc
push
push
dec
mov
cmp
push
cmp
sbb
leave
out
dec
sahf
sub
faddp
mov
adc
rol
sbb
or
adc
and
into
data16
mov
in
pop
xchg
fbld
test
bnd
push
jo
repz
(bad)
mov
pop
scas
cld
and
scas
jmp
mov
sub
sar
inc
push
or
mov
adc
inc
add
xchg
std
(bad)
sti
fcom
jmp
into
dec
es
jmp
(bad)
jecxz
ret
xor
sub
out
out
sbb
test
sbb
mov
inc
cmp
jno
test
xchg
arpl
and
(bad)
pop
adc
or
sub
lods
sub
mov
sub
and
pop
inc
popa
lds
sub
add
jmp
leave
xchg
in
adc
pop
fiadd
arpl
dec
ins
fimul
bound
sahf
in
adc
in
mov
movs
test
scas
fild
add
je
dec
cmovns
jg
and
lods
cdq
imul
ret
icebp
xchg
or
ins
popa
cdq
mov
lods
pushf
rcl
or
rcl
lods
sbb
jo
and
push
or
lods
out
mov
push
sub
pop
add
lods
sbb
out
and
(bad)
(bad)
ret
sar
jns
push
je
sbb
ds
repnz
add
repnz
xor
ror
ret
adc
jmp
sub
and
cmp
rcl
imul
stos
in
mov
stc
jmp
adc
mov
or
jae
gs
pop
push
fwait
sbb
nop
mov
xchg
scas
jmp
call
mov
xor
int
add
mov
push
call
mov
(bad)
call
add
inc
cmp
out
mov
add
sbb
adc
ins
cmps
aas
shr
cmp
push
xor
pop
adc
dec
mov
sbb
add
ds
sbb
mov
jb
addr16
adc
mov
(bad)
pop
into
fwait
stc
push
and
dec
ss
and
xchg
add
cld
jle
icebp
add
clc
mov
out
and
out
adc
dec
loope
repz
jl
push
push
test
sub
cli
pop
dec
pop
pop
lahf
cdq
and
imul
into
fyl2x
sbb
mov
sbb
je
or
sti
sti
movs
or
ds
ret
pop
out
shl
cs
shr
pop
cmp
mov
xor
(bad)
mov
and
push
popa
pop
loop
pop
out
jnp
dec
inc
pop
and
adc
sub
shr
mov
or
sub
pop
xor
push
push
jle
rcr
jecxz
mov
xor
pop
mov
mov
pop
and
sbb
in
sbb
cdq
hlt
sbb
es
mov
or
jbe
adc
sbb
lahf
and
add
xchg
in
std
je
mov
data16
inc
xchg
aam
sbb
sahf
mov
imul
and
xchg
add
jnp
in
xchg
xchg
jmp
pop
movntps
push
(bad)
scas
jne
movs
adc
les
or
xchg
mov
inc
(bad)
xlat
cs
out
fs
les
ds
jle
fld
mov
retf
ror
sbb
into
shr
and
jmp
les
and
mov
(bad)
jle
es
out
and
test
jno
rcl
mov
adc
push
jmp
xchg
movs
pop
mov
mov
add
mov
pusha
dec
mov
js
cmp
mov
xor
cmp
mov
pop
loopne
in
or
sbb
inc
cli
enter
pop
fsubp
lea
es
ja
and
loopne
jp
cmp
inc
fcmovnu
inc
mov
add
mov
sub
in
outs
mov
push
ins
jbe
sbb
in
mov
mov
pop
add
int
add
call
add
mov
xlat
inc
lds
mov
mov
ins
mov
test
jmp
cmp
sbb
push
in
pop
xchg
mov
pop
cmc
sahf
sbb
mov
sbb
cmc
lds
fbstp
and
fucomi
shl
and
mov
mul
jmp
xor
or
sti
mov
mov
dec
test
mov
cwde
jne
test
pop
push
sar
pop
aam
jl
mov
and
jne
sbb
ins
adc
out
mov
stos
add
rcl
pop
test
push
mov
jb
in
out
lahf
pop
dec
stos
call
sbb
mov
pop
xor
and
push
cld
push
pusha
jae
rol
loop
add
test
ja
js
cmp
inc
xchg
jecxz
js
and
icebp
push
in
adc
shl
xor
es
and
push
(bad)
xor
cli
in
pop
mov
xchg
mov
or
cdq
sbb
sahf
add
or
pop
or
test
(bad)
pop
cmp
inc
arpl
sub
test
cmp
sti
jbe
xor
das
(bad)
jno
lahf
rol
sbb
mov
int3
inc
and
push
or
fmul
mov
pop
iret
leave
mov
mov
mov
data16
lahf
ins
sub
jo
add
ja
sti
rol
fstp
push
jecxz
ret
jl
je
pop
and
loopne
sub
push
mov
cmp
and
fsub
scas
sbb
adc
(bad)
lahf
neg
cmps
add
mov
mov
clc
inc
jo
jecxz
sub
out
int3
mov
lock
in
repz
fadd
dec
or
and
xchg
jle
scas
xchg
call
mov
mov
sub
and
adc
ja
ss
push
xlat
ds
dec
and
xor
inc
sub
add
and
mov
and
retf
mov
out
push
cmp
out
push
or
jg
mov
or
ret
xchg
mov
dec
pusha
and
mov
clc
retf
push
add
dec
xchg
movs
and
push
mov
mov
and
dec
sbb
or
ss
or
jp
into
pop
imul
or
outs
dec
dec
std
pusha
mov
mov
add
push
fdiv
push
mov
adc
ja
mov
ret
stos
(bad)
dec
std
xor
sti
jmp
int
dec
aaa
movs
sbb
(bad)
pop
jns
pushf
cmps
retf
mov
and
jl
push
jmp
jbe
call
(bad)
fsub
push
xchg
xlat
imul
mov
cs
add
and
mov
dec
fsincos
pop
cwde
cmp
sar
sbb
push
sbb
mov
sbb
pop
mov
sbb
push
add
cmp
xchg
push
icebp
jmp
jbe
out
pop
daa
sahf
js
fnstsw
sub
mov
lods
and
ds
out
iret
pushf
add
pop
jne
nop
cmps
cmps
and
(bad)
cmp
cmp
mov
in
pop
outs
mov
sahf
cwde
and
jecxz
jbe
push
xchg
mov
sub
sbb
jne
mov
shr
adc
inc
inc
dec
mov
fadd
add
cmp
not
and
or
fnstcw
sbb
dec
adc
aas
and
ds
imul
imul
xor
xchg
in
dec
adc
ficomp
in
bound
push
ret
popf
mov
cmc
shl
sub
push
stc
gs
xor
test
xor
daa
cmp
mov
push
fidivr
push
add
outs
adc
and
push
adc
or
jle
jbe
fwait
inc
ret
add
rcl
add
arpl
sahf
xor
add
loop
sbb
jmp
cmps
or
pusha
stos
in
mov
mov
retf
(bad)
pop
ret
and
xchg
lds
ror
inc
(bad)
inc
jge
push
dec
test
cmp
xchg
fldenv
repz
push
fld
jecxz
mov
pop
dec
xor
jmp
pushf
sub
mov
and
clc
sub
adc
and
push
pop
sahf
pop
and
(bad)
cdq
inc
xor
jbe
leave
cmp
mov
aad
push
pop
add
and
sbb
cwde
repnz
imul
int
scas
jnp
cmp
pop
jo
fcomp
sar
cld
xchg
scas
xor
jle
ss
or
pop
jmp
lods
xor
add
pop
pop
std
jmp
adc
inc
inc
cmp
ficom
pop
cmp
or
inc
mov
xchg
xlat
add
inc
repz
dec
sbb
fwait
and
xchg
adc
psubusw
pop
mov
adc
xor
cmp
sti
inc
or
int3
sub
pop
scas
mov
shl
mov
add
xor
jmp
mov
hlt
and
mov
fwait
mov
sbb
movs
mov
cmp
dec
sbb
inc
xchg
mov
out
test
cld
inc
shr
xlat
push
mov
inc
call
pop
sub
sub
push
nop
mov
mov
pushf
jecxz
cmp
sbb
and
sbb
push
arpl
jbe
shl
or
enter
cld
repz
lods
aaa
cmps
xchg
data16
sbb
cmps
xchg
jp
imul
pop
ins
jo
add
popf
sar
test
test
or
mov
popa
cmp
ds
outs
push
stos
arpl
inc
and
mov
popf
sti
and
jo
pop
fild
push
outs
inc
xlat
mov
adc
sti
call
outs
(bad)
dec
cld
fsub
mov
push
jmp
mov
int
mov
out
(bad)
pop
xor
adc
mov
jl
ficomp
icebp
sbb
sbb
faddp
ins
jmp
and
dec
imul
int
pop
fstp
dec
in
jns
sub
stc
cwde
cld
fcmovnb
push
stos
xor
call
jmp
in
js
jmp
sbb
repnz
out
sar
aam
add
movs
dec
adc
out
add
(bad)
outs
icebp
pop
stos
(bad)
rol
ins
aas
jmp
cmp
jg
retf
xor
sub
and
popf
and
mov
push
xor
mov
(bad)
xchg
mov
mov
mov
xlat
inc
or
pop
pop
loop
cmps
sbb
or
(bad)
xchg
shr
mov
or
adc
xchg
out
and
lods
jmp
fwait
mov
ins
xchg
jo
in
call
xor
outs
pop
sub
xor
into
ins
in
fidiv
sti
pop
add
pop
xor
in
aaa
lods
das
stos
std
xchg
je
(bad)
fisttp
icebp
add
fs
pusha
retf
xchg
nop
ficomp
test
sti
test
fld
arpl
dec
cmp
mov
fs
xchg
iret
mov
jmp
imul
(bad)
mov
and
mov
jg
mov
cmp
aam
adc
jnp
fstp
mov
call
fistp
sub
repnz
and
bound
popf
xlat
outs
sbb
(bad)
pop
add
inc
adc
push
mov
stos
inc
xor
xor
(bad)
aas
mov
jecxz
pop
xor
fisttp
mov
jae
aam
mov
(bad)
rol
ror
sahf
pusha
push
int
dec
shr
sbb
into
xor
cmp
sub
fcmove
jmp
jmp
stos
and
fadd
bswap
addr16
jo
repz
shld
jle
adc
mov
fcomp
pop
fisubr
sbb
sbb
push
jecxz
push
(bad)
call
icebp
inc
fidiv
jae
rcr
je
mov
jno
outs
pusha
mov
pop
test
hlt
fs
scas
es
pop
out
pop
out
xchg
addr16
adc
ret
sbb
(bad)
popa
or
aas
sbb
fimul
adc
fwait
mov
add
mov
xlat
mov
jb
xor
pop
mov
adc
mov
mov
push
xor
push
xor
sub
or
daa
rcl
xlat
pushf
add
and
cmp
pop
and
sar
push
fidiv
dec
call
add
or
addr16
popa
popa
lock
stc
and
sub
or
dec
and
gs
fldlg2
pop
jmp
out
cmp
bound
sub
adc
(bad)
fsubr
rol
xor
popa
enter
xor
push
fidivr
aas
xchg
pushf
fstp
sub
push
cwde
and
cmp
and
mul
jns
dec
fnsave
shl
add
adc
mov
cmp
cld
fcomp
xor
sbb
mov
xchg
ins
and
mov
call
mov
nop
mov
inc
mov
lods
cld
cli
sbb
adc
mov
push
mov
pop
mov
cmp
inc
mov
sbb
cmp
clc
adc
cmp
xor
fwait
mov
pop
ret
repnz
xchg
push
scas
aaa
data16
or
or
ret
loopne
xchg
sbb
fwait
xlat
xchg
jmp
adc
xchg
ret
mov
mov
push
(bad)
sbb
stc
xchg
std
ins
cmps
fcomp
jmp
jge
pop
mov
jno
mov
xchg
fsub
pop
pop
idiv
add
mov
jecxz
inc
cmp
pop
in
loopne
push
mov
push
cs
xlat
inc
sbb
pop
mov
mov
mov
mov
nop
mov
(bad)
dec
in
sub
and
push
je
jmp
mov
ss
mov
mov
inc
fild
daa
jl
cdq
xor
add
(bad)
les
add
pop
push
cmp
and
outs
mov
and
sub
mov
leave
stc
and
xchg
inc
sbb
ror
and
popf
mov
xlat
push
pusha
xor
test
pop
dec
sub
sbb
or
sub
pop
shl
movs
imul
push
fld
adc
xchg
(bad)
and
std
(bad)
mov
inc
mov
pop
jo
cmp
cmp
xor
jno
fdiv
dec
dec
(bad)
pop
push
fiadd
std
fistp
aas
and
xor
dec
sbb
nop
adc
push
ds
push
(bad)
mov
mov
adc
ja
inc
mov
inc
and
sbb
sub
xchg
test
cmc
cmc
sub
hlt
pushf
jo
xchg
and
sub
je
jle
push
rcr
cwde
loop
imul
pop
sbb
and
jge
aaa
fstp
dec
fcmove
cmp
jnp
out
aam
jb
dec
inc
fstp
push
xchg
cli
mov
or
dec
rol
nop
popf
outs
sbb
(bad)
cmp
outs
dec
pop
addr16
and
sbb
xor
fs
pop
inc
and
jo
or
mov
cmc
adc
aad
scas
fmul
jns
mov
jbe
mov
aas
shl
add
xchg
popf
rcl
(bad)
jmp
sub
(bad)
jb
adc
repz
mov
adc
sti
xchg
jp
and
xlat
iret
repnz
push
cmp
test
xchg
not
mov
test
pushf
ret
xlat
cs
push
sub
les
ror
xchg
cld
outs
ss
iret
pop
xor
pop
push
sbb
shl
mov
inc
shl
shr
mov
xor
sbb
and
mov
movs
dec
push
xchg
pop
stos
sbb
mov
lea
ffreep
mov
push
setle
and
or
mov
xchg
mov
jmp
dec
mov
add
and
imul
sub
xor
pop
rol
add
data16
lods
fcom
cmp
js
loope
mov
lods
fnsave
repnz
pop
ror
mov
dec
cs
ret
fisub
sbb
test
out
pop
add
mov
imul
cmps
std
mov
mov
inc
dec
movs
scas
iret
xchg
sbb
nop
in
lahf
mov
std
sub
jge
out
xchg
cmp
(bad)
gs
pusha
movs
call
shr
out
lods
test
enter
sbb
pop
mov
adc
fdivr
push
int3
jbe
or
or
cmp
stc
idiv
and
push
lods
shr
add
mov
mov
mov
push
or
jp
sub
rcl
push
jecxz
cwde
and
push
jmp
nop
mov
jp
xchg
fxch
push
push
shl
sub
pop
jp
xor
int3
mov
mov
ret
dec
mov
sbb
sbb
dec
mov
fidiv
mov
out
push
ins
hlt
aas
sbb
add
pop
xchg
or
leave
mov
imul
jbe
mov
ror
xchg
cwde
imul
and
pop
(bad)
and
cmp
or
sbb
mov
in
shl
xor
sbb
sti
cs
mov
clc
pushf
adc
nop
out
or
pop
add
fisttp
inc
mov
and
inc
nop
std
jb
jo
test
sub
inc
dec
lock
push
daa
mov
cmp
adc
inc
and
pop
xor
or
ins
scas
mov
jbe
stc
push
fadd
push
fld
pop
xchg
(bad)
mov
adc
nop
xchg
mov
and
fadd
pop
sbb
push
retf
sbb
inc
mov
retf
push
inc
mov
mov
not
cld
shr
xchg
repnz
xchg
shl
cs
fdiv
pusha
fdiv
leave
and
mov
and
mov
cmp
xor
out
and
or
xchg
cmps
or
cmp
xchg
adc
dec
pop
test
ror
jmp
or
das
pop
pop
cld
push
aas
push
dec
fcomp
push
in
add
int3
in
and
loop
sbb
lahf
scas
sbb
jge
loope
and
sbb
mov
mov
ja
jmp
mov
mov
sar
fmul
int
pop
mov
sbb
repz
adc
outs
ror
xchg
cmps
push
and
into
loope
retf
and
cli
dec
push
inc
loope
movs
or
add
sahf
daa
and
aad
sbb
cdq
mov
sbb
repnz
cmps
das
jge
or
(bad)
jl
sbb
and
popa
add
jbe
adc
xchg
dec
pusha
push
ja
inc
mov
add
pop
cmp
xchg
fistp
or
(bad)
call
stc
nop
and
jbe
imul
xchg
push
inc
xchg
or
leave
xor
js
cmp
dec
fldenv
(bad)
cmp
add
or
add
jge
push
retf
mov
into
ret
xchg
(bad)
pop
pushf
cmc
js
jbe
cmps
inc
call
inc
out
sub
in
sub
pop
cmp
ds
gs
add
and
shl
or
repz
icebp
dec
mov
sub
in
push
xor
addr16
mov
inc
in
push
aad
sub
pusha
jmp
cld
movs
icebp
inc
stos
cld
pop
jle
xlat
lods
mov
push
sub
sub
movs
xor
pop
neg
jle
addr16
jg
call
lods
dec
(bad)
out
and
ss
popa
(bad)
fmul
cli
xor
dec
inc
cmp
ds
add
aad
jo
jbe
sbb
jne
stc
enter
mov
or
push
xor
fcomp
xchg
fwait
sbb
mov
sbb
mov
ins
lods
mov
xor
xchg
pushf
mov
pop
add
mov
das
jbe
ins
fidivr
cs
pop
add
in
addr16
fild
stos
mov
mov
fstp
fdivr
xor
fst
push
into
dec
jbe
dec
inc
aas
iret
push
push
and
sbb
sar
ret
js
and
jg
adc
aad
clc
xchg
push
loope
lds
mov
rol
pop
dec
jbe
cmp
lea
sub
inc
mov
xchg
lds
pop
fidivr
out
(bad)
jb
jo
mov
jle
mov
fwait
sub
pop
adc
int3
scas
in
cmp
shr
pop
or
mov
mov
cmp
pusha
cmp
pop
cld
sbb
mov
popf
sbb
fstp
dec
cmp
cmp
out
lock
sbb
fild
fsubp
dec
pop
sbb
xchg
cwde
test
outs
pushf
(bad)
cmp
dec
in
cdq
fstp
adc
aaa
sub
call
pop
data16
outs
pop
ins
dec
and
test
or
pushf
std
xchg
ret
iret
jmp
test
mov
out
pop
pop
test
pop
mov
addr16
pushf
repz
ss
pushf
aas
or
jno
je
out
sbb
sti
xchg
mov
push
cwde
add
push
(bad)
jl
inc
ffree
es
pop
and
mov
jecxz
movs
vmovlps
retf
xchg
or
jl
sub
adc
mov
fcom
(bad)
std
ds
or
test
push
test
pop
(bad)
push
sbb
adc
shr
mov
in
repnz
cmc
jmp
fcomp
scas
push
lds
mov
jecxz
pop
cld
and
push
push
mov
test
mov
out
pop
(bad)
mov
out
out
fs
or
jg
aad
jno
ret
push
xchg
iret
sti
cmp
pop
jb
xor
lea
aam
sbb
stos
es
scas
xchg
push
in
sub
xor
xchg
hlt
jl
int
push
dec
idiv
call
je
(bad)
in
ss
pop
fcom
rol
ret
dec
into
sti
outs
fnsave
data16
es
mov
or
pop
adc
retf
push
in
fst
das
jmp
dec
adc
(bad)
je
sbb
loopne
aad
sbb
stos
in
movs
stc
test
xchg
rcr
fstp
fisttp
das
clc
mov
pop
dec
push
xor
lock
sub
iret
push
push
mov
fwait
xlat
xlat
pop
inc
pushf
sub
test
sbb
mov
sub
in
scas
scas
mov
das
fsub
hlt
xchg
(bad)
fsubr
inc
sub
cli
sar
dec
sti
adc
outs
(bad)
xlat
sbb
out
mov
aas
mov
sbb
mov
sub
add
repz
xchg
adc
shl
out
pop
push
and
push
jmp
fsub
mov
pop
sbb
dec
fwait
aad
inc
mov
and
fnstsw
les
icebp
sbb
fstp
sbb
es
dec
mov
and
pop
out
sbb
pop
push
sub
gs
fdivr
sbb
push
jmp
sbb
(bad)
pop
test
inc
sbb
nop
sbb
test
mov
or
jl
loop
data16
je
or
cmp
sti
mov
ret
mov
inc
daa
fucomp
pop
sti
mov
sbb
fbld
push
rcl
add
in
mov
std
mov
stc
sub
ins
sti
xor
sbb
outs
inc
sbb
out
xor
in
add
imul
je
push
sahf
gs
push
dec
ja
outs
mov
xchg
mov
mov
loope
in
cmp
fsubr
jecxz
xor
dec
adc
jmp
fcom
mov
or
addr16
in
pushf
fidivr
or
sbb
sbb
xchg
addr16
mov
retf
pop
std
data16
aas
inc
int3
fs
jecxz
push
int
or
mov
push
dec
and
stc
frstor
aas
(bad)
mov
xor
and
in
outs
add
iret
leave
jne
push
jmp
xor
xchg
ss
pop
js
mov
pop
pop
cmp
jnp
cli
fistp
div
add
xchg
sahf
(bad)
jns
add
stc
out
mov
stos
loop
mov
div
and
pop
clc
inc
movs
pop
ins
out
in
mov
test
sbb
lahf
sti
push
fstp
rcr
inc
bnd
fsubr
mov
pop
fldz
(bad)
mov
xor
std
nop
xor
xchg
jns
movs
pop
cwde
sbb
sti
mov
call
jo
call
and
(bad)
icebp
imul
pop
adc
xchg
pusha
fnstsw
cmps
aaa
jmp
or
scas
bound
sbb
lahf
(bad)
fild
test
cmp
movntq
test
cmps
in
push
sti
adc
add
call
mov
shl
mov
sbb
ficomp
sbb
daa
jle
inc
ror
leave
push
mov
(bad)
cmp
fs
out
out
fst
aas
outs
pop
adc
sbb
dec
(bad)
std
cmps
cmp
mov
mov
fisub
push
jmp
fdiv
out
test
inc
ficomp
xchg
pop
(bad)
dec
push
cmp
and
out
pop
sub
in
dec
add
sbb
jecxz
aas
pusha
test
inc
sbb
retf
pop
ds
jns
aaa
ficomp
sub
pop
adc
sar
lea
cmp
lods
and
jp
addr16
sub
pop
dec
sub
arpl
stos
xor
in
cs
adc
cmp
push
jge
sbb
ins
pop
and
push
sub
jno
push
push
aas
pop
jmp
ret
and
data16
adc
leave
lods
push
mov
lea
add
xchg
ficomp
pop
mov
ins
lods
fnstsw
ss
call
(bad)
std
es
add
gs
repnz
call
call
sar
xor
jg
aam
sub
cmp
mov
pop
jns
pop
ins
into
mov
cmp
jmp
(bad)
ret
add
jg
lahf
sbb
xchg
sbb
dec
aam
fs
jecxz
ficom
fstp
jae
mov
push
sbb
mov
mov
adc
sahf
cmp
repnz
cli
pusha
outs
jecxz
pop
pop
xchg
scas
sahf
call
jne
jmp
jno
scas
lods
out
sbb
and
das
pop
movs
imul
add
xchg
aad
sub
jmp
add
ds
mov
dec
or
xchg
mov
js
es
in
pop
jmp
(bad)
pop
fnstsw
sub
fsincos
cmp
les
out
rol
out
popf
sahf
fist
mov
movs
test
cmp
add
dec
ror
lahf
mov
scas
pop
fwait
pop
push
js
dec
cmps
scas
(bad)
ins
test
push
pop
fbstp
popf
pop
inc
sahf
fstp
adc
xchg
fidivr
mov
mov
es
xchg
mov
fidivr
cli
imul
aam
jns
sti
sbb
sbb
mov
sti
mov
sbb
dec
shl
cmp
cmp
mov
jle
mov
cmp
jecxz
mov
inc
jecxz
mov
fisub
mul
das
sbb
xor
xchg
sbb
pop
jmp
mov
leave
jnp
dec
and
or
sbb
mov
mov
movs
jle
retf
push
out
add
mov
lods
and
dec
inc
clc
movs
mov
mov
mov
adc
idiv
in
popf
inc
mov
and
jnp
and
std
fisubr
add
inc
test
scas
out
xor
jle
clc
xchg
add
xchg
in
or
sbb
mov
add
js
mov
fs
mov
adc
mov
in
cmp
retf
fcom
(bad)
cvtdq2ps
inc
sar
shl
(bad)
mov
mov
mov
pusha
and
lds
add
aam
and
cli
pop
xor
ins
ficomp
(bad)
aad
push
stos
jne
mov
fmul
dec
in
mov
jge
fimul
retf
mov
xor
psrlw
fwait
and
cmp
push
shl
pop
mov
and
and
push
cmp
jno
shl
loope
pop
inc
les
cmp
sbb
mov
sbb
jno
push
xor
adc
outs
fmul
call
ins
xchg
outs
cld
les
pop
and
sbb
faddp
push
pcmpgtd
cdq
movs
lods
ss
cdq
cmps
add
cmp
std
fadd
pop
into
lods
mov
leave
(bad)
leavew
and
pusha
cmps
inc
clc
dec
sti
xor
icebp
sub
stos
pop
sbb
ret
mov
adc
jp
xor
pop
fwait
mov
mov
stc
push
add
mov
dec
test
mov
cmp
je
lea
movs
fistp
xor
xchg
xchg
outs
iret
adc
pop
stos
jecxz
aas
mov
int
sbb
add
add
cld
lea
sti
mov
into
xor
pop
imul
pop
icebp
loopne
les
mov
cmp
dec
add
nop
popf
imul
dec
cld
xchg
jmp
cmp
jecxz
cmps
and
xor
mov
mov
leave
and
out
cmps
loope
cs
popf
fcmovnbe
sub
out
mov
arpl
add
and
sti
(bad)
pop
inc
and
push
(bad)
mov
or
fild
pop
(bad)
sbb
xor
scas
add
pop
add
ss
push
stos
fwait
pop
out
and
inc
xor
mov
xchg
push
or
dec
add
ins
out
cdq
inc
sbb
jmp
cmc
je
sub
mov
nop
cs
jae
push
xchg
pop
sahf
and
mov
sub
adc
and
xchg
mov
add
jl
imul
(bad)
sbb
sbb
es
xor
sbb
stc
sbb
sbb
inc
xor
mov
pop
mov
cs
ds
std
push
call
cmp
sub
ins
mov
or
lahf
std
lods
and
inc
or
xor
cmp
pop
or
and
shl
cmp
daa
xor
cwde
xor
dec
into
lds
mov
sub
repz
dec
jne
into
imul
mov
pop
shr
cs
cmp
and
mov
ss
dec
pop
xchg
push
mov
iret
and
in
jmp
inc
cmps
sbb
or
dec
mov
icebp
sbb
(bad)
fild
repz
rcr
cmp
rcl
xor
and
add
and
dec
shl
mov
pop
clc
cmc
adc
sbb
je
test
test
sti
pop
xor
js
ins
mov
(bad)
xlat
arpl
sti
and
shl
cs
lock
iret
mov
push
jbe
int3
jae
inc
or
adc
xchg
mov
fnsave
cmps
je
popa
pop
push
mov
xchg
adc
adc
gs
and
rcr
jno
pop
nop
rcl
stos
pop
shr
out
mov
sbb
daa
sub
loop
retf
xor
xlat
dec
ds
push
pop
shr
and
shl
mov
mov
sbb
add
stos
rcr
icebp
iret
mov
mov
(bad)
mov
mov
xor
cld
in
xchg
mov
sub
fwait
test
or
ja
jl
test
cmc
jmp
(bad)
lods
xor
iret
sbb
sti
xchg
lock
in
das
cmp
enter
xor
outs
rcr
scas
pop
cld
call
mov
push
stc
jnp
cmp
sbb
fwait
arpl
add
jo
adc
xchg
jno
cld
ror
cmp
sub
and
inc
std
mov
pop
fistp
xchg
sar
sbb
(bad)
std
and
inc
add
iret
cwde
es
je
out
cmp
dec
inc
mov
push
sub
cmps
inc
dec
jnp
(bad)
(bad)
adc
mov
xor
sub
clc
(bad)
cdq
shr
sub
mov
mov
in
fcomp
pop
jg
ret
sbb
repnz
nop
aad
push
push
xchg
or
add
adc
movntq
mov
inc
cmp
mov
lock
and
pop
out
or
xchg
mov
add
ss
fdiv
cmp
pop
pop
or
shl
mov
and
in
sbb
test
int3
pop
rol
xchg
leave
jae
sti
mov
loop
imul
jne
enter
ficomp
and
mov
xor
sbb
sbb
(bad)
dec
cmps
in
movs
push
adc
dec
mov
fstp
xchg
fcmovnb
fidiv
push
daa
jmp
lods
xchg
or
mov
les
mov
shr
frstor
jge
xor
out
loope
gs
(bad)
std
inc
xchg
sbb
inc
in
cs
sbb
aam
jecxz
(bad)
stos
sbb
pusha
jbe
mov
jmp
popf
inc
lds
test
sar
inc
aad
imul
sti
in
js
rol
fwait
mov
jo
jno
sub
xor
inc
sti
sbb
pop
pusha
jmp
stc
add
xchg
ret
dec
inc
fucomi
adc
sbb
mov
call
push
cmp
fucom
shl
jae
inc
pop
xor
mov
aam
mov
sbb
cmp
sub
and
xor
pop
frstor
add
jno
aam
repz
cdq
fcomp
or
mov
push
cmp
sub
(bad)
out
jp
push
repz
cdq
mov
cmps
xchg
ins
and
aaa
mov
ret
mov
xchg
in
add
mov
inc
pop
jg
js
sbb
jmp
pop
inc
and
in
cmps
dec
mov
std
mov
sbb
(bad)
cmp
inc
sbb
test
cdq
fiadd
sub
scas
icebp
std
or
std
cmp
pop
push
imul
dec
stos
sti
xchg
in
jmp
adc
ret
pop
out
mov
jmp
mov
rcr
fmul
sahf
mov
es
xchg
mov
mov
and
fldcw
pushf
out
inc
aaa
out
shl
or
jns
test
into
jbe
push
cmp
in
int
add
in
and
pop
int
add
xchg
aaa
cmps
popa
mov
test
pop
jl
out
sub
in
cmp
pop
daa
lods
inc
cs
add
inc
fcom
adc
xlat
cdq
popf
mov
jbe
lods
rcl
(bad)
inc
or
jge
je
fwait
std
into
xor
and
xchg
mov
in
jp
call
ss
mov
push
mov
fwait
xlat
mov
jl
mov
cmp
hlt
mov
inc
xor
popf
call
adc
xor
ret
pushf
sbb
ss
add
fsubr
repnz
jmp
inc
pop
mov
pop
call
ja
xor
lss
mov
adc
aaa
xlat
pop
xor
xchg
mov
push
pushf
fidivr
(bad)
cdq
test
pop
(bad)
(bad)
sbb
xor
out
push
into
loopne
aad
push
(bad)
dec
mov
xor
pop
mov
and
adc
je
add
repnz
dec
dec
mov
or
loopne
push
out
fild
fistp
scas
inc
dec
outs
add
jecxz
rcr
adc
mov
jp
nop
inc
jae
out
movs
(bad)
xchg
pushf
push
inc
shl
retf
add
mov
cli
cmc
dec
sbb
and
xchg
xchg
mov
sbb
pop
out
cli
pop
xor
mov
ficomp
xchg
push
mov
pop
pop
adc
test
push
inc
ins
shl
stc
(bad)
fst
jnp
cmp
cmp
mov
loope
jmp
mov
test
mov
xchg
add
adc
jne
movs
xor
inc
outs
mov
cld
rcl
cmps
and
retf
sub
sar
inc
or
jmp
js
out
push
mov
outs
sbb
and
mov
jmp
shl
adc
mov
and
(bad)
jle
and
aas
lock
call
xchg
ficomp
cmp
lahf
pop
xor
xchg
retf
movs
mov
shr
cmp
inc
pusha
sub
faddp
pop
retf
pop
jecxz
(bad)
jmp
daa
dec
xor
and
leave
pop
aam
or
test
cli
jmp
iret
cmp
push
push
xchg
sub
int3
sbb
adc
fistp
pop
jns
js
mov
imul
nop
mov
xor
in
sub
push
and
sub
scas
(bad)
pop
dec
sar
or
int3
sbb
xor
je
mov
inc
jge
push
sbb
dec
int
imul
xor
xor
jo
loop
lods
imul
fistp
ja
retf
popf
or
cmps
mov
sub
adc
fiadd
int
xor
fwait
retf
pop
add
retf
pop
mov
fimul
mov
inc
test
js
sbb
cmp
or
test
adc
in
imul
xor
push
call
scas
mov
(bad)
dec
outs
sbb
pop
pop
inc
xchg
pop
push
sti
mov
stos
sub
sbb
pop
xchg
ret
in
add
pop
sbb
test
mov
inc
(bad)
dec
sbb
cmps
test
scas
repnz
inc
or
adc
addr16
mov
push
stos
mov
xor
sbb
xor
retf
mov
enter
cli
cld
clc
sub
inc
(bad)
pushf
pop
jno
cmps
mov
lahf
aam
push
push
fldcw
and
mov
jnp
xchg
jp
dec
mov
movs
fimul
and
test
cld
dec
pusha
inc
sbb
outs
mov
mov
mov
ja
aam
sub
mov
jmp
dec
shl
mov
(bad)
inc
push
sar
sbb
cmc
xor
pop
stc
xchg
jmp
jbe
aam
enter
add
fstp
and
cli
iret
mov
or
push
mov
xlat
sti
pop
in
sub
push
jl
pop
xchg
dec
push
nop
ret
repnz
popf
xchg
add
jge
nop
out
sub
xchg
mov
(bad)
std
push
fistp
clc
test
dec
inc
inc
hlt
sahf
je
pop
sub
mov
ins
jmp
pusha
jns
jmp
aaa
sub
mov
popa
cmps
push
xchg
lea
mov
xchg
or
sbb
ins
xchg
loopne
push
push
adc
add
dec
(bad)
ins
out
clc
push
aad
mov
daa
dec
inc
mov
mov
stos
push
jmp
addr16
sbb
fistp
retf
scas
fisub
pop
mov
imul
xor
mov
fbstp
stc
xor
push
or
test
jmp
adc
jmp
and
mov
sbb
pop
jecxz
xchg
sub
popf
addr16
mov
sub
xchg
push
rcr
sub
gs
and
pop
inc
cmp
or
movs
sbb
cdq
cs
cli
inc
pop
mov
mov
enter
repz
pushf
mov
sbb
dec
push
push
adc
jmp
adc
adc
dec
cmp
ror
mov
mov
test
(bad)
je
xchg
cld
aaa
mov
push
addr16
aad
and
dec
xchg
mov
neg
sub
ret
adc
test
and
data16
add
and
add
jnp
(bad)
out
sbb
popf
mov
xor
ja
pop
and
rcr
ficom
mov
rcl
out
shr
ret
mov
cmp
push
sbb
adc
lock
xor
sub
or
fst
(bad)
call
in
stos
mov
std
jl
int
jnp
mov
push
imul
and
jnp
daa
xchg
add
cmp
mov
adc
rol
ret
lods
cmp
js
inc
cdq
data16
xor
pop
jns
js
and
(bad)
jecxz
stc
push
jnp
inc
in
fnsave
(bad)
scas
(bad)
push
test
inc
loop
sub
jmp
add
cmp
xor
addr16
xor
jle
pop
sbb
and
ret
sbb
cmp
sub
and
adc
mov
xchg
cdq
retf
lods
or
sbb
mov
pushw
mov
mov
lea
cmp
cld
jns
mov
pop
idiv
mov
cmp
jecxz
pushf
xchg
lds
and
pop
sub
xchg
and
adc
mov
into
es
pop
add
and
mov
cmp
lods
sti
add
sub
sbb
pop
pop
push
sbb
imul
mov
ds
mov
jecxz
sbb
rcr
fsubr
push
pop
mov
cmp
xor
aas
mov
mov
xchg
inc
outs
movs
sti
pop
scas
movs
lds
add
imul
fimul
arpl
and
mov
sbb
cmp
test
inc
adc
test
mov
cmp
mov
jmp
mov
mov
aaa
jmp
push
fdiv
(bad)
outs
and
jnp
leave
xlat
pop
add
sahf
sub
push
pop
fwait
mov
fcom
or
sbb
push
mov
jne
cmp
jp
sub
and
es
fsubr
loope
mov
push
gs
scas
stos
je
cdq
xor
push
jmp
repz
cmp
sti
add
test
gs
mov
pop
mov
add
imul
mov
ret
into
shr
test
sbb
dec
call
cmp
pop
cmp
out
js
inc
pop
test
or
xchg
mov
xchg
add
and
sar
pop
sbb
neg
retf
in
fimul
pusha
cmp
(bad)
test
pop
mov
push
adc
dec
mov
shl
cdq
test
xchg
cmps
sub
jecxz
sbb
ds
(bad)
jmp
cs
nop
cs
mov
(bad)
out
adc
xchg
rcl
das
xchg
pop
add
add
stc
in
fcom
cmps
(bad)
out
inc
mov
dec
xor
jmp
dec
lock
xor
fld
nop
outs
out
and
dec
sbb
dec
xor
outs
mov
fsubrp
lahf
jl
push
ret
repz
icebp
inc
cmp
jge
sbb
les
loop
addr16
xlat
sbb
jmp
hlt
into
jae
call
push
out
call
xchg
and
retf
pusha
and
stos
cli
pop
pop
sti
cwde
in
ret
stos
jmp
ss
das
out
lahf
xor
inc
sbb
push
jnp
jp
xor
in
pop
lods
repz
push
mov
sbb
ret
ins
mov
mov
sbb
test
pop
fmul
cdq
ret
add
dec
xor
fwait
push
ins
pop
imul
inc
mov
cmps
in
and
mov
rcr
fld
pop
cmc
mov
repnz
inc
pushf
and
test
gs
shl
in
xor
outs
(bad)
pop
dec
push
cdq
push
mov
std
xor
aas
into
mov
repz
sbb
push
dec
sbb
xor
call
dec
pop
loop
dec
jo
mov
aam
sbb
aas
jecxz
jge
sbb
fisub
loop
ss
jle
jo
enter
jmp
xchg
sbb
sbb
(bad)
xchg
es
cmps
cmp
jo
rcr
sti
mov
cs
(bad)
push
(bad)
xor
jb
test
retf
xchg
sbb
sub
xchg
mov
loop
fbld
shl
push
ffreep
leave
xor
add
retf
pop
call
xor
jecxz
jmp
xchg
add
into
int3
test
sbb
out
inc
call
jae
sbb
sbb
jecxz
jle
neg
popa
mov
pop
dec
rcr
pop
fiadd
mov
mov
les
inc
push
into
jg
adc
inc
mov
push
pop
add
dec
push
mov
mov
retf
push
das
mov
xor
mov
mov
xchg
pop
stos
cmp
mov
bound
js
(bad)
jge
in
pop
retf
jb
jo
fs
mov
add
and
dec
rol
mov
inc
(bad)
(bad)
dec
cmps
add
test
cmps
test
adc
addr16
inc
rcr
jb
pop
sub
loope
dec
mov
mov
imul
add
repz
int3
out
(bad)
out
and
push
jne
jmp
add
xchg
push
int
fadd
gs
sub
and
pop
jae
dec
je
inc
in
lea
imul
cmp
and
aam
rcr
adc
sub
out
retf
inc
idiv
mov
or
mov
adc
lea
shr
jae
dec
es
xor
inc
push
jno
scas
fdivr
pushf
mov
sbb
jae
xchg
dec
xor
adc
lock
cmp
outs
hlt
lea
xchg
cmps
mov
push
jecxz
and
adc
mov
jb
push
pop
sub
lods
retf
inc
outs
dec
movs
mov
sbb
mov
xchg
retf
sahf
aas
(bad)
inc
and
(bad)
sbb
adc
adc
or
xor
mov
dec
int3
fld
popa
(bad)
in
jmp
shl
add
jecxz
jnp
dec
mov
outs
(bad)
stc
ins
in
movs
aam
retf
movs
mov
(bad)
and
std
jmp
nop
cmps
fld
or
pop
lock
stos
mov
bound
fwait
adc
ficomp
out
pop
lahf
add
cmc
in
in
das
xchg
clc
movs
adc
pop
and
mov
cs
xchg
int3
xchg
retf
push
in
mov
cmp
in
div
das
in
popf
mov
ret
sbb
loopne
cmps
outs
and
mov
push
pop
sub
cmps
pop
add
inc
cmp
pop
mov
add
call
mov
ins
cmp
ins
xchg
dec
and
in
fisttp
or
test
in
and
add
rol
mov
cdq
sahf
ins
sbb
mov
and
mov
push
rcr
retf
std
push
aad
pusha
shl
pop
aaa
and
retf
jns
lods
pop
nop
mov
inc
jp
mov
sub
inc
je
pop
jp
and
sahf
sub
push
and
outs
mov
push
iret
mov
es
add
cmp
jmp
push
js
lods
jne
jecxz
sbb
inc
mov
iret
mov
(bad)
addr16
out
out
xchg
shr
and
rcl
fs
int
rcr
cmp
push
xchg
inc
mov
jecxz
pop
stos
and
inc
mov
xchg
inc
sti
mov
cmps
int
jo
inc
xchg
xchg
jle
fwait
pop
and
aam
cdq
inc
adc
sbb
out
aad
pop
fdiv
adc
out
cmp
mov
or
pop
fsub
test
ficom
mov
and
and
xor
and
mov
lock
arpl
rcr
sti
mov
jo
push
xchg
cld
stc
arpl
loopne
shl
xchg
jmp
pop
inc
push
add
scas
jbe
inc
jno
jmp
es
or
pop
into
jb
xor
mov
dec
jg
jae
adc
ret
push
fsubp
pop
xor
add
mov
push
mov
in
cmp
rol
and
xchg
clc
sub
fs
or
sbb
add
pop
mov
mov
jmp
stc
xchg
and
iret
sbb
cmp
mov
xchg
cmps
or
sbb
data16
leave
and
dec
pop
jg
or
test
test
ror
pop
test
inc
nop
in
add
pop
sub
inc
pop
add
dec
dec
fdivr
je
icebp
xchg
xor
pop
sbb
shl
dec
bound
and
mov
mov
fnsave
push
or
(bad)
mov
mov
aaa
repnz
pop
or
jns
gs
scas
test
inc
jmp
or
movs
xchg
aas
scas
adc
inc
mov
xchg
pop
enter
sub
mov
mov
sahf
and
sub
xchg
jle
pop
and
pop
cdq
add
test
les
jge
xor
jnp
inc
mov
jge
dec
es
mov
pop
ror
mov
daa
es
jle
pop
shr
fist
rol
cmp
sti
fmul
mov
(bad)
loope
scas
jmp
sub
inc
cwde
popf
loope
adc
pop
mov
ja
dec
pop
leave
and
(bad)
pop
scas
or
mov
outs
mov
call
or
fmul
fbstp
aam
scas
fs
add
ins
sbb
mov
ins
jecxz
push
imul
jge
add
scas
push
add
and
push
xchg
sti
sub
(bad)
push
adc
push
pop
pop
jbe
sub
and
push
mov
pop
test
aad
xchg
sahf
push
stc
and
xor
gs
leave
xor
test
and
mov
jnp
sahf
sub
clc
xor
movs
out
inc
ss
cmp
(bad)
mov
jmp
pop
add
xchg
mov
fadd
add
dec
jecxz
sub
inc
es
daa
rcl
mov
mov
and
mov
jno
fdivr
es
mov
in
inc
mov
cmc
xor
jmp
dec
out
clc
and
and
popa
out
fmul
ret
inc
jo
jl
adc
pop
(bad)
lock
xchg
cmp
popa
xchg
xchg
mov
xor
push
into
mov
shr
mov
push
mov
jno
std
or
pop
adc
call
mov
iret
mov
outs
sbb
pop
adc
rol
jl
shl
mov
mov
into
xchg
repnz
ins
jge
xor
dec
sti
lea
cli
cdq
fdiv
fisubr
xchg
test
xchg
cmps
cs
cmp
cmp
outs
aaa
jnp
sbb
sahf
push
out
cdq
cs
ror
jno
push
in
loope
push
fiadd
mov
je
pop
xor
push
out
mov
cmp
xchg
and
dec
into
call
sub
and
aaa
mov
mov
pop
mov
dec
clc
mov
and
(bad)
mov
adc
mov
fadd
push
sti
mov
push
jecxz
inc
ret
cld
xor
je
scas
in
fist
inc
mov
xor
sub
mov
cli
pop
add
mov
dec
mov
ret
push
pop
cwde
mov
adc
ins
sub
and
pop
xchg
cli
and
arpl
inc
outs
mov
(bad)
into
xor
cld
(bad)
stc
std
xor
call
xchg
imul
int
and
jp
call
call
cdq
fwait
or
test
sti
in
mov
xor
nop
stos
jle
jmp
and
add
ror
bound
cmps
mov
repz
pop
inc
out
push
push
pop
(bad)
repz
or
and
or
mov
and
adc
and
ja
fistp
lods
repz
sbb
mov
mov
repnz
xchg
or
inc
mov
cmp
and
cmps
ret
jno
out
in
or
loopne
jnp
cmp
xchg
cmps
fisubr
clc
adc
pop
pop
jae
jle
pop
scas
cmps
dec
jecxz
sbb
dec
pop
pop
and
sbb
repz
xchg
sets
fdiv
scas
inc
dec
pop
and
ins
je
inc
push
and
scas
mov
fcmovu
push
fst
movs
lods
js
sbb
jb
push
or
xor
fbld
ins
inc
cmps
mov
sbb
arpl
retf
stc
aaa
add
add
inc
mov
jmp
push
xchg
lods
cdq
and
(bad)
call
mov
jmp
cld
mul
call
popf
and
fmulp
movs
jno
out
xchg
in
xor
sub
or
push
fstp
shl
mov
cmp
stos
dec
push
push
mov
sahf
pop
xchg
lods
push
movs
add
jge
xchg
arpl
rcr
pop
push
xor
scas
add
leave
clc
adc
(bad)
dec
into
or
xchg
jne
mov
retf
cmc
add
xor
add
shl
sub
xor
add
sub
je
add
call
push
xor
icebp
and
(bad)
dec
and
adc
sbb
jae
sbb
fisttp
and
outs
add
and
inc
pop
fdivr
xor
jmp
lds
cwde
or
cmps
sti
pop
pop
mov
or
mov
cmp
rcl
jmp
ficomp
pop
xchg
sti
ins
mov
test
ss
cs
mov
cli
cdq
mov
dec
mov
push
xor
sar
dec
mov
cdq
add
and
sbb
jle
mov
in
mov
in
fidivr
mov
movs
sub
mov
loop
cmps
mov
sbb
jle
xor
test
xor
mov
mov
mov
pusha
cwde
inc
pop
dec
pushf
stos
lea
push
xor
push
and
stos
in
mov
sahf
and
add
shr
stos
nop
xchg
out
dec
stos
out
lods
out
sub
inc
(bad)
data16
adc
and
sbb
retf
mov
push
inc
or
mov
xchg
fistp
xor
out
iret
(bad)
dec
popf
mov
sub
and
cwde
(bad)
std
loopne
(bad)
cwde
push
inc
cmp
xchg
push
sbb
test
test
ds
rcr
sar
adc
pop
add
cdq
pop
push
dec
sub
test
cmp
jmp
fmul
and
xlat
add
sbb
xchg
mov
adc
shl
dec
inc
cld
mov
inc
aam
xor
call
or
sbb
jnp
clc
je
stos
push
rol
mov
cmp
and
fsubrp
and
cdq
repz
push
cli
jmp
ja
sbb
je
push
inc
sbb
dec
shl
sti
cmp
dec
leave
mov
or
mov
pusha
fmul
sub
mov
sbb
gs
cli
ja
lods
xchg
mov
mov
cmp
xor
fwait
iret
js
fstp
out
ds
into
dec
xchg
dec
mov
loopne
out
jno
std
cdq
aad
call
pop
mov
pushf
jecxz
mov
cli
jge
ret
sub
push
pop
and
xchg
push
pop
rcl
mov
xchg
jle
inc
xor
mov
jae
and
sahf
inc
cwde
ins
(bad)
mov
outs
mov
(bad)
imul
test
jecxz
pop
adc
call
adc
sysret
fmul
add
jbe
push
adc
sbb
cmc
div
jns
mov
lea
sub
out
jmp
pop
pop
add
and
es
mov
in
popfw
xchg
xchg
xchg
into
mov
add
jns
add
lods
cdq
test
and
jno
inc
lahf
lods
rcr
not
imul
repz
sahf
and
pop
dec
bound
mov
dec
cmp
push
js
sti
mov
mov
fidiv
jge
pushf
and
add
out
test
(bad)
dec
imul
push
adc
push
sbb
ins
or
sar
jp
adc
out
jle
int
xor
fisttp
add
data16
out
cld
movs
mov
scas
test
adc
in
adc
pop
jge
pop
das
movs
test
sbb
nop
rcl
daa
mov
xchg
in
and
clc
les
fisubr
test
movs
stc
into
sub
loop
daa
sub
aas
add
sub
loopne
push
sbb
pop
cdq
and
mov
sbb
xor
add
inc
lahf
imul
cmp
push
add
(bad)
out
adc
in
ds
push
xor
in
sbb
out
pop
and
cs
pop
mov
pop
adc
leave
pop
shl
add
mov
and
pop
sub
cwde
push
xchg
pop
cs
jmp
sub
outs
ja
xor
test
xchg
push
cmp
or
jle
sbb
pop
sahf
or
dec
in
mov
out
jg
pop
(bad)
xor
call
pop
mov
cmp
(bad)
(bad)
fisttp
mov
std
cmp
dec
cmp
inc
dec
leave
bound
aam
sub
cmps
or
les
sub
cdq
mov
mov
pop
into
stos
push
daa
add
shl
pop
sub
retf
xor
inc
xor
sub
add
imul
xor
gs
in
sbb
(bad)
and
mov
mov
xor
push
aad
iret
sbb
cwde
(bad)
xchg
aam
lock
hlt
and
push
or
out
outs
(bad)
retf
jo
or
fiadd
add
std
shr
repz
xchg
pop
jmp
popa
fisttp
stc
and
pop
aaa
xchg
jmp
and
inc
mov
fcom
mov
retf
adc
push
and
xor
or
hlt
nop
mov
adc
jb
test
ins
push
js
jg
fdivr
(bad)
das
fisttp
ins
adc
push
xor
test
(bad)
sbb
into
jb
cdq
xchg
repz
scas
cld
stos
jp
or
add
mov
in
cmps
imul
sub
sti
jne
cdq
or
inc
sahf
ret
jae
rol
jno
sbb
add
xchg
fld
arpl
enter
fistp
mov
dec
mov
rcr
jg
fcmovnu
(bad)
fsubp
ja
mov
inc
jge
sub
mov
adc
pmulhw
or
sti
mov
sub
(bad)
fild
fistp
mov
or
mov
cmp
pop
nop
(bad)
arpl
test
in
jecxz
push
bound
fld
pushf
pop
sbb
xchg
lods
add
or
lock
fistp
arpl
ja
lods
add
adc
fsubr
jp
fild
pop
(bad)
push
fild
addr16
pop
(bad)
enter
pop
mov
daa
mov
mov
loopne
clc
(bad)
push
retf
add
iret
test
ja
cld
ins
jns
add
repz
xlat
mov
setg
xor
pop
ret
xchg
repz
aad
fiadd
fild
gs
mov
mov
lahf
(bad)
xchg
adc
xchg
popf
fistp
push
outs
dec
xor
add
push
dec
call
mov
call
inc
adc
cmp
aad
fcmovu
push
sbb
mov
push
retf
shl
or
add
pop
or
adc
gs
ret
rcr
movs
mov
mov
fcmovnbe
mov
cmp
imul
mov
sub
scas
imul
sti
sahf
lds
pop
mov
and
jb
adc
lahf
aam
dec
int3
add
cdq
sti
dec
cmp
sub
fnstcw
imul
sub
out
call
in
and
add
adc
pusha
rcr
mov
daa
mov
test
inc
bound
out
test
or
jmp
mov
(bad)
pop
dec
mov
fnsave
adc
int3
mov
xchg
and
dec
stos
fstp
sti
cmps
xor
pop
jmp
pop
sbb
jg
pop
pushf
je
sub
inc
scas
dec
cmp
ficomp
jnp
cli
cwde
mov
cmp
imul
sub
shl
dec
arpl
xor
lock
addr16
nop
cmps
sbb
js
pop
xchg
pop
mov
pop
sub
int
cmp
dec
xchg
jp
stos
fst
xor
pop
shr
mov
add
or
or
cmp
out
push
(bad)
fld
xchg
inc
push
cld
in
fild
jb
fld
jae
fcomp
std
pop
int3
pop
fstp
mov
int3
jo
jno
repz
(bad)
jne
setb
pop
jae
mov
neg
les
dec
adc
jnp
or
mov
jecxz
enter
shl
lock
stos
call
jns
(bad)
mov
js
jo
mov
lods
and
inc
rcl
push
xchg
aam
jmp
lds
and
fisttp
loop
push
jl
outs
xchg
int
push
loopne
sub
push
pop
or
xor
scas
fisttp
add
push
and
cmps
adc
fucomi
stos
fsubr
adc
loop
(bad)
in
int
mov
cmp
pop
xchg
mov
push
jmp
fistp
cld
(bad)
and
call
lock
fwait
js
add
(bad)
mov
inc
mov
test
pushf
(bad)
cmp
je
in
(bad)
pop
out
adc
icebp
pop
mov
lds
inc
jnp
ins
movs
mov
mov
push
neg
(bad)
js
cmp
ror
repz
call
or
push
pusha
scas
popa
mov
adc
push
std
sbb
pop
stos
push
add
repnz
sbb
jbe
aad
jg
mov
fwait
adc
outs
and
jae
les
xchg
int
lahf
cmp
cmc
xor
fldcw
pop
sbb
sub
aad
pop
sbb
(bad)
and
push
mov
mov
adc
xchg
fcmovnb
loope
add
xlat
adc
das
push
pusha
fdivp
or
sahf
ss
movs
xor
test
jo
std
mov
pop
adc
xor
lds
mov
fistp
lods
pop
gs
int
pop
jmp
loopne
sub
pop
repz
jmp
aad
aad
rcr
(bad)
rol
int
(bad)
or
movs
fstp
add
inc
mov
retf
jbe
dec
dec
xor
pop
pop
data16
cs
push
jne
xchg
aas
fnsave
dec
push
mov
icebp
xor
pop
loop
(bad)
stos
loope
(bad)
(bad)
push
cwde
sbb
scas
lock
fcmovne
idiv
jmp
xchg
pop
xchg
retf
dec
adc
popa
jecxz
arpl
pop
jns
dec
jne
rcr
push
scas
loope
icebp
(bad)
cld
mov
ficom
loopne
test
or
(bad)
das
fsubr
(bad)
push
jmp
cmp
fistp
je
les
icebp
(bad)
int
test
arpl
pop
outs
aam
enter
loope
mov
cmp
fild
ins
mov
adc
xchg
outs
lods
call
out
retf
call
pop
bound
sbb
(bad)
into
inc
rcr
pop
and
xor
sbb
mov
mov
sti
mov
stc
cmps
aam
push
xchg
(bad)
fcmovne
(bad)
or
adc
xchg
xlat
push
iret
lea
fucom
inc
pop
(bad)
packuswb
out
(bad)
repz
inc
mov
or
mov
lock
cmp
mov
jmp
adc
push
sub
fst
jge
in
add
out
rcr
fld
mov
pop
popa
aam
out
adc
ror
lea
jg
fldcw
push
adc
(bad)
push
cmc
pop
ins
add
cli
sbb
fisttp
mov
cmp
mov
repz
cmp
add
mov
push
pop
sub
pop
sbb
int3
pop
xor
and
aas
out
and
clc
mov
pop
fcmovnbe
inc
mov
hlt
retf
movs
aaa
ins
fistp
fstp
jne
out
lods
(bad)
jnp
(bad)
jns
call
cmp
fistp
mov
fisttp
pop
(bad)
jge
add
add
int3
sbb
mov
popf
xchg
push
mov
jnp
xor
cwde
(bad)
fbld
mov
test
fild
ficomp
les
cld
pop
fld
mov
mov
aad
add
adc
dec
ss
jge
or
stc
cmc
cwde
sub
xor
xor
add
sub
ins
jno
inc
push
mov
pop
gs
js
dec
mov
enter
and
rcr
adc
sub
and
pop
xor
sub
pop
jnp
aaa
xchg
enter
pop
add
fild
les
cmp
div
mov
je
fchs
fcomp
push
fist
jmp
dec
fld
jno
sub
jns
fist
add
cwde
in
lahf
mov
dec
std
vpshuflw
xchg
stos
fistp
jne
push
retf
call
movs
sub
push
in
xchg
or
push
push
ins
adc
dec
xchg
jge
loopne
fbstp
outs
fcmovnbe
cwde
mov
bnd
pop
lahf
cmps
(bad)
fld
neg
adc
jns
enter
fstp
fstp
std
mov
pop
stos
sahf
je
das
dec
fisttp
xor
jne
add
push
jmp
xor
mov
(bad)
in
xor
pop
mov
push
(bad)
push
(bad)
test
fld
es
(bad)
test
sub
imul
inc
fstp
xor
imul
sub
fnstenv
push
(bad)
inc
jnp
and
fistp
pop
xor
fild
push
ins
cmp
popa
les
cmps
mov
pop
jns
xchg
retf
and
scas
fild
push
cmp
dec
xor
push
mov
fdivr
jno
out
ins
cwde
outs
jmp
mov
mov
(bad)
cmp
add
fldenv
mov
inc
imul
mov
fwait
cli
push
xchg
jae
lahf
out
ins
cs
jecxz
pusha
jmp
fistp
call
pop
adc
in
xor
(bad)
sub
push
and
je
sbb
and
xchg
gs
rcr
dec
add
fucomp
xor
je
hlt
cmp
mov
add
ret
push
pop
add
ins
test
jo
cwde
pop
and
xchg
repz
adc
movs
xchg
jno
cdq
sbb
fsub
dec
mov
sar
pop
add
push
push
sub
xchg
into
add
mov
mov
xchg
cli
retf
shl
jle
adc
fdecstp
daa
shl
and
cmps
xlat
inc
loop
xor
jp
dec
retf
and
cwde
imul
enter
xchg
and
in
aad
adc
xchg
jle
inc
push
je
cli
sub
xchg
mov
fsub
rcl
sbb
cli
les
mov
sbb
pop
cdq
pusha
jl
fsubr
add
std
mul
xor
lods
cs
xorps
and
(bad)
(bad)
cmovae
or
dec
sbb
div
out
pop
pop
scas
push
ins
inc
(bad)
arpl
and
or
pop
stos
sbb
xchg
shr
fsubr
sbb
shr
pusha
push
in
es
test
ret
or
(bad)
inc
cmp
dec
fs
jp
push
add
jle
jmp
inc
xchg
pop
sub
sub
push
imul
inc
add
cmp
enter
or
cmp
jne
out
adc
popf
rcr
push
mov
cwde
adc
nop
pop
fs
cmp
xor
mov
add
push
push
jmp
mov
push
int3
jo
or
xor
movs
inc
sbb
mov
sub
cmps
repz
mov
sbb
cwde
rcr
out
sar
in
add
cdq
mov
xor
push
outs
sub
cmp
add
loope
and
(bad)
pop
push
sbb
into
mov
test
xor
mov
sub
adc
ins
(bad)
out
call
push
inc
mov
std
push
call
(bad)
lea
mov
cld
dec
sti
jae
pushaw
aam
popf
dec
fdiv
push
inc
addr16
rol
and
sbb
mov
fsubr
dec
dec
sub
es
jp
call
jae
in
xchg
std
mov
loopne
pop
sub
mov
leave
jne
xor
mov
mov
sub
clc
inc
mov
pop
sub
ins
xchg
hlt
fstp
test
xchg
mov
mov
mov
mov
dec
push
(bad)
sti
push
cmp
add
sub
mov
or
adc
cdq
mov
push
dec
and
(bad)
into
jge
push
pop
fld
idiv
shl
pop
adc
(bad)
cmc
push
out
ds
in
daa
adc
out
scas
arpl
pop
xor
dec
push
lods
rcl
inc
leave
sbb
fstp
push
inc
popa
aas
call
popa
cld
and
nop
stc
outs
add
aaa
mov
pop
inc
dec
shl
pusha
les
mov
mov
sahf
mov
and
push
and
or
nop
bound
push
aaa
lock
adc
(bad)
jecxz
jp
dec
jle
fdiv
pop
sbb
(bad)
inc
cmp
mov
data16
xchg
movs
mov
js
rol
mov
push
pop
pextrw
cmp
cmp
dec
cmp
or
dec
xchg
push
out
sbb
into
leave
fisub
and
push
rcl
xor
xchg
cmps
cli
lods
add
push
(bad)
cmp
inc
aaa
pop
sub
cmp
rcr
lds
in
fisttp
pop
add
je
pop
shl
push
xchg
leave
(bad)
and
sahf
inc
sahf
cmp
hlt
and
(bad)
fwait
shr
test
push
jmp
inc
sbb
push
outs
sub
ds
jb
test
mov
adc
push
add
outs
dec
cmp
sub
enter
push
repnz
ror
add
aad
xchg
sahf
sahf
xchg
int
push
je
sub
or
push
jne
push
or
or
sub
jle
xchg
mov
jmp
cmp
(bad)
jmp
xchg
pop
ss
mov
jp
jmp
mov
fdivp
jle
pop
arpl
mov
push
out
jo
cmp
dec
jecxz
adc
xor
mov
inc
pop
add
fucomip
(bad)
cs
pop
(bad)
pop
jecxz
sub
leave
or
mov
jle
inc
test
addr16
jnp
outs
jg
in
cmp
sbb
scas
imul
push
adc
sbb
data16
pop
cmps
jns
inc
es
loopne
pop
cmp
rep
xchg
pusha
or
into
jmp
cmps
sub
mov
daa
in
(bad)
(bad)
cmp
shl
lock
cld
data16
and
xor
or
and
xor
imul
adc
(bad)
clc
mov
add
and
cmps
or
mov
bound
mov
sub
jno
into
lods
imul
add
fistp
sbb
ret
ss
ss
fstp
jo
mov
lahf
push
push
xor
xor
push
retf
xchg
cmp
shr
sbb
sub
mov
scas
(bad)
ret
jae
pop
sbb
mov
(bad)
fucomip
test
in
sub
ror
in
das
cdq
pop
and
xchg
cmp
sbb
mov
and
mov
and
dec
jge
push
mov
xchg
pop
clc
mov
rcr
scas
push
stos
in
out
jnp
cmps
nop
mov
out
mul
loope
test
xchg
xlat
fcmovb
loop
adc
cmps
jbe
mov
int3
cdq
shl
sbb
sub
jl
xor
cmp
fdiv
leave
pop
rcr
ror
repnz
mov
xchg
xor
les
adc
out
pop
cmp
(bad)
xor
cmps
sbb
xchg
cwde
jnp
imul
sub
jl
mov
cli
mov
les
stos
rcl
jecxz
scas
pop
ds
call
sub
stc
and
jl
and
test
mov
addr16
stc
ins
pusha
jne
lds
dec
mov
pop
adc
xlat
adc
aad
mov
sbb
dec
add
faddp
and
scas
mov
loopne
aaa
mov
scas
stc
mov
push
add
icebp
data16
cdq
push
add
in
std
and
(bad)
icebp
sub
out
scas
(bad)
sbb
sahf
jb
push
push
xor
ret
das
add
js
add
jns
ficomp
adc
push
lds
(bad)
or
imul
push
out
stc
ret
(bad)
enter
imul
mov
cmp
punpckhdq
shl
sub
sbb
mov
dec
pop
mov
scas
cmp
jl
sbb
je
daa
retf
cmp
mov
adc
pop
movs
ins
fisubr
pop
adc
call
or
pop
push
sar
sti
ss
dec
dec
gs
iretw
clc
xor
mov
sbb
test
aaa
xchg
ins
push
lods
and
jge
jecxz
sub
loope
fsub
push
aam
or
adc
push
xchg
mov
mov
pop
ficom
pop
daa
or
sbb
and
fstp
sub
retf
xchg
(bad)
pop
adc
xchg
mov
test
cmc
sbb
jecxz
jo
xor
jl
mov
mov
xor
inc
out
sbb
sti
repz
or
aam
imul
jo
cmp
mov
iret
cmp
test
and
push
mov
cdq
push
cmp
pop
rcr
call
stc
xor
mov
lds
adc
fmul
push
fsqrt
hlt
test
pop
loope
mov
xor
push
inc
fcmovne
sbb
xchg
(bad)
aas
add
adc
jmp
hlt
mov
sti
int
cmc
nop
push
out
fcom
das
lea
mov
mov
bts
cmp
pop
sub
adc
in
push
push
rcr
pop
inc
sub
jae
arpl
out
sahf
out
sbb
sub
out
sbb
loope
mov
leave
inc
xchg
out
rcr
stos
cld
push
sbb
mov
mov
xor
call
push
shr
out
sbb
add
xor
inc
fstp
shr
jnp
rcl
stc
pop
xchg
stos
or
cmp
cmp
cs
into
and
xlat
lock
(bad)
jmp
and
xor
adc
rcl
cwde
iret
and
fwait
mov
sbb
sub
lods
call
mov
jmp
adc
and
xchg
clc
xchg
mov
cmp
retf
outs
dec
mov
sbb
call
lock
push
cmps
xchg
pop
mov
mov
ss
sti
push
mov
sub
lock
std
jno
(bad)
clc
sbb
push
imul
inc
jno
call
ss
sub
dec
and
push
push
mov
call
jae
jmp
xchg
shl
cmp
shr
cwde
lock
es
inc
dec
shr
js
adc
jo
xor
xchg
cwde
push
ins
or
ja
test
adc
inc
mov
xchg
adc
xor
pop
in
jecxz
sbb
fcomp
movs
mov
or
mov
int
adc
aaa
dec
out
mov
mov
or
or
pop
sbb
stc
xchg
inc
dec
mov
cdq
lock
cmp
outs
out
loope
xor
jbe
mov
add
or
mov
mov
sbb
gs
mov
bswap
add
loop
push
pop
dec
xchg
dec
mov
xor
ins
leave
mov
dec
mov
jmp
adc
ss
sub
inc
sti
fild
inc
into
sub
fcomp
and
mov
cmp
mov
jae
or
sbb
xor
sub
into
sub
cmp
add
xchg
pop
push
mov
lea
sub
push
pop
jmp
push
pop
mov
push
mov
mov
jmp
xor
lds
ins
cs
pop
and
xor
xchg
sbb
sbb
inc
jns
jl
add
daa
in
dec
add
jle
ja
cmp
pop
sbb
stos
and
cmc
inc
and
add
inc
push
push
pop
adc
and
es
in
push
icebp
add
cmp
fild
ror
dec
cmp
imul
lds
jmp
sbb
and
test
fldcw
and
arpl
(bad)
daa
and
imul
in
nop
pop
xor
mov
push
rcr
stos
xchg
jae
pop
test
iret
cwde
mov
add
sbb
imul
and
jnp
mov
(bad)
xor
cmc
les
add
jae
je
retfw
ins
xchg
mov
fstp
fidivr
into
sahf
dec
mov
enter
xchg
(bad)
xchg
and
push
loope
pop
xchg
outs
fcomi
cs
sbb
xchg
add
mov
fs
fild
out
add
pop
int3
xor
js
popf
add
fbstp
dec
inc
or
bound
or
icebp
ror
jb
mov
fist
jge
in
sbb
rcl
mov
jmp
adc
(bad)
(bad)
xchg
outs
out
fwait
jmp
xor
pop
or
mov
mov
fild
push
sbb
pushf
cwde
imul
fstp
sub
push
(bad)
ds
loope
and
in
ss
cmp
stos
fiadd
pop
stos
fstp
loope
lock
dec
repz
pop
mov
mov
push
fiadd
(bad)
mov
add
fistp
lea
push
pop
and
sub
xor
jge
xchg
inc
js
pop
ret
mov
fcomi
mov
ins
inc
fucomi
stos
lea
jns
iret
scas
pop
fcmovnb
fst
sub
jb
cmc
call
les
leave
dec
push
ja
xor
idiv
pop
in
and
(bad)
call
cmc
add
cmp
mov
xor
aam
fcmovnbe
inc
arpl
ds
jne
pop
ja
call
xchg
aad
mov
stos
pusha
loope
fstp
cmp
adc
and
mov
(bad)
pop
rcr
or
dec
sub
lods
pusha
and
repz
xlat
fidivr
aad
fst
or
leave
nop
pop
inc
xor
pop
mov
sub
push
dec
aad
repz
fsub
sbb
xchg
hlt
xchg
mov
inc
adc
ffreep
pushf
sbb
fdivr
cdq
or
cmp
ja
rol
scas
dec
adc
jecxz
call
out
aam
imul
pop
adc
aaa
inc
or
loop
xchg
jb
movs
mov
ret
lods
push
cld
test
(bad)
jns
jge
sar
mov
push
sub
pop
add
xor
push
ret
cmp
(bad)
jmp
mov
pop
xchg
(bad)
stc
aam
fcmovne
lock
aad
and
fstp
sar
addr16
fist
pop
inc
or
out
mov
mov
pop
fucomip
data16
sub
neg
jnp
int3
out
jbe
imul
frstor
data16
cli
sbb
mov
test
jl
clc
pop
rol
push
adc
mov
pop
push
repz
sbb
retf
or
cmp
pop
dec
and
jnp
(bad)
ins
cmc
or
retf
call
pop
fwait
sub
fistp
pop
lahf
lods
fld
jnp
inc
retf
xchg
fcmovnbe
jne
and
or
or
inc
pushf
gs
sub
jecxz
retf
jae
pop
jecxz
ds
and
push
jnp
ret
jecxz
sub
iret
jge
pop
fcomi
shl
stos
jecxz
icebp
inc
into
jl
mov
rcr
mov
push
outs
scas
jecxz
call
add
movs
jns
fild
mov
jmp
fs
gs
cld
repnz
scas
movs
mov
push
std
fcmovbe
arpl
xchg
fld
push
fisttp
jb
and
fisttp
sbb
(bad)
sti
xchg
mov
repz
mov
mov
mov
xchg
sub
xchg
hlt
fbld
pushf
iret
pop
and
leave
and
cmps
sub
rcl
fmul
mov
lds
xor
sub
in
sbb
js
ss
ja
shl
xchg
cmp
sub
inc
and
fild
dec
sahf
and
xor
jmp
sub
js
add
mov
xlat
int3
imul
aas
pop
fcmove
pop
pop
fcmovnb
ret
sbb
dec
rcr
(bad)
adc
mov
fisttp
mov
add
rcl
cmp
aaa
adc
jge
jns
pop
pusha
sbb
std
aad
data16
stc
pop
(bad)
rcr
jno
inc
xor
ja
aam
fxch
shr
pop
icebp
cvtdq2ps
arpl
sti
push
and
fisttp
sbb
sar
fstp
and
fistp
lock
mov
push
fnstsw
cmp
pop
neg
leave
mov
clc
or
inc
daa
lahf
in
jl
xchg
shl
jle
outs
mov
jb
sbb
push
pop
adc
fmul
jns
fistp
in
aaa
sub
add
pop
push
or
xchg
mov
xor
data16
daa
jmp
sub
mov
call
loopne
push
push
(bad)
mov
xchg
lods
sbb
and
mov
ss
hlt
inc
loope
fisubr
adc
add
repz
dec
loope
sub
int
fistp
cmc
jg
jnp
in
ins
ds
pop
jecxz
leave
not
sbb
ret
mov
push
fcmovnbe
data16
retf
lods
sub
xchg
mov
pusha
es
icebp
mov
mov
xchg
fs
cs
cli
(bad)
sub
(bad)
and
popa
pusha
(bad)
add
lods
arpl
xchg
(bad)
repz
mov
pop
popf
pop
std
ds
dec
cmp
pop
fcmovnu
sbb
jb
(bad)
jne
aaa
stos
fld
(bad)
add
push
(bad)
push
lods
outs
daa
pop
jnp
push
sbb
sub
addr16
shl
and
fld
xchg
(bad)
and
aad
jecxz
xchg
cli
mov
jg
adc
popa
cmps
adc
jle
retf
add
(bad)
add
push
shr
fistp
test
fisttp
mov
out
aas
ss
pusha
xor
movs
in
pop
inc
stc
mov
(bad)
xchg
imul
add
jbe
pusha
dec
mov
pop
add
shl
ins
cmp
inc
loop
pusha
or
sbb
mov
push
adc
xchg
sub
sbb
in
xlat
fcmovne
or
or
sbb
in
mov
mov
add
push
adc
aad
inc
fist
sbb
jecxz
daa
out
std
shl
fcomp
or
or
inc
sbb
dec
fistp
and
ror
out
ds
outs
imul
add
fwait
movs
call
sbb
test
fild
scas
test
ins
push
sti
push
lods
inc
lahf
cld
cs
adc
jnp
xchg
rcr
in
mov
loope
jo
sbb
jbe
sbb
fucomi
das
xchg
popw
cmp
pop
jecxz
in
mov
fldenv
jp
jae
sub
push
dec
push
mov
xchg
cmp
or
and
in
jae
test
or
test
inc
pop
call
test
call
lahf
les
xchg
int
add
fisttp
mov
(bad)
ja
xchg
fist
sahf
push
outs
out
iret
xor
adc
push
xor
arpl
mov
test
std
jg
fisttp
mov
movs
fistp
sub
pop
adc
(bad)
push
and
ror
sahf
adc
loop
test
cmp
fstp
jmp
mov
gs
int3
xor
push
mov
cmc
test
dec
les
or
(bad)
sbb
mov
fistp
cmp
(bad)
push
jnp
adc
dec
es
xchg
test
fild
pop
xchg
ficom
pusha
and
ret
into
in
fild
inc
jmp
inc
call
adc
sahf
xor
jnp
jp
jbe
mov
sbb
fsub
inc
out
sbb
ret
cli
xchg
sbb
mov
int3
xor
dec
xchg
jle
repz
jl
lds
mov
fld
xor
sti
loopne
or
mov
push
sbb
ss
pushf
jno
add
outs
fistp
and
shl
lea
scas
fdiv
adc
test
cmps
popf
popf
sbb
fisttp
movs
mov
sar
inc
mov
sbb
leave
(bad)
and
(bad)
das
mov
xchg
and
adc
sbb
clc
popf
and
xor
(bad)
rol
mov
ins
inc
stos
std
nop
fidivr
pop
xchg
mov
test
or
jle
jbe
pop
push
and
retf
icebp
enter
mov
inc
sbb
or
sti
sbb
jmp
and
and
(bad)
pop
aaa
shl
pop
xor
jno
lods
xchg
jo
ror
xchg
scas
add
inc
adc
mov
sbb
shl
imul
fdiv
ins
sub
shl
inc
repz
fnsave
sbb
fdiv
jnp
inc
out
mov
leave
pop
or
ret
xchg
fisub
es
jg
sub
push
out
push
sbb
setns
jae
popf
push
retf
and
rcl
and
cdq
inc
mov
push
fidiv
xor
outs
sbb
leave
sub
dec
mov
test
inc
xor
jmp
retf
inc
xchg
push
nop
pop
dec
or
adc
and
xor
xor
mov
jge
push
(bad)
jecxz
jb
adc
xchg
pop
arpl
cmp
std
mov
into
jns
outs
aam
outs
lahf
xor
mov
add
or
movs
popa
cs
gs
ins
scas
fld
cmp
mov
mov
mov
dec
sbb
mov
xchg
pop
sub
inc
dec
mul
cli
outs
dec
fisub
aas
(bad)
sti
fsub
jle
sbb
jp
mov
pop
sbb
jbe
and
ret
ja
pop
out
outs
and
sbb
push
cs
outs
scas
cld
xchg
sub
mov
xchg
sbb
xchg
push
ins
sbb
adc
rol
add
std
push
ret
fld
in
ja
cld
xchg
jecxz
pop
pop
xchg
ror
pop
fwait
or
push
add
adc
ins
(bad)
pop
into
xchg
mov
out
movs
pop
das
cmp
(bad)
jo
fdivr
mov
jo
sbb
das
mov
cmp
(bad)
repz
xchg
inc
imul
lahf
cmc
sbb
sub
sub
test
call
xchg
or
and
cmps
dec
pop
cmp
mov
fmul
loope
fwait
loop
pusha
repz
dec
call
inc
gs
mov
add
mov
sbb
xchg
clc
dec
ret
into
fucom
pop
jo
mov
aaa
cmp
inc
mov
std
dec
mov
lds
and
jmp
push
sbb
nop
pop
scas
jno
je
cmp
mov
popf
jnp
sbb
(bad)
and
lea
pop
mov
enter
pop
mov
arpl
mov
ror
or
out
addr16
out
and
pop
(bad)
mov
test
xchg
mov
ss
xor
call
push
push
add
(bad)
cdq
out
(bad)
jae
je
icebp
dec
(bad)
(bad)
mov
in
adc
and
push
repz
fisub
in
jns
daa
nop
jl
xchg
std
adc
enter
mov
mov
sti
leave
lock
xchg
in
mov
add
mov
cmp
xchg
(bad)
icebp
fcmovnu
(bad)
jp
xchg
push
mov
movs
inc
scas
or
fistp
cld
inc
repnz
cmp
popa
cdq
cmp
fcom
cmp
sbb
sbb
ret
shl
imul
cmps
mov
fisubr
and
cmp
fiadd
xor
mov
es
pop
jnp
cdq
fistp
out
mov
arpl
retf
ds
pop
enter
pusha
dec
pop
add
lds
fld
rol
fcmovnb
xchg
cmps
jg
mov
adc
call
mov
xor
xchg
sahf
fcomi
cmps
popf
mov
fld
and
sub
xchg
imul
stos
clc
lods
and
outs
in
jecxz
mov
in
adc
add
or
fcmovnbe
and
js
or
dec
ja
ror
fld
inc
cmp
(bad)
ret
mov
jbe
repnz
call
fistp
ins
pusha
and
movs
inc
cs
pop
sbb
bound
fcomi
or
sub
jl
xchg
in
int3
iret
mov
je
xchg
(bad)
pop
xchg
cmp
dec
lods
inc
(bad)
int
jb
adc
cmp
and
fild
fisttp
int
cdq
or
sub
(bad)
jbe
cmp
retf
mov
jo
rcr
lods
nop
repz
pop
je
dec
fistp
add
push
cmp
jb
mov
push
stc
fist
mov
pusha
adc
mov
fistp
sbb
cmp
mov
hlt
fist
sub
mov
jl
(bad)
mov
addr16
pop
xor
cmps
cmp
dec
popf
dec
paddusb
lock
xor
add
jbe
(bad)
mov
inc
call
vpminsw
push
push
(bad)
stc
ins
ds
dec
fld
sahf
mov
push
popf
fldenv
xlat
fild
jb
nop
mov
das
dec
sub
fnstsw
out
push
inc
cmp
mul
or
cwde
dec
sti
int3
jmp
add
mov
popf
std
(bad)
rcr
cmp
fidivr
sti
ja
jnp
data16
test
out
loop
cmp
out
mov
lods
pushf
mov
test
jge
or
jle
push
fpatan
leave
fistp
sbb
mov
test
repz
xor
mov
cli
ror
lods
ja
pop
out
jle
xor
sbb
imul
fisttp
inc
mov
fcmovnb
push
pop
mov
stos
jo
mov
clc
cld
or
and
inc
int
mov
outs
(bad)
jb
das
(bad)
fcmovnb
cwde
or
aad
cmp
pop
sti
lods
(bad)
sbb
repnz
or
jb
lahf
fmul
xchg
ins
lods
icebp
fild
xchg
test
dec
lahf
fistp
fldenv
mov
arpl
dec
push
xlat
xor
cmp
iret
push
cmp
sub
in
push
inc
cwde
fwait
outs
fisttp
in
and
jo
jl
add
sbb
enter
mov
mov
aaa
lds
pop
and
sub
neg
je
enter
adc
mov
mov
dec
xor
cmp
adc
xor
sahf
fimul
and
mov
xchg
mov
stos
pusha
cdq
jecxz
push
mov
sub
mov
pand
ss
xor
xor
fsub
xlat
or
push
dec
xchg
rcr
xchg
push
fimul
sbb
(bad)
test
shl
pushf
aas
mov
fnstsw
push
jecxz
xchg
and
ret
xor
fmul
jns
fs
jmp
jle
push
data16
clc
unpcklps
cmc
rol
(bad)
dec
mov
push
mov
fist
(bad)
cwde
mov
pop
div
fistp
or
mov
push
dec
fdivr
retf
iret
xchg
or
xchg
pop
and
(bad)
leave
stos
in
xor
add
fucomip
cmp
or
fwait
cmps
add
xlat
call
fild
ja
repnz
jmp
out
int
pop
fcmovnbe
xchg
mov
pop
cmc
fstp
popf
cmps
jecxz
ds
ins
inc
mov
cmc
ficomp
cmp
fistp
jb
mov
adc
dec
aas
and
sbb
and
dec
js
(bad)
adc
inc
sbb
mov
aad
adc
xchg
adc
daa
inc
jl
push
jbe
adc
xor
xlat
fcmovne
out
shl
pop
or
je
fst
fist
loopne
ins
call
fisttp
mov
fstp
cmps
nop
pop
sbb
jns
fisttp
dec
cmps
fild
jno
shl
cli
rol
xlat
arpl
repz
call
cmp
icebp
je
jmp
loope
and
fist
ds
cmp
stc
std
fnstsw
fsubr
arpl
aam
rcr
mov
lock
mov
adc
push
fcmovne
jp
and
clc
mov
cmp
mov
xlat
fist
aas
push
movs
call
fist
pop
sbb
scas
cmps
dec
fcmovnbe
push
dec
push
inc
pop
idiv
loope
outs
paddb
jg
or
fist
(bad)
xlat
mov
fneni(8087
scas
pop
jno
push
xchg
mov
movs
jmp
add
out
or
test
movs
clc
aam
imul
fstp
add
aad
dec
mov
loope
jmp
mov
inc
popf
cmc
jmp
adc
ja
sub
inc
(bad)
or
stos
sub
cwde
pop
adc
repz
xor
aam
or
inc
add
enter
test
jb
cld
pusha
fisttp
xorps
or
jns
or
jg
fcmovnbe
inc
xchg
push
add
dec
mov
int3
push
xor
in
cmp
or
retf
mov
mov
adc
ss
and
xor
and
mov
add
aas
or
mov
push
jecxz
cwde
mov
dec
mov
ret
cmp
out
xor
aas
push
pop
popa
test
(bad)
push
sahf
leave
ficomp
dec
adc
xlat
adc
scas
lds
out
cdq
jl
inc
sub
mov
add
and
or
fld
test
call
mov
fistp
imul
push
(bad)
(bad)
xchg
sbb
mov
push
clc
push
xor
(bad)
out
scas
jg
pop
movs
add
jb
xchg
push
push
cdq
adc
pop
cmp
fs
call
jno
lock
xor
iret
in
fcmovnb
hlt
xchg
pop
ror
push
rcl
ret
jle
pop
sbb
(bad)
push
add
aad
adc
out
push
push
adc
loop
sbb
imul
cmp
nop
sbb
and
ja
add
mov
jbe
jmp
mov
mov
arpl
and
lods
push
iret
fucomi
and
(bad)
mov
aad
pop
mov
xchg
mov
pop
adc
xchg
repz
popf
in
js
fstp
out
mov
imul
cmps
fldenv
daa
in
push
inc
rcr
(bad)
pop
xchg
xchg
in
out
and
div
jnp
mov
mov
clc
popa
and
mov
test
xor
data16
jl
imul
sub
jg
test
dec
jns
jmp
call
sub
jl
dec
test
xchg
in
or
out
push
in
pop
icebp
and
stc
sahf
fcmovne
add
sbb
adc
inc
fcmovne
mov
or
fcomi
(bad)
sahf
test
aad
gs
imul
push
fidiv
and
outs
aam
cdq
(bad)
in
dec
rcr
mov
pop
sbb
mov
fcomi
test
and
ins
pop
adc
jecxz
test
push
adc
pusha
std
fist
adc
les
mov
mov
sub
mov
fistp
xchg
stos
or
adc
mov
add
fild
fdiv
or
sar
in
sub
mul
cld
jo
(bad)
fist
test
mov
shl
adc
jbe
(bad)
fstp
ss
popa
fild
sahf
jle
sbb
pop
add
out
sub
jmp
(bad)
push
or
enter
pop
push
fstp
pop
leave
aaa
xchg
inc
movs
fisub
rol
ins
fstp
push
inc
add
fld
mov
cmp
sub
lods
mov
iret
fwait
xor
(bad)
mov
mov
aam
mov
push
adc
aas
fld
in
add
mov
xor
and
cmc
fld
mov
mov
inc
daa
push
fnsetpm(287
adc
nop
dec
jns
xor
jo
add
add
xchg
ins
imul
stos
push
and
(bad)
fld
inc
cmp
pop
mov
retf
fbstp
fs
iret
xchg
int
mov
bound
leave
call
mov
test
jne
xchg
dec
dec
dec
mov
inc
and
mov
in
retf
leave
(bad)
js
cli
mov
fstp
rol
sub
(bad)
sbb
std
adc
sahf
jg
or
xchg
fcmovnb
mov
ins
in
lahf
leave
fist
mov
xchg
xor
stos
std
popa
out
pop
pop
sbb
out
mov
jp
push
jmp
mov
mov
outs
cmp
fisttp
inc
jne
(bad)
mov
push
(bad)
xor
jg
sub
adc
sti
push
stc
or
cli
std
cmp
jle
daa
outs
sub
stc
cmps
or
dec
or
fwait
out
mov
out
xchg
(bad)
push
loop
adc
rcl
jl
mov
out
xchg
xchg
sub
cmp
fistp
cwde
icebp
inc
and
inc
ds
fmul
xchg
cdq
inc
push
cld
or
in
mov
out
mov
(bad)
and
pop
or
mov
lods
sub
mov
mov
sbb
cmp
test
jecxz
leave
pop
pushf
and
clc
xchg
mov
inc
add
lock
mov
out
jg
repz
fst
fiadd
sbb
imul
pop
adc
repz
pop
and
(bad)
mov
mov
pop
jbe
ds
jmp
outs
(bad)
in
shl
mov
repz
jne
sub
mov
push
mov
rcr
jle
test
sbb
retf
push
add
push
mul
repz
(bad)
jmp
push
mov
nop
in
or
sub
jmp
pop
ror
cwde
or
nop
data16
out
sbb
jae
or
(bad)
clc
mov
mov
and
ret
out
out
push
sub
pop
mov
test
je
mov
mov
dec
sti
jnp
movs
mov
sbb
dec
je
mov
(bad)
and
loope
xor
mov
ja
daa
sbb
mov
or
ficomp
test
dec
add
and
retf
sbb
bound
dec
jge
and
les
mov
repz
(bad)
imul
bound
and
call
push
sbb
jle
or
sahf
push
in
jp
in
xlat
scas
mov
pop
mov
xor
leave
add
jmp
in
mov
aaa
cmp
inc
pop
cmp
jge
and
mov
xor
dec
jns
out
imul
and
stc
mov
dec
js
dec
cld
xchg
test
jmp
sub
sub
mov
or
push
jno
and
xor
jle
add
loopne
mov
jns
in
pop
cld
jmp
out
mov
sub
test
sub
(bad)
stos
je
test
cld
icebp
rcl
or
out
adc
mov
push
(bad)
pop
das
xchg
rcr
xor
fwait
xchg
pop
xor
pop
fdivrp
in
scas
mov
sbb
mov
pop
mov
jmp
nop
sbb
outs
and
inc
cmp
sbb
mov
jbe
push
fmul
push
push
sbb
ret
xchg
inc
stos
dec
sbb
and
mov
or
jae
ins
in
call
push
xchg
mov
and
daa
cld
ror
shr
xchg
mov
pop
in
inc
aad
xchg
xor
je
xchg
push
sti
push
cli
aaa
data16
xlat
shl
push
outs
mov
sub
cli
jle
fdivr
xchg
shr
pop
loopne
sbb
pushf
jl
cmps
xchg
fstp
dec
nop
xor
cli
pop
sub
ficom
out
adc
jl
out
add
mov
loopne
dec
nop
or
les
idiv
stos
es
sbb
inc
sbb
sbb
test
(bad)
sti
sbb
loop
(bad)
ins
xor
jg
iret
inc
add
sbb
pop
or
push
push
mov
push
mov
sbb
jl
and
ds
push
into
mov
lods
sub
(bad)
jp
outs
sbb
cdq
jp
lds
cmps
sar
xchg
fcomi
add
(bad)
xor
and
sar
hlt
call
pushf
(bad)
mov
ins
mov
push
fisub
mov
pushf
mov
cs
mov
or
jne
stos
dec
stos
pusha
push
stc
and
inc
mov
mov
iret
(bad)
xor
ja
imul
mov
leave
add
and
pop
mov
cmp
call
mov
cmp
adc
inc
pushf
popa
out
and
sub
call
jnp
mov
dec
or
sub
adc
in
rcl
icebp
mov
xor
jecxz
add
retf
xor
dec
stc
outs
std
in
pop
fbld
out
sub
rcr
pop
and
push
adc
enter
std
xor
(bad)
retf
cmp
fnsave
xor
rol
fldcw
sti
out
push
bound
cs
rcr
and
push
ss
(bad)
sub
dec
adc
jecxz
jle
cmp
mov
out
in
cmp
inc
aas
dec
out
sub
xor
ret
ds
inc
mov
je
sbb
push
and
cmc
add
das
inc
mov
ret
pusha
jmp
push
shr
(bad)
out
test
lock
add
ss
lods
sub
rcr
in
pop
add
dec
xchg
push
sub
aam
push
xor
pop
outs
pop
fsubr
mov
xchg
add
xor
in
lea
mov
adc
fist
mov
mov
and
ret
or
shl
mov
and
ins
sub
pop
mov
ror
ror
and
and
mov
pop
je
mov
pop
sbb
dec
mov
aaa
call
jp
ret
cld
addr16
je
ret
push
aam
lahf
ficom
popa
and
xchg
cwde
adc
sbb
pop
jle
pop
dec
add
inc
inc
test
loope
das
pop
rol
add
pop
sbb
ja
std
sbb
jecxz
fimul
fdivr
add
jmp
les
ss
sub
es
scas
outs
and
and
sbb
pop
mov
jmp
fist
aam
repz
pusha
sbb
mov
lea
imul
inc
(bad)
cwde
inc
add
and
sbb
jnp
cmp
fbld
mov
shl
call
inc
push
xchg
push
pop
std
cld
sbb
sbb
rcr
retf
mov
rcr
out
dec
pop
or
and
dec
inc
dec
inc
stc
pop
mov
cmps
data16
xlat
inc
cmp
mov
nop
iret
int3
out
push
pop
adc
mov
and
jnp
and
scas
fst
rcr
inc
int
jnp
nop
xchg
(bad)
in
mov
loopne
pop
cmp
int
add
lea
push
pop
jae
lods
mov
ret
mov
mov
sub
mov
fsub
add
in
inc
pop
and
fnstsw
stc
push
xchg
sbb
je
sti
pop
stos
and
jbe
loopne
ins
pop
mov
jae
cmp
lods
xor
push
sbb
mov
inc
or
jl
daa
cdq
je
test
push
jno
adc
ret
xchg
xchg
stc
inc
xor
cdq
scas
and
call
inc
sbb
(bad)
mov
or
dec
pop
mov
out
retf
jne
cmp
dec
jmp
mov
enter
(bad)
(bad)
and
rcr
cmp
cmps
mov
pop
xor
out
inc
xchg
add
cmp
out
mov
cwde
outs
test
jmp
sub
ret
cmp
and
inc
inc
sbb
add
mov
pop
sbb
repnz
call
mov
push
icebp
cmp
jae
adc
jecxz
xchg
ins
enter
aaa
xor
jns
sbb
jge
cwde
xor
pop
icebp
inc
test
jle
shr
pop
ins
in
add
adc
out
pusha
mov
fild
ret
rcr
sub
push
pop
adc
ds
aad
adc
retf
fst
pop
jle
aas
sbb
bound
je
push
xchg
push
es
fstp
inc
sub
js
mov
sbb
dec
mov
and
fucomp
mov
add
cld
adc
shl
mov
fs
fld
dec
jmp
dec
mov
mov
cmp
les
pop
add
adc
xchg
xchg
(bad)
or
ror
and
cmp
inc
and
sbb
add
dec
sbb
cmp
pop
push
in
in
stos
fs
mov
add
and
xor
enter
in
mov
pop
rcl
pop
or
sub
adc
jbe
push
adc
in
xlat
test
aad
inc
inc
pop
leave
xchg
hlt
pop
loopne
fisttp
push
or
xor
inc
aad
ret
jns
enter
loopne
aad
adc
pop
(bad)
xchg
mov
(bad)
mov
jne
and
aaa
cmps
fwait
(bad)
jmp
lock
sti
sbb
jl
pop
mov
dec
adc
add
mov
ror
sub
imul
jmp
adc
jg
jl
lods
and
sub
jmp
addr16
mov
dec
push
jae
or
dec
or
das
xor
fwait
jne
jmp
retf
std
lods
jl
sbb
frstor
test
sbb
fcomp
jno
xchg
(bad)
push
xchg
inc
shl
int
inc
cmp
inc
popa
repnz
or
push
inc
into
aam
out
push
mov
imul
xor
push
(bad)
mov
push
(bad)
and
inc
cdq
test
jl
icebp
retf
inc
scas
or
mov
arpl
jp
mov
leave
dec
push
and
xchg
stc
jae
mov
retf
jle
pop
ins
in
out
push
sbb
movs
aad
add
add
cmp
or
mov
add
mov
and
sti
pop
(bad)
dec
ret
jnp
pop
and
test
jp
push
ret
cmp
in
jae
ret
adc
and
xor
and
jbe
push
xchg
fcmovne
xchg
test
push
pop
dec
sub
mov
jnp
dec
mov
jb
pop
mov
mov
cmp
and
sub
outs
jmp
or
aam
and
adc
adc
call
dec
cmp
push
cmp
adc
jl
pop
push
xchg
sub
adc
mov
cmp
xchg
and
enter
cmp
fidivr
add
mov
into
cdq
sbb
mov
mov
sbb
cmp
fcom
sub
in
xchg
push
out
mov
xor
stc
lods
lds
in
add
xchg
mov
xchg
mov
inc
sahf
inc
push
retf
xor
inc
repz
and
rol
ins
cmp
ins
jno
dec
pop
push
xor
jecxz
dec
cmovl
dec
xchg
jmp
add
cmps
push
movs
shl
pop
cmp
cmp
xchg
or
mov
pop
pop
add
sti
pop
lea
enter
xchg
sbb
stc
js
leave
mov
addr16
mov
jle
xor
sbb
and
out
and
xchg
push
ins
inc
pop
out
cwde
cdq
xchg
mov
adc
adc
aas
int3
scas
out
loop
dec
test
mov
ins
inc
pop
and
not
xchg
dec
pop
sub
mov
xor
push
sbb
sub
sbb
sbb
mov
(bad)
loopne
push
int
inc
fcmovnbe
pop
neg
jae
xor
push
push
fisttp
fld
sub
xor
add
cmp
inc
movs
fs
mov
cmp
adc
repz
sbb
(bad)
or
pop
sbb
(bad)
nop
mov
add
loopne
fisttp
jl
stos
jmp
movs
pop
shl
addr16
adc
cmp
leave
in
xchg
push
and
pop
js
adc
inc
and
frstor
add
add
dec
pusha
adc
add
xchg
pop
mov
imul
pop
xor
call
inc
daa
pop
jmp
das
shl
mov
(bad)
cwde
pushf
dec
pop
fwait
push
and
in
(bad)
and
xchg
neg
cmps
das
jns
jmp
sbb
mov
or
stos
sbb
and
popf
aaa
mov
jle
movs
push
xor
mov
jle
mov
mov
bound
lock
in
es
pop
ret
fstp
shr
fdivr
xor
and
xor
or
or
cmp
ds
mov
in
ins
mov
lods
pop
adc
sbb
jge
neg
sbb
ins
mov
aaa
int
ins
inc
xchg
stc
jle
mov
and
ja
push
pop
xchg
dec
int3
and
sti
fsub
scas
xchg
mov
test
and
cdq
(bad)
loope
pop
(bad)
fild
scas
ja
push
cmp
out
loope
lock
mov
fwait
jne
jp
sub
jae
enter
pop
mov
and
mov
leave
scas
ret
jae
das
popf
pusha
sbb
add
cdq
verw
push
(bad)
mov
and
sbb
dec
scas
mov
pop
rol
int
push
sub
arpl
mov
pop
or
(bad)
cmp
xchg
add
push
mov
in
gs
rol
fstp
enter
clc
popf
lods
test
movs
into
ret
push
inc
(bad)
mov
and
sbb
and
and
mov
cmps
adc
xor
std
fnstsw
jecxz
arpl
xchg
mov
dec
and
mov
test
mov
lods
ficomp
(bad)
aam
mov
mov
sbb
mov
popa
sti
pop
call
in
mov
cmps
aad
xchg
sbb
ror
sub
push
int3
js
push
jne
fistp
pop
xchg
stc
xchg
and
pop
cmp
dec
sub
cmc
cwde
gs
xor
sahf
inc
stc
mov
test
jmp
sbb
in
xlat
scas
out
cmp
movs
popa
lea
jno
sbb
pcmpeqb
sbb
lock
xchg
pop
pop
xchg
jbe
or
sbb
je
cmps
add
mov
sar
aaa
or
int
pop
push
mov
pusha
pop
sar
jle
push
or
add
int3
pop
jp
stc
popf
xor
push
xchg
and
shr
add
sub
sbb
mov
and
mov
test
mov
inc
js
mov
or
ret
scas
test
jmp
and
sub
cmps
xchg
adc
adc
rol
push
push
adc
xor
adc
cmp
popa
inc
shl
mov
pop
xor
fldcw
add
or
inc
adc
sahf
bound
je
wrmsr
jno
fistp
fcomp
mov
jg
and
xchg
fidiv
fiadd
imul
mov
push
js
cdq
dec
pop
fistp
mov
fistp
daa
das
inc
or
and
mov
push
ins
xchg
retf
adc
clc
xor
loopne
mov
xor
adc
frstor
icebp
sbb
mov
push
pop
(bad)
jmp
mov
sbb
cmps
xlat
jmp
and
stos
es
retf
pop
(bad)
in
fbstp
fsubr
sbb
(bad)
out
sbb
into
mov
mov
repz
dec
(bad)
dec
lea
sbb
lods
ja
sti
and
(bad)
jle
out
cmp
out
mov
mov
and
stc
cs
cmp
fisub
inc
int3
in
cdq
(bad)
mov
pop
fild
sbb
xor
jl
adc
dec
push
call
cmc
dec
call
shl
and
pop
inc
lock
xchg
mov
and
sub
mov
or
pop
xor
add
repnz
test
adc
mov
mov
pusha
push
packuswb
adc
ret
(bad)
into
ss
mov
xchg
add
mov
adc
and
and
jg
lock
xor
xor
fs
cmp
sbb
add
pop
call
cmovnp
pop
sbb
pop
inc
outs
fimul
ss
fistp
into
mov
scas
xor
retf
adc
sub
fild
push
fistp
adc
out
fucomi
mov
fldcw
pop
or
mov
xchg
fbstp
lds
repz
mov
and
dec
cmp
(bad)
mov
outs
imul
pop
call
push
inc
test
movs
(bad)
(bad)
and
out
pusha
sbb
adc
inc
das
xor
addr16
fsubr
push
mov
ins
cwde
icebp
leave
sbb
fisttp
(bad)
pop
repnz
pop
jle
xor
add
(bad)
cdq
sbb
test
int
enter
fbstp
mov
das
pop
js
jae
in
movs
fstp
adc
xor
pop
dec
pop
fnsave
aad
xchg
pop
fistp
imul
movs
and
jecxz
cmc
adc
lock
mov
inc
out
mov
dec
inc
fist
sar
sub
jmp
mul
fistp
es
scas
mov
mov
mov
inc
(bad)
fstp
add
gs
retf
dec
loop
fistp
pushf
loopne
je
shl
add
fucomi
test
call
mov
scas
jo
call
fisttp
fld
mov
test
add
mov
mov
inc
mov
int3
repz
pop
loopne
add
mov
sbb
iret
add
adc
int3
repz
mov
stc
inc
xor
scas
xchg
(bad)
sub
cwde
push
int
popa
sti
mov
call
dec
repz
movs
xchg
mov
jae
mov
les
fptan
sub
stos
gs
repz
jmp
ss
sbb
fcomp
ins
push
outs
daa
hlt
retf
pop
icebp
int
cmp
adc
sbb
push
fisttp
and
sti
pusha
xor
pop
fist
adc
mov
test
pop
xlat
test
inc
adc
(bad)
and
fdiv
jecxz
aad
pop
inc
imul
add
cmc
push
mov
popf
cs
xlat
movs
and
and
btr
cmp
cs
xchg
push
mov
push
jmp
inc
and
mov
inc
xrelease
pop
push
addr16
cdq
je
je
imul
push
push
jbe
popf
xchg
or
jns
fsincos
cwde
mov
fidiv
aam
pop
out
and
push
fwait
aam
je
sub
push
rol
xor
push
push
sbb
xchg
dec
out
int3
pop
aaa
test
cwde
push
xchg
fstp
dec
sbb
push
(bad)
fsubr
xor
ret
mov
jg
pop
and
icebp
mov
lea
loop
out
adc
xchg
push
hlt
add
inc
pop
sbb
outs
call
pop
shl
inc
das
or
xlat
das
push
mov
pop
js
lock
scas
mov
fidivr
mov
cmp
fistp
xor
mov
shl
popa
jne
outs
pop
out
cmp
add
imul
and
sbb
icebp
add
fimul
xchg
jmp
shl
xchg
and
sbb
ins
push
jge
icebp
push
push
stos
or
scas
or
fmul
fwait
pop
and
mov
cli
icebp
fimul
sbb
rcl
inc
sbb
jbe
mov
jb
(bad)
std
pop
and
adc
adc
shl
out
mov
stos
dec
cmp
pusha
push
cmp
cmp
xor
jne
dec
cmp
xchg
call
cdq
daa
xlat
mov
ins
cmp
cdq
les
cs
mov
test
enter
jo
repz
mov
dec
pop
jmp
sub
cmp
je
mov
adc
lock
mov
xchg
addr16
pop
movs
jnp
xlat
and
jge
stos
ret
xor
jp
sbb
sbb
xor
mov
pop
pop
stc
xchg
add
mov
adc
jl
(bad)
xchg
add
dec
ins
mov
call
and
pop
and
cld
pop
gs
mov
pop
and
(bad)
rcl
inc
out
xor
cs
and
retf
rcl
and
sbb
inc
cmp
and
xor
into
ins
imul
cmp
and
rol
in
dec
add
cld
pusha
mov
std
jo
jecxz
cmp
fcom
or
dec
aaa
sub
push
sti
sbb
test
push
mov
call
out
scas
xor
fstp
nop
xor
push
push
mov
xor
in
fisubr
jge
sub
inc
ins
pop
mov
div
fld
cmps
outs
into
fstp
retf
fild
repz
pop
repz
adc
in
pop
pop
fs
mov
xor
hlt
stos
mov
and
and
ret
xor
std
icebp
push
jmp
inc
lods
call
aam
inc
repz
dec
fwait
or
mov
(bad)
fstp
aam
test
jmp
and
out
stc
ret
jecxz
inc
shr
repz
jnp
rcr
(bad)
dec
out
xchg
and
jmp
loopne
jbe
jmp
push
sbb
and
pop
(bad)
arpl
mov
repnz
fmul
cdq
push
inc
in
add
cmps
pop
add
mov
fcom
shl
add
dec
sbb
sbb
jno
fild
cwde
push
sbb
push
je
sub
daa
not
int3
jo
pop
jno
push
jmp
int3
neg
ror
adc
push
in
mov
jmp
dec
(bad)
mov
sub
loope
sbb
fstp
sub
and
mov
mov
loop
push
inc
stc
stc
push
retf
ins
xor
mov
xchg
xor
sub
scas
xchg
arpl
int
cdq
sub
mov
xchg
dec
jmp
icebp
or
lods
iret
add
ret
push
mov
cmp
jg
inc
dec
mov
or
or
mov
dec
nop
push
sbb
push
jbe
xor
mov
outs
scas
scas
add
mov
or
movs
mov
into
xor
pop
mov
jmp
clc
push
retf
cmp
imul
add
jo
sub
xor
daa
scas
cmp
nop
mov
(bad)
out
iret
cmp
cmps
pop
dec
xor
add
sbb
mov
lds
and
repnz
dec
adc
cld
xchg
enter
mov
ficom
sbb
(bad)
gs
sub
out
not
jl
sub
cwde
shr
mov
jns
sbb
jae
inc
xor
fdivr
or
(bad)
sub
add
js
popf
pop
ret
je
and
xor
stos
jmp
out
jmp
shr
mov
sbb
xor
pusha
jnp
mov
lock
sbb
mov
ret
fist
and
mov
mov
push
add
and
and
test
mov
mov
jmp
xchg
xchg
mov
in
pop
jbe
inc
push
lods
and
and
mul
pop
jp
in
gs
(bad)
(bad)
sub
push
cmps
ins
pushf
stc
jnp
sbb
dec
add
fstp
mov
mov
dec
cld
xlat
adc
pop
sub
xor
scas
or
or
mov
jb
pop
sbb
pop
fidiv
movs
mov
mov
sbb
xor
inc
pop
repz
mov
sub
fsub
and
push
shl
mov
xchg
push
mov
test
jmp
imul
loop
xchg
(bad)
adc
cmps
and
popf
cwde
mov
ins
jmp
sub
xchg
jl
test
jg
and
ins
mul
fistp
pop
int
pushf
push
out
xchg
cmp
call
test
out
nop
icebp
push
ret
(bad)
mov
je
push
call
sti
in
ret
xor
fcomp
sbb
add
lds
adc
and
lds
pop
pop
(bad)
sbb
out
(bad)
lods
test
inc
cmp
call
jae
sti
sbb
or
pop
adc
sbb
and
jl
and
addr16
(bad)
aad
xor
add
pop
nop
sbb
sti
mov
dec
fcom
push
pop
(bad)
lods
pop
and
clc
xchg
stc
loope
xor
(bad)
or
xchg
mov
cwde
xchg
fsub
retf
xchg
mov
sbb
dec
rcr
xchg
stc
(bad)
popf
(bad)
mov
fwait
rcr
push
shr
sub
mov
frstpm(287
jge
mov
xor
in
sahf
test
test
pop
mov
dec
(bad)
ins
pop
and
xor
mov
and
and
sti
xchg
aas
test
lods
fstp
test
dec
push
lahf
mov
xchg
xor
cmp
mov
fist
aas
repnz
js
or
or
pushf
pop
out
sbb
mov
imul
int3
call
bound
xor
dec
xchg
jno
call
scas
xchg
rol
fisubr
outs
shl
(bad)
imul
and
cli
call
and
push
test
retf
pusha
jo
sbb
add
fist
mov
scas
loop
push
rol
add
leave
mov
xlat
movs
into
fcomp
add
mov
xchg
xor
sbb
lods
scas
into
test
add
cdq
outs
adc
sbb
in
jbe
ret
jmp
mov
mov
cdq
add
inc
sbb
xchg
jmp
dec
aas
popa
pop
fwait
icebp
cli
push
xchg
pop
(bad)
ins
data16
mov
mov
pop
(bad)
mov
hlt
adc
hlt
or
pop
adc
loopne
xchg
dec
out
adc
dec
jb
dec
stos
fdivr
popa
lods
fdivr
fld
jle
popf
imul
clc
daa
aas
test
aam
push
fs
sahf
jne
sti
pop
or
mov
and
mov
mov
mov
iret
or
cs
xchg
and
sub
push
and
pop
neg
add
jnp
jecxz
jno
xchg
mov
and
mov
pushf
cmp
(bad)
pop
leave
in
add
hlt
sbb
and
dec
pop
sbb
aaa
cld
and
and
scas
(bad)
stc
jge
push
push
in
push
jge
jbe
rcr
aad
and
jbe
mov
inc
fimul
and
mov
ss
push
adc
sar
inc
sahf
adc
push
mov
cmps
inc
test
push
stos
mov
clc
lods
mov
test
xchg
push
ds
fnstsw
inc
je
add
js
clc
jg
ins
jbe
xchg
aaa
sar
ja
mov
jno
in
out
jge
aas
jbe
sti
cdq
repz
fucomip
mov
lea
xor
jae
inc
into
shl
loop
cld
ret
dec
sbb
ror
ja
mov
lods
je
(bad)
cmp
int
mov
sti
dec
cmp
mov
js
out
mov
ins
scas
(bad)
inc
pop
add
mov
and
sbb
adc
pushf
out
lea
stos
push
mov
push
sar
xor
int
je
sti
adc
sub
into
out
mov
in
fild
and
inc
stos
mov
out
in
je
jmp
sub
rcl
jl
scas
mov
neg
lahf
ret
xchg
sbb
out
loope
fild
ins
and
pop
clc
or
xor
push
mov
test
sbb
cmp
push
jl
repnz
xor
dec
jns
inc
jle
fdivr
lahf
add
into
fsubr
data16
test
cli
jecxz
shr
clc
sub
push
ret
mov
sbb
fsubr
mov
xor
bnd
pop
pop
pusha
out
mov
or
clc
inc
dec
outs
mov
push
fst
and
push
(bad)
sub
dec
jo
je
mov
rol
sub
inc
pusha
daa
mov
inc
add
jbe
nop
shl
ret
jae
(bad)
pop
(bad)
or
aad
xchg
ins
loope
iret
data16
sahf
test
jmp
jnp
arpl
mov
inc
jmp
mov
iret
cmp
pop
jmp
ds
pushf
cwde
into
add
leave
jl
loopne
and
into
fidivr
popf
pop
mov
pop
out
mov
mov
je
cld
cwde
in
imul
and
cmp
pop
sbb
shl
xor
push
movhps
adc
cmp
cmp
ins
push
and
fcomip
and
ror
pop
mov
and
inc
in
pop
inc
leave
lahf
sbb
xchg
sbb
sbb
and
shl
xchg
add
pop
add
dec
cld
mov
jns
icebp
scas
pop
jae
sub
movs
fwait
in
es
fiadd
int3
jmp
jae
cdq
and
xor
mov
ficomp
mov
nop
xor
(bad)
cli
jp
pop
cli
and
xor
pushf
adc
sub
push
mov
ins
rcr
popf
cdq
cdq
add
cmc
fisttp
and
xchg
ja
sbb
push
aam
mov
or
movs
bound
fnstcw
jp
test
xchg
lods
maxps
aam
test
inc
ins
push
retf
loope
je
int
cmp
xor
nop
pop
(bad)
sub
dec
push
es
(bad)
addr16
xchg
xchg
fild
mov
sbb
(bad)
leave
jne
test
lds
jmp
ja
mov
rcl
cli
dec
adc
jo
xchg
jmp
ss
das
sbb
outs
sub
adc
push
add
mov
mov
loope
mov
or
addr16
outs
ret
leave
retf
ror
fimul
adc
pop
repz
test
call
sbb
addr16
mov
and
bound
in
lods
ret
cmps
add
mov
mov
sbb
stc
inc
mov
sub
cld
ror
xor
sub
mov
inc
xchg
mov
push
fist
add
sti
push
xchg
cmc
dec
add
cli
rol
dec
or
call
mov
loopne
cwde
loope
cs
aas
fsub
lahf
loop
mov
in
mov
adc
and
xor
mov
jle
jg
mov
xor
pop
xchg
das
scas
sub
pop
shl
inc
out
mov
xor
paddw
dec
add
pushf
dec
sbb
sub
mov
movs
lods
push
retf
addr16
pop
push
push
mov
int3
ins
cld
ret
dec
or
stos
sub
push
sbb
out
pushf
lods
ret
call
test
pop
mov
rcr
add
jb
push
add
ss
pop
cmp
push
fidivr
xchg
cmp
mov
lods
into
jle
fldcw
adc
aaa
shl
cld
and
(bad)
xor
xchg
sbb
pop
adc
(bad)
ss
jg
ins
in
es
test
and
inc
cwde
pop
cmp
js
loope
cmc
jb
das
into
lods
std
(bad)
mov
jecxz
rcr
xor
cld
popf
popf
ss
push
pop
xchg
cs
jno
or
cmp
das
lods
jecxz
pop
int3
cmp
test
cmps
add
mov
sbb
push
pop
jp
movs
push
xchg
push
das
int3
loop
popa
adc
cs
pop
aad
lods
call
mov
push
xor
adc
cs
call
js
jbe
fimul
push
shl
sub
ss
inc
xchg
mov
ss
stos
add
cmps
sbb
push
fidivr
pop
div
mov
push
mov
leave
jle
fimul
and
ret
jmp
ins
fcomp
sbb
ins
mov
xchg
scas
repnz
adc
retf
and
sbb
push
sbb
and
pop
icebp
ins
sbb
add
and
mov
repz
jmp
cs
(bad)
out
sbb
mov
sub
aam
les
adc
xor
mov
mov
lea
imul
mov
fimul
jnp
xchg
stc
cmp
outs
stos
arpl
pop
pop
jno
mov
fild
out
aaa
pop
mov
mov
or
into
dec
test
(bad)
mov
fs
repnz
and
mov
xchg
push
mov
mov
sbb
pop
sbb
lods
scas
jb
add
je
loopne
retf
pop
jecxz
stos
out
fldcw
jge
and
and
add
sbb
add
sub
test
pop
push
rcr
xchg
pop
cli
aas
adc
out
popa
dec
mov
std
xchg
pop
(bad)
shl
cdq
cmps
jo
mov
arpl
in
cmp
pop
and
movs
pop
inc
(bad)
ficom
inc
inc
pop
xlat
call
mov
dec
mov
xchg
push
and
fnstcw
sbb
scas
and
and
xchg
and
xchg
frstor
das
repz
ss
cmp
adc
lahf
mov
mov
inc
jae
xchg
xor
sub
cmp
pop
mov
das
ins
shl
movs
(bad)
pushf
and
jbe
scas
cdq
cmps
jae
jl
shl
inc
jmp
iret
pop
fucomi
ret
jne
pop
sub
or
mov
call
fld
xor
in
push
(bad)
cmp
fsubr
fld
jmp
fld
push
jne
pop
or
(bad)
hlt
lods
jp
daa
mov
xor
enter
fcmovnu
out
cli
or
mov
(bad)
shl
call
lahf
out
fstp
jle
fisttp
and
fisttp
dec
mov
ds
lock
xchg
inc
jb
arpl
sbb
(bad)
sar
not
mov
cmp
dec
lahf
icebp
rcl
push
or
or
mov
stos
les
xchg
inc
fild
fcmovnbe
add
push
or
in
int3
aas
pop
retf
cmp
sbb
xor
fwait
dec
cmp
fild
push
xchg
add
repnz
fcomi
fsubr
sbb
mov
dec
int
iret
adc
push
aaa
push
inc
cmps
push
jno
mov
imul
sbb
and
repz
mov
in
adc
xor
push
addr16
sub
dec
sub
call
retf
and
dec
fistp
pop
mov
js
xlat
or
dec
fld
inc
push
xor
xor
push
mov
sbb
mov
cmp
stc
xchg
ins
pop
aam
xchg
icebp
push
add
cmp
movs
(bad)
push
in
pop
in
test
ins
push
push
aam
aaa
mov
xor
fistp
add
xchg
aad
inc
call
jp
dec
icebp
movs
dec
call
jne
xchg
dec
(bad)
push
push
cmps
xchg
retf
fistp
stos
cli
adc
mov
mov
or
inc
les
gs
fstp
das
adc
fstp
or
jge
fdiv
adc
pusha
fcomp
int
xor
js
sti
xchg
jmp
imul
push
fisub
xchg
xchg
xor
les
in
sub
cwde
out
fcmovnb
dec
push
push
cmp
push
ror
lahf
sahf
xor
mov
jecxz
lea
dec
test
es
mov
lock
(bad)
out
into
push
fnstcw
jmp
popa
xchg
cwde
push
mov
or
jl
inc
aas
adc
push
dec
cld
shl
fmul
fmul
pop
in
mov
adc
jge
jo
in
dec
lods
(bad)
clc
push
mov
dec
pop
push
inc
icebp
out
sbb
jp
fst
outs
inc
mov
jp
sbb
dec
fpatan
fist
dec
addr16
int
je
fcomp
push
pop
mov
inc
mov
fild
das
mov
cmps
into
mov
sub
out
adc
xchg
adc
cmp
cmp
sbb
jmp
dec
movs
fisttp
inc
popa
rcr
pop
in
pop
inc
lods
inc
sahf
fild
push
loope
mov
rcr
(bad)
xor
mov
aam
cmp
and
fstp
in
dec
mov
nop
adc
jbe
mov
push
fmul
xchg
adc
cmps
mov
pop
ja
mov
fstp
pop
aas
sbb
test
mov
push
(bad)
lock
fist
push
fimul
add
mov
fild
mov
pop
cmp
mul
push
ds
fild
in
mov
icebp
sbb
ret
test
push
xlat
out
repz
xchg
in
in
fwait
cwde
jne
data16
lods
mov
fbld
fstp
aad
inc
or
(bad)
push
fdiv
inc
test
pop
push
or
or
nop
dec
pop
or
jne
mov
les
add
mov
lahf
call
icebp
xor
add
popa
mov
(bad)
add
stc
push
aaa
outs
test
inc
js
fdiv
sbb
int3
in
je
mov
inc
dec
fldcw
mov
jns
(bad)
outs
sbb
repnz
jmp
mov
xor
fistp
scas
dec
rol
pop
je
jge
mov
sub
das
inc
dec
mov
dec
cmp
outs
cvtdq2ps
int3
mov
pop
push
jmp
mov
cmp
movs
xchg
rcr
push
xchg
repz
lods
jnp
(bad)
pop
popa
icebp
(bad)
xor
ret
xor
repz
hlt
mov
xor
mov
and
icebp
xchg
push
fstp
sbb
inc
push
fisttp
cmp
and
loop
test
jp
sti
stc
cmp
fcmovnu
mov
sub
fild
pop
pop
adc
ficomp
jnp
(bad)
stc
ds
lahf
imul
js
cmp
lods
clc
popa
inc
fstp
(bad)
stc
cs
fs
(bad)
cmp
adc
dec
push
cmp
neg
push
retf
sub
jne
daa
dec
hlt
add
out
popa
aas
or
lea
cld
adc
fcmovu
mov
pop
sbb
mov
push
dec
bound
push
fldcw
test
pushf
jge
int
mov
inc
adc
adc
mov
xchg
push
xchg
jmp
mov
push
fdiv
or
mov
popa
jmp
popf
jge
ja
fisttp
xor
xor
xchg
jae
sbb
das
cmps
jns
addr16
fisub
(bad)
mov
mov
fild
dec
jle
in
xor
es
add
or
(bad)
clc
fisttp
fcmovnu
xchg
and
iret
repnz
fdivr
aam
fstp
dec
or
push
push
fstp
fisttp
repnz
daa
call
jecxz
test
mov
and
(bad)
(bad)
clc
cli
add
(bad)
mul
int
fwait
jo
fstp
push
fld
and
inc
jmp
cmp
jo
loop
cld
cmp
in
inc
mov
sbb
lods
rcl
(bad)
dec
push
jo
pop
adc
adc
fsubr
stos
push
xchg
sbb
lock
clc
pop
ja
fild
addr16
rcr
jl
aam
push
fwait
and
mov
jge
sub
pop
pop
iret
call
clc
idiv
inc
imul
fstp
shl
adc
jmp
pop
test
fcmovne
stos
popa
fsub
adc
inc
enter
xchg
js
adc
(bad)
inc
fst
imul
mov
xor
out
je
dec
int3
inc
or
xor
inc
fist
fisttp
dec
in
fistp
ins
pmulhw
test
mov
stos
icebp
call
sbb
sub
pop
adc
xchg
int3
mov
fwait
ins
popa
out
sbb
adc
mov
jmp
call
xchg
add
shl
in
fcom
neg
rol
retf
ja
jns
xor
jge
aas
cld
addr16
push
fcomi
jo
inc
xchg
jp
jmp
pusha
(bad)
sbb
aad
leave
mov
(bad)
or
fucomi
loop
lds
call
dec
push
sbb
or
jecxz
cmp
mov
sbb
frstor
or
movs
loope
fs
scas
xlat
inc
fstp
add
sahf
hlt
mov
fcomip
and
inc
fsub
sub
inc
xchg
cli
fcmovnb
stos
outs
sbb
and
sub
dec
or
call
xchg
xor
hlt
jg
fistp
sub
sahf
jmp
xchg
mov
jecxz
fstp
sbb
mov
hlt
loopne
je
(bad)
adc
(bad)
fsub
repz
add
mov
(bad)
stos
ja
mov
popf
xor
nop
retf
in
imul
adc
or
sbb
jmp
jecxz
imul
out
adc
mov
call
or
mov
(bad)
xor
mov
xchg
sbb
cmp
fstp
jle
mov
push
pand
mov
fild
in
cmps
cmps
mov
popa
mov
sub
ins
dec
test
(bad)
xor
retf
sbb
add
cs
mov
or
popf
out
(bad)
xchg
mov
fist
sub
movs
sbb
or
jno
and
fild
fldcw
mov
iret
mov
sbb
sub
mov
fcomp
fcmovne
aas
call
rcr
push
test
dec
aad
cmp
xor
les
xchg
mov
inc
mov
inc
ficom
xchg
rol
adc
lock
clc
xchg
pop
aad
adc
xchg
repz
pusha
or
outs
jg
(bad)
rcl
int3
imul
adc
test
movs
pop
cwde
push
jecxz
adc
(bad)
xor
and
mov
out
adc
xchg
div
dec
mov
mov
ficomp
jge
addr16
pusha
xchg
or
scas
repnz
int3
and
ja
retf
call
iret
shl
pop
cmps
arpl
(bad)
call
sbb
pop
outs
pop
rcl
enter
fucomip
ret
pop
mov
test
xor
and
push
xchg
pusha
push
pushf
and
xor
sbb
(bad)
push
sahf
pop
push
call
push
push
sbb
mov
mov
push
inc
data16
fwait
sbb
sahf
dec
fisubr
cmp
xor
sbb
jbe
popf
mov
push
leave
(bad)
inc
xchg
out
xor
imul
adc
in
push
mov
sub
enter
ficomp
pop
cmp
imul
(bad)
out
fmul
pop
mov
sub
(bad)
out
and
mov
mov
pop
seta
adc
loopne
cmp
pop
xchg
mov
mov
mov
jne
pop
mov
push
and
sbb
fdivr
sub
and
and
cmp
pop
xchg
imul
mov
xor
jne
mov
mov
xor
mov
fisubr
and
loope
mov
mov
push
pop
popf
imul
add
jecxz
jmp
and
add
std
mov
stc
les
mov
push
lahf
js
rcl
jge
xor
xchg
push
sub
pop
sar
add
mov
ss
enter
sbb
and
and
mov
jmp
fstp
xchg
sahf
stc
cdq
adc
into
repz
adc
inc
in
adc
mov
aad
stc
cmp
outs
fistp
pop
dec
jmp
dec
bound
hlt
fbld
adc
lds
xchg
cli
iret
and
ss
mov
fisttp
lods
mov
scas
repnz
inc
movs
cli
xchg
mov
ss
(bad)
aaa
jmp
sub
loope
mov
mov
clc
sbb
(bad)
fimul
pop
pop
xchg
loop
inc
xchg
sbb
ins
pop
clc
call
mov
dec
xchg
push
adc
adc
addr16
pop
shr
and
dec
(bad)
push
lods
fstp
xchg
add
push
pop
fmul
xlat
fstp
add
jecxz
push
mov
mov
(bad)
pop
in
test
or
call
gs
(bad)
repz
jle
or
inc
mov
push
or
stc
fild
push
loope
sbb
jmp
cmc
mov
xchg
ret
xchg
arpl
jmp
and
(bad)
xor
sbb
push
into
push
cmps
fsub
retf
sub
inc
push
inc
inc
pop
call
pop
adc
add
jp
int3
jecxz
data16
imul
xchg
pop
push
sbb
push
rol
(bad)
xchg
push
jp
xor
cmp
icebp
stos
jl
push
and
mov
imul
fwait
jg
ror
mov
mov
mov
(bad)
jmp
shl
xor
pop
out
sbb
inc
jmp
pop
cwde
xchg
and
jmp
in
adc
sub
pusha
sub
data16
xchg
adc
jbe
cmp
fsubr
jmp
fwait
jl
cmp
xchg
leave
jp
test
push
in
dec
inc
sub
sub
mov
adc
inc
push
cmp
call
and
xlat
cmps
sbb
cmp
test
nop
(bad)
lods
dec
add
mov
jbe
cmp
cdq
mov
sti
scas
sub
fidiv
sahf
mov
sti
xchg
push
call
and
jmp
cmc
push
mov
fcomp
sub
in
stc
rol
sbb
jmp
jecxz
inc
inc
pop
jp
and
and
mov
sub
and
inc
outs
into
ins
xlat
xchg
xor
fld
aam
jmp
inc
push
shl
sub
mov
inc
aam
dec
add
jge
sahf
loopne
xchg
cdq
dec
into
shr
sub
rcl
enter
cmc
adc
sbb
(bad)
mov
fistp
mov
xor
sbb
mov
push
hlt
test
jmp
xchg
mov
mov
fcmovnu
test
pand
xchg
loop
fisttp
es
adc
outs
imul
loope
mov
push
mov
cmpxchg
pop
jmp
cwde
xchg
fld
cmp
repz
dec
and
lods
fstp
sub
cmp
imul
mov
es
(bad)
mov
ds
xor
mov
std
fstp
(bad)
fcmovne
push
rcl
add
fucomi
adc
fdivr
call
push
out
add
pop
mov
ins
fild
and
loope
push
mov
pop
test
dec
jle
les
addr16
shr
ds
lds
xor
jge
dec
inc
xor
in
stc
ffreep
adc
sar
mov
pop
seta
mov
pop
fstp
push
aam
es
xchg
in
mov
push
mov
push
aam
int3
adc
jecxz
bound
fld
xor
ins
stos
xor
ins
cli
ss
(bad)
inc
(bad)
inc
sbb
adc
or
into
add
fisubr
adc
rcl
xchg
out
fld
outs
ja
ja
fstp
cmc
xor
fucomi
push
dec
or
fstp
les
add
push
movs
cmp
iret
push
sti
push
std
repnz
mov
or
push
call
fld
retf
(bad)
fld
or
cmp
cmp
or
(bad)
sti
mov
sbb
movs
ret
adc
repnz
fisttp
lahf
push
out
fld
or
mov
(bad)
ror
fstp
cmp
aad
(bad)
repz
mov
imul
sbb
lods
cld
lock
fstp
sub
movs
fcmovnu
push
enter
fdivr
adc
sub
or
jno
aaa
jae
retf
in
lds
rcr
retf
pand
(bad)
aad
cld
xor
(bad)
(bad)
sbb
ja
imul
imul
xlat
inc
(bad)
popf
cmp
stc
xchg
inc
fcmovne
addr16
pop
pop
call
repz
xchg
(bad)
and
mov
mov
rol
and
(bad)
push
inc
push
xor
dec
mov
outs
(bad)
fcomip
aaa
fld
(bad)
shr
sbb
sub
out
push
jnp
nop
ret
inc
out
int3
xor
in
dec
and
rcr
pop
cmp
movs
popa
mov
lods
fbld
cs
nop
ficomp
(bad)
fdivr
sti
test
imul
leave
(bad)
push
fs
fistp
fcom
pop
jne
bound
dec
cmp
adc
push
inc
jle
in
jbe
dec
cvtpi2ps
mov
pusha
fistp
cwde
jo
mov
popa
or
sbb
add
ins
pop
pop
xchg
test
loop
push
rcl
jge
mov
sti
sbb
es
or
popf
lock
cwde
ja
mov
cmp
int
(bad)
repz
aaa
icebp
inc
cmp
fcom
jmp
jb
push
push
sub
xchg
loopne
frstpm(287
dec
scas
data16
sti
jecxz
and
inc
mov
or
ficomp
ret
jnp
ja
cmp
out
sbb
fisttp
das
adc
xor
dec
(bad)
pop
movs
mov
xor
(bad)
jbe
gs
fild
add
rcl
jns
int3
xchg
xor
jb
dec
jnp
stc
fld
pop
fisubr
out
ret
or
movs
mov
ja
pushf
fcmovnu
jo
jmp
adc
iret
cdq
call
pop
dec
fld
ja
lds
mov
scas
hlt
adc
aam
push
int3
pop
push
fild
and
add
scas
jecxz
stos
aas
lds
dec
je
xacquire
dec
xor
(bad)
loope
and
xchg
imul
pop
int3
mov
mov
jne
or
mov
push
ret
pop
inc
jecxz
outs
mov
mov
in
(bad)
and
clc
mov
adc
mov
stos
adc
adc
or
sbb
jecxz
(bad)
pushf
sbb
(bad)
lahf
jl
(bad)
mov
int
mov
mov
add
rcr
jae
mov
jecxz
sbb
jge
cmps
(bad)
jnp
inc
adc
movs
jne
xor
into
aad
(bad)
imul
jb
mov
xchg
xor
xchg
pop
dec
mov
fisttp
fwait
shr
call
ja
and
loop
cs
into
push
outs
rcr
xchg
fstp
fcomp
aaa
stc
xchg
popf
sbb
push
or
pop
out
jns
fstp
test
push
dec
iret
enter
pop
ficomp
fs
mov
jle
fld
push
pop
addr16
mov
xor
loope
add
inc
xchg
inc
sub
push
fiadd
xchg
inc
fimul
int
js
stc
ins
mov
jbe
addr16
fnop
clc
and
sahf
add
daa
hlt
fldl2e
cmp
and
cli
popf
aad
mov
shr
inc
xchg
fiadd
or
adc
mov
fwait
aad
les
or
pop
push
push
jge
dec
fucomi
daa
pop
iret
lods
pushf
jns
or
or
mov
mov
fistp
sahf
mov
out
add
jge
xor
(bad)
push
(bad)
loop
fist
or
repz
arpl
push
jl
sbb
outs
stos
outs
xchg
mov
cmp
iret
push
fidivr
xor
sub
pop
jmp
push
fist
test
and
call
int3
push
fld
hlt
xor
add
cli
jmp
xor
xlat
push
fcmovnb
jb
pop
movs
sbb
dec
fstp
mov
popf
cmp
jne
(bad)
sub
out
iret
aas
cdq
das
test
pop
pop
fbld
inc
mov
repz
mov
pusha
fisttp
xchg
ins
iret
jns
es
fild
(bad)
inc
fimul
sbb
mov
dec
lahf
sbb
jl
ja
and
adc
inc
fist
enter
sbb
inc
aam
add
cmp
je
retf
push
pop
jb
js
fisttp
in
cs
sar
fnstenv
loop
or
fcmovne
cmp
stos
loope
mov
repz
xchg
jecxz
popa
add
jb
mov
xchg
sbb
mov
jns
add
fmul
fisttp
rol
loop
or
out
in
outs
or
test
adc
addr16
loopne
sub
xchg
cwde
(bad)
sbb
cmp
inc
xchg
xchg
iret
cmps
cmp
pop
int3
or
fisttp
stos
add
movs
out
sbb
pop
cmp
jle
push
dec
hlt
dec
in
fadd
int3
or
fsubr
dec
cmp
fstp
xor
add
push
dec
test
fistp
fsubr
shl
inc
jbe
fisttp
arpl
jmp
hlt
adc
or
xchg
loope
sub
sub
mov
xchg
push
mov
(bad)
mov
movs
std
dec
ins
jle
fcomp
aad
mov
dec
aas
xor
pop
call
ret
aad
push
dec
xlat
fild
pop
push
sbb
lds
imul
xor
jecxz
test
add
call
popa
scas
fld
push
xchg
fisub
mov
iret
pop
xchg
xchg
adc
dec
jecxz
fcom
xor
inc
cmps
jnp
loopne
hlt
imul
fidivr
rol
mov
push
fld
mov
fs
or
xor
or
jo
loope
scas
pop
adc
stos
jns
scas
pop
jmp
sbb
clc
fcmovu
and
test
sub
outs
mov
fwait
sub
jp
dec
hlt
pop
rcl
enter
iret
sbb
jle
sbb
aad
xchg
push
aas
jno
loope
xor
addr16
jg
sbb
in
and
loope
pop
sub
pop
sysenter
or
stos
mov
cmp
and
pop
xchg
loope
fsub
inc
mov
push
jb
pop
or
mov
call
pop
jmp
outs
imul
outs
popf
mov
rcl
cdq
mov
mov
call
imul
xchg
ficomp
mov
shr
mov
inc
inc
imul
cld
lds
scas
les
mov
push
in
xchg
jg
adc
div
xor
pop
out
mov
cmp
xchg
add
and
xchg
push
(bad)
push
xor
mov
pushf
xor
and
clc
icebp
mov
sub
rcl
call
jmp
sbb
(bad)
std
pop
mov
and
xor
mov
ds
mov
mov
outs
sub
ins
shl
addr16
inc
dec
ins
sbb
add
cld
cmps
dec
cmp
jle
cmps
ja
mov
out
and
jae
adc
add
popf
or
pop
fnsave
lea
lods
stos
adc
push
mov
add
add
pusha
cmp
fst
jmpw
mov
xchg
scas
add
mov
fld
mov
sbb
stc
ins
pop
shr
or
xchg
jno
inc
mov
xor
out
jnp
xor
push
loope
stos
and
fistp
ins
push
movs
retf
mov
shl
pop
adc
mov
enter
pop
push
push
int
sti
jnp
aas
mov
shl
pop
test
aam
xchg
in
mov
add
xchg
popa
dec
sbb
ins
and
dec
sbb
push
xchg
scas
das
lock
cld
lds
pop
nop
cmp
nop
mov
clc
mov
push
or
xchg
and
jb
dec
push
cmp
int3
imul
push
(bad)
pop
cmp
ret
sub
mul
mov
mov
in
and
mov
sbb
mov
fisttp
mov
shr
outs
movs
cmp
or
xchg
push
or
and
rol
(bad)
lods
sub
(bad)
cmp
and
mul
sti
cmp
cli
out
sbb
arpl
adc
mov
pop
mov
sub
xor
pop
push
pop
jmp
popf
add
dec
xchg
lods
loope
das
mov
push
mov
jge
pusha
pop
dec
add
jmp
inc
call
mov
loopne
xor
(bad)
ror
or
hlt
or
fadd
enter
shl
(bad)
fisub
ins
push
js
sbb
mov
pushf
outs
xor
xchg
fnsave
mov
inc
adc
retw
add
fistp
jmp
lods
pop
and
and
cwde
sbb
mov
jle
lods
test
daa
sub
je
shr
inc
retf
outs
xchg
stos
pop
or
in
cmp
ins
pop
mov
aas
push
cdq
xchg
popa
fstp
cld
loope
sub
into
lahf
add
dec
inc
add
dec
arpl
leave
(bad)
adc
cdq
mov
ins
(bad)
add
shr
cmc
fmul
sbb
dec
dec
pop
and
(bad)
mov
xchg
cmp
fsubr
xlat
or
out
jbe
push
pop
jne
xlat
lods
(bad)
ror
pop
in
cmp
push
pop
outs
pushf
push
mov
leave
fnop
nop
ret
test
push
cmp
pop
jmp
mov
ins
xor
xor
cld
xchg
push
fisttp
pop
ds
cwde
dec
mov
sbb
add
xchg
fst
rcr
(bad)
std
je
cmps
mov
leave
dec
mov
jmp
pop
(bad)
push
dec
sub
dec
cld
sbb
xor
gs
xlat
pop
test
es
shl
sub
retf
test
cmp
fdiv
xchg
sub
mov
loope
xchg
lods
data16
jl
jno
add
mov
cmc
das
out
mov
xchg
push
jnp
pop
pop
fsubr
jmp
sub
pop
jae
aaa
xor
rol
jbe
add
bnd
xlat
ds
inc
add
and
mov
leave
stos
sbb
push
cdq
test
arpl
les
(bad)
push
and
pop
mov
or
lods
cwde
xlat
icebp
dec
(bad)
mov
loop
xchg
aaa
repnz
xchg
mov
fs
sbb
sub
xchg
dec
mov
pop
mov
out
mov
pop
popa
dec
cmp
jns
xchg
call
ds
or
jnp
cs
iret
mov
lods
out
sbb
xchg
outs
xor
mov
sti
rol
les
jbe
mov
push
in
cmc
jle
pop
cmp
dec
jecxz
into
fbld
fadd
xor
mov
out
push
inc
xchg
pop
mov
(bad)
cli
std
int3
sbb
and
clc
fwait
in
sub
jne
cld
ror
jle
sbb
or
mov
push
mov
add
fstp
pop
outs
push
out
out
out
sub
push
and
(bad)
aas
enter
aad
rcr
ds
repz
fwait
add
pop
call
jae
aad
(bad)
and
out
fild
mov
add
test
and
jge
xchg
xchg
ds
fwait
gs
xchg
xor
fistp
push
cmp
call
or
cmp
loopne
pop
les
mov
sbb
mov
mov
std
and
aaa
mov
or
sub
ficom
out
mov
sbb
fstp
ja
jg
in
ds
push
add
sbb
cmp
xchg
imul
fucomip
jae
xchg
push
add
pop
xchg
sbb
push
rcl
inc
daa
add
or
mov
imul
push
aas
sti
retf
aad
pop
fldenv
inc
jb
mov
adc
and
mov
cmps
and
dec
sub
mov
test
push
and
imul
pop
xchg
test
pop
push
dec
push
sub
(bad)
repnz
adc
cmp
seta
pop
retf
pop
daa
mov
adc
pop
pop
lock
addr16
jle
repnz
std
test
jge
aaa
stc
jbe
add
mov
pop
mov
push
pop
punpckhdq
cmp
pop
retf
rcl
jb
ins
xchg
and
sbb
dec
loope
test
pop
mov
sbb
jle
mov
mov
mov
ins
clc
mov
sbb
cmp
lahf
scas
ffree
mov
fisttp
sahf
in
scas
shl
mov
and
adc
fs
cs
mov
and
loope
push
jne
add
movs
mov
mov
sahf
or
sahf
std
inc
add
bswap
dec
ret
pop
fld
(bad)
ss
or
in
ss
cmp
jg
mov
and
test
loope
pop
xchg
pop
jecxz
pop
out
in
sub
outs
(bad)
fist
dec
mov
faddp
(bad)
pop
pushf
and
cs
sub
jecxz
in
ficomp
mov
or
clc
xlat
daa
call
out
mov
in
loope
jnp
ret
adc
test
or
stos
sub
push
fcomp
inc
mov
into
mov
xchg
call
cmps
mov
sahf
fidivr
sbb
inc
mov
(bad)
scas
movs
xor
adc
and
or
sub
stos
aad
push
mov
and
shl
dec
adc
movs
sahf
das
fistp
sub
psubusw
pop
test
cmp
iret
movhps
mov
and
or
std
adc
cmp
push
mov
jo
jbe
mov
mov
pop
mov
stos
jo
add
fwait
div
(bad)
mov
int
sahf
in
(bad)
stos
arpl
or
fistp
aas
ret
inc
jbe
dec
rcl
repnz
inc
mov
loope
das
fistp
push
cmp
(bad)
jge
xor
pop
cmp
mov
mov
jae
push
push
adc
stc
add
add
mov
or
mov
shld
xchg
lods
fidiv
and
cmps
les
jbe
xchg
mov
jo
jne
mov
and
sub
inc
fs
mov
fwait
push
(bad)
dec
fistp
scas
out
push
sub
retf
cmp
std
dec
movs
and
fstp
xchg
frstor
and
mov
mov
push
mov
xor
fisttp
out
lock
loop
mov
imul
(bad)
arpl
or
(bad)
fcmovnbe
jae
dec
ins
sbb
sbb
pusha
and
shr
sbb
pop
fild
seto
outs
les
fstp
jecxz
cmp
(bad)
push
mov
(bad)
jp
rcr
in
jecxz
leave
lods
loop
fld
int3
mov
adc
sbb
repz
clc
cmp
fidiv
adc
mov
(bad)
neg
fucomi
lds
push
(bad)
and
in
sub
dec
cwde
(bad)
stc
pop
fstp
int3
push
dec
fucomi
add
das
repz
fisttp
and
stc
fcmovnb
sbb
fidiv
stos
mov
fnstenv
aas
pop
sub
or
fimul
mov
xor
jmp
jns
adc
ret
sbb
or
mov
les
rcr
mov
out
(bad)
outs
inc
stc
mov
aam
cdq
mov
rcr
int
xchg
dec
(bad)
sbb
xchg
push
loopne
(bad)
xchg
ret
fist
jge
es
jae
rcr
fst
mov
imul
(bad)
(bad)
pop
fcmovnu
int
js
pop
xor
test
imul
aad
push
fist
jl
(bad)
test
xor
cli
cmp
mov
loope
push
fild
dec
outs
movs
imul
fist
fst
fistp
cmps
xor
xor
std
(bad)
addr16
shr
fucomp
sub
pop
mov
stos
pushf
test
and
sbb
js
fld
rcl
mov
cli
mov
cmp
mov
add
dec
sub
div
clc
add
mov
jmp
or
pop
and
bound
js
cmp
fld
fcmovnu
push
add
xchg
mov
clc
mul
fst
xor
mov
outs
aaa
loop
pop
fist
pop
jne
fist
sahf
das
cld
xor
inc
or
repz
or
push
pop
mov
fisttp
(bad)
in
(bad)
call
mov
aam
mov
fcomi
daa
jp
inc
fist
or
in
fisttp
push
out
xor
sbb
push
neg
mov
test
ror
fstp
cmp
fild
or
mov
push
fwait
scas
fbld
dec
outs
cmp
fld
cmc
jle
ins
sbb
loopne
jmp
mov
dec
xchg
sub
stos
dec
or
in
(bad)
mov
dec
cmc
mov
sbb
sub
loope
fisttp
outs
ss
or
mov
sbb
pop
in
and
inc
out
xchg
cmc
inc
or
mov
sub
fist
adc
pushf
ficom
leave
aaa
or
cmps
std
jae
add
xchg
dec
adc
and
add
adc
jecxz
daa
shl
mov
pop
sub
stos
fwait
pop
jle
iret
(bad)
test
mov
mov
nop
retf
add
xchg
mov
not
mov
pop
sub
fstp
sub
pop
mov
fstp
outs
push
pushf
sahf
iret
cmp
mov
jmp
sub
pop
ins
(bad)
repz
or
mov
push
fst
outs
fcomi
in
aad
test
in
mov
sti
mov
push
outs
enter
cmp
add
cld
les
gs
lods
movs
pop
neg
mov
push
imul
out
leave
test
shr
fld
sub
repz
lea
ins
lock
add
cmp
retf
daa
adc
aaa
in
inc
fld
out
outs
cli
sub
icebp
mov
dec
(bad)
(bad)
and
cmp
dec
pop
cmps
inc
dec
rcr
test
jg
jmp
in
(bad)
xor
sbb
fisubr
call
fisttp
loopne
mov
(bad)
inc
sub
cli
cmp
sbb
cmp
mov
inc
fild
ret
lahf
cmp
cmp
(bad)
adc
fild
cmps
xor
aas
loop
pusha
shl
ss
lahf
fld
sbb
iret
mov
xchg
js
jmp
sbb
sub
cld
ss
es
adc
adc
pop
push
jnp
lds
enter
retf
mov
ja
jg
fild
fcomp
data16
aaa
add
pop
jg
test
das
cdq
imul
fild
inc
adc
prefetch
mov
sar
retf
xchg
jp
scas
sbb
pop
pop
mov
fst
jno
rcr
jnp
mov
mov
iret
push
out
fst
repz
sbb
neg
adc
fisttp
mov
add
in
test
inc
pop
mov
test
or
and
fild
mov
pop
fild
mov
out
pop
pop
jecxz
xchg
scas
xchg
fldenv
and
repz
fist
pop
fisub
imul
adc
mov
fcmove
xor
mov
rol
inc
dec
dec
aad
or
fdivrp
cmp
xchg
mov
push
inc
push
cdq
adc
jecxz
loop
and
fsub
out
loopne
xor
es
test
in
repnz
push
jge
test
jmp
int
jecxz
(bad)
mov
pop
cmp
dec
dec
mov
sbb
adc
stos
mov
xor
xor
das
pop
push
mov
sbb
push
lea
xor
mov
and
pop
inc
ins
mov
jle
and
dec
jmp
sbb
mov
cmp
ds
jmp
and
dec
mov
pop
jbe
jl
cld
(bad)
pop
mov
scas
cmp
repnz
imul
retf
(bad)
jae
sub
imul
into
pop
(bad)
ror
aas
and
jle
xchg
(bad)
sub
cdq
ret
js
sub
es
test
jecxz
mov
push
out
mov
pusha
cdq
das
fidiv
cli
(bad)
push
into
lds
cwde
fist
inc
lods
fist
dec
ins
adc
mov
fstp
mov
shl
rol
jo
jge
fld
pop
cmp
je
cs
add
xchg
(bad)
cmp
xor
jo
mov
icebp
loopne
scas
cdq
fild
popa
xchg
clc
jmp
ret
jo
fbstp
mov
fist
mov
ret
das
ficom
imul
cli
cmp
fdiv
dec
cmp
pop
push
cdq
inc
fcmovnbe
icebp
into
jg
sub
jmp
je
pop
outs
inc
inc
pop
fbstp
cdq
nop
cmps
repnz
mov
ins
enter
cmp
pop
xor
dec
mov
pop
add
clc
ror
and
push
mov
jmp
or
sub
cs
push
(bad)
(bad)
sbb
cmp
dec
mov
outs
neg
repnz
stc
shr
lahf
pop
shl
aaa
(bad)
ss
add
xchg
jle
popa
push
mov
retf
and
mov
sahf
(bad)
push
pop
cwde
scas
fisttp
jle
mov
mov
retf
push
mov
jmp
adc
mov
cmp
push
xchg
xlat
inc
int
push
out
jb
cdq
mov
mov
add
mov
and
test
xlat
add
iret
cmp
pop
sar
ins
dec
jge
outs
mov
cwde
or
xor
xchg
cmps
out
cmp
shr
mov
sbb
push
sub
pop
mov
loope
xor
pop
movs
push
sbb
mov
add
and
add
repnz
mov
jbe
mov
push
mov
ins
movs
xchg
sahf
push
or
push
cmps
(bad)
repz
jp
fisttp
loope
loopne
jmp
adc
cld
jge
mov
je
sub
sub
aam
(bad)
mov
bound
adc
and
mov
pop
xor
add
mov
out
mov
xor
and
ficomp
cwde
cdq
dec
mov
jecxz
or
ficomp
add
cmp
mov
stos
jmp
xor
push
pop
in
xlat
cmps
fisubr
ins
xor
xor
adc
jge
xchg
cmp
es
pop
pushf
test
xor
mov
movs
leave
int3
add
mov
sbb
xor
retf
xor
in
sbb
in
rol
jnp
mov
and
fwait
jmp
lahf
cld
in
xchg
jmp
pop
sbb
and
les
out
stos
mov
inc
pop
mov
mov
jmp
pop
fidiv
out
mov
push
add
jmp
(bad)
adc
add
arpl
nop
es
cli
sbb
outs
rcr
ins
ins
inc
icebp
enter
xor
sbb
enter
inc
cmp
aas
idiv
mov
push
neg
shl
sub
inc
dec
push
or
jecxz
xchg
mov
jge
adc
aad
or
mov
cmp
sub
ins
mov
xor
or
mov
nop
(bad)
mov
fwait
and
or
stos
push
in
jns
inc
outs
fsubr
jle
mov
jmp
adc
stos
mov
cmp
stos
ficom
lds
mov
xor
adc
imul
mov
and
outs
ret
(bad)
cmps
add
add
std
out
in
out
fwait
ss
sbb
add
repnz
sub
jle
cmp
int
dec
fucomi
mov
and
scas
adc
ds
imul
lock
fistp
leave
xchg
outs
sub
rcr
xchg
sbb
cmps
fnstsw
mov
icebp
jns
fucomip
adc
ins
shl
mov
mov
pop
lea
pop
jmp
dec
mov
mov
xor
je
push
inc
and
mov
dec
add
mov
fcmovnb
push
addr16
nop
cmps
ret
adc
and
push
xchg
cmps
inc
jo
imul
xchg
xor
jnp
cmp
and
xor
and
in
add
sbb
jmp
test
mov
add
(bad)
mov
mov
jmp
pop
les
jle
sbb
and
ficom
mov
ror
dec
shl
sub
jns
mov
sti
pop
ret
enter
in
(bad)
and
pop
(bad)
iret
mov
lods
pop
cs
add
cmp
ror
dec
and
imul
ja
das
out
dec
mov
dec
and
xchg
std
sti
sar
mov
outs
or
xchg
arpl
jle
inc
jge
into
test
xchg
xor
ret
pop
outs
mov
imul
inc
mov
cld
xor
in
and
cmp
inc
push
into
inc
add
ds
fstp
xchg
mov
ficomp
into
inc
xor
pop
pop
shl
mov
imul
sbb
jmp
cmps
ror
fldenv
push
or
leave
inc
jns
pop
pop
push
xor
jmp
cwde
xchg
push
inc
and
xor
loopne
fadd
sbb
rcr
dec
mov
cmp
idiv
and
sbb
out
dec
xor
xor
xor
jg
pop
dec
in
call
sub
in
scas
aad
test
sbb
push
daa
xchg
cmp
leave
into
dec
loope
mov
das
mov
and
jmp
imul
mov
xchg
lock
cmc
push
sbb
pop
popf
jbe
outs
mov
xchg
cmp
jns
pop
jecxz
mov
test
sbb
stos
inc
cmp
jnp
pop
arpl
mov
sar
scas
cmp
movd
add
leave
and
push
fcom
xchg
cmp
push
sar
push
jp
sbb
mov
scas
mov
or
xchg
int
mov
out
adc
push
icebp
ror
mov
jle
xor
lds
xor
inc
jbe
mov
xor
shr
nop
jnp
es
cmps
pop
jl
and
cdq
stos
xchg
test
fwait
imul
dec
scas
xchg
stos
xor
mov
adc
les
cmp
mov
push
dec
test
sbb
bound
in
sub
aad
pop
rol
dec
call
mov
fistp
cmp
js
sbb
fmul
push
je
push
adc
push
cmp
sub
fistp
mov
pusha
and
add
rcr
jnp
std
adc
popf
rol
sub
sbb
cdq
sub
dec
pop
cwde
sub
push
push
add
xlat
cmps
jmp
xchg
sbb
pop
or
jnp
std
or
jge
jmp
sub
test
das
into
push
mov
pop
scas
les
push
shl
hlt
imul
pop
fisubr
ds
pop
(bad)
push
pop
mov
ss
push
mov
inc
or
jmp
sahf
and
xchg
(bad)
push
push
sbb
pop
pop
adc
jge
ret
inc
ret
retf
repnz
je
fdiv
clc
and
inc
jp
out
add
pop
mov
stos
sti
pop
nop
bound
iret
pop
clc
inc
dec
push
fdivr
sub
clc
add
mov
mov
pop
movs
pop
lods
pmuludq
aas
iret
stc
sbb
cmp
push
ror
mov
jb
push
in
rcl
sub
fimul
mov
mov
cmps
jecxz
sahf
std
xor
cmp
or
push
jl
mov
and
sbb
pop
mov
sub
pop
adc
pop
sub
xor
stos
inc
xchg
inc
sub
lahf
fstp
mov
and
ins
outs
pop
inc
out
mov
mov
add
int
push
inc
jo
pushf
mov
retf
dec
mov
inc
or
push
jle
je
lods
mov
pop
mov
xor
mov
cmp
jge
daa
pop
test
sbb
stos
fidivr
fsub
push
dec
movs
int
dec
cwde
jge
sub
or
sbb
ins
xor
dec
xor
cs
push
lds
fimul
and
xor
xor
or
cwde
xchg
cdq
rcr
sar
xchg
sbb
out
cwde
and
mov
inc
(bad)
add
jg
je
shr
cmp
add
popa
lods
sub
xor
xchg
sti
cmp
jmp
add
and
push
rcl
cmps
fidivr
mov
xlat
add
enter
repnz
in
ret
cmp
push
stos
inc
jmp
xlat
xchg
into
jnp
test
out
hlt
aas
and
jns
movs
popa
sti
aad
shr
push
sub
push
fmulp
cld
sub
scas
sti
pop
inc
mov
pop
bound
ins
int
xchg
sti
scas
xchg
jno
mov
mov
idiv
ret
dec
jge
iret
mov
or
inc
in
adc
fcomp
sbb
jb
movs
jnp
jns
retf
in
loope
jae
pop
ret
test
pop
pop
sub
jbe
je
lock
in
aaa
or
xor
test
popa
or
inc
xor
into
sbb
add
and
cmp
stc
(bad)
call
push
mov
mov
cwde
aas
ss
jle
lods
(bad)
out
pop
aad
xor
lods
pop
dec
sbb
cmps
add
push
jmp
cs
in
and
jp
scas
retf
lods
mov
xchg
sub
mov
fs
mov
xor
and
adc
cs
sbb
mov
test
sbb
call
cwde
cld
add
(bad)
(bad)
and
push
repnz
xor
mov
jl
stos
inc
not
xor
mov
loop
rcr
xchg
fwait
or
cmp
aam
adc
jle
mov
sbb
add
sbb
popa
mov
sti
push
mov
pop
jge
push
cdq
scas
in
js
sbb
scas
pop
and
nop
jae
push
in
dec
mov
js
mov
mov
push
sbb
push
cmp
and
dec
xor
sbb
cmp
cli
mov
(bad)
pop
pop
pop
pop
je
inc
xor
fcmovne
push
sbb
inc
push
(bad)
in
loopne
inc
inc
movs
repz
mov
xchg
cmp
sbb
or
clc
or
lods
cdq
aaa
add
popa
and
inc
push
sbb
sti
pop
xchg
pop
clc
cmp
and
mov
xchg
cmps
mov
ret
ds
fcom
popa
ds
fstp
add
or
test
imul
and
fld
xchg
mov
fstp
(bad)
cmp
xor
sbb
ds
sub
out
outs
mov
es
pop
imul
sub
std
bound
out
out
mov
cvtps2pi
rcl
fldcw
ds
(bad)
jo
xor
adc
push
jge
call
xchg
je
inc
test
fcmovne
jnp
mov
sub
fistp
mov
pop
xor
out
in
push
xchg
bound
shl
push
(bad)
call
push
xchg
arpl
repz
ss
xor
mov
mov
out
in
cmp
xchg
lods
xor
pop
sub
jne
js
mov
(bad)
sbb
icebp
aad
pop
jecxz
xchg
arpl
or
clc
fisttp
pop
push
push
and
fwait
xor
sbb
out
(bad)
dec
mov
pop
cwde
mov
push
xor
pop
xchg
(bad)
inc
popa
sti
fucomi
jmp
pop
or
loop
jle
add
rcr
push
enter
addr16
fcmovnb
leave
or
popa
push
cmp
aaa
sbb
cmps
fist
push
icebp
jns
outs
cs
into
sti
mov
mov
jl
or
stos
pop
fisttp
mov
fld
outs
add
les
jmp
aaa
push
inc
lea
xchg
add
inc
in
vpmacsww
jmp
ret
arpl
adc
iret
imul
fsubr
in
stc
fnclex
sahf
retf
xor
les
xchg
mov
cmp
jle
fcmovnbe
cmps
outs
pop
fcom
cdq
daa
sar
pushf
fistp
pop
imul
inc
(bad)
jmp
xchg
cs
mov
pusha
sub
and
jno
movs
sbb
adc
jl
sbb
dec
(bad)
mov
ins
ss
outs
daa
fld
int
dec
int3
bound
(bad)
in
jns
jp
lahf
add
cmp
sbb
out
xor
mov
aam
shl
pop
cs
xchg
fisttp
data16
pop
out
adc
xor
mov
add
es
jns
sub
cmc
pushf
fstp
xor
(bad)
into
es
cmp
aam
std
or
fcomp
fcomi
jo
and
xor
mov
dec
fimul
rcr
fs
or
jg
movs
or
xchg
lods
and
cmps
out
(bad)
stc
movs
repz
jae
sti
int3
(bad)
xor
jp
outs
cwde
aas
imul
mov
xor
cmps
inc
or
or
ret
outs
nop
pop
push
lahf
sti
and
pop
xchg
aaa
fld
aam
fstp
ja
cmp
int
adc
(bad)
fstp
jbe
push
pop
jge
addr16
push
ds
aaa
jne
fadd
cdq
or
fsubp
stos
sub
out
mov
adc
fucomi
retf
sbb
adc
xchg
cmp
les
int3
mov
fist
jne
adc
mov
ss
push
rol
ret
fld
repz
fistp
shl
int3
jns
cli
scas
fcmovnb
cmp
int3
mov
pop
mov
movs
xlat
scas
push
pop
cdq
(bad)
adc
and
dec
repnz
rcr
das
jge
fs
push
pop
out
or
sub
xor
xor
aaa
fistp
fstp
sbb
leave
std
pop
(bad)
inc
mov
cmp
mov
sub
(bad)
mov
mov
mov
aad
out
pop
imul
hlt
push
js
adc
pop
sbb
inc
ffree
call
jg
fld
in
pop
inc
push
cmp
fist
aas
je
fcmovnu
mov
jo
or
dec
mov
call
xchg
(bad)
sub
test
fistp
mov
daa
(bad)
mov
fstp
scas
push
sub
in
jae
test
fnstsw
inc
fisttp
jmp
push
int3
xor
pop
mov
push
add
aaa
inc
fsub
repnz
push
(bad)
sbb
mov
mov
sahf
test
repnz
xor
xchg
mov
retf
ins
dec
add
xchg
(bad)
jecxz
mov
push
pop
icebp
xchg
pop
jae
fld
retf
scas
aad
cmp
(bad)
pop
cld
sbb
push
in
pop
pop
(bad)
mov
neg
mov
sbb
inc
push
adc
xchg
retf
(bad)
das
stos
sti
fild
inc
inc
add
and
jae
rcr
and
loop
mov
fild
xchg
add
add
dec
aad
lods
lock
(bad)
jl
mov
stc
lahf
cdq
push
jmp
jae
mov
daa
(bad)
fist
xlat
in
cli
xchg
inc
add
dec
cmp
loop
inc
pop
je
ret
jns
cdq
xchg
repz
and
xor
jo
or
fcmovne
xchg
aaa
xor
out
(bad)
mov
mov
cli
mov
mov
ffreep
mov
sti
pop
lahf
pop
sti
sub
iret
and
(bad)
jge
add
mov
mov
jp
stc
and
mov
xchg
dec
xor
sub
or
int3
hlt
rol
sub
jecxz
call
idiv
mov
fisttp
mov
fcomp
gs
das
push
lods
xchg
movs
enter
and
inc
mov
or
aas
dec
fdivr
in
shl
loop
inc
cmc
rcl
mov
dec
jno
and
or
mov
out
jmp
cmp
rcl
(bad)
jl
sti
and
imul
mov
sbb
push
ins
lock
fild
jecxz
jmp
sub
and
pop
imul
mov
jmp
and
movs
aam
inc
shl
fld
mov
(bad)
pop
lahf
jbe
out
cmp
bound
dec
in
xchg
xchg
dec
fistp
mov
pop
adc
(bad)
fs
mov
dec
outs
ss
mov
movs
cli
jb
sbb
sbb
push
mov
sbb
arpl
in
rcl
cmps
cmp
jg
jmp
daa
bound
out
fwait
popa
and
cli
push
fistp
xor
cmp
mov
test
fwait
mov
out
call
iret
in
sbb
(bad)
adc
xor
rcl
add
into
int
xlat
fisttp
adc
fisttp
and
fcmovne
jl
jmp
cmc
jmp
cli
mov
aad
pop
fisttp
ror
mov
imul
pop
xlat
cld
aas
int
aam
adc
in
jb
or
in
outs
stos
adc
pop
fcomp
fs
pop
fistp
xchg
or
fild
xor
stc
lock
mov
rcr
xor
cld
dec
int
fcmovne
pop
lods
mov
jp
dec
fild
or
and
sti
sbb
outs
inc
sub
jg
adc
scas
movs
sti
dec
mov
add
fstp
ret
sub
mov
xchg
out
es
cmp
pop
jecxz
adc
adc
sub
sub
(bad)
ror
fnstcw
mov
sub
and
or
sub
scas
and
repnz
mov
mov
aaa
cmp
dec
jl
outs
inc
xchg
out
enter
sub
sar
cwde
mov
jb
repz
or
pop
push
test
(bad)
and
out
jecxz
ret
dec
sub
push
sbb
scas
fisttp
hlt
push
sub
mov
and
add
in
pop
das
xor
ficom
ds
pop
cmc
(bad)
mov
imul
out
add
rcr
inc
xor
(bad)
into
or
dec
jg
cmps
pop
fild
leave
sbb
inc
mov
fbld
(bad)
out
cli
sbb
sbb
loope
cmovl
push
les
sub
fldenv
enter
sbb
ret
mov
mov
push
push
cmp
dec
adc
shl
mov
sub
out
xor
call
adc
ins
jno
dec
jae
xor
mov
pop
scas
xchg
lea
cmc
sbb
mov
jo
xchg
push
add
test
ins
(bad)
inc
retf
inc
daa
mov
sub
jo
sub
sbb
std
inc
mov
cmp
mov
jp
sbb
cmps
icebp
ins
scas
mov
fstp
pop
shl
dec
and
ret
xor
add
dec
sub
shl
aaa
addr16
movs
pop
add
into
mov
std
(bad)
pop
retf
push
mov
push
retf
xchg
mov
xor
mov
ss
mov
icebp
les
lods
mov
stos
clc
scas
mov
xchg
xor
xchg
sub
out
mov
test
adc
pusha
mov
push
leave
adc
or
jle
out
pop
xchg
ret
mov
out
scas
cmp
pop
cmps
clc
ss
and
xor
push
mov
sub
lock
mov
inc
and
mov
enter
ja
ins
mov
fcom
popa
xchg
mov
jmp
sbb
xchg
mov
daa
jb
fist
and
outs
sub
adc
adc
jg
mov
retf
sbb
jg
ror
sbb
mov
imul
sbb
or
shr
dec
mov
xor
dec
sahf
(bad)
pusha
fiadd
add
pop
and
pop
sahf
outs
and
in
rcl
ficom
xchg
addr16
in
ins
mov
cmp
repnz
and
jecxz
mov
stos
add
ins
jbe
xor
xlat
pop
push
nop
adc
cdq
fidivr
mov
pop
cmp
add
fist
dec
sub
mov
sub
fdiv
in
dec
adc
or
sub
mov
inc
inc
hlt
add
loop
pop
mov
pusha
popf
pop
sbb
cmp
cdq
and
and
mov
into
dec
sti
out
(bad)
xor
or
popa
adc
xor
outs
cdq
aam
add
sub
je
aam
xor
and
dec
icebp
cmps
xor
loope
jmp
and
mov
(bad)
data16
sahf
xor
mov
dec
jmp
push
fmul
mov
dec
out
hlt
(bad)
rcr
xlat
imul
mov
jecxz
pop
adc
jmp
jae
out
dec
jno
shl
lds
test
fldcw
(bad)
(bad)
mov
(bad)
jmp
in
sti
shr
pop
mov
jb
retf
push
mov
cmp
in
and
sub
les
pop
scas
mov
xchg
mov
mov
ins
(bad)
xor
jmp
jne
loopne
shr
sti
in
sahf
mov
and
iret
mov
sti
aaa
ret
cmp
push
ins
shl
mov
push
popf
mov
jmp
sbb
sbb
push
stos
iret
xchg
mov
out
loop
pop
cmp
inc
iret
sbb
mov
inc
fdivr
lods
and
adc
mov
inc
sbb
jo
xor
adc
inc
lahf
add
xchg
pusha
jp
or
cs
mov
jp
inc
xchg
push
inc
sub
lahf
jle
mov
push
pop
iret
cvtdq2ps
(bad)
mov
scas
movs
ret
cmps
fisub
xor
pop
neg
sbb
fstp
adc
jle
icebp
ins
add
mov
jae
shl
lock
std
gs
nop
fucom
sbb
jns
and
add
dec
adc
movs
aam
mov
sbb
imul
adc
jmp
sbb
jg
xchg
(bad)
fstp
inc
dec
cmp
aas
cmps
cmp
and
jbe
push
es
inc
not
cmp
pop
push
cmps
fwait
neg
dec
xor
adc
nop
fild
or
rcl
imul
jb
out
sub
or
sbb
jmp
jecxz
mov
stos
push
cdq
sbb
stos
rcr
call
loopne
dec
mov
inc
push
dec
xor
out
bound
mov
sub
mov
mov
sub
add
rcr
icebp
and
das
je
push
ja
jl
add
repz
jecxz
test
(bad)
push
dec
xchg
lea
out
cdq
(bad)
push
push
mov
(bad)
sti
pop
sbb
sub
push
or
pop
ins
rcl
push
stos
ret
jg
mov
mov
xchg
pop
jmp
sbb
xchg
push
pushf
leave
dec
ret
fdivr
ret
sahf
xor
mov
fistp
jb
pop
dec
inc
in
stos
jp
push
xchg
mov
mov
sbb
adc
jge
jecxz
sub
xchg
mov
and
jg
mov
jl
lahf
or
jnp
popa
jbe
das
dec
xchg
std
inc
xchg
push
fistp
aam
ret
fist
nop
push
jmp
in
inc
popf
cmp
shr
inc
fs
and
adc
push
add
inc
(bad)
fistp
dec
push
sahf
cmps
mov
fsincos
mov
test
sar
fdivr
mov
dec
repz
jl
push
pop
jo
scas
mov
loopne
add
mov
sbb
outs
add
sub
scas
je
push
adc
adc
test
hlt
mov
imul
out
sub
out
add
ror
inc
(bad)
enter
std
sar
cmp
int
dec
cmp
jecxz
mov
fwait
ss
mov
fistp
aam
ret
and
push
jmp
xchg
inc
cmp
inc
cmp
or
xchg
xchg
nop
sbb
fistp
xlat
mov
dec
add
fld
adc
(bad)
jp
jmp
inc
test
fcomp
jge
nop
out
dec
jbe
repz
push
or
push
cli
add
add
popf
add
fdivr
pop
sbb
mov
fisttp
pop
adc
add
adc
dec
mov
iret
ins
in
rcr
jp
sub
gs
pushfw
(bad)
jp
xchg
aas
and
cmp
or
mov
fisttp
pop
cmp
cmp
push
cmp
fistp
sub
sub
std
out
mov
(bad)
fs
push
retf
xchg
dec
push
rcr
out
sahf
cmp
scas
adc
and
sbb
pop
adc
pop
cs
aaa
dec
rcr
fldenv
cmp
mov
inc
call
loop
cdq
sub
xchg
adc
push
inc
sbb
push
out
js
aaa
out
mov
jbe
aas
stos
shl
icebp
sahf
push
(bad)
imul
add
xor
pop
mov
or
pushf
xchg
cs
lods
pop
in
mov
sbb
call
cdq
cmp
stc
xchg
ret
push
push
jbe
test
out
adc
shr
hlt
push
inc
xchg
aam
ret
cwde
xor
aam
and
pop
int3
inc
jl
push
icebp
pop
mov
and
bound
(bad)
push
sti
(bad)
ret
or
xlat
jnp
inc
call
add
repnz
add
xor
mov
sbb
add
push
sbb
sub
hlt
mov
ins
jmp
enter
rol
pop
test
popa
pop
mov
jg
xor
adc
cmp
hlt
ret
sbb
retf
dec
sub
xchg
(bad)
fistp
fcomip
loop
(bad)
pop
add
ror
(bad)
in
mov
cmp
mov
add
sub
xchg
mov
ret
(bad)
sub
in
(bad)
or
popf
loop
xor
fstp
test
imul
shr
jecxz
xchg
cld
in
push
push
scas
test
sub
into
je
lahf
jp
aas
ror
cwde
call
in
scas
and
in
pop
sti
cmp
xor
mov
pop
test
mov
or
gs
fsubp
in
pop
pop
push
shl
dec
fucom
push
inc
sti
xchg
movs
es
xor
ins
call
dec
fisub
adc
call
push
mov
cwde
test
mul
shr
xchg
ss
sahf
push
dec
pushf
push
inc
push
cmovle
call
cmp
pop
xor
jo
mov
jp
es
scas
popf
outs
out
or
dec
test
inc
sbb
cmp
xchg
push
sbb
inc
mov
mov
or
mov
fst
scas
mov
adc
pop
dec
xor
pop
dec
and
cld
pop
adc
outs
mov
enter
daa
jne
inc
cmp
and
popa
sub
xchg
stc
fiadd
js
addr16
sbb
sbb
cld
out
sub
das
jl
mov
outs
xor
movs
jb
fcomp
cwde
pop
mov
push
cwde
clc
or
xor
inc
jbe
mov
nop
and
sbb
pop
or
mov
loopne
jmp
adc
jmp
pop
gs
cmp
pop
dec
inc
stc
and
xor
and
mov
push
and
stos
inc
stc
daa
jo
sahf
sbb
adc
mov
xlat
or
inc
fistp
iret
jo
and
adc
ret
pop
imul
or
and
xchg
and
ret
dec
dec
push
mov
sbb
jbe
pusha
loope
cmp
out
push
lds
movs
test
fbld
or
in
and
std
pushf
xchg
sbb
imul
inc
pop
pushf
mov
fs
inc
sub
jl
leave
jb
test
out
and
and
jmp
inc
sti
pusha
push
sub
or
xor
cmp
mov
scas
jl
nop
rcr
lods
out
sbb
push
mov
aaa
push
into
ins
les
pushf
xchg
push
je
in
cmp
lods
outs
fild
out
mov
jmp
jnp
jg
mov
sti
aad
hlt
ret
lods
cmp
xchg
frstor
and
sti
jbe
and
mov
sbb
imul
ins
leave
inc
aad
push
jle
popf
xor
dec
dec
addr16
xchg
das
out
cld
fistp
or
push
pop
jae
rol
int
dec
add
xchg
xchg
retf
ss
ins
test
bnd
mov
and
adc
inc
xchg
shl
loopne
jb
or
cmps
test
pop
nop
sbb
fisttp
or
pop
xchg
test
test
imul
adc
mov
test
leave
mov
cli
or
shl
sub
jmp
add
mov
enter
sbb
xchg
jecxz
and
lods
sbb
inc
shl
ret
and
out
in
xor
pop
pop
es
xchg
mov
sbb
leave
mov
aad
popa
cmp
mov
iret
sti
pop
scas
mov
dec
test
or
ins
jp
add
fwait
sbb
(bad)
inc
or
and
add
jmp
push
jecxz
sub
rcl
sbb
es
outs
imul
mov
pop
xor
gs
scas
aas
push
gs
xor
sub
inc
repz
pop
cdq
dec
pop
xlat
sbb
out
dec
repz
xor
fstp
mov
pop
fbstp
push
jo
push
cwde
fstp
jbe
scas
jbe
rcl
adc
aad
mov
push
push
mov
mov
out
mov
sbb
push
test
lock
cld
inc
cmps
xchg
adc
int3
jl
call
sti
cdq
jnp
cmc
and
mov
xadd
mov
jne
rol
cmp
and
add
mov
push
jnp
ss
movs
sbb
jle
daa
cmp
mov
or
int
ud2
in
cmp
push
fcomp
out
sahf
xchg
(bad)
jne
sub
pop
inc
aas
xchg
xor
outs
mov
or
mov
jns
xchg
retf
pop
sub
scas
loopne
cdq
xor
call
jecxz
pop
gs
(bad)
(bad)
sbb
jmp
jl
(bad)
mov
push
pop
add
jae
jns
sbb
xor
out
inc
js
ret
fild
pop
and
stos
inc
(bad)
mov
(bad)
jbe
jmp
mov
shl
fisubr
fisttp
xor
adc
call
stos
test
inc
ret
cmps
push
shl
lods
xor
dec
sub
retf
loop
xor
push
mov
and
ret
aam
call
imul
jge
cwde
add
pop
dec
mov
lods
mov
mov
sub
jns
jge
add
sbb
repnz
pop
int
mov
dec
sbb
sub
mov
call
cs
mov
and
cmps
sti
clc
add
pop
ja
(bad)
stos
pop
xchg
test
xchg
cld
sbb
cmc
push
pop
ss
jl
pinsrw
das
and
movs
test
fsubr
shl
ficomp
cmp
push
into
sahf
pop
shl
xchg
mov
sub
stos
adc
add
cmp
std
rcr
mov
mov
inc
sub
xchg
xor
scas
xor
pop
popa
and
adc
mov
hlt
adc
scas
sbb
pop
test
arpl
cmp
dec
cld
aas
shr
fisubr
fist
repz
cmp
lea
xor
loopne
(bad)
addr16
jno
adc
xor
sbb
push
add
(bad)
and
sbb
cmps
movs
movs
xlat
lods
nop
sub
pop
jne
and
xchg
addr16
and
xor
mov
fucomip
daa
shl
(bad)
cmp
dec
fstp
sbb
sbb
cmp
and
xchg
stc
adc
cld
xchg
jle
adc
xchg
das
lahf
xrelease
pop
add
sahf
sub
xor
ficom
jle
push
or
and
add
jle
jmp
cmp
nop
sub
jns
and
xchg
je
push
stos
stc
xchg
cmp
outs
push
scas
add
jle
stos
imul
cmp
mov
(bad)
and
enter
and
sbb
dec
test
push
add
sub
mov
pop
mov
mov
xlat
fbld
cwde
xchg
and
pop
add
mov
mov
push
jae
dec
arpl
sub
sbb
mov
je
dec
mov
inc
inc
ins
nop
dec
dec
push
jge
xor
jl
cmc
rcr
pop
loopne
or
pop
adc
sbb
leave
daa
rol
scas
call
dec
jg
out
add
dec
mov
pop
not
push
mov
push
add
and
pop
sbb
imul
out
or
jecxz
dec
sbb
mov
lea
cmc
sbb
js
mov
cmp
in
(bad)
cli
cld
or
sbb
cmp
fmul
jo
loope
sub
sar
sbb
sbb
in
popa
int
jmp
xor
ficomp
sbb
or
call
out
nop
(bad)
cmps
xchg
mov
mov
in
mul
rcl
(bad)
and
popa
bound
cwde
push
and
into
inc
lock
sub
idiv
nop
ret
sub
das
fisubr
std
jne
fwait
and
test
je
mov
xor
(bad)
sub
push
and
add
cli
dec
aaa
ror
xchg
je
inc
inc
xor
inc
repnz
cmp
ret
inc
push
add
es
jne
pop
push
jle
jmp
jmp
mov
add
scas
jns
cmp
dec
fcomp
(bad)
jle
mov
cmp
dec
mov
aaa
or
xor
xchg
push
lods
mov
mov
call
mov
cwde
loopne
mov
xchg
pop
(bad)
and
mov
adc
inc
div
fdivr
xchg
enter
inc
ds
add
dec
mov
inc
out
mov
cs
push
nop
div
jg
lds
pop
cwde
jmp
sub
stc
and
mov
and
push
mov
fdivr
leave
ja
cmp
in
data16
out
pop
dec
int3
nop
(bad)
pop
test
pop
dec
mov
mov
call
in
xchg
mov
movs
inc
cmp
enter
and
(bad)
adc
je
call
inc
out
cmp
repz
mov
out
pop
(bad)
push
mov
ror
shr
repnz
sbb
fldcw
cld
mov
fild
dec
sbb
and
arpl
mov
sub
sbb
into
xchg
ret
pusha
sbb
xchg
xchg
sbb
mov
test
iret
jne
and
cmp
add
pusha
ret
das
push
jmp
mov
fucom
or
pop
cdq
xchg
sbb
inc
or
or
pop
xchg
out
lds
ds
mov
pushf
imul
in
imul
aaa
mov
sbb
stc
int3
sar
pop
and
call
mov
jmp
mov
fist
inc
sub
cmp
dec
adc
jle
lods
fwait
cmps
push
pop
leave
cmp
dec
inc
add
or
jo
push
inc
adc
sub
push
push
dec
popf
mov
sbb
mov
jg
inc
cmp
call
inc
sbb
sbb
cmps
out
adc
pop
xor
and
(bad)
add
dec
hlt
fnsave
cmp
sub
dec
inc
jl
(bad)
in
and
lods
cld
out
and
mov
lock
push
adc
and
pop
pop
inc
mov
mov
mov
inc
push
aam
fidiv
mov
and
shr
jl
push
sbb
fisubr
inc
mov
(bad)
ss
jb
sbb
loopne
mov
nop
jge
cmp
nop
outs
pop
fist
inc
sar
or
pop
movs
sbb
mov
fdiv
jbe
sbb
xor
pop
add
xlat
cmp
xor
adc
lods
mov
je
sbb
jl
ret
or
push
shr
sbb
(bad)
in
sbb
fyl2x
(bad)
inc
in
pop
fstp
push
xchg
push
rcr
lock
push
aad
cmp
(bad)
frstor
add
pushf
dec
ds
cld
and
xchg
clc
(bad)
stos
fadd
dec
fisttp
repz
clc
push
mov
fst
push
lahf
sbb
fidiv
xor
xchg
jmp
mov
mov
(bad)
mov
xor
and
mov
cmp
sbb
lds
rol
stos
adc
adc
adc
xchg
scas
xlat
popa
jnp
sub
fld
cmps
js
daa
out
jle
mov
push
jg
xchg
cmp
idiv
ror
sar
daa
cld
pop
fnstsw
jbe
inc
repz
mov
lock
(bad)
cmp
jecxz
and
shl
aas
data16
ins
mov
fs
pop
xor
fcomp
std
je
aaa
sahf
and
adc
and
mov
repnz
es
jle
mov
daa
(bad)
std
sbb
int3
push
retf
adc
adc
cmp
ss
cmp
movs
adc
mov
sub
pop
mov
(bad)
pop
pop
and
stc
sub
(bad)
and
cmp
mov
das
shl
xor
rol
pop
dec
sti
sub
and
dec
adc
mov
jecxz
cmp
in
pop
in
scas
into
cwde
mov
jge
cmps
push
dec
jp
test
test
ret
dec
mov
and
mov
xor
mov
out
scas
bound
out
(bad)
out
in
sbb
xchg
cmp
jne
fnstsw
arpl
test
fwait
rcr
jl
or
cdq
mov
in
push
sbb
jecxz
js
aaa
cmp
ins
pop
or
ins
stos
sbb
mov
fstp
mov
pusha
mov
cmpps
mov
xchg
jmp
fisubr
cmp
inc
cdq
and
dec
repz
xchg
ins
das
mul
add
shl
adc
sar
mov
mov
fwait
ins
xchg
inc
movs
gs
dec
jo
fld
mov
adc
inc
xchg
and
adc
add
(bad)
neg
and
xor
add
mov
cdq
cmps
sbb
pop
dec
nop
xchg
pop
ret
push
push
hlt
cmp
test
dec
add
lea
mov
mov
push
jns
pop
push
sbb
push
adc
movs
xlat
js
jecxz
jle
adc
cmc
sub
push
call
mov
pop
sub
cmp
add
ret
(bad)
dec
dec
push
in
ins
imul
xor
jne
pop
fcom
push
and
aam
cmp
jp
rol
outs
test
sub
sbb
in
out
and
neg
mov
pushf
popf
pop
pop
push
xor
cwde
fstp
jmp
mov
jbe
pop
mov
call
xor
dec
mov
mov
outs
sbb
mov
outs
mov
leave
mov
jnp
push
imul
mov
push
pop
shl
mov
fdivrp
lea
pop
xor
stc
les
add
cld
inc
inc
mov
inc
mov
scas
dec
jmp
in
enter
fstp
fwait
jo
scas
jp
xlat
stc
xor
xchg
or
jecxz
and
push
int
adc
mov
clc
stos
lods
mov
mov
cmps
pop
mov
pop
and
(bad)
fcomip
clc
repnz
mov
mov
cli
das
lds
mov
das
leave
jmp
std
mov
xor
movs
cmp
call
fadd
fist
out
adc
cs
ins
xchg
xchg
xchg
das
pop
in
sub
sub
int
leave
pop
and
cmps
in
outs
mov
and
pop
ja
add
jo
popa
sbb
retf
mov
jge
imul
mov
mov
daa
in
sar
push
ins
xor
loop
test
out
add
jl
mov
ds
mov
add
push
xor
mov
mov
sbb
push
and
inc
sbb
cwde
push
jecxz
psrlw
xchg
dec
jmp
sbb
jg
shl
(bad)
stc
add
sbb
movs
jmp
ficom
ret
rcr
mov
out
jmp
or
cs
inc
xor
cli
cmp
jno
mov
ror
enter
ret
or
add
ss
repnz
push
pop
out
out
jl
aad
das
push
(bad)
mov
xchg
(bad)
rcr
movs
jecxz
push
mov
std
sahf
dec
dec
mov
rol
ret
xchg
jns
sti
mov
jge
leave
push
xchg
dec
inc
mov
pop
retf
and
addr16
rcr
push
and
xor
sub
add
iret
out
nop
sahf
push
cmc
repnz
cmc
dec
sbb
sbb
mul
stos
dec
jbe
jl
sbb
and
lods
ds
(bad)
add
iret
bound
not
es
adc
int
xor
sbb
add
xchg
imul
sub
rcl
or
pop
inc
fs
sbb
test
sahf
daa
(bad)
xchg
bound
add
inc
cli
jo
mov
outs
mov
shl
and
pop
xchg
ins
mov
retf
mov
mov
rol
aaa
(bad)
pop
out
inc
pusha
push
and
pop
xchg
cmps
mov
ins
ds
rcr
nop
mov
mov
loope
fild
iret
movs
jp
mov
push
aaa
(bad)
fmul
or
loopne
and
cld
ds
rol
(bad)
sub
out
in
inc
vhaddpd
mov
sahf
int
cdq
add
lods
in
mov
and
sbb
sti
ds
mov
hlt
push
sub
pop
jg
outs
or
movs
sub
pop
sbb
out
add
nop
lods
push
jnp
adc
sub
loop
dec
repz
mov
push
sbb
pop
xchg
or
mov
out
xor
ror
mov
inc
jb
enter
add
push
out
fild
rep
xchg
fstp
mov
fbld
test
frstor
mov
mov
and
ret
xchg
out
fistp
cmp
dec
cmp
jle
cmp
mov
add
iret
lahf
mov
sub
cmps
(bad)
dec
in
stc
adc
(bad)
out
jae
sbb
adc
mov
and
jbe
xor
inc
fwait
daa
arpl
retf
xor
js
jb
adc
jmp
push
xchg
mov
mov
pushf
fwait
mov
fisttp
mov
ret
sbb
pop
lahf
xchg
fsub
arpl
mov
sahf
ret
clc
leave
ror
fwait
ds
inc
inc
mov
push
out
sbb
fistp
push
loop
div
and
jns
stc
imul
push
pop
jne
push
int
ret
xor
call
xor
in
jl
(bad)
int
fisttp
dec
inc
or
mov
push
fwait
push
loop
cmc
sahf
add
scas
not
(bad)
bnd
(bad)
fist
pop
push
imul
vandnps
fisttp
iret
mov
sbb
int3
push
fbld
in
(bad)
(bad)
(bad)
and
sbb
aaa
in
(bad)
fcomi
out
push
mov
(bad)
enter
(bad)
iret
push
sbb
xchg
mov
repz
push
adc
pop
jge
cmp
call
imul
mov
call
fild
pop
movs
mov
out
jmp
and
adc
js
inc
stc
sti
in
dec
sbb
ins
cmp
cmps
add
clc
idiv
fbstp
or
daa
dec
out
in
repnz
std
aas
jl
adc
mov
stos
mov
lahf
(bad)
gs
(bad)
and
imul
cmc
jmp
fist
fisub
(bad)
mov
sti
aaa
fistp
pop
fcmovnb
dec
enter
outs
retf
int3
stos
daa
rcr
cld
adc
psubsw
add
fisttp
sbb
ficom
arpl
(bad)
retf
push
add
fild
or
or
or
jecxz
lods
or
push
(bad)
ror
xlat
dec
fisttp
test
data16
adc
or
mov
dec
stos
pop
sbb
mov
mov
cdq
push
sbb
fistp
xor
adc
dec
xor
cmp
push
jl
sub
fadd
test
fcmovne
ins
sub
add
les
aaa
mov
adc
push
test
push
xchg
fnstcw
pushf
aam
dec
xchg
int3
movs
pop
arpl
inc
mov
repz
fild
rcr
shr
ins
mov
jmp
adc
fst
sub
(bad)
shl
sbb
out
aam
lods
push
and
sbb
ja
fadd
(bad)
pop
addr16
add
ror
mov
mov
or
mov
(bad)
push
xchg
retf
push
mov
popa
adc
fcmovnbe
xlat
enter
jns
int3
ja
mov
ins
inc
loope
cmp
(bad)
aam
dec
add
adc
dec
(bad)
pop
ret
jg
xchg
test
mov
aad
leave
mov
rcr
push
dec
jae
loope
push
test
in
cwde
lods
inc
cmp
neg
xor
int3
fld
and
addr16
fstp
ror
(bad)
xchg
push
add
push
sar
mov
xor
push
fucom
fld
pop
pop
or
imul
repz
enter
sbb
mov
repnz
jecxz
outs
lds
hlt
jmp
or
ins
fcom
repnz
add
dec
jp
in
fcmovnu
xor
add
addr16
ss
add
aad
fild
fistp
(bad)
fistp
pop
hlt
mov
pop
jbe
test
pop
fistp
or
fcomp
xchg
js
add
lods
fisttp
enter
xlat
cmp
inc
dec
retf
les
inc
call
lahf
fcmovnu
clc
push
dec
lods
mov
add
ss
or
repz
push
mov
push
pop
inc
imul
test
push
xchg
mov
mov
mov
jp
or
mov
and
fstp
lods
div
sub
adc
mov
push
xlat
fistp
or
and
in
int3
les
or
lods
in
push
js
imul
scas
xchg
mov
fisub
das
fild
mov
xrelease
test
mov
fadd
sbb
icebp
(bad)
(bad)
xchg
jae
adc
sub
pop
push
jmp
inc
int
aaa
jo
mov
das
jecxz
jnp
mov
sbb
mov
and
and
mov
ret
(bad)
mov
pop
mov
push
(bad)
jmp
cs
fcmovbe
rcr
add
pop
cmp
jae
imul
sbb
fild
push
mov
mov
test
mov
pop
cmp
cmp
jecxz
sub
cmp
add
fimul
movs
out
cdq
or
adc
ss
xor
pop
pop
fld
imul
sub
mov
fcmovnb
add
sbb
addr16
sub
fist
and
mov
adc
pop
pop
xchg
mov
adc
repz
rol
push
stos
or
xchg
fcmovnb
xchg
aam
movs
repnz
sub
fistp
jns
pop
iret
cmp
push
mov
add
fcomp
adc
push
das
fisubr
int
inc
cmp
(bad)
sbb
pop
cmp
data16
imul
cmps
popa
jmp
inc
bound
test
mov
jecxz
xor
cmp
fist
push
mov
or
rcr
and
int
jmp
cmc
lahf
je
fcomp
or
mov
(bad)
sbb
aas
popa
inc
lahf
or
rcr
xchg
push
jecxz
ins
frstor
ret
sbb
pop
adc
jecxz
add
dec
xchg
fstp
mov
jns
outs
out
ins
sar
stos
fild
mov
(bad)
adc
mov
sbb
shl
ja
cld
das
cs
and
fstp
das
inc
cmp
rcr
in
adc
leave
jecxz
jge
xchg
sub
stos
mov
dec
out
scas
div
xchg
(bad)
fisttp
cld
xchg
mov
jo
mov
lea
xor
mov
(bad)
xchg
dec
fwait
jb
cli
xor
clc
test
retf
(bad)
test
lock
das
les
sub
sbb
(bad)
xor
cmc
scas
or
xchg
jo
cmp
inc
aas
pop
jb
xchg
fbld
fild
test
mov
loop
mov
and
rcr
mov
cs
cmps
fcom
stc
fcomi
lock
loopne
(bad)
nop
(bad)
fild
adc
out
(bad)
sub
fist
dec
call
repz
pop
repnz
mov
xor
cwde
add
xor
adc
sbb
ret
jg
(bad)
adc
sar
jecxz
add
pop
test
or
and
imul
sbb
jmp
jmp
rcr
push
sbb
sub
xchg
fucomi
sbb
out
add
adc
fidiv
aad
leave
jmp
inc
sub
pop
les
fstp
inc
mov
add
jae
(bad)
imul
fld
push
neg
mov
stos
fild
cmp
iret
cwde
dec
cwde
repz
rcr
es
jmp
das
into
dec
mov
jbe
dec
jge
or
mov
fs
repz
sub
leave
and
jmp
pop
pop
push
and
xchg
int3
cmp
jbe
dec
xlat
dec
dec
and
jns
jae
mov
bound
cmp
xor
mov
jne
sub
(bad)
mov
pop
pop
adc
pop
or
dec
xchg
or
xor
push
(bad)
in
xor
shrd
cs
ja
sbb
sub
mov
xchg
add
adc
mov
add
push
out
iret
pop
xchg
xchg
sbb
pop
jmp
adc
cmp
aas
sub
sbb
sub
bound
mov
mov
lods
sub
push
(bad)
sbb
stos
scas
jmp
pop
(bad)
push
sahf
fisttp
sbb
mov
aas
pop
movs
fidivr
shr
add
lock
pop
hlt
sbb
iret
mov
pop
int3
clc
and
add
test
nop
xchg
jge
imul
into
sti
stc
lods
jge
dec
sub
in
mov
sysexit
inc
jmp
push
cs
inc
rol
inc
stos
cmp
pushf
aaa
mov
inc
push
aam
jae
int
cld
mov
sub
pop
xchg
cwde
push
mov
test
xchg
xor
gs
in
or
pop
stc
push
cmp
imul
push
mov
push
mov
cdq
loopne
pop
lods
sbb
(bad)
push
push
push
mov
sbb
pop
adc
es
and
(bad)
iret
cdq
inc
adc
fsub
xchg
cmp
fild
cmp
mov
fisttp
push
inc
dec
sti
outs
sub
and
(bad)
fistp
jns
clc
jg
sbb
jnp
cld
out
xchg
int3
outs
outs
imul
fwait
ss
pop
cmp
mov
pop
jbe
mov
sbb
fisttp
sar
or
dec
sbb
ficomp
mov
inc
mov
mov
pusha
dec
xchg
(bad)
cmp
outs
push
cs
push
add
(bad)
fsubrp
je
popf
add
adc
shl
das
addr16
out
xor
dec
rcl
aad
push
xchg
repz
das
adc
push
rcr
jae
test
jge
in
mov
dec
fsub
pushf
fild
fdivr
inc
shl
rcr
sbb
por
mov
fidivr
sub
ins
xchg
jp
xor
fadd
mov
movs
cmp
ret
pop
and
mov
or
fstp
hlt
jbe
sbb
mov
or
xor
add
lock
add
cmc
fild
mov
aam
mov
lea
das
popa
push
rcr
shr
cli
imul
cmps
push
in
cs
fst
(bad)
and
sbb
cmps
push
sti
sbb
jecxz
mul
pop
popf
(bad)
mov
inc
cmp
pop
or
mov
push
clc
sbb
lods
xchg
xchg
mov
dec
and
xor
mov
iret
retf
sbb
cmp
movs
(bad)
sbb
mov
jl
sub
push
retf
jo
sub
movs
outs
or
push
mov
or
or
cmp
push
push
and
xor
pop
je
xor
idiv
xor
mov
or
cmp
in
fcom
in
push
push
in
push
and
fs
adc
mov
das
pop
jp
mov
test
(bad)
clc
and
cmp
xor
imul
xchg
ror
mul
call
jnp
xchg
xchg
repz
or
jmp
xor
mov
fwait
mov
and
fsubrp
dec
xor
fcomp
rol
mov
adc
out
imul
ror
rcl
adc
or
sbb
popa
fidiv
cmps
clc
push
xchg
mov
cdq
push
xchg
fbstp
enter
sub
push
jnp
mov
jmp
pop
cli
inc
fisub
jmp
jne
jmp
sbb
add
out
rcr
mov
fisub
mov
fcom
out
sbb
add
(bad)
jo
in
les
add
push
push
cmps
pusha
xchg
mov
sbb
pop
les
pop
mov
xchg
add
jge
and
nop
aaa
std
popa
repz
lods
aad
ins
(bad)
(bad)
ss
addr16
pop
xor
push
xchg
push
(bad)
or
xchg
popa
push
and
add
sbb
fcom
jnp
xchg
jae
cld
sbb
fst
pop
sahf
push
ror
or
scas
cmp
bound
imul
test
push
int
js
pop
pop
mov
jmp
into
(bad)
adc
jle
cwde
les
fwait
out
(bad)
ins
push
out
outs
mul
iret
adc
push
cmp
cmps
sar
stos
adc
pop
push
es
iret
ret
fwait
xor
push
sti
scas
sub
shr
sbb
xchg
rcr
scas
scas
(bad)
push
cmp
mov
jne
outs
sbb
cmp
push
mov
iret
mov
and
dec
jae
xor
push
pop
jg
aaa
pop
lds
fsubr
cmp
jl
pop
xor
dec
jg
dec
jo
adc
mov
pop
xor
add
pop
adc
ja
cmc
inc
dec
xchg
jns
add
(bad)
(bad)
int3
jmp
mov
jae
in
(bad)
call
push
dec
fistp
add
repz
cdq
sti
dec
inc
adc
into
mov
gs
cs
adc
aam
sub
or
mov
ret
sahf
fcmovnb
(bad)
js
add
rcr
dec
jg
inc
rcr
test
cmp
sbb
and
outs
pop
test
sbb
(bad)
nop
jmp
fisttp
fs
dec
add
ret
mov
jle
cmp
int3
je
pushf
and
sbb
iret
pop
mov
pushf
out
or
cmovle
jl
push
mov
mul
leave
jbe
imul
xlat
add
push
adc
inc
into
mov
sub
scas
fnstenv
sbb
jge
and
addr16
popf
add
ja
fld
adc
cmc
push
and
jle
jl
xor
outs
jmp
pop
test
fs
into
adc
inc
push
test
add
cdq
repz
and
or
and
add
or
sbb
test
mov
add
(bad)
sub
(bad)
into
or
sbb
dec
fcom
sbb
jno
inc
cmc
mov
cmp
push
sub
ins
adc
repz
sbb
not
jmp
(bad)
push
cs
sub
inc
cmp
sti
leave
test
xchg
xor
inc
inc
xchg
push
popf
test
aad
ror
rcr
aaa
in
jmp
rcr
dec
push
sub
sti
mov
push
fwait
xor
call
out
push
outs
aaa
xchg
add
jge
sub
and
jmp
sahf
or
aas
mov
push
sti
mov
mov
jp
in
push
mov
lods
xor
sub
int3
retf
xor
ins
jp
push
pop
rcr
add
inc
add
cmp
jecxz
xchg
adc
(bad)
fdivr
xchg
in
pop
inc
push
sbb
out
(bad)
cdq
push
jl
enter
jo
xor
test
fwait
inc
push
retf
add
jl
mov
add
scas
scas
ret
xchg
call
shr
in
(bad)
(bad)
pop
repz
(bad)
loope
out
in
mov
ror
ficomp
pop
jge
aad
mov
jmp
sbb
stos
scas
out
sbb
sub
pop
pop
sbb
lea
dec
fld
and
adc
neg
jg
mov
lahf
ss
call
(bad)
jecxz
pop
mov
jo
jl
(bad)
cmp
jle
xchg
jmp
mov
adc
cmp
adc
test
sbb
lods
out
add
out
xor
ds
sub
jecxz
gs
xor
outs
call
xchg
cmps
mov
xchg
(bad)
mov
jecxz
sbb
xchg
push
cmp
mov
add
cmc
lock
(bad)
mov
ret
mov
sub
pop
xlat
pop
adc
mov
jmp
or
jmp
in
das
imul
add
(bad)
cmp
push
repz
push
out
data16
sbb
jge
pusha
arpl
fmul
xor
inc
jo
fisttp
add
dec
out
add
mov
cdq
pop
stc
adc
jmp
clc
in
mov
ja
int
dec
mov
stos
mov
sbb
or
loop
mov
sbb
xor
retf
(bad)
iret
mov
pop
sub
mov
int
push
test
ss
ror
mov
cdq
ret
inc
xchg
mov
pop
cdq
sub
sub
add
xlat
lock
add
cmp
sbb
inc
adc
aas
cmp
dec
fucomi
add
cmps
pop
mov
retf
push
cmp
jl
xchg
fcomip
or
xchg
xor
ret
aad
or
(bad)
(bad)
mov
sbb
sbb
add
jno
push
icebp
neg
mov
and
dec
mov
sbb
cmp
xlat
add
mov
xchg
jge
mov
push
test
xchg
xchg
std
push
fadd
push
or
sub
dec
mov
fsubr
out
loopne
adc
pop
pop
mov
iret
and
sub
or
mov
(bad)
and
rol
xor
cld
cli
shl
mov
mov
call
icebp
jg
test
mov
into
sub
cmp
sbb
mov
xor
ja
mov
lods
and
pop
mov
sub
add
aas
sub
ja
xor
and
aas
xchg
jcxz
inc
xchg
fistp
dec
in
jbe
retf
or
add
cmp
lock
sbb
sti
add
cmp
sbb
scas
cmp
mov
mov
call
cmp
sub
scas
push
fist
in
das
pop
mov
xchg
dec
outs
jbe
jecxz
mov
into
mov
pusha
repz
and
daa
or
mov
or
sbb
mov
dec
push
xchg
jecxz
inc
xor
pop
mov
sar
in
mov
(bad)
nop
jae
xor
mov
out
inc
test
mov
outs
out
inc
rol
xchg
pop
in
pop
test
sbb
loopne
cmps
shl
int3
clc
and
(bad)
leave
fxch
sbb
ins
popf
add
push
jne
and
and
jge
xor
cmp
jmp
pop
pop
in
je
lods
aaa
ret
fisubr
in
push
ins
(bad)
int
retf
mov
xlat
loope
adc
lods
lock
xor
mov
icebp
jo
jbe
mov
(bad)
push
dec
ja
pop
ins
pushf
push
loop
mov
push
aas
(bad)
mov
(bad)
mov
sub
pop
mov
lea
xchg
(bad)
xor
rol
push
adc
fsubr
outs
mov
(bad)
mul
call
inc
and
iret
ficom
pop
push
sub
sbb
stc
std
xchg
fstp
pop
push
shl
jmp
fwait
das
push
js
shl
ins
adc
xchg
jp
and
mov
(bad)
cmp
rcr
and
mov
cmp
push
ds
out
dec
popf
in
xor
mov
shl
dec
jmp
je
cmp
jle
icebp
int
jmp
pop
shl
stos
xchg
lahf
cmps
xchg
je
jae
stos
aam
fs
iret
jge
jb
leave
cmp
popa
test
push
int
in
pushf
sbb
dec
mov
mov
je
add
mov
mov
pushf
mov
jecxz
push
push
sbb
clc
test
and
add
pop
fbstp
ffree
dec
fdivr
fild
test
ret
add
and
cmps
outs
xchg
add
pop
mov
cmps
xlat
xchg
cmp
mov
les
xchg
(bad)
mov
and
aas
and
mov
mov
xor
xlat
je
sub
and
mov
adc
test
fwait
push
add
in
xor
call
sub
and
in
mov
mov
cmps
cmp
fnstenv
push
ins
les
push
retf
push
nop
mov
and
inc
and
jl
adc
movs
out
xchg
mov
sbb
bound
adc
arpl
xor
pop
jecxz
outs
fdivr
sbb
dec
loope
outs
push
sbb
or
sbb
add
xchg
ds
sbb
fisttp
loopne
pop
mov
jbe
clc
sbb
sbb
and
mov
jo
sbb
cwde
cwde
ss
and
(bad)
push
ret
add
sbb
or
adc
mov
dec
mov
mov
das
aas
jl
sub
or
or
sar
pop
sub
jb
cwde
inc
jge
or
mov
pushf
test
dec
scas
xchg
jae
or
mov
(bad)
push
gs
dec
mov
cmp
cmp
xor
lock
mov
add
adc
and
gs
cli
aas
xchg
xchg
pop
add
clc
cdq
sbb
cmps
lods
and
shl
dec
add
dec
frstor
adc
retf
jb
add
loope
sbb
fisttp
mov
adc
push
aad
stc
popa
inc
xor
pop
mov
out
dec
into
in
ficom
mov
je
and
mov
sbb
pop
mov
sbb
sbb
sbb
outs
arpl
sub
(bad)
rcl
(bad)
fwait
push
fisub
dec
sub
and
dec
daa
jae
es
ret
aaa
ss
mov
add
hlt
ret
sbb
mov
je
lods
sbb
mov
cmp
jg
jmp
popa
leave
clc
pop
(bad)
push
mov
cmp
arpl
retf
sub
shl
movs
shl
mov
lods
fwait
and
xchg
dec
xchg
fbld
push
pushf
pop
shl
mov
mov
lahf
lds
std
aam
jmp
or
and
xchg
movs
call
pop
pop
mov
out
aaa
bound
cmps
inc
(bad)
fmul
xor
mov
retf
fiadd
jmp
and
iret
xor
mov
mov
adc
xchg
aas
inc
pop
inc
mov
mov
xchg
jle
(bad)
fidivr
and
fisubr
je
test
mov
jp
dec
jns
mov
dec
dec
mov
xchg
jp
push
push
imul
bound
inc
cmp
nop
dec
rcl
pop
inc
adc
jnp
pop
jecxz
pop
in
xchg
jle
clc
mov
sbb
add
rcr
stc
fldenv
sti
sub
and
xor
(bad)
std
out
adc
mov
inc
xchg
xchg
fcomp
dec
outs
in
or
sub
sub
push
add
sub
push
xor
stos
xchg
push
mov
(bad)
ficom
cmp
and
dec
jecxz
sti
leave
call
cwde
xlat
jge
sub
jl
push
in
xchg
call
jle
pop
iret
data16
enter
sbb
inc
sbb
in
sbb
pusha
fdiv
sti
ss
sti
dec
mov
cdq
imul
pushf
test
push
rcr
mov
dec
add
xlat
sbb
cld
loopne
mov
jecxz
int3
mov
pop
and
ret
popf
pop
xchg
mov
adc
mov
and
adc
test
repz
aad
xchg
movs
inc
adc
adc
push
stos
sbb
(bad)
aas
imul
xchg
setle
loopne
fdivr
or
fnstenv
or
pushf
shl
cmp
push
fnstenv
das
inc
sar
and
call
les
cmc
aas
stos
and
push
jp
push
cmp
add
sahf
mov
in
aad
pop
mov
jl
outs
mov
lods
repz
aad
or
nop
popa
sbb
add
daa
push
int3
adc
into
dec
loop
pop
or
xor
ret
outs
mov
sar
out
add
dec
and
fnstsw
jmp
pop
xchg
cmp
and
jp
mov
xchg
push
jbe
nop
mov
sbb
je
aad
in
and
cs
cld
pop
ins
mul
mov
push
pop
fistp
cmp
les
cli
xor
pop
in
(bad)
mov
ret
mov
es
pop
pushf
jmp
lock
and
and
sub
xchg
push
stos
adc
xadd
jmp
cs
clc
pop
stos
pusha
or
sbb
in
jo
pop
adc
mov
(bad)
fimul
pop
in
stos
sbb
sub
iret
sbb
movs
lock
cmp
xor
icebp
out
sahf
sbb
shl
inc
push
sar
cmp
out
and
cmp
jb
mov
in
add
and
push
mov
retf
mov
sub
pop
popf
fistp
pop
xchg
loop
lods
push
and
adc
push
loop
shl
and
leave
jbe
mov
scas
fild
out
sub
sbb
retf
je
cwde
ins
pop
mov
mov
push
push
push
js
jmp
push
sbb
hlt
js
and
cmp
dec
aaa
push
xchg
stos
mov
jg
sahf
arpl
push
mov
leave
mov
jmp
dec
scas
ins
call
lods
mov
inc
pop
fdiv
inc
mov
pop
adc
pop
faddp
xor
outs
mov
sbb
jae
fstp
sbb
add
xor
scas
mov
xor
and
sbb
jno
loop
and
mov
push
pop
cmps
sub
or
push
adc
inc
sbb
cs
add
or
inc
(bad)
cli
fcmovnb
ss
jne
cmp
push
push
test
fild
jmp
sbb
rcr
cdq
rcr
fisttp
shl
mov
pop
and
add
js
inc
cdq
cmps
or
xchg
pusha
jns
iret
sub
inc
mov
jge
dec
cwde
sbb
enter
jecxz
mov
push
add
inc
and
arpl
jp
push
(bad)
push
inc
mov
or
test
imul
add
mov
cmp
sub
into
popa
add
mov
pop
xchg
repz
or
pop
add
cld
or
icebp
adc
inc
and
and
mov
push
daa
pop
pop
mov
out
xchg
pushf
mov
pop
xchg
stos
or
mov
and
sbb
jns
loopne
aas
iret
mov
xor
out
ror
cli
xchg
sbb
out
(bad)
dec
pop
cld
jge
adc
pop
jae
ret
pop
sahf
fs
push
push
or
sbb
fild
inc
stos
in
mov
test
adc
es
and
xor
pop
in
test
sbb
test
dec
cmp
bound
lahf
gs
xor
nop
jle
and
mov
push
mov
test
sbb
sbb
adc
and
mov
fstp
mov
repnz
addr16
pop
jo
inc
inc
repnz
mov
push
fs
out
push
repz
or
outs
inc
xchg
lods
ds
xchg
into
cmps
pop
xchg
mov
cmp
add
push
sbb
nop
cmp
xchg
sti
(bad)
js
push
stc
adc
fiadd
inc
sbb
inc
xor
sbb
sbb
dec
sub
loopne
and
push
je
mov
push
sbb
pop
jno
sub
(bad)
jp
push
fwait
cdq
jmp
mov
add
and
mov
sar
icebp
stos
cmps
jo
sti
sbb
push
scas
call
xor
cmp
retf
push
out
push
stos
mov
pop
sbb
sub
dec
data16
sub
pop
in
fidivr
push
add
mov
push
sar
or
xor
xor
hlt
repnz
jnp
mov
out
sub
sub
dec
add
pop
retf
jns
jge
xor
data16
out
ins
scas
fadd
cmp
cs
cmp
sbb
lock
gs
aam
adc
jb
cmp
leave
repnz
aas
dec
mov
and
imul
icebp
jle
shl
jnp
popf
dec
mov
out
cwde
cdq
jnp
sub
je
xchg
sbb
push
dec
or
in
xchg
mov
pop
ins
popf
and
loope
jle
mov
xchg
nop
vfnmsub213ss
dec
mov
add
pop
out
fidivr
shl
ss
(bad)
pop
loope
rcl
jge
jnp
addr16
adc
lods
lock
or
jecxz
(bad)
arpl
xchg
xchg
jno
jmp
add
and
mov
cmc
xlat
arpl
aam
pop
std
fsubr
cmp
shr
daa
cmc
jne
jp
call
retf
adc
cs
in
jns
push
and
push
pop
nop
and
add
xor
(bad)
pop
ret
jl
out
cdq
jns
lods
push
add
ins
pop
loopne
cmps
sub
jp
inc
mov
pop
mov
pop
movs
shr
jmp
stos
sbb
mov
je
mov
sub
scas
xchg
js
add
(bad)
adc
ficom
std
xor
mov
inc
mov
pop
jge
add
cs
or
sbb
rcr
dec
es
add
in
sbb
mov
aam
adc
nop
ffreep
push
inc
mov
mov
push
add
pop
leave
dec
imul
dec
sub
and
and
push
push
pop
xchg
cmps
mov
cli
push
shl
cmp
pushf
pop
pop
fcom
idiv
and
mov
popa
into
daa
jns
adc
(bad)
pushf
adc
cmps
adc
sub
aaa
xchg
out
jl
ret
or
fcom
into
leave
pushf
pusha
adc
sub
test
jns
outs
mov
aaa
dec
mov
add
cld
ds
and
mov
shl
xor
add
mov
sub
es
and
movs
stos
popa
imul
sbb
test
movs
in
push
cmc
sti
fdivr
and
shl
jo
jbe
test
neg
add
mov
dec
out
jle
aas
push
xchg
mov
imul
in
scas
imul
data16
xor
cdq
inc
and
sbb
push
hlt
sbb
aaa
mov
cmc
ins
aaa
jno
fcmovnu
pop
cdq
scas
xchg
aam
enter
sti
js
and
pop
cmp
leave
stc
inc
push
jg
and
imul
or
stos
or
mov
xchg
inc
pop
xor
addr16
in
(bad)
ins
adc
lahf
mov
sbb
xchg
jo
push
popa
pop
jge
dec
cmp
rol
nop
cmp
adc
mov
(bad)
leave
push
sbb
cmp
jmp
(bad)
and
ins
fwait
xor
cmp
sahf
jo
hlt
sbb
add
adc
outs
or
in
cs
and
mov
sti
std
xchg
push
cmp
xchg
xchg
xor
cmp
daa
inc
mov
push
movs
cld
out
sbb
jo
es
fst
inc
fcmovnb
test
push
out
cld
xor
dec
jmp
jp
scas
pop
mov
mov
sub
fsub
outs
scas
inc
inc
imul
outs
repnz
daa
and
mov
jo
ds
enter
test
mov
in
bound
cmp
mov
in
cmp
mov
and
jmp
fimul
shr
mov
cli
jge
push
imul
pop
inc
mov
cmps
sub
into
test
fistp
cmp
into
dec
es
cmp
out
rcl
inc
push
jno
leave
fcomp
loop
cwde
and
aas
mov
jge
xor
xchg
addr16
xor
pop
ret
(bad)
fld
adc
sbb
sbb
rcr
mov
inc
or
sahf
stos
js
push
call
in
sub
sub
mov
push
popf
inc
icebp
jge
cwde
pop
xchg
xchg
mov
std
cwde
imul
int3
xchg
int
(bad)
dec
xor
shl
xchg
or
sbb
sar
leave
adc
int
dec
dec
call
and
mov
dec
ret
push
mov
push
xor
shl
cmp
ins
clc
mov
cmp
xor
lods
fadd
sbb
dec
mov
mov
inc
cmp
add
sbb
cmp
xlat
cdq
cwde
pop
icebp
je
mov
and
pusha
cmc
les
shr
sbb
jb
sub
mov
neg
into
cmc
out
dec
dec
scas
cld
daa
leave
mov
cwde
repnz
clc
and
ja
mov
cli
inc
and
out
jp
sbb
mov
sub
pop
jmp
shl
jns
push
ss
data16
inc
sub
xchg
lods
mov
cli
add
test
xor
xchg
daa
xor
mov
mov
cmp
add
cmp
sbb
pop
gs
add
cmp
popf
pop
and
sub
sti
js
xor
ins
push
xor
stos
(bad)
sub
call
frstor
ds
push
out
call
shr
cmp
sub
cs
jmp
sar
movs
fild
mov
je
xor
dec
test
push
icebp
fild
outs
aad
xchg
ins
mov
push
sbb
sbb
sub
mov
xor
sub
nop
mov
inc
fmul
xchg
cdq
add
adc
and
nop
pop
sbb
mov
xchg
aas
or
xchg
mov
and
jns
outs
mov
mov
out
jl
mov
dec
cmp
mov
ror
rcr
cmp
daa
stos
jmp
xor
sbb
xchg
mov
lock
out
cld
rcl
test
out
out
dec
leave
xchg
mov
lock
adc
jno
sub
mov
or
dec
cmps
pop
push
sbb
cmps
inc
enter
lds
repnz
aam
rol
xchg
push
pop
(bad)
mov
mov
mov
and
popa
fdiv
ror
and
(bad)
push
out
pusha
(bad)
dec
cmp
hlt
nop
ficom
and
fcomp
cdq
inc
ror
mov
jns
out
add
fiadd
inc
out
pop
inc
loop
or
xchg
and
xchg
push
jge
loope
xor
sbb
and
shr
fbstp
pop
mov
int3
jp
mov
and
or
scas
push
shr
sbb
cmp
mov
ja
cmp
sub
in
sbb
retf
and
pop
or
sub
imul
cli
dec
leave
mov
and
fxch
mov
cs
loope
or
aaa
cld
xor
mov
xchg
push
xchg
pop
in
jb
into
push
jb
(bad)
int
inc
(bad)
and
jns
sbb
shr
das
fdiv
xor
fcmove
sub
and
pop
push
sti
pop
xor
adc
sub
pop
mov
sbb
inc
pop
arpl
retf
cs
movs
add
cwde
mov
inc
dec
inc
ins
es
jg
sbb
push
(bad)
fcom
jnp
cli
mov
jo
sub
add
rol
xor
scas
cmp
pop
jo
vmovups
popf
cs
scas
in
mov
adc
dec
adc
xchg
std
xor
outs
call
shr
in
rcr
imul
sub
sbb
cli
jb
clc
or
and
mov
inc
inc
mov
mov
(bad)
dec
sub
jmp
and
scas
mov
inc
and
sti
add
jns
sbb
mov
xor
scas
rcr
mov
and
inc
sub
mov
and
or
mov
repz
imul
(bad)
pop
dec
jge
nop
repz
movd
or
and
pop
add
aaa
adc
sahf
jl
aaa
das
ror
leave
adc
fldenv
movs
xchg
or
std
sub
adc
pop
test
outs
jmp
iret
add
mov
imul
(bad)
addr16
add
xlat
scas
fmul
(bad)
and
push
ret
xor
ret
shl
sbb
fs
cld
jo
dec
mov
mov
mov
cmc
outs
and
arpl
fdivr
daa
repnz
(bad)
jl
in
ja
daa
ss
ins
push
mov
add
pop
xchg
or
dec
jnp
sub
and
nop
or
xchg
pop
push
adc
inc
xchg
pushf
jg
popa
aad
shr
mov
rol
mov
and
test
push
imul
neg
test
sub
popf
cmp
push
arpl
in
adc
das
sbb
dec
mov
ror
xor
rcl
sbb
shl
scas
and
shr
add
cmp
sti
dec
and
or
cmp
pop
pop
pop
mov
sbb
add
jg
mov
ds
inc
cmp
jmp
adc
jg
ins
outs
bound
inc
ss
pushf
push
pop
and
dec
mov
addr16
ins
pop
ret
jecxz
inc
hlt
stc
cwde
stc
sub
mov
icebp
out
mov
mov
push
and
xchg
out
sahf
test
pop
in
jmp
repz
(bad)
xchg
mov
ss
or
pop
shl
and
sti
(bad)
pusha
add
test
retf
fld
cwde
cdq
daa
push
pop
cmc
loopne
fcmovu
fnsave
nop
xchg
jne
mov
ret
pop
sbb
mul
add
xchg
push
inc
and
call
mov
jg
out
sti
sbb
dec
fwait
ds
jae
aaa
xlat
imul
pop
push
xchg
call
mov
aaa
call
add
mov
and
jnp
jecxz
fistp
add
pop
cmp
jmp
aaa
dec
sbb
mul
aad
dec
sahf
stos
sbb
out
xor
sbb
and
pop
hlt
movs
mov
sbb
mov
push
cmp
push
cli
data16
loope
and
sub
loop
pop
cmp
cmp
fwait
stc
cs
pop
dec
inc
sqrtps
jns
aam
push
dec
mov
dec
loopne
dec
adc
pop
cmps
movs
push
and
ret
fbld
aad
sub
sbb
xchg
jb
ret
inc
ds
mov
add
pop
mov
mov
aaa
cmp
sbb
push
shl
rcl
jg
or
xor
sub
scas
push
or
rcr
mov
pop
pop
fcmovnu
mov
push
(bad)
jns
jmp
fild
ins
or
rol
aas
mov
mov
xor
movs
mov
outs
mov
fist
cld
sbb
cmps
stc
repz
mov
call
sub
jo
pusha
iret
fucomi
repz
push
idiv
fistp
aaa
(bad)
fistp
add
out
mov
push
ror
retf
cmc
adc
into
ret
int3
sub
popf
daa
call
and
mov
sahf
into
daa
mov
retf
fcom
mov
fsubr
push
or
pop
(bad)
cmps
outs
cmp
and
cmp
fdivr
fdiv
mov
shr
mov
cmp
mov
jmp
jl
shl
pop
jg
or
add
(bad)
in
cmp
cs
test
ss
xchg
jmp
(bad)
in
pusha
sbb
(bad)
retf
stc
cmp
xor
pop
aas
cli
and
sbb
xor
xchg
dec
shl
ror
jl
jb
(bad)
xor
std
ins
pop
adc
push
adc
pop
pop
mov
arpl
mov
lods
fadd
pop
inc
scas
es
jmp
or
jo
adc
fs
cmp
push
cmps
xor
add
(bad)
or
js
fsubp
lea
hlt
and
es
dec
stos
outs
cli
adc
adc
dec
xor
xor
(bad)
test
dec
dec
stos
push
loopne
sub
mov
movs
sbb
(bad)
jg
mov
popa
add
nop
lea
sub
inc
mov
add
and
shl
out
sub
jmp
push
sub
xchg
pop
adc
jne
inc
and
push
pop
mov
and
into
cmp
addr16
lods
out
mov
mov
jb
les
pop
sbb
and
xor
and
xchg
imul
sbb
pop
jg
pop
mov
stos
or
adc
cmp
xor
dec
shr
xor
js
and
mov
and
ret
aam
in
and
xor
mov
shr
(bad)
into
jge
gs
pop
inc
sbb
loop
jmp
fsub
add
(bad)
and
mov
cwde
push
js
mov
push
sub
iret
pop
jge
les
push
imul
cmp
sbb
and
pushf
fisub
in
or
je
mov
(bad)
xchg
and
add
ret
fs
sbb
adc
fisubr
add
ins
mov
(bad)
pusha
mov
sahf
loope
fstp
mov
stos
push
mov
outs
(bad)
iret
add
xchg
std
fild
ret
(bad)
push
xlat
aam
add
(bad)
pop
xor
fild
cdq
jns
adc
adc
pop
pop
test
scas
dec
mov
sahf
inc
push
(bad)
in
fsubp
data16
and
cdq
sbb
fsubr
pop
mov
adc
mov
outs
push
add
ja
jecxz
mov
arpl
leave
push
fistp
push
cmp
cld
xchg
fist
xchg
inc
cmp
(bad)
lahf
call
sahf
adc
stos
dec
xchg
fwait
shr
mov
lock
loope
sahf
test
pop
in
sbb
dec
xor
cld
int3
test
shl
aam
fstp
sub
fist
dec
xor
jecxz
jecxz
adc
sbb
fistp
je
jno
sahf
fld
dec
sti
xor
popa
pop
adc
and
(bad)
mov
call
mov
sub
sub
dec
iret
mov
iret
mov
jmp
pop
cmp
xor
cmp
mov
mov
sbb
xchg
mov
jp
xor
mov
or
stos
ret
xchg
popa
loopne
popf
data16
out
mov
mov
sti
retf
mov
jo
cli
adc
sbb
imul
mov
pop
mov
add
sbb
shl
lods
add
pop
shr
shr
jg
imul
xchg
cmp
xchg
pop
out
sbb
not
push
add
push
mov
jo
sti
inc
int3
adc
add
fwait
mov
mov
add
lods
mov
cmp
call
or
enter
sub
push
movs
ins
pop
mov
mov
je
xor
pop
adc
ret
bound
jmp
pop
sbb
jmp
mov
outs
mov
je
cld
shl
sti
fst
pop
jmp
pop
call
nop
inc
rcl
lds
cmp
sub
mov
mov
sbb
inc
mov
push
xor
dec
xlat
xchg
sbb
xor
push
sbb
cmp
pop
bound
and
xor
jg
push
push
in
mov
add
jbe
mov
dec
pop
push
cmc
xchg
sub
in
out
into
(bad)
into
fidiv
cmp
jbe
inc
sub
adc
mov
mov
out
outs
mov
push
mov
or
and
cs
inc
popa
xchg
push
mov
sahf
and
or
imul
ins
sbb
in
(bad)
mov
daa
jecxz
cmps
(bad)
xor
movs
mov
jecxz
or
cmp
jo
clc
je
jae
cs
pop
(bad)
push
mov
push
pop
jbe
pop
shl
adc
mov
dec
nop
and
mov
sbb
pop
push
cdq
mov
sub
fldenv
cmp
or
test
mov
sar
pop
xor
inc
std
adc
xchg
rcr
(bad)
cwde
lea
mov
dec
daa
lds
xchg
out
jmp
sbb
mov
dec
mov
test
mov
jnp
sub
ds
mov
mov
and
mov
mov
mov
mov
aad
or
loop
push
aam
sbb
fstp
mov
fist
pop
xchg
cmp
ffree
xchg
arpl
in
retf
xor
(bad)
mov
xor
cmps
cs
cmp
in
inc
retf
push
(bad)
sub
loope
not
mov
sub
xor
pop
out
js
or
popf
xlat
shr
stos
or
sub
aaa
push
ret
add
fisttp
daa
push
out
int
adc
mov
sbb
test
jp
(bad)
cmp
retf
mov
push
adc
fild
lods
pushf
je
repnz
inc
push
adc
add
(bad)
aad
and
nop
xlat
adc
rcr
push
pop
into
fs
mov
fisttp
adc
jge
mov
sub
cmovbe
add
ret
mov
mov
ds
movs
fldenv
push
adc
test
sub
and
jnp
(bad)
mov
cmp
outs
lods
data16
fstp
(bad)
test
ss
pop
add
dec
cwde
push
push
inc
push
fild
push
mov
dec
mov
jge
jle
xchg
cmps
inc
jnp
or
je
push
sbb
jmp
lock
mov
(bad)
mov
pop
popa
sub
cli
lods
cld
adc
fcmovnb
clc
outs
lahf
fsub
add
popf
xor
call
(bad)
push
or
fistp
sbb
push
test
push
jbe
add
jnp
ins
xor
xchg
fist
lahf
shr
lea
ror
xchg
mov
jg
fcomi
or
rol
xor
cmp
iret
push
fld
pop
out
xor
js
ret
lds
jae
push
loop
fist
xor
sbb
pop
in
or
or
fisttp
xor
(bad)
mov
jb
inc
push
fst
adc
cmp
sbb
fmul
pop
repnz
push
jb
jecxz
popf
or
in
push
cli
dec
nop
(bad)
in
adc
(bad)
cmp
daa
adc
jmp
dec
(bad)
fcmovnb
loope
push
iret
push
inc
test
lods
test
dec
adc
fld
mov
test
outs
fild
or
mov
ds
mov
shl
cmps
jge
mov
inc
push
cdq
daa
or
movs
xchg
ret
push
stos
cwde
popa
loope
test
gs
cmp
jns
loopne
sbb
mov
jle
mov
xchg
mov
sbb
xlat
push
aad
enter
imul
xchg
rcr
aaa
cli
addr16
push
scas
fld
cmc
or
pop
sub
neg
mov
cmps
fimul
test
fisttp
mov
and
pop
push
fist
adc
test
mov
sbb
sbb
rcr
pop
jns
jbe
idiv
xlat
fild
sbb
jmp
add
fninit
ja
les
ficom
loopne
fbld
sub
and
int
sub
xor
cmp
mov
adc
mov
daa
mov
(bad)
sar
sbb
fcmove
pop
fneni(8087
sbb
ret
add
fisttp
xor
pop
clc
fcmovnb
add
xor
out
sbb
pushf
repnz
jnp
sub
inc
pop
xlat
fabs
push
mov
pop
mov
pop
jo
mov
js
ins
stc
fistp
imul
xor
lds
mov
or
stos
cwde
jmp
xchg
sub
and
fistp
mov
movs
xchg
adc
push
test
rcr
fs
mov
fsubr
fcmovnbe
fld
or
sbb
mov
out
fst
popa
fistp
xchg
add
and
pop
jns
ret
aad
xor
loope
mov
cmps
std
(bad)
jecxz
arpl
fild
xchg
jnp
jl
pand
adc
fcmovbe
cs
frstpm(287
jns
mov
xlat
add
or
fnstenv
mov
(bad)
push
(bad)
ss
shl
and
sbb
loope
mov
int3
fs
sahf
(bad)
mov
and
cs
or
and
cmp
test
mov
dec
jmp
(bad)
sti
fstp
pop
and
leave
rcr
fdivp
iret
push
xlat
popf
jecxz
or
fisub
push
sbb
xchg
fild
jb
jmp
enter
sbb
ret
xchg
fs
jae
add
ins
std
sbb
loop
(bad)
dec
sbb
mov
mov
dec
sbb
arpl
outs
sti
aam
shl
add
mov
es
ss
mov
stc
movs
arpl
fndisi(8087
loopne
pop
nop
mov
push
lahf
sbb
inc
pop
repz
fild
leave
adc
xchg
mov
xor
dec
push
inc
xor
xor
pop
mov
xor
add
push
ror
(bad)
out
out
in
aad
xchg
xchg
(bad)
test
loop
call
mov
fnstsw
popf
loope
and
dec
sbb
jmp
loopne
sub
fistp
repnz
jbe
outs
inc
push
pop
sti
das
fbld
xor
adc
pop
push
pushf
popf
and
jmp
repz
arpl
push
mov
cmp
mov
jb
xchg
fistp
jle
sbb
in
push
mov
retf
(bad)
mov
fidivr
add
fld
or
jb
add
fstp
ss
dec
jns
jg
and
or
fistp
cmp
jb
xor
mov
jne
cs
fisttp
inc
sbb
and
mov
jno
or
fs
xchg
push
in
xlat
imul
jecxz
pop
mov
sbb
fsubr
jecxz
fldcw
stc
inc
addr16
int
es
mov
test
sbb
loope
push
xchg
in
(bad)
push
mov
rcr
adc
imul
mov
pop
(bad)
push
rol
das
push
mov
(bad)
ror
ret
addr16
push
out
jno
imul
mov
loop
xor
in
shr
call
push
dec
fild
sub
fld
js
(bad)
cs
repz
sub
test
pop
scas
push
fneni(8087
lahf
aam
shr
test
adc
add
or
aad
xchg
fild
stos
sbb
push
ins
xchg
fcomip
loopne
repz
adc
lahf
fcmovb
and
push
add
out
imul
in
sub
pop
ins
icebp
outs
(bad)
out
sub
scas
push
jp
push
je
push
cmps
sub
enter
pop
push
arpl
xchg
fisttp
jno
dec
sbb
daa
adc
into
and
pop
pop
xchg
adc
fistp
scas
sub
jl
inc
sti
mov
xchg
stos
or
ror
lods
daa
xchg
or
push
addr16
pop
retf
fwait
mov
push
loopne
mov
stc
(bad)
fcmovne
movs
xlat
dec
idiv
sbb
xchg
inc
lods
and
xchg
daa
call
fiadd
mov
fcomi
lea
imul
jle
sbb
xlat
(bad)
stc
jp
sti
sub
dec
mov
rcl
iret
or
pop
cdq
rcl
push
and
mov
aaa
(bad)
ins
faddp
jmp
and
or
fistp
mov
cmc
popa
jnp
xchg
in
add
stc
add
mov
test
mov
cmps
jnp
fisttp
xor
aad
xor
and
pop
js
ret
fwait
int3
(bad)
lods
cmp
push
xor
stos
(bad)
jae
mov
lea
push
ins
fisttp
cmp
jns
add
pop
jmp
arpl
cld
fist
test
mov
pusha
scas
jno
cwde
and
(bad)
adc
or
xchg
mov
cmp
jecxz
sar
pop
adc
aad
pop
pop
dec
shr
popf
fcmove
adc
fwait
mov
jecxz
adc
sub
inc
and
pop
movs
mov
pop
inc
das
test
fild
jbe
cmp
and
jp
add
adc
adc
repnz
mov
fst
jmp
dec
ret
mov
repz
in
and
cwde
mov
das
stos
lods
iret
inc
arpl
fidivr
xchg
(bad)
into
out
(bad)
jne
adc
data16
mov
popf
fnstenv
jl
fwait
in
ret
fistp
arpl
xor
cmp
(bad)
int3
adc
loope
jmp
outs
shl
push
data16
ds
repz
mov
add
xchg
lock
mov
fistp
repz
jecxz
cmc
into
inc
imul
jo
loop
pop
dec
jmp
ror
in
jns
push
fldenv
or
in
sub
xchg
cmp
retf
adc
(bad)
pop
(bad)
fnstenv
inc
neg
xchg
scas
inc
sub
or
repz
scas
dec
adc
add
mov
adc
mov
dec
sbb
sub
fisttp
jb
pop
pop
sub
and
pop
mov
fst
aad
or
(bad)
arpl
pusha
or
aas
rcr
movs
test
aaa
out
inc
push
mov
pop
xchg
sbb
pop
dec
jns
push
js
adc
adc
mov
mov
add
gs
and
mov
dec
test
sbb
pop
inc
pop
sbb
cmp
cdq
xchg
repz
(bad)
pop
popf
push
popf
shl
scas
in
sti
cmp
ins
int
and
pop
or
mov
iret
imul
loopne
or
(bad)
xor
sbb
popa
ficomp
jnp
sbb
mov
hlt
in
lock
add
jmp
mov
jo
mov
push
lods
(bad)
iret
and
popa
push
inc
fist
fstp
add
mov
test
sti
out
ret
pop
icebp
pop
cdq
mov
cli
pop
xchg
in
push
sbb
rcr
je
and
cmp
add
sbb
hlt
mov
jecxz
aad
add
jle
sbb
sbb
or
sub
or
call
sbb
shr
and
aas
mov
ficomp
cmp
mov
or
add
mov
mov
adc
xchg
sub
ret
popa
int3
jg
and
ins
(bad)
jl
xchg
push
call
and
push
mov
int
shl
(bad)
pushf
ins
jb
nop
shl
gs
cmp
and
sbb
out
imul
fs
leave
xchg
ds
jle
or
(bad)
imul
mov
jnp
add
fisubr
mov
sbb
and
adc
xor
test
test
and
out
mov
mov
sahf
cmp
rcl
add
fsubp
add
and
sar
xchg
jo
jp
and
mov
mov
mov
iret
arpl
test
ja
xor
dec
neg
or
fistp
inc
push
icebp
lods
cmp
retf
mov
add
ss
mov
xor
cdq
mov
inc
cmp
adc
fistp
int
mov
xchg
dec
push
in
loope
sbb
mov
xor
nop
pop
out
pop
adc
fild
cmp
cmp
and
pop
(bad)
retf
imul
sub
or
push
lods
sub
js
(bad)
retf
mov
and
(bad)
cld
jmp
test
in
fsub
inc
ud0
mov
add
sbb
pop
fcom
(bad)
shl
mov
sahf
inc
sbb
sbb
dec
xor
pop
sub
mov
les
shl
cld
xchg
daa
mov
cmp
jmp
cmp
sahf
mov
xor
call
push
clc
push
and
jl
data16
mov
pop
cdq
mov
push
jl
frndint
out
dec
pop
test
xor
(bad)
pop
sub
sub
pop
mov
mov
inc
mov
lea
xlat
cli
rcr
cs
jmp
sbb
sbb
adc
test
pop
push
pop
outs
outs
ficomp
and
in
scas
cmp
push
inc
retf
push
in
mov
fstp
fisub
xchg
xor
aas
dec
mov
jns
and
xlat
ins
nop
mov
pop
int3
and
add
pop
and
imul
in
shl
leave
push
add
out
or
push
punpckhdq
je
jecxz
mov
leave
scas
sbb
cmp
fistp
mov
mov
jl
out
idiv
jl
and
mov
test
out
push
jb
arpl
fmul
lock
imul
fs
push
pop
sti
sub
stos
in
jp
in
movs
(bad)
dec
lds
push
std
inc
push
inc
into
test
or
sub
and
mov
xchg
ja
rcl
jle
test
dec
loope
dec
das
mov
and
push
mov
(bad)
test
es
add
and
sub
jno
ss
ss
ret
and
(bad)
(bad)
mov
lods
and
add
movlps
repz
mov
gs
je
in
jmp
fld
scas
test
fwait
outs
pop
repz
adc
jge
mov
clc
clc
pusha
mov
push
push
pop
xchg
sbb
cmp
xchg
cwde
or
sbb
mov
(bad)
pop
or
sahf
cdq
mov
mov
push
sub
mov
dec
xchg
retf
jecxz
xchg
cli
jne
std
movs
fisub
sub
add
inc
pop
xchg
shl
rcr
test
cmp
mov
shl
add
outs
mov
(bad)
in
lahf
in
mov
xor
cmp
fs
push
shl
adc
sbb
test
call
outs
stc
push
jo
(bad)
pop
adc
ss
add
sub
lock
cs
call
call
push
xor
fild
cmps
mov
dec
stos
jns
out
mov
popa
lea
fnstcw
jae
add
dec
fild
in
jge
fimul
fld
adc
ins
call
dec
aaa
jnp
jl
bound
dec
aam
mov
fwait
sbb
aad
add
(bad)
sbb
shr
adc
pop
mov
inc
jg
popa
dec
cmp
fucomi
shl
xchg
out
jecxz
sti
xlat
fldcw
jnp
sahf
and
sbb
popf
sub
mov
scas
lds
xor
stc
repnz
fadd
xchg
jb
enter
cmp
add
xchg
pushf
and
out
cld
mov
sbb
ficom
adc
xchg
and
scas
in
dec
adc
cmp
push
ins
add
mov
and
loope
je
div
xchg
mov
adc
dec
inc
aaa
push
mov
pop
xchg
mov
es
pop
std
jne
loop
pop
inc
sub
nop
bound
rcl
call
pop
shl
and
lods
inc
cmp
adc
xor
outs
into
push
pop
in
shl
popa
xchg
or
fdiv
out
sbb
js
xchg
xlat
add
or
sbb
pop
ror
cs
rcr
outs
mov
add
daa
in
cmp
in
sbb
sub
idiv
clc
test
data16
and
mov
fs
pop
ins
std
jbe
ror
sbb
cmp
scas
gs
push
mov
cwde
cmp
mov
cwde
mov
adc
into
xchg
cmps
cmc
jecxz
ins
hlt
or
shl
xchg
pop
fcomip
push
pop
mov
pop
dec
jmp
jle
jge
idiv
js
les
push
jb
push
cmp
aaa
mov
inc
popa
fsubrp
jae
call
inc
adc
xchg
pusha
inc
mov
into
test
in
imul
or
(bad)
in
lds
jp
shl
and
adc
test
out
add
out
jl
stc
mov
shl
(bad)
stc
jb
fstp
pop
mov
xor
sbb
push
add
sti
addr16
retf
jno
addr16
pop
hlt
fst
or
add
adc
xor
mov
rcr
cmp
fmul
test
dec
out
xor
sub
push
daa
mov
fdivr
in
jp
xor
push
mov
call
int
clc
jns
repnz
pop
cmc
pop
cwde
mov
ja
jnp
push
not
mov
dec
movs
and
jo
xchg
jl
mov
sbb
adc
add
fidivr
shl
pop
push
stos
aam
es
xor
adc
jbe
pop
in
mov
out
fsubrp
dec
int3
outs
xchg
mov
pop
cdq
sub
xchg
pop
jecxz
(bad)
repnz
ins
xor
pop
and
and
fimul
cmp
cmp
shl
imul
add
sti
and
or
push
add
mov
fidiv
sub
and
and
jmp
cmps
adc
(bad)
loopne
dec
mov
pop
aam
dec
sti
icebp
stos
fistp
xlat
repz
sbb
lds
test
out
inc
jg
mov
loop
jecxz
jp
shl
stos
fisub
push
jno
and
cmp
(bad)
push
dec
loopne
xchg
sbb
and
add
cs
inc
jl
xor
std
and
pop
in
mov
(bad)
jl
jge
push
add
dec
std
dec
sub
mov
bound
cmps
mov
sub
mov
mov
sbb
xchg
jne
mov
and
rol
mov
retf
sbb
jns
ins
jbe
push
jp
ins
sub
es
add
push
or
pop
add
out
pop
dec
clc
xchg
mov
in
pop
outs
xlat
cmp
test
or
jmp
inc
xchg
mov
cmp
int
fwait
rol
stc
je
stos
add
repz
sub
and
pop
xchg
jae
call
sub
je
sub
cwde
js
xor
xchg
xchg
ja
jecxz
xor
movs
jns
cmp
pop
dec
sbb
fild
cmp
xchg
sbb
sti
and
jle
cli
mov
push
lds
mov
or
push
stos
sbb
rcr
push
pop
lock
add
pop
inc
fmul
mov
jle
daa
sub
cmp
ret
fisttp
pop
add
data16
push
jl
jmp
xchg
xchg
out
pop
out
pop
in
stos
in
add
jo
inc
mov
sbb
mov
and
in
sub
cmp
int
and
sbb
dec
data16
out
inc
jmp
out
sbb
shl
ficomp
int
sbb
push
xchg
jns
sbb
stos
daa
sbb
push
repnz
pop
ins
in
mov
jns
rol
pop
mov
inc
jge
xor
int3
iret
pop
mov
int
dec
mov
mov
(bad)
xchg
ficomp
mov
add
(bad)
cmp
sbb
xchg
sub
lods
xchg
in
mov
push
out
clc
sbb
add
mov
xor
test
test
cbw
enter
push
xchg
mov
sti
dec
sahf
int
adc
cmps
ror
lock
movs
sub
fbld
in
in
cmc
enter
xchg
dec
cmps
add
lods
cmp
inc
pop
cmp
out
inc
call
(bad)
and
scas
jecxz
and
call
dec
add
pop
push
add
inc
repnz
sbb
cmp
ret
inc
xor
push
imul
arpl
lods
sbb
jne
sbb
push
jmp
mov
pop
fild
add
jns
pop
mov
cmps
in
int3
mov
inc
cld
pop
arpl
mov
xchg
pop
fst
inc
fbld
sub
sahf
dec
push
sbb
test
mov
sbb
sbb
push
ret
mov
fbstp
repz
data16
push
mov
fs
pop
mov
retf
fwait
cdq
jmp
xor
and
fadd
jae
jno
pop
fiadd
xchg
movs
inc
add
fiadd
sbb
mov
fdivr
ret
sbb
xlat
imul
inc
sti
sub
xchg
std
mov
test
retf
jmp
sbb
cdq
mov
push
and
sbb
add
pop
pop
aam
xchg
js
cmp
pop
fyl2xp1
inc
jl
movs
scas
mov
mov
es
adc
fidivr
cmp
mov
xlat
pusha
sti
dec
aas
xchg
or
inc
inc
jge
jbe
xlat
dec
in
(bad)
loope
mov
dec
cmp
out
push
sbb
cdq
pushf
and
enter
and
xchg
test
cs
dec
hlt
pop
push
ins
fdivr
retf
pop
push
pshufw
sbb
mov
adc
xor
test
dec
dec
sbb
mov
nop
sti
mov
or
and
or
xor
push
(bad)
dec
mov
mov
pop
push
repnz
pop
in
jno
xchg
fs
and
sbb
pop
and
adc
fdivr
jae
mov
xor
fistp
arpl
fldcw
cmc
pusha
fisubr
dec
pop
inc
cmp
cdq
ja
jp
adc
(bad)
fbld
inc
jae
sbb
cli
inc
cld
jge
in
ins
cmp
loope
jle
and
leave
lods
inc
mov
in
and
inc
stc
jae
mov
inc
jbe
dec
pop
cld
ins
add
push
cmp
ficom
and
inc
lahf
mov
jge
xor
dec
dec
pushf
push
ja
lahf
add
enter
jmp
jns
add
sbb
xchg
mov
jae
and
fstp
call
(bad)
call
sbb
sub
xchg
mov
leave
pop
jge
cld
xor
les
adc
lods
pusha
cmps
xor
add
call
push
cmp
imul
pusha
repnz
or
int3
ds
pop
or
and
inc
mov
push
xchg
add
dec
mov
sub
cmp
fsubr
xchg
or
in
and
retf
sar
aas
js
mul
push
sub
ds
ret
mov
popa
mov
push
dec
in
cmps
add
dec
dec
ds
cs
sub
test
inc
fist
add
push
or
sbb
xor
cmps
cdq
cmp
push
xor
enter
mov
xor
adc
mov
cmps
mov
inc
fiadd
sti
movs
sbb
test
and
cli
leave
(bad)
sbb
jb
mov
push
adc
sub
or
shl
cwde
xor
mov
mov
js
sbb
cli
test
inc
mov
sti
mov
pop
cmps
sbb
loop
div
mov
push
mov
pop
inc
jg
mov
ds
adc
push
sti
jl
inc
clc
xchg
fs
std
shl
inc
sahf
int3
mov
push
xchg
std
inc
mov
pop
repnz
test
cmp
clc
loope
jecxz
add
mov
cmp
lods
xor
inc
jle
xchg
sar
and
pop
imul
in
cmp
sbb
and
lahf
add
jp
add
(bad)
jns
ins
cmp
loope
aaa
inc
rcl
mov
push
jl
and
cmps
sti
inc
ins
(bad)
cmp
adc
outs
pop
mov
jns
(bad)
fistp
ins
dec
(bad)
sar
je
mov
jl
mov
fdiv
daa
ds
jg
pushf
jns
pop
retf
jmp
sbb
and
cmps
aas
mov
cmp
fdivrp
xchg
push
or
test
sbb
pop
rcr
add
popf
xchg
xchg
call
fist
sar
(bad)
(bad)
es
jecxz
or
data16
cmp
repz
xor
repz
int3
adc
mov
fstp
jge
jle
out
out
sub
and
pop
fstp
aam
inc
nop
(bad)
pop
ret
in
jmp
mov
add
adc
or
add
push
mov
adc
mov
mov
(bad)
in
cdq
out
mov
sti
scas
inc
bound
and
mov
xor
sti
sub
mov
std
call
jno
(bad)
xor
imul
fist
outs
scas
ins
inc
adc
cmp
std
and
and
adc
sti
inc
leave
sbb
outs
test
jo
popa
popf
pop
cmp
pop
sub
test
fwait
mov
mov
aaa
aas
enter
jg
sub
retf
and
out
dec
mov
cmp
push
mov
mov
dec
fsubr
rcl
mov
jae
cli
push
pop
push
sahf
nop
and
mov
bound
cdq
pop
sti
addr16
sub
mov
loope
xor
aaa
adc
mov
push
lea
jae
fist
xor
stos
scas
add
ret
test
imul
daa
lahf
popf
mov
pop
aaa
jmp
sbb
mov
sbb
push
mov
dec
jl
lea
ins
xchg
frstor
in
repz
(bad)
pop
les
sub
leave
loope
add
xor
mov
and
fstp
or
inc
fcmovne
and
xchg
scas
int
lock
pop
out
(bad)
repnz
push
inc
cmps
push
(bad)
int
ins
jecxz
pop
in
mov
and
cmps
sbb
ds
xor
leave
sahf
call
or
push
xchg
mov
(bad)
out
shl
mov
aaa
inc
add
imul
mov
out
jne
ja
jmp
fist
cmp
das
(bad)
clc
cwde
dec
fcmovne
or
dec
mov
(bad)
rep
(bad)
test
mul
cmp
jmp
movs
(bad)
fnstcw
(bad)
ds
mov
(bad)
xchg
xchg
push
jecxz
push
movs
ja
jle
pop
mov
sahf
sub
cmps
push
in
adc
mov
jno
fidiv
push
ins
test
mov
mov
cmp
or
(bad)
dec
xchg
fwait
sub
add
dec
or
call
pusha
test
(bad)
stos
xor
push
pop
pop
or
inc
cwde
mov
cdq
cmps
(bad)
out
lahf
sti
fild
jbe
add
enter
push
aam
sti
adc
pop
retf
fild
cmp
adc
out
sahf
mov
push
pop
cmp
xor
in
and
fild
loop
outs
xchg
fld
call
fstp
imul
cwde
aaa
fcomi
lods
mov
cmp
outs
add
pop
(bad)
lds
pop
bound
fld
sub
mov
cmp
loope
cmp
lods
jnp
out
shl
sti
fcomp
xchg
sahf
and
cmps
xchg
mov
cmp
out
scas
mov
aam
loop
cli
call
xor
jecxz
jmp
stc
adc
fadd
fbstp
les
movs
call
jmp
adc
in
xchg
jmp
fcomip
aad
push
sub
lahf
stc
fild
and
gs
popf
enter
fld
mov
inc
arpl
mov
or
in
jecxz
cmc
pop
adc
in
xor
ins
pop
test
cmp
add
mov
test
lock
pop
hlt
in
mov
dec
(bad)
loop
jmp
pop
jno
int
push
fstp
push
sub
push
xor
dec
adc
mov
xor
and
push
jle
mov
stc
sub
sub
in
jae
ins
mov
inc
ds
clc
mov
or
call
push
pop
pop
(bad)
push
mov
xchg
iret
mov
and
jl
ret
jecxz
fwait
jge
imul
xchg
push
enter
icebp
fnstcw
add
and
(bad)
sub
pop
movs
adc
mov
in
pop
ret
daa
arpl
bound
cld
adc
inc
and
mov
scas
ins
xchg
out
ror
xchg
lods
sbb
and
mov
shl
inc
stc
cmp
xchg
ins
add
jl
pop
xchg
add
repz
arpl
mov
scas
int
lods
lock
push
test
retf
xor
cmps
dec
dec
xchg
lds
add
retf
adc
(bad)
mov
sbb
sahf
mov
bound
cmp
sahf
aas
dec
pop
into
jle
jecxz
mov
iret
pop
push
stos
mov
lods
inc
cmp
imul
xchg
push
in
cdq
stos
or
int
call
pop
in
add
jg
pop
cmc
add
mov
movs
int
cs
xchg
mov
adc
xor
mov
xchg
pusha
xchg
mov
in
rcr
rcr
cmp
mov
and
jmp
adc
scas
das
pop
xor
sub
dec
and
bound
bnd
out
(bad)
sbb
mov
pop
sar
pop
enter
sbb
ja
cmps
fsubrp
sub
in
push
xor
lahf
mov
mov
ds
xchg
scas
and
aad
or
sub
push
and
push
xor
pop
sbb
shl
sbb
push
pushf
enter
mov
push
fs
mov
cmp
dec
add
stos
pop
aam
stos
push
adc
cmp
sbb
and
daa
jmp
aas
adc
mov
test
(bad)
jmp
retf
xor
dec
lods
fisubr
call
mov
scas
test
mov
daa
mov
cmp
das
stos
sbb
mov
xchg
ror
mov
jmp
data16
dec
in
sbb
fwait
cmova
push
inc
fild
mov
es
mov
adc
adc
ret
data16
and
jmp
sbb
jle
mov
xor
jge
xchg
shl
add
ins
jbe
aaa
(bad)
pop
hlt
and
(bad)
mov
and
xchg
push
mov
jmp
in
add
cdq
ret
or
jmp
in
mov
inc
leave
scas
addr16
mov
xchg
cmp
and
sbb
sbb
xchg
pop
mov
or
jo
jle
in
mov
es
push
rcr
add
ins
mov
mov
and
or
popa
sub
das
lods
jo
sbb
xchg
mov
movs
mov
fistp
shl
cwde
rcr
ins
mov
daa
pop
sbb
int3
xor
rdtsc
in
dec
clc
enter
sub
ror
mov
cmp
xchg
cmp
outs
add
js
fisub
jp
dec
dec
scas
ins
loop
mov
or
fnstsw
inc
jo
retf
jmp
arpl
cwde
and
jns
add
cmp
ja
xchg
xchg
(bad)
sbb
push
add
sub
(bad)
xchg
jge
daa
jge
ror
cmp
jg
xor
shl
enter
fmulp
mov
and
xchg
(bad)
xchg
out
mov
cmp
rcl
sub
dec
call
dec
mov
sub
mov
pop
jns
or
xor
call
jge
jecxz
sub
scas
test
jbe
or
out
xor
(bad)
or
xchg
aas
int
movs
daa
mov
out
lds
mov
mov
imul
je
inc
pop
fbld
punpcklbw
cmp
jnp
ins
pop
sub
sar
push
pop
in
pop
adc
dec
popf
adc
jecxz
jecxz
push
push
call
fs
pusha
sub
and
es
push
into
sbb
inc
add
cmp
shr
jno
sub
inc
inc
int
lds
loop
inc
inc
mov
and
(bad)
fidivr
out
test
pop
push
jmp
pop
dec
mov
dec
xchg
fsub
push
ret
add
clc
fdiv
push
mul
push
sub
dec
iret
sti
pop
fild
inc
cdq
js
call
mov
mov
mov
lds
pop
fcmovnbe
or
mov
jae
push
je
cmp
rcr
adc
pop
in
ret
push
inc
(bad)
(bad)
enter
mov
adc
fist
call
sub
test
div
movs
and
mov
adc
test
(bad)
rep
mov
push
aas
gs
fucomi
pop
lea
push
ja
ins
mov
cld
sbb
fld
repnz
xor
cdq
fistp
xchg
jb
fcmovne
loope
hlt
daa
pop
aas
dec
(bad)
test
dec
call
pop
in
fcmovbe
xchg
mov
rol
mov
in
mov
ret
test
movs
fisttp
sbb
ins
out
daa
mov
mov
(bad)
hlt
das
aaa
xchg
fwait
add
fs
bswap
dec
mov
mov
repz
ret
push
fistp
adc
or
(bad)
repnz
cmc
fdiv
mov
xchg
ret
dec
repz
test
in
in
fdivrp
fcmovne
jno
mov
fld
dec
mov
fcomi
sti
pop
out
pop
and
shr
adc
mov
inc
hlt
xchg
test
retf
or
mov
repz
in
(bad)
adc
fcmovnu
add
xor
(bad)
int3
mov
popf
ror
dec
sub
pop
std
lahf
rcl
call
fcmovbe
push
add
fld
cmc
jle
or
adc
enter
retf
jecxz
mov
es
fisubr
fist
push
cmp
mov
mov
fsub
outs
pusha
fstp
xchg
and
aaa
sub
imul
int3
mov
pop
(bad)
inc
bound
xchg
dec
jne
add
lea
jae
mov
xor
(bad)
(bad)
fcom
xchg
sbb
xlat
and
out
pop
dec
jp
and
jg
adc
inc
mov
xor
sub
ja
mov
aad
int
xchg
rcl
jne
sub
or
xchg
jno
aad
in
and
xor
sbb
add
and
pop
in
xchg
jmp
mov
xchg
adc
(bad)
xor
xchg
push
jmp
out
aam
in
mov
sbb
jecxz
(bad)
shl
ret
cld
pop
dec
fwait
inc
inc
jbe
pop
adc
pop
iret
inc
push
std
mov
jmp
add
sti
outs
cmp
cli
(bad)
pop
out
jmp
or
push
enter
sbb
xchg
xchg
cmp
inc
sub
dec
inc
stos
xor
xchg
xor
movs
fistp
cld
jnp
push
jp
mov
mov
push
fist
faddp
mov
dec
test
test
inc
and
mov
xchg
sbb
shl
dec
(bad)
mov
jp
fs
scas
xchg
imul
mov
fsubr
pop
sub
inc
sbb
sti
jns
push
std
push
inc
inc
jp
jmp
outs
cmp
and
adc
mov
ins
out
adc
add
cs
(bad)
or
loop
lock
leave
push
fidivr
sub
int
test
arpl
or
lods
xchg
mov
mov
pusha
sbb
add
sbb
mov
sbb
mov
mov
leave
mov
push
push
ins
neg
jo
or
inc
push
sti
pop
out
neg
ret
sti
leave
mov
xor
aaa
and
rcr
and
push
add
xchg
jg
ror
or
ins
mul
(bad)
mov
xchg
sbb
(bad)
push
in
cmp
jge
dec
(bad)
xor
cli
arpl
int
sub
out
or
ds
out
gs
sbb
adc
pop
mov
in
push
and
jb
sbb
add
lds
es
mov
sbb
xchg
dec
pop
mov
inc
lds
(bad)
imul
mov
jge
iret
and
leave
dec
mov
dec
imul
(bad)
gs
jp
out
adc
cmp
ret
test
cwde
clc
and
dec
xchg
in
(bad)
fucomp
mov
stos
jecxz
daa
push
push
xor
jecxz
xchg
jl
add
jp
ret
iret
adc
movs
push
(bad)
push
inc
pop
scas
mul
pop
imul
jmp
or
inc
loopne
push
push
pop
mov
push
and
sbb
cmp
arpl
shr
mov
je
xor
sub
mov
push
scas
pop
es
and
movs
cmp
stc
cs
mov
sub
push
ror
call
sbb
sbb
rcl
imul
ret
arpl
xchg
stos
and
mov
dec
and
inc
loop
xchg
adc
cmp
(bad)
je
mov
scas
sub
pop
gs
sub
xor
fisubr
pop
data16
cmp
(bad)
loop
or
dec
xchg
adc
and
pop
jge
popa
inc
stc
cwde
into
xchg
cmp
scas
(bad)
(bad)
adc
cmp
pop
xor
ret
data16
mov
xor
dec
xor
mov
inc
add
je
sub
shr
mov
sbb
out
mov
pop
pop
mov
pop
sbb
rcr
dec
cmp
mov
jbe
sub
aad
mov
out
fsub
adc
imul
in
cmp
xchg
pushf
mov
jecxz
mov
inc
lods
sub
lea
daa
sub
mov
sti
movs
mov
cmp
retf
xchg
pushf
push
mov
rcl
xor
(bad)
ds
out
leave
fstp
mov
cmp
add
push
sbb
add
mov
sub
lock
mov
cwde
jge
lds
push
mov
adc
and
arpl
test
adc
repz
lods
sar
(bad)
sti
ror
mov
fsub
jge
ficomp
fstp
jmp
sbb
xor
xchg
stos
movs
jecxz
jg
pop
shl
fidiv
push
fist
test
mov
shl
pop
fist
lahf
fisub
mov
ins
shl
adc
pop
(bad)
cmps
push
push
(bad)
pop
(bad)
rcr
test
push
nop
or
int3
fcmovne
out
xchg
cmps
sub
xor
mov
fist
mov
fcmovnbe
jno
mov
xor
dec
fsubr
aam
adc
jg
jno
ret
or
push
fild
cld
xor
dec
gs
cmc
jmp
pop
mov
mov
lods
lahf
fsub
aas
mov
mov
push
mov
daa
jns
add
xchg
push
cmp
dec
xor
fild
jns
ja
gs
cwde
mov
js
dec
fisttp
(bad)
jle
and
in
std
sti
sub
test
call
ins
xor
into
cmp
or
stc
loopne
and
int3
mov
(bad)
neg
sub
shr
int3
jne
fist
pop
in
inc
aam
and
loopne
test
inc
mov
out
cmps
and
mov
push
xchg
dec
outs
sub
mov
jl
xor
cli
ffreep
popa
jo
jecxz
push
jg
mov
pop
xor
push
xchg
xor
(bad)
sub
loop
cmps
mov
sar
jmp
xor
loop
fs
and
push
addr16
test
xchg
adc
(bad)
fild
pushf
loope
adc
mov
mov
mov
sbb
ret
dec
fcomp
nop
xchg
lods
cmc
dec
ds
fild
pop
cmp
ret
mov
xchg
fild
fisub
repz
dec
push
jae
lds
(bad)
int
popf
mov
or
push
sbb
fild
and
dec
jmp
in
xor
inc
icebp
jecxz
rsqrtps
dec
mov
mov
jmp
lods
add
sti
rcr
pop
stos
adc
pop
mov
scas
(bad)
sbb
jl
jmp
pusha
add
xor
jg
sti
bound
lock
imul
and
xor
test
jno
rol
sbb
mov
add
ins
(bad)
fisttp
fucomi
dec
cmps
(bad)
imul
xchg
repz
ins
mov
push
sbb
xor
leave
mov
fist
sbb
stos
fistp
arpl
call
or
(bad)
retf
mov
fistp
jmp
xchg
mov
int3
ja
pusha
fld
xor
cmp
jmp
sbb
in
fcmovnbe
jno
mov
fstp
pop
mov
loop
and
fist
push
sub
pop
and
test
xor
sub
jg
retf
dec
(bad)
mov
add
mov
pop
es
sub
or
pop
dec
fcmovnb
(bad)
aad
out
xor
adc
or
(bad)
fistp
sar
mov
jge
pop
sbb
frstpm(287
les
xchg
push
pop
enter
std
xchg
retf
sub
nop
pop
ficomp
mov
push
fist
xchg
and
leave
call
mov
fcom
into
test
xor
and
pop
pusha
push
mov
dec
pop
or
sti
pop
cdq
xchg
into
je
and
std
dec
sbb
(bad)
ins
arpl
jae
add
push
rol
cmp
cmp
arpl
data16
jbe
mov
xor
outs
xchg
add
mov
mov
mov
aaa
aad
xor
jno
pop
(bad)
and
adc
addr16
jmp
sbb
cmps
cs
sbb
imul
rcl
leave
cmp
dec
cmp
call
mov
mov
and
xchg
mov
adc
and
add
aad
cmps
fiadd
and
mov
fcomp
sbb
retf
out
cmp
les
inc
fiadd
fimul
ret
jge
mov
hlt
pop
fstp
out
lods
adc
loopne
adc
ss
and
mov
mov
mov
xchg
push
xor
xchg
fnstenv
adc
or
mov
(bad)
(bad)
cmps
and
inc
pop
(bad)
das
adc
mov
nop
sti
fst
ja
fdivr
fld
push
lods
shl
movntq
xor
and
xchg
bound
mov
jae
add
or
xor
imul
mov
xchg
bound
push
sub
test
pop
adc
sbb
jmp
adc
fisubr
rcr
mov
icebp
mov
mov
in
(bad)
and
ret
cmp
xchg
jb
add
sub
fbstp
popf
jns
ins
add
sub
mov
js
loope
add
(bad)
je
jmp
stc
xchg
sahf
pop
enter
mov
sbb
dec
sbb
mov
int
stos
add
mov
es
cs
push
jecxz
push
xor
bound
leave
aad
fld
lds
enter
jo
mov
in
xor
fiadd
xchg
push
shl
shl
in
clc
sub
adc
lds
and
push
pop
push
dec
nop
pop
fs
stc
fadd
stos
mov
mov
mov
mov
gs
(bad)
pop
push
cld
adc
mov
into
fucomi
add
pop
mov
or
nop
cmp
xchg
add
fld
xor
aad
repz
(bad)
shl
add
outs
into
and
(bad)
jno
call
push
(bad)
sti
sub
pusha
mov
sbb
jo
and
xor
push
cmp
fidiv
enter
inc
cdq
mov
inc
pop
test
inc
scas
cmp
in
nop
lds
(bad)
mov
frstor
movs
jns
sub
dec
repnz
xor
scas
push
and
stos
dec
mov
or
push
cli
test
dec
jmp
sub
lods
stos
adc
ins
iret
mov
stos
ins
xor
shl
je
leave
adc
or
push
pop
in
jae
sti
mov
pop
je
jmp
pop
ret
je
popa
aas
lahf
scas
ins
aaa
mov
xchg
sub
ret
mov
into
or
test
mov
sbb
xor
pop
and
mov
push
and
mov
and
lods
push
and
sbb
jmp
dec
mov
push
in
aaa
dec
cmp
add
add
fidivr
or
inc
mov
retf
enter
(bad)
gs
fistp
lahf
cmc
mov
xchg
xor
ror
push
mov
and
(bad)
mov
hlt
dec
cmp
test
aad
and
lods
imul
leave
pop
xor
mov
and
cmp
ret
fld
and
push
cmp
scas
and
mov
fisttp
add
or
out
xor
js
test
xchg
shr
dec
adc
retf
neg
sar
shrd
les
push
push
lods
dec
pop
fistp
out
cdq
ins
cmp
out
adc
sbb
pop
push
rcr
ret
aad
mov
stos
mov
ja
xor
sub
pop
inc
inc
inc
jle
cmp
jne
push
fwait
jo
xchg
push
pop
jns
jle
mov
mov
pop
mov
imul
fucomi
stos
mov
sti
adc
out
int3
xor
mov
sub
push
pop
jmp
fild
lock
add
fist
and
lock
pop
sahf
mov
dec
(bad)
mov
jne
jecxz
inc
inc
cmp
lea
jnp
push
fcomi
or
mov
fisttp
pushf
and
or
mov
aas
fistp
jmp
fcmovnb
adc
push
xor
std
or
cmp
fist
cmp
cli
mov
cmp
mov
fdivr
js
or
fstp
cmp
jecxz
ss
mov
push
fcmovne
push
in
dec
test
xchg
mov
loopne
and
call
repz
popa
pop
add
cwde
push
xlat
cld
fist
ror
jge
iret
pop
mov
mov
leave
xlat
sar
rcr
ret
repnz
sub
das
pop
xor
mov
jo
push
jbe
test
fs
imul
mov
imul
rcr
popf
jecxz
mov
cmp
shl
inc
ins
fld
xor
cld
pop
es
push
repnz
cli
cmp
(bad)
pop
xor
jb
emms
mov
mov
pop
push
div
jno
pushf
jecxz
mov
aad
dec
lea
jp
jmp
and
or
(bad)
popa
jp
les
pop
(bad)
sub
(bad)
mov
stc
or
and
(bad)
cmp
mov
(bad)
pop
cs
adc
fidivr
mul
ds
add
mov
fcmovnbe
mov
(bad)
or
add
mov
je
aas
(bad)
(bad)
mov
lods
daa
mov
xor
out
jmp
adc
int3
out
sti
(bad)
(bad)
pop
icebp
fbstp
cs
pop
call
mov
mov
xor
lea
test
fldenv
jge
popa
cmc
sti
sbb
dec
clc
(bad)
cs
cmp
jge
push
shr
clc
xchg
ss
in
xor
adc
inc
(bad)
mov
pushf
imul
es
mov
sbb
pop
imul
mov
pop
and
sbb
cmps
std
mov
mov
in
stos
mov
stc
in
inc
sti
sbb
sub
pop
jp
cdq
loopne
sub
push
add
out
xor
dec
mov
push
addr16
sbb
das
jecxz
xchg
and
idiv
fwait
adc
dec
mov
sbb
out
inc
sbb
into
fwait
mov
sbb
mov
outs
pop
bound
sbb
ret
adc
mov
sar
push
jmp
jns
cmp
sbb
and
cmps
sbb
leave
das
les
adc
mov
cdq
mov
and
and
sub
pop
sbb
int3
cmp
rcr
mov
fdivr
repnz
mov
fnstsw
into
shl
mov
addr16
and
jb
fwait
or
ss
xchg
xchg
out
(bad)
call
mov
jl
imul
and
rol
in
in
mov
fimul
pop
sub
cdq
sbb
std
jmp
mov
sbb
cmp
push
and
pop
iret
inc
(bad)
data16
sbb
retf
mov
test
xchg
add
push
sub
and
jl
cmp
rol
out
push
add
pop
mov
adc
sti
add
pop
adc
sbb
call
in
dec
mov
(bad)
icebp
mov
push
loope
push
pop
and
movs
jns
pop
shr
push
add
test
and
lods
push
ja
ficomp
sar
out
cmp
cmp
jp
dec
mov
pop
fst
sub
jmp
and
cdq
test
clc
pushf
in
ret
fxch
jge
fld
in
in
data16
int3
stos
jne
jnp
adc
(bad)
xor
es
dec
add
xor
loope
adc
jo
fdiv
fsubr
jno
sbb
fnstsw
jb
sub
mov
mov
xchg
sub
jge
sbb
mov
sbb
fwait
and
popf
mov
sbb
mov
test
arpl
rcl
mov
and
repnz
push
in
mov
dec
scas
and
push
cmp
das
pop
dec
inc
aam
rcl
lds
stc
stos
add
sbb
outs
sbb
sbb
cmp
ret
mov
xchg
cdq
sahf
dec
and
add
add
aam
jmp
cs
cmp
repnz
sub
pop
push
xor
jp
ds
pop
xor
or
sbb
xor
shl
cdq
ror
jbe
imul
cmp
clc
rcr
fdivrp
jle
push
sub
mov
int3
mov
push
add
(bad)
arpl
fcom
fstp
cli
icebp
sti
add
sbb
fild
dec
pop
sbb
jmp
mov
sti
and
into
pop
pop
sub
dec
add
jecxz
sbb
push
pop
stos
fist
sbb
ins
outs
jbe
jmp
jmp
int
push
jle
cmc
mov
(bad)
xchg
pop
adc
sbb
adc
es
ror
inc
pop
xor
and
(bad)
mov
mov
mov
mov
and
pop
jbe
add
shl
mov
push
adc
pop
pop
sbb
xchg
push
jge
ds
imul
inc
sbb
hlt
ss
aad
stos
push
xor
mov
mov
sbb
push
lahf
mov
and
sti
fidiv
lock
push
sbb
ffree
(bad)
sub
jae
into
retf
(bad)
aas
mov
and
or
mov
test
sar
xchg
mov
cmp
add
adc
inc
add
dec
sbb
in
push
inc
inc
jb
mov
inc
std
dec
call
inc
xor
dec
sbb
sti
faddp
rol
jo
call
sahf
(bad)
sbb
cmp
hlt
mov
stc
stos
xor
pop
js
repz
mov
test
sub
xchg
jp
sbb
xchg
ret
js
es
call
popf
fsubr
hlt
push
mov
ds
pop
ins
stos
in
pop
and
pop
cmp
or
push
and
jle
mov
push
scas
lds
add
retf
mov
dec
sbb
push
popa
sar
cs
nop
xchg
pop
mov
sar
xor
out
inc
pusha
add
push
sub
xchg
mov
dec
and
xor
in
lock
lods
daa
(bad)
or
sbb
fld
pop
push
jmp
ret
xor
mov
leave
jge
push
fwait
lods
sbb
sub
xchg
rcr
mov
dec
jnp
fimul
push
test
ror
dec
pop
mov
outs
out
in
push
je
sar
icebp
and
push
fcomp
xor
mov
pusha
jb
nop
fiadd
inc
xor
mov
aas
pop
ins
inc
std
frstor
xchg
cmp
out
pop
dec
imul
cmp
sbb
inc
(bad)
sbb
pop
add
rol
js
je
pop
sbb
jmp
sub
xor
push
mov
pop
adc
and
sbb
(bad)
pop
call
and
xchg
adc
(bad)
xchg
fistp
pop
fmul
loopne
jecxz
mov
retf
push
dec
pop
jns
add
lods
repnz
mov
(bad)
fcmovb
sub
adc
inc
ret
gs
outs
enter
aas
sub
push
xchg
jbe
ss
fwait
and
sbb
popa
add
jp
into
push
mov
aaa
cmp
(bad)
clc
adc
jnp
ficom
jbe
js
push
cmp
mov
inc
lods
int3
xlat
push
ror
mov
(bad)
psubq
pop
or
sbb
or
jmp
test
push
stc
shr
out
(bad)
in
sub
dec
jge
scas
jl
cld
fld
dec
cmp
(bad)
pop
push
push
call
and
xor
(bad)
mov
and
jno
(bad)
fist
int3
ins
jo
mov
fxch
pusha
push
add
sub
(bad)
mov
arpl
mov
test
or
mov
and
out
mov
push
stc
xchg
ret
jmp
mov
mov
mov
inc
cmp
dec
jge
fcmovne
mov
out
pop
or
xchg
push
loop
push
fstp
shl
es
fisttp
mov
data16
xchg
dec
fstp
mov
pusha
aas
pop
or
cdq
jecxz
daa
or
cmp
add
inc
fsub
fistp
pop
push
push
jecxz
movs
add
mov
scas
adc
popa
inc
imul
stc
adc
(bad)
outs
xchg
sti
test
out
dec
popa
test
fisttp
in
les
push
and
adc
adc
xchg
fnstcw
retf
sub
jne
mov
fist
mov
adc
lods
jg
inc
enter
fld
pop
xchg
fsub
inc
mov
sub
sub
xchg
adc
push
movs
mov
mov
leave
fmul
test
inc
pop
shl
(bad)
jne
int
pusha
push
dec
pop
sbb
clc
loope
xchg
ficom
fcomp
sub
enter
mov
call
rcr
aad
adc
jns
fisubr
stos
mov
lea
adc
mov
retf
pop
fdivr
shr
sahf
xchg
push
jg
icebp
into
cdq
js
dec
jecxz
adc
loop
pop
mov
xchg
(bad)
retf
xor
and
jle
cli
fbld
ja
mov
loope
xor
(bad)
pop
in
fist
call
xor
jge
enter
inc
inc
and
cmp
(bad)
bound
push
iret
adc
xor
fcom
xchg
cdq
(bad)
mov
push
out
jp
shr
push
mov
dec
cwde
fild
pop
adc
pop
movs
imul
ficomp
mov
xchg
arpl
inc
aas
push
sub
je
push
fisttp
jbe
scas
stos
push
fisttp
xor
and
mov
lods
bnd
add
(bad)
adc
xchg
jbe
fistp
adc
xor
pop
pop
dec
adc
call
ficom
retf
or
(bad)
mov
sbb
and
xor
int3
dec
xchg
jecxz
pusha
xor
inc
mov
repz
xchg
movs
adc
int3
lea
fnstsw
mov
xor
les
(bad)
aam
andnps
and
and
mov
sar
push
scas
(bad)
outs
push
fisttp
push
sbb
outs
xor
cmp
aam
mov
mov
outs
popa
push
fnstcw
mov
in
test
ds
jne
cmp
push
push
jg
mov
arpl
movs
fld
xchg
xchg
lock
mov
mov
(bad)
out
hlt
dec
fcmovnb
push
and
inc
inc
pop
mov
nop
aaa
inc
cmp
xor
mov
dec
shr
add
fld
adc
(bad)
es
xchg
fsubr
repnz
adc
pop
cmp
jmp
mov
cs
pop
mov
lds
fist
push
outs
in
fist
(bad)
stos
inc
popf
mov
int
lods
xchg
enter
(bad)
or
(bad)
fstp
or
mov
stos
lahf
ins
pop
xor
(bad)
sti
addr16
cmp
jns
and
call
neg
xchg
mov
pop
xlat
jmp
add
push
xchg
call
mov
cmc
cdq
ret
icebp
or
fwait
or
in
dec
nop
pop
arpl
pop
pop
inc
fisttp
sub
pop
stos
aaa
dec
js
sbb
les
push
cli
fxam
xor
mov
sbb
sub
fcmovnu
mov
dec
ret
mov
fcom
sti
cmp
inc
mov
shr
pop
es
mov
adc
gs
xor
cld
aad
push
xchg
repz
or
shl
fstp
pop
mov
mov
ret
and
je
mov
adc
and
pop
mov
dec
mov
out
fs
cwde
js
pop
xchg
cli
out
cmp
imul
push
gs
fist
stc
xchg
in
inc
popa
xor
or
call
cmp
call
adc
int3
mov
push
lea
movs
adc
test
or
mov
mov
xlat
shr
pop
js
cmp
data16
mov
jo
xchg
dec
rcr
cmps
mov
xchg
ror
neg
loopne
inc
jmp
xlat
mov
repnz
rcl
pop
pop
ficom
cmp
fld
icebp
(bad)
rcr
add
push
mov
inc
out
mov
and
jecxz
or
in
lea
aad
push
cmps
out
jmp
js
repnz
adc
jno
push
(bad)
adc
ins
cs
adc
mov
fcmovnu
xor
cli
fstp
push
fwait
inc
jb
outs
xchg
dec
sbb
mov
inc
dec
xchg
icebp
add
lea
fwait
jae
fistp
movs
dec
mov
fisttp
push
xchg
mov
into
add
pop
retf
xchg
ds
sbb
lods
rcr
mov
or
fucomi
das
dec
jg
movs
imul
pop
cmc
test
adc
add
xchg
cmp
xchg
retf
jno
cmp
and
in
fucomi
push
shl
mov
rcl
enter
mov
mov
icebp
fstp
inc
addr16
pop
sub
fisttp
mov
fld
add
pop
pop
repz
fnstenv
fnsetpm(287
add
dec
xchg
jbe
or
push
in
(bad)
fcmovne
movs
into
enter
aam
jbe
fist
cmp
cld
fld
rcr
scas
fld
inc
mov
imul
shr
xchg
jo
mov
pop
pop
hlt
outs
pop
mov
xchg
dec
dec
xor
xor
mov
lds
add
data16
sbb
lock
popa
fstp
shl
inc
not
ret
ficom
xchg
fist
mov
ins
cmp
jae
mov
fstp
dec
ror
mov
jmp
dec
cmp
sub
jg
adc
cld
(bad)
xor
movs
cmp
ror
(bad)
out
mov
sbb
pop
mov
mov
dec
fst
mov
sahf
retf
or
add
and
cmp
popa
(bad)
fcom
fmul
repnz
ins
fcmovne
dec
xchg
jmp
loop
ds
mov
leave
(bad)
inc
(bad)
push
(bad)
out
inc
call
push
pop
mov
sbb
jge
ins
bound
call
jno
cmp
pusha
pop
in
ins
fs
push
fistp
xor
in
sbb
cli
xchg
cdq
mov
jecxz
push
test
cmp
mov
dec
daa
rcr
repnz
xor
xlat
in
repz
inc
leave
jae
mov
test
mov
sbb
sbb
xchg
xor
les
into
test
push
cmp
xor
adc
mov
xor
loope
std
sub
lods
cdq
xchg
mov
xchg
aaa
mov
jo
ret
ds
jnp
inc
dec
jno
push
dec
sbb
jae
(bad)
mov
inc
(bad)
fist
dec
lock
rcl
add
pop
inc
sbb
xchg
sub
retf
and
push
sbb
cwde
push
sbb
cli
clc
movs
jb
cld
sbb
jmp
(bad)
stos
jo
mov
stc
inc
jmp
xor
enter
ja
pop
test
mov
div
ja
fimul
jns
(bad)
mov
or
nop
cdq
add
push
loop
jae
mov
mov
adc
call
xor
and
pop
gs
ss
cmc
test
add
dec
mov
neg
push
xchg
or
ja
aaa
pop
xor
pop
fwait
inc
aam
dec
mov
add
fnstcw
aas
lods
ins
in
in
hlt
adc
or
test
test
xor
mov
mov
int3
inc
cmp
sub
shl
pop
mov
xchg
or
aam
cmps
xor
aad
call
jmp
cmp
jmp
push
(bad)
call
jae
jne
sbb
fst
inc
jl
push
pop
setne
fucomi
fsubp
bound
scas
mov
mov
push
int
jp
mov
cdq
in
mov
xor
mov
add
dec
aam
and
pop
sbb
add
push
sbb
(bad)
xor
inc
inc
aam
fisubr
sub
inc
and
ins
(bad)
fistp
shl
gs
add
(bad)
mov
fsub
push
mov
inc
into
ss
jno
mov
clc
inc
fcmove
and
call
adc
mov
jae
(bad)
xchg
sbb
dec
xchg
mov
mov
ror
and
call
popf
adc
repz
mov
inc
sbb
(bad)
std
gs
sbb
hlt
or
and
rcl
xchg
xor
sub
pop
jmp
and
pop
pop
arpl
sti
cmp
push
cmp
outs
xor
fst
ror
inc
mov
dec
jne
add
call
jae
pushf
arpl
mov
mov
jecxz
popa
dec
fs
and
mov
push
mov
mov
sbb
pop
jecxz
xchg
fnstsw
cmp
rcr
dec
mov
push
cs
in
inc
jns
sub
mov
sbb
jnp
mov
call
push
in
retf
jb
repz
pop
(bad)
scas
and
mov
lea
jo
fidiv
cmp
jge
mov
addr16
fstp
mov
sti
inc
push
xchg
jae
pop
adc
dec
jne
outs
jl
mov
fist
fild
hlt
jecxz
cli
fadd
sti
cmps
pushf
and
pop
xlat
sub
neg
and
pop
cmp
jp
dec
mov
mov
dec
mov
sub
retf
xor
xchg
sub
aam
sar
xor
fistp
call
or
jnp
ret
aad
nop
sub
sar
in
mov
addr16
ret
adc
loopne
mov
push
das
popa
and
and
and
inc
clc
ds
jmp
mov
xor
fwait
jp
push
sbb
and
ret
sar
cmp
inc
xchg
scas
inc
jbe
int3
ror
adc
add
xor
fist
jbe
rcr
xchg
jmp
cmp
xchg
push
or
fnstcw
popa
mov
pop
sbb
popa
mov
sub
xor
and
loope
push
cld
pushf
aam
fist
adc
and
or
stc
repz
or
clc
sbb
lods
cmp
fwait
mov
sti
jae
jecxz
rol
movs
or
and
pusha
ror
and
in
sbb
push
sub
sbb
adc
pop
dec
xlat
std
stos
inc
jle
xlat
test
xor
aaa
ss
pop
xchg
mov
push
cmp
out
sbb
pop
add
jno
ss
fdivr
mov
sbb
push
bnd
push
sbb
in
xchg
std
jle
adc
pushf
inc
cmps
mov
cmp
cmps
in
inc
inc
mov
bound
je
mov
sbb
dec
inc
xchg
xchg
cmps
cmps
cmc
mov
clc
mov
inc
in
inc
leave
mov
jmp
fcomp
mov
and
pop
retf
inc
or
shr
pop
fwait
bound
punpckhwd
bnd
iret
outs
rcl
mov
and
in
jge
cmps
movs
shl
jl
aad
leave
cdq
and
(bad)
add
add
cli
push
jge
xchg
ds
xchg
push
inc
cwde
push
leave
seto
fisttp
pop
adc
ret
cli
ins
sbb
xor
aas
mov
pop
and
in
cmc
shl
je
nop
lea
or
mov
fimul
fdivp
dec
xchg
xor
neg
and
pop
add
add
nop
and
lock
dec
mov
cmp
push
pop
add
pusha
cdq
sbb
adc
xor
retf
iret
inc
sub
push
movs
shl
mov
xchg
inc
push
mov
sti
shl
aam
mov
(bad)
and
xor
outs
mov
in
pop
in
aas
jns
in
xor
sar
out
jmp
inc
into
scas
outs
cmp
xor
aad
daa
outs
jne
xor
in
ror
test
leave
clc
cmp
push
fs
xchg
fsub
sub
cdq
mov
lods
inc
xor
(bad)
sbb
das
test
jnp
fidiv
jno
cmp
in
inc
xor
sub
aam
mov
jg
sahf
mov
fimul
je
and
(bad)
and
xchg
jmp
sbb
ret
mov
pop
cs
mov
jne
fcmove
scas
adc
jb
sti
out
push
dec
inc
out
addr16
add
pop
idiv
or
inc
sbb
pop
out
xor
int
dec
test
in
ss
xchg
adc
sahf
(bad)
retf
jle
jo
xchg
and
(bad)
dec
pop
ror
mov
fs
sub
jge
lods
loope
add
test
out
sbb
in
retf
jg
push
pushf
(bad)
pop
gs
dec
les
jmp
dec
push
xor
sbb
loopne
push
mov
aaa
and
jp
sbb
shl
ins
fs
push
shl
aad
and
and
mov
je
jns
pop
sbb
push
push
sbb
push
call
fnstsw
mov
push
outs
lahf
shr
pop
cmp
sbb
fidivr
sub
fidiv
jns
lods
mov
ss
movs
add
xor
push
dec
push
sbb
jb
pop
cmp
sbb
clc
jmp
lock
lock
add
aad
pop
jge
sub
xlat
scas
and
jle
pop
es
dec
dec
ins
jnp
xchg
mov
dec
stos
add
or
fbld
mov
fs
std
sti
call
jecxz
ror
neg
test
dec
sub
shl
mov
mov
movs
sub
pop
daa
inc
pop
inc
jecxz
rol
fs
into
shl
dec
pop
mov
mov
push
sbb
inc
fwait
movs
lods
fisttp
xchg
and
scas
mov
(bad)
jmp
and
pop
mov
sar
jno
fcmovnb
ficomp
aas
add
or
dec
les
aad
shl
sub
cmp
pusha
xchg
cmp
xor
push
sbb
add
pop
inc
dec
(bad)
scas
rol
mov
mov
call
mov
xor
mov
xchg
ret
jge
inc
pop
nop
add
gs
mov
(bad)
inc
pusha
add
or
test
and
jmp
movs
mov
icebp
mov
leave
xchg
jecxz
dec
test
jns
pusha
shr
mov
cmps
imul
pop
push
je
mov
xor
pop
aad
mov
sbb
and
retf
push
daa
sti
fiadd
in
or
movs
xlat
data16
inc
mov
out
ret
jecxz
call
ins
cmp
jle
or
addr16
dec
add
sbb
xchg
mov
ror
mov
mov
or
ins
mov
ins
pop
std
jnp
pop
out
fild
xor
adc
retf
fdivr
xor
scas
dec
sbb
cmps
loope
mov
push
push
fistp
test
outs
in
jns
retf
popf
outs
icebp
sub
jnp
pop
jp
movs
fnsave
and
adc
inc
sbb
mov
adc
fnstsw
pop
sub
or
call
outs
rcr
sahf
or
cs
test
sub
pop
push
sbb
sbb
gs
xor
pop
fistp
sbb
test
enter
or
es
jmp
aam
jo
retf
int3
cld
push
jecxz
jb
mov
lds
mov
scas
(bad)
mov
stos
push
or
test
fistp
imul
cwde
adc
popa
into
fsubr
pop
daa
(bad)
sub
ficomp
shr
int
push
rcr
shl
adc
loop
lods
adc
add
in
fmul
xchg
jb
jmp
xor
fild
mov
rcr
les
xchg
inc
sub
rol
sbb
xor
cmp
inc
adc
xchg
icebp
aaa
inc
jnp
outs
xchg
and
sbb
jp
mov
add
xchg
or
(bad)
xor
pop
add
rol
inc
dec
push
or
cs
cmps
add
adc
sbb
test
pop
pop
adc
inc
jecxz
add
mov
pushf
dec
xchg
es
sbb
in
adc
fdivrp
adc
sub
clc
pusha
or
push
dec
pop
dec
and
sbb
iret
pop
in
and
pop
and
jbe
popf
jmp
fild
push
xor
inc
nop
sub
(bad)
lahf
das
pop
(bad)
stos
fadd
add
xchg
ret
push
sahf
call
out
sbb
retf
stos
mov
imul
sub
jp
in
mov
pop
sbb
dec
jl
or
jle
cmc
mov
fwait
leave
add
mov
pop
mov
imul
push
outs
sbb
cmp
add
dec
push
and
(bad)
sbb
jecxz
push
dec
in
cmp
rcl
ins
and
and
mov
cld
ror
sti
ss
jmp
mov
ss
jle
push
into
test
add
lods
outs
pusha
mov
fstp
stos
movs
fld
pop
sar
mov
add
and
lods
cmps
add
pusha
rcl
mov
ror
xor
sub
(bad)
pop
mov
or
fild
pop
or
ss
mov
xor
fisttp
pusha
stc
ror
mov
mov
and
movs
je
lods
nop
cmp
mov
inc
repnz
out
sti
aam
mov
(bad)
add
push
shr
imul
inc
push
mov
jl
pop
or
or
shl
sbb
or
dec
ins
mov
mov
push
pop
xor
add
fmulp
cdq
xor
cmp
aam
sub
jbe
sbb
stos
daa
sub
push
out
mov
cmp
ja
jmp
dec
fwait
xor
pop
cwde
xor
dec
mov
and
(bad)
push
mov
xchg
sbb
or
cmp
lds
fchs
daa
std
mov
pop
cmps
fidivr
push
ret
xchg
dec
icebp
or
pop
pop
ins
add
and
jmp
cwde
cdq
jns
cmc
ror
imul
js
jmp
mov
fiadd
add
in
aad
jne
mov
stos
xchg
mul
cmp
mov
jb
aad
iret
jge
sahf
inc
arpl
xor
inc
fstp
mov
call
push
jno
fld
out
pop
add
jb
stos
sbb
(bad)
pop
add
stos
loopne
mov
aam
repnz
inc
shr
jbe
and
arpl
call
out
test
lds
xchg
rcl
ficom
ss
clc
sub
(bad)
in
mov
movs
pop
fld
ret
fcomi
or
icebp
fcomi
xchg
loop
xchg
mov
(bad)
fcomi
les
or
add
pop
cli
inc
call
rcr
cld
lods
pop
shl
pop
mov
and
nop
and
repz
jns
int
adc
cmp
xchg
sbb
fisttp
out
mov
stos
das
jecxz
imul
mov
mov
add
pop
adc
(bad)
daa
pop
scas
inc
imul
inc
dec
les
fstp
fistp
jmp
and
adc
(bad)
movs
shl
dec
retf
lock
inc
dec
bnd
jecxz
adc
fstp
retf
ret
and
add
(bad)
aaa
push
inc
bound
mov
ja
pop
sub
fld
jo
hlt
push
jl
retf
xchg
bound
stos
fninit
lods
mov
xchg
fld
cmp
fisttp
and
xchg
cmc
cli
mov
movs
dec
jne
std
adc
ja
adc
dec
mov
(bad)
lea
push
loopne
scas
ja
mov
adc
adc
add
test
(bad)
or
push
jecxz
outs
mov
es
sbb
jmp
jecxz
mov
ss
jae
xor
mov
neg
mov
dec
mov
stos
or
adc
dec
xchg
int3
mov
push
sbb
mov
mov
jae
daa
cmp
lock
xchg
mov
mov
movs
call
jge
push
and
fldenv
cs
fild
mov
cmp
xchg
shl
les
push
mov
addr16
cmp
mov
mov
(bad)
mov
loop
dec
retf
jae
xchg
xchg
dec
or
sbb
je
mov
fcmovnbe
ins
dec
call
loop
pop
data16
jg
int3
mov
aas
adc
or
fwait
cld
mov
jge
cli
cmp
rcr
(bad)
mov
adc
sbb
repz
mov
fbstp
fist
daa
jno
push
cmp
and
test
sbb
adc
add
or
dec
xor
jb
jg
jmp
pop
cdq
fcmovu
mov
outs
das
imul
pop
aas
pop
lods
and
aam
test
outs
ror
push
fistp
movs
stos
sub
or
inc
jmp
and
ss
xor
(bad)
mov
or
xor
jp
push
mov
xchg
mov
sub
aam
lahf
je
mov
enter
fst
sbb
cdq
mov
fxch
mov
arpl
hlt
cmp
sbb
gs
clc
fadd
mov
adc
dec
in
dec
add
add
mov
cmps
shr
dec
hlt
xor
fiadd
bound
out
mov
fist
sbb
imul
add
stc
imul
sub
mov
div
fld
jno
(bad)
loopne
cmps
popf
jg
cmps
lahf
movs
push
push
mov
scas
fistp
mov
in
fld
enter
push
les
xchg
(bad)
ret
cli
cmp
mov
loopne
pop
sub
cmp
xor
jge
pop
adc
dec
daa
jmp
inc
aad
xchg
loop
icebp
mov
pop
fistp
pop
ds
jecxz
inc
xchg
imul
ficom
outs
push
fld
div
sub
cmp
(bad)
xchg
xor
icebp
jns
iret
push
fild
mov
int
loop
movs
adc
call
ds
scas
push
push
xor
pushf
cmps
aam
and
loop
pop
or
inc
add
mov
adc
cmp
in
fld
pop
xor
sbb
fidiv
lea
mov
(bad)
fist
inc
bound
adc
pop
dec
add
stos
pop
and
scas
jmp
and
cmp
idiv
int
rcl
cmc
cmp
ja
sub
xor
fild
adc
dec
cli
mov
retf
mov
js
mov
int3
dec
fld
sbb
inc
jb
jae
fstp
pop
mov
movs
xchg
cld
add
cs
pop
xlat
add
into
in
or
and
jno
sub
sbb
fdiv
fld
or
fs
sub
jl
cli
test
fild
add
hlt
sub
fst
ss
dec
ret
jbe
mov
(bad)
iret
addr16
jno
pop
das
fild
fadd
xor
mov
test
pop
or
arpl
mov
cmp
sbb
add
movs
aam
fucomip
(bad)
pop
jo
add
adc
cld
add
ss
ffree
jg
jbe
stos
fisttp
adc
data16
in
aam
dec
push
fild
imul
fsubr
es
fucomp
push
nop
enter
retf
or
xchg
hlt
int
jl
lods
jmp
push
sbb
gs
jp
adc
mov
cmp
fidivr
cmp
fild
cmp
cli
lods
or
and
fucomip
pop
pop
inc
bound
dec
test
sbb
push
push
mov
adc
or
repz
jbe
(bad)
fwait
sbb
arpl
pop
jne
adc
test
jae
and
stc
mov
fs
outs
dec
in
add
cdq
inc
push
fisttp
mov
push
fcmovnu
stos
jmp
(bad)
fist
lahf
jnp
dec
arpl
pop
stos
ja
mov
call
imul
inc
(bad)
jle
xchg
enter
mov
and
and
dec
je
push
jns
hlt
(bad)
jb
add
fcmovne
(bad)
sbb
arpl
and
fcmovne
(bad)
cmp
push
retf
add
fld
sub
(bad)
adc
and
mov
xchg
adc
pop
sbb
loopne
sar
ret
js
ss
arpl
scas
push
sbb
dec
lods
xor
mov
inc
fist
sahf
mov
test
pop
call
retf
inc
fbstp
xor
aad
call
ret
or
or
mov
and
mov
inc
pushf
shl
and
popf
mov
or
add
(bad)
cdq
sbb
fcmovnb
mov
(bad)
fistp
(bad)
jne
mov
fisttp
cmp
les
es
push
push
or
jnp
inc
stc
(bad)
addr16
fld
jp
sbb
dec
loop
ds
mov
retf
mov
or
ds
pop
pop
call
push
fs
imul
pusha
cmp
fisubr
in
sti
jl
mov
fld
jmp
sahf
sub
imul
inc
dec
bound
and
ins
rcr
call
sbb
nop
leavew
int3
frstor
mov
and
xchg
pop
inc
jge
fild
pop
jmp
fisttp
inc
fmul
jmp
(bad)
jne
sbb
sbb
and
xchg
aam
add
xor
jl
mov
mul
push
jmp
repz
gs
fistp
call
sbb
mov
push
jmp
sub
ror
xchg
jbe
(bad)
mul
ret
popf
xchg
push
imul
pop
icebp
into
add
test
push
mov
fldenv
popa
cwde
xor
cs
and
(bad)
adc
or
fistp
frstor
push
fwait
add
retf
mov
push
inc
and
jnp
and
xchg
xchg
adc
fadd
xchg
(bad)
(bad)
rcr
xchg
and
out
dec
push
add
mov
pop
add
mov
test
aad
outs
fisttp
repz
mov
jne
and
mov
fild
outs
or
fistp
xor
jmp
jae
sub
pusha
jne
jne
pop
out
pop
adc
in
test
mov
pop
xor
pop
xlat
xlat
add
stos
dec
je
mov
dec
nop
ins
popf
stc
push
leave
bnd
(bad)
pop
mov
arpl
fstp
and
sbb
mov
inc
xchg
(bad)
mov
fimul
stos
add
mov
and
mov
add
stc
sbb
sub
into
sti
pop
jo
push
inc
xor
jle
fidivr
and
jbe
ss
out
xchg
or
sar
into
pop
leave
xchg
jb
xor
inc
mov
imul
adc
out
adc
hlt
inc
iret
push
mov
sub
mov
in
mov
xor
jbe
xor
cld
xor
mov
pop
cmp
add
sti
jmp
dec
xor
sub
ds
add
test
nop
mov
sbb
jp
dec
sub
xchg
add
mov
or
pop
out
imul
jno
sbb
inc
mov
adc
fwait
out
(bad)
cmps
sub
jmp
shl
ret
pop
jmp
clc
lods
xor
and
cs
cli
mov
fdivr
xchg
call
inc
xchg
je
retf
mov
aaa
and
sar
jle
mov
xor
cwde
data16
cmp
cs
pushf
jbe
in
in
jbe
stc
not
mov
adc
pop
and
jl
(bad)
jge
pop
ret
cmp
imul
xchg
(bad)
adc
ret
shl
std
in
push
inc
add
cli
mov
and
cmp
xor
pop
daa
and
and
rcl
(bad)
sbb
xor
mov
test
lods
test
enter
stos
stc
jecxz
out
dec
push
das
and
mov
add
adc
loop
das
cld
mov
cs
jp
fimul
in
mov
fs
add
and
retf
add
mov
jp
pop
icebp
mov
aam
jecxz
ret
push
sbb
(bad)
stos
sub
das
stos
cwde
fwait
pop
(bad)
pop
sbb
es
lods
sbb
add
mov
enter
(bad)
jmp
dec
cmp
adc
bound
jmp
lea
sub
inc
out
aad
retf
adc
out
or
es
cwde
push
loopne
push
imul
outs
in
and
ror
jnp
xor
mov
scas
pop
mov
mov
or
cmps
mov
lahf
popf
hlt
xor
pusha
outs
ret
and
xchg
das
mov
push
fiadd
mov
ror
shl
fadd
je
fsincos
sbb
std
test
xor
adc
rol
xor
or
cmp
pop
cdq
or
ds
or
hlt
jp
and
sbb
xchg
cwde
sbb
push
scas
adc
ret
sbb
mul
outs
rcl
ror
add
adc
retf
push
and
ins
stc
and
dec
stc
inc
and
xor
cwde
mov
cs
ds
addr16
adc
(bad)
jecxz
jb
ret
xchg
xchg
(bad)
cli
mov
aad
sub
and
pop
sub
ret
sbb
(bad)
mov
push
sti
jbe
cmp
call
mov
cmp
cwde
xchg
cdq
(bad)
and
scas
jmp
sub
mov
sysexit
data16
xor
mov
mov
aad
sub
cli
addr16
int
dec
mov
jb
sbb
dec
adc
mov
pop
inc
pop
xchg
dec
mov
nop
bound
sbb
sub
xchg
sub
fistp
sahf
jmp
dec
push
cmps
pop
test
loop
xchg
sbb
push
mov
cdq
mov
sub
or
push
xchg
adc
inc
cmp
pop
rcl
push
(bad)
rcr
dec
ss
repnz
cmc
xor
push
ins
lahf
data16
in
dec
out
sbb
add
push
stc
inc
sti
(bad)
cli
call
cmp
push
sbb
inc
aad
and
xor
add
lea
and
nop
push
jnp
push
sbb
pushf
and
ss
pusha
push
push
add
and
mov
pop
and
retf
out
js
fcom
mov
popa
retf
push
ret
lods
jl
add
rol
(bad)
mov
data16
ins
dec
jno
ins
movs
mov
add
sub
loop
(bad)
pushf
add
sub
xchg
cmp
rcl
xchg
jae
cmps
fdivr
sbb
mov
xchg
enter
xor
sar
lods
fadd
out
(bad)
call
aas
push
xor
and
cmps
scas
jecxz
push
xor
ret
inc
xchg
mov
fmul
scas
pop
test
cmp
sbb
icebp
adc
daa
inc
push
stc
mov
sub
test
into
mov
gs
dec
xor
mov
mov
mov
pop
repz
aaa
and
vmovlps
and
inc
pop
dec
mov
mov
mov
mov
push
xchg
stc
je
iret
out
fs
jge
ins
outs
(bad)
add
cmp
call
ds
cmps
push
cmp
jl
fstp
and
sahf
mov
test
or
xchg
fwait
and
jbe
xchg
and
xchg
pop
aas
ins
out
outs
ss
repnz
jmp
xor
jbe
cmc
add
push
sub
pop
lods
fnstsw
inc
xchg
in
pop
sub
into
mov
add
ror
jecxz
cmp
cmc
xchg
outs
jns
push
sti
xchg
imul
sbb
pop
sbb
cmp
mov
icebp
xchg
in
or
ds
mov
loop
push
push
jg
lock
aad
imul
xor
xor
sub
out
and
(bad)
pop
xchg
jae
sbb
test
sbb
stc
shl
out
xor
(bad)
out
clc
adc
and
fdiv
ins
mov
std
sbb
ins
xlat
and
cwde
jno
mov
imul
ror
cmp
shr
mov
jge
add
iret
shr
das
jp
fucomi
jnp
and
stc
sti
rol
popf
data16
shl
adc
mov
push
ins
xchg
mov
sbb
lods
test
inc
inc
in
popf
rol
out
aaa
sbb
std
mov
jno
rcr
sbb
jl
ds
repz
cmp
std
cmp
bound
inc
vaddsd
mov
xor
add
clc
adc
pop
call
pop
dec
lock
pushf
aas
push
lods
cmp
es
retf
neg
cmps
(bad)
jbe
dec
test
fstp
xchg
fsub
push
adc
in
shr
rol
mov
stos
push
cmp
dec
fld
ins
and
fist
adc
shl
popf
les
pop
jle
test
add
push
pop
mov
outs
(bad)
rcl
fcmovbe
pop
call
in
jmp
bound
gs
not
inc
aaa
stc
push
(bad)
push
xor
retf
in
jg
mov
xchg
test
lock
inc
fistp
imul
and
jecxz
out
int3
out
mov
or
rcr
pop
in
xchg
jg
fcmovnbe
iret
pop
loop
loopne
mov
cmc
shr
stos
nop
iret
(bad)
dec
mov
inc
pop
sub
dec
retf
pop
jo
addr16
fnstenv
jl
push
bound
imul
retf
ja
push
mov
cmp
lods
xor
cmp
inc
adc
or
xchg
adc
mov
es
add
fsubp
sbb
mov
scas
and
pop
lods
adc
fld
xchg
call
ss
addr16
dec
inc
(bad)
dec
and
or
dec
shl
push
jecxz
mov
cs
outs
cld
out
stc
sub
clc
int
inc
in
fist
lds
mov
fld
xchg
into
push
adc
sbb
aad
sub
mov
jg
jge
inc
sub
in
fst
xor
push
add
fistp
lods
mov
dec
fisttp
mov
mov
adc
push
xchg
add
aam
mov
pop
mov
xlat
mov
mov
ins
arpl
bound
mov
and
fisubr
jo
out
sar
pop
sbb
(bad)
jle
cmp
in
xor
push
and
mov
push
jge
mov
cmp
mov
aaa
std
inc
xor
(bad)
in
push
mov
mov
and
dec
pop
int3
je
xchg
test
imul
nop
ret
pop
inc
in
sahf
std
and
fcmovne
mov
adc
fninit
repnz
inc
cmp
mov
cdq
pop
add
push
aaa
rcr
or
aam
pop
ret
mov
push
adc
xor
pop
ss
in
sub
push
dec
(bad)
adc
mov
mov
je
rcl
sub
lock
cdq
pop
push
outs
push
lods
xchg
(bad)
movs
cmp
adc
cli
fist
push
fldcw
jmp
fistp
mov
loope
mov
fild
jbe
inc
and
aam
and
xchg
shl
sar
sahf
or
fwait
jnp
adc
or
dec
push
(bad)
inc
cs
dec
test
ins
(bad)
sub
ficomp
ret
std
dec
js
fbstp
inc
cmp
dec
icebp
cdq
cld
dec
push
push
cmc
mov
mov
xor
mov
and
pop
push
ret
(bad)
js
xchg
pop
daa
int
not
pop
mov
jb
test
jmp
mov
xchg
sub
add
fmul
sbb
xor
(bad)
or
cs
cmp
xor
cmp
test
(bad)
gs
mov
cmp
or
stos
inc
fcmovne
imul
pop
rol
cdq
cmps
(bad)
sbb
mov
sbb
xchg
pop
test
imul
mov
add
(bad)
outs
(bad)
jecxz
push
(bad)
mov
or
jmp
xor
stos
push
sbb
ficomp
in
cmp
js
xor
dec
movs
ins
adc
push
xor
or
add
je
sub
and
sti
dec
or
(bad)
fnstsw
pop
pop
out
sbb
or
shl
sbb
mov
mov
(bad)
cmp
push
popf
ficomp
and
jb
xor
(bad)
fcom
retf
aaa
das
push
int3
pushf
xor
cmc
aam
jae
out
mov
xchg
ret
and
shl
mov
ds
mov
mov
sub
ficom
jge
mov
nop
jle
loop
mov
sbb
adc
sbb
and
jmp
shl
pop
jne
cmp
add
repnz
push
ja
ins
cwde
xor
and
ret
movs
xchg
sbb
adc
(bad)
mov
sar
mov
cdq
xor
sbb
inc
inc
outs
xchg
push
mov
xchg
add
and
xchg
sar
call
add
push
rcr
push
inc
jo
retf
mov
mov
test
inc
lods
xor
addr16
rcr
sti
cdq
cmps
jae
test
sahf
loopne
push
retf
and
inc
sar
call
xor
jp
stos
or
jecxz
pop
ja
xor
sub
shld
in
cmp
add
add
(bad)
cmp
sub
outs
jno
nop
mov
jns
ins
add
(bad)
(bad)
ja
pop
pop
pop
hlt
push
lock
sbb
(bad)
popf
icebp
push
mov
and
fdivp
xor
(bad)
shr
pop
and
fisubr
sub
sbb
leavew
sub
cld
sbb
and
rcr
and
sbb
dec
or
call
push
call
lods
pop
int
push
ds
xor
call
xchg
mov
data16
push
sbb
jmp
ss
popf
movs
ins
sub
test
pop
dec
pop
xlat
stc
sub
xor
push
fcomp
leave
dec
test
dec
sar
in
ins
jae
or
sbb
aaa
add
or
pop
sub
daa
imul
mov
pop
test
push
pop
jmp
pushf
xchg
sti
sub
mov
jnp
movs
sbb
inc
mov
in
fldcw
hlt
es
(bad)
out
pop
cmp
(bad)
or
movs
and
popf
adc
mov
sub
out
pop
jl
mov
mov
pop
sub
pop
into
arpl
push
in
hlt
add
mov
inc
sub
push
adc
and
fdivr
leave
mov
push
lahf
inc
rcr
push
pop
(bad)
fistp
mov
jge
aaa
inc
movs
icebp
mov
xor
dec
pop
dec
cld
cmp
push
(bad)
fsubrp
sub
pop
inc
fsub
jp
dec
dec
pop
and
in
sbb
xor
pusha
fcom
push
popf
icebp
fs
int3
push
out
ror
cmps
inc
mov
data16
mov
add
inc
ss
cmp
mov
arpl
mov
cwde
loope
mov
push
mov
fwait
pop
stc
jo
adc
pop
dec
and
mov
pop
jmp
pop
test
xchg
test
xchg
fidivr
sbb
loop
fwait
outs
stc
sti
pop
pop
scas
scas
into
out
in
mov
fisub
pop
aas
mov
inc
and
ins
aaa
cmp
lds
sub
mov
jmp
imul
(bad)
rdpmc
ficom
sub
mov
test
sub
movs
pusha
mov
cmp
and
push
fstp
faddp
or
push
mov
inc
adc
push
jbe
pop
dec
loope
cmp
xchg
out
sbb
rcr
fwait
xchg
add
mov
aam
enter
je
sbb
dec
push
fisttp
test
dec
xor
or
xor
ds
cli
pop
jne
push
in
mov
fcom
ins
sbb
dec
fisttp
jge
jno
xor
dec
scas
xchg
imul
js
push
imul
cmp
clc
call
out
icebp
ror
push
xor
and
retf
and
add
je
scas
lahf
stos
cmp
push
push
cdq
adc
popf
jns
xor
(bad)
movs
jmp
xchg
sbb
push
add
add
out
mov
cmp
xabort
fst
xchg
inc
mov
xor
or
push
xchg
sbb
sub
push
ror
inc
adc
addr16
pop
pop
add
mov
daa
(bad)
sub
and
sbb
aaa
fbstp
pop
inc
inc
arpl
cmp
add
test
add
ja
stc
sub
or
pop
mov
push
xchg
mov
loope
aad
jge
nop
sbb
pop
stc
mov
adc
sub
sub
sar
cmp
(bad)
mov
rcr
xchg
shl
dec
or
xor
(bad)
dec
pop
or
and
mov
int3
out
sub
mov
xchg
pop
out
inc
xor
pop
and
call
inc
leave
ja
sbb
ins
jns
pop
fild
retf
xlat
mov
and
repnz
dec
leave
in
or
cmp
rcr
pop
xchg
pop
inc
fnstcw
or
sbb
inc
jbe
repz
sahf
in
add
push
xchg
pop
out
inc
icebp
xchg
push
jbe
addr16
and
add
ficomp
and
retf
ins
sub
cmps
or
mov
outs
sub
add
ins
and
mov
cdq
inc
pop
test
arpl
neg
sbb
(bad)
xchg
mov
push
push
xchg
daa
add
jb
and
scas
ficom
pop
sub
pop
out
or
into
std
ficomp
sbb
mov
test
retf
cmp
fdivr
pop
push
or
pop
scas
sub
mov
push
in
push
js
outs
cmp
inc
cmp
inc
push
out
sbb
dec
fisub
fisttp
into
leave
cld
lahf
ins
gs
fmul
data16
rcr
xchg
pop
shr
mov
jp
ins
std
test
in
jo
outs
dec
sbb
ror
out
pushf
mov
pop
xor
adc
sub
es
jno
ds
mov
pop
push
inc
pop
jl
jecxz
cdq
add
jns
jns
mov
xor
and
(bad)
into
scas
std
jmp
xlat
pusha
callw
mov
cmc
and
jp
pop
addr16
cmp
nop
retf
sti
cmp
jecxz
mov
adc
push
sub
call
cld
sbb
mov
je
gs
sub
stos
sbb
arpl
scas
sbb
pop
add
jbe
dec
stos
ret
movs
mov
mov
jns
dec
aas
adc
ret
dec
adc
inc
pop
pop
xor
out
scas
mov
or
push
mov
cs
fisttp
and
je
mov
jno
cmc
fwait
sti
and
xchg
xchg
aas
fcomp
sub
and
call
or
test
mov
or
neg
rol
and
adc
scas
ffreep
imul
pop
sbb
mov
and
pop
cmp
lahf
enter
out
xchg
fs
adc
retf
iret
cmp
and
inc
jle
iret
pop
pop
movs
ror
and
ret
mov
int
add
popa
outs
idiv
sbb
mov
aaa
retf
ja
add
or
fild
mov
jns
sbb
cwde
rcl
ret
xor
not
mov
adc
mov
sti
into
sub
sbb
sub
jge
cmp
dec
push
daa
fistp
and
and
jecxz
push
or
xor
popf
push
jno
and
(bad)
or
mov
mov
and
jge
mov
sar
dec
jmp
push
mov
ret
cmp
leave
cmp
hlt
dec
aaa
push
arpl
inc
imul
mov
adc
dec
jno
jg
icebp
add
sbb
and
mov
in
push
sar
jae
and
es
(bad)
das
pop
loopne
and
mov
outs
test
mov
outs
dec
xor
adc
fisttp
pop
nop
xor
xchg
ret
add
dec
neg
mov
loop
fucom
mov
aaa
mov
sahf
nop
(bad)
ds
into
pop
and
jo
ss
(bad)
sbb
xchg
mov
scas
rcl
inc
cwde
mov
inc
push
lds
cs
ss
mov
loope
pop
mov
jmp
rcr
and
mov
outs
std
pop
sub
pop
movs
in
jp
clc
sbb
aad
and
adc
ds
and
outs
or
ss
cld
xchg
and
inc
iret
dec
stc
nop
sub
rcl
in
sbb
dec
push
fldl2e
mov
pop
sub
cmps
add
aam
xor
repnz
dec
dec
jge
push
mov
sub
mov
dec
sahf
ret
mov
inc
mov
int3
inc
into
xor
and
mov
pusha
shl
ins
mov
mov
cdq
icebp
fcmovu
vsubsd
xor
mov
and
mov
jae
call
inc
adc
sub
mov
not
pop
lds
es
xchg
outs
jb
pop
(bad)
jmp
ret
out
xchg
cli
add
push
ins
pop
(bad)
in
ret
adc
xor
mov
sbb
mov
ret
out
sub
xor
iret
ret
outs
push
sti
pop
sahf
adc
and
inc
js
push
dec
jge
(bad)
xchg
(bad)
out
fwait
sub
push
call
cmp
cmp
adc
ret
fdivrp
cmc
sbb
cld
mov
daa
(bad)
xlat
cs
(bad)
dec
pop
mov
rcl
lahf
mov
mov
push
retf
pop
fistp
and
or
mov
push
cmps
sbb
lahf
push
(bad)
cmp
dec
pop
imul
pop
cwde
cmps
out
lods
mov
and
sbb
sub
add
sbb
scas
rcr
cmc
push
stc
cs
jmp
adc
shr
mov
aas
fild
mov
ins
mov
into
addr16
repnz
fcomp
in
and
add
xor
pop
jns
adc
or
lods
jl
xchg
push
mov
loope
jae
add
lds
and
add
jb
test
clc
sub
cld
je
dec
push
fsub
retf
jg
pop
arpl
dec
ss
in
aas
pop
push
loopne
in
inc
sub
ret
dec
push
mov
ins
rcr
loop
add
cli
pushf
mov
ja
retf
jp
jmp
pop
pop
or
mov
in
jmp
mov
sbb
pop
adc
xor
jecxz
int
das
cmp
out
sbb
test
jmp
and
mov
repz
add
sti
pop
mov
xor
out
sbb
jne
retf
xchg
stc
add
jle
ds
adc
je
xor
fdiv
stc
cmp
and
fs
cwde
das
test
ror
add
add
jmp
jnp
popa
cmp
dec
test
and
jg
sub
mov
mov
sti
mov
sbb
mov
xor
es
pusha
mov
(bad)
xor
add
mov
(bad)
aas
mov
(bad)
fstp
in
dec
xchg
mov
movs
and
loope
into
cmps
les
jmp
sar
jg
shl
repnz
xchg
or
out
out
les
jns
cmp
lods
sti
cmp
or
xchg
movs
jmp
nop
pop
das
mov
rcr
xchg
call
stos
mov
adc
gs
jmp
inc
aam
sbb
fsubr
(bad)
je
dec
cwde
popf
push
mul
inc
jno
sub
xchg
mwaitx
pop
sbb
mov
sbb
xchg
dec
call
mov
loope
jl
cmp
aaa
jmp
out
xor
jge
sbb
and
xchg
std
pusha
and
push
jmp
mov
add
sub
pop
dec
sub
sub
pop
sbb
mov
jb
(bad)
jbe
add
out
cmps
mov
cmp
pop
leave
fwait
and
inc
mov
cmp
push
fwait
out
adc
sub
call
cmps
xor
inc
jge
cmp
push
cs
jmp
mov
xor
jmp
jnp
into
gs
test
out
sbb
push
stc
xor
imul
mov
lods
js
cmc
adc
jb
in
dec
push
inc
xor
sbb
mov
sbb
cs
stc
xor
adc
fidiv
and
sbb
or
mov
mov
sbb
(bad)
sbb
rcr
sub
xchg
and
int
fsubrp
gs
jg
jmp
sbb
sbb
xchg
nop
jmp
xchg
ror
in
imul
nop
int
(bad)
pop
jecxz
stos
sub
xchg
retf
push
sbb
iret
inc
inc
test
fisubr
into
repz
pop
jb
jnp
mov
idiv
retf
or
(bad)
cli
jne
and
mov
mov
mov
rcr
ror
mov
xchg
mov
stos
inc
je
jno
push
cmp
cmc
fcom
xchg
mov
ins
inc
jo
and
jmp
fst
pop
int3
sub
rcl
stos
adc
xchg
sbb
ficom
ins
cmp
push
ss
pop
inc
mov
cmp
jae
push
out
xchg
add
xchg
cmps
clc
in
repnz
or
mov
fs
and
or
and
scas
sbb
hlt
sbb
stos
mov
pop
ds
in
out
sti
cmc
sbb
mov
out
pop
leave
(bad)
pop
dec
add
pop
inc
sar
ja
retf
(bad)
mov
fldln2
bnd
add
sti
adc
add
sbb
retf
inc
bound
xor
(bad)
sub
popf
adc
out
scas
test
jno
(bad)
jg
and
test
inc
inc
bound
mov
ins
movs
leave
cld
and
iret
sahf
daa
push
pop
push
hlt
into
je
(bad)
shl
fstp
jo
xor
sub
sub
add
xor
add
pusha
leave
je
out
mov
pop
jmp
pop
mov
pop
neg
enter
lods
dec
mov
or
hlt
(bad)
int
(bad)
and
mov
inc
aaa
retf
cmp
push
fisubr
pushf
fld
xchg
adc
sbb
and
add
sbb
and
pop
mov
std
(bad)
sub
(bad)
mov
xor
xlat
pop
and
xor
iret
push
(bad)
adc
out
imul
dec
dec
or
xchg
imul
popf
mov
jg
xchg
xor
adc
mov
jo
iret
inc
pop
mov
imul
scas
pop
call
pusha
fidiv
pop
sub
xor
and
hlt
push
xchg
popa
lahf
pop
fidiv
in
xor
and
int3
push
cld
in
arpl
das
sbb
sar
or
fidivr
push
sbb
mov
sbb
daa
test
sub
inc
and
mov
(bad)
or
(bad)
sbb
dec
gs
pop
nop
aaa
adc
je
inc
dec
addr16
dec
push
and
pop
clc
or
sbb
shl
ins
leave
and
call
jecxz
jle
ret
in
mov
jne
xchg
or
sub
out
cmp
jmp
mov
jmp
ds
xchg
dec
lds
xor
xchg
mov
js
fs
popf
xchg
pushf
inc
iret
es
rcl
xor
(bad)
mov
cmp
add
sub
or
push
sbb
sub
push
xor
mov
cld
adc
int3
adc
sahf
jl
scas
test
mov
inc
js
ds
push
retf
sbb
or
xchg
mov
dec
xchg
cdq
stos
xchg
out
mov
xor
stc
pop
and
dec
xor
lods
retf
call
mov
pop
sub
clc
sbb
fidiv
pop
jmp
je
xor
pop
inc
shr
mov
mov
xchg
push
fidivr
sti
and
loopne
ror
mov
add
inc
mov
sub
mov
dec
js
push
xchg
xchg
stc
shr
fs
dec
jb
ret
mov
inc
adc
xchg
cmps
in
jmp
sahf
and
jp
jbe
jae
adc
xor
pop
je
shr
sbb
or
test
imul
(bad)
xor
inc
jl
bound
add
push
add
in
mov
jmp
mov
mov
jnp
xlat
xchg
xor
retf
sub
test
jp
lods
and
sub
pusha
cmps
inc
xor
shl
mov
and
mov
sar
or
xchg
and
mov
sti
test
mov
hlt
out
push
push
jp
sti
pop
push
cmps
bound
pusha
pop
jl
mov
out
pop
or
movs
jg
jmp
fdivr
shl
repnz
adc
in
pop
pop
out
and
out
sub
aam
push
in
aad
push
mov
pop
lods
int3
cmp
sbb
adc
das
jecxz
iret
ins
inc
test
fdivrp
mov
mov
jns
pop
shr
mov
test
inc
push
(bad)
mov
pop
inc
fstp
sub
call
loope
lahf
push
popf
push
xchg
dec
pusha
loop
mov
jo
pop
sbb
lods
and
call
shl
adc
jb
les
pop
call
sahf
stc
cmc
cmp
fistp
aaa
in
jecxz
pop
adc
jns
or
xchg
rcr
rdmsr
clc
cld
adc
aaa
jmp
addr16
fld
add
lods
loope
jg
inc
adc
ficomp
ret
xchg
stos
xchg
cmps
fld
and
rol
cs
into
cmp
faddp
cmovo
mov
dec
retf
rcl
push
adc
ret
in
fcmovne
imul
xor
pop
fcmovu
and
lds
xchg
mov
inc
repnz
call
push
movs
shl
cmc
pusha
adc
adc
or
mov
dec
adc
push
inc
repz
jae
outs
mov
loop
jecxz
jns
call
movs
pop
jns
xchg
pop
add
jb
add
mov
dec
mov
cmp
cmp
cld
cdq
push
ins
fdivr
cdq
adc
push
mov
jmp
aaa
push
(bad)
jg
xor
cmp
sbb
sbb
ins
sar
neg
(bad)
inc
cmp
scas
ds
ja
pop
sbb
mov
pusha
imul
fwait
sbb
cmp
cmp
add
mov
fisubr
or
pop
sbb
cwde
ss
inc
rcl
mov
(bad)
mov
xchg
rcl
xlat
(bad)
data16
cmp
push
push
dec
sbb
xor
mov
loop
push
inc
gs
xchg
or
cdq
cmp
arpl
sbb
adc
test
adc
retf
jbe
mov
idiv
dec
call
add
cld
inc
mov
jns
dec
inc
add
jle
movs
(bad)
add
std
cmp
cmps
dec
and
mov
xor
jp
imul
ins
jle
xor
mov
mov
cmp
jp
int3
cs
jo
cmp
pop
and
or
and
inc
aad
rol
xchg
push
sbb
jo
sub
lods
push
cli
test
inc
loopne
sbb
and
sub
ins
sub
(bad)
and
fwait
and
or
xchg
aad
mov
or
mov
and
inc
or
jecxz
ficomp
idiv
jbe
not
pop
rcl
push
sbb
sbb
in
ins
daa
sbb
outs
idiv
popf
into
in
mov
outs
sbb
icebp
in
pop
lods
data16
mov
neg
add
pop
je
xor
mov
enter
dec
mov
lods
adc
jmp
mov
push
ins
(bad)
pop
fidivr
pop
inc
(bad)
ins
mov
pop
mov
push
pushf
jle
sbb
sar
les
in
test
and
jns
leave
(bad)
lea
adc
xchg
je
xchg
adc
pop
movs
adc
lods
mov
mov
mov
lds
adc
int
dec
ret
aad
pop
xor
fstp
movs
gs
lods
push
dec
mov
shl
sub
dec
jae
ret
rep
jge
jo
fcom
mov
and
inc
popf
mov
pop
mov
dec
movs
lds
pop
(bad)
(bad)
push
cmc
add
fadd
cwde
lods
dec
dec
aaa
jne
cmps
xchg
adc
clc
fst
inc
jg
(bad)
mov
adc
lods
xchg
mov
in
(bad)
lock
in
int
add
(bad)
fidivr
fcomp
fcomp
sahf
ficomp
jnp
fwait
cmp
ins
outs
es
or
jo
fsub
cli
xchg
movs
lea
xchg
add
mov
lock
movs
add
pop
pop
addr16
cli
inc
sbb
movs
(bad)
xchg
dec
xlat
int
dec
cmp
dec
aad
jo
or
(bad)
fstp
cmc
fs
pop
outs
ins
shl
or
fs
fcomp
lods
and
sub
icebp
mov
mov
or
jmp
in
pop
shl
gs
sbb
clc
rcr
mov
jge
sbb
test
mov
mov
sbb
dec
popf
lock
mov
lods
ins
mov
in
mov
adc
xor
scas
int
cmc
sbb
out
pop
pop
mov
gs
ins
adc
fidivr
test
mov
jns
mov
mov
fild
lods
inc
sbb
nop
int
aad
push
stc
(bad)
pop
pop
test
cli
out
sbb
mov
stos
mov
(bad)
lock
inc
and
jle
(bad)
jp
enter
icebp
cli
xchg
cld
lods
jg
rcl
retf
adc
popa
hlt
cmp
int
aad
and
bound
pop
pop
ds
pusha
pop
test
adc
into
and
push
jne
xor
fstp
test
es
sub
mov
(bad)
movs
popf
imul
dec
mov
fcom
movs
(bad)
push
jp
in
lods
dec
dec
mov
popf
scas
movs
(bad)
cli
xor
mov
jo
fsubr
push
jne
sbb
pop
pop
pop
inc
pop
outs
lea
pop
iret
outs
mov
sub
sub
ss
out
sahf
mov
dec
lea
lods
xchg
jg
pop
movs
mov
sub
scas
ins
lds
mov
cld
pop
push
pop
clc
cli
jns
mov
mov
pop
lea
push
loope
lds
jae
push
pop
fdivp
es
js
fistp
gs
ins
xchg
lods
mov
movs
jge
lods
sbb
jp
(bad)
xchg
sti
popf
loop
dec
movs
imul
fdivr
lods
clc
push
aam
sbb
jmp
jge
ret
sub
inc
movs
pop
leave
mov
adc
jb
test
in
and
bound
mov
daa
popa
jp
mov
or
ins
mov
mov
jo
fdivr
mov
mov
push
push
leave
fist
ins
int
cli
xchg
outs
in
xchg
es
das
popf
pop
cld
ds
pop
aas
jo
sbb
inc
movs
ins
jae
lods
jne
lods
mov
xor
and
pop
cli
outs
shld
mov
pop
push
jnp
fwait
mov
dec
adc
ins
cmc
sti
int
pop
jns
mov
ins
pop
sbb
mov
cmp
js
adc
call
xchg
imul
(bad)
stos
mov
imul
aad
pop
lea
mov
inc
adc
ins
clc
adc
xchg
in
mov
out
test
sbb
lea
xchg
adc
dec
js
jmp
es
push
jge
and
bound
in
repnz
pop
pop
jmp
sub
inc
lods
or
dec
fistp
add
adc
stc
addps
fs
retf
lods
pop
jmp
int
aad
(bad)
(bad)
fstp
addr16
xor
enter
out
cwde
test
or
icebp
out
push
movs
xlat
jo
adc
lock
mov
pop
mov
cwde
cld
neg
int
push
test
std
cmp
pop
sahf
sbb
pop
outs
cmp
add
mov
rcl
push
test
sbb
jb
cmp
pop
in
movs
jg
jmp
aad
mov
stos
je
mov
(bad)
in
jg
test
mov
sti
mov
es
adc
ins
pop
and
mov
bound
mov
cmps
jg
mov
mov
movs
lea
xor
xchg
jecxz
adc
out
fwait
pop
movs
mov
dec
call
adc
mov
jg
pop
pop
sbb
into
repz
icebp
mov
jo
fcom
jne
add
bound
loope
test
jmp
xchg
int
sti
aam
(bad)
adc
mov
pop
test
cmp
sub
idiv
adc
or
jge
movs
mov
fimul
adc
scas
in
jnp
ret
lods
mov
mov
cli
inc
movs
mov
and
fucomip
mov
jmp
dec
adc
(bad)
gs
outs
jns
retf
or
mov
(bad)
mov
rcr
fsub
pop
pop
scas
rcl
cmc
mov
sahf
outs
jg
mov
xchg
mov
in
int
and
inc
mov
fdivr
pop
sahf
gs
fdivr
add
lea
aad
cli
retf
dec
movs
lods
or
jl
out
pop
ins
mov
and
add
jg
sti
pop
cmc
xchg
pop
push
pop
int
jle
adc
inc
mov
leave
in
jge
sbb
daa
shl
movs
xchg
outs
adc
push
adc
pop
stos
jl
sar
mov
mov
mov
(bad)
int
cmp
fcomp
inc
sbb
xchg
sbb
out
adc
int
in
aad
and
xor
pop
pushf
mov
xor
outs
mov
mov
jle
int3
jne
cld
and
jl
dec
jge
test
jbe
or
lea
dec
loopne
xchg
push
popf
pcmpgtd
pop
pop
std
mov
dec
lahf
ins
call
repnz
push
fs
cmp
lods
mov
cmps
add
fdiv
movs
test
(bad)
test
sub
sbb
jmp
aad
push
call
in
pop
xor
xor
addr16
test
jbe
scas
sub
dec
test
xor
cs
add
(bad)
push
jo
call
fsub
push
sar
hlt
movs
ins
jmp
jne
cld
adc
jge
in
test
sbb
sahf
lods
addr16
dec
or
xchg
fisttp
dec
jb
dec
popf
xchg
movs
adc
test
outs
sub
movs
mov
lods
mov
push
(bad)
cli
mov
adc
jmp
ins
and
lds
cmps
cmc
call
stos
pop
daa
lods
dec
cli
adc
mov
mov
into
(bad)
push
int
pop
pushf
aad
cli
mov
cmp
sbb
gs
sbb
sub
mov
sbb
outs
xlat
jg
push
or
aad
mov
std
cs
mov
stos
adc
ins
call
dec
and
js
inc
loop
sbb
mov
mov
enter
nop
jns
mov
ja
ds
mov
pop
fs
stc
or
cli
dec
movs
test
popf
jl
div
jo
call
div
enter
cmp
aad
stc
cmp
cmp
xor
test
mov
mov
jne
movs
jge
lods
fnstenv
cmps
dec
mov
(bad)
popf
sti
cwde
or
(bad)
mov
add
mov
pop
pop
ds
push
pop
xchg
gs
push
and
jmp
jge
loope
xor
imul
stc
cmc
jmp
inc
jo
fcom
loopne
fmul
imul
cli
mov
jno
fstp
sub
mov
imul
pop
inc
mov
mov
jo
clc
out
sub
add
out
pop
or
stc
scas
out
dec
jmp
int
cwde
out
rep
and
inc
dec
xchg
add
movs
lds
mov
mov
jo
pop
and
mov
mov
fdiv
or
fistp
fstp
repz
pop
in
gs
ins
std
push
or
and
jecxz
sti
test
xor
stos
sbb
xchg
adc
popf
sbb
lods
sub
retf
mov
sahf
jno
adc
popf
int
xor
sti
jmp
cli
adc
gs
add
call
add
and
out
xor
movs
xchg
lods
sti
aas
fs
js
mov
mov
add
cmps
test
jnp
jl
movs
mov
mov
pop
add
int
ins
nop
fstp
pop
addr16
mov
mov
sub
in
call
jge
(bad)
(bad)
mov
sti
xchg
xor
popf
push
pop
or
movs
es
mov
lahf
test
lahf
ror
ins
imul
gs
ins
jno
jne
jge
adc
shl
lea
loopne
push
cmp
pop
mov
bound
mov
popf
ja
ins
cld
mov
mov
mov
shl
aas
sub
jae
es
fadd
or
sbb
jge
mov
scas
mov
fdiv
int
cli
push
movs
aad
cmp
ins
data16
call
jne
add
mov
adc
hlt
cwde
mov
add
ins
push
popf
mov
xchg
in
in
loope
fsub
add
jge
out
movs
js
and
lods
jecxz
xor
jle
push
mov
mov
test
add
pushf
sti
nop
test
push
outs
fdiv
jg
stos
push
addr16
es
outs
mov
jg
mov
aad
push
or
sahf
pop
clc
jg
sub
enter
sbb
xchg
mul
pop
dec
movs
xchg
sbb
jge
xlat
(bad)
fsub
arpl
xchg
pop
jecxz
outs
xor
pop
(bad)
dec
mov
ss
js
push
out
outs
jg
mov
sub
scas
xor
call
mov
outs
test
jmp
stc
dec
xchg
pushf
mov
mov
out
mov
cwde
ss
neg
pop
jle
outs
push
mov
mov
call
jmp
cmp
sub
(bad)
in
in
cld
mov
ror
(bad)
fwait
(bad)
stc
dec
sbb
add
stc
jmp
adc
push
mov
in
test
fcmove
push
jmp
add
adc
test
or
out
call
iret
mov
pop
adc
and
repz
sub
add
jle
call
jbe
push
xor
push
mov
pop
dec
dec
(bad)
fist
out
jae
out
imul
adc
sub
es
xchg
loopne
inc
xchg
fsubr
dec
mov
popf
and
push
cmp
mov
inc
call
(bad)
sbb
(bad)
xchg
je
mov
lods
rcl
add
lods
fnsave
pop
mov
sbb
aaa
xchg
scas
add
dec
xor
jbe
mov
sub
ret
rcl
mov
mov
sahf
outs
pusha
lods
imul
in
ret
mov
(bad)
aad
aam
add
lds
mov
add
sbb
jo
dec
sbb
xchg
inc
push
call
pop
xor
mov
fldenv
add
pushf
mov
mov
stos
pushf
lea
jmp
lea
cwde
mov
fisttp
rcr
in
sub
lea
test
pause
repz
(bad)
sbb
mov
pop
pop
ja
mov
mov
mov
arpl
ror
xchg
ss
cli
mov
sub
addr16
test
cs
adc
adc
push
add
fisttp
dec
mov
jle
xchg
test
jno
and
push
push
pop
cs
xchg
xchg
xor
mov
dec
gs
into
xor
movs
stos
call
pop
pop
mov
sbb
and
out
add
lds
rol
add
push
pop
ror
xor
es
out
add
aaa
xchg
scas
outs
mov
daa
sub
cmps
stos
and
push
je
fild
mov
in
pop
cmps
sbb
adc
shl
adc
or
or
push
test
mov
bnd
loope
mov
out
push
call
aaa
lahf
dec
inc
ins
hlt
fdivr
add
popf
sbb
movs
jmp
inc
jecxz
cmps
aad
xor
mov
mov
pop
shl
cli
mov
retf
xchg
xbegin
aas
pop
out
lods
sbb
xchg
mov
xchg
pushf
pushf
fs
dec
repnz
and
or
xchg
jnp
cmps
cmp
dec
jl
mov
mov
jbe
std
sub
add
sub
adc
ret
mov
inc
mov
js
sbb
push
rep
inc
mov
xor
push
loop
std
sbb
imul
repz
in
lods
ror
std
std
icebp
(bad)
cmp
ins
mov
cmp
les
std
mov
popf
cmp
fcomp
inc
retf
dec
pusha
retf
cmp
dec
push
sar
ror
dec
ret
mov
into
(bad)
dec
push
shl
mov
hlt
jle
scas
loopne
cwde
lods
outs
js
inc
push
(bad)
jmp
xor
mov
scas
(bad)
xor
pop
int3
push
rcr
cli
adc
lahf
imul
(bad)
mov
pop
xor
mov
popa
cmps
add
(bad)
jmp
(bad)
inc
push
inc
inc
jno
xor
data16
push
cld
mov
int
mov
sar
sbb
aas
fcomp
mov
out
cmp
cmps
mov
pop
xlat
mov
dec
sar
addr16
stos
push
sub
add
mov
(bad)
outs
(bad)
sahf
adc
and
pop
mov
add
imul
rcl
imul
push
ret
lods
or
mov
in
sub
(bad)
lea
ja
rcr
stc
mov
sub
shrd
btr
ror
add
sbb
btr
btr
adc
mov
sbb
or
shr
setbe
mov
cmc
bt
repnz
push
push
mov
lea
jne
movzx
movsx
mov
mov
setge
call
imul
imul
xor
mov
jle
adc
dec
or
sub
xchg
cmp
retf
ret
(bad)
xchg
leave
aad
arpl
jge
loope
sti
push
je
mov
push
int3
sar
xor
pop
es
add
inc
cmp
xor
sub
pop
sub
mov
mov
mov
mov
movs
push
or
mov
repnz
data16
(bad)
movs
sub
mov
sbb
dec
fwait
push
aam
xor
leave
cmp
(bad)
or
push
scas
sub
rcr
cmp
jns
call
xchg
mov
inc
lods
adc
stc
jne
mov
mov
scas
mov
cmp
inc
adc
fst
or
jecxz
movs
int
(bad)
sar
xor
in
mov
and
dec
jecxz
sbb
imul
mov
test
jg
jle
iret
sbb
pop
add
mov
sub
imul
push
sub
jecxz
xchg
popf
hlt
mov
push
inc
push
dec
fild
dec
add
mov
jge
xor
shl
jle
outs
push
(bad)
xor
jp
xchg
cdq
jge
xchg
loope
jo
fld
or
xor
and
dec
sbb
jl
test
pop
sub
sahf
jmp
inc
jmp
cmp
fwait
push
dec
les
push
popf
push
lea
jmp
or
cld
sar
xor
jne
popf
add
push
jle
sub
ret
mov
xchg
xchg
les
pop
scas
imul
stc
lods
jmp
pop
cmp
data16
mov
or
or
outs
repz
inc
mov
push
xchg
inc
jle
or
(bad)
leave
xchg
retf
jno
and
outs
or
inc
in
xchg
pushf
push
out
repz
dec
push
clc
repnz
xchg
xor
cmc
fidivr
call
and
in
xchg
cmp
cmc
movs
push
jmp
repnz
sar
xor
sbb
cmps
mov
shl
imul
mov
fwait
mov
mov
pop
(bad)
pop
push
sub
(bad)
mov
add
jge
int
push
or
push
leave
int3
xor
mov
ins
push
enter
retf
div
or
or
pushf
jle
mov
dec
dec
and
cmps
pop
mov
shl
cwde
fmulp
push
(bad)
fwait
xchg
cmps
sub
jmp
jns
sub
jmp
push
call
rol
xor
lock
stos
movs
or
or
inc
push
push
adc
lods
fist
addr16
into
push
fucomp
gs
sbb
adc
fistp
mov
sbb
mov
dec
push
fist
or
sub
push
dec
(bad)
scas
xor
dec
fsubr
push
gs
lods
(bad)
sub
sub
cmps
mov
lds
test
mov
or
aaa
cli
mov
dec
retf
aaa
retf
inc
add
mov
or
add
jbe
jmp
push
xchg
push
sub
(bad)
push
movs
or
mov
add
add
xor
int3
push
iret
push
xor
test
add
int
or
add
(bad)
push
inc
aas
pop
(bad)
fild
add
add
xchg
and
add
add
fsubr
xchg
(bad)
push
ds
in
adc
(bad)
push
jbe
sbb
cmp
add
xlat
add
sub
aaa
(bad)
push
nop
push
or
and
add
add
sti
xor
push
hlt
loopne
loope
ffreep
push
sub
sbb
add
sbb
aas
pop
int
push
add
add
out
push
daa
(bad)
ffreep
push
add
add
xor
push
xor
adc
pop
xor
push
dec
dec
push
push
out
add
push
cmp
and
add
inc
aaa
mov
push
hlt
(bad)
pop
jg
pop
int
leave
or
add
mov
sbb
add
sub
cmps
or
(bad)
push
aaa
fs
std
sub
fild
add
add
pop
add
or
add
mov
xchg
sti
sub
push
pop
aas
retf
pop
(bad)
push
mov
out
int
(bad)
push
sbb
(bad)
push
mov
data16
xor
push
xor
pop
loopne
pop
int
inc
add
add
call
(bad)
push
je
pop
cld
jp
int
(bad)
pop
add
dec
gs
cmps
push
sbb
push
fdivr
(bad)
push
mov
or
push
mov
aas
(bad)
es
(bad)
push
fidiv
(bad)
push
add
aad
push
call
sub
inc
imul
sahf
daa
push
call
xchg
inc
call
lea
je
ror
mov
xor
add
shrd
shld
mov
pusha
stc
test
pusha
mov
pushf
push
lea
je
or
test
add
shl
btr
dec
and
mov
cmc
pushf
jmp
mov
lea
push
setno
lea
call
mov
pushf
cmc
pusha
mov
jmp
push
call
mov
push
call
fist
sub
ds
xor
xchg
xor
add
xchg
cmp
pop
aam
mov
imul
pusha
xchg
shl
jmp
loope
fbstp
in
xchg
or
mov
xchg
mov
popa
pop
sahf
outs
xor
fcomp
gs
bound
inc
xor
jge
adc
mov
ret
daa
push
dec
dec
sbb
sbb
pop
push
ja
cmp
sbb
add
cmps
call
or
cs
call
aad
test
lods
push
jnp
int3
push
cmp
mov
lock
and
pop
xchg
push
in
jo
pop
ja
add
call
shr
xlat
jb
sub
mov
icebp
jne
xchg
pop
out
xchg
popf
adc
aas
in
fld
clc
loop
push
dec
les
jo
dec
mov
sub
sbb
and
push
(bad)
inc
enter
stos
mov
jl
fs
pop
push
inc
pop
leave
ins
bt
test
jmp
stos
sti
cmp
push
mov
(bad)
jnp
cld
iret
shl
rcl
and
dec
jb
clc
xchg
mov
aaa
ins
push
push
push
das
pop
push
and
xlat
shr
fadd
mov
out
pop
mov
inc
or
jns
das
jae
retf
je
xchg
jno
sbb
clc
data16
cmp
sub
dec
push
adc
cmp
mov
pop
mov
add
int3
mov
cwde
adc
mov
xor
and
ja
cmc
bt
imul
clc
clc
jmp
xlat
or
add
jecxz
add
or
add
adc
jp
sbb
out
sbb
pop
loop
add
or
add
sbb
mov
sbb
test
add
add
add
(bad)
sbb
xchg
jecxz
add
or
add
jecxz
add
or
add
sbb
(bad)
sbb
movs
out
sbb
stos
jecxz
add
or
add
out
adc
mov
sbb
pop
or
add
adc
mov
or
add
add
jecxz
add
or
add
jecxz
add
sbb
push
test
sbb
fcompp
sbb
add
add
add
add
add
add
mov
sbb
mov
int
add
add
add
add
int
add
out
adc
jo
fmul
mov
xchg
cmp
lds
outs
mov
fldcw
not
add
add
cmp
cmps
lahf
mov
and
lods
cli
or
(bad)
and
movs
gs
loopne
int
aam
retf
into
fprem1
cmp
push
sbb
jp
jl
sub
xchg
xchg
jmp
movs
lods
xchg
ds
xchg
cmp
dec
adc
pop
pop
lahf
cdq
int
push
mov
fwait
pop
out
nop
imul
bound
pop
dec
push
arpl
hlt
aam
sub
(bad)
xchg
dec
push
mov
popa
adc
cmp
cmp
fnstcw
adc
loop
iret
mov
loopne
mov
out
push
pusha
sti
add
mov
xor
mov
mov
pop
outs
xor
fsubr
mov
jb
and
xchg
fdivp
cmp
or
inc
fstp
xchg
cmp
pusha
inc
mul
imul
cmps
mov
scas
pop
adc
ror
jno
jg
(bad)
je
inc
(bad)
je
xchg
ret
xchg
pop
(bad)
dec
div
(bad)
ret
sbb
(bad)
fs
loope
xchg
movs
loop
(bad)
aaa
jns
lock
scas
xor
jmp
test
in
inc
sub
push
pop
dec
mov
ins
mov
and
push
push
imul
dec
fsub
inc
out
movs
mov
shl
(bad)
push
icebp
jle
pop
arpl
xchg
das
add
(bad)
cdq
mov
out
repnz
adc
cmps
popa
jmp
mov
inc
jo
cmps
outs
test
fwait
repnz
fs
scas
jmp
and
(bad)
in
push
sub
cmp
test
cmps
mov
lahf
mov
aam
mov
les
push
pop
mov
mov
sahf
sahf
lea
enter
xlat
daa
ja
cmp
(bad)
enter
xchg
scas
pop
mov
leave
xor
xchg
jp
div
fst
scas
dec
push
dec
iret
jae
xor
in
cmps
out
mov
test
hlt
adc
cld
pop
mov
xchg
sbb
pop
or
inc
jns
push
jg
lds
icebp
std
in
test
data16
jb
and
hlt
mov
fldenv
loopne
mov
jmp
ror
(bad)
sub
xlat
test
fdiv
sub
mov
rol
mov
stc
fwait
cmp
arpl
dec
test
ja
retf
jl
in
in
stos
in
cmps
retf
cmps
push
cmc
pop
dec
xchg
cmp
ficom
je
jl
retf
jmp
and
in
sbb
loopne
(bad)
pop
jecxz
sub
inc
ins
cmc
cli
pop
mov
jp
lea
shl
mov
xlat
sub
movs
push
fild
aaa
test
je
into
push
sub
sbb
xchg
fwait
cwde
jp
inc
int3
das
push
xor
leave
lods
cmp
inc
and
mov
dec
cmp
xor
pop
pop
(bad)
jmp
adc
or
mov
mov
lods
retf
dec
jns
inc
sub
clc
movs
fidiv
test
xchg
loop
mov
movs
movs
int
push
mov
movs
repnz
mov
test
add
and
mov
push
and
push
sti
(bad)
jno
adc
das
adc
push
imul
popa
sub
mov
pcmpgtb
lods
inc
test
test
cmp
fld
pop
rcr
dec
dec
les
popf
mov
sbb
into
push
sub
(bad)
bound
int3
add
mov
xchg
(bad)
xchg
movs
or
(bad)
not
mov
movs
loopne
inc
stos
imul
dec
aaa
pop
mov
ds
pop
dec
jmp
xor
jg
xor
data16
inc
gs
repnz
mov
lock
and
inc
xor
cmp
in
test
xor
jge
out
mov
in
sub
inc
mov
lds
inc
leave
dec
and
pop
xchg
(bad)
dec
pop
je
inc
shl
jne
mov
bound
adc
push
dec
call
movs
nop
popf
mov
ins
dec
push
push
fiadd
add
and
aaa
fild
push
pushf
mov
dec
retf
add
rol
sbb
mov
and
ins
sbb
jae
pop
sbb
dec
out
shl
out
mov
adc
and
sub
ins
pop
push
pop
dec
mov
jg
mov
mov
sar
push
inc
outs
push
scas
std
push
into
movs
fcmovbe
cmc
xor
(bad)
out
mov
loopne
aas
push
ret
je
dec
mov
mov
retf
aaa
cmc
fmul
mov
iret
jno
mov
mov
xchg
xchg
js
enter
mov
lahf
sub
mov
inc
add
test
xchg
add
pop
mov
call
popaw
and
mov
or
ss
or
mov
mov
mov
and
mov
lock
sub
or
sbb
push
inc
mov
repz
jp
mov
mov
mov
jo
mov
cmp
in
and
retf
loop
int
shr
xor
lods
dec
lock
or
fisubr
inc
imul
push
cmp
inc
scas
mov
jmp
fadd
call
xor
shl
add
cdq
mov
call
dec
jmp
dec
lahf
mov
call
mov
ror
out
test
adc
mov
pop
retf
or
xor
scas
sbb
mov
push
push
and
aad
call
mov
loope
mov
jg
push
mov
adc
xchg
pop
retf
out
and
in
icebp
enter
adc
push
aam
and
popf
repz
std
sar
lods
xor
mov
fst
mov
xchg
icebp
ja
mov
aaa
imul
add
outs
mov
xchg
ds
test
pop
xchg
and
pop
mov
pop
dec
mov
or
shl
inc
loopne
or
sub
and
mov
idiv
shr
mov
sub
jmp
adc
dec
jmp
cwde
movs
aaa
shl
shl
adc
nop
cmp
lods
cmp
xor
test
aaa
call
mov
and
popf
ja
cmp
add
jge
mov
imul
out
lds
and
mov
movlps
dec
and
ret
xchg
xchg
out
stc
mov
ret
sub
mov
jmp
or
push
xchg
adc
sti
scas
jge
pop
mov
hlt
pop
jg
popa
fwait
push
retf
out
fsub
push
jecxz
cmp
out
jg
dec
xchg
std
pop
mov
dec
add
push
pop
clc
gs
mov
mov
dec
aaa
test
aas
jbe
push
sti
pop
push
and
pop
xchg
(bad)
cdq
(bad)
sar
dec
imul
jp
loopne
sub
pop
loope
sub
or
push
push
ret
dec
mov
je
mov
dec
je
fdivr
mov
test
sub
or
dec
inc
jne
cmp
jo
(bad)
shr
fcomi
popf
stc
jge
jbe
inc
cmp
add
ret
cmp
inc
test
ret
test
fwait
push
fistp
popf
bound
inc
in
je
and
cmp
xor
mov
inc
dec
cmp
cmps
sub
jne
cvtdq2ps
aaa
repnz
jmp
fwait
mov
je
dec
(bad)
or
cmp
inc
or
fwait
xor
xchg
into
push
call
sar
and
mov
mov
mov
xor
push
(bad)
test
es
cli
jmp
lock
test
fwait
in
inc
xor
xlat
fadd
xor
fnstenv
cmp
jns
iret
rcl
pop
add
and
push
fsubr
adc
mov
cmp
mov
(bad)
push
pop
push
cmp
mov
jns
jns
arpl
retf
push
jge
mov
or
mov
std
pmaxub
cmp
or
(bad)
mov
ja
pop
ret
jge
or
frstor
(bad)
jnp
adc
and
ins
mov
mov
jge
shr
xor
stos
mov
hlt
push
cld
mov
or
or
sbb
fsub
repz
stc
pop
inc
js
int
xor
dec
ficom
test
sbb
sahf
mov
and
out
pop
xor
pop
xchg
data16
cmps
sbb
pop
xchg
add
hlt
cmp
aaa
mov
fsub
fwait
outs
push
mov
pusha
leave
outs
and
test
lea
repz
(bad)
into
cdq
test
jp
std
cmp
push
cmps
mov
sub
mov
jbe
stc
pop
and
shl
sub
lahf
adc
mov
fild
lods
rol
inc
sbb
sub
dec
lock
cli
in
fnsave
sub
data16
rcl
dec
mov
pop
jmp
stos
fmul
outs
and
mov
int3
into
cdq
mov
push
jge
mov
js
out
test
push
test
cmp
fisubr
cmp
push
push
xor
xlat
repnz
int3
test
and
(bad)
cmp
out
push
(bad)
pop
(bad)
into
ds
int3
dec
cmp
add
dec
push
push
or
leave
push
mov
(bad)
arpl
fisttp
stc
clc
adc
pop
stos
test
or
jns
pop
push
adc
xchg
adc
adc
test
icebp
mov
add
dec
jmp
in
mov
push
push
scas
mov
jns
or
cwde
js
cwde
dec
jmp
mov
adc
cli
cld
push
push
xchg
and
xchg
inc
enter
adc
pop
xchg
imul
xchg
addr16
push
movs
add
jne
lahf
mov
ror
adc
jmp
adc
loopne
lods
mov
mov
sbb
loopne
ja
aas
popf
and
mov
ins
mov
hlt
sbb
retf
fcomp
or
nop
ins
stos
mov
xchg
sbb
push
mov
pusha
pop
dec
jb
cmp
(bad)
sbb
sub
aaa
adc
fs
or
jno
xor
mov
mov
ret
out
loopne
inc
and
je
jmp
adc
mov
cwde
lods
xor
mov
popa
and
icebp
(bad)
mov
in
loopne
cmp
int
mov
jae
loopne
add
add
cmps
call
push
push
cmp
call
test
imul
sbb
jle
jno
test
push
scas
ins
jo
call
jae
loop
adc
cli
cmc
cmp
push
push
test
xor
stc
je
int
xlat
mov
xor
aaa
push
repz
pop
jl
mov
mov
inc
pop
out
mov
les
inc
jb
xlat
cmc
je
mov
arpl
add
int
jbe
or
(bad)
or
fidiv
jb
add
mov
mov
pop
je
ins
add
mov
jp
je
jmp
or
jge
or
mov
jecxz
add
mov
aaa
sub
mov
push
mov
mov
fwait
sahf
pop
push
popa
xchg
lock
add
fidiv
rcl
dec
cmp
out
push
leave
stos
mov
test
jl
sub
xchg
push
clc
dec
imul
sbb
dec
xchg
push
call
pop
mov
add
push
adc
sub
in
mov
mov
dec
ins
cmps
adc
sbb
shl
(bad)
call
mov
imul
mov
xor
and
mov
cmp
test
and
pop
test
xor
mov
dec
add
add
pop
ds
mov
push
lds
retf
push
ret
cvtps2pi
jp
sub
cmps
loopne
xchg
add
mov
adc
inc
repnz
fisub
adc
mov
push
jecxz
adc
push
jne
sub
adc
add
out
pop
pop
mul
xor
lahf
pop
ja
ret
dec
sti
dec
test
jecxz
stc
xor
shl
int
pop
test
xor
loope
into
int3
xor
jno
push
ror
or
je
scas
dec
mov
mov
lds
fmul
mov
push
(bad)
clc
push
pop
test
cmp
pushf
cmc
cmp
call
mov
cmp
push
mov
push
lea
je
jmp
sub
mov
cmps
je
aas
xor
jmp
xchg
pop
cli
xchg
pop
jnp
mov
mov
popf
pop
push
mov
into
and
sub
addr16
sbb
xchg
loop
xor
clc
xchg
jns
in
fistp
mov
xor
xchg
test
lea
fimul
(bad)
popa
cwde
push
loop
test
xor
mov
push
dec
add
push
cmp
mul
fisttp
mov
(bad)
(bad)
jecxz
xchg
sar
push
(bad)
mov
jo
in
adc
cmp
repz
(bad)
mov
fcom
icebp
mov
stos
mov
pop
mov
cdq
mov
push
mov
es
sbb
sbb
inc
inc
movs
and
sub
rol
lahf
jmp
mov
xchg
push
inc
stc
inc
cmp
cmps
loope
nop
jmp
data16
inc
ja
mov
push
sbb
test
mov
dec
pop
push
mov
scas
add
mov
pop
cwde
xchg
adc
sbb
push
enter
mov
add
sti
jbe
push
mul
hlt
or
sub
sbb
adc
push
add
scas
out
ret
mov
arpl
adc
push
and
sbb
or
movaps
or
mov
sbb
push
mov
mov
cmps
div
push
cmp
fs
into
push
addr16
nop
push
dec
jle
dec
ficom
int3
jmp
pop
loope
xor
xchg
sbb
add
nop
cld
cmp
movs
not
call
push
call
(bad)
xor
mov
dec
pop
adc
mov
push
xlat
and
sub
sahf
cmp
gs
das
aas
repnz
push
iret
cmp
out
jno
jbe
loop
int3
in
sahf
jno
xchg
pop
loop
test
push
retf
mov
jbe
dec
les
inc
add
es
out
adc
out
jno
callw
ins
std
dec
inc
mov
fadd
outs
xlat
out
ins
xchg
xchg
inc
cwde
push
jg
retf
mov
dec
jecxz
int
stc
xor
push
xchg
out
sbb
pop
xor
mov
in
jl
adc
inc
and
sahf
icebp
(bad)
bound
lock
push
hlt
in
xor
test
fstp
ret
jbe
mov
push
push
mov
stos
push
mov
test
cmp
cmps
pop
movs
xor
ins
out
dec
xchg
shr
jne
imul
fist
pop
xor
sbb
lds
mov
sar
xchg
das
stos
mov
shl
add
xchg
les
outs
ins
dec
xor
repz
mov
sti
push
out
ror
loopne
ins
movs
iret
adc
test
push
fwait
jae
clc
cwde
jge
sub
jae
sub
lea
into
test
mov
dec
jle
pushf
adc
push
jne
nop
push
mov
and
fs
jae
call
push
call
loopne
repz
fwait
ret
add
scas
ins
sub
rcl
mov
iret
outs
aam
test
fidiv
pop
cmps
add
pop
mov
test
hlt
pop
les
mov
inc
and
mov
xor
sbb
mov
stos
movs
das
jo
lahf
cmps
xchg
cmp
xchg
xchg
not
inc
jle
popa
and
xchg
sub
mov
mov
inc
pop
inc
ins
dec
mov
or
fsubr
jl
sbb
add
push
mov
cli
sets
pushfw
push
bt
rol
rcr
mov
stc
cmc
rol
pushf
not
clc
test
mov
add
jmp
push
call
scas
add
push
fsub
add
inc
xor
push
jo
popa
je
push
imul
add
add
clc
push
mov
movzx
mov
clc
das
shr
call
push
call
fbld
sbb
add
call
shl
push
add
sbb
movsx
jmp
push
call
aam
dec
sub
(bad)
cmps
call
and
mov
push
cmp
cmp
pop
out
lea
cwde
test
rcl
jl
add
mov
sbb
pop
inc
cmps
rol
or
adc
xchg
fsubr
lea
and
pusha
leave
pop
or
lods
bound
mov
daa
inc
jnp
shl
sub
inc
xor
push
cdq
dec
xor
push
or
push
sahf
(bad)
mul
jae
cmp
test
mov
cmps
int3
call
mov
xchg
hlt
mov
xchg
mov
xor
(bad)
sar
cmp
in
int
test
sub
daa
and
pushf
mov
dec
les
arpl
lahf
mov
and
mov
outs
or
test
xchg
sahf
xchg
mov
nop
cli
aad
call
lods
pushf
sbb
iret
in
mov
lea
je
bt
sub
call
inc
inc
dec
xor
cs
ins
add
add
cmp
test
cmp
pusha
push
jmp
xchg
mov
xor
cmp
call
(bad)
or
ret
in
enter
shl
clc
push
daa
ret
lods
outs
mov
xor
arpl
enter
lds
pop
and
test
jle
sti
jnp
jae
or
pop
repnz
jns
jmp
fs
mov
push
cli
jmp
sub
mov
add
bound
lahf
sbb
jno
(bad)
push
call
mov
jnp
std
and
sti
push
jl
lods
xor
xchg
push
aam
mov
xor
and
xor
inc
loope
jno
stos
or
sub
push
in
dec
in
dec
jle
scas
popf
mov
pop
mov
stos
sub
or
sub
xor
inc
call
pop
push
loop
or
movs
int3
mov
dec
sub
mov
push
call
pop
(bad)
add
fucom
sbb
add
add
mov
add
add
add
add
sbb
add
add
push
add
add
add
retf
add
add
add
adc
add
add
adc
add
pop
and
add
add
add
add
add
mov
add
and
add
adc
sub
add
adc
add
add
add
sub
jmp
(bad)
xor
movs
dec
push
cmp
jmp
push
call
or
int3
setg
lea
pushf
mov
call
jmp
or
mov
xor
push
inc
pop
call
dec
(bad)
fcomp
xchg
out
mov
aas
(bad)
loop
inc
push
push
scas
dec
mov
xchg
pop
jge
sar
or
(bad)
cmp
mov
push
fadd
in
inc
jne
add
xor
push
sbb
inc
into
test
rol
or
fs
clc
and
xor
cwde
test
data16
push
push
ret
sub
imul
adc
xor
arpl
retf
jo
dec
pop
lea
and
cli
out
std
mov
aad
sar
push
mov
aas
dec
xlat
sti
neg
test
push
inc
jp
rcr
sub
outs
retf
loop
or
sar
adc
push
mov
cmp
sub
jmp
and
adc
pop
fidiv
imul
mov
pop
daa
mov
(bad)
jmp
cmp
mov
pushf
sub
setl
call
mov
xor
mov
pushf
call
adc
jns
jecxz
adc
fnstcw
jg
imul
lahf
sti
inc
pop
mov
add
and
adc
sub
jmp
adc
(bad)
into
ja
lods
mov
jne
fisttp
xchg
leave
mov
pusha
xor
in
popf
loope
in
add
sbb
out
inc
outs
pop
inc
cmc
test
fwait
mov
cli
cwde
pop
adc
shl
fdiv
imul
pop
add
sbb
loope
fsub
add
call
(bad)
xor
dec
shl
in
dec
or
(bad)
popf
jne
jmp
xchg
jne
inc
sbb
imul
cmp
lahf
rol
mov
loope
mov
mov
mov
rcl
cld
fwait
sbb
div
adc
je
push
cmps
xor
test
jmp
cmps
call
shr
mov
jmp
push
call
mov
inc
dec
dec
xor
cs
ins
add
pop
pop
mov
xor
frstor
repz
ja
test
dec
mov
push
int
or
sbb
jp
push
jmp
pop
ret
pop
jo
add
inc
stos
repz
cmps
rcl
jmp
stos
addr16
mov
mov
sar
inc
adc
pop
lahf
and
fist
(bad)
sub
xchg
repnz
add
add
(bad)
(bad)
ins
cmp
pushf
pop
aad
pop
sar
fisttp
mov
xchg
iret
push
push
call
jne
(bad)
push
call
jae
sub
push
xchg
mov
xor
scas
fdivr
adc
test
xchg
and
pop
jnp
push
mov
push
imul
pop
sub
in
dec
fcomi
mov
sub
pop
mov
pop
ret
cmp
fwait
mov
hlt
cmp
gs
pop
inc
adc
and
add
hlt
mov
mul
jge
adc
mov
test
and
mov
mov
mov
jmp
and
adc
(bad)
cmp
or
int3
mov
inc
xor
(bad)
jge
cmps
std
js
or
pop
adc
scas
sub
xor
xchg
mov
add
sti
pusha
xchg
mov
std
(bad)
mov
hlt
mov
cli
loope
mov
ins
gs
adc
adc
popf
fld
out
clc
dec
push
les
sbb
add
jmp
jnp
jnp
sbb
bound
dec
test
inc
(bad)
call
ss
call
xor
sti
push
call
cmps
pop
push
push
push
inc
push
dec
xor
cs
ins
add
call
aad
call
mov
sub
push
daa
fs
push
in
rcr
ror
pop
jmp
popa
xor
push
js
(bad)
jg
mov
adc
pop
(bad)
xor
inc
pop
pop
push
pop
(bad)
icebp
xchg
aad
mov
xchg
jle
daa
jl
adc
nop
pop
push
in
jo
not
ds
repnz
xchg
les
fbstp
mov
mov
out
and
inc
inc
gs
scas
pop
sbb
fs
jne
push
mov
pusha
pushf
push
ret
push
dec
xchg
sub
or
jo
mov
adc
sub
mov
inc
stos
xchg
cmp
mov
lahf
daa
dec
jecxz
in
pop
(bad)
in
pop
ds
mov
xchg
(bad)
vpunpckhbw
jge
adc
add
outs
cmp
out
mov
cs
sbb
int
pop
daa
mov
mov
ret
mov
mov
dec
fdivr
outs
aam
jmp
add
addr16
cmps
call
int
popf
sbb
das
stos
scas
push
sub
add
inc
fmul
iret
cmp
pop
cwde
dec
mov
jb
mov
ror
add
or
add
mov
and
jns
cmp
mov
adc
dec
loop
sub
sti
push
test
pop
dec
ror
jle
je
fld
jo
inc
push
call
sub
mov
xchg
shr
cmp
mov
clc
cmp
repz
aad
out
int
cmp
fwait
arpl
mov
jno
adc
mov
dec
out
mov
mov
ins
inc
cdq
out
addr16
and
xor
xor
sub
iret
mov
push
loopne
repz
xchg
jmp
xchg
out
xor
inc
popf
inc
cdq
gs
dec
scas
mov
cmp
dec
push
mov
inc
adc
rol
cmp
in
dec
ret
lods
push
inc
test
push
stc
scas
test
int3
fstp
mov
cmp
(bad)
pusha
xor
inc
mov
xchg
repz
mov
or
dec
inc
sub
mov
aad
or
(bad)
add
inc
les
outs
jl
dec
fsub
jb
retf
gs
xchg
imul
cmp
mov
in
pop
cli
test
(bad)
popf
mov
jle
pop
adc
pop
adc
add
ficomp
add
mov
cmc
aad
call
or
leave
inc
lods
push
vpsraw
sbb
xor
push
(bad)
or
das
aam
(bad)
mov
mov
mov
stos
add
mov
jae
jg
out
mov
add
imul
or
les
jo
xchg
push
lods
nop
in
loop
out
jp
lds
(bad)
mov
in
in
adc
inc
dec
mov
or
xchg
ret
xor
sbb
and
mov
mov
pusha
push
push
ret
push
call
xchg
icebp
stc
(bad)
clc
test
bt
sub
call
sar
add
sar
sar
add
cmc
neg
or
push
mov
cmp
pusha
cmp
call
push
jmp
mov
xor
xchg
pusha
cmp
fadd
mov
push
sub
cmp
adc
dec
popf
pop
sub
pusha
pop
js
mov
ja
(bad)
mov
sti
imul
test
mov
nop
xor
ficomp
dec
std
cmps
inc
mov
movs
dec
jne
cmc
adc
fsubr
sub
bound
jnp
and
xchg
(bad)
jmp
fstp
pcmpeqb
or
lods
push
je
xchg
pop
aaa
lods
mov
jns
fsub
add
aaa
mov
push
mov
jge
and
pop
push
cs
add
(bad)
aad
inc
sbb
(bad)
adc
pop
xchg
(bad)
(bad)
out
mov
add
call
shr
dec
test
out
es
dec
push
movs
repz
movs
call
add
arpl
jno
fs
push
jmp
xchg
ficom
cdq
add
shl
add
mov
out
dec
data16
or
les
shr
push
imul
popf
stos
push
push
jno
(bad)
ins
xlat
mov
and
les
cmp
adc
lds
movs
push
mov
lds
cmc
push
cld
inc
mov
cmp
les
cli
int
imul
stos
adc
cs
cli
xor
(bad)
(bad)
sbb
pop
out
pop
inc
mov
popa
mov
retf
sbb
test
icebp
pop
shr
cmp
mov
lods
in
adc
cmp
cmps
call
(bad)
movs
xchg
fisubr
push
xchg
in
bound
mov
daa
xchg
lds
mov
ret
lock
mov
lods
cmps
mov
rol
into
mov
add
hlt
mov
pop
(bad)
inc
out
inc
and
div
in
out
and
push
inc
stos
cmps
inc
popf
addr16
out
push
and
sahf
adc
je
test
fcom
pop
pushf
test
(bad)
out
imul
js
pop
in
pusha
lahf
jge
retf
add
rol
enter
mov
inc
jbe
jb
cmp
and
clc
mov
retf
stos
sbb
clc
adc
mov
(bad)
and
pop
div
cmp
sub
cmp
and
push
clc
mov
sbb
dec
adc
add
dec
push
ficomp
and
adc
cwde
and
pop
inc
test
(bad)
(bad)
ret
shr
test
addr16
ret
shl
push
scas
movs
sbb
or
cld
push
loopne
jmp
arpl
jmp
enter
adc
mov
sub
sete
inc
not
mov
pushf
cmp
test
cmp
jmp
test
xor
cwde
xor
jb
ret
push
stos
js
push
retf
lods
mov
fucomip
in
sbb
dec
ds
dec
test
dec
xchg
mov
adc
data16
ficom
ror
xor
test
bound
(bad)
out
pushf
mov
jmp
inc
arpl
out
push
test
dec
xchg
lahf
enter
add
mov
arpl
stos
cmps
xor
out
sbb
ret
jg
movs
in
add
cli
dec
jno
push
dec
dec
dec
dec
cs
ins
add
xor
and
aam
and
mov
leave
leave
add
mov
sbb
push
mov
or
das
push
in
mov
push
pushf
aas
mov
cmp
adc
sub
stos
ret
fnstsw
icebp
and
sbb
mov
push
into
imul
cmp
ret
xchg
enter
ss
int
dec
push
imul
js
cdq
sbb
fcom
(bad)
cli
sbb
aad
stc
(bad)
call
push
call
xor
fsub
add
call
fistp
push
mov
lea
pushf
lea
jo
pusha
pushf
mov
pusha
mov
pushf
jmp
push
call
or
mov
or
out
cli
call
or
(bad)
sti
cmp
inc
mov
adc
call
daa
jb
mov
nop
jmp
ins
sbb
jb
jmp
jae
pop
popa
leave
loop
icebp
push
(bad)
scas
inc
add
fisubr
ins
jl
mov
and
pop
stc
jns
stc
pop
sbb
paddusw
inc
mov
loopne
lea
jno
push
push
pushfw
pop
rol
mov
pushf
bt
stc
rol
stc
call
mov
jne
push
push
jo
cmps
ret
out
and
cli
xchg
or
xchg
xor
pop
es
mov
lock
aaa
in
cmps
sbb
leave
dec
jle
add
adc
xor
outs
adc
push
in
jo
sbb
push
dec
rol
add
cmp
sbb
xchg
xchg
fptan
or
xchg
movs
dec
xchg
fist
pop
mov
add
das
mov
pop
lock
into
adc
popa
out
pop
xor
or
fsub
add
sbb
js
pop
and
shr
aaa
mov
inc
jmp
adc
cmps
push
jno
shr
and
xor
pop
push
sbb
nop
ror
inc
dec
xchg
cwde
imul
aas
movs
fld
mov
js
fild
xor
mov
jmp
out
ja
retf
inc
ret
xchg
cmps
data16
outs
mov
cld
in
sub
int
xor
psubusw
pop
adc
mov
cmp
(bad)
aad
ds
fsub
mov
out
and
xchg
dec
jae
movs
push
add
repnz
or
mov
mov
or
test
les
jg
pop
(bad)
add
xchg
in
push
icebp
aam
js
les
adc
add
xor
push
repz
repz
out
call
outs
fild
(bad)
movs
loopne
jge
aas
lea
jmp
push
call
lea
call
pusha
push
jmp
not
lods
pusha
stc
bt
pushf
rol
push
cmp
not
test
bt
pushf
add
bt
test
neg
jmp
push
call
stc
push
push
call
stc
cmp
std
xchg
dec
mov
mov
lods
test
pop
inc
xor
mov
inc
fild
jp
jno
cs
mov
addr16
ins
stos
adc
in
or
lods
call
popf
or
int3
stos
fsub
out
hlt
xchg
loopne
mov
mov
xlat
cmps
mov
sub
ret
arpl
push
push
jmp
div
sahf
or
rcr
call
push
call
mov
dec
and
(bad)
loop
jae
push
hlt
in
jge
push
call
push
cmp
mov
gs
mov
dec
jge
daa
and
gs
sti
pop
(bad)
ret
sbb
xchg
cmp
shl
ss
and
mov
and
fsubr
xchg
dec
(bad)
push
test
push
mov
enter
jge
das
sub
dec
ins
sub
pop
inc
xor
aaa
shr
dec
sbb
and
data16
jbe
mov
inc
push
test
jle
jecxz
push
lods
adc
push
cmp
mov
pop
xchg
pop
sub
push
int3
cmovb
bound
fs
repnz
mov
scas
push
call
cmc
push
call
jl
daa
cdq
push
call
lds
or
cmps
call
jmp
ret
clc
and
push
fisubr
sti
and
pop
retf
cmp
fisubr
xlat
jae
jle
sub
pop
pushf
mov
movs
xor
(bad)
loopne
push
enter
cdq
fidivr
mov
lock
ficomp
mov
test
jge
nop
popa
fmul
ret
(bad)
add
push
jmp
not
pushf
test
add
xchg
and
pop
cmps
pop
ret
dec
mov
rcr
std
jnp
pop
xor
dec
in
mov
inc
(bad)
(bad)
or
mov
fsub
add
mov
dec
mov
inc
dec
mov
inc
push
inc
out
jae
loopne
test
mov
test
rol
cmc
push
aad
(bad)
and
inc
test
cmps
out
mov
sub
push
les
inc
ror
test
stos
dec
push
icebp
repnz
(bad)
call
call
mov
sub
adc
pop
sbb
jl
lea
xchg
push
ret
mov
jmp
jmp
ror
mov
sbb
setnp
and
movzx
mov
pusha
inc
cmp
lea
bts
dec
cwde
mov
jmp
pushf
mov
pushf
lea
jmp
push
call
mov
push
test
cdq
test
and
xor
inc
aas
pop
shl
inc
cmp
and
aas
sahf
and
iret
fwait
jne
cmp
lods
ins
add
scas
sub
mov
jp
scas
cmc
xor
into
gs
add
xor
retf
push
lea
xlat
outs
mov
push
(bad)
imul
ret
or
gs
movntq
fs
int
mov
aas
cli
jg
add
xor
xchg
cdq
imul
push
push
xchg
inc
(bad)
adc
pop
imul
cmps
test
inc
dec
repnz
xchg
lods
cmp
push
scas
push
lods
xchg
les
add
dec
ja
aas
popf
out
lods
sar
add
dec
fs
mov
xor
fist
stos
pop
mov
jmp
push
call
test
add
cmc
test
mov
add
mov
mov
bt
call
pushf
mov
mov
fs
sbb
mov
xor
inc
mov
xchg
pushf
adc
jo
test
mov
push
popa
loopne
shl
shl
cmp
cmp
repnz
sub
mov
jmp
aam
mov
(bad)
mov
imul
add
stc
mov
mov
rol
scas
sub
mov
jns
pusha
pushf
lea
call
jmp
setnp
inc
seto
xchg
shrd
test
mov
bt
stc
clc
mov
push
mov
cmp
mov
stc
pushf
call
push
call
(bad)
scas
cmps
dec
sbb
or
fsub
add
(bad)
in
lea
jne
bt
cmc
test
std
popf
pushf
lea
jmp
push
lea
jne
pushf
lea
jmp
mov
or
das
pop
jle
(bad)
sar
cli
jg
inc
or
(bad)
cmp
add
jg
dec
sahf
add
xor
or
test
lods
push
test
adc
int3
jp
jge
pushf
int3
pop
cli
loope
mov
sbb
add
(bad)
rcl
jl
mov
je
enter
jae
ins
jmp
outs
push
or
(bad)
lods
inc
pop
mov
cli
jno
fs
and
xchg
idiv
test
mov
cli
dec
cmp
or
pusha
jmp
push
call
cmp
je
xor
aaa
gs
outs
push
push
pushf
lea
jmp
push
call
mov
push
fldcw
fsub
add
cmps
call
push
add
push
dec
inc
gs
jo
arpl
ins
inc
outs
ins
fs
popa
je
inc
add
mov
lahf
push
push
cli
xchg
mov
pop
inc
sbb
pop
call
ins
test
test
sub
mov
inc
lods
leave
xchg
xchg
pop
xchg
rcr
push
inc
sub
jle
test
inc
movs
jns
mov
xor
cmp
test
lods
inc
jns
sbb
xchg
not
mov
mov
mov
push
ret
push
call
popf
pop
inc
cmp
data16
cmps
call
enter
and
movzx
mov
not
mov
movzx
mov
bswap
call
jecxz
xor
popf
mov
repz
push
add
imul
loope
mov
push
inc
aam
(bad)
mov
scas
mov
mov
jle
push
adc
push
aad
stc
jl
dec
hlt
data16
mov
pop
popa
aad
test
mov
stos
pop
mov
fdiv
adc
push
mov
push
fwait
cdq
push
in
aam
shl
adc
sub
pop
popf
push
fisttp
rcl
cmp
adc
dec
call
(bad)
pop
sub
cmp
cmp
dec
cmps
push
ds
cs
push
addr16
jl
jo
or
clc
xor
and
nop
push
ret
sub
leave
mov
fbld
and
xlat
enter
adc
das
pop
push
sub
cmc
adc
and
xchg
push
cmp
mov
push
sahf
push
xchg
mov
xor
pop
mov
loop
xsha256
cmps
xchg
xor
push
mov
sbb
data16
push
xchg
call
(bad)
mov
cld
mov
or
mov
inc
ins
inc
scas
dec
mov
mov
sbb
stos
push
jae
pop
cmps
inc
pop
jg
mov
repnz
cmc
outs
ffreep
cmp
daa
dec
pop
jle
loopne
loope
test
dec
mov
pushf
push
call
popf
inc
push
push
call
sub
gs
aad
call
push
mov
dec
nop
push
call
jmp
outs
pushf
push
lock
cmp
mov
loope
add
inc
lods
sbb
int
push
bound
sbb
jnp
lock
inc
push
mov
sbb
add
pop
iret
adc
sub
xor
daa
(bad)
ds
mov
jns
or
sbb
nop
pusha
add
repnz
inc
xchg
lods
and
jne
call
push
fld
fs
retf
data16
in
fidiv
sbb
retf
dec
retf
xchg
fidiv
jnp
(bad)
cmps
call
push
into
adc
rol
push
cmp
mov
jg
mov
mov
jns
cmp
popf
add
xor
add
cmp
push
mov
(bad)
push
enter
clc
jnp
sbb
ja
pop
push
sub
inc
jmp
adc
das
mov
movs
pusha
int
je
pop
data16
mov
fcomip
nop
pop
mov
jecxz
pop
(bad)
cld
sbb
daa
fsub
add
sub
(bad)
and
jmp
xchg
jae
jo
jmp
enter
inc
sub
or
adc
popa
and
jle
sub
ss
and
cli
cmp
in
aas
jns
dec
icebp
sub
mov
cmp
js
and
mov
adc
push
or
pop
mov
inc
pop
push
push
loope
ins
test
icebp
pop
cmc
mov
bound
je
adc
outs
call
sub
ins
shl
adc
and
fsub
pop
arpl
retf
bound
pop
dec
daa
jmp
cwde
xor
call
call
gs
ret
push
xor
push
jo
or
shr
xchg
adc
xor
std
and
movs
xor
std
xchg
ins
leave
dec
int
jge
dec
gs
add
or
add
aas
lea
ins
xor
cs
ins
add
mov
cmps
call
push
loopne
fwait
push
(bad)
cmp
es
mov
in
test
(bad)
mov
adc
hlt
push
xor
xchg
(bad)
cdq
sub
cs
add
(bad)
cld
jno
shl
cmp
inc
or
xchg
ins
push
xchg
cdq
push
adc
push
mov
jg
and
mov
das
or
clc
mov
imul
cld
fwait
out
and
iret
sub
jb
gs
sub
push
out
mov
push
push
les
in
sahf
scas
jnp
mov
dec
push
lods
aam
loop
push
xor
in
inc
out
test
jbe
mov
mov
rol
ret
pop
mov
gs
cmps
call
aad
sub
fsub
add
cmp
cmp
push
lea
jge
jb
pusha
mov
cmp
pushf
lea
ja
call
inc
inc
inc
cmp
shl
push
xchg
inc
xor
cmp
mov
jmp
push
call
sub
push
call
movs
stc
push
call
mov
stos
cmp
push
popf
push
pushf
lea
jmp
jmp
push
call
(bad)
pushf
neg
stc
add
push
jmp
fisub
mov
lods
(bad)
mov
sbb
out
cld
sbb
dec
fnstenv
mov
stos
les
cld
pop
lods
lock
ds
and
mov
leave
inc
std
and
mov
and
jno
data16
jno
xor
pop
popf
aaa
push
call
adc
fwait
cmp
cdq
push
mov
lea
jle
test
inc
dec
cmc
div
sahf
mov
js
or
xor
cmp
cdq
in
hlt
or
jl
add
mov
ffree
mov
mov
test
cmc
shl
pusha
lea
je
call
push
call
sbb
sbb
or
test
dec
cli
(bad)
jmp
lea
je
pusha
push
lea
jmp
push
call
push
popa
mov
das
(bad)
cmps
call
cld
cmps
push
call
fbld
xor
mov
cmp
and
jecxz
mov
movs
outs
rol
ret
mov
fidiv
outs
adc
cmps
into
push
pop
dec
loope
je
add
push
shr
mov
adc
shr
lahf
mov
mov
mov
push
imul
sub
fsubrp
jmp
sahf
rcl
out
out
mov
out
cmp
shl
mov
pusha
call
sbb
dec
xchg
push
jmp
ror
dec
sbb
mov
mov
push
out
shl
and
cld
aad
pop
or
xchg
outs
mov
aas
imul
int3
mov
inc
aaa
shl
popf
mov
sub
test
paddd
sbb
dec
mov
pop
ss
gs
movs
cmp
test
pop
imul
mov
bound
loope
(bad)
jo
cmps
push
xchg
jle
cmp
idiv
call
xor
leave
mov
add
push
mov
bound
xchg
hlt
ins
popa
pushf
test
jmp
(bad)
mov
mov
sub
xchg
je
repz
ja
and
(bad)
xchg
les
xor
jo
push
push
cmps
pop
jo
mov
call
sbb
jle
ss
fwait
pushf
imul
data16
xlat
jb
jl
movs
ret
aam
shrd
xchg
or
cmc
dec
xchg
out
ja
push
inc
fsub
push
push
mov
jb
ret
bound
bound
retf
outs
lods
jns
in
aas
lds
mov
shr
inc
mov
sbb
jmp
dec
test
mov
cmp
push
fisubr
adc
cs
xor
sti
mov
stc
push
jl
push
test
adc
push
mov
mov
cmp
(bad)
push
ret
(bad)
or
cmp
out
jns
pusha
xor
lods
fst
mov
push
rcr
dec
jo
jl
dec
add
xchg
pushf
cwde
pushf
xor
imul
shr
ds
push
call
sub
jmp
pusha
call
push
call
xor
icebp
aad
call
push
sbb
mov
movsx
pusha
mov
pusha
push
ret
push
call
add
mov
cmps
call
sbb
shr
inc
test
jmp
pop
(bad)
cmps
call
inc
mov
call
pop
jo
xchg
push
ins
pop
cmp
sbb
push
pop
loope
leave
int3
add
std
sar
mov
loope
ret
aas
sub
dec
xchg
xor
adc
sub
pusha
sbb
sbb
sti
rol
movs
xchg
in
push
mov
cmp
mov
(bad)
sbb
and
cmps
inc
adc
(bad)
test
pop
mov
cld
sbb
sti
jecxz
adc
push
sub
push
mov
and
into
lea
xor
cwde
jns
addr16
mov
cmps
call
inc
pop
add
add
push
call
push
fsub
add
seto
lea
movsx
movsx
push
movzx
call
sub
xchg
push
cdq
std
and
mov
hlt
xchg
xor
fcom
ja
fist
inc
aam
mov
push
aas
pop
sub
mov
jl
xor
jmp
xlat
in
pop
iret
iret
cli
(bad)
mov
fist
adc
pop
xchg
daa
push
xor
jno
leave
lahf
pushf
xor
hlt
cmp
mov
lods
outs
shl
and
sbb
push
or
jno
or
xchg
push
mov
push
cmp
cli
xchg
fcomp
sbb
pop
push
sbb
fst
and
mov
nop
mov
or
fstp
imul
mov
add
aas
xchg
out
cli
mov
fstp
cmp
in
popa
mov
adc
pop
cmp
into
push
outs
adc
out
pop
fcom
push
adc
push
add
fbstp
inc
push
push
cs
ins
add
ror
mov
push
push
ret
cmc
sar
mov
stc
and
pusha
add
sub
jmp
lea
ja
clc
pushf
cmc
mov
imul
call
inc
outs
lods
xchg
push
lea
div
popf
dec
movs
jmp
or
inc
ds
lea
dec
fndisi(8087
inc
push
js
xchg
hlt
je
es
mov
shl
xchg
fsub
dec
pushf
add
mov
mov
aaa
shr
push
xchg
in
and
(bad)
cmp
xor
cs
jnp
or
pop
or
cli
pushf
jp
pop
cmp
lea
xor
or
mov
mov
hlt
fldcw
popf
pusha
test
repz
js
mov
mov
push
lahf
mov
pop
jmp
movsx
bswap
mov
not
lea
pushf
jmp
lods
ins
test
cld
lahf
cmp
mov
push
loope
sub
pop
add
push
mov
pop
sub
icebp
jnp
lea
pop
scas
pop
mov
(bad)
outs
jl
fdivr
shr
hlt
sub
ins
enter
jae
mov
test
add
push
xor
scas
add
xor
add
retf
push
cdq
pop
or
mov
adc
fnstenv
sti
adc
or
(bad)
sub
push
dec
pushf
mov
mov
mov
dec
cwde
dec
mov
cmp
jae
fldenv
vmaxsd
mov
mov
mov
adc
das
mov
push
mov
sub
mov
in
leave
jecxz
dec
mov
xchg
push
xchg
xchg
push
loop
mov
add
pop
and
std
iret
daa
cmps
lds
cmp
test
imul
or
cmp
in
int
push
xchg
jnp
pop
or
mov
inc
push
mov
out
ret
ds
fdiv
xchg
rcr
lea
jne
bsf
bsf
add
sub
btc
mov
neg
add
xor
shl
mov
bt
call
jbe
or
jbe
pusha
push
push
lea
jne
not
mov
pushf
pushf
pushf
pusha
pushf
pop
mov
or
call
push
call
inc
add
jae
popa
addr16
outs
js
add
sub
cmps
call
sub
or
sbb
cmps
call
xchg
inc
inc
ret
call
push
call
loop
in
sti
rcl
xchg
push
icebp
dec
out
mov
inc
sbb
cmp
push
lea
enter
ins
daa
mov
mov
in
inc
movs
xchg
(bad)
shl
pop
sbb
(bad)
push
fistp
imul
imul
sub
js
mov
adc
aad
push
inc
push
mov
call
test
or
add
ret
cli
pop
cmp
pushf
mov
pusha
lea
je
bt
jmp
push
call
(bad)
xchg
inc
push
call
jge
jmp
xor
sbb
mov
cs
jge
stos
daa
push
js
cld
(bad)
jge
push
or
push
and
cmps
int3
pop
xchg
jmp
jb
movs
call
popf
sub
les
adc
add
push
mov
test
inc
clc
sbb
sbb
outs
or
je
cs
fistp
push
dec
fcom
fldenv
add
fsub
add
push
jo
inc
call
sahf
sahf
fisttp
mov
idiv
mov
addr16
lock
push
lds
pop
fucomi
cmp
rol
test
imul
sbb
fiadd
jmp
jno
(bad)
nop
jmp
mov
retf
(bad)
push
push
push
call
and
dec
or
push
(bad)
ja
push
adc
bound
cld
cwde
push
sbb
push
xor
das
or
int
push
pop
mov
or
inc
nop
stc
pop
lahf
scas
fidiv
icebp
pop
icebp
sahf
jnp
or
sar
xlat
lea
pop
dec
push
xchg
fld
scas
sub
pop
icebp
mov
scas
fdivr
mov
mov
out
and
ret
stos
mov
xchg
out
sub
icebp
mov
sub
or
imul
test
xor
mov
repz
in
mov
ins
rol
cld
jne
lods
out
in
jp
jnp
call
hlt
bound
outs
ret
push
mov
dec
mov
inc
mov
sub
sub
(bad)
frstor
jno
(bad)
sbb
pop
mov
and
fs
add
cwde
dec
jge
out
add
clc
in
repnz
lods
jge
mov
xor
mov
dec
dec
fsub
add
out
aad
call
push
jne
push
adc
jnp
push
cld
ins
imul
int
push
adc
and
cld
in
mov
mov
jns
test
add
test
shr
xchg
mov
je
(bad)
jmp
and
ins
xchg
sub
xlat
shl
aam
mov
(bad)
fsub
loopne
sahf
mov
inc
and
sub
pop
rol
dec
mov
and
sar
lods
adc
cld
mov
add
icebp
push
xor
mov
pop
push
or
sub
xor
jecxz
push
(bad)
xor
pop
repz
add
cmp
mov
mov
sub
cdq
mov
mov
rcr
sbb
pop
cmps
xchg
iret
cmp
scas
out
call
adc
jmp
call
scas
jp
inc
pop
outs
cs
xchg
jne
ins
fadd
test
sub
xor
in
fstp
add
jae
hlt
out
and
iret
mov
mov
pop
pushf
push
ret
pushf
jmp
(bad)
add
fucom
sbb
add
add
mov
add
add
add
add
sbb
add
add
push
add
add
add
retf
add
add
add
adc
add
add
adc
add
pop
and
add
add
add
add
add
mov
add
and
add
adc
sub
add
adc
add
add
add
ins
out
push
xchg
and
push
leave
cs
mov
push
and
dec
cmps
addr16
retf
lds
mov
add
mov
push
scas
adc
call
mov
fwait
xchg
das
test
fld
inc
aam
sahf
cdq
sbb
cmp
into
out
and
push
inc
sub
jns
iret
jb
pop
push
pushf
cmp
mov
fwait
add
cmp
sbb
xchg
dec
in
retf
jnp
jle
rcr
jmp
call
xor
add
mov
xchg
fcomp
mov
stc
sbb
ficomp
sti
and
jo
sti
(bad)
sub
pop
rol
mov
mov
pop
sbb
das
mov
push
jl
std
add
arpl
mov
(bad)
jbe
mov
pop
cmp
ds
mov
inc
mov
xor
cmp
gs
mov
ins
mov
pusha
mov
adc
loop
fistp
jns
add
and
lock
test
pop
fwait
ins
push
adc
dec
jno
bound
push
div
rcl
jbe
out
int3
aas
sbb
popa
fisubr
sbb
pop
jnp
or
inc
aas
aaa
inc
enter
(bad)
cmps
call
ret
add
xor
ja
xchg
sbb
retf
nop
mov
movs
scas
aaa
sub
push
mov
cmp
arpl
add
mov
inc
dec
icebp
neg
in
xor
out
and
ja
mov
inc
mov
rcl
repz
das
add
mov
in
and
pop
in
cmp
test
and
mov
aad
mov
push
pop
mov
int
adc
pop
test
ja
cdq
dec
jns
mov
push
call
mov
mov
xor
sbb
jl
and
jmp
fs
std
lock
in
and
fdivr
xchg
pop
inc
scas
mov
stos
jle
sar
mov
cmp
jmp
lds
(bad)
rcl
sub
mov
pop
mov
sub
mov
ficom
lldt
xchg
adc
cmps
(bad)
out
xlat
inc
xchg
adc
sti
jbe
push
push
mov
ins
popa
jne
inc
or
inc
test
dec
in
movs
pushf
mov
push
(bad)
jno
jo
test
add
adc
data16
and
stos
and
lods
rol
sub
push
inc
adc
mov
imul
data16
shl
jmp
pop
repnz
inc
and
lods
mov
fs
adc
outs
inc
jg
push
call
cwde
mov
cmp
(bad)
cmp
aam
movs
push
call
sub
(bad)
cmps
call
jecxz
jle
cwde
push
call
push
inc
in
sub
mov
into
dec
call
stos
mov
shr
and
mov
sub
sbb
and
pushf
imul
adc
call
sbb
or
xchg
sub
std
ret
adc
inc
pop
popa
mov
pusha
out
sar
mov
xchg
rcl
stos
and
fst
out
xor
paddd
das
ret
xor
das
cmp
shl
fs
sbb
jo
dec
mov
sub
xchg
adc
ss
pop
arpl
aas
fwait
push
dec
lock
jb
mov
inc
movs
ds
loop
test
gs
fwait
and
jmp
shl
xchg
sbb
popf
test
sbb
bound
xchg
sub
mov
in
leave
mov
mov
ins
xchg
push
push
mov
fcomp
mov
loop
call
sbb
popf
dec
clc
jbe
xor
call
cmp
pusha
push
cmp
lea
jo
push
lea
je
bsf
shr
xadd
mov
rcr
neg
sub
bsr
rcr
shl
shr
neg
bswap
stc
dec
mov
neg
jmp
pushf
xor
sub
stc
test
cmc
or
jmp
not
shl
seta
mov
clc
pushf
and
cmc
add
pusha
push
pushf
mov
lea
jmp
(bad)
jge
xchg
xor
adc
or
pop
push
js
mov
adc
out
les
aas
enter
shr
dec
push
mov
xchg
push
fnsave
pop
vpsrld
mov
stos
test
inc
std
jmp
out
push
cdq
stos
pop
lds
rol
sahf
jne
dec
mov
mov
repnz
icebp
out
and
mov
(bad)
pop
sar
and
jae
mov
setb
mov
not
setb
not
inc
inc
jmp
jge
push
xchg
xor
xor
sbb
mov
mov
ror
leave
mov
xchg
inc
stc
std
fwait
and
cmps
gs
loope
aas
(bad)
(bad)
das
mov
cmps
data16
sub
stc
loop
js
adc
jmp
xchg
pop
pop
cmp
fsubr
leave
fcomp
and
pushf
lea
jne
lea
setnp
movzx
jmp
push
call
ss
call
fidiv
ds
fsub
add
sbb
test
xor
test
ret
jno
cli
adc
out
aad
push
stos
xchg
mov
sahf
jmp
out
rol
mov
jmp
mov
js
into
fistp
cmp
xchg
pop
aas
and
ret
jge
mov
add
dec
sbb
xchg
or
jb
mov
out
cmps
xchg
mov
cs
xchg
mov
enter
js
sbb
pop
dec
ror
jmp
push
mov
jns
mov
jnp
scas
and
add
test
icebp
sub
xor
adc
cwde
xchg
shr
nop
push
or
stc
add
add
xchg
and
sysret
adc
or
push
addr16
scas
pop
xor
mov
xor
xchg
nop
jns
mov
(bad)
pop
pop
sub
and
ins
addr16
(bad)
outs
fidivr
xor
into
retf
aas
test
cmp
arpl
ret
pop
adc
addr16
pushf
or
ret
test
inc
(bad)
jmp
rol
xchg
scas
call
xchg
test
cmp
movs
push
xor
and
inc
cmp
xor
mov
pop
aaa
aas
dec
sub
jg
int3
inc
xchg
rol
push
mov
in
in
hlt
pop
xor
xor
xchg
imul
adc
push
fs
xor
sub
out
ins
stos
sub
adc
ins
dec
frstor
daa
jle
jmp
pop
aas
in
cmc
lea
inc
adc
mov
ins
push
inc
mov
daa
lock
adc
and
popa
add
jge
adc
loope
jnp
pusha
cs
push
and
push
xlat
mov
sti
jmp
fsub
add
cmp
pop
dec
imul
push
mov
sbb
(bad)
and
inc
or
pop
or
pop
leave
xchg
in
cmp
mov
or
cmp
mov
xor
sbb
mov
xor
fwait
push
xchg
pop
call
in
mov
dec
sahf
or
(bad)
sbb
sub
and
and
out
(bad)
stc
addr16
nop
bound
enter
dec
xor
jno
jae
cld
nop
jl
pop
div
push
popa
imul
inc
sar
push
ss
mov
clc
out
xor
packssdw
pop
mov
and
and
aaa
jg
repnz
out
lea
add
and
cdq
cmc
fild
xlat
iret
add
inc
out
in
jmp
jge
push
xor
inc
fimul
in
sbb
stc
push
xchg
shl
fidivr
cdq
push
dec
out
cmc
cmp
clc
je
fst
xor
daa
jae
repnz
ror
mov
dec
cmp
out
xchg
(bad)
enter
xchg
xchg
repnz
xchg
loop
or
retf
mov
mov
pop
inc
test
mov
scas
lods
jle
aas
movs
jne
movs
cmps
arpl
xor
push
fadd
xchg
out
loopne
xor
int
xor
movs
pop
cmc
(bad)
int3
adc
fbstp
mov
dec
dec
sbb
jno
rol
xor
push
mov
sbb
jle
push
inc
add
jmp
call
iret
shl
dec
sbb
retf
popa
clc
dec
sub
test
pop
fsubr
sub
adc
push
adc
daa
xor
jl
aaa
mov
test
clc
push
es
pop
cli
call
jl
jmp
mov
nop
pushf
sub
inc
mov
out
sub
dec
push
jge
sbb
sub
cmps
call
jl
call
push
jmp
push
call
and
bound
mov
mov
mov
in
and
cmp
sub
lock
jmp
fidivr
scas
adc
or
mov
clc
push
call
cs
fldenv
adc
imul
mov
or
addr16
inc
cmp
stos
push
pop
fsubr
push
scas
mov
lds
jmp
clc
xor
inc
pop
pusha
mov
jmp
jmp
xchg
ficomp
or
jo
inc
ins
cmp
jge
push
mov
imul
jns
dec
jmp
int
jo
mov
dec
sub
in
lods
mov
sbb
sbb
sbb
movs
or
xchg
inc
scas
out
add
push
movs
icebp
pop
sbb
mov
into
mov
cmp
sbb
jns
xor
sahf
(bad)
cmp
(bad)
mov
iret
cwde
push
push
mov
dec
pop
stc
xor
pushf
jl
jmp
xchg
push
mov
dec
sbb
mov
call
aad
cmp
add
xchg
cmps
xchg
fdivr
ret
imul
mov
fild
and
(bad)
sahf
(bad)
shufps
cmps
cmps
call
mov
mov
in
or
add
mov
ins
pop
call
lods
ret
lock
add
gs
pusha
fcom
(bad)
lea
not
movsx
movsx
movzx
push
lea
pop
mov
push
lea
call
pusha
push
lea
jne
lea
jmp
gs
push
inc
adc
cli
push
fisttp
dec
sahf
sbb
ins
xchg
outs
push
add
pop
push
pop
cmp
and
mov
sub
retf
call
adc
or
movs
fwait
jbe
outs
rol
push
ret
mov
mov
mov
dec
fsub
add
and
fsub
add
ror
jle
xor
aad
scas
sbb
cmpxchg
sub
fdiv
retf
les
mov
repz
shl
ds
mov
sub
mov
mov
push
jnp
movs
jmpw
xchg
mov
in
xor
imul
xor
int3
adc
stc
mov
mov
cli
sbb
enter
stos
pusha
xor
sar
xor
push
inc
stc
cmp
clc
stc
cmp
jmp
mov
xor
xor
push
sub
xchg
(bad)
sub
cmp
popa
sti
cmp
mov
frstor
mov
in
cmps
xchg
shl
jns
mov
and
xchg
push
loopne
cmp
cmp
je
(bad)
(bad)
movs
mov
sahf
rol
sbb
xchg
cmp
lds
in
mov
(bad)
dec
enter
test
sti
addr16
jmp
fwait
out
cmp
push
addr16
out
xor
push
lock
imul
(bad)
mov
xchg
or
pop
in
leave
js
sub
scas
test
pusha
add
out
mov
out
sbb
imul
adc
dec
adc
cmp
xchg
(bad)
aam
dec
add
sbb
cs
popa
cmp
xchg
daa
dec
xor
mov
and
jg
add
arpl
jb
push
rep
adc
inc
dec
sbb
and
into
cdq
mov
push
leave
arpl
sbb
add
jns
adc
xor
inc
push
add
inc
jmp
push
cdq
mov
shr
xlat
push
cdq
iret
mov
push
push
fdiv
scas
fs
jge
sbb
into
outs
push
dec
xchg
gs
out
xchg
sub
(bad)
inc
adc
test
xchg
dec
in
loope
jo
push
in
add
jb
jge
push
mov
jle
xor
test
pusha
cmc
mov
jl
xor
pop
adc
inc
jbe
push
pop
outs
imul
inc
fs
fimul
jnp
mov
mov
push
xor
add
push
or
xchg
loopne
mov
sbb
xor
jns
adc
adc
dec
stos
jmp
jg
sbb
rol
imul
mov
jns
dec
mov
mov
imul
and
movs
mov
adc
mov
pusha
push
add
push
mov
mov
or
sub
xchg
out
cmp
cmp
xor
movs
jecxz
fisttp
jmp
adc
push
pusha
ret
lea
outs
xor
fnstcw
cmps
test
fld
adc
jnp
xor
das
pop
mov
arpl
jg
inc
mov
daa
or
push
nop
cmc
nop
cdq
cmp
inc
jae
adc
popa
fld
bound
xchg
push
xchg
xor
mov
lea
mov
inc
and
int
pop
xor
data16
xor
les
shl
add
fisubr
cli
aad
call
fisttp
inc
and
cmp
push
add
add
xor
xor
mov
add
bound
je
xor
xor
jmp
push
call
stos
xor
cli
fsub
add
jnp
xor
ins
sbb
or
and
xchg
out
mov
xchg
xchg
adc
sub
push
sar
mov
ret
in
jns
scas
mov
cmp
or
arpl
xchg
add
adc
inc
pop
xor
sub
rcl
movs
jmp
or
retf
bound
ins
push
mov
adc
push
test
push
call
adc
imul
add
push
push
jmp
push
call
inc
popf
enter
add
cmps
call
cs
mov
jnp
xor
ret
out
cdq
mov
inc
ds
shr
jne
cli
bound
cmp
xlat
adc
sbb
ret
jmp
pop
add
push
fidiv
sti
sbb
jmp
add
mov
push
mov
leave
call
jbe
cld
sbb
inc
maxps
push
add
out
imul
adc
dec
mov
mov
fbstp
adc
sbb
adc
dec
shl
inc
jne
add
(bad)
sub
in
jno
hlt
jle
icebp
je
push
lods
fist
inc
ror
ins
jnp
sub
cmp
cmp
sbb
inc
mov
cmovl
xor
sbb
push
ret
cmp
scas
inc
js
stc
or
sub
xchg
int3
dec
cli
mov
xchg
pop
cli
cmps
sbb
hlt
mov
push
pop
inc
sub
daa
dec
or
das
pushf
adc
push
lods
stc
dec
test
or
ret
shr
cmp
mov
push
add
bsr
bt
mov
mov
xor
stc
test
repnz
jmp
bt
jmp
bswap
mov
pop
pusha
push
ret
lea
jae
rol
bsr
mov
setb
lea
mov
bsf
btr
shr
xor
mov
bt
call
add
pop
js
xor
in
and
(bad)
adc
jne
sub
(bad)
adc
cmp
add
mov
popa
lds
cwde
hlt
cli
push
push
mov
add
xchg
hlt
dec
dec
in
gs
xchg
xor
ficom
mov
pop
fcom
rcr
adc
sbb
inc
scas
lahf
pop
add
and
push
add
dec
outs
xchg
aaa
repnz
adc
xchg
and
outs
fwait
jno
cmp
pusha
cmp
cmp
lahf
pop
push
cmp
xor
std
repz
(bad)
cli
aam
pop
int3
daa
or
das
push
arpl
stos
arpl
outs
sbb
dec
pop
clc
or
mov
fisub
out
(bad)
stc
xchg
and
adc
test
scas
iret
popf
cmp
adc
les
pop
cdq
arpl
cmp
push
dec
jle
lods
cs
js
push
push
(bad)
into
test
je
test
or
lods
dec
mov
push
jle
jo
jno
fist
xor
push
paddb
cmps
call
or
fsub
add
mov
xchg
add
and
adc
xor
push
enter
jnp
outs
inc
mov
lods
push
push
adc
jne
and
(bad)
(bad)
addr16
and
jmp
daa
or
jmp
rcl
mov
and
xchg
sti
cmp
push
rcr
push
mov
pop
retf
loop
or
fisubr
js
fimul
das
rcl
mov
add
and
pop
movs
xor
cmp
mov
std
xchg
sahf
pushf
lea
bswap
mov
push
lea
call
jmp
lea
jne
call
add
push
imul
ins
ins
outs
arpl
aas
jge
jbe
xor
fsubp
(bad)
or
ret
mov
ror
pop
pop
loope
mov
add
pop
xchg
retf
xor
sbb
push
or
popa
or
loop
pushf
xor
cmp
les
dec
cmp
int3
adc
sar
or
cmp
(bad)
aad
pop
adc
inc
je
adc
cmps
add
fdiv
push
xchg
lds
cmp
cld
jmp
and
shl
fisub
sbb
nop
push
add
push
add
nop
push
add
and
es
add
add
add
push
call
push
jge
fsub
add
fs
jg
jb
call
push
pushf
rep
pop
mov
pushf
mov
push
push
lea
jmp
push
call
fsubr
fsub
add
cwde
jns
add
dec
gs
outs
arpl
inc
jb
jne
inc
fs
gs
bound
jae
cs
xchg
jne
xor
imul
mov
and
mov
mov
push
cli
test
adc
dec
shr
sbb
jbe
jnp
out
pop
fs
add
in
nop
and
mov
shr
stos
mov
(bad)
adc
or
fistp
dec
mov
dec
rol
xor
cwde
int
or
ins
cmc
or
add
fild
and
repz
test
ins
adc
scas
daa
cli
jmp
mov
jmp
call
mov
mov
lea
jae
test
pusha
jmp
push
call
pop
push
push
call
or
fwait
push
jne
xor
movs
dec
pop
aas
aam
and
pushf
push
xchg
cdq
mov
cmps
inc
lds
stos
mov
sub
fild
outs
int3
xor
mov
(bad)
cmp
std
mov
mov
sbb
popa
adc
sub
test
sub
sti
pop
dec
neg
repnz
mov
mov
pop
icebp
and
jle
mov
mov
mov
adc
adc
xor
or
jb
pushf
lea
call
push
cmc
mov
sub
pusha
lea
jne
push
pusha
pushf
mov
lea
call
pushf
pushf
mov
lea
jmp
mov
pusha
mov
shl
rol
pop
btc
mov
movsx
add
shl
movzx
mov
push
mov
btc
lea
rcr
cmc
mov
sub
jg
mov
cmc
test
dec
sub
push
pusha
xchg
lods
not
mov
stc
bt
rol
shl
not
dec
ror
shr
add
shl
and
pushf
ror
neg
cmc
add
call
push
call
ins
mov
xor
fld
mov
(bad)
fnstcw
lock
stos
rol
(bad)
jmp
dec
ret
sub
mov
stc
popa
lods
inc
or
nop
stos
lock
mov
add
or
mov
and
jb
mov
add
sbb
pop
popa
stc
lods
sbb
inc
mov
cdq
hlt
pop
cmp
add
sub
fdivr
(bad)
out
mov
cmp
jns
mov
sar
cmp
(bad)
dec
stos
or
xor
lds
push
call
and
in
push
jae
xor
xchg
adc
js
pop
sar
add
and
in
or
push
push
pop
shl
dec
sbb
(bad)
jl
neg
mov
sldt
pop
push
sahf
daa
dec
jmp
xlat
int
jae
xor
fs
inc
in
fisttp
or
push
mov
out
lods
adc
enter
mov
dec
ret
fst
or
jmp
scas
aas
jmp
pop
mov
xor
neg
sub
pop
test
and
cmc
inc
mov
pop
aad
jbe
ds
push
movs
(bad)
sti
shr
xchg
push
or
push
mov
mov
mov
int
(bad)
rcl
int
inc
xor
sub
push
jbe
mov
sbb
clc
inc
ins
iret
daa
xchg
stos
fcmovbe
int3
mov
or
mov
pushf
pop
imul
xchg
push
call
pusha
arpl
pop
jno
xor
ins
rcl
fisubr
mov
in
aaa
mov
je
or
sahf
sub
inc
push
shr
pop
ins
shr
jo
(bad)
iret
mov
lods
push
in
add
push
dec
xor
test
jnp
push
jecxz
mov
sbb
mov
push
and
push
test
popa
and
iret
push
jae
popa
or
out
rcr
or
iret
pushf
test
(bad)
(bad)
movs
cmp
xchg
push
call
std
jne
and
xor
cmp
jae
push
mov
xchg
jo
cmp
push
or
sub
shl
loopne
adc
stos
dec
lds
int
mov
pop
xor
mov
xor
pop
sub
push
sbb
iret
imul
jg
inc
sub
daa
mov
gs
cmp
call
neg
push
clc
mov
add
std
pusha
push
popfw
call
push
call
repz
jl
lea
jne
shl
mov
cmc
bt
add
cmp
jmp
push
call
arpl
iret
push
call
mov
jmp
retf
lea
jns
pop
call
add
adc
sbb
inc
aaa
loop
jmp
mov
retf
idiv
adc
xchg
dec
loop
inc
shl
(bad)
xlat
or
mov
icebp
adc
jmp
repnz
mov
mov
(bad)
loopne
adc
xchg
scas
cmp
jo
or
mov
or
sahf
not
int3
xchg
xchg
sbb
adc
jle
sti
push
xchg
in
jg
jne
lea
bswap
mov
pushf
pusha
pusha
push
lea
jmp
mov
call
xchg
push
dec
pusha
shl
setp
call
call
bt
call
xchg
call
xor
xor
nop
xor
imul
into
cmp
stos
jne
lahf
xor
adc
jmp
iret
cmps
mov
adc
into
inc
xor
retf
dec
test
pop
xchg
fstp
dec
movs
or
gs
mov
cmc
cmc
jle
(bad)
mov
fist
xor
mov
aaa
sar
dec
sbb
(bad)
cmps
call
xchg
movs
mov
and
jb
push
call
push
call
jp
popa
ja
outs
push
ror
lea
arpl
pop
ror
inc
sbb
add
adc
mov
inc
cmps
push
outs
loop
or
imul
sub
mov
add
scas
pusha
mov
add
jno
imul
add
xchg
or
pop
cmc
rcr
xchg
cmp
push
mov
mov
xor
pushf
push
push
ret
push
call
jns
adc
xor
inc
sub
or
sub
sbb
test
popa
jmp
push
fisttp
pusha
movs
xor
call
pop
dec
inc
inc
rcl
pop
xor
mov
mov
movs
shl
jo
out
test
sahf
jp
dec
and
aaa
fwait
pop
ret
(bad)
scas
dec
movs
scas
or
mov
xor
rcr
stc
mov
pushf
bt
mov
xchg
bsr
mov
stc
sub
push
push
rep
bswap
pusha
movzx
mov
pushf
pushf
pushf
push
lea
jmp
jbe
xor
addr16
and
sub
test
ins
jge
jp
push
imul
cmc
push
push
stc
daa
repz
pusha
xchg
or
and
jnp
adc
in
mov
stos
clc
push
ror
push
call
(bad)
pop
(bad)
lods
mov
xor
leave
cmps
bound
imul
icebp
repz
push
or
repnz
lahf
scas
push
pop
dec
sub
outs
cwde
nop
gs
retf
imul
je
aas
(bad)
push
cld
xor
dec
fs
pop
fdivr
pop
adc
lock
lock
js
shr
push
pop
mov
dec
jb
ja
xor
jg
loop
xor
mov
pusha
ins
mov
jmp
cmps
add
dec
aaa
lea
push
push
push
adc
dec
xchg
lods
add
xchg
subps
dec
and
or
popf
mov
fimul
dec
cmps
retf
rol
imul
mov
xchg
fadd
add
out
or
ror
(bad)
mov
pusha
into
sub
popf
adc
mov
push
xor
xor
cs
data16
push
call
cld
btr
bt
mov
shl
pusha
btr
rcr
mov
bsf
mov
mov
cmc
cmc
xor
cmc
cmc
stc
repnz
pusha
lea
jne
neg
not
ror
btr
mov
adc
stc
sub
movzx
shr
mov
bt
pusha
sub
clc
push
bt
test
push
pop
bt
cmc
cmp
pushf
pushf
pushf
lea
ja
rcl
shr
inc
sub
lea
add
rcl
clc
mov
rcl
ror
dec
mov
jmp
pushf
jmp
add
test
cmp
bt
clc
mov
pop
call
mov
lea
push
jmp
cmp
imul
jp
cmps
in
or
popa
cmp
add
dec
add
xlat
inc
pop
clc
ins
bound
mov
and
rcl
adc
adc
(bad)
sbb
jp
push
sub
mov
outs
pop
sti
das
push
adc
aam
loopne
bound
lds
dec
call
push
xor
push
popa
xchg
imul
popa
dec
jb
data16
test
gs
and
xchg
test
push
add
sub
mov
sub
push
ss
outs
test
ds
xlat
cwde
cmp
jl
and
dec
or
xchg
xor
add
lds
jp
fwait
inc
or
push
push
xor
sbb
mov
pushf
mov
lock
inc
jno
loopne
jmp
and
jmp
int
push
fidivr
jno
dec
push
mov
adc
mov
push
fcomi
into
xor
arpl
xchg
sub
adc
pop
adc
xor
xchg
mov
pop
mov
das
sar
fstp
test
es
adc
outs
pop
pop
cmp
neg
sahf
imul
ja
(bad)
cmps
call
xchg
push
call
(bad)
shl
push
call
add
inc
outs
push
outs
imul
imul
and
lea
jne
pusha
call
push
call
mov
push
inc
imul
addr16
movs
mov
jl
xchg
jo
mov
mov
shr
jns
retf
mov
aaa
adc
add
or
(bad)
div
push
xor
sub
mov
and
out
sbb
leave
push
pop
pop
or
into
mov
lea
imul
push
cmp
mov
cli
cmp
clc
nop
test
stos
stc
aad
call
cmp
dec
ins
stos
imul
xchg
nop
jl
ss
add
jns
lahf
scas
and
push
cmp
(bad)
and
loop
sub
dec
inc
enter
pop
inc
call
mov
inc
xchg
loopne
test
inc
and
lea
mov
test
call
sub
out
push
and
add
xor
sub
add
sub
(bad)
int3
or
cld
retf
add
jmp
add
push
add
add
js
fsub
add
mov
outs
push
xor
sbb
sub
fmul
mov
jge
mov
push
icebp
das
enter
popf
add
xor
data16
fdiv
(bad)
int3
add
sbb
pop
ss
hlt
push
out
shl
jp
in
loop
jge
scas
jae
sub
ins
mov
hlt
push
pop
gs
(bad)
push
call
stos
sbb
aad
(bad)
cmps
call
pop
adc
push
call
add
add
add
pushf
push
lea
jo
push
movzx
lea
bswap
push
movzx
jmp
pop
mov
call
shl
jmp
stc
bt
pusha
push
pop
cmp
jmp
jmp
rcr
btr
mov
ror
dec
mov
pusha
add
pusha
jmp
mov
pusha
mov
lea
jmp
lea
jl
cld
push
movsx
mov
jmp
mov
movsx
mov
not
mov
pop
lea
mov
pushf
pushf
push
ret
cmp
pusha
call
mov
pushf
not
mov
push
push
cmc
not
stc
stc
push
and
call
mov
pusha
mov
bswap
mov
pushf
mov
push
pushf
pop
cmc
ror
shrd
push
pop
movsx
rcr
bt
rcr
mov
test
mov
test
sbb
call
call
shl
mov
mov
push
pushf
pushf
pop
push
push
pop
mov
mov
lea
jmp
pushf
pop
cmp
stc
sar
push
pop
sbb
mov
ror
sar
mov
adc
not
stc
sar
add
bt
add
xadd
ror
btr
not
add
stc
lea
bts
shl
sub
push
lea
pusha
push
lea
jmp
pushf
pushf
pop
jmp
jmp
movsx
lea
ror
bswap
rcr
pushf
add
pushf
movzx
call
push
movsx
not
bswap
push
pushf
pushf
pusha
pushf
pop
bt
inc
movzx
pop
push
pop
xor
jmp
mov
jmp
mov
cmp
test
add
pusha
push
mov
push
mov
mov
push
lea
jmp
push
mov
pushf
mov
pusha
mov
mov
lea
jmp
btc
mov
jmp
dec
pushf
add
jbe
cmc
clc
xchg
push
bt
add
stc
pusha
add
bt
stc
pusha
sub
jmp
push
mov
pushf
push
push
pushf
pop
pushf
pushf
pushf
push
pop
push
mov
lea
jmp
lea
cmp
sub
bswap
pusha
mov
bswap
lea
pusha
mov
lea
jmp
jmp
clc
not
jmp
push
pushf
pop
jmp
test
pusha
stc
clc
shrd
push
mov
call
jmp
mov
not
not
pushf
mov
not
mov
not
mov
lea
push
pop
xchg
pushf
bswap
jmp
mov
pushf
pop
pushf
call
add
pusha
pushf
pushf
mov
push
jmp
pushf
dec
cmc
mov
call
mov
jmp
not
movzx
mov
push
mov
jmp
cld
pusha
pusha
mov
rep
movzx
stc
mov
cld
mov
cmp
pushf
cmp
clc
push
popf
mov
lea
jmp
pushf
push
mov
movsx
mov
call
push
div
pusha
mov
pusha
mov
pushf
mov
call
mov
mov
lea
jne
pushf
mov
mov
pusha
push
mov
pushf
lea
jmp
sar
sub
mov
adc
rol
mov
shl
cmc
mov
pusha
clc
add
pushf
push
test
clc
shld
jmp
mov
call
mov
jmp
xchg
call
jmp
pusha
lea
jp
pusha
pushf
mov
jmp
push
call
sub
pusha
shl
pusha
push
jmp
mov
call
call
push
pop
mov
push
lea
jmp
call
sub
push
pushf
mov
mov
mov
pushf
mov
jmp
push
xchg
push
pop
pusha
bswap
mov
movzx
push
mov
movzx
mov
not
jmp
jmp
mov
push
lea
jmp
mov
push
push
pushf
mov
lea
jmp
call
mov
pushf
mov
pushf
lea
jmp
mov
jmp
cld
mov
pushf
push
pusha
rep
inc
xchg
shrd
mov
clc
lea
mov
cmc
cmc
push
popf
mov
lea
jmp
mov
not
mov
cmp
cmp
sub
cmp
shr
jmp
mov
xchg
mov
jmp
pusha
pushf
mov
mov
bswap
bswap
movzx
mov
call
mov
pushf
push
lea
jmp
and
dec
sub
pusha
pushf
pushf
call
btc
bsr
shr
ror
mov
stc
mov
bt
add
call
mov
pop
movsx
movsx
movzx
mov
pop
jmp
push
jmp
bswap
mov
pushf
bswap
movsx
pushf
pop
movsx
btc
push
pop
jmp
mov
xadd
rcl
mov
shrd
xor
pusha
mov
call
pushf
mov
mov
jmp
clc
not
or
jmp
sub
bt
rcl
mov
cmp
clc
pusha
add
pusha
stc
sub
jmp
mov
push
mov
push
ret
mov
pop
call
movzx
pop
mov
pushf
bswap
mov
pop
push
bswap
xchg
mov
xchg
movsx
mov
seta
mov
push
mov
mov
push
push
mov
push
ret
movsx
mov
pop
mov
xchg
pusha
setbe
mov
movsx
mov
setge
pop
xchg
pusha
not
pop
pushf
mov
jmp
pushf
pop
mov
mov
call
push
pop
shrd
bts
push
rcr
inc
btr
btc
mov
pushf
not
adc
not
and
sar
call
pushf
xchg
push
push
pop
call
mov
lea
mov
mov
mov
not
pushf
mov
xchg
xchg
mov
pusha
pushf
pushf
pop
add
btr
dec
push
pop
ror
shr
mov
and
neg
push
neg
mov
movsx
lea
ror
bsf
not
btr
add
bts
bsr
not
bsf
lea
lea
btr
cmc
sub
pusha
bswap
pusha
lea
mov
pushf
lea
jmp
mov
mov
mov
mov
lea
jmp
call
mov
xchg
lea
mov
pushf
pop
shl
push
pop
rol
bts
rol
shld
mov
rcl
bt
clc
btr
mov
ror
test
inc
ror
not
bsr
bt
add
lea
not
and
xchg
neg
bt
lea
test
pop
shl
sub
jmp
mov
push
bswap
call
xchg
xchg
mov
movzx
mov
xchg
lea
ja
pop
jmp
not
add
mov
clc
sub
pushf
pusha
push
call
mov
pushf
mov
pushf
mov
lea
jmp
cmc
or
bts
xor
xor
jns
btc
neg
jmp
lea
mov
push
mov
jmp
sub
jmp
jmp
xchg
jmp
sub
jmp
jmp
mov
mov
lea
jmp
pushf
push
mov
mov
pusha
mov
lea
jmp
sbb
push
mov
adc
mov
ror
not
bswap
rol
ror
add
xchg
adc
not
call
cmc
mov
sub
pusha
stc
shr
call
pushf
mov
push
lea
seto
not
mov
mov
jmp
bt
sub
bt
cmc
test
bt
add
mov
sub
pusha
mov
mov
mov
pushf
push
lea
jmp
jmp
sub
call
mov
mov
mov
mov
lea
jmp
push
push
mov
call
cmp
or
cmp
xor
lea
js
pusha
pushf
pusha
inc
push
mov
dec
mov
pushf
lea
jne
push
mov
pusha
mov
lea
jmp
call
pushf
movzx
mov
pushf
mov
jmp
mov
mov
pushf
pop
push
pushf
lea
jge
pop
pusha
mov
push
lea
jmp
call
mov
pushf
pushf
push
pusha
lea
jmp
sar
not
bts
mov
cmp
add
jmp
mov
mov
mov
mov
mov
lea
jmp
jo
pusha
xchg
bswap
mov
pushf
not
bswap
jmp
pushf
mov
push
lea
jmp
call
bswap
jmp
bts
push
pop
rol
shl
shld
mov
push
bsf
not
mov
cmc
shr
not
btr
bsr
clc
movsx
add
jmp
mov
not
mov
jmp
pushf
pusha
push
mov
not
mov
push
mov
movzx
movzx
movsx
bswap
mov
movsx
pop
pop
mov
jmp
mov
pusha
push
pushf
lea
jmp
test
push
cmp
pusha
pusha
push
lea
ja
sub
inc
shl
rdtsc
mov
add
rol
lea
aad
setae
pushf
sub
cwde
stc
lea
bsf
add
call
call
call
sets
jmp
bsf
aaa
mov
xor
shr
stc
cmc
mov
stc
stc
stc
add
pusha
mov
pushf
mov
lea
jmp
mov
pusha
xchg
jmp
mov
not
pushf
mov
xchg
pop
pushf
movsx
pop
push
call
sar
not
shl
xor
lea
push
sub
btr
btc
btc
clc
mov
pusha
sub
mov
stc
sub
bt
shld
add
lea
stc
sbb
mov
dec
add
not
inc
btr
ror
bts
ror
inc
bts
clc
btc
add
jmp
dec
pushf
clc
stc
pushf
neg
call
cmp
mov
cmc
add
test
stc
lea
cmc
stc
clc
neg
pusha
bt
stc
clc
rol
stc
clc
jmp
pushf
pop
add
push
pop
xchg
not
shld
mov
adc
bt
sar
or
mov
btc
clc
rol
bts
not
bsr
push
add
movzx
push
not
push
rcl
shl
bts
lea
adc
ror
sub
jmp
mov
mov
pushf
pushf
pushf
lea
jmp
movsx
pushf
mov
mov
xchg
mov
pushf
pop
pusha
xchg
push
mov
lea
jmp
jmp
mov
or
add
mov
bsr
push
bswap
xadd
not
clc
btr
add
jmp
jmp
bswap
lea
push
jmp
cmp
mov
test
cmp
cmc
sub
bt
mov
bt
test
add
push
mov
push
pushf
lea
jmp
mov
add
pop
bts
pop
shr
popf
movzx
lahf
cwde
pop
call
lea
mov
bswap
bswap
bswap
movzx
mov
xchg
bswap
pop
xchg
bswap
mov
mov
pushf
pop
bsf
rol
movzx
push
pop
rcr
call
movsx
pop
mov
mov
pusha
lea
movzx
mov
mov
jmp
rdtsc
aaa
mov
push
btc
bsf
add
mov
bt
add
jmp
mov
pushf
mov
push
mov
lea
jmp
pushf
cmp
shrd
not
inc
sub
btc
mov
cmc
call
call
mov
mov
mov
xchg
not
pusha
pushf
pusha
mov
bswap
mov
mov
pop
lea
lea
mov
mov
pop
movsx
jmp
mov
call
btc
not
jmp
mov
not
movsx
mov
jmp
aad
stc
mov
bt
mov
cmc
bt
clc
add
pushf
jmp
pushf
pop
jmp
mov
bswap
push
lea
push
movsx
push
bswap
movsx
jmp
call
sub
pushf
mov
call
call
mov
movsx
bswap
call
rcr
push
pop
and
mov
lea
shl
bsr
shl
mov
not
pop
not
cmc
pop
ror
adc
add
stc
lea
movzx
not
pusha
call
rcl
mov
and
test
mov
bt
bt
add
jmp
movsx
pushf
pop
pop
clc
push
pop
inc
cmp
test
mov
neg
mov
or
xadd
not
add
rcl
add
jmp
lea
jmp
bswap
mov
call
xchg
push
mov
bswap
movzx
push
pushf
call
pushf
call
pusha
lea
cpuid
call
add
std
std
push
popf
push
mov
lea
jmp
not
bswap
mov
pop
pushf
pop
jmp
push
mov
push
xchg
xchg
xchg
bswap
push
movsx
push
call
mov
call
mov
shl
bsr
ror
shrd
mov
btc
not
add
bsr
add
rol
xchg
not
bswap
test
movzx
add
lea
sar
or
dec
sub
jmp
mov
mov
movzx
push
movzx
bswap
mov
bswap
pushf
pushf
lea
mov
pushf
xchg
bswap
xchg
mov
jmp
pusha
mov
pushf
pushf
lea
jmp
call
mov
jmp
std
pushf
mov
jmp
jmp
bswap
xchg
pushf
xchg
movsx
pop
mov
pusha
pushf
pop
cmc
pushf
shr
push
pop
ror
stc
pop
bswap
mov
dec
mov
not
not
dec
mov
bswap
add
stc
bsf
and
movzx
not
xor
lea
inc
stc
sub
pushf
lea
pushf
lea
jmp
call
inc
shl
mov
pushf
cmc
sub
jmp
pusha
pusha
mov
push
bswap
pop
mov
pushf
jmp
add
call
mov
mov
jmp
not
lea
movzx
pushf
pop
btc
bswap
clc
push
not
sub
push
shr
movzx
push
mov
add
not
rol
add
sar
or
btc
bts
not
shld
xchg
lea
lea
or
add
sub
jmp
mov
mov
mov
pusha
lea
jmp
mov
sbb
shrd
shr
mov
cmc
or
add
not
call
mov
cmp
test
jmp
mov
pop
call
pusha
pushf
div
mov
mov
push
pushf
mov
push
pushf
pop
jmp
mov
call
call
not
mov
movsx
xchg
lea
movzx
pusha
xchg
movzx
call
and
sar
movzx
neg
movzx
pusha
clc
test
add
pushf
pusha
mov
call
movsx
mov
pusha
pushf
not
bswap
mov
pop
push
movzx
mov
mov
not
lea
mov
mov
movzx
pushf
mov
lea
xchg
jmp
jmp
shr
mov
xor
dec
clc
mov
cmp
test
pusha
bt
sub
pusha
push
jmp
rcl
mov
stc
call
movsx
not
bsr
aad
sbb
aam
mov
pusha
test
jmp
pushf
call
call
mov
pusha
pushf
pop
std
pusha
cld
bswap
xchg
lea
mov
jmp
call
lea
sbb
sub
mov
not
pushf
pushf
lea
push
lea
jmp
mov
pushf
pushf
pushf
pop
pushf
push
pop
mov
mov
mov
mov
lea
jmp
mov
and
movsx
bsr
mov
push
add
call
bt
sbb
clc
add
movzx
test
add
bt
pushf
push
jmp
add
cmp
clc
lea
jbe
stc
cbw
bt
bt
pusha
test
cwde
bt
test
sub
mov
call
mov
push
not
mov
xchg
bswap
lea
lea
xchg
call
xchg
pushf
pop
ror
rcl
push
pop
mov
and
mov
lea
mov
or
not
xchg
bsr
add
btc
push
rcr
xchg
not
bsr
lea
xor
pushf
bsr
not
sub
jmp
setp
neg
mov
xor
add
and
xor
bt
xor
mov
mov
pushf
cmp
test
shl
bt
clc
shr
pusha
test
call
lea
not
jge
aaa
mov
lahf
xor
rcr
stc
pop
bt
ror
neg
shr
pop
stc
popf
lea
setg
lahf
pushf
mov
movsx
jmp
xchg
call
call
pop
mov
movsx
mov
mov
jmp
neg
rol
not
push
adc
shr
movzx
add
rol
sbb
add
not
neg
and
movsx
bsr
lea
btc
inc
lea
sub
not
mov
push
pusha
lea
jmp
sub
pusha
pushf
mov
mov
mov
push
mov
push
lea
jmp
add
call
mov
push
pusha
push
lea
jmp
mov
mov
mov
pushf
call
mov
mov
pushf
push
pop
pushf
lea
jmp
push
pop
pushf
mov
lea
jmp
pushf
rol
pushf
clc
add
test
cmp
clc
sub
cmc
sub
call
push
pop
mov
pushf
pushf
lea
jmp
bswap
lea
mov
pusha
pusha
lea
jmp
mov
stc
sub
jns
pushf
mov
mov
pusha
pushf
mov
lea
jmp
push
pusha
mov
mov
pushf
lea
jmp
cdq
sar
lea
jmp
mov
push
lea
lea
mov
jo
push
movsx
lea
bswap
movsx
push
pusha
lea
movsx
mov
call
lea
bswap
lea
cld
call
call
call
lea
jmp
cmp
and
lea
jb
push
mov
mov
push
pushf
pop
mov
pushf
push
pop
pushf
pusha
push
lea
jmp
mov
mov
mov
mov
mov
jmp
pushf
pop
jmp
push
mov
push
call
sar
jmp
lea
jns
rol
test
cmc
clc
cmp
add
stc
jp
sub
push
call
pushf
pop
pusha
pusha
push
pop
push
push
lea
jmp
pusha
mov
cmp
pushf
jmp
btr
lea
btr
ror
dec
bsr
bsr
bsf
and
call
shrd
test
mov
rol
stc
bsf
test
mov
call
btc
movzx
sub
test
shl
bt
sub
mov
dec
movzx
neg
call
cmp
pop
pop
add
push
pop
add
cmp
movs
dec
pop
add
cmp
mov
pop
add
pop
add
aaa
pop
add
push
pop
add
cmp
cmove
popa
push
pop
add
pop
add
pop
add
push
pop
add
cmp
lea
pop
add
pop
add
pop
add
inc
pop
add
pop
add
cmp
mov
dec
pop
add
pop
add
pop
add
inc
pop
add
push
pop
add
cmp
mov
pop
add
push
pop
add
push
pop
add
pop
add
inc
pop
add
cmp
(bad)
cmp
pusha
xor
mov
xor
mov
pop
add
pop
add
cmp
adc
add
pop
add
inc
pop
add
pop
add
pop
pop
add
pop
add
cmp
sbb
pop
pop
add
pop
add
inc
pop
add
inc
pop
add
add
cmp
mov
push
pop
add
pop
add
pop
pop
add
inc
pop
add
cmp
dec
push
pop
add
pop
add
pop
add
xor
dec
dec
pop
add
cmp
sbb
dec
pop
add
push
pop
add
pop
add
pop
pop
add
inc
pop
add
inc
pop
add
push
pop
add
inc
pop
add
pop
add
pop
add
cmp
sbb
xor
retf
inc
pop
add
ss
add
push
pop
add
cmp
out
ss
add
inc
pop
add
push
pop
add
pop
add
inc
pop
add
cmp
movs
dec
pop
add
push
pop
add
pop
add
inc
pop
add
pop
pop
add
cmp
hlt
dec
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
ss
add
inc
pop
add
inc
pop
add
inc
pop
add
cmp
mov
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
pop
add
inc
pop
add
pop
add
push
pop
add
inc
pop
add
dec
pop
add
pop
pop
add
dec
pop
add
inc
pop
add
push
pop
add
ds
add
push
pop
add
pop
add
pop
add
inc
pop
add
ss
add
pop
pop
add
pop
add
inc
pop
add
pop
add
pop
add
add
pop
pop
add
ss
add
push
pop
add
push
pop
add
cmp
and
pop
add
pop
pop
add
inc
pop
add
cmp
inc
inc
pop
add
inc
pop
add
inc
pop
add
push
pop
add
pop
pop
add
pop
add
pop
add
pop
add
inc
pop
add
pop
add
push
pop
add
inc
pop
add
push
pop
add
inc
pop
add
pop
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
aaa
pop
add
push
pop
add
inc
pop
add
cmp
dec
push
pop
add
inc
pop
add
pop
add
push
pop
add
pop
add
push
pop
add
inc
pop
add
pop
add
inc
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
pop
pop
add
pop
add
inc
pop
add
ss
add
cmp
pop
add
push
pop
add
pop
pop
add
pop
add
inc
pop
add
pop
add
pop
add
fdiv
(bad)
push
fmul
bt
sub
bt
stc
add
mov
test
stc
cmp
mov
cmc
jmp
jmp
ror
or
test
and
bsf
test
mov
cmp
pusha
sub
call
pushf
pop
mov
push
pop
pushf
lea
jmp
pushf
mov
jmp
pushf
lea
lea
push
pusha
pushf
pushf
lea
jmp
jmp
mov
call
pushf
mov
jmp
jmp
test
btr
shl
mov
sub
add
pushf
mov
jmp
pop
pushf
mov
push
lea
jmp
jae
push
mov
mov
lea
jmp
rol
mov
rcl
rcr
lea
mov
or
rcl
and
mov
clc
add
cmc
pusha
sub
je
shrd
pusha
pusha
call
mov
btc
add
movzx
pushf
not
add
sbb
shrd
lea
lea
rcl
sub
pusha
movsx
lea
push
push
push
pushf
lea
jmp
push
call
stc
movzx
pusha
mov
rol
pushf
mov
test
call
jmp
jmp
call
jmp
mov
pushf
pushf
push
lea
jmp
mov
call
pushf
cmc
add
mov
push
push
call
pushf
pop
mov
mov
push
push
pop
mov
pushf
pushf
lea
jmp
jmp
mov
pusha
pushf
push
push
lea
jmp
mov
lea
cmc
mov
jmp
pop
call
bsr
mov
pusha
pushf
jmp
shld
sbb
mov
pusha
test
cmp
cmc
add
pusha
jmp
rol
mov
bt
stc
call
pushf
pop
jmp
cmc
pushf
not
bt
cmc
sub
push
jmp
call
pusha
pusha
mov
xchg
pop
mov
jmp
push
mov
push
pop
push
pushf
push
mov
lea
jmp
pusha
cwde
mov
cwde
not
mov
jmp
adc
rdtsc
cmc
sub
pusha
mov
mov
push
mov
pushf
push
pushf
push
lea
jmp
bt
test
stc
mov
adc
pushf
rcl
mov
cmp
push
sub
push
shr
pusha
call
pusha
xchg
lea
not
xchg
xchg
mov
mov
pop
jmp
pushf
pop
pushf
call
pushf
call
and
das
mov
test
test
clc
sub
clc
add
pushf
push
pushf
pop
call
sub
push
mov
mov
lea
jmp
mov
call
btc
mov
neg
shl
rcl
mov
push
jmp
pushf
clc
cmc
xchg
pusha
add
bt
test
mov
add
stc
pusha
sub
push
pushf
push
jmp
cmc
pop
shld
not
shl
lea
shrd
sub
not
movsx
mov
pushf
push
mov
push
lea
jmp
mov
pusha
lea
jmp
pop
movsx
pushf
pop
neg
shl
push
pop
or
mov
or
rcl
shl
mov
not
not
add
add
bsr
shld
rol
not
cmc
lea
cmc
sub
sub
jmp
cmp
add
pushf
mov
pushf
pushf
pushf
pop
pushf
jmp
add
mov
pushf
mov
lea
jmp
movzx
mov
mov
call
mov
call
rcr
add
call
cmc
pushf
add
bt
add
call
cmp
add
jmp
cwde
jmp
not
pushf
call
pusha
mov
push
pushf
push
lea
jmp
jmp
not
push
mov
lea
pushf
pop
not
call
stc
cbw
call
setae
xadd
shl
mov
sar
sub
neg
mov
push
push
sub
bt
test
shl
jmp
push
mov
pushf
pusha
lea
jmp
movsx
mov
pusha
mov
push
movzx
mov
pop
movzx
mov
movzx
push
mov
jmp
btc
call
mov
mov
push
pushf
lea
jmp
pop
jmp
pop
pusha
bswap
push
call
push
pusha
cmc
cwde
clc
cmc
sub
push
pushf
mov
push
push
lea
jmp
movzx
shrd
stc
xor
rol
bt
movzx
neg
mov
lea
not
jmp
call
pushf
mov
mov
pushf
lea
jmp
inc
cmp
mov
bt
pusha
clc
call
call
not
pushf
mov
not
not
push
mov
pop
jmp
stc
and
pushf
call
lea
jnp
pushf
pushf
mov
pushf
jmp
call
mov
pushf
push
lea
jmp
mov
push
pop
pushf
pushf
lea
jmp
stc
clc
rol
call
bts
xor
sar
bsf
mov
dec
mov
push
call
call
call
mov
push
pop
mov
pushf
mov
lea
jmp
push
lea
jnp
push
movsx
pusha
movsx
mov
pop
movsx
bswap
mov
movzx
mov
bswap
not
call
sub
clc
pushf
mul
pushf
mov
pushf
push
mov
jmp
mov
pushf
mov
push
lea
jmp
pushf
call
xchg
aad
mov
bts
sub
movzx
mov
pushf
test
cmc
not
bt
cmp
pushf
not
pusha
pushf
call
mov
mov
lea
bswap
mov
jmp
not
movsx
mov
push
mov
mov
call
push
mov
call
cmc
bts
sbb
cmc
lea
stc
jmp
movzx
push
bswap
call
jmp
push
call
jmp
mov
pusha
jmp
mov
pushf
xchg
push
movzx
mov
movzx
pop
mov
movsx
movsx
lea
movzx
pushf
pop
add
shrd
push
pop
clc
bt
xadd
mov
ror
mov
btc
shr
inc
not
not
stc
add
not
not
xadd
push
movsx
test
lea
pusha
pop
or
sub
movzx
movzx
mov
push
pusha
pusha
mov
lea
jmp
pushf
xchg
bswap
jmp
add
jmp
push
inc
pushf
pusha
mov
mov
dec
push
call
not
xchg
movsx
call
mov
mov
xchg
call
pushf
push
pop
mov
lea
jmp
push
pushf
xchg
jmp
pushf
inc
call
mov
bswap
pushf
pushf
pop
shld
shl
jmp
mov
mov
pushf
push
push
lea
jmp
mov
pusha
lea
mov
push
mov
pushf
movzx
xchg
call
pushf
mov
mov
pusha
push
lea
jmp
bt
jmp
movzx
pop
lahf
jmp
xchg
cmc
add
mov
sub
jb
cmp
clc
cwde
bt
bt
sub
call
mov
jmp
lea
jmp
mov
jmp
call
jmp
call
add
movsx
dec
movzx
sub
not
cmp
ror
dec
lea
sbb
shl
adc
rcr
sub
call
cmc
sub
jmp
pushf
pop
test
rcr
and
push
pop
dec
adc
call
jmp
push
not
mov
lea
push
not
pusha
mov
not
pusha
push
bswap
mov
movzx
call
push
sub
push
mov
pushf
inc
pushf
mov
mov
mov
lea
jmp
pushf
pusha
push
push
pop
pushf
pushf
pushf
lea
jmp
neg
mov
bswap
ror
shr
or
inc
lea
and
jmp
jmp
call
mov
pusha
lea
jmp
cmp
cmc
cmc
sub
stc
sub
push
jmp
push
bswap
push
movzx
not
bswap
push
not
push
bswap
movsx
push
jmp
bsf
rol
adc
mov
pushf
clc
call
pusha
pushf
mov
inc
call
cmp
add
pushf
mov
inc
pusha
not
lea
je
pushf
rol
cmc
test
clc
test
add
mov
stc
cbw
bt
mov
cwde
test
stc
sub
pusha
jmp
inc
and
not
movsx
inc
lea
xor
lea
sub
movzx
push
lea
lea
push
lea
jmp
call
cwde
mov
bt
cmp
jmp
push
mov
push
mov
pusha
movzx
mov
movsx
pop
mov
movzx
jmp
mov
pushf
pop
rcr
dec
bt
push
pop
lea
xadd
ror
mov
btc
cmc
mov
movzx
not
bswap
shld
add
rcr
shl
not
stc
lea
shrd
or
sub
bswap
mov
push
push
lea
jmp
shr
movzx
sar
shr
add
sar
dec
pushf
sub
bt
neg
test
setb
add
bts
shld
sub
not
dec
add
sub
ja
test
btc
mov
cmc
pushf
add
pushf
mov
pusha
mov
mov
lea
jmp
and
neg
shl
rol
movzx
call
inc
mov
pusha
cmc
add
push
lea
jmp
pushf
lea
cmc
lea
shr
sub
mov
mov
pusha
pusha
lea
jmp
add
add
jmp
mov
pusha
lea
jmp
mov
push
pop
mov
lea
jmp
jmp
pushf
jmp
pushf
movsx
or
neg
push
bts
xadd
movzx
not
push
bsf
add
sub
add
mov
adc
bsf
xadd
not
xor
add
xchg
call
mov
jmp
das
bsr
aas
mov
inc
clc
neg
mov
rcl
sub
mov
clc
bt
test
sub
jmp
pusha
mov
pushf
mov
mov
mov
pushf
mov
lea
jmp
mov
pushf
pop
mov
push
pop
push
mov
lea
jmp
push
pop
mov
mov
lea
jmp
pusha
pusha
mov
test
add
call
push
pop
pushf
mov
mov
lea
jmp
lea
mov
mov
pushf
mov
push
ret
btc
cmc
setne
jmp
